mov
test
cmpsl
cwtl
mov
cltd
bound
addr16
int
cmpsb
test
pop
arpl
repnz
adc
jnp
scas
aad
test
icebp
rcrl
pop
sub
stos
insl
inc
ja
sub
imul
pop
xchg
or
outsl
sbb
fldenv
popa
mov
addb
push
pusha
test
dec
or
adc
ja
aad
aad
cmp
sbb
pop
mov
mov
add
jne
pop
mov
nop
faddl
fisubrl
out
add
pop
ret
lret
lret
jecxz
inc
insl
decl
movsb
imul
lds
scas
or
push
cmpsb
fsubrp
imul
les
sbb
push
imul
mov
dec
loope
cmc
jnp
rorl
cmp
or
loopne
lret
lea
lret
jecxz
out
ret
push
pop
inc
adc
pop
ret
sbb
sbb
lock
dec
or
out
rcr
test
fmul
mov
pop
cmpsb
jbe
add
mov
loop,pn
mov
mov
call
add
jmp
mov
push
push
sub
push
pop
mov
sbb
sti
mov
xor
sbb
inc
test
add
inc
inc
mov
bound
sub
hlt
aad
adc
test
mov
mov
or
xlat
mov
push
test
sub
bound
cmp
jl
int3
jnp
lret
pop
mov
sbb
into
int3
sarb
inc
push
cmp
inc
xlat
or
add
in
rclb
dec
sub
jb
ret
iret
idivb
cmp
call
add
push
pop
add
pop
mov
decl
ljmp
imul
mov
push
mov
dec
ss
das
loopne
subb
mov
mov
mov
pop
cwtl
mov
jb
imul
test
or
push
or
mov
xchg
add
inc
clc
mov
inc
repnz
mov
ljmp
mov
cwtl
cmpsl
jecxz
xchg
std
sbb
repz
cltd
fistpll
rorb
xchg
in
jg
dec
lea
or
ljmp
push
loopne
lret
pop
mov
pop
mov
mov
sbb
and
das
testb
sub
inc
mov
ljmp
jg
icebp
adc
sarl
mov
inc
test
inc
test
mov
jg
scas
mov
inc
add
cmpsb
mov
faddl
mov
cmc
arpl
push
xor
std
fdivrl
push
xlat
fldl
cli
cmpsb
rcrl
adc
into
lock
inc
pop
adc
addr16
pop
neg
pop
and
iret
jbe
stc
and
push
add
fisubs
mov
inc
push
and
addr16
adc
or
and
and
loopne
push
out
call
rolb
mov
xchg
aaa
pop
cwtl
mov
push
stc
enter
and
xchg
jno
out
and
add
cli
aad
enter
mov
imul
inc
popf
loopne
pop
xchg
mov
rcrb
in
cmc
repnz
mov
aaa
dec
imull
test
pop
xchg
popa
gs
or
mov
pop
test
mov
push
leave
mov
filds
add
inc
nop
add
lea
outsl
loopne
push
into
xchg
mov
jge
jge
add
retw
cmpl
dec
or
aad
xchg
dec
repnz
test
sti
addr16
ret
xor
sbb
sub
mulb
inc
lcall
jns
js
jnp
fistpll
adcl
cld
sbbb
cmp
mov
adc
mov
mov
mov
jmp
inc
sbb
xchg
xchg
jae
test
dec
ljmp
or
mov
adc
loop
or
or
ficompl
ret
lods
inc
add
pop
sbb
or
mov
int
mov
insb
mov
and
mov
pushf
scas
mov
popa
loope
cmovbe
or
bound
mov
jnp
jge
and
in
fimull
lret
mov
push
sbb
mov
or
loop
sub
pop
movsb
jle
bound
lret
adcl
test
mov
push
xor
fidivrl
xor
adc
lds
insb
fisubl
aaa
mov
cs
out
sarb
pop
and
cs
cmp
loope
sbb
movb
loope
out
fidivs
mov
out
sbb
in
jp
leave
push
movsl
adc
bound
xor
out
sbb
pop
fdivrl
enter
repz
mov
in
jns
incb
mov
mov
pop
es
jl
xchg
ret
sbb
test
dec
rolb
ss
test
ret
cmc
es
loopne
adc
out
in
add
add
push
xlat
push
and
rorl
jl
data16
or
nop
jmp
sub
mov
adc
test
cwtl
push
maskmovq
cmp
or
test
ret
inc
fidivrl
or
jecxz
mov
je
sub
sbb
jl
push
aas
test
pop
scas
mov
loopw
add
clc
iret
fldt
jmp
sti
scas
add
in
jae
xlat
mov
repz
add
in
lret
in
jle
daa
cmpps
xor
mov
fwait
lahf
xchg
xchg
sbb
cmp
mov
mov
enter
test
or
jns
sti
nop
fcmovnu
cmp
int3
jnp
nop
inc
push
push
neg
pushf
mov
mov
push
fs
jae
mov
mov
test
sbb
adc
lret
inc
sar
jno
mov
sub
mov
mov
addr16
mov
push
pop
cmp
repnz
dec
shl
dec
addb
in
cmp
fsubl
test
fcoms
xchg
adc
inc
inc
sub
cli
push
pop
jbe
cltd
int
sbb
adc
jbe
testb
mov
push
pop
fildll
scas
test
outsb
adc
outsb
jns
imul
cli
mov
decl
shll
xchg
outsb
or
inc
xchg
mov
dec
push
dec
fstps
mov
push
loopne
push
mov
clc
sbb
in
push
sbb
mov
loope
sbb
mov
inc
lcall
shlb
mov
inc
pop
aam
push
jne
rclb
cmpsb
mov
shlb
mov
and
mov
int
subb
ljmp
psllw
add
inc
mov
jmp
stc
xchg
loopne
pop
lea
dec
ret
mov
mov
mov
sub
adc
test
or
cli
push
mov
xchg
xchg
nop
mov
sbb
lcall
jnp
and
dec
test
jns
or
mov
std
dec
ret
dec
sti
aas
xchg
push
jge
mov
xor
xchg
pop
pusha
into
xchg
mov
shl
or
xchg
imul
arpl
mov
adc
das
loopne
push
xorl
cmpsl
dec
fimull
and
in
repnz
mov
arpl
pop
sti
or
leave
jmp
xor
inc
mov
fst
dec
loopne
popf
or
cmp
les
lret
cli
int
call
iret
xchg
mov
or
leave
icebp
outsb
xchg
mov
jbe
testb
push
sbb
push
lea
jg
pop
addb
pop
daa
test
add
ljmp
ret
aaa
sbb
aas
xor
jnp
das
decb
jbe
cltd
jecxz
sbb
push
lock
push
test
icebp
and
xor
fisttpl
inc
add
shlb
push
or
mov
cmp
cmp
mov
mov
mov
imul
or
cld
sbb
pop
mov
hlt
je
aaa
inc
mov
iret
movsb
enter
or
adc
xor
add
ficompl
mov
cmp
and
add
jmp
mov
std
divb
into
mov
icebp
shl
lcall
dec
adc
insl
or
add
dec
aas
jmp
push
scas
mov
add
hlt
clc
stc
ret
mov
or
repz
pop
adc
mov
addr16
pop
xchg
movswl
sti
jg
dec
fists
stc
mov
fisttps
sub
mov
mov
dec
in
sub
sub
test
jns
repz
xorl
xor
hlt
push
sbb
or
mov
adc
lret
cld
mov
lock
mov
sbb
pop
inc
push
daa
sbb
lret
and
add
std
dec
jg
pop
loopne
xchg
clc
sub
pop
int3
and
int3
xlat
gs
add
sbb
lahf
mov
mov
add
pop
inc
add
inc
dec
push
sbb
inc
mov
fldl
and
movsb
xor
cmpsb
jl
mov
int
dec
es
push
loopne
dec
out
aad
les
mov
adc
aaa
idivl
lods
lock
enter
adcl
das
inc
jg
and
iret
add
out
stc
mov
std
adc
xor
lcall
ror
ljmp
das
pop
jmp
pop
or
das
push
mov
icebp
adc
ret
sbb
mov
nop
ljmp
add
lahf
mov
stc
push
gs
jg
popf
xor
rcrl
stc
dec
push
adc
inc
cli
lret
add
jae
arpl
and
scas
loop
jns
outsl
adc
cld
hlt
aas
mov
lods
xchg
mov
lock
pushf
ljmp
fdiv
pop
lret
jmp
xchg
mov
leave
stos
jge
pop
mov
dec
insl
lods
in
stos
sub
decl
lds
scas
xchg
add
rclb
mov
xchg
xchg
inc
adc
adc
int3
incb
inc
jg
jb
imul
sbb
push
fcomps
pop
out
add
frstor
pop
add
rclb
movsl
jns
mov
shll
mov
out
jns
subb
mov
mov
andl
dec
xchg
inc
daa
adc
std
sub
xchg
sti
inc
xchg
test
idivl
les
adc
jl
leave
jno
and
jle
adc
inc
mov
jmp
xor
repnz
pusha
mov
stos
lea
cmp
mov
adc
jp
xchg
xchg
out
mov
mov
loopne
inc
jb
push
movsb
xchg
cli
mov
in
or
in
out
lret
jo
or
sbb
sar
iret
into
push
jge
cmp
cltd
jge
jne
cmp
xchg
inc
pop
push
ret
sbb
sub
mov
and
cmc
push
popf
imul
outsb
inc
stos
pop
fisttpll
sahf
mov
mov
loopne
jnp
sbbl
mov
xlat
outsb
sub
ficoms
pushf
pop
into
mov
jl
lcall
cmp
mov
out
fdivrp
in
sub
mov
call
dec
mov
inc
mov
xor
gs
sbb
repnz
mov
lock
xchg
pop
xchg
push
std
sbb
push
pushl
ret
cmpsl
out
add
dec
decb
cmp
subl
inc
mov
ret
mov
iret
pop
sbb
test
ja
or
push
mov
aas
mov
cwtl
or
imul
xchg
xchg
inc
out
inc
popf
jle
cltd
sub
fdiv
sbb
test
jo
or
ss
out
iret
or
pop
bound
or
jmp
pop
enter
pop
aaa
mov
ljmp
iret
and
sbbl
mov
adc
or
jns
idivb
aas
orl
imul
loopne
mov
cmpsl
pusha
inc
fld
sbb
dec
in
xchg
mov
lock
dec
lds
in
aas
ret
int3
shl
push
icebp
cs
push
cltd
sahf
add
cmp
lret
sub
lods
xorb
add
cmp
aad
enter
scas
pop
stos
fcompl
xor
imul
cmpsb
mov
mov
pop
inc
add
mov
jg
xchg
aad
cmpl
add
or
push
jg
std
mov
std
frstor
aas
hlt
push
outsb
inc
mov
in
mov
out
lods
fs
or
xchg
mov
fbld
adc
ret
and
adc
rorb
or
icebp
nop
cmp
iret
lret
adc
in
loop
addb
popa
sbb
mov
jbe
loopne
sbb
pop
das
lret
dec
add
jl
cmp
idiv
dec
cmp
outsb
mov
push
je
push
cmp
pop
jl
lea
dec
imul
lods
dec
insb
js
jnp
xchg
xchg
jp
push
sub
pushf
mov
pop
dec
xlat
movsb
or
fcmovnb
out
leave
cmpsl
pop
or
and
rcr
fsubrl
outsb
cltd
shll
into
jne
pop
push
or
pop
inc
xchg
mov
jl
jge
subb
movsb
xchg
jmp
xchg
sbb
jp
xchg
jle
and
mov
loop
mov
sub
test
scas
fsubrl
test
mov
jmp
popa
mov
jmp
push
push
push
fdivl
fs
std
lock
mov
mov
or
sub
or
mov
or
jge
inc
mov
push
cmpsb
jne
mov
faddl
aam
mov
jle
subl
fimuls
ficoml
fbld
loop
inc
and
lcall
pop
incb
sub
ret
into
into
movsb
loopne
sbb
add
add
lahf
addr16
aaa
inc
xchg
loope
xor
int
mov
jmp
push
inc
dec
cli
sbb
negl
dec
cli
inc
mov
xchg
fsts
sub
xchg
mov
push
popf
pop
sub
push
xchg
cmp
fdivl
push
push
mov
cmp
sub
add
scas
pop
and
adc
inc
arpl
divb
jne,pt
das
popf
dec
pop
pop
sbb
pusha
jno
dec
jge
inc
and
jb
scas
test
sbb
imul
movsb
push
or
cs
dec
cltd
pop
add
addr16
adc
jmp
into
fidivrl
imul
lods
mov
das
sbb
outsl
lahf
movsb
clc
addr16
shrl
xor
mov
jne
cmpsb
mov
push
in
push
inc
add
scas
adc
aam
sbb
sbb
popa
pushf
xchg
push
xchg
lock
fidivl
sub
jns
inc
les
xor
jmp
fimuls
ss
ja
inc
inc
pop
lret
xchg
divl
das
loop
ret
or
or
movsl
or
sub
aad
movups
loope
orb
push
mov
add
adc
inc
sbb
mov
mov
jg
push
nop
dec
xchg
pushf
aas
pop
xchg
sahf
add
or
dec
mov
ljmp
stos
test
stc
dec
shlb
xor
or
pop
or
mov
stos
sub
jb
call
and
sub
xor
cwtl
mov
push
sub
sbb
insl
test
hlt
jnp
and
cs
add
cmp
aam
xor
lret
fwait
push
stos
push
mov
fdivrl
add
jbe
jecxz
mov
clc
lods
ret
daa
ret
jne
sub
movsb
pusha
aam
jp
int
xor
addr16
adc
mov
movsl
sti
decb
sbb
je
or
ljmp
mov
ret
pop
sub
jne
mov
dec
inc
jmp
cmp
jmp
scas
and
cmp
loopne
jmp
and
repz
lcall
inc
adc
mov
mov
int
lret
adc
pop
test
or
xchg
mov
nop
inc
test
ja
adc
test
test
mov
stos
notb
scas
iret
mov
ja
and
cmp
clc
pop
push
sbb
and
xlat
fwait
inc
dec
adc
movb
shrb
aam
pop
dec
lret
dec
mov
ret
dec
push
jno
adc
or
sbb
cmc
push
xchg
mov
clc
xchg
repnz
cwtl
out
jmp
mov
aas
or
add
push
pop
in
and
xchg
push
inc
fisttps
push
rcrl
sub
or
lret
adc
cmp
popf
cwtl
or
dec
pop
cltd
sbb
mov
mov
andl
xchg
hlt
pop
xor
or
cmpsl
test
addr16
cmpsl
or
cli
lahf
aaa
inc
fsubrl
jmp
cmpsb
pop
out
cwtl
andb
or
aam
cmpb
aam
aas
or
loopne
lock
mov
sbb
ss
add
fstpt
ss
dec
adc
and
jecxz
dec
adc
jbe
orb
inc
cmp
push
pop
iret
int
pushf
leave
fisubrs
lods
xchg
add
pop
fbld
lock
mov
fisubrs
popf
outsl
jl
or
xchg
push
lcall
jl
stos
jp
pop
inc
inc
dec
insb
popa
mov
dec
xorl
popf
cmc
push
mov
imulb
or
add
mov
push
mov
shrl
je
cmp
sbb
add
and
or
jle
jae
dec
rorl
iret
push
adc
or
mov
or
or
mov
ss
mov
or
push
in
outsb
and
movsb
cld
mov
cltd
push
sarb
inc
sti
int
jns
dec
addb
aam
xchg
lods
scas
cmpsb
pop
cmpsl
sub
push
push
push
xchg
inc
fwait
add
pushf
mov
cmpsb
movb
push
sub
mov
pushf
mov
mov
pop
add
jnp
cmp
inc
mov
out
pop
xchg
mov
movb
jg
sahf
adc
or
adc
cld
inc
inc
xor
inc
sub
testl
std
adc
rolb
imul
loope
decb
ljmp
mov
popf
in
cmpsb
lcall
mov
sbb
and
std
das
sbb
push
pop
sar
cli
stos
jg
or
or
mov
adc
lahf
sub
inc
cmpsl
cltd
xor
mov
push
cmp
and
pushf
sbb
adc
xchg
lock
ja
add
adc
dec
jnp
or
and
and
shl
hlt
sbb
sub
sbb
daa
std
xchg
ss
enter
push
mov
enter
mov
pop
mov
bound
daa
or
mov
bound
push
xor
out
js
push
sub
jge
sub
test
inc
and
jno
jl
scas
push
cmp
mov
mov
insl
es
fwait
inc
sbb
imul
mov
adc
jns
mov
jg
stc
ret
call
aad
mov
or
test
pop
mov
int
scas
mov
sbb
cs
dec
idivb
in
jge
outsb
mov
xchg
jl
add
inc
sbb
xchg
add
lods
shr
adc
push
jmp
cmc
mov
test
ror
sub
fnstsw
xlat
or
dec
jecxz
xchg
stos
test
cmc
aaa
cmp
iret
mov
out
cld
data16
or
enter
aam
push
inc
mov
insb
inc
xor
aad
cmp
mov
jo
fidivl
shrl
cmp
cmc
scas
lahf
adc
insb
push
cld
sbb
jnp
into
lahf
push
xchg
dec
mov
sbb
lret
jle
mov
ror
or
mov
or
loopne
pop
inc
sbb
push
popf
or
repnz
add
aad
out
cld
mov
or
das
sub
jp
fstl
sbbb
dec
hlt
stc
stos
ja
div
aam
jmp
dec
inc
push
mov
sbb
ds
pop
mov
push
or
mov
mov
mov
jl
sub
icebp
iret
lcall
jb
pop
xchg
or
cmp
scas
pop
jmp
std
mov
cmp
pop
decb
and
mov
jmp
ret
adc
jae
or
bnd
divb
fbld
aad
sbb
or
ret
test
fwait
mov
mov
pop
leave
ljmp
push
shlb
mov
add
pop
add
test
push
inc
hlt
sbb
shlb
xchg
std
add
dec
shrb
or
jb
pushl
arpl
enter
cmpl
out
mov
iret
sar
aas
icebp
call
int3
dec
lahf
es
jno
mov
aam
aaa
or
clc
cmp
lea
push
dec
xchg
push
call
pop
or
rorb
inc
cltd
add
pop
jae
or
or
leave
fcompl
pop
fimuls
jbe
into
fs
adc
xor
adc
add
add
neg
add
mov
jle
pop
lret
mov
rorb
and
loopne
fidivrs
sub
lock
daa
inc
lea
daa
inc
rolb
mov
fwait
addr16
cmp
into
and
mov
lahf
inc
jg
dec
mov
mov
xchg
and
adc
jnp
sub
sbb
mov
imul
mov
jo
jge
faddl
shrl
das
xlat
add
ja
js
popf
mov
pop
mov
inc
fs
dec
xchg
out
cmpl
or
sub
jns
pop
das
daa
aam
insl
cmpb
jle
xor
in
fnstenv
xchg
xchg
cltd
xchg
enter
push
scas
xchg
mov
orb
mov
loope
nop
int3
psrld
or
stos
pop
jg
inc
push
push
cmp
es
out
or
xchg
add
mov
fidivrl
out
nop
jo
into
pushf
inc
in
inc
popa
xor
jmp
js
or
out
mov
repz
test
pop
pop
lret
inc
jg
sub
xchg
mov
ficoml
clc
popa
sub
jp
pop
jecxz
add
mov
sub
loopne
stc
repz
or
sbb
and
mov
fcomip
mov
add
inc
std
mov
fst
mov
jmp
push
and
or
in
pushf
and
int3
and
inc
mov
stos
mov
data16
dec
inc
or
outsb
mov
orl
icebp
cld
aad
cmpsl
pop
or
popf
das
mov
or
pop
nop
jg
jg
lods
cmp
out
es
xchg
hlt
add
movl
cmp
jmp
das
fidivrs
xchg
or
lahf
mov
lods
imulb
xchg
mov
je
mov
jae
hlt
cmp
jo
ficompl
sti
jno
lcall
sbb
imul
iret
ljmp
int3
inc
mov
add
jp
push
adc
repnz
mov
sub
dec
mov
xor
movsl
push
fs
rolb
hlt
in
mov
push
div
sarb
jne
push
jle
sbb
mov
stos
push
iret
std
fs
jne
in
lret
jb
loopne
filds
push
fsubl
frstor
call
push
dec
pushf
rorb
mov
int
subl
sub
ljmp
mov
mov
push
ds
insb
jns
lods
nopl
xor
sbb
cli
cwtl
push
pop
pop
lret
sub
mov
addr16
cmp
ljmp
lock
adc
sbb
cmpb
xchg
fistpl
push
add
push
mov
push
sbb
in
mov
xor
sbb
xchg
icebp
rol
jg
jb
pop
xchg
xor
sub
cmp
adc
mov
dec
daa
sub
mov
or
dec
inc
add
nop
ficomps
inc
fwait
sbb
pop
mov
xchg
stos
in
push
sbb
mov
icebp
es
std
nop
fdivp
lods
xor
dec
xchg
cmp
cwtl
mov
popa
fwait
jle
rol
sub
fs
daa
ja
insb
aaa
jb
pop
daa
and
xchg
in
ret
dec
enter
cmp
inc
rorl
lods
push
stos
pusha
mov
mov
mov
popa
scas
pop
in
bound
out
in
sub
xchg
lds
or
sub
incb
sub
mov
jmp
cmc
imul
hlt
mov
ss
and
inc
sub
cltd
xor
pop
add
dec
xlat
cmp
aaa
ljmp
fdivp
push
in
add
cli
ret
pop
int3
jg
adc
xchg
int3
sub
mov
icebp
cmpl
add
xor
or
cmp
leave
pushf
pop
inc
lret
addr16
mov
iret
mov
push
xor
xchg
mov
adc
cmp
cwtl
push
xchg
ret
inc
xchg
xchg
sub
cmpsb
ja
adc
call
clc
aaa
jnp,pt
jecxz
cmp
sahf
add
mov
mov
add
push
or
mov
icebp
repnz
ss
mov
faddl
inc
pop
cli
push
or
and
nop
out
in
cmovno
loope
out
mov
or
xchg
and
dec
arpl
cmp
dec
repnz
cwtl
pop
jb
lock
into
fisttpl
lods
lods
lret
jmp
add
fisubs
cmp
or
sbb
lods
pop
and
lret
lea
or
cmpsl
push
repnz
pop
mov
test
xchg
dec
mov
loope
lcall
std
xchg
xor
ficomps
mov
inc
enter
or
cmc
sub
data16
push
mov
mov
mov
xchg
ss
fscale
or
or
addl
addr16
mov
adcb
xor
cltd
cmc
xchg
ficoms
mov
cltd
jmp
push
insl
push
mov
fcoms
sbb
mov
inc
push
sub
jmp
lret
jmp
or
inc
inc
sbb
cmpsb
mov
dec
scas
mov
int
aaa
xorl
mov
cmc
cld
sub
enter
xlat
cs
inc
popl
fcomip
movsb
sub
adc
xchg
movsl
mov
cmp
mov
fldenv
xchg
pushf
add
xchg
xchg
add
fwait
dec
ss
push
sbbb
cwtl
cwtl
dec
aad
dec
repz
sub
adc
inc
pop
mov
sub
xor
pop
xor
out
ret
pop
sub
loope
subl
icebp
or
pop
lods
add
pop
push
mov
cltd
nop
xchg
pop
push
fcompl
mov
inc
clc
lds
ljmp
push
inc
outsl
pop
xor
mov
ret
mov
int
aad
repnz
iret
add
xchg
xchg
dec
cmp
cmp
lods
pop
lahf
fwait
es
shlb
out
lods
loop
adc
xchg
mov
sub
mov
pop
rolb
mov
sahf
mov
loope
cmp
and
xchg
cmp
push
mov
or
popf
sbb
push
add
pop
ficomps
push
mov
jns
dec
adc
xchg
cld
add
jne
inc
pop
int
mov
ret
andb
cmpsl
leave
and
or
std
call
in
daa
in
out
push
mov
mov
inc
mov
sub
adc
push
inc
nop
push
cmp
out
xchg
or
push
aad
mov
push
ret
jno
xchg
test
dec
mov
enter
movsb
xchg
xchg
lods
pop
xchg
jecxz
icebp
cli
cli
xor
ss
addr16
ljmp
jge
jge
repz
mov
jg
pop
call
xlat
mov
mov
adc
cli
mov
push
xchg
fisttps
pop
inc
andb
jne
or
enter
pop
pop
sbb
inc
pop
test
mov
das
xchg
lret
loope
shll
out
xor
add
jmp
scas
and
addr16
roll
push
sbb
lret
orl
cmp
jns
pushf
jmp
unpckhps
ds
mov
cli
pop
push
arpl
filds
or
les
mov
stos
out
push
push
pop
loope
rcrb
pop
xchg
dec
cmp
pop
or
cmpsl
mov
mov
adc
mov
js
data16
in
sti
mov
mov
push
xorl
adc
jbe
xchg
movsb
lea
sub
xchg
xchg
push
inc
into
icebp
pop
out
fwait
adc
ror
out
hlt
xchg
pop
and
cmp
dec
mov
adc
mov
dec
dec
sub
mov
lds
fbld
loopne
or
nop
shll
add
ret
and
and
sub
and
xchg
and
cli
add
stos
rolb
push
lcall
sub
jle
and
lea
movsb
xchg
lret
jns
or
lcall
xor
xchg
or
repz
fsubrl
sbb
outsb
sar
fiadds
add
gs
pusha
sar
sub
inc
es
jl
inc
loopne
jle
paddb
add
aad
ss
loopne
rorl
shrl
sbb
test
out
std
xchg
mov
inc
inc
nop
cmp
mov
cld
orb
xor
cmp
mov
sbb
shll
mov
popf
xor
lods
pop
push
inc
jge
pop
xor
mov
cmp
mov
lea
lods
add
adc
mov
loopne
sti
les
lea
mov
xchg
mov
lcall
cmp
mov
sub
icebp
scas
push
cli
xchg
pop
das
cmpsb
jae
loop
and
incl
inc
jle
in
movsb
subb
orl
pushf
mov
sahf
adc
pop
xchg
pop
mov
mov
outsb
adc
pushf
add
rol
jb
lret
loope
sub
lcall
jl
push
mov
test
mov
mov
jge
xchg
stc
mov
pushf
xchg
xchg
testl
clc
aas
pushf
jl
fdivrl
movsb
or
and
mov
pop
or
ud0
faddp
ret
into
sar
push
aaa
jbe
stos
xor
xchg
js
loope
and
cmp
cmpsb
repnz
clc
loop
and
out
lcall
fistpll
rcll
or
div
mov
cmc
dec
lret
mov
and
hlt
ss
cmc
in
out
pop
fsubp
loopne
xlat
and
push
jmp
fdivs
in
clc
ret
clc
shl
add
into
in
aas
or
mov
pop
test
fcomip
mov
push
adc
aam
sbb
push
filds
mov
jno
lcall
negb
pop
into
mov
ret
stos
xor
cmp
jnp
fwait
repz
jl
jle
xchg
scas
pop
movsb
fucom
rorl
test
lret
mov
sub
call
or
shlb
in
cmp
test
sbb
mov
jmp
inc
cmp
dec
jo
jbe
shlb
loop
sbb
icebp
mov
outsl
push
roll
adc
xchg
cld
fidivs
movsb
aad
aad
push
mov
mov
cmp
inc
or
out
jae
push
and
inc
xchg
inc
popf
ss
and
sbb
pop
push
pop
aaa
popf
dec
sub
repnz
xor
mov
sarb
cld
shrl
sbb
push
shlb
pusha
mov
mov
jge
jl
out
dec
lret
popa
add
jbe
inc
or
inc
mov
pop
js
mov
aaa
inc
into
cli
mov
push
movsl
loop
jno
fwait
icebp
add
cmpsl
sti
fsubrp
data16
jecxz
sbb
std
fnstenv
push
mov
test
lds
adc
ffree
xor
loop
adc
ret
lock
mull
sbb
ja
pushf
or
cwtl
sbb
and
mov
fbld
ret
xchg
cli
mov
stos
xchg
cmp
enter
xchg
push
cs
std
xlat
xchg
jo
push
or
or
jno
jns
xor
and
enter
or
and
cmp
aam
xor
aaa
jp
jbe
test
push
jno
mov
sub
mov
scas
xlat
lret
ljmp
or
lods
add
sti
cmp
insl
sahf
nop
mov
mov
sbb
mov
loope
mov
push
dec
adc
mov
dec
lods
mov
xor
int3
dec
push
stos
dec
lcall
stos
in
cwtl
aad
cmpsb
mov
add
popa
sbb
movb
ja
addb
idiv
inc
ds
jb
mov
cmpsb
adc
notl
pop
leave
loopne
js
mov
out
or
pop
enter
stos
mov
pop
jnp
repz
inc
fistpl
sub
lock
mov
andl
test
orl
add
scas
jle
push
nop
sahf
aaa
inc
push
fists
ss
in
incl
or
pop
repz
outsb
popl
or
daa
add
sub
sbb
sar
adc
sbb
subb
mov
aaa
pop
cmpsl
aaa
xor
test
test
imul
sarl
clc
and
xchg
test
pop
std
test
clc
cmc
jmp
stos
dec
push
mov
fnstenv
incb
push
adcb
push
pushf
xchg
sbb
adc
cld
mov
adc
push
ja
insb
aas
sbb
hlt
adc
lcall
xchg
mov
pop
cmp
rorl
pop
or
inc
loopne
push
jb
flds
or
scas
pop
jp
es
inc
stos
repnz
test
and
dec
stos
stc
push
jge
dec
addb
sub
push
lret
add
sbbl
int
mov
outsl
mov
mov
adcb
pop
mov
or
fwait
out
adc
xor
mov
mov
rolb
stos
push
xchg
loope
imul
xchg
jne
orb
pop
stc
daa
lods
lret
cli
enter
cmp
sbb
mov
nop
scas
mov
lret
or
loop
test
ror
insb
bnd
push
fstpl
dec
ljmp
cmp
int
inc
push
push
pop
pop
aaa
or
idivb
mov
cmp
pop
sub
dec
call
int3
add
xchg
out
repz
mov
mov
xchg
out
jmp
int
push
jno
imul
fcomp
js
std
mov
mov
nop
adc
pushf
mov
sbb
sbb
cmp
imul
inc
mov
add
insl
push
into
jae
sbb
add
fwait
xor
add
and
insl
flds
xchg
jg
pop
push
or
mov
incl
push
or
jle
or
scas
lahf
sbb
fnsave
dec
mov
lahf
xchg
filds
repz
fidivrl
push
push
iret
subl
out
test
loop
jg
stos
mov
pop
and
sbb
pop
push
add
sbb
mov
repnz
es
scas
push
enter
pop
shll
loope
test
stos
pop
adcb
scas
mov
pop
pop
inc
or
sbb
dec
insb
jbe
lret
or
jecxz
pushf
add
push
outsb
loop
mov
scas
push
xchg
repz
xlat
jnp
mov
std
call
insl
pushf
hlt
mov
or
or
imul
test
vcmpss
scas
mov
cmc
mov
cmpsb
scas
mov
jnp
out
subb
dec
test
scas
inc
inc
fcomp
shrl
mov
mov
add
testb
rcl
jge
shlb
fs
clc
dec
mov
mov
xlat
or
popf
pop
aas
movb
repz
jns
fabs
addb
or
js
lock
rcrl
in
cmp
into
and
pop
push
dec
bound
push
xor
out
notl
and
arpl
lret
iret
std
lret
jb
scas
and
sub
mov
or
pop
and
push
mov
sbb
xor
movl
inc
lods
dec
into
ljmp
add
jle
sub
push
shl
cmpsl
mov
fxch
sahf
jb
rclb
xchg
add
jmp
stc
repz
stc
mov
outsb
pop
mov
icebp
cmp
mov
sub
or
mov
xor
fwait
lcall
inc
sbbb
xor
into
xchg
loopne
clc
pop
xor
mov
dec
xor
popa
mov
fisubrs
xlat
mov
jg
push
int3
out
icebp
pop
and
aaa
nop
inc
aad
rclb
xlat
lods
push
es
stos
mov
jmp
jg
fcoms
xor
pushf
je
inc
push
inc
and
xor
ds
scas
dec
push
xlat
lahf
inc
jnp
dec
push
pop
mov
push
popf
or
loope
mov
test
les
enter
std
ds
loopne
aad
dec
jno
cmp
aad
mov
lods
pushl
cmpsb
not
dec
adc
es
sub
xchg
or
add
xchg
cmc
pushl
xchg
pop
xlat
inc
inc
mov
cmp
add
jae
mov
xor
data16
cmp
and
cs
sarb
icebp
std
add
and
arpl
loopne
xor
aaa
pop
push
inc
sbb
lods
sbb
cmpsl
mov
and
icebp
lcall
addl
pop
or
les
adc
fsts
dec
cmpsb
in
mov
iret
addl
adcl
and
out
fisttps
lock
sub
cli
dec
aas
and
cltd
lret
je
add
mov
lock
daa
fwait
sub
mov
lock
add
ds
andb
sub
add
div
ljmp
mov
mov
push
sub
or
lods
sbb
dec
cmp
and
stos
pop
shll
xchg
aad
lcall
call
mov
test
nop
cmp
inc
loope
xor
cmpl
cwtl
daa
and
out
cld
cs
fistps
stos
push
or
mov
and
add
and
sbb
mov
or
imul
ja
xchg
lock
fnsave
sbb
xor
cwtl
scas
dec
stc
pop
rclb
ja
incl
sbb
and
ds
test
push
add
fbstp
loope
or
or
sub
fbld
jno
mov
jle
mov
sbb
jno
aad
push
adc
mov
jb
punpckldq
and
aam
int
add
xor
out
into
clc
movsl
mov
movsb
test
lcall
cli
lret
mov
in
call
fsubr
mov
pop
repnz
inc
xchg
add
mov
out
push
mov
mov
and
push
dec
movsl
sbb
das
adc
jno
inc
dec
out
es
add
mov
addb
rclb
sub
shrb
js
loop
leave
out
test
mov
push
xchg
xor
lock
ret
cmpsl
sub
mov
jg
mov
aas
mov
jne
popf
and
movsb
lock
cmp
mov
loope
fwait
and
les
lahf
movsl
xor
inc
pop
xchg
in
jno
inc
and
or
daa
shrl
push
or
dec
dec
inc
pusha
push
lock
dec
jg
rcrb
inc
pop
es
xchg
pop
xchg
sbb
pop
lods
int3
test
sbb
leave
mov
push
and
push
jp
xchg
push
mov
stc
pop
or
pop
push
push
pop
sbb
dec
test
adcl
jg
cmp
icebp
test
in
jmp
enter
jmp
sbb
mov
ss
xor
cli
ss
ret
sub
and
mov
or
ficoms
xor
scas
nop
aas
and
jo
lea
gs
in
mov
or
sub
cmp
ds
adc
push
aaa
ret
xor
jmp
ftst
dec
in
sub
mov
add
cwtl
sub
sbb
lds
stc
or
dec
cmpsb
and
sbb
mov
cmp
shrl
and
ss
mov
fstps
cli
pop
jl
xchg
inc
or
rorb
and
mov
repz
mull
or
sub
sbb
stos
jns
stc
pop
fisubrl
dec
jle
jg
xor
cmpsl
jp
sbb
mov
add
ss
in
fdivr
repnz
repnz
sarb
xchg
mov
gs
stos
orb
add
addr16
push
repnz
js
leave
push
pop
ss
inc
mov
add
xchg
scas
jmp
test
sub
adc
rolb
int
cmp
jns
dec
hlt
xchg
dec
push
test
je
sub
popa
and
push
inc
daa
mov
xchg
pop
xor
add
add
mov
or
xor
add
popa
mov
add
xchg
adc
mov
dec
inc
push
fbld
scas
loopne
icebp
and
ds
ror
ds
sbb
dec
cs
xor
mov
jg
out
cltd
mov
loope
lods
out
mov
xchg
and
sub
nop
add
inc
enter
pop
cli
push
or
mov
inc
adc
cmp
fistps
mov
mov
and
subl
xchg
inc
pop
cmp
inc
scas
daa
mov
subl
fldl
sub
enter
loop
fisttps
lret
std
adc
jecxz
xchg
and
mov
cwtl
add
int
xor
xchg
lcall
adcb
aaa
jp
mov
cmp
dec
sub
movsl
add
aam
lock
xchg
pop
adc
negl
sub
sub
mov
popa
fwait
lret
cmp
data16
inc
xchg
aad
cmp
mov
mov
into
push
dec
mov
leave
fistps
xchg
jg
or
push
test
sti
sub
jo
add
xchg
enter
sub
push
xchg
mov
cld
sub
jecxz
repnz
cs
add
leave
test
adc
in
sbb
neg
cmovbe
xchg
je
aad
and
int3
outsl
in
pop
stc
mov
and
dec
cmp
je
mov
and
and
testb
jecxz
dec
xchg
cli
sub
lock
and
mov
iret
and
icebp
sub
sahf
pop
push
mov
dec
or
movsl
sbb
iret
es
ror
xlat
and
adc
and
aam
mov
push
in
pop
dec
out
inc
or
lods
out
jnp
push
mov
xchg
dec
cmp
ljmp
jp
loop
jno
cmp
sub
cli
fiadds
inc
ss
mov
enter
lret
loopne
push
mov
out
mov
or
mov
adc
pusha
stc
and
mov
lahf
fcmovnu
imul
push
adcb
dec
orl
mov
fwait
pop
rorb
sbb
dec
repz
push
pop
sub
jp
fidivrs
dec
mov
pop
mov
sub
cmp
cmp
scas
mov
lahf
outsb
ds
rcrb
or
mov
dec
leave
subl
aaa
adc
in
loopne
add
pusha
mov
mov
mov
mov
xor
lea
dec
repnz
push
out
pop
adc
andl
je
xor
xlat
cld
add
push
fisttpll
rcll
xor
pop
sbb
shlb
movb
cmp
sbb
insb
and
andb
sbb
mov
daa
pop
pop
push
mov
cmp
adc
push
das
jb
clc
jge
cmp
push
fsub
cld
mov
xorb
push
mov
or
lea
das
pop
jp
repz
popf
ret
and
int3
pop
fdiv
es
les
inc
ret
dec
jg
test
pop
sub
inc
jecxz
add
jge
add
fwait
ret
jns
jecxz
out
inc
mov
jge
loop
cmpsl
pushf
leave
adc
repz
ja
popf
mov
scas
enter
add
roll
mov
mov
daa
test
push
mov
or
jle,pn
test
aam
cld
inc
nop
add
xor
jg
int
xchg
push
add
push
cmp
add
mov
mov
mov
inc
sub
cld
xor
adc
lret
xchg
cs
jg
jecxz
pop
sbb
mov
in
test
mov
insb
push
lahf
xchg
pushf
xchg
xorl
fcoms
rcrb
leave
inc
xchg
scas
hlt
xor
pop
ret
add
mov
dec
push
sub
popl
inc
mov
out
lock
data16
cmp
popf
dec
xlat
mov
mov
mov
jnp
aaa
adc
push
jbe
orl
cmpl
popf
dec
mov
dec
cmp
ficoml
mov
repz
daa
test
mov
mov
jle
test
xchg
ret
xchg
dec
icebp
cmp
dec
mov
pop
dec
icebp
rcl
cmpl
stc
aaa
and
sahf
notl
add
cmp
ret
pop
adc
outsl
push
test
popa
jno
icebp
and
mov
mov
out
popa
ljmp
jp
jle
jge
fwait
push
jle
mov
xchg
shlb
adc
mov
xor
fdivr
shl
xchg
and
aad
call
adc
cmp
cwtl
xchg
fimuls
inc
outsb
xor
loopne
inc
lret
cmpsb
cmp
and
adc
int
roll
xchg
inc
mov
and
jg
push
and
sub
jno
inc
cmc
sub
add
int3
pushf
iret
ss
mov
sbb
pop
js
subb
push
loope
pushf
in
jns
daa
sbb
rolb
cmpsl
mov
mov
inc
out
jb
adc
sti
inc
pop
ja
inc
shrb
jg
jp
cwtl
inc
mov
fildl
mov
and
pushf
mov
into
mov
mov
jmp
jmp
ljmp
mov
mov
adc
dec
sti
lods
cmpsl
das
aam
enter
in
and
lret
fwait
lods
push
pop
sarl
jle
lock
cli
mov
aaa
sbb
sub
frstor
into
sub
jmp
pop
add
pop
popa
sbb
cwtl
aaa
or
mov
jp
sarb
push
sbb
jbe
jg
or
mov
push
jge
push
fisubl
negb
lret
or
push
dec
and
push
icebp
push
inc
push
fists
es
mov
addr16
add
movsb
mov
sub
add
cli
and
loop
arpl
dec
dec
xor
or
and
mov
adc
push
insb
pop
inc
pop
inc
cs
inc
jo
cmp
orl
and
jo
imulb
sar
pop
sub
bound
rolb
jns
testl
cltd
push
aaa
test
dec
add
shll
lret
jo
push
xchg
xchg
push
leave
cmc
lock
mov
lahf
fistpl
dec
es
or
hlt
jmp
jae
fldpi
cmp
gs
jne
ds
sub
aaa
sub
pop
xchg
push
push
xchg
jmp
dec
mov
cs
jnp
push
mov
add
cmp
call
test
out
push
test
cs
pop
mov
bnd
jge
sub
xchg
pop
int
into
cs
sti
sar
cs
xchg
lret
fiadds
xchg
push
push
fists
or
mulb
addr16
jno
inc
stos
mov
daa
pusha
fsubs
or
and
mov
jns
addl
shrd
and
push
xor
or
mov
mov
daa
mov
xchg
adc
mov
pop
imul
out
push
adc
test
and
cmc
pop
pop
pop
sub
inc
cmpb
inc
add
mov
pop
lock
clc
cld
ss
pop
ljmp
icebp
mov
adc
mov
add
push
pop
lds
loopne
cmpsb
scas
cwtl
adc
outsb
mov
mov
rcrl
sbbb
fistpll
lea
push
lahf
xor
add
pop
pop
stc
inc
data16
aas
int
ret
mov
nop
out
in
mov
out
cs
sub
inc
lret
jnp
subl
xchg
sub
or
jb
iret
xchg
imul
mov
stc
insb
test
push
ficoms
push
push
icebp
les
pusha
rolb
jge
pop
idivb
in
fwait
gs
pop
icebp
or
pop
jae
pushf
push
push
dec
inc
cmp
cmc
push
jae
mov
jb
psubq
jecxz
inc
push
loopne
and
mov
out
minps
add
or
push
not
scas
lds
mov
fstl
xchg
jmp
sbb
mov
push
xor
mov
call
and
cmp
pushf
out
sub
gs
ljmp
mov
pop
inc
lea
or
aad
popf
mov
sti
repz
daa
cmpb
ds
dec
lcall
cmpsl
xor
loopne
cmp
lret
inc
fisubrl
and
sub
imul
xor
outsb
add
test
mov
cli
dec
xchg
out
nop
fs
insl
out
cmpsb
cli
es
movsb
add
or
xchg
sub
xchg
into
push
pop
adc
enter
jge
addl
xor
rcl
cmp
jge
leave
lret
test
inc
aad
mov
mov
mov
aas
xlat
mov
and
inc
fmull
xor
cli
push
stos
and
and
lcall
shrb
sub
lods
xchg
mov
aam
cli
add
mov
nop
je
fwait
sub
test
pop
loope
andl
sahf
pop
pop
or
jnp
sub
mov
sarb
loop
cli
inc
popf
iret
cmp
adc
repz
dec
call
sahf
mov
inc
mov
xor
sub
jecxz
dec
pop
and
movsl
mov
orb
pop
adc
jge
out
pop
adc
cmpsl
outsb
pushf
adc
pop
leave
pusha
imul
xor
xchg
pop
loop
adc
inc
mov
arpl
jb
push
cmc
mov
sub
ss
mov
or
xchg
push
xlat
mov
pop
xor
and
xchg
dec
xor
mov
shlb
lea
mov
ljmp
xchg
cmpsl
pop
mov
fistpll
jl
dec
popf
mulb
ljmp
push
and
jns
push
xchg
adc
outsb
and
jle
mov
cltd
adcb
or
add
cld
repz
loopne
ja
stos
insl
lods
lret
je
clc
daa
test
push
outsb
movsb
iret
shll
ds
push
cmpsb
inc
jno
outsb
int3
mov
pop
std
mov
xlat
lcall
clc
stc
inc
out
or
in
push
sub
cmpsb
lret
push
loope
inc
mov
stc
aad
jg
cmpsb
push
inc
jno
and
push
mov
ficomps
lds
jb
filds
idivl
lock
gs
sbb
mov
jecxz
jo
dec
or
imulb
inc
pop
lods
test
clc
sub
in
enter
and
out
inc
sbb
or
ljmp
loopne
cwtl
sti
test
mov
dec
push
test
bound
pop
aam
outsb
into
xchg
rclb
cmp
xor
inc
icebp
xlat
ret
loop
xchg
dec
inc
std
ret
es
lods
imul
and
nop
mull
mov
dec
inc
xor
push
mov
adc
add
rorl
push
mov
cmp
icebp
iret
mov
aaa
testb
imul
add
sahf
xor
sub
aas
popl
pusha
pop
xchg
push
lcall
add
rcrb
fstpt
push
imul
rorb
cmpsb
outsl
add
jle
mov
lret
shll
add
mov
xchg
mov
rol
jne
aam
lahf
pusha
mov
andl
imul
inc
daa
jmp
aaa
lds
sbb
adcb
dec
cs
addl
pushf
iret
shl
mov
pop
cmpsb
mov
out
pushf
adc
sbb
adc
inc
and
mov
push
push
fwait
push
pusha
push
adc
in
sbb
frstor
js
loopne
popf
or
pop
fs
xor
mov
cmp
xchg
and
test
testl
push
pusha
push
xchg
mov
mov
lahf
adc
jno
dec
fwait
mov
sbb
pop
xchg
out
xchg
pop
mov
jbe
mov
loopne
rcl
data16
and
xchg
adc
mov
sti
jecxz
cmpsb
daa
or
pop
outsl
add
hlt
xchg
or
shll
xchg
or
sbb
test
loope
es
add
or
jl
icebp
jns
inc
int
test
push
adc
adc
lods
imul
add
orb
loop
les
mov
test
les
mov
ret
rorb
aad
push
add
mov
inc
mov
in
mov
inc
aad
xor
sbb
enter
xchg
idivl
imul
pop
decl
jns
movsb
mov
ret
mov
and
and
or
sub
sbb
mov
sub
mov
repnz
int
fucomi
jle
add
sub
scas
lock
lods
out
call
push
cmpsb
sub
shll
ja
shll
and
cmp
es
xor
fsts
push
xlat
mov
mov
prefetcht0
adc
dec
pop
adc
int
fcmovnbe
jle
add
sub
lods
lret
xchg
dec
add
push
ljmp
push
test
lock
pop
xchg
push
aaa
mov
pushf
dec
dec
pop
sub
push
pop
jae
arpl
jne
int
jg
add
sub
lods
and
xchg
dec
pusha
cmpsb
insb
ja
shll
ja
pcmpgtd
pop
add
xchg
or
pop
mov
cmc
test
andb
pop
fwait
pop
cmpsb
fcmovb
jp
aam
add
mov
dec
imul
inc
sbb
enter
mov
xchg
pop
fwait
pusha
lahf
mov
in
rcr
cli
cmp
pop
mov
andl
adcb
lcall
rorl
popf
js
pop
jo
cmpsb
xchg
mov
xchg
xchg
fadd
call
mov
lods
jl
divb
jl
cmp
xlat
fistpl
mov
xchg
pop
mov
pop
gs
out
push
addb
push
stos
jb
jnp
lds
aas
test
inc
pop
lcall
aaa
es
addr16
je
adc
mov
std
dec
ret
mov
lock
inc
frstor
cmpsb
shlb
shr
mov
add
sbb
cmp
lock
cmp
sbb
popf
mov
xchg
cmpsl
sbb
repz
push
cmp
call
call
inc
mov
jne
cmpsb
popa
pushf
jo
movsl
jecxz
sub
push
inc
adc
insb
cltd
pushf
sbb
pop
jl
sub
divb
stos
popf
out
xlat
pop
sbb
add
xor
xchg
jge
ljmp
add
nop
in
shll
mov
xchg
cli
shlb
dec
pop
cmp
out
das
dec
std
je
sahf
cld
lcall
cmpb
arpl
jnp
mov
les
xor
aas
stos
popf
jae
adc
rcrb
cs
sub
pop
pop
mov
iret
sub
xor
xor
xor
pop
das
jg
addr16
xor
pop
lcall
aaa
lods
sub
jbe
push
mov
jge
shrl
mov
dec
xchg
mov
jle
jbe
scas
test
bound
test
mov
push
jle
mov
addr16
adc
sub
mov
push
pop
push
stos
adc
stos
cld
lods
int
cmpsl
push
lods
dec
add
scas
pop
lret
push
stos
xor
daa
inc
sti
addr16
out
xchg
movsl
aaa
iret
and
push
stos
mov
mov
jp
lea
mov
stos
negb
pop
push
xchg
or
sbb
xor
lret
cmp
add
sbb
outsl
imul
and
enter
add
arpl
shrb
mov
stos
imul
mov
push
and
sti
icebp
nop
add
dec
dec
out
cmp
push
in
mull
das
int3
jb
sub
xlat
fidivrl
fstpl
out
mov
jnp
js
mov
test
cmp
int3
push
pop
in
xor
xchg
mov
push
add
xchg
mov
pop
pop
daa
addl
cmc
mov
js
push
movnti
leave
cmp
jae
xchg
or
movsl
mov
addr16
aaa
mov
fldcw
pop
push
add
jg
mov
subl
das
sub
push
fcomp
out
mov
divb
inc
xorl
mov
mov
adc
sbb
push
inc
mov
iret
lods
mov
cmp
mov
idivb
mov
fdivrl
jnp
push
ja
jbe
dec
icebp
lock
cld
cmp
mov
dec
pop
in
mov
push
aad
xchg
pop
cwtl
add
mov
scas
loopne
das
xchg
in
jp
leave
leave
push
mov
pop
negb
dec
and
jo
xchg
cltd
xchg
sti
arpl
adc
jo
sbb
xchg
subb
loopne
pusha
push
push
inc
jae
movsb
cli
mov
cmpsb
call
testb
pop
insb
pop
pushf
sti
cmpsl
int3
mov
clc
cltd
fimuls
cmp
js
flds
dec
fcom
mov
in
int3
inc
mov
mov
lds
rorb
sbb
movsl
enter
ficomps
scas
testb
inc
call
in
sbb
cmp
jmp
mov
push
pop
test
mov
or
inc
int
and
mov
stc
dec
repnz
mov
icebp
lret
cmp
movsl
add
add
in
push
sbb
xchg
xchg
pop
mov
in
cmpsb
mov
pop
or
mov
add
iret
inc
jecxz
js
sub
imul
cmp
sub
sbb
sub
scas
mov
cli
lds
mov
fisubrl
jno
std
iret
cmpsl
int
testb
out
xor
and
es
adc
clc
lret
or
mov
hlt
dec
lds
shl
ds
inc
cmp
test
stc
inc
leave
imul
mov
in
out
out
add
jge
dec
mov
or
sub
shrl
repz
or
mov
leave
or
pop
xchg
xchg
pop
cmpsl
les
inc
pop
in
mov
icebp
jbe
inc
pop
and
and
imul
cmp
push
jbe
add
xor
add
ds
pop
loopne
and
cmp
sub
mov
fiadds
sbb
loopne
gs
fists
dec
pop
xchg
cmp
bound
inc
movsl
xchg
mov
mov
rclb
popa
test
mov
rol
jl
outsb
sbb
lcall
and
jecxz
lds
mov
dec
or
dec
jnp
decb
fwait
xchg
daa
addb
es
test
int3
pop
xchg
inc
sarb
dec
repz
and
aaa
test
mov
xchg
lcall
scas
ret
add
sub
or
pop
repnz
mov
mov
movsb
dec
lds
dec
les
push
pusha
pop
inc
rorl
ss
jno
fistpl
mov
lahf
lods
cwtl
mov
rorb
and
lahf
pop
mov
mov
scas
pop
dec
cmp
pop
bound
out
shr
in
imulb
rorb
sub
inc
pop
mov
jno
ss
jmp
clc
loop
icebp
pop
dec
test
cld
cmp
nop
hlt
xor
rcl
xchg
or
jmp
mov
xchg
inc
mov
sbb
sbb
outsl
jle
in
in
loop
mov
jmp
sub
imul
adcl
mov
cmp
mov
jbe
mov
imul
push
js
dec
decl
xchg
push
insb
imul
add
mov
pop
mov
loope
xchg
les
bound
xlat
cltd
mov
and
mov
and
mov
movsb
mov
push
add
adc
jle
or
fstpt
adc
aas
adc
dec
or
sti
xorb
add
dec
xchg
xor
and
aad
rol
mul
push
mov
aas
ds
push
push
sti
out
jmp
or
mov
imul
shlb
loopne
adc
adc
mov
jb
fs
loop
mov
cmp
jns
cmp
or
nop
movsb
lods
mov
rclb
leave
jne
stos
push
cmp
in
stos
jmp
or
lods
nop
cmp
mov
aaa
daa
mov
inc
into
jno
xorb
ret
or
scas
jecxz
mov
je
and
incl
mov
fwait
pop
lods
push
imul
stc
dec
inc
enter
xchg
jno
pop
push
lea
mov
inc
es
testb
std
test
call
shrb
je
out
push
cmpsb
xchg
or
enter
dec
cmp
lea
mulb
ficomps
xchg
inc
inc
xor
fimull
add
pop
divb
inc
jno
out
xor
dec
dec
fidivl
aad
mov
xor
and
out
mov
cs
pop
jge
test
cmc
nop
subl
add
mov
inc
cmpsl
and
fwait
lea
mov
int3
pushf
test
xchg
push
addl
lret
mov
mov
cmp
test
jnp
pop
leave
push
sbb
lds
test
test
sbb
inc
rolb
dec
sbb
mov
aas
cmpsl
fistps
into
push
aaa
imul
pop
sti
out
inc
add
outsb
pop
mov
je
jnp
fstl
pop
push
mov
call
lret
push
fsubrl
mov
pop
or
js
fcomps
in
scas
pop
enter
jl
dec
dec
aaa
fmull
fdivl
cld
and
inc
sbb
stc
adc
mov
ret
and
inc
aad
loope
adc
and
loop
sub
inc
scas
aam
je
pop
icebp
push
rol
out
fiadds
xchg
cld
inc
sbb
mov
and
aam
sbb
mov
aaa
and
xchg
arpl
pop
in
add
aad
jnp
fisubrs
add
and
stos
pop
sbbl
jb
test
fnstsw
cmpl
rcrl
mov
dec
movb
enter
jo
cmc
pop
jnp
test
inc
movsb
fisubs
fwait
mov
fidivrs
inc
or
jge,pt
pop
into
xchg
inc
pop
jo
cmp
jl
call
sub
mov
or
sti
out
dec
mov
sti
push
mov
ror
add
arpl
scas
mov
mov
adc
add
nop
mov
jno
or
pop
mov
stos
cld
push
push
out
cmp
cltd
pop
push
fwait
leave
aaa
jp
lock
lret
xor
dec
divb
fists
push
dec
sahf
jl
aad
sub
push
lea
cmc
aaa
fists
mov
test
lds
mov
in
lret
scas
subb
nop
sbb
push
insl
ret
outsb
cmp
js
mov
mov
add
fwait
sub
shll
shlb
sub
ret
loopne
outsl
jmp
fnstsw
in
into
pop
ds
add
add
cs
lods
testl
sar
popf
sbbl
std
cmpb
fisubrl
js
test
mov
scas
xlat
dec
cmpsl
daa
in
add
imul
cwtl
mov
popa
mov
dec
xor
cltd
cli
icebp
imulb
mov
cmp
fcmovb
pop
aad
lahf
aaa
sub
push
ret
lahf
int
and
mov
cltd
outsb
fxch
fisubl
push
pop
ret
cmp
iret
xchg
adc
adc
inc
mov
and
pop
adc
pop
lahf
inc
stos
andl
ljmp
fwait
addb
pop
call
mov
sbb
xor
or
jbe
dec
scas
or
shll
insb
jmp
mov
jne
cmp
jp
loop
lret
xchg
iret
add
sub
lock
lcall
movsb
sub
in
add
dec
dec
and
xchg
loopne
mov
xor
arpl
repz
dec
aam
mov
push
js
pop
pop
cmp
outsb
not
sbb
xor
mov
pop
sahf
jnp
pop
cmc
sahf
cmp
das
call
outsl
cli
mov
xchg
out
sub
and
test
and
adc
ss
into
jbe
test
pop
mov
outsl
sub
and
mov
sbb
mov
jb
loop
mull
and
in
dec
mov
dec
mov
cmpb
mov
fndisi(8087
and
mov
push
push
dec
lock
sub
out
fmuls
adc
aaa
mov
and
xchg
xchg
repz
pop
pop
sbb
dec
out
mov
sub
pushf
aam
data16
add
inc
cmp
dec
and
push
sub
pusha
mov
adc
mov
das
inc
lret
cltd
into
mov
jo
dec
leave
mov
iret
addr16
stc
inc
mov
lds
sar
mov
inc
pop
jp
push
les
mov
jae
sub
not
push
add
xchg
stc
vpminub
clc
add
lods
add
push
add
mov
xchg
mov
mov
mov
sbb
jge
jecxz
pop
testl
add
cs
cltd
xor
xlat
in
lahf
push
push
jo
in
jbe
xchg
test
loopne
or
pop
adc
lds
lcall
cmpsb
dec
and
leave
lahf
scas
cmp
push
add
stc
jl
popl
shl
mov
aam
mov
movsb
mov
or
roll
in
frstor
aaa
push
sahf
mov
xchg
loopne
xchg
push
pop
icebp
pop
fisubrs
jle
or
xor
cli
pop
inc
pop
testl
dec
insl
or
rcrb
js
leave
je
into
in
mov
cmp
jg
xchg
jnp
cli
pop
xchg
add
xchg
dec
jmp
movsl
push
out
push
pusha
cmp
cmpsl
xchg
loop
jae
mov
ror
sub
addr16
jne
sbb
lret
mov
and
pop
sarb
mov
inc
pop
ss
mov
jns
pushf
pop
or
and
dec
push
lret
mov
dec
out
les
std
loopne
loopne
in
adc
fnsave
lret
into
ss
or
cs
xor
repz
mov
sbb
and
mov
arpl
xchg
cmp
jno
lret
dec
push
lods
pop
shrb
push
sub
mov
sbb
pop
xchg
mov
addr16
pusha
cs
adc
cmp
fwait
sti
jecxz
in
jmp
and
pop
pushf
gs
aam
xchg
mov
paddsw
mov
js
loopne
jmp
lret
xor
rcrl
pop
cwtl
jge
jne
ds
mov
ret
imul
add
add
mov
arpl
jle
add
ret
inc
xchg
push
add
cmp
add
inc
notb
and
cmc
mov
es
and
xchg
push
les
loopne
popf
jge
adc
mov
js
outsb
ja
sarb
fcoml
shl
dec
sub
push
das
mulb
pop
fnsave
xchg
shl
mov
imul
lret
hlt
add
fcompl
fiaddl
push
or
movsl
out
dec
mov
ja
shl
loop
or
iret
movsb
sbb
outsb
add
scas
ljmp
les
ja
mov
or
lods
pop
mov
sar
int
aaa
movsb
xchg
fisttpl
xchg
pop
add
adc
scas
int
out
loop
loop
ret
push
aam
dec
imul
xchg
mov
int3
dec
jp
and
imul
cmpl
lret
xlat
mov
add
mov
leave
pushf
push
cmp
das
enter
cld
cmp
or
or
mov
xchg
and
cmp
adc
arpl
popa
sub
mov
aam
xor
or
enter
or
and
pop
mov
neg
mov
and
std
inc
jg
imul
pop
jno
adc
negl
lret
cmp
int
xchg
jecxz
pop
mov
es
into
mov
add
loop
adc
imull
lret
add
mov
and
push
cmp
addb
ja
test
mov
ja
xchg
data16
add
sbb
add
out
dec
xchg
push
xorb
push
xlat
fsubp
test
inc
sbb
jns
sbb
repnz
jae
out
mov
fidivrl
dec
loope
dec
pop
cld
repnz
lock
mov
fstl
add
dec
sub
and
das
jp
push
sbb
orb
out
push
pop
adc
in
dec
mov
push
xorb
adc
mov
push
add
imul
sbb
push
and
addr16
add
rorl
mov
lods
jecxz
cs
nop
imul
in
sbbb
cmp
sub
and
inc
xor
cld
call
mov
and
xchg
xchg
cmp
or
shrb
inc
jle
adc
push
fsts
movb
mov
fnsave
add
dec
adc
mov
lods
test
fwait
imull
dec
lods
sbb
xchg
mov
add
in
movq
mov
lret
loopne
inc
inc
jp
in
test
sbb
mov
cmp
sub
lds
fistpll
sbb
daa
lods
stos
mov
stc
test
in
pop
or
sbb
bound
bound
cwtl
add
lock
sbb
xchg
ret
inc
es
or
leave
addb
pop
mov
xchg
enter
fs
aas
notb
add
jmp
leave
mov
cmc
xor
ss
out
daa
ficompl
adc
mov
mov
cltd
mov
push
adc
mov
add
outsl
imul
aam
xor
xor
add
ja
dec
fidivrl
fcmovb
filds
pop
daa
jge
jp
xor
fwait
adc
adc
dec
and
sub
or
es
rolb
mov
mov
ljmp
mov
mov
mov
xchg
fildll
push
inc
imul
fsubs
fcoml
pop
test
dec
push
jg
hlt
or
rorb
loope
sbb
popa
int
or
jp
adc
sub
xor
int3
add
cwtl
mov
dec
leave
sub
test
inc
out
or
inc
nop
ja
cwtl
mov
daa
jg
test
and
sti
sub
fs
out
mov
add
mov
or
sbb
lahf
sbb
mov
test
iret
mov
in
loopne
in
imull
ret
cmp
mov
push
sbb
jo
leave
cwtl
add
ds
xchg
sahf
cmpsb
inc
loope
mov
mov
scas
nop
mov
adc
push
xor
xlat
or
popa
arpl
push
neg
jnp
sbb
jl
in
aaa
mov
xchg
lea
loope
mov
jecxz
adc
lret
out
jae
aaa
mov
sub
push
add
jb
jecxz
pop
mov
and
cmp
nop
xchg
inc
ss
xchg
mov
int
inc
mov
scas
loope
sub
cmpsb
add
stc
xchg
call
loope
mov
mov
sbb
popa
inc
add
add
mov
das
push
pop
dec
mov
into
out
loope
lret
pop
orl
test
in
lahf
pop
push
stc
fld
sbb
mov
mov
jae
cmp
sub
sahf
aad
adc
sbb
lock
add
data16
shll
jmp
jl
push
mov
xchg
mov
cmp
jmp
mov
jg
pop
xorb
out
sbb
cmp
loop
xchg
shr
sbb
add
mov
adc
fs
or
push
std
cmp
pop
jle
addl
pop
rcrl
idivl
sub
negl
cli
inc
lcall
jb
mov
stos
sahf
lcall
jae
insb
test
jbe
inc
push
in
inc
mov
test
cli
mov
fsubrp
aas
or
fs
repnz
mov
ljmp
and
push
lret
pop
sbb
cmp
and
enter
decl
ret
mov
adc
or
add
enter
or
aaa
repnz
out
adc
sub
adcl
inc
mov
pop
stos
push
mov
lahf
mov
fs
cmp
inc
push
mov
movsb
repz
and
mov
cmc
outsb
aam
jns
pushf
mov
adc
shrb
test
sub
cmp
jle
mov
inc
jge
xlat
sbb
iret
dec
add
push
add
mov
into
pop
mov
and
jnp
or
sbb
and
xchg
cmpsb
lcall
iret
int
cmp
dec
inc
push
xor
ja
cmp
test
xchg
dec
arpl
das
inc
mov
xchg
fcoml
cmpsb
jge
push
sub
lahf
mov
add
call
mov
out
push
and
adc
lods
cld
mov
addr16
and
repnz
adc
pop
fs
lds
jnp
fisubs
cli
push
scas
push
std
and
lods
push
sbb
xchg
and
mov
lsl
jle
mov
adcl
cmp
stos
jne
fadds
mov
pop
fcoms
imul
xor
inc
jg
add
adc
test
das
jnp
xor
cmp
cli
xor
xlat
pusha
lds
add
test
test
aam
sbb
pop
outsb
inc
div
loope
adc
adc
call
stc
mov
dec
negl
and
cmpl
mov
xor
inc
mov
dec
lock
dec
mul
pushf
lea
mov
dec
outsl
lods
jne
fstps
lock
fcompl
sahf
and
lods
mov
call
out
ror
movsl
adc
lea
jnp
jne
lret
sub
xlat
mov
mov
jmp
or
ljmp
push
mov
aas
push
sub
lock
shlb
aam
mov
mov
mov
mov
inc
inc
bound
mov
dec
negb
aaa
rcr
jge
sbb
nop
inc
out
jmp
jge
pop
xchg
shl
adc
lods
cs
je
adc
aam
fcompl
inc
fwait
call
jle
push
repnz
mov
imul
jle
sub
or
sub
mov
movsb
je
mov
mov
ret
or
fbld
fcmovnb
sbb
add
test
fucomi
lret
push
enter
push
lret
scas
pushf
jecxz
fldl
popf
insl
idiv
ja
out
sub
out
add
jl
rcl
pop
pop
cmpsl
xor
dec
imul
lret
cld
in
subl
lret
xchg
fisubl
mov
roll
add
lods
roll
mov
pop
inc
lea
out
jns
movsb
lods
cmp
adc
inc
mov
test
push
shlb
stc
in
mov
dec
xchg
or
std
push
mov
push
inc
shrl
repnz
jnp
test
lods
adc
xlat
aas
dec
sti
and
gs
lock
flds
je
add
adc
mov
lods
adc
and
pop
cs
adc
movsb
ss
adc
lahf
scas
jo
enter
inc
mov
aad
popf
cmp
les
test
cmpsb
je
pushf
inc
mov
pop
dec
cmp
xlat
mov
xlat
scas
inc
in
push
jecxz
lods
jle
cmp
xchg
and
cltd
loopne
or
stc
cmp
xor
lret
mov
xlat
loope
inc
lea
in
mov
popa
or
jmp
lret
mov
dec
push
mov
aaa
fcmovbe
scas
leave
ror
and
hlt
sbb
stos
orl
sub
dec
and
out
repnz
sbb
sarl
clc
ret
je
inc
mov
mov
mov
mov
mul
and
dec
sbb
test
stc
adc
sti
stos
outsb
aaa
negl
stos
fadds
push
sbb
cwtl
mov
or
call
xor
pop
pop
add
xor
inc
outsl
sub
dec
mov
and
xchg
inc
hlt
push
xor
pushf
cli
jnp
xchg
scas
adc
testb
fnstenv
cmp
sbb
inc
dec
ret
sub
jg
inc
xor
sub
pusha
push
in
lret
std
loope
test
or
sbb
icebp
jns
enter
daa
fcmovu
test
out
jmp
mov
dec
mov
int
int
fsubr
add
or
sbb
xchg
inc
cmp
rcl
cmpsl
fiadds
cmp
or
rcr
dec
insl
pop
sbb
ret
jb
sub
push
lods
lds
pop
inc
aaa
out
not
popa
lods
dec
ficompl
or
mov
lods
or
pop
fstpl
arpl
in
movsb
xchg
xchg
scas
insb
pop
and
ljmp
adc
test
out
cmp
shl
mov
in
sbb
roll
jecxz
pop
icebp
aas
cmc
ret
sub
inc
enter
xchg
adc
cmpsb
rorb
stc
add
loop
into
iret
mov
sarb
cmp
xor
add
shl
bound
jb
push
cmc
and
jns
aaa
lods
nop
aad
add
add
lcall
imul
and
fwait
adcb
fistpll
negb
andl
shlb
psubsw
dec
cmp
xchg
jbe
sbbb
mov
into
lock
mov
inc
outsl
outsl
xor
arpl
orl
adc
outsb
stc
out
adc
sub
clc
jp
pop
inc
mov
lds
mov
sbb
js
stos
jbe
pop
hlt
mov
loopne
jge
cmp
subl
sbb
jo
outsb
mov
xchg
jns
sahf
dec
loope
lar
push
dec
cmp
repz
or
shlb
sbb
cs
add
add
mov
cmp
add
call
pop
adc
pop
stos
out
lahf
sub
lret
test
adc
add
xlat
hlt
inc
and
pop
scas
sub
mov
sbb
out
sbb
in
xor
cmp
dec
push
icebp
sub
jnp
into
loopne
inc
popa
aaa
hlt
ss
pop
mov
push
hlt
xchg
mov
mov
aas
insb
or
adc
addb
lcall
fists
xchg
iret
loope
adc
inc
rorl
lea
lcall
dec
xlat
aaa
xor
adc
mov
test
faddl
jmp
pop
test
xor
mov
add
rcrb
cmpsb
stos
xchg
lcall
inc
jo
sbb
sbb
adc
or
jmp
xor
cli
and
xchg
jmp
mov
out
mov
lods
sbb
mov
mov
xchg
testl
addr16
rcrb
leave
mov
sbb
or
cmp
test
dec
cwtl
sub
dec
push
add
aaa
xchg
cmpb
cmp
ja
inc
xchg
push
fcmovnu
pop
push
add
xor
mov
adc
sbb
js
in
xchg
mov
or
mov
fldenv
jo
fadds
cmp
std
pop
fdivs
stos
cmp
and
shrl
shrl
add
cwtl
ds
fidivrl
lods
bound
push
stc
push
mov
lahf
add
mov
cmpsb
rcrb
xchg
aaa
xchg
cmp
dec
xor
lods
nop
out
cmp
mov
enter
sub
dec
sbb
mov
inc
outsb
mov
fldz
push
jbe
mov
add
push
cmpsl
sbb
fsubp
lods
dec
dec
testl
sub
in
jae
popf
adc
dec
xchg
clc
mov
outsb
aam
jno
sbbl
add
mov
xchg
and
mov
outsb
mov
inc
jge
add
shr
bound
or
sbb
stos
mov
push
cmc
test
arpl
mov
add
ljmp
fwait
rolb
add
jp
mov
mov
add
pop
das
push
xchg
sub
sub
loope
insb
lods
mov
jbe
push
mov
xchg
lret
mov
cmp
fists
jg
push
sub
sbb
in
stos
stos
aaa
cmp
flds
sti
fisttps
push
add
jmp
jp
pop
lahf
fstl
dec
lods
add
mov
ja
jnp
mov
test
cwtl
ret
dec
inc
call
cmc
fimuls
jmp
ss
icebp
adc
or
jns
notl
xchg
rcl
les
ss
aas
adc
jmp
decl
repz
mov
inc
lock
stos
jae
icebp
ret
cmp
xlat
mov
push
xchg
and
adc
xchg
je
fiaddl
xor
mov
iret
shlb
xchg
jg
or
mov
or
jg
add
stos
mov
leave
sub
into
fadds
and
in
and
jmp
int3
jo
rorl
or
push
movsl
or
call
fcmovb
lods
inc
lcall
test
lcall
rcr
shlb
pop
mov
add
sub
pop
mov
add
lcall
mov
add
jg
pop
les
or
lds
xchg
lock
inc
stc
xchg
jle
pop
mov
xchg
inc
sbb
aaa
addr16
inc
adc
int
mov
sub
in
xchg
pop
inc
push
mov
out
bound
cmpsb
push
push
jl
inc
shrb
bound
pop
aad
rorl
adc
loope
je
je
jg
movsb
cmpsl
add
sbb
and
push
stos
inc
in
xor
mov
xchg
sbb
ja
mov
loop
add
xor
mov
test
loop
or
leave
sbb
mov
das
lock
bound
cwtl
sbb
hlt
cmpsl
scas
pop
aas
shlb
add
ss
in
fmull
cmpsb
loope
dec
bound
inc
icebp
pop
lods
cli
shlb
paddusw
fldcw
pop
add
cmpsl
lret
aam
cwtl
rolb
fstps
push
jl
xlat
outsb
ljmp
push
inc
or
rolb
fisubs
push
into
xchg
fwait
push
pop
scas
icebp
cltd
fwait
jle
mov
enter
enter
les
push
xor
push
jl
sub
leave
out
jg
mov
in
into
jg
nop
add
mov
sar
imul
insl
fwait
lcall
rol
out
adc
ja
push
insl
mov
fistpll
and
adc
xchg
cmp
xbegin
mov
flds
cmpsb
or
sarb
fdivs
mov
jno
rcl
mov
cmp
mov
or
ja
dec
or
cs
ds
insl
and
xchg
negb
xchg
stos
into
adc
sbb
push
pop
lods
test
fwait
repnz
mov
push
cli
jmp
mov
jecxz
push
pop
adc
fsub
pushl
sbb
sbb
xor
mov
jae
movsb
arpl
jnp
lock
leave
xor
mov
shll
shr
or
ret
mov
cmp
out
or
cwtl
mov
pop
shr
aas
and
mov
pusha
aas
neg
xchg
dec
shlb
call
popa
jle
popf
pop
or
popf
rcll
push
fildl
fs
jno
lcall
sub
cmp
xorl
xor
mov
mov
clc
push
cmc
out
cmp
xchg
jno
cmp
mov
cmpsl
fcompl
inc
adc
mov
scas
jp
rol
cmpsl
stc
jns
xchg
or
sbb
enter
xchg
mov
push
xchg
cmp
xor
sub
popf
scas
std
jecxz
jmp
sbb
dec
out
pop
rcrb
loopne
pop
mov
ss
cmpsb
inc
hlt
xor
inc
and
cmp
mov
cmp
sub
and
movsl
addb
ret
cwtl
aas
or
aam
es
iret
into
aam
pop
jo
shl
insb
lret
mov
clc
xchg
push
adc
add
std
in
add
mov
xchg
int3
cwtl
pusha
fisubrs
or
popa
or
xor
dec
insb
cmpsl
pop
out
mov
scas
mov
xchg
mov
and
stos
adc
pop
cli
lret
andl
fbstp
pop
cmpsl
popf
push
mov
shll
xchg
fnstsw
pop
add
mov
in
jnp
rorb
jns
mov
jo
or
dec
mov
call
lret
cmp
and
xchg
sub
mov
out
ror
iret
in
inc
pop
scas
jl
cmp
nop
and
mov
sub
rep
clc
xchg
lds
lret
fstps
mov
loop
add
sub
shrb
sbb
mov
test
add
lock
js
jno
and
sub
push
shlb
std
xchg
stc
jno
pop
int3
aas
jg
fisttpl
int3
clc
xorl
test
rclb
xor
inc
dec
notb
mov
dec
lret
or
scas
and
fmuls
adc
xchg
enter
lods
inc
and
jge
icebp
cmp
add
adc
test
or
pop
rcrb
mov
adc
jae
lock
add
push
mov
adc
cmp
sbbl
xorb
cmc
clc
mov
imul
out
inc
inc
aaa
mov
movsl
std
push
sarb
adc
pop
not
cmpl
add
xor
add
xchg
aas
lea
hlt
loope
jp
movsl
cwtl
arpl
inc
xchg
test
cmp
add
sub
lods
out
xchg
xor
add
lcall
xchg
cmp
lock
mov
rcl
jb
cli
das
push
and
fwait
mov
aad
lret
out
sbb
es
fs
div
jge
insb
das
aad
xor
adc
out
pop
add
lods
mov
jnp
faddp
push
push
add
into
aam
xchg
insb
into
adcb
lcall
outsb
neg
fdivrl
daa
out
sbb
iret
pop
test
fadds
cmp
sti
inc
je
nop
in
sti
testl
push
push
ret
inc
sahf
mov
in
jne
lret
cmp
mov
pop
adc
fsubs
leave
mov
roll
popa
data16
push
neg
outsb
cmpl
add
sar
iret
push
mov
sbb
cmp
push
leave
clc
neg
mov
pop
mov
and
jo
insb
or
dec
sub
clc
loope
xchg
lret
in
clc
push
repnz
and
sbb
add
jno
jmp
push
xor
lahf
xchg
pop
aaa
adc
add
jg
mov
mov
inc
clc
push
cmp
xchg
push
loop
jge
sbb
cmp
mov
scas
push
push
in
jns
or
jecxz
data16
sbb
jnp
jnp
add
inc
rcl
inc
shlb
nop
stos
jbe
xchg
lods
push
jb
rorb
clc
popa
mov
jge
loopne
ja
scas
lahf
dec
cmp
ljmp
push
add
mov
add
push
cmpb
mov
pop
inc
jbe
xor
mov
pop
inc
dec
std
loop
lret
mov
std
pop
ds
aaa
mov
jo
loopne
push
xchg
cmc
insb
xchg
mov
pop
scas
dec
xchg
push
and
dec
mov
idivl
xlat
fldenv
jae
jmp
and
bound
loope
xor
mov
or
fwait
lds
adc
loopne
jl
jp
out
push
pop
aam
ljmp
out
inc
repz
mov
jg
adc
fcomi
pop
into
in
sub
or
xchg
ror
lock
pop
sbb
mov
pushf
jle
inc
mov
pop
js
push
adc
nop
jp
daa
les
int
mov
add
cmp
inc
into
rcr
cs
add
sub
mov
add
sub
lahf
xchg
mov
repz
add
scas
fidivl
and
dec
xor
in
xorl
mov
int
ja
jns
adc
jnp
cs
xchg
fidivs
cli
mov
mov
dec
inc
jl
out
add
test
jae
rorb
cmp
ja
dec
jns
mov
pop
clc
mov
mov
stos
les
and
and
pop
lret
xchg
add
inc
adc
sub
adc
loope
shrl
rclb
push
mov
pop
sti
in
fstpt
pop
lret
and
mov
shlb
mov
adc
sbb
test
mov
stos
divl
sahf
ret
pushf
jbe
lret
xlat
fwait
mov
ret
sub
pop
loopne
out
and
jg
clc
pop
dec
daa
or
enter
cmp
adc
mov
pushf
push
mov
push
adc
es
fistps
jg
pop
and
mov
out
call
mov
pop
jp
add
ljmp
mov
cli
inc
in
lret
jno
lcall
add
and
insl
xchg
adcb
sub
xchg
inc
mov
jmp
jl
xchg
movsl
sbb
leave
push
jg
fcmovnu
ss
ljmp
and
xor
in
les
mov
aam
lods
xorl
push
arpl
fmuls
insl
aas
push
and
push
roll
jbe
xor
jo
mov
mov
inc
stc
jo
or
aas
das
dec
jle
jp
lods
ds
mov
jg
add
icebp
inc
sub
mov
in
mov
rcl
inc
mov
negb
push
bound
repnz
shlb
jle,pn
nop
jmp
in
outsl
jl
mov
mov
dec
cmp
xor
pop
jge
lods
adc
negl
inc
and
stos
fadds
ror
and
mov
mov
mov
lods
pusha
mov
fwait
cmc
sbb
jae
mov
or
or
pop
shrl
xchg
inc
out
jb
into
fcomps
mul
xlat
imul
movsb
mov
repnz
jle
inc
popa
mov
loope
or
out
enter
testb
fnstcw
push
dec
aaa
ds
inc
stc
lret
or
cmp
mov
adc
nop
es
nop
ret
cwtl
and
shr
adc
jne
xchg
cmpsl
div
push
aam
test
pusha
mov
addr16
insb
cmpsb
adc
je,pt
xchg
mov
sub
push
sbb
movsb
test
inc
rol
pop
dec
inc
fwait
jns
sbb
mov
rcll
xchg
and
and
mov
ljmp
subl
into
pop
je
dec
cmp
lret
into
cltd
inc
dec
aas
enter
loope
out
pop
ret
cli
rcr
fmull
fdiv
repz
adc
lcall
adc
test
jns
mov
or
fdivs
or
filds
test
xchg
out
lock
ret
call
cwtl
test
dec
stc
arpl
stos
subl
mov
xor
loopne
push
in
inc
mov
pop
mov
out
sbb
inc
imul
cmp
pop
pop
mov
xchg
and
sti
test
cs
inc
xchg
dec
cwtl
lret
mov
nop
mov
xchg
jl
add
dec
dec
loope
mov
loop
xlat
cmpsb
jne
movsl
js
fcomps
out
or
fsubr
out
int
fwait
xor
iret
pushf
jnp
lahf
mov
sub
dec
out
sub
rcll
mov
xchg
push
mov
jb
cld
pop
dec
sahf
adc
push
into
out
mov
lret
add
xor
icebp
mov
sub
sub
call
clc
and
sbb
movsl
xor
push
mov
lock
clc
push
cmp
mov
jecxz
lret
sbb
scas
pop
cs
jle
fdivp
xchg
mov
fnstcw
jle
sub
cmp
int
jb
lea
add
icebp
and
sti
push
xor
xchg
test
mov
leave
cld
xchg
popf
push
pop
dec
lcall
sahf
push
cwtl
sbb
cmpsl
andb
mov
ja
xchg
xor
xchg
insb
fidivrl
mov
sub
ljmp
lds
js
stos
pop
sbb
or
mov
xor
or
adc
jle
or
daa
push
pushf
xchg
inc
xchg
or
jmp
mov
cmc
mov
pop
rorl
call
push
popa
sbb
and
pop
add
fsubrp
fwait
push
cwtl
sahf
cltd
ja
pop
mov
leave
pop
or
jo
les
jmp
adc
in
mov
arpl
xor
shrl
jno
ret
je
mov
stos
sbb
mov
sub
mov
mov
aaa
out
and
mov
daa
push
sub
into
rcl
inc
fwait
xor
repnz
xor
jae
push
push
push
mov
repz
ss
shl
jg
shr
and
and
int
inc
out
out
testb
mov
jle
popa
ror
lods
add
movsl
sar
mov
pop
mov
sti
and
incl
mov
scas
sbbb
xorb
xlat
jb
sub
movsl
test
cmp
ret
imulb
dec
xor
jo
sahf
xorb
jle
aas
jns
rclb
add
adc
cmpsb
adc
mov
push
ljmp
mov
out
aam
dec
adc
dec
xor
int
dec
pop
rcl
xchg
stc
enter
fisubs
movsb
inc
add
and
mov
movsl
xor
adc
push
shrl
cld
lods
test
rcr
mov
test
out
lods
dec
dec
out
mov
adc
lret
add
sbb
aaa
ret
pop
push
cmp
lahf
aas
aam
push
flds
int3
test
sti
rcr
cmpsl
test
lahf
push
fsubl
or
imulb
loope
cmpb
and
mov
idiv
push
add
ss
mov
push
ljmp
lock
outsl
scas
cmp
cmp
or
jb
test
jecxz
std
lock
adc
sbb
sub
xchg
jl
push
xlat
cmp
sub
fnstcw
inc
movsb
cli
icebp
mov
out
bound
pop
rorb
push
mov
lods
mov
out
cltd
sbb
xchg
inc
push
pop
push
loop
mov
and
xchg
inc
out
and
or
jns
add
xor
mov
test
sbb
movsb
mov
ljmp
pop
push
fidivrs
shlb
sbb
add
rcl
sbb
idiv
rcr
hlt
lret
add
cmp
pop
sti
insb
or
mov
jge
add
cmp
push
mov
aaa
jg
xchg
subb
mov
test
in
test
test
push
xchg
insl
dec
push
or
ds
and
cmp
pushl
xor
sub
out
movsb
xchg
inc
push
ret
inc
adc
cmp
arpl
mov
push
dec
into
and
dec
jo
cmc
sbb
rep
dec
cmc
xor
jnp
addl
xchg
loopne
pop
pop
int3
std
ja
xchg
aaa
xor
pop
popa
xchg
add
jmp
and
lds
push
pop
jg
xorb
cmpsl
and
fstpt
dec
pop
xchg
ds
add
pop
push
xor
jl
push
inc
ret
jbe
shrl
mov
pop
dec
test
mov
sti
mov
out
jbe
sub
mov
decl
mov
xlat
xor
pop
mov
mov
mov
pusha
test
sub
aad
fcoms
clc
mov
hlt
test
mov
jecxz
lods
mov
cld
ljmp
les
jns
pop
cmpsl
cmp
movsb
lret
xchg
pop
jecxz
das
mov
adc
scas
or
imul
pop
mov
daa
xchg
test
pop
fdivrs
sbb
fiadds
loopne
or
lods
negl
insb
sbb
dec
test
dec
cmp
sahf
cmp
sbb
sub
xor
imul
daa
adc
sbb
or
add
ret
push
inc
pop
jb
lcall
xchg
mov
test
ds
sbb
ss
aam
nop
incb
dec
adc
fs
sbb
cmp
dec
cmpsb
int
jbe
jg
shl
xor
mov
or
jbe
push
jg
out
cltd
icebp
rcrb
adc
fisubs
pop
ds
fsubrs
jp
pop
jns
dec
xchg
xchg
lcall
rcll
xchg
test
aam
dec
scas
mov
cli
push
push
dec
dec
jnp
int
pop
ja
je,pt
add
rcrb
leave
mov
add
notl
lods
cwtl
ljmp
rorl
cmp
ret
mov
ret
push
into
add
das
pop
mov
mov
testl
addb
fnsave
or
cmp
xor
je
outsb
int3
hlt
xchg
jmp
mov
sub
gs
lret
xchg
sub
rolb
push
test
daa
bound
jno
xchg
inc
dec
xchg
js
rcrl
sub
add
rolb
pusha
xor
mov
ss
cmp
je
data16
stos
outsb
dec
cmp
test
dec
push
inc
push
dec
stos
mov
lret
sub
mov
dec
daa
push
jno
ret
lods
roll
ss
scas
mov
fsubl
dec
mov
jne
xchg
and
mov
inc
outsb
cmp
mov
push
adc
cwtl
mov
and
or
mov
mov
dec
lcall
xchg
xor
or
repnz
jge,pt
js
sbb
or
add
push
push
pop
adc
add
jge
lods
ds
ret
sbb
pop
popa
and
fdivrl
stos
lcall
jns
lret
push
addb
dec
scas
pop
fistpl
imul
xchg
int3
inc
inc
js
insl
push
push
mov
rorb
mov
lss
xchg
ret
imul
notb
push
lret
je
lods
cld
xor
je
dec
jecxz
cmp
and
mov
add
pop
jmp
sub
in
xchg
lahf
mov
mov
push
pop
jg
dec
hlt
ror
inc
dec
inc
je
mov
jge
push
adc
inc
push
ret
in
adc
cmp
int3
pusha
addb
and
test
addr16
shl
lcall
inc
push
xor
and
pushf
push
push
lds
xchg
and
or
push
lret
pop
into
add
xor
pop
jle
inc
jg
mov
sti
mov
jg
jle
sbb
or
mov
jmp
cltd
sbb
int
cwtl
dec
arpl
or
inc
cs
aad
fbld
lock
icebp
hlt
inc
lahf
lock
and
mov
sti
xchg
cmp
clc
mov
cmpb
fucomp
out
sbb
test
jg
sbb
sbb
iret
jb
inc
cli
push
fsubs
inc
hlt
lret
out
jae
loopne
pop
inc
mov
in
std
mov
pop
ss
adc
adc
fdivrl
jnp
lock
pushf
dec
stos
mov
cmp
shrb
out
adc
pop
dec
mov
mov
frstor
mov
ss
push
rolb
add
sbb
xchg
aad
cmpb
xorl
mov
jmp
je
gs
icebp
cmp
pop
shll
xor
mov
fidivs
je
stos
cmp
lds
das
imul
push
sbb
dec
sbbb
dec
scas
xchg
adc
inc
inc
dec
rcll
add
shll
jo
jnp
adc
pop
in
jmp
jl
movsl
and
jbe
lahf
cld
insl
cld
jle
js
jl
sbb
or
jmp
mov
insl
pop
popf
test
mov
outsb
lcall
clc
pop
je
xor
or
insb
sub
inc
enter
daa
cmc
xlat
repnz
pusha
repnz
push
fnsave
jb
popf
lock
sub
lcall
jg
sbb
cmc
popf
dec
idivb
mov
out
popf
xchg
arpl
clc
jnp
pop
ds
sbb
cld
test
push
stc
sarb
arpl
dec
popf
int
flds
xlat
arpl
addr16
cmp
jb
cltd
pop
jbe
cmp
add
fwait
xor
pop
sbb
lcall
andb
cmp
sub
mov
cmp
enter
mov
inc
xchg
aas
jge
fwait
ja
sbb
cmp
cmp
loopne
inc
add
std
pop
push
lods
fisttpl
dec
test
mov
dec
xchg
xor
mov
mov
lods
xchg
push
xchg
mov
adc
loop
xchg
imul
lret
adc
stc
leave
fnsave
in
xor
jp
mov
cmc
push
filds
movsl
add
mov
lds
and
add
shl
repz
lds
cld
mov
xchg
call
into
int3
rcrl
std
lods
out
sarb
nop
xchg
out
scas
jne
loopne
sub
clc
inc
xor
add
cld
and
and
push
icebp
jb
shl
sbb
push
das
ret
cmpsl
dec
sbb
and
dec
push
or
inc
lods
int
fldenv
int3
ljmp
pause
xchg
xchg
mov
mov
xor
add
mov
lock
es
dec
jle
subl
xorl
sbb
ss
fcoml
es
shr
in
fmul
scas
sbb
cmc
and
addr16
cs
mov
out
mov
sbb
push
into
cmp
or
mov
or
lahf
fidivrs
out
mov
cwtl
mov
xor
pop
std
lcall
shll
frstor
outsl
dec
sarl
in
je
icebp
mov
xchg
data16
out
xchg
xor
jmp
icebp
shr
fmul
int
fwait
lret
sbb
xor
aas
in
mov
sub
out
clc
lret
adc
pop
stos
repz
jg
imul
adc
adc
jmp
mov
mov
add
cmp
lret
jle
pop
mov
out
jp
mov
test
push
jmp
xchg
movsl
sub
stos
fcom
pop
mov
fcmove
das
fisubrl
adc
ficompl
aas
mov
jno
pop
stos
aad
pushf
cmp
jp
shlb
xchg
popa
fwait
cld
lods
xor
cmc
cld
neg
rorb
or
cmp
test
and
pushf
sub
sbb
pop
or
ljmp
sarb
fnsave
fiaddl
mov
xor
int
cmp
in
jne
push
insb
shrb
push
or
rorl
jmp
cmc
arpl
call
xchg
push
loope
sub
dec
orl
jno
sub
and
or
in
outsb
push
shll
lcall
ffree
mov
xchg
xor
inc
sbb
cmp
rcrb
enter
test
fwait
ds
jne
inc
test
divl
pop
and
orb
mov
push
fs
hlt
andl
ss
faddp
stc
sbb
sbb
or
dec
mov
adc
mov
daa
rcr
adc
sbb
xor
std
lahf
xor
pop
clc
sub
or
sarb
sub
scas
mov
and
outsb
and
ja
rolb
mov
je
sbb
sbb
xor
jg
mov
sbb
mov
dec
loopne
inc
mov
movsb
into
pop
daa
pushf
cli
adc
imul
pop
push
add
mov
sbb
xor
shrl
lods
dec
pop
pop
inc
mov
dec
aas
ds
call
inc
push
mov
xchg
ss
inc
jecxz
xor
add
dec
sub
jg
aam
and
cmc
mov
addr16
jmp
ljmp
icebp
push
and
clc
xchg
push
jne
leave
dec
out
fiadds
or
xor
cmp
jp
mov
xchg
pop
jecxz
loope
mov
mov
rolb
lret
das
in
shlb
sub
hlt
pop
mov
mov
orl
push
sti
jle
add
push
movswl
jg
adc
cmp
jo
in
jle
fisubrs
xchg
sbb
cmp
or
mov
popa
enter
push
mov
int3
andl
clc
out
and
movsl
clc
xchg
xchg
adc
cs
outsb
test
sub
div
xchg
pop
loope
test
or
ljmp
jae
lcall
xor
lret
pop
stos
pop
int
lods
test
stos
addr16
push
sub
scas
out
adc
adc
push
cmp
push
test
into
aas
inc
jmp
adc
fimuls
and
pushf
sub
lret
test
cmp
fyl2x
push
dec
cmp
ljmp
nop
or
shlb
outsb
mov
jmp
xor
out
movsl
mov
pushf
and
sub
lahf
loop
sar
clc
insl
fistpll
xchg
aad
dec
jle
cmc
pop
inc
mov
cmp
xchg
ds
cmpsb
fldl
in
loopne
add
out
mov
pop
icebp
fstpl
in
popf
adc
incb
jb
inc
jb
dec
in
mov
sbb
push
dec
sarb
push
orl
push
xchg
add
xchg
dec
ret
sub
cmp
add
push
push
in
mov
fbld
lods
int
and
movsl
icebp
call
or
filds
aad
rolb
mov
cmp
cmp
paddb
dec
mov
jg
cld
fiaddl
pop
jbe
jmp
orl
enter
jns
mov
inc
jg
push
or
mov
dec
xchg
jns
mov
addr16
dec
and
push
insb
sahf
ds
inc
and
cmp
jp
mov
jg
push
negb
test
rclb
and
push
inc
pop
add
add
xor
mov
repz
jmp
pop
pop
stc
fimuls
inc
dec
jge
mov
add
cmpsb
int3
or
pop
cmp
sbb
dec
xor
lret
out
and
into
lcall
jecxz
add
sbbl
mov
loop
in
jnp
sbb
ds
pop
andb
cld
ds
cwtl
dec
jmp
out
xchg
jnp
in
mov
repnz
add
shl
jnp
push
outsb
mov
and
popa
mov
inc
push
lea
cmpsb
pop
inc
xchg
adc
ja
icebp
out
dec
jge
imul
inc
mov
cltd
adc
jg
fwait
inc
mov
je
push
fisubrs
xor
mov
icebp
sbb
and
sub
jge
adc
jl
popf
fadd
ret
leave
xor
and
test
xlat
gs
pop
push
mov
repz
out
jns
sbb
cmp
in
jp
in
daa
pusha
mov
hlt
inc
fiadds
es
das
jb
xchg
ljmp
mov
insb
idiv
dec
xchg
push
loop
pushf
sub
inc
int3
add
fs
test
ror
dec
jl
xor
jno
test
cmp
je
loopne
adc
call
jne
loop
xchg
in
stc
aaa
push
xor
call
push
mov
in
mov
mov
mov
dec
and
ljmp
cli
push
mov
inc
push
cmp
pushl
data16
xchg
jg
call
sbb
push
test
cmp
cmp
cmc
mov
cmp
loopne
lret
testb
daa
jecxz
jne
mov
sysenter
sbb
push
scas
xchg
xor
mov
add
inc
sub
sub
sti
cmp
sub
das
and
mov
mov
stos
js
mov
mov
das
testl
sbb
int3
jo
movb
jle
push
daa
aaa
bound
int3
jnp
adc
add
sbb
jb
dec
push
add
pop
jo
sbb
pop
lret
test
addr16
testl
ljmp
lahf
bound
clc
inc
jp
out
jg
and
cs
mov
sti
inc
nop
aaa
xchg
cwtl
lret
and
adc
mov
fdivl
bound
mov
or
negb
leave
adc
add
clc
xchg
cmp
inc
mov
add
dec
sub
addr16
sub
sbb
jb
jb
lods
testb
dec
push
inc
dec
dec
push
ret
lret
lret
dec
clc
adc
xchg
iret
loopne,pn
jb
jg
sahf
cmp
fisubrs
cmpsb
cmp
dec
bound
sbb
sub
sahf
in
inc
subl
mov
outsb
fdivl
add
dec
xchg
fwait
cmovbe
add
imul
jb
xchg
or
fstps
enter
push
cmp
adcl
jg
xor
ret
es
adc
pop
rol
cmpsb
data16
and
sbb
xchg
sbb
inc
into
stos
dec
xor
inc
frstor
into
cwtl
repz
dec
icebp
sub
xchg
pop
fimuls
add
mov
orl
sahf
push
clc
xor
test
lret
test
push
lock
and
insb
insl
dec
pushl
ds
insb
neg
jo
sahf
mov
aaa
flds
cmpsb
add
pushf
inc
imull
push
idivl
int
std
daa
dec
cwtl
inc
cs
cmp
cltd
test
imul
push
incl
jge
add
imul
add
jnp
sbb
loopne
xor
dec
sti
add
es
jnp
and
and
leave
pop
push
pop
test
ror
rcrb
sub
rorl
xchg
jge
js
xchg
or
push
dec
xchg
aaa
daa
jmp
ds
aas
mov
inc
out
fs
jl
cwtl
jle
les
push
mov
leave
arpl
mov
mov
sar
jne
pop
out
cwtl
mov
lret
xchg
mov
in
or
dec
inc
or
sbb
addr16
call
testb
or
mov
ljmp
push
lods
cmpsl
dec
aaa
cmc
repnz
adc
xchg
xlat
or
pop
lods
jg
push
movsb
data16
pop
iret
and
xchg
loop
or
popl
leave
or
cwtl
lret
icebp
addr16
or
push
sbb
fldcw
hlt
rol
pop
cmp
push
fisttpll
pop
pop
jl
inc
sub
sbb
inc
mov
push
jl
inc
lcall
cmp
xor
dec
int
push
cli
inc
mov
hlt
jle
xor
cmp
mov
xchg
jp
xchg
inc
enter
mov
lret
dec
in
mov
mov
xchg
sub
dec
pushf
hlt
sub
mov
or
add
aas
addr16
xchg
mov
xor
js
xchg
in
iret
pop
imul
xchg
pusha
aad
dec
jo
xchg
aas
push
and
repz
incl
mov
stos
mov
mov
push
nop
mov
jle
leave
push
mov
mov
out
es
pop
icebp
and
xchg
cwtl
push
mov
mov
gs
cmp
mov
ret
dec
repnz
dec
idivb
add
divb
jp
xor
adc
lret
jbe
add
mov
out
into
in
xchg
xchg
ret
dec
xchg
jecxz
mov
in
mov
bound
test
test
push
stos
xlat
dec
xor
xor
pop
es
push
addr16
int3
jnp
fsubs
fidivl
pop
inc
mov
les
cmp
popf
in
mov
jl
jns
dec
out
mov
push
ret
pop
mov
xlat
push
xchg
pop
pushw
mov
aam
cld
nop
gs
test
daa
movsl
js
aas
out
dec
dec
gs
push
fwait
ret
lods
or
xchg
lret
jge
or
xlat
dec
fcmovbe
rcr
inc
shr
push
jl
aas
clc
lret
cli
lret
ds
movhps
pop
mov
push
mov
addb
roll
in
sbb
fiaddl
loopne
test
std
inc
test
test
out
pop
gs
loope
push
cwtl
orb
idivl
jmp
in
ss
ret
pop
dec
pop
xchg
push
int3
fs
jle
out
adc
aas
cmp
out
push
test
add
add
jnp
shr
inc
pushf
jmp
jbe
out
or
shll
pop
or
xchg
iret
inc
ret
pop
int
lcall
push
and
data16
dec
push
dec
mov
push
pushf
nop
adc
cwtl
cli
stos
fstp
and
push
insl
stos
push
test
and
out
sbb
in
cltd
repz
jns
lods
aaa
mov
or
or
pushf
xchg
and
insb
ja
dec
and
cmovl
out
or
test
adc
shll
pop
stos
push
pop
faddl
scas
and
fcompl
aam
ljmp
jne
movsl
popf
lahf
bound
dec
iret
ret
ja
outsb
addr16
negl
js
fstps
repnz
loopne
or
cmp
addr16
push
in
stos
fnstenv
je
ds
add
sub
rorl
mov
inc
xor
cmp
loope
adc
cld
sbb
in
mov
out
testb
jmp
mov
nop
loop
fmuls
ret
xorl
push
jp
sbb
mov
pop
outsb
sbb
in
outsb
mov
insb
cmp
xlat
push
jle
mov
add
or
ljmp
and
test
xchg
cltd
shl
xchg
mov
cwtl
xlat
imul
push
lock
jle
fildl
sub
and
das
add
xchg
sar
das
fwait
inc
cmp
adc
les
pop
repz
pop
inc
incl
and
incl
shrl
pushf
pushf
icebp
push
mov
inc
call
fbld
mov
jnp
aad
loope
adc
cmp
xchg
sbb
mov
and
popa
push
xor
dec
cld
xchg
xchg
and
aas
fwait
adc
mov
mov
mov
xchg
mov
mov
or
xor
cmp
jo
pushf
pushl
cltd
or
iret
mov
push
fbld
xor
fcomps
loop
in
ljmp
cmpsl
fcompl
dec
loop
xchg
xor
or
outsb
or
adc
test
sub
incl
leave
aam
pushl
cmpsl
jg
faddp
icebp
sbb
xor
sbb
pop
in
scas
dec
std
xchg
lods
jle
icebp
jl
dec
jmp
imul
cmp
cmpb
call
pop
or
rorb
ror
push
or
dec
fistpl
test
jb
loopne
movsl
add
jle
xor
subl
ficoms
mov
scas
test
xchg
add
pop
clc
cli
and
dec
mov
push
inc
int
outsb
testb
pop
into
std
loop
pop
jle
mov
jp
or
and
call
testl
jge
outsl
jmp
in
test
out
mov
js
mov
divb
ret
push
mov
cltd
sub
mov
cmc
popa
pop
cmpsl
popf
lahf
scas
dec
loope
sbb
mov
lahf
xor
cltd
mov
lock
pushf
in
inc
fdivl
dec
pop
dec
pop
stc
das
bswap
xchg
lods
xor
aas
or
sub
mov
cli
dec
pop
cmc
clc
repz
xchg
mov
inc
daa
ret
dec
sub
fstp
lahf
pushf
and
cmp
mov
clc
iret
ret
xchg
push
repz
lea
mov
icebp
loopne
xchg
inc
loope
add
mov
call
cmp
push
scas
shlb
pop
jge
ret
lahf
add
mov
pop
push
push
cmp
imul
lcall
sub
mov
in
arpl
mov
add
outsb
inc
fsubrp
adc
sub
subb
xchg
popf
hlt
pop
dec
push
hlt
sub
sarb
sbb
rcrb
and
or
jnp
sub
push
mov
stc
adc
cmpsb
cs
cltd
repnz
inc
jmp
das
hlt
call
and
pop
or
sbb
and
push
pop
mov
xchg
dec
sbbl
mov
mov
xor
lods
loopne
inc
rcrb
lahf
leave
cmp
jge
jle
jns
fwait
daa
lods
sbb
xchg
std
pop
pop
stos
fs
lcall
fucomp
cmp
mov
stos
mov
cmp
sbb
faddl
and
push
cmp
pop
mov
inc
pop
xorb
and
dec
in
mov
js
cmp
sub
fnstsw
into
fstpt
lods
jp
push
test
icebp
mov
aad
aaa
mov
push
nop
dec
aaa
adc
jecxz
add
stos
jl
xchg
fistpll
mov
inc
mov
push
pop
push
notl
dec
das
testb
mov
and
dec
push
daa
dec
or
pop
adc
insl
mov
cmpb
jbe
add
repnz
inc
pushl
sarl
loop
cmpsl
jne
sub
dec
mov
movsl
mov
das
mov
test
imul
data16
lea
popf
popf
faddl
call
daa
ret
inc
xchg
push
ret
sahf
fildl
iret
inc
sub
xchg
pushf
and
sbb
adcl
clc
pop
inc
mov
pushf
out
push
sbbb
js
rcl
adc
mul
call
jle
enter
jo
pop
add
jns
mov
inc
je
jg
push
adc
add
pop
jo
sub
jo
mov
lret
xor
cmpsb
out
adc
inc
pop
adc
jecxz
in
xor
dec
push
cli
sub
lret
out
adc
mov
jns
dec
test
aam
leave
out
jle
aaa
pop
das
rcrb
inc
cld
jmp
push
ret
pop
aam
cltd
movsb
imull
insb
lahf
push
lods
xchg
push
lods
sahf
mov
adc
loopne
adc
pop
cmc
add
or
dec
lahf
inc
cmp
adc
movb
into
das
sarb
pop
xchg
or
xchg
mov
fildll
hlt
xor
mov
pop
fwait
testl
dec
clc
not
cmp
mov
sub
lret
xlat
push
les
mov
mov
cmp
xor
int3
push
aam
aam
rclb
fcmovnu
leave
dec
or
add
std
scas
mov
pop
test
and
dec
sub
mov
int3
xor
sbb
sub
fmulp
stos
xchg
add
es
and
jge
push
popf
jnp
fs
push
aaa
and
arpl
lret
repnz
test
jmp
xor
cltd
pusha
ret
cmp
out
push
xlat
loopne
fstl
cmpxchg
sub
data16
pop
rorb
in
data16
xchg
inc
je
test
push
iret
pop
add
fdivrp
out
imul
dec
sarl
aad
sub
or
mov
jae
pop
inc
pushf
icebp
sub
fwait
jg
cmp
add
dec
mov
pop
ja
adc
imul
ja
pop
leave
push
push
sbb
je
push
and
data16
sbb
xchg
fstpt
push
scas
or
aaa
fs
out
daa
int
mov
ret
fisubrl
cld
repnz
pop
or
and
test
cwtl
idiv
cmp
aaa
mov
xorl
pusha
push
adc
jno
std
mov
or
data16
cwtl
js
mov
mov
loopne
cltd
push
mov
gs
push
icebp
not
mov
xchg
mov
inc
dec
insb
mov
cmpb
pop
pop
sbbb
or
icebp
push
jge
mov
in
sub
sbb
inc
pushf
fists
loope
sub
ficoms
fisubrl
rcrl
pop
lret
andb
stos
pop
or
aaa
fcmovu
mov
inc
jl
sub
in
mov
jo
xor
loope
inc
sbb
rep
dec
cmp
rol
mov
out
neg
push
mov
sub
shrb
cmp
pushf
sbb
cmp
movsb
mov
lret
out
push
add
dec
fisttpll
rcrl
inc
fwait
sub
les
inc
or
in
xchg
mov
xor
repz
fisubl
testl
mov
adc
lcall
cs
adc
push
pop
out
in
mov
lret
jnp
mov
popl
xor
mov
cmpsl
out
int3
jns
xchg
into
mov
xchg
sub
call
rcr
add
insl
add
in
cmp
ljmp
loopne
rcrb
pop
sahf
leave
jg
dec
xchg
jo
cwtl
mov
rcl
fwait
dec
push
xor
cld
add
js
dec
sub
xor
ljmp
inc
out
orb
int3
sub
mov
shrl
testb
icebp
sbb
mov
inc
xchg
jbe
xchg
mov
fimuls
xor
lods
sub
dec
jbe
insb
sti
and
pop
test
loopne
xchg
xor
sbb
in
fistpl
mov
cmp
xor
or
dec
xlat
inc
and
lret
loope
popa
xor
testb
add
jnp
sbb
loop
incb
shl
pop
ret
iret
popf
dec
push
neg
add
mov
xchg
imul
push
dec
fnstsw
xchg
push
in
sbb
pop
dec
pop
push
ds
cwtl
cwtl
jno
push
pop
stos
jns
xchg
jno
jns
mov
loope
dec
lret
int3
shll
jns
rcrb
jl
je
arpl
or
inc
mov
mov
push
xchg
in
dec
mov
sbb
sbb
mov
mov
adc
dec
pop
xchg
dec
inc
cld
add
lahf
mov
andl
xchg
fisubs
jge
push
outsb
fstpl
sub
ljmp
lret
test
push
jge
xlat
leave
mov
cwtl
rolb
aam
mov
fdivl
ret
pop
jbe
and
cli
adc
movsl
scas
cmp
xor
rcrb
repz
js
push
mov
mul
sub
stos
mov
push
push
mov
or
xor
push
add
outsb
cmp
mov
cwtl
lret
repnz
sub
imulb
test
push
incl
fisubrs
pop
push
das
lcall
cs
out
ljmp
in
cwtl
subl
out
add
mov
xor
cwtl
fistl
inc
andl
jmp
xorb
int
adc
fidivrs
xlat
popa
dec
add
jge
fsubs
xchg
mov
nop
mov
or
add
push
bound
xchg
inc
cld
nop
lcall
sbbl
scas
jle
dec
shrl
out
mov
aam
dec
cmc
jl
jge
mov
mov
repz
fimull
fs
dec
call
push
in
cmp
xchg
aad
out
sub
adc
jb
push
das
add
inc
fwait
push
in
fimuls
int3
es
out
sub
and
fstl
dec
inc
pop
or
push
fucomp
int3
cmp
pop
jge
push
incb
in
int3
pop
inc
fiadds
out
lods
fucomp
int3
add
push
xchg
aas
icebp
push
inc
sub
push
inc
mov
sbb
test
out
or
push
push
add
dec
dec
xor
shll
add
decl
sub
cmpsl
mov
or
jne
sub
add
pusha
ja
stos
ljmp
sub
into
mov
arpl
out
push
sbb
neg
repz
xchg
sbb
sbb
fcmovne
int3
dec
pop
ficoms
push
repnz
clc
cmpsl
mov
pop
int3
int3
rorb
add
push
sub
iret
inc
jmp
add
bound
hlt
dec
leave
xor
daa
jo
test
mov
outsl
push
cmp
and
int3
cmp
in
fucom
bswap
cmp
push
call
negb
icebp
push
dec
jl
stos
push
push
pop
cmp
in
movsl
mov
clc
stos
sub
mov
fcmovu
and
xchg
add
xchg
pop
sti
aam
push
lock
sarl
mov
mov
cld
out
push
icebp
ret
jl
icebp
sub
jns
iret
out
into
mov
sub
push
in
or
adc
dec
outsb
xlat
leave
jle
or
lods
fwait
mov
fwait
or
jns
roll
rclb
dec
inc
xchg
mov
movsb
cltd
pop
gs
gs
or
repz
xchg
jge
xor
dec
pop
lods
pop
pop
rorb
in
mov
call
movsb
in
add
sub
push
mov
xchg
fnsave
filds
adc
test
and
in
xor
stos
pop
cmp
sub
lods
mov
dec
sub
push
sbbb
lcall
in
pop
mov
pop
push
mov
enter
dec
push
mov
cld
cmpsb
mov
scas
aaa
cld
or
rdtsc
les
cmpsb
imul
lahf
adc
icebp
lahf
out
bound
stc
lods
or
sbb
inc
fstpt
or
mov
dec
mov
and
imul
fldcw
outsl
rclb
mov
pop
push
and
cmp
fisttps
mov
jo
testl
mov
adc
lods
int
fcom
gs
icebp
add
orl
and
out
mov
fnstcw
sbb
inc
out
lods
xchg
jae
xchg
rcrb
int
push
jnp
lods
sbb
push
fbld
jl
test
xchg
jmp
fmulp
inc
pop
jmp
and
into
loopne
cmp
add
mov
test
call
dec
ret
daa
xchg
lea
dec
mov
or
loopne
add
outsb
aaa
pop
or
int
sbbl
shrb
jg
jmp
fsubl
fwait
popa
imul
xchg
mov
int
jl
mov
or
push
add
int3
pop
sub
pop
lods
mov
fldcw
pop
mov
adc
or
pop
bound
mov
sbb
in
es
stos
mov
movsl
ficoml
xor
jle
pop
int3
and
mov
cwtl
or
cmp
decb
call
dec
jp
repnz
xchg
in
movsl
fsts
fwait
gs
mov
pusha
jle
testl
jg
mov
orl
cmp
or
xchg
aas
or
jmp
fidivrl
jne
pop
xchg
std
mov
std
xchg
push
loopne
roll
xor
dec
dec
xchg
ljmp
lods
addr16
lea
mov
dec
pushf
lret
or
cli
rolb
cmp
jg
mov
and
dec
cmpsl
mov
enter
mov
cld
mov
xlat
mov
mov
cmp
xor
lret
sub
dec
les
aad
cli
in
jbe
xchg
adc
movsb
out
inc
dec
lock
sbb
and
pop
or
roll
dec
fimull
adc
test
lahf
mov
outsb
mov
aam
lea
pop
add
aad
repnz
push
pop
and
adc
add
jmp
int
mov
shrl
jp
je
seta
push
dec
add
ljmp
jo
sub
sbbb
xor
daa
pop
orl
iret
cmpb
stc
add
cmp
mull
pop
bnd
xchg
mov
xchg
mov
out
je
sub
push
rcll
notl
aas
sbb
clc
mov
in
cltd
xor
popa
insb
add
and
or
popa
mov
xlat
xlat
into
add
test
or
mov
inc
ja
shll
hlt
jb
or
ja
push
jecxz
add
out
sbb
add
repz
mov
daa
decb
inc
shlb
pop
shrl
imul
fcompl
dec
js
add
jo
inc
xlat
int
divb
clc
clc
and
popa
sbb
push
inc
in
add
lcall
test
dec
jmp
insl
mov
xor
jg
repz
mov
out
or
pop
mov
enter
mov
lock
inc
shll
ss
sbb
sub
cmp
int
lods
push
pusha
ret
mov
int
adc
outsl
cmp
popf
out
repz
lret
stc
aaa
mov
sbb
ds
dec
inc
and
mov
fimuls
dec
lcall
add
pop
sub
dec
pushf
out
jno
aaa
jae
pop
repz
jmp
push
pushl
fisttps
add
jbe
bound
jg
dec
mov
repnz
add
jp
sbb
add
sub
lods
movntq
or
xorb
test
cmp
xchg
nop
test
icebp
mov
pop
lea
add
orb
sub
xchg
mov
mov
outsb
xchg
inc
push
movsb
sahf
sbb
add
jle
and
jbe
mov
adc
dec
sar
call
jge
in
pcmpeqw
sbb
add
push
fildll
add
xor
inc
add
and
fiadds
icebp
lcall
das
xchg
dec
sub
scas
shr
rcrl
mov
icebp
nop
push
jns
outsl
daa
sub
shl
sar
decb
mov
fildll
cmp
add
pop
faddp
das
push
ds
lock
lcall
sbb
cmp
dec
fistl
loop
xchg
sub
add
jge
insb
aam
sub
lds
cs
in
pop
mov
aad
cmp
ficoms
push
dec
mov
ficoms
cmp
sub
sbb
mov
xchg
sub
lret
pop
subl
clc
pushf
sbb
push
add
add
cli
mov
outsb
inc
adc
inc
mov
nop
xchg
xchg
push
mov
lock
nop
cltd
inc
aam
hlt
adc
or
mov
xlat
test
xor
and
lret
mov
adc
mov
cmp
inc
lcall
push
mov
jge
add
dec
je
aaa
out
ja
pop
int
mov
shrl
cwtl
or
and
or
mov
or
or
aas
mov
jne
repz
paddd
adc
mov
lret
int
or
pop
ret
add
jg
fdivrl
pop
repnz
inc
orl
inc
ljmp
cld
cmc
push
repnz
xchg
lcall
adc
pop
push
cli
cmpsl
movsb
and
jmp
push
inc
fucomi
scas
addr16
and
shlb
std
cmpsl
sub
je
sub
dec
cld
fnsave
pushf
inc
movsl
repnz
pop
adc
mov
push
dec
repz
sub
mov
mov
out
iret
sarl
mov
ss
aas
ret
xchg
cld
push
inc
pop
add
xchg
repnz
push
std
sarb
popf
push
pop
sbb
mov
add
push
adc
ds
dec
enter
repnz
xchg
jb
lock
and
sti
push
xor
iret
out
out
push
movsb
movsb
sahf
rcrb
cmp
lods
xor
jnp
in
cmp
and
mov
cmp
dec
jae
ret
dec
lock
or
or
popa
or
fiadds
mov
jo
nop
and
or
mov
and
pop
mov
xchg
push
iret
loope
pop
mov
pop
loopne
daa
pop
and
je
and
scas
pop
mov
push
mov
fidivrs
loope
mov
mov
push
lods
fwait
inc
ficompl
aad
mov
and
inc
jnp
add
in
cld
mov
xchg
loop
and
jnp
loop
nop
jle
sbb
mov
adc
mov
cld
aaa
dec
aam
icebp
mov
sub
in
xor
or
xor
jae
sub
jo
mov
mov
sbb
adc
mov
push
mov
dec
cmpsl
shll
int3
shr
jp
mov
adc
aam
ret
rcl
dec
pop
pusha
imul
mov
addr16
and
sub
dec
jmp
scas
lds
lret
and
dec
cld
push
add
xchg
cmp
push
out
push
dec
push
into
add
push
dec
adc
mov
adc
jg
dec
lahf
jae
js
leave
iret
shlb
and
sbb
aam
sub
add
mov
shrb
negb
jno
jge
hlt
jge
pop
test
clc
sbb
sbb
gs
loopne
adc
jg
and
testl
mov
dec
dec
mov
and
mov
std
dec
in
or
test
push
adc
nop
fdivr
js
inc
decb
push
or
cwtl
push
das
mov
push
roll
fsin
scas
nop
jo
sbb
cld
dec
lret
stos
push
rorb
rolb
mov
or
jb
ds
xlat
xchg
push
iret
add
and
sbb
pusha
loop
icebp
inc
pop
dec
cwtl
iret
imul
cmpb
fbstp
jge
inc
inc
test
cli
repnz
les
dec
and
dec
test
xchg
out
fs
cwtl
bound
stos
aaa
sub
stc
mov
lcall
jge
adc
dec
lds
les
jmp
jo
fs
shl
xor
imul
mov
mov
adc
pop
test
gs
lods
pop
mov
xchg
mov
outsl
mov
dec
clc
push
jb
stos
inc
faddl
mov
les
outsb
xchg
leave
fmuls
aad
xchg
or
cli
push
inc
pop
xchg
inc
jns
or
mov
ja
cmpsb
mov
mov
pop
cmp
pushf
or
test
fsubrl
out
jmp
incl
insb
xchg
bound
or
jg
add
jge
mov
inc
xchg
fidivl
popl
mov
bound
jno
or
cmp
jno
div
lock
repnz
out
sbb
mov
add
push
cmpsb
pop
push
test
sti
lds
into
pop
ror
adc
jnp
xor
call
pop
scas
rcrl
imul
stos
mov
push
cmp
jne
aas
fcompl
push
lcall
sti
adc
mov
loopne
cmpsb
fistps
arpl
jns
lcall
sti
push
test
fmulp
jmp
xchg
es
sbb
mov
dec
lret
push
addr16
rolb
pushf
xor
shll
cs
mov
jb
lock
cmp
xchg
mov
mov
int3
pop
mov
sets
inc
icebp
lods
mov
dec
pop
orl
jbe
push
inc
sahf
aad
cmp
jle
fwait
xor
or
xlat
push
shl
xchg
ds
xchg
pop
jmp
push
mov
pop
pushf
sbb
sbb
or
ret
fdivrs
cmp
pushf
int3
adc
popf
call
mov
push
mov
cmp
test
test
movsb
roll
xchg
fstpl
mov
xor
and
inc
and
dec
or
jecxz
in
mov
divb
push
jg
in
daa
mov
mov
or
jle
pop
mov
fidivrs
stos
cltd
and
dec
and
scas
and
lods
js
dec
xchg
mov
loop
mov
ret
mov
cmp
mov
ret
adc
lods
iret
pop
mov
rorb
into
sub
int
pop
xchg
and
loope
pop
mov
int
stos
je
and
icebp
fildl
push
mov
jg
les
addl
mov
pop
jmp
stos
jbe
clc
xchg
bound
push
mov
out
mov
aas
in
aas
stc
jecxz
add
out
mov
popa
xchg
and
fsubrp
dec
sub
shrl
cmp
push
pop
into
mov
std
and
push
jg
jbe
push
imul
mov
pushf
sarl
outsb
and
gs
add
arpl
cmp
mov
xor
aad
loop
xchg
pop
sub
cmpsb
sbb
mov
mov
iret
call
jnp
testl
inc
in
out
dec
xor
lcall
fistpl
mov
adc
xor
push
stos
cmp
inc
xchg
and
ss
mov
fdivrl
dec
inc
jle
int
adc
xchg
push
push
sbb
xchg
lcall
pop
repz
rcll
xchg
sahf
sbb
lret
sarb
in
jne
arpl
movsb
adc
xorl
repnz
push
jbe
cmp
add
cmpsb
cmc
push
dec
sbb
xchg
adc
ljmp
cmpsl
or
icebp
mov
stos
dec
popf
scas
test
std
mov
lret
and
movsb
es
or
dec
cmp
scas
addr16
push
sub
jl
outsb
xchg
adc
xchg
cmp
xchg
jg
jae
testb
int3
out
lcall
mov
add
fcompl
pop
sub
sub
into
aam
jg
cmpsl
addb
add
filds
mov
loop
iret
dec
lret
sub
inc
sti
fdivrs
call
mov
stos
icebp
cli
daa
repnz
pop
cmp
repz
xchg
mov
or
js
mov
lea
push
adc
mov
call
jns
mov
ss
cmp
xchg
jo
roll
or
hlt
mov
dec
cmp
nop
sarb
push
push
sbb
cmpb
jnp
addl
in
push
push
inc
outsb
addb
push
jle
jl
lcall
cmp
cmp
loope
incl
mov
mov
xlat
clc
cltd
bound
pop
add
or
mov
push
dec
outsl
adc
inc
pop
clc
jge
xchg
cmc
push
sub
dec
jecxz
pop
sbb
or
pop
push
in
mov
sub
sub
lahf
sub
pop
lock
negl
jns
call
or
push
adc
add
and
mov
lret
out
dec
pusha
fadd
inc
lret
popa
aas
mov
stos
jl
iret
ret
mov
stos
jmp
test
push
xchg
and
jle
das
testl
dec
add
push
dec
cmp
pop
int
jge
scas
outsl
scas
or
in
or
dec
xlat
out
mov
sbb
cmpsl
dec
adc
cld
out
mov
dec
outsb
cltd
xor
mov
scas
into
lock
sahf
xchg
mov
inc
xor
mov
sub
xchg
and
scas
adc
cmp
xchg
xchg
int3
hlt
mov
inc
lret
xor
lods
jp
pop
sbb
inc
xchg
mov
sbb
ljmp
inc
mov
or
push
ret
xorb
leave
sbb
icebp
push
sbb
jae
lret
push
sub
sub
imulb
and
clc
inc
sbbl
jo
push
mov
lods
jne
pop
mov
stos
jp
mov
pop
out
push
jp
push
add
dec
fdivp
pushf
roll
out
sub
add
push
sbb
lods
add
daa
hlt
mov
dec
iret
stos
stos
dec
jno
jp
jnp
leave
xchg
jo
lcall
cltd
cmpsb
and
push
inc
push
clc
mov
je
into
sub
iret
test
or
mov
pop
jle
fidivs
inc
imul
inc
mov
jo
add
mov
adc
mov
push
sub
sub
jae
rorb
outsb
jmp
cltd
jnp
mov
xor
out
adc
xor
loopne
inc
dec
add
loopne
or
sbb
jg
mov
in
in
inc
inc
cli
leave
mov
inc
push
inc
int3
mov
jle
xchg
cs
xor
les
aaa
and
nop
ss
test
inc
test
testl
sub
mov
in
adc
test
or
add
iret
es
fstp
adc
es
lods
xor
jg
out
loopne
cmp
or
fstps
dec
adc
rcr
out
test
xlat
stc
test
push
cld
test
pop
idivb
sub
fldcw
idivb
sbb
aam
out
lock
pop
cmc
push
idivl
xchg
dec
sub
dec
sbb
jmp
aas
call
lods
push
add
js
ds
bound
repnz
aad
lods
and
or
xor
adc
or
or
xchg
mov
lahf
push
sub
ss
mov
movsb
push
dec
sahf
int3
xchg
outsb
int3
shr
xchg
mov
testl
mov
xchg
imulb
push
out
mov
lods
cmp
cmc
out
es
jns
mov
int3
inc
dec
dec
inc
das
mov
dec
pop
mov
cli
or
loope
lcall
out
jb
mov
fcmovu
xor
push
xchg
cli
stc
and
push
cmp
out
cltd
js
add
mov
xchg
pushf
sub
push
test
jae
cmp
pop
bound
insb
jg
imul
movsl
push
je
sbb
add
push
pusha
nop
push
repnz
lcall
and
add
test
movb
dec
mov
scas
push
push
sbb
dec
mov
popa
out
dec
push
cvtps2pd
iret
add
aad
mov
neg
jae
test
sbb
js
faddl
hlt
out
incb
testl
adc
scas
nop
inc
mov
test
pop
pop
push
jmp
scas
testl
xor
popf
fstpt
mov
mov
cltd
or
int
add
pop
lret
add
sahf
addr16
std
dec
adc
dec
shrb
pop
xchg
daa
in
fildl
dec
lds
cli
stc
push
dec
fisubrs
mov
adc
sbb
mov
push
dec
in
mov
jle
sub
mov
test
call
sahf
jecxz
adc
add
cmp
or
jge
ret
push
loopne
daa
pusha
dec
xor
frstor
loope
lcall
lea
sub
or
aaa
aaa
loope
mov
addb
mov
fs
adcb
and
cmpb
ss
cmp
pop
loope
rorb
stos
cltd
xchg
add
je
sub
push
add
mov
mulb
dec
mov
call
dec
jns
psubsb
dec
cs
push
fsubs
enter
out
jg
mov
sub
mov
cmpb
push
jecxz
or
adc
ss
int3
inc
dec
call
sub
pop
push
stc
int
add
pushf
xchg
mov
stos
into
faddl
imul
bnd
cmp
fidivrl
cmp
add
mov
dec
insl
out
arpl
daa
rcll
sub
andl
jno
and
push
inc
mov
xchg
lods
inc
pop
pusha
stos
mov
test
pop
xor
dec
jmp
xchg
xchg
cmp
inc
negb
repz
mov
lock
jmp
fstp
movsl
inc
sbb
mov
inc
fstps
stos
int
cmp
notb
fcomi
imul
fimull
jbe
jle
aas
subb
mov
cmp
sti
ds
mov
sub
in
out
pop
xchg
cli
jp
lods
jge
push
sbb
es
int3
pop
jmp
lcall
and
mov
test
leave
into
xchg
dec
and
inc
decl
cmp
xor
add
lret
into
shlb
fcmovbe
loop
into
gs
xchg
mov
sbb
repnz
inc
decl
xchg
sahf
rolb
pop
fisubs
pop
lds
and
scas
cwtl
mov
cmp
loop
cmp
sub
leave
lock
jl
loopne
in
lahf
les
sbb
add
fistpll
mov
pushf
lcall
fimull
or
mov
cmp
sahf
add
xor
roll
or
sbb
add
jle
icebp
ds
fcmovb
cmpsl
sub
test
cld
cmp
adc
or
xchg
das
call
aam
fucomi
sti
pop
sub
repnz
adc
subl
shl
or
xor
outsb
mov
data16
fwait
mov
mov
or
lock
xchg
sub
cmpsb
adcb
sub
xor
repnz
jp
arpl
push
pop
pop
pop
mov
pop
push
clc
jle
inc
arpl
daa
clc
xor
pop
xchg
sbb
inc
out
cmpsl
mov
movsl
mov
orb
xchg
jp
ds
xchg
inc
adc
clc
xchg
inc
lret
aam
rol
dec
or
add
fucomip
mov
jmp
mov
jg
into
jnp
pop
outsb
sbb
fdivrs
mov
inc
push
imul
and
orb
sbb
cli
pop
inc
test
cmp
cmc
repnz
fldl
repz
hlt
icebp
pushf
dec
sub
and
aam
sub
xor
cmc
ret
xchg
inc
add
dec
adc
xchg
test
aam
lret
iret
or
into
out
sub
jb
xor
jp
fiaddl
cmp
xchg
dec
xchg
clc
xor
stos
xchg
nop
dec
ret
neg
cmp
ljmp
sarb
push
push
out
inc
dec
addr16
int3
cmp
mov
ljmp
adc
mov
sbbl
inc
jle
cmpsl
and
orb
or
scas
xchg
pop
cs
incl
pop
mov
imul
ror
sub
mov
mov
je
sti
scas
lods
cwtl
jecxz
rorb
into
inc
popa
sti
in
jns
mov
into
ja
je
lcall
loop
aad
nop
dec
push
ret
lods
shll
pop
jmp
xor
scas
jmp
cli
mov
cmp
testl
add
sub
cld
dec
sahf
stos
pop
out
lret
pushl
std
jmp
and
mov
in
sub
mov
ret
jne
pop
xlat
and
xchg
dec
cmp
jp
cmp
xor
das
sbb
push
ret
insb
test
inc
je
aad
and
cmc
cmpsl
out
rorl
sbb
dec
loopne
dec
sub
inc
rcrl
addr16
and
push
hlt
daa
cmpsl
out
mov
fstpl
jecxz
mov
testb
std
out
mov
push
into
cmpsb
or
push
ret
jmp
loop
addr16
fadd
lret
icebp
pop
loop
adc
inc
jge
pop
fildl
repz
and
cmp
fwait
out
mov
out
out
sub
scas
faddl
push
jl
jecxz
jl
xor
or
jb
addr16
dec
sbb
xor
popf
mov
pop
push
test
cmpsl
test
push
and
mov
adc
push
mov
mov
stos
mov
cwtl
or
mov
leave
push
mov
sub
push
idivb
pop
ret
add
popf
xchg
fwait
pop
xchg
inc
sub
and
sub
jmp
fsub
loopne
jo
lcall
xor
mov
add
jmp
cli
jmp
test
cmp
xchg
add
rcr
pop
in
loope
dec
cld
mov
xchg
adc
shr
inc
cmc
add
imul
xor
push
jnp
popf
cmpsl
and
mov
ljmp
push
xchg
jae
xor
pop
outsb
outsb
icebp
aaa
pop
sahf
inc
push
int3
ljmp
jp
mov
xor
mov
add
mov
dec
add
sbbl
push
xor
bswap
inc
stc
fwait
sub
inc
into
out
rorl
or
adc
cmp
and
ljmp
popf
test
aad
inc
loop
fs
gs
mov
jo
into
std
and
push
sub
and
adc
cld
jo
add
mov
cmp
cwtl
xor
inc
rorb
fdivp
jecxz
cli
cmp
xchg
pop
and
and
cs
or
dec
sub
push
fwait
pop
push
mov
into
test
mov
fdivrl
repz
stos
adc
cltd
dec
fmulp
dec
ds
subl
inc
mov
mov
pop
cmp
flds
dec
inc
fwait
mov
sbb
xchg
shrl
sub
dec
xchg
mov
outsb
scas
pop
lret
nop
cltd
dec
iret
fadds
dec
nop
adc
xor
mov
dec
sarb
je
and
adc
jle
loopne
add
push
int
mov
adc
xchg
and
loopne
and
cmp
ja
xchg
adcl
inc
mov
inc
jmp
data16
lods
pushf
dec
addl
adc
js
shrb
inc
xor
dec
lcall
mov
mov
shlb
or
cwtl
stos
inc
imul
xor
lret
ja
inc
inc
add
fsts
sub
cvttps2pi
imul
mov
adc
and
cld
mov
mov
shl
push
or
xchg
cld
int
adc
aaa
enter
mov
xor
stos
push
fcmovu
int
aaa
or
jl
xlat
icebp
dec
xchg
fsubrs
adc
cmp
pop
jmp
mov
out
jge
push
test
out
in
test
or
in
sbb
or
mov
inc
scas
lretw
outsb
and
mov
mov
rcr
mov
or
in
clc
xchg
xor
aas
jle
mov
mov
xor
dec
jg
mov
mov
or
das
and
fwait
jo
cld
les
je
jle
addb
stc
mov
loope
push
pop
dec
rorb
popf
push
or
pusha
jno
jge
mov
scas
push
dec
in
dec
mov
clc
fistl
loope
adc
pop
mov
adc
xchg
xor
inc
xchg
into
movsl
xor
xchg
lahf
ret
cltd
or
adc
inc
sub
jmp
add
ret
push
mov
jle
or
ret
cwtl
aaa
pop
shlb
loope
inc
pop
jbe
sbb
mov
dec
movsl
add
mov
adc
je
iret
mov
subb
and
jg
jnp
ss
stos
stos
pop
push
add
into
adc
inc
pop
push
mov
popf
rcrb
or
mov
popa
mov
and
andb
cs
jge
xchg
mov
test
lcall
or
loope
in
sbb
jmp
rolb
sbb
sar
ja
pushf
addr16
lret
xor
or
adc
adc
jg
movsb
pop
xor
dec
mov
add
orl
daa
pop
and
cli
mov
sub
push
fistps
daa
adc
fwait
xchg
repnz
sub
repz
es
pop
repnz
mov
inc
fistl
push
xchg
inc
bound
mov
add
jae
cmp
mov
inc
gs
ljmp
push
inc
inc
lcall
cmp
xlat
and
mov
cli
mov
push
or
std
enter
mov
inc
mov
and
inc
int3
pop
sub
pop
je
add
out
mov
shlb
push
nop
mov
jno
inc
or
jg
dec
jecxz
stos
test
roll
lea
mov
lahf
fstps
cmp
pop
xchg
aam
push
stos
fsubrs
gs
leave
mov
repz
push
icebp
int3
push
lods
ret
jp
insb
into
in
js
jg,pt
jb
xchg
ljmp
pop
pop
pop
mov
sahf
mov
es
pop
lret
clc
and
inc
lods
cmp
loop
sbb
or
push
mov
ror
pop
sub
sub
clc
sahf
jp
mov
stos
dec
sub
cmp
xchg
xor
adc
adc
push
fldcw
inc
adc
adcl
jg
mov
stc
cmp
rorb
sbb
xor
addr16
popf
lcall
test
into
notb
inc
jge
ret
or
scas
aas
push
cld
mov
stc
mov
or
or
stos
jns
mov
xchg
jae
add
shll
or
and
add
jecxz
mov
in
inc
jne
stc
mov
lods
rolb
ljmp
cmp
ret
fcomp
aaa
cld
loopne
cmp
ds
xor
loope
es
mov
and
mov
xchg
fs
shr
xor
jmp
iret
adc
mov
sub
adc
ret
leave
adc
shll
loopne
lret
dec
leave
cs
pop
pop
dec
inc
and
cld
push
test
inc
pop
sti
pop
dec
sub
mov
xchg
scas
icebp
lret
leave
std
nop
mov
jns
or
out
add
mov
add
xchg
rol
enter
outsb
mov
add
enter
fidivrl
dec
aaa
test
xor
mov
push
inc
xor
lock
mov
mov
enter
enter
or
xchg
out
or
fisttpl
mov
sub
jl
or
or
xchg
in
ljmp
inc
mov
test
jg
inc
mov
pop
subb
adc
subl
addr16
popa
arpl
sub
mov
and
fsubl
out
cld
adc
movsl
lcall
mov
pop
stc
repz
test
std
pop
mov
xor
jbe
outsl
xor
fsubrs
sbb
mulb
call
adc
mov
xor
rorb
lcall
mov
test
ljmp
push
out
dec
inc
jle
jns
sahf
std
cmc
jo
icebp
lret
sti
inc
mov
xchg
nop
mov
dec
into
mov
push
das
enter
add
xor
inc
xor
in
fldt
mov
xchg
jo
lods
add
fs
mov
jo
jl
in
lcall
mov
xchg
mov
fsubl
mov
fwait
aaa
adc
xor
imull
sbb
mov
push
gs
loop
jp
in
fimuls
xchg
mov
into
cmp
jmp
rorl
adc
push
xor
xchg
xchg
inc
daa
xor
cmp
jle
sub
int
cmp
js
dec
jo
lret
push
cmpsb
ss
add
mov
push
movsl
or
imul
xor
lret
dec
or
xlat
test
jae
aaa
lcall
mov
or
mov
js
lock
nop
push
pop
cmp
and
loope
push
call
push
jo
sub
dec
in
jle
cmp
enter
pushl
cmpsb
cmp
sub
or
adcl
stc
aam
js
repnz
sbb
sbb
jle
adc
add
xor
negl
imul
inc
sub
mov
nop
std
and
jp
mov
adc
adc
in
adc
loopne
mov
xchg
cmp
sub
dec
stos
push
and
ss
dec
scas
pop
pop
sarb
fists
aaa
mov
jecxz
mov
andl
adc
std
test
vmresume
adc
jne
test
lods
push
inc
jnp
or
std
cwtl
push
sbb
fnsave
jne
xor
jnp
jge
push
pusha
into
inc
xor
mov
pop
sbb
add
out
inc
push
and
sub
sbb
add
mov
push
inc
sub
dec
sub
idivl
sub
cli
mov
or
sub
test
mov
and
dec
add
adc
cmc
lret
aaa
cmc
addl
xchg
and
jmp
jno
je
dec
push
subl
faddp
mov
test
shlb
xchg
shll
ja
mov
push
and
pop
jl
mov
jb
ret
aaa
and
std
cmp
aas
xchg
sbb
jle
movsb
lahf
lock
roll
sbb
bound
push
or
mov
add
pop
stos
scas
pop
xchg
mov
stos
sub
sti
ja
clc
decl
dec
jns
push
fisttpl
push
sub
or
rcrl
and
xor
in
hlt
ja
and
add
pop
mov
shll
adc
jle
cltd
aam
insl
lods
push
add
in
sub
fisttpl
ss
xor
outsl
add
das
inc
test
mov
cmp
xor
popa
int
cmpsl
dec
lahf
xor
push
getsec
mov
mov
mov
and
push
clc
push
adc
cld
into
push
adc
leave
pushf
mov
mov
or
scas
cmp
pusha
lods
lods
jg
sbb
jno
out
pop
xor
js
leave
jbe
stc
lahf
cmp
ret
sbb
dec
cli
xor
cmp
inc
pop
jae
jb
rorl
mov
cld
push
sbb
stos
nop
mov
cmpsl
pop
push
into
mov
fisubrs
lcall
inc
pop
or
pop
sbb
dec
xchg
ret
mov
inc
insb
aaa
insl
sub
cwtl
or
scas
scas
rcll
add
pop
push
mov
fdivs
mov
out
jb
out
ds
xor
inc
push
jae
call
fs
lods
pop
insl
xchg
repnz
aas
sti
int3
int3
cld
and
ficoms
cld
test
pop
and
jbe
mov
lcall
insb
mov
clc
orb
popf
sub
jb
lea
mov
mov
rcrb
and
xor
aad
hlt
lret
rcl
out
sub
push
out
cli
push
out
mov
and
xchg
iret
leave
and
out
or
aaa
jg
sti
push
insb
add
inc
pop
mov
push
std
push
jl
shll
fidivrs
movsb
enter
sbb
lcall
jbe
xchg
jl
cmpsl
addb
cld
mov
test
or
add
lret
hlt
sbb
sbb
aad
pusha
fst
cmc
push
push
inc
dec
push
or
inc
aad
adc
xchg
rcll
aad
cltd
ficompl
jbe
xorb
jb
inc
xchg
pushf
mov
stos
loopne
mov
and
jmp
dec
and
mov
imul
fmulp
xchg
jle
iret
cli
add
into
jmp
out
pusha
jg
adc
iret
pop
inc
mov
fmull
pop
mov
xchg
xchg
dec
cwtl
into
jecxz
push
repnz
lods
or
and
sbbl
cmp
cs
nop
pop
mov
or
sub
into
mov
dec
mov
mov
sti
sti
adc
cmp
imul
clc
pusha
pop
bound
mov
sbb
xchg
and
fistl
rolb
jecxz
or
das
mov
add
mov
dec
mov
sbbb
aaa
ljmp
filds
std
push
dec
int3
sti
popf
aad
in
push
into
clc
inc
outsl
repz
call
or
filds
xchg
mov
mov
push
lea
pop
test
test
lret
inc
dec
mov
adc
mov
xchg
add
jle
les
xor
out
jl
cmp
add
lods
out
lds
in
dec
push
into
pop
lret
jne
xor
ljmp
or
xchg
jbe
cmpsl
xchg
movsb
out
int3
xor
decb
movsb
iret
mov
mov
fistps
mov
and
fndisi(8087
add
mov
and
sbb
xor
mov
ja
mov
inc
cmp
testl
bound
fstpl
ret
mov
test
inc
lcall
sub
lcall
scas
clc
js
clc
pushl
fs
imul
enter
popa
loope
jbe
sbb
aad
js
shll
outsl
pop
out
fildl
inc
mov
mov
jg
add
and
jbe
xor
dec
test
shll
ss
cmpsb
adc
and
jbe
loopne
pop
xchg
ds
shrl
mov
cmpsb
pop
add
mov
mov
clc
xor
test
sbb
jge
and
adc
sahf
jnp
xchg
mov
xlat
push
aam
cmp
add
and
rorl
jmp
dec
xchg
mov
stos
or
stos
addr16
mov
subl
inc
stos
call
xchg
rclb
cld
cmp
mov
clc
xchg
or
xchg
icebp
xor
lret
jo
mov
ja
imul
aaa
jnp
out
cltd
xlat
and
sarb
imul
stc
pop
sbb
cmp
cmp
mov
cmc
cmp
cmp
push
nop
mov
push
adc
cmp
inc
in
adc
mov
add
jecxz
out
in
jno
cmpsb
movsl
das
push
imul
dec
in
pop
cltd
mov
add
sub
jl
inc
xor
pushf
mov
mov
xchg
outsb
scas
loope
mov
xlat
insl
cmpsl
dec
sbb
insl
loop
mov
popf
arpl
sub
imul
cs
mov
shl
insl
push
pushf
ljmp
ljmp
jnp
push
add
popa
jl
mov
mov
push
jp
mov
cwtl
dec
out
jmp
dec
or
mov
arpl
dec
in
rorb
cld
scas
adc
jge
jl
mov
mov
xchg
sti
jge
push
aad
gs
jl
inc
xchg
push
lret
sub
popf
movsl
loop
mov
cmpsl
push
dec
sbb
loope,pt
cli
arpl
inc
push
sub
rolb
in
lahf
cs
jne
mov
xchg
cmp
xor
loope
jp
cmpsb
loop
jl
sbb
and
shlb
xchg
pop
inc
aam
pushl
sahf
inc
fildll
ret
stos
outsl
test
mov
leave
inc
pop
pop
mov
movsl
aaa
or
dec
scas
jle
mov
ret
dec
add
xor
out
add
jecxz
bswap
into
mov
push
pusha
mov
sub
cwtl
idiv
jne
fldl
je
push
stos
jns
ficompl
mov
sbb
movsl
sbb
out
xor
imul
push
mov
mov
fwait
adc
cmp
add
jmp
push
pop
xor
sub
mov
fwait
orb
clc
xchg
jp
std
pop
jecxz
out
ret
sub
cld
cmp
push
roll
xchg
aaa
cmpsl
mov
ficoms
movsb
insb
push
cltd
outsb
roll
xchg
mov
dec
dec
push
mov
jl
dec
and
sahf
out
dec
pushf
mov
push
test
pop
adc
loop
rcrb
jae
lods
add
adc
mov
sbb
pop
repnz
ficoml
ss
rcrl
cmpsl
add
mov
jge
jl
and
dec
mov
aad
insb
xor
adc
les
ds
cmp
addl
insb
mov
add
or
idiv
les
dec
adc
inc
mov
cmp
xchg
ret
xchg
jno
inc
or
scas
adc
jno
or
out
sub
ds
insb
enter
fistpll
in
cmp
sbb
cmp
out
lods
ljmp
outsb
xlat
pop
and
and
xor
jbe
mov
sbb
mov
adc
jnp
mov
ret
fisubrs
or
stc
sub
shlb
ret
add
jge
sub
mov
imul
cmc
lahf
loope
daa
xchg
xor
xchg
ficomps
xchg
out
aas
mov
loope
pop
xchg
in
lcall
lods
das
adc
xchg
scas
dec
lods
je
xchg
es
cltd
add
dec
scas
push
pop
mov
sbb
xchg
ja
into
mov
imul
sub
add
add
add
mov
sbb
pop
mov
cmp
rcr
xlat
lds
fwait
mov
pushf
add
outsl
dec
sub
push
push
xchg
mov
push
xorl
mov
shl
pop
mov
lret
mov
dec
mov
sub
or
cmp
xor
mov
xchg
leave
mov
fidivl
xchg
jo
cmpsl
jmp
mov
cld
jl
lds
clc
cmp
fdivrl
inc
sbb
mov
xlat
test
mov
xchg
es
cwtl
xchg
scas
fwait
mov
pop
fimuls
mov
std
hlt
xchg
in
jg
push
mov
dec
std
ds
insb
je
pop
dec
sarl
mov
rorb
lds
dec
lret
imul
shlb
sbb
das
ds
cld
stc
and
pop
sub
adc
jl
movsl
ja,pt
sbb
loop
rorb
iret
xchg
mov
xor
or
rcrl
je
mov
pusha
enter
xchg
jns
or
adc
fimuls
jo
aam
xchg
pop
test
subb
scas
lds
les
fldl
inc
adc
sbb
pop
aas
pop
test
xchg
add
ds
add
cwtl
aam
jb
xor
inc
adc
mov
loope
ja
sar
or
jmp
xchg
ss
out
mov
fistl
jmp
js
into
xor
iret
dec
push
js
cwtl
cmc
decl
leave
test
aaa
popl
inc
jns
je
rol
pop
imul
test
push
in
hlt
add
cltd
jge
divb
or
int
roll
cmpsw
das
push
pop
add
hlt
notl
decb
subb
adc
fld
pop
or
push
fidivrs
ljmp
mov
xchg
out
jb
repz
jmp
rcll
loop
in
es
xor
mov
daa
in
mov
repnz
dec
popa
xchg
mov
insb
fldl
outsl
std
jnp
repz
pusha
add
cmp
sub
lret
jge
dec
jae
orl
lret
mov
ficomps
call
repnz
bound
pop
push
cmp
add
jge
repnz
jae
sti
mov
ljmp
call
mov
mov
mov
in
or
pop
mov
lret
lds
incl
jnp
dec
sti
xor
push
das
xor
inc
inc
mov
lods
insb
jg
lahf
or
test
cmc
aad
dec
jecxz
add
mov
fdivp
mov
cmp
mov
cmp
std
lods
fwait
mov
xchg
test
mov
fidivrs
and
insb
mov
sbb
decl
mov
fisttpll
dec
cmp
inc
mov
xor
mov
outsl
call
or
in
push
sbb
pop
mov
mov
cmp
sahf
xor
cmp
push
sbb
lret
out
loope
push
and
clc
or
and
aad
outsl
pop
lock
repz
xor
sbb
sub
fsubs
aas
outsb
inc
sub
das
fcmove
pop
pusha
ret
mov
push
cmpsb
inc
and
pop
arpl
or
arpl
sub
pop
push
daa
xor
xor
scas
pop
mov
mov
das
mov
mov
fiaddl
orl
mov
enter
stos
dec
pop
add
mov
or
cmp
xchg
sbb
lret
xlat
sbb
aas
ds
pop
in
mov
ret
sub
add
dec
lahf
jecxz
incb
ret
sbb
mov
ret
mov
xchg
push
out
lods
sub
ficomps
cmovbe
jbe
sbb
cmpsb
mov
je
sub
icebp
into
mov
mov
jg
mov
xor
aad
mov
xorb
lock
mull
out
xor
inc
push
in
xor
pushf
cld
repnz
xchg
je
pop
stos
adc
and
jb
ficoml
mov
leave
bound
mov
cmpb
fnstsw
mov
gs
cmc
push
fmuls
fcmovbe
or
sti
into
test
fsts
insb
ret
int
jl
dec
movsl
push
push
dec
test
or
xor
inc
inc
inc
clc
cld
lock
jo
or
nop
dec
loopne
cmp
pop
cmp
daa
das
out
lret
lret
and
push
mov
cltd
mov
xchg
push
int
scas
pop
lea
insl
lods
fcomps
adcb
dec
test
ret
sub
loop
pop
daa
out
sbb
cmovl
xor
fwait
adc
dec
or
sarb
mov
in
nop
sahf
mov
push
in
sub
cmp
sbb
mov
je
push
fisttps
subl
jnp
or
jb
add
mov
inc
jp
sbb
push
cmp
ljmp
or
jno
xchg
sub
mov
push
xchg
jle
inc
adc
subb
std
push
add
pop
decb
mov
or
xchg
sbb
and
nop
cwtl
dec
outsb
pop
xor
mov
jmp
or
fiaddl
std
cmpsl
mov
inc
push
xor
inc
scas
aaa
or
stos
adc
mov
in
cmp
adc
xor
sub
dec
leave
or
dec
pop
and
xor
jge
push
sbb
sub
cmc
xchg
imul
push
jbe
mov
aaa
fidivl
repnz
mov
out
sbbb
dec
test
cltd
or
add
lahf
inc
cmp
xor
dec
inc
inc
ret
jno
aad
inc
rcl
loope
and
pushl
aam
add
mov
push
aaa
sub
adc
mov
cmpl
adc
mov
xchg
push
mov
xorb
fwait
or
faddp
xor
and
adc
out
lret
mov
shll
jne
jbe
cwtl
repz
rcr
in
aad
inc
mov
and
cld
les
inc
lcall
adc
jg
lods
inc
and
inc
jg
and
stc
mov
jnp
movsb
xor
scas
js
mov
shlb
mov
jne
sub
testl
jp
movl
sbb
push
dec
mov
dec
push
fldt
test
inc
fstpt
jle
push
clc
push
js
sbb
stc
aaa
sbb
lret
cmpsl
and
fildll
clc
loop
cmp
rorb
and
lcall
sbb
push
insl
mov
shl
call
imul
cltd
ss
or
jle
dec
push
movsb
inc
sub
pop
sbb
insl
cmp
sub
int
dec
fisttpl
xchg
inc
mov
jge
cmc
mov
adcl
add
mov
xchg
jo
ret
in
notl
cltd
push
adc
lret
hlt
lods
rorb
aad
jno
adc
cmc
loope
pop
nop
pop
dec
xlat
adc
fcompl
push
mov
jl
xor
cmp
jl
cmpsb
ds
fsubrl
jl
out
or
ja
pop
outsl
dec
addr16
jo
dec
mov
and
push
clc
cwtl
pop
or
ret
jmp
cmp
data16
pop
jns
xchg
or
xor
bound
xlat
arpl
aaa
ret
push
inc
mov
in
dec
add
rcrl
cmp
cli
push
mov
in
lret
mov
mov
mov
int3
add
add
mov
jg
add
icebp
push
add
je
cmpsb
sbb
cmc
mov
sbb
lea
decb
in
cli
or
mov
cwtl
rcl
jns
in
push
mov
xchg
sti
sbb
fisubrs
xor
sbb
insb
daa
fisttps
adc
mov
cmp
lods
cmpsl
popf
lods
pushf
loope
lock
popf
inc
push
mov
les
rcll
into
pop
and
in
mov
mov
int3
inc
sub
inc
pop
enter
and
rclb
icebp
test
sbb
push
sbb
push
inc
sub
cmc
lcall
subl
out
inc
push
les
loop
and
and
icebp
cltd
mov
sbbb
push
mov
mov
loope
cmp
sbb
clc
fadds
jp
nop
jns
xchg
icebp
ret
out
out
cld
sub
mov
cwtl
call
cmp
int3
add
loope
or
lods
adc
xchg
sub
mulb
ret
rep
adc
adc
sar
mov
xchg
test
cwtl
xchg
mov
push
clc
sub
dec
sub
call
xchg
push
jb
adc
outsb
pushl
shll
sub
sub
mov
stos
sub
aas
add
outsl
and
dec
fs
int3
ja
mov
mov
rcrb
pop
mov
out
ja
sbb
ljmp
jecxz
in
or
add
lock
mov
mov
mov
adc
jp
sbb
adc
pop
shll
jae
cwtl
jae
jge
out
fnstsw
fisttpll
mov
decl
push
out
mov
or
fcmovnu
ds
xchg
jno
cmp
add
jg
outsl
mov
sub
insb
dec
fwait
pop
addl
call
icebp
pop
cmp
adc
stos
imul
adc
test
mov
xchg
push
push
add
out
fldenv
cmp
adc
dec
push
sar
ljmp
andb
sub
daa
pop
and
inc
cmp
fcomi
mov
push
sti
cs
mov
fisubrl
cmp
test
dec
and
sbb
cwtl
push
nop
xchg
xlat
ret
mov
sbb
dec
xor
mov
sub
inc
daa
xor
cwtl
xchg
and
test
sbb
push
cli
inc
mov
cli
das
loopne
loopne
mov
or
fsubrs
dec
shrb
subb
daa
push
daa
mov
pusha
scas
scas
adc
cmp
arpl
arpl
mov
mov
shl
inc
inc
or
cmp
jnp
pushf
dec
or
inc
mov
into
sub
aas
push
sbb
cltd
sbb
cmp
jne
push
out
mov
sarb
jo
lcall
inc
mov
mov
xorb
jnp
jle
push
mov
push
sbbb
and
jae
es
insl
dec
mov
push
add
and
addr16
push
sub
shrb
negb
mov
jno
aaa
stos
push
pushf
sub
push
arpl
cmp
ret
push
or
dec
scas
lds
mov
icebp
andl
ret
jle
lret
inc
xor
lock
pop
lret
lcall
and
push
mov
pop
pop
inc
dec
std
pop
rcll
xlat
dec
lea
cltd
jae
pusha
jbe
add
add
xchg
decl
xchg
push
dec
add
sbb
xor
xlat
jl
aas
fwait
icebp
jb
xchg
jmp
adc
lods
outsl
in
jge
jb
fs
add
cwtl
xor
pop
cwtl
cld
cmp
shlb
cmp
mov
and
loopne
movsl
cmpsl
mov
cs
je
orl
int3
test
ja
mov
daa
out
mov
rorl
dec
push
jns
cmpb
fcomps
dec
loope
imul
mov
push
loope
mov
dec
xchg
fmull
hlt
scas
mov
daa
fsubl
push
lds
add
inc
gs
test
in
cmpsl
push
sbb
mov
cwtl
dec
fcomp
adc
subl
add
daa
pop
pop
and
push
int
cmp
mov
xor
dec
dec
push
cmp
stos
out
push
pop
cs
hlt
sub
xlat
repz
data16
sub
out
cli
ss
xchg
ret
fxch
push
mov
enter
cld
ja
inc
andb
add
jl
sti
mov
iret
repnz
pushf
std
out
and
xchg
mov
push
dec
loope
ficoms
xor
pop
in
dec
movsb
sbb
ja
and
repnz
notb
scas
cmp
inc
jns
add
sub
jae
fldcw
xchg
aaa
imul
into
es
lods
add
push
insb
nop
mov
test
test
mov
stos
int3
loop
dec
out
push
and
add
xchg
inc
out
xor
xor
std
mov
inc
ss
mov
pop
sbb
dec
lret
out
fnstenv
in
shll
clc
outsb
int3
orb
nop
sbb
jle
pop
sub
jecxz
lods
adc
mov
xchg
cmp
addl
stc
lcall
cmp
mov
dec
sub
mov
lret
fwait
sub
daa
loope
daa
enter
clc
push
mov
shlb
pop
or
in
inc
aaa
test
xor
or
mov
sub
fistpl
mov
mov
pop
xor
andb
sbb
dec
repz
xchg
sarb
ss
xchg
outsl
sti
cmpsl
xchg
cmc
mov
mov
scas
jne
loopne
dec
jecxz
sti
stos
jne
gs
test
adc
adc
ss
xor
inc
push
mov
notl
js
popl
out
mov
push
xlat
data16
sbb
aam
or
jp
sti
aad
cwtl
xchg
rcr
jge
push
jbe
mov
fstpl
fmuls
rorb
ret
test
mov
dec
sbb
jecxz
scas
xchg
insb
out
adc
clc
jmp
ja
add
pop
sub
ja
adc
jle
mov
push
sti
pop
adc
jg
cmpsb
lods
das
rorl
mov
shll
into
clc
lret
notb
inc
sbb
fldenv
cs
add
rcrb
out
push
ror
pop
mov
inc
and
add
fs
iret
clc
mov
jae
inc
sbb
inc
pop
stos
jae
xor
xchg
push
add
or
into
test
push
xchg
cld
lea
lods
popw
pop
mov
or
les
inc
xchg
add
add
nop
add
add
sahf
sbb
data16
fstl
fst
aaa
or
lret
xchg
aam
cs
pop
mov
mov
int3
lahf
adc
push
jb
outsb
mov
pop
and
sub
pop
adc
mov
mov
xchg
or
nop
sbb
push
imul
mov
sub
jecxz
repnz
test
push
adc
xor
xchg
mov
sbb
icebp
ficompl
mov
dec
movsb
dec
bound
outsl
xchg
repz
sub
add
hlt
push
add
inc
xchg
rcll
xor
jl
push
test
xchg
jge
xor
fisttpll
sub
mov
mov
jae
jg
push
inc
xor
loopne
pop
mov
gs
rclb
mov
shrb
iret
testl
and
xchg
test
ljmp
int3
push
lcall
mov
in
stos
fidivl
inc
lcall
movsb
fisttpl
daa
mov
jb
inc
mov
mov
jne
repz
aas
jge
mov
push
xchg
pop
xor
fists
in
pusha
xchg
push
je
mov
inc
inc
jecxz
adc
add
into
pop
out
cmp
jl
xor
jo
mov
loopne
xchg
jle
sub
jo
into
pop
es
je
add
testl
and
loope
popa
arpl
fbstp
adc
fcoms
bound
fiadds
inc
cmp
incb
sahf
fsub
add
in
loopne
gs
mov
loope
mov
scas
sbb
subl
push
stos
lds
fmulp
dec
jle
jge
xchg
stos
pop
and
or
jle
pushf
sub
jmp
cltd
push
xchg
dec
out
cmp
sbbl
sbb
add
sbb
push
mov
add
dec
loope
mov
add
hlt
pop
pop
and
inc
push
sub
pop
dec
test
jg
ss
fistpll
jp
jl
int3
xchg
jnp
bound
mov
inc
pop
jno
rcrb
movsb
sti
orl
inc
ret
xor
xor
loope
jecxz
pop
sub
sub
test
mov
xorb
jp
mov
sub
int3
mov
push
dec
subl
out
mov
sbb
sub
pop
lret
jp
ret
pop
pushf
in
mov
sarl
ja
aad
push
shlb
xor
popa
push
in
mov
jecxz
and
or
jle
mov
lret
out
push
cmpsl
sub
cmp
lods
dec
addb
es
jle
data16
cmc
pop
bound
call
orb
or
test
sbb
sbb
sar
xor
push
cmp
ret
movlps
and
sbb
and
and
ja
aas
xor
adc
enter
fs
cmp
fwait
dec
push
push
push
lcall
ljmp
dec
pop
fs
xlat
sbb
divl
ljmp
or
mov
insb
jp
in
pop
push
testb
shll
pop
jmp
cmp
out
xchg
and
notb
inc
or
lods
add
fwait
cmp
and
lock
xchg
xchg
vsqrtps
lret
das
push
xchg
cltd
decb
xchg
dec
sub
xorl
mov
pop
jg
fstp
push
aaa
sbb
out
inc
iret
sbbl
imul
mov
icebp
mov
aas
je
adc
insl
sarb
jl
ss
aas
ret
cmp
neg
sbb
cmc
jae
stos
enter
or
in
sti
sbb
mov
ds
push
xor
add
repz
es
push
pop
fstps
xor
mov
add
ret
sbb
divl
pop
insb
dec
push
add
insb
dec
add
std
and
mov
fistps
add
jge
xor
movsb
pop
sub
movsb
push
sbb
stos
ret
lods
aaa
nopl
flds
xor
mov
lds
js
pop
xchg
ds
es
jge
mov
cmc
movb
fiadds
stos
in
scas
jg
jecxz
adc
add
enter
orb
mov
add
mov
pushf
lock
add
pop
sbb
sti
in
adc
sub
adc
dec
sub
jle
clc
into
add
out
int
loope
out
jno
and
sbb
dec
sbb
jp
xor
in
adc
adc
push
xchg
inc
sbb
mov
pop
push
gs
es
pop
jle
jle
push
andl
jns
mov
shlb
cmp
mov
mov
xor
add
scas
jg
scas
jle
aam
cmp
add
into
xchg
push
ds
xchg
sbb
adc
das
adcl
stos
int3
mov
mov
and
pop
daa
mov
cmc
and
orb
enter
and
dec
inc
dec
jg
xacquire
push
xchg
push
lahf
xchg
loop
or
xor
cwtl
pop
cmpsb
sbb
mov
bound
je
xor
jg
lock
repz
mov
pop
mov
fsts
sub
fldl
icebp
dec
jp
jp
int
sub
test
mov
jae
sti
jmp
fistpl
ret
call
mov
mov
mov
leave
and
and
sub
jge
daa
out
cmc
sbbl
add
sbb
mov
mov
js
pusha
aas
data16
mov
ja
cmp
mov
in
in
into
int3
and
sub
cmp
test
cli
adc
add
or
popa
xor
jl
cmp
xchg
sti
sub
out
pop
and
stc
mov
dec
icebp
push
daa
loop
xchg
push
pusha
dec
sub
popl
test
out
adc
jl
iret
sbb
cmpsl
push
cltd
add
fisubrs
loopne
mov
aaa
or
outsb
ret
pushf
jg
lock
sbb
loop
push
mov
icebp
push
je
loopne
divl
in
pop
popf
loope
addl
sbb
sbb
push
mov
jg
jb
repnz
cli
mov
aam
or
out
pop
gs
xor
mov
daa
jg
adc
mov
dec
int
fmull
addb
or
cwtl
xchg
cli
inc
dec
lock
xlat
push
jg
rcll
sub
aaa
push
adc
sub
lret
stc
les
dec
mov
pusha
neg
xchg
mov
pop
sbb
sbb
push
dec
adc
ljmp
cmp
nop
add
and
cmp
mov
push
add
bnd
lret
or
cmp
dec
mov
lods
cmp
cli
mov
jbe
cmpb
shlb
loop
je
fs
xchg
incb
mov
pop
sub
inc
shll
jne
add
xchg
cwtl
je
mov
stos
mov
cmp
lods
popa
lret
sub
lds
lock
js
sbb
lret
xor
or
pop
in
idivl
mov
sbb
das
adc
or
aam
int3
out
fxch
mov
and
jle
movsb
cmpsb
push
lcall
sub
inc
mov
dec
call
adc
outsb
hlt
insb
xchg
xorl
or
mov
add
mov
pop
adc
jl
out
rorl
dec
rol
ret
mov
push
es
jle
jg
sti
sub
push
dec
push
dec
and
push
in
repz
and
pop
jle
stos
divl
xchg
insl
or
loope
xor
lods
cmpsl
les
push
test
add
jno
into
shl
push
shrl
pop
in
pusha
adc
cmpsb
xlat
mov
fisubrl
outsb
pop
lret
adc
andb
out
movsl
mov
xchg
cmp
ja
lods
jl
insb
add
cwtl
in
xchg
mov
pop
sbb
cmp
clc
sbb
xor
leave
mov
outsl
sbb
scas
fcmovu
xor
pusha
lret
fdivrs
jp
pop
mov
lea
inc
out
arpl
clc
xor
push
iret
clc
and
stc
sbb
add
push
stos
cli
nop
and
lods
testl
and
cmp
xchg
outsl
inc
movl
movsl
fldl
xchg
and
mov
movsb
cwtl
jne
pop
fsubrp
cltd
dec
in
repnz
jae
push
xor
les
mov
cmp
inc
xor
into
fucomi
and
rcrl
shrl
jmp
mov
jmp
xchg
popa
cmp
or
call
add
pop
cmpsb
stos
ds
inc
ss
inc
xchg
xchg
fcmovnb
xchg
dec
sbb
mov
aas
int3
aaa
push
dec
pop
cmp
cwtl
xor
fmuls
xchg
mov
xchg
push
inc
imul
shlb
testb
adc
aas
mov
push
cmp
dec
outsb
lods
shrl
lods
pop
and
shll
int
jno
xchg
rcll
push
pop
sbb
lods
vmread
int
pop
push
push
inc
push
xor
sbbl
cmp
outsb
rcrb
push
movsb
adc
inc
xchg
mov
out
hlt
cli
mov
shlb
call
mov
push
sub
inc
xchg
movsb
jp
enter
push
or
cwtl
test
popa
ret
lret
inc
mov
push
push
fisubrl
dec
xchg
xor
xchg
adc
adc
xor
cwtl
cmc
mov
sbb
pop
jle
xor
adc
fsubrs
test
jns
lahf
xor
mov
xorl
jbe
mov
push
inc
cwtl
push
xchg
cmp
dec
push
fs
cwtl
push
insl
jnp
or
cmpsl
inc
add
ret
mov
and
outsb
mov
mov
xchg
dec
sub
les
lods
xor
in
mov
add
dec
icebp
dec
aas
pop
fidivl
xchg
ror
loop
jge
dec
jg
xchg
mov
push
xchg
loope
repnz
cltd
pop
or
cmpsb
fnsave
sbb
push
notb
pop
push
inc
mov
js
push
mov
mov
cmp
insb
sbb
mov
fmulp
mov
out
shrl
dec
fs
imulb
aam
inc
pushf
xor
pushf
mov
fstl
push
rcrl
ljmp
xor
jnp
adc
sahf
dec
jl
push
and
pop
shl
push
xchg
pop
pop
inc
sahf
adc
dec
inc
stc
sub
cmp
bound
mov
cmpsb
and
repnz
sub
decl
sub
mov
pop
mov
out
ss
pop
dec
and
sti
mov
xchg
fst
push
iret
rclb
std
test
roll
outsl
xchg
jno
test
jno
test
add
push
or
xor
aas
sbb
stos
pop
push
sbb
add
data16
imul
mov
outsl
push
dec
cli
cmp
test
dec
popf
push
repz
jae
and
jbe
addl
sbb
sbb
daa
push
jle
jae,pt
inc
cmpsb
cmp
dec
shrb
out
fidivrl
out
sub
and
rcrl
cmp
push
cwtl
loop
lock
adc
pop
and
stos
mov
or
xor
fdivl
sub
lea
popf
mov
dec
pop
push
enter
or
in
jg,pt
in
push
mov
inc
mov
rcll
and
mov
movsl
icebp
outsb
fwait
dec
aad
push
je,pn
imul
repz
fwait
bnd
inc
or
loope
mov
pop
or
inc
aas
and
mov
sub
mov
sbb
mov
inc
in
enter
into
xor
mov
cs
cmc
sub
or
xchg
sbb
mov
es
pop
inc
dec
xchg
arpl
fdivrs
ja
jmp
mov
daa
fwait
int3
out
push
mov
imul
in
outsb
add
ljmp
and
add
dec
jl
aas
xchg
ror
add
les
mov
out
mov
jle
ror
mov
mov
mov
pop
ja
xor
mov
je
and
sbb
aaa
or
jo
lret
cmp
sbb
fcompl
cmpsl
sahf
mov
lcall
loop
mov
jne
or
jb
xchg
pop
ret
sub
sub
mov
out
xor
jno
xchg
sti
mov
outsb
out
ja
fs
dec
mov
flds
xchg
sub
push
pop
cmp
mov
data16
push
movsl
mov
inc
mov
xlat
daa
cmpsl
jmp
scas
cmpsb
or
xor
mov
dec
sti
loop
lret
jmp
nop
into
xlat
xchg
adc
mov
insb
loopne
sbb
in
or
sub
pop
sbb
test
dec
pop
insl
sbb
loopne
in
jle
add
mov
jle
inc
ds
aad
dec
inc
ljmp
dec
out
xor
sarb
shlb
call
lds
jl
arpl
clc
fs
ja
lods
lcall
in
add
inc
fwait
cmp
ljmp
jge
xchg
cli
loop
jg
pop
or
hlt
jp
xor
leave
inc
xor
dec
push
test
xchg
lret
pop
in
sub
push
ret
jl
nop
sbb
pop
loopne
push
mov
out
add
xchg
jl
sbb
adc
rorb
dec
xor
neg
xchg
fwait
or
popf
cmp
loope
jbe
int
jno
sbb
lds
xor
movsb
mul
xsha256
cmpsb
push
inc
pop
and
xchg
stos
inc
lds
pop
mov
repz
mov
adc
or
mov
mov
mov
jns
insl
mov
stos
or
push
cld
mov
mov
stc
out
lods
push
cmp
jb
add
and
mov
mov
popa
mov
loop
popf
sub
inc
xchg
sub
mov
dec
xor
jo
jo
adc
xor
imulb
das
jmp
mov
out
add
adc
mov
icebp
nop
mov
add
add
push
dec
xor
in
inc
sti
jno
inc
ds
jg
shll
lcall
dec
andb
es
ljmp
lret
lock
out
jg
mov
stc
and
jle
and
test
xchg
mov
xchg
imul
xchg
fists
inc
pop
ret
or
repz
data16
in
imulb
pop
mov
out
dec
loopne
dec
sahf
xor
sbb
mov
cmp
sarb
mov
mov
or
sarl
int3
jle
repz
ds
jle
add
insb
in
add
shll
inc
and
lds
pop
jb
push
negb
or
mulb
cmpsl
dec
test
out
xor
repnz
in
dec
scas
adc
loopne
enter
repz
or
or
dec
std
adc
xchg
icebp
lods
fisubrl
sub
pusha
cli
ud0
shrb
mov
jno
aaa
mov
sub
cmp
inc
mov
imul
cmp
negl
jae
shll
push
scas
pushf
lret
jae
push
rcrl
add
stos
push
pop
test
mov
repnz
jmp
jae
out
dec
push
cmp
roll
xor
push
repz
push
idiv
ss
xchg
add
shll
mov
addr16
neg
mov
dec
jp
rol
mov
dec
push
sbb
mov
mov
mov
test
cs
dec
rcl
popl
cld
ja
mov
in
fimuls
jg
xchg
xor
out
iret
cltd
and
inc
xchg
sbb
lret
in
movsb
or
cmp
mov
sbb
pop
and
and
popf
test
dec
xor
in
sarb
push
sub
sbb
fstpt
std
push
jmp
push
jl
pop
mov
cmp
adc
jb
repz
insb
stos
shlb
push
mov
jno
dec
jecxz
outsb
call
mov
jge
insb
jg
stos
adc
lcall
fwait
push
jge
sti
mov
pusha
pusha
les
in
fnstsw
rolb
mov
incl
loop
sbb
jno
das
imul
sbb
sbb
sbb
aas
imul
xor
mov
xorb
hlt
lock
fisubrs
push
std
inc
sti
push
jnp
scas
ret
out
loopnew
out
addr16
repnz
xchg
movsl
call
cmp
dec
add
jbe
cmp
dec
js
fildl
arpl
add
int
adc
mov
push
xor
jno
bound
push
mov
or
add
cld
mov
sub
mov
mov
cmp
xchg
mov
mov
insb
mov
lret
xchg
pop
lret
cltd
push
pop
insb
add
adc
adc
call
leave
rcll
iret
lret
cwtl
jmp
and
mov
rcrb
xchg
push
sahf
mov
in
fidivl
adc
jl
cmpsb
pop
ret
jmp
mov
xor
gs
add
sbb
ja
and
sub
dec
pop
loop
sub
sbb
push
idivb
dec
mov
xlat
ds
pop
mov
clc
dec
push
cmpsb
notb
add
sub
movsl
stc
int
fildll
fucomp
pop
xchg
fstpl
sti
lock
add
pop
mov
and
fsubrl
and
sub
jnp
in
add
pop
out
dec
ds
divb
cwtl
lret
clc
cmpsb
adc
lods
rol
pushf
adc
sub
add
cmp
orl
ljmp
incl
popf
sub
xor
dec
pop
add
xor
ret
mulb
adc
aas
mov
fsubrp
int3
lcall
sbb
and
test
cmp
sbb
scas
cmp
push
lds
lock
addb
enter
test
push
xchg
cli
out
je
stc
mov
fucomi
sarl
repz
mov
test
iret
movsl
cmp
xchg
std
inc
decb
andb
jb
pop
in
lods
push
xchg
or
push
xor
cltd
into
adc
out
enter
gs
mov
adc
imul
mov
stos
sbb
les
mov
lea
adc
leave
xor
rol
cmp
xchg
divl
jns
xor
test
xchg
jb
loopne
push
sub
cmp
xchg
cli
fdivp
fdivrs
hlt
in
mov
add
hlt
pop
pop
bound
and
cmp
mov
in
add
pop
shlb
jb
scas
insb
push
sbb
pop
sbb
out
enter
adcl
in
or
dec
mov
lret
pop
push
adc
add
outsb
inc
loope
jl
jbe
adc
and
jecxz
xchg
scas
adc
lahf
mov
pop
and
push
daa
xor
pop
add
dec
fldcw
jg
mov
faddp
mov
xchg
loopne
mov
cmpsb
fisttpll
xor
ja
sbb
out
sub
mov
div
fwait
jmp
mov
xlat
inc
add
or
mov
test
mov
mov
rorb
push
mov
adc
outsb
sbb
mov
push
lods
int3
loop
cmp
xor
and
mov
testb
mov
add
popa
das
jne
lea
in
scas
sti
loope
fldl
add
xor
adc
stc
jnp
les
cmp
scas
icebp
in
sub
cmp
gs
lret
orl
mulb
jg
cli
dec
call
jnp
pop
mov
popf
inc
icebp
dec
pop
jl
fs
mov
add
test
int
clc
bnd
pop
xor
pusha
sub
sub
push
into
sub
push
sbb
aaa
xchg
cmpsl
jg
andl
pop
iret
mov
setae
cli
fs
sub
shll
iret
mov
gs
fld
mov
hlt
cmp
leave
js
xchg
or
test
loopne
and
mov
test
std
adc
into
mov
lcall
sbb
dec
cwtl
cli
stc
js
xlat
mov
repnz
lret
or
jl
in
iret
mov
test
cmp
out
pop
dec
lret
jns
pushf
shlb
nop
fcmovb
aaa
sti
cmpsl
cmp
inc
insl
fdivs
in
movsb
or
push
adc
roll
test
rorl
ja
push
sub
add
adc
fnstsw
icebp
sub
jb
mov
shll
sbb
cltd
or
inc
mov
mov
and
repnz
dec
mov
xchg
cltd
and
lcall
xor
sarl
mov
push
push
in
dec
inc
insb
test
lds
arpl
fsubl
cmpsb
adc
fdiv
es
jno
mov
jle
add
daa
jmp
cwtl
pushl
rclb
lcall
or
adc
mov
sbb
movsb
sub
cwtl
xlat
pop
in
aas
mov
jl
xchg
xchg
lret
pop
or
jl
jno
push
lock
add
andb
or
pop
psadbw
xchg
or
sub
xchg
decb
adc
dec
dec
ret
dec
sub
adc
repz
and
jle
in
mov
mov
add
test
and
test
sub
aas
push
fidivrs
xchg
sub
sti
sbbl
xchg
sar
push
jo
and
ret
cmp
sbb
jno
mov
pushw
dec
mov
pop
pop
sub
pop
or
sarb
fdivl
lods
sbbl
fcmove
lahf
cwtl
mov
out
imul
inc
fwait
stc
xorl
aaa
pushf
push
test
es
xchg
mov
pusha
sub
aad
popf
add
xchg
mov
dec
push
fwait
pusha
gs
push
and
sub
out
lods
test
sti
iret
dec
out
arpl
ljmp
icebp
cmp
pop
nop
sub
es
scas
fists
scas
push
dec
adc
mov
pop
push
add
in
cmp
inc
movsb
add
xor
mov
subb
jnp
int
inc
adc
imul
sub
lods
and
loopne
jo
sti
mov
push
add
fcoml
inc
mov
lahf
or
idivb
sub
push
pop
data16
xchg
xor
popa
jecxz
lock
daa
in
clc
pop
sub
test
pushf
pop
or
imul
hlt
xchg
push
outsb
mov
daa
mov
aad
jae
xchg
mov
pop
jmp
xchg
adc
aas
jns
push
jo
dec
mov
pusha
xchg
lds
idiv
mov
jmp
mov
insb
dec
mov
xor
ret
sbb
add
inc
xor
pushf
dec
or
test
and
dec
bound
mov
push
push
xchg
jae
pop
aaa
gs
mov
xorb
and
ret
or
mov
mov
cld
daa
dec
insb
cli
push
loope
xorb
stc
addl
adc
add
and
mov
sbb
xchg
lock
dec
xchg
out
dec
ja
xor
cmp
jbe
mov
mov
scas
jmp
mov
add
lcall
or
and
roll
sbb
mov
mov
int
sub
mov
and
add
and
lods
or
fcmovnbe
insl
lret
mov
add
mov
ds
ja
es
jg
xorb
repnz
dec
sbb
pop
mov
cmp
incl
test
call
stos
in
xor
mov
cs
gs
jnp
xor
mov
mov
mov
adc
push
cld
int
call
push
lock
sarl
es
rcr
pop
or
cwtl
cwtl
inc
mov
jl
lcall
xchg
sub
ds
loopne
jbe
inc
cltd
mov
sbb
xor
dec
dec
in
leave
and
pushf
adc
push
dec
adc
dec
fcomi
in
mov
out
test
btc
or
and
loopne
cltd
jns
fidivrs
inc
adcb
incl
lods
or
mov
mul
jae
and
sub
loopne
xchg
pop
pop
dec
fisubl
mov
cs
test
mov
ds
push
cmp
inc
es
lret
or
mov
lock
inc
test
vprotb
or
sbb
lds
cmpl
sahf
add
or
into
or
and
mov
jecxz
pushf
nop
cli
cs
dec
les
into
nop
mov
aam
mov
cmp
iret
out
xor
sbb
iret
test
dec
outsl
adc
imul
push
lock
jmp
outsb
mov
lods
xchg
pop
pusha
mov
mov
and
cmp
test
jno
loop
push
mov
or
out
cmp
leave
mov
sub
sub
jo
out
fcmovu
sub
fbstp
sub
push
push
cltd
inc
repnz
jg
imul
and
xchg
xchg
xchg
mov
push
mov
dec
andl
xor
movl
lcall
cmpsb
enter
inc
out
inc
mov
das
lcall
adc
push
pop
mov
call
stc
jns
addl
leave
rorl
mov
out
shlb
inc
inc
lahf
notl
movsl
mov
int3
adc
int3
inc
sub
addr16
in
sub
sar
push
int3
adc
add
scas
xchg
xchg
xchg
mov
push
fisubs
mov
mov
mov
dec
ss
inc
cmp
iret
mov
lock
movsb
and
bound
add
subl
jge
inc
jge
inc
push
insl
movsl
cmpsb
sub
std
mov
lret
movsl
fistl
jae
int3
inc
lods
fidivrs
push
push
movsl
xchg
mov
cltd
pop
and
push
push
adc
js
sbb
push
js
js
jg
test
loope
dec
mov
pop
xchg
mov
shl
pop
push
push
xlat
dec
inc
leave
je
test
out
cld
es
jle
mov
and
addr16
test
inc
jecxz
jb
cwtl
test
mov
ret
inc
aam
adc
cmpsl
xchg
dec
jg
or
inc
out
in
pop
ljmp
mov
xor
das
sub
dec
js
pop
lea
inc
es
outsb
addr16
aaa
idiv
push
int
fists
mov
and
ljmp
mov
mov
lds
inc
inc
scas
outsb
sysret
pop
add
lahf
les
mov
loope
aas
mov
adc
daa
aad
xor
stos
push
vpcmpeqw
pop
pop
mov
mov
dec
jbe
incb
fsub
and
adc
mov
inc
enter
mov
xor
aas
mov
data16
jle
and
adc
jnp
push
cmp
cmp
mov
cltd
xchg
xchg
outsl
or
jns
jge
leave
fisubrl
aaa
sub
pushf
shr
mov
data16
sti
pop
pop
fisubrl
fwait
mov
jb
cmpsb
stos
or
repz
cmp
inc
mov
mov
iret
dec
enter
jle
iret
dec
mov
sub
inc
flds
adc
out
ret
iret
and
mov
fwait
adc
xchg
rclb
loopne
mov
ljmp
cmpsl
incl
pop
cmp
rorl
sub
jmp
popf
cwtl
call
fidivl
filds
sub
jecxz
jg
mov
mov
test
pop
mov
int
mov
in
xor
mov
daa
pop
and
rcrb
lret
push
pushf
ss
sbb
inc
enter
jl
xchg
adcb
and
repz
loopne
xor
sbb
ds
sti
outsb
lock
jge
jns
sbb
icebp
mov
test
cmpl
cmp
adc
incl
inc
test
aaa
or
mov
inc
add
call
cmpsb
cs
cmp
clc
pop
mov
mov
add
bound
pop
mov
push
mov
jo
movsb
xor
dec
out
and
test
dec
dec
movsl
jnp
lret
adc
arpl
lcall
pushl
pusha
cmp
cmp
arpl
xor
popfw
mov
xor
mov
pop
insl
les
arpl
cld
enter
lea
or
xlat
out
int3
sub
sub
mov
loopne
push
push
lods
sub
psubd
pop
mov
ljmp
mov
dec
das
daa
push
test
imull
divb
mov
in
mov
adc
and
pop
movsb
repz
iret
in
push
sub
or
adc
dec
cmp
adc
mov
ljmp
shll
lahf
sbb
xchg
aaa
stos
cltd
push
pop
xor
pop
push
ret
mov
leave
pop
test
pop
sarb
data16
ja
mov
push
das
or
cs
es
mov
jp
fisubs
sti
lods
ror
jle
stc
imul
idiv
and
xchg
sarb
fcmovu
mov
or
cmp
jge
push
lret
and
jmp
shll
inc
add
push
jmp
orb
icebp
loop
lds
push
out
xor
ds
pop
mull
jbe
xor
sub
fildll
jg
jmp
pop
das
es
inc
push
fsts
in
out
rcrl
push
roll
mov
push
mov
aas
lea
out
in
cmpl
cli
ja
inc
in
push
stos
cli
scas
dec
dec
mov
mov
inc
js
sbb
sbb
aas
or
nop
push
inc
test
repz
call
pushf
lret
daa
js
jp
dec
lret
cmp
ret
fdiv
fldl
xor
mov
jmp
xchg
dec
in
into
jae
mov
ss
fadd
pop
xchg
out
jae
je
push
add
testl
loope
xor
in
es
fidivrs
lcall
or
xchg
or
and
and
or
or
xor
push
inc
push
in
fs
pusha
jp
jp
mov
decl
subb
xor
idiv
or
ljmp
push
sbb
sarb
into
or
lret
xor
lret
xchg
mov
mov
dec
mov
xor
lret
jp
cli
adc
fstpt
test
aad
inc
push
jmp
div
push
fnstsw
iret
pop
sub
push
sbb
sub
fsubrl
mov
jecxz
push
jmp
push
icebp
xchg
rcll
movsl
into
push
cmp
cli
dec
aas
mov
jle
and
js
ja
aam
cmc
aad
jmp
fisubl
rcrl
dec
xchg
dec
aaa
sti
xchg
cmp
outsl
add
sub
mov
int3
cmp
ret
int3
insb
sbb
mov
mov
jge
lods
cmp
bound
adc
pushl
cs
mov
testl
cmp
cmp
cli
jl
movsl
iret
inc
pop
inc
addr16
mov
xchg
ficomps
jno
jne
mov
jns
mov
or
pop
pop
and
leave
mov
add
daa
jb
mov
lds
adc
lods
xlat
leave
jne
xchg
je
dec
daa
jg
mov
test
lret
cmp
ret
shlb
outsb
mov
sti
stos
push
test
cs
aad
push
pop
insb
jmp
cmp
lcall
setle
jae
add
xor
xchg
add
loopne
cmp
cmp
xor
dec
fdivrs
adc
mov
xor
out
loopne
in
cmp
movsl
mov
daa
rcrl
fimuls
sub
dec
dec
mov
inc
ret
cmp
xor
aaa
sti
mov
inc
pop
rorb
daa
in
scas
pop
mov
cltd
insb
jne
sub
push
outsb
scas
movl
mov
cmpsl
lods
aaa
pop
cmp
shrb
loop
or
jno
mov
scas
push
test
lods
dec
scas
jp
mov
add
outsl
add
fstl
insl
or
clc
pop
jl
cld
mov
jp
sub
js
loope
mov
dec
mov
mov
push
lahf
in
cli
js
mov
or
loope
out
insb
inc
adc
dec
into
dec
sbb
push
dec
inc
or
dec
loop
xchg
pop
incl
data16
cli
test
cmpsl
xchg
push
test
scas
sbb
adc
rol
or
add
pop
adc
inc
mov
shrl
jnp
cmpsl
mov
push
sbb
xchg
dec
cli
lret
insl
div
inc
lds
insl
out
loope
sarl
mov
int
add
add
lods
and
xor
adc
or
push
dec
ficomps
adc
and
lret
add
fidivs
loopne
orb
test
pushf
adc
pop
sarb
es
pop
sbbl
jne
iret
js
lock
xor
fistpll
xor
push
lock
jecxz
movsl
push
xor
arpl
div
mov
shll
jl
rolb
add
setns
insl
mov
jg
mov
cmpsb
cmp
lahf
xchg
mov
idivl
ret
dec
movl
sub
scas
ficompl
incb
ja
pop
lods
jl
mov
fdivl
xchg
aaa
pop
shl
xchg
jno
adc
mov
dec
add
mov
je
cmp
call
out
in
neg
fwait
adc
jno
ss
mov
rorb
mov
cmp
ds
popl
int
pop
out
shlb
outsb
rcrb
lea
aas
add
scas
pop
sti
inc
jmp
fcoml
xchg
push
out
push
dec
mov
aad
adc
add
loopne
cmp
adc
loop
test
pop
lods
lock
lock
pop
cmp
aaa
not
pop
mov
pushf
cmp
mov
daa
sbb
cld
fisttpl
mov
mov
pop
pop
ss
ret
inc
in
movsl
cmp
xchg
fwait
sub
dec
ret
pop
adc
cmp
lods
loope
ficoms
jecxz
jp
loopne
das
mov
mov
or
hlt
mov
sub
fsubl
jge
inc
inc
sub
pushw
aaa
test
clc
push
sbb
imul
ss
mov
inc
pop
lahf
call
sbb
out
jl
mov
sarl
jecxz
loop
and
mov
cmp
movsl
popa
incb
inc
rorl
cmp
xor
pop
push
dec
adc
clc
inc
fwait
mov
pop
sub
stos
arpl
insl
inc
je
std
xchg
mov
cmpsl
pop
mov
int3
jno
push
movsb
cltd
jle
sub
ss
jnp
loope
cmpsb
adc
and
lcall
push
pop
cmp
inc
lret
ja
sbb
xchg
nop
rorb
mov
xchg
xchg
cmp
jno
xor
mov
lcall
andb
sub
iret
mov
aaa
insl
in
fisubrl
cmpsb
xchg
sub
jbe
and
clc
jne
add
sbb
and
stos
push
int
and
lahf
push
mov
add
inc
push
pop
sub
je
lea
sub
cld
clc
mov
scas
push
inc
inc
xchg
push
loope
and
dec
add
int
cmp
iret
in
cmpsb
rsqrtps
and
cli
jnp
ds
mov
push
lret
mov
mov
jp
aaa
pop
int
jg
leave
fs
cmpsb
loopne
cs
and
mov
jmp
cwtl
add
push
adc
enter
ljmp
xchg
xor
negl
repnz
sbb
mov
lcall
test
test
sub
jle
mov
fdivrl
aam
or
sub
out
sub
and
je
popa
push
popa
or
and
imul
sarl
pushf
andb
sti
cli
push
sbb
out
xchg
mov
cmc
mov
sbb
out
xor
inc
push
std
out
ja
imul
repnz
xlat
jl
je
jecxz
leave
dec
aaa
dec
loop
cs
std
mov
push
loope
dec
lret
inc
ds
rcll
cmp
imul
jnp
inc
loope
dec
sub
cs
or
orb
ficomps
pop
xchg
ret
or
cmp
jp
push
inc
lods
mov
sbb
fistl
clc
push
jp
or
daa
lea
inc
lea
pusha
push
cmp
test
dec
lret
movsl
cltd
and
jb
dec
push
pop
pop
daa
ss
jmp
repz
aaa
outsb
cmpsl
cmp
lock
sub
add
mov
dec
mov
ret
xchg
adc
or
pop
cltd
mov
xor
out
rcrl
decb
push
ljmp
outsb
xchg
into
or
fdivrs
xchg
adc
inc
dec
inc
push
divb
movsb
sub
adc
and
pop
out
incb
sbb
inc
loopne
fdivrp
push
icebp
icebp
das
lock
arpl
into
sbb
lcall
push
call
lcall
mov
and
add
test
add
add
das
pop
push
loop
mov
cmpsl
clc
call
call
jmp
jmp
cmp
mov
arpl
les
and
inc
mov
push
int3
add
loopne
scas
inc
jp
cwtl
bnd
insl
loop
pusha
xor
icebp
out
sub
popa
mov
jp
in
inc
das
mov
sarl
fs
push
lret
icebp
ret
cmc
sub
test
ss
fs
mov
int3
lret
mov
rorl
scas
xchg
sbb
adc
or
xchg
or
pop
or
xorl
pop
mov
fs
push
mov
cmpsl
sahf
bound
int3
ja
dec
ja
pop
sbb
push
sbb
mov
mov
ljmp
mov
xor
loop
xor
xchg
sbb
sub
and
mov
cmpsb
add
leave
movsl
inc
sti
or
add
cli
cmpsl
xlat
sbb
mov
mov
arpl
xor
pop
cmp
mov
sub
insb
lret
pushf
push
daa
ret
adc
mov
mov
sub
pusha
sbb
and
mov
push
insb
xor
pop
add
dec
movb
fs
jecxz
cld
mov
jbe
sbb
testb
ret
pushf
mov
into
cmp
pop
pop
test
xchg
jge
cwtl
cltd
addb
mov
mov
dec
out
movsb
mov
test
loope
std
jp
insl
out
mov
add
and
popf
jmp
xchg
or
icebp
cmpsl
cmp
and
test
inc
js
int3
fwait
jbe
insl
or
push
add
aam
adc
push
mov
inc
mov
xor
lods
pop
orb
cld
mov
gs
adc
lds
out
mov
lock
pop
or
scas
pop
sar
jbe
int
sbb
sub
xor
test
div
ja
inc
pushf
sbb
pop
jns
xor
jle
stc
ss
pandn
jl
cs
inc
dec
in
jge
push
mov
aam
dec
xlat
in
jb
movsl
fidivrs
push
addr16
sub
sub
xchg
arpl
cmp
in
orb
rorl
outsl
adcb
cli
push
out
sub
ds
inc
aaa
xor
repnz
sub
shrb
sub
fld
ds
sub
insb
sub
pop
push
pop
dec
stos
loope
pop
jge
lods
lock
cmpsl
stc
adc
cmp
gs
add
ret
jns
mov
inc
cmp
mov
popl
or
idivl
mov
xchg
push
xchg
jmp
adc
outsb
ds
call
in
xor
and
pop
xor
mov
add
dec
mov
pop
add
scas
xchg
rorb
mov
xchg
xor
aad
or
xchg
sub
fdivrs
ljmp
loope
ss
es
popf
sti
and
inc
bound
or
stc
ljmp
mov
aas
aad
push
xor
add
push
mov
jmp
jg
stos
jae
test
mov
rcrl
adc
mov
pop
sbb
add
loop
add
push
dec
outsb
mov
or
xchg
mov
loop
pusha
jno
sti
mov
fcoms
push
or
add
cmp
ds
jns
add
inc
int3
jbe
imul
cmpsl
neg
das
insb
mov
xchg
pop
or
test
fidivrl
pop
scas
mov
loope
fiadds
imul
movb
mov
ret
mov
cmp
xchg
jne
ja
xchg
mov
aad
addr16
xchg
test
lcall
mov
mov
add
xchg
int
ss
test
hlt
cwtl
rolb
xchg
and
push
cli
mov
rolb
inc
ficomps
push
cmpsl
push
aas
mov
loop
xchg
jl
push
cld
mov
xchg
jge
rcll
ficomps
subb
push
aas
inc
dec
lea
idivb
test
pop
xor
loop
jle
and
add
cld
fstl
ficoms
sahf
dec
dec
and
mov
outsl
mov
pop
aam
lods
cmp
dec
das
sub
sub
jmp
and
fs
dec
ss
jae
jp
mov
jns
lcall
mov
push
lods
dec
mov
or
loopne
dec
fmull
into
sbbb
adc
or
cmp
lods
mov
stos
mov
mov
pop
clc
inc
mov
xchg
divl
dec
or
setbe
shll
or
roll
sub
fnsave
pop
ret
mov
dec
cmpsl
mov
sub
pextrw
addb
loopne
xlat
or
inc
push
shl
adc
jo
scas
or
into
xchg
xchg
dec
std
cmp
shlb
shll
into
orl
test
push
cmp
push
test
enter
mov
mov
jp
sub
xor
jns
roll
les
sub
add
or
xor
fstl
mov
pop
sbb
pop
adc
int
mov
sbb
pop
std
daa
cmpsl
lcall
ds
inc
std
add
inc
or
in
fisttpl
cmp
jnp
ds
sti
int
cmp
xchg
decl
jnp
arpl
sub
outsl
aad
xor
mov
dec
xchg
mov
stos
or
or
dec
cli
rcr
cmp
clc
and
cmp
mov
inc
aaa
cwtl
pop
stc
push
nop
adc
jb
shrb
lret
pop
fcompl
cmp
mov
dec
xchg
push
cli
push
or
daa
mov
pop
popf
out
mov
lock
out
arpl
ljmp
mov
cltd
jl
pop
or
fmuls
sbb
andb
jp
rolb
aas
es
inc
push
mov
push
jns
cmpsb
jne
dec
jmp
daa
sbb
add
mov
sbb
xor
pop
cmc
lods
xchg
jnp
or
jnp
push
xchg
clc
sahf
cmp
lods
outsl
push
mov
mov
dec
lret
jbe
iret
push
lea
cmp
and
sahf
inc
mov
and
xor
dec
jno
dec
push
outsl
mov
push
dec
dec
movsl
sub
in
mov
fwait
scas
stos
repnz
add
insb
fldt
pop
add
pusha
lods
pop
out
arpl
ja
sarb
mov
cmp
push
dec
mov
xor
dec
lds
xchg
pop
sarb
jnp
lret
bnd
int
fisttpl
sbb
jg
add
sub
inc
out
inc
xchg
dec
ljmp
ljmp
faddl
scas
push
adc
mov
adc
mov
push
dec
dec
out
sub
pop
repnz
ret
cmp
ja
pop
orw
test
sub
rorl
imul
xorb
or
jl
cmp
sub
js
mov
pop
mov
cmpb
pop
bound
lock
movsb
xchg
repnz
mov
negl
jns
loop
cwtl
pop
addr16
roll
or
and
xchg
dec
push
push
xchg
push
test
fidivrs
insb
mov
adc
leave
xchg
hlt
lea
cli
int3
xor
or
jge
lret
xor
pop
sub
out
stos
call
mov
nop
fcoml
xchg
jbe
add
mov
or
jg
and
call
in
cmp
sub
xchg
lret
aad
or
add
ja
clc
mov
scas
adc
dec
ret
insb
jae
pop
cmp
int
pop
add
subb
lret
pop
filds
sbb
fcomp
inc
jle
inc
mov
dec
xchg
adc
adcb
test
adc
inc
jl
lret
loope
inc
jp
test
loop
sub
lcall
adc
fs
stos
lahf
adc
std
daa
fiaddl
lock
xor
stos
jg
mov
add
push
and
ss
clc
pop
push
and
call
jbe
or
pop
xor
rcrl
subb
mov
sbb
pop
mulb
sub
pop
orb
push
fnstcw
adc
mov
adc
jg
jne
call
cmp
nop
mov
jl
xchg
outsl
ljmp
lds
add
pop
fmul
ljmp
clc
cmpsl
lods
sbb
lods
aad
lret
je
or
pop
lret
dec
mov
ja
testl
or
fisttpl
or
dec
mov
pop
scas
movsb
int3
lds
xor
mov
mov
and
adc
movsb
cwtl
push
adc
mov
or
jmp
mov
iret
add
movsb
aaa
push
push
dec
in
xor
rcll
loop
movsl
fisubs
and
mov
jge
pusha
adc
lcall
and
lret
sub
push
jb
subb
sbb
mov
adc
loop
pop
mov
mov
aaa
ret
cld
mov
aam
insb
aad
sub
mov
mov
push
pop
add
daa
aam
cmp
adc
lods
jmp
inc
add
fwait
add
dec
jecxz
shl
imul
ret
das
ds
lock
sarb
dec
ja
jo
or
dec
mov
iret
sbb
enter
pop
dec
lods
rcrb
inc
push
aas
inc
or
pop
mov
dec
dec
xchg
add
jne
and
push
mov
shrl
popf
fsubrs
popa
into
sarl
push
pop
jno
mov
add
pop
inc
cltd
jne
stos
inc
pop
sbb
jle
ret
or
pop
neg
xchg
int
pusha
mov
stos
imul
aaa
add
cmp
mov
popf
das
or
jmp
lods
pop
stos
sbb
pop
bound
mov
add
popf
cld
and
mov
push
and
mov
mov
pop
inc
inc
fisttps
inc
xchg
jp
imul
out
mov
push
insl
sbb
mov
dec
mov
fcompl
andl
sub
test
push
ror
negl
inc
pop
xor
cmp
jle
repnz
fstps
cmp
popf
inc
sub
gs
jle
cli
loope
nop
adc
push
and
arpl
cwtl
mov
out
popa
es
lret
pushf
inc
pop
push
shll
add
and
jb
test
lods
adc
cmpsb
roll
orb
inc
mov
lea
clc
ret
mov
add
push
xchg
lret
pop
xor
leave
cwtl
adc
lcall
js
ds
ret
ljmp
aam
push
testb
rcrb
ljmp
sbb
test
test
dec
dec
mov
pop
fisubrs
lret
adc
stos
out
xor
scas
inc
lret
out
xchg
movsl
jecxz
cmp
leave
xor
jo
cmp
pop
fcoml
inc
scas
sti
mov
jnp
xor
out
hlt
add
dec
jns
xor
outsb
add
insb
dec
or
test
loopne
ja
into
xor
cmp
int3
xchg
out
shll
sbb
xor
and
mov
and
adc
ja
ficompl
and
fisttpl
imul
ret
inc
ret
jl
cmp
and
mov
pop
mov
jb
xlat
add
imul
test
lea
mov
inc
jns
xlat
xor
push
adc
pop
lret
repz
scas
mov
lods
fidivs
movsb
div
and
adc
jbe
push
fwait
lods
adc
fs
bound
jo
cmpsl
mov
hlt
imul
rcll
insb
repnz
mov
sbb
mov
and
dec
pushf
lret
repnz
sub
daa
pop
mov
or
cmp
mov
pushf
push
push
scas
stos
push
std
imul
inc
int3
jnp
mov
mov
jmp
and
add
or
adc
out
pop
adc
dec
test
sarb
stc
shlb
fisttps
out
out
mov
ja
jge
mov
or
mov
add
sbb
loopne
int
xchg
mov
xor
stos
fwait
movsl
sbb
mov
notb
add
das
sbb
inc
or
cmpsb
mov
test
jecxz
mov
inc
mov
add
clc
dec
cmp
popf
cltd
test
xor
xchg
or
adc
xor
dec
loope
push
push
pop
cmp
xchg
add
out
jecxz
mov
mov
outsb
sub
testb
movsb
pusha
movl
lods
popa
mov
push
shlb
dec
aad
sbb
jle
or
dec
sub
lods
loope
es
aad
inc
cmp
mov
push
nop
cmp
jbe
xchg
or
pop
or
js
lret
jns
sbb
lretw
xchg
mov
or
xor
repnz
inc
mov
mov
mov
das
jg
test
pop
icebp
imul
lods
sbbl
and
adcb
xor
cmp
jmp
imul
lea
rol
xchg
dec
jg
in
lds
cs
jns
shll
out
jp
add
jb
test
mov
or
insb
aam
mov
push
scas
push
xchg
inc
sarl
adc
out
push
jmp
repnz
repz
jns
rorb
inc
cmp
ja
lock
mov
sub
call
jns
sub
fsubr
fucompp
test
cmp
sub
xor
sbb
inc
inc
loope
sbb
cmpb
add
mov
fisubrl
es
pop
testb
cmp
int
cwtl
mov
into
cmp
jae
add
jl
adc
cmc
dec
imul
inc
sub
ja
lret
sahf
pop
push
and
dec
xchg
adc
pop
sarl
xchg
push
xchg
lahf
xchg
popa
add
shlb
cmpsl
inc
push
addb
lods
and
out
inc
jno
xor
mov
rcrb
push
mov
xor
jg
pop
aad
lret
gs
andl
icebp
cwtl
push
jg
test
scas
sbb
imul
jle
jg
xchg
push
jo
faddl
adc
xchg
bound
cmp
sub
sub
in
cltd
inc
cld
pushf
dec
xchg
scas
pushf
xchg
lret
jle
sbb
mov
test
out
lcall
mov
cmpsb
out
repnz
insb
outsl
decl
aas
push
lret
xchg
inc
repz
fincstp
jl
add
shrl
dec
sub
inc
scas
popf
lret
lret
adc
mov
sub
mov
ds
mov
dec
incb
push
ds
imul
xlat
mov
xchg
adc
push
dec
lea
inc
orl
stos
cmp
sbb
andb
push
push
jmp
inc
dec
jo
pop
xor
cmp
inc
cmp
fcompl
into
mov
xor
dec
mov
aas
fwait
popa
mov
inc
cmpsb
add
std
sbb
xorb
dec
add
repnz
dec
dec
mov
testl
call
xchg
nop
xchg
adc
jle
sbb
es
push
nop
sbb
push
push
push
loopne
scas
cmp
and
stos
lds
dec
jge
and
jb
lods
or
stos
and
or
sbb
test
aam
pop
mov
mov
pop
aaa
sub
pop
push
dec
sub
mov
pushf
mov
mov
int
pop
sbb
sub
orb
push
pop
jmp
mov
or
fdivl
pop
jg
xchg
dec
insb
inc
inc
out
jne
addb
fsubrs
lock
cmpsb
fisubs
cs
lret
jmp
pusha
xor
mov
into
xchg
mov
sbb
addr16
mov
and
sbb
jmp
adc
and
out
aad
call
filds
inc
dec
test
test
bound
lcall
subb
out
jno
lods
xchg
notb
xor
lret
and
mov
add
add
pop
xor
xor
adc
push
pop
dec
pop
adc
loop
jbe
flds
ffreep
movsl
in
ja
dec
das
aaa
incl
sub
push
or
xor
loopne
mov
add
xchg
dec
fldcw
cs
add
popf
pop
inc
loop
sub
cmp
insl
sarl
fdivp
int3
gs
das
jecxz
push
sub
mov
dec
test
cmpsl
cmp
mov
xchg
scas
lods
xor
cmp
shlb
scas
std
mov
sub
jp
xor
mov
shll
aaa
sbb
faddl
xorl
stos
into
outsb
push
jge
jle
add
rcll
xchg
ss
data16
ljmp
lret
sub
cmc
test
jle
hlt
dec
cmpsb
repnz
push
mov
jg
dec
push
jl
dec
lods
cmpsl
clc
daa
jbe
add
mov
fdivrp
or
dec
shl
gs
or
and
cmc
pushf
adc
lock
sbb
popf
and
jns
jb
add
sbb
int3
loopne
inc
je
dec
xchg
pop
add
or
fistl
aad
cmp
cmp
jl
sbb
pop
inc
and
pop
xor
ret
mov
cmp
lods
dec
mov
mulb
xchg
mov
pop
mov
and
mov
jmp
loop
dec
jg
pop
sbb
pop
mov
mov
cld
mov
mov
push
and
lea
cmp
sbb
cmpsb
cld
gs
into
aas
mov
xchg
jbe
dec
fiadds
mov
lret
stc
mov
movsl
xchg
mov
dec
into
dec
popa
sbb
dec
push
enter
cltd
sbb
in
bound
sbb
push
mov
bound
sbb
vpshufhw
mov
add
mov
pushf
mov
mov
lods
stos
jmp
and
mov
pop
iret
push
lods
addr16
out
xchg
pushl
addr16
dec
lahf
sti
sbb
push
mov
adc
inc
aad
mov
rolb
ja
sbb
fwait
sub
inc
les
mov
pop
jnp
and
jnp
xchg
push
out
leave
popa
dec
cld
jne
into
adc
dec
sbbl
push
dec
scas
int
jl
pop
mov
add
cmp
jge
xor
test
orb
hlt
jo
inc
flds
mov
adcl
into
push
std
push
push
insl
sbbb
test
aas
mov
dec
sbb
mov
dec
mov
out
dec
sti
inc
in
iret
cmc
andb
es
icebp
nop
out
mov
aas
add
rorb
sub
popa
sbb
inc
into
orb
test
lods
or
repnz
test
es
push
or
into
movsl
aaa
lret
les
mov
outsb
gs
icebp
js
jecxz
sub
mov
cli
mov
pop
fcomip
and
test
das
lds
push
arpl
sub
mov
jg
fisubs
inc
iret
arpl
inc
fists
stc
test
xchg
inc
fiadds
jp
or
xchg
push
cmp
mov
stc
and
into
mov
jnp
int
mov
push
sarb
sub
dec
stos
pop
jle
pop
dec
pop
dec
jns
sarl
pop
leave
movb
roll
loopne
test
lods
out
add
test
stos
xchg
jg
ror
out
rclb
test
dec
pop
mov
rcrl
jmp
push
adc
lea
addl
dec
in
inc
sub
daa
xor
cs
mov
add
inc
cmp
aaa
xchg
push
cmp
mov
dec
add
out
pop
inc
into
daa
fsts
mov
out
outsl
adc
gs
fs
jns
mov
and
xchg
shlb
movsb
jg
jne,pn
into
dec
mov
pop
lret
adc
cmpsb
addr16
dec
xor
lock
xchg
jl
sub
mov
pop
adc
pop
aaa
jecxz
jno
mov
pop
lock
add
call
cmp
flds
mov
pop
lcall
lods
std
push
rcrb
pop
imulb
and
das
pop
lods
and
mov
jnp
in
xlat
mov
mov
icebp
out
and
xchg
jnp
add
push
adc
or
cld
or
fwait
mov
frstor
mov
xchg
popf
cli
std
enter
cs
or
mov
jae
mov
jg
and
rcr
push
fstpl
cld
pop
ds
lock
xor
jle
mov
inc
xor
xor
sub
and
xchg
in
xchg
dec
fnsave
bound
inc
dec
xchg
loope
mov
push
das
mov
inc
adc
or
imul
mov
test
xchg
xchg
sbb
popf
add
mov
testl
pop
aas
repnz
sti
mov
insl
add
jnp
sbb
sub
jne
daa
sti
mov
stos
push
inc
add
inc
mov
stos
add
inc
lret
push
inc
inc
sub
adc
xchg
or
pop
mov
shlw
mov
loopne
push
lds
mov
xor
cmpsl
test
mov
imull
or
add
loop
into
pop
and
orl
je
xor
sarb
cwtl
xor
mov
imul
fdivp
orb
push
idivl
push
lret
pop
dec
bound
cs
adc
or
nop
sbb
pop
xor
pop
lock
adc
xchg
fisttps
inc
adc
inc
dec
cmp
ret
inc
or
add
sti
cmp
sub
cmp
mov
inc
andb
add
push
add
push
loopne
cmp
popa
mov
ret
mov
or
nop
pop
sbb
xchg
cmpsl
repnz
out
xor
jg
jp,pn
dec
clc
pushf
mov
shlb
test
fnsave
push
push
sbb
xchg
jle
rolb
and
dec
call
imul
adc
testl
testb
or
adc
mov
sti
adc
out
push
adc
pop
loopne
push
mov
rorb
jmp
test
adc
xchg
add
xchg
mov
repnz
lret
ret
neg
mov
pop
daa
imul
sti
and
inc
mov
loop
imul
and
cli
in
std
add
sbb
or
jmp
rorl
jmp
int3
push
daa
jns
pushf
divb
inc
ror
adcl
add
ss
movsl
push
dec
add
mov
pop
call
dec
andb
xchg
sbb
xor
lds
faddl
xor
or
adc
jmp
negb
mov
ficoms
loopne
sub
rorl
cmp
out
test
aad
rol
sub
cli
aad
pop
rorl
cmpsl
adc
hlt
dec
out
mov
iret
cmpb
pop
data16
inc
movsl
repz
push
ret
fwait
outsb
push
mov
or
jge
hlt
cmp
mov
xor
push
movsl
inc
sub
and
stc
dec
mov
sbb
scas
andb
xchg
lods
adc
ss
and
out
out
xchg
mov
enter
in
add
jb
mov
rcr
sbb
call
ds
aas
test
test
add
adc
ficoms
adc
inc
daa
movsl
out
fldl
mov
into
xchg
int
scas
add
arpl
mov
sbb
pop
loope
adcl
sub
nop
pop
lahf
xchg
cmp
in
fmul
xor
addl
lret
roll
mov
mov
leave
out
jns
xor
jne
pushf
cmp
mov
int
sub
xor
add
or
or
adc
push
cmpsl
pushl
mov
sahf
pop
or
test
es
outsl
daa
dec
mov
pop
in
cmp
sub
sbb
outsb
in
aas
pop
push
and
outsl
fimull
fildl
xchg
mov
sbbb
jg
popa
sti
or
push
inc
inc
lcall
hlt
pop
aas
jle
sub
add
adcb
push
xor
rcr
push
xchg
cmpsl
jnp
fidivl
rcl
in
pop
xor
filds
jmp
sbb
add
fimuls
inc
sbb
sbb
es
push
aaa
lret
mov
inc
and
mov
mov
mov
sub
xchg
mov
sub
mov
mov
enter
in
lret
out
aad
mov
or
loopne
add
faddl
lret
mov
xor
pop
sbb
mov
testb
push
fucomi
push
dec
add
gs
cmc
into
fs
pop
icebp
jne
loopne
insb
jne
jnp
xor
or
lods
mov
dec
icebp
in
std
add
cmp
fistpl
cmp
xchg
fnstenv
or
in
pop
jno
adcb
xchg
jmp
sbb
aaa
dec
sub
icebp
sbb
enter
fsubs
push
pusha
mov
push
lahf
out
xchg
cmp
lds
test
xchg
adc
jl
loop
or
mov
cmpsb
dec
mov
popf
movsb
lods
dec
loope
xor
push
xchg
mov
std
xor
jb
cltd
push
xchg
fdivl
rcrl
xchg
movsb
add
jnp
push
add
es
cmc
lahf
mov
jns
lret
sub
mov
into
lret
repz
and
rep
xor
cwtl
pop
adc
or
xlat
push
mov
movsb
jg
mov
jp
in
mov
add
loop
xlat
shlb
pop
daa
stos
sub
inc
out
sub
cwtl
xchg
aad
adc
push
pop
out
cmp
out
push
jno
aaa
push
aad
fld
or
lods
lret
push
mov
gs
mov
pushl
sahf
ret
test
das
je
test
leave
jmp
and
dec
push
ret
push
sbb
cld
shrb
popa
lret
aad
add
xchg
iret
push
mov
adc
imul
add
and
int
ret
adc
iret
push
mov
mov
cwtl
pop
shr
mov
scas
add
cld
push
cmp
xor
int3
nop
and
sub
pop
adc
mov
mov
push
dec
jno
lcall
out
pusha
test
xchg
arpl
sti
jbe
sbb
clc
fiaddl
ss
movsb
xor
cmp
lahf
idiv
cld
push
xchg
inc
es
cmpsb
into
pushf
jne
xor
add
outsl
pop
rolb
xor
mov
xlat
mov
fidivs
jnp
mull
mov
sbb
notb
stos
repnz
stos
pop
scas
cmpsl
sub
mov
test
jmp
outsl
in
sbb
out
cltd
mov
cmp
sar
cmp
sahf
jb
fstl
adc
divb
jnp
fcoml
sub
pop
mov
fsubrp
mov
loope
add
lock
dec
xchg
inc
sbbl
insb
adcb
push
iret
inc
stos
inc
mov
mov
popf
jb
decb
xchg
push
and
mov
adc
add
inc
sbb
sbb
in
mov
xchg
call
ss
test
or
and
aaa
hlt
or
xor
repz
daa
mov
mov
filds
sbb
jno
push
pop
cltd
mov
pop
mov
jb
pop
jg
jl
out
cli
mov
gs
mov
jne
lret
stos
test
sub
inc
mov
sub
leave
inc
shlb
or
xor
push
pop
xor
icebp
fwait
sahf
loopne
mov
fstpl
repnz
loop
mov
out
dec
loope
mov
sub
mov
leave
pusha
mov
mov
push
pop
inc
test
push
sub
pop
cmp
scas
sub
mov
cli
cmp
shrb
sub
xlat
and
clc
adc
add
add
cmc
int3
and
imul
or
xchg
push
std
pop
jo
test
aam
leave
sbb
cmpsb
adc
jnp
adc
xlat
and
or
mov
pop
out
sbb
popa
std
pushf
imul
repz
pop
jo
or
cmp
inc
xchg
pop
or
popa
lea
cmpsb
subb
or
dec
stos
icebp
lret
les
andb
in
lcall
push
call
sub
je
cmpsl
cld
mov
ss
jg,pn
xor
imul
pop
addr16
xchg
inc
ljmp
cmp
jg
jg
jmp
aad
xchg
sti
xor
inc
xor
mov
sbb
movsb
xchg
cmp
push
adc
popa
cwtl
das
mov
int3
out
sub
in
loopne
mov
clc
or
ficoms
adc
dec
test
outsb
inc
sahf
add
cmp
out
cmp
adc
cmpsl
sbb
lahf
aam
neg
mov
adcb
lret
daa
cwtl
cltd
arpl
xlat
pop
inc
adc
add
inc
jl
cwtl
cmp
and
js
adc
mov
or
adc
ret
xchg
data16
ret
or
mov
sub
jo
jnp
pop
pop
xor
jae
aas
movb
pop
imul
cmp
lods
sti
idivb
push
and
xchg
mov
shll
xchg
cld
jl
mov
and
mov
inc
aaa
dec
mov
daa
mov
int
nop
jg
rcl
rcrb
cli
ss
je
mov
enter
xchg
jmp
or
mov
mov
sub
ds
repz
dec
movsb
jbe
cmpsb
fs
mov
sub
aaa
lds
sbb
aas
test
sbb
roll
mov
cli
ds
into
cli
inc
mov
and
jae
dec
imul
inc
cmpsb
popf
lods
inc
lods
mov
jmp
jecxz
stos
sub
subl
push
push
jmp
std
pop
push
repz
insb
push
mov
clc
dec
mov
ljmp
mov
jle
aas
in
push
cwtl
lods
hlt
mov
insl
rolb
dec
in
inc
mov
inc
dec
add
dec
push
in
adc
gs
fdivrs
adc
int3
ficoms
mov
std
adc
lods
or
mov
in
call
xlat
mov
or
fstpt
lcall
add
rclb
outsb
add
or
xchg
and
xchg
jecxz
rolb
ret
xchg
andb
mov
dec
sub
push
adc
pop
lods
xor
sbb
testl
inc
call
ret
aas
and
push
daa
inc
lods
add
fisubs
fidivs
mov
xchg
lahf
out
ds
cmp
ljmp
push
out
jns
js
jge
adc
and
sub
dec
in
rcl
add
push
cmp
das
jnp
hlt
sbb
sbb
or
fwait
repnz
xchg
lret
xchg
sbb
sub
jns
es
cmp
cmc
ret
repnz
in
stos
adc
mov
adc
aam
add
int3
lret
dec
testl
shlb
push
and
fldt
pop
cld
push
and
out
lret
xchg
jle
push
push
std
call
scas
push
nop
shr
jge
repnz
sahf
pushf
jle
sbb
jg
aas
mov
std
lods
mov
and
and
cmc
js
mov
clc
push
gs
inc
xor
pop
push
push
sbb
nop
popa
dec
movsb
movsbl
xchg
mov
adc
adc
add
orl
sub
cmpsl
mov
dec
add
aad
mov
add
mov
push
loope
cmpsl
aad
add
sti
insb
orl
add
sbb
daa
inc
xchg
mov
xchg
mov
pop
jle
imul
imul
push
or
iret
or
mov
jmp
and
pop
hlt
dec
ss
add
inc
dec
shlb
pop
lock
push
fstl
push
sub
daa
enter
lcall
out
and
adc
and
in
jle
rdtsc
and
sarl
xchg
repnz
xchg
mov
or
orb
pop
add
rolb
cwtl
data16
aaa
pushf
loopne
mov
pushf
push
js
rorl
jne
ljmp
loopne
lret
push
inc
mov
jnp
stos
in
adc
cmc
xchg
rorb
cmp
mov
dec
test
loopne
sbb
cmp
in
fidivs
cwtl
add
jecxz,pt
sahf
jp
nop
pop
and
hlt
dec
lock
mov
lcall
adcb
jmp
mov
mov
clc
cmp
jecxz
add
imul
fsubrs
adc
out
pusha
scas
lret
mov
rorl
ss
push
scas
divb
lock
lret
sbbl
or
add
xlat
fisubs
xchg
out
dec
ja
and
xchg
dec
cld
push
into
jl
hlt
test
jnp
xchg
add
dec
xor
shrb
inc
cmp
jl
dec
movsb
adc
mov
dec
pop
sbb
repnz
xchg
sub
inc
lret
test
dec
out
push
xchg
adc
decl
sbb
jne
add
and
sbb
mov
cmp
or
fimull
mov
push
cmpb
mov
hlt
pop
push
mov
fnstcw
clc
jg
mov
jae
sbb
sub
push
adc
mov
or
dec
push
mov
push
dec
inc
int3
subb
mov
inc
jmp
pop
ret
dec
mov
push
aaa
lods
scas
xor
stc
mov
inc
into
cmc
test
enter
int3
clc
lret
pop
sub
cmp
loop
int
inc
out
dec
jo
add
xlat
ret
xor
adc
aaa
ficoml
xchg
aad
das
push
xor
dec
cmp
xchg
repz
rorl
subl
sub
mov
sub
rolb
inc
mov
ds
push
lods
fwait
cmp
xor
cmp
jl
outsl
or
cmp
mov
or
mov
je
movsl
inc
daa
loopne
sahf
cli
addb
iret
rcll
ds
repnz
cwtl
out
push
and
mov
push
cmp
fmul
sahf
lahf
or
popf
push
lock
xchg
jl
es
inc
cmp
cs
mov
fwait
addr16
dec
outsl
cmc
mov
fcomps
cli
int3
shll
mov
push
add
mov
int3
jno
mov
xor
jne
ret
mov
loop
sub
and
jmp
mov
shll
pop
and
push
or
lea
xchg
test
dec
fcomps
and
loop
and
aad
popf
mov
loope
cwtl
scas
icebp
and
loop
mov
nop
stos
mov
push
add
inc
lret
cmpsb
dec
orb
pop
icebp
pop
pop
in
stos
mov
dec
xchg
and
in
jle,pn
mov
cltd
and
lret
sbb
jp
hlt
pop
pop
lcall
sbb
rorl
jg
or
rcrb
jle
jle
jl
popl
in
movsb
and
jle
push
loopne
shl
inc
mov
enter
std
test
enter
xlat
push
push
push
subb
aam
jno
cmp
mov
cld
ret
and
pop
icebp
nop
icebp
push
ja
cwtl
mov
mov
push
popa
push
mov
jmp
or
inc
mov
ficompl
push
push
inc
inc
mov
jle
fldl
fistpl
dec
jg
adc
stos
stos
hlt
bound
cmpsl
jb
aas
outsb
jns
lret
push
popf
add
mov
aam
pushf
mov
adc
das
xchg
addr16
jp
pushl
test
cmp
fiadds
lds
mov
into
aas
ret
mov
jb
push
fidivrl
or
sub
fildll
aas
into
cltd
mov
or
js
fsubrs
sbb
sub
sub
out
sbb
lret
mov
cmpsb
cmp
cmp
and
daa
jo
js
stos
orl
idivb
aam
lods
jge
xor
jmp
das
testl
pop
jb
insb
into
lock
or
xchg
inc
mov
jp
mov
push
lods
loope
and
stc
in
es
inc
cmp
je
adc
and
sub
fwait
out
cmpsl
clc
add
dec
enter
push
test
inc
sbb
dec
fimuls
inc
inc
jbe
mov
or
out
daa
jg
mov
lods
frstor
hlt
sbbb
push
lock
fisubrl
lcall
rolb
lods
aas
outsb
not
mov
out
sbb
mov
pop
gs
push
rcrl
gs
xchg
push
cmp
sub
ljmp
xor
nop
or
fucomp
xchg
pop
push
lcall
lea
cmp
vpaddw
or
dec
cmp
add
inc
mov
xchg
mov
or
fs
mov
or
mov
out
imul
mov
cmp
sub
sub
mov
sub
xor
call
std
add
out
push
adc
shl
stos
xor
fimuls
mov
andb
add
mul
adc
icebp
out
repz
popa
adc
jp
sti
inc
das
aas
and
call
popl
shll
adc
or
xlat
into
ljmp
push
mov
inc
lods
and
daa
dec
push
shll
push
sub
jmp
pop
and
mov
jecxz
and
divl
jbe
inc
jl
mov
or
fcmovnb
cmp
iret
stos
ret
in
pop
in
in
pop
sbb
loope
stc
and
push
inc
xor
inc
xor
pop
lahf
xor
jmp
cwtl
and
das
stc
fsub
jne
leave
add
cld
mov
xchg
add
push
mov
incb
test
jo
mov
mov
hlt
sbb
mov
and
add
outsl
lcall
inc
dec
jne
jmp
xor
pop
ds
out
popl
dec
push
mov
pushf
pop
jnp
cs
loop
subl
sub
lds
fwait
fwait
cmp
icebp
sbb
sbb
mov
cmp
sbb
and
in
cmp
jge
xchg
clc
sar
cmp
inc
push
xorb
test
std
sub
fs
sub
mov
je
popf
test
loop
and
test
add
jg
push
or
cmp
jno
addb
push
sub
pushf
cmp
insb
fnstcw
add
aad
shlb
pop
mov
lret
xor
mov
pushl
pop
rcl
xor
jle
dec
pop
pop
aaa
xchg
sar
jnp
fsub
inc
popf
leave
stos
inc
dec
ret
dec
stos
lods
push
mov
cwtl
testl
insl
adc
cwtl
add
lods
std
push
aas
popf
lcall
push
jle
push
popf
je
mov
cmc
and
pop
shll
dec
in
daa
mov
jo
ret
add
cmp
scas
daa
clc
out
adc
pop
dec
nop
fmuls
sub
lods
xor
into
pop
lods
inc
imul
aaa
leave
pop
insl
lret
loope
add
add
fnstcw
ljmp
enter
popa
stos
ds
repnz
mov
hlt
xor
leave
push
cmc
jecxz
pop
jbe
ss
xchg
pushf
loope
lret
add
xor
cmc
and
pmullw
sbb
cwtl
pop
push
adcb
sar
les
rclb
jmp
adc
push
jb
mov
mov
cmp
push
cmpsb
fadd
sbb
push
ljmp
jg
es
mov
xchg
push
adc
sub
pop
mov
jbe
arpl
testl
adcl
cmp
rolb
dec
in
sbb
das
cmp
mov
loope
lods
jp
xor
xchg
add
pop
fsubr
xlat
push
mov
inc
std
stos
mov
sti
icebp
je
xor
add
sub
sub
lret
fbstp
jl
out
inc
js
push
dec
out
lret
loopne
add
repz
mov
jns
jae
scas
pop
ja
stos
sbb
sub
sbb
outsl
popf
loop
add
mov
jmp
jns
les
es
arpl
pop
out
imul
adc
mov
lods
sub
icebp
lcall
or
mov
push
addb
daa
js
jbe
jb
mov
sub
ljmp
sub
daa
addr16
xlat
inc
jle
xor
lods
inc
mov
aaa
andb
lcall
out
test
jnp,pt
xchg
clc
pop
add
or
jae
pop
pop
cmpsl
or
sub
cmp
mov
inc
and
pop
in
mov
movb
loop
shl
cmc
add
mov
mov
push
mov
add
out
lods
push
xor
lcall
dec
sbb
fimuls
cld
push
push
movsl
cli
mov
inc
fbstp
mov
fs
pushf
jge
lods
insb
jmp
mov
mov
inc
push
cltd
popf
call
movl
adc
adc
push
jmp
xchg
out
add
dec
dec
jle
cmpsb
adc
andl
push
dec
inc
pop
incl
cmp
xchg
ret
dec
jno
pop
lret
in
dec
jns
cmp
and
ret
fcoms
mov
sub
aas
stos
adc
lock
rorb
scas
pop
out
imul
xchg
sbb
pop
arpl
nop
adc
je
mov
jecxz
jl
inc
shll
pop
adc
inc
adc
int3
aam
or
add
fucom
push
cmpsb
pop
mov
xchg
mov
mov
lods
cwtl
nop
xchg
fistpl
popf
sti
cs
lock
scas
into
mov
push
jg
and
mov
stc
fisubrs
subl
dec
cwtl
in
pop
pop
sahf
sti
gs
inc
fcmovu
stc
fidivrs
ficomps
std
jne
mov
rorb
xor
lods
cwtl
fidivrs
ret
sub
or
rorb
out
pop
outsb
inc
mov
loopne
sbb
outsl
arpl
movsb
add
fadds
out
dec
jge
mov
pop
inc
jno
sub
cmp
je
or
mov
pop
mov
or
xchg
add
push
sbbl
cmc
push
inc
ret
jo
push
cld
out
jbe
cwtl
mov
std
lret
ljmp
xor
ret
pop
fsts
pushf
cmp
js
mov
jmp
aad
loopne
mov
iret
inc
adc
add
sub
nop
int
stc
call
movsb
xchg
inc
fwait
cmp
add
imulb
fistps
fldt
push
ljmp
popa
scas
xor
adc
shlb
inc
stc
aad
xchg
cmpsb
cmp
aam
ja
pop
mov
out
xor
xchg
xchg
shlb
mov
divb
loope
bound
loopne
xchg
fidivs
imul
aas
jecxz
mov
clc
jns
push
or
adc
sbb
je
sar
movsb
and
add
or
mov
pop
xor
mov
mov
sbb
sti
stos
xor
push
inc
cwtl
cmp
xor
in
sub
mov
dec
sahf
push
stos
iret
pop
scas
cltd
lret
sbb
imul
and
into
and
aas
jne
sbb
inc
popa
push
pop
xor
xor
outsb
add
push
lahf
sbb
sbb
adc
jmp
enter
movsl
lea
adc
xor
addr16
or
mov
mov
sti
pop
loope
insb
mov
push
addr16
aaa
xor
fwait
loop
es
bound
jge
lcall
pmovmskb
jg
xchg
and
jp
push
andl
lcall
sarl
aas
dec
cmp
pop
xchg
mov
aad
jge
andb
jmp
subl
xchg
sbb
cwtl
dec
loop
lcall
jo
sbb
movsl
int
add
mov
adc
mov
emms
or
mov
clc
mov
stos
dec
ss
rol
mov
push
loope
push
add
add
testl
into
imulb
cmpsl
ret
cltd
mov
pushf
shrb
push
dec
loope
lret
adc
cmp
lock
jl
or
dec
outsb
les
int3
push
dec
push
and
hlt
adc
jae
stos
sub
add
xchg
out
cmpsl
xor
jb
fwait
test
xchg
lret
dec
mov
test
hlt
jb
jg
lret
dec
les
push
or
in
pop
push
push
and
cmpl
imul
and
mov
fcmovu
loopne
jmp
cwtl
adc
rolb
imul
dec
enter
mov
fucomp
std
fcompl
jle
adc
clc
adc
pop
lcall
mov
fdivrp
xor
inc
cmp
sbb
and
cmpsl
adc
lcall
scas
push
and
or
and
inc
pop
push
sbb
or
repnz
push
sub
add
xchg
xor
lea
xchg
push
dec
mov
ds
js
rorl
add
pusha
popf
loope
aaa
lods
jno
fs
lahf
push
cli
cmp
mov
adc
pop
outsb
sub
mov
adc
pop
adc
outsl
loop
les
adc
dec
repnz
fsubr
mov
push
ret
loop
incb
fsubrp
sahf
scas
fmull
scas
push
sbb
test
jne
cmpsl
cmp
or
push
sbb
rcll
lret
xchg
mov
adc
jl
and
test
inc
cmpb
into
in
incb
fadds
xchg
lds
or
ret
push
xor
inc
dec
jecxz
and
pop
test
inc
push
test
cltd
cld
cmp
rorb
cmpsl
sub
xor
test
pop
loope
sub
jb
push
xchg
cmc
mov
push
xchg
pop
cld
es
ljmp
movsl
mov
mov
sbb
xchg
ja
sub
mov
imul
sub
sub
add
rcll
mov
enter
and
jp
jle
xorb
xlat
lcall
fbstp
xchg
jne
ret
loope
lahf
sbb
in
push
arpl
dec
out
xchg
adc
dec
test
lods
and
push
rol
iret
sbb
sbb
add
test
divb
call
pop
shl
add
adc
mov
fwait
push
cmpsl
or
xchg
xor
or
in
adc
sub
sahf
pop
rcl
enter
xor
adc
sahf
cmp
cmp
dec
dec
pop
movsb
xchg
push
scas
mov
shl
lret
decb
adc
adc
test
out
pop
sub
pop
cmp
imul
mov
mov
imul
int
xor
pop
sub
xchg
push
sub
int3
in
cltd
xor
adc
dec
push
jecxz
cmc
jge
jmp
ljmp
pusha
stos
add
clc
nop
dec
xchg
pop
int3
or
es
fimuls
bound
or
adc
out
orl
divl
pop
cs
mov
in
mov
insb
add
jae
sub
push
cmp
bound
pop
sub
mov
popa
push
je
and
dec
add
xchg
js
xchg
xor
call
cld
loope
push
jnp
inc
xor
adc
test
in
xchg
and
sbb
xchg
jle
cmp
sbb
dec
or
jno
int
add
add
lea
fmuls
out
int3
cltd
lods
iret
dec
jecxz
nop
aam
jb
test
into
inc
add
cs
pop
cmp
push
pop
les
je
ret
bound
sbb
dec
cmp
insb
sar
rcll
fnstsw
push
sahf
inc
mov
adc
ljmp
out
adc
dec
aam
aaa
add
pop
add
movb
aad
sub
sti
sbbb
cmp
or
add
jle
lods
stos
cli
and
inc
cmpsl
dec
mov
cmc
fldenv
dec
sub
push
test
scas
or
or
lock
and
int3
cld
fsubrl
mov
stc
out
xchg
clc
xor
inc
mov
inc
xor
dec
push
popa
mov
jl
push
jmp
xor
push
pop
ret
jecxz
dec
imul
inc
dec
inc
push
sarl
sub
enter
out
fwait
or
inc
sub
shll
push
inc
bnd
push
bnd
or
movsl
xor
add
lcall
cltd
fsubs
js
lods
pop
out
mov
fcos
sbb
cltd
sahf
or
mov
imul
xchg
rolb
mov
sbb
aaa
ret
sub
fdivrl
cwtl
sti
leave
imul
cli
outsl
lahf
mov
adc
mov
out
add
mov
mov
pop
mov
adc
dec
shlb
or
xor
stos
push
fisttpl
add
mov
inc
push
frstor
or
daa
adc
cmpb
das
das
adc
dec
mov
cmp
in
loopne
ljmp
enter
std
push
adc
fwait
cmpb
mov
push
sbb
mov
test
mov
pop
loopne
push
or
aas
or
icebp
cmp
call
sti
mov
adc
in
mov
out
loope
mov
inc
mov
leave
or
inc
dec
fwait
cmpsb
and
mov
lret
std
and
add
or
imul
in
push
fs
and
decl
insl
xchg
sub
adc
jmp
mov
adc
cmp
lock
mov
jbe
or
jecxz
push
or
adc
dec
std
imul
arpl
and
xor
cli
addr16
push
dec
rcrb
repnz
scas
andl
push
and
movzbl
pop
lods
xor
jecxz
mov
ss
jns
dec
enter
sbb
cltd
lcall
in
movsb
lods
cli
mov
pop
mov
sarb
push
inc
sahf
stos
cs
stc
test
lret
rolb
cmp
xchg
adc
add
inc
fs
push
add
push
dec
or
mov
mov
xchg
jne
or
fldenv
and
jb
xor
adc
pop
mov
sarl
sbb
jl
adc
pop
lret
or
outsb
add
shrb
inc
stos
and
add
pop
sbb
cld
mov
lcall
sub
adc
and
or
scas
js
push
mov
cmpsb
jb
pop
movsb
push
sbb
xor
mov
outsb
cs
sahf
mov
jecxz
sahf
outsb
xor
sub
xchg
popf
rolb
jo
pop
mov
sub
or
orl
outsl
popa
ljmp
pop
outsl
test
xchg
loope
in
pusha
je
sub
ja
mov
jecxz
lcall
lcall
cmp
xchg
push
sbb
cltd
inc
mov
paddd
pop
imul
ret
push
adc
js
repz
shlb
jg
lret
loopne
aad
fiaddl
cmpsb
loopne
cmp
popa
mov
push
pop
dec
out
xor
fs
out
fadds
jbe
and
out
mov
cli
dec
ret
pop
jmp
call
and
lret
rorb
lock
arpl
cld
outsb
dec
pop
popa
movsw
movsb
les
repnz
nop
cltd
jo
rol
jo
jge
call
nop
dec
loopne
pusha
lea
cld
orl
popl
adc
xor
outsb
inc
push
addl
xchg
push
inc
fwait
pop
mov
shr
lods
inc
xchg
mov
mov
cs
mov
je
pop
xlat
mov
push
inc
stos
push
inc
popa
adc
lret
fnstcw
adc
xlat
fdivrs
and
pushf
out
jecxz,pt
das
stos
outsl
lcall
cmp
add
call
add
and
adc
jnp
stc
icebp
push
lret
ljmp
clc
in
inc
fidivl
das
mov
push
sub
rolb
xchg
sbb
jnp
or
xchg
incb
or
jg
shll
and
enter
movsb
pop
aas
cltd
dec
aam
add
mov
adc
sbb
rol
jns
sub
int3
pop
mov
test
xor
mov
in
cli
xor
fisubrl
out
xor
cmp
mov
roll
xor
jle
xchg
cmpsb
fsubrp
push
cmpb
pop
out
sbb
pushf
pop
add
mov
adc
add
lods
cld
ficomps
add
mov
pop
add
jmp
push
push
addr16
push
inc
xchg
mov
xchg
push
rcrb
cltd
imul
pop
mov
inc
push
pop
adcl
or
mov
adc
cmp
rcrb
xchg
nop
out
or
push
fbld
cmp
jno
add
inc
push
sbbl
loopne
xchg
pop
or
jp
adc
repz
scas
popa
adc
scas
add
xchg
aaa
sub
in
daa
pop
or
loope
and
dec
movb
mov
push
and
sbb
int
loope
punpckhbw
stc
lock
scas
jg
ds
and
sub
or
dec
repz
iret
inc
aaa
lret
test
inc
cmp
stos
sub
sub
lods
pop
sbb
sti
gs
sub
pop
pop
shll
int3
lods
mov
pushf
lcall
pusha
in
xchg
popf
popf
sbb
cmpsb
or
or
sbb
loopne
pushf
adc
popa
mov
shll
jle
test
mov
and
mov
mov
cmp
pop
push
into
not
mov
rorl
fisttps
jo
or
lcall
add
pop
frstor
adc
mov
pop
dec
mov
jb
test
or
adc
or
inc
xchg
or
int
fnstcw
int
pop
cltd
maskmovq
mull
cld
sub
or
fisubrl
data16
and
sub
imul
mov
clc
inc
mov
push
xchg
hlt
mov
mov
fiadds
daa
mov
cld
fs
inc
sahf
inc
dec
pushf
sub
lock
mov
sbb
sbb
int3
ljmp
jae
icebp
cwtl
loopne
daa
sbb
dec
push
loope
inc
divl
mov
cmpsl
jne
inc
lock
mov
lret
insl
mov
xor
jl
lret
xchg
jo
cmp
push
sbb
sub
mov
jg
mov
mov
inc
dec
sbbb
ret
sub
cmp
movsb
sahf
sub
push
add
popf
sbb
ret
mov
inc
icebp
mov
mov
inc
push
outsb
out
cltd
xlat
xchg
leave
cmp
jmp
js
sub
or
adc
daa
pop
clc
jp
xchg
cmpsb
les
insl
lea
fcompl
dec
int
int3
push
cmp
dec
xor
push
movsb
repz
test
mov
mov
mov
mov
into
pop
inc
push
ret
jb
dec
jg
loop
dec
jbe
test
pop
push
int
imul
inc
cli
xor
jecxz
mov
in
inc
les
lds
inc
sub
and
cmpsl
fisttpll
push
mov
push
push
out
jp
dec
fsubl
shll
push
cs
push
or
mov
inc
stos
sbb
idivl
decb
fldl
add
mov
sub
and
rcll
mov
mov
cmp
cmc
mov
fdivrs
fisttpl
ljmp
loope
sahf
xor
and
repz
inc
xor
jbe
shll
push
insl
out
sub
test
stos
mov
je
inc
xchg
orl
sbb
cmp
in
pop
into
insl
sbb
insb
fcomi
out
movsb
jg
repnz
cli
lods
dec
in
fcomip
sub
outsb
ds
jg
and
mov
ja
xor
and
mov
loop
add
mov
pushf
out
aad
in
cmc
inc
mov
mov
cltd
shlb
ret
imul
xor
inc
xor
fcmove
jl
lret
or
loop
mov
inc
jbe
and
push
inc
cli
sti
loope
lds
loopne
mov
and
jo
mov
xchg
iret
fadds
int
mov
mov
pop
lcall
stc
xchg
stos
ljmp
fwait
xchg
mov
lret
pusha
jg
or
pusha
mov
mov
push
jb
add
adc
es
inc
sub
outsb
sbb
push
sub
ret
push
aas
xor
pop
lds
xor
outsb
repz
gs
int
and
rcrl
hlt
dec
mov
xor
in
inc
inc
or
xor
jae
and
push
xchg
idivb
push
daa
xchg
cwtl
out
iret
jae
shlb
mov
mov
pop
out
jbe
sbb
sub
xor
mov
push
std
aaa
pop
or
ss
and
jo
out
push
cltd
push
lahf
inc
in
and
js
or
outsl
jp
sub
pushf
mov
or
mov
lcall
mov
gs
pusha
cmp
push
inc
adc
dec
dec
xor
inc
pop
inc
lret
frstor
add
aaa
leave
cmp
xchg
das
ljmp
or
xor
xchg
test
dec
ret
mov
movsb
add
lea
lds
enter
mov
dec
xchg
sahf
rcl
mov
add
jmp
mov
inc
cmp
sahf
adc
imull
and
xor
mov
mov
inc
cmp
in
jle
adc
je
inc
fucom
push
pminub
insl
movsb
popf
adc
cmc
or
shll
pop
cwtl
mov
cwtl
mov
xchg
shrb
sub
sub
inc
fcoml
sub
add
add
stc
rcrb
popa
or
dec
or
and
dec
adc
movsb
fmul
fcomps
lea
sub
test
in
inc
and
inc
push
sub
xchg
fwait
sub
test
clc
lret
push
adc
hlt
jne
shrb
lods
das
mov
adc
cwtl
sahf
inc
or
xor
xchg
push
jae
aad
daa
inc
inc
xchg
int
lret
sbb
dec
xchg
xor
in
popf
dec
int3
cld
int3
into
push
fldt
enter
ss
adc
sub
dec
cmp
lea
push
jns
cmp
inc
out
jle
imul
loop
int3
call
sbb
and
sub
iret
add
sub
fimull
out
dec
cmpsb
or
sub
dec
scas
rclb
mov
ja
and
xor
mov
insb
int3
xor
jle
icebp
xchg
aam
and
push
in
mov
lcall
imulb
fsts
clc
ja
dec
lds
outsb
pop
mov
lret
sahf
pusha
xchg
add
and
jl
adc
push
or
mov
cmp
sub
or
push
popf
fnstcw
mov
ret
push
in
imul
out
mov
sarb
inc
mov
cmpsb
fidivrs
xor
lcall
mov
leave
jg
cmc
push
lock
jns
jmp
leave
std
mov
pop
daa
pop
adc
jb
push
mov
add
imulb
imul
xor
pop
fadds
cld
cmp
sahf
add
cmp
test
mov
fiaddl
sbb
and
pop
mov
pop
sub
mov
inc
stos
cwtl
jecxz
push
or
cli
or
dec
ss
iret
enter
dec
mov
clc
sub
imul
pop
cs
mov
rcll
add
xchg
or
lock
nop
int
mov
mov
aas
mov
movsb
or
inc
faddl
pop
mov
or
or
or
push
dec
scas
cld
fsub
or
test
push
add
sbb
std
add
addr16
mov
add
dec
ljmp
lods
adc
aam
or
bound
cmp
dec
in
xchg
jmp
in
xchg
push
fimuls
movsl
pop
mov
jge
test
mov
or
cmpb
xor
pop
cmp
push
in
int
je
dec
mov
inc
xchg
sub
pushl
adc
negl
jbe
xchg
push
add
pop
fistps
or
fs
xor
push
mov
dec
dec
mov
frstor
push
inc
inc
into
setp
or
andb
jb
adc
jne
aaa
or
dec
filds
movsl
bt
cs
inc
incb
mov
je
xor
out
mov
lret
in
sar
jbe
aam
pop
iret
mov
cltd
fsts
das
adc
fisttpll
fimuls
dec
push
clc
fimull
mov
in
in
xchg
mov
or
fstl
fistpl
ret
jl
dec
push
sub
cmp
mov
push
lea
test
push
ret
push
lret
es
xchg
push
mov
scas
or
int
lret
arpl
fisttpl
xchg
cli
lret
inc
popf
cmp
fnstenv
faddp
cmp
test
xchg
push
inc
ret
mov
push
push
xchg
imul
lea
pusha
fbstp
ret
or
loop
sbb
cld
add
push
mov
jp
fistpll
cmpsb
int3
xchg
bound
jmp
sub
mov
cs
pop
cmp
mov
xlat
std
loope
mov
cmpsl
inc
and
jle
jns
pop
orl
repz
pop
pop
mov
int
out
popf
in
stc
adc
and
loope
lea
push
jmp
xchg
add
das
push
mov
jb
cmpb
ret
movsl
inc
xlat
jns
insb
repnz
fs
push
insl
adc
ret
mov
cwtl
adc
ss
in
jae
mov
popf
lcall
add
lods
fisttps
and
jecxz
pop
idivl
std
add
jnp
je
les
nop
sub
jl
enter
dec
test
sub
add
sbb
pop
mov
sbb
xchg
call
testl
adc
push
pusha
mov
jp
aaa
dec
cli
fnstenv
into
aad
mov
das
stos
xor
test
addl
jmp
sti
or
lcall
mov
or
jl
adc
jno
xchg
mov
fldcw
scas
into
lcall
sbb
fsubr
adc
sub
xor
pop
jl
dec
lods
jecxz
jp
sbb
das
fists
pop
mov
xor
popa
xchg
mov
inc
stos
inc
call
aaa
mov
daa
push
incb
cmp
fiaddl
test
aad
cwtl
insb
ljmp
and
ud1
xor
push
push
nop
ud2
decl
les
bound
test
out
sbb
add
sahf
jge
sahf
push
pop
mov
pop
and
mov
icebp
pop
jp
popf
push
in
and
loop
bound
fdivrs
daa
mov
lret
popa
jmp
jge
xchg
push
mov
or
ja
mov
mov
add
jmp
icebp
aas
lret
mov
jmp
divl
and
mov
cmpsl
or
xchg
test
lods
pop
ficoms
xor
inc
adc
push
cwtl
pop
daa
cli
in
jnp
xor
and
shlb
ljmp
push
and
lret
add
bnd
ds
loop
inc
pop
ljmp
mov
and
mov
mov
cmp
scas
cmp
cwtl
clc
je
xchg
pop
inc
push
ret
ss
lret
rcll
cmp
dec
sbbb
bound
inc
cmc
pop
inc
sub
pushf
pop
adc
push
and
sub
mov
xchg
rcrb
lret
test
dec
push
test
jmp
pop
mov
xor
int
pop
xchg
loope
pop
repz
xor
inc
cwtl
aaa
lret
insb
cwtl
fsubr
pop
cmp
jge
clc
xchg
lock
arpl
dec
xor
dec
pop
cld
pop
mov
push
aas
xorl
sub
adc
lods
fldcw
cltd
mov
mov
fimuls
imul
sub
bound
mov
insl
enter
test
push
fstl
mov
mov
pop
or
pusha
xlat
inc
add
inc
push
adc
lret
cmp
pop
pop
add
mov
and
imul
icebp
bound
inc
lret
or
and
addr16
pop
jp
add
out
insl
xor
loop
aas
rcl
cltd
in
hlt
cmpsl
ja
pop
lea
jecxz
push
inc
push
mov
push
add
rolb
jle
movsl
loop
movsl
shll
mov
push
inc
loopne
mov
jns
xor
pop
mov
or
adc
inc
adc
sub
cli
or
sbb
jl
sub
leave
cmp
les
hlt
xor
rcl
js
ret
lods
ret
mov
xchg
or
xchg
and
pop
add
xchg
cwtl
repz
daa
cmp
divb
imul
jg
or
popf
xor
sbb
rclb
sbb
dec
into
mov
dec
cmp
or
pop
mov
jg
push
xchg
outsl
fldt
add
dec
clc
sbb
sub
adcl
pop
add
pop
pop
es
pop
xchg
js
xlat
lock
pop
loop
into
push
sahf
adc
adc
pusha
and
or
xlat
xchg
cmp
stos
ret
add
push
not
or
xchg
dec
adc
or
sahf
push
and
dec
movsl
sub
mov
lcall
rcll
scas
inc
outsl
in
push
loopne
roll
scas
xor
les
test
cmp
and
adc
loope
inc
add
push
jae
hlt
inc
mov
imul
iret
ljmp
pop
shrb
mov
or
stos
incl
inc
icebp
pop
dec
pop
mull
lods
dec
mov
mov
les
mov
fsubrl
inc
dec
repnz
push
add
mov
mov
push
cs
pop
in
gs
stos
xor
aad
mov
mov
stc
mov
stos
in
adc
negl
jg
shlb
mov
xlat
scas
pop
dec
rol
loopne
jge
jp
push
stos
enter
notb
loope
clc
add
fisttps
pop
cmp
loop
roll
pushf
jl
imul
loopne
int3
clc
mov
dec
data16
dec
movsl
hlt
sub
sbb
imul
aas
lahf
sub
fldenv
out
or
orb
imul
scas
mov
cltd
lods
mov
mov
dec
jo
jmp
fcmovnb
and
ret
lcall
mov
lea
pop
and
dec
mov
and
xchg
cmp
imul
aas
frstor
jns
movups
loopne
out
icebp
ja
scas
test
mov
mov
cmpsl
xlat
jnp
push
mov
sub
enter
fbld
dec
xchg
mov
mov
xchg
jg
insb
icebp
stc
ret
div
stos
cmc
dec
test
jg
mov
sub
faddl
adc
int3
cmpsb
cmp
push
cmpsl
decb
cmp
push
int
lret
jl
shl
loop
or
js
jg
fdivs
sbb
jns
rorb
mov
pop
aas
imul
adc
pop
movsb
loop
fistpll
test
aas
rcl
xchg
mov
ds
mov
mov
les
scas
mov
test
sbb
stc
dec
shlb
jmp
pop
sub
cli
dec
xchg
sbb
hlt
ret
and
fisttpll
loopne
push
jb
sarb
fiaddl
loopne
insb
pop
add
inc
data16
ret
xor
mov
popa
fidivrl
push
lods
mov
leave
push
mov
nop
lock
idivl
out
mov
fdivrs
cmp
mov
fstl
out
pop
lret
dec
sub
sahf
subl
mov
mov
enter
std
mull
xchg
jg
push
push
push
sbbl
jle
jb
jns
mov
jbe
movsl
sbb
ret
adc
sub
repz
rolb
add
sub
shl
aaa
loop
int3
bound
inc
out
loope
dec
xchg
add
push
sbb
es
ret
mov
mov
push
and
pop
icebp
jb
lret
jecxz
in
pusha
mov
mov
mov
subl
rol
rcl
mov
fimull
movsb
lods
sbb
filds
xchg
into
and
cwtl
test
or
push
popf
pushf
jb
imul
popa
add
mov
or
mov
call
lret
js
mov
cmp
fbld
enter
out
fcompl
test
or
aas
outsl
shlb
ss
flds
jo
mov
mov
fdivrs
add
or
popfw
cmpb
or
es
and
hlt
lods
inc
mov
jnp
call
mov
pusha
popf
ret
bound
in
xor
sub
push
icebp
subb
aad
int
addr16
mov
push
pop
add
jbe
mov
pop
inc
sbb
push
rorl
xor
leave
and
jo
jge
xlat
clc
lods
sub
sarb
bound
lret
push
into
subb
dec
sub
bound
out
fisubrs
outsb
lahf
inc
cmpsl
data16
fcompl
pop
push
cmp
cmp
out
jnp
jb
shlb
mov
mov
xchg
fdiv
lahf
incb
pop
imul
fimull
xchg
cmpsl
jecxz
mov
andb
lods
enter
jmp
shr
sub
js
xor
fimuls
aaa
sub
xchg
pusha
int3
mov
cmp
inc
sbb
test
mov
or
divb
or
jp
icebp
dec
inc
loope
nop
jge
lret
lcall
and
test
push
inc
xlat
outsb
mov
mov
adc
lock
dec
pusha
push
pop
xchg
mov
movsb
cltd
ds
xchg
or
adc
inc
clc
xor
test
jg
mov
cmp
xchg
imul
dec
mov
insb
pop
push
push
gs
jle
pushf
mov
leave
testb
xchg
jl
push
jns
outsl
push
shlb
push
jle
xor
jb
mov
and
mov
insl
jnp
xchg
addl
push
int
sub
xor
sti
pop
lods
cwtl
and
rorb
dec
sarl
and
xchg
adc
sti
jo
cwtl
or
cmp
call
jns
hlt
cmp
mov
pop
lods
test
inc
xor
xlat
lcall
ret
add
add
fabs
pop
add
lds
sbb
sub
psubusw
nop
ljmp
mov
lds
pop
test
lds
aas
bound
and
jecxz
ds
fsubs
mov
movsl
js
aas
stc
mov
cli
ljmp
cltd
adc
test
lcall
repnz
push
and
loopne
push
andb
pop
scas
pop
hlt
popa
mov
lret
push
mov
cmp
push
rcrb
andl
push
mov
fiaddl
fdivrl
lcall
fcmovne
or
push
lcall
mov
mov
test
es
pusha
jae
mov
lret
push
lahf
sbb
pushl
push
ret
xchg
xchg
sub
inc
ret
movsb
mov
pop
mov
xor
es
movsb
call
xor
stos
enter
mov
out
mov
test
ret
xchg
ja
jo
dec
cmp
cld
xchg
sub
mov
icebp
dec
push
fldl
pop
and
fdivl
scas
sub
or
xor
testb
cli
ret
xchg
lock
sbb
and
sbb
mov
lods
fs
lea
ss
cmpb
out
cmp
sub
mov
or
addr16
inc
rcrb
faddl
inc
cld
fstps
jae
dec
dec
adc
out
jge
fsubp
in
and
nop
pop
fwait
xchg
rcll
outsb
fiadds
dec
inc
fwait
sub
repz
data16
gs
pop
mov
mov
xchg
dec
jmp
or
movb
cmp
in
ja
xchg
dec
repz
movsb
pop
test
rcrl
nop
rol
xchg
lcall
inc
xchg
imul
pop
xor
mov
movsb
inc
add
or
jge
inc
add
aam
xor
mov
jnp
jge
xchg
add
sbb
and
mov
and
test
mov
add
cltd
and
mov
xor
push
aad
dec
fsubl
inc
inc
dec
cltd
cs
and
add
ja
sbb
cmp
movsb
aaa
sbb
data16
jge
dec
lea
int
and
mov
jnp
les
xor
adc
js
add
push
sti
push
movsb
out
push
into
add
sub
cwtl
jg
dec
jnp
int3
xchg
iret
cli
cmp
jl
cmpsl
ja
pop
pop
fistpll
stos
imul
jno
sub
jp
aad
cmp
pop
lret
mov
sti
in
xor
pop
sub
test
cltd
outsl
in
movb
rcl
mov
jp
adcb
mov
imul
insl
inc
push
int3
xchg
lock
test
adc
test
cmp
pop
mov
push
js
sbb
and
jle
xor
sub
mov
xchg
addr16
rcr
out
jge
fldenv
sbb
dec
or
xchg
adc
inc
jmp
cmp
jo
xor
bound
push
cmp
cli
int3
nop
cmp
sbb
sarl
and
aam
imul
push
lods
or
cmp
fbld
sub
mov
pop
insl
jle
scas
pop
enter
movsl
pop
sub
mov
add
or
ds
loope
int3
lret
push
push
mov
pop
xchg
add
inc
std
add
mov
bound
mov
test
lea
fstps
btr
in
loope
fwait
inc
push
jmp
or
pop
jl
out
add
jns
add
stos
pusha
adc
mov
mov
mov
mov
adc
repnz
ss
pop
negl
and
out
dec
pop
mov
leave
push
pop
dec
fmul
inc
sahf
mov
cmpsb
js
mov
add
mov
jg
sub
dec
pop
or
adc
inc
je
add
pop
or
xchg
shlb
ret
pop
pop
imull
es
add
cmpsl
outsl
add
cwtl
sahf
and
xchg
jmp
dec
arpl
dec
dec
sub
cwtl
push
jle
int
push
sbb
loop
stc
dec
ficompl
pop
movsl
mov
dec
adc
lret
jle
int3
add
mov
out
loop
into
and
mov
dec
adc
xchg
dec
xchg
enter
sbb
testb
sub
loope
jae
fwait
icebp
fmuls
outsb
jmp
xlat
or
js
xlat
mov
or
fcmovu
in
je
sub
cmpsb
inc
sub
cmp
pusha
xor
jne
stos
ds
and
cltd
mov
test
and
es
mov
xchg
inc
cltd
clc
jle
dec
iret
pop
rcll
rorb
leave
sti
push
daa
cli
xchg
mov
sub
incb
or
add
inc
leave
sub
lods
or
xchg
dec
inc
test
inc
push
dec
pop
repnz
imul
mov
sub
divb
stc
outsb
cmpsl
rorl
out
xor
lret
bound
jle
fcmove
or
jle
daa
mov
out
in
lret
cmpsb
push
fsubr
or
inc
pop
ljmp
pop
mov
scas
dec
adc
cmpl
shl
insl
pop
sti
cmpsb
jmp
jle
mov
cmovs
daa
ficoml
jmp
xchg
scas
out
loop
int
flds
xor
ljmp
out
or
outsb
fxch
decl
inc
and
cmp
jl
lret
divl
sarl
cmpsl
jmp
xchg
das
idivl
enter
scas
jno
adc
dec
bound
lret
dec
push
dec
es
mov
pop
or
js
fs
cwtl
ret
adc
cmpsl
jne
imull
loopne
push
dec
call
lcall
ret
test
ss
jbe
xor
into
cmp
sti
stos
daa
cmp
dec
xchg
sub
in
insb
jb
inc
fmull
or
cmp
dec
outsb
push
and
aas
mov
inc
inc
push
aaa
push
xlat
pop
mov
sahf
pushf
aas
dec
pop
addb
mov
mov
pop
add
std
testb
neg
stc
stos
pop
xchg
mov
mov
adc
adc
out
mov
out
mov
stc
xor
pop
inc
sbb
insb
mov
pop
mov
dec
sub
aaa
fidivrl
jnp
ret
mov
fldenv
pop
cmpsb
or
addr16
mov
mov
and
loop
imulb
sbb
lret
add
push
hlt
jbe
in
mov
fmuls
js
stc
sahf
int3
xor
loopne
mov
and
jle
in
lods
clc
jle
add
ret
cmp
js
imulb
inc
cltd
movq
xlat
inc
scas
mov
cmpsl
gs
aas
mov
addr16
addr16
insb
lea
sti
add
ljmp
sbb
lret
leave
adc
cmpsl
das
mov
fldcw
enter
mov
pop
cli
pop
add
fbld
jl
inc
dec
inc
mov
inc
jg
cmp
fwait
add
test
leave
and
sbb
xchg
scas
pushf
sub
ds
lret
or
loope
bound
push
xchg
fcmovbe
aad
push
cmpb
test
inc
push
int
daa
stc
adc
movsb
out
push
mov
rolb
jg
jge
xchg
dec
adc
cld
or
mov
aaa
pop
sub
push
push
leave
mov
les
dec
cmp
fs
sbb
lret
cli
push
push
xor
into
dec
sub
movsl
movsb
flds
out
movl
pushf
lret
inc
scas
dec
aad
push
icebp
aas
jne
mov
mov
lods
inc
aas
shlb
andb
inc
je
jbe
inc
cmp
insb
shl
or
testl
lahf
enter
dec
push
jnp
pop
enter
nop
pusha
clc
sbb
xchg
cs
cmpb
xchg
xor
mov
repnz
idivb
sub
mov
push
rcll
fs
data16
leave
jb
xchg
xchg
xchg
xchg
sub
mov
dec
jb,pt
fisttpl
xor
stc
cwtl
out
xor
push
adc
xchg
and
fstl
leave
pop
pop
push
pop
in
scas
pusha
dec
mul
jmp
out
fisubs
jl
xchg
mov
je
out
loop
fdivs
sahf
mov
mov
int
fsub
mov
addb
enter
add
dec
js
sub
dec
xchg
arpl
mov
cmpsl
shlb
into
inc
or
mov
in
push
pop
test
movd
aad
les
or
sahf
mov
mov
lret
xchg
pop
dec
sub
ror
in
mov
push
and
adc
cli
and
adc
adc
jl
outsb
test
fildl
jno
loop
into
lock
dec
adc
dec
cmp
ds
pop
popa
aas
sahf
jne
inc
iret
mov
inc
ds
int3
jp
jmp
in
jl
dec
js
dec
inc
dec
dec
xor
mov
stos
dec
cs
xor
xchg
decb
mov
out
loop
aas
in
adc
lret
sub
xchg
aas
movsl
imul
adcl
dec
mov
int3
loop
clc
sti
icebp
xchg
jle
push
pop
stos
pushf
fildl
jnp
xchg
push
lods
push
call
ja
jl
shlb
sbb
xor
jmp
ds
lods
xchg
inc
jbe
jl
pop
sbb
jb
std
xchg
cmp
dec
xchg
mov
jle
rolb
xorb
nop
rclb
jecxz
jle
xchg
sbb
cmp
rcl
cmc
hlt
std
pop
and
outsb
mov
lret
dec
xchg
sub
mov
adc
fimuls
test
or
push
testw
dec
and
testl
mov
idivb
xor
xchg
xchg
and
sbb
roll
stos
ficomps
xchg
lret
pushf
sbbl
loopne
int
scas
inc
out
jb
mov
ds
pop
pop
xor
enter
ja
sbb
clc
cmp
cmp
jg
mov
cmp
mov
and
test
test
sbb
stos
loope
loope
cmc
loopne
lret
push
lods
add
cwtl
cmp
and
jmp
nop
cmpsl
sarb
push
add
dec
inc
sub
mov
lock
shll
mov
sub
jo
mov
lret
xchg
cmc
sub
adc
dec
and
stos
jo
sub
ds
cmp
xchg
imul
jle
xchg
inc
lret
push
adc
mov
enter
inc
fmuls
xlat
in
jecxz
xchg
pop
popf
int3
mov
dec
add
xor
mov
adc
adc
add
mull
div
jmp
and
sbb
nop
fsubrp
sbb
cmp
rcr
pop
adc
test
scas
dec
ja
add
stos
add
dec
push
pop
ret
cmp
out
pop
jne
xchg
mov
in
inc
jge
imulb
fnstenv
sub
notb
or
rcrl
inc
js
cld
mov
test
lcall
out
movsb
pop
std
push
cmp
dec
sbb
out
mov
inc
add
xchg
out
push
and
mul
ficoms
nop
push
iret
or
movl
rcll
mov
jmp
iret
dec
adc
mov
fimuls
xchg
les
jmp
out
cs
pop
sbb
fdivrp
add
add
cwtl
std
cmp
push
test
mov
gs
insb
jbe
std
dec
orb
clc
mulb
pop
stos
or
sub
imul
shrb
pushf
into
call
mov
in
rorl
sbb
or
mov
adc
mov
rorl
jbe
pushl
andl
imul
push
dec
push
adc
pop
aaa
pushf
addr16
notl
stos
push
mov
pusha
repz
lcall
ljmp
inc
push
pop
or
xchg
inc
mov
dec
test
jp
push
shl
xlat
sbb
sub
mov
xorb
lds
aas
in
push
dec
scas
leave
cmp
lods
rcrl
sbbb
insl
test
cmp
in
xchg
lods
call
aas
nop
sbb
loopne
out
mov
xchg
dec
ljmp
mov
sbb
test
push
ret
add
jne
xlat
jbe
repnz
mov
test
mov
push
out
cmp
aas
push
push
lahf
mov
mov
rorl
ja
out
mov
and
add
notb
ljmp
cmp
or
sbb
jmp
dec
cmpsb
leave
xor
adc
mov
cwtl
leave
add
xchg
imul
sbb
adc
mov
jle
push
in
mov
sti
jbe
hlt
adc
data16
pop
mov
jl
sar
jae
dec
push
push
pop
dec
mov
dec
cmpsb
pushf
shrl
aam
je
or
ret
es
jle
mov
mov
cwtl
addb
shlb
aad
test
dec
mov
mov
cli
dec
adc
arpl
es
pusha
cmpsl
xchg
jle
xchg
mov
clc
lock
aam
jge
in
pop
jl
aaa
push
cmp
shl
or
out
pop
icebp
cmc
ja
sahf
push
stos
mov
int3
xchg
pop
xchg
pop
or
fldenv
popf
outsl
ret
pop
ds
cmp
or
sub
pop
pushf
jle
aas
out
scas
add
stos
and
stos
push
movsl
mov
shr
or
sbb
dec
in
fnstenv
push
flds
mov
jbe
pop
inc
rclb
arpl
push
aaa
ret
mov
fisubl
clc
je
inc
out
stos
add
incb
inc
add
inc
adc
int3
enter
and
push
add
les
mov
adc
add
and
jecxz
push
sbb
xchg
or
rorb
and
sti
cmpsl
int
xor
frstor
fst
dec
dec
push
daa
dec
mov
pushf
bound
adc
inc
stos
leave
aas
hlt
addr16
nop
fstpl
mov
cmc
dec
or
call
sbb
xor
int3
push
imul
cmovg
xor
inc
inc
inc
pop
pop
insb
std
jmp
dec
rorl
sar
sub
out
ljmp
addr16
stos
shll
sub
mov
or
fdivr
inc
jmp
aaa
add
add
cmp
je
pop
and
pop
mov
dec
fisubs
repnz
xchg
sub
popf
xor
xchg
in
cmp
jae
ljmp
lcall
mov
mov
sub
pop
loop
cld
jge
sub
push
mov
shl
loope
jl
push
sbb
mov
inc
stos
and
and
lds
sub
push
daa
xor
loop
in
ss
sub
jge
jae
dec
movsb
les
jl
push
sbb
fdivp
in
push
xor
mov
loopne
std
dec
ret
sub
or
dec
adc
sub
sub
cmp
mul
mov
mov
out
in
cmp
mov
test
orl
sbb
push
push
mov
loope
mov
ja
loop
jo
nop
and
notb
mov
mov
iret
nop
out
pushf
pop
xor
pop
xchg
lcall
lret
call
push
ficoml
inc
adc
dec
ds
dec
ja
push
cmp
sub
adc
repz
movsl
pop
xchg
ds
sahf
les
stc
xor
aam
mov
mov
cmpl
pop
lods
repnz
mov
je
sbb
inc
ret
inc
push
loope
es
std
je
mov
jle
add
or
xchg
mov
cmp
sarl
cld
pop
fldcw
je
cmpb
lods
call
mov
repnz
dec
push
inc
sub
sub
dec
popf
push
push
mov
sbb
xchg
int
or
cwtl
scas
mov
cmpl
popf
jns
adc
xlat
aam
jg
jl
sbb
xor
dec
fldcw
mov
ficompl
adc
shll
fsub
mov
lock
pusha
lea
sub
cmovge
outsb
ds
push
div
popa
aad
lcall
mov
aaa
xor
pop
mov
pop
pop
out
in
adc
or
popl
push
ficomps
out
fwait
and
fnstsw
ret
mov
ss
daa
mov
xorl
push
icebp
sub
gs
daa
test
cs
lcall
outsl
sbb
xor
mov
addb
fdivr
add
incb
int
inc
imul
outsb
jmp
test
or
movsb
rol
and
lock
mov
mov
mov
xchg
daa
jge
in
mov
into
adc
aas
adc
out
xchg
lret
lods
out
cmp
pop
add
mov
sbb
or
pop
bound
popl
outsb
jl
enter
push
aam
ret
mov
inc
sahf
jno
or
js
dec
pop
xor
call
dec
shll
add
ljmp
out
fwait
mov
jo
mov
push
add
add
xlat
movsl
int
popf
es
dec
cmp
dec
lcall
in
push
dec
in
cmp
lds
int
in
pop
orb
xor
and
cmpl
xchg
push
cltd
jne
add
jbe
mov
or
and
inc
in
and
faddp
xchg
fwait
je
stos
xchg
push
outsb
iret
push
xchg
push
iret
xor
mov
aam
cmp
pushf
popf
push
sub
push
repnz
fisttpll
add
xor
adc
pop
repnz
in
jle,pt
mov
ss
cmp
cmpsl
mov
fwait
testb
shl
icebp
fwait
adc
jp
repnz
xchg
aad
push
scas
jg
int
std
jle
stos
dec
stc
decb
push
int
fwait
or
movsl
jp
out
xchg
inc
sbb
inc
stc
cld
adc
mov
add
sub
cld
push
es
push
pop
hlt
outsb
ljmp
adc
jbe
cmpsl
outsb
jge
popa
test
andb
sbb
jmp
and
add
ja
or
xorl
out
xor
mov
ja
movsb
div
push
pop
out
dec
sarl
pop
push
sahf
pop
divb
pop
test
repnz
pop
inc
push
mov
pop
dec
daa
or
inc
xor
mov
push
pop
lods
push
dec
dec
fwait
nop
xchg
push
mov
cmp
xchg
repnz
ja
add
mov
mov
in
sbb
mov
mov
or
xchg
popf
cs
fstl
or
or
movsb
jbe
rcrl
mov
aas
ror
lods
les
sbb
push
int3
xchg
lcall
je
mov
aad
jg
xor
push
mov
pop
mov
xchg
pusha
dec
xor
jle
fmuls
xorl
adc
and
xor
mov
inc
in
xor
in
xchg
int3
jge
notb
or
inc
xchg
les
stos
lcall
subl
pop
popf
add
pop
insl
push
sbb
sbb
xchg
push
out
dec
and
jo
mov
faddp
imul
lret
aas
sub
mov
pop
xchg
ret
mov
mov
out
jnp
sub
lret
cltd
les
mov
mov
popf
jno
inc
setne
pop
out
sbb
mov
inc
shll
imulb
push
cmp
repnz
aaa
into
xor
lcall
mov
push
cmp
sbb
jmp
xchg
cmp
jne
cmp
add
sub
mov
cmc
adc
dec
shr
popf
es
aam
arpl
dec
lods
push
out
leave
xor
or
arpl
mov
decl
mov
sub
xor
adc
sbb
pushf
xchg
lea
pop
fistps
push
jnp
sub
out
jne
adc
inc
push
out
insb
cmc
add
mov
jg
jl
mov
xor
dec
fldt
addps
sub
cmp
adc
fnstsw
mov
leave
push
xchg
mov
dec
rorl
testb
gs
inc
or
rolb
pop
cmp
jmp
adc
jl
pusha
mov
inc
in
inc
dec
lock
inc
push
xor
xchg
sub
cmp
pop
mulb
dec
sbb
test
insb
jg
adcl
xor
mov
fdivl
repz
es
push
js
mov
iret
push
dec
inc
loop
or
jg
inc
push
shrl
ret
mov
adc
pop
lods
mov
cmp
mov
loope
push
cwtl
movsb
or
pop
xor
idiv
cmpsl
lret
adc
lock
fsubp
into
xchg
imul
ljmp
xor
cmp
jb
inc
xchg
sub
push
leave
arpl
ds
push
stos
aas
cld
aas
add
cmp
pop
repnz
adc
mull
movsl
test
and
xor
in
int
mov
bound
adc
pop
outsl
cs
xchg
mov
shl
inc
inc
lock
ror
shrl
out
push
fsubl
pop
iret
fcomi
cltd
cli
ljmp
loopne
xchg
xchg
aam
mov
sbb
out
jmp
add
pusha
cmp
in
dec
fstpt
sub
les
mov
add
pop
test
mov
push
les
push
cmp
adc
xor
xlat
inc
inc
mov
cmp
lods
mov
jnp
stos
sub
rcl
imul
out
and
jne
lods
push
mov
push
mov
scas
scas
ljmp
into
dec
jp
mov
cs
add
addr16
aad
jne
scas
push
in
push
pop
cltd
push
push
xchg
lods
adc
int
fadd
adc
aas
mov
outsl
dec
pop
lret
loop
adc
test
mov
mov
pusha
lods
jecxz
xchg
mov
jns
fwait
pop
test
inc
fbstp
cld
jae
fisubs
cmp
cwtl
xor
adc
cli
dec
mov
stos
inc
fwait
mov
push
inc
cli
stos
sub
pushf
stos
outsb
mov
shl
enter
cs
js
dec
or
mov
dec
pop
mov
mov
mov
test
lock
jp
addl
jbe
push
scas
popa
mov
push
lods
jp
test
movsl
pop
and
inc
push
add
and
cli
push
out
andb
imul
cmc
fists
fcmovb
mov
mov
or
cwtl
pop
jp
mov
stos
adc
jbe
pop
cwtl
sbb
sbb
mov
dec
lcall
cli
dec
scas
pop
mov
imul
push
test
mov
cs
xor
mov
aaa
xlat
mov
jae
xchg
movsb
pop
cmp
fildll
add
gs
mov
mov
mov
cmpsl
je
stos
sub
nop
pop
sarl
aas
mov
sub
and
mov
or
les
cmpsl
pop
sbbl
loope
lock
inc
dec
cmp
mov
mov
enter
lock
mov
jp
fbstp
call
mov
lcall
mov
mov
mov
and
lcall
ljmp
aam
in
sbb
jg
shll
fs
adc
push
jle
sbb
or
jge
cltd
or
add
call
dec
dec
repz
aam
loope
add
clc
in
sbb
push
ds
dec
lea
add
mov
pop
repz
adc
xor
dec
repz
xchg
dec
cmp
enter
stos
or
js
arpl
dec
test
cmc
pop
lods
arpl
mov
xor
test
in
and
xchg
mov
dec
xchg
mov
shl
aaa
jnp
pop
insl
jbe
movl
nop
mov
push
add
lods
lcall
ljmp
jne
popa
jmp
mov
popa
mov
xor
inc
cmpsb
xchg
push
or
sarb
and
fstpl
add
incl
jp
movsb
dec
or
movb
test
insl
es
ret
cwtl
xlat
adc
ret
sar
dec
out
cmp
test
out
out
xchg
lret
push
sarl
in
call
dec
sahf
xlat
xchg
cmpsl
cmpl
enter
aas
mov
pop
mov
nop
mov
pop
cwtl
rol
push
pop
and
icebp
xchg
ds
and
dec
iret
mov
cmp
and
fstpl
clc
xchg
bound
movsl
mov
mov
jmp
cmp
lods
lods
cwtl
mov
xchg
ret
xchg
int
or
jg
sub
pop
cmp
das
inc
adc
xchg
mov
fistl
mov
and
jg
or
mov
push
mov
mov
push
sbb
outsb
cmpsl
inc
mov
mov
inc
cmp
xor
sub
ljmp
adc
mov
and
jl
pop
jb
aam
mov
ja
ljmp
test
xchg
mov
add
movsl
popa
mov
rol
sub
mov
and
sahf
lahf
inc
cmpsb
hlt
xor
sbb
mov
leave
xor
pop
mov
and
les
sub
pop
test
out
sbb
daa
in
or
outsb
push
cwtl
std
pop
and
out
jp
xor
in
add
pushf
jno
mov
pop
mov
das
mov
ret
inc
jmp
decl
stos
and
cmp
fiaddl
xor
jl
scas
rorw
mov
out
push
in
imul
cmp
test
inc
popf
inc
loope
loop
xor
mov
and
aam
jge
ljmp
and
enter
stos
push
xchg
es
f2xm1
mulb
add
lock
cwtl
lret
pop
in
pop
movsl
lret
call
or
cli
test
fwait
repnz
push
jae
ret
add
xchg
fs
andb
push
mov
out
mov
adc
lcall
xor
out
xor
jecxz
jb
mov
sub
ljmp
xlat
mov
or
lret
inc
sub
icebp
or
sbb
push
daa
cmpb
add
mov
aad
add
add
cmp
xchg
sbb
push
test
jle
push
ljmp
je
jmp
jl
arpl
push
in
and
iret
int3
mulb
jecxz
mov
jbe
dec
sahf
sub
pop
fcomps
mov
in
mov
mov
cs
fdivr
cltd
jbe
push
lret
roll
mov
mov
adc
shll
leave
lock
inc
or
cwtl
push
adc
mov
outsl
fsubp
daa
clc
sub
jle
mov
rorb
inc
mov
or
fdivs
jo
les
mov
movsb
sub
dec
shl
add
adc
push
dec
ljmp
mov
or
push
cmpsl
jge
and
cwtl
cmp
scas
push
cmp
inc
ja
mov
sub
int3
cld
jmp
dec
stos
test
sub
decl
lcall
lods
nop
ss
fisubl
mov
cld
repnz
pop
das
adcl
rcll
fiadds
mov
sub
xchg
dec
and
inc
pusha
and
cld
insb
xorl
cmp
lds
add
insb
js
dec
enter
daa
lcall
mov
scas
lods
dec
sbb
cmp
fucomi
sbb
stc
fldl
mov
stos
xorb
lret
sub
movsb
ret
mov
call
add
in
dec
cld
movsb
add
jl
push
xor
test
lods
jmp
test
sbbb
xchg
enter
repnz
mov
int3
inc
dec
sub
lea
fsubl
mov
int3
int3
adcb
loopne
ds
pop
loope
fwait
and
rcrl
dec
rcr
or
fbld
jo
cmp
mov
sub
xchg
and
push
insl
fmulp
sbb
loopne
inc
inc
std
test
adcl
int
nop
and
inc
mov
inc
and
dec
mov
rorb
insl
xor
mov
test
ja
add
add
insb
pop
jle
xor
daa
jb
adc
adc
shlb
xor
sti
push
sbb
adc
pop
mov
cld
sti
out
sarl
mov
mov
jecxz
ss
adc
push
jmp
inc
xchg
inc
xor
bound
clc
and
into
ficompl
es
sahf
and
and
xchg
out
fiadds
icebp
test
repnz
mul
xchg
push
mov
fadds
sub
clc
sbbl
incb
or
sbb
idivb
jle
push
pop
rcl
jecxz
arpl
pop
orl
cmp
push
xor
fimuls
stos
lahf
out
shll
int
sbb
jmp
cmp
mov
jl
lods
andb
int3
and
fstl
scas
cmp
decl
jecxz
je
mov
mov
insl
ja
bnd
adc
and
js
popa
xchg
insb
jne
adc
mov
fcmovb
jp
lock
jg
icebp
xor
lds
mov
adc
scas
cmpsl
stos
mov
inc
and
das
inc
xchg
dec
add
hlt
mov
jne
xor
inc
pop
dec
ss
add
ficoml
adc
cmpb
mov
les
adc
and
add
dec
movsb
and
insl
lods
pop
xchg
ficoms
inc
dec
loopne
ljmp
mov
inc
adc
xor
add
mov
sbb
adc
leave
aad
cs
and
enter
cs
loope
push
push
pop
sub
or
pop
xlat
shl
aaa
add
and
sub
push
mov
fstpt
push
pop
out
icebp
and
stos
movsb
lret
push
sub
add
addb
lret
test
inc
add
popf
loope
adc
pop
jge
hlt
lock
shll
sub
repnz
jmp
mov
stos
mov
sub
loop
es
inc
fdivr
int
pushf
aas
add
sbb
xchg
and
jbe
aaa
jmp
testl
ret
or
ss
jne
cld
add
lret
dec
add
fldenv
sub
aaa
sbb
cmp
or
push
sub
xchg
nop
test
inc
cmpl
xchg
out
pop
fistpll
mov
iret
outsb
inc
xorl
iret
aad
pop
push
sbb
rep
lcall
or
lret
jmp
pop
mov
and
adc
rcrb
cmp
lea
mov
cmp
daa
sahf
mov
sub
filds
pop
and
leave
push
xor
and
jbe
fnstcw
stos
inc
sub
aaa
outsl
imul
push
push
add
xchg
sbb
fmulp
dec
pop
mov
ljmp
push
sub
xchg
and
add
andl
add
outsl
inc
push
ljmp
cmp
sub
cmp
sbbl
leave
dec
mov
adc
add
fistps
lods
lods
push
sbb
and
adc
sbb
inc
pop
mov
jl
pop
jns
dec
stos
ja
fcomps
mov
sub
push
xor
enter
insl
push
mov
call
push
rcrl
nop
sbb
cli
ja
mov
jmp
or
cmp
out
in
jge
pop
inc
subb
std
or
cmpl
icebp
fmuls
push
or
adc
out
jg
outsb
sbb
xchg
mov
sub
mov
pop
cmpsb
mov
xchg
mov
idivb
xor
lds
sub
ss
jle
dec
jg
pushf
clc
fs
icebp
cs
movsl
sub
jae
add
subb
dec
jbe
or
push
shr
nop
addl
xor
in
leave
mulps
push
push
inc
maskmovq
testl
mov
sub
fcmovu
dec
out
test
ds
cwtl
cmpsl
and
dec
and
popa
add
xchg
jbe
loopne
cmpl
pop
testb
insl
test
nop
push
jb
mov
scas
cltd
gs
sub
test
divb
jle
sub
sub
addr16
pop
sarl
and
inc
seto
div
xchg
add
and
in
pop
xchg
lods
sti
jae
es
mov
pop
aam
jno
or
cmc
mov
sub
test
cmpb
addr16
and
sbb
imul
push
and
mov
cmp
adc
lds
cwtl
mov
lods
sub
sub
xor
aas
addr16
and
ds
jecxz
or
dec
cmp
add
ror
sub
sbb
stc
xlat
push
and
xor
xlat
lahf
int3
xor
shlb
popf
sti
scas
mov
daa
loop
iret
add
inc
pop
sub
pop
pop
sbb
sbb
hlt
dec
adc
inc
arpl
inc
and
xor
and
adc
cmp
div
lock
xor
dec
adc
icebp
fdiv
sub
pop
repz
mov
repz
out
pusha
and
out
xor
or
push
loop
mov
inc
jl
sti
into
aam
outsl
inc
sbb
daa
fisubs
cmp
mov
lret
inc
ss
push
or
data16
mov
mov
pushf
mov
sub
dec
mov
imul
lods
es
pop
xchg
notl
push
pop
ja
repz
notl
ja
mov
fcmovb
test
adc
sub
scas
fwait
push
add
out
jecxz
jge
cmp
sub
xlat
rcll
fcomip
movsl
pop
ds
cmp
pop
sbb
test
xchg
sarb
loop
cwtl
ficomps
test
iret
bound
bound
or
mov
lret
pop
lock
stos
mov
pop
xchg
shll
in
out
lret
add
sbb
lods
sub
dec
pop
xlat
jp
stos
mov
insl
push
push
js
push
sub
cmp
rcll
test
dec
sti
or
test
push
mov
aam
inc
pusha
push
dec
ljmp
popf
mov
mov
or
cmc
lret
or
sub
add
repnz
mov
std
xchg
xchg
xchg
inc
das
and
mov
xlat
inc
cwtl
mov
jl
adc
mov
sub
insb
adc
out
xor
popf
pop
jl
cli
push
xor
fidivs
pop
pop
test
inc
jge
dec
arpl
std
xor
jae
scas
inc
mov
xchg
xor
popa
icebp
testb
loope
push
dec
pop
outsb
dec
setp
in
jnp
add
std
ret
sbb
mov
fimull
insl
xchg
jo
movsl
dec
aas
aas
in
jno
out
arpl
scas
leave
push
sub
mov
cmc
xor
push
into
hlt
mov
fstpl
push
mov
push
inc
xor
xchg
seta
arpl
cltd
xor
sti
or
jp
subl
sahf
test
aaa
jle
mov
test
inc
mov
mov
pop
rorl
pushf
out
dec
push
push
pop
xor
popa
sub
inc
hlt
mov
xor
xor
and
daa
sahf
call
out
jo
out
imul
xchg
adc
popl
into
fidivs
in
xor
lods
daa
xor
fnsave
insl
sub
jle
ret
js
inc
sbb
mov
mov
add
jg
mov
lods
daa
cmpl
scas
fidivl
into
inc
loopne
jne
push
sbb
mov
in
cmp
add
xchg
xchg
mov
pop
xlat
lret
push
jp
dec
xchg
push
scas
fdivrl
andl
nop
imul
cmpsl
pop
push
inc
mov
mov
call
xor
daa
jbe
dec
es
insb
push
sti
xor
xchg
mov
shr
cmpb
icebp
pop
jb
pop
adc
add
push
test
rcl
add
pop
mov
and
outsb
stc
iret
pop
pop
leave
adc
add
cmp
cmp
stc
xchg
mov
stos
xchg
xchg
lahf
das
popf
icebp
sbb
mov
cmpsl
xchg
jmp
xor
rclb
jne
xchg
mov
push
rcll
loope
out
mov
shrl
insl
adc
mov
adc
cmp
cli
cmp
pushl
rorb
push
sbb
push
clc
adc
mov
or
add
scas
push
inc
pop
test
ljmp
cs
sbb
xchg
in
inc
rcrl
adc
cli
sub
cmp
sbb
mov
mov
pop
int3
jmp
sbb
jg
out
faddl
arpl
jle
jge
cmp
jae
and
xor
mov
cltd
jp
sbb
cwtl
das
or
aad
adc
mov
dec
xchg
outsb
sub
mov
push
adc
sbbl
mov
inc
mov
or
and
sti
ss
daa
push
xor
push
mov
rcll
movsb
and
mov
addr16
and
or
jecxz
pop
push
xchg
mov
or
pop
call
mov
nop
dec
mov
out
sbb
dec
std
mov
add
xorb
stos
cmpsb
insl
mov
or
sub
fcoms
jnp
add
ljmp
mov
inc
leave
insl
imul
xor
xchg
hlt
jo
push
mov
mov
xchg
cmpsb
std
rcr
dec
icebp
cmp
aad
lret
mov
bound
or
out
push
dec
fimull
jecxz
jb
ret
inc
and
push
rcrl
inc
xchg
jmp
or
ja
lods
fistpll
xor
out
dec
mov
or
nop
or
ficoms
xchg
cmp
jnp
dec
add
sbb
lcall
push
cmpsl
sub
cmpsb
pop
outsb
loop
mov
mov
popa
xor
mov
and
pusha
je
cltd
mov
xchg
jg
mov
jl
or
or
daa
and
xchg
fisttpll
aaa
out
lcall
stos
push
xchg
mov
fisttpl
shl
jp
jae
ret
nop
cmpsb
pop
dec
inc
pop
mov
inc
gs
outsl
into
adc
outsl
xor
sysexit
jno
mov
jl
cwtl
outsl
hlt
lret
mov
jge
jecxz
xor
xchg
outsl
inc
pop
rcrb
shll
cs
add
dec
pusha
and
bound
lea
jne
dec
sub
int
adc
jl
jecxz
pushf
and
iret
adc
add
gs
in
leave
movsl
xor
adc
push
lahf
pop
xor
fs
icebp
sarl
sub
cmpb
adc
adc
sahf
cwtl
push
or
sub
push
inc
mov
mov
push
pop
hlt
xchg
movsl
inc
pop
xchg
xchg
mov
data16
sbb
lret
cmp
lret
ds
cmpb
ficoms
pushf
xchg
movl
inc
xchg
add
adc
jnp
je
xchg
mov
jno
mov
push
mov
jle
cmp
push
and
dec
cltd
mov
and
or
pop
jbe
jg
clc
test
mov
jg
cld
pop
nop
dec
stos
fstps
bound
stos
aas
lods
add
into
xchg
out
inc
push
dec
dec
ror
ss
fsin
in
mov
fstpl
sub
jp
insl
ficoml
jb
push
lods
jg
lods
sbb
fisubrs
adc
push
pushf
push
std
fcoms
push
in
mov
clc
in
push
cltd
xor
pop
and
cmpsb
jb
mov
loopne
cmpsl
dec
fildll
dec
sbb
mov
add
sar
mov
cmp
adc
fistpl
mov
and
mov
dec
push
mov
cmp
add
dec
pop
add
inc
xchg
xchg
shr
push
and
ret
lds
adcb
pusha
in
dec
adc
cmpsb
fisubs
enter
dec
addr16
mov
iret
mov
jl
fiadds
ret
xor
jg
imul
inc
dec
cmp
in
pop
lods
cwtl
pop
nop
ret
shl
ljmp
cmp
int
or
aaa
cmpsb
adc
enter
pushf
aad
jo
sbb
adc
add
call
inc
aam
mov
xchg
mov
sbb
dec
jp
or
or
sub
lret
sub
dec
push
dec
out
shr
ds
aaa
add
xorl
cmp
pop
aaa
or
mov
lock
nop
mov
cmp
lret
lds
jle
xor
cmp
fxch
dec
mov
pop
lret
pushf
aaa
cmp
das
mov
ljmp
xchg
test
cmp
push
leave
inc
inc
roll
jl
xchg
test
es
push
pop
idivl
ljmp
cmp
jo
es
lock
notb
xchg
nop
sbb
add
nop
shlb
int3
push
cltd
pushf
xchg
push
and
scas
popf
adc
stc
mov
pushf
adc
xchg
stos
xlat
in
in
and
mov
out
loopne,pt
in
fstps
clc
repz
cli
jg
dec
loope
imul
filds
fisubl
out
jle
push
rcrb
push
pop
mov
repz
jge
mov
scas
jle
idivb
push
je
fnstenv
loopne
outsl
mov
mov
fbld
adc
cmp
pop
test
inc
iret
xor
daa
pusha
lcall
cs
sahf
shlb
sub
pop
mov
xor
movsb
and
ret
push
fcomip
fldl
mov
add
dec
push
test
into
pop
sar
clc
nop
add
push
js
jmp
loop
inc
push
data16
sahf
cld
movsb
fwait
hlt
fisubs
mov
adcb
or
loopne
lcall
cltd
or
adc
test
sti
jae
sub
xchg
jae
aaa
std
add
mov
ret
aas
rolb
pop
push
mov
es
inc
fnstenv
push
mov
andb
xchg
mov
outsl
xor
xor
sbb
mov
xchg
mov
adcb
sbb
jne
mov
add
aaa
cmp
mov
jg
add
loope
movsl
adc
inc
adc
push
xchg
jnp
fcomip
jo
push
pop
lods
pop
je
les
and
jnp
dec
push
or
and
add
xchg
inc
ja
pop
xchg
scas
cmp
jne
ds
add
cmp
ror
cli
sbb
gs
shlb
push
sub
jge
cmc
inc
xor
notl
jnp
push
jge
call
cmpsl
lea
push
fisttps
push
jno
xchg
xor
push
js
imul
pop
sub
inc
out
int3
add
ret
adc
pop
fwait
adc
test
dec
movb
shlb
mov
jle
jge
cmp
mov
cmc
push
dec
sbbb
and
sub
pop
fstps
sub
xor
xchg
mov
sbb
sub
ljmp
lcall
mov
out
cld
repz
mov
and
push
pushf
lret
cmpsl
jmp
js
cmp
inc
out
mov
and
mov
inc
insl
fwait
add
les
jb
push
inc
push
inc
sub
into
lcall
ret
jb
nop/reserved
adc
rcr
cld
lcall
inc
inc
js
fistpll
sbb
xchg
cmpsb
popa
movsb
fsts
fwait
jns
inc
mov
and
add
sub
inc
test
xchg
clc
mov
mov
loop
out
cwtl
cmp
jl
ljmp
ds
adc
inc
mov
shl
ret
pop
adcb
push
and
rorl
divb
fldenv
mov
push
dec
lea
insl
das
int3
mov
mov
pusha
outsb
pop
pop
pop
jo
mov
push
icebp
dec
dec
adc
xor
inc
sarl
mov
xchg
inc
mov
int3
xor
test
jo
push
repz
push
mov
xor
ret
sbb
repz
roll
sub
movsl
jge
aam
dec
xchg
mov
mov
dec
bound
fwait
jo
or
and
or
pop
arpl
xchg
push
or
lcall
pop
lods
cmc
push
xchg
dec
or
lods
aas
sti
push
sahf
xchg
das
pop
imul
push
mov
clc
jp
xchg
push
sub
neg
lahf
imul
xchg
idiv
pop
or
cmp
cwtl
cli
inc
stc
pusha
lret
jecxz
sahf
test
push
outsb
addr16
sub
mov
pop
mov
arpl
ss
mov
ret
sub
cmp
sarl
add
nop
pop
out
nop
adc
es
lds
xchg
and
imul
push
pop
data16
mov
pop
lea
inc
xor
inc
and
jnp
shlb
fnstenv
ljmp
sub
pop
scas
jg
add
cmp
aam
out
mov
gs
push
fsubrl
jnp
mov
xor
sbb
sbb
mulb
cwtl
mov
push
daa
jge
mov
push
shll
fsub
lret
aas
cmp
pop
in
push
ja
fcmove
push
xchg
pop
movsb
out
icebp
jb
adc
mov
daa
outsl
mov
lahf
mov
mov
test
jle
inc
jne
jle
mov
fdivrs
int
lea
sub
movsb
test
pushf
and
jne
or
cmpsb
mov
cli
jg
shrl
icebp
add
imul
nop
adc
pop
pop
xchg
mov
xor
clc
and
push
ds
dec
andb
je
pop
pop
call
jbe
xchg
xchg
movb
dec
lret
jbe
add
dec
sbb
xchg
sbb
jle
fnsave
xchg
or
pop
sbbl
xor
stos
dec
xchg
daa
sbb
dec
repnz
cs
icebp
or
dec
adc
xor
ja,pt
cmpsl
mov
inc
or
mov
add
xlat
sahf
mov
out
or
in
fidivrs
loop
icebp
sbbb
cmpsb
test
xchg
push
adc
iret
pushf
je
into
hlt
cmp
subb
mov
arpl
xchg
std
dec
ret
pop
dec
mov
jae
jb
or
pop
jecxz
inc
dec
mov
std
dec
lcall
out
fnstsw
test
add
mov
pusha
iret
mov
jo
insl
xchg
xchg
movsb
bnd
sub
inc
out
dec
out
inc
sti
testb
mov
dec
mov
xor
lods
sbb
outsb
dec
lods
sahf
or
pop
mov
andb
loopne
in
mov
xchg
push
or
clc
and
mov
pop
inc
sub
ret
xor
sbb
out
or
mov
and
fwait
and
outsb
pop
cmpsb
insb
movsb
xchg
or
sub
mov
cmp
pop
lret
push
add
sbb
xchg
or
in
fcom
xchg
idivl
xor
jge
or
shll
jmp
leave
movl
mov
into
fwait
in
push
sub
xchg
dec
pushf
or
dec
lret
negb
push
cli
ljmp
jmp
ljmp
movsb
ss
pop
mov
cwtl
out
imul
dec
cmp
in
mul
pop
mov
insl
jge
xchg
jns
mov
cltd
nop
insl
add
mov
movb
sub
stc
arpl
lds
sub
mov
dec
add
in
into
ljmp
cmp
movb
jb
lret
fidivs
jge
ret
decb
fisubrl
ja
adc
xchg
jle
aaa
ret
inc
std
xchg
shlb
in
rcll
push
outsb
add
rcrb
cli
shll
out
call
pushf
push
dec
loope
pop
imul
push
in
or
xchg
cmp
cld
add
add
leave
pop
push
arpl
push
mov
push
push
xchg
int3
add
mov
inc
es
xor
and
inc
push
outsl
xor
js
xor
mov
iret
xchg
mov
jl
testb
mov
std
push
jle
mov
inc
mov
gs
sahf
je
mov
stos
jno
sahf
mov
shll
add
inc
cmp
dec
jl
in
or
jmp
jp
mov
sub
mov
dec
cmpsb
add
dec
subb
pop
add
add
pop
xor
shrb
ds
or
fsubrs
div
adc
movsb
fists
mov
scas
jle
roll
or
mov
or
lret
test
mov
mov
mov
pop
test
pop
jbe
inc
hlt
push
xor
sbb
pop
push
jg
fsubrl
mov
shll
adc
mov
sbb
jg
push
stos
aas
dec
mov
pusha
ja
dec
or
addb
outsb
or
sbb
fwait
push
cmp
mov
das
adc
test
sti
pusha
fdivl
jecxz
in
xchg
xlat
leave
test
cmp
stos
adc
inc
into
dec
lock
in
xchg
sahf
inc
cltd
mov
ror
in
lods
xor
hlt
dec
adc
clc
int3
ret
enter
xchg
jle
xchg
jecxz
and
cli
insb
cli
mov
or
jecxz
xchg
fwait
pop
mov
or
nop
jnp
ljmp
xchg
xchg
and
jo
pop
jne
jbe
fxch
psubq
rcl
ret
dec
cltd
jno
fisubs
out
jg
and
jno
xchg
or
jmp
out
filds
bound
jb
mov
xor
inc
push
cmpb
xchg
dec
fwait
or
cltd
cmp
addl
pushf
lock
mov
jno
jecxz
inc
daa
fdivrs
stos
dec
out
lock
add
cwtl
int
jns
scas
dec
or
and
push
push
les
mov
popf
mov
push
mov
fildll
sub
clc
adc
fldln2
sub
sbb
xchg
or
mov
jno
loopne
arpl
mov
rcrl
mov
and
shrb
imul
or
insb
jp
xchg
and
pop
sub
mov
iret
push
push
das
xlat
pop
sarw
jne
pop
sub
lock
xor
insb
call
rcrb
pop
mov
sbb
divl
adc
pop
xor
int3
push
add
sbb
mov
pop
mov
add
inc
jl
jl
clc
scas
cmp
mov
aas
push
sarb
lahf
mov
inc
pop
mov
outsb
xchg
lods
fadds
lahf
or
clc
mov
sub
not
insl
les
shl
add
push
pop
pop
mov
icebp
negb
testb
orb
dec
mov
mov
dec
adc
pop
es
mov
int3
divb
popf
or
outsb
xchg
jae
and
sub
adc
jnp
mov
decl
jae
or
cltd
cltd
rclb
inc
pop
inc
leave
and
sti
sub
clc
ret
cs
fdivrl
push
jecxz
rcrb
dec
fimuls
lods
xchg
add
mov
or
movsl
push
in
pusha
adc
add
lahf
and
stos
sub
cmpl
adcb
inc
into
dec
cmp
jae
jns
in
xchg
mov
and
movb
mov
and
mov
sahf
sub
pop
fistps
jmp
fiaddl
lock
rorl
dec
lret
inc
inc
orl
aaa
mov
cmp
dec
lret
js
movsb
cli
pusha
dec
fmulp
js
popf
and
std
inc
cli
cmp
sbb
fidivs
stc
insb
aam
fldenv
fiaddl
and
xor
mov
fisubrs
push
das
ss
jmp
jb
lock
jmp
scas
inc
push
pop
inc
icebp
lods
sub
jne
outsl
pop
fcompl
xlat
inc
xor
and
cld
push
lods
mov
cmpsb
iret
dec
mov
mov
lock
sahf
hlt
lods
movsb
cmp
lcall
addr16
sub
sub
out
push
icebp
add
mov
das
mov
in
push
dec
pop
mov
jmp
ret
aam
adcl
ja
enter
mov
les
sub
jg
mov
fstp
lds
or
or
repz
add
fists
cmc
psubsw
rolb
push
ret
sbb
jnp
sub
mov
fisttps
dec
stc
lret
lods
mov
cmp
dec
addb
or
mov
mov
jle
icebp
imul
loopne
push
mov
and
sti
inc
jns
aaa
inc
ds
in
lcall
inc
mov
int
inc
xor
cs
daa
mul
int3
and
adc
add
jns
movsb
ret
shll
jg
fsubl
adc
les
inc
sbb
je
jle
dec
insb
cmp
fstpl
push
jae
or
cmc
js
daa
cmp
stos
adc
testb
add
or
xlat
ja
dec
jmp
mov
xor
in
xadd
dec
jne
clc
push
insl
or
inc
std
jp
add
repz
test
cmp
iret
mov
xor
fs
ja
xchg
andb
jns
movsl
jmp
or
and
push
adc
add
mov
in
mov
sbb
sti
add
push
adc
fmul
and
fcompl
cmp
fcmovu
sub
pop
and
cmp
push
add
mov
aam
or
loope
jo
negb
mov
aad
jp
pop
mov
push
repnz
jb
dec
jne
jne
ljmp
sub
movsb
scas
or
scas
mov
adc
xchg
loope
sub
cmpsl
cmpsl
es
mov
mov
mov
push
outsb
and
xchg
add
dec
inc
add
inc
inc
pop
imul
in
mov
jge
and
xlat
jns
dec
rol
lock
dec
pop
adc
adc
jl
and
ficoms
xchg
jno
jg
cli
adc
ret
imul
repz
movsb
faddp
sbb
dec
loope
rcr
sub
sub
xor
cmp
pop
roll
mov
imulb
or
xorl
cmp
and
call
testl
xchg
imul
mov
out
iret
jmp
dec
inc
bnd
cmp
aaa
add
jmp
cmc
repz
in
sahf
inc
loop
repnz
test
pop
sti
mov
mov
push
into
xchg
push
fcoms
sub
rcr
stc
mov
xchg
arpl
mov
push
mov
mov
mov
dec
push
daa
xor
mov
inc
dec
mov
jmp
xchg
lret
hlt
xor
loop
icebp
ret
mov
jae
ss
cmpsb
sbb
fwait
or
fstpl
stos
inc
push
lods
xchg
out
rorb
sti
inc
mov
jl
fsubrp
dec
int
fldt
mov
leave
sub
les
jl
mov
sbb
xchg
add
ret
push
add
jno
xchg
pop
pop
fildll
ret
add
jp
ret
lods
push
push
sub
sbb
xchg
pop
jg
sbb
dec
add
mov
mov
pop
cmp
idiv
rcl
bnd
in
push
pop
aam
icebp
stos
xor
pushl
sbb
pop
mov
xchg
rorl
push
pop
add
fisubrl
push
out
and
xor
push
jp
jbe
or
mov
popa
test
inc
push
icebp
push
bound
pop
add
repnz
adc
cmp
cmp
xchg
xchg
xor
outsl
push
testb
inc
pop
test
outsl
dec
aas
pushf
es
hlt
decl
pop
int
inc
xchg
dec
sbb
inc
push
test
dec
inc
dec
pop
cmp
sub
pop
stos
xor
adc
xor
ror
adc
or
repz
adc
and
in
movsl
xor
xlat
rorb
insl
insb
xchg
nop
ds
mov
dec
xchg
dec
mov
nop
stos
inc
jnp
ret
xchg
cli
lcall
lock
cld
lods
adc
aad
jbe
xor
mov
inc
out
in
pop
jg
test
add
out
adc
int3
imul
pop
push
mov
test
xlat
xchg
or
arpl
int3
jmp
out
je
add
dec
lret
dec
jb
inc
neg
aaa
shll
mov
fsub
mov
clc
mov
inc
in
jge,pn
popf
jno
add
dec
fcmove
or
jp
arpl
pop
sbb
jno
push
mov
mov
in
rorl
add
les
addr16
and
pop
push
int3
cld
cld
mov
fstp
fiaddl
popf
scas
leave
mov
out
es
xor
cmc
cmp
mov
pop
loope
inc
xchg
mov
and
pop
jg
orl
aaa
imul
jne
nop
mov
xchg
insl
les
sub
in
roll
push
or
mov
or
in
js
shrl
scas
test
bnd
cltd
cld
inc
cwtl
shll
ret
stc
sti
or
lret
imul
out
ror
mov
adc
cmp
cltd
pop
cltd
hlt
jns
adc
loop
test
sti
out
mov
sbb
repnz
mov
pop
sbb
pop
cmc
push
xchg
cmpsb
cmp
and
push
call
xor
mov
cmp
bound
ds
icebp
sbb
push
int
pop
sbb
mov
aad
sti
xchg
pop
pop
mov
scas
movsb
xchg
imul
jecxz
ret
scas
ljmp
pop
cmp
bound
inc
adc
sarb
sub
int3
mov
icebp
pop
mov
jnp
or
mov
ffreep
lret
push
inc
cmpsb
repnz
inc
cltd
sub
xchg
out
ss
jnp
adc
insl
scas
or
dec
mov
sub
mov
adc
cmp
pop
testb
shl
mov
cmp
imul
xlat
sbbb
xor
mov
ds
std
rclb
ljmp
fcmovbe
dec
cmpsb
or
sahf
mov
push
or
loopne
cmp
notb
int3
xchg
stos
push
xlat
pop
jmp
ret
imul
pushf
mov
bswap
dec
sbb
insl
add
fildll
cmp
add
xor
lock
cmpsb
inc
mov
xchg
cli
xor
push
jecxz
test
xchg
enter
push
cwtl
add
int3
sbb
xor
jne
lret
cmc
gs
ror
pop
xchg
out
xor
jle
sbb
and
dec
xor
loopne
adc
lods
aas
loopne
int3
sbb
movsb
xlat
hlt
std
push
loop
xchg
sbb
xchg
lds
mov
or
iret
notb
jae
iret
add
ja
movsb
sbb
inc
cmp
testb
sbb
xchg
cmp
xchg
xor
in
or
inc
lret
pop
inc
mov
les
mov
leave
mov
sbb
orb
jnp
cmpl
leave
adc
fiadds
lahf
cwtl
out
cmp
dec
adc
stc
pop
int
mov
stc
test
inc
xorl
push
add
push
loopne
cmpl
daa
fldenv
adcl
cwtl
int
cmc
mov
bound
adc
sbb
xchg
sbb
cld
add
in
stos
jle
push
sahf
mov
inc
xorb
push
sti
and
sub
pop
movups
sub
enter
lock
add
pop
movb
inc
cmpl
mov
mov
mov
lret
or
lret
dec
pop
and
lods
sbb
jle
lret
jo
test
or
cmp
ja
pop
push
shlb
pop
inc
pop
cmp
inc
and
push
in
jmp
and
and
pop
stos
dec
xor
pop
sbbb
sarb
movb
scas
jno
in
movsl
push
adc
sahf
adc
xlat
outsl
sub
fwait
rolb
adc
aas
dec
test
divb
sub
cli
or
pushf
aad
movb
es
shl
xchg
lock
mov
inc
in
nop
cs
aaa
mov
jno
sbb
addl
mov
repz
lret
jnp
shlb
out
ljmp
adc
hlt
sub
into
lock
test
rcr
lea
ret
push
or
adc
xchg
push
cli
mov
test
aaa
popa
cmp
call
inc
and
mov
negl
cmp
bound
incl
std
daa
push
into
push
int
repz
adc
in
pushf
inc
and
mov
gs
mov
jno
cmpsb
jle
cmp
and
xor
aas
fdivl
incl
pop
add
lods
xchg
insb
pop
leave
push
mov
sub
rcl
lock
inc
int3
adc
in
xchg
lock
mov
test
enter
jbe
out
jo
bnd
vmovaps
nop
mov
lret
shll
iret
sbb
lods
push
cmpsb
ret
xchg
jns
dec
sub
jns
ficoml
mov
lcall
jno
adc
andb
xchg
addr16
idivl
test
lret
push
pop
lcall
sbb
dec
mov
push
cld
dec
xor
sbb
mov
cmc
push
cmpl
cmp
dec
and
mov
sti
and
xchg
and
nop
add
and
or
or
xchg
pop
mov
es
mov
icebp
cwtl
dec
or
or
stos
ja
and
xchg
sti
pop
add
and
neg
popa
std
add
rcrl
cs
roll
jns
sub
mov
ds
out
jg
dec
mov
aad
xchg
sub
or
xchg
fisttpll
cmc
sbb
dec
iret
xchg
or
xor
xchg
in
outsb
xchg
inc
jp
leave
aaa
cmpl
loop
mov
adc
xchg
xchg
sbb
pop
sarl
scas
mov
jo
je
dec
fisubrs
mov
ret
fldl
inc
loop
add
sti
test
pop
or
fnsave
fndisi(8087
jg
jae
and
fmull
test
fbld
inc
in
out
or
dec
mov
pop
mov
mov
mov
in
cs
mov
adc
add
sbb
add
fiadds
test
fcmovbe
js
sbb
mov
mov
pop
or
dec
dec
outsl
push
jbe
push
fiadds
out
icebp
fisubl
mov
dec
sbb
mov
loopne
loopne
or
dec
xor
pushf
js
lock
inc
inc
pop
daa
aad
jnp
or
ret
nop
jge
out
dec
push
pop
daa
or
add
sahf
pop
xchg
or
nop
mov
dec
out
ljmp
inc
stos
inc
mov
lock
mov
push
cli
sub
sbb
and
das
loope
das
push
and
rol
pop
push
stos
add
or
call
jno
or
mov
lret
sub
aaa
scas
mov
and
mov
orb
repz
outsl
and
xchg
fwait
adc
inc
repnz
dec
popf
fildll
sub
fnstsw
adc
xor
dec
movsl
push
test
push
jl
and
cmp
ss
add
dec
inc
dec
ret
sahf
xchg
jecxz
add
lret
clc
xchg
jg
pop
stc
mov
lea
int3
fwait
push
fisubrs
xchg
push
loope
inc
shrb
and
push
push
jecxz,pt
rorb
push
negb
in
push
loope
jne
cli
mov
cmp
sub
jae
repnz
pop
addb
cmp
mov
fisubrl
fsubrs
mov
xchg
orl
ja
movsl
test
into
daa
cmpsb
pop
mov
cmp
mov
movsb
add
aas
cmp
ljmp
and
add
outsb
mov
cmp
add
push
cmp
into
repz
shll
dec
outsb
fisttps
mov
pusha
jecxz
mov
test
dec
ljmp
push
pusha
sub
adc
pop
adc
lahf
out
hlt
incl
push
pop
inc
rorb
cltd
je
xchg
nop
loopne
jae
or
mov
in
mov
fidivs
sti
cld
cmp
jae
jp
leave
cmpsb
jecxz
xchg
mov
mov
sti
pop
cltd
pop
es
call
notb
push
das
fimull
xlat
inc
xor
int
fnstsw
cld
cmpsb
imul
int3
lahf
addb
jecxz
les
icebp
test
addl
cmpl
jge
inc
data16
push
dec
rcll
push
add
out
mov
push
add
mov
into
lods
sub
popf
inc
dec
inc
mov
inc
dec
ficoms
sub
clc
stos
lock
sub
mov
leave
ret
aam
xchg
inc
test
in
jmp
pop
das
ljmp
mov
icebp
and
inc
popa
shr
mov
sub
xorl
movl
adc
jl
sub
inc
and
les
sbb
jne
dec
add
inc
pop
push
xchg
xchg
imul
les
dec
fistps
sbb
aaa
push
leave
push
in
mov
mov
cli
pushf
jp
ror
popf
test
and
andl
imul
cmp
test
je
lahf
fldcw
sub
xor
dec
inc
dec
mull
outsl
or
in
test
add
or
inc
js
aas
or
aam
std
stos
sbb
push
cmp
test
rclb
adcb
jmp
mov
and
jg
in
adc
jno
movsl
adc
shll
jmp
insb
test
pop
ret
mov
xchg
inc
insl
pop
sbb
push
lahf
push
lds
jmp
and
or
sub
stos
mov
dec
lock
insb
add
int3
or
lea
jl
iret
andl
dec
sahf
inc
fcomp
mov
cmp
fwait
mov
sbb
sbb
xchg
ss
and
cli
xchg
aas
cmpsl
cmp
shrb
push
mov
mov
dec
mov
insl
sbb
and
inc
loope
cmc
sub
pusha
add
fcmovb
cmpsl
inc
jl
test
ljmp
hlt
xor
cltd
rclb
pop
jae
cmp
iret
pop
xchg
imul
xchg
push
or
icebp
dec
int3
inc
test
shll
mov
js
push
flds
scas
sti
scas
mov
out
js
inc
or
cmp
ljmp
lcall
adc
jo
add
scas
inc
repz
adc
or
xlat
fld1
jp
int
loopne
push
fiadds
lret
add
push
icebp
dec
push
dec
cmp
mov
push
jmp
sarl
into
out
inc
outsl
cmp
das
inc
dec
add
jno
fnstcw
xor
push
add
sti
sub
sbb
xchg
xor
xchg
sbb
push
in
sub
jno,pt
jmp
cmp
aam
pop
mov
es
mov
out
push
pop
mulb
sub
sbb
add
aas
adc
aam
test
cwtl
add
push
adc
xor
popf
or
aaa
mov
cli
insb
inc
mulb
push
jno
hlt
movl
cmc
cmp
or
clc
lret
cltd
scas
sbb
ljmp
test
jns
cmp
aam
mov
sar
mov
mov
or
add
hlt
cmp
jnp
pop
addr16
push
stc
cmp
push
inc
sub
sti
xchg
and
jae
hlt
push
add
sahf
and
mov
add
stos
or
or
sbb
cld
loop
aam
movsb
andb
fildll
aad
out
mov
int
jl
out
mov
sbbb
pop
out
aad
call
ret
cltd
fcmovb
les
jecxz
repz
fcmovnb
fisubrl
dec
stos
scas
popa
mov
cmp
ja
mov
fwait
clc
dec
pop
sub
in
cmp
cmp
jnp
fwait
mov
pop
adc
ss
out
outsb
mov
add
aam
jg
pop
js
add
js
and
ss
mov
js
sub
pop
inc
lods
mov
lret
dec
test
aaa
mov
ljmp
mov
ret
jmp
lods
mov
sahf
xchg
aam
mov
lea
test
pop
test
or
cmp
xor
lods
dec
xchg
xor
add
jo
add
jns
push
mov
hlt
clc
pop
sbb
aaa
andl
push
not
sti
jbe
sub
jno
ljmp
aad
push
je
inc
shl
or
cld
add
mov
loope
sub
mov
out
and
repnz
fstpt
dec
dec
clc
pop
loop
aam
jl
jp
pop
lods
jmp
sub
ds
pop
or
mov
xor
ror
lcall
cmp
add
xchg
dec
hlt
dec
adc
testb
sub
nop
movsb
push
mov
pop
lea
sbb
mov
test
cmpsl
mov
cmpsl
lock
push
dec
dec
fcmovbe
loope
mov
in
add
jmp
iret
xor
repz
popf
test
xchg
mov
arpl
sub
xchg
mov
sbb
mov
dec
cmp
cmp
xor
sbb
fistpl
sub
lret
inc
hlt
push
cltd
call
jp
sbbl
mov
dec
rolb
inc
divb
out
in
jle
sub
fcmovnu
cmp
sub
jle
add
or
xor
pop
fdivp
leave
or
loop
inc
repz
clc
lret
mov
mov
call
dec
fldt
test
into
adc
lret
inc
out
sbb
cld
fbstp
lods
xchg
sbb
cmp
addr16
out
out
int3
jecxz
lock
imul
in
xchg
adc
std
pop
cli
cltd
jecxz
mov
in
loop
aaa
loopne
push
sahf
fistps
lock
loope
add
enter
test
mov
lret
sbb
repnz
notb
cmp
and
inc
push
jp
add
leave
fcomip
sub
out
cli
jnp
jno
or
out
sub
cmp
in
cwtl
jns
mov
adc
dec
nop
jns
or
xchg
pop
add
xor
mov
dec
inc
pop
addr16
jmp
and
sbb
in
xor
dec
ret
lods
fs
dec
xor
sbb
jno
cmpsb
inc
push
add
mov
jge
repz
push
xor
add
dec
dec
mov
jmp
cmp
loopne
adc
sub
js
ja
sub
cli
mov
cmp
push
repnz
dec
cmpb
das
ret
test
mov
fists
and
mov
push
mov
sbb
xchg
dec
ret
clc
mov
ret
js
aam
js
jl
lcall
roll
dec
push
js
rolb
push
test
jmp
andb
ficompl
sub
pop
mull
imul
push
test
fldcw
pop
sub
ljmp
int
dec
rol
loope
mov
stc
push
std
cli
xchg
pop
xor
xchg
ljmp
or
scas
pop
fidivrl
push
loope
mov
and
jp
adc
roll
in
subb
pop
mov
dec
call
hlt
cmp
stos
repz
adc
jmp
xor
and
xor
lods
xchg
pop
nop
into
aas
insb
inc
dec
mov
add
xchg
sub
aam
fs
cmp
std
adc
sub
rorl
fisttpl
movsl
sub
ret
fcmove
xor
and
adc
jnp
out
push
cmp
mov
xor
cmp
sbb
sub
lret
xchg
fbstp
sbbb
out
jno
xor
and
out
mov
pop
add
das
jbe
in
push
rcr
es
dec
test
hlt
xchg
lods
mov
in
testb
push
xchg
push
push
dec
and
icebp
fsubs
pop
xor
dec
xchg
mov
fucomi
dec
int3
les
div
push
clc
and
jp
xchg
or
jnp
adc
sbb
xchg
bound
jno
cmp
mov
rcr
inc
mov
push
cmp
push
lcall
adc
scas
xchg
cmc
and
popa
sarl
mov
mov
lret
sbb
pop
and
cmp
adc
sub
sti
mov
mov
cmp
enter
xchg
insb
aas
sbb
inc
push
add
sbb
sub
mov
lahf
cmp
addl
and
outsb
mov
sbb
rorb
shlb
inc
cs
out
jmp
xor
xchg
and
sub
cmc
clc
repz
or
lret
mov
cmp
test
roll
test
in
adc
stos
and
repz
jmp
repnz
sahf
jle
into
dec
add
sahf
test
imul
pop
daa
inc
rclb
mov
xchg
push
inc
cmp
push
scas
cmp
sub
jns
or
pop
xor
ret
pop
mov
pop
cwtl
sbb
pop
les
test
xchg
popf
idivl
fistpll
sbb
push
push
dec
data16
in
mov
sub
mov
mov
adcl
test
mov
sub
icebp
sub
sbb
sbbb
scas
sub
sbb
repz
lcall
xchg
aam
addr16
xchg
ss
sub
fwait
adcb
enter
fdivrl
xor
sub
dec
ret
add
leave
pop
loope
mov
jecxz
xchg
arpl
mov
in
push
jae
push
adc
jge
xor
inc
push
inc
test
insb
push
ret
std
outsl
xor
jbe
jmp
and
and
aas
adc
push
and
imul
jmp
scas
and
hlt
in
adc
pusha
rcll
fidivrs
pop
das
movsb
ds
ds
pop
aad
add
adcl
and
mov
jnp
aaa
xor
call
ja
cltd
out
out
mov
or
xor
cwtl
adc
iret
ds
pop
jg
push
data16
pop
sub
pop
add
shll
stos
scas
dec
or
pop
add
aam
data16
orl
test
pop
hlt
mov
push
pop
xor
icebp
mov
and
nop
push
cmpsb
jb
cmp
sub
sub
imul
dec
into
mov
pop
cmp
pop
addb
add
or
sbbb
xor
mov
xchg
mov
mov
clc
popa
sub
ljmp
dec
ret
inc
cmp
adc
leave
bound
sbb
loop
dec
or
pop
scas
repz
out
push
cs
adc
bswap
inc
outsl
test
ss
addb
jle
popa
into
loopne
or
push
pop
dec
dec
enter
fldt
and
aaa
push
mov
int3
mov
and
aaa
mov
adc
sahf
push
subb
roll
js
cmp
out
loopne
imul
jle
dec
cmp
ljmp
fsubrs
lods
ficomps
leave
shrl
bound
xor
popa
in
adc
sbb
lea
pmuludq
pop
test
and
mov
imul
fldt
xchg
dec
clc
adc
int3
jp
jne
pop
rcll
jecxz
lahf
jnp
popa
push
push
cmpsl
or
xchg
test
dec
lock
mov
popf
sub
sbb
cmpl
ss
incl
mov
jo
lods
mov
mov
sub
shr
sub
inc
add
cli
js
test
roll
fwait
aad
cmovge
cmp
leave
rorb
mov
sbb
gs
pop
adc
lret
adc
jns
xchg
xlat
movb
mov
sbb
xchg
jae
pop
fcoms
stos
jbe
fcmovnb
imul
cmp
mov
adc
sub
stos
push
ret
or
pop
inc
in
aas
push
push
push
mov
jne
data16
repnz
add
adc
js
or
aas
repz
dec
ror
lret
into
dec
cmpsl
jae
pop
jl
inc
rorl
cmp
in
push
je
xor
scas
mov
sub
lock
ss
gs
cld
jae
pusha
call
mull
xchg
out
neg
fstp
mov
lods
jl
adc
xor
aaa
movsl
cmp
mov
int
loopne
or
xchg
push
xchg
ret
shrb
daa
mov
iret
cmp
nop
mov
insl
cmpl
arpl
test
lahf
pop
in
sub
fsubrl
cmp
xchg
cmpsl
std
subl
in
mov
xchg
mov
sub
ja
mov
cmp
cli
lods
insb
sbb
in
fiadds
inc
or
add
std
mov
sbb
sbb
and
pop
cmp
add
xchg
loop
stos
adc
inc
jl
mov
aam
les
sbb
insb
cwtl
enter
insl
inc
in
pop
into
and
mov
and
mov
fwait
imul
ja
fimull
push
movb
jg
leave
dec
inc
cld
shrb
jecxz
pop
negb
pop
sbb
pusha
shrb
lret
xor
jno
mov
jb
push
mov
fstpl
pop
rcrb
stos
dec
pushl
push
mov
insb
sbb
cmp
sub
jp
sub
in
loope
mov
repnz
shrb
mov
mov
dec
out
mov
xor
mov
mov
enter
mov
inc
sti
cld
add
pop
push
lods
int3
adc
fwait
cmc
inc
sbb
xlat
call
mov
push
dec
je
subb
jne
dec
xor
subb
mov
xchg
in
push
mov
int3
lret
add
icebp
mov
std
mov
dec
insl
popf
notb
sbb
mov
out
inc
dec
mov
cmp
popa
push
sub
push
in
inc
sti
dec
test
loopne
loopne
or
loope
iret
repnz
mov
inc
dec
add
imul
sbb
ja
push
push
addl
sbb
jl
leave
inc
cwtl
add
lcall
jp
lea
xchg
jge
int3
cmp
and
cs
and
cmp
jg
and
inc
adc
cwtl
jmp
mov
or
jl
out
jg
and
notl
call
adc
jb
decb
inc
lods
lret
out
pop
lea
and
hlt
push
jae
cmp
data16
pop
jae
incl
pushf
jnp
mov
mov
and
ss
mov
mov
outsl
fndisi(8087
adc
daa
shl
lods
cli
in
sahf
rcr
adc
xchg
and
rcr
sbb
push
cmp
add
test
jns
enter
lods
jg
mov
addr16
aam
sub
dec
mov
mov
outsb
mov
int
mov
inc
mov
std
pop
adc
push
adc
sub
setp
loopne
jb
jmp
mov
fisubl
sarl
add
pop
jg
andl
fimuls
xlat
int3
fdivl
shrb
jmp
dec
xor
dec
mov
lret
cmp
data16
inc
xchg
jbe
cmp
push
dec
mov
repz
sti
test
out
pop
imul
lahf
dec
sti
dec
push
in
mov
push
movsb
xchg
loop
into
xchg
sti
movl
lods
jae
inc
loope
in
jmp
aaa
jnp
sbb
pop
dec
shlb
dec
daa
andl
push
clc
mov
push
fwait
orb
rolb
pop
cwtl
mov
leave
mov
pop
fldcw
xor
cmp
jp
loope
lods
xchg
das
ficoms
dec
hlt
mov
dec
ljmp
ficompl
loopne
lock
inc
clc
sbb
loopne
out
fists
sbb
jge
cmpsb
pop
pushf
cmp
pusha
cmpsl
popa
nop
or
xchg
mov
pushf
int3
fs
sbb
and
fsub
sub
dec
out
sub
jae
mov
inc
mov
jb
in
ficoms
cmpsb
loop
push
lods
mov
inc
sub
jecxz
jg
fs
dec
dec
pop
movsb
not
and
add
mov
add
jl
xlat
pop
xor
stos
mov
cld
xchg
mov
adc
hlt
mov
jnp
mov
pop
pop
stos
sarl
outsl
mov
cmpsl
sub
bound
adc
jne
repnz
js
cmp
shrb
jns
in
mov
cmpsl
cld
jbe
daa
sbb
push
jg
iret
jl
daa
xchg
or
adc
cmpb
push
cmp
lret
fisttpll
test
mov
inc
sub
filds
sti
dec
add
pop
cli
cmpb
shrb
pop
fwait
sub
movsl
and
mov
or
sub
sarb
into
clc
push
loop
xlat
int3
push
mov
lcall
pop
lcall
push
mov
and
mov
lods
rcrb
pop
loopne
adc
filds
jmp
mov
jg
bound
inc
add
sub
aam
jp
mov
xchg
fwait
xchg
mov
cltd
aam
xchg
test
fwait
push
in
mov
stos
repnz
bound
call
das
out
xlat
xchg
mov
popa
fisttpl
xchg
sub
enter
or
fldl
ljmp
cmpsl
cltd
jle
and
cmp
xchg
jnp
cmpsb
xorl
xchg
fmuls
jle
lcall
xchg
jb
out
mov
inc
mov
std
sbb
idivl
out
mov
call
jp
push
push
adc
or
sti
icebp
sar
popa
nop
mov
pop
or
movsl
loope
mov
les
outsl
mov
lock
pop
add
push
jg
xor
sarl
or
sub
stos
and
jb
cmpsl
cmp
dec
stos
xor
daa
call
mov
mulb
cltd
cli
and
std
jge
daa
insb
inc
push
push
and
pop
cld
mov
outsb
jae,pt
pop
repnz
lret
mov
aaa
jg
in
cmp
leave
popa
pop
test
repnz
shl
xchg
stos
dec
adcb
inc
scas
dec
xor
addr16
or
pop
lahf
mov
iret
lret
addr16
loopne
mov
push
xor
push
or
test
dec
inc
scas
push
cmp
xchg
je
pop
jns
call
mov
mov
xor
jb
mov
shrl
add
push
stos
aas
jmp
mov
xor
gs
ljmp
jle
or
data16
add
daa
jle
dec
adc
insl
dec
adc
cmpsl
lods
or
mov
or
xor
dec
sbb
cld
loop
push
adc
call
imul
int3
mov
cmp
mov
into
inc
dec
cltd
sahf
push
inc
mov
ja
add
or
enter
jne
dec
dec
fiadds
sub
stos
adc
movsb
push
lcall
xchg
pop
stos
fcoml
xchg
dec
mov
push
call
inc
pop
and
lret
lock
xchg
imul
xchg
rolb
fmuls
mov
mov
testb
divb
xchg
fmull
pushf
and
loopne
cmp
xor
je
mov
mov
dec
ljmp
sub
pop
je
add
pop
loopne
outsb
mov
bound
decb
jno
in
cmpl
shll
mov
or
in
inc
push
int
push
jg
shll
or
fdiv
scas
ljmp
push
cmp
and
mov
loop
add
xchg
cmp
imul
or
sti
dec
push
dec
test
lods
add
sub
nop
mov
cmp
push
popf
cmpl
sub
mov
test
loope
leave
mov
jl
mov
rcrl
dec
mov
dec
fwait
sub
sub
pusha
xchg
enter
pop
pop
push
mov
pusha
out
lret
jnp
add
xor
inc
cld
cli
inc
inc
test
or
jl
js
or
lods
popf
scas
mov
inc
outsl
shl
sub
and
xchg
mov
sub
ja
ss
push
mov
push
orl
scas
andl
pop
mov
rcrb
xor
xor
inc
aam
lods
fiaddl
mov
adc
push
fistpll
arpl
push
xchg
pop
dec
ds
jle
int3
sbb
std
push
dec
fistl
and
ja
sahf
fwait
push
mov
out
cmp
cmc
cmp
jns
cmpb
aam
mov
sub
pop
fiaddl
jae
push
es
cmpsb
sub
arpl
lods
or
xor
addr16
fdivrl
or
push
add
daa
jp
sbb
iret
cwtl
sbb
jle
sarl
xchg
sub
ficoml
int3
dec
idivl
sub
rorb
cmpsl
cmp
add
dec
jno
pop
out
ds
cmpsl
cli
push
adc
and
push
mov
adc
sbb
leave
orb
pop
lcall
out
stos
dec
add
mov
sub
dec
insb
push
daa
mov
adc
adc
movsl
inc
mov
outsl
out
xchg
das
js
xor
ret
and
adc
xchg
push
add
test
jne
decb
movsl
mov
and
and
ljmp
add
mov
testl
push
mov
push
int3
jmp
shll
sub
push
bound
dec
lods
aam
rcr
mov
mov
andb
mov
inc
arpl
in
jle
sarl
mov
add
cmpsl
pop
push
pop
dec
xor
adc
out
push
push
lret
and
in
andb
ljmp
jb
test
mov
fsubrs
mov
ss
pop
ja
jbe,pt
xchg
pop
lods
shl
in
pushf
add
test
push
xor
jmp
push
scas
popa
jne
fsts
stos
orl
push
pusha
add
call
pop
ret
sbb
adc
xor
or
js
cli
and
leave
sbb
jmp
jb
pop
fimuls
and
mull
adc
idivl
sbb
pop
pusha
test
cld
pusha
mov
inc
orl
sbb
scas
push
vmwrite
inc
xor
adcb
or
push
addr16
cmp
dec
sbb
test
dec
mov
jnp
xor
adc
loope
add
ja
mov
adc
pop
cmp
lea
and
and
inc
inc
pushl
or
adc
xor
or
scas
subl
xchg
xchg
dec
sti
lods
mov
nop
out
mov
sub
in
inc
stc
jnp
sbb
outsl
inc
cmp
adc
insl
mov
daa
cmp
pusha
es
push
adc
dec
pop
xchg
repz
rcll
fndisi(8087
jg
push
inc
jecxz
hlt
aas
xor
enter
dec
mov
lods
fsubr
pop
adc
fcmovnbe
loope
lds
push
in
popa
sbb
jge
mov
jle
pop
xor
rcr
mov
xor
jp
aaa
les
dec
pushf
xchg
in
cmp
bound
pushf
or
jge
test
xor
pop
insl
xor
cltd
sub
ds
sahf
out
sbb
nop
rcrl
fdivrs
outsb
xchg
mov
sbb
arpl
notb
test
movsl
and
rcrl
or
out
in
into
loope
leave
add
pop
inc
je
lret
fldenv
rorl
mov
lock
mov
pop
out
push
repnz
rcll
cld
jl
sbb
stc
ljmp
cmp
mov
cmp
inc
adc
cmp
aam
pop
or
jle
xor
lea
loope
outsb
in
cmp
mov
push
loope
push
fwait
outsl
jecxz
push
sarb
and
sub
xlat
jae
jl
inc
fldlg2
xchg
sbb
aam
add
lods
fucom
leave
adc
lret
adc
fiadds
add
dec
jecxz
xchg
adc
mov
mov
cld
push
daa
pop
inc
pop
fwait
cmpsb
or
and
or
or
pop
inc
pop
cli
sbb
mov
into
ljmp
push
jmp
iret
out
cli
cmpsl
loop
add
mov
sbb
adc
clc
lret
mulb
xchg
fisubs
cmp
and
dec
and
pop
icebp
fsts
push
repz
pop
lahf
je
push
xor
lea
push
sub
xchg
dec
pop
into
sbb
fisubs
outsl
mov
and
push
out
rcll
or
in
jg
xor
jo
shr
mov
mov
cmp
mov
push
or
cld
pop
outsb
into
xor
out
mov
cmp
popa
jp
cmpl
and
jge
jbe
xor
sbb
push
rcr
mov
scas
jo
fs
mov
push
movsb
lcall
sbb
fimull
add
pushf
push
mov
pop
xlat
push
xchg
xchg
and
lods
sbb
ret
ficoms
cmpsl
orl
lock
mov
cmp
nop
scas
inc
repz
mov
push
scas
pushl
shr
xlat
int
push
sub
out
or
jg
sbb
push
imull
out
and
lea
jns
fwait
jg
sub
add
xor
fwait
neg
xchg
pop
add
loop
mov
adc
cmp
push
aad
xor
dec
cwtl
fidivs
scas
dec
pop
sti
or
je
sbb
mov
mov
sub
jae
test
daa
loope
sub
divl
lcall
sub
lahf
loope
inc
or
mov
jb
push
mov
outsl
jne
loopne
push
or
fidivl
mov
pop
fisttps
mov
loope
sahf
dec
in
out
sub
orb
in
jbe
or
fistps
xor
aad
mov
mov
dec
inc
dec
clc
dec
out
add
mov
and
mov
fstl
call
out
sti
push
dec
mov
jbe
add
addr16
aaa
dec
popa
sub
or
bound
adc
mov
cmpsb
cmp
push
adc
lea
sub
hlt
xor
call
sub
push
dec
cmp
mov
jg
mov
ficoms
dec
xchg
adc
or
or
test
add
scas
push
mov
adc
scas
dec
xor
inc
mov
fbstp
test
outsb
push
ja
daa
imull
repnz
add
incl
and
jp
test
fists
jle
xlat
jmp
cltd
mov
add
lock
push
popa
shl
pusha
mov
rol
or
mov
or
dec
sbb
push
daa
jno
out
xor
sahf
sahf
xor
cld
stc
sub
pusha
xor
dec
push
negl
sbb
in
jg
div
pushl
dec
push
test
testb
push
mov
xchg
aaa
cmp
sbb
mov
cltd
das
jg
jno
pop
es
xorb
mov
les
lret
ds
scas
loopne
clc
iret
loope
fwait
jge
mov
stos
icebp
push
aaa
in
in
adc
gs
ss
fwait
xchg
in
add
out
cltd
sub
or
dec
dec
push
mov
fdivp
int3
pop
xchg
sti
fisubrl
push
rclb
out
adc
jbe
movsl
jecxz
idivb
mov
rcrb
adc
repnz
xchg
cmpsl
fdivrp
push
rcr
xor
dec
cmpsl
xchg
mov
adc
fistpl
pop
jle
inc
lcall
pushf
leave
add
mov
add
and
xchg
dec
mov
sub
add
repnz
adc
aad
fistpl
xchg
ret
sbb
sti
ss
aas
mov
jnp
repnz
push
ficompl
popf
shrb
lods
pop
aas
xor
mov
cs
push
bound
cli
xchg
stos
call
push
add
pop
fnstcw
into
mov
push
jnp
out
negb
cmp
rcl
xchg
lds
fdivs
dec
addr16
int
dec
fisttpll
inc
xlat
pop
and
or
mov
decb
movsb
jge
mov
mov
sahf
mov
adc
fisubrl
ss
int
int3
and
push
in
adc
daa
push
outsl
ds
pop
movsl
mov
xchg
add
jmp
jo
lret
fidivs
loopne
pop
mov
insb
punpckhwd
jecxz
mov
jle
mov
inc
fstpt
or
fdivrl
jmp
dec
rclb
scas
sbb
dec
add
push
outsb
adc
or
test
call
xchg
push
sbb
xor
and
lret
add
adc
in
dec
mov
frstor
mov
mov
xchg
pop
aas
dec
fnstsw
fdivs
pop
mov
das
aas
push
jbe
xor
xchg
int
inc
addb
cld
sub
and
xchg
addl
sbb
jno
mov
test
jmp
cmpsl
add
psubusb
test
stos
push
and
sub
cmp
xor
cltd
or
stos
mov
fildl
enter
mov
or
sbb
xor
daa
incb
cmp
push
mov
sub
mov
jmp
add
jb
lods
gs
mov
icebp
aam
in
xor
sub
or
fnstsw
push
xchg
inc
jb
dec
adc
xchg
cmp
pop
pop
sub
je
dec
push
push
es
or
fildl
out
inc
arpl
out
mov
xor
hlt
rcl
out
push
jge
sbb
and
or
mov
testl
mov
adc
xchg
lret
rclb
hlt
mov
fldl
out
nop
mov
das
sub
dec
sbb
xchg
xchg
pop
add
cmpsl
pop
mov
dec
inc
addr16
adc
xor
add
gs
call
sub
jb
add
mov
cmp
pop
sub
lock
and
cwtl
cmpsl
out
fnstsw
pop
fldcw
mov
mulb
in
push
pop
je
dec
mov
loop
pop
pop
dec
dec
out
movsl
ds
fisttpl
mov
jnp
dec
cld
mov
push
stos
push
idivb
and
out
mov
sbb
dec
inc
push
rclb
mov
leave
xchg
addr16
and
cmp
inc
arpl
adc
add
xor
dec
fistps
clc
jg
push
adc
cli
insb
mov
cmpsl
mov
into
xchg
je
xor
scas
inc
sub
mov
ljmp
gs
jle
and
mov
je
outsb
movl
movsb
fnstsw
cmp
or
aam
daa
out
dec
xchg
mov
xor
jp
or
xchg
jg
mov
and
movaps
addr16
cmp
pop
pushf
sub
push
fimuls
cmpsl
and
mov
jae
cmpsb
ljmp
je
loope
outsl
sub
mov
fsub
jg
xchg
shlb
jns
addps
xbegin
cmp
sbb
dec
dec
mov
arpl
lods
lahf
cmp
mov
stos
test
sbb
push
mov
rorl
mov
sar
cmp
scas
bound
es
push
daa
mov
test
pop
gs
into
das
lret
or
aaa
in
jmp
shll
mov
add
xor
adc
iret
jnp
hlt
fisubrs
or
jnp
sub
bound
enter
or
sbb
mov
lods
test
test
and
sbb
enter
cli
outsl
in
cmc
mov
loopne
pusha
dec
imul
mov
es
pop
and
xchg
ficoml
dec
into
fcmove
xor
add
and
mov
jno
pop
orb
stos
sbbb
sbb
inc
aad
scas
repz
movsl
sti
jae
push
xchg
imul
fisubrs
pop
imul
jo
fwait
mov
out
dec
lods
cmp
divl
fcmove
push
sti
xchg
mov
je
scas
or
push
daa
mov
gs
cli
jno
movsb
insl
mov
stos
addr16
loop
aad
sub
arpl
jl
xchg
add
fldcw
or
dec
sti
mov
push
and
adc
xchg
pop
sbb
mov
mov
mov
fnstenv
or
movsl
loope
or
fildll
rorl
movsb
and
stos
mov
dec
mov
shl
aad
or
repnz
push
fsubrs
repz
sub
pop
xor
arpl
xchg
push
or
loope
lret
xchg
je
add
mov
mov
cmpsl
mov
cmp
mov
ss
cli
popa
xor
jbe
adc
enter
cmpb
outsl
imul
mov
push
pushf
cli
cmp
and
outsb
cmc
cli
xchg
in
dec
imul
in
mov
cmp
icebp
hlt
jle
cwtl
jp
sbb
in
out
leave
add
cli
jnp
jne
int
notl
and
sbb
mov
pop
inc
mov
movsb
les
es
xor
fildl
into
lods
icebp
and
das
ror
and
loope
pop
add
push
sub
dec
xchg
imulb
jl
push
sar
stc
rorl
xor
sub
cld
hlt
in
bound
js
ffreep
cld
add
outsl
push
fs
ss
fcoml
rclb
fchs
inc
jo
sub
call
inc
imull
adc
push
inc
mov
ja
icebp
push
jle
inc
mov
fxch
add
adcb
sahf
xchg
pop
jg
pushf
and
addb
pop
cmc
push
fiaddl
push
insb
sbb
les
xchg
cli
stos
int
int3
int3
push
xor
cmp
push
rcl
cmpsl
insb
cmpb
mov
add
lea
jno
ret
or
push
sarl
mov
enter
mov
mov
clc
mov
enter
cmp
mov
xchg
into
repnz
sysexit
mov
dec
call
fisubrs
cmp
xor
cmp
leave
xorl
cmp
repnz
mov
imul
and
jle
pushf
lret
pop
add
xchg
dec
ret
push
ret
inc
jle
jae
je
daa
dec
arpl
inc
and
out
shl
test
inc
sub
lret
jne
sar
stos
pushf
cmp
fldcw
push
inc
adc
adc
lcall
push
inc
xchg
loope
sbb
mov
cmp
xchg
xchg
or
in
push
ror
pusha
dec
incb
or
cmp
enter
add
imul
pushf
sbb
pop
add
dec
jecxz
push
lcall
das
push
les
jle
scas
inc
jmp
push
sti
push
xchg
fldt
mov
pop
test
mov
adc
stos
add
imul
push
add
xchg
movups
iret
leave
add
cmp
jp
negb
testb
imul
inc
rcrb
mov
add
jg
sahf
mov
sti
jge
mulb
leave
pushf
jg
cmp
dec
mov
jnp
cs
sbb
cmp
xchg
xchg
clc
push
sahf
jge
hlt
repz
stc
into
push
sbb
ja
push
ja
pop
lods
sbb
shrl
dec
imul
imul
cmpsl
mov
cmp
jae
fwait
cmp
jns
xchg
js
push
xchg
into
pop
lods
stos
push
sbb
fisttpll
cmpl
cwtl
rcl
mul
cmp
out
mov
adcb
add
adc
mov
dec
add
add
cmp
jge
or
insb
lret
test
inc
cmpsl
aaa
add
mov
cs
xchg
push
cmp
adc
push
insb
xor
cmp
sub
movsl
pop
jle
ret
sub
ds
aas
xchg
adc
mov
jnp
fwait
outsb
loopne
sbb
shlb
movb
shll
dec
les
adc
add
xchg
pop
mov
test
shlb
out
cmp
mov
cli
mov
cmp
adc
aas
scas
and
jle
cmp
and
mov
cwtl
jecxz
lret
jge
in
push
add
mov
push
or
mov
shl
imul
jle
outsl
and
inc
xlat
pop
mov
mov
pop
xor
add
mov
out
or
out
ljmp
into
dec
out
xchg
mov
inc
es
iret
pop
mov
imul
sarb
mov
lahf
push
mov
push
fcmovnu
stos
adc
xchg
inc
rcrb
xchg
xor
mov
dec
adcb
mov
stos
mov
lods
adc
scas
add
ret
fbstp
lock
sbb
mov
add
mov
sti
fdivrs
mov
jmp
data16
aam
xchg
dec
dec
cmpsb
cwtl
mov
push
inc
into
xchg
stc
dec
sbb
xor
adc
shll
test
inc
test
and
testl
movsb
push
dec
outsb
addr16
or
sbbl
testb
xor
mov
inc
sti
sarb
ljmp
inc
sbb
mov
xchg
out
clc
les
or
addr16
lods
orl
mov
mov
in
ret
cmc
push
cmpsb
xor
dec
xchg
add
decl
add
ret
mov
pop
mov
push
dec
scas
add
lahf
inc
roll
je
mov
jo
lret
and
aaa
aas
xchg
dec
or
imul
add
mov
pop
in
and
mov
or
add
jnp
mov
mov
rorl
dec
aad
pop
in
xchg
adc
fdivs
jnp
add
sti
outsl
push
addl
mov
mov
jnp
sub
std
pop
mov
loop
iret
cmp
xor
adc
pop
cmpsb
loopne
sbb
lods
fcmovne
or
push
ss
rolb
sti
pop
scas
enter
into
xor
inc
les
sub
cmpsb
clc
add
insb
push
dec
aaa
push
push
les
sub
sbb
add
fiaddl
and
mov
dec
ret
sub
or
jmp
push
lea
adc
sub
imul
outsb
dec
push
push
mov
cs
cmc
pop
push
cmc
gs
inc
and
push
pop
mov
popf
cli
jb
popf
fldt
mov
inc
pop
jp
shlb
pop
test
cld
pop
mov
cmpsl
lcall
push
mov
push
push
fwait
pop
call
fsub
xchg
mov
rcrl
in
xlat
xchg
out
out
cwtl
pop
add
dec
into
leave
addl
jl
imul
cwtl
pop
in
cmpb
jmp
and
push
jnp
jle
pop
xlat
leave
adc
adc
dec
xchg
mov
lret
jnp
cmp
push
data16
push
imul
jo
mov
add
pop
popf
insb
cmpsl
lret
aad
push
jno
sub
insb
jp
or
lcall
xchg
or
pcmpeqw
fimuls
cmpsb
dec
rcrb
mov
or
xchg
lods
pop
inc
jo
or
sub
int
inc
loopne
jns
je
fwait
aam
lret
pop
lahf
aam
jb
shll
test
jne
loopne
cmp
push
sub
pop
out
xor
xor
cmpsb
loopne
iret
push
mov
jle
in
xchg
jg
jae
sbb
fs
repz
repnz
fdivl
fcmovnb
dec
push
in
xlat
push
pop
jb
data16
cli
xor
jns
loopne
bound
dec
mov
mov
incl
stos
in
les
sbb
vpsubusb
rol
sbb
lret
sar
shr
test
lds
test
and
xor
and
xlat
and
sub
and
sub
push
lock
sbb
cs
sbb
inc
iret
sbb
inc
iret
push
lock
iret
adc
inc
iret
adc
cmp
adc
cmp
push
lock
iret
or
ds
or
push
iret
xor
push
iret
add
lock
and
shl
int3
mov
pop
jnp
xchg
xor
push
nop
dec
sub
mov
or
nop
pop
push
dec
mov
cwtl
pop
xchg
pop
test
push
in
rcr
test
add
clc
fldcw
cli
inc
and
addl
icebp
mov
call
jl
push
dec
add
xchg
es
data16
mov
sbb
out
sahf
xchg
pop
mov
fisubs
and
mov
ret
push
sub
fstpt
xchg
subl
std
or
jge
push
aas
push
cltd
add
test
pop
scas
dec
std
rcrb
adc
push
data16
jp
xchg
and
mov
rcll
push
icebp
iret
in
fdivp
shll
loope
lcall
xor
add
jle
shlb
popf
imul
ficomps
push
test
daa
sub
int3
mov
addb
adc
adc
or
xlat
hlt
leave
inc
lock
mov
daa
xchg
or
mov
jnp
cmp
jmp
in
mov
sbb
repz
ret
sarl
mov
mov
inc
jbe
push
out
enter
icebp
pop
cmpsb
fsubrl
imul
sti
add
xchg
adc
or
jns
and
clc
xchg
outsl
lcall
dec
js
jbe
push
jp
pop
dec
adc
imul
daa
and
xor
pop
jbe
in
jg
xor
repnz
sub
pop
and
push
scas
pop
jge
dec
xor
aaa
cmp
cmpsl
sbb
add
testl
repnz
xor
jg
push
mov
nop
hlt
cmp
shlb
xchg
pusha
cltd
mov
iret
xor
fisubrs
fisubs
mov
ds
in
mov
or
mov
test
jns
mov
pop
lret
mov
xchg
imul
stos
and
xchg
dec
pop
loop
dec
lock
mov
lcall
xchg
inc
repnz
push
movsl
xor
sbb
mov
sbb
inc
mov
ja
sub
jbe
sub
decb
inc
mov
pop
repz
ret
and
push
icebp
or
insb
inc
inc
sub
push
pusha
mov
mov
pop
inc
push
sti
inc
push
je
les
sub
test
jle
xchg
jmp
test
icebp
xchg
mov
or
xchg
andb
test
mov
push
pushf
cmp
test
add
add
mov
jns
cmp
add
add
dec
addb
cwtl
test
push
cmpsl
test
dec
mov
push
fnsave
push
fbstp
out
ja
pop
mov
jb
push
xchg
out
jo
inc
icebp
movsl
ja
sub
xor
xchg
xchg
enter
lret
pop
xor
add
jp
lock
jae
imul
dec
mov
sub
jae
push
insl
jae
push
imul
imul
dec
pushf
iret
inc
out
mov
ds
add
inc
leave
cmp
pop
xchg
add
pop
adc
fdivrl
mov
cs
add
xor
pop
pop
pop
jmp
test
shl
push
pop
scas
xchg
out
imul
mov
insb
out
mov
jle
outsb
pop
outsl
xchg
xchg
jae
cli
dec
push
mov
sar
push
xchg
ss
lcall
add
xchg
adc
inc
ja
jno
push
pop
push
push
cmpsl
call
int
mov
rcll
dec
cmc
push
setp
scas
or
addr16
ja
js
jmp
pop
dec
add
ror
mov
push
popf
imul
add
ss
dec
mov
out
cli
jg
sub
adc
mov
add
test
imul
xchg
push
add
or
dec
aaa
imul
lods
lock
dec
mov
data16
mov
xlat
push
mov
adc
adc
rcll
inc
jg
mov
shrl
mov
out
pop
adc
lret
mov
push
or
push
sarb
pop
xor
pushf
jno
push
lods
xchg
loop
stc
sub
or
sbb
xchg
push
incl
xchg
incl
add
fdivs
mov
out
cmp
enter
xchg
sti
dec
push
lods
lcall
or
sub
jno
cmp
decb
adcb
xchg
divb
repz
cmp
pop
lret
es
lret
mov
xlat
mov
lret
sub
sub
and
jne
cli
sub
push
loop
clc
mov
sub
or
jbe
decl
push
push
mov
repnz
subl
inc
cmp
jns
aas
clc
sub
cmp
pop
inc
fcmovnu
aam
repz
repnz
filds
jnp
data16
cmp
mov
stos
and
mov
mov
roll
out
lds
stc
fildll
sub
dec
mov
dec
hlt
sahf
adc
out
cmp
repz
mov
jmp
iret
push
scas
xchg
testl
in
scas
jbe
mov
pop
lcall
pop
and
mov
push
lea
xchg
cld
insb
fs
lcall
cwtl
mov
sbb
pop
pushf
xchg
jbe
jg
cmp
fisubrl
pop
divl
adc
mov
popl
repz
nop
rcr
push
add
push
mov
mov
ret
rcrb
in
adc
dec
push
adc
jmp
and
inc
or
movsb
pop
and
nop
inc
dec
jecxz
push
sbb
in
jbe
mov
cld
fprem
shll
stc
push
stos
scas
loope
sub
push
mov
dec
incb
push
jmp
cwtl
cmp
jge
in
cmp
aad
sbb
stos
iret
add
push
in
jnp
or
pop
dec
xchg
inc
cmpsb
dec
or
fcmovne
sbb
or
mov
cmp
loope
aaa
mov
add
xchg
xor
repz
pop
pop
lret
shl
mov
pop
mov
mov
icebp
xchg
xchg
pop
mov
jp
pop
les
in
nop
in
flds
or
pop
inc
mov
pop
adc
hlt
dec
addr16
and
xchg
push
in
out
add
push
hlt
mov
repz
int3
xchg
pop
mov
push
sub
mov
pop
and
rorl
cltd
cmc
mov
or
iret
icebp
cli
sbb
test
sub
lea
xlat
mov
pop
outsb
dec
leave
pop
jns
pop
cmp
sub
jmp
lods
fcmovnbe
adc
mov
or
mov
pushf
inc
lret
hlt
stos
add
testb
pushf
lret
mov
xchg
aad
push
pop
hlt
cmp
les
push
mov
sarb
jecxz
lahf
mov
dec
fs
mov
xlat
gs
das
cwtl
or
pop
mov
cmpsl
dec
outsb
pushf
adc
mov
pop
scas
mov
cmp
imul
xchg
inc
mov
test
push
mov
push
adc
push
enter
mov
inc
arpl
sub
rorb
les
xor
or
sti
jno
das
test
or
cwtl
xor
bound
cmp
push
rol
mov
or
dec
push
sbb
cwtl
push
dec
add
aam
addr16
jbe
outsl
push
pop
jecxz
clc
mov
out
add
imul
lods
fcoms
mov
pop
popa
mov
adc
stos
ret
scas
leave
movsb
gs
sti
cmpsb
push
nop
into
sub
incl
in
fistpll
xlat
outsb
inc
push
leave
xor
popa
insl
push
ja
cmp
roll
mov
inc
pushf
repz
fistps
push
outsb
add
in
inc
ficomps
movl
or
shll
mov
testl
lret
iret
test
pop
cwtl
das
stos
jle
test
cmp
ss
pop
testb
push
ja
pop
dec
std
jg
fbstp
cmp
daa
and
jg
jl
shlb
arpl
cli
ljmp
mov
jge
lcall
mov
push
and
or
pop
xor
loopne
xchg
jecxz
or
sub
movb
ja
loopne
sub
jnp
add
pop
fcmovne
ret
mov
xchg
cmp
xchg
or
loope
loop
mov
addl
sbb
out
iret
xchg
lock
mov
mov
pop
mov
push
ja
push
push
and
pop
push
add
and
lret
sbb
das
jo
mov
leave
mov
push
ret
imul
pop
ss
push
mov
adc
je
roll
aas
lods
subl
sub
adc
out
lock
xlat
dec
in
dec
push
push
and
repnz
xchg
jno
dec
pop
sbb
xchg
and
mov
or
xchg
pop
mov
xchg
je
cwtl
movb
into
sbbb
enter
pop
xchg
add
test
in
mov
enter
xor
cs
data16
in
fnstenv
sahf
push
sub
mov
decl
lods
mov
xrelease
icebp
cmp
add
xchg
mov
inc
ret
jo
xor
in
mov
jno
adc
cmc
fwait
punpckhbw
mov
gs
es
loop
mov
fdivr
sbb
ds
std
clc
cmpb
inc
jns
lret
xlat
xor
sub
loopne
fsubs
pusha
cwtl
cli
xchg
xchg
pop
ret
fs
xchg
mov
jge
call
cmpsl
bound
xor
sbb
and
push
push
adcb
dec
fnstcw
je
into
mov
outsb
cs
xor
aas
and
or
pop
xor
ja
add
stc
push
test
push
scas
fisubrs
xchg
pop
and
mov
dec
notl
test
xchg
jg
data16
andl
jb
adc
test
jge
ss
mov
or
mov
jno
xor
fcoms
es
lret
push
sub
lods
inc
fwait
mov
cmpsl
mov
dec
cmp
out
ss
xchg
adc
push
mov
addr16
js
mov
dec
jl
and
jb
testb
pop
nop
xor
repnz
int3
xchg
jns
jge
fs
enter
jp
imul
ds
loop
mov
jmp
xchg
jp
sbb
jb
adc
addl
lods
adc
mov
adc
and
repnz
jl
ficoml
idiv
hlt
cmc
or
imul
dec
cmp
je,pt
lret
popf
xor
fcmovnu
lock
loopne
fdivr
ss
outsb
inc
ds
aad
inc
jns
sub
pop
inc
push
mov
push
sbb
dec
inc
jg
stos
mov
pop
jge
fistps
fsubl
gs
add
push
mov
scas
jg
in
or
lds
push
push
sub
or
iret
fnstcw
jg
out
mov
popw
mov
into
js
dec
sub
movsb
push
sub
jns
dec
and
sti
pop
push
movsl
cmp
or
mov
mov
sub
hlt
mov
repz
mov
push
mov
inc
ljmp
mov
mov
mov
push
int3
xor
sub
rcr
mov
icebp
xchg
cmp
inc
mov
inc
shl
shrb
xchg
inc
sbb
mov
pop
jp
pop
mov
mov
enter
into
rorb
scas
ffree
sub
xor
jmp
inc
xchg
push
mov
jbe
xor
icebp
xor
mov
xorb
cmpsl
in
sbb
fdivl
sahf
add
adc
xchg
push
jmp
push
insb
xchg
pop
sti
inc
adc
sar
mov
mov
xor
add
sub
shlb
movsl
push
cmp
mov
mov
jecxz
movsb
in
inc
imul
fwait
sub
cs
and
mov
adc
lock
das
lahf
cld
bound
xchg
stos
jae
and
popf
cli
subl
addr16
push
sbb
mov
aam
call
in
and
push
mov
or
cwtl
cli
adc
inc
mov
clc
je
push
into
mov
inc
cmp
xor
loopne
hlt
shlb
xlat
pop
bswap
cwtl
or
imul
push
adc
adc
inc
inc
inc
int
aas
test
dec
xchg
cmp
jbe
push
inc
out
ret
pop
pop
popf
outsl
loopne
xor
out
lahf
xchg
fildl
pop
scas
push
leave
scas
cmp
outsb
pop
inc
dec
mov
das
jge
sub
movsb
cld
pop
add
jle
jae
sub
mov
imul
fists
stos
xchg
sub
mov
inc
nop
inc
xor
fwait
ljmp
xchg
xor
cmp
loop
mov
xchg
loop
lret
or
pop
xchg
es
mov
das
repz
sub
and
inc
fwait
in
ret
xchg
xchg
sbb
mov
inc
dec
hlt
loop
ss
test
lahf
aaa
inc
jno
bound
inc
orb
fwait
xchg
lea
js
stos
dec
push
dec
pop
sbb
fs
lret
fnsave
or
dec
adc
into
shr
cmpl
mov
push
sarl
les
pop
xor
dec
stc
lea
sbb
sbb
jae
dec
inc
je
cmc
sub
jl
inc
dec
sarb
jge
jb
jnp
divl
lods
jo
sahf
fiaddl
push
dec
iret
pop
xlat
and
daa
pop
sub
outsb
sbb
stc
aam
cmc
les
jne
and
xor
or
in
repnz
mov
adc
cmp
jnp
add
into
jp
aaa
aaa
dec
icebp
adc
mov
xchg
leave
pop
leave
sti
push
stos
cmp
test
repnz
xchg
or
jg
pop
dec
gs
mov
daa
fsubs
jl
sbb
and
dec
int3
fwait
sbb
sahf
pop
adc
cmp
adcb
inc
add
jmp
pop
notl
push
mov
cmp
out
jl
and
mov
adc
jge
pusha
in
movsb
mov
dec
jg
shl
mov
xchg
jg
inc
mov
add
inc
popa
or
sarb
out
clc
mov
sub
jg
add
sub
mov
sub
fnstcw
loope
xchg
out
lret
ljmp
push
mov
sti
mov
lods
push
xor
fwait
mov
and
js
pushl
cmp
pop
cmp
pop
add
jg
push
es
std
testb
shr
xchg
mov
aaa
push
dec
xchg
mov
jnp
nop
jno
inc
and
cmp
xor
mov
add
dec
or
hlt
cmp
mov
jmp
lods
pop
lret
push
loope
mov
add
in
lods
clc
leave
popf
adc
das
mov
test
sub
dec
mov
xorl
mov
aas
xchg
xor
icebp
xor
ljmp
inc
jp
xchg
xchg
cmp
pop
lds
shl
ss
les
lcall
lret
cmc
xchg
mov
add
xlat
cmpsb
or
orb
xlat
cli
fucomp
push
in
pop
xchg
loop
pop
fsubrs
cmp
hlt
pushf
js
mov
pop
loope
daa
out
or
pop
scas
mov
cs
loopne
call
fidivrl
fnstenv
mov
cld
repnz
clc
dec
xchg
mov
xorl
fwait
jb
aas
xor
test
or
inc
std
jmp
add
cld
sahf
xchg
or
and
rolb
movsl
cmp
sub
imulb
sbb
add
mov
aaa
orb
cmpsb
lahf
call
arpl
push
mov
push
sbb
ss
sbb
pop
andl
loopne
aad
js
push
cmpsl
data16
dec
sub
call
xchg
rclb
rcrl
jle
push
fidivrs
mov
add
fdivs
or
cmp
pushf
push
sarb
mov
inc
cmp
faddp
leave
lds
jle
jns
push
test
add
mov
imul
inc
stos
inc
sahf
scas
xchg
fsubp
out
pop
xchg
mov
cmpb
jmp
inc
jne
mov
jg
jmp
rcrl
lahf
mov
add
adc
sbb
jns
es
push
adc
inc
xchg
add
repnz
sahf
es
jb
scas
mov
cwtl
clc
inc
mov
dec
imul
pop
loop
rcll
xor
leave
add
or
dec
or
movsb
jmp
and
mov
ljmp
fwait
xor
fisttpll
mov
jl
das
testb
out
cmp
imul
repz
cltd
mov
int
clc
xchg
rcrb
fildll
or
negb
and
enter
mov
je
xor
mov
addr16
sbb
mov
das
pop
adc
jg
pop
iret
sub
add
mov
inc
or
cmp
xchg
push
cli
flds
mov
push
mov
cmpl
pop
push
mov
rorb
in
sti
inc
ret
ljmp
xacquire
loope
sbb
cltd
pop
rorb
jle
xor
inc
popf
push
push
jp
sub
mov
mov
jne,pn
adcb
lcall
and
cmpsl
lods
xchg
mov
xchg
or
pop
dec
mov
inc
cmp
adc
pop
push
sub
mov
insl
push
push
mov
mov
xor
lods
adc
cmp
jp
mov
dec
adcb
xorb
mov
enter
ljmp
jno
jge
lcall
test
in
out
push
and
mov
les
cmp
pop
cwtl
shr
aam
lods
or
mov
call
pop
testl
aas
fisubl
js
rorb
pop
jle
fwait
sub
xor
jno
mov
or
jmp
jle
adc
hlt
and
cs
push
sub
jmp
repz
ror
cmpsl
aad
push
jg
repz
inc
mov
or
mov
lcall
lcall
mov
cmpsb
dec
dec
inc
cmp
scas
xor
rcrb
xchg
ret
and
sub
rcrl
mov
pop
orb
cmp
leave
xchg
out
testb
stc
and
movsb
in
mov
sub
or
idivl
fimull
sbb
ljmp
outsb
adcb
repz
out
aaa
dec
push
pop
mull
push
jmp
int3
int
insl
pop
sub
cmp
std
scas
pop
montmul
cmpsb
push
cmp
xchg
es
hlt
jmp
xchg
jecxz
sbb
cmpsb
orb
mov
mov
ds
adcl
dec
out
test
xlat
ja
jo
xchg
mov
shl
sti
aad
or
add
xchg
xchg
iret
stos
out
rorb
enter
push
sbb
str
fistl
push
pop
call
fists
xor
push
jecxz
sub
dec
dec
pop
inc
mov
add
jl
int3
dec
cmpsb
in
push
dec
mulb
cli
pop
clc
mov
loope
dec
shl
add
mov
aaa
ror
jl
push
jno
mov
test
pushf
push
outsb
scas
aas
or
pushf
jmp
cli
scas
inc
sbb
or
ljmp
push
mov
imul
outsl
aas
jl
inc
sub
js
or
repnz
or
cmp
repnz
xor
mov
pop
imul
cmp
cld
pop
xor
sub
and
push
pushf
out
inc
mov
aas
mov
stos
dec
pop
push
cli
inc
nop
adc
xor
xchg
sbb
mov
inc
xchg
add
jb
push
test
fcoms
pop
in
mov
pop
ret
xchg
jl
lea
popa
mov
ret
ss
mov
jle
jns
sbb
das
pop
sar
jle
mov
mov
adc
pusha
daa
pop
insb
jne
mov
scas
sbb
push
cmc
fisttpl
xor
and
sbb
and
movsl
repnz
mov
mov
inc
outsl
mov
ret
dec
xor
cmpsl
ret
pop
pop
and
sub
ss
rcrl
testl
add
icebp
inc
mov
in
cmpsb
cmp
sub
into
mov
rcl
popaw
shlb
pop
inc
mov
scas
hlt
add
sbb
jl
or
out
loope
push
xor
xchg
int3
stos
sbb
pop
test
stos
or
arpl
jmp
lret
and
mov
cmp
pop
inc
jle
fadd
out
mov
outsb
xchg
add
inc
lcall
inc
fs
xchg
sbb
or
out
push
aas
xchg
inc
lods
mov
stos
sti
pop
mov
test
sbb
or
fists
push
fdivrl
sbb
or
js
jle
mov
out
into
inc
pop
adc
scas
imul
pushaw
test
cmp
aaa
fimull
out
push
cmp
pop
mov
fimuls
fwait
mov
insb
in
test
fs
pop
jge
notl
lret
sub
inc
movsl
imul
outsb
push
cmp
dec
gs
fcompl
pop
popa
sbb
xchg
jns
push
or
xchg
sub
lret
outsb
std
add
test
push
stc
cmpsb
jle
sub
dec
cmp
aad
push
js
add
nop
addr16
cmp
mov
movsl
leave
fcoml
cmp
pop
add
inc
pop
fnstsw
test
mov
cmp
mov
push
or
cmp
rclb
mov
rol
and
pop
sbb
or
sub
jns
xor
or
push
push
fbstp
pop
sti
pop
jle
dec
jnp
ret
loop
lret
fiaddl
fistl
bnd
push
mov
mov
xor
idivl
movsb
popa
mov
cmpsb
es
lock
dec
pushf
scas
mov
cmp
je
push
push
cs
negl
mov
xchg
or
push
daa
mov
icebp
sub
std
and
test
adc
or
call
jmp
add
pop
fisubl
sub
xor
xor
not
jmp
push
push
and
or
loop
jbe
mov
cs
push
mov
int3
mov
mov
xchg
imul
ret
and
xchg
sub
or
scas
pop
push
jnp
cmpsl
dec
movsb
notb
scas
lcall
mull
testl
das
sahf
lret
insb
xchg
dec
scas
mov
stos
jp
mov
dec
and
xchg
fs
dec
jnp
loopne
pop
xchg
xchg
mov
lds
or
cmpsl
push
xlat
jae
es
shlb
cmpb
lret
jae
mov
sub
test
push
out
in
pop
mov
daa
out
mov
out
fdivrp
lcall
jp,pn
adcb
decb
mov
mov
sub
jb
lods
bound
sub
jg
sbb
test
push
fadds
test
jo
mov
outsb
add
push
clc
cmp
dec
sarb
mov
push
lahf
outsl
test
rcrb
sbb
jo
mov
test
sbb
fsts
push
das
ja
mov
fstps
iret
loopne
mov
xchg
adc
mov
pop
enter
ret
lret
clc
dec
test
aam
jne
pop
push
repz
fidivrs
cmp
out
mov
jle
sbb
cmp
sub
out
ficomps
inc
add
sarb
sub
call
cs
scas
outsl
adc
jnp
or
mov
xchg
leave
or
add
push
lods
inc
mov
push
cld
dec
cmp
xchg
mov
mov
push
ds
mov
sahf
nop
jns
adc
mov
arpl
mov
sbb
aas
and
xchg
push
ret
lcall
fadd
in
scas
fsubrp
movsl
pop
out
or
sub
insl
rcrl
ret
nop
and
imul
ds
cmp
out
int3
ret
mov
icebp
scas
loopne
lret
stos
cmpsl
xor
sahf
add
lea
sub
push
std
aam
adc
sar
les
mov
test
pop
popf
inc
test
scas
push
outsl
xor
sbb
in
sahf
repnz
sbb
pushf
lock
hlt
add
cld
dec
in
cmpsb
std
pop
add
sub
jne
mov
jb
add
adcl
adc
icebp
clc
inc
ljmp
mov
jb
lods
push
negb
ficomps
adc
out
mov
add
cmp
stos
iret
jmp
mov
mov
xchg
es
scas
int
sub
vhaddps
mov
lods
js
pop
cmpsb
dec
inc
adc
lds
pop
mov
mov
scas
sbb
cld
ds
lcall
sbb
inc
push
std
ss
xchg
pop
add
mov
nop
push
movsb
xor
and
repnz
ss
inc
fwait
test
into
pop
mov
sub
lds
pop
sub
movsb
lods
mov
sub
push
xor
cmp
adc
push
sub
shr
xor
xchg
insb
inc
xor
adc
in
adc
or
add
jl
insb
outsb
fs
jmp
or
fucomp
das
bound
xchg
aaa
repz
mov
cld
inc
pop
mov
jle
jne
or
or
jb
and
cwtl
and
pop
xor
enter
lea
sbb
mov
push
pop
fwait
sarb
and
test
inc
mov
mov
testb
out
stc
add
in
int
fldl2t
lret
sub
dec
dec
cmc
pop
and
mov
lods
push
repnz
leave
shrl
bound
stos
bound
fdivp
test
dec
and
aas
sub
mov
ficoms
inc
jmp
sbb
lea
rcrb
mov
dec
bound
cmp
adc
push
int
cli
decl
adc
fwait
data16
sbbb
cli
pop
inc
enter
xchg
iret
xor
jp
mov
hlt
or
dec
add
add
add
incb
xor
ds
ss
xchg
lret
sub
ret
push
xlat
inc
add
mov
mov
pop
int
xor
adc
test
pop
mov
loop
fiadds
mov
and
clc
test
lds
add
xchg
jmp
mov
orb
mov
sub
push
ficomps
adc
dec
pop
lock
sub
add
cmc
inc
lret
sbb
inc
test
pmovmskb
or
sub
testl
fdivrs
push
xorb
ficompl
movsl
into
mov
pop
mov
shlb
cld
xchg
sbb
sahf
jmp
enter
mov
icebp
inc
test
rclb
jle
xchg
and
mov
inc
outsl
xchg
filds
sub
add
mov
sti
pop
push
push
dec
popf
cmp
cmp
orl
push
jg
cltd
lock
test
pushf
ja
inc
and
into
addr16
jg
dec
repnz
inc
add
mov
jl
mov
daa
je
sub
nop
test
add
mov
test
inc
pop
fnsave
adc
pusha
nop
or
or
pop
test
jp
jno
into
dec
lret
mov
fdivrl
test
sbb
mov
pop
mov
test
pushf
iret
inc
inc
or
in
xor
lahf
mov
cmp
in
cmp
iret
mov
push
sub
push
inc
pop
imul
out
or
mov
mov
fdivrp
fadds
mov
cmp
test
jp
jle
call
jb
loop
out
adc
dec
push
shll
jb
mov
cmp
mov
and
pop
mov
add
dec
xchg
sbb
cli
adc
cmp
fisttps
jns
mov
insb
ljmp
cmp
outsl
mov
push
sar
fistpll
or
xor
mov
rclb
loopne
aaa
rorb
aaa
dec
add
mov
xchg
stos
mov
jmp
inc
sub
pushf
repnz
sbb
fstps
fld
stos
adc
lret
jne
insl
mov
adc
rcl
or
pand
or
and
mov
ds
pop
sbb
dec
mov
inc
mov
xchg
pop
mov
xchg
rorl
shll
xor
stos
loope
or
testb
test
xchg
push
adc
les
dec
lret
mov
daa
mov
push
mov
xchg
lret
mov
aaa
cmpsl
aas
into
xchg
cmc
push
sbb
frstor
sbb
fimuls
add
popf
aaa
dec
mov
cltd
dec
jae
jnp
fdivr
jmp
mov
stos
mov
das
mov
das
sbb
jmp
mov
add
cmp
jle
test
sbb
outsb
inc
xchg
icebp
dec
les
stc
idivb
scas
into
adc
add
scas
cmp
ja
dec
jns
mov
dec
or
mov
dec
repnz
push
aam
pop
or
or
push
outsl
add
jg
hlt
sti
cmp
or
cmp
leave
mov
sub
xchg
jnp
inc
and
and
das
aad
xchg
dec
mov
es
pop
mov
addb
jnp
sub
aam
add
xchg
insb
sahf
call
nop
sub
aaa
int
or
fdivl
sbb
inc
add
movsb
push
pop
pop
hlt
pop
xchg
cmp
xor
into
xor
push
scas
lret
sbb
cmp
aam
inc
ftst
mov
xchg
loopne
nop
jl
inc
stos
cmpb
das
dec
jg
xor
insb
push
cltd
pop
jg
bound
in
repz
add
dec
adc
dec
rclb
xchg
mov
xchg
jmp
cmp
cwtl
rorb
add
outsb
mov
pushf
xor
dec
fsubl
pop
dec
iret
fwait
cmc
sarl
repnz
les
dec
lret
or
icebp
xor
mov
cmp
pusha
nop
pop
and
dec
lret
fcomip
arpl
xchg
jg
mov
or
inc
or
xor
mov
jg
dec
fdivl
xchg
subb
pop
cmpsl
nop
pop
inc
push
lret
inc
in
fildl
mov
pop
cld
fmull
cli
dec
dec
popa
pop
pop
iret
pop
ljmp
icebp
and
jg
sbb
add
or
xchg
mov
push
mov
xor
test
pop
test
add
jl
ljmp
fdivrl
cmp
mov
jg
ss
scas
xlat
xor
add
les
je
adc
push
cmp
shlb
ljmp
scas
lods
jno
lods
mov
jl,pn
inc
sti
dec
mov
test
mov
or
adc
imull
pop
lock
mov
fwait
mov
and
add
std
push
push
ret
jmp
daa
cmpsl
sub
and
insl
outsb
or
divl
ds
inc
cmp
mov
ljmp
sub
icebp
cmc
pop
inc
nop
stc
jg
lods
sub
jb
jbe
dec
fcoms
clc
push
das
xchg
xchg
out
iret
out
cwtl
cmp
popf
in
xor
cmp
xchg
mov
push
or
aas
mov
add
in
outsl
lret
push
fisubs
hlt
pop
dec
or
jae
leave
jb
test
sub
push
enter
mov
adc
sub
in
icebp
mov
bound
mov
mov
ds
fwait
mov
inc
ss
push
cmpsl
sbb
fdivrl
in
loope
cmp
push
mov
xchg
adc
cmp
cmp
jp
inc
inc
std
mov
dec
add
adc
orl
inc
mov
and
pop
xor
xchg
jae
jge
cli
aaa
adc
idiv
in
push
lods
pop
or
shll
sbb
shlb
int
imul
adc
inc
notb
sti
cmp
dec
mov
aaa
bound
lret
clc
dec
mov
jb
loop
dec
mov
xchg
add
inc
ret
cli
lcall
jg
or
std
sub
idivl
ret
popf
std
xchg
aad
in
push
andl
add
jg
mov
imul
cld
rcrb
add
push
or
push
xor
aas
mov
xchg
sti
roll
sbb
add
testl
dec
cltd
out
inc
ret
daa
fistpl
jmp
jg
adc
jge
out
sbb
or
aad
or
pop
mov
ja
addr16
icebp
and
inc
add
rcl
add
jecxz
push
decl
cltd
mov
lcall
dec
lea
push
mov
adcl
into
mov
xlat
rep
pop
out
mov
push
and
xor
rorl
das
sbb
push
subl
push
cmp
mov
lods
imul
sub
cmp
xlat
mov
pushf
jg
insb
ret
cs
mov
inc
xor
scas
dec
addr16
scas
repz
in
scas
pop
popa
push
sbb
mov
lods
cmp
mov
adc
mov
or
mov
rcl
ss
ds
pop
ret
push
leave
pop
jle
mov
and
cld
dec
sub
std
pushf
and
int
or
clc
sbb
arpl
mov
dec
into
or
mov
lock
or
ficoms
addr16
cmp
xchg
xor
incb
jge
xchg
fidivl
mov
shl
push
and
shlb
dec
out
jp
cmpsb
inc
sbb
sahf
add
jns
mov
mov
mov
xchg
xorl
push
cld
daa
jp
pop
inc
in
adc
loop
sbb
cld
mov
ja
push
out
scas
cli
inc
inc
cmp
lcall
cmpsb
rcll
lcall
jle
loope
inc
mov
fistpll
pop
pop
xor
fstpl
les
les
test
jbe
jge
jne
pop
mov
cltd
inc
sbb
jnp
data16
push
xchg
pop
sarb
sub
cld
pop
jp
cmp
mov
je
pop
pop
aam
scas
or
mov
sbb
or
and
pop
inc
mov
bound
test
pop
adc
mov
hlt
mov
out
xor
sub
jno
mov
xor
out
movsl
pop
shll
or
ror
mov
lea
rcr
dec
dec
inc
jo
outsb
divb
aas
sub
sarl
or
imul
sbb
jecxz
or
jno
les
or
cmp
xor
sbb
ja
jge
jl
mov
lahf
in
iret
xchg
popa
or
dec
imull
push
mov
jecxz
sbb
test
hlt
int3
push
lret
inc
jmp
inc
mov
mov
dec
push
daa
int3
inc
inc
popf
nop
fnstcw
shlb
jb
arpl
xchg
push
testb
cli
pop
notb
xor
jg
std
lock
cmpsl
repz
gs
xor
mov
jg
xor
roll
and
inc
loopne
in
mov
es
insl
mov
push
fucomip
lcall
add
cwtl
popf
push
cltd
out
jnp
adc
and
inc
xlat
lret
lret
das
lea
mov
lods
fcomps
lcall
fs
mov
add
mov
sub
jne
aam
sbb
cwtl
and
sbbl
xchg
sbb
les
dec
insb
xchg
mov
jle
pop
mov
ret
jns
sub
aas
sti
ss
mov
mov
fiadds
ljmp
call
mov
sub
cld
nop
mov
das
mov
sbb
popa
adc
std
push
pop
mov
push
imul
mov
push
aad
mov
add
dec
add
pop
sub
pop
cmp
or
inc
push
xchg
nop
shrd
out
jp
stos
fsubl
jbe
dec
cmpb
mov
inc
loop
shlb
xor
stc
jg
pushf
call
fcompl
subl
or
cwtl
or
sarb
cld
cmpsb
or
cmp
mov
pop
mov
pop
into
cltd
movsb
cmp
pop
xor
xchg
popf
sbb
push
pop
fisttpl
xchg
in
mov
shr
rcll
popl
nop
test
loop
in
sbb
or
movb
into
loop
nop
sub
ret
add
inc
icebp
jecxz
stos
notb
fstp
lret
mov
sbbb
sbbl
or
icebp
int
bound
jno
in
loop
fldcw
push
mov
ficoms
rcll
icebp
dec
sti
jne
xchg
cwtl
mov
sbb
dec
cmp
lods
repnz
fidivs
adc
ds
jle
sbb
add
push
push
mov
cmc
sub
stc
inc
icebp
aas
add
mov
pop
call
inc
loope
sub
jbe
cmpsb
mov
dec
mov
mov
loop
rclb
pushf
push
mov
roll
aaa
aas
and
dec
lahf
push
sbb
stos
jge
in
jne
and
mov
cmp
pop
data16
in
fistl
shr
pop
cli
sub
or
and
or
fs
popl
add
pop
dec
cwtl
data16
pop
jl
jl
adc
or
pop
cmp
cld
ss
add
dec
xchg
repnz
push
mov
leave
lret
int3
sub
clc
int3
add
lea
mov
mov
sub
add
sub
lea
and
mov
cmp
xchg
aaa
rclb
mov
in
mov
pop
jbe
addl
mov
sarl
dec
xchg
pop
dec
inc
push
push
hlt
cmpsl
xor
hlt
mov
insb
sub
dec
aam
sub
mov
enter
mov
pop
aad
lods
and
imul
sbb
add
xlat
xlat
mov
xor
lods
cwtl
add
pop
add
iret
mov
mov
jecxz
pop
in
xchg
mov
jl
fistpll
fmuls
fistpl
push
rcrl
inc
adc
and
pop
lcall
push
mov
sbb
sub
movsl
mov
adc
xchg
into
call
addr16
dec
push
add
mov
sarl
push
mov
jg
add
sbbl
or
stc
jne
mov
loop
fmull
push
xor
sti
out
adc
in
sbb
mov
cmp
and
aam
clc
jle
adc
repz
add
call
je
or
or
pop
es
xor
dec
je
mov
fisttpl
mov
xchg
and
test
dec
enter
mov
jmp
xchg
sbb
clc
icebp
push
mov
icebp
pop
jg
mov
pop
clc
adc
ja
jmp
dec
inc
and
test
fnstsw
loopne
push
andps
jg
or
enter
nop
loopne
push
push
and
fildl
pop
xor
jne
fimuls
ret
sti
and
cs
pop
lods
lds
sbb
sub
loop
das
sbb
fstpt
shll
pop
cli
push
fisubs
stos
jecxz
lods
roll
mov
les
dec
pop
sbb
jne
xor
imul
push
mov
stc
sbb
jge
jecxz
sub
or
sar
pushf
fiaddl
jg
xor
lahf
ret
lcall
sub
cld
lods
lods
jp
and
shll
adc
enter
cltd
cld
xchg
pop
hlt
and
pop
out
push
mov
xchg
push
iret
sub
cwtl
jae
xchg
xor
mov
inc
sbb
inc
xlat
popf
pop
adcl
out
add
cmp
and
stc
repz
mov
sahf
pop
lret
push
inc
and
push
mov
and
jmp
loop
sub
inc
cmpb
jge
jbe
add
es
add
xchg
xor
and
mov
sarb
sub
cmpsb
clc
cltd
fdivrl
adc
xchg
mov
mov
xchg
repz
es
mov
mov
cli
stos
or
add
or
rcrl
jecxz
dec
and
pop
push
push
sti
cmp
mov
adc
dec
cltd
in
push
repz
pop
lahf
pop
adc
add
dec
clc
adc
icebp
test
inc
cltd
lahf
jae
lret
fwait
ja
add
jne
enter
or
dec
pop
dec
mov
add
loop
sbb
mov
or
or
xchg
xchg
cli
and
sub
xor
mov
lret
mov
or
sbb
xchg
and
sbb
aas
xchg
mov
stos
repnz
and
in
fs
rcrl
lds
sahf
es
fists
loope
mov
jg
mov
jmp
sbb
faddl
pop
fnstcw
mov
push
imul
neg
mov
pop
inc
or
adc
jecxz
xlat
or
lret
add
popa
call
fdivrp
push
nop
xchg
cmc
fcoml
jg
fldt
lcall
push
jl
sub
jbe
add
insb
roll
mov
xchg
aaa
loopne
push
jns
adc
movsb
add
rclb
push
scas
mov
sub
ljmp
xchg
mov
push
negl
mov
sub
push
xor
add
sti
or
pushf
repnz
mov
lcall
xor
cltd
sahf
mov
mov
cmpb
leave
hlt
neg
ret
icebp
push
mov
sub
fistps
scas
dec
lods
mov
int
xchg
notl
inc
in
mov
out
xor
nop
stos
push
add
lret
lret
adcl
mov
scas
mov
mov
into
mov
mov
ret
lret
or
mov
inc
xor
pop
adc
cmpsl
jmp
dec
addr16
sub
dec
add
and
daa
scas
dec
testl
rorl
push
push
xchg
xor
mov
sbb
xor
les
sub
xchg
jbe
add
dec
andl
icebp
data16
jns
lods
xchg
and
xor
fbld
dec
bound
jae
scas
repnz
lahf
push
bound
cmpsl
andl
xor
inc
or
inc
pop
pop
mov
sbb
clc
and
ficoml
out
adc
fisttpl
add
push
xchg
xor
fidivl
rcll
inc
je
sbb
jmp
pop
int3
insl
testb
loopne
pop
loopne
xlat
sub
lahf
cmp
xchg
sub
push
mov
mov
pop
push
arpl
test
int
les
add
mov
jp
sub
push
subb
dec
sbb
inc
and
jl
dec
fdivr
add
push
mov
mov
shll
mov
or
inc
mov
addr16
push
mov
and
adc
push
rol
pop
lcall
push
xor
roll
push
imulb
std
mov
fcmovnu
xor
addr16
pop
mov
adc
lret
mov
dec
adc
adc
xchg
cli
icebp
test
scas
sub
mov
xchg
inc
xor
in
inc
mov
jp
negl
and
ror
mov
dec
mov
mov
xor
mov
jle
sbb
in
sbb
and
pop
push
xlat
sub
push
inc
andb
subb
lcall
mov
mov
mov
ret
popa
jno
add
lds
xchg
cmpb
xor
jle
mov
jecxz
xchg
ds
pop
or
scas
inc
mov
dec
jbe
mov
pop
mov
adc
jbe
add
leave
push
fstpt
jg
pop
xchg
ja
repnz
xchg
clc
dec
xchg
sub
imul
je
test
inc
imul
cs
stos
and
out
pop
xchg
mov
cli
sahf
test
dec
mov
push
movsb
fwait
push
pushf
push
sbb
fwait
inc
outsb
cmpsb
pop
cs
ljmp
clc
push
daa
out
push
add
enter
insl
cmp
add
incb
sbb
mov
orl
arpl
stos
sbb
rcrl
dec
aas
test
sti
enter
mov
cmp
xor
lods
inc
cld
or
or
lret
add
into
jecxz
sub
xor
xchg
mov
adc
clc
xchg
and
ss
aam
mov
aaa
js
and
lock
pop
sbb
scas
xchg
push
repnz
bound
fs
ret
add
cmpsb
in
popa
int
lret
xor
mov
push
aaa
push
push
call
arpl
aam
cld
notl
cmp
mov
aaa
xchg
or
sbb
nop
xor
mov
or
inc
lea
imul
pop
jno
pop
dec
out
ss
push
mov
mov
in
mov
xchg
dec
cmp
add
jb
xor
int3
ret
jg
pop
cs
lret
cmpsb
es
sbb
int3
imul
adc
daa
cmpsl
adc
cmc
idiv
pop
inc
inc
adc
test
sub
ss
pop
lea
inc
add
or
mov
out
out
lds
lock
popf
adc
repz
and
push
and
mov
shlb
jp
movsb
popa
pop
pop
push
add
inc
out
rclb
or
push
movsb
inc
or
inc
mov
loopne
ss
outsb
imul
mov
ljmp
xchg
notb
mov
jl
pop
test
outsb
sbb
stc
lret
jns
fldcw
lret
dec
adcb
xchg
ljmp
std
sub
inc
cmc
jle
cmp
stc
push
mov
loopne
lret
orb
and
dec
leave
lea
lahf
fldcw
sbb
popf
xchg
mov
fimuls
dec
call
popa
ret
pop
orl
rcl
sar
repnz
icebp
rorb
pop
or
lahf
xchg
mov
test
sub
mov
popf
dec
ljmp
add
pop
je
pop
nop
sbb
sbb
dec
lds
add
pop
sbb
mov
mov
and
pop
addr16
dec
lds
fistpl
cld
sar
int
and
popa
mul
mov
cld
cwtl
lds
sbb
push
decl
pusha
sub
sub
pop
or
mov
and
xchg
push
rorb
jp
sub
xchg
push
ds
call
mov
mov
or
lods
scas
inc
rolb
cmpsl
neg
sub
into
jns
rolb
mov
mov
mulb
xchg
mov
lds
mov
mov
mov
fidivl
out
or
inc
lahf
pop
fists
sbb
pusha
dec
das
pusha
jo
push
xor
inc
cs
out
mov
test
jl
loope
in
adc
movsb
sar
and
jnp
lahf
iret
mov
loopne
dec
int3
xchg
mov
mov
cmp
scas
cld
mov
fisttps
xchg
adc
int
xor
pop
cli
and
jmp
in
sbb
orl
xchg
inc
rorb
in
mov
call
mull
pusha
and
xchg
in
subl
inc
imulb
loop
cltd
xchg
test
dec
jae
aaa
lret
pop
cmpl
xchg
dec
sbb
in
inc
xchg
or
lret
inc
iret
out
js
xchg
mov
cmpsb
inc
sahf
xchg
cmpsl
pand
mov
and
insb
lods
lds
out
dec
dec
mov
fstl
cmp
pop
xlat
jl
into
cmpsl
push
gs
cmpsb
push
inc
test
sub
cmp
sbb
fnstenv
dec
subl
outsb
mov
jae
enter
daa
hlt
int3
jecxz
push
movsl
mov
lret
mov
mov
lret
push
and
insl
mov
stos
mov
xchg
jp
push
sbb
test
jne
dec
das
sub
and
dec
dec
pop
sbb
mov
or
xchg
add
cmpb
testl
divb
sarl
test
orl
lret
add
inc
gs
sti
into
lret
fisubs
mov
push
sub
add
push
lahf
std
sub
or
inc
lods
xor
sbb
mov
add
xor
sbb
dec
pop
and
sbb
sub
pop
pop
das
cmp
imul
mov
in
lret
test
and
jne
dec
decl
je
das
mov
xchg
xor
xor
inc
nop
cld
dec
inc
push
stos
sub
or
scas
push
ret
arpl
rorl
pop
inc
scas
jns
mov
or
add
lahf
call
mov
daa
add
iret
test
mov
je,pt
negb
sbb
push
sbb
daa
fmulp
jl
imul
mov
mov
nop
xchg
mov
or
fisubrs
and
or
add
out
stos
add
cli
sub
popf
sub
test
out
mov
dec
and
outsb
push
arpl
jb
jbe
pop
xor
jnp
cmpsb
add
mov
mov
jne
jle
jne
iret
or
mov
push
cld
mov
cmpsb
push
jns
cmc
shlb
test
add
mov
lock
in
cwtl
std
dec
add
shrb
pop
push
mov
sub
orb
cmc
sub
mov
xor
add
std
pop
cmp
and
xor
jmp
jae
ds
loope
icebp
mov
jp
pushl
ja
call
fnstsw
pop
fdivl
setl
inc
or
dec
popl
adc
mov
pop
cmpl
jle
rcrl
iret
jo
mov
adc
fwait
pop
jnp
sub
or
lcall
arpl
out
push
idivl
cmp
and
push
sbb
shrl
dec
sti
xchg
sbb
iret
loope
jmp
insl
ja
inc
mov
and
jg
movb
dec
mov
loop
mov
mov
mov
test
sub
pop
mov
mov
lock
out
xor
fsubrs
cmc
xchg
mov
int3
sub
jbe
inc
pushf
push
or
lods
in
sub
movsl
and
mov
addr16
sbb
sub
or
jae
loopne
cmpsl
dec
inc
xchg
adc
xor
mov
test
fstpl
xor
mov
xchg
call
shl
js
lcall
sub
push
popf
sub
cli
in
rorl
iret
add
fdivl
jecxz
fcoml
xchg
loop
push
dec
lret
jb
jne
iret
mov
and
je
xchg
stos
cmp
push
xchg
fdivrs
dec
setl
mov
fsub
std
ror
pop
jmp
lcall
cwtl
push
pop
cmp
cli
dec
jmp
xchg
and
mov
jns
mov
ret
js
cmp
addr16
int
fsub
fistl
pop
stos
test
add
lock
mov
jmp
ret
out
lds
int3
cli
cmp
xlat
dec
out
fdiv
xor
ljmp
and
adc
fcompl
push
arpl
loopne
outsb
inc
test
cmp
push
jge
dec
pop
fdivrl
sub
cwtl
push
cld
cmpsb
das
mov
xchg
inc
aad
jle
sub
jbe
pop
pop
test
adc
sbb
mov
enter
cmp
fnstsw
push
cmp
mov
dec
pop
cwtl
add
and
dec
arpl
inc
ret
and
pop
push
cltd
adc
pop
outsb
inc
or
push
fdiv
xchg
fwait
cwtl
pusha
lret
jns
add
pushl
xchg
mov
mov
scas
xlat
into
dec
hlt
push
pop
cmp
jecxz
jp
dec
cmp
rorl
fdecstp
xor
movsl
xor
add
xor
mov
and
add
jbe
jp
ror
inc
mov
addb
xchg
add
mov
sub
pushf
jmp
or
push
push
push
jo
add
daa
adc
fwait
inc
sbb
add
mov
outsl
mov
out
pop
dec
or
es
push
out
lret
jg
test
pop
mull
ss
aam
inc
inc
loop
in
sub
pop
dec
dec
cwtl
dec
iret
lahf
stc
sub
rorb
sbb
cli
adc
or
xorb
xchg
cltd
pop
mov
jno
xlat
shr
cmpl
out
ret
call
cmp
add
dec
adc
add
mov
sub
loopne
sbb
jnp
mov
adc
js
insl
cmpsl
mov
xor
jle
inc
loope
dec
stos
adc
push
cld
stc
fnstcw
nop
jge
mov
jne
xchg
xor
lds
je
std
pop
test
std
shl
and
jne
jbe
outsb
jl
jle
mov
addb
dec
mov
mov
dec
cmpsb
xor
mov
lahf
dec
cmp
ds
xchg
add
xchg
pop
mov
pop
mov
rcrb
insb
inc
push
test
jne
rcll
test
loope
std
loop
mov
popf
sub
test
hlt
cwtl
mov
ds
mov
insb
out
ss
add
or
lcall
leave
fists
mov
or
sbb
aaa
cmp
mov
rclb
mov
call
cld
and
sbb
arpl
sbb
xchg
push
sub
pushf
out
out
jle
scas
xchg
sets
pop
and
pop
xchg
sbb
sub
push
fidivrs
mov
out
sbb
cmp
lods
scas
push
mov
mov
inc
movsb
clc
mov
repnz
push
in
imul
mov
and
inc
sub
sub
lahf
sbb
pushf
jae
xchg
jnp
and
sbb
ss
add
pop
add
fwait
add
in
outsb
xor
mov
cwtl
jbe
testl
mov
sub
test
nop
push
mov
add
sbb
add
stos
inc
mov
notl
sub
xchg
adc
idivb
inc
mov
ljmp
iret
shll
add
jae
mov
cmpb
mov
pop
loopne
cli
test
dec
cmpsb
sub
dec
push
loop
gs
fisubs
hlt
xchg
add
repz
scas
jge
scas
fdivr
mov
les
xchg
jl
imul
popf
mov
leave
xchg
stos
int
daa
loope
mov
pop
fstp
lods
lea
or
push
lea
mov
mov
loope
mov
push
cmpsl
add
inc
std
mov
in
mov
fisttpll
inc
mov
inc
sbb
jb,pn
insb
xchg
jnp
negb
jmp
in
xor
cld
pop
pushf
sbb
shrb
movb
and
add
or
pop
push
dec
movsb
or
movsb
sub
inc
lods
sti
or
mov
sbb
stc
or
sub
push
sub
and
mov
xchg
test
mov
in
repz
mov
push
inc
or
cld
adc
cmp
push
pop
mov
adc
out
lea
mov
scas
clc
mov
inc
jb
movsb
movsl
lahf
inc
jmp
cwtl
push
jl
push
out
sbb
into
iret
test
mov
loop
pop
cmp
hlt
mov
mov
filds
dec
push
sbb
push
push
xchg
xor
cmc
nop
dec
or
mov
sbb
sbb
jg
sub
inc
shlb
sarl
loope
sbb
mov
adc
mov
cld
out
dec
popa
loope
sbb
cmpsl
xchg
outsb
les
jbe
fs
repnz
test
outsl
inc
cmp
mov
test
notl
dec
push
xor
xchg
mov
push
rolb
out
mov
icebp
or
in
push
adc
push
mov
adc
ret
xchg
jnp
dec
add
ret
push
movl
push
movsl
mov
mov
push
pusha
cli
pop
dec
or
push
leave
adc
js
xchg
sar
push
and
out
clc
dec
xchg
scas
inc
add
mov
jno
sub
bound
dec
xchg
and
xchg
or
int
scas
mov
xor
push
aam
mov
jae
inc
inc
dec
pushf
dec
loopne
daa
sbb
das
xlat
dec
jns
daa
mov
aam
in
adc
and
mov
push
jne
loope
int3
iret
movsb
nop
dec
adc
dec
cltd
adc
cmp
jge
ljmp
mov
adc
hlt
push
enter
popa
aad
inc
aaa
jmp
jmp
ss
daa
cmp
lret
lock
dec
jg
and
lea
jmp
mov
add
ljmp
ret
adc
jns
ja
imul
push
cmp
and
add
lods
inc
pop
adc
xor
lock
orb
fidivl
push
mov
cli
push
call
push
push
por
cmp
xchg
loope
imul
divb
dec
pop
cmp
cmp
sbb
add
ret
subl
in
faddl
dec
cmp
mov
fnstsw
scas
outsb
pushw
or
das
ja
dec
out
xor
and
push
pushf
mov
movsl
adc
mulb
and
add
push
imul
insl
ret
adc
loopne
jbe
mov
sbb
mov
mov
adc
arpl
sub
stos
gs
in
pop
sbb
dec
pushf
popa
push
rcrb
mov
pop
xor
aas
xor
jne
mov
fmull
aaa
test
sub
adc
mov
or
mov
or
fcomps
loop
outsb
int3
inc
add
pop
mov
push
daa
xor
leave
fcomip
push
push
in
test
dec
enter
push
arpl
aas
in
xor
pop
mov
or
sbb
fiaddl
inc
out
cs
lods
mov
push
sub
lods
dec
cli
test
pushf
mov
ljmp
lock
cli
lcall
mov
sub
jg
loop
mov
ja
or
pop
mov
js
dec
cmc
mov
rcll
sub
xor
in
sbb
popa
mov
mov
push
mov
mov
mov
negb
cltd
push
inc
fcos
xor
mov
cld
pop
jmp
cmp
dec
mov
mov
mov
xor
push
jno
lcall
test
cmp
imul
or
add
test
jmp
sbb
mov
mov
rorb
mov
cwtl
push
out
adc
andnps
inc
jmp
in
inc
icebp
sbb
and
push
mov
xchg
icebp
loope
sti
imul
dec
testb
cmp
out
nop
call
sub
and
cmp
xchg
enter
bound
faddl
push
mov
lcall
jecxz
lret
xchg
fwait
sti
inc
jb
clc
mov
mulb
outsl
hlt
sti
xlat
test
lret
call
jle
repz
add
rcrb
sbb
sbb
cmp
les
mov
xor
inc
jl
mov
adc
aaa
lret
mov
cmp
mov
out
andb
inc
xchg
add
mov
xchg
adc
push
xchg
inc
jle
jbe
push
jb
sbb
stos
std
mov
pusha
inc
ja
jmp
pop
xorb
pop
push
loopne
data16
mov
add
add
mov
pop
xchg
je
test
dec
jge
mov
pushf
ret
dec
xchg
mov
and
in
cltd
es
loop
pop
andl
in
push
clc
xchg
lock
cmpsl
les
unpckhps
iret
push
pop
test
or
pop
jmp
test
loop
int3
add
jge
inc
mov
ret
cmp
and
mov
or
fisttps
mov
lret
aam
ret
incb
inc
push
test
cmp
add
ss
xor
cmpsl
xchg
lret
frstor
xchg
inc
dec
nop
pushf
and
es
add
repnz
dec
aaa
hlt
jle
cmp
jnp
sbbl
fwait
inc
push
add
outsl
out
mov
mov
dec
shll
jg
clc
push
add
sub
mov
adc
scas
ja
sbb
pop
push
shlb
push
fisttps
pop
and
test
ljmp
lock
not
mov
or
cmp
fistpl
repnz
lds
in
add
cmc
out
aas
lcall
mov
ret
or
loope
scas
add
cmp
ljmp
dec
push
xchg
xchg
ss
outsb
popa
in
scas
jo
xor
pop
push
pop
adcb
gs
lods
inc
ljmp
outsl
fsubrs
ljmp
in
ljmp
jge
lret
lea
add
ja
sbb
add
rcrl
pushl
mov
add
scas
test
xchg
cmp
and
cs
mov
xor
mov
fildll
jle
mov
inc
aas
jle
add
jge
dec
mov
ss
daa
std
or
pop
push
sbb
push
jecxz
and
jp
xchg
adc
std
push
insb
ljmp
test
inc
into
inc
mov
jecxz
dec
sahf
in
fnsave
enter
xchg
mov
jmp
scas
dec
add
loop
lds
repnz
icebp
xchg
iret
sbb
cltd
jl
rcr
cwtl
or
loopne
div
xchg
adc
in
add
mov
mov
ss
add
std
dec
lahf
pusha
cmp
fucomp
mov
movsl
dec
inc
aaa
lods
xor
cld
dec
repz
pop
leave
fwait
cld
out
mov
push
add
or
cli
mov
test
pop
movsb
std
lds
adc
mov
clc
xchg
jp
int
loop
int3
dec
jg
inc
dec
cmpsl
jmp
int3
arpl
ss
lds
add
vcomisd
push
stos
insl
inc
or
push
add
dec
xchg
dec
cli
or
sahf
stc
jne
aas
cmpsl
jmp
imul
dec
bound
sbb
inc
decb
daa
adc
sahf
cmp
or
in
xor
inc
std
jmp
in
aas
add
movsb
clc
rcrl
xchg
xor
add
stos
cmpsl
mov
cmpsb
inc
add
sbb
jg
pop
lods
mov
lods
das
pop
pop
movsl
mov
mov
lods
imul
or
cltd
call
inc
imul
xchg
jle
ret
jns
cs
pop
test
loope
in
adc
rcrl
pop
xor
test
jg
push
pop
stc
ret
sub
sub
rolb
xchg
inc
jl
push
and
lret
in
sbb
lahf
call
mov
pop
sub
test
push
lret
outsb
cltd
jge
shrb
push
aam
mov
add
repz
sbb
jno
in
andb
cmp
inc
cwtl
out
pop
inc
pop
out
cld
loop
or
lret
loopne
aad
rorl
sbb
and
aad
fsubrl
xor
scas
add
sbb
and
jae
add
jmp
call
mov
mov
or
xlat
ja
add
push
jl
aam
icebp
mov
and
ret
fisubrl
inc
popa
ja
cmpb
pop
aaa
cmp
fidivrs
sub
jg
dec
popf
jne
insl
test
aas
shlb
xor
insb
jecxz
mov
rcll
mov
orb
mov
dec
push
fmull
or
arpl
rolb
add
decb
xchg
sub
jge
mov
mov
and
adc
cld
mov
and
std
test
or
push
mov
mov
loopne
shr
rcr
sti
sub
fstl
lods
dec
mov
in
sbb
pop
dec
test
mov
xchg
pop
loope
mov
das
or
jp
mov
add
add
cmpsl
push
rclb
xchg
xchg
insb
or
mov
dec
scas
insl
push
xor
test
cmpsb
fcmovne
push
mov
jnp
lds
push
ja
dec
mov
jg
imul
cmp
sub
jecxz
push
fsubl
loope
shrb
xlat
and
mov
mov
or
xor
loop
dec
inc
inc
or
dec
push
mov
push
cli
sbb
add
out
scas
aad
jl
aaa
mov
je
add
xchg
clc
lods
or
and
pop
sbb
inc
shl
out
int3
xor
mov
loop
and
scas
test
sub
mov
std
fmulp
mov
rcll
jnp
mov
test
fdivrs
xor
adcl
pop
rorb
jb
inc
in
and
fs
sbb
iret
call
fidivs
popa
push
loop
mov
je
dec
xor
xchg
mov
inc
or
mov
add
test
mov
psubw
push
mov
sti
mov
dec
adc
push
xchg
fxch
in
pushf
clc
aad
jmp
rorl
jp
xchg
pop
dec
clc
and
in
push
sub
push
xor
aam
popa
inc
enter
rclb
js
or
mov
cltd
cltd
push
mov
mov
aas
xchg
testl
lret
jmp
outsl
lret
mov
cmp
iret
sub
daa
ret
fwait
jnp
mulb
mov
fwait
in
daa
pop
fstpt
push
cs
mov
fimuls
cmpsb
leave
push
cmp
inc
neg
jmp
push
pop
xchg
ss
jb
insb
fucomip
fstpt
out
xchg
mov
aaa
fmul
mov
jge
cs
lahf
insl
xchg
scas
inc
lret
inc
xchg
loope
lea
sbb
cmp
or
xor
int3
inc
je
ss
or
int
lods
sbb
repnz
aam
mov
out
sub
dec
int
sbb
fcmovnb
arpl
call
jmp
loop
and
fst
pop
lods
sub
sub
insb
mov
stos
std
aam
and
dec
scas
orb
add
ja
ds
addr16
sbb
shll
andb
xor
mov
inc
pop
sub
lret
add
mov
and
jno
repz
cs
cmp
ss
mov
cmp
stos
stc
ljmp
mov
data16
jg
cwtl
adc
pushf
mov
orb
enter
mov
aas
imul
dec
or
mov
adc
mov
inc
push
das
pop
jno
mov
daa
pop
jne
fcompl
pop
add
mov
mov
sbb
push
inc
push
dec
std
sub
push
or
fists
cltd
mov
pop
dec
cltd
loopne
out
movsb
mov
bound
test
cmpsl
cmc
aaa
jns
xchg
sarb
adc
mov
inc
inc
data16
jns
sbb
or
or
lret
data16
push
incl
loope
cmp
cld
fidivl
not
ret
xchg
daa
es
cmc
lcall
dec
jnp
mov
icebp
xchg
mov
arpl
es
sub
pop
jge
jl
mull
jbe
push
ja
mov
lds
ds
sub
aam
aaa
leave
mov
arpl
imul
xchg
or
sahf
insl
push
xchg
lods
popf
pop
cmp
pop
fistps
enter
out
ja
punpckhbw
je
and
popf
in
addr16
mov
loopne
push
popa
xchg
bound
cltd
jns
ljmp
adc
or
cmpsl
xor
xchg
push
lock
bound
lret
test
add
cwtl
cwtl
ret
inc
fadds
loope
inc
arpl
mov
xchg
pop
aas
xchg
and
or
mov
into
adc
out
xchg
ja
mov
sti
repz
ret
repnz
ja
das
xchg
sbb
cmc
in
pop
push
lret
nop
or
data16
test
lods
stos
xlat
inc
mov
or
aaa
hlt
pop
test
lds
int3
fmull
rcrb
sbb
sub
pop
pop
inc
pop
in
xor
lret
incl
mov
imul
fstps
test
nop
xchg
inc
cld
mov
adc
mov
mov
enter
sub
push
xor
ljmp
daa
jo
repz
lds
incl
add
fnsave
xchg
repz
mov
cmp
fisubrs
rorb
int
cmpl
stos
sub
decl
subb
into
inc
lds
pushf
or
sub
mov
mov
ss
jmp
jns
xor
mov
aas
adc
cmp
cmpsl
adc
mov
scas
cld
negl
dec
push
movsb
sbb
stos
mov
sub
push
dec
sbb
cmp
adc
addr16
leave
cmp
push
adcl
push
cltd
or
imul
frndint
fcompl
addr16
sbb
rol
push
rorb
ret
aam
mov
in
loopne
sar
and
dec
arpl
hlt
mov
push
and
dec
xchg
out
adc
stos
mov
subb
call
jmp
and
testb
inc
jb
add
rolb
stc
push
aas
jg
mov
cli
mov
xchg
lods
lods
cmp
push
mov
sarl
mov
lret
inc
andb
into
dec
lock
sahf
xchg
push
aas
cmp
fbstp
fidivs
push
cmp
imul
repnz
rclb
shlb
ret
sub
xorb
repz
mov
cmp
inc
jp
xor
and
call
adc
jb
xor
cmp
scas
cwtl
jno
mov
mov
jb
imul
das
repz
xchg
add
and
mov
pushf
test
dec
je
push
lods
or
jl
rep
and
xor
mov
sbb
sbb
dec
mov
testb
sub
lret
iret
sti
lock
idiv
push
call
repnz
stc
and
repnz
ljmp
std
movsb
sub
daa
and
adcb
ret
fisubrs
popf
xchg
mov
out
jno
mov
notl
jbe
stc
mull
arpl
sarl
dec
mov
into
rcr
ljmp
sbb
jg
hlt
inc
sub
mov
push
in
in
dec
inc
push
mov
xchg
ret
mov
mov
dec
pop
xchg
call
xchg
mov
cmp
sbb
xor
jle
fildll
mov
jecxz
push
xchg
mov
cmc
xor
mov
imul
xor
loopne
cmp
mov
leave
lods
and
shlb
ss
or
fmull
pop
repz
lcall
inc
std
fiadds
xor
popaw
mov
mov
pop
mov
jno
jl
jmp
dec
clc
xchg
push
or
in
bound
mov
testl
int
leave
mov
popa
iret
mov
aam
repnz
mov
jmp
fcompl
cmp
xor
mov
jo
stos
jg
sbb
clc
xchg
ds
cmp
adc
dec
sbb
ffree
aad
les
mov
xor
enter
adc
push
mov
xlat
and
sub
mov
movl
inc
out
mov
stc
call
xchg
call
mov
push
mov
insb
adc
sbb
sbb
cmp
sbb
out
sbb
imul
lret
das
rol
nop
repnz
add
loope
pop
xchg
dec
push
lret
pop
lcall
xor
cwtl
jnp,pn
jae
add
dec
lods
dec
into
mov
cmp
inc
div
sbb
xchg
or
scas
pop
push
mov
push
lea
push
and
jmp
sti
jl
lret
ja
sub
push
in
xchg
gs
lods
test
mov
iret
dec
and
jg
dec
jmp
sbb
jmp
fwait
fwait
sub
stos
aaa
bts
ror
or
mov
jae
xchg
xor
mov
xor
add
test
dec
cs
jno
jg
push
or
adc
into
loopne
and
in
or
mov
xchg
lret
daa
in
divl
testb
push
xchg
push
dec
stc
dec
adc
outsl
pushf
jo
xor
add
push
packssdw
adc
adc
or
js
test
jecxz
jns
cmp
shlb
push
popa
adc
shrl
shrb
jecxz
popa
mov
push
loop
ret
mov
sbb
into
imul
dec
stos
add
out
lcall
mov
jns
jge
ljmp
adc
mov
dec
adc
or
pop
fdivs
ss
test
subl
jecxz
push
sbb
outsb
jecxz
lods
out
dec
jo
mov
hlt
mov
movsl
dec
jno
fdiv
or
aad
mov
cs
cmp
cld
inc
popf
cs
popf
mov
lahf
and
cmp
cwtl
or
test
jecxz
dec
cmp
cmp
sbb
stc
rorb
int
pop
ljmp
xchg
mov
loop
dec
arpl
flds
jg
out
mov
sub
or
cmp
xchg
mov
pusha
dec
testl
ja
in
cltd
pop
xchg
dec
sbb
sub
movsl
dec
cmpsb
mov
in
or
and
xorb
ret
xchg
lods
es
mov
cmp
mov
mov
or
inc
in
cltd
fstpt
jp
push
inc
or
sub
jle
mov
jp
push
in
xor
stos
inc
into
mov
sbb
popa
dec
add
hlt
add
sbb
mov
jg
mov
xor
aas
aaa
adc
or
dec
pushf
rcr
mov
jne
dec
into
in
rcr
sbb
adc
repnz
sti
xor
or
cmp
mov
jne
inc
or
inc
pop
aad
mov
xlat
popa
adc
cmp
push
into
dec
loop
or
sub
pop
loope
cli
dec
or
cmc
push
add
movsb
jne
and
cmpsl
sbb
or
jge
xchg
mov
add
sub
and
xchg
arpl
adc
lods
iret
int
hlt
mov
xchg
mov
imul
jnp
cmp
xchg
cmp
aas
cmc
lea
mov
in
add
or
jecxz
dec
mov
mov
jecxz
mov
nopl
xchg
pop
pop
mov
mov
cmp
cmc
xor
lea
push
push
dec
in
add
pop
das
aaa
into
pop
sub
in
out
mov
shl
push
add
mov
jmp
adc
mov
adc
mov
lcall
loop
xor
sub
mov
push
dec
adc
sarb
sahf
rol
push
and
xor
ja
stos
mov
out
filds
xor
aaa
sbb
jb
pop
mov
repnz
test
es
scas
mov
loopne
inc
sbb
fwait
lods
daa
int
cmp
push
sub
mov
call
dec
aad
pop
aaa
out
or
nop
adc
jne
loop
add
fisttpl
adc
jne
cmc
loop
pop
ret
mov
push
pop
out
fsubrl
xchg
jecxz
test
inc
cmpl
sbb
or
rcr
clc
jns
mov
mov
addr16
jb
in
sub
lods
aas
shll
or
into
bound
mov
pcmpeqb
pop
sub
mov
pop
pushf
push
inc
cmp
je
lret
fucom
sub
cmpsl
out
mov
pop
jo
mov
cltd
cmp
mov
adc
pop
mov
cwtl
pop
shrb
xchg
mov
xchg
popf
xchg
sub
pushf
idiv
lret
ja
jg
push
sub
pop
adc
sbb
movsb
lods
rclb
out
fs
gs
sub
xor
lods
call
aad
xor
mov
out
aaa
leave
jecxz
xchg
push
loopne
aaa
cwtl
jl
jg
lret
test
mov
aaa
and
jg
sub
adc
and
xchg
mov
add
pop
xchg
test
xor
sarl
dec
sti
sub
fsub
mov
test
hlt
mov
es
mov
dec
out
or
jae
add
push
cmp
nop
outsb
mov
cmp
push
mov
out
fcoms
inc
push
and
push
mov
insl
and
cmp
lahf
xchg
dec
inc
push
fbstp
mov
lahf
es
dec
in
das
adc
lret
sub
into
cmp
scas
sub
leave
shlb
mov
fldt
dec
xchg
jge
loope
cld
add
aas
xor
shrl
ljmp
lods
icebp
push
aas
cwtl
cmp
int3
cmp
gs
inc
sub
jle
sahf
xchg
jno
and
add
xchg
rcll
mov
fs
data16
mov
sbb
leave
jge
js
outsl
leave
sarl
cmp
lret
lcall
pushf
xchg
js
dec
int3
ss
dec
or
add
int
adc
sbb
cmp
lock
in
add
xor
out
lret
movsl
xor
stos
imull
fwait
adc
out
sub
stos
testb
ja
fiadds
addr16
cmp
xchg
insb
mov
addr16
cltd
push
clc
jo
insb
push
push
add
mov
jmp
fadds
xorl
inc
orl
cmp
ja
adc
mov
lahf
shlb
jecxz
popf
xchg
out
push
pop
cmp
and
cmp
stos
dec
xchg
fistl
jg
fmuls
jae
repz
out
popf
push
std
in
icebp
pop
dec
xchg
popa
inc
sub
push
repz
out
sahf
in
int
add
or
xchg
xchg
jle
adc
mov
mov
and
xorl
loopne
xor
ds
popa
nop
xchg
jbe
mov
and
lret
dec
test
fsubl
pop
jge
jae
aad
or
cmp
clc
and
popa
bound
pop
mov
pushf
pop
ss
push
fs
out
rolb
shlb
stos
mov
icebp
jl
push
cmp
sti
mov
add
cmp
daa
mov
loopne
push
dec
dec
adc
xor
shrl
loop
flds
sbb
aad
push
pop
dec
push
xor
sub
addl
ljmp
dec
inc
test
jg
fs
push
mov
repz
and
sub
mov
andb
inc
iret
adc
enter
jnp
add
int
inc
rcrb
das
call
add
js
mov
inc
dec
cmpsb
dec
sub
outsb
xor
adc
push
ficompl
out
fisttpl
scas
daa
dec
cwtl
lock
dec
sub
or
push
rcr
in
in
shll
lret
mov
add
fcmovb
in
mov
stos
out
push
inc
loopne
loope
pop
and
lret
negl
inc
mov
loop
dec
aaa
pusha
sbb
andl
scas
xlat
pmulhw
out
xchg
testb
clc
inc
fcomps
xor
fimull
inc
in
movsb
push
cld
nop
psubd
andl
cmp
ja
inc
stc
push
sub
ljmp
fsubrl
cli
cmpl
lret
add
cmp
or
xchg
movsb
or
in
mov
jnp
loopne
je
jge
daa
inc
ret
jmp
movsl
and
add
arpl
sbb
sti
in
pushl
mov
inc
inc
or
xchg
jg
add
loopne
xor
test
sub
rcr
mov
jmp
lahf
xchg
jns
mov
inc
in
loope
in
inc
lret
arpl
push
cmp
subb
fwait
sub
fdiv
adc
or
clc
scas
inc
hlt
adc
fwait
xchg
and
lock
dec
dec
call
scas
add
repnz
test
clc
aam
fstpl
sahf
stos
or
shll
out
cltd
shlb
loope
jp
pop
les
xor
jle
rcll
push
sbb
stos
pop
xchg
test
mov
jb
mov
movsl
jmp
fcmovnu
insl
and
xchg
push
xor
mov
and
xor
mov
pop
aaa
and
aaa
repnz
insb
mov
cmc
loop
lcall
fs
shlb
cmc
das
aas
sub
jae
mov
xchg
push
xchg
rcrl
test
in
lret
cltd
and
imul
or
shrb
or
out
xor
loopne
fcompl
lods
xchg
mov
cmp
pop
ds
aad
test
lods
repnz
or
cmp
adc
in
pop
and
es
jmp
sub
cs
push
push
adc
or
mov
fadds
lods
rcrb
xlat
repz
insl
inc
mov
jmp
jge
and
jns
jl
mov
clc
in
jne
clc
dec
pop
push
test
jns
xchg
mov
int3
xchg
mov
ja
xor
pop
addr16
dec
and
push
cmp
and
pop
cmp
jle
mov
out
je
xchg
xor
fwait
and
fldenv
repnz
mov
push
lcall
pop
push
xchg
mov
add
mov
mov
vpmacsdql
push
sahf
ret
fsubrl
sub
adc
lcall
out
test
test
push
sub
push
jno
and
or
jb
lcallw
ffreep
hlt
lret
aad
xchg
outsl
cmpsb
jp
xor
inc
out
mov
jno
or
add
andb
sbb
movl
movsl
std
lret
or
xor
inc
in
mov
and
jg
pop
lds
loope
out
push
add
movsb
mov
cwtl
dec
jns
outsb
into
add
popa
and
repnz
je
or
cmp
dec
imul
mov
dec
stos
add
je
jne
inc
xor
add
enter
scas
inc
nop
scas
add
pop
or
mov
xor
sbb
or
sub
jecxz
cld
cmpb
cmpsb
dec
xchg
rolb
lret
and
jb
out
das
loope
xor
xor
iret
bound
or
xor
add
xor
or
aaa
jecxz
push
push
adc
iret
pop
mov
out
pop
scas
pop
sbb
adc
in
or
lods
shll
dec
inc
movl
mov
xchg
std
test
stos
pop
mov
adc
arpl
popf
and
mov
arpl
and
or
push
mulb
adc
push
movsb
cmp
mov
adc
jecxz
enter
sub
add
xchg
push
cld
jnp
sub
and
dec
sub
xchg
dec
cmp
dec
pop
pop
xor
lahf
aaa
adc
popa
pop
or
out
cmp
loope
xor
loopne
lret
dec
loopne
nop
lods
mov
push
iret
insb
pop
out
push
cmp
push
adc
movsl
jg
pop
mov
loope
dec
push
test
and
adc
inc
jae
loope
xlat
cmp
jae
inc
fisttpl
sub
jnp
or
ljmp
sbb
jle
dec
es
outsl
and
fistpl
jns
lods
inc
dec
in
xor
daa
dec
fisttpl
mov
sbb
pusha
inc
je
push
lods
cmpsl
in
and
adc
jne
mov
mov
mov
nop
mov
push
movsb
push
lret
movsb
int
pop
stos
push
js
xchg
fldcw
scas
out
push
int3
mov
pop
insb
mov
shlb
push
cmpsb
mov
fucomp
loopne
adc
fdiv
sub
ret
add
rclb
test
or
add
jb
adc
addr16
sahf
cwtl
xor
mov
icebp
pop
ficomps
roll
call
sbb
popf
fidivrs
mov
aad
out
xchg
xor
test
sarl
pop
sub
loope
inc
sbb
addl
ret
adc
pop
fisubrl
jle
gs
das
ret
pop
push
push
adc
enter
sbb
rcrl
push
stc
sub
call
and
lcall
sti
lahf
fnstcw
mov
jl
js
xchg
mov
inc
xchg
pop
push
shrl
jmp
pop
and
xlat
inc
cltd
daa
ds
mov
mov
cmp
popa
lret
adc
mov
mov
les
andb
adc
jnp
in
stc
xchg
lds
movsb
mov
fists
lock
sbb
jl
adc
xor
scas
mov
push
dec
jle
out
push
aas
cltd
imul
xchg
mov
adc
je
xchg
rcll
pop
mov
adc
or
mov
popa
scas
jnp
fistl
sub
cmc
add
cld
sahf
andl
mov
inc
out
out
mov
cli
and
das
sbb
movl
xor
xor
call
setle
int3
jnp
xchg
call
int3
and
lret
dec
mov
movsb
inc
sbb
push
cmp
outsl
fmul
adc
hlt
movsl
and
xor
mov
inc
sub
jmp
sbb
mov
sbb
sbb
aas
ss
dec
aaa
sub
pop
mov
mov
inc
pop
mov
jb
mov
imul
jno
jge
mov
cli
insl
loopne
jns
scas
int3
pop
aam
imul
loopne
fcompl
or
outsb
dec
mov
push
sbb
mov
dec
mov
xchg
repnz
call
mov
sbb
jle
stos
xlat
into
cli
gs
sti
lods
and
mov
outsl
jnp
jae
ds
xor
lea
xchg
mov
mov
into
mov
dec
addr16
sahf
mov
pop
mov
xlat
sbb
fsubrl
ret
push
cmp
sub
hlt
lret
cli
jns
cmp
mov
cmp
xchg
inc
outsb
sub
cltd
outsb
fadd
sub
mov
stos
or
decb
rorb
push
mov
and
pop
xor
pop
sub
lcall
mov
mov
xchg
das
outsb
adc
mov
cmp
jp
cmp
adc
pop
push
add
out
lret
dec
movsb
xor
std
pop
sub
sbb
mov
cs
pop
xlat
adc
adc
lods
in
add
lock
fimull
mov
pop
sub
cmp
sub
jo
pop
les
sub
and
xor
mov
push
pop
sti
fs
loop
pop
dec
test
jmp
es
fsubr
pushf
scas
icebp
mov
adc
pop
mov
sahf
and
test
pop
push
adc
shr
aaa
xlat
sub
adc
in
daa
sbb
adc
call
dec
sarl
sbb
nop
ljmp
pop
outsb
in
gs
fucomip
xlat
pop
pop
sub
sub
fisubrl
sub
jg
cmp
rcr
and
out
mov
xchg
pop
add
mov
or
movsl
xchg
jl
pop
pop
push
fnstenv
mov
and
test
mov
xor
or
cs
fdivrs
iret
jno
xorb
push
lods
pop
in
lock
sahf
jp
sub
mov
dec
or
outsl
imul
aad
dec
ret
pop
jle
mov
sub
imul
in
test
push
ret
test
fs
mov
cmp
lret
push
adc
int
rolb
cmp
popf
test
mov
mov
or
cmc
and
sub
test
pop
cwtl
jge
pop
mov
inc
in
sahf
aam
inc
ds
pop
xor
stos
jg
int3
xchg
xchg
cmp
pop
mov
xchg
mov
jb
imul
dec
pop
xchg
pusha
mov
insl
popa
jp
and
push
add
sbb
imul
das
inc
pop
pushl
mov
into
or
sbb
and
xor
xor
add
xor
loopne
ss
push
cmpsl
pop
push
push
cld
stc
movsb
xchg
popa
aam
fwait
movsl
push
andl
lds
insl
hlt
dec
push
jnp
out
push
ret
cli
dec
js
adc
and
push
mov
movsb
in
xacquire
sub
test
data16
sbb
mov
pop
aas
ror
push
sub
or
dec
sbb
scas
das
loopne
mov
in
ret
sub
cs
test
fadds
fistpll
pop
adc
aad
repnz
test
sbbb
rclb
incl
les
addr16
das
std
and
pop
jno
ljmp
addl
jge
or
in
mov
or
sub
inc
sub
pop
sbb
into
pop
data16
movsb
les
jle
shlb
jmp
ja
mov
loope
test
mov
repz
pop
fimull
cmc
dec
mov
dec
fwait
add
lcall
mov
ret
lods
mov
add
loopne
aad
inc
bound
xlat
xor
ljmp
and
mov
push
jb
or
out
sub
push
ja
jno
jmp
leave
loop
mov
xchg
into
mov
lods
pushf
ja
add
xchg
mov
fs
mov
adc
out
pop
scas
repz
cmp
das
adc
hlt
call
hlt
fidivl
xchg
decb
inc
scas
add
add
cmp
mov
int3
push
fstl
inc
xchg
jnp
xor
je
or
ss
in
mov
add
xchg
hlt
adc
in
push
nop
push
jge
cld
lea
outsl
cli
sbb
sub
sahf
repz
jg
cwtl
ficoms
mov
scas
arpl
mov
xor
lret
inc
int3
inc
xchg
sub
into
call
jae
mov
ja
cmp
imul
ja
test
out
push
rcrb
subb
sti
aam
lret
jle
cmp
mov
inc
stc
inc
fldenv
dec
nop
inc
cli
lock
scas
jle
xor
xchg
lret
mov
dec
les
imul
or
mov
mov
in
mov
divl
adc
xchg
cwtl
mov
mov
mov
jle
adc
sahf
add
add
arpl
sbb
fstps
xor
adc
or
nop
test
out
aas
out
pop
pop
mov
adc
shlb
push
xor
jb
cli
cltd
movsb
int3
xor
test
inc
cltd
repz
std
popa
add
jnp
fcoml
inc
imul
sbb
fstl
cmp
int3
in
ss
adc
push
int
mov
adc
int3
pop
mov
sbb
fwait
lret
sbb
cltd
push
jp
cli
movl
test
sub
mov
movsb
daa
out
mov
pop
jae
test
inc
pop
and
push
icebp
scas
adc
sar
cli
jo
sti
inc
mov
inc
mov
out
scas
pop
int3
cwtl
mov
push
lcall
cld
cmp
inc
out
and
xor
std
aad
fcompl
out
or
lods
shrl
nop
aad
lea
dec
push
sub
xchg
pop
cmp
jae
sbb
add
es
lods
in
add
sub
adc
out
lods
decb
aas
sbb
fidivrl
pushf
fcomi
jne
adc
sbb
das
cwtl
jmp
adc
dec
mov
and
pop
jb
mov
inc
loopne
adc
testb
jp
mov
pop
adc
mov
pushf
mov
rorb
lods
stc
pop
xor
fs
jle
ds
stos
cmp
fdivp
int
mov
xor
cltd
adcb
push
mov
xor
call
dec
jbe
jl
cmpsb
sub
inc
movb
inc
add
jbe
dec
fdivrp
sbb
mov
test
lcall
pop
xchg
push
mov
cmpsl
xor
dec
addr16
fisttpll
adc
lret
rcl
or
or
mov
sbb
xlat
lods
cmp
je
call
dec
xorb
sbb
mov
mov
xor
jl
sbb
inc
and
mov
mull
xlat
icebp
adc
flds
add
into
mov
push
insl
mov
in
int
mov
pop
or
add
ret
test
pop
mov
pop
nop
movl
sbb
dec
icebp
or
xchg
call
jecxz
inc
out
movsl
dec
call
movsb
mov
mov
aaa
js
mov
in
or
dec
and
mov
add
mov
out
jecxz
xor
xor
jle
cmp
fmuls
cmp
js
dec
lret
in
cli
outsl
sbb
sbb
adc
jle
in
xchg
jo
pop
sub
xchg
sub
sbb
xchg
enter
hlt
fsub
iret
popf
je
sbb
pop
pop
mov
std
add
mov
sbb
lahf
mov
push
out
add
cli
lea
andb
icebp
inc
inc
rorb
jb
aas
add
or
add
xchg
subb
jno
jg
lea
or
mov
cmp
insl
popa
jb,pt
push
inc
or
or
fnstcw
mov
pop
jle
arpl
inc
inc
inc
insl
xchg
push
cmp
jmp
sbb
icebp
and
inc
imul
xchg
das
inc
ss
int
xor
jecxz
cs
xchg
push
int3
or
pop
add
movl
popa
ljmp
ja
jl
add
fs
pop
push
into
insl
sub
mov
dec
stos
xlat
or
adc
lcall
sub
inc
xor
nop
xor
and
xchg
add
dec
inc
es
loopne
pop
lds
jbe
flds
lret
mov
rclb
add
sub
xor
lret
stos
sbb
inc
data16
xchg
fwait
clc
movsl
outsb
incb
sub
in
mov
aas
or
sbb
add
jb
mov
cmp
cmpsb
add
or
imul
mov
mov
dec
add
jl
adc
inc
pop
addr16
fisubs
sti
daa
add
pop
inc
repnz
fdivrp
jo,pn
dec
jecxz
jnp
addb
sub
cld
fisubrl
idivb
xorb
mov
or
fstpt
popa
notb
mov
dec
push
les
js
sbb
popa
aas
jb
insl
cltd
or
pop
insb
mov
dec
jnp
xchg
outsb
lock
push
mov
icebp
and
dec
js
fwait
xor
out
jne
or
push
repz
rcll
pavgw
inc
and
fisubrl
popf
push
clc
jp
cmp
scas
sbb
lcall
lods
sub
mov
and
inc
fisubs
jo
paddd
sti
adc
fistps
loopne
clc
pop
jo
xor
adc
and
jns
dec
add
sahf
jl
lock
jmp
xor
jnp
sar
and
jne
loop
adc
loopne
mov
out
scas
jl
out
fcmove
xchg
fcmove
pop
xor
mov
sti
mov
push
dec
insb
or
add
scas
lret
push
mov
repnz
lods
cmp
lret
cmpb
in
adc
push
inc
add
fnsave
push
push
add
shrb
and
sub
out
lahf
sarl
std
arpl
int3
mov
mov
pop
jge
lahf
lcall
imul
leave
testl
movsb
aam
jmp
jecxz
int
sub
sbb
sbb
pop
mov
mov
daa
lods
pop
adc
fstpl
lds
into
fimuls
sti
push
mov
mov
sub
gs
int3
mov
push
push
cltd
sti
jb
lcall
push
cmpl
data16
mov
jb
rcrl
mov
cwtl
sti
sub
int3
jmp
inc
or
lds
dec
mov
repnz
xchg
push
insb
cmp
mov
cld
clc
xor
xorl
adcl
or
inc
pop
sub
mov
fidivs
int
jnp
ret
test
testl
pop
push
xor
stos
sbb
mov
sti
jnp
popf
jge
out
pop
sti
cmp
in
xchg
sbb
inc
clc
adc
sub
dec
cmp
cmp
inc
nop
std
xchg
push
loop
popa
mov
push
mov
ret
test
pusha
fistpl
or
aam
outsl
push
inc
dec
int
fwait
fs
push
lea
stc
mov
inc
adc
cmp
repz
and
mov
mov
test
pop
sbb
push
ss
mov
jae
cmpl
dec
cmp
mov
aaa
rorl
addr16
std
mov
xor
outsb
mov
aam
arpl
cli
mov
mov
dec
std
and
jae
mov
pop
mov
jg
sahf
mov
push
push
stos
or
stc
lret
mov
add
mov
aas
and
mov
mov
cmp
push
mov
jecxz
andb
stos
pop
lahf
lock
int3
sti
subb
es
sbb
sub
push
jmp
rcll
into
pop
psubd
pusha
cmp
fst
mov
out
dec
add
pop
jb
ds
lret
push
lds
int
popf
decl
mov
push
adc
sub
xlat
pop
cmpl
xlat
push
and
mov
xchg
cmp
mov
jg
lcall
or
push
aaa
mov
shrl
xor
mov
outsb
cmp
test
dec
aad
pusha
in
mov
ret
inc
movsb
mov
and
outsb
cmp
ret
aam
jns
std
ret
mov
dec
dec
lcall
rcrl
sub
add
xor
out
cltd
aaa
bound
xor
stos
adc
xor
clc
popf
mov
mov
sub
cmp
out
lcall
dec
add
clc
pop
icebp
sub
pop
int3
dec
or
add
or
or
mov
andb
push
dec
dec
lods
scas
xchg
push
nop
mov
scas
cmp
lret
mov
je
sbbb
adc
stc
pushf
mov
push
int3
shll
int3
fld
sub
lcall
xorb
dec
adc
subb
push
mov
push
cs
xor
cld
in
jmp
inc
scas
fidivl
leave
add
sbb
cmc
repnz
xor
and
add
sbb
cld
cwtl
cmp
and
lret
and
rorb
push
ss
aas
pop
xchg
xor
lret
mov
aas
add
sbb
mov
mov
sbb
fidivrs
mov
sub
or
sub
jge
out
cld
arpl
mov
mov
or
sub
add
hlt
mov
pushf
mov
out
in
pop
mov
sbb
push
mov
mov
jle
mov
xchg
repz
push
push
sarl
cwtl
ja
popa
inc
and
dec
or
xchg
mov
adc
xchg
and
cli
xchg
hlt
xchg
mov
push
jl
pop
rolb
lock
ret
and
mov
add
inc
sbb
xchg
push
lds
or
flds
adc
outsb
loopne
stc
adc
in
cwtl
sub
jo
fnstenv
ss
cmc
add
sbb
push
pop
push
jp
mov
shll
jp
adc
jge
mov
sbb
out
imul
push
sub
cwtl
into
pop
mov
and
lret
fildl
aam
add
int3
lock
mov
dec
mov
or
pop
mov
push
cmp
jl
idivb
adc
outsb
or
rcll
test
cmc
clc
mov
jle
sbb
scas
outsl
mov
movsb
js
jge
shrb
sub
and
push
pop
fistl
cmp
movsb
fstpt
addr16
divl
xchg
push
and
sub
lret
mov
sarb
xor
test
push
shl
cwtl
push
dec
in
repz
sbb
push
dec
sub
push
fisttps
pop
mov
ljmp
xchg
mov
cmp
out
in
fstpl
pop
test
in
mov
mov
fidivrs
mov
rcrl
dec
add
leave
xchg
stos
mov
push
xor
out
testb
add
lret
hlt
add
rcl
movsb
xchg
loope
mov
repnz
scas
loop
push
dec
xchg
mov
icebp
sub
testb
inc
push
orb
cmp
test
ror
jbe
rorl
push
nop
enter
pop
daa
cld
jg
push
mov
jge
xor
and
push
pop
xchg
xchg
sub
and
daa
push
addl
mov
negl
add
addl
mov
or
xor
ret
and
es
std
add
mov
shrb
lds
mov
in
push
sti
gs
shll
idiv
jp
xor
fsubs
cmpsl
mov
lods
or
pop
and
aam
lods
rorb
xor
jp
jle
xchg
icebp
mov
lods
outsl
pop
pop
jne
stos
or
push
pop
sub
mov
sbb
inc
sbb
add
push
rcll
lahf
pop
rcll
cltd
pusha
negb
or
filds
cmpsb
dec
jns
jnp
divl
cmp
inc
andb
pushf
add
xor
sahf
xchg
pop
leave
pop
adc
jmp
add
adc
and
int
rcrb
andl
sbb
xchg
push
mov
out
out
roll
popf
fwait
popa
sub
fldenv
lods
ds
mov
inc
push
mov
sub
fbstp
flds
sub
gs
cmp
je
stos
pushf
imul
jl
mov
stos
sub
jmp
xor
mov
adc
xchg
callw
pop
sub
lock
cs
pusha
outsl
lds
mov
lods
adc
mov
jne
cmc
int3
jmp
dec
andb
inc
icebp
jae
push
rcrb
inc
adc
stos
mov
xchg
dec
imul
inc
xor
jp
cli
sub
xchg
fldz
sbb
add
repz
add
fisubrs
jp
mov
xchg
arpl
pop
xor
mov
adc
test
rolb
repnz
test
es
jg
add
mov
jecxz
xchg
dec
dec
addr16
mov
inc
lea
cld
movsl
dec
out
adc
xchg
push
repz
sahf
data16
sub
lods
mov
divb
xlat
cmp
mov
jp
lods
das
xchg
popf
push
inc
loope
jmp
mov
inc
out
mov
lahf
fmull
mov
xchg
push
and
xchg
lcall
mov
cli
sbb
mov
in
sub
ds
mov
sub
je
mov
ljmp
inc
cwtl
mov
cmp
pop
lret
xchg
xchg
cmp
sbb
filds
popfw
push
lcall
pop
or
mov
inc
lock
aas
xchg
mov
fs
or
pop
dec
and
movsl
inc
dec
call
dec
pop
insl
outsb
inc
inc
nop
lock
mov
cwtl
cmpsb
data16
loope
cmp
mov
clc
out
inc
lods
pop
insb
sub
movsb
jnp
jae
idiv
lods
sub
fsubrs
cmpsl
pop
aaa
mov
mov
push
xlat
repnz
mov
ljmp
jno
scas
hlt
ror
lret
xchg
and
adc
xor
in
mov
xor
dec
inc
sbb
les
push
cmp
cmp
stc
mov
ret
repnz
arpl
adc
nop
out
jnp
and
data16
incl
outsb
push
rcr
test
push
es
xchg
lret
ret
fldl
lret
and
dec
popl
xchg
clc
test
cld
int3
mov
cmp
jmp
xor
dec
nop
inc
xor
mov
cwtl
lcall
xchg
mov
jmp
frstor
push
push
push
mov
xchg
mov
flds
inc
adc
sub
adc
cmp
mov
cmp
dec
push
out
inc
lret
or
xchg
inc
dec
daa
inc
push
orb
scas
lea
iret
pushf
lcall
pop
stos
inc
cmp
pop
lock
dec
xchg
outsb
sbb
jo
fsubrp
mov
sub
js
loopne
fnstsw
and
sub
fldcw
add
adc
or
lods
stc
movsb
and
mov
es
mov
or
adc
mov
add
mov
cld
loopne
pop
jle
jae
xor
jmp
inc
push
xor
cmp
negb
scas
ja
adc
iret
jb
cwtl
addl
test
or
lods
inc
cmp
jl
add
das
repz
adc
rclb
popf
xchg
in
push
pop
ljmp
lret
xchg
addr16
xchg
pop
mov
mov
add
mov
adc
push
in
add
pop
js
and
and
mov
push
lcall
add
divl
mov
scas
idiv
les
mul
sub
test
jb
pop
movsb
insb
js
dec
pop
cltd
aaa
jno
movl
xchg
cs
das
inc
or
popa
loop
aad
adc
xchg
std
and
mov
inc
int
ss
adc
jo
push
iret
mov
or
into
roll
mov
inc
test
ljmp
pushf
loopne
lds
pop
sbb
mov
pop
inc
jno
jg
fdivp
inc
xorps
out
cmp
es
cs
testl
xor
inc
mov
pop
insb
xlat
daa
sub
cmpsl
rolb
popa
push
mov
xchg
clc
xchg
mov
lds
push
inc
and
int3
into
jl
notl
jno
dec
pushf
in
or
and
stc
int3
mov
xchg
pop
mov
add
scas
mov
fdiv
sbbb
stos
fisubrs
adc
push
pop
insl
cmp
cmp
add
cltd
sarl
daa
in
xchg
cltd
adc
stc
sbb
loop
mov
pop
lret
cmp
inc
loop
pop
jb
push
push
lret
jno
in
pushf
cld
inc
sarb
xor
fisubrl
jg
mov
jp
pop
loope
rclb
mov
mov
push
xchg
lcall
mov
fiadds
dec
jne
mov
imul
ret
stos
into
mov
cmpsb
out
iret
mov
add
mov
lock
sub
pop
mov
mov
sub
outsb
and
and
jl
pop
push
mov
aaa
push
pop
mov
jp
xchg
and
inc
repz
adc
movsl
arpl
dec
dec
xor
in
add
cmpsb
pop
add
incb
add
adc
xchg
jecxz
stc
xchg
or
js
dec
ss
imul
dec
rcl
out
and
test
aad
mov
and
mulb
jmp
xchg
es
jmp
ss
dec
ja
cld
cld
fisubrs
sub
fcomps
mov
xchg
movsb
repnz
mov
ds
or
out
xchg
mov
mov
outsl
jb
mov
xchg
popf
mov
sub
jnp
adc
inc
repnz
dec
mov
sub
adc
xor
mov
lods
and
lret
data16
lahf
push
pop
enter
xchg
cmp
test
add
fidivrl
push
sub
sahf
push
sar
test
or
xchg
push
jl
add
pop
int3
or
dec
dec
and
dec
and
cmpsb
ret
push
aam
into
iret
jno
jo,pn
aaa
jnp
pop
inc
aad
in
lods
cld
lods
rorb
mov
xor
stos
lock
ficomps
mov
pop
sub
inc
pop
ret
repnz
adc
mov
and
xor
dec
rcll
fs
std
cwtl
lods
push
test
mov
xor
pop
push
cltd
sbb
es
or
pusha
std
mov
rcrl
mov
or
mov
pop
push
imul
sahf
xchg
ret
push
mov
ljmp
push
xchg
mov
push
and
or
or
xchg
jl
negb
fdivr
jle
scas
cmc
inc
cli
sbb
stos
mov
out
push
rcrb
bound
or
shlb
pop
push
fsubrl
nop
cmp
scas
and
fldl
daa
ror
call
test
add
jns
and
mov
sub
sbb
sbb
or
loopne
push
cmc
int3
outsb
mov
insb
clc
aad
mov
jg
lods
repz
movsb
sbb
ja
mov
inc
xor
jecxz
pop
cli
pop
xchg
pop
or
jno
out
std
jp
popa
mov
and
ja
adc
shrl
stos
jmp
repz
jge
mov
and
push
in
int3
repnz
mov
cwtl
cmc
into
jg
cld
in
sub
xchg
cmp
cmpsl
cmpl
inc
lcall
add
aaa
lret
xchg
cmp
lea
mov
std
mov
int3
sub
dec
stc
lods
mov
mov
inc
inc
or
mov
and
inc
clc
dec
ud2
cwtl
fcmovu
push
push
xor
aas
sbb
sbb
mov
shll
fsubl
shr
pusha
jne
and
out
int3
sbb
stc
shl
cltd
jns
jbe
push
cld
pop
scas
mov
push
les
out
fisubrl
and
or
test
in
sbb
int3
cmp
lret
xor
shl
mov
daa
fisttpll
aam
insl
push
out
sar
dec
jmp
nop
in
add
push
adc
xchg
incl
dec
test
gs
lret
cmpl
fsubrl
out
or
sarb
mov
daa
rcrb
adc
cmp
push
aam
xchg
mov
pop
lods
repnz
and
es
imul
shl
inc
nop
stos
pop
mov
int3
jns
mov
mov
pop
dec
or
nop
adc
pop
fisubrs
aaa
insl
scas
rcll
adc
ficoms
xchg
loope
lcall
out
push
cld
dec
outsb
inc
inc
dec
cmp
push
dec
cmp
xchg
sti
nop
leave
xchg
je
aam
fcmovbe
andb
push
stos
jbe
adc
mov
lret
inc
mov
aaa
lea
mov
jge
xlat
mov
jl
cmc
rcrl
addl
dec
dec
roll
in
loop
xor
xor
mov
int3
lret
rclb
imull
cli
sbb
mov
and
and
adc
adc
cwtl
fisubrl
mov
mov
movsb
pop
add
lods
or
insl
or
inc
ss
push
sub
pop
adc
cmpsb
jno
xor
test
in
jge
jecxz
test
hlt
repz
xchg
ret
push
jnp
mov
adc
mov
mov
ret
cli
repz
cmp
inc
mov
add
in
pop
jle
movsb
inc
xor
lcall
in
push
loop
jno
push
or
cmp
push
mov
out
jmp
scas
addr16
and
pop
dec
mov
push
cmp
insb
aad
stc
ja
test
testb
test
fdivs
shrb
mov
rcrl
jns
cwtl
mov
popa
sbb
xor
ljmp
sub
and
aam
cmpsl
orl
orb
rclb
shll
fstpl
jl
push
iret
jge
push
test
xchg
add
ljmp
and
dec
or
mov
xor
push
xorl
and
inc
ret
adc
mov
fstps
mov
jne
sub
mov
and
push
mov
mov
out
sbb
sti
jnp
sub
jmp
pusha
mov
fsubrs
lret
dec
daa
fnsave
dec
jle
mov
jne
fnstsw
cmp
cmc
scas
adc
sbb
fbld
adc
jnp
loope
cmp
daa
jb
push
rol
pop
cmp
push
clc
and
xchg
cmp
mov
gs
jns
sub
lods
sbb
push
dec
jae
mov
cwtl
jno
mov
mov
jae
jge
mov
insb
aad
filds
data16
push
mov
cmp
xor
pop
add
test
sub
xor
out
dec
mov
sbb
cmp
jmp
xchg
ljmp
mov
ja
sbb
js
push
adc
mov
mov
fistps
cltd
xchg
ss
lahf
popw
out
fs
mov
cltd
cltd
loope
mov
movsl
lret
or
ret
repnz
mov
cmpsl
xchg
lds
push
sub
test
sahf
add
das
jp
mov
jle
xlat
fmuls
add
jl
adc
mov
sbb
mov
xor
fldenv
ficompl
cmp
jle
pop
push
lods
and
lods
dec
das
cmp
pusha
fdivrl
mov
jge
inc
fdivrl
mov
stos
mov
push
dec
ljmp
xor
pop
rcr
and
pop
jg
pop
cmpl
mov
cmpsb
lock
mov
orl
xor
inc
push
xlat
imul
cmp
ds
sbb
cmp
dec
ljmp
rorl
cmp
add
jno
repnz
cltd
add
jg
addr16
fnstsw
sub
insb
mov
lea
jae
pushf
lods
roll
int
gs
je
jns
xor
mov
andb
fisttps
andb
in
jae
pop
push
jp
xor
inc
or
pop
mov
sbb
dec
fwait
add
mov
fistpl
cli
lds
hlt
adc
movsl
cmpl
cmp
cmpsb
push
das
mov
sub
jo
fwait
int3
dec
inc
cmp
sti
cmc
mov
sub
ja
pusha
loope
rorb
and
in
clc
adc
sbb
sub
jmp
dec
pop
sub
xchg
xor
xor
insl
in
sbb
das
loopne
push
stos
clc
xchg
pop
mov
and
lret
pop
xor
repz
adc
hlt
sti
mov
outsl
pop
cmp
pop
xlat
pop
cmp
in
imul
in
mov
nop
mov
and
insl
pop
adcl
mull
and
lds
mov
lods
cmp
int
adc
dec
imul
jp
add
jg
addb
inc
lret
pop
lock
hlt
ljmp
pop
clc
ds
adc
dec
jg
push
test
mov
push
ss
mov
jmp
in
adc
fdivs
xchg
int
dec
xchg
sti
and
in
inc
mov
dec
loope
push
or
test
push
and
xlat
pop
mov
mov
mov
cmpb
and
and
subl
and
cmp
fistps
sub
adc
pop
inc
pop
dec
adc
mov
jb
xlat
cmpsb
inc
mov
push
jl
xchg
add
xchg
cld
popfw
aaa
mov
mov
out
jecxz
mov
mov
icebp
xchg
and
aad
and
repnz
mov
inc
lea
addr16
mov
ss
ret
sub
cmp
rcrb
orb
xchg
insb
bound
xchg
push
xchg
stos
dec
pop
push
pop
xchg
mov
icebp
fidivrs
mov
push
dec
jno
push
repnz
fstl
xchg
and
aam
pop
mov
test
mov
xor
insl
push
fistps
or
xlat
fdivs
sbb
test
sbb
lret
jno
jg
add
mov
fwait
xor
mov
out
push
data16
insb
jl
dec
pop
pop
xor
push
jl
dec
outsb
jg
push
add
inc
xchg
cltd
push
cwtl
arpl
sub
popa
cld
xchg
mov
ficoms
push
rcrl
sbb
push
mov
xchg
inc
lret
ret
icebp
cmp
and
in
jp
xchg
pop
popf
xor
mov
add
loopne
pop
jns
inc
dec
sbb
sub
mov
sub
fdivrl
dec
rcll
push
sahf
dec
jno
stos
cs
mov
loopne
rorl
sbb
loopne
adc
test
ret
inc
or
mov
push
popa
dec
adc
or
cltd
ja
cmp
lcall
and
shrb
sbb
arpl
lahf
xchg
movsb
ds
and
ud0
fidivs
into
fmull
ret
fisttps
sbb
lea
xchg
pop
mov
fstpt
int
push
out
sub
dec
jl
push
jo
ljmp
inc
pop
push
jnp
das
dec
inc
mov
and
mov
out
push
cmpl
rcrb
add
inc
cmp
jge
clc
push
outsb
int
ficoms
mov
dec
bnd
in
pop
aam
in
mov
lea
or
nop
sbb
pop
rorb
cmp
in
adc
sub
pop
loopne
call
cltd
div
cmpsb
inc
add
repnz
ds
fmull
rclb
test
mov
sub
cltd
shll
cmp
fsubl
sbb
cs
leave
inc
push
mov
sub
sbb
dec
pop
int
cwtl
das
fisttps
dec
sub
xorb
mov
pop
dec
xor
fxch
push
sub
pop
jne
not
sahf
sahf
jg
sbb
and
push
and
adc
inc
xchg
push
cli
mov
dec
mov
jmp
lret
cwtl
push
fsubp
or
dec
mov
inc
pop
jg
aad
and
add
xchg
cmc
idivb
fdivrl
lods
and
mov
sub
mov
jne
in
bound
jle
ljmp
push
or
ljmp
fdivs
vprotb
cmp
clc
lods
pop
xor
daa
testl
add
dec
pop
pop
jnp
in
es
push
cmp
cmp
mov
xchg
cmpps
cmpsl
pop
fbld
jmp
loope
pusha
sbb
sbb
stos
pop
ret
pop
ret
sub
out
les
mov
and
dec
clc
sbb
lods
ret
clc
imul
in
cwtl
push
push
mov
or
dec
pop
push
pop
cwtl
pop
into
push
stos
pop
movsb
mov
cmp
arpl
imul
psubb
outsb
cli
push
fcmovnb
sbb
test
and
xchg
xchg
cmp
jle
incl
out
mov
repnz
stos
mov
mov
jae
lret
jbe
push
repnz
cmp
sbb
sub
lcall
cmp
inc
in
or
faddp
push
mov
jge
or
pop
pop
adcb
mov
and
xchg
push
pushf
sub
mov
sbb
jp
int
lods
inc
add
jg
cmp
or
inc
iret
rclb
stos
cltd
roll
dec
and
jae
test
sbb
cmp
movsl
call
hlt
or
xchg
push
leave
loop
fbld
rcrl
daa
cmp
fisttps
leave
test
shlb
sub
xor
or
sbb
mov
or
add
das
lret
dec
lret
cmpsl
push
inc
adc
xchg
jmp
adc
inc
into
rcll
fildll
divb
mov
mov
xchg
call
cmp
dec
enter
jl
clc
aaa
push
sbb
lds
in
scas
shlb
inc
jb
cmpsl
dec
test
cmpsl
push
movsb
pop
cmpsb
and
dec
cmpsb
leave
sub
jmp
stos
dec
test
mov
lods
dec
pop
shl
imul
inc
rcrb
push
scas
inc
mov
insl
xchg
repnz
test
aam
cmp
and
shl
leave
jp
jne
in
arpl
adc
xchg
cmp
loopne
pop
and
xor
sub
sub
test
fwait
sbb
sahf
inc
sbb
call
arpl
fistps
jns
sbb
adcb
mov
lods
daa
and
insl
inc
push
cmpsl
rcrl
sub
rcrl
outsl
add
test
daa
or
enter
test
orb
stc
mov
add
pop
cwtl
aas
xchg
fisubrs
out
in
inc
call
and
jle
int3
lods
xchg
lcall
rorl
or
negl
cwtl
rcrb
lock
addr16
cmp
inc
leave
aaa
mov
adc
push
xchg
push
dec
xor
or
jne
lea
loopne
ljmp
mov
std
jg
mov
out
cs
push
sub
scas
jns
pop
pop
jle
loope
orl
mov
mov
mov
cli
and
imul
les
pop
jg
xchg
ret
pop
int3
bnd
nop
loopne
sbb
out
sub
in
jge
mov
dec
scas
pop
add
dec
sub
cmpsb
subb
data16
xor
aad
xchg
divl
into
or
push
push
ljmp
sbb
push
push
call
push
rorb
rclb
jb
sbb
movl
inc
pop
test
add
push
pusha
mov
ret
lods
mov
sub
mov
paddq
lahf
popa
jge
mov
cmp
xlat
fldt
cwtl
dec
xchg
mov
mov
sti
popf
xor
adcb
mov
ror
mov
push
adc
dec
insb
sbb
pop
std
cli
fisubrs
and
mov
and
xchg
mov
jno
notb
orl
mov
mov
xchg
cwtl
pushf
lret
sub
lods
xor
lret
add
sbb
dec
and
mov
dec
inc
fiaddl
mov
xchg
mov
push
adc
dec
gs
out
mov
inc
push
lea
adc
repz
out
mov
lahf
jae
clc
dec
or
lret
das
inc
sbb
and
leave
push
movsb
xchg
outsb
in
sub
jae
insl
sbb
aam
mov
in
aam
inc
mov
mov
mov
jb
aaa
and
or
out
loope
add
int3
data16
rol
pop
fisubs
inc
rclb
push
pop
shll
cltd
xor
loopne
mov
adc
out
pushf
rorb
shrl
and
movsl
sbb
das
push
and
lds
std
adc
ret
xchg
out
lods
aaa
out
shrl
lahf
dec
xchg
popa
decb
cwtl
aad
push
nop
mov
mov
sub
cltd
mov
mov
push
cmp
pop
push
sti
imul
movsb
xchg
mov
fstl
lret
test
push
std
adc
inc
or
rorl
lret
rolb
sahf
mov
hlt
push
ficomps
push
pop
mov
xchg
mov
mov
leave
adc
scas
sbb
subl
push
cmp
mov
mov
mov
mull
in
mov
push
faddl
pop
in
popf
adc
out
out
adc
adc
inc
ror
enter
inc
cltd
sbb
popf
inc
add
push
sub
popf
int3
mov
jmp
dec
mov
xchg
push
mov
sbb
iret
cmp
sti
lds
fbld
mov
push
lods
cmp
adc
mov
or
bswap
mov
cmp
aad
or
dec
jp
add
imul
push
leave
xchg
mov
cwtl
mov
and
add
bound
lahf
xor
and
int3
xor
or
mov
in
iret
jno
or
push
divb
loope
loope
clc
fwait
or
and
mov
pop
xchg
adc
fadds
lods
jbe
or
ss
ds
or
in
xchg
filds
jl
and
add
fmull
daa
xchg
mov
bnd
pop
xor
hlt
loope
iret
mov
xchg
and
sub
pop
dec
fidivrl
dec
mov
repz
pop
pop
leave
aad
loope
jle
into
add
inc
add
negl
mov
jg
sub
vmmcall
pop
daa
mov
lret
mov
jnp
and
pop
test
xor
insb
mov
addr16
in
movsb
xlat
xor
divb
neg
jp
into
jg
cmp
pop
imul
jbe
loop
mov
lods
sti
jb
je
stc
jns
pop
enter
fcomps
ret
scas
add
std
sbb
dec
or
xchg
push
dec
aaa
and
leave
xchg
shlb
shll
jge
jg
mov
or
icebp
mov
les
push
inc
rorb
xchg
pushf
cmp
lods
loope
push
jns
fprem
mov
xor
pushf
or
pop
loop
int3
inc
sbb
xchg
imul
lret
scas
out
pusha
pop
out
sti
out
mov
mov
jmp
push
inc
rcll
out
mov
inc
add
je
pop
sub
rorl
cmp
sub
lods
xchg
push
ret
adc
xor
sti
push
add
je
and
adc
lahf
sbb
sti
dec
in
test
ret
xor
cwtl
sbb
xchg
sbb
lods
mov
inc
inc
push
mov
inc
jbe
test
lret
jl
add
pop
add
sub
pop
jne
stos
inc
jb
in
sub
iret
jb
mov
scas
int3
int
push
cld
inc
dec
mov
fbld
in
cmc
pusha
jne
mov
lock
test
pop
int
and
ds
jg
fdivrl
jnp
fs
int
xchg
leave
mov
dec
jmp
pop
rol
add
leave
stc
jle
xchg
cmp
xor
jmp
call
stc
stos
or
ljmp
push
aad
pop
add
repnz
or
xchg
js
and
dec
mov
pushf
jge
or
xor
incl
mov
inc
mov
iret
in
push
mov
into
out
popf
loope
std
movsl
or
out
cmpsl
mov
lret
ss
clc
fistpll
mov
sub
xor
shll
jmp
cld
and
jle
loop
add
push
cmc
insb
pop
cmpsb
cmp
xor
ficomps
cmpsl
mov
adc
xlat
pop
fdivrs
mov
adc
push
dec
jno
pop
sbb
xorb
mov
sub
hlt
jae
nop
into
ficoml
dec
xadd
push
aad
sbb
cmpsb
js
test
and
mov
adc
and
adc
sbb
dec
sub
xor
mov
daa
jns
shl
mov
repz
mov
in
clc
repnz
fiadds
pop
mov
or
outsl
je
sub
cli
jbe
stos
mov
stos
fiadds
out
test
mov
es
rclb
cmpsb
in
std
dec
ds
clc
cltd
inc
jnp
cmp
jl
and
xor
pop
shll
pop
sbb
subb
inc
inc
lcall
inc
data16
loope
js
cltd
popa
in
mov
into
cmpsl
lock
fwait
cld
add
out
orl
js
in
pop
movsl
into
jae
cli
or
mov
mov
push
xor
jae
mov
je
jge
adc
aam
inc
ja
daa
push
repz
adc
popa
es
std
ja
stos
je
lea
inc
dec
out
mov
cmp
aaa
pop
outsb
cmp
out
jge
out
push
sub
outsb
mov
retw
lret
push
ljmp
out
sub
mov
jne
stos
lret
loop
jno
dec
push
push
ja
dec
add
fs
fs
stc
mov
jl
stos
push
jle
test
inc
xchg
es
negl
mov
pusha
aaa
jecxz
push
jnp
sub
cmpl
inc
scas
pushf
sub
add
ja
ficoms
mov
fimull
das
lcall
sub
pusha
addl
or
mov
inc
sbb
adc
gs
loop
mov
push
ss
cmp
jbe
cmpsl
into
lcall
jge
cltd
cmc
test
sub
mov
loop
cmp
lret
dec
fistpl
fsubs
xchg
dec
inc
push
and
cld
push
mov
xchg
fdivrl
add
jb
sbb
pop
cmp
out
xchg
or
pushf
xor
mov
enter
fidivs
add
xor
sub
in
mov
pop
sub
jp
and
lea
mov
cmp
mov
xchg
inc
testb
or
mov
inc
mov
int
mov
dec
subl
push
ds
andl
int
sub
ja
stos
inc
leave
sahf
pop
ret
dec
adc
add
cmpsw
sbb
jl
out
xchg
repnz
gs
mov
es
fldenv
inc
cld
lea
mov
rorb
scas
sbb
pop
inc
std
inc
mov
test
mov
popf
jecxz
jmp
xlat
mov
aas
rclb
jno
jl
loop
fwait
inc
scas
pop
xor
jp
pop
out
jne
add
and
out
adc
dec
xchg
aas
and
lahf
movsl
jbe
inc
nop
insb
scas
shr
pop
dec
mul
jns
xlat
out
sbb
sbb
add
imulb
imul
xorb
push
cld
or
or
inc
add
jae
push
ds
mov
and
mov
fldcw
xchg
jne
sub
ficoms
imul
ss
sub
and
jbe
out
sub
mov
cmpsl
push
push
ljmp
imul
shl
fisttpl
add
leave
sti
mulb
nop
dec
or
sbb
inc
pop
mov
push
mov
outsl
dec
test
and
nop
pop
ss
testl
push
scas
int3
sti
pop
inc
test
mov
jo
mov
movsl
clc
popf
xorb
push
addr16
jg
or
mov
cmpl
lds
and
push
icebp
and
aad
out
cld
mov
add
mov
mov
mov
jg
jbe
mov
jo
adc
add
loope
push
inc
mov
mov
icebp
loop
call
mov
inc
mov
xchg
add
int3
aaa
jge
dec
test
dec
idiv
jle
fstpl
fnstenv
jle
lea
pop
cmc
icebp
dec
inc
loope
shll
enter
lret
mov
xchg
jb
dec
adc
sbb
test
rclb
sbb
cmp
cmpsb
adc
push
inc
cmp
sbb
pop
rcrl
mov
and
jmp
mov
or
daa
and
ret
scas
int3
xlat
mov
and
add
sbb
and
inc
cmp
dec
and
cmp
mov
int3
mov
push
clc
inc
push
popf
js
push
jle
xchg
fdivr
repnz
dec
cld
popf
jns
add
jb
pop
je
test
mov
push
push
mov
jbe
divl
inc
ret
adc
push
jne
pusha
loope
jge
add
sub
data16
sahf
and
adc
xor
out
xchg
inc
pop
or
imul
test
sti
ds
out
adc
mov
mov
xor
ja
out
cmp
xor
out
sbb
push
jb
sub
bound
nop
shl
es
push
pushl
or
adc
or
jle
jp
sbb
inc
push
mov
fs
push
daa
into
inc
inc
adc
fsubrs
stos
sti
out
dec
push
adc
int3
pushf
add
and
clc
xor
push
inc
pop
xor
clc
int3
lods
leave
lret
stc
jno
js
iret
in
jg
pop
int
cmp
add
push
int3
sarb
mov
dec
add
test
arpl
cmpsl
dec
ret
std
outsb
sbb
out
cltd
pop
push
or
pop
int3
clc
rol
fbstp
pusha
mov
fidivrs
adcb
out
sbb
fidivs
ss
mov
or
or
sbb
inc
dec
fnstcw
addr16
dec
inc
out
add
pushf
ss
pop
inc
dec
enter
jp
fstl
sub
adc
push
xchg
jnp
out
aam
sub
adc
mov
inc
cmc
sti
dec
addr16
or
loope
xchg
inc
mov
xchg
xchg
mov
lret
rcll
aad
cmc
pop
jle
dec
movb
out
mov
in
fwait
iret
dec
rclb
inc
push
les
es
xchg
push
jle
pop
rclb
insl
push
ret
jge
test
subl
lahf
orb
pop
rolb
rcll
clc
enter
icebp
imul
mov
in
push
dec
fists
cmp
in
mov
or
popa
out
inc
cmp
gs
mov
jl
data16
mov
test
arpl
or
mov
push
push
xorb
pusha
mov
shll
dec
mov
in
stos
cli
cmp
mov
sti
int3
fstps
or
lcall
test
cmp
xchg
ret
jnp
gs
bound
pushf
cmpsb
pop
mov
mov
pop
mov
cmpsb
cmp
fstpt
les
mov
lcall
data16
xlat
pushl
sahf
xor
iret
repz
mov
lahf
cmpsl
sub
insb
rolb
or
cmpsl
test
loope
jmp
repnz
jno
mov
adc
clts
scas
pusha
lret
mov
pop
xchg
out
insb
loopne
jns
test
cli
mov
push
lods
test
rorl
pop
mov
sahf
mov
push
stos
test
dec
lret
sbb
and
clc
xor
loope
cmc
sbb
scas
in
add
and
cmp
and
jb
xchg
mov
fwait
nop
clc
cmc
mov
add
mov
sbb
pushf
add
mov
movsl
mov
bound
jbe
cmp
mov
add
sub
or
shrl
popf
push
sub
lods
or
cmp
lret
pop
push
cmp
mov
sub
pop
jb
or
xor
and
stos
or
gs
mov
xor
aaa
mov
push
pop
movb
inc
sub
sbbb
mov
loopne
inc
dec
jb
out
pushf
outsb
shrb
mov
push
rolb
adc
int3
inc
or
shr
clc
push
jge
pop
scas
ret
xlat
into
out
fwait
add
hlt
push
jns
rcr
inc
icebp
push
cmp
sbb
and
or
fistpl
cmc
inc
jo
jl
and
jl
sub
xchg
mov
inc
daa
push
inc
lahf
inc
jo
adc
mov
mov
stc
cmpl
ret
or
pop
lods
xchg
and
dec
dec
icebp
dec
cmpsl
data16
xchg
xlat
mov
adc
mov
leave
into
iret
cmpsb
add
cli
xchg
aad
out
dec
mov
aas
fiaddl
lahf
push
cmp
jl
js
mov
dec
cmp
adc
cmp
jge
mov
push
or
mov
cmp
mov
add
subb
adc
sbb
aad
jle
jo
mov
cmp
adc
pop
aam
mov
fsubrl
mov
shl
inc
icebp
fiaddl
test
xchg
ret
xor
push
sbb
push
adc
enter
inc
cwtl
add
ficoms
icebp
cld
jle
pop
adc
or
roll
xchg
xchg
add
fldenv
das
les
ret
in
sahf
subb
rcr
lret
loop
add
les
xchg
add
fiadds
cmp
icebp
pop
jle
jle
pop
xchg
sub
inc
dec
ja
cmpsl
and
add
jg
xchg
mov
stos
inc
movsl
ja
cmpsl
mov
cmp
pop
or
clc
jmp
ds
adc
inc
loopne
mov
fcmovnu
add
cmpsb
decb
xchg
pop
sarb
out
or
incb
pop
add
inc
pop
sub
cltd
sbb
dec
pop
push
pusha
add
jnp
test
fmull
add
lods
mov
adc
loop
mov
lret
testl
xchg
xchg
sbb
mov
leave
mov
cmc
inc
inc
sti
daa
notb
iret
sub
or
pop
loop
inc
cld
daa
adcb
nop
jo
stos
sub
cmpsb
mov
clc
mov
out
cs
sbb
mov
xchg
pop
addr16
ficomps
fcompl
cmc
fsubl
xor
test
imul
insb
pop
cmpl
lock
mov
pushf
shrl
fldenv
ss
cmp
ret
sub
repz
in
push
xchg
outsb
add
incb
xor
in
std
sti
repnz
cli
sti
pop
or
sti
in
dec
imul
sub
and
imul
pusha
push
ljmp
pusha
sbb
push
mov
imul
adc
mov
sbb
jl
pop
cmp
or
out
adc
sub
inc
jae
clc
vandnpd
les
sub
pusha
insl
movsb
sbbl
lret
movsl
push
xor
icebp
jb
sbb
scas
inc
int
rcrb
xchg
inc
push
aaa
es
test
sarb
call
xchg
out
mov
jnp
mov
push
fildll
mov
or
test
negb
icebp
or
xor
cmpsl
sti
in
or
fwait
jp
lcall
adc
stos
pop
scas
loop
push
mov
cmpsb
mov
arpl
ljmp
inc
xchg
nop
pop
jbe
cmpl
jl
lret
aaa
adc
dec
cmp
pop
or
lods
outsb
dec
pop
ret
dec
xor
or
fnstenv
jg
mul
jo
mov
add
test
ljmp
adc
xchg
cmpsb
scas
and
sahf
inc
cmpsl
nop
adc
cli
sub
shll
and
xor
push
mov
into
xlat
fisubs
test
mov
push
jecxz
pushf
and
push
adc
sub
sbb
in
icebp
imul
push
cmp
cmp
out
adc
xchg
rorl
dec
or
imul
sbb
insl
int3
inc
push
mov
loopne
cmp
cld
push
insl
popa
mov
inc
cmp
cmp
cmp
mov
decb
aaa
mov
adc
push
jb
xchg
fisubl
cmpsl
sbb
out
sub
fildl
lock
mov
movsl
std
sti
mov
movsl
daa
into
into
and
cmp
mov
sbb
cmp
in
dec
movsb
in
dec
dec
dec
scas
test
inc
ljmp
adc
adc
add
rclb
insb
aaa
adc
inc
and
lock
lcall
enter
gs
test
daa
adc
loop
and
or
push
xchg
cmpsl
pop
xchg
testb
dec
dec
jno
cmp
xlat
push
test
mov
mov
lahf
les
lret
jg
sbb
aas
push
bound
sbb
cmp
pop
lods
sti
incl
mov
scas
inc
and
or
rolb
addb
dec
stc
push
fimull
js
loopne
add
xchg
ja
sub
sbb
stc
daa
or
adc
xchg
sahf
inc
addr16
push
or
mov
jno
les
fldl
clc
movsb
inc
push
and
popf
cmc
imul
xchg
inc
cmpsl
xchg
inc
es
imul
popa
stc
jecxz
sub
inc
loopne
insl
pop
cli
jno
mov
mov
stos
out
pop
js
adc
add
dec
bound
lret
cmp
movsb
inc
shll
jp
aad
lods
push
add
lods
cmp
mov
ljmp
std
dec
insl
jb
push
pop
ja
add
dec
jae
enter
cltd
sahf
adc
add
iret
and
in
pushf
mov
addb
mov
push
das
or
shrb
ljmp
xchg
xor
lret
or
push
jl
lcall
cmp
jae
pop
outsl
jo
push
dec
pop
js
mov
or
mov
sbbb
je
loope
dec
mov
push
mov
rcrb
lcall
dec
mov
sub
mov
loope
lea
inc
in
ret
aam
lods
notl
pop
iret
jae
xchg
icebp
jl
sbbb
sub
gs
jge
out
sbb
add
xabort
dec
loopne
xorl
push
push
in
mov
xchg
cld
cmp
mov
lahf
jecxz
pop
adc
rcll
lock
ja
xchg
fisubrl
aam
pop
inc
inc
bound
cmp
sbb
and
xchg
mov
and
outsb
push
pop
add
mov
sbb
pop
pop
out
pop
mov
xchg
repnz
arpl
cmpsb
xchg
mov
xchg
jb
and
xchg
sbb
pop
push
push
pop
push
and
out
cmp
in
jle
inc
mov
mov
addr16
push
pop
xchg
nop
repnz
es
push
xor
pop
mov
and
mov
jle
scas
sub
push
and
sbb
pushf
cld
in
sub
pop
es
mov
dec
into
sub
jp
inc
es
in
scas
adc
jecxz
inc
sarl
subb
out
cmpsb
jae
adc
test
jg
pop
jle
jp
leave
aaa
sbb
insb
gs
or
fsts
xor
mov
outsb
mov
and
fbstp
outsb
hlt
mov
fwait
xchg
rcrb
mov
inc
fistpl
fsubrp
adc
sub
inc
lds
sub
notb
insl
enter
orl
xchg
push
daa
sub
lret
sbb
lods
pop
addl
in
mov
in
ss
cmp
and
xchg
leave
inc
aaa
jnp,pt
xor
mov
xchg
mov
or
mov
adc
mov
sbb
mov
sbb
jle,pt
dec
xchg
test
enter
mov
mov
push
popa
outsl
pop
dec
push
adc
adc
jg
jmp
pop
mov
std
das
andl
xchg
int3
inc
jmp
xor
xchg
inc
in
lret
pop
ret
mov
sti
and
add
pop
and
add
jb
mov
in
pop
lcall
xchg
arpl
add
aam
cmp
shrl
dec
inc
jl
jo
in
lea
out
orb
push
out
inc
inc
pop
pop
fistpl
idivb
popa
mov
inc
test
rcll
sti
ljmp
adc
jl
bound
mov
lods
int3
dec
aaa
je
shrb
xor
jnp
cli
mov
dec
loop
inc
out
andl
jo
pushf
fldenv
sub
inc
int3
mov
jnp
inc
aad
aas
mov
scas
rorl
dec
dec
push
fisubl
sub
cmpsb
sub
lcall
sbb
jmp
aas
mov
xor
cmp
repz
mov
lods
jle
pop
xlat
out
mov
mov
jl
jle
shlb
js
adc
decb
shr
je
dec
call
jmp
shrb
jns
push
sub
sub
pop
adc
std
sub
fdivrp
outsl
pop
gs
aas
pop
dec
call
pop
mulb
adc
add
lret
loop
out
in
in
jne
lret
jg
xor
xor
fsub
mov
inc
add
movsl
adc
push
repnz
fmul
jbe
aas
mov
das
sbb
xchg
arpl
testl
in
add
jle
sub
push
dec
pop
cmp
sbb
mov
mov
xchg
fisttpl
rorb
push
push
mov
daa
out
add
arpl
arpl
sbb
dec
movsb
jmp
jecxz
cmp
pop
cltd
inc
jg
sub
loop
les
push
mov
pop
movsl
cwtl
out
mov
jg
stos
dec
or
adc
ds
data16
sbb
fistps
imul
cmp
fiadds
aas
call
cli
stos
ja
aas
call
inc
lods
mov
dec
and
dec
ja
adc
inc
fldt
jb
mov
cmp
sub
fwait
sbb
jnp
sub
mov
aas
or
sti
jg
xor
or
pop
mov
and
jge
jne
cmpsb
mov
jecxz
pushl
fwait
clc
loopne
cld
and
cmp
jl
jp
sbb
ja
test
jl
sub
enter
shlb
fmull
fdivr
test
cs
aam
cs
mov
mov
and
sub
iret
call
pop
fwait
andb
aad
mov
sbb
shlb
cmp
xor
loop
jnp
lret
jl
out
aam
jp
ja
cmp
sti
and
and
add
xchg
jle
mov
and
pop
push
scas
mov
sbb
or
xchg
push
add
sub
push
and
mov
stos
jae
add
xor
pop
jno
popf
jnp
mov
sub
fdivrl
dec
push
rorb
adc
lds
hlt
mov
dec
sub
arpl
in
in
sbb
jle
js
and
mov
ficoml
and
int3
loop
sub
fildll
and
inc
stos
dec
ss
jle
mov
andb
or
push
fnstsw
in
pop
and
imul
in
repz
lahf
stos
or
inc
jle
dec
pop
mov
fildll
aam
mov
ja
cmpsl
xchg
fisttps
adc
ficoms
or
lret
add
jbe
mov
jmp
aas
lods
orb
cmpsb
cli
jle
add
adc
push
and
mov
push
out
sbb
mov
push
mov
pop
shr
int3
adc
push
test
dec
lcall
in
ds
adc
mov
mov
jne
out
inc
pop
push
mov
mov
repz
and
out
jns,pt
xor
pushf
sub
or
mov
in
ret
jno
or
imull
out
fiadds
js
xor
out
ljmp
pop
popf
loop
das
pop
call
ds
sub
mov
pop
mov
test
mov
add
and
loope
es
mov
je
pop
mov
cmpsb
cmp
sub
and
fmul
push
test
out
inc
les
fwait
imul
addb
inc
orb
dec
sbb
adc
xlat
sub
out
jmp
mov
lods
mov
fwait
add
stc
push
call
sti
ss
jns
test
ljmp
sub
inc
fldcw
push
jnp
sub
cli
adc
dec
add
pop
cwtl
add
testb
les
dec
push
push
inc
adc
xchg
loope
test
inc
lcall
mov
and
add
sbb
xlat
mov
sbb
icebp
popf
hlt
in
pop
mov
fmuls
repnz
xor
ror
add
xchg
adc
movsl
xlat
shl
out
and
or
aaa
xchg
icebp
xchg
mov
in
inc
test
ficoms
inc
test
jmp
mov
lods
add
push
sub
xchg
adc
add
mov
push
dec
mov
lods
fiadds
mov
lcall
sbb
mov
sbb
mov
xor
idiv
fwait
repz
dec
sub
sbb
inc
lret
xchg
push
inc
rolb
cltd
in
jmp
mov
cmp
jge
not
rorl
nop
push
lahf
lret
adc
out
sbb
std
fxch
mov
test
mov
add
push
mov
sub
filds
mov
rorl
lods
test
mov
and
cmp
push
mov
dec
test
jb
scas
dec
outsb
inc
jb
es
iret
loop
test
mov
sbb
call
add
rsqrtps
push
pop
push
mov
mov
repnz
push
cmp
jp
sarb
js
push
scas
sub
in
sub
or
lcall
sub
jno
pop
cltd
addr16
push
sbb
sub
mov
lods
lods
mov
popl
cmp
lret
out
js
sahf
jle
lods
cmpsl
in
push
std
jb
dec
sub
addr16
pop
imul
in
and
aaa
ss
sbb
cwtl
repnz
inc
push
xor
xcrypt-ofb
cmpsl
out
and
dec
pop
mov
jle
mov
mov
pushf
xlat
loopne
out
pushf
lret
push
inc
pop
mov
push
in
sbb
cmp
iret
out
cltd
popf
notb
jge
push
inc
mov
ljmp
outsl
jmp
inc
cltd
xlat
or
pop
loope
leave
shlb
cmp
push
inc
or
mov
mov
aas
jle
pushf
mov
outsl
cmp
jo
jae,pt
out
iret
iret
xchg
lds
aaa
test
push
xchg
mov
roll
ds
cwtl
mov
negl
mov
sti
mov
insb
repnz
insl
cmp
sbb
dec
sub
inc
outsl
jg
ljmp
incb
cmpsl
repnz
mov
sub
in
in
mov
add
mov
lds
inc
out
lahf
dec
andb
sub
stos
fcmovne
loop
dec
movsl
ss
jmp
sub
adc
out
daa
in
ret
xchg
subb
jg
push
adc
jne
mov
sbb
sbbb
cs
daa
lods
xchg
lret
push
lods
rolb
mov
xor
and
gs
notl
mov
in
sti
add
pop
pop
push
jns
add
mov
bound
inc
dec
jecxz
push
out
enter
std
dec
repnz
xchg
loop
xchg
sbbl
and
or
sahf
gs
cmpsl
cld
repz
and
dec
sbb
or
push
xlat
hlt
mov
push
push
xchg
loopne
mov
sbbl
dec
ljmp
stos
out
hlt
nop
shr
ds
cwtl
xchg
jmp
popf
lahf
pop
lods
outsb
or
add
add
out
fwait
je
ret
insl
push
or
sbb
je
adc
and
push
pop
xor
addl
sar
lods
icebp
pop
jp
loopne
ficompl
sub
test
mov
dec
jle
cltd
jo
mov
jo
incb
inc
push
jmp
into
adc
mov
outsl
andb
mov
sbb
sub
xchg
daa
lock
and
sbb
cmpsb
xchg
and
xor
outsb
jg
jge
ljmp
mov
sub
mov
pop
xchg
ret
jnp
mov
push
add
cmp
cmp
inc
and
sbb
loopne
sbb
enter
fildl
inc
sub
int
inc
push
stc
mov
call
mov
sub
hlt
mov
add
into
jle
pop
mov
xchg
repz
arpl
ja
push
jg
push
pop
fmuls
cmpsb
aas
jmp
add
ja
int3
sbbb
aad
xor
ljmp
adc
imul
loope
sbb
inc
in
xchg
jo
and
jb
cld
ret
mov
in
fs
pop
lods
jmp
xchg
mov
or
push
les
add
jmp
xchg
out
lret
insw
push
xchg
inc
push
les
push
roll
rcrl
ficoml
lods
jo
sbb
ja
std
loop
loopne
mov
adc
into
add
pusha
add
jb
ret
mov
call
fldcw
and
lcall
mov
ret
shrb
in
in
inc
insb
cmp
cmp
into
cmp
cmpsl
data16
inc
jg
lea
nop
or
or
mov
mov
push
push
mov
outsl
fcoml
pop
lds
adc
xchg
xchg
push
in
je
scas
sti
mov
pop
mov
call
scas
mov
dec
jl
scas
out
cmp
test
dec
mov
sub
fldcw
mov
mov
cmp
cmpb
xchg
mov
push
mulb
iret
sub
xchg
iret
push
jno
loope
in
jl
stc
push
or
xchg
enterw
mov
imul
sub
inc
add
jg
xchg
lea
mov
dec
ds
insl
rcl
in
push
shll
leave
scas
sti
call
jbe
mov
inc
mov
sbb
add
or
out
lahf
mov
das
cmp
jno
inc
mov
lds
and
pop
das
mov
adc
shrl
pop
sahf
jl
ficoms
mov
add
push
jle
inc
jg
adc
sbb
cmp
cmp
dec
xchg
mov
xor
stos
dec
inc
mov
aas
sbb
push
lds
ds
test
cltd
inc
pop
movsb
xchg
dec
pop
jl
fwait
cmp
mov
adc
adc
mov
xchg
out
and
lea
xor
or
push
cs
mov
mov
js
adc
bound
xchg
mov
sbb
push
xchg
out
lahf
mov
cmc
sub
int
xor
dec
mov
popa
mov
aam
cmpsl
ljmp
lods
loopne
fbstp
xchg
jae
add
jo
pushf
fisttps
cs
out
dec
inc
sbb
push
mov
scas
pop
arpl
inc
mov
cmp
iret
loope
push
clc
loop
addb
or
mov
mov
inc
xchg
mov
jb
pop
xchg
cmp
bound
sub
mov
ljmp
aam
push
ljmp
sub
jne
and
test
xchg
scas
and
cmpsl
fndisi(8087
mov
or
insb
lock
sarb
push
jl
or
pop
sbb
or
inc
mov
outsb
shrl
stos
xor
push
nop
pusha
and
repnz
insl
imul
arpl
mov
dec
leave
mov
mov
push
shll
xchg
lods
xor
enterw
dec
and
mov
dec
pusha
cmc
shl
cmpsl
test
or
inc
inc
loop
jo
fucomip
pop
jle
popf
push
fwait
pop
inc
inc
adc
adc
or
decl
xchg
dec
ja
in
pop
out
leave
jp
pop
stos
pop
dec
lret
add
push
mov
shlb
popf
fwait
dec
cwtl
xlat
xchg
hlt
loope
push
dec
jnp
cltd
insb
xchg
sub
fildl
xor
out
mov
or
or
sub
push
cmp
cmp
xchg
mov
add
fwait
cltd
adc
sbb
int
and
icebp
add
lcall
xchg
imul
incl
adc
pop
inc
loop
ja
jle
xor
push
cmp
je
and
rclb
inc
jnp
jle
test
test
xor
add
push
inc
bound
push
mov
add
xchg
mov
dec
dec
jge
cmp
pushf
xor
mov
inc
addl
out
out
inc
push
push
out
iret
or
lds
and
inc
nopl
inc
lret
inc
aam
xor
cmp
sbb
jno
pop
push
dec
aam
cmp
pop
lcall
mov
xor
aas
fsub
icebp
add
dec
xchg
cmpsl
sub
push
mov
xchg
xchg
sub
sub
push
mov
jecxz
cs
out
jl
xchg
aas
test
adc
ret
addl
inc
sub
ljmp
imul
out
adc
push
pop
and
pop
loop
ljmp
sub
mov
loope,pt
mov
popa
jnp
out
jge
push
cmpsb
cwtl
mov
mov
mov
or
dec
lret
call
lret
sub
mov
int3
out
insb
xchg
push
mov
fdivs
xor
sbb
xor
cltd
fsts
andl
les
sub
lods
push
dec
push
ja
pop
jp
mov
or
pusha
add
lret
mov
or
dec
out
subb
pop
or
jge
dec
or
dec
push
adc
mov
mov
cmp
or
in
or
aas
ror
dec
mov
inc
sub
cmpb
negl
inc
lret
push
cmpsb
incb
sub
or
enter
out
mov
adc
jg
lock
mov
push
add
add
dec
mov
cmpsl
inc
or
mov
add
loope
imul
and
cwtl
aam
pop
mov
mov
or
adc
mov
mov
lods
roll
ret
aas
mov
adc
jge
inc
push
inc
bound
insl
or
cltd
jo
outsl
mov
repnz
out
repnz
jmp
push
push
fistpll
pop
popf
add
lret
lret
movsl
hlt
dec
lea
sbbb
fists
leave
test
and
call
push
mov
pop
loope
inc
xor
jecxz
mov
sbb
gs
imul
test
sbb
sbb
cli
sub
cmc
aaa
dec
cmpsl
ret
pop
mov
pop
jns
add
lods
jne
in
cli
sbb
mov
fs
dec
lret
inc
aad
cmp
jno
push
push
fbld
notb
sub
lock
lret
pop
sbb
sub
std
movl
cmp
nop
sub
lds
repz
lea
test
cmp
gs
inc
push
out
cwtl
mov
mov
dec
pop
rcr
scas
sbb
addb
dec
daa
ret
lahf
test
cmp
add
leave
fildl
orl
adc
pop
and
xchg
jnp
cmp
jecxz
shrb
into
mov
sbb
or
mov
inc
aas
or
loope
push
mov
iret
shll
xorb
hlt
jle
sub
xchg
aad
xchg
jg
jbe
ja
andb
mov
mov
add
popa
and
xchg
scas
cld
jmp
lods
pop
mov
aas
rcrb
cld
stos
cmp
jge
pop
ret
inc
sti
xchg
fisubrs
sbb
inc
sahf
out
pop
dec
mov
lods
imul
pop
add
rclb
pop
mov
bound
cmp
inc
std
xchg
push
clc
cmpsb
mov
test
inc
dec
xchg
fidivs
mov
inc
lods
or
stos
aas
mov
or
iret
add
sbb
xor
cmp
dec
leave
cs
js
lea
add
push
popa
rorb
mov
add
sbb
or
fimuls
out
idivl
daa
add
jo
addr16
push
cmpb
lds
pop
adc
insb
mov
xchg
lret
cli
lods
xchg
es
jo
sti
inc
push
test
insl
sbb
pop
sarl
int3
test
sbb
pop
stos
scas
bnd
pop
sbb
xchg
cltd
sub
dec
dec
movsb
and
mov
andb
idivl
and
lret
and
pop
sahf
push
outsb
rorb
adc
mov
cwtl
mov
enter
and
test
ret
ds
bnd
mov
mov
aas
arpl
jge
popa
inc
jmp
mov
aas
dec
sub
fs
mov
rcrw
in
or
test
idivl
mov
dec
clc
xor
fnstsw
jnp
lcall
push
fiadds
push
arpl
push
or
push
js
scas
jle
mov
cld
popf
pop
and
mov
mov
gs
and
inc
std
xchg
mov
test
push
mov
or
mov
sbb
xchg
xchg
iret
mov
rcrb
fiadds
not
and
dec
and
test
push
repz
and
fistl
jmp
int3
dec
mov
push
roll
ret
out
adc
add
leave
mov
dec
pop
pop
pop
sbb
sbb
inc
fnstenv
push
inc
ljmp
xchg
ror
imul
test
pop
inc
cmpsb
mov
out
pop
stos
add
fsts
lret
push
mulb
cmp
inc
loope
iret
mov
jle
jl
incb
dec
or
ds
mov
or
out
mov
sbb
fldt
testb
mov
js
cs
mov
outsl
imul
inc
xlat
ret
dec
mov
clc
repnz
adc
mov
fs
push
aam
int
cmp
enter
int
popf
mov
jo
mov
add
adc
rcl
hlt
out
ror
hlt
not
cmc
hlt
pop
roll
bnd
lods
sub
movsb
aas
and
mov
pop
and
lods
pop
sub
fs
das
dec
adc
das
xchg
shlb
push
push
inc
add
sub
shrl
lret
sub
push
or
xchg
loop
or
subb
cmp
cmp
add
nop
outsb
cmp
mov
xchg
add
cltd
add
sarb
addr16
dec
mov
inc
adc
xchg
dec
inc
or
shl
adc
mov
mov
scas
push
mov
dec
stc
loopne
sarl
sub
dec
rcll
nop
aaa
jg
xchg
inc
jg
push
mov
aas
fisubrs
and
mov
das
cltd
aas
or
jo
inc
les
adc
sub
mov
jnp
dec
and
xchg
loop
sub
popa
out
div
nop
sub
cmc
jbe
jbe
mov
pop
lds
xor
cmpsb
dec
es
pop
adc
lcall
imulb
cwtl
push
pop
fbstp
jmp
mov
hlt
sarb
push
adc
jns
ffree
dec
in
mov
js
scas
push
xor
orl
or
adc
inc
pop
enter
dec
inc
cmpl
nop
push
mov
or
mov
loopne
xchg
jp
mov
cltd
inc
pop
add
inc
adc
inc
pushf
sahf
repz
lcall
fxch
scas
es
mov
std
cmpsb
and
inc
fwait
jle
pop
test
fdivp
bound
or
in
shrl
mov
rcll
fldl
stc
fstpl
test
into
mov
sbb
loope
cli
and
pop
xor
cmp
lea
in
inc
nop
xchg
sbb
loopne
sahf
inc
mov
inc
jle
loope
pop
lret
addl
adc
in
mov
aaa
inc
aas
push
stos
jo
jns
insl
add
jg
fsts
mov
stos
aas
mov
xchg
scas
push
jnp
subb
test
sub
andb
jl
or
test
lret
dec
dec
lea
mov
test
cmp
sub
std
mov
pop
push
cmp
sbb
cltd
idivl
add
jle
lods
test
xlat
lahf
inc
xor
lock
jge
cli
sub
pop
data16
lock
jo
sub
enter
repz
push
pop
test
mov
cmpsb
dec
pop
dec
or
xchg
std
sbb
push
insl
cmp
push
icebp
mov
adc
lret
cld
add
aam
xchg
jge
inc
xor
mull
orl
cmp
ret
or
push
fidivs
or
adc
enter
fidivrs
xorb
cwtl
shlb
mov
inc
jecxz
fadds
repnz
dec
fwait
or
int
movsb
sahf
push
mov
pop
sbb
into
add
jmp
daa
repnz
inc
mov
pop
xchg
adc
repnz
outsl
bound
sbbb
cmc
notl
or
cltd
sbb
pop
jg
enter
mov
jns
roll
cmpsb
testl
fcmovne
jp
xchg
scas
add
mov
jg
stos
je
pop
xorb
and
ds
lock
jg
repnz
arpl
mov
ljmp
mov
push
jno
fstps
js
es
add
jp,pt
rcll
and
jns
mov
jnp
push
xor
sahf
mov
cmpsl
jbe
jp
fcomip
inc
stos
pop
cs
dec
sarl
in
jbe
xlat
sbb
sub
mov
mov
sarb
cmpps
add
xor
loopne
fcompl
in
adc
inc
je
into
jae
push
inc
aaa
repnz
ljmp
fcoml
lret
int3
pop
jp
inc
ds
in
inc
inc
add
mov
in
lahf
dec
sub
and
fcmovu
in
fimuls
jo
dec
dec
jmp
mov
jmp
rcrl
sub
ja
cmpsb
in
cmp
insb
lds
aam
lahf
sub
test
dec
into
call
and
dec
aas
das
sbb
lret
ds
and
pop
jecxz
inc
push
mov
inc
icebp
cmpsb
fistpl
sbb
cmpsl
cmp
lock
xchg
scas
dec
rolb
in
jo
adc
or
popf
add
cmp
pop
ret
or
jle
jnp
mov
xchg
mov
cltd
incl
scas
filds
enter
outsb
mov
lret
es
andl
movsb
dec
sbb
mov
dec
xor
fsubrs
sti
push
dec
push
xchg
outsl
jmp
xchg
enter
push
dec
sbb
or
xlat
jecxz
test
cmp
mov
sub
add
fidivrs
lods
out
nop
inc
pop
xlat
roll
xchg
daa
in
fimuls
inc
push
jns
addr16
mov
scas
iret
je
dec
inc
lahf
inc
aad
fildll
dec
mov
xchg
je
fcmovb
add
adc
scas
sbb
mov
inc
xchg
fsub
je
push
aaa
mov
sub
inc
movsl
jp
rcll
or
rorl
xchg
test
popf
inc
xlat
sahf
dec
rcll
add
lea
mov
hlt
inc
aam
insl
les
scas
xor
push
lret
push
fstl
sbbb
cmp
add
add
mov
push
pop
incl
or
rcrb
adc
cs
cmp
xchg
pop
inc
fwait
sub
out
es
xchg
outsb
push
dec
xchg
aad
xlat
iret
xchg
sbb
jl
xor
xor
xor
test
sub
adc
fists
les
push
and
dec
add
in
xchg
iret
sbb
push
inc
sbbl
nop
fmulp
adc
scas
xchg
jge
mov
inc
xlat
std
sub
daa
cmpsb
sub
and
clc
ss
sub
xchg
cld
lea
push
push
dec
hlt
push
paddb
pop
or
clc
out
jae
bound
push
loop
pop
stc
add
or
push
popf
pop
or
leave
out
clc
pop
aas
js
xlat
insb
mov
testb
repnz
mov
sahf
test
pop
negl
ljmp
flds
xor
pop
pop
jl
out
ret
xchg
dec
aad
push
add
xchg
jle
mov
xchg
cwtl
iret
cmpsl
fcoml
push
test
out
jne
jnp
push
sbb
sub
arpl
pop
and
sbb
xchg
mov
fmul
mov
jbe
jno
cmpl
clc
and
push
call
mov
pop
icebp
sub
pop
mov
push
cmp
jecxz
data16
jbe
repz
aad
lret
or
pop
sbb
scas
jl
cmpsb
mov
in
dec
popa
push
loopne
movl
push
inc
jecxz
cmp
pop
dec
jno
test
mov
inc
jbe
sub
cmc
loop
jno
xor
inc
lea
outsl
subb
insl
jg
or
roll
dec
xchg
pusha
or
pop
jo
xchg
add
outsb
scas
pop
mov
add
into
shl
sahf
push
and
jnp
cltd
popa
loop
movsb
je
mov
rclb
rcrl
push
mov
imul
fstps
lret
fmull
adc
data16
out
ds
aas
out
aad
add
add
dec
rclb
les
adc
mov
cmp
adc
mov
popf
dec
dec
sub
icebp
push
sbb
sarb
fwait
inc
mov
in
cli
inc
or
inc
aam
jnp
icebp
cmp
sti
mov
movsb
fcmovb
outsb
cmpsb
inc
adc
sub
fdivr
daa
lock
cmc
pop
xor
packuswb
pop
jp
lcall
jg
pop
ficoml
loopne
sahf
mov
and
scas
push
jb
xchg
add
and
or
xor
cld
das
lret
rcrb
inc
inc
leave
ljmp
stos
inc
xor
jle
sub
mov
sbb
arpl
sbb
in
xchg
inc
ja
loop
push
dec
mov
jno
test
int
lret
or
aam
fdivrl
lock
push
pop
daa
mov
dec
jno
and
movsl
or
sub
ss
lret
add
mov
adc
jno
out
add
cs
aaa
cltd
pop
popl
call
test
push
and
cli
cltd
mov
adc
sub
cwtl
std
jne
mov
jg
test
or
sbb
or
cmp
sub
ficoms
sahf
xchg
sbb
mov
lret
mov
fwait
loope
mov
xlat
mov
add
ss
je
xchg
lea
xchg
cs
push
fsubrl
std
pop
and
adc
stos
arpl
pop
inc
outsb
call
je
into
test
clc
xchg
mov
int3
addr16
flds
xchg
movsb
and
pop
pop
push
pop
pop
inc
cmpsb
mov
lea
shr
mov
mov
test
inc
xchg
mov
ljmp
add
adc
pop
lahf
fistpl
std
inc
xchg
add
roll
xchg
add
push
jae
cmpb
lret
mov
lods
aam
jl
mov
or
inc
pop
lret
push
sbb
xchg
mov
push
outsl
xlat
shll
or
xchg
stos
adc
fcoms
lock
pop
cli
cmp
in
int3
mov
in
cld
jno
inc
push
xor
aad
pop
adc
or
adc
fdivrs
sub
inc
add
adcb
xor
in
fidivrs
push
push
pushf
adc
dec
jle
pop
mov
mov
cmp
lret
orl
mov
rolb
loopne
inc
push
xor
aaa
jge
testl
notb
popa
js
out
lret
add
xchg
fs
hlt
jns
mov
test
je
push
jmp
jle
mov
out
out
int
out
sub
xchg
repz
cmpsl
mov
add
out
sti
ret
push
inc
dec
pop
or
mov
and
lds
scas
outsb
or
in
loop
mov
pop
into
dec
inc
aas
in
adc
scas
or
es
lods
iret
sub
or
int3
xchg
lea
xchg
lea
xchg
idivl
fxam
push
std
clc
in
mov
loope
popf
pop
loope
imul
mov
mov
or
mov
addl
ret
mov
xor
cmc
cmpsl
push
add
mov
call
fildll
adc
sahf
or
add
xchg
sarl
xchg
jb
jnp
lcall
movsb
mov
loope
prefetch
sub
stos
mull
ds
subb
xor
mov
mov
add
shll
sarb
mov
sbb
adc
jmp
ficomps
js
adc
jne
jnp
pushf
out
or
int3
sub
dec
insb
jno
push
lods
sub
sbb
inc
enter
aaa
into
or
dec
ret
repnz
xchg
adc
adc
idiv
shl
sbb
xchg
dec
pop
and
or
pushf
js
sub
or
sbb
out
xchg
mov
jecxz
es
xchg
fwait
lret
outsl
cmp
sti
inc
sbb
out
into
jo
add
jns
sbb
ds
push
add
out
dec
push
mov
daa
adc
mov
push
int
in
jmp
pop
lea
fwait
arpl
push
cs
roll
sbb
xlat
adc
dec
adc
dec
fbstp
mov
iret
sti
mov
mov
dec
cltd
pushf
sub
inc
scas
aas
mov
fwait
test
into
mov
or
fsubs
and
and
mov
or
test
gs
pop
mov
adc
ja
and
xchg
aad
sub
mov
or
test
neg
pushf
xchg
movsb
push
mov
dec
out
movsb
add
test
clc
call
aaa
adc
pop
xchg
or
imul
adc
cmpsl
pop
cli
dec
fwait
sarl
cltd
lret
xchg
xor
int
sub
mov
inc
stc
fsubp
jo
movsb
add
add
neg
push
lret
inc
xchg
cmp
push
cltd
out
aas
repnz
movsb
clc
add
cwtd
out
inc
fisttpll
and
dec
out
cmp
cwtl
mov
insb
jne
inc
lret
pop
mov
adc
jp
jge
aaa
scas
arpl
pop
or
push
out
pop
pop
loope
les
mov
mov
ljmp
dec
loope
inc
loope
jg
lock
ret
pop
xor
fs
add
or
sub
ljmp
mov
jae
cmp
movsb
loope
add
lods
sub
and
faddl
subb
pop
mov
test
cmpb
inc
or
jle
xor
into
push
pop
lea
xchg
lods
sar
lret
clc
int
pop
xor
leave
lret
test
xchg
push
pop
jmp
icebp
push
fcmovu
fs
mov
xchg
cmp
push
jle
call
mov
pop
push
push
cmp
and
data16
push
mov
jno
cmpsl
insb
pop
dec
test
aaa
adc
jg
inc
sbb
icebp
fsubrl
and
cmc
lret
xchg
sub
pop
fsubp
dec
jo
test
adc
test
add
mov
jo
lea
xlat
fsub
mov
dec
int3
mov
and
lods
in
or
js
pop
enter
jecxz
jg
dec
cli
inc
push
xor
or
add
xchg
pop
aad
stos
mov
loope
movsb
sbb
popf
mov
mov
mov
lods
in
ljmp
movsb
xor
test
sbb
test
mov
cmp
daa
jg
mov
ds
cltd
sub
jnp
ljmp
repz
or
rcrl
test
jge
sub
sub
ret
orb
sub
clc
or
pop
sarb
push
sbb
or
insl
dec
call
adc
adcl
call
aaa
into
addr16
or
daa
popa
or
fcomp
roll
dec
push
mov
pushf
sub
add
mov
bound
scas
cmp
rorb
fcoml
jnp
xchg
sub
and
mov
rolb
loop
adc
jmp
mov
sbbb
in
pop
in
out
and
push
aas
cld
add
jge
mov
and
or
jnp
push
mov
in
pop
and
repz
negl
repz
add
repz
inc
push
or
add
hlt
pop
repz
leave
add
cld
ljmp
insl
jae
int3
adc
pop
mov
adc
mov
sbb
sub
jb
jmp
or
xor
sar
mov
test
pop
xchg
out
lret
aaa
mov
jge
pusha
out
push
or
add
dec
and
add
cmpsl
push
faddp
daa
sub
cmp
cmpsb
mov
or
cmp
loope
ja
jmp
cmp
je
imul
mov
cltd
shll
jle
mov
adc
int3
popa
push
into
cmpsl
mov
mov
fwait
add
sahf
dec
or
sbb
fsubrp
xchg
xlat
idivb
jecxz
aam
loope
dec
adc
jg
or
insb
add
call
cmp
stos
xchg
fisubs
out
xor
lods
adcb
or
rol
fwait
lds
faddl
adc
loopne
inc
pushf
ljmp
push
loope
mov
dec
or
out
ret
outsb
xchg
jbe
out
out
and
xchg
dec
ljmp
mov
sbb
loop
add
imul
xor
cmp
ljmp
sub
push
or
mov
push
mov
sahf
mov
cmp
sarb
mov
mov
cmpsb
rcl
or
cmp
mov
dec
adc
xchg
sbb
push
push
or
imul
pushf
sbb
and
jb
scas
sub
ja
mov
sub
or
or
and
xchg
nop
addl
add
addr16
scas
xchg
cmpsl
adc
mov
push
push
iret
rcrb
and
cli
jo
js
inc
subl
xlat
pop
add
out
mov
hlt
xor
add
std
std
ljmp
mov
incl
pop
in
call
sbb
pop
push
std
mov
inc
cs
std
insb
fnstenv
pop
and
xchg
jo
es
faddl
movsb
orl
ret
add
sbb
add
push
jb
jb
aam
mov
cmp
mov
andl
out
pop
aad
pop
sarl
inc
mov
aam
notb
pushf
mov
sub
in
out
daa
std
int3
fldl
mov
ja
add
mov
and
xchg
adc
dec
cmp
and
jmp
stos
daa
mov
movsl
xor
add
call
cld
sbb
ret
or
call
jg
into
sbb
sub
adc
lock
sti
pop
xor
fimuls
xchg
push
sub
and
sbb
push
mov
xlat
or
add
pop
lahf
sub
cmp
inc
mov
mov
mov
push
xor
mov
xchg
sahf
pop
icebp
xor
and
insb
outsb
std
cmp
into
cli
pop
jbe
sbbb
jle
and
insb
frstor
cmp
cli
icebp
ljmp
aaa
cmp
int3
sti
xchg
jle
mov
pop
push
dec
jmp
mov
addr16
adc
in
outsb
movsl
pop
movsb
sub
cli
cltd
out
xchg
inc
sahf
dec
jmp
int3
pop
pop
push
push
dec
scas
jmp
aas
es
clc
fstp
ret
push
jecxz
insb
push
lret
arpl
inc
mov
and
mov
or
jo
ljmp
sub
sbb
xor
imul
dec
aaa
mov
loopne
cmp
repnz
in
imul
xchg
mov
dec
ret
cmp
cmp
subl
and
jmp
pop
sar
mov
ret
jne
xchg
lret
test
lcall
mov
lods
je
stc
xchg
enter
mov
add
push
sbb
lret
cmpb
sbb
bound
mov
ret
push
in
xchg
lret
xor
insb
xor
cmpb
into
adc
xchg
pop
ljmp
or
inc
pop
arpl
dec
xchg
cmp
test
dec
lds
sbbl
adc
ja
pop
lret
push
xchg
mov
aam
jl
mov
or
cmpsl
aaa
jg
rclb
lods
mov
dec
xchg
out
push
cmpsl
xchg
cli
popl
jecxz
jle
movsb
repz
jle
std
push
iret
cmp
cli
int
stos
or
ja
pop
insb
sbb
jl
pop
scas
add
stos
cmc
lds
sub
sbb
pop
stc
push
lods
arpl
xor
pop
xor
inc
call
roll
mov
stos
mov
jle
sahf
stos
xchg
dec
pop
bnd
jge
dec
add
cmp
aaa
sbb
enter
inc
dec
icebp
lret
repz
mov
and
lock
inc
sub
movsl
out
addb
leave
std
pop
mov
pop
aas
repnz
call
decb
sbb
test
pop
mov
cmp
idiv
lods
sub
shll
xlat
push
dec
adc
enter
push
int
mov
les
leave
cmp
fs
aam
and
xchg
pop
ret
pop
ffreep
nop
and
mov
push
inc
notb
hlt
cmp
sub
sbb
pusha
and
jnp
sahf
sbb
scas
mov
lds
xor
in
jle
int
popf
push
aam
ret
fisubs
dec
out
or
push
lea
sarb
push
add
js
fisubs
fwait
out
cmp
xor
dec
add
call
cmp
sbb
adc
cmp
lret
psubb
cltd
outsb
or
or
test
in
inc
pushf
gs
out
pop
adc
inc
sub
clc
insl
mov
mov
push
mov
pop
sarl
or
mov
mov
in
pop
mov
xchg
jnp
aas
and
sarb
jl
leave
mov
repz
sub
pop
cmp
xchg
adc
pop
add
and
or
jge
cmpsb
faddl
es
repz
sbb
mov
jge
sub
xchg
jo
mov
ret
sarb
mov
scas
or
insl
aaa
push
int3
jbe
fadd
cmp
sbb
jnp
je
mov
lret
aam
and
lock
jl
lret
gs
lret
or
or
fst
sbb
xchg
inc
clc
les
dec
addr16
loopne
push
test
test
push
mov
repz
and
loopne
out
stos
shrl
jp
mov
adc
clc
mov
dec
or
fisubs
jg
mov
das
add
jmp
roll
add
inc
cli
aas
mov
or
cmp
jb
sti
cmp
xor
cmp
mov
fstps
repz
repnz
stos
insb
add
test
addb
int
sti
inc
imul
lret
cmp
xchg
aam
mov
xor
out
stos
and
adc
aaa
sbb
stos
sbb
dec
push
push
pop
fwait
loope
lods
adc
lods
xor
enter
repnz
dec
std
mov
lret
push
hlt
pop
pop
test
push
incl
lods
and
mov
jle
inc
push
sbb
insl
mov
ljmp
cmp
not
cmpb
fwait
xchg
nop
xchg
mov
sub
pushf
sub
pusha
mov
fidivs
xchg
inc
sbb
pop
adc
addr16
ret
int3
and
adc
sub
mov
inc
inc
out
adc
mov
cs
sti
je
jmp
push
js
push
orb
jnp
cmc
shl
rolb
rorb
or
pushf
mov
movsl
rclb
je
inc
dec
int
ss
push
shll
adc
push
mov
lock
testb
addl
ret
andl
and
xchg
sarb
punpcklwd
clc
pop
xchg
cmp
aam
xchg
cli
lcall
popa
lods
les
cwtl
icebp
mov
int
jmp
sbb
fistps
repz
ret
mov
jnp
jns
or
xchg
sarl
push
orl
jnp
hlt
sbb
add
sub
std
cli
sub
pop
gs
push
lods
lret
and
inc
insl
push
loopne
inc
push
pop
iret
xchg
and
shrl
lcall
repz
or
fbstp
add
mov
add
icebp
in
shrl
cli
xchg
sub
gs
pop
xor
mov
incb
loopne
movsl
sti
popf
icebp
mov
push
cwtl
fsubrl
add
push
test
lret
fisttpl
ret
popl
pop
or
out
mov
mov
sarb
inc
sub
or
sub
repnz
mov
and
dec
repnz
hlt
dec
adc
adc
jp
xlat
jnp
mov
test
or
mov
ljmp
adc
add
xchg
stos
lret
subl
mov
push
ljmp
xor
insl
jmp
xorl
pop
leave
jbe,pt
fnstenv
iret
or
jmp
xor
pushf
pop
int3
sbb
or
out
shrb
aaa
inc
aam
inc
loope
cmp
aaa
insb
mov
das
push
xor
lcall
scas
mov
imul
test
mov
jb
push
pushf
push
push
mov
jle
call
fadds
jbe
mov
or
clc
add
lea
push
sahf
cmp
sbb
rolb
push
test
xchg
xchg
rcl
push
leave
or
scas
movsl
mov
ja
pop
cmp
jno
adc
flds
int3
and
scas
dec
stc
daa
jl
js
xor
lock
addb
bound
push
les
push
in
sub
cmp
std
dec
pushf
imul
lret
cli
inc
sbb
sub
fs
out
xor
add
test
fsubrl
jbe
sub
das
es
sar
pop
inc
subb
sbb
adc
cmc
sub
xor
fsts
dec
mov
adc
rorl
shrb
inc
je
das
frstor
sub
stos
test
push
sbb
bound
or
cli
add
lods
out
cmpsb
sub
neg
sbb
pop
jns
push
and
out
and
loope
fistl
rcrb
pop
dec
popf
negl
clc
push
xchg
push
inc
dec
repz
jl
test
ds
mov
xor
push
pop
outsl
cmpb
out
pop
and
mov
pop
mov
stos
lock
and
push
repnz
lock
jge
jb
sub
dec
rcl
mov
outsl
and
or
mov
xor
mov
insb
xorl
in
jne
adc
hlt
push
imul
xchg
movsl
aas
xchg
bound
mov
add
mov
xchg
negl
add
loop
pop
loope
sbb
cwtl
sub
adcl
or
jne
cmp
mov
js
xor
pop
mov
and
xor
fcmovbe
xor
pop
jle
insl
mov
inc
push
stc
jmp
dec
setp
movl
pop
cmp
pop
ja
fwait
call
call
mov
xor
fs
jbe
test
icebp
sbb
jge
adcb
cld
insb
cld
rorb
xor
push
fwait
mov
xor
mov
jecxz
xor
add
shr
loope
iret
into
mov
jecxz
data16
lds
and
jl
mov
jmp
mov
andb
inc
adc
pop
mov
hlt
xchg
pop
push
adc
mov
pop
sbb
lret
pusha
cli
dec
ljmp
call
test
push
mov
xchg
or
and
icebp
jb
jmp
mov
dec
xchg
pop
xchg
push
sub
fildl
cld
pop
dec
xchg
popa
insl
sarl
sub
fdivrl
std
sub
mov
lock
and
bound
dec
jge
test
jb
scas
mov
test
jmp
adc
inc
mov
xchg
jg
xor
push
jle
loope
aam
mov
daa
xchg
pushf
sbb
dec
ljmp
mov
mov
in
inc
ret
pop
add
mov
mov
dec
dec
lods
push
ret
outsb
cmc
js
xchg
pusha
movsb
in
mov
stos
test
mov
fisttps
cli
dec
lret
fdivrs
stos
pop
xchg
mov
pop
inc
push
push
fcompl
inc
jl,pn
adc
hlt
cmp
jp
pushf
push
ljmp
mov
pop
call
ret
shrb
push
and
cmp
jge
xchg
mov
into
lahf
push
int3
sbb
inc
jne
mov
aam
js
mov
cmp
ljmp
xor
cmp
loopne
fldenv
sti
sub
lret
push
or
pop
jne
cs
xchg
loopne
rclb
dec
call
jmp
jp
mov
inc
pusha
into
hlt
sbb
dec
fldln2
sar
sbb
aam
je
mov
stos
adc
sti
push
mov
jnp
push
xor
scas
jmp
rorb
lcall
pop
pop
and
sbbb
pop
xor
data16
lret
mov
pop
leave
adc
xchg
sbb
cld
cmpb
fldenv
dec
sub
outsl
jae
dec
cmp
daa
jp
and
cli
shll
hlt
add
lds
shll
fnstsw
xchg
cli
lret
xor
push
scas
gs
cwtl
push
pop
in
lds
fildll
pop
neg
ss
add
ret
xorb
push
shr
mov
data16
scas
push
incl
cmpsl
sarb
mov
fimull
xchg
adc
rclb
push
loopne
xor
cmpsl
add
pop
pop
mov
jmp
jge
hlt
ret
push
shrb
lds
cmc
int
mov
pop
push
xor
jns
fisttpll
cwtl
cltd
rorb
push
or
orb
movl
clc
aad
sub
push
or
nop
int
pop
mov
lock
shrl
mov
outsl
aam
movsb
fwait
xor
add
adc
cmp
xchg
mov
scas
jno
inc
enter
lret
jecxz
jo
orl
and
leave
push
pop
adcb
scas
jle
arpl
repnz
push
add
addr16
fdivrl
mov
push
sub
and
pushf
xchg
jl
shrb
enter
arpl
ss
and
push
sbb
and
fbstp
adc
test
mov
or
cmp
loopne
loop
icebp
repz
aas
cwtl
adc
pop
aad
push
xchg
lds
cli
in
icebp
movsb
and
repnz
jle
loope
int3
jecxz
mov
test
or
imul
mov
data16
shl
adc
imul
out
and
pop
andb
sarl
xor
push
test
xchg
inc
or
and
sub
or
cwtl
mov
add
test
and
outsl
subl
xchg
in
cmp
dec
icebp
lock
add
test
imulb
out
xlat
int
shll
insb
mov
inc
push
daa
shll
lock
xor
test
mov
test
push
push
std
or
lret
mov
sub
push
shrb
bnd
xchg
add
sarl
pop
ds
pavgb
adc
cmp
adc
aas
cltd
mov
mov
mov
and
mov
lahf
xchg
fbstp
jmp
xchg
mov
pop
aaa
push
pop
lds
bound
pop
xchg
fbstp
rolb
jb
sbb
jle
shr
jl
push
mov
ss
add
repnz
popf
add
xchg
out
pop
outsl
dec
xor
xor
jecxz
push
mov
dec
loope
push
cvtps2pi
cmp
push
xchg
jecxz
sbb
repnz
addb
mov
adc
add
mov
jg
fucomi
push
sub
test
fsubrs
iret
stos
sub
lret
jmp
aaa
push
lea
or
dec
cmp
or
dec
mov
push
adc
dec
inc
fdivrl
mov
testb
jle
movsb
out
sbb
in
xor
mov
lods
push
mov
sbb
xchg
inc
xor
and
jb
cmc
dec
xchg
cmpsl
lods
push
repnz
jns
and
lcall
push
sbb
rcrl
test
scas
hlt
add
mov
hlt
xchg
xchg
sahf
pop
and
pop
sub
lcall
mov
out
jg
int3
push
mov
aaa
mov
in
inc
xchg
call
int3
inc
sub
pop
mov
addr16
ret
or
lcall
jle
dec
scas
dec
std
jge
sub
xorb
add
clc
mov
popf
out
addr16
jecxz
push
or
and
and
xchg
mov
xor
in
mov
ficoml
daa
repz
push
sarl
xorb
jecxz
adcl
out
ret
loop
in
pop
imul
pop
aaa
sbb
clc
aas
js
jg
fdecstp
sbb
testb
add
mov
das
shl
ret
inc
pop
fnstcw
xchg
fs
inc
sub
ja
fidivs
aad
js
jl
clc
push
gs
cmp
cmp
fstps
ljmp
push
sti
jg
inc
lret
add
xor
push
cmpsl
cmp
push
and
inc
push
cli
inc
mov
das
ja
stos
mov
add
enter
mov
add
lock
clc
pop
pop
dec
outsl
xor
cmp
ja
push
sub
js
rclb
pop
xlat
dec
mov
push
mov
xchg
cmc
hlt
rclb
mov
sub
mov
xchg
jmp
jo
ret
sub
inc
test
mov
lret
add
add
cmpsb
sub
dec
fs
fistpll
sub
mov
push
push
push
movsb
icebp
in
and
dec
int3
repnz
fiaddl
mov
xchg
cltd
pop
std
cmp
xchg
push
enter
iret
push
aas
push
xchg
jle
fcmove
loopne
pushf
mov
adc
mov
ror
inc
outsl
cmp
jbe
xor
decb
enter
int3
sarb
pop
les
dec
jns
stos
pop
fadds
fwait
loope
or
push
xor
sbb
mov
sbb
pop
mov
es
xabort
mov
shll
into
inc
dec
out
orl
cli
adc
cmp
pop
jg
dec
mov
or
or
daa
add
and
in
push
fistps
pop
push
jmp
filds
xor
lahf
stc
inc
pop
jle
pop
xchg
jbe
stos
imulb
push
shlb
shlb
ficoml
and
gs
lret
xchg
notb
jecxz
rcr
out
sub
mov
xor
int3
mov
faddl
rcrl
dec
fisttpl
stos
js
or
cmp
lcall
mov
push
cld
mov
xchg
pop
pop
xor
lret
out
add
fisttps
sub
push
je
push
pop
sbbb
pop
cmc
inc
sti
xchg
dec
movsl
int
xchg
xchg
mov
test
sahf
pushf
jp
pusha
or
sahf
ja
jne
lret
mov
xchg
add
rcrl
add
rolb
mov
mov
adc
cmpsl
xor
mov
adc
sti
mov
repz
gs
mov
out
adc
fidivl
mov
push
xchg
jp
repnz
aaa
jbe
jbe
aas
movsl
cwtl
inc
mov
xchg
fisubrl
pop
vxorpd
and
pop
push
in
daa
inc
jp
adc
ficompl
mov
add
rcrl
or
movsb
jl
lcall
repnz
test
xor
enter
cwtl
cwtl
jmp
shlb
mov
mov
dec
loop
lahf
lock
and
pop
fwait
jae
add
mov
add
mov
cmp
jbe
fwait
decb
ss
icebp
add
cmp
rorl
adc
jb
into
hlt
sbb
lds
adc
mov
inc
jl
push
lret
adc
dec
mov
add
ds
push
aas
jg
aas
mov
xchg
push
mov
sti
mov
lret
rcl
loop
lea
rolb
dec
shrb
mov
lcall
cmp
lfs
rorb
sub
sti
cmp
adc
into
aaa
or
cmp
mov
sbbb
fistpll
or
mov
fcoms
jecxz
lahf
imul
add
sti
out
jnp
icebp
cltd
mov
adc
sub
inc
ja
cmp
lods
push
imul
xchg
add
pop
dec
sahf
cltd
mov
dec
and
mov
mov
xor
pushf
pusha
jp
stos
push
mov
adc
stc
hlt
repnz
mov
or
cmp
insb
pop
jg
inc
mov
mov
hlt
scas
in
sub
inc
xchg
jle
fst
cli
push
mov
hlt
add
pop
stos
daa
js
cmp
nop
clc
xchg
push
xlat
or
outsl
nop
je
imul
punpcklwd
stos
rcrb
in
add
dec
jae
je
in
dec
lods
cmc
das
xchg
push
and
addr16
adc
pushf
jp
dec
outsl
xor
cmp
out
sub
lods
negl
inc
inc
pushf
mov
fisttpll
lds
cli
pop
int3
out
jp
and
out
jbe
mov
jmp
aaa
filds
and
mov
jmp
orl
xor
mov
add
loope
outsb
add
into
stos
mov
mov
clc
out
push
push
dec
out
mov
or
nop
decb
jae
push
adc
icebp
add
and
cmpb
std
ret
popa
and
sbb
hlt
sahf
stos
inc
jno
bound
lods
push
fstpt
dec
jae
imul
icebp
add
mov
js
hlt
inc
mov
hlt
adc
xchg
mov
adc
sub
fs
addl
push
rclb
loop
dec
adc
xchg
lret
pop
or
jnp
jecxz
mov
pop
mov
cwtl
adc
mov
cmp
sbb
test
pusha
movsl
ljmp
mov
je
adc
imul
mov
movsl
sbb
dec
rcl
popa
xor
cmpsl
inc
pop
into
xchg
aam
aad
repnz
xchg
pop
sbb
mov
aad
out
jnp
push
xor
lock
xor
fs
jl
pushl
cmp
pop
cmpsb
or
adc
ret
dec
decl
sbbb
insb
pop
rorb
jae
cmpsb
lret
mov
xchg
or
jbe
test
xchg
les
call
add
dec
mov
cwtl
into
lock
xor
call
outsb
mov
ret
xchg
inc
jno
scas
shlb
test
xchg
cmp
repz
sub
and
cmp
push
xchg
xor
mov
ja
cmp
xchg
sub
jns
xchg
add
int
subb
ss
hlt
out
push
int3
hlt
adc
and
dec
sti
call
add
arpl
sub
clc
dec
imul
fisubrs
in
adc
jl
push
push
loope
shrb
incb
hlt
dec
and
shrl
cmc
cltd
dec
push
cmp
jp
mov
adc
lcall
mov
popa
jg
loop
xor
cmpsb
add
cmpb
push
loopne
jle
xor
xchg
dec
pop
inc
mov
lret
pop
sub
cmpsl
cmpsl
inc
loop
push
fsubl
imul
ffree
out
inc
scas
xchg
pop
sahf
jle
call
xchg
fisttpll
and
movsb
add
mov
movsl
pop
jmp
sbb
xchg
sarl
xor
xchg
xchg
pop
stos
dec
mov
or
pop
pop
adc
mov
push
scas
sub
and
jle
out
cmp
mov
mov
jae
push
mov
xchg
add
or
push
mov
mov
mov
push
pusha
inc
push
inc
call
or
out
jmp
fcompl
inc
pop
sub
addr16
add
push
push
insl
int
jle
incl
jge
adc
movsb
mov
sbbb
mov
push
out
fsubrs
push
jmp
fsubrl
jge
out
cmp
inc
cwtl
cmp
or
out
sbb
pop
stos
adc
mov
pop
and
test
mov
inc
mov
dec
adc
add
cmpsb
out
test
testl
mov
popf
scas
daa
loop
nop
cli
pop
xchg
shl
dec
and
in
gs
cmc
xor
mov
test
add
mov
add
test
mov
push
and
inc
shlb
add
push
mov
add
or
xchg
pop
aam
je,pn
add
cwtl
or
sub
jnp
lcall
or
push
rcrb
jnp
and
fsubrp
dec
je
sub
mov
or
pop
mov
sbb
mov
jns,pn
je
jne
add
mov
iret
xchg
outsb
or
stos
mov
lods
or
adc
dec
add
out
adc
adc
lcall
mov
sbb
lods
sbb
and
mov
xor
testb
pop
faddl
jp
stos
sti
adc
mov
mov
sub
pop
test
movl
imulb
lock
ljmp
mov
sbb
cmpb
aad
add
scas
loope
mov
jp
movsb
sub
pop
shl
fcompl
idivl
or
pop
xchg
outsb
dec
jbe
mov
lahf
lahf
je
orl
cwtl
jl
nop
clc
lret
das
jmp
pop
xchg
loopne
mov
fisubrl
mov
xchg
pusha
clc
mov
bound
das
bound
jl
cs
jecxz
shlb
leave
mov
sub
addb
cmpsb
sub
cs
icebp
mov
jae
sbb
mov
ljmp
push
adcl
or
ret
inc
or
clc
pop
int3
dec
mov
push
push
ds
std
lods
sub
data16
lret
or
cmp
data16
push
leave
jge
cs
cmpsl
and
lcall
scas
pop
adc
out
andb
jne
call
stc
pusha
sub
dec
xchg
and
pop
push
cmc
pop
sub
divb
fwait
jecxz
sarl
cwtl
stos
xchg
andl
mov
mov
cmpsl
cltd
or
fsts
mov
repnz
test
loopne
add
ret
cmp
andb
sub
aad
ljmp
call
scas
imul
div
imul
repz
test
mov
push
sbb
xchg
mov
push
fistl
mov
cmp
icebp
lock
adc
jl
dec
or
pop
jmp
incb
xor
sahf
adc
xchg
movsl
gs
and
fistpl
out
mov
and
push
lret
xor
pop
popf
add
cmp
fdivp
mov
cwtl
call
jp
pop
dec
mov
fcoml
ret
add
cmp
push
jg
dec
add
push
mov
andl
mov
jge
out
cmp
pushl
cmp
popf
adc
test
into
dec
pop
pop
xor
push
mov
pop
js
or
iret
lret
ss
shlb
ss
test
push
inc
pushf
adc
inc
adc
fldl
clc
or
repnz
pop
aam
push
xchg
into
imul
or
mov
cmc
jns
mov
add
mov
mov
push
iret
push
xor
add
adc
rcrl
push
lahf
mov
fsubrl
inc
movsb
subb
pop
nop
cmpsl
jmp
xchg
adc
test
add
aam
loopne
xlat
sub
out
pop
mov
inc
cmc
into
test
mov
adc
sub
btr
or
or
mov
out
notb
push
jle
fnstsw
push
rcrb
rolb
mov
adc
shrb
pop
fsts
dec
repz
mov
sub
or
or
push
lock
xchg
xorb
xchg
sub
stos
and
jmp
jnp
or
addr16
movsl
fistpll
and
lods
jo
jle
xchg
decl
inc
sub
cmp
sub
clc
rol
or
loope
rorb
inc
enter
movsl
or
lret
subb
mov
popa
jns
hlt
imul
xor
inc
cmpb
or
add
and
or
sbb
push
and
adc
add
aad
out
rorb
xchg
jmp
xlat
mov
rorb
jns
orl
dec
or
or
add
test
icebp
mov
dec
or
lcall
icebp
lahf
mov
nop
mov
iret
inc
adc
xchg
mov
cmp
sub
arpl
inc
cmp
test
stc
push
or
movsl
push
outsb
and
scas
inc
aad
stc
js
les
sbb
add
xchg
shlb
repz
insb
ret
je
mov
mov
xchg
push
cmp
jns
test
subl
call
jns
and
push
in
cltd
pop
pop
cmp
mov
ja
and
push
seto
inc
leave
mov
sub
adc
mov
mov
dec
lcall
ja
in
push
mov
notb
pop
and
rcr
dec
dec
pusha
sub
shrl
jbe
cwtl
inc
aam
or
fiadds
out
push
pop
sti
push
sub
sarl
cwtl
mov
and
dec
push
dec
iret
loopne
test
xlat
cli
and
adcb
movsl
icebp
xor
push
xor
enter
xchg
mov
sub
adc
jle
movsl
or
mov
lock
fcmovne
mov
jae
fincstp
sub
pop
xchg
cs
stc
shlb
repnz
jne
fstpt
lods
push
inc
fimuls
pop
stc
cmpb
mov
scas
add
add
pushf
orb
jp
xchg
mov
xor
pop
fbld
outsb
fidivs
test
repz
inc
stos
arpl
lods
enter
or
mov
aam
or
das
loopne
ss
jl
adc
and
sti
inc
sub
or
ret
roll
shl
aam
dec
cmp
negb
sub
subl
sar
xor
jno
cmc
push
adcb
das
mov
sti
sbb
and
repz
aad
je
inc
ljmp
sub
fbstp
push
rcl
inc
dec
or
jp
int
cld
pop
cwtl
loop
loopne
mov
lds
call
in
jne
ja
aaa
xchg
sub
les
in
or
push
icebp
cmp
mov
aaa
or
pop
sbb
subb
jl
xlat
pandn
out
fdivs
mov
or
sbb
mov
test
jo
sub
movsl
aad
mov
lds
push
xlat
mov
fildl
clc
pop
fldt
outsb
xor
mov
dec
fdivrl
sbb
jecxz
js
lcall
ljmp
fsts
mov
fcmovb
bound
push
cmp
sub
aas
imul
stos
jo
imul
sti
add
mov
push
sub
push
repz
cs
sub
divb
dec
in
push
fcmovnb
jl
push
sub
in
pop
mov
add
int
stos
push
ja
jl
out
jl
pop
out
sahf
fsts
daa
rcl
adcb
iret
pushl
notb
and
jge
mov
push
and
inc
mov
dec
dec
lods
loope
pop
icebp
iret
sub
xlat
andb
hlt
test
lret
jge
pop
or
and
add
mov
jl
orb
je
mov
daa
xchg
sub
and
pushf
and
out
or
out
fadd
jg
or
jmp
leave
rolb
outsl
fisubrs
outsl
jl
rcl
mov
insb
sbb
mov
jl
inc
or
and
lret
adcl
sub
push
shlb
lods
icebp
dec
mov
xchg
jne
sbb
sti
and
xor
pop
and
movzbl
imul
xchg
jnp
cmp
add
sbb
popf
lea
jo
inc
mov
cs
and
sbb
sarl
pop
test
fldcw
xlat
dec
mov
movsl
sbb
xchg
mov
push
in
lret
mov
lret
sar
incl
mov
xchg
mov
into
mov
cmp
mov
ja
pop
push
imul
push
ret
ss
mov
outsl
gs
jg
dec
lret
xor
dec
sbb
pusha
loope
xchg
sbb
je
push
adc
jmp
dec
add
inc
sub
adc
inc
and
lcall
maskmovq
idivl
add
xchg
lds
ret
ja
shlb
jnp
mov
jmp
leave
test
mov
pop
dec
scas
test
add
push
insb
mov
dec
testb
lods
ficomps
lods
sub
pop
mov
dec
xor
dec
sub
xor
lret
enter
cmp
and
insl
int3
cmp
cwtl
cmpl
cmp
stc
mov
lret
mov
mov
mov
jg
pusha
mov
jmp
xchg
in
daa
jp
add
mov
loope
lcall
or
xchg
cltd
jge
xlat
add
ret
mov
fisttpll
fists
lea
adc
push
and
stos
adc
into
movsb
fdivl
insl
inc
movsl
lret
pop
mov
into
out
loopne
mov
mov
mov
lcall
pop
and
mov
scas
sub
mov
mov
cwtl
dec
mov
cwtl
scas
aas
jle
cmp
dec
js
aas
dec
and
sbb
pop
loopne
lods
jl
sbb
aam
sar
xchg
inc
rorl
fs
addr16
inc
cmp
jbe
subl
je
mov
aam
pushf
add
fsubrp
scas
js
stc
xchg
sbb
sub
mov
rcll
push
out
pusha
lret
xchg
jmp
cld
repz
sub
ljmp
or
jp
push
add
pop
stos
xor
int3
adc
add
and
mov
cmp
aaa
push
inc
mov
popf
iret
sub
push
sub
nop
aaa
popa
add
test
xchg
push
scas
int3
xor
aad
add
adc
in
jne
mov
sub
incl
pop
mov
jmp
sbb
xchg
pop
sub
int3
xchg
je
lret
pop
movsb
or
pop
mov
inc
stos
cmp
xor
rcr
loopne
xchg
add
or
negb
mov
test
jecxz
pop
aaa
fiaddl
push
fs
icebp
rorl
popl
sbb
jnp
rep
mov
pop
jge
jno
jl
mov
xor
lret
test
cli
je
and
and
fs
lcall
fists
jbe
mov
push
test
popf
cld
adc
ret
push
sbb
cmpsl
cs
mov
jb
adc
lock
jnp
mov
gs
add
rorl
sbb
mov
xor
lods
xor
mov
sti
ficomps
lock
shl
scas
xchg
ja
test
movsb
jge
loopne
je
lret
mov
and
mov
mov
pop
ljmp
stos
icebp
fildll
jecxz
adc
mov
pop
xchg
inc
jnp
mov
lock
dec
mov
lret
mov
adc
mov
lods
ret
push
stos
add
fstl
ja
cmc
mov
dec
dec
in
inc
addl
push
sub
sbb
add
notb
and
nop
scas
fisttpll
imul
aam
cmp
and
mov
cmp
mov
jae
mov
sub
mov
push
in
iret
loopne
popa
push
mov
ss
sbb
and
test
aas
jae
mov
repz
and
cltd
dec
dec
push
sub
inc
xor
add
cmp
cmc
gs
shl
in
outsl
add
xchg
xor
push
decl
icebp
or
ljmp
fnsave
sub
push
sub
sbb
jbe
cmc
xchg
cmp
push
inc
sbb
xlat
test
fnstsw
jns
pop
mov
or
dec
jno
insl
sti
int3
loopne
jecxz
movsb
arpl
cli
adc
mov
mov
jne
mov
das
or
fs
pop
or
or
sbb
sub
lds
sub
out
inc
fsubrl
loope
sub
lods
cmpl
xchg
rorb
jl
icebp
jl
push
dec
push
lea
xor
sbb
or
repnz
push
cmp
fsubl
pop
mov
mov
js
xchg
or
pop
mov
pop
loope
xorb
dec
sub
xor
mov
mov
fbld
dec
or
test
mov
iretw
movsb
sub
mov
mov
daa
mov
mov
test
mov
sbb
xlat
cmp
fdivrs
xor
and
mov
mov
dec
push
jb
cmp
jne
in
clc
mov
push
lcall
sarl
push
gs
xchg
jb
dec
jl
icebp
push
aas
jl
pop
mov
out
cs
mov
inc
into
adcl
loope
fimull
mov
ja
sub
jmp
dec
lret
cmp
mov
mov
or
jle
stos
inc
cmc
jmp
lock
jbe
mov
adc
ds
ja
lds
cmpsl
in
aas
add
mov
inc
cmp
or
aaa
imul
adc
cmpsl
outsb
ja
inc
sbb
aas
cmpsb
in
popf
sub
pop
mov
jno
cltd
jb
loope
mov
xchg
xchg
push
xchg
ljmp
dec
out
sub
push
mov
clc
or
rclb
inc
mov
inc
imul
loopne
rclb
fcmovnbe
aas
test
mov
pusha
repnz
push
addl
cmp
mov
and
xchg
inc
loope
iret
test
rorb
sub
mov
jbe
inc
sbb
divl
lds
sahf
popf
sahf
push
jns
sbb
fidivrs
icebp
pop
mov
xchg
mov
pop
ljmp
inc
fistpl
sahf
mov
sbb
je
sbb
lret
lods
sub
and
loop
mov
arpl
outsb
cmp
push
xor
cmp
lds
cmp
cmpb
or
xchg
sbb
inc
dec
clc
mov
aam
pop
ljmp
inc
dec
cmpsb
push
mov
cmp
add
sti
adc
add
push
push
clc
mov
lock
add
add
js
insl
inc
iret
mov
xor
mov
xor
or
incl
std
dec
lock
cwtl
cmp
loop
mov
movsb
rcll
push
or
xchg
movsb
jne
jl
idiv
and
sbb
push
imul
fnstcw
sub
sbb
pusha
std
lcall
leave
in
or
filds
jle
jecxz
cmp
lock
jno
xchg
fnstenv
xchg
fcmove
mov
and
mov
ficomps
sbb
sub
jo
pushf
mov
add
pop
add
cmp
lret
stos
or
mov
fcoml
out
fidivrs
movl
fimuls
dec
and
scas
sbb
push
inc
or
xlat
rol
mov
jl
movsl
jmp
into
in
out
lock
icebp
add
xchg
xor
inc
jne
orl
in
xor
negb
push
jae
scas
mov
pop
xchg
leave
cmp
cli
out
xchg
idivl
jne
arpl
aad
testl
add
in
scas
mov
push
cmp
pushf
std
inc
adc
adc
mov
aaa
fwait
sub
adc
mov
lock
lcall
rol
jmp
push
std
daa
adc
mov
mov
test
inc
cwtl
je
jne
mov
xchg
into
repnz
dec
xor
xchg
lret
dec
aaa
push
push
mov
cmpsb
jge
cmpsl
cmp
call
les
les
test
xchg
pop
shrl
es
pop
mov
xor
imul
sbb
loope
das
xchg
js
xchg
push
fildll
stc
subl
xchg
pop
xor
push
sub
xlat
sbb
xlat
scas
cmc
int3
sbb
ljmp
int
pop
lods
inc
xor
lds
shl
xor
push
pop
mull
xor
xchg
leave
fwait
cli
dec
std
mov
xchg
push
stos
push
data16
sbb
loope
andb
fnsave
push
sub
lea
loopne
mov
or
ja
cs
cmp
cmp
insl
sbb
lret
sbb
add
es
push
int
mov
es
fcoml
jl
movsl
icebp
in
jmp
jecxz
xchg
cld
fnstcw
sub
mov
mov
push
jg
cmp
pop
inc
mov
lahf
stos
stc
rol
xor
fbstp
dec
rorb
push
imul
ja
test
dec
ljmp
stos
mov
jp
push
sbb
mov
rolb
inc
mul
xor
sub
into
sub
inc
jbe
mov
ds
enter
lea
xor
xchg
sbb
mov
add
jg
sbb
lock
jo
dec
inc
push
sub
loope
repz
inc
mov
mov
mov
adc
cwtl
clc
sahf
sbb
push
mov
in
add
hlt
ss
sbb
inc
sub
jl
and
movsl
jecxz
xlat
push
out
test
adc
in
fdivrs
in
shlb
xor
ret
lock
dec
sarb
rolb
mov
adc
scas
lods
fs
mov
mov
mov
lds
dec
bound
add
addr16
jo
add
das
ret
ficoms
call
gs
in
clc
fcomps
dec
cld
and
adc
mov
pop
sub
out
mov
mov
into
cmp
fs
jecxz
inc
std
cltd
sbb
lock
testb
jbe
sub
cltd
aaa
cmp
dec
push
leave
clc
pop
adc
sbb
lret
jl
and
and
and
xor
or
movsb
jg
aad
lea
jp
push
add
sbb
add
test
popa
and
sub
push
enter
daa
xchg
lods
adc
lret
add
addl
or
dec
xor
cmp
out
pop
repnz
sub
imul
or
pop
or
dec
loope
ljmp
inc
sub
push
sbb
mov
pop
test
in
neg
mov
or
jb
enter
addr16
ret
jmp
sbb
adc
push
jae
dec
lret
xor
and
cmc
mov
xorb
xor
mov
incb
or
push
dec
jno
cmp
sbb
and
inc
xchg
test
fmuls
ficompl
sbb
add
mov
mov
sbb
xor
or
jmp
fidivrl
mov
jo
push
cmp
std
loope
jmp
not
lods
mov
leave
xor
sti
or
sbb
cltd
call
add
cmp
lock
leave
insb
dec
mov
das
outsl
lcall
xchg
popa
and
xchg
es
xchg
jne
mov
rolb
push
adc
pop
lahf
dec
dec
cmpsb
scas
or
mov
inc
popa
push
rcrb
adc
test
mov
fistpl
and
xchg
scas
add
sbb
sbb
test
xchg
loope
shl
rclb
lock
test
adc
sub
fistl
or
ret
mov
mov
pop
jmp
cmpsl
or
movsb
lock
clc
ret
into
stc
cld
xchg
dec
out
pusha
ret
jae
nop
inc
cmc
push
inc
dec
bound
je
inc
sbb
inc
std
cmc
jg
and
jle
and
push
pop
pop
pop
sub
fs
inc
cmpsb
hlt
clc
sbb
mov
rcl
loop
test
mov
fcomip
mov
stos
sbb
stos
insb
mov
jge
pop
jbe
or
in
mov
ss
mov
xor
jbe
into
filds
jne
setle
fcomip
xchg
xor
pop
xchg
push
call
sbb
dec
sbb
std
lods
and
pop
sbb
outsl
push
xchg
fldt
sahf
fcomip
imul
pop
sbbl
je
adc
daa
push
cmp
clc
pop
aam
shlb
mov
in
push
movsl
push
pop
lods
and
out
ficompl
imulb
sbb
xor
ljmp
mov
adc
jp
jmp
add
loope
inc
mov
push
pop
cltd
adcb
sub
add
sahf
sarl
pop
mov
jbe
pop
and
jge
rolb
fstps
ljmp
jo
lods
add
je
idivl
and
push
pusha
into
out
dec
xchg
mov
movsl
xchg
mov
pop
sbb
scas
loopne
mov
rorl
cmpsb
das
cmpsb
push
hlt
sub
sbbl
lods
data16
jge
push
int3
inc
sbb
sbb
subb
mov
in
pop
adcb
loopne
mov
imul
mov
fbld
fstp
sub
mov
shr
xor
lods
mov
aaa
stos
out
imul
orl
fistpll
sbb
fidivl
pop
push
pop
into
xchg
mov
cwtl
neg
add
test
add
shlb
lds
mov
hlt
inc
sub
inc
push
arpl
and
sete
pop
aad
icebp
cmc
shlb
xor
es
cld
mov
rcll
xchg
jae
in
adc
inc
inc
popa
mov
lret
dec
insb
mov
sub
jbe
push
call
mov
and
je
xor
mov
orl
filds
aas
and
int
mov
data16
inc
mov
mov
std
mov
repz
das
xchg
fbld
pop
push
div
je
push
push
or
dec
aaa
sti
outsl
repnz
xchg
and
adc
aaa
outsb
push
and
add
adc
lcall
jno
test
popa
outsl
pushf
movsl
aaa
add
aaa
cmpsb
subl
test
xor
xor
sub
movsb
push
jl
popf
dec
push
and
or
orb
xchg
in
xchg
pop
fwait
je,pt
cmp
stc
into
sub
daa
push
stc
decl
in
fnstenv
sub
fwait
cmp
loope
jb
imul
cmp
mov
adcl
lods
fstpt
mov
jno
pop
mov
pop
jmp
sub
mov
adc
ja
outsb
in
lock
xor
mov
add
dec
in
xor
lods
cmp
sbb
in
mov
push
pop
aad
lea
add
mov
fldl
mov
cmp
lods
ljmp
cwtl
xchg
sub
sbb
fadds
or
mull
lock
in
mov
push
xor
push
cmc
lea
mov
cmp
hlt
xchg
xor
sbb
jno
or
scas
xchg
iret
mov
lock
fdivrs
adcb
adc
loope
pushf
addr16
xor
pusha
jge
add
jp
movsl
mov
xlat
arpl
mov
add
inc
and
push
ficomps
orl
repnz
fsubs
mov
cmp
mov
out
adc
jnp
rcrl
aam
sti
fwait
in
scas
jmp
xchg
dec
xchg
ficompl
sub
mov
mov
push
jne
imul
cmpsb
jno
test
inc
jecxz
or
mov
inc
popf
jb
jno
sub
testb
cmpsl
sbb
fisttpl
addl
out
mov
data16
pop
out
sbb
out
add
andl
in
fildl
hlt
hlt
sbb
lock
jle
icebp
sbb
adc
rorb
cltd
data16
fwait
cld
or
push
in
mov
mov
adc
call
hlt
cld
movsl
icebp
movsb
in
xor
lret
fsubrs
loop
std
sub
push
shrl
lret
mov
shll
adc
enter
out
jp
cmp
aam
mov
rol
jbe
sbb
mov
push
xchg
jecxz
dec
fnstcw
fisttps
subl
rolb
xchg
mov
shr
sbbb
xchg
out
test
jns
ret
sti
and
mov
lea
or
mov
jg
ss
jno
mov
clc
les
push
fnstcw
and
xchg
adc
xchg
sbb
dec
xchg
cwtl
jne
pop
inc
xor
or
movsl
mov
repnz
mov
sub
sub
scas
mov
call
cmp
sbb
jg
pop
mov
fs
stc
in
pop
xor
ret
push
add
add
dec
in
call
in
fadds
subb
testb
mov
sub
test
and
into
fstl
xor
in
push
pop
fldt
test
out
push
cs
fmull
sar
mov
xor
pop
inc
jmp
imul
out
push
fdivp
sahf
adc
adc
add
rorb
fisttps
ret
dec
ret
mov
xchg
roll
and
push
repnz
cmp
mov
xchg
sub
xor
jbe
clc
cld
push
lret
cmp
jp
nop
popf
xchg
ja
sub
test
push
aaa
xor
cmp
xor
nop
sti
jae
mov
je
jae
je
cld
sub
movsl
lods
je
sbb
testb
add
outsb
mov
xchg
xor
in
adc
lret
loope
lret
xor
cmc
cmpsl
add
les
push
pop
cli
testl
mov
xor
imul
std
xchg
inc
pop
cmp
insl
aad
mov
pop
mov
ficoms
jp
aad
jmp
std
out
mov
stos
dec
cmpb
cmp
and
add
pop
cmp
in
fmuls
imul
call
mov
je
int3
and
pop
jbe
out
pop
xlat
lods
cmp
sbb
mov
fidivrs
subb
rorl
cmp
fists
icebp
mov
mov
mov
inc
dec
pop
rorl
xchg
loop
fisttps
fnstcw
sbb
inc
cmc
pop
loop
xlat
out
cmp
pop
mov
and
icebp
add
add
repz
scas
cmpl
sti
pop
outsl
imul
popf
or
add
loop
or
ds
in
sahf
call
sbb
pusha
mov
int3
mov
test
dec
jnp
insb
mov
pop
ret
aam
test
xor
jb
cld
inc
jno
iret
and
mov
xchg
shlb
jmp
fcomi
and
cltd
push
or
lcall
lret
aas
aas
movsl
add
lcall
mov
push
loop
out
push
fsincos
shl
cmc
and
int3
jb
rolb
or
in
or
popa
lods
aaa
inc
mov
iret
inc
dec
dec
cld
orl
mov
jl
or
cmpl
and
jbe
mov
test
pop
adc
mov
fwait
dec
jno
sub
xchg
gs
imul
pop
push
xchg
mov
insb
stc
jne
ret
into
arpl
out
mov
cmp
sub
mov
add
imul
jne
and
xchg
pop
mov
dec
cmp
pop
jge
in
push
xchg
std
mov
stos
inc
sbb
pop
mov
xchg
mov
je
pop
stos
or
arpl
loope
jb
mov
cmpsl
push
xor
fldenv
add
orb
inc
popf
out
xchg
push
inc
fst
pop
loopne
jno
dec
dec
ja
pop
dec
jnp
jecxz
cmp
enter
imul
or
pop
shrb
outsl
sbb
movsb
sub
rclb
loope
add
ficoml
pop
inc
or
dec
addr16
mov
inc
jo
xchg
lret
or
loope
mov
movsb
and
and
xchg
rolb
cmp
xchg
pop
adc
stos
jnp
outsl
jo
int3
loope
sahf
cltd
mov
or
pop
ret
cmpb
dec
inc
cmp
sub
cld
mov
bound
lret
mov
dec
dec
sbb
movups
shrb
xor
jge
aas
adc
lcall
jae
mov
push
in
jmp
in
mov
push
sarl
addr16
pop
aaa
and
ds
jmp
and
divb
insb
into
sub
notb
aad
add
frstor
pop
and
pop
inc
lods
jnp
aad
int
outsb
andb
out
rcll
sar
insb
xchg
push
inc
adc
ljmp
and
mov
xchg
jns
push
jp
rclb
je
sbb
into
sub
inc
xchg
or
jge
lods
sbb
cltd
push
sbb
jg
cmpsb
or
cmp
push
addr16
lahf
setns
xchg
adc
testb
mov
popf
push
push
arpl
leave
cmp
xchg
push
into
dec
andl
dec
cmp
xchg
pop
in
push
fmuls
cmp
and
lea
xchg
insb
out
inc
sub
addr16
and
out
adc
jmp
dec
pop
jg
pop
inc
test
mov
or
fists
push
icebp
jno
mov
sub
push
test
lods
jge
mov
dec
mov
stc
xor
jo
dec
mov
idivb
ljmp
mov
int3
push
or
or
fs
out
sarb
in
sub
sub
mov
loope
pushf
xorb
outsb
bound
mov
mov
sub
fdivr
movsb
xchg
dec
push
xor
fadds
inc
mov
stc
and
and
enter
pop
cmp
in
push
and
andl
loopne
into
jne
test
roll
and
xchg
gs
cltd
mov
pop
repz
fwait
push
adc
add
stc
mov
sbb
lods
dec
stos
jg
sub
mov
out
test
sar
cmp
inc
xchg
pop
mov
call
inc
out
or
int3
sub
mov
out
mov
inc
mov
push
or
std
out
xor
out
scas
dec
xchg
ljmp
test
mov
pusha
push
ds
mov
dec
scas
xchg
adc
dec
push
cmp
xor
pushf
mov
fstpt
lcall
fisttpll
arpl
daa
iret
cli
add
dec
or
push
cmp
xchg
out
sbb
inc
lcall
clc
sarl
mov
push
test
cs
test
cltd
insb
lods
ret
jge
ficomps
call
mov
pop
jb
dec
cs
scas
int
loop
fwait
icebp
jns
adc
inc
dec
fiadds
stos
or
mov
subb
xor
sbb
inc
and
mov
aas
jp
pop
mov
xchg
xlat
inc
push
mov
jmp
mov
pusha
cli
jp
insl
xor
popa
or
mov
iret
push
push
pop
loope
roll
adc
xchg
xlat
out
dec
add
repnz
xchg
cmp
push
jp
sub
or
roll
loopne
clc
movsl
repz
mov
jl
mov
movsb
cltd
jnp
in
cmp
push
js
test
mov
jae
and
dec
cmp
stos
int3
push
sub
add
and
rcrl
mov
hlt
cmp
jmp
scas
xor
dec
sti
and
jmp
add
das
loop
and
cmp
jle
orl
fnstsw
inc
sub
test
lods
lcall
add
cld
mov
pusha
push
mov
push
cmpsb
xor
clc
push
or
test
pop
and
insb
lret
sub
fsubp
in
mul
push
fisttpl
xchg
and
aaa
xor
dec
pop
jecxz
pop
xor
aaa
mov
pop
ja
imul
sbb
cmp
scas
cmpsl
sahf
test
mov
stos
push
adc
mov
push
cmpsb
pop
push
daa
mov
sbb
addr16
sub
mov
adc
push
mov
sub
sti
jmp
ss
and
repz
iret
add
adc
mov
into
subb
jae
xchg
das
jo
add
mov
dec
inc
ret
popf
cltd
xor
adc
mov
xor
test
push
xchg
jg
fxch
sahf
pop
adc
push
adc
arpl
xchg
clc
jl
cld
and
shlb
sbb
sub
les
mov
push
adc
cs
scas
inc
pop
icebp
jae
xor
sbbl
les
aas
mov
xchg
inc
add
push
adc
int
out
mov
lret
andl
rcrb
and
pop
ret
lret
push
mov
add
inc
adc
loopne
or
sub
xlat
test
pop
ss
dec
out
fs
or
and
mov
jnp
push
pushf
jecxz
lds
daa
decl
mov
aas
pop
push
cmp
mov
fstpt
cmp
stos
xchg
fbld
in
adcl
dec
inc
fsubrp
stos
loopne
mov
pop
sub
in
lret
jmp
iret
lods
pop
add
pop
lock
shrl
rorb
add
mov
and
std
and
stos
cs
scas
adc
bswap
add
data16
scas
and
fnstsw
add
notb
neg
mov
jnp
lret
push
push
mov
fsubrl
sub
adc
in
jo
mov
or
mov
xchg
xchg
cmc
dec
shl
mov
jl
mov
int3
push
faddl
pop
mov
addb
jp
aas
mov
pop
loop
push
lahf
mov
jp
test
cmp
sbb
mov
jg
and
inc
xchg
sbb
sbbb
push
mov
push
pop
adc
rcrb
imul
in
cmpsb
fildl
xchg
lock
add
pop
loope
push
inc
mov
dec
xor
cs
fdivrl
dec
call
cmpsb
mov
sub
ret
add
hlt
adc
inc
adc
sti
les
in
or
jg
popf
fisubrl
pop
fnstsw
jg
fwait
enter
inc
sbb
cmpb
stos
push
push
mov
add
pop
or
and
dec
jg
pop
fucomi
icebp
fmull
inc
pop
add
sub
stc
inc
loope
rorb
cmovns
fucom
shrb
and
pop
stos
movl
aam
adc
dec
daa
dec
jbe
out
aad
lret
js
sub
push
xchg
mov
cld
sbb
xchg
or
aas
adc
lret
mulb
xchg
jmpw
test
icebp
sbb
add
and
xchg
sahf
inc
sbb
stos
lods
dec
jp
lds
es
mov
xlat
and
push
enter
in
sub
ss
movsl
lret
mov
fidivrl
in
int
movsb
lods
xchg
fnstenv
loope
nop
imul
sub
pushf
std
popa
lods
inc
fildl
cld
outsb
out
xchg
sbb
out
dec
lahf
jp
mov
or
js
adc
jp
test
xor
sbb
mov
dec
pusha
jns
mov
sti
dec
dec
iret
xor
pop
fnstcw
jl
movsl
rcrb
push
sub
out
ss
fcmovbe
jno
fimuls
mov
lahf
adc
fdivrl
mov
xchg
pop
xor
clc
mov
push
or
mov
add
in
and
inc
and
lods
jecxz
adc
pop
cmp
adc
shrb
cmpsl
scas
cmpl
and
fsubrp
sub
loope
ss
push
data16
enter
inc
inc
fidivl
neg
dec
xchg
inc
outsl
mov
out
push
mov
add
mov
xor
jl
mov
xchg
cltd
ret
mov
leave
mov
xor
lods
xorb
mov
inc
lret
dec
bound
push
rcll
sbb
pop
iret
push
cld
sarl
inc
inc
dec
add
sbb
int3
inc
xchg
imulb
dec
add
pop
lods
push
loopne
in
cmp
pop
xor
sahf
out
shll
dec
incl
sarb
xchg
xlat
insl
mov
out
and
testb
xchg
mov
mov
add
ds
ljmp
iret
add
or
or
outsb
jl
shlb
imul
mov
and
enter
into
mov
xor
ret
out
std
dec
pop
mov
roll
sub
lcall
xchg
xor
mov
popa
scas
dec
xchg
mov
lret
arpl
adc
daa
xor
push
inc
mov
mov
and
cld
jmp
fmuls
pop
inc
insb
clc
pop
ret
and
nop
les
pop
out
sti
dec
jne
jp
inc
xchg
call
pop
movsb
push
test
aam
sti
pop
ret
pop
push
lret
cmpsl
push
jle
mov
aad
add
fidivrs
loop
jae
out
pop
call
loope
mov
mov
mov
loop
sub
addb
jmp
cmc
and
push
icebp
mov
lea
mov
les
bound
bound
and
fmull
and
sub
frstor
stos
cmp
lds
mov
jge
push
repnz
xchg
push
xchg
jg
repz
jl
mov
ret
sub
lcall
repnz
loopne
mov
xor
push
gs
and
mov
sub
pop
in
mov
adc
add
pop
loope
sahf
adc
xchg
rolb
or
inc
lock
mov
cmpsb
mov
mov
jbe
nop
push
fldenv
dec
cmp
mov
test
scas
sarl
lcall
inc
inc
into
fidivrs
imul
je
es
add
jnp
ljmp
fcomps
int3
inc
dec
daa
push
in
pusha
sbb
mov
stos
jnp
dec
outsl
xchg
nop
adc
aas
andl
and
jl
pop
shrl
jbe
cmpsl
arpl
sbb
adc
outsl
sub
fcomps
mov
orb
int
repnz
es
in
jmp
repnz
cmp
sti
out
mov
xchg
add
xchg
dec
jge
xor
inc
add
add
pop
into
adc
in
pop
push
sbb
add
fsubp
movsb
faddl
fdivr
xchg
push
pop
jg
popa
dec
mov
jl
add
decl
incb
movsl
adc
add
xchg
dec
sub
iret
xor
pop
insl
dec
loopne
ja
int
cli
sub
mov
sub
sub
xor
adc
aad
jnp
inc
stos
mov
push
add
or
or
stc
sub
imul
xchg
orb
pop
orl
xlat
or
cmpsl
xchg
fcoms
dec
adc
shl
push
cmp
lea
xor
sbbl
pop
jno
pop
add
or
xlat
add
dec
ficoms
lcall
cmp
je
cli
fisttpll
jmp
mov
lret
xchg
movb
andl
iret
aaa
xchg
stc
cmc
dec
mov
or
mov
ret
cmpsl
xchg
hlt
shrb
push
push
lea
or
jl
fisubs
xor
jae
out
xlat
jno
outsb
addr16
or
pusha
dec
mov
stos
xacquire
dec
leave
mov
mov
inc
jb
sub
push
insb
mov
add
scas
push
test
xorl
pusha
sbb
shll
call
pop
insl
insb
lods
jge
std
rcrb
aas
xchg
sub
sub
and
mov
inc
or
sbb
movsl
mov
shlb
loope,pt
jl
xor
push
add
mov
cwtl
out
ja
and
ja
lret
inc
lret
popf
lret
lea
test
test
dec
icebp
xor
mov
stc
cmpsl
std
inc
daa
fdivs
adc
ret
jae
aam
js
fcoml
stos
add
cwtl
loope
loope
inc
xor
clc
inc
ret
fdivl
mov
aam
inc
or
mov
ss
les
sti
dec
xchg
into
dec
xlat
pop
clc
std
push
std
mov
aaa
mov
adc
adcl
int
sub
cmpsl
popf
data16
dec
add
mov
xor
mov
aam
repz
jae
js
aaa
mov
fidivs
ja
scas
inc
fcmovnb
cmp
dec
xor
dec
dec
jecxz
gs
pop
push
stc
and
lahf
subl
or
jg
incl
push
out
insl
jns
dec
inc
xor
pushl
push
push
sub
jp
add
sbb
ret
jge
push
cmp
push
cmpsb
add
jge
cmp
xchg
jg
sub
sbb
pop
in
arpl
sbb
pop
mov
ret
and
jne
add
cmpsl
test
push
mov
cmp
movsb
lods
das
mov
dec
or
xor
std
mov
jg
movsl
dec
push
out
cld
lods
pop
dec
sahf
push
xchg
paddb
gs
test
outsl
shll
add
add
js
mov
outsb
cmp
lea
faddl
faddl
sti
mov
repz
pusha
jns
test
popf
xlat
inc
popa
lahf
out
pop
sub
movsb
loope
dec
fstps
aam
dec
shlb
xchg
ja
push
mov
mov
xlat
xchg
negl
lret
mov
xor
scas
push
mov
push
cmpsl
jbe
test
mov
mov
pop
mov
push
jae
dec
lcall
adcb
pop
cmpb
ret
jns
aam
dec
jle
dec
pop
iret
inc
adc
lcall
mov
push
pop
pusha
dec
andb
xchg
std
dec
bound
rclb
and
jbe
repnz
mov
pop
xor
and
xchg
fcompl
sbb
jo
out
fisttpl
push
dec
arpl
jnp
shrb
fcoml
push
ret
jg
pop
cmp
inc
sub
mov
or
xor
lods
outsb
push
test
fcompl
iret
xor
cmp
push
or
loopne
and
filds
mov
jnp
std
add
mov
dec
imul
cmp
scas
sub
inc
fisubl
mov
orps
pushl
push
hlt
out
or
jb
push
je
cmp
and
pop
xchg
xchg
mov
jnp
mov
dec
mov
daa
aad
mov
sbb
sbb
inc
call
xchg
sub
cs
pop
stc
pop
or
push
sbb
pusha
xor
mov
cmpl
lcall
cmpl
loop
pop
and
mov
mov
idiv
cmpsb
push
mov
pop
dec
aam
out
fadd
and
shlb
sti
ljmp
ja
lds
fimuls
xor
pop
stos
sub
lret
add
jb
test
lods
pop
jge
xor
scas
add
jge
cmpsl
xorl
jno
sub
cmp
popf
xchg
jp
into
add
loopne
stos
sarl
loope
adc
in
or
test
hlt
sub
aam
mov
lret
aaa
imul
adc
sub
add
dec
popf
dec
mov
sub
adc
iret
push
mov
jno
and
aad
lock
push
xor
out
add
stc
jns
or
xchg
xlat
testl
xchg
ljmp
mov
stc
daa
xchg
repnz
jmp
mov
jle
leave
into
push
pop
fmuls
mov
aam
movsb
sub
add
sti
clc
xchg
mov
push
add
or
mov
cltd
inc
pusha
sbb
inc
shrl
insl
int
loop
sub
les
cmp
add
xchg
or
out
test
cmp
push
cmpsb
out
adc
daa
mov
xchg
cmp
loope
outsb
int3
adc
daa
mov
cmp
loope
or
push
sbb
mulb
cmp
out
filds
lea
xor
lods
pushl
mov
dec
and
sbb
mov
add
and
dec
fstps
inc
mov
and
ss
pop
mov
xlat
mull
push
lds
push
mov
adc
scas
insb
adc
mov
stos
xchg
movsl
loope
jmp
or
add
mov
pop
cmp
ret
int
es
mov
sbbb
frndint
adc
ret
push
mov
sarb
sub
mov
loop
scas
mov
lods
ja
fwait
or
cs
lods
pop
out
jecxz
popf
outsb
mov
xchg
add
ljmp
jnp
sbb
loopne
out
mov
lret
test
cmp
dec
sbb
addl
ds
repz
xchg
movl
aas
push
fisubs
jmp
xor
rcrl
ss
xchg
pop
push
sub
pop
aaa
orl
repnz
jge
stc
out
mov
mov
mov
outsb
sahf
jne
adc
cmp
test
push
push
cmpl
mov
test
testl
test
cmc
inc
add
out
out
sar
mov
add
add
stc
jge
sub
imul
xchg
mov
jne
mov
cwtl
lods
sbb
ds
scas
cltd
pop
push
jo
jo
dec
hlt
stos
add
test
aam
mov
add
add
xchg
cmpsl
cld
sbb
outsb
int3
pop
inc
push
pusha
es
pop
fsub
in
sti
popf
call
lea
mov
insb
mov
inc
and
jae
test
movsl
inc
fiadds
mov
xchg
jbe
rcr
mov
xor
sbb
inc
fcmovnb
lret
push
negl
xchg
xchg
test
dec
sbb
mov
xchg
ss
imul
pop
pop
rolb
aaa
jns
ss
rclb
outsb
arpl
jb
fdivl
dec
cwtl
or
xor
cmp
cmp
sbb
sbb
lods
push
shll
mov
xchg
stc
inc
icebp
int3
repnz
push
lret
or
lret
decl
cmp
shr
xchg
or
sbb
ss
outsb
aas
mov
cltd
dec
add
add
jb
xchg
aaa
jecxz
cmpsb
icebp
mov
pop
and
aas
mov
mov
call
mulb
daa
stos
and
lcall
sarl
push
popa
xchg
mov
and
movsl
fnstcw
xchg
loope
outsb
out
test
mov
int3
shrb
dec
mov
xchg
jecxz
mov
add
bound
cli
js
mov
pushf
fidivrl
push
and
xor
push
lcall
rsm
sbb
pop
or
enter
add
or
fsubrl
in
call
popa
rorl
jne
aad
test
sub
mulb
cld
xchg
imulb
push
insl
sbb
dec
shlb
and
and
mov
xchg
ds
lret
bound
int3
add
aas
cmp
adc
mov
decb
xchg
sub
test
outsb
stos
lret
fisubrl
cli
repnz
sahf
rcl
xor
jle
sti
gs
fs
cmpsl
fxch
xchg
mov
ja
push
add
es
addr16
std
push
and
ss
arpl
call
or
push
cli
int
or
cmp
ret
out
imul
mov
movsl
add
dec
inc
cmp
and
sub
fdivl
mov
or
sar
sub
cmpsb
mov
fildll
enter
mov
cmp
repnz
jae
inc
and
fldl2t
mov
add
cmpsb
mov
fidivrl
mov
push
inc
lahf
in
data16
jne
rcll
mov
mov
pop
js
jne
stos
xor
push
pop
insl
fdivs
lret
xor
out
sbb
pop
rcll
xor
inc
pop
mov
into
inc
ret
je
mov
ljmp
into
fwait
lahf
sbb
or
call
notl
bound
dec
loopne
jae
mov
xor
xchg
sti
lods
fs
fsub
je
fsubr
xor
xchg
or
pop
cltd
adc
insb
xlat
mov
jo
mov
mov
ret
dec
fprem1
add
adc
movsb
iret
push
mov
or
mov
cmc
movsl
add
mov
in
andl
cld
jp
sub
popf
dec
pop
inc
push
push
rcrb
std
inc
lret
lods
xchg
xchg
mov
inc
popf
cs
mov
mov
xor
or
lods
cmpsb
out
push
xchg
dec
jmp
ljmp
mov
clc
orb
insb
es
ljmp
ja
push
inc
mov
psubw
mov
repnz
push
imul
mov
rolb
popa
iret
cmpsb
ja
in
xchg
std
jge
mov
sti
nop
repz
or
mov
aas
decb
push
add
dec
sbb
mov
pop
fistpll
or
and
aam
sbb
rclb
jae
mov
stos
pop
arpl
lods
jbe
adcl
lret
loopne
mov
jp
out
xlat
jmp
and
push
sbb
xor
fcomps
sbb
mov
jbe
fildll
mov
stc
rorb
in
int3
aas
jmp
sub
add
push
add
js
and
lock
mov
fcmovnbe
push
out
pusha
jp
sub
cmpsl
pop
rorb
adc
xor
fistpll
inc
lcall
xchg
loope
cmp
mov
pop
pusha
pop
sub
lret
inc
sub
mov
mov
hlt
out
inc
gs
stos
jae
sti
xor
or
mov
xchg
pop
mov
aaa
popa
in
mov
sahf
sbb
scas
sub
push
mov
xor
push
call
jp
dec
hlt
in
sbb
movsl
cwtl
test
mov
aas
xchg
jnp
gs
adc
jne
inc
out
xchg
xor
lods
cmpsl
inc
lret
push
iret
ds
xchg
out
mov
and
daa
sub
cmp
add
mov
or
or
mov
test
mov
inc
cs
fcoml
fnstsw
mov
xor
incl
mov
inc
add
lcall
add
out
mov
cmp
push
cmp
jmp
or
fbld
and
pushf
insl
shrl
push
movsl
sbb
jp
or
dec
push
repz
ret
call
xor
cli
stos
mov
sbb
pop
adc
shrb
int
jae
sti
aas
fildl
mov
cmpsb
and
inc
sahf
inc
cld
aas
clc
icebp
ret
nop
out
sbb
lods
cmp
aaa
jb
out
mov
mov
and
jmp
jae
push
and
or
ficoms
repnz
sub
enter
fiaddl
add
push
jg
sbb
jb
pop
xchg
mov
and
jle
add
mov
setne
mov
lods
dec
out
das
and
mov
xchg
andb
dec
pop
cmpb
cmp
mov
lahf
jmp
test
insl
mul
out
xor
ja
icebp
ret
push
add
in
cmp
pop
jle
xor
cmpsb
in
mov
mov
push
xor
pop
dec
sub
mov
cmpb
pop
in
xor
lret
ret
pop
xchg
jp
push
imulb
mov
add
loope
dec
sub
je
cmpsl
mov
loopne
test
arpl
cmc
sbb
pop
pop
add
jl
pop
out
loopne
vpsubusb
and
push
ret
sub
pop
ljmp
add
lea
cmp
into
test
cmp
pop
jnp
in
popa
or
dec
daa
repz
ja
inc
icebp
roll
addb
mov
xchg
sub
sbb
stc
xor
xor
sahf
movsl
dec
mov
cwtl
insb
and
sub
scas
adc
scas
push
xchg
adcl
setnp
lods
in
cwtl
into
test
adc
dec
and
es
in
push
lods
push
pop
add
and
mov
dec
xor
out
mov
aas
addl
ret
xchg
mov
mov
in
push
bound
or
xchg
push
or
mov
jge
xchg
add
inc
pop
imul
xchg
lcall
ja
fs
xchg
test
icebp
pop
inc
jno
cmp
adc
pop
and
ficoml
cmp
daa
xor
cmp
repz
and
sub
mov
aaa
jns
jmp
jmp
jne
mov
mov
add
and
adc
in
add
lret
jg
movsl
incb
mov
stos
inc
mov
iret
inc
xchg
cmc
frstor
push
jmp
xor
add
add
jo
decl
pop
mov
ss
call
xor
ljmp
sbb
lods
push
xchg
fwait
push
movsb
and
xchg
outsb
shlb
pusha
test
int3
jge
js
mov
adc
cltd
into
jnp
into
orb
stos
xor
test
jmp
cmp
addr16
pop
cltd
sub
and
adc
rorl
mov
xlat
dec
mov
adcl
xchg
rolb
xchg
mov
jae
fldl
pop
popa
cmp
mov
ss
lods
stc
sub
mov
push
fbld
mov
pop
mov
iret
js
and
lods
lcall
std
jg
cmc
adc
jp
bound
mov
rolb
mov
dec
cmp
mov
dec
or
sahf
stos
and
jp
cmp
testl
rep
jp
lret
mov
insl
mov
mov
dec
nop
and
into
lahf
loop
fstpl
cli
sti
sahf
cli
xor
movsb
xchg
mov
xchg
jns
cmp
stc
push
das
and
or
out
clc
add
data16
iret
sti
cmpsl
imul
loopne
shr
add
scas
mov
pop
pop
xlat
fisttpl
js
decl
lcall
adc
sbb
cmp
xchg
movsb
test
fstl
add
lcall
repz
fwait
outsl
inc
subl
dec
popf
jo
sahf
frstor
into
inc
sbb
outsb
enter
sub
out
subb
ret
outsb
addr16
dec
popf
mov
dec
inc
lret
inc
ret
in
cld
adcl
jp
std
or
dec
pusha
rorl
lcall
ljmp
xchg
adc
xlat
and
out
popa
inc
push
aad
cs
and
dec
lret
out
push
xor
out
inc
pop
adc
sub
test
orb
push
pop
daa
imul
sbb
loop
cmp
imul
and
inc
adc
scas
test
xchg
add
mov
cmpsl
pop
cmc
push
cli
test
in
xchg
xchg
inc
cmp
dec
mov
xorl
pusha
mov
fidivrs
nop
mov
pop
insl
je
ljmp
pop
iret
test
mov
cmp
dec
sti
popf
or
mov
sub
loope
xlat
cmpb
in
mov
fcompl
xchg
push
cmpsl
or
sahf
lea
xor
mov
movsb
call
jmp
push
or
jg
cmp
pusha
cmp
xchg
cmp
lods
stos
mov
shrl
scas
cwtl
mov
add
xchg
adc
sub
shrl
cmp
ja
mov
std
jecxz
mul
nop
lods
aad
ds
imul
lcall
stos
and
xchg
xor
rolb
mov
out
mov
jmp
ja
movsl
pop
fdivrs
inc
dec
jae
int3
flds
aad
ds
ljmp
add
dec
mov
cmpsl
or
xor
mov
in
loope
cltd
sbb
cmp
stos
jno
sub
hlt
push
outsb
out
popa
adc
repnz
mov
sbbl
mov
lret
sub
cwtl
sub
test
loope
aaa
lret
jle
add
mov
jnp
xchg
xchg
fisubs
into
adc
addr16
ficomps
adc
xchg
push
in
push
mov
push
inc
push
jge
pusha
mov
push
and
enter
scas
sbb
pop
es
imul
pop
jmp
cltd
popf
adc
pop
xor
iret
push
lea
cmpsb
out
sbb
adc
cmp
add
jae
mov
pop
and
clc
cwtl
sahf
cld
jns
lahf
adcb
data16
push
xor
xor
jno
xcrypt-cbc
cmpsl
xchg
sub
loopne
rolb
cli
mov
jecxz
push
mov
lcall
fstl
xchg
in
pop
jo
pop
cmp
jno
testl
xor
inc
inc
cmp
pop
stc
xchg
xchg
or
out
int3
xor
out
sbb
cld
sbb
mov
cmpb
bnd
adc
sbb
or
xchg
in
push
stc
icebp
jo
hlt
cmp
sti
pop
shrb
mov
insb
lcall
sub
stos
cwtl
fists
iret
scas
sbb
xor
cli
jl
icebp
add
pushf
dec
ljmp
push
jnp
sub
or
cmp
add
in
sub
mov
rorl
addl
sahf
mov
repz
movsl
add
stos
xchg
inc
pop
pop
inc
xchg
pop
icebp
inc
test
std
js
mov
enter
xchg
lcall
fidivs
xchg
push
adc
imul
andb
int
xor
decb
dec
gs
xchg
add
pusha
xchg
mov
mov
pop
jb
cmpsl
test
jge
lods
dec
xchg
xor
jo
lea
into
movsb
ret
cmp
fs
stc
push
out
hlt
out
fildll
and
je
mov
dec
jae
pop
ss
aam
imul
lea
pop
stc
cmpsb
out
sbb
sbb
pop
mov
inc
subl
enter
add
add
data16
loop
fisttpll
xor
popf
outsl
fisubrl
test
and
xlat
mov
test
shlb
lock
pop
xlat
mov
shll
xchg
cmc
jne
add
cmp
enter
sub
mull
orb
pop
xchg
push
jmp
push
cwtl
inc
sub
frstor
lods
iret
test
cmp
aad
sbbl
pop
or
in
fcmove
enter
je
mov
jg
jo
out
sub
pop
or
pop
dec
aaa
pop
andb
scas
mov
movl
js
loop
mov
jmp
mov
repnz
xor
xor
add
bnd
cmp
cld
je
mov
cmp
cmpsb
push
lfs
pop
shr
mulb
sub
lret
pop
sub
cmp
xchg
cmp
and
jle
cld
cmpsb
adc
out
hlt
mov
jge
pop
aam
inc
out
xchg
jecxz
xchg
adc
test
mov
adc
lahf
add
inc
xchg
cmp
sbb
inc
and
adc
xchg
jg
mov
mov
sarb
adc
divl
imul
add
daa
cmpsb
mov
scas
fwait
mov
pop
fadds
xor
fwait
out
jp
jl
cmp
xchg
aas
add
cmpl
mov
pushl
push
out
mov
scas
mov
adc
or
add
lahf
into
pop
sbb
push
and
mov
repz
mov
fstl
mov
stos
sar
lret
outsl
add
sbb
sub
mov
and
pop
inc
xor
or
and
loope
mov
std
push
jge
dec
and
mov
loope
add
rclb
sarb
imul
loopne
icebp
push
xchg
lods
shll
or
pushf
inc
clc
inc
dec
int3
adc
push
ud1
add
sarb
jnp
push
mov
push
and
mov
and
jecxz
xchg
push
sub
mov
add
test
dec
popf
ret
mov
add
add
and
js
jae
xchg
test
jl
in
mov
lret
test
mov
and
orb
ja
jo
out
and
xorl
fcoml
rolb
cmp
pop
mov
push
in
add
xorl
sub
lds
jns
jle
scas
xorl
or
add
sti
cmpsb
pusha
sub
out
dec
mov
cli
leave
add
jae
push
or
mov
ljmp
push
mov
je
pop
add
into
or
or
ds
ret
dec
aaa
sbb
mov
sbb
or
push
add
and
fimuls
fwait
std
cli
inc
mov
cmpsl
sbb
outsb
jg
out
pop
clc
push
adc
dec
scas
push
imul
push
jl
loopne
push
jecxz
fisubs
sub
mov
ljmp
mov
add
mov
sub
sbbl
nop
mov
push
je
pop
xchg
test
pop
bound
and
sub
aam
dec
sub
xlat
pop
push
push
jbe
cltd
subl
fmuls
pop
cmp
sbb
leave
sub
roll
lret
repnz
loopne
popf
xchg
cwtl
in
fcomip
in
xchg
mov
daa
mov
inc
sahf
daa
pop
je
notl
mov
stos
mov
dec
loope
xor
xor
jmp
notl
xor
ljmp
mov
roll
dec
and
dec
out
mov
add
lcall
add
mov
mov
loop
sub
outsl
out
cwtl
adc
add
lods
xchg
lahf
cmp
jecxz
cmpsb
and
ds
bound
xchg
sbb
lret
insl
imul
adc
mov
and
mov
shrb
out
sbb
pop
adc
out
loop
add
pusha
inc
cs
sbb
std
cmp
cs
not
sub
adc
ret
test
shrb
enter
loope
add
out
sub
mov
mov
xchg
pop
xchg
adc
adc
xchg
jns
cwtl
mov
mov
ljmp
lods
jb,pt
or
jle
and
or
inc
orb
pop
inc
lock
andb
sarb
sbb
inc
sbb
mov
sub
ror
test
and
shll
or
ret
stc
sub
out
jnp
repnz
push
adc
xchg
inc
cmp
aas
jle
dec
cmpsb
div
sbb
sub
sbb
icebp
xlat
add
ds
add
shrb
jo
push
xlat
xchg
mov
push
push
int3
test
sub
loopne
es
and
ja
dec
and
pop
stos
mov
fwait
imul
xor
xchg
incl
outsb
hlt
insl
in
adc
lock
and
movsb
inc
cmp
adc
mov
push
nop
xor
xor
cmp
adc
aas
xchg
aas
pop
pusha
test
adc
sbb
ret
xchg
cmp
jne
or
inc
cmp
mov
mov
inc
ljmp
add
adc
xor
add
sub
add
pop
adc
fsin
jle
pop
or
add
push
ljmp
dec
repz
rolb
outsb
jge
scas
cli
and
adc
dec
lock
jle
mul
mov
xor
xchg
ror
mov
outsb
in
push
jb
inc
in
mov
sbb
rclb
and
in
lret
pop
enter
popa
pop
imul
stc
sahf
out
dec
mov
mov
mov
mov
add
push
lcall
in
and
jne
lahf
enter
insb
mov
add
push
dec
mov
movsl
hlt
pop
inc
mov
push
out
fsub
das
sti
int
add
into
inc
dec
popf
sub
sbb
inc
and
lret
jl
aad
arpl
pop
sub
push
and
and
add
ror
jne
shrb
mov
outsb
into
adc
roll
shr
mov
sub
adcl
stos
mov
in
icebp
mov
in
loop
rcll
or
fwait
shll
scas
xlat
aas
push
movsb
jmp
ficompl
inc
or
add
and
add
adc
cwtl
nop
jb
pushf
incl
repnz
fsubs
push
movsl
push
js
or
jmp
loopne
xchg
cmp
mov
mov
sub
bound
sbb
movsl
in
and
cmp
test
sub
push
or
push
push
mov
lock
test
cmp
mov
repnz
mov
in
lret
push
test
push
pop
mov
xor
imul
adc
adc
rorb
es
cld
jmp
js
sub
rolb
or
adc
and
push
sbbl
imull
mov
repnz
xchg
out
fimull
je
int
adc
shrb
push
cli
mov
mov
inc
mov
inc
aad
jns
sahf
mov
test
pop
or
ret
sub
lds
aam
popa
movsl
dec
sbb
hlt
imulb
sti
adcb
push
dec
or
enter
jle
outsb
sar
inc
mov
scas
pop
or
mov
xchg
xlat
test
and
xchg
aam
insl
in
pop
or
mov
jnp
xor
jo
cmpsb
xor
in
sbb
pop
bound
loopne
xchg
pop
mov
push
adc
inc
mov
xchg
pusha
add
xor
fnstcw
inc
aas
aaa
add
and
push
imul
cmp
outsb
push
std
push
insb
add
pop
sub
cmpsb
lret
cltd
leave
loopne
mov
or
cwtl
out
lea
push
aas
push
add
insb
cmp
insb
mov
or
subl
lahf
pusha
xor
outsb
into
pop
add
in
or
bnd
pushf
add
inc
sbb
mov
xor
sti
inc
dec
sahf
jg
push
push
adc
addr16
daa
aaa
sbb
mov
fs
add
in
pop
cmp
addr16
movsb
jnp
es
add
popa
ds
rorb
and
mov
xchg
pop
in
adc
xchg
xor
aam
sbb
jge
mov
stos
mov
jge
push
shrl
inc
sub
and
mov
mov
or
rorl
xor
gs
mov
mov
adc
cmp
packssdw
mov
dec
pop
add
lahf
std
shll
aaa
jo
mov
pop
scas
loopne
mov
in
or
ret
mov
outsb
aad
xchg
jge
push
mov
sbbb
stos
out
sahf
dec
inc
pop
mov
mov
sbb
mov
cmpsl
mov
cmpsl
mov
or
mov
push
popa
popf
push
jle
mov
xor
cmpsb
rclb
pop
xchg
ds
stos
adc
roll
data16
clc
lods
adc
test
inc
sbb
fwait
je
ja
nop
repz
cli
or
in
cmc
mov
scas
pusha
and
negb
jp
addr16
inc
xor
dec
adc
mov
adc
adc
fmul
push
mov
xor
push
push
flds
test
jp
mov
jmp
cmp
push
pop
add
hlt
enter
in
bound
aad
xchg
mov
inc
stos
adc
jns
aam
xlat
adc
aam
pop
push
out
cli
sbb
lock
sbb
hlt
cmp
or
outsl
imul
popf
lods
or
cmp
inc
dec
fisttpl
dec
in
push
mov
fstl
xor
lods
pop
dec
out
adc
push
pop
inc
aad
bound
cmpsl
ss
out
mov
inc
mov
ds
push
fmuls
sub
xchg
insl
mov
dec
ss
iret
adc
enter
fisubrs
push
loope
das
or
and
clc
daa
xor
pop
scas
fisubl
movsl
sub
mov
mov
call
fistpl
pop
and
lahf
mov
and
dec
cmc
sub
cmp
sbbb
add
inc
ficomps
xchg
jmp
into
cld
stc
mov
jns
outsb
pop
cmp
jg
xor
data16
cmp
and
sbb
mov
jl
jns
fnstsw
jle
push
fildl
adc
daa
adc
dec
xchg
iret
adc
fmul
or
int3
insl
repz
jb
mov
sbb
pop
lret
push
inc
add
ds
and
lahf
jnp
lcall
jl
pop
orl
adc
lret
mov
ret
dec
cmpsl
xchg
divb
adc
cmpsl
jns
stc
cltd
enter
sbb
jmp
xchg
cmp
ret
xor
dec
shll
jle
add
cmpsb
sbb
pushf
mov
inc
stc
mov
ds
push
add
jae
std
aas
inc
and
inc
in
add
popf
xchg
and
les
js
xchg
nop
bnd
in
lea
ret
pop
shlb
in
nop
stos
lret
rcr
imul
sahf
mov
into
icebp
loop
fnstenv
fs
sbb
xchg
outsl
jne
xchg
cmp
mov
cmp
ret
mov
cmp
pop
add
cmpsb
and
jge
iret
nop
inc
addb
gs
cmp
test
clc
mov
cmc
jbe
adc
mov
mov
xor
pop
mov
xchg
adc
jne
and
xchg
xchg
adc
inc
push
mov
jecxz
mov
inc
ja
les
pop
push
jp
inc
mov
clc
ljmp
jl
cmpsl
test
sarl
xchg
pop
mov
stos
jle
int3
jge
scas
bound
xchg
test
xor
mov
add
push
adc
xlat
mov
mov
jb
dec
fldcw
lods
imul
adcb
cmp
xchg
jp
push
bound
lahf
pop
stos
shlb
fimuls
add
or
add
ret
arpl
movsl
xlat
out
push
nop
pop
cwtl
adc
addr16
cmp
loop,pt
inc
push
adc
stos
xchg
fiaddl
xchg
mov
es
mov
jb
icebp
dec
leave
sub
mov
jns
inc
inc
sbb
push
push
and
inc
add
stos
cmp
sbb
cmp
add
pushf
dec
add
pop
mov
test
sbb
jae
push
dec
jle
cld
xchg
inc
cwtl
xor
loop
push
ficomps
push
pop
inc
cmp
or
cs
add
mov
xor
subl
add
loop
mov
mov
pusha
mov
push
imulb
inc
mov
cmpl
mov
adc
jmp
or
ficomps
xchg
push
xor
iret
ror
pop
in
xchg
mov
add
add
xor
and
jp
xchg
and
loope
je
call
jg
pop
inc
xchg
cltd
inc
stos
mov
jp
comiss
fcomp
test
sub
outsb
in
push
mov
cwtd
js
insb
out
shl
popf
insb
mov
mov
fnsave
push
push
sub
call
test
into
jno
shlb
jno
add
adc
icebp
or
sbb
adc
push
jecxz
idiv
or
xchg
sub
push
out
and
adc
adcl
inc
sbb
jmp
scas
ret
pop
jno
push
mov
repnz
decb
not
jbe
js
mov
xchg
out
in
inc
jl
out
cli
fucomp
jno
cltd
test
enter
pop
roll
jae
xchg
jno
xor
jl
dec
jne
in
sbb
sbb
inc
scas
dec
sub
mov
into
mov
jns
cld
addr16
js
movsl
cs
inc
stc
mov
push
sarl
cli
jnp
inc
mov
lds
jbe
jmp
and
icebp
and
dec
inc
xchg
push
xor
insl
jnp
push
test
not
adc
jmp
int3
das
mov
dec
fisubl
and
pop
sub
sahf
and
iret
cmpsl
add
push
sbb
out
sahf
mov
das
in
mov
pop
fwait
std
xchg
insb
aad
lods
xor
imul
int3
imul
mov
jns
and
jecxz
bound
pop
jp
imul
mov
sahf
mov
clc
pusha
pop
inc
lods
pop
test
in
mov
jae
or
adc
push
mov
neg
jg
inc
mov
aas
rolb
sbb
js
jbe
int3
jo
mov
scas
push
ljmp
div
xor
or
mov
fs
adc
das
mov
andb
stos
ds
mov
xor
fildll
sbb
cmp
dec
push
xorl
xchg
arpl
scas
test
xchg
jge
imul
je
lret
mov
imul
scas
icebp
and
jns
jecxz
sub
mov
rorb
and
push
dec
xor
fdivp
sub
addr16
jp
ja
fwait
andb
push
inc
inc
sbb
in
insl
sar
cmp
push
pop
xchg
jns
jle
daa
mov
sub
jecxz
inc
loope
mov
add
inc
or
lret
adc
push
sbb
mov
dec
leave
xchg
sbbl
push
sahf
int
mull
jge
sti
in
cmp
xor
lcall
jecxz
dec
lret
inc
ja
lret
cmp
rclb
mov
xchg
mov
cltd
fnstenv
mov
mov
push
cli
mov
popf
loop
dec
mov
sarb
sar
sbb
rorb
add
pop
addb
es
xchg
jb
jge
cmp
push
imul
ds
mov
mov
pushf
jg,pt
fadd
ror
movsb
fistpll
dec
rcll
jge
loope
jmp
sbb
mov
jle
mov
pop
jb
pop
test
jnp
jg
pushf
orb
shr
add
adcb
popa
xor
mov
sti
pop
adcb
mov
nop
adc
adc
stos
cmpsl
jle
add
pushf
add
mov
jmp
xchg
push
dec
into
pop
or
dec
mov
dec
loop
cmp
cmovbe
es
and
pop
das
fwait
andb
std
dec
jmp
outsl
ds
dec
std
adc
or
push
jns
addr16
jbe
xchg
pop
or
xchg
pop
jg
nop
or
push
push
movb
pop
daa
pop
jne
xchg
jecxz
shll
jno
jecxz
pop
test
es
inc
popa
jbe
cmc
xchg
xchg
jge
inc
incb
test
mov
inc
cmp
imul
sub
or
fst
ljmp
push
aam
lods
inc
out
mov
dec
dec
push
pop
or
or
rcll
add
cmp
sti
pop
sbb
insl
cmp
jne
jge
popf
pop
jns
push
pop
add
shlb
fisubrs
fs
int
testl
adc
mov
mov
js
fdivrl
lds
dec
mov
add
jbe
xchg
or
aas
inc
pop
ja
cltd
or
dec
lret
push
and
or
xlat
scas
pop
xor
or
or
arpl
mov
adc
subb
mov
into
scas
sbb
out
add
incl
adc
cmp
popa
fmull
mov
and
jge
pop
dec
loopne
dec
push
xchg
jnp
dec
fnstenv
mov
daa
xchg
call
add
jnp
inc
push
sbb
xchg
jmp
xor
mov
add
sub
pop
scas
xchg
pop
jo
rcrl
fidivrl
and
decb
out
mov
jnp
mov
pushf
cmc
ffree
xor
xor
pop
push
mov
lahf
mov
lea
push
leave
pushf
lods
scas
or
notb
sti
orb
jns
ds
mov
fcmovne
pop
incl
mov
rcr
inc
mov
out
jmp
mov
inc
cltd
pop
fdivrl
jbe
mov
pop
fucomip
test
ljmp
movsb
bound
clc
mov
push
xchg
in
add
adc
mov
push
out
mov
inc
into
int3
mov
les
push
pushl
add
pushfw
xchg
and
add
cli
imul
ljmp
mov
inc
jg
cmp
dec
add
adc
xchg
sbb
lcall
fs
scas
int3
ret
dec
mov
and
aaa
add
shrl
popf
xchg
test
call
pop
fcmovnu
in
imul
jne
cmp
or
push
xchg
jbe
cmp
dec
aaa
sub
sbb
mov
mov
popa
mov
add
adc
int3
pop
lret
inc
lret
mull
inc
clc
clc
sub
add
mov
pop
mov
mov
aam
mov
push
dec
cmp
push
mov
mov
mov
push
shl
out
aam
cmpsl
out
iret
lcall
or
sbb
mov
mov
iret
int3
pop
mov
daa
push
frstor
mov
adc
stos
xchg
add
add
xor
adc
mov
loop
fnstcw
pop
mov
sti
pop
lods
mov
sti
cwtl
or
loopne
ss
adc
shll
cmp
insl
movsb
in
or
orl
ret
inc
in
repz
sbb
xchg
ss
popa
and
mov
ds
es
sub
insb
mov
daa
cwtl
mov
int3
insl
ret
pop
dec
pop
sbb
subl
sbb
mov
jl
or
xchg
add
fcoms
adc
jae
cmp
xchg
or
lret
mov
add
rol
mov
test
movsl
lcall
lea
add
or
sti
or
xor
lods
xchg
jp
rcr
nop
mov
lret
and
push
outsb
mov
loopne
xchg
sbb
or
lds
mov
mov
loope
jmp
jno,pt
pushl
mov
add
aam
sbb
push
mov
sbb
roll
call
xor
sbb
test
sub
push
ret
and
pop
hlt
adc
cltd
dec
sub
jbe
mov
jle
dec
aad
jp
push
pop
pop
in
out
rcrb
adc
ljmp
mov
adcb
mov
ror
mov
mov
cwtl
inc
rcrb
mov
add
test
outsb
test
or
loopne
pop
sbb
lcall
cmc
mov
ljmp
jecxz
cmp
or
cmp
xor
ret
push
movsl
push
mov
stc
jae
adc
jnp
push
jecxz
and
sbb
adc
add
adc
or
cmp
inc
or
jmp
loop
pop
in
add
jns
sarb
or
sub
call
inc
fsubrs
inc
enter
popl
andl
dec
mov
popl
mov
sbb
or
in
jb
ret
fldl
repz
jle
addr16
push
iret
adc
or
orb
add
sbb
shrl
repnz
stos
mov
sbb
roll
inc
dec
sub
sahf
push
mov
inc
pop
or
jns
or
call
stos
sub
enter
addr16
loope
adc
js
sbb
mov
andb
xchg
sub
scas
and
xchg
cltd
cli
cmp
adc
or
clc
or
scas
popa
jmp
mov
add
shlb
rol
jno
mov
test
inc
xchg
lods
pusha
inc
cmp
aas
scas
sbb
xchg
xlat
adc
les
fmul
xor
ja
daa
inc
jp
cmp
loope
imul
hlt
sbbl
dec
xlat
jns
pushf
lock
xchg
pop
sbb
inc
jl
add
push
sub
mov
ljmp
rolb
arpl
ret
enter
dec
add
xchg
int3
ret
lahf
lea
lret
lcall
push
stos
lds
lcall
add
je
ror
fists
add
push
insb
inc
idivb
jns
xchg
lock
xchg
sub
sti
mov
int3
shrb
outsb
shrl
fstpt
push
in
add
dec
out
jae
clc
es
in
ljmp
push
test
stc
movb
dec
insl
loopne
xchg
mulb
dec
push
adc
loop
or
mov
sbb
cmp
popa
inc
adcb
shrl
mov
popa
in
pop
popa
mov
dec
test
jle
sub
ret
dec
rcrb
xor
fnstsw
out
and
in
sti
cmp
ja
mov
imul
ror
mov
push
daa
push
lods
jmp
aaa
cmpsl
adc
call
ret
cmpl
jecxz
add
sbb
xor
daa
mov
mov
insb
mov
push
push
xor
movhps
insb
lret
rorb
in
orb
clc
and
pop
push
inc
in
xchg
jne
bound
out
add
popf
aaa
cmp
xchg
je
inc
xlat
inc
fwait
sub
adc
adc
dec
in
in
test
mov
ljmp
mov
ret
sti
jl
xchg
add
dec
adc
mov
cltd
adc
je
addr16
mov
popa
inc
shlb
lcall
dec
in
dec
das
mov
dec
rorb
xchg
into
imul
xchg
incl
sti
loop
adc
int3
in
pushf
mov
inc
rolb
sbb
stc
cmp
or
mov
inc
xchg
add
out
or
sarb
and
rcr
cld
pop
dec
ffreep
repnz
xlat
inc
xor
iret
jno
mov
mov
mov
cmp
call
lret
aad
mull
xor
cmp
scas
dec
inc
outsb
inc
cli
push
cmc
add
loope
add
adc
mov
sub
xchg
adc
imul
or
aas
sub
sarl
sub
sbbb
cmc
enter
and
pop
inc
xor
mov
out
repz
mov
mov
stos
fwait
daa
and
imul
test
push
enter
dec
jg
sti
mov
fwait
xlat
out
ret
inc
xchg
decb
mov
nop
aad
jne
sbb
mov
popa
inc
fsubrp
mov
add
or
push
push
lock
or
sub
std
pop
push
fisttpl
dec
ret
jp
andl
sbb
cmp
rcl
cmp
mov
jmp
xor
adc
mov
lods
nop
int
fisubl
cmp
push
pop
inc
bound
push
xlat
cmp
jp
sti
pop
repz
ds
inc
ja
les
loopne
dec
fcmovb
cmpsb
pop
jg
stos
loope
xchg
repz
mov
lret
or
js
adc
and
xchg
out
fdivrp
faddp
and
xlat
test
mov
mov
sarb
loopne
sub
or
daa
dec
int3
dec
or
jns
clc
mov
shlb
mov
call
mov
stos
sti
sub
add
sbb
arpl
cmpsl
lret
es
or
cmp
dec
and
hlt
xchg
mov
jecxz
fld
xchg
jl
ficompl
stos
and
inc
out
dec
pop
cli
inc
and
ret
sub
shll
sbb
das
adc
out
stc
fimuls
pushf
lods
pusha
lret
out
in
or
insb
push
outsb
aam
pop
mov
xchg
out
fdivl
aas
push
lea
stos
pop
insl
cmp
loope
xor
mov
std
ret
sub
je
mov
pop
pop
cli
dec
movaps
cmp
or
pop
jae
les
and
fwait
das
shlb
pushf
out
fidivrs
xchg
xchg
sbb
pop
sti
fsubrl
das
push
mov
xor
lcall
leave
cmpb
pop
loopne
addr16
xchg
insl
inc
ret
cli
popa
sub
pop
adc
inc
fistpl
mov
loopne
inc
lea
mov
cmp
mov
inc
and
xchg
inc
rcrl
mov
outsb
negb
mov
jg
dec
push
icebp
mov
icebp
shl
pusha
sbbl
xor
sub
cli
imul
xchg
adc
cwtl
in
push
lods
adc
dec
ljmp
pop
leave
jg
mov
lods
call
or
out
fisubl
mov
ljmp
movb
xor
js
sub
add
lahf
stos
mov
insl
adc
or
adc
add
ja
fnstcw
sbb
pushf
and
pop
stos
inc
ret
movsb
xor
inc
fdivrs
mov
aaa
xor
ret
rol
mov
dec
int
aaa
add
xor
popa
or
fwait
dec
pushf
out
jmp
pop
insl
nop
jo
iret
lret
jbe
int
cltd
inc
inc
fisubrs
out
jg
fistps
dec
fwait
jg
push
jecxz
jo
jge
pop
in
push
xor
add
cs
adcl
and
loopne
daa
pop
test
divb
bound
mov
dec
mov
dec
sub
sbb
js
arpl
js
aam
sub
adc
sbb
repz
lods
push
test
pop
push
xchg
adc
mov
lret
movb
sti
xchg
pop
test
add
add
outsl
or
sbb
adc
mov
pop
fstpl
data16
into
push
shl
icebp
sbb
cmpb
push
dec
add
or
das
push
adcb
mov
push
dec
js
add
pop
outsl
cmp
jmp
add
mov
into
arpl
sti
xchg
imul
and
sub
mov
or
xchg
add
add
xchg
lcall
sbb
outsl
and
jae
mov
or
jecxz
cmp
cmp
shrb
inc
sub
pop
jns
stc
jne
aas
jmp
jl
jae
sti
nop
negb
mov
and
pop
andb
sub
movsb
mov
mov
and
jbe
sbb
xor
mov
jae
push
mov
jl
jbe
ret
loopne
xlat
hlt
cmpsl
stos
out
outsb
jnp
je
xlat
mov
ss
jb
pop
fwait
sbb
mov
jne
and
pop
lcall
ret
cwtl
sbb
sar
mov
leave
or
jae
dec
xlat
pop
leave
and
push
dec
popf
mov
fsubl
jle
mov
lahf
cmp
int3
sbb
mov
ljmp
cmp
or
cmp
sbb
fwait
push
nop
fidivrl
fnstenv
dec
mov
outsl
add
cmpsl
aas
dec
pop
cmp
mov
push
scas
lret
xchg
loope
incb
clc
lock
or
or
bound
clc
xchg
push
jg
arpl
xchg
jne
mov
insl
decl
pusha
cmp
stc
test
jecxz
add
sti
nop
dec
arpl
mov
or
push
jns
or
out
out
lret
popl
leave
jbe
xchg
cltd
inc
ss
notb
dec
daa
loop
adc
lret
push
test
int
xchg
dec
ficoml
push
shrb
scas
aaa
and
fildl
push
ljmp
and
mov
mov
fdivp
sub
pop
xchg
fisubrl
out
or
adc
mov
stos
adc
fsts
pop
cmpb
adc
pop
cmp
push
jg
dec
push
push
xchg
das
and
out
adc
idivl
cmp
add
shlb
insb
int
int3
faddp
mov
xlat
cli
int3
std
inc
lret
add
mull
mov
cmpsb
and
int
jns
push
xchg
add
sub
in
adc
loop
sti
or
ror
push
push
std
pop
fisubs
inc
xchg
ss
cmp
lods
sti
and
inc
jg
popf
fbstp
sbb
shlb
and
aaa
int3
nop
or
inc
enter
dec
dec
nop
lret
sahf
adc
outsb
pop
subl
out
movsl
lret
js
rolb
incl
push
outsb
dec
push
bound
ficoms
dec
dec
aam
xchg
int3
xchg
jno
int
or
leave
pop
negb
cmp
jecxz
std
dec
das
lahf
dec
adc
mov
sbb
shll
or
lcall
adc
sbb
add
cmp
and
jge
stos
jle
or
push
push
repnz
testb
or
sahf
mov
mov
pop
cli
xchg
mov
shll
jo
mov
add
sbb
xchg
inc
test
mov
jecxz
inc
out
loope
jecxz
retw
cltd
sub
insl
out
mov
hlt
adc
dec
xor
add
div
enter
xor
stos
stos
hlt
nop
out
or
or
pop
test
rcrb
inc
adc
pop
ficomps
loope
push
std
mov
push
sub
ret
sub
pop
pop
add
lret
or
fsubr
test
sarb
dec
ss
add
adc
mov
lea
mov
mov
sbb
mov
movsb
mov
neg
adc
add
or
mov
bound
push
add
stc
popf
aas
inc
and
cmovb
ja
push
in
mov
popf
rclb
test
mov
inc
mov
push
cmpsl
xchg
cmp
sti
push
xchg
dec
pop
inc
cltd
cmpsl
jb
cmp
imul
or
call
movsb
lret
shll
stos
mov
enter
adc
leave
mulb
mov
push
pop
xor
shrl
jl
jnp
inc
cld
out
aas
xor
pop
cmp
std
cmp
mov
ror
push
mov
fildl
dec
lock
xor
jne
xchg
sub
xchg
or
imul
fldenv
inc
pop
mov
stc
sbb
xchg
mov
push
aaa
ss
dec
cmp
push
pop
lods
out
dec
and
ret
add
jnp
inc
rorb
xor
repnz
mov
mov
mov
pop
addl
sub
sbb
sub
sti
aam
das
lret
pop
xchg
hlt
test
repnz
ja
xchg
add
adc
mov
jbe
loope
xor
mov
leave
mov
hlt
iret
shl
shll
inc
iret
lcall
adc
int3
test
pop
and
aam
lcall
andb
push
scas
push
sub
fdivrl
popf
popf
repz
arpl
es
mov
ret
jg
or
loopne
ret
add
jle
and
ds
pop
hlt
imul
aad
in
adc
ja
inc
inc
or
out
sti
pop
shl
adc
fstl
pop
cmp
pop
mov
jmp
sub
and
sbb
rol
ret
jge
pop
xor
mov
sbb
cmp
jecxz
inc
sub
mov
cltd
sub
sbbl
pop
ljmp
sbb
mov
paddusw
xchg
in
mov
xor
stc
pusha
add
cmp
adc
dec
mov
pop
sub
outsl
ret
pop
jle
xchg
pop
or
add
inc
adc
pop
pusha
pop
dec
sub
popf
inc
stos
lods
js
mov
mov
scas
stos
xchg
hlt
movsl
scas
pop
xor
xor
jne
int
inc
lock
push
pop
and
adc
loop
add
xor
aad
push
rorl
inc
sub
jg
mov
sbb
jb
xlat
mov
xlat
pushf
rorl
pop
enter
cwtl
imul
lods
loop
mov
fisttps
dec
pop
and
lds
stc
lcall
rorb
or
dec
pop
mov
mov
xor
fimull
pop
in
and
cmpb
adc
pusha
mov
sbb
mov
out
jo
in
mov
js
scas
scas
lcall
jns
fdivrp
inc
mov
shll
fstps
and
fisubl
and
sub
lahf
test
arpl
fdivrl
sbb
es
imul
daa
add
enter
ficoms
cmp
cwtl
sub
mov
add
mov
ja
dec
jnp
loop
repz
icebp
adc
fmull
jle
xor
aam
imul
scas
xor
add
mov
pop
inc
inc
or
std
push
sub
or
sbb
mov
orb
sbb
sbb
xchg
cmp
sbb
pop
xchg
sub
lods
mov
dec
push
xor
dec
mov
loope
or
jno
arpl
shll
add
sti
fbld
or
fwait
xor
push
fwait
add
imul
loop
nop
mov
xorl
movsb
sahf
and
hlt
addb
hlt
in
push
jg
push
push
subb
popa
add
xchg
and
inc
aam
lods
cs
lret
filds
loop
fisttps
call
add
mov
mov
aad
jecxz
loope
fcomip
sub
in
fwait
repnz
loopne
shrb
shr
adc
movsl
nop
scas
pop
mov
das
mov
idiv
dec
jmp
adc
cmp
andl
fidivs
ret
popf
dec
mov
stos
or
mov
adc
jae
pop
das
jae
out
lcall
and
sbb
pop
jge
sti
sub
and
or
popa
mov
out
pop
push
dec
inc
ret
shlb
sbb
out
add
push
test
into
lret
lods
fsubs
dec
sub
dec
pusha
jp
cmpsb
stos
decb
arpl
xchg
sbb
dec
movsb
insl
jbe
pop
aad
sbb
pop
jle
je
imul
mov
mov
out
dec
or
mov
inc
lahf
cwtl
pop
mov
incb
jecxz
lock
pusha
aaa
jo
clc
into
insb
enter
les
daa
add
out
add
outsb
push
aaa
or
test
dec
mov
xchg
inc
fcompl
sti
negb
xchg
imul
or
std
dec
cli
cmpsl
cli
aaa
mov
sti
pop
rcrb
fisttpl
mov
pop
rolb
daa
dec
pop
mov
pop
bound
jbe
add
cmpsb
jle
stc
daa
movsl
insb
dec
sub
fwait
jmp
fcmovne
add
ds
test
sahf
push
cmpsb
jp
lret
leavew
jnp
jg
dec
decb
sub
jl
out
sti
mov
sub
sbbl
push
jle
cmp
ds
pop
test
lcall
ret
cmpsl
scas
imulb
or
mov
cmc
or
rol
cmpsl
das
sub
js
sbb
or
adc
test
dec
insl
daa
cld
jl
out
jnp
mov
lcall
pop
mov
dec
in
sahf
out
sbb
cwtl
loopne
sbb
fcompl
mov
mov
fnstcw
sti
imul
ss
lods
jle
push
xchg
or
cmp
dec
out
pop
or
std
dec
cli
cmpsl
cli
aaa
jl
out
out
sti
add
jnp
into
orl
andb
cmp
dec
jge
iret
dec
dec
lahf
out
dec
sahf
push
int3
cwtl
cmp
cmpsb
ret
dec
andl
rolb
imull
and
mov
imulb
aad
dec
dec
xchg
jnp
inc
mov
and
push
stos
xchg
pop
cli
testb
cmp
dec
mov
fcmovne
in
mov
inc
or
test
mov
fcompl
jbe
xchg
fimull
add
pop
out
outsl
mov
and
scas
and
stos
lcall
aad
test
xchg
aam
leave
xchg
aam
fwait
imul
gs
or
iret
and
addr16
adc
cs
pop
lcall
lahf
or
nop
push
adcl
out
xor
mov
mov
dec
xchg
mov
cmpsl
rcrb
das
idivb
repz
ljmp
dec
fbstp
or
repnz
mov
adc
dec
sub
test
add
inc
jmp
ds
or
sbb
les
daa
ja
mov
imul
test
mov
xchg
outsb
lahf
push
push
imul
lret
ffree
sbbl
sahf
lahf
fcmovb
mov
cmp
ds
fstps
mov
mov
cmc
test
pop
shll
neg
rorb
inc
sbbl
xlat
enter
inc
cmpsl
das
out
dec
addl
dec
adc
pop
cmpsb
jle
in
sahf
sahf
sub
ret
adc
ds
inc
daa
cmp
je
es
lahf
sbb
xchg
inc
fisubrs
lcall
addr16
fisubrs
les
daa
mov
sub
jle
enter
test
leave
push
popf
add
sahf
adcb
fiaddl
mov
pushf
add
xchg
mov
adc
test
bnd
repz
jbe
out
int
and
xchg
test
daa
popf
data16
inc
cltd
jbe
idivl
sub
inc
lods
bound
jl
push
inc
inc
push
cmp
gs
cld
lret
pop
push
stos
imul
fdivl
jae
sub
or
lret
sub
test
cmpsb
bound
in
mov
xor
pushf
push
mov
mov
or
into
sub
lret
pushf
rcl
mov
cmp
jnp
insl
cmp
and
dec
dec
andb
pop
cmpl
lahf
sahf
sti
cmpsb
psubd
pusha
idivb
lock
enter
xorb
ja
mov
cmp
or
jge
jno
call
cltd
jbe
nop
lret
cmp
and
int
inc
outsb
mov
inc
loope
insb
xor
dec
pop
inc
adc
mov
pop
xor
or
cwtl
cwtl
cmp
mov
fstp
in
pop
mov
xchg
dec
popa
jmp
and
xlat
std
pushf
inc
pop
test
pop
ret
aas
jp
mov
fildl
dec
pop
and
cmp
jb
push
or
pop
push
jae
adc
xor
int3
add
cmc
push
cwtl
pop
jge
sub
xadd
sub
mov
xor
mov
sub
jns
mov
lcall
rolb
mov
jns
jns
pop
adc
mov
inc
ja
and
cmp
out
add
inc
push
leave
das
leave
mov
cmp
cwtl
mov
mov
jl
rcll
rcrb
pop
and
mov
roll
sub
or
xchg
dec
hlt
fcoms
adc
jle
pop
orb
test
insl
adcl
inc
repz
fucomip
loope
mov
repnz
jo
mov
movsb
ss
sbb
int3
sbb
ficomps
lock
arpl
in
mov
lcall
sti
stc
dec
inc
out
call
and
sbb
push
out
das
or
out
jl
cmpsl
das
dec
jmp
out
xchg
cmpb
mov
jmp
lahf
loop
jne
out
push
pop
lret
dec
xlat
jge
aam
mov
imul
popf
mov
cli
aaa
cmpsb
pop
adcl
jmp
xchg
cmp
sahf
hlt
call
mov
out
or
enter
jbe
fstl
iret
jno
and
jecxz
xor
inc
in
push
sub
sbb
jne
jae
push
jo
mov
push
pop
dec
xchg
es
sbb
int3
icebp
adc
xor
jne
je
cwtl
int3
inc
mov
std
mov
jne
es
mov
mov
loope
test
pop
or
mov
xchg
in
stos
or
pushf
push
xchg
movsb
xor
int
mov
adc
ret
xchg
std
push
lods
push
mov
dec
mull
xchg
jb
pop
adc
mov
jl
rolb
adc
arpl
xchg
pushf
inc
outsl
ret
cli
dec
dec
sti
sub
pop
mov
shrl
int
fistl
xor
or
xchg
dec
shlb
jmp
jbe
adc
xchg
adc
inc
stc
and
movntps
test
lock
dec
lock
rcrb
out
mov
aad
icebp
add
dec
dec
sub
xor
and
ss
int
fnsetpm(287
jle
add
sub
lods
fsubr
push
xor
movsb
out
out
adc
ret
and
roll
inc
lret
mov
cmp
stos
pop
xchg
data16
add
sbb
dec
sub
sahf
insb
pop
pop
test
jle
push
rcll
jnp
mov
pop
clc
cmpsb
cmp
push
sarb
jmp
lcall
fs
pushf
adc
cmpsl
gs
mov
adc
inc
testl
mov
inc
js
mov
mov
lock
add
cmpsl
jl
out
inc
aam
xor
adc
xor
imul
pop
notl
pusha
add
cmpl
jb
xchg
daa
shlb
mov
outsl
lret
cmp
xlat
in
add
jbe
scas
and
lods
shlb
xlat
lret
icebp
insl
or
mov
mov
pop
mov
push
jg
jo
xchg
adc
lcall
icebp
hlt
lea
int
hlt
sbb
int
jge
inc
mov
lock
daa
jnp
push
repz
fdivs
xchg
enter
fadds
out
sub
movb
cmp
mov
shlb
fs
loope
lods
jecxz
in
fdivl
xor
cmc
xor
sub
andl
xlat
in
jp
push
insl
lcall
or
mov
lret
jle
xchg
test
sub
in
jp
lods
jne
push
jno
lods
test
mov
xchg
xchg
test
pop
ja
test
cltd
lret
aad
repnz
sbbb
dec
sbbb
mov
bound
mov
cwtl
jmp
andl
mov
clc
xchg
jnp
lret
cmpsl
mov
ficoms
sbb
imul
dec
mov
fldl
loop
ret
sub
scas
lret
mov
or
jle
shl
jecxz
xchg
aas
pop
fs
int3
xor
xor
sbbb
cmpl
jnp
cmp
lahf
or
or
icebp
xor
jg
dec
cmp
xchg
jl
fldcw
fcmovne
int3
inc
movsl
loope
aam
pop
aas
add
mov
cmpps
leave
sahf
fwait
push
and
cmpsl
sti
mov
or
cmp
std
pop
mov
mov
and
or
aas
cwtl
mov
dec
push
push
pusha
push
jp
inc
dec
enter
mov
push
leave
icebp
mov
dec
jp
in
test
or
xchg
jp
adc
shl
mov
sti
pop
xlat
lods
and
stos
es
fnstcw
cmp
test
js
inc
lahf
adc
int3
inc
std
ret
pop
inc
inc
jmp
or
mov
mov
lret
test
dec
xchg
dec
push
shl
pusha
mov
js
pop
sub
push
clc
inc
dec
ficoms
push
int3
lods
cmp
or
cmpsl
adc
lods
inc
xchg
call
ret
adc
repnz
aas
or
and
cmp
cmpsl
pop
cmp
jno
and
cmpb
enter
adc
outsb
notb
or
frstor
ret
cwtl
rorl
roll
push
sbb
addb
outsb
lret
sbb
pop
mov
insl
fsubrs
pop
insb
out
xchg
lods
dec
gs
ja
xchg
sbb
pop
inc
mov
fwait
ror
pop
cmpsl
pop
sti
dec
rorl
lods
pop
pmulhw
fnsave
fdivrl
mov
and
nop
lock
mov
pushf
cmp
or
sbb
aam
test
je
sahf
test
xchg
ret
mov
fs
dec
lcall
add
loop
adc
jp
sti
test
pop
in
sub
or
sbb
mov
inc
xchg
pop
fidivrs
inc
pop
out
push
xchg
pop
adc
in
popa
cmpsl
cld
into
shlb
leave
add
sbb
lahf
xchg
push
xor
idivb
daa
fstl
into
cmp
xchg
loopne
in
and
lret
hlt
push
xor
add
aaa
mov
aad
lock
add
f2xm1
mov
adc
add
mov
ret
lret
pop
std
pop
outsb
insb
ret
and
adcl
add
loopne
insl
es
mull
xor
decl
ficompl
insl
repz
movsl
or
or
cmpsb
pop
in
stos
xchg
add
fldt
cmp
push
icebp
lds
js
and
fisubs
mov
xchg
inc
ret
fimuls
jbe
stc
mov
test
jae
jl
test
and
imul
xchg
push
cmp
pushf
dec
jp
push
mov
jp
out
lcall
ret
rol
xor
adc
jb
fsubr
imul
dec
and
cmp
mov
out
pop
inc
je
xchg
fmuls
out
loope
out
stos
dec
mov
push
nop
std
clc
sahf
in
push
xchg
movsb
fidivs
cmp
popa
mov
hlt
mov
xor
movb
jno
and
pop
jns
and
leave
fists
xor
dec
push
jmp
cmp
test
into
fcoms
fiaddl
notl
out
mov
inc
pop
lods
add
es
loope
or
push
fdivl
jmp
jge
xchg
pop
testl
addl
cmpb
jg
and
loop
mov
inc
and
arpl
mov
pop
outsb
jo
mov
out
test
dec
shrb
rolb
jne
lret
adc
mov
adc
sbb
add
js
sbb
sbb
ret
dec
imul
notb
mov
mov
fistps
xchg
fcompl
jnp
jae
pop
cltd
push
xchg
cmp
outsb
pop
pop
mov
mov
and
add
cwtl
sarb
ljmp
xchg
out
lret
into
testl
dec
addr16
sub
mov
shrl
dec
nop
jg
dec
adcl
loopne
or
dec
cmpsb
push
out
pusha
movups
add
loopne
push
scas
pop
hlt
lcall
out
cmp
enter
ret
dec
pop
out
and
jg
outsl
and
or
pop
fstpt
mull
mov
cmp
jle
dec
push
imul
cmp
push
or
stos
xor
or
xchg
insb
cmp
xchg
scas
lcall
cmp
push
mov
add
ja
adc
fcompl
push
sbb
ficoml
loop
mov
sub
push
mov
movsb
cli
scas
mov
loopne
fdivp
into
cld
push
mov
lock
push
fdiv
sbb
in
cmp
and
pcmpeqb
sub
add
test
xor
sbb
orb
fadd
lahf
int3
add
inc
mov
and
push
rclb
and
repnz
mov
fildll
xor
mov
pop
dec
mov
dec
pop
jb
cmp
mov
push
inc
xor
mov
lods
cs
aad
adc
daa
jecxz
sti
cltd
into
sub
in
testb
pop
aaa
or
ja
xor
adc
sub
lea
sbb
rcr
inc
into
lret
sbb
insb
mov
dec
iret
add
push
rorb
repnz
dec
pop
jl
jmp
cwtl
jl
stos
rolb
inc
movsl
lahf
xchg
fcomps
clc
push
orb
dec
sub
xor
dec
and
jnp
loope
or
mov
jecxz
les
jae
jmp
sub
pop
cwtl
lret
mov
retw
mov
in
dec
adc
adc
pop
ljmp
cmp
fstps
add
and
cmpsl
jns
mov
xchg
nop
cmp
shll
fisubrl
into
stos
fldcw
sub
addb
jb
inc
mov
in
or
outsb
inc
insl
ret
out
cs
clc
add
and
ret
subl
jmp
sbbl
std
addr16
mov
ja
add
cwtl
inc
icebp
and
aam
sbbb
xchg
cwtl
inc
sub
dec
sbb
and
inc
or
adc
cmp
jecxz
rolb
mov
dec
mov
jle
add
jle
add
pop
sarl
cmp
push
js
fwait
cmp
add
jns
ds
out
fcmovnb
lods
mov
sbb
mov
and
lea
fstps
cmpsb
test
push
imul
jno
arpl
sbb
jle
cmpsb
jmp
out
push
lret
pop
jp
fisubs
mov
xchg
cld
sub
adc
addb
push
inc
pop
in
rorb
jnp
leave
and
rcrb
adc
jp
add
ret
movsb
sbb
lcall
xor
imul
mov
and
mov
xchg
mov
mov
jmp
aas
lea
push
xchg
add
push
stos
adc
fsubr
mov
dec
xchg
cltd
xor
mov
ds
imul
inc
xor
out
les
enter
ljmp
inc
add
scas
lcall
and
mov
loop
jae
andb
push
sub
push
loope
daa
lret
add
pushf
cmp
add
push
mov
add
out
in
xchg
inc
jb
mov
sbb
sti
push
cmpsl
xor
int
mov
push
lret
aam
sbb
dec
es
std
mov
js
in
fmuls
outsl
imul
inc
and
or
jmp
add
les
addr16
mov
mov
or
loop
cltd
sbb
cmp
jbe
xor
testb
popf
aam
out
leave
add
mov
xor
mov
rol
pop
xchg
push
adcl
mov
es
mov
lahf
jns
dec
add
in
or
sub
ret
cmpsb
jp
insb
orb
add
in
movsl
mov
sub
loop
clc
mov
dec
ret
out
xchg
rcll
jne
dec
scas
jmp
push
fcoms
cmc
fnstcw
or
xor
cmpsl
mov
or
jo
movl
push
jae
out
inc
dec
jle
sub
or
int3
sarl
ds
or
jle
push
pushf
or
sti
jge
fcompl
dec
loope
xchg
lods
mov
pop
js
add
jge
call
dec
jp
in
dec
xchg
pop
mov
mov
testl
sbb
jmp
add
cli
mov
inc
sub
divb
xchg
sahf
fwait
out
data16
xchg
xchg
cmp
stos
in
aam
stos
jmp
stc
jno
push
adc
inc
xchg
inc
lock
fistpll
adc
mov
sbbl
in
mov
cmpsl
cwtl
not
mov
pop
mov
cwtl
cmp
add
gs
hlt
add
jge
cmp
ds
pushf
das
push
xchg
mov
shlb
add
dec
ja
cmpsb
out
sbb
repz
push
movsb
mov
xchg
push
or
fnstcw
sbbb
pop
sbb
jg
call
dec
into
xchg
add
xor
sbb
pop
sub
or
pop
xor
jg
or
jno
push
nop
dec
lret
mov
in
mov
lods
cld
in
xor
mov
dec
aam
loopne
sar
out
adc
cmpsl
cmpsl
mov
pop
ret
push
call
inc
ret
out
lods
push
push
sarl
sub
ss
pop
fistpll
mov
mov
mov
sub
jle
pop
lcall
push
scas
xor
dec
add
xchg
cmp
daa
cmpsl
out
pusha
repz
enter
push
imul
sub
das
lods
jg
push
and
shl
sub
push
cmpsb
pop
ret
xor
sbb
mov
xchg
sarl
das
pop
pop
test
icebp
adc
dec
dec
push
fwait
lods
call
loope
test
add
xchg
sarb
sbb
mov
xor
out
dec
jg
scas
cmp
mov
es
mov
inc
rcrb
jbe
gs
es
mov
sbb
mov
ret
outsl
sbb
out
jp
adc
testb
dec
in
cmp
sarl
xor
ljmp
bound
pop
adc
insb
sti
cmp
mov
daa
fcmovnb
push
fwait
pop
pushf
pop
fiadds
stos
int3
pop
pop
ret
sub
adc
ret
stos
mov
mov
add
stos
test
mov
dec
jb
sbb
mov
imul
pop
test
cltd
sarb
shrb
ja
leave
push
add
jle
xlat
inc
mov
repz
out
cwtl
sbb
ds
dec
sub
sub
repnz
popa
scas
lcall
inc
adc
sarb
mov
jbe
push
cmp
jp
repz
mov
and
bound
outsl
stos
lcall
jne
mov
test
pop
xchg
xchg
and
out
push
inc
mov
mov
cmpsl
pop
xchg
pop
lds
push
push
xor
dec
movsb
xchg
daa
jle
data16
int3
insl
outsl
pushl
sub
mov
sti
jge
inc
sub
add
pop
das
mov
imul
and
push
mov
xchg
pop
mov
loope
cmpsl
cltd
gs
shlb
sub
repz
testb
add
jl
lret
imull
adc
xchg
mov
dec
inc
xchg
cmp
xchg
mov
mov
sti
rorb
and
mov
cmpsl
mov
das
mov
inc
pop
cmpsb
movsb
fwait
cs
sbb
rorb
divb
lret
pop
cmp
or
notb
cmpsb
cmpsb
pop
ror
cwtl
ret
mov
xchg
fwait
decb
int3
out
into
incb
dec
jnp
jmp
push
dec
or
incl
dec
mov
sbb
pushl
jae
idiv
mov
mov
insb
pop
mov
pop
mov
fs
and
sarl
inc
scas
push
scas
push
lret
mov
insb
mov
lahf
adc
mov
mov
mov
mov
mov
jo
sahf
shl
jb
jo
inc
mov
pop
jne
fs
jbe
das
adc
stos
scas
rorb
dec
sbb
lret
or
jge
pop
into
mov
mov
push
jecxz
cmpsl
add
rcr
jnp
cmp
mov
jl
out
cmpsb
lret
dec
jb
xchg
push
mov
add
fs
imul
shrb
mov
push
xorb
cmpsl
mov
cmpsl
add
shlb
lret
jbe
mov
pop
dec
decb
subl
loop
jbe
outsb
lret
and
dec
cwtl
pusha
out
push
ret
inc
jbe
or
bound
jl
out
mov
sbb
xor
push
dec
sub
in
outsl
in
xchg
mov
or
jp
mov
jb
mov
cld
dec
mov
sahf
jle
repnz
aam
fwait
sahf
xchg
testb
cmp
lahf
cmpsl
repnz
sub
sahf
jl
mov
fadds
rcll
insb
cmp
lcall
fnstcw
negb
mov
xchg
xor
pop
ds
cltd
mov
mov
cmpsl
outsl
testl
mov
lahf
std
cs
in
fmul
repz
dec
push
ljmp
lret
jecxz
orl
stos
inc
mov
in
xor
fldcw
pop
das
lds
push
lds
mov
popa
fwait
mov
out
ret
call
dec
push
roll
out
mov
nop
or
fwait
dec
or
xchg
add
ret
add
mov
add
stc
loop
lret
sbb
lea
repz
test
jecxz
sub
ret
xchg
arpl
mov
ss
adc
mov
adc
mov
jmp
pusha
mov
stos
dec
mov
out
outsb
mov
lea
es
shrl
jp
icebp
enter
negb
cli
inc
xlat
subb
andb
pop
dec
test
push
repz
push
test
dec
jbe
sub
or
iret
loop
popa
sbbb
dec
test
ja
push
jnp
out
ret
jg
std
stos
ds
stc
jecxz
pop
add
sbb
mov
jl
add
push
add
sahf
push
orb
cli
fstps
lock
sahf
mulb
daa
sub
rcll
jnp
iret
sbb
sbb
notl
dec
jne
pop
repnz
pop
add
sbb
cli
jp
adcb
rorb
jle,pn
xor
mov
adc
pop
clc
push
xorl
out
pop
int3
pop
movsb
loopne
jg
cli
imul
lret
add
icebp
hlt
int
shlb
leave
test
notb
jbe
fadds
sahf
ret
sub
popf
test
pushf
dec
sbb
dec
pop
cld
xchg
mov
add
cmpsw
aad
dec
xchg
and
pcmpgtb
xorl
add
pop
add
popl
shlb
leave
mov
ja
pop
add
sub
jo
dec
cmp
push
sub
into
mov
flds
jp
inc
divl
fisubrs
subl
cmpsb
addr16
out
das
push
and
sub
dec
out
pop
push
into
negb
jbe
movsl
mov
xchg
push
inc
lods
add
mov
icebp
cwtl
int
loopne
ret
push
pop
sbb
daa
out
cwtl
xchg
jle
out
sahf
jno
fcomi
pop
xchg
lret
out
jl
out
sbb
mov
pop
lret
jmp
mov
mov
lret
jle
loop
test
xlat
jae
pop
aas
sbb
or
imul
jp
mov
dec
popl
adc
cwtl
fwait
mov
inc
jecxz
hlt
adc
dec
jle
sbb
push
xlat
cs
jno
pop
sarl
mov
imul
jecxz
mov
mov
mov
lret
mov
bound
das
jmp
mov
clc
cmp
andl
aas
sbb
pop
jne
or
cmp
ljmp
jle
xor
cli
fnstsw
mov
sbb
jle
inc
mov
out
pushf
shll
push
popf
imul
popf
ds
lahf
push
xor
jno
fdiv
ret
adc
inc
cmp
fcomi
mov
negb
add
mov
bnd
jp
loopne
jbe
add
dec
outsb
lock
sub
imul
call
fcompp
mov
stos
inc
xlat
and
jbe
push
lods
inc
mull
mov
lahf
inc
popf
fs
dec
cmpsl
jecxz
loope
cmp
sub
sub
test
jnp
and
stos
jl
idivl
dec
test
cmp
ret
push
mov
mov
test
sub
adc
jnp
jle
pop
in
jle
gs
push
and
sub
leave
and
stos
push
rcl
ds
divl
andl
jg
pop
mov
mov
push
test
sarl
or
pushf
mov
jnp
or
outsl
ds
xchg
daa
test
xchg
inc
adc
or
add
inc
movsl
pop
mov
outsl
dec
fiadds
in
mov
jl
cmpsb
jbe
xchg
dec
pop
test
testb
lea
and
icebp
and
xchg
ds
roll
and
sbb
dec
ficomps
testb
xchg
cwtl
loop
pop
inc
les
pop
pop
out
xchg
int3
nop
jmp
sarb
lods
lcall
addr16
data16
out
jb
mov
movsl
js,pt
adc
xor
int3
xchg
negb
popf
add
pop
add
or
cmp
sub
xor
push
lret
repnz
dec
fcom
mov
mov
inc
xor
sub
in
push
inc
stos
cs
scas
popa
lds
mov
lds
jmp
inc
push
lea
inc
stos
sub
adc
add
testl
mov
jb
add
jecxz
pop
rorl
popf
std
push
mov
or
shl
jle
push
inc
xchg
or
test
aad
dec
xlat
das
add
sbb
stc
add
push
lea
cmp
sub
sub
int3
ret
sub
es
imul
or
fidivs
adc
imulb
int3
xor
iret
add
or
lods
xchg
mov
je
sbbb
jle
dec
in
pusha
mov
dec
add
jne
test
mov
inc
adc
inc
and
adc
xchg
mov
out
mov
dec
out
xchg
cltd
or
push
jmp
in
pusha
jmp
out
lock
add
out
movsl
dec
fwait
xchg
cmp
ds
ds
insl
mov
loope
fisubs
loop
fsubrp
loope
fsubl
mov
push
xchg
imul
xchg
inc
out
pop
cwtl
add
and
add
xchg
mov
test
or
xchg
mov
int3
push
int3
lret
int3
mov
push
inc
xlat
sub
inc
mov
push
inc
arpl
adc
out
push
jmp
scas
add
jbe
shlb
push
pop
nop
jnp
sbb
out
jnp
into
fnstcw
rcr
cmp
aas
pop
in
add
addb
roll
xlat
rcrl
xorb
out
jle
jo
dec
fiadds
dec
loop
mov
rorb
dec
fdivrl
jp
mov
dec
out
push
mov
lret
daa
scas
pop
fsubs
outsb
sbb
daa
ss
div
insl
xchg
cmp
pop
cs
rcll
cltd
mov
push
inc
imul
inc
push
dec
out
push
fdivrl
pop
in
jl
xchg
in
jo
or
clc
push
nop
mov
and
pop
addl
ja
lds
jnp
popf
bextr
mov
and
cmpsl
ja
inc
cmpsl
jae
cmpsb
pop
daa
mov
dec
jle
xchg
fxch
jle
lret
jle
sbb
mov
push
sbb
mov
jle
xlat
xchg
aad
push
cmp
shrb
jbe
aaa
mov
or
loop
dec
jle
faddl
fcomp
mov
mov
xchg
or
jmp
sbb
gs
cmpsb
stc
add
mov
lods
sbb
pop
mov
loope
add
mov
test
dec
sub
in
inc
xchg
and
push
fxam
inc
imul
mov
inc
test
shl
pop
fistpll
dec
fwait
ret
iret
cltd
xor
mov
adc
fnsave
mov
push
leave
pop
pop
pop
popf
adc
pop
mov
fstl
sub
inc
inc
xchg
notb
inc
inc
es
mov
sbbl
xor
xchg
cmc
test
inc
sti
jge
xor
lcall
scas
cmp
sbb
inc
movsl
cs
adc
sbb
xor
pcmpeqd
movsl
dec
and
and
lds
std
lea
or
mov
push
sub
pop
mov
jle
xchg
jecxz
pushf
mov
jne
xchg
aad
cwtl
sbb
mov
adc
test
jnp
movsb
dec
mov
sub
int3
xchg
and
sub
iret
test
cmp
mov
cli
fidivrl
mov
sub
jmp
cmpsb
test
in
les
rcrl
std
popa
mov
insb
movsb
rcrb
notb
pop
fcoms
inc
push
mov
loop
jae
movsb
sahf
dec
mov
rol
orl
dec
addl
jmp
jb
inc
int3
pop
jmp
andb
mov
mov
aam
sub
xor
in
divl
cs
ja
and
xlat
test
iret
mov
xchg
movsl
clc
mov
mov
out
mov
xchg
lret
nop
imul
das
stc
les
mov
popf
fidivrs
popa
jns
je
adc
leave
fcmovnb
mov
inc
popa
pop
cltd
sbb
pop
mov
lcall
lds
rclb
mov
add
adc
ljmp
cwtl
fcompl
mov
dec
mov
pop
lcall
les
mov
int
inc
lahf
sahf
inc
adc
sti
ss
stc
mov
mov
enter
sahf
and
in
cmp
mov
outsb
sbb
pop
xchg
add
dec
add
xchg
test
ret
shrl
push
jg
les
adc
cmp
icebp
mov
lods
mov
push
sahf
mov
cltd
or
adc
pop
dec
sub
jae
add
out
out
push
incb
mov
rorl
stos
inc
or
inc
sbb
xorl
repz
int3
loope
pop
jg
out
int3
jnp
ss
xor
pop
jmp
rcrb
pop
pop
ret
pop
xchg
or
and
dec
dec
call
shll
xchg
push
jmp
mov
out
test
pop
pop
imul
test
inc
mov
stos
test
decb
jns
fucomi
cmp
push
mov
and
or
jne
inc
lock
jg
cmp
ret
ss
sbb
bound
dec
cmp
lret
adc
pop
jb
push
jl
cmc
lret
icebp
mov
sub
gs
adc
arpl
cmp
rorb
sub
jbe
push
repnz
xchg
ja
push
or
outsl
inc
cltd
push
hlt
jbe
divl
iret
fsubs
ja
pop
call
shr
mov
negl
xchg
into
mov
jno
std
and
sahf
repz
out
shll
loope
or
pop
test
int3
xchg
jp
mov
or
xchg
mov
movsl
in
jb
sti
in
ja
lret
sub
mov
sbb
hlt
inc
pop
cltd
xchg
push
jl
sub
push
fcomi
adc
or
mov
loope
add
xchg
jge
push
leave
ja
inc
in
pop
cmc
icebp
jnp
mov
icebp
std
loop
adc
cmp
mov
fsubs
push
sbb
clc
mov
fadds
daa
mov
xor
sbb
imul
cmp
clc
adc
add
inc
pop
xchg
push
adc
cli
xor
or
mov
mov
jle
sbb
jge
es
xchg
cwtl
adc
test
xchg
jecxz
fisttpl
movsl
or
pop
inc
lret
aas
imul
int
xor
loope
jle
sbb
ret
push
and
cld
shll
imulb
mov
pop
pusha
or
add
leave
mov
or
mov
lods
push
xchg
loope
inc
xlat
jmp
inc
dec
inc
pop
mov
push
popa
ds
push
lods
ret
add
popf
mov
jl
or
xchg
xor
sub
adc
xor
xchg
cmpsb
pusha
cld
icebp
js
jp
dec
pop
in
shl
pop
jbe
loopne
adcb
sbb
les
orb
stos
dec
inc
daa
mov
xchg
in
rcrb
xchg
xchg
sti
out
movsl
xor
mov
sub
andl
movsb
pop
std
jnp
out
and
add
mov
or
lds
ss
cmp
push
daa
clc
orl
push
xor
into
ljmp
mov
dec
push
pop
jecxz
inc
das
repz
pop
inc
fcoml
fs
jg
pop
lods
popa
ds
pop
cmp
sbb
push
or
addl
movsl
cmpsb
movsl
dec
inc
sub
rolb
lods
or
cltd
push
dec
fcomps
xor
xlat
xchg
jg
ja
loopne
fsubrl
clc
push
cwtl
lret
out
jbe
pop
cmpb
loopne
cmpsw
rorl
cmpsb
pop
out
jo
mov
popl
andb
dec
loop,pt
sbb
or
sbb
sarb
cmpsb
cmp
ss
pop
add
inc
cmpsl
rorl
fistpl
pop
mov
jl
test
cwtl
push
jle
out
fidivs
repnz
jmp
or
jb
dec
xchg
sub
cmp
out
add
push
fsubrl
dec
fistl
clc
inc
std
pushf
notb
xor
mov
dec
aaa
add
mov
repnz
ret
xchg
pop
sti
mov
rorl
loope
bnd
cwtl
and
jmp
testl
jne
mov
stos
outsl
clc
cmp
pop
lcall
cmp
popa
jg
or
add
xchg
bound
mul
xchg
arpl
test
or
leave
test
orb
sub
leave
cmp
neg
mov
out
jnp
shll
fmul
leave
fidivs
lahf
scas
pop
push
xor
pop
adc
std
shlb
fwait
pop
daa
mov
mov
int3
push
ja
add
inc
mov
orb
pop
mov
ret
jle
cmp
jmp
hlt
sti
fimuls
lret
sbbl
push
es
je
gs
mov
out
stos
outsb
push
mov
jo
jp
ja
pop
mov
fidivs
sub
loop
adc
repz
lock
mov
jecxz
aam
sbb
push
stc
lahf
stc
ss
ljmp
inc
and
loopne
je
mov
test
cmp
les
mov
stos
dec
sub
lret
and
push
lret
stc
popa
sahf
dec
mov
or
jbe
jae
insb
sahf
mov
push
jecxz
pop
jnp
jl
addr16
repnz
push
leave
or
inc
and
int
sub
jb
es
xor
add
outsl
mov
in
jne
mov
dec
mov
lret
lock
test
add
pusha
pop
adc
xchg
fstpl
ret
aad
or
jle
filds
rorb
inc
lds
daa
aas
enter
loopne
pop
shrl
fimull
data16
aad
sahf
jae
pushf
xchg
out
jno
aas
cmc
sti
fs
cli
fs
scas
mov
and
push
push
add
inc
sbb
hlt
jbe
ds
gs
jp
sbb
xor
sbb
jo
mov
mov
mov
inc
dec
lds
ljmp
shr
into
sub
jnp
les
push
xor
jo
mov
cltd
or
notb
xchg
dec
dec
shll
inc
lea
mov
or
cmpb
ljmp
pushf
mov
mov
push
jae
cmp
bound
cli
xchg
add
jl
sti
xorb
jae
inc
pop
notb
pop
jg
das
out
pop
daa
das
mov
add
dec
and
adc
shrl
scas
jno
pop
out
jae
das
daa
jle
add
push
or
call
shll
daa
cs
in
mov
mov
sbb
jl
mov
loopne
insb
jbe
push
mov
pop
mov
push
mov
lret
icebp
mov
mov
stos
insb
xchg
push
leave
dec
je
sahf
cmp
int3
out
jl
fldcw
adcb
ss
dec
lahf
test
into
sbb
and
inc
xor
xchg
mov
mov
fnstenv
mov
pop
idiv
mov
dec
add
mov
xchg
jns
mov
sti
pop
inc
mov
fst
adc
nop
pop
and
fstps
and
cmpb
testl
aad
mov
out
mov
xchg
clc
cmpsb
push
add
lds
sbb
jb
scas
xor
fimuls
jp
jb
sub
lret
jecxz
testl
xchg
dec
sbb
lahf
xchg
or
addr16
test
outsb
dec
lcall
stos
jmp
xor
xorl
pop
xchg
fists
mov
xchg
lods
push
or
sti
fstl
xor
push
lock
mov
shlb
or
mov
push
fsubs
outsb
mov
clc
and
jo
push
push
lcall
mov
adc
leave
pusha
inc
push
or
sub
add
add
mov
push
mov
in
movsb
out
mov
cld
out
jns
pop
popf
rol
jle
add
aad
add
push
push
mov
repz
fsubl
movsb
out
insb
add
adc
jo
xor
out
adcl
hlt
int3
scas
and
out
cmpsl
jbe
inc
pop
add
pop
inc
nop
xchg
sbb
cmp
dec
iret
stos
mov
ja
mov
xor
iret
test
add
sub
push
pushf
ficomps
out
adc
sbb
adc
adc
jb
inc
lcall
rorl
int3
mov
dec
mov
call
je
ret
pop
mov
mov
mov
mov
mov
inc
cltd
decb
into
lret
decl
outsb
loope
add
rcll
ret
test
aas
add
scas
fwait
push
ja
ficompl
bound
lret
in
cli
jo
inc
jne
cmp
xchg
lods
sahf
cmp
test
clc
jl
scas
adc
popf
adc
shl
adc
shll
adc
leave
push
jns
pop
leave
in
mov
movsl
shrb
mov
pop
xchg
test
fadds
inc
insl
mov
rcr
and
push
aaa
cmp
idiv
js
movsb
push
das
mov
push
ret
push
or
iret
mov
pop
fstps
nop
andb
push
add
loop
and
push
lret
stos
adc
and
fnop
pop
pop
int3
add
mov
or
das
jmp
xchg
das
fs
add
std
add
add
push
insb
pop
push
scas
hlt
call
xor
shll
xor
lods
cmp
lods
mov
call
fxch
ja
ffreep
xchg
daa
mov
xchg
mov
dec
xor
add
testb
xor
flds
xchg
jns
jecxz
jns
or
cmp
scas
mov
cwtl
jne
lods
sub
aas
std
cmp
xor
dec
sahf
ja
jno
jecxz
cwtl
cmp
out
xor
jae
stos
sbb
sub
sbb
sahf
cli
jns
scas
pop
xor
imul
add
out
or
adc
jge
pop
add
cmp
cmpsl
sub
mov
dec
idivb
xlat
stos
xchg
enter
adc
jno
testb
ja
enter
repz
xor
int3
adc
je
mov
dec
lret
add
rcll
cld
inc
shll
inc
fwait
pop
in
fwait
arpl
cmp
xchg
inc
push
cmp
enter
in
mov
mov
cwtl
fldenv
bound
ds
iret
lock
xor
ds
lea
in
fidivrs
cmp
xor
push
sub
jge
pop
sub
ret
mov
push
scas
or
xor
es
sub
jns
movsl
sub
push
xor
jno
add
aaa
fs
pop
add
daa
add
cltd
loop
ljmp
leave
xchg
sbb
push
adc
enter
dec
xor
incb
shlb
dec
popf
push
ljmp
jmp
ficomps
subb
addr16
mov
inc
mov
cmp
inc
popa
dec
ja
push
lret
lcall
lods
idivb
xchg
xchg
cmpl
pop
sbb
faddl
pop
or
mov
ss
pop
test
notl
xchg
mov
in
push
pop
ljmp
sbb
subl
and
subl
add
addr16
test
imul
mov
lds
push
fistps
mov
xor
xacquire
mov
flds
cmc
cwtl
std
jns
mov
and
mov
movsl
push
mov
shl
jmp
iret
dec
mov
sahf
xor
add
jmp
dec
gs
jbe
dec
add
pop
mov
test
pop
outsb
push
push
popa
outsb
cmpb
scas
sbb
adc
pop
mov
and
dec
dec
sub
pop
je
inc
sub
mov
xorl
jo
test
jge
clc
add
je
xor
bnd
scas
imul
dec
mov
filds
cmp
lahf
inc
pop
lret
push
and
repz
insb
mov
push
push
test
orb
into
inc
aas
dec
repnz
jno
test
jbe
out
jp
daa
push
add
jle
adc
mov
xchg
jbe
or
pop
lds
filds
loope
cmpsl
xchg
bound
pop
std
lahf
je
roll
xor
movsl
fldcw
ret
es
stos
lcall
and
cmp
movsb
pushf
loopne
pop
jns
push
in
rcll
push
fwait
xchg
out
dec
aad
mov
pop
xor
ljmp
imul
jb
stos
shr
cmp
inc
xor
fidivrs
pop
push
push
inc
dec
jp
mov
jmp
mov
jnp
clc
cmpsl
pop
in
jmp
add
mov
jle
adc
in
xchg
rcrb
mov
sarb
mov
cmpsl
jle
out
lret
mov
jmp
push
xor
sbb
scas
mov
mov
mov
inc
mov
and
jg
xchg
pop
and
jp
mov
call
jno
cmc
cli
inc
call
inc
repz
push
sarl
lea
subb
dec
inc
loopne
mov
inc
rorb
mov
pop
mov
dec
sub
dec
sbb
inc
and
imul
sub
sub
or
lret
add
jmp
les
pop
cwtl
flds
stc
ret
js
fcom
mov
out
xchg
gs
stos
cltd
out
or
xchg
mov
push
rolb
jg
push
int3
outsb
lods
mov
or
sbb
sub
in
scas
mov
jle
adc
outsb
cld
pop
lea
cli
push
push
lock
jbe
and
int3
dec
clc
or
outsl
insb
inc
mov
xchg
push
cmp
ss
or
push
ljmp
iret
cmpb
mov
pop
and
in
pop
mov
mov
les
cmp
push
jle
adc
sbb
mov
lret
inc
ss
xor
fs
imul
sar
int3
pop
jle
mov
repz
jno
int3
dec
pusha
and
lret
fsubs
jae,pn
xor
push
pop
cwtl
fistl
push
pop
adc
jae
mov
adc
mov
mov
jae
jno
cltd
aas
add
outsb
jl
sub
mov
adc
pusha
daa
loope
xchg
pop
cmp
pop
aad
aaa
dec
sub
lret
outsl
test
pop
inc
out
scas
inc
mov
xlat
in
and
push
mov
test
xor
mov
repnz
xchg
insb
mov
jae
push
sti
xor
decl
inc
push
shlb
addl
xchg
aaa
icebp
inc
inc
push
mov
sub
clc
xchg
scas
push
iret
cmpl
xor
fisttps
sbb
call
sub
outsb
push
pop
aaa
clc
sbb
xchg
or
pop
repz
inc
jno
and
ds
xchg
push
sub
xor
sbb
rcrb
mov
xchg
out
sub
cli
xlat
pushl
and
cmpsb
insb
je
push
sub
aaa
mov
in
movsb
jo
orb
js
jle
jg
call
addr16
add
flds
lds
push
add
es
inc
popa
leave
cmp
movsl
dec
push
cmp
flds
pop
push
jno
test
pop
mov
lods
loope
sub
mov
push
jecxz
jg
lock
aam
lds
fcmovnbe
xchg
fmul
dec
repz
es
pop
pop
outsl
sub
or
pop
mov
mov
daa
fcompl
sbb
mov
add
insb
fiadds
or
stos
push
mov
loop
push
andb
addb
pop
lcall
lods
and
sub
adc
jno
call
orl
sub
cmp
cmp
jle
leave
jae
out
xchg
lock
xor
outsb
daa
jp
push
xchg
fistps
rolb
repz
or
inc
push
subl
push
pop
pop
enter
sub
cmpsl
outsl
adc
pop
push
or
sub
push
xor
jmp
daa
adc
lods
fcoml
scas
loope
jge
dec
xor
xchg
stc
out
cmpsb
mov
sub
cmp
lahf
xchg
xchg
mov
add
inc
cltd
pushf
jns
sbb
or
xor
mov
imul
or
mov
mov
inc
mov
lcall
mov
movb
push
jg
aaa
mov
loop
mov
stos
push
aad
cmp
pop
hlt
sti
ja
ss
xchg
sbb
lds
pusha
and
dec
cbtw
xchg
mov
das
mov
andl
test
callw
add
in
push
mov
jge
xlat
imul
andb
ja
and
mov
cmp
arpl
xchg
cld
jbe
cmp
xchg
push
mov
jb
adcb
filds
dec
dec
ret
jl
jmp
scas
pop
jmp
jl
je
or
int3
sbb
inc
dec
jbe
in
adc
or
andl
scas
lahf
cmpsl
leave
xchg
ret
outsb
or
xchg
nop
movsb
inc
shrb
sbb
jae
mov
pop
roll
pop
xor
or
sbb
pop
outsb
ret
xchg
add
pop
dec
cmpb
pop
pop
mov
xchg
push
and
dec
jg
jae
jg
xlat
aaa
xor
inc
jbe
hlt
adc
out
les
jl
lret
cmpsl
add
pushl
pop
mov
cmpsb
sub
bound
nop
fstpt
xor
xchg
stos
dec
pop
cmc
popa
jge
loopne
scas
push
push
test
movsl
sub
inc
rorb
insb
stc
cli
mov
cmp
push
ret
xchg
dec
ret
push
js
imul
leave
jns
fildl
inc
in
test
push
ss
adc
insb
push
out
std
dec
inc
sbb
test
mov
or
and
jnp
sbb
sub
xchg
cmp
shrb
and
adc
insb
js
orl
push
and
inc
frstor
movsb
mov
xchg
jecxz
or
shrl
outsb
add
push
into
dec
stc
jg
hlt
test
jbe
sub
inc
sbb
mov
stos
pushf
push
mulb
je
test
nop
xor
loopne
xchg
mov
stc
xchg
mov
sahf
popf
mov
insb
sbb
xchg
in
lea
stos
push
out
mov
ljmp
icebp
arpl
add
sub
scas
xchg
inc
cmp
xor
hlt
adc
fmulp
sub
repnz
jecxz
inc
movsl
addr16
iret
lock
pop
cltd
push
sbb
sub
xor
sbb
xor
int
sub
fbld
gs
mov
pop
test
mov
in
pop
data16
sub
ds
xchg
and
pop
stc
xor
adc
sbb
lret
daa
insb
inc
sbb
call
repnz
orl
mov
mov
stos
out
cmp
mov
jge
sbb
mov
dec
dec
hlt
js
jmp
push
imul
xchg
mov
mov
lcall
sbb
outsb
lock
mov
cli
repnz
xor
sub
push
in
sar
stos
mov
pop
ds
iret
push
jns
mov
test
les
pop
inc
outsb
mov
dec
movsl
or
repz
xor
cld
inc
mov
cmpsb
insb
shll
stos
inc
inc
cltd
push
fiadds
mov
add
lcall
mov
or
movsb
insb
test
xor
adc
daa
mov
les
inc
orb
mov
add
mov
and
xchg
repz
cld
loopne
movl
push
mov
lea
adc
outsl
push
xchg
stos
pop
lods
dec
push
add
xchg
icebp
div
fistps
aaa
fwait
arpl
sbbb
xor
sahf
rcr
mov
xchg
pop
ficoml
fisttpl
sahf
xor
dec
aad
cwtl
dec
movsb
adc
cmc
cwtl
mov
cmp
mov
data16
pop
xchg
inc
pushf
inc
mov
out
mov
and
loope
rclb
out
inc
dec
push
bound
test
cld
add
adc
xchg
insb
or
dec
mov
dec
jnp
cmpsb
lcall
push
movsl
je
inc
lea
ljmp
enter
or
mov
ja
insl
sbb
scas
loop
mov
dec
ljmp
repnz
mov
out
repnz
leave
pop
rorb
shrl
push
lcall
xor
fisubl
cli
adc
sahf
mov
test
push
fcmovu
lods
cld
sub
and
faddl
mov
push
inc
jne
ja
cmp
inc
jae
lahf
jmp
sahf
dec
mov
lret
mov
and
or
mov
pushf
loop
das
dec
mov
mov
inc
jecxz
mov
outsb
mov
aaa
incb
in
or
push
or
rolb
mov
jns
movq
popa
jp
inc
andl
xor
and
mov
divb
and
loop
xor
mov
pop
push
je
fsubrl
add
sbbb
add
sub
adc
repz
negl
gs
inc
mov
mov
push
xchg
je
sbb
and
dec
int3
scas
mov
jle,pn
cmp
add
add
push
popa
and
mov
sbb
es
xor
push
outsb
mov
push
xchg
mov
adc
and
push
leave
int3
sub
mov
test
push
ret
outsl
adc
shll
inc
sub
mov
sti
and
sub
lea
mov
popf
repnz
stos
add
mov
mov
shlb
in
ror
int3
out
jle
lea
in
scas
push
jle
daa
cmc
add
or
adc
lahf
aaa
stc
mov
xchg
pushf
pop
in
loop
jb
xor
inc
es
mov
mov
insb
and
cli
cmp
or
cmpsl
in
mov
fwait
push
push
dec
pop
push
push
mov
frstor
movsl
stc
add
adc
es
pop
jp
fwait
mov
stos
sbb
into
pop
or
ja
mov
pop
mov
aam
xor
and
mov
sub
or
cmpsl
stc
and
push
scas
mov
dec
xor
dec
sbb
cld
ja
lahf
not
add
add
cwtl
lcall
jl
xlat
in
jo
lret
rolb
mov
stos
rcrb
sub
mov
jmp
push
inc
inc
sar
mov
pop
and
inc
or
xor
push
daa
idiv
test
fbld
outsl
insb
test
push
lock
fstps
add
stc
loop
mov
push
js
add
dec
xor
aaa
mov
jnp
mov
test
daa
cmp
ret
mov
lret
push
and
pop
roll
or
jle
xchg
mov
orb
mov
push
dec
jle
icebp
enter
add
mov
sub
enter
ret
faddp
mov
sbbl
sti
jns
add
push
mov
mov
out
test
pop
sbb
or
out
rcrl
rorl
jae
cltd
or
jmp
xchg
js
sti
stos
fistl
xorb
jge
outsl
out
shll
mov
jg
jno
dec
mov
repz
mov
push
jo
dec
lcall
movsl
pop
arpl
jnp
ds
sbb
sbb
push
js
sti
sbb
stos
pushf
movsl
mov
pop
push
jge
inc
sbb
push
xor
cltd
push
mov
mov
cmp
lea
cmpsl
out
out
shr
inc
jle
lcall
je
jbe
int
mov
fsubrs
mov
xchg
sub
fwait
pusha
mov
cmp
cmp
scas
cmp
loope
xchg
xchg
xchg
mov
enter
add
or
loop
stos
push
mov
mov
in
popf
mov
or
xor
mov
adc
mov
xchg
sbb
popf
mov
xchg
imul
cmp
imul
sarb
push
xor
ss
out
or
pushl
out
dec
mov
and
xchg
popf
xchg
push
mov
fcoml
jmp
jecxz
sub
push
mov
cmp
imul
ljmp
cmp
mov
push
popf
mov
stc
and
jmp
inc
sbb
dec
icebp
push
mov
lea
clc
xor
jg
inc
xchg
test
pushf
fiadds
in
mov
mov
mov
gs
mov
xor
les
jno
cmp
jno
in
cmp
pop
jle
jae
leave
sbb
or
add
sbb
pop
or
mov
mov
cmp
or
repz
jb
repnz
inc
sahf
test
sbb
iret
fnsave
and
sbb
in
in
nop
jnp
xchg
test
sub
mov
fbstp
negl
aaa
ja
pop
test
sahf
ds
fcomps
mov
adc
in
clc
sub
movsb
shrb
add
je
xor
xor
xor
imul
decl
sarl
add
lds
mov
xchg
outsl
dec
inc
jne,pt
into
xor
or
mov
imul
sti
fsubl
and
cld
lahf
lahf
sub
dec
mov
ss
adc
imul
or
fnstenv
dec
sbb
sbb
fdivrs
cld
cmpsl
inc
jb
adc
sahf
or
xor
mov
stos
mov
lret
in
jecxz
and
pop
ret
push
inc
inc
cltd
idivl
sbb
sahf
and
dec
stos
xchg
sti
std
cmp
ja
and
ds
jbe
or
mov
cmp
mov
adc
push
fisubl
mov
lods
int
ret
dec
sti
stos
ret
or
xchg
jno
sub
in
sub
xchg
mov
hlt
sar
clc
lcall
dec
cltd
cltd
dec
into
shlb
ficomps
stos
enter
dec
lahf
push
divl
cmp
or
roll
or
jg
xchg
fimull
mov
dec
or
xchg
xor
push
cmp
iret
mov
lock
stos
icebp
xor
pop
cwtl
or
inc
cmpb
inc
jl
lea
js
loop
lods
cmp
sub
neg
push
lret
push
mov
sar
push
popa
jnp
ds
lock
jns
inc
or
pop
adc
mov
les
call
loopne
cltd
fucomi
popa
fmul
call
jne
dec
jmp
push
dec
stc
mov
sub
pushf
adc
jge
jno
cmp
mov
mov
int3
cmp
inc
notb
dec
push
inc
cmpl
inc
fildll
xchg
sub
pop
jl
inc
sbb
stos
lahf
es
inc
mov
out
dec
ss
bound
mov
subl
pop
or
jp
fnstenv
push
std
lods
xlat
pushf
insb
orb
lods
cwtl
or
mov
jle
aam
push
push
lret
xchg
pop
mov
stos
mov
lahf
add
pop
mov
ljmp
sbb
cmp
inc
test
xor
aaa
inc
test
and
and
mov
xchg
sbb
jno
ret
or
adc
and
sbb
les
sbb
stos
mov
outsl
movsl
mov
ljmp
shll
ja
add
adc
int
flds
cltd
out
into
incl
test
sbbb
mov
sahf
pop
xchg
jno
sbbb
push
pop
dec
mov
push
stc
cmc
test
ljmp
mov
sub
pusha
mov
bound
test
ds
icebp
ret
bound
scas
add
add
cltd
fstl
or
push
mov
adc
push
push
scas
arpl
cmc
mov
pop
lock
stos
pop
mov
add
mov
fmulp
ds
inc
or
xor
mov
iret
mov
into
icebp
clc
fsts
pop
pop
jecxz
ds
cmp
icebp
rcl
into
mov
add
mov
pop
mov
sbb
jp
and
jnp
pop
pop
dec
xchg
push
sbb
pop
adc
push
adc
lds
jge
aaa
push
jo
mov
adc
insb
mov
imul
aaa
sbb
inc
sub
ds
xchg
sti
push
cltd
popa
jle
or
jb
loope
lock
add
adc
xchg
add
dec
or
int
jne
dec
xchg
sub
add
stos
mov
sti
xchg
js
out
inc
clc
cmp
sti
and
imul
dec
or
int3
test
jbe
outsb
mov
movsb
sbb
jnp
xchg
mov
mov
rcrb
rorb
mov
jge
pusha
sbb
iret
and
mov
int
push
push
shl
mov
das
cli
cmp
lods
mov
dec
int
and
loope
movsb
mov
lds
incl
roll
inc
mov
clc
aaa
stos
cmpsl
sbb
and
dec
jecxz
mov
int3
mov
push
fdivrp
and
imul
sbb
imul
test
pop
inc
jecxz
les
or
add
je
pop
subb
mov
decl
call
roll
jl
out
and
adc
xor
rcpps
mov
xor
sub
imul
sub
mov
push
xchg
inc
push
dec
and
cmp
mov
lock
addr16
cmp
test
inc
jnp
int3
shr
fs
rcll
f2xm1
jmp
add
and
inc
cmp
jle
pop
xchg
jle
push
adc
in
mov
fmull
and
test
cmpsb
sti
clc
lods
fwait
sub
xor
and
mov
repnz
push
push
push
push
addr16
mov
pop
imul
daa
ja
cwtl
daa
pushf
faddl
jbe
dec
lret
xlat
insl
lea
das
sbb
xor
hlt
xchg
das
and
mov
jp
jno
jle
sub
pop
and
pop
pop
jp
pop
dec
test
pop
pop
shr
xor
data16
call
add
xchg
adc
daa
divps
dec
cmpl
lds
sub
shll
jl
xorl
mov
or
adc
mov
sub
pop
cmpsl
test
icebp
ret
dec
gs
lret
clc
rorb
pop
sbb
or
es
jg
fsubrl
and
jbe
fimull
test
mov
inc
into
or
pop
addb
imul
ret
pusha
arpl
inc
xor
xchg
aam
push
test
pop
cmpsl
leave
cmp
mov
loopne
and
fists
dec
inc
jp
out
ss
pushf
mov
mov
inc
clc
arpl
jecxz
rcr
mov
add
mov
push
arpl
push
mov
xchg
sbb
bound
sar
xchg
dec
push
sbb
lret
movsl
ss
and
lods
jae
adc
insb
cmp
insb
aaa
jnp
push
stos
xchg
insb
cmp
fldt
sub
inc
adc
int
cwtl
sbb
push
sub
int3
jbe
subl
out
pop
aaa
and
jge
les
lea
add
mov
xor
dec
mov
outsb
pop
stos
jbe
lret
jno
xor
ret
cmp
inc
aad
dec
mov
in
push
jle
pop
adcb
test
imull
cmpsb
arpl
jg
xor
outsl
ja
repnz
rclb
adcb
xchg
test
jmp
or
adc
lcall
into
call
nop
xchg
pushl
or
push
xchg
pop
clc
fiaddl
mov
imul
insb
mov
sub
shl
xchg
cmpsb
outsl
inc
fdiv
mov
clc
dec
out
stos
push
fisttpll
and
push
rol
je
sbb
sub
jnp
out
mov
outsb
div
cmp
adc
add
popa
icebp
sub
adc
fldcw
les
int3
mov
cmp
sub
mov
je
sbb
fs
mov
jne
insb
pop
xor
jl
or
mov
cmp
rclb
test
mov
push
pop
sub
lret
jns
adc
fdivrl
and
out
ror
lods
mov
mov
xor
test
mov
test
mov
outsb
cs
push
sub
push
cmp
adc
sarb
push
jecxz
xchg
mov
jge
out
and
mov
cmp
xchg
add
mov
dec
out
bnd
xor
jl
out
sub
xor
insb
pop
fcompl
out
and
pop
sahf
divl
push
repnz
mov
clc
cmp
aam
out
jecxz
adc
mov
cwtl
mov
repnz
cmp
sub
outsb
mov
xchg
insb
fs
fcoms
sub
popa
add
lds
lahf
dec
in
add
sub
push
jl
inc
fs
call
std
pop
stc
aad
adcl
xchg
adc
jmp
lcall
pop
and
cli
xor
das
jb
inc
inc
iret
jmp
lret
aad
imul
scas
fstl
inc
cmpb
and
jnp
adcl
adc
or
add
jne
xchg
repnz
mov
sbb
sub
dec
xor
inc
sti
pop
stos
daa
dec
xchg
aaa
test
jo
fwait
nop
pop
jg
adc
cli
outsb
dec
mov
in
jo
sbb
mov
sub
pop
dec
pop
in
jnp
inc
sarl
lret
cmpsl
adc
and
xchg
dec
xor
add
cs
cmp
in
shrb
ret
push
jp
scas
xlat
lahf
aam
push
inc
fcmovnbe
jle
add
sub
iret
xchg
dec
adc
dec
ja
roll
ja
psubd
leave
dec
int
lret
push
lret
mov
rorb
sub
sbb
in
push
pop
pop
mov
repnz
lods
jnp
fwait
cmpsb
iret
sub
cltd
bound
adc
and
mov
pop
inc
dec
outsl
loop
sbb
outsl
into
xor
sbb
lahf
out
pop
rcrl
inc
pusha
and
dec
dec
push
sub
in
repz
mov
bound
mov
cld
mov
ret
mov
cmp
aad
dec
cmp
call
or
mov
jl
in
loopne
test
cmp
xchg
xchg
lcall
mov
insb
test
mov
cmp
or
fimuls
lds
sahf
stc
or
pop
lcall
nop
outsb
xchg
pop
fisttps
sub
sub
push
cwtl
xchg
lods
jnp
pop
push
xlat
xor
int
xor
lret
push
sti
rorl
add
mov
jo
fwait
ljmp
cmpsl
push
sbb
dec
jnp
jl
popa
leave
or
lea
mov
out
xor
sbb
sahf
mov
push
xor
mov
pop
stos
jbe
aam
push
jg
shl
cwtl
movb
jns
dec
fnstenv
inc
shr
sti
mov
jb
sub
jne
pop
inc
mov
pop
sbb
push
inc
mov
imul
dec
mov
fsubs
enter
cltd
adc
sbb
in
int
rol
ss
mov
stos
call
sbb
es
cli
dec
inc
mov
pop
fwait
push
inc
loope
mov
dec
imul
inc
les
pop
sbb
pop
mov
push
aas
and
lds
xor
and
enter
inc
jp
mov
cli
push
pop
stos
push
das
xchg
jmp
cmpsl
inc
xor
imul
mov
or
aad
add
decb
movsb
frstor
cmpsl
scas
add
pop
mov
lret
fidivrl
lret
fsubs
cmp
dec
aaa
in
mov
xor
nop
add
push
repnz
mov
mov
loope
push
rsqrtps
mov
sbb
filds
setae
fidivrs
jo
inc
push
pop
mov
pop
jmp
roll
fisubl
pop
xor
adc
jae
cld
lods
mov
aaa
sbb
ss
inc
mov
xchg
mov
gs
loope
and
adcb
inc
stos
inc
xor
sar
movsb
jmp
lods
imul
insb
notl
je
jle
in
rolb
mov
imul
xor
xchg
stos
aas
in
loopne
push
imul
subl
push
pop
loop
cwtl
lods
push
xor
popf
dec
pushf
into
xchg
add
es
call
incl
add
ja
arpl
sub
neg
push
mov
sbb
cmp
shll
and
mull
mov
mov
sub
push
pop
rolb
lock
rolb
out
out
jle
mov
push
cmp
inc
jl
ja
cmp
sbb
mov
xor
ja
pop
addr16
negl
pop
movsb
test
push
push
push
test
sub
push
test
push
dec
cld
cmp
sahf
xlat
fidivrs
movsl
adc
out
jno
dec
add
jae
das
mov
sub
push
mov
out
movb
mov
pop
lods
inc
sti
fisubs
mov
popf
gs
sub
shl
push
daa
in
rolb
icebp
repz
mov
jo
ss
pop
jl
out
test
mov
xor
xchg
sti
pop
jle
pop
fidivrs
das
popl
cmp
xchg
dec
test
in
pop
scas
ret
gs
mov
insl
addb
mov
push
or
xor
push
test
sbb
xor
scas
imul
jo
into
and
sbb
testb
push
mov
and
test
ds
fdivl
in
pop
outsb
test
cmp
jecxz
inc
sbb
mov
or
mov
push
pop
mov
dec
sti
stos
imul
xchg
cmp
aad
inc
test
les
xor
add
sbb
inc
out
or
cmp
ja
stos
fisubrl
div
add
add
jle
sbb
push
nop
inc
jmp
add
mov
mov
mov
movsl
lret
jle
cli
sbb
scas
das
mov
mov
and
jl
mov
mov
lods
mov
mov
xlat
stos
push
cmpsb
mov
notb
out
adc
test
es
push
push
aam
cwtl
xchg
xor
push
dec
pop
xchg
jnp
dec
mulb
dec
pushl
mov
cmp
lock
inc
fxch
mov
ja
insl
jae
cmpsl
pushf
ds
cli
cmp
stc
repz
call
es
cli
pop
in
inc
aaa
jecxz
lret
mov
xor
push
lcall
sbb
nop
cltd
out
push
movsb
clc
push
je
mov
fsubrs
bound
lods
mov
jmp
addr16
mov
scas
in
repnz
sbb
jnp
int3
in
iret
pop
int3
sbb
cwtl
xor
test
dec
int
test
ja
adc
lods
test
push
sti
xchg
int
stc
or
int3
xchg
rcrl
jg
cmpsl
add
sbbb
or
push
movlps
mov
mov
xchg
clc
les
jp
mov
cltd
fsubr
popf
sub
dec
push
mov
mov
push
dec
ret
or
mov
aam
roll
outsl
dec
sub
pop
jne
dec
add
aad
sub
push
ficomps
sbb
push
adc
xchg
mov
scas
mov
mov
xor
je
sbb
mov
popf
rcrb
or
ret
hlt
ljmp
hlt
hlt
xchg
fs
push
ljmp
and
out
cmp
clc
ss
pop
test
pop
sub
fiaddl
sbb
inc
sub
in
xchg
fcmovne
aam
dec
xchg
mov
icebp
lea
ss
cwtl
dec
ffreep
repnz
in
orl
aaa
loopne
dec
mov
fisttpll
daa
fldl
sub
test
loop
jo
sub
rcrb
or
fucom
lcall
arpl
divl
inc
mov
imul
ds
sub
push
dec
adc
cmp
xchg
adc
es
hlt
scas
inc
pop
lret
insl
xor
das
jmp
pop
dec
insb
pop
mov
pop
aam
insb
adcl
cmp
shrb
popf
push
mov
out
clc
jle
int3
pop
cmp
es
insb
inc
lods
mov
jbe
xchg
adc
jae
or
sbb
inc
mov
test
inc
inc
cli
hlt
test
test
aas
mov
xor
mov
mov
loope
cmp
test
in
adc
jmp
mov
das
les
lea
sbb
lahf
push
nop
xor
sbb
mov
push
xchg
scas
hlt
xchg
popa
pusha
mov
outsl
into
cmp
fnstcw
pusha
or
stos
lods
dec
xchg
imul
mov
or
inc
xor
mov
and
int3
scas
mov
mov
cmp
jmp
xor
add
fisubrs
jl
jbe
adc
xchg
push
lret
stos
rol
lods
xlat
dec
dec
sub
sub
jg
mov
add
cmpsl
mov
jmp
sbb
das
int3
loopne
out
and
xchg
pushl
daa
sub
inc
aas
out
aam
jp
aam
pusha
mov
sbbb
mulb
data16
rclb
cmp
inc
sub
sub
lret
push
jge
or
sub
mov
addl
inc
push
js
push
mov
jbe
dec
jl
lret
or
jecxz
lods
mov
jge
aas
popl
jmp
push
dec
sbb
xchg
push
sidtl
ficompl
adc
push
add
add
movsl
mov
add
cld
push
repnz
in
scas
and
mov
and
mov
cmc
adc
mov
inc
add
stos
pushf
ljmp
cli
lret
aad
test
clc
dec
push
jo
xchg
adc
lods
adc
addb
loope
inc
dec
rcrb
jnp
aas
mov
loopne
inc
jb
jge
ljmp
jmp
and
loop
and
out
repnz
lods
repz
sbb
push
ss
dec
sub
es
pushf
cmpsb
out
shlb
inc
push
sub
xchg
dec
stc
addl
dec
outsb
stos
daa
inc
repz
loopne
jge
in
ljmp
notb
sub
inc
jp
jg
jle
scas
mov
repz
fcoms
xchg
pusha
sub
sbb
shlb
adc
jns
stos
push
lods
pop
inc
sti
cld
pushf
and
aam
inc
jg
dec
imul
ja
jg
dec
mov
lods
lds
loop
cld
lret
and
outsb
cmp
outsl
divb
adc
cmc
push
cltd
inc
bound
cld
ljmp
mov
imul
jnp
and
inc
sbbb
jp
outsl
scas
xchg
sti
jg
arpl
sbb
xor
loope
pop
xor
ds
out
mov
mov
ss
push
xchg
aad
clc
sub
xor
fs
inc
mov
adc
cmp
dec
jg
pop
xchg
sub
icebp
lods
and
sahf
cwtl
pop
or
cmpsl
or
fwait
push
and
mov
add
bound
inc
fwait
rol
sbb
fimull
xor
ja
jmp
fwait
push
jb
lcall
scas
or
adc
decb
outsb
or
fwait
imul
iret
aam
mov
les
out
cltd
or
testb
cmpsb
dec
sti
push
lea
sbb
lret
negb
mov
rcr
jae
cmp
rcll
iret
stos
aaa
test
sub
cmpsb
shlb
dec
lcall
cmpsl
imul
mov
pusha
pushl
mov
scas
das
xchg
cwtl
insb
push
lcall
sbb
fisubs
push
cld
xchg
or
push
int
mov
mov
push
and
jne
sahf
sbb
mov
jle
mov
gs
lods
cmpsb
lea
mov
fsubrl
fnstsw
dec
jbe
insl
fwait
daa
mov
int3
sub
pop
inc
rolb
inc
scas
in
fdivrl
and
inc
xchg
mov
push
mov
push
ret
idivl
ja
mov
loopw
push
movsl
cmpsb
insb
push
push
dec
cs
out
ret
dec
shl
jmp
int3
sub
sarl
cmp
jnp
lahf
pop
lods
les
gs
cmp
dec
push
fs
add
mov
xchg
cmp
pop
or
mov
adc
inc
and
lahf
repz
dec
mov
int3
out
jge
pop
lcall
divl
shr
push
dec
mov
cmpsl
jg
jg
jg
pop
fisttpll
jecxz
test
add
je
cmc
ret
xor
dec
jg
mov
mov
xchg
mov
xlat
xchg
mov
inc
cs
jle
test
dec
decb
lcall
mov
cmpb
inc
lret
xor
sti
pop
lds
jmp
pop
mov
push
insl
jg
dec
lods
adc
inc
xchg
jbe
dec
or
lret
inc
fldcw
call
std
imul
iret
cmpsb
out
repnz
pushl
pop
add
xor
cwtl
dec
and
jnp
cli
aad
stos
pop
aam
imul
jb
pop
add
mov
or
sahf
or
xor
sti
or
sub
sbb
inc
xor
cmpsl
inc
mov
xorl
fwait
inc
ret
inc
xlat
enter
dec
orl
divl
aad
loop
mov
xlat
test
je
push
idivl
xchg
in
mov
adc
arpl
mulb
mov
enter
outsb
ret
cmpsl
popa
jbe
aaa
jb
xor
icebp
ss
mov
jnp
cmp
mov
add
mov
and
cmpb
shrb
es
daa
mov
sbb
testl
jbe
sbb
jle
xchg
div
cmp
pop
aas
pushf
sbb
jle
pop
aam
sbb
out
aaa
and
pushf
sub
push
add
sbb
pop
sbb
and
loopne
cmp
xchg
xor
push
call
cmp
lea
rcrb
push
adc
xchg
push
gs
xor
mov
dec
sbb
iret
xchg
je
pop
adc
loop
xor
sbb
sub
inc
or
outsl
sub
roll
and
int3
cmpsb
std
mov
jmp
popa
xchg
nop
inc
ja
cs
sub
inc
jge
push
lcall
fiadds
cmpb
fucomip
repz
mov
mov
add
inc
xchg
test
sbb
mov
sbb
and
cmp
fstps
jno
lret
push
pop
cmpl
aaa
inc
daa
xor
dec
jae
inc
cmp
push
add
cmp
push
xor
push
shr
xor
out
stos
sbb
dec
rolb
cmpps
in
mov
lret
out
lret
pushf
cld
dec
ljmp
lods
dec
xor
mov
inc
fwait
xor
pushf
imul
pop
gs
jnp
divb
enter
cmp
mov
xor
mov
mov
ds
push
mov
lock
mov
and
inc
sub
arpl
and
or
mov
jnp
xor
mov
or
rolb
ret
sub
gs
cli
mov
sbb
and
and
cwtl
movsl
dec
add
pop
sbb
mov
cmc
mov
fsub
es
fcmove
loopne
add
inc
mov
mov
arpl
int3
cltd
faddl
and
popf
hlt
xor
out
faddp
es
mov
repz
mov
int3
inc
repz
lahf
inc
sarl
cmpsl
insb
out
xor
adc
iret
xchg
pop
aaa
dec
out
mov
test
imul
aam
into
cmp
call
or
or
std
call
cmc
adc
je
jp
xchg
jg
imul
rol
jns
loop
sub
pop
int
pop
lahf
popa
sub
jbe
gs
xor
aas
jle
adc
rorl
xor
jg
ljmp
std
cmp
test
and
dec
nop
imul
outsb
ss
insl
mov
les
inc
shl
inc
sbb
mov
jae
adc
mov
xorl
gs
and
push
dec
xchg
lods
fstpl
inc
jmp
xor
lret
inc
flds
lret
rolb
out
leave
jl
and
fwait
mov
popf
adc
and
orb
addl
adc
adc
popa
sub
inc
pop
pushf
pushf
fucomip
lds
inc
mov
iretw
jle
add
sub
je
fistps
xor
xor
sbb
or
sbb
xchg
and
mov
sbb
enter
add
int
pop
pop
mov
push
in
xchg
jecxz
xchg
jns
out
mov
adc
enter
icebp
aad
out
sub
or
les
outsl
sub
outsb
cmp
and
sub
dec
int3
loopne
outsb
enter
or
mov
cs
leave
rorb
ljmp
xchg
jae
lcall
xchg
popf
mov
jp
cmp
sbb
adc
xchg
loopne
repz
adc
push
inc
fs
cli
adcb
jne
int
cwtl
std
mov
loope
outsb
dec
fptan
jne
out
cmpl
sahf
mov
sahf
xchg
or
jge
rorb
enter
or
jge
mov
mov
cwtl
jnp
aam
insl
xchg
int
cmp
cmp
sti
mov
push
mov
sub
mov
push
cmp
inc
cmp
pop
mov
movsl
outsl
into
dec
lock
xchg
jbe
into
jp
xchg
jb
clc
pop
repnz
sbb
or
movsl
mov
xor
out
jnp
fdivl
add
test
mov
jp
mov
fdivr
addr16
test
call
cmp
mov
xchg
sub
shlb
xchg
rclb
loopne
and
mov
cmc
test
pop
jbe
sub
mov
out
in
mov
andl
push
enter
dec
pop
pushf
xchg
push
dec
adc
pop
pop
dec
push
out
mov
ljmp
dec
jg
cmp
add
xor
mov
sub
lcall
jecxz
xor
add
imul
mov
les
xchg
call
xor
lahf
mov
xchg
xchg
dec
ljmp
int3
sbb
and
or
stos
mov
loope
pop
push
add
xchg
add
stos
mov
fidivl
in
das
mov
push
cli
or
sub
mov
mov
cwtl
js
push
roll
std
sahf
mov
mov
mov
stos
hlt
fidivrl
jbe
and
fdivrs
pop
fcoms
nop
sbb
cli
mov
cmp
xor
or
insl
xor
mov
ret
and
popa
push
or
es
mov
push
fcomip
inc
push
jg
dec
popf
out
cmp
sti
out
iret
insb
xchg
add
lcall
dec
ret
shrb
push
push
fwait
and
fwait
jge
cmp
lods
xor
xchg
xor
iret
push
orb
push
pop
mov
int
dec
add
test
out
inc
sub
pop
repz
cld
add
loop
or
xchg
lret
repnz
int3
dec
push
lods
repz
imul
insl
icebp
push
clc
inc
mov
iret
dec
mov
add
jne
test
stc
iret
xchg
mov
inc
iret
jg
imul
stc
es
notb
cmpl
add
loop
iret
pop
mov
cmc
sbb
aas
lods
aad
ret
das
xor
inc
xchg
cld
leave
and
lcall
fsubl
mov
inc
sub
adc
test
jno
and
push
mov
mov
fucomip
fcoms
cmpsl
jmp
adc
cli
sbb
js
repnz
fcmovnb
cmp
dec
rolb
imulb
push
mov
dec
fisttps
das
imul
push
add
orb
fwait
cld
dec
out
jbe
jb
add
push
bound
adc
nop
sbb
cmp
xchg
fwait
jno
shlb
add
loop
pop
push
ret
loope
idivl
sarb
pop
hlt
ds
out
push
repz
jge
xor
lcall
push
fiaddl
xor
repz
mov
cmp
inc
cli
dec
mov
int3
cmp
fbld
stos
ficoml
scas
in
add
mov
mov
cli
fldcw
clc
push
jl
xor
popf
jns
dec
fcom
sub
stos
paddusb
test
add
push
fsubrs
and
test
xor
or
push
dec
jmp
aas
ljmp
add
imul
bound
sbb
pop
mov
mov
xchg
cmpsl
and
into
fdiv
xchg
pop
js
lock
dec
mov
sbb
xchg
cmp
cs
cmc
sti
loope
shlb
mov
pop
mov
jae
dec
fiaddl
ja
jmp
sbb
push
imul
int3
imulb
jge
loop
in
ret
adc
cmp
inc
imul
and
xchg
cmpsl
faddp
xor
inc
loope
lahf
bswap
fwait
sti
inc
pop
cmp
xor
ss
ljmp
cmpl
cmp
repnz
repz
lret
pop
jge
dec
inc
add
jl
subb
push
fnstenv
xor
dec
andb
fisttps
push
and
stos
call
and
jecxz
imul
sbb
dec
mov
xrelease
push
dec
fdivr
sbb
test
and
pop
in
cs
sarl
or
outsb
int3
sbb
jle
loopne
xor
push
repnz
xor
push
xchg
icebp
cs
and
rcll
sbb
ja
dec
and
repz
in
mull
xchg
out
je
lea
fldt
fs
mov
xchg
inc
push
jle
shl
adc
sub
fcoms
das
inc
icebp
cs
sub
xchg
repz
mov
push
sbb
scas
loope
xchg
and
inc
pop
jne
jns
or
add
sub
pop
call
jp
and
jne
xchg
push
mov
or
push
cmp
into
mov
lods
mov
dec
orb
push
or
pusha
cmpsl
fisttps
sub
rcl
orl
mov
cmpsl
repz
call
addb
stos
lods
and
cwtl
sbb
addr16
outsl
xchg
out
jecxz
push
sub
repnz
pop
daa
cmp
push
pop
inc
jg
adc
popf
repz
cmp
cmp
mov
lea
and
and
cld
cmp
dec
sub
xlat
push
cwtl
test
mov
fsubr
and
insb
adc
mov
orl
sub
jg
in
dec
iret
cmp
push
add
cmpsl
sbb
int3
repz
dec
lds
push
jns
jne
mov
out
pop
jae
inc
mov
dec
test
mov
out
sub
mov
mov
push
test
jl
stos
jg
push
dec
push
pop
mov
outsl
out
xor
cmp
in
rorb
sub
sbb
mov
dec
mov
rcr
cmc
mov
pop
sbb
mov
cmpsb
or
lods
aas
push
lret
pop
inc
pop
arpl
add
jmp
adc
cmc
das
sti
ljmp
stos
sub
sub
jle
sub
movsb
dec
xchg
and
cmp
incl
and
or
aas
int
pop
sbb
idivb
dec
stos
xor
data16
xchg
ljmp
cmp
jp
insb
or
push
jmp
pop
outsb
addl
imul
test
adc
imul
subb
jne
leave
xor
lds
jbe
test
adc
in
outsl
mov
test
cld
jl
out
inc
int3
sub
test
std
movsl
push
add
movsl
inc
test
cmp
roll
mov
xchg
push
and
sbb
or
mov
xchg
aam
cld
pop
int
daa
push
xchg
xchg
jns
dec
insl
and
sahf
in
mov
cs
xchg
and
sbb
mov
pop
lret
xchg
daa
mov
ja
inc
in
pop
andb
and
jecxz
adc
jg
inc
pop
jnp
xor
pop
lcall
jg
jmp
lret
and
je
notl
dec
adcb
mov
lock
add
pop
movsb
inc
xchg
jnp
test
sti
mov
cmc
xchg
repnz
ficompl
mov
fisubrs
pop
outsb
aam
or
test
push
iret
or
js
aaa
sahf
cmpsb
xchg
sbb
daa
insl
or
inc
or
sub
cmp
fstps
jl
frstor
and
into
shrb
inc
fcomp
jmp
sub
fwait
xor
popa
or
insb
mov
push
stos
pusha
int3
add
js
ss
clc
nop
inc
addb
ja
mov
fwait
xor
ljmp
ret
popa
imulb
xor
lcall
int3
or
cmpsb
lret
test
mov
dec
loope
or
xchg
push
xor
lahf
mov
add
and
daa
fnstenv
mov
lret
shr
mov
push
test
mov
cmp
xchg
add
das
mov
push
inc
rcrb
shrb
and
ds
sub
xor
mov
and
sub
push
sti
adc
xchg
push
sub
insb
jno
inc
push
into
mov
int
outsl
inc
xor
add
jge
aad
inc
cmp
add
push
inc
leave
in
into
dec
shr
pop
je
or
shlb
or
jg
xor
sub
in
push
jmp
push
cli
out
cmp
cli
cmp
mov
xchg
pop
mov
rorl
sbb
xor
aad
push
pop
lahf
notl
mov
cmpsb
leave
mov
jbe
jle
fildl
outsb
cmp
and
dec
out
mov
cmp
push
xchg
test
cmp
cltd
push
mov
inc
aas
daa
out
subl
lret
loopne
js
das
and
or
fldenv
mov
mov
pop
xor
jp
mov
jle
add
filds
out
stos
filds
pop
testl
fiadds
jge
sub
scas
dec
pushf
sub
pop
and
dec
loop
sbb
es
fnsave
popf
outsl
pop
test
pushl
xorl
lods
loop
pushf
add
cmp
imul
rol
pusha
lcall
sahf
jl
adc
in
dec
test
enter
daa
cld
andl
sbb
hlt
inc
pop
fs
sbb
push
or
insl
mov
loope
dec
or
or
fidivrs
fldl
mov
pop
dec
ds
mov
push
lret
out
pushf
das
adc
dec
mov
mov
cs
es
adc
adc
je
jne
cmpsb
mov
sahf
repz
call
ds
mov
mov
dec
loope
and
sahf
in
mov
inc
dec
int
flds
adc
jl,pn
loope
cmp
lock
cld
xchg
stos
jb
jns
or
aas
jp
pop
insl
out
out
jns
add
int
ljmp
jge
stos
and
test
fwait
into
hlt
jp
mov
dec
xor
pop
pop
test
mov
jbe
jne
cli
mov
push
and
mov
hlt
sbb
or
lret
pushf
stos
xchg
pop
scas
ret
push
sub
jo
pop
cmp
in
sbb
mov
lret
dec
lcall
fists
into
push
sahf
test
jns
xor
mov
push
lret
push
push
push
push
inc
divl
dec
add
mov
dec
pop
sub
jbe,pt
cmpsl
cwtl
imul
xchg
loopne
sbbl
movsl
lahf
pushf
jno
je
cli
outsb
inc
lahf
sbb
inc
dec
pop
inc
imul
push
adc
addr16
add
fldl
shl
jle
into
out
out
les
imul
int
lret
mov
dec
fisubrs
adc
ds
adc
scas
inc
xor
push
in
mov
xchg
mov
push
int3
pop
push
cli
mov
pop
js
scas
pop
fwait
dec
or
rcll
xchg
mov
pop
cmp
sarl
leave
out
lods
es
jle
dec
lret
add
in
lret
js
shll
mov
mov
aam
clc
mov
pop
repz
jmp
or
nop
sub
sub
or
loope
add
or
lcall
fidivs
icebp
dec
add
push
loopne
scas
int
sbb
mov
mov
and
push
jecxz
std
mov
aas
loope
testb
xchg
lcall
jae
mov
mov
pop
out
push
leave
adc
in
icebp
xchg
xchg
inc
out
push
rorb
add
inc
adc
frstor
push
mov
push
add
cld
inc
jae
xor
cmpsl
cmp
aas
push
add
loop
repnz
xchg
das
pop
adc
push
jne
or
cwtl
fs
mov
dec
in
fiadds
ljmp
push
push
lods
stos
data16
lds
sti
sbb
add
fwait
mov
push
scas
add
js
stos
mov
xor
cmp
cwtl
inc
std
cltd
sahf
nop
mov
mov
icebp
mov
xchg
cmp
mov
pop
mov
or
rorw
aas
pop
orl
ds
test
repnz
mov
push
test
or
jg
jl
jle
cmp
pop
lea
es
mov
push
jbe
inc
subl
loope
sarl
add
je
pop
cld
sahf
cmp
add
adc
adc
push
inc
mov
cmp
jbe
xchg
inc
jmp
in
push
test
loop
jno
fidivs
in
jns
mov
pop
gs
inc
pop
pop
clc
dec
cli
push
je
sbb
popa
or
popf
aaa
sub
dec
inc
pusha
push
popl
icebp
jg
mov
iret
xor
push
daa
cmp
jl
inc
mov
repnz
addl
ds
out
xor
add
xchg
outsl
add
sub
loope
lcall
sub
pop
int
mov
push
testb
out
je
adc
inc
cltd
rolb
out
rorb
stos
mov
icebp
cmpb
add
add
orb
xchg
out
dec
xor
sub
sub
push
or
push
xchg
add
jae
test
test
xchg
in
outsl
dec
and
dec
call
inc
sbb
loopne
dec
cld
pop
pop
jg
sub
xchg
in
cmpsb
or
ficompl
mov
pop
insl
and
mov
cs
int3
fbstp
dec
adc
jl
movsb
sahf
fwait
inc
int3
cmp
mov
arpl
repnz
cld
jg
loopne
push
cmp
or
mov
add
fmull
xor
cmp
inc
cmpsl
jbe
or
dec
ja
xchg
cmpsl
jmp
outsb
cmpsb
jl
dec
mov
stos
jle
sub
data16
push
test
dec
push
sarl
xchg
inc
adc
inc
mov
pushf
aaa
add
clc
jg
add
and
sub
not
xchg
or
insb
incb
jg
lar
push
aas
cwtl
repz
out
fisttpll
int3
mov
je
jb
fdivs
mov
push
mov
xchg
jecxz
cmp
mov
mov
arpl
inc
test
sbb
xchg
mov
pop
ret
cwtl
jmp
push
push
out
xlat
mov
andl
jae
jl
xchg
shrl
aad
pop
push
repz
xchg
xor
add
adc
jb
cld
fisttpll
pop
add
add
mov
leave
and
repnz
fisttpll
dec
push
pop
int
cmp
push
fst
xchg
repnz
fadds
pop
cmp
ja
in
icebp
mov
fnstcw
mov
imul
loope
add
enter
pop
call
inc
pop
push
sbb
pop
sub
and
aam
call
rcrb
fs
fbld
mov
lret
or
jnp
pop
lods
ret
mov
ds
cld
push
jl
jae
push
xchg
mov
jmp
inc
xlat
stc
cmp
fxch
cmp
aad
push
enter
fsub
push
jle
dec
mov
jns
push
xchg
fwait
jae
aas
inc
pop
jns
and
fsubrp
adc
add
setb
dec
ret
mov
fdivl
rcl
mov
jp
aaa
fcmovne
mov
pcmpeqb
and
cwtl
loope
mov
inc
add
ficoms
xchg
repz
dec
in
add
loop
and
xor
sahf
adc
push
mov
mov
push
xor
xchg
sbb
out
stos
sub
mov
xor
mov
fldcw
popf
popa
adc
ret
cmp
fidivrs
jmp
rcll
lods
lods
into
and
test
dec
inc
int
loope
lahf
in
lea
fistps
cwtl
fistpl
div
jno
cmp
pushf
xchg
rorl
xor
adc
imul
cmc
pop
mov
cld
adc
movsb
pop
sub
add
and
outsl
jg
sbb
adc
add
push
add
xor
dec
jle
sarb
cs
out
lret
add
mov
scas
or
mov
fsubl
das
aam
ret
mov
sahf
cli
pop
jle
jle
cmp
cmp
jp
push
jnp
shlb
dec
cli
jmp
test
cwtl
sub
push
and
ja
loop
or
or
das
test
sub
jmp
hlt
fistl
inc
lahf
and
adcl
cmp
xchg
inc
lcallw
lock
daa
outsb
lcall
dec
int3
repnz
sbb
jge
inc
lds
push
mov
icebp
mov
cld
fisubrs
and
adc
ja
jecxz
jne
in
jne
daa
scas
orl
push
aaa
sbb
mov
xchg
and
out
xorl
push
pusha
rcll
and
pop
or
push
addr16
mov
jecxz
xchg
shl
pop
addl
orl
sub
adc
mov
rcll
lahf
lds
jb
sahf
aam
pop
dec
inc
or
shr
adcb
xor
lock
scas
and
mov
dec
repz
rcll
jno
push
push
je
movsl
and
lahf
sub
clc
pop
into
sbb
cmp
stc
mov
pop
inc
idiv
jo
arpl
sub
and
adc
jae
jg
adc
scas
cwtl
sarb
ret
jg
incb
cmp
or
rcl
aas
jl
gs
adc
jge
je
inc
gs
and
xor
push
incb
fldenv
jo
pop
and
pop
mov
fdivr
mov
adc
ret
repz
jo
stc
mov
repz
daa
rcll
mov
inc
xchg
lret
add
lock
stc
hlt
push
sar
mov
arpl
add
inc
mov
arpl
jle
cmpb
fildll
aam
push
pop
fidivs
add
xor
stc
insb
scas
inc
bound
mov
xchg
sarb
sub
dec
adc
fcomp
jg
mov
xchg
sbbl
or
push
into
pop
xor
jns
clc
dec
imul
fldcw
xor
rcll
xchg
aam
sub
adc
std
dec
inc
imul
lock
stos
jp
stc
fadds
mov
stc
les
test
addl
and
call
outsb
jg
fistpl
and
jecxz
cwtl
inc
ss
cmp
and
xorb
lret
sub
and
xor
pop
aas
adc
bound
icebp
ret
dec
mov
jns
shl
or
das
lock
fwait
jl
jnp
xchg
or
cli
cmp
push
pop
pushf
mov
ret
or
in
ret
jp
push
push
cs
xor
xor
cmp
mov
arpl
bnd
imul
arpl
lock
push
jae
or
mov
idivb
testl
mov
inc
rolb
jg
push
rcll
int3
loop
loope
repz
movb
cltd
pop
mov
imul
jg
and
xor
add
jo
pusha
clc
inc
testl
add
fiaddl
aam
push
adc
lods
jns
negb
jecxz
add
adcl
mov
es
sarl
lahf
xor
pushl
or
sarb
and
jecxz
push
adc
xor
dec
cmp
and
mov
and
pop
cmp
jle
inc
xchg
sub
pop
insl
dec
push
dec
or
and
xchg
push
adc
int3
out
nop
repz
push
jg
xor
rorl
ljmp
or
popa
test
aad
test
mov
decl
pop
fstl
jo
xchg
jno
out
inc
fisubrl
add
mov
add
mov
mov
pop
dec
jmp
mov
and
mov
cwtl
xchg
fists
mov
and
mov
sbb
mov
and
or
lcall
imull
out
xor
sub
mov
leave
cmp
mov
les
cmp
es
xchg
scas
ret
mov
fiaddl
out
daa
adc
pop
push
call
pop
cmc
pop
mov
pmuludq
sub
xchg
lods
xchg
or
test
popa
bound
push
xor
int3
pop
sub
push
jb
ret
sbb
out
out
clc
das
xchg
mov
imul
pop
pop
mov
or
dec
stos
mov
es
add
add
cwtl
xlat
loope
cmp
cmpsl
cmp
mov
mov
adc
into
mov
addr16
insb
aaa
int
shl
xlat
loop
jnp
add
dec
pop
cmc
outsb
dec
dec
test
cmp
fistps
cmpsl
std
xor
cmpsl
aaa
out
lret
xchg
int3
popa
das
mov
mov
ret
shll
cmp
stos
ret
dec
jb
ljmp
mov
cmp
dec
int3
inc
arpl
add
dec
xchg
push
mov
int3
fistps
imul
pop
test
pop
jnp
pushf
lahf
adc
jmp
cmp
lahf
cmc
and
mov
push
adc
adc
lock
rcrb
subl
jmp
and
push
mov
pop
mov
and
dec
and
gs
fbld
test
outsb
out
mull
mov
mov
addr16
pop
pop
loopne
das
lcall
shrb
sub
inc
repnz
shll
outsl
mov
xor
jb
or
inc
mov
scas
sub
sti
fists
and
jnp
jmp
inc
add
stos
repnz
popf
or
hlt
mov
inc
outsb
rorl
mov
jl
or
jg
loope
push
mov
adcl
addb
pop
lret
sub
pop
or
push
mov
unpckhps
movsb
popa
cli
hlt
cwtl
shll
sbb
push
leave
dec
fwait
mov
mov
fwait
repz
dec
mov
loope
or
xor
mov
and
adc
or
and
dec
mov
fisubs
xchg
and
das
fstl
sbb
or
dec
loopne
call
fstp
clc
int
iret
and
gs
out
mov
in
std
ja
xlat
push
test
mov
inc
push
xor
cld
int
ja
sbb
pop
mov
pop
cmp
jmp
adc
jl
rorl
sbb
mov
and
push
test
jmp
add
mov
out
movsb
cmc
dec
cmp
addl
and
mov
fbld
leave
pusha
jle
xchg
mov
sahf
mov
fldenv
cmpsl
js
sbb
xchg
cwtl
fidivrs
jle
lock
test
shll
add
or
pop
push
mov
xchg
cmp
push
jo
mov
and
inc
push
daa
push
inc
cmpsl
xorb
push
mov
cltd
cltd
adc
les
subb
mov
sbb
cmpsl
ss
sub
xchg
in
rolb
lret
xchg
ds
shlb
cmpb
mov
subb
lldt
inc
test
ret
inc
xor
test
lret
xor
push
or
mov
dec
out
fucom
mov
xchg
or
or
out
leave
pop
icebp
rcrl
or
imul
mov
sar
and
jbe
xor
jo
loop
dec
push
stc
xor
outsl
and
enter
cmp
scas
push
scas
inc
clc
inc
cmp
rcr
ret
sbb
jmp
js,pn
mov
jno
cmp
rcl
jmp
cmp
testb
push
int
loope,pn
push
adc
ret
or
inc
pop
add
rcrb
push
arpl
add
stc
test
ds
movsl
mov
fldenv
sbb
mov
cmp
call
inc
out
adc
sub
or
pop
mov
imul
push
mov
test
push
or
ds
sub
push
push
mov
lret
cld
sub
subb
fwait
mov
dec
add
fidivrl
cwtl
dec
sub
and
fwait
insl
aaa
incb
mov
pusha
cli
daa
lcall
mov
mov
xchg
dec
push
lcall
in
inc
cmp
mov
fstpl
and
or
mov
repz
inc
test
lret
mov
xor
cmpsl
cmp
arpl
mov
pop
cli
jl
push
pop
fs
mov
jmp
fidivrl
sbb
adc
aaa
xor
mov
and
lock
leave
xchg
jp
cltd
mov
ds
aas
std
pop
xchg
notl
out
or
jle
sbb
jecxz
push
xor
xchg
stc
add
push
sbb
ljmp
hlt
dec
mov
je
cmp
pop
or
outsl
ficoms
gs
enter
mov
push
std
mov
or
xor
pushf
cli
outsl
ret
push
gs
fcompl
add
pop
jg
test
sub
cmp
or
pop
push
and
jl
dec
mov
sub
int
push
sbb
mov
stc
fidivrs
fwait
push
push
mov
fs
mov
imul
push
cltd
lcall
adc
sub
push
jl
cmp
xchg
jno
jmp
cli
lock
imul
add
shll
pusha
lar
movsl
jle
mov
add
in
xchg
fnsave
stos
jbe
jge
pop
or
lcall
xlat
fisubrs
mov
mov
sub
cwtl
cmp
inc
pushf
sbb
dec
mov
sub
mov
xlat
imull
div
jle
mov
or
or
in
int3
cld
jbe
pop
cld
lret
ss
xor
push
shlb
inc
adc
xor
cld
lret
cmp
mov
jb
mov
in
mov
cmp
push
daa
popf
and
jbe
aaa
movsl
and
aad
js
addl
icebp
or
inc
lea
pop
mov
mov
sub
nop
int
jle
scas
fstpt
daa
or
xchg
dec
inc
and
outsb
cs
jmp
ds
enter
and
xor
cs
ret
dec
push
push
dec
and
cmc
pop
push
ficomps
mov
push
repz
fstps
push
mov
shrb
mov
xchg
or
mov
xchg
jecxz
sti
daa
aas
push
add
bound
and
xor
pop
es
stos
stos
rcrb
mov
bound
dec
add
in
xchg
int3
out
inc
mov
xchg
jo
clc
xlat
lret
mov
xchg
mov
andl
jo
icebp
mov
push
jnp
inc
sbb
lret
mov
shll
pop
ret
ljmp
arpl
sub
fistpl
and
cmc
push
or
dec
inc
rorl
pop
push
negl
or
data16
cwtl
sbb
lret
fsubrp
push
inc
and
out
xor
pop
lds
adcl
or
inc
int
pop
sub
sub
dec
mov
push
jmp
cltd
pushf
fcmovnbe
out
lds
dec
sub
push
cld
rclb
mov
cmp
dec
icebp
pushf
push
or
push
mov
jmp
fwait
mov
test
xchg
rcr
cmpsl
pushf
incb
adc
lret
pushf
xchg
out
in
sbb
push
cmp
sub
pushf
sbb
add
jmp
or
cmpsl
xor
mov
mov
sub
in
push
sbb
jge
xchg
adc
cmp
sbb
ljmp
ljmp
mov
mov
xchg
cmp
fistl
popa
add
bound
dec
ficoml
shlb
testl
jl
mov
and
adc
enter
lret
inc
lret
out
jns
cmp
or
int
sbb
pop
repnz
rclb
adc
ja
js
mov
sbb
xor
ds
adc
adc
loopne
jno
flds
dec
lea
lret
push
imul
jbe
std
nop
fisttps
or
cltd
jnp
test
push
xchg
dec
mov
fldt
jb
add
cmp
test
mov
sbb
movsb
xchg
lock
inc
movsb
pop
jns
movsl
cli
push
hlt
mull
sub
add
bound
sti
ret
dec
sbb
push
arpl
dec
mov
add
fcmovnb
jg
cli
fdivrl
cmp
sbb
dec
mov
leave
clc
inc
sub
in
dec
clc
out
daa
int3
add
rcl
jns
fidivrs
imul
pop
cmc
lods
adcl
add
popl
mov
adc
ds
ret
adc
gs
jge
dec
into
xlat
fdivrs
cltd
imul
fadd
ret
lret
daa
mov
jp
bound
jae
popf
adc
stos
loopne
mov
jns
mov
mov
test
ljmp
sahf
cmp
mov
sbb
imul
xchg
int3
ljmp
mov
or
add
adc
rcr
das
das
mov
mov
pop
repnz
clc
mov
or
dec
push
sub
and
fimull
cmpsb
shlb
push
inc
mov
xchg
out
pop
scas
or
decl
addb
test
push
adc
cmpsb
ret
dec
jae
orl
mov
repnz
shrl
push
xchg
mov
hlt
rcl
push
pop
cmpsb
inc
in
inc
jl
pop
mov
mov
aaa
jae
roll
dec
or
jge
or
jge
sbb
gs
xchg
fstpt
cmp
mov
fprem
inc
ljmp
stc
fildll
cmpsl
or
adc
sbb
in
adc
lret
cltd
and
inc
and
rorb
rcl
test
cmpb
xchg
inc
dec
xchg
fidivrs
in
jb
sarb
mov
testl
xorl
push
addr16
outsb
lods
daa
addr16
sbb
out
pop
movsb
and
insb
ds
xlat
pop
sbb
mov
and
mov
dec
mov
jo
xor
std
adc
hlt
xor
stos
mov
add
leave
fwait
incb
pop
cmc
inc
add
pusha
data16
or
dec
push
fucomip
in
negl
lods
sbb
inc
dec
dec
mov
std
test
pop
jle
mov
mov
adc
mov
adc
les
in
fcomps
fmull
cmpsl
mov
dec
dec
push
sti
outsl
mov
inc
lock
int3
cli
outsl
sub
mov
jo
or
in
lods
lahf
mov
fisttpl
xlat
mov
push
or
mov
mov
lock
or
push
scas
cwtl
imul
sub
mov
orb
popa
sbb
enter
gs
dec
adc
add
sar
sbb
add
cld
jae
repz
dec
xchg
cli
lods
test
adc
notb
das
pop
mov
mov
jl
ljmp
cwtl
xchg
pop
and
add
bound
adc
push
daa
testl
xchg
xor
in
jbe
ja
dec
mov
add
ljmp
and
mov
mov
fdivrl
filds
jo
add
stos
cmp
adc
fsts
jg
sub
adc
jno
xchg
call
sub
push
xchg
dec
mov
loope
fstpt
das
pushf
mov
daa
adc
mov
jg
shlb
sub
jecxz
jo
mov
xchg
gs
cwtl
cmp
cmpsb
movsb
out
lcall
xchg
test
lods
bound
pushl
inc
aaa
outsl
ret
scas
cmc
mov
fwait
dec
aad
sahf
sbb
mov
mov
mov
in
fcomi
xchg
jg
das
mov
jns
add
call
sbb
nop
ds
mov
sub
xchg
jnp
fstps
sub
ret
inc
dec
test
in
or
loope
mov
mov
leave
aam
dec
loopne
cmp
mov
insb
int
push
rorb
stos
lock
ds
lret
ret
stos
inc
xchg
movsl
lods
push
xchg
sub
out
or
in
cmp
movsl
sbb
mov
jnp
loopne
jne
pushf
cld
andps
insb
fdivr
div
fucom
jnp
cld
loopne
xor
push
je
jo
ror
cld
cmp
rcrb
xchg
in
pusha
inc
xchg
orb
mov
sub
or
std
cmp
add
dec
sarl
gs
mov
lods
test
fnstenv
aas
idiv
or
rcr
sarb
mov
loope
cmp
lret
fbstp
sub
pop
ljmp
mov
shll
jmp
lret
xchg
dec
adc
aas
fldcw
mov
pop
dec
lock
dec
hlt
xchg
inc
xchg
pushf
mov
sub
in
orb
flds
fstp
notl
sahf
inc
popf
sbb
sub
leave
and
idivl
jb
mov
test
mov
sbb
sahf
inc
rclb
test
into
xchg
mov
aas
fbld
xchg
div
or
mov
lock
dec
faddl
addr16
in
inc
out
cmpsb
xchg
jl
inc
cld
jmp
fidivl
xchg
xchg
mov
out
lret
push
test
movsb
in
incl
jmp
ds
mov
mov
or
adcb
mov
aam
dec
mov
test
leave
shlb
insb
movsl
frstor
sbb
scas
cld
fsubl
lock
push
inc
adc
popf
xchg
xor
mov
jl
or
rolb
xrelease
cmp
cld
mov
sub
loopne
xchg
pop
add
and
sbb
movsb
and
negb
mov
xor
rcr
cmp
xor
leave
sub
orb
addr16
test
lret
pop
mov
ss
cs
sbb
cmp
xor
cs
mov
adc
stos
mov
sub
push
loope
jmp
jecxz
pushf
inc
jne
popf
push
enter
sub
clc
aas
cmp
int3
or
in
test
pop
sti
shlb
cli
scas
cli
sbb
cmpsb
push
mov
pmaxsw
cs
pop
mov
adc
mov
sbb
fs
pop
int
cltd
sub
xchg
loope
push
imul
ret
xor
int3
and
pop
inc
sahf
mov
lret
loope
mov
imul
fisttps
xor
xchg
scas
mov
dec
add
scas
pop
push
adc
test
loopne
lods
add
pop
jnp
fstps
mov
inc
cmp
scas
les
push
sub
loope
xchg
inc
adc
mov
fnstcw
pop
adc
inc
cltd
lahf
fs
dec
loop
bound
push
pop
xor
test
or
out
xor
inc
fs
ja
out
pop
lods
jmp
and
sub
flds
jg
sub
dec
fisubl
mov
sbb
mov
mov
inc
and
out
movsb
sbb
xchg
pop
fadds
idivb
xchg
int
andb
adc
dec
int
cmp
outsl
dec
das
ret
addr16
fsubl
adc
cmp
call
cwtl
lcall
and
aam
adc
mov
out
jnp
mov
jge
sarl
sub
jmp
mov
push
cwtl
pop
cmp
mov
cld
inc
jo
test
cld
inc
cmc
mov
pop
repnz
mov
mov
cmp
inc
aaa
push
call
mov
lret
lahf
push
mov
cmpsb
mov
mov
dec
les
popf
or
rcrb
cmc
daa
stos
dec
mov
push
jne
loope
hlt
dec
jno
sub
jp
dec
addr16
in
insb
fdivrs
jg
popa
dec
lcall
pop
inc
dec
lret
dec
insl
insb
mov
lds
popa
clc
scas
mov
fdivrs
push
enter
mov
add
pop
push
pop
xchg
dec
ret
scas
lea
xor
mov
sahf
cmpsb
sub
sub
xchg
push
inc
int
dec
sub
mov
lret
cmpsl
jne
jle
and
fnstcw
outsl
nop
add
xchg
decb
jl
into
mov
and
jp
int3
dec
rol
pop
imul
inc
lods
in
dec
popf
xor
adc
addb
repz
mov
cmp
push
dec
push
addr16
out
or
jge
int3
cmp
iret
scas
addr16
daa
incb
jae
mov
hlt
sub
cmp
xchg
daa
ret
sub
jp
push
lock
inc
addl
cli
mov
jmp
out
jne
mull
daa
jnp
sub
adc
push
iret
dec
mov
imul
stos
mov
inc
popf
mov
icebp
mov
xor
cmp
mov
pop
and
jae
in
add
mov
sub
pop
lret
push
stos
ficomps
lcall
mov
add
push
adc
repnz
xor
test
push
lret
sbb
and
push
or
ret
pop
mov
call
out
inc
scas
insl
cmpsb
flds
scas
or
cmpsl
jbe
outsl
pusha
push
sahf
scas
pusha
sub
stos
jl
adc
mov
xchg
pop
imul
fisubrs
cmp
movsl
cmp
test
test
mov
adc
dec
fisubs
out
mov
cltd
mov
sahf
add
mov
and
xchg
mov
push
inc
insl
popa
xchg
push
lea
jb
fidivl
imull
dec
fwait
scas
cld
imul
leave
rolb
push
ds
push
test
lds
test
add
div
imul
in
fiadds
std
push
xlat
aam
sub
mov
scas
jbe
dec
inc
cmpsb
mov
loopne
ret
adc
aas
lods
inc
ljmp
not
xor
pop
bound
mov
mov
test
shll
test
push
push
lret
jl
dec
push
ljmp
call
cmp
popf
test
std
cwtl
mov
aam
popf
inc
es
mov
insb
in
es
das
jg
pop
adc
push
nop
call
iret
sbb
push
xchg
pop
daa
mov
int3
and
jnp
inc
cs
repnz
pop
inc
dec
stc
popf
pop
push
stos
sbb
dec
add
fiadds
and
or
loope
and
mov
stos
inc
insb
das
cmc
mov
xchg
jno
sbb
lret
cli
pop
icebp
pop
pop
pop
jns
xchg
ljmp
imul
pop
iret
xchg
push
jb
adc
mov
jnp
or
sub
adc
int3
sub
ljmp
xlat
xchg
rcl
jbe
xchg
or
lods
dec
pop
jle
outsb
inc
leave
cli
add
leave
fstps
and
in
xorl
inc
lods
mov
cmp
xchg
mov
jae
mov
inc
mov
pop
jne
data16
dec
mov
in
out
lea
loopne
jb
lods
sub
lcall
sub
mov
mull
shll
pop
cmp
mov
mov
xor
mov
fisubl
pop
sub
dec
xchg
inc
and
mov
mov
cwtl
ss
adc
jg
xchg
mov
adc
int3
and
mov
mov
je
test
cmpsl
repnz
fistpl
adc
notb
rol
mov
pop
xchg
and
mov
mov
ds
fsubs
mov
fisubrl
pop
add
int
testb
sbb
pop
nop
testb
ja
outsb
add
add
mov
std
pop
outsl
mov
dec
adc
lret
jl
add
cmp
xlat
mov
push
mov
or
adc
movsl
or
mov
sub
fsubrl
and
sbb
lds
jbe
cs
inc
ljmp
fcomps
add
lods
fiadds
subl
mov
mov
fs
cmp
pop
repnz
sbb
pop
pop
mov
mov
jmp
mov
nop
addl
jnp
lea
cltd
cmpsl
cmp
insl
fidivrs
jge
fwait
out
xor
loop
cmp
lcall
jg
jecxz
jecxz
pop
mov
and
push
or
fisubs
jnp
jecxz
cmpsb
mov
sbb
pop
cmp
sub
in
xchg
mov
jge
idivb
mov
es
mov
push
xlat
ss
sub
cmp
jp
fdiv
mull
test
xchg
mov
js
test
or
lds
lods
dec
andl
daa
add
xlat
clc
mov
or
aam
iret
xor
mov
stos
pop
sbb
cmp
incl
xor
pop
jle
imul
push
aad
leave
sbb
ss
cmp
push
inc
mov
js
lds
fldenv
mov
sbb
bound
push
fcomip
inc
xor
adc
xor
jo
aad
fidivrs
jne
ret
decl
ds
jg
std
or
push
inc
sbb
cmp
ror
cmp
xor
pop
fxch
cmc
mov
hlt
xor
imul
mov
dec
lods
adcl
in
adc
sar
dec
push
mov
pop
flds
add
dec
jbe
xchg
pop
testb
std
arpl
add
or
and
cli
mov
imul
pop
or
repz
lret
loope
loopw
rcll
add
mov
adc
xchg
aas
je
lock
fcoms
or
pop
pop
in
ret
mov
outsb
cwtl
mov
jne
mov
adc
push
add
xor
inc
ret
ss
cli
das
and
and
loopne
test
adc
in
stc
and
cmp
sti
mov
inc
sti
int3
add
dec
dec
fstl
iret
loopne
cmpsb
jecxz
aad
jnp
aad
pop
cltd
loopne
ds
push
and
mov
dec
stos
sahf
in
sti
sub
sbb
push
jae
cmp
xor
into
popa
stos
mov
adc
and
mov
std
dec
cmp
ret
xchg
jns
aam
rcrl
sahf
inc
cmp
lret
aam
fnsave
jle
mov
inc
incl
popa
inc
xchg
inc
add
pop
cli
sub
cmp
in
dec
shl
clc
inc
pop
sbb
mov
inc
sub
sbb
add
and
arpl
inc
sub
xchg
xchg
cmp
arpl
clc
cltd
je
adc
aas
jle
mov
pop
pop
rorl
or
lods
jns
push
jecxz
cltd
push
test
mov
sahf
das
jp
adc
add
sbb
xor
dec
rclb
aam
fdivl
jp
movsl
add
or
inc
lods
mov
sbb
mov
or
inc
mov
lret
icebp
dec
sbb
int
cld
mov
fildl
add
repz
cltd
jle
cs
inc
push
inc
fstl
call
push
in
fldenv
push
add
nop
jecxz
sbb
mov
ret
outsb
mov
mov
lcall
mov
pop
loope
test
dec
push
push
sbbb
or
dec
add
and
inc
lcall
mov
mov
fwait
les
inc
dec
fstpl
add
inc
in
adc
fs
push
mul
rclb
cltd
pushf
mov
xchg
xchg
inc
std
imul
mov
fstpt
and
je
cmp
dec
jle
sbb
out
inc
jne
repnz
xor
loopne
fnsave
imul
gs
bnd
fstl
ret
mov
push
test
pop
mov
mov
mov
fistpll
cmp
or
pop
mov
pop
sub
fistps
test
dec
cltd
fnstsw
fucomp
mov
jle
sbb
iret
filds
jb
push
inc
dec
repz
xlat
mov
lock
es
sbb
dec
xchg
dec
movb
dec
lret
loopne
mov
sbb
xchg
ds
gs
pop
add
add
and
mov
outsl
icebp
xor
inc
jmp
dec
add
idivb
ja
mov
jne
je
daa
out
sbb
add
and
mov
les
adc
add
sar
fistl
dec
out
cmpsb
mov
je
mov
rcrb
adc
out
mov
add
pop
pop
mov
add
xor
lods
inc
xor
push
or
mov
aaa
int3
lock
in
adc
out
aas
das
loope
xor
sbb
fdivrl
stos
mov
cmpsl
adc
push
jnp
testb
jnp
jg
lret
cmp
push
js
mov
jmp
mov
leave
dec
adc
xchg
stos
mov
es
insl
push
cmp
cmp
mov
cltd
jge
movsl
test
sti
sub
subl
inc
inc
mov
mov
sahf
popa
or
loopne
nop
paddb
mov
jp
repnz
movb
leave
or
and
ljmp
insl
xchg
clc
das
fcomps
loopne
adc
stos
cmp
arpl
pop
sbb
addr16
pop
xor
or
and
fmulp
loopne
outsb
push
add
orb
out
sub
xchg
hlt
loopne
mov
cmpsb
jg
imulb
mov
xchg
xor
out
out
pop
mov
push
stos
nop
mov
in
xchg
cmp
or
nop
jne
mov
or
clc
mov
jle
fisubl
cmp
ds
xchg
out
xor
cltd
dec
jp
or
add
cmpsb
outsl
inc
xchg
mov
adc
jae
fisttpll
orl
test
repnz
and
in
jbe
fwait
lods
xchg
lret
jg
push
ret
or
inc
shll
mov
ret
pop
mov
sahf
push
jg
sarl
into
pop
mov
sub
pop
out
outsb
mov
daa
pushf
add
pop
lcall
sub
add
into
stos
adc
add
jae
movsl
rorl
xor
dec
mov
adc
jne
icebp
shl
es
ret
push
repz
jp
aas
mov
mov
shrb
std
adc
jae
into
fsubl
push
cmp
mov
dec
test
das
cmovbe
sbb
js
push
xor
dec
and
add
cmpsb
ljmp
insb
lahf
xor
fbld
xchg
scas
popa
jge
daa
jbe
daa
pop
pusha
movsb
decb
and
aaa
jle
inc
sbb
cmc
inc
xor
mov
sub
andb
inc
dec
xchg
call
stos
lret
imul
xor
and
pop
out
insb
xor
pop
cmp
data16
je
movsb
jb
fnstcw
add
movsl
test
or
xor
push
lock
pop
popf
jnp
movsb
lret
lock
in
into
ds
movsb
adc
cmp
fnstsw
push
inc
lahf
jnp
pop
mov
das
movsl
iret
xchg
sbb
lcall
xchg
adc
pop
dec
pop
pop
arpl
out
addr16
jle
xchg
mov
jbe
aam
push
aas
in
outsb
sub
dec
xor
test
and
cmpsb
test
jl
mov
mov
lods
add
aas
loop
sub
sub
pop
mov
jb
data16
loopnew
xchg
inc
mov
lahf
mov
aas
adcb
call
mov
mov
cmpsl
mov
repnz
rolb
fstpt
hlt
mov
or
aam
cmp
es
cwtl
adc
mov
cmpsb
adc
jmp
fstpl
adcl
sub
or
sbbb
shll
stos
jp
add
mov
mov
adc
pop
popf
push
jp
xlat
mov
jnp
mov
sarl
push
loopne
rclb
or
jnp
mov
in
mov
xor
testb
cmpsb
push
jge
push
or
ret
cmp
mov
test
dec
shr
lahf
data16
dec
dec
pop
cltd
stc
stos
enter
pop
mov
and
mov
inc
mov
ljmp
jle
dec
repnz
ficomps
into
sub
mov
addr16
lock
rcrl
sbb
stos
mov
inc
call
lahf
fldl
lret
or
mov
addl
mov
jle,pt
sbb
outsb
sbb
cmp
dec
mov
mov
jae
jns
mov
aad
add
jmp
loopne
ret
pop
mov
jp
hlt
jo
imul
lods
sbb
out
push
mov
fstl
jmp
mov
out
outsl
mov
cld
jo
imul
andl
lcall
push
xor
adcl
dec
lods
repnz
lods
adc
dec
fstpt
jnp
popf
data16
in
data16
shll
and
mov
dec
sub
daa
jle
rolb
mov
cs
xlat
jo
mov
daa
lock
imul
xchg
jnp
jb
pushw
sbb
pop
add
jno
movsb
orl
cmp
fs
jle
jbe
and
mov
test
add
sub
sbbl
push
inc
lret
mov
mov
flds
out
fstl
jle
jb
mov
lods
inc
popf
aam
jb
dec
sar
mov
push
sbb
dec
sub
pop
lahf
mov
lret
sbb
fs
cmp
dec
cltd
push
jg
arpl
xchg
xchg
rcl
fcmovbe
mov
test
flds
data16
inc
out
adc
ret
aas
movsb
fisttpll
sub
mov
sbb
stos
sti
dec
dec
lret
sbb
sahf
dec
stos
pop
mov
cmc
rorb
xor
nop
das
inc
adcb
sub
and
fisubrl
cmp
push
mov
jecxz
dec
push
sbb
out
pop
adc
jmp
mov
call
sbbb
decl
mov
inc
jecxz
imul
mov
mov
and
or
mov
push
and
imul
mov
or
rcr
out
add
icebp
adc
pop
ficomps
or
push
fcomps
shrb
cmpsl
loop
lods
clc
xor
in
push
gs
aas
dec
add
in
mov
jmp
fldenv
mov
jbe
mov
fnstsw
or
inc
popa
push
leave
mov
mov
js
inc
sub
and
mov
xchg
out
lret
mov
sahf
fadds
in
mov
push
mov
out
outsb
popa
xchg
mov
in
test
mov
dec
test
adc
popa
stos
cwtl
sbb
lods
dec
stos
and
pop
pusha
pop
adc
adc
cli
mov
cmc
xchg
popf
call
fidivs
pop
mov
xchg
insb
out
pop
mov
outsb
in
mov
jecxz
mov
insl
pusha
outsb
sahf
add
cmp
cmpsl
and
cmp
sbb
mov
shl
imul
jnp
mov
jp
out
call
and
inc
inc
or
push
inc
dec
sarl
es
fisubrl
testb
sbb
push
out
and
call
aaa
in
out
pop
lock
pusha
lcall
lcall
in
pop
and
pusha
sbb
dec
sahf
out
popf
push
cli
idivb
mov
xlat
in
xchg
enter
inc
stos
lods
rcrl
mov
mov
pop
out
sbb
stos
lock
sbb
ljmp
ljmp
pop
cmovge
sub
push
imul
fldcw
cmp
out
out
pop
scas
test
call
adc
mov
mov
lods
lcall
push
jnp
jno
icebp
xorl
dec
mov
mov
in
imul
int3
push
or
sbb
jge
pop
jnp
cltd
cld
cmpsb
in
loopne
pop
es
jge
out
icebp
cmpsb
mov
mov
out
push
sbb
mov
mov
stos
std
xlat
cmpsb
insb
mov
inc
mov
out
push
arpl
mov
cmp
mov
cmp
mov
loop
int3
bnd
mov
inc
push
aam
repnz
stos
imul
mov
stos
and
mov
fcoms
push
mov
xchg
dec
stc
sarb
jns
les
in
mov
out
inc
jns
shr
mov
cld
insb
sub
xlat
out
lahf
adc
push
cli
cmpl
sbb
push
dec
push
xor
add
sbbb
or
fcoms
enter
into
dec
pop
aaa
loop
dec
mov
ror
loop
in
xchg
es
ds
cltd
and
pop
cmc
sbb
fstpl
stos
jl
inc
cmpsb
push
test
mov
mov
cltd
or
sti
ss
mov
inc
out
jo
rcrl
sub
add
jmp
out
sbb
sbb
sbb
dec
sbb
cmpsl
fcmovnu
inc
mov
fcomi
xor
sbb
into
mov
pop
fnstsw
cmp
mov
sbb
mov
enter
push
stc
cltd
mov
and
mov
jl
jnp
into
push
lock
push
stos
aam
push
pop
and
xchg
js
mov
ds
mov
js
insl
lods
mov
dec
sub
pop
mov
sbbb
xchg
lock
out
cltd
sbbb
shll
outsl
mov
jl
out
adc
or
mov
push
out
loop
lock
sub
aam
xor
cmpsl
les
ret
mov
pushf
in
lahf
fisttpll
jne
adc
call
mov
rcrb
xchg
scas
lock
ds
jmp
xor
fcomps
lock
jge
test
shrl
push
mov
jae
mov
jmp
mov
sub
stc
xor
jbe
out
mov
mov
mov
pushf
inc
imul
lret
mov
shrb
xlat
cld
nop
sti
stc
push
and
les
lock
rcr
stc
dec
cmove
mov
andb
stos
mov
cmp
jne
push
ljmp
call
movsb
jne
add
outsl
lcall
xor
arpl
cmp
sub
add
mov
mov
xor
mov
dec
out
sub
test
dec
sub
jmp
fwait
dec
adc
int3
int
inc
in
in
push
inc
mov
add
push
pop
xchg
mov
dec
push
in
jmp
notb
mov
mov
pop
fmull
ljmp
lcall
lcall
mov
or
mov
fwait
adc
pop
mov
dec
jnp
sbbb
push
dec
and
pop
push
push
cmc
push
push
or
ror
fcomip
jl
lcall
scas
mov
mov
mov
inc
rolb
mov
xor
mov
xchg
popa
mov
dec
aam
mov
out
mov
pop
xor
lea
sbb
sbb
xor
pusha
ljmp
cmp
sahf
jne
sarb
push
ret
out
and
in
ja
cmp
hlt
stos
mov
sub
push
push
jo
stc
in
das
ljmp
inc
dec
mov
enter
and
out
scas
lret
shlb
lds
jp
fucom
xchg
stos
fwait
and
inc
lahf
les
pop
out
adc
jb
es
scas
jo
cmp
cwtl
jno
adc
sub
mov
dec
push
sbb
out
loop
out
add
ja
das
andl
mov
dec
lret
dec
ficoms
repz
pusha
sub
popf
sti
es
test
adc
dec
push
pop
pop
dec
out
testb
xchg
ds
mov
pop
mov
dec
out
dec
mov
mov
add
ljmp
xchg
outsl
shl
or
jge
dec
data16
cmpsl
insb
stos
lods
out
sbb
pusha
test
lret
inc
jmp
mov
jns
adc
mov
ret
pusha
lahf
bound
mov
leave
push
mov
sub
cmp
cmp
scas
cwtl
mov
mov
jmp
pop
fsubl
ljmp
add
sub
mov
arpl
cltd
clc
pushf
pop
aas
sarb
xchg
cli
jp
mov
dec
roll
addl
fmuls
je
sub
mov
push
outsb
xchg
cmpsb
sbb
fucomi
out
add
outsb
inc
rcrl
sbb
cli
jbe
xor
lea
aas
dec
andb
mov
inc
or
push
call
scas
das
repnz
aas
push
dec
and
dec
int
lods
cmp
mov
push
ljmp
pop
xchg
jno
xchg
fisubrs
test
fiadds
mov
and
mov
jp
icebp
popf
fisubrl
popf
fiaddl
clc
xor
jle
sbb
int
hlt
icebp
test
inc
and
inc
dec
mov
scas
pop
call
neg
sbb
pop
add
pop
test
inc
cltd
jbe
add
inc
jg
test
ljmp
outsl
push
es
mov
xchg
sahf
jmp
fdivl
aad
pop
mov
cltd
inc
addr16
loopne
outsb
push
ficoml
push
stc
mov
sbb
push
jg
dec
pop
jecxz
mov
lret
in
mov
cmpsb
ljmp
or
xchg
call
stos
aad
mov
push
mov
inc
lods
incl
jo
inc
fiadds
cli
ret
in
cli
imul
mov
or
mov
mov
icebp
mov
nop
inc
ljmp
mov
leave
mov
insb
in
sti
in
jp
fucomip
xor
sbb
mov
mov
sbb
mov
or
mov
movsb
flds
sbb
add
jne
xor
fcmovu
ss
shl
and
pushf
out
outsb
cmp
xlat
dec
addl
dec
xor
cmc
mov
push
pop
shrl
mov
add
mov
out
fwait
movsb
mov
shll
push
out
cmp
insl
in
repz
pop
xchg
add
fnstenv
xlat
aaa
push
mov
mov
jmp
push
out
dec
clc
and
cmp
in
sbb
push
int
jmp
outsb
mov
add
out
outsl
sarl
out
iret
and
sub
pop
imul
jge
mov
loope
xor
cwtl
stos
xchg
add
sub
or
jl
leave
and
xchg
into
cmp
out
mov
sub
repz
jne
dec
fildll
in
enter
into
mov
ds
xlat
dec
pop
pop
ds
pop
pop
xchg
mov
es
cmp
imul
data16
xchg
dec
mov
and
push
mul
mov
or
je
cld
fwait
in
call
cmp
jbe
push
jns
inc
cmpsl
mov
test
lea
fsub
add
jbe
loopne
ja
ret
fbstp
mov
sub
scas
inc
stos
negb
in
pop
mov
inc
jge
aam
inc
movl
fprem
mov
test
subb
test
lods
pop
in
negb
or
int
rorl
add
clc
fadds
popf
out
fisubrl
push
pop
in
pushl
dec
and
paddsw
mov
ljmp
test
leave
pop
add
iret
out
push
aas
pop
adc
clc
imul
idivl
shl
sbb
and
fldt
sub
jge
stos
out
adc
lock
pop
bound
lcall
cli
mov
loopne
popa
sub
enterw
ret
imul
pop
or
fnstenv
loop
jge
dec
hlt
cmp
xchg
mov
xchg
mov
mov
pop
imul
je
pop
gs
outsb
push
test
xor
int
push
lods
out
jl
pminsw
fiaddl
inc
mov
fildl
lock
aad
xor
out
repz
mov
lods
pop
mov
mov
push
cmp
xchg
addb
lret
fnstcw
out
add
jae
xchg
negl
dec
mov
inc
and
mov
cmp
xchg
cmp
iret
cli
push
pop
lret
add
mov
popf
and
lcall
adc
add
mov
cmp
xchg
jle
pop
mov
xor
fdiv
bound
mov
dec
pop
and
in
push
sbb
xor
and
jmp
cld
imul
rcrb
inc
fistl
test
bound
sub
mov
push
push
jge
inc
xchg
shl
push
xchg
mov
roll
dec
cmpsl
sbb
pop
inc
jmp
data16
inc
fisttpll
or
pop
lret
inc
pop
in
aas
rorl
mov
xor
fiaddl
sarl
mov
mov
rolb
xchg
cmp
jbe
cltd
bound
jecxz
pushf
fnstenv
lret
cld
mov
shrb
sub
out
ss
fwait
sub
sub
push
ret
ret
sti
push
dec
pop
mov
pop
fcomp
add
jecxz
aas
dec
mov
inc
lock
dec
add
push
mov
mov
loope
shr
addl
dec
fisttpl
jb
bound
xchg
jg
shll
test
fisubrs
mov
push
cltd
xchg
stos
mov
xchg
add
push
sbb
out
aam
sbb
out
or
xor
sbb
mov
sahf
stos
and
lret
xor
test
mov
leave
idivl
or
jl
cmc
fstpt
fwait
sbb
mov
clc
push
fwait
jne
xor
inc
pop
sbb
shlb
add
cmp
push
fwait
pop
lods
cmpsl
mov
add
rcrb
mov
in
jo
lret
aas
xchg
pop
xchg
out
jbe
xlat
out
fwait
loope
jmp
push
jae
and
dec
out
mov
fnstcw
fstps
inc
rcrl
addr16
or
movsb
cli
jge
fsubr
inc
mov
mov
push
movsl
ds
push
dec
out
cmp
bound
cli
push
loop
mov
sub
shll
pop
sbbb
jl
sarb
scas
in
outsb
pop
mov
rolb
mov
cmp
aam
repz
mov
cmp
mov
int3
pop
mov
mov
dec
fwait
inc
into
push
cmp
ds
lds
movsl
xchg
inc
xchg
mov
pop
sbb
fwait
test
fsub
out
push
into
or
imul
das
test
mov
clc
sub
inc
mov
enter
cmpl
loope
fucomip
adc
loopne
fnstcw
iret
out
addl
aaa
fstpl
ljmp
pop
dec
xchg
ljmp
jmp
lds
mov
std
mov
cmp
or
sub
mov
inc
ss
andl
or
mov
cli
lahf
shlb
aas
mov
adc
std
outsb
sbbl
ret
pop
xchg
push
fidivs
test
mov
repnz
add
inc
lahf
ret
mov
sbb
out
jl
push
inc
inc
push
cmp
testb
popf
movsb
adc
push
fwait
mov
decb
call
popf
insl
mov
jno
sarb
pop
adcl
mov
bound
ret
cmp
test
js
xchg
mov
fmuls
or
sbb
xchg
rcll
cmp
js
or
es
jmp
sbb
out
pop
adc
insb
sub
or
sub
fwait
or
jnp
add
dec
scas
push
lea
popf
pop
and
cmp
or
or
call
sti
out
mov
gs
jo
xchg
jmp
xchg
or
sub
dec
add
clc
sbb
aam
add
pop
mov
repnz
adc
lret
dec
mov
xor
arpl
cld
jl
imul
lahf
jnp
mov
mov
sbb
add
roll
scas
ret
mov
fstl
sbb
xchg
dec
pushf
ret
cs
dec
pop
inc
or
and
testl
outsl
or
call
mov
lods
rcll
xchg
dec
jle
lret
pop
iret
inc
nop
jp
inc
aaa
shlb
and
mov
stc
pop
decb
push
aam
ss
pushf
cmpsl
ret
icebp
jae
push
gs
popf
push
inc
add
mov
mov
jg
jle
push
push
and
xchg
rcl
loopne
rcrb
push
mov
xor
rcl
push
test
cltd
int3
jb
add
cmp
mov
sbb
dec
out
aas
or
adc
es
enter
xchg
pop
ljmp
in
out
lods
cmp
imul
mov
xchg
faddl
and
notl
daa
mov
sbb
loope
leave
call
lds
inc
in
repnz
fsubrp
jne
mov
mov
add
and
jmp
adc
es
sub
cltd
mov
icebp
mov
sub
mov
and
push
fcoml
shlb
jne
dec
lahf
repnz
or
data16
sbb
jg
faddl
fiaddl
inc
pop
inc
scas
fldenv
negb
mov
mov
sahf
jl
clc
mov
clc
test
push
lea
jmp
inc
lcall
nop
movsl
sbb
jle
mov
jnp
push
cmc
pushf
pushl
cmpsb
adc
test
xorl
repnz
jecxz
lret
cmp
mov
mov
and
fisubl
push
mov
int
cs
mov
inc
mov
out
mov
mov
pop
pop
rcrl
les
out
push
in
pop
mov
jp
ljmp
jne
pop
in
ss
test
inc
or
adc
ss
subl
push
mov
push
xchg
add
enter
idivb
xor
stc
mov
mov
in
jb
das
xchg
icebp
cmp
mov
rcrl
mov
xchg
daa
push
lods
mov
fchs
in
jns
fstl
neg
ja
rcrl
mov
fimull
cmpb
xor
ret
add
mov
or
sub
bound
xchg
cmp
pop
scas
daa
xchg
subl
pop
mov
lods
sub
mov
loopne
test
nop
fimuls
leave
aas
or
and
and
dec
mov
cmp
fmull
xor
test
pop
stos
lock
inc
sti
ds
xchg
movsl
es
xchg
dec
xor
sbb
cmpsb
or
and
inc
fsubl
sbb
fnstcw
jg
fisttpl
dec
and
lcall
into
mov
xchg
and
mov
inc
jb
pop
vxorps
xor
pop
sbb
cwtl
add
inc
cltd
push
cld
dec
and
not
mov
rcll
lock
ljmp
add
jle
mov
jae
addb
je
pop
jecxz
or
xchg
xor
jne
icebp
mov
dec
adc
ds
xor
daa
out
sti
pop
mov
divl
dec
cmp
sti
cmp
inc
xchg
ja
jo
adc
ror
or
clc
icebp
popf
sti
push
pop
jecxz
pushf
push
scas
in
mov
imul
pop
test
repz
pop
push
pop
adc
adc
fsubl
test
and
lahf
sbb
jo
mov
jg
fistpll
cmp
fisubs
push
out
xchg
dec
lods
xchg
adc
inc
cwtl
inc
arpl
test
leave
mov
insb
push
dec
inc
or
or
add
mov
sbb
pop
xor
outsl
jmp
shll
rorb
mov
pop
popf
sub
xor
cmp
ds
loope
sub
ds
pop
mov
js
data16
and
pop
addl
mov
mov
out
call
je
dec
aas
fimuls
ja
xorl
mov
push
push
loop
stos
push
mov
push
jge
xchg
in
xchg
fdivr
dec
or
or
fisttps
fmuls
add
cld
aaa
into
jl
decl
outsb
pop
nop
pop
fcmovbe
fildll
sbb
pause
and
add
inc
fnstsw
sti
sub
xchg
int
adc
jmp
out
and
mov
lea
fldl
xor
daa
cmpsl
push
xor
inc
lcall
inc
aas
mov
pop
jmp
cmp
loop
rolb
sbb
adc
sub
lea
xor
jb
nop
and
in
movsl
hlt
insl
das
or
push
mov
sbb
sbb
and
or
or
mov
cmp
sbbb
adcb
mov
jae
aaa
fdivl
pop
jmp
fld
xor
push
loope
decb
daa
cmp
pop
rcll
iret
lahf
aam
or
inc
fisttps
add
repnz
outsb
testl
dec
cltd
push
pop
int3
inc
push
loop
sarl
jb
pop
lret
jl
cmp
push
into
dec
jl
incl
push
pop
popf
mov
jmp
cmpsb
insl
out
out
xchg
lret
shlb
pop
scas
inc
jnp
sbb
cmp
call
aas
test
out
or
ds
push
mov
and
pop
in
mov
pop
scas
popa
ja
jg
fnstenv
jle
in
or
sub
mov
pusha
cmp
dec
subb
push
movsb
pop
and
ds
int
cmpsb
xchg
cwtl
rcrb
popf
js
stos
mov
dec
loop
test
xor
sbb
xor
adc
inc
sbb
push
addr16
and
dec
test
loop
push
andl
jb
test
test
ljmp
scas
or
pop
push
jo
jecxz,pt
sub
lock
in
and
dec
push
in
jmp
xchg
or
ficoms
cmp
imul
ret
stc
sti
lods
jle
mov
push
inc
xchg
sti
and
imul
or
je
xor
add
jle
rcr
lods
pop
jno
cmp
outsb
xor
or
jmp
add
sbb
jge
clc
fstpl
ds
test
lret
cltd
out
test
arpl
fstp
clc
xlat
push
notb
inc
sahf
jp
loopne
adcb
add
jmp
cmpsl
pop
add
loope
js
pop
pop
cwtl
clc
cmpsb
data16
aaa
loop
bnd
jno
xor
add
loop
pusha
mov
pop
mov
adc
inc
pop
clc
push
lret
mov
jne
outsb
lock
mul
mov
xchg
push
aaa
mov
jnp
js
or
mov
jecxz
fwait
mov
lcall
mov
lea
adc
xor
insb
mov
mov
mov
mov
ret
sub
loope
movsb
jnp
jne
or
enter
and
arpl
sbb
dec
pop
shlb
mov
das
dec
scas
mov
stos
out
ficompl
push
in
xchg
jnp
adc
add
fstp
btr
and
jb
mov
inc
out
mov
outsb
push
sbb
sub
loop
in
shlb
fistps
mov
sbb
xor
ja
ss
stos
sbb
mov
mov
jp
faddl
addb
mov
subl
movsb
aas
imul
cmp
int3
cmpl
inc
sub
ds
jbe
sbb
testb
xor
ja
stos
push
jno
fidivrl
into
shlb
sbb
in
xchg
imul
inc
xlat
stos
subb
xchg
fistl
pop
rolw
pop
inc
scas
pop
lret
push
sahf
fwait
hlt
sub
xorl
fsub
enter
jle
fcompl
pop
jae
sbb
pushf
fcom
push
dec
pop
xor
fcoms
adc
mov
cs
mov
cmpsl
push
push
mov
pop
mov
shr
lods
mov
push
cmp
jae
aas
pop
push
jne
imul
add
call
pop
jle
insl
xor
lods
push
das
movsb
mov
out
push
popa
fnsave
out
pop
lcall
testl
adc
test
int
addr16
sbb
ret
cmp
and
fimuls
jb
pop
sub
mov
test
dec
mov
vpshab
pop
stos
inc
ror
sbbb
sub
inc
mov
sbb
push
imull
repnz
push
pop
jge
in
outsb
and
shlb
loop
push
dec
fcoms
push
imul
shrb
int
fsubl
add
fwait
xchg
rcr
in
adc
xchg
xor
cmp
dec
or
pop
arpl
add
into
and
mov
in
push
cmc
add
add
cmc
mov
jo
je
pushf
mov
repnz
dec
push
pop
orl
lds
or
sbb
sarl
les
es
int
lret
loopne
xorl
nop
push
lcall
xchg
movb
jae
mov
les
xor
lret
outsb
sub
aaa
lds
cs
sub
test
in
nop
imul
into
mov
cmp
gs
shll
fwait
shr
cld
aas
insb
inc
or
sbb
out
mov
clc
testb
out
out
pop
lods
push
pop
mov
add
fstpl
or
cmp
pusha
jb
mov
sbb
sub
cltd
jns
jbe
outsl
adc
push
loope
mov
dec
negl
rcr
aam
push
testb
ret
ss
push
jge
add
test
out
mov
imul
dec
dec
dec
dec
ja
add
xor
mov
push
or
leave
imulb
incb
jo
jp
aas
in
mov
sub
sahf
std
mov
scas
xlat
xor
scas
inc
pop
mov
inc
add
in
bnd
mov
mov
jo
pusha
jbe
lret
push
fstp
out
pop
xor
icebp
sti
stos
ss
rclb
gs
jae
sbb
ret
pop
jae
insb
pop
addl
pop
fwait
add
cmc
inc
clc
push
aas
int
push
into
inc
rolb
cltd
mov
push
aad
xor
mov
test
push
aad
dec
and
jae
adc
sub
out
and
rol
sbb
rcrl
sbb
or
add
cmp
push
adc
ja
pop
sbb
inc
aad
repnz
add
popf
lret
cwtl
fbstp
sbb
pop
dec
daa
jle
pop
daa
mov
push
xor
test
jbe
cmp
aas
cwtl
inc
xor
out
add
jp
nop
push
mov
lods
jo
xabort
sarl
fwait
or
scas
pop
insl
jge
imul
repz
mov
lds
pushf
mov
lods
sbb
push
sti
test
mov
push
add
sbb
dec
or
dec
sub
rcl
cmp
mov
gs
inc
jmp
dec
pop
push
cmpb
sub
movsb
daa
mov
xchg
in
test
cmp
sub
mov
jp
cs
rol
movsb
stc
push
and
pop
pop
cmpsl
or
mov
enter
popa
xchg
out
fimuls
cmp
out
stos
pop
add
imul
lods
jns
cmp
stos
dec
out
mov
fsubs
or
mov
sbb
out
pop
ja
cmpsl
enter
cmp
out
into
mov
mov
add
mov
rolb
or
jne
mov
adc
cld
and
addr16
jnp
mov
jl
or
sub
mov
es
ret
pop
jmp
ljmp
fstpt
push
xor
ds
pop
dec
pop
jnp
jb
in
dec
xchg
mov
addr16
dec
stos
aaa
outsb
lahf
es
in
push
lcall
mov
fimuls
pop
mov
shll
stc
lea
fnsave
push
mov
push
ret
jp
sbb
daa
js
adc
xchg
aas
add
cltd
add
push
inc
lea
mov
mov
lret
lods
xchg
mov
sub
mov
mov
dec
push
jg
popf
push
mov
add
adc
stc
pop
repz
test
cmc
nop
gs
ret
or
jmp
xor
cmpsl
faddl
jnp
cmp
and
pop
aas
repz
ljmp
das
incb
daa
das
inc
xchg
outsl
enter
push
daa
nop
mov
push
in
mov
mov
jg
fs
push
inc
cmc
lret
lret
xor
add
dec
cmp
push
mov
in
fidivl
inc
aas
rcll
cmpsb
pop
mov
test
sbb
test
push
fsubrl
and
movsb
mov
rcrl
cmpsb
cmpsb
push
aas
outsb
or
xor
mov
adc
mov
rcr
jecxz
add
inc
jecxz
jns
adc
out
loop
cmp
xor
sbb
jle
xchg
dec
bnd
dec
adc
cmp
lret
sti
cwtl
pop
adc
scas
in
call
outsb
xor
xor
cmpsb
repnz
out
xor
mov
scas
ds
into
sbbl
and
adc
repz
mov
push
imul
jb
int3
lret
scas
inc
jp
jp
enter
dec
mov
daa
pop
rolb
push
fcomp
push
std
imull
inc
push
xor
outsl
push
fcmovu
cltd
roll
in
and
or
loope
popf
std
xchg
jl
cmpsb
push
repz
pop
push
inc
jle
cmp
cmp
jns
rclb
test
fsubr
mov
cltd
adc
mov
rolb
mov
xlat
data16
lcall
insb
test
lahf
insb
icebp
inc
cmp
sub
iret
in
mov
test
rorl
and
test
dec
test
ret
rcrl
out
sub
mov
pop
add
mov
gs
movsb
mov
xor
sbb
out
mov
xchg
cmp
lods
xor
dec
aaa
imul
mov
ret
andb
in
mov
xor
mov
cmp
icebp
enter
jns
cmp
inc
mov
fwait
pop
jno
in
nop
and
sbb
stos
aad
mov
xchg
fidivl
mov
int
je
pop
sahf
inc
sbbb
jmp
cmpsb
mov
cltd
stos
aas
cld
adc
in
push
ss
cmp
xor
and
mov
sbb
jg
into
test
into
pop
sub
push
int
dec
pop
outsl
daa
lcall
sub
push
adc
cmp
ljmp
pop
xor
jg
and
sbb
into
cmp
pop
aas
pop
aam
or
out
addr16
or
nop
sarb
pop
add
jbe
pop
maxps
push
sbb
ds
hlt
cmp
and
xor
or
mov
jmp
mov
adcb
not
mov
scas
inc
and
frndint
mov
and
mov
pop
rcr
enter
or
mov
out
mov
cmp
test
inc
addr16
push
push
pop
mov
das
clc
test
fdivrl
int3
sbb
ds
sbb
lret
push
jnp
pop
out
pop
xchg
push
test
jl
lea
or
adcb
inc
xor
sub
add
sub
incb
incl
pop
repnz
xor
sbb
inc
mov
push
imulb
mov
enter
pop
movsl
les
scas
and
push
outsb
inc
and
inc
int3
dec
in
xlat
loop
fildll
jmp
mov
push
adc
std
mov
sub
dec
inc
andb
xchg
adc
mov
cld
test
repnz
adcb
xlat
and
or
dec
or
add
or
xor
push
inc
mov
push
mov
jp
push
inc
ss
jmp
imul
fucom
fdivr
push
mov
jns
aas
xorl
fcmovu
add
and
mov
stos
into
push
xchg
repnz
shl
mov
ljmp
mov
mov
aam
icebp
push
jle
inc
jge
adc
mov
dec
les
rcr
stos
pop
mov
nop
pop
mov
fs
bound
or
gs
jle
loope
pop
aad
popf
mov
lods
scas
rclb
push
or
ret
xor
mov
dec
fnstsw
out
fwait
and
and
jge
add
leave
inc
cmp
dec
xor
xchg
ss
push
jl
and
cmp
cmpsb
cltd
xlat
sbb
xorl
fisttpll
pop
jl
push
aaa
mov
xchg
rclb
cmpsl
out
pop
test
inc
jle
xlat
pop
mov
xchg
adc
pop
add
ja
push
sbb
outsb
stos
arpl
loope
pushf
mov
jecxz
int
and
mov
scas
test
push
xor
loop
push
cli
xchg
jg
mov
lods
rcrb
addr16
xchg
push
dec
jno
xor
test
jg
icebp
add
sub
clc
push
mov
mov
jmp
pop
push
dec
mov
lcall
mov
movsb
sbb
dec
outsl
push
lock
movsl
xchg
daa
or
aaa
inc
xlat
lods
test
fists
or
test
scas
sub
mov
inc
repnz
add
push
push
aas
cmp
pop
jns
push
push
mov
repnz
mov
inc
lods
sub
pop
cmpl
mov
cwtl
push
xor
xor
sub
out
dec
jecxz
mov
sbb
push
xor
jl
cmp
jne
test
sarb
mov
push
cmpsl
inc
arpl
sbb
cs
dec
mov
inc
movsb
stos
fcmovnu
or
aas
cmp
inc
dec
xor
and
test
mov
fdivl
jne
loope,pt
das
js
push
or
mov
sub
ret
inc
and
mov
jecxz
mov
add
shlb
dec
lods
adc
fcompl
sbb
xor
dec
movsl
xor
xor
bound
push
xchg
inc
pop
adc
call
xor
pop
push
push
test
inc
fnstsw
fiadds
dec
mov
jle
dec
push
add
pushf
jle
fnstcw
xlat
in
or
fstps
fiaddl
mov
cmp
rclb
scas
xor
notl
xlat
rolb
mov
pop
enter
cmp
popf
jp
mov
add
fcmovu
ja
jbe
shlb
mov
push
shlb
testl
cmp
push
mov
jle
mov
push
pop
pop
sub
inc
sbb
pop
icebp
cmc
push
or
mov
ror
shll
push
cmp
jle
aam
or
aas
jmp
int3
in
std
popf
icebp
sbb
sbb
fisubrl
mulb
and
cmpsb
mov
xor
dec
std
movsl
stos
orb
sub
in
mov
call
inc
fmuls
sub
clc
imul
inc
ja
cmp
movsb
adc
pop
aaa
sbb
push
lea
or
mov
fnsave
dec
lds
pop
cmp
ficoms
jmp
ret
cmp
xor
shl
iret
stos
xchg
pop
out
xor
sbb
loopne
popa
out
xchg
push
out
lea
jge
nop
dec
mov
cs
ret
xchg
movl
psadbw
lods
aaa
adc
jge
loope
dec
das
cmp
je
scas
dec
lret
adc
dec
lea
je
mov
push
dec
loope
mov
ljmp
inc
mov
ss
pop
mov
inc
aaa
mov
dec
mov
xor
movl
push
cmp
push
push
jge
rcll
popf
cmp
in
or
sarb
inc
loope
sub
xlat
jns
dec
jmp
loop
in
jecxz
mov
or
or
jmp
xchg
daa
or
jb
push
and
pop
test
push
dec
dec
fmuls
movsb
or
xorl
or
rclb
jb
sbb
jns
and
xlat
lea
in
xor
adc
sbb
jns
lods
lock
push
jg
xor
dec
mov
das
jb
je
fildl
jb
lahf
add
dec
iret
pop
or
xor
adc
xor
negl
mov
push
insb
fldt
test
call
inc
loopne
out
pslld
mov
sub
xor
rclb
dec
and
loope
testl
and
loop
stos
lods
mov
mov
mov
inc
push
pop
inc
pop
push
dec
and
cmp
adc
mov
sbb
stos
icebp
cmp
adc
pushf
inc
lret
lahf
xchg
cmp
out
stc
xchg
mov
icebp
add
pop
cmp
cmc
mov
flds
aas
xchg
lods
jmp
movsl
iret
fbstp
ret
inc
into
idivb
nop
hlt
ret
inc
out
testl
jns
and
out
add
jp
pushf
push
clc
mov
inc
sub
nop
addr16
xchg
ljmp
xor
pop
stos
shr
inc
test
cmp
inc
and
ljmp
jo
sub
jmp
jb
fcmovnu
rorl
stos
inc
rcrl
jnp
lret
inc
out
stos
idivb
inc
mov
mov
sarl
mov
mov
subb
out
call
das
arpl
mov
inc
jecxz
into
inc
xlat
sub
and
out
int
lret
jne
pusha
imul
sbb
pop
movsb
jno
pop
test
pop
stos
test
sbb
in
shlb
test
stc
jg
out
inc
pop
in
sbb
dec
call
sub
out
add
lods
and
decb
nop
adc
mov
lea
fadds
push
jno
jb
add
stos
xchg
add
aam
pop
sbb
mov
add
notb
dec
call
test
cmpsb
loop
sub
push
pop
dec
jae
fistpll
push
into
js
xlat
scas
fwait
xor
repnz
pop
xchg
sahf
enter
data16
lods
jl
js
imul
insb
pop
or
add
adc
inc
mov
dec
mov
lods
pop
lea
bound
hlt
mov
popf
out
aaa
scas
les
cmpsb
cmp
cmp
dec
mov
jb
sbb
lret
mov
mov
inc
push
mov
mov
mov
dec
push
stos
data16
not
rclb
cmc
pusha
leave
int
cmpb
inc
mov
pop
mov
cmp
test
imul
pop
mov
push
in
js
pop
stos
jl
pop
mov
cmpsl
dec
mov
mov
sbb
mov
loop
and
inc
int
or
inc
ffreep
inc
popf
pop
aas
cmp
fistl
jne
add
les
mov
sub
add
sbb
lahf
in
ljmp
push
cmp
mov
enter
lret
imulb
push
jecxz
or
xchg
sti
xorb
popa
popa
ljmp
fwait
or
cli
mov
xchg
xor
nop
dec
push
or
and
fdecstp
shl
imulb
cmp
es
scas
pop
aaa
mov
adc
fstps
fsubr
mov
daa
or
push
insb
jbe
mov
arpl
ret
jmp
mov
xchg
cmp
testl
push
jo
sub
or
xchg
cbtw
outsb
add
mov
pop
xchg
cmpsl
pop
xchg
push
or
push
and
add
pop
cwtl
imul
mov
push
mov
aam
call
lcall
dec
xlat
or
mov
cwtl
arpl
xchg
loop
adc
imul
mov
mov
push
mov
mov
push
sub
jbe
ja
pop
aam
mov
aas
add
out
out
movsb
and
inc
xor
push
iret
decb
pop
dec
mov
adc
sahf
es
pop
add
pop
pavgb
test
xchg
out
dec
faddl
add
sub
add
push
sub
ficomps
in
mov
adc
xchg
int
cmp
or
fldcw
inc
ss
into
aaa
ja
or
cmc
fstp
sub
cmpsl
das
jo
push
lahf
daa
ret
sub
pop
jmp
movsb
call
xor
js
cld
sahf
daa
cmp
aaa
iret
pusha
dec
and
mov
lret
push
icebp
ret
orb
es
cmpsb
inc
stc
xor
mov
inc
pop
nop
andl
xor
mov
and
adc
pop
adc
mov
jbe
cltd
push
jge
dec
xor
dec
xor
outsl
dec
stc
lea
pushf
pop
xor
imul
leave
int3
test
inc
popa
fdivrp
push
jno
ljmp
mov
in
fstcw
ret
sahf
fcmove
lods
adc
daa
ret
xchg
xchg
std
dec
dec
aas
lods
adc
ds
lret
ret
imul
cmpsb
sub
add
divb
js
cmp
movsl
arpl
in
inc
pop
test
add
mov
test
fisubrs
jmp
repnz
ss
lods
pop
or
pop
push
test
sbb
xchg
cmp
popf
push
push
int3
arpl
xchg
outsb
xchg
loop
cmp
dec
leave
fsubr
inc
adc
subb
loopne
es
push
lahf
clc
loopne
xchg
in
xor
je
aas
push
jl
pop
cmpsb
lods
mov
aam
cld
test
sbb
pop
jbe
rclb
fildll
xor
test
push
aad
add
fstps
pop
and
in
fxch
dec
push
in
shrl
jns
sbb
out
fucomp
je
fldt
shrb
repnz
or
int3
ds
dec
repnz
fistl
clc
and
and
mov
push
dec
cs
cmpsl
inc
adc
idivl
cmp
out
das
insb
lock
inc
clc
scas
and
mov
cmpsl
fidivrl
sbbb
test
imul
jns
or
cmpsb
imul
shr
mov
xor
push
mov
jmp
loopne
cmp
je
cmpsl
xchg
xorb
lahf
jb
or
mov
add
or
fstps
sbb
incl
in
xor
test
sub
dec
repz
cmpsl
adc
stos
loop
mov
mov
bound
xchg
inc
or
jnp
aas
ljmp
outsb
ret
scas
or
cld
mov
add
cmp
shr
or
mov
pop
dec
xchg
xchg
add
inc
adc
mov
mov
mov
xor
movsbl
mov
aas
jbe
push
shlb
push
cltd
stos
xchg
sbbb
shrl
pop
mov
scas
int3
cmp
sti
in
in
ss
mov
mov
cmpsl
test
fidivl
push
inc
adc
mov
div
jbe
sub
lea
in
jne
mov
subb
les
inc
inc
inc
add
cld
repz
mov
cmp
xchg
jg
ds
mov
push
test
mov
mov
les
mov
jg
shlb
out
es
icebp
cmp
test
adc
addr16
dec
fisubs
add
mov
cwtl
mov
xchg
sbb
aad
rorb
out
mov
jae
push
lret
pop
mov
ja
in
push
sahf
or
test
pop
push
fwait
addr16
ret
repz
in
pop
out
mov
push
fucomi
sbb
rolb
inc
fidivs
ljmp
dec
mov
stos
hlt
sahf
fldt
mov
dec
nop
and
pop
enter
or
push
cmpb
out
ss
mov
out
push
cmc
les
iret
sbb
outsb
movsl
sar
cwtl
stc
or
popf
adc
leave
add
lock
mov
bound
mov
sbb
ret
sub
or
mov
sbb
neg
sbb
ret
pop
sub
sub
mov
fld1
pop
push
daa
jle
fistpll
fmuls
jmp
and
jbe
add
xlat
push
data16
sbb
inc
add
out
dec
sbb
push
orb
xchg
lods
cmc
fistpll
dec
push
mov
pop
inc
stos
mov
push
pop
hlt
sub
pop
addr16
stos
pop
sbb
popf
mov
clc
mov
popa
mov
into
push
or
mov
xchg
cs
aam
fstps
push
cli
jnp
xchg
lret
out
daa
repnz
inc
das
mov
test
loope
fcmovnu
jg
ss
lahf
mov
cwtl
and
mov
or
jp
cmp
push
nop
sub
sbb
fistps
ja
push
xchg
test
nop
adc
mov
jmp
mov
fidivs
push
stos
cs
sub
lock
xchg
stos
fistl
adc
pop
or
xor
addr16
fsubrl
outsb
int
out
jb
insb
mov
pushf
or
inc
pop
aad
daa
mov
test
jbe
xchg
hlt
ret
mov
loopne
inc
aaa
cwtl
cmp
dec
sub
out
mov
sub
fdivrs
nop
negb
xchg
dec
mov
mov
lahf
sbb
push
dec
cmc
ucomiss
out
mov
xor
idiv
or
sub
mov
pop
sbb
pop
dec
xlat
push
jne
fsubl
andl
pop
fwait
data16
js
jbe
xor
pop
jno
inc
pop
call
xchg
fists
pushf
aas
sub
sub
mov
add
inc
rorb
lret
cmpsl
icebp
mov
mov
cmc
popf
cwtl
push
xchg
mov
cld
cmp
in
int
imul
cwtl
sbb
dec
leave
stos
loope
inc
add
jl
or
and
fldenv
lea
add
lds
movsl
popf
cmpl
xchg
jnp
outsl
cmp
sub
addr16
add
sbb
pop
dec
inc
ljmp
cltd
pop
pandn
push
call
in
lcall
inc
jae
fidivl
bound
push
mov
arpl
ss
call
mov
loopne
mov
mov
fstpl
push
ja
add
repnz
jnp
adc
mov
fildll
push
rorl
sub
popf
scas
fsubl
iret
int3
arpl
stc
pop
xchg
in
jb
out
dec
dec
std
stc
ss
dec
popf
shll
cmp
lret
call
lret
subl
iret
iret
sub
inc
dec
inc
stos
in
inc
jb
and
pop
cmp
sbbl
jne
imul
jnp
fldenv
out
rcr
mov
lcall
cmc
fcmovnu
sbb
fbstp
js
sti
cmpsb
fistpl
imul
xorb
movsb
inc
sahf
icebp
notb
fnstenvs
mov
jbe
dec
call
int
imul
inc
ds
loopne
aaa
insb
and
repnz
mov
nop
lret
stc
out
in
inc
lahf
inc
fucomp
add
lods
sbbb
pop
push
out
subl
xchg
cs
push
aaa
jns
pop
repz
pushf
inc
idivl
aas
shll
inc
rolb
inc
jle
cli
push
lret
fmul
push
adc
push
adc
ss
xchg
adc
push
sub
mov
inc
cmp
sub
hlt
negb
outsl
clc
cltd
sub
mov
xor
and
ret
data16
cli
sub
movsb
cmp
and
loop
notb
push
in
ljmp
out
out
dec
mov
mov
mov
addr16
repz
ljmp
pop
or
ret
xchg
push
jmp
aam
sub
lea
pop
push
lods
jle
mov
mov
lods
clc
jl
xchg
aad
xor
gs
jne
mov
sub
inc
pop
lcall
das
mov
dec
aam
mov
lret
cmp
xchg
push
sub
add
jle
inc
pop
mov
mov
outsb
ret
mov
lds
push
repnz
pop
cwtl
cwtl
in
mov
jb
dec
notb
hlt
and
mov
mov
movsl
sbb
decl
pusha
cwtl
push
cmp
inc
xor
repz
cmp
lock
push
int
pop
in
dec
dec
dec
mov
orb
or
or
mov
push
pop
stc
and
icebp
outsl
mov
lock
mov
jae
push
into
loopne
cmp
xchg
scas
lds
scas
cli
fdivl
xchg
mov
test
xor
lods
shlb
outsb
les
divb
pop
stos
sahf
add
nop
rcrl
pushl
adcb
inc
pop
out
and
cmp
add
ret
and
jb
xchg
popf
aaa
rcr
lods
outsl
ljmp
rclb
sub
fwait
fwait
lds
andb
and
sub
das
stos
dec
cmp
xchg
adc
inc
adc
mov
jmp
cs
test
xchg
out
shl
out
cmc
lret
mov
cmp
arpl
jge
lret
and
fcomi
div
lret
mov
push
and
pop
push
in
jae
mull
ja
inc
scas
and
dec
test
jle
pop
dec
jle
xchg
inc
pop
jae
aaa
sahf
pop
sub
inc
jg
fstl
sub
add
sub
lea
cmpl
dec
inc
and
int
inc
or
repnz
jnp
rcrl
cwtl
sahf
daa
pushl
int
jg
dec
lret
pop
test
mov
cmp
adcb
out
pushl
into
mov
inc
mov
mov
jg
push
mov
scas
pop
jnp
outsb
mov
sbb
fs
or
cmp
jle
lods
std
arpl
imul
test
leave
mov
jns
repnz
data16
aas
aam
imul
inc
dec
sub
mov
ljmp
sahf
xchg
incb
jg
in
jg
cltd
out
arpl
jl
iret
roll
hlt
sbb
dec
push
shrl
and
push
je
xor
ss
inc
add
lods
xchg
cmc
test
and
or
or
fwait
mov
xchg
dec
mov
cld
nop
push
mov
cmpsl
in
mov
aas
call
cmpsl
sub
mov
cmp
dec
pushf
pop
out
sarb
and
cmp
lcall
and
jbe
xor
add
int3
mov
lods
negl
lea
xor
cmp
lret
add
testb
test
into
push
xchg
jno
xchg
fidivs
in
sbb
insl
sti
add
aaa
into
xchg
pop
iret
out
pop
xchg
lea
inc
sahf
out
mov
adc
cmp
jbe
mov
roll
adc
and
jge
inc
mov
push
in
shrb
cwtl
aaa
ljmp
repz
add
mov
std
dec
fcmovnb
mov
ret
cmc
test
jmp
fadd
das
std
or
sti
push
jge
dec
dec
lret
cmp
dec
subl
push
pop
cmpl
xchg
pop
xor
ja
es
jp
sub
xchg
xchg
jle
dec
jmp
cs
push
bndstx
in
lret
adc
loop
sub
mov
sub
mov
jne
cld
inc
lods
jecxz
xlat
mov
fwait
ja
adc
mov
and
lods
xchg
outsb
push
mov
fdiv
mov
sub
cmc
inc
xor
jge
sub
inc
andb
out
mov
sub
inc
and
push
dec
shrb
scas
loopne
mov
cmc
fmulp
push
aaa
jns
loope
xlat
or
mov
insb
inc
scas
push
and
pop
fists
repz
pop
fisubl
lcall
enter
lods
push
stc
aam
pop
cltd
lret
cmc
test
xor
sub
add
xchg
mov
shlb
mov
daa
jns
cmp
xor
lds
add
movsl
xor
jmp
bnd
addr16
cs
push
leave
pop
lock
aaa
das
inc
fildl
sub
or
shrl
clc
mov
imul
cmc
shrl
flds
dec
cmp
jl
xchg
rol
call
cwtl
incb
push
mov
imul
clc
push
lahf
test
xchg
daa
pushf
xor
popa
mov
lea
es
stos
daa
sbb
cwtl
ds
int3
inc
sbb
mov
xor
orb
data16
andb
aad
cmc
jl
aaa
mov
andl
or
push
cmp
cmpl
int3
nop
add
push
or
jg
dec
mov
outsl
scas
adcb
jnp
inc
or
sbb
and
mov
pop
or
test
sbb
inc
pop
xlat
push
adc
sbb
mov
aad
push
movsl
mov
cmp
repnz
imul
inc
xorb
and
dec
imul
sar
js
pop
dec
pusha
mov
xchg
xchg
out
xchg
dec
jnp
jecxz
adc
notl
subl
sub
xchg
cmpsb
scas
iret
lea
mov
fnstsw
mov
mov
repz
test
xor
rorb
arpl
dec
add
popf
inc
es
xlat
pop
repnz
mov
inc
orb
cmp
clc
xchg
inc
lcall
out
pop
mov
adc
sub
sbb
and
jae
shrl
xchg
inc
movsb
mov
jb
pop
lea
repnz
nop
sub
inc
mov
jno
mov
sbb
cmpsl
idivl
sub
cld
inc
adc
pop
add
mov
jle
xchg
mov
and
into
rorl
inc
jb
push
xchg
inc
xchg
mov
push
loope
stc
mulb
push
icebp
lret
data16
cld
aam
aam
pop
andl
add
xchg
mov
mov
push
xchg
sub
mov
dec
mov
gs
lds
repz
inc
test
push
mov
jl
and
cmp
fwait
mov
gs
adc
test
inc
cmp
cmp
aaa
mov
testl
push
stc
jge
and
sahf
data16
rorl
lock
dec
les
lcall
jo
push
sub
lahf
sub
int3
dec
ljmp
or
add
cld
in
cmp
xchg
rorl
cmpsl
lods
mov
lret
into
imul
mov
dec
push
bound
pop
pushf
aad
std
mov
lods
push
insl
cmp
adc
adc
and
mov
shll
adc
jns
mov
mov
or
fcoms
jp
and
sbb
call
mov
sub
mov
shll
mov
out
ds
sub
call
cmp
jecxz
es
inc
add
xchg
movb
shll
out
std
cld
mov
stc
add
push
xor
sub
cli
push
in
lods
lret
push
mov
adc
push
inc
xchg
push
scas
xchg
or
jp
and
pop
cmp
cld
pop
dec
and
lcall
adc
mov
mov
mov
cs
adc
and
add
ljmp
ljmp
cmp
dec
jl
out
test
jge
pop
popa
jge
pop
loope
out
jg
inc
jecxz
xchg
fdivl
dec
xor
fldcw
sbb
xor
sub
ret
inc
mov
js
rep
mov
fmull
stos
aad
loope
popf
add
insl
cmp
xchg
adcb
clc
pushf
hlt
pusha
mov
cmpsb
pop
popa
mov
mov
mov
cld
or
fidivs
dec
or
pushf
dec
or
and
inc
pop
xchg
jecxz
mov
or
cmp
mov
jnp
mov
inc
jecxz
std
aaa
pop
adc
loopne
lea
mov
into
jnp
push
push
dec
lcall
xchg
int
xchg
cld
dec
std
orb
mov
lahf
repnz
jmp
pop
outsl
push
fdivs
sub
jne
inc
push
add
in
cs
lahf
jl
ljmp
fmuls
fisubs
push
mov
lock
popf
mov
push
add
pop
cli
jno
dec
xchg
sub
mov
scas
stos
iret
adc
push
cmpsb
pusha
sbb
maskmovq
idivl
jbe
sbb
jmp
dec
cld
mov
fwait
xchg
loop
inc
orb
enter
lea
imul
imul
lahf
cmp
dec
inc
repz
pop
les
movsb
add
cwtl
mov
xchg
loope,pt
into
or
ficomps
cmp
test
sbb
bound
inc
inc
mov
ret
inc
adc
jb
int
scas
mov
inc
mov
dec
sbb
and
sub
idivb
aas
cli
jns
scas
adc
pop
cld
fwait
and
mov
sbb
and
rol
call
lret
mov
sub
and
fiadds
mov
andl
and
mov
aas
shrb
jg
aas
mov
jb
test
inc
xchg
roll
xchg
push
push
test
shr
inc
loopne
es
ja
push
dec
in
outsl
push
jbe
aad
pop
sbb
test
mov
xor
arpl
mov
xchg
jbe
daa
xchg
test
gs
mov
pop
daa
mov
lret
or
pop
lods
push
in
pop
sbb
stos
stos
jg
scas
mov
mov
adc
data16
repz
hlt
lods
dec
sahf
xorb
mov
and
add
sahf
sub
subl
shll
sbb
push
icebp
add
ja
dec
out
idivb
movsl
clc
inc
lods
mov
jecxz
mov
test
mov
xchg
lahf
cmp
and
dec
inc
les
mov
cmc
ja
ret
xor
sbb
add
add
test
adc
mov
mov
pop
int3
out
stos
in
in
popf
mov
push
aad
ljmp
addr16
sbb
dec
scas
mov
vpunpckhdq
pusha
dec
pop
and
jl
pop
aam
and
fisubs
xchg
sub
or
sbb
divb
mov
into
gs
add
imul
pusha
imull
fcmovu
enter
stos
cmp
sahf
testl
jae
mov
mov
out
fcomps
push
dec
aam
divb
stc
jge
sbb
xor
xor
mov
fidivrs
jne
loop
adc
jnp
cmpsl
arpl
inc
jp
hlt
dec
fidivrs
stc
jle
or
and
push
push
jge
and
and
loop
push
mov
fildll
pushf
fistps
xor
rcrb
insb
fs
ret
jl
bnd
out
cli
cmp
int
pop
je
or
repz
fdivrl
pushf
mov
xchg
mov
fsub
inc
cmp
cmpsb
mov
push
cmpsb
decl
jno
mov
cmp
sub
sbb
and
andl
aas
subl
fldln2
and
jg
outsl
cmpb
xor
sbb
ficomps
bound
pusha
ja
in
insl
xchg
jmp
loop
pop
stos
pop
adc
jo
sub
mov
ret
out
xchg
pop
mov
es
outsb
dec
xchg
sbbb
jae
lret
add
xchg
dec
scas
movsl
cmpsl
ja
mov
pushf
nop
jne
sub
bound
nop
jne
xchg
cli
pop
pop
sub
jbe
decl
cwtl
sub
inc
push
addb
iret
idiv
add
and
add
dec
ret
fwait
aad
test
mov
gs
je
xor
aad
cmp
ds
cmpsb
rcrl
xchg
xchg
sbb
je
pop
clc
loope
push
nop
nop
lahf
push
stc
insl
add
cmp
out
or
mov
sti
mov
test
add
rcrb
mov
sub
std
fnstcw
pop
mov
sbb
aad
sahf
xadd
arpl
push
mov
out
arpl
inc
jo
pop
fwait
lock
loopne
out
xor
out
xlat
shll
pop
gs
incl
cld
repz
sarl
dec
mov
or
ljmp
xchg
push
clc
or
lds
daa
dec
pop
stos
divl
into
mov
dec
xchg
jl
xor
pop
dec
jle
xor
pop
adc
xchg
incb
sbb
pop
cmpsl
cmpsl
sub
cwtl
shll
sbb
into
aas
or
ror
or
pushf
push
in
xchg
jp
out
push
inc
das
pop
sub
xlat
adc
gs
shlb
mov
dec
roll
call
inc
jne
cmp
fldcw
or
jns
mov
cmpsb
sub
or
dec
orb
push
lock
andb
inc
push
pushf
daa
cli
add
push
push
mov
icebp
lret
xor
xor
push
lret
jnp
mov
sbb
or
xor
add
scas
sub
test
in
and
or
add
mov
mov
lahf
es
ds
xchg
add
test
in
mov
push
sub
xchg
andb
shr
scas
ret
add
arpl
flds
stos
mov
mov
mov
sbb
int
jne
or
xchg
push
push
idivl
add
int3
out
push
out
or
loopne
addl
ss
sbb
dec
pop
dec
lret
lods
ljmp
mov
lret
cmp
std
ljmp
push
mov
arpl
stos
jne
iret
inc
es
mov
push
pop
ret
xor
testl
xlat
out
and
jmp
dec
imul
xor
in
or
sbb
push
jle
bound
sub
das
jl
movsl
lea
in
jecxz
fsubrl
hlt
out
fcoml
clc
and
lcall
adc
add
leave
cmp
popa
adc
and
insb
call
pop
sub
lods
pushf
dec
pop
xchg
adc
aad
xor
decb
repnz
mov
neg
in
xor
in
add
je
movsb
mov
movsl
jp
insb
orl
out
hlt
xor
lcall
out
pop
mov
and
xchg
int
jp
lret
add
ror
ds
or
mov
shl
mov
push
out
lret
pop
idivl
jb
ja
data16
mov
inc
dec
mov
and
rcl
inc
push
in
cmp
push
jbe
lret
mov
dec
or
pop
mov
shll
mov
int
aaa
mov
jns
outsl
mov
push
xbegin
add
into
stos
repnz
adc
jl
ss
and
test
pop
push
jbe
dec
and
jle
nop
scas
or
out
arpl
mov
sbb
mov
xlat
cmp
or
fsts
jb
nop
mov
cltd
xorl
iret
les
sarb
mov
mov
stc
lret
mov
mov
or
bound
pop
cs
popa
lret
mov
cmp
in
inc
cmp
pop
in
js
push
xchg
mov
test
push
lcall
das
lods
sbb
jbe
adc
subl
sbb
icebp
sbb
mov
std
or
push
fldt
pop
mull
mov
scas
mov
sub
or
lahf
fs
shrb
xor
mov
outsl
ret
mov
mov
out
test
je
dec
xor
rclb
fldlg2
push
mov
into
jbe
cmp
inc
pop
inc
sbb
pop
out
mov
ss
cltd
sub
xor
mov
shll
xlat
jecxz
mov
icebp
fld1
jl
jo
push
push
out
and
cwtl
add
adc
push
repnz
out
or
pop
pop
jecxz
mov
xor
adcb
add
cmc
sbb
sbb
cs
jns
movsb
imul
hlt
in
xchg
dec
lahf
addr16
inc
stos
push
xor
cmp
sahf
add
dec
pop
add
or
test
in
mov
push
add
add
es
scas
jl
sti
mov
ljmp
aad
popa
mov
add
or
cmp
jmp
leave
filds
dec
pop
and
push
jns
fwait
add
xchg
aam
out
sti
push
sbb
test
sbb
dec
ja
insl
insl
subl
shr
add
rcrl
scas
mov
stos
cltd
adc
jnp
pop
jg
adc
ja
js
xor
sti
push
in
neg
nop
adc
mov
aam
in
in
ret
push
in
aad
lods
enter
in
fsubrl
insb
mov
inc
imul
fcomps
cmp
cmp
or
bound
and
shll
loope
mov
pushw
cwtl
xlat
add
or
xchg
ss
incl
xchg
adc
inc
adc
repnz
push
fisubs
mov
cmp
push
mov
jle
shll
pop
adcl
lea
dec
cld
pop
xorl
idivb
adc
das
fcoms
inc
leave
mov
test
ret
xor
and
push
arpl
xchg
xchg
test
in
popf
pop
xor
inc
jnp
or
aad
fs
push
in
push
push
ja
aad
cmp
mov
add
mov
nop
cli
add
lock
movsl
stc
jnp
repz
aad
imul
int3
and
mov
shl
mov
ds
sbb
inc
sub
stos
aad
adc
mov
jl
sti
xchg
xchg
icebp
lahf
ja
loope
movsl
mov
push
cld
mov
enter
add
push
js
mov
ljmp
xor
das
add
insl
xor
adc
ljmp
mov
out
push
cmp
xchg
enter
push
aas
stos
gs
mov
and
jns
sbb
xchg
fwait
pop
lahf
and
or
adc
or
enter
out
out
add
cli
mov
or
in
stos
jge
inc
pop
iret
stos
out
scas
mov
pop
xchg
insb
mov
clc
inc
out
xor
add
jbe
aam
mul
rorb
mov
lods
insb
ret
movsl
pop
pop
insl
cmc
lock
sbb
xor
insb
in
push
out
mov
mov
je
ret
lahf
jbe
imul
lahf
jle
xchg
mov
mov
fwait
test
mov
icebp
push
lods
icebp
addl
cltd
push
stos
dec
and
mov
ficompl
mov
outsb
and
sbb
mov
lret
push
and
xlat
call
aam
xchg
mov
nop
mov
loope
lret
fmuls
sub
mov
cmc
iret
add
cli
pop
pop
pop
imul
imull
sbb
cld
jnp
pop
inc
sub
add
xor
sbb
aaa
sahf
fdivp
js
xor
cmpsl
popa
sahf
jae
std
icebp
mov
imul
fsubr
mov
xor
into
dec
fnstenv
jl
inc
je
dec
addr16
test
mov
ja
sbb
stos
jle
daa
aad
je
dec
xlat
cmpsl
xchg
cmp
repnz
xor
clc
cltd
jne
aas
and
hlt
adc
lahf
outsl
pop
ret
loop
aas
clc
push
push
lahf
xchg
sub
jl
dec
ljmp
cld
nop
xor
dec
sub
dec
add
add
jbe
dec
test
iret
loope
or
loop
fwait
xor
jb
mov
daa
js
xchg
divl
cmpsl
xchg
xlat
push
stc
add
inc
inc
jo
jl
xor
push
pop
repnz
orl
adc
stc
jle
cwtl
jnp
pop
add
adc
pop
mov
push
cmc
das
test
jmp
sub
sarl
xchg
jp
arpl
outsb
dec
das
repnz
seta
andl
cltd
js
out
mov
and
shrb
test
mov
movsb
mov
mov
int3
xchg
ret
xchg
dec
mov
adc
shll
cmp
lea
das
pop
lahf
repz
sbb
cmp
arpl
insl
jne
xchg
push
rorb
int
xor
or
fildl
divb
arpl
jmp
mov
in
arpl
out
es
lcall
and
popfw
fsubp
pop
xchg
imull
aam
fnsave
mov
lret
repnz
out
ss
jmp
dec
sbb
repnz
jo
dec
jb
mov
jge
out
loope
adc
jp
inc
ss
test
roll
fst
jg
movsl
adc
stos
decb
sub
lret
or
xchg
mov
jb
push
jmp
sub
hlt
fdivl
inc
push
hlt
sbb
inc
adc
mov
mov
shll
add
dec
and
or
jne
xor
pop
inc
pop
adc
xor
test
push
movsb
adc
in
rcl
rcrl
pop
push
das
sbb
fs
cmc
adc
dec
cwtl
mov
loop
xor
pop
dec
jae
mov
add
jo
inc
xor
adc
inc
inc
daa
adc
mov
test
int3
sub
orb
repnz
ja
mov
jnp
in
cwtl
xchg
in
fwait
xchg
arpl
fwait
jns
rorl
stos
leave
fldcw
jbe
mov
in
fsubrp
mov
in
lret
or
jbe
pop
stos
orb
lahf
daa
jb
mov
aaa
out
mov
push
sbb
roll
lret
push
inc
sub
mov
sub
sahf
ret
jmp
loopne
stos
jbe
notb
pop
mov
sub
je
jae
mov
scas
mov
xchg
cmp
mov
sub
cmpsl
aas
mov
dec
mov
rcll
cmp
test
aam
mov
xchg
in
push
sub
dec
mov
shr
arpl
clc
jecxz
popf
add
lcall
push
xchg
add
or
loopne
mov
mov
js
pop
jmp
push
leave
sbb
pop
xchg
testb
mov
cmc
stc
inc
fwait
lods
xchg
repz
or
rcl
adc
xchg
icebp
stos
xor
xchg
jbe
jle
pop
movsl
push
fimuls
mov
jp
stos
adc
rcrb
test
insb
cs
leave
je
or
xchg
lods
or
sti
inc
test
cmp
xchg
out
outsb
inc
sbb
test
sahf
into
sub
xchg
cmp
lods
imul
xchg
sbb
lds
pop
popf
or
mov
push
inc
dec
test
cmp
push
stos
out
or
pop
dec
test
fnstsw
or
mov
imul
dec
add
divl
arpl
int3
lahf
jb
cmpsb
sbb
test
out
shlb
outsb
dec
and
adc
sub
sub
jbe
or
or
cmpsb
inc
movsl
ds
mov
mov
js
push
nop
push
xor
jbe
dec
dec
xchg
and
sbb
jae
cwtl
and
mov
dec
mov
fs
xorb
enter
xor
ja
pop
inc
push
xor
lock
repz
adc
pop
sarb
xchg
aaa
mov
inc
fisubrl
jle
mov
or
xlat
and
mov
test
shll
xchg
dec
pop
mov
mov
pop
xchg
pushf
ror
add
lods
mov
xor
or
or
or
jmp
popf
std
push
ss
mov
and
pop
fbstp
pusha
lock
sar
cwtl
lds
pop
sub
test
fistl
mov
adc
mov
lahf
daa
and
mov
add
push
lods
jmp
mov
bound
pushf
mov
and
insl
sbb
add
jae
icebp
mov
imul
jge
lods
push
sbb
sarl
in
inc
hlt
mov
jbe
rcrl
inc
pop
xchg
xchg
jp
xor
xchg
int3
pop
idivb
ljmp
mov
mov
call
jg
jle
nop
push
ss
inc
int3
popf
pop
sbb
call
dec
rorl
insb
ds
inc
or
lahf
clc
sbbl
and
testb
aam
jp
andb
ss
add
loopne
mov
ja
pushf
rorb
xchg
mov
out
test
jl
jecxz
mov
mov
add
add
or
fs
add
add
lret
push
xchg
clc
fsts
xchg
jg
jb,pt
test
lds
rorb
rorb
jmp
pop
test
mov
in
inc
aas
shll
cmp
test
insl
push
sbb
shll
inc
mov
pop
js
xor
dec
inc
mov
popf
sti
or
mov
push
lods
ljmp
aas
imul
hlt
xchg
lcall
ds
call
mov
jge
std
xchg
push
jl
loope
hlt
outsl
or
ljmp
jmp
roll
stc
popa
and
test
push
pop
call
mov
xor
mov
enter
out
pop
test
lds
cmp
cmpsb
js
paddb
adc
cmpsb
leave
ja
pushf
push
idivl
sbb
or
andl
sbb
fmulp
rcrb
aas
adc
es
data16
addr16
pop
lahf
cwtl
xor
loop
sbb
lods
imul
pop
mov
xor
iret
dec
and
sti
xchg
xchg
js
cli
and
jae
dec
rol
nop
mov
cli
in
add
or
jle
dec
in
xor
jb
std
mov
sub
push
mov
or
ljmp
jne
ds
stc
xor
into
adc
cmp
inc
mov
loope
xchg
adc
cmp
push
aas
shr
fldenv
mov
cmp
adc
inc
test
sub
ljmp
push
sarb
repz
or
fdivr
push
mov
aaa
dec
cmp
xlat
push
out
pusha
add
fstpl
aam
loop
fcmove
fidivs
popf
sbb
sarl
clc
pop
out
lahf
pop
add
xchg
inc
and
popf
push
shrl
sti
inc
lcall
xchg
jl
dec
lret
jb
ret
xor
jg
aam
scas
mov
add
pop
sbb
lahf
adc
loop
lock
push
or
cmpsl
cmc
mov
fcompl
add
cmp
out
insb
pop
repnz
push
inc
inc
test
je
mov
cld
lcall
out
decl
movlps
dec
push
loope
jg
cmpb
jns
sub
jle
cmp
push
jmp
idivb
xchg
out
mov
fstpl
dec
dec
lods
test
fidivrs
cmp
mov
ret
mov
cs
out
sub
jns
es
pushf
pop
mov
arpl
pop
cmpsb
imul
mov
test
jl
aaa
hlt
or
cmp
push
push
inc
xlat
mov
ret
popf
cmpsb
sbb
in
dec
mov
add
sbb
dec
fs
jp
cmp
sub
jle
mov
inc
and
popf
pop
repz
movsl
cmp
add
mov
cld
sbb
mov
cltd
xchg
lds
test
loope
inc
bound
push
inc
insb
pushf
cmp
mov
push
fildl
dec
mov
xchg
cmp
xor
imul
clc
lea
or
xor
jecxz
iret
testb
xor
popf
enter
test
mov
jp
frstor
sub
fistl
mov
outsb
scas
aas
outsl
ja
lret
add
inc
mov
xor
loopne
sub
lret
neg
sub
sub
dec
dec
xchg
aaa
xchg
cmp
jo
mov
out
mov
and
xor
and
ds
and
adc
push
cltd
aaa
xchg
sbb
xor
sti
pop
rcrb
jb
enter
iret
xor
and
lods
and
or
dec
cwtl
jne
aaa
divb
stos
sarb
xorb
sti
stos
fidivrs
and
inc
cmpsb
aad
mov
xor
subl
std
stc
shl
enter
inc
sbb
inc
out
test
popf
pop
adc
ja
das
sarb
dec
and
out
lret
lods
push
add
fnstcw
ja
sub
and
and
inc
outsl
sub
lahf
std
cmp
push
call
rcl
shll
scas
mov
cli
jnp
or
and
ss
lcall
add
lea
scas
repz
push
pop
xor
or
xchg
lahf
stos
jmp
cwtl
fbld
xchg
mov
popf
ds
push
cwtl
jae
mov
std
je
sub
loop
cmpsb
or
push
cld
je
sbb
test
faddl
lcall
pop
cmp
pop
mov
push
cmp
jb
push
les
insl
cmp
cwtl
inc
fwait
loopne
inc
push
repz
incb
mov
jns
mov
fmul
adc
cmc
int3
aam
xor
dec
lret
xor
sbb
dec
rcll
cli
call
dec
mov
stos
ret
cmc
lods
xchg
push
inc
lods
jnp
test
js
xchg
add
mov
jmp
mov
and
push
xchg
fmul
jl
jecxz
ret
push
cli
out
movsb
loopne,pn
xchg
lods
mov
clc
jnp
mov
xchg
imul
sbb
shlb
or
pop
out
mov
iret
jb
aam
lock
das
add
mov
in
mov
fsubrs
cltd
jnp
imul
adc
mulb
xor
cmp
mov
mov
in
xor
les
adc
clc
inc
push
adc
add
push
lock
scas
cmp
adc
inc
push
cld
jg
shl
aam
adc
sbb
scas
sbb
xor
xor
jns
leave
dec
cli
fistpll
loope
scas
mov
jb
mov
mov
xchg
jnp
lahf
repnz
loope
ffreep
adc
inc
adc
xchg
fists
cmp
test
xlat
int3
or
jno
dec
fnstenv
psraw
stos
push
sub
xlat
pop
mov
mov
adcl
mov
notl
push
ret
add
outsb
lret
mov
jb
add
dec
mov
mov
mov
lret
ljmp
std
pop
mov
xchg
imul
rorl
sub
adc
adc
pop
jecxz
xchg
inc
inc
lock
mov
jle
sub
dec
je
in
rcrb
xor
xchg
or
sbb
push
xor
bound
jns
test
pushf
mov
adcb
pop
out
xchg
test
out
and
mov
mov
dec
lods
popf
movsb
adc
lret
shlb
das
jo
add
hlt
and
xchg
push
pop
fwait
int3
loope
xchg
xchg
cmp
adc
ret
xor
lods
aaa
call
je
push
nop
push
gs
mov
sub
mov
push
je
push
mov
fisttps
mov
mov
repz
mov
test
and
pushf
xor
jl
shll
or
fstl
loope
pop
sub
ds
inc
fwait
mov
int
fucom
stos
dec
stos
incb
pop
xchg
cmp
insl
or
int
sar
loop
hlt
cmp
fwait
xchg
mov
or
ret
iret
fildll
dec
ss
jno
rolb
idivb
sarb
idiv
push
inc
xor
fistpl
std
jae
das
out
sub
imul
sub
inc
cmp
test
jae
jb
ljmp
cmp
inc
mov
push
mov
jae
in
scas
pushf
or
fsubs
imul
add
incb
xor
jmp
cwtl
add
leave
mov
loop
imul
iret
and
addr16
adc
jne
cmp
pop
fcomps
xor
lret
mov
js
lods
cmp
push
and
cs
pop
pop
jmp
ret
adc
inc
xchg
inc
cmp
insb
movsl
int
pop
ret
flds
insl
leave
sub
add
or
add
add
lock
fcoms
add
cmp
int3
pushf
dec
scas
movsl
cltd
out
les
add
ds
jg
aam
dec
ret
sti
sub
sarb
ret
pop
push
int
orb
repnz
mov
and
inc
cmp
pop
shll
cmpsl
enter
lods
sub
pusha
fwait
clc
stos
jne
cli
lods
jg
pop
cmp
xchg
fstl
into
mov
rorb
cmpsb
adc
mov
aam
enter
rep
adc
and
mov
push
or
cs
repnz
cmpsl
lret
int
rcr
enter
nop
movsl
rorb
leave
inc
movsl
xchg
push
mov
mov
adc
lret
xchg
sti
ss
xchg
ja
clc
adcb
rorb
mov
cmpsb
inc
pop
out
loope
jmp
sbb
lret
ficomps
sbb
cmp
push
test
call
cltd
lock
push
push
xor
push
stc
xor
cmp
loope
mov
mov
or
pop
mov
adc
add
cmpl
sbb
push
push
push
sbb
xchg
adc
fidivs
ds
fs
and
adc
xor
hlt
dec
out
sub
xchg
add
mov
sub
fsts
test
ss
outsl
inc
dec
pop
add
pop
jmp
push
in
add
fwait
pop
pushf
inc
into
xchg
test
mov
jl
lock
aad
test
addr16
stos
xlat
mov
or
push
cmp
loop
fsubs
popa
jl
mov
mov
jno
mov
js
jnp
and
inc
shl
push
adc
sub
fistpll
pusha
dec
into
fisubl
and
add
stc
mov
mov
mov
enter
jmp
js
mov
cltd
mov
inc
mov
mov
xchg
insl
rcl
rclb
mov
aaa
mov
sub
add
push
idiv
xcrypt-ecb
cmpsl
iret
leave
test
dec
or
outsb
xchg
xor
mov
scas
fimuls
int
mov
test
lahf
jge
loope
lock
int
cli
mov
lret
sbb
loope
cli
add
xchg
divb
jmp
mov
jg
or
aas
rcl
mov
fwait
push
fldt
add
mov
push
daa
fmull
add
loopne
ret
ss
movsb
orb
and
and
jbe
sbb
mov
sahf
xor
mov
insl
dec
inc
hlt
or
sbb
lods
or
sti
sbbl
fldl
outsl
inc
push
xor
adc
mov
out
dec
add
cli
iret
fnsave
pop
enter
push
idivb
add
inc
sti
dec
inc
jg
out
out
repz
popa
dec
leave
mov
cltd
xchg
mov
mov
jl
popf
xor
out
test
mov
scas
xor
gs
es
sbb
cld
dec
lea
or
hlt
fdivrl
adc
ss
outsl
imul
jg
jbe
shll
dec
push
push
adcb
sbb
clc
scas
rorb
xchg
xchg
xor
push
cld
xchg
hlt
or
add
add
add
nop
mov
pop
fistpll
or
or
xchg
sbb
inc
orb
jg
dec
or
add
fs
cltd
pushf
fs
jmp
dec
fimuls
ret
fnstsw
pop
cs
push
xor
jge
sahf
sbb
pop
stc
rorl
andb
leave
xchg
inc
lcall
mov
sub
xchg
loope
dec
subl
sbbb
in
insl
pop
movsb
xor
jecxz
xchg
mov
xchg
push
xor
test
cwtl
push
nop
jne
cs
or
sbbb
pushf
ljmp
jg
shrl
pop
ja
mov
call
shr
mov
icebp
sub
xchg
push
sub
cmpsl
sar
mov
popf
push
je
mov
lret
adc
or
fildll
mov
push
dec
into
enter
rdmsr
jne
or
loope
xchg
test
nop
xchg
push
xlat
jp
inc
je
cmp
add
cmp
pop
movsb
bound
shlb
loope
in
sahf
imul
jge
jns
dec
fdivs
mov
out
aam
push
cli
jle
jns
adc
je
aad
stc
ja
add
push
add
je
xor
call
sub
pop
loopne
cli
loopne
pop
xor
aad
pusha
iret
add
pop
add
sub
push
pop
aad
das
fs
std
out
ret
movsb
pop
sbb
aam
adc
aaa
lds
xor
nop
js
jnp
dec
dec
test
cli
mov
jo
addr16
inc
dec
xchg
int
pop
add
gs
jne
push
negb
lret
test
leave
incl
mov
add
and
aam
into
jl
pop
or
dec
dec
cwtl
dec
shl
sub
sar
sub
pop
or
sti
lcall
inc
pop
inc
pop
mov
xchg
gs
ficoms
rorb
sub
aas
jae
xchg
xlat
xchg
filds
mov
add
lret
lea
cwtl
cmpsl
xchg
inc
cmc
adc
mov
test
cmp
imul
pusha
adc
and
shr
xchg
fsubr
sub
std
dec
sahf
data16
add
push
xor
cmp
aas
dec
shlb
ds
insb
add
out
dec
out
jle
test
insb
lea
lret
xchg
daa
dec
or
jp
pop
repnz
xchg
loopne
push
dec
mov
clc
lock
jle
repz
repz
inc
cltd
inc
inc
jbe
xchg
mov
xchg
or
mov
std
rcrl
imul
je
out
inc
mov
add
push
leave
clc
jge
mov
sbb
call
pop
mov
ss
pop
xchg
lcall
jno
cmp
fistps
sub
fmul
jge
loope
push
cmp
pushf
mov
sub
or
orb
jae
lds
cmpsb
mov
push
jbe
mov
sub
xchg
cmp
cmpsb
aaa
or
fcomip
ret
and
aam
test
ffree
testl
aaa
and
mov
xor
push
das
jge
xchg
adc
pop
sbb
cmp
xor
and
sti
mov
adc
pop
fwait
lret
xchg
add
daa
or
imul
js
jmp
dec
dec
lods
clc
push
mov
lods
lock
es
mov
nop
insl
sbb
or
inc
jp
cwtl
imul
ljmp
movsl
mov
movsl
mov
dec
jbe
xchg
jp
mov
ficompl
xchg
insl
and
loope
push
test
jae
jae
cwtl
mov
xor
xchg
lcall
jbe
iret
movl
pop
movsl
outsb
xlat
add
or
sub
lret
adc
mov
xchg
in
mov
loopne
mov
xchg
sahf
jp
fstl
dec
cmp
or
test
lret
mov
int3
mov
mov
stos
xchg
sub
enter
fldln2
test
sbb
addr16
xchg
ss
imul
sub
xor
popa
add
fidivrl
adc
mov
subb
rcrb
movsb
sbb
pop
push
fmulp
dec
stc
in
cwtl
xor
orl
repnz
sahf
jb
sarb
jae
add
outsb
jne
jecxz
xor
fsubl
mov
sub
and
add
rorb
jno
pop
ds
pop
cmp
int
sbb
fldt
push
sub
hlt
call
dec
cmp
and
mov
inc
mov
call
nop
lcall
jl
loopne
inc
sub
shl
lret
or
rcrl
inc
test
test
andl
incb
push
lea
addb
lea
mov
xor
inc
out
push
dec
mov
and
and
stc
mov
xchg
dec
cmp
or
jl
jle
cmc
int
cwtl
mov
push
sub
cmp
jmp
out
pop
pop
add
test
das
mov
cmc
jns
push
outsb
fnstsw
add
inc
pop
sub
mov
ret
sbb
mov
ret
fisubrs
lret
sti
stc
int
xlat
add
movl
loop
lcall
add
cmp
icebp
fcoms
mov
push
aaa
cmc
cld
cbtw
imul
xchg
add
and
cs
add
dec
push
rcll
es
mov
les
inc
imul
repz
lods
inc
push
jns
pop
setb
mov
inc
xchg
imul
xlat
pusha
cli
inc
aad
imul
pop
push
add
test
cs
lock
sbb
dec
fstpt
pop
dec
dec
and
iret
adc
push
aas
test
adc
inc
outsl
out
outsb
cli
xchg
mov
or
pop
or
jns
cltd
sub
shrb
ljmp
inc
push
inc
lret
sub
lods
adc
cwtl
das
mov
inc
stc
adcb
pusha
mov
adcl
cmp
cmp
frstor
sbb
mov
movsb
int
cmc
jno
jge
xchg
push
and
or
jg
addr16
fcomps
test
and
adc
lds
in
in
mov
loope
sahf
lcall
cmp
inc
rcrl
and
pop
fnstenv
adc
sbb
jle
fistpll
cmpsb
pop
xor
shll
hlt
xchg
adc
pop
or
mov
mov
cwtl
outsb
push
add
pop
out
dec
aam
popa
pop
mov
xchg
in
and
pop
repz
mov
pop
mov
repz
mov
iret
xchg
sbb
lcall
xchg
scas
lods
mov
pop
jle
add
mov
adc
cmp
push
sbb
sbb
adc
sbb
inc
js
sub
ja
ja
pop
nop
imul
or
mov
sub
cmp
cmpl
xor
jb
push
popa
test
mov
xchg
jae
f2xm1
jle
add
sbb
push
ja
fincstp
int
roll
xor
insl
dec
jae
daa
mov
dec
shlb
out
int3
dec
dec
hlt
lcall
stos
cmp
mov
rcr
mov
push
ljmp
pusha
jnp
cmp
les
or
loope
mov
cmp
push
int3
lret
lods
cld
loopne
mov
out
lods
mov
lret
loop
or
mov
lods
push
into
rcrb
push
nopl
jnp
inc
aam
xchg
adc
xchg
nop
and
xor
or
mov
push
push
cli
and
add
cmp
pop
push
aad
lock
inc
test
inc
loope
insb
xchg
jg
inc
xor
jbe
lret
sbb
jecxz
fs
out
mov
add
xor
adc
mov
or
je
add
mov
es
out
fisubrl
in
rcrb
xchg
pop
pop
push
adc
fwait
nop
cs
inc
cmp
filds
jb
mov
xor
andb
push
mov
sbb
clc
xchg
mov
adc
jle
add
cld
fdivrl
xchg
sti
cmp
pop
movsb
mov
add
push
ret
mov
xor
negb
pop
shll
out
adc
movsl
scas
gs
out
pop
dec
sbb
xchg
and
outsl
inc
sbb
fwait
mov
aaa
push
sub
or
push
xchg
sub
or
pop
rcrl
add
les
and
inc
mov
sahf
adc
add
push
aam
mov
xchg
mov
jnp
stos
clc
cwtl
adc
adc
sbb
stos
faddl
push
movsbl
jp
sti
frstor
dec
pop
add
dec
inc
mov
xchg
jle
cmp
frstor
clc
cmp
clc
lds
pop
icebp
lret
in
std
testb
adc
cmpsl
std
xor
jle
mov
cltd
jmp
push
push
js
test
fisubrs
inc
je
sbb
jnp
fmul
call
cld
dec
jge
xor
xor
divl
lret
sub
clc
cs
xor
xor
xchg
mov
add
sub
lret
push
scas
icebp
jb
xchg
cmp
repz
clc
enter
push
jae
jno
ficoml
hlt
pop
push
lret
inc
out
leave
lock
cli
ret
movsl
nop
lods
lret
or
push
test
nop
push
adc
xor
cmc
push
lods
cmpsb
loope
lahf
xor
enter
pop
jno
jb
inc
sti
jle
and
push
lahf
scas
dec
cwtl
jecxz
push
test
push
dec
add
loope
inc
outsl
adc
cld
xchg
arpl
mov
push
clc
jne
sbb
imul
or
adc
pop
or
xor
cmp
not
rorl
push
adc
and
in
mov
mov
or
decb
dec
arpl
mov
lahf
jecxz
ret
jae
jl
jle
int3
mov
into
or
rcrl
and
stos
inc
outsb
cld
and
dec
test
pop
sub
xchg
iret
and
repnz
cli
inc
sub
adc
xchg
clc
out
push
jecxz
jnp
jle
jmp
icebp
movsb
imul
mov
and
data16
mov
jo
sub
cmp
mov
mov
mov
call
sar
cmpsb
sub
xlat
sbb
jo
loopne
inc
icebp
push
cmc
cli
mov
cltd
sub
cmp
dec
ss
imull
xor
and
mov
pop
stos
rorl
out
shlb
mov
mov
loop
push
and
leave
cld
push
lahf
aam
dec
js
and
inc
sbb
fidivrl
clc
add
es
jge
mov
loopne
lock
jmp
pop
add
jmp
cwtl
mov
and
sbb
ljmp
ds
cmp
in
sub
add
ret
sub
jecxz
dec
jl
jnp
adc
imul
sub
leave
pop
or
jl,pn
shll
push
adcl
int
xchg
aam
ss
mov
xchg
push
push
gs
sbb
dec
fnsave
inc
int
fstps
and
jb
jp
out
jecxz
fwait
pop
imul
repz
inc
in
sub
sub
jne
and
dec
inc
outsb
xor
shl
insl
xlat
leave
jae
shl
mov
mov
addr16
call
add
sub
jne
ret
and
mov
test
inc
aaa
dec
jg
shrl
iret
and
and
enter
stc
fisttps
sub
pop
mov
adcb
inc
jge
in
mov
or
sbb
cmp
adc
push
push
xor
ja
and
sbbl
dec
or
pop
in
loopne
inc
lea
inc
gs
sbb
fwait
icebp
sbb
adc
hlt
cmovs
cmpl
outsb
inc
xchg
and
movl
jnp
mov
stos
ror
cmp
add
and
aas
sub
xchg
cmp
push
xchg
adc
movsl
outsl
sti
stos
mov
repz
adc
insb
push
push
cmp
dec
cltd
stos
cmp
sbb
jmp
cwtl
jnp
hlt
push
outsl
cmpsl
cmp
loope
scas
sahf
sbb
pop
fildl
mov
inc
lahf
cmp
orb
stc
es
pop
or
shll
pusha
or
add
cli
push
pop
rcrb
xchg
cmp
sbb
mov
jmp
mov
pop
addl
shrl
outsl
inc
out
adc
inc
test
cmp
lock
add
mov
add
cli
push
inc
rorb
xchg
dec
add
cmp
cmp
sbb
adc
sahf
addr16
xchg
push
cmp
jp
lock
pop
sbb
pushf
repz
in
mov
sbb
mov
jmp
insl
imull
and
xchg
ds
roll
stos
dec
fnstcw
hlt
ljmp
nop
jmp
scas
sub
rol
test
cmp
sbb
aaa
push
xor
shlb
stos
cli
pushf
std
je
push
dec
push
add
jecxz
test
mov
nop
subl
mov
mov
hlt
inc
sbb
pushf
daa
stc
inc
imul
shrb
gs
xchg
lock
inc
in
push
inc
out
pop
xor
mov
in
adc
inc
cmp
lret
in
mov
daa
mov
push
add
dec
push
out
rcl
dec
ss
es
icebp
adc
sbb
pushf
mov
push
push
icebp
and
pop
aas
mov
pop
fs
or
andb
lds
cltd
orb
pop
cwtl
push
cmp
fsubr
fmulp
mov
call
das
out
adc
inc
dec
ja
setbe
add
mov
jnp
sub
mov
xchg
js
lock
ret
inc
push
add
lret
incb
adc
lock
lret
les
dec
xchg
daa
int3
xor
inc
pushf
in
mov
into
mov
in
rcr
add
add
push
jo
jmp
jecxz
bound
push
mov
aaa
and
pop
insb
inc
mov
das
jnp
les
xor
pop
sub
pop
add
sbbl
outsb
or
pop
iret
dec
mov
adc
rcrb
ret
dec
jnp
lcall
push
scas
sub
dec
test
loope
out
shl
dec
into
add
xchg
dec
mov
mov
cwtl
daa
mov
in
flds
mov
mov
rcl
xchg
pop
les
fimuls
cwtl
fimull
aam
out
sbb
xlat
loope
sarl
jg
or
fisttps
or
pop
sbb
or
loope
mov
enter
mov
and
ror
jg
or
mov
sub
adc
xor
ficoml
xchg
jmp
rorb
fcomi
push
mov
out
rcrl
insb
loopne
out
jo
lret
loopne
mov
lock
xchg
push
popa
int3
or
mov
push
jge
xchg
sub
clc
in
add
movsl
out
sbb
mov
add
dec
leave
clc
jp
sbb
test
dec
andb
pop
cli
dec
mov
cs
incb
cmp
arpl
and
cltd
jge
fisubs
nop
dec
out
mov
bswap
scas
jg
mov
add
jge
add
cli
lret
cmp
stc
cmp
aas
pop
ds
pop
test
mov
pop
aad
cmp
cld
inc
pop
and
jg
das
ror
mov
lcall
xchg
aaa
add
fisttpl
pushf
sbb
test
lds
out
xor
fisttpl
or
push
jbe
rcrl
dec
adc
xchg
fcoml
push
lock
stos
insb
cmpsl
ret
and
cwtl
int
shrb
sahf
movsl
xor
adc
adc
fsubrs
shr
int3
insb
dec
mov
pop
push
aam
mov
mov
mov
mov
mov
and
cmp
xor
xchg
int3
into
stos
push
cli
adc
pop
mov
or
outsb
jg
cmp
idivl
xchg
outsl
jmp
inc
cs
sbb
mov
jge
push
ljmp
fcmovb
mov
fwait
int3
loopne
push
dec
or
in
pop
or
cmp
sbb
sbb
xchg
loopne
or
mov
sbb
mov
repz
cli
pop
rcl
pop
out
push
push
dec
xchg
dec
mov
add
lret
mov
movsl
push
into
ret
mov
jp
xchg
popf
popl
cmp
inc
mov
sbb
mov
and
call
and
mov
jp
rorl
dec
arpl
inc
jge
sub
push
jle
pushl
cmp
push
bound
int
jb
mov
insb
ljmp
jns
sub
mov
outsl
negb
mov
push
outsb
iret
mov
sub
sahf
and
jecxz
or
bnd
shll
cmpsl
xlat
loope
std
movb
dec
iret
outsb
push
sti
inc
dec
push
jno
dec
pop
rcll
jle
cwtl
sarl
or
sarb
cli
pop
icebp
cmpsb
scas
sbb
or
outsl
sbb
aaa
push
xchg
lahf
addb
icebp
add
sbb
sarb
add
xchg
pop
sbb
pushf
insb
ficoms
sar
rol
cwtl
jae
inc
popa
stos
dec
ljmp
mov
outsb
inc
cwtl
jle
int3
push
push
adc
sahf
jle
popa
pop
test
pop
add
add
dec
adc
movsl
sub
lea
pop
add
inc
shll
iret
xor
and
jb
jmp
in
push
ljmp
js
mov
adc
stc
push
jp
scas
loop
jmp
jnp
mov
jns
xchg
sbb
dec
adc
icebp
mov
sti
jle
popa
pop
jle
int3
mov
sbb
inc
pop
sub
andb
xchg
lds
pop
addl
outsb
add
mov
mov
dec
and
movb
pop
mov
or
pop
popf
loop
movsl
inc
xchg
fdivrp
and
sbb
pop
or
jmp
mov
inc
xor
xlat
mov
in
es
ret
loop
stos
pop
addl
dec
aaa
mov
pushl
imul
cwtl
enter
push
jp
cli
adc
mov
jge
cld
pushf
data16
jbe
xchg
nop
mov
loop
dec
push
dec
je
sub
mov
jecxz
push
lods
aas
dec
push
or
xchg
mov
push
fstps
out
mov
icebp
lret
fisttpl
outsb
add
incb
pop
adc
adc
dec
cmpsb
push
jp
cmp
xchg
inc
ret
movsb
inc
mov
lea
test
pop
dec
ds
lea
adcb
fldz
test
movsb
gs
mov
inc
mov
dec
ja
inc
test
xchg
jnp
daa
sbb
push
outsl
or
mov
mov
jne
and
sti
add
adcb
jle
mov
push
stc
icebp
mov
mov
ljmp
cmp
jle
neg
mov
push
mov
mov
loope
xchg
sub
outsl
ds
or
pop
fsubrl
ret
fst
test
dec
test
push
xor
mov
sbb
push
sbb
lret
aam
jp
inc
lret
lock
or
sub
sbb
loop
cmp
cmpsl
jecxz
mov
arpl
sbb
xchg
sub
es
cli
outsb
fildll
mov
pcmpeqb
mov
push
dec
lahf
xchg
notb
sarb
sarl
icebp
ds
fdivr
jp
jle
fimuls
mov
push
loop
inc
sbb
mov
jb
mov
add
mov
add
sub
cmpsb
pushf
xchg
dec
push
test
ja
rolb
icebp
mov
adc
fsubr
pop
push
xchg
daa
loop
cmpsb
add
cmp
sub
add
mov
dec
mov
add
and
sahf
inc
inc
sub
dec
aas
add
iret
xor
rorb
and
nop
out
sub
movsb
lcall
or
cmpsl
lock
inc
sbb
aaa
xor
imul
and
sbb
mov
dec
adc
lods
daa
push
pop
or
int3
adc
xchg
dec
arpl
adc
add
cmp
mov
outsl
enter
xlat
cmp
out
loope
xchg
xor
xchg
repnz
mov
mov
cmpsl
es
cmp
mov
test
test
push
mov
pop
dec
sub
in
adc
cmpsb
sub
or
lds
lea
jle
stos
lret
mov
add
adc
adc
mov
hlt
lds
xchg
outsb
pop
or
scas
adc
xor
sub
je
addr16
lock
imul
dec
sbb
out
cmpsb
xor
xlat
add
bnd
mov
out
fisttps
div
mov
sbb
adc
mov
fcmovbe
mov
push
out
in
inc
stos
push
push
cmp
cmp
rcrl
jbe
sub
out
mov
fwait
xor
fwait
sub
test
movsl
loopne
pop
push
cld
outsb
mov
outsl
fucomip
mov
pop
fistpll
xor
out
loop
push
dec
lret
ljmp
orb
ds
or
jge
aam
xchg
and
dec
mov
dec
aaa
mov
mov
dec
add
sub
sub
cmpsw
stos
popa
xorb
daa
xchg
stos
scas
ja
add
data16
fsubrs
fdivl
add
jo
fstps
call
aad
test
cmpb
loope
ret
je
pop
stos
or
fisubs
push
sar
pop
xchg
xor
push
stos
mov
dec
adc
xchg
stc
add
xor
in
and
xor
lods
fistps
das
xor
add
in
mov
lret
nop
mov
ja
idivb
pop
mov
xor
js
jae
stc
cs
cmpsl
mov
test
xchg
nop
sti
out
sarb
ret
lret
in
adc
jmp
xchg
jle
inc
dec
pushf
xchg
sti
movsl
das
sti
out
xchg
mov
pop
icebp
in
push
dec
sbbl
test
sbb
cmc
push
mov
and
aaa
xchg
sub
js
orl
fmul
jmp
sub
add
je
mov
xlat
or
call
test
add
movsb
dec
mov
les
mov
lret
in
lret
sahf
mov
test
pop
nop
pop
out
sahf
xor
dec
stos
jg
aam
push
ljmp
dec
cmp
inc
push
pop
lret
push
imul
mov
scas
cmp
aad
in
out
mov
xor
and
adc
sbb
push
cmp
dec
stos
aaa
push
int3
lods
pop
loope
xchg
cmp
shlb
mov
stos
fwait
xchg
and
or
adc
xchg
shll
cmp
lcall
cli
jle
arpl
mov
sub
mov
and
data16
ret
cmc
pop
add
xor
pushl
in
jnp
xor
rolb
mov
popf
call
stos
aaa
jnp
adcb
dec
jp
cli
xchg
sti
movsl
jecxz
cld
js
les
ret
push
mov
push
add
cltd
xchg
fwait
push
in
jmp
and
dec
stos
fldcw
lret
mov
mov
jbe
sarb
daa
movsl
or
push
fdivrl
pop
sub
outsl
lcall
incl
aaa
clc
int3
fisubl
cwtl
push
bound
shll
mov
add
fbstp
xchg
cmp
insb
xchg
dec
dec
cltd
mov
loope
mov
movsl
push
sti
mov
mov
negb
add
arpl
negb
pop
jae
jl
pop
out
jge
jb
and
popa
imul
mov
lret
mov
xor
repnz
cmp
dec
xlat
jo
call
push
nop
cmpsl
mov
mov
mov
bound
cltd
inc
adc
cmpsl
cmp
mov
test
push
jp
pop
xchg
out
cmpsl
stos
mov
sub
push
out
cld
xchg
lret
nop
dec
inc
inc
icebp
cld
lret
inc
repnz
sbb
adc
pop
xchg
xor
test
jae
pusha
mov
cmpsb
xchg
aad
out
pop
fadds
sbb
and
jae
dec
xchg
cmpsl
or
lahf
shrl
arpl
shrb
js
mov
pop
sub
scas
sahf
inc
dec
data16
imul
repz
xor
out
pusha
clc
vmovlhps
cmpsl
mov
sti
movsl
repz
pop
popa
aam
add
jmp
fnstenv
es
imulb
lock
cmp
cltd
pop
or
fistpl
dec
lret
xor
jnp
mov
and
mov
inc
ret
inc
stos
rclb
lret
jecxz
mov
adc
push
push
roll
nop
sbb
loopne
aas
xorb
lret
and
stc
dec
std
cltd
pop
push
bound
sti
xor
sarb
cmpl
rcr
lret
stos
or
sbb
mov
stos
dec
ret
sub
in
add
xlat
out
fdivrs
mov
mov
jecxz
xchg
inc
lret
inc
push
addr16
lods
cltd
fildll
scas
mov
mov
cmpsb
test
xchg
aaa
cmpsl
cmp
push
inc
inc
lds
gs
jecxz
out
in
xor
dec
cmpsb
or
add
out
jmp
test
xchg
fmull
jbe
jle
mov
push
cmc
stos
ljmp
cmpsl
jmp
fsubrl
shl
loope
ljmp
cmpb
mov
adc
inc
js
lock
push
mov
push
insl
in
scas
sahf
or
push
jmp
inc
mov
cmp
cwtl
fmulp
inc
sbb
or
jnp
mov
sti
enter
ja
or
popa
stos
bound
movsl
mov
inc
xchg
mov
mov
inc
jo
inc
outsb
add
jle
out
xchg
cmp
mov
cmp
lahf
inc
pop
mov
and
movl
out
out
loopne
lods
and
jne
lret
das
sahf
cltd
xchg
or
mov
cmpsl
aas
push
shrb
sub
std
das
shrl
pushf
lret
aam
or
cmpsb
push
inc
sbb
cmp
cltd
fwait
into
cwtl
mov
jbe
xchg
jmp
addl
stc
or
lds
mov
bound
push
inc
test
insl
push
mov
loopne
rclb
lcall
xorb
shlb
call
pusha
in
mov
sub
pop
test
js
jle
cmpsw
mov
sahf
pop
cmpsb
mov
adc
sar
in
cltd
jg
cmp
aas
add
push
jg
fcomps
cmpsl
inc
imul
push
cmpsl
push
or
addr16
add
test
sar
lret
lods
movsl
jge
rorb
out
mov
mov
inc
rclb
test
mov
or
push
xchg
roll
push
ret
ret
into
ja
fcmovu
loope
jnp
jnp
inc
adc
lods
xchg
push
sarl
dec
add
xchg
add
pop
cmpsl
mov
add
mov
aam
sub
xlat
lea
xchg
jae
shl
popa
dec
jno
es
add
xchg
pop
repnz
push
push
jmp
dec
mov
pop
mov
dec
pop
add
decb
lods
sbb
jmp
jecxz
clc
fistpll
or
add
add
push
push
inc
inc
jne
inc
dec
sub
jae
test
jmp
push
sub
cltd
cli
mov
pop
dec
mov
in
scas
sahf
fdivl
mov
adc
push
add
dec
jl
xchg
scas
ja
jo
cmpsl
cmp
int
aam
inc
dec
arpl
xor
xor
sub
mov
xchg
in
mov
daa
imul
aas
cmp
cwtl
bound
test
fistpll
jmp
repnz
inc
outsl
aaa
fwait
mov
push
jo
movsb
out
or
sti
pop
popa
insl
add
pop
imul
call
add
inc
daa
xor
dec
xor
push
cmc
in
mov
scas
dec
pop
push
stos
pushl
xor
scas
cltd
testb
pop
insl
jo
aaa
in
fdivs
dec
or
orb
dec
lret
mov
pushf
in
out
andl
jle
insl
cmpsl
cli
fwait
or
lock
in
fnstcw
push
mov
es
sub
sub
adc
cmp
mov
add
imul
mov
jg
pop
or
push
ss
int3
adc
dec
shll
imul
and
bound
xchg
inc
push
sbb
push
int
xor
cwtl
xor
xor
imul
ret
inc
ret
mov
stc
jns
test
imul
sbb
jl
jbe
clc
fstpl
test
cmc
adc
push
cmp
jecxz
rcrl
push
sub
mov
and
clc
pop
cmp
xor
flds
push
sbb
jl
inc
mov
dec
ficomps
loop
pop
lret
jae
pop
mov
aad
es
xchg
out
add
adc
out
mov
xchg
notl
cmp
fnstenv
int3
rcl
xchg
adcb
aam
and
dec
mov
push
mov
and
nop
or
jl
jns
xchg
int3
xchg
ss
xchg
fwait
in
es
xchg
aas
test
jo
mov
mov
add
push
push
test
mov
mov
adc
push
inc
lcall
cmp
inc
faddl
lods
pop
mov
cmp
or
inc
sahf
adc
and
push
daa
imul
adc
mov
notl
mov
xor
in
xchg
mov
adc
sub
orb
int
testb
mov
roll
inc
pop
push
cmc
add
push
pop
sub
mov
fsts
out
cmpsl
cmp
xor
je
dec
sbb
push
sub
add
cmp
add
repnz
pop
leave
xchg
neg
or
mov
or
jmp
aam
dec
sbb
xlat
lret
push
lock
aad
aad
push
lcall
hlt
inc
jnp
test
pop
rorl
inc
push
jno
and
lea
mov
jbe
daa
pop
pop
pop
aas
push
or
mov
dec
and
out
into
jle
pop
jmp
dec
enter
cmp
sub
pop
dec
push
push
cmp
mov
imul
lds
testl
adc
or
roll
jge
loope
shl
and
pop
testb
xorl
test
subb
xor
ljmp
push
pushf
push
ljmp
ss
imul
xchg
pop
daa
stos
lods
lcall
in
ja
cmc
mov
mov
lcall
jmp
das
jle
dec
fisttpl
inc
or
repz
addb
add
cmpb
mov
adcb
std
sti
and
adc
push
pop
inc
je
xor
in
out
into
bound
inc
pop
dec
ret
sbb
and
jo
out
sti
mov
mov
inc
mov
push
aam
inc
mov
repnz
out
adc
ss
pop
lea
pop
jno
hlt
adc
scas
movsb
lahf
jmp
xor
and
xlat
pop
aam
out
aaa
push
adc
ret
imul
cmp
leave
push
movsl
jl
sub
push
sub
out
dec
nop
jmp
mov
dec
sub
jae
daa
xor
xchg
xchg
out
int
jmp
mov
hlt
jge
sub
scas
aam
and
arpl
mov
dec
popl
in
fcomps
sarl
sti
leave
and
inc
mov
push
pop
sbb
jge
and
into
ret
mov
push
popa
dec
xor
or
inc
inc
and
or
sarb
fwait
movl
idivl
rclb
add
clc
test
jae
jl
pop
aaa
jle
aam
mov
mov
inc
ret
mov
cmp
add
mov
push
orl
cmp
inc
sbb
inc
nop
divb
clc
cmp
xchg
mov
popf
dec
aaa
sub
cltd
stc
mov
push
popf
call
nop
aaa
jns
int3
pop
cmp
pop
and
test
xchg
ja
sbb
xchg
insb
cwtl
loop
or
cltd
mov
pop
clc
notb
pop
jnp
inc
add
jl
mov
push
cmp
push
sub
addb
dec
mov
jge
or
xlat
mov
xchg
mov
cmp
jle
das
cmpsb
mov
pop
push
push
pop
lock
pop
ja
in
cmp
mov
add
ljmp
sub
or
cmp
cwtl
sub
lretw
bound
scas
cmp
insb
mov
push
sarl
rclb
pop
out
mov
add
jbe
and
xor
call
mov
or
mov
cmp
push
fdivrp
pusha
scas
xor
xor
sarl
imul
mov
dec
mov
pop
cmp
int3
cli
cmp
pop
cli
adc
cmpl
pop
lret
in
and
inc
cli
jle
inc
mov
ret
xchg
mov
xchg
idivl
sti
inc
cmp
aam
mov
mov
cli
jle
inc
mov
fchs
fdivrp
int3
jge
test
lock
mov
leave
and
push
xor
into
cwtl
subl
insb
lods
inc
insl
adcb
fcom
icebp
mov
aaa
inc
adc
clc
jae
out
dec
repz
push
jg
cwtl
mov
sub
cmp
jno
pop
lods
fsubs
lret
mov
jno
dec
or
test
dec
xorl
inc
int3
sub
or
gs
mov
rclb
and
and
shll
imul
in
in
pop
bound
cwtl
push
es
dec
in
pop
dec
inc
inc
cli
jle
aas
mov
dec
mov
mov
fdivrs
mov
mov
inc
cli
jle
ds
mov
pop
xchg
lcall
pop
push
hlt
in
in
xchg
jne
mov
sahf
dec
mov
jl
sub
cmpsb
mov
dec
cmp
ret
fldcw
mov
mov
sbbb
adcl
cmp
add
nop
cmpsl
mov
pushf
or
mov
dec
dec
scas
inc
daa
in
fst
inc
add
jl
movsl
mov
sti
ret
dec
or
dec
negb
jle
ds
movsl
in
lahf
dec
xorb
aas
int3
sub
jecxz
lods
dec
popfw
roll
push
xlat
and
lods
int3
xchg
cmp
pop
mov
jp
jnp
bound
sti
dec
test
push
inc
outsb
insl
sahf
jle
cmp
movsl
pop
add
dec
lds
xchg
aad
mov
into
cs
dec
mov
inc
cli
jle
dec
mov
xor
adc
add
push
mov
notl
cmc
inc
mulb
adc
and
iret
scas
inc
pop
xor
fwait
fwait
pop
pop
fwait
inc
popa
mov
sbb
test
push
push
dec
mov
mov
sub
cmpsb
xlat
mov
lret
sti
inc
dec
int3
cmp
mov
mov
nop
mov
jle
xchg
shl
jle
xor
mov
loopne
stos
sahf
pushf
sub
dec
sti
push
in
dec
cltd
stos
inc
mov
sarb
aam
add
sbb
lret
sahf
or
push
bound
das
sarl
dec
int3
dec
rcrb
cmp
out
dec
cmp
cmpsl
jmp
mov
test
and
leave
fstpt
jnp
sti
ss
repz
dec
movsb
sti
and
scas
ja
int3
xor
je
mov
sbb
insl
stos
addr16
inc
cmc
jno
imul
out
and
xchg
in
icebp
es
adcb
dec
mov
mov
mov
in
adc
inc
pop
dec
wrmsr
mov
into
or
fisubs
scas
inc
push
xchg
icebp
es
pop
repz
in
scas
jl
mov
xor
pusha
loope
ljmp
test
mov
adc
les
xor
pop
mov
lret
in
es
insl
add
mov
sbb
mov
add
nop
sti
out
xor
sub
lret
dec
mov
into
add
jl
leave
fildl
push
mov
je
ss
push
xchg
jae
sbb
ja
and
dec
mov
sub
inc
cwtl
or
adc
sub
rcl
xchg
outsb
cs
mov
dec
cli
jle
inc
mov
jl
out
inc
jl
dec
adc
int
sbb
nop
cmpsl
out
dec
xchg
ret
inc
or
stos
movsl
jecxz
scas
mov
int
sahf
pop
fs
out
cmp
jg
push
dec
cltd
pop
enter
xor
push
nop
add
inc
dec
push
jg
inc
xchg
mov
mov
jns
xchg
negl
xchg
jp
push
inc
cmp
mov
imul
xchg
sub
pop
add
lea
and
test
fmul
or
and
in
pop
inc
xor
lea
push
jg
fisubs
jnp
lods
inc
leave
push
inc
dec
das
ret
shlb
loop
leave
push
fldt
idivl
sbb
dec
cmc
jae
dec
mov
sti
jnp
xchg
mov
imull
dec
icebp
es
pop
mov
scas
sahf
jl
jne
in
push
ljmp
orb
pop
sub
sahf
add
stc
xchg
push
shrb
jns
es
pop
in
sbb
lods
push
out
adc
inc
test
adc
int
rcll
dec
shll
cmp
mov
dec
shl
or
in
dec
fidivrs
sbb
xor
divb
loope
jmp
mov
pop
inc
pop
add
addr16
pop
mov
cmp
fimull
pop
fwait
pop
mov
xchg
shl
loope
jmp
insl
pop
imul
in
or
cmp
out
nop
fisttpl
jae
dec
ret
inc
push
push
add
popl
ss
pop
jg
or
fmul
lock
stc
lods
inc
iret
push
inc
dec
sbb
pop
scas
test
stc
xchg
inc
cmpsl
cmp
std
push
adc
gs
loope
sbb
cmp
or
pop
fildll
nop
inc
out
adc
lcall
sbbl
xchg
imulb
and
jno
inc
pop
pop
mov
push
shl
das
imul
push
roll
pop
ret
aad
mov
sub
in
into
sbb
cmp
sub
cmp
sbb
jp
pop
mov
adc
push
add
push
sbb
xor
mov
ds
adc
clc
int
add
outsl
and
sub
push
add
into
outsb
in
in
rol
sbb
daa
lds
xor
inc
pop
mov
icebp
addr16
inc
mov
mov
xchg
stc
or
stc
scas
lahf
jb
push
fst
or
sarl
mov
push
lcall
mov
out
sub
cltd
int
scas
aad
xor
mov
xor
leave
mov
push
ss
popa
ds
xchg
inc
daa
lods
push
fcompl
js
adc
dec
adc
mov
jge
aaa
pushf
push
fcmove
dec
pop
cmp
sti
je
in
sarl
lret
mov
je
icebp
icebp
fisttps
icebp
sti
fisttps
adc
sahf
cmpsb
jl
lret
aam
dec
and
inc
mov
icebp
ret
repnz
cmp
xor
jo
xchg
fcmovu
adc
xchg
dec
hlt
or
adc
pop
out
out
int3
xchg
push
not
sub
jb
in
xchg
push
push
fdivrs
jmp
push
mov
call
lds
dec
sub
mov
loop
xor
xor
aad
imul
lock
adc
cwtl
mov
add
ret
mov
aad
js
inc
and
insl
scas
add
shr
xchg
out
inc
out
jmp
int3
mov
jmp
push
inc
andl
hlt
xchg
lock
xchg
sbb
add
nop
cmpsl
negl
mov
push
push
test
int3
mov
adc
out
add
mov
out
popf
decl
and
dec
lock
out
jno
mov
sbb
and
add
mov
mov
mov
mov
inc
out
mov
mov
xor
leave
rcl
fs
jae
jl
pop
pop
lock
jl
popf
jmp
out
aaa
sbbl
bnd
jl
pop
push
jle
ja
push
cli
lret
mov
adc
je
jl
pop
push
in
jle
ret
cli
scas
lret
mov
sub
nop
sbb
cwtl
push
sbb
fstps
aad
or
lock
incl
and
dec
lock
imul
cwtl
sbb
inc
rcrl
and
and
push
in
xchg
lods
sub
mov
fimuls
fnstenv
mov
inc
mov
pop
in
or
out
iret
and
or
push
cltd
lret
xchg
pop
divl
dec
cmpsl
ss
lret
and
jae
and
push
out
popf
pushl
out
and
loopne
int3
sbb
jecxz
sub
cbtw
ss
rcr
and
std
mov
mov
pop
ret
cltd
test
mov
and
dec
lcall
clc
xchg
mov
and
jge
push
imul
and
sub
hlt
xchg
int
stc
sbbb
and
cwtl
push
and
cmc
rcll
imul
and
fbld
out
jecxz
out
push
mov
cmpsl
loope
dec
jbe
mov
fmulp
popa
int3
frstor
xor
mov
dec
dec
in
add
and
insb
inc
repnz
ja
sbb
jb
daa
fldl
lret
out
add
xchg
sbb
ret
and
jle
icebp
xchg
fwait
sub
xchg
sahf
idiv
fisttps
clc
test
mov
xchg
sbb
xor
push
enter
mov
mov
pop
movsl
adc
sbb
and
sbb
arpl
cmpsb
pop
sbb
hlt
mov
repnz
popf
inc
adc
ret
arpl
cwtl
xor
ret
pop
addr16
mov
aas
add
dec
push
jno
clc
jno
sbb
dec
sub
push
mov
dec
push
test
testb
dec
aas
cmpsl
lret
divl
jne
inc
lret
ss
icebp
cmp
pop
pop
das
ds
fadds
sahf
in
pop
adcb
fsubrl
xor
sbb
lea
test
or
dec
push
and
cwtl
fistl
repz
mov
mov
bound
dec
and
pop
mov
fcmovb
mov
shlb
inc
sbb
mov
pop
data16
push
arpl
cli
cmc
xchg
jbe,pt
call
pushf
dec
fistpll
mov
adc
pop
test
sub
outsb
lret
adc
roll
add
aaa
out
orb
out
adc
push
xchg
imul
int3
leave
sbb
push
out
xchg
sar
mov
out
sbb
mov
push
xchg
cmpsl
lret
stos
sbb
call
adcl
iret
sahf
test
loope
andb
mov
or
cmp
inc
sbb
sbb
dec
or
jb
pop
daa
scas
adc
adc
push
mov
fs
add
dec
lods
je
xchg
add
ja
roll
pop
xchg
ja
mov
loop
xchg
les
xchg
add
sar
orb
mov
inc
cwtl
dec
std
sti
or
add
roll
std
inc
adc
cs
push
pushl
bnd
addr16
sbb
mov
dec
cmpsl
push
xchg
stos
fistpl
xchg
pop
dec
out
iret
in
jl
je
xor
inc
xlat
jge
mov
pop
or
cmpsl
cmpsb
xchg
or
in
jmp
inc
lret
mov
and
scas
fiaddl
or
cltd
xor
cmpsl
mov
dec
cltd
aas
test
pop
dec
mov
pop
ret
inc
add
cmc
dec
lds
stos
lret
sub
js
dec
fmul
sub
fistps
fmul
cmp
aam
sti
mov
mov
dec
add
int3
mov
push
or
sbb
pusha
mov
int
cmp
flds
adcl
pushl
push
outsb
jle
lahf
inc
jle
out
popa
add
mov
outsl
inc
insl
inc
mov
add
nop
mov
cmpsl
dec
icebp
outsb
and
jnp
inc
ret
sub
mov
xchg
xor
jae
lea
scas
call
std
inc
sti
sbb
shrb
das
out
mov
daa
mov
shl
mov
in
insb
push
lock
in
popf
sub
push
in
imul
push
mov
fldl
add
mov
xor
cmp
mov
fimull
xchg
imul
fbstp
sub
icebp
sbb
push
jmp
das
les
push
movsl
lret
icebp
mov
jle
lock
mov
xor
aam
push
in
movsb
leave
adc
pop
test
in
pusha
xchg
jne
call
xlat
xor
cmpb
and
test
inc
cli
clc
dec
fs
add
jbe
stc
add
fxam
repz
shll
inc
out
icebp
scas
cld
dec
sbb
fisttpll
cwtl
mov
pushl
push
dec
ret
jae
cmp
sub
mov
push
ret
mov
pop
pop
enter
ja,pn
int3
jns
push
stc
dec
pop
lahf
mov
stos
jge
lea
repz
or
cmpsb
sbb
push
fadds
out
push
cmpl
cs
mov
jb
xchg
sbb
mov
mov
adc
lock
sbb
jl
sbb
sub
das
mov
les
dec
mov
cltd
loop
out
adc
sub
in
in
xchg
adc
add
fsubs
lock
iret
mov
int
rcr
dec
int3
movsl
jbe
or
out
das
cltd
xchg
jbe
mov
hlt
daa
push
xchg
xchg
jb
call
xor
xchg
out
mov
ljmp
adc
inc
xchg
shlb
cmp
adc
pop
shrb
aad
or
pop
fs
jg
idivb
ljmp
mov
or
fisttps
inc
adc
les
out
bound
xlat
fidivs
scas
lret
rcl
or
dec
pop
push
scas
shll
popf
lods
adc
xor
mov
xor
cwtl
xor
aad
mov
jnp
mov
ret
into
popa
rep
pop
mov
clc
enter
dec
fnclex
data16
xchg
jmp
test
adc
stc
and
adc
and
sbb
stc
mov
push
lahf
flds
xchg
daa
fcoms
pop
push
sahf
adc
jmp
and
inc
cltd
jae
xchg
daa
ljmp
mul
loopne
add
mov
dec
inc
add
pop
or
adcl
xchg
lods
mov
std
adc
mov
xchg
out
pushf
fucompp
scas
mov
repnz
mov
cmc
mov
add
sub
mov
mov
add
test
cmp
aam
stos
packuswb
cmp
xor
int3
adc
xor
aaa
xorb
mov
cmpsb
jl
mov
stc
ret
push
hlt
psrld
ret
add
mov
lret
sahf
pop
jl
pop
aas
jmp
lcall
push
inc
lahf
insl
cmpb
dec
or
mov
mov
sbb
in
xchg
push
cmp
sub
ljmp
ret
dec
ja
in
or
sub
dec
repnz
dec
mull
icebp
fcomi
and
mov
insb
lds
mov
add
mov
popf
push
or
icebp
adc
int3
lods
scas
mov
mov
mov
and
push
sub
jl
xchg
pop
pop
or
pop
or
std
push
push
mov
mov
push
sub
dec
xor
imul
and
rol
in
lock
dec
rclb
clc
movsl
testl
mov
int3
cmc
dec
js
enter
push
xlat
or
cmc
fsub
add
fsubs
es
scas
or
fbld
outsl
fsubl
jb
popa
push
and
ret
push
mov
ss
inc
xchg
xchg
fidivl
sub
push
daa
cmp
xor
pop
dec
inc
ret
dec
adc
push
dec
pop
aad
push
subl
mov
mov
push
ja
out
xchg
popf
adc
cld
ficomps
xchg
jne
inc
xchg
mov
add
rol
stos
mov
and
mov
movsb
mov
outsb
int3
or
imulb
adc
xchg
add
enter
lahf
mov
out
mov
shr
ficompl
mov
jb
test
pop
xchg
daa
sbb
out
test
cmp
clc
sbb
push
and
das
mov
jae
jl
pop
mov
jle
xor
and
mov
je
ss
and
call
add
mov
mov
fsubrl
loop
sbb
mov
ljmp
xchg
xor
ljmp
popf
call
and
dec
fidivl
jl
int3
out
es
xor
repz
sbb
inc
cmp
decl
jno
pop
sbb
jg
in
xchg
and
push
subl
fadd
ffreep
cmp
ret
cmp
add
cli
jle
xchg
mov
xor
or
enter
ret
aas
mov
clc
ret
inc
push
xchg
dec
lret
mov
push
pop
nop
pop
jnp
xor
out
xchg
aas
push
mov
insb
mov
cwtl
imul
inc
enter
add
shll
dec
shll
mov
std
jecxz
pop
out
data16
out
imul
and
in
or
mov
add
xchg
cltd
dec
mov
sub
pushl
adcl
mov
inc
add
stc
cmpsb
int
pop
or
inc
mov
cmp
sub
mov
xchg
mov
out
rorb
mov
aam
xchg
push
mov
pop
clc
xchg
daa
jmp
mov
js
out
adc
inc
test
jno
out
push
ret
dec
fisubl
out
cmpsl
sahf
cmp
jg
jae
jl
pop
pop
sarb
add
popf
pushl
iret
aaa
sbb
int3
adc
out
ret
int
sbb
lods
push
pop
rcl
shll
or
and
mov
mov
mov
insb
shrb
sarb
mov
popf
push
int
add
iret
mov
clc
std
out
lcall
imul
in
ds
and
xor
sbb
xchg
mov
xor
leave
enter
in
cltd
or
insb
cli
and
push
sti
mov
out
sbb
xor
jae
cwtl
nop
popa
inc
pop
test
dec
xlat
imul
mov
cltd
pop
push
mov
add
scas
out
jg
out
das
xchg
pop
fwait
cli
cmp
push
stc
sub
fwait
mov
cmp
or
fiadds
xchg
std
nop
cmpsl
hlt
cld
pushf
or
test
and
cld
repnz
stc
es
push
xchg
sbb
pop
sahf
cmp
loope
mov
mov
and
dec
lret
aaa
jecxz
int3
fsqrt
jecxz
cld
stc
and
pop
jnp
inc
add
mov
mov
ret
push
int
and
insb
push
pop
rolb
xchg
daa
movsb
sbb
enter
fucom
dec
fbld
pushf
test
stc
jecxz
movsb
clc
and
imul
add
in
jmp
and
rol
int3
jmp
aaa
cmp
and
mov
or
shll
leave
push
gs
fucomi
xchg
insl
idivl
add
js
sbb
imul
notl
lret
aaa
mov
mul
xchg
stos
mull
lahf
test
sub
jb
leave
jle
ret
cld
out
leave
and
add
cwtl
sub
aaa
fs
test
cli
cwtl
add
pop
adc
daa
js
popf
mov
xchg
adcb
in
daa
xchg
cwtl
and
or
mov
sahf
jecxz
into
xchg
iret
mov
in
dec
leave
aaa
pop
add
fcomps
clc
divb
jae
jl
pop
mov
int3
popf
jmp
fmull
mov
cmpsb
pop
out
jb
test
inc
je
dec
jbe
inc
ja
push
adc
inc
fmull
clc
cld
or
jb
dec
jmp
add
imul
add
nop
movsl
cmp
add
lcall
xorb
sbbb
jle
imul
mov
scas
dec
pop
jns
sbbb
inc
adc
jbe
rcrb
add
je
jle
loope
mov
pop
lock
filds
inc
dec
repz
push
xor
loop
mov
push
pop
mov
repz
or
ffree
pop
out
dec
lds
call
xchg
or
ja
rcrw
leave
mov
xor
ret
inc
push
pop
pop
inc
test
dec
jg
or
inc
mov
pop
dec
sbb
lret
adc
or
mov
enter
int3
add
jecxz
add
roll
imul
sbb
lret
mov
je
sbb
lret
test
sub
jle
add
dec
ret
mov
pop
pop
cltd
sbb
adc
pop
jb
jg
imul
out
ss
push
mov
or
ret
fwait
xchg
pop
les
jp
xchg
rcrb
test
lds
dec
out
daa
adc
cmp
xor
dec
outsb
mov
pop
xchg
repnz
in
xor
nop
inc
xchg
xor
inc
add
icebp
add
sti
sub
int
jge
mov
mov
inc
jl
pop
jno
popf
sahf
dec
ret
inc
int3
sar
jecxz
push
jmp
roll
imul
adc
lret
adc
xorl
test
jle
test
and
dec
les
dec
add
int3
push
jecxz
inc
data16
imul
and
sti
stc
fldcw
leave
fistpl
fstpt
fldcw
pop
inc
and
lret
in
jmp
daa
into
add
rorb
in
fwait
xchg
sarl
push
cmp
int
push
nop
cmpsl
inc
add
jp
cld
inc
es
stc
jnp
mov
shl
in
adc
inc
inc
fsts
dec
push
daa
sub
jl
pop
cld
inc
cwtl
sbb
jecxz
mov
mov
jle
mov
xor
rcrb
in
mov
addr16
or
add
or
mov
push
mov
frndint
push
adc
cltd
shrl
pop
pop
test
jnp
popf
stos
rcrl
cmp
nop
fwait
out
pop
or
add
je
dec
cmpsb
sahf
add
xor
pop
push
inc
dec
stos
divb
xchg
mov
data16
std
xchg
fcoml
ds
pop
adc
push
add
ljmp
je
push
lret
lret
js
xchg
addr16
mov
adc
push
inc
inc
lock
in
push
popa
movsl
fucomip
adc
push
popa
xchg
repz
and
push
inc
dec
negl
jno
sbb
mov
xor
inc
test
xchg
sti
movsl
add
aam
inc
scas
mov
flds
into
sbb
incb
addr16
mov
lret
addr16
inc
and
jbe
repz
inc
push
mov
sub
cwtl
add
orb
fbstp
lock
add
test
xchg
call
pop
push
adc
pop
xor
popa
or
lret
cli
fimuls
stos
inc
push
addr16
es
ror
loopne
lret
out
shlb
orb
adc
add
test
mov
adc
jle
inc
add
or
xchg
push
mov
call
lea
xor
cwtl
loop
int3
fimuls
or
push
gs
arpl
ss
add
mov
test
lahf
jl
inc
lcall
daa
pop
jbe
dec
cwtl
fisttpl
cmp
incb
push
cmpsw
int
shl
xlat
das
int3
mov
stos
inc
xor
xchg
push
gs
stos
sub
stc
bound
mov
cmp
out
mov
in
adc
pop
xor
nop
jg
aam
sub
inc
add
push
cmpsl
and
fwait
roll
jo
out
adc
lret
jb
std
lret
xchg
cmp
mov
add
xchg
int3
gs
cmp
pushl
jle
inc
push
mov
add
cs
add
ret
dec
sbb
or
jecxz
xchg
negl
shrl
xchg
mov
cmp
sti
mov
jnp
jecxz
mov
mov
addl
jp
jns
pop
sbb
inc
mov
call
inc
sti
mov
stos
mov
ror
or
insl
in
pop
fwait
push
out
bound
test
jae
inc
pushf
mov
fimuls
dec
mov
xchg
dec
adc
xor
out
dec
pushf
les
sub
mov
cs
test
pop
fists
or
into
aad
fimuls
rcr
into
scas
ja
or
aam
into
fwait
ja
mov
and
inc
or
xchg
cmpsb
mov
bswap
push
cmp
rcll
sub
ds
arpl
in
int
in
push
leave
ljmp
mov
sbb
sub
mov
pop
jg
inc
scas
jnp
jge
mov
testl
mov
out
sub
shl
inc
test
ror
stc
xor
loopne
add
ret
jle
nop
lret
fistps
mov
inc
jmp
mov
xchg
and
cli
cwtl
cltd
push
pop
cltd
divps
and
push
mov
shll
aas
into
jl
push
pop
in
dec
mov
pop
loop
shrl
xor
out
add
inc
sahf
mov
cli
testb
imul
je
cli
pop
out
and
sub
mov
aaa
jae
xchg
mov
icebp
pop
aad
add
inc
rorb
insb
jl
inc
mov
sarb
jp
das
pop
inc
mulb
test
cmpb
or
leave
sbbl
xorb
orb
jnp
mov
cld
rorl
stos
in
sub
cmp
ret
sbb
imul
cmpsl
or
inc
dec
divl
add
pop
out
jge
push
fcoml
sbb
call
add
pop
cld
ss
cltd
mov
sbb
dec
xchg
in
call
jge
jge
jb
andb
sbb
jge
mov
xchg
es
jle
jnp
lret
std
mov
or
rcr
or
jge
jg
jecxz,pt
adc
mull
data16
sub
icebp
cld
fldt
cltd
pop
inc
pop
mov
ds
ja
mov
out
ret
mulb
ds
outsl
cld
dec
sbb
pop
mov
dec
inc
cmp
jno
dec
in
cmc
aad
fsts
dec
das
mov
outsb
dec
xor
frstor
lea
xor
dec
dec
test
lret
enter
mov
pop
xor
or
jmp
scas
push
imul
loop
divb
jle
popw
sti
cmpsl
mov
dec
xchg
decb
in
inc
cli
ds
fimull
mov
pop
dec
jle
test
gs
inc
fnstenv
sub
xchg
cmpsl
add
je
ljmp
jg
xor
das
xor
lcall
push
sub
or
mov
imul
gs
std
sahf
nop
out
push
je
dec
mov
pusha
cli
adc
pop
cmp
ja
inc
add
imulb
paddd
push
test
lret
jp
fcompl
test
xchg
test
ret
dec
xchg
test
int
fstps
andb
loop
shl
add
pushf
mov
mov
ret
dec
xchg
popa
dec
int3
cwtl
loop
sbb
jp
lret
dec
in
lcall
lret
inc
out
jae
fnstcw
xor
shrb
cltd
mov
xchg
lcall
xchg
mov
dec
adcl
lret
pop
sbb
lcall
push
fists
cwtl
mov
daa
jne
les
neg
test
pop
aaa
mov
cmpsl
jge
fidivs
fsubrs
shlb
cwtl
stc
outsb
rorl
jecxz
mov
adc
cmc
testl
out
add
sub
inc
in
dec
dec
mov
and
jb
pop
and
mov
dec
mov
out
lret
ror
push
adc
clc
aam
lods
iret
stc
ja
hlt
stc
mov
js
cmp
jmp
fdivrl
mov
xor
xchg
negb
push
pushl
pop
pop
mov
sbb
in
ret
inc
dec
out
shr
xor
lds
and
test
lea
fcoms
add
icebp
lret
cli
std
and
pop
in
daa
lahf
push
dec
aas
stos
add
fs
outsb
lods
xor
inc
inc
dec
ds
sbb
enter
sub
sbb
xchg
adcb
pop
test
inc
out
push
orl
cli
nop
subl
jg
popf
std
sub
dec
sbb
inc
pop
push
es
repnz
jl
mov
outsb
or
daa
push
push
xor
dec
dec
pop
pop
xchg
xadd
or
mov
icebp
js
fmulp
in
pusha
enter
or
sbb
mov
jg
mov
sub
xlat
aaa
repz
push
cld
in
sbb
sarl
push
inc
das
sub
mov
cmp
xchg
adc
scas
sbb
jmp
fmuls
cmp
flds
push
notl
or
rcl
mov
fsincos
or
ficoml
jns
fnsave
addl
push
out
mov
mov
adc
pop
mov
add
addl
in
mov
sti
add
xchg
sbb
push
dec
mov
sbb
cmp
mov
xchg
or
mov
es
daa
cmc
mov
cmpsb
mov
and
js
add
fnstenv
mov
ja
outsl
jbe
sti
or
sub
outsl
pop
shl
orb
pop
sub
es
cmc
mov
mull
add
decl
outsb
sbb
cmpsb
fstpt
push
push
fcoms
and
aam
shll
pop
jg
cld
pop
mov
xor
jp
lret
push
jnp
and
jmp
push
pop
and
in
pop
and
sbb
cmc
cli
or
movsl
and
mov
aam
add
pop
add
enter
mov
stc
adc
and
lret
shlb
out
in
pop
in
hlt
outsl
mov
cmp
nop
shrl
or
sbb
add
adc
loopne
push
inc
pop
add
cmp
xor
int
xchg
jecxz
lahf
fcoms
inc
xor
jecxz
sub
in
or
pop
and
cltd
addr16
pop
push
dec
cmp
inc
add
fdivrl
lods
dec
mov
mov
and
mov
negl
loop
mov
fisubs
or
loop
push
test
ds
xor
loop
pop
decl
and
mov
rcl
pop
movsl
xor
cmp
jg
mov
and
mov
call
jg
inc
es
mov
in
xor
cmc
stc
incb
cmp
or
or
push
add
cs
out
push
or
test
js
mov
ljmp
mov
fucomip
dec
inc
jns
and
jge
pop
mov
cmp
movsl
loopne
or
add
cmc
sbb
mov
or
jbe
int
or
sbb
orl
mov
adc
sbb
ss
outsb
and
cli
or
and
cmp
jbe
data16
pop
inc
jle
xchg
sbb
pop
lret
pop
int3
mov
and
es
dec
inc
xchg
cmp
fsubrp
xor
movd
xor
adc
lods
imul
pop
mov
xchg
cmp
adc
out
outsb
sti
orb
push
imul
add
repz
jle
in
mov
pop
dec
jle
xorb
repz
push
hlt
je
pop
mov
negl
sarb
push
out
shll
dec
outsb
jl
adc
in
sbb
mov
fwait
in
sarb
lret
addb
fmull
daa
jp
sti
mov
pusha
test
push
mov
sub
push
fisubs
fbstp
sbb
cmp
pop
out
cmc
mov
sahf
add
push
or
xor
sbb
clc
xchg
mov
cltd
mov
lods
fdivrp
lds
sub
int
xchg
fbstp
lahf
pop
adc
cmc
mov
jle
xchg
and
adc
mov
pop
push
decl
fsubrl
enter
mov
pushf
adcl
mov
sti
lock
shlb
out
in
ss
xchg
mov
sbb
sub
les
xor
jp
cwtl
jecxz
sub
sarb
or
mov
notl
xor
dec
dec
lret
xlat
cmovne
cmp
cs
popf
sbb
imulb
rep
mov
in
or
dec
dec
rcr
jo
mov
mov
mov
fnstsw
cmp
add
inc
idivb
dec
nop
lret
xchg
push
arpl
gs
stos
cmpsl
aam
scas
add
dec
mov
call
mov
sub
jle
repnz
leave
add
add
inc
jg
jle
jnp
jl
out
outsb
lret
jb
out
cmpsb
leave
fsts
stos
ds
push
daa
bound
sub
je
jbe
push
cli
or
jno
int3
ja
pusha
dec
into
test
inc
xchg
xor
ret
aad
adc
inc
stc
mov
push
ficomps
push
data16
clc
popa
jp
xchg
fs
mov
jmp
xchg
push
xchg
push
subl
cmpsl
dec
out
add
jle
loopne
stos
pushf
cwtl
lahf
sbb
inc
neg
mov
cmpl
add
mov
pop
xchg
mov
cmpsl
sub
sbb
pop
fistps
jo
mov
sti
mov
cmpb
cli
cmp
cmpsb
sbb
call
icebp
ss
adc
mov
fadds
insb
push
repz
fisubrl
dec
pop
add
fldenv
testl
loop
dec
pushf
imul
rorb
and
lcall
dec
imull
inc
into
dec
jl
xor
roll
jp
shrb
push
or
inc
sahf
frstor
jp
jae
lret
ljmp
lods
push
imul
ljmp
add
or
sub
inc
pop
add
shr
lret
sbb
sti
fisubl
fisubrs
and
negl
push
shll
mov
movsb
add
movl
or
js
sub
adc
sti
rclb
sbb
cld
cmpsb
lahf
xor
scas
scas
mov
xchg
xchg
mov
push
test
loopne
adc
xchg
popa
inc
pop
mov
adc
sbb
repnz
add
lea
test
cld
imul
inc
cmp
jp
or
cli
and
push
neg
insl
inc
fstps
ficompl
in
push
xchg
int
add
mov
jo
divb
fsubp
fidivrl
lods
ljmp
roll
mov
ret
iret
xchg
sub
xchg
ljmp
lret
adc
xor
mov
fcomi
sahf
jg
in
fsts
das
mov
insb
outsb
dec
add
add
mov
sbb
es
xlat
dec
sti
dec
dec
mov
out
inc
pushf
std
pop
or
popl
adc
adc
mov
int3
or
loop
mov
enter
lret
out
push
jo
mov
dec
bound
loop
xchg
sahf
cmp
fistpl
sub
scas
pop
daa
inc
addr16
sub
fsubp
and
jbe
or
mov
xor
push
or
xor
icebp
pop
leave
repnz
dec
jecxz
out
test
divb
in
testl
inc
mov
cmp
xor
rcll
scas
in
icebp
cwtl
daa
fidivl
sbb
test
jecxz
xchg
xor
mov
mov
push
jnp
stc
sti
pop
ret
pusha
mov
sbb
mov
mov
jne
test
testl
cmp
sub
aaa
out
out
movb
cli
xchg
iret
dec
ds
arpl
ret
cmpsl
mov
dec
call
jp
movsl
icebp
mov
xor
in
or
xchg
add
push
or
out
mov
je
sbb
mov
adc
mov
dec
xchg
jle
in
dec
test
add
cmpsl
scas
sub
mov
loope
add
ds
add
jg
ret
inc
add
idiv
lds
daa
rclb
test
xchg
xor
fldenv
lret
popa
lods
mov
cltd
pop
jne
rorl
dec
jns
sub
pop
loope
mov
push
inc
jmp
sti
inc
jle
icebp
sbb
es
jmp
lods
aas
mov
sub
mov
pop
scas
rep
pop
mov
lods
icebp
loope
sahf
int3
mov
bound
inc
jb
mov
push
out
scas
push
arpl
fcoml
push
les
jno
out
loopne
fistpl
shrb
outsl
int3
inc
lods
jb
test
xchg
sbb
push
xchg
mov
mov
jle
mov
enter
mov
pop
lods
jbe
nop
lret
repnz
mov
mov
xchg
jo
daa
mov
xor
inc
movsl
push
jg
setp
sub
or
cmp
cmpsl
xor
dec
mov
cld
sahf
lret
rorl
nop
and
add
popf
test
inc
dec
mov
jmp
repnz
dec
mov
push
das
inc
les
adc
addl
jne
scas
jbe
or
std
testb
push
pop
cltd
pop
iret
pop
sbb
out
filds
inc
loope
xor
lods
push
jl
mov
fiaddl
push
or
movsb
xchg
pop
adc
inc
cmp
scas
cltd
mov
or
push
fcmovu
aaa
jmp
and
clc
test
insl
add
inc
addr16
mov
and
test
sbb
push
roll
les
out
cltd
sub
add
loope
rcrl
inc
fildl
dec
pop
push
imul
cmp
mov
inc
test
jb
adc
inc
xchg
lds
mov
test
jp
sbb
adc
repz
or
xor
ror
sub
leave
lock
daa
in
lcall
xor
inc
xchg
jmp
outsl
jmp
in
jp
xchg
dec
or
sahf
adc
orb
sbb
outsb
sbbb
lods
push
jno
or
testb
push
aam
rcll
daa
push
fildll
in
ret
add
pop
loope
dec
mov
and
dec
xor
and
mov
xchg
iret
test
cmpsb
int
sub
inc
xchg
mov
in
xor
adc
inc
or
ret
push
xor
jbe
mov
mov
jnp
mov
jo
js
icebp
inc
subb
sti
or
sbb
jns
mov
gs
push
mov
sub
fwait
or
sub
push
push
js
sbb
cmc
inc
mov
dec
fmull
ds
int3
or
arpl
jge
inc
cs
pusha
xchg
daa
push
call
fdivl
inc
rcl
push
sub
sarl
sar
idivb
cld
jno
cmp
daa
test
scas
js,pt
xchg
jmp
stc
cli
fisubl
sbb
cwtl
xlat
and
mov
fistpl
push
aad
push
add
dec
scas
ss
outsl
and
cli
ret
shlb
sbb
adc
lods
fldt
xchg
cmc
inc
sub
xchg
cmpsb
dec
mov
stos
out
out
shlb
in
inc
or
inc
das
aaa
sarb
add
add
cwtl
inc
leave
fisttps
sahf
and
adc
sbb
fstpl
xchg
sbb
std
dec
movb
sbb
xchg
sti
cmp
push
push
or
addb
pop
sbb
mov
cmp
das
ds
sbbl
cmp
adcb
ds
mov
es
push
lahf
cmc
add
dec
cmp
xchg
adc
inc
in
outsl
push
fstpt
daa
xlat
sarb
jg
and
divl
icebp
pop
sub
int3
push
sub
in
lcall
sub
out
das
cmc
cwtl
adc
dec
es
xlat
shrb
call
xchg
push
cmp
xlat
fimull
sub
testb
sub
add
xchg
xor
lcall
mov
call
repz
xchg
cmpsb
scas
fisttpll
or
add
les
rorl
mov
shrb
out
jmp
testl
std
dec
cmp
arpl
ss
mov
loope
das
imul
inc
jl
lret
dec
sbbb
sbb
daa
add
cmc
scas
mov
hlt
pop
xchg
aaa
pop
ss
mov
jp
xchg
outsl
inc
ret
scas
jg
jle
faddl
jl
mov
ja
inc
push
popf
add
pop
sbb
popf
inc
in
mov
sbb
xchg
mov
or
mov
push
cmp
xchg
pop
inc
ja
push
addr16
cli
rclb
and
fdiv
das
push
cmp
xlat
es
mov
sub
addb
xchg
cmpsb
scas
dec
mov
or
jle
sbb
fsubrl
pop
idivl
mov
negl
sub
cmp
jle
insb
das
push
dec
pop
or
dec
cmpsb
lret
mov
adc
ss
xchg
sub
or
lret
faddp
push
mov
jo
addr16
or
rolb
inc
test
cwtl
push
test
repnz
dec
xchg
cmpsl
mov
ret
ret
stc
jnp
or
jns
cld
sub
lods
lret
push
cmp
clc
mov
sbb
inc
jmp
jle
cmpsb
out
dec
ljmp
or
or
ret
fsubr
mov
xchg
adc
adc
xchg
fistpll
lds
arpl
sahf
jmp
lahf
mov
leave
jmp
scas
sbb
pusha
lods
inc
jge
ror
push
cmpsb
ror
fstps
notb
pop
sub
test
out
into
jle
push
lret
cmovbe
icebp
notb
mov
aad
lahf
out
sbb
sbb
in
pop
es
dec
es
cltd
inc
mov
cli
aam
xchg
or
pop
sub
mov
divb
adc
lods
test
xchg
dec
test
dec
jle
jg
xchg
ja
into
inc
arpl
cmpsb
cmp
loopne
dec
hlt
repz
mov
sub
loope
loop
add
addb
cmpsb
cmpsb
adc
adcl
cmpb
faddl
daa
clc
shlb
icebp
and
iret
jg
xchg
mov
ja
cmpsb
mov
xlat
test
xor
outsb
dec
std
ret
add
fimuls
add
loop
cmp
mov
pop
insb
incb
flds
xchg
in
xlat
xchg
testb
xchg
mov
mov
jle
fsubrl
mov
pop
clc
dec
lods
popa
data16
decb
inc
roll
fcmovnu
loop
add
adc
push
adc
jl
mov
push
pushl
dec
aaa
iret
in
negb
jle
adc
inc
adc
add
pop
insl
ffree
out
adc
push
jle
sbb
loope
or
data16
push
addb
jbe
inc
imul
mov
int3
and
xor
aam
or
add
in
pop
pop
mov
jns
inc
and
loopne
ret
mov
inc
fildl
lea
call
imul
leave
clc
daa
pop
cs
jbe
cs
cmp
cmp
and
inc
mov
mull
fmull
mov
pop
or
push
cmp
dec
repnz
inc
stos
imull
inc
dec
mov
sti
jo
cmp
js
cmp
cmp
mov
sar
and
sub
jp
dec
push
or
test
or
pop
xorb
lods
mov
pop
pop
mov
or
fcompl
clc
data16
push
xor
shl
out
pop
lret
cli
mov
pop
inc
ret
dec
adc
mov
mov
leave
sub
jmp
mov
cld
imul
xor
pop
pop
outsl
int
leave
aas
pop
cmpsb
mov
add
mov
insb
cmpsl
push
add
dec
leave
sub
and
sarb
sub
nop
inc
leave
xor
jmp
and
xor
or
xchg
dec
cmp
sti
xchg
jb
out
xor
mov
inc
ror
sbb
dec
lret
cmpsb
leave
mov
pushl
push
cwtl
in
sarl
add
leave
ror
inc
loop
jo
mov
stos
rclb
outsb
xor
sahf
jb
cwtl
lods
ret
cmp
pusha
push
sarb
decl
leave
xor
popf
mov
cld
sbb
dec
sub
arpl
push
jb
or
out
mov
mov
and
adc
out
cwtl
jmp
jecxz
mov
das
jns
imul
out
xchg
mov
or
fbstp
insb
jp
dec
sub
mov
dec
fdivs
imul
or
add
leave
cmp
xchg
sub
negb
mov
push
shl
lret
mov
sub
xor
mov
clc
fsts
push
addl
inc
cwtl
add
mov
pop
pop
mov
lret
push
inc
sbb
testl
cli
mov
hlt
shll
rcll
mov
cs
jns
sbb
inc
fisttpll
mov
cli
mov
jo
inc
mov
loop
jmp
and
mov
fimull
leave
int
jecxz
inc
decb
adc
mov
pop
outsb
mov
leave
enter
cwtl
pop
lret
repz
mov
lahf
adcb
xor
mov
leave
aad
cmc
push
lods
xchg
cmp
dec
jle
dec
popa
ds
xchg
lahf
xchg
mov
sbb
sti
adc
pop
shrb
pop
mov
push
ds
test
pop
leave
mov
incl
push
push
cmpsl
leave
pop
insb
or
mov
sbb
fcom
mul
adc
das
cli
cwtl
or
ficoml
sti
fcomps
movsb
pop
mov
or
mov
shr
loop
hlt
icebp
add
lea
aas
out
call
push
push
sbb
jp
xlat
clc
xchg
lods
scas
mov
dec
ss
out
push
movsl
clc
xor
adc
push
push
andb
mov
je
scas
fadds
add
dec
jg
cmpsb
cmp
mov
lahf
push
pop
pop
jns
hlt
push
adc
orb
div
pop
rcr
scas
and
aas
int
mov
loopne
xchg
pop
mov
mov
adc
jb
popf
jecxz
out
mov
adc
repz
lret
fidivl
cmp
ret
divb
dec
not
inc
mov
rcr
inc
xlat
into
dec
imul
jg
xchg
sbb
push
inc
sbb
cmpsl
and
notb
fiadds
loope
imulb
xor
sbb
in
ds
fdivp
jle,pn
mov
jge
imulb
mov
mov
push
lea
lret
cmpsl
out
cli
pop
sbb
pop
pop
dec
lret
scas
mov
insb
lea
into
addr16
mov
in
jle,pn
loope
ret
aaa
fcompl
push
call
jb,pt
dec
sub
dec
sub
inc
lea
xchg
repz
inc
xlat
ja
cmpsb
mov
mov
xchg
stos
int3
xor
or
fmuls
scas
ja
add
xchg
and
add
add
fwait
inc
int
and
mov
jle
test
cld
inc
jp
jae
popa
adc
xchg
push
imul
lods
add
movsb
cmp
incl
lcall
sbb
xor
adc
or
mov
or
xchg
jge
push
sub
sbb
outsb
dec
pop
pop
loop
jg
mov
fdivrl
dec
bound
xchg
int3
shr
mov
sarb
lea
call
jnp
jle
test
imul
xor
inc
push
or
mov
xchg
xor
push
popf
lahf
mov
lods
pop
js
xor
mov
divb
das
fs
movsb
ss
movb
fisttps
aad
lahf
ljmp
icebp
add
adc
dec
stc
inc
lcall
dec
sahf
icebp
sbb
sarb
xchg
mov
stos
inc
nop
ja
cmpsl
push
dec
sbb
pop
pop
mov
test
or
push
lahf
or
pop
adc
fmull
into
clc
cltd
lods
mov
stc
sub
or
add
fimuls
icebp
idivb
out
jg
xchg
iret
sub
sub
outsl
push
dec
sub
ficoml
lods
and
xchg
jl
in
pop
add
jno
jns
nop
roll
pop
push
pusha
adc
xor
push
jle
mov
incb
sbb
or
push
out
sbb
mov
or
mov
loop
pop
inc
lret
incb
xlat
lods
ficompl
xchg
mov
add
ret
xchg
add
pop
fstpt
push
lods
out
aad
scas
mov
lret
es
ja
rol
mov
outsb
ficomps
push
jne
adc
shr
cmpsb
fistpl
sub
ret
inc
pusha
test
adc
mov
add
dec
dec
mov
mov
fsubrl
int
fildl
ljmp
sub
inc
out
scas
xchg
dec
push
cmpsb
add
sar
outsb
ja
adc
test
lock
push
cld
dec
leave
lcall
xchg
fldl
imul
and
add
dec
dec
xor
dec
lds
fcoms
test
clc
scas
inc
repnz
int
sub
mov
push
cwtl
inc
push
cmp
adc
test
xchg
lock
test
test
mov
jmp
shr
adcl
sub
lahf
out
aad
out
aas
xchg
dec
sub
mov
jle
xchg
pop
mov
stos
ljmp
mov
push
mov
sub
lock
in
int
fildl
sub
mov
mov
push
mov
mov
int3
push
mov
out
lcall
in
mov
add
jl
outsb
sub
lods
dec
mov
rcrl
inc
ja
wrmsr
xchg
lock
dec
dec
fsubrl
or
lods
pop
fildll
int
fisttpl
in
push
out
adc
ljmp
lock
dec
adcb
inc
mov
dec
stc
imulb
dec
call
ds
daa
xlat
xlat
notb
dec
and
inc
in
xchg
iret
es
xlat
shlb
dec
int3
and
fistpl
daa
mov
jg
and
inc
in
jb
fninit
es
rolb
xor
shl
in
push
push
adc
aad
cltd
notl
and
fstpt
cmp
jg
and
xor
daa
int
shrb
and
pop
cmp
fnsave
and
in
pop
test
pop
add
mov
cmpsb
lret
repz
dec
outsb
adc
jg
faddl
inc
jo
fwait
cmp
cs
adc
mov
out
daa
xchg
cwtl
out
sub
es
popw
cmp
xchg
cmp
xchg
or
cmp
or
jmp
cwtl
adc
shrl
xlat
clc
stos
mov
mov
pop
lods
sbb
mov
nop
inc
cltd
jbe
into
jns
mov
les
mov
mov
imul
sub
xor
inc
or
cld
mov
arpl
lods
int
add
addr16
ficoms
int
call
pusha
inc
das
shll
xor
out
cmpsb
cli
cmp
imul
lcall
mov
adc
out
push
repnz
or
add
or
fidivs
lret
pop
xchg
mov
cmpsl
gs
imul
sbb
je
shrl
shrl
or
jp
cmp
push
mov
bound
sbb
gs
lahf
cmpsb
xrelease
sarb
mov
cld
neg
jbe
lret
pop
movsb
sbbl
scas
ret
dec
dec
sub
cmp
aam
rolb
mov
fs
mov
cmp
jae
out
pushf
mov
icebp
idivb
dec
and
popf
divl
mov
sti
push
inc
test
daa
mov
add
sti
ljmp
cmp
and
imul
push
cmpsl
cwtl
lret
fsub
add
fisttpl
mov
cli
sub
pop
or
mov
imul
mov
orl
mov
jnp
push
xlat
mov
ja
sbb
lret
inc
jg
dec
ret
push
and
fnsave
repnz
lea
sbb
xor
add
in
sub
push
fnstcw
mov
lods
lea
or
sbb
mov
divl
ds
je
mov
mov
dec
iret
outsb
pop
sete
dec
imul
inc
xchg
sub
mov
and
xchg
push
cmpsb
lret
leave
or
cmpl
xchg
or
jne
aad
inc
lea
in
jno
loope
div
push
adc
and
iret
dec
inc
mov
add
inc
out
cmpsl
jle
mov
inc
out
lods
mov
test
aaa
xor
push
mov
adc
scas
cli
leave
hlt
in
sahf
xchg
mov
sbb
pop
loop
mov
mov
add
out
cmp
dec
xchg
adc
xor
push
and
testb
sarb
adc
call
add
inc
or
mov
mov
mov
inc
test
dec
stc
cwtl
add
sbb
push
jecxz
test
lds
lcall
nop
xor
iret
xchg
add
adc
inc
xchg
cmpsl
mov
mov
imul
cld
pop
mul
outsl
cli
and
sub
or
addr16
or
jg
cmp
sub
ja
jnp
jle
into
push
popa
push
push
sarl
lods
movsl
shl
mov
pop
enter
mov
rorb
mov
and
and
jmp
cmc
push
into
mov
push
pop
cld
into
and
fs
cmpsl
icebp
cli
add
xor
xor
aaa
dec
mov
sub
decb
inc
fwait
movsb
inc
inc
jmp
lock
jecxz
push
sbb
int3
push
shlb
test
dec
inc
and
push
xchg
mov
mov
loopne
je
gs
dec
mov
rorl
inc
sub
sub
and
inc
loope
pop
mov
daa
sbb
in
cltd
into
mov
orl
fcoml
inc
stos
cmpsl
cmc
mov
fnstcw
add
out
cld
push
fdivrp
xor
addr16
adc
imul
sar
aaa
lahf
xlat
sbb
xchg
insb
lcall
inc
scas
mov
movsl
xchg
repz
testb
stos
inc
scas
pop
dec
sbb
jmp
adc
dec
int
ljmp
jg
xchg
shrl
xchg
inc
stos
ja
cmpsb
mov
cmpsb
int3
and
mov
aam
pop
mov
xchg
mov
jnp
cltd
cmp
cmpsb
cs
rcrb
out
xchg
mov
pop
iret
shll
dec
or
pop
jg
xchg
cmp
es
or
test
and
inc
lret
xor
lods
jae
push
sbb
test
add
lcall
dec
jb
xchg
out
cld
lock
push
push
inc
mov
dec
ds
xorb
fsub
lret
rol
dec
xchg
inc
dec
add
fisubs
dec
sbb
sahf
jle
inc
jg
xchg
pop
sub
mov
lret
pop
dec
add
jbe
aas
sbb
and
rorb
sarl
xchg
fwait
sub
xorl
dec
dec
push
loope
or
add
fisubrs
sub
xor
ret
notb
adc
mov
ss
pusha
jmp
sbbb
sahf
fdivl
scas
es
xchg
je
xchg
xlat
sbb
icebp
push
jo
jg
xchg
sub
ja
mov
jbe
sub
sub
fwait
push
dec
mov
xchg
mov
cmp
or
pop
sub
dec
out
inc
insl
add
add
call
push
xchg
aaa
sub
daa
pushf
addr16
cmpsl
push
inc
jle
mov
inc
xchg
subl
inc
dec
ja
cmpsl
aaa
out
or
clc
out
lods
iret
mov
mov
stos
inc
xor
mov
in
xlat
into
inc
test
shlb
xchg
push
int3
add
cmpsb
cmpb
lret
lret
mov
mov
jmp
orb
jp
and
mov
lret
sub
dec
xlat
push
jno
jbe
cmp
xchg
sbb
into
sub
addb
fmull
cmpsb
outsb
add
mov
repz
jp
mov
ds
sbb
cli
dec
cmp
inc
icebp
decb
bound
addr16
fisubrs
sub
cmc
xlat
xchg
dec
fyl2x
ljmp
xchg
sbb
inc
jmp
xorb
fsubrl
int3
xchg
jbe
inc
clc
push
lods
and
aas
mov
fcompl
cmp
jo
jbe
aas
ds
sbb
jp
add
repnz
shrl
lcall
dec
jbe
xchg
leave
xorb
jg
sub
ja
cmpsb
mov
cmp
jmp
jle
jb
ficoml
call
pop
inc
add
outsl
fisubs
fadd
dec
ficomps
and
inc
sbbb
or
outsb
push
dec
clc
push
lods
sbb
and
repz
mov
cmpsl
jg
xchg
xchg
pop
inc
dec
ja
cmpsl
xor
mov
dec
clc
xchg
lods
lahf
ds
ljmp
out
sub
inc
mov
dec
dec
and
jmp
cmp
or
and
dec
xchg
xor
jl
mov
int3
lret
mov
add
lcall
jmp
orb
jp
and
adc
xor
mov
mov
icebp
push
jo
jg
xchg
jae
cli
inc
inc
ja
cmpsl
and
cmp
and
mov
ds
dec
pop
mov
fmull
ja
cmpsb
dec
stos
or
xchg
or
mov
ret
cli
inc
mov
xlat
dec
jno
jbe
and
xchg
das
sub
dec
or
dec
mov
jle,pt
mov
cmp
pop
ja
cmpsl
inc
dec
sub
repz
imulb
sub
outsl
mov
add
je
imul
mov
xlat
push
dec
or
outsb
jle
fs
xchg
sub
xor
xchg
ret
push
fmull
sahf
jmp
ds
pop
sub
dec
xor
inc
popf
arpl
addb
stos
cmpsb
xchg
int3
fsubr
ljmp
add
out
out
inc
insl
add
or
jp
sub
cmp
xchg
sbb
lods
icebp
sbb
mov
sub
inc
jnp
pop
cmpsl
pop
dec
cli
fcoms
or
ds
in
xchg
inc
jne
sbb
fcoms
jle
pop
cmpl
icebp
push
jle
mov
sub
inc
jg
pop
cmpsl
pop
dec
fcoml
or
lods
idivl
repnz
shrb
dec
fwait
mov
add
dec
in
icebp
mov
xorb
rorl
pusha
cmpsl
jg
xchg
imul
inc
dec
ja
cmpsl
pop
out
pop
add
fisubrs
sub
dec
sbbl
hlt
lret
cli
incb
ret
dec
scas
add
xlat
lret
lret
popa
shll
pop
jle
fdivl
sbbb
clc
push
lods
sub
xor
adc
leave
xchg
icebp
and
mov
sub
inc
jg
pop
cmpsl
pop
dec
add
xchg
ror
cwtl
dec
or
lods
fstpt
mov
lods
sub
xor
ret
xlat
into
inc
test
fisubl
xchg
push
int3
sbb
cmpsb
xorb
fsub
das
mov
int3
dec
jmp
subb
sbb
sahf
jb
cmp
and
pop
pop
dec
mov
ss
xchg
jg
xchg
pop
sub
inc
inc
ja
cltd
or
fcoml
sar
lcall
sub
addr16
std
clc
inc
sbb
out
inc
popa
add
add
cmpsb
dec
and
aaa
jg
cwtl
or
mov
mov
fsubl
push
dec
add
lods
xor
ret
dec
push
icebp
pop
jle
pusha
jg
xchg
inc
sub
dec
sti
jle
fsubl
bound
pop
clc
push
cmpsl
or
dec
insl
icebp
cmpb
jg
cwtl
adc
andb
fcompl
int3
xchg
or
and
lret
sub
mov
ss
popa
icebp
push
jle
insb
jg
xchg
push
sub
inc
sbb
shll
dec
xchg
pop
sub
inc
aaa
lcall
fldt
jle
ret
ja
cmpsb
xchg
dec
pop
xor
xchg
or
dec
sbbl
xlat
scas
dec
in
icebp
jle
pop
arpl
enter
movsl
add
fimuls
dec
push
icebp
pop
jle
xlat
inc
lret
int3
pop
mov
arpl
add
cmp
sbb
into
inc
fiadds
loop
cmpsb
rorl
insb
xchg
push
int3
je
pop
lods
mov
ljmp
push
js
inc
mov
nop
ds
pop
andl
jl
jge
pop
pop
sub
xchg
aas
jno
rclb
adc
dec
push
es
mov
inc
push
lock
inc
lock
mov
sti
push
xorl
into
and
loope
ret
sub
jo
xor
insb
stos
push
aaa
mull
arpl
movups
cmpsl
jne
fsubl
loopne
mov
gs
fldenv
sti
stos
andl
mov
jg
or
incl
mov
iret
fnstcw
outsl
xchg
and
cwtl
and
notl
popf
jl
or
testb
xchg
ret
cmpsl
xchg
xchg
scas
mov
add
imul
add
adc
idivb
mov
xor
add
gs
out
out
inc
mov
cmc
mov
mov
pop
daa
mov
lahf
inc
add
out
fisubl
arpl
xchg
sbb
loop
dec
sub
sbb
fcmove
push
outsl
pop
push
daa
cmp
rcll
pop
xor
gs
nop
push
xchg
sahf
xcrypt-ctr
cmpsl
sbb
jg
loop
jecxz
into
sub
jp
add
jmp
scas
mov
ja
push
ja
xor
hlt
out
add
fists
dec
icebp
lret
stos
push
adc
sub
add
inc
scas
not
loopne
pop
push
adc
fnstenv
add
mov
adcb
push
rcr
sbb
mov
in
pop
xchg
mov
push
dec
aaa
addr16
ficoms
inc
adcl
push
pop
jb
xchg
scas
addr16
stos
push
pop
mov
sti
in
xchg
rolb
stos
inc
mov
fwait
ret
fisubrs
xor
out
outsb
lret
jbe
enter
testb
lret
movaps
pop
imul
es
loopne
xchg
lahf
jae
cmp
add
daa
fs
mov
mov
test
mov
neg
movsl
test
enter
jl
sahf
inc
mov
jbe
lods
out
imul
inc
cli
clc
jnp
pop
fdivrs
outsl
dec
popf
scas
pop
push
push
sub
mov
les
loopne
mov
bound
jle
shlb
dec
and
mov
cli
pop
and
sbb
add
or
push
jns
cwtl
pop
xchg
insl
and
insb
xchg
out
xchg
pop
out
xchg
ret
xchg
jmp
clc
out
xchg
and
mov
scas
mov
daa
pop
xor
leave
in
and
fcmovu
adc
shlb
jg
sbb
pop
push
mov
call
hlt
ljmp
stos
jg
cmpsl
daa
push
push
ss
cmpsb
insb
dec
fsubrs
fwait
pusha
jbe
mov
push
pop
shlb
subl
xchg
divb
adc
ja
in
mov
fadds
and
leave
lcall
aam
add
dec
mov
and
add
push
push
sub
pop
cmc
scas
jge
shr
mov
daa
outsl
adc
pop
dec
fcoms
inc
lret
push
adc
mov
xchg
shll
jb
fiadds
jns
add
push
xchg
jg
jo
test
lret
xor
fidivl
jno
xor
cmpsl
arpl
les
add
fisttps
out
mov
xchg
xchg
jmp
pop
pop
jmp
dec
paddd
fwait
pop
push
push
into
mov
mov
and
jg
and
pop
inc
or
outsl
icebp
or
push
push
dec
out
pop
pop
pop
ret
fildll
cmp
push
cmpsl
push
push
push
imul
int3
test
sbbb
pop
push
ds
enter
sub
decb
lods
jno
imulb
ja
mov
pop
nop
fldcw
or
les
jg
xor
aaa
and
outsb
lods
mov
popf
loopne
mov
sub
pop
pop
mov
dec
inc
and
movsl
movsl
mov
mov
or
xchg
lcall
int
cmpsb
lock
pop
cli
or
xchg
cli
or
fcmovnu
pop
int
cmpsb
mov
or
lcall
mov
xor
stc
ds
pop
bnd
mul
lods
out
push
lods
push
clc
jnp
inc
popf
mulb
out
flds
fsubrl
aas
cltd
cmc
push
pop
or
insb
cmpsb
adc
rorl
pop
push
inc
inc
xchg
jae
mov
lds
mov
das
push
sti
jg
pop
addl
clc
aad
mov
xor
sarb
mov
xlat
dec
lock
iret
jbe
inc
iret
and
xor
sub
sbb
xor
and
cmp
add
cmp
ljmp
adc
inc
in
sbb
sub
and
xor
sub
sbb
xor
sbb
scas
stc
insl
mov
aas
dec
cmp
dec
sub
pop
pop
sbb
pop
outsl
sub
pop
ljmp
pop
cvtps2pi
pop
das
sub
mov
pop
fildll
pop
out
cs
jle
clc
or
cmp
ljmp
sub
pop
jae
mov
add
xchg
add
ds
lock
in
inc
dec
sbb
jle
cmp
xchg
xor
es
xor
daa
or
jbe
pop
sarl
dec
jns
jg
push
jae
push
pop
mov
push
jo
dec
sub
cmp
jg
push
rcrb
add
inc
xlat
and
adc
lods
test
push
pop
mov
mov
mov
xor
add
push
push
adcl
test
push
fimull
jg
lods
xlat
aas
out
outsb
clc
clc
ja
movsb
or
inc
into
sbb
adc
ljmp
ljmp
or
jmp
mov
vpsrlw
fidivs
dec
mov
or
outsl
mulb
int
ret
in
div
in
enter
mov
adc
repnz
repz
mov
jp
fbstp
out
icebp
scas
cmc
adc
sbb
test
jns
les
mov
jns
and
mov
dec
imulb
notb
stc
loope
hlt
in
int3
fiadds
cld
pushf
into
inc
cmc
jno
js
inc
sahf
pop
cwtl
in
push
jge
pop
jb
inc
sahf
fidivrl
dec
fiaddl
icebp
push
rorb
stc
cmp
adc
xor
sub
int
out
subb
and
ss
mov
mov
in
sbb
jnp
mov
push
inc
sbb
ss
sub
daa
sbb
jbe
pop
sbb
into
lock
xor
push
mov
enter
adc
test
fs
gs
aam
cmc
fdivp
in
mov
ja
imul
out
sbb
inc
pop
test
mov
jo
imul
or
xor
push
lret
icebp
mov
mov
outsb
lds
andb
mov
and
scas
mov
add
in
adc
fidivrl
into
in
fcmovbe
dec
cmc
xchg
hlt
aas
shrb
cmc
and
and
mov
loop
clc
in
testl
aam
jne
or
dec
lahf
imul
add
nop
andl
sub
jp
std
pop
or
pop
jne
sbb
in
fsts
repnz
aas
pavgw
fiadds
jmp
xchg
sbb
adc
sbb
adc
repz
adc
or
xlat
dec
loop
orb
lods
xchg
enter
mov
ds
xchg
clc
xrelease
daa
bt
jbe
pop
sarl
outsb
lods
outsb
int
mov
push
mov
jae
push
push
jae
push
sub
jl
pop
jo
push
in
fistl
pop
ds
repnz
inc
adc
stc
pusha
inc
lea
ljmp
sub
sbb
push
enter
fmul
in
out
fnstenv
ljmp
cwtl
jmp
popf
in
mov
std
je
sub
movsb
sub
and
mov
jmp
in
sti
lret
mov
mov
xchg
popf
hlt
mov
test
adc
dec
movsl
inc
mov
ret
mov
ret
pop
ret
push
lret
sub
pop
fldt
pop
jmp
in
sti
sub
sbb
fiadds
fwait
ds
adc
in
xor
rclb
hlt
mov
mov
movsl
rolb
xchg
rclb
test
pusha
cmc
jne
jo
rolb
cmc
push
rclb
cmc
inc
shlb
cmc
xor
rol
scas
loope
hlt
lcall
loopne
cs
negl
xor
mov
idivl
push
testl
in
imull
in
idivl
in
test
in
imul
in
idiv
in
aam
adc
add
jne
xchg
in
adcb
jne
adc
jns
cmp
movsl
je
sub
xchg
mov
fisubl
in
cli
movsl
aam
mov
add
fwait
add
pop
stos
add
adc
xchg
mov
shll
inc
ret
push
ret
pusha
ret
jo
lds
ret
adc
inc
lds
ret
xor
and
jp
and
cmc
jmp
xor
fsts
xorb
inc
notb
fldenv
jne
jo
gs
lock
xor
es
xor
fsubrl
in
std
nop
fdivs
push
call
inc
aad
nop
jmp
mov
mov
movsl
jmp
push
lock
adc
push
lock
iret
or
cmp
iret
sub
sbb
pop
les
in
adc
jno
adc
dec
and
and
imul
ss
push
or
dec
cmpsl
add
push
sub
xchg
add
outsb
lds
ret
and
xor
mov
rolb
push
loopne
cmc
inc
lock
lds
rol
mov
shll
push
ret
pusha
ret
jo
lds
ret
adc
inc
lds
ret
xor
filds
es
movsl
and
pop
mov
mov
jno
insb
jne
push
cli
jb
push
or
push
sbb
push
sub
out
jbe
xor
or
es
mov
in
testl
dec
adc
jle
sbb
pop
sub
pop
cmp
pop
leave
push
mov
pop
jmp
pop
into
fistpll
pop
cs
outsb
fimull
clc
lods
ljmp
in
mov
in
lcall
in
cmp
xchg
cmpsb
push
adc
insb
movsl
xchg
mov
shlb
mov
lock
adc
cmpsl
es
mov
inc
mov
push
adc
mov
rorl
push
ret
bound
sub
sub
lret
lcall
push
dec
test
inc
test
pop
test
jns
jbe
adc
stos
push
and
lcall
test
push
stc
sbb
mov
jp
dec
fisubrl
push
xorb
mov
push
xchg
jb
push
lcall
push
push
jae
push
bound
push
push
pop
add
pop
int
mov
push
xchg
push
int3
adc
jp
lea
idiv
pushf
inc
out
sbb
lahf
xchg
mov
push
mov
stos
rcrl
outsb
push
test
jmp
xor
out
jmp
out
popa
push
xchg
jb
push
mov
jb
push
mov
mov
inc
dec
subb
pop
leave
push
lret
push
ret
cmp
sub
pop
pop
jp
inc
fiadds
push
sbb
mov
ds
popa
push
push
pop
jge
dec
pop
jne
xchg
or
push
jbe
sub
pop
rcll
push
mov
pop
jmp
push
into
cmp
notl
out
fists
stos
out
dec
sub
pop
jns
dec
pop
jne
xchg
or
sub
outsb
pop
and
push
cmp
adc
inc
rcrb
cmc
sub
and
xor
sub
or
out
lods
jmp
or
sub
int
jmp
shr
lcall
in
dec
ljmp
pop
ljmp
push
ljmp
sub
sbb
xor
and
mov
dec
jecxz
jle
fsubs
ss
jnp
xlat
push
test
adc
sbbl
jbe
aas
fldcw
mulb
fnstenv
cli
adc
xor
pop
ljmp
mov
fstps
cmc
mov
stos
cmc
mov
pop
divb
push
pop
fnstenv
arpl
cli
testb
jae
imul
cltd
jo
imul
sub
dec
movsl
mov
bound
jo
push
mov
add
lds
rclb
fsubl
scas
xor
es
in
ficompl
or
fimull
insl
loop
hlt
stos
ljmp
cmp
insb
and
je
mov
sbb
jb
and
lcall
and
sub
and
sub
aaa
out
es
and
pop
test
push
insb
test
pop
and
test
push
int
mov
fbld
mov
pop
mov
ss
push
sub
pop
jne
mov
add
sbbb
rclb
adc
cmc
imul
cmc
sti
psllq
mov
mov
push
inc
repnz
mov
loopne
add
inc
fcoml
shrb
mov
jp
xchg
fpatan
cltd
adc
cmc
sbb
negl
lods
iret
out
pop
aaa
xor
insl
addl
std
cmp
repz
mov
scas
in
fs
mov
lret
out
xorl
mov
jp
push
push
or
sub
or
xchg
xchg
cmp
push
lds
lds
jmp
jae
test
adc
imul
lahf
mov
das
jo
cmp
cmc
adcl
outsb
jle
scas
es
scas
xchg
popf
out
mov
ret
mov
iret
push
mov
adc
cmp
and
pusha
xchg
hlt
in
sbb
cmp
out
loope
iret
loopne
loope
mov
fldl
mov
pshufw
mov
dec
repz
xrelease
enter
lea
scas
lds
addr16
push
xor
test
inc
lods
cmp
lret
sub
add
and
pop
cmp
jl
outsl
pop
loop
enter
mov
cmpl
sbb
push
push
cwtl
popa
clc
mov
or
xchg
fldenv
cwtl
add
aas
rclb
ja
pop
dec
jge
inc
push
xchg
loop
enter
xchg
sub
mov
jl
lea
mov
mov
dec
adc
mov
add
mov
aas
push
dec
jmp
sbb
aaa
add
xor
repnz
xorl
cmc
inc
into
dec
adc
psubw
mov
xor
popa
sysexit
pop
and
fldcw
sbb
addr16
add
or
in
stos
jmp
jb
xchg
std
jns
add
lahf
fs
add
add
enter
or
push
cmpsl
repnz
fdivrl
or
ljmp
jecxz
cmc
outsb
in
negl
mov
mov
imul
sub
push
scas
je
xor
sbb
lods
xchg
fwait
popa
mov
test
test
adc
nop
jp
inc
addl
lahf
iret
lods
out
test
cmp
push
adc
or
xor
cmc
pop
sarb
dec
rorb
cmc
inc
rcrb
cmc
cmp
xor
adc
rorb
push
dec
sbb
pop
cmpsb
test
mov
adc
sbb
sbb
cmpsb
jno
sbb
sbb
add
and
loop
stc
xor
aaa
icebp
mov
ficomps
or
aaa
ja
sub
jmp
sbb
xorb
push
cmc
adc
inc
inc
and
stc
dec
cmpsb
xlat
cmp
outsb
iret
addr16
adc
mov
inc
aam
scas
inc
xchg
test
dec
addr16
ljmp
ret
sub
sbb
cltd
call
mov
sarb
out
mov
repz
mov
in
dec
inc
fsubrs
rep
sub
mov
idiv
adc
add
sub
jmp
sub
pop
ret
add
push
xchg
inc
cltd
pop
ffreep
in
js
aas
pop
push
aam
push
sub
mov
push
sbb
mov
push
jp
stc
mov
sbb
cmc
mov
movsb
leave
push
or
and
mov
outsb
call
int3
repz
push
adc
push
pop
xor
add
shll
cs
in
loopne
pushl
adc
jne
push
sarb
push
ss
push
or
sub
sub
pusha
insl
ret
push
pop
fstl
jmp
push
fiaddl
icebp
inc
clc
out
add
arpl
mov
pop
inc
sub
push
push
outsl
pop
sahf
or
jno
add
je
out
and
mov
or
or
inc
ljmp
cld
sub
sbb
mov
les
movl
js
push
mov
xchg
out
mov
dec
loopne
stc
and
sub
add
dec
mov
hlt
insb
aas
lcall
adc
mov
xchg
or
sbb
ds
loop
clc
hlt
push
sbb
inc
mov
xlat
test
dec
adc
mov
adc
cmp
fistpl
orb
lock
mov
les
imull
xchg
std
hlt
ja
xchg
outsb
jmp
jno
sub
enter
mov
sub
daa
cli
mov
mov
adc
lods
or
fnsave
call
aaa
push
pop
pop
push
lahf
hlt
mov
stos
jbe
sarb
cmc
xchg
rorb
xchg
fwait
xchg
sub
and
sub
and
sub
daa
lock
jmp
mov
pop
adc
mov
lods
adcl
add
adc
sbb
adc
cli
into
rcr
push
ss
and
pop
mov
jnp
push
testl
inc
push
stc
loop
std
cs
mov
or
decl
je
movsl
xor
pusha
aam
shll
lcall
repnz
push
mov
pop
sbb
out
pop
cmc
test
xor
jne
mov
jmp
mov
xchg
xchg
dec
cmc
pop
outsl
push
jo
shlb
rcr
js
fistpl
push
sbbb
adc
jno
sub
insb
shr
sub
frstor
sbb
pop
cld
sub
or
test
ja
adc
xor
clc
jbe
lret
fstpt
sub
dec
fcoms
jl
pusha
mull
xchg
xor
or
adc
lods
in
cmpsb
add
lret
or
notb
out
lret
or
xor
jmp
adc
pop
xor
mov
loope
scas
xorl
mov
outsl
push
js
std
mov
sub
into
pusha
push
addl
pop
jne
and
sub
push
insb
test
and
out
xchg
aam
push
std
add
mov
iret
out
push
or
lock
cs
in
jmp
rclb
addr16
adc
fwait
mov
mov
jae
pavgb
push
inc
rclb
cs
mov
sub
xor
add
add
js
lret
movsl
mov
and
xor
mov
cs
rclb
push
subb
out
or
imul
mov
xor
adc
repz
or
out
sbb
movsl
jbe
push
sbb
lods
aad
or
ret
xchg
iret
movsb
aam
mov
call
inc
jns
sub
push
stos
cmp
lock
sub
clc
xchg
ficompl
js
ds
push
cmpsb
dec
xchg
out
fldt
pushf
adc
lods
xchg
adcb
mov
push
ret
test
jge,pn
stc
mov
xchg
xor
push
addr16
xlat
mov
dec
imul
dec
cmpsb
jmp
mov
inc
ljmp
enter
sub
cmpsl
push
mov
adc
mov
cmp
sahf
je
xchg
xchg
sub
outsl
fwait
xorl
jae
ljmpw
fbstp
ss
icebp
jo
push
jb
arpl
test
dec
push
mov
std
outsl
out
in
jno
mov
and
jnp
outsb
fbstp
mov
roll
push
add
rcrl
call
inc
and
out
popf
and
inc
pop
pop
sub
push
jno
adc
cmp
inc
push
xchg
cmpsb
jbe
orl
inc
cmp
adc
inc
jp
xchg
sub
in
inc
repnz
out
push
mov
fstpt
jp
lret
lds
mov
xchg
inc
dec
mov
sub
dec
les
ret
push
ret
es
cs
ss
xlat
mov
mov
inc
clc
dec
in
in
mov
jmp
pushf
or
js
je
sub
popw
xchg
fiaddl
icebp
cmc
mov
adc
int
sbbl
subw
jbe
je
inc
and
push
nop
add
das
and
add
dec
xchg
jp
dec
lods
jae
frstor
jno
shrl
scas
jge
stos
fimull
push
mulb
pop
jnp
push
pop
mov
mov
cvttps2pi
fcoml
add
push
xchg
jmp
push
movsl
jp
pop
mov
scas
test
out
aad
mov
stos
adc
mov
adc
jno
ds
lods
pop
push
dec
adc
movsb
pushf
adc
xchg
adc
popf
mov
xor
fnstenv
dec
imul
or
mov
fstpl
push
cmc
das
jnp
and
mov
les
mov
in
jo
inc
xchg
jno
ss
jno
lea
sub
push
xchg
rorb
jnp
push
cmp
pop
test
inc
addr16
in
fisubs
mov
filds
add
iret
lcall
pop
call
cmp
jle
enter
adc
add
pop
push
xchg
push
js
ss
out
or
ds
inc
sub
pop
pop
sub
data16
jmp
popf
xor
jle
add
ljmp
or
xchg
addr16
or
cmp
sub
or
int3
adc
lea
and
lahf
loope
and
sbb
xor
sub
add
xor
in
test
mov
jp
jae
push
pop
aas
imul
and
orb
aam
cltd
adc
ja
add
insb
adcl
stos
rcll
xor
hlt
mov
int3
sbb
mov
int3
call
into
ljmp
mov
add
push
mov
xchg
dec
lcall
test
ds
or
ss
mov
dec
jae
notl
pop
jle
movsl
jb
sub
stos
test
sub
data16
cmc
mov
dec
addl
repnz
pop
mov
ss
gs
fs
cmp
cmpsl
fists
adc
cwtl
cld
push
cmc
aas
rorb
das
les
push
push
arpl
push
xorl
hlt
mov
int3
loope
sahf
push
in
idivl
pop
fnsave
adc
leave
and
es
cmc
lret
push
xchg
cmp
cltd
mov
add
push
jg
add
ja
and
lret
nop
jp
out
repz
shrb
cmp
and
imul
or
xlat
scas
lock
leave
inc
pop
sbb
adc
aad
cld
in
pop
sub
orl
cmpsb
mov
dec
scas
pop
pop
stos
xchg
frstor
scas
lods
push
jmp
shrb
xorl
adc
cmc
dec
rorb
cmc
cmp
push
xor
jge
mov
fisubrl
icebp
and
and
pop
pushf
cld
xor
pop
inc
push
add
mov
mov
jb
sbbb
enter
mov
jbe
cmp
jg
sub
pop
fldcw
mov
mov
mov
cmpsb
pop
mulb
sarl
mov
aaa
lods
adc
repnz
in
dec
and
and
sub
sub
lret
cmp
loope
xchg
js
mov
in
movsl
sarb
pusha
fisubrl
lahf
pushf
xchg
push
fists
push
iret
or
popf
fbstp
imul
xchg
lods
mov
js
mov
jae
xchg
mov
js
sub
xlat
outsl
test
cli
hlt
sub
ficoml
repz
mov
leavew
jo
cmp
sbb
add
adc
jmp
popaw
mov
sub
jnp
out
stos
fdivrl
shrl
sub
sbb
sbb
std
inc
cld
add
jnp
sub
repnz
pop
je
repnz
cmp
iret
sbb
mov
xchg
inc
cli
add
add
adcl
out
push
jle
push
and
and
xchg
loop
xchg
jge
mov
cmp
inc
mov
adc
in
pop
or
pop
xchg
test
sbb
fistps
cmp
pop
dec
dec
lea
push
push
loope
out
in
inc
adc
and
xchg
push
mov
ret
int3
xchg
rcrb
mov
dec
mull
test
lret
ss
pop
inc
mov
int3
mov
xchg
imul
add
push
lea
jmp
ljmp
sbb
subb
pxor
xlat
push
lcall
push
ss
xchg
cmp
mulb
xor
cmp
mov
push
cltd
jg
pop
inc
lods
leave
sbb
jno
xor
pop
push
aas
mov
movl
repnz
sbb
seta
dec
aam
mov
jnp
push
sbb
inc
dec
adc
cltd
repz
adc
cwtl
xchg
jb
mov
int
jbe
or
clc
lret
sub
dec
test
push
mov
ret
sbb
or
mov
sub
in
dec
mov
inc
sub
fdivp
push
jl
in
mov
xor
pop
and
cli
or
lahf
pop
or
call
fdivrl
pop
or
mov
and
adc
jne
sub
push
jae
xchg
xor
adc
loopne
out
or
negl
in
loope
popf
pop
xchg
push
sbb
cmpxchg
subb
pop
sub
lahf
inc
xor
lods
inc
xchg
jecxz
stos
ds
mov
lret
adc
xchg
arpl
push
arpl
repz
push
add
mov
aas
push
push
inc
inc
push
jg
dec
jle
scas
fcoms
add
mov
mov
cld
adc
jns
sarb
sub
mov
mov
mov
xor
jmp
aad
jne
iret
inc
negb
lods
add
je
and
sub
lock
xor
leave
or
in
movsl
mov
sub
imul
dec
sub
inc
sub
cmp
push
test
push
popa
dec
bound
scas
hlt
test
inc
cmpsl
shll
xlat
sub
pop
adc
add
in
push
sbb
scas
and
dec
adc
inc
inc
push
dec
int3
xchg
mov
jge
movsb
push
mov
push
dec
jae
push
cmc
cltd
rorb
lea
in
mov
and
and
push
xchg
or
cmp
add
ret
dec
pop
push
xor
ja
dec
mov
jl
mov
mov
adc
cs
adc
and
pop
iret
ja
adc
cmp
leave
je
ds
out
pop
mov
lods
sbb
mov
mov
pop
xor
in
mov
xlat
popf
and
mov
or
adc
xchg
dec
inc
adc
mov
add
pop
mov
ret
lock
scas
cmp
scas
push
popf
jb
inc
loope
xorb
mov
out
fnsave
mov
or
jns
dec
mov
shrl
adc
fisubrs
into
sub
pop
mov
leave
adc
stos
ljmp
leave
outsl
xor
in
addr16
scas
pop
testl
pop
shlb
mov
pop
orb
cmpsb
xchg
sbb
jb
inc
lcall
xchg
js
push
lea
jae
and
iret
sbb
test
shlb
mov
imul
imul
popa
add
inc
pop
xchg
xchg
ljmp
push
flds
push
enter
xchg
lret
push
mov
xchg
add
ds
jecxz
push
clc
lods
fisubl
sub
out
add
sbb
adc
not
es
jg
push
inc
lods
ds
iret
dec
outsl
mov
mov
cwtl
sub
xor
and
pop
inc
cli
xorl
in
and
scas
mov
fdiv
sub
adc
cmc
lahf
adc
push
sbb
or
jnp
dec
fidivrs
popa
or
xor
jns
push
jae
sbb
ss
loope
sbb
subb
and
pop
std
int
lock
cwtl
outsl
mov
adcl
inc
add
inc
popf
dec
sbb
jns
dec
mov
cld
mov
dec
scas
jp
cwtl
xchg
repz
jmp
mov
shlb
pop
or
movups
mov
stc
repz
in
sbb
rol
pop
mov
jb
imul
cli
jp
sahf
cmp
jns
mov
int3
push
mov
pop
sti
inc
mov
mov
mov
mov
sub
pop
test
lret
in
cli
mov
push
jns
or
aam
inc
fcoms
out
loope
stos
aas
paddusw
cs
call
fs
xor
lahf
push
inc
jno
push
inc
dec
mov
pop
mov
cmpsl
repz
mov
jno
out
leave
push
ficompl
cltd
push
sub
sbb
out
inc
dec
push
ljmp
xor
add
or
push
sbb
mov
jle
and
mov
and
fildll
push
xchg
sub
adc
bound
out
dec
adc
mov
cli
ret
cs
pop
inc
repnz
push
sbb
pop
mull
lret
outsb
adcl
push
inc
jnp
ljmp
movsl
sub
rclb
inc
xor
call
jp
xchg
cwtl
xchg
mov
test
inc
shlb
or
xchg
inc
pop
fdivrl
sbb
dec
jge
inc
mov
add
adc
fisubs
fdivr
adc
mov
dec
and
shlb
and
mov
repnz
add
jb
ljmp
loopne
popa
rcll
dec
adc
jbe
lock
mov
hlt
iret
xchg
mov
jl
fdivrl
into
cs
dec
enter
sub
scas
jle
mov
xchg
es
push
xchg
xorl
out
popa
mov
mov
and
ljmpw
rclb
xchg
adc
aaa
rorb
cmpsb
inc
repnz
sarl
push
pop
fwait
test
dec
call
sahf
jb
repnz
movb
fimuls
pop
mov
push
jb
testb
mulb
fmul
lock
pop
out
cmp
inc
fstpl
inc
pop
xchg
mov
and
and
ja
ja
lret
stos
insb
push
xchg
add
mov
inc
inc
jmp
mov
ljmp
insb
in
pop
fsubrs
arpl
out
cs
hlt
imul
ja
mov
adc
stos
xchg
sub
inc
xchg
call
mov
ljmp
jo
mov
sub
repz
outsb
adc
cmpsb
cmpsb
subl
dec
cmp
es
sbb
xor
mov
stc
dec
lcall
sub
adc
push
mov
inc
stc
iret
xor
jecxz
cmc
ficomps
sbb
enter
push
mov
fisttpl
lret
pop
xchg
jbe
lock
pop
sub
pop
push
push
daa
inc
into
jb
pop
adc
je
add
push
xchg
sahf
mov
es
xor
stc
mov
sbb
pop
aaa
pop
shrl
and
mul
or
pop
dec
bound
cmpsl
in
test
mov
ljmp
jmp
push
mov
dec
push
ret
mov
daa
clc
fldl
aam
jno
inc
loopne
hlt
out
mov
sbbl
lods
cmc
push
js
push
pop
fdivs
jge
cmp
adc
mov
data16
add
inc
mov
mov
xchg
bound
sub
and
pop
push
mov
add
pusha
adcl
push
mov
jge
pushf
cmp
sub
mov
fsub
cli
jle
sbb
cmp
in
push
int3
enter
mov
outsl
sub
or
mov
xor
mov
inc
test
mov
fdivrs
lea
sbb
mov
sub
test
xchg
aad
test
sbb
sahf
test
xorl
cs
mov
lahf
inc
sbb
lea
cmp
js
int3
sti
frstor
add
and
sti
dec
fidivrs
int3
jno
scas
inc
cld
repnz
test
les
in
sbb
adc
mov
fimull
jno
xor
cmp
jnp
jl
pop
push
loopne
pusha
jecxz
cmc
inc
cmp
ret
adc
iret
mov
jle
mov
adc
addr16
stc
int3
dec
xchg
enter
and
pop
divb
fldcw
xor
cmp
das
jb
test
loope
loope
test
shrl
jg
mov
jnp
int3
js
ds
in
outsl
lret
dec
or
call
icebp
jb
int3
dec
adc
pop
xor
xchg
xor
add
loop
pop
loope
jnp
inc
dec
inc
xchg
inc
and
mov
mov
loope
mov
jns
dec
mov
in
insl
pop
or
or
push
push
pushf
aad
dec
sub
call
aad
mov
ljmp
aad
fst
dec
scas
pop
adc
xor
cli
shl
cmp
sarb
je
cmp
hlt
ret
and
icebp
mov
sub
subb
mov
out
subb
js
outsb
pop
mov
jns
cmp
add
sbb
fcoms
ja
mov
cmp
inc
or
cmp
out
sub
fisubs
iret
pop
cmp
jb
mov
pop
pop
clc
mov
or
lods
outsl
loope
and
notb
mul
xchg
xchg
inc
push
fiadds
sub
xchg
sbb
sbb
aad
push
sbb
inc
jno
les
stos
mov
sbb
repnz
scas
sbb
out
mov
jb
xor
add
xor
jl
dec
lahf
and
jbe
mov
push
and
enter
xchg
std
leave
mov
lahf
stc
mov
testl
mov
das
cld
cld
mov
and
daa
xorl
stc
cmp
xchg
xchg
push
or
mov
mov
and
jp
mov
jne
xchg
push
data16
das
loopne
adc
cld
mov
xchg
jns
add
stos
insw
in
lcall
in
mov
divl
jecxz
and
xchg
les
and
in
sbb
scas
cmp
popa
imul
mov
imul
scas
in
int
jns
fldt
out
testl
iret
pushf
out
mov
pop
stos
pushf
cs
mov
add
dec
jb
popa
arpl
xor
es
idivl
in
xor
iret
xchg
fbstp
xchg
rorb
jns
ds
xor
push
push
jmp
aad
sbb
rcrl
popf
xor
daa
or
inc
or
hlt
lcall
mov
cmpsb
inc
cltd
cmp
insb
jnp
mov
jl
loop
ljmp
ret
movsl
mov
rcll
mov
and
add
data16
inc
mov
aad
push
sub
pushf
sub
adc
sbb
loope
fmuls
jecxz
inc
div
push
add
xchg
daa
dec
xchg
movsl
sbb
jg
push
das
sbb
mov
shl
in
enter
orl
fxch
stc
rcrb
add
jg
clc
cltd
or
out
movsb
movsl
sub
mov
ds
adc
push
outsb
xlat
sub
add
iret
adc
inc
jp
pop
pop
add
mov
das
and
mov
inc
shrb
mov
mov
stos
pop
xor
lods
mov
rcr
cmp
pusha
pop
cmp
jge
sbb
cwtl
jp
inc
movsl
jb
sub
stos
sti
cwtl
jae
push
jl
fcomip
add
and
xchg
push
test
cltd
ds
js
jo
cmc
jb
insl
cmc
xchg
mov
int3
cli
sbb
adc
not
shr
test
inc
jae
xor
jg
cltd
repnz
stc
cmp
scas
xchg
sahf
xchg
mov
cmp
in
or
xor
das
and
jns
sbb
mov
xor
int3
mov
mul
and
dec
into
xor
adc
add
mov
popf
xorl
lcall
fstl
lahf
call
inc
cmp
in
jle
jbe
and
push
es
aaa
xor
dec
hlt
sarb
icebp
lock
pop
pop
into
jb
sub
push
xor
js
add
outsb
xchg
cmp
jg
addl
stos
xchg
or
outsb
xor
jne,pt
mov
rol
jne
xchg
mov
cmp
sbb
jl
mov
dec
int3
imul
cmpsl
lcall
cmp
pop
add
pop
xchg
dec
lods
jb
push
xor
adc
std
adc
or
sub
pop
add
insl
push
cmc
sub
mov
cmc
sbb
clc
xchg
fmuls
jle
test
dec
inc
cmc
test
sahf
xor
int3
icebp
sbb
xchg
lods
ret
jae
arpl
in
sahf
fs
or
pop
jne
mov
pop
mov
insl
fadds
scas
xchg
ret
in
dec
fidivrl
clc
clc
loopne
mov
cmp
sbb
movsb
shrb
fucom
loope
cwtl
cmp
adc
cli
adc
inc
scas
std
pop
data16
cltd
loop
roll
pop
mov
jne
xchg
mov
in
sub
add
fnclex
cwtl
adc
add
pop
sbb
das
jne
out
pop
push
clc
sbb
add
cwtl
adc
pop
test
add
sub
stos
xchg
das
pop
push
lret
jno
cmpsl
mov
or
daa
cli
inc
pop
jno
xor
int
sbb
jle
lea
xchg
in
ds
out
in
add
cld
clc
push
sub
fcoms
jle
sub
addr16
pop
hlt
xor
incb
cs
or
scas
js
pop
jecxz
jbe
add
hlt
jp
hlt
cmp
mov
pusha
cmp
xchg
mov
out
add
add
cwtl
outsl
cmp
loope
jecxz
push
add
shrl
test
aad
mov
outsl
mov
testb
iret
jae
lret
add
cmpsl
pop
jmp
es
ret
cmp
in
cwtl
addb
fiadds
nop
lods
jb
sbbl
imul
and
jae
mov
idivb
aad
sub
sbb
hlt
adcb
arpl
fwait
pop
cwtl
jl
inc
into
cmp
aam
lahf
pop
clc
adc
shll
lcall
test
dec
fildll
dec
add
enter
add
sbb
ss
xchg
add
mov
std
dec
icebp
out
xchg
push
aaa
hlt
sbbl
mov
mov
cmp
push
mov
jae
loopne
insb
and
xchg
sbb
mov
enter
sbb
cld
pop
mov
test
stos
cmpsl
mov
movsl
jnp
dec
pop
clc
jbe
add
add
popa
jle
or
xor
jge
cmp
mov
insb
cld
ljmp
or
daa
xchg
xlat
push
lock
xchg
dec
insl
sub
xor
jmp
std
cmc
popf
gs
out
dec
fdivrs
mov
and
lds
jae
mov
sbb
lock
shlb
lret
sub
negl
mov
sar
ds
enter
push
and
adc
ds
mov
aam
push
scas
outsl
adc
add
iret
mov
sbb
push
adcb
rcr
pop
out
mov
xchg
mov
jmp
test
lahf
pop
inc
pop
ret
and
or
push
sub
mov
sub
stc
cwtl
xchg
jb
inc
cmp
xor
mov
mov
ljmp
push
jl
cmp
gs
rcr
push
es
xor
sub
adc
cld
ss
lcall
leave
mov
mov
ret
and
ss
and
sbb
sub
or
dec
js
push
cmpsl
add
sti
mov
cmp
clc
repnz
jmp
and
nop
adc
arpl
shll
es
push
adc
jns
aas
cmp
imulb
mov
mov
jae
fstp
insl
inc
or
in
dec
xchg
leave
sbbb
out
loopne
int
insb
aam
rcr
test
dec
push
test
xchg
inc
insl
xorb
or
mov
sbb
jp
sbb
cmc
jbe
ficompl
stos
or
sub
test
andb
dec
je
lods
insl
jae
movsl
pop
jno
inc
or
in
pop
fbstp
inc
js
inc
push
sarl
sbb
cwtl
jge
push
mov
or
adc
or
repz
jmp
cmpsb
orl
movsb
sub
mov
fcoms
mov
adc
es
push
mov
jg
dec
sub
mov
lds
push
inc
cltd
dec
cmp
xchg
jnp
mov
ret
mov
mov
iret
outsl
push
outsl
or
loop
mov
call
fadds
or
lock
xor
aas
ret
js
pop
adc
int3
jge
xchg
pusha
push
fsubr
lods
out
hlt
push
lahf
cwtl
push
push
loop
dec
mov
cmp
dec
fists
cli
mov
add
mov
sub
jecxz
or
jp
mov
and
xchg
adc
mov
pop
out
push
daa
pop
mov
movsl
jmp
xor
or
cmp
cmc
inc
sbb
and
cmp
pop
pop
repnz
xchg
std
jmp
mov
push
mov
fists
ret
jne
cmpb
sub
ja
in
div
push
lret
es
movsl
dec
mov
fstpt
repz
push
rcr
cs
xor
xchg
jns
mov
lahf
cs
mov
inc
sbb
test
or
mov
and
xor
jmp
dec
cmp
mov
jl
aaa
pop
ffree
mov
addr16
add
mov
cmc
lahf
cli
es
push
cmp
aas
dec
icebp
sbb
inc
jp
inc
mov
inc
lret
inc
notl
mov
scas
adc
mov
enter
mov
inc
xchg
stos
push
add
in
or
pop
in
jo
xor
adc
pop
jnp
push
or
in
inc
faddl
sub
ret
das
aam
out
sbb
mov
ss
pop
dec
pop
inc
push
inc
add
jo
jo
sub
push
jle
mov
fs
bound
stos
popa
pop
push
and
pop
adc
and
loopne
aas
ret
push
cwtl
push
int
sbb
movsb
or
sub
lods
jb
jne
push
xor
sub
in
in
cmpsb
mov
in
jmp
or
std
in
aas
pusha
hlt
push
adc
push
scas
call
lahf
mov
mov
jbe
inc
out
movsb
test
iret
push
jno
adc
xlat
lcall
mov
sub
jae
pop
lahf
cld
data16
loop
mov
adc
test
and
mov
sub
shlb
filds
adc
pop
dec
cwtl
dec
push
push
mov
xchg
xor
jo
lret
jnp
pop
push
int
push
dec
push
test
mov
cld
pop
inc
cmpsl
or
pushf
insb
xlat
fcmovbe
aam
stos
and
push
xor
dec
std
mov
xor
jbe
add
push
xor
and
fsubl
insb
xchg
and
divl
jmp
mov
repz
dec
push
imul
out
pop
iret
pop
insl
mov
jo
add
aad
sbbl
jl
repnz
je
std
icebp
xor
adc
mov
sub
aad
cmp
sbb
push
mov
sarb
lahf
fidivrs
repz
dec
mov
add
insb
sahf
inc
sub
aam
mov
lods
clc
xchg
and
sub
movsb
sbb
and
push
add
lea
push
sub
js
aaa
or
mov
stc
cmp
icebp
and
sbb
ss
fnsave
ss
jnp
int3
inc
ja
negl
xor
mov
push
push
push
aam
sti
mov
cmc
dec
adc
test
repnz
je
push
sub
inc
push
shlb
daa
mov
and
shrb
sbb
dec
and
xchg
adc
or
mov
sub
mov
jbe
gs
cmp
shl
fucom
push
inc
mov
mov
sub
adc
mov
mov
sti
fcoms
jp
lcall
pop
sub
cmp
cmp
sub
fldl
les
cmpsl
int
call
pop
jg
je
stc
cmpsb
mov
xchg
inc
dec
icebp
arpl
push
pop
dec
sbb
sub
cmp
mov
hlt
jge
push
ja
push
mov
fisubs
jmp
int
mov
mov
mov
je
hlt
insl
iret
fs
jbe
shll
cld
call
imul
add
scas
ljmp
sub
mov
mov
add
rcr
or
fsubr
icebp
iret
loopne
adc
call
out
adc
inc
es
call
mov
pop
xchg
cltd
mov
bound
push
sub
adc
inc
leave
mov
and
sub
and
sub
and
sub
pop
or
mov
add
xorl
sub
arpl
xor
in
idivl
rcll
insb
adc
addb
and
sub
push
or
notb
cmp
mov
inc
scas
mulb
js
lock
aam
lods
movsl
xchg
clc
or
sub
dec
roll
add
xchg
fs
hlt
lahf
xor
pop
jb
mov
sub
sahf
xor
loop
mov
cmpl
mov
dec
aad
repz
xchg
mov
cltd
lods
xor
jge
xor
ljmp
pop
ret
mov
jbe
repnz
rorb
push
pusha
rorl
daa
pusha
xor
call
dec
fsubs
inc
cld
mov
cltd
pop
inc
into
inc
mov
pop
or
pop
jnp
inc
sti
lds
sbb
sbb
push
and
adc
test
and
xor
mov
push
in
xchg
hlt
jne
or
push
or
and
push
fistps
push
testb
push
jge
inc
and
sysret
dec
mov
inc
shlb
xchg
cmp
into
out
jnp
rorb
leave
shlb
test
sub
cmp
test
xor
ret
and
stos
xor
jae
loopne
cli
adc
pop
scas
je
fs
inc
stos
pop
or
cmpsl
ja
mov
cld
pop
pop
cmpl
sahf
dec
ret
sbb
xor
lds
sub
jo
pop
fadd
popf
jo
dec
mov
jl
fs
add
push
dec
aas
aam
xchg
std
mov
lods
jnp
mov
std
in
testl
movl
mov
fs
in
lea
push
leave
inc
div
lea
aad
jge
pop
rcl
into
mov
rcrb
sahf
xchg
jns
sub
sub
and
sub
push
mov
dec
mov
enter
nop
xlat
cmp
out
frstor
adc
shl
out
ss
in
jns
dec
mov
mov
push
jo
mov
cld
push
std
fcmovb
mov
adc
dec
shll
push
je
cmp
jle
cmp
ljmp
jae
mov
jl
loop
dec
cld
stos
sbb
mov
sub
xchg
test
in
sbb
imul
fstpl
jle
push
xchg
pop
jns
xchg
aad
test
nop
add
pop
xor
adc
adc
call
fsts
lods
cmpsl
xor
leave
sahf
push
xchg
jo
dec
imul
fisttpll
aam
insl
pop
xchg
loopne
jl
push
lods
mov
dec
mov
sub
testl
jecxz
cmc
in
filds
lea
pop
in
js
mov
xchg
add
lahf
aaa
cld
icebp
mov
hlt
daa
sbb
fsubrl
add
inc
imul
mov
js
xor
jo
push
jne
arpl
cltd
add
sub
test
test
cld
into
push
cmp
lods
dec
dec
mov
and
jl
jno
es
inc
js
pop
mov
stos
jge
adc
adc
das
push
test
stos
mov
mov
stc
xchg
fisubrl
mov
or
pushf
lods
ret
adc
mov
into
out
fstpl
pop
leave
scas
push
add
cmp
test
lea
movsl
cld
mov
push
scas
xchg
jbe
fsubr
xor
xchg
cld
fwait
ja
push
lahf
aas
popl
push
mov
loopne
cmpsb
ss
push
mov
repnz
xchg
jnp
int3
cmp
stc
and
sub
and
lods
or
lcall
cmp
sbb
shrl
sbb
cmp
mov
xor
into
mov
adc
fsubrl
leave
cmpsb
stc
sbb
fisubl
and
out
jg
stos
loope
lret
call
scas
aas
in
adc
adc
ds
mov
fcmovnbe
pop
int
cmp
mov
insl
pop
mov
clc
nop
xor
mov
stos
int3
xor
xor
das
stc
in
and
inc
mov
mov
push
lahf
insb
enter
jg
add
xchg
mov
dec
notl
cmpl
inc
mov
ds
and
aad
mov
inc
mov
stos
jmp
mov
sub
cmc
fnsave
inc
dec
mov
xchg
fwait
loop
add
or
test
xchg
inc
push
cwtl
or
loop
fcomp
fmull
aad
nop
mov
mov
lods
pop
ja
inc
cmc
jne
clc
loope
mov
add
xchg
xchg
fbld
lret
jmp
mov
fisttpll
stc
mulb
add
dec
scas
or
mov
icebp
fisttpl
pop
shr
rorl
jl
stos
lahf
or
jmp
outsl
aam
stos
loopne
mov
xchg
xchg
pop
mov
mov
push
cmc
in
dec
jae
insl
and
lds
test
or
xchg
xchg
in
push
xor
sub
movsb
push
push
idivb
or
add
sbb
lods
popf
lds
xchg
inc
mov
cs
cltd
pop
leave
mov
xor
push
dec
std
ljmp
sub
xchg
das
fsubs
call
adc
dec
out
outsl
ljmp
sbb
sbb
dec
push
mov
mov
cmc
cmp
cs
dec
stc
imul
daa
xchg
fidivrl
sub
add
mov
mov
cld
rorl
push
mov
fisubrl
cmpsl
fwait
pop
shlb
or
das
psubusb
scas
aam
sub
and
idivl
adc
or
jmp
sub
adc
add
jnp
rcr
paddw
mov
jo
push
pop
jne
cld
xchg
scas
xchg
xchg
fisubrl
ret
fmulp
outsl
push
and
mov
ss
stos
xor
mov
aam
rcll
mov
pusha
sahf
fisubrs
push
inc
mov
sub
sub
push
push
lret
and
ffree
fdivp
js
scas
loop
lock
out
jp
inc
mov
fstps
dec
aad
cmp
out
hlt
or
add
aad
add
add
xchg
xor
in
iret
push
dec
jae
xor
add
stos
cmp
and
mov
scas
out
cmc
push
in
addr16
xor
and
dec
lods
clc
jg
adc
ret
dec
push
mov
clc
pop
sahf
shll
jns
add
push
push
pop
mov
movsb
idivl
or
mov
mov
cmpsb
sbb
rolb
pop
out
lahf
mov
insb
shll
or
xor
subb
mov
enter
or
ret
es
push
inc
fwait
xor
rcr
mov
adc
mov
push
not
aas
int
out
mov
push
in
inc
push
push
in
mov
push
and
sbb
repnz
stos
loop
aam
sbb
push
aas
xchg
jb
pop
call
fsts
inc
sbb
scas
or
cmp
std
lahf
sbb
xor
jl
fstp
adc
jl
cmp
mov
inc
push
mov
out
mov
push
sub
cltd
pop
xlat
adc
xor
mov
and
leave
fs
popf
call
jbe
push
pop
mov
mov
jbe
dec
xchg
insb
andb
mov
cmp
mov
sbb
jb
sbb
lods
icebp
mov
cmp
pop
imul
rorl
mov
cmc
add
stos
push
mov
mov
or
out
mov
frstor
cli
jns
popf
push
out
in
filds
pushf
ljmp
push
mov
pop
std
push
sarl
bnd
jbe
jmp
arpl
enter
xor
inc
ljmp
clc
xchg
add
xchg
mov
sbb
pop
jns
clc
mov
lcall
pop
insl
adc
enter
mov
ret
mov
add
mov
and
popf
adc
test
adc
lcall
push
add
push
sbb
pop
xor
out
mov
and
mov
fistps
int
fstps
loop
xor
out
flds
lahf
sub
add
sub
lods
mov
cmp
xchg
mov
test
jl
lods
lcall
jg
sub
pop
std
sub
sbbl
xor
popa
leave
xor
cmpsb
ror
mov
jmp
xor
xchg
mov
adc
pop
mov
imul
bound
dec
lock
cmc
cli
sbb
jle
mov
or
pop
es
cld
sbb
sub
add
repz
pop
inc
xor
ljmp
mov
ljmp
das
mov
mov
push
pushf
loope
hlt
mov
or
sbb
shlb
in
jb
jl
into
dec
sbb
add
mov
jno
int3
cltd
std
aas
aam
cmp
xlat
stos
jl
cld
dec
loope
outsb
scas
es
jge
dec
sbb
iret
mov
mov
lea
pop
mov
fnstcw
negb
push
pusha
lock
push
jne
and
pop
mov
fcoms
or
sbb
sub
fisttps
call
pop
cmpsb
loopne
add
xlat
cmc
xor
adc
sub
and
lss
adc
les
inc
rcl
jge
es
lds
stc
push
add
call
jmp
shl
sbb
aam
sbb
negl
and
into
lea
jae
les
push
sub
inc
in
jg
jo
push
aas
jne
push
popa
aas
pop
into
sbb
dec
shll
in
rcll
add
cmc
push
xlat
sub
and
sub
mov
add
mov
sbb
pop
or
stos
jne
or
mov
jecxz
fcmovne
hlt
or
jb
xor
orl
fwait
mov
outsb
mov
fbld
xchg
sti
hlt
idivl
ja
cmpsb
fsubrp
add
xchg
mov
test
cwtl
mov
and
mov
inc
ss
cmc
ja
fcoml
sbb
dec
sub
sbb
out
mov
popf
aad
mov
xchg
sub
fdivl
ss
sbb
stos
lock
in
cs
and
decl
enter
jmp
das
mov
dec
jge
lcall
enter
ret
dec
cmpsb
cs
mov
mov
popw
adc
jmp
mov
fcoms
mov
jbe
ret
call
jns
test
sub
lahf
add
je
pop
xlat
stos
andb
out
cmpb
lods
testl
jp
and
out
mov
adc
loop
jge
xor
sahf
push
xchg
mov
cs
dec
jmp
mov
mov
add
inc
jp
push
insb
subl
lret
push
mov
clc
and
sbbl
inc
add
sub
pop
dec
xor
jmp
mov
int3
or
imul
cmpsb
push
sub
into
cmp
lcall
mov
in
dec
out
je
sbb
lock
outsl
or
and
enter
fisttpll
inc
ja
mov
xor
lock
inc
inc
aaa
push
dec
cld
in
pushf
push
call
cmp
pop
addr16
or
fcmovb
xchg
mov
sbb
mov
daa
jne
and
test
jge
pop
mov
ret
stos
cmp
addb
fmuls
inc
fildl
or
mov
movntq
out
xor
add
insb
aad
aas
dec
clc
ljmp
jmp
out
and
jge
stos
fld
cmp
loop
sbb
out
mov
sarb
lods
xchg
out
loopne
pop
jp
jnp
sarb
xchg
or
pusha
pop
arpl
arpl
aad
or
roll
xchg
cmp
mov
lcall
or
out
pop
incl
mov
call
mov
std
and
sbb
sahf
jp
sub
stos
out
push
push
cmc
or
lea
add
or
xor
xchg
dec
add
notl
jge
and
scas
pop
sahf
fists
pop
dec
and
je
loop
icebp
shl
je
xor
xchg
clc
cmp
loop
loopne
aam
mov
inc
ss
mov
sub
lcall
add
loope
jbe
mov
fimull
mov
ret
mov
ret
pusha
adc
add
add
xor
xchg
arpl
xor
xor
xchg
cmpsb
ret
jb
jnp
int3
lds
and
xor
clc
popf
adc
inc
xor
mov
mov
xlat
sbb
std
xchg
std
pop
sub
sbb
arpl
adcl
mov
and
push
mov
aas
and
xor
rcll
lods
adcb
xor
out
pusha
divb
lods
andl
sub
enter
sub
inc
inc
ss
jo
xchg
cmp
cli
sbb
dec
push
xor
in
xor
clc
add
pop
adc
pop
pop
push
or
sbb
js
stos
or
add
mov
sbb
and
movsb
sbbb
cmp
das
bound
mov
cmpl
fdiv
int
std
dec
or
inc
movsl
sahf
repnz
xor
xor
mov
ror
fisubl
cmpsl
cmpsl
dec
ljmp
mov
leave
jg
cmp
mov
push
scas
mov
sub
int
xchg
jno
call
leave
fsubrs
jle
add
jg
popf
inc
popf
clc
sbb
dec
enter
add
mov
adc
fs
nop
enter
jp
mov
cmpsb
mov
je
jae
sbb
fstl
gs
fsubrl
and
jge
cmp
cld
sarl
or
call
jl
fildll
scas
mov
dec
ja
movsl
stos
mov
add
fsubp
mov
mov
dec
test
ss
cmp
and
sub
aad
add
out
mov
lcall
mov
sub
dec
pushf
xor
fcom
xor
mov
sub
sbb
leave
fimull
sti
hlt
dec
cmc
ljmp
aam
add
into
lret
cmp
xor
cmp
idivl
lret
adcb
jns
in
and
addr16
sahf
sahf
and
dec
add
iret
cmpsl
das
div
cmp
mov
xchg
notl
mov
xchg
sbb
mov
mov
mov
and
and
xchg
int
pop
data16
stos
roll
push
into
push
movsb
scas
outsl
out
sbb
cltd
xor
bound
sub
adc
cmp
mov
cmp
or
pop
push
out
mov
sahf
jge
mov
scas
add
repnz
movsb
dec
call
push
lock
sbb
pop
js
inc
xor
cli
into
jle
mov
je
mov
dec
scas
and
ficoml
insb
cmp
mov
push
push
enter
mov
jnp
pop
xchg
dec
inc
cmp
cmp
lds
push
push
and
cmc
mov
xor
pop
xchg
mov
xor
lcall
sar
inc
xchg
mov
mov
inc
in
ret
filds
out
clc
mov
aas
xchg
fdivrs
pusha
cmp
idiv
mov
mov
cmpsb
in
xchg
popa
mov
mov
inc
jo
stc
clc
int3
add
mov
pushf
int3
ret
inc
scas
push
add
cwtl
mov
add
sahf
mov
movb
jmp
pop
dec
sbb
mov
cmpsl
loope
xor
or
js
push
mov
enter
pop
and
lds
xor
hlt
xchg
leave
insb
fsubs
das
mov
lods
xor
inc
push
test
cmp
cwtl
in
sbb
mov
insl
xchg
pop
ds
test
sub
gs
jl
fadds
std
stos
push
loop
xchg
rolb
jl
sub
sbb
xor
and
mov
sahf
cltd
test
pop
pusha
iret
jne
inc
fisttps
fs
stos
pop
pop
aad
jl
call
fimuls
jle
push
mov
and
ss
mov
dec
jge
ljmp
jno
xor
les
mov
jbe
lret
lcall
dec
mov
sbb
ss
dec
js
mov
inc
mov
addl
push
daa
clc
jne
and
mov
repnz
js
and
jecxz
mov
and
adc
and
push
lods
add
pop
push
or
dec
icebp
rol
mov
addr16
leave
inc
cmp
es
ljmp
dec
inc
out
push
fcmovb
insl
lea
jno
jne
xchg
mov
pop
clc
test
lds
cli
mov
push
or
xlat
in
sbb
fcompl
xor
adc
push
out
data16
or
dec
outsl
jge
leave
cmp
daa
dec
mov
dec
push
popf
mov
je
sbb
mov
mov
into
pop
repz
cmc
add
jmp
in
sahf
lock
cmp
push
sbb
das
orl
jge
pop
movsb
push
cltd
leave
xor
loopne
push
xchg
add
std
mov
out
or
test
incl
mov
ds
pusha
stc
cmpb
mov
and
pop
inc
repz
sbb
jne
cmpsl
add
adc
inc
jns
lcall
jle
cli
hlt
ds
inc
idiv
in
mov
hlt
sahf
addl
dec
pop
call
in
lods
push
pop
ret
push
push
aas
arpl
xlat
sbb
fmulp
mov
and
adc
scas
in
jb
xor
clc
enter
lock
jbe
jns
in
xchg
push
push
pop
or
test
lea
fstps
xor
jl
in
adc
push
std
push
pop
sbb
inc
shlb
sub
mov
pop
ljmp
ljmp
push
jmp
repz
call
add
push
xchg
add
bound
jmp
adc
cmpsb
xchg
or
push
fiadds
push
push
jle
mov
fwait
in
jle
xor
mov
xchg
ret
aad
and
imul
test
xchg
push
push
add
aam
into
es
xor
arpl
sub
idivb
inc
sbb
mov
sahf
dec
mov
inc
out
icebp
mov
pop
pop
inc
outsb
imul
jbe
daa
push
dec
or
aaa
cmpsb
ss
add
in
stos
cmpsb
notb
mov
pop
lahf
cmp
and
test
add
scas
xchg
lock
inc
dec
negb
addr16
adc
push
in
clc
repz
jne
stc
scas
xor
ljmp
aaa
jnp
dec
ja
mov
xchg
into
enter
sbb
mov
push
push
ljmp
lcall
lock
clc
push
push
inc
pop
jge
mov
jmp
inc
mov
inc
cltd
sbb
mull
sub
daa
mov
add
scas
shrb
inc
dec
cmp
faddl
test
xor
push
mov
andl
out
incl
sbb
mov
icebp
mov
in
cmpsl
mov
mov
ficoml
cmp
xchg
adc
clc
mov
stos
out
dec
cmp
jmp
xchg
ja
lret
xchg
ret
dec
sbbb
js
sub
scas
in
sub
in
sbb
dec
pop
cmp
sbb
inc
aam
outsl
jl
cs
iret
hlt
aas
stc
cmpl
pop
stos
mov
xchg
cmp
sub
push
popl
fisubrs
loopne
cmp
test
lahf
cs
dec
sahf
add
mov
fldl
or
dec
xlat
lahf
fwait
and
or
lcall
das
or
ja
sub
aas
inc
mov
lods
lret
scas
mov
dec
adc
out
into
or
cmpsb
out
lods
enter
je
repz
andl
mov
xchg
sub
pop
dec
sbb
negb
fbld
test
repnz
clc
push
divb
aas
lahf
lods
cld
xchg
je
xchg
jb
sub
in
insl
lret
nopl
test
test
mov
add
cmpsb
ja
mov
orl
shll
or
inc
imul
in
mov
sbb
ficoml
clc
lcall
and
xchg
inc
fimuls
mov
je
inc
jne
sbb
cwtl
loope
xchg
clc
adc
iret
mov
in
inc
popf
pop
ficoml
ljmp
orl
jns
fisttpll
scas
push
xlat
jge
adc
addr16
les
jnp
loopw
dec
or
and
sbb
dec
jmp
lcall
xchg
xchg
clc
dec
pop
cmp
dec
pop
fsubs
sbb
ja
les
cwtl
into
dec
into
mov
jo
xchg
sbb
shlb
jae
xor
stos
fdivrs
lret
jne
aas
push
push
ret
daa
lret
ret
inc
out
dec
das
mov
rcll
push
adc
jl
cmp
mov
bound
aad
lds
subb
in
incl
cltd
dec
ds
mov
out
or
push
push
xchg
out
ljmp
incl
shrb
cmc
sti
pushf
mov
sbb
mov
ret
adc
stos
xlat
or
push
subl
fistpll
mov
bound
cld
jns
xor
inc
stos
shlb
mov
pusha
repz
stc
call
mov
ds
dec
cmp
sbb
fdivrs
daa
jg
stos
inc
pop
jg
dec
cmc
arpl
adc
cmp
jg
pop
dec
sub
xlat
test
sub
xchg
mov
stc
ljmp
call
lods
daa
rclb
pop
mov
subb
mov
mov
adc
jmp
sbb
xor
shr
inc
xchg
jnp
subb
ds
je
sub
mov
push
cmp
mov
lods
lods
lock
cmp
lea
cmp
dec
fnstenv
lods
lods
mov
icebp
insb
cmp
es
inc
mov
push
inc
add
mov
mov
push
inc
std
push
sub
cli
xor
push
lcall
jae
test
jne
in
lcall
mov
je
jo
mov
inc
movsb
decl
jae
aas
test
push
mov
jle
and
dec
int3
pop
push
outsl
and
ljmp
movsl
cmpl
mov
mov
mov
push
sbb
repz
fmuls
jle
in
aas
jmp
fwait
movsl
mov
hlt
mov
shll
inc
lahf
imul
cmp
daa
xor
scas
mov
pop
test
adc
cmc
iret
adc
imulb
sub
mov
pusha
inc
cld
cmp
cmc
or
cmp
sub
jge
fmull
rclb
xchg
stc
push
loope
rorl
jg
push
popa
xchg
imul
mov
fdivs
xlat
cmp
dec
dec
insl
push
and
mov
ljmp
inc
test
sbb
sub
mov
stc
fadds
jo
dec
aad
jo
push
dec
pop
adc
scas
call
fsubrl
aad
test
xchg
xor
add
es
outsl
or
imul
xchg
pop
xchg
nop
dec
cmpsb
and
sub
inc
add
jg
rcrb
push
lcall
rolb
mov
xchg
ja,pt
mov
cmp
or
push
lds
mov
mov
push
test
mov
push
clc
js
add
or
fidivl
ret
es
cmpsl
push
pop
xchg
outsb
inc
add
lcall
inc
das
insb
testb
inc
scas
push
in
loopne
mov
cmp
cld
shlb
test
ljmp
mov
mov
es
xor
cmpsb
inc
les
lock
ja
pop
mov
push
dec
or
push
enter
repnz
push
pop
mov
xchg
mov
jl
test
dec
fwait
testl
lea
pop
nop
add
in
scas
push
mov
gs
jge
lcall
std
std
mov
lcall
sbb
inc
and
addr16
xor
pop
inc
lods
mov
inc
add
sarl
xor
pusha
in
sti
stos
sbb
pop
mov
xor
and
mov
rcl
lret
cmp
movsl
fdiv
or
cmp
mov
jmp
rep
sbb
push
mov
sub
cld
push
jns
pop
xchg
jae
cmp
mov
pop
push
cmp
adc
stos
sbb
xor
imul
std
seta
jg
movsb
lods
mov
and
icebp
shrl
xchg
test
or
jg
xchg
jno
xor
mov
decb
push
xchg
stc
push
jle
fsubs
or
insl
mov
outsb
adc
adc
push
sub
sbb
mov
iret
ret
stc
test
push
data16
inc
xor
nop
jl
xchg
popf
mov
in
daa
in
std
fisubs
pushf
hlt
push
stos
nop
add
std
dec
cmc
call
jmp
mov
xchg
mov
nop
xchg
mov
cld
pop
scas
and
popa
push
outsl
pop
stos
xor
es
sbb
push
mov
xor
hlt
push
push
jns
pop
push
sbb
xchg
and
roll
sbb
mov
es
insl
or
iret
mov
sub
or
mov
add
int3
xchg
fisubs
add
js
dec
push
xchg
cmp
aas
xor
repz
fisubrs
pop
addb
lods
cmc
inc
mov
lcall
mov
daa
rcr
incb
jl
icebp
fisttps
insb
xchg
mov
clc
stos
jmp
arpl
push
push
jb,pn
divl
mull
mov
addb
inc
call
xor
xor
cmpsb
mov
fisttpl
ja
push
push
jae
push
push
mov
ljmp
push
push
xorb
pop
sahf
xchg
mov
adc
aad
or
jl
test
movsl
push
mov
pop
scas
outsb
stc
lods
inc
mov
stos
lret
mov
adc
mov
out
dec
insb
das
das
jmp
aam
xchg
aas
mov
mov
push
mov
sub
inc
lret
mov
lcall
pop
arpl
icebp
xchg
jmp
dec
lods
cmpsb
jge
mov
fnsave
int
sahf
loop
cwtl
xor
push
xchg
add
mov
pop
pusha
dec
fld
repz
fisttpll
int3
ret
sbb
cld
adc
sub
mov
fadds
push
jno,pt
inc
popa
shl
mov
jge
xor
ss
mov
mov
andl
into
jle
imul
lods
jns
dec
enter
cmc
and
leave
test
adc
into
aas
subl
ljmp
lcall
jge
cmp
and
jl
fmul
jl
shlb
in
cs
inc
call
mov
into
clc
dec
mov
les
mov
pop
mov
adc
imul
sbb
sub
mov
mov
dec
xor
shr
je
les
push
jb
cmp
ffreep
jge
ror
outsb
push
xor
bound
push
out
jg
mov
mov
push
loope
fisubs
mov
jg
push
ljmp
xchg
ds
or
imul
test
xchg
sub
aas
mov
sub
inc
pop
dec
pop
xchg
cmp
jge
rep
xchg
addr16
xor
pushf
outsb
pop
ret
and
add
sub
fs
loop
cmc
imul
test
inc
push
push
dec
lahf
cmp
lret
xor
and
pop
jo
pop
jle
xor
jb
inc
ds
inc
xor
cmpsl
xor
ss
jp
into
negl
push
bound
dec
mov
pushf
fwait
mov
inc
loop
jge
push
call
push
adc
shrl
ret
mov
out
fwait
and
add
lds
lcall
lds
jl
cmp
mov
negl
daa
in
cld
mov
push
xchg
sub
mov
dec
lods
xchg
cs
adc
mov
hlt
stc
jle,pn
sub
popf
add
inc
out
mov
push
sub
lea
mov
mov
jmp
aam
outsl
adc
ljmp
sub
aad
xchg
and
xchg
jge
cmp
add
sti
sbbb
or
dec
xlat
add
cmp
sub
fcmove
mov
cmpsl
cld
sbbl
or
jb
mov
lahf
mov
scas
lock
clc
lcall
cmpsb
xchg
adc
mov
jnp
nop
rorl
in
jo
or
notl
into
outsb
sbb
pop
scas
fldcw
cmp
addl
xlat
ljmp
and
mov
aas
adc
lahf
and
mov
jg
sti
stos
jb
jbe
sub
mov
sub
imul
sbb
shrb
int
ljmp
inc
jne
mov
inc
dec
cmc
cmpsb
cld
cmp
ss
leave
pop
in
pop
ds
pop
cs
inc
cmc
add
cmp
jnp
pop
das
and
ss
and
ss
pop
lea
dec
lret
ss
imul
call
scas
movsb
iret
adc
fsubp
sub
pushf
mov
sub
andb
push
cmp
mov
shrb
inc
mov
adc
sahf
mov
in
xor
fldenv
dec
enter
shlb
subl
mov
add
adcl
mov
les
sub
rol
inc
mov
push
pop
aas
dec
or
sbb
xor
mov
and
xor
and
pop
out
jo
incb
dec
divl
mov
jle
call
sub
fistps
stos
lods
lea
and
sub
stos
addr16
ffree
movsl
in
inc
mov
incl
mov
adc
xor
dec
shrl
sar
lock
sub
sbb
fucomi
hlt
xor
scas
gs
xor
push
jae
dec
cs
sbb
cmp
adc
dec
hlt
dec
pop
adc
cmpl
push
mov
jae
pop
push
xor
mov
rolb
mov
mov
mov
inc
in
mov
mov
sti
les
xlat
xchg
mov
jecxz
into
adc
mov
mov
mov
lock
popf
add
sub
popf
push
and
push
lea
mov
jnp
push
sbb
cmc
dec
adc
jne
push
fiadds
pop
leave
xchg
sti
mov
lea
and
ja
jb
pop
les
inc
out
outsl
lcall
inc
or
es
orl
mov
int3
cld
notb
sbb
es
in
inc
mov
out
repnz
fcomps
jl
pop
mov
jle
xchg
xor
fdivrs
push
call
jle
ror
in
push
negl
sub
pop
scas
push
stos
mov
std
xor
ffreep
test
mov
and
jne
ficoml
and
or
nop
jl
out
xor
xor
or
idivb
in
fbstp
shlb
inc
mov
nop
pop
jae
es
mov
xchg
out
sbb
adc
stc
in
sbb
mov
movl
mov
es
add
iret
sub
out
inc
iret
and
adc
lret
push
ret
cmpsb
stos
imul
dec
inc
arpl
daa
mov
jg
xor
jne
xorb
add
or
idiv
xor
popf
sub
cli
mov
test
sti
and
inc
push
xchg
xchg
stc
adc
arpl
fistpll
lods
nop
xor
shl
add
loop
cmc
sahf
mov
mov
mov
inc
lea
loop
mov
add
xor
mov
sub
sub
repz
sbb
add
adc
cmp
sbb
sahf
push
sub
and
pop
sti
mov
dec
dec
stc
lock
push
xchg
outsl
mov
es
icebp
and
mov
push
into
pop
ja
inc
in
jecxz
ffree
xor
sub
mov
popa
int3
mov
fidivl
xchg
adc
pop
jmp
jg
addr16
sbb
xchg
adc
mov
cmp
dec
hlt
inc
mov
dec
repnz
jp
enter
subl
sbb
sahf
daa
out
mov
jmp
ja
push
imull
xlat
sbb
mov
mov
inc
test
and
std
push
mov
lods
or
sub
pop
or
aas
arpl
dec
aas
icebp
popf
sub
fisubs
jecxz
sbb
inc
pop
aas
dec
es
and
mov
or
cmp
lahf
mov
sti
lds
insl
xchg
push
jns
inc
push
push
sbb
sbb
pop
or
daa
hlt
outsl
add
mov
inc
insl
clc
addl
sbb
jl
fstps
orl
leave
cmp
arpl
out
push
inc
mov
and
dec
bound
push
lods
pusha
movsl
and
sbb
les
idivb
push
stos
push
pop
pop
mov
subb
ror
xor
xchg
filds
cwtl
push
mov
aad
rcrl
call
idiv
sbb
aad
xor
jl
adc
ja
cwtl
out
std
sub
out
dec
imul
sub
movsb
clc
jge
call
push
jne
jo
call
jecxz
clc
scas
jo
or
xor
sar
in
nop
adc
notl
and
jbe
stos
mov
push
push
ret
cld
addl
jb
jge
leave
leave
scas
cmp
adc
stos
push
dec
pop
xchg
out
push
ljmp
xor
cwtl
jg
inc
aad
rorl
xchg
gs
push
lahf
dec
scas
mov
mov
mov
adc
sub
fadds
out
loop
es
sti
adc
repnz
or
es
push
nop
js
jno
das
add
fstpl
xor
daa
adc
test
mov
inc
cltd
or
sbb
xchg
sub
adc
fiaddl
xchg
xor
lahf
sub
and
mov
repnz
aad
inc
stc
popa
jne
cli
jmp
sub
aaa
adc
imul
stc
out
hlt
mov
pop
sbb
jbe
jle
xlat
push
scas
leave
sahf
sbb
clc
adc
sbbl
xlat
addr16
mov
out
scas
mov
sub
xchg
cld
loopne
and
mov
pop
adc
pop
and
sbb
cmpsl
adc
andl
sbb
mov
pop
sahf
outsb
pop
aam
cmp
jbe
in
inc
lahf
push
dec
sbb
sub
das
pushf
out
dec
mov
xchg
repnz
hlt
fbstp
fs
aad
ret
push
adc
in
mov
or
xor
xchg
push
mov
std
fdivp
jbe
xor
lods
aas
mov
sub
mov
lahf
push
mov
push
scas
add
mov
adc
mov
sbbb
xlat
out
pop
and
cwtl
out
incb
lret
cli
arpl
xor
ss
xor
xorb
xor
loopne
jl
cmpl
dec
mov
sbb
add
lahf
mov
or
cmp
pop
or
sub
jmp
clc
and
dec
or
mov
bound
gs
cmpsb
scas
inc
pop
out
add
push
aad
std
stos
bound
fcoml
pop
xchg
outsl
xchg
jp
mov
mov
mov
imulb
in
mov
subl
fidivl
enter
sahf
popf
test
shlb
mov
adc
ds
movsl
inc
shlb
mov
mov
lret
and
je
ds
movsb
lods
jg
push
add
inc
sub
push
xlat
inc
sbb
cmp
lcall
js
gs
add
fsubrl
push
push
xchg
enter
clc
pushf
cmpl
fisubl
scas
dec
adcb
dec
cmp
movsb
sti
es
in
scas
ror
mov
pop
sbb
or
leave
cmp
dec
sub
or
arpl
adc
outsl
ss
out
add
sti
push
inc
pop
jnp
cld
sbb
lods
js
cld
inc
cld
sub
sbb
adc
cld
jae
insb
ret
ss
mov
dec
cwtl
or
stos
fadds
dec
lea
sub
cmpsb
xchg
jns
shrl
cmpsb
and
add
sti
les
rcl
mov
outsb
jns
pushf
push
or
xlat
push
imul
cmpsl
loope
js
add
fists
test
outsl
mov
and
inc
stc
jbe
adc
jo
sub
stos
and
inc
and
imul
sub
inc
incb
jnp
shl
and
cmp
sub
insb
pop
lcall
mov
push
and
sti
mov
bound
scas
push
xchg
jmp
lea
adc
fnstenv
lods
insl
inc
or
not
jbe
add
dec
cmp
ror
dec
xlat
out
mov
es
dec
fcomp
fbstp
int3
sub
lods
pop
cmpsb
pop
jge
bound
and
jns
xor
mov
cmpsb
pusha
lahf
and
jge
cltd
cmp
cmp
mov
hlt
test
dec
and
fldl
das
imulb
xchg
sbb
cltd
pop
inc
outsl
cmpsl
add
fcoms
fsubrs
in
push
sahf
mov
xchg
xorb
and
lds
cmp
test
sbb
sub
hlt
out
mov
fisttpll
enter
dec
call
and
outsb
outsl
stos
inc
adc
loop
mov
stos
xchg
loopne
aaa
mov
add
es
fsqrt
mov
pop
lret
clc
add
ljmp
xor
lea
lods
imul
mov
push
enter
arpl
jge
int
jge
push
fcomip
mov
and
xor
shlb
dec
pop
mov
dec
aas
ret
mov
mov
mov
sub
lock
lret
and
mov
mov
sub
lcall
dec
pop
loope
lock
push
and
push
popf
shll
testb
push
inc
cld
test
or
ftst
nop
in
into
lret
aaa
mov
sub
pop
stc
inc
inc
push
mov
fistl
les
jle
push
add
mulb
sahf
fwait
ss
xor
xchg
jb
insl
pop
scas
xchg
repnz
adc
outsl
push
in
mov
test
adc
movsb
jo
mov
mov
mov
xchg
shlb
mov
jp
mov
ljmp
mov
ret
add
xorl
push
add
mov
xor
stos
fwait
ljmp
cmp
xchg
push
je
xchg
repz
stos
rorl
js
push
into
mov
into
xor
std
adc
xor
repz
loop
sbb
out
add
stos
sub
push
insb
jno
ljmp
push
ljmp
mov
out
test
xchg
mov
add
pop
add
shll
rorl
add
aaa
xchg
xlat
mov
sbb
push
imul
pop
push
and
jmp
out
js
mov
mov
pop
in
bound
cltd
popf
cltd
scas
cmp
sub
mov
cs
mov
add
movsb
ja
mov
mov
loopne
ljmp
xchg
mov
jmp
andb
pop
testl
dec
cmp
cmc
repz
push
mov
jp
hlt
or
fcmovb
dec
mov
sub
loopne
out
xchg
orb
push
fstps
xchg
xor
xor
and
push
mov
jecxz
ret
add
fildll
test
call
sub
pavgw
or
xchg
xchg
xchg
int3
enter
lods
lahf
add
mov
push
dec
pop
inc
xchg
jg
out
sub
inc
xchg
cwtl
inc
xchg
js
pop
and
clc
jg
dec
mov
cmpb
imul
outsb
lahf
mov
in
fidivl
scas
jp
jo
push
adc
mov
fwait
pop
stc
aas
push
and
pop
hlt
call
adc
repz
jbe
fucomp
sub
dec
scas
and
int3
inc
outsl
scas
cmp
fsts
pushf
or
fldt
xorl
mov
pop
cmp
aaa
fsubrp
pop
es
and
or
outsl
xor
jg
lahf
mov
aad
sti
lret
lds
call
jmp
sub
addr16
scas
fucomip
and
cs
mov
dec
mov
adc
dec
loope
cmp
mov
mov
cmpsl
jae
fbld
xchg
lods
rol
xor
or
mov
jge
je
mov
gs
push
cmp
stos
mov
dec
jmp
inc
push
cmpsl
ljmp
daa
xor
pusha
bound
ficoms
jno
adc
sbb
aad
xchg
xor
jmp
scas
ja
add
xchg
insl
push
sub
mov
cs
mov
jecxz
loop
mov
dec
sub
fistpl
into
cmp
sub
and
sahf
mull
icebp
jo
in
out
aam
jle
mov
mov
test
call
mov
or
inc
add
mov
cmp
dec
mov
add
xchg
and
jmp
mov
shlb
mov
stos
mov
jmp
jnp
frstor
pop
test
mov
insb
sbb
adc
cli
in
or
or
imul
sbb
jge
push
push
inc
out
xchg
sub
and
xor
fcmovbe
inc
xchg
mov
mull
lret
xchg
inc
loopne
cmp
inc
or
fsubrs
in
out
das
movsb
jne
push
push
out
push
xchg
or
lret
adc
mov
imul
out
faddl
fidivl
jp
inc
frstor
scas
xor
aad
rcl
scas
xor
dec
mov
and
cwtl
clc
loope
push
insl
mov
fbld
mov
mov
or
shll
mov
pop
push
xchg
jo
or
lret
add
inc
dec
dec
sahf
sbb
shll
in
int
push
mov
inc
pop
add
mov
cmp
pop
icebp
outsl
sub
or
shlb
sub
fldt
into
xchg
adc
nop
fsubl
fadds
into
rolb
xchg
aas
cmpsl
test
call
aad
inc
out
stos
out
inc
pop
incl
lds
ss
cmp
outsb
fdivrl
cwtl
imul
xor
sub
add
add
iret
fcmovb
add
mov
push
jns
cs
leave
push
jl
inc
jge
mov
xchg
adc
arpl
sbb
cmp
rcrb
push
push
clc
adc
push
iret
ljmp
dec
hlt
dec
cmp
mov
lock
sub
lods
pop
jle
mov
or
in
sbb
adc
scas
xchg
mov
push
xchg
hlt
ja
pop
hlt
jmp
and
or
push
cmp
in
into
aam
jmp
mov
mov
insb
orb
mov
mov
ds
mov
xchg
ss
cltd
xchg
mov
dec
outsb
sbb
inc
imul
popf
inc
add
mov
push
in
pop
sbb
fdivs
arpl
call
jo
imul
jl
dec
adcb
jg
xor
fimull
and
jecxz
sbb
dec
xchg
adc
inc
cmc
mov
xchg
dec
push
shrb
test
dec
xor
xorb
nop
pop
cld
inc
xchg
jmp
push
xor
sbbl
jo,pn
jae
popa
gs
pop
stc
in
dec
xchg
mov
and
repnz
cwtl
nop
adc
add
cmp
pushf
inc
mov
leave
test
push
out
xchg
push
shrl
lret
les
add
or
lds
daa
pop
data16
fbstp
sub
je
sbb
cltd
fldcw
inc
inc
xchg
sahf
jb
push
or
push
and
mov
mov
repz
cmpsl
cmp
rep
jne
adc
int3
outsb
mulb
std
push
push
inc
adc
hlt
in
clc
shl
and
jge
out
mov
roll
xor
xlat
cld
addl
lret
inc
in
bound
push
lahf
cmpsb
push
ret
mov
add
push
or
jle
mov
cwtl
add
ljmp
stc
std
and
jmp
bound
xlat
mov
inc
testb
and
adc
loopne
aaa
sub
dec
or
push
in
jp
lcall
sub
and
cmpsb
jecxz
sahf
or
cmpsb
cmp
sub
outsl
aaa
xor
lret
and
xor
adc
insl
lahf
jge
out
push
sahf
sbb
sub
cld
div
mov
xchg
dec
xchg
ds
fistpl
sub
fs
or
mov
pop
add
aas
push
jge
pop
xor
push
sbb
xorl
xchg
mov
loop
aaa
in
mov
call
inc
rcpps
hlt
jb
sbb
dec
rcll
inc
jae
fwait
in
lret
lock
pop
adc
xchg
stos
xchg
sbbl
xchg
pop
mov
mov
shrd
mov
lods
pop
xchg
sub
mov
pop
xchg
test
test
jecxz
ret
sub
xchg
mov
mov
and
insl
ds
in
cmp
int3
hlt
xor
repnz
add
mov
in
jnp
mov
push
sub
pusha
push
mov
xchg
lret
add
add
jmp
mov
outsb
and
idivl
int3
ret
and
pop
sub
rcr
inc
xor
mov
das
in
adc
mov
rcrl
decb
rcr
es
scas
mov
adc
sbb
stos
inc
outsl
push
inc
or
inc
addr16
aam
xchg
popa
xchg
int
rorb
sarb
gs
pop
cmp
pop
lods
sbb
xor
lock
fistpl
or
push
into
mov
pop
sti
dec
cmp
and
repz
outsb
or
cmp
std
fimuls
or
fldt
jb
gs
xor
in
test
pop
mov
cmp
mov
loop
jb
fcoms
vcvtdq2ps
test
xchg
mov
mov
mov
add
add
sldt
add
add
pusha
or
je
call
pop
add
cmpb
jne
popa
jmp
fldt
cmp
add
pop
and
xor
mov
add
cmp
jne
movzwl
add
mov
add
cmp
je
sub
jmp
mov
mov
add
mov
add
jmp
mov
mov
push
push
call
call
pop
sub
mov
sub
mov
movb
popa
jmp
insb
sbb
adc
test
pusha
xor
mov
shr
je
pop
cs
or
sbb
adc
test
pusha
xor
mov
shr
je
pop
cs
or
sbb
adc
test
pusha
xor
mov
shr
je
pop
cs
or
sbb
and
jl
sub
mov
mov
inc
mov
inc
mov
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
mov
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
mov
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
mov
jmp
sub
mov
popa
ret
jmp
jmp
add
ljmp
rcrb
fsubl
xlat
xchg
cwtl
jo
jg
cmp
or
or
add
bswap
fs
out
xchg
imul
gs
imul
fnsave
or
and
sub
mov
stos
inc
add
mov
xor
hlt
out
push
cmp
lods
ja
xchg
mov
and
cmp
mov
ds
push
jle
push
std
xor
sarl
das
insb
loope
pusha
push
call
in
aas
ss
mov
mov
or
adcl
popf
xor
je
mov
inc
loop
movsb
std
ret
jo
and
ds
subb
call
je
addl
fisttps
dec
mov
dec
aad
jmp
call
add
pusha
out
pop
sub
mov
movl
inc
mov
cmpl
and
xchg
adcl
xor
loope
fsubl
es
ret
add
add
jbe
lea
mov
movl
ret
mov
inc
push
mov
adcl
jecxz
daa
adc
mov
orb
mov
js
shl
invd
sbb
scas
ret
inc
inc
xchg
dec
xor
push
inc
shll
mov
push
cmp
jb
call
sub
lahf
popa
jmp
adc
and
add
jb
inc
jle
mov
rclb
jecxz
movb
cmpsb
dec
sbb
push
push
rdpmc
testb
fnstenv
and
xor
mov
sbb
mov
test
rorb
cmpsb
addr16
mov
orb
push
fimull
add
aaa
add
jne
cmp
or
push
ret
sub
cmp
loopne
or
mov
jmp
lock
push
add
push
or
mov
testl
and
adc
adcl
add
lds
jmp
mov
pop
orl
and
insl
or
fimuls
jg
test
je
jge
xor
out
lea
mov
dec
mov
pop
outsl
or
add
xor
ror
clc
cmp
je
cmp
fmul
rolb
push
sti
jne
and
jl
cmp
add
cmp
mov
jg
call
fadds
pop
test
je
mov
ret
sub
mov
push
pop
pop
pop
push
mov
pop
out
outsb
jae
push
nop
add
cld
mov
cs
cmpb
je
or
xor
or
jbe
adc
or
inc
cmp
or
arpl
clc
int
test
inc
xor
or
ss
add
inc
rep
jmp
sub
fs
adc
es
push
hlt
adc
shll
or
shl
cmp
ret
xor
mov
xor
or
ja
jmp
leave
and
or
or
scas
cmpsl
ret
or
sbb
inc
sbb
aam
add
xchg
ss
or
outsb
jbe
int3
stos
es
sbbl
push
cld
jb
mov
stos
cmp
xchg
jo
sarl
lsl
jne
mov
mov
icebp
sub
add
cmp
or
les
sbb
mov
pop
ljmp
lcall
subb
xchg
lock
sbb
xchg
sbb
imul
jmp
pop
les
test
sbb
inc
push
les
lods
cmpb
test
add
popa
mov
addr16
icebp
outsb
bound
int3
ds
xor
cmpb
add
movups
shll
inc
inc
jne
or
mov
push
dec
in
in
gs
push
jp
test
add
mov
mov
add
dec
sub
jne
leave
adc
repz
ja
or
mov
mov
mov
out
cwtl
out
cwtl
lcall
ja
xor
adc
icebp
shlb
or
or
sub
movaps
jle
xor
roll
aas
sbb
xor
inc
jecxz
mov
inc
sbb
jmp
les
dec
and
adc
cmpsl
push
push
mov
adc
push
jb
mov
or
xchg
inc
push
test
popa
pop
enter
inc
push
inc
add
xchg
dec
push
adc
or
fucomi
hlt
addb
mov
stos
pop
cmpsb
je
pop
sbb
les
inc
dec
pop
xlat
jnp
or
out
add
addr16
fiaddl
and
imul
xchg
adc
sbb
fisttps
lret
pusha
xor
mov
add
mov
sub
ds
or
rcr
xor
in
andl
and
mov
pop
bound
sbb
push
jmp
cmp
mov
shl
sbb
lahf
ljmp
outsl
test
cmpsb
push
add
sbb
adc
xchg
add
or
aaa
mov
insb
mov
push
lcall
shll
fldcw
pushf
and
add
in
sbb
insb
add
add
bound
add
push
push
mov
and
push
push
jns
sbb
and
jmp
add
mov
loope
hlt
test
mov
clc
shll
mov
cmp
mov
add
testb
xchg
test
in
xchg
cmp
mov
enter
mov
ljmp
orb
mov
xor
xchg
xlat
jmp
test
std
adc
push
push
lret
jb
fadds
add
stos
jecxz
cmp
mov
push
sbb
cmp
mov
int3
inc
and
push
cmp
sbb
xchg
add
xor
adc
sub
jecxz
adc
add
dec
sti
imul
ljmp
push
xchg
cmp
add
cwtl
lahf
xor
pop
lret
add
sbbl
add
cmpsb
jae
cmp
or
popa
mov
hlt
mov
pop
add
mov
sbb
andl
ja
cmpsb
mov
stc
cmp
addr16
out
or
xchg
add
pop
fdiv
gs
sbbb
add
ss
in
sbb
mov
mov
fiaddl
push
mov
dec
out
and
xlat
ret
cmp
leave
or
push
inc
fiaddl
ret
iret
add
orb
jg
mov
loope
imul
jmp
scas
fisttpll
outsl
and
ret
pop
imul
sbbb
scas
ds
es
pushf
jae
xor
fstl
ret
out
inc
out
aad
and
icebp
xchg
inc
mov
loope
or
sahf
mov
or
mov
insl
clc
adc
mov
aas
movsl
scas
call
lea
mov
pop
adc
adc
ja
jno
pop
js
jo
jle
adc
shlb
xor
les
ficompl
push
iret
add
insl
sbbb
leave
in
leave
add
and
test
fiaddl
lock
outsl
in
imul
lods
add
std
lea
in
jno,pt
xchg
leave
fwait
sti
mov
testb
aam
js
jecxz
imul
ret
mov
xchg
aam
adc
cmpsl
xor
pop
inc
xchg
int3
adc
push
add
leave
sub
add
cmp
jbe
rorb
add
leave
inc
in
mov
les
push
xor
mov
mov
addr16
outsl
insl
lock
fstpl
lcall
lahf
mov
pop
xor
push
pusha
inc
mov
and
loope
loopne
mov
push
mov
mov
inc
daa
imul
popf
sub
lods
and
xchg
scas
pushf
cs
mov
jbe
pop
lret
jo
or
sbb
sub
les
rclb
add
stc
or
mov
and
int3
sbb
push
popa
lock
stos
push
out
push
inc
sub
ss
xchg
add
js
icebp
sbb
push
add
jl
mov
repnz
mov
lea
xchg
xchg
loop
or
ljmp
push
repnz
int3
popa
mov
pop
jecxz
and
bound
push
adc
and
movl
adcb
jp
inc
mov
bound
and
push
sbb
cmpsl
jne
fildll
test
push
sbbb
and
aad
mov
cld
pusha
orb
inc
dec
push
xor
push
add
repz
sub
pushf
mov
or
mov
scas
in
sub
mov
addr16
rclb
and
pop
inc
add
xchg
fucomp
shr
xor
inc
cmp
xor
in
add
mov
fbstp
mov
jnp
mov
add
hlt
cmp
shlb
push
dec
add
cmp
div
xchg
test
in
test
dec
ficoms
cmpl
out
sahf
hlt
jb
sbb
mov
add
loopne
ror
inc
pushf
add
loopne
stc
data16
adc
insb
gs
inc
mov
jns
leave
out
sahf
fiadds
mov
dec
dec
scas
mov
add
aad
cmp
and
adc
add
add
popa
pop
sub
mov
adc
mov
bound
dec
jl
xor
inc
or
jnp,pt
mov
out
jbe
enter
imul
ds
in
pop
add
es
push
sbb
rcrb
loop
xchg
and
pop
jnp
mov
shr
aaa
and
addb
sysexit
stos
mov
and
test
test
dec
data16
sbbb
arpl
addb
ficomps
fadd
test
imul
enter
pusha
mov
adc
and
loope
fldcw
insb
andl
push
cmp
jne
sarb
mov
mov
jo
in
inc
es
add
arpl
or
inc
movsb
pavgb
fnstsw
push
outsb
push
adc
push
ljmp
inc
in
icebp
mov
outsl
xor
mov
dec
cwtl
cmp
enter
adc
insl
push
inc
jecxz
xchg
mov
xor
add
sbb
fistpll
jno
popl
ljmp
int
mov
sbb
xchg
nop
sbb
call
dec
sbb
leave
xchg
js
scas
adc
xor
cmp
inc
in
lea
cli
pop
and
push
pop
xchg
inc
subb
or
ljmp
sbb
loope
pop
mov
leave
lds
sbb
adc
loopne
enter
add
ds
pop
dec
and
mov
jl
sub
sbb
loope
push
icebp
dec
add
mov
push
push
notb
adc
inc
sub
add
mov
imul
fistps
inc
pop
xor
out
xor
sbb
add
mov
imul
test
sub
xchg
mov
add
in
xchg
pop
lock
inc
add
outsb
jnp
mov
add
scas
arpl
je
dec
mov
mov
jmp
out
dec
xlat
popa
enter
cld
inc
lock
stos
test
movsb
aam
rcr
test
push
add
int
out
in
mov
or
in
inc
orb
int3
add
add
das
jge
jbe
fdivs
bnd
pop
cmpsl
addr16
imul
rcl
pop
lret
es
inc
add
in
add
cmp
pop
sarl
repnz
jns
inc
ljmp
ds
add
shrl
popl
add
cltd
popf
add
out
dec
xor
data16
add
hlt
xchg
inc
scas
dec
mov
pop
stc
into
mov
sbb
dec
test
dec
loop
xchg
inc
int3
test
je
in
es
xchg
jne
xchg
xor
push
add
pusha
pop
aam
adc
push
inc
push
clc
ljmp
sub
sub
xor
mov
pop
inc
loope
nop
or
push
pushf
dec
sub
or
jp
pop
inc
out
mov
loope
add
leave
cltd
push
add
aas
xor
lods
inc
mov
xor
jo
int
mov
mov
sbb
cmp
pusha
in
popf
fisubl
loopne
fiadds
cwtl
lldt
mov
fldl
decb
lcall
pop
mov
pop
and
gs
sub
xchg
test
imul
insl
rcrl
loope
imul
in
xchg
add
pop
mov
sub
xor
push
sub
loope
push
or
jb
nop
sub
flds
pop
jno
inc
lods
jne
mov
nop
addr16
or
jmp
cmp
daa
fldl
jmp
les
jbe
mov
sarb
mov
adc
xor
fists
mov
shr
mov
in
inc
push
test
mov
xor
test
sbb
cld
jns
push
add
imul
and
inc
push
or
add
xorb
roll
mov
push
in
shll
xor
and
loopnew
and
add
popf
test
stos
inc
cmp
and
lds
add
roll
inc
sub
rorb
flds
insb
ljmp
jns
les
in
repz
and
cmp
mov
addb
in
jns
arpl
btsl
jecxz
sub
fisttps
add
int3
sub
imul
lock
cmpsl
push
pushf
test
mov
out
inc
jno
cwtl
mov
xchg
sbb
fs
cmp
out
pop
xchg
push
movsb
in
fwait
xchg
cmp
test
or
sbbb
cmc
xlat
or
clc
and
mov
add
repz
inc
push
push
cltd
dec
shlb
in
cmp
popa
cmpsl
loopne
and
clc
js
jmp
sbb
test
fiadds
in
fcomps
pusha
jecxz
arpl
aam
pop
roll
fistl
popf
mov
rolb
addr16
and
xchg
and
mov
mov
or
cld
cmp
loop
pushf
mov
and
aas
punpckldq
out
add
or
nop
add
mov
aaa
out
add
inc
mov
add
pop
dec
call
push
lcallw
xor
rolb
push
add
push
fyl2xp1
hlt
test
out
xor
jbe
mov
mov
dec
jno
inc
sbb
push
incb
test
cmpsl
mov
add
cli
mov
idivb
nop
fadds
adc
inc
aas
test
jmp
enter
jg
sbb
sbb
add
sbb
sbb
sahf
push
inc
mov
sbb
subb
jge
add
cmp
ss
cmovo
insb
adc
xchg
mov
push
cmpsb
push
and
jbe
sbb
cmp
mov
inc
push
lods
add
cld
xchg
in
push
pushf
test
fisttpll
sbb
lock
mov
pop
inc
cmpsb
add
and
leave
cs
xchg
and
sbb
cwtl
out
push
aad
add
dec
rep
in
xchg
add
lcall
dec
and
add
cmp
rol
faddl
pop
inc
test
in
mov
sub
outsl
add
subb
add
rclb
pop
and
loop
out
mov
inc
test
int
pop
inc
and
mov
call
add
pop
pop
and
jmp
add
xchg
xor
pop
rolb
push
fwait
pcmpgtw
push
aam
push
ljmp
in
xor
add
xchg
addb
out
and
add
pop
fsubrl
add
lahf
dec
in
pop
or
and
ljmp
iret
lret
imul
push
int3
cli
or
pop
push
sbb
fldcw
dec
clc
add
mov
xlat
adc
ss
and
mov
shrb
xlat
and
add
fsubp
or
xor
and
add
push
std
or
inc
push
jo,pn
push
sbb
mov
mov
roll
and
pop
add
mov
and
mov
mov
or
push
pop
dec
ds
jl
pop
cmp
popa
loope
sti
andb
xor
in
add
push
icebp
adc
push
pop
xor
stos
xlat
adc
fbld
out
push
lcall
pop
jbe
add
rol
push
lock
sub
idivb
adcb
lds
push
pusha
sbb
out
pop
cwtl
pop
add
ret
mov
adc
jne
push
push
add
mov
cld
pop
sub
in
pop
or
stc
and
jge
add
loop
cmpsl
dec
int
add
pop
lods
loopne
aam
sub
cmpb
adc
and
inc
jg
add
mov
push
clc
or
cmc
pop
aaa
cmp
pusha
daa
mov
pop
mov
mov
sarb
in
xchg
das
inc
add
loop
push
pop
les
pop
push
and
test
popf
shrb
dec
pop
out
bound
mov
inc
adc
lock
mov
inc
pop
xchg
imul
lds
fld
mov
cmp
fisubl
mov
js
add
imul
sbb
enter
shrb
inc
pop
or
xor
leave
mov
adc
sub
cmp
and
int3
insb
sbb
imul
push
dec
inc
push
sar
inc
adc
inc
repnz
and
push
es
cmp
loop
mov
stos
aam
andb
cmp
ds
addl
dec
xor
add
inc
pop
orb
inc
in
add
push
lret
or
fwait
leave
mov
fsubrs
dec
or
test
and
jo
cmc
xor
ljmp
jno
add
inc
jne
icebp
mov
mov
inc
inc
insl
mov
int3
pop
popf
popa
rolb
aaa
push
pop
adc
gs
sbb
jbe
idivb
sub
mov
shlb
loope
pop
adc
cmpb
add
jne
ss
jae
push
cmp
jge
scas
clc
mov
xor
out
mov
leave
push
out
nop
mov
adc
jmp
lahf
mov
lldt
cmp
pop
sub
jo
enter
out
pop
mov
sbb
lds
dec
mov
mov
sahf
dec
or
repz
sub
test
stos
xor
imul
mov
inc
fmul
popa
add
mov
fbstp
sbb
add
imul
ds
jmp
add
xor
or
mov
sbb
xchg
sbb
push
sbb
inc
je
mov
inc
sbb
vmwrite
jle
cmp
enter
hlt
jne
shrl
add
outsb
setne
add
stos
add
push
jae
add
popa
push
in
fsubs
jecxz
fwait
jge
sub
loop
push
add
inc
xchg
mov
inc
jo
add
jo
lret
add
cmp
sub
push
inc
repnz
pop
in
adc
outsl
push
lock
pop
jge
sbb
or
push
movsb
and
sub
enter
jnp
js
push
cmp
fstl
stc
and
inc
fisttps
cmp
fiadds
ss
out
or
jb
xchg
pop
cmp
loop
inc
jo
mov
pop
jp
test
fs
dec
push
aas
sbb
sub
push
jg
filds
mov
sub
and
add
or
push
insl
sbbb
xchg
cmp
popf
shr
push
test
ds
mov
and
pop
xor
imulb
loopne
jl
push
mov
mov
sbb
lock
fs
not
adc
mov
adc
out
pop
pushf
mov
data16
lea
or
mov
popf
add
dec
push
cmp
mov
out
clc
les
fists
lods
movb
mov
into
pop
pop
shlb
negb
push
jl
mov
add
fs
mov
fs
add
inc
lods
jo
ret
cmp
mov
js
xor
mov
mov
in
mov
fdivrp
add
inc
dec
cs
fdivrl
add
pop
dec
sbb
push
es
fisttpll
rorb
or
shrb
sarb
adc
inc
cmp
sbbl
xor
adc
cmp
push
test
add
sub
out
and
sbb
movsb
and
divb
mov
shr
xor
mov
pop
cmpsl
test
test
test
rol
popa
or
adc
pop
mov
sbb
mov
cmp
adc
or
add
cmp
fs
lcall
pop
mov
out
xor
scas
pop
pop
mov
insb
adc
add
xchg
fwait
jge
lret
mov
xor
cmp
and
test
cmp
fisttpl
data16
add
bound
sub
repnz
adc
sub
mov
ds
negl
jo
orl
lock
pushf
lock
mov
add
mov
and
dec
jmp
cmp
xor
adc
xor
cs
popf
ds
int
jge
push
in
in
sub
jns
sbb
mov
mov
icebp
lock
and
xor
ss
mov
int
cli
mov
aas
test
inc
mov
jns
daa
jge
rcr
jbe
das
add
mov
adc
sbb
add
rcl
ret
dec
xchg
cmc
cmp
enter
pop
scas
jae
or
xchg
shlb
jle
mov
cmovno
mov
push
xor
cmp
xor
adc
mov
add
ljmp
das
in
xchg
inc
jp
dec
lret
push
cli
nop
add
mov
imul
add
xchg
and
aaa
sub
push
das
mov
or
out
push
arpl
jno
test
lds
pop
insl
mov
adc
shrl
cmp
dec
ss
mov
aad
mov
stc
adc
xor
jg
lods
repnz
fwait
dec
loop
push
sub
bound
jae
add
xchg
ja
add
push
cmp
add
mov
les
test
outsb
jmp
sub
sub
or
loopne
and
xchg
nop
push
test
mov
mov
mov
cmp
mov
pop
add
pxor
and
enter
lret
add
stos
lds
cltd
lock
add
adc
dec
repnz
jle
pushf
aad
enter
cmp
ret
out
fwait
add
mov
into
or
push
enter
add
jb
jo
hlt
mov
xor
jnp
or
or
ds
pop
mov
push
ljmp
in
pop
scas
outsl
lods
add
cmp
xchg
sbb
push
cmp
sub
dec
sub
cmp
dec
or
iret
jbe
sub
jb
test
jb
cmp
xor
ror
sub
sbb
or
inc
loopne
add
and
addb
lea
scas
add
add
cmp
mov
out
cmpsb
pusha
or
call
bound
rorb
inc
mov
andb
jbe
sub
or
nop
loopne
enter
pusha
adc
xor
daa
inc
mov
push
mov
pop
jge
cld
out
adc
inc
xchg
add
cmc
xchg
js
enter
shrl
sbb
xorl
mov
iret
daa
shlb
jno
imul
sbb
mov
insb
add
jns
repnz
cld
push
push
add
dec
in
mov
add
inc
adc
cmpb
pop
add
enter
jecxz,pt
hlt
in
add
sarb
stos
adc
push
mov
and
imul
loop
mov
imul
add
cmp
test
enter
lods
jae
add
outsl
xchg
cmp
xchg
inc
push
adc
jl
adc
xor
add
addr16
test
clc
daa
in
pusha
in
and
stc
add
je
fwait
pop
stos
in
inc
jb
or
jp
je
sbb
sub
jmp
outsl
mov
xor
mov
push
xor
cli
add
das
jl
and
popf
push
fidivrs
or
xor
xor
adc
pop
xor
adc
and
enter
cmp
mov
out
sbb
repnz
jns
hlt
jge
subl
or
and
test
and
pop
pop
roll
mov
xor
push
sbb
gs
in
mov
js
loope
and
pop
pusha
xchg
ret
cmp
popf
jp
ja
mov
mov
rorl
inc
fsubr
inc
jae
xchg
leave
fmuls
adc
test
pushf
sahf
outsl
ss
scas
and
or
rorb
or
jbe
das
adc
out
popa
mov
push
loop
add
stos
movsb
sub
dec
orl
cmpsl
add
hlt
xchg
lcall
cmc
add
js
addr16
in
cmp
add
faddl
gs
test
in
cmp
in
les
out
hlt
mov
leave
in
add
jns
sbb
inc
test
dec
lcall
or
pop
and
inc
pop
jno
mov
or
gs
cmp
xchg
jge
in
mov
filds
jl
orb
out
repz
mov
adc
or
push
ljmp
xchg
xchg
xor
pop
jo
shl
mov
sub
cmp
jl
mov
enter
mov
scas
dec
ss
or
leave
call
mov
add
aam
lret
add
dec
push
or
test
jmp
adc
out
cli
add
rolb
lods
push
adc
or
repz
aad
cmp
adc
jne
jp
add
cld
ss
int
pop
mov
inc
lea
sub
and
test
imul
mov
daa
mov
push
add
sahf
mov
pop
inc
loopne
jecxz
pop
dec
sub
fcoms
push
add
rcrb
and
cmp
in
and
mov
roll
dec
jg
sub
xchg
fs
ret
sbb
clc
in
popa
xchg
lret
rolb
cltd
mul
nop
push
call
pop
and
cwtl
xchg
xor
and
in
jl
mov
test
push
xor
repz
das
mov
lret
cmp
adc
aam
clc
leave
add
mov
xlat
daa
add
lret
dec
fsubl
mov
sbb
call
repz
in
pop
xchg
mov
xchg
int3
pusha
adc
adc
add
or
add
lahf
xchg
bound
dec
repnz
neg
or
mov
pusha
fisubs
fmuls
push
or
inc
divb
psraw
xchg
mov
push
es
dec
shlb
cmp
nop
mov
add
insb
mov
ljmp
loopne
jb
loop
push
push
dec
aam
rorb
in
add
imul
inc
and
out
dec
movsl
add
popa
shlb
lock
imull
sub
mov
mov
dec
cli
js
arpl
and
iret
adc
push
xchg
mov
addb
add
jae
cwtl
or
lret
mov
inc
testb
in
and
jmp
or
lret
inc
add
jno
sbb
aam
cld
add
mov
dec
jmp
js
jne
shl
lret
out
and
add
and
outsl
rorb
add
xlat
add
cmp
or
enter
js
pop
loop
filds
or
cmp
and
add
ljmp
push
outsb
adc
cmp
das
jg
mov
lock
xchg
add
mov
inc
pusha
cld
mov
jecxz
cltd
xor
daa
or
aad
mov
adc
call
mov
popf
test
andl
test
push
cwtl
popa
rcr
dec
ja
xchg
iret
xor
orl
mov
mov
adc
sbb
inc
xchg
add
jge
je
xor
andl
push
mov
inc
and
cmp
xorb
cmp
sub
aad
push
sbb
jmp
pop
add
js
adc
bound
stos
in
js
icebp
pusha
mov
enter
aam
iret
in
rclb
cmp
add
inc
imull
ret
ljmpw
les
jns
addl
sbb
mov
inc
pop
shrb
add
mov
push
inc
adc
dec
sbb
pop
add
pop
lret
inc
es
xor
inc
clc
ljmp
loope
adcl
xchg
mov
popa
stos
je
push
or
push
push
inc
push
jmp
pop
js
sbbl
enter
sbb
inc
sub
dec
psubsw
mov
mov
and
and
push
scas
popf
xchg
addl
xor
mov
das
add
loope
shr
jns
sbb
ret
mov
or
rcll
enter
rolb
leave
sarb
pusha
add
cld
inc
lcall
mov
cwtl
or
and
adcb
jl
inc
call
fwait
add
movsl
sub
mov
cmpsb
mov
xchg
out
mov
xor
and
adc
xchg
in
popf
jle
xchg
adc
cmp
adc
pop
cwtl
mov
test
shrb
mov
mov
enter
dec
leave
rolb
mov
cmp
ret
nop
or
add
dec
push
mov
cmpsb
inc
loope
cmp
into
jp
inc
out
cmc
insb
in
cmp
sub
xchg
sbb
add
mov
repnz
adc
mov
call
imul
les
movsl
ljmp
iret
shl
bound
je
nop
dec
or
repz
xchg
daa
jb
add
mov
inc
dec
or
fdivl
insb
cmp
orl
test
loope
or
sub
lock
and
ljmp
add
dec
lock
inc
mov
bound
fisttpll
jns
jns
sbb
mov
mov
mov
xchg
nop
fiadds
push
repnz
mov
push
add
loop
jl
and
je
enter
rclb
and
xchg
cld
aas
jmp
mov
mov
xchg
xchg
xor
and
mov
push
cs
sub
cmc
mov
rclb
in
out
inc
cmpsb
and
in
in
push
xor
cmpl
sbb
ret
adc
popa
pop
xchg
sub
mov
xchg
cmp
jge
add
aam
add
sub
repnz
xor
inc
push
mov
das
outsl
add
cmp
jo
push
insb
add
test
fsubp
adc
mov
cmpsl
icebp
and
jbe
imul
xchg
cmp
push
das
jbe
jmp
ds
mov
add
ds
adc
and
orps
or
shrb
pop
add
jae
add
cmp
ljmp
inc
in
xlat
mov
lock
or
xor
lret
sbb
hlt
lods
mov
fucomp
pop
push
les
orl
roll
data16
stos
pop
adc
pop
ds
and
add
std
out
or
call
dec
rorb
in
repz
adc
jecxz
lret
aad
mov
add
push
add
mov
jo
pop
cmp
mov
jl
icebp
sbb
enter
add
jge
pop
arpl
cmpb
push
or
fimuls
dec
xor
or
push
jnp
in
mulb
les
add
adc
xchg
xor
cli
mov
mov
cmpsl
lret
jl
jb
leave
add
xlat
add
shr
loop
rcll
repz
mov
lock
lods
ret
test
mov
inc
sub
int3
xchg
push
fidivl
orb
fstpt
nop
and
sbb
lea
lods
in
adc
add
sbb
mov
pop
and
cmpsb
add
mov
or
mov
mov
into
xor
or
adc
mov
add
lret
addr16
ss
jbe
add
push
add
sarb
sbb
cmpl
dec
inc
xor
enter
xor
and
mov
cmpb
mov
lods
enter
mov
in
clc
adc
mov
nop
dec
add
inc
pop
sub
in
add
cltd
dec
aam
adc
call
inc
ds
sbb
loopne
sti
imul
imul
call
push
add
push
loope
mov
cmp
mov
push
sub
add
das
xlat
imul
add
out
sub
sub
mov
aam
nop
sbb
andb
add
shr
pop
lods
sbb
inc
out
cmp
inc
es
adc
xchg
enter
lock
jecxz
call
lahf
rolb
lods
adc
cmpl
inc
add
bound
andb
inc
aam
pop
add
xor
pcmpgtd
cmp
xor
add
leave
out
mov
iret
lcall
adc
icebp
cmp
jmp
mov
add
imul
jmp
jl
xchg
roll
negl
decl
data16
jmp
add
mov
push
push
xor
xor
enter
push
jns
adc
jecxz
enter
out
mov
or
add
inc
xchg
test
aam
loope
hlt
sbb
in
leave
xchg
push
test
scas
mov
sub
inc
adc
add
jb
fwait
adc
insb
outsl
hlt
add
movsl
lock
inc
pop
enter
in
adc
int3
lret
and
mov
mov
add
cmp
xor
push
wrmsr
cmp
pop
push
sub
xor
sub
loop
jge
add
lods
or
cld
mov
fxtract
mov
mov
or
xchg
call
idivl
out
mov
and
sub
in
cmp
sub
loopne
push
stc
push
insb
and
or
in
pusha
leave
dec
inc
sarb
dec
mov
call
test
sub
mov
xchg
mov
orb
pop
add
lcall
in
cs
cmp
popf
and
hlt
call
in
add
movsl
lods
adc
jl
or
adc
add
ds
mov
mov
mov
cmpl
push
jl
or
mov
dec
adcl
push
mov
imul
sti
add
jmp
adc
mov
test
nop
mov
pop
jb
mov
andb
sbb
aam
mov
clc
outsb
dec
xchg
adcb
pop
rolb
adc
addr16
add
insl
repz
inc
in
or
mov
pusha
mov
xchg
test
repnz
repnz
mov
add
push
lahf
sbb
fmuls
dec
inc
nop
inc
pop
jne
adc
mov
mov
inc
rcr
mov
pop
or
dec
push
mov
test
stc
dec
add
cs
push
loope
xor
dec
adc
hlt
ret
cmp
mov
mov
jae
mov
fsubr
xorb
out
fwait
xchg
and
inc
daa
std
mov
jns
cwtl
add
cmp
aaa
mov
jbe
mov
ficomps
jl
repz
cs
pushf
or
les
insl
lcall
lar
mov
mov
das
gs
mov
adc
mov
and
fdivrl
inc
hlt
add
out
pop
mov
rol
icebp
hlt
adc
mov
sub
cmc
mov
and
add
jno
mov
pop
push
int3
cltd
mov
sbb
cld
xor
lret
add
xor
fmull
les
adc
xchg
push
nop
or
fimuls
inc
fcompl
hlt
pop
loop
test
cmp
testl
ja
in
mov
pop
ret
roll
roll
pop
js
enter
stc
push
or
lds
lock
sub
xchg
adc
or
jns
sbb
xor
xchg
cmp
mov
or
add
cmp
ds
adc
addr16
push
daa
ficoms
or
adc
sub
xchg
addl
inc
jl
jo
adc
outsb
mov
inc
pop
movsl
loopne
xlat
mov
es
inc
popa
outsl
out
popa
sti
add
pop
leave
jne
pop
sbb
inc
hlt
add
push
mov
outsb
and
call
push
imul
add
sbb
mov
les
test
repnz
push
pushf
in
lahf
out
adc
stos
mov
fsubrl
inc
pop
inc
testb
incb
dec
stos
adc
dec
jb
rcll
pushf
lock
mov
jns
push
mov
leave
push
shlb
adc
xchg
cs
jecxz
mov
test
arpl
adc
es
fnstsw
and
adcl
rorb
sbb
sbb
scas
cwtl
mov
push
add
mov
pusha
cmpsl
adc
or
rorb
add
pop
and
daa
subl
fisttpl
in
iret
hlt
fsubrl
sbb
decl
insl
push
mov
or
rcrb
adc
sbb
lret
push
movsb
sub
or
outsb
mov
loopne
jmp
adc
bound
es
pop
sbb
xchg
scas
rol
test
add
add
push
sbb
mov
test
pop
mov
adc
push
ret
or
icebp
fldt
clc
xor
jle
mov
imul
mov
loopne
shrb
addps
hlt
mov
sub
and
mov
aam
xlat
loope
lock
fisubl
sbb
mov
aam
or
add
pop
pop
add
xor
mov
jo
and
cmp
pop
fiadds
cld
addr16
lods
lods
xor
and
movsb
enter
mov
adc
or
outsl
add
adc
or
pop
xchg
inc
jo
dec
xchg
mov
cmp
fstl
in
popf
dec
mov
mov
inc
out
and
inc
jne
das
sub
aam
lahf
xlat
pop
sub
or
xchg
leave
mov
pop
or
or
rorb
jo
cmpsb
mov
imul
jge
mov
xor
jo,pn
inc
imull
jne
das
jbe
jae
add
mov
movsl
jb
xchg
hlt
or
repnz
pusha
jbe
xor
dec
sbb
popf
mov
inc
out
int3
xchg
lahf
jae
jp
push
xchg
dec
or
das
sub
lds
adcb
and
adc
sbb
jo
fucom
xchg
fisubrs
movsb
jo
jp
insb
pusha
pop
into
insb
enter
or
cmp
mov
mov
push
pop
add
inc
jno
sub
insb
int3
xor
lds
add
loope
lret
add
pop
outsb
inc
and
iret
imul
addb
push
js
ret
or
cmp
jo
fisttpll
jmp
js
jno
xchg
lret
mov
or
repz
add
fldt
sub
xchg
orl
cmp
cs
jo
pop
fiaddl
outsb
or
test
mov
imul
pop
js
sar
xor
cmp
xchg
pop
push
add
jmp
add
pusha
inc
pop
mov
jecxz
jp
gs
or
push
fmull
cmpb
xchg
gs
in
lret
sbb
pusha
add
addb
int3
or
add
xchg
stos
push
pop
es
add
dec
add
cmp
pop
les
test
xchg
adc
or
mov
andb
das
test
popf
or
xor
inc
inc
dec
arpl
mov
pop
js
mov
ror
jae
or
pop
jno
mov
adc
push
jbe
into
pop
out
add
cld
fisttps
js
add
jns
xchg
fbld
push
lret
or
push
add
push
jo
imul
xor
or
repz
aam
pop
inc
sarb
sub
roll
test
sti
adcb
inc
xchg
adc
jno
add
or
addr16
rcll
call
jp
testb
mov
jo
cmpb
pop
jp
ret
pop
xlat
nop
adc
adc
pop
fwait
cmpb
inc
nop
fs
popa
jne
jo
or
xchg
daa
leave
cmp
hlt
or
jl
xorb
push
adc
jge
jmp
mov
mov
xor
popf
mov
mov
es
call
pop
mov
or
lcall
setle
jbe
int
mov
sub
push
adc
jmp
aaa
xor
cmp
pop
test
add
inc
inc
leave
push
mov
sub
add
out
xor
rol
jne
dec
sub
je
std
into
rolb
jb
jo
xchg
push
into
add
mov
add
leave
loopne
cmp
jmp
sbb
jmp
push
mov
dec
jns
xchg
jecxz
rorb
hlt
sarb
in
push
sub
inc
testb
out
xor
xchg
inc
and
jg
push
stos
cmp
mov
pop
repz
mov
movb
lods
popa
add
mov
and
lcall
add
orl
int3
or
and
push
inc
pop
test
imul
mov
mov
das
fcomps
dec
out
xor
fs
jns
add
sarb
xchg
inc
jne
movsb
jo
add
cs
popa
pop
shlb
dec
dec
mov
add
pop
test
cltd
mov
jle
in
fildll
jle
inc
and
testl
shlb
push
icebp
mov
or
imul
adc
jge
adc
add
ret
mulb
gs
and
add
repz
test
xchg
adc
xor
je,pt
leave
jbe
pusha
or
inc
insl
in
sub
shlb
mov
push
add
rorl
sbb
sbb
or
fcoms
xchg
lods
and
add
xor
xchg
jbe
jnp
fs
add
insb
mov
lods
cmp
imul
xor
orb
sub
jl
test
testl
pop
mov
jp
mov
mov
popa
add
push
js
cmp
and
int3
mov
scas
stos
adc
loopne
jg
cmp
push
and
mov
outsl
jns
cmp
push
lea
mov
push
cmp
sub
lret
dec
mov
inc
fcoml
test
xchg
or
ds
lds
lret
shll
pop
popf
adc
fistps
shrb
xchg
sar
add
push
sbb
sub
inc
add
push
popa
movsb
lret
test
adc
mov
testb
sub
gs
pushf
cwtl
add
notl
and
fs
mov
lds
pop
adcl
shll
cwtl
sub
dec
mov
inc
leave
cld
les
xor
loopne
mov
cmc
adc
add
ss
mov
lcall
gs
xor
mov
imul
dec
push
mov
sbb
rorb
jo
clc
add
pop
jecxz
inc
inc
lret
dec
outsl
inc
and
cmp
leave
nop
fsubl
outsb
imul
mov
push
repz
lods
push
inc
mov
sbb
push
fiaddl
xchg
mov
dec
jl
shrl
incl
hlt
popf
jno
jecxz
dec
sub
lcall
pushf
das
icebp
in
sti
mov
add
mov
repnz
add
loop
dec
push
insb
or
jp
mov
pushf
repz
rolb
add
cmp
mov
cld
cmp
sbb
or
dec
add
test
mov
enter
mov
or
cmp
adc
or
mov
dec
pop
pop
adc
ds
xchg
add
xor
imul
repz
pusha
sub
push
and
test
imul
in
dec
xor
daa
fcomps
mov
sbb
fucomip
pop
xchg
inc
test
das
add
push
mov
and
mov
dec
call
test
clc
xor
adc
mov
jmp
test
dec
iret
sub
push
fwait
in
sub
mov
das
jp
push
imul
dec
xchg
clc
mov
sbbb
mov
and
fucomp
lods
adc
jmp
mov
mov
mov
add
in
push
jge
xchg
rolb
push
in
mov
add
cwtl
mov
vmwrite
sbb
jmp
arpl
cmpsb
add
fcompl
lret
pop
cs
in
add
pop
xor
dec
add
push
mov
inc
sub
aaa
sbb
test
pusha
lock
leave
aad
aas
shlb
into
std
jne
je
jl
icebp
in
jp
lods
add
bound
in
fistpl
repnz
or
or
pop
and
adc
addr16
add
filds
dec
add
addl
sbb
outsb
or
add
fiaddl
int
sbb
aad
or
les
sahf
add
jnp
adc
jns
or
add
add
sub
arpl
cmpl
sbb
popa
inc
or
cmpsb
and
xor
rcrb
sbb
jle
mov
shll
mov
adc
jns
adc
scas
adc
xor
mov
in
test
adc
lea
adcb
xchg
or
or
inc
or
pop
and
ret
jl
pop
and
sbb
xor
sub
xchg
or
sbb
xchg
and
cmp
sub
arpl
fstps
xor
clc
loope
xor
in
mov
orl
push
les
stos
mov
mov
dec
push
and
lea
sbb
ror
or
bnd
push
or
loop
nop
jno
xor
dec
sub
movsb
xor
stos
mov
push
fcmove
or
stos
pop
push
aad
popa
xor
xorl
xchg
and
adc
and
lret
pop
push
les
imul
mov
xor
mov
mov
inc
jnp
xor
cli
inc
and
int3
adc
in
push
add
lcall
movsl
push
shl
es
popa
mov
test
push
or
inc
lods
push
and
pop
mov
or
sbb
and
inc
jecxz
and
jmp
adc
xlat
mov
or
push
or
cmpsl
daa
lock
pop
sbb
jno
dec
addl
or
pop
cmp
inc
insl
imul
stc
mov
sbb
or
ret
mov
and
xor
mov
and
or
cmp
push
pop
pop
arpl
movsb
add
adc
adc
and
fsubp
int3
add
daa
or
ror
push
lock
clc
add
les
push
aam
fiadds
add
inc
dec
jecxz
pusha
push
xor
das
or
xchg
mov
repz
mov
data16
mov
popf
mov
jge
mov
outsb
xchg
clts
popa
stos
push
add
ja
mov
jne
push
lds
leave
fbld
setns
push
fldl
jo
jmp
xor
pop
jle
xor
push
inc
sub
aam
mov
dec
pop
add
ljmp
add
imul
aaa
adcl
into
lea
pop
add
and
aad
ss
loope
xor
leave
lods
pusha
add
std
add
inc
popa
stos
pop
or
mov
and
add
outsl
push
fadds
stc
frstor
pop
push
push
lcall
inc
dec
xor
push
push
cmp
add
dec
arpl
mov
les
push
hlt
hlt
addr16
or
push
mov
cmp
add
aam
pop
sbb
adc
ror
add
cmp
lahf
jge
icebp
pusha
cmp
xchg
xor
lock
mov
cmp
ss
cmp
pushl
xchg
enter
or
mov
sub
and
jecxz
lahf
and
pop
pop
fidivs
ss
outsb
add
pop
jge
les
roll
jp
in
or
push
xor
adc
int
lar
inc
mov
inc
popa
add
aad
pop
in
lock
push
pop
or
jl
add
xlat
popf
jp
rcr
add
sahf
add
add
addb
mov
jl
add
mov
mov
cmp
daa
mov
add
adc
xchg
cmp
pushf
jns
fldl
push
sbb
in
mov
adc
xchg
lea
fsubr
sbb
arpl
leave
add
loopne
sbb
aad
notl
cmc
sbb
pop
jo
cwtl
sbb
dec
hlt
mov
and
add
imul
frstor
adc
mov
dec
inc
mov
adc
sub
hlt
push
or
adc
and
and
push
add
cld
shll
push
push
test
mov
ljmp
mov
xor
in
mov
in
xchg
lds
jmp
inc
jle
into
and
cwtl
mov
or
add
and
shlb
sbb
nop
xchg
daa
or
call
loopne
adc
or
xor
push
xchg
test
inc
int3
sub
loope
push
out
dec
sbbb
or
push
mov
scas
inc
cmp
adc
jo
inc
lret
push
mov
aam
inc
dec
dec
and
push
inc
addr16
mov
mov
pop
pushf
arpl
ds
mov
sub
test
fwait
sub
mov
push
rcr
popl
xor
xor
mov
or
lret
xchg
nop
xchg
aad
push
or
push
loope
mov
rcrl
mov
nop
shrb
aad
dec
cmpb
addr16
dec
xchg
pop
or
add
icebp
add
inc
adc
lods
mov
jo
add
lea
jae
pop
shl
jnp
adc
shrb
xor
jo
movsb
cmp
adc
andb
or
popa
adc
int3
xor
sbb
leave
mov
cmp
add
lods
mov
pop
popa
aam
push
inc
nop
and
push
sbb
add
cmp
push
mov
adc
and
sub
lods
or
pop
jg
into
xor
or
insl
add
call
add
sub
add
lods
arpl
ret
scas
nop
dec
or
das
imul
dec
xor
mov
dec
in
hlt
outsl
sbb
bound
jnp
inc
in
mov
sbb
adc
cltd
adc
lds
mov
mov
or
int3
loope
add
cwtd
outsl
dec
aam
adc
sub
and
sbb
cmpsb
add
ret
into
mov
ret
and
inc
repz
cmp
aad
hlt
sahf
and
pop
leave
js
push
cwtl
adc
inc
fs
mov
dec
lods
jbe
adc
out
or
call
add
jno
ffree
push
outsl
cmp
mov
or
pop
xor
insb
inc
mov
mov
pop
xchg
add
lret
sub
or
xchg
jmp
or
shlb
inc
push
add
ret
in
jge
or
pop
jmp
clc
loopne
xor
mov
cld
cmp
adc
icebp
fisttpll
bnd
sbb
lret
mov
sub
fnsave
or
push
mov
adc
xor
int
inc
jle
pop
sub
mov
adc
fwait
pushf
add
sbb
adc
or
lods
adc
or
outsb
es
xor
lds
shrb
sub
xor
inc
jmp
inc
pop
cmp
imul
add
out
xor
rcll
or
mov
mov
jp
push
call
inc
inc
adc
inc
hlt
lcall
cmp
mov
sar
mov
ret
xlat
mov
cmp
pop
add
rcll
push
jp
in
lcall
rorb
fiadds
xchg
adc
enter
repz
jmp
add
sbb
repnz
jl
cmp
in
mov
in
dec
xor
shlb
fs
aad
test
insb
push
adc
lcall
push
mov
xchg
test
mov
dec
sub
adc
cld
addr16
or
mov
dec
jl
cmp
pop
cmp
stc
xor
movsb
or
push
scas
leave
or
pusha
fs
lea
loope
pop
adc
mov
xor
lock
cwtl
dec
or
and
adc
sub
jae
pushf
mov
or
fimuls
jbe
xor
movsl
xchg
cld
cmp
loop
cmpsl
pop
pop
push
or
add
add
popa
adc
mov
sub
jb
leave
fcmovbe
add
loope
mov
notl
add
addl
cmp
dec
aam
pop
in
adc
push
dec
xchg
push
sbb
sbb
ss
mov
mov
int3
dec
lock
movsb
mov
cmpsl
popa
pop
pop
nop
push
inc
pop
xchg
shlb
add
cwtl
push
fsubp
add
pop
push
adc
mov
add
popf
adc
cmp
and
daa
add
jl
sub
or
out
sbb
push
and
mov
enter
fiaddl
and
adc
or
jnp
and
pushf
xor
nop
in
pop
popa
or
push
add
loopne
rolb
push
mov
add
es
adc
test
pop
cmp
push
add
movsl
loop
test
leave
aam
pop
mov
inc
inc
dec
push
or
inc
cmc
add
or
xlat
leave
sbbb
lods
mov
xor
mov
add
out
popa
cmpsl
cmp
data16
popa
movsb
cmp
add
dec
sub
adc
mov
test
fsubs
mov
push
lock
lock
pop
or
sub
cld
les
cmp
insb
enter
and
loop
or
mov
int3
add
outsl
aad
jle
xor
call
cmp
pop
jg
aas
nop
movsb
cmp
mov
cmpsl
or
ljmp
and
daa
pop
push
push
jl
mov
jo
sub
subl
pop
add
xchg
lea
popf
loop
xor
mov
je
add
mov
add
ficompl
loopne
xor
mov
clc
or
cmp
push
cld
sub
or
push
cmp
push
lock
cmpsb
aam
lock
xchg
addb
out
pop
or
xor
aam
mov
call
cmp
outsl
fimuls
sub
in
or
add
mov
fdivs
dec
xchg
rol
pop
xchg
mov
sub
push
lods
mov
add
adc
repz
add
scas
xor
rcr
push
jno
adc
and
fcoms
mull
xorb
pop
lret
loope
jl
xor
sbb
mov
sbb
add
fsubr
mov
adc
cmp
rcrb
xor
sti
mov
or
data16
adc
mov
and
dec
jl
es
dec
add
insb
bound
cs
mov
enter
inc
jo
mov
sub
push
or
arpl
add
jns
mov
add
cltd
jbe
cld
fwait
pop
jne
pop
cmp
xchg
flds
xchg
cwtl
ja
push
dec
loop
or
add
sub
sub
imul
js
add
aam
xor
scas
stos
adc
push
push
fsubr
pop
adc
sub
mov
or
int3
mov
add
push
cwtl
jnp
in
and
mov
add
neg
push
add
test
mov
adc
hlt
sbb
xor
pop
jl
lods
inc
mov
adc
or
cmp
adc
cmc
pop
je
push
and
enter
and
or
rcrl
icebp
xchg
sarb
push
and
leave
pusha
push
inc
push
dec
rolb
sub
lock
ret
mov
xchg
add
pop
cmp
fisubrl
out
inc
pushf
ret
les
sub
push
xor
xor
add
sahf
mov
popa
xor
hlt
sbb
mov
nop
ds
daa
aam
add
cmpsb
cld
mov
jne
std
xchg
lds
push
jl
push
inc
pusha
cmp
xor
add
xlat
lock
pop
fnstenv
ret
jno
inc
iret
orb
or
xor
push
mov
sub
and
inc
and
aad
psrad
xorb
jg
out
mov
cmpsl
sub
and
mov
add
jns
sbb
pop
sarb
mov
sbb
xor
sbb
dec
jl
xchg
push
cmp
rcr
dec
test
ret
fiaddl
shlb
pop
dec
movsl
dec
insb
iret
rclb
pop
dec
cld
adc
les
xchg
leave
jbe
inc
repz
xor
nop
int3
cmp
bound
mov
adc
movsb
jo
push
sbb
pop
mov
leave
sarb
sub
fs
and
dec
add
sub
fadds
sbb
out
test
xchg
jns
mov
stos
test
or
mov
xor
cwtl
xor
out
mov
cmp
inc
subl
adcb
mov
xor
cmpb
test
mov
jmp
pop
jns
push
jl
pushf
add
stc
mov
je
push
leave
jp
pop
mov
aas
sub
daa
xor
or
adc
push
and
add
es
daa
cmp
sbb
add
xlat
mov
setl
add
sbb
ret
leave
adc
add
mov
mov
addb
rorl
pop
push
adc
fimuls
adc
push
xor
push
cmp
roll
add
push
xor
leave
hlt
mov
loopne
dec
ss
int
adc
and
ja
adcl
mov
test
pop
rcrb
mov
loope
mov
add
adc
int
pushf
aad
and
daa
jecxz
add
ret
clc
sti
fisttps
rcrb
sbb
push
popa
add
gs
pop
outsl
subl
cwtl
pop
test
add
inc
or
push
imul
mov
add
or
nop
cmp
xorb
bound
out
sbb
mov
test
imul
repnz
pop
fwait
jnp
mov
adc
lods
inc
push
sub
push
mov
cmp
shlb
je
in
sub
in
pusha
repnz
or
int
icebp
jb
adc
and
dec
xor
pop
adc
inc
cmp
push
ret
imull
aaa
jae
pusha
sbb
xlat
test
cmp
mov
inc
sti
hlt
mov
mov
sbb
ficompl
subb
icebp
lods
cwtl
push
adc
push
aam
mov
cmp
mov
ret
inc
dec
andb
mov
lds
jo
inc
pusha
sbb
add
pop
inc
fildl
mov
adc
sbb
push
pop
jp
sarb
mov
leave
jle
inc
in
xchg
dec
or
cmpsb
and
sub
clc
adc
test
loope
jge
orb
rol
std
add
popa
xchg
lret
cmp
dec
or
mov
mov
sub
pop
xor
cmpsb
mov
and
pop
add
out
or
insb
loop
mov
inc
mov
pushf
fsubrl
mov
das
lret
inc
daa
push
in
aam
repnz
sub
add
cmc
pop
add
aas
into
mov
push
loop
pop
adc
mov
out
mov
movsb
push
sub
mov
or
push
xor
sbb
popl
add
mov
mov
sbb
pop
cmpsl
add
test
pushf
outsb
push
cmp
pop
popa
test
inc
push
inc
pop
sub
pushf
and
cwtl
orb
adcb
stos
loopne
pop
add
repz
enter
mov
pop
lret
and
push
pop
xchg
jp
push
mov
shl
xlat
cmp
in
dec
jne
inc
dec
out
dec
cltd
mov
mov
ja
subb
lock
sbb
insb
xchg
mov
out
sub
cmp
add
aas
pop
dec
mov
sub
cwtl
or
pop
push
push
add
xchg
lea
scas
lret
pop
push
pop
bswap
and
dec
and
mov
dec
insl
cmp
sbb
sbb
and
push
btr
cmpsl
and
clc
mov
inc
js
push
sub
aas
rorb
or
das
inc
sub
mov
sub
fisubs
mov
rol
xor
ss
js
stc
adc
mov
test
addb
nop
pop
xlat
pop
inc
push
je
pop
pop
mov
xchg
inc
add
push
bound
sub
add
xor
aas
ljmp
mov
or
cmc
xor
inc
sub
mov
inc
loopne
adc
add
xchg
dec
xorb
sbb
fnstenv
xchg
pop
mov
pop
cmp
dec
cmp
sub
push
testl
sbb
out
out
xor
loopne
lods
mov
cwtl
adc
cmp
dec
mov
enter
adc
outsb
xor
nop
mov
and
and
leave
adc
mov
inc
or
add
mov
xchg
movb
loop
cld
pop
aas
rol
add
aaa
pop
add
inc
adc
xchg
mov
jp
icebp
fbld
sbb
aas
or
mov
pop
xchg
lods
pop
push
out
popa
add
mov
out
stos
jg
add
repnz
mov
pop
dec
clc
mov
or
or
sub
clc
aas
cmp
and
sbb
mov
out
xchg
and
dec
notl
mov
and
nop
inc
xorl
cs
lods
cmp
test
add
gs
loope
shll
add
enter
clc
cmp
push
inc
or
cmp
dec
dec
xor
call
add
adc
mov
sbb
or
xor
add
jg
mov
in
out
or
sub
and
shr
mov
xchg
add
cmpsw
int3
fisttpl
jl
lea
and
add
inc
negb
fcoms
aaa
inc
lock
and
or
mov
mov
lds
push
js
aas
xchg
mov
adc
mov
push
movb
rcrb
lea
adc
test
xchg
adc
mov
adc
inc
pop
cmp
sub
out
pop
stos
sub
xorb
cmp
in
mov
xlat
mov
cmp
add
sub
dec
ret
nop
xchg
into
or
pop
outsb
xor
das
and
mov
fmuls
es
int3
pop
bound
es
or
lock
push
add
in
sub
in
clc
nop
clc
add
mov
inc
and
out
mov
sub
call
shrb
pusha
push
xlat
shll
dec
les
sbb
lods
cmp
mov
leave
xchg
testl
mov
push
lret
lea
or
pop
xchg
mov
and
pushf
movq
mov
cltd
hlt
lea
movl
sbbb
test
fmull
bound
push
stos
xchg
push
sbb
dec
out
test
roll
dec
xlat
xchg
inc
or
in
js
mov
out
xor
jp
xchg
lds
test
sub
je
dec
push
aam
lods
push
sbb
add
jle
pop
arpl
mov
add
sbb
or
sbb
lds
ja
mov
mov
aad
cmpb
sbb
add
je
mov
inc
jp
xor
loope
popa
cld
aam
testl
push
inc
rcrl
nop
dec
and
les
lods
inc
sub
cmp
lock
sbb
pusha
cmpsb
xor
cmpsl
incl
mov
adc
add
xchg
lods
dec
adc
mov
inc
lock
pusha
xchg
or
and
mov
js
jbe
jg
add
lds
in
test
dec
cli
push
jle
push
mov
mull
mov
seto
inc
movl
xor
daa
push
and
dec
aaa
mov
inc
cmp
mov
cli
pop
jg
xchg
outsb
orb
clc
clc
add
out
imul
cmp
pop
loope
dec
inc
or
or
cs
je
lods
and
jno
adc
rorl
sub
fists
pop
adc
and
pop
jbe
xlat
mov
cmp
sbb
addb
loope
aad
jl
lret
cli
pop
adc
movsl
adc
dec
incb
adc
iret
pop
lret
sbb
rorb
cmc
cltd
rorb
xchg
sbb
pop
or
mov
sbb
mov
rcl
scas
idivb
repnz
adc
mov
rorb
sbb
fistps
mov
mov
inc
xchg
outsb
jns
lcall
push
jo
xlat
mov
pushf
add
adc
xor
and
movl
shr
mov
repnz
out
push
lret
and
lods
jl
insb
and
xchg
rorl
loope
push
insl
adc
cmp
pop
idiv
nop
mov
push
jmp
lret
or
adc
and
popa
filds
mov
push
pop
lods
cmp
sub
push
loopne
addr16
add
push
cmp
adcl
xor
addr16
stos
adc
add
mov
or
and
xchg
cmp
jno
orl
xor
mov
inc
mov
add
sbb
mov
xchg
loopne
addl
int3
das
sub
aam
adc
pop
or
pop
add
inc
jge
rcrb
xchg
mov
es
add
dec
mov
push
loope
sarb
pop
and
and
arpl
sub
and
jp
sbb
mov
jl
fildll
je
mov
addl
sub
dec
inc
jb
lcall
out
sbb
lods
mov
addl
or
pop
sbb
fwait
lahf
or
add
cmp
lret
mov
loopne
mov
push
inc
and
mov
addl
xchg
mov
jbe
add
insb
mov
add
fistl
cmp
xchg
je
fs
cmp
dec
cli
adc
sub
adc
add
add
xchg
sti
sub
adcb
outsl
and
inc
mov
fdivrl
and
dec
rcrb
pop
and
jo
fstps
mov
clc
call
rorb
pop
fiaddl
lods
call
sbb
int3
adc
xchg
pop
jae
push
clc
xchg
pop
cmpsl
add
pushf
pop
jg
cmpsb
gs
mov
sbb
adc
add
xchg
pushw
dec
sbb
add
or
pop
xchg
or
pop
push
subb
stos
mov
or
orl
push
mov
cli
sub
add
stc
sbb
push
push
and
or
push
xor
cmp
and
or
inc
fstpl
jle
add
loopne
xchg
xchg
add
int3
dec
sti
push
inc
mov
cmp
mov
insb
xlat
xchg
add
xor
sti
ds
aas
ja
adc
sbb
add
inc
mov
dec
add
int3
in
push
data16
dec
pusha
loopne
fstps
lock
sbbb
add
out
inc
dec
movsl
or
fwait
hlt
and
push
pop
sbb
inc
or
cmpsb
push
add
scas
mov
andl
cmc
and
pop
iret
mov
subb
stos
fucomp
pop
aas
xchg
in
adcb
sub
arpl
xchg
mov
fs
repnz
test
dec
lock
mov
xchg
dec
test
lret
fbld
inc
pop
arpl
mov
in
cwtl
test
inc
and
jns
gs
movsb
mov
movsb
sbb
mov
or
add
mov
test
gs
aas
xor
inc
mov
dec
pop
add
pop
insb
pminsw
les
aas
aad
inc
or
or
add
push
inc
adc
pop
xchg
pop
add
adc
add
aad
pop
xor
nop
ret
repnz
push
out
push
sbb
int3
and
push
push
add
pop
lds
jmp
nop
test
out
fsubr
sbb
stos
inc
mov
or
dec
cmp
mov
inc
mov
addb
lsl
sbb
mov
fmull
dec
dec
dec
movsl
inc
shlb
loope
orb
pop
inc
and
and
aas
pop
lret
mov
push
pop
and
dec
xlat
mov
js
add
sbbb
hlt
out
popf
dec
sub
mov
insl
mov
loopne
mov
xchg
mov
imul
rolb
pop
pop
xchg
sbb
or
out
cmp
xchg
divb
dec
or
lods
les
in
add
daa
cmpsb
jle
in
add
ljmp
add
pop
jno
push
mov
shl
xor
das
and
addb
mov
loope
mov
or
cwtl
cmp
sub
push
clc
mov
fcomps
movsb
adc
and
lock
mov
push
mov
rorl
int3
or
xor
rcrb
dec
adc
sub
clc
add
lods
stc
rcrb
aaa
pushf
lahf
add
fisttps
shlb
jo
mov
popa
or
adc
ret
adc
lcall
adc
addb
sbb
jl
fidivs
movsb
enter
inc
sbb
scas
sbb
into
popa
ja
dec
jo
mov
out
decb
mov
mov
call
push
and
pop
cmp
lds
push
jmp
fstpt
mov
adc
dec
loop
adc
adc
dec
cmp
pmaddwd
pop
mov
dec
cli
cmp
in
push
stos
cmp
add
hlt
xor
sbb
int3
fimuls
mov
add
inc
cld
fimull
add
movsl
or
pop
lret
rcrl
mov
add
cmp
lret
fstpt
andl
arpl
mov
orl
in
out
adc
jge
lods
and
add
daa
lods
add
fimull
mov
push
cmp
mov
lock
imul
jno
xor
and
movsl
sbb
lcall
mov
pop
sbb
xor
or
add
int
mov
or
pop
testb
adc
pop
pushf
aam
and
out
cmpsl
int
jl
mov
push
pop
hlt
mov
mov
mov
or
push
aas
fidivl
inc
cmpsb
fsubrl
ja
push
push
adc
daa
mov
cmpsb
xchg
dec
sbb
ret
les
out
mull
leave
adc
fimuls
mov
push
pusha
fs
sub
jmp
cmp
mov
arpl
iret
pop
pop
pop
xchg
jp
inc
dec
xor
pop
adc
outsl
sub
pop
mov
xchg
stos
push
sbb
and
je
add
cmp
ret
inc
xor
add
pop
xchg
mov
mov
js
add
dec
add
cmp
addb
push
push
and
lret
aam
push
std
mov
dec
adc
xchg
into
xchg
cwtl
scas
gs
sbb
shlb
lcall
xchg
xchg
addb
cmp
sar
pusha
xor
mov
enter
out
pop
push
js
out
nop
push
sbb
pop
add
ja
mov
cwtl
dec
push
arpl
or
mulb
aas
xor
into
repnz
cmp
cltd
cmp
dec
mov
ljmp
add
hlt
in
pop
dec
cli
pop
jle
mov
mov
add
int3
sbb
stos
faddl
nop
test
pop
insl
or
sbb
scas
jns
les
add
es
and
jbe
add
mov
ss
test
add
push
sti
add
data16
fldcw
or
add
test
push
xchg
je
clc
add
or
mov
dec
pusha
stc
push
outsb
sub
push
sub
xlat
pop
mov
sbbl
dec
test
pop
mov
shlb
or
mov
push
dec
imul
add
pop
adc
hlt
or
xor
add
aaa
push
xor
push
cld
sarb
jb
shlb
push
sbb
repz
imul
mov
mov
clc
loope
mov
pop
cmpsb
andb
hlt
add
imul
ds
popa
inc
inc
sbb
mov
cwtl
xchg
fsubrl
xchg
and
adc
leave
testb
add
ss
popf
mov
add
lcall
add
mov
dec
push
fwait
sbb
test
dec
add
sub
int3
jb
adc
pop
inc
mov
and
ret
dec
cld
dec
bound
xchg
in
mov
push
dec
mov
push
in
mov
add
test
mov
pop
cmp
mov
std
in
mov
mov
icebp
pop
xor
popw
mov
sti
sti
mov
sub
lcall
loopne
dec
aas
pop
mov
and
sub
inc
mov
xor
in
dec
cmpsb
aas
push
adc
sub
mov
xchg
movsb
nop
cli
lods
dec
pusha
xor
aad
add
push
adc
mov
fldl
es
xor
shl
xchg
cmp
xor
sub
test
test
mov
dec
insb
inc
jno
aas
bndldx
push
mov
cmp
mov
xor
in
mov
nop
aaa
add
and
lods
xchg
sarb
push
xchg
je
and
or
inc
pusha
xor
lock
insb
lds
cmp
sbb
cmpsl
loope
xorl
aas
iret
test
cs
notl
xor
pop
mov
hlt
dec
and
rcrl
pushf
mov
adc
loopne
jbe
lock
les
mov
pop
add
xor
insl
add
scas
sub
xchg
xor
push
ds
cli
or
fcoml
mov
jecxz
hlt
xor
dec
pop
or
pushf
hlt
rcll
or
add
push
mov
xor
adc
iret
outsl
jbe
inc
sbbl
in
les
jmp
pop
test
adc
push
inc
dec
ret
sub
xchg
sti
jge
xchg
inc
mov
sub
or
pop
aad
dec
sti
sarb
sub
sub
test
in
sti
outsb
add
test
jno
cmp
sbb
inc
fs
sub
inc
push
scas
xlat
shlb
add
stos
mov
int3
stc
inc
add
or
aas
or
les
mov
int
lods
sbb
push
mov
js
fs
std
in
inc
pop
push
rorb
imulb
sbb
xlat
mov
xor
int
xchg
add
sbb
push
push
inc
mov
insb
xchg
push
sets
push
mov
icebp
push
or
mov
inc
jo
popf
adc
xchg
pop
pusha
cmp
and
fdivl
nop
lds
ror
loopne
aad
mov
into
mov
rcll
sub
push
or
clc
dec
pop
or
iret
sub
or
icebp
scas
adc
xor
jns
or
adc
add
imul
push
add
daa
push
xchg
sub
lea
inc
and
out
lock
adc
inc
imul
push
aas
mov
aad
mov
adc
js
sub
dec
sbbb
outsl
and
push
test
cmpsl
dec
shrb
sbb
hlt
aad
add
dec
mov
insl
aaa
sbb
push
pop
sbbl
push
lret
scas
sub
pop
dec
ja
mov
es
shrb
or
mov
jno
mov
fidivrl
loopne
xchg
test
push
lcall
add
cmc
mov
mov
push
movhps
dec
popf
test
push
add
fs
lods
push
push
xor
sbb
pop
jo
pop
cmp
insb
sbb
clc
push
push
mov
xlat
cmpsl
mov
icebp
add
nop
popa
in
test
jl
rclb
xor
jmp
pusha
shlb
adc
jno
sub
push
nop
xor
mov
dec
stc
xchg
xchg
push
dec
out
andl
cmp
add
mov
aam
add
push
mov
cs
inc
fidivrs
sub
xor
cmc
scas
mov
dec
sarl
lods
mov
lret
je
add
or
xchg
mov
sbb
mov
les
inc
mov
mov
lods
dec
and
iret
mov
aam
add
sub
pop
dec
sbb
add
ja
cld
and
push
mov
cmp
dec
add
pop
or
pop
adc
or
push
out
xor
std
and
shlb
in
popw
xor
xor
inc
enter
xlat
mov
shlb
mov
push
js
push
add
add
cmc
stc
nop
adc
test
ret
xchg
jecxz
adc
movsl
mov
imul
jne
add
or
ds
xchg
inc
push
pop
fdivs
mov
xor
out
in
pusha
dec
and
mov
add
enter
jmp
mov
or
sbbl
push
push
sbb
fbstp
and
jg
add
cmp
add
xchg
sbb
pop
repz
cmc
int3
lret
ds
cwtl
sbb
cmp
push
mov
pop
sbb
dec
cmpsb
inc
push
mov
sarl
mov
mov
mov
ss
xor
mov
fsts
mov
sub
adcb
jg
dec
jmp
xchg
push
xor
sbbl
ljmp
add
sub
dec
xchg
pop
into
lahf
sbb
shlb
leave
mov
mov
pop
shrl
inc
inc
sub
add
inc
scas
das
ret
inc
int3
or
sub
or
adc
or
ds
in
das
pusha
arpl
ljmp
cmp
mov
or
loopne
sbb
xor
cmpsb
push
sub
in
test
and
jl,pt
lcall
mov
imul
adcb
mov
adc
adc
std
shrb
pop
in
mov
add
nop
jle
xorl
insl
jl
lret
scas
repnz
mov
sbb
loope
add
in
dec
add
mov
ja
lret
sub
aaa
or
mov
pusha
mov
enter
jp
rorb
pop
jg
pop
dec
test
add
mov
dec
lods
nop
and
xchg
sub
sbb
add
xchg
and
test
push
xorb
andb
cmp
sbb
lock
enter
aad
dec
sbb
dec
sub
dec
in
in
pop
mov
or
ds
cmp
sbb
fcmovnu
rclb
add
adc
add
mov
cmp
cld
daa
pop
testl
jns
bound
fs
cmp
pop
inc
xor
lods
mov
dec
shr
mov
daa
add
out
call
cmc
add
jo
adc
cmpsb
xor
sub
mov
fdivl
orb
je
adc
aas
cmp
sbb
ds
adc
test
outsb
in
adc
sti
mov
and
scas
dec
ds
adc
dec
add
rcrl
popa
in
inc
jl
rcrb
pusha
test
cs
pop
test
shrb
fwait
jne
cs
popa
inc
pop
mov
adc
clc
mov
or
xchg
out
xor
adcb
mov
add
rclb
fs
cmpsl
mov
jb
pusha
add
stc
pusha
or
or
rcrb
nop
cmp
faddl
adc
andl
sub
ret
clc
adc
mov
out
les
ret
dec
rcrb
shrb
inc
je
in
inc
movsl
sbb
test
adc
push
mov
pop
fbld
out
les
mov
mov
jle
push
sahf
out
hlt
movsl
cwtl
and
push
rolb
mov
nop
mov
les
clc
test
push
and
test
push
lock
ds
testl
mov
test
mov
xor
mov
push
mov
rcrb
jp
push
int
xchg
and
inc
push
outsl
mov
xchg
cld
pusha
clc
or
cmc
sub
add
fwait
nop
inc
adc
mov
dec
add
loopne
mov
sbb
iret
pop
and
ss
js
add
jno
dec
push
lahf
lea
mov
xor
dec
jb
or
inc
je
mov
xchg
inc
and
inc
sbb
ds
and
sbb
push
jno
jo
subb
pushf
add
icebp
mov
jmp
fdivrl
cwtl
cmp
pop
jo
loopne
push
add
pop
add
add
ret
adc
std
jecxz
fnstcw
push
push
mov
sub
stc
mov
mov
rcrl
loope
out
jbe
add
add
enter
daa
add
push
mov
addr16
sub
and
fisubs
mov
ds
inc
mov
dec
les
cmp
int3
shr
add
mov
sub
pop
inc
push
mov
jo
iret
jmp
sbb
mov
cwtl
sbbb
xor
add
cli
pop
cmp
pop
das
mov
push
and
into
pop
shr
jbe
add
push
push
sbbb
push
push
mov
into
sub
add
jmp
cmpl
add
jne
xchg
pop
add
and
flds
xchg
das
or
mov
jmp
out
testb
pushf
sub
adcl
push
add
loope
mov
pop
add
mov
adc
sbb
mov
jmp
dec
shl
add
outsb
adc
mov
jg
out
or
or
jbe
gs
or
or
orl
sbb
inc
and
mov
cmp
sti
sub
xor
fwait
add
pop
xchg
add
mov
mov
xchg
or
sahf
cmc
pop
add
jle
dec
xchg
xchg
mov
cmp
push
and
sub
incl
pop
cmp
pop
jmp
cwtl
push
push
inc
sahf
outsl
adc
cmpsl
and
mov
arpl
nop
jecxz
push
dec
jg
repnz
out
add
push
cli
and
mov
and
imul
or
cmp
dec
ja
sub
sub
pop
sub
pop
inc
xchg
add
mov
sbb
je
mov
add
not
jmp
ja
popf
pop
sbb
pushf
icebp
xor
inc
int3
mov
and
xchg
lahf
add
in
mov
pop
sbb
pop
xlat
ss
sub
and
or
mov
inc
lcall
repnz
jbe
sti
mov
sbb
push
add
xor
lods
xor
aas
orl
mov
xor
jge
jns
adc
add
adc
lret
iret
or
inc
mov
andl
jns
jmp
and
and
dec
jecxz
in
sub
pop
cwtl
jbe
jp
ja
sti
pop
neg
shl
or
jmp
testl
and
inc
mov
and
dec
arpl
nop
add
stos
or
sbb
insl
ret
and
push
mov
adc
pop
sbb
das
push
aad
popf
inc
pop
xor
jmp
iret
pop
aas
aad
enter
push
pop
and
sbb
mov
and
mov
cwtl
sub
data16
lcall
dec
fistps
psubusb
vpcmpgtd
mov
pop
pop
out
rcrb
adc
testl
lock
cmp
testb
fimull
cmpl
pop
sub
leave
add
and
es
rolb
aas
jl
xor
subb
jmp
call
xor
aas
xor
add
shl
mov
adc
xor
pop
add
jmp
neg
movsb
mov
sbb
pop
dec
pop
dec
outsl
and
pop
and
cmpb
loop
xor
xor
add
js
jne
cmp
jmp
shll
add
mov
lcall
and
dec
or
mov
je
or
xor
mov
fiaddl
cmp
test
shll
orb
sbb
not
addl
inc
and
mov
add
ret
jecxz
sub
push
loopne
and
fstps
xchg
xor
jp
lods
xor
adc
xor
popl
inc
mov
jne
pop
pop
sbb
mull
or
bound
inc
jns
or
xchg
pop
push
jae
pop
push
adc
lea
cs
and
push
push
lods
push
push
mov
adc
push
cmp
add
dec
pop
cmpl
sbb
lock
in
testl
shlb
cltd
dec
and
fdivr
adc
rolb
bound
sub
addl
push
ss
jg
in
and
add
adc
scas
gs
ret
jb
popa
xchg
movzbl
fdivr
pop
in
test
cltd
push
jmp
ljmp
and
test
mov
out
jg
std
add
mov
cwtl
pushl
dec
pop
xor
and
arpl
push
mov
mov
push
push
push
ss
add
add
push
adc
jmp
shl
mul
sub
jecxz
sub
pop
push
add
sub
mov
sbb
daa
repz
pop
jle
adc
or
dec
cmpsl
sbb
adcl
push
xor
or
ss
ficoms
add
ret
pop
popa
xchg
dec
loope
daa
sub
jbe
js
into
pop
pusha
or
inc
add
mov
cmc
aas
adc
add
xchg
rcr
sub
fdivrs
mov
sbb
jmp
aad
pop
xchg
sub
mov
sbb
add
mov
or
jo
jmp
mov
not
cli
sbb
push
aam
sub
in
lret
pop
stc
jbe
sbb
icebp
dec
test
sub
pop
push
xor
sub
test
fwait
sub
mov
sbb
pop
fcomp
mull
cli
shlb
xor
pusha
mov
dec
xor
mov
sub
dec
pop
cmp
cmpsb
xchg
sub
dec
xchg
adc
dec
cmc
addb
out
add
or
xor
mov
xchg
int
jmp
push
xchg
pop
mov
or
dec
sub
adc
adc
scas
xor
js
or
out
dec
loopne
adc
cs
adc
inc
push
adc
add
dec
xchg
sub
jmp
pop
and
fdivrs
and
xor
and
adc
push
add
xchg
add
setge
mov
stos
lcall
ret
lret
test
push
or
or
cmp
cmpsb
xlat
add
jb
hlt
cmp
push
rorl
jae
add
jg
lock
int3
xchg
out
adc
jae
push
sbb
popa
not
shr
jg
adc
nop
sbb
push
fs
jnp
xchg
rcrl
sbb
dec
dec
pop
dec
popa
and
stos
inc
dec
sub
sbb
sub
xor
jg
xchg
pop
adc
mov
and
and
ds
into
push
lock
pop
monitor
pop
and
xor
add
push
notl
xor
xor
rorl
cmc
pop
adc
jmp
movsb
mov
and
aad
add
inc
jmp
and
repz
scas
std
pushf
mov
sbb
xor
dec
roll
and
add
cmpsb
adc
mov
cltd
pop
sub
sub
mov
inc
or
bound
mov
mov
int3
sub
cmp
fcompl
jmp
pop
loope
push
subl
out
not
inc
subb
mov
and
push
or
fldt
dec
mov
movsb
add
ret
jle
xchg
pop
and
pop
dec
push
imul
dec
daa
dec
or
enter
ljmp
pop
mov
adc
adc
dec
daa
test
lea
lcall
mov
push
pop
bound
shll
jmp
adc
add
btc
jbe
fmul
xor
adc
enter
cmpb
sub
add
je
adc
pop
dec
dec
sbb
mov
mov
sbbl
and
xor
rorb
mov
xchg
jns
dec
xor
cmp
sbb
inc
ret
pop
adc
daa
xchg
fbstp
add
cld
push
jmp
gs
pop
add
push
add
and
jmp
xor
sub
ret
je
sub
mov
mov
push
aaa
inc
xchg
sub
inc
mov
js
insw
pop
mov
inc
subb
add
loope
mov
in
and
push
adc
fdivp
xor
pop
loopne
push
push
mov
or
sub
insb
clc
add
loope
rcr
sbb
out
pop
jmp
pop
call
and
cmp
jae
shrb
push
ja
pop
xor
mov
rorb
mov
xor
or
or
loope
das
mov
idivb
sbb
fs
jmp
mov
repz
sbbb
and
outsl
add
dec
push
or
or
push
xchg
push
push
cmp
pop
std
jp
cmp
adc
jle
ret
and
loopne
ljmp
divl
xchg
push
or
inc
lret
cmp
mov
pop
and
test
jp
test
adc
pop
or
fisttpl
sbbb
mov
cmpsb
jb
mov
mov
pusha
sti
mov
adc
enter
fsubrs
push
pop
repz
out
popa
jmp
jmp
xchg
pop
sbb
ret
and
fiadds
pusha
dec
daa
pop
sub
add
es
mov
stc
jb
add
clc
or
dec
insb
push
es
add
inc
inc
neg
dec
movl
xorl
mov
jno
scas
xor
pop
aaa
jmp
add
pop
xor
pusha
loop
push
adc
pop
outsb
push
push
sbb
adc
mov
xchg
jmp
inc
adc
pop
sub
xor
arpl
cwtl
rclb
push
push
inc
addl
aaa
pop
les
insb
mov
xor
insb
movsb
xchg
mov
xchg
rcrl
pop
pop
cwtl
stos
push
sub
testb
jae
mov
test
dec
or
add
and
out
add
pusha
sbb
sahf
jg
lds
lods
rcrb
or
xor
or
fs
test
dec
ror
outsb
cmpb
xor
ds
aas
xor
ficomps
sub
nop
pop
or
popa
sysexit
aam
sbb
das
rep
sbb
cs
or
mov
lcall
add
sub
xor
out
adc
sbb
dec
and
cmc
bound
jle
in
inc
and
nop
cmp
xorb
sub
clc
or
or
decb
fisubl
pop
icebp
ljmp
push
pop
hlt
cmpsb
fs
sub
xlat
sub
inc
jmp
test
mov
mov
add
jmp
mov
or
xchg
sarl
xor
insb
aad
and
cmp
int3
nop
std
and
out
lahf
push
adc
scas
pop
subb
mov
mov
inc
icebp
pop
push
ret
data16
sub
sbb
push
popf
ret
adc
test
jno
add
rcrl
cmpsl
add
pop
mov
loop
ret
ficompl
sbb
test
repz
add
mov
jg
pushf
test
mov
pop
js
pop
pop
sub
sub
cli
call
imul
orl
pop
jmp
sub
and
sub
or
cld
add
xchg
or
pop
pop
dec
xor
hlt
xchg
xor
pop
daa
or
sub
mov
test
jmp
pop
aaa
aam
movaps
test
inc
scas
jl
or
xchg
sbb
add
add
xor
push
mov
xor
mov
xchg
push
mov
or
jbe
lods
dec
js
icebp
push
pop
lea
adc
fdivl
negl
xor
mov
xchg
or
sub
pop
xlat
sub
add
ja
ss
sub
push
push
shlb
xchg
inc
push
inc
cmp
pop
lods
ds
adc
out
add
hlt
mov
cmp
lret
maxps
int
dec
pop
leave
and
pop
dec
pop
push
lods
xor
int3
add
mov
sub
fmuls
bound
jmp
adc
out
jge
loopne
adc
imul
lret
shrl
stos
rcrb
orb
movsb
and
fildl
push
mov
addr16
sbb
push
sub
in
or
ss
sbb
aad
dec
inc
int3
and
inc
xchg
pop
push
xchg
data16
xor
xor
pusha
sub
cwtl
out
sbb
add
add
jmp
adc
fsubp
push
inc
sar
jge
jmp
jmp
jb
jle
xor
dec
xchg
add
fldl
and
adc
push
in
shld
shll
push
sarb
loop
pop
mov
addb
xor
push
jmp
xor
outsl
ret
add
out
fcoml
pop
push
test
pushf
adc
das
andl
shld
cmp
ret
jl
cmp
sbb
jmp
add
add
ss
sbb
adcl
out
add
jmp
clc
decb
push
add
dec
inc
xor
or
or
imul
xor
inc
es
inc
mov
jns
cmp
sub
or
pop
adc
jnp
les
out
adc
stc
sbb
mov
xor
add
xor
sbb
pusha
addr16
mov
shr
imul
sub
dec
das
aam
xchg
mov
jl
arpl
fcoms
subb
xlat
cs
inc
ret
adc
and
int
aaa
int3
ret
das
flds
movsl
or
pop
or
push
lcall
mov
test
pop
lcall
mov
dec
and
mov
push
add
test
or
mov
sub
or
or
into
rolb
inc
xor
int3
jmp
loopne
mov
ljmp
jmp
pop
sub
sbb
or
outsb
shl
inc
lock
inc
rcrl
push
xor
outsl
ret
jno
xor
sbb
cli
adc
inc
stos
clc
mov
adc
sub
decl
add
mov
ds
cltd
adc
and
popl
into
jo
icebp
jl
and
rorb
out
or
inc
popf
sbb
add
in
pop
or
xchg
outsb
pop
mov
fmuls
xchg
sbb
push
jmp
jo
jecxz
pop
sub
push
fadds
pop
push
push
inc
jo
xorb
sbb
sub
incb
fs
xlat
and
cmpb
repnz
jmp
push
pop
pop
xchg
bnd
sbb
xchg
add
bound
cmp
cmc
mov
cli
pop
das
xor
add
shll
add
shrb
xor
das
pushf
inc
dec
add
sub
push
pop
pop
int
xor
and
adc
pop
add
sbb
pop
repz
pop
xor
mov
cwtl
sbb
adc
outsl
add
scas
mov
adc
push
xor
imul
stc
pop
jmp
lods
mov
out
fs
jmp
loope
addb
leave
dec
pop
daa
pop
mov
mov
inc
and
incb
cmp
sub
jl
pop
nop
dec
dec
push
add
shll
adc
inc
mov
and
jmp
mov
jo
mov
and
ljmp
ret
pop
sahf
mov
testl
mov
or
or
clc
adc
fstps
in
cmp
push
xchg
into
cmp
fnstcw
adc
mov
sbb
sbb
je
lcall
aas
shrb
inc
pop
mov
pop
mov
xchg
fadds
jle
cwtl
push
or
enter
outsb
sub
cmp
sbb
pop
or
sub
xchg
jg
icebp
mov
insl
cld
add
pop
dec
sub
mov
add
cmpb
add
fisttpll
xor
xor
clc
mov
shl
xor
jmp
xor
and
shll
out
or
mov
enter
dec
jp
cli
loop
nop
lock
mov
push
push
ljmp
out
test
stos
mov
lret
add
lea
popf
outsb
push
adc
adc
sbb
or
add
lock
popa
sbb
xor
loope
add
pop
sub
das
inc
cli
cld
cwtl
ss
rolb
jnp
adc
inc
jmp
clc
sbb
adc
ret
dec
pop
rcrl
leave
add
xlat
das
mov
pop
mov
data16
or
mov
into
inc
sbb
adc
ss
fwait
daa
je
and
xchg
lret
fmul
pop
push
mov
es
adc
notl
xorb
cltd
sbb
add
jmp
not
fidivl
ret
or
jmp
mov
popf
add
jmp
cmp
repnz
inc
jecxz
sub
sub
add
movsl
push
jmp
popf
nop
lds
nop
and
dec
insl
jecxz
shl
dec
sub
inc
push
mov
jp
adc
jne
add
pop
mov
cwtl
xchg
rclb
pop
dec
sub
or
loop
dec
rolb
in
neg
loopne
push
dec
sub
test
mov
pusha
and
sbb
in
adc
adc
push
mov
or
pop
add
push
mov
xor
cli
jmp
mov
push
dec
jo
dec
pusha
addps
push
push
enter
xchg
cs
inc
xchg
lahf
inc
div
imul
sub
ret
ljmp
pop
jmp
cmpsb
push
xor
cmp
ret
sub
sub
xor
notb
push
push
or
sbb
into
out
and
adc
inc
push
call
jge
mov
aas
or
mov
adc
adc
add
fs
sub
stc
fimuls
or
or
adc
sbb
mov
out
fdivr
xchg
cmc
aam
sub
stc
or
dec
sarb
jno
test
sub
cld
adc
gs
rcrb
lock
adc
and
jnp
dec
int3
cmpb
jbe
pop
pusha
lods
and
jge
fs
shll
leave
push
pushf
jge
push
pop
xchg
movsl
stos
push
dec
outsl
inc
push
das
push
adc
dec
push
lret
mov
rorb
and
hlt
or
or
jbe
roll
or
cld
sub
pusha
pop
and
push
daa
mov
repz
shlb
into
add
pop
jmp
add
ljmp
pop
in
xchg
xor
clc
pop
insb
adc
mov
pop
pop
pop
int3
imull
fs
fiadds
sub
pop
xchg
es
mov
out
aas
push
push
pop
mov
mov
rorb
cmp
jae
incl
loop
add
rorl
inc
shrb
push
xchg
dec
loopne
inc
cwtl
mov
xchg
jecxz
add
les
push
out
mov
mov
rcl
ret
out
add
out
sub
or
or
movsb
cmc
loopne
cmp
push
loopne
rcr
jl
push
lds
sbb
or
loop
adc
sub
jae
rorb
sbb
insb
dec
push
dec
or
xor
enter
or
mov
ja
jmp
pop
lea
pop
push
push
sub
or
pop
neg
repnz
jge
btsl
adc
push
jae
pop
ja
mov
movsl
push
sbb
imul
inc
lret
pop
sahf
xor
mov
sbb
and
flds
adcb
and
cmp
pop
mov
int
sarl
lds
sbb
inc
sub
and
jno
mov
lret
jno
push
dec
xor
addr16
jmp
pop
add
into
imul
xchg
shlb
xchg
outsb
aaa
push
mov
cmp
jp
mov
or
lock
add
and
push
or
xor
outsb
loopne
push
cmp
call
into
lret
push
arpl
mov
pop
out
sub
or
pusha
sbb
pop
push
ljmp
adc
aas
add
iret
iret
xchg
inc
dec
or
mov
lahf
inc
xchg
add
push
or
les
sbb
jbe
cld
cmp
in
inc
sub
adc
out
cmc
dec
inc
pop
inc
or
popf
mov
shrb
push
stos
push
out
sub
mov
cmp
mov
adc
and
negb
jo
mov
push
xor
nopl
sub
sbb
or
adc
add
and
shl
cmp
in
pop
ja
push
xor
aaa
test
xchg
addb
insb
push
add
int3
leave
xchg
lods
rorb
dec
dec
fsubr
add
sbb
adc
pop
inc
mov
mov
lahf
mov
aas
mov
push
out
jecxz
pop
cltd
inc
mov
xor
add
adc
cltd
shl
xchg
xor
nop
stos
sub
fsubl
fs
fsubrs
push
inc
filds
pop
inc
jbe
pop
sbb
orb
dec
jp
jbe
insb
adc
add
inc
or
lret
cld
std
sub
bound
and
stos
inc
xchg
or
lods
add
clc
ja
dec
jne
hlt
call
add
sysexit
push
inc
push
cld
and
push
cmp
push
pop
pop
cmp
sti
add
ss
pop
mov
pushf
sbb
adcl
in
shll
iret
pop
pop
xor
inc
jle
icebp
es
sub
push
inc
add
jnp
cli
rclb
push
sub
add
fadds
adc
sti
or
in
jae
adc
sub
iret
cmpsb
imul
nop
jb
jle
xchg
or
cmpsb
push
ret
shrb
ljmp
mov
loopne
pop
into
test
repnz
fs
mov
sub
popa
or
pop
jb
enter
add
imul
jmp
arpl
pop
fcomp
rorb
pop
push
push
add
sub
push
sub
pop
les
or
inc
sub
sbb
push
mov
mov
push
xchg
adc
xchg
insb
sub
push
push
xchg
mov
sbb
cmp
push
mov
adc
xchg
mov
cwtl
push
sbb
inc
or
dec
pop
lret
inc
icebp
cs
xlat
pusha
popa
bound
push
jo
cld
or
insl
pop
push
sub
shrb
push
push
mov
add
pop
cltd
cli
dec
sahf
dec
add
jne
lock
and
adc
sub
loopne
loopne
pop
sbb
rcrl
or
and
push
lock
add
repnz
or
fwait
add
in
xor
test
push
aad
ficoml
add
outsl
xchg
push
jp
add
pop
addl
cmp
pusha
inc
and
scas
inc
sbb
fmuls
inc
xchg
cli
dec
xor
xor
or
rol
xor
mov
mov
inc
jmp
add
dec
pop
insl
aad
mov
push
test
arpl
iret
lret
ret
jnp
cmp
testb
shr
outsb
in
mov
repz
jns,pt
fsubrs
fcompl
in
int3
hlt
hlt
in
shl
repnz
imul
in
ret
or
mov
andb
sahf
and
sub
jmp
add
lret
shr
repnz
adc
and
icebp
mov
lahf
mov
mov
out
jno
ret
out
bound
repnz
inc
scas
jge
push
inc
pop
add
sub
cmp
mov
dec
cmp
mov
out
lds
rol
mov
lods
mov
cltd
push
xchg
xor
xlat
lock
pop
push
mov
fadd
inc
mov
sbb
ret
sub
ficoml
stc
jmp
add
sub
stc
inc
lea
and
cmp
or
arpl
in
and
fcoms
inc
popf
xor
stos
ljmp
dec
arpl
push
sarl
mov
aas
les
test
mov
repz
pop
mov
rcl
sbb
shll
pop
inc
mov
cmp
jmp
lret
out
add
das
jmp
loope
push
loope
shrb
shlb
adc
jmp
lock
push
push
fnstcw
cld
inc
jmp
or
pop
addb
testl
fists
lea
mov
add
outsl
mov
pop
mov
dec
pop
sub
test
sti
popa
mov
sbb
and
dec
je
into
cmp
sbb
xor
and
sbb
mov
bound
cmp
jmp
pop
push
mov
jmp
adc
adc
cmp
xchg
add
add
xor
xor
pop
inc
and
adc
ficomps
test
jp
clc
jmp
and
ja
add
call
mov
mov
or
push
mov
das
jo
sub
imul
fnstenv
mov
sub
push
mov
mov
xchg
xchg
cmpsb
sub
mov
mov
pop
lock
fwait
mov
pop
inc
scas
shl
pop
je,pt
add
outsb
xchg
out
add
hlt
jns
daa
not
pop
sub
jecxz
rep
and
mov
add
sahf
iret
gs
xchg
sarl
sub
pop
in
push
jg
push
and
stos
shrl
jae
neg
push
sbb
sub
fsubrs
es
pop
out
popa
sub
add
xchg
rorb
aaa
and
adc
adc
enter
out
xchg
xor
xorb
pop
enter
add
not
and
dec
add
mov
cld
pop
xchg
add
jp
push
int
push
loopne
pop
pop
cmp
inc
shl
orb
mov
cmp
out
mov
outsl
dec
popf
imull
inc
jbe
push
dec
mov
scas
sub
int3
les
inc
mov
pop
xchg
sarb
pop
clc
sub
cli
arpl
int
ljmp
ret
popa
push
push
xor
call
and
mov
jb
out
leave
sub
enter
or
jns
into
push
inc
mov
adc
and
jmp
bound
jae
push
dec
jg
push
pop
inc
cmpsl
cmp
jno
add
lds
outsl
sbb
inc
push
push
lcall
add
inc
push
mov
jle
repnz
or
negl
aaa
jns
xor
push
movsl
jno
adc
push
add
cmp
add
pusha
jmp
inc
es
adc
hlt
lods
sub
lret
jo
aas
xchg
push
add
mov
add
fmul
or
cmp
sbb
xchg
mov
ret
and
fcoms
pop
dec
push
loope
xchg
ret
sub
sub
push
call
push
jge
push
daa
pushf
xorb
sti
cwtl
cltd
out
or
pop
mov
cmp
mov
push
jmp
or
mov
dec
bound
ljmp
add
pop
sarb
inc
push
adc
push
inc
and
sub
loopne
call
add
xor
add
cmp
jmp
mov
xor
adc
loopne
add
daa
dec
push
add
enter
outsb
inc
nop
ret
push
sub
adc
loope
in
movsb
dec
push
push
in
push
sbb
daa
inc
adc
aas
sbb
shr
mov
sahf
mov
rcll
icebp
mov
popf
push
insb
ja
or
and
fdivs
xchg
add
leave
xor
loop
sub
and
int
inc
stc
adc
push
decl
cmp
xchg
or
push
push
push
out
or
addr16
test
push
mov
test
inc
dec
rclb
and
clc
pushf
test
ffree
push
push
daa
addr16
push
push
data16
push
jmp
out
add
lock
add
insb
push
or
loop
lcall
popf
insb
loope
xchg
roll
mov
inc
rorb
and
xor
imul
dec
mov
cmp
mov
mov
dec
ja
test
movsb
lds
pop
add
mov
or
inc
pop
stos
or
or
dec
data16
repnz
inc
sub
mov
movsl
push
xlat
rorl
pop
add
xor
pop
cmpsb
imul
dec
adc
out
pop
push
xchg
xchg
mov
add
pusha
idiv
jae
mov
ja
push
fildl
and
jp
jno
pop
mov
jp
imul
adc
mov
fnstcw
enter
push
jp
out
test
dec
dec
enter
aaa
push
popa
pop
push
jo
cmp
push
aas
add
mov
das
jbe
push
test
mov
add
arpl
add
dec
push
orl
stos
adcl
dec
sbb
mov
aaa
push
sub
or
jo
shld
and
mov
jge
in
cmp
inc
jmp
inc
stc
test
pop
jle
iret
es
shll
scas
nop
and
mov
sub
pop
dec
and
add
adc
sub
in
jmp
sub
pop
test
addr16
pusha
sub
pop
xchg
sbb
xchg
or
push
push
push
push
lahf
or
out
cmp
rcll
mov
or
pop
arpl
pusha
cs
push
daa
jb
add
out
sub
adc
pusha
arpl
and
dec
divsd
aas
roll
outsl
or
rcll
mov
and
xchg
xor
jno
cs
arpl
shr
cmp
ret
out
mov
jp
mov
push
mov
push
jmp
add
push
mov
push
inc
test
lods
dec
and
cmp
jb
pop
mov
pushf
or
inc
jmp
cltd
cmp
xor
mov
adc
mov
pop
out
cltd
je
add
jmp
push
sbb
aas
stos
sub
flds
dec
sbb
add
and
mov
rcrl
movsb
rorl
es
cs
movsb
mov
mov
adc
or
xor
push
mov
leave
mov
cli
ret
push
imul
leave
pop
ss
mov
lcall
push
adc
and
push
pop
shlb
movaps
rcrl
or
adc
pop
pop
stc
loopne
ffreep
jmp
sub
add
push
insb
fldenv
adc
add
mov
cmp
cwtl
xorl
lods
xor
dec
xchg
lock
rcll
in
fwait
adc
sub
ja
and
xchg
sub
pop
pop
and
dec
fwait
clc
push
pop
dec
add
mov
add
xchg
not
into
or
outsb
push
cli
sbb
lock
sub
mov
pop
add
mov
jmp
sbbl
cmpsb
aad
mov
in
test
and
fmuls
sub
sbb
or
jmp
push
pop
sahf
icebp
cwtl
inc
fs
out
ljmp
cmp
jmp
shlb
fwait
and
shrb
in
dec
push
cmp
bound
pop
pop
addr16
rcl
and
sub
insb
addb
pusha
fwait
jmp
mov
cmc
adc
mov
xor
shr
cmp
and
xchg
subb
aaa
inc
addr16
add
add
mov
xor
fcomps
daa
mov
loopne
test
sub
adc
ret
test
call
aad
aas
add
jl
pop
xsha256
cmpsb
push
into
ret
jle
push
sarb
sub
or
lahf
iret
push
sbb
add
xchg
or
or
stc
lock
inc
sbbb
clc
xor
or
xchg
push
jmp
mov
mov
es
add
cli
mov
xchg
add
ja
enter
and
pop
push
push
xchg
adc
adc
push
pop
fwait
pop
xor
addb
jmp
loope
in
xchg
mov
dec
sub
inc
add
adc
mov
inc
out
mov
push
pop
cltd
add
mov
and
jae
add
sub
xor
lahf
aas
push
xchg
popa
insb
add
cwtl
cmpsb
testb
adc
add
push
sbb
mov
je
dec
idivl
aas
push
mov
mov
add
inc
sub
ret
movb
ret
push
mov
dec
mov
cltd
jbe
mov
adc
scas
mov
rolb
or
adc
jl
iret
push
mov
or
or
xor
xchg
pop
stos
jle
push
inc
jmp
out
xchg
and
out
mov
jmp
rorb
std
dec
cmp
sbb
push
rcrl
pop
add
add
pop
push
add
cmc
or
ds
or
es
icebp
outsl
or
add
xchg
pop
or
sub
int
jle
pop
andb
push
and
mov
addr16
push
lea
pusha
dec
repnz
pop
loop
jns
enter
aaa
icebp
mov
cwtl
les
dec
pop
mov
and
fisubl
nop
sbb
and
sbb
rcrl
dec
jmp
fs
mov
cmp
adc
lods
mov
lahf
pop
test
add
shl
sub
inc
lock
out
movsb
popf
and
sbb
fnstsw
cli
or
push
aaa
aam
add
repnz
mov
mov
add
sbb
cs
pusha
aas
fwait
in
jecxz
push
push
arpl
jmp
and
pop
pop
push
pop
mov
inc
dec
add
pop
sub
aas
pop
test
js
sub
dec
inc
cmp
in
add
mov
push
sbb
inc
xor
adc
in
lds
subb
xor
movsl
add
sub
inc
push
xchg
fnstenv
xor
mov
mov
cmp
jbe
daa
pop
repnz
cmp
push
mov
lahf
loop
jge
pop
shl
add
fwait
dec
stos
push
loopne
lret
pop
and
outsl
nop
add
pop
decb
add
or
jmp
pop
rcll
cltd
mov
jge
out
push
sahf
bound
adc
pusha
jmp
jp
lret
add
push
inc
mov
adc
test
mov
mov
sub
shr
add
jnp
xor
mov
lret
push
fadds
xchg
mov
shr
imul
adc
rolb
movlps
adc
lahf
pusha
and
cmc
push
fisubrs
sub
fmuls
jo
xchg
aam
mov
dec
push
add
ljmp
and
arpl
push
jno
sbbb
mov
jg
dec
mov
xlat
sub
fcompl
cmp
add
test
dec
dec
cwtl
lret
adc
pop
ljmp
rcll
enter
roll
outsb
cs
test
inc
jae
mov
mov
dec
push
jae
push
leave
xor
or
mov
aam
les
les
arpl
add
pop
dec
jmp
pop
clc
data16
cli
bound
jo
inc
mov
pusha
sbb
roll
rolb
add
jp
xor
es
inc
and
sub
test
aad
add
adc
es
pop
push
add
jb
lahf
add
je
inc
nop
sbb
ljmp
mov
push
pusha
add
adc
pop
add
inc
add
sub
es
addb
fsub
or
enter
loopne
daa
arpl
imul
lods
inc
fcoml
and
out
inc
test
cld
in
mov
stos
imul
pop
clc
xor
test
pop
ja
ljmp
and
outsl
in
cmp
mov
stos
sbb
add
repnz
stc
cld
stc
xor
add
pop
mov
int
test
jmp
cwtl
adc
pop
or
jnp
sub
push
cli
push
and
dec
push
ret
in
sub
jl
or
stc
adc
adc
es
mov
adc
jecxz
dec
or
inc
jne
cmp
pop
and
fdivrl
jae
inc
mov
data16
dec
sub
test
pushf
cmp
inc
jge
das
jmp
out
or
push
sbb
pop
pop
pop
sub
loopne
jnp
add
pop
les
push
push
sti
add
sbb
sub
dec
pop
push
or
lcall
mov
in
sbb
inc
rorb
scas
adc
loopne
lret
or
sahf
lahf
jnp
xchg
popf
pusha
data16
inc
mov
push
pop
sub
sbbb
adc
into
xchg
adc
mov
xchg
sbb
or
dec
jns
pop
sbb
cmp
add
dec
scas
daa
mov
fldenv
sub
dec
cmc
xor
sub
dec
mov
hlt
std
push
out
mov
xchg
mov
push
or
xchg
ja
das
xor
mov
into
lret
xor
or
rolb
enter
and
jo
cld
mov
mov
inc
jle
icebp
pop
pop
sbb
in
push
imul
xor
cmc
pop
inc
cwtl
jg
xchg
add
sub
sub
lds
in
imulb
mov
rclb
and
cs
adc
dec
lock
xlat
pop
mov
in
push
inc
add
jmp
pop
mov
pop
sub
or
inc
andl
int
or
dec
lods
add
cmp
or
outsb
or
sub
mov
stc
pop
push
mov
int
inc
adc
clc
xchg
les
push
mov
popf
dec
mov
or
shl
test
push
sbb
pop
ljmp
sub
push
jge
dec
jmp
cmc
push
and
mov
leave
mov
mov
loopne
sbb
or
pop
dec
xchg
push
mov
and
xor
push
push
sbb
mov
mov
jle
jmp
outsb
add
mov
dec
iret
aas
dec
imul
inc
mov
mov
adc
cltd
add
add
jbe
mov
sti
out
clc
inc
add
add
adc
cmp
mov
push
ret
fs
and
jno
cmp
push
lret
add
sbb
in
mov
imul
xlat
addl
sub
push
jl
add
shl
dec
or
xchg
jnp
adc
xchg
xchg
dec
dec
mov
mov
dec
push
push
lock
mov
push
pop
in
inc
mov
sub
sub
andb
jo
sub
dec
test
outsl
add
ret
pop
daa
xor
adc
pop
push
out
add
shrb
pop
out
and
xchg
push
mov
adc
jle
add
pop
jns
mov
mov
or
mov
adc
test
and
cmp
xchg
imul
mov
push
aam
cmpb
xor
add
neg
push
mov
sbb
jmp
scas
push
inc
mov
add
add
pushf
cltd
enter
dec
ja
roll
xor
jns
movups
add
or
jmp
and
inc
popl
xchg
and
mov
mov
sub
sub
or
stc
test
loopne
ret
pop
pushw
inc
pop
cwtl
test
or
fsubrl
std
std
or
pop
dec
add
jne
lods
nop
nop
xchg
adcb
testb
fistps
adc
cmp
les
mov
fwait
push
mov
clc
sub
mov
adc
add
mov
xchg
lahf
adc
adc
cs
xchg
ret
push
xlat
xor
out
add
and
mov
sub
jle
dec
fs
shrl
data16
notl
push
cmpsb
inc
loop
add
inc
xchg
imul
or
jle
or
sbb
popa
add
xor
or
adc
xchg
and
sub
or
mov
xor
dec
pop
pop
inc
pop
jmp
xlat
popf
out
jge
adcb
leave
add
loop
hlt
sub
jae
inc
test
add
cmc
and
int3
scas
pop
mov
dec
pop
imull
push
jnp
test
inc
es
rcll
pop
test
ljmp
mov
mov
sub
lds
outsl
sub
nop
shlb
dec
add
mov
push
or
fwait
or
leave
and
fmul
sub
mov
addl
cli
test
push
pop
cmp
inc
jmp
xor
push
push
adc
mov
cmp
add
pop
or
in
xlat
add
das
mov
jp
repnz
mulb
mov
sub
pushf
mov
ljmp
data16
daa
xor
shlb
notl
in
push
cmpsb
xchg
sub
cmp
adcb
sti
sub
mov
push
fwait
dec
frstor
out
mov
xor
sbb
ficomps
jge
je
mov
jae
xor
xor
mov
push
pop
pop
xchg
or
mov
pop
xlat
inc
not
inc
out
jno
mov
xchg
mov
push
sub
pop
jmp
mov
add
sub
lcall
or
stos
adc
icebp
loope
mov
and
lahf
loop
xchg
ljmp
or
and
xor
leave
fs
fidivrs
neg
rorb
inc
daa
out
inc
sbb
xor
pop
in
adc
in
jg
sub
xor
push
bound
pop
or
dec
sbb
xchg
addb
cltd
lret
add
jg
jb
das
data16
pop
mov
add
test
pop
xchg
jg
es
lret
popf
push
xlat
mov
stc
dec
cmp
mov
imul
jbe
or
xor
shl
jne
adc
lahf
and
ret
jmp
or
mov
sahf
jp
mov
push
dec
dec
dec
inc
add
and
outsl
push
add
insl
inc
or
sarb
aaa
mov
stos
mov
sbb
mov
sub
push
addr16
jle
jge
jno
dec
es
scas
jmp
jp
shrl
ret
add
cmp
and
sbb
lret
dec
pop
cmp
lods
pop
add
jmp
inc
shlb
push
stc
dec
in
es
push
pop
enter
push
jmp
push
dec
push
push
outsl
pop
push
lret
add
and
dec
test
mov
push
cld
or
add
js
mov
xorl
sub
xor
mov
fcoml
dec
jg
fisubrs
insb
mov
ret
shll
scas
outsb
int3
jmp
add
mov
mov
add
jo
mov
push
test
push
mulb
jecxz
adc
ret
inc
outsb
jmp
or
out
icebp
push
mov
popl
or
cmp
nop
jl
rolb
mov
lods
mov
out
cmp
mov
orb
cmp
add
sub
imul
push
xchg
in
jmp
dec
clc
push
and
stc
xchg
rclb
ret
dec
dec
mov
mov
push
mov
inc
or
jmp
pop
push
push
jmp
xchg
subl
push
int3
icebp
sarl
xchg
stc
add
dec
pop
cmpl
cmp
or
loop
sbb
imul
out
inc
push
pop
jl
inc
dec
ret
mov
sub
repz
jns
mov
push
add
sub
cld
aas
push
jle
jp
mov
or
sbb
jecxz
leave
sub
sbb
clc
lret
xor
xchg
push
fisubs
and
rcrb
ss
sub
das
xchg
xor
inc
mov
ret
fiadds
xchg
mov
mov
rcrb
mov
add
mov
pop
jp
mov
jp
les
inc
addb
loope
xchg
dec
bound
xchg
or
cmp
xorb
idivb
lods
clc
mov
mov
jnp
mov
jmp
or
add
fcompl
push
mov
jmp
fbld
xchg
es
xor
push
add
push
pop
add
inc
adc
scas
inc
push
sub
sti
xchg
sub
mov
test
jmp
adc
inc
inc
nopl
enter
loope
push
push
movsb
sub
shr
adc
inc
stos
lahf
ds
repz
and
imul
rcrl
pop
andb
arpl
and
int3
mov
pop
js
and
fistps
cmp
pop
pop
test
lods
xchg
dec
push
idivl
xchg
adc
add
or
add
xor
pop
fcoms
push
mov
fisubrl
pop
push
sbb
inc
and
pop
xchg
lock
popa
pop
shr
jmp
or
xor
sub
pop
hlt
out
roll
dec
jg
cmp
mov
adc
jmp
xor
cwtl
adc
xchg
inc
cs
xchg
and
xor
pushl
add
push
push
mov
gs
adc
add
mov
imul
stc
je
xorb
loopw
add
or
push
icebp
data16
daa
idiv
out
and
adc
mov
add
sub
inc
mov
xor
add
int
push
inc
mov
std
or
ret
pop
and
jge
mov
mov
jne
lock
sub
icebp
cmp
shll
insl
js
leave
jmp
nop
call
inc
es
add
lods
push
pusha
repnz
popf
dec
pushf
andl
mov
mov
or
aas
ret
mov
pushf
std
and
bnd
pop
sti
sbb
outsl
fcmovbe
and
test
stos
insl
xor
sub
mov
rorl
mov
inc
or
inc
and
and
mov
xchg
int3
xchg
pop
push
push
cmp
jne
sub
inc
inc
add
fs
in
add
jmp
jl
lret
jbe
repz
mov
xchg
jae
add
lods
push
pop
sbb
push
sub
pop
pop
xchg
add
mov
movsl
add
dec
and
pop
push
jmp
ret
push
push
pop
out
mov
cs
xor
movsb
xchg
out
add
pop
sub
push
sti
pop
or
in
pop
jmp
push
scas
cmp
jmp
int3
pop
repnz
lds
add
fdivp
xchg
dec
add
cmp
xchg
sub
xor
scas
adc
pop
jge
push
neg
andb
in
dec
or
mov
pop
sbb
movb
sub
repz
sbb
inc
xchg
adc
cmpsl
xor
inc
mov
adc
mov
dec
pop
insb
pop
xor
add
or
xchg
movsl
cmp
push
mov
and
andb
push
add
inc
cmpsb
mov
jmp
fwait
iret
sub
adc
or
std
and
xchg
or
add
xchg
not
inc
or
or
pop
adc
or
xchg
daa
mov
xor
fs
jmp
pop
add
sahf
mov
fsubrl
or
push
adc
pop
xor
dec
das
push
add
mov
mov
addb
ret
mov
xchg
mov
push
jnp
or
push
aas
test
jge
call
data16
xor
dec
mov
mov
push
dec
jns
inc
push
xorl
call
cmp
mov
jae
jmp
dec
sbb
rcrl
sbb
adc
ret
out
dec
add
cmp
andb
sahf
sub
xchg
push
test
add
cmp
int3
add
adc
inc
inc
sar
repnz
les
dec
adcb
mov
push
push
jb
nop
add
ja
mov
cltd
cmc
ss
pop
push
mov
ret
dec
ja
jae
fs
cmp
pop
cmc
pop
lea
dec
inc
loopne
sbb
stos
xor
sbb
push
pop
arpl
jmp
jmp
adc
addr16
and
jl
jmp
fiaddl
shr
jp
or
hlt
or
lea
push
inc
gs
xchg
repnz
pop
xor
adc
push
les
int3
mov
dec
popa
ret
mov
adc
shrl
rolb
and
inc
pop
sub
cli
sbb
scas
pusha
add
arpl
inc
icebp
daa
and
add
cmpb
dec
jns
jmp
cmp
adc
mov
orl
jmp
dec
mov
inc
negl
bound
imulb
or
pop
lock
xor
mov
add
xchg
out
sub
cld
push
bound
out
aas
sub
pop
sbb
mov
push
push
or
stc
pop
lret
fiadds
dec
jbe
mov
pop
sub
pop
mov
push
push
push
add
adc
jno
int3
arpl
in
pop
orb
add
andb
clc
and
aam
xor
out
add
shl
xchg
int3
dec
in
cmpsb
mov
data16
cmp
xor
fadd
es
dec
fcoml
and
jmp
add
neg
and
loope
loop
sbb
inc
xor
add
jmp
pop
aam
jl
push
or
cmp
popf
lods
jnp
iret
shll
aaa
in
add
pusha
ljmp
sbb
push
push
gs
pushf
daa
clc
sub
mov
xchg
add
and
scas
movsb
in
push
push
or
test
mov
push
movsl
jbe
lahf
out
scas
in
adc
test
imul
iret
stos
add
and
cmpsl
push
push
scas
pop
jmp
lods
call
xor
imul
popa
negl
mov
data16
and
mov
lods
push
push
lock
popf
sbb
aas
xor
jnp
adc
cli
gs
push
jmp
fildll
mov
enter
dec
pop
and
sub
mov
test
pop
lea
add
fsubrs
xor
pop
xchg
scas
sub
push
push
sub
jnp
jmp
add
push
int3
pop
test
insl
or
or
cld
ficoml
das
inc
jne
mov
push
hlt
mov
decb
mov
roll
sub
ret
dec
sub
push
dec
jp
jb
or
and
pop
bound
add
jge
scas
mov
fisubrs
test
dec
div
iret
xlat
mov
fimull
push
bound
adc
andl
dec
jno
jmp
cli
push
bound
das
adc
inc
or
push
or
jle
popa
pop
jp
fcmovnb
repnz
ret
je
push
mov
cmp
dec
jno
repnz
lods
or
jge
and
or
movsl
test
push
stos
fldcw
jmp
scas
adc
push
fs
loope
jb
movb
out
xchg
sbb
or
pop
cld
sar
rclb
inc
xchg
cmp
cmp
lds
jge
mov
xchg
xchg
neg
inc
repz
inc
test
ret
mov
mov
mov
gs
push
inc
xor
not
inc
inc
leave
or
push
or
mov
mov
xchg
push
or
pop
test
sbb
lods
addr16
popf
int3
and
push
xor
xor
cmp
sbb
inc
mov
jmp
in
daa
pop
negb
icebp
ja
sub
out
roll
lods
push
mov
imul
mov
aaa
cmp
rorb
pop
in
xor
addb
mov
test
adc
test
orb
inc
gs
repz
pop
mov
mov
pushf
stos
pusha
sbb
out
mov
sarl
xchg
loop
repnz
and
movsl
repz
push
stos
cs
mov
daa
cli
adc
ljmp
scas
adc
pop
pop
push
adc
push
mov
adc
pop
push
add
inc
add
cmp
push
dec
loope
jp
inc
jmp
out
das
lret
imulb
pop
push
pop
rcrb
pop
mov
jmp
ret
icebp
movsl
inc
stc
out
sub
push
aas
add
test
xor
stos
or
adc
je
stc
rorl
fisubs
pop
mov
mov
add
xor
jg
push
fmull
adc
add
mov
xor
or
push
pop
and
sub
rcll
fwait
dec
mov
adc
xor
enter
stos
mov
repnz
and
sbb
or
add
or
mov
mov
jmp
sbb
rorb
xor
je
mov
and
xor
push
jmp
pop
test
dec
xor
test
call
mov
xchg
mov
ret
sub
repz
inc
faddp
sahf
push
lods
mov
gs
cli
sub
and
adcb
or
pop
add
mov
push
add
sub
cmp
sbb
ret
repz
mov
sldt
dec
and
icebp
iret
and
sbb
loopne
sub
mov
pop
push
stc
movsl
push
jle
cmp
sbb
cmp
adc
inc
ret
push
xchg
sbb
jb
cmpsl
mov
imul
mov
ret
and
inc
aas
lods
sbb
or
jmp
push
lods
jmp
sub
or
out
jle
imul
popa
sbb
ljmp
cmc
dec
pop
mov
test
sti
mov
stos
sub
and
and
push
pop
cld
or
pop
or
xor
aad
cmp
and
dec
cs
imul
sti
add
push
xchg
sbb
and
ljmp
and
in
push
add
cld
xor
jne
cmc
push
push
jmp
or
or
mov
mov
and
divb
xorl
jns
inc
jle
add
push
push
pop
pop
shr
xlat
xor
add
sub
xchg
not
jle
inc
pop
dec
adc
add
sbb
inc
jle
mov
pop
add
cli
pop
sub
nop
or
cmp
xor
aas
jl
es
enter
or
jmp
mov
stos
not
add
cwtl
aad
insb
sti
push
push
jge
outsl
ljmp
inc
sbbl
imull
mov
push
bnd
push
in
mov
sub
xchg
xchg
mov
push
mov
add
add
sub
jne
lods
xor
mov
imul
and
and
data16
adc
mov
cmpb
fwait
pop
sub
or
sbb
xchg
into
adc
mov
arpl
into
add
int
cmp
xchg
clc
std
xchg
stc
iret
push
push
jmp
notl
jp
mov
pop
mov
or
xor
adc
mov
and
cmp
rcrb
jbe
es
out
jp
dec
dec
repz
xor
jmp
and
or
iret
fnsave
lock
or
add
xchg
jo
addr16
xchg
push
movsl
call
mov
push
sub
aad
das
arpl
xchg
test
adc
incl
shl
add
clc
hlt
mov
sub
or
and
dec
jmp
mov
icebp
mov
out
movsl
adcl
add
arpl
dec
mov
imul
test
mov
das
xchg
dec
es
loopne
cmpsl
stos
pop
inc
cltd
mov
pop
jg
inc
mov
lea
add
jmp
jmp
add
fstpl
jl
xor
sub
sub
or
or
dec
xlat
adc
push
js
inc
inc
ficoml
xor
jno
pusha
je
sub
jle
into
icebp
add
call
fisttpll
jns
mov
or
pop
dec
add
lds
jmp
mov
sub
test
mov
lret
dec
push
push
push
ja
dec
icebp
sbb
inc
or
aad
xchg
jo
int
sub
lret
dec
pop
or
push
pop
xchg
inc
add
xor
or
das
mov
ret
pushf
pop
pop
insb
int3
push
aaa
adc
leave
xchg
mov
push
out
fs
stos
push
push
push
divb
cmp
test
cmpb
xchg
idiv
je
out
mov
repz
movsb
push
jg
mov
mov
imull
fiaddl
stc
xchg
enter
push
popfw
ror
xor
or
je
cmp
in
or
push
aas
ss
pop
dec
and
cli
sub
pusha
insb
or
inc
and
int3
rclb
push
dec
lods
sub
movsb
test
dec
mov
icebp
xorb
mov
xor
js
mov
or
daa
sub
cmp
das
jmp
push
xchg
addr16
jmp
pop
pop
dec
fisubrs
push
insb
leave
sub
sub
mov
push
fimull
je
push
cmpl
jae
pop
push
test
int
xorb
mov
xlat
std
aaa
mov
cmpb
cld
fs
mov
mov
inc
sub
pop
movsl
imul
dec
inc
cmp
push
jp
adc
lcall
cmp
push
mov
arpl
sub
jle
add
pop
mov
mov
enter
pop
and
shll
cmc
addb
lret
loope
inc
jns
inc
cs
xor
push
test
mov
icebp
hlt
jmp
and
pop
dec
fsubr
mov
mulps
mov
test
popf
adc
mov
mov
jno
sub
int
cwtl
ss
mov
or
add
push
sub
push
mov
shl
in
incl
adc
les
cld
shlb
pop
pop
xor
or
arpl
mov
and
pop
xor
lret
ljmp
popf
stc
iret
mov
pop
loope
cs
push
sti
shrl
push
insl
outsl
and
and
mov
mov
xor
xchg
mov
mov
inc
add
pop
add
xchg
cwtl
inc
cli
pop
pop
and
adc
cmpsb
jecxz
xlat
cltd
dec
fsubrs
or
push
mov
out
daa
shrb
nop
jo
fwait
jmp
lock
and
or
pop
jle
rol
mov
sti
sbb
cmp
ret
mov
inc
jmp
addl
jnp
das
sub
mov
cmp
sbb
jmp
pop
test
enter
repnz
add
cmp
or
gs
fs
fists
scas
dec
cmp
aas
xorb
push
jge
cmp
lret
jmp
loop
cs
push
inc
ljmp
mov
out
inc
mov
jbe
rcrb
pop
push
add
push
xchg
sub
xor
add
or
and
sbb
push
dec
sub
sbbb
and
pop
adc
jnp
mov
dec
loopne
js
cli
and
ret
cmp
push
adc
dec
mov
sub
xchg
dec
ret
imul
fwait
pusha
movsb
mov
mov
cwtl
inc
xchg
push
call
or
jmp
push
and
or
push
faddl
mov
shl
push
not
inc
dec
or
scas
sub
push
jmp
out
jbe
mov
fbstp
ds
pop
lcall
dec
loopne
or
repnz
in
sarl
pop
data16
mov
insl
jle
or
loop
sahf
mov
mov
mov
add
bound
es
push
push
jmp
adc
and
push
push
out
les
dec
icebp
test
xchg
inc
lret
sbb
jg
dec
xor
shll
and
loop
push
sub
or
aas
xor
adc
popa
xchg
xchg
cmpsb
xchg
add
insb
add
ja
sbb
xor
loop
sbb
jo
ds
daa
insl
pop
aam
mov
cltd
adc
imul
or
jo
arpl
push
pop
mov
add
jmp
sbbb
or
inc
inc
sbb
pop
xchg
das
shr
sahf
pusha
lahf
popa
movsb
and
pop
cmp
arpl
notb
pop
jb
stc
or
push
testl
leave
loop
and
shlb
jmp
add
or
jnp
test
sar
mov
mov
ret
roll
xor
and
add
xchg
and
int3
push
ja
jno
and
push
xchg
hlt
ret
outsb
lcall
jmp
pop
std
call
pop
negl
xchg
and
jge
bswap
mov
lock
push
jns
loope
adcb
cmp
jmp
sub
fcoms
jl
and
add
pop
sbb
lea
inc
inc
jno
dec
clc
push
add
mov
jecxz
xchg
cwtl
or
inc
jne
mov
sbb
addb
mov
popf
pusha
mul
es
movsb
outsb
push
mov
in
ficoml
push
fmuls
jmp
in
dec
pop
mov
mov
jl
sbb
loop
jmp
lahf
push
int3
push
push
xchg
insb
pop
cld
mov
xlat
sub
pop
mov
cmp
adcb
sub
xor
rolb
sar
orb
mov
leave
xor
sub
cli
in
dec
sub
sbb
inc
insb
and
in
jae
stos
shlb
add
aad
cmp
popl
dec
adc
jno
push
das
sub
or
inc
adc
sub
jmp
jp
mov
jmp
and
pop
push
xchg
dec
fidivl
std
in
rorb
in
pop
xor
push
scas
fimuls
xor
lret
push
or
es
pushf
inc
xchg
push
mov
fnsave
jmp
repnz
dec
stc
movsl
adc
dec
ret
xorb
add
cmp
and
push
jmp
and
sub
popa
stc
cs
loope,pt
cmp
ret
fcmovbe
add
mov
lock
nop
jecxz
mov
push
ret
cmp
sub
mov
or
inc
sub
push
cmp
add
push
setae
mov
pop
icebp
and
xor
jo
dec
enter
aam
jnp
inc
cs
imul
lcall
jne
mov
cld
lcall
subb
jae
cmp
push
sub
in
jne
dec
daa
xchg
pop
iret
clc
jno
lds
mov
or
andl
add
xchg
pusha
sub
add
inc
fstpt
add
cmp
and
add
idivb
pop
cmp
dec
shr
push
xor
mov
imul
std
in
sbbl
inc
inc
shrb
lret
aas
mov
enter
jg
mov
dec
ss
dec
jmp
sub
dec
mov
xor
leave
imul
rcll
pop
daa
or
lds
into
add
mov
fildll
add
push
and
pop
jb
es
rclb
mov
fistl
gs
lods
xchg
lcall
iret
mov
pop
jo
jmp
loopne
xchg
pop
push
push
sub
or
jmp
or
shl
add
testl
rdpmc
leave
js
iret
mov
add
pop
clc
movl
add
mov
fadd
lret
dec
pop
movsb
xor
mov
dec
cmp
inc
inc
fucom
push
popw
xchg
xchg
lret
jl
add
sub
fldl2e
sub
xchg
cld
adc
incb
hlt
je
cmp
jno
ja
outsl
sbb
jmp
in
and
sbb
cld
rcrl
test
test
pop
out
js
orl
out
and
repnz
pop
add
mov
inc
cmc
mov
ret
dec
lcall
sub
push
test
xchg
jl
or
sbb
fidivs
icebp
shrl
lret
ds
lahf
inc
xor
push
jmp
in
cmp
aam
in
adc
dec
lret
push
lds
pop
shlb
jo
mov
push
xor
jmp
outsl
fs
mov
and
push
loope
ds
sub
jns
rolb
dec
cmp
cwtl
clc
mov
jnp
jl
leave
add
xchg
jne
xchg
ficoms
rorb
dec
shr
sbb
mov
mov
mov
jl
push
push
rcrl
mov
jmp
insb
in
enter
stc
loopne
sub
ljmp
adc
jne
adc
imul
das
mov
mov
jb
loop
ret
shlb
push
outsl
or
and
loop
and
pop
add
push
add
mov
xchg
std
pop
add
lea
push
stos
sbb
mov
inc
inc
lods
fsubr
jg
and
push
rolb
xor
dec
lds
cmp
scas
adc
dec
mov
call
repz
mov
into
inc
data16
insl
cmp
xchg
daa
out
sub
and
xchg
inc
lcall
add
fnstsw
rcrl
into
and
test
xor
mov
jae
add
jmp
call
shlb
mov
addl
out
add
inc
mov
clc
pop
negb
shlb
out
sbb
mov
adc
xor
mov
scas
sub
inc
fs
decb
cmp
lock
ds
pop
mov
mov
pop
std
jo
sub
xor
xchg
add
or
imul
push
call
sbb
dec
aaa
or
repz
pop
lret
sbb
testb
out
adc
mov
sti
clc
fs
mov
dec
xchg
imul
lea
imul
mov
or
cmp
mov
or
lds
hlt
push
fiadds
xor
ret
jp
dec
sub
out
adc
xor
rcll
cwtl
push
and
push
sbb
or
push
cmp
mov
mov
inc
je
pop
shr
clc
ret
push
jge
inc
mov
and
dec
vmovlps
push
mov
pop
push
push
push
xchg
dec
pusha
out
invd
sub
loopne
lock
sarb
js
inc
adc
fldcw
icebp
or
jnp
cltd
imul
mov
jle
data16
movsb
lods
pop
sub
fnstenv
lret
jo
mov
dec
in
jb
clc
ss
stos
shl
jmp
popa
push
cmp
push
add
lret
scas
inc
vpaddd
adc
mov
xchg
arpl
jne
outsb
dec
sub
pop
sub
rcl
and
jne
jg
addr16
clc
mov
or
pop
cmp
orb
or
lods
and
jge
jmp
in
arpl
dec
adc
sbb
clc
xchg
mov
rclb
sti
dec
jecxz
sub
jmp
lock
outsb
adc
mov
inc
fldpi
insb
stos
add
or
data16
sahf
pop
test
out
mov
cmp
xchg
or
and
jmp
test
push
and
subl
orl
cmp
pop
icebp
cmp
adc
push
rorb
sbb
mov
pop
jle
das
fmuls
inc
stos
lahf
lock
xchg
insb
or
dec
dec
je
in
add
xchg
xlat
pusha
das
mov
rcl
mov
mov
mov
xchg
scas
mov
pop
imul
mov
push
test
push
imul
test
jo
jmp
cs
xchg
and
mov
pop
pop
mov
nop
pop
push
push
mov
fsubs
push
pop
pop
push
pmuludq
push
gs
mov
lods
jle
dec
add
push
sub
xabort
add
jmp
mov
shr
clc
loop
test
xor
and
mov
or
jg
cltd
mov
mov
cli
add
sub
movsl
or
add
roll
mov
xlat
adc
fldcw
lret
push
mov
cmp
add
jb
sub
fistl
pmaxub
lahf
insb
sbb
xorb
or
addl
not
inc
inc
fnstcw
jecxz
xchg
cli
add
in
push
incb
add
in
dec
dec
push
add
jmp
iret
or
cmp
sub
pop
sub
fnsave
mov
mov
mov
pop
pop
repnz
sub
dec
mov
lods
fwait
mov
adcl
addr16
scas
sub
add
aas
cmp
fldcw
mov
jbe
fisttpll
aam
sub
sub
movsl
and
in
pop
lock
pop
subb
cmc
add
subb
addr16
in
mov
and
cmp
or
xchg
or
js
jns
xadd
dec
pop
xor
sub
push
cld
push
cs
push
in
xor
pop
push
fwait
push
test
pop
imul
jp
cs
dec
inc
lds
cwtl
pop
fstpt
out
repnz
test
add
add
in
test
xor
adc
movsl
sbb
fdivrl
mov
jmp
mov
push
mov
insb
dec
or
adc
push
insl
sub
mov
or
das
add
cmc
stos
mov
loopne
and
push
jle
push
mov
adc
js
xor
jge
xlat
repz
xor
orb
int3
add
aas
sar
cltd
rorl
dec
out
popf
in
popf
stc
dec
fwait
push
sub
push
mov
and
sub
xor
push
imul
lock
xchg
shl
xor
in
xorl
int
cmp
cmp
cwtl
fiaddl
pop
dec
add
enter
push
mov
add
mov
pop
orb
push
sub
andb
or
xor
loopne
mov
insl
pop
sub
das
sbb
adc
stos
push
lea
invd
xor
xor
daa
or
cwtl
ret
neg
mov
jp
cmp
mov
cwtl
pop
xor
mov
xor
xchg
leave
mov
jno
xlat
shr
jbe
or
cwtl
dec
or
cmc
ss
cwtl
es
add
and
pop
xchg
loopne
cltd
mull
pop
ja
push
cmp
out
cs
leave
push
add
inc
add
jnp
divps
xchg
ds
pusha
lret
cmp
stc
cmp
mov
mov
jmp
adc
dec
std
pushf
fsubrp
popf
lea
xor
mov
test
jae
push
adc
in
jp
loop
dec
inc
adc
inc
hlt
mov
je
daa
pop
ror
pusha
out
cld
mov
loopne
jmp
lret
rcrl
fs
pusha
lret
daa
shrl
jns
sub
xor
and
push
push
ret
mov
movsl
xchg
pop
cltd
add
movsl
dec
add
daa
mov
jmp
push
and
aas
ret
jbe
dec
mov
sbb
cmpb
sub
sti
mov
sub
pop
or
push
sub
pop
sub
add
inc
and
xor
sub
and
clc
push
xchg
jmp
xlat
je
pop
and
push
arpl
push
mov
sbb
add
add
sub
xchg
mov
add
mov
imul
push
mov
cmp
es
add
add
dec
mov
or
mov
idiv
xchg
sbb
enter
into
xchg
out
mov
mov
push
cmpsb
sbb
shl
or
notb
or
mov
adc
pop
jnp
out
push
mov
nop
cmp
cmp
mov
jmp
push
div
bound
outsl
hlt
jo
or
mov
cmpsl
fs
mov
cmovnp
daa
sub
mov
xor
xor
leave
cmc
cmpsb
or
aas
xchg
jmp
cmpsl
jae
dec
les
jle
ret
icebp
outsl
dec
push
push
add
cmp
pop
adc
daa
mov
rcll
or
inc
loop
sub
add
sbb
add
stos
sub
jmp
filds
push
ljmp
xchg
pop
nop
mov
scas
or
daa
xor
mov
add
mov
cmp
jl
lahf
dec
aad
push
jae
dec
pop
pop
lock
xor
sbb
xor
cmp
pop
add
cli
pop
neg
push
mov
push
pop
adc
es
push
push
inc
xchg
dec
push
addl
mov
push
cmpb
sarb
push
pop
dec
inc
pusha
int
loope
xor
ret
or
lods
adc
xchg
sub
jns
push
pusha
cli
inc
mov
or
jne
scas
sub
aaa
dec
std
inc
dec
inc
xor
rcrl
add
fnstcw
mov
push
loopne
pop
mov
jmp
stos
xchg
fstpt
daa
inc
pop
call
in
leave
add
and
fdivrp
pop
sub
jmp
push
fs
and
bound
mov
xchg
hlt
jp
sbb
pushf
movsb
in
add
adc
cmp
jbe
adc
cmovae
xchg
mov
adc
xchg
std
mov
rcrb
cmpb
mov
pop
xor
push
inc
cmp
xchg
sti
int3
in
dec
bound
cld
adc
pop
jmp
call
xor
inc
in
mov
in
push
psrld
loopne
imul
lds
push
cmc
adc
push
inc
pop
adcl
and
xor
fidivrs
ret
lods
or
sarb
or
icebp
pop
in
in
in
push
aas
push
xor
ljmp
sub
mov
inc
dec
inc
xchg
sub
xor
push
fnstenv
or
mov
es
jmp
push
mov
cmp
push
xchg
mov
jmp
cld
inc
test
imul
sub
addb
repz
pop
push
pop
xchg
push
andb
shll
inc
imul
mov
xor
sti
xchg
sbb
dec
shr
cmp
lcall
test
cmpb
xlat
or
jmp
mov
push
ret
sbb
mov
mov
add
cwtl
jb
cmp
push
add
add
data16
inc
fadd
outsb
sbb
add
sbb
scas
cwtl
pusha
ficoml
or
sub
lock
add
syscall
xchg
emms
push
inc
sarl
sbb
inc
add
adc
pop
es
or
adc
cmp
inc
mov
xlat
cld
cwtl
enter
push
cmp
mov
loopne
sub
and
or
and
jp
and
out
jae
jbe
or
push
neg
xorb
xor
jmp
pop
aam
pop
push
sub
xchg
pop
push
je
loop
fstl
add
hlt
movsb
and
shl
mov
popa
push
or
shlb
push
mov
mov
addr16
pop
xchg
jae
lahf
fnstenv
sub
cmp
lock
add
data16
mov
jnp
pop
sbb
mov
xor
cli
cld
jae
fimuls
dec
insl
mov
mov
sbb
push
mov
aaa
cld
int
call
mov
push
xor
mov
push
ljmp
lock
push
popf
daa
sub
jl
pushf
rol
sub
test
dec
mov
and
pop
adc
push
pop
std
les
in
icebp
in
jl
fstpt
movsl
mov
jo
pop
add
add
les
adc
jbe
leave
jbe
xor
incb
aam
push
inc
or
xchg
push
gs
repnz
jmp
cmp
sub
outsl
sub
outsb
xchg
enter
mov
dec
push
in
or
insb
jb
inc
mov
js
xlat
sbb
sar
mov
pop
in
out
aam
pop
pop
loopne
adc
push
imul
nop
push
xchg
sub
mov
adc
sub
stc
jp
add
mov
xor
pushw
mov
adc
int3
xor
pop
ljmp
or
pop
pop
pop
data16
stos
imul
mov
iret
push
shrb
jg
add
cmp
xor
cld
loope
add
mov
mov
shl
sbb
dec
xchg
loop
aad
mov
je
push
popf
xchg
pop
mov
push
xlat
iret
into
and
sub
test
lock
pop
push
out
adc
sbb
mov
jmp
and
popf
stc
inc
adc
jbe
and
sub
add
mov
orl
sub
bound
jmp
cmp
ficoml
and
sub
fisubrl
pop
mov
sbb
in
bound
lods
aaa
in
and
add
xor
push
inc
xor
pushf
xchg
adc
xchg
dec
cmpsl
mov
mov
push
or
push
cmpsb
lcall
pop
mov
rorb
jno
inc
lock
jg
leave
neg
add
push
loope
inc
dec
xor
insb
in
in
out
pusha
ss
das
pop
leave
std
fldl
lods
dec
aas
xchg
hlt
sub
adc
cltd
jbe
xor
shlb
fldt
pop
mov
cmp
xchg
gs
rolb
mov
adc
jecxz
sbb
data16
add
jge
cs
and
int
dec
cltd
daa
add
rclb
sbb
jmp
push
js
lea
adc
std
sbb
push
jg
cmp
pop
or
pop
pop
lods
les
ja
xor
daa
pop
and
sti
inc
and
push
mov
arpl
push
push
popf
pop
fadds
jmp
pushf
jnp
not
or
fnstenv
fcomip
xchg
sbbb
xor
fwait
xor
adc
cli
out
or
fmull
sbb
pop
add
clc
ret
movsl
add
outsl
or
and
jns
jb
jp
cmp
sbb
rcr
jnp
jl
les
cmp
xchg
ror
push
ds
gs
cmpsl
es
mov
or
dec
cmc
mov
xor
loope,pn
and
rolb
jl
xchg
sti
daa
cld
mov
pushl
adc
inc
scas
jno
xor
and
cmc
cld
add
popa
jmp
cmpb
mov
xchg
scas
cmpsb
or
xchg
test
repnz
dec
pop
push
filds
inc
cmp
add
in
insl
push
jmp
sub
je
sahf
dec
xchg
lea
xchg
or
adc
loopne
or
adc
dec
cwtl
jb
or
pop
in
or
sahf
insl
mov
movsl
sbb
lods
jle
inc
jne
add
bound
fsubrp
push
ret
je
push
pop
and
inc
xlat
and
loopne
cmp
enter
hlt
mov
fcomps
sbb
push
in
xchg
ret
cmp
dec
pop
sub
ja
dec
je
mov
push
add
fidivs
sub
add
cmp
test
fisubrl
lret
mov
pusha
xor
jg
pushf
add
ljmp
add
dec
shl
imul
scas
enter
sbb
xor
cmc
xlat
sbb
fcoms
sub
mov
jbe
pusha
xor
push
push
aas
mov
xchg
rolb
add
fdivs
ja
xchg
sub
pop
pop
push
mov
adc
stos
add
rorb
mov
in
sub
cmp
loopne
dec
adc
and
pop
into
xlat
inc
pop
and
test
test
les
add
dec
inc
rol
repz
jo
inc
or
mov
pop
sub
or
dec
push
cmp
jp
jb
out
jg
std
mov
clc
lret
add
add
push
daa
loope
push
jp
push
inc
cmpsl
mov
fisubl
outsb
ficomps
hlt
jl
push
iret
stc
ficoml
aas
daa
mov
test
testl
pop
inc
push
jg
adc
cmp
aas
dec
jbe
jp
in
pop
dec
push
add
cli
lea
lock
cltd
cs
lahf
jp
or
addr16
xchg
xchg
dec
bound
xor
dec
popa
xchg
imul
test
inc
aad
mov
nop
scas
sub
inc
cltd
pop
mov
mov
pop
lods
mov
mov
xchg
not
jmp
mov
sub
pop
push
jnp
sti
add
sub
outsl
jns
mov
adc
push
mov
outsl
cmpsb
add
fiaddl
or
lret
xchg
push
mov
inc
push
jmp
inc
add
pop
or
pop
add
mov
outsl
sub
fdivr
add
std
sbb
ds
or
and
outsb
pop
push
push
pop
repz
dec
daa
mov
data16
adc
fsubrl
add
mov
xchg
and
loope
push
imul
pop
xchg
inc
pop
shll
lods
and
mov
movsb
test
arpl
outsb
mov
add
cmp
in
pop
adc
or
pop
std
imul
push
imul
pushf
inc
fistps
add
xor
or
xchg
push
jns
and
push
ja
pop
pusha
push
xor
sbb
cmp
lds
sub
dec
xchg
loope
push
mov
int
cmc
sbb
xchg
or
or
insb
sbb
test
lret
js
add
push
loop,pt
dec
cmp
aad
sti
jns
add
push
call
jge
dec
test
pop
pop
jmp
stos
sub
push
shlb
adc
cmpsl
lods
push
divb
jns
ds
out
or
shlb
xor
test
add
add
xchg
push
fiaddl
fimuls
adc
std
adc
add
cltd
mov
jno
cmp
push
or
adc
cmp
bound
pop
shr
jmp
pop
and
xchg
popa
mulw
pop
push
mov
ds
sbb
cwtl
sbb
mov
clc
push
or
pop
jg
pop
sub
fbstp
sub
sub
mov
cmp
fisttps
mov
movsb
and
add
fcomps
dec
adc
out
or
repnz
push
mov
or
mov
popf
roll
loop
notb
mov
mov
lret
cmp
imul
inc
jp
jle
or
notl
pop
adc
dec
add
mov
xor
in
dec
rorl
jmp
lock
sub
neg
addl
hlt
pushl
pop
into
jbe
mov
jmp
hlt
ljmp
jl
js
and
pop
dec
cmp
pop
je
jl
aad
or
clc
pop
pop
xchg
outsl
daa
rcl
hlt
psraw
mov
and
or
shrl
jno
mov
repnz
xor
mov
testl
xchg
add
sti
sahf
xchg
or
imul
mov
cmp
and
aam
push
adc
and
add
outsb
push
mov
gs
jecxz
sbb
mov
das
push
jbe
bswap
jl
pop
rclb
pop
insl
repnz
push
mov
cs
ret
daa
lods
push
lahf
fstpt
loop,pn
dec
popa
loopne
cmpsb
or
sbb
movsl
popa
loop
roll
scas
mov
fstpl
push
mov
data16
sub
dec
mov
or
pop
imull
sbb
cmp
pop
inc
xlat
mov
in
or
sarb
mov
mov
ds
jb
and
or
or
popf
andl
or
push
std
adc
and
push
add
pop
add
xor
test
push
mov
sbb
jge
pop
jp
jbe
sbb
ja
jmp
lods
xchg
sub
test
aad
jle
test
pop
test
inc
and
and
and
sbb
pop
adc
loope
cli
pop
cs
jle
cs
jns
push
jmp
add
das
shrl
add
cli
divb
shll
mov
dec
repnz
cwtl
pop
push
jle
jle
ljmp
cli
daa
push
icebp
outsb
push
jmp
js
jns
sub
pmaxub
xor
sti
or
pop
mov
pop
add
push
push
dec
pop
cli
inc
mov
xor
push
dec
push
movsb
xor
xor
add
pop
sub
push
repz
bound
cmovle
pop
mov
inc
mov
test
clc
cmp
mov
dec
ljmp
lds
mov
fxch
jmp
mov
negb
fadds
xchg
xor
pop
sub
sub
dec
add
dec
and
add
push
and
ret
das
in
jb
mov
jnp
leave
test
movsb
xlat
or
nop
jmp
movsl
xchg
daa
and
pop
xor
aam
pop
mov
and
rcrb
mov
icebp
mov
dec
arpl
xchg
sub
add
ret
mov
dec
ds
pop
xchg
mov
push
dec
sbb
adc
adc
xchg
cld
xchg
test
aas
adc
mov
sbb
dec
cwtl
mov
xor
dec
mov
repz
pop
push
addr16
rcrl
xor
mov
jmp
icebp
gs
jecxz
test
sub
sbb
add
xchg
pop
fstl
jmp
pop
and
or
test
insl
fdivp
mov
mov
cmpsb
xchg
xchg
pop
sub
add
dec
jmp
push
mov
repz
xchg
loop
xor
mov
aas
lcall
or
rcrl
push
jns
inc
int3
inc
and
mov
xorl
insl
mov
mov
push
mov
in
ds
pop
inc
cwtl
jbe
repnz
xchg
int
pushf
loopne
and
popf
pusha
fisttps
inc
or
jmp
jne
sarl
jmp
cmp
pop
mov
gs
add
enter
sbb
and
mov
ret
inc
mov
jnp
popf
addr16
xor
mov
xor
lret
adc
cmp
or
add
add
gs
stc
mov
sub
mov
sti
inc
in
stos
push
mov
pusha
pop
add
out
adc
cld
std
add
inc
pop
shl
push
mov
inc
jmp
das
add
jb
pushf
dec
popf
ljmp
dec
add
ret
je
jmp
test
mov
mov
push
stc
mov
jge
mov
dec
or
inc
rclb
jns
push
pop
daa
xchg
sbb
pop
adc
pop
insl
mov
inc
faddl
shr
cmp
mov
dec
popf
pop
add
cmp
adc
xchg
push
cwtl
sbb
xor
sub
add
nop
or
push
imul
dec
and
dec
mov
adc
adc
fldenv
cmpsl
dec
cmc
jno
in
mov
jno
or
jl
and
dec
insl
jo
in
sbbl
or
jmp
in
xchg
and
dec
adc
cmp
clc
cmp
inc
lret
sbb
cltd
inc
xchg
dec
push
pop
add
jb
or
adc
jmp
in
add
jecxz
xchg
or
cmc
jle
rol
call
adc
push
call
dec
push
cwtl
pop
jmp
pop
imul
cmpsb
sub
fmulp
push
imulb
out
popa
push
pop
pusha
jp
daa
sub
inc
mov
mov
add
ja
adc
cs
mov
dec
pusha
push
jmp
sub
fimull
sub
push
mov
inc
inc
in
fdiv
inc
sbb
dec
sbb
and
sub
and
add
outsb
push
cmp
pop
cmp
rolb
jl
jmp
adc
mov
adc
xor
push
jmp
dec
testl
mov
lods
int
test
mov
sub
xchg
pushf
or
dec
and
lods
test
sahf
inc
mov
out
jle
out
test
xor
jle
xor
test
jmp
lock
dec
cmp
or
xchg
push
dec
push
cmp
jmp
or
cmp
lret
or
scas
or
int3
jmp
pop
in
mov
push
sub
and
and
std
push
roll
mov
inc
xchg
fisubs
jl
arpl
jns
dec
shlb
sub
inc
into
sbb
je
lcall
pusha
mov
inc
shl
adc
or
jge
jp
dec
and
pop
out
das
pop
loope
jno
jne,pt
sbb
aam
js
inc
or
jge
mov
add
add
cmp
jmp
xchg
xor
or
les
jo
jl
dec
add
sbb
mov
push
add
jns
insb
xchg
xlat
dec
pop
es
mov
xchg
jge
add
ret
cmp
pop
gs
shl
mov
inc
push
out
sbb
xchg
imul
fcmovu
inc
push
mov
jne
mov
sub
jg
or
mov
fs
andb
sub
jo
aas
shlb
and
dec
pop
fisttpll
pop
cmc
ret
jns
mov
and
js
sub
add
pop
and
subb
pop
inc
movsb
je
sub
rorl
shlb
inc
cltd
or
sti
inc
imul
xorb
and
pop
and
jmp
sbb
testl
jne
adc
cmc
pop
pop
mov
sub
cmc
js
or
out
pop
aam
mov
push
mov
cmovnp
cmp
mov
out
add
pusha
loop
outsb
or
daa
jl
xor
fs
jmp
and
adc
or
push
jb
jne
out
sub
dec
mov
xorb
or
cmpsb
sub
dec
pop
push
sub
pushf
cmp
xor
test
pop
into
xor
in
rcll
gs
aad
pop
inc
sarl
push
fsubp
rorl
aas
dec
dec
pop
cmp
pusha
mov
add
dec
pop
sbb
push
not
push
jmp
xchg
mov
out
add
outsb
insl
mov
mov
shll
fimuls
shll
adc
jl
ret
cmp
mov
outsb
jne
test
xor
test
lds
dec
push
cli
lock
out
neg
inc
jb
enter
nop
xchg
pushf
add
int
jge
dec
dec
inc
sbb
lds
shr
into
fcompl
mov
push
pop
std
incb
adc
dec
clc
pop
inc
or
pop
pusha
add
popa
lret
sbb
adc
mov
mov
aad
mov
aas
mov
sbb
ja
test
add
or
push
add
xchg
enterw
insb
xor
pushf
sbb
mov
stc
sbb
cmpb
xchg
jmp
xchg
jmp
add
mov
jno
xchg
mov
lods
outsb
jp
and
jl
clc
jno
repz
lock
and
lret
lock
addr16
mov
dec
mov
adc
lcall
add
neg
cmpsl
in
shlb
jg
insl
nop
sbb
jmp
mov
or
je
mov
pop
jp
mov
ja
and
dec
pop
call
dec
adc
jp
jmp
dec
push
cltd
adc
loope
aam
mov
int3
mov
das
push
ds
insb
add
fists
add
inc
sbb
mov
lret
mov
imul
mov
sbb
xor
sbbl
lods
fs
mov
pop
ret
adc
scas
insb
je
nop
fisubs
pop
aaa
sub
subb
or
cmp
iret
insl
push
cltd
int3
push
add
and
cmp
pop
orb
xor
fstpl
stos
subb
push
adc
and
sub
push
mov
or
popa
stos
and
lret
adc
dec
loopne
mov
ds
xor
jne
jg
jmp
pop
mov
push
add
aad
push
in
in
aad
inc
lods
icebp
sub
or
push
filds
leave
je
ret
add
neg
push
js
dec
pop
cltd
push
push
and
ret
insb
push
lahf
pop
popf
adc
xchg
add
and
jmp
int
mov
adc
ret
aaa
out
je
jmp
push
cld
jp
pusha
adc
xchg
lret
sahf
pop
pop
mov
inc
jnp
inc
daa
fwait
sbb
movsl
iret
js
pusha
dec
out
xlat
mov
cli
pop
xchg
fs
mov
fidivl
xchg
pop
andb
jmp
scas
sub
sbb
std
mov
sets
xor
stc
cli
lods
hlt
fisubrl
inc
test
jbe
inc
sub
pop
dec
leave
push
fstps
push
sbbl
and
push
sub
mov
mov
sbb
es
out
and
out
testl
rorb
push
mov
xchg
je
mov
add
rolb
inc
test
push
cmpsl
push
xor
cwtl
mov
lods
movb
bound
xor
push
faddl
jae
nop
cmp
xlat
pusha
push
push
fldl
sarb
mov
daa
aam
xchg
sar
fimull
mov
mov
fsubs
imul
lret
jne
jb
bswap
cltd
or
push
cmp
clc
mov
int
inc
shl
inc
lahf
add
sbb
jp
jnp
adc
adc
and
adc
sarl
aas
push
xor
lret
pop
or
aas
sub
and
leave
lds
fldcw
pop
add
mov
or
and
test
xor
ret
imulw
dec
mov
stos
iret
ljmp
inc
xchg
or
and
test
cmpsl
out
jmp
bound
sbb
add
arpl
dec
lods
shlb
cltd
pop
adc
mov
jmp
xchg
and
add
mov
adc
pop
push
xor
push
push
js
sbb
les
xor
lret
push
jae
jle
sub
es
loop
bound
ja
fs
cmp
repnz
shl
mov
fsubrs
gs
and
stos
psrld
lret
xor
cmpb
aad
movsb
mov
loop
and
inc
jl
mov
xchg
mov
sbb
rorb
sbb
pusha
xchg
mov
iret
pop
fistps
mov
or
stos
clc
pop
cltd
mov
fnstsw
test
mov
test
scas
or
xor
mov
cmovno
or
push
dec
test
test
add
lret
pop
dec
and
add
dec
pop
es
fisttpll
js
xlat
enter
pusha
sbb
or
dec
je
pushl
pop
cwtl
or
aas
sti
js
lahf
lds
jmp
add
push
dec
push
jns
or
push
add
loope
sub
pop
outsl
dec
add
leave
lods
xor
nop
mov
and
sahf
dec
jmp
or
xor
lahf
pop
fnstsw
ss
cmp
adc
cmp
mov
andl
add
xor
inc
mov
lret
add
mov
or
cs
dec
xchg
push
add
das
les
jb
push
lcall
and
mov
jno
sbb
cmp
pop
aam
sub
xchg
ljmp
idivl
push
push
mov
enter
xor
aad
dec
jp
dec
cmp
je
add
push
sbb
pop
mov
jns
inc
test
fiaddl
fucomip
mov
sarb
movsb
jo
dec
dec
nop
andb
pop
pop
sub
mov
jg
add
jg
insl
popa
cmpsl
or
inc
int3
and
inc
mov
mov
pop
and
lods
jmp
sub
popf
pop
push
lds
mov
jge
je
jne
loop
ja
lret
pop
pop
and
mov
jno
test
lods
mov
rcll
in
in
xor
ret
inc
sub
in
mov
dec
and
lahf
jp
add
add
sub
popa
cmp
pop
push
cmpsb
popa
cmc
pushf
xor
popf
mov
mov
dec
or
adc
push
into
pop
repnz
xor
xchg
push
mov
pop
push
mov
cmp
xchg
stos
or
jno
jge
mov
pop
std
in
pop
movsl
push
or
push
and
ds
sub
or
push
mov
cmc
add
stc
scas
ja
mov
and
nop
dec
dec
mov
push
or
adc
mov
sub
jb
mov
out
dec
mov
mov
dec
jnp
jnp
das
jl
sub
in
imul
push
mov
mov
pop
push
stos
mov
jmp
je
nop
pop
or
inc
push
test
add
dec
sahf
ret
add
fistl
lahf
mov
stos
jns
cld
push
jle
cmp
push
mov
stc
pop
cs
pop
jmp
sub
out
sub
xchg
pop
call
add
sysexit
sbb
inc
das
add
push
jbe
mov
fldcw
jns
pop
ja
jae
mulb
add
cmpsl
xchg
sub
pop
jmp
scas
add
sbb
adc
xchg
push
jmp
jge
jae
push
or
int
dec
and
sub
xchg
jmp
or
push
mov
add
add
movsl
out
xor
pop
into
adc
test
fdivs
pop
push
dec
push
and
push
lahf
lea
xlat
pop
pop
lods
mulb
outsl
sub
js
or
pushf
or
pop
ja
stos
popf
rep
add
jmp
mov
subb
fwait
jae
jmp
xchg
cmp
cwtl
add
loope
mov
pop
and
lahf
fcomi
inc
fbld
mov
aaa
movsb
adc
pop
popf
or
jle
adc
js
add
pop
inc
mov
fsqrt
xchg
ss
mov
push
sub
shrl
inc
nop
pop
dec
mov
xor
mov
jmp
push
mov
stc
ret
sub
inc
mov
sahf
xor
sub
and
pop
cmp
stos
inc
xchg
popa
in
std
inc
jp
xchg
pop
dec
mov
pop
inc
inc
cld
insl
or
xor
pop
shl
daa
aam
popa
jmp
xchg
adc
ja
adc
cmp
push
imul
sub
pop
mov
loop
fbld
mov
mov
push
outsb
popa
out
add
loope
imul
shlb
cwtl
fimull
jmp
xor
add
xchg
jge
mov
fldl
mov
inc
stos
jne
adc
hlt
in
rcll
aad
xorb
xchg
aaa
push
repnz
lret
or
mov
nop
jne
repnz
sub
dec
mov
sahf
ljmp
xchg
subb
jg
and
xchg
adc
lds
mov
arpl
data16
out
mov
mov
pop
insl
mov
add
push
add
cmp
push
loop
imul
sub
dec
or
aam
cmp
xchg
out
add
inc
daa
inc
cs
stos
adc
les
inc
std
arpl
and
push
jmp
xor
andb
pusha
push
cwtl
sub
lcall
js
adcb
push
dec
dec
sbb
stos
dec
cmp
adc
pop
clc
hlt
fidivrl
ja
inc
sbbb
arpl
add
cmp
and
xchg
add
gs
inc
xchg
fildl
push
daa
adc
enter
cmc
pop
push
and
int
jl
or
push
imul
loopne
jmp
push
pop
mov
pop
mov
or
jns
jmp
cmpsb
in
les
mov
add
pusha
add
pop
mov
push
pop
lock
dec
or
pop
clc
jp
adc
fcmove
pop
mov
out
cmp
pop
pop
mov
and
xchg
cwtl
roll
xor
movzbl
movsl
rolb
lret
jg
pop
jge
jno
int
lds
adc
rcll
xor
mov
hlt
push
adc
clc
jb
mov
or
mov
xor
fs
cmpsl
xchg
and
imul
aam
ret
mov
test
movsb
inc
adcb
jg
add
pop
lock
jg
pop
lret
pop
cmp
or
mov
neg
aam
add
and
pop
daa
and
pop
push
lret
or
jbe
inc
push
mul
cwtl
dec
push
dec
cs
sub
cmp
dec
mov
adc
push
sbb
xor
pop
cld
cmp
clc
jbe
mov
push
aam
scas
jge
pop
inc
jecxz
push
idivb
add
xor
push
jmp
cmp
sbb
or
xchg
push
movl
fsubrs
adc
xor
cs
push
mov
inc
pop
pop
sub
xchg
bnd
jmp
jmp
sub
xor
mov
cmpl
adc
in
xor
push
or
nop
add
dec
pop
cli
jno
sar
and
shl
mov
pusha
repz
sbb
ds
and
ja
fwait
cmpl
push
ljmp
push
pop
mov
mov
pop
xor
add
adcb
int3
and
jno
lock
je
inc
add
or
push
shl
addb
fisttpl
pop
pop
loop
adc
inc
xor
dec
and
loope
push
jle
imul
pop
mov
cli
jl
in
std
inc
mov
and
cmp
jmp
push
xor
pop
jne
cmp
add
lea
sub
mov
and
rorb
mov
cltd
outsl
sub
out
arpl
cltd
cld
adc
sarl
js
xlat
ja
add
pop
add
xor
cli
ficompl
or
jecxz
cmc
xor
dec
js
movsb
mov
mov
mov
mov
cmc
andl
and
cld
mov
cltd
mov
pop
das
add
or
xor
or
jns
adc
cld
dec
lods
mov
xchg
in
mov
push
push
push
sbb
jmp
sarl
mov
test
adcl
rol
stc
pop
fistpll
popa
scas
xor
push
dec
xor
add
mov
loopne
repz
lret
fidivs
push
jne
sbb
mov
xchg
cmp
cmp
add
and
imul
imul
aas
xchg
std
sbb
das
push
pop
rol
jmp
jmp
insb
sbb
mov
in
in
push
in
adc
aam
mov
xor
bound
cmp
dec
push
jmp
jge
add
fs
dec
cmp
xor
loopne
imul
leave
jg
std
orb
jbe
jmp
dec
xor
xor
out
icebp
lret
int
mov
adc
sub
add
out
jmp
repnz
adc
and
mov
push
idivb
mov
and
daa
pop
inc
cwtl
pop
add
pop
pusha
sub
lahf
push
xor
outsl
imul
mov
sub
cmp
dec
xor
inc
pop
pop
stos
lret
shrb
fcmove
arpl
adc
mov
jge
inc
pop
push
jne
jp
jg
jmp
or
jle
outsb
add
test
sub
into
sub
pop
xchg
pop
jno
pop
leave
daa
hlt
or
ret
and
gs
push
mov
pop
adc
xor
push
xchg
xchg
pop
stos
lahf
push
mov
pop
mov
fnsave
pop
ss
inc
add
stc
dec
daa
aas
les
adc
jp
or
into
aad
dec
push
daa
clc
xlat
mov
sbb
mov
stos
ret
ja
cmp
xor
dec
cmp
stos
out
push
cmp
adc
and
add
add
sub
mov
or
push
xchg
push
and
dec
sbb
pop
mov
cld
cmp
jmp
leave
add
ja
ds
rcl
lods
jae
xor
xor
sub
push
pusha
cmp
repnz
mov
push
cmpb
mov
cli
mov
add
mov
or
fldl
push
and
inc
mov
loopne
je
xchg
pop
inc
or
push
jno
dec
sarl
pop
pop
push
push
pop
nop
js
push
mov
roll
sbbl
cli
test
add
jmp
inc
jb
out
jmp
or
adc
imul
loop
or
out
nop
fstpl
push
maskmovq
mull
push
mov
adc
lds
aad
adc
push
lods
loope
clc
pop
or
pop
shr
sbbb
out
or
pop
cwtl
sbb
sti
ljmp
shrb
push
mov
mov
mov
mov
in
adc
mov
inc
jmp
push
aas
test
and
nop
cmp
in
notl
pop
push
stc
jbe
adc
adc
jg
pop
inc
cmp
fdivrs
jo
dec
or
and
mov
push
or
pop
bnd
fs
push
lock
pop
adc
clc
xor
xor
mov
cmp
iret
pop
inc
jne
add
mov
imul
adc
push
push
into
daa
pop
mov
cltd
arpl
pusha
imul
xchg
aaa
fs
daa
shl
lock
xorl
mov
in
sbb
add
call
sub
push
out
call
and
je
lret
xchg
stos
das
pop
shll
jl
add
icebp
in
lahf
push
xchg
sbbb
sbb
test
mov
dec
mov
dec
and
push
into
push
xchg
adc
in
aas
xchg
jns
mov
pop
push
data16
lret
test
in
adc
push
outsb
insl
out
dec
xor
iret
scas
shl
pop
movsl
ss
lock
sub
pop
daa
xor
pop
adc
push
push
mov
aad
daa
mov
pusha
js
lods
pop
je
or
addr16
mov
fstps
mov
add
push
and
shl
inc
gs
xor
jno
or
jbe
xlat
mov
jg
push
inc
sub
jmp
mov
push
test
cltd
cmp
xor
mov
push
jnp
xchg
shl
ds
pop
xchg
fstpl
push
popf
sbb
sarl
loope
xchg
fldenv
in
push
ljmp
sbb
loopne
shll
sub
fs
xor
xor
fnstenv
dec
rcr
mov
mov
decb
sti
add
gs
aas
push
push
hlt
sahf
lods
push
push
in
mov
push
andb
push
sub
pop
or
mov
cmp
pop
mov
mov
dec
dec
dec
mov
mov
push
push
mov
mov
mov
imul
mov
sqrtps
mov
out
loope
pusha
loop
sbb
pop
outsb
inc
mov
fisubl
test
orb
xchg
pusha
dec
add
sahf
leave
and
jo
and
xchg
jmp
cmp
cmp
sub
sub
gs
mov
pusha
imul
sub
mov
int3
lds
ficoms
jo
mov
pop
icebp
mov
pop
mov
jg
ljmp
shlb
sub
xchg
js
dec
pop
loopne
add
sbb
sbb
pop
jmp
sub
dec
daa
mov
rcl
fldenv
rcrl
rcrb
js
scas
lock
jmp
jmp
mov
stc
jmp
push
std
out
cmp
jae
pop
xchg
jecxz
ljmp
push
xchg
mov
loop
add
sbb
decb
test
or
jo
mov
mov
push
jbe
inc
add
push
cs
adc
xlat
call
jp
adc
orl
scas
lret
push
push
subl
pushf
or
inc
add
test
loope
pop
insl
dec
mov
enter
stc
push
and
push
adc
inc
add
add
test
sbb
mov
das
mov
mov
sti
or
inc
rorl
dec
pop
stc
into
xchg
scas
dec
sub
push
jmp
adc
sbb
mov
outsb
fsts
cmp
test
imull
dec
jl
dec
xchg
add
adc
lret
push
and
cmc
pop
xor
mov
xor
call
ret
cld
push
add
jecxz
lcall
dec
jl
xchg
mov
mov
in
outsl
mov
sub
hlt
mov
xorb
popa
ret
ret
push
sub
les
sub
int
sub
loope
fwait
fs
fbstp
pusha
pop
pop
pop
push
imul
and
lds
push
inc
dec
mov
mov
hlt
inc
mov
dec
xchg
xor
lds
mov
and
xor
xor
inc
add
push
lds
sub
adc
inc
ljmp
out
out
pop
dec
and
repnz
orb
lea
sub
repnz
sbb
add
adc
pop
les
xor
push
aad
scas
or
push
call
or
push
add
pop
add
push
add
andl
pop
adc
pop
test
or
push
sbb
cltd
cmovne
test
dec
daa
xor
pop
lret
bound
cwtl
add
push
add
push
or
das
cmp
stc
jae
mov
sub
xchg
or
aad
mov
dec
xchg
ja
sub
vmovhpd
addl
call
pop
pop
mov
clc
bound
push
jo
push
es
jae
daa
pop
xchg
mov
in
loope
pushf
sarb
adc
gs
mov
adcb
out
faddl
lods
out
outsb
pop
repnz
and
aaa
add
repnz
mov
jns
pop
jmp
leave
rcrb
add
fistpll
mov
dec
jbe
or
icebp
test
lcall
xor
and
or
jle,pn
and
push
test
mov
jmp
and
pop
and
add
ret
shlb
jbe
or
mov
push
mov
adc
pop
add
fbstp
xor
popf
dec
add
mov
sub
dec
and
jp
sub
jmp
repnz
pop
adc
sti
out
aam
lods
ss
inc
xchg
mov
or
loop
rolb
lock
sub
jmp
fcoms
es
out
push
push
pop
mov
inc
push
das
mov
test
pop
les
xor
cmpsl
imul
dec
push
rcll
cld
sbb
shrb
pop
xchg
mov
test
mov
lahf
in
addr16
lods
mov
add
call
xchg
filds
adc
inc
push
aad
pop
movsl
paddd
jno
jb
mov
sub
loopne
mov
and
jno
cld
testl
pop
add
scas
cmp
inc
jbe
add
or
dec
loope
cld
jns
fnop
mov
into
pop
mov
outsb
lods
adc
xorl
nop
or
in
pop
push
push
out
ret
mov
rolb
gs
and
filds
sub
pop
mov
xorb
push
mov
loop
pop
popf
rcll
add
mov
push
jmp
loopne
hlt
add
push
sub
add
push
mov
aas
inc
jae
in
adc
scas
push
mov
dec
cld
inc
mov
enter
aam
loop
sub
dec
clc
inc
popf
cli
daa
add
sbbb
movsb
or
jmp
aaa
clc
stos
add
jb
fistl
mov
adc
push
xor
sub
addl
jl
cs
daa
popa
repnz
stc
cmp
outsb
or
rcrl
in
sub
push
jl
dec
add
cs
push
lcall
jle
dec
cmp
inc
adc
cmc
pop
int
cmp
sbb
notl
push
adc
sbb
icebp
dec
inc
test
lods
idivb
stos
cld
addb
xchg
jmp
pop
adc
pop
addr16
xor
sbb
icebp
push
sbb
dec
or
cltd
leave
push
mov
xchg
lret
dec
jo
dec
pop
leave
test
xor
pop
add
hlt
aas
add
iret
gs
push
and
pusha
shlb
xchg
loopne
push
cs
xor
insl
sub
addb
dec
add
aam
fiaddl
ds
cmpsb
ret
adc
loopne
das
push
xor
jnp
jecxz
ficompl
xor
loopne
aad
call
push
jmp
cmpsl
ret
dec
cli
xor
and
test
sti
cmp
xchg
stc
fmull
icebp
and
or
jmp
sub
jae
cli
cmp
and
xchg
dec
cmpl
arpl
icebp
add
push
lods
into
jl
adcb
dec
adc
push
std
cmp
push
push
fs
js
lock
jg
dec
sub
pop
sbb
pop
cwtl
scas
jae
or
xchg
push
notl
stc
clc
mov
pop
and
mulb
roll
stos
adcl
push
push
call
add
mov
add
jle
and
adc
shrb
or
jnp
sub
ja
mov
or
int3
push
xchg
pop
and
dec
xor
aaa
mov
sub
dec
enter
adc
cwtl
lahf
push
jp
cmpsb
push
jg
add
adc
imul
jnp
jle
sbb
mov
shl
sub
outsl
cmpsb
and
sbb
mov
jae
ljmp
pop
xchg
pop
adc
sarb
and
fldt
sub
shlw
addl
inc
pop
aam
mov
iret
inc
xchg
aas
movsb
sub
or
mov
sub
cmp
mov
ret
adc
dec
aas
or
and
sbb
roll
push
fwait
rorb
or
dec
shl
inc
dec
push
test
pop
cmp
cmp
add
mov
push
pop
inc
movsl
rcrl
inc
test
add
sub
inc
fsubrl
sub
sub
call
cltd
xor
inc
pop
add
cld
insb
sbb
adc
add
sub
adcb
push
ss
or
jp
add
loop
neg
jl
inc
push
lcall
push
push
mov
mov
mov
and
subb
data16
push
pop
loop
inc
adc
cmp
add
adc
sub
push
mov
imul
cli
ficoml
push
jo
pusha
xlat
push
add
sub
push
ss
jle
mov
cmp
push
das
push
gs
fistpl
pop
add
je
loope
xor
jle
nop
movsb
cmp
cs
imull
cmpsl
pop
dec
mov
aam
lods
pusha
and
ficoml
jmp
mov
pusha
ds
inc
daa
imulb
mov
add
rorl
and
add
cwtl
test
mov
cmp
sbb
fisttpl
insl
int
inc
xchg
bound
lcall
popa
int3
pop
add
xchg
fldt
xor
lea
push
and
push
add
out
xchg
cmc
stos
mov
dec
clc
mov
aad
je
stos
mov
jnp
jmp
mov
mov
inc
scas
das
clc
dec
rolb
or
mov
add
mov
pop
or
sub
movaps
adc
inc
nop
add
mov
sbb
lea
dec
inc
push
xlat
push
bound
xchg
fcoms
pop
pop
mov
jmp
lahf
nop
cmp
or
fdiv
fwait
adc
push
push
push
jne
sub
push
lock
jno
leave
adc
les
sbb
or
les
fldl
fcoml
mov
and
push
in
inc
inc
lret
mov
xor
inc
into
push
pop
pop
inc
push
popf
xor
adcb
push
shll
add
sub
and
pop
mov
fisttpl
test
scas
inc
mov
jmp
lcall
mov
cmpb
mov
ja
and
push
inc
jmp
mov
fs
or
sbb
fsubrs
out
movsb
push
add
push
jb
add
or
xchg
pop
in
adc
aaa
push
push
pop
sti
clc
sub
bound
jmp
push
inc
adc
xor
mov
pop
out
pop
fbld
sub
lds
sub
jne
inc
jl
in
dec
mov
sarl
jmp
fdiv
test
mov
fwait
lock
xlat
and
pop
test
out
or
xchg
jo
jo
adc
jmp
mov
dec
inc
std
mov
xor
push
test
fildl
stc
shl
xor
xchg
lock
mov
addr16
ljmp
out
mov
fsub
movsl
je
repnz
add
push
add
sbb
add
or
insb
pop
not
std
add
subb
repz
pop
push
jmp
mov
mov
add
loopne
sbb
popa
fidivrl
pop
or
imul
or
dec
inc
sub
mov
adcl
add
xor
mov
push
rolb
or
outsb
or
sbb
push
mov
push
filds
imul
pop
mov
xchg
sub
pop
call
push
push
adc
push
pop
int3
out
lds
pop
add
fldenv
test
in
mov
bound
add
add
dec
mov
mov
adc
add
pop
testl
push
xchg
dec
sub
insb
outsl
fimuls
jo
xchg
ds
jmp
mov
cmp
pushf
std
jmp
mov
inc
push
jmp
test
inc
or
cltd
xchg
imul
sub
inc
xchg
jo
adc
add
daa
test
cmp
mov
test
xor
scas
shrb
mov
xor
mov
adc
insl
adc
icebp
subl
mov
jg
xchg
xchg
xchg
shll
dec
std
adc
rorb
jle
add
add
fcoms
int
push
popa
in
andb
mov
sub
bound
aad
cwtl
stc
sub
inc
and
dec
cmp
cmp
jnp
dec
xorb
sbb
mov
ljmp
arpl
test
or
sahf
mov
test
mov
sbb
mov
fs
aaa
push
dec
andl
pop
dec
hlt
pop
fstps
inc
stos
jge
inc
or
xchg
jae
incl
xor
scas
mov
orl
in
mov
inc
fldcw
adc
push
repnz
add
dec
insb
loop
dec
jmp
lret
fimuls
xchg
imul
inc
test
scas
cmp
push
pushf
call
xchg
sub
adc
add
xchg
or
in
inc
pop
push
push
jmp
call
add
cli
adc
cmpsl
insb
push
inc
pop
sbb
loope
dec
dec
ds
testl
sti
mov
or
push
fs
data16
pop
adc
sub
scas
inc
or
pop
inc
pop
mov
or
jl
jnp
testb
add
push
sahf
sti
cs
or
or
fs
push
mov
mov
fidivs
sub
into
pop
pop
and
pop
sarl
cmp
repz
scas
add
jno
clc
pop
inc
dec
add
cltd
xchg
or
or
daa
or
cmp
ret
push
jae
pop
cmp
mov
push
and
mov
jnp
pop
xchg
hlt
jle
lea
cmp
neg
inc
add
sub
test
cmp
mull
push
popf
jbe
pop
push
add
inc
jae
jmp
or
or
das
add
mov
clc
push
lcall
inc
mov
enter
add
jo
sti
and
jmp
xchg
aas
mov
daa
pop
mov
aaa
sub
cmp
or
pop
and
mov
lods
imul
rol
mov
sbb
into
test
or
testl
movsb
sahf
mov
pusha
ret
mov
repnz
push
jmp
sahf
add
dec
jnp
fnstsw
mov
jae
cmp
sti
mov
shr
mov
fcoml
ret
add
mov
or
sbb
xor
cmp
pop
lahf
test
adc
in
adc
popf
pop
and
push
mov
cmp
cmp
add
imul
jp
icebp
enter
mov
idivb
add
aam
fucomp
pop
cs
xor
xor
in
push
jmp
mov
mov
icebp
pop
insb
xchg
push
int3
adc
jle
or
or
shrl
xorps
inc
add
popa
cmp
or
sbb
xor
cmpsl
sbb
out
push
xor
sbb
pusha
dec
push
ja
imul
and
addr16
out
cmpsb
lahf
and
movsb
lods
and
hlt
push
lret
cmp
outsl
clc
mov
jae
aaa
adcl
xchg
mov
sbb
cmpb
pop
push
bound
pop
lock
push
jmp
or
nop
jne
lret
jbe
leave
adcb
test
push
and
mov
outsb
cmpsb
aaa
subb
add
xor
push
dec
fdivrs
add
mov
jmp
mov
xchg
jle
push
sub
and
adc
sub
push
scas
add
ret
inc
lock
or
cmpsl
stc
mov
pusha
daa
repnz
es
enter
mov
xchg
mov
pushf
lods
ret
insl
in
fs
push
adc
sub
in
pop
scas
add
xchg
add
mov
inc
imul
fstl
clc
int
xor
or
sbb
add
dec
std
gs
sahf
loopne
push
pop
push
leave
cmp
dec
push
adc
xor
adc
test
xchg
stc
adc
ja
call
pop
sub
cmp
adc
cmp
jbe
adc
xor
call
int
movsl
hlt
cmpsb
roll
mov
js
clc
dec
shl
nop
daa
in
inc
stc
cmc
inc
push
adcb
adc
xchg
ljmp
jl
push
push
and
sub
sbb
outsl
fsubl
add
test
jge
scas
bound
pop
or
mov
mov
pop
stc
into
dec
hlt
loopne
add
outsl
push
movsl
aam
mov
data16
mov
sbb
das
aad
push
xchg
and
jle
cmp
and
std
pop
dec
fsubs
and
pop
xor
ljmp
andb
xchg
jae
fidivrl
or
push
dec
mov
pop
xlat
out
or
pop
je
push
pop
and
sbb
xchg
add
mov
ret
imull
push
call
add
adc
lahf
pop
cmpsl
clc
mov
jl
mov
jno
push
mov
decb
es
xor
inc
pop
scas
sbb
or
sbb
mov
rolb
stos
dec
das
and
pop
pop
cmp
mov
xchg
in
xchg
fildl
pop
insb
scas
fidivrs
jle
add
mov
mov
fsubrl
clc
jbe
call
mov
mov
xor
loop
leave
loopne
ljmp
dec
inc
add
pop
jmp
xor
cmp
cmp
ljmp
xchg
dec
dec
enter
inc
adc
adc
ljmp
dec
inc
dec
outsl
cmpsb
adc
mov
dec
or
jne
iret
insl
pop
pop
adc
pop
out
shrl
lods
push
push
push
or
sub
pop
push
cld
and
cmp
aaa
or
sub
cwtl
dec
push
jle
add
xlat
push
mov
xchg
mov
lahf
loop
ja
sub
jmp
loop
sub
mov
dec
and
xor
decb
subb
and
xorb
std
pushf
mov
popw
fidivs
cmp
sub
mov
inc
push
sbb
sbb
in
insl
push
cmpsl
pop
sarb
add
xlat
and
in
add
adc
pop
sub
adc
and
nop
shll
dec
mov
add
xlat
inc
push
sti
adc
pop
es
ljmp
fs
dec
and
aam
int
pushf
pop
mov
sbb
mov
iret
adc
mov
jbe
aas
pop
sub
sbb
mov
xlat
stos
adc
adc
inc
fcoms
pop
fwait
arpl
lods
push
movsl
andl
outsb
ret
imul
lods
in
insb
mov
fidivs
cmp
or
pop
cmpsl
cmp
fstps
or
in
add
cmpsb
jl
dec
clc
shlb
std
jge
pop
aad
inc
xchg
mov
jge
and
add
mov
dec
es
add
sub
add
push
das
xchg
jge
mov
call
scas
and
into
mov
data16
leave
out
cli
nop
popf
pop
jb
sarb
cmp
hlt
sbb
jne
int
add
call
adc
add
popa
add
mov
aaa
cmp
xchg
jle
or
clc
loopne
shl
add
add
or
mov
fisttpll
push
bound
jge
xor
cmp
test
add
jmp
aad
loopne
xchg
inc
fwait
dec
loop
ret
xlat
mov
sbb
and
ret
mulb
add
adc
pop
pop
xchg
popa
sub
dec
push
cmp
sub
xchg
xor
push
jmp
push
aas
mov
cwtl
shlb
mov
add
sub
pop
jno
ds
popa
push
pop
cmpsb
or
lods
add
insl
or
inc
add
cmp
dec
mov
orps
and
mov
push
cs
into
jmp
scas
pop
mov
popl
sub
and
ficoml
cld
xchg
and
out
pop
jne
sub
adc
xorb
pop
jb
mov
jecxz
xchg
mov
mov
push
andb
popf
mov
dec
push
push
insl
jo
add
add
mov
popa
sub
add
and
testl
inc
pusha
xlat
mov
call
enter
push
xor
fwait
inc
inc
add
jbe
cmp
popa
cs
add
jnp
repz
ds
je
add
cmp
inc
xor
push
mov
or
jne
in
xor
scas
aas
rorl
push
pushf
sbb
and
in
or
ds
inc
pop
scas
cmp
xchg
jg
or
loopne
and
das
mov
jbe
xor
mov
dec
xor
cld
push
adc
add
inc
xlat
loopne
outsb
adc
insl
pop
adc
sub
pop
xor
xor
loope
and
or
push
insl
fs
xor
and
and
push
push
adc
add
mov
rcl
out
or
fwait
rorl
cs
jp
or
push
outsl
lods
xchg
jmp
add
push
push
nop
jno
push
or
or
push
in
ljmp
imul
imul
rorl
push
lods
xor
shl
scas
cmpsb
or
fisubs
pop
xchg
push
aad
inc
dec
or
push
popa
add
jmp
fwait
jb
or
insb
jb
add
jmp
xchg
cli
mov
mov
repnz
out
adc
mov
sub
xchg
push
xor
cmc
add
lods
adc
cmp
xor
add
ljmp
push
mov
mov
out
shr
icebp
push
inc
lret
stos
sub
dec
gs
lods
addb
jns
mov
int
in
clc
jnp
xchg
outsb
fs
mov
loope
pop
pop
adc
bound
or
xor
in
pushf
out
mov
rcl
movsb
and
push
xchg
mov
push
mov
cli
pusha
clc
xchg
and
leave
cld
into
addb
ret
testb
xchg
jmp
pop
inc
in
cs
and
orb
mov
add
lds
xorb
adc
daa
push
aam
pop
and
jmp
mov
cmpl
popf
int3
dec
rorl
inc
lahf
jl
push
xor
xchg
sti
mov
add
shlb
add
pop
loop
pop
loop
pop
daa
out
add
scas
sbb
nop
mov
mov
mov
lods
sti
dec
pop
cmc
addl
clc
push
push
cld
cltd
out
or
inc
movsb
popf
jp
sub
out
adc
pop
pop
movsb
hlt
jmp
xchg
xor
and
mov
scas
sub
add
or
dec
push
test
pop
arpl
dec
rcrb
pop
adc
pop
mov
out
inc
add
dec
inc
incb
pop
mov
lea
mov
sub
jbe
jns
in
push
add
sbb
push
add
inc
sbbb
add
mov
sahf
sub
cmpsb
sahf
inc
mov
andb
lea
mov
lea
call
mov
adc
add
bnd
push
andl
into
inc
loop
std
ret
icebp
rorl
lcall
repnz
xchg
mov
jp
inc
and
xor
insb
into
dec
sub
ljmp
inc
imull
add
or
xor
nop
jg
and
pop
shr
repnz
xor
loop
mov
aaa
or
dec
fistl
jmp
xor
mov
nop
and
push
xchg
add
icebp
or
jmp
mov
jecxz
xchg
dec
sbb
adc
xchg
shr
or
xor
sub
shlb
sbbb
dec
ja
or
push
icebp
stos
cwtl
jge
and
mov
sub
dec
mov
mov
push
test
fdivl
cmp
cmp
xchg
xor
pop
or
mov
push
mov
shlb
adc
dec
repnz
sbb
jb
inc
push
jae
inc
dec
jnp
mov
cld
pop
test
xchg
add
sub
cmpsl
roll
setb
or
rorl
aam
cmpb
push
push
es
sub
daa
fldt
and
addr16
push
leave
mov
pushf
jge
adc
or
nop
insb
out
fistpl
and
sbb
pop
std
pop
adc
or
adc
dec
xor
jb
inc
adc
push
nop
pop
push
jnp
sbb
dec
sub
add
push
add
hlt
pop
mov
mov
fnstenv
cli
jnp
xor
xor
jmp
lcall
mov
lret
add
sub
rorb
jmp
jns
pop
or
rol
add
pop
xchg
pop
mov
or
and
jne
mov
pop
enter
enter
xorl
xor
mov
sar
lret
push
fidivrl
adc
or
addr16
in
mov
outsb
dec
xor
jl
push
push
and
clc
mov
pop
subb
jp
decb
icebp
xchg
dec
or
in
js
add
sbbb
or
sahf
jnp
test
adc
xor
aas
xchg
shrb
inc
mov
shrl
mov
daa
inc
and
pop
sub
add
testl
lods
push
mov
push
sub
pop
add
cmpsl
sbb
stos
enter
and
leave
sbbb
and
add
in
xor
lret
sbb
insb
outsl
or
insl
cmp
cmp
jmp
mov
sub
scas
jno
pusha
pusha
sbb
scas
add
and
pop
in
clc
push
push
clc
inc
repz
jae
sbb
xor
call
xor
gs
lods
aad
jp
xchg
xchg
bnd
mov
mov
mov
xchg
ret
loopne
push
jns
inc
jmp
int3
in
xor
rorl
imul
mov
jmp
push
pusha
push
fbstp
jle
add
jmp
into
je
clc
jmp
inc
mov
imul
xor
cmc
mov
in
or
adc
test
pusha
fldl2t
sbb
out
and
ja
scas
jecxz
sub
rolb
cltd
or
int
not
in
movups
xchg
add
xor
ds
fucom
lea
outsl
cmp
mov
or
sbb
add
dec
cs
jmp
xchg
shlb
add
mov
or
loope
in
or
or
in
sub
push
and
shrb
pop
and
cmc
outsl
popa
sbb
in
pop
orb
xor
dec
pop
xchg
mulb
ss
mov
sub
pop
mov
cmp
jl
daa
jge
jb
or
fwait
mov
cmc
mov
notb
pop
pop
xor
incl
add
mov
aas
jmp
mov
popa
add
add
js
inc
jno
jmp
adc
lds
adc
mov
cld
in
jo
or
pop
xor
mov
push
mov
ret
mov
mov
int
xor
rolb
es
push
and
and
push
add
repnz
jmp
ljmp
lods
insb
bound
sbb
push
imul
fs
cmp
fildl
aaa
push
in
loopne
mov
js
adc
mov
sub
inc
mov
jo
mov
lret
or
push
jle
cmp
xor
lods
mov
pusha
decb
xchg
outsb
dec
xchg
inc
ja
or
popf
inc
add
call
mov
cmp
scas
push
sbb
orl
and
call
xchg
add
xchg
or
and
or
mov
out
push
mov
inc
mov
or
loope
std
stos
push
stos
or
mov
inc
loop
or
cmp
cmpsb
cmpb
lahf
adc
enter
in
mov
call
push
push
jmp
xor
cli
or
cmpsl
inc
mov
gs
pop
adcb
stos
aad
scas
sbb
push
mov
jg
xchg
lahf
stc
cltd
or
dec
or
jmp
jne
or
jge
jl
movsl
outsl
insb
jg
and
mov
dec
jmp
adc
dec
fsubr
jecxz
enter
cmp
inc
sub
test
pop
push
add
insl
es
push
mov
subb
test
in
sub
push
xor
or
cmp
push
out
adc
or
adc
pop
xchg
into
or
std
mov
sub
daa
das
and
sti
add
and
dec
popa
and
or
dec
imul
or
adc
push
push
push
dec
filds
inc
mov
add
inc
negl
fnstsw
mov
jmp
push
add
sahf
or
mov
jns
loope
shl
add
pop
sub
cld
mov
mov
rorb
xor
lods
popf
adc
add
js
stos
shll
adc
sbb
and
pop
mov
daa
push
adc
adc
add
sbb
jp
aaa
enter
push
adc
push
test
cmp
ljmp
out
nop
aam
jo
jmp
dec
imull
add
and
sbb
push
push
and
cmp
xchg
pop
add
imul
addr16
daa
push
fsubs
insb
clc
nop
add
aas
push
jge
popf
xchg
pop
lods
and
daa
sub
jae
push
sub
dec
cmp
clc
std
cmp
mov
pop
fucomp
fs
jmp
mov
push
cmpsl
shl
or
movsb
scas
xchg
mov
pop
mov
in
push
jb
xor
cld
inc
jmp
ljmp
cs
add
mov
adc
pop
pop
push
and
add
not
aam
xchg
jae
xchg
ret
ljmp
xchg
jns
test
cmpsl
pop
ror
mov
in
jle
xchg
push
pop
adc
or
inc
pop
ret
sub
in
sbb
out
cmp
sbb
and
rep
add
pushf
mov
pop
push
scas
adc
pop
mov
mov
nop
sub
das
or
cmp
xchg
js
mov
movmskps
leave
inc
jecxz
jae
xchg
je
loop
jl
lret
ret
stos
mov
jb
cli
orb
xchg
inc
push
out
xchg
icebp
xchg
fsubr
ja
mov
sub
out
xchg
add
jnp
xchg
js
mov
in
cltd
dec
lds
push
dec
rcll
add
mov
xor
loopne
or
add
fcompl
add
sbb
or
sarl
sbb
mov
mov
push
loope
pop
outsl
cmpsb
aam
mov
je
sub
add
xchg
jp
addb
icebp
sbb
adc
jmp
cmpsb
pushf
imul
push
jmp
cli
movb
dec
xor
mov
je
sub
ret
sbb
xor
pop
insb
inc
lahf
loope
jp
int3
es
in
jne
xchg
rcrb
mov
call
push
push
mov
pop
out
or
jle
test
jge
add
cmpsl
xor
loopne
std
out
aad
outsb
mov
outsb
test
sub
mov
adc
mov
xor
push
inc
cwtl
fsubs
xor
cmpb
mov
aam
je
pop
cmp
hlt
cmpl
xor
xor
jg
add
pminsw
dec
inc
je
mov
sbb
dec
stc
fmull
sahf
dec
sub
jnp
fdivrs
jp
notl
leave
enter
and
and
in
inc
jp
orl
push
dec
orb
mov
dec
add
add
sbb
mov
inc
sub
sbb
arpl
dec
paddd
jmp
ja
in
or
add
cmpsb
add
push
sbb
ficomps
test
pop
push
xchg
cmp
adc
push
sar
mov
stos
add
lret
or
insb
xor
scas
popa
jle
lahf
lret
or
adc
and
sbb
cmpl
rcrl
subl
and
mov
sub
clc
pop
clc
das
notb
sbb
xbegin
push
jne
xor
in
insl
pop
mov
inc
fnstcw
or
in
movsl
cli
jecxz
jg
inc
mov
popa
mov
aaa
adc
pop
dec
xor
sub
out
fnstsw
sarb
cmp
ret
test
aam
dec
daa
test
mov
push
mov
pop
popa
psubsw
sub
aaa
cmp
xor
cli
or
stc
mov
inc
xor
pop
ret
pop
movsb
push
dec
sub
sub
adc
fadds
aas
xor
fcomip
xchg
add
adc
jmp
inc
test
xchg
mov
cmp
and
mov
push
pop
popf
aam
cmpb
sbb
or
inc
push
pop
pop
adcb
and
mov
cwtl
cltd
sub
pop
dec
repz
add
mov
sub
loop
xor
xchg
adc
add
shll
lock
aam
or
flds
inc
add
or
cmpsl
jp
add
push
inc
sbb
jp
lea
pop
push
or
out
xchg
mov
inc
mov
das
andl
lret
jbe
or
or
xchg
lahf
jns
jmp
cltd
cmc
xchg
shll
adc
dec
fildll
iret
cmpsl
push
loope
loope
shrl
aas
and
mov
imul
out
hlt
pusha
xor
mov
jl
xadd
rorb
sbb
sbb
fwait
pop
stos
sub
repnz
sti
adc
dec
xor
popl
leave
aam
mov
arpl
or
pop
loopne
jmp
int3
cmp
das
dec
loope
xor
popf
iret
sub
pop
mov
mov
xchg
rcrl
push
xchg
roll
lock
mov
push
in
push
jmp
or
in
jbe
or
jne
mov
jle
pop
popa
jmp
ds
pop
sti
aam
and
int
push
push
pop
loopne
adcl
adcb
push
push
dec
pop
add
inc
les
adc
sub
mov
jle
xchg
add
fadd
cli
fsts
fbstp
add
lret
decl
subb
add
and
insl
pop
bound
xchg
lods
sub
icebp
mov
roll
mov
and
sbbb
gs
sub
andl
fisttpl
or
pop
and
sti
pop
add
mov
and
lcall
mov
push
push
lock
mov
ss
js
or
imul
test
lret
push
add
ja
add
aaa
lcall
imul
jb
jbe
sub
hlt
mov
dec
andb
add
push
scas
sub
add
loop
inc
or
scas
fs
sbb
adc
cmp
mov
es
std
add
inc
into
or
jmp
pop
jecxz
rcr
leave
push
xchg
loope
or
data16
not
xchg
mov
push
push
rcll
and
and
adc
popa
mov
hlt
stos
inc
pop
test
mov
inc
imul
push
pop
cmp
shll
xorb
xor
mov
or
push
and
push
fidivrl
adc
pop
cltd
dec
arpl
and
gs
cli
sbb
cs
and
jne
jl
jp
lahf
pushf
fwait
push
xor
pop
stos
add
jne
out
imulb
lock
push
mov
hlt
pop
pushf
xor
shll
add
jl
xor
dec
test
jo
rolb
pop
add
fidivl
mov
out
adc
into
outsb
les
cmpsl
xchg
adc
pop
data16
xor
in
jnp
mov
and
orl
jge
out
repnz
sbb
sbb
js
imul
aam
int3
das
stc
mov
fisttpll
andb
dec
shrl
add
out
mov
inc
xor
cmp
or
imul
outsb
add
dec
aaa
mov
cld
or
cmp
sub
add
mov
adc
shrb
icebp
std
test
mov
or
sbb
inc
add
lods
jge
sub
lds
push
push
cld
incl
je
add
loopne
pop
and
push
icebp
xchg
add
sbb
in
movl
sub
mov
or
add
dec
add
mov
ror
xchg
subb
in
add
jne
add
pop
jl
adc
insl
pop
jg
xor
add
lea
fs
ror
cs
popf
cmp
mov
add
loop
lds
ja
lea
push
mov
xchg
ret
out
shrl
dec
sub
or
jns
push
or
push
bound
pop
nop
fwait
push
jne
jge
ds
cwtl
push
push
sbb
inc
inc
mov
add
pop
push
out
cmp
push
mov
inc
in
inc
ds
cld
scas
sahf
aas
scas
dec
pop
xchg
or
fidivs
and
in
push
add
pop
outsb
not
inc
cld
push
push
insl
inc
sub
or
sbb
loop
push
jns
out
pop
xchg
add
add
xchg
push
leave
les
aam
pop
push
mov
mov
mov
sarb
adc
daa
xor
imul
or
sub
cmc
mov
fucomip
addb
stc
inc
movl
stos
sub
adc
xchg
xchg
xor
and
pusha
dec
mov
inc
mov
xor
ret
push
and
ds
mov
dec
or
aad
jbe
mov
rcl
test
std
aam
rcrb
arpl
push
xchg
mov
mov
mov
negl
aas
repnz
pop
cmp
adc
clc
shlb
mov
inc
xchg
mov
jmp
mov
mov
push
add
pop
mov
inc
rcll
mov
add
dec
sub
dec
or
jmp
stos
mov
push
imul
cmp
mov
popf
jp
push
iret
lret
mov
and
jmp
pushf
loop
pushf
ror
ljmp
pop
sub
neg
fists
xchg
push
or
lock
mov
fldl2t
pop
xor
rclb
ret
cmp
xor
pop
push
add
fwait
pop
arpl
cmpsl
nop
push
fwait
mov
adc
mov
aaa
add
mov
mov
adc
push
scas
nop
out
add
repz
mov
out
enter
aas
icebp
pop
shll
push
int
xchg
and
lods
jno
jmp
addb
push
mov
mov
aad
hlt
mov
sub
mov
xor
fmul
inc
pop
pop
sub
test
jle
in
js
xchg
pop
lret
pop
add
out
push
jo
int3
push
shl
adc
xor
mov
jnp
out
lret
xor
shrl
ss
adc
push
pop
sbb
pop
xor
mov
das
pusha
xchg
inc
gs
jge
subl
inc
push
lcall
cmp
std
jmp
dec
das
call
jno,pt
clc
ret
es
xchg
push
dec
add
lcall
pop
bound
jne
cmc
adc
jp
xor
ret
imul
ja
xchg
cmc
push
jo
clc
cmc
mov
and
push
pop
in
je
das
push
dec
mov
enter
xchg
jno,pn
inc
hlt
xlat
clc
pop
adc
mov
jne
inc
cs
or
popf
orl
or
jmp
out
dec
dec
test
into
xlat
sub
out
inc
sbb
push
push
or
jl
push
push
pusha
dec
fiaddl
push
push
or
pop
jne
lock
pop
sbb
mov
jb
mov
push
and
dec
xor
scas
mov
jmp
icebp
push
ret
cs
insb
lds
push
int3
push
mov
sahf
ret
xor
add
pop
push
jbe
fimull
push
ss
adc
out
push
pop
hlt
dec
add
push
adc
imul
xchg
outsb
js
stos
push
sarl
jae
lcall
popa
movsl
cmp
mov
lods
xchg
movsl
cwtl
cwtl
jmp
pop
dec
loop
fmull
clc
pop
pop
inc
jno
cmp
js
sahf
popa
dec
mov
push
ficomps
pop
sub
sub
gs
pop
sub
incb
push
pop
mov
neg
inc
and
cmpb
sahf
inc
dec
inc
cmp
jmp
push
aad
push
mov
aas
mov
jp
add
stc
test
call
jp
ljmp
adc
and
xchg
cmp
mov
scas
dec
jge
jg
jbe
ljmp
add
orb
pusha
sub
adc
jmp
lahf
xor
xchg
imul
addb
pop
out
jb
mov
pushf
cltd
dec
pushfw
sub
cwtl
pushf
inc
and
pop
inc
push
andb
ja
leave
in
pop
sub
push
stos
or
in
xor
cli
jmp
push
mov
lds
das
fbstp
or
dec
incb
pop
les
adc
das
push
cs
mov
test
fsubl
mov
adc
sub
push
sub
or
or
mov
or
push
fldcw
rclb
dec
add
jle
xor
call
aaa
or
sub
aam
std
xchg
in
aad
xchg
nop
loop
fwait
daa
dec
enter
out
int
std
pop
sub
add
push
inc
add
dec
xor
pop
sub
or
adc
push
fidivrl
ror
adc
jmp
and
jge
or
sub
fs
les
push
mov
cwtl
pop
pop
push
das
sti
les
inc
adc
inc
test
mov
insb
les
jns
mov
xchg
pop
ret
ret
jl
push
shrl
std
dec
lds
pushl
pop
shr
xor
mov
imul
dec
mov
or
push
jo
fucomip
cmp
dec
xchg
in
scas
fsubrl
addr16
orl
or
or
pop
mov
mov
insb
mov
or
adc
push
inc
pop
in
in
out
jb
or
in
add
ljmp
jne
popf
and
sti
adc
sbb
iret
loop
jg
pushf
cld
or
imul
dec
cmp
enter
movsl
inc
shll
loopne
xchg
orl
xchg
mov
aas
mov
jp
jp
mov
std
leave
cli
rcr
pusha
pop
js
addb
add
xchg
xor
push
cmp
push
sub
push
push
jne
jecxz
hlt
or
xchg
add
sub
jmp
dec
sub
or
xor
fiadds
mov
sub
or
sbb
in
cltd
mov
sub
jmp
loop
nop
pop
add
push
push
sbb
inc
enter
push
roll
mov
add
shll
aad
call
mov
loopne
and
test
adc
and
pop
or
pop
pop
dec
sbb
xor
sub
adc
punpckhwd
int3
sub
rcl
pop
incl
inc
neg
roll
daa
call
jmp
add
inc
sarb
inc
bound
cmp
dec
push
pop
mulb
jg
inc
add
push
ret
push
in
dec
sbb
push
dec
cmp
sbb
mov
or
pusha
call
movsb
push
cmp
ds
inc
xchg
sbb
or
push
xchg
shlb
jns
or
dec
scas
shl
aas
or
clc
jo
mov
push
jne
inc
xchg
js
rolb
or
pop
mov
mov
repnz
jecxz
ror
ret
sub
mov
shr
push
repz
inc
pop
repnz
loop
add
cmp
loope
rcrb
push
cli
inc
cmp
and
sbb
add
js
xor
lret
insl
sbb
out
faddl
insl
mov
jmp
or
add
and
lret
push
mov
adc
ret
pop
mov
pop
push
and
outsl
ljmp
mov
jmp
andnps
add
rclb
popf
push
cmp
stos
jecxz
add
push
push
not
das
movsb
movsl
or
jp
dec
iret
sbb
mov
jno
or
or
clc
xchg
add
add
mov
adc
loope
add
mov
or
mov
inc
pop
and
jl
adc
xor
mov
int
aas
mov
adc
test
pop
jge
das
jmp
clc
sti
in
pop
pop
jne
lock
mov
jo
add
jmp
outsl
jle
mov
sbb
out
cwtl
das
nop
jmpw
xchg
negb
mov
cmc
or
ja
dec
sub
dec
daa
add
lret
aad
or
test
imul
lds
mov
sbb
or
jge
ljmp
test
pop
cmpsb
cltd
adc
inc
dec
mov
or
push
add
jb
and
repnz
sti
add
lret
cmp
add
mov
leave
push
daa
pop
xor
mov
js
and
jns
mov
jecxz
mov
dec
imul
add
jne
jecxz
push
cs
mov
pop
mov
lock
rcrl
sbb
sbb
mov
div
push
xchg
sarb
fmull
add
add
repz
cmp
add
ja
mov
xchg
pop
adc
push
je
mov
fdiv
sarl
dec
outsl
cmp
or
movsb
dec
clc
mov
test
stc
fnstcw
pop
lea
cwtl
mov
cmpsl
or
fistps
fidivl
stos
sub
pop
xor
stos
loopne
fs
fildl
loopne
pusha
je
fisubl
outsl
test
stos
cmpsl
or
test
rcrb
out
dec
ror
or
test
gs
add
dec
divb
test
pop
add
or
push
subb
movb
dec
lds
inc
mov
negb
cmp
dec
lods
arpl
popf
mov
and
xor
dec
jmp
mov
lahf
mov
aam
lods
cmpl
loop
aad
shlb
adc
jnp
fadds
mov
mov
xchg
loopne
jl
lret
test
sti
cmp
pop
in
and
sar
rcrl
repnz
mov
pop
aas
mull
out
daa
jl
add
movb
lea
dec
scas
lahf
jns
cmpsl
outsb
xor
ret
shll
jns
sub
je
push
daa
and
pusha
and
jo
and
out
or
adc
inc
lret
add
inc
pop
imul
lahf
or
addr16
or
mov
sbbl
xchg
sub
xchg
push
fists
inc
xchg
pusha
pop
flds
inc
bnd
enter
or
add
add
pop
jno
hlt
pop
insb
clc
pop
cmpsb
popa
push
inc
repnz
lcall
dec
xchg
sti
stc
add
push
or
jmp
cld
popw
push
mov
ret
aad
push
push
mov
push
push
pusha
imul
in
cmp
pop
int3
test
jmp
data16
add
sbb
or
adc
sbb
dec
shrl
push
or
jb
inc
or
sbb
jo
or
add
mov
and
add
aam
ret
cld
rclb
pop
call
jl
ljmp
mov
jmp
pop
dec
ds
iret
sbb
inc
xor
mov
or
aam
stos
std
rcr
jae
dec
push
inc
pop
push
fdivr
sbb
or
xchg
fbld
fcmovne
inc
sub
movsl
data16
or
jl
push
sub
push
push
pop
pop
inc
xchg
inc
push
fs
mov
insl
dec
sub
rclb
pop
adc
mov
js
testb
leave
out
pop
add
pop
cmp
pop
sub
xor
dec
xchg
dec
in
out
inc
xchg
clc
add
or
jmp
cmpsl
sbb
inc
dec
mov
push
add
pop
les
or
lock
inc
iret
jmp
mov
cmp
sbb
jns
adcb
inc
xchg
loop
jbe
pop
jmp
push
pop
in
andb
add
and
jge
mov
sub
xor
sub
and
aad
push
lret
cmpsb
cmp
test
filds
lods
jp
ret
jge
xchg
pop
push
inc
mov
outsb
mov
daa
sbb
inc
pop
jmp
mov
cmc
mov
cmpsb
and
mov
scas
xchg
stos
dec
out
cmp
mov
add
into
jne
loopne
xor
add
adc
lock
xor
sub
and
sbb
gs
out
xchg
sti
inc
fimuls
add
inc
gs
adc
ljmp
call
stos
fists
test
fst
imul
xchg
add
xor
cli
call
clc
or
pop
xlat
scas
sub
rcrb
mov
fs
hlt
clc
jmp
add
pop
and
or
out
xor
jecxz
adc
js
in
pushf
or
push
les
mov
push
add
dec
pop
xchg
not
aam
sbb
sbb
pcmpeqb
add
fxch
fwait
push
adc
xor
inc
push
cmpsl
sub
push
xor
pusha
and
pop
mov
cltd
xchg
jmp
jno
add
or
add
rcr
imul
fnstsw
mov
jmp
aad
jge
scas
mov
sub
and
ret
stos
push
pusha
dec
add
jb
xor
mov
jne
push
lods
push
repnz
mov
xlat
js
add
add
stc
test
xchg
xchg
and
dec
mov
orl
into
les
pop
or
mov
pop
pop
in
dec
adc
fcoml
lods
dec
cmp
mov
xchg
jmp
mov
adc
hlt
test
push
call
lahf
sbb
enter
mov
mov
push
in
mov
aad
or
repz
xchg
add
jo
lret
jge
dec
pop
sub
std
bound
add
mov
in
cld
sarb
jg
push
aas
jp
iret
xchg
adc
or
adc
rcr
fbstp
and
fdivp
sbb
dec
adc
and
outsl
in
ljmp
push
pop
pop
push
fistpl
cmp
loopne
ja
pop
and
mov
adc
mov
in
or
lds
mov
jne
mov
lcall
roll
fs
add
inc
sub
daa
inc
loopnew
iret
mov
adc
jle
ds
ret
jle
test
jno
test
negb
loope
movsb
or
mov
or
push
mov
jno
sbb
lock
pushf
dec
in
or
and
ss
outsl
push
jmp
sub
ret
sub
push
loopne
push
mov
mov
inc
orb
cli
pop
push
mov
bound
inc
xor
push
mov
jmp
sub
jne
jb
add
xchg
adc
xchg
adc
jno
nop
mov
xchg
rcll
sbb
lea
inc
or
and
push
lds
dec
mov
xchg
or
sub
adcb
jle
and
push
insl
nop
or
adc
adc
sbb
sbb
sbb
leave
sbb
sbbb
and
les
xor
inc
loopne
addb
cmpb
xorl
adc
xor
int3
or
roll
jmp
mov
pop
out
insb
test
cmp
int
and
addr16
xchg
test
lret
mov
add
inc
add
inc
add
mov
int3
and
adc
movb
or
push
mov
xor
jbe
sbbb
addb
push
mov
mov
mov
orl
xor
sbb
mov
or
jmp
cmp
adc
test
xor
or
push
xchg
out
and
mov
and
and
repnz
mov
push
xchg
shr
add
push
mov
add
xor
adc
fcoms
cld
adc
sub
xor
add
mov
cwtl
dec
add
sub
and
add
mov
mov
adc
dec
push
xor
mov
add
dec
cmp
sbbl
in
sbb
mov
inc
adc
fsubs
adc
flds
push
cmp
popa
shlb
cmp
sub
bound
jns
inc
cs
push
push
pop
push
mov
jmp
dec
mov
adc
or
rolb
bound
sub
add
rorl
cmpb
call
ss
pop
std
inc
imul
add
lds
shll
adc
inc
sub
or
jmp
mov
mov
add
add
leave
jne
mov
rcr
add
lock
lock
or
insb
mov
fdivl
jmp
mov
add
ljmp
lds
das
xchg
pop
call
lret
sub
shl
push
incb
lret
dec
push
jb
das
sbb
sbb
push
not
cli
insl
mov
fiadds
add
pop
dec
sbb
pop
bound
or
rol
or
add
dec
pop
loope
jg
mov
mov
push
mov
leave
out
pop
lock
pop
jge
daa
xchg
aam
aaa
or
aad
pop
pushf
mov
ljmp
xchg
imul
dec
jge
lea
leave
jne
sti
out
jnp
mov
sti
push
aas
pop
pop
addr16
dec
push
je
add
mov
or
shll
add
mov
arpl
daa
mov
outsb
loopne
and
sbb
or
daa
pop
fwait
xor
mov
lahf
push
out
dec
push
dec
sub
mov
pop
aas
push
mov
adc
or
pop
clc
mov
test
fldl2t
dec
sub
arpl
add
jmp
sbb
and
pop
scas
lret
pusha
mov
inc
leave
sub
out
imul
popf
adc
out
xchg
popa
stos
mov
repnz
out
xorb
inc
or
xor
or
jmp
add
and
push
test
adc
ljmp
pop
pop
push
mov
pusha
or
fsubrs
push
addb
aaa
ret
hlt
fildl
add
out
and
cltd
jl
sub
add
xor
adc
sbb
jmp
add
dec
shl
mov
int3
and
jns
adc
stc
adc
or
pop
popa
iret
shrb
or
mov
xchg
rorl
xlat
mov
jbe
and
pop
scas
pusha
add
fiaddl
xchg
enter
mov
fidivrl
mov
mov
jmp
out
jo
mov
nop
mov
test
data16
sbb
aam
adc
sbb
push
jge
repz
dec
adc
ja
insl
inc
scas
cmp
sub
push
mov
ret
jmp
push
mov
add
xchg
push
lods
negl
xor
rcl
outsl
pushf
lret
push
mov
leave
sub
popa
aas
adc
data16
xlat
pop
or
sub
sbb
add
lret
mov
pop
mov
push
das
sub
push
sar
test
sub
sub
ljmp
fldt
aad
push
imul
add
bound
call
cs
mov
and
loope
or
fisttpl
int3
rcrb
jecxz
inc
cmp
das
sbb
ret
rclb
stos
sbbl
push
and
pusha
push
dec
pop
xchg
add
insl
ja
mov
sub
mov
sub
mov
pop
mov
call
pop
sbb
adc
out
inc
cmp
adc
in
insb
cmpb
add
aaa
cmp
and
push
cmc
mov
sub
add
daa
cmp
cli
loopnew
mov
pop
push
pop
jmp
dec
shl
sbb
sub
push
xorb
cltd
push
mov
ja
dec
add
sub
dec
loopne
mov
push
imul
sahf
sti
in
push
popa
push
pop
in
inc
xchg
ds
gs
std
loope
or
das
inc
lret
gs
and
das
icebp
xor
insb
xchg
out
testl
jmp
pop
in
pop
hlt
jmp
in
rorl
mov
dec
dec
in
mov
xchg
std
clc
pop
dec
clc
push
aam
and
mov
mov
mov
jns
push
outsl
fiadds
sbb
adc
out
add
sub
mov
xlat
sbb
imul
push
sbb
out
rol
inc
adc
aam
out
and
lcall
mov
adc
jb
xchg
fcmovnbe
es
jecxz
or
sub
je
pop
cs
adc
mov
test
pop
sbb
push
popa
jo
pop
push
mul
sbb
xchg
or
cmp
add
test
cmp
pop
mov
jne
xor
pusha
jbe
add
pushf
icebp
and
and
inc
dec
jmp
mov
push
jmp
pop
test
cmp
cld
add
sub
js
ljmp
ljmp
popa
in
jns
xor
rclb
mov
scas
mov
popf
jo,pn
stc
lds
mov
cmp
stc
inc
jecxz
sbb
mov
std
push
mov
jmp
enter
push
int
and
sbb
sub
mov
sub
adcb
mov
jge
nop
xchg
jmp
test
cmp
mov
xlat
loop
in
cmp
outsb
add
push
adc
int
ret
inc
leave
negl
incl
jl
inc
jbe
stos
mov
mov
and
lock
dec
pushf
call
and
dec
mov
xor
in
jb
lret
repz
jecxz
sbb
jmp
movsl
insl
cli
scas
pop
mov
imul
add
xor
int
adc
dec
sbb
sub
push
and
fiadds
or
xchg
into
imul
adc
sub
and
dec
ljmp
stc
aas
xchg
pusha
cmp
jecxz
adc
ficoms
pop
je
into
or
or
fcoms
mov
in
jmp
adc
push
pop
jg
dec
in
sub
in
mov
sbb
inc
dec
push
sbbb
fstl
sub
xor
jp
sbb
les
xor
dec
sub
fldt
mov
sarb
jg
pop
add
int3
xor
das
lea
xorl
pop
mov
and
jecxz
cmp
pop
mov
mov
rolb
or
orb
aas
nop
push
fldl
shl
pop
sbb
adc
bnd
or
lahf
repz
loope
ja
ret
test
and
add
sub
pop
sub
flds
push
imulb
pop
std
sub
scas
or
xor
mov
pop
or
mov
enter
je
ja
add
pop
and
cmp
or
add
flds
and
icebp
pop
imul
ljmp
js
adc
mov
xorb
push
xor
push
jmp
cltd
rorl
push
daa
aad
adc
and
jl
pop
dec
add
lret
loope
in
mov
addb
push
out
push
dec
and
out
mov
mov
xor
cltd
ret
mov
push
push
push
sbbl
sub
repnz
push
cmc
lods
inc
lock
cmp
mov
and
push
adc
pop
call
in
cli
inc
daa
push
mov
lret
popf
cmp
push
ja
and
jmp
stc
into
iret
repnz
jle
mov
mov
ss
mov
pop
push
add
pusha
or
inc
push
pop
xor
loope
repnz
ret
or
dec
pop
xor
mov
push
inc
insl
push
les
fcom
add
daa
sub
not
or
ds
push
add
movlps
das
cmpsl
cmp
mov
sub
mov
push
mov
in
add
iret
shrl
out
sub
iret
mov
orb
aad
cmp
cmp
dec
call
sbb
jp
xor
or
test
sarl
mov
scas
inc
fcomps
pop
dec
repnz
push
inc
mov
lods
out
dec
stc
orb
add
in
pop
mov
stc
xor
aas
dec
cmp
mov
icebp
bound
out
jecxz
add
repz
jmp
daa
jo
cmp
push
lahf
and
pop
lea
and
mov
push
mov
mov
hlt
cmc
int3
dec
push
cwtl
cld
sahf
lret
pop
or
jge
enter
or
jmp
adc
addr16
ror
dec
xor
in
inc
mov
iret
push
mov
pop
pop
jmp
sub
cmp
fadd
xchg
arpl
dec
test
mov
add
jne
pop
jns
clc
scas
pop
cltd
pop
push
and
fs
ret
or
xor
pop
dec
cmpsb
mov
sub
mov
in
lds
mov
repnz
psrad
and
lret
addr16
jg
add
jns
inc
push
out
dec
mov
cli
popa
mov
jb
mov
orb
jne
and
pop
andb
lcall
fs
shll
push
das
es
loopne
mov
out
sbb
push
frstor
lret
in
dec
sub
mov
int3
inc
popf
inc
aaa
jp
pop
adc
and
jmp
dec
outsl
test
xchg
mov
mov
push
dec
out
icebp
or
fidivrs
pusha
ljmp
inc
or
and
xor
shl
sub
stc
cmp
fdivs
test
cmp
adc
xchg
xor
lock
addr16
xchg
rorb
jmp
mov
inc
fidivl
cltd
or
xor
cmc
add
divl
add
dec
pop
ret
test
orb
testl
leave
paddd
mov
fiadds
cwtl
fistps
mov
lcall
mov
ja
jo
std
cwtl
aam
lock
push
add
or
sbb
stc
add
in
addr16
pop
jmp
arpl
in
dec
and
rorl
subb
mov
mov
jle
xchg
mov
adc
push
or
test
cwtl
cmp
cmpsb
test
orl
inc
fidivl
cmp
and
sub
add
shlb
ret
dec
mov
jmp
or
add
dec
dec
mov
inc
dec
dec
sbb
sbb
popf
add
jne
xor
addr16
adc
mov
xor
mov
inc
pushl
push
mov
push
jmp
pop
add
bound
xlat
mov
push
push
push
add
in
cmc
dec
addb
pop
sbb
xor
push
adc
loopne
push
mov
pop
push
gs
add
pop
xor
pop
push
cmp
dec
inc
out
lret
inc
dec
push
test
loope
push
mov
gs
add
sbb
add
movsl
push
ret
push
sahf
xor
faddl
mov
pop
out
nop
test
leave
aas
inc
pop
xchg
aad
push
push
add
pop
add
or
jnp
mov
add
push
adc
push
pop
imul
sbbl
iret
inc
bndldx
jne
or
sbb
add
or
icebp
neg
or
mov
sti
jmp
mov
hlt
stc
push
pop
mov
and
push
cwtl
push
filds
lock
jmp
sbb
push
mov
addl
icebp
cwtl
aaa
movsl
adc
pusha
mov
dec
or
orb
or
mov
fwait
outsl
punpckhbw
imul
pop
rcrb
mov
push
xlat
loopne
ret
jmp
hlt
das
jb
pushf
inc
xchg
jns
test
or
jle
mov
dec
sub
sub
mov
cmp
push
xchg
cmp
or
dec
sub
cli
add
and
mov
div
cmp
dec
ror
inc
dec
adc
int3
xor
data16
das
pop
jae
roll
push
dec
pop
mov
xor
push
sub
sub
push
push
pushf
cmp
pop
add
or
icebp
cmp
js
data16
js
cld
sbbb
mov
xchg
fadds
mov
mov
ret
inc
cmpsl
sbbl
das
lods
or
or
shlb
movsb
repnz
sbb
jne
or
jmp
inc
mull
jno
xchg
pop
je
push
mov
and
hlt
xchg
imul
inc
push
jmp
fistps
lret
es
lea
xchg
jge
cmc
cli
inc
sbb
data16
decl
pushf
pusha
sub
sub
bound
push
pop
or
enter
sub
test
ljmp
jge
lds
ds
and
je
cmp
xchg
jno
je
jo
or
aam
ret
bound
cmp
adc
shrl
loopne
add
dec
sub
inc
xor
add
mov
loope
aas
mov
xlat
loopne
push
xor
mov
push
sbb
push
sti
add
xchg
or
xor
repnz
xor
dec
test
dec
xorl
ret
test
ljmp
jno
idiv
push
loopne
and
or
pop
mov
clc
pop
add
into
outsb
mov
fsubrs
dec
ja
pusha
inc
out
adc
outsl
popa
cmp
mov
jne
call
loopne
jl
pop
popf
les
leave
push
jbe
jp,pn
add
dec
pop
scas
orb
sub
jns
cmp
dec
vmwrite
xchg
or
imul
fiadds
jp
popf
ret
add
stos
sub
pushl
xor
mov
inc
les
sub
or
xchg
out
les
push
es
jo
test
pop
movsb
xchg
dec
push
es
push
xchg
pop
movsl
xchg
push
push
shr
addr16
out
pop
mov
stc
xchg
dec
push
xchg
scas
sbb
test
push
ret
popa
clc
jl
mov
daa
mov
jmp
cmp
add
jmp
das
mov
popf
mov
cmpsl
dec
subl
adc
add
cmp
adc
xchg
push
or
sub
loopne
or
sahf
push
repnz
push
xchg
ret
pusha
into
and
arpl
jmp
mov
mov
lret
int3
imull
adc
mov
xlat
adc
dec
dec
jbe
subl
test
cmp
pop
or
mov
xor
jp
mov
push
lret
test
sti
lahf
pop
loopne
pop
int3
int
push
addr16
sub
fmulp
fdivl
mov
push
push
jmp
in
insl
movsl
xchg
or
add
scas
mov
dec
jecxz
adc
sbb
xchg
push
sbbl
add
in
test
inc
dec
mov
and
aaa
dec
and
sbb
add
pop
ljmp
outsb
pop
loope
lcall
or
leave
xchg
enter
daa
dec
jne
sub
ficoms
mov
daa
add
cs
fcoml
sbb
xor
sti
pop
xor
and
call
or
sbb
std
stos
add
pop
or
xor
jns
das
mov
nop
mov
pop
or
add
cmp
jns
inc
xchg
lods
mov
sub
sub
or
das
pop
setl
jmp
inc
pusha
mov
fs
add
jo
insb
inc
jmp
pop
mov
lods
sub
cwtl
xchg
cs
xor
add
add
push
mov
sub
pop
pop
test
mov
ss
outsb
pop
sbb
mov
lods
push
pop
mov
push
or
inc
notb
add
inc
test
pop
add
std
lock
sub
cli
ljmp
push
icebp
repnz
int3
inc
cmp
dec
ljmp
into
cmpsl
sbb
cmpsl
dec
and
arpl
dec
pop
lret
dec
stos
push
jns
sub
ud2
push
stos
pop
mov
dec
pop
lahf
add
mov
daa
and
pop
dec
mov
push
mov
add
mov
mov
out
inc
jmp
out
imul
dec
or
cltd
jns
scas
int
sub
mov
inc
adc
rorb
jle
orb
nop
subl
jmp
jns
cmc
test
ds
fstpl
bound
inc
icebp
ficoms
cmp
addl
je
push
cmpsb
testl
out
imul
mov
or
jbe
cmp
pop
push
mov
add
pop
loop
mov
out
pop
sbbb
dec
xchg
cmp
pop
out
in
mov
jmp
cwtl
inc
adc
fucompp
loop
cld
icebp
sbb
push
movsb
ret
daa
dec
daa
daa
out
xchg
cmp
push
and
movsl
mov
xor
ss
or
fwait
inc
and
fidivs
je
icebp
sub
adc
xor
sbb
and
in
or
push
das
or
hlt
ljmp
adc
jg
mov
sub
jmp
pop
add
add
or
push
sub
and
or
jge
dec
dec
adc
and
pop
sub
jmp
roll
inc
cmp
or
sbb
out
cmp
mov
fiadds
pop
jmp
push
xor
mov
ret
pop
mov
inc
sahf
add
and
mov
mov
imul
ret
popa
lahf
add
xchg
pusha
and
add
mov
xor
inc
lods
mov
push
or
jae
jmp
push
clc
sti
stc
cmp
inc
outsl
jnp
adc
and
jmp
xor
sub
iret
stos
dec
inc
pop
clc
push
sbb
iret
jbe
mov
xchg
add
nop
cmp
dec
jmp
mov
xor
push
mov
insb
add
jmp
adc
sub
scas
and
push
out
cltd
lret
or
nop
add
aad
mov
data16
pop
popa
aam
push
dec
and
sahf
push
arpl
add
sub
mov
sub
popf
dec
cmp
cmp
test
jmp
lcall
sti
inc
add
clc
add
add
push
cmp
pop
sbbb
rorl
rolb
jle
add
test
stos
pop
jmp
pop
outsb
out
icebp
dec
sub
lock
push
sbb
inc
cmp
lods
and
cmp
xchg
bound
shll
push
or
and
fldcw
movsb
loopne
in
or
ljmp
stos
mov
push
into
mov
cmc
or
mov
repz
pop
jge
add
lret
xor
movsb
inc
loop
pop
pop
popf
mov
imul
cli
adc
push
aas
xchg
inc
push
inc
mov
mov
inc
add
jle
add
cmp
mov
jmp
add
cmp
stos
mov
cmp
pusha
rolb
and
daa
int
fcompl
xor
inc
cli
add
jbe
xor
lods
inc
add
adc
pop
cmc
jae
fisttps
pop
std
adc
xchg
push
jl
xor
adc
ljmp
push
rol
xor
in
push
sub
adc
dec
push
pop
adc
shr
inc
ret
fistpll
stc
jg
xchg
subb
xchg
cmpsl
push
inc
movsl
or
xchg
std
test
clc
popa
scas
test
sbb
mov
or
sub
sbb
ljmp
jle
mov
shlb
adc
inc
movswl
dec
dec
mov
push
bound
or
loope
mov
rcll
call
insb
add
inc
or
sbb
addr16
ljmp
icebp
mov
cmc
jno
jae
mov
add
int3
mov
or
lock
jns
aam
add
and
pop
xchg
mov
cmp
xor
in
insb
das
loope
test
adc
sti
jl
mov
imul
mov
out
dec
or
adc
fs
push
ds
cmpsb
and
data16
mov
aam
add
in
clc
aad
pushf
xor
setbe
xchg
adc
rorb
rol
ljmp
xchg
sub
dec
jnp
pop
imulb
pop
aaa
leave
push
lret
pushf
and
addb
mov
ret
ljmp
jb
xchg
mov
pop
adc
add
jg
inc
push
hlt
jbe
mov
js
js
dec
fisubrl
dec
push
pop
rcrb
andl
movlps
xchg
out
cwtl
testb
and
hlt
aaa
adc
jmp
cmp
sub
aas
les
mov
mov
lods
rcrb
dec
out
jo
js
jne
xchg
ljmp
loope
pop
arpl
mov
inc
or
mov
xchg
loop
pop
push
mov
add
testl
insb
pop
sbb
lret
add
fs
mov
add
xchg
loop
cmp
adc
push
stos
xor
call
das
push
mov
mov
jb
xor
adcb
adcb
lret
cmp
xor
pop
cld
enter
jmp
cmc
or
mov
xchg
inc
icebp
pop
pop
add
repnz
shl
or
popa
mov
push
bound
dec
shll
mov
add
mov
and
ljmp
sbb
arpl
pop
sub
push
and
and
and
pop
loope
xor
pop
adc
inc
mov
pop
cmc
cmp
xchg
rolb
cmp
sbb
ss
mov
jmp
mov
or
movsl
adcb
jbe
dec
notl
rolb
cltd
scas
imul
jb
adc
and
mov
add
sbb
xor
add
mov
test
push
jle
add
imul
shll
or
or
cld
dec
jb
push
adcb
aas
hlt
xchg
lret
jns
push
push
cld
aaa
movsl
mov
lods
push
andb
push
in
add
push
push
jge
sbb
push
data16
scas
mov
sub
inc
xchg
adc
fstpt
inc
pusha
mov
test
push
fcompl
int3
mov
inc
mov
insb
rclb
push
xor
push
xor
sub
test
mov
mov
ret
sahf
push
mov
mov
mov
mov
xchg
loope
or
fcomip
fistpl
imul
pop
push
jle
push
ja
pop
adc
out
mov
jl
nop
in
add
mov
add
xchg
jmp
add
inc
mov
cli
dec
xchg
rcll
fsubr
and
xor
push
push
mov
adc
popl
pusha
or
movl
sub
push
mov
lcall
jecxz
add
enter
sub
out
cmp
stos
je
cli
repnz
jmp
rcrl
cmp
cs
add
inc
aam
shr
shld
jbe
ret
ss
adc
out
mov
dec
adc
jnp
cmp
fprem
sub
jmp
lods
push
mov
mov
xchg
cltd
lods
dec
xchg
add
xor
xorb
xchg
nop
fists
clc
xchg
jmp
xchg
and
jg
daa
aas
pop
pop
inc
in
mov
push
adc
push
sbb
rcl
decl
lds
cmp
insl
aas
ljmp
aaa
mov
pusha
aam
pop
out
cmp
out
sub
jmp
jge
sbb
fwait
pop
mov
dec
cs
ljmp
cmp
push
push
leave
sub
push
or
jmp
fidivrs
lret
addl
mov
fidivs
push
add
shl
shr
xor
add
je
sub
mov
push
lahf
pop
stos
or
push
or
sub
add
lods
add
mov
insb
cmp
push
pop
pop
xor
xor
jg
sbbl
mov
cmp
add
jl
clc
daa
inc
icebp
fs
jbe
adc
test
add
xchg
loopne
out
sbb
dec
sbb
iret
sub
jb
and
negl
xchg
push
das
fbstp
and
addr16
xor
in
rolb
cltd
dec
lds
inc
or
enter
xchg
xor
pop
ljmp
add
mov
jecxz
cmove
add
push
cwtl
push
push
cmp
ret
adc
xor
aam
bnd
pop
add
pop
rolb
sbb
sub
bound
jmp
or
push
pop
add
or
cmc
in
out
cmp
in
lock
insb
movl
mov
xor
sbb
or
jns
and
shr
sbb
adc
jne
pop
neg
ror
sbb
les
stos
xor
push
jmp
ret
xorb
jmp
iret
fimuls
push
je
adc
leave
mov
jle
sbb
into
jmp
pcmpgtb
cmp
mov
cld
add
repnz
push
push
stc
pop
popf
adcb
add
add
pop
push
push
push
fstps
fisttpl
lods
cmc
dec
xchg
sbb
fwait
pop
sub
fcomps
add
xor
outsl
testl
inc
lahf
dec
shlb
pop
push
jmp
sbbb
and
or
in
mov
sub
dec
push
sub
cmp
testl
pop
movl
mov
bound
mov
push
xor
dec
dec
add
clc
pop
fwait
mov
pusha
pop
sbb
movl
inc
add
xor
popa
clc
in
adc
or
and
mov
or
adc
inc
lahf
add
int
add
and
shrl
push
and
ror
pushl
movsb
cmpl
ljmp
lods
stos
sub
bound
jno
xchg
mov
shlb
jne
ds
inc
xchg
scas
adc
clc
popa
notb
popa
stos
xor
pushf
enter
mov
dec
ja
xchg
or
lds
pop
je
inc
pop
pusha
mov
or
adc
dec
xchg
imul
dec
dec
out
rorb
bnd
sbb
add
xchg
inc
inc
push
out
push
mov
or
push
xchg
inc
ret
sbb
jle
or
rorb
adc
es
jp,pn
xor
cmpsb
or
and
xor
arpl
loopne
inc
add
inc
jb
mov
adc
inc
movsb
cmpl
fsubs
sbb
jo
loope
test
mulb
test
jle
xor
and
add
stos
or
nop
loopne
mov
jae
lds
or
das
jmp
jnp
popf
jl
bound
or
sub
sub
adc
ds
jmp
push
in
jp
daa
mov
adc
and
loopne
add
sub
fcoms
sbb
xchg
shlb
inc
add
aaa
push
adc
cmc
pop
pop
mov
mov
add
xchg
jns
aam
sbb
jno
jle,pn
push
jmp
jmp
lods
jno
mov
adc
or
cmp
pop
push
xchg
inc
lods
hlt
daa
dec
and
or
imul
ljmp
push
shr
mov
push
out
jo
add
jg
add
aaa
ljmp
xchg
stc
aam
cmc
adc
inc
pop
fisttps
inc
or
mov
lret
stos
push
shrl
pop
jg
push
xor
and
sahf
or
pop
or
dec
cli
scas
daa
push
inc
js
loope
jno
cmpb
jl
jmp
test
loope
in
js
pop
pop
push
test
lock
inc
roll
pop
add
jo
or
jle
sub
push
xor
push
pop
push
and
add
outsl
xor
aam
mov
test
stos
cmp
or
mov
repnz
mov
or
sbb
jne
dec
shrb
out
pop
pop
cmp
lds
push
add
pop
mov
imul
jmp
cltd
pop
inc
xor
leave
add
cli
nop
pop
out
xor
dec
xor
sub
mov
sbb
das
jl
movsl
daa
outsl
cld
push
pop
cli
das
push
dec
rcll
push
cmp
push
fnstcw
jns
cmp
bound
jg
mov
dec
mov
int3
adc
inc
mov
aam
and
jbe
add
adc
xor
fcomp
pop
mov
mov
or
dec
dec
add
or
pop
inc
cld
push
movl
push
call
hlt
mov
popa
sbb
pop
daa
int3
add
sbbb
into
leave
pusha
frstor
xchg
push
scas
nop
fildll
push
cltd
shrb
mov
cld
ret
dec
loop
ret
stos
mov
pop
out
es
pop
mov
stos
insb
add
and
mov
sbb
shll
or
daa
mov
xor
rcr
inc
push
and
xor
fldenv
pop
jmp
and
pop
push
push
les
mov
mov
mov
mov
jbe
in
jmp
push
jp
out
lods
mov
out
test
into
xlat
cmc
nop
je
es
packssdw
cwtl
adc
xor
repnz
stc
shlb
or
dec
sbb
imul
adc
pop
push
insb
pusha
mov
mov
loope
bound
sti
or
pop
aad
cmp
jecxz
mov
ret
ret
pushf
or
add
xor
in
xor
sbbb
pop
mov
add
fcomip
out
jl
adc
dec
testl
repz
push
push
push
rcll
push
mov
sub
push
push
mov
jmp
pop
or
mov
xchg
call
adcb
aaa
add
pop
dec
and
sbb
xchg
cld
jmp
shr
adc
cmp
movsb
xorl
add
ja
aaa
lret
outsb
xor
orl
lret
dec
ss
adc
push
mov
push
add
jmp
nop
inc
pop
out
mov
add
loope
sub
inc
repz
sti
xor
inc
pop
std
dec
cmpsl
insl
sub
mov
jg
add
xchg
ret
add
insl
or
add
dec
test
pop
mov
mov
int
push
push
pop
pop
jp
sbb
push
or
push
xor
ficompl
or
push
jg
xor
xor
jb
hlt
dec
jl
mov
std
dec
sub
imul
mov
mov
jg
repz
pop
enter
mov
jmp
stos
xor
pop
mov
icebp
pop
xchg
sti
lret
xor
adc
pop
push
push
mov
jmp
xchg
mov
push
dec
lock
cmp
pushf
and
int3
sub
cmp
jg
jno
pop
insb
push
adc
and
adc
push
lcall
mov
jg,pn
mov
dec
imul
insl
ja
add
or
xchg
stc
inc
jbe
add
mov
cmp
dec
pop
xor
icebp
mov
xor
out
stc
mov
insb
sbb
or
pop
push
add
pop
or
cmp
push
adc
mov
mov
push
inc
sbb
push
push
dec
push
xor
pop
in
and
cltd
cmp
mov
dec
inc
push
pop
dec
sub
out
sbb
shrb
sbb
mov
and
out
shlb
pop
rorl
enter
push
mov
pop
mov
dec
mov
adc
mov
mov
jge
das
add
or
adc
jne
sub
daa
jp
ja
sub
cwtl
fdivs
add
pop
ss
ret
mov
add
je
aam
out
jecxz
adc
fildl
mov
xchg
lret
or
jmp
lock
and
inc
sbb
add
sub
jb
lahf
icebp
adc
fnstcw
rcrb
dec
in
jl
cmc
in
cmp
push
jmp
xor
daa
in
add
and
xor
sti
lcall
push
push
mov
pop
shrb
sub
add
filds
xlat
stc
lahf
sbb
test
mov
mov
pushl
mov
push
jns
jl
fsts
sbb
shr
jle
inc
mov
stos
repz
scas
jle
dec
mov
imul
ret
or
fs
xchg
jp
xor
pop
fcomip
add
jg
jne
insl
neg
popf
and
das
add
pop
sub
pop
sbb
and
rorl
and
sbb
xor
sarb
sbb
xor
and
js
jne
mov
lahf
fldt
xor
lock
dec
xor
adc
sahf
lds
push
xchg
pop
add
push
cmc
enter
fisttpll
dec
test
pop
call
sub
shl
je
in
sahf
iret
push
data16
pusha
jmp
mov
popf
pop
jmp
mov
cltd
outsl
xor
dec
inc
jg
out
cmp
mov
test
cld
aas
jmp
cmp
sbb
xlat
addr16
xchg
icebp
insl
mov
xor
xchg
push
ljmp
mov
ss
push
mov
mov
adc
not
or
test
or
mov
ret
scas
bound
mov
push
push
clc
xchg
insb
lret
xor
xor
mov
out
add
mov
clc
out
xchg
or
xor
cmpsb
fcmovnu
mov
and
push
push
jmp
ret
push
mov
push
pop
pop
in
out
movsb
push
cwtl
in
out
lahf
fnstcw
cwtl
bound
fadds
push
repz
leave
jl
cmp
lock
xchg
scas
bound
jbe
pusha
push
mov
sub
pop
pop
adc
or
sbb
mov
xchg
or
pop
and
in
push
xor
cmc
adc
mov
cmpb
mov
adc
bound
neg
inc
inc
cmpsl
jo
dec
dec
push
pop
sub
dec
jle
adc
and
jle
mov
sub
sub
push
add
cmp
std
shrb
inc
push
or
movsl
pop
jnp
das
jcxz
jno
and
sub
movsl
pusha
rcl
ds
leave
repz
pusha
fldl
dec
jl
fidivrs
push
mov
sbbb
xchg
push
pop
jno
cmpsb
add
and
jl
sbb
or
xchg
add
les
or
ljmp
mov
pop
mov
fisubl
in
mov
fisttpll
xor
in
adc
int3
scas
sub
lds
jmp
inc
sub
pop
test
or
aad
mov
pop
dec
shl
inc
hlt
fisttpll
loop
sub
and
jnp
out
arpl
movsl
mov
dec
inc
mov
jno
adc
idiv
sbb
push
jmp
cmc
mov
clc
sub
jmp
sub
jge
adc
pop
dec
pop
xrelease
fucompp
jge
popf
scas
lret
mov
enter
repnz
mov
stos
lock
cmp
ja
fs
out
lcall
rcll
xchg
and
xchg
sub
rorb
scas
add
sti
jmp
mov
and
mov
mov
and
movl
adc
mov
add
xor
ja
cmp
or
or
popa
mov
pop
les
jmp
movl
xchg
pop
rclb
add
jb
ja
jnp
dec
loop
and
xchg
mov
dec
jb
rorl
add
add
sub
push
ds
mov
or
popl
xor
pop
rclb
add
jno
mov
cmp
addr16
add
xor
rcl
adc
pop
sub
or
movsb
aad
or
cwtl
sbb
or
or
out
movsl
divl
mov
push
or
pop
fcompl
clc
cmp
cmp
pop
popa
add
inc
push
jecxz
test
and
ljmp
jbe
mov
pop
mov
fisubl
sbb
jmp
inc
shlb
sub
jo
arpl
lock
lds
jb
hlt
and
addb
sub
popf
jp
mov
mov
push
inc
add
cmpsb
jmp
in
cmp
push
out
cs
cli
mul
ss
and
add
inc
cmp
push
leave
mov
xor
xor
fldenv
sub
loop
shrb
mov
and
add
xlat
cmp
pop
inc
push
dec
and
xorl
std
je
pop
mov
and
push
push
mov
push
shld
jmp
or
sub
lods
cmc
push
lcall
out
fnstsw
mov
jmp
sub
add
jl
sbb
pop
cmp
repnz
popf
lds
daa
pop
push
adc
aam
push
pop
inc
out
fisttps
jge
mov
sub
lods
xchg
push
clc
leave
mov
fldenv
shl
scas
and
push
sub
in
cmp
movsl
push
addl
push
shr
jp
cmp
adc
or
movsl
dec
outsl
dec
out
fiadds
out
loop
add
dec
dec
mov
xor
and
and
popa
and
and
dec
gs
or
aaa
ja
mov
das
inc
pop
loopne
ja
dec
push
in
shl
and
xor
lods
cmp
std
push
loopne
test
mov
adcb
shlb
jns
add
cli
les
icebp
or
insb
pop
fcomip
repz
sbb
sub
and
and
lods
pop
rorl
sub
enter
jge
inc
out
and
sti
mov
aaa
mov
test
jo
jecxz
push
jmp
repnz
int
cmp
repnz
pop
stos
xlat
or
out
adcl
movsb
jae
arpl
in
sti
xchg
hlt
xchg
popa
xorl
push
sbb
cmp
jge
imul
xor
shlb
mov
dec
push
push
les
cmp
addb
ds
xchg
mov
in
lcall
pop
push
mov
and
in
add
stc
scas
rcl
imul
jecxz
pop
addl
xchg
inc
lods
add
insb
and
add
xor
addb
pop
pop
imul
and
mov
inc
fsub
inc
mov
pop
bound
and
adc
ljmp
xor
push
pushf
xchg
into
testb
aaa
out
stc
push
jmp
mov
adc
out
enter
push
or
cmp
cmovp
pop
jns
xchg
xor
lock
pop
sub
es
andl
movq
clc
ljmp
inc
mov
or
rol
sub
dec
dec
std
popf
les
adc
int
sbb
fsubrl
jmp
or
cmp
dec
xchg
inc
daa
xor
push
pop
push
jmp
mov
cs
sarb
push
push
add
xlat
mov
ds
and
loop
add
popf
cs
daa
dec
pop
jl
popf
jno
inc
fsubrp
mov
cmp
mov
cltd
cmp
mov
pusha
cmp
cmp
add
inc
xor
rcr
orb
int3
mov
xchg
out
nop
pop
jg
jno
xchg
push
outsl
pop
pop
femms
mov
push
int
adc
mov
adc
push
orb
and
dec
jno
lea
inc
icebp
or
insb
inc
inc
aad
xchg
xor
mov
int3
shrl
cwtl
aaa
cld
outsb
insl
pop
or
pop
test
dec
fwait
pop
pop
and
je
rorb
popa
dec
cmc
in
cwtl
call
jno
pop
insl
xchg
inc
pop
decb
ret
je
pop
dec
fsubs
imul
dec
jmp
das
sub
cmp
xor
dec
jmp
data16
jmp
daa
mov
imul
add
and
sbb
pop
mov
cli
daa
movsb
cmpsl
add
push
cmpb
jmp
add
pop
mov
sub
jbe
push
push
mov
inc
nop
sub
loop
frstor
mov
aam
pop
pop
lock
mov
lock
mov
xor
xchg
mov
test
stc
dec
stos
add
add
pop
cmpb
xchg
add
pop
shlb
sub
mov
xor
jl
pop
lret
scas
sub
inc
mov
lea
outsb
mov
pop
imul
xor
inc
xchg
pop
mov
call
cs
fcomi
dec
bound
or
sarb
fcoms
clc
sbb
dec
dec
daa
xchg
pop
divl
push
pop
push
and
adc
insb
pusha
mov
push
nop
into
lahf
imul
fs
add
and
push
jl
loopne
jb
push
sub
jmp
int
mov
daa
mov
inc
xchg
lock
dec
not
jge
xchg
cmpsb
in
pop
std
pushf
sbb
lods
mov
in
mov
or
fcomps
cmpsl
sbb
leave
out
imull
fldenv
lock
lds
jmp
pop
jecxz
push
dec
sbb
mov
nop
pop
add
and
sub
loop
sbb
pop
pop
or
dec
add
imul
mov
outsl
loopne
adc
stc
imul
jnp
mov
stc
enter
jmp
push
icebp
jo
xorb
jmp
pop
pop
sub
mov
mov
idivl
adc
or
jge
das
pop
mov
in
fists
inc
pop
divl
or
dec
sbb
in
adc
inc
xchg
enter
xor
jg
cld
cmp
xchg
ljmp
adc
jae
and
dec
push
decb
in
imul
jmp
jmp
rorl
test
adc
loope
outsl
mov
dec
push
jmp
pop
jl
daa
stc
cmp
or
adc
scas
mov
xchg
push
mov
push
pushf
in
in
xchg
pop
push
mov
mov
jae
dec
add
jbe
add
jl
adc
sub
mov
jmp
mov
ret
add
cmp
jmp
pop
push
test
stc
ficoms
ss
push
pop
adc
mov
sbb
dec
fmul
add
call
inc
jae
mov
add
adc
cmp
mov
inc
lahf
pop
lret
xchg
add
fldt
xchg
cmpsb
mov
imul
pop
cltd
rolb
into
mov
out
adc
cld
sub
in
sbb
cmp
movsb
mov
daa
fldl
and
fldl
mov
aad
pop
adc
inc
pop
add
mov
adc
sbb
mov
lea
pop
inc
sub
movsl
push
push
jmp
jo
and
jb
popa
xor
push
add
stos
push
cmp
mov
adc
pop
cltd
pusha
in
das
push
mov
stos
arpl
aad
lods
insb
push
hlt
enter
test
out
shll
jecxz
fucomip
push
out
push
jne
je
mov
adc
pop
decl
les
out
pop
xor
jae
cmp
icebp
gs
into
cli
inc
inc
out
sbb
push
fdivrl
add
dec
ja
pop
mov
loopne
add
xchg
jne
sbb
outsb
pusha
leave
push
mov
pop
push
jmp
in
pusha
pop
push
push
jmp
sbb
ljmp
xor
inc
pop
stc
jle
dec
fldcw
push
pop
pop
pop
push
jmp
mov
jmp
cmp
sbb
icebp
sbb
add
pop
cmp
and
sub
dec
out
es
into
push
push
pop
xchg
mov
sub
shrb
pop
mov
out
aam
bound
jne
sub
pushl
cmp
shlb
sti
std
scas
lret
lea
xor
jmp
lds
loopne
rclb
rcrb
fwait
jle
jmp
stos
jns
test
ss
mov
int
jecxz
inc
or
lods
mov
xchg
add
sub
sub
inc
fists
pop
enter
xchg
jle
movsb
test
and
cmp
imul
jge
mov
xchg
pop
jge
cwtl
adc
rclb
mov
push
pop
mov
fcompl
mov
mov
test
test
jecxz
pop
mov
sub
dec
or
xor
cmp
mov
add
test
fcmove
jo
or
test
mov
or
enter
icebp
pop
fiaddl
movsl
rcrl
ljmp
xchg
jg
addb
jle
jge
push
call
pop
adc
out
fildll
xchg
daa
lret
jp
add
sbb
cmpsb
rol
hlt
mov
or
mov
push
shl
xchg
in
adcb
push
test
and
cmp
or
inc
or
pop
adc
call
scas
ljmp
sub
xchg
jb
popf
clc
xchg
mov
movsl
pop
sarb
orb
rcll
xor
push
out
push
push
or
in
into
cli
add
ja
lret
cltd
cmp
adc
add
mov
mov
cmp
ds
shl
mov
push
jmp
gs
dec
in
mov
out
loop
movsb
adcb
pop
scas
or
jb
mov
jmp
loopne
push
push
imul
mov
or
stos
sbbb
push
adc
sub
adc
cltd
or
rcrl
faddl
inc
pop
aas
push
jnp
dec
inc
movsb
xchg
xchg
jne
xchg
fcmovnbe
cmpb
out
es
idivb
mov
xor
ljmp
out
das
or
dec
mov
xor
pop
popf
packssdw
rol
pop
pop
aad
fdivr
jmp
fs
dec
mul
mov
add
inc
cmp
adc
mov
mov
add
ja
jecxz
data16
insb
mov
pop
pop
jns
les
mov
sti
xor
inc
ficoms
mov
lret
popw
xor
mov
sub
xorb
loop
test
sar
movsb
adc
cmpb
lds
push
dec
mov
push
xchg
lret
je
andb
mov
xor
mov
mov
lds
lds
test
and
sbb
cmpl
loop
mov
mov
dec
inc
jmp
cmpsl
mov
mov
push
mov
aam
inc
lahf
rcrl
sub
cmpsl
pop
or
xor
pop
mov
pop
in
repnz
dec
jl
or
cli
fdivs
fnsave
inc
push
xor
icebp
stc
pop
add
std
in
sbb
loopne
dec
adc
sub
mov
adc
push
outsl
dec
push
cs
sbb
mov
xor
inc
fcmovne
jmp
xor
xchg
jmp
shll
pop
not
shl
xchg
std
and
orb
imul
dec
daa
dec
mov
imul
clc
cmp
aaa
test
fnsave
std
pop
dec
ret
daa
je
rorb
arpl
xor
add
scas
jo
outsl
dec
mov
adc
aad
popf
rcll
popl
inc
inc
mov
push
inc
jmp
mov
mov
loop
shlb
dec
imul
popa
icebp
and
aad
add
insb
add
loope
inc
cmp
incb
icebp
pop
mov
pop
push
mov
mov
push
sbb
hlt
les
inc
enter
loopne
pushf
dec
pop
ret
jmp
mov
mov
andb
pop
jl
push
out
sub
pop
or
adc
push
xchg
iret
ret
aaa
inc
jns
or
xor
shlb
stc
jnp
jmp
push
pop
jae
bound
dec
sti
cmp
dec
cmpsl
or
pop
dec
mov
pop
fisttpll
enter
repnz
mov
push
xor
or
push
scas
jmp
xor
adc
dec
rorb
rcll
adc
sahf
loop
mov
jmp
jmp
mov
mov
mov
ss
add
fiadds
and
mov
adc
jae
push
repnz
cmp
xchg
fists
jne
enter
mov
call
mov
cmp
pop
out
adc
jmp
xor
mov
cmp
lods
mov
dec
les
ret
pop
sub
aad
into
push
cmpsb
mov
lret
aas
fldcw
sub
jnp
pushf
lret
or
pop
incl
int
jnp
setg
jno
lahf
lock
adc
insb
sub
push
ljmp
sahf
inc
jb
inc
test
and
sub
in
cmp
mov
shl
or
sub
les
xor
mov
or
xor
mov
xor
push
mov
popf
cld
xor
push
push
in
in
shr
xor
movb
shr
sahf
ja
dec
xor
or
fdivrp
adcb
xor
pop
xchg
mov
lcall
pop
jle
cmp
jo
ljmp
add
mov
sbb
xor
mov
mov
pop
pop
push
mov
adc
mov
insb
sub
cmp
repnz
inc
jbe
inc
fstpt
push
and
mov
fimuls
clc
push
aaa
pop
cmp
adc
push
or
sbb
aam
add
xchg
call
gs
lods
dec
loop
dec
and
movsl
test
negb
xchg
or
add
lahf
push
push
loopne
sub
outsl
pop
arpl
xchg
gs
jge
push
out
into
jmp
into
add
mov
fs
xchg
xorb
push
sbb
fcmovne
inc
cmp
sub
aas
jmp
fwait
cli
push
and
or
push
test
pop
add
aam
iret
mov
pushf
pusha
ljmp
inc
jmp
in
cmpsb
in
je
mov
enter
fwait
lods
rcrl
fucomp
xor
pop
cwtl
add
pushf
out
sbb
mov
add
mov
jne
mov
aad
addr16
and
scas
test
out
scas
repnz
js
xor
push
inc
not
cwtl
add
inc
je
andb
xorb
fsubs
inc
ja
push
adc
inc
pop
enter
xor
mov
jne
mov
xchg
adc
clc
cmp
mov
imul
add
sub
cmp
sbb
fldpi
jp
movl
and
les
adc
cld
mov
dec
jno
xchg
cli
or
lcall
pop
js
addb
pop
or
cmpb
outsl
clc
or
fucomip
fwait
lahf
movsl
dec
jbe
bound
pop
pop
cltd
xor
pop
fsubrp
push
xor
lods
incb
sarb
loopne
movsl
jmp
mov
scas
jbe
je
add
inc
xlat
dec
and
mov
add
fistl
insl
dec
pop
outsb
jecxz
subb
jns
mov
add
sbb
jge
mov
jb
fldenv
or
pop
shr
push
jbe
xchg
fbld
shl
add
or
add
ss
or
mov
test
jmp
movsl
inc
repz
movsb
fs
popa
cmc
lcall
xor
pop
dec
push
sub
pop
cmp
dec
inc
add
pop
pop
mov
inc
push
push
and
xor
dec
orl
add
flds
sub
scas
pop
ds
mov
stos
and
jmp
enter
rorb
push
dec
lods
in
mov
adc
lret
sbb
mov
inc
jmp
cmc
inc
xor
jnp
mov
pop
cmp
inc
pextrw
or
or
fidivs
in
inc
ror
outsb
cs
dec
jae
pop
sbb
mov
xor
ret
push
or
int3
out
pop
jge
or
inc
push
and
mov
mov
push
mov
dec
int
out
lods
jb
add
jno
adc
cmp
jecxz
add
jge
sbb
xor
call
rcrb
sub
inc
or
fdivrs
xchg
push
fildll
add
cli
daa
add
iret
xchg
repz
adc
pop
and
rcrl
mov
sub
cs
scas
pop
pop
push
push
leave
push
or
inc
push
cmp
adc
out
cmp
adc
sub
rcrl
mov
test
int3
mov
mov
ja
xor
pop
jmp
dec
pop
jmp
stc
add
ds
ja
or
or
lahf
push
and
cmpsl
aaa
je
cmp
push
gs
fwait
sub
imul
repz
cltd
loop
fmuls
jmp
jno
or
stos
jp
or
adc
xlat
js
insl
pop
outsb
jecxz
mov
sti
popf
push
clc
repz
xchg
scas
adcb
pop
push
scas
bound
add
push
inc
aaa
mov
sbb
add
out
mov
js
and
pop
push
movl
mov
inc
mov
add
scas
dec
ja
popa
inc
imul
dec
in
add
cmp
popa
or
arpl
sub
inc
xchg
loopne
adc
addb
stc
adc
out
add
dec
xchg
push
inc
jmp
gs
push
push
jno
addb
nop
cli
jo
sub
pop
sbb
jecxz
add
inc
and
stc
shrb
xchg
or
out
lds
add
jmp
pop
std
mov
andb
movsl
jns
or
xchg
dec
nop
in
aad
add
jo
and
xor
ljmp
pop
jp
mov
dec
mov
xor
mov
jmp
xchg
pop
add
test
xor
and
dec
std
or
sti
jle
push
and
push
iret
sbb
jg
jbe
and
mov
jne
cs
add
inc
and
add
cwtl
jno
sarb
jecxz
es
dec
dec
rclb
mov
push
jae
pop
shr
dec
inc
push
sub
mov
mov
mov
xchg
xlat
loopne
cmp
cwtl
mov
jl
sub
dec
jo
jmp
mov
leave
ss
xchg
scas
jecxz
lods
or
pop
arpl
loop
xchg
add
jmp
push
mov
notl
inc
add
mov
jmp
scas
cs
xorb
movsl
aam
scas
jle
movsl
xor
shll
pop
lret
aad
push
clc
sti
add
aaa
add
jmp
repnz
adc
sub
pop
mov
loop
mov
jmp
xchg
clc
add
dec
xchg
add
or
push
arpl
aas
push
cmp
sub
push
push
jmp
sbb
or
jo
orb
adc
mov
dec
and
jp
or
aam
dec
pusha
icebp
inc
sbb
dec
movsb
cmpsl
jp
mov
push
mov
cmp
cmp
int3
mov
pop
in
outsb
movsl
gs
sub
out
aam
or
shll
mov
dec
add
and
pop
pop
lods
adc
movsb
push
lahf
dec
aad
ret
pop
sub
and
push
adc
andb
mov
movsb
scas
mov
xchg
fbstp
call
jl
lret
cs
adc
sub
mov
scas
jmp
jb
loop
xchg
movb
ss
pop
stos
mov
sub
sub
arpl
or
sub
cmc
sbb
sbb
adc
and
daa
xlat
mov
or
outsb
loopne
push
or
stos
testb
dec
jbe
xchg
xchg
lods
cmp
fsts
sti
ds
xchg
xchg
cmpsl
mov
xchg
cwtl
orb
inc
sbb
inc
add
stos
mov
stos
les
mov
mov
and
loope
inc
rorb
xchg
scas
out
pusha
rol
imul
jmp
into
add
loope
push
add
iret
add
xor
enter
dec
sbb
notl
xlat
test
mov
pop
pop
xor
stos
inc
cmpsb
mov
roll
adc
jmp
push
or
or
mov
mov
iret
add
xchg
push
push
sub
inc
sub
xor
in
rorb
and
outsl
das
jmp
push
js
xchg
clc
push
dec
sub
push
xchg
ljmp
movsl
and
sub
fcompl
ss
sahf
xchg
sub
xor
and
call
pusha
and
add
push
mov
xor
dec
add
fs
push
mov
dec
lahf
jo
or
jmp
push
push
push
data16
mov
mov
sub
stos
test
mov
outsb
shlb
sub
push
or
inc
rep
leave
ljmp
xor
cmp
subb
in
cwtl
mov
scas
dec
mov
test
inc
and
inc
push
lcall
lods
push
pop
push
mov
cs
mov
xchg
lds
xchg
nop
ljmp
insb
mov
lock
scas
mov
jno
jmp
mov
repnz
pop
sub
jmp
pop
or
mov
ja
dec
inc
adc
test
repnz
jno
or
and
cmp
mov
mov
movsb
adc
shrb
cmp
mov
mov
ss
add
push
bound
pop
ljmp
clc
in
and
data16
add
clc
xchg
jo
xchg
mov
push
lods
pushf
sbb
jo
ret
mov
push
sub
pop
add
pop
mov
jecxz
push
push
push
jmp
pop
sbb
mov
sbb
add
mov
inc
dec
mov
hlt
sbb
or
add
xor
ret
jns
fsubl
addr16
movsl
adcb
dec
push
and
dec
sbb
and
pop
jmp
xor
dec
ret
idiv
cwtl
push
inc
sub
push
insl
mov
lret
jl
and
mov
stos
dec
dec
out
push
ljmp
mov
imul
add
or
sti
nop
gs
es
pusha
adc
pop
cli
mov
cs
icebp
mov
and
sub
stos
dec
insb
and
push
fcoml
das
push
sahf
inc
mov
push
mov
mov
dec
push
mov
ds
jno
mov
test
cwtl
pop
cmp
sub
dec
mov
inc
test
adc
mov
shll
inc
leave
xlat
inc
push
cmp
xor
or
mov
pusha
inc
jbe
and
cmp
pop
incl
sbb
and
xor
ret
mov
push
xchg
sub
xchg
imul
movsb
jl
jnp
das
sub
or
jno
push
pop
out
std
xor
push
push
out
jno
jp
pop
dec
lock
lods
pop
or
dec
and
push
leave
push
cwtl
push
inc
daa
orb
adc
out
mov
add
add
xor
push
mov
out
outsb
push
and
pop
inc
aas
push
add
pop
fstpl
inc
fbld
mov
incl
mov
inc
ret
and
add
mov
dec
push
ljmp
pop
movsb
xchg
push
lahf
and
mov
fdiv
mov
add
and
push
push
dec
inc
mov
pop
out
fiaddl
out
outsl
popa
imul
test
in
call
shr
sbbb
dec
push
mov
and
and
lds
or
jmp
xlat
xchg
mov
push
jb
xchg
xlat
fwait
add
mov
sbb
and
and
inc
inc
dec
adc
orb
fsubrs
jbe
ret
pop
xor
lret
stc
jmp
aad
and
xor
dec
das
in
mov
imul
js
jl
push
mov
test
mov
sbb
outsb
jbe
and
andl
popf
ficomps
cmp
cld
popf
cmp
jmp
push
pop
aam
loop
and
jmp
jno
or
add
adc
push
dec
pop
stc
add
mov
or
mov
push
add
daa
add
jnp
adc
das
sub
repz
pop
ja
jecxz
mov
ret
addl
js
mov
je
xchg
adc
sub
sub
aas
adc
xchg
shlb
ja
jl
aad
pop
or
pop
cmp
mov
cltd
push
icebp
sbb
inc
call
pop
jp
and
mov
add
out
xchg
push
mov
adc
xorb
pop
pop
xor
push
outsl
rorl
scas
sub
or
jmp
xchg
fsin
imul
xor
add
addr16
movsl
push
mov
arpl
inc
pop
dec
insl
cmp
loop
push
mov
rcll
faddl
push
out
mov
add
add
or
test
adc
aas
push
xor
test
cmpsb
inc
testl
lds
push
fistpl
or
es
ss
xchg
inc
std
cmp
xor
sbb
jmp
repz
das
adcb
push
push
ret
add
adc
andb
add
out
test
and
mov
sub
scas
jb
rcr
mov
mov
mov
shlb
pop
call
pop
aaa
xchg
push
xchg
push
push
mov
fiaddl
mov
dec
sub
mov
dec
aad
cmp
or
sbb
mov
popa
in
data16
jo
mov
add
push
rol
scas
clc
jae
pop
std
je
or
push
dec
insb
popa
push
outsb
call
add
es
jb
dec
test
or
int
jbe
inc
push
pop
jecxz
das
xor
lahf
dec
orl
gs
push
sbb
insb
stos
adc
test
stos
dec
scas
cmp
jmp
cmp
push
out
pop
sub
mov
or
jp
xchg
pushl
dec
add
jne
divb
xchg
push
inc
ljmp
or
mov
dec
xor
inc
es
mov
ret
dec
outsb
inc
xor
xor
xor
mov
mov
mov
sbb
es
push
mov
xor
mov
pop
iret
pop
stos
nop
clc
jmp
jo
int
sub
cltd
out
jb
loop
pop
or
jle
jmp
push
lret
cmp
aam
or
pop
icebp
ss
dec
sub
add
in
out
or
int
pop
sub
sbb
or
jl
pop
in
adc
repz
xchg
out
lods
js
xchg
dec
adc
shr
mov
pop
inc
sub
push
or
xchg
jg
hlt
int3
lahf
cld
imul
push
lock
adc
jg
mov
or
mov
out
adc
xor
jbe
mov
dec
jl
mov
rorl
inc
xor
int3
pop
dec
adc
rcll
fdivr
fwait
inc
lret
mov
sub
add
mov
outsb
clc
sbb
lods
fwait
dec
jne
lahf
adc
or
or
pop
inc
push
mov
pop
push
mov
adc
cmpl
adc
decl
rorb
lea
sub
mov
lret
add
mov
pop
jmp
inc
sbb
fnstsw
jmp
lods
fisubrs
and
fbstp
arpl
imul
pop
and
ror
idiv
mov
stos
rcr
xor
sub
jno
cmp
lock
or
movsl
jbe
and
or
and
jmp
test
data16
xchg
pop
jmp
adc
push
fdivrs
movsl
or
or
out
in
out
jecxz
or
or
dec
pop
stos
push
add
inc
mov
cld
mov
inc
not
fisttps
es
sub
jbe
adc
es
jge
xchg
outsb
sbb
jl
pop
ret
pop
leave
mov
push
stos
test
loopne
lahf
xchg
mov
int
in
jl
lret
call
sub
mov
in
sub
or
mov
fnstenv
jb
xchg
jmp
push
pop
jbe
and
lods
sbb
dec
cmp
clc
push
test
or
into
dec
mov
jp
scas
sbb
pushf
jb
inc
fdivl
jmp
sbbb
fists
rdmsr
jne
dec
jge
add
in
aas
pop
stc
inc
fsubs
loop
aas
push
pop
add
push
rorb
push
ficoms
sub
mov
test
sbb
and
lds
jnp
icebp
sub
mov
or
and
pop
out
add
push
jp
push
addb
mov
jmp
pop
int3
push
sub
adc
dec
test
mov
pop
cmp
jns
lahf
fucompp
or
in
xchg
sbb
add
sub
stos
lret
fistpll
jns
test
sub
and
sbbl
loopne
add
add
jg
or
jnp
push
sarb
adc
scas
mov
cltd
xor
std
mov
adc
stos
sub
mov
dec
test
int3
sub
and
cmpsl
es
push
jmp
int
push
repnz
add
cmp
xor
scas
xchg
inc
out
les
and
es
out
rcl
aaa
jb
leave
sub
push
movzwl
mov
jg
jmp
xchg
mov
fistpl
les
testb
fsub
add
mov
cmp
roll
add
ret
add
cwtl
lds
push
mov
jmp
jg
insl
lea
push
dec
jmp
gs
enter
fcomip
push
dec
int3
adc
xchg
loop
jne
outsl
shr
add
cmp
dec
stos
xor
xchg
imul
adc
xorb
push
jl
cld
lods
iret
sub
jmp
mov
inc
mov
mov
leave
push
bound
pop
incb
push
add
insb
rolb
mov
pop
lahf
xchg
fbld
mov
add
pop
rorl
test
jmp
js
inc
sub
inc
sbb
mov
jno
sbb
add
pop
dec
mov
xchg
outsb
ret
neg
rcll
and
pushw
jg,pn
xchg
repnz
pushf
jle
pop
les
cwtl
adc
mov
add
inc
pop
pop
cld
outsb
loopne
clc
xchg
in
xor
sbb
sub
fadd
xchg
scas
notb
push
inc
loopne
sub
or
shlb
ret
mov
mov
rorl
test
add
rcrl
cmp
or
cmp
dec
bound
les
mov
lcall
ror
nop
dec
add
out
xor
and
mov
push
adc
cmp
and
nop
out
push
lods
dec
sbb
xor
stos
int3
pop
push
mov
or
xchg
mov
fists
add
jecxz
sbb
mov
xor
or
loop
movsb
stos
add
xchg
ret
popf
fnstsw
xor
push
std
pop
ds
addl
add
jnp
dec
push
pop
xlat
jmp
and
notl
and
xchg
xchg
icebp
sbb
not
or
mov
daa
popa
dec
or
icebp
or
rclb
ds
pusha
jmp
in
jae
jo
add
ret
adc
mov
adc
or
and
repz
mov
sti
pop
or
scas
popf
iret
daa
fucompp
inc
adc
push
pushf
popf
inc
jnp
mov
mov
cmpb
mov
mov
pop
pop
xor
mov
add
xor
mov
inc
imul
or
lock
call
and
xcrypt-cbc
cmpsl
push
dec
push
inc
inc
jno
jo
or
push
inc
std
test
stos
jge
cs
call
hlt
movsb
pusha
push
adc
pop
enter
shr
fs
or
mov
enter
sbb
popa
mov
add
fcompl
push
loope
adc
dec
jae
dec
loop
push
push
faddl
xchg
int
add
dec
cmp
inc
ljmp
or
fdiv
pop
xchg
lock
incl
add
push
lahf
push
inc
rorl
mov
cs
das
das
scas
imul
stc
and
xchg
adc
dec
data16
addl
ret
and
inc
cld
jne
mov
insb
fistpll
xor
pop
bound
popf
adc
sub
scas
loopne
fiaddl
cmp
or
repnz
rol
mov
inc
sub
push
adc
cmc
add
lret
or
lret
cmp
dec
inc
imul
repz
add
mov
lock
stos
mov
test
cld
mov
insb
stos
xchg
lahf
loope
hlt
fimull
into
push
sbb
lds
pop
push
push
leave
scas
fldcw
ret
add
sub
adc
mov
sarl
rcrl
fs
stc
and
jno
mov
xor
sub
push
fnstsw
stos
lret
mov
adc
aam
test
ss
das
inc
popf
inc
cmp
dec
push
loope
out
stc
mov
cs
xor
xchg
inc
loop
xchg
cmp
je
mov
add
mov
fists
pop
mov
inc
push
adc
pop
dec
xchg
or
pusha
push
stos
sub
into
pop
mov
loope
sarl
and
jmp
outsb
mov
xchg
sub
loopne
pop
shr
cmp
dec
mov
jns
imul
mov
iret
pop
adc
dec
push
inc
pop
or
xchg
orl
movsl
mov
cmp
push
sar
outsl
xchg
sub
mov
cmp
ret
xchg
pop
pusha
lds
dec
sub
push
fsubrs
jno
xchg
mov
jnp
push
jnp
or
pop
mov
push
sbb
incl
jmp
ljmp
rorb
cwtl
adc
lods
cld
sub
add
das
adc
jno
inc
mov
jp
pop
outsl
into
xorb
jb
mov
out
xor
push
and
sbb
jp
dec
push
xlat
add
loopne
sbb
jmp
jge
xor
aam
scas
and
loopne
xor
or
mov
mull
fwait
mov
rcr
adc
pop
mov
adc
adcl
pusha
lds
mov
and
test
push
xorl
dec
std
and
push
mov
imul
lret
hlt
mov
lret
jmp
pop
cmpsl
push
cli
test
jb
xchg
pop
xchg
repnz
dec
je
fnsave
pop
out
jge
dec
mov
jecxz
or
or
in
arpl
mov
sbb
inc
jmp
cmp
push
dec
push
test
push
shrl
lock
mov
mov
popf
fistpll
xchg
nop
mov
or
add
pop
fdivrp
and
pop
fisubrs
jne
sarl
add
clc
inc
xchg
lret
les
insl
dec
xlat
ljmp
ret
bound
or
rorb
enter
push
pusha
mov
imul
fldl
aad
les
neg
data16
add
xor
ret
loope
sub
out
or
rcrb
sbb
adc
leave
pop
cmpsl
adc
aaa
clc
push
test
mov
push
in
mov
or
lods
sbb
and
iret
jns
jb
jg
out
insl
push
mull
adc
push
pop
pop
dec
pop
mov
mov
cmpsb
mov
leave
pop
mov
das
sbb
xor
scas
mov
fsubr
icebp
imul
daa
sbb
jne
push
dec
pop
pop
test
cmp
dec
fstpl
dec
fbld
mov
loope
or
jb
std
or
daa
jl
dec
cmc
jno
jno
push
popf
pop
in
loopne
add
adc
jecxz
inc
xor
jl
mov
mov
into
mov
mov
inc
cs
lea
mov
sti
inc
push
or
sahf
insb
adc
sbb
iret
cmpsb
addl
scas
jne
or
ljmp
mov
and
mov
pop
stc
aas
cmp
pop
cmpsb
outsb
or
sbb
das
pusha
xchg
push
lods
cs
adc
add
push
enter
in
push
mov
mul
cmp
lahf
inc
inc
out
mov
test
sub
aaa
scas
out
pop
or
pop
pop
and
mov
mov
dec
jne
repnz
pop
rcl
inc
daa
mov
fistps
sub
leave
ss
daa
jns
xchg
pop
scas
lcall
pop
cli
cld
mov
in
inc
adc
iret
pop
das
mov
ja
int3
mulb
or
jge
add
mov
push
in
pop
or
xlat
add
pop
fwait
adc
iret
jmp
jg
cli
dec
sub
fisttpl
das
push
xchg
loop
jmp
in
jnp
out
mov
int3
idivb
xor
inc
or
cmp
inc
push
orl
cmpsl
jne
push
mov
test
fistl
add
fbld
xchg
pop
insb
in
shll
cwtl
movsl
push
jecxz
cmp
shrb
add
xor
push
popf
mov
mov
addl
in
fiaddl
rorl
sub
sub
and
adc
cs
and
leave
sbb
sub
push
popa
inc
in
xor
pop
adc
jmp
cmp
dec
dec
mov
mov
cmc
mov
loope
cli
push
sub
pop
ja
jmp
and
or
dec
sti
fstpt
inc
rcrb
sbb
xchg
adc
andl
gs
lds
push
pop
stc
or
inc
push
push
inc
iret
xchg
pop
push
push
divl
mov
in
push
imul
pop
inc
jle
popa
inc
push
dec
add
popa
fldenv
push
push
out
cs
push
push
and
mov
cmp
pusha
mov
js
mov
iret
jmp
call
xchg
testb
rcrb
movsl
stos
adc
and
pop
add
cmc
fldln2
leave
rolb
bound
icebp
xchg
and
jbe
xor
lods
push
mov
cmp
jne
sub
add
sti
in
pop
sbb
das
ljmp
shlb
mov
enter
das
adc
add
pop
jmp
inc
inc
lock
mov
ljmp
dec
or
jmp
mov
mov
out
pop
and
dec
dec
divb
and
adc
notb
call
orb
push
cmpsb
and
push
add
iret
mov
push
out
cmp
push
and
pushf
sub
mov
mov
add
sub
or
inc
in
loope
mov
inc
or
xchg
sti
cmp
sub
js
mov
aas
scas
xor
mov
fwait
dec
pushf
jge
cltd
icebp
pop
cmp
or
xor
cmp
and
and
pop
push
add
push
cmp
sub
mov
inc
inc
decb
pop
sub
dec
dec
sub
rclb
or
aam
dec
scas
and
dec
pop
cli
cwtl
out
and
hlt
cmp
pop
pop
sub
xchg
icebp
mov
jmp
xor
int
add
add
dec
add
dec
cmp
daa
mov
jge
pop
xchg
incl
jmp
bound
push
and
in
stc
popa
sbb
out
hlt
xor
cltd
scas
or
jecxz
sub
repnz
jns
add
icebp
gs
inc
clc
incb
subb
shr
xchg
popf
scas
add
push
subb
mov
pop
mov
mov
cli
test
addb
ljmp
push
and
test
rcl
adc
fbld
inc
into
loope
and
pop
push
orl
mov
jne
sti
jnp
sub
xor
mov
stc
fstl
adc
and
dec
fcoml
divb
ljmp
aam
jnp
scas
scas
shll
add
sub
xchg
scas
jnp
ret
xlat
imul
xor
mov
fists
xor
cmc
out
iret
mov
xchg
and
sub
cmp
mov
mov
inc
mov
push
add
test
xor
xchg
sub
ret
sarl
pop
sub
test
enter
out
popa
cmp
mov
outsb
lahf
cmp
or
repnz
in
dec
lock
push
mov
mov
mov
pop
sub
or
or
adc
jo
test
mov
mov
loop
test
mov
and
xchg
push
mov
mov
sub
repz
out
aaa
dec
xchg
leave
or
inc
ss
pop
xlat
cltd
inc
sbb
pop
inc
inc
negl
decb
out
fcoml
gs
adc
dec
in
sub
incb
cmc
lods
jg
sbb
testb
cmp
ds
cmpsl
test
inc
out
push
ret
push
push
xor
enter
add
xchg
xchg
pop
sub
xchg
shr
push
xchg
jae
push
sti
push
inc
pop
jge
idivl
mov
or
sbb
adcb
fcoml
icebp
fs
or
cwtl
adc
fisttpl
cmpsb
sub
nop
push
sub
cli
lea
or
shlb
pop
insb
aaa
mov
aas
addb
jmp
outsb
cs
rcrl
dec
cmpsl
push
aas
imul
popf
into
cs
and
cld
mov
cmc
std
jp
mov
add
mov
daa
pusha
xchg
push
jge
jbe
cmp
test
scas
lret
pop
jbe
mov
in
lahf
dec
repz
leave
sub
incl
int3
mov
mov
loopne
sub
out
es
cld
xor
sub
pop
jle
pop
ret
jns
hlt
inc
cmp
mov
mov
mov
sub
push
pop
sub
testb
or
cmp
in
jmp
pusha
decl
out
pop
jb
idiv
push
inc
inc
data16
and
out
pop
std
loopne
xor
jmp
not
mov
loop
xlat
jae
lahf
pop
fildll
push
mov
add
xor
js
cs
daa
jle
xchg
andb
popa
fimull
pop
pusha
aad
cmp
cmp
xchg
add
add
in
xor
aaa
xor
je
arpl
or
push
pop
insb
xchg
dec
in
in
addr16
scas
int3
movsb
add
cmpl
popa
jp
dec
or
jb
mov
mov
js
push
xchg
negb
loope
shl
and
inc
mov
xor
push
repz
pop
inc
add
pop
stos
push
xor
nop
xor
dec
mov
and
push
inc
rcl
ficomps
into
xor
mov
adc
mov
jp
pop
push
pop
jmp
nop
sarb
add
fdivrl
xchg
cmp
out
lcall
add
sbb
roll
popa
mov
adc
enter
mov
pop
icebp
jbe
mov
sub
lret
jmp
imul
xchg
repz
and
dec
push
pushl
sub
insb
pop
jno
add
adc
add
outsb
mov
and
add
push
repz
addb
mov
sub
xor
cmpsb
sbb
xor
icebp
aaa
loope
imul
inc
and
pop
ljmp
adc
pop
loope
mov
ds
daa
pop
cs
imul
enter
pusha
mov
rcll
xor
adc
pushf
sbbb
mull
pop
dec
push
iret
into
and
cmpb
push
adc
and
test
and
add
lds
in
and
inc
adc
mov
lea
jbe
jmp
sub
gs
xchg
jmp
push
mov
clc
scas
loopne
add
rcrb
push
loop
cwtl
std
push
bound
ret
jns
inc
ret
jg
std
push
in
xor
dec
push
jmp
pop
inc
adc
adc
push
mov
imul
add
sbb
mov
adc
push
or
addb
push
mov
mov
fisttpll
sbb
sub
xchg
adc
std
and
clc
or
sub
or
xor
push
jmp
inc
jecxz
out
sbb
cmpsl
mov
mov
call
icebp
jecxz
fwait
test
dec
pushf
add
xor
push
and
add
add
mov
loope
xor
push
sub
ss
add
je
sete
aas
lock
cmc
jno
lock
pop
arpl
shll
pop
dec
bound
sub
xor
sbb
pop
or
push
test
adc
rol
call
or
repz
mov
mov
xor
sbb
jmp
add
and
popw
and
stos
popa
push
out
decb
sti
inc
push
leave
mov
push
lock
test
cmp
dec
hlt
mov
mov
inc
xor
test
mov
pop
movsb
cli
daa
hlt
stos
popl
outsl
es
sub
rolb
pop
add
bound
loopne
or
out
fildl
sub
clc
push
add
add
mov
loope
add
sub
push
adc
daa
shlb
xchg
or
pop
sub
pop
xlat
stos
fs
out
lods
out
sbb
inc
jp
clc
aad
mov
fidivrs
xor
inc
xchg
push
out
lods
push
pop
xor
sub
adc
mov
sbb
adc
pop
shll
or
in
ret
jp
shr
xor
dec
test
daa
sbb
xor
dec
add
mov
pop
push
sarb
loop
leave
rcr
loopne
and
mov
push
cli
cmp
pop
dec
xchg
jmp
jecxz
dec
sahf
ror
shll
and
push
leave
and
nop
pop
sbb
add
dec
xlat
adc
nop
and
cmpsl
mov
das
or
mov
popa
outsb
inc
dec
jl
add
and
xlat
xchg
jl
mov
lret
insl
shll
jl
push
decl
jle,pn
mov
inc
es
and
sti
inc
jbe
pop
or
sub
sti
test
adc
mov
icebp
sub
fwait
notl
xchg
jns
into
cmp
xor
inc
popa
pop
push
loop
ds
ljmp
out
data16
popa
flds
loopne
test
push
wbinvd
or
pop
cmpsl
cmc
nop
jmp
pop
jmp
fwait
adc
insb
pop
add
sbb
call
test
loopne
das
pop
mov
push
jne
jle
and
pop
jmp
add
push
xchg
jg
cmpsl
cmc
xor
mov
lods
pusha
int3
push
push
dec
pop
stos
sub
movzwl
add
repnz
adc
and
push
jo
pop
daa
pop
out
stos
adc
jne
cltd
sub
popa
stc
outsb
pop
or
imul
subl
xor
add
mov
adc
in
add
push
or
cmp
gs
sahf
loop
cmp
je
mov
jne
je
push
fst
btc
xor
push
movsl
and
adc
jmp
in
and
mov
lock
mov
and
mov
dec
in
sub
mov
pop
test
mov
frstor
mov
imul
inc
imul
enter
and
js
pop
and
int
cmp
add
iret
mov
and
frstor
ficomps
inc
push
pop
cld
sub
mov
popa
mov
push
or
aam
and
ds
add
rcll
pop
loop
xchg
sbb
and
push
inc
or
mov
ficoms
pop
jo
xchg
xchg
hlt
mov
push
dec
and
dec
xchg
sub
or
mov
test
push
xlat
sub
out
ret
std
push
push
gs
ret
sbb
lea
pop
fs
repz
lods
movsl
xchg
mov
adc
ss
dec
cmp
pusha
or
je
not
add
push
inc
bound
enter
lds
orb
ljmp
add
pop
add
sub
call
adc
jmp
int
mov
mov
lahf
push
lds
int3
daa
pop
cmp
das
loope
mov
jbe
xchg
pusha
sub
sub
pop
mov
add
jl
dec
dec
add
or
hlt
or
scas
mov
xor
add
sub
lds
jmp
gs
test
mov
add
and
sbbb
cmp
sti
enter
js
lahf
gs
sahf
adc
fbld
or
daa
lock
dec
mov
jbe
ret
cwtl
and
lock
out
mov
imul
out
xor
ljmp
xlat
popf
ja
movsl
cmpsl
imul
lret
sbb
in
clc
pop
xor
in
adc
or
pop
dec
insb
clc
and
mov
out
add
sub
adc
call
pop
ljmp
inc
das
jmp
jns
add
rcrb
pop
jp
add
push
xchg
es
cmp
push
cmc
ja
and
add
rolb
jmp
stos
sbb
ljmp
cltd
testl
es
add
pop
pop
mov
in
movsb
das
push
aas
adcb
ret
imul
push
jmp
mov
mov
insl
nop
jge
bnd
xchg
dec
push
sti
or
xchg
negb
stos
adc
push
mov
call
pop
adcb
bnd
cmpl
inc
push
aad
cs
ljmp
adc
or
dec
mov
xor
das
test
dec
test
dec
sbb
scas
add
cld
xchg
pop
jmp
addr16
sbb
dec
movsl
mov
pop
mov
or
jge
pop
das
ss
xor
adc
adc
xchg
dec
jmp
scas
push
outsb
movb
dec
xchg
dec
adc
sub
pop
pop
sub
cmpsl
adc
int
sbb
mov
rcll
cmp
mov
ficomps
push
inc
mov
sub
sub
or
sub
pop
pop
sub
ja
pop
cmp
popa
pop
loopne
inc
xor
pop
jle
ja
lcall
out
pop
pop
pop
sub
pusha
mov
test
sub
and
inc
inc
mov
xchg
cli
loope
fcoms
orl
out
das
in
jne
rorl
inc
cwtl
or
cmp
loope
sub
jmp
les
cmpb
push
cltd
ret
cmpsb
push
shrl
mov
inc
je
mov
mov
les
pop
jno
hlt
adc
push
mov
js
ret
mov
jg
pusha
sub
pop
add
jns
pop
xor
and
mov
jo
mov
pop
aam
rorl
sub
adc
or
icebp
pop
testl
fisttps
or
or
cmp
pusha
mov
clc
adc
neg
dec
dec
test
add
push
xchg
lret
data16
pop
popa
inc
lcall
stc
or
add
pop
lahf
imul
rclb
dec
sub
inc
jle
push
mov
shl
adc
fldt
into
jns
push
ljmp
xchg
or
call
cwtl
add
pusha
cmc
adc
sub
mov
sbb
pop
movl
inc
gs
sbb
int3
xchg
insb
push
shl
subb
in
aad
call
cmp
dec
and
mov
js
aas
mov
out
sub
cmp
cmp
ret
stos
push
inc
sbb
inc
xchg
and
les
sub
lds
sbb
nop
cmp
dec
pop
test
ljmp
pop
incl
jo
inc
mov
sub
test
dec
inc
xchg
pop
lods
and
mov
pusha
xchg
mov
adc
ret
outsl
neg
mov
sub
add
cmp
clc
js
daa
jbe
pop
lods
or
stos
mov
fcoml
or
enter
or
test
add
cmp
jmp
mov
out
testb
push
adc
push
dec
mov
cmp
and
cmp
or
cmp
rcll
out
cmp
cmp
incl
jp
push
nop
outsl
lds
sub
out
mov
add
jp
inc
adc
sbb
and
inc
xchg
jno
xlat
lcall
jmp
int
ror
mulb
test
rcrl
aam
sub
dec
orb
jo
cmc
inc
test
std
sub
aas
push
cmpsb
mov
adc
jecxz
lret
sahf
iret
xor
ret
mov
push
mov
push
dec
or
ffree
test
adc
xor
inc
scas
xchg
add
or
out
call
js
cmc
jge
or
push
or
jnp
insb
loope
add
out
sahf
push
imul
or
stc
mov
xchg
cli
je
sub
sarl
cltd
pusha
jo
adc
xchg
push
and
xchg
scas
xlat
xchg
test
mov
dec
cmpb
jne
adc
stos
push
gs
lods
subl
je
idivl
inc
mov
mov
xchg
in
aam
loopne
adc
mov
js
dec
or
adc
and
pushf
sarl
fldt
pop
das
jmp
in
dec
pop
stos
cmpb
jmp
push
jp
je
add
cmc
frstor
dec
push
inc
add
sbb
lods
ljmp
or
inc
add
inc
fldenv
push
testb
loope
andb
out
pop
frstor
xchg
and
xchg
pop
sub
add
add
adc
push
xor
ret
xlat
rol
ja
pop
and
or
sbb
sub
sub
pop
jo
imul
inc
neg
rcr
or
and
and
enter
and
inc
ret
dec
ficomps
ds
push
sti
push
loope
mov
pop
push
sub
je
popa
jp
or
jo
add
lret
aas
outsl
xchg
push
pop
or
sarb
push
or
sub
les
mov
and
mov
inc
add
repz
in
and
xchg
in
daa
imul
jb
subb
add
call
dec
add
mov
cmc
fldcw
repnz
ret
out
into
outsb
jno
pop
aaa
es
adc
push
cmp
xchg
in
dec
movsl
pop
pop
lods
sbb
or
shr
sub
adc
pop
jo
lods
push
sbb
cs
jo
in
insb
ja
cmp
rol
shlb
adcl
adc
pusha
add
add
pop
mov
xor
pop
dec
flds
inc
mov
xlat
dec
sub
or
jmp
sub
mov
and
jae
adc
mov
push
mov
das
lods
inc
insl
sub
jmp
aaa
rcrl
mov
addr16
mov
sti
pop
sub
push
arpl
addr16
inc
test
lahf
mov
insb
loope
add
lret
dec
not
add
jmp
jne
fcoml
popf
jns
outsl
mov
loopne
mov
neg
mov
xchg
push
add
inc
mov
inc
sub
dec
or
push
shlb
xchg
jl
cmp
push
pop
sbb
out
scas
xchg
mov
sub
add
in
mov
xchg
sub
adc
add
add
push
pop
mov
or
lods
fsubs
mov
sub
cmc
inc
inc
and
movsl
scas
neg
pop
push
jmp
push
inc
aaa
pop
fsubs
and
rclb
mov
add
dec
pop
mov
mov
jmp
ret
and
push
adc
lret
lret
aas
adcb
jl
mov
ret
pop
cmp
xor
add
jp
out
pop
popl
lds
test
in
mov
pusha
ret
add
movsl
pop
mov
cmpsb
cli
adc
xlat
repz
outsb
dec
cwtl
popf
mov
jb
cltd
sti
xlat
push
imul
push
lock
pop
jne
jbe
add
add
push
daa
subl
add
popa
mov
rcl
and
pop
andb
ss
sbb
loop
sbb
jnp
xchg
cmp
push
cld
orl
cwtl
pop
fwait
pop
inc
mov
insl
mov
adc
daa
pop
pushf
loope
int
movsl
mov
iret
mov
or
adc
mov
jl
jno
in
sbb
rolb
cmc
xchg
adc
pop
pusha
imul
fldcw
xor
movsb
and
les
add
or
jae
dec
mov
cli
jns
popf
jno
and
xchg
add
in
xor
out
jmp
or
inc
pop
or
lds
inc
push
mov
cs
imul
scas
add
incl
xor
mov
in
mov
cs
push
sub
push
call
lret
shr
pop
jno
orb
or
and
fstps
repnz
sbb
push
and
loop
pop
mov
inc
pusha
sbb
mov
loop
push
push
adc
push
add
test
adc
es
pushf
addl
mov
int
cmc
jmp
sbb
mov
inc
lahf
add
cwtl
adc
mov
xchg
add
imul
cltd
jo
jg
push
mov
jp
movsb
push
add
or
mov
int
mov
mov
sub
or
jmp
fists
fwait
cmpsb
leave
int3
jns
cmp
testb
das
lret
mov
jmp
mull
dec
cmp
and
push
lahf
xchg
and
push
ja
scas
sarl
shrl
daa
out
jge
repz
pop
hlt
fs
sbb
in
movsl
xchg
je
or
jo
loop
pop
mov
pop
insb
shll
mov
fmul
push
and
or
add
popf
out
xchg
lcall
adc
inc
add
push
pop
mov
xor
push
cmc
bound
lret
pop
imul
test
add
add
sub
inc
sub
cmpb
in
popf
int
pop
gs
jl
add
push
mov
rolb
inc
not
call
leave
add
sahf
adc
lret
pop
sbb
mov
push
mov
popf
ret
sti
inc
jno
movd
jnp
lock
dec
dec
adc
mov
add
int
subl
ljmp
xor
ds
inc
mov
lea
clc
fbstp
and
add
push
and
stos
clc
sub
ret
enter
cmpsl
add
adc
out
mov
es
ja
pop
fs
pop
add
inc
pop
jmp
ffreep
pop
mov
pushf
or
or
push
loop
fsubrs
mov
adc
mov
cmc
jp
mov
or
inc
push
stc
lock
pop
ljmp
cmp
jmp
pop
insb
xor
mov
xchg
jnp
in
pop
push
push
out
es
and
orl
sbb
ds
and
pop
pop
mov
aam
iret
mov
and
repnz
inc
cli
dec
inc
ja
aas
std
and
jg
dec
pop
sbb
ret
mov
loopne
shll
dec
mov
push
sub
inc
dec
cmp
xchg
mov
push
push
mov
mov
dec
cmp
inc
add
add
pop
dec
mov
icebp
icebp
icebp
xor
xchg
xchg
inc
pop
xchg
imul
movsb
mov
cmpsl
inc
adc
popa
in
mov
adcl
orb
pop
add
add
imul
push
push
or
imul
jg
pop
popa
jmp
scas
push
test
jmp
mov
pop
cs
aad
adc
lock
xor
stos
xlat
mov
jnp
sbb
sbb
mov
lock
adcl
sbb
cmpsb
das
jmp
jae
dec
xlat
enter
mov
add
xchg
pop
jmp
or
push
push
mov
push
call
push
jmp
cli
push
loopne
xor
call
add
ds
push
daa
jg
xchg
pop
int3
jno
leave
dec
jle
or
cmp
push
test
addb
pop
ret
popa
xor
xor
fsubrp
orb
add
jae
jmp
inc
mov
ffreep
das
pop
pop
adc
dec
cmp
fbld
nop
xor
push
push
into
add
fidivl
jge
mov
gs
fisttps
cmp
dec
dec
dec
pop
outsl
ret
add
fidivrl
std
xor
push
push
jno
loopne
and
mov
add
movsb
in
nop
mov
js
cmp
fucomi
mov
mov
sub
imul
popa
or
sarb
sbb
cld
movsb
ljmp
push
addr16
jne
bound
testl
out
push
test
pusha
push
sub
fmull
mov
push
push
add
pusha
xchg
and
and
cmp
mov
sti
pop
xchg
mov
mov
sahf
push
jp
dec
mov
cmp
imul
rorb
push
dec
jmp
test
mov
lea
cmp
xchg
cltd
cmpb
xor
adc
ret
fucomip
xor
mov
adc
jnp
lret
es
jp
ret
nop
jmp
push
cmp
add
cmp
or
jmp
call
pop
gs
fisubl
insb
ret
andl
mov
jle
or
push
mov
adc
pusha
push
ret
cli
adc
rcrb
push
daa
fdiv
sarb
sahf
and
sub
and
addr16
add
adc
adcl
and
dec
or
sub
xor
repnz
faddl
repz
testb
jno
jle
aad
shlb
or
pusha
add
sbb
ret
clc
ljmp
fs
lahf
call
data16
mov
jecxz
not
add
push
mov
jmp
mulb
dec
scas
int
das
cmpsb
and
jmp
in
sbb
sub
inc
aam
sub
loop
out
ds
movsl
add
mov
stc
mov
loopne
cmp
repz
es
jno
pop
dec
jo
adc
push
pop
out
inc
repz
jmp
mov
jno
ja
sub
xchg
inc
lahf
add
mov
mov
out
out
mov
pop
push
push
push
ljmp
test
fs
sub
jno
cwtl
add
add
sub
xor
jg
adc
nop
and
notl
and
sub
cmp
sub
nop
in
fmull
test
push
jne
push
jo
pop
pop
jle
adc
pop
pop
jmp
out
adc
test
dec
jns
mov
adc
mov
ljmp
mov
add
rclb
inc
add
divb
outsb
data16
je
and
xchg
dec
add
push
orb
popa
xor
sub
push
and
repnz
lds
xor
dec
jnp
hlt
js
xor
inc
roll
mov
sbb
jmp
setbe
adc
lock
pop
push
shrb
dec
fists
cmp
inc
dec
ret
sbb
sub
sub
repz
xor
fstpt
jl
adc
scas
les
call
cmp
sbb
repz
push
cmpl
pop
not
push
mov
xor
mov
outsl
or
iret
neg
push
hlt
js
mov
cmp
mov
fwait
push
add
jp
pop
jmp
cmp
fiaddl
pop
mov
adc
mul
jecxz
aam
pusha
mov
out
adc
loope
int
jo
inc
jno
pop
and
in
rcll
add
xor
mov
cmpsl
inc
dec
shlb
xor
lds
stos
jns
adc
mov
je
sub
xchg
shll
rcll
jmp
mov
call
into
dec
xchg
cli
pop
dec
filds
shll
lret
pop
add
in
or
mov
xchg
and
mov
mov
add
into
push
cli
imul
mov
outsb
mov
xchg
jmp
fucomp
sub
nop
add
enter
rolb
sub
add
sub
cmp
pop
cs
jno
and
les
fs
loop
sub
pop
dec
movsl
pop
stos
cmp
adc
sarb
pop
xor
in
pop
push
iret
loopne
push
inc
cmp
gs
or
inc
out
push
cmp
pop
add
xchg
pop
pop
cwtl
pop
dec
data16
sub
rcr
in
arpl
adc
popf
pop
push
push
mov
and
orb
in
dec
pop
jnp
pop
jno
test
rol
shlb
add
icebp
lahf
or
inc
clc
stos
cld
jnp
xor
arpl
shr
and
orl
push
inc
jmp
inc
fildll
subb
xchg
pop
jns
loope
mul
pop
mov
sub
jno
leave
test
jo
dec
lds
or
jo
sbbl
pop
jmp
adc
jg
mov
or
incl
clc
pop
xchg
inc
xor
jp
push
enter
and
int3
push
adc
dec
adc
test
inc
or
and
sti
pop
jge
cmpsb
dec
je
jmp
pop
les
xor
xor
push
pop
adc
in
int
dec
push
jo
sub
mov
pusha
pop
pop
pop
cli
sbb
push
or
xchg
enter
shlb
out
jmp
mov
adc
mov
fstl
in
repnz
loope
push
mov
xor
cmp
bound
cld
add
hlt
out
mov
push
sbb
xor
stos
loopne
lret
rcr
in
scas
hlt
or
xor
inc
sub
dec
jmp
ja
sub
adc
ljmp
adc
aaa
jns
pop
pop
mov
or
adc
ljmp
lods
popf
addr16
out
call
mov
arpl
or
movsb
dec
sub
xchg
push
aad
mov
or
xchg
or
aad
addr16
push
dec
lret
inc
pop
add
rcrb
push
mov
dec
add
push
xor
fucomip
cmc
ljmp
push
lcall
std
bound
cs
inc
inc
rcrb
adc
sti
ud0
pop
and
push
jno
jg
inc
ljmp
adc
enter
bound
mov
aam
sbb
sbb
pop
aad
fucompp
jmp
or
adc
mov
fisttpl
je
xor
out
push
out
dec
or
scas
cmp
cs
and
pushl
mov
push
pop
fstpl
dec
or
inc
not
leave
ret
jl
jecxz
je
mov
in
subb
mov
cmpsl
stos
cld
xchg
mov
mov
decb
scas
cmp
cmp
dec
adc
xlat
inc
sarl
sbb
adc
adc
ljmp
add
xor
or
enter
cmp
imul
fcompl
lods
inc
mov
jne
dec
shrl
sub
pop
cli
mov
jne
mov
dec
test
shl
dec
push
out
jns
push
mov
xlat
mov
push
xorb
adc
pusha
mov
or
jecxz
inc
lea
pop
pop
inc
dec
inc
jecxz
dec
pop
jae
or
inc
pop
add
sub
sti
in
sub
cmpsb
pop
pop
pop
mov
bound
add
xorb
jg
jle
das
jle
sbb
cld
push
dec
xlat
nop
or
xor
and
int3
pop
stos
mov
dec
dec
mov
xor
subb
lods
or
into
nop
jns
addr16
rorl
pop
lock
enter
test
push
mov
mov
sbb
jecxz
aas
sub
mov
ret
inc
push
adc
fadds
push
jno
push
pop
push
into
push
or
popa
adc
sbb
inc
cwtl
add
or
jmp
pop
sbb
add
test
mov
ret
fs
xor
xlat
jae
mov
xlat
push
cmp
inc
cmp
fsubs
not
inc
and
nop
add
xchg
es
sub
fistl
add
mov
xchg
add
pop
sub
xlat
insl
mov
pop
push
cmpsl
pop
in
je
mov
mov
mov
je
sbb
fnstenv
add
out
xor
push
outsl
lret
dec
and
outsl
pop
jg
js
and
pop
jb
add
or
sub
xor
adc
dec
stos
sub
and
xor
fists
mov
ljmp
jae
daa
mov
add
jl
js
add
add
repz
jle
ret
pop
push
mov
nop
cmp
mov
lahf
push
in
in
test
xchg
sbb
adc
jmp
or
mov
sub
jle
add
std
pop
aad
inc
cli
jnp
sub
mov
jns
imul
out
mov
filds
mov
shrb
push
mov
pop
sub
add
cmp
arpl
in
sub
leave
pusha
imul
into
dec
cmp
mov
notb
mov
scas
xchg
mov
pop
or
adc
jp
adc
mov
bound
and
aaa
or
xor
push
das
ret
sarl
or
addr16
arpl
pusha
je
inc
aas
pop
aaa
and
sbbb
and
add
mov
popa
adc
insb
add
push
jp
aas
movsb
push
cli
scas
cmp
gs
dec
sbb
xchg
add
fmull
sub
push
xchg
jno
bound
cltd
inc
add
sbb
mov
jmp
inc
pop
icebp
or
stos
cltd
xor
inc
jae
cmc
sti
inc
data16
pop
pop
data16
ret
ljmp
stos
mov
and
mov
adc
jns
cmc
stc
lds
pop
iret
jp
xor
mov
xchg
popa
aaa
movsl
pop
shlb
mov
sub
aas
lods
rorb
std
sub
bound
or
pusha
jbe
jns
jo
neg
push
rcr
fsubr
mov
incl
lret
gs
jecxz
push
lock
cs
sti
or
dec
or
out
pop
add
push
test
movsb
sbb
ds
dec
dec
rcr
sbbl
das
jmp
pusha
mov
pop
shlb
add
adc
jecxz
out
jnp
lock
pop
pop
xor
and
push
cmp
or
data16
xchg
bound
jmp
pushl
imul
push
push
inc
jmp
add
sti
push
push
push
cmp
aam
fnstenv
xor
xorb
xor
jno
lret
dec
inc
dec
ret
adc
xchg
daa
xorb
cmp
aas
aad
adc
adc
and
pop
or
sarl
add
cmp
es
cmp
pop
cmp
pop
mov
adc
pop
stos
cmpsb
mov
dec
jmp
jecxz
xlat
repz
das
mov
adc
or
or
shr
hlt
loope
orl
movb
or
or
in
pop
sub
orb
or
adc
cmp
mov
push
xchg
test
dec
arpl
test
or
xchg
in
sub
ja
dec
fdivrl
and
arpl
lock
data16
adcb
add
iret
or
notb
lret
jb
dec
stc
sbb
rolb
js
xor
enter
pop
and
add
mov
push
xchg
adc
adc
jl
lock
pop
sub
sub
pop
add
and
outsb
inc
mov
bound
pop
cwtl
mov
and
fnstsw
imul
and
add
neg
jo
inc
addb
mov
jb
stc
std
sbb
lahf
push
addr16
addr16
pop
add
icebp
loope
lds
nop
sbb
pop
add
loop
neg
dec
push
or
das
nop
cmpsb
push
mov
into
lods
pop
cmp
sub
inc
pop
push
sarl
data16
pop
cmp
xor
in
scas
and
pop
repz
pop
idivl
ficoms
xlat
mov
int3
xor
xchg
imul
xor
subl
inc
mov
cmp
clc
mov
loopne
sub
out
in
cmp
rcrb
insl
sub
cli
xor
add
inc
cs
sbb
dec
and
rcrl
or
adc
push
adc
es
das
jmp
push
cmp
mov
mov
repz
inc
jmp
sub
pop
lahf
pushf
mov
add
jae
daa
xor
sub
arpl
sbb
mov
iret
jg
lock
sub
lods
mov
and
adc
pop
mov
ret
movsl
sub
mov
cs
pusha
push
mov
mov
lcall
or
ja
jg
popf
bound
or
pop
pop
mov
cmc
ret
stc
lcall
jae
jbe
push
push
in
cld
dec
or
push
aad
push
mov
and
jo
push
cli
movsb
push
insb
inc
xchg
into
pop
das
mov
pop
push
mov
imul
jbe
sahf
push
pop
pop
int3
js
xor
rolb
popf
or
jne
mov
mov
pusha
jge
xor
cld
or
pop
sub
imul
sbb
stc
popf
out
mov
sbb
sub
sub
enter
pop
dec
fsubrs
or
bound
jae
dec
sub
aaa
mov
add
jmp
dec
xor
mov
mov
mov
js
mov
xchg
xlat
jno
pop
jmp
mov
arpl
xor
adc
out
jne
adc
ljmp
mov
pop
xchg
pop
subb
sub
popf
push
test
add
pop
mov
adcb
test
bound
adcl
les
pop
cli
mov
dec
in
adc
or
popa
push
nop
lods
push
jge
dec
test
ret
call
nop
loope
mov
insb
paddq
fs
sub
mov
repnz
rorb
sub
pop
ss
fisttpll
inc
adc
movb
or
push
and
push
jmp
ljmp
imul
add
push
daa
push
xchg
je
jg
add
test
sbb
jnp
dec
mov
push
nop
dec
sub
icebp
subl
mov
xor
stos
push
inc
out
cmp
int3
bound
pushf
dec
pop
iret
pop
shl
imul
jge
js
add
shr
and
jmp
and
mov
pop
ljmp
loope
sub
mov
and
in
xchg
pop
loopne
sub
xchg
or
pop
push
pusha
sub
cmp
vrcpss
into
outsb
ja
lret
push
mov
int
push
ljmp
lret
pusha
cwtl
ja
push
cwtl
lea
js
mov
mov
out
aas
push
mov
rcll
adc
in
sbb
mov
mov
insb
mov
mov
jns
icebp
sbb
push
dec
or
push
pushf
mov
pop
ja
mov
jmp
xor
push
push
inc
jge
mov
push
mov
push
inc
xchg
popf
inc
popa
jg
cmp
sub
leave
daa
pop
mov
fucomi
fcompl
mov
jnp
sub
dec
pop
stc
xor
ret
les
adc
jne
dec
inc
adc
movb
jb
mov
adc
inc
adc
inc
mov
pushf
mov
lds
sti
ja
xor
push
jg
mov
imul
jbe
pop
jmp
lock
and
ds
mov
push
daa
jl
js
cmp
jge
lret
ljmp
les
test
iret
stc
dec
movsl
add
jne
sbb
in
jp
push
roll
mov
mov
jmp
push
mov
mov
add
mov
sub
mov
iret
push
lods
and
imul
xchg
jecxz
sub
cli
inc
gs
jne
loope
ds
and
sarb
js
jmp
inc
fists
gs
sub
sub
sub
fsubrs
pop
jmp
push
jmp
push
das
inc
or
pop
sbb
jmp
push
push
push
outsb
mov
pop
mov
mov
sar
imul
cwtl
fwait
pushf
mov
cld
xchg
xchg
mov
es
cmp
cltd
push
idivb
inc
mov
sub
shll
flds
hlt
cmp
push
jmp
shrb
adc
xor
or
sbb
cli
dec
orb
and
bound
pop
dec
fcomps
cmp
pop
dec
jmp
push
pop
mov
aam
sti
cld
cmp
add
xor
sbb
in
arpl
push
lock
mov
inc
pushf
js
add
mov
pop
das
cwtl
push
mov
push
push
sub
push
loopne
jge
xor
mov
leave
imul
pop
and
and
jne
adc
dec
stos
add
pop
out
and
ret
xchg
dec
daa
int
jmp
or
lea
jge
loope
jno
xor
dec
aad
mov
sub
test
lahf
mov
dec
roll
jge
jmp
ljmp
push
and
adc
pop
adc
inc
push
dec
or
enter
lahf
and
or
xchg
fstl
pusha
cmpl
rolb
cmp
mov
into
dec
ret
push
out
mov
add
adc
sub
div
pop
pop
lahf
ret
push
clc
iret
pop
rol
push
outsl
xor
scas
dec
stc
add
arpl
fsts
add
push
in
pop
arpl
imul
adc
add
mov
or
push
rolb
mov
jno
push
in
mov
pop
xchg
shrl
xchg
mov
call
xchg
mov
test
ret
add
mov
mov
push
jl
mov
add
mov
pop
add
mov
pop
push
popl
movsl
or
mov
push
push
das
mov
out
xchg
dec
out
cs
sub
std
xchg
icebp
ret
loope
push
inc
mull
popf
jge
cmp
cltd
mov
pop
push
sub
or
add
push
mov
mov
cmpsb
bound
stc
mov
test
loop
push
xor
ret
leave
cli
mov
les
inc
pop
push
push
and
popf
push
in
aaa
or
gs
hlt
sahf
in
movsl
sbb
or
mov
lahf
sub
push
and
in
shl
out
dec
add
add
inc
mov
sub
mov
sub
push
push
cmp
add
daa
bound
pop
movsb
out
jne
xchg
jb
cmp
les
add
push
mov
les
pop
mov
mov
push
popa
xchg
repnz
sbb
not
sahf
ficoml
ja
dec
adc
js
jg
scas
xor
sbb
lret
push
mov
shrl
sub
fstps
rolb
jbe
pop
aam
sub
inc
lret
insb
pusha
lret
cwtl
cs
push
shl
add
inc
mov
dec
fsubr
lret
lret
xchg
sub
popf
cmp
pop
sub
outsb
sahf
mov
ja
out
mov
shr
jmp
push
nop
mov
out
ret
aas
adc
imul
gs
into
adc
xor
stc
add
mov
fisubl
push
cmp
inc
insb
imul
jl
pop
jb
mov
sbb
mov
and
jmp
repnz
jno
mov
out
mov
jl
mov
cmp
jne
test
mov
mov
jge
dec
lods
or
dec
outsl
loope
add
jle
cmp
add
xlat
or
ja
xor
nop
xchg
jo
dec
adc
cmp
nop
loop
inc
dec
pop
add
jp
adc
dec
inc
out
mov
and
aas
sub
mov
sti
xorl
dec
lds
call
movsl
cmc
lahf
xchg
mov
pop
pusha
push
add
jnp
xor
xor
jmp
scas
sub
not
inc
sbb
daa
pop
call
xchg
outsb
xor
pop
add
push
sub
jecxz
add
pop
sarb
xchg
lock
and
sbb
inc
test
sub
push
pop
jge
push
jmp
adcb
push
pop
out
testb
xor
sub
js
por
jb
xchg
jmp
andl
lds
mov
sub
das
ljmp
add
mov
mov
pop
shlb
xchg
push
adc
ljmp
fwait
sbb
jecxz
and
je
or
jle
mov
arpl
je
sbb
add
xor
mov
movsb
inc
cwtl
dec
or
mov
nop
ret
jns
inc
div
push
xchg
adc
out
inc
dec
sbb
out
adc
das
pop
push
sarl
ret
xchg
push
lret
call
call
mov
mov
xor
mov
mov
jmp
jns
dec
sub
fists
jg
pop
push
lock
mov
dec
adc
in
mov
jge
mov
std
call
push
insb
push
cmpsl
inc
xchg
adc
jl
inc
bound
push
jle,pn
jecxz
push
mov
movsl
pop
pop
xchg
jge
jmp
xchg
push
dec
xor
pop
rorl
stos
xchg
pusha
lea
jbe
mov
je
pop
mov
imul
repz
sbb
push
mov
and
pop
dec
mov
out
js
mov
ljmp
sbb
jle
or
mov
mov
ret
rolb
push
js
jmp
pop
lds
jle
mov
aad
inc
mov
pop
push
dec
mov
mov
orb
or
push
dec
movsl
std
and
xor
or
inc
jmp
sub
cs
sub
sti
rclb
dec
pmaxsw
divl
leave
in
xchg
sbb
test
or
adc
inc
and
push
pop
or
pop
push
add
pushf
jns
dec
add
add
fs
cmpsl
jecxz
push
mov
aam
dec
push
inc
sub
add
lea
sub
dec
inc
inc
push
jmp
pushf
mov
cmp
lds
mov
mov
loope
std
or
inc
hlt
icebp
add
sbb
or
sub
xchg
imulb
mov
mov
iret
inc
ljmp
leave
ja
jl
lods
std
int3
xchg
pop
xchg
inc
test
jne
sub
pop
xchg
pushl
outsb
je
push
gs
pop
lods
sub
adc
adc
outsb
push
xchg
test
aad
clc
scas
sub
xchg
or
push
mov
push
adc
push
mull
push
icebp
daa
pop
leave
pop
xor
test
push
popf
loop
jg
loope
rclb
dec
addl
aad
xor
cmp
jo
inc
aam
mov
add
cmp
loope
or
push
dec
inc
mov
lcall
push
sub
jns
or
xor
add
and
les
sub
shr
stos
pop
jle
mov
into
pop
test
popa
inc
sub
cmp
ret
pop
rcll
mov
xchg
andb
mov
sub
ljmpw
push
add
add
loopne
out
ja
cmc
mov
std
repnz
xor
call
loope
das
mov
sub
js
dec
mov
push
inc
cmpsb
cmp
scas
cmp
dec
int
push
add
enter
daa
jns
and
sbb
in
outsl
cwtl
dec
jmp
ret
pop
test
arpl
pusha
ret
push
arpl
movsl
jmp
adc
mov
sub
dec
add
cmp
add
inc
scas
cmp
fimull
dec
out
add
mov
jmp
xchg
jns
add
jp
pop
je
sub
add
jbe
inc
inc
cltd
jo
pop
sbb
sub
xchg
and
dec
pop
mov
stc
lcall
ja
and
cmp
dec
jae
lret
fists
scas
sbb
jmp
mov
inc
xchg
sbb
adc
lock
and
orl
inc
jbe
push
imul
or
jg
mov
xchg
inc
xchg
das
jl
mov
cmp
push
pop
ret
dec
shr
loopne,pn
mov
out
push
test
rcrb
fsubr
push
test
loope
in
ficoml
std
dec
jne
jno
mov
cmp
dec
dec
dec
sbb
pop
rorb
stos
in
adc
jo
stc
push
and
add
scas
xchg
ds
cmp
cmpsl
add
cld
mov
stos
cwtl
das
inc
and
add
mov
add
fs
dec
pop
pop
mov
jmp
sub
sahf
ret
adc
rorb
aaa
sbb
int
inc
mov
or
xor
fcomps
loope
jmp
or
mov
xchg
jne
cwtl
mov
and
pop
cwtl
add
cmp
dec
adc
inc
mov
adc
lret
dec
idivb
xlat
scas
das
add
cli
adc
inc
out
or
or
jbe
xor
and
sub
dec
cmp
dec
jae
push
mov
pop
shl
fstl
sbb
mov
dec
imul
dec
pop
rcr
inc
jmp
out
in
mov
push
push
or
sbb
fiadds
pop
mov
push
push
pop
sbb
inc
inc
loop
and
or
push
movsl
sti
inc
das
add
pop
pusha
fwait
push
dec
push
cmc
push
imul
xor
mov
add
loopne
sbb
sub
ficomps
cs
jmp
push
cwtl
sub
jns
mov
hlt
xchg
jo
or
pop
daa
dec
inc
mov
scas
push
imul
or
sbb
lock
jns
divl
push
jmp
push
js
mov
add
divps
orb
push
xchg
lcall
xchg
pop
pop
jne
lods
mov
mov
and
cmpb
sub
xchg
push
inc
addb
add
add
addb
fildll
scas
inc
cmp
push
jne
lds
mov
jbe
cmp
or
sub
add
adc
shlb
push
and
push
add
jmp
daa
jmp
mov
lock
repz
add
or
leave
add
out
jb
jno
push
lods
pop
xor
dec
xchg
cwtl
dec
pop
popf
xlat
mov
out
pusha
adc
push
and
das
int
outsb
push
push
sbb
sub
rol
cmp
call
jbe
sti
or
test
sub
in
jmp
aam
inc
fdivs
fsubr
mov
add
push
rcll
jmp
mov
adcb
loopne
scas
add
jbe
sub
adc
jmp
push
fsubs
push
sub
dec
adc
jnp
add
sub
add
push
ds
jg
jo
lcall
dec
jns
dec
xchg
aad
imul
push
rcll
jmp
mov
jp
xchg
jp
or
negb
mov
or
pop
pop
out
add
push
push
psubsw
push
pushf
std
xchg
add
movsb
jge
push
and
xchg
out
dec
push
sbb
jmp
mov
dec
jecxz
or
pop
push
jg
mov
jmp
mov
push
push
xchg
cmp
pop
cmp
dec
adc
dec
cwtl
xor
dec
jmp
stos
adc
rcll
les
aas
mov
outsb
pop
scas
sti
push
push
ror
out
imul
jl
pop
sub
test
setne
dec
mov
push
add
add
fs
outsb
add
rcrl
xchg
out
gs
add
xor
dec
das
jmp
sti
js
inc
pop
scas
mov
aad
mov
sar
aad
lds
movsb
ljmp
pop
int
daa
pop
cmp
pop
icebp
repz
test
dec
mov
pop
mov
pushf
xchg
outsl
pop
aad
add
mov
lcall
add
mov
loope
icebp
clc
sub
mov
popf
je
inc
inc
pop
aam
inc
add
insb
pushl
pop
jmp
cli
push
ret
xor
jmp
shlb
shl
or
or
les
jp
pop
rorl
bound
or
xlat
add
test
dec
out
arpl
ss
add
shll
idivb
or
mov
mov
sub
push
add
xchg
fdivrl
add
xchg
mov
loope
and
inc
sub
lret
mov
icebp
jp
xor
sti
dec
outsb
in
add
insl
and
scas
xchg
xor
and
jmp
scas
add
sbb
movsl
cmp
adc
mov
js
inc
cmp
daa
adc
and
jns
sbb
rcr
rcll
imulb
addb
ss
out
xor
push
dec
lahf
pop
sbb
subb
pop
pop
mov
add
stc
push
pop
gs
inc
mov
push
fcompl
aad
inc
dec
pushf
dec
sub
and
adc
shlb
mov
fmulp
mull
xor
mov
lock
xor
test
pushf
addr16
mov
xor
push
push
test
sub
stc
iret
clc
pop
jb
lahf
fsubrs
adc
sub
xor
or
mov
jmp
jno
lds
hlt
aaa
jno
mov
xchg
adc
test
cmp
lret
test
fists
mov
jno
out
add
sti
sub
jno
pusha
mov
xor
call
mov
addb
jg
xor
rcrl
inc
cmp
inc
add
stos
neg
adc
loope
out
mov
or
repz
mov
aad
xchg
out
mov
out
andl
repnz
sub
js
stos
jo
mov
jns
rorb
cmp
mov
pop
push
sub
cmp
xlat
jne
jbe
clc
push
sbb
and
or
xor
mov
push
mov
inc
out
test
pop
add
movsl
add
mov
xlat
sub
out
scas
dec
popa
or
cmpsl
cmp
cld
outsb
mov
push
or
sub
mov
sub
xchg
lds
popa
inc
imul
ja
add
sub
mov
inc
clc
dec
icebp
cmc
cmpsl
jl
lret
test
xor
jmp
push
shlb
cs
mov
cmp
fbld
pop
dec
int
orl
imul
xor
sub
lret
xor
outsl
mov
mov
sub
rcrl
add
pusha
icebp
jo
mov
aas
inc
and
cmp
jp
out
popf
pop
inc
iret
or
sub
not
mov
sub
jo
dec
in
xchg
mov
sbb
fdivl
ret
jnp
jp
hlt
addl
add
in
daa
sub
cmp
xor
lds
or
rolb
addl
popa
fiadds
addr16
sbb
popf
fs
pop
push
ds
cmp
orb
imul
lahf
jb
sub
and
shr
or
and
adc
add
sub
pop
add
cmpsl
stc
nop
or
lea
lahf
cmp
mov
or
sub
sub
mov
sub
xchg
out
or
rcll
ret
faddl
gs
rolb
jmp
jmp
popa
shrb
add
push
mov
mov
movsl
dec
mov
insl
xor
mov
int3
pop
popf
popa
js
jle
scas
dec
xchg
orb
pop
int3
in
push
imul
stos
arpl
nop
gs
add
push
cs
push
or
or
xchg
push
xor
jb
mov
jmp
je
sub
in
mov
jecxz
sub
loope
push
dec
push
cmp
pop
cwtl
hlt
pop
lds
dec
cmpb
and
or
jp
xor
sub
jns
jnp
dec
push
data16
pop
inc
gs
fmuls
mov
and
popf
sub
lcall
pop
jbe
decb
xor
shlb
cmp
mov
adc
imul
sar
xchg
pop
jmp
add
xchg
push
lret
ret
mov
dec
test
pop
out
jge
pusha
lret
loopne
pop
add
ret
xchg
push
jmp
xchg
add
pop
lea
inc
into
mov
sbb
ds
or
mov
mov
adc
or
sbb
outsb
push
cmp
je
or
add
push
add
movsb
cmp
add
sbb
scas
arpl
sub
cli
jmp
sub
stc
jno
dec
jmp
cmc
clc
jp
add
mov
imul
cmp
repz
lret
pusha
cli
repnz
loopne
pop
loope
das
add
or
shr
mov
negl
test
mov
adc
mov
mov
dec
and
inc
data16
out
mov
xchg
nop
xor
sbb
fs
ds
mov
xlat
push
call
pushl
mov
cmpsl
ds
xor
pop
pop
pop
stc
loope
jmp
dec
bound
mov
push
jp
cmp
sar
ret
jmp
pop
or
inc
sbb
mov
addr16
adcb
push
sbbl
stos
mov
xor
mov
or
sub
add
pop
add
lret
cmp
jp
push
loopne
or
outsb
jnp
sbb
jne
iret
mov
pusha
or
outsb
push
cltd
and
into
sub
clc
or
test
js
add
pop
jmp
pusha
cmpsb
dec
or
adc
pop
rorb
sub
test
stos
gs
incb
sub
in
inc
das
shr
jbe
mov
or
xchg
xchg
inc
mov
xchg
shll
pop
push
js
xor
cmp
xchg
mov
push
orl
mov
or
loop
push
loop
mov
pop
cmpsl
mov
and
pop
fst
test
cwtl
or
cmp
add
push
imul
jmp
mov
pop
cmc
adc
shl
xchg
pusha
xor
push
add
dec
cld
out
or
adc
pop
pop
out
push
mov
mov
xor
mov
dec
lret
addr16
and
jl
dec
push
cmp
push
xlat
pop
repz
das
jbe
idiv
jle
mov
push
ret
add
mov
sbb
dec
bnd
push
idivl
dec
scas
fdivrl
dec
inc
clc
arpl
mov
shl
push
or
sub
decb
je
loopne
jo
daa
lock
testl
pop
ficomps
pop
sbb
or
es
cmc
pop
and
ljmp
cli
std
fs
lock
inc
and
sbb
sbb
call
popa
add
xchg
insl
loopne
adc
sbb
imul
lods
inc
cmpsl
pop
sub
data16
pop
sub
aaa
ret
lock
xchg
jne
ret
inc
lods
sub
scas
or
test
gs
dec
sti
cwtl
movsl
add
pop
dec
mov
mov
inc
popf
pop
dec
aas
andb
jmp
pop
dec
and
clc
pop
jns
sbb
mov
xchg
aaa
adc
aam
mov
or
call
loope
call
add
mov
sub
mov
es
xor
js
jns
dec
jge
lods
imul
inc
stc
icebp
adc
push
and
shll
fcomps
nop
sub
ja
pop
jae
jg
btrl
mov
loope,pt
and
sbb
cmpsl
jbe
gs
adc
add
rclb
xchg
jmp
not
mov
mov
inc
push
fsubrl
push
movsb
mov
sub
adc
jno
inc
mov
mov
mov
xchg
not
sti
test
sub
cmc
push
mov
jne
pop
lret
add
hlt
sbb
adc
sub
lock
push
pop
in
and
outsb
lret
lcall
popa
push
insl
or
jmp
mov
shr
jmp
pop
fists
jmp
ret
cli
push
mov
pop
ljmp
lret
or
mov
dec
sbb
imul
mov
mov
sub
mov
mov
neg
add
jp
xlat
adc
xchg
rorl
stc
pop
shrl
notl
loop
nop
dec
jne,pt
or
test
ficomps
in
mov
mov
sbb
testb
aam
mov
mov
mov
cmp
sub
or
pop
push
push
fcomip
lret
or
jmp
jb
sysret
or
pop
xchg
sub
xchg
push
adc
sub
mov
pop
push
or
call
ja,pt
push
test
aas
dec
movb
clc
test
xor
loope
pop
sub
test
aas
pusha
aam
sbb
push
nop
pop
inc
testb
and
ds
mov
lahf
repnz
dec
std
fidivrl
cld
mov
lahf
push
push
pop
xchg
daa
js
into
rolb
in
push
lock
pop
xchg
test
lahf
push
xor
mov
cmp
xchg
mov
xor
popf
inc
les
fiadds
mov
inc
fs
fldl
xchg
jns
pop
sub
dec
pop
mov
sub
mov
call
les
add
push
lcall
jg
sti
and
sub
data16
filds
jecxz
mov
or
and
lods
shlb
fcmovb
sbb
dec
adc
push
rorl
inc
movsl
pop
push
sub
insb
xchg
dec
cli
lret
gs
sbbb
add
add
xchg
repz
test
mov
call
mov
lods
popf
imul
cmp
add
movsb
xlat
and
sbb
shlb
xor
push
fmuls
jecxz,pn
adc
add
lea
inc
nop
add
in
je
jmp
aam
loop
daa
add
sbb
jmp
jmp
mov
xchg
and
mov
xchg
mov
fnstcw
pop
adcb
push
scas
pop
add
xor
mov
cmp
push
mov
addb
xchg
jg
sub
push
pop
sub
shrb
outsb
test
dec
popa
push
push
jmp
pusha
mov
imul
xor
rclb
or
lds
test
pcmpeqd
stos
pusha
imul
pop
push
jmp
insb
shll
ret
out
pop
push
push
xor
sub
scas
repz
push
pop
es
rol
sbb
fdiv
roll
inc
add
inc
dec
gs
pop
dec
mov
je
sar
int3
sub
add
xorl
rcrl
sub
ljmp
xor
je
incl
cmpsl
sub
rorb
sub
xor
cmp
adc
fcoms
call
call
jle
push
pushf
bound
orb
push
jmp
sbb
jp
jl
or
jnp
repnz
inc
inc
adc
sub
filds
and
stc
std
push
fsts
jnp
push
pop
in
and
push
loope
jno
daa
das
movb
into
push
lock
fucomip
or
scas
cmpsb
pop
pop
and
hlt
mov
out
aad
sti
enter
and
je
aam
pop
push
int
loope
rcr
pop
jo
lcall
jmp
rol
mov
fadds
xchg
xor
rorl
aas
loop
ror
or
add
push
pop
sub
lock
pop
cmp
stos
cmpb
push
dec
xor
inc
addr16
pop
mov
or
pop
insl
mov
push
mov
xor
popf
imul
or
pop
pop
sahf
or
clc
inc
jmp
jb
xor
or
mov
or
mov
mov
push
pop
push
jp
and
and
subb
shr
add
push
pop
ret
mov
or
cmp
pop
jmp
fstl
pop
das
test
mov
cmc
cmpl
pop
xchg
test
cmc
mov
dec
adc
pop
std
push
movsl
push
mov
test
imul
dec
fs
pop
ret
dec
xchg
pusha
and
adc
inc
call
sbb
sbb
fistl
sub
cmpb
adc
cwtl
roll
idivb
xchg
xor
mov
dec
fcoml
fucomp
inc
pop
lock
mov
or
mov
add
sub
sbb
aas
adcb
adc
xlat
stc
push
inc
fnstcw
paddb
int3
call
cwtl
sbb
call
inc
xor
inc
xor
push
lahf
or
adc
dec
mov
mov
mov
push
pushf
pop
push
lea
sbb
mov
nop
orb
push
push
clc
and
add
dec
ret
cmpb
out
push
adc
daa
mov
xlat
xor
fwait
sub
mov
jo
shl
imulw
sub
inc
out
lods
push
repz
adc
add
test
iret
mov
add
addl
push
out
pop
fcoms
rcll
xor
cmc
lret
add
pushf
mov
pop
out
push
inc
mov
mov
inc
adc
mov
dec
jmp
aas
ret
lret
jg
stos
arpl
dec
push
or
dec
int3
pop
and
pop
stc
add
cmp
jg
fsubrl
push
jb
pop
add
mov
mov
movsb
fsubl
repnz
and
ljmp
jl
add
pop
shrl
or
sub
aad
sahf
daa
add
out
inc
pop
cld
cmp
js
pop
jo
jg
lret
pushf
xchg
mov
lcall
mov
dec
or
add
push
mov
adc
jmp
cltd
mov
pop
out
sarb
pop
ljmp
dec
lcall
mov
xchg
adc
jp
dec
fldl2e
pop
mov
inc
xor
mov
aam
sahf
shr
test
xchg
push
inc
sub
fs
ror
xor
test
or
push
sbb
lahf
inc
and
xor
loope
dec
lock
push
insb
call
incl
addl
add
out
incb
dec
sbb
xorl
aad
lock
cmp
pop
push
inc
adc
mov
and
inc
or
sub
push
sbb
cmpl
int
or
or
or
dec
mov
shll
out
loope
rcr
sahf
mov
lea
mov
je
mov
push
cmp
clc
ljmp
xor
adc
arpl
aaa
xchg
add
dec
jmp
push
inc
enter
cmp
inc
xor
jb
std
out
add
mov
ljmp
inc
push
pop
pop
cmp
lahf
insb
add
inc
xchg
inc
and
nop
icebp
cmp
inc
push
not
mov
and
ja
call
inc
push
ret
adc
int
ljmp
iret
xchg
pop
loopne
lods
push
andl
push
xchg
xorb
jne
and
shr
pop
or
mov
outsb
adc
adc
aas
mov
push
pop
gs
cli
sub
add
cmc
pop
ljmp
add
clc
lods
add
ljmp
and
fsubrp
in
dec
divb
lds
js
lods
loopne
push
repnz
cmc
push
xor
push
in
idivl
xor
adc
inc
dec
insl
dec
stos
sub
push
pop
pop
jmp
dec
xor
aas
lret
adc
sub
xor
xchg
sub
add
movb
sti
push
ja
loop
add
sbb
jp
incl
xchg
add
and
pop
add
cmp
add
xor
loop
ljmp
mov
and
ret
pop
stc
xchg
dec
nop
cltd
fbld
lcall
or
mov
mov
xlat
fisttpll
push
cmp
adc
add
push
pop
ret
push
sbb
xchg
xchg
adc
into
add
xchg
daa
mov
rclb
mov
cmp
jmp
or
pop
xlat
popa
pop
cmp
inc
icebp
sub
pop
mov
and
inc
mov
sub
mov
in
cmp
ss
mov
sbb
push
add
dec
insb
inc
jg
ret
mov
test
push
jae
inc
jmp
jecxz
sbb
mov
leave
mov
adc
pop
int
mov
std
xchg
int3
and
xor
in
cmp
fstl
mov
insl
pop
loope
js
pusha
outsl
and
repnz
jg
xchg
sbb
dec
mov
jbe
dec
mov
or
xor
pop
jl
popf
xor
sub
sub
adc
aad
out
clc
mov
idivl
xor
out
icebp
in
add
push
icebp
inc
dec
pop
lods
imul
jge
jns
ja
dec
add
inc
lahf
and
push
shlb
cmc
push
subb
imul
push
cmp
xchg
mov
sub
jmp
out
mov
inc
das
fwait
dec
rcrl
and
or
dec
push
xchg
xchg
or
scas
xor
cs
xchg
jbe
loopne
mov
fwait
or
hlt
add
xor
arpl
or
lahf
xorl
push
scas
pop
mov
and
es
xor
add
nop
in
das
and
cmp
mov
int
or
mov
out
negl
dec
stos
aaa
mov
mov
xor
out
add
cmc
sbb
sbb
jo
add
adc
mov
out
sub
call
lods
jp,pt
dec
sub
movsb
dec
add
js
add
notl
js
in
shrl
mulb
mov
shlb
push
sub
sub
xchg
fisttpll
push
or
andb
sub
mov
cmpsb
and
mov
lods
inc
jbe
push
dec
jae
imul
mov
pop
mov
ffreep
daa
inc
sbb
out
sarb
pminub
mov
push
stc
mov
or
aad
mov
loopne
xor
orl
add
loope
popa
mov
mov
lea
arpl
lock
dec
pusha
stc
shl
push
repnz
inc
push
push
push
fbld
add
xor
lret
stos
pop
ja
sbb
lea
sub
stos
icebp
mov
pop
inc
mov
cmpsl
popa
xchg
inc
and
outsl
in
aam
test
adc
iret
daa
pop
frstor
pop
pop
shlb
pop
push
int3
cmpsb
xchg
cmp
shrb
cld
or
das
aas
mov
push
adc
sbb
dec
int3
int
push
hlt
inc
sub
pop
push
shlb
or
push
jmp
xor
cmp
xor
ret
test
mov
jno
push
sub
loop
pushf
ss
mov
pop
mov
aad
daa
push
addl
push
add
jne
out
xchg
imul
pop
fisttps
dec
pop
cmp
inc
mov
push
arpl
movsb
stos
popa
inc
outsb
add
add
add
pop
push
lds
jg
out
shrl
xlat
adc
mov
rcrb
mov
mov
and
pop
push
loope
jmp
jmp
inc
shr
jg
out
or
sub
pop
test
dec
out
dec
mov
mov
clc
pop
out
adc
rcll
mov
addl
or
pop
jno
arpl
jmp
outsl
fsubrs
push
adcl
mov
fstps
mov
jbe
pop
inc
lock
jmp
mov
nop
cmp
inc
cwtl
and
scas
out
adc
popa
inc
shlb
adc
es
jg
fimuls
fldt
fisttpll
mov
test
or
cmp
pop
pop
push
and
test
xlat
divb
sub
stos
push
inc
add
or
add
ja
fnstcw
inc
movb
pop
je
or
xor
adc
mov
es
xchg
fistl
push
push
daa
jmp
jo
outsl
push
das
mul
pop
jg
dec
mov
sti
pop
xor
pusha
mov
orl
cmp
enter
pop
lock
or
cmp
mov
cmp
xchg
aas
cwtl
xchg
inc
inc
ljmp
and
out
nop
cld
jmp
xor
sub
dec
sub
pusha
sub
mov
xchg
je
push
sbb
cmp
ret
sarb
or
push
or
adc
ljmp
pop
pushf
sbb
and
jg
arpl
pop
sbb
cmp
jb
add
mov
out
push
push
icebp
popa
xor
jl,pt
pusha
sub
cmp
pop
ljmp
dec
pop
or
popa
sbbb
loopne
jnp
push
push
adc
cmp
dec
sbb
xor
xor
mov
push
cld
icebp
pop
push
mov
add
test
mov
lret
add
mov
mov
call
sub
lds
dec
sti
fcoml
push
in
adc
aad
dec
push
js
pop
sti
cmp
add
jmp
fnstsw
aaa
sbb
jmp
cli
test
mov
add
and
negb
out
out
lret
loop
pop
inc
fs
outsb
fucomi
imul
and
decl
mov
aas
add
daa
and
push
pop
push
es
roll
sti
mov
mov
sbb
gs
inc
adc
arpl
mov
imul
dec
pop
daa
cmp
or
dec
jno
push
jmp
cmpb
dec
jne
lock
inc
and
popf
pop
adc
popf
addb
lahf
push
iret
fiadds
adc
jmp
push
push
dec
push
mov
or
push
std
xchg
xor
add
mov
outsb
or
xor
bound
dec
cmc
sbb
movsl
inc
add
xchg
lods
psubq
cmp
out
aas
das
sub
jp
testl
rcll
add
outsb
mov
push
jle
cmc
fisubrs
adc
nop
dec
and
cmc
pop
jb
je
loopne
xor
push
sahf
inc
ret
pop
mov
push
imul
out
add
xchg
flds
mov
mov
add
cmp
jl
jmp
sbb
sbb
xlat
sub
cmp
pop
and
push
inc
add
add
push
push
not
xor
add
cli
dec
pop
push
mov
jge
pop
scas
push
insb
jl
push
cli
add
jg
fs
or
sysexit
int3
js
loop
jmp
jbe
aas
add
es
add
mov
push
int3
rcrl
and
mov
in
jle
add
inc
sbb
push
js
pushf
inc
xchg
dec
sub
adc
pop
push
ss
mov
or
test
pop
sub
enter
adc
call
pushf
leave
addb
xorb
pop
ss
imul
cmpsb
ficoml
loopne
out
xchg
jae
xchg
mov
pop
or
jne
ljmp
cmpsb
jbe
daa
sub
sub
filds
xchg
ret
ret
sbb
fnstenv
fistpl
dec
sub
jge
add
adc
xor
push
inc
jbe
cmp
push
mov
sub
xchg
mov
xor
cmpsb
push
aad
arpl
inc
inc
mov
mov
push
xor
ret
jno
jmp
and
aad
sbb
and
adc
xchg
aaa
cwtl
sub
out
pop
lret
repnz
nop
das
fcmovnb
fists
insl
iret
pop
dec
fcoms
xor
mov
sub
pop
sbb
mov
enter
into
jmp
sbb
stc
xor
fwait
adc
sub
pop
jmp
dec
ret
shl
add
das
pop
lods
and
enter
mov
inc
add
aas
loope
out
mov
pusha
repnz
or
sbb
movsb
and
xchg
enter
push
or
stos
sub
push
data16
pop
std
das
sbb
or
pop
inc
pop
pop
daa
push
test
and
shll
imul
and
orb
lret
pop
push
std
call
mov
jns
imul
icebp
xchg
data16
jne
cmp
scas
out
add
rcll
add
push
ja
pop
fdivrs
into
popa
into
push
nop
add
jmp
cmpsl
jl
lods
sar
push
push
add
imul
cwtl
cmpsl
lahf
mov
cmc
push
mov
ljmp
jmp
add
pop
movsb
xor
pop
adc
in
mov
jne
outsb
mov
fisubs
pop
dec
fisubl
or
cmp
mov
movsb
xchg
lock
pop
push
dec
xchg
add
and
xchg
push
pop
inc
dec
adc
scas
into
inc
push
sbb
pop
insl
popf
pop
xor
rolb
incb
add
mov
xor
out
adc
pusha
iret
mov
pop
or
jb
repnz
pop
clc
cltd
shl
int3
add
xchg
inc
add
jmp
popa
push
rol
les
and
mov
adc
ljmp
fnstcw
mov
xor
fstl
ja
mov
xor
cld
and
sub
push
cltd
sbb
shll
popa
dec
andl
repnz
imul
jmp
insl
add
or
out
mov
ds
cli
cmp
pusha
or
loope
and
jno
cmpsb
fsubp
add
xor
cli
push
dec
mov
sub
sub
jle
iret
cmp
mov
shl
es
push
lahf
pop
aas
dec
add
xor
sub
sbb
add
push
add
dec
aad
aad
mov
mov
cmp
enter
cs
test
push
xchg
sub
and
pop
lock
andl
mov
fistl
sub
push
mov
loope
mov
jg
pushw
subl
stos
mov
outsb
test
mov
shrl
fs
push
add
mov
js
sbb
repnz
xchg
and
xchg
jo
sub
cs
dec
add
pop
or
fwait
add
outsb
add
xchg
inc
mov
enter
xchg
mov
xor
ds
mov
cmpsb
push
ss
or
bound
call
nop
dec
mov
in
inc
fdiv
mov
and
cmp
sahf
or
cmpsl
push
push
cmp
jl
out
mov
lods
mov
shl
mov
or
mov
push
mov
lret
xchg
out
adc
not
jecxz
fnstenv
push
and
and
popa
sbb
jnp
cli
loopne
pop
mov
mov
arpl
das
mov
pop
jmp
aad
push
sub
leave
fdivp
bound
lds
mov
pop
cmp
sbbl
mov
std
push
mov
not
push
pop
mov
sbbb
jl
jo
in
adc
pusha
mov
test
clc
nop
add
add
or
add
mov
sub
adc
adc
xor
or
lds
adc
push
sub
pop
and
addb
mov
loop
adc
push
mov
int
add
add
shll
add
dec
mov
jnp
mov
add
mov
nop
xchg
xchg
adc
cmp
xor
push
jnp
imul
add
fnsave
fadds
nop
push
pop
dec
jmp
pop
push
test
sub
arpl
imul
add
cmp
adc
cli
xchg
pop
jmp
daa
xlat
inc
jo
jg
ljmp
jmp
sub
add
dec
adc
xchg
add
sti
and
and
jmp
cmp
xchg
jbe
jne
or
arpl
xor
and
nop
jl
jge
xchg
inc
xor
loope
imul
pop
in
sti
add
icebp
pop
lcall
popf
sub
bound
test
mov
sbb
loop
push
mov
jg
js
mov
jae
xchg
push
sub
push
sbb
cmpsl
mov
push
pop
xor
ret
lods
aaa
or
inc
ficoms
push
dec
lret
enter
mov
das
mov
mov
mov
movsl
add
test
sarl
xor
mov
xchg
sbb
jnp
in
out
shl
push
aas
or
sub
orb
pop
pop
es
mov
add
and
test
pop
js
jb
mov
into
jl
aas
sub
mov
push
pop
jecxz
add
and
fdivrl
ret
push
jl
inc
sub
cwtl
mov
sub
mul
test
or
int3
data16
xor
test
mov
rcr
pop
stc
pop
push
stos
jge
inc
push
fwait
std
inc
xor
in
pop
out
bound
cmc
or
imul
push
dec
mov
pop
addl
call
adc
push
xor
jae
pop
inc
jmp
jmp
mov
daa
mov
je
pop
add
sub
shlb
sbb
subb
add
ret
pop
shlb
jecxz
or
mov
addl
daa
int3
add
adc
push
push
out
shr
out
ja
or
sbbl
mov
jecxz
xchg
mov
mov
xorb
sub
cmp
jl
ljmp
sub
cld
lret
xchg
dec
dec
sub
scas
cld
mov
jl
mov
push
ret
jmp
rep
sbb
or
xor
xor
cmp
push
aaa
cld
ret
loop
ja
add
sbb
jne
push
xor
stc
dec
out
pop
daa
enter
add
dec
cmp
mov
or
or
pop
hlt
sbbb
sub
cld
xchg
sub
das
ror
cmp
push
dec
test
add
aam
pop
sub
daa
mov
andb
sbb
outsb
popf
orb
lret
ja
push
push
mov
cmpsb
daa
lds
xor
dec
push
inc
xchg
mov
js
mov
rcr
push
sub
cmp
or
dec
inc
and
or
adc
add
pop
in
mov
push
add
jle
jg
pop
sti
and
stos
shll
dec
loopne
or
and
shll
hlt
adcb
add
inc
scas
mov
pushf
push
loopnew
sbb
xlat
jmp
popa
out
mov
shl
dec
stc
mov
test
stos
mov
mov
and
sbb
cmpsb
leave
data16
pop
outsl
xor
jl
sub
divl
push
xchg
push
or
int3
mov
push
aam
mov
sub
pop
xchg
xchg
inc
or
sub
cmc
sahf
movsl
incb
and
add
fdivrl
js
daa
lret
fdivs
cld
push
pop
dec
test
sub
push
js
push
mov
xor
dec
repz
fcmovnbe
andl
call
and
mov
mov
cmp
call
stc
lock
pop
das
inc
inc
and
add
push
stos
jns
cs
stos
mov
xor
sbb
not
or
jmp
xor
mov
loope
idivb
repz
adc
adc
push
mov
mov
movsl
cmc
stos
inc
fldpi
xchg
jmp
cmp
sub
cmp
idiv
sub
movsl
test
test
and
sbb
repz
arpl
cs
leave
push
cld
scas
test
ljmp
mov
jae
leave
fdivs
xor
int3
cmp
dec
add
sahf
lret
es
testl
not
mov
pop
xchg
inc
or
in
outsl
les
pop
mov
fs
add
sub
sbb
idivl
sbbb
test
or
cs
mov
mov
subl
cwtl
pop
mov
add
enter
dec
pop
scas
and
repz
and
push
dec
sbb
es
pop
xor
andl
shrl
xchg
cmc
inc
jge
dec
sbb
inc
add
clc
xor
xchg
or
incb
add
fisubs
push
push
hlt
adc
or
inc
push
imul
loopne
xchg
dec
pop
stos
call
cmp
or
lock
jne
shlb
in
jle
scas
imul
call
rcrb
sub
push
hlt
dec
pusha
scas
test
add
pop
jmp
push
mov
add
in
add
pop
pop
rolb
fcom
pop
xor
mov
repz
das
push
sbbl
xor
inc
cwtl
shlb
add
not
shr
adcb
mov
jge
popa
cs
push
jmp
popl
addl
inc
mov
sub
sub
into
pop
mov
adc
loope
xchg
dec
ret
loop
sbb
add
das
test
xchg
sbb
ja
jecxz
adc
and
jo
mov
xor
lcall
xor
or
pop
adc
inc
lods
push
mov
frstor
xchg
push
out
xchg
stos
mov
xor
clc
adc
and
push
xchg
testl
push
dec
add
inc
push
or
add
push
daa
in
and
inc
jno
dec
adc
das
cmp
xchg
lahf
aam
pop
mov
roll
push
push
adc
mov
add
xor
dec
or
test
test
or
testb
sbb
les
fdivrl
push
fildl
mov
test
fsts
pop
mov
xlat
sahf
aas
cmp
jecxz
call
in
xor
dec
addl
add
jge
pop
add
data16
pop
lcall
jmp
xor
in
dec
add
adc
into
outsb
out
xacquire
shr
add
inc
adc
fsubrl
daa
sub
cmpsl
out
jg
or
je
popf
fcoml
xchg
pop
dec
or
sub
push
inc
in
in
inc
inc
or
mov
pop
leave
push
add
cli
test
and
pop
mov
xor
scas
ficoms
or
sub
pop
mov
mov
les
out
ljmp
outsl
adc
sti
lock
dec
rcrb
mov
pusha
std
push
xchg
sti
fildl
add
decl
fistps
es
or
pop
inc
mov
arpl
cwtl
jo
fbstp
mov
sbb
push
push
mov
pusha
sti
dec
sbb
dec
or
push
sub
incl
push
mov
shr
dec
cmc
mov
inc
ss
mov
mov
add
in
or
dec
xlat
int
pushl
stos
sub
mov
cmp
daa
sbb
aad
movsb
call
cmc
xor
and
lahf
fsubl
icebp
subb
out
and
xchg
pop
sbb
push
jo
xor
jae
cwtl
insb
mov
mov
popf
dec
or
pop
sbb
push
enter
negl
es
mov
mov
adc
adc
addb
mov
adc
in
mov
cmp
xchg
mov
xor
shrb
rcl
and
mov
dec
scas
fldenv
movsb
pop
mov
jp
push
popf
jmp
and
lahf
rol
addb
inc
les
pop
jne
lcall
jecxz
fld
xchg
sub
shl
sti
mov
clc
mov
jbe
dec
sahf
out
gs
lods
cwtl
pop
mov
dec
mov
xchg
mov
xlat
or
xchg
jmp
add
cmp
loop
bound
push
jb
push
xor
xor
mov
and
cmp
dec
push
popa
insl
jb
fists
jp
ja
mov
and
icebp
mov
jmp
mov
jmp
mov
sbb
mov
mov
lahf
cmc
mov
xor
mov
dec
enter
push
cwtl
cmp
mov
jno
add
mov
lock
cld
add
sbb
or
sub
add
rolb
mov
ss
adcl
std
mov
xchg
or
incb
int
mov
mov
enter
jg
insl
dec
pop
bound
xor
fs
xor
pop
movb
mov
call
shlb
cld
dec
and
lock
jmp
daa
movsl
clc
or
jmp
daa
lock
sarb
lea
popf
cmp
adc
jmp
jg
add
push
mov
insb
xor
stos
dec
xor
push
add
dec
xor
out
inc
fdivrl
inc
and
jae
rclb
aam
out
imul
jg
inc
lret
icebp
sub
cmpsb
cmp
testl
subb
mov
adc
xchg
andl
out
jl
jmp
in
test
and
daa
negl
push
cmp
jo
imul
mov
mov
rcr
ret
fisttps
add
add
nop
jbe
or
push
outsl
sahf
jmp
dec
cmp
dec
push
mov
pop
or
jb
sbbb
loope
sbb
imul
jo
fildl
les
nop
divps
push
pop
cli
xchg
mov
sti
lock
xchg
aam
mov
cli
repz
jno
mov
jae
push
jmp
dec
and
sbb
pop
or
push
pop
push
rcll
sti
adc
mov
pusha
cmp
aas
in
aas
loope
adc
int3
je
int3
push
xor
push
in
jae
inc
lods
push
sub
dec
jp
lret
dec
cmp
jo
mov
mov
ljmp
mov
ret
aam
mov
push
dec
add
xor
adc
sar
jae
inc
enter
test
add
daa
adc
mov
les
test
or
add
adc
out
pop
mov
or
adc
add
not
ret
sbb
mov
push
and
jmp
adc
cmp
push
adc
xchg
add
pop
dec
test
jle
stc
add
jmp
shrl
sub
mov
push
mov
or
pop
sbb
int3
in
jmp
pop
xor
shll
xchg
or
adc
inc
ja
and
popw
mov
stos
pop
jecxz
or
push
sbbb
or
and
jns
insl
push
xor
xchg
test
andl
cwtl
push
mov
test
hlt
dec
imul
daa
mov
mov
mov
push
jbe
or
adcl
xor
lds
inc
popf
jae
add
fdivrs
inc
out
mov
and
in
popaw
lea
jns
cmp
mov
fisttps
xor
loopne
pop
adcb
pop
and
clc
push
pop
add
or
in
inc
lock
cmpsl
fnstsw
mov
sub
nop
sarb
cltd
xor
pop
add
rclb
add
loope
inc
inc
popf
jle
mov
add
mov
pop
mov
sbb
popa
jmp
sub
jge
xor
cwtl
call
stc
shll
add
scas
clc
push
push
pop
scas
lods
push
push
cmp
mov
mov
das
in
pushf
lods
jmp
leave
ja
and
pop
add
repz
dec
mov
add
jmp
mov
jnp
addr16
push
dec
mov
movsb
mov
aas
jns
or
ret
mov
repnz
add
cmp
xchg
pop
mov
sub
mov
inc
cmp
sub
sbb
das
shl
pop
add
pop
add
daa
sub
cld
call
pop
pop
push
push
mov
daa
out
jle
clc
mov
jmp
dec
cmp
das
aad
adc
push
jb
pop
mov
push
shrb
dec
xor
xchg
push
add
xor
inc
popf
adc
outsb
or
push
or
xlat
mov
mov
xchg
out
dec
push
std
jbe
dec
lret
adc
test
lret
adc
xchg
dec
faddl
mov
jmp
mov
jmp
push
lods
ret
push
cmc
push
cmpsl
push
or
dec
push
mov
sub
test
sub
add
xchg
mov
pushf
sub
sbb
jge
adc
pop
pop
fidivrs
mov
mov
mov
cmpsl
push
sbb
pop
aad
jne
jmp
jo
es
pop
cwtl
sahf
dec
repz
add
fstpt
cmp
push
pop
push
dec
insb
sub
jmp
nop
mov
xchg
leave
call
scas
sub
pop
in
movsl
sbb
ret
addl
bound
repz
scas
push
fdivl
not
xor
sub
pop
popa
or
dec
or
sub
mov
iret
mov
std
jo
hlt
flds
mov
in
add
xchg
jne
dec
lods
ljmp
and
fisubl
mov
sar
push
sub
jmp
das
shlb
push
push
or
int3
rcr
add
push
shl
push
push
xchg
jb
imulb
pop
cwtl
shlb
mov
test
imul
incl
xchg
xor
aad
or
clc
pusha
jp
or
or
sub
xchg
decl
mov
dec
int
dec
hlt
add
inc
fiaddl
out
mov
mov
sub
jmp
lods
push
sbb
loopne
jnp
jmp
add
push
lcall
pop
mov
dec
push
mov
xor
test
mov
add
aam
in
ret
das
rclb
popf
inc
sub
and
and
jle
xor
sub
movsb
pop
outsl
add
ficoms
xor
mov
dec
shl
jmp
nop
sbb
arpl
pop
daa
dec
or
iret
xchg
and
call
mov
jmp
ret
or
mov
push
cmpsl
outsb
fiaddl
or
fidivs
adc
gs
pop
xor
andb
icebp
fmuls
loop
fists
addb
gs
cmc
dec
pusha
and
cmp
or
mov
pop
xor
cmp
sub
mov
mov
mov
lock
outsb
add
mov
ficoml
add
push
and
adc
dec
sub
int
sti
mov
das
out
pusha
add
push
push
jmp
adc
std
aas
or
pop
sub
jl
outsb
mov
mov
icebp
sti
jle
icebp
dec
int3
lea
jmp
adc
aas
cmc
pop
sti
sub
pop
push
inc
lods
mov
mov
push
mov
cld
cmc
clc
pop
cli
pop
dec
movsb
shll
jne
dec
dec
imul
push
xor
mov
cmp
std
jmp
in
adc
cmp
jmp
add
dec
jne
dec
inc
pop
sbb
mov
das
push
jle
leave
aad
es
inc
push
in
mov
add
stos
cmp
and
lcall
pop
push
push
push
clc
cltd
popa
and
cmp
push
pop
pop
cli
pop
ror
or
sub
faddl
adc
or
repnz
jmp
mov
movsl
xlat
cs
fs
out
cld
scas
insb
ds
ret
push
movsb
lret
jnp
mov
jecxz
and
fildll
cmp
jp
ljmp
dec
jmp
clc
dec
pusha
pop
xchg
mov
cmpl
clc
lahf
dec
cld
dec
mov
push
jg
push
jg
mov
jmp
lds
sub
mov
leave
push
push
add
jno
fs
pusha
sub
andb
dec
cmp
adc
push
and
push
add
shl
and
inc
mov
std
jo
push
aam
rcll
push
xchg
jbe
push
or
jmp
xchg
sub
outsb
and
pop
mov
and
sub
add
mov
jg
sbb
sbb
push
inc
mov
loop
cmp
xchg
jle
mov
std
scas
mov
dec
xor
ret
push
aad
xchg
sub
daa
jle
jno
sub
dec
and
test
pop
std
mov
cmpsb
cmp
xchg
mov
fistpl
scas
add
add
pop
cmp
add
adc
test
ss
dec
mov
lret
fnop
pop
stc
shrl
jle
mov
ja
icebp
push
inc
sub
xchg
push
fiaddl
aaa
adc
add
out
sub
push
test
ja
call
aas
push
leave
add
and
cld
aam
cmpsb
mov
fs
shrl
hlt
sub
loope
je
jne
xor
dec
dec
in
xlat
shll
inc
pop
sbb
xchg
push
lcall
xor
shr
or
je
out
add
jmp
xor
push
pop
push
and
jno
pop
sub
or
insl
add
scas
lods
movl
push
push
ss
mov
pop
pop
daa
mov
fstl
mov
and
push
push
ds
out
scas
jmp
shlb
xchg
bound
add
pop
xchg
sbb
pop
inc
jecxz
lcall
fldcw
mov
cmp
scas
push
js
fsubs
flds
out
ret
xor
push
sub
mov
push
sbb
sub
ret
pop
mov
sub
out
add
sub
loop
push
push
xchg
jo
pop
cld
mov
js
add
sbb
insl
xor
fs
sub
push
sub
add
xchg
jo
jle
cmpb
add
add
mov
pusha
jo
sarb
cmp
lret
sahf
sub
cmp
adc
or
jo
sub
sti
jg
jmp
sub
scas
or
bound
jne
mov
or
mov
std
xor
sub
xchg
icebp
xchg
pop
out
add
adc
popa
ja
mov
lret
jle
and
push
pusha
push
fbld
xlat
sbb
insl
insb
add
sbb
repnz
pop
pop
mov
cmpl
out
sub
cmp
sub
int3
test
ret
mov
mov
mov
lods
aaa
xchg
and
pop
add
adc
mov
das
pusha
dec
mov
sub
jmp
cmove
stc
push
xchg
adc
adc
out
lock
and
dec
push
adc
subl
dec
pop
and
rclb
or
ljmp
add
jbe
and
in
jno
adc
cmp
fld
push
add
mov
sbb
dec
xor
sbbb
pop
jbe
aas
jae
jmp
xchg
dec
hlt
movsb
icebp
dec
xchg
daa
jle
out
and
inc
daa
mov
dec
sbb
push
xchg
xchg
repz
in
add
adc
or
movsl
pop
push
xchg
test
jp
orb
test
sub
sub
sbb
jno
push
dec
push
decl
imul
in
mov
or
loopne
arpl
stos
pop
addr16
filds
sbb
mov
in
inc
mov
outsb
aas
pop
ja
rclb
or
jle
leave
mov
mov
call
xor
inc
xor
mov
int3
rcrb
je
or
jne
cli
imul
dec
icebp
or
xchg
jno
clc
test
aam
push
jmp
testb
sub
mov
out
test
ja
dec
adc
push
jp
xor
sahf
jo
test
and
push
clc
dec
cmpsl
loop
sbb
add
sbb
mov
or
pop
xor
aaa
cmp
jmp
std
neg
mov
cmovg
inc
out
push
dec
pop
dec
or
sub
es
psllw
lahf
pop
in
inc
xor
jg
frstor
or
cmp
add
and
push
add
and
sbb
jo
outsb
xchg
in
shlb
fs
jmp
add
cmp
je
roll
mov
das
mov
decb
call
add
adc
out
inc
fisttps
xchg
stc
std
sub
add
mov
je
sub
jmp
not
xorb
es
stos
add
out
xor
sar
out
sub
lods
xchg
or
inc
lcall
sub
pop
mov
sbb
jmp
int
out
int
int3
adc
punpcklbw
push
mov
add
vandpd
rcll
jno
filds
mov
xchg
into
sti
xchg
cmp
in
cmc
cwtl
fisttpl
shll
cmp
mov
or
sub
jmp
ret
mov
cli
adc
adc
mov
dec
adc
nop
test
dec
ljmp
lods
add
push
repz
ja
xchg
jne
nop
jmp
in
push
jbe
mov
cmp
test
fimull
mov
adc
pop
mov
sahf
and
int
or
sarb
push
in
psrlw
jnp
jl
int
cli
pop
or
fnsave
xchg
push
push
adcb
or
cmp
pusha
mov
push
jmp
jne
insl
xchg
insb
dec
or
or
fs
pusha
xchg
mov
add
xchg
ds
fdiv
fstps
cld
push
jne
or
sbb
jg
fidivrs
sub
pop
out
lret
jmp
in
jmp
add
mov
jg
inc
and
cli
mov
xlat
sbb
nop
xor
dec
inc
shr
push
mov
pcmpgtw
mov
rorl
cmpb
xor
push
mov
push
dec
call
pusha
add
add
inc
xchg
pop
repz
or
ds
cs
sub
in
dec
rcl
adc
add
sub
mov
xor
add
mov
int
cld
mulb
mov
lret
pusha
and
or
xor
pusha
aad
pop
mov
and
mov
das
ss
sarl
dec
daa
in
or
ljmp
fsubrs
lock
cs
or
add
cmc
add
jp
push
pop
addl
jge
dec
insl
into
pusha
xor
divl
cld
inc
xchg
testl
data16
push
dec
pop
push
mov
fwait
lahf
repz
xchg
or
idivl
lods
pop
mov
and
cmp
push
adc
lret
dec
data16
mulb
mov
add
sarb
sub
rcl
inc
or
or
leave
and
pop
scas
dec
add
push
add
inc
sub
xor
sahf
push
push
jmp
cmp
fstpt
jb
sub
fidivl
pop
mov
dec
daa
lds
cmpsb
xchg
mov
mov
add
sti
and
add
call
jo
cmp
pop
ret
push
dec
test
cwtl
stos
lods
pop
or
inc
incl
insb
xor
and
repnz
push
fs
pop
jmp
mov
filds
fidivrl
mov
test
mov
stos
sub
and
push
je
pop
test
push
xlat
negl
mov
lret
cld
je
or
mov
mov
or
imul
stos
cltd
insb
aas
adc
sbb
je
push
pop
and
jecxz
push
std
daa
aas
data16
nop
push
add
push
add
mov
xchg
push
or
xor
popfw
rolb
jns
mov
add
insb
dec
or
adc
daa
or
and
sbb
sub
sbb
or
push
pop
clc
cld
sub
ds
stc
add
or
repnz
pop
ret
pop
adc
jmp
xchg
pop
mov
int
pop
adc
daa
sbb
leave
xchg
mov
push
pop
add
outsb
and
adc
repz
adc
mov
push
popf
sbbb
xchg
or
mov
jo
add
push
jmp
cs
jne
mov
push
mov
out
lock
in
add
xor
cmpsb
inc
sub
add
pop
btr
pop
mov
in
or
xchg
sbb
rorb
addr16
add
aas
loope
es
dec
and
and
mov
mov
xchg
and
or
cmp
dec
cmpsb
mov
jmp
add
cmp
mov
push
into
pusha
mov
fsubs
or
mov
dec
ss
mov
push
jmp
xor
push
dec
lret
dec
xor
ret
push
idivb
pusha
in
add
cwtl
xchg
clc
add
loope
divl
mov
push
mov
mov
and
mov
stos
mov
jae
sbb
mov
mulb
adc
inc
movsl
mov
inc
sbb
pop
xor
pop
add
data16
psrad
mov
push
bound
outsl
cli
xchg
sahf
popf
push
or
jp
jmp
popa
rolb
xor
imul
das
adc
dec
mov
out
add
popa
lock
in
xchg
push
jo
popa
xor
add
adc
shrl
outsl
pusha
lret
pop
fildll
add
mov
mov
test
mov
jmp
dec
xchg
push
push
jmp
add
stos
dec
cli
push
dec
sbb
sbbl
in
mov
mov
jbe
daa
imulb
sbb
jmp
jno
loope
mov
das
repnz
dec
inc
roll
aas
push
pop
push
dec
sub
add
movsl
xchg
or
cltd
cwtl
in
add
imul
inc
fbld
and
pop
xlat
rcl
movsl
ffreep
mov
jmp
or
mov
inc
pop
sti
fsubrs
aad
outsl
pusha
lea
scas
jle
xor
pop
mov
outsb
xor
jo
or
lods
das
out
push
sbb
daa
mov
std
fimull
nop
lret
or
ja
inc
daa
testb
xor
in
inc
or
xor
aas
fs
sbb
jno
mov
push
adc
pop
lcall
fistps
adc
pop
shrb
push
mov
pop
pop
into
mov
dec
jmp
std
inc
jns
jl
daa
xchg
sbb
pop
adc
jb
sarb
and
mov
inc
sbb
adc
fdivrl
push
lds
scas
sbb
out
fistl
fwait
jno
negb
inc
cli
bound
push
repnz
cmpsb
add
pop
imul
ds
adc
xlat
xchg
add
dec
pop
shll
jbe
fldl
sub
mov
mov
sub
pop
and
lret
pop
add
xchg
pop
cmp
clc
sarl
pop
dec
das
lahf
push
aam
mov
add
push
mov
add
out
cmp
xor
or
pop
pop
loop
leave
lds
jmp
iret
popa
xor
pusha
lahf
add
loop
lds
or
pop
int3
mov
jge
adcl
mov
lea
jo
lahf
aam
rcrb
and
add
push
mov
out
add
sbb
xlat
push
mov
xor
mov
inc
inc
sti
lea
cmp
ja
leave
or
add
push
sti
daa
js
or
adc
insb
or
sbb
and
add
das
sub
fs
jns
das
ja
stc
xchg
push
push
sbb
mov
push
fstpl
lods
and
popa
bound
lock
jmp
inc
aas
hlt
inc
add
push
jmp
mov
incl
mov
sub
test
jecxz
and
mov
xor
mov
jmp
adc
andl
pop
sbb
or
jp
adc
mov
mov
jl
push
push
jmp
jns
mov
xor
pop
icebp
fs
inc
dec
out
dec
xor
or
outsl
sub
or
adc
pop
addb
dec
mov
pop
and
lahf
mov
jmp
pop
push
stos
mov
add
cmp
adc
ds
or
mov
andnpd
pop
sbb
pop
pop
shr
sbb
push
sbb
cmpsl
aas
push
inc
sub
mov
addr16
je
xor
lret
sub
mov
in
inc
jp
inc
pop
add
fisubrl
pop
and
test
sub
lret
fs
mov
cs
pusha
stos
outsb
pusha
xor
lock
sub
scas
xor
fsubrl
fstl
stc
push
jmp
sbb
dec
mov
movsl
xor
adc
sub
shrl
out
add
out
dec
add
xchg
sti
movsl
data16
or
cld
in
mov
sbb
mov
push
mov
cmp
pushf
jmp
push
push
xor
loope
jmp
and
push
mov
lds
iret
loope
jmp
dec
pop
xor
jb
push
mov
sub
andb
push
jmp
pusha
add
pop
or
neg
mov
cld
mov
xchg
mov
popf
lock
xchg
in
add
into
jns
aas
lahf
loopne
jo
or
jmp
jne
mov
add
das
enter
push
jmp
cld
ja
mov
jg
movsb
pop
pop
mov
mov
cmc
dec
xor
pop
rcll
add
cmp
rcrb
repz
sub
std
adc
test
dec
lahf
sbb
mov
es
xor
dec
or
call
aas
cvtps2pi
pop
mov
sti
into
mov
ja
push
adc
or
push
mov
mov
daa
xchg
jle
mov
pop
mull
dec
or
sub
mov
xor
jmp
insb
xchg
decb
xor
sub
mov
pop
test
jns
fildll
jmp
nopl
cs
ja
cmp
xor
add
add
mov
sub
movl
jg
adc
push
push
stos
add
push
outsl
sub
je
ret
repnz
jecxz
mov
pop
lahf
adc
out
pop
lods
js
jle
mov
push
rolb
push
push
ret
fabs
jge
mov
in
adc
sub
sub
add
adc
xchg
enter
cwtl
sbb
dec
or
jno
cmc
xor
jmp
nop
mull
fwait
xlat
mov
sbb
and
push
push
push
mov
sub
ja
call
cli
push
popa
test
push
jecxz
add
pop
xchg
shrb
sbb
pop
or
inc
push
repz
mov
lahf
popa
or
and
pop
pop
or
or
add
pop
mov
pop
lods
mov
cmp
jl
cwtl
dec
or
test
sbbb
jl
xchg
pop
mov
into
sbb
jbe
repz
push
inc
mov
cmp
in
mov
pop
jo
add
andnps
dec
mov
adc
push
cld
out
or
dec
repz
movl
pop
loop
aad
mov
popf
push
pushf
in
popf
adc
pop
mov
jl
sbb
inc
pop
aas
std
mov
je
xor
outsl
out
pop
ret
xor
add
aam
stos
repz
sbb
nop
lods
out
aas
pop
aaa
test
add
jg
inc
dec
add
in
ficomps
in
mov
shr
out
and
fwait
pop
add
or
cmpsl
out
mov
test
jnp
scas
rclb
dec
xchg
push
fists
sahf
int
test
adc
mov
add
or
clc
push
add
dec
mov
repz
cli
push
shlb
cmpsb
add
pop
cli
jmp
enter
sbb
push
jne
sub
pop
shr
ss
adc
ss
add
add
in
data16
inc
pop
aad
test
aam
sbb
fnstenv
push
cwtl
and
jo
sysenter
adc
arpl
into
and
or
add
inc
cmpsb
xor
fldt
mov
adc
xor
adcb
in
add
xchg
cmp
sub
imul
jl
and
sub
push
mov
push
out
add
int3
mov
push
adc
xor
or
jl
pop
js
pop
adc
aas
sbbl
mov
mov
xchg
popa
orb
orl
xor
loopne
hlt
mov
pop
cmp
push
jl
pusha
fcompl
fucom
mov
cmpsb
inc
lahf
addb
xchg
jge
push
out
and
lods
aad
add
loop
add
xor
jle
adcb
jns
loope
push
gs
aaa
stos
hlt
sub
mov
pusha
pop
sbb
push
mov
int
clc
arpl
or
repz
mov
fldt
cmpsl
call
jmp
mov
dec
test
and
mov
hlt
cld
fisubl
rolb
into
push
add
pop
shlb
jge
xor
cmp
sub
jne
dec
pop
stos
fadds
push
adc
insb
pop
xchg
jnp
push
pop
sbb
mov
addps
jecxz
aam
sbb
std
push
xlat
jae
das
nop
dec
jmp
lds
mov
sub
clc
xor
jmp
adc
mov
push
inc
insl
jb
push
adcb
or
jmp
add
jo
lret
or
jge
jl
and
out
mov
movsb
dec
ja
adc
or
lcall
std
and
mov
xchg
sbb
xor
or
ljmp
loopne
add
out
pushw
mov
sub
pop
xchg
mov
popa
xor
hlt
sub
call
dec
fimull
lret
push
pop
or
insl
sub
dec
mov
dec
xchg
sub
cmp
add
nop
dec
ret
mov
dec
jmp
ss
or
into
ud0
loope
gs
inc
cmp
shrb
xchg
push
loope
movsb
imul
pushf
dec
lret
add
jmp
xchg
negl
rcrl
fstl
jae
mov
sub
mov
cmp
mov
push
mov
push
pop
dec
push
or
adc
mov
lods
shl
jbe
add
and
cmp
es
push
mov
and
sub
ljmp
jmp
jmp
out
mov
jmp
outsb
and
pusha
mov
jne
ljmp
dec
jg
or
adcl
xor
pushf
dec
mov
scas
mov
mov
jge
stos
les
sbb
dec
adc
je
inc
ret
loopne
cmc
lahf
or
mov
xor
ror
jmp
ja
ret
addr16
jmp
push
test
nop
lods
and
cltd
dec
sub
loopne
pop
mull
loopne
xor
adc
pop
aam
add
jmp
or
ret
lock
dec
lds
enter
add
dec
mov
ja
inc
xor
sub
push
sar
jge
lods
push
icebp
or
negb
out
mov
pop
sub
adc
or
cwtl
sbb
dec
push
mov
and
adc
or
or
xor
sbb
mov
add
mov
dec
dec
dec
jp
xlat
cmp
mov
or
icebp
mulb
pop
mov
ret
addb
sahf
cwtl
dec
push
icebp
push
adc
fs
mov
stos
mov
jbe
sub
push
sbb
out
jb
dec
pop
push
xchg
pop
pop
jp
js
fldcw
add
xor
aaa
sub
add
and
xchg
mov
insb
sub
pusha
inc
clc
dec
or
mov
fcmovne
inc
inc
push
push
leave
sub
jmp
push
mov
or
cmp
fldl
lods
js
shrb
pop
iret
and
and
adc
ficoml
xchg
push
repz
sti
rclb
add
jge
jne
and
and
xchg
cld
pop
test
add
aaa
adc
out
fwait
mov
fimuls
jne
and
imul
enter
push
sub
jmp
pop
mov
ret
jmp
or
scas
pop
addb
hlt
jns
xor
das
cld
xor
add
push
sbb
ljmp
leave
aas
pop
pop
push
imull
fwait
add
jg
in
ljmp
mov
add
lret
notl
fisubs
mov
add
neg
dec
jmp
repnz
sub
fnsave
cmp
clc
jne
adc
or
and
inc
inc
add
jmp
ret
fidivl
popa
dec
repz
or
jge
loopne
cmp
mov
xchg
pop
mov
add
dec
inc
loopne
or
xchg
dec
cli
lahf
dec
xchg
nop
stc
icebp
leave
xor
xchg
icebp
push
dec
xchg
stos
sub
mov
fdivs
push
ds
out
loopne
dec
sub
ret
loopne
jp
sbb
sbb
jnp
xor
inc
xor
stos
inc
add
push
cmpsb
xlat
mov
je
jge
xchg
add
jp
add
push
push
out
sbb
inc
push
fst
das
incb
mov
xor
xlat
nop
jge
and
inc
jmp
das
cmp
in
rcrl
js
ret
jmp
sub
cld
pop
add
popf
ds
or
mov
jb
dec
mov
xchg
in
sub
push
add
mov
jecxz
test
fistpll
mov
adc
pop
sbb
add
xor
out
aas
fisttpll
stc
xor
shll
int
cld
jo
xor
cld
js
aas
sub
add
or
cmc
loope
call
js
and
mov
cld
aaa
lock
and
pop
xor
out
nop
and
cmp
pop
mov
push
sbb
dec
push
inc
ret
in
jl
test
pop
loopne
or
push
sub
addr16
xor
add
jmp
lret
sub
inc
scas
ret
imul
xor
out
mov
imul
pop
push
or
in
das
out
inc
pop
xor
mov
or
and
cli
in
rorb
lods
jno
hlt
or
mov
cmp
popl
sbb
mov
mov
sbb
aas
lods
push
sbb
and
int
cs
push
pop
dec
pop
mov
lcall
add
xor
inc
std
outsl
cwtl
test
in
or
loopne
xchg
movsb
xor
test
mov
int3
sub
fcomps
jo
test
push
xchg
mov
push
mov
mov
jl
inc
dec
loop
cmp
mov
mov
xor
in
subb
xor
cwtl
xchg
inc
add
je
and
sub
inc
rclb
pop
sarl
stos
xchg
mov
icebp
xor
jne
in
jg
jnp
sub
into
adc
ret
mov
cs
aas
iret
jns
add
adc
lea
daa
dec
mov
and
xlat
and
mov
fsubl
jl
add
cmp
pop
dec
insb
push
xchg
in
icebp
adc
out
mov
fstl
pusha
adc
or
inc
add
jle
je
xorb
mov
pop
nop
cs
mov
rorl
fsubl
mov
addl
call
xor
dec
scas
dec
rolb
inc
lods
xchg
pop
popf
aas
daa
dec
fdivs
jno
pop
test
inc
jmp
test
movsl
faddl
jmp
clc
test
sub
mov
sarl
int3
push
and
push
inc
mov
out
lods
pushf
fsubl
int
dec
pop
fs
sarb
cmp
shr
push
push
pop
mov
or
pop
je
add
cmc
jge
inc
mov
pop
outsl
mov
mov
dec
push
add
arpl
pop
stos
mov
sub
ja
in
sub
and
cs
push
js
xchg
stc
and
mov
push
mov
cmp
cld
mov
daa
jo
inc
adc
jge
sub
push
jp
fsubr
mov
and
in
and
test
imul
mov
lds
xchg
mov
mov
dec
jge
xchg
test
ljmp
mov
mov
bound
add
sbb
dec
mov
insl
xchg
xor
and
mov
aam
pop
cmp
fwait
test
xor
cmp
dec
out
fwait
orl
xchg
into
xchg
cmp
out
jo
cltd
mov
jl
pop
fistpll
cmp
xchg
mov
mov
insb
imul
sub
push
mov
jp
xchg
jmp
inc
add
lods
fs
insb
lods
orl
jmp
mov
in
xchg
sti
cmp
pop
add
push
push
mov
sar
dec
or
push
std
bound
adc
xlat
scas
repz
stc
mov
out
xchg
or
or
adc
adc
xor
mov
adc
adc
adc
adc
pop
push
and
and
and
and
and
daa
and
andb
insl
out
add
xor
out
jge
insb
icebp
in
sub
adc
and
mov
mov
shll
and
and
dec
and
push
sbb
mov
movsb
jae
aas
jmp
add
xchg
inc
add
popf
add
cmp
push
test
jo
xor
roll
add
add
dec
add
add
pop
xor
in
add
popa
test
cli
adc
xchg
push
xor
mov
adc
jne
mov
and
and
sarl
mov
xlat
or
stc
and
js
inc
add
xor
xchg
adc
mov
imul
push
loopne
cmpsb
clc
xor
and
push
xor
or
cmp
and
cmp
ja
std
xor
sahf
sbb
mov
cltd
inc
or
gs
or
call
orb
add
add
adc
mov
lcall
push
imull
insb
jp
xchg
rolb
int3
jns
sub
mov
cmp
and
jae
xor
push
int
bound
bound
adc
inc
cmp
idivl
push
lea
inc
jl
mov
clc
cmp
add
cmp
dec
xchg
pop
xchg
sbb
and
lcall
and
data16
sub
mov
test
sub
xchg
andb
cmc
and
stos
push
add
sub
cmp
jmp
mov
sbb
lret
nop
push
jmp
mov
xor
loope
sub
add
ret
push
or
add
add
or
je
pusha
xor
mov
pop
mov
enter
and
lcall
fidivs
adc
sub
in
scas
rorl
aas
mov
mov
icebp
sti
scas
testb
and
pop
jge
ret
pop
push
jmp
mov
loopne
push
mov
cs
idivl
fimull
jmp
icebp
lcall
jbe
sub
pop
divb
out
jns
push
into
push
daa
in
outsl
push
mov
push
pop
mov
loope
cwtl
xor
sbb
repnz
arpl
push
add
pop
popf
hlt
jnp
sahf
clc
sbb
jp
dec
push
sbbb
mov
push
push
sbb
icebp
push
sbb
pop
xchg
inc
and
lock
mov
outsl
sbb
cmc
das
sbbl
push
pop
fistpl
mov
push
jae
sbb
shll
pop
pop
add
ss
adc
or
inc
iret
test
push
sbb
dec
pop
add
jmp
bound
pop
in
add
add
dec
push
lock
icebp
jns
jmp
mov
enter
loopne
or
mov
pop
inc
loopne
popa
xor
add
sub
jmp
push
push
pop
loope
jbe
fstp
xor
and
inc
mov
mul
push
inc
cmp
mov
or
inc
adc
mov
cmpsb
insl
add
pop
cmp
shlb
add
ret
in
push
fcoml
and
out
or
jae
dec
pop
scas
push
sbb
aaa
add
mov
mov
jle
and
popf
push
jmp
out
into
or
or
and
push
mov
sbb
xchg
addr16
loop
xor
pop
xor
lds
lods
jmp
cmc
or
jbe
or
mov
test
popa
add
jmp
add
push
xorb
inc
aas
call
mov
ljmp
pop
out
sub
push
ds
popa
nop
psubsw
ret
andb
dec
pop
sub
pop
and
xchg
or
push
call
or
nop
ds
xchg
push
ds
pop
push
add
xor
sub
pop
shrl
cmpl
in
pop
add
add
jne
mov
sub
and
rclb
mov
fistps
adc
dec
add
adc
neg
ret
ja
std
jmp
lahf
push
and
mov
movsl
fildll
jecxz
dec
loope
mov
mov
scas
je
inc
pusha
lahf
push
in
and
dec
pop
and
sbbb
test
das
jno
das
lods
fbld
fcmovb
push
ja
jne
jnp
or
inc
and
loop
aas
and
jb
pop
dec
dec
dec
and
repz
adc
xor
or
mov
jmp
adc
jge
fwait
mov
fbld
xorb
push
sti
hlt
bound
sbb
ss
push
sbb
and
mov
jmp
mov
pop
sub
pop
testb
cli
add
sbb
mov
sub
cmp
cmp
or
push
mov
mov
ss
add
mov
mov
mov
pop
jg
in
pop
addr16
jnp
imul
jmp
hlt
ds
ficompl
inc
dec
and
scas
mov
lock
xchg
outsl
sub
loop
push
les
fisubrs
xor
mov
mov
data16
lcall
add
mov
cmp
mov
lret
imul
cmpb
or
inc
cmp
add
outsb
mov
std
sarl
jmp
jne
incl
sbb
adc
mulb
push
mov
and
cmp
mov
cmc
clc
out
dec
lods
jo
push
and
push
jmp
dec
and
mov
in
das
add
mov
mov
test
pop
hlt
fwait
push
add
test
pop
pop
aam
shr
push
stc
pop
mov
and
add
mov
xor
pusha
inc
test
and
jge
or
out
push
push
mov
jb
push
sub
pop
and
imul
out
pop
jno
and
jge
xchg
test
ret
dec
add
fisttpll
pop
jns
in
add
mov
pop
pop
jmp
push
es
lods
add
decl
fldenv
push
mov
mov
fisttpl
jecxz
inc
xor
cmp
sub
sbb
pop
enter
or
or
adcb
repz
movsl
enter
xlat
push
sbb
and
sub
and
add
add
dec
jmp
dec
push
mov
sub
rcll
pop
popf
push
ss
add
inc
andb
das
mov
pop
sub
lret
jno
push
push
or
rorb
pop
clc
xlat
pop
adc
sbb
pop
leave
jle
sub
mov
fs
popf
add
inc
xor
and
xchg
jnp
in
shll
add
je
jle
jp
mov
outsb
clc
mov
lcall
sti
test
pop
addl
cmpl
test
cmc
out
mov
adc
fisttpll
dec
mov
push
xor
rcll
lock
add
xor
pop
inc
jo
adc
in
cmc
subl
cld
popa
fidivrl
das
xchg
or
jl
sub
and
add
dec
dec
add
add
insb
add
sub
gs
mov
test
iret
ja
daa
mov
xchg
fstpl
rolb
push
dec
sub
icebp
or
inc
push
push
out
jae
add
xchg
push
and
push
push
sbb
push
lahf
jns
imul
roll
mov
lea
gs
cmp
dec
pop
pop
mov
pusha
pop
mov
inc
pop
mov
add
jns
and
sub
mov
mov
push
pop
sub
push
pop
mov
shl
jp
dec
sbb
es
lds
aas
adc
inc
jae
not
mov
mov
ds
push
or
dec
mov
out
sub
push
mov
pop
sub
clc
and
repnz
popaw
pushf
push
add
andl
sbb
adc
push
lret
and
pop
xchg
movsb
or
inc
pop
add
mov
cmp
mov
or
nop
out
push
mov
shr
and
leave
push
nop
push
push
sbb
add
sbb
sub
cmp
xorl
jge
jmp
mov
jmp
or
add
cmpsl
cltd
hlt
sub
outsl
nop
push
or
push
cmp
movsl
add
jbe
xchg
mov
fadds
xchg
fstl
mov
xchg
xchg
andb
cmp
cmc
add
mov
mov
outsb
add
add
fstl
fdivl
not
add
js
dec
adc
fistps
jne
ds
xor
imul
xor
jmp
mov
nop
push
in
add
jmp
pop
add
pop
xchg
fcmovnbe
mov
outsl
adc
cwtl
mov
add
add
dec
loop
jge
cmp
add
popf
mov
pop
sub
inc
jp
sahf
mov
cmp
subb
pop
repz
mov
or
inc
movsl
pop
cmp
leave
xor
ret
sub
sbb
mov
push
sub
push
xchg
sbb
push
dec
jle
add
cmp
pop
and
mov
into
or
adc
cltd
pop
push
add
inc
fcoms
popa
movsb
icebp
ljmp
ret
mov
dec
ret
pop
jge
add
xchg
js
icebp
xlat
push
or
adc
sbbb
gs
jg
jmp
std
inc
lcall
pop
and
xlat
fbld
lcall
popl
cmpsb
je
call
xlat
add
cld
mov
iret
dec
leave
adc
mov
or
sub
sbb
and
out
add
sub
jmp
adcl
in
pop
testb
cmpl
sub
jge
dec
enter
aam
clc
adc
push
inc
mov
mov
cmp
call
shrl
cld
xor
aaa
xchg
mov
jp
pop
test
mov
cmp
jae
lret
fstl
outsb
add
sbb
push
mov
jmp
push
cs
das
sub
sbb
sahf
add
das
and
push
ja
call
xor
push
adc
sub
or
xchg
nop
push
pop
jge
add
sub
and
xorl
sub
outsl
add
lret
inc
pop
or
aaa
add
sbb
arpl
push
or
adc
sub
mov
push
xchg
enter
xchg
mov
cmp
adc
push
mov
out
fstl
cmpl
pop
lcall
imul
icebp
or
jns
push
cmp
lock
push
or
popa
jmp
adc
push
push
add
adc
les
or
xor
or
jbe
adc
and
sub
add
sub
rorl
addl
sbb
jl
add
lods
leave
push
or
push
adc
jecxz
mov
in
nop
daa
or
or
hlt
adc
mov
fiadds
jecxz
rolb
or
cld
push
fildll
sub
cwtl
pop
xor
imul
or
addb
adc
pusha
sub
inc
shl
dec
sbb
dec
dec
lods
pop
add
jno
gs
call
dec
add
mov
push
xor
lahf
test
outsl
sarb
cwtl
mov
sub
xor
jmp
pusha
push
push
divb
push
shrl
add
jmp
test
push
pop
inc
push
jmp
cld
xor
cmp
xor
imull
add
negb
enter
stc
sub
lcall
adc
jmp
cwtl
sbb
and
shl
pop
add
rorl
dec
cmp
pop
push
negb
jmp
inc
fstpt
adc
dec
jmp
or
pop
in
add
push
xor
add
in
add
dec
inc
icebp
ss
stos
push
xor
dec
jne
push
pop
or
shll
sti
adc
jecxz
cld
pop
xchg
stos
lock
xor
mov
fnstenv
dec
inc
stc
mov
loope
push
scas
js
mov
rolb
mov
push
mov
insb
aam
add
add
xor
jns
push
ret
add
pop
fsubrp
loope
in
cmp
push
adc
or
loopne
mov
or
roll
scas
xor
je
pop
cmp
mov
decb
sbb
pop
sbb
xchg
ja
shlb
sar
cmp
cmp
test
or
sbb
jno
dec
inc
rolb
pusha
negb
loopne
jmp
mov
cmpsb
pop
dec
cs
add
sub
mov
sarb
sub
push
sbb
add
aam
sbb
mov
sarb
aas
nop
mov
push
or
or
inc
fldt
test
lock
sub
addr16
cmp
fs
push
in
mov
xor
add
ret
inc
icebp
ret
adc
push
sbb
loopne
adc
xchg
jge
iret
push
fistpll
xchg
loopne
pop
mov
sub
call
mov
jne
fisttps
or
imul
lret
or
cltd
sub
lret
pop
mov
lds
jmp
mov
cwtl
mov
repnz
sub
jmp
mov
cmp
xchg
lock
and
push
in
repnz
daa
stos
rcrb
sbb
xchg
js
fstl
nop
out
inc
pop
pop
jbe
icebp
pop
das
loope
push
xor
cmp
mov
pusha
sub
pop
push
pop
jns
add
dec
sub
mov
cmp
ljmp
cld
add
cmc
add
pop
jmp
add
adc
cmp
pusha
add
add
jmp
daa
mov
pop
test
xor
pusha
push
sti
sbb
xor
imul
mov
mov
jg
mov
push
lea
ret
push
dec
mov
sbb
push
cld
adc
sub
cmpsb
pop
adc
pop
cmovle
push
inc
inc
jbe
gs
mul
xchg
shrb
add
neg
pop
daa
popf
mulb
add
lods
call
or
or
nop
pop
das
ja
imul
pop
adc
mov
les
repnz
int3
push
xchg
mov
sub
push
nop
test
adc
mov
int
mov
icebp
inc
aas
test
daa
xchg
inc
xchg
pop
cmp
mov
xor
adc
cmp
xchg
add
scas
adc
jp
add
imul
dec
into
add
xor
adc
sarb
cld
jns
js
xchg
mov
add
pop
xor
addl
adc
jmp
sub
xchg
dec
sub
push
nop
mov
sub
add
int3
pop
in
jl
sbb
nop
adc
dec
add
enter
push
push
int
rclb
adc
pop
mov
jl
mov
xchg
shll
and
add
test
jle
add
push
xor
xchg
gs
mov
sub
addb
cwtl
inc
add
push
lods
cli
sub
icebp
test
sub
dec
mov
jo
popf
push
sbb
notb
lds
or
jo
loope
add
sarb
shrl
sub
addr16
gs
aam
cli
lret
xor
jmp
cltd
push
stos
sbbl
cmp
mov
daa
or
mull
and
pop
jne
push
call
cli
push
push
push
pop
pop
mov
lcall
cld
sbb
sbb
cmp
jp
popa
sbb
and
push
inc
test
sbbb
aaa
or
inc
hlt
mov
add
stc
fs
ds
fisubl
fidivl
ja
mov
fadds
dec
push
sub
sub
call
cltd
jmp
cltd
scas
mov
jmp
dec
or
push
dec
outsl
jno
mov
cmp
pop
inc
fcoms
or
dec
movl
sub
call
es
cmp
sbbb
sub
js
cmp
mov
outsb
or
cmp
mov
fucom
pop
jmp
sub
loop
rcr
add
aad
clc
shll
mov
dec
and
mov
and
and
pop
pop
lods
and
stos
and
add
push
or
add
mov
dec
cmpsb
repnz
xor
xchg
push
call
shl
push
adcb
shl
sub
jne
dec
pop
mov
ja
xor
or
add
out
pop
xor
jnp
repz
mov
push
pop
inc
shrl
cmc
dec
jmp
mov
pusha
and
xor
add
jmp
push
jmp
add
push
je
add
pop
loope
jae
or
xchg
lock
mov
pop
add
add
lods
inc
ds
loop
mov
push
popa
and
popf
inc
cmc
xchg
rolb
or
or
xchg
xchg
push
ror
lds
xchg
shrb
cmp
xchg
adc
jmp
cmpsb
push
pusha
pop
ss
add
into
xchg
push
sbb
int
pop
or
in
dec
sbb
xchg
pop
push
mov
pop
call
push
imul
jmp
mov
mov
mov
add
jmp
add
mov
pop
rorl
pop
push
push
pusha
inc
dec
add
fldt
push
or
xchg
jb
cmp
dec
xor
shl
add
fistps
jo
bound
add
and
pop
xchg
ffreep
mov
jecxz
pop
daa
out
lea
add
add
cmp
sbb
add
sub
and
dec
xchg
out
xchg
arpl
fnstsw
sbb
mov
bound
sahf
pop
roll
jl
sub
jmp
sbb
xor
fs
dec
scas
inc
insb
mov
jno
shlb
mov
and
xchg
sbb
or
cmp
add
add
adcb
test
pop
lret
adc
xor
call
scas
mov
push
and
push
cltd
jb
adc
pop
jl
rcrb
push
push
jnp
pop
dec
push
xchg
pop
scas
arpl
les
shr
mov
push
div
gs
push
inc
stos
lock
jnp
inc
int
push
add
inc
cld
inc
dec
adc
pop
or
pop
sbb
nop
pop
add
inc
inc
mov
pop
push
mov
adc
mov
cmp
cmp
in
hlt
imul
aam
pop
xor
cltd
sub
cmpsb
jge
aaa
sbb
push
in
push
push
mov
jmp
inc
adc
addr16
jmp
mov
pop
loop
cmp
sahf
rcrb
inc
das
xlat
ds
std
int3
xchg
movsb
mull
pop
adc
xor
jl
fimull
pop
and
mov
cmpsl
jmp
test
dec
stos
mov
ret
jo
dec
lret
fidivl
inc
add
sub
adc
dec
mov
jp
aas
sbb
mov
in
or
std
and
xlat
jns
inc
pop
inc
mov
lret
cmpsl
data16
add
inc
sbb
testb
cld
fcomip
xchg
xchg
in
cmp
in
sub
sub
jmp
movsb
hlt
push
imul
ja
hlt
and
inc
popa
mov
xchg
jecxz
push
push
jmpw
adc
pop
clc
cli
sub
jmp
inc
pop
adc
out
jae
sub
pop
daa
add
add
inc
pop
or
cmp
mov
int3
sbb
adc
bound
icebp
lsl
pop
dec
stc
cld
aas
mov
add
pop
jecxz
cs
mov
ljmp
or
sbb
cld
xchg
push
je
jecxz
enter
fwait
adc
pop
sub
sbb
and
stc
mov
js
addl
mul
xchg
out
ret
pop
jne
push
pop
pop
add
test
adcb
jp
jno
dec
outsl
and
inc
pop
mov
pop
sub
pop
outsl
in
sub
mov
pusha
dec
or
pop
cld
dec
push
lods
dec
mov
stos
cwtl
rcrb
push
add
jmp
pop
shl
roll
inc
and
iret
stos
mov
lret
jne
pop
test
inc
repz
inc
pop
jge
fisubl
pop
jmp
scas
push
push
seta
rolb
add
test
xchg
or
testl
scas
xchg
xchg
and
xor
xor
add
dec
adc
call
xchg
inc
push
int3
jecxz
pop
out
pop
stos
pusha
lods
stos
push
push
and
sub
out
psubb
xor
push
mov
cmc
nop
cmp
xor
adc
jo
popf
cmp
lock
aaa
inc
je
or
push
cmp
jmp
jmp
insl
or
adc
or
mov
daa
jmp
jno
imul
and
ss
out
fs
dec
int3
pop
aaa
mov
cmp
or
add
sbb
inc
or
pop
jle
ret
roll
xchg
outsl
jg
push
and
mov
sub
dec
mov
lock
ret
out
cwtl
pusha
inc
lret
popf
pop
insl
mov
jmp
rcrb
mov
popa
cmp
adc
outsl
or
cmpw
and
addl
lcall
inc
mov
fwait
xor
cmp
or
into
mov
enter
mov
and
popa
loop
data16
mov
test
cmp
jmp
push
pusha
stc
je
jnp
les
add
pushf
dec
addr16
add
mov
pop
push
pop
push
mov
add
jnp
inc
nop
adc
in
popa
ds
adc
mov
jno
insl
jmp
cmp
pop
sbb
xchg
icebp
enter
leave
shrb
mov
inc
add
out
fstps
lcall
out
lret
or
mov
out
push
mov
inc
xlat
push
cmp
sub
neg
dec
int3
xor
dec
dec
lods
lds
lcall
cld
xor
xchg
aam
cltd
nop
xor
pop
push
or
push
mov
rol
pop
push
cmp
movsl
cmpsb
imul
jmp
mov
mov
sbb
mov
in
test
pop
inc
ret
fs
ja
iret
pushl
xor
xlat
cld
xor
or
sbb
imul
aas
add
jl
cmp
add
insb
sub
sub
pushf
ret
dec
dec
shlb
shr
push
push
jmp
jecxz
enter
or
enter
out
dec
dec
and
in
loopne
das
mov
xor
jo
in
jae
sbb
shl
adc
les
scas
pop
add
pop
push
cmpsb
cmc
pop
inc
jmp
mov
xchg
inc
xlat
push
stos
pushf
and
bound
mov
packssdw
and
sbb
ror
inc
clc
mov
ljmp
pop
test
in
loope
or
cmp
add
sub
mov
adc
pop
shr
pop
mov
mov
into
sbb
ja
mov
jne
push
push
pop
push
gs
and
int3
test
jo
pop
jmp
decl
out
xchg
in
jge
pop
jecxz
movsl
repnz
ds
adc
lock
mov
mov
je
push
add
or
push
movsb
xor
xor
and
filds
push
mov
sbb
rcr
add
push
dec
daa
rclb
nop
dec
add
sub
add
pop
add
sti
and
ja
adc
mov
jp
mov
outsb
dec
daa
add
add
sub
fsubrp
or
adc
add
sarl
cmp
push
add
mov
ret
jl
and
add
mov
mov
push
pop
hlt
sbb
or
cmpsb
lcall
inc
dec
outsl
mov
call
mov
mov
or
or
and
dec
jl
jmp
jmp
add
mov
add
mov
stos
pusha
icebp
mov
mov
mov
aad
inc
mov
pop
stos
js
stos
fistl
sbb
cs
pop
mov
sbb
xor
and
fnsave
gs
dec
inc
dec
pop
fdiv
add
push
xor
rcr
jmp
cli
outsl
je
add
sub
xchg
mov
fisttpl
icebp
adc
sub
sbb
push
push
adcb
gs
add
pop
adc
jg
fs
add
add
in
aam
out
pop
adc
mov
out
mov
add
jge
add
mov
xchg
movsl
add
fisubs
jge
jo
mov
or
sub
or
xchg
pop
call
int
mov
add
nop
jb
ljmp
add
and
test
cld
add
xor
stc
js
inc
jp
jg
pop
popa
aas
insl
add
or
dec
loope
adc
xchg
nop
sarl
or
mov
xlat
das
and
pushf
or
dec
lahf
ljmp
mov
and
add
sub
pusha
pop
and
jo
sbb
aam
jnp
movsl
jbe
das
fistpll
repz
xchg
jb
incb
fbstp
repz
gs
ret
and
push
repnz
dec
dec
jge
ficomps
push
cld
or
xchg
cmp
out
add
push
dec
dec
decl
insl
pop
sbb
jmp
loop
fcoms
dec
add
sub
xor
mov
rorl
and
dec
jp
scas
lcall
push
cmc
dec
data16
cmp
mov
sbb
enter
pop
pop
cmp
ret
xor
adc
lods
jmp
jbe
in
clc
dec
and
ds
aaa
negl
dec
test
or
loopne
icebp
bound
fstps
ljmp
and
push
sbb
fsubrp
or
push
fisubl
push
adc
cld
lea
lret
jmp
daa
loopne
push
jmp
push
inc
push
fcoml
mov
das
add
mov
fidivrl
xchg
adc
mov
jmp
adc
jmp
and
inc
push
popa
push
jmp
push
pop
movl
in
call
jb
shl
in
cld
cmpsl
inc
mov
je
mov
jae
lock
mov
push
push
cs
xchg
iret
ja
ficompl
shrb
sub
addr16
and
or
rol
push
mov
sub
inc
jno
pop
dec
push
cmp
fdivs
sbb
jnp
xchg
pop
hlt
add
or
jo
xchg
mov
jb
or
xor
stos
xor
add
mov
addb
and
insb
dec
addb
push
dec
and
adc
xchg
push
mov
adc
sub
or
pop
xlat
leave
xchg
and
shll
adc
jne
xor
ret
adcb
add
incl
cmp
mov
xchg
pop
xchg
xorl
loope
and
pop
mov
pop
or
rclb
dec
cmp
mov
outsb
add
dec
xor
mov
xor
cmpsl
outsb
or
mov
dec
ljmp
push
jno
sub
mov
push
push
cmc
mov
dec
fcomip
dec
mov
imul
jmp
push
dec
scas
nop
sub
gs
enter
inc
out
lods
inc
adc
mov
sbbb
rcl
sbb
stos
and
sub
mov
gs
add
xchg
testb
sbb
and
js
pop
mov
mov
pop
pop
call
or
pop
inc
and
xchg
aas
add
daa
scas
or
pop
push
mov
jmp
dec
aas
and
dec
inc
int3
mov
xchg
cmp
repnz
pop
pop
mov
push
jge
push
mov
in
int3
push
icebp
out
orb
dec
shrb
ljmp
icebp
pop
imul
push
sub
std
cs
xlat
mov
outsl
sarb
pop
rorl
mov
xchg
daa
xchg
pop
jecxz
sti
ret
repnz
dec
popa
pop
jno
sub
push
add
push
mov
or
jo
xor
testb
addr16
sub
rorb
in
clc
les
jp
aam
jo
mov
jno
pushf
add
jmp
out
not
fimuls
lret
outsb
in
mov
inc
adc
jbe
je
push
mov
mov
mov
pop
test
cmp
ret
xchg
mov
sbb
jnp
push
ja
js
jmp
push
sub
pop
pop
flds
jge
xor
inc
mov
jmp
push
add
push
xor
pop
testl
mov
mov
fxch
outsl
jbe
daa
inc
paddd
or
push
inc
mov
mov
sbb
mov
mov
add
jmp
mov
cmova
inc
shll
enter
jle
ficomps
push
loopne
popa
not
mov
fdivrl
adc
fisubrs
add
inc
outsl
lods
in
rcl
add
mov
cmp
lock
sbb
dec
push
add
add
mov
add
sbb
add
xlat
insb
fcmovbe
orl
sbb
inc
and
xchg
div
add
jmpw
cmp
xchg
jge
mov
push
cs
jae
enter
loop
dec
xchg
pop
mov
pop
xchg
lahf
adc
scas
in
sub
std
adc
push
ss
add
adc
fwait
or
pop
fdivs
sub
sarb
push
or
fldenv
testl
idivb
adc
add
pop
daa
fsubs
pop
call
dec
data16
add
pop
in
cli
test
aas
pop
fnstsw
repz
push
jnp
mov
add
scas
syscall
sub
mov
or
xor
cld
hlt
iret
xchg
adc
jno
sub
cs
inc
aam
cmp
mov
push
mov
jae
nop
rclb
xor
shlb
into
add
repnz
mov
lahf
push
mov
jne
into
add
jmp
inc
mov
mov
loope
rcl
cmp
adc
aad
ret
arpl
repnz
mov
pop
sub
push
pusha
pop
sbb
sti
shlb
pop
lret
sub
adc
pop
sub
mov
adc
shrl
stc
insl
push
adc
or
pop
test
jp
rcrl
inc
shrl
adc
xchg
clc
lds
daa
push
cmp
or
pop
pop
push
jmp
sbbl
xor
data16
mov
mul
in
mov
in
add
push
inc
mov
sub
pop
sub
repnz
stos
mov
push
enter
pop
sub
push
shr
in
add
mov
fildl
inc
sbbb
or
xchg
sbb
mov
dec
fcomip
jmp
daa
arpl
mov
xor
in
sub
mov
das
add
jp
xor
fldl
imul
cmpsl
add
xor
lret
or
and
into
xor
ja
sbb
or
cmp
mov
adc
shrb
xchg
sub
sub
or
or
clc
mov
or
aad
add
jle
and
inc
pop
sbb
stos
add
out
jae
mov
in
sbb
xor
aas
dec
and
jbe
ljmp
jmp
cmpb
rcrb
ret
out
dec
push
push
or
outsb
ja
les
ret
push
lods
pop
std
cld
rcll
out
mov
add
lock
xorb
jp
pop
jmp
push
dec
daa
adc
cmp
push
adc
push
adc
out
inc
inc
sub
push
movsb
scas
gs
and
bound
int
repz
mov
jns
call
mov
push
mov
push
mov
adc
sub
lret
xlat
shll
out
loop
test
arpl
aam
scas
imul
adc
mov
daa
sub
push
inc
dec
push
int3
xor
dec
fstpt
xchg
dec
cld
fld
adc
inc
mov
imul
push
test
subl
jmp
mov
push
adc
pop
push
sub
adc
mov
shrl
jmp
icebp
xchg
pop
js
inc
mov
push
out
es
insl
adc
pop
incb
popa
gs
or
cs
popf
push
mov
push
or
out
inc
mov
es
jae
mov
jg
repnz
adc
push
or
jmp
popa
rcrl
ror
xor
mov
dec
in
dec
cli
shl
cld
outsl
daa
pop
sub
cmpsb
add
push
sbb
jg
sub
inc
lods
pop
outsl
cld
iret
adc
lods
popl
xchg
or
fs
out
sub
sub
xor
lret
iret
into
test
pop
in
clc
dec
lods
mov
lcall
cmp
std
mov
and
dec
pop
mov
jge
xor
cli
cmp
aaa
sub
sbb
or
cmp
stc
addb
or
sub
cs
xor
filds
cmpsb
lods
or
int
mov
mov
stos
inc
fsubr
sbb
mov
mov
push
mov
mov
dec
xor
pop
hlt
push
jae
icebp
sub
pop
mov
int
mov
dec
xor
jns
jno
and
sarb
sbb
and
jmp
xchg
lock
cld
imul
call
xchg
popf
repnz
ret
loopne
fwait
xor
sahf
pop
xor
pop
mov
fstl
fists
jecxz
std
push
or
imul
sub
adc
popf
repnz
push
cli
stc
jmp
inc
stos
aam
adc
xchg
push
les
daa
adc
inc
push
adc
dec
pop
mov
sub
mov
jle
cmp
loop
ljmp
xchg
pop
mov
xchg
inc
adc
or
pop
inc
test
cmp
hlt
jl
pop
cli
jmp
xor
add
shlb
cmpsl
fstpl
pop
push
xor
dec
jnp
sbb
jmp
fbld
testb
sub
je
lcall
pop
inc
cmp
xchg
add
dec
sti
roll
ja
sti
jo
jmp
xor
or
mov
mov
and
jno
inc
dec
movsl
pushaw
popf
add
icebp
adc
jno
loope
xchg
or
inc
adc
jle
sbb
add
and
cmpsb
pop
push
in
inc
shr
xchg
or
pop
out
cs
stos
jmp
and
cmp
bound
dec
add
lea
jg
add
add
add
aas
orb
add
cmpsl
scas
shrb
xchg
or
or
dec
jmp
in
cmp
add
xor
pop
lret
ljmp
xorl
and
pop
incb
andb
fstpl
flds
fdivrs
sbb
mov
xchg
cmc
clc
cmc
fsub
pop
outsl
orb
test
std
subb
push
xor
enter
xor
lahf
imul
jmp
mov
inc
push
push
fnstcw
jno
out
cmc
gs
mov
icebp
add
int3
sub
pop
xchg
xor
stos
push
adc
pop
adc
jg
add
mov
fs
push
xor
call
in
mov
cli
cmp
add
push
pop
lock
inc
fmull
add
mov
pop
and
pop
push
pop
add
xor
dec
orb
test
add
lret
and
inc
and
shr
push
push
mov
mov
lahf
xor
pop
sahf
es
inc
les
loop
ret
add
mov
lcall
or
clc
cmp
shrb
mov
mov
and
mov
lea
jbe
xor
iret
ss
les
add
rcrl
jle
jo
mov
repnz
cmc
or
fmul
ffreep
mov
mov
cli
in
mov
iret
sbb
mov
inc
jl
xor
loope
jmp
push
je
mov
mov
sub
or
rcr
ljmp
ret
loopne
jle
pop
mov
fisttps
cli
dec
pusha
insl
xor
adc
xchg
add
test
jmp
sub
fadds
test
and
add
std
mov
loop
jmp
push
daa
jmp
mov
sub
inc
jecxz
inc
pop
mov
inc
scas
lret
js
add
mov
outsl
mov
inc
or
pop
add
rorb
or
add
sbb
mov
xchg
sarb
add
adc
add
push
pop
test
push
mov
scas
mov
nop
mov
dec
add
mov
pop
xlat
movsl
push
or
cld
xchg
xchg
mov
jnp
je
xor
xor
mov
xorb
or
mov
dec
mov
and
push
repz
sbb
es
push
jp
add
pop
cli
adc
add
movsl
jb
push
dec
pop
inc
stos
xchg
inc
cmp
xchg
jb
and
cwtl
mov
push
or
mov
mov
cmp
icebp
enter
incb
fnstenv
in
clc
insb
lds
jb
test
and
ja
sbb
xor
xchg
xchg
add
and
add
or
outsb
mov
mov
not
xchg
adc
add
jmp
push
or
bound
push
out
or
dec
sbb
push
adc
ror
inc
jb
ret
and
sbb
je
jae
pop
xor
nop
icebp
push
cli
lock
or
jae
add
rcrl
ud2
movsb
movsb
mov
mov
add
jg
push
mov
les
pop
addr16
xchg
adc
jnp
js
xchg
stos
cld
incl
repz
rcrb
rorl
mov
and
jnp
pop
sub
adc
add
mull
adc
mov
pusha
jg
xor
lods
and
pop
mov
inc
out
push
mov
or
pop
mov
js
fildll
sbb
adcb
in
orl
inc
call
and
push
push
sbb
cmpsl
clc
decl
js
pop
dec
test
iret
inc
ja
andl
pop
leave
lds
lea
mov
push
pop
pop
inc
dec
xchg
ss
and
lret
repnz
and
aad
pop
xchg
or
lcall
mov
leave
fsubrp
sub
add
dec
jmp
add
out
mov
add
ljmp
in
add
mov
jae
mov
add
sbb
popa
xor
push
lds
jmp
lock
fcom
dec
xor
sbb
mov
in
fldt
repz
mov
addr16
jb
stos
add
out
and
or
jne
jmp
mov
and
mov
jnp
and
stc
add
lds
xor
cmp
or
add
push
inc
mov
add
cwtl
push
in
popa
out
outsb
and
iret
out
daa
dec
cmp
xor
leave
fcomip
sub
pop
adc
jns
daa
inc
jo
lret
out
sub
add
cld
sahf
adc
sti
add
mov
pop
mov
lret
movsb
mov
xchg
dec
cmp
mov
addb
jne
ret
pop
jbe
and
sub
sub
ret
cmp
pop
dec
lods
ljmp
pop
xlat
aaa
mov
dec
add
push
mov
daa
stos
cmp
jns
mov
jno
cmp
cld
push
pop
negb
adc
add
cmc
and
int3
jp
sbb
mov
dec
aam
jg
test
mov
pop
aam
pop
sub
jge
popl
adc
mov
cld
add
jnp
mov
ret
pop
cmp
scas
repnz
aad
sbb
scas
aad
or
push
adc
pop
mov
add
dec
mov
and
sub
shrl
jle
jnp
movsb
clc
das
or
push
dec
test
add
mov
popf
pop
les
cmp
pop
or
mov
xchg
sbb
mov
cli
loop
lds
insb
adcb
stos
fs
xchg
mov
lret
cmpsl
dec
add
xchg
push
fistpll
dec
out
jae
shlb
mov
fstpl
add
not
das
shl
scas
fsubs
js
lahf
stc
sub
mov
dec
inc
add
dec
mov
add
ret
sub
fbstp
ret
and
jne
sti
test
pop
mov
add
add
dec
inc
xlat
xor
sbb
pop
idivl
ds
push
rorb
jns,pt
cwtl
sbb
loope
add
movsl
push
shl
xchg
sbb
sbb
in
daa
pop
jecxz
mov
adc
mov
ret
jg
mov
mov
and
sub
sbb
jmp
mov
call
mov
movsb
icebp
push
add
xor
add
push
add
movsl
sbb
in
cmpsb
add
outsl
inc
popa
stos
mov
cld
sbb
cmp
bound
clc
jg
push
sbb
data16
loope
adc
nop
mov
or
je
out
jne
xor
scas
push
add
iret
mov
das
push
es
mov
in
adc
add
sbb
push
mov
jns
and
and
push
fadds
dec
lds
jmp
addb
icebp
adc
dec
jg
sbb
mov
dec
gs
mov
push
and
inc
sub
xor
out
cld
ljmp
sbb
sbb
xchg
pop
sub
lret
add
pop
lods
orb
in
sub
inc
and
out
ljmp
pop
scas
add
jnp
pop
sub
jno
repnz
dec
sub
mov
lret
pop
pop
xor
inc
pop
jmp
jmp
push
xchg
jo
pop
dec
and
mov
and
fildl
addl
push
xor
leave
push
and
sbb
sub
jmp
repnz
das
and
and
push
xchg
aas
rorb
pop
fstpt
aaa
add
push
std
push
jmp
mov
xor
jmp
mov
jge
mov
mov
push
mov
mov
jmp
sub
sub
pop
sub
mov
nop
popf
or
pop
out
data16
pushf
orb
push
movb
lock
push
dec
addr16
xchg
and
xlat
setl
mov
cltd
jmp
call
xchg
sti
iret
rcrb
jg
mov
aaa
ret
push
mov
arpl
push
fdivrl
mov
pop
mov
lahf
call
pop
mov
dec
roll
sbb
mov
lds
shrl
push
dec
cs
pop
enter
ljmp
adc
loop
jp
pop
add
cmpsl
and
sub
push
fcomip
xchg
dec
clc
popf
add
mov
sub
arpl
push
dec
inc
sub
shlb
rolb
add
or
mov
call
pop
or
aaa
jmp
mov
mov
cmp
insb
in
dec
fs
popa
aam
inc
pop
int3
xchg
ljmp
inc
cwtl
adc
jecxz
fs
mov
js
mov
pop
mov
pushf
cli
push
mov
aas
fldl
and
mov
loopne
push
pop
or
clc
jne
xor
add
sub
push
xor
test
and
adc
push
add
sbb
lock
repz
inc
pushf
xchg
dec
inc
imul
orb
jo
or
push
sub
pop
mov
shr
popf
adc
cltd
or
pop
iret
testl
dec
pop
je
inc
inc
nop
ss
push
add
sbb
push
add
xlat
sub
std
repnz
mov
pop
mov
popa
mov
xor
fists
or
aas
push
xlat
inc
push
mov
out
add
and
stos
inc
or
cs
mov
pusha
dec
fsts
sbb
incb
cmpsb
loop
pop
dec
xchg
add
add
mov
in
xchg
ficoms
ds
adc
out
lret
mov
jge
xorl
jnp
fdivs
mov
call
pop
sub
cmp
lods
sub
fsubrl
das
add
ss
adc
aam
je
fsubl
add
pop
inc
shlb
in
sbb
mov
add
scas
ficompl
inc
dec
cmp
divl
pause
sbbb
pop
push
cmpsl
jp
orb
xor
and
adcb
mov
and
push
leave
insb
fldcw
lahf
pop
cmpsl
dec
ljmp
jno
push
out
xchg
cmp
ljmp
hlt
push
mov
pop
dec
inc
adc
mov
dec
lock
adc
ret
push
adc
adc
loop
test
in
mov
bound
push
stos
clc
mov
ret
fsubs
lret
ljmp
enter
aas
ds
cmp
jbe
inc
sub
mov
or
add
test
cwtl
jne
inc
xlat
ret
testl
aad
fists
mov
and
out
popf
lcall
add
jae
das
mov
add
cld
popa
adc
push
mov
lcall
add
in
mov
in
mov
cmp
jge
jae
or
pusha
lock
js
fcoms
jmp
test
and
bound
lods
or
insb
les
ret
mov
sub
sbb
enter
or
jnp
jnp
mov
ucomiss
and
xchg
pop
setle
stos
and
lock
inc
push
shlb
jmp
cs
push
mov
scas
add
jle
inc
inc
divl
xlat
inc
fdivl
nop
dec
incb
mov
lcall
inc
dec
mov
cld
xchg
sbb
into
xlat
inc
xchg
andl
not
push
shl
subb
repz
ficomps
outsl
ljmp
push
mov
dec
int3
sbb
push
push
cmp
pop
push
sbb
cld
loopne
sbb
sub
rolb
in
orb
lods
xadd
out
add
push
addr16
cmp
ds
jmp
icebp
pusha
jo
xor
pop
push
cmpsb
push
jg
cmp
xchg
pop
sub
or
cld
pusha
cmp
sarb
dec
push
pop
sub
leave
push
lds
ljmp
or
pop
push
les
push
cmp
mov
mov
push
cmp
add
jg
xchg
fildll
shl
fcmove
xchg
loopne
dec
inc
push
and
les
scas
lds
cmpsl
aas
adc
dec
mov
mov
pop
jo
shl
lret
ja
pop
aad
mov
push
push
or
jmp
jae
andb
pop
push
pop
sahf
adc
xor
mov
call
dec
and
int
fs
stc
sub
stc
in
sub
scas
pop
push
cmp
dec
add
jmp
dec
add
jnp
pop
push
addr16
pop
xor
push
ds
cmp
iret
jmp
outsl
movsl
aad
pop
mov
push
cli
mov
mov
faddp
add
icebp
pop
aas
mov
lock
dec
sbb
xchg
cmp
push
lock
add
inc
jmp
sub
lock
push
out
or
push
negl
shr
add
or
xor
dec
ret
faddp
mov
xcrypt-ctr
cmpsl
pop
shr
xor
pop
out
repnz
fdivrl
in
adc
pop
cld
jle
cltd
mov
sub
imul
mov
dec
mov
push
sbb
std
shll
jmp
sti
insl
xchg
xor
push
and
mov
int3
mov
mov
dec
movsl
call
lock
add
int
or
or
jmp
cmc
lds
add
lds
decl
cltd
push
sub
les
xchg
pop
pop
cld
js
pop
mov
add
dec
sbbl
iret
out
test
in
lret
cmp
mov
aaa
add
xchg
push
adc
movsl
mov
add
sbbb
sbb
push
lcall
and
pop
pop
cld
fldt
lea
jno
mov
or
in
add
cmp
ficomps
arpl
dec
adc
inc
jmp
shll
incl
lret
mov
sbb
iret
fst
pop
pop
mov
es
jg
movsl
les
mov
cld
arpl
daa
fisubrl
xchg
testl
jmp
lock
dec
push
jmp
insl
test
sub
and
mov
fimull
fcomps
pop
push
mov
not
shrb
add
jbe
and
dec
aaa
xchg
pop
clc
adcb
dec
daa
pop
pop
adc
mov
or
fsub
lahf
lds
xchg
dec
inc
inc
xor
inc
mov
or
inc
push
lret
out
les
cwtl
fdivs
popa
stos
sbb
test
jae
add
mov
xor
add
xor
adc
mov
mul
jo
sbb
push
test
mov
divb
dec
addl
mov
call
mov
jmp
cmpb
mov
addl
or
pusha
aas
out
pop
je
not
push
in
icebp
push
int3
lret
loope
dec
mov
test
jb
inc
sar
popf
filds
rorb
sbb
mov
add
stos
sub
popa
test
push
lcall
mov
out
push
xchg
jle
pop
stos
cmp
or
lret
adc
daa
add
lret
daa
jae
dec
inc
or
pop
xchg
inc
pop
xor
pop
or
cs
movsl
or
ret
push
inc
movsl
test
push
dec
out
adc
inc
and
dec
roll
sbb
dec
cmc
fisubs
jns
cs
jecxz
xchg
pop
ljmp
pop
mov
outsb
outsl
outsl
call
enter
icebp
lcall
and
aaa
xchg
adc
inc
das
int
inc
adc
shlb
mov
lcall
cmp
in
mov
pop
push
or
push
sub
loopne
loop
or
xor
and
mov
aam
frstor
add
jb
xchg
movsl
and
popf
push
xor
or
int3
dec
icebp
mov
dec
push
in
loopne
pop
cli
loop
cltd
cli
push
cmpsl
sub
dec
xor
mov
push
das
add
out
popa
cmp
popf
andb
lret
jecxz
mov
or
orb
stos
jo
xor
add
dec
adc
mov
jnp
inc
ret
es
divb
pop
mov
sub
push
das
jmp
clc
out
pop
push
mov
xchg
xor
mov
xchg
push
sbb
sub
les
repz
add
iret
and
adc
mov
mov
dec
sub
jge,pn
xchg
cmp
mov
pop
sub
jp
or
cmp
jmp
xchg
data16
sub
aas
add
pop
pop
loope,pn
das
lret
xchg
dec
jmp
int
scas
add
pop
sub
pop
cmc
mov
jmp
notl
into
mov
push
jecxz
xchg
push
and
or
std
fdivrs
sti
iret
rcrb
sbb
pop
push
les
or
ja
outsl
mov
fisubrs
icebp
xor
rcr
lock
dec
dec
aad
xor
shrb
dec
inc
out
es
inc
mov
adcl
cmp
cmp
imul
in
cmp
and
faddl
dec
gs
and
jg
cs
add
pop
inc
mov
scas
lods
ja
sbb
pusha
int3
push
xchg
lock
push
mov
fistpll
lret
mov
pusha
or
movsl
adc
add
sbb
inc
cmp
push
fbstp
pop
add
mov
nop
jnp
cmp
or
pop
jp
adc
shrl
leave
cwtl
and
add
jmp
outsl
mov
dec
push
loop
fisubs
mov
rcl
adc
cs
mov
add
dec
push
sbb
jmp
xchg
and
flds
pop
fsubrp
push
loope
xlat
lret
lods
add
mov
sub
cwtl
hlt
pop
and
repz
ret
dec
or
mov
outsb
adc
mov
and
sti
sbb
and
add
incl
jge
jmp
inc
cmc
out
adc
and
xchg
push
add
jmp
or
leave
cmpsb
sub
mov
mov
lahf
mov
mov
sub
xor
inc
mov
and
lods
xchg
and
pusha
pop
pop
add
jg
sti
inc
pop
cmp
shlb
push
cmc
imul
lods
leave
mov
fs
pop
push
out
and
xchg
or
push
mov
add
stc
adc
fisubrl
std
adc
andl
popa
icebp
push
cmpsl
jle
shll
push
jg
das
cmpsb
adc
or
pushl
pop
hlt
sbb
sub
and
add
lret
jno
and
scas
cmpsl
lock
sub
adc
xor
xor
mov
xchg
and
gs
inc
nop
cwtl
sbb
addb
sub
icebp
xor
xorb
fistps
xchg
push
cmpsl
pop
push
repnz
inc
sbb
and
push
insb
add
ljmp
lock
and
mov
xchg
clc
xor
mov
les
in
mov
lret
pop
jnp
call
aaa
jae
add
add
jg
adc
idivl
stos
dec
mov
cld
sbb
leave
add
std
or
pop
sbb
mov
or
test
sbb
mov
enter
pop
aaa
mov
dec
out
push
outsl
jbe
pop
mov
or
pop
scas
jne
imul
push
dec
dec
sbb
out
pushf
mulps
notb
cmp
hlt
push
ret
test
add
dec
sub
mov
and
daa
push
mov
aad
add
jmp
push
in
movsl
add
and
sahf
fwait
xchg
jb
xor
loope
jne
in
push
jo
jns
hlt
and
adc
pop
sub
jbe
push
mov
dec
jle
imul
pop
sti
iret
jp
jmp
xchg
jae
leave
mov
pop
xor
cld
insl
mov
hlt
push
std
cmp
mov
movsb
popf
andl
pop
push
dec
addl
mov
inc
mov
aaa
inc
pop
insb
ljmp
notl
jg
pop
ja
in
aad
xor
jmp
push
mov
dec
lahf
stos
push
out
mov
loope
shlb
add
daa
shl
dec
in
rclb
inc
and
repnz
sbb
fsubp
sub
push
cmpsl
call
iret
or
and
push
sub
cli
ja
ds
dec
test
mov
push
rcr
inc
pop
adc
jp
sbb
sbb
ss
nop
inc
add
ret
rolb
into
ror
mov
shr
add
sar
xchg
xor
xor
mov
stos
xor
test
stos
pop
fisubrs
xor
add
push
pusha
adc
or
mov
adc
push
dec
inc
movsb
mov
jmp
cmp
pop
add
sub
das
push
push
adc
pushf
popa
and
adc
and
pop
jp
inc
rclb
push
cltd
sub
loope
sub
je
nop
jmp
sbb
ret
fdivs
mov
shll
pop
xor
call
inc
jne
push
or
or
shrb
je
mov
out
mov
cwtl
mov
pop
inc
xchg
cmpsl
outsb
push
cmpsb
bound
movsb
imul
std
es
push
pop
pop
or
gs
imul
lret
stc
and
pop
pop
jmp
leave
rorl
push
pause
pop
or
jnp
jae
dec
shrb
icebp
push
xchg
cmp
stc
je
jle
enter
sarb
sub
sbb
inc
dec
or
popa
pop
push
adc
pop
jne
xchg
gs
icebp
or
lods
insl
movsl
add
push
pusha
cwtl
xchg
aas
push
sbb
scas
loop
outsb
mov
xlat
out
lea
fimull
push
xchg
push
mov
jmp
push
aaa
dec
push
lcall
js
ret
pop
push
roll
or
xor
adc
cmpsl
add
data16
fdivs
dec
jns
or
outsl
nop
fnstenv
xchg
pop
int
mov
jge
push
fcomps
popa
clc
sub
shlb
jmp
mov
pop
rcrb
xchg
ljmp
aas
enter
mov
pop
xor
or
or
ret
negl
or
xor
push
or
add
rcl
add
outsl
mov
or
out
aad
mov
cmpsb
cmp
lahf
mov
loop
xchg
faddl
cmp
pop
sub
adc
rolb
xchg
or
pop
jmp
add
aad
hlt
les
dec
stos
jge
out
inc
adc
pushf
pop
cmp
cmc
pop
and
pop
rorl
ret
xchg
fs
jmp
mov
pop
hlt
notb
add
cltd
in
movsl
out
add
lds
xor
call
xchg
subb
push
cmc
repnz
mov
pop
fstps
or
les
jmp
mov
mov
push
jmp
cmc
gs
add
jg
push
cmp
sub
sub
and
outsl
iret
sbb
sahf
mov
mov
mov
mov
das
cmp
stc
sbb
cmc
cld
cmp
cmp
notl
sbb
lods
jmp
mul
es
pop
dec
lods
cld
aam
push
int3
push
stc
pop
or
and
mov
push
pop
xchg
in
lahf
cmp
mov
and
nop
mov
inc
xor
mov
aad
cwtl
push
push
in
or
xchg
mov
shlb
jmp
or
icebp
sbbb
cmp
in
or
add
fiadds
pop
ret
pop
add
inc
xchg
inc
loopne
mov
push
mov
call
jbe
pop
repnz
mov
xor
leave
or
sub
cld
add
add
in
adc
fld
mov
pop
out
pusha
sub
clc
jmp
or
mov
scas
rclb
jmp
xchg
push
sbb
stc
cmp
mov
adc
pop
pop
cld
ret
add
jl
push
inc
and
and
mov
pop
arpl
inc
jmp
xor
rcrb
xchg
push
mov
out
jecxz
dec
loope
imul
nop
cs
jo
dec
jns
divb
ret
gs
and
xor
adc
xchg
mov
adc
in
mov
pop
add
iret
fs
clc
and
pop
mov
inc
subb
jp
xchg
aam
add
pop
imul
adc
and
jp
inc
bound
repnz
sub
orl
ds
adc
xor
scas
mov
pop
scas
adc
das
bnd
lea
sub
jle
pop
jnp
push
dec
and
push
stos
cmp
cli
icebp
jb
dec
xchg
movsb
push
push
das
pop
pop
loop
pop
jle
orl
or
test
and
push
push
and
ds
ds
loope
aam
lret
and
cli
ja
push
imul
aaa
jmp
andb
and
push
jne
inc
mov
dec
stos
ficomps
gs
add
sub
inc
or
dec
fisttpll
lret
inc
mov
push
mov
cmp
adc
loop
sti
pop
push
and
inc
mov
inc
sbb
in
ret
rclb
ret
aad
cmpsl
ljmp
leave
mov
imulb
xor
mov
js
sub
sub
push
shlb
cmp
lock
lods
sub
mov
jns
nop
xor
sarl
cs
jp
or
aad
outsb
or
mov
mov
adc
in
push
insl
repz
mov
dec
imull
pushf
dec
adc
les
cld
movsb
shl
sub
or
nop
adc
sbb
add
pop
clc
leave
dec
scas
inc
mov
mov
pop
push
push
sbbl
aas
push
cli
jb
or
insb
jno
add
sbbb
ficompl
push
pop
mov
in
mov
push
mov
cli
test
inc
xor
and
mov
or
mov
pop
imul
jge
push
mov
sub
stc
lret
shll
mov
out
cld
insl
mov
adc
gs
scas
hlt
imulb
inc
add
movsl
xchg
push
mov
mov
imul
mov
mov
cmpsl
imul
lea
ds
mov
not
or
cmp
adc
daa
pusha
call
and
add
imul
negl
ret
jo
sub
inc
mov
inc
int3
push
push
fldl
cmpb
stos
in
addl
jmp
xor
mov
movzwl
mov
stos
add
sub
or
sub
dec
adc
mov
out
fwait
mov
add
add
mov
jo
mull
jmp
add
pop
pop
js
nop
inc
stos
dec
lods
push
lea
push
dec
idivl
jmp
push
add
sti
cmp
add
sbb
cmp
cmpsl
pop
push
cmp
in
push
into
mov
test
mov
arpl
xor
sub
add
and
and
push
mov
cs
push
outsb
xorb
sub
popf
int3
sub
sahf
nop
out
mov
shl
push
or
dec
pop
dec
pop
pop
mov
sbb
popf
cmp
sti
pop
fdivrp
stc
lret
xlat
lods
testl
add
xchg
or
inc
popa
and
pop
sub
mov
adc
add
pop
push
loopne
jmp
cld
dec
out
arpl
iret
mov
and
inc
addr16
and
xchg
add
fmul
das
dec
push
dec
xor
in
mov
add
imul
add
fisubrs
add
jmp
dec
pop
call
xor
cmp
pushl
popf
fisubs
lahf
adc
shrb
out
lock
sub
out
adc
dec
mov
fdivl
fstl
frstor
pop
outsb
or
mov
cmc
not
jg
lods
pop
inc
sahf
out
lds
pop
mov
aaa
jns
movsb
mov
pop
pop
imulb
mov
cmp
jbe
jp
jp
xor
dec
jmp
mov
ljmp
and
mov
cmpsb
int
aas
mov
and
xchg
sub
xor
mov
out
stc
popf
js
ret
jmp
push
jge
or
add
sti
jmp
xor
push
add
jmp
shl
test
cmp
add
jnp
sbb
add
cmc
sub
mov
push
cwtl
push
and
je
sub
jg
daa
and
dec
mov
ss
not
cmp
sbb
out
mov
inc
testb
call
xor
mov
cmpsl
aam
cmp
mov
add
loop
inc
mov
push
mov
mov
in
xor
adc
fstl
cmp
dec
cmc
sti
cwtl
icebp
jae
daa
jp
mov
loop
sbb
test
fs
fbstp
test
pop
ds
rcll
shr
outsl
mov
ja
in
add
adc
lret
jg
jns
mov
iret
das
inc
ds
mov
in
lock
sub
sub
dec
inc
pop
sti
sub
ret
push
fsubl
lcall
cs
mov
or
xorb
arpl
decb
pop
pop
bound
add
xchg
movl
dec
inc
adc
jmp
and
test
pushf
add
fwait
lret
mov
cmp
imul
fsubrl
repz
dec
stc
lods
in
add
sub
ret
movsl
int
mov
lret
or
orl
scas
insl
loopne
mov
out
pop
int3
dec
push
fcmovnbe
rolb
es
js
pop
pop
push
dec
roll
add
jp
add
mov
pop
ss
sub
add
imul
jmp
nop
xor
in
or
or
dec
push
in
enter
shr
push
lods
pop
ret
sbbb
add
pop
xchg
sub
scas
jbe
cs
xchg
pop
and
mov
xchg
scas
and
jle
jno
insb
andl
roll
out
inc
sahf
pop
ja
add
or
add
sub
cmc
push
aas
gs
mov
pop
add
das
cltd
call
mov
testl
cmp
rcrb
jns
adc
add
mov
insb
inc
dec
inc
loope
das
lods
mov
cli
call
orl
xchg
push
or
sub
dec
jmp
sbb
add
out
ret
mov
inc
clc
call
test
shlb
mov
fcom
pusha
xor
pop
dec
mov
aad
pop
pop
mov
mov
aad
movl
fisubrl
daa
mov
and
mov
dec
xchg
mov
call
dec
or
popa
test
mov
dec
add
jmp
pop
jno
mov
jbe
iret
roll
popa
out
and
cmc
pop
ret
loop
adc
repnz
ljmp
in
stos
shrl
inc
cmp
xor
lods
rolb
push
jle
orl
xor
cltd
ret
mov
sahf
dec
shr
and
cld
xchg
xchg
add
flds
movsl
inc
loope
loopne
or
dec
mov
mov
icebp
dec
dec
movsl
sub
mov
imul
mov
lahf
add
or
inc
inc
mov
cmp
nop
inc
push
add
push
jns
add
sahf
mov
test
es
mov
jg
in
jecxz
cld
jns
pop
cli
loop
sbb
pop
and
addl
shrb
sub
push
dec
xor
pop
vpcmpgtb
jl
inc
push
pop
in
leave
xor
xlat
inc
cwtl
movsl
mulb
pop
cld
adc
dec
aam
cmp
add
mov
daa
std
mov
jmp
cmp
imul
jns
shrl
shlb
cmp
push
add
mov
or
pop
not
xchg
and
int
repz
lret
and
jnp
cmpb
rorb
xor
jbe
adc
cmp
out
enter
sub
cli
and
mov
frstor
pop
sub
jae
rclb
mov
nop
dec
stc
das
push
push
mov
out
push
sbb
jmp
dec
inc
dec
jmp
subb
sub
shr
and
sub
add
outsb
das
call
xchg
dec
add
push
or
int3
xor
cmc
jnp
inc
xchg
test
nop
mov
mov
add
push
das
xor
shrb
pop
mov
adc
pop
push
pop
mov
inc
pushf
inc
dec
push
daa
adc
sbb
adc
inc
lods
jle
jo
xchg
push
xor
cmp
mov
push
mov
push
pop
adc
int3
loopne
in
sub
nop
add
xchg
jge
xor
mov
dec
rolb
mov
add
sub
aam
sub
aaa
js
push
addl
push
adc
or
imul
mov
ljmp
cmp
mov
test
test
adc
inc
std
ficomps
cli
loop
into
dec
aas
fldt
ds
jne
or
lds
push
negb
bound
push
mov
inc
sbb
cmovnp
or
mov
sti
lea
cmp
pop
js
out
call
mov
inc
cmp
inc
add
out
pop
xor
mov
pop
pop
neg
mov
scas
jmp
loop
inc
loopne
or
adcl
push
mov
test
ret
scas
inc
jne
pop
xchg
mov
xor
jmp
mov
jns
mov
clc
or
lret
adc
add
jmp
sub
jmp
pop
push
shl
ja
lods
pushf
xchg
adc
add
sbb
lahf
lods
iret
cmc
push
fstps
push
pusha
mov
jb
mov
or
cmp
jae
sub
loop
inc
push
pusha
adc
xchg
movsb
cli
adc
jne
lahf
pop
jle
sub
xchg
neg
add
push
mov
shl
test
jmp
inc
mov
mov
adc
add
jg
sub
push
cmpsl
push
or
pop
sub
dec
or
jmp
fisubrl
or
push
add
cld
add
mov
mov
andb
fs
dec
adc
xor
xor
test
movsl
dec
mov
cltd
lahf
sarb
repnz
das
cmp
int3
mov
pop
lods
mov
jmp
add
in
in
mov
adc
cwtl
dec
or
mov
or
test
adc
out
xor
mov
test
sti
or
pushf
test
imul
add
int3
cmp
xchg
pop
mov
sub
jp
jns
daa
fsubrl
or
negl
pusha
mov
lods
add
jae
aaa
sub
cmpsb
jmp
dec
adc
pop
or
roll
xor
aas
lds
mov
pushf
movsb
test
bound
mov
cmpsb
outsl
xchg
test
sti
cmp
or
mov
pop
and
dec
inc
jl
sub
jb
push
push
jmp
add
adc
cmp
shll
mov
cmp
cmp
pusha
js
hlt
sub
sbb
fs
adc
mov
adc
push
cmpsb
sub
pop
xor
jo
cvtps2pi
dec
daa
out
pop
jo
jp
sbb
add
stos
cltd
or
xchg
fmul
out
nop
cmp
mov
dec
adc
aas
icebp
test
cli
inc
shl
in
mov
ljmp
and
mov
jge
mov
add
das
mov
pop
mov
jle
sbb
cld
shl
add
mov
jmp
sbb
lock
jmp
jne
xor
test
cwtl
adc
sub
pop
push
xor
add
popf
add
or
jmp
inc
nop
pop
dec
push
les
mov
mov
faddl
mov
testl
icebp
aad
pop
mov
movsl
mov
lret
inc
adc
adc
scas
lret
std
and
stos
or
pop
add
aad
add
push
or
stc
xor
add
enter
cmp
movsb
or
popf
sbb
arpl
xchg
lret
pop
das
das
mov
push
lds
jecxz
mov
pusha
cmp
daa
aad
push
div
inc
movsb
nop
mov
xchg
int3
js
clc
and
rorl
bound
add
jmp
lds
insl
add
dec
add
xchg
or
xchg
decb
xlat
and
xor
xor
push
inc
fistl
push
push
int3
push
out
inc
sbb
sbb
push
inc
dec
push
clc
call
sbb
rolb
xor
adc
xor
mov
push
push
mov
mov
data16
pop
jb
and
and
mov
adc
lret
data16
pop
std
call
out
ret
xchg
outsl
jl
cmp
das
pop
pop
xor
jge
lods
and
adc
rcl
xchg
lods
daa
int
sar
aas
or
inc
mov
decb
mov
sbb
sbb
mov
repnz
aam
lds
aam
xchg
jl
inc
add
frstor
mov
cmp
push
nop
or
xchg
xchg
xor
jg
icebp
leave
add
loop
jmp
movsb
mov
call
jns
lret
sub
das
repnz
in
inc
jmp
inc
fwait
pop
and
add
mov
iret
dec
sub
jns
xor
or
test
or
pop
cmp
stos
inc
enter
addr16
xor
jmp
jne
dec
add
dec
addb
add
and
sub
inc
mov
std
enter
mov
push
std
lret
or
and
xchg
and
ret
push
mov
cmp
mov
cld
fsts
fsubs
lahf
mov
jmp
std
iret
scas
and
xchg
push
mov
inc
mov
pop
pop
insb
cmp
xchg
pop
js
add
mov
and
xchg
vmread
mov
mov
fstl
test
jne
mov
mov
push
test
loope
data16
les
cld
pop
pop
ret
std
sub
mov
pop
ja
popa
test
mov
pop
mov
and
sahf
repnz
enter
pop
pop
mov
out
pop
cmp
sbb
cmp
aaa
cmp
or
xor
cs
sbb
push
adc
sub
dec
adc
jnp
jo
lret
jl
addr16
cwtl
fisttpll
adcl
jmp
xor
enter
xchg
fisttpll
roll
ds
or
inc
cmpsb
xchg
and
add
sub
adc
inc
jmp
or
mov
xchg
imul
fildl
arpl
arpl
inc
sarb
or
lods
nop
push
pop
or
cmp
add
jo
xor
ret
jecxz
xchg
mov
stos
xchg
fnsave
fcomps
int3
not
rorb
enter
xchg
push
fldl
sub
fdivs
xchg
push
push
mov
pop
sub
sbb
pop
and
mov
std
fwait
xor
in
ss
fs
bound
clc
pop
xchg
add
int
das
or
push
insb
adc
push
add
aad
jg
jns
cld
push
outsb
jmp
cld
ljmp
add
aaa
xchg
and
out
mul
and
inc
jge
cs
jecxz
jmp
mov
test
imul
out
mov
ror
loopne
sahf
add
leave
std
movsb
lahf
in
or
pop
iret
subb
mov
add
sti
adc
addr16
sbb
push
push
sub
adc
add
jmp
shrl
inc
fdivrl
mov
inc
pop
int
sub
popf
repz
and
and
xor
pop
pop
cmpsl
dec
movl
sub
lret
and
or
pop
cmp
mov
cmp
mov
push
cmp
mov
mov
pop
mov
and
pusha
pop
pop
sub
sub
add
aad
insb
sbbb
cmp
add
and
scas
or
pop
shll
xchg
clc
mov
test
mov
testl
in
loop
xor
pop
cmp
push
je
in
pop
mov
pop
cmpsb
or
clc
les
and
mov
sub
cmpsl
pop
or
adc
sbb
rorb
iret
inc
dec
icebp
repnz
sub
stos
call
cmp
push
dec
or
xlat
sbb
mov
sbb
inc
or
or
jg
xchg
or
push
push
mov
jae
push
out
add
inc
sahf
and
test
sub
pushf
lds
xorb
pop
cmp
mov
sarb
ljmp
sar
adc
sbb
loopne
mov
dec
mov
inc
out
mov
hlt
add
and
mov
notl
daa
and
add
in
loopne
jmp
lds
and
call
jmp
push
cmpsb
jmp
pop
cli
and
sbb
clc
jmp
xchg
pause
dec
stos
and
test
adc
mov
dec
sub
int
inc
dec
test
cli
ljmp
cmp
inc
sahf
jae
int3
loopne
mov
sub
sub
pop
xchg
loop
push
rorb
xchg
insl
add
add
ret
dec
jl
ds
jl
and
sub
or
lods
cs
cmc
cmp
mov
ljmp
lahf
stos
jne
mov
xchg
adc
das
push
pushl
jecxz
lret
cltd
sarl
adc
fdivrl
or
xor
pop
cld
test
and
pushf
sbb
popf
or
xchg
rcr
or
shl
inc
scas
adc
in
or
cmpsl
adc
add
adcl
repz
mov
jo
jle
xchg
cwtl
fists
pop
pop
testl
dec
jne
daa
imul
and
pop
ljmp
ljmp
add
pop
cmpsl
sub
add
and
pop
sub
sbb
add
lret
test
xchg
push
cmp
int
inc
and
pop
pop
int
clc
insl
mov
push
cli
fsubrs
inc
sti
std
out
mov
adc
mov
jns
sub
sti
xchg
pop
sbb
sbb
lret
testb
cs
outsb
dec
xor
inc
jecxz
clc
or
imul
jnp
loop
inc
cli
push
shr
xchg
loopne
pop
jl
inc
pop
jmp
push
dec
mov
shll
inc
mov
ds
mov
jmp
cmp
pop
pop
mov
or
das
clc
mov
sarb
mov
push
add
push
mov
xor
pop
pop
call
push
stc
pop
sub
fldcw
xor
push
ds
jle
aas
loope
or
or
add
dec
jbe
add
add
add
test
mov
gs
push
add
ljmp
add
enter
mov
popa
movswl
mov
jl
cmpsl
cwtl
or
inc
pop
mov
and
frstor
or
pop
push
add
push
push
adc
ljmp
or
clc
roll
xchg
add
lea
not
xchg
mov
cmc
ds
js
out
leave
add
inc
push
push
repnz
pop
jnp
mov
mov
cmpsb
pop
daa
dec
pop
xchg
cmpl
mov
pop
inc
jo
push
popl
pop
push
push
mov
push
jmp
add
and
inc
cmp
pop
mov
add
loope
sub
sub
pop
inc
stos
sub
test
cmpsb
push
dec
cld
mov
jne
push
les
cmp
inc
fcompl
xchg
stos
and
fisttpll
inc
and
push
dec
data16
push
jb
pop
pop
push
in
pop
add
inc
or
fs
sub
xor
adcb
add
push
cmc
movd
ret
xchg
mov
pusha
imul
stos
js
sbb
mov
mov
push
push
jp
xor
inc
mov
add
push
mov
enter
lret
and
sbb
out
in
adc
cmc
cmpsb
push
push
push
sbb
and
vmread
adc
xor
mov
or
pop
push
je
xlat
jmp
inc
fwait
mov
mov
sub
in
call
inc
and
push
out
je
add
testb
imul
mov
les
add
jmp
mov
pop
xor
fldenv
or
leave
and
ror
pushl
ret
jmp
sub
lds
cltd
add
push
ret
icebp
sarb
shrl
dec
out
or
push
push
adc
cmp
push
xchg
adc
pop
hlt
mov
fs
adc
int
lea
push
sub
push
push
push
or
rolb
xor
lock
add
or
cmpsb
pop
cmp
call
cmpl
jmp
mov
ret
jmp
stos
ss
pusha
push
push
dec
stos
sub
gs
in
inc
or
push
xor
xor
test
sahf
push
adc
loope
and
ret
add
lds
add
adc
ljmp
cmp
pop
sub
pop
jbe
fpatan
pop
mov
pop
xchg
les
fnstsw
push
cmp
dec
add
arpl
dec
mov
in
pop
cvttps2pi
add
push
call
gs
push
mov
call
push
loop
mov
daa
sub
mov
call
or
fisttpll
scas
sarb
sub
shrl
nop
roll
jno
xchg
dec
jmp
testb
and
sbb
aas
lods
lock
inc
jmp
mov
jbe
add
repz
add
push
push
cmp
rep
sub
inc
out
push
or
test
out
out
adcb
iret
dec
sub
dec
das
push
in
mov
jmp
mov
lahf
ljmp
jae
jb
inc
add
std
rolb
lods
loopne
scas
jmp
pop
lods
arpl
xor
je
jg
sub
mov
pop
add
mov
faddp
sub
cmp
loopne
add
aaa
xor
into
cwtl
outsb
xlat
xor
das
add
pusha
add
mov
in
addb
inc
and
es
pop
add
push
cmp
pop
fs
or
js
inc
leave
dec
aam
scas
sub
dec
dec
imul
orb
ja
dec
mov
push
push
mov
test
push
vmovntpd
out
and
add
ret
into
popa
aam
jp
fdivrs
ret
pop
lods
jmp
rolb
roll
push
shl
dec
dec
rorl
sub
in
cmp
repnz
mov
fimuls
cli
push
mov
es
lcall
or
js
lahf
mov
stc
dec
adc
cmp
fucomip
mov
adc
cmpl
fnstcw
mov
mov
mov
into
rcl
sti
pop
jecxz
or
push
test
out
jg
lea
jmp
imul
ds
pop
pop
addl
sbb
aas
adcb
popa
cld
ret
jae
push
jns
adc
pop
sub
cli
xchg
imulb
mov
push
add
cmpl
xor
inc
mov
scas
mov
daa
adc
push
push
dec
stc
cmp
or
jg
mov
push
push
loop
sbb
mov
dec
or
aam
push
and
lock
inc
adc
ret
sbb
daa
iret
dec
cs
ljmp
imul
push
mov
xchg
inc
add
mov
add
pushf
sbb
inc
inc
xor
or
roll
push
mov
mov
mov
ds
movsb
ret
push
jo
xchg
pushf
outsb
dec
ja
in
mov
popf
ljmp
js
and
clc
xchg
push
add
add
cmp
add
xor
pop
mov
mov
in
inc
lahf
out
sbb
js
mov
xor
pop
cli
jns
in
sbb
stc
inc
pop
add
hlt
or
add
imul
cmp
pop
jmp
loop
mov
mov
jge
cmp
fisttpll
jmp
inc
lock
cwtl
push
rolb
sub
vpmuludq
adc
jne
cmpsl
jbe
dec
fsubrs
lahf
loop
push
xchg
xor
mov
shr
add
decl
adc
jecxz
les
pushf
xlat
mov
jge
xchg
aad
pop
push
std
subb
icebp
lret
mov
jo
push
xchg
stos
jecxz
pop
ret
dec
lcall
gs
leave
cmpsl
push
in
sub
jmp
shl
xchg
or
xchg
xor
cmp
out
imull
or
pop
repz
xchg
and
pop
adc
enter
dec
inc
jl
or
mov
jns
or
cmp
add
and
scas
mov
push
adcb
adc
jmp
xorb
out
dec
aas
imul
lret
clc
jmp
and
lahf
cld
imul
aas
sbb
xchg
dec
int3
ss
jo
mov
add
dec
jl
aas
outsl
bound
sahf
lret
xor
inc
notl
in
ret
fists
mov
inc
out
and
sbb
or
andb
inc
and
dec
not
pop
jmp
das
out
adc
push
push
adc
cli
dec
xchg
mov
xchg
add
std
adc
icebp
xchg
rorl
out
mov
xchg
jne
xchg
dec
mov
andb
xor
jg
dec
hlt
push
in
push
addl
xchg
outsl
add
jle
mov
out
pop
out
mov
rorb
xchg
gs
pusha
shrb
mov
dec
out
mov
push
addb
jno
add
and
xor
xor
insb
fwait
cmpsl
loopne
mov
sub
pop
or
hlt
xor
xor
mov
cs
sub
test
ss
lret
dec
or
rcr
out
cs
arpl
add
add
jmp
cmp
xchg
mov
out
int
das
repnz
cwtl
fsubrl
jmp
add
sub
daa
jae
pop
xchg
fwait
add
or
movsb
xchg
xchg
push
sub
sbb
and
sbb
ljmp
roll
xchg
dec
decb
int3
inc
mov
add
xor
test
test
cmp
push
xor
cltd
push
and
mov
bnd
fimuls
pop
xchg
push
jmp
push
push
push
dec
pop
lock
loope
mov
add
mov
or
pop
cmc
iret
xchg
movsl
ljmp
inc
jne
imul
dec
push
pop
jmp
test
mov
mov
push
out
pop
add
cmc
enter
xchg
out
cmpsb
jns
or
mov
xchg
js
lock
adc
lahf
pop
ret
imul
xchg
in
mov
aam
pop
in
test
call
add
roll
push
pushl
call
cli
xlat
shl
sub
jb
test
pop
pop
xchg
not
orl
jmp
stos
push
or
loope
dec
fsubl
mov
inc
jmp
mov
shrl
repz
ret
mov
shrb
or
pop
pop
lock
cmp
pop
cmpsb
clc
insb
pop
xlat
shrl
push
roll
jp
cmp
xchg
imul
in
je
daa
xlat
pop
mov
aaa
jmp
push
sbb
sbb
jo
leave
fimull
scas
cmpsl
dec
loop
jle
lods
addr16
mov
rcll
loopne
mov
mov
cmp
aaa
jle,pt
mov
clc
fisttpl
lds
aam
mov
out
outsl
and
lods
loopne
lock
add
xor
dec
add
sbb
adc
mov
xchg
cwtl
in
out
decb
arpl
pop
ja
sub
add
into
xchg
dec
xor
movsl
les
lea
mov
pop
hlt
lahf
pop
pop
adc
iret
push
out
hlt
inc
xor
cmpb
iret
stos
ret
lods
inc
pop
pop
in
mov
cmp
cmc
test
add
aaa
mov
jmp
push
push
hlt
mov
and
push
fnstenv
mov
inc
rorb
loopne
cwtl
pop
cld
jp
hlt
add
jmp
mov
dec
or
aad
jge
popf
add
mov
add
and
mov
mov
add
add
js
xor
add
stc
or
fcoml
nop
jmp
xchg
dec
addr16
add
and
cli
mov
cmp
pop
inc
add
lods
xchg
or
test
adc
in
stos
push
cmp
mov
push
lds
test
and
sub
xor
cmp
add
loopne
and
add
jp
les
or
sbb
mov
rolb
shlb
sub
hlt
jmp
push
data16
mov
pop
sub
cmpb
add
adc
inc
mov
bound
sbb
call
add
jmp
popf
xlat
call
shl
ret
or
or
dec
fs
call
cmp
xchg
push
cmc
mov
add
and
sub
and
add
pop
xchg
std
xchg
lret
dec
shrl
cmp
js
int
cmc
cli
adc
test
test
push
push
mov
mov
adc
insl
jmp
and
jmp
scas
pop
jne
fldcw
repz
icebp
sub
inc
push
dec
jae
adc
jo
dec
push
adc
mov
ja
mov
shl
cli
orb
cld
loope
push
sub
pop
ds
popf
fcompl
mov
test
mov
jae
cwtl
cwtl
js
jp
mov
test
jmp
push
mov
add
xchg
addb
imul
cmp
loope
out
push
jp
or
imul
and
pop
idivb
xchg
and
call
or
cmp
mov
and
pop
lret
push
test
mov
or
popa
cmp
test
adc
sub
xchg
push
mov
ffreep
lods
and
insb
sbbb
xlat
dec
inc
jo
lods
inc
pusha
pop
sbb
leave
cmc
movsl
pop
or
pop
push
out
dec
inc
push
icebp
in
xchg
mov
xchg
sbbl
pop
pop
xrelease
or
mov
outsl
out
lods
adc
mov
scas
jl
pop
pushf
or
js
and
pop
call
cli
push
out
sub
inc
popf
push
mov
into
sbb
and
out
xchg
aam
and
xor
bound
lock
aam
mov
out
push
cli
inc
pop
rcrb
lret
jno
jns
out
mov
sahf
imul
push
jecxz
and
cmc
pop
xor
dec
push
cmp
push
mov
lds
stos
leave
ja
mov
xchg
aad
clc
into
add
xor
and
repz
push
jmp
mov
outsb
add
ds
jp
mov
shrb
sub
and
push
lcall
xchg
cmc
les
dec
pop
mov
insl
xor
fdiv
jmp
popl
sub
scas
push
mov
cmp
cmp
and
ds
push
call
out
inc
shrb
push
pop
sbb
sub
ja
jmp
pop
mov
arpl
push
shl
inc
nop
jbe
js
outsb
gs
mov
add
into
adc
or
and
scas
push
cli
mov
add
sbb
mov
add
call
cmc
inc
insb
test
pusha
add
loop
addb
ret
sub
pop
inc
adcb
push
mov
ffreep
or
mov
adc
bound
inc
or
jno
mov
nop
inc
pop
inc
xor
hlt
imul
jb
lcall
pop
adc
xor
lods
rclb
ret
mov
mov
xchg
hlt
arpl
insl
push
push
push
inc
andl
xor
insb
xchg
std
mov
dec
or
jp
xor
repz
sub
imul
xor
hlt
pop
and
aas
aas
int
lods
sub
push
jbe
or
test
and
outsl
sbb
or
das
iret
in
nop
aad
and
adc
rcrl
add
inc
xchg
push
ror
jo
push
xchg
stos
and
or
jmp
std
inc
adc
and
and
mov
popa
jno
and
stc
push
not
add
push
xor
adc
popf
mov
xchg
push
pop
pop
ss
adc
push
cwtl
and
xchg
or
add
push
cmp
sbb
adc
adc
dec
xchg
loopne
dec
cmpsb
or
push
cmp
mov
cmp
mov
mov
pop
enter
testb
mov
pop
pop
lock
push
inc
call
test
movsb
sti
jecxz
pop
cmp
push
inc
and
stc
add
xor
push
arpl
pop
xor
lcall
pop
out
and
push
add
mov
or
orb
daa
popa
mov
or
jo
pusha
ja
fildl
idivl
mov
ljmp
sahf
xchg
movsb
mov
insb
or
sub
lock
leave
cmp
jae
cli
lods
pop
insb
mov
dec
es
push
add
lret
adc
hlt
jns
add
mov
and
add
sar
call
xchg
mov
jl
sbb
nop
sub
jo
in
or
xor
xlat
mov
sbb
fisubrl
repnz
lret
push
xchg
jmp
stos
pushf
xor
xor
push
push
mov
sub
pop
dec
fisubrl
add
lds
std
push
popa
sub
es
adc
cli
rcrb
add
out
or
je
std
jae
dec
aam
dec
jmp
ss
arpl
dec
dec
mov
xchg
ja
push
lock
mov
std
adc
adc
and
dec
sub
clts
pop
jl
push
xor
loop
jb
adc
add
cmp
add
mov
xor
lea
bound
jmp
or
cwtl
gs
es
fs
sbb
jge
das
hlt
pop
aas
push
push
jp
push
and
and
mov
or
ljmp
out
inc
inc
mov
dec
mov
jle
xor
or
je
fnstsw
jg
add
inc
pop
push
push
pop
insb
repz
fcoms
mov
inc
pop
pop
xchg
idiv
loope
dec
imul
sub
aas
or
cs
jl
pop
ficompl
aaa
add
mov
dec
idivl
pop
pop
lret
fldenv
call
test
repnz
sbb
rorl
insb
nop
cmp
add
inc
dec
or
sub
fucomi
das
gs
or
push
arpl
add
bound
xchg
lret
push
mov
aaa
fs
popf
std
es
jp
rolb
push
push
cmp
loop
movsl
xor
arpl
ja
dec
jge
or
ja
jl
dec
orb
loopne
aad
je
shll
in
mov
mov
sub
adcl
out
ja
out
in
sbb
mov
subl
movb
pop
mov
mov
xchg
jno
bound
out
es
add
inc
dec
push
sbb
adc
cli
xor
xor
insl
xor
into
cmpxchg8b
jae
out
ror
push
push
add
inc
inc
in
lods
inc
pop
test
xchg
sbb
icebp
outsb
mov
hlt
and
out
dec
jne
xchg
imul
xchg
mov
mov
cmp
in
pop
cmc
mov
xor
xor
ljmp
fsubl
push
mov
stc
jmp
cmpsb
jge
mov
adc
rorl
push
mov
push
mov
sbb
je
out
mov
sub
xor
inc
sub
jg
loopne
and
adcb
sub
out
icebp
test
push
cmp
sub
mov
addl
xor
pop
push
jmp
repz
add
and
sbb
cwtl
sbb
xchg
cmp
jnp
cs
add
and
int
lods
cmc
xchg
pop
sub
add
sbb
hlt
iret
mov
stc
sbb
shlb
jle
inc
das
sbb
pusha
ljmp
push
or
pop
icebp
mov
scas
jne
fcmovb
sub
leave
lea
mov
adc
ljmp
push
mov
mov
divl
mov
or
push
push
pop
mov
fidivs
cmpsb
std
mov
push
jmp
jns
add
jmp
or
lock
xchg
jmp
icebp
mov
aam
daa
pop
mov
imul
xorps
push
outsb
inc
mov
adc
std
std
add
or
fisttpl
imul
jbe
push
call
les
repz
lret
add
ret
mull
aas
and
out
adc
stos
jl
cmpsb
sub
rcrl
adc
mov
ja
sbb
pop
loope
sub
mov
pop
jne
mov
or
push
push
les
jmp
pop
icebp
sub
adcl
dec
add
inc
add
leave
cmp
add
test
add
iret
inc
ret
xor
lds
outsl
mov
and
add
dec
outsl
pop
pop
jo
movl
jle
lds
negl
decl
inc
cmp
adc
push
mov
push
int
adc
dec
jmp
jae
or
or
cmc
xor
fadd
and
inc
pop
sti
pusha
mov
aad
test
repnz
or
leave
fdivrp
arpl
cltd
shll
fnstcw
jmp
mov
ljmp
xor
or
aaa
sti
cwtl
xchg
push
es
outsl
cmp
out
push
mov
cld
xchg
pop
xchg
pop
orl
push
add
lahf
pop
mov
add
sub
jno
je
and
lahf
inc
notb
jl
adc
arpl
sub
jmp
repnz
ret
pop
ja
jne
push
int3
sar
mov
sbb
jmp
push
dec
outsb
mov
xchg
lahf
pop
call
sti
lret
ja
mov
cmp
fiaddl
inc
inc
fcomi
add
rcrb
hlt
insl
lcall
pop
jmp
pushf
jle
pop
cmp
sbb
fistpll
push
clc
pop
push
jmp
push
jp
cmpb
add
dec
sub
cltd
insb
das
out
ljmp
xor
subl
enter
mov
ljmp
ds
xchg
mov
pop
jnp
mov
xor
repz
fdivrl
jmp
data16
and
cmp
shrl
cmp
div
out
xor
popf
push
mov
jno
dec
stos
je
ljmp
cli
mov
adc
lds
jns
jecxz
sbbl
pop
popa
sub
adc
xor
or
pop
adc
jno
gs
movsl
test
and
mov
imul
mov
idiv
movsb
mov
mov
test
pop
fldlg2
pshufw
outsl
or
bound
xor
add
add
add
popf
push
push
into
cltd
cmp
pop
lret
add
mov
ss
sbb
dec
xchg
aad
notb
test
or
jmp
or
add
add
in
das
sub
mov
lock
dec
dec
push
add
clc
imul
mov
jle
les
mov
dec
push
loopne
pop
movsl
sbb
cmc
pusha
outsb
std
out
fsubrp
negb
stc
adc
stos
xor
xor
inc
sub
inc
add
cmpb
scas
or
xchg
sahf
xchg
push
xor
xchg
cmp
loop
xchg
pusha
mov
test
xchg
aad
bound
into
or
arpl
or
lret
daa
pop
pushf
fstl
lahf
lret
xchg
faddl
xor
dec
inc
xchg
mov
insb
pop
pop
sub
sbb
imul
fucom
mov
ficompl
sti
jae
fucomip
push
imul
fcompl
test
jmp
popa
mov
cmp
push
subl
sub
add
sub
jmp
out
cld
dec
hlt
adc
pop
pop
sub
add
loopne
pop
popf
push
imul
mov
sub
testl
adc
add
outsl
inc
mov
mov
pop
mov
inc
and
xor
mov
pop
xor
movsb
and
add
fistpll
pop
xor
jmp
add
cmp
fildll
push
mov
or
in
mov
xchg
mov
pop
ljmp
pop
dec
jmp
push
mov
dec
pop
cwtl
lods
sub
xchg
test
add
adc
mov
and
sbb
and
mov
mov
add
push
push
and
pop
sarb
pusha
cwtl
cmp
mov
lock
pop
sub
mov
mov
jmp
ja
clc
pop
pop
lods
adc
lods
nop
pop
xchg
fnsave
daa
jnp
aad
and
loope
and
pop
insl
aam
add
sub
inc
or
and
dec
sbb
push
jne
sti
inc
addr16
jle
ret
add
inc
mov
dec
pop
dec
ljmp
inc
lock
das
push
push
or
pop
or
adc
lcall
or
cmpl
mov
fadds
or
jmp
inc
and
adc
push
lods
inc
lret
sbb
dec
adc
in
daa
aas
jle
sub
cmp
xchg
in
scas
cmp
data16
mov
dec
push
ds
sub
sub
jnp
xchg
in
or
popa
scas
mov
popa
adcb
cmpb
add
test
sbb
adc
and
xor
inc
mov
inc
mov
cmp
ret
pop
add
ljmp
std
mov
or
jae
xchg
sub
pop
add
xchg
jno
ds
lock
xchg
fstpl
mov
ja
push
jg
push
testl
out
adc
sub
sub
movsl
xchg
xor
pusha
insb
pusha
bound
fisubrl
jae
lret
sbb
push
mov
lret
cmp
sar
sbb
in
sbb
dec
push
daa
and
mov
das
push
lret
mov
mov
jp
xor
sub
enter
sbb
push
inc
jmp
mov
jo
rcrl
mov
add
icebp
mov
xchg
out
loop
ret
cmp
sbb
jo
push
ljmp
push
add
adc
mov
or
lret
loop
and
cmp
add
pop
fcomps
cltd
and
xor
pop
dec
bound
out
cmp
repz
popa
sub
loopne
rcll
push
add
not
pop
add
sub
xor
mov
xor
mov
test
scas
cmpsb
sar
pusha
into
push
add
or
push
pop
leave
or
inc
pop
push
shlb
leave
mov
and
nop
or
lcall
dec
push
xor
enter
pop
xchg
rcr
insl
popa
outsb
in
sbb
pop
push
add
xchg
mov
je
fbld
aas
mov
add
dec
scas
jle
cwtl
dec
cld
pop
and
jge
add
push
or
cmpsl
pop
or
test
loope
add
das
ret
jge
push
jno
or
mov
mov
sub
or
imul
adc
lods
lcall
dec
add
aad
sub
jmp
push
fsts
cmp
inc
mov
mov
or
push
outsb
dec
std
inc
sub
or
inc
add
sub
in
inc
pop
jp
adc
imul
xor
mov
add
sub
subb
jmp
xchg
pop
negl
inc
in
lret
lret
int3
mov
popf
mov
and
dec
jns
inc
shll
mov
xchg
addb
inc
and
sbbl
cmp
pop
mov
dec
fists
jne
mov
sbb
shl
orb
push
lahf
lahf
and
mov
cmp
mov
les
push
movsb
cmp
add
dec
neg
dec
negl
jns
or
pop
mov
mov
push
nop
sub
jmp
jecxz
dec
dec
scas
sub
lods
dec
inc
jo
adc
jmp
mov
xchg
jo
xchg
aam
mov
pushw
pop
adc
nop
mov
xor
lock
ret
mov
dec
loop
pushf
push
fs
xor
push
ret
mov
in
divl
sbb
fwait
cltd
mov
outsl
sub
sub
sub
or
rcrb
mov
mov
xor
lret
orl
or
aad
fsub
imul
or
mov
pusha
shl
mov
out
jp
xor
fbld
sbb
jnp
cmp
or
ljmp
out
test
sub
clc
jno
or
and
pop
add
inc
int3
pop
test
in
ljmp
pop
mov
mov
cmp
movsbl
andl
fwait
xchg
add
mov
jmp
xlat
movsl
mov
xchg
in
mov
pop
pusha
or
xchg
insb
in
pop
xchg
jbe
aad
dec
mov
icebp
in
ds
lods
dec
and
test
jg
jns
bound
pop
leave
bound
sbb
das
leave
aam
ret
subb
xchg
sbb
mov
mov
aad
icebp
adc
push
or
mov
pop
sub
not
fxch
pop
pop
xor
sahf
mov
add
out
pop
divb
xor
add
push
jnp
call
jmp
ljmp
cmpsl
aam
stc
xor
sub
dec
xbegin
insl
fists
pusha
mov
or
jno
pop
xor
rorb
js
xor
mov
cmp
cmp
outsl
xor
sti
cmp
rcll
mov
dec
je
push
jmp
mov
inc
sahf
jle
xor
stos
ja
rcrb
stos
inc
inc
fs
xor
jecxz
jmp
mov
mov
pop
cmp
sbb
imul
inc
mov
or
jb
pop
push
stos
daa
sub
cs
add
jl
add
icebp
repz
test
popa
mov
iret
xchg
ljmp
or
cmp
inc
cltd
icebp
adc
xchg
sbb
test
inc
subl
loopne
push
mov
shl
push
and
das
int3
pop
mov
jae
and
mov
sub
cmp
or
cmpsb
es
movsb
dec
std
shlb
pop
jl
add
inc
into
pushf
and
inc
sub
fildll
add
repz
addl
mov
cmp
or
push
mov
mov
jmp
nop
mov
dec
rorl
adc
push
jg
js
leave
push
pop
xchg
movsb
out
sbb
pop
shrb
test
sub
xor
jnp
add
dec
push
mov
jbe
outsl
imul
or
pop
add
sub
js
jmp
test
mov
push
ret
mov
mov
iret
rcpps
and
subb
fildl
cmp
outsb
jmp
add
lods
xchg
jmp
orb
cwtl
push
orb
data16
cmpb
pushl
hlt
xchg
xor
filds
add
jmp
mov
xchg
movsb
fidivrs
dec
cmc
and
push
jnp
negb
inc
test
jg
ret
pop
sub
out
xor
cmp
sub
add
outsb
push
popf
pop
mov
sahf
iret
push
cld
jmp
inc
mov
mov
insl
scas
cmp
push
cwtl
inc
push
pop
pop
cmp
mov
inc
sub
jecxz
pop
or
rclb
inc
xchg
jl
add
in
sub
insl
lods
push
inc
pop
pop
mov
push
imul
inc
mov
push
sarb
popa
adc
jecxz
jg
inc
stc
xor
repz
push
std
stc
int
filds
jle
xchg
scas
pusha
jle
movsb
and
push
sti
movsl
aad
sub
sub
jge
sar
lods
push
jnp
ficoms
sbb
fisttps
dec
inc
sbb
jg
jp
jmp
out
mov
sub
stc
out
mov
inc
push
jmp
aas
and
inc
cmc
enter
daa
popa
aam
sub
rorb
mov
xor
out
adc
mov
arpl
pushf
jmp
adc
cmp
sub
ss
das
fstpl
cltd
push
sub
shr
scas
sub
and
jno
xor
add
sub
in
adcb
push
sub
pop
mov
mov
dec
mov
push
adc
hlt
es
fidivrs
sbb
lret
call
add
fdivr
lret
push
push
cld
pop
pop
mov
push
rorl
in
dec
cld
flds
or
or
lods
les
or
pop
std
dec
pop
mov
imul
std
mov
mov
push
nop
fcomp
and
cmp
xchg
cmc
call
clc
inc
jl
mov
jmp
outsb
daa
sbb
jmp
mov
movsl
mov
loope
or
int
push
popf
xchg
push
test
mov
add
pusha
aas
xlat
cmp
xor
sub
adc
loop
insl
stos
sbb
cmp
and
dec
inc
add
inc
jg
pusha
pop
cmp
and
cmpsl
ja
orb
dec
daa
dec
sbb
stc
push
xchg
fistpl
in
stos
xchg
bound
push
lret
and
shll
out
add
mov
imul
das
pop
pusha
ja
shr
cmp
repnz
ljmp
sbb
call
ret
testb
xchg
or
pop
les
cs
jo
add
aaa
jnp
jmp
lahf
push
add
inc
mov
mov
das
or
or
loope
bound
jnp
mov
adc
mov
outsb
and
stc
movsl
insl
jb
lds
jmp
int
test
test
dec
inc
xor
stos
clc
or
mov
add
adc
jp
in
pop
rorb
repnz
push
dec
in
jge
sbb
xchg
mov
inc
xor
das
push
mov
jle
icebp
cmp
or
into
sub
pusha
add
mov
call
loop
mov
mov
add
pop
fbstp
in
adc
adc
push
cld
push
inc
pop
push
xlat
and
and
loop
jne
and
aaa
stc
pop
pusha
pop
xor
and
sub
pop
aam
icebp
in
leave
jno
es
adc
xchg
not
dec
or
add
call
inc
sbb
sub
sbb
or
sbb
dec
inc
adc
aam
push
in
sub
adc
mov
clc
orps
jl
fnstsw
dec
dec
in
and
jb
js
add
imul
std
sub
jmp
data16
imul
mov
icebp
pop
xchg
push
dec
add
jmp
mov
sub
adc
mov
adc
cmp
aaa
and
sar
gs
inc
pop
cs
add
or
xchg
pop
mov
or
xor
or
pop
jp
and
daa
or
push
cmc
sub
mull
mov
shr
xchg
or
push
popf
imul
xor
push
shr
rolb
xor
adc
fucompp
je
xor
pop
pop
dec
addb
adc
iret
push
movsl
syscall
mov
push
or
sbb
pop
sar
jmp
mov
or
pop
push
mov
jns
in
mov
push
sbb
push
dec
dec
std
mov
add
sahf
pop
lock
aas
ja
cmp
mov
addb
subb
das
jmp
push
add
pop
mov
mov
jl
in
sub
sub
mov
push
add
add
or
ret
ss
lods
or
mov
mov
call
ja
cmpsl
sub
out
xchg
aam
sbb
shrl
lods
fists
test
std
sub
mov
fucomp
dec
inc
adc
loop
pop
sbbl
push
inc
lret
pop
push
push
sbb
inc
push
lds
jmp
ljmp
jg
add
lahf
dec
push
data16
jl
fadds
loopne
je
mov
arpl
dec
pop
aam
mov
push
andl
inc
push
outsl
leave
xchg
pop
mov
adc
sbb
add
mov
xchg
adc
dec
jae
cmp
xchg
cmpsl
inc
inc
lods
jns
pop
mov
dec
cltd
ret
inc
shlb
mov
or
sub
mov
ja
repz
adc
gs
dec
je
sub
adc
or
xlat
push
push
add
mov
cld
lret
or
pop
das
jne
push
and
push
in
mov
cli
into
mov
inc
rolb
pop
xchg
or
out
mov
jo
xor
cwtl
xchg
imull
dec
pop
jl
mov
pusha
lcall
adc
dec
inc
pop
stc
jmp
pop
push
jl
mov
mov
mov
movsl
sub
out
pop
xor
jmp
sahf
inc
jmp
ss
out
call
xor
mov
lock
lcall
jl
mov
mov
jo
imul
dec
sbb
pop
and
add
pop
xchg
dec
movsb
push
jne
xor
les
fistps
add
popf
mov
bound
push
inc
mov
push
les
cs
daa
fldcw
leave
add
inc
push
sub
dec
add
inc
add
cmp
push
pop
pop
push
lods
push
enter
xchg
push
pop
xchg
mov
add
ret
mov
or
clc
mov
scas
lret
xor
dec
mov
push
cs
adc
adc
int3
or
in
lcall
mov
iret
jmp
aad
ds
dec
rclb
lock
add
dec
add
cld
add
mov
jmp
push
push
shll
mov
dec
mov
sti
mov
inc
jle
filds
sub
or
outsl
push
test
lcall
mov
popf
pop
ds
lahf
push
stos
mov
cmpl
adc
lock
daa
or
jne
cmp
pushf
jno
xor
movsb
adc
adc
clc
mov
cwtl
sbb
xorl
mov
sub
mov
fnstenv
cmp
aam
out
pop
ss
and
movsb
cmpsl
mov
lods
dec
push
loop
outsb
adc
push
inc
push
xor
xor
fs
aaa
pop
enter
push
dec
cwtl
or
jecxz
or
add
jmp
push
inc
inc
xchg
enter
push
fsubrs
and
and
adc
mov
mov
pop
cmpsl
fnstcw
mov
add
dec
hlt
iret
add
cmp
jmp
add
int
xor
add
xchg
push
scas
xor
push
add
cmp
add
inc
test
lock
pop
sub
jb
add
and
xor
inc
scas
mov
and
ds
xchg
mov
push
pop
sahf
and
cmp
hlt
push
adc
inc
pop
jg,pt
cmp
fwait
push
and
cmp
call
cmpsl
add
std
add
mov
mov
cmp
bound
pusha
or
movb
mov
shll
aas
dec
stc
add
sub
xorb
mov
xlat
jge
in
pop
fdivrl
jp
fidivrl
jae
sub
adc
jne
add
xor
jbe
es
xor
xchg
insb
mov
aad
push
add
enter
imul
xor
cmp
mov
mov
add
dec
rcll
pop
sbb
xchg
mov
out
movb
jge
and
mov
add
mov
jnp
xchg
and
add
movsl
cli
pop
xor
cltd
add
popf
jp
pop
push
adc
or
scas
call
mov
cs
loopne
add
mov
test
sub
push
sub
or
sub
pop
push
jl
into
push
xor
mov
mov
or
add
pop
sub
dec
jnp
sbb
cmp
das
imul
push
sti
add
sub
jp
mov
sub
stos
add
imul
sbbb
or
mov
add
ljmp
add
xchg
rorl
in
or
add
jl
rcr
add
jle,pt
adcb
push
pushf
and
push
inc
push
fs
mov
add
ret
inc
xchg
xor
or
stos
lods
mov
add
insb
jmp
add
test
repnz
add
enter
testb
sub
cwtl
xchg
inc
add
jg
xchg
popf
cmpsl
jecxz
dec
fwait
sub
or
fwait
and
mov
adc
inc
ret
mov
pop
xchg
cmp
xor
pop
or
in
pop
jecxz
jge
inc
pop
arpl
sbb
push
call
cwtl
jns
mov
xor
shrb
push
stc
and
test
jb
sbb
aam
hlt
mov
test
sbb
and
test
sbb
flds
mov
dec
cli
fisubl
out
addl
seta
insl
add
fisttps
push
call
sbb
adc
inc
aad
stc
pop
mov
push
addb
mov
leave
jno
pusha
jmp
sbb
inc
fmuls
adc
popa
sbb
or
mov
daa
fs
loopne
jnp
adc
punpckhdq
jae
bound
sar
int3
cld
xchg
and
fwait
imulb
jecxz
out
cmp
lret
je
push
sub
jo
mov
mov
sbb
mov
cmpsl
push
mov
pop
dec
clc
and
cmp
pushf
add
int3
lcall
int
mov
adc
sbb
cmp
xchg
cmp
inc
add
test
sbbb
bound
inc
jo
mov
repz
fsubl
stos
lds
mov
push
in
xchg
add
inc
sbbb
sub
jnp
out
cld
fimull
fimuls
ret
add
js
or
mov
pop
idivb
jnp
add
cmp
fildll
xor
mov
mov
xchg
add
pop
outsb
das
nop
add
enter
and
xor
sbb
add
cmpsl
in
roll
mov
in
mov
pop
add
inc
call
dec
dec
or
xor
insb
lock
xchg
xor
add
mov
cld
dec
loop
xchg
jl
shlb
jno
shrb
xor
ja
btc
pop
movsb
add
addl
inc
stos
cmp
and
push
lock
aad
loopne
add
gs
arpl
or
ss
into
movsb
mov
dec
sbb
lahf
daa
xchg
add
test
jle
lock
adc
loopne
add
mov
cmpl
mov
sbb
pop
dec
xchg
cmp
cltd
add
into
rol
add
cmp
popa
cld
mov
mov
movb
mov
fcmovnu
push
dec
add
cmpsl
jle
push
scas
xlat
repz
adcb
gs
das
fldenv
jnp
sbbl
into
rolb
out
or
or
mov
pop
xchg
add
movb
sbb
mov
jecxz
mov
in
aam
xchg
cmp
jmp
lds
fnstcw
jo
mov
mov
mov
addr16
gs
out
jp
add
fs
pop
jl
addb
xchg
lcall
dec
cltd
repz
cmp
or
sbbl
jecxz
shrb
xchg
daa
nop
mov
lret
push
adc
mov
aam
mov
clc
pop
or
dec
repz
inc
std
stc
vucomiss
mov
imul
ljmp
sub
outsb
mov
leave
sub
cmc
pop
int3
xchg
mov
dec
or
or
mov
test
lds
loop
sub
add
andl
dec
imul
test
add
push
hlt
in
sub
movsl
lea
pop
and
ror
dec
sti
sarb
addr16
and
pop
lods
prefetcht0
sbb
inc
sub
or
test
sbb
iret
push
adc
aam
insl
es
mov
xchg
aaa
jne
mov
jo
shrl
xacquire
cs
sub
adc
pop
or
push
shrl
repnz
jne
pop
add
pusha
sub
fsub
and
add
jne
inc
push
add
addr16
es
add
nop
or
add
cmp
mov
data16
add
mov
call
jnp
xchg
enter
dec
shlb
push
ljmp
jmp
xlat
add
fstps
ljmp
mov
add
stos
adc
add
int
jl
push
repz
add
xchg
ds
pop
data16
jle
add
movb
mov
jbe
or
jge
add
mov
bound
test
xor
adc
xchg
mov
jae
dec
fstpl
push
jo
in
add
int
mov
pop
loope
mov
add
stc
ret
inc
pop
es
rolb
pop
and
or
jne
imul
mov
add
popa
mov
mov
xchg
mov
push
repnz
push
cld
je
add
xor
insb
decl
xor
mulb
flds
cld
add
sbb
mov
aaa
mov
add
mov
push
rcll
mov
bnd
fstpt
test
jae
pusha
mov
in
jno,pt
loopne
unpckhps
rolb
out
arpl
push
mov
mov
shl
mov
add
and
lds
mov
loop
test
or
jl
mov
loopne
imul
push
sub
jo
add
outsb
nop
or
jno
stc
add
iret
jp
jge
loope
lock
test
into
add
fldenv
inc
lods
xchg
sarl
add
sub
jo
les
push
fidivrs
rolb
adc
mov
pop
mov
add
inc
or
add
in
aad
xchg
into
jmp
subl
loope
pop
and
sbb
mov
xor
pop
rol
test
sbb
mov
rclb
xor
cwtl
xor
cmp
stos
in
ss
nop
sub
jb,pt
xorb
sbbl
sbb
ret
xchg
je
lcall
scas
push
popf
inc
mov
or
and
add
aam
add
in
push
dec
mov
push
sbb
out
enter
loopne
imul
out
ret
adc
add
sub
xorb
adc
mov
sub
mov
add
adc
arpl
popf
es
rcll
aas
and
sub
insl
inc
dec
mov
or
stc
jmp
subl
mov
and
lods
sbb
mov
scas
xchg
fists
enter
xor
cs
add
enter
sarb
inc
addr16
add
data16
popf
and
call
pop
orb
ljmp
pusha
scas
lods
mov
testl
mov
sbb
pop
lcall
or
pop
loope
and
cmp
add
add
push
addr16
sbb
jno
hlt
push
add
lock
daa
jg
adc
mov
insl
lahf
jne
lods
adc
ficoms
bt
mov
and
or
pop
lahf
adc
add
dec
push
rorl
dec
dec
push
std
push
adc
dec
add
and
adc
fldcw
clc
push
jmpw
loope
sarb
xchg
cmpsb
mov
push
mov
mov
scas
pop
cmpsb
add
sbb
dec
xchg
jnp
push
add
or
push
add
mov
push
in
sbb
adc
ss
push
mov
imul
push
orb
jle
lea
add
xchg
loope
or
xchg
fs
fildl
or
mov
sbb
mov
jnp
sbb
pop
sbbb
or
or
sbb
adcb
int3
movb
push
daa
xor
xor
andb
xchg
add
mov
xor
add
out
dec
add
sub
std
mov
nop
adc
or
and
insb
das
outsb
xlat
xor
js
lea
pop
add
mov
adc
adc
mov
xlat
sbb
mov
add
mov
xchg
aas
test
or
jmp
adc
inc
adc
clc
adc
mov
mov
mov
add
add
into
xorb
mov
fists
dec
xchg
pusha
sbbl
and
push
pop
or
mov
std
adcl
hlt
fwait
andb
add
aad
mov
pop
pusha
sbb
xlat
jo
jns
int3
xor
repnz
add
popa
divl
push
outsb
pop
test
incb
jne
mov
cmp
lahf
into
mov
lods
rorl
test
inc
push
call
and
adc
lods
mov
add
sub
dec
add
dec
dec
dec
xchg
pop
or
mov
shlb
add
pop
popa
cmp
xor
dec
sbb
push
mov
je,pt
add
arpl
out
adc
sub
push
je
mov
add
sub
cmpsl
sub
cmp
sbb
xchg
and
push
adc
aaa
add
nop
add
test
orl
xchg
or
xor
insb
and
sbb
mov
add
in
mov
add
jnp
pop
outsl
cwtl
iret
stc
and
lahf
movsl
in
push
mov
cvtps2pd
test
int
lds
xorb
inc
popa
mov
rcll
mov
pop
adc
rolb
fsubrs
cs
dec
mov
push
add
adcl
cltd
pop
fcoms
in
xchg
adc
sub
cmc
fiaddl
fs
out
sbb
and
ss
or
mov
add
add
shlw
clc
fs
add
lea
xor
mov
mov
xlat
pop
xor
outsb
add
or
cmp
push
insl
dec
inc
cmp
jae
pushf
xor
movsl
das
mov
or
inc
enter
mov
in
inc
add
or
imul
aaa
mov
jbe
dec
rorl
imul
cmpl
inc
adcb
xchg
out
add
arpl
pushf
or
subb
cld
add
jae
mov
insl
icebp
add
fsubl
sub
daa
decb
add
xchg
dec
push
pop
adc
rcrb
shl
loopne
and
push
mov
leave
into
and
shr
push
add
push
gs
out
lods
rol
push
or
or
scas
add
sbb
adc
cmpsl
push
mov
mov
cmpsl
mov
or
das
popl
push
gs
lds
jmp
push
sbb
xor
add
add
hlt
loopne
add
cmp
and
jp
xor
jge
pop
cld
xchg
pop
notb
inc
inc
pop
pop
ljmp
jmp
jno
fucom
jmp
fcomps
cmp
pop
add
sub
flds
push
and
out
lret
inc
dec
jns
mov
sub
es
push
pop
call
in
je
mov
test
hlt
leave
mov
int
cwtl
xor
push
sbb
call
jg
add
popf
push
push
bound
pop
pop
movswl
add
xor
add
fidivrl
cmp
negl
adc
add
scas
dec
imul
pop
and
mov
outsl
add
jnp
outsb
xor
aas
pusha
in
adc
fdivl
cwtl
adc
mov
mov
popl
jnp
push
mov
mov
sbb
in
cmp
jne
faddl
cmp
pop
add
xor
clc
cmp
or
xor
sbb
and
sbb
adc
inc
shlb
push
cmpsb
and
cmovo
rorb
and
and
cmp
aas
or
mov
mov
nop
aam
adc
xchg
xor
push
push
out
sti
das
adc
mov
fidivrs
or
aad
or
dec
testb
fildll
mov
xorb
add
sbb
adc
dec
push
mov
sub
jae
adc
pop
push
xchg
mov
in
push
cmp
ss
cmp
and
aas
jmp
xor
fstl
xlat
enter
adc
cmp
cmovno
imul
inc
xchg
scas
loopne
push
xor
sub
scas
cmc
push
add
pop
std
stos
test
sub
subb
add
imul
and
outsb
and
push
adc
mov
jl
pop
xorl
mov
add
aad
nop
or
bound
repnz
and
adc
sti
xchg
rcr
call
scas
shlb
jmp
xor
mov
aad
popa
cli
push
cwtl
int
inc
outsb
fnstcw
add
jb
rcll
enter
insb
test
and
mov
lock
cmp
mov
add
push
outsb
xchg
sbb
add
lahf
rcrb
add
mov
cmove
adc
test
mov
sbb
rcl
sbb
leave
mov
lret
inc
mov
jmp
sti
xor
mov
pushf
lods
mov
fwait
cmp
and
mov
imul
inc
aam
aad
testb
shll
inc
cmp
jns
lret
xchg
push
adc
inc
enter
add
sbbl
sbb
fcomps
pusha
pop
push
mov
aas
dec
faddl
inc
lahf
jle
push
je
push
inc
mov
and
in
sbb
add
sub
insb
repnz
mov
imul
pop
fwait
cmp
mov
lahf
shl
push
or
xchg
xchg
dec
and
cltd
pop
movzbl
fnstenv
sub
sbb
mov
xorl
pop
nop
add
leave
mov
xchg
addb
mov
mov
cwtl
enter
ja
rorb
mov
imul
stos
or
es
sub
add
stc
movsb
addr16
jp
xor
jb
xor
push
enter
mov
pop
push
aas
sub
and
mov
xchg
into
add
inc
jmp
lods
addr16
pop
jbe
mov
mov
rorl
andl
add
movaps
pushf
xor
sub
je
cmp
push
repnz
add
aad
or
aam
adcb
movsl
adc
lcall
jae
jno
insl
xor
mov
outsl
out
popa
pop
jae
and
inc
mov
shll
popa
iret
and
push
sarl
aam
addb
add
fiadds
sub
arpl
push
inc
sub
jl
scas
add
outsl
or
inc
jl
gs
pushf
inc
xchg
fs
push
add
adc
add
insl
clc
jns
cwtl
roll
xor
pop
cmp
shrl
int3
inc
aaa
xor
arpl
mov
insb
mov
push
add
fsubr
test
ficompl
nop
int3
rclb
mov
and
data16
cwtl
dec
or
lea
mov
jbe
sub
xor
push
pop
jae
hlt
dec
sbb
and
mov
fmuls
insb
sub
mov
sbb
fs
jecxz
pop
jo
dec
pusha
inc
xor
rcll
pop
imul
jo
add
mov
ret
test
xchg
cmp
add
dec
enter
repz
mov
dec
dec
pop
hlt
fdivrl
mov
lcall
nop
test
sbb
inc
mov
das
cwtl
arpl
in
adc
repnz
mov
shr
mov
movsb
fcmovu
test
push
mov
dec
aam
push
mov
push
inc
add
mov
sbb
js
nop
mov
ds
in
adc
or
cmp
adc
test
fisttpll
cwtl
cwtl
inc
imul
dec
mov
les
inc
jp
sub
scas
jmp
or
inc
pop
rclb
jb
aas
and
add
subb
dec
and
jge
decb
jl
das
mov
mov
pushf
icebp
push
push
movsl
mov
sar
nop
mov
hlt
jmp
lahf
ret
mov
sub
test
add
sub
mov
mov
cmp
xchg
dec
ljmp
cld
xchg
fs
pop
sbb
add
je
add
adcl
push
xchg
pop
pop
mov
mov
repnz
mov
test
addb
or
push
loop
dec
inc
aad
inc
loopne
jle
and
mov
cmp
jb
arpl
les
and
mov
sub
imul
into
mov
and
mov
insl
push
and
add
push
and
mov
mov
and
inc
inc
add
aas
mov
mov
add
jp
test
cmp
sti
mov
sbb
test
sub
mov
xorl
jnp
and
add
outsl
mov
push
cltd
ljmp
push
js
jo
mov
jbe
lea
dec
shlb
adc
rolb
mov
jp
int3
movsb
dec
xor
fldenv
jbe
mov
xchg
cmp
fcompl
add
push
or
add
fwait
mov
loopne,pn
mov
scas
or
sub
ds
add
sbb
mov
bound
mov
sub
dec
mov
bound
lock
popf
out
xchg
mov
xor
loope
cmpsb
mov
pusha
pop
mov
addb
jg
and
sbb
and
xchg
cli
fs
out
add
in
out
and
cltd
addl
test
add
clc
aam
add
fildl
ss
and
ja
mov
pusha
int3
andnps
rol
jb
inc
test
addr16
movups
adc
pop
pop
add
cwtl
inc
mov
xchg
xor
dec
sbb
out
mov
std
cltd
add
mov
mov
nop
sub
les
shlb
in
rorb
mov
outsb
and
add
sti
and
sub
inc
mov
leave
loopne
mov
push
aad
mov
xchg
imul
inc
pop
sub
andb
addb
lods
cmp
dec
and
or
and
add
sub
pop
insl
mov
mov
pop
pusha
int
sub
roll
imul
adc
push
js
inc
jl
push
adc
jmp
rcrl
insb
add
dec
test
add
cmp
mov
mov
negb
pop
js
push
ret
mov
in
cltd
js
loopne
ret
mov
inc
pop
outsl
cwtl
xchg
mov
jge
lds
les
inc
jmp
and
cmovg
or
add
push
xchg
adc
cs
ljmp
jo
rolb
dec
in
divb
call
pop
std
sub
gs
dec
xor
addr16
add
sbb
cs
adc
dec
loope
enter
movsl
sub
xor
ljmp
and
sub
enter
adc
rorb
lock
add
inc
fildll
jp
push
gs
cmp
and
outsl
xchg
add
repnz
fisttps
les
sti
inc
mov
add
xor
aaa
adc
mov
add
sub
js
in
sub
xlat
lahf
sub
pusha
cmp
std
or
arpl
sub
inc
or
xchg
add
fists
arpl
push
inc
sub
add
xor
lock
mov
sbb
xor
sbb
addr16
pop
adc
mov
inc
aaa
adc
xor
hlt
test
cld
imul
inc
js
or
push
sbb
cld
and
ja
mov
cmp
loopne
pushf
psubusw
adc
xchg
mov
cld
orl
ret
in
pusha
cmp
pop
ficompl
idivl
sti
insb
and
popf
cld
sbbb
pop
clc
dec
jg
jns
adc
cs
mov
pop
mov
cmp
and
aam
add
and
enter
sub
lcall
ret
cmp
es
xchg
fdivrl
imul
fidivl
cwtl
imul
fwait
adc
subb
popa
fsubs
ret
xor
loopne
jp
xor
jge
inc
les
test
mov
mov
pop
cltd
or
mov
orb
clc
data16
cmpsb
mov
sti
or
faddl
mov
xchg
adc
cltd
add
inc
or
jno
and
sbb
adc
scas
test
mov
add
sbb
jl
subb
or
out
orb
mulb
add
add
sbb
xor
cwtl
pushf
cmpsl
sbb
push
mov
or
xor
jmp
cs
enter
popa
push
repnz
or
in
insl
sub
out
sub
fsubrs
xchg
in
pop
inc
in
and
jg
rolb
push
xchg
aam
jl
mov
sbbb
and
ljmp
adc
push
mov
push
mov
jmp
les
gs
and
dec
push
int
adc
adc
mov
xchg
sbb
jnp
pop
sbb
fmull
lret
cmp
sub
cmp
stos
jmp
mov
cmp
push
loop
mov
adc
cli
xorl
xorl
push
xor
lret
inc
stc
push
ret
push
jl
pop
adc
int3
sti
or
psraw
lret
sbb
sub
int
dec
cmc
adc
inc
loopne
pop
jmp
fstps
into
xor
int
sti
add
dec
decb
cmc
pop
loope
xor
or
pop
jp
cli
or
or
add
dec
sbb
subb
stc
push
testb
xchg
push
leave
js
bswap
push
xor
outsb
push
pop
add
mov
push
cmpsb
addb
enter
flds
daa
or
sbb
pusha
insb
sbb
pusha
mov
xchg
xor
and
sbb
pop
rcrb
sbb
ljmp
cmp
cmp
pop
test
inc
sti
stos
mov
je
cmp
jno
and
mov
insl
xor
add
pop
cmp
and
inc
jns
cli
jle
sub
jge
xor
mov
push
sbbb
js
jnp
sbb
cwtl
xor
sbb
sub
xor
and
lds
mov
xchg
or
fwait
and
sub
repnz
popa
jno
add
fiaddl
inc
insb
pusha
xchg
and
push
movsl
pop
xlat
cmp
or
xchg
sub
or
rcrl
mov
icebp
push
dec
inc
je
sarl
push
icebp
mov
test
jle
mov
sub
mov
sub
cmp
mov
xor
stos
dec
arpl
mov
adc
lock
movsb
mov
nop
xchg
test
je
mov
push
and
jno
or
inc
stos
fs
lods
and
cmpsl
or
inc
cmp
inc
mov
push
test
inc
orl
xor
mov
inc
in
adc
sbb
inc
xor
sub
fsts
enter
xchg
cli
sbb
mov
ss
popa
inc
mov
mov
or
mov
pop
xchg
nop
icebp
and
lods
inc
daa
jbe
cmp
out
mov
add
out
loop
aad
cmp
pop
mov
xor
xorb
cmp
pusha
lock
outsl
cs
pop
inc
nop
mov
movsb
jo
sbb
outsl
andl
mov
cltd
and
std
es
cmpsl
mov
adc
in
inc
aaa
inc
outsb
sbb
mov
leave
adc
jg
add
push
rcrb
daa
movsl
xchg
enter
push
add
sbb
add
shr
test
add
lock
push
mov
fadd
add
sub
movsl
in
push
cmpsl
lods
add
add
mov
loopne
bound
add
cmp
iret
and
xchg
pusha
sbb
sbb
addl
inc
pxor
mov
aas
xchg
cld
push
lret
dec
mov
add
addr16
xor
jne
out
add
leave
imul
add
pusha
rcr
xchg
mov
dec
fsubrl
sub
aas
fistps
pusha
test
jge
out
xchg
pop
add
push
cmp
pop
push
add
loopne
add
out
xlat
add
andb
add
ud2
jb
xchg
call
cli
pusha
cmp
movl
pop
lds
shlb
sbb
loopne
sub
add
push
lahf
sbb
xchg
mov
xcrypt-cbc
cmpsl
sarb
sbbl
dec
es
sub
cmc
ret
sahf
outsb
and
xor
movsl
add
popa
cmp
ret
mov
sahf
sbb
add
xchg
ret
das
ljmp
add
fcomip
mov
add
xorl
aad
popa
dec
dec
add
aaa
lahf
lods
rcll
jg
inc
mov
mull
inc
stc
add
ljmp
add
mov
mov
scas
test
xchg
push
push
cmp
inc
loope
pop
push
cld
aas
and
xor
pop
rcll
dec
shrl
cwtl
fldl
das
shrl
add
xchg
imul
xchg
cmp
pop
je,pn
lahf
loopne
in
add
ret
and
dec
add
mov
xchg
mov
pop
sbb
cwtl
stos
fists
jae
push
add
add
cli
add
xchg
leave
mov
out
pusha
lahf
out
push
sti
inc
out
out
sbb
xor
or
add
push
in
add
das
test
fnstenv
out
add
mov
jg
cmp
shll
fsubrs
inc
xchg
push
xor
add
add
jl
push
mov
push
dec
pop
dec
add
ret
lret
mov
fs
xchg
in
jecxz
or
mov
push
jmp
movsb
sbb
ljmp
lock
mov
movb
insl
cmp
cmc
and
sub
add
sar
iret
mov
and
or
cmp
out
pop
test
jae,pt
fcom
in
jnp
add
cmp
mov
xor
or
sbb
icebp
adc
or
mov
cwtl
aas
clc
add
pushf
push
rcrl
add
mov
mov
mov
push
pop
das
add
outsb
stos
mov
enter
stos
shlb
sbb
cmp
and
jnp
jns
adc
add
out
jbe
nop
mov
gs
lock
lret
adc
jno
xchg
mov
pop
xchg
mov
pop
add
out
sub
ret
aad
push
add
mov
mulb
call
dec
push
cmp
mov
xor
add
pop
lea
xor
aad
pushf
or
inc
bound
pop
scas
stos
inc
and
leave
jb
push
rcrl
jl
dec
add
jp
mov
mov
and
out
stos
rolb
les
xor
mov
notl
mov
lcall
mov
xlat
lds
iret
adc
add
mov
loop
push
jle
imul
stos
mov
cwtl
and
pop
gs
jo
stc
jmp
scas
les
add
je
adc
js
repnz
jg
add
pop
lret
adc
nop
lds
in
jbe
sub
insb
cs
xor
dec
and
mov
xor
mov
jne
pop
xor
test
jb
adc
add
inc
mov
jns
sub
loope
hlt
add
dec
dec
dec
out
das
sub
jle
add
test
ret
and
aas
cmpsl
cmc
rclb
add
adc
inc
sub
add
jp
sub
add
fdivrp
push
adc
xor
sbb
add
scas
mov
mov
add
dec
jns
jnp
leave
cmc
clc
stos
lret
and
mov
ds
lods
sti
sahf
pop
mov
xchg
mov
pop
stos
lods
dec
jge
movsb
inc
imul
bound
aaa
sub
clc
rcrl
insb
mov
pop
mov
inc
loop
mov
sub
in
sbb
inc
pop
pop
or
push
loope
sarb
mov
insb
ret
shlb
inc
mov
enter
push
xchg
add
add
fidivrs
aam
sti
push
cmc
inc
jg
xchg
mov
xchg
mov
scas
sub
lahf
mulb
sbb
add
roll
leave
insl
add
fnsave
stc
and
cltd
add
pop
js
mov
test
xor
mov
mov
mov
inc
add
jp
shll
fiadds
lcall
push
add
pop
push
dec
std
and
ret
or
daa
cs
iret
push
jmp
sub
or
and
popf
inc
inc
and
sub
rcr
mov
outsb
push
incb
leave
sbb
xor
clc
pop
sub
inc
and
mov
add
mov
add
fs
and
cli
cwtl
mov
or
pop
jo
adc
inc
or
adc
and
cmp
bound
mov
stc
sub
and
fcoms
mov
clc
mov
dec
adcl
sbb
cwtl
ret
mov
pop
enter
cltd
pushf
imul
pusha
outsl
mov
sbbl
jp
mov
pop
sbb
dec
insl
lods
jns
addl
out
pop
add
mov
inc
and
clc
and
roll
adc
add
jbe
push
jmp
add
int
ss
ljmp
cmp
add
cltd
or
adc
rolb
cmpsb
add
out
je
insb
lahf
or
stc
sub
or
sarb
mov
enter
pop
push
test
ljmp
push
mov
pop
mov
xlat
mov
mov
mov
add
divb
push
sbb
out
pop
jge
xchg
fadds
cmp
cltd
xorb
sbb
sub
mov
add
shll
or
push
mov
xor
mov
jo
push
sub
jg
addb
inc
add
mov
push
int3
add
loop
lret
add
mov
push
subb
mov
xchg
ljmp
add
and
out
addl
add
and
cmc
lahf
ljmp
cmpsl
sti
mov
test
loopne
cmp
xchg
mov
xchg
mov
jecxz
push
sub
mov
mov
mov
mov
sub
and
jnp
inc
jno
push
push
jg
mull
dec
popa
cli
pop
rcrb
mov
or
and
popf
inc
addb
les
cmp
ljmp
add
fwait
jno
push
dec
sbb
jecxz
xchg
sub
add
sub
or
fwait
jne
xchg
push
sbb
lea
or
jo
pop
loopne
xchg
hlt
call
sbb
dec
mov
jl
movsl
rolb
out
cmp
shll
and
pop
sbb
popa
in
jmp
ret
fldl
or
xor
xchg
addl
push
inc
shrb
push
imul
nop
aam
jge
mov
push
rcrb
aam
jecxz
mov
add
mov
sbb
sbb
insl
mov
movsb
jle
adc
or
dec
sub
fs
xor
or
imul
add
in
insb
or
into
rolb
inc
and
xchg
pop
cmp
mov
push
int3
mov
push
ljmp
xchg
sub
cltd
jmp
mov
stc
push
add
ja
add
rorb
or
popl
sub
mov
or
repnz
ret
add
loop
popf
mov
int3
sub
adc
dec
push
xor
int3
popa
pop
push
jmp
inc
inc
icebp
sbb
or
xchg
add
jo
mov
jge
pushf
shll
push
mov
sbb
stos
imulb
in
cltd
xor
or
adc
and
dec
in
xchg
repz
inc
in
mov
adc
and
dec
in
jmp
incb
mov
pop
filds
inc
or
mov
lahf
mov
repz
fimull
jne
add
outsb
sub
popf
mov
lea
rclb
das
outsb
lds
sbb
icebp
add
ds
cmp
popf
mov
inc
pop
add
shlb
pushf
dec
mov
add
stos
leave
xchg
xorb
inc
mov
or
adc
lock
arpl
bound
aad
add
xchg
add
jno
adc
cs
bound
das
or
sbb
mov
or
subb
or
pop
add
insl
xchg
add
mov
outsb
nop
jo
sbb
call
adc
cltd
sub
sbb
in
xchg
ljmp
sti
xchg
rep
sbb
call
aas
fisubs
pop
jg
mov
movsb
mov
mov
pushl
lahf
add
mov
cltd
loop
inc
test
mov
jl
loop
mov
and
xor
cwtl
mov
sub
mov
xchg
add
mov
mov
mov
add
stc
sahf
pusha
repz
popf
in
call
add
mov
mov
xchg
inc
in
pop
sahf
clc
or
pop
cmpb
xchg
sub
inc
loopne
xchg
pop
add
mov
ljmp
pop
cmp
mov
xchg
sbb
test
pusha
xor
scas
dec
out
add
shrl
mov
or
icebp
push
fwait
loope
int3
mov
cmp
in
pusha
push
sub
xchg
xor
push
insb
or
xchg
fidivrs
pop
je
xor
pop
xchg
adc
scas
cld
popf
dec
xchg
xor
ljmp
leave
nop
cmp
inc
and
pop
pushf
repnz
push
stos
rorl
shr
cmp
lods
or
xchg
in
lahf
dec
jecxz
pop
push
in
sti
pusha
mov
stc
movsl
jmp
fcoml
hlt
mov
lcall
xor
mov
cmp
jb
movsb
negl
mov
out
lods
pop
xor
popf
in
xor
cwtl
inc
cmp
jmp
enter
mov
push
icebp
popf
jecxz
mov
out
fwait
icebp
movsb
sti
cld
stos
movsb
cwtl
xchg
mov
aam
pop
loop
adcb
js
add
mov
xchg
mov
inc
mov
mov
dec
hlt
lock
ja
cli
fwait
in
stc
add
mov
or
jmp
push
in
fiadds
scas
out
xchg
jmp
inc
pusha
imul
popf
cmp
nop
les
scas
mov
in
in
mov
bound
rcrb
cmp
dec
fdivs
or
lods
adc
inc
sbb
mov
or
in
sub
ffree
mov
and
fwait
jecxz
jecxz
jl
jl
cmp
pushf
mov
xchg
sub
cmp
lahf
sbb
sti
cmpsb
xor
jecxz
movsb
cmp
movsl
int3
mov
lret
sbb
push
loope
insl
cmp
add
jl
mov
mov
js
mov
lea
sbb
enter
mov
push
cwtl
cmp
sahf
pop
fcoms
mov
pushf
and
add
movsb
loope
mov
mov
loopne
fs
iret
xorb
movsb
out
inc
xor
cwtl
out
jo
repz
stos
push
pop
mov
cltd
jmp
cwtl
call
add
stc
lcall
mov
jo
xchg
cmp
lea
mov
lods
in
fidivs
mov
pushl
loopne
jg
int
hlt
adc
xchg
sub
push
add
shr
in
jge
ret
js
mov
sbb
sahf
fidivs
std
mov
ljmp
push
mov
cmp
hlt
xor
cmp
or
outsl
jg
xchg
cmp
jne
adc
push
lahf
hlt
cwtl
in
and
xchg
in
or
fwait
ljmp
int
adcb
data16
or
jecxz
cli
xchg
jecxz
outsb
fmuls
adc
int
inc
fcom
clc
loopne
mov
stc
in
sbb
addb
mov
mov
pusha
xchg
jmp
mov
popf
mov
jmp
dec
lock
fisubrs
mov
mov
xor
cmpsb
js
dec
add
or
roll
mov
mov
lret
inc
shl
dec
ljmp
sub
orb
lods
or
adcl
notl
test
mov
dec
loope
or
in
rcl
cmc
sbb
in
add
dec
aaa
dec
or
mov
push
pushf
add
jmp
shlb
push
add
addr16
mov
adc
lock
cmp
dec
in
push
jge
into
pusha
inc
and
orl
cmp
push
xchg
out
inc
or
cwtl
pop
movsb
ja
mov
pusha
xor
shll
or
bnd
fldcw
mov
fucomp
jmp
push
cmpb
add
nop
xorl
push
adcb
mov
mov
or
and
adc
add
push
jbe
xlat
jns
xor
subb
nop
pop
pushf
cmp
dec
rolb
push
fldcw
mov
xlat
pop
into
push
push
inc
cmp
add
sub
loop
sbb
inc
and
clc
mov
cs
insb
lea
pushf
lods
incb
int3
or
inc
pop
sarl
mov
dec
sub
or
mov
push
mov
test
call
push
dec
push
dec
xchg
inc
sbb
dec
mov
lock
fists
movsl
mov
pop
iret
lret
xchg
add
pushf
add
mov
loopne
mov
subl
add
or
mov
xor
or
add
adc
inc
and
pushf
pop
aas
out
in
inc
shlb
mov
shll
inc
sbb
and
add
xlat
fnsave
sbbb
and
mov
mov
cmp
add
pop
push
test
aad
push
out
adc
lea
mov
popf
mov
cmpsb
inc
xor
jle
sarl
movsb
xor
dec
cmp
push
or
mov
jl
rolb
dec
out
sbb
rdtsc
mov
lock
mov
sbb
lock
rolb
push
push
rorl
push
sub
dec
mov
sbb
pusha
in
out
pop
add
dec
cmovb
push
sahf
mov
push
mov
ds
adc
mov
aas
rolb
dec
bound
popa
add
inc
jg
jo
sti
les
sarb
inc
in
or
dec
and
repz
adc
jle,pt
xchg
mov
aaa
or
add
push
jle
fdivr
in
outsl
mov
mov
push
out
imul
jl
add
mov
fildll
mov
daa
mov
ret
xchg
clc
sub
inc
add
mov
pusha
mov
adc
pop
or
icebp
mov
rorl
pop
sub
dec
jmp
sbb
pop
ret
sub
shlb
mov
out
daa
mov
jg
sbb
adc
rcr
mov
jae
adc
leave
add
andl
movb
or
xor
inc
cmp
xor
sub
sub
inc
into
add
xlat
mov
out
mov
in
inc
xchg
and
iret
sbbl
mov
int3
jno
shufps
lret
sub
add
add
arpl
inc
mov
call
test
mov
arpl
pop
iret
xchg
or
add
sub
add
push
or
sbb
dec
dec
pop
orb
mov
pop
ret
out
adc
pop
test
inc
fisttpl
test
repnz
out
inc
push
pusha
rolb
add
or
sub
pop
pop
cmpsl
mov
or
push
shlb
add
jns
or
lods
fsubrs
rcrb
cmp
add
movsb
jle
push
out
adc
mov
into
mov
sarb
insb
mov
ret
orb
pop
pop
lods
aam
mov
repnz
mov
addr16
rorl
je
insl
aad
add
push
jae
cwtl
lock
mov
fcomi
cmp
push
xchg
jae
inc
call
add
push
shrb
adc
or
sbb
xor
or
aaa
adc
shll
xchg
scas
je
push
adc
cmp
and
lret
in
add
mulb
mov
inc
rolb
push
pop
cmpsl
fnstsw
mov
sbb
and
cmpb
cmp
inc
popa
test
pop
test
xorb
dec
orb
aad
mov
test
and
scas
add
or
pop
pop
clc
in
loopne
pxor
jb
xchg
movsl
mov
mov
popa
mov
sbb
sbb
daa
movsb
and
add
mov
arpl
mov
imul
call
sbb
test
in
sbb
pop
mov
repz
leave
xchg
xor
cwtl
sub
aad
jno
lret
push
push
add
jge
and
out
popa
int
mov
scas
into
les
add
jmp
add
mov
xor
popf
lcall
test
add
adc
pop
rolb
add
lock
and
sbb
out
xor
jno
ljmp
xchg
cli
ret
arpl
add
mov
nop
mov
add
fxam
mov
nop
rorl
xorl
lods
loopne
hlt
add
push
cli
loope
sbb
xchg
pop
and
testl
xchg
sbb
jo
mov
les
arpl
sbb
scas
add
inc
hlt
sahf
fwait
xchg
mov
jmp
add
jecxz
cld
jg
orb
addr16
cmpsb
test
hlt
sub
ljmp
scas
inc
mov
pusha
adc
mov
lds
sub
jae
ret
andl
cltd
dec
mov
sub
and
mov
popf
pop
or
inc
inc
push
and
or
pop
and
xchg
mov
jo
push
jecxz
pusha
hlt
cltd
out
sbb
sbb
sbb
call
xor
sbb
mov
negl
add
or
dec
mov
ja
mov
add
lock
pop
fmull
cmpsl
cmp
out
inc
sbb
andb
mov
jb
adc
sti
mov
dec
bnd
sbb
sbb
push
adc
lcall
push
leave
add
mov
in
pop
xor
sarl
mov
rorl
dec
push
add
mov
leave
pop
cwtl
popa
push
jle
sub
jnp
sub
inc
les
rorl
xor
orl
test
sbb
xchg
mov
call
pop
adc
fisubrs
pop
lods
xlat
mov
xchg
add
pop
pop
sbb
loopne
lcall
into
mov
daa
add
shr
pop
es
fildl
fdivrl
xchg
mov
xchg
rol
mov
aam
popa
mov
pop
iret
jle
lret
aam
sbb
mov
mov
add
sti
mov
and
mov
add
xor
loopew
lcall
das
push
xor
sub
mov
aam
lahf
mov
sub
lcall
int3
addl
pop
mov
cltd
mov
pop
pop
inc
lret
add
mov
inc
xchg
pusha
insb
jae
shlb
jb
inc
jns
add
mov
jmp
sbb
test
movsb
sarl
inc
lock
cmp
in
addl
xor
push
cmp
aas
sub
xor
push
rclb
and
sub
pop
movsb
jne
cmp
jmp
push
sbb
imulb
lods
adc
pop
xchg
add
sbb
dec
sub
mov
lods
and
add
cmp
pop
mov
push
adcb
push
sahf
pusha
add
mov
mov
aas
iret
or
into
jnp
fcmovne
adcl
addr16
ficompl
sbb
jo
adc
and
orl
and
mov
mov
test
push
into
push
mov
inc
dec
add
mov
popf
daa
mov
mov
inc
adcl
dec
add
lcall
mov
leave
add
fs
adc
aaa
or
ds
add
stc
mov
sbb
addr16
in
rclb
mov
fcompl
and
cwtl
mov
out
inc
enter
push
mov
pusha
les
test
or
loop
cmpb
movsb
add
push
cld
or
add
out
cli
add
mov
cmp
add
gs
nop
inc
and
pop
cwtl
push
or
dec
jmp
lock
shr
scas
inc
xor
gs
cmp
test
mov
test
or
test
push
xor
lds
rclb
push
orb
js
add
inc
jo
mov
add
jns
pandn
push
movsb
cmp
into
ja
add
push
cs
out
mov
fadds
and
inc
mov
and
push
enter
sub
das
roll
bound
xchg
mov
mov
jmp
mov
push
jo
decl
andb
aam
add
mov
mov
repnz
xchg
push
dec
sbb
mov
xor
aas
aas
jae
jno
add
dec
rorb
or
popf
xor
lods
es
cmp
dec
push
shlb
add
mov
lcall
mov
call
sbb
aaa
add
xor
test
pop
add
mov
aad
or
mov
or
inc
adc
arpl
add
xchg
hlt
mov
sarl
dec
test
push
jno
jnp
xor
push
jne
push
cmp
jb
xchg
mov
dec
sub
add
iret
add
test
add
dec
fwait
add
loopne
sub
pusha
pop
inc
stc
xor
push
and
cmpsl
in
ja
jg
push
daa
push
shlb
imul
jg
hlt
dec
or
rcrb
cmp
add
imul
sub
or
das
cmp
js
out
mov
inc
push
mov
add
cmpb
roll
scas
test
mov
cmp
loope
mov
fadds
mov
mov
aad
and
insb
add
or
adc
push
sbbl
imul
or
inc
andb
sbbb
adc
hlt
or
rcrb
sub
inc
push
mov
mov
jl
aaa
sbb
movsb
arpl
pop
scas
mov
dec
xchg
push
or
mov
inc
jbe
out
repnz
inc
sub
das
cld
add
test
fnstsw
sub
adc
loope
pop
lahf
adc
cmpsb
xchg
sbb
xlat
inc
lds
decb
mov
push
ret
add
fcomps
ss
xor
push
adc
and
pop
mov
inc
cmp
sub
orl
inc
add
mov
or
or
mov
adcb
adc
lds
mov
mov
cwtl
mov
xor
dec
mov
nop
cmp
int3
jl
insb
or
add
adc
aam
inc
mov
add
mov
add
imul
inc
xor
in
jmp
xor
xor
cmpsb
inc
sbb
mov
ss
or
jo
test
xlat
jge
add
arpl
lds
sub
xchg
or
enter
mov
jb
push
pop
mov
daa
insb
lods
or
and
imul
sbb
pop
jmp
adc
pop
add
mov
adc
adc
dec
sub
shl
xchg
mov
decb
and
mov
xor
cltd
mov
sbb
mov
mov
mov
push
cmp
fidivl
pusha
sub
movsb
sub
add
lock
sti
cmp
add
xchg
test
addb
hlt
xchg
adc
push
push
aam
je
or
adc
xchg
leave
cmpl
push
rcrb
inc
sub
cwtl
fcompl
adc
sub
cwtl
nop
scas
add
xor
mov
or
add
gs
push
mov
xor
jae
shll
jle
inc
add
les
sti
add
jmp
dec
mov
xor
pop
repnz
sub
mov
inc
hlt
fcomip
mov
mov
scas
mov
mov
out
pop
lock
and
std
stos
or
jnp
pop
jmp
xor
add
popa
jmp
pushf
pop
push
mov
mov
loope
push
mov
and
outsb
jns
or
xor
jmp
add
shll
sub
das
test
jecxz
pushf
add
pop
mov
xor
and
jae
or
xchg
test
ret
xor
in
or
sbb
mov
sbb
or
ljmp
cmpsl
stos
xchg
push
mov
cmp
sub
mov
jnp
adc
lea
call
pop
pop
or
and
je
sub
and
and
xor
xor
rolb
popf
push
popa
movswl
mov
clc
test
fstpl
and
and
add
push
call
pop
ret
adc
sbb
and
ret
into
ja
loop
iret
jae
rcrl
push
cwtl
pushl
test
aas
shlb
shl
xchg
xor
cmpb
jne
movsl
sbb
bound
arpl
es
xchg
xorl
jne
call
push
dec
lock
orl
mov
popa
xor
or
enter
shll
ret
push
fimuls
mov
insb
mov
inc
and
push
je
mov
jmp
and
cmpw
inc
insb
and
xor
adcl
clc
add
adc
mov
in
inc
je
sbb
pop
rcrb
lar
sub
je
sub
mov
dec
inc
inc
push
sbb
ret
mov
inc
push
ret
cmp
and
andl
fwait
nop
faddl
mov
and
outsb
mov
pop
test
test
add
xchg
mov
mov
jno
add
inc
pop
mov
mov
mov
or
fucomip
push
sbb
xor
add
mov
push
add
mov
test
popa
cmpsb
aam
sbb
jnp
in
push
popa
pop
ret
enter
cmc
rolb
popl
scas
inc
xor
sub
or
sbb
clc
xor
popf
leave
and
popa
and
shrl
call
mov
call
xor
and
test
les
pusha
jno
daa
add
decb
insl
push
and
andb
cmp
or
lods
add
sbb
out
sbb
loope
or
ret
pop
ret
xchg
mov
addb
fwait
mov
dec
push
and
sbb
cmp
sub
fs
out
adc
mov
and
xchg
adc
sbb
rolb
cmp
mov
inc
xchg
xor
orl
inc
loope
cltd
push
mov
dec
push
mov
outsl
test
mov
es
push
repnz
lock
loope
and
repnz
or
push
adc
andb
int3
and
mov
and
xchg
inc
mov
inc
int
pusha
push
jmp
gs
xchg
repnz
cmpsb
ljmp
cmp
add
out
lret
pusha
push
mov
and
dec
lds
pop
int3
cmp
add
push
scas
repnz
and
add
dec
or
dec
push
mov
add
push
pusha
ds
int3
call
divl
jl
enter
add
into
or
leave
inc
lds
add
mov
orl
lret
aad
fdivs
sub
lea
cmpsb
addb
and
jb
adc
dec
in
aad
ds
mov
mov
push
pop
cmp
jo
cli
pushf
pusha
aad
lcall
mov
and
adc
pusha
out
adcl
dec
shll
adc
inc
cltd
adc
icebp
xchg
xchg
addb
or
and
repnz
xor
ret
lahf
push
adc
andb
dec
mov
icebp
adc
dec
and
add
sar
sub
daa
inc
or
cltd
mov
sbb
mov
push
jbe
fcmovnb
in
add
hlt
xchg
and
jno
cs
sbb
psubb
add
gs
cmpsb
nop
nop
sub
js
sub
cmp
addb
pop
lret
adc
jmp
add
jle
and
popa
sub
out
push
push
stos
mov
xchg
or
icebp
cmp
adc
mov
in
push
add
rcll
rcrb
enter
test
mov
dec
stos
adc
mov
and
cltd
aad
inc
push
xor
stos
ss
adc
push
mov
mov
or
sbb
or
call
jae
jmp
call
fwait
sbb
call
push
daa
and
cmpb
add
add
rcrl
xor
dec
or
sub
pop
addl
mov
mov
and
int3
xchg
cmpsb
xchg
cld
push
jo
ret
mov
test
adc
add
and
cwtl
lods
jl
xor
sbb
xchg
and
adc
nop
imul
mov
fidivl
outsb
mov
les
jbe
cld
cmp
adc
pusha
xor
test
std
add
popa
push
sbb
inc
adc
fldcw
cmpb
cmpb
ret
sbb
pop
xor
add
mov
int
sbb
jmp
cmp
adc
sbbl
popf
testl
mov
jne
mov
daa
mov
ret
or
arpl
jl
fcmovb
push
adc
dec
out
adc
test
push
mov
ds
orl
aad
scas
fwait
pop
sub
adc
mov
xor
adc
inc
and
or
movb
dec
adc
mov
in
mov
bound
dec
testl
jmp
dec
mov
mov
clc
jns
mov
adc
cli
jns
xchg
push
fdiv
mov
andb
testb
mov
add
add
ds
faddl
add
mov
mov
sbb
outsl
jl
mov
jmp
pop
jmp
inc
xchg
xchg
insb
aas
mov
movsl
dec
jae
lods
add
xchg
mov
adc
cli
andb
lods
in
add
xchg
fimuls
dec
ficomps
mov
adc
lea
lds
out
dec
ret
ds
and
pusha
sub
add
subb
push
test
pop
sbb
push
aaa
jns
adc
adc
push
cmp
fmuls
push
and
pushf
pusha
push
mov
enter
aam
add
lret
sub
popf
jp
test
inc
pop
shlb
ss
jbe
sbb
xor
int
mov
dec
xchg
inc
or
mov
cmc
xor
mov
xor
fwait
add
ja
aas
mov
add
mov
cmp
adc
pop
xchg
and
outsl
pusha
add
add
cmovne
add
cmc
xor
xorl
imull
call
aas
pusha
movswl
lret
push
stc
bound
jecxz
stos
loope
adc
mov
movsl
jne
and
subl
xchg
add
adc
cmp
scas
sub
xchg
jbe
xchg
aad
fmuls
xor
cwtl
cmp
mov
cs
and
pop
xchg
test
mov
dec
add
dec
xchg
stc
lret
mov
pop
inc
adc
or
xchg
sub
pop
stc
add
add
mov
push
pop
int3
movsb
xchg
dec
jl
pop
add
int
jg
fwait
cmp
fcmovne
fs
int3
das
imul
je
daa
nop
fbstp
call
and
icebp
xchg
jae
xor
mov
imul
dec
pop
mov
sarb
xchg
fiaddl
adc
jecxz
enter
xor
mov
dec
jecxz
jecxz
dec
pop
cmc
and
adc
mov
out
imul
xor
sub
sub
pop
inc
cmp
xchg
mov
pop
mov
mov
shll
cltd
icebp
push
movsl
inc
sbb
addr16
psubusw
add
xorl
movsb
fwait
inc
sbb
adc
test
daa
iret
xor
fadds
add
xchg
into
es
mov
mov
add
or
or
xor
jmp
leave
mov
je
jg
call
in
dec
dec
jae
fisttpl
rcll
and
hlt
lods
imul
icebp
es
sub
or
mov
mov
sub
lcall
or
pop
daa
stos
shll
pop
push
fiadds
push
adc
data16
sub
sbbb
and
lds
arpl
shlb
xor
fs
mov
pushf
enter
lods
xchg
sbb
xchg
pop
add
lds
test
sti
cmpb
push
and
push
test
add
sub
dec
mov
or
cmpsl
adc
jge
sub
jno
push
cmpsl
cmp
inc
and
daa
pushw
push
and
sub
mov
mov
and
popa
lea
and
lods
pop
test
mov
shll
cmp
add
add
xorb
out
stc
sub
or
add
xlat
cltd
stos
sub
mov
inc
adc
call
mov
inc
cltd
hlt
or
add
push
loope,pn
push
add
je
das
cltd
out
adc
enter
push
mov
adc
sbb
mov
xor
push
or
in
mov
jns
sub
cwtl
hlt
push
stc
mov
inc
fdiv
fcoms
popf
mov
inc
je
psrlq
pop
mov
stos
mov
xor
sarb
inc
pop
or
dec
shlb
jge
test
test
mov
pusha
dec
popa
mov
adc
xchg
pop
dec
or
or
jo
lret
cmc
sub
xchg
cmp
rorb
mov
jle
sbb
add
or
lret
pusha
pop
js
add
imul
pusha
xor
insl
xchg
jnp
subb
pop
jecxz
jle
pop
daa
arpl
sbb
add
and
mov
inc
mov
push
roll
ror
int3
icebp
and
push
xchg
xchg
test
pop
popa
fcmovb
mov
bound
sarb
test
rolb
push
adc
xor
pop
fnstcw
add
mov
jmp
pop
xchg
jmp
pop
pop
movl
or
adc
std
loop
inc
insb
aad
movsb
shll
adc
cmpl
cwtl
mov
cmpsl
inc
in
int3
mov
sbb
mov
push
or
stc
out
scas
fwait
pop
inc
aas
sub
sbb
repnz
into
rorl
loope
sub
bound
adc
call
add
test
or
insl
sbb
xor
and
mov
clc
enter
pop
movsb
pop
jnp
add
sbb
dec
mov
pop
push
jmp
pusha
in
test
rorb
cli
xor
add
loop
xor
pop
sbb
inc
cmp
mov
and
lret
xchg
aad
adc
cmp
push
stc
sbb
call
clc
clts
nop
push
test
idiv
mov
insb
imul
or
pusha
mov
xor
adc
sub
jmp
or
lea
mov
adc
dec
sarb
sub
xor
out
dec
fisttps
enter
xor
sbb
inc
dec
nop
xor
mov
loope
sbb
xchg
mov
hlt
dec
mov
jmp
clc
add
js
out
sub
inc
dec
sub
sbb
lds
pushf
fnstsw
cld
aad
pop
mov
push
push
mov
jne
mov
add
or
push
mov
fldcw
push
mov
movsl
fdiv
pop
sub
js
xchg
popa
add
cld
add
shr
rcll
sbb
mov
push
mov
pop
and
fsubrs
cmc
xchg
and
enter
jmp
push
xor
test
sub
mov
shll
mov
mov
add
test
jae
inc
or
mulb
stos
inc
fildl
cmpsl
push
mov
mov
mov
xchg
ret
lahf
or
add
push
sub
sub
xor
xchg
pop
add
mov
loopne
rcrb
xor
out
and
sub
sbb
mov
or
jbe
add
sub
lret
mov
adc
clc
push
fstpl
or
add
pushf
adc
jns
inc
pop
or
scas
xor
mov
sub
ret
cs
jno
mov
push
rcr
or
into
rcr
pop
mov
pop
sub
repnz
sub
aas
mov
add
mov
jmp
pop
loopne
cmc
inc
jnp
dec
sbb
mov
sbb
push
cmp
and
sub
aam
sarb
push
popf
xor
loope
shl
push
cld
push
daa
mov
sbb
pusha
xor
sub
dec
pusha
fisttpl
mov
pusha
inc
insb
or
shll
xor
icebp
or
test
or
es
fisubs
stc
sbb
sub
jecxz
dec
adc
xchg
pusha
sub
pusha
pop
ret
test
inc
inc
cli
mov
cmp
add
divb
dec
sbb
jmp
or
or
clc
add
mov
add
roll
inc
imul
and
dec
or
or
aas
ficoms
fldl
clc
fldl
loope
cmc
sub
js
iret
rolb
mov
jo
xor
pusha
xchg
xchg
aaa
imul
xchg
mov
cmp
popa
adc
add
mov
shrb
push
cltd
ret
fadds
addl
mov
inc
sub
pop
add
pop
mov
cmpsb
pop
daa
lret
jge
es
push
fstpt
sub
sbb
pop
jecxz
and
and
fmull
or
xchg
loope
push
fcomi
ret
add
dec
add
xchg
cwtl
mov
mov
add
mov
jge
enter
sub
lods
sbb
xor
lock
push
dec
punpckhbw
das
ja
rcl
dec
xor
popa
push
sbb
inc
add
fucomi
cli
idiv
push
out
xchg
xorb
cs
add
xchg
mov
and
lds
int3
or
subl
push
or
mov
xchg
mov
inc
push
or
data16
sub
data16
or
fidivrl
push
inc
or
lcall
or
ret
adc
xchg
sbb
dec
mov
push
les
or
xor
xor
mov
pop
and
mov
iret
mov
push
lods
push
push
add
xchg
push
pushf
imul
adc
add
jo
daa
cmp
pop
mov
inc
fistps
daa
fwait
enter
xchg
push
jg
dec
pop
add
add
push
imul
adc
orb
cmp
cmp
cmpsl
andb
ret
flds
jmp
and
or
sub
xor
mov
rol
xor
cltd
repz
aas
add
or
in
cmp
add
pop
aas
dec
and
inc
jns
icebp
sbb
xor
or
adc
sarl
push
movswl
jmp
mov
fcoms
insl
jmp
push
xor
mov
push
int3
sahf
mov
aad
pop
push
or
or
andl
andl
add
mov
xor
and
pop
sub
orl
adc
dec
and
cmp
mov
dec
nop
mov
ficomps
jb
push
loopne
or
dec
pop
mov
add
call
and
sbb
or
mov
dec
add
add
mov
mov
pop
or
in
add
push
or
push
dec
xchg
fwait
sbb
lods
ja
bound
mov
out
pop
jns
inc
shll
or
xchg
lret
imull
mov
cmp
pop
pop
or
or
mov
push
pop
xlat
cmp
popf
pop
pop
or
fisttps
pop
dec
and
push
out
loopne
cld
data16
push
mov
aad
adc
dec
ficomps
sub
popf
dec
psubsb
dec
call
mov
xchg
lods
loopne
and
in
sub
popf
insl
jl
and
jmp
xchg
or
push
std
mov
and
pop
xchg
and
arpl
nop
sub
add
dec
es
jnp
pop
dec
add
jecxz
adc
fcomps
push
pop
mov
dec
fistpll
addr16
cmp
test
hlt
cmp
cmp
dec
outsb
sbb
dec
add
jbe
cmc
mov
lods
sub
popa
pop
enter
bound
fcom
push
leave
mov
fmuls
cmp
cmpsl
jb
jl
xchg
pop
sub
movsb
clc
jb
fistps
inc
addb
xor
adcl
or
lret
dec
test
mov
ret
pop
push
push
mov
add
rcrb
and
or
movsb
das
pop
push
push
mov
push
mov
adc
pop
mov
es
or
inc
and
loop
fcoms
cmp
pop
add
adc
inc
mov
mov
adc
les
xor
mov
es
dec
sub
fcmovnbe
adc
scas
adc
mov
xchg
adc
in
pop
sti
jle
enter
jp
push
je
add
cmp
and
fs
gs
xor
sub
insl
loopne
inc
push
and
minps
add
jge
add
loop
in
sub
pop
mov
or
cs
addr16
or
jnp
sbb
pop
sub
push
add
adc
icebp
push
xor
inc
mov
sbb
cmpb
push
or
xchg
shrl
inc
jmp
xchg
xorl
xor
add
add
mov
mov
jge
xchg
je
rolb
push
arpl
add
outsb
and
data16
push
popa
or
mov
int3
sub
arpl
je
mov
clc
jae
data16
jb
fs
stc
insb
cmc
jo
ja
mov
insb
lea
addr16
jecxz,pn
push
jns
jne
or
sbb
jo
jae
outsb
inc
push
push
dec
sub
jmp
js
inc
cmp
fs
jmp
or
clc
fisubl
ss
inc
push
filds
repz
push
inc
call
dec
cmova
push
push
loope
jb
decb
cmp
inc
repz
mov
xchg
and
outsl
sub
xor
jo
dec
push
dec
cmpsl
rdtsc
sbb
vmread
add
fiadds
push
add
shl
or
push
mov
fwait
push
cld
and
adc
xchg
xchg
push
push
ret
and
cmc
push
xor
jne
jecxz
test
mov
and
rclb
and
rorl
inc
pop
mov
lods
push
and
pop
mov
and
push
xor
mov
pop
xor
sbb
sbb
ret
jp
push
or
push
xor
inc
aam
mov
cltd
pop
inc
dec
frstor
popf
adc
ret
dec
loope
dec
mov
adc
inc
test
cmp
test
enter
push
sub
cmc
or
or
int
leave
or
xchg
and
fs
xor
bound
jmp
pop
dec
pop
dec
jecxz
addr16
inc
push
push
sbb
xlat
and
add
xlat
mov
mov
gs
add
dec
xchg
xlat
andw
mov
pop
pushl
cmp
add
push
movzwl
inc
out
jo
adc
adc
enter
dec
mov
push
test
jbe
add
sub
sub
xor
pop
add
cmp
push
add
ljmp
ret
stc
cmp
lock
ja
jle
cltd
jp
add
pop
xchg
jmp
push
sysexit
pusha
push
pushf
popf
push
scas
test
adc
mov
fdivrl
mov
int3
or
jl
mov
add
and
roll
sub
int3
ficompl
je
add
repnz
lret
mov
mov
add
outsb
pop
pushf
xor
inc
inc
popa
sub
jge
addl
pop
sub
jecxz
pushaw
pop
and
and
sbbb
dec
insb
subb
cmpb
xor
mov
inc
jecxz
add
call
add
mov
pop
inc
sub
cmc
dec
popa
push
lods
mov
mov
int3
mov
cltd
pop
test
jne
cwtl
xchg
add
imul
mov
and
aaa
xor
xor
mov
mov
jns
mov
and
mov
loop
cmpl
stc
mov
aas
ret
mov
add
stc
clc
mov
fdivs
imul
icebp
or
negb
outsl
fmul
test
loopne
loope
push
cld
adcb
test
adc
pop
xor
mov
aam
dec
cmc
in
dec
add
jo
mov
nop
pop
test
mov
mov
cmp
inc
popa
test
xchg
and
and
mov
rcrb
sarl
push
xchg
repz
dec
pop
add
fcoml
dec
mov
xchg
add
or
adc
mov
in
test
add
cmpsb
cmp
or
adc
or
aas
cmpsl
add
sub
add
outsl
push
xchg
mov
push
push
rclb
add
jl
pop
push
push
or
loopne
adc
xchg
mov
sbb
divl
and
mov
push
addb
mov
pop
inc
xchg
add
std
inc
hlt
stos
xor
mov
mov
rcrb
inc
scas
xchg
push
dec
push
mov
out
fldl
cmp
mov
movsb
aam
mov
flds
mov
cmp
and
sbb
and
sti
lock
sub
pop
inc
in
popf
subb
aam
loop
add
push
mov
outsb
in
popa
adcl
sub
pop
ret
xchg
push
mov
add
xchg
or
cltd
push
xor
mov
adc
push
lret
sarb
fwait
or
and
in
cmpsl
adc
mov
das
scas
daa
xchg
mov
mov
loope
fnsave
pop
and
adc
jecxz
push
push
test
xchg
xchg
jbe
xor
pop
add
rorl
into
xor
or
jl
cmc
mov
cmpsl
xchg
xor
jne
sbb
inc
leave
lret
outsb
js
subl
push
xor
jae
mov
test
mov
les
notb
pop
iret
pop
add
in
mov
imul
ret
push
inc
mov
nop
adc
in
mov
les
and
add
push
cmp
jo
and
sbb
lods
mov
fwait
loope
sub
lahf
icebp
add
pop
push
mov
orb
sub
rcrl
jb
lea
dec
add
fadds
and
add
enter
inc
in
add
call
xchg
lock
jb
jle
push
jmp
test
mov
add
jmp
xchg
add
daa
testl
pop
adc
jmp
rcrb
mov
mov
cmp
sbb
dec
in
pushf
add
mov
dec
sub
sub
dec
push
mov
std
clc
dec
push
and
adc
rolb
mov
pop
mov
inc
dec
inc
mov
pop
lods
xchg
xchg
push
popf
cmp
inc
out
push
addr16
je
sarl
fs
arpl
mov
lods
pusha
int3
lock
jmp
ficoml
cwtl
and
push
lods
mov
mov
jnp
push
xor
sbb
call
mov
test
call
xor
dec
add
mov
or
fwait
in
pop
roll
push
lods
mov
cmpb
loopne
adc
sbb
enter
adc
lods
daa
mov
add
outsl
cmpsb
adc
xchg
rorb
mov
addb
shr
loop
jl
int
mov
dec
dec
bound
adc
jp
push
cmp
lea
and
jno
mov
sahf
call
stc
push
outsl
pop
lock
inc
pusha
mov
dec
mov
and
push
pushf
popa
dec
stos
mov
push
nop
arpl
adc
pop
xchg
sub
rcr
iret
cmc
xor
roll
je
or
sub
mov
repnz
push
jno
or
je
xor
fstps
mov
sub
imul
sub
adc
shll
lock
xlat
stos
adc
inc
inc
loope
xchg
sbb
clc
xor
inc
inc
or
and
xchg
sbb
mov
cmp
aas
adc
sbb
nop
xor
mov
aam
ds
sub
and
in
pop
cld
sbb
lock
inc
stos
rorb
sub
jmp
aam
add
jecxz
jmp
popa
lods
adc
fsubs
sub
and
push
xor
mov
iret
imul
rolb
or
or
cmp
add
xchg
inc
loop
mov
cwtl
push
cmp
mov
out
dec
sub
bound
cmpsb
andb
xchg
push
or
xor
mov
add
lret
or
push
sbb
adc
les
xor
shrb
push
jecxz
shr
push
mov
aas
cmpsb
xor
or
push
add
jg
loope
jnp
sub
outsl
mov
shl
out
mov
stc
pop
add
es
out
push
gs
mov
or
or
cwtl
add
and
adc
xchg
mov
ret
and
and
es
jge
pop
mov
push
adc
bound
sti
in
lods
add
add
into
and
xor
or
mov
daa
loopne
adc
and
xchg
or
sbb
dec
xor
sti
inc
addb
push
ret
and
mov
inc
jmp
sbb
mov
sbb
in
shrb
mov
push
mov
inc
push
push
shrl
popf
lock
loop
mov
xor
sti
movsb
mov
xlat
add
cmp
stos
stc
or
jbe
or
lret
sbb
jns
lcall
les
inc
mov
push
xor
jb
arpl
or
popa
sti
into
push
cltd
adc
inc
mov
add
pop
xor
repz
cmp
cmp
repnz
out
add
cmp
sti
xchg
add
xchg
ss
outsb
mov
mov
movsl
scas
lcall
and
leave
test
cmp
repnz
mov
fwait
out
arpl
add
imul
pop
add
mov
into
and
ljmp
push
lret
fwait
mov
push
bound
pop
out
and
push
add
and
cs
jg
orb
add
mov
pop
dec
stos
jb
add
subl
adcb
or
mov
or
cmc
nop
mov
mov
loopne
jnp
testb
pushf
fsub
and
cmp
lock
push
dec
lods
xor
mov
pop
into
enter
std
mov
xchg
in
push
sub
inc
dec
cs
pop
xchg
orb
xchg
xchg
inc
or
xor
cmp
mov
lret
leave
fwait
jo
add
arpl
jns
add
jg
sub
sbb
movsb
ljmp
fwait
mov
sbb
lods
inc
shl
rorl
cli
mov
xchg
fldl
xchg
push
inc
nop
addr16
fldenv
mov
add
je
dec
mov
mov
jmp
add
pop
out
ds
mov
add
cmp
xor
add
pop
lret
stc
sub
sub
cmpsl
pop
add
lcall
add
mov
mov
out
rorb
inc
imul
push
out
je
or
in
add
nop
mov
add
xchg
mov
ljmp
mov
add
cwtl
jns
add
pop
cld
shl
ret
insb
xcrypt-ofb
cmpsl
stos
dec
push
loope
test
add
lahf
fistpl
mov
fdivl
or
aaa
ret
xor
add
push
mov
out
or
adc
or
and
popa
cmp
mov
pop
or
add
add
int
mov
dec
jno
sbb
xchg
incl
stc
cmpl
das
xor
add
sbb
notb
add
jo
inc
mov
cs
insb
xor
mov
aam
mov
pusha
and
bswap
dec
lret
cmp
sbb
nop
aas
repz
shl
fnstenv
sti
mov
roll
aam
add
xchg
cltd
pop
pushf
cmp
test
push
xor
add
lods
cs
push
add
pop
rol
push
fistps
sbb
les
movl
ror
sub
fcoml
and
fs
adc
rorb
test
jo,pn
mov
add
xor
sub
cmpsb
fimull
and
add
outsb
and
xchg
in
icebp
imul
iret
ror
cmp
xchg
ja
sahf
sbb
into
add
lods
cmpsb
mov
adc
mov
lea
and
push
jb
add
pusha
add
stos
dec
hlt
or
xorb
cltd
jnp
push
xor
lds
ds
sbbb
movsb
pop
out
add
repz
sbb
cmp
lret
mov
das
outsb
orl
and
adcb
test
call
push
dec
add
add
push
outsl
push
xor
jne
cld
lret
mov
mov
dec
jb
add
out
ret
sub
push
shll
mov
sbb
mov
add
push
add
jo
or
mov
sbb
dec
pop
mov
lea
pop
ja
popa
mov
adc
mov
sub
jae
jmp
mov
and
rcl
xchg
daa
je
jg
repz
fisttpll
xor
imul
jl
mov
nop
push
dec
lds
mov
mov
or
sbb
add
jg
push
lret
mov
ja
mov
rcrl
in
mov
nop
fadds
add
mov
pop
pop
idivb
add
xchg
cli
sbb
push
mov
adc
popf
cmc
mov
out
push
jns
iret
add
mov
jge
cmp
mov
sub
inc
dec
add
aaa
fsubs
cmc
mov
imul
pop
mov
xchg
insl
xor
and
mov
les
jmp
push
or
pusha
sahf
xor
sbb
sbb
cld
xchg
add
in
mov
add
sbb
je
cwtl
sbb
mov
scas
sarl
inc
xor
jecxz
pop
add
lods
dec
inc
cmpb
adc
icebp
std
pop
fsubrl
dec
sbb
movsb
add
inc
bound
adc
add
and
in
jmp
pop
adc
hlt
sbb
mov
sbb
adc
xchg
mov
push
xor
hlt
add
and
dec
cmc
mov
pop
sbb
push
sub
cmp
pop
jns
enter
jg
add
ret
aaa
pop
lock
addr16
xor
fcompl
jmp
mov
xchg
pop
sub
out
test
mov
adc
jbe
push
inc
hlt
mov
shlb
pop
xor
int3
int
cwtl
jmp
mov
frstor
adc
add
add
lcall
xor
adc
insb
add
ret
mov
add
nop
cmp
cmpsb
xchg
sahf
sarb
mov
faddl
mov
xchg
cmpsl
out
dec
adc
pop
les
inc
jge
enter
or
add
enter
dec
mov
push
clc
adc
mov
pop
mov
and
ljmp
xor
rcrb
fdivrs
notl
xchg
pop
shll
push
mov
cld
mov
sbb
dec
push
bound
inc
mov
or
rcrb
or
inc
nop
and
push
fs
arpl
in
jnp
xchg
mov
jg
xor
lcall
inc
push
arpl
mov
insl
add
and
stc
lret
sbb
pop
xchg
adc
add
sub
xchg
and
or
outsl
mov
and
pop
movsl
stos
inc
jo
push
add
cmp
push
int
loope
and
mov
mov
rcl
push
out
adc
jb
addb
mov
ss
xchg
xchg
jmp
add
movb
mov
jge
and
cmpb
push
push
sub
imul
hlt
les
sbbb
out
mov
loope
dec
pop
pop
and
mov
push
ficomps
push
mov
iret
adc
popf
pop
fwait
std
add
adc
shrb
or
enter
int3
loopne
pop
out
add
cmc
push
sub
daa
js
and
sbbb
out
rclb
pusha
popa
push
adc
int3
cmpsb
cmp
inc
xor
push
popf
pop
dec
lds
pop
mov
shll
out
sub
test
mov
test
add
dec
dec
aad
cmc
pop
cli
adc
add
dec
enter
add
mov
and
mov
add
notb
hlt
out
pop
dec
cmp
jg
fdivrs
aas
mov
and
shrl
and
xor
xchg
ret
idivl
xchg
out
lods
jno
jns
sbb
add
mov
pusha
cmp
sarl
or
fcompl
push
loopne
sbb
test
rolb
out
scas
jle
mov
push
pop
cmp
loop
je
and
cmpsl
subb
fldenv
aad
add
jns
out
push
xor
stc
es
jmp
mov
or
roll
sbb
fwait
loopne
in
or
imull
pop
pop
in
or
rcrl
pop
mov
add
cmp
call
mov
lock
adc
cld
dec
arpl
pop
pop
inc
push
add
movsb
insl
xlat
pop
pushf
xchg
out
leave
fwait
pop
add
xor
out
dec
pop
jo
sub
mov
ja
inc
pop
xor
add
cmc
lds
push
sbb
lock
lcall
or
mov
pop
xor
add
inc
out
inc
dec
dec
aaa
test
or
mov
xlat
cmp
loopne
flds
fmulp
adc
sbb
add
test
stos
pop
dec
pop
inc
lds
testb
pushf
fmulp
mov
loopne
add
dec
sbb
fcoml
ds
sbb
lahf
mov
dec
and
sub
pop
loopne
add
xor
call
shlb
push
lds
inc
stos
aad
js
jmp
nop
test
or
sbb
fidivs
pop
pop
dec
sbb
repnz
pop
add
es
mov
add
stos
pusha
add
scas
fldt
mov
ja
std
pop
in
shrb
adc
lds
sub
adc
sub
push
shrb
jne
jo
add
push
pop
jno
js
aad
and
cli
sub
add
and
les
lahf
mulb
cmc
add
notl
mov
push
push
sbb
inc
sti
enter
cwtl
mov
mov
add
add
mov
jnp
add
loop
fs
es
adc
jo
push
mov
mov
cmc
ret
push
cmp
enter
imul
xchg
add
hlt
inc
fsubrl
lea
cltd
clc
popf
lret
add
push
sahf
adc
fsub
mov
cmp
rcl
xchg
loopne
jno
and
add
imul
or
mov
test
ss
lds
add
subb
or
fnop
add
adc
push
pusha
addl
lcall
mov
and
sbb
lock
clc
xchg
inc
xor
mov
test
lahf
daa
stc
into
dec
sarl
cmp
shl
push
shlb
add
xchg
xchg
add
sub
add
inc
jg
xchg
shlb
sgdtl
jbe
push
aaa
js
cli
iret
sub
sub
lock
mov
pop
sarl
inc
repnz
mov
jno
jno
add
lods
cmp
es
lock
push
sub
jg
into
jge
sub
push
add
imul
lock
test
sub
ret
inc
adc
add
loopne
add
jb
lods
mov
add
sub
movsb
cmp
adc
cmpsb
je
push
pushl
add
dec
pop
mov
and
dec
mov
pop
jb,pt
xchg
add
push
jnp
insb
cmp
add
ret
aas
dec
in
or
stos
pop
adc
fdivrs
xchg
mov
test
pusha
enter
sub
push
addr16
call
sub
xor
push
adc
fisttpl
push
push
push
jae
out
mulb
dec
inc
test
addr16
mov
dec
or
cmpb
pop
lock
xlat
sahf
sub
mov
cmp
inc
cmc
xchg
cmp
pop
cmp
sbb
scas
ss
xchg
sbb
add
add
mov
and
mov
cmp
mov
movsl
xor
dec
adc
hlt
mov
jbe
add
lods
push
lock
je
add
lahf
adc
mov
pop
aaa
cltd
inc
pushf
ret
jp
cwtl
shlb
add
inc
sub
js
movsl
and
push
loop
pop
pop
ficomps
popf
lret
rorb
sub
or
iret
fiadds
and
dec
clc
ret
imul
add
dec
push
sbb
or
sub
mov
call
inc
mov
add
mov
mov
mov
sub
call
lcall
push
ficompl
les
fadds
mov
test
int3
cmpsl
sbb
popf
xor
cld
xchg
or
jo
enter
mov
dec
mov
test
mov
int
into
inc
int
mov
ret
inc
aaa
adc
push
jnp
sub
pop
iret
push
xor
pop
fs
jno
lret
jl
dec
xor
or
in
mov
dec
das
mov
xor
xor
or
mov
sbb
xchg
sub
imul
add
fldl
jmp
fcoml
sub
iret
roll
cltd
mov
sbb
jb
add
dec
jecxz
int
add
popf
xchg
out
pushf
add
pop
or
jl
out
mov
rcll
push
sbb
mov
add
push
mov
sti
dec
pop
aas
lock
xor
test
clc
cmp
aaa
ss
mov
popl
or
je
adc
mov
or
loopne
cmc
mov
jno
sbb
jl
into
xor
add
add
loopne
scas
xchg
lcall
movsb
lret
fsubl
jp
mov
adc
imul
ret
add
push
cmp
sub
loope
pop
inc
xor
add
decl
xchg
mov
fcomps
add
mull
je
movsl
adc
sub
mov
loopne
push
add
add
scas
push
mov
jno
add
sub
pusha
in
push
add
je
add
scas
xor
mov
add
aaa
xchg
jmp
loopne
std
pop
pop
imul
repz
sbb
add
stos
xchg
or
js
lods
sbbb
fisubl
roll
imul
add
sbb
add
and
ret
shld
mov
jge
mov
mov
sbb
push
loopne
imul
fwait
clc
mov
mov
or
cmp
stos
aas
xorb
mov
pushf
popf
pop
inc
dec
push
and
xchg
test
or
fidivrs
ret
mov
mov
mov
out
loop
mov
in
add
add
xor
jo
mov
inc
cs
ss
xchg
mov
dec
sbb
loope
mov
xorb
nop
jne
pop
sbb
cld
gs
icebp
xlat
leave
shl
xor
or
ljmp
adc
adc
rol
cmp
cld
bound
mov
push
xchg
stc
outsl
cld
movsb
in
jge
fdivrl
cld
jmp
xor
loopne
dec
adc
frstor
cmp
push
mov
xchg
xor
fiadds
adc
mov
mov
lods
loop
add
faddp
mov
shrl
test
movsb
in
or
jmp
scas
add
mov
sbb
mov
mov
rol
cwtl
je
mov
xchg
and
fs
int3
inc
dec
mov
sbb
pop
in
xor
aas
jae
xor
lock
es
aam
cmp
jg
xchg
jo
pop
dec
push
mov
jns
add
add
imul
stos
ret
pop
xlat
push
jge
dec
mov
mov
pop
jo
lret
xchg
rolb
inc
sub
add
mov
test
sub
les
dec
hlt
inc
incb
incb
cmpsl
sbb
testb
setns
sbb
shll
xchg
push
fistpl
pusha
hlt
ret
inc
push
mov
popa
xor
inc
out
leave
adc
hlt
mov
push
xor
dec
popf
daa
popa
subb
xchg
testl
cmp
dec
lock
add
daa
punpckhdq
add
sub
pop
add
clc
rcrb
mov
jmp
call
inc
mov
inc
cmp
jmp
das
in
lret
add
inc
test
and
pop
cmp
rcrb
inc
ja
inc
pop
aas
mov
inc
or
fsubr
xlat
rolb
push
jae
int
sbb
sbb
push
dec
lods
test
test
stos
jmp
push
mov
jb
and
dec
add
push
jecxz
sbb
dec
dec
sbb
sbb
inc
mov
faddp
jmp
mov
and
mov
jmp
and
inc
dec
es
push
nop
fldenv
adc
daa
xor
pop
adc
rorb
mov
ret
dec
stos
add
sbb
add
inc
mov
and
push
jno
xchg
jnp
adc
cwtl
pusha
andl
arpl
add
loope
push
mov
lret
popf
cmp
sub
xor
clc
pop
xchg
add
aam
cs
xchg
ret
stc
ljmp
mov
sub
insb
push
test
loopne
add
mov
out
add
pop
dec
aas
jo
add
and
aad
add
mov
cmp
imul
add
roll
rcll
pusha
shrb
mov
les
push
add
adc
and
and
xlat
adc
mov
pushf
and
fsts
pusha
adc
mov
fisttpll
inc
inc
mov
fists
cmp
add
inc
jecxz
test
cli
ret
aam
cmp
inc
adc
fadd
and
or
out
mov
adc
test
mov
add
and
imul
out
xchg
adc
mov
test
mov
in
mov
jl
sbb
das
addl
cwtl
aas
pop
test
shr
das
push
faddl
imulb
cmp
mov
xchg
dec
jnp
mov
add
cwtl
push
imul
xchg
js
fiadds
outsb
jle
insb
sbb
loopne
pop
dec
andl
inc
lret
ds
xor
mov
pusha
ja
test
stc
push
xchg
and
imul
sub
sarb
jae
test
inc
cmp
out
dec
sbb
pop
ja
cwtl
add
jge
jmp
push
movl
or
sahf
dec
inc
dec
sbb
add
arpl
cmpsl
add
fidivrs
in
push
add
xchg
mov
stos
fsubrs
loope
and
dec
jge
ds
ja
jae
add
pop
add
add
movsb
jo
pop
dec
sub
cwtl
fsts
dec
add
add
push
jp
fadds
add
add
pop
pop
mov
xchg
int3
div
stos
aam
cmp
pop
add
push
cmpsl
das
xor
fstpt
clc
add
sub
inc
test
xor
adc
inc
divb
les
dec
add
cmp
add
xchg
arpl
xor
dec
ja
insb
fs
nop
lock
xlat
push
sbb
push
or
movsb
dec
dec
add
loop
and
ljmp
adc
dec
and
or
add
push
or
add
rcrl
nop
mov
push
test
rcrb
xlat
push
pop
movl
out
clc
add
into
je
stos
jle
push
pop
adc
or
hlt
push
das
or
lds
push
adc
mov
and
add
outsb
pop
inc
fwait
arpl
mov
cmp
repz
sbb
add
hlt
jg
cltd
test
bound
xor
add
mov
dec
sbb
xor
rolb
repnz
das
and
jl
call
ds
shlb
push
insb
adc
and
rolb
addl
xchg
mov
ss
into
xor
loop
clc
mov
add
mov
cmp
push
cmpsb
or
push
adc
add
pop
mov
arpl
push
std
add
repz
pop
jg
add
push
add
dec
mov
add
cltd
pop
cld
add
jbe
push
test
fdivr
rcll
in
das
add
xchg
mov
adc
test
lods
mov
adc
mov
adc
inc
js
out
mov
add
cltd
mov
cmp
arpl
call
in
sub
out
jg
sbb
lods
add
icebp
cmp
and
out
cmpb
add
cmp
sbb
add
mov
push
mov
negb
add
jns
in
add
sub
cmp
dec
repnz
int3
add
mov
jmp
js
rolb
bound
xchg
test
cmc
mov
into
pop
push
mov
or
and
add
xchg
push
cmp
cmp
ret
push
hlt
sub
insl
add
mov
faddl
jle
or
inc
bnd
and
pop
mov
popa
repz
addb
cwtl
push
jg
cmp
mov
ffree
inc
add
pop
ja
sbb
mov
xor
jae
jns
inc
inc
bound
and
jle
add
out
outsl
subl
aad
mov
iret
inc
cld
insl
dec
loop
sub
sahf
push
stos
adc
and
or
add
jbe
in
add
mov
ret
add
fwait
cmpsb
and
adc
pop
mov
xlat
shlb
and
mov
add
inc
xchg
es
mov
sub
xor
leave
and
hlt
mov
rcrl
sub
xchg
addr16
in
mov
in
xchg
push
or
pop
mov
shl
push
dec
xor
mov
xlat
fisubs
jp
dec
divb
icebp
flds
sarb
cmp
cwtl
scas
outsl
cmp
cmpsb
pop
pop
add
dec
stos
dec
jne
add
mov
inc
or
or
or
imul
sbb
dec
pop
xchg
dec
cli
add
mov
fwait
add
loop
adc
out
adcl
sbbb
test
or
and
fisubrs
adc
add
jecxz
pusha
int3
leave
out
add
mov
mov
mov
push
outsl
mov
add
sub
addl
adc
repz
sbb
mov
mov
es
mov
daa
ss
in
add
mov
push
push
jp
or
jb
stos
dec
call
ja
jle
add
int3
mov
insb
rorl
xchg
mov
out
cmc
sub
dec
add
jecxz
insl
sbb
mov
orb
in
test
mov
mov
aaa
or
rcrb
dec
lods
push
add
mov
mov
in
fwait
xor
xorb
xor
sarb
and
ret
pusha
and
nop
cmp
cli
cwtl
aas
add
mov
sarb
push
adc
lahf
movsb
add
and
pop
sbb
sub
push
xor
add
xchg
xor
cltd
and
les
jno
clc
add
inc
rolb
jecxz
or
test
vmread
mov
negl
test
push
jle
add
notb
outsl
mov
mov
add
pop
test
jmp
mov
sub
rcrl
fdivrl
popf
ds
add
pop
popa
arpl
inc
mov
jmp
and
add
js
inc
mov
jnp
aaa
inc
aam
sbb
notb
inc
xchg
jbe
adc
mov
add
jb
push
push
dec
pop
movsl
adc
js
enter
inc
shrl
inc
cwtl
mov
xchg
movsb
and
pushf
add
mov
in
test
mov
adc
push
mov
push
lcall
bound
mov
xchg
push
shlb
sub
push
jge
arpl
adc
cmp
ret
mov
adc
rep
lock
incl
addr16
jp
dec
jne
testb
icebp
xchg
jle
inc
cmp
sub
clc
xorb
fdivp
sub
fsubs
stc
repz
lock
clc
icebp
pop
mov
ljmp
aaa
add
shlb
enter
add
jle
faddl
add
or
cld
shrl
mov
in
sub
pusha
inc
or
mov
xchg
orb
and
jae
mov
cmp
sub
jbe
sbb
insb
push
es
cwtl
or
lret
cs
in
pop
cmpsb
rcl
lret
fiaddl
sbb
cmp
jp
cmp
add
xchg
mov
add
leave
fsub
jl
andl
jo
pop
add
add
inc
fwait
iret
or
push
cmc
pop
loopne
fstps
inc
add
rorl
or
fs
adc
sbb
orb
or
xchg
dec
inc
sarb
xor
adc
mov
add
orb
and
add
in
lcall
ret
outsl
push
ror
adc
add
insl
movsl
sbb
clc
xchg
inc
sbb
add
pop
inc
pushf
dec
add
xor
call
add
mov
add
xor
call
add
negb
adc
xchg
jne
sub
push
es
aas
mov
add
jl
pop
cmovo
add
mov
adc
pop
lahf
inc
cmp
inc
lds
inc
pop
pop
cmp
jbe
addr16
lds
andb
add
pop
daa
cmp
jle
pop
xor
pusha
filds
pop
mov
pop
in
xchg
jge
add
dec
leave
icebp
cmp
mov
adc
adc
pop
iret
faddl
inc
mov
in
add
scas
repz
sbb
jns
sbb
cmp
adc
push
dec
js
insl
pop
jge
aam
movsb
mov
les
add
imul
shlb
xorl
push
xor
push
lret
push
and
bound
inc
add
push
iret
aad
movsb
cld
fidivs
stc
andb
roll
test
sub
cmp
jle
sub
imul
jb
add
adc
cmpsb
xor
sbb
sbb
sub
pop
xchg
xor
add
ficompl
shlb
or
shll
jge
add
cmp
sub
cmp
out
ja
lods
push
clc
inc
fdivs
es
mov
aaa
mov
add
pop
inc
lods
push
or
mov
adc
xor
inc
ret
add
or
lahf
mov
adc
mov
cli
add
sbb
je
xor
sarl
sbb
dec
inc
enter
or
and
add
xchg
xchg
dec
add
jne
test
jbe
push
add
jae
inc
add
xor
mov
popa
adc
outsb
stos
xor
inc
out
fwait
adc
or
cld
xchg
sub
sbb
mov
ja
adc
xor
add
sbb
lock
add
xor
jo
loope
inc
inc
add
xchg
mov
pusha
insb
push
mov
or
adc
add
test
stos
mov
movsl
jae
fsub
xlat
jb
cmp
xchg
cmc
lcall
and
mov
shrb
mov
adc
sub
push
push
pop
push
loope
popf
cmp
test
pop
inc
roll
pop
cmp
nop
pusha
rclb
adc
ljmp
popa
add
test
sahf
loopne
pop
insl
add
jl
sbb
push
cmp
or
mov
cs
inc
jmp
push
test
adc
rclb
pop
inc
mov
lcall
fiadds
jnp
add
movb
or
dec
xor
ret
in
add
sub
cmc
int3
mov
jg,pn
or
rorl
ds
aas
data16
inc
mov
and
mov
popf
add
xor
jmp
mov
dec
adc
pop
shlb
fwait
push
out
pusha
jno
xorb
jb
add
add
dec
shlb
movb
xor
mov
pop
jne
pop
inc
popa
xchg
aaa
imul
sbb
or
cwtl
sub
sbb
or
push
cs
out
inc
inc
inc
mov
mov
cld
jo
pusha
pop
dec
clc
ljmp
mov
popf
sub
xchg
in
mov
mov
fnstsw
fdivs
testb
jne
add
xorl
ja
add
xor
in
and
adc
pop
add
add
jae
add
xor
ljmp
mov
pop
incb
cmp
mov
sub
adc
cmp
and
popa
out
adc
mov
push
adc
add
and
cld
lret
add
pop
and
push
push
ss
add
cmc
cltd
aas
lock
fsubrs
add
les
and
mov
ret
add
cwtl
arpl
pop
add
sub
pop
cwtl
and
dec
bnd
push
mov
add
push
dec
pop
jo
dec
and
inc
sub
mov
nop
mov
mull
sbb
add
test
and
cli
data16
jne
sub
popf
ret
lcall
std
xchg
push
scas
clc
jp
add
fadds
sbb
add
rcll
fadd
ds
add
addr16
mov
je
sub
aad
cmp
cmpl
cld
cmpsl
mov
outsb
jnp
inc
jl
sub
sahf
loopne
dec
movsb
jle
add
je
cmp
gs
out
add
cwtl
push
mov
push
faddl
es
mov
adc
mov
arpl
or
or
les
cmpsb
add
mov
jno
sub
pusha
sti
push
jle
push
pop
adc
mov
xchg
xlat
lods
in
cmp
aam
sub
adc
popf
or
ret
xorb
push
mov
mov
es
jmp
push
nop
xchg
add
repz
sbb
cmpsl
xor
adc
mov
adc
sahf
push
sbbl
add
and
dec
mov
sub
xor
push
xor
pop
add
cld
std
and
movsl
pop
decl
cli
sub
sub
and
cs
cld
xorb
pop
mov
out
adc
rcll
add
cmp
fisubrl
in
or
add
dec
xchg
ds
int
add
mov
mov
mov
dec
pop
adc
inc
in
pop
mov
rcll
add
lds
test
add
shl
loope,pt
pusha
xor
add
jo
jp
add
adc
icebp
add
insl
jb
dec
in
movsb
or
jle
imull
xor
push
xchg
mov
and
inc
pop
lahf
repnz
or
lods
lock
add
ja
outsb
test
xchg
inc
pop
or
jo
loopne
add
xor
leave
jne
sub
das
mov
cmp
add
mov
dec
dec
xchg
inc
outsb
inc
mov
popf
inc
add
add
ss
mov
xorb
inc
aaa
pop
inc
cs
inc
xchg
dec
arpl
push
das
xor
call
push
push
sti
push
mov
and
ret
das
add
js
leave
and
bound
rclb
int
sbb
popf
or
sub
pop
rorl
mov
jp
sbb
shlb
xor
xchg
add
push
fdivr
movsb
fst
inc
mov
ss
lret
in
and
rorb
daa
add
xlat
movsl
and
mov
add
sti
mov
iret
cltd
mov
pop
add
popf
movsl
imul
mov
inc
inc
cmp
inc
jne
jb
add
int3
cmp
aam
testl
mov
add
mov
jo
lods
faddl
fildll
mov
add
cmc
bound
or
pop
push
ficompl
add
push
mulb
jb
popf
divb
push
inc
push
mov
mov
sti
xorl
xor
imul
mov
in
pop
adc
lea
pop
mov
dec
dec
mov
mov
lea
call
mov
call
fdivs
fnstcw
shl
xchg
aaa
xor
add
jns
or
rcll
add
stos
xchg
out
or
sti
in
xorb
and
mov
push
les
imul
pop
cmp
sub
clc
jle
adc
adc
fildll
xorl
cmpsb
clc
bound
mov
pop
cld
pop
adcb
jge
push
lcall
push
inc
add
add
mov
jecxz
clc
xchg
or
xor
add
inc
call
xor
outsl
fsubrp
and
dec
bound
aas
ret
adc
mov
dec
or
in
addb
xlat
push
add
add
inc
test
push
xorb
int3
aaa
cld
shlb
sbbl
lock
xchg
inc
ret
or
pop
add
aam
sbb
jo
pop
add
mov
jl
subb
imul
aam
imul
xchg
and
shl
mov
dec
in
sar
insb
cmc
enter
es
push
inc
push
into
jae
out
push
jl
aas
leave
add
add
sbb
rolb
cli
popf
bound
pop
add
inc
mov
subb
dec
add
pop
pop
in
xchg
mov
outsl
shlb
out
xchg
scas
xchg
in
popf
mov
cmp
test
xchg
popl
mov
pop
pmaxub
add
movb
add
mov
aad
adc
add
lret
sub
cmp
inc
adc
dec
mov
mov
sbb
ja
sbb
xor
adc
test
dec
pop
push
imul
mov
add
aas
cmovns
fldl
and
outsb
cmpsb
add
mov
mov
shl
je
add
pop
fistl
mov
sbb
int3
add
jbe
icebp
xor
and
sub
dec
aaa
lock
outsl
fwait
dec
test
mov
xor
add
in
sti
add
cli
xchg
cmpsl
hlt
pop
stos
in
pop
sub
jp
bound
cmp
add
les
mov
bound
xlat
ret
fcompl
shl
inc
sbb
xchg
xchg
repnz
mov
xor
test
and
data16
jnp
add
xor
loopne
inc
lret
mov
jge
cwtl
es
add
test
push
bound
rcll
inc
xchg
imul
xchg
dec
movsl
push
sub
mov
cmp
jp
sbb
add
or
jbe
cmpsl
cwtl
pop
dec
mov
dec
fnstenv
or
test
aad
pop
rol
fisubl
mov
mov
mov
push
jae
int
add
out
call
or
add
jbe
add
fidivs
test
jge
xchg
add
or
mov
js
add
sbb
ret
push
or
adc
bound
pop
out
popf
pop
rolb
adc
cli
icebp
pushf
mov
es
jl
add
rorb
fdiv
xor
push
int3
jae
add
mov
loop
sahf
add
std
fnstsw
dec
inc
addl
inc
inc
add
lret
popf
xchg
mov
rcr
daa
mov
mov
adc
jno
in
add
add
sub
mov
lret
push
call
jle
add
and
fmuls
add
pop
inc
adc
sahf
or
mov
data16
inc
xor
add
cmpsl
clc
dec
mov
add
out
jae
stos
dec
insb
mov
xchg
pop
add
cmp
test
add
pop
call
add
jae
dec
pop
xor
cmp
popf
lock
shlb
xchg
adcl
subb
mov
jg
adc
dec
xchg
cmp
loopne
add
movsl
adc
sbb
add
das
pushf
popf
mov
cwtl
dec
and
sbb
fsubl
add
sub
cli
cs
jl
sbb
mov
out
sti
insl
clc
adc
aam
sbb
mov
push
pushf
insb
addr16
mov
push
and
arpl
add
or
jp
sti
add
jbe
add
std
in
xchg
push
add
dec
shll
js
in
dec
xor
push
ljmp
mov
subb
inc
or
mov
subl
lcall
insb
lock
adc
je
jp
sbb
push
jbe
movsb
xchg
jl
fildl
outsl
fucom
out
adc
xor
shl
and
jo,pt
andb
push
aad
incl
js
mov
mov
or
xchg
hlt
andb
mov
add
js
cmp
aas
out
mov
add
mov
adc
pop
pop
adc
mov
pcmpgtb
subl
lock
add
in
and
inc
movsl
cmp
pop
or
fidivl
std
ret
add
or
pop
push
or
mov
add
ss
bound
xor
rcll
adc
loop
add
cmp
mov
xor
dec
jo
push
aad
add
pop
adcb
xchg
into
test
xor
xchg
sub
mov
lock
add
adc
pop
out
rcrb
sub
add
jo
add
sub
push
stc
mov
xor
adc
mov
add
ret
add
out
push
pusha
repz
cld
fimull
pop
outsb
arpl
and
enter
pusha
ljmp
loop
add
jmp
jo
mov
sub
or
xchg
xor
mov
repnz
sahf
sub
fdivrs
cmp
sbb
dec
push
add
cmp
fisttpll
ret
mov
adc
push
xchg
pop
gs
add
and
pop
jecxz
loope
js
xor
rolb
mov
mov
push
jl
in
lahf
mov
pop
adc
popf
js
mov
clc
daa
mov
add
mov
sbb
add
lock
out
fdiv
push
add
add
cmc
idiv
cmp
rolb
mov
mov
lods
sbbb
adc
test
sub
or
add
pop
pop
add
loope
xor
hlt
mov
in
jecxz
adc
dec
adc
sysenter
insb
dec
pop
addb
shlb
loopne
imulb
aas
cmp
mov
inc
int
jecxz
enter
and
push
addr16
cmove
test
iret
cs
and
adc
adcb
in
xchg
push
popa
fwait
sarb
cmp
rorb
scas
ljmp
jae
pop
pop
mov
mov
shlb
mov
or
cmp
jl
add
out
jg
fisubs
inc
scas
push
insb
inc
int3
mov
iret
lock
add
jbe
ficoms
mov
push
pop
mov
add
insb
cmpsl
rolb
leave
jl
jle
cmpsb
mov
sub
add
add
js
es
out
stos
mov
or
cwtl
pop
and
in
scas
js
and
add
mov
add
cli
mov
dec
sub
mov
xchg
push
add
mov
jnp
inc
popf
dec
mov
sbb
jp
push
fiaddl
push
aaa
mov
push
stos
mov
add
mov
cli
imul
xlat
mov
add
xchg
and
add
lods
mov
enter
or
mov
dec
aam
mov
push
out
lcall
fwait
xchg
subb
push
pop
setb
ds
inc
push
inc
bound
enter
pop
stos
pop
cwtl
imul
sbb
loope
and
push
pop
xchg
loopne
dec
lret
nop
stos
scas
clc
jmp
mov
mov
movsb
sub
xchg
cwtl
pusha
add
pop
das
jae
sarb
inc
call
lods
adc
data16
jbe
mov
add
pop
pop
xchg
xor
cli
cli
nop
add
enter
fcomps
lods
idivl
add
popa
outsl
enter
pusha
in
cmp
test
movsb
mov
roll
inc
mov
pop
filds
jge
dec
out
addr16
lea
add
sub
xor
les
popf
push
pop
xchg
sti
test
shlb
sub
or
sbb
xchg
ret
and
lods
add
and
and
push
popf
stos
add
in
aam
fsts
loopne
movsl
cwtl
sub
ljmp
mov
les
in
cmp
int
pop
dec
adc
ret
and
rorb
scas
mov
inc
add
cs
mov
mov
scas
inc
cmp
xorb
inc
pop
add
pusha
inc
stos
xchg
ja
add
imul
aad
mov
push
nop
filds
rol
movsb
fmul
loopne
add
xor
add
lcall
dec
sbbl
test
enter
pop
loop
mov
into
mov
jmp
sti
mov
xor
xlat
loop
push
add
xchg
out
jle
movsl
flds
pushf
jecxz
add
popa
int
add
and
push
adc
pushf
nop
xorb
add
fmull
nop
js
jo
insb
mov
push
out
enter
mov
cmp
jecxz
sbb
xor
lock
xor
push
fdivr
sub
mov
pop
subl
cld
add
cwtl
push
out
aas
pop
xchg
sub
cmc
add
ss
cmovo
push
cmp
jmp
add
jo
sub
xor
test
dec
sbb
jp
and
mov
ljmp
dec
lock
mov
mov
out
or
clc
in
sbb
push
jmp
pop
inc
add
mov
jg
dec
ja
and
lods
sahf
rcrb
lods
out
nop
xchg
stc
in
inc
outsb
mov
addb
jo
mov
insb
enter
shlb
jmp
xchg
testl
pusha
jno
stos
cmp
mov
lods
loopne
jl
out
push
xor
gs
cltd
adc
stos
mov
das
imul
cmp
xchg
orl
push
add
mov
out
scas
inc
cmp
or
cld
adc
sbb
ds
andb
xor
andl
jne
add
movsl
mov
cs
std
loopne
sub
lahf
inc
enter
dec
cmp
aam
das
add
cmpsl
fisubl
inc
ljmp
xchg
sbb
mov
movsl
add
std
cmpsl
sbb
ret
test
fistpll
scas
xchg
shlb
xor
push
jo
pop
mov
aaa
les
add
pop
adc
push
pop
mov
popa
add
andb
daa
cld
cmpl
shlb
and
cmp
jecxz
ss
loopne
cmp
sti
dec
scas
push
icebp
jb
or
push
rcrb
xor
in
es
or
add
out
add
test
jnp
add
aas
lea
rolb
repz
and
loope
cwtl
sub
int3
mov
and
add
inc
aam
aad
lea
out
pop
add
bound
ret
inc
and
stos
adc
jp
mov
add
cmc
mov
pushf
push
insl
add
cmp
in
add
jp
sbb
ret
pop
loope
addl
mov
in
sub
jl
pop
or
mov
inc
mov
or
inc
cwtl
jecxz
add
iret
xor
test
js
fs
lock
add
pop
insl
mov
mov
lcall
mov
idiv
addl
arpl
loope
incb
push
cmp
or
addr16
subb
in
dec
lock
mov
sahf
loopne
movsl
jns
lods
add
fimull
in
mov
popf
and
test
sbbb
aad
cs
jl
mov
stos
subb
stos
add
jmp
call
cmp
add
cmpsl
mov
add
test
pop
mov
jns
pop
sbb
lea
cmp
add
jo
add
sbb
inc
xchg
sbb
js
push
xlat
add
mov
cmp
bound
mov
xchg
int3
mov
jle
inc
pop
add
cmp
pop
pop
sbb
inc
pop
repz
js
std
rclb
xchg
jmp
jne
pop
push
push
adc
outsb
mov
push
std
push
xchg
dec
shlb
je
fdivrl
das
pusha
sbb
aam
pop
mov
add
mov
js
and
mov
xor
popf
movsl
shlb
mov
sub
ret
cwtl
push
lret
in
sbbb
lea
rcr
add
out
jl
jg
mov
cs
or
xchg
sbb
int3
sbb
aam
ret
add
cmp
mov
jb
cltd
fxch
inc
mov
push
xor
cs
mov
jae
in
sbb
je
add
cs
in
or
outsb
push
cwtl
data16
enter
outsl
push
sub
loopne
jno
lcall
mov
scas
add
mov
add
call
add
insl
sbb
push
popa
orl
add
fcoml
lods
add
jl
sbb
dec
mov
fidivs
je
xor
jp
ret
jg
pop
sbb
js
and
add
dec
sti
xchg
mov
add
inc
fwait
outsb
divl
mov
add
loopne
loopne
xchg
and
push
js
mov
push
or
mov
call
add
fiaddl
jmp
mov
jo
jnp
mov
movsb
jg
or
add
popa
int3
push
jp
sbb
sub
aas
movl
call
mull
sbb
and
insb
push
lods
push
pop
imul
pop
add
pop
outsb
push
adc
xchg
push
add
ror
push
add
icebp
test
mov
mov
jne
push
add
repz
mov
inc
fs
adc
add
jl
mov
xlat
clc
xchg
mov
add
cltd
push
loope
cmp
add
mov
in
and
mov
movsl
inc
or
push
cld
aad
xchg
cmp
and
ljmp
cmpsb
dec
add
lret
push
clc
das
hlt
fiadds
std
inc
mov
aam
jle
aas
jmp
test
ret
or
mulb
and
lods
in
clc
iret
pop
jecxz
fwait
andl
je
push
ja,pt
aaa
and
pop
jo
cmp
add
movsl
cmp
incb
jecxz
jns
cmp
mov
and
subl
js
lsl
mov
call
push
push
and
cmp
lds
loopne
fisttpl
and
sbb
lods
jecxz
add
and
or
bound
and
subl
sbb
xor
cmpsb
pop
mov
in
int3
out
push
pop
jnp
add
jno
xor
mov
xchg
mov
add
sbb
mov
xlat
sub
test
faddl
pop
fwait
test
stos
inc
cld
add
test
lahf
es
incb
or
adc
enter
test
jno
lock
ret
shlb
dec
hlt
ljmp
mov
int3
inc
jge
and
test
push
cmp
pop
mov
jbe
pop
sub
clc
in
mov
or
jmp
loopne
cmp
jp
sub
inc
push
cmp
dec
cld
fsubrp
mov
stos
push
add
fwait
add
push
and
add
fcomp
add
mov
insb
and
add
lret
pop
mov
clc
incl
mov
fisubs
jnp
add
iret
pop
pop
test
cmp
cltd
cmp
jmp
sbb
add
in
sub
aam
pop
xor
add
shl
sbb
in
rclb
add
int3
inc
inc
nop
add
mov
add
mov
push
fisubl
xchg
pop
loope
rol
je
mov
adc
aaa
push
lret
int3
cmp
push
testb
xchg
fidivl
push
orb
mov
outsl
push
andl
pop
loope
cmp
dec
sub
jnp
push
cwtl
sbb
mov
sbb
lea
or
in
jnp
pop
xor
adc
mov
mov
rorb
cmp
inc
jmp
fld
inc
movntps
fcmovbe
movsb
mov
push
clc
repz
mov
stos
add
push
sub
add
push
iret
mov
jl
and
jns
out
mov
sbb
stc
test
add
loope
sub
inc
dec
mov
pop
push
rol
push
int
lds
sbb
mov
add
pop
sbb
xchg
icebp
push
nop
imul
daa
xchg
pusha
push
cmp
sbb
insl
ret
rol
and
fstl
lcall
adc
cmp
iret
clc
jns
stos
add
stc
movsl
cltd
add
add
jg
loopne
add
sub
jo
shl
xor
pushf
jo
push
popa
add
mov
add
dec
sbb
sbbb
fcmovnb
cld
mov
lods
pop
pushf
adc
mov
jbe
lock
pop
test
or
fwait
cmp
subb
and
adc
jg
jne
dec
sarl
xchg
add
add
jle
sub
rorl
add
ficoml
adc
out
ficoms
lret
and
mov
mov
add
outsl
out
pusha
mov
pusha
repz
js
dec
nop
push
adc
add
pop
add
push
add
sbb
and
sbb
test
dec
lods
insb
cwtl
imul
sbb
xor
test
les
add
and
lods
push
leave
xor
loopne
jg
add
ss
ja
add
jcxz
daa
inc
cmp
call
add
mov
out
sub
test
dec
or
push
mov
cwtl
add
jle
add
ds
mov
rorl
mov
ja
dec
aas
add
mov
cmp
adc
pusha
int
push
ret
cmp
xchg
lods
add
aas
push
add
aad
fiaddl
pop
sub
sbb
mov
adc
add
aas
inc
add
out
mov
sbb
lret
sahf
inc
rclb
pop
mov
cmp
dec
cmp
out
adc
popa
add
xchg
mov
or
adc
cmp
dec
cmpsb
sti
or
pop
mov
sub
lret
test
or
inc
push
sub
jl
mov
sub
add
paddw
insb
fsubl
adc
xor
popl
aaa
roll
push
add
adc
sub
loopne
in
sub
or
dec
rcrb
lods
xchg
cmp
loope
test
pop
nop
or
faddl
das
add
add
jne
es
jl
insl
aam
mov
push
inc
inc
mov
cmp
dec
mov
mov
dec
addr16
mov
inc
mov
lcall
push
mov
sub
pop
add
in
orb
inc
pop
add
pop
sub
loop
lock
mov
jmp
inc
int
and
mov
stos
jo
pusha
aaa
sub
push
mov
sahf
pop
mov
jecxz,pt
nop
sub
cmp
addr16
add
mov
xor
clc
les
aad
in
pop
add
mov
sub
cmp
dec
add
pop
mov
pop
push
ja
cmpsb
nop
sbbl
ret
jnp
add
jp
add
or
hlt
add
icebp
jl
cld
push
mov
not
mov
lds
add
sbb
testl
lods
xor
cwtl
lahf
add
test
xor
add
mov
int
and
add
push
push
xchg
cmpsl
repnz
push
inc
in
rclb
sahf
lock
call
dec
cmp
lods
fdiv
dec
sti
add
adc
imul
nop
inc
xchg
mov
nop
and
sub
push
inc
call
roll
in
xor
jne
aam
int3
bswap
repz
pop
jns
jne
out
inc
in
fbstp
jmp
fsubrl
add
popf
sbb
jle
or
out
sbb
in
leave
mov
int3
cwtl
cmpsb
add
std
cmpsb
pusha
aas
mov
pop
sbb
xchg
jb
sbb
ss
and
imul
negl
push
mov
sbb
pop
js
jg
xor
int3
cmp
pop
and
cmp
adc
mov
jbe
pop
mov
cmp
add
jl
and
pusha
add
fistps
jo
sub
dec
cmc
mov
fdiv
lea
add
ret
pushf
lods
inc
mov
call
in
add
or
sahf
xor
jo
bound
aad
mov
mov
movsl
or
imul
loopne
jmp
mov
lods
xchg
dec
sub
mov
add
push
rcrl
dec
sub
pushf
daa
int3
or
leave
push
loopne
jno
adc
add
fucomp
xor
cmpsb
pusha
out
jne
adc
jo
add
mov
push
add
cmp
lahf
sbb
loop
sahf
pop
shlb
add
push
mov
dec
imul
fdivrs
sbb
in
jno
cmp
sub
imulb
decl
or
cmp
sbb
add
adc
repz
or
add
add
pushf
mov
jmp
mov
cmp
mov
outsl
jae
cmpsb
ja
mov
movsb
lcall
or
adc
add
push
cmp
jge
sahf
inc
les
cmp
aas
pop
adc
sahf
pop
fcompl
sbb
ret
add
les
in
xchg
pop
fmull
jo
xchg
and
filds
jns
adc
cli
cmpsl
or
int3
and
xor
adc
int3
dec
dec
mov
sarl
cmp
fisubl
lods
in
add
push
test
aam
popf
inc
push
xorb
xchg
mov
add
mov
fidivl
mov
lea
fxch
sbb
mov
jecxz
pusha
pusha
sbb
add
dec
fwait
and
movsb
cmp
xchg
call
and
and
add
fsubl
jle
jne
adc
ret
or
and
insb
movsb
push
test
add
or
jno
add
leave
sbb
sub
jne
adc
ja
adc
leave
loope
mov
aam
mov
or
xchg
adc
cld
ret
lret
fwait
inc
dec
sub
mov
xlat
sbb
xchg
ljmp
pusha
nop
hlt
mov
push
adc
cmpsl
icebp
aad
aam
jb
mov
sub
loopne
ror
gs
popa
add
mov
and
in
int
scas
adc
jge
or
sub
inc
add
pop
xchg
push
pushl
nop
dec
add
xchg
scas
xor
cmp
icebp
xchg
hlt
arpl
pushf
sbb
jp
cli
out
or
andb
xchg
popa
daa
add
scas
imul
loope
clc
dec
adc
data16
repnz
test
enter
jle
add
jnp
test
fsubrl
sbb
pop
dec
insl
out
cmpsb
xchg
movsl
dec
lock
xchg
das
popl
mov
inc
adc
lret
js
add
mov
mov
aas
pusha
xchg
inc
enter
pop
addl
jbe
push
hlt
shl
add
mov
add
mov
add
jecxz
scas
add
add
mov
xchg
add
adc
movsl
xor
pop
rorb
inc
fsubrl
aam
lock
xorb
sbbb
lret
fiadds
add
int
fadds
jg
lsl
xor
loop
mov
out
addb
loopne
cmpl
pop
push
int3
addr16
add
loope
push
add
ss
adc
mov
cmp
jo
xor
jno
shrb
or
jecxz
sbb
sbb
sub
jo
sbb
lret
dec
jo
pop
sbb
dec
push
adc
pop
add
mov
jne
or
push
mov
xchg
dec
test
push
and
mov
subb
xchg
dec
pop
sub
loope
xchg
adc
adc
cmc
mov
lcall
movb
mov
jo
push
add
out
mov
call
xchg
popa
dec
out
js
and
xchg
insl
xchg
in
jp
pop
add
mov
mov
cmp
pop
ja
inc
in
mov
add
jle
xchg
test
popf
mov
out
dec
pop
rcrl
rorb
push
xchg
push
orb
sahf
inc
loopne
jge
mov
cli
mov
dec
and
enter
inc
xchg
jl
add
pop
testb
rorl
push
std
repnz
pusha
adcb
sbb
adc
jne
mov
dec
add
sub
dec
in
sbb
outsb
leave
mov
add
jecxz
xorb
adc
ret
mov
xchg
stos
sbb
stos
xlat
pusha
mov
adc
jl
add
mov
push
inc
nop
lds
daa
add
js
push
pop
add
pop
popa
pop
and
xor
adc
jl
adc
lock
mov
lea
add
push
add
xchg
rcrl
fs
adc
iret
mov
hlt
lret
add
jge
pushf
fistpl
xor
xchg
sbb
jne
nop
xchg
fdiv
sub
xchg
jnp
sbb
mov
jl
emms
pop
pusha
push
cmpsb
cli
sti
jne
lods
mov
lock
add
sub
xchg
xchg
push
loopne
mov
jle
cmp
enter
in
adc
adc
dec
fwait
subb
aad
daa
sbb
adc
fildl
mov
or
sbb
pushf
sub
cmpsl
fldl
and
cmp
es
imul
or
das
inc
lret
ds
jno
mov
fdivrl
rcl
cmp
enter
mov
sbbb
inc
push
adc
jnp
repnz
pop
es
cld
int
subb
pop
add
and
fs
jl
add
add
cmpsl
or
pop
insb
sbb
jmp
push
add
jbe
sbb
xlat
sub
push
mov
mov
jb
add
fidivl
mov
out
add
fcos
nop
or
jge
jl
add
loopne
inc
add
xor
jns
cmp
ret
or
add
push
out
imul
mov
pop
xchg
push
mov
insl
cmp
pop
rcrb
add
sbb
pop
sub
in
fs
sub
rolb
add
mov
or
sub
lcall
adc
xorl
dec
or
mov
xor
mov
add
push
bound
adc
cld
inc
mov
cmp
dec
pop
popf
adc
mov
cmp
add
push
lcall
dec
sarl
je
sti
jb
xchg
adc
cmpsb
adc
sbb
mov
add
inc
sub
repnz
shl
and
mov
pop
popf
pusha
adc
lods
test
push
jb
jg
bound
adc
mov
add
jnp
fcmovb
cmp
and
xchg
rorl
add
in
inc
pushf
mov
adc
xchg
add
int
ss
mov
jnp
jae
jb
push
negl
adc
xchg
jne
imul
adc
js
shlb
inc
lcall
mov
sbb
xchg
outsb
mov
decb
call
pop
dec
adc
bound
loope
pushf
and
xchg
push
pop
mov
mov
stos
aam
stos
push
lods
pop
pop
mov
test
jbe
adc
sub
sub
insb
in
ja
add
shrl
add
in
cmp
dec
cmc
jmp
push
std
scas
and
jp
pushf
sbb
cs
pushw
sub
aad
aaa
call
hlt
mov
adcb
sub
add
sub
out
mov
sbb
out
fmuls
lds
cmp
mov
mov
pop
fcom
mov
mov
mov
sub
mov
rol
arpl
add
loopne
aas
dec
push
jecxz
popa
cmp
in
sub
push
iret
and
dec
mov
push
addr16
pop
je
inc
mov
repz
lods
jg
add
pop
pop
and
xlat
cmp
ficomps
ret
mov
adc
stos
je
or
icebp
and
add
aaa
pop
or
sbb
roll
push
fwait
cmp
xchg
in
cmp
jno,pt
repnz
daa
and
lds
or
sbb
frstpm(287
cmpsl
sbb
mov
lods
pop
sarb
mov
cld
jae
or
ljmp
loopne
pop
testl
out
mov
xchg
push
pop
jmp
ljmp
jae
clc
mov
les
dec
push
mov
pusha
sbb
dec
jae
adc
daa
out
jo
add
addb
ret
mov
lock
pop
mov
sbb
movsb
xchg
rol
add
or
pop
adc
andb
outsb
inc
in
xlat
cmp
cwtl
hlt
pop
jo
xchg
add
inc
inc
arpl
adc
push
dec
or
jbe
or
xchg
mov
adc
mov
add
scas
test
xor
mov
pand
out
andb
inc
js
sbb
into
ja
incl
and
inc
add
mov
mov
inc
insl
dec
sub
pop
cwtl
inc
xchg
rol
dec
pop
lahf
dec
jno
xchg
mov
mov
pop
add
dec
leave
cmp
xchg
bound
pop
dec
or
lods
dec
inc
jl
xchg
clc
pop
sarl
mov
add
push
push
cmc
jne
add
pop
js
bound
lds
gs
xchg
inc
das
stos
pop
push
icebp
dec
inc
or
dec
cmp
jbe
sub
repz
mov
imul
shrb
mov
and
stos
add
lahf
pusha
test
or
subb
jmp
lcall
int3
sub
enter
and
xchg
xchg
test
jae
add
and
lahf
mov
sbb
rolb
jge
inc
inc
jl
jbe
stos
les
dec
add
fs
lods
mov
scas
xchg
or
lods
sahf
loopne
jle
test
cmp
mov
insl
jge
cmc
xchg
and
push
pop
mov
sbb
fs
jbe
push
push
pop
jp,pn
aaa
hlt
mov
ret
int3
xor
add
fwait
jmp
clc
imul
dec
cwtl
xor
and
sub
cmp
or
out
in
sbbb
add
icebp
loopne
cltd
lods
push
fwait
cld
mulb
sbb
ret
dec
fisttpl
out
jbe
push
cmp
cmpsb
mov
pop
xor
cmp
push
inc
lret
and
mov
jge
jmp
addb
movq
lcall
mov
mov
subb
push
inc
fadds
push
pop
mov
sbb
out
jl
push
insb
nop
adc
xchg
mov
movsb
push
addb
shlb
mov
minps
lds
cltd
or
sub
in
rolb
push
mov
pop
add
adc
pop
pop
add
sub
lret
dec
mov
or
mov
or
and
fmull
cmc
pushw
daa
add
sub
and
pop
or
fiadds
stos
xlat
mov
daa
test
jl
sub
loopne
push
insl
add
add
and
lret
inc
mov
pop
xor
pusha
push
insl
or
dec
cltd
or
pop
std
pop
push
bound
cmp
add
mov
in
xor
fadd
pop
popa
daa
lahf
jg
adc
imul
and
add
je
jle
enter
xor
add
xchg
inc
int3
scas
add
lea
dec
mov
sub
loop
ss
mov
cmp
add
mov
aad
add
into
jnp
filds
bound
or
cmp
sahf
fsubs
enter
inc
cmp
xchg
jp
cmp
mov
sti
cmp
ds
add
xchg
lods
add
adc
dec
in
add
mov
cli
addl
xchg
xchg
inc
aaa
add
icebp
xchg
or
sbb
mov
mov
cmpl
gs
pop
jl
add
jo
adc
pop
xor
add
add
push
adc
jl
add
sbb
popa
lods
and
cmpsb
mov
add
lock
mov
dec
test
dec
add
add
std
bswap
ret
mov
jo
cmp
push
add
pop
cmp
jno
cmpsl
rolb
dec
xchg
and
or
push
pop
xor
aaa
fnstcw
jecxz
pushf
push
add
mov
decb
add
pop
test
mov
jg
xchg
lahf
cmpsb
ljmp
mov
in
mov
test
data16
shl
test
clc
xchg
fsts
inc
popa
xchg
xchg
push
push
ljmp
or
dec
testb
pop
in
pop
adc
adc
add
aas
shrl
mov
insb
fmul
repnz
sbb
test
mov
mov
jmp
inc
mov
jno,pt
add
lods
mov
push
pop
rcrl
dec
sub
mov
pop
xchg
gs
or
icebp
xor
push
lret
mov
cmp
fcoml
aam
or
push
pop
sub
xchg
jo
add
pop
dec
lock
pop
loop
aas
pop
repz
push
lods
jge
mov
mov
lods
dec
add
loopne
push
pop
or
aaa
and
pop
dec
mov
jne
ja
sub
pop
movsb
cltd
addr16
stos
loopne
fcmovnu
add
sub
xor
daa
adc
leave
loop
adc
mov
cli
add
lods
push
xchg
add
pusha
add
pop
push
jnp
test
jne
aad
push
loopne
aaa
rolb
jg
pop
xor
or
inc
fldenv
test
xchg
gs
pop
inc
cltd
test
add
mov
push
push
aam
in
pop
pop
add
add
fmuls
lahf
movsb
mov
outsb
add
inc
cmpl
int3
xchg
cmp
pusha
inc
imul
test
fisubl
cmpsb
enter
js
lea
inc
or
push
xor
inc
xchg
aad
es
push
ljmp
and
test
mov
filds
sti
int3
repz
sahf
pop
mov
push
push
mov
mov
movsb
loopne
jne
sub
inc
xchg
dec
lcall
add
loopne
xor
ret
add
add
or
xchg
mov
push
repnz
mov
hlt
int3
cmp
add
mov
outsb
pop
mov
add
imul
jb
in
adc
aad
insb
cmpb
pop
lock
lods
push
sub
push
repnz
mov
inc
cmp
lock
cmp
pop
push
inc
adc
inc
jbe
enter
pop
dec
into
aam
add
in
inc
mov
jno
jb
pop
std
xchg
rcrl
js
xchg
or
jno
pop
int
daa
mov
pop
stc
push
int3
mov
jmp
cmp
lret
add
imul
xor
aaa
cmpb
fildl
enter
and
inc
sbb
and
ss
and
mov
test
cld
gs
or
cmp
pop
repnz
daa
dec
add
aas
or
stc
in
in
push
xor
test
daa
xchg
jecxz
adc
shlb
push
adc
cmpb
push
add
stos
and
stos
inc
in
xchg
xchg
loopne
or
dec
add
cmp
clc
aam
pop
mov
add
adc
shlb
dec
adc
lcall
mov
sub
xor
jecxz
add
popa
loopne
xchg
inc
in
aam
dec
pop
pop
mov
dec
fmuls
lcall
outsl
idiv
push
fisubl
cmpsl
xchg
mov
leave
xchg
cmp
mov
iret
rcrl
ret
cwtl
gs
cmp
push
pop
cwtl
bswap
out
xorl
inc
sti
pop
inc
rclb
in
ds
jg
jp
call
sub
cmc
aam
es
faddl
or
addl
add
aad
rcrb
test
cltd
jb
add
push
cmp
cld
dec
dec
or
std
add
xor
mov
test
or
pop
movsb
and
mov
shl
mov
add
xor
sbbl
sub
and
jnp
pop
test
xchg
jo
outsb
mov
imul
imul
roll
cltd
inc
sbb
add
push
test
pop
je
cmpsl
pop
jno
mov
mov
cltd
sub
xchg
mov
aam
movsl
sbb
ret
or
jno
sub
xchg
data16
mov
mov
sarl
sub
fs
xor
pop
call
sbb
call
cmpsb
cmp
in
add
mov
mov
adc
clc
mov
mov
mov
repnz
add
add
mov
add
mov
sub
out
out
repnz
rclb
pop
inc
xchg
sbb
in
pop
cmc
mov
sub
fisttps
rcrl
pop
sbb
mov
adc
lret
cmpsl
les
and
push
dec
mov
inc
lods
sti
addb
add
add
add
pop
jge
adc
nop
mov
das
fdivs
lock
add
es
push
dec
mov
add
mov
mov
lods
cmc
add
adc
mov
adc
adc
xor
nop
lock
std
xor
add
dec
and
neg
push
rorb
clc
outsb
adc
add
jo
dec
sbb
add
sbb
repnz
push
sarb
into
jp
cmp
and
adc
adc
insb
mov
dec
sarl
mov
add
mov
lods
and
mov
fldcw
jae
fdivp
push
daa
popa
dec
mov
aaa
stc
xchg
leave
into
xor
loopne
add
cwtl
mov
xchg
in
xchg
mov
movb
push
push
xchg
lods
hlt
adc
stos
xchg
fs
in
filds
mov
add
ja
mov
mov
xchg
add
hlt
sbb
add
mov
fcoml
insl
adc
add
mov
or
jp
sub
add
out
mov
lods
cmp
add
adc
push
and
jnp
lret
xor
and
pop
cwtl
and
bound
pop
fsubl
push
hlt
sub
pop
in
test
ret
ja
hlt
or
push
test
pop
sbb
xor
mov
in
add
add
jmp
add
pop
and
mov
insl
dec
inc
add
sbb
je
add
lcall
addr16
inc
sbb
icebp
das
jb
ret
enter
sub
mov
dec
in
mov
dec
xchg
or
inc
pop
pop
and
add
outsl
adc
adc
std
sbbl
sbb
addl
lcall
jo
pushf
adc
subb
ja
push
ds
pusha
or
fiaddl
movsl
cmp
inc
js
xor
xchg
cmc
insb
in
pop
add
jge
mov
xor
and
cmp
fidivl
arpl
dec
outsl
and
int3
mov
xchg
add
xchg
in
push
jns
add
faddl
mov
cwtl
jno
icebp
pusha
or
pop
insb
scas
pop
jo
jae,pn
mov
aas
add
add
rclb
add
or
add
movl
add
xchg
lahf
out
cmp
sarl
pop
xor
cmp
xchg
out
movsl
xor
inc
in
into
add
jne
lods
mov
or
mov
push
add
pop
push
adc
add
or
cmp
shl
lods
stos
cmpsl
adc
inc
xor
repnz
dec
and
rcr
pop
inc
int3
out
sub
add
cmp
adc
lods
or
mov
and
mov
add
mov
out
icebp
lret
lcall
mov
inc
and
add
stos
jecxz
scas
movb
or
test
mov
xorl
js
adc
inc
adc
and
add
xchg
xchg
sub
inc
lods
popa
int
mov
dec
fmuls
mov
and
cmp
xchg
add
call
imul
inc
sarb
mov
sub
inc
int3
call
ret
dec
dec
aam
push
outsl
clc
sbb
sub
loop
dec
lds
push
shrl
orb
add
ret
add
sahf
mov
pop
sarl
mov
jbe
push
cmp
fs
cmc
mov
stc
mov
jb
push
loopne
dec
js
push
adc
sahf
shl
pop
or
pop
dec
xchg
repnz
add
sbb
not
add
xor
les
repz
add
mov
icebp
xor
ljmp
xor
pusha
movsb
loop
bswap
jbe
out
adc
push
pushf
outsb
pop
test
js
and
clc
xorb
andb
dec
xor
push
cmp
fcomi
add
push
add
sbbb
push
ret
aas
stos
add
enter
inc
sbb
add
adc
notl
adc
mov
into
mov
adc
in
lcall
aas
add
mov
sub
jns
sbb
adc
or
test
mov
data16
mov
add
jns
icebp
das
dec
inc
in
fs
mov
ret
add
gs
fsubrl
pusha
inc
pop
std
loopne
xchg
push
fs
push
mov
inc
pop
lret
sbb
add
xorl
sbb
mov
subb
mov
add
in
sub
hlt
js
mov
dec
mov
cmp
roll
jbe
add
dec
lods
ret
lods
pop
push
sbb
arpl
and
sbb
dec
adcb
fmulp
or
push
add
pop
jle
sbb
addb
pop
fistl
jecxz
lock
or
push
pop
xchg
mov
push
mov
add
nop
xlat
add
jge
push
cs
testl
lcall
jo
adc
inc
popf
xchg
adc
pop
add
cs
mov
in
test
xchg
adc
xorl
movq
mov
cli
and
movsb
add
fsts
sub
xchg
aad
call
leave
push
add
aam
cmp
xor
lock
aam
sbb
pop
mov
subb
es
in
pushf
add
pop
adc
sub
push
dec
test
movsb
mov
das
mov
test
add
jl
sbb
fstl
or
test
cmp
dec
jb
xchg
mov
xor
iret
rolb
mov
cwtl
out
pushfw
mov
ficoms
lds
add
push
or
mov
add
js
add
lock
xlat
icebp
rcrl
stos
shl
fcmovbe
pusha
or
add
pop
xchg
lea
stos
xchg
add
loop
sub
pop
mov
push
ret
cli
fstps
stc
xorb
adcb
xchg
scas
jge
leave
and
pop
lods
lock
daa
test
neg
adc
aas
mov
cmpsb
pop
add
out
loop
aam
sarb
test
lahf
and
pop
adc
leave
jge
pop
sbb
push
add
mov
mov
mov
sbb
jnp
sbb
lods
xchg
pusha
call
mov
add
dec
hlt
out
or
mov
or
out
daa
cmpsb
jno
push
adc
add
xchg
outsb
cmpxchg
in
mov
jnp
rorl
add
jae
jne
test
and
jecxz
out
push
adc
mov
cmp
cs
push
cli
xor
xchg
or
add
ror
cmc
sbb
clc
ffreep
ja
test
fidivrs
in
cmpsl
or
std
sbbb
test
filds
or
insl
mov
xor
test
mov
mov
add
push
mov
mov
adc
xchg
insb
add
sbb
ret
add
add
jb
jp
imul
pop
add
iret
addb
add
stc
movsb
xchg
inc
movaps
push
inc
shll
jle
repnz
sbb
cmp
ja
inc
sbb
xor
cmp
cmp
popa
or
adc
icebp
adc
hlt
addl
push
das
jo
outsl
das
sbb
popl
sahf
lock
sbb
pop
or
mulb
inc
cmp
sbb
loope
sbb
mov
pop
add
push
aaa
lahf
clc
adc
add
je
lret
scas
push
xor
shlb
inc
sbb
in
out
jmp
add
mov
push
add
push
inc
inc
add
xor
add
add
outsl
push
add
jbe
dec
loop
pop
cld
pop
mov
loop
rcl
or
rcll
cltd
fucomip
pusha
fsubrl
adc
lock
iret
imull
sahf
jns
in
aam
cld
add
jae
cmpsb
rolb
lock
cmp
test
jo
stos
pop
mov
push
pop
xchg
and
add
dec
stos
or
rcrw
pop
mov
insl
shlb
mov
dec
divl
xor
sbb
xchg
xchg
push
sbb
inc
pusha
jmp
std
pop
inc
add
xchg
hlt
int
jno
sbb
xlat
and
ss
cwtl
test
xor
aas
popa
mov
inc
add
arpl
sub
add
jae
add
rcrb
xor
push
int3
push
sub
or
pop
add
sub
jmp
cmp
movsl
in
aas
sub
shrl
pop
xor
scas
mov
sub
mov
push
rclb
cmp
sub
or
shl
clc
or
adc
xchg
sbb
pop
xchg
xlat
add
lret
jnp
js
cli
dec
add
ja
lock
lods
mov
leave
fld
and
mov
pop
popa
add
push
les
gs
scas
jns
cmp
mov
rol
jmp
add
pop
xor
ss
or
adc
mov
adc
repnz
mov
adc
jmp
add
lcall
add
shr
xor
shl
cmp
scas
mov
fdivs
inc
insl
cli
incb
add
in
movb
pop
aas
test
loopne
or
sahf
cwtl
push
and
mov
add
add
or
in
aad
mov
and
lock
mov
pushf
push
loopne
movsb
inc
inc
dec
je
push
shrl
adc
mov
add
push
mov
jmp
cmp
pop
add
add
add
xchg
mov
jo
dec
sar
add
insb
cmc
test
test
adc
mov
in
jo
inc
sbb
inc
jno
bound
lods
push
mov
push
inc
sbb
insb
cmpb
cmp
add
mov
sbb
inc
inc
add
or
sub
mov
aad
roll
cmp
ljmp
je,pn
inc
std
jne
xor
add
out
sub
inc
mov
rorb
mov
dec
sbb
xchg
push
pop
add
sub
add
mov
ljmp
das
cmp
add
push
shlb
inc
jns
xchg
and
sbb
imull
xor
dec
aad
xchg
in
sbb
ret
movsb
out
dec
imul
lret
add
jle
les
cwtl
add
lea
mov
push
fcoml
repz
pop
xchg
jmp
mov
mov
jno
jb
mov
or
je
andl
adcl
dec
je
add
scas
out
mov
add
dec
pop
shr
cmp
sti
add
cmp
loope
sbb
inc
popa
hlt
sbb
aaa
aam
sub
add
mov
push
add
and
inc
mov
bound
push
jp
xchg
inc
add
out
jge
add
iret
in
pinsrw
mov
movsl
aaa
pusha
testb
cmp
sbb
inc
sub
add
clc
dec
add
arpl
scas
push
and
jb
inc
out
in
mov
mov
adc
dec
push
nop
or
repnz
stos
call
and
andb
lods
je
repnz
lret
pop
mov
das
subl
jo
sbb
data16
mov
pop
xchg
roll
call
xchg
dec
push
lds
fsubl
ja
mov
sbb
sub
pop
adc
push
scas
add
lahf
rolb
fwait
stos
fcompl
shll
outsl
xchg
and
fs
scas
add
enter
cmp
aad
mov
nop
and
push
pop
ss
push
or
push
dec
gs
daa
addr16
scas
pcmpeqd
fiaddl
jge
mov
pop
sbb
sbb
ret
bswap
mov
sub
jge
popa
bound
add
fldl
jmp
xchg
inc
pushf
lea
imul
sub
rcl
push
in
and
imul
arpl
out
test
fdivrl
mov
sbb
pop
inc
adc
roll
mov
sbb
andb
pop
es
xchg
push
add
cmpsb
jg
adc
mov
add
inc
jbe
cmp
push
sub
sti
add
add
outsb
push
mov
stc
gs
jb
insl
dec
fidivrl
add
push
dec
jp
mov
out
test
dec
pop
dec
add
fcomi
or
adcb
push
push
hlt
addl
daa
mov
in
sbb
cmp
dec
movsb
mov
adc
pop
add
sub
push
mov
cmp
cli
stos
pop
fs
xchg
dec
mov
jg
pop
dec
frstor
sub
rorl
lahf
iret
lock
enter
ficoms
cwtl
pop
mov
mov
add
adc
shl
add
mov
add
into
cmpsb
cmp
xchg
ret
add
mov
aaa
mov
inc
push
add
mov
loope
sub
clc
aam
add
hlt
cmp
stos
add
addr16
sub
mov
in
adc
ljmp
lahf
cmp
add
cmpsl
add
add
adc
xchg
icebp
iret
nop
pusha
mov
or
cli
mov
inc
lret
jno
sbb
js
push
cld
mov
mov
repz
or
jnp
add
es
push
push
xlat
lret
jne
add
sub
mov
sub
push
nop
add
js
push
gs
lods
rorb
out
jns
adc
dec
mov
loop
sbb
pop
mov
jae
loope
xchg
rcrl
push
jp
xor
xchg
fldl
jo
shl
sbb
lock
scas
push
or
add
cmpl
pop
sahf
enter
imul
inc
mov
xor
xchg
fdivrs
ret
lret
clc
sbb
or
xor
or
sti
shlb
add
cld
push
imul
mov
lds
fs
shll
adc
add
je
jb
inc
add
push
out
and
add
std
sbb
sub
add
xorb
inc
out
es
sbb
and
bound
sbb
lock
cmc
loope
inc
inc
test
push
lahf
sbb
or
adc
testl
xchg
and
aad
jnp
or
leave
cwtl
fbstp
pusha
inc
cli
cmpsb
cmp
in
and
fcom
sti
lods
add
push
in
and
or
dec
stc
add
rcrb
aad
inc
add
sbb
notb
adc
pushf
mov
ficompl
testb
cbtw
bnd
mov
andb
xchg
mov
cmc
pop
repnz
loopne
iret
testb
and
mov
add
out
and
or
add
repnz
jb
aam
in
add
adc
sbb
adc
add
das
add
mov
push
ljmp
ret
mov
pop
pop
mov
incb
les
in
into
ja
mov
mov
or
shl
sub
dec
orb
add
je
dec
xor
push
test
inc
cmp
pusha
outsb
and
xor
mov
lret
sbb
adc
cli
push
addb
hlt
mov
repnz
dec
add
loop
pop
mov
jg
mov
add
xchg
out
shlb
jmp
or
and
adc
loopne
sub
mov
loop
pop
loope
inc
and
mov
add
sbb
add
add
add
rorb
dec
sbb
inc
popa
fwait
je
adc
sbb
nop
les
pusha
enter
add
adc
push
stc
inc
popa
add
jecxz
push
xchg
jl
or
ja
imul
icebp
sbb
mov
cmp
filds
aad
mov
fwait
dec
es
dec
add
enter
lods
out
sub
pop
add
lcall
cmp
push
cmp
roll
and
dec
sbb
jae
jno
add
lods
sub
add
cmp
cmc
mov
xchg
pop
add
aad
inc
pop
sub
lods
lock
cmp
cmpl
inc
rcrb
jmp
loop
mov
scas
stos
sub
push
shlb
add
lret
out
loopne
sub
xor
and
xchg
loop
mov
dec
jg
test
inc
aam
je
addl
mov
out
lods
out
shlb
mov
add
xchg
or
arpl
imul
add
movsb
loopne
adc
cmp
sbb
xor
adc
in
push
mov
in
inc
dec
xor
rolb
bound
dec
ficompl
scas
das
pop
mov
push
and
adc
sbb
adc
mov
push
push
fdivrl
dec
mov
call
fdivrs
or
jb
rcll
push
jl
sbb
adc
dec
add
in
dec
push
lock
sub
hlt
inc
out
push
push
jecxz
and
fcmovne
add
and
mov
out
sbb
cmp
pop
push
pop
sbb
xor
mov
lock
xchg
icebp
pop
loop
inc
jg
adc
adc
test
bound
pop
dec
in
fnstenv
inc
sbb
sbb
add
xor
add
out
mov
rol
sti
sbb
aaa
add
shl
add
cmc
cld
ds
pop
push
mov
pop
jmp
mov
loope
add
lock
sahf
add
dec
dec
push
shl
mov
or
out
jmp
add
in
out
js
cmp
mov
xor
aam
cmp
sbb
loop
mov
cli
call
fs
add
test
and
sbb
jo
push
popf
adc
mov
cmp
inc
icebp
dec
std
lcall
jb
in
and
daa
fistpl
cmp
xchg
adc
inc
fisttps
push
call
xchg
or
mov
lret
aas
jge
cmp
arpl
jg
add
jo
pop
add
or
scas
iret
idivb
mov
pop
daa
add
loopne
pop
and
mov
lods
es
les
cmc
and
mov
or
cmp
test
sub
repz
pop
push
add
scas
mov
jno
sarb
loope
popa
mov
xor
xchg
lret
loopne
inc
out
or
mov
movsl
push
fs
test
lret
cmp
mov
jb
cmp
repnz
cmp
ror
pop
int3
rcl
add
repz
popa
adc
add
popa
sub
mov
outsl
rcrl
xor
mov
cmp
jle
mov
mov
mov
adc
shrl
inc
mov
inc
and
mov
mull
cmpsl
mov
or
lock
cwtl
cmp
sbb
das
mov
add
rclb
sub
push
sbb
mov
imul
fwait
orl
push
add
and
add
cwtl
std
scas
mov
test
lret
js
nop
cmp
push
nopl
dec
add
add
or
lcall
scas
shr
mov
int3
mov
push
add
mov
in
cmpl
lods
sub
and
or
xor
add
das
fldt
inc
sbb
pop
mov
push
push
cmp
mov
push
and
push
mov
jge
mov
mov
les
mov
mov
and
ret
add
test
xchg
or
inc
movsb
jecxz
inc
mulb
add
enter
dec
push
cmp
sbb
xor
push
mov
loopne
rcr
test
lods
pop
sub
fisttpll
scas
mov
xor
push
adc
add
popa
outsl
out
cltd
add
jb
mov
int3
in
popa
pop
or
movsl
lea
shlb
jg
stos
rclb
cmpb
inc
cli
faddl
mov
jle
lods
pop
push
fs
in
or
jecxz
movb
stos
enter
add
mov
cmp
mov
mov
mov
lock
mov
mov
js
and
nop
pop
push
aas
or
adc
pushf
mov
and
inc
aad
mov
push
ss
jo
add
push
int3
xchg
add
mov
lea
nop
adc
mov
xchg
movsb
shlb
das
mov
xor
xchg
ja
add
mov
cwtl
jo
fldl
and
pop
inc
testl
sbb
sbbb
imul
push
push
jb
mov
repnz
xor
ss
add
orl
dec
call
xchg
mov
and
rorb
ret
sbb
sub
fisubs
inc
mov
add
xor
cmpb
xchg
cwtl
add
fsubl
nop
and
pushf
ds
or
or
or
cs
dec
cmp
mov
and
add
xor
pop
and
ds
iret
insb
sub
fadds
add
jbe
gs
inc
pop
and
bound
ret
ret
pop
sub
ffree
xor
or
subb
ljmp
inc
xchg
push
lret
xchg
push
mov
shrb
cmp
add
std
out
sahf
dec
xchg
xor
clc
rcl
movsb
mov
cmp
mov
loope
out
mov
and
mov
add
sub
push
subb
mov
shlb
sbb
add
pusha
push
test
cmp
mov
xchg
in
push
icebp
xor
pop
dec
js
sbb
mov
loope
inc
push
push
mov
daa
push
mov
fs
add
jg
out
sbb
les
dec
dec
les
in
test
insb
cmp
inc
push
in
mov
lcall
or
sbb
cmpb
jne
xor
jbe
add
shl
xor
rcll
call
pop
sarl
adc
js
jg
das
incb
jle
out
loopne
loopne
dec
push
test
jge
add
mov
add
std
and
sub
inc
add
mov
jle
in
xchg
jno
imul
xchg
addb
jp
jmp
fadd
lret
icebp
add
push
outsb
mov
xchg
add
addb
rorl
loopne
xchg
mov
push
lret
jo
fnsave
lret
cli
mov
rolb
jl
aam
icebp
sub
in
add
sub
shl
sbb
add
xor
aam
sbb
jge
cltd
adc
icebp
cmp
sbb
out
xchg
testb
lods
pusha
inc
fnstenv
popa
das
rolb
and
aas
mov
mov
gs
dec
test
add
test
dec
shlb
clc
shrb
and
add
inc
das
inc
mov
add
dec
pop
push
jecxz
adc
mov
add
and
mov
push
aaa
add
mov
out
test
or
push
das
lock
inc
and
out
sbb
pusha
popl
inc
cwtl
lods
addb
addr16
mov
fwait
js
jbe
mov
and
cmc
inc
test
add
mov
adc
outsl
test
nop
mov
or
or
cmp
pop
add
ss
lock
jne
mov
ds
js
and
sub
xchg
add
pop
outsl
jecxz,pn
and
xchg
add
repnz
fs
pop
jns
rolb
shll
jmp
in
or
sbb
or
mov
sbb
imul
nop
xor
nop
cmp
push
nop
in
inc
push
fnsave
shll
and
int
loopne
jecxz
pop
push
jbe
xchg
in
mov
call
add
jo
and
add
cmp
and
arpl
or
stc
pop
das
sub
bound
jp
xchg
pop
add
add
scas
notl
in
stos
aam
push
sub
sbbl
aas
and
pop
loope
adc
lahf
jle
adc
scas
pushf
cmp
cmc
mov
xchg
push
enter
add
mov
sub
int3
cmp
lock
je
dec
mov
jge
test
inc
int3
push
cmp
mov
push
dec
add
inc
push
or
mov
and
adc
sub
popa
stos
add
jmp
imul
cmp
rclb
mov
cmpsl
lcall
and
ljmp
rcr
test
ret
rcrb
mov
repnz
sbb
dec
fwait
push
mov
and
mov
mov
mov
jl
in
jmp
dec
add
push
cmp
pushf
add
icebp
or
mov
inc
dec
xchg
std
outsl
xorb
mov
and
push
fiaddl
inc
arpl
dec
and
cmp
bound
insb
lock
mov
shlb
sbb
es
sti
sbbb
imul
cmpsl
leave
daa
mov
pusha
sub
fidivrs
and
cmpsb
aam
push
push
test
adc
scas
test
and
xor
add
lods
mov
cmp
xor
push
adc
in
clc
mov
cltd
fcoml
into
inc
enter
jb
icebp
aaa
sbb
sbbb
rolb
repnz
add
xlat
lds
xorb
in
cli
inc
insb
push
and
add
ss
mov
xchg
inc
and
add
testl
outsb
inc
stos
and
and
and
and
add
sub
gs
push
std
add
rorb
and
jno
jno
sbb
sbb
call
sbb
add
insb
cli
xchg
or
adc
inc
mov
sbb
sti
sbb
and
cmp
xchg
mov
enter
and
dec
movlps
mov
mov
xchg
adc
push
cmp
pop
loop
add
push
lock
adc
pushf
push
ss
ss
decl
rclb
dec
imul
gs
pop
sar
adc
jb
call
and
adc
lret
mov
cltd
or
add
pop
into
pop
sub
jae
fiadds
pop
mov
mov
add
mov
add
lldt
push
or
rcr
xchg
hlt
dec
fs
test
cltd
mov
jae
adcb
dec
xor
jns
or
imul
inc
int3
pusha
rcrb
push
add
mov
add
idiv
push
jns
out
push
mov
mov
in
incb
sbb
ret
inc
jmp
loope
adc
mov
add
pop
jp
xor
sbb
adc
arpl
add
add
imul
dec
lock
add
mov
mov
out
pop
add
mov
gs
xchg
cmpl
pop
and
ret
das
ret
xor
popf
jae
and
lock
popa
mov
and
jg
cltd
add
addr16
dec
mov
je
mov
enter
call
aaa
mov
mov
mov
xchg
js
mov
enter
clc
xor
das
inc
inc
inc
xor
lahf
imul
ja
icebp
add
gs
js
inc
jl
scas
sbb
pop
fs
test
ljmp
xchg
and
call
outsb
orl
jmp
add
cs
aam
or
out
pop
push
sbb
mov
push
sbb
mov
adc
sbb
sti
cmc
or
inc
dec
push
pusha
or
scas
shl
xor
movsl
jl
jno
sbb
cmp
xchg
lea
pop
aam
jns
hlt
mov
add
mov
cld
add
mov
jmp
addl
mov
xchg
subb
xchg
mov
jg
mov
test
clc
rcrb
xor
pop
sahf
in
push
mov
mov
dec
pop
mov
enter
addb
mov
mov
mov
xor
inc
insl
and
and
mov
cld
sub
hlt
mov
pextrw
ja
lds
and
into
pop
mov
jmp
mov
gs
pop
cmc
sub
or
cmp
loopne
lock
mov
sbb
cmpsl
orb
sbb
push
out
ret
rolb
push
sub
sub
add
xor
mov
jg
add
mov
xchg
fsub
scas
jmp
and
mov
sarb
inc
test
jmp
or
loopne
in
fldl
ds
lret
sbb
mov
mov
mov
jo
aas
add
popw
aad
divb
stos
cld
mov
movsb
das
push
sub
pop
jmp
cmp
or
sbb
push
xchg
cmc
jecxz
jge
lods
pop
jmp
mov
jne
bound
call
mov
arpl
andb
add
adc
into
pop
fwait
test
mov
mov
inc
or
leave
and
subb
dec
xor
adc
fstpl
sbb
mov
adc
loopne
mov
lcall
dec
sahf
mov
incb
out
push
and
jae
test
or
dec
sbb
loopne
pop
add
mov
rcll
icebp
pop
dec
or
stos
mov
or
sbb
cwtl
adc
add
mov
out
push
insl
mov
adc
cmp
adc
xlat
hlt
and
mov
or
and
mov
and
repnz
mov
fs
dec
pop
sarl
repz
push
notb
and
and
imul
mov
push
lds
popf
jns
lock
mov
inc
or
sbb
and
adc
mov
fsubrl
xor
and
mov
cwtl
add
or
mov
pusha
dec
icebp
and
ret
shrb
fsubl
push
xor
mov
testb
pushf
cmp
pusha
sbb
inc
cmp
cwtl
jae
aam
add
dec
das
cld
and
xor
cmpsl
mov
iret
adcb
int
mov
mov
cs
loope
sbbb
jmp
gs
outsb
mov
in
jo
add
inc
test
mov
stos
mov
xchg
addr16
popa
or
inc
or
push
in
pop
xor
int
cli
pop
test
inc
test
mov
into
mov
mov
mov
adc
push
lea
xor
cmpl
incl
mov
mov
jle
addb
sarl
bound
mov
sbb
mov
loop
inc
pop
mov
add
test
dec
std
push
fdiv
mov
icebp
xor
jbe
cld
adc
adc
push
rcrl
mov
add
ss
stos
out
mov
sub
push
xchg
daa
jns
push
jmp
orb
clc
pusha
push
out
push
sbb
fmull
mov
sub
outsb
scas
rorb
in
push
lcall
xor
arpl
and
mov
sub
hlt
mov
inc
aaa
cmpsl
jp
cwtl
xor
push
mov
out
dec
nop
cmp
or
add
dec
js
je
icebp
mov
mov
sbb
enter
push
jo
adc
outsb
sub
mov
sbbb
jne
in
or
cmp
or
insb
inc
lcall
js
rcrl
dec
sub
cmpsb
pusha
push
ret
pusha
mov
or
inc
lds
mulb
mov
add
add
outsb
lods
jne
add
or
or
mov
adc
fistl
and
pop
xchg
cld
add
cmpsl
loop
pop
inc
shlb
popf
nop
mov
testb
mov
push
sub
rolb
push
orb
cmpl
mov
and
sub
and
push
inc
mov
lret
aas
les
inc
movsb
add
and
jle
bound
cld
cli
pop
mov
inc
mov
mov
nop
fbstp
cli
adc
xor
xchg
aaa
les
jne
test
push
cmp
xorb
mov
inc
sub
xorb
dec
test
bound
out
jne
hlt
mov
sub
outsb
int
insb
or
or
sbb
fisttpl
mov
inc
daa
loopne
mov
jne
clc
xor
add
mov
loopne
jp
fiadds
insl
jo
sub
lods
adc
add
sub
call
lea
adc
pop
xor
adc
mov
outsl
mov
in
adc
fwait
adc
aaa
add
pop
xor
mov
movb
jp
mov
pop
inc
hlt
pop
jmp
jl
and
inc
mov
ds
sbb
mov
sbb
add
std
and
push
or
in
andb
mov
sub
pop
and
test
sub
mov
inc
movsb
or
test
test
mov
pop
push
add
or
xor
in
shl
or
insb
addb
push
lods
add
cmp
dec
mov
and
in
mov
test
pusha
repnz
rorb
sbb
fistpl
in
shlb
ss
icebp
sub
cmc
popa
inc
mov
mov
aam
ds
sbb
sbb
xchg
pop
loop
push
add
pop
xor
jecxz
cmp
mov
je
insl
std
imul
pop
js
es
xor
dec
mov
dec
mov
or
adcb
mov
mov
inc
pushf
cwtl
jnp
xchg
xor
leave
loopne
pusha
mov
pop
xchg
sbb
nop
insb
push
scas
xor
xor
inc
adc
cs
psrad
sbb
sub
add
repnz
inc
rorl
jle
lret
jmp
stc
lds
mov
orl
inc
repnz
pop
shlb
sbb
sti
sbb
ljmp
or
or
push
shlb
repz
xor
push
cmp
ret
pop
lar
mov
add
push
jbe
leave
xchg
jmp
and
adc
mov
aam
out
inc
pop
cmp
jns
lods
pop
mov
jmp
add
loope
aaa
xor
mov
js
sbb
and
sahf
push
call
jmp
sbb
mov
add
jbe
push
rolb
cmpsb
adc
add
lock
subb
and
ds
add
dec
jb
dec
pop
test
push
cmp
lds
call
add
movsl
mov
pop
jge
or
je
sub
xchg
lret
or
clc
ret
lods
inc
mov
in
cmp
mov
sti
rclb
sbb
mov
fs
ds
xchg
movsb
cmp
loopne
mov
or
cmp
xor
ds
mov
adc
cmc
mov
mov
adc
ror
pop
xchg
jl
aam
cmp
out
cmp
cld
add
std
fsin
and
add
imul
xchg
mov
dec
mov
pop
loope
xchg
outsl
inc
or
out
outsl
add
cmpsb
jo
inc
test
xor
add
mov
jg
loop
jae
ret
inc
loopne
adc
push
dec
mov
xchg
loope
insl
pop
jbe
aam
add
lret
push
fwait
lds
xchg
jnp
imul
push
and
or
call
sahf
les
adc
outsl
repnz
xor
imul
and
dec
adc
dec
int
adcl
cmp
add
ss
mov
pop
sub
add
pop
or
lret
dec
lods
and
scas
inc
out
movsl
add
fildl
or
xor
and
aas
cwtl
pop
rorb
xor
mov
add
cltd
sbb
xlat
sub
sub
out
xchg
lea
mov
and
xchg
iret
or
testb
adc
or
inc
lock
ja
adc
mov
xor
jbe
add
or
fiaddl
cld
and
sbb
out
ljmp
jp
xchg
jae
daa
adc
stos
mov
push
js
cmpsl
insl
mov
gs
pop
push
ja
xor
jle
pop
mov
mov
push
pop
lahf
std
and
sub
and
mull
push
popa
push
xor
fisttps
cmp
repz
loop
dec
pcmpgtw
add
imul
dec
adc
stc
push
sub
test
add
sub
addb
fistl
adc
mov
adc
rcll
orl
cltd
testl
adc
or
test
pusha
pop
adc
and
test
out
outsl
mov
add
aad
fidivl
push
mov
loope
jns
xadd
movb
pushfw
add
dec
adc
xchg
jg
addl
mov
add
sub
clc
cmp
sbb
dec
jb
nop
adc
jno
pop
jbe
or
loop
and
push
push
pop
xor
jp
aas
std
xchg
mov
push
icebp
lahf
sub
loope
cmp
jno
inc
add
ljmp
jp
or
add
mov
ljmp
in
jo
std
bound
add
mov
push
xchg
adc
cmpsl
xor
or
xchg
xchg
cmp
out
mov
sbbb
add
xchg
jns
or
cmc
andl
inc
add
sbb
and
out
imul
xor
loop
pop
mov
test
js
add
sub
fstpt
adc
or
mov
and
dec
add
out
xchg
in
push
pushw
sub
cmp
mov
loope
pushf
cmp
dec
jne
icebp
loope
dec
mov
scas
cltd
test
sti
mov
add
test
pusha
push
cmpsl
push
sar
lock
xor
mov
or
adc
call
push
add
and
xchg
sbb
adc
adc
popa
insl
cmp
add
ds
cmp
sbb
push
dec
lret
call
pmulhw
dec
cmp
lock
pop
add
test
mov
cmp
mov
push
push
rorl
and
cmp
mov
sbb
aad
sti
bound
gs
fucomp
subl
cwtl
xor
test
add
nop
push
mov
xchg
or
jnp
inc
dec
sbb
sub
mov
or
adc
out
les
loope
xorb
or
dec
and
add
mov
adc
mov
mov
dec
push
enter
iret
dec
add
mov
shl
and
jmp
or
cmpsl
rolb
shlb
verr
cmp
adc
out
and
out
fcoml
dec
adc
xchg
sub
mov
hlt
cmp
mov
mov
cmp
mov
aad
xchg
xchg
aam
out
loopne
inc
dec
pusha
ljmp
jmp
pop
fsubrp
sbb
subb
lods
test
cmp
aam
in
add
daa
or
out
xchg
rcll
jb
shlb
cli
adc
pusha
call
jno
sbb
not
rcll
add
fsubrp
mov
sub
stos
loope
cmp
dec
add
icebp
mov
sbb
loope
inc
fwait
add
pop
cmpl
mov
add
movsb
adc
xchg
into
push
add
lcall
push
mov
cmpsb
fiaddl
cmp
out
dec
add
cmp
addr16
sbb
das
cltd
aam
aas
sbb
add
ficompl
mov
fs
add
out
bound
xchg
je
pop
xchg
pop
imul
outsb
xor
sbb
mov
hlt
movl
in
call
lcall
insl
out
pushl
pop
pop
mov
ljmp
and
jecxz
add
insl
call
inc
jmp
or
pushf
sahf
add
xor
xor
push
inc
ja
stos
push
xlat
pop
loope
test
rolb
jg
hlt
shl
bound
pop
inc
xor
adc
add
dec
add
cltd
xchg
pop
pop
mov
inc
movsb
mov
add
jecxz
rolb
inc
nop
cld
pop
int3
add
add
xor
adc
mov
add
lods
jns
sbb
xchg
mov
sub
cli
cmp
mov
pop
add
popf
xchg
add
sub
or
xor
sbb
sub
mov
sti
or
mov
cmovo
cmp
or
jb
wrmsr
add
daa
cltd
or
call
psubusw
addl
mov
or
into
or
push
dec
cli
cmpb
cltd
movb
add
xchg
or
inc
adc
dec
push
jns
loop
inc
leave
mov
nop
or
pop
lea
push
scas
rcl
jp
jne
sub
jmp
clc
cmp
mov
cmp
cmp
xor
enter
pop
and
adcl
add
jl
stos
pusha
into
leave
in
pop
mov
sar
mov
testb
or
cld
dec
adc
and
add
lock
popf
pusha
lea
adc
mov
sarb
lcall
add
lods
push
fdivrl
stos
add
cmp
cs
inc
pop
sbb
call
hlt
cltd
adc
in
adc
or
in
sbb
sub
sbb
add
dec
insl
add
testb
push
xor
or
dec
pop
jne
sub
fnstcw
push
sbbb
cmp
add
mov
add
clc
sbbb
add
mov
push
shl
negb
jmp
in
in
add
jns
int
andb
pushf
sbb
in
lahf
je
sub
xor
popf
add
xchg
cmp
js
jecxz
int
mov
sub
fmuls
enter
pop
add
js
sar
adc
out
add
test
faddl
dec
adcl
test
xlat
sti
cmp
fsubrl
loopne
xor
and
jns
lods
xchg
repz
mov
pop
or
mov
shlb
jno
add
dec
insb
xchg
arpl
xchg
test
xor
add
ret
sti
add
call
stos
pop
call
call
test
out
sbb
pop
jge
add
jmp
add
dec
lahf
push
adc
movsb
jp
clc
jbe
icebp
sti
adc
add
push
int
lret
sub
or
xchg
shl
or
jo
pushf
rcl
in
inc
xor
cmpl
and
sti
loope
lret
hlt
pop
inc
push
dec
adc
and
fiaddl
cli
and
fmul
call
push
nop
xchg
popf
add
add
fwait
cwtl
mov
paddb
add
xor
mov
test
jmp
add
add
mov
and
add
dec
movsb
jno
xchg
or
fs
call
loopne
mov
mov
push
pusha
loope
imul
jl
xor
push
mov
sbb
lea
sbb
mov
adc
cltd
xor
enter
dec
addr16
mov
jns
lds
cmp
mov
or
mov
gs
ret
mov
add
lea
cmpb
mov
ret
loop
or
js
les
pop
mov
mov
enter
sbb
inc
es
pop
fcompl
js
and
cwtl
dec
sbb
repz
inc
int
stc
imul
aas
xor
std
das
addr16
out
sahf
sbb
aas
outsl
inc
dec
and
enter
gs
push
ss
repz
mov
cmp
dec
test
add
das
stos
out
incl
and
dec
sub
adc
mov
xorb
test
inc
jmp
mov
add
cwtl
mov
xor
aaa
adc
mov
notb
mov
xchg
lea
jl
push
sub
rclb
loopne
or
orb
and
fisubs
add
dec
je
add
cmp
sub
test
inc
lret
and
dec
lds
xchg
sahf
add
jo
lcall
inc
xchg
loop
sub
enter
adc
ljmp
movsb
mov
cwtl
inc
mov
lahf
and
roll
out
insl
add
popl
and
daa
add
jge
hlt
popa
test
push
jo
loop
and
ret
jl
and
in
cwtl
scas
loop
add
fstl
xchg
stos
idivb
fldl2t
ja
fistpl
movb
incb
jo
or
cmpsl
cli
cmp
cmp
sarb
jnp
fiaddl
rcrb
mov
cltd
icebp
jbe
jmp
fdivrl
add
inc
adc
mov
outsb
repnz
add
sub
cmp
ret
clc
rcr
or
std
int3
add
dec
testb
repnz
add
or
sti
push
sub
add
fstpt
adc
clc
xchg
add
xlat
xchg
fildl
xor
out
dec
into
lock
and
add
cmc
cli
enter
push
stc
add
jne
cmpsb
sbb
xor
or
lret
jle
mov
mov
and
pusha
mov
xor
dec
in
sbb
add
xchg
or
cmp
shlb
nop
mov
mov
mov
add
cmp
dec
add
sub
or
pop
je
subb
clc
mov
push
ds
push
xor
sub
sar
sub
sbb
test
add
adcl
aam
add
pop
mov
sub
dec
add
xchg
pop
push
mov
mov
jp
fisubrl
je
cmpsb
inc
xchg
dec
add
lret
cli
sub
aad
mov
popl
pop
jp
add
mov
loopne
push
add
int3
ret
add
hlt
aad
imul
pop
nop
imulb
test
repnz
add
inc
inc
inc
lods
push
loope
or
cmp
sahf
add
in
or
push
popf
sbb
out
pop
movsb
dec
add
cwtl
push
add
out
pushf
jmp
add
out
xor
xor
dec
dec
pop
inc
and
pop
xor
fldl
xlat
and
dec
xchg
sbb
mov
test
sbb
pop
add
jns
out
es
les
loope
aam
popa
add
jmp
arpl
fwait
pusha
test
mov
dec
outsb
je
ljmp
add
push
push
dec
sbb
jns
shr
lret
insb
and
lock
pop
in
xchg
inc
jbe
push
ret
inc
inc
out
arpl
add
mov
inc
cltd
fldl
out
fwait
mov
lock
dec
push
cwtl
shll
jp
add
adcb
add
mov
xor
mov
insl
add
out
fadds
shll
jmp
rolb
cmp
xor
and
adc
mov
add
mov
cmp
sbb
movl
jecxz
outsl
bound
lahf
sbb
inc
pop
add
and
adc
fwait
jo
xchg
test
dec
push
rcrb
xorl
and
lcall
sbb
leave
mov
into
pop
test
insb
dec
shrb
mov
and
andl
sub
sti
cmp
pushf
sbb
clc
cli
mov
push
jbe
jg
cmp
nop
call
dec
xor
inc
or
sbb
jmp
mov
es
lea
sbb
mov
mov
cld
add
in
out
add
adc
outsb
sub
mov
or
sub
rcrl
push
jle
inc
ror
ds
cmpsl
in
daa
xchg
push
add
aam
dec
ljmp
and
fldcw
add
jb
pusha
or
add
js
mov
sub
cltd
imul
mov
mov
jno
pop
fst
and
std
mov
add
push
insl
sbb
xchg
cmp
sub
sub
jno
push
and
imul
in
outsl
jo
sbb
pop
xor
les
enter
adc
aam
push
cmp
pop
pop
ret
jg
addr16
pusha
add
adc
xchg
add
cmp
jmp
push
sbbl
xor
adc
loop
pmaxub
nop
dec
sbb
xor
and
fists
fs
addl
add
xchg
js
adc
add
fstl
fnstenv
clc
jle
int
popf
sub
mov
mov
mov
addr16
sahf
jp
add
cli
xorl
data16
out
and
lock
iret
bound
and
pop
ja
outsb
add
inc
es
insl
mov
faddl
lds
stos
cltd
loope
adc
les
aaa
clc
jl
int3
adcb
and
push
imul
fadds
in
push
mov
sbb
add
dec
loop
and
or
clc
add
lock
jne
scas
hlt
mov
cmp
sbb
add
pop
adcb
adc
lock
fwait
cli
bound
pop
inc
mov
out
adc
inc
jbe
push
iret
inc
adc
push
jp
add
and
mov
outsl
or
jmp
imul
sbb
sbb
es
adcl
jle
mov
mov
or
jp
test
movsl
mov
sbb
push
aam
jo
fisttps
pop
mov
adc
add
das
ret
mov
xchg
add
sbb
cltd
or
or
icebp
sub
in
mov
push
sti
mov
inc
dec
add
ret
stc
test
dec
cld
movsb
sbb
push
dec
adc
jecxz
sbb
push
pop
cmpsl
outsb
add
cli
jb
cld
xor
call
push
dec
inc
shl
cmp
jl
mov
movsl
mov
and
int3
add
stos
ret
cmp
xchg
outsl
xor
xchg
jmp
icebp
mov
add
scas
insl
sar
add
out
jecxz
jp
sub
add
std
dec
or
jne
add
sbbb
sbb
mov
ret
data16
add
mov
mov
test
xchg
xchg
sbb
sbb
loopne
jl
sub
filds
sub
shl
add
fisubrs
jo
or
movsl
pushf
mov
mov
inc
add
dec
mov
jae
lods
repnz
mov
fwait
cmp
aam
aad
lock
aaa
add
sbb
or
jmp
mov
mov
cmp
out
aam
adc
mov
jno
jg
or
sub
rcrl
aaa
dec
add
cltd
fxam
call
jnp
inc
push
push
repz
loope
jno
jae
ljmp
test
fdivs
cmc
or
pop
fisttpll
adc
sbb
in
inc
int3
popf
loop
sbb
add
hlt
ds
into
cmp
or
inc
movb
lahf
and
sub
add
mov
mov
add
clc
popf
jnp
stc
cli
push
out
push
addr16
add
cmpl
adc
data16
pop
gs
sub
add
les
pop
add
mov
mov
cltd
xor
mov
add
pop
std
dec
or
sbb
add
imul
mov
xchg
cld
mov
add
add
cmpsl
xchg
xchg
dec
add
adc
push
dec
lods
orb
jge
add
int
das
bnd
outsb
add
enter
enter
jmp
sbb
gs
add
iret
shl
sbb
xchg
lock
jp
add
out
cmp
dec
outsb
add
jns
in
cmc
nop
insl
jl
and
inc
pop
xchg
sbb
mov
inc
push
xor
nop
inc
add
pop
lods
cld
jo
iret
in
xchg
cmp
adc
insb
pusha
leave
sbb
push
lds
in
mov
mov
outsb
cmpsl
imul
push
add
sahf
jne
xor
daa
stos
enter
scas
out
out
sub
or
inc
imul
push
add
cmp
push
int3
lea
idivb
popa
or
add
pop
aas
lahf
shufps
pop
mov
or
pop
sti
add
add
adc
and
xchg
data16
loopne
mov
movsb
xchg
pop
stos
das
inc
pop
addl
clts
push
mov
add
rolb
and
popa
add
imul
add
int3
xchg
int
aaa
jo
test
or
push
stc
loop
arpl
xchg
jmp
cmpsb
cmpsl
push
add
pop
aad
aas
std
add
add
clc
push
add
cli
sub
ja,pn
pop
add
xor
jge
fcmovb
jne
xorb
test
in
int3
ds
movsl
push
pop
xchg
add
and
cmp
insb
addl
lock
or
push
addl
test
pop
jb
in
data16
xor
add
cmp
sbb
sbbb
mov
les
sub
lock
aad
xor
clc
adc
repz
and
mov
shll
pop
or
jnp
add
inc
pusha
xor
pusha
and
add
mov
xchg
or
and
fsubrs
jno
xchg
repnz
loope
add
stos
in
adc
js
inc
add
lock
clc
incb
sti
push
dec
nop
add
inc
adc
mov
call
fisubs
xor
and
lcall
jb
jg
dec
out
mov
mov
cltd
push
aas
loopne
leave
add
push
rolb
enter
pop
inc
loopne
add
aam
imul
inc
aam
rclb
add
test
pop
loope
cltd
push
rclb
fstpt
xor
adc
popa
sbb
jne
mov
ret
sbb
das
and
sub
jmp
push
ja
xor
sub
add
xchg
pop
cmpsl
inc
jmp
sbb
int3
add
mov
sarl
mov
add
lret
lea
xor
ds
fists
add
mov
daa
add
scas
pop
hlt
add
xchg
enter
push
lock
test
add
scas
ljmp
pop
dec
inc
popa
test
stos
loopne
ret
insl
arpl
push
add
leave
mov
pusha
test
loope
movb
add
dec
mov
add
adc
sub
int3
xchg
in
imul
and
cld
xchg
jbe
jmp
push
stos
jae
nop
enter
imul
mov
mov
adc
xchg
out
or
insb
idivb
add
pop
jp
adc
push
int3
mov
loopne
or
mov
xchg
lods
xor
fwait
add
lahf
jnp
and
and
add
or
add
sub
lods
xchg
and
push
mov
jg
mov
and
xchg
xor
enter
dec
cmp
jg
popa
sbb
jl
xchg
jno
or
xchg
and
cmp
insl
scas
loop
ret
xor
pop
or
add
andb
repnz
gs
inc
mov
fnstenv
and
sbb
mov
fs
movaps
jmp
xchg
pop
lret
repz
nop
leave
lea
out
xor
inc
das
into
adc
add
sbb
mov
add
sbb
rolb
pop
add
sar
pop
cmp
loopne
or
mov
add
sbb
cmp
enter
rcrb
rcr
inc
push
in
cmp
add
das
cmp
xor
add
add
lods
hlt
mov
add
repz
in
jle
mov
scas
mov
loop
jo
data16
sbb
push
sub
sti
inc
or
pusha
arpl
cmpl
add
cmp
jns
test
pop
add
ja
sub
xor
arpl
enter
jo
add
mov
sub
stc
lea
dec
sub
icebp
push
and
ret
inc
loop
add
shrl
pop
dec
aas
fdivs
or
xor
cli
shrb
add
insl
outsb
jg
popa
and
mov
les
mov
xor
aaa
push
and
mov
push
in
jp
gs
and
adc
loopne
hlt
loopne
mov
testb
mov
in
es
addl
push
lods
pop
js
pushf
add
sub
cli
test
icebp
jp
sbbb
imulb
push
lret
add
mov
pop
push
sub
jbe
add
xor
sub
adc
test
xor
setnp
data16
cld
cmpsl
stos
add
or
or
sub
andb
bnd
add
xchg
test
arpl
loopne
push
push
hlt
ret
nop
outsl
dec
dec
addb
mov
mov
or
cwtl
mov
cmpsb
add
movsb
in
loope
mov
jg
jo
test
xchg
mov
pop
js
add
mov
fwait
and
dec
pop
sbb
adc
add
adc
or
cld
add
lret
sbbl
push
inc
inc
hlt
aam
mov
adc
arpl
enter
lahf
inc
clc
pop
pop
ss
pop
inc
nop
xor
push
jnp
push
sbb
nop
add
dec
inc
test
cmovb
cmpsl
outsb
xor
je
push
jp
call
push
pop
sbb
sbb
in
imul
dec
xor
mov
sbb
or
add
clc
or
adc
or
outsl
outsb
sarl
shll
cmp
add
out
cmp
lahf
jbe
hlt
add
cmp
add
stc
push
jp
add
mov
pop
or
jno
sbb
push
adc
jbe
add
and
sbb
adcb
adc
mov
push
sbb
test
and
rcrb
sbb
mov
fmul
add
lock
cmp
ret
add
cmpsl
ljmp
push
loop
inc
ja
dec
out
add
inc
sbb
add
mov
rcll
daa
fadds
dec
sub
les
cmp
mov
and
sbb
inc
mov
dec
jns
sbb
lcall
jle
addl
aam
mov
jnp
ret
inc
dec
loope
mov
push
fisubs
xor
dec
dec
pop
int3
lds
inc
mov
add
popf
fiadds
aam
scas
imul
shl
jge
in
aas
dec
push
enter
cmp
lret
stos
pop
jl
dec
xchg
lahf
add
ljmp
add
pop
dec
and
mov
gs
xor
push
mov
nop
enter
mov
sahf
add
ret
add
mov
mov
add
out
addb
mov
ret
xor
xor
cmp
mov
fadds
mov
in
cltd
mov
int3
mov
clc
or
dec
pop
mov
fs
cmp
stc
movups
shll
and
icebp
lret
movsb
js
add
lods
inc
cmp
cs
add
cltd
cmp
movsb
mov
out
jb
push
ret
cmp
mov
add
in
mov
jge
sbb
lcall
arpl
add
mov
fcompl
leave
xchg
hlt
fiadds
jmp
mov
and
mov
jmp
repz
xchg
xchg
inc
fidivs
sbb
mov
mov
pop
jns
add
and
clc
pop
sbb
stos
loopne
ret
push
dec
insb
lods
cmpsb
or
iret
cmovg
add
cli
push
pop
loop
xchg
ffree
add
inc
xor
stos
adc
mov
jo
mov
in
and
sbbb
loopne
add
jbe
cmp
mov
ja
out
jg
xchg
jle
cmpsb
fildl
adc
mov
ret
pop
faddl
mov
nop
push
add
add
scas
mov
mov
sub
dec
adcb
add
cmp
jns
cmp
test
es
jae
out
jnp
in
movsl
mov
dec
add
aaa
scas
cmp
add
add
mov
pop
add
iret
xchg
cmp
inc
push
pop
lea
and
sahf
scas
jo
pop
ret
js
cmpsb
push
add
sarl
movsl
jge
out
inc
xlat
push
add
pop
sub
add
jnp
add
sbb
cltd
fucomip
add
mov
push
xchg
pop
and
nop
push
pusha
adc
add
or
stc
hlt
in
cltd
add
jmp
out
pusha
les
cmp
push
cmp
add
out
xchg
stc
rclb
push
add
nop
or
stos
ret
cmp
xchg
sarl
nop
call
mov
dec
aad
xchg
pop
loop
sbb
adc
jmp
sbb
jmp
add
testl
sbb
cmc
stos
test
test
insl
test
dec
sub
pushf
cmp
test
or
std
test
add
adc
or
in
addl
cmp
xchg
dec
push
jnp
sbb
lret
add
insb
pop
into
cli
std
shr
mov
and
add
lds
arpl
pop
mov
inc
out
and
les
push
add
stc
and
inc
movsb
adcb
ret
test
pop
push
mov
and
adc
cmp
add
in
add
inc
mov
and
cmp
add
sahf
loopne
xchg
enter
andb
in
popa
xchg
adc
jnp
inc
xor
int
mov
add
addl
xchg
sbb
ja
add
popf
mov
out
inc
pop
xlat
test
add
adc
push
add
aaa
mov
add
filds
add
xchg
mov
push
fwait
ljmp
cmp
mov
out
or
jp
sbb
out
add
lahf
ds
add
xor
or
mov
jmp
fildl
sbb
pusha
sub
jg
or
xchg
push
mov
movb
mov
sbb
add
sbb
add
clc
mov
adc
insl
pop
dec
fdivl
add
hlt
or
jge
out
ret
add
cmp
or
cmp
aam
rorb
jmp
cld
sub
nop
pop
add
mov
je
pxor
inc
fmull
mov
or
add
add
sub
rorb
jne
xlat
inc
and
push
fsubrs
add
add
xor
iret
std
call
mov
and
mov
jbe
cmpsl
cmp
fsubrl
or
mov
cmp
out
xor
pushf
add
rcrl
cmp
pmovmskb
dec
push
or
lods
push
sub
cmp
and
push
cmp
enter
idivb
pop
repnz
adc
mov
xchg
mov
dec
cmpsb
or
out
push
xor
sub
cmpsl
xchg
push
jne
jl
mov
jg
adc
in
xchg
mov
bound
push
scas
pop
or
adc
push
dec
and
inc
aas
push
aam
push
inc
mov
sub
adc
or
stos
scas
loopne
shrl
sbb
imul
adc
je
mov
mov
or
in
add
inc
pop
fdivs
dec
lock
add
ja
dec
mov
add
jge
and
jns
sysret
clc
test
or
xor
cmp
inc
mov
nop
sbb
inc
sub
dec
stc
mov
insl
repnz
jmp
arpl
xchg
push
cmpsl
test
ja
pop
inc
pop
lcall
add
and
xchg
leave
or
adc
or
mov
lss
mov
or
push
andl
aam
mov
pop
push
xchg
push
add
adc
add
add
inc
clc
nop
jl
or
mov
loopne
lds
mov
out
cltd
mov
mov
bound
pushf
adc
xor
mov
lock
inc
shlb
add
lcall
add
jmp
pop
sbb
or
lods
push
enter
sbbb
add
push
xchg
bound
gs
pop
sbb
pop
ret
inc
jne
add
mov
insb
cli
fcom
pop
lcall
sbb
pop
or
adc
xor
add
mov
dec
push
jns
clc
inc
or
aam
loopne
enter
mov
addl
pop
xor
adc
mov
push
add
pop
add
cli
lahf
stos
rorb
or
fldl
xchg
rcrl
js
add
xor
hlt
cmp
bswap
stc
or
mov
push
push
loopne
incb
mov
ds
push
push
lea
xchg
push
sub
outsb
les
pop
pop
dec
int3
mov
xchg
hlt
mov
sbb
lcall
fnstcw
cli
icebp
mov
sub
add
in
repz
pop
ss
vmovddup
pop
mov
das
aam
test
aaa
cmp
lock
insb
adcl
mov
mov
pop
cld
mov
insl
out
sub
push
outsb
aas
and
mov
xlat
lods
adc
dec
pop
mov
icebp
pusha
mov
xchg
testb
in
fstps
mov
fwait
adc
or
and
mov
in
aas
addl
test
jo
sbb
mov
into
xchg
mov
adc
push
xchg
mov
cmp
lock
xor
pop
mov
jg
sbb
lcall
leave
sbb
sub
adc
add
cs
mov
popa
sahf
movsb
add
shr
imul
cli
add
fmull
inc
shll
iret
rcrl
push
xchg
dec
or
mov
mov
cmp
sbb
inc
pop
iret
subb
xchg
hlt
aam
push
mov
pop
xor
lock
adc
adc
pusha
lea
fisubrl
jmp
nop
mov
popa
mov
adc
push
stos
adc
add
mov
xor
lea
sbb
in
lds
adc
in
mov
add
xor
inc
imul
test
mov
mov
cmpsl
shlb
xor
cli
or
int
sbb
jg
dec
and
add
pop
pop
add
test
add
xchg
mov
add
fldenv
inc
out
gs
and
inc
mov
outsb
lods
push
nop
dec
stc
add
sbb
lret
adc
mov
scas
lods
sbb
neg
xor
aam
pop
test
call
xor
inc
mov
sub
in
notl
mov
or
rol
jmp
inc
lods
and
adc
rorl
sbb
adc
sub
inc
in
push
loopne
ds
and
test
lock
enter
dec
push
sub
inc
cwtl
pusha
dec
dec
call
pop
pop
rcr
push
xor
pop
andb
inc
xor
mov
je
out
adc
cmp
push
lret
pop
arpl
mov
push
cmp
inc
dec
hlt
add
bound
pop
les
dec
hlt
adc
adc
push
and
add
pop
scas
jg
xor
add
push
lods
les
xor
addb
xor
ret
push
push
daa
add
or
call
mov
and
or
mov
sub
xchg
ds
adc
bound
adc
pushf
inc
xor
fidivrs
lods
cmp
leave
jmp
or
inc
lock
in
bound
lcall
add
add
adc
lret
mov
jl
sti
dec
add
int
paddusw
movsb
ss
inc
cmc
fidivrl
mov
xor
push
fcompl
add
pop
cmp
xchg
loop
movsb
cmp
jl
cltd
in
xchg
addr16
ljmp
sbb
push
int3
adc
adc
push
iret
cld
clc
repz
xor
leave
arpl
cmpb
clc
add
fldl
adc
jg
mov
inc
xchg
mov
sbb
mov
test
popa
dec
push
int
fmull
or
cltd
xor
in
fimull
push
inc
aam
addb
xchg
dec
pop
gs
mov
ja
cmc
inc
fidivrl
adc
leave
adc
add
dec
xchg
sbbb
or
in
sbb
fstpl
adc
add
sbb
add
cmp
jg
jns
ja
popa
loop
sbb
cmp
test
inc
cmp
xchg
cmp
mov
and
cmp
pop
fistl
adc
mov
scas
jmp
inc
js
mov
scas
shlb
or
sarb
and
add
push
pop
xor
jae
pop
sub
adc
mov
xchg
scas
addb
pop
mov
pop
xchg
out
inc
inc
jns
outsl
and
adc
sbb
lock
filds
pop
mov
xchg
icebp
dec
data16
fisttpl
in
flds
dec
sub
shr
pop
shlb
add
xor
in
movsl
adcl
dec
cmp
sbb
dec
mov
cmpsl
cli
xchg
pop
and
leave
cltd
xlat
pop
mov
pop
xor
add
cmp
adc
push
push
dec
push
mov
xchg
jno
fisttpll
bound
inc
lea
in
sbb
jns
insl
fstpl
movsb
mov
add
int
in
jle
or
jmp
inc
and
xchg
push
shl
in
iret
popf
fmull
fstl
jmp
icebp
test
clc
shll
mov
sbb
mov
sub
pop
xchg
cmp
mov
push
add
sbb
pop
mov
dec
mov
lcall
aam
sahf
inc
js
xor
into
mov
add
cmp
sahf
mov
inc
add
sarb
or
adc
push
cmp
or
xor
movsb
mov
mov
cmc
xor
adcl
cltd
pusha
inc
test
daa
fdivs
add
out
push
nop
addb
pop
inc
shll
lret
int3
mov
fwait
mov
mov
fucomip
lcall
adc
add
mov
lods
dec
cli
sub
adc
xchg
sub
xchg
add
jno
or
push
ljmp
lods
push
adc
sbb
mov
dec
dec
loopne
adc
fwait
lods
and
in
mov
mov
cmpb
sahf
test
adc
inc
mov
inc
lds
orl
and
dec
leave
xchg
add
dec
add
hlt
mov
outsl
mov
ds
repnz
push
xchg
or
push
insb
test
lcall
cli
enter
adc
xchg
ds
xchg
dec
push
or
loop
xor
shlb
shll
xchg
das
sbbb
rcll
push
mov
jl
les
lahf
push
pushf
roll
cwtl
pop
fimuls
movsl
jb
lsl
in
mov
fistps
fcomps
xor
pusha
lods
sbbl
icebp
mov
xorl
dec
push
or
into
test
sti
adc
or
daa
cmc
out
test
nop
lock
add
in
ret
xor
adc
in
add
jmp
push
inc
sbb
and
add
cmp
jecxz
test
sub
shl
pop
shrd
sub
fistl
add
and
inc
xchg
ficomps
cmp
jp
dec
inc
adc
sbb
sub
mov
inc
aam
mov
sbb
lods
adc
add
rorb
lahf
int3
rcrb
sbb
push
cmp
js
adc
mov
adc
gs
add
push
stos
popa
jae
add
push
push
jo
lcall
scas
jno
dec
cmp
pusha
js
rorl
push
or
or
xor
test
add
inc
inc
clc
xchg
mov
loopne
out
push
cli
pop
fildl
call
roll
fisttpll
pop
adc
rorl
adc
mov
mov
filds
enter
mov
add
add
lods
in
insb
cli
add
scas
pop
adc
add
push
or
jl
cmpsb
pop
mov
inc
lock
pop
adc
js
enter
out
aad
leave
push
andl
push
shl
enter
push
mov
inc
sbb
jle
or
loope
lahf
nop
mov
jg
ss
fisttpl
imul
mov
cmp
or
xchg
bound
popf
pop
xchg
sbb
adc
lahf
mov
cmp
sub
in
sbb
das
mov
or
sbb
push
inc
push
dec
inc
dec
ret
or
mov
js
sbb
jl
and
cld
sbb
addb
add
inc
cmpsb
dec
push
in
rcll
xor
lcall
push
insb
pop
lret
aam
add
iret
test
ss
sbb
ljmp
rorb
ret
je
mov
movsl
push
f2xm1
add
jae
mov
scas
cmp
data16
imul
xchg
lock
dec
mov
push
push
loopne
ljmp
cltd
das
addb
and
push
iret
test
mov
xor
je
dec
cmp
cmp
hlt
mov
add
loope
movsb
stos
lret
and
in
jo
add
nop
pusha
mov
add
icebp
lcall
cmc
nop
adc
add
cmp
mov
sbb
jo
mov
in
cmpsl
xchg
mov
mov
inc
repz
xchg
inc
inc
xor
push
bound
or
negb
push
cmp
mov
loope
mov
jne
call
adc
aad
mov
mov
shlb
pusha
sub
scas
lahf
cltd
pop
add
pusha
adc
inc
jbe
xor
or
lea
fs
imul
and
pusha
ficompl
popl
mov
cmc
hlt
push
add
mov
adc
add
mov
lahf
mov
shll
and
cmp
sbb
and
fst
xor
fld
pop
fdivp
out
dec
jno
sbb
mov
pop
xchg
mul
sbb
adc
mov
shr
nop
cli
pusha
stos
cmp
ret
test
rclb
cmc
inc
adc
push
xchg
jo
add
clc
ret
jae
xchg
lds
cld
lods
add
data16
adc
ss
mov
and
out
nop
and
sub
sub
add
dec
mov
mov
rcrl
pop
pop
scas
sbbl
dec
pushf
mov
cmp
icebp
pop
push
test
test
dec
xchg
xchg
dec
into
adc
adc
add
lahf
lods
popa
pop
call
push
push
mov
and
pop
shrb
fadds
daa
cmp
mov
cmp
sub
push
dec
shll
push
pop
stos
and
sbb
movl
pop
into
sbb
push
hlt
das
sbb
xchg
pop
mov
inc
inc
imul
stc
test
add
add
lahf
push
popf
into
xchg
enter
stos
mov
add
push
in
fistpll
iret
or
scas
adc
mov
mov
fsubl
icebp
lock
sahf
mov
jp
repz
or
icebp
jnp
rclb
inc
and
adcb
sbb
adcb
lret
push
shrb
sub
adc
fstl
sub
iret
mov
xor
div
fldl
dec
data16
dec
add
push
lret
dec
adc
pop
lods
jg
arpl
add
jae
clts
push
and
js
aam
xchg
es
movsl
outsb
add
std
adc
pop
xor
stos
jno
push
jl
adc
divb
add
arpl
push
shl
add
mov
inc
enter
aam
enter
lds
add
ss
add
popa
push
data16
nop
aam
cmp
adc
call
ret
add
or
mov
push
jle
iret
dec
sbb
pop
or
mov
or
fldenv
pop
lods
and
sub
inc
rol
inc
out
dec
lock
sub
vpxor
sub
mov
into
jo
sti
or
pushf
inc
mov
xchg
mov
rcrb
inc
movsl
pop
jg
out
xor
cmp
sub
fstpl
pop
xchg
popf
clc
xchg
out
andb
jnp
in
cmpb
pop
lret
push
fdivrs
movsl
add
jns
rol
add
lret
mov
aam
add
inc
mov
arpl
add
mov
mov
sti
xor
sbb
and
add
xchg
adc
push
push
add
mov
mov
in
outsl
fisttpl
into
icebp
test
inc
sarb
add
mov
sub
xor
rorl
in
and
adc
rcrl
aas
cwtl
popf
sub
push
andb
call
or
jge
cld
rclb
sbb
sbb
mov
or
xchg
shl
jns
sbb
add
into
xchg
push
lahf
call
pop
imul
cs
jl
mov
add
les
ljmp
hlt
inc
loope
or
jbe
inc
mov
into
dec
das
add
mov
add
cmpsb
out
adc
sub
mov
sub
mov
sbb
test
inc
cwtl
cltd
mov
or
scas
sbb
rcll
shrb
pusha
or
divb
int3
and
inc
rol
fwait
cli
loop
out
fdivs
sbb
pusha
out
pop
sub
fwait
ss
jae
push
push
add
mov
push
rorl
subb
in
mov
inc
push
inc
push
or
jmp
pop
sub
jbe
pop
xchg
mov
lods
dec
adc
add
fs
into
inc
insb
jb
add
xchg
pop
mov
repnz
dec
pusha
dec
push
je
pop
mov
add
pop
lods
bound
dec
dec
nop
scas
xchg
adc
rorl
js
out
loope
iret
inc
or
add
ljmp
cmp
pushf
enter
inc
call
das
cmp
cmc
je
pushf
add
adc
add
popa
repnz
sbb
mov
dec
jb
sbb
dec
add
loop
add
popa
movsb
icebp
movsl
jle
add
ret
data16
rorl
and
mov
test
fdivrl
dec
mov
test
push
adc
fs
cmp
jb
push
test
mov
cmp
fstp
stc
xor
add
xchg
sbb
into
xor
mov
stc
mov
xchg
xchg
pusha
iret
fs
shlb
test
sbb
dec
pop
mov
and
mov
xchg
stc
add
shl
sub
loopne
add
bound
mov
mov
push
loope
dec
ds
inc
add
adc
cmpl
mov
test
add
dec
hlt
icebp
sbb
sbb
mov
adc
in
inc
sub
fcomps
fmull
in
loop
pop
inc
cld
iret
and
lcall
adc
xor
rcrb
inc
mov
pop
shrb
mov
enter
sub
and
sbb
data16
pop
dec
inc
pop
xchg
add
pusha
roll
pop
sbb
leave
adc
je
add
iret
mov
xchg
sbb
into
or
push
mov
dec
nop
push
arpl
add
shr
imul
les
xor
mov
sub
or
mov
inc
es
and
inc
sbb
leave
sub
jle
lahf
inc
xor
pop
rcll
ret
popf
movsl
mov
add
mov
dec
or
gs
xor
xor
repnz
sarb
mov
and
and
fisubl
sbb
andl
sbb
icebp
arpl
mov
sub
add
push
sbb
jbe
mov
das
shl
push
pop
int
test
in
and
xor
add
add
nop
cmp
out
dec
adc
aam
push
arpl
add
out
pop
addr16
dec
cmp
test
daa
mov
or
jbe
aad
fucom
jl
sub
in
lock
test
dec
mov
rclb
xor
lods
push
scas
cmp
add
sbb
add
mov
xchg
mov
roll
inc
and
xor
sbb
add
xchg
aas
das
and
dec
mov
das
adc
inc
icebp
inc
inc
inc
cmp
sbb
and
aam
xor
adcb
and
mov
jns
out
sbb
mov
cwtl
xor
mov
shl
or
dec
nop
inc
data16
add
or
push
divl
pop
mov
insb
mov
add
mov
and
movsb
pop
sbb
xor
popf
jge
lods
pop
gs
jl
ret
fs
test
fimuls
test
add
arpl
adc
mov
mov
pop
cmovno
adc
lea
sub
pusha
sbb
addr16
dec
js
dec
pop
mov
adc
sub
mov
adc
shll
imul
add
xchg
mov
pop
and
inc
add
cmp
mov
sub
es
xchg
inc
gs
add
out
mov
lods
enter
dec
xor
out
cmc
popl
inc
insb
in
clc
mov
sarb
push
fldcw
aad
mov
or
mov
add
std
sub
cmpb
loopne
inc
mov
ljmp
or
dec
int3
push
out
cmp
movsb
cli
js
mov
js
dec
and
xor
enter
mov
sarb
test
pop
sbbl
test
nop
jl
incb
and
in
clc
jnp
adc
insb
testl
or
xchg
add
push
adc
out
nop
loopne
adc
push
orb
add
sbb
mov
addb
mov
jne
add
scas
shlb
sbb
mov
in
sbb
push
xchg
cltd
mov
mov
out
cwtl
sbb
pusha
add
cltd
stos
mov
movq
xor
pusha
xor
int3
cmp
sub
leave
hlt
mov
aaa
mov
mov
dec
cmpsb
xchg
xor
cmp
add
sbb
rclb
leave
xor
mov
sbb
mov
subl
lret
movsb
sbb
setb
ror
shlb
mov
dec
subb
add
mov
pshufw
pusha
pop
push
adc
subb
mov
int3
je
mov
stc
aaa
adc
adc
mov
push
mov
movsb
sbb
or
gs
cli
cmp
add
or
mov
pop
cmc
add
push
leave
mov
faddl
cld
idivb
add
popa
xchg
movsl
roll
cmp
pop
add
icebp
sub
outsb
faddl
movsl
imul
data16
inc
mov
in
leave
mov
aad
enter
fs
fabs
imul
push
cli
popf
adc
mov
mov
sbbb
sub
inc
pop
add
ja
pop
or
push
in
js
xor
xchg
inc
push
pusha
fcmovu
imul
inc
inc
test
xchg
add
leave
adc
test
ja
jbe
add
mov
and
enter
inc
leave
cli
add
or
mov
cmp
fcmovbe
mov
frstor
pop
lock
sub
cltd
mov
xor
pusha
jl
out
outsb
andb
je
or
pop
adc
enter
iret
xor
push
mov
repz
dec
bound
insb
ret
sub
cmp
adc
loopne
adc
mov
cwtl
cmp
dec
lods
mov
in
xchg
cmpsl
shl
sahf
pushf
pop
and
out
mov
lods
dec
nop
xor
or
xorb
out
je
pop
sbb
test
mov
mov
scas
jge
test
test
mov
lods
adc
adc
add
push
lahf
aas
xchg
sahf
or
sub
pop
jle
mov
mov
dec
xor
loope
pop
add
or
fs
cli
jbe
mov
dec
call
and
sub
xor
cmp
inc
lods
cmp
dec
adc
leave
mov
inc
clc
fidivrs
das
and
inc
sbb
cmp
push
and
int3
shl
jo
insb
and
xlat
in
loopne
les
or
nop
call
jbe
mov
call
test
or
inc
jo
enter
add
jmp
push
pop
das
push
rorb
nop
mov
mov
push
call
jb
xlat
mov
mov
xor
jae
sti
mov
call
push
popf
push
push
ss
push
aad
jmp
and
jecxz
cli
rolb
insb
sub
popf
add
pop
loopne
and
jmp
in
add
insb
testl
in
fs
jecxz
es
add
sti
or
jbe
dec
test
mov
ret
adc
pop
pop
fucomp
sub
je
test
lcall
mov
rcrb
call
mov
faddp
test
cmp
mov
das
clc
and
inc
add
jns
mov
inc
lds
add
test
inc
shrl
std
rclb
gs
iret
test
mov
or
adc
add
out
add
mov
daa
imul
cmp
mov
sbb
jl
das
fdivrs
cmp
sub
or
jl
push
sbb
sub
sub
lahf
mov
xor
and
paddq
in
test
inc
sbb
xchg
add
jp
or
xor
jmp
lock
insl
add
or
ja
push
cmp
jbe
sahf
test
pushf
and
pushf
andb
inc
sbb
mov
test
push
ss
pushf
inc
int3
sbb
test
mov
adcb
and
cmp
mov
ss
mov
cmc
cmp
fcmove
cwtl
lock
movsl
and
cmp
and
scas
adc
pop
and
call
or
fdivrs
cmc
xchg
xor
mov
dec
gs
adc
in
gs
or
fwait
sbb
push
mov
loope
mov
das
or
cwtl
xor
mov
leave
adc
dec
stos
xor
sub
faddl
daa
loopne
sub
dec
leave
jo
incl
mov
push
xchg
int
leave
inc
sbb
dec
adc
sub
pop
in
repz
or
or
or
mov
js
icebp
jae
in
xchg
mov
add
xor
lret
stos
xbegin
rcrb
adc
aas
push
fbld
inc
xor
in
sbb
rclb
cs
roll
ja
push
dec
popf
mov
movsb
inc
pop
dec
push
out
sbb
cs
sub
in
xor
pop
jecxz
add
out
ljmp
cmp
push
shlb
add
mov
xchg
mov
je
sub
mov
test
pop
sbb
imul
mov
mov
add
test
jno
fnsave
mov
cmpb
jns
add
leave
ficomps
fs
popa
in
cmp
adc
mov
adc
aam
rep
mov
aaa
push
dec
pop
lods
sub
in
cwtl
dec
and
cmp
add
mov
mov
lods
repz
fs
je
enter
jns
adc
ja
adc
jecxz
cltd
nop
jl
lods
cltd
mov
cmp
or
scas
mov
mov
mov
push
push
sbb
cmp
pop
mov
xlat
push
xchg
in
in
jo
adc
sub
pop
popa
adc
gs
xchg
iret
dec
arpl
sbb
lods
jmp
pop
add
push
arpl
jl
repnz
into
jg
les
sub
dec
fs
test
aam
add
dec
push
dec
pusha
lret
sub
call
and
lods
pop
icebp
pop
pusha
push
cmp
pop
mov
mov
leave
push
inc
sub
or
je
push
xchg
xlat
add
rcr
scas
cs
adc
mov
cmp
pop
xorb
shll
or
imul
lods
lods
pushf
movsb
mov
push
pop
test
xchg
inc
popa
sti
pop
andl
cmp
jp
in
lret
inc
adc
in
or
lret
or
jmp
rcrl
repnz
mov
cmp
adc
pop
fsubs
mov
xor
sbb
add
cmpsl
dec
add
sbb
sub
test
adc
orl
sub
add
loope
addr16
loopne
ljmp
outsl
test
fwait
in
js
sarb
pop
imul
stc
shrl
lods
les
and
sahf
in
pop
sub
fwait
je
loopne
pushf
add
mov
mov
test
xchg
adc
rol
enter
or
adcb
sub
mov
xorl
loopne
mov
jecxz
data16
daa
xor
inc
sbb
ds
and
gs
testb
arpl
add
mov
jbe
scas
jae
push
int3
je
nop
outsb
xchg
popa
lods
into
lods
and
jl
adc
aam
adc
pop
push
push
pusha
dec
inc
mov
xchg
leave
adc
dec
cmp
shrl
dec
movsl
enter
xchg
and
xor
fbstp
cs
fs
inc
roll
or
add
cmp
pop
repnz
jle
push
add
and
out
les
add
pop
inc
shlb
shll
icebp
shrl
pop
lods
fiadds
add
cwtl
mov
pop
jecxz
shll
adc
or
xchg
shlb
xchg
dec
mov
mov
pushf
das
ljmp
subl
fs
lock
test
mov
ret
pushf
loopne
pop
call
ret
push
dec
adc
in
cmp
and
incb
dec
mov
ret
ror
xchg
adc
int3
jecxz
add
orb
cmp
fcoml
add
mov
adc
test
movsb
aam
pop
adc
sbbb
lcall
mov
jns
xchg
std
dec
dec
fsub
sub
clc
ret
adc
mov
inc
fmuls
lret
cld
sub
and
push
out
fcoml
mov
fistl
mov
cmp
fwait
orl
aam
mov
mov
sub
lock
add
cmc
dec
sub
sbb
add
add
pushw
mov
call
pop
xchg
add
or
sbb
rcl
test
mov
pop
mov
push
jnp
adc
hlt
es
push
int
inc
movsl
arpl
mov
mov
scas
mov
das
sbb
popa
and
inc
mov
adc
dec
add
push
sahf
nop
mov
dec
add
bound
int
mov
fincstp
sarb
cwtl
add
and
ret
roll
repnz
add
jmp
shl
in
push
call
xor
or
aaa
dec
daa
int3
mov
out
lods
xor
dec
dec
adc
leave
cltd
pop
push
and
add
and
push
add
addl
and
xchg
ret
jle
jl
inc
mov
pop
add
jmp
or
mov
pop
cmp
xor
push
xor
repnz
xor
sub
jne
pop
push
xchg
sub
pop
lea
sbb
sbb
jno
lcall
mov
inc
les
add
inc
repnz
jecxz
rorb
out
xchg
aam
int3
mov
rcrb
mov
adc
pop
or
add
ds
cmp
popa
lss
fcompl
add
cltd
rol
cmpsl
or
or
or
das
push
pusha
dec
and
jbe
lahf
adc
pop
in
add
add
jl
add
test
pusha
xor
fadd
push
mov
shrb
leave
pop
js
test
mov
enter
rorl
popf
in
add
cld
aas
ret
push
xchg
test
std
pop
aaa
add
mov
push
mov
add
fucomp
je
ret
shrb
dec
movsb
push
mov
cld
jp
add
xchg
push
sbb
push
call
add
movaps
mov
nop
movsl
add
or
popa
cmpsb
test
sbb
fnstenv
jmp
or
mov
sbb
adc
or
add
add
bound
push
push
hlt
cltd
adc
cld
fs
in
dec
or
cwtl
loop
mov
and
sub
push
xor
in
add
adc
mov
fnstenv
cmp
xor
add
mov
das
ficomps
repnz
pop
sahf
sub
add
cli
outsb
push
rcr
lahf
adcb
inc
sahf
xorl
push
mov
sbb
push
pusha
push
pop
jns
stc
pop
add
das
jp
add
sub
mov
cmpb
pop
mov
loopne
rcll
inc
sbb
and
ror
mov
lcall
fistl
sub
mov
mov
sbb
pop
mov
jo
pop
xchg
and
mov
shl
xchg
inc
int3
jno
mov
out
sbb
jecxz
add
mov
mov
sub
roll
dec
cmp
add
jb
add
xchg
or
adc
rcrl
xor
jnp
or
jo
stc
push
cld
sarb
jp
push
add
and
sbb
xor
and
xor
or
popa
inc
dec
lcall
jns
jp
das
mov
ret
xchg
pop
inc
mov
add
daa
jg
lock
xor
ja
ret
mov
lret
js
pop
sti
mulb
push
pushf
add
add
loopne
xor
pusha
and
sbb
sub
and
inc
aaa
xor
sarb
add
sti
test
mov
sub
adcb
pusha
ja
ljmp
popa
cmpl
repz
sbb
sbb
mov
xor
jmp
xor
rcrb
or
sbb
add
add
lods
push
cltd
adc
or
and
pop
lods
pusha
lea
imul
or
sar
adcl
loop
sbb
mov
and
into
jae
push
ret
jno
push
test
pop
adc
mov
addb
idiv
int
sub
pop
pop
or
push
outsl
mov
add
jg
gs
sub
pop
mov
add
je
leave
adc
dec
or
imul
and
add
fidivrl
mov
push
jbe
sub
sub
push
sbb
mov
add
cmpsl
bound
pop
enter
jnp
cld
nop
rolb
and
pop
pop
xor
adc
xor
mov
in
pop
lods
arpl
jecxz
mov
pop
push
jg
and
test
dec
add
xor
xor
pop
inc
aaa
and
add
xor
sub
inc
xor
xchg
loop
push
jns
inc
call
add
mov
jle
pop
sbb
and
and
and
or
and
sbb
push
jbe
fbld
sbb
adc
mov
addb
mov
popf
loopne
pop
sbbb
mov
dec
lea
xor
cwtl
adc
pop
push
stc
mov
inc
fsubr
mov
hlt
shlb
jmp
push
orb
outsl
sbb
and
lods
dec
and
gs
inc
ja
lods
sbb
push
loop
lock
or
cmc
sub
nop
push
mov
xor
jns
mov
cmp
mov
rol
movsb
test
push
add
sti
push
mov
sub
xor
and
cmp
rorb
sti
inc
mov
add
lahf
or
add
pop
sbb
add
mov
xchg
push
mov
dec
sbb
call
aam
insl
add
rcll
push
add
imul
xor
test
jno
add
push
add
fisubl
adc
add
repz
icebp
lcall
jecxz
jae
sbb
call
imul
cld
adcl
mov
orb
dec
xchg
sti
mov
xchg
sti
aas
int
or
jno
cmc
test
sbb
dec
fmuls
inc
repz
adc
xor
add
fwait
out
in
jmp
ja
and
pop
insl
and
push
mov
pop
pusha
insl
lods
dec
and
cmp
lods
sub
cmpsb
fsub
aad
sub
cld
call
mov
fsubs
push
faddl
fcompl
jle
inc
cwtl
adc
popa
add
aas
mov
xor
sub
andl
lea
test
inc
test
inc
mov
gs
fcomp
jmp
add
addr16
mov
sbb
jp
insb
and
mov
add
mov
adc
cmp
adc
test
sub
xor
push
loopne
test
and
shrb
stc
repnz
addb
mov
pop
movsb
nop
inc
xchg
xor
pop
pop
sbb
add
xor
push
test
cmp
adc
add
or
add
inc
jle
test
pop
adc
pop
adc
cli
cld
lret
pop
pop
sub
nop
jbe
subb
dec
ficoml
rcl
mov
push
flds
cmp
push
push
scas
movsl
pop
or
inc
jmp
push
into
enter
adc
mov
add
mov
mov
sub
mov
pushf
pusha
xor
cmp
xchg
lcall
mov
inc
add
pop
cmp
imulb
add
fimuls
push
cmp
add
pop
testb
inc
test
out
sub
arpl
test
mov
or
cmpsb
mov
mov
cwtl
mov
mov
or
jp
add
add
sbb
rolb
push
pop
bound
ficoml
jno,pt
xchg
lret
shl
bound
or
call
pusha
sarb
and
and
in
mov
add
mov
pop
adc
insb
imul
in
inc
pop
and
add
xor
orb
lods
add
cmp
mov
inc
add
xor
xor
xor
and
xchg
xor
mov
enter
mov
add
adc
mov
fdivrs
xchg
dec
and
xchg
dec
sub
stos
rorb
pop
test
adc
insb
arpl
mov
out
push
inc
and
das
or
jne
pop
adc
add
mov
popf
lods
adc
lahf
inc
stos
inc
adc
xor
xlat
cmpsl
push
jo
sti
pop
add
xor
or
popa
pop
push
stc
adc
notb
fcoml
mov
cmc
in
out
or
sub
imul
add
dec
mov
push
mov
or
in
jp
inc
cld
das
ljmp
jne
hlt
and
add
fimuls
jmp
subl
or
shrl
add
pushf
mov
sub
shlb
add
jns
pusha
inc
sbb
xor
xor
adc
add
jge
fs
cmp
les
sub
inc
add
xchg
pop
test
push
iret
ljmp
inc
enter
push
lcall
cmp
mov
repnz
sti
dec
mov
lods
dec
cltd
rorl
lods
mov
lcall
cli
xchg
lock
pushf
adc
inc
or
mov
add
pop
mov
imul
xor
xchg
leave
push
xlat
call
stos
movsb
je
or
push
bnd
pop
orb
adcl
sub
jle
addr16
imul
sub
incl
int3
push
bound
pushf
mov
lods
shlb
xchg
imul
in
sarb
sub
and
inc
bound
and
pusha
add
clc
cmp
push
adc
orl
faddp
cmp
jo
pop
sub
das
js
rcrb
sub
movsl
nop
leave
in
imul
jno
add
mov
lods
sbb
lret
add
push
xchg
dec
cmpsb
fstps
push
xchg
lea
jle
daa
add
pop
fisubrs
xchg
dec
fcoml
adcb
sbb
leave
addr16
aaa
cmp
add
lods
push
lds
dec
mov
cmpl
and
daa
rol
xchg
and
sub
int
adc
jo
je
loop
xor
sbb
pop
push
sbb
sti
or
sub
jns
cmp
add
mov
add
push
mov
sub
stos
adc
repnz
xor
push
sub
jmp
clc
mov
mov
cld
and
ror
repz
cmp
test
or
lcall
mov
icebp
sbb
mov
and
addr16
pop
inc
dec
mov
in
sbb
decl
adc
dec
add
insl
and
sbb
add
mov
adc
push
and
mul
out
sbb
add
mov
push
sbb
aas
mov
jg
lods
jo
inc
mov
push
insb
call
xchg
mov
dec
adc
push
mov
jbe
mov
jmp
imul
and
enter
fcoms
add
or
mov
test
and
mov
int
mov
repnz
pushf
sub
bound
in
sbb
inc
icebp
pop
sbb
mov
xchg
inc
mov
arpl
jb
sub
mov
push
ss
xchg
mov
dec
in
nop
inc
dec
popa
jl
xor
jge
add
scas
test
push
xor
inc
and
and
pusha
and
adc
sub
orl
cmpsb
add
lods
xchg
or
sbb
or
jg
inc
adc
mov
add
xchg
mov
mov
bound
mov
fmull
nop
jle
pop
cld
mov
lock
xchg
add
lret
notl
scas
dec
mov
je
pusha
add
gs
mov
and
or
push
mov
adc
cmp
ja
ljmp
pop
test
xchg
push
cs
adc
mov
inc
adc
inc
xor
and
mov
stos
or
jmp
fsub
sub
dec
adc
adc
movl
sar
add
fsts
mov
in
leave
mov
imulb
dec
mov
pop
push
dec
jp
andb
nop
pop
mov
and
imul
rcrb
in
mov
sbb
ds
jne
inc
popf
xchg
add
cs
dec
jle
and
sbbb
add
pop
sbb
add
int3
mov
js
imul
dec
and
add
mov
or
or
mov
pusha
inc
jne
pop
mov
es
mov
xor
adc
cs
outsl
rep
add
jp
sub
fmuls
pop
icebp
int
nop
addr16
xchg
cli
and
mov
xlat
nop
loopne
sbb
add
into
cmpsl
fcmovne
mov
or
idivl
mov
popf
lahf
add
addb
aam
je
aas
jno
add
pushf
popa
sub
aaa
jne
mov
sub
loop
add
inc
and
jne
xchg
bnd
jo
inc
ret
loop
int3
lds
and
loopne
aaa
xchg
xchg
mov
jl
jecxz
repnz
jae
cmp
subl
and
lcall
sbb
jg
shr
add
jl
cwtl
and
push
sub
adc
rorl
mov
test
clc
add
dec
mov
mov
insl
push
cmpb
cmp
push
cmp
into
dec
mov
in
je
jns
add
cmp
jb
repnz
xor
add
pop
inc
ret
call
add
fldcw
aaa
mov
lods
in
cmp
xchg
arpl
or
pop
pop
sub
push
or
and
sbb
mov
xchg
sub
mov
enter
add
aad
mov
push
cmpb
add
int
mov
pushf
lods
or
das
int
subb
or
data16
push
sub
mov
sbb
cmp
fistpll
mov
sbb
test
cmc
lds
mov
loope
dec
sub
aam
mov
cmp
int3
add
xor
icebp
jo
or
jne
and
dec
maskmovq
notl
or
es
rclb
xchg
lea
ja
add
test
andb
push
daa
pop
inc
into
and
adc
cs
or
stos
pop
mov
pusha
lods
inc
and
adc
incb
in
test
mov
add
mov
mov
cwtl
and
mov
jne
or
lods
xor
sub
adc
andb
jo
int
sub
jge
hlt
movsb
pop
into
adc
test
xor
movsb
mov
mov
mov
adc
ss
addb
in
imul
cmp
cmpsb
adc
add
adc
icebp
into
jne
pop
vpmadcsswd
mov
andb
and
rclb
int
add
jne
orl
jecxz
ljmp
mov
xchg
movsb
decl
jg
push
test
jne
lahf
mov
pop
mov
sub
add
cmpsl
mov
and
xor
inc
cli
cmp
test
aas
cli
xor
das
mov
push
xchg
push
xor
pop
hlt
add
out
mov
xor
xor
adc
imul
inc
and
add
jp
fmull
push
add
popa
jno
movsb
or
test
xor
push
jnp
sub
sti
sbb
popf
dec
adc
xchg
sbb
aam
test
jns
add
neg
push
mov
xor
mov
daa
or
fstl
xchg
mov
ds
out
scas
test
jl
add
add
pop
sbb
ja
xor
cld
jg
addr16
sub
sbb
sub
das
cwtl
fwait
or
push
xchg
push
add
xchg
shlb
pushf
and
push
lods
push
movsl
sbb
mov
jae
add
dec
inc
cwtl
inc
enter
pushf
mov
add
inc
out
inc
dec
push
loop
and
lret
fadds
mov
jbe
adc
mov
and
dec
or
mov
call
sahf
or
decl
xor
mov
sbb
mov
daa
pop
cs
nop
add
push
sub
push
clc
xor
dec
xchg
push
sub
push
mov
pushf
add
out
mov
pop
inc
les
xchg
or
adc
pop
andl
xchg
lds
adc
sub
stc
subl
lods
cwtl
in
cmp
dec
dec
or
inc
je
xchg
push
sub
cmp
xchg
lcall
ret
rorl
mov
xchg
fildl
dec
mov
aas
mov
add
imul
adc
mov
xchg
add
xor
add
jne
adc
add
loope
rolb
push
and
out
jo
subb
data16
mov
mov
and
push
xchg
sbb
lahf
mov
loopne
mov
js
add
mov
addr16
ret
inc
call
orb
lds
mov
jno
adc
add
ror
popl
loopne
fldenv
dec
mov
lcall
dec
pop
add
ret
pop
lret
lcall
mov
add
jg
std
test
fcoml
add
inc
ds
arpl
mov
mov
xchg
or
add
and
mov
sti
cmp
xchg
mov
sub
out
fs
pusha
adc
cmp
mov
mov
xor
add
add
lret
imul
leave
leave
fadds
jecxz
push
sbb
dec
in
enter
dec
mov
push
mov
dec
mov
out
xor
dec
es
rolb
push
pop
stos
hlt
cmp
add
jns
gs
sbb
ds
mov
enter
sti
sub
call
cld
jno
add
test
stos
xchg
adc
jge
lds
add
das
ljmp
pop
adc
mov
mov
push
adc
sarb
and
push
or
outsb
jge
xchg
pop
cmp
cld
not
or
clc
and
inc
pop
inc
add
inc
dec
sbb
into
pop
cmp
xchg
mov
test
add
cmp
add
sbb
and
pusha
jp
test
inc
lods
hlt
sbb
add
ja
imul
inc
mov
mov
shl
loopne
mov
addr16
or
xchg
repz
cmp
xor
inc
fcoml
mov
faddl
jo
sbb
xchg
andb
rolb
dec
sub
popa
inc
hlt
dec
aaa
push
pop
les
clc
add
or
push
push
inc
jmp
es
pop
add
rorl
lock
test
int3
or
add
adc
push
adc
iret
xor
and
cld
mov
fcoms
out
stos
or
adc
xor
pop
je
mov
or
popa
rolb
jg
add
imul
icebp
pop
dec
dec
or
add
ficomps
adc
and
pop
mov
xorb
popa
lds
lods
sbb
shrl
fildl
mov
fildll
icebp
and
jno
mov
mov
scas
nop
cwtl
insl
fsts
fmuls
xchg
cmpl
in
mov
add
aad
adc
scas
cmp
mov
jae
xor
add
inc
int3
int
xor
pop
call
sbb
fdivs
add
test
and
sub
rclb
jno
stos
add
cmp
mov
add
sbb
sbb
mov
call
sub
imul
testl
pusha
mov
or
inc
add
and
faddl
fcmovbe
xor
push
mov
add
mov
test
pop
or
addb
and
mov
lret
sub
xchg
push
sbb
repz
adc
adc
push
mov
mov
and
pushf
mov
push
movsb
sub
cltd
adc
incl
cli
outsb
pop
add
sub
jge
add
jnp
out
cltd
les
inc
sbb
inc
or
mov
push
xorb
rcrl
sub
pop
cwtl
sbb
stos
add
dec
scas
lcall
cmp
xchg
xor
adc
in
bound
sub
cltd
das
repz
cmp
test
sbb
mov
ja
push
and
sti
lahf
or
pop
jne
and
jo
mov
mov
add
mov
add
into
inc
adc
in
cmc
fldl
pop
cmp
loope
adcb
or
jne
outsb
dec
add
mov
outsl
lret
inc
add
or
cmpsl
cmp
push
pusha
popf
or
add
andl
pop
mov
add
test
dec
inc
pop
adc
stos
mov
inc
int
pop
xor
push
sub
test
and
loopne
add
outsl
inc
jmp
hlt
bound
mov
or
add
mov
rorb
popa
movzwl
rclb
adc
stos
loop
inc
xchg
xor
push
into
mov
in
call
cmpl
pop
mov
testb
add
cmp
sbb
ljmp
add
pop
add
test
inc
int3
sub
push
fldcw
or
mov
gs
pop
adc
dec
shrl
push
adc
push
sbb
mov
mov
jo
je
adc
xchg
push
add
in
push
adc
and
fisubl
xchg
fldcw
clc
and
add
mov
ja
add
push
int3
mov
es
subl
mov
add
dec
cwtl
sbb
lret
adc
mov
scas
imul
mov
data16
xlat
icebp
sbb
shr
pusha
or
clc
popa
mul
inc
cs
imul
pop
adcb
rcll
pop
stc
pusha
sbb
sbb
fwait
sbb
push
sub
daa
fimull
sub
sub
push
xchg
jno
and
inc
call
pushf
push
dec
test
cld
dec
push
xchg
or
add
enter
fmuls
add
pushf
push
dec
testl
fnsave
dec
pop
sub
cmp
jno
fimuls
jmp
lahf
push
jo
sbb
cmp
xchg
imul
pop
jmp
dec
pusha
cmp
adc
lcall
outsl
xor
push
push
sub
cwtl
in
adcl
push
lods
adc
xchg
pop
jae
pop
int3
popf
add
or
xor
je
adc
cmp
pop
jle
repz
sahf
js
mov
xor
pop
xchg
jg
mov
je
push
add
in
pop
outsl
dec
add
add
mov
cmc
inc
adc
cmp
dec
test
shlb
shll
push
mov
scas
xor
fnstcw
cmpsl
add
fbstp
pop
adc
add
rol
imul
pop
ljmp
cld
cmp
xchg
and
mov
push
sub
into
decl
sti
pop
jmp
mov
xchg
jle
mov
mov
inc
out
and
pop
fldt
pop
fdiv
nop
or
dec
test
ljmp
pop
orl
lock
fcomps
shlb
inc
add
push
mov
lods
leave
add
inc
xchg
imul
loop
add
lock
stos
jbe
pop
aas
pop
gs
pop
cmpsb
pop
jbe
sub
sbb
jb
adc
notl
sub
push
xor
sub
scas
cmpsb
sub
pusha
push
mov
mov
xchg
popa
nop
fwait
repz
mov
ja
ds
sbb
jmp
mov
call
pop
mov
jb
call
jmp
fsubl
inc
xor
jne,pt
xchg
sub
mov
push
sbbb
inc
adc
iret
mov
mov
loop
xchg
sbbb
add
inc
movsb
mov
add
lds
cmc
iret
cld
inc
cmc
or
jmp
inc
je
and
clc
nop
or
add
add
bound
leave
and
les
pusha
pop
dec
scas
adc
rolb
pop
jmp
pusha
mov
popl
xchg
stc
adc
or
js
or
cmp
popf
cltd
xor
add
scas
add
hlt
cli
dec
or
add
imul
pop
mov
es
xor
decb
pushf
adc
scas
hlt
arpl
in
jo
movsl
adc
pusha
iretw
or
adc
sbb
push
jmp
mov
les
fwait
jne
jp
jmp
and
fildll
lods
js
push
and
mov
xchg
imul
call
adc
loope
enter
rorb
clc
adc
mov
or
add
xchg
push
mov
add
mov
push
mov
jecxz
ljmp
in
and
mov
inc
fistpl
jno
imul
mov
push
add
and
mov
xor
mov
and
sub
mov
idivb
shrl
pop
jmp
fsubs
int3
iret
add
inc
add
aad
in
jp
xchg
lock
into
rolb
mov
cwtl
popa
mov
lea
xor
mov
imul
jno
cmp
sub
cltd
inc
and
jle
sbb
fstl
scas
lahf
loopne
lods
mov
sbb
pusha
pop
divb
push
lea
and
xchg
pushf
aaa
mov
test
sbb
ljmp
mov
inc
ss
push
shl
sub
fneni(8087
mov
or
xchg
lcall
adc
test
and
pop
sub
dec
sbb
lock
cmp
cmp
gs
mov
imul
aam
inc
leave
pusha
in
and
scas
es
add
rcl
jne
loopne
cmp
leave
mov
repnz
and
pop
pop
xor
icebp
cld
inc
cmp
xor
bnd
adc
popf
xchg
add
xchg
add
addr16
xchg
inc
mov
dec
pop
ljmp
add
jg
cmp
mov
pop
mov
in
cmp
and
xor
push
insb
fistpl
mov
lret
filds
sarl
ret
push
popa
pop
ret
test
repnz
add
sbb
jl
sbb
addr16
adcl
fcoml
scas
subb
sbb
mov
stc
orb
mov
sbb
test
pop
rcr
mov
jge
fsts
ljmp
in
bound
cmp
add
pusha
fsubp
push
sahf
aam
pop
fldcw
pop
or
adc
jnp
rolb
outsb
xchg
jg
push
adc
mov
mov
mov
jno
dec
xor
outsl
hlt
enter
fdivs
cmp
lcall
and
pusha
push
pop
roll
insb
hlt
or
push
sbb
mov
aad
inc
add
insb
add
mov
sub
loope
dec
adc
xchg
rcrl
jp
and
pop
sti
dec
xlat
jl
nop
add
cmc
js
orb
loopne
or
push
test
mov
mov
ja
sbb
sub
mov
loopne
and
test
mov
dec
sub
cs
aas
mov
xchg
cltd
or
rcll
adc
sbb
add
mov
pop
or
divl
lahf
sarb
aas
pop
xchg
and
inc
adcl
pop
push
xorb
xlat
adc
cmp
adc
pop
sub
pusha
fcmovnbe
dec
lock
in
ficoms
pop
push
mov
push
pop
rclb
and
mov
cmp
add
xchg
ret
jmp
hlt
stc
mov
adc
add
mov
pop
push
ret
or
pop
sub
daa
xchg
sbb
push
std
testb
mov
adc
or
and
pop
enter
jo
xchg
adc
mov
add
cli
add
cmc
popa
mov
adc
adc
xchg
nop
pop
or
mov
sub
add
mov
pop
jmp
imul
mov
pop
add
mov
mov
and
push
add
push
and
test
jl
pusha
cmpb
imul
sbb
aam
testb
lret
xlat
movsb
dec
cmp
add
sarb
jge
add
scas
fnop
sub
sub
int3
jge
mov
sbb
mov
fbld
insb
aaa
repnz
sub
or
and
push
mov
pop
and
bound
fiadds
ja
xchg
nop
pop
push
loope
push
dec
outsl
lods
mull
add
and
jg
dec
mov
nop
cmovs
inc
dec
jns
addb
cmp
das
push
mov
mov
clc
push
out
stc
hlt
and
jne
pop
les
pop
mov
pop
std
pop
and
pop
stc
xlat
inc
fwait
push
cmpsb
inc
push
test
shrb
js
pusha
daa
or
hlt
insl
mov
xlat
stos
and
dec
call
push
out
rcr
add
shlb
sub
repnz
icebp
pop
xor
inc
cmp
add
rcll
add
popf
test
cmovg
outsb
inc
add
or
and
sbb
test
sub
rcrl
push
and
cmp
adc
adc
jl
cs
flds
push
mov
pop
and
add
xchg
arpl
sbb
pop
push
test
add
inc
test
popf
lods
adc
aad
and
mov
insb
cmp
pusha
movsb
lahf
sti
cwtl
jp
adc
lock
and
or
shlb
pop
into
fnstenv
fistpll
and
add
out
inc
inc
clc
andb
cli
adc
push
cmpsb
mov
mov
shl
sub
dec
xor
cwtl
fcompl
insb
rorb
inc
stos
sbb
mov
cmc
bound
sbb
mov
lods
cmpsl
hlt
in
add
inc
mov
dec
nop
pusha
leave
lahf
aas
negb
mov
mov
pop
in
leave
std
cmp
mov
adc
aam
xor
ja
icebp
shlb
es
pop
xor
and
push
push
push
lock
push
pop
adc
mov
sub
nop
mov
jns
push
or
movsl
and
pop
popa
fldcw
xorb
int
adc
loopne
call
jns
and
mov
jmp
bound
and
dec
jno
sub
xchg
adc
testb
lods
cmp
arpl
and
in
testb
pop
push
pop
popf
push
cwtl
pop
add
pop
inc
cltd
fadd
dec
loop
fsts
repz
jle
inc
sbb
push
scas
mov
xor
insl
dec
ja
sub
outsb
add
push
cmp
cltd
pop
loope
add
outsb
cld
cmpl
push
dec
sti
fisttpl
lods
xlat
adc
dec
adc
sbb
insb
and
repnz
arpl
add
movl
das
insl
mov
mov
adc
es
movsl
roll
mov
fiadds
xor
andb
in
sub
daa
in
adc
fsubl
test
call
imul
lock
rorb
rcl
add
xchg
pusha
sbb
and
push
pop
popa
push
jbe
inc
movsl
add
push
xorb
add
repnz
push
mov
ret
add
rolb
fldl
popa
nop
in
imul
cmc
jmp
into
xorb
mov
jo
and
aad
outsl
pop
add
or
lea
push
movzwl
sti
stos
ror
scas
dec
stc
adc
outsl
nop
add
mov
and
xchg
ret
pop
push
mov
imul
imul
inc
xor
push
sbb
mul
jmp
mov
lds
dec
rcl
rcrl
mov
test
xor
jl
int
inc
repz
addb
push
rolb
or
or
test
ret
pop
push
lahf
adc
movsl
jno
addr16
rolb
cmpsb
add
mov
xchg
dec
push
mov
rorb
mov
jecxz
adc
jmp
rorl
daa
sub
mov
icebp
idivl
add
call
je
inc
rcrb
lret
add
sahf
and
mov
nop
ds
lods
int
enter
push
push
push
call
xlat
inc
xchg
daa
lock
xor
divb
add
pop
jmp
xchg
sti
add
mov
arpl
sub
and
xor
inc
or
filds
inc
xchg
out
int
mov
add
cmp
dec
sbbb
lcall
add
pop
test
roll
inc
mov
xchg
fcoml
adc
cwtl
arpl
out
add
mov
lods
or
add
ljmp
pop
mov
mov
add
popa
mov
pop
add
jge
mov
dec
mov
sarl
jo
das
jmp
and
jae
les
add
and
sar
push
push
mov
mov
inc
push
repnz
lret
out
cmp
add
ret
mov
and
fsubl
or
sub
jmp
outsb
clc
add
inc
cs
pop
insb
repnz
ret
popa
lcall
xchg
sub
push
js
sbb
data16
lods
gs
pop
mov
sub
adc
inc
or
cmpsl
lock
aam
xor
cmp
lret
xchg
xorb
insl
shrl
ror
lret
add
lea
adc
in
sbb
enter
cltd
nop
enter
pop
mov
sub
pop
sarl
hlt
repnz
dec
adc
dec
lret
push
or
sbb
loopne
orb
adc
jl
sbb
stos
imul
jne
inc
and
mov
add
mov
loopne
pusha
dec
insb
outsb
mov
cltd
add
fwait
ss
sahf
xor
add
sub
and
or
fisttps
mov
or
pop
inc
movsl
cli
or
mov
dec
push
add
jg
sub
adc
dec
add
jle
pop
or
addb
lods
lods
adc
jge
insl
xor
scas
insb
dec
dec
jnp
add
imul
xor
ja
insl
jno
adc
loop
inc
flds
sti
andb
int3
pop
pop
stos
xchg
in
add
push
fcmovnb
test
loopne
or
dec
push
push
push
sub
wrmsr
mov
test
mov
xchg
inc
rclb
sti
imulb
add
pushf
testb
jge
cmp
cld
gs
cltd
sbb
decb
icebp
jge
push
push
xchg
popa
xor
andl
gs
jle
jne
sub
in
fldcw
dec
shl
adc
cltd
ds
insb
das
rolb
das
dec
out
iret
and
loope
lds
add
insb
outsb
je
jge
loop
cmp
repz
scas
ja
sub
and
sbb
add
les
loopne
addl
scas
xor
push
push
add
push
in
xor
add
outsl
fsts
add
rolb
dec
std
outsl
insb
jo
es
sbb
add
jmp
je
jnp
pop
test
or
cmpsb
je
daa
cmp
xchg
push
xor
sub
xchg
sbb
add
cmp
sub
jmp
inc
sbb
cltd
rcr
jl
sbb
lea
aam
insl
mov
adc
xorl
call
rolb
sub
dec
or
fdiv
inc
fcoml
adc
cld
or
cli
push
adc
fldl
stc
sti
mov
mov
jge
add
xchg
xchg
ja
in
cmpb
fbstp
pop
mov
mov
cmp
mov
clc
cld
jge
jbe
movsl
out
in
addl
loope
and
mov
popf
jns
mov
call
sub
dec
pop
xor
pop
add
pusha
mov
mov
inc
xchg
pop
sub
add
fcoml
xor
add
call
sub
jg
cmc
fldenv
addb
filds
shl
push
cmp
mov
jne,pn
fidivrl
xor
mov
sbb
dec
mov
jb
and
push
hlt
sub
push
shlb
and
and
mov
mov
lret
add
pop
mov
pop
outsb
mov
push
cmp
stc
add
fnstenv
stc
out
dec
fdivrs
fbld
ljmp
lea
imul
dec
outsb
fimull
divps
sbb
sub
pop
mov
ja
rorl
int3
xor
mov
adc
cld
xchg
rcrb
ds
sahf
int3
mov
add
hlt
out
push
and
cs
test
sub
sbb
jo
scas
or
das
and
and
dec
mov
jecxz
sub
push
mov
add
push
das
fiadds
mov
mov
dec
sub
pop
stc
js
int3
jbe
inc
incb
imulb
mov
and
or
inc
sub
jg
mov
xchg
adc
mov
pop
mov
xlat
packsswb
xor
sbb
sub
jbe
pop
clc
stos
mov
add
pop
jle
pusha
cmp
inc
and
pop
shll
mov
xchg
and
rol
movsl
inc
les
add
call
cmp
loop
xor
mov
movsb
insl
mov
pop
pusha
add
or
into
popa
push
xchg
push
mov
js
faddp
add
imul
or
dec
xchg
lods
les
cwtl
sub
xchg
in
aam
mov
out
nop
push
sub
lds
movl
lea
and
mov
and
inc
scas
stos
jnp
sbb
mov
popa
mov
mov
pop
sbb
push
pop
mov
xchg
iret
loop
int3
jle
mov
mov
dec
mov
pop
stc
dec
xor
adc
pop
xorb
mov
push
dec
push
cltd
pop
xor
mov
pop
pop
iret
pop
xor
pushf
iret
pop
pop
pop
and
daa
add
leave
adc
xlat
jbe
lahf
mov
pop
rorl
mov
xchg
ja
xor
shr
mov
cmpsb
sub
jmp
imul
loopne
or
dec
push
mov
fidivrs
and
jmp
push
out
in
pop
cmp
ja
jne
aad
mov
add
sbb
sbb
jb
and
fsubrl
jns
je
aam
les
adc
test
in
das
clc
call
scas
mov
xchg
mov
adcb
cs
pop
pop
repz
lods
out
mov
popa
cwtl
jne
in
add
imul
and
bound
push
sub
inc
pushf
or
add
stos
mov
icebp
in
inc
jmp
jno
xor
push
mov
test
lock
add
call
ss
jns
ljmp
mov
and
and
into
addl
outsl
shld
pushl
mov
insb
mov
orb
inc
daa
fsubrs
nop
adc
sbb
mov
ss
xor
andl
and
lahf
cmp
inc
rclb
dec
adc
out
inc
mov
and
adc
mov
jecxz
jmp
hlt
sub
push
sub
mov
lahf
mov
mov
std
sbb
mov
push
dec
add
sti
in
mov
mov
addl
leave
fildl
add
js
shlb
mov
xchg
insb
sub
mov
xchg
inc
push
or
imul
loope
adc
cmp
shrb
pop
xchg
das
and
inc
repnz
stc
icebp
sbb
sbb
imulb
pop
das
cmp
or
sub
loop
jmp
rcll
shl
xchg
sub
sti
cmpl
sub
mull
add
pop
push
and
imul
test
add
xor
add
adc
adc
stc
or
xor
testl
mov
adc
sbb
pushf
and
sub
ret
stos
sub
outsb
outsb
or
idivl
pusha
inc
hlt
dec
add
push
xor
popa
adc
out
mov
mov
or
popf
in
das
fimuls
stos
imul
mov
mov
out
test
and
cmp
fsub
jmp
mov
insl
or
mov
outsb
sahf
add
sti
adc
sarl
add
addr16
in
pop
adc
and
cmp
or
leave
adc
cmpb
and
pop
xchg
sub
clc
mov
mov
mov
sbb
fcoml
adc
iret
clc
out
test
mov
loopne
roll
cmp
sub
push
insb
daa
fcoms
pusha
out
push
and
cld
fwait
sbb
jns
mov
pusha
jns
sbb
and
or
pop
fsubs
dec
pop
sbb
aam
jle
sub
test
or
xchg
jo
jno
mov
pop
outsb
dec
adc
lahf
push
push
xchg
xor
jl
fmull
mov
out
or
sub
push
daa
pop
idivl
add
push
xchg
mov
test
cmp
imulb
and
cwtl
andl
jmp
mov
imul
mov
mov
push
sub
jecxz
outsl
adc
inc
outsl
or
pop
movsl
and
inc
int3
mov
add
repz
mov
add
pop
pop
xor
loop,pt
xor
fnsave
hlt
cmp
les
inc
pop
or
mov
pop
mov
push
add
stc
maxps
jecxz
ds
mov
test
icebp
pusha
adc
lret
in
xchg
mov
es
add
xor
ret
sbb
jo
pop
jbe
jl
loopne
xchg
test
xchg
loop
push
ret
out
outsb
add
sbb
popa
jnp
test
insb
push
cld
sbb
jno
fistl
iret
add
mov
jb
aaa
pusha
xor
sbb
dec
test
stc
dec
mov
mov
aaa
push
loop
pop
shlb
dec
sahf
cli
add
es
das
scas
outsl
lods
add
imul
test
add
addr16
push
loope
imul
mov
inc
gs
dec
cmp
push
mov
xchg
js
adc
dec
test
xchg
repnz
xchg
insb
add
and
int
mov
or
test
movswl
nop
ja
rolb
push
mov
adc
add
inc
leave
fs
dec
das
push
sbb
out
in
rcrl
scas
xchg
dec
out
roll
or
mov
xchg
sbbl
mov
arpl
sub
sahf
xlat
and
mov
icebp
push
mov
dec
sbb
loopne
sub
fstps
mov
sbbb
sub
popf
dec
push
mov
daa
sub
repz
jle
push
pop
and
cmc
bnd
sbb
sub
sbb
addb
push
loope
add
or
cmp
fchs
imul
adc
das
nop
movsb
ds
add
pop
add
jnp
sbbl
xchg
push
das
jecxz
xor
notb
jne
mov
add
inc
into
add
loop
lcall
cmc
sbb
add
inc
push
movsl
bound
add
cltd
xchg
outsl
sub
rorl
enter
push
push
ret
add
bt
or
cmp
inc
fiaddl
push
xlat
jmp
pop
xor
gs
add
fiadds
xor
data16
fidivrl
jae
cli
add
xor
daa
daa
mov
xchg
add
rolb
call
mov
rcr
add
inc
xor
int
lds
inc
pop
clc
sub
and
dec
jbe
and
push
aad
adc
int3
sub
mov
push
push
movsb
mov
shlb
cmc
or
mov
push
incl
cmp
jb,pt
push
test
rcrl
push
mov
fs
adc
aas
lods
in
sbb
aam
xchg
push
inc
add
xor
mov
jo
add
fiadds
xlat
movsl
push
test
sub
outsb
lahf
add
lret
or
ftst
insl
lahf
add
inc
pop
add
das
jno
lcall
ret
push
mov
shll
jecxz
in
punpckldq
test
loope
or
call
rclb
xchg
sbb
adc
cmp
sarl
inc
das
and
mov
adc
xchg
adc
insl
repnz
and
or
inc
int3
subb
scas
mov
jecxz
sahf
fs
pusha
lds
test
cmp
popa
in
sub
add
stos
hlt
int3
ja
mov
not
ljmp
xchg
and
ss
and
out
icebp
lds
add
cmpsl
daa
rorb
add
jl
lahf
or
add
sub
stc
add
mov
popl
add
je
and
and
sub
es
pop
leave
into
iret
jo
pop
pop
leave
out
cmp
mov
je
popf
and
xchg
push
xchg
push
aam
dec
add
sbb
shll
jb
mov
outsl
negl
sbb
aas
xor
lfs
pop
adc
adc
jnp
je
push
scas
insl
nop
push
ljmp
repnz
mov
mov
add
pop
lret
jb
hlt
add
cmp
pop
cmpsb
in
dec
fs
adc
mov
pop
rclb
pop
enter
cwtl
inc
or
push
sti
insl
rolb
and
mov
into
xchg
in
or
cltd
stc
outsb
lock
jmp
idivb
repnz
aaa
add
jmp
or
into
pushf
or
mov
xchg
sub
cmp
nop
aam
mov
cmp
and
inc
dec
lcall
pusha
iret
cld
les
dec
jge
adc
repz
dec
fwait
xchg
fdivrl
in
mov
pop
pop
add
or
cmp
out
aas
mov
addb
lods
add
imul
sub
dec
add
cs
xor
and
aam
mov
xor
nop
push
add
int3
shll
adc
lods
sub
xor
cli
or
filds
inc
dec
push
es
inc
sbb
pop
add
mov
add
mov
in
adc
sti
inc
xor
add
movsl
repz
cmpb
lds
push
pop
loop
in
add
addb
sar
loop
pop
xchg
cmp
sub
cmpb
add
fs
or
or
xor
popa
jp
add
stc
xor
add
lods
rcr
ljmp
mov
rcll
jmp
sbbl
mov
mov
add
pop
mov
add
sarl
mov
xor
inc
out
mov
sbbl
push
cmpsb
notb
iret
push
stc
inc
mov
sub
add
push
ja
daa
gs
movl
dec
stos
call
push
inc
pushf
fsubp
popa
add
cltd
loopne
mov
add
xor
pop
xor
lds
jg
mov
inc
mov
repnz
jge
add
xchg
cmp
pop
jecxz
loope
sbb
pop
inc
fadds
mov
addb
cmpsl
repnz
mov
add
mov
popf
fsubp
arpl
testl
jle
pop
out
popa
incl
arpl
pop
stc
add
add
test
out
lea
mov
mov
mov
push
push
daa
inc
outsb
cwtl
push
enter
out
fs
jne
mov
je
sub
aam
xchg
jle
jne
xor
push
add
int
jge
pusha
jmp
sbb
sub
xorb
in
sbb
fnstenv
or
add
mov
add
daa
dec
push
adc
xchg
sub
inc
inc
add
jo
adc
cltd
push
sub
sub
cmpsb
gs
cmp
push
shlb
stc
push
inc
adc
sti
jo
xchg
sub
test
inc
pushf
popa
dec
movsb
push
dec
jno
add
mov
add
test
in
push
add
cld
fcmovnu
xchg
mov
cmp
insl
lds
fiaddl
addr16
jl
je
cmpsl
push
mov
outsl
add
je
mov
cmpsb
push
or
mov
push
adc
cmp
sarl
pop
loopne
clc
inc
lcall
filds
out
sbbb
and
or
mov
sub
add
stos
dec
mov
inc
lsl
xorb
stc
dec
cmovp
sub
aas
sbb
add
fstpt
xchg
jb
mov
inc
mov
mov
dec
mov
push
mov
and
jno
add
mov
aam
jmp
bound
cmp
or
fsubrs
int3
loopne
or
cmp
dec
shll
mov
fs
inc
xorb
incl
jge,pt
inc
ffreep
inc
mov
push
lods
sbb
xchg
sbb
and
imul
add
add
es
cmp
in
jno
adc
bound
sub
or
inc
fcmovne
adc
lods
or
sahf
test
lret
sub
lods
push
adc
dec
orl
mov
lds
out
adcl
xor
mov
loop
add
add
jnp
xor
jo
movl
subb
outsb
in
or
dec
es
inc
dec
push
out
sbb
jae
pushf
sbb
add
ret
mov
mov
lahf
push
lret
adc
jb
int
sbb
add
or
arpl
pop
jg
aas
add
mov
cltd
cmp
jo
mov
pop
dec
rclb
jns
sub
sti
sub
or
or
pop
call
adc
hlt
cs
out
dec
add
cmp
add
fbld
cwtl
shl
in
or
test
fidivrl
pop
lds
inc
dec
cmp
xor
cmova
jae
fwait
or
xchg
pusha
lods
lods
add
mov
mov
or
inc
fstpl
lcall
adcb
movsl
in
repnz
pop
sbb
sbb
pop
xor
lahf
and
out
push
loopne
xchg
jns
incb
pop
lret
loop
dec
ficoms
mov
and
ret
xor
xchg
push
ds
and
push
test
js
adc
movsb
in
test
cmpsl
xchg
pop
cmp
mov
jl
cmp
cmc
int
aad
xorb
adc
adc
jecxz
lcall
or
je
dec
mov
pop
dec
sbb
cwtl
cmp
jno
add
jnp
icebp
cmp
jns
inc
enter
imul
push
pop
in
pop
jle
sbbl
add
add
repnz
jno
pop
fs
xor
les
sbb
enter
insb
inc
pcmpgtb
inc
sub
xor
scas
out
push
rorl
dec
push
and
fcmovnb
xchg
ret
sub
mov
pusha
sahf
and
add
sub
sub
pop
mov
dec
fnstsw
xor
les
inc
push
add
mov
mov
dec
faddl
loop
add
inc
adc
je
aaa
add
pop
cli
jp
icebp
out
js
adc
xchg
cmp
xor
adc
jl
pop
push
push
xchg
lds
rcrl
pushf
sbb
jmp
or
out
ds
sub
out
pusha
xor
xor
push
or
loopne
adc
imul
adc
and
inc
sub
cmpb
sub
push
sarl
addl
fadd
inc
or
cmp
push
icebp
jecxz
ret
inc
sbb
push
xchg
scas
pop
pushl
pop
cmp
push
mov
xor
ret
dec
inc
xor
jbe
and
mov
call
loopne
add
jge
test
push
dec
or
in
inc
clc
ds
xor
add
xor
loope
std
add
jae
pop
and
dec
das
mov
dec
cmpsb
sarl
lods
stc
mov
clc
shll
movsl
andl
hlt
scas
cmovp
sbb
sub
sub
or
nop
push
push
push
pop
pop
pop
pop
repz
test
cld
sbb
outsb
adc
jno
add
pop
jmp
xor
jno
mov
imul
xor
cmp
cmc
push
rclb
mov
lods
mov
int3
daa
lahf
mov
sti
adcl
adc
jge
or
pusha
repz
repz
ret
inc
add
pop
xchg
cmp
add
mov
pusha
xor
out
std
popa
jno
rclb
dec
or
bound
enter
mov
xor
cld
xor
pop
pop
out
add
jne
push
adc
pop
xlat
enter
mov
xchg
into
adc
or
cwtl
call
jnp
jo
fildl
cld
jbe
dec
xor
shlb
jg
stc
pop
add
pop
cld
cmp
sub
les
mov
sbb
in
add
dec
shlb
push
pop
jmp
loop
or
lcall
sub
mov
sub
in
test
icebp
inc
daa
loope
fstps
in
testb
push
xor
fisttpll
aad
adc
mov
push
cmpl
push
push
xlat
mov
add
xchg
dec
call
jle
inc
lock
or
sti
add
adc
adcb
test
lods
in
ljmp
mov
sub
sub
aas
adc
out
jb
mov
push
add
mov
outsb
or
inc
sub
insb
cmp
pop
push
ret
xor
dec
push
jo
xchg
pop
cwtl
movsl
jns
das
dec
inc
lds
and
hlt
out
jp
inc
sahf
pusha
pop
jnp
lods
add
jg
rolb
mov
pop
mov
out
mov
push
out
jo
popf
loopne
stos
cmpsl
add
dec
adc
mov
mov
mov
pusha
testl
rcll
daa
popa
in
enter
push
gs
xchg
jns
aad
adc
jns
or
or
stc
scas
jnp
add
cmp
jae
push
xchg
xchg
cmpb
addb
push
pusha
pop
fimuls
mov
adc
cld
pushf
insl
jns
xchg
pop
scas
sub
xchg
insl
loop
dec
or
nop
je
xor
js
clc
mov
xchg
sbb
pop
xorb
push
push
adc
aaa
pop
add
lea
lods
aaa
push
add
xchg
push
and
dec
jo
arpl
mov
adc
add
notb
gs
loopne
and
lds
test
sbb
lods
add
leave
xchg
aas
add
push
pusha
mov
adc
adc
mov
outsl
fldt
aas
mov
mov
cld
ret
mov
stc
orb
aam
push
lcall
cmp
sub
sbb
adc
adcl
daa
mov
pop
test
cs
pusha
cld
or
xor
int3
test
fcmovb
lret
in
xchg
xor
push
lret
mov
sub
mov
pop
shll
ret
or
and
jns
lock
mov
jle
dec
sub
cmp
jmp
out
outsb
dec
add
clc
or
mov
scas
cmpl
mov
mov
adc
lods
scas
and
lahf
add
sub
jmp
xor
rorl
clc
xchg
rclb
mov
scas
inc
sub
ret
jae
scas
inc
xor
test
or
pop
mov
fcomip
pop
sub
mov
stc
jo
add
sbb
insb
out
orb
pop
sbb
call
insl
dec
mov
inc
nop
mov
stos
push
lds
mov
outsb
or
std
into
mov
add
in
add
push
pop
add
cli
cmp
or
fiadds
dec
mov
sub
mov
cmpsb
or
fnsave
and
and
sbb
add
mov
insb
inc
es
test
out
dec
sub
dec
xchg
rcr
imul
sbb
mov
push
sbbb
repz
aad
mov
mov
or
stc
outsl
outsb
mov
xchg
mov
push
subb
pop
and
or
mov
incb
aaa
add
test
jae
inc
outsb
and
jecxz
hlt
add
dec
mov
dec
jg
mov
loopne
jb
push
sbb
add
mov
sub
cld
and
movsl
imul
outsl
je
pop
addr16
jmp
or
call
outsb
movsl
and
test
andl
add
sub
bound
faddl
cltd
and
mov
or
xchg
stc
aam
test
inc
or
pusha
push
push
jo
fists
cmpb
roll
xchg
push
pop
mov
lods
lret
fiadds
das
call
lock
jecxz
jle
sbbl
dec
stos
push
mov
mov
push
imul
out
in
inc
cmpsl
leave
xor
adc
adc
xchg
outsl
inc
add
stos
sbb
pop
push
xor
cmp
add
rcr
xor
rolb
leave
sub
mov
mull
mov
fisubl
xchg
add
pop
push
jbe
mov
hlt
add
mov
pop
pop
dec
nop
push
and
or
jmp
mov
pop
inc
adc
and
arpl
call
xchg
fwait
out
xchg
inc
mov
ret
add
mov
add
xchg
jmp
adc
std
jmp
cwtl
dec
xchg
cli
add
and
jmp
pop
jo
stos
pop
lret
test
pop
in
adc
mov
mov
or
sbb
push
jns
add
lods
clc
add
lds
inc
add
mov
jmp
lods
dec
push
cmpsb
push
dec
inc
out
pushf
cmc
fs
imul
mov
ret
xchg
sbb
out
out
lock
cmp
fistpll
loope
xor
dec
and
loop
and
insb
inc
daa
mov
add
test
dec
test
loope
mov
es
mov
jle
sbb
aam
jecxz
adc
rcrl
pop
jmp
popa
xchg
or
add
add
mov
add
lret
setb
imul
and
mov
jl
outsb
mov
iret
xchg
push
test
insl
gs
xor
and
das
add
popf
jg
and
jmp
adc
add
pop
call
mov
in
push
adc
pop
out
scas
sub
xlat
movsb
add
pop
add
pop
add
jle
cmp
insl
adc
mov
sbb
dec
fsubrs
das
dec
dec
cmc
sbb
lret
movsl
negl
push
in
lcall
cs
fimuls
push
incb
sub
adc
add
popa
dec
adc
lret
jne
inc
push
cld
inc
js
xrelease
mov
sbb
sub
add
jnp
push
xor
fs
mov
push
add
xor
lret
rcrb
jl
pop
mov
mov
dec
sti
inc
leave
and
clc
sbb
ss
add
dec
movsl
hlt
pop
int
add
in
and
xchg
jg
shrl
stc
pop
cwtl
xor
cmp
inc
cld
inc
pop
fldenv
fnsave
inc
in
and
scas
icebp
add
cmc
lds
inc
lea
add
les
pop
gs
add
xchg
cmp
enter
fistps
jne
insb
cmpsb
push
scas
add
mov
popl
pop
cmp
and
sub
mov
scas
dec
xor
popa
add
in
sbb
int3
adc
cmp
mov
sbb
movsl
cmpsl
mov
fsub
mov
in
xor
jb
sub
jno
negb
adc
xor
jmp
rcl
outsb
jg
pop
int
xchg
mov
xchg
dec
lret
cmp
push
xor
ljmp
cld
add
inc
les
icebp
lret
je
testb
xor
scas
in
andb
outsl
jg
mov
cli
sub
push
insl
or
outsl
sub
push
stc
adc
mov
add
pop
leave
adc
xchg
add
mov
jno
dec
xorb
incb
fucom
bound
dec
dec
js
and
inc
xor
int3
outsl
pop
outsl
and
in
or
das
call
sbb
cmp
popf
mov
push
add
jb
mov
lock
mov
push
adcb
loop
mov
loopne
cmp
xchg
and
cs
nop
jb
rcrl
cmpsb
stc
pop
add
rcrb
jnp
in
scas
or
es
add
or
lcall
mov
sub
mov
xchg
test
jne
inc
out
pop
lret
push
pop
leave
fninit
and
cmpsb
pop
popa
loop
fs
inc
sbb
jge
pop
xchg
fisubl
cmc
addl
pop
leave
and
or
nop
iret
cmp
stos
cmp
mov
lea
pop
fs
sub
and
aas
mov
cmpb
out
jae
adcb
and
cmp
dec
sub
add
add
jo
lcall
test
dec
push
mov
push
xor
in
lods
pop
xor
pop
adc
shr
lock
fbld
sbb
add
in
mov
add
push
xchg
lcall
adc
push
int
or
mov
iret
decb
inc
jp
and
sti
outsb
add
sbb
cmp
mov
outsl
movsb
and
sbb
dec
rorb
xor
or
inc
pop
in
push
fildl
test
dec
xchg
call
js
icebp
cmc
add
push
or
jne
adc
inc
jecxz
ja
int
jo
add
in
into
push
cs
pop
jno
mov
mov
inc
jmp
in
mov
popa
mov
jae
xor
adc
cmp
add
or
mov
jae
mov
je
inc
mov
rol
test
add
push
add
pushf
jb
pop
add
adc
shlb
inc
jbe
frstor
bound
call
movsl
jmp
sub
adc
mov
shlb
loop
and
lea
fistpll
jge
test
ret
popa
loope
sbb
mov
inc
pop
cmp
adc
repz
mov
outsl
mov
lahf
adc
add
insb
repnz
leave
add
jle
scas
lock
cmp
add
neg
adc
sbb
cmp
outsb
mov
or
inc
scas
pop
and
adc
call
pop
jle
adc
movb
lods
mov
jnp
int
iret
je
or
pushf
jbe
add
loope
push
iret
sub
adc
adc
adc
lods
repz
and
add
push
fwait
cmp
loopne
mov
pop
sub
adc
push
sahf
xor
push
xchg
dec
mov
mov
and
int3
adc
sub
mov
inc
cmp
aas
adc
inc
sub
stos
nop
sub
xchg
push
in
mov
push
sti
pusha
movsb
loope
and
test
inc
test
add
sbb
bound
les
mov
add
sbb
xchg
sub
sub
mov
or
das
cmc
andb
and
or
addl
cmpsl
xor
push
scas
aaa
pop
int
ret
jg
loop
fisubrs
jo
fsubrs
pop
divl
orl
mov
and
pop
aam
cmp
into
push
shl
push
xor
paddsb
into
add
inc
xchg
wbinvd
pop
fbld
js
std
repnz
insl
mov
pop
xor
pop
add
or
cwtl
clc
pop
or
shrl
aas
ja
add
push
add
inc
cld
ficomps
or
cmp
das
mov
add
sbbl
in
or
mov
lods
mov
movl
adc
sub
sub
add
xor
mov
dec
outsl
add
stos
sbb
jns
adc
sbb
aaa
sub
flds
sti
jecxz
inc
cmpsl
push
mov
ja
or
xchg
cs
sti
xor
hlt
divl
push
nop
dec
fcoml
sub
in
add
test
lock
mov
mov
sbb
xchg
mov
dec
faddl
dec
aaa
lret
imul
pusha
mov
xchg
sti
add
xor
shlb
sub
cmp
cwtl
adc
push
jno
xchg
sub
mov
add
push
ret
in
ja
and
xchg
daa
nop
or
mov
jae
outsb
cs
loopne
fldcw
loopne
andl
add
test
je
and
es
jl
shr
push
incb
xor
and
and
pop
ljmp
push
add
stc
lds
xchg
add
add
or
les
jp
das
push
jp
or
pop
push
out
dec
icebp
add
pop
jnp
push
add
adc
xor
xchg
hlt
sbb
xlat
dec
lock
push
and
fimuls
movsl
cmc
cmp
pop
ror
js
pusha
adc
repz
pop
mov
pop
lods
jno
fs
xor
cmp
fmuls
insl
fisttpll
rclb
outsl
mov
mov
and
insb
fs
scas
add
mov
sub
or
add
sub
in
pop
add
insb
es
daa
enter
lret
jg
insl
jmp
rcl
push
jns
add
push
xchg
mov
jl
lods
out
lods
push
shrb
add
dec
fdivp
or
jge
pop
in
add
rclb
jle
lds
dec
stos
mov
add
inc
scas
dec
out
imul
sbb
pop
mov
mov
incl
jmp
cltd
and
addb
or
push
and
movsl
push
mov
in
push
cmp
call
daa
stc
orb
int
add
ss
jl
mov
es
or
add
out
stos
adc
sub
mov
and
mov
mov
comiss
shr
adc
add
hlt
mov
in
inc
xchg
shlb
orb
insl
rorb
movsb
mov
in
data16
adc
sbb
cli
outsl
ds
call
xchg
imul
dec
and
dec
jo
dec
lock
test
jbe
mov
add
int
stos
lock
add
mov
or
shlb
adc
push
sub
cmp
mov
sbb
dec
lahf
psubusw
mov
adc
loopne
loope
pop
rorl
mov
push
adc
das
mov
mov
pop
push
push
cmpsl
xor
mov
stc
pop
loope
inc
pop
mov
cmc
jp
test
push
pminub
shl
mov
movsl
dec
xlat
fdivrs
inc
pop
test
cmp
fwait
nop
push
inc
jno
pop
mov
adc
jnp
add
fmul
es
mov
dec
push
cmp
sub
ret
xchg
mov
repnz
test
lods
xchg
push
cmp
xor
out
call
push
pop
sub
sbb
nop
ret
cmp
push
jne
push
cmp
rolb
sbb
sbb
jmp
enter
sbb
data16
push
ret
sbb
cmc
mov
jne
or
sbb
add
and
cltd
push
dec
mov
adc
xor
mov
push
mov
subl
ret
out
std
mov
stos
pusha
pop
shlb
xchg
and
out
stos
mov
shll
xor
repnz
pop
lds
jbe
ja
xchg
jbe
cmp
lcall
xchg
mov
ds
cmp
icebp
pusha
mov
repnz
add
popa
data16
in
push
rolb
das
mov
mov
inc
mov
inc
adc
and
lods
sbb
or
push
stc
xor
push
mov
mov
jmp
int
das
jp
add
sub
ret
adc
call
pop
or
adcb
push
cmp
mov
repnz
or
xchg
jne
out
fmuls
mov
add
loopne
jmp
add
pop
xchg
mov
leave
pop
jnp
rcll
adc
stos
nop
pop
mov
imul
sbb
push
sbb
pop
cmp
adc
fdivrs
cmpsb
xlat
cwtl
or
xchg
inc
xor
call
dec
test
mov
cmp
es
loop
iret
call
movsb
sbb
lods
stc
pusha
inc
call
scas
add
xchg
mov
pop
stc
popa
mov
mov
pop
inc
and
add
cmp
fisttpll
call
push
aaa
push
push
sub
cmpsb
mov
fdivrp
lret
scas
lds
pop
fstpt
mul
mov
sub
and
test
call
mov
cmp
lret
aaa
jecxz
test
mov
mov
popa
add
pop
or
or
aaa
add
push
add
push
into
jle
pop
sub
and
ja
cltd
jnp
cwtl
hlt
jae
or
lea
sub
dec
add
dec
testb
pushf
mov
sbb
test
sub
pop
jecxz
add
or
xor
push
pop
push
add
lret
and
imul
inc
push
or
lea
pop
loope
cmpsl
mov
hlt
add
push
jne
xchg
leave
push
mov
pushf
in
lahf
cmp
push
daa
test
fucomip
cmp
int3
jno
notb
pop
xor
and
pop
pxor
push
pusha
sti
outsl
pop
mov
pusha
push
pop
cwtl
inc
sub
fcoms
mov
lds
lods
and
sub
cmpsb
adc
mov
popf
xor
pop
jecxz
out
and
pusha
data16
sbbl
add
out
cmc
mov
jo
push
xor
jle
jge
add
loopne
fmulp
adc
adc
clc
sbb
adc
xlat
xrelease
pop
mov
jnp
sbb
popa
xchg
sti
fiadds
andb
mov
xor
ds
aas
xchg
sub
and
fdivrs
pushf
in
inc
xchg
add
and
pop
jle
pusha
add
push
dec
daa
inc
mov
fnsave
sub
mov
shl
mov
mov
inc
add
inc
push
aas
and
incl
lds
ss
sbb
test
or
sbb
ret
cmp
xor
rcr
fsts
pop
mov
pcmpeqw
xchg
data16
out
jne
cmp
nop
fildll
push
push
in
imul
incb
pop
add
loopne
mov
mov
mov
xor
and
xchg
fists
push
outsb
out
dec
or
mov
add
lock
fisttpll
cmpb
int3
shl
xor
and
push
pop
cmp
imul
dec
or
mov
into
push
inc
cmpsl
mov
dec
scas
and
jns
lods
outsl
dec
add
and
pop
testb
lea
in
push
cltd
mov
inc
inc
mov
aaa
dec
pcmpgtb
add
cmpsl
ret
jl
int
xor
shlb
push
adc
orps
mov
cld
xor
rcrl
cmp
jmp
mov
stos
inc
iret
lods
add
jo
jmp
mov
lret
and
int
pop
rcr
insb
jae
outsb
insl
inc
push
push
adc
pop
in
dec
es
hlt
jmp
jnp
mov
push
or
lea
cmpsb
fimuls
std
cmc
mov
insl
test
push
mov
pop
pop
jp
dec
scas
fidivl
fisubl
inc
jle
cmp
sbb
add
inc
xchg
frstor
jnp
imul
test
xor
inc
adc
clc
stc
rorl
insb
sbb
lcall
or
ja
and
aam
pop
ffree
pop
sbb
je
xor
and
test
std
push
jnp
or
add
add
cmp
dec
scas
sarb
ret
out
ss
lcall
addr16
arpl
inc
mov
lea
push
mov
outsb
mov
mov
inc
mov
or
ss
inc
pushf
lock
aam
hlt
imul
addl
push
nop
jns
lss
outsb
sub
adc
ljmp
nop
jno
ds
sbbb
roll
push
daa
pop
push
push
lods
adc
mov
dec
add
out
mov
inc
or
jne
sub
test
mov
and
adc
mov
cli
mov
ljmp
add
lock
out
idiv
cmp
loop
test
mov
test
adc
outsl
sub
mov
loopne
xlat
cmpsl
dec
jmp
ret
mov
sub
pop
cmp
cmp
jnp
movsb
lods
call
mov
in
cmp
gs
out
mov
mov
les
fcmovu
mov
add
xchg
bound
rolb
pop
or
jae
mov
int3
sub
dec
loope
or
addl
mov
mov
imul
rol
add
sub
add
pop
mov
jge
negl
jnp
aas
cmpsb
addr16
rcrl
push
sbb
mov
push
cmc
xor
push
dec
jno
test
or
add
jns
popf
int
fcompl
jno
sub
xchg
dec
lock
adc
or
add
jno
mov
mov
mov
stc
xchg
enter
push
xchg
call
sub
jb
je
push
mov
dec
and
daa
mov
xchg
scas
repnz
xchg
push
or
gs
sub
sarl
adc
mov
add
mov
dec
push
out
and
rcr
and
stos
popa
inc
and
sbb
push
pop
xor
fimuls
fists
movsl
and
rcrb
imul
shrb
mov
push
cmp
jl
mov
xchg
adc
cmc
or
ret
mov
jmp
stc
movsl
inc
sbb
mov
dec
mov
jle
mov
lea
add
cld
jp
jno
push
inc
pusha
add
ljmp
popa
fs
cltd
mov
sub
dec
std
xor
pop
cld
jae
jo
aas
push
cld
or
add
or
jp
adc
xor
add
mov
incl
out
or
pop
rorl
push
rolb
hlt
mov
loopne
lret
dec
shlb
popf
ret
pushf
nop
cmp
or
mov
mov
adc
pop
or
fistl
mov
subb
inc
jl
add
clc
mov
xchg
mov
je
mov
xchg
sahf
add
pushf
jecxz
pusha
nop
insb
and
xor
sbb
dec
cmp
push
cltd
add
inc
stos
xchg
pop
mov
push
cmc
ret
add
or
sub
lret
sbb
pushf
jo
pop
or
sbbl
mov
lods
mov
xchg
daa
int
inc
bound
xchg
pop
pop
rorb
inc
popa
xor
jecxz
sbb
xor
pop
mov
cmpl
or
and
push
movsl
aas
mov
dec
sbb
mov
cs
and
add
int3
adc
xchg
mov
and
adc
popf
test
arpl
aaa
or
add
into
imul
int3
shrl
add
xchg
inc
sbb
sub
aam
dec
inc
pop
mov
popa
add
xchg
sbb
jo
stc
pop
or
cs
movsl
insl
jb
addl
cmp
dec
mov
shlb
das
cli
dec
push
xor
test
faddl
add
in
adc
push
sub
lea
sub
jb
sub
out
rolb
adc
int3
add
aaa
test
mov
and
incl
pop
cmp
mov
jl
inc
push
daa
lds
cltd
add
xor
push
cs
pushf
mov
mov
lret
or
ljmp
and
and
push
lods
std
pusha
lret
inc
push
or
imul
add
fcmovnb
bound
leave
jne
sahf
shlb
outsb
mov
or
or
or
call
mov
or
popa
add
mov
cmp
and
call
jno
add
xor
popf
iret
fwait
inc
push
push
sti
pop
xchg
stc
adc
push
add
sub
mov
cmp
test
mov
shlb
sub
stos
jmp
dec
out
gs
xchg
scas
xchg
in
sbbb
or
scas
or
mov
lret
out
loopne
lret
fisubrs
push
mov
lods
jo
cltd
sub
mov
xchg
mov
cmp
lret
xchg
stc
lret
jmp
add
sub
add
xchg
dec
mov
pop
aaa
shrb
add
dec
xchg
xchg
daa
mov
pop
aam
les
xchg
mov
cmc
daa
out
inc
popa
insb
dec
or
xchg
push
and
dec
jns
arpl
bound
xchg
mov
pop
mov
test
adc
sbb
in
pop
add
fdivrs
bound
addl
xchg
out
cmc
inc
or
inc
loope
popa
pop
mov
aad
dec
aad
add
out
js
mov
aaa
dec
fistps
and
or
push
cmp
add
pop
dec
pushf
push
clc
pusha
repz
adc
and
mov
test
pop
cmp
das
mov
add
cmc
dec
pop
or
jmp
mov
pop
inc
sub
mov
inc
jle
xchg
cmpb
loop
adc
test
pop
mov
addr16
mov
jmp
stos
add
insl
test
loope
aad
add
or
ret
test
adc
push
decb
pop
xchg
lods
xchg
jmp
ss
add
or
sbb
sub
adc
push
test
mov
jo
sarb
into
adc
int3
fidivs
stos
fsubs
adc
mov
es
pop
add
push
cmp
push
les
cmc
insb
outsb
sbb
add
adc
jmp
push
and
cmp
add
subl
adc
popf
test
add
ficoms
fidivl
icebp
xchg
data16
sbb
outsb
inc
push
mov
pop
and
and
inc
mov
or
pop
inc
popf
jl
popf
in
xor
sbb
shlb
xchg
mov
rclb
cltd
pop
mov
adcb
mov
and
jg
lock
out
aaa
in
xchg
add
into
cwtl
out
xchg
xor
data16
aad
add
inc
je
push
pop
and
xor
mov
inc
add
sub
repnz
stos
cmp
jmp
cmpsl
add
dec
and
mov
adc
bound
dec
pusha
loopne
xchg
mov
add
hlt
xchg
mov
or
fildl
cwtl
rcrb
sbb
pop
xchg
xor
insb
movsb
mov
mov
cmpsb
insl
sbbb
inc
cmp
adc
mov
sbb
jmp
push
pop
pusha
sbb
jne
push
stos
adc
push
popa
out
outsl
filds
dec
stos
arpl
sbbb
js
adc
inc
sub
sub
jp
fistpl
call
push
mov
mov
imul
inc
pop
ror
and
test
das
mov
xchg
sub
ret
les
or
subl
aam
imul
xor
cli
icebp
ds
xchg
add
or
sbb
mov
addb
add
cs
loopne
test
inc
dec
mov
add
adc
js
inc
mov
pop
xor
adc
stos
adc
and
inc
cmp
and
or
lds
imul
and
lds
or
in
and
sub
je
and
jmp
cmp
add
pop
cltd
les
in
popf
pop
out
in
xchg
mov
add
mov
dec
lods
mov
sub
in
xchg
adc
xor
jp
notb
lods
imul
cmp
sti
clc
dec
push
in
aas
pusha
mov
fcoml
pop
sub
ret
lret
inc
ficoms
pop
ror
mov
int
pop
push
add
arpl
scas
mov
jno
push
pop
popa
and
lret
stos
lcall
sbb
mov
and
int
inc
ret
add
mov
negl
sarl
push
xor
add
test
hlt
leave
les
xlat
shrb
add
adc
pop
leave
mov
sarl
jo
add
fidivs
fildll
adc
ljmp
mov
pop
push
in
cli
adc
fldl
jmp
mov
lret
dec
jl
mov
jae
insl
sbb
daa
and
in
pop
pop
mov
aam
or
jns
shrl
sub
cmc
push
mov
adc
cmp
ljmp
push
nop
xor
rcll
mov
mov
push
xor
mov
pop
dec
lret
outsb
shl
pushf
add
out
jge
mov
pop
fprem
lods
adc
out
icebp
lods
and
aam
add
nop
loope
outsl
xor
xchg
stos
inc
adc
sub
dec
mov
icebp
and
push
mov
dec
jbe
xor
gs
ljmp
mov
adc
sbb
adc
xor
jecxz
shlb
mov
and
pop
outsb
in
lock
mulb
loopne
cmpb
push
ret
fsubs
push
lods
sbb
jae
pop
add
jae
or
mov
test
adc
out
and
pop
pusha
dec
or
popa
mov
mov
add
das
cltd
ret
pop
fldl
int3
xchg
sub
sub
sub
lea
jo
testl
outsb
or
insl
push
push
shrb
repnz
pop
and
icebp
pop
test
das
std
and
lea
hlt
adc
push
add
iret
in
push
sbb
sub
sbb
cmp
repnz
pop
clc
sbb
negl
and
cld
adc
loop
inc
or
into
mov
sbb
ja
clc
scas
sbb
leave
push
xor
xor
adc
jp
ffree
insb
inc
sbb
jbe
lcall
rcr
addr16
pop
movsl
mov
jns
imul
and
bound
sub
testb
movsl
test
incb
es
and
add
or
fcmovb
out
push
cmpsb
out
movsl
in
mov
dec
clc
lret
mov
cmp
jb
adc
add
ja
test
fldl
cld
stc
lods
in
pusha
mov
hlt
popa
mov
shl
cmpsb
jmp
and
inc
lods
or
or
xchg
and
test
daa
repz
pop
js
mov
cltd
std
mov
and
or
daa
out
orb
push
xor
push
pop
jns
lods
int
loop
inc
pop
push
pop
mov
stc
dec
push
js
xchg
nop
wbinvd
add
jns
inc
mov
fmulp
shll
pop
cmc
in
dec
dec
push
je
jno
out
daa
pop
aas
les
aad
das
push
outsb
add
xor
out
xor
loop
outsb
daa
pusha
mov
adcl
int
jnp
adc
popf
cmp
inc
add
jno
xor
aas
insl
sarl
dec
add
pop
cmp
add
jno
inc
mov
xchg
add
sbb
pop
repz
movsl
mov
add
movb
aad
stos
mov
pop
stc
mov
jl
rcr
fsts
aas
out
mov
in
add
pop
test
dec
aam
mov
ret
test
mov
fldl
mov
mov
mov
sub
jns
pop
in
adc
add
mov
cmpsb
add
daa
into
and
jge
and
xor
stos
outsb
sub
mov
subb
mov
jb
gs
add
dec
cmp
out
or
xor
push
mov
mov
insl
jbe
inc
or
lods
mov
or
out
mov
jg
xchg
adc
sub
mov
mov
mov
xor
aas
lods
sbb
add
lret
rcrb
and
jp
or
pusha
jns
lods
xchg
adc
repz
in
faddp
xchg
aaa
js
or
mov
add
in
inc
jmp
adc
cli
mov
add
mov
das
sub
cs
in
xchg
add
subl
das
sarl
xchg
xor
add
stc
xor
add
or
add
roll
in
lea
add
hlt
in
add
add
lret
inc
out
mov
xor
in
add
dec
scas
rcr
das
js
ds
das
dec
inc
orb
dec
pusha
lret
mov
lea
sub
daa
mov
mov
aaa
int
jae
mov
cwtl
mov
add
sub
in
push
and
aaa
lea
xchg
adc
enter
add
jmp
das
negl
sub
cs
jg
xchg
popa
adc
jg
imul
adc
xchg
enter
push
xchg
stos
push
adc
or
xchg
pop
sub
jge
int
lock
sbb
jbe
rorl
add
xchg
loopne
pop
adc
notl
push
test
adc
xchg
inc
scas
add
jmp
fldt
and
cmp
leave
pop
xor
mov
push
andb
xchg
xchg
fsubl
add
fstpt
ja
add
adc
mov
mov
pop
faddl
sti
pop
daa
repz
pop
sub
or
outsb
jne
les
mov
mov
loopne
pop
sub
push
aam
sbb
mov
iret
subb
jnp
scas
push
aam
jge
push
addb
add
add
test
jbe
jmp
dec
inc
dec
rcrl
frstor
xchg
ret
cmp
dec
rolb
mov
xchg
out
dec
stc
sahf
int3
cmp
cmp
fincstp
fisttps
pop
orl
xorb
lea
inc
out
les
cmp
adc
cmc
shll
cmpsl
pop
mov
add
xchg
popf
and
mov
dec
imul
and
xor
add
xor
jecxz
xor
les
xchg
stos
lret
pop
sub
pop
jle
or
jns,pt
inc
fidivrs
push
int
test
out
int
out
int3
hlt
lcall
xor
push
int
bound
idivl
dec
imul
insl
icebp
inc
push
rolb
pop
or
cmpsl
sti
push
cmp
pop
xchg
push
sub
push
mov
adc
xchg
adc
mov
movsl
jmp
or
add
jbe
mov
adcl
pushf
mov
mov
inc
push
xor
pop
lea
enter
mov
and
shrb
sbb
test
xor
pop
jns
dec
sarl
xchg
mov
and
call
ja
mov
dec
mov
xor
pop
and
ficoml
xlat
pop
dec
iret
and
jne
outsb
add
push
xorb
sbb
fimuls
lock
mov
add
jmp
fistl
mov
es
pop
or
sub
cmpsl
test
push
and
std
stos
shll
sub
fcoms
sbb
fsubp
out
ficoms
pop
pusha
mov
orps
xchg
sub
lods
xlat
mov
cmc
xchg
mov
push
dec
fistl
stc
jmp
rcr
xor
jb
add
jg
iret
cmpsl
cmp
scas
xor
xchg
adcb
sbb
mov
loopne
movsl
rolb
lret
cwtl
cmp
sub
les
je
ds
sbb
cmc
jmp
or
mov
loopne
mov
test
pop
sahf
out
imul
shlb
jb
adc
pop
and
adc
out
mov
int
and
sub
fadds
daa
shrl
adc
jns
stos
iret
shlb
dec
push
mov
faddl
cld
aas
xchg
icebp
das
sbb
fmuls
aam
dec
xchg
inc
add
enter
or
pop
add
int3
mov
inc
test
adc
pop
pop
mov
in
cmp
xchg
adc
loope
mov
add
mov
in
add
pop
adc
into
pop
int3
jg
xchg
movsl
cwtl
cmp
stos
or
ds
mov
push
daa
adc
pop
je
adc
bound
mov
push
mov
add
cltd
jp
or
fmulp
cs
adc
cwtl
mov
add
pop
mov
xchg
stos
movsb
and
shl
incb
push
jmp
mov
pop
imul
pop
mov
cmp
je
testl
push
aas
pcmpeqw
cwtl
mov
jg
sbb
pop
stc
daa
adc
repnz
mov
test
mov
rolb
pusha
call
mov
or
ja
add
push
add
sub
repnz
push
aas
popf
imul
clc
push
popa
cmpl
lret
clc
add
pop
add
mov
inc
test
push
popf
fst
xchg
sub
xchg
inc
ror
mov
add
and
int
scas
arpl
adc
pushf
mov
mov
outsb
and
xchg
add
lea
mov
push
dec
xchg
push
and
fidivs
cwtl
int3
and
pop
adc
inc
repnz
and
das
test
in
stc
add
movsl
inc
and
push
lcall
or
das
sub
mov
std
data16
mov
push
loopne
test
add
lret
mov
mov
aas
mov
mov
xor
jge
xchg
xchg
or
and
add
out
xor
push
cmp
inc
push
pop
dec
cld
fwait
sub
fdivs
cld
cmp
in
and
xor
packsswb
or
adc
mov
gs
push
adcb
pop
popa
jmp
lock
shll
adc
ret
pop
ds
lahf
mov
add
sahf
push
cmp
adc
mov
rcr
mov
aaa
loopne
leave
mov
test
add
pop
loope
int
ret
xchg
xchg
test
fcmovnbe
mov
rclb
std
je
push
mov
pop
movsl
fmull
and
rolb
sub
sub
add
icebp
pop
cmpsb
sub
in
push
xchg
ret
shl
pop
add
or
les
mov
xchg
sub
push
cmc
push
dec
out
adc
push
mov
fmull
test
mov
inc
shlb
movsb
lock
add
popf
ror
arpl
push
test
lcall
mov
dec
add
popf
add
jns
ret
xchg
add
xchg
and
ret
xlat
cmp
dec
add
cmp
neg
mov
or
test
stos
cmpsb
inc
sbb
popf
test
add
mulb
jb
adc
xor
mov
push
addr16
popf
in
xchg
jo
xchg
stc
xchg
push
aaa
pop
popf
and
cmp
sti
sub
mov
jecxz
dec
testb
xor
pop
es
lret
int
xchg
mov
add
xchg
dec
je
call
push
hlt
call
inc
xorb
lcall
dec
andb
sar
lret
outsb
mov
push
shlb
inc
xchg
mov
imul
jnp
movsb
push
scas
imul
and
iret
or
push
push
jnp
pop
and
cld
jecxz
and
add
jmp
jnp
jg
outsb
ffree
test
cmpsl
or
adc
ret
adc
dec
mov
add
imul
ds
mov
adc
pop
add
popf
call
cmpsl
in
stos
sub
xchg
inc
pop
popl
dec
add
cmp
adc
adc
mov
mov
xor
mov
and
popf
adc
fcomp
cmpsb
mov
inc
push
mov
ja
fidivrl
scas
jne
fisubrs
pop
xlat
dec
movsb
test
xchg
cli
xchg
cmp
jno
add
call
adc
xchg
mov
xchg
in
roll
dec
xor
push
lcall
cmp
rcrl
jecxz
mov
into
xchg
mov
xor
dec
push
cmp
xor
call
pop
lret
rorb
dec
add
inc
sub
ljmp
pushf
loope
sub
xchg
mov
mov
dec
adc
lret
outsb
popf
adc
mov
test
xor
aas
mov
mov
test
outsl
sub
inc
mov
loopne
test
mov
out
pop
sbb
mov
rcr
call
mov
pop
xchg
cmp
dec
mov
stc
roll
dec
dec
jecxz
icebp
add
fnstsw
xchg
pusha
popa
xchg
ror
mov
jp
cs
repz
std
xor
pushf
xchg
iret
xor
inc
adc
loope
push
adc
pop
mov
add
adc
mov
mov
outsb
xchg
stos
enter
arpl
out
pop
add
push
pop
popa
push
ljmp
add
xchg
jbe
hlt
scas
xorb
push
and
imul
pop
add
add
inc
cmpsb
fsubrs
imul
sbb
push
clc
testl
shll
daa
pop
fldt
enter
ja
repnz
mov
add
les
xchg
mov
add
jno
cmpsl
aas
cmp
adc
push
icebp
jo
divl
add
add
stc
fadds
popf
and
xchg
mov
gs
mov
mov
scas
je
pop
test
shrl
mov
mov
ds
nop
pop
xchg
lcall
in
scas
or
jmp
sbb
or
scas
dec
mov
outsb
push
adc
pop
ja
pushf
inc
xor
mull
das
sub
push
into
jae
mov
pop
lahf
arpl
shl
xor
lock
test
sbb
jbe
test
movsl
ret
pop
hlt
and
adc
lret
cmp
and
movsl
push
int
cli
cmc
rcl
pop
lret
cmp
sbbl
cmp
lret
sub
cs
out
xorb
lret
sub
pop
and
lea
jno
cmp
cmpsl
pop
int
fs
in
xchg
dec
mov
filds
and
cmp
adc
gs
loopne
push
divb
jnp
push
in
add
adc
pop
mov
mov
xchg
mov
pushf
or
loopne
je
inc
push
je
or
jle
loop
pop
dec
pop
mov
pop
outsb
push
add
outsb
adc
sbbl
mov
sub
fs
jb
pop
xorl
and
or
add
dec
xor
orb
dec
dec
cli
add
nop
pop
pop
add
out
sbb
add
adc
loop
push
mov
jg
insl
outsl
fdivl
adc
std
sbb
push
fcomi
jnp
stos
jae
cld
mov
xchg
out
loopne
es
pop
jbe
mov
dec
adc
lods
jmp
xor
ds
dec
push
add
adc
push
cwtl
getsec
test
pop
fs
call
lahf
aas
xchg
add
into
lock
cvtps2pi
clc
repnz
pop
jecxz
sub
in
int
sub
pop
pop
das
nop
pusha
out
mov
xor
jns
fstl
jno
add
xchg
bound
daa
lds
nop
popw
icebp
clc
std
and
xchg
xchg
mov
std
adc
test
add
push
or
scas
mov
push
mov
popf
push
xlat
xchg
fistpl
mov
jns
daa
push
aaa
xchg
cwtl
fnstcw
cmp
rorl
repnz
shll
mov
mov
and
ret
add
fisubrs
aam
fldl
pusha
xchg
add
add
and
pause
daa
adc
xor
outsb
cld
add
aaa
jmp
in
mov
xchg
cmp
mov
cmpsl
jg
fnstsw
sahf
lret
lcall
pop
setae
sbb
les
lret
in
aas
sahf
xor
cli
add
push
dec
and
jnp
sbb
adc
and
repz
clc
dec
pop
fwait
or
out
fdivrl
and
scas
xor
inc
xchg
cli
lods
cmp
movsb
sbb
mov
sbb
jmp
int
jmp
mov
xor
xchg
mov
cmp
mov
add
cltd
outsb
jg
into
rol
popf
xor
or
mov
insl
psubusw
mov
mov
imul
call
cmp
pusha
mov
fst
lea
popa
cwtl
jl
adc
cmpsb
repnz
mov
movsb
popa
adc
in
mov
and
pop
cli
mov
cmp
hlt
xchg
mov
add
lods
inc
xor
mov
sbb
shrb
sbb
daa
mov
outsb
add
into
xchg
and
in
popf
sub
outsl
and
add
in
add
movsb
xor
sbb
cmpsb
jmp
pop
pop
pop
mov
pusha
xchg
mov
shlb
and
fld
add
mov
mul
mov
or
sbb
cmp
sub
push
and
fldcw
inc
adc
add
jmp
jne
out
fisubl
cs
sub
xor
mov
pop
cmpsb
or
cmpsl
push
pop
shll
adc
xchg
and
xchg
xor
push
sub
test
loop
imul
fs
icebp
push
push
cmp
mov
push
or
inc
add
shll
add
and
jno
dec
mov
stos
adc
aad
in
rol
push
dec
fistps
aad
repz
dec
aas
inc
aad
adc
notb
cmpb
adc
cmpl
mov
rorb
shlb
test
dec
sub
mov
out
popa
push
outsl
hlt
fisttps
daa
dec
in
mov
iret
jmp
jecxz
scas
pop
add
xor
or
fldl
xor
jle
push
xor
or
mov
clc
and
cmpsl
inc
cmp
lock
outsl
imul
inc
push
mov
jns
jne
fistps
cld
out
shrb
sub
adc
mull
pop
inc
clc
and
mov
adc
imul
lret
cmc
cmp
repnz
insl
pop
std
cmpsb
test
mov
lea
add
jp
mov
inc
jns
loope
push
dec
in
pop
popf
adc
daa
ret
add
cld
cmp
xchg
pop
pop
jle
add
pop
and
out
lahf
add
fildll
xor
push
shlb
std
sbb
mov
sbb
das
je
das
lock
popf
sub
rorb
mov
lcall
or
cmp
cmp
lret
xor
mov
pop
cmpb
jle
inc
and
ficoml
cmp
add
sbb
addr16
jbe
fiaddl
fiadds
pop
push
fs
mov
add
xchg
dec
pop
idivb
sub
or
nop
add
mov
andb
add
mov
outsl
or
test
sub
cs
sub
fsubs
nop
push
lock
or
sub
adc
mov
xchg
lea
mov
jae
mov
es
insb
adc
cmp
mov
xchg
xor
or
jmp
sbb
push
mov
ds
add
dec
push
leave
add
std
inc
popa
xorb
or
push
push
scas
pop
lods
pusha
pushf
push
mov
sbb
arpl
xchg
push
pop
pop
sbb
or
out
test
ret
pop
push
sub
out
cmp
into
push
pusha
shlb
outsl
subb
fbstp
mov
mov
push
js
ret
dec
imul
cmp
outsl
popf
inc
push
pushf
cmp
fnclex
inc
shrl
add
mov
and
les
sbb
cmp
pop
or
and
push
es
pop
daa
mov
bound
xchg
push
in
or
pop
or
pusha
repz
sub
jmp
dec
push
mov
jne
bswap
mov
outsl
mov
mov
arpl
sub
pop
xor
mov
test
nop
call
mov
dec
push
pop
popf
lcall
push
mov
lds
push
xor
sub
icebp
pop
imul
js
fwait
pop
inc
dec
dec
mov
rcrb
aam
and
das
aam
dec
dec
adc
add
shll
and
adc
mov
jno
div
fiaddl
sbbb
xor
daa
enter
mov
test
mov
cwtl
in
gs
add
pusha
pop
mov
jg
lss
xor
adc
cmp
mov
fs
and
add
inc
movsb
loopne
out
es
push
mov
xchg
add
lea
cwtl
add
or
or
jbe
in
decb
jg
pushf
nop
popf
int
inc
mov
int3
sub
clc
popa
push
mov
add
pop
outsl
clc
sbb
mov
addr16
jmp
inc
enter
xor
dec
push
jnp
pand
leave
maxps
add
int
mov
sub
call
mov
fiadds
mov
mov
and
enter
dec
data16
cmpb
sbb
and
out
in
sarb
sub
inc
out
pop
stos
test
push
or
or
jb
and
pop
add
fwait
pop
iret
into
or
cwtl
sbb
mov
add
insb
jbe
imul
fcoml
mov
stos
dec
xlat
lds
movsb
mov
jg
popf
int
mov
mov
add
mull
shrb
nop
movsl
adc
and
mov
push
int
mov
mov
mov
add
mov
jmp
dec
push
out
dec
push
leave
mov
mov
add
loopne
lea
or
sarb
pop
push
and
cmc
and
aaa
sub
cli
loope
mov
sbbl
loopne
insb
pop
js
mov
mov
jno
mov
inc
xchg
sbb
add
lcall
data16
cwtl
aam
jl
jmp
into
scas
mov
add
add
movsl
jbe
add
pop
das
sbb
sbb
xchg
dec
movsl
cmp
notl
jae
cmpsb
mov
lret
nop
push
adc
mov
in
in
mov
mov
mov
xchg
in
add
push
clc
loopne
out
cmp
mov
fstpt
test
mov
ret
xchg
mov
mov
adc
cmpb
xchg
jae
sub
fsubl
push
pop
data16
bound
fcoml
enter
jl
popf
lcall
pop
mov
cs
pop
sbb
sub
mov
sub
push
hlt
fcompl
testl
and
mov
push
pusha
xchg
push
sub
stc
aam
pop
movsb
adc
dec
faddl
icebp
stos
idivb
nop
jg
sub
rolb
mov
jmp
adc
jnp
mov
fstl
cwtl
loop
adc
gs
outsb
out
loopne
pop
fcoml
pushf
dec
sbb
shll
and
in
push
and
aad
add
mov
dec
or
push
mov
and
and
aas
sub
ror
adc
dec
mov
les
inc
add
inc
and
xor
hlt
add
notl
in
push
cmpsl
and
pop
or
pop
pushf
faddl
fistps
pop
insl
jl
fiadds
add
sbb
xor
psubw
andb
dec
mov
fnsave
out
adc
mov
dec
enter
rol
cmp
jo
cmpsl
aam
sbb
shl
pusha
pop
in
push
push
gs
add
xchg
sti
add
fstpt
add
or
ljmp
mov
lods
daa
xor
push
jo
in
aas
cmp
ficoms
inc
mov
adc
das
jge
adc
pop
enter
mov
test
repz
jnp
std
aas
adc
mov
xchg
and
mov
add
pop
les
cmc
pop
pop
xlat
cmpsb
sub
push
mov
nop
mov
je
faddl
or
faddl
or
aam
add
das
cwtl
stos
mov
add
xor
push
ljmp
add
loop
adc
sbb
jl
pop
jne
cmp
xor
loope
cltd
jo
inc
xchg
lea
test
fs
add
mov
cld
adc
adc
in
and
insl
dec
jl
jb
sub
adc
cmp
cwtl
out
add
imul
pop
hlt
add
and
popa
mov
das
mov
mov
loope
sbb
add
pop
test
mov
aad
outsl
enter
mov
dec
repnz
jl
jnp
nop
xlat
mov
xor
cmpsb
lcall
xor
add
sub
enter
in
in
rcll
in
lods
or
xor
test
adc
mov
mov
cmp
daa
pop
inc
mov
jbe
idivb
or
sub
mov
popf
and
jecxz
lcall
stos
jg
and
mov
popa
cmp
xchg
sti
fsubrs
mov
push
sub
and
clc
jae
adc
lcall
mov
cld
inc
jl
movsl
xor
fmuls
je
ret
and
jmp
mov
shlb
jp
mov
inc
sub
mov
mov
pop
pop
shlb
xlat
nop
test
loop
mov
nop
ljmp
mov
add
and
dec
sub
sub
rolb
leave
and
mov
sbb
adcl
mov
inc
mull
push
xor
mov
in
inc
shl
addr16
fldl
add
sub
inc
pop
cmpsb
and
add
repz
sub
arpl
xlat
out
xchg
xchg
stos
mov
fists
push
sbb
imul
sub
stc
adc
xor
mov
adc
inc
mov
or
push
sbb
sahf
scas
dec
dec
inc
arpl
jno
push
xor
sahf
lea
jmp
sarl
jb
pop
test
out
out
jmp
pop
or
cmpl
and
add
inc
fwait
movups
stos
adc
std
cmp
or
js
and
inc
sar
xor
pop
add
outsb
rclb
data16
inc
int
add
mov
mov
add
std
cmp
mov
vmovups
push
xor
cwtl
sysenter
daa
jns
jne
add
dec
pop
cmp
mov
aas
or
fadds
js
adc
dec
dec
add
pop
sbb
repz
pop
fmuls
in
out
lods
adc
dec
dec
push
adc
cmpsb
pusha
mov
adc
mov
jmp
jge
fiadds
and
inc
push
dec
bound
xchg
add
stc
fnstcw
sub
out
add
mov
xchg
popa
jbe
loopne
mov
sbb
rolb
adc
push
add
pop
pop
das
mov
mov
pop
cwtl
and
jbe
rcl
nop
mov
push
ffree
pusha
pop
lods
pop
push
inc
in
xchg
call
incl
adc
and
dec
push
inc
add
push
insb
ljmp
push
add
popf
or
mov
adc
cmp
xor
push
or
fistpll
push
dec
stc
movsl
in
pop
add
fmull
popf
xor
pusha
xchg
cmp
mov
jae
jb
ja
in
push
lret
clc
fadd
add
cmp
sub
and
stc
mov
or
mov
sarl
sub
add
or
mov
enter
outsl
mov
in
add
inc
dec
test
xchg
sarb
cmp
repz
cmp
add
add
dec
dec
test
mov
add
push
je
dec
mov
jge
mov
dec
sub
jle
imul
into
lahf
add
sub
sub
mov
das
jne
test
mov
or
popa
insl
rolb
push
push
sbb
mov
fdivr
jl
jp
sbb
add
add
mov
inc
in
sub
das
mov
sbb
nopl
adc
adc
aaa
push
roll
dec
push
movsl
adc
jge
out
je
pop
aam
mov
popa
cmp
mov
test
int
cmp
test
sub
mov
sub
jge
pushf
sbb
mov
adc
xor
pop
push
les
bnd
repnz
shl
and
das
xor
mov
add
out
aaa
movsb
adc
jl
sub
fcoms
lahf
pop
pop
jmp
aam
daa
adc
lock
dec
pop
fldt
pop
jecxz
adc
sahf
sarb
lcall
or
popa
xchg
mov
or
mov
add
aaa
jg
mov
or
sub
testl
inc
jae
add
push
int3
outsl
gs
pop
add
push
cwtl
fdivr
call
jne
std
fisubrl
in
sbb
imul
dec
jnp
inc
lret
jno
clc
les
sahf
xor
inc
sbb
scas
icebp
mov
shr
and
inc
negb
iret
sbb
add
aaa
lds
mov
nop
cmp
cmc
xor
shlb
mov
cwtl
xor
and
mov
sahf
sahf
adc
addr16
mov
scas
jmp
jo
xor
popa
fs
cmc
lods
sub
call
mov
xchg
cmpsl
jg
test
adc
pop
cmpsl
inc
in
push
jae
adc
push
loopne
icebp
or
jge
pop
test
jns
pop
push
shl
xor
xor
out
or
and
sbb
cmp
cli
rcrl
inc
sub
lahf
daa
in
cmp
mov
mov
ret
cmp
mov
ja
push
mov
fldenv
dec
iret
and
pusha
mov
test
imul
out
ja
add
xor
sbb
add
and
loop
shlb
xchg
push
dec
push
add
xchg
daa
into
stos
inc
cmp
add
and
call
and
mov
pop
and
cmpsb
fld1
push
add
cmp
flds
jp
repnz
sub
push
add
lea
pop
fimull
mov
orb
lahf
aaa
outsl
lds
cwtl
rol
adc
xchg
into
popa
les
mov
adc
pop
or
dec
push
pusha
mov
imul
nop
sub
mov
int
mov
pop
lahf
or
or
sub
scas
psubsw
and
mov
aam
inc
xor
xchg
imul
popa
outsl
loopne
movsb
sub
iret
rcll
stc
add
outsl
movsb
add
mov
ljmp
add
mov
xchg
fucomip
jo
testl
jle
movsb
bound
fcoml
mov
shl
iret
gs
adc
jecxz
jmp
popa
sbb
inc
scas
xor
test
jae
add
cmc
fists
pop
in
loop
push
push
loop
add
sub
data16
in
add
and
xchg
lods
lret
dec
lods
pop
bound
lods
clc
pop
jge
sbb
std
push
lret
fldenv
jo
test
movsb
and
sbb
aas
mov
lds
in
xchg
adc
mov
idivb
mov
pop
ljmp
std
push
cld
and
cmc
sub
mov
push
out
negl
add
jne
cli
xchg
inc
and
pusha
cmc
sub
ficoms
rdmsr
adc
xchg
outsl
add
call
inc
lock
mov
xor
bound
test
cmpsb
inc
pop
add
iret
or
cltd
xor
mov
aad
lcall
jo
adc
adc
mov
and
mov
rolb
and
cmp
test
push
pop
dec
cmp
push
xchg
add
jno
mov
push
dec
loop
les
ljmp
xor
pop
test
and
loopne
add
mov
sub
mov
mov
sub
mov
sub
push
arpl
cmpsl
pop
test
rcrb
xor
adc
jae
leave
loope
int3
mov
dec
jmp
ds
jnp
fstpt
add
cmc
adc
mov
xchg
jg
push
inc
mov
mov
or
inc
mov
lods
jge
stos
dec
lds
bound
or
cli
addr16
imul
fs
lods
movaps
pop
mov
pop
adc
xor
mov
push
adc
sti
pop
int
aad
and
outsl
les
mov
out
inc
mov
pop
lods
les
out
mov
or
sbbb
std
add
add
pop
loop
lahf
sbb
inc
xor
iret
imul
mov
repz
xchg
gs
lret
hlt
dec
and
mov
je
jo
and
xchg
xchg
xchg
dec
jg
pop
shlb
pushf
adc
mov
pop
sbb
andb
dec
mov
pop
int
inc
fdivrp
jmp
xchg
aaa
xchg
add
cmp
mov
pop
out
fmuls
mov
jo
adc
jnp
adcb
daa
push
inc
add
sbb
mov
dec
rorb
pushf
fs
mov
shlb
scas
push
pop
inc
dec
dec
ss
adc
xor
shlb
and
outsl
jno
es
cmc
mov
movsl
mov
mov
roll
sahf
addl
sub
adc
push
add
or
jle
dec
popf
daa
or
add
pop
pop
inc
cmpsl
hlt
fdiv
or
dec
add
lcall
cmp
or
jns
add
nop
push
cmp
sti
andb
xchg
pop
sub
rdtsc
push
loop
cwtl
xor
mov
mov
and
xor
and
push
out
adcb
mov
xchg
and
aas
cmpsl
out
xor
pusha
stc
push
nop
fdiv
add
repnz
jns
rorl
push
sub
and
popa
scas
push
ss
and
mov
mov
cld
lret
or
sub
imul
pop
mov
mov
rclb
push
aas
out
pop
enter
pop
cmpsb
or
arpl
add
insb
xchg
or
js
cmp
add
lock
jns
in
insl
sub
sbb
call
mov
and
sar
jns
addb
dec
sbb
add
push
or
addl
rcr
xor
mov
das
xor
mov
push
mov
push
fwait
add
dec
lea
and
sub
lock
insb
jne
adc
gs
pushf
rcr
pop
ficompl
pop
shlb
inc
sbb
jp
imul
jle
mov
pop
add
xchg
sbb
cmc
push
cmp
adc
aas
inc
cmp
cmp
push
add
mov
xchg
cmpsl
movsb
shlb
arpl
inc
adc
mull
cmp
sub
or
loopne
mov
xchg
adc
dec
mov
jg
xor
add
sbb
or
mov
mov
rorb
add
xor
aas
mov
cmpsb
das
nop
cmc
pop
mov
add
sbb
sub
adc
inc
jne
adcb
and
ljmp
xchg
xchg
add
pop
mov
mov
aad
popa
mov
jmp
mov
in
lret
and
das
jg
js
dec
sbb
inc
sti
jns
inc
testb
sahf
pop
out
and
aaa
addb
jp
adc
outsb
ficoms
mov
std
mov
lcall
xchg
sub
xchg
hlt
out
sbbl
mov
mov
pop
scas
rcrb
sbb
lahf
pusha
or
js
push
mov
std
mov
repz
adc
popa
lahf
lea
sub
arpl
add
test
cmp
invd
shld
mov
xchg
test
sub
mov
cli
je
add
aam
inc
and
in
out
mov
shll
add
bswap
or
or
mov
mov
adc
sbb
roll
test
fidivrl
xchg
add
mov
stc
mov
add
test
dec
inc
xchg
xchg
ret
inc
lea
loopne
adc
cmp
add
mov
cmp
repz
ljmp
das
cwtl
aam
out
xchg
mov
or
je
push
jbe
xchg
xchg
jns
aas
mov
mov
pop
stos
adcb
fwait
lock
cwtl
es
cmp
and
repz
or
movsl
rorb
icebp
stc
sub
pusha
mov
cltd
and
sub
xchg
and
cmp
dec
mov
hlt
mov
addr16
or
dec
mov
js
nop
and
pusha
and
xor
addl
loop
inc
lds
and
mov
pop
add
cld
or
jge
mov
jge
loope
mov
iret
test
repnz
xchg
in
xor
and
fisubs
mov
cmp
fcmovb
enter
shl
stc
test
mov
jno
imul
xchg
sbb
fsubrs
pop
jmp
mov
or
popf
inc
call
rcr
pop
mov
cmp
sub
cmc
mov
sub
imul
jmp
jecxz
call
in
add
rorl
or
pusha
mov
push
fisubrs
or
dec
repnz
aad
or
jecxz
test
or
stos
mov
icebp
aaa
fdivs
adc
fisubl
add
inc
mov
dec
add
xorl
icebp
testb
cwtl
lahf
dec
out
mov
test
mov
inc
add
mov
call
xlat
sub
or
add
jmp
jae
scas
push
xchg
add
sbb
cmp
mov
push
push
jle
jle
push
or
hlt
jns
inc
popa
push
or
loope
jns
adc
mov
icebp
push
xor
mov
sti
das
rep
pop
icebp
fstpt
xor
scas
repz
hlt
cmpsb
call
xorl
inc
mov
in
cmovns
and
jbe
sbb
lock
and
mov
xchg
jp
out
lock
fbld
icebp
imul
test
pop
in
dec
movsb
jb
loopne
idiv
and
sbb
jg
mov
nop
outsb
sub
dec
or
sub
mov
sbb
pop
mov
cli
sbb
aas
stc
fbstp
lahf
faddl
pop
das
rclb
push
push
leave
aad
test
push
jmp
push
pop
movb
out
xor
shlb
pop
or
daa
pop
mov
cmpb
or
lods
cs
jl
out
and
pop
mov
stc
fildl
out
mov
xor
jno
loopne
les
das
dec
xchg
xchg
sub
and
adc
or
mov
inc
lret
jmp
loop
in
xor
enter
adc
adc
shrl
in
push
sub
das
shlb
pop
pushf
xor
clc
pop
das
outsb
insl
fmuls
pop
addr16
adc
nop
imul
or
imul
dec
and
movsl
cmpl
shl
movsl
sbb
sub
shlb
xor
adc
mov
pop
pop
mov
add
xor
inc
xchg
aas
cld
dec
lcall
lock
mov
fcmovnb
cmp
pusha
mov
mov
mov
push
cli
inc
arpl
ret
insl
into
or
cwtl
push
mov
pop
jmp
jo
adc
sub
jae
jo
out
or
test
sub
fisubrl
rolb
das
cmp
mov
pop
add
loope
add
lds
les
sub
stc
cmp
add
push
add
pop
repnz
mov
inc
shl
xlat
shr
push
in
sahf
fs
pop
jmp
adc
pop
mov
sarb
push
pushf
lea
aas
mov
mov
out
call
add
popf
xchg
aam
mov
mov
jns
add
ret
jmp
jle
inc
fistpll
pop
sbb
jns
inc
and
jo
cld
xchg
add
xchg
xchg
dec
rorl
cmp
adc
and
push
pushf
cmc
outsl
outsl
inc
dec
mov
sbb
adcl
test
pop
jae
mov
or
outsb
loope
adc
lods
xor
xor
sahf
aas
add
out
decl
int3
add
xor
das
add
fs
cld
inc
mov
notb
jecxz
fs
shlb
mov
mov
mov
cmp
movsl
lret
les
adc
sub
std
fwait
mov
repnz
das
div
bound
xchg
add
sub
and
stos
rorb
cwtl
leave
je
sub
sub
jecxz
int
sti
mov
mov
mov
pop
cmp
push
es
testb
dec
in
cwtl
jecxz
lret
add
mov
pop
add
movntps
das
cltd
dec
push
es
pop
lods
dec
daa
repnz
lahf
cmp
test
ljmp
loopne
adc
lock
fmuls
adc
jmp
push
jns
add
pop
das
popa
cltd
pop
xorl
sti
mul
lahf
add
pop
scas
imul
sbb
aad
cmpsl
fldenv
rcrb
push
mov
add
sub
ds
fst
fwait
imul
mov
pushf
mov
mov
inc
and
push
fs
sbb
xor
xchg
pushl
lahf
adc
test
cmp
dec
lods
scas
loop
mov
xchg
pop
pop
test
fcompl
xchg
xchg
mov
or
arpl
mov
lahf
push
inc
imul
sbb
shlb
ljmp
popa
cs
dec
mov
lea
inc
push
add
inc
cltd
ds
popf
sub
adc
lea
movsl
push
pop
fistps
dec
mov
mov
or
xchg
dec
lahf
inc
jbe
pop
mov
ss
or
sub
dec
xchg
loop
add
add
mov
mov
dec
mov
stos
sahf
jg
mov
mov
cmp
push
aaa
ja
jne
ja
inc
shr
test
cmpsl
sub
pop
mov
jo
aam
mov
or
jmp
stos
outsl
rcrl
adc
int3
outsb
aad
flds
and
rorl
push
xchg
cltd
xor
aas
mov
xchg
dec
std
mov
mov
popa
jnp
pop
sbb
fmul
fldl
gs
push
push
ss
add
push
adc
inc
mov
mov
mov
lods
push
das
cmc
pusha
sahf
cmpsl
pusha
xchg
lock
in
mov
pop
xchg
jne
add
or
out
ficomps
cli
mov
xchg
cmc
or
inc
fistps
fwait
adc
dec
in
addr16
push
loope
add
xor
sbb
enter
roll
cmp
nop
xlat
test
mov
add
cmpsb
pop
dec
test
inc
test
cmp
fcoms
mov
loope
cs
aas
fldenv
lods
xrelease
loopne
xor
jbe
imul
lret
out
repz
out
adc
test
clc
mov
or
test
popf
cld
sbb
pusha
or
jno
pop
or
cmc
pop
lar
outsb
push
and
add
pop
dec
push
xor
jp
add
pop
and
rcrb
int3
add
push
loope
das
add
mov
push
fcompl
cs
scas
shrb
and
and
add
std
pop
stc
or
mov
mov
add
jge
pop
je
adc
add
mov
push
jmp
pop
and
lcall
in
fstpl
sbb
dec
add
stos
mov
xor
arpl
adcl
das
sub
mov
pop
cmc
ds
test
pop
or
cltd
arpl
adcb
mov
dec
and
pop
adc
xchg
or
popf
icebp
sub
mov
xchg
or
jbe
in
inc
or
jle
out
mov
rep
jnp
mov
push
or
gs
subb
int
pop
dec
fldenv
andb
cltd
andl
push
xchg
out
sub
adcb
ffreep
xlat
add
lods
je
add
mov
popa
mov
sub
fidivrs
jg
cmpsb
mov
jmp
mov
jecxz
add
cli
sbb
les
fwait
leave
rcr
push
pop
add
or
fcoml
push
idivb
aam
dec
fimuls
xlat
ljmp
pusha
xor
repnz
ret
fstpl
pop
pop
jg
cltd
popa
or
sub
rorl
mov
push
mov
subb
or
push
lods
adc
mov
lock
xor
sub
je
cs
push
cmpsb
push
cmp
sti
xor
mov
fldcw
push
std
dec
bound
add
cmp
cld
notb
or
out
sbb
xor
xor
outsb
sahf
cmp
into
mov
testl
movsl
mov
lea
jne
mov
xor
ffreep
push
in
dec
fs
pusha
pop
adc
adc
and
int3
shrb
xchg
pop
and
rol
push
aas
jmp
les
sbb
inc
jle
mov
jmp
insb
adc
and
push
mov
cmp
loopne
push
push
push
jno
pop
mov
add
je
inc
nop
lods
xchg
loopne
repnz
dec
lods
cld
inc
stos
or
dec
xor
sti
jb
xchg
pushf
in
and
add
test
cmpsb
fisubrs
pop
xor
push
or
mov
add
mov
add
and
sarb
dec
pop
idivb
adc
sbb
push
lock
incl
push
jp
jg
int
andl
hlt
pop
xchg
aas
mov
popf
dec
lods
aaa
test
add
test
mov
mov
push
hlt
add
cmp
jno
xor
loopne
inc
or
data16
cmp
push
sub
inc
add
outsl
nop
inc
add
mov
sub
xchg
js
loop
xchg
scas
mov
adc
inc
in
mov
pop
mov
sarb
repnz
and
xchg
sub
mov
mov
add
mov
or
inc
add
xchg
xor
mov
icebp
inc
andl
pop
jae
dec
lea
lea
js
daa
mov
and
xor
sbb
jmp
das
mov
pop
js
adc
dec
scas
push
ss
xchg
dec
inc
and
inc
xchg
insl
jmp
sbb
push
gs
sub
sbb
or
lea
dec
mov
loopne
sarl
call
push
add
sbb
daa
inc
mov
push
adc
mov
aad
lods
das
nop
or
xchg
fldcw
push
add
adc
cmp
cmp
or
lea
mov
cli
insb
or
xchg
adc
and
adc
lret
cmc
jbe
dec
sub
cmp
sbb
stos
fcoml
pop
loope
push
das
mov
ret
lcall
inc
sbb
cmp
add
mov
add
cltd
cli
out
and
push
jbe
pop
xchg
xchg
std
movsl
mov
adc
clc
cltd
cmp
xchg
test
movsb
add
mov
jg
jmp
add
dec
inc
add
and
daa
fs
mov
xchg
push
cmpsl
adc
xchg
out
add
aam
xchg
loope
pop
pop
fstpt
pop
call
jne
inc
jmp
sub
pop
sub
or
loopne
enter
out
or
push
xor
mov
fmull
repnz
aam
shrl
mulb
cs
flds
les
or
stc
fs
cmp
xchg
mov
dec
aam
aad
add
jg
mov
shlb
stos
mov
mov
scas
std
gs
push
icebp
fmull
sarb
mov
add
lods
call
sbb
inc
sbb
xor
cmp
pop
mov
sub
sub
popf
add
pop
es
xor
jmp
adc
mov
fwait
std
fldl
xchg
movsl
pushf
mov
add
push
mov
test
aas
cmp
addb
jecxz
adc
popa
jnp
inc
or
pusha
add
push
sahf
mov
fiadds
aaa
lea
pop
stos
fs
pop
data16
pop
jecxz
bound
aam
jns
sub
adc
test
mov
sub
xchg
loopne
sahf
xchg
jnp
pop
adc
and
pushf
add
movsl
inc
jecxz
push
test
mov
out
jns
fucomip
test
mov
lret
lds
mov
adc
hlt
mov
jnp
cltd
je
jae
dec
xchg
dec
jmp
lcall
stc
cltd
sbb
and
stc
xor
fcompl
imul
sbb
jl
int3
mov
xchg
mov
shl
jo
addb
aam
mov
sub
loope
addl
daa
cmpsb
jo
cmp
aam
loope
scas
outsb
inc
inc
jge
and
push
dec
fidivs
and
pop
outsl
xor
xor
xchg
aaa
aad
loope
cmp
mov
dec
cltd
mov
push
or
int3
fdivrl
mov
xchg
stc
imul
adc
iret
sub
jo
into
add
pop
stos
pop
and
add
fcomps
mov
gs
xor
mov
jb
or
jne
mov
fsubrs
outsl
mov
cs
icebp
test
dec
pusha
outsb
push
pop
ret
or
in
adc
mov
adc
mov
sbb
or
shl
ret
jne
sbb
ss
in
lcall
mov
xor
mov
cmp
jns
pop
add
xchg
mov
ret
add
sbb
push
sub
sbb
xlat
mov
or
pushf
add
push
mov
mov
mov
inc
sub
inc
sti
in
mov
xchg
scas
cwtl
ret
xchg
clc
fistps
imul
and
adc
popf
rcrl
aam
pop
sbb
dec
cwtl
cs
inc
cmpsl
adc
push
stc
xchg
cmpsb
pop
jmp
xor
push
in
int3
rcrb
ljmp
cmp
sub
fsub
sbb
mov
into
popa
xchg
mov
pop
cmc
mov
cmpsl
in
sbb
mov
xchg
xor
mov
data16
rolb
add
pop
add
ss
mov
xor
clc
adc
cs
data16
inc
sbb
push
cwtl
mov
mov
lods
and
jb
and
outsb
xchg
and
add
js
popa
mov
jbe
dec
dec
mov
scas
inc
xlat
loopne
pop
aas
mov
pop
jg
sub
insl
pop
adc
rsqrtps
adc
mov
popf
adc
push
scas
jno
int
xchg
lods
cmpsl
notl
pop
mov
add
clc
mov
mov
arpl
repz
xlat
or
add
xchg
sub
ljmp
imul
stc
in
lods
adc
jbe
outsb
push
add
add
cs
jno
jge
ret
push
cmc
push
imul
push
pop
pop
js
icebp
add
or
mov
shl
mov
dec
push
xchg
nop
pop
or
test
mov
push
pusha
pop
loope
push
push
adc
addl
push
pop
pop
xchg
std
pop
mov
jecxz
rep
fadds
jmp
cmpb
cmpsb
out
int3
mov
xor
xor
call
and
inc
lahf
inc
mov
fmuls
and
les
inc
sbb
ss
mov
inc
pop
movsl
fsubrs
inc
jno
fs
push
mov
mov
mov
add
imul
jmp
mov
loopne
sar
cmp
jns
cs
dec
test
js
leave
adc
cmp
pop
adc
dec
push
ds
subl
sahf
lcall
dec
sbb
xchg
pop
imul
adc
test
sbb
push
stos
xor
mov
adc
cmp
icebp
or
mov
pop
nop
call
push
adc
es
sbb
icebp
and
movsl
or
xchg
or
push
shr
testb
xchg
fistl
fidivrl
dec
std
mov
cmp
sbb
pop
xor
pop
push
cmp
adc
movsb
push
fistl
cmc
sub
push
dec
stos
jp
add
dec
jge
filds
xor
jo
stc
popf
jmp
add
insl
out
aam
stos
xor
sub
sbb
adc
and
call
sub
enter
dec
shlb
push
mov
sbb
ja
repz
test
push
adc
mov
or
mov
and
adc
sbb
inc
mov
loop
jo
stc
jge
xchg
add
push
jnp
pop
add
xor
pop
mov
arpl
or
inc
jl
call
addl
nop
pop
push
sub
pop
cmc
mov
data16
out
out
or
pop
nop
sbb
cmp
mov
stc
fistpll
out
jge
mov
or
mov
out
add
call
in
sarl
or
add
xor
popf
and
js
cmp
bound
and
xor
mov
rclb
shrl
and
sbb
das
add
push
mov
pop
cmp
rdtsc
loope
adc
jmp
icebp
and
add
inc
bound
cld
popf
add
mov
jmp
jge
sbb
or
sub
push
scas
leave
jp
add
shll
push
push
je
inc
pop
cli
jo
fadds
and
dec
push
push
addl
or
jge
lret
pushl
idivb
incl
sub
xchg
dec
daa
cltd
and
cld
inc
leave
subl
adc
or
ja
cmp
pop
mov
push
pop
mov
push
mov
sub
jb
add
jae
out
aad
add
cmp
add
push
sarl
js
pushf
add
pusha
adc
popf
nop
popf
test
orl
shlb
mov
dec
lahf
cmc
sbb
pop
mov
dec
mov
rcrl
idivl
mov
adcl
dec
adc
ds
jns
sub
fdivrl
add
pop
jb
aaa
int
ret
jg
imul
add
pushf
enter
pop
xchg
sbb
jne
xor
icebp
add
rolb
je
movsl
out
push
and
mov
inc
push
push
imul
xchg
inc
mov
and
add
mov
xchg
lods
movsb
xchg
std
sbbb
out
popa
fcoml
xor
scas
xor
or
jge
or
test
call
mov
sub
jmp
push
and
or
mov
lds
xchg
loope
outsb
cwtl
lcall
loope
sbb
pop
movsb
lock
or
inc
xchg
and
repnz
jecxz
test
dec
jbe
add
pop
xchg
and
xor
sbb
popa
addr16
cmp
push
pop
lods
loope
insl
stos
jnp
jne
lds
loopne
nop
shr
sub
arpl
push
dec
loope
adc
inc
fstpt
int
loope
test
aas
pop
pop
pusha
stc
dec
lds
mov
cmp
and
pop
clc
jl
cs
sub
or
into
rcrb
pop
mov
mov
mov
nop
ljmp
shrb
out
sbb
sbb
mov
pop
jmp
mov
mov
push
mov
xor
push
inc
popl
cmp
push
ljmp
cmp
dec
xchg
shl
and
mov
outsl
addb
testl
sbb
pop
std
imul
jmp
xor
pop
and
in
jno
mov
add
decl
int3
int
daa
popf
movsl
xchg
dec
pop
push
aaa
dec
adc
xchg
out
dec
test
daa
in
es
in
lret
out
push
push
push
cs
or
mov
mov
mov
adc
push
frstor
xor
adc
mov
add
out
mov
out
pop
push
sub
xorl
cld
popa
out
xchg
out
push
mov
add
cmp
aad
insl
outsl
cmp
fwait
inc
shll
cltd
out
aad
cmc
mov
inc
or
lea
adc
mov
mov
add
adc
xor
movsl
or
adc
mov
jno
inc
insl
or
lcall
iret
clc
das
jmp
pop
cmp
stc
add
sbb
push
popf
shr
ja
add
outsl
adc
or
int
cmp
inc
pop
mov
pop
outsl
jne
pusha
lods
xchg
and
adc
jecxz
xor
push
or
add
xchg
xor
mov
xor
and
pop
add
add
mov
adc
xchg
out
adc
jnp
js
push
or
xor
push
rorl
iret
bound
jns
add
cld
pop
sbbb
fsubr
incb
pop
add
loopne
push
pop
mov
xchg
xchg
inc
mov
mov
insl
pop
sub
add
ficompl
insb
into
pop
adc
sbb
or
shll
lea
loope
or
add
jge
jle
mov
add
iret
mov
sbb
cs
or
push
xor
mov
mov
sub
movsl
fwait
aam
fwait
movb
mov
cli
xchg
mov
sub
jo
femms
pop
push
mov
xor
add
pop
bnd
adc
mov
adcl
sahf
pop
cmp
dec
stc
mov
sub
jns
ret
fstpt
cmp
stc
jecxz
cs
xchg
pusha
mov
imul
mov
sbb
inc
pop
ret
add
mov
push
fnstenv
aas
test
les
stos
outsb
pop
or
push
sub
subl
xchg
test
popa
orl
lods
adc
imul
mov
pop
xor
into
add
mov
xchg
mov
mov
call
rcrl
nop
fsts
add
jo
mov
jb
jge
xchg
xchg
pop
es
add
mov
je
cmp
jge
dec
xor
int3
adc
outsb
andb
add
and
popf
mov
push
add
dec
jnp
jp
add
mov
nop
call
int3
sub
test
mov
sub
test
leave
and
sub
xchg
sbb
dec
daa
cmpsb
cltd
adc
sbb
and
mov
add
xchg
std
mov
outsb
iret
daa
jnp
mov
adc
sbb
outsl
mov
sub
hlt
sbb
loopne
adc
loop
add
pop
dec
inc
stos
das
jl
or
and
mov
mov
mov
jmp
adc
nop
push
jno
stos
push
and
inc
sbb
mov
mov
rcll
cmpsl
sbb
fs
jno
add
int
iret
out
loope
aam
lods
cltd
dec
and
scas
leave
mov
xchg
loopne
jmp
xchg
jle
scas
xor
jae
imul
out
xor
test
xchg
enter
xchg
andb
insl
nop
mov
mov
in
sarl
add
cmp
loop
xor
add
lods
mov
dec
or
pusha
fistpll
cmp
loopne
mov
dec
ret
mov
cmp
aaa
pushf
add
fdivrp
xor
cli
idivb
mov
sti
int
dec
mov
add
sarb
xor
shlb
rcll
insb
dec
xchg
sub
cmp
test
jb
fs
out
jecxz
mov
cmp
aam
fcmovnbe
ret
shlb
imul
push
es
jle
sbb
push
repz
or
idivb
popa
mov
mov
push
and
dec
std
imulb
xchg
or
mov
ja
push
xchg
sbb
iret
mov
jmp
bound
rclb
imulb
loop
jnp
jecxz
cwtl
push
push
movl
mov
xchg
das
enter
adcb
jle
mov
mov
cmp
dec
mov
add
pop
stos
int3
pop
sub
jl
in
cli
inc
adc
cmp
mov
cmp
mov
in
out
fwait
pop
shl
push
dec
pop
out
lods
rorb
aaa
xchg
repz
mov
pop
add
mov
jo
inc
dec
or
pop
mov
inc
cmp
jne
call
dec
mov
outsl
pop
and
js
stos
pop
insl
inc
pop
pop
jae
mov
cmpsl
jmp
pop
pop
mov
pop
sub
and
nop
mov
sbb
out
jae
inc
and
iret
adc
es
int
pop
in
push
cs
jmp
xor
and
lcall
cld
sub
mov
add
xchg
imulb
enter
or
das
pop
std
orb
xlat
cmp
add
enter
fadds
adc
dec
xchg
popa
mov
repnz
inc
jnp
sbb
pushf
jno
or
ficoml
ja
icebp
dec
popf
xchg
cmpsl
mov
in
mov
adcl
pop
mov
adc
xlat
add
xchg
jmp
addb
xchg
in
in
clc
in
std
add
xor
fistps
aaa
in
push
scas
popa
push
lds
add
pop
sti
mov
mov
and
and
enter
fsub
data16
mov
std
cmp
inc
inc
imul
cmpb
in
sub
push
pusha
sub
aas
testl
movzwl
das
xor
sti
aam
sarl
hlt
test
jbe
mov
out
fidivrl
sbb
pop
mov
push
fcomp
xchg
or
pusha
and
mov
ds
xchg
pop
sub
cmp
out
daa
sbbb
adc
cld
mov
lods
jbe
adcb
in
jmp
mov
sub
sub
mov
shll
sarb
add
lret
test
inc
xchg
jnp
pop
test
movsl
test
sbbl
mov
in
add
test
and
add
mov
out
scas
cmpsb
cmp
and
or
xchg
xlat
pop
push
sbb
push
popf
repz
pop
adc
jg
xchg
adc
or
outsl
adc
cs
enter
jbe
jge
lods
sbb
push
xchg
cmp
sub
add
dec
clc
mov
xchg
nop
mov
out
pop
inc
pop
xchg
xchg
icebp
test
add
loope
sbb
or
pop
jae
push
jle
cmc
stc
hlt
xchg
notb
mov
push
enter
add
loop
and
lea
pusha
mov
mov
pop
stc
test
and
pop
xchg
clc
push
sub
mov
outsl
xchg
cli
xor
mov
and
sub
push
adc
xchg
cmc
out
jns
call
cmp
out
lret
sahf
cwtl
dec
push
adc
xchg
or
nop
push
fs
sbb
xor
insl
ljmp
mov
std
in
inc
cmp
pop
push
mov
stc
xchg
leave
js
nop
mov
jnp
pop
popa
xchg
arpl
mov
shr
lods
popf
test
xchg
jo
cmp
pop
xchg
pop
pusha
enter
js
adc
fcoms
add
leave
movsb
repnz
xor
pop
jl
das
push
hlt
xchg
pop
mov
add
or
mov
xor
movsl
xchg
in
sbb
scas
mov
jae
imul
jnp
test
mov
jne
cmp
pop
mov
frstor
sahf
push
movsb
out
popf
les
and
inc
cmpsb
stos
pop
lds
lods
sar
jmp
out
loop
pusha
xchg
insl
add
idivl
push
movsb
out
jle
fs
or
pop
mov
mov
iret
notb
ljmp
test
inc
jmp
in
jne
sti
add
sub
test
adc
mov
cmpb
jo
dec
daa
cld
cmp
sbbb
int
jne
push
das
push
loope
sub
testb
cmp
add
push
mov
pop
in
jg
mov
mov
mov
jo
mov
sahf
sti
outsb
leave
push
add
das
inc
xor
cmp
sbb
jbe
fimuls
insb
cli
xchg
ljmp
and
mov
mov
ja
sub
clc
daa
push
pop
push
std
outsb
push
std
mov
popa
push
roll
in
mov
data16
cmpsl
mov
dec
add
adc
mov
xor
push
pusha
bound
mov
jo
packsswb
ret
jae
xor
dec
ja
ja
loope
std
push
ret
pop
mov
mov
ja
add
mov
pop
xchg
cwtl
sbb
xor
popf
dec
xchg
xchg
rclb
fistpl
push
mov
cmp
dec
imul
test
popf
ljmp
stos
cmc
sbb
cwtl
pop
test
mov
out
ss
jo
ds
mov
add
xor
stos
int3
test
movsl
push
or
fldcw
fsub
aam
mov
and
daa
or
jnp
js
mov
sub
aas
stos
shr
jmp
and
shl
mov
cmp
jno
add
mov
je
icebp
xor
dec
lods
testb
mov
push
mov
add
inc
jno
xor
orb
xchg
jge
push
pop
test
jg
lods
stc
or
mov
cli
xchg
out
cmp
pop
cli
and
dec
pop
fldt
mov
or
add
add
jge
jl
movsl
push
push
hlt
mov
push
push
lret
movsl
sbb
push
cmp
cmpsl
xchg
mov
mov
hlt
pop
pop
jo
or
pop
ret
dec
rcrb
jl
in
mov
jbe
and
and
mov
xchg
push
subb
mov
iret
test
lods
loopne
mov
inc
or
je
clc
cmp
mov
push
mov
ljmp
add
les
push
pop
jmp
add
out
fcmovb
xlat
arpl
push
xchg
mov
sub
and
and
popf
leave
pop
or
loope
jmp
pop
push
push
movsl
movsb
loop
push
call
enter
out
sbb
imull
test
rcrb
addr16
push
mov
popf
lcall
or
cmpsl
fdivrl
inc
mov
push
xor
add
fbstp
repz
mov
rorb
pop
mov
push
push
pop
jge
adc
jbe
in
fwait
outsl
cmpb
subb
mov
add
popf
daa
jmp
or
jp
int
sbb
adc
add
jno
pop
xor
mov
cmp
lret
and
dec
ja
or
xchg
push
add
mov
or
popf
fstps
push
add
jne
testl
lods
mov
call
adc
shll
repnz
shrl
jge
push
sub
cwtl
add
loop
xchg
or
xlat
sbb
and
add
movsb
add
jmp
mov
add
or
cmp
clc
fucom
popa
and
pop
pmaxub
mov
scas
int3
loopne
lods
out
and
or
pop
ja
mov
xor
xor
sub
shlb
repz
jae
mov
cmp
xchg
cmpsb
push
rclb
push
xchg
inc
add
jb
mov
add
movsl
imul
mov
pop
add
into
shlb
clc
or
mov
push
push
enter
pop
mov
dec
cmp
and
lods
sbb
icebp
pop
into
push
ja
or
outsl
cltd
mov
pop
movsl
int
dec
pop
loope
add
add
shl
push
add
movsl
out
mov
loop
roll
aaa
shlb
popf
sti
fimuls
xor
inc
add
inc
dec
pop
lret
add
out
xchg
cmp
maxps
lock
inc
in
push
nop
mov
cmovnp
popl
in
xchg
aaa
adc
sub
std
push
ret
add
lretw
sub
add
mov
add
fs
add
fcomip
push
jge
cmpl
adc
cs
out
sbb
test
pop
leave
aas
add
cltd
popf
jle
add
xchg
hlt
jbe
push
push
cld
leave
jg
pusha
add
jmp
add
cmc
or
sahf
or
pop
jg
mov
mov
out
and
ficoml
test
incb
das
outsl
mov
in
test
stc
ja
jle
xchg
and
ljmp
inc
mov
xchg
add
mov
aas
xchg
rcrb
sbb
dec
cmpsb
nop
mov
sub
cmp
xor
popf
into
xor
pop
xor
cmp
data16
loop
movb
and
add
xor
arpl
movsl
and
jmp
in
addr16
inc
jp
mov
movsl
stos
mov
jle
and
add
sbb
xor
xor
mov
cmpsb
out
add
sbb
pop
jge
test
sub
cli
lods
xchg
iret
dec
negl
pop
pusha
jecxz
clc
adc
shrb
mov
fsubs
mov
pop
test
add
clc
xchg
sar
call
outsl
cs
push
jbe
mov
js
xchg
push
and
add
bound
pop
xchg
scas
or
jle
add
xchg
testb
xchg
andb
mov
test
ret
add
cmp
test
inc
scas
sbb
add
scas
adc
xor
pop
or
and
sub
aam
stos
add
daa
mov
cmpsl
data16
and
add
mov
lret
mov
in
adc
stc
jno
test
test
cmpl
test
rcll
aas
push
inc
nop
pop
and
aam
psubw
xor
jnp
popf
es
add
jge
loop
sti
das
insb
or
dec
push
sub
movsb
jp
jb
fisttps
adcb
add
ror
cltd
scas
ret
pop
subb
andb
cli
add
rorb
dec
incb
loopne
fisubl
add
add
cmpsl
dec
std
jns
mov
lea
mov
mov
xchg
sub
xchg
cmp
add
insb
lock
cmp
aas
adc
mov
orl
loopne
add
mov
loop
repz
add
dec
adc
cmp
out
push
stos
repnz
sti
add
aam
mov
mov
clc
rcll
and
testl
cmc
js
and
hlt
push
push
mov
sti
sbb
adc
jae
inc
clc
les
adc
fnstenv
add
dec
add
nop
stos
mov
bound
outsl
jg
jmp
xor
bound
fcomps
add
adc
cmc
clc
jbe
leave
jo
and
sbb
dec
icebp
fiaddl
lret
test
pop
sti
lds
jl
add
or
sub
xchg
out
mov
mov
mov
icebp
dec
xchg
pusha
in
mov
cwtl
or
jne
fldenv
cli
pop
add
pop
rclb
inc
push
cld
add
lret
js
mov
sbb
mov
xor
outsl
mov
lods
out
scas
call
or
cs
dec
cld
push
icebp
aas
add
outsl
sub
mov
jae
jmp
add
cmp
add
inc
add
jne
jbe
icebp
cmpl
adc
int
mov
fidivrs
scas
cmpsl
fs
cmp
shrl
sub
or
test
push
and
push
imul
jp
popa
add
xor
add
and
iret
testl
jmp
push
sub
cmpsb
test
jno
add
and
push
out
push
jo
or
jns
add
popf
mov
int
cmpsl
in
invlpg
pop
gs
sbb
lret
inc
cltd
and
loopne
sbb
or
gs
xor
sub
scas
mov
add
call
movsl
cmp
iret
mov
mov
or
push
mov
pop
push
add
sub
pop
or
loopne
jb
or
rorl
sub
das
add
cmp
test
pop
cmp
fidivrs
out
bound
push
mov
fadds
dec
filds
int3
int
shl
xchg
imul
loopne
aad
insl
add
jns
into
shll
adc
mov
pop
sbb
adc
sarl
stc
lds
clc
push
orb
ds
cmpl
flds
je
aam
scas
mov
mov
mov
or
adc
lods
mov
repz
inc
scas
rorb
loope
mov
inc
inc
pop
pop
cmp
push
push
fmull
adc
mov
cli
sbb
add
aaa
frstor
inc
mov
test
mov
fwait
and
stos
or
mov
push
push
inc
inc
shll
sub
and
pop
aaa
sub
inc
fwait
jecxz
popf
movlhps
sbb
or
xor
inc
pusha
pop
es
pop
or
mov
add
inc
mov
mov
pushf
inc
cmp
jge
jp
sub
lcall
in
and
cmpb
sbb
or
jl
add
cmp
aas
or
ret
inc
les
es
jecxz
mov
addr16
sahf
or
arpl
push
xchg
mov
dec
add
pusha
test
inc
push
ja
add
sbb
mov
rolb
push
mov
add
mov
out
ljmp
sub
shlb
xchg
and
loopne
adc
add
and
jle
inc
xchg
xor
sub
test
movsl
lret
xor
jecxz
pop
xchg
push
add
daa
pop
dec
fisubs
cmpsb
jg
push
fptan
sbb
and
jbe
int3
add
xchg
cmp
gs
loopne
fadds
or
jg
nop
mov
and
adc
add
push
or
or
outsb
test
hlt
stos
adc
les
xlat
rcrb
fidivrs
shll
fsubrs
mov
jmp
sbb
dec
std
inc
sub
add
push
adc
loopne
add
bnd
insb
xor
inc
add
ja
lcall
out
imul
xchg
push
xchg
sbb
icebp
lock
enter
or
adc
fsubl
add
inc
cmpsl
jns
sub
stos
sub
lds
and
mov
sbb
scas
sbb
add
hlt
xlat
out
lock
mov
mov
mov
shlb
and
aad
imul
push
and
and
or
lahf
cmpsb
ss
loop,pn
push
push
sar
stos
lret
mov
mov
enter
cmp
adc
push
mov
pop
inc
shl
add
lahf
inc
xor
add
sub
sbb
scas
push
pop
pop
xor
add
sub
add
push
mov
mov
xor
cmpsb
movsl
inc
add
mov
cwtl
je
loop
ret
push
xor
add
cli
sti
jl
mov
pcmpgtw
test
add
mov
notl
hlt
fsubl
sbb
cwtl
jns
in
aas
add
xor
dec
sub
nop
cmp
pop
rol
adc
sarb
push
add
sbb
jl
add
pop
mov
jns
inc
in
jmp
fsub
cmp
dec
adc
iret
sub
add
sub
fs
andl
and
add
fcmovne
sbb
jge
cmp
je
add
pop
aad
add
orl
add
jnp
push
stos
out
movsb
std
push
or
test
int3
fcmove
add
pop
xchg
scas
push
ret
loopne
adc
push
push
std
ficoml
nop
cmpsb
sub
mov
mov
dec
stos
jecxz
push
popf
cmc
push
inc
and
xor
ffreep
sub
xor
cli
adc
mov
push
jg
add
sub
arpl
test
rclb
add
int3
mov
xchg
sbb
xor
push
pusha
lods
test
cmp
mov
rolb
shrb
add
push
test
hlt
add
or
addr16
sti
lock
fisubs
or
xchg
mov
fmull
pusha
cltd
push
push
addb
inc
mov
clc
das
mov
and
outsb
push
add
sarl
cld
fsts
cmp
popa
push
adc
out
xlat
cmp
fbstp
pop
cmp
pop
lods
dec
mov
jno
cld
popa
push
je
faddl
rcrl
inc
leave
cmp
lods
in
mov
or
add
or
xchg
inc
les
and
sbb
popa
dec
pop
sti
add
cmpsl
xchg
pop
icebp
pushf
dec
and
test
loope
pop
mov
push
imul
subb
lods
adc
xchg
sub
outsb
test
std
pop
add
sub
ljmp
pusha
cmp
and
jmp
jmp
and
push
pushl
xchg
outsb
pop
cmp
rclb
push
scas
mov
test
mov
int
imul
add
sti
test
popf
aam
pop
aam
aam
enter
das
out
lahf
les
jae
lock
popf
ret
dec
sub
bound
stc
or
pushl
jo
jl
pop
call
icebp
cmovnp
cmp
pop
das
mov
mov
andnps
mov
lods
loope
into
push
xor
xchg
push
loopne
add
daa
mov
out
inc
test
jg
mov
sub
gs
fcoml
cli
out
pop
mov
sbb
call
pop
push
mov
push
sub
rcrb
add
mov
fldenv
jbe
rcrl
xor
add
pop
sub
test
pop
add
aaa
add
and
add
addb
dec
fs
xor
test
add
push
cmpsl
xchg
inc
in
adc
jmp
sub
aaa
xor
ljmp
dec
lods
hlt
mov
fidivrl
enter
sub
mov
lahf
push
add
cmc
call
jne
fdivrl
mov
dec
sub
cli
adc
rcll
cmp
add
dec
popf
scas
add
mov
xchg
or
mov
sub
shl
rcl
mov
jle
mov
daa
orb
push
inc
add
movsl
jb
lret
cmp
sub
shll
icebp
inc
mov
jg
jnp
push
add
das
add
cltd
add
clc
pushf
xchg
push
pop
mov
push
cmp
into
insb
pop
pop
cmpsl
adc
cs
adc
scas
into
cmp
push
sub
test
dec
mov
mov
sbb
xlat
sbb
inc
push
push
test
and
mov
mov
sbb
and
xor
in
push
fbld
cltd
lret
pop
cltd
mov
inc
ss
jnp
je
hlt
subl
lods
clc
mov
jmp
xor
sbb
add
xchg
xor
lcall
addl
and
fcmovbe
repnz
add
dec
mov
sbb
sub
mov
xchg
sarb
xchg
jbe
mov
pop
cmp
pop
add
add
popf
cmp
fwait
aad
inc
mov
cld
jle
sub
incl
out
popf
or
cmp
mov
adc
loopne
cs
lahf
adc
pop
xor
dec
fwait
or
jbe
shlb
sub
popf
out
pusha
and
adc
mov
mov
adc
jno
mov
test
pop
dec
sub
and
daa
nop
pusha
in
xchg
not
rol
jmp
push
xchg
cmpsb
rolb
add
daa
adc
scas
mov
sbb
mov
pusha
add
popa
ja
mov
out
cmpsl
jecxz
mov
push
sub
mov
loopne
and
daa
xor
bound
xchg
cmp
dec
jbe
aam
jp
sti
test
in
mulb
add
fsubrl
outsb
es
mov
mov
jle
cmp
xchg
fs
das
mov
jnp
fadds
lahf
les
por
cmpsl
push
fstpt
xor
pop
fwait
loope
pop
ret
push
jle
sub
or
hlt
std
mov
or
cmp
aam
and
xchg
pusha
int3
divb
int3
hlt
xchg
xchg
mov
clc
in
rol
and
imul
jne
mov
xor
enter
or
fiadds
mov
sub
int3
pop
mov
popf
mov
add
lods
and
mov
test
sahf
add
enter
pop
dec
int
lock
mov
sbb
popa
dec
cmp
push
aas
pop
mov
mov
xor
out
mov
iret
mov
aaa
ljmp
xor
jno
inc
mov
popa
dec
stc
mov
in
pop
fcoms
and
jecxz
out
lahf
mull
das
sti
mov
lahf
add
mov
push
ja
int
mov
cld
jmp
pushf
add
xor
mov
mov
xchg
jmp
add
testb
rclb
ret
add
test
xlat
inc
xor
fs
add
jnp
mov
dec
testl
aad
movsl
fs
xor
xchg
rcll
pop
jl
popf
dec
lods
daa
lods
push
mov
pop
push
fidivrs
mov
test
mov
pusha
or
in
or
fcoms
jno
pop
mov
pop
or
bound
pop
ja
push
mov
adc
popf
sahf
adc
nop
test
or
or
inc
push
cltd
adc
xchg
cmpsb
idiv
add
adc
nop
push
push
inc
inc
sbb
outsl
jge
ljmp
xchg
mov
cmp
push
sbb
clc
and
scas
cli
xor
iret
jae
add
inc
push
out
mov
lods
es
push
das
sahf
data16
or
push
sub
pop
test
lods
lcall
orb
jae
jae
mov
faddl
fidivs
jae
das
cmpsl
bound
push
dec
mov
mov
fdivl
das
inc
stc
add
sub
push
adc
int3
dec
es
test
push
aaa
add
aam
mov
stc
push
sub
movsb
add
test
push
mov
pop
repz
and
stc
cmp
out
loope
scas
sar
mov
jnp
xchg
dec
jmp
negb
pop
mov
stos
dec
clc
mov
sbb
dec
out
add
data16
rcrb
mov
and
add
test
jnp
loope
arpl
gs
bound
xchg
dec
iret
cmp
cmpsl
and
loopne,pn
cmp
pop
int3
xor
fnsave
cmpsb
stos
test
add
pop
in
sbb
xchg
add
xchg
out
jo
jnp
push
fucomi
clc
test
jg
jbe
sbb
mov
cmc
sub
ret
imul
imul
mov
mov
xor
aad
dec
pop
lcall
inc
add
jae
jb
cmpsb
pop
dec
mov
and
out
aaa
cltd
or
lock
lret
and
push
fucomp
or
mov
out
or
ja
adc
push
inc
and
ss
xchg
pop
and
pop
push
out
mov
ret
pusha
xor
dec
pop
add
fadd
es
push
add
dec
push
jno
jmp
sub
and
mov
mov
sub
push
mov
jmp
outsl
or
and
or
add
ss
popl
ds
aam
xor
nop
popa
and
cltd
or
add
sub
lods
lret
aad
or
inc
andl
add
sbb
lahf
sub
push
add
push
inc
mov
stos
jl
les
aaa
lcall
dec
add
arpl
or
mov
test
roll
test
sarl
enter
nop
adc
or
or
inc
adc
mov
sub
shll
mov
inc
adc
cmp
fincstp
cwtl
or
jl
pop
jns
mov
ret
shll
jnp
jo
scas
and
sub
outsb
dec
mov
pop
xchg
nop
jle
dec
xchg
push
sti
cmpsb
cmp
dec
enter
test
movsb
cld
push
mov
in
jns
fs
pop
test
test
pop
ljmp
cmp
push
jp
add
pushw
mov
outsb
lds
jmp
pop
sahf
out
test
or
es
lcall
pop
in
inc
add
ja
pusha
jne
lds
inc
loopne
into
mov
mov
jmp
and
or
ffreep
or
push
mov
sub
or
pop
arpl
loopne
repz
add
movsl
mov
dec
scas
addr16
cmpb
mov
xchg
mov
xchg
add
lock
push
fcomps
sahf
and
int
call
movsb
add
lods
pop
lock
mov
pop
and
push
ss
sub
or
fiaddl
popf
push
fldl
les
and
cmp
imul
add
movsl
icebp
sub
and
pop
add
in
pop
repnz
adc
add
push
addl
bound
sub
or
inc
jmp
mov
pop
stc
adc
mov
dec
arpl
inc
inc
scas
dec
hlt
pop
xor
add
out
mov
mov
test
add
popf
lea
add
movsl
lock
enter
adc
repz
ret
shll
mov
idiv
jmp
pop
inc
cli
xor
dec
insl
jne
adc
pop
or
popf
lds
jns
cmp
roll
nop
stc
js
xchg
push
les
outsl
xor
pop
mov
hlt
or
mov
push
and
add
jno
testb
push
outsl
shlb
cmp
ljmp
pusha
cmc
or
adc
adc
insb
sbb
lcall
fiadds
add
mov
sub
jg
mov
add
dec
pop
mov
iret
xchg
xor
loope
shrl
clc
fs
sti
xor
in
in
push
icebp
cmc
cmpsl
ror
and
stc
lcall
adc
pop
add
pop
add
into
imul
jmp
push
repz
pop
jmp
pusha
fnstenv
cld
fs
add
xchg
loopne
and
sbb
xlat
int3
shll
fiaddl
and
cmp
cltd
popf
aam
jmp
rcrb
in
mov
lds
int
or
add
sub
loop
jge
xchg
or
fsubs
mov
jp
mov
push
scas
cmc
cs
fdiv
mov
sub
mov
call
pop
xor
cmp
mov
fs
or
dec
jno
cmpsl
inc
adc
mov
sub
adc
pop
js
mov
add
cld
jbe
lods
cmp
dec
lods
add
adc
test
and
push
xchg
notb
mov
sbb
movsb
mov
shll
cmp
or
inc
and
loope
jne
sbb
pop
fistpll
jbe
push
mov
in
xor
iret
and
dec
nop
mov
cmpsb
add
inc
or
mov
add
inc
nop
test
clc
add
addb
pop
pop
adc
mov
push
out
inc
mov
nop
out
adc
out
mov
adc
rclb
jmp
xchg
sub
add
in
mov
pop
or
loopne
mov
xchg
addb
ret
ret
push
in
cltd
jl
pop
lret
push
pop
dec
cld
mulb
xor
sub
cli
and
repz
out
mov
cmp
out
fstps
add
adc
scas
lcall
sbb
out
rorb
cmp
daa
jbe,pt
testb
mov
into
pusha
addr16
push
sub
cmpsb
das
popf
sbb
popa
clc
cmc
push
fwait
mov
mov
jns
adc
cltd
sub
or
pop
fbstp
or
sub
das
sar
pop
scas
mov
mov
pop
push
add
sahf
je
loopne
push
les
push
push
ja
adc
inc
aas
xchg
mov
cmp
and
popf
dec
pop
cld
in
ffree
pop
mov
dec
repz
shrb
or
pop
cwtl
in
add
xor
stos
mov
sub
lea
cmp
sub
xchg
rcll
les
es
or
adc
jns
add
ret
lods
stc
ds
add
xchg
cltd
nop
mov
aad
mov
outsb
mov
fsubrs
mov
and
pop
je
imul
and
mov
jge
jns
xor
inc
insl
pop
decl
or
or
fldl
mov
imul
into
add
or
xlat
sbb
add
das
sub
xor
sbb
outsl
mov
cli
push
fs
pop
dec
adc
nop
aad
and
xor
push
or
ja
and
jns
decl
fucom
outsb
fisubrl
addb
mov
xchg
lods
or
pushf
clc
rorl
shlb
inc
shlb
jae
mov
data16
das
adc
jbe
cwtl
movsb
xchg
in
add
fidivrs
mov
sub
jge
test
les
push
pop
dec
add
cmp
mulb
sub
imul
adc
imul
jne
test
sbb
outsb
add
pop
mov
add
xor
push
adc
pop
and
jns
daa
call
aam
lock
xchg
daa
int
jle
daa
rcrb
push
repz
fmulp
into
jmp
push
cmp
jno
add
imul
pushf
gs
add
sbb
add
pop
mov
sub
dec
inc
adc
clc
jbe
insl
mov
in
pop
loope
les
cmp
clc
push
movsb
xchg
das
loope
mov
into
push
mov
inc
lret
or
lcall
xchg
int3
rcrl
sahf
pop
addb
testb
mov
mov
cmp
sub
les
xor
push
sub
push
pop
push
pop
pop
mov
jle
shrb
xor
jbe
add
xchg
cld
xchg
adc
sub
or
mov
add
jle
inc
adc
pop
and
add
mov
cmp
iret
xchg
fidivrs
pop
movsb
dec
adc
xor
mov
test
pop
xchg
iret
popa
mov
mov
jne
xor
inc
sub
mov
gs
or
rcrb
xchg
jno
xchg
out
jp
add
mov
jnp
sub
dec
test
divl
mov
stos
daa
mov
add
xchg
add
sbb
xlat
test
outsb
mov
push
aaa
cmp
jae
cmpsl
dec
or
test
adc
xchg
mov
xchg
lcall
mov
orl
sbb
dec
pop
nop
cli
repz
andb
cmc
daa
mov
sub
adc
inc
push
bnd
xor
push
je
aam
xor
mov
decb
xor
sub
int3
ficomps
mov
sub
sahf
subb
jbe
and
cltd
xor
outsb
fadds
fwait
in
orb
hlt
mov
add
and
shll
xchg
sbb
dec
mov
dec
dec
rorl
shlb
shlb
in
aam
and
mov
mov
fadds
xor
mov
xchg
sub
das
push
pusha
popf
push
out
out
add
push
sub
and
adc
pop
add
fs
adc
dec
cmp
inc
jb
add
subl
scas
sub
push
ljmp
imul
pop
lods
nop
in
pop
aas
fidivs
adc
sub
and
add
decb
roll
insl
movsb
jecxz
movsb
test
loope
sbb
sub
or
nop
push
mov
insl
pop
jecxz
lea
push
inc
sub
add
lahf
xor
test
mov
mov
pop
jp
add
and
push
aaa
xchg
cld
add
push
pop
pop
sarl
fdivs
and
aam
add
clc
pop
jmp
lock
fisubs
mov
ljmp
mov
add
mov
inc
or
push
sub
popf
push
or
push
adc
pushf
insb
mov
das
cmp
test
xchg
sti
xchg
mov
xchg
scas
inc
lahf
out
xchg
syscall
in
adc
fidivs
sti
repz
aaa
gs
jmp
int3
jo
insl
pop
sbb
movaps
arpl
imul
sub
inc
pop
mov
inc
incl
movsb
fsubrs
pop
pushf
mov
add
mov
fists
sbb
sub
popf
pop
cmp
or
xchg
add
mov
jmp
add
pop
and
aad
cli
cmp
xchg
scas
fwait
and
mul
mov
add
inc
pop
pusha
es
push
ljmp
mov
add
insb
push
sti
mov
pop
loop
dec
enter
stc
jmp
sub
jo
shlb
xchg
add
nop
sub
mov
imul
inc
popf
or
push
je
pusha
dec
mov
pop
mov
mov
adc
mov
jne
and
adc
mov
lods
stc
filds
cmp
je
cld
add
fisubrs
repnz
sub
and
or
fimull
outsl
jo
xchg
xor
pusha
or
adcl
pop
jmp
and
stc
jmp
ds
push
or
inc
xchg
notb
das
push
aaa
dec
add
iret
or
sti
dec
mov
mov
jno
or
pop
sub
insl
loopne
inc
mov
cwtl
sub
fidivrs
popf
push
dec
stc
inc
jnp
xchg
jmp
push
faddl
in
xchg
or
pop
fmull
jg
js
mov
or
int
sub
adc
inc
pop
stos
outsl
mov
sbb
mov
loop
andb
jmp
fwait
mov
popa
sub
xor
test
fnstcw
pop
fs
fisubs
sarb
mov
stos
or
imul
enter
dec
ret
inc
dec
not
mov
loope
aaa
push
xchg
testl
ds
sbb
pop
push
jmp
pop
push
call
aad
and
loope
mov
xor
popf
jno
repz
mov
add
fwait
jb
xor
adc
adc
push
xorb
sub
and
test
outsl
imul
in
push
jo
lahf
repz
subb
adc
sbb
xchg
pop
xchg
pavgw
mov
cs
or
push
dec
push
popf
sbb
movsl
push
das
outsb
jne
bound
popf
inc
sub
cld
push
das
dec
js
fists
adc
insb
lret
xorb
pop
mov
imull
rolb
adc
dec
jl
push
jp
dec
dec
icebp
jg
lahf
and
xchg
shlb
mov
mov
call
nop
je
add
adc
fsin
adc
push
sub
push
jno
in
fs
movsl
push
test
lock
add
cmp
or
add
pop
les
dec
sahf
adc
pop
add
mov
sub
fisubs
push
or
adc
mov
adc
fstl
xchg
lods
xor
jae
xor
mov
lds
mov
jge
add
sti
jp
mov
mov
push
vaddsubpd
test
push
int
loopne
pop
clc
xchg
cs
mov
cmp
fsubs
pop
bound
sti
xor
das
stc
mov
jne
mov
in
pop
das
add
insb
sbb
add
push
movsl
inc
pop
pop
add
std
add
js
inc
in
push
mov
xor
xor
int
loop
enter
ds
jns
addb
test
add
mov
push
es
int
sysret
jecxz
ja
flds
cs
lock
push
sbb
adc
daa
dec
add
repz
cmc
xchg
ljmp
dec
jmp
push
rcrl
les
mov
jle
leave
aad
adc
xchg
or
fistpl
sub
cmp
sbb
hlt
mov
sbb
and
dec
scas
add
cmc
push
mov
push
add
or
sub
dec
sub
sbb
or
fistps
shlb
out
add
das
outsb
aad
aad
or
xchg
dec
ljmp
icebp
mov
mov
jg
clc
enter
xor
hlt
push
and
and
cmp
push
sarb
outsl
incb
add
es
mov
mov
fcom
or
sub
dec
fcoms
sub
push
push
cmpsl
xchg
fidivrl
in
xchg
add
lea
mov
popf
adc
add
ss
mov
sbb
fsubs
pop
leave
xor
adc
push
hlt
push
add
imul
andl
pop
fwait
dec
orb
or
or
push
adc
mov
add
ja
iret
xchg
sbb
jno
icebp
sub
jg
and
ficoms
sbb
mov
mov
cld
ficomps
sub
add
mov
repnz
add
loope
add
mov
or
or
in
lahf
loop
jne
xchg
adc
mov
leave
xchg
jnp
jo
xor
mov
pop
addl
je
popa
sub
mov
fs
or
push
pop
jl
es
lods
mov
pop
imulb
mov
das
hlt
test
mov
add
popf
or
xorb
push
mov
pop
jne
imul
adc
dec
call
cwtl
pop
cmp
bound
pop
pop
lahf
int3
enter
outsb
lods
das
sub
fwait
and
test
push
add
push
push
pop
jmp
fimuls
rolb
shrl
pop
jo
or
and
push
jbe
testb
fmull
repnz
and
add
insl
cwtl
lea
fnstenv
in
rcll
mov
mov
nop
mov
pop
movsb
scas
aam
mov
push
xchg
cltd
sbb
jmp
mov
xlat
stos
insb
fucomp
in
cli
daa
das
js
pop
adc
sbb
mov
pop
into
enter
mov
stos
or
add
mov
leave
in
push
or
mov
add
sti
es
imul
pop
and
leave
out
imul
mov
int
pop
aam
shrb
xchg
xchg
fistpl
pop
ja
dec
sub
nop
push
aaa
icebp
add
rorb
pop
dec
in
xor
dec
xor
or
or
xor
aas
addl
dec
cmpsb
pop
lcall
sbb
cli
lret
cwtl
pop
mov
adc
push
pop
shll
jle
mov
aas
cmpsl
mov
leave
adc
push
sbbl
call
jle
inc
pop
xlat
push
out
jg
lret
rclb
notl
lahf
push
je
pop
nop
int
loopne
mov
addr16
mov
sub
sbb
and
or
jge
adc
sbb
adc
xor
ret
push
icebp
lret
cwtl
icebp
addr16
push
mov
pop
lods
stos
into
dec
ficoms
push
sbb
mov
rorl
push
cs
mov
ljmp
cmp
cmpsl
add
lods
or
mov
add
push
call
jge
sbb
add
sub
cltd
xchg
lea
test
dec
inc
xchg
dec
jp
popf
xor
mov
popf
das
mov
add
shrl
sbb
in
addl
jmp
mov
inc
mov
out
and
out
dec
add
adc
mov
scas
push
cmp
push
pop
add
xor
enter
shrd
in
sub
xchg
test
leave
xor
mov
add
dec
add
xchg
mov
movsl
xchg
clc
and
test
mov
jae
jo
sub
das
test
or
and
adc
adc
mov
lea
stos
or
sarb
popa
jmp
push
xchg
cwtl
sub
ljmp
adc
jmp
mov
jo
mov
and
adc
mov
and
add
jne
mov
or
outsb
add
lock
push
mov
pop
pop
cld
stc
out
clc
lret
enter
testb
mov
adc
sarl
or
xor
sub
add
fstl
inc
add
dec
sub
roll
xchg
push
lahf
jno
pushf
pop
addr16
pop
dec
mov
cmp
or
rcrb
xchg
sti
mov
or
mov
pop
mov
cmpl
inc
add
dec
xorb
xlat
push
jno
popf
adc
inc
popa
ljmp
sarl
repz
mov
test
fcomps
pop
pusha
and
xor
clc
lock
rorb
or
out
inc
adc
mov
sub
leave
imul
sbb
or
loop
push
push
add
addr16
loope
pop
adc
hlt
mov
lret
fstpl
cmp
add
sbb
jle
jnp
add
add
mov
insb
mov
loope
clc
cmp
adc
xchg
xchg
in
das
aas
sub
dec
xchg
and
jmp
cltd
lds
lods
js
pusha
inc
faddl
ror
xchg
ss
inc
in
mov
scas
faddp
orb
xchg
data16
inc
push
data16
pop
add
and
mov
inc
xchg
dec
out
mov
lret
test
ja
xchg
jl
test
sahf
jle
dec
std
lea
pusha
repnz
dec
xor
mov
push
add
loop
sub
jge
or
and
jge
mov
push
cmc
cwtl
jg
xchg
push
xchg
data16
dec
dec
popa
enter
movl
popa
nop
stos
adc
lds
mov
call
add
loop
and
popa
add
clc
adc
dec
mov
repnz
aam
cltd
enter
add
push
xchg
lcall
mov
shl
jnp
xchg
add
pop
sbb
add
push
dec
sti
inc
cmc
xchg
sbb
jg
in
dec
mov
mov
or
ss
dec
inc
loop
push
adc
subl
mov
pop
int
sarb
push
addps
out
mov
lret
pop
in
sub
sbb
ss
es
std
fistl
inc
lock
xchg
dec
jne
dec
jmp
and
mov
jl
pusha
pop
pop
or
mov
push
xchg
or
jne
scas
in
test
aad
aad
in
sub
cs
and
adc
lcall
dec
xchg
mov
mov
jge
xorl
xchg
mov
xchg
popf
in
aad
or
shll
je
leave
xor
fnsave
pop
fsubrl
roll
xor
inc
mov
data16
loope
cmp
cs
or
lahf
jge
mov
xchg
rorb
repnz
push
lock
mov
sbb
xchg
mov
lods
adc
lahf
cmp
add
jbe
subb
outsb
hlt
lret
mov
pop
adcb
add
push
push
xchg
dec
imul
jne
idivl
and
scas
outsl
sbb
mov
and
les
xlat
jno
cmpsl
mov
sbb
pushf
and
mov
popa
lods
and
dec
or
test
push
add
mov
stc
cmp
mov
ljmp
daa
clc
rcrb
cmp
add
data16
lods
fiadds
cwtl
int
ja
loope
xchg
loope
sub
mov
pop
outsl
or
mov
dec
pusha
push
sar
xchg
jmp
mov
lods
inc
and
adc
pop
mov
pop
mov
cmp
lea
paddsw
mov
pop
xor
mov
xchg
jl
incb
xor
out
xor
adcb
cli
jle
cmp
dec
lret
cmp
mov
shll
dec
sarl
and
pop
sbb
push
cmp
out
push
pop
push
mov
mov
add
stos
inc
mov
mov
cli
cmp
ror
ljmp
jg
imul
aam
or
pop
fucomip
xor
fiaddl
popf
or
and
pop
cmp
mov
arpl
xor
int3
sahf
mov
push
jmp
sti
add
outsb
fidivs
ds
adc
mov
push
or
sahf
flds
ss
xor
add
mov
flds
fadds
jo
hlt
outsl
std
dec
inc
andl
adc
gs
push
enter
jge
mov
test
or
mov
je
push
inc
adc
push
pusha
xchg
fstps
xlat
mov
inc
aam
xchg
test
mov
mov
pusha
clc
popa
mov
imul
push
mov
add
je
jmp
push
sub
ss
cld
popa
mov
cld
imul
icebp
xor
test
cwtl
scas
cmp
add
ds
add
xchg
jmp
aaa
iret
adc
nop
adc
lret
mov
aam
xor
adc
mov
xchg
stos
push
mov
add
mov
mov
je
adcl
roll
pop
xchg
les
pop
add
jnp
mov
addb
or
or
aaa
into
mov
or
inc
mov
adc
mov
loopne
in
and
mov
cmp
pop
ss
in
sti
rclb
call
xchg
push
popf
insb
lods
jg
jo
lods
fwait
sbb
ljmp
add
mov
lret
es
adcb
push
adc
icebp
repnz
xor
mov
jne
nop
cmpsl
xor
aaa
inc
add
mov
sub
mov
add
pop
adc
or
xor
add
rcrl
mov
pop
and
repnz
int3
lds
addl
mov
cmpsl
lahf
sub
jne
lock
mov
in
mov
and
cs
movsl
stos
push
push
adc
jmp
idivl
and
test
mov
dec
push
xor
push
iret
mov
and
sub
in
add
inc
xlat
arpl
clc
mov
mov
testb
adc
dec
enter
xchg
loopne
lods
repz
fcoms
dec
add
dec
xchg
aas
pop
shrb
and
push
test
adcb
das
rcrl
add
in
fchs
dec
push
pusha
das
dec
push
sub
jge
cmp
and
mov
jnp
stc
jmp
pusha
gs
test
test
push
xchg
movsl
mov
mov
ret
jo
ja
add
dec
fucomip
cwtd
cmp
hlt
pop
std
add
and
adc
mov
add
sbb
pop
mov
sub
and
rolb
sbb
or
pop
int3
dec
add
dec
scas
aam
mov
call
ja
jg
inc
addr16
repz
pop
xchg
push
mov
xor
prefetchwt1
gs
add
out
stos
dec
rcrl
mov
or
add
jmp
cli
sbb
lds
int
cmpb
mov
not
push
loop
sub
pop
das
sub
and
inc
into
pop
jno
ret
movsl
mov
popa
xor
inc
sbb
popf
mov
push
pushf
pop
mov
gs
jbe
lds
add
addl
sub
dec
lock
testl
jl
xor
push
cltd
int
loopne
mov
adc
dec
mov
cs
xor
pushf
add
fimull
push
mov
shll
gs
mov
in
outsb
ficoms
ljmp
cld
jae
jl
cli
dec
mov
and
xor
ss
sbb
test
daa
shll
fidivl
cld
dec
mov
adc
daa
incb
xor
push
inc
sbb
int3
xor
adc
stos
jle
icebp
or
lods
pop
mov
sub
mov
aad
pop
dec
push
out
adc
faddl
mov
push
or
mov
pop
orb
pop
adc
popa
imul
outsl
mov
mov
mov
mov
dec
scas
add
add
imul
add
out
out
lcall
outsb
xchg
add
cmp
test
or
mov
adc
ret
imul
mov
dec
sub
mul
roll
loopne
dec
fisubrs
jbe
gs
fidivrl
add
sub
pop
xor
mov
rcrl
sbb
clc
mov
shl
pop
sti
aas
sbb
int3
inc
testl
jle
and
iret
and
or
mov
sub
inc
mov
lock
jnp
scas
cltd
fcompl
sbb
ds
pop
push
push
mov
pop
lock
mov
test
ffreep
iret
xchg
dec
das
xor
and
pop
xor
out
adc
daa
test
jne
ss
mov
mov
enter
add
jl
xchg
or
test
or
scas
fwait
cmp
hlt
or
fisubl
aaa
sti
mov
mov
add
sbb
xchg
scas
pop
mov
loop
fnstenv
mov
or
jno
push
adc
imul
add
sbb
jp
dec
adc
lret
je
idiv
scas
push
push
ljmp
test
and
push
leave
mov
push
or
cwtl
scas
and
and
add
mov
mov
mov
leave
inc
test
rorb
iret
and
push
cmovno
jp
int3
sbb
nop
mov
rol
push
add
jne
ss
dec
push
outsl
mov
out
arpl
int
ja
sbb
dec
add
inc
stos
test
mov
lods
lds
mov
sub
sub
in
push
ss
push
or
decb
cwtl
pop
push
pop
in
popa
push
xchg
fidivl
rcrl
adc
jp
lds
mov
add
inc
imul
add
push
loope
mov
hlt
ret
les
lock
movsl
loopne
nop
scas
fwait
add
xor
sarl
popa
popa
dec
clc
sahf
mov
sbb
cld
pusha
test
push
in
xchg
dec
pop
and
sub
adc
in
add
inc
and
movsl
push
dec
mov
mov
push
dec
test
loope
pop
pop
lcall
xor
decl
ja
mov
lods
push
and
adc
stos
fs
test
and
push
loopne
lea
adc
decb
lret
sbb
icebp
out
cmp
and
inc
cltd
pop
add
cmp
fidivs
pop
cs
pop
push
or
popf
stc
push
rcll
and
add
repnz
xlat
mov
dec
pop
sub
sarb
out
lcall
mov
or
out
lret
int3
jno
cmp
jno
mov
popf
sbb
mov
mov
in
jp
imul
je
fiadds
push
jg
mov
cmp
and
aaa
out
add
jecxz
and
in
pop
in
orb
aad
mov
sub
mov
negl
movsl
in
aaa
cmp
leave
notb
push
push
loopne
pop
jle
xchg
jmp
mov
and
push
sub
clc
jns
sbb
test
rcr
pop
test
test
addb
and
adc
sub
int
sbb
sub
jae
push
pop
jo
sti
or
sbb
leave
movsl
add
lods
into
pusha
mov
addb
mov
mov
mov
add
mov
clc
add
inc
push
xor
add
inc
push
jle
push
pop
pop
xchg
push
push
cmp
sub
lret
mov
nop
shl
je
adc
sub
shl
insl
xchg
jg
loope
mov
adc
add
cmp
cmp
sub
add
sub
sub
pop
xchg
push
pop
shlb
adc
push
mov
loopne
repnz
test
and
ret
mov
pop
popf
jmp
mov
mov
add
bound
imul
pop
fistps
imul
xor
or
test
add
mov
sti
ds
in
add
stc
pop
mov
mov
mov
pop
popf
add
mov
sub
inc
add
and
mov
add
scas
mov
cmc
aad
adc
ja
mov
testb
inc
stos
sbb
lret
popa
xor
jo
ljmp
idivl
mov
faddl
sub
ret
pop
dec
inc
add
jle
sti
out
lock
fwait
out
movsl
push
pop
jns
cmp
gs
sbb
or
add
out
pop
inc
mov
mov
jp
sub
test
cli
outsb
int
jnp
das
ret
flds
push
push
pop
pop
cmp
repz
mov
pop
je
mov
sub
fldl
int3
jo
mov
and
mov
mov
fnstcw
outsl
test
loope
ja
sbb
cmp
mov
fidivrl
mov
dec
adc
test
and
ja
fwait
push
cmp
and
lahf
rorl
dec
jle
add
mov
cmp
sti
sub
loope
cmp
cs
dec
xchg
je
dec
jmp
aas
enter
sub
ret
jmp
jp
aad
and
or
lods
aaa
dec
mov
xchg
je
not
clc
push
mov
push
mov
push
jmp
xchg
addb
jle
addr16
data16
cmpsl
add
or
outsb
leave
insl
jmp
mov
rcll
pop
dec
incl
dec
shrb
and
sub
test
cmp
add
lds
mov
inc
or
mov
lret
aas
jg
js
sbb
test
pop
inc
sti
push
pop
adc
lea
sub
js
push
mov
jle
cmp
cwtl
stos
in
or
push
inc
jle
into
cmp
cmpsl
aad
add
stc
cs
pop
push
add
pop
dec
mov
push
xor
call
ds
lcall
fdivrl
cld
pop
mov
sub
add
mov
dec
mov
insl
int
add
jo
push
pop
ja
push
repnz
rol
inc
xor
lock
jae
clc
inc
cmp
sahf
mov
test
sub
data16
iret
cmp
pusha
call
xchg
cmp
enter
jnp
test
mov
fwait
fs
les
sti
mov
test
mov
xchg
insb
pop
adc
ljmp
rclb
daa
or
mov
test
leave
mov
xchg
mov
cwtl
mov
lea
add
es
loop
lock
fcompl
jmp
pusha
xchg
sub
push
pop
test
xchg
movsb
xchg
cli
inc
push
mov
pop
out
cwtl
mov
out
das
sti
aad
scas
mov
bound
inc
insb
cltd
push
decl
test
cmp
dec
inc
push
add
addr16
cmpsl
jns
or
popf
mov
fs
das
insl
xlat
jge
cli
ljmp
or
orb
jnp
jp
out
sbb
pop
out
mov
add
adc
mov
popf
sbb
push
cmc
stos
insl
dec
and
sub
shrl
dec
xchg
ret
jg
mov
fnsave
ret
jne
mov
sub
mov
fisttps
inc
sti
into
loopne
mov
xchg
jle
pusha
out
sbb
out
xchg
jbe
jbe
xor
repnz
jge
adc
dec
mov
std
and
sub
nop
fistpll
mov
daa
pop
add
out
add
bound
mov
in
cmp
xor
mov
xchg
pusha
orb
sbb
push
and
and
mov
fstl
jg
mov
sub
fdivp
add
mov
out
pusha
int
rcr
in
xlat
adc
es
cmp
or
adc
xor
mov
xchg
movsl
loop
pop
sub
add
mov
cmp
add
pop
xchg
add
pop
pop
cmpsb
adc
outsb
fdivrs
and
ret
push
test
popl
mov
jae
add
ds
push
pusha
popf
fnsave
call
add
inc
inc
arpl
pop
dec
xchg
popa
pop
mov
sub
call
add
js,pn
push
call
mov
pop
pop
out
inc
adc
aas
fcoms
or
in
jne
and
pop
jb
or
pop
cmp
int
push
pusha
or
dec
call
add
mov
xchg
jmp
jb
xchg
jnp
test
jecxz
int
mov
sahf
dec
nop
leave
add
mov
lods
or
jl
out
dec
adc
sub
mov
fstps
fsubrl
test
jle
hlt
sbb
sub
push
test
clc
push
sbb
push
fwait
in
adc
push
and
mov
sbb
jne
imul
mov
dec
daa
fstpt
adc
pusha
mov
cmp
and
mov
enter
adc
adc
faddl
aas
gs
jmp
jne
inc
push
add
cmp
cmp
push
push
mov
fdivs
add
mov
pop
in
or
outsb
pop
aad
cld
xor
mov
cltd
popf
jge
inc
push
push
lahf
fdiv
pop
xchg
push
add
testb
sub
mov
mov
jb
pop
add
mov
insl
xchg
outsl
inc
hlt
add
add
aaa
push
jae
jl
mov
push
test
imulb
jg
cmp
imul
add
push
xor
call
mov
pop
sbb
dec
jo
xor
inc
adc
aas
dec
pop
cmp
xor
pusha
push
sub
pop
test
mov
shrb
stos
mov
and
pop
nop
mov
shlb
daa
pop
push
pop
dec
movsl
std
xchg
mov
in
nop
pop
push
mov
adc
add
jne
lods
inc
test
push
mov
mov
pop
sub
insb
xor
or
insl
jb
mov
pop
sbb
jo
mov
fwait
movsb
shl
js
hlt
add
cmp
ret
dec
mov
imul
cmc
sub
mov
add
in
dec
cmp
imul
fcoms
mov
or
je
jmp
push
inc
movsl
call
scas
ficoml
stos
mov
gs
sbb
push
sbb
pop
clc
mov
adc
jge
xchg
jmp
jl
fs
notl
jne
xor
hlt
add
xchg
pop
mov
pop
and
mov
cmp
repz
xchg
sti
sarw
adc
cmp
add
pop
lea
pop
push
cwtl
and
pop
repnz
je
rolb
test
dec
scas
or
ret
imul
xchg
adc
pop
repnz
or
mov
out
mov
adc
xchg
and
out
cwtl
loope
pop
xor
push
stc
lea
lds
outsb
ljmp
push
mov
movsl
and
imul
sbb
dec
scas
lret
add
sub
sub
fists
cltd
jbe
fldcw
leave
daa
out
pop
les
movsl
and
add
ficoml
add
popa
xchg
xchg
sub
or
push
push
fbstp
dec
sub
mov
and
sub
jne
mov
mov
add
popa
mov
outsb
fnstsw
mov
mov
jbe
push
subb
dec
lret
mov
jno
pop
sbb
imul
cld
jbe
push
mov
pop
sub
or
sbbb
aaa
js
jmp
jge
add
aas
dec
add
pop
rol
mov
cmp
mov
fstl
incl
xor
pop
dec
fsubs
lahf
add
xchg
mov
xor
push
icebp
mov
jmp
dec
testb
lods
jge
add
incb
dec
inc
cltd
shl
imul
out
lods
push
mov
adc
ss
pop
arpl
inc
lahf
xor
shll
jb
push
popa
dec
mov
shlb
sti
dec
push
xor
fisubs
add
pusha
mov
cld
aam
dec
dec
mov
push
add
loopne
add
repnz
add
xor
jle
aaa
test
pop
adc
sbb
ret
sub
mov
sub
add
sub
rol
in
cmp
das
mov
pop
xchg
out
xor
es
sbb
andb
stc
jbe
and
mov
cli
mov
add
loop
pop
add
push
jp
cmp
loop
inc
lret
adc
xor
scas
repz
sbb
or
ss
pop
sub
xor
stc
cld
cmp
push
xor
cltd
xor
dec
dec
xorl
or
test
adc
cmp
and
mov
add
jo
lret
inc
and
or
xor
cli
mov
inc
jecxz
adc
mov
ja
push
pop
cmp
iret
cmp
mov
sub
pop
push
mov
mov
add
sbb
sbb
or
aam
lahf
inc
push
fnsetpm(287
ja
sbb
and
sbb
mov
idivl
cmp
or
sub
push
and
or
sub
or
std
inc
xor
jecxz
sub
in
daa
cmp
test
pop
idivl
cmp
add
movsl
pop
testl
push
divb
subl
or
inc
adc
dec
out
or
add
out
push
repnz
cld
adcb
xlat
xor
xchg
add
push
ds
jbe
shrl
andb
incl
out
enter
call
add
cmp
pop
add
dec
push
inc
pushf
orb
sarl
xchg
movups
fcmovnbe
pop
mov
cli
filds
push
iret
xor
adc
sbb
cmp
pop
movsb
in
rolb
cwtl
aaa
or
add
add
out
adc
outsl
push
mov
not
push
sub
add
pop
adcl
inc
test
mov
push
jge
sub
test
adc
mov
loopne
xlat
and
cmpb
cmp
add
push
sub
test
jno
movsl
cmp
in
rorb
push
mov
mov
pop
movsb
cmp
inc
outsb
loop
or
and
inc
add
loopne
mov
add
mov
divl
push
in
lea
push
add
inc
test
test
sbb
std
sub
cmpsb
adc
fisubl
leave
and
nop
mov
ret
xor
mov
cld
add
lret
mov
adc
movsb
loope
or
sbb
in
sbb
inc
xor
mov
test
add
icebp
jecxz
or
adc
call
push
fwait
add
inc
push
mov
aas
out
or
mov
lods
sub
cmp
xchg
sbb
cmp
xchg
dec
mov
jbe
pop
push
nop
iret
dec
nop
out
or
lock
lock
in
xor
xor
mov
out
jle
in
pusha
xchg
nop
mov
scas
push
sbb
or
pop
mov
xor
xor
xchg
dec
arpl
cmpb
add
loop
push
add
pop
xor
add
lcall
arpl
and
popf
add
test
mov
dec
ja
and
or
pop
adc
add
aas
pop
mov
inc
enter
ljmp
inc
das
in
push
out
push
dec
enter
xor
add
shl
inc
lcall
cmp
imul
and
mov
mov
jmp
or
and
repz
push
mov
xor
pop
push
popf
inc
add
jecxz
mov
push
sbb
sub
shll
mov
sbb
inc
and
sub
mov
out
popf
in
add
mov
or
mov
push
aaa
inc
mov
and
fs
mov
cwtl
sbbb
mov
sub
add
mov
loope
pop
loope
add
mov
xorb
adc
xor
in
xchg
xor
ret
hlt
xchg
pop
dec
xchg
insl
lcall
add
stc
int
and
or
jmp
add
add
dec
xchg
stc
and
mov
notb
mov
mov
or
js
in
lds
push
mov
in
add
xor
lds
or
jb
mov
in
in
cwtl
fldt
or
les
add
jl
loop
loopne
sbb
ficompl
add
and
pop
ds
sub
dec
into
jae
out
sbb
xchg
fiaddl
jmp
pusha
xor
sbb
xlat
add
jae
add
flds
dec
std
mov
mov
outsl
mov
sbb
xchg
std
or
fbld
in
add
dec
lret
sub
sub
mov
jns
sbb
jbe
mov
pop
jmpw
xchg
fst
and
aaa
or
jge
push
mov
stc
add
cld
pop
xchg
pop
or
add
dec
mov
out
in
inc
xor
addb
test
jmp
xchg
inc
fcomps
add
movsb
sahf
jbe
sbb
in
negb
mov
insl
stc
add
add
icebp
in
lahf
dec
cli
and
adc
xor
subb
sbb
jne
add
popl
add
and
idiv
dec
rclb
cwtl
lock
or
adc
in
les
jb
adc
mov
mov
add
fmull
jp
sarb
cmp
mov
add
lds
add
faddl
jbe
scas
mov
xor
negl
popa
xor
loope
in
add
jb
dec
movd
sbb
loope
mov
jo
push
add
inc
movsl
sub
in
ficomps
mov
jno
cmpsl
push
aas
lds
repnz
mov
adc
stos
je
popa
fsubl
jne
cmp
xor
inc
mov
cwtl
or
cmpsb
push
xchg
push
insl
stc
fmuls
lret
add
mov
in
shlb
sbb
pop
out
add
and
jne
push
lock
inc
adc
loopne
add
sbb
xor
pop
cltd
cmpb
xchg
mov
push
fsts
lret
loopne
subl
adc
inc
inc
jbe
into
mov
test
lods
repnz
rolb
sub
cmp
dec
mov
sbb
pop
insb
sub
movsl
add
xchg
jns
push
sti
inc
add
pop
test
sahf
pop
mov
cmc
sub
xchg
adc
mov
lea
incl
lcall
sbb
je
out
sub
aam
bound
and
xchg
cmp
test
lods
sbb
out
add
xchg
pop
aas
lock
sub
popf
fistps
aas
jno
cmpl
movb
xor
mov
mov
adc
das
cmp
push
push
inc
add
sbb
add
xor
pusha
mov
ljmp
ror
cmpsb
inc
rorb
xchg
je
push
xorl
cli
fisubl
xchg
xor
aam
negb
jmp
mov
add
jno
dec
outsb
test
pushf
rcr
ret
sbbl
cmp
mov
or
add
mov
imul
push
add
add
stc
mov
cmp
add
mov
cmp
into
sub
push
dec
negl
push
xor
test
aam
cmp
cwtl
inc
faddl
push
xchg
jl
ret
stos
inc
lret
sbb
sub
fsubrs
push
adc
lods
inc
cmp
ret
rolb
xchg
push
movsl
shrb
jo
or
push
and
jnp,pn
cmp
cmpsb
or
pop
js
insb
cmp
add
movsl
inc
scas
cmc
jge
or
lock
xor
jae
ret
inc
xor
add
imul
pop
clc
shll
xchg
inc
add
pusha
fidivrl
add
lcall
push
test
jnp
add
dec
mov
add
ret
xlat
pusha
daa
subl
daa
jb
loop
add
outsb
repz
dec
add
push
xor
adc
out
cmp
mov
jge
lock
mov
arpl
sti
push
dec
mov
lock
movsl
daa
cmp
popf
daa
rcl
add
push
pushf
pop
jmp
lock
bnd
arpl
inc
mov
xor
inc
andl
mov
pusha
xchg
scas
sub
mov
or
dec
stos
loope
les
inc
jo
dec
mov
add
imul
ror
stos
jno
mov
inc
addl
cmp
xor
cwtl
enter
cltd
ds
dec
mov
sub
pop
inc
jle
sub
das
stos
dec
push
cmpb
iret
mov
rolb
repnz
mov
aam
add
or
mov
mov
cmpsl
outsb
dec
mov
jne
mov
add
mov
adc
aad
xorl
inc
sbb
and
cmpsl
loopne
inc
inc
add
push
xlat
jae
dec
or
mov
ljmp
adc
jmp
pop
fildl
xchg
mov
hlt
cltd
add
sub
or
mov
adc
loope
cmp
pop
add
dec
in
push
mov
in
inc
add
xor
iret
icebp
or
or
add
mov
into
nop
fucom
add
sbb
dec
adc
sub
cmc
inc
pusha
and
xor
mov
push
mov
sbb
dec
xor
sbb
fwait
pusha
in
xor
adc
inc
add
loop
lods
out
sub
dec
jnp
cmpsl
xor
pop
loope
jno
add
in
push
sbbl
adc
lds
add
inc
cmp
clc
jmp
inc
mov
dec
es
add
fisttpll
jns
inc
cmp
lea
inc
push
sti
cwtl
pop
push
mov
xchg
mov
xor
ret
sahf
shll
inc
xor
cwtl
push
push
mov
cmp
scas
xor
divb
sbb
sahf
adc
adc
stos
mov
add
orl
out
push
xor
lods
sub
xchg
or
xor
mov
xchg
test
divb
stc
cmp
push
ret
or
ret
xor
rcll
arpl
inc
xor
loopne
inc
es
in
cmp
cli
ja
push
loopne
adc
jge
cld
add
orb
add
add
loope
pop
pusha
cmp
es
rcll
jle
fmull
sbb
sbb
incb
arpl
inc
cmp
dec
lods
dec
add
fisttps
push
adcl
inc
add
cs
addr16
cmp
or
push
push
popf
lods
ja
sbb
pusha
or
iret
xor
pop
sbb
out
jae
das
inc
and
dec
insb
int3
les
xlat
daa
adc
mov
jmp
imul
xor
jno
outsb
add
sahf
lods
add
leave
arpl
pusha
adc
fisttpl
pop
cmpsl
into
mov
je
xchg
jb
sub
pop
mov
loopne
push
mov
int3
subb
inc
call
inc
mov
out
daa
mov
add
pop
insl
inc
rcrb
leave
or
and
add
xlat
pusha
push
lods
adc
mov
fs
cs
fbld
imul
and
and
dec
lods
add
mov
sbb
ja
or
mov
cmpb
rcll
movsl
out
jecxz
add
or
or
sti
add
imul
xor
cmp
sbb
add
add
ficoml
enter
mov
or
jns
cwtl
xor
xchg
add
subl
add
adc
pushf
aas
pop
xor
pop
pushf
xchg
mov
fisttpll
add
and
gs
ret
mov
ja
push
out
inc
inc
mov
mov
mov
call
in
dec
cmpsb
sbb
je
aas
add
repnz
adc
or
sbb
mov
lods
push
cmp
dec
sbb
add
xorb
cmpsl
add
and
sub
jg
hlt
jno
flds
daa
add
divb
lcall
out
add
fisubrl
ja
mov
and
ss
lock
add
rolb
inc
push
mov
mov
cmc
fmull
repz
xchg
fidivl
add
iret
rcr
mov
call
in
imul
ret
sti
je
pop
or
jo
xor
and
rol
cmpsb
add
mov
cmp
into
xor
xchg
xor
aam
mov
fcmovnu
and
lea
or
adcl
cmpb
scas
jecxz
add
mov
sub
and
adc
dec
hlt
sbb
pushf
test
add
sub
mov
dec
mov
pop
mov
sub
push
xchg
cmp
loopne
ss
in
into
add
dec
imul
fiadds
inc
fwait
adc
add
add
jecxz
incb
pop
pushf
nopl
push
shlb
sub
inc
mov
add
test
cmpsl
mov
sar
add
xchg
adcb
or
int3
or
and
iret
jmp
and
test
add
mov
repnz
insl
cli
sbb
xchg
sub
cmp
xor
aad
fstp
mov
dec
xchg
and
add
mov
jb
mov
add
js
push
xor
rcrb
sub
mov
cmp
add
std
sbb
mov
and
cmp
out
xor
push
jb
out
xor
insb
sti
mov
test
aam
clc
repnz
xchg
inc
add
scas
sbb
adc
xchg
mov
cld
fs
movsb
jno
and
test
fdivrl
mov
mov
jmp
scas
aas
addr16
xchg
fcmovnu
ljmp
dec
movsb
aaa
dec
notl
out
mov
lock
xor
add
rcr
adc
add
popf
outsb
xor
pop
xlat
and
sub
push
pop
lahf
in
cmc
lret
jbe
sub
push
sub
sahf
pop
and
push
pop
fs
std
mov
ficoms
push
add
add
in
in
fldl
cli
test
sub
int3
xchg
and
add
mov
pusha
mov
sbb
test
or
mov
push
mov
sbb
add
jle
in
loop
inc
bound
add
loop
es
adc
std
dec
in
xchg
jo
sbb
pop
imul
nop
gs
push
stc
pop
cli
clc
cmp
cltd
push
sbb
call
add
popf
jg
test
adc
add
adc
mov
pusha
mov
jg
adc
cltd
dec
mov
cmpb
jle
in
add
js
call
or
jne,pt
andb
xchg
repnz
add
xor
movsb
cmp
jp
sub
cmp
addr16
jnp
mov
pushf
ret
push
adc
cmpb
syscall
test
cmp
cmpb
ret
clc
add
jle
push
and
jle
sub
sbb
xor
mov
xor
pop
imul
inc
inc
push
or
dec
sub
jle
cmp
and
add
add
or
dec
bndstx
shl
xor
jge
pop
sbb
lret
mov
add
iret
nop
lret
pusha
mov
cmpsb
lods
cmpsl
and
ret
rcr
icebp
enter
repz
rcrb
adc
cltd
adc
xchg
cmc
addr16
daa
mov
cmp
xchg
mov
push
sbbb
or
sbbl
cmp
cmc
sub
addl
adc
xchg
stos
stc
xchg
add
add
mov
mov
lods
pop
and
xchg
cmp
add
push
cmp
add
jbe
adc
lock
mov
push
scas
pop
mov
movl
mov
xor
jg
shlb
popa
subb
push
mov
cwtl
xchg
and
add
mov
subb
xchg
add
dec
and
sub
pop
push
out
movsb
add
jo
les
sbb
dec
lea
add
push
es
sbb
test
add
movsl
das
fcoml
or
add
or
push
or
sub
adc
mov
or
inc
push
jne
and
pop
and
and
and
repnz
and
nop
pusha
mov
sbb
push
lods
add
inc
sbb
add
fs
rcll
xor
dec
test
fldcw
pop
jns
sub
fwait
push
daa
clc
repz
imul
mov
int3
inc
popa
and
mov
cmpsb
into
jb
aaa
in
pusha
inc
push
sub
xchg
movsl
lds
add
sarb
jb
sbbb
add
mov
cmp
pop
pop
ret
int3
jnp
add
sti
lret
arpl
aaa
cmpsb
adc
push
add
pop
mov
jae
pop
sub
xchg
addb
add
add
xchg
in
hlt
xchg
add
lea
jle
add
cli
dec
roll
jo
out
aas
lods
rorl
fidivs
xor
cmp
sub
mov
shlb
jne
add
mov
fdivs
and
add
jl
push
fcompl
xor
push
push
repnz
jno
outsl
inc
mov
int
add
lret
sti
dec
lcall
and
loopne
pop
and
add
push
add
fwait
mov
fiadds
pushf
stos
fsubs
xor
adcb
outsl
dec
sub
dec
and
insl
add
dec
out
add
add
add
loopne
dec
or
scas
add
call
xchg
xchg
add
or
jecxz
lock
push
lock
clc
hlt
ds
sub
mov
add
outsl
xchg
insb
sub
mov
std
jecxz
add
bound
loopne
insl
add
mov
cmpsb
nop
cwtl
ja
add
out
mov
rolb
lahf
aam
pop
add
fistl
cmp
test
sub
stos
add
add
stc
push
sub
add
sbb
add
push
cmpsb
cmp
or
add
insl
and
sahf
fcoms
xchg
add
xchg
pop
jmp
mov
mov
push
repnz
add
nop
cmc
stos
shll
or
or
cmp
push
cmp
push
les
jns
test
test
xchg
ret
jp
add
or
mov
or
sub
jae
add
fbstp
and
adcb
mull
add
mov
pop
bound
mov
mov
sub
sbb
cld
jle
add
ficoms
aaa
add
fistl
jmp
iret
add
in
loopne
rcrl
ret
or
pushf
add
stc
mov
notb
stos
mov
pop
pop
cmp
mov
arpl
nop
test
push
cmpsl
cwtl
nop
add
sub
adc
and
ljmp
adc
add
cmp
sbb
dec
sub
add
out
iret
clc
sbb
insl
sub
hlt
mov
mov
add
aaa
mul
insl
adc
add
jnp
xor
add
ficoml
inc
addl
xchg
lret
test
add
mov
aam
paddsb
lods
dec
jno
push
adc
shrb
call
dec
mov
pop
add
ja
dec
xchg
push
sub
aad
add
xchg
and
pop
push
jo
sub
add
or
scas
rcrb
add
movsl
adc
stos
pop
les
add
push
cwtl
pusha
jp
xor
scas
sub
add
mov
cld
xchg
and
pop
fucomip
xor
sbb
pop
jge
or
stc
xor
clc
lret
sbb
jg
shlb
je
je
dec
call
pop
lds
cs
mov
js
dec
repnz
out
jmp
lds
fwait
stos
push
ret
scas
mov
scas
sti
xchg
jae
pop
mov
nop
cld
sbb
insl
add
jp
pusha
ja
push
lfs
fbstp
push
push
into
cmpsl
fdivrl
xor
rcrb
pusha
mov
sarb
and
add
popf
adc
add
xor
rorb
fsubrs
sub
add
cmp
out
enter
cmp
outsl
nop
in
fsubr
lcall
push
mov
push
inc
movsb
fsubrs
jg
mov
in
repz
loop
jno
xchg
xchg
std
push
xchg
lods
jmp
enter
mov
and
add
int
fisubrl
jle
movntps
sarb
addr16
fidivs
subl
sarl
jno
shlb
sti
adc
add
repz
jl
add
jge
cmp
scas
andl
loopne
enter
add
hlt
call
dec
pusha
mov
or
cmp
insl
mov
rolb
testb
testb
jno
push
in
pop
sub
rcrb
mov
and
inc
addb
rcrl
mov
mov
mov
add
inc
out
push
into
imul
mov
push
cmc
jle
dec
insb
and
mov
jmp
out
loopne
hlt
fdivrs
xor
sbb
clc
xchg
jb
sbb
pop
inc
outsb
push
adc
jns
test
test
pop
xchg
push
add
stc
xorb
push
jbe
add
jmp
cmp
andl
dec
or
push
pop
sbb
fcmovne
dec
inc
xchg
icebp
jno
push
mov
movsb
pop
and
outsl
repnz
pusha
ss
sbb
fmuls
sub
cmp
fcoml
sbb
addr16
sti
dec
cltd
test
add
int3
cmpsl
push
cmp
push
inc
sub
lahf
or
jb
loopne
sti
add
iret
sbb
and
loopne
cmp
pushf
je
add
cmp
cmc
lret
jb
test
mov
mov
sbb
fwait
in
cmp
add
mov
push
dec
jmp
fldl
imul
inc
add
sbb
pushf
push
mov
xchg
cmpsl
sbb
ret
pushf
shrb
out
cmp
mov
push
mov
sub
xor
cmp
lahf
mov
add
loop
sarb
clc
add
and
or
scas
jae
getsec
sub
add
mov
mov
jg
push
add
sub
and
jbe
ret
push
fildl
lcall
push
add
aas
and
mov
pop
push
jne
push
dec
inc
mov
sbb
sarl
cli
xchg
pusha
movsb
cmp
ss
fiadds
js
jl
out
mov
mov
cwtl
dec
add
mov
xor
ljmp
add
jb
rorb
lret
mov
push
pop
add
dec
sarb
cs
sti
lret
arpl
and
je
pop
xchg
add
sahf
aad
xchg
push
cwtl
lahf
pop
ds
xchg
xchg
insb
mov
stc
loop
pop
fisubl
idivl
popf
adc
xor
xchg
pop
mov
loopne
and
fisttpll
push
push
cmp
push
lcallw
sub
push
nop
ja
jns
add
inc
xchg
les
jae
loope
sbb
in
loopne
mov
int
call
fisubl
movsb
mov
add
push
test
lret
and
lods
aaa
adc
push
mov
pusha
les
mov
add
xchg
and
loopne
push
add
mov
dec
mov
add
inc
add
mov
enter
add
xchg
add
mov
arpl
and
xchg
push
add
xchg
nop
cltd
mov
call
ss
or
or
xor
jne
add
enter
add
xchg
sbb
rcl
add
push
mov
stc
movsb
ret
out
and
jle
add
lods
mov
shl
sbb
lcall
push
add
inc
popa
push
jnp
add
xor
add
filds
gs
adc
std
add
xorl
insb
adc
adc
mov
add
push
or
dec
pusha
outsb
mov
mov
enter
inc
push
push
add
test
int3
pop
mov
pop
jge
adc
xchg
inc
cmpsb
add
jp
push
loopne
imulb
out
hlt
addl
stc
jge
iret
push
add
jl
cwtl
xchg
repnz
call
add
loopne
mov
mov
xchg
add
add
cmp
shll
addb
popf
jbe
jge
pop
loop
add
imulb
or
pop
enter
nop
stc
out
or
jb
mov
movsl
add
inc
int3
inc
iret
push
jnp
and
icebp
jecxz
push
in
push
and
push
in
aad
cwtl
test
arpl
pop
loopne
add
jp
test
sub
push
xchg
inc
lcall
push
scas
jno
add
imul
pop
xchg
mov
scas
seta
lds
movb
pusha
in
test
jl
int3
pop
test
hlt
bound
lret
shll
add
scas
arpl
data16
iret
subl
mov
pop
lock
add
xchg
pop
sarb
adc
loope
call
ja
inc
xchg
cmpsb
mov
int
cmpsl
add
adcl
dec
mov
sub
add
push
movsb
sub
pop
int
cmp
test
add
mov
inc
xchg
pushf
jge
mov
add
mov
add
xchg
push
dec
daa
cmp
push
push
test
add
in
fs
add
jl
lods
aas
out
testl
push
into
adc
sbb
xchg
out
and
sti
add
lock
fistl
inc
and
sub
add
in
xor
pop
pop
mov
dec
jns
imul
mov
inc
cmp
mov
add
js
inc
adc
out
dec
shll
stc
mov
or
int3
lea
mov
sbb
jg
add
outsb
in
dec
mov
cmp
and
xchg
and
push
ja
add
fwait
pop
les
lods
add
mov
or
and
add
enter
inc
mov
and
loopne
and
jb
adc
aam
in
loopne
sub
jns
push
add
sbb
sub
and
addl
xor
data16
test
pop
clc
add
jbe
push
add
mov
jecxz
add
in
and
into
out
cmp
ret
in
cmpsl
mov
adcl
dec
repnz
jno
enter
inc
add
xor
inc
fdivl
dec
mov
mov
cltd
lock
or
cmc
add
xor
fists
jne
mov
jo
mov
or
mov
add
je
adc
mov
dec
mov
mov
stos
in
jp
cmp
and
mov
xchg
pushf
add
insb
cmc
jno
inc
inc
add
int3
mov
in
add
mov
cmp
out
inc
jnp
mulb
jl
stos
repnz
and
dec
adc
push
cmp
sub
push
jo
cmp
xchg
sub
inc
cmp
lahf
scas
jmp
mov
ja
mov
lock
leave
repnz
add
cmp
dec
jmp
dec
bnd
add
jo
inc
ja
sub
add
into
mov
pop
out
negl
cwtl
push
dec
mov
jp
xor
jl
pop
mov
cmp
push
cwtl
pop
mov
decl
fwait
push
add
out
xor
add
cmc
push
push
repz
imul
mov
add
lret
clc
pushf
je
add
xchg
push
or
lds
add
mov
ret
mov
sub
adc
fcmovu
mov
je
push
jo
add
jb
sarl
mov
or
fisttpl
push
stos
ret
or
sub
pop
scas
add
loope
enter
xchg
jno
daa
add
fists
add
fcomps
mov
or
mov
shlb
les
mov
cld
arpl
push
xchg
inc
sbb
aaa
mov
mov
xlat
insl
mov
sub
pop
dec
icebp
ss
mov
andl
sbb
ja
hlt
orl
cmp
nop
fadds
push
gs
mov
jne
add
push
ret
aam
mov
push
lods
xchg
adc
ret
pushf
pusha
adc
iret
sti
lods
dec
inc
std
or
repz
ds
clc
or
adc
push
cmpsl
mov
loopne
sbb
jmp
in
adc
pop
mov
sti
push
mov
sub
andl
movl
push
inc
sbb
sbb
jne
push
add
add
cwtl
xor
mov
push
shlb
pop
mov
mov
cmp
inc
aas
mov
pop
xor
outsl
inc
add
pop
or
rclb
or
mov
push
mov
cmp
gs
loope
and
cli
dec
mov
scas
rorb
and
add
scas
lods
fstl
ds
push
xchg
push
daa
or
inc
cwtl
sbb
add
xchg
jp
std
jae
mov
push
shrb
jle
xchg
or
orb
push
pop
cwtl
les
daa
out
push
push
cmc
popf
enter
xor
dec
and
sub
mov
add
cmp
popa
scas
add
stc
jl
or
lods
gs
popf
mov
icebp
add
and
lahf
add
mov
lret
sti
pop
pop
aad
mov
daa
pushf
cmp
arpl
enter
jno
dec
aaa
jo
bsr
fisubrs
jns
add
and
inc
sub
subb
dec
imul
pop
in
roll
xchg
inc
pop
outsb
pop
jecxz
add
jne
nop
leave
jl
jmp
xlat
fucomp
sbb
and
and
sub
out
call
sbb
les
mov
lsl
inc
popf
into
cmpsl
xchg
jne
pop
push
mov
sbb
and
lock
mov
imul
pop
push
add
xchg
xor
aad
mov
andb
mov
dec
xchg
xor
gs
fucomp
add
shl
mov
shlb
js
sub
sub
scas
inc
add
mov
push
call
outsl
mov
add
add
and
call
addr16
fimull
mov
dec
add
mov
shlb
pop
cmp
adc
je
push
jb
test
lahf
cld
insl
jp
daa
aam
shlb
inc
outsl
adc
dec
into
mov
lret
mov
lret
xor
mov
mov
inc
arpl
mov
add
out
stos
pop
lock
cmp
test
repz
lock
cmpsb
mov
lock
std
xor
sbb
cmp
lret
inc
popf
adc
lods
cmpsl
dec
clc
add
pop
add
push
sarb
cmpsl
jl
jns
add
mov
jo
mov
xchg
mulb
nop
xchg
and
mov
insb
loopne
movsl
add
shrl
xor
sti
hlt
lret
or
xchg
aam
dec
push
xchg
xor
sub
add
push
adc
lock
rolb
add
frstor
ret
int3
jb
mov
mov
xchg
fisttpl
out
enter
cmp
dec
cmpsb
pop
call
js
call
movsb
jb
add
inc
stos
mov
arpl
shr
and
incl
out
and
add
lret
dec
lahf
mov
sahf
add
jmp
pop
dec
pusha
xchg
xchg
sub
lock
add
jo
mov
mov
add
and
test
imul
push
add
xor
jne
mov
enter
ss
lock
fwait
add
mov
sarb
out
mov
pop
adc
lret
shll
push
add
add
leave
pop
les
lods
inc
in
daa
xor
jg
fcmovnbe
mov
or
in
int3
mov
xor
push
sub
add
inc
test
test
clc
pusha
std
ljmp
iret
nop
sarb
pop
gs
pop
push
dec
jo
insl
dec
and
push
in
jne
cmp
rcrb
and
jno
add
sbb
pop
leave
scas
pushf
mov
or
mov
outsl
test
les
add
mov
orl
mov
shlb
mov
xorb
lea
dec
or
insl
out
in
inc
mov
insb
bound
in
push
movsb
mov
xor
add
stos
out
cmp
clc
pop
xchg
lret
jns
and
aas
dec
mov
cs
add
insl
adcb
lds
outsb
dec
cmp
cwtl
push
add
jl
or
and
push
push
ffreep
and
fstl
adc
ja
cmpsl
or
pushf
fadds
mov
in
dec
test
loop
xchg
mov
pop
sub
xor
dec
std
shlb
ja
ret
jae
jb
adc
mov
dec
push
cwtl
mov
sbb
stos
sbb
sbb
mov
xchg
out
pop
fmuls
das
cmpsl
add
shll
and
xchg
pop
sub
push
jl
inc
or
js
add
lods
mov
adc
orb
les
xor
hlt
add
cmp
adcb
xlat
gs
fldenv
fiaddl
outsb
dec
sbb
scas
pushf
and
mov
sub
fdivs
shl
sub
in
call
fs
xchg
jns
sbb
and
pop
add
and
add
out
test
ss
and
arpl
stos
push
dec
cmp
xor
jo
adc
pop
add
pop
xchg
fisubrl
js
mov
xor
test
mov
cmp
clc
sahf
imul
test
dec
mov
add
jle
int3
mov
lret
add
loopne
inc
hlt
jb
add
jo
mov
fsubrl
xchg
or
lock
add
inc
cmp
add
test
xchg
push
ja
sbb
pop
loop
ds
nop
and
add
testl
add
adc
add
push
repz
enter
test
xchg
mov
push
push
sub
in
cmp
jg
jb
aam
cmc
push
in
mov
lds
or
add
call
mov
lock
dec
inc
lock
in
fidivrs
movsl
mov
test
pop
cld
cs
pmuludq
enter
mov
cmpsl
xor
push
lds
add
add
push
mov
xchg
adc
lea
arpl
add
cmp
mov
cmp
pop
pop
push
maskmovq
imull
mov
movsl
repz
or
mov
lods
mov
sub
mov
aas
jp
dec
je
pop
add
in
push
adc
divl
push
pop
sahf
sub
loopne
in
sbb
and
push
xchg
fldl
sub
mov
and
shr
add
cmpsb
jmp
hlt
jge
add
mull
jns
push
pusha
sub
das
lea
xor
jmp
or
das
lock
inc
adc
push
lret
push
popa
xor
imull
movsl
popf
push
mov
add
jp
xchg
jbe
arpl
enter
sbb
roll
add
pushf
push
stc
pop
xor
add
divl
aam
andl
icebp
cld
push
loopne
fdivs
jp
lock
mov
lods
fisttpll
sub
sahf
or
jp
fcoml
mov
mov
clc
pop
cmp
dec
cmp
and
shlb
std
push
mov
sbb
scas
add
test
pop
iret
adc
out
add
repz
cmp
cld
cltd
cmc
dec
pop
jo
cmp
pushf
insb
add
lock
fcompl
mov
mov
add
mov
test
loop
andb
add
mov
fdivrl
adc
js
fldcw
dec
push
in
add
push
push
sub
mov
dec
xchg
push
jns
and
xchg
and
int
mov
subps
sbb
or
dec
enter
push
sbb
xor
mov
adc
add
repnz
cmp
dec
in
loopne
push
rolb
movsb
dec
mov
add
ja
add
test
sub
sub
jl
jbe
in
dec
rolb
mov
imul
hlt
mov
lds
aaa
lret
and
push
test
pop
sbb
pop
fsubrs
adc
ret
cmp
pop
je
dec
in
add
mov
or
add
add
popf
loope
xor
pop
cmp
out
aas
mov
mov
adc
mov
out
xlat
jno
add
negl
clc
fsub
out
add
out
bound
into
in
or
adcb
dec
add
leave
xchg
jge
aas
cmpsl
jg
dec
or
dec
xchg
ljmp
rcll
popl
icebp
hlt
sti
xor
mov
jmp
sbb
jo
sub
fmuls
mov
jnp
ljmp
jno
add
xor
jl
sub
cmpsl
push
lea
ja
jo
mov
pushf
test
fdivrs
or
xchg
jae
mov
add
mov
add
loopne
pop
test
add
jnp
aam
cmp
fists
adc
aad
inc
pusha
add
jo
lea
push
das
mov
add
aas
push
in
add
push
dec
fnsave
inc
shrl
sbb
dec
lods
jge
fwait
pop
mov
inc
cmc
and
adc
sbb
add
cmp
jnp
cmpsl
inc
mov
sarl
popf
icebp
nop
into
rcrb
pop
mov
adcb
xchg
aam
je
cld
add
pusha
mov
out
push
fldenv
push
cmc
xchg
add
xor
add
faddl
ret
sub
out
add
out
repz
fcompl
dec
push
and
aam
in
ja
bnd
pop
test
out
int3
loopne
add
jecxz
adc
gs
push
loopne
in
pop
shl
jb
stos
add
divb
dec
addb
inc
repnz
or
push
jecxz
jne
jb
mov
int3
cs
xor
fisttpl
mov
rorb
loopne
push
mov
pushf
adc
fldl
add
push
dec
scas
push
add
inc
and
xchg
sbb
or
mov
adc
add
mov
and
jge
mov
adc
cmp
cmp
mov
mov
sub
cmc
mov
add
mov
xchg
dec
insb
or
add
jmp
pop
loope
adc
je
pusha
mov
add
xor
and
inc
mov
ds
dec
test
ret
cmpsb
ja
mov
inc
fs
add
push
inc
call
pop
cld
rolb
call
jmp
cmp
add
cmpsb
adc
jp
cli
mov
iretw
xchg
or
pop
lods
xorb
add
push
loop
mov
inc
lock
das
add
mov
pop
sbb
xor
add
sub
xchg
cmp
add
mov
mov
and
stos
in
arpl
add
xchg
mov
sub
push
pop
leave
cmp
sbb
sbb
out
push
pop
dec
stc
shl
test
dec
out
stos
mov
pop
sub
int
aas
add
push
decl
mov
loop
add
ljmp
imul
pop
into
xchg
add
sbb
rcr
in
add
iret
mov
mov
sub
dec
mov
pop
ret
mov
jecxz
adc
jno
out
roll
mov
rolb
adcl
pushf
dec
inc
fbld
and
xor
dec
insb
or
aam
cli
jnp
subb
out
popa
add
add
arpl
jmp
in
push
push
and
mov
addr16
add
mov
inc
cs
push
rdmsr
dec
hlt
mov
add
inc
lods
icebp
mov
fst
add
mov
les
nop
mov
cs
inc
push
inc
iret
or
shl
lret
inc
mov
add
insl
sub
mov
jns
andb
xor
dec
xor
outsb
push
test
call
push
dec
in
sub
nop
mov
or
cwtl
pop
push
add
lods
rcrl
xor
ret
xor
cld
fimull
out
rcll
mov
mov
add
cmp
or
add
xchg
cmpl
jo
add
pop
sbb
lahf
test
mov
lcall
fldenv
leave
push
or
add
add
pop
xor
lods
xor
popa
clc
jecxz
push
jp
mov
cmp
push
jo
pop
iret
outsb
pop
add
pop
sub
mov
add
sbb
cwtl
adc
pop
adc
add
mov
repz
ret
incb
cmp
cmpsl
test
jnp
add
insl
in
cld
add
cld
cwtl
add
addr16
fwait
add
cs
mov
pop
pand
test
sub
dec
push
mov
je
jmp
addr16
sub
pop
es
fadd
bound
mov
dec
or
adc
add
rclb
add
hlt
mov
fwait
add
aam
adc
add
mov
lods
xchg
jp
repz
cmp
arpl
sub
andb
mov
pop
inc
fsubs
iret
add
ja
roll
sub
cmpsb
lock
pop
das
mov
inc
cli
popf
pusha
mov
sub
addr16
das
ljmp
pop
xorb
mov
fisttpl
pop
popa
stos
clc
cld
add
pop
inc
cmpsb
lret
add
add
cld
push
add
sbb
ds
sbb
sub
xor
mov
lds
mov
in
sbb
sub
sub
in
hlt
test
add
dec
int
in
and
adc
push
pop
sub
lods
inc
inc
cmpsl
pusha
imul
pop
or
mov
stos
push
nop
pop
or
in
xor
cmp
hlt
sbb
add
mov
call
push
pop
mov
lcall
js
adc
mov
jns
out
cmpb
out
xorb
loopne
add
call
inc
adc
movl
test
cmpl
flds
lock
cltd
sbb
fisttps
xor
pop
lahf
mov
add
pop
cmp
push
pop
nop
or
mov
xor
movsb
clc
adc
hlt
dec
dec
xchg
jge
loop
testb
lds
add
jl
adc
fadds
jp
addr16
das
add
out
mov
imull
xchg
ss
dec
pop
add
in
add
pushf
enter
mov
inc
dec
and
js
movsl
je
in
cwtl
loop
mov
dec
sarb
jne
rcrb
ds
xchg
cmp
movsb
jle
cmp
dec
jnp
fistps
sbb
shrb
mov
mov
pop
add
jnp
mov
aaa
sbb
push
xchg
negl
adc
aas
jno
xor
les
adc
fisttpl
imul
sub
pusha
stc
hlt
js
mov
or
cli
test
pop
cmp
mov
test
and
test
pop
push
scas
andb
add
pusha
fwait
iret
addr16
push
push
pop
mov
cmp
lret
test
pop
xchg
faddl
and
test
or
or
add
nop
xor
pusha
cmpsl
fcmovnbe
enter
add
pop
icebp
pushf
loope
adc
jo
shlb
mov
add
movsb
mov
pop
scas
add
aad
int3
cmp
mov
add
int
cmp
jns
scas
xlat
add
inc
clc
jb
jg
jl
sub
bound
pop
fmul
andb
lret
mov
mov
js
xor
cwtl
pop
jg
inc
pop
jecxz
push
jnp
xor
adc
or
and
roll
adc
xchg
xorb
pop
mov
mov
mov
add
sub
or
aaa
das
jg
rcrb
popa
add
mov
push
cli
incb
ret
sbbl
or
cmp
xchg
cmp
or
pusha
loopne
adc
push
std
or
lock
push
mov
jg
das
cs
in
sub
sahf
imull
filds
lea
cmc
inc
roll
push
cmpsb
mov
cwtl
aaa
or
xor
and
jae
or
mov
outsb
rorl
xchg
pop
xchg
fidivrl
sub
aas
add
lea
gs
mov
in
clc
mov
cmp
xchg
cmovs
loopne
sub
js
mov
sbbl
andl
add
inc
pop
mov
push
cmpsl
add
test
add
loopne
rolb
dec
outsl
int
adc
clc
in
lahf
cmp
or
mov
sarb
imul
aas
fmuls
push
in
push
mov
insl
cwtl
add
inc
dec
dec
push
push
sarb
xor
mov
inc
pop
test
push
cmpsl
je
cwtl
sub
add
arpl
inc
cltd
movsb
add
lods
pop
mov
loop
cmp
adc
sbb
test
inc
xchg
cld
mov
subl
or
adc
movsl
loopne
mov
sbb
inc
or
pop
test
cmpl
je
js
push
pop
and
and
xchg
add
pushf
jg
hlt
sti
push
adc
mov
mov
push
mov
pop
in
das
bound
and
or
adc
mov
mov
cltd
mov
in
xchg
cmpb
int3
sbb
sbb
idivl
inc
inc
rolb
sbb
inc
push
imull
fldt
add
sbb
leave
push
out
mov
pop
ret
mov
das
adc
and
insb
mov
inc
mov
inc
adc
push
aas
into
pop
sub
test
add
scas
adc
lea
int3
add
mov
stos
scas
out
ds
leave
mov
popf
test
add
insl
mov
sbb
xor
lea
and
pop
fdivrp
andb
mov
push
popa
pop
adc
mov
xor
push
das
adc
fists
pusha
push
insb
adc
add
mov
cmp
cwtl
lret
add
ret
inc
cmpsl
loopne
mov
mov
mov
xchg
out
add
push
pop
sbb
add
and
mov
rol
incb
cmc
scas
add
rcr
add
hlt
mov
cmp
sub
pop
lahf
add
call
xchg
hlt
push
jnp
jno
rcrl
add
inc
add
adc
inc
nop
fisubrl
in
insl
cmpsl
jns
aas
or
lahf
xchg
inc
push
sbb
shrb
sub
dec
insl
and
xor
xor
lock
ss
jo
scas
pusha
sub
notl
inc
lcall
add
pop
ss
jg
and
shlb
fwait
cmc
addr16
sahf
add
push
adc
clc
outsb
jl
sbb
cmpsl
push
add
jne
insb
das
mov
call
xlat
push
mov
add
mov
ljmp
testl
dec
or
out
jecxz
aas
pop
add
cmp
xchg
loop
jnp
add
and
push
pop
nop
shrl
mov
or
js
mov
mov
lea
add
dec
pop
loop
xchg
xor
dec
mov
add
addr16
mov
fstpt
jns
push
inc
sbb
mov
mov
gs
dec
add
sbb
scas
lcall
sbb
clc
call
rcll
jns
jl
out
mov
mov
add
xchg
adc
add
inc
sbb
imul
iret
add
rol
mov
cmp
repnz
dec
shrl
popa
notb
push
add
aaa
lock
mov
add
jb
fisubrs
fists
mov
dec
cmpb
sub
sbb
cs
or
jo
cmp
movsb
adc
jbe
cmpsl
xor
pop
out
sub
shll
add
mov
adc
jg
add
add
add
popf
outsb
sbb
mov
cmpsl
add
inc
xchg
adc
insl
lret
or
test
mov
addl
cwtl
mov
cmp
sahf
pop
mov
loope
mov
sbb
pop
mov
ds
push
das
repnz
in
dec
add
jecxz
mov
scas
xchg
jmp
scas
push
jnp
mov
add
inc
add
or
jmp
scas
psadbw
xor
rcr
sbb
mov
or
adc
inc
in
ss
ljmp
fcomi
sbb
pop
fwait
mov
movsl
mov
mov
adc
cmp
pop
inc
add
jno
nop
popf
or
add
bound
sti
mulb
push
cmp
cmp
subb
mov
push
sbbl
repnz
les
xor
into
dec
in
cld
add
sub
stc
aaa
cwtl
jge
fiadds
add
cld
leave
shlb
repz
add
mov
xor
cmp
mov
xor
imul
pusha
jecxz
or
bndldx
pushf
notl
shll
mov
or
stos
sub
xchg
push
jno
or
mov
repz
subb
xchg
add
xchg
insb
out
adc
addr16
movsb
pop
inc
out
xor
and
sub
imul
ljmp
add
bound
pusha
mov
insl
paddq
xchg
dec
mov
hlt
add
imul
dec
mov
rorl
add
mov
ljmp
fstps
int
outsb
and
jnp
sub
push
shrl
fnsave
filds
mov
mov
stc
mov
nop
jecxz
scas
sub
jae
mov
jne
mov
inc
icebp
test
xor
add
jmp
in
movsb
add
in
cltd
mov
add
rcll
xor
xor
xchg
or
stc
jae
sbb
lods
sbb
dec
add
hlt
sub
cwtl
add
std
xor
cmp
mov
and
dec
mov
add
mov
icebp
call
mov
inc
sti
in
mov
adcb
sbb
adc
cltd
in
push
add
sbb
cmp
pop
out
stos
sbb
lods
dec
imul
xor
testb
pop
xor
sub
cmpb
addr16
cmovo
and
adc
adc
mov
fdivp
jecxz
clc
push
inc
sub
es
xor
mov
dec
hlt
sbb
insb
add
and
mov
mov
add
inc
push
test
popl
ficoms
mov
jge
xchg
add
cmp
adc
xor
call
mov
sbb
icebp
add
pusha
mov
ret
or
dec
out
fld
add
and
xchg
fdivs
idivb
mov
mov
mov
std
cmp
add
into
aas
movsb
scas
mov
add
adc
add
dec
scas
dec
sbbb
shrl
rclb
push
mov
inc
mov
sub
adc
push
cmp
push
arpl
cwtl
mov
icebp
std
push
mov
sub
mov
jb
xchg
rcrl
clc
clc
adc
add
dec
inc
mov
and
lock
outsl
rolb
ret
loopne
data16
nop
cwtl
add
pop
lods
sub
lcall
fmuls
sbb
inc
je
sub
out
std
and
mov
and
hlt
mov
in
clc
shll
test
and
push
mov
ret
pushf
es
and
add
lods
movsb
mov
pop
mov
mull
mov
std
js
outsl
loop
sbb
leave
incl
fidivrl
and
sub
addr16
test
loop
repnz
jno
outsb
testb
xchg
mov
push
push
imul
es
jae
jnp
dec
call
cmpl
repnz
in
xor
std
dec
and
mov
pusha
test
jmp
pusha
inc
pop
fildll
into
rclb
add
push
xor
pop
add
add
xor
rorb
aad
ficoml
sub
mov
shl
jmp
inc
push
mov
stos
xchg
xor
mov
lret
and
mov
aas
nop
imul
mov
xchg
dec
adc
sub
adc
mov
and
cwtl
inc
add
jl
pusha
in
jbe
add
lock
cmp
int3
sahf
xchg
mov
les
or
sub
sub
hlt
add
push
or
mov
orb
inc
xor
xchg
add
mov
mov
pusha
js
lcall
push
jmp
testb
xchg
or
add
or
insb
lods
jbe
pop
scas
sub
lods
adc
ss
daa
pop
cmpsb
pop
or
out
adc
mov
sub
mov
rorl
add
sbb
iret
push
test
push
push
rol
push
pusha
inc
pop
pop
mov
in
add
cmpsb
add
stos
subl
sbb
je
push
mov
push
xchg
sbbb
xchg
outsl
mov
pusha
test
add
arpl
jecxz
sbb
inc
xchg
sub
leave
sbbb
andb
add
add
cmp
xor
jae
add
ret
iret
add
sub
daa
add
xor
push
or
stc
or
adc
push
sub
jp
f2xm1
fs
cmpsl
add
adc
sub
test
push
add
xchg
inc
inc
fdiv
mov
lcall
push
push
adc
or
decb
mov
es
sar
or
clc
jmp
xchg
in
leave
mov
int3
xchg
xor
outsb
nop
icebp
push
inc
jb
xchg
and
sub
cs
dec
add
enter
dec
inc
xor
mov
mov
shlb
shrb
inc
and
aas
scas
add
cmpb
fsubs
add
pop
out
dec
lock
sbb
sub
iret
fistpl
lahf
cmp
push
iret
mov
push
sbb
mov
mov
inc
rcrb
cmp
mov
mov
and
add
adc
push
std
hlt
mov
jecxz
xchg
mov
inc
jge
sbb
addr16
in
mov
mov
or
sbb
adc
jno
dec
xchg
addb
pushf
jge
add
add
cmc
pop
dec
sub
rcr
sub
mov
mov
xor
cmp
je
jb
stos
lret
mov
jo
aas
sbb
sbbb
imul
xchg
testb
repz
jns
jae
add
pop
mov
sub
push
test
rcrl
jle
into
sub
out
cmc
inc
shl
mov
dec
sarl
xchg
cmpsl
pop
in
add
jmp
mov
mov
and
sbb
stos
pop
inc
out
sub
and
or
xchg
scas
cmp
sub
shlb
inc
or
xor
call
add
pop
mov
push
xor
add
rcrb
jl
mov
add
outsl
lret
insb
and
xor
cmp
xchg
int3
mov
arpl
stos
imul
cmpsl
add
gs
push
and
pop
cmpsb
mov
xchg
lcall
jno
or
test
lahf
cltd
and
rol
pop
adc
pusha
inc
and
xchg
mov
mov
outsl
push
sar
lret
and
mov
push
sti
jp
rol
fwait
in
cmpsl
add
jmp
add
xor
loopne
clc
and
sbb
enter
jns
add
jmp
mov
add
push
jge
adc
push
mov
std
or
cmp
lds
stos
pop
lods
inc
movsb
fistl
bound
pop
mov
jg
add
xchg
adc
xor
mov
loopne
in
fdivrs
loope
add
push
inc
je
add
shll
leave
cltd
xor
add
popa
pusha
mov
push
jno
add
sub
popf
aad
sbb
push
insl
movsb
mov
mov
cmpb
xchg
cmp
ror
inc
imul
repnz
dec
add
int
arpl
add
mov
add
jnp
dec
test
push
jns
inc
cli
push
dec
add
and
add
es
insl
and
popa
mov
fdivr
push
js
xchg
in
add
int3
inc
and
rorb
cld
push
scas
xlat
xchg
movl
or
pop
jecxz
ds
daa
add
mov
inc
jno
dec
test
rolb
jg
add
cmp
aaa
push
fst
add
arpl
inc
adc
inc
les
mov
xchg
push
cmp
jecxz
xchg
add
inc
add
cmpsl
aaa
testl
jae
sub
add
std
popf
loopne
push
xchg
nop
pop
cmp
jnp
ficompl
mov
jae
ret
inc
es
addb
add
jbe
in
xchg
cmp
sbb
fists
inc
xor
ljmp
fs
loope
in
dec
and
rol
ds
push
mov
call
ss
push
push
xchg
xadd
and
push
lock
lds
and
jg
add
or
sti
std
xchg
mov
add
lods
or
leave
dec
cwtl
or
aam
aaa
pop
icebp
jmp
dec
pushf
push
add
push
mov
dec
jnp
pop
out
das
rorl
mov
add
xor
scas
sti
add
pop
ja
add
add
repnz
inc
adc
add
arpl
aas
dec
jecxz
sub
push
outsb
adc
sub
or
add
nop
enter
sahf
shlb
lea
mov
mov
add
lret
sub
dec
mov
sti
loopne
adc
add
or
inc
jmp
imulb
gs
xorb
add
xchg
ljmp
pusha
jne
int
rcl
pop
push
popa
cmp
rcrb
sti
pop
int3
add
jns
add
repz
xor
push
xchg
jb
push
loope
jnp
sahf
stc
adc
add
fsubl
jecxz
cwtl
pop
inc
add
test
int
cmp
pop
shrl
add
pushf
cmc
cmp
xchg
pop
mov
sub
xor
out
mov
or
int
sbb
loope
cld
mov
sub
mov
test
jl
mov
add
outsl
js
mov
sub
pop
mov
pusha
test
and
ljmp
pop
outsl
movsb
xchg
mov
les
jl
xchg
lret
push
mov
cmp
pop
jae
xchg
sbb
xlat
mov
jb
or
shrl
idivl
mov
das
add
pop
xchg
hlt
inc
push
js
add
mov
ss
adc
fisttps
data16
xchg
loope
jmp
enter
shll
push
sti
das
pop
mov
pop
test
mov
arpl
sub
and
jg
cmp
jg
pop
aam
or
sbb
fiadds
mov
mov
xchg
push
hlt
out
xchg
fcomps
xchg
outsl
jle
add
jp
test
lret
ret
push
sub
inc
cld
out
dec
add
push
loop
add
lret
and
mov
jmp
mov
cmpsb
testl
push
bnd
add
adc
decl
cmp
and
les
add
jns
mov
jmp
testb
imul
push
xchg
inc
xlat
push
dec
xor
add
int
stos
cmpsl
sbbb
add
mov
pop
pavgw
push
mov
add
iret
add
jnp
cmp
xchg
test
and
jl
cwtl
cwtl
or
push
jle
and
add
push
pusha
mov
and
loopne
push
add
lret
cld
aaa
test
xor
add
xchg
ds
sbbb
enter
xchg
dec
mov
les
xor
jnp
sbb
enter
sbb
add
daa
cmp
mov
cmp
in
pop
shlb
mov
outsl
add
flds
push
stos
xor
daa
mov
mov
ds
sbb
pop
js
test
std
andb
cmpsb
outsl
imul
xchg
add
hlt
movsl
out
jg
andb
mov
fnstsw
push
roll
mov
icebp
mov
xor
leave
lahf
add
adc
adcl
sbb
add
adc
xchg
pusha
sbb
sbb
insb
cmp
dec
inc
push
adc
lods
pop
and
or
add
mov
nop
mov
movsb
dec
add
std
fsubl
jge
pop
xchg
add
outsl
dec
repnz
gs
das
add
inc
mov
pop
add
imul
sbb
add
faddl
xlat
pop
jb
dec
out
cmp
mov
push
xor
adc
mov
fadd
popa
add
pop
ljmp
in
shrl
in
xor
je
call
xchg
sarl
push
push
mov
imul
pop
and
adcb
push
std
mov
ljmp
push
aad
je
ja
add
pop
or
test
lods
dec
fwait
and
mov
mov
mov
lret
or
test
inc
adc
inc
lock
cmp
add
mov
xchg
cltd
dec
sbb
mov
enter
lds
sbb
dec
inc
cmpsb
sbb
adc
add
movl
je
jmp
add
mov
lret
adcb
cmp
xchg
jb
pop
add
mov
or
mov
inc
leave
add
jp
stos
and
repnz
in
ljmp
mov
fidivl
inc
pop
push
add
mov
pop
push
add
xchg
pop
int3
shlb
mov
mov
xchg
pop
add
cmpsl
mov
jecxz
jmp
pop
add
pop
sbb
jl
prefetcht2
outsl
lret
push
repz
addb
in
adc
cmp
jg
dec
sbb
mov
loope
in
mov
add
jbe
arpl
in
and
sub
jge
cmp
sub
stos
int
dec
sub
test
add
adc
push
mov
into
push
or
inc
inc
mov
mov
or
adc
add
ss
mov
shll
mov
jle
inc
cmp
in
mov
lds
aaa
pop
sbb
call
aas
hlt
xlat
dec
cs
dec
btc
inc
cmp
outsl
insl
add
into
pop
bound
xlat
mov
mov
enter
add
gs
mov
fisttps
lock
add
sbb
push
loopne
xlat
add
insb
hlt
mov
arpl
or
mov
scas
jb
aam
addr16
mov
add
inc
sub
lret
mov
push
jmp
jmp
clc
adc
lock
test
xchg
sbb
dec
add
loop
leave
test
or
cmpsb
xchg
add
jbe
mov
int3
sahf
and
pop
add
loopne
jno
pop
mov
shlb
mov
pushl
test
mov
mov
add
jg
repnz
dec
sbb
pop
arpl
mov
xor
sub
mov
out
add
leave
cmpsb
push
fldl
adc
lods
adc
test
fucomi
addb
ret
mov
pusha
push
loopne
ror
pop
adc
stos
imul
pop
add
lret
aam
cmp
pop
or
or
jno
mov
xchg
dec
add
cli
xor
jle
lcall
cmp
dec
fsubr
add
or
cltd
push
push
loope
ja
add
pop
dec
test
add
or
outsb
lea
cmp
xchg
inc
mov
roll
icebp
jg
ret
add
xor
movb
xor
int
xor
xchg
cmp
stos
xor
adc
lods
sbb
fiadds
dec
adc
imul
xchg
add
pusha
push
adc
stc
and
add
aaa
or
aas
add
fidivrl
adc
mov
es
cmpsl
add
daa
add
loop
dec
add
repnz
sbb
inc
stos
jge
ds
enter
mov
mov
add
inc
outsl
js
hlt
jo
iret
inc
xor
iret
or
add
or
jle
add
std
fstpt
mov
xchg
xchg
mov
add
clc
adc
or
roll
add
jp
lds
jbe
imul
adc
jecxz
or
add
shll
sbbl
mov
stos
int
xchg
jge
std
add
or
nop
push
pop
pop
int3
push
add
xor
cli
or
cwtl
adc
rorb
jo
fadds
mov
sub
add
and
ret
pop
test
mov
push
and
pushf
add
cld
out
pop
in
lods
jnp
add
test
xor
push
ds
adc
sbb
pop
mov
adc
inc
leave
rolb
repz
shlb
lcall
adc
lret
add
daa
das
jl
mov
push
adc
inc
mov
clc
dec
pop
pop
cmp
cld
add
xor
push
cmc
adc
fdivl
or
pop
stos
push
shr
add
xchg
mov
mov
add
pop
ret
fwait
iret
rolb
pop
outsl
xchg
mov
shrb
out
enter
cmpsl
idivb
add
mov
dec
mov
mov
rcrb
push
pushf
dec
fcomip
inc
sbb
pop
std
in
insl
bound
ljmp
lods
add
fwait
ss
in
add
aad
shl
inc
sbb
dec
add
loopne
xchg
push
push
bnd
cmp
push
sub
scas
lds
popa
adc
and
adc
repz
add
hlt
pop
popf
push
jns
das
dec
cmp
pop
jge
bound
aam
aas
scas
inc
add
mov
add
xchg
add
and
cmpsb
je
add
leave
hlt
or
pop
test
xchg
divl
and
fmull
shll
fidivrs
cld
mov
ds
pusha
or
push
lret
loopne
push
jge
inc
stos
add
sbb
lahf
sub
mov
cwtl
data16
scas
jo
jae
push
add
xor
pop
popa
js
popl
cmp
and
pop
outsb
repnz
in
cmp
mov
loopne
adc
adc
roll
mov
xchg
incl
inc
scas
fisubrl
shlb
pop
mov
mov
xchg
xor
push
add
out
sahf
inc
inc
shll
and
int3
fisttps
je
mov
xor
loope
jns
orb
and
add
mov
and
add
pop
mov
xchg
sarb
and
iret
movl
mov
out
add
push
les
cmp
adc
shrl
sub
cmp
inc
out
loopne
sbb
fimuls
and
rcrl
jmp
js,pt
add
scas
add
add
pop
lock
inc
cmpsb
in
adcl
xrelease
sub
lahf
ret
scas
pop
jne
rorb
mov
popl
inc
popa
int3
push
jp
mov
add
adc
out
mov
dec
add
xlat
orb
popa
ret
dec
add
test
fistpl
rcll
sbb
push
in
dec
pusha
xchg
addb
jmp
les
push
mov
pop
data16
rorl
shlb
xor
push
js
or
sbb
in
insl
add
adc
push
test
rcrb
movsb
std
or
aaa
dec
pop
inc
lods
jmp
and
cmp
dec
push
sbb
mov
ja
movmskps
sbb
add
sub
lahf
lret
inc
cmp
xor
inc
jp,pn
add
xacquire
sub
xlat
pop
dec
std
clc
push
add
adc
and
or
add
cmpsb
jno
jae
fists
mov
dec
jl
fstl
das
mov
ficompl
push
sbb
lock
pop
lret
outsb
insl
push
fdivr
or
sub
pusha
out
sbb
pop
inc
rolb
ss
adc
mov
xchg
mov
xor
xchg
mov
ds
pop
pop
test
sbb
addr16
and
inc
sub
sbb
push
sbb
mov
xor
fildll
pusha
push
ss
bound
filds
cmpsb
sub
lods
jno
add
jbe
lcall
shll
aas
dec
jl
lods
test
push
sarb
xor
lock
inc
push
test
inc
xchg
or
bound
dec
addb
sub
push
aad
lods
xchg
dec
or
aaa
jle
cmp
pop
mov
and
daa
outsb
dec
aas
shrb
shlb
xor
call
daa
dec
cmp
aaa
mov
stc
lret
pusha
cwtl
or
popa
sub
adc
add
jo
push
mov
pop
test
nop
push
xor
add
push
add
inc
ss
adc
dec
sahf
jecxz
push
clc
aas
add
sbb
fdivl
xchg
rcl
loop
cld
cmp
sbb
fwait
cli
pusha
mov
xchg
add
adc
cwtl
pop
outsl
push
sub
cli
lods
adc
or
mov
call
push
or
pusha
pusha
out
sub
enter
aaa
std
pop
xor
xor
and
jge
mov
dec
subl
and
add
cmp
or
stos
popf
inc
pop
orb
icebp
and
mov
xchg
adc
imul
or
scas
adc
or
and
xchg
jns
in
clc
rclb
orl
add
mov
xor
ret
and
insb
cmp
dec
jnp
add
or
pop
pop
push
add
lods
mov
ja
add
mov
lahf
dec
pop
pop
xor
adcb
mov
xchg
aas
lock
add
enter
shr
pop
cmp
sub
jb
shl
push
lock
addb
push
adc
sarb
bound
dec
adc
in
inc
cwtl
fsubl
sub
add
or
popa
xorb
ss
dec
inc
cli
or
dec
inc
push
and
add
andb
xchg
or
loope
push
dec
mov
cltd
lea
jbe
and
jg
adc
mov
add
clc
popa
add
xorl
sbb
mov
in
rcr
mov
add
mov
out
adc
gs
dec
iret
adc
into
and
mov
cltd
mov
fnstsw
lock
add
cmpl
add
pop
repz
xchg
jo
add
cmc
jns
xchg
dec
add
inc
lcall
arpl
jbe,pt
addb
push
pop
popa
dec
push
es
subl
das
add
lret
dec
test
cwtl
push
xor
add
jp
add
push
pop
sub
arpl
dec
add
push
loopne
add
push
inc
dec
lret
ficoms
add
subl
pop
push
and
imul
pop
es
dec
add
scas
inc
inc
push
and
in
add
fists
lods
sbb
push
repz
xor
and
dec
dec
pop
imul
cmpsb
adc
and
add
out
mov
jbe
add
add
stos
lret
enter
cmc
sbb
dec
insb
rol
dec
outsl
xchg
movsl
cmp
fwait
pop
mov
mov
pop
add
incb
out
fdivs
jmp
mov
in
int
add
mov
mov
add
mov
jne
inc
rcrl
insb
add
les
idivl
adc
add
xchg
outsb
dec
mov
jp
sub
cmpb
ficoms
pusha
mov
and
inc
push
and
xchg
pop
cmpsb
and
stos
sbb
push
jg
cvtps2pd
or
loope
out
sti
pop
popa
cmp
mov
loop
clc
ljmp
add
push
into
mov
xchg
adc
cmp
leave
or
in
call
xlat
pop
mov
xor
rclb
jmp
mov
mov
mov
loopne
das
xor
or
cmp
ret
je
jge
xor
clc
mov
pop
stos
aam
sahf
in
popa
lcall
add
in
ss
lods
les
mov
cmp
orb
jo
lcall
add
mov
int3
nop
insl
add
xor
mov
cmp
and
mov
fmul
add
mov
out
mov
mov
test
xor
xchg
adc
out
fwait
xchg
xchg
cmp
add
lahf
in
sbb
cmp
repz
dec
loopne
adc
inc
mov
leave
das
add
sbb
cltd
mov
out
jno
les
loope
mov
add
sbb
das
icebp
cwtl
dec
fsqrt
xchg
or
iret
add
subb
pop
inc
xor
addb
dec
int3
mov
add
xchg
xchg
das
cs
pop
enter
mov
or
popf
sar
in
nop
es
push
mov
and
dec
jbe
add
mov
add
mov
inc
dec
push
add
fistl
jbe
sub
sbb
das
add
add
testb
add
cmp
add
dec
pop
inc
in
add
out
adc
sub
pop
xor
inc
sahf
loope
sbb
out
lret
jle
adc
and
mov
xchg
sbb
test
add
and
popf
test
sti
je
arpl
cld
test
push
andl
inc
mov
jmp
mov
scas
xchg
pop
psrlw
or
push
xlat
inc
pusha
rorb
sbb
xchg
bound
or
jo
enter
lds
lea
cs
pop
add
test
adc
xor
stc
mov
pop
mov
cmp
inc
lock
push
xchg
add
bound
push
jmp
test
in
sub
rolb
sbb
enter
pushf
inc
cmp
jl
jp
insl
inc
and
add
push
adc
roll
xor
std
imul
call
clc
add
push
inc
in
in
dec
clc
insl
je
push
mov
pop
sbb
push
fs
mov
sub
push
in
xor
mov
pop
sub
pop
call
jg
or
mov
or
push
xor
pop
cwtl
jo
pushf
push
lldt
jmp
sub
add
imul
mov
dec
fst
push
dec
cmp
pop
lahf
js
mov
adc
rcrl
cmp
sbb
dec
jo
add
fbstp
mov
fwait
mov
push
pop
test
adc
xchg
ja
stos
inc
push
add
mov
dec
xchg
fcomi
pop
imul
sub
les
push
xchg
sbb
enter
xor
xor
push
pop
inc
sub
not
or
dec
inc
call
push
pusha
inc
xchg
fwait
jg
and
cltd
mov
stos
fcompl
cmp
sti
adc
xchg
inc
in
add
lock
into
sbb
mov
not
add
sahf
rcl
inc
cltd
loope
insb
inc
mov
xchg
mov
adc
sub
fisttps
mov
fiadds
dec
rorb
mov
sub
mov
inc
inc
or
andl
or
cmpb
sarl
outsl
jnp
test
fdivrs
add
mov
insb
fs
int3
pushf
or
add
mov
and
jmp
in
mov
dec
xchg
jns
fbld
and
push
andb
popa
push
xchg
adc
fiadds
mov
scas
dec
dec
hlt
addb
insl
out
pop
sub
dec
pop
ds
imul
pop
push
fisttps
adc
adc
mov
add
push
mov
andb
sbbl
in
xchg
add
xorl
clc
arpl
leave
dec
add
test
dec
mov
mov
sub
add
jbe
lods
js
cmp
add
add
fs
je
sub
mov
inc
adc
push
mov
clc
and
call
add
lcall
movsb
adc
adc
inc
imul
lds
adc
and
andb
daa
jmp
fiadds
sub
pop
sub
jnp
or
ss
xor
xchg
and
push
pop
nop
movsb
add
inc
pop
xor
out
sbb
pop
fdivrs
arpl
and
in
mov
lock
cmp
or
and
push
mov
roll
cmpsl
and
sar
or
sbb
das
or
cmp
js
mov
push
mulb
adc
or
in
add
sbb
adc
dec
sbb
in
xchg
xchg
jae
push
mov
scas
push
or
stc
push
mov
adc
in
jo
cmpsb
aaa
add
std
jo
xor
cmp
or
xor
ja
sbb
icebp
inc
mul
cli
pop
in
test
fstpt
addb
and
or
mov
add
mov
mov
jns
adc
cmp
inc
add
aam
mov
and
cmp
add
adc
rep
subb
pop
dec
xchg
xchg
testl
xchg
push
push
bound
ror
in
or
or
mov
add
xchg
sub
push
add
xor
mov
and
inc
push
test
nop
jl
sub
inc
faddl
add
xchg
outsb
mov
int3
xor
cmpb
xchg
cltd
nop
fildl
xchg
scas
cwtl
xchg
shl
or
mov
add
xchg
imul
jle
cld
pop
rorl
mov
mov
jae
add
inc
pop
cmp
mov
rcr
arpl
pop
add
cmp
adc
pop
cld
add
int3
fnstsw
mov
int
inc
ffreep
push
add
mov
imul
lret
pop
jle
pop
int
adc
enter
cmpsb
cld
lahf
shrb
or
test
inc
cmp
pop
dec
dec
inc
psrlq
push
pop
pop
sub
or
loopne
loop
jb
xchg
mov
add
shrl
fidivs
add
mov
test
and
nop
inc
and
cwtl
add
mov
cmp
jns
or
je
or
add
xchg
stc
pop
dec
int3
incl
and
push
jl
push
mov
push
dec
insl
mov
sbb
in
rolb
push
mov
rcll
push
stc
cwtl
pusha
or
xchg
add
sub
xchg
lea
xor
lret
xor
and
stos
in
xor
fsubrl
rcll
cmp
inc
add
cmp
sbb
popf
popa
int
add
int3
dec
int3
xchg
xor
add
xor
push
or
loopne
mov
pop
adc
cwtl
dec
into
sarb
sbb
jle
stc
int3
mov
pop
jns
sbb
lea
sbb
mov
ret
movb
push
insl
es
sub
out
cmp
adc
mov
dec
add
aad
dec
dec
sarb
imul
push
shll
push
lahf
or
inc
jmp
adc
in
mov
idivl
lret
adc
rcrl
mov
jns
add
dec
or
sbbb
mov
outsb
add
mov
push
pop
je
pop
inc
xor
data16
mov
sub
movsl
pusha
loopne
sub
je
mov
das
or
pusha
stos
pop
add
daa
push
inc
push
addb
js
cmp
ret
addb
sbb
dec
add
stos
stos
mov
mov
out
adc
shlb
pop
mov
int
das
mov
js
ss
jmp
imul
add
mov
push
insl
sarb
inc
cmpb
or
into
xor
add
imul
or
cmp
mov
mov
fdivl
in
add
test
add
add
test
sub
cmp
adc
xchg
dec
add
push
insl
lahf
or
or
aaa
nop
dec
enter
push
or
xor
add
ret
mov
loopne
dec
les
inc
add
imul
into
adc
add
xor
mov
clc
cmpl
bound
je
les
xor
add
mov
test
mov
je
ret
cltd
push
cmp
ljmp
test
push
push
jge
xchg
and
fs
and
test
pusha
jecxz
push
call
mov
inc
pop
subl
cmp
fs
adc
sub
jno
das
mulps
push
jg
test
xor
sbb
mov
mov
mov
add
or
ficoml
dec
add
clc
jnp
mov
aad
add
cld
scas
in
pop
xor
add
adc
push
add
repz
push
popf
imull
push
test
add
xor
push
inc
lret
movsb
pop
and
addb
mov
push
fimull
xchg
lret
jns
sbb
je
scas
in
loop
jo
sbb
or
aam
fadds
pop
int3
repz
cs
xchg
mov
das
sbb
xchg
insl
int3
lock
mov
jo
iret
pop
out
mov
cmp
inc
shrb
add
pop
ds
add
fimull
and
inc
rcrb
xchg
stc
fcmovne
push
fidivl
mov
add
push
fwait
sbb
stos
add
fcompl
xlat
xor
loope
add
sbb
mov
xchg
mov
mov
mov
and
lret
sahf
outsl
arpl
iret
fnsave
or
cli
mov
add
ja
and
cld
and
add
push
in
jno
inc
jae
sub
push
in
imul
pop
inc
xor
dec
mov
out
sbbb
pop
pop
sbbb
jo
mov
xchg
shlb
iret
ret
gs
xchg
cwtl
nop
push
mov
xchg
xchg
mov
sub
ret
pop
push
bound
mov
jb
inc
ficomps
add
xor
in
fisubl
xchg
iret
cmp
popa
ret
cld
mov
add
jo
jp
cmp
movsl
cmp
in
mov
daa
enter
jmp
mov
out
adc
into
dec
leave
aas
hlt
add
inc
sub
std
call
dec
cwtl
bound
add
xchg
cmpsb
push
loop
cmovnp
sbbb
fnsave
shll
adc
push
add
mov
lret
or
add
xor
sarb
add
cmp
xor
jge
daa
notb
int3
addb
xor
lret
addb
sub
mov
add
aaa
cwtl
das
adc
pop
pop
cmp
xor
cmp
rorb
add
sub
pop
dec
mov
out
sub
inc
mov
pop
in
insl
mov
cmp
cmp
mov
ds
and
mov
inc
add
add
pop
cmc
ret
arpl
add
outsb
insl
adc
dec
cmp
jae
dec
cmp
add
xchg
leave
sub
filds
mov
or
add
push
sub
dec
aam
add
loopne
cmovo
into
mov
add
jle
jg
cmpsw
add
jae
cmc
and
and
push
mov
mov
sahf
xchg
dec
cmp
pop
lock
fwait
jle
dec
pop
add
add
push
jp
shlb
add
movsb
inc
ret
psraw
lock
push
insl
pop
jge
mov
jmp
andb
and
test
pop
cmp
cld
add
sub
jg
xchg
add
lcall
nop
movsb
in
jmp
add
cmp
jb
jecxz
add
sbb
enter
stc
lcall
push
sahf
jns
pop
cmp
ds
fiaddl
sub
sub
stos
aas
sbb
push
xlat
scas
adc
dec
xchg
mov
icebp
mov
jne
add
pop
pop
test
sub
add
insl
mov
add
lahf
xor
mov
cmp
in
add
mov
add
pop
and
sti
lock
fs
xor
add
cmp
shlb
push
stc
sub
mov
dec
fs
xor
add
fsub
lret
jns
xlat
jno
dec
andnps
xor
arpl
roll
ja
dec
adcl
out
xor
rcrb
insl
and
push
xchg
and
inc
mov
aaa
in
push
fnstcw
sub
jb
fsubs
loop
and
in
es
jo
mov
stos
jnp
loop
add
int
add
cmp
push
adc
lock
jge
or
pop
sub
fs
mov
insl
push
orb
lods
mov
dec
pop
in
add
dec
clc
and
add
push
mov
cmp
lahf
movsl
sahf
push
cltd
pop
test
cwtl
imul
xlat
cs
inc
and
jne
sub
int
cld
sbb
pop
imul
mov
adc
addr16
pop
add
push
add
jg
xchg
xor
add
in
dec
add
sub
lahf
rorl
aas
sub
cmp
jg
add
jne
cmp
test
clc
add
mov
stos
jge
adc
iret
lock
mov
loope
jo
popf
and
mov
push
dec
lods
cmp
pop
orb
xchg
add
mov
dec
or
cld
add
adc
sbb
mov
pop
add
xor
shlb
add
fisubl
jne
lds
test
push
lods
add
pushf
or
or
in
aad
inc
fcomip
push
add
sbb
push
sub
daa
int3
jle
fdivl
ret
sub
popl
jne
lods
push
dec
jmp
insl
add
sub
cmp
daa
xchg
fcmovnb
mov
loopne
push
ret
fcmovb
xchg
add
xor
add
push
subb
rolb
add
xchg
pop
add
inc
mov
lods
sahf
push
add
nop
mov
adc
imul
inc
dec
nop
xorb
push
push
sbb
add
sti
add
lea
xor
cwtl
loop
pusha
adc
test
dec
or
pop
add
out
jp
or
inc
add
sahf
or
cmp
push
add
push
or
dec
sti
xchg
mov
add
sbb
sbb
pop
cmpsb
ja
xor
or
test
insb
add
ja
cmp
popw
sbb
pushf
mov
xchg
or
mov
stos
stos
mov
xchg
add
shlb
dec
das
in
ljmp
add
aad
xor
mov
rorb
and
clc
movsl
jno
add
shll
sub
addr16
lods
add
cmp
mov
pusha
add
mov
jge
mov
aas
dec
jns
dec
sub
aam
loope
adc
insb
and
inc
add
adc
cmc
add
arpl
add
or
inc
iret
lods
stc
mov
add
mov
in
pop
clc
push
fcmovb
pop
mov
add
adc
jmp
cld
stos
sbb
mov
nop
add
test
push
lods
out
dec
imul
jns
mov
jne
cli
pop
xchg
xchg
cmp
pop
dec
loop
add
xor
push
add
mov
or
or
lods
xchg
add
std
repnz
ja
ljmp
call
addr16
xor
adc
daa
cmp
jecxz
ja
jb
mov
add
dec
or
xchg
adc
add
jl
mov
jne
sbb
jno
inc
xchg
mov
imul
dec
cltd
or
inc
mov
adc
dec
div
adc
push
adc
pop
out
sbb
jae
ds
xchg
mov
mov
pop
mov
stc
fisttpll
js
mov
in
adc
sti
shr
sub
sbb
pop
pop
pusha
mov
mov
repz
cmpb
stos
pop
xor
adc
inc
pop
mov
dec
add
sub
ffreep
adc
mov
out
adc
add
int
inc
sbb
sbb
test
popl
cmpsb
sbb
jno
add
or
mov
mov
add
inc
xchg
enter
push
ds
js
das
subb
data16
clc
mov
mov
testl
out
sub
fldcw
add
movsl
loope
sbb
mov
mov
aaa
mov
int3
sbb
mov
movl
push
data16
idivb
ss
add
and
ret
pop
enter
pusha
icebp
sub
mov
insb
scas
mov
add
aam
mov
push
add
jbe
sub
xchg
and
lret
pusha
test
push
push
xor
test
lahf
ds
dec
ja
add
mov
imul
enter
sub
push
xor
movsl
add
xchg
xlat
dec
stc
aam
or
adc
sub
xor
add
push
out
ds
shl
xor
nop
push
lret
pusha
push
pusha
gs
fstpl
cmp
xorl
add
out
movsb
loop
enter
filds
adc
sbb
insb
pop
std
dec
add
and
je
in
pop
dec
cmp
add
xchg
aad
clc
sti
rol
adc
out
sub
mov
add
ds
lret
lgdtl
and
inc
cwtl
mov
dec
mov
adcb
imul
fcmovb
jle
jmp
jp
push
loopne
enter
dec
pop
test
add
sub
cmp
add
mov
lret
movhlps
add
in
into
movsl
scas
adc
sahf
or
mov
repz
cli
pop
mov
mov
jmp
int
dec
mov
std
dec
mov
mov
rolb
pusha
add
ds
or
add
pushf
rcrb
cltd
mov
call
cmpsl
push
jne
std
sbb
fst
lret
or
jb
adc
sbb
jo
inc
ds
shll
fildl
ljmp
outsl
daa
and
jp
je
add
xchg
xor
jb
cmp
ret
push
fldl
sahf
cs
jp,pt
test
adc
lds
add
push
dec
push
leave
bnd
adc
sbb
and
push
mov
xchg
xor
fstl
jle
adc
push
xchg
jmp
jge
cmp
subl
les
sub
mov
out
clc
add
outsb
pop
cld
push
xchg
xor
push
add
mov
dec
add
repnz
sub
imul
adc
add
pop
and
add
jl
aas
dec
push
sub
sbb
ret
mov
push
dec
movsl
std
sbb
push
adc
sbb
bound
add
xorl
add
loope
lods
ss
filds
mov
enter
loopne
sub
add
test
push
push
xchg
mov
inc
lods
add
into
imull
dec
xor
popf
sub
adc
add
inc
mov
dec
rclb
rclb
mov
outsb
jae
adc
pop
ffreep
imul
push
stos
daa
lahf
sub
jle
and
nop
sub
scas
inc
sbb
mov
popf
and
cmp
ja
mov
in
dec
lea
mov
cmp
jp
jae
jbe
das
insb
jmp
push
clc
cmc
leave
inc
push
and
aaa
pop
and
scas
inc
push
nop
add
insb
sahf
mov
push
xor
addl
cltd
or
add
out
pop
xchg
xchg
repnz
fnstcw
xor
add
lds
inc
negb
mov
sbb
add
cmp
mov
add
add
or
lcall
push
fcomi
jno
imul
mov
les
cmp
or
add
or
into
mov
dec
scas
add
lea
cwtl
add
xor
cmp
jne
out
or
jb
adc
sbb
test
cmp
daa
rolb
dec
pop
mov
push
shl
and
xchg
adc
lret
or
movb
mov
ret
ror
mov
pop
add
loope
pop
jmp
in
push
mov
mov
mov
push
flds
ljmp
stos
pop
mov
push
or
dec
fldl
inc
mov
pop
or
out
add
cmp
subb
aaa
xor
mov
add
fwait
rcll
jge
ret
jg
inc
jae
js
mov
adc
add
push
and
movsb
inc
repz
js
xor
es
mov
mov
sub
ficomps
add
test
lock
mov
mov
sarl
or
mov
testb
ljmp
or
es
add
add
add
sub
add
sbb
xor
push
cmp
and
dec
test
test
mov
ret
sbb
fbld
mov
cmp
push
xchg
popa
mov
cmp
movl
dec
xchg
cli
add
ret
rclb
mov
sahf
add
pop
inc
inc
add
and
add
popw
adc
dec
arpl
and
sbb
cmpl
imul
jnp
jle
mov
repz
pop
andl
xor
cld
adc
frstor
jmp
fbstp
shrl
sub
sub
mov
movsl
lret
fisubs
adc
sbb
fwait
jecxz
push
jb
or
push
movsl
rcr
cmc
pusha
ds
add
pop
pushf
lock
bound
and
fdivs
jge
jp
add
fsubs
lret
inc
push
rolb
daa
cmp
and
add
mov
push
inc
pop
mov
mov
shll
mov
stos
inc
add
arpl
aad
das
add
pop
pusha
ja
adc
and
mov
xchg
sub
add
sbb
push
imul
cli
jmp
pop
add
test
repnz
lods
push
add
ficomps
sbb
lods
adcb
data16
mov
ja
test
pop
cmc
stc
push
icebp
jg
push
outsb
rolb
shll
iret
xlat
inc
mov
adc
pop
push
lret
sub
daa
push
sub
and
aaa
jp
enter
xchg
mov
xchg
mov
das
adc
loope
add
add
lods
les
mov
or
repz
lahf
sbb
xchg
mov
rcrl
icebp
xchg
xor
js
sti
jo
jmp
add
jle
inc
adc
inc
clc
clc
cmp
cwtl
mov
mov
fisttpll
pop
add
and
adc
add
in
fistps
add
ret
pusha
or
add
xchg
mov
xchg
xchg
mov
add
mov
jbe
dec
out
cmp
cld
negl
arpl
sbb
addb
call
sarb
adc
cmp
int
or
cmc
ret
xor
xor
imul
add
jo
add
inc
loopne
clc
dec
clc
add
ja
or
mov
add
mov
ficoml
fs
fisttpl
adc
cmpb
dec
ss
fcoms
loop
add
sub
push
lods
mov
pop
loop
out
add
xchg
int3
stos
test
push
jmp
outsl
push
cmp
pop
pusha
imul
mov
es
cmp
pop
lods
mov
in
cmp
in
repz
add
std
fdivs
pop
or
add
adc
scas
jl
add
cmpsb
imul
cmp
sub
add
sbbb
or
or
dec
sub
inc
jmp
add
mov
xor
sub
add
push
add
stos
xor
push
call
pop
mov
dec
rorb
xchg
cmp
inc
sub
lahf
xchg
pushf
and
scas
adc
xor
mov
mov
jo
add
or
adc
cmp
movsb
fistpl
loop
mov
movsl
imulb
pusha
push
adc
xchg
and
add
rcl
add
pmulhw
xchg
aad
out
sub
dec
add
outsl
or
push
add
in
mov
pusha
mov
mov
cwtl
cs
dec
setne
lret
rolb
iret
and
add
push
xchg
out
movl
xor
mov
mov
pusha
push
pusha
das
mov
stos
pop
jne
add
movsl
cmc
or
add
int3
inc
mov
mov
cmp
jl
je
add
push
addl
and
dec
inc
add
outsl
shrb
add
mov
insb
cmpsb
or
aad
cmp
aaa
add
adc
inc
cs
or
add
xor
and
push
pop
jo
cmp
das
outsb
repnz
les
jnp
pusha
and
add
inc
mov
pusha
inc
inc
mov
mov
or
mov
adcb
sub
cmp
sub
insl
inc
movsl
loope
lcall
cmp
arpl
jno
add
push
data16
pop
jmp
fidivrs
add
das
fadds
lock
subb
adc
mov
xlat
out
jg
jmp
cmp
add
mov
add
inc
xchg
mov
cmp
lds
dec
ret
push
add
lret
arpl
or
fbstp
mov
adc
pop
push
lahf
mov
cmpsl
lods
cmc
in
jb
add
out
jbe
cmp
xchg
inc
loope
xchg
sbb
inc
dec
ja
pop
adc
daa
pop
jg
pop
mov
and
clc
add
mov
add
insb
inc
mov
lods
mov
bound
add
hlt
repz
jl
cld
repnz
push
push
aad
frstor
cmp
mov
dec
sub
xchg
dec
mov
sahf
ds
pusha
dec
cltd
ss
jg
xchg
xor
aas
add
adc
stos
out
add
cld
call
jecxz
mov
and
out
sbb
decb
mov
repz
int
inc
cltd
incl
lret
in
ss
outsl
cs
add
adc
in
cwtl
adc
clc
pop
mov
push
mov
mov
ds
ret
loopne
mov
add
dec
xchg
out
mov
add
je
outsb
into
or
movups
jge
arpl
add
in
fidivs
sbb
add
jecxz
fcompl
xchg
add
xor
jmp
xchg
and
inc
frstor
dec
nop
ja
dec
add
sahf
mov
mov
xor
sub
adc
mov
ficoml
pop
xor
icebp
pushf
mov
inc
shlb
sbb
pop
push
cmp
cwtl
add
cmp
xchg
push
pop
mov
gs
pop
or
mov
inc
test
inc
sbb
cmp
mov
clc
xchg
int3
loopne
mov
cmp
ds
push
push
pusha
add
in
fistps
inc
add
shrl
mov
mov
hlt
xchg
add
jno
xchg
sti
mov
idiv
iret
test
sbb
dec
and
add
jmp
cmp
bound
cmpsl
orb
test
xchg
rcrl
mov
movsb
js
je
add
inc
call
add
mov
mov
adc
sbbb
add
and
arpl
cld
fdiv
mov
out
mov
xor
jbe
pop
add
sbb
stos
jecxz
aam
rcl
dec
add
push
xchg
pop
nop
int3
add
jmp
cmp
adc
int3
inc
pop
js
inc
xchg
pop
pop
push
inc
inc
pop
or
add
fadd
es
xor
sub
and
and
str
lahf
push
cmp
jno
inc
add
sbb
faddl
and
mov
xor
std
mov
in
sbb
scas
push
xchg
sti
inc
add
push
stc
push
rcr
jl
jb
push
add
out
add
mov
add
or
loop
mov
lret
cmp
sub
dec
xchg
add
int
fcoml
movl
jno
and
adc
pop
xchg
imul
mov
add
mov
fsubs
es
daa
jg
stos
fwait
jb
xor
pusha
aam
clc
ds
jne
cli
gs
inc
aaa
mov
jg
push
pop
out
adc
jg
jecxz
pop
pop
rcll
inc
negb
pop
sbb
inc
mov
pop
pushf
push
add
cmc
pop
add
cmp
fnstsw
divl
add
mov
add
f2xm1
xchg
pop
dec
jecxz
addb
popa
add
ds
subl
mov
les
mov
jns
mov
push
xor
pusha
repnz
add
frstor
pushf
mov
test
push
js
add
ss
icebp
xchg
gs
and
jbe
ljmp
push
inc
movsb
cmpsb
dec
add
add
pushf
and
fwait
add
sub
jp
dec
into
jno
add
push
loopne
daa
fwait
pop
add
mov
adc
add
addr16
inc
negb
mov
cmpsb
rcll
adc
movsl
test
cli
pop
shlb
lret
ds
xadd
or
pop
add
xchg
mov
add
insb
and
jg
test
loope
add
adc
dec
xor
mov
js
sbb
fcoms
pop
jne
cli
and
popl
jo
ret
cmpsb
and
push
sub
add
adc
aad
xor
test
jl
add
loopne
repz
push
jb
mov
fisubrs
add
lods
dec
mov
push
faddl
cwtl
jo
xchg
popf
stos
mov
aam
add
xor
les
xor
movl
xchg
xor
xor
pop
test
xchg
and
out
cmp
mov
icebp
test
and
mov
add
test
sahf
loope
add
ja
adc
addb
scas
adc
jecxz
add
jl
xchg
adc
add
sbb
add
cmpsb
sbb
add
mov
sbb
adc
les
aas
lds
shlb
inc
cmp
or
cwtl
or
dec
enter
sub
adc
fisubl
inc
push
jg
push
or
movsl
popl
repnz
inc
insl
outsb
jb
xchg
aam
cld
in
push
lahf
mov
add
mov
insl
jo
sbb
movb
cmp
fs
push
insb
cs
mov
jl
outsb
lds
imul
sub
xor
adc
ljmp
or
push
cmp
xchg
add
cmp
jnp
add
repz
xorb
dec
test
repnz
jns
add
pop
add
aas
mov
je
dec
jle
add
pop
js
and
jecxz
pop
ljmp
add
fwait
add
addr16
add
imul
push
test
outsb
pop
test
into
add
in
cwtl
lret
add
repz
jo
sbb
pusha
add
outsl
loope
add
inc
test
add
inc
push
xchg
xor
aad
popa
les
cwtl
dec
mov
add
or
fs
push
pushf
insb
ja
lret
movsl
rcrl
jl
cmp
and
rclb
or
sub
inc
mov
shlb
add
outsl
and
sub
in
movl
scas
fsts
sbb
out
ja
sub
clc
pop
add
mov
inc
and
int3
ljmp
aas
subb
jno
mov
out
add
or
xor
or
imul
adc
inc
push
add
mov
add
ja
clc
add
cmc
add
jnp
push
and
movsb
or
jo
push
push
daa
push
adc
sub
xchg
lock
str
iret
aaa
dec
xchg
loopne
add
sbb
sbb
cltd
inc
mov
cmp
std
sar
into
out
jmp
xchg
and
add
jl
add
in
add
aaa
xor
xchg
loop
addb
and
leave
add
jnp
xor
push
xor
inc
imul
cmc
ja
lahf
rclb
lret
in
or
adc
or
add
insb
pop
movb
add
xor
les
xchg
shll
mov
dec
mov
xor
push
test
fnsave
xor
stc
pusha
mov
cmp
lock
repnz
out
loopne
ret
sub
sub
addb
sub
add
cmc
outsl
jbe
or
mov
in
popl
adc
lock
loopne
ss
lods
imul
arpl
jnp
sbb
ljmp
cli
add
daa
ds
mov
and
es
decl
add
cmp
and
adc
mov
jmp
jmp
shll
out
fimuls
stos
fwait
add
out
int
test
push
int3
or
in
imul
inc
dec
mov
adc
add
jbe
fwait
cmp
cs
push
mov
fisubrs
sbb
adc
pushf
push
into
jl
mov
pop
icebp
jecxz
add
jo
je
and
pop
in
cmp
mov
lahf
sbb
pushf
mov
pusha
cmpsb
add
jle
out
into
or
add
jo
dec
push
data16
jb
lea
mulb
add
xchg
add
movsb
or
mov
push
stc
shr
pop
mov
sub
movsb
dec
add
out
sbb
pop
stos
popf
inc
jne
push
push
out
sbb
pop
pushl
in
add
mov
icebp
clc
push
mov
jne
mov
xchg
add
ja
or
mov
push
inc
adc
int3
xchg
add
adc
mov
rol
jecxz
ss
and
cld
iret
test
or
inc
loop
pop
adc
test
and
lret
movsl
aad
pop
jae
mov
aas
add
push
push
add
xchg
cmp
cmpsb
pop
jmp
insl
add
aad
push
add
aas
addb
inc
aam
mov
cmpsl
insl
les
mov
mov
addr16
xchg
not
inc
jg
add
inc
outsb
scas
mov
add
aaa
pop
xchg
ljmp
mov
or
call
add
mov
lret
and
inc
aas
sbb
jb
jb
sahf
add
rorl
add
jl
fisubrs
mov
add
jns
sarb
add
push
sahf
aad
mov
inc
movsl
or
push
sub
ljmp
sbb
push
incb
insl
jbe
jae
fisubl
test
jns
fiadds
dec
or
xchg
js
ljmp
xchg
xor
push
mov
cmp
mov
pop
push
xchg
mov
ds
sub
sar
sbb
mov
sub
mov
push
and
mov
xor
mov
push
xlat
lahf
imul
loopne
dec
enter
cmp
bound
adc
test
mov
mov
mov
jle
lret
add
xchg
mov
add
into
sahf
lahf
aad
test
add
xorl
cs
test
and
pop
lea
insb
add
inc
subb
push
fwait
dec
push
dec
in
pushf
add
repz
dec
addb
mov
rcll
sbb
mov
and
sbb
xchg
jmp
jl
and
mov
das
push
push
add
mov
out
imul
mov
adc
xchg
jo
or
sbb
add
leave
mov
xchg
add
push
ret
jle
and
add
cwtl
andb
pop
xchg
inc
pop
div
int3
call
add
pop
aad
pop
rcrl
or
popa
sub
fiadds
test
add
xor
mov
sbb
xor
lea
push
pop
mov
lock
pop
dec
fdivrl
test
rcrb
xor
js
add
ret
outsb
mov
xchg
push
adc
jns
out
aaa
jo
addr16
pop
mov
mov
lret
stos
lock
xchg
dec
add
cmp
push
ficomps
cld
out
cmp
fnstcw
jg
push
cmc
push
add
movsb
imul
cmp
mov
lret
fsts
or
push
testb
sahf
loop
mov
stos
add
adcb
add
push
sbb
iret
pop
sub
mov
add
and
movsb
rorb
lcall
insl
js
xor
add
outsl
or
and
sub
mov
scas
mov
ret
aam
dec
sub
add
adc
and
iret
cmc
add
add
sub
int3
cmp
xchg
iret
dec
jb
add
popf
sub
sti
cmp
mov
jl
inc
insb
add
pop
inc
orb
push
mov
rcr
ds
scas
or
iret
add
sbb
sbb
inc
or
aad
xor
test
rol
inc
xor
add
add
test
pop
mov
lcall
xor
lods
add
idivl
mov
mov
cmc
pop
lods
pop
pop
xchg
xorl
sti
outsb
push
imul
jge
pop
fmuls
xlat
add
add
mov
lea
cld
xchg
clc
and
frstor
imul
test
jo
dec
hlt
fiadds
nop
lcall
add
pop
push
mov
lahf
mov
pop
test
jbe
push
out
xchg
in
lcall
popf
call
fldl
add
push
cmp
cmp
adc
pop
addl
cs
jbe
test
mov
popf
sbb
add
adc
mov
addl
popa
cmp
jbe
add
ss
in
push
in
push
imul
stos
lods
stos
popa
jae
sbb
aad
sub
pusha
lock
mov
jle,pn
dec
loopne
add
push
inc
mov
popa
dec
lock
aaa
out
lods
and
jbe
pop
mov
adc
mov
jle
into
pop
push
mov
faddl
imul
stos
or
push
adc
lds
jecxz
inc
lret
push
add
inc
insb
aam
pop
test
add
xor
test
add
cld
adc
data16
jg
add
xlat
xchg
adc
loop
mov
incl
mov
or
loopne
xor
dec
add
jno
mov
out
mov
iret
mov
ret
cmpsb
clc
in
cs
mov
clc
jl
cltd
pop
sub
sbb
js
add
int
add
mov
out
leave
add
xor
icebp
out
push
push
or
xor
xor
into
rol
pop
jae
add
js
pop
in
mov
imul
adc
pop
or
out
shlb
push
lds
jnp
cmp
mov
dec
stos
fimuls
inc
mov
jge
jo
fsub
out
out
loopne
call
and
daa
ret
enter
dec
in
cmp
or
incl
call
dec
pushf
jle
mov
add
jne
gs
sbb
cmp
fstl
xchg
enter
es
roll
add
int
jnp
or
cmp
xchg
les
and
and
jp
lcall
pop
pop
cwtl
pusha
rcrb
cmp
incb
jno
inc
and
insl
ret
nopl
mov
hlt
clc
sub
jecxz
mov
jmp
mov
push
and
out
pushf
sbb
or
mov
dec
bound
stc
add
pop
into
sub
sbb
and
adc
and
je
add
push
ss
mov
sbb
fsubl
outsl
add
inc
or
pusha
jp
adcb
fstpt
mov
int
jbe
lahf
mov
add
das
push
push
push
add
ja
in
mov
xorb
jnp
outsb
dec
xchg
fucomip
enter
dec
and
jecxz
ljmp
lods
dec
aam
adc
xchg
mov
pusha
add
out
mov
mov
push
ret
movsl
jnp
mov
sbb
and
psubusw
jmp
movb
call
mov
add
sub
fwait
aas
mov
aad
adc
out
imul
add
add
or
push
icebp
add
cmp
xchg
inc
lods
add
dec
lcall
inc
cmp
push
xchg
dec
cmp
add
lea
mov
movd
icebp
mov
sbb
sbb
jb
add
push
jns
ds
in
add
shll
xor
dec
es
rolb
ret
push
xchg
sarb
addl
xor
xchg
and
imul
lock
sbb
ds
in
sub
add
rol
mov
mov
and
add
out
lock
cmpb
mov
lock
inc
jle
add
shl
add
lea
daa
sub
fisubs
dec
orps
mov
int
pop
and
lock
xor
add
adc
mov
xor
sbb
mov
mov
pushf
pop
loopne
push
add
push
sahf
out
andb
andb
sub
add
sbb
sub
jp
fiaddl
imul
les
int3
xchg
add
xorl
jp
add
inc
cltd
mov
out
pop
cwtl
inc
rolb
jb
mov
push
inc
lret
icebp
bound
add
dec
or
cmp
ret
mov
mov
cltd
mov
xchg
popa
jl
add
sub
dec
dec
add
fwait
leave
es
jmp
in
and
or
add
movsb
xchg
add
pop
adc
cmp
add
push
cmp
add
cmp
imul
dec
jns
mov
mov
xchg
in
shlb
push
pop
jo
fwait
pop
in
mov
pop
out
add
mov
inc
hlt
push
dec
pop
dec
addr16
stc
cli
jg
xor
scas
add
aaa
inc
movb
xchg
sbb
add
sarb
mov
fstpt
lea
push
mov
sbbl
sahf
shl
add
mov
andb
and
xchg
or
sub
and
cs
or
sbb
sbb
or
cs
mov
cmp
shlb
xchg
movsb
add
sub
add
add
sbb
mov
jl
das
sub
add
add
aas
pop
into
cld
xchg
mov
insb
add
pushf
and
lock
or
cs
adc
popa
and
add
push
push
hlt
lret
add
cld
cmp
add
add
jb
jecxz
add
jle
push
lahf
push
shr
or
and
push
mov
jns
stc
mov
add
cmp
ljmp
or
push
and
test
or
or
sub
push
or
subl
add
push
inc
in
inc
iret
xchg
add
push
inc
pop
add
cmpsb
stos
cwtl
loop
inc
popl
or
je
add
sub
fcmovbe
inc
shrl
pmulhw
outsb
inc
leave
sub
and
in
mov
push
divl
ss
bound
add
and
adc
fdivs
sbb
stos
jge
fisubrs
sub
dec
dec
mov
cmp
add
out
adc
clc
in
or
sub
cmpb
pusha
dec
or
xchg
mov
add
popf
adc
das
or
add
inc
fadds
lods
int3
int
or
xor
shr
push
cmp
push
les
inc
push
push
in
rcr
in
lahf
add
cs
aam
xchg
arpl
mov
jno
movsb
insb
negl
xor
and
cmp
fdivl
stos
add
sahf
xchg
mov
xchg
loopne
ret
lods
jl
mov
movsb
add
das
insb
icebp
mov
xor
divb
dec
orl
mov
add
in
fstl
cmp
lahf
pop
test
rcll
and
sbb
xor
cltd
jne
xor
sarb
add
xchg
xor
xchg
add
xor
xor
xchg
cs
xor
mov
data16
ret
adc
or
or
push
push
add
push
enter
sbb
js
inc
cli
add
fcmovbe
test
xchg
dec
faddl
popf
xchg
push
mov
or
mov
push
mov
mov
xchg
stos
out
pop
mov
shrl
lds
cld
aaa
mov
call
cmp
xchg
and
xor
pop
rcll
sbb
cltd
lods
xchg
ret
sbb
sub
cld
add
cld
shlb
in
or
cmp
fstps
mov
or
subl
push
daa
popf
mov
adc
imul
push
dec
aas
dec
mov
int
sub
cld
jl
outsb
xchg
das
pusha
hlt
push
xor
mov
daa
lock
mov
add
outsb
mov
inc
adc
jmp
out
add
movnti
shl
push
data16
int3
dec
xchg
movsb
inc
mov
out
and
mov
xor
pop
or
adc
jl
je
add
jmp
jb
cmp
add
pop
adc
and
add
pop
ret
xchg
mov
mov
cwtl
dec
loopne
add
loope
int
in
push
pop
pop
cwtl
xor
jo
idivb
mov
jne
dec
loopne
add
inc
clc
xchg
mov
addr16
sbb
jecxz
loope
call
fs
adc
lahf
outsb
stc
xchg
and
mov
popf
call
hlt
or
mov
sbb
icebp
add
lcall
ret
int
xor
mov
mov
add
inc
xor
add
push
movl
stos
out
pop
sub
mov
insl
cmp
repz
scas
add
mov
rolb
pop
test
sti
dec
iret
pop
in
add
xchg
add
sarb
aam
add
stos
cmp
sub
out
nop
push
or
xchg
insb
gs
sbb
sbb
push
mov
lods
push
push
and
fs
jae
push
push
ret
adc
jp
js
inc
sbbl
xor
add
imul
leave
loopne
pop
add
es
mov
add
adc
lahf
out
jbe
xchg
ficoms
lods
sub
sub
rol
jle
mov
in
rcrb
jp
jecxz
add
fldenv
cmc
cmp
mov
mov
incl
mov
cli
push
fsubl
aas
in
jl
imul
push
jbe
frstor
nop
or
pop
andb
in
add
add
or
aam
cmc
xor
fwait
mov
test
subb
ljmp
or
cltd
pop
rolb
aas
in
xchg
push
mov
or
ret
fwait
pop
lret
enter
or
xor
pusha
adcb
nop
pop
rolb
add
push
add
hlt
faddl
sub
jns
cmpsb
movsl
or
into
out
add
mov
js
std
and
cmp
push
mov
add
xor
aad
lret
add
mov
add
xor
test
push
add
stos
push
add
pop
subl
cmp
fsubrp
pop
push
push
or
jg
push
sahf
orb
ja
and
pop
call
push
add
cmp
pop
add
enter
pop
stos
sbb
fists
add
aas
ret
mov
cmp
push
add
inc
mov
inc
incl
mov
push
inc
sub
xchg
pop
add
or
add
dec
push
dec
andb
pop
loop
sbb
cmpsl
sub
pop
cmc
ret
imul
pop
stos
xor
cmpsl
call
orb
jp
daa
pop
jl
sub
push
sbb
push
jb
in
mov
push
add
fucom
dec
push
insl
lcall
push
es
mov
adc
inc
xorl
cwtl
mov
nop
lret
sbb
addr16
dec
test
movsb
sub
sub
pop
mov
popf
and
pop
jo
add
loopne
addb
movl
add
insl
loop
xchg
rclb
dec
mov
push
and
test
cmc
sbb
sbb
lret
sbb
aam
push
xor
lahf
cmp
lods
jns
pusha
dec
and
cmpsb
add
xlat
dec
cld
lret
out
sub
enter
xchg
mov
outsl
data16
add
add
rorb
cmp
cmpl
cmp
cmp
push
or
jp
xorb
lea
jae
inc
sub
fimuls
jo
inc
push
xchg
cmc
mov
jl
cltd
dec
test
enter
bound
jecxz
jb
xchg
cwtl
xchg
cmp
cmpsb
sub
pop
mov
imul
enter
pop
pop
and
mov
xor
arpl
add
xor
test
sar
adc
sbb
fs
xchg
mov
cmpsl
jmp
pushf
inc
stos
ret
lahf
mov
pmaxsw
and
scas
adc
mov
inc
popf
adc
xor
fistl
adcb
ficoml
notb
adc
mov
lds
jns
test
clc
pop
nop
into
xchg
js
or
rclb
sub
icebp
and
push
inc
jge
jno
cmp
sub
int
sbb
add
xabort
arpl
xchg
lahf
bound
lods
fstps
mov
add
inc
sbb
adc
or
test
add
push
addb
lcall
movsb
xor
or
add
lcall
loop
add
cmpl
cmc
std
js
fmul
mov
xor
and
pop
pop
push
fmul
xlat
dec
mov
cmpsb
add
sub
std
mov
adc
cli
inc
add
jbe
xchg
push
data16
add
sahf
cmpxchg
sbb
pop
nop
cmpsb
getsec
fcomi
cmp
jnp
jb
mov
pop
int3
push
jmp
cmpsl
popf
loop
dec
pusha
ja
add
movl
add
lahf
xchg
icebp
push
out
pop
pop
scas
push
lock
movb
push
mov
cmp
nop
lock
cmp
xor
dec
je
into
fidivrs
adcl
fwait
cmp
xchg
pop
lods
jns
inc
add
inc
rcrb
leave
dec
adc
jo
fsubrl
cmp
cwtl
cmpb
int
cmpsl
or
jo
add
insl
jbe
insb
lcall
push
jle
out
sbb
gs
test
arpl
add
stos
jmp
adc
push
in
jns
mov
adc
test
adc
enter
and
add
xor
mov
stos
mov
addr16
dec
push
add
adc
cli
add
test
ret
subl
cltd
mov
sub
mov
adc
xor
test
iret
incb
push
les
scas
mov
decb
int
fildl
cmp
int3
subl
pop
es
mov
add
ret
mov
icebp
arpl
hlt
das
cli
jb
lret
jo
pusha
fcoms
out
xchg
daa
add
fwait
pop
and
es
dec
dec
cmp
add
add
add
pop
pop
jecxz
std
es
out
mov
add
and
clc
add
out
xor
jl
sbb
xor
add
daa
adc
lock
add
cmp
xchg
add
push
leave
mov
loop
add
jl
cmp
std
jae
add
popf
jp
and
sbb
push
icebp
movsb
call
xchg
in
mov
fdivrs
mov
dec
aad
hlt
repnz
add
and
adc
fs
rcrl
fisubs
push
adc
mov
add
inc
inc
dec
xor
fadds
mulb
out
dec
repz
fldt
enter
xorb
data16
int
or
jae
add
push
xor
in
add
cmp
in
mov
pushf
imul
mov
inc
aam
inc
repz
sarl
ret
fcmovnb
loopne
pop
test
adc
sbb
mov
and
decb
scas
cmp
jb
cld
mov
add
cmc
push
inc
add
lahf
mov
aas
fwait
sbb
loope
cmpsb
pop
inc
jno
stc
add
subl
fisubl
xchg
add
es
mov
cmp
dec
cmpsb
mov
iret
jb
dec
xor
stos
mov
faddp
enter
or
fmul
jge
shlb
insb
push
jns
or
jne
jecxz
add
aaa
jmp
lods
dec
outsl
mov
add
jle
push
pop
pusha
lock
pusha
pop
mov
test
iret
push
pop
icebp
mov
push
mov
cmp
mov
adc
add
pop
sbb
rolb
or
repz
mov
xchg
add
cmp
and
or
cmp
popf
clc
cmp
sbb
pushf
dec
aaa
mov
rorb
test
stos
xchg
addb
inc
dec
imul
lods
aas
add
rol
push
xchg
push
inc
add
fldcw
rcll
push
add
rcrl
cmc
jne
adc
in
lds
add
jno
or
jbe
test
ficompl
inc
loopne
addb
adcb
aad
fcomi
jno
add
test
rclb
push
mov
xchg
sbbb
enter
sbb
out
lock
popa
jno
imul
push
lds
mov
push
inc
out
jecxz
cmp
mov
and
mov
sbb
push
fisubs
loop
repz
sub
insl
add
adc
nop
mov
mov
fs
add
sub
pop
ror
sbb
sub
jns
jg
add
loopne
push
dec
or
lock
mov
jecxz
adc
imul
inc
nop
pop
dec
jno
pusha
dec
pop
add
push
jbe
pop
imul
dec
push
sub
add
xor
sub
out
lock
jl
rorb
pusha
sbb
out
xchg
mull
sbb
push
and
stos
cmp
fchs
dec
mov
mov
aaa
daa
movsl
jo
clc
fisubrl
adc
out
pop
cld
add
fldz
in
xchg
add
xor
clc
sbb
mov
sbb
jecxz
test
sbb
sub
cmp
cmp
aam
lock
ds
add
in
sub
jge
xchg
and
dec
pop
mov
push
cmp
loopne
or
sbb
jmp
popa
roll
sbb
lret
push
shlb
sti
dec
mov
insl
int
add
xchg
fwait
xchg
xchg
ret
gs
jle
add
push
jne
sub
shrb
mov
rorl
mov
mov
xor
repnz
xchg
and
pop
add
sub
jo
push
lods
add
test
rolb
jne
add
push
inc
dec
in
jle
xor
adc
add
inc
lret
cli
xchg
pop
mov
shr
imul
imul
ret
dec
sub
cltd
push
loope
pop
cmp
mov
dec
nop
jbe
imul
roll
les
cmp
addb
mov
inc
dec
ds
add
roll
sbb
jbe
nop
arpl
add
cmp
dec
stos
mov
mov
jbe
mov
or
cmp
sbbb
push
sbb
jl
dec
jbe
ja
imul
lods
cmp
add
push
lahf
fs
push
ret
adc
aad
hlt
gs
les
add
jle
xchg
add
addl
packssdw
jecxz
mov
xor
add
adc
mov
stos
mov
rcll
mov
rolb
jle
mov
pusha
add
icebp
push
inc
psubsb
cmp
daa
repnz
xchg
add
inc
and
adc
sar
or
push
xchg
jmp
repz
aaa
jp
cli
mov
add
push
and
jno
add
jnp
test
nop
cmpsl
add
test
aam
jmp
mov
jg
add
pop
sub
mov
mov
leave
mov
dec
or
jbe
xlat
andl
leave
jmp
dec
pop
das
outsb
adc
jo
pop
int
push
add
mov
push
daa
pop
cwtl
nop
dec
cmp
fmuls
movsl
test
add
fisttpll
add
pop
clc
push
inc
pop
addb
pop
out
sbb
sarl
mov
test
xchg
cmp
into
int
cli
hlt
add
inc
out
rorb
fists
mov
bound
sbb
cmp
mov
lds
scas
mov
fstl
sub
gs
lret
inc
clc
push
add
add
scas
add
or
stc
pop
mov
pop
rol
les
pop
rorb
icebp
lss
lods
and
js
inc
mov
loop
mov
sub
jo
in
push
bound
ljmp
mov
xlat
mov
sub
fs
sub
jns
inc
pop
sbbl
mov
push
or
mov
jmp
mov
add
sahf
cli
rorb
add
ljmp
mov
daa
pop
mov
icebp
sti
pop
cmp
add
in
jmp
add
ja
imul
cld
jp
movb
popf
mov
mov
pop
pop
add
push
pop
add
repz
inc
adc
inc
and
loopne
aas
movsb
sub
xchg
push
mov
jmp
sbb
lods
add
mov
mov
pop
jecxz
rol
xchg
mov
mov
inc
lea
imulb
xadd
rolb
inc
mov
jmp
add
lret
call
out
dec
mov
mov
or
aad
enter
roll
shrb
or
mov
out
test
add
clc
xchg
push
add
mov
jg
mov
and
mov
test
outsb
popf
or
add
add
into
mov
jo
cmp
jbe
xchg
add
fldl
ds
cmpsl
outsl
dec
and
clc
loop
add
ljmp
jl
loope
add
jge
sub
imul
push
inc
fmull
add
das
or
loopne
int3
sub
fwait
mov
adc
cpuid
scas
pusha
in
mov
cmp
test
pusha
adc
lock
sarl
nop
and
cs
pop
and
jae
add
pop
mov
jl
add
mov
test
roll
bound
or
mov
sub
in
lods
jmp
add
iret
xchg
push
pop
repz
mov
push
mov
mov
push
add
push
inc
mov
add
push
cmpsb
pop
add
mov
push
mov
cmp
icebp
pop
mov
jle
add
dec
outsl
cmp
push
pop
push
mov
fidivrs
in
mov
add
clc
sbb
out
pop
pop
push
jg
stc
dec
leave
imul
mov
loope
hlt
sub
subl
push
jns
jl
rcr
pop
filds
sub
std
aad
push
xchg
add
idivb
jo
add
sti
mov
push
in
xchg
aas
add
mov
push
dec
jle
add
jno
popa
in
xchg
mov
add
mov
sbb
rol
pop
je
add
dec
mov
aad
dec
pop
loopne
pop
add
mov
stos
xchg
dec
mov
push
sub
iret
sbb
cld
mov
or
in
and
lods
mov
pop
lcall
fidivrs
movsb
movsl
jbe
in
and
pop
mov
js
xchg
xor
fisttps
mov
inc
fwait
into
pop
sub
or
add
xchg
scas
daa
jp
pop
jg
loopne
sub
dec
pop
addb
dec
adc
lret
cs
shl
add
ret
repz
mov
jno
jg
fisubrl
mov
in
mov
ljmp
inc
int3
cwtl
add
out
mov
mov
add
aam
std
int3
dec
mov
scas
cli
les
sub
in
cmp
dec
xor
adc
shlb
das
or
into
inc
jno
daa
add
int3
add
jb
add
and
js
adc
xor
add
test
in
sub
add
cli
push
xchg
jb
sub
dec
pop
dec
add
adc
inc
dec
or
out
cli
adc
lret
mov
hlt
cmp
aas
jnp
push
divb
push
jg
es
mov
xor
pushf
jo
jnp
mov
and
add
pop
cmp
jecxz
inc
mov
addb
jnp
cmp
out
cli
popa
ret
mov
ljmp
xchg
inc
lret
ret
mov
push
add
inc
jae
xor
add
push
loop
out
cmp
add
xor
jns
inc
add
pop
call
cmp
adc
push
sub
les
jb
cmp
add
add
add
loop
aam
out
or
or
add
jle
std
lea
mov
rcrb
inc
jno
loopne
loope
and
pusha
lods
sub
and
call
xchg
ljmp
dec
aaa
test
movsb
roll
jb
mov
mov
lret
or
pop
pop
add
cmp
insb
ss
dec
cmc
sbb
and
mov
cmp
orb
sti
jae
push
lock
xor
nop
andb
add
lahf
dec
sbb
addr16
push
jno
mov
jge
rcr
fiadds
mov
out
add
mov
pop
inc
mov
xor
inc
jo
and
push
add
leave
loop
lsl
shlb
xchg
jg
es
leave
add
andl
mov
pusha
fdivs
add
test
jg
xchg
lea
xchg
add
pop
adc
sub
stos
sub
sbb
add
and
jns
inc
mov
mov
mov
hlt
rcrl
add
es
dec
dec
pop
pushl
testl
aam
or
xor
add
pop
mov
cmp
push
scas
mov
insl
add
into
xor
nop
mov
push
mov
orb
pop
add
dec
mov
add
push
cmpsl
jmp
cmp
dec
js
add
test
xor
mov
pop
fsubrl
ss
daa
push
pop
cld
sti
and
loopne
aas
dec
rcrl
inc
and
or
popa
pop
mov
dec
sahf
aad
cld
outsl
es
enter
mov
in
mov
ret
sub
das
cmp
lret
dec
icebp
add
add
ret
ja
add
xor
cmpsb
add
pop
dec
or
pop
cld
or
test
test
xchg
lahf
sahf
sub
add
mov
clc
dec
add
push
outsb
addr16
mov
cmc
mov
jecxz
out
gs
push
push
je
loopne
jp
loopne
push
or
sub
jmp
sbb
add
stos
cmp
xchg
xchg
pop
mov
sub
sar
into
or
push
fldt
adc
mov
sbb
hlt
and
scas
or
and
jbe
push
push
mov
out
cmp
stos
add
gs
sbb
pop
xchg
test
ja
adc
popa
add
orb
push
add
jae
mov
mov
push
sbb
rorb
push
cltd
hlt
fiadds
jmp
mov
push
sbb
lret
xchg
inc
addb
mov
xor
cwtl
loop
adc
leave
add
mov
stc
fildl
fsubrl
aas
lret
add
je
cmc
adc
push
ds
mov
push
cmp
adcb
cmpsl
xrelease
adcb
add
mov
repz
push
push
cmc
mov
add
push
lahf
cmp
cmp
cs
jecxz
add
imul
subl
xchg
pusha
sbb
xchg
cmpsl
mov
loopne
xchg
pop
clc
add
pusha
and
decb
cmp
cmc
ret
andb
adc
jp
sub
add
repz
push
cmp
jl
xchg
sub
jno
fstpl
out
call
xchg
inc
cmpsb
push
add
sub
jle
pushf
pusha
add
insb
xchg
cmp
inc
daa
push
add
clc
xlat
push
xor
add
iret
add
inc
das
insl
adc
cmp
xor
add
jne
lea
sbbl
mov
jle
sahf
jno
icebp
addl
add
test
call
push
into
inc
adc
rcl
add
hlt
rorb
popf
add
fs
fmuls
movsb
ret
push
pusha
push
dec
push
or
push
mov
or
add
inc
sub
mov
push
xchg
pop
scas
add
jle
lcall
rorb
jno
xor
aaa
add
and
leave
dec
jae
jge
push
push
movsb
add
adc
cld
mov
sub
fs
or
andb
les
adc
iret
add
insb
add
sub
add
cld
je
adc
hlt
cmp
aas
pop
in
jl
pusha
es
and
decb
sub
add
jge
mov
or
mov
int
pusha
sbb
sbb
lret
sbb
cmp
or
pop
push
mov
dec
add
or
add
inc
push
ljmp
loop
push
push
pop
out
add
lret
in
hlt
orb
push
mov
ljmp
and
add
adc
cwtl
sbb
mov
add
imul
pop
add
outsb
dec
popf
jns
ds
add
mov
cmpsl
add
test
loopne
mov
les
push
and
dec
lret
inc
mov
xchg
xor
pop
cmpsl
clc
stos
lods
inc
loop
lcall
xor
sahf
jne
nop
push
outsl
dec
fcmovbe
call
bnd
into
cwtl
jnp
lock
pop
push
outsl
les
daa
mov
adc
in
loopne
and
lock
data16
rcrb
rorb
aam
lahf
add
sub
mov
add
les
adc
adc
cmp
add
cmp
sub
fmulp
rcrl
jns
xor
jmp
cmpsl
in
mov
push
adc
sub
es
mov
dec
push
jmp
rolb
leave
shlb
add
aaa
std
cld
jbe,pn
add
xor
mov
enter
mov
push
into
nop
mov
dec
std
pop
and
push
xor
ret
push
scas
lcall
xor
pop
enter
andl
add
mov
fdivs
dec
ja
nop
sbb
stos
mov
or
es
imul
sbb
mov
lret
push
cmp
mov
loopne
pop
add
mov
scas
and
add
shlb
cli
aad
mov
dec
pop
sub
sub
mov
jnp
or
movsb
addb
lods
cmp
mov
bound
sub
repnz
mov
movsl
into
out
add
inc
mov
push
dec
mov
movsl
mov
roll
lods
sbb
push
adc
rolb
les
pop
add
roll
out
in
xchg
cmp
adc
mov
pop
add
int3
mov
out
js
add
rcrb
mov
add
out
fisttps
inc
jge
pop
outsl
xchg
and
movsb
mov
xor
add
fldenv
xchg
bound
insb
test
out
sub
pop
mov
movsb
les
push
out
add
mov
jl
add
push
out
add
xchg
dec
jo
lcall
incl
mov
pop
add
mov
das
xchg
push
ja
adc
adc
or
ficomps
int
mov
mov
or
cmp
add
je
adc
pop
mov
add
cwtl
push
cs
nop
add
push
int
shrb
pop
sub
push
mov
ljmp
sahf
lock
add
dec
jb
adcb
xchg
je
dec
addr16
mov
out
adcb
sub
mov
loop
hlt
cmpb
cmp
int
cld
push
sbb
add
mov
insb
in
fcom
push
addr16
push
push
rorb
add
sahf
popa
aas
popa
sarb
fwait
lret
fbstp
xor
push
inc
or
dec
loope
push
add
push
shl
roll
xor
jp
mov
inc
push
rol
out
add
pop
pop
sub
add
loope
dec
push
gs
add
leave
lea
dec
loopne
add
add
call
add
dec
lret
mov
add
xchg
movsl
hlt
adc
sbb
add
mov
xlat
ret
cmp
sbb
mov
xor
inc
xchg
ljmp
out
mov
movsl
pusha
mov
jbe
inc
add
loope
filds
add
and
clc
cmp
sub
ja
or
scas
mov
jo
jne
and
mov
push
cld
add
insb
dec
inc
clc
ja
mov
dec
test
and
cmpb
xchg
mov
jmp
push
shl
mov
inc
cwtl
sub
add
or
add
movsl
das
jle
sbb
jne
loopne
jno
add
mov
out
bound
sub
shrl
add
mov
aam
inc
packsswb
fs
data16
dec
hlt
ds
loop
and
dec
enter
dec
push
add
dec
xchg
push
pushf
add
loopne
push
xchg
jno,pn
in
mov
mov
xlat
lds
fwait
add
int3
leave
add
jns
andl
ret
and
add
adc
and
xchg
testl
jnp
cli
cwtl
sub
lods
lcall
add
pop
test
fsubrs
pop
ja
sbb
push
lret
xor
or
cwtl
xchg
into
adc
add
repz
pop
mov
inc
pop
scas
push
enter
dec
pusha
add
mul
mov
lods
push
pop
lea
and
adc
add
mov
jo
add
sbbb
pop
inc
add
jae
lock
daa
add
push
push
pop
das
fs
xlat
ret
sub
adc
roll
stos
add
push
pop
sti
repnz
test
loope
fs
aaa
xlat
fists
rclb
bound
xor
xor
in
outsl
jl
add
xchg
adc
add
add
add
pusha
in
adc
jl
add
inc
cmp
add
arpl
pusha
jg
pop
xor
sub
enter
add
mov
cmp
ret
mov
jge
mov
std
js
dec
mov
push
xor
mov
pop
ljmp
loope
loopne
repnz
call
and
cmp
ds
ret
lods
push
and
js
es
nop
pop
mov
cmp
movsl
mov
ret
cwtl
or
inc
xchg
aaa
cmc
pop
inc
and
enter
pushf
out
inc
xchg
jo
sarl
iret
pop
adc
sbb
aam
das
cwtl
scas
push
loop
add
and
cli
stc
mov
jbe
outsb
jne
sbb
cmp
stos
mov
add
push
mov
int
aam
cmp
cmpb
mov
inc
aaa
insl
dec
bound
test
cmp
iret
scas
xor
xor
sahf
loopne
mov
inc
add
cmp
ret
pop
add
pop
jnp
mov
sub
fistps
cmpl
lret
pop
imul
sbb
xchg
add
mov
push
jmp
mov
add
xchg
lock
push
notl
add
mov
lcall
xchg
or
add
mov
lea
xor
negb
cmp
adc
mov
mov
iret
pop
jp
std
mov
add
cmpsl
dec
mov
xor
cmp
adc
xchg
test
xor
mov
dec
pop
rcl
push
xchg
sub
dec
push
aad
or
add
popf
ja
ror
inc
add
mov
add
push
sub
sub
mov
add
sti
jb
push
nop
xchg
pop
sahf
pop
dec
mov
inc
sub
test
loopne
cs
or
movb
cmc
in
pop
rclb
add
rcrl
cwtl
js
xor
cld
test
mov
and
add
cmp
sar
pop
pop
roll
nop
aaa
sbb
pop
sarb
into
popf
mov
push
inc
imul
hlt
jbe
sub
add
mov
rolb
pop
fldenv
pusha
adc
rcrb
mov
add
lds
xchg
fadds
mov
iret
hlt
add
dec
test
inc
xor
movsl
adc
and
mov
add
test
cli
jmp
cmp
mov
ljmp
movsl
shlb
pop
mov
fcomi
push
xlat
add
mov
mov
inc
xchg
add
addb
cltd
mov
rorl
inc
xchg
pop
add
mov
rolb
fistpll
sbb
popa
lods
jl
add
ja,pt
sbb
jae
test
mov
mov
pop
loopne
xor
add
popf
js
mov
pusha
add
jp
popa
jg
divb
dec
add
test
lcall
sub
gs
mov
sbb
or
add
test
ds
nop
fadds
aad
bound
mov
xchg
ds
xorb
leave
add
jns
outsl
out
and
pop
and
fstps
cmp
sbbl
cmp
dec
add
cmc
flds
leave
enter
adc
ja
and
nop
push
push
insl
nopl
adc
call
xor
shlb
add
test
push
clc
mov
add
adc
xchg
cmpsb
mov
dec
pop
inc
test
pop
jge
jl
xor
outsb
add
jae
dec
push
nop
adc
mov
pop
call
sbb
cmp
fwait
or
inc
fmul
sub
orl
jno
cmpl
add
lret
cmp
pushf
mov
xlat
add
jbe
stos
push
mov
call
stc
add
mov
sbb
jns
inc
dec
or
adc
add
fsubr
inc
test
addb
jge
cwtl
sbb
mov
add
pop
push
cmpsb
jle
fbstp
pop
cmp
rorb
adcb
push
dec
xchg
stc
adc
or
inc
add
mov
loopne
sub
add
and
dec
dec
push
mov
popa
mov
daa
iret
pop
mov
adc
inc
cmp
nop
shl
mov
sbb
rorb
mov
cs
sbbl
mov
and
in
dec
add
xor
jo
cmp
cmc
insb
lods
sbb
mov
or
icebp
add
dec
push
pop
xchg
lret
lahf
in
or
pop
push
lods
cmpl
push
cli
ss
mov
push
mov
pop
aas
jl
jbe
ja
cmp
jb
int
subb
or
decb
pop
add
mov
pushf
testl
cli
cmpps
sbb
das
pop
movsb
int3
mov
int3
loope
pop
add
in
and
and
scas
cmp
xchg
sub
cmp
sti
push
je
in
loopne
adc
dec
push
clc
fwait
addr16
lock
cmp
or
hlt
pusha
sahf
out
mov
sub
add
sbbb
pop
popf
nop
dec
cmp
add
adc
lret
imul
inc
sbb
adcl
in
lret
adc
insb
popf
rcrl
add
call
mov
xor
mov
sbb
add
arpl
jge
or
and
mov
sbb
adc
inc
aaa
mov
jge
add
jmp
jmp
add
and
inc
test
push
add
sti
jg
clc
or
xchg
in
movl
testb
add
psubusb
bound
pop
aas
add
lret
das
in
add
stc
lds
inc
cmp
push
rolb
jle
sub
push
hlt
fwait
dec
mov
and
icebp
rcrb
outsb
pop
or
jg
clc
imul
inc
push
adc
xchg
je
push
dec
rolb
mov
rcll
push
outsb
add
or
xor
mov
dec
pop
and
repnz
cmp
mov
pop
in
add
add
aad
mov
mov
add
xor
in
repnz
and
dec
mov
add
addb
les
repz
pushf
add
mov
push
scas
in
and
fstpt
ss
js
popa
int
add
inc
inc
cmp
nop
call
pop
or
subb
pop
test
mov
stos
cld
or
mov
sub
add
or
or
add
and
data16
adc
jne
jb
setae
or
mov
dec
ret
lea
sub
cltd
xchg
add
and
push
xchg
enter
sti
outsb
insl
scas
and
add
idivb
ret
scas
and
mov
adc
addb
lea
ss
ret
sub
cmp
mov
repnz
pop
push
inc
xchg
dec
fnstcw
add
jle
scas
lock
xor
add
sbb
push
loope
fwait
inc
xchg
xor
add
fbld
add
in
js
cwtl
cmp
and
repz
mov
jnp
add
push
lcall
cld
out
push
mov
shlb
add
cwtl
cmc
lret
jle
add
and
cmpsb
or
inc
andl
lods
sbb
bound
fidivrs
out
sti
mov
add
out
adc
xchg
push
lahf
inc
repz
fdiv
xchg
jp
in
xchg
inc
mov
push
ja
push
call
mov
xchg
pop
jle
pop
andl
mov
push
or
dec
cmove
and
lock
add
push
std
pop
or
int3
inc
popf
jno
add
push
sahf
ret
cmp
pop
add
ret
test
insb
add
loopne
sidtl
inc
xor
roll
jb
shlb
cmp
cmp
xchg
loop
add
ljmp
mov
add
mov
pop
lahf
or
add
mov
cld
pop
add
popa
mov
daa
lods
xlat
add
sbb
inc
and
add
pop
pop
or
push
pop
jmp
mov
and
pushf
dec
add
xchg
pop
add
inc
jecxz
jnp
sbb
int3
mov
cmp
sbb
idiv
add
add
pop
loopne
aas
nop
adc
add
fdivrl
addr16
lods
mov
fadd
xchg
mov
xchg
loope
and
outsb
xlat
jge
repnz
scas
jae
jl
sub
jne
ret
pop
add
test
pop
cmp
js
xchg
mov
pop
pop
rorb
orb
push
test
cmp
and
dec
push
mov
adc
pop
pusha
repz
lods
adc
dec
add
mov
jp
loopne
rolb
enter
mov
push
sub
xchg
addb
jno
imul
das
mov
test
adc
jmp
adcb
mov
loop
add
loopne
mov
iret
rolb
out
popa
popa
xchg
popf
xor
push
shlb
shll
push
cmp
pop
jne
pushf
rol
in
clc
xor
xor
jl
mov
fstpl
movl
in
lock
mov
shll
mov
out
loope
sbb
sahf
or
lahf
aad
popa
leave
jnp
cs
add
and
aaa
fstps
out
or
cmp
fisubl
xchg
cld
push
lret
hlt
in
scas
xorb
mov
mov
je,pt
je
add
outsb
inc
scas
cli
cltd
add
dec
pop
les
les
mov
mov
sbb
lods
pop
cli
mov
mov
xor
js
jbe
inc
cmpl
inc
pop
mov
in
jno
add
mov
sti
mov
jo
data16
bound
repnz
mov
add
push
lea
ja
push
add
sarl
ret
mov
dec
movl
pop
and
iret
dec
sub
jle
xor
and
push
and
in
pop
pop
fadd
push
sbb
xchg
sahf
mov
xchg
adc
out
lods
outsl
cld
out
add
ja
dec
add
js
sbb
push
popa
add
clc
inc
mov
pushf
lret
mov
shrb
es
je
mov
or
iret
xchg
and
rorl
roll
xchg
hlt
clc
roll
pop
mov
lea
sbb
xchg
cmc
loop
idivb
add
faddl
das
xor
add
inc
add
mov
insl
push
or
ja
cmp
lods
stos
iret
sub
add
arpl
push
cmc
jg
out
sub
adc
add
inc
insb
aad
sbb
sahf
cmp
cmc
xchg
jge
adc
cltd
cmpsl
repnz
fnstsw
adc
pop
rclb
je
xor
sbb
inc
call
inc
xor
and
sub
mov
lock
popa
adc
test
inc
sub
arpl
add
mov
mov
add
in
lock
mov
jp
jge
clc
add
ret
cli
jne
xchg
push
addb
inc
add
std
in
xorb
lahf
out
jns
push
jle
adc
popa
cmp
cmp
sbb
dec
add
mov
add
pop
lret
push
jnp
add
bound
pusha
jecxz
in
scas
jl
jbe
adc
add
call
and
cli
mov
add
andb
pop
shl
xorl
aas
mov
xchg
insl
lock
add
sbb
dec
cmp
fstps
pop
scas
movsl
add
test
xor
add
sub
and
xlat
std
subl
push
jne
mov
xor
sbb
imulb
mov
add
jns
scas
xchg
xor
add
inc
xor
imul
ret
cmp
push
xlat
pushf
adc
test
jmp
sbb
or
fistpll
out
push
rol
sbb
aas
jnp
sub
push
aad
out
xor
add
mov
sub
loop
jmp
outsb
or
mov
inc
dec
cmp
cs
or
aas
movsb
mov
xor
ljmp
dec
pusha
dec
add
aas
or
cld
scas
xlat
xchg
add
jb
popa
ret
add
les
add
dec
fwait
sti
pusha
mov
js
idivl
mov
sbb
lods
inc
add
into
mov
cld
mov
add
pop
push
mov
mov
das
dec
push
pop
ss
mov
stos
jle
xor
ja
testb
test
mov
push
cltd
add
or
mov
popf
add
negl
test
cmpsb
mov
loope
insb
pushf
add
jae
push
addb
lock
mov
test
inc
sbb
sub
addr16
push
jo
add
inc
lret
lcall
xchg
cli
pop
xor
dec
hlt
cmc
add
jmp
or
mov
lods
aaa
lea
andb
ret
ljmp
jp
push
test
jg
sarb
mov
push
into
add
add
sub
jle
push
jne
fmulp
clc
add
cld
mov
subl
stos
lock
and
cmp
or
sbb
xor
les
xchg
jp
fists
rcll
or
adc
cld
or
add
movsl
sub
add
cmpl
rolb
dec
xchg
inc
popa
sub
popf
sti
das
mov
je
pop
adc
dec
pop
out
adcl
add
add
mov
add
mov
xor
xor
jle
ja
imul
lock
mov
mov
add
daa
sub
mov
out
add
flds
xor
dec
cmc
mov
add
insl
pop
mov
data16
cwtl
mov
jbe
mov
mov
add
test
fldt
loope
fcomps
ret
lods
sbb
arpl
sarb
pusha
xchg
push
push
jge
rolb
push
insl
aam
bound
add
xchg
daa
and
pop
mov
test
push
adc
mov
mov
cmp
sbb
sub
rorl
scas
mov
or
lock
xor
out
test
divb
push
outsl
popa
rclb
js
add
cmpsl
shll
aam
in
add
or
testb
nop
std
rolb
adc
shlb
dec
xor
js
xchg
test
loopne,pt
pop
fadd
inc
cmc
fildl
es
aad
cmp
jbe
sub
in
add
in
js
jg
jb
fs
mov
lods
out
inc
add
push
stos
aas
xchg
add
push
sub
or
push
mov
xor
xor
testl
addb
sbb
dec
sahf
aam
add
testb
pop
or
nop
cmp
xchg
xchg
sub
imul
dec
mov
push
jg
xor
jb
aam
and
xlat
pop
ss
inc
ret
test
negb
hlt
mov
add
stos
aad
incb
push
orb
fnstcw
add
sub
outsl
outsb
jae
hlt
fstl
aam
sbb
stos
mov
sub
std
add
arpl
test
adc
adc
outsl
scas
testl
push
mov
mov
insb
or
test
pop
xchg
incl
or
outsb
pop
jnp
add
dec
ljmp
xchg
adc
push
shll
lock
mov
sbb
dec
fdivrp
test
rclb
cmp
sub
pop
pop
inc
dec
add
rcrl
mov
sarl
js
add
adc
add
dec
pop
scas
pop
jl
enter
push
dec
mov
movl
cmp
les
gs
mov
pop
mov
cmpsb
add
dec
leave
inc
add
aad
aam
add
lret
add
mov
int
jnp
jb
pop
jbe
and
repz
addr16
cmpsl
in
push
negl
push
std
sbb
notb
scas
pusha
mov
or
and
jp
aad
movsl
sub
mov
fstpl
xchg
adc
add
subb
jmp
pop
xchg
inc
jbe
add
fldcw
in
cmp
addl
fdiv
or
sub
sbb
jae
xor
push
cmp
das
push
cmp
imul
xor
sub
cmpsl
cmp
add
mov
movsb
mov
imul
push
sub
lret
shlb
and
sub
rcrb
cwtl
orb
jle
sbb
pop
es
xor
mov
fildll
sbb
push
insb
push
loope
rol
call
imul
jmp
mov
add
inc
push
call
shlb
and
xchg
mov
or
add
imul
push
movsb
xor
clc
add
sub
dec
test
inc
mov
leave
xor
punpcklwd
push
or
push
pop
lods
and
das
sub
push
xchg
in
aaa
jnp
cmp
and
sbb
add
mov
sarb
int3
add
sbb
xor
add
gs
lcall
mov
pop
lods
dec
add
lcall
sub
popa
pcmpeqd
sub
iret
xchg
sbb
mov
aad
pop
jg
jmp
subb
lcall
xchg
push
jae
mov
mov
xchg
adc
inc
or
inc
xor
and
jne
mov
pushf
stos
or
fnstcw
add
mov
pop
mov
fmuls
jge
test
das
aaa
mov
push
loopne
pusha
shlb
push
clc
pop
push
dec
orb
and
sbb
adc
in
jo
mov
push
xchg
popa
cs
popf
dec
push
push
and
jne
xor
in
fcoms
jle
mov
or
xor
mov
add
mov
sarl
into
sarb
adc
repnz
fdivl
mov
push
aam
loop
aaa
inc
andl
pop
int3
shr
jo
flds
shl
sub
xchg
add
cmp
cmp
adc
stc
xor
sahf
sti
int3
in
add
mov
push
fistpll
in
es
mov
add
loopne
cs
adc
out
pushf
imul
jnp
cmp
add
xlat
push
rolb
outsl
push
mov
daa
cmp
inc
or
filds
in
mov
add
mov
movl
xchg
popa
mov
xchg
aas
out
sub
test
inc
leave
inc
pop
roll
dec
fwait
sub
and
adc
pop
sub
adc
ret
lret
adc
js
nop
mov
dec
cmp
lea
xlat
xchg
jbe
outsb
or
inc
push
test
icebp
and
dec
inc
xor
sbb
cmpsl
or
add
jg
push
pusha
aad
add
xchg
fwait
add
fildll
add
xor
cmp
push
sbb
jns
fsubl
aaa
push
mov
pop
pop
das
popa
lock
pop
int
sbb
add
in
push
lds
and
mov
pop
gs
or
lods
adc
sbb
cmpsl
push
and
aam
jne
add
jl
adcb
add
add
mov
cmp
pop
fidivrs
clc
add
jecxz
lock
add
sbbb
out
add
xor
addb
lods
pop
add
push
xchg
adc
sub
sbb
out
jae
rcrb
mov
psrlq
and
add
rolb
cmp
inc
cmpsb
or
imul
filds
xchg
loope
pop
xor
sbb
shl
push
add
cmc
add
imul
jmp
daa
loopne
arpl
sahf
mov
add
out
fsubrl
xchg
sbb
mov
fsubr
stc
push
pop
pusha
test
out
hlt
add
test
add
or
xor
rcr
mov
stc
add
mov
in
push
xchg
push
jbe
dec
insb
add
sbb
bnd
mov
jns
test
mov
add
xchg
sbb
mov
icebp
or
stos
pop
add
andb
cmp
js
fdivr
repz
pop
xor
sub
adc
xor
enter
in
mov
pop
and
gs
les
nop
xor
add
cmp
lods
ret
fmuls
lret
mov
aas
push
xchg
add
push
jp
cmp
mov
add
adcb
shlb
add
mov
mov
int3
add
or
cmp
popa
add
cmpl
in
sub
sub
jo
or
xchg
dec
shll
jb
xor
adc
or
mov
or
inc
or
cmpsl
sbb
orb
fisubrl
fsub
add
push
dec
add
or
and
clc
loop
lea
hlt
das
inc
jo
push
shlb
orb
shl
or
add
in
stc
add
mov
insl
add
ret
adc
pop
xchg
push
stos
jno
in
mov
add
shlb
shrl
xorb
bound
jecxz
movsl
add
adc
xlat
mov
ret
lods
int
push
filds
mov
movl
rcrl
shlb
in
add
aam
push
fstpt
xchg
cmp
pushf
int3
lock
xor
enter
test
mov
mov
push
jns
add
inc
test
das
out
sub
mov
add
xchg
sub
rcrb
inc
mov
pushf
ret
hlt
ds
add
jp
push
cwtl
xchg
xor
jle
adc
xchg
hlt
rolb
sbb
mov
in
shr
adc
mov
add
ret
pop
and
cs
push
and
dec
addb
pushf
repnz
cmp
jg
rorb
stc
push
push
mov
ficoms
sbb
sub
bound
fs
mov
inc
scas
jecxz
ljmp
stos
xchg
popa
fistl
mov
push
mov
xor
pop
or
mov
jae
add
mov
pop
hlt
aaa
add
aad
push
loopne
lea
cmp
outsl
not
add
dec
inc
push
add
iret
fwait
rorl
cld
ficomps
fdivrl
cmp
idivl
pop
roll
push
sbb
mov
cltd
jae
inc
sub
pop
in
pusha
out
cmp
adcb
xor
dec
dec
adc
cld
inc
rolb
addr16
test
add
das
out
hlt
sbb
push
sub
xlat
aaa
xor
rcpps
sub
bound
jne
fwait
and
pop
and
jmp
pop
or
int
iret
inc
sbb
mov
push
add
mov
push
dec
jns
pop
lea
add
stc
add
xchg
cwtl
add
repnz
mov
pop
lret
add
lcall
add
sbb
repz
pop
das
sub
mov
imul
negb
loop
pop
mov
mov
xchg
add
sub
in
lock
add
lret
insb
and
shl
push
aad
mov
ffree
add
push
inc
add
xor
loopne
pop
xor
addr16
adc
test
loop
sbb
mov
nop
cmpsl
outsl
add
shlb
call
fldl
arpl
or
inc
sbb
test
mov
enter
iret
jb
add
lock
fdivs
add
aaa
aas
js
adcl
aam
test
inc
push
add
int3
clc
xor
mov
jp
add
jno
in
push
cmpsl
dec
std
mov
add
scas
js
add
add
cwtl
shl
aas
aas
mov
cmpl
push
cmc
add
stc
notb
addb
push
inc
push
sbb
sub
pcmpeqd
xchg
xchg
xor
adc
cmp
call
iret
jno
stos
mov
inc
fstp
pusha
add
add
jmp
in
shrl
add
outsl
mov
imul
je
add
out
inc
cmp
push
push
xchg
add
loope
cltd
mov
add
xor
gs
faddl
loope
cmp
clc
sbb
push
pop
mov
lods
add
out
and
dec
or
add
push
rclb
scas
ret
jne
dec
add
xchg
cmp
xchg
enter
mov
lods
pop
mov
and
jl
adc
aam
push
add
adc
cmp
test
out
push
dec
jecxz
cltd
push
jle
sub
cmp
sub
push
inc
cmp
pop
in
cwtl
icebp
aad
add
stos
and
daa
or
insb
ja
fnstsw
shll
mov
mov
adc
hlt
outsb
cmp
pop
sub
push
fldenv
cmp
add
enter
mov
pop
and
aam
jl
icebp
pop
imul
stos
call
fildl
jbe
jecxz
cltd
popa
inc
notb
clc
mov
mov
xchg
add
into
adc
dec
testb
fwait
xchg
adc
lcall
in
gs
xor
mov
adc
xor
test
add
and
cmp
mov
in
lods
cld
loope
xchg
add
pop
xchg
mov
xor
add
test
xchg
rolb
mov
xor
xlat
mov
in
das
ret
jns
jnp
add
jns
xchg
and
in
fsubrs
rorb
cmpb
xor
mov
cmpsl
testl
mov
dec
loope
addr16
mov
and
add
push
aam
pop
popa
lock
xchg
out
adc
scas
and
rcr
stc
testl
or
cmp
outsl
jno
add
jle
int3
dec
pop
or
call
loop
in
dec
add
rorl
mov
pop
add
mov
addb
add
repz
les
add
mov
mov
js
xor
lock
mov
jecxz
add
fcompl
mov
inc
pusha
mov
pusha
cmp
fimull
loopne
push
pop
repz
aaa
imul
or
outsb
cmp
xchg
andb
pusha
sbb
scas
xchg
sbbl
add
addb
and
add
cmp
out
push
ljmp
rcrb
xor
add
xor
lcall
ljmp
aaa
sub
ret
mov
sub
add
rcll
cltd
xor
xchg
pop
loop
cmpsl
jle
add
outsl
inc
dec
js
xchg
add
cld
xlat
insb
mov
pusha
xor
mov
pop
in
mov
rorl
faddp
mov
adc
add
mov
jp
add
int
mov
mov
cmc
arpl
rol
adc
lock
aad
jnp
adc
add
jb
mov
push
xor
lahf
xchg
mov
sub
test
in
out
add
pop
outsl
cmp
mov
inc
add
out
add
js
addb
lods
data16
inc
test
cwtl
ljmp
push
adc
imul
add
pop
fs
out
push
cwtl
stc
aas
lea
add
leave
dec
dec
push
push
and
movsl
jle
or
cli
jp
add
add
and
sub
inc
mov
and
aad
add
mov
cs
mov
xor
inc
fisubrs
repz
in
scas
and
add
in
or
popa
cmp
mov
pop
xlat
imul
xor
testb
in
dec
or
mov
and
jo
sub
shl
arpl
pop
js
ss
add
sahf
pop
xor
enter
add
inc
aad
push
and
enter
sti
xlat
std
dec
add
ds
dec
push
insl
cmp
leave
mov
into
and
inc
arpl
lock
adc
xor
add
loopne
sahf
es
add
dec
movsb
pop
pop
inc
push
cmp
mov
nop
mov
pop
jmp
xor
mov
dec
pop
pusha
cmp
ret
mov
mov
dec
add
in
xchg
lods
add
pop
jp
pop
inc
inc
add
andl
add
mov
sbb
shll
loope
inc
lds
pop
pop
adc
add
add
lahf
stos
stc
add
mov
testb
and
or
andb
sti
add
pop
andl
insb
xchg
add
jns
or
je
mov
mov
push
cltd
shlb
adc
add
xor
sarb
push
lcall
fwait
repz
jbe
or
add
repnz
lcall
test
sub
in
dec
pop
out
testb
pop
mov
ret
popf
ja
es
add
jle
int3
incl
pop
push
add
sbb
add
inc
rol
sbb
jle
push
jae
leave
push
add
cmp
mov
mov
outsb
fidivrl
call
daa
fs
pushf
ja
jo
push
xor
jl
in
imul
roll
pop
fisubrs
pop
aaa
dec
pusha
stos
mov
add
dec
ljmp
xlat
scas
add
xor
push
add
sbb
rclb
out
mov
cli
inc
outsl
push
dec
bswap
jnp
mov
pop
jle
insl
sarl
add
jecxz
pushf
movsl
sti
stos
repz
dec
movl
insl
cld
push
out
add
enter
insb
and
add
in
mov
int3
sarl
pop
mov
ja
push
pop
ss
fucomip
cmp
les
sbb
inc
in
push
push
add
mov
jno
jns
mov
out
scas
xchg
pop
ss
add
mov
ret
scas
xor
repz
jno
pusha
xchg
cmp
leave
or
popl
or
sbb
int3
sub
in
fbstp
stos
sar
add
xlat
lods
cmp
out
inc
fimull
cld
clc
cmp
inc
das
add
add
and
jne
add
mov
loope
sahf
add
cmp
and
jmp
dec
js
adc
aad
xor
negl
cli
xchg
insb
adc
jae
call
movsb
loop
xor
imul
mov
test
add
out
xchg
lret
xchg
lea
cmp
pusha
push
pop
pop
push
or
dec
adc
mov
add
orb
add
push
loope
jno
sti
mov
xchg
mov
cltd
mov
add
dec
sbb
shrl
pop
hlt
int3
cmp
and
xchg
nop
sti
add
or
dec
add
push
cs
pop
push
clc
incb
in
pop
and
xchg
cs
dec
sub
add
add
mov
inc
xor
lods
add
leave
mov
jns
jo
jge
cmpsb
add
movsb
mov
sbb
clc
add
popf
jns
and
add
mov
aam
adc
nop
mov
addr16
test
add
xor
cmpsl
lds
jbe
add
ljmp
mov
mov
pop
mov
clc
insl
sub
call
loopne
cli
jmp
push
add
mov
or
xor
loopne
outsl
je
xchg
or
pop
or
sub
lret
dec
jne
pusha
jnp
xchg
jno
mov
adc
or
loopne
mov
fdivl
xor
and
and
xchg
xorb
cmc
sbb
adc
sbb
cs
sub
arpl
in
iret
push
push
mov
inc
je
and
add
push
pop
add
dec
pop
rcr
shrb
push
aad
insb
jmp
mul
xchg
mov
push
cmc
orps
test
add
ss
pop
lahf
cmp
scas
pop
sub
test
xchg
aam
pop
mov
adc
mov
nop
ljmp
shll
adc
push
inc
dec
pop
in
xor
test
jae
fnstcw
add
push
or
xchg
add
push
nop
lods
sbb
sub
add
test
xchg
mov
mov
inc
test
jno
add
jge
cld
ret
inc
rolb
pop
xchg
or
shl
add
add
pop
xchg
xchg
lds
daa
adc
sub
mov
mov
push
loopne
jo
inc
scas
aad
inc
js
jmp
cwtl
add
mov
int
sbb
inc
shlb
sub
push
movsb
push
add
in
sub
sti
mulb
shl
test
mov
add
mov
add
xor
popf
add
test
lds
inc
dec
add
pop
mov
in
mov
ss
std
fdivrl
push
mov
pop
add
mov
cmp
xor
mov
repnz
mov
pop
push
add
out
roll
mov
inc
leave
sbb
es
sub
dec
xor
cmp
sbb
add
ljmp
shr
sbb
filds
mov
rcrb
add
stos
imul
xchg
movl
pop
shl
pusha
std
mov
imul
xor
xchg
daa
dec
cmc
inc
add
add
mov
movl
ror
cmp
push
add
shlb
dec
dec
pusha
xor
dec
cmpb
rclb
mov
addb
ficomps
xor
jp
jns
aam
pop
lahf
pop
pop
add
movntps
and
into
mov
and
or
pushf
add
pop
push
aad
xchg
add
lret
into
xor
and
jmp
push
mov
pop
roll
cld
mov
mov
movsb
mov
xor
jg
add
sub
lods
add
ds
mov
test
daa
lock
popa
pop
add
jo
hlt
adc
movsb
inc
pushf
xlat
dec
sbb
jp
jnp
das
sbb
push
add
cmc
mov
mov
add
fs
rolb
addr16
inc
and
mov
imul
iret
adc
movsl
int3
cli
stc
comiss
add
dec
notl
shrb
xchg
or
mov
push
add
ja
jb
or
add
add
cld
add
adc
pop
insb
push
push
and
xor
add
jae
xchg
add
popa
add
push
stos
scas
clc
mov
and
mov
rolb
cmp
fst
rcrb
or
repz
test
mov
sub
cltd
mov
jp
push
pusha
and
push
fisubrs
loop
ds
cltd
and
stos
ret
adc
clc
les
add
mov
sti
jge
clc
sbb
ss
add
mov
sbb
mov
sub
inc
sbb
push
jmp
das
lods
jecxz
add
dec
out
stos
pop
adc
rolb
dec
ja
adc
mov
and
data16
mov
jb
and
in
mov
lock
pop
icebp
enter
jle
adc
orb
adc
lea
ret
or
sub
hlt
arpl
mov
sarl
xchg
lret
pop
mov
popl
incl
sarl
arpl
dec
add
cs
call
std
stc
and
shr
in
add
addr16
sub
xchg
xchg
pop
fdivl
add
sti
outsl
test
xchg
repnz
xor
push
pop
fdivrl
adc
mov
jnp
add
in
xchg
in
push
scas
aad
lea
shll
popl
sub
daa
lods
rclb
ret
dec
xchg
lods
add
push
jmp
sbb
rclb
push
push
xchg
add
cmc
mov
out
adc
inc
js
je
pop
jo
icebp
push
mov
inc
add
fnstcw
xor
sub
call
inc
adc
and
mov
pop
jo
mov
popa
pop
push
adc
bound
lock
cmp
out
xlat
out
fnstcw
pop
mov
pop
fs
push
sub
add
pop
into
pop
mov
mov
out
cwtl
add
ret
mov
enter
fdiv
mov
mov
aaa
mov
xchg
jae
pop
mov
ss
xor
jmp
xchg
pop
add
cmc
repz
pop
lods
inc
scas
add
add
sbb
and
shr
inc
dec
xchg
aam
roll
lcall
add
lahf
inc
movsb
inc
sbb
les
xlat
push
mov
pop
filds
adc
outsl
mov
push
cmp
push
sbb
push
jle
add
decl
and
cmp
sti
or
hlt
mov
cmc
push
cmp
addr16
mov
xor
pop
pop
or
arpl
mov
pop
divb
pop
mov
int3
test
push
add
mov
mov
js
pop
push
cmp
arpl
aas
add
mov
mov
mov
add
adc
test
stos
push
lods
arpl
inc
mov
daa
add
mov
add
subl
fisubs
and
inc
es
clc
push
es
roll
lea
and
pop
mov
outsl
cmpsl
shlb
fstps
or
cmp
dec
xor
aam
inc
mov
cli
loopne
add
add
stos
rol
pop
movl
pushf
dec
or
mov
xor
inc
push
fisubs
stc
mov
xor
es
add
xchg
mov
jbe
cmp
das
mov
int3
add
stc
push
cmpsl
dec
jl
ljmp
mov
out
xchg
mov
xchg
pop
pop
inc
lret
divb
clc
push
das
add
sub
push
test
push
and
add
xchg
jl
pop
orb
stos
jo
adc
and
and
add
inc
insl
add
jae
pop
adc
iret
les
inc
push
lods
pop
xchg
sub
lock
cmp
push
clc
sub
xor
adc
xchg
add
mov
add
push
lods
es
push
cmp
cmp
repz
sub
add
push
ljmp
cmp
xor
fdivs
or
jp
mov
mov
in
pop
add
and
shl
stc
sbb
lret
jmp
add
push
aam
pop
out
xor
lahf
sbb
inc
xor
adc
cwtl
add
add
mov
in
cltd
and
add
inc
pop
fucomp
ret
mov
add
mov
cwtl
xor
int3
cld
push
inc
rcrl
xor
pop
add
sub
xor
arpl
or
sub
bnd
mov
push
jae
sbb
loopne
pop
add
fcmovnb
clc
push
and
fcomps
pop
mov
leave
mov
cltd
ds
cli
jecxz
jns
pop
mov
loopne
les
shlb
call
jmp
dec
adc
add
call
xorl
or
sahf
add
xchg
and
jne
movaps
mov
test
add
lock
mov
outsl
sub
mov
sub
test
call
mov
in
pop
xchg
inc
or
out
shrl
push
add
aam
cmp
test
pop
xchg
sbb
out
sbb
cli
and
in
enter
jg
loope
inc
loopne
xchg
shr
mov
sarl
adc
mov
mov
int
inc
loopne
pop
fldl
cmp
call
add
shrl
lods
jno
imul
out
lea
add
rcll
shlb
sub
add
sbb
sbb
add
or
and
stc
int
or
xor
add
cli
loope
repz
push
add
pop
xchg
or
rcll
andb
cmp
aas
outsb
gs
dec
inc
pop
imul
xor
enter
jp
add
out
mov
add
push
inc
sub
mov
jg
rcrb
add
dec
jecxz
sbb
lahf
pop
pop
add
pop
aam
stos
sub
leave
hlt
add
add
fidivrs
add
pop
pop
sbb
and
cwtl
pop
pusha
addr16
enter
inc
cs
bound
pusha
add
mov
add
js
inc
xchg
and
cmp
sub
aaa
mov
pop
shlb
jnp
add
jo
dec
daa
push
iret
and
cli
add
lods
das
out
loop
js
add
and
jp
xor
inc
xchg
repz
test
pop
int
loop
sahf
jle
or
sbb
sti
sub
jp
mov
cmp
pop
cmp
push
cmp
add
test
xchg
pushf
sub
add
and
sub
and
push
repz
sub
fcoml
add
cmp
xchg
sbb
lcall
sub
or
add
stc
adc
and
add
inc
ja
lea
inc
pop
jnp
sub
int3
add
cmp
sti
fwait
push
or
subb
and
cmpsb
mov
sub
sbb
adc
test
mov
push
pushf
sub
pop
aaa
cmp
cli
shlb
add
sbb
lea
test
outsb
nop
aam
dec
mov
push
jg
test
mov
ja
stc
pop
mov
sti
out
test
pop
xor
inc
xor
movb
xor
pop
sub
shlb
dec
and
lods
sub
mov
adc
jae
mov
jle
or
mov
xchg
sbb
mov
shl
out
xor
fidivrl
rcl
mov
pop
int
dec
inc
add
out
lods
or
ljmp
js
and
inc
mov
imull
adc
shl
fcmovbe
daa
add
repnz
sarb
pop
add
mov
cmp
mov
jo
cs
out
call
mov
jmp
push
push
mov
mov
repz
dec
es
ret
push
mov
add
add
int3
xchg
pop
xchg
lods
pop
xor
or
mov
lods
mov
add
leave
insl
sbb
adc
lock
xchg
adc
jp
std
xor
jle
pop
cmpsl
push
outsb
outsl
fimuls
sbb
add
or
shrb
les
mov
addb
pusha
fiaddl
add
imul
mov
pusha
lods
adc
xchg
xchg
inc
js
out
mov
mov
inc
push
cmp
in
and
lret
add
jno
sbb
mov
in
lret
jg
add
outsl
cmp
sarl
pop
inc
add
pop
sub
hlt
cmpl
add
cs
adc
inc
push
sbb
rcl
dec
sbb
and
mov
pop
pop
mov
pop
loopne
xchg
cmpsb
mov
add
mov
int
and
add
call
in
add
addr16
into
and
sbb
cwtl
es
or
and
mov
add
add
lock
xlat
ret
adc
cmpb
dec
or
inc
les
cmp
loopne
add
pop
gs
push
inc
hlt
mov
aam
fwait
int3
mov
cwtl
lods
add
jno
in
or
pop
pusha
push
fistpl
sbb
mov
into
add
mov
loop
jecxz
lock
xchg
xor
test
test
outsl
lahf
fwait
aam
hlt
add
stc
lods
xchg
nop
stos
imul
aam
lea
inc
sahf
imul
cmovo
jge
or
mov
inc
inc
inc
lret
ror
mov
push
dec
inc
subb
add
jmp
jge
les
aad
and
jno
mov
call
cmp
int3
sub
pop
push
sbb
sar
shlb
dec
dec
push
xchg
add
cmc
popf
add
adc
xchg
test
bound
loop
enter
mov
add
cwtl
adc
icebp
push
pushf
or
pop
jae
orb
in
jl
add
into
aas
adcb
clc
or
out
fwait
and
add
movsb
mov
int
and
add
outsb
adc
sub
inc
add
sub
imul
pop
pop
mov
loopne
jb
addr16
pop
sarl
leave
cld
push
dec
aam
mov
notb
nop
or
or
jo
out
jmp
add
sub
sbb
repnz
lahf
cmpl
mov
sbb
mov
and
jb
add
sub
inc
push
ret
sahf
cmpl
daa
stos
fcom
adc
inc
push
add
ds
inc
stos
hlt
shr
fiaddl
inc
sbb
gs
stos
sti
mov
xorl
mov
cltd
clc
inc
cmp
xchg
jecxz
addr16
dec
pusha
xchg
bound
cmp
mov
arpl
mov
aam
inc
sbb
nop
xchg
and
sub
sbbb
mov
ret
repnz
push
mov
mov
enter
or
or
out
add
repz
push
sarb
cld
adc
add
shrb
ss
in
movsb
or
ja
sbb
mov
fs
loope
mov
in
mov
xchg
add
shlb
idiv
push
js
adc
or
mov
enter
and
and
aaa
mov
mov
sub
mov
jne
imul
call
inc
shrb
hlt
mov
xor
dec
mov
rcrl
scas
fsubl
sbb
add
jo
jg
gs
dec
xlat
pop
out
push
insl
fistl
add
clc
ljmp
jp
and
movsb
and
cmpsl
popa
add
rcrl
sbb
stos
add
arpl
cli
test
add
sti
ret
cmc
test
dec
mov
pushf
jp
js
add
push
sub
add
fcmovu
inc
fsub
adc
add
test
add
cltd
xor
sub
push
jmp
add
inc
sub
in
add
adc
dec
aad
and
xor
jo
add
dec
rolb
adc
or
cmp
roll
pop
cmp
sbb
sub
sarl
test
or
push
push
popf
or
aas
aam
jo
call
imul
add
inc
sarb
pop
pop
dec
add
inc
pop
push
cld
add
xor
pushf
add
arpl
test
add
fs
enter
add
jbe
xchg
and
mov
jle
js
push
add
inc
push
and
sti
rorb
aaa
xor
and
xor
aas
add
pop
repz
or
push
ret
sbb
data16
push
test
mov
xchg
mov
pushl
xchg
add
les
inc
addr16
mov
mov
mov
adc
pop
enter
xor
fidivl
push
push
xlat
mov
lock
pop
xchg
clc
adc
dec
inc
or
mov
insb
add
sbb
mov
pop
mov
mov
fsubrs
add
adc
cmpsb
ror
out
xchg
sub
out
testb
cltd
andb
test
int3
mov
call
sbb
sbb
mov
add
add
sar
push
xchg
in
inc
aad
es
mov
enter
aas
sbb
cmp
add
push
ret
insl
sub
cltd
popa
add
cli
xchg
xchg
pop
or
dec
bound
iret
pusha
lea
add
sub
fisttps
loope
out
aam
mov
fcmovnu
nop
mov
xchg
add
mov
mov
outsl
pop
push
inc
js
shrl
xor
push
cmc
xchg
add
int3
inc
add
repz
fcomp
dec
jno
out
mov
outsb
cmp
and
test
cvtdq2ps
push
call
out
add
jmp
call
mov
push
xor
sbb
jg
mov
mov
decb
mov
pop
or
fstl
mov
pushf
sbb
dec
push
cmpb
push
xorb
inc
inc
pop
add
jnp
jecxz
lock
jb
mov
xor
xchg
and
movsb
xor
fiadds
sbb
add
orb
nop
xor
push
push
dec
gs
roll
fldl
pop
jae
mov
loopne
sbb
mov
mov
xchg
and
jno
std
inc
fs
iret
dec
cmp
pusha
inc
pop
inc
cmp
jno
push
inc
pushf
xor
dec
add
cmp
sbb
je
mov
add
dec
cmpsb
sub
cmpsl
bound
xor
adc
pop
hlt
mov
scas
mov
and
stos
es
add
sbb
adc
or
out
loope
aam
addb
push
test
andb
xchg
pop
mov
mov
cmp
sub
filds
fcmovu
lahf
hlt
fs
xor
jae
push
cmp
and
aas
push
mov
xchg
scas
inc
mov
pusha
add
mov
push
enter
xor
xlat
cmc
sub
add
insl
gs
out
in
mov
out
jecxz
stos
pop
add
pusha
jl
add
and
or
cmpsl
jo
cwtl
xor
lret
movsb
out
pop
repz
je
pop
jae
mov
add
or
in
into
push
add
mov
jne
push
sbb
movb
and
sbb
xlat
fdivrs
add
sub
sub
xor
scas
add
mov
leave
add
cmp
and
insb
loopne
push
add
call
into
clc
popa
popa
jmp
or
add
xchg
imul
xchg
daa
js
inc
mov
movsb
add
imul
mov
or
fbstp
shlb
add
gs
insl
movsb
ljmp
test
adc
movlps
ret
or
jo
nop
add
xor
xor
inc
mov
add
iret
dec
mov
add
subb
xchg
ficompl
mov
push
fstpt
add
insl
inc
add
dec
lds
sub
push
add
in
push
cli
cmp
add
in
push
add
sbb
push
mov
lds
add
sub
popf
mov
pusha
xor
lods
cmp
xchg
mov
mov
jecxz
mov
mov
loopne
pusha
mov
aad
push
add
les
and
inc
sbb
jmp
js
sti
sub
mov
in
js
xchg
push
pop
fdivrl
daa
rol
pop
fwait
sbb
jecxz
push
xchg
and
gs
push
lahf
cmpb
in
sbb
sbb
add
lret
jmp
ja
sbb
cmp
xor
xor
mov
cmc
cld
dec
add
sbb
inc
xchg
scas
test
xchg
and
adc
add
wrmsr
dec
mov
sbb
mov
imul
pop
add
xlat
or
xchg
test
stos
das
xchg
xchg
hlt
add
enter
aaa
je
jl
add
loopne
add
pop
adc
pop
sbb
mov
sbb
int
add
scas
jge
xchg
sub
dec
sbb
stos
mov
add
inc
cmp
push
rolb
clc
push
add
dec
lds
sub
push
or
jo
rclb
je
xchg
xlat
ret
scas
out
pop
orl
shlb
mov
aad
sub
lea
lods
mov
fwait
lock
popa
add
or
sbb
or
fucomi
clc
adc
sets
add
mov
xor
push
icebp
sub
dec
sbb
dec
push
fdiv
add
mov
push
sbb
and
repnz
mov
xor
mov
jl
out
lea
push
int3
add
mov
leave
lods
add
adc
push
jl
mov
mov
inc
filds
sbb
add
or
lock
pop
add
xor
les
jb
insl
push
iret
test
push
lods
and
test
mov
adc
and
add
out
push
add
push
sarb
and
cmp
lret
add
lds
adc
inc
testl
mov
jecxz
mov
in
add
repnz
pop
lahf
add
test
sub
adc
movsb
sub
test
aad
cld
scas
add
stos
leave
jg
dec
mov
je
add
daa
insb
lea
das
nop
in
and
int
mov
mov
jne
jne
nop
dec
add
fs
sbb
mov
and
enter
sbb
cmp
and
ret
xor
inc
in
out
mov
add
movsb
aam
out
sahf
cltd
or
fstps
fimuls
adc
and
in
je
fldl
das
call
sub
push
mov
mov
pop
test
rolb
mov
lock
or
add
xchg
daa
add
mov
shll
js
sub
dec
add
fildl
or
mov
and
adcl
sbb
inc
inc
pop
xor
or
push
ficoml
push
add
scas
lods
test
add
cld
mov
adc
clc
add
pop
mov
jmp
xor
xchg
mov
mov
loop
sar
stc
insl
nop
or
cmp
lea
adc
mov
mov
leave
and
add
adc
add
arpl
lret
sub
or
push
mov
mov
xchg
orl
aam
call
mov
mov
stc
mov
aas
jno
jmp
repz
add
enter
xchg
ret
lods
add
shll
fsts
fisttpl
les
jecxz
hlt
mov
add
jae
pop
outsl
sbb
repz
push
mov
inc
add
jcxz
add
scas
stos
lahf
mov
add
add
in
xor
fcompl
fmull
mov
cmpb
add
and
nop
les
nop
jecxz
std
xchg
into
cmp
pop
outsb
fimuls
je
pusha
sub
pop
ja
fwait
arpl
mov
add
aam
or
mov
loope
cmp
pop
scas
in
bound
mov
jo
jmp
jmp
shlb
jbe
adc
shr
cmp
adc
int
in
subl
pushf
in
xorb
mov
add
ljmp
and
inc
hlt
mov
in
jnp
and
add
or
adc
jo
cmc
dec
inc
push
xchg
xor
sbbb
add
pop
mov
rcrb
loopne
or
les
mov
jle
fbstp
sar
btr
lahf
add
pop
loope
mov
stos
or
dec
in
pop
adc
cmpsb
push
pushf
js
call
es
and
fistpll
jbe
add
dec
ret
loop
test
testl
xor
fcomps
outsl
lcall
nop
cwtl
add
mov
push
ficoml
in
sbb
mov
out
cmp
and
or
pop
shr
push
out
pop
ljmp
repz
or
shlb
insb
mov
xchg
roll
mov
rcr
add
push
in
add
data16
fmuls
mov
stc
fisubs
les
jmp
jo
pop
mov
and
mov
push
pop
add
dec
out
cmp
shll
add
fwait
jecxz
mov
ds
add
sbb
inc
add
pop
xlat
and
sahf
cmp
or
fsub
hlt
pop
jle
out
push
mov
lret
inc
sub
jae
add
cld
std
sbb
fs
sar
jo
dec
or
sub
rcrb
mov
jnp
out
pop
into
sahf
hlt
test
push
cmp
out
or
add
sahf
mov
paddsb
enter
imul
add
inc
jmp
pusha
inc
pop
outsb
sbb
adc
add
xor
lahf
adc
mov
leave
push
add
jl
add
movb
dec
jae
add
or
imul
add
aas
int3
dec
add
pop
fwait
add
sub
add
add
push
or
dec
or
adc
movsl
rolb
ljmp
xor
dec
push
aas
aad
pop
inc
roll
test
ss
push
add
xchg
fdivl
loop
test
mov
xor
std
add
loopne
pop
push
call
movsl
sbb
xchg
jbe
add
jecxz
or
jno
cmp
inc
sbb
push
mov
add
fadds
pop
int3
icebp
xchg
xor
xchg
add
jnp
fsubs
nop
inc
jl
sldt
mov
mov
jge
xchg
pop
push
push
mov
pop
lret
inc
in
pop
insb
aad
dec
pusha
pop
push
imul
sti
mov
add
out
in
imul
push
insb
mulb
pcmpeqb
xchg
pusha
orl
ds
add
popf
mov
adc
add
mov
imul
xchg
mov
sbb
mov
mov
call
adc
mov
jno
adc
sbb
fadds
dec
lods
negl
shlb
js
and
lods
rep
adc
push
pop
dec
add
adc
sub
xor
dec
jo
jp
adc
add
mov
and
in
mov
and
pshufw
sarb
enter
das
push
mov
jnp
sbb
xchg
scas
lods
push
out
rcl
cwtl
jmp
add
popa
rclb
pop
aas
and
adc
mov
and
pop
mov
adc
sbb
xor
jne
push
mov
dec
pop
dec
xor
je
add
and
mov
pop
or
rolb
sbb
mov
sbb
faddl
inc
into
and
push
mov
addr16
or
and
stos
inc
add
mov
movl
test
add
inc
xchg
xchg
jb
and
mov
sub
mov
mov
push
lret
xchg
jno
add
mov
and
cwtl
push
add
dec
mov
pop
xchg
inc
jp
push
add
push
jp
cmp
sbb
xor
sbb
sub
test
test
loopne
push
pusha
add
mov
in
add
test
popl
pusha
pop
push
xorb
fistpll
out
pop
test
idivb
fistl
sbb
adc
adc
and
or
mov
xor
loope
in
nop
and
ja
and
daa
in
dec
stos
sbb
xchg
js
dec
and
jmp
jge
sbb
mov
pop
sti
test
jno
add
ljmp
cmpsl
mov
in
pop
lahf
pushf
insl
add
xchg
subb
sub
xchg
js
cmp
mov
mov
cmp
sbbl
inc
addr16
add
loope
in
cmp
shlb
test
and
mov
or
add
loopne
jae
bound
cmp
test
sbb
sub
cmovl
ret
jge
sub
add
dec
call
outsl
adc
cwtl
xlat
mov
sub
jo
mov
shrl
jno
lret
icebp
hlt
adc
loop
inc
mov
xchg
add
mov
fcmovnb
ljmp
ret
mov
test
xor
inc
repnz
mov
mov
imul
add
and
dec
inc
out
clc
pop
das
nop
loope
std
add
test
add
sbb
imul
add
or
movsb
pop
jno
add
jne
and
sub
add
bound
and
jne
xchg
rcr
dec
add
test
mov
aam
pop
xlat
sbb
xchg
icebp
nop
mov
adc
mov
les
ret
add
pusha
add
bnd
add
stos
cmp
dec
and
and
mov
popa
add
add
cmpb
xchg
add
rolb
test
adc
mov
add
or
popf
lea
add
pop
das
enter
push
stos
pusha
sbb
jl
mov
fldt
in
add
icebp
jecxz
clc
shlb
add
faddp
aaa
dec
dec
push
add
jae
jnp
adc
push
add
aad
shll
sub
pushf
cmc
or
dec
inc
imul
mov
cltd
loop
bound
dec
sbb
cs
mov
loopne
call
sbb
xchg
sarb
pop
fnsave
pop
mov
in
lahf
add
call
inc
lock
mov
in
ret
mov
push
add
lret
inc
cmp
mov
push
add
into
xor
add
sbb
mov
mov
ja
into
jmp
cltd
jge
pop
pop
aas
ljmp
adc
push
subl
call
and
xor
mov
loopne
xor
loop
pop
cmp
rcl
add
outsb
lods
and
stos
push
addb
adcb
cmc
ss
add
ret
fwait
cmp
cmp
daa
mov
dec
push
jo
add
sub
pop
aam
test
imul
pop
cltd
cmp
pop
call
into
push
mov
push
inc
andb
test
sbb
add
sub
nop
pusha
pminsw
pop
mov
xchg
add
stos
daa
out
lcall
push
lds
xchg
movsb
dec
mov
frstor
push
push
mov
out
xor
rolb
cld
out
dec
call
jmp
mov
into
add
mov
nop
pop
mov
jg
add
outsb
cmpsl
out
pusha
add
inc
add
cmp
cmpsb
or
sahf
adc
jnp
add
call
adcb
mov
add
es
icebp
add
pushf
ret
lock
add
inc
lcall
and
mov
std
fadds
enter
fwait
in
sub
sbb
pop
mov
mov
add
push
mov
xchg
cmpsl
cmp
pop
pop
adc
dec
loopne
xchg
and
mov
outsl
stos
pop
fnstenv
add
cmp
dec
mov
dec
xchg
shlb
pop
mov
stc
clc
leave
lsl
lcall
je
mov
in
xor
pop
les
and
mov
inc
fstl
mov
add
aam
gs
and
pop
cs
add
int
sub
clc
sbb
add
push
cmc
aad
sbb
jne
leave
inc
out
fidivl
xor
inc
cmp
add
outsb
add
pop
adc
nop
jns
add
mov
lock
dec
test
cmp
add
xchg
outsl
addl
inc
xor
sbb
movb
mov
std
cmc
cmpsl
sets
daa
mov
in
mov
pusha
test
je
in
or
push
es
lods
dec
mov
mov
lret
scas
dec
add
adc
sbbl
inc
adcb
test
add
inc
cmp
int3
jle
add
mov
test
repz
xchg
in
push
add
gs
cmp
add
repz
dec
daa
fcoml
sub
mov
ret
fidivs
xchg
adc
addr16
inc
aad
jae
add
dec
cmpsb
mov
lcall
jbe
adc
pop
rcl
adcl
lahf
mov
mov
jp
bound
out
dec
add
icebp
or
pop
jne
call
add
inc
add
and
in
gs
ljmp
fildl
out
test
int3
mov
add
mov
idiv
repz
mov
loope
cld
sub
fwait
inc
add
bound
add
into
fwait
jb
es
mov
pop
xor
add
jbe
imul
aas
in
mov
cmpsb
mov
dec
push
shlb
bnd
xchg
les
mov
insb
lret
pusha
rclb
enter
das
dec
mov
push
add
testl
roll
repz
xor
xor
roll
rolb
movsl
leave
cmp
inc
enter
adc
shrb
add
out
cmp
adc
pushf
xchg
add
test
xor
or
je
cmpsl
andb
push
jns,pn
fs
xor
pop
push
jle
xchg
scas
loop
add
jns
data16
je
cld
mov
inc
jne
lock
gs
mov
cmpsl
cmp
inc
sbbb
leave
adc
aam
loop
lret
lods
add
jp
pushf
in
popa
cmp
gs
mov
add
ficoml
push
and
sub
xor
lock
cmc
loop
add
pop
push
push
dec
daa
hlt
and
push
aaa
stc
pop
add
neg
xchg
add
insl
out
add
cli
adc
cmpsb
dec
mov
pop
xor
imul
and
xlat
adc
jo
insb
cwtl
pop
add
sbb
add
aas
addps
rol
outsb
xchg
push
jmp
mov
js
xchg
fiaddl
stc
push
dec
jnp
pop
mov
xor
cs
xor
fisttps
adc
add
and
popa
add
pop
in
mov
lds
mov
lcall
bound
mov
jno
sub
xchg
ret
filds
pop
jmp
out
sbb
imul
push
rcrb
jns
insl
fcoms
sub
sub
add
aad
push
add
enter
cld
cs
sub
sbb
add
test
add
jo
popa
fmulp
jbe
pop
imul
or
mov
ja
popl
pop
mov
push
xor
or
lds
aas
cmp
mov
iret
push
mov
sub
std
add
arpl
roll
add
xor
adc
mov
xor
xchg
mov
popf
or
in
repz
ss
push
xchg
fmull
nop
and
clc
adc
fcoms
jo
xor
xchg
xlat
aad
xor
sub
mov
imul
nop
mov
push
fimuls
push
push
add
mov
add
add
das
stos
xorb
pop
sahf
cli
add
inc
push
sti
out
and
adc
repnz
lahf
sti
addl
or
mov
push
popf
mov
push
ficompl
daa
loopne
sub
add
in
das
dec
mov
jg
xchg
mull
loopne
sbb
outsl
fiaddl
inc
mov
mulb
push
xor
add
xchg
mov
cmp
push
add
mov
aam
cmp
mov
inc
das
dec
bound
lret
jmp
pushf
imul
pop
mov
add
push
cmp
xchg
and
sbb
pop
test
in
pop
mov
cltd
sub
outsb
pop
ret
mov
loopne
sarb
inc
insl
mov
fwait
test
ret
cmp
add
jecxz
push
pusha
xchg
inc
sbb
jmp
add
repz
jno
dec
cmpsl
push
or
addl
or
bound
addl
pushf
inc
inc
lcall
mov
movd
mov
fsubs
sbb
adc
pop
inc
sbb
xchg
mov
sbb
rcrl
add
xchg
movsb
add
inc
adc
inc
jge
jo
dec
sarb
nop
sub
jecxz
push
sub
add
les
and
mov
sbb
and
push
jbe
subl
sub
sbb
inc
mov
popf
fisubrs
outsl
add
icebp
ljmpw
cmp
mov
adc
inc
add
hlt
dec
mov
add
cmp
insb
jb
adc
add
aaa
xchg
dec
insl
jmp
mov
rolb
add
dec
fdivr
mov
rclb
or
add
push
stos
inc
xchg
inc
or
add
xchg
jns
dec
addl
jnp
adc
ds
and
js
repnz
add
mov
jno
jb
aad
push
fbstp
mov
jle
mov
xor
cmpb
insb
movsb
and
rclb
loopne
aaa
mov
add
cmpsl
push
pop
ret
add
out
jg
push
in
es
lea
pushf
add
insl
call
hlt
stos
push
aam
rclb
pusha
pop
cmp
movsb
loope
xchg
jae
call
std
pop
loopne
in
push
dec
or
in
cld
mov
outsl
ljmp
mov
cld
dec
leave
add
sti
inc
mov
sub
test
add
and
arpl
cmpsb
fists
addr16
or
movsl
into
and
fmul
lret
hlt
jne
cmp
add
movsb
lahf
pop
mov
add
xor
cmp
nop
test
jl
clc
jbe
roll
mov
dec
add
out
adc
rolb
enter
add
rorl
jbe
js
mov
adc
fcmovbe
nop
sub
dec
dec
ret
fnstcw
add
lret
cli
add
incl
scas
cmpsl
loop
into
cmp
push
add
sbb
jl
sahf
ss
push
subl
daa
inc
sub
je
lock
add
jmp
out
out
add
sbb
insb
add
xor
push
sahf
add
jne
pop
fsub
gs
jb
movsb
pushf
mov
dec
popf
cmp
cmpsb
xchg
lret
add
in
pop
jbe
push
stos
test
sti
lods
dec
jb
lds
dec
push
sbb
lret
data16
ret
jb
dec
or
add
ficoms
or
mov
pusha
ficoms
out
pusha
loopne
fs
xchg
add
es
fwait
add
cmp
jg
scas
pushf
add
aaa
ljmp
lea
mov
mov
test
in
inc
push
call
addb
fwait
dec
mov
add
sbb
cmp
andb
cmpl
or
xor
add
or
jecxz
lock
mov
js
mov
inc
jmp
fsubrl
sbb
loope
outsb
sahf
inc
xchg
ljmp
push
stc
shrl
pop
and
add
or
not
dec
inc
insb
pop
addr16
mov
imul
pop
hlt
or
xchg
fsubs
dec
mov
test
aaa
inc
xlat
push
sub
pusha
call
cmp
imul
nop
add
jns
das
adc
outsb
pop
test
jl
mov
lods
dec
xor
add
sti
or
adc
outsl
inc
add
iret
and
sub
cld
out
call
ss
cmc
cmpsl
jno
jo
cmp
or
and
ret
lock
dec
mov
push
sbb
fnstsw
shlb
jecxz
pop
sub
jns
pop
int3
data16
xchg
add
push
arpl
jne
pop
sahf
pop
dec
and
test
dec
add
mov
fldl
imul
je
ds
xor
orb
sub
adc
xchg
pushf
inc
add
loop
xor
cmc
fldt
gs
jp
psrlq
fdivs
rclb
pop
outsl
lahf
jecxz
jp
test
shrb
add
sbb
in
or
cmpsl
or
lcall
xchg
lds
in
add
icebp
sbb
sbb
inc
add
cmp
into
pop
arpl
xchg
cs
push
pop
pop
sarb
sbb
sbb
mov
jecxz
adc
movb
lret
add
aas
jecxz
add
dec
and
rcrl
dec
mov
add
add
fiaddl
or
daa
cmp
cmpsl
xchg
lock
outsb
cmp
add
sub
addr16
xor
sahf
inc
xor
mov
add
inc
mov
call
cli
pop
lahf
je
sbb
add
push
cmp
push
pop
hlt
rcrb
clc
mov
cli
out
lock
xchg
mov
popf
nop
data16
mov
lds
sbb
xor
nop
xorb
and
fiadds
insb
test
std
jo
inc
xor
out
ret
loope
add
jbe
or
movsl
outsl
add
cmp
je
arpl
add
lock
add
jge
mov
nop
cmp
ret
sub
fwait
adc
or
inc
or
mov
xchg
shrb
hlt
add
xchg
out
int3
xchg
adc
sbb
add
filds
push
aad
iret
push
shlb
add
pcmpeqb
in
int3
cmp
and
loop
cld
xor
dec
xor
pop
les
push
add
lahf
mov
add
outsl
les
push
leave
notl
mov
sub
xor
cld
push
pusha
shlb
cltd
jecxz
mov
sub
add
dec
jmp
or
or
lret
or
lcall
sub
add
in
adc
pop
out
xchg
xchg
add
sbb
and
xor
psrld
das
test
fldcw
xchg
jl
or
push
jge
add
int3
xor
add
rcrl
xchg
aaa
sbb
das
add
daa
add
imul
jmp
call
lgs
pop
loopne
sub
jl
out
lcall
inc
cli
insl
ds
fwait
andb
lds
imul
hlt
mov
fst
dec
and
sbb
push
inc
mov
and
cmc
mov
or
clc
add
push
push
mov
add
call
xor
insb
mov
lods
add
test
jb
out
add
pop
fldenv
cmpps
mov
sub
sti
leave
cmp
push
jno
pop
hlt
pusha
mov
mov
std
incl
add
jno
add
fdivs
mov
add
jge
adc
adc
add
scas
lahf
cmp
stos
popf
cli
or
sbb
ja
cmpsl
add
adc
in
imul
lds
xor
imul
cmp
xchg
push
mov
sub
mov
xchg
sbb
adc
add
jle
push
pop
xchg
js
add
dec
jmp
fistl
out
sar
add
pop
adc
cli
subb
mov
daa
loope
or
add
es
add
sbb
ret
and
sbb
cmp
add
test
adc
xor
jg
je
stos
push
push
mov
cmp
fldt
pop
mov
shll
jg
and
cmp
or
mov
dec
and
pop
addr16
cmp
mov
xchg
cld
mov
mov
push
fisubrs
sbb
in
es
mov
push
jp
add
xlat
cmp
sbb
mov
leave
aad
or
mov
jmp
loopne
ss
fcmovnu
cmp
loopne
mov
out
pop
push
add
push
ds
movsb
mov
roll
nop
sub
pushf
inc
add
mov
push
and
ljmp
in
lods
mov
pushf
ret
add
lahf
cmp
mov
add
jmp
sahf
sbb
cmp
in
push
add
flds
aad
adcb
in
mov
sahf
dec
dec
or
std
adc
daa
fists
call
adc
adc
xchg
add
adc
xlat
test
cltd
pop
popl
add
xchg
and
repz
inc
je
jae
cmp
sub
sbb
cmp
mov
add
mov
inc
div
add
push
lcall
adc
mov
cltd
sub
xchg
lock
enter
aad
mov
pop
push
cmp
jo
mov
js
push
jp
inc
add
or
das
addr16
pop
test
jle
daa
pop
mov
add
test
fiaddl
dec
push
sbb
sysret
jo
mov
sahf
adc
mov
mov
jl
jno
add
pop
aad
inc
hlt
or
insl
mov
dec
cmp
push
add
int
fbstp
add
js
jnp
imul
push
adc
xchg
add
pop
leave
pop
fsts
or
xchg
and
adc
shl
andl
pop
fadd
out
jnp
xor
les
push
int
push
or
roll
inc
add
push
adc
add
add
sbb
sbb
add
mov
fsts
jae
incl
loope
mov
scas
add
jecxz
cmp
mov
arpl
mov
stos
jmp
icebp
sub
xchg
adc
and
rclb
xor
add
insl
fstp
movl
xor
cli
testb
hlt
lret
cmp
add
cs
push
dec
mov
clc
lahf
push
addr16
add
inc
adc
add
fcom
mov
xchg
pop
lret
popa
adc
aad
lea
sub
dec
shrb
and
dec
testb
arpl
push
or
nop
adcb
adc
add
aaa
jg
out
xor
push
add
adc
data16
out
pop
adc
pop
sarl
nop
incb
cltd
jl
lock
mov
inc
daa
pop
out
push
in
movsb
jl
add
jle
stc
jnp
hlt
outsb
and
ja
adc
push
ds
mov
push
adc
or
in
push
mov
loop
dec
mov
cmp
adcb
loop
inc
add
push
mov
jecxz
roll
pop
aaa
stos
jp
add
or
outsl
push
repnz
pop
xchg
incb
sbb
inc
jecxz
iret
pop
lock
mov
add
and
aad
sti
cmpsb
sub
in
mov
inc
push
scas
rcll
daa
pop
adc
ret
icebp
xchg
push
dec
popf
jmp
pop
addr16
dec
add
icebp
pusha
pop
inc
cmp
sbb
or
adc
inc
cs
mov
outsl
imulb
test
add
xchg
xlat
mov
add
in
faddl
add
sub
cld
mov
lahf
lds
pop
popf
mov
rol
add
imul
add
or
leave
mov
jnp
popf
shll
add
mov
or
dec
insl
mov
dec
pop
push
xor
jg
cmp
mov
xor
inc
lret
cmp
add
test
jg
outsb
or
add
jo
jmp
cwtl
in
add
xorb
add
mov
int3
sbb
or
xchg
and
aas
jp
jno
les
cwtl
punpcklbw
inc
adc
inc
popa
sub
add
push
loop
cmp
cmpsb
sub
popf
outsb
add
out
imul
mov
jno
push
dec
cwtl
inc
mov
cli
lcallw
mov
inc
clc
dec
and
test
push
orl
add
xor
sub
ret
push
dec
or
in
add
add
add
jmp
sbb
shr
icebp
flds
cmp
fwait
and
js
jb
out
stos
outsb
sahf
faddp
dec
push
jge
imul
sub
add
mov
jle
mov
xor
cwtl
inc
pop
add
add
ret
mov
mov
push
push
pop
adc
lahf
xchg
add
adc
cmp
sbbb
cmp
push
mov
pushf
dec
cltd
pop
shll
in
pop
add
pusha
mov
sub
inc
enter
loop
js
cmp
mov
inc
adc
inc
and
imul
int3
xor
pusha
or
dec
scas
loope
add
push
js
add
mov
push
lods
pop
cmp
xchg
jl
prefetchnta
or
out
push
inc
adc
mov
lcall
mov
shl
mov
pushf
push
sub
fildll
push
sbb
xor
aam
or
add
cli
push
pop
inc
add
dec
sbb
push
sub
nop
mov
test
test
sbb
stc
jecxz
mov
add
std
scas
imul
pop
sub
xor
mov
iret
std
or
xorb
cs
out
pusha
add
xchg
or
pop
add
inc
cmp
adc
stos
aad
loopne
ja
lock
and
cmp
je
inc
jecxz
iret
lock
ficomps
repz
rcrb
dec
sbb
aad
loopne
fiaddl
rcrl
mov
pop
rcl
xchg
jl
add
inc
pop
addb
and
stc
dec
lock
push
jp
cs
xor
bound
dec
fdivrs
add
cld
data16
aam
push
and
cmpl
rclb
test
add
scas
jne
inc
add
mov
jno
sti
mov
icebp
mov
sbb
call
or
rolb
out
scas
add
push
addb
or
fwait
sarb
lock
pushf
and
jb
add
fucom
push
pop
pop
adc
and
sub
jo
add
add
aad
pop
test
cs
add
shll
mov
scas
andb
test
loopne
mov
cwtl
mov
int3
mov
jl
ja
pushf
sbb
rolb
fnstenv
and
and
xor
add
add
sub
cli
jl
pop
ljmp
pop
and
inc
inc
add
dec
aas
xor
sub
and
pusha
push
and
jno
sarb
sbb
xchg
lds
mov
pop
fstl
pop
repnz
lahf
and
jb
mov
imul
aad
push
in
cltd
fwait
add
mov
lock
arpl
ss
inc
fildll
fcomps
push
cli
fisubrs
and
lods
adc
add
stos
bound
arpl
mov
mov
add
adc
orb
add
cmp
push
push
std
pop
dec
jo
ja
out
add
stc
lret
jb
nop
addr16
add
into
sub
xchg
dec
add
movb
xlat
mov
jae
rdpmc
pop
gs
dec
cmp
mov
mov
scas
shlb
mov
sub
inc
adc
push
stos
jle
mov
cmp
add
mov
push
xlat
das
jno
lahf
lcall
add
mov
mov
mov
sbb
jae
iret
jg
jne
in
lds
pop
aas
aaa
mov
xchg
xor
pop
and
mov
and
xor
fldl
cmp
add
pop
or
cmp
stc
add
call
xchg
add
push
push
mov
add
mov
fnstenv
out
arpl
push
inc
mov
clc
jne,pt
pop
push
sbb
rorl
add
test
dec
mov
sbb
or
cmp
mov
add
and
adc
insl
xor
add
add
ret
add
lds
cmp
pop
hlt
inc
xchg
xchg
cmp
arpl
xchg
pop
or
xchg
mov
fdivl
hlt
in
and
aaa
or
inc
mov
mov
ljmp
repz
scas
scas
jnp
aam
adc
dec
add
popa
jecxz
or
lods
mov
rorb
pop
dec
add
in
hlt
rep
add
aaa
xor
lea
ja
pop
pop
pop
add
sub
incb
dec
pop
mov
popa
cmp
mov
inc
insb
es
lods
sti
rorl
jmp
sub
or
dec
clc
and
js
aas
repnz
fsub
cmp
dec
add
inc
pop
insb
dec
mov
xchg
add
or
aam
xor
jae
pop
lock
sbb
add
std
cmp
rcll
mov
mov
inc
push
push
xor
out
and
imul
inc
popa
push
sub
scas
mov
dec
add
in
movsl
shll
lea
imul
push
lahf
push
mov
inc
in
inc
adc
mov
add
fildl
and
sbb
mov
mov
sbb
mov
out
xor
add
xchg
in
fistpl
les
adc
icebp
sub
lcall
nop
pop
sbb
xor
clc
sbb
sub
jns
aad
cmp
bnd
jb
lods
dec
pop
mov
loopne,pn
jp
dec
add
dec
push
sub
mov
and
add
pop
mov
jno
add
adc
in
sbb
push
jmp
aas
enter
add
lock
push
jnp
int3
jb
ljmp
sub
in
xor
cs
push
add
ja
mov
or
dec
add
imul
std
mov
test
lahf
out
sarb
jecxz
sbbl
mov
call
flds
lods
into
cmp
movsb
sti
subb
adc
aas
add
add
in
cwtl
icebp
or
jge
jl
rcrl
add
in
lock
sub
inc
sbb
cmp
lahf
inc
orl
shl
jno
mov
fcompl
mov
icebp
sub
scas
mulb
and
movsl
add
pop
xor
fists
pop
sbb
add
dec
cmpsl
xchg
add
mov
movsb
hlt
out
sbb
insb
lods
outsl
test
popa
sub
cmp
push
int
lods
add
cltd
and
mov
xor
mov
pop
sub
inc
mov
cld
cmc
mov
cs
pop
lods
int3
jecxz
add
cmpsb
sub
or
lahf
xacquire
andl
call
sub
sbb
in
sbb
in
lret
leave
xchg
pop
pop
out
std
push
xchg
sbb
rclb
lret
adc
inc
andb
and
inc
push
insb
ds
xor
lahf
push
add
and
inc
add
add
mov
adc
repnz
pop
jp
pop
lea
mov
sbbl
push
mov
cmp
arpl
jne
dec
cmp
push
add
ret
popa
sub
cmpsb
jl
mov
add
in
jb
repz
fmul
xlat
mov
mov
bound
pop
loope
dec
push
adc
xor
pop
xor
adc
inc
dec
fsts
movsl
test
imul
rol
mov
add
jae
pop
popf
mov
sarl
jb
cmp
add
inc
dec
push
xchg
or
scas
sub
into
lret
pusha
mov
push
push
push
leave
aam
add
xchg
mov
fadds
cmp
add
repnz
std
ret
incb
xor
fsub
inc
xchg
push
pop
jnp
mov
scas
inc
movsb
call
sbb
pop
lea
call
add
xchg
mov
pop
mov
jmp
add
and
jmp
int3
repz
add
stos
loop
call
dec
mov
fstpt
push
int3
add
loopne
cmp
adc
mov
in
pmullw
mov
jmp
and
mov
les
adcb
call
pop
cmp
mov
xchg
mov
les
fiadds
leave
jo
lods
add
outsl
out
add
jg
and
pop
dec
adc
or
js
fsubl
fistpl
pop
mov
loopne
or
rclb
dec
pop
add
sbb
stos
add
xor
mov
add
int
or
ret
cmpsb
mov
xlat
add
push
jle
add
pop
pushf
xchg
lret
push
aam
add
push
out
das
jbe
sahf
hlt
add
cs
dec
pusha
ror
cmp
subb
das
add
pop
xor
bound
cli
scas
fdivl
jnp
xor
and
push
mov
mov
movsb
lret
adc
mov
push
add
call
scas
in
xchg
sarl
es
add
xor
ss
inc
add
stc
pop
xchg
add
add
subb
in
fiadds
lcall
sub
add
xor
push
or
mov
xlat
adc
adc
cmp
push
in
cmp
pop
xchg
add
inc
sub
aam
and
or
mov
jnp
lock
fdivs
aam
inc
add
fsubrl
xchg
mov
loopne
or
push
rclb
dec
jmp
push
arpl
movsb
faddl
and
hlt
adc
xchg
ljmp
xor
out
xor
mov
xchg
cmp
mov
sti
out
inc
dec
pop
cmp
mov
add
push
mov
in
pop
aaa
xor
jae
inc
or
add
mov
push
push
loop
stos
jns
cmp
xor
mov
imul
jge
xchg
sti
xor
sbb
pop
outsb
movsl
pop
xor
lea
inc
loope
daa
jb
add
mov
mov
jl
negb
adc
outsb
pop
xchg
xchg
stos
js
add
sbb
add
sbb
stc
lcall
clc
sbbl
cwtl
lea
xor
sti
jns
imul
jno
mov
and
jnp
sbb
lock
lods
cmp
shrb
mov
or
lock
jge
adcl
mov
ja
inc
push
push
and
xor
add
lret
out
sbb
and
out
xor
mov
mov
int
push
add
fcoml
daa
out
shll
jbe
mov
inc
mov
ror
lcall
add
arpl
mov
mov
mov
xchg
dec
fmull
push
fistpl
rcl
cmp
or
adc
lds
shl
xor
addr16
lods
pop
scas
test
sub
inc
sub
cmp
pop
repz
dec
dec
push
stos
jmp
fstl
or
mov
testb
pop
ja
dec
out
and
sbb
add
aam
cmp
sub
add
scas
outsb
sub
stc
jo
fwait
pop
fists
in
sarb
mov
inc
dec
push
or
cmp
pop
inc
hlt
sbb
push
cmp
sub
mov
or
movsl
dec
js
cld
add
int
adcl
add
add
loopne
inc
sbb
lahf
jp
stc
subb
add
mov
jnp
hlt
sbbb
add
mov
sub
rcrl
xchg
arpl
mov
xor
cmp
call
test
jo
stos
inc
stos
daa
test
pop
jno
add
sbb
ret
aaa
icebp
mov
in
mov
adcl
xchg
xor
add
mov
inc
jb
push
shl
das
hlt
leave
pop
add
pop
ljmp
mov
sbb
push
fdivl
push
fistpll
loopne
mov
adc
into
mov
pop
mov
cmp
test
mov
mov
into
adcb
mov
in
sbb
cmp
cmp
pop
rol
mov
mov
xlat
jp
addr16
lods
loope
out
inc
pop
xchg
mov
lods
or
push
int
adc
mov
ds
add
xacquire
xor
dec
adc
call
xor
pusha
add
jg
repnz
clc
mov
inc
push
xchg
add
loopne
test
push
jecxz
aad
test
cmp
shrb
cmpsl
loop
sysexit
push
cmp
xchg
add
cli
push
incl
cmp
ret
add
xor
xor
mov
mov
sbb
jo
jb
dec
add
stc
push
inc
pop
test
and
cli
adc
rcl
add
push
movsl
mov
add
push
xchg
xor
insb
cmp
out
or
push
pop
cvttps2pi
sti
xchg
push
ja
mov
in
imul
filds
mov
jne
dec
mov
clc
lcall
add
testb
sbb
mov
test
aad
jge
jo
or
test
shrl
pusha
xchg
lods
cmc
cmpl
ja
std
sysexit
adc
inc
lods
or
nop
dec
mov
fiadds
sbb
aam
add
test
push
clc
pushf
push
pop
testb
je
in
hlt
aad
cwtl
mov
sarb
and
mov
lret
fwait
jge
bound
jo
cs
insb
inc
add
shlb
mov
imul
jbe
dec
int3
iret
in
push
pcmpeqw
sti
inc
xchg
or
out
dec
lods
mov
or
mov
cli
notb
add
mov
push
sub
dec
add
out
test
inc
mov
lret
inc
add
push
sti
nop
dec
add
out
dec
cmp
out
mov
or
cmp
pop
add
jae
sub
add
icebp
cli
rcrb
cld
dec
out
es
pushf
loope
sbbb
pusha
in
aas
jne
push
jbe
testb
fdivrl
cwtl
scas
sub
rcr
lock
add
leave
pusha
adc
jmp
dec
dec
enter
push
push
and
or
add
stos
xchg
push
mov
fbstp
add
sub
and
jno
lea
add
mov
and
shrb
mov
dec
cli
in
mov
movsb
loop
mov
es
out
cmpb
addl
add
out
lahf
push
loopne
cmp
popa
sub
push
or
lds
cmpsb
std
sub
xchg
mov
lahf
pop
pop
shrb
add
ds
imul
adc
mov
adc
cmc
jp
cwtl
push
add
sub
popa
rcrb
or
shlb
loope
insb
cmp
testb
scas
dec
enter
cltd
lcall
and
pop
ja
add
lods
ret
pop
cli
ss
mov
mov
aas
pop
fldl
xchg
ret
and
testb
mov
cld
push
sbb
das
bound
cs
movsb
add
xor
push
inc
es
in
push
adc
add
fsubrp
inc
js
lock
mov
and
sub
jbe
pusha
push
in
clc
cmpsb
cmp
or
loop
dec
pop
and
adc
mov
pop
aad
ret
lahf
cld
adc
mov
in
pop
pop
inc
add
push
sub
inc
repnz
xor
and
ficoml
das
std
ret
pop
xor
insb
mov
jl
clc
inc
shl
and
xor
int3
xlat
mov
push
mov
and
adc
pop
mov
rol
fistps
loopne
faddl
popa
cmpsb
lea
fldenv
xchg
lcall
sbb
mov
add
scas
xor
inc
and
mov
jne
pop
or
aas
incl
inc
stc
sub
jo
clc
iret
mov
testl
add
fldl
int
add
iret
ds
push
add
xlat
sub
xor
lock
add
cmp
or
mov
adc
add
cmp
mov
add
mov
lods
pop
jmp
pop
push
mov
or
pop
inc
push
imul
sbb
sub
push
ds
xor
out
jg
xchg
dec
addl
es
addr16
adc
dec
jle
pop
mov
out
daa
les
xlat
add
mov
mov
xchg
mov
push
add
les
jae
mov
movsl
lcall
shr
or
adc
jno
inc
and
push
int
int3
int3
inc
and
fs
push
xor
shll
fimuls
pop
daa
add
sub
mov
mov
jecxz
pop
outsb
mov
pushf
mov
outsl
out
dec
bound
adc
enter
xchg
push
push
push
mov
cli
cmp
and
sbb
add
sbb
mov
mov
inc
push
add
dec
ljmp
add
orb
add
aaa
mov
and
flds
scas
push
mov
push
mov
insb
movsb
setle
and
add
loop
out
sbb
or
cmp
pop
lods
fs
pop
xor
test
jo
add
and
lock
push
rolb
arpl
adc
mov
add
ss
add
lahf
iret
sub
sbb
shlb
int
mov
or
ljmp
jbe
and
add
cmp
sub
cmp
roll
test
mov
jl
push
xor
psubusb
lret
and
or
add
add
xchg
mov
stos
cmpb
sub
fldcw
rorb
hlt
rcll
lock
jge
push
out
mov
scas
popf
notb
pop
dec
cmpsb
add
test
jno
call
cltd
out
pop
cmp
push
sahf
jo,pt
stos
std
adc
adc
mov
and
or
sti
add
sub
add
in
xor
incl
mov
dec
fiadds
push
xchg
leave
sbb
ja
dec
push
pusha
push
adc
in
jge
fisubs
mov
sbbl
fbstp
je
and
or
inc
ds
scas
mov
cmc
aam
call
mov
arpl
and
cmp
push
xchg
pop
and
jo
xchg
fldenv
and
add
mov
adc
loop
outsl
pop
nop
add
outsb
loopne
lcall
popf
or
mov
xchg
and
pop
pop
cmp
jmp
push
add
cmpsb
pop
ss
add
mov
pop
in
xchg
add
mov
mov
mov
mov
scas
mov
cmp
insl
ja
sbb
pop
lcall
into
jl
mov
mov
dec
add
pop
in
pop
add
mov
into
fdivrs
xchg
sub
xor
nop
les
xchg
or
and
jle
hlt
adc
adc
sbb
hlt
mov
lahf
outsb
add
stos
stc
sbb
add
ljmp
scas
popa
bound
mov
add
cs
aas
adc
add
sbb
in
mov
mov
negb
pop
mov
mov
inc
jp
orb
inc
scas
inc
sub
les
add
nop
xor
orb
push
orl
into
add
push
and
mov
gs
and
ja
cmp
mov
aas
iret
and
add
pop
out
dec
test
ja
jmp
pusha
xchg
loopne
push
add
jbe
cmp
loop
push
inc
outsb
mov
inc
adc
mov
in
roll
pop
into
inc
lea
pop
mov
jbe
aam
add
dec
pushf
int
cmp
rorb
mov
inc
inc
push
into
repz
xor
add
fwait
and
mov
jl
stos
cmp
js
jecxz,pn
cmpsb
push
nop
mov
ja
adc
js
and
fnstsw
inc
sahf
sub
aas
xlat
movsl
jns
loop
iret
add
loopne
movl
and
sbb
gs
ljmp
scas
pop
add
jg
xchg
cld
mov
rcll
insb
lods
add
rcr
lea
push
mov
mov
add
xor
xchg
cli
fs
jg
xchg
sub
fldenv
dec
add
dec
xor
push
inc
mov
add
out
bound
outsb
xchg
or
sbb
mov
add
lock
sbb
inc
add
mov
xchg
int
clc
sbb
repnz
xor
and
addr16
scas
imul
mov
pop
and
mov
and
fbld
add
dec
sbb
push
movsl
out
inc
add
ds
dec
cmp
push
push
jp
ja
or
fnstsw
sarb
fsts
add
sbb
out
add
fisttpll
mov
mov
and
fwait
rolb
bound
mov
mov
pop
and
mov
cwtl
push
mov
orb
mov
mov
call
jle
xorb
xor
movsb
sub
xchg
add
daa
adc
add
int3
mov
and
je
ljmp
sub
adc
inc
add
scas
pop
mov
les
adc
nop
pusha
add
push
or
and
cmpl
sub
push
lock
add
or
ror
cmpsl
out
leave
or
shll
add
lahf
faddl
mov
imul
dec
popa
lods
add
clc
jnp
add
xchg
fistl
add
test
add
jb
inc
and
jl
icebp
inc
pop
add
dec
mov
outsb
jo
stos
add
push
or
dec
push
sbb
mov
add
mov
outsb
in
mov
mov
xor
inc
jg
add
xlat
adc
lret
sub
sub
addr16
shlb
pop
sbb
aam
fwait
xchg
jecxz
fcomp
pusha
js
sub
sbb
das
ds
fadd
sbb
mov
xchg
nop
mov
insl
jbe
add
pop
addl
cltd
jecxz
lods
sub
scas
or
and
mov
push
or
add
mov
inc
add
shll
add
pusha
cmp
xchg
add
add
add
xor
add
xchg
loopne
mov
out
subl
pop
sbb
scas
rcl
in
jl
jno
jo
adc
adc
dec
mov
das
add
std
add
pusha
mov
adc
test
add
dec
call
inc
loope
fwait
jbe
push
cmp
push
adc
incl
cmp
gs
sbbb
add
jbe
pop
bswap
lret
pop
add
pop
cmp
mov
out
jb
les
add
pushf
call
mov
fadds
stos
dec
pop
mov
or
stos
or
insb
or
pop
inc
in
xor
or
inc
mov
xor
hlt
cmpsb
xchg
add
dec
rcrb
xor
jae
add
cmp
js
adc
pop
rolb
xchg
add
outsb
enter
add
sbb
xor
add
cmp
add
mov
lock
adc
push
push
add
add
das
stc
add
cmp
pop
les
add
lock
ret
fdiv
inc
test
add
stos
cwtl
ljmp
hlt
sbb
add
jle
adc
clc
or
icebp
sbb
dec
lock
add
jnp
mov
sbb
pop
int
sub
or
in
cmp
inc
or
lods
dec
add
adc
ds
add
inc
mov
aaa
or
add
mov
mov
in
subl
push
fs
pop
jb
add
adc
sbb
int3
add
xchg
jo
aas
int3
jmp
jae
xlat
mov
add
loopne
push
js
lods
in
jl
add
rcrl
add
add
fisttps
jnp
mov
add
adc
icebp
out
jle
pusha
outsl
xchg
int
jne
repz
mov
fstpt
leave
and
inc
mov
cwtl
add
aam
or
mov
andb
call
sub
mov
loopne
imul
mov
ljmp
pop
push
call
shl
aas
adc
in
xchg
add
jmp
int3
fcompp
pushf
xor
xchg
sub
add
pop
sbb
out
or
hlt
in
insl
js
mov
mov
loop
add
push
mov
fidivs
inc
and
inc
adc
shll
scas
decb
testb
stos
imul
jl
mov
add
jmp
sub
in
jmp
or
test
and
add
pslld
and
orb
clc
enter
hlt
push
jo
add
or
adc
cltd
or
subl
adc
lea
dec
jmp
cmpsl
out
dec
in
cmpb
jbe
jb
add
dec
popf
xchg
xor
jne
xchg
and
scas
mov
sub
sbb
rorb
imul
add
sbb
insb
mov
add
dec
addr16
and
out
sub
bound
inc
pusha
push
inc
pop
out
add
jmp
mov
lea
xor
sti
js
mov
mov
aas
ljmp
test
rcll
add
stos
cmpl
jp
cwtl
testl
rolb
repz
nop
push
loopne,pt
adc
sub
push
call
add
jo
fnstsw
mov
test
inc
cli
mov
sbb
cwtl
sub
or
push
or
xchg
jmp
xlat
and
inc
add
jnp,pt
push
xchg
or
lods
xorl
pop
inc
cs
aas
outsb
jmp
insl
lea
inc
adc
cwtl
int3
into
cmp
popf
add
mov
mov
mul
es
pop
ljmp
icebp
cmpsb
pop
mov
adc
mov
or
adc
push
add
imul
dec
addb
xchg
and
movsb
jbe
jae
test
dec
aad
push
jecxz
inc
and
inc
test
orb
clc
or
cwtl
inc
aas
xchg
jmp
stc
cltd
add
push
mov
mov
jnp,pn
mov
or
pop
xchg
in
adc
mov
add
jecxz
rol
and
add
xchg
in
pop
fdivrl
inc
mov
xor
in
pop
jb
jg
lods
mov
mov
pop
lock
pop
push
stos
cwtl
mov
add
test
or
sbb
js
pop
aad
dec
add
and
adc
out
push
in
dec
call
test
aad
add
push
lds
xor
pushf
pop
add
push
arpl
add
mov
add
xchg
pop
aaa
in
cmpsb
cmc
sbb
test
sahf
lock
xchg
sahf
pusha
add
fsubrl
inc
pop
xorb
pop
mov
mov
fisttpl
or
add
ss
mov
add
ja
jb
in
roll
xchg
ljmp
add
sub
jbe
cld
and
or
popf
xchg
add
fwait
pop
out
jb
add
cli
call
aad
fldenv
fnsave
inc
sub
loopne
sahf
outsb
add
jne
add
mov
and
mov
ja
mov
aas
jb
jbe
loopne
add
xor
das
int3
adc
int
mov
add
in
insl
jl
je
add
daa
hlt
sbb
push
nop
add
stos
pushf
sbb
mov
inc
add
inc
xor
jle
pop
shl
adc
mov
jecxz
jge
push
mov
in
fld
and
cmp
jp
repz
faddl
shll
xchg
adc
addl
and
cmc
push
add
cmp
les
ror
out
push
inc
repz
cmpsl
push
push
add
fstps
sbb
fwait
movb
mov
nop
sbb
test
bound
cwtl
mov
mov
popf
pop
cmp
stos
pop
lds
dec
adc
mov
enter
add
pushf
push
ljmp
mov
jno
cmp
add
or
inc
pop
aam
sbb
xchg
add
jle
sbb
fdivrs
mov
in
test
add
repnz
shrb
dec
adc
add
dec
shlb
lret
mov
add
mov
mov
push
add
test
fwait
cmp
loopne
aas
xor
sub
add
aam
loopne
sbb
addr16
xchg
inc
imul
rcll
in
lods
ja
jae
add
jb
pop
es
insb
add
test
add
or
inc
pop
adc
mov
push
xchg
fidivs
repz
add
sub
imul
push
in
paddsw
loop
sti
or
pusha
jmp
test
lds
add
add
push
xchg
mov
mov
sub
fsubl
aam
jp
out
jno
mov
cltd
addr16
fwait
pop
pop
sbb
movsb
mov
cwtl
addb
sub
mov
out
jmp
sub
cmpsl
into
add
push
call
add
mov
add
dec
jg
stc
jle
mov
xor
add
stos
fldt
add
sbb
push
aaa
aam
les
test
pop
ret
jl
add
dec
ret
and
push
dec
inc
add
jae
pop
pop
out
aaa
add
fwait
mov
push
scas
cmp
push
add
xchg
mov
hlt
mov
lds
or
mov
ret
gs
sbb
insl
movsl
test
lock
adc
adc
pop
mov
loopne
cmp
sub
ret
jl
dec
mov
inc
adc
push
mov
aad
out
xor
jp
imul
and
jecxz
xchg
out
pop
cltd
xor
mov
jne
jno
call
xchg
mov
add
imul
mov
cli
push
cmpl
gs
mov
popf
test
ret
add
sarl
lea
jl
jp
sbb
cmpsl
dec
lock
mov
sahf
add
mov
gs
fildll
inc
pop
add
add
inc
sar
dec
hlt
je
add
push
inc
or
movb
repnz
leave
add
scas
daa
sbb
add
push
jge
mov
push
xchg
gs
cmp
cli
rcl
mov
aas
pop
andb
cwtl
dec
call
or
inc
insb
scas
cmp
andb
pop
ds
jle
add
mov
testl
inc
xchg
inc
rorl
pop
and
sbb
mov
popa
jbe
push
mov
cmp
sahf
addr16
adc
subb
push
hlt
test
out
jo
add
sub
add
lods
jmp
adcl
cmp
inc
lcall
mov
pop
add
in
popf
sub
add
sub
imul
call
aas
ret
cli
roll
push
pop
dec
jge
add
aaa
pusha
jp
xor
pop
push
or
push
gs
dec
leave
cld
push
rcr
int3
xor
pop
push
xlat
push
fdivs
add
cltd
and
add
xchg
fwait
dec
pusha
arpl
outsl
testb
push
xchg
and
jns
jae
add
pop
mov
cs
hlt
mov
shrb
out
fdiv
push
loope
push
movsb
jno
push
xor
add
in
fistpll
in
data16
push
loope
out
cmp
push
add
cltd
lret
jmp
lahf
scas
out
iret
clc
jle
imul
rcr
aaa
jmp
add
lret
ret
mov
aam
mov
cwtl
mov
add
repz
test
roll
imul
iret
test
lock
shlb
dec
into
inc
push
xor
fistpl
xor
int3
push
add
sbb
cwtl
sub
js
cmp
sbbb
rcrb
pop
cmp
addb
or
rcll
mov
aas
lcall
jecxz
sub
cmp
lds
out
shll
or
lcall
xabort
jbe
add
xchg
fistps
stos
sub
pop
cmp
adcb
push
xchg
mov
imul
test
xchg
popf
fdivrl
push
mov
iret
iret
mov
cmpb
daa
out
sub
pop
aaa
addb
into
push
jbe
or
dec
push
inc
mov
dec
jns
cmp
xlat
and
pusha
stc
xor
fidivl
add
add
arpl
sub
add
jno
stos
outsl
adcb
sbb
test
pop
fcoml
jae
xchg
idiv
ret
mov
testl
subl
sub
jmp
repnz
dec
mov
cld
lods
in
xor
pop
cltd
or
enter
lds
fld
insb
push
dec
xor
add
in
int3
into
loopne
mov
inc
add
ljmp
add
test
jl
inc
xchg
movsl
cld
sbb
xor
or
push
ret
add
xor
add
std
popa
adcl
jnp
cmp
in
or
test
loope
add
ftst
clc
push
hlt
idivl
incl
sub
add
jle
sub
enter
inc
rol
mov
cmp
aaa
adc
add
filds
dec
fdivr
jl
xchg
jb
ljmp
test
jp
sbb
jo
pop
xchg
or
add
mov
cli
sub
pop
cmpsb
bound
or
icebp
imul
in
add
dec
in
setle
fcompl
push
loop
add
frstor
jg
add
cmp
push
push
inc
cwtl
add
add
and
cmpsb
add
push
aad
sbb
add
cs
aas
push
and
ficompl
add
sbb
jb
or
adc
ljmp
sub
sbb
mov
in
inc
mov
mov
pop
xchg
rcll
rolb
jns
out
invd
xor
sub
mov
sbb
mull
sub
into
in
xchg
add
jmp
xor
mov
cmpsl
data16
add
sbb
add
push
div
sub
daa
lahf
ret
jb
lods
in
xchg
int
mov
add
andb
lds
outsl
incl
stos
cmp
fwait
push
push
jg
call
dec
xor
cmp
mov
xchg
xchg
sub
pop
add
sub
ljmp
xor
and
loopne
add
sbb
movsb
sub
fdivs
pop
cmp
test
subb
adc
pop
test
mov
cmp
out
and
hlt
sub
and
testb
fdivr
xchg
mov
call
add
stos
andb
inc
aam
add
xchg
cwtl
push
add
adcl
xchg
loop
pop
shl
mov
mov
push
add
push
rcll
and
ja
add
push
aad
adc
xchg
js
xchg
dec
loopne
ss
ds
test
stos
inc
or
and
add
in
sbb
iret
add
sub
push
sub
test
add
dec
mov
push
popa
jl
shl
jg
test
adc
imul
repnz
sbb
xor
lret
sub
aam
push
jb
pop
leave
pop
add
push
xchg
cld
xlat
adc
mov
iret
dec
inc
mov
in
sub
inc
bound
movsb
xchg
out
pop
pop
inc
xor
cmpb
call
add
push
jne
mov
dec
push
sub
or
ds
sub
push
aaa
test
xor
ret
xchg
adc
ror
jmp
sub
pop
shrb
push
mov
adc
add
push
mov
fistpl
mov
sub
xor
shl
cli
fptan
pop
pop
mov
cmpsb
sti
std
add
xchg
or
cmp
insb
add
popa
jns
mov
inc
lahf
loope
mov
lea
push
inc
mov
mov
cmpl
add
inc
sub
cmp
imul
add
movsl
pusha
cwtl
inc
xlat
add
add
lret
adc
fwait
xchg
add
sarl
sub
and
xchg
or
arpl
subb
xor
ljmp
loopne
xchg
add
xchg
adc
aas
cmp
push
repnz
mov
xchg
mov
cltd
adc
push
xchg
xor
jl
add
fistpl
icebp
stos
arpl
sub
dec
sub
cs
pop
adc
or
cltd
mov
mov
aas
or
sbb
pop
dec
inc
cmpsl
add
lds
sub
insb
or
adc
inc
divl
in
mov
aas
dec
andb
adc
inc
insl
mov
shrb
pushf
psubusb
test
pusha
adc
push
push
push
ja
scas
add
add
pop
pop
and
jp
add
cmp
push
pop
mov
mov
jp
fadds
push
scas
lcall
addr16
jns
out
xchg
add
dec
xor
pop
sub
push
mov
jecxz
addl
sbb
je
lock
jb
mov
mov
imul
adcb
jnp
pusha
mov
in
xor
in
shll
std
push
fndisi(8087
repnz
sahf
mov
xor
fmull
out
jl
push
add
icebp
jmp
mov
fcoms
and
sti
sbbb
jg
xchg
movsb
and
add
xor
ljmp
inc
mov
pushf
pop
push
int3
sti
add
jae
aaa
inc
out
adc
add
call
jl
pop
cld
cmc
push
add
adc
idivb
test
sub
xchg
and
inc
pushf
add
int
sbb
js
mov
cltd
movsb
or
imul
add
add
jp
add
mov
cli
stc
jo
out
lcall
dec
and
stos
mov
pop
jnp
push
inc
icebp
orb
jns
and
xor
imul
sti
test
js
andb
push
inc
das
iret
sub
add
outsb
add
stc
fstpl
add
lahf
pop
js
add
dec
xor
dec
insb
or
rclb
push
lea
mov
test
leave
scas
sahf
adc
pop
sbb
movsb
dec
mov
subb
sbb
add
cmp
pushf
mov
mov
jmp
inc
mov
add
addr16
dec
cs
arpl
push
int
mov
mov
mov
push
test
testl
ja,pt
adcl
loope
mov
cmp
std
in
add
in
xor
add
jbe
dec
shr
lahf
jne
add
movsl
pop
xchg
add
pop
add
jbe
xchg
or
and
mov
icebp
inc
add
xor
adc
mov
ss
test
rsm
fimuls
call
stc
hlt
rorl
clc
inc
sub
jae
sbb
les
sbb
jns
push
shlb
mov
ret
data16
mov
mov
adc
popf
mov
cmpsl
mov
ja
movsb
xor
pusha
out
inc
inc
in
sahf
stos
mov
rcll
insb
mov
mov
ja
addb
add
jmp
xor
call
mov
popa
lods
xor
iret
outsb
add
imul
add
test
nop
test
les
ret
icebp
push
push
clc
fldl
sbb
es
push
dec
nop
popa
jns
jne
iret
cmp
repz
pop
or
jbe
sub
lods
add
rolb
ret
fcoml
fisubs
or
jno
int3
xor
xchg
cwtl
mov
cltd
mov
clc
pop
aas
orb
sub
dec
and
pop
push
push
adc
fiadds
std
add
jl
xor
add
mov
cmp
je
jns
push
out
jl
in
jg
and
cmpb
bound
leave
or
jnp
out
andb
push
add
sub
out
jns
xor
flds
scas
dec
sbb
sbb
mov
xlat
inc
add
xchg
fisubrs
adc
rorl
xchg
lock
adc
or
cmp
xchg
out
jge
pusha
dec
dec
sub
iret
add
xchg
outsl
lock
mov
push
fnstsw
rcrb
stos
push
cs
test
out
andb
data16
jl
and
fldl2t
sub
rolb
mov
mov
push
movsl
xorl
rolb
cmp
or
and
subb
mov
lret
and
pop
mov
into
cmpsl
push
push
in
sahf
gs
bound
int3
mov
or
adcl
ret
xorb
adc
mov
dec
pushf
sbb
xchg
pop
push
or
jns
push
or
jbe
or
std
adcb
xorb
roll
int
mov
hlt
mov
add
pushl
ja
cld
xor
xor
repnz
movsl
test
repz
sub
cmpsl
lock
push
push
movntq
cmc
cld
inc
outsl
add
push
scas
push
jo
daa
inc
add
pushf
or
sub
add
xchg
add
jg
in
or
cmp
and
mov
popa
jl
lea
sub
leave
mov
arpl
fcos
or
jns
dec
inc
movb
mov
jne
and
xor
shlb
mov
jp
pop
lock
add
out
addr16
push
in
push
add
daa
pop
adc
push
mov
rolb
lret
mov
add
sbb
jle
cmc
je
or
repz
rorb
aam
push
jbe
dec
call
test
flds
roll
in
addr16
ja
or
add
push
lcall
adc
mov
mov
sbb
sbb
sahf
or
in
inc
mov
inc
aam
inc
xor
inc
imul
idivb
out
adc
sub
adc
std
and
or
outsl
xchg
jle
adc
jnp
and
jno
aam
add
cmc
adc
push
sub
mov
adc
or
cs
mov
push
imul
addl
imul
and
pop
mov
pushf
xchg
add
fcoms
in
ficompl
out
add
add
iret
out
jge
pop
mov
nop
xor
adcl
insl
push
add
add
cmp
add
and
paddsw
add
dec
nop
sbb
imul
push
add
fcoms
push
into
mov
lods
add
adc
jns
and
nop
xor
mov
inc
lahf
insl
cmpsl
and
mov
fmull
add
xchg
pop
sub
push
xor
fildl
inc
in
mov
movsb
add
push
aas
rolb
pop
jae
push
inc
in
mov
or
aam
cld
or
mov
jge
mov
add
mov
mov
add
adcb
add
xchg
jg
das
jbe
loope
sbb
repnz
push
jle
cli
fimuls
sub
xchg
sti
repz
inc
fst
cmpsl
add
les
mov
test
and
xor
fwait
inc
jge
ljmp
pusha
sub
jp
lods
push
btr
stos
pop
testb
jo
add
shrb
iret
push
out
das
add
lock
dec
pop
ss
dec
or
sbb
jp
fistl
sub
add
fdivl
cmpb
nop
mov
outsb
add
sub
push
add
sbb
jge
jbe
lret
and
jmp
mov
add
cmp
adc
dec
cmp
and
in
jo
ret
pusha
imul
jmp
push
lods
xorl
ss
pop
stos
fwait
cwtl
fistl
sbb
push
imul
ret
mov
push
adc
add
jo
pop
add
hlt
jb
push
mov
cmpsb
add
inc
cmpl
jmp
xlat
xchg
adc
mov
iret
mov
test
clc
xchg
add
gs
adc
add
movsb
inc
popf
int
lahf
cmp
xchg
mov
cmp
mov
sub
cmp
ficoms
in
divl
adc
inc
insb
stos
dec
mov
push
data16
insl
mov
fistpl
leave
fistps
test
sbb
cmp
sar
out
ss
add
es
test
popf
jp
add
add
and
add
mov
repnz
cmp
xor
dec
daa
aas
add
jmp
and
cld
add
add
mov
add
or
mov
pop
pop
repz
adc
xchg
xor
add
add
cmp
pop
fmuls
sbb
cmp
sbb
cmp
shlb
inc
inc
cmpsb
ret
sub
inc
push
xchg
pop
ds
sbbb
sbb
dec
call
pop
aam
lahf
test
frstor
mov
pop
xor
push
and
jbe
push
and
dec
daa
mov
stos
nop
add
sub
cmpsl
mov
xor
sub
enter
xor
adc
test
sub
addr16
push
inc
sti
outsb
pusha
pop
mov
mov
or
and
sub
cmp
or
stos
cmp
addl
pop
sbb
jl
mov
roll
push
arpl
jle
rcll
icebp
xor
fisttpl
xlat
fistpll
add
cld
test
or
setl
push
aam
hlt
ss
mov
inc
dec
or
cmpsb
sbb
mov
aam
test
adc
stos
shll
mov
add
loop
ja
in
daa
test
mov
add
and
jae
add
icebp
popf
dec
imul
add
nop
cmpl
xor
addr16
inc
cmpsb
pop
push
sub
scas
add
imul
add
jo
and
sbb
add
or
test
popa
jnp
inc
dec
sbb
mov
pop
out
and
sbb
jge
mov
lock
pop
sahf
mov
mov
add
inc
xor
flds
push
fnstsw
and
pushf
xchg
pop
jne
jmp
outsl
sub
clc
sarb
or
out
ucomiss
pusha
cmp
and
and
mov
pop
add
sbb
lcall
mov
add
xchg
into
das
cmp
add
mov
xorb
add
dec
add
push
cmp
sbb
ror
mov
fwait
add
push
jg
test
cmp
add
and
pop
int
sbb
adc
movsl
inc
cwtl
jecxz
adc
add
aas
out
inc
testl
scas
data16
add
xchg
into
and
mov
cld
inc
push
adc
mov
add
jg
add
cs
in
add
jns
shll
sbb
inc
dec
lret
in
pop
shl
add
cld
shlb
lods
jb
add
scas
push
arpl
movsb
lahf
dec
add
pop
push
rcll
fmuls
add
stos
js
lods
and
arpl
mov
in
sar
or
mov
out
pop
hlt
rol
and
add
sahf
int3
ret
adc
push
js
adc
jg
mov
push
add
jp
inc
and
mov
ss
js
lds
in
sub
jo
and
pop
add
mov
test
in
fdivrs
test
repz
or
cmpsb
loopne
imul
cltd
pop
mov
icebp
aaa
fisubrl
add
iret
lea
cmp
adc
add
jmp
andb
and
in
and
nop
lret
push
mov
std
lahf
pusha
pop
mov
add
data16
inc
leave
mov
loopne
or
xchg
test
push
int3
xlat
add
push
and
icebp
std
stos
add
pop
fmull
or
add
popa
mov
push
sub
icebp
les
jecxz
fcoms
add
push
jne
mov
cltd
add
icebp
popa
lret
imul
stc
hlt
fisubs
add
inc
cmp
add
mov
mov
mov
mov
out
push
js
sub
pop
in
fnstcw
push
arpl
add
lods
not
mov
mov
js
out
jge
pop
pop
add
negl
sahf
add
outsl
cmc
lret
pop
loopne
add
lea
or
fs
les
xchg
xorb
inc
cmp
xor
push
inc
daa
test
fstps
sbb
pop
out
cld
jo
faddl
mov
jb
add
fs
sbb
mov
inc
and
lea
pop
in
ja
pop
loop
sbb
lds
push
adc
add
outsb
js
xchg
cmp
les
cmp
cmp
cmp
out
adcb
xorb
out
rcrb
cwtl
add
inc
insb
std
pop
jns
pop
int
add
popf
add
test
push
cmp
xor
push
push
cmp
mov
or
sbb
cmpb
mov
add
stos
xchg
mov
and
xor
adc
or
faddl
cmp
sahf
je
add
dec
or
inc
mov
js
sbb
pop
loopne
cld
add
add
jnp
aaa
mov
or
movsb
mov
mov
mov
les
sarb
nop
sub
fadds
xchg
cmc
mov
jle
cmp
mov
mov
push
loope
sbb
push
push
pop
add
lahf
pop
icebp
loopne
in
nopl
cltd
repz
add
sbb
mov
mov
popa
repz
cmp
xor
and
mov
cmp
pop
scas
hlt
add
gs
push
in
fldl
push
in
dec
xor
mov
mov
lret
arpl
or
cld
out
add
xchg
inc
ret
mov
rorl
or
and
vmwrite
sahf
mov
mov
add
mov
jae
pusha
aam
je
bound
sbb
add
test
cltd
pop
push
cmp
jns
popa
ret
mov
sub
xchg
in
cld
pop
add
cmp
lret
inc
jmp
add
or
dec
inc
out
add
push
std
pop
xor
mov
bsf
adc
mov
cmp
int3
sub
inc
divl
pop
add
ret
jo
dec
or
out
lods
test
add
fists
mov
lahf
mov
imul
lret
or
fildll
add
lcall
add
into
and
mov
and
adc
fwait
nop
hlt
mov
int3
xchg
mov
xor
xor
and
or
add
add
in
cltd
add
test
ret
push
repnz
imul
mov
push
mov
cli
jge
add
jmp
mov
shl
inc
add
sbb
out
pop
xor
push
movaps
scas
out
adc
or
add
jl
jg
fsubrp
add
push
add
sbb
add
cmpb
pusha
xor
xchg
add
mov
fdiv
cmp
scas
andl
dec
inc
cwtl
ss
dec
lea
adc
sub
call
or
sub
add
xchg
stos
aas
imul
mov
mov
repz
ss
icebp
inc
jbe
dec
mov
add
mov
jge
hlt
mov
clc
jg
enter
mov
inc
push
dec
xor
divb
cmp
stos
and
mov
or
outsl
mov
inc
loope
mov
scas
xchg
les
cmp
testb
inc
mov
ljmp
out
fidivl
or
add
mov
xor
mov
and
add
xchg
test
addb
lea
movsl
popf
adc
sub
out
jg
or
into
xchg
sub
stos
add
cmp
sbb
add
aam
push
add
mov
aam
add
jb
in
push
inc
add
push
mov
popf
rolb
pop
leave
mov
es
mov
shlb
pop
jbe
fdivl
mov
ds
int
inc
mov
addr16
aas
addl
jb
in
and
mov
sbb
mov
mov
pop
jmp
nop
imul
xchg
inc
cld
xchg
xor
insb
add
cwtl
or
and
in
popa
mov
cmc
push
jb
pusha
inc
lods
add
lcall
sbb
add
lds
sti
sbb
inc
popf
mov
xchg
mov
imul
add
sti
outsb
dec
nop
outsl
adc
push
sub
cmp
sbb
add
adc
outsl
adcb
lret
add
cld
stc
adc
stos
push
in
sub
mov
sbbb
push
adc
sub
mov
and
ret
lods
add
mov
inc
mov
add
pop
jl
fwait
and
push
add
pop
sbb
std
cld
les
adc
insb
pop
inc
addr16
rolb
andl
enter
add
mov
gs
not
and
fisttpll
sub
jecxz
or
or
inc
push
jp
add
sub
call
mov
movsl
add
sub
xchg
into
adc
decb
push
push
xor
lods
lret
out
push
shrl
jb
jg
aad
dec
inc
jp
add
cltd
mov
in
call
js
leave
pop
sti
add
popa
add
xchg
rclb
mov
adc
push
jne
rol
add
fwait
sbb
jo
dec
out
addb
add
cli
sub
js
in
mov
es
gs
pushl
mov
std
inc
add
ds
andb
pop
sub
mov
add
or
push
add
and
cltd
add
stos
sub
xchg
int
add
jo
jbe
mov
das
and
sub
sahf
fstp
inc
cmp
mov
jnp
or
cmpsb
push
pop
add
pop
xchg
int
rcrl
addl
xchg
pop
ds
sbb
inc
in
das
hlt
jg
jl
inc
les
add
ficompl
and
add
loop
push
shrb
test
push
inc
stos
pop
fsub
mov
add
or
popa
jnp
and
add
dec
jmp
adcl
inc
es
xor
jbe
push
mov
popa
push
mov
js
add
cld
sbb
add
sbb
loop
rcr
pop
sahf
adc
mov
inc
cmp
aam
sarl
int
cld
sub
test
insl
pop
mov
add
pop
pop
andl
inc
out
call
add
push
push
sbb
mov
and
pop
add
stos
les
scas
sub
in
insb
cmp
lret
inc
mov
mov
sub
pop
adc
inc
adc
sar
mov
decl
xchg
aaa
mov
pop
or
jg
sbb
movl
fistpll
inc
mov
xchg
dec
mov
add
inc
int
mov
ret
jl
les
jg
pop
mov
xchg
add
daa
pop
mov
inc
nop
mov
test
scas
cmp
mov
jp
adc
test
add
sub
loopne
adc
xor
jnp
adc
aas
sbb
sub
cmp
pop
and
aad
xor
cmpsb
push
loope
push
test
adc
jecxz
imul
xchg
xor
jbe
dec
mov
sbb
scas
ja
or
or
mov
out
notb
stos
int3
ret
inc
ja
jo
xchg
mov
imul
scas
add
outsl
rolb
adcb
adc
lret
add
sbb
xchg
inc
enter
add
ljmp
dec
or
bound
roll
push
add
inc
or
and
or
aas
push
rolb
lcall
in
add
jle
mov
push
cs
lcall
cwtl
jne
mov
mov
add
jmp
push
loope
dec
mov
and
add
jl
add
dec
aam
xor
add
fsts
inc
mov
out
loope
aad
stos
add
fdivr
lea
xor
inc
add
in
or
cmp
or
test
arpl
call
sbb
fwait
in
add
gs
pop
jecxz
shlb
mov
xchg
adc
lods
add
inc
sar
sbb
cmp
jae
stos
das
lcall
add
cmp
add
gs
jmp
in
push
rorb
add
mov
stc
hlt
pop
jns
add
jmp
pop
mov
inc
and
sbb
loop
inc
add
enter
pushf
mov
xchg
leave
pusha
sbb
loopne
mov
add
inc
negb
cmpb
popl
shll
and
xchg
leave
add
mov
xchg
sub
stos
les
pop
jne
add
fadds
pop
cmp
outsl
pop
jle
xchg
add
mull
xor
les
add
sbb
hlt
scas
ljmp
ds
pop
xchg
xchg
std
adcb
pop
pop
bound
into
push
incb
push
sbb
sub
jmp
rcrl
sub
aaa
ret
pop
andb
sti
sbb
call
add
ffree
adc
nop
adc
or
mov
jp
gs
xchg
xchg
enter
add
scas
fwait
mov
cmpsb
dec
add
jge
movsb
std
jg
sahf
nop
lea
xchg
add
nop
xchg
pop
pop
les
idivl
mov
lret
ret
mov
cmp
pop
mov
inc
pusha
mov
in
push
xor
arpl
lret
and
hlt
flds
dec
ja,pt
mov
cwtl
xchg
add
sub
dec
aas
mov
inc
xchg
and
loopne
loop
push
xorl
mov
add
repz
mov
in
sbbl
ja
adc
sbb
sbb
mov
repnz
rolw
mov
or
add
andl
push
lds
sub
in
fwait
add
add
enter
or
es
add
lret
add
aam
jmp
into
mov
xchg
push
sti
in
fsin
dec
mov
jge
add
sti
add
push
push
lds
pusha
push
cmpsl
and
pop
and
mov
sbb
in
and
mov
add
mov
leave
js
or
nop
dec
pop
repz
fs
or
getsec
and
lock
mov
push
out
cmp
push
mov
mov
add
outsl
or
insl
fwait
cmpsl
add
mov
push
jl
repnz
ds
bswap
add
xor
outsl
push
sub
adc
pop
and
js
fsubs
pop
add
xlat
mov
lar
test
ret
sub
call
hlt
sbb
xchg
add
mov
mov
fcmovbe
adc
cmp
in
sbb
sahf
pop
sarb
jb
xor
mov
inc
push
cwtl
jo
adc
subb
mov
aad
and
xchg
imul
sub
lods
rcrb
adc
add
sub
mov
and
ja
inc
inc
fmul
fmul
and
ss
call
push
mov
dec
sub
int3
cmp
fildll
shll
fldl2e
dec
inc
mov
rcl
adc
add
or
into
cmp
sbb
jb
xchg
mov
mov
dec
inc
lds
xor
xchg
insl
xchg
ret
lcall
lret
and
repnz
add
stos
mov
mov
add
stos
call
add
cmp
add
divl
jns
fadds
dec
lods
add
fcmovnb
sub
or
mov
das
or
xlat
cmp
in
dec
in
add
cli
imul
jp
pop
or
xchg
add
jg
cltd
subb
jns
pop
xlat
stos
push
inc
cld
dec
dec
js
inc
xchg
out
sub
push
orl
adc
mov
clc
push
addl
adc
inc
and
add
mov
rolb
inc
xchg
mov
jae
clc
sarb
lahf
xor
push
add
mov
jmp
push
sub
or
addr16
push
cmp
or
dec
orl
in
daa
cs
pop
mov
jp
testl
mov
cmpl
ret
jbe
add
mov
push
clc
into
xor
add
outsb
jecxz
cltd
add
rorl
mov
add
in
jecxz
nop
movsb
xchg
dec
add
pop
sbb
mov
lods
xorb
add
push
jle
imul
and
xchg
xchg
test
int
mov
js
test
and
int
cmp
mov
dec
out
movsb
sub
xchg
or
mov
xchg
in
shlb
iret
jp
cwtl
cmpsb
dec
imul
add
test
dec
stc
push
sar
out
or
test
sbb
shlb
cld
cmpl
sbb
mov
jmp
push
mov
hlt
popa
call
dec
sub
aaa
cltd
jecxz
lock
stos
mov
test
roll
jae
and
cmpsb
in
dec
push
xor
inc
daa
adc
mov
push
repz
mov
inc
sub
pop
addb
loop
or
add
add
jp
pusha
xor
push
or
test
or
shll
fcomi
call
dec
add
xchg
lds
add
outsb
stos
or
sbbb
mov
and
inc
insb
in
sbb
sub
test
test
les
lea
push
inc
pop
std
xor
adc
jmp
call
lcall
not
jo
jns
cmpb
sbb
movsb
adc
out
jecxz
lds
xlat
add
gs
xor
shrb
add
xchg
add
sahf
popf
cmc
jns,pn
inc
mov
pop
loop
sub
and
and
push
mov
and
es
movsl
ja
dec
add
mulb
sbb
mov
lahf
incb
push
cmp
loopne
fwait
nop
sbb
xchg
cli
mov
cmc
push
fstps
xor
aam
adc
add
loopne
xchg
jns
adc
out
cmp
cs
adc
leave
icebp
push
push
fadds
pop
popf
and
or
mov
inc
jb
lret
sbb
mov
pusha
add
sub
xor
dec
mov
sub
cmc
pop
rclb
insl
in
xor
loop
add
loope
sub
icebp
push
add
rcrb
add
inc
dec
push
lods
addb
pop
push
orb
clc
mov
mov
pop
mov
and
fmuls
insb
ret
dec
mov
test
mul
sbbb
inc
mov
add
pop
into
or
push
and
out
mov
sbb
sub
enter
ret
rolb
xchg
andl
add
std
icebp
and
pop
in
push
pop
mov
jns
and
subl
cld
insl
and
pop
je
xor
or
wbinvd
inc
pop
mov
stc
popa
dec
test
jns
mov
and
add
out
pop
jbe
cs
mov
inc
push
sub
cmc
fbstp
dec
aad
mov
jnp
mov
fdivrs
add
push
popa
fisttpl
int
je
pusha
push
inc
out
sub
cmp
les
imull
pusha
cmp
aam
lahf
adc
dec
popa
in
add
mov
pusha
mov
sub
rcrl
adcb
add
adc
dec
jnp
loope
cmc
and
or
sub
mov
das
or
sahf
mov
and
add
mov
mov
adcl
pusha
or
cmp
loopne
add
sbb
sti
outsb
xchg
js
sbb
sbb
loopne
cltd
mov
ffreep
mov
nop
stos
inc
fstps
mov
out
or
pusha
and
jle
cs
inc
add
and
mov
jmp
test
mov
xchg
cwtl
jnp
dec
js,pt
ret
faddl
or
sti
ret
and
inc
mov
xchg
icebp
add
into
leave
inc
jns
cwtl
ret
mov
adcb
insl
mov
or
jge
test
stos
hlt
mov
pusha
outsb
and
adc
pop
test
xchg
cmp
fisttpl
imul
mov
lock
js
add
jnp
and
aas
andb
jo
xor
call
arpl
loopne
or
or
push
inc
adc
pop
in
loop
add
xchg
icebp
movsb
add
and
test
cwtl
sub
add
mov
adc
dec
mov
push
or
lahf
jbe
add
push
sbb
lods
pop
xchg
aaa
sbb
addb
or
je
mov
scas
jo
add
mov
std
add
fldt
push
mov
cli
add
mov
add
jno
push
cwtl
cmpsl
shlb
stos
sub
ret
mov
fimuls
out
loop
testl
lods
ret
clc
lcall
cwtl
repz
jmp
stc
pop
xchg
test
cmp
mov
jne
or
dec
pop
out
sbb
mov
pop
popa
mov
lods
nop
in
dec
inc
icebp
add
shrb
push
and
xlat
repz
adc
ds
adc
push
add
insb
mov
add
mov
popa
add
pop
pop
jo
out
inc
mov
or
dec
ljmp
outsl
aas
lock
jecxz
fildll
xor
pop
rcrb
movsl
jmp
dec
add
xchg
mov
push
mov
and
dec
sti
xchg
ja
nop
jae
addl
popa
lea
add
or
and
xor
and
jno
jge
add
pop
jp
jg
xchg
popf
adcb
jmp
fiadds
js
add
xor
clc
scas
enter
aad
pop
out
fiaddl
add
rcr
insb
loopne
call
test
popf
nop
mov
xchg
cmp
stos
idiv
popa
xor
in
add
inc
add
test
inc
and
mov
repnz
rcll
or
addb
add
icebp
push
pusha
mov
pop
stos
sbb
add
adc
cwtl
rclb
pop
mov
fstpt
pop
adcb
mov
lea
les
add
cmp
leave
add
testb
stc
jecxz
adc
pop
xchg
ret
jmp
aas
pushf
add
sub
adc
lods
add
inc
xchg
fiaddl
cmc
xchg
jmp
neg
ja
scas
shl
push
sbb
mov
or
push
dec
jno
and
nop
out
fs
pop
add
pop
jno
mov
sub
test
pusha
dec
mov
xchg
mov
insb
in
hlt
imulb
and
enter
popa
ret
mov
int3
add
mov
les
add
fidivrl
movsb
inc
fwait
repz
jns
repnz
sbb
add
xchg
loope
xor
or
add
lea
xchg
enter
inc
sub
call
add
sub
adc
mov
add
or
out
cmp
jle
pop
xlat
cmp
faddp
scas
cmp
xchg
xchg
and
add
jle
mov
mov
xor
int
adc
test
jo
mov
jns
add
loopne
cwtl
push
push
jl
fnstcw
and
add
fdivrs
or
lahf
lret
jns
jb
and
push
sub
jecxz
jl
push
out
lods
xchg
add
add
into
and
add
and
add
or
test
sub
add
testl
int
pusha
popa
mov
xchg
movsl
and
jle
xchg
rolb
into
add
leave
loopne
cltd
sbb
jne
sbb
push
push
imul
shl
outsl
js
add
jmp
mov
cmp
cli
add
mov
mov
add
mov
jecxz
dec
dec
lods
push
push
and
add
mov
cmc
or
sub
push
incl
fildl
cmpsl
js
nop
aam
pop
add
or
fistpll
divl
ds
dec
shlb
dec
int3
rolb
lahf
add
jecxz
push
add
or
mov
push
push
aas
cmp
add
shrb
pushf
add
inc
xchg
jp
pop
push
or
mov
dec
movsb
mov
cs
adc
jp
push
stc
jo
pop
pusha
push
cmpb
adc
add
fld
fwait
imul
loopne
jae
in
add
sbb
mov
add
push
loopne
mov
add
pop
add
fs
inc
mov
mov
dec
add
pop
cmp
pop
insb
pushl
push
and
ficoms
mov
and
add
cmp
mov
mov
iret
inc
into
ret
cmpb
pop
push
sub
test
setg
mov
or
sub
pop
roll
xor
je
xorb
cmp
dec
push
mov
add
rorb
mov
xchg
outsb
fxch
pop
xor
or
pop
aam
jg
cmpsb
or
or
mov
jo
inc
xchg
xchg
add
sub
mov
daa
push
cmp
lds
inc
movups
dec
inc
fisttpl
rcll
push
in
hlt
mov
lds
or
dec
push
and
and
daa
push
test
lcall
pop
adc
xor
call
or
add
popa
mov
pop
sub
lret
xor
out
mov
cld
ja
dec
pusha
jl
mov
repnz
add
adc
clc
pop
push
add
jmp
das
dec
jl
jp
add
out
xchg
pop
pop
push
cld
icebp
sub
or
ljmp
in
daa
xor
icebp
xchg
add
or
cmp
jo
loop
add
xor
and
adc
add
jne
push
neg
add
cmp
cmp
bound
add
loopne
jno
mov
and
sub
add
loop
inc
cltd
add
jbe
sbb
xor
xor
in
jp
add
pop
rorl
pop
xchg
fwait
add
push
xor
mov
or
jl
add
aam
sub
add
add
cmp
mov
pop
add
add
js
push
insb
xor
fwait
test
xor
aas
ljmp
cmp
jmp
add
fwait
hlt
add
or
dec
lods
jbe
idivb
jne
add
cmp
test
int3
add
pop
ret
push
mov
adc
lods
add
cmp
pusha
add
ss
add
cmp
sbb
add
shll
addr16
loopne
mov
jnp
daa
ret
sbb
add
add
cmpl
cltd
iret
or
cld
push
popa
nop
sub
xor
fldl
push
sub
adc
das
adcl
xchg
fsubl
and
decb
add
int
rclb
adc
test
add
jmp
or
pop
aas
pop
sbb
je
or
push
out
sahf
xor
cltd
loop
dec
mov
dec
neg
add
pop
iret
add
js
and
xor
and
repz
pop
ja
icebp
push
shrl
sub
adc
cmpsb
ljmp
test
mov
in
fdivl
mov
dec
test
cmp
pop
xor
add
in
jle
imul
hlt
call
dec
push
stos
mov
cld
add
inc
mov
jg
add
push
adc
lret
push
dec
scas
jne
mul
mov
mov
mov
xchg
pop
cmp
and
xor
add
sub
sub
icebp
xchg
outsl
inc
mov
add
ja
adc
shrb
push
clc
rcr
call
pop
aam
gs
fnstsw
hlt
jg
imul
mov
test
incl
popa
filds
js
adc
je
in
hlt
add
ss
ds
mov
cmc
out
mov
stc
adc
mov
add
dec
add
sbb
pusha
pop
mov
cmpsb
loopne
aas
test
xor
cmp
add
test
add
fldt
clc
in
add
adc
or
adc
sub
bound
inc
and
das
push
push
fwait
xchg
notb
xor
mov
rcr
push
lret
pop
pop
cs
mov
inc
push
add
or
rcll
cmp
add
push
add
adc
push
push
icebp
cmp
incb
or
iret
shl
sarl
sub
mov
les
inc
mov
add
iret
out
aad
jmp
mov
lcall
mov
mov
ret
xlat
bound
daa
push
xchg
add
mov
and
arpl
movl
push
pushf
fmull
lods
jge
jo
add
mov
jno
cli
mov
fmull
sti
inc
dec
mov
sbb
pop
fisubrl
add
jno
mov
clc
lds
mov
dec
push
and
sahf
iret
fstps
cmp
add
dec
mov
pop
inc
sarb
and
add
dec
rclb
add
jg
mov
or
inc
or
pop
add
adc
std
jecxz
enter
xchg
fadd
jns
pusha
jo
in
mov
paddw
dec
pushf
aaa
add
loop
cmp
xor
add
cmp
testl
adc
shl
add
jecxz
and
mov
in
aaa
rdtsc
xchg
mov
scas
scas
and
or
cmpb
outsl
repz
sub
push
std
shlb
xchg
or
jmp
enter
cmp
pop
and
or
push
lret
mov
ret
lea
sub
mov
test
ror
mov
cmp
add
xchg
push
fistps
cs
out
in
xchg
pop
and
mov
sub
add
call
add
ds
xchg
bound
add
xchg
push
movl
jmp
cmpsb
loopne
push
data16
fwait
push
ja
add
sub
cmp
stos
in
push
inc
add
xchg
movsb
ffree
push
pop
add
lret
dec
add
inc
jo
sub
and
mov
out
insb
in
nop
nop
add
pop
dec
inc
sarl
clc
pop
pop
push
sub
dec
ljmp
inc
or
add
inc
stos
jae
dec
pop
iret
add
mov
cltd
jmp
sbb
das
sbb
xchg
aad
or
push
arpl
loopne
jle
bound
fisubrl
pusha
or
std
dec
xchg
sub
jae
fdivs
xchg
adc
sbb
add
push
int3
testl
inc
in
jecxz
push
mov
mov
lds
add
mov
or
sub
subb
adcb
add
fyl2xp1
aad
lret
add
popf
xchg
sbb
lock
mov
sub
out
push
ljmp
xor
push
mov
jmp
out
pusha
loop
lods
adc
pop
jae
aam
mov
outsl
cli
adc
call
xor
add
aas
mov
pop
psubsw
rcrb
scas
test
pushf
jmp
pop
jge
cmp
js
xor
ja
sub
addr16
nop
sub
push
cmpsb
add
out
out
mov
cld
pop
lock
sbb
push
leave
insl
xor
mov
and
add
pop
jne
leave
xchg
add
sbb
scas
ds
pop
cld
push
jns
lock
test
rol
test
lret
mov
mov
enter
mov
repnz
cmp
push
xor
in
cmpsb
sti
pop
mov
rcl
mov
cwtl
push
and
loop
out
or
lea
lock
decb
hlt
out
adc
xor
sbb
dec
push
pop
jns
es
lahf
hlt
cwtl
xchg
and
imul
cli
xor
cmpsb
sbb
jmp
sbb
popf
push
repz
xchg
add
ds
add
stos
cmp
add
pop
cwtl
xor
adc
mov
push
rcl
mov
shll
das
add
or
sub
push
inc
cli
sub
rcll
out
mov
fimull
inc
js
cmp
push
xchg
mov
ds
add
add
dec
ret
cs
arpl
jo
mov
scas
add
lods
push
push
add
cmp
jl
pop
jo
add
adcl
fadd
int
fildll
pop
hlt
orb
faddl
stos
push
jae
dec
mov
add
add
and
cltd
adc
jl
pop
clc
mov
dec
frstor
or
dec
mov
push
std
int
inc
inc
into
mov
iret
xchg
je
push
mov
cmp
add
mov
fnstcw
add
outsl
stos
pop
clc
dec
loopne
frstor
pop
std
gs
call
cld
jmp
jg
pop
lcall
sbb
fwait
subb
push
jle
push
xor
fdivrl
pop
sub
insb
inc
out
sub
cmp
push
sbb
divb
xor
or
sbb
mov
and
jnp
ljmp
inc
add
int3
add
sub
push
cmc
pop
jmp
jnp
test
insl
add
cmc
jns
lock
add
inc
and
ret
sub
fdivrl
add
push
stos
xor
sub
fwait
add
daa
popa
push
add
xor
les
sbb
test
push
cmp
cmp
mov
enter
jle
mov
sub
push
addb
rolb
pushf
lahf
add
xor
cs
mov
xor
icebp
mov
lcall
loop
sub
inc
ds
cmpxchg
jae
add
das
fxch
dec
adc
xchg
imul
fstps
pop
push
inc
fadds
cmp
add
xchg
lea
out
fsubl
scas
add
popa
testb
data16
adc
popl
jmp
fistps
add
aam
pusha
fldt
add
mov
pop
out
dec
into
inc
outsb
add
sub
inc
xlat
xchg
jae
in
mov
movsb
add
add
rolb
out
jb
or
xchg
repz
add
mov
xchg
pop
mov
cltd
adc
dec
pusha
adc
push
jecxz
add
ret
les
sahf
or
out
add
add
arpl
repnz
jmp
dec
cmc
mov
adc
jecxz
adc
add
or
xor
mov
out
sti
add
push
pop
cmp
cmp
ret
ficomps
and
ja
xchg
inc
adc
cmovae
test
mov
push
rclb
add
fwait
rclb
mov
into
mov
dec
divl
mov
bound
add
lret
sub
mov
push
add
adc
shlb
jmp
push
sbb
xchg
cld
pop
add
pop
cmp
pop
add
std
dec
mov
jns
add
enter
je
xchg
adc
push
stos
push
add
pop
sbb
pop
ret
inc
mov
mov
add
arpl
repnz
jae
cmp
sti
pusha
roll
xor
mov
push
xor
dec
jae
movb
push
jmp
sbb
daa
adc
nop
and
push
cmpsl
cli
addl
xorb
mov
lret
add
mov
outsb
dec
and
pop
mov
add
icebp
outsb
jnp
and
xor
push
jecxz
dec
add
jno
mov
pusha
loop
shlb
jge
loopne
adcb
pop
sbb
incb
loop
sbb
cld
std
add
xchg
or
xchg
test
add
dec
scas
negl
or
inc
add
xlat
jmp
fstl
push
inc
mov
or
aas
fildl
sbb
scas
out
mov
add
mov
outsb
cwtl
fisubrl
or
leave
pusha
cmp
jecxz
dec
xchg
fs
rcl
in
add
sbb
dec
jp
cmp
xor
test
icebp
mov
adc
imul
and
in
sbb
jo
nop
pop
dec
js
add
flds
ja
nop
or
mov
into
xor
fidivrl
addb
shll
add
pop
inc
or
push
xlat
aas
clc
push
add
iret
xchg
fistpl
sub
add
ja
lea
inc
add
cmp
cmp
imul
pop
sbb
cmc
push
sub
mov
xor
xchg
pusha
add
aas
movl
fimuls
fildl
sub
adc
loope
movl
movsb
sub
push
add
pop
xchg
adc
push
in
jg
lret
xor
add
adcb
adc
xchg
aad
inc
mov
shll
leave
sbb
cmp
add
fadd
add
pop
and
in
imul
add
cwtl
add
clc
sub
add
movsb
xlat
sahf
mov
addb
frstor
je
cltd
add
repnz
fidivl
and
push
xor
jp
test
add
iret
push
sbb
fcoml
daa
dec
ljmp
dec
scas
mov
testl
loopne
cmp
jo
sub
add
sbb
aad
mov
cmpb
cli
inc
adc
pushf
dec
and
sub
add
mov
test
jl
jp
xlat
outsb
add
mov
nop
xor
movsl
jg
lret
imul
stc
add
or
test
adc
and
aas
rcrl
punpckldq
xchg
je
add
pop
pop
cmp
xor
inc
loop
shlb
add
ljmp
mov
sub
dec
sbb
ja
add
cwtl
leave
icebp
repnz
shrl
adc
movsl
in
push
add
in
push
pusha
inc
sbb
jge
ds
jmp
mov
sahf
popa
add
aam
stc
out
popf
add
insl
or
xchg
add
popf
enter
adc
dec
aas
adc
pop
fcomps
pushf
aad
xchg
inc
outsb
adc
dec
add
push
pop
and
push
int3
cli
mov
inc
aam
popa
cmc
add
and
pusha
fistps
pop
movsl
inc
dec
add
test
mov
jnp
nop
add
shrb
jns
pop
notb
xor
sahf
loopne
lods
in
lahf
popa
ljmp
sbb
fs
hlt
add
xchg
add
push
rcrl
in
mov
fadds
mov
int3
fs
icebp
cmp
mov
adc
jge
cwtl
add
jbe
mov
clc
fstpt
lcall
fwait
dec
je
pop
cli
jp
adc
aaa
cmpl
aas
ret
mov
icebp
int3
mov
bnd
sub
xor
testb
sahf
lret
pushf
rcl
or
or
rsm
mov
add
mov
add
add
pop
insb
lret
xchg
cmp
jb
mov
sbb
dec
add
dec
add
cwtl
add
jmp
aad
add
or
or
movsl
dec
push
pop
int
dec
xchg
enter
add
add
sarb
or
adc
stos
mov
xchg
ret
mov
xor
movsb
fs
or
add
add
stos
aaa
push
xor
sbb
imul
shrb
add
pop
sbb
popa
fs
icebp
int
push
test
adc
xstore-rng
cmpsl
add
inc
pusha
xor
insb
clc
cmp
sbb
fmull
and
lods
sub
cld
rorb
lret
xchg
pusha
stos
push
daa
iret
cmpsb
andb
loop
sbbb
or
mul
movzbl
jbe
pusha
push
jle
sbb
sbb
aas
enter
push
mov
lods
xor
popa
ret
in
cmpb
lret
lret
sub
jne
addr16
rorl
adc
enter
inc
cs
dec
mov
icebp
shl
pusha
dec
stc
es
or
cs
jge
and
test
push
sbbl
cmp
xlat
sub
insl
rcrb
add
fs
or
lret
testb
mov
fildll
arpl
inc
fninit
mov
scas
pusha
push
pop
je
rclb
sbb
sbb
inc
or
sub
pusha
rolb
add
std
rcrl
cmpb
mov
lcall
jnp
into
xchg
sub
inc
and
xlat
add
jno
mov
add
lahf
loop
jne
add
sbb
div
add
leave
push
fistpl
jno
out
sub
pop
add
push
xor
in
add
jp
add
lahf
add
pop
jne
add
addl
lahf
add
or
daa
add
repz
inc
rcrb
push
sahf
push
pop
inc
pop
out
loopne
sbb
and
repz
push
popf
cld
inc
dec
add
fstpl
cmc
sub
lods
rolb
sbb
cld
rolb
pop
aam
xchg
and
mov
cmpsl
inc
pop
in
cmp
lods
call
adc
xchg
pop
cmp
pop
cmpsb
std
rorb
lcall
adc
inc
lods
orl
push
push
sbb
xchg
push
das
push
outsb
and
mov
inc
pop
mov
testb
mov
scas
jg
and
push
sbb
pop
xor
aas
rolb
fsubrl
jo
inc
add
loop
sub
jecxz
xor
jp
repnz
mov
shrl
push
inc
insl
mov
push
test
pop
mov
xchg
jns
add
push
jne
add
adc
mov
jnp
sbb
out
cmpsl
adc
je
ljmp
fstl
xchg
add
and
sub
cmp
add
test
push
loope
add
mov
in
addps
mov
add
sub
fimull
leave
inc
pusha
adc
jmp
es
or
rolb
pop
ret
aam
and
nop
popf
mov
rcrb
popa
add
scas
xchg
push
shrb
mov
outsl
test
mov
and
aaa
and
sbb
mov
dec
in
add
and
mov
mov
jmp
push
ss
inc
pop
mov
out
jb
add
loope
sub
in
cmp
push
out
data16
push
xlat
and
in
clc
clc
imul
aam
addb
add
push
mov
dec
fwait
out
bound
adc
add
jb
loop
push
push
fldl
mov
inc
shrb
pop
sub
in
sbbb
shrb
sbb
push
lret
pop
add
popf
jl
mul
insl
dec
add
out
pusha
icebp
pop
test
cwtl
packsswb
and
scas
cmc
lds
aad
inc
leave
add
jge
mov
dec
or
cwtl
lods
sbb
cmp
pop
int
pop
xor
xchg
shll
push
mov
out
addr16
scas
into
add
inc
adcb
push
jl
xchg
rorb
pushf
mov
out
push
jo
loope
in
xchg
add
lret
icebp
ret
arpl
cmp
or
imul
add
xor
out
dec
xor
xchg
stos
flds
and
loopne
add
inc
shl
push
xorb
js
imul
cmp
cmp
addl
ljmp
fildll
add
and
xor
mov
cmp
add
aas
movsl
neg
test
jae
mov
imul
cmp
dec
xor
inc
mov
push
pop
sub
rcrb
icebp
add
sbb
sti
add
std
cmpsl
pop
imul
or
jmp
xchg
jo
add
ljmp
cmp
cmp
pop
xor
add
aas
lret
cltd
xchg
jae
and
add
loop
mov
cmp
lock
adc
push
mov
pusha
aaa
addr16
add
arpl
mov
or
roll
add
into
in
out
and
pop
pop
aam
xor
fbstp
les
dec
add
lahf
aaa
jge
fldcw
je
cltd
push
movsb
or
adc
leave
dec
pop
sbb
mov
cmc
insb
shrl
lahf
fidivrs
or
jge
sub
movsl
inc
add
xor
out
stc
shl
inc
add
mov
push
daa
enter
add
dec
ja
int3
dec
or
cltd
push
pop
sbbb
lcall
test
rcrb
cmp
pop
and
push
add
xchg
lret
cs
les
lcall
pop
adc
cli
mov
sti
mov
xchg
stc
and
rolb
aas
and
ds
pop
cmp
ja
shrb
add
or
flds
sbb
push
pop
add
mov
and
scas
push
aas
ret
jecxz
jae
loopne
fxam
inc
mov
add
les
rclb
icebp
mov
xlat
push
xor
or
int3
push
fisttps
pusha
cmp
push
add
adcb
lret
movsl
mov
fsub
mov
add
stc
sbb
mov
add
jno
push
sbb
dec
adc
out
inc
sub
push
push
add
popa
pop
xor
push
add
sbb
push
sbb
roll
mov
mov
dec
mul
jne
mov
popf
loopne
add
inc
add
pop
roll
pushw
sub
leave
dec
sbb
or
jp
adc
adc
sub
into
mov
and
dec
or
imul
into
mov
ljmp
pop
addl
lock
adc
add
mov
push
add
in
lods
addb
rol
push
addb
xchg
cwtl
mov
in
loopne
dec
pop
mov
xor
ja
push
xor
sbb
test
and
addr16
sbbl
mov
in
in
pusha
inc
rcrl
push
mov
cs
mov
sub
rclb
pop
repz
es
fcoml
push
test
add
jo
mov
xor
dec
add
mov
mov
sub
mov
mov
cwtl
jmp
push
leave
ss
dec
cmp
imul
mov
dec
out
sti
bound
ja
mov
mov
in
fnstcw
add
test
aad
lret
jo
sbb
sbb
mov
insb
push
pushf
push
arpl
and
jnp
fdivrl
mov
inc
shl
add
jae
adc
aam
fdivrp
aad
je
sub
call
pop
mov
or
pop
pop
jg
std
add
fcoml
add
push
add
cwtl
popa
fbstp
jns
and
enter
scas
jg
mov
or
mov
xchg
add
lret
stos
push
add
adc
and
cmpsl
gs
add
sbb
ret
adc
subb
and
std
rclb
and
fmull
and
jnp
test
lret
sbb
andb
xor
fistpll
ror
add
nop
push
push
loop
and
pop
xchg
orb
cmpb
jl
test
cwtl
add
push
lcall
cmpsb
dec
sbb
inc
add
stos
inc
test
popa
cmp
bound
fsubl
sti
out
popf
inc
sub
mov
mov
mov
sti
aaa
lret
je
add
or
test
nop
clc
add
push
sbb
xor
jmp
pop
or
lahf
add
jno
push
pusha
jb
or
adc
loope
add
push
adc
enter
push
mov
jo
jp
sbb
scas
cmp
mov
test
sub
gs
mov
mov
aad
dec
xchg
lret
icebp
push
aaa
rorb
jo
movsl
je
add
pop
jecxz
popl
pop
add
pop
dec
xor
sub
imul
shll
push
divb
adc
jecxz
or
mov
test
popf
xor
xor
adc
push
cmp
jno
aad
add
filds
and
out
jl
xchg
adc
inc
dec
push
mov
mov
repz
icebp
gs
mov
std
xchg
into
fstps
mov
inc
xchg
mov
and
mov
mov
std
fwait
cltd
bound
xor
xor
jg
clc
push
shl
cmp
sbb
fcoml
orl
imul
dec
mov
pop
arpl
fmul
or
lcall
add
or
xor
lahf
add
stos
movsl
lret
mov
mov
and
fcomps
dec
sbb
mov
xor
mov
and
sarl
mov
xor
js
jnp
inc
xchg
xchg
divl
inc
add
jb
add
loope
push
dec
jbe
loopne
jl
mov
xchg
movl
cmp
push
scas
cmpsl
mov
inc
xor
or
fs
jle
daa
push
xor
aad
dec
sbb
sbb
ljmp
and
push
mov
sahf
cmpsl
dec
cmp
mov
dec
into
bound
mov
add
add
pop
jmp
jo
jecxz
dec
mov
hlt
scas
dec
aas
aaa
inc
xchg
testl
pop
add
orb
add
add
lret
and
push
cs
leave
cmp
dec
cmp
iret
mov
fidivrl
and
mov
dec
mov
mov
rcrb
sarb
mov
jecxz
xlat
les
push
int
cmp
lds
sub
add
pop
movsb
pop
popf
pop
repnz
jbe
add
xchg
sub
test
fiadds
inc
jb
mov
dec
or
xchg
pop
pop
mov
pop
push
and
inc
das
push
fmuls
outsb
add
pop
aad
xchg
scas
lods
push
push
xor
dec
adc
xchg
insb
mov
fsts
inc
pop
and
mov
pop
add
mov
lods
jbe
arpl
pop
cmp
stos
mov
lods
hlt
or
add
mov
and
inc
cmp
jns
dec
outsb
and
mov
ss
xchg
mov
sbb
dec
filds
test
icebp
mov
jnp
add
jns
add
jo
mov
int3
add
mov
push
cs
out
in
aas
add
decb
jno
and
jo
sbb
add
pop
scas
push
subb
outsl
stos
ja
or
jle
das
jge
xchg
addb
adc
mov
xor
int3
out
int
sbb
clc
dec
orl
cmp
shlb
and
outsl
mov
out
jl
ret
xchg
xor
sarb
sahf
or
add
xchg
repnz
mov
stos
cld
pushf
mov
cli
lcall
ja
mov
sub
add
test
adc
gs
pop
jnp
dec
sub
hlt
sub
adc
add
pushf
adcb
sarl
int
add
icebp
add
xchg
jle
adc
and
aad
jbe
cltd
inc
es
sub
and
add
out
incb
stc
mov
sbb
mov
in
repz
lods
inc
test
movsl
and
mov
int3
hlt
mov
das
dec
add
cmp
or
lahf
sbb
dec
out
mov
push
ljmp
xchg
or
dec
mov
add
stos
jae
lods
fwait
out
incb
loope
mov
mov
pop
ret
inc
test
xor
xchg
mov
add
mov
dec
stos
cmc
pop
fdivrs
mov
es
mov
loope
inc
sbb
cli
test
flds
dec
out
mov
aam
aam
popf
sub
out
nop
sbb
push
repz
jmp
ja
add
push
sbb
clc
mov
movsb
or
jno
cmpsb
sahf
add
inc
fdivl
push
imul
arpl
mov
inc
notl
mov
mov
jne
lahf
add
leave
cmc
sbb
icebp
sub
dec
sub
shrb
popa
imulb
add
cmp
add
test
out
pop
pop
loope
cmp
into
add
add
ja
add
jle
adc
push
shlb
sahf
jg
add
and
pop
clc
mov
and
loope
xchg
add
out
jns
adc
loopne
dec
cmp
xchg
ret
sub
inc
add
adc
xor
inc
loopne
insb
test
insl
cmp
add
hlt
and
mov
sti
fidivs
imul
xchg
mov
push
xor
and
dec
fs
push
pop
adc
movsl
test
into
rcrl
sbb
mov
xor
repnz
jecxz
movsl
xor
sbb
mov
gs
icebp
xor
in
add
lea
add
lret
xchg
mov
or
jns
add
in
add
int3
add
pop
sbb
jp
mov
add
faddl
popa
push
xchg
dec
xor
movsl
pop
dec
pop
aam
repz
mov
jno
cs
pop
movsl
fsubrl
cs
lock
into
add
adc
mov
sbb
rcrl
leave
add
xchg
cmpb
cmp
outsb
mov
mov
into
xchg
jge
decb
push
insl
stc
jne
jp
shr
call
inc
lea
lcall
pop
sbb
mov
xor
or
jb
add
sahf
nop/reserved
sti
cmp
jl
mov
mov
sbbb
ret
out
and
add
les
aam
add
cmp
das
or
cmp
push
adc
enter
jbe
cwtl
clc
test
add
pop
in
lret
add
enter
mov
and
das
mov
andb
mov
adc
out
cmpb
and
mov
jno
xor
es
sub
mov
adc
add
mov
mov
inc
mov
das
add
pop
mov
jle
sub
out
mov
or
push
sub
out
repnz
cmp
cmp
or
lds
fstps
jo
mov
push
pop
inc
movsl
and
adc
push
and
cmp
insb
cli
xchg
ret
inc
add
sbb
push
and
add
mov
outsb
es
add
bound
addb
dec
lahf
adc
in
or
sbb
add
dec
pop
jo
in
mov
int3
loope
loopne
jl
add
xchg
ret
xor
xchg
pop
dec
dec
inc
xchg
push
push
adc
xchg
orb
add
pop
sub
jb
lcall
mov
in
xor
add
data16
jno
scas
xlat
shll
enter
inc
and
jmp
jg
scas
jo
fs
icebp
and
xchg
pusha
notb
mov
xlat
iret
push
outsl
add
mov
mov
pop
inc
leave
pop
cs
roll
pop
jp
enter
sub
jecxz
or
pushf
add
push
rorl
push
lods
xchg
pop
cmp
out
add
mov
add
icebp
jo
jp
enter
cs
or
rclb
mov
push
lds
jnp
cmp
push
mov
pushf
sub
movl
test
ror
add
pop
popf
dec
add
lret
mov
mov
xor
add
mov
sub
lods
sbb
rclb
shll
xor
mov
or
pop
loopne
push
cltd
sub
add
sti
cwtl
lcall
outsl
inc
mov
mov
push
add
adc
in
add
mov
fsub
add
int
icebp
imul
popa
popf
push
outsl
std
in
aam
dec
add
adc
push
xchg
add
mov
repz
push
sbb
cmp
je
pop
fildl
pop
and
in
xor
add
xchg
in
sbb
call
jnp
jl
test
shll
sub
or
sti
ret
mov
push
inc
add
fs
pop
aad
incb
push
stos
repz
dec
jmp
pop
lcall
dec
adc
imul
mov
mov
cmove
and
clts
dec
mov
in
mov
cmp
add
add
cld
xchg
bound
inc
pop
pop
stc
dec
mov
add
jmp
dec
mov
or
push
push
stos
or
lods
adc
add
ljmp
mov
mov
fimuls
insl
je
or
and
inc
jno
add
int
test
sarl
cli
sarb
lds
sahf
xor
out
dec
sbb
mov
in
in
ret
clc
push
add
push
jmp
xor
ljmp
sbb
cli
inc
cld
lcall
push
dec
adc
dec
pop
inc
sarb
gs
and
jbe
mov
cmp
sub
add
add
fmull
pop
pop
idivl
mov
rolb
inc
clc
aad
in
repnz
lret
xor
and
mov
sarl
push
je
pop
add
and
cmp
lods
add
fcomip
sub
jg
in
out
push
stos
ds
push
and
into
dec
add
jl
fiaddl
mov
pusha
or
push
adc
lret
rorb
xor
lods
es
enter
aas
and
mov
push
jle
or
lock
mov
cli
fisttpll
dec
push
addr16
subb
movsb
out
jge
jecxz
popa
lret
imul
xor
dec
add
inc
xchg
inc
or
test
sti
jb
orb
or
in
add
xchg
add
push
and
ret
push
xchg
xchg
pop
dec
and
sbb
sub
push
pop
cmpsl
dec
add
adc
dec
mov
subb
push
std
aaa
shrl
test
rorb
cmpsb
pop
xchg
jp
js
adc
addr16
add
aas
rorb
test
lcall
jbe
add
inc
and
add
cs
xorl
push
idivb
pop
pop
js
mov
dec
jo
push
add
cmpsb
push
mov
inc
shll
and
mov
or
mov
or
dec
xchg
js
sbb
adc
add
pop
mov
or
lods
xchg
in
and
add
pop
loopne
dec
add
cmpsb
movsl
adc
cmp
add
bound
add
push
mov
test
jg
jbe
shr
cmp
scas
js
xor
fnsetpm(287
jge
or
add
leave
rolb
mov
paddd
ljmp
xorl
pushf
mov
enter
add
lret
jb
in
pop
cmp
popf
loopne
mov
cmp
stos
push
mov
movsb
nop
scas
xchg
add
pop
dec
add
jae
add
sub
adc
insb
dec
pop
shlb
leave
outsl
dec
push
int
cmp
adcl
pop
sarl
and
xlat
and
dec
outsb
or
int3
test
je
sub
sti
adc
jl
cmp
cmp
imul
outsl
cwtl
inc
adc
loopne
roll
mov
add
push
in
push
add
popa
sub
and
les
and
loopne
movsl
dec
scas
add
dec
jb
mov
lret
inc
fldcw
pop
inc
ljmp
add
mov
inc
int3
mov
cmp
dec
daa
mov
or
into
stc
push
cld
ret
mov
xchg
js
sbb
add
mov
adc
push
pop
sub
dec
sbb
xchg
lods
ja
sub
lods
add
and
xchg
lret
ss
pop
cmp
xor
xchg
jle
push
adc
je
inc
nop
push
stc
testb
cltd
lods
fldcw
inc
adc
fadds
xor
mov
and
add
push
popf
jno
add
fbstp
push
mov
pusha
pop
lock
lods
movsl
decl
push
and
add
iret
test
mov
into
mov
shl
loop
ret
inc
add
mov
sbb
dec
cmp
xchg
mov
mov
push
pop
xlat
add
pop
nop
insb
add
xor
sub
jbe
setb
sahf
stc
shll
push
clc
repnz
sub
aad
or
dec
aam
leave
stos
xor
dec
add
xchg
or
add
arpl
inc
sub
out
sub
ljmp
push
or
jns
sbb
mov
or
or
js
dec
cmp
and
pop
jg
push
aas
mov
jmp
fldt
xchg
in
dec
fadd
subb
enter
xchg
mov
shl
xorb
add
inc
nop
fwait
lret
jne
add
dec
dec
lods
negb
or
popa
dec
mov
jns
pop
fs
ret
repz
sbb
add
mov
nop
xchg
mov
cs
dec
mov
hlt
inc
into
xchg
xor
mov
mov
js
aam
dec
add
repnz
je
aaa
sbb
pop
into
lods
imul
pop
lret
jge
cmp
pop
and
adc
insl
aaa
mov
sub
scas
call
out
in
xchg
pop
xlat
push
xor
aad
and
add
out
test
add
test
add
std
adc
out
push
fisubrl
cmp
lret
addb
cli
out
add
xchg
jbe
in
push
stc
xor
aam
xor
lcall
cmpsl
push
push
cmp
int
push
lea
add
xor
mov
or
and
lret
scas
jecxz
test
cmp
cmpsb
sti
or
xor
iret
or
add
push
cmp
in
popf
es
fidivs
pop
dec
mov
mov
xchg
test
adc
pop
xchg
lods
sarb
pop
out
cmpsb
int
mov
add
pop
cmp
or
jbe
leave
fsubl
sti
iret
cmp
adcb
rcrb
adc
adc
mov
pop
pop
push
sub
add
loop
fwait
loope
or
sbb
add
int
pop
and
sarb
xchg
and
add
dec
jbe
cmp
push
jns
adc
mov
mov
cmp
movsl
scas
lods
inc
sbb
mov
rorb
popf
adc
andl
mov
mov
insb
pop
xor
and
lahf
add
xchg
push
fs
dec
pop
shll
jo
clc
or
les
mov
enter
jns
ja
movsl
flds
cli
dec
insl
scas
cmp
or
sub
fcompl
add
pop
mov
lcall
ds
sti
xchg
add
xor
push
add
jnp
loopne
mov
nop
add
out
stc
add
xlat
adc
adc
adc
fldl
mov
je
pop
fs
into
popf
inc
ds
push
mov
pushf
and
add
int
gs
pop
adc
add
mov
enter
outsb
dec
fildl
jg
lahf
rolb
jge
cld
pop
xor
mov
push
das
pop
xor
add
mov
sbb
std
push
mov
add
loop
lock
mov
inc
orl
xor
add
cmp
roll
push
pop
nop
dec
add
and
popf
pop
or
daa
jle
jmp
cmp
sub
sbbl
cwtl
fmul
jo
pushf
add
nop
loope
inc
fidivl
roll
rclb
jle
sub
mov
push
and
outsb
std
sahf
pop
arpl
adc
int3
add
ret
add
cmpsl
out
pushl
jmp
addr16
test
dec
or
sub
les
sub
sbbl
jbe
sub
inc
ja
mov
push
gs
push
cmp
add
in
rcll
and
dec
rclb
clc
inc
sub
mov
dec
mov
and
lods
std
out
push
and
lea
sub
jae
int3
pop
push
xchg
inc
nop
xchg
cmp
out
int3
or
cmpsb
pop
or
jl
push
adc
inc
push
outsl
ljmp
lods
mov
push
imul
popa
pop
pop
cmp
adc
jo
nop
in
jl
sub
lret
idivb
push
and
and
divb
pop
insb
nop
adc
pusha
mov
add
sbb
push
add
cmc
push
inc
cmpl
int
cs
inc
xchg
add
jecxz
dec
add
mov
arpl
fildl
and
fdivs
mov
xor
or
add
add
enter
add
arpl
je
lret
add
sub
stos
cmp
sbbb
arpl
push
sbb
pop
adc
sub
lahf
push
add
clc
hlt
lods
sub
lret
jle
and
mov
sbb
inc
addb
push
movsb
jg
loopne
lock
dec
dec
std
jecxz
cwtl
or
add
inc
or
inc
dec
and
adc
jne
rolb
sbb
dec
mov
jl
cmp
jne
add
xchg
test
pop
scas
rcl
iret
jne
clc
jmp
mov
jmp
add
push
fimull
pop
adc
subb
outsb
jnp
add
pop
dec
dec
test
sbb
repnz
add
add
fnstcw
add
movl
push
lock
mov
jle
fs
xor
scas
jo
dec
cmp
inc
add
dec
outsl
xor
in
adcl
push
insb
and
pop
add
fsts
cmp
sub
pop
push
aad
push
add
add
cmp
test
jmp
mov
push
push
stc
inc
adc
sbb
or
mov
fsubs
movl
inc
xor
mov
sbb
fsubr
ret
pop
add
inc
call
or
out
jle
pop
repz
cli
sysret
bound
stc
dec
movsl
add
xor
in
mov
out
lods
rdpmc
loop
test
je
or
jb
cli
out
and
clc
stos
jecxz
div
add
hlt
jb
fistpl
jl
call
xchg
arpl
test
push
mov
add
jmp
xchg
das
faddl
pop
lea
ljmp
int
jl
stos
xchg
and
dec
push
mov
pop
push
cmp
scas
aad
aas
add
dec
lret
adc
push
in
das
test
add
cwtl
fisubl
jno
pop
pop
mov
xchg
dec
pop
inc
imulw
dec
nop
jmp
sub
and
jns
add
cmp
imul
adc
mov
cmp
inc
pusha
jmp
dec
popf
test
jge
add
lahf
mov
add
mov
add
ja
cmp
lock
mov
or
lret
call
rcll
jmp
call
sbb
push
xchg
pop
cwtl
inc
pusha
mov
add
mov
loopne
negl
xor
inc
fs
sahf
add
test
sbb
cmc
xor
jmp
sub
or
repnz
pop
into
fprem
enter
out
addb
jmp
fwait
mov
lfs
dec
xchg
add
mov
in
pop
add
outsb
lods
aam
xchg
dec
filds
testl
jp
xlat
pop
in
xor
mov
lgs
cmp
sub
leave
add
outsl
sti
repz
out
mov
outsb
js
es
mov
push
por
insb
ds
aas
inc
mov
inc
xchg
and
lock
push
ja
inc
int3
mov
icebp
sti
jns
jg
mov
into
clc
push
cwtl
sub
pusha
push
lods
pop
push
repz
sub
jb
add
sub
int3
mov
inc
pop
inc
or
lcall
stos
shlb
cld
out
icebp
fwait
xor
push
into
cmp
out
sbb
xchg
mov
xor
push
fwait
mov
leave
out
das
out
les
into
imul
push
jns
add
leave
daa
push
xchg
popa
loope
xchg
outsb
mov
adc
add
jne
pop
xor
mov
cwtl
adc
dec
mov
fildl
adc
push
cld
rcrl
sti
or
sub
dec
inc
mov
and
adc
cmpsb
fadds
fdivrl
add
jg
pop
enter
and
sbb
test
mov
sarl
or
fsubrs
add
aas
std
jmp
dec
pop
sbb
dec
addr16
cmp
out
mov
mov
xor
cld
push
or
sub
pop
push
in
movsl
jne
nop
in
or
dec
pushf
hlt
add
push
mov
sarl
movsb
jnp
popf
and
stos
sbb
mov
pop
lods
sbb
sbb
insb
repz
pop
lret
cwtl
add
shll
into
add
cmpsb
mov
mov
mov
icebp
add
jl
loop
add
fbstp
negb
aam
clc
cmpsb
loope
adc
jno
add
pushf
mov
mov
scas
dec
inc
xchg
inc
mov
cs
xor
adc
jmp
add
test
cmp
or
mov
and
hlt
cltd
push
xchg
sbb
dec
jbe
xor
add
sbb
add
mov
sbb
mov
das
imul
add
stos
sub
or
int
pop
nop
jns
inc
cmp
cmc
pop
mov
enter
arpl
lcall
jp
inc
cli
add
fs
and
push
loopne
jecxz
xor
dec
cmpb
push
movsb
cmp
hlt
sub
adc
lahf
jecxz
xchg
mov
push
pushf
cmpsb
dec
sbb
shl
roll
mov
sub
cmp
sahf
fsubrp
fildll
fsub
iret
push
dec
and
int3
mov
idivb
add
ret
jmp
mov
mov
push
dec
subl
inc
jne
insl
add
jb
and
add
mov
std
inc
xchg
push
inc
dec
add
push
xchg
sub
xor
push
aam
jle
std
inc
fwait
out
in
add
adc
loopne
add
pop
dec
js
pop
and
add
aad
adc
xchg
mov
pop
enter
add
sub
add
jnp
sub
push
cmpsl
xor
in
or
std
out
mov
pop
movsl
xchg
or
mov
inc
xor
loop
ljmp
sbb
jae
out
cmpsb
add
add
notl
mov
arpl
add
les
orb
aad
dec
adc
cli
std
jno
movsl
dec
jnp
inc
or
lea
ror
and
jl
jo
push
pusha
es
xchg
test
adc
rcrl
int
loopne
inc
push
sub
imul
sti
leave
xchg
push
pushf
outsl
lahf
pusha
fs
mov
push
or
and
ret
mov
dec
xor
dec
fwait
xchg
das
jne
sbb
push
push
dec
pushf
adc
mov
or
ss
lods
pop
sub
repz
push
or
pop
jnp
xor
cmp
lds
inc
mov
andl
inc
add
loop
imul
and
add
outsl
insl
cld
loope
cli
add
cmp
dec
pop
mov
shlb
xor
pusha
fwait
add
daa
in
xor
add
sub
pop
test
lock
sbb
jb
enter
sahf
push
xchg
into
aad
add
cltd
sub
lahf
add
or
add
mov
pusha
sbb
mov
jmp
sbb
pusha
xor
addl
xchg
xlat
add
push
mov
sub
pop
add
mov
fprem
lahf
pusha
call
add
sahf
mov
imul
jb
mov
jle
or
inc
pop
add
mov
ja
add
shrl
add
sbb
sub
int3
xorb
add
sti
sar
and
jecxz
icebp
or
jge
nop
sbb
xor
es
std
in
stos
insl
rcrb
xor
cmpsb
ret
shlb
aas
rclb
adc
dec
push
movsb
add
mov
xor
repz
sbb
test
jo
xchg
mov
cmp
jecxz
js
add
fbstp
das
je
cmp
add
imul
jge
inc
lret
jae
scas
push
clc
adc
jns
out
rclb
inc
das
jmp
add
sbb
addr16
add
aam
fmull
and
lds
and
pusha
clc
lea
arpl
ds
int
rcl
adc
add
hlt
sub
rcll
add
mov
pusha
xchg
adc
push
dec
out
add
mov
lahf
sub
add
into
movsb
int
jg
add
or
inc
xchg
xchg
inc
test
ret
pop
push
enter
ja
loopne
xchg
sub
dec
andl
fcoml
jb
sbb
pop
loopne
adc
cltd
aas
popa
add
pop
push
push
push
add
jno
les
pop
or
jnp
sahf
nop
fs
adc
ror
shlb
idivl
cmp
inc
pop
popf
aad
movsl
or
enter
mov
sub
cltd
push
adc
sarb
fidivs
cmpsb
lods
and
fwait
inc
add
push
cltd
repz
pop
ficompl
sbb
add
pop
add
pop
jmp
lcall
sub
sbb
loope
pop
das
out
cltd
imul
xlat
popa
push
add
arpl
je
pop
and
fsubrl
shlb
mov
or
fbld
add
rclb
daa
jle
sub
or
or
add
lods
int
mov
nop
outsl
dec
mov
mov
leave
cmp
int3
xchg
add
dec
mov
jge
cmp
pop
rcrl
gs
mov
shrb
aaa
subl
pop
jg
add
sbb
push
add
rclb
dec
shll
xor
cmp
sbb
das
lea
daa
add
in
add
popa
push
hlt
xor
inc
cmp
cmp
inc
xor
add
push
aam
pop
adc
sbb
sub
or
inc
mov
mov
pop
inc
dec
pop
testl
popa
in
mov
arpl
out
stc
mov
fcompl
nop
aam
xor
outsl
jae
loopne
pop
fildl
and
arpl
cli
add
xchg
mov
add
add
idivb
jmp
and
lret
scas
adcb
aam
rorb
lods
jbe
add
xchg
sysret
sbb
inc
enter
adc
into
rolb
xchg
add
stos
xor
lods
add
mov
jae,pn
movsb
or
pusha
subb
mov
lock
leave
lea
jnp
fdivl
daa
cmp
inc
push
cmpsl
das
add
popf
dec
roll
mov
add
test
shlb
pop
xor
call
jmp
cmp
adc
xor
inc
ja
pusha
add
sub
fidivrl
fcoms
ljmp
lret
cld
mov
adc
or
add
filds
orb
cltd
stc
jmp
clc
push
adc
add
inc
data16
sbb
and
pop
imul
push
and
sub
xchg
add
inc
cld
add
and
lret
adc
lcall
cmp
movsb
pusha
aad
hlt
push
add
jmp
mov
subb
loop
shlb
push
mov
outsl
dec
mov
inc
sbb
iret
das
cmp
clc
push
add
ret
insb
jl
mov
or
fwait
dec
cmc
add
jnp
mov
lods
int
shlb
pop
insl
jbe
outsb
dec
dec
pusha
inc
or
add
jb
aam
ja
sub
add
jae
stos
and
insl
add
pop
sti
data16
popf
mov
mov
inc
fistpl
and
xor
sbb
sub
scas
add
and
ret
add
pop
sub
add
into
fldt
out
and
mov
fs
loopne
mov
outsl
rolb
add
std
pop
lods
push
add
pop
cli
jl
sbb
push
push
add
mov
out
rcrl
jbe
cmp
add
outsl
push
ds
xor
xor
pusha
pop
adc
jl
xchg
jae
cmpsb
es
jb
push
sub
mov
push
cs
and
popa
xchg
sti
add
inc
xchg
adc
loope
insb
lock
hlt
popw
sub
sbb
arpl
shrb
lock
push
mov
cmpsb
addl
popa
fadds
mov
sbb
filds
xchg
nop
add
cld
add
icebp
and
cs
in
add
js
inc
mov
call
push
imulb
mov
sub
xor
testl
push
add
xchg
jbe
add
inc
jnp
pop
fwait
add
out
pop
dec
jae
add
xchg
sub
pop
movsb
add
ret
pop
mov
daa
fiaddl
cmc
add
insb
sbb
mov
out
cmp
jno
in
add
cld
es
inc
fisttps
sub
adc
lret
add
sub
icebp
and
lret
dec
fldcw
stos
jo
xchg
mov
and
and
mov
cmp
jne
add
idivb
imul
xor
nop
jb
dec
and
mov
mov
addl
adc
dec
sbb
pushf
shlb
jp
or
movsb
out
adc
pop
imul
jo
pop
add
xchg
and
aad
pop
and
add
dec
imul
jo
dec
push
push
aad
mov
js
push
add
test
jmp
in
add
stos
jmp
mov
and
xor
mov
adc
sbb
call
adc
push
mov
adcb
pop
inc
inc
pop
dec
adc
sub
xor
adc
inc
shl
sbbl
lret
mov
xlat
add
jecxz
ffree
sub
lock
test
fcomps
cwtl
add
test
sbb
add
jb
jmp
add
pusha
add
xchg
in
add
push
push
add
cmp
mov
sub
dec
and
es
out
add
sar
pop
add
outsl
sbb
fwait
or
xor
ss
xor
xchg
add
fiadds
mov
aad
cwtl
enter
sub
xor
lret
push
jle
addb
gs
jp
add
or
push
dec
pop
clc
add
cmp
mov
jo
arpl
push
sbb
dec
shrl
hlt
fldcw
xor
call
pop
add
outsl
shl
add
xor
or
pop
in
out
negb
ljmp
sub
movsb
ja
mov
sbb
notb
out
ja
add
cmp
lcall
loopne
jl
out
sbb
out
xchg
lcall
stos
ds
add
pavgw
sbb
mov
nop
loop
or
inc
jne
addb
lods
mov
addb
in
clc
sbb
in
add
add
sbbl
sbb
leave
jne
xor
add
out
xchg
or
jmp
ja
std
and
push
add
mov
ds
call
xor
cmc
mov
xchg
js
mov
mov
cld
add
divl
jne
sub
in
add
sbb
xchg
sub
nop
pusha
roll
cmpl
sar
xchg
jno
insl
and
icebp
add
aaa
lock
ljmpw
mov
popl
push
mov
int3
lods
outsb
push
shrl
sbb
cmp
or
push
xchg
add
pop
mov
iret
int3
add
loopne
daa
xchg
inc
ljmp
mov
test
add
mov
mov
add
pop
mov
ljmp
iret
inc
pop
incl
sbb
inc
pop
xchg
add
imul
pop
jno
cmpsl
mov
lock
xchg
add
mov
and
out
movsl
hlt
adc
jnp
mov
mov
lahf
xor
sbbb
sub
cmpsb
cmp
jp
add
cmp
in
stos
sub
rorb
cmp
adcl
mov
inc
mov
adc
mov
jbe
rclb
add
test
call
adc
in
sub
lret
xchg
and
jecxz
fbstp
inc
mov
f2xm1
pusha
in
adc
sbb
cmp
mov
push
cmp
push
adc
lods
das
add
add
mov
mov
add
and
stc
ds
cmp
addr16
js
jne
add
jmp
jb
jge
xchg
mov
add
pop
les
popf
in
add
dec
lea
inc
mov
sub
cwtl
clc
mov
mov
hlt
adc
add
sti
cmc
inc
fs
bound
dec
aaa
xchg
adc
pop
lahf
sub
scas
and
movl
xchg
and
ja
shll
nop
xor
fistl
fs
add
aam
add
orb
inc
outsl
je
ret
jbe
push
push
add
loopne
cld
pop
pop
jnp
xchg
add
ss
sarl
push
loopne
test
je
or
push
cmp
mov
out
fcmovnbe
aad
sbb
hlt
leave
mov
fmul
add
jl
or
lea
mov
dec
fstps
pushf
inc
out
dec
std
test
xchg
movsb
inc
int
mov
sbb
shrb
mov
add
cmp
scas
enter
les
dec
inc
cltd
and
mov
xor
xchg
test
xchg
loope
mov
sbb
pusha
outsb
sbb
jge
sbb
adc
jmp
gs
add
push
jno
add
cmc
ds
in
mov
cld
out
mov
mov
adc
xchg
dec
xor
add
and
and
pop
insb
sahf
or
adc
mov
mov
jmp
adc
les
add
adc
pop
add
sbb
insl
inc
mov
mov
outsb
inc
test
test
adc
mov
in
mov
dec
cmc
mov
xchg
in
sub
pop
int
mov
sbb
scas
fwait
lock
inc
sub
mov
add
cmc
jge
push
lods
or
ret
ljmp
outsl
pop
add
aad
cwtl
jno
sbb
adc
sub
sbb
or
or
jp
or
add
add
pusha
xor
lds
mov
cmc
cmp
sbb
incl
fwait
cmpsb
sbb
ljmp
add
or
add
push
insw
icebp
loopne
inc
into
jns
jle
sbb
cmp
cmp
mov
inc
ljmp
or
mov
flds
jecxz
jae
dec
add
movb
insb
mov
jge
shrb
pop
orb
inc
ja
setne
xchg
pushf
shlb
loop
cltd
pmaxsw
ret
fmul
or
add
mov
popa
add
add
out
andb
mov
sbb
xlat
adc
pop
pushf
pop
int3
repz
and
addb
les
jne
idiv
je
add
adc
out
jae
lcall
cmc
xorb
pop
mov
rorb
cmp
push
arpl
mov
pop
loopne
adc
add
aaa
bound
cmp
incl
cmpsl
jno
mov
outsb
sub
add
xorb
arpl
std
add
popf
imulb
lods
xchg
wrmsr
lock
add
daa
adc
fisttpl
fwait
lret
cmpsl
push
or
push
push
loopne
es
add
lods
xchg
cmp
cs
addb
xor
mov
into
sbb
or
push
fbstp
dec
xlat
cmp
inc
fsubrl
test
mov
stc
lds
das
int3
add
lcall
xchg
testl
fsubr
scas
or
add
push
iret
aas
mov
mov
push
cmp
imulb
cs
mov
fadds
or
outsb
inc
sbb
popf
in
mov
incb
loopne
jae
and
add
dec
mov
inc
loop
add
mov
sub
cmp
cs
fdivrl
sbb
add
test
fidivrs
lock
rorl
add
inc
jg
aam
xchg
add
xor
xor
nop
str
int
push
mov
movsl
and
cmp
or
test
js
or
js
add
cmpsl
cwtl
dec
icebp
cmpsb
mov
ret
sbb
xchg
iret
pop
pop
inc
adc
and
scas
cmp
xlat
add
or
out
orl
incl
lahf
jmp
pusha
xorb
pop
inc
and
outsb
psubsb
fimull
pop
add
mov
cmp
add
sbb
ret
sub
push
gs
push
outsl
lea
or
out
movb
jl
jnp
fucomip
dec
cmovno
fcom
mov
xchg
loopne
out
sarb
cmpsb
sbb
lcall
mov
scas
or
add
jle
fwait
cltd
js
pop
mov
lock
ljmp
outsb
adc
add
clc
sbb
loopne
sbb
jmp
and
fldcw
xchg
popf
mov
insl
test
stos
lcall
sub
and
mov
xchg
int3
jge
jp
pop
sub
jbe
lret
pop
in
xor
jb
pusha
mov
jmp
clc
mov
rorl
mov
xor
test
fimuls
mov
or
dec
cmpsb
xor
int3
push
jnp
xor
pusha
jno
add
aam
or
mov
cmp
cmp
insl
add
ja
add
int3
jg
ds
mov
pusha
jecxz
fmull
push
iret
icebp
sahf
jo
jbe
arpl
hlt
loop
xor
inc
add
add
push
mov
xor
cld
adc
cmp
fcomps
dec
jecxz
fildll
inc
jb
add
inc
lahf
ja
hlt
insl
add
mov
mov
xchg
out
loope
das
shl
aad
fdivrl
lahf
aas
push
outsb
cmp
movsl
mov
pushf
mov
int
mov
lock
mov
clc
out
add
shlb
add
fadd
xchg
or
cmpsb
mov
arpl
sub
mov
movsb
or
les
xchg
int3
xor
add
jmp
daa
and
xchg
sahf
adc
adc
fcoms
jp
add
mov
jns
add
movsl
xchg
push
pop
jp
add
mov
roll
dec
int
jae
lds
xor
dec
add
fstpt
mov
in
push
push
dec
idivl
xchg
and
lret
pop
add
cmpsl
jg
cwtl
cmp
xor
cmpsb
loope
lds
cmp
dec
gs
pop
sbb
push
int3
push
pop
lret
cmp
ljmp
aas
arpl
in
stos
and
leave
add
or
pop
add
lds
stc
or
push
push
mov
test
rsm
xor
into
add
hlt
push
cmp
cmc
add
or
in
mov
mov
sbb
push
test
mov
mov
sub
cmp
in
sub
jns
ja
inc
test
xor
dec
push
fs
and
jp
enter
and
nop
sub
test
push
dec
dec
inc
adc
mov
jge
lcall
inc
mov
sub
or
adc
roll
jb
jmp
notb
xchg
int
jo
mov
push
std
sbb
jae
lds
cwtl
in
xchg
ljmp
or
or
pusha
add
nop
or
xor
sub
rorb
clc
sub
dec
loopne
mov
test
add
scas
xchg
rcrb
push
dec
xlat
rorl
jmp
add
mov
add
enterw
adc
add
add
add
repnz
gs
xchg
sarb
inc
mov
or
inc
sti
or
sub
sbb
inc
test
pushf
fadds
nop
push
cmp
push
dec
test
jle
sub
out
xchg
mov
adc
mov
nop
mov
add
add
or
jge
dec
ud1
push
xor
clc
xchg
mul
add
fcom
xlat
xor
push
add
das
add
je
jb
bound
jl
add
jmp
lea
xorb
fmull
cmp
pop
fstl
adc
loop
xchg
inc
jnp
add
fwait
or
repz
mov
in
dec
mov
push
pop
jecxz
add
mov
rolb
scas
addb
jns
push
mov
push
xchg
cld
add
fs
xchg
out
dec
add
loopne
or
arpl
jge
call
mov
mov
insb
jne
dec
lods
mov
dec
daa
or
add
push
mov
mov
shr
dec
outsl
int3
les
add
fistpl
pop
fistpll
fs
aam
pop
testl
fnstenv
add
xchg
mov
setbe
test
popa
add
fisubrs
rolb
rorl
iret
aaa
xchg
cmpsl
mov
fists
out
inc
sarb
mov
data16
aas
push
jnp
or
lods
clc
or
xor
add
inc
mov
shll
pop
mov
mov
inc
test
testl
dec
imul
sub
sbb
lea
push
imul
cli
aad
pop
insb
je
xorl
fcompl
xor
sahf
std
les
adc
pop
into
pop
fisubl
lahf
add
add
repz
sbb
cltd
push
inc
sub
shrb
nop
roll
andl
nop
add
cmpsb
repz
out
push
arpl
mov
jnp
mov
out
xor
add
sub
insb
outsb
add
pusha
faddp
push
rcrl
out
int
lods
cmp
xor
cli
add
mov
push
push
or
lcall
loope
pop
andb
imul
shll
stos
fdivl
jl
fwait
jmp
sbb
scas
test
mov
add
outsl
mov
cmpl
add
add
mov
addb
mov
sahf
arpl
movsb
cmc
test
movsb
sbb
out
sbb
add
mov
ret
add
xchg
outsl
xchg
or
repz
cmp
rclb
pop
mov
mov
aad
push
std
mov
mov
push
out
pusha
xor
xchg
xor
pop
repz
mov
add
mov
nop
add
js
mov
add
sti
mov
push
and
jbe
repnz
rcrb
mov
add
adc
repz
xor
ja
lods
bnd
mov
mov
xor
mov
in
sub
icebp
iret
divps
out
mov
fcoms
push
push
in
rcrl
fs
inc
sub
loope
cmp
cmpsl
aas
mov
inc
leave
sarb
mov
mov
fisttpl
in
aad
xor
enter
xchg
push
add
popa
push
sti
mov
es
icebp
mov
loope
addr16
inc
test
add
or
sahf
pop
pusha
adc
mov
push
add
pop
xchg
jmp
adc
pop
int
hlt
loope
add
leave
add
jecxz
pop
cmp
in
mov
das
mov
aas
add
repnz
out
cmp
and
adc
add
ds
lret
jge
lahf
es
mov
subb
add
mov
and
mov
add
sub
pop
and
aam
int3
out
fs
mov
outsl
jae
add
out
inc
lret
mov
mov
add
mov
mov
mov
test
jl
sbb
cli
ficompl
push
mov
ret
push
pop
andb
stos
cwtl
imulb
adc
cmp
pop
xor
shll
jmp
add
xor
sub
xchg
sbbb
add
lock
pop
int3
test
mov
xchg
hlt
mov
jb
push
sbb
mov
push
mov
nop
push
xchg
sub
movsb
movl
scas
loopne
or
ja
roll
mov
or
sahf
or
xor
dec
aas
add
jge
push
add
xor
inc
imulb
mov
hlt
sbb
jne
cmp
add
enter
lods
fs
add
pop
xor
lret
add
mov
ss
mov
inc
inc
sub
mov
leave
out
mov
movsl
add
cwtl
mov
ds
leave
jge
rcrl
movsb
lock
pop
pop
test
scas
loop
sub
movsl
add
enter
xchg
add
in
ss
xor
enter
or
jae
pop
sbb
rcrb
push
mov
test
jns
add
pop
ret
in
lock
add
mov
pop
jg
push
add
xor
inc
loopne
es
cmpsb
jle
cmp
in
xor
xchg
add
ret
es
xchg
bound
scas
xchg
add
ffreep
add
stos
pop
xor
mov
bnd
lret
add
sarb
cmp
fadds
pushf
xor
push
or
jnp
adc
mov
pusha
cld
popf
add
insl
cmp
add
mov
arpl
lods
inc
fsubs
fadds
ret
sbb
or
stos
push
jp
daa
xlat
mov
add
cmp
push
int3
roll
lahf
mov
dec
sbb
fdivrp
add
pusha
test
leave
call
sbb
jmp
inc
add
shll
cmpsb
add
daa
loope
or
add
jnp
mov
cli
lret
add
mov
xor
mov
mov
add
pop
xchg
dec
mov
into
pusha
fwait
mov
add
mov
or
jg
cmpl
data16
in
lret
aam
add
sub
or
js
cmp
loopne
add
jecxz
push
or
add
pop
jg
adc
xor
or
mov
cmpsl
js
test
sub
and
add
cwtl
jecxz
xor
push
or
sbbl
iret
and
add
fucomip
sub
cwtl
test
add
sub
add
mov
and
rolb
sub
icebp
rclb
inc
add
dec
sub
dec
dec
xor
int3
loop
and
xlat
mov
inc
lret
movsb
in
mov
push
mov
sbb
dec
inc
inc
xchg
stos
fildl
out
dec
fildll
in
pop
fsubrs
add
add
sbbb
push
ja
xchg
mov
xchg
dec
pop
push
xor
add
push
stos
jnp
mov
mov
popa
movsl
sti
adcb
repnz
jns
add
sahf
test
add
out
stc
lods
mov
or
inc
sbb
mov
ljmp
jl
aas
fildl
loop
lods
fcmovb
sar
add
sbb
inc
inc
jle
add
fldt
push
test
in
das
sarb
add
rclb
xor
inc
adc
iret
xchg
shl
jb
rcll
arpl
jno
ret
cmp
subb
loope
pop
cld
push
adc
fxch
pop
add
insb
int3
push
xchg
xchg
add
leave
inc
pop
fmull
mov
pop
pusha
mov
push
test
cltd
push
adc
cvtpi2ps
shr
int3
repz
ret
pop
sub
xor
sub
dec
cmp
bound
mov
cmp
add
push
jne
fdivs
add
adc
and
jae
push
lret
cmp
ljmp
mov
cld
cltd
add
mov
push
mov
add
or
ljmp
aad
pop
adc
xor
xchg
sub
cwtl
add
std
mov
sub
push
call
sbb
in
loop
mov
adc
jmp
inc
rcl
mov
sbb
push
jle
mov
lock
mov
inc
mov
adc
icebp
or
mov
dec
jmp
es
push
xchg
sub
add
push
mov
xchg
mov
or
pop
dec
lds
rcl
lea
push
mov
imul
insl
jns
shr
mov
mov
add
mov
incb
push
pop
daa
jns
push
xchg
into
dec
jo
outsb
dec
and
insl
push
mov
mov
xchg
xchg
add
or
cmpsl
sub
fs
jb
mov
jae
mov
loopne
arpl
lods
out
aas
jno
out
dec
add
xchg
pusha
insb
lret
lods
add
rcrl
pop
cmpsl
pop
adc
cmp
pop
inc
jle
loop
cld
fdivs
test
pop
adc
repz
add
pop
aam
daa
stos
adc
shll
sbb
es
push
loopne
int
mov
push
or
and
inc
mov
sbbb
pusha
inc
filds
mov
nop
dec
pop
adc
add
enter
repnz
mov
insl
fbstp
push
ret
xlat
mov
ret
ds
std
cmpsb
mov
add
jmp
add
fiadds
ret
mov
push
adc
mov
fcoms
stc
pop
enter
or
xor
orb
jle
add
cmp
test
lcall
pop
pop
cwtl
mov
add
push
std
mov
aam
pop
pop
test
and
pusha
js
cmp
mov
shll
mov
mov
xchg
jno
add
ret
sbb
cwtl
rcll
add
daa
mov
xor
test
mov
cltd
loope
loopne
mov
pop
and
mov
test
mov
push
xor
faddl
and
test
sbbl
dec
add
pop
adc
in
push
xor
mov
and
mov
push
add
dec
popl
rclb
es
push
rolb
mov
jp
inc
add
out
scas
or
mov
ds
sub
fsubs
jecxz
mov
lock
xor
add
dec
sub
dec
and
sbb
jge
pop
insb
andb
add
into
lods
and
dec
push
cwtl
cs
sbb
jno
push
and
int
imulb
lds
push
call
jle
in
jbe
incb
lahf
mov
cmpsl
adc
repnz
iret
test
std
aas
push
lret
enter
out
xor
lahf
decl
lods
mov
ret
mov
xor
mov
pusha
pop
fldl
shl
jo
mov
outsl
jnp
repnz
xchg
xchg
faddl
sbb
pop
sub
jle
and
in
dec
sub
lret
jp
mov
ljmp
les
cmp
call
push
test
sub
loop
sbb
roll
adc
ja
push
hlt
outsb
pop
or
lahf
pop
add
adc
movsl
les
push
adc
mov
push
add
lret
sub
loop
cwtl
stos
jbe
xor
adc
in
jns
dec
or
orb
es
add
loopne
mov
mov
lods
lea
pop
dec
mov
or
cmp
add
xor
cmpb
cmp
jae
pushf
iret
mov
shr
mov
inc
mov
out
in
cmp
add
call
add
adc
push
or
push
and
int
ficompl
cmc
sbb
cmpl
cld
add
rclb
outsb
or
jle
shlb
out
pop
mov
loopne
sub
sub
rclb
ss
mov
or
add
mov
add
push
mov
fsubrl
pusha
sbb
sarb
pop
or
in
or
inc
outsl
sub
add
mov
aaa
mov
push
dec
aam
mov
lods
push
mov
pop
enter
arpl
stos
or
mov
pop
in
rcl
dec
add
xchg
incl
inc
insl
mov
push
pop
sbb
dec
sub
sti
movsb
out
cmc
jge
stc
imul
pop
cmp
push
cld
lahf
sarb
fildl
mov
in
imul
out
push
insb
xor
and
sbb
ljmp
jg
into
mov
sahf
add
into
scas
xor
add
adc
cwtl
mov
hlt
xor
pop
test
pop
addl
sbb
dec
cmp
js
add
je
mov
scas
fldcw
or
out
gs
fdivp
add
cwtl
adc
shlb
inc
cs
add
sarb
cli
fwait
movsb
subl
pop
add
cld
xchg
mov
dec
in
jae
bound
inc
mov
rclb
mov
test
xchg
repz
vandnps
xchg
mov
mov
pop
mov
jge
frstor
push
pop
clc
lahf
sbb
and
add
pushf
call
mov
roll
add
mov
cwtl
add
popf
lret
add
lds
add
stos
popa
inc
in
rorb
add
sbb
inc
adc
icebp
pop
mov
xor
xchg
add
insb
mov
and
int
mov
lock
pusha
jo
push
dec
push
jno
mov
push
insl
pusha
adc
das
cltd
add
popf
stos
cmp
inc
fucom
pop
xor
jns
or
sarl
push
rorb
dec
add
fwait
inc
jae
insb
add
in
add
out
es
cmc
sbbl
and
add
mov
mull
jns
add
sbb
into
mov
call
mov
loop
sub
mov
add
sbb
cmp
hlt
popa
or
cmpb
sub
push
xchg
es
push
cmp
or
mov
adc
add
sbb
jmp
mov
dec
clc
lret
add
adc
jp
add
cli
dec
or
or
test
mov
push
or
in
pop
push
cmp
call
add
inc
ficompl
add
in
aaa
add
xor
lods
std
stos
pop
jno
stc
pop
sbb
into
aam
push
dec
ss
dec
push
nop
adc
aaa
addb
inc
adc
andb
xor
pop
jo
movsb
rorb
clc
or
add
or
subl
mov
int
insl
ss
int
and
pop
add
adc
dec
std
sahf
mov
or
push
test
sub
jmp
mov
mov
sbb
sub
lock
jge
inc
mov
add
test
jl
adc
pop
add
xchg
push
xchg
lods
loope
xchg
inc
xor
add
pop
test
jbe
enter
int3
loopne
mov
add
lock
inc
fcompl
sub
pop
dec
and
fcompl
out
dec
mov
add
aad
and
lock
stc
pop
push
mov
mov
xchg
test
dec
shr
add
push
cmc
add
inc
in
movsb
jno
lret
add
add
aas
test
jge
out
xchg
rol
stos
jb
add
jle
add
nop
incb
insl
dec
imul
add
neg
jle
loopne
xchg
push
add
out
cmp
or
mov
push
push
jle
lods
pop
add
add
xor
xchg
xchg
ucomiss
sbb
cmp
pop
or
add
or
js
lock
jg
pop
cmpsb
loope
xor
sbb
or
cmpsb
test
xchg
mov
loop
enter
cwtl
out
orl
lcall
popf
test
cmp
sub
sub
inc
pop
hlt
aas
cltd
out
int
inc
sub
fcmove
push
add
adc
movsl
sbb
bound
sub
mov
add
arpl
pushf
add
addl
js
int3
repz
sub
or
in
fadds
push
lcall
pusha
sti
and
insl
test
dec
mov
test
or
pop
xor
loopne
ret
xchg
clc
add
sub
ucomiss
and
cmp
lret
test
push
cmp
das
adc
pop
or
xor
mov
sub
fldenv
sub
jo
pop
add
out
pop
testl
ret
fs
jmp
lock
lods
shl
inc
mov
sahf
push
in
or
dec
inc
add
nop
pop
jnp
add
mov
pop
flds
jge
sub
sub
adc
lret
pop
and
mov
notb
or
mov
mov
idivb
aad
call
repz
testl
addr16
icebp
ss
jg
or
shrb
xor
mov
popf
push
cmpsb
mov
mov
add
out
out
das
popf
dec
insb
imul
and
add
push
pop
fadds
pop
xchg
mov
imul
cmpsb
into
adc
pop
js
adc
add
sbb
pop
bound
lcall
push
mov
mov
outsb
jp
mov
lret
aam
or
cmpb
inc
add
movsb
nop
lock
mov
add
push
call
insb
xchg
fiaddl
xchg
push
push
clc
pushf
sarl
clc
push
xor
and
fimull
stos
lds
in
add
test
cmp
hlt
addb
mov
test
mov
adc
pop
add
ret
dec
das
mov
repnz
xor
jl
shll
push
or
push
pop
inc
and
subb
mov
sub
pop
add
les
dec
lret
pop
push
add
dec
icebp
rolb
adc
push
cmp
mov
add
fsubl
and
xchg
fcomps
dec
clc
test
cltd
dec
mov
repnz
movsb
div
iret
and
mov
sub
xor
xor
jg
jp
roll
mov
outsb
dec
aad
add
mov
dec
imul
fsubl
aad
in
sub
pop
and
mov
add
xor
cmpl
mov
int3
lret
add
sub
scas
add
add
mov
int3
loope
push
add
push
xor
add
dec
xchg
add
push
sub
sub
scas
cwtl
add
cmp
sbb
testb
mov
arpl
inc
adc
fcompl
fmulp
push
add
and
aaa
ja
push
mov
add
rcrl
scas
adc
stc
add
inc
cmp
ds
inc
sbb
ficoms
mov
fisubs
subb
addr16
mov
bnd
dec
xchg
xorb
mov
test
jne
shl
add
sbb
jo
rcrb
aas
mov
xor
scas
xchg
jne
xchg
add
xchg
jecxz
stos
jl
insb
jnp
lods
xchg
inc
inc
std
xchg
add
sbb
add
xchg
lret
dec
fcomi
and
mov
jge
mov
loopne
scas
add
xlat
outsb
sub
aas
or
xor
dec
je
stos
cmc
mov
popa
pushfw
fistl
sub
les
aas
add
ss
rorb
ljmp
add
test
mov
and
mov
push
fsubs
bnd
das
fsubr
repnz
add
data16
pusha
andb
mull
sarl
mov
add
mov
or
mov
fcompl
xchg
ss
mov
subb
test
jb
mov
jecxz
insb
add
ficoml
sub
out
or
mov
rorb
gs
inc
orb
je
mov
fsubl
mov
lahf
cmpb
jno
cmp
aaa
mov
xor
loopne
push
rcl
js
insb
das
gs
in
lds
and
rolb
pop
in
dec
cmp
add
hlt
sbb
push
xchg
scas
add
fs
pusha
dec
cwtl
stos
jle
add
lock
xchg
cli
mov
inc
sub
icebp
decb
sbb
insl
repz
jo
rcll
or
or
push
shll
sub
es
add
data16
lock
add
out
add
cs
mov
push
inc
fidivl
cmpsl
lahf
mov
jl
int
fstpl
cmp
xor
stc
xchg
and
push
ret
jnp
enter
pop
arpl
or
les
cli
add
mov
lds
lea
lcall
xor
and
jnp
add
fiaddl
xchg
cltd
mov
movl
or
xor
add
mov
mov
fisubrl
shrb
outsb
test
jl
jp
add
xchg
add
mov
loop
dec
mov
jns
fadds
jo
fldenv
std
xchg
push
outsl
push
cmp
jno
jae
in
cmc
sbb
mov
cmp
sti
inc
std
xor
add
sbb
push
add
fwait
dec
dec
scas
push
repnz
push
call
enter
jl
in
sub
pop
add
pmuludq
add
adc
ljmp
pop
es
add
andb
lret
outsb
pop
cmpsl
add
adc
rclb
jecxz
xlat
mov
push
imul
arpl
cwtl
or
aad
xchg
sub
inc
xor
test
bound
xchg
pop
push
std
xlat
pop
out
hlt
outsl
sub
pop
insl
enter
push
adc
xchg
dec
mov
add
add
lcall
cmc
cmpb
mov
push
xchg
andl
movsl
popa
nop
int
jns
shrb
jge
in
sbb
lock
cmpsb
sbbb
fiaddl
cmp
xchg
mov
dec
sub
adc
add
xchg
mov
push
or
add
mov
pop
clc
add
or
add
out
push
mov
mov
push
jge
pop
push
sub
dec
push
clc
pop
lock
loopne
dec
add
addr16
loop
call
test
sub
mov
add
leave
push
cmp
xchg
dec
adc
stc
test
add
mov
sub
pusha
rol
lock
int
add
fnstenv
andl
loop
cmp
je
adc
jb
dec
xor
dec
push
pop
lahf
push
rcrb
rolb
pop
fiadds
cwtl
mov
inc
inc
adc
mov
adc
scas
loopne
dec
addb
test
sub
push
movsb
push
jmp
and
loopne
lds
stos
idivb
add
int3
inc
aas
js
xor
lds
mov
les
sbb
sub
rol
adc
push
inc
dec
in
add
jmp
loopne
add
cmp
nop
inc
inc
lret
punpckldq
shr
lret
ret
mov
push
dec
adc
hlt
push
cmp
mov
xor
push
movsb
xor
inc
dec
add
mov
dec
loopne
icebp
xlat
pop
push
pushf
mov
mov
pop
fsubl
cmp
call
add
sbb
inc
stos
push
iret
or
add
add
xchg
adc
pop
rolb
add
test
das
mov
ficomps
fcompl
add
inc
xor
mov
cmp
xchg
xor
cmp
dec
aad
jecxz
mov
add
adc
pop
mov
rcl
pop
filds
scas
std
add
rcrb
or
xchg
push
stos
inc
movsb
inc
bound
mov
add
icebp
lret
ficomps
jle
sub
les
lock
ljmp
or
dec
jge
add
insl
cltd
mov
lcall
xchg
ficoms
loopnew
cmp
xor
stc
add
js
rol
push
or
xchg
lahf
inc
and
add
lret
push
pop
add
add
testl
cmc
add
inc
cmp
add
enter
pop
fcmovnu
or
or
in
bnd
cmc
mov
push
sbb
push
addb
sbb
fs
add
lods
in
adc
add
inc
xor
daa
cld
cmpb
call
sub
inc
cmp
add
sti
jp
jl
iret
pop
idivb
lods
mov
jo
out
pushf
mov
cmpsl
pop
push
leave
inc
xchg
bound
loopne
mov
shlb
out
call
and
inc
add
add
push
add
cld
xor
pop
nop
fmuls
pop
fstl
xor
hlt
xor
or
in
pop
pop
push
pop
jl
sub
das
jp
fdiv
aaa
out
fcoml
mov
add
ds
adc
mov
ror
fnstenv
xor
pop
int3
dec
call
push
adc
fnstcw
ss
xlat
push
add
and
and
int
jo
sub
sbb
loop
xor
pop
mov
add
add
pop
mov
add
jae
push
arpl
and
fmul
orb
sbb
or
jbe
sub
add
repz
push
pop
loopne
or
or
xor
nop
ret
rcrb
add
push
out
xor
mov
mov
pop
sub
bound
jo
mov
sbb
pop
jecxz,pn
mov
add
jle
and
dec
bound
sbbl
add
int3
in
hlt
test
mov
faddl
and
test
loope
mov
test
imul
pop
lds
shlb
mov
push
xlat
inc
xchg
fiadds
adc
out
inc
push
test
sar
add
jg
xor
push
sub
sbb
iret
enter
xor
add
dec
fcomi
xchg
sbb
mov
clc
inc
pop
ja
cld
pop
pop
add
shlb
lahf
cmc
clc
int
pop
or
mov
cmp
jne
sbb
push
pop
pop
loope
scas
andb
lahf
adc
test
mov
enter
popf
sbb
push
lock
push
push
repz
lcall
scas
test
sbb
mov
push
lods
stc
mov
add
or
dec
xlat
sahf
or
fisubs
push
push
push
lahf
adc
sbb
add
push
and
in
add
fwait
add
pop
xor
adc
add
dec
cmp
inc
scas
mov
mov
icebp
pop
lock
add
sbb
bound
adc
sbb
rcrb
pop
cmovo
js
imul
and
outsl
cwtl
or
sbb
daa
hlt
sub
jb
add
in
test
pop
add
pop
cmpsl
push
push
ds
scas
inc
adc
or
lret
filds
sbb
stc
pushf
sahf
inc
arpl
movsl
cmp
jo
call
add
pop
std
dec
insl
sbb
loop
sbb
jne
push
and
testl
add
pop
xchg
ret
aas
in
push
icebp
and
and
adc
xorb
pusha
rclb
aaa
adc
pop
push
jmp
and
add
mov
add
loopne
int3
and
and
adc
add
lret
fiaddl
or
cmc
inc
ja
pushf
add
jbe
mov
pusha
sarb
shll
jg
test
imul
add
loopne
mov
jle
or
add
lds
adc
push
sub
cmp
mov
jb
mov
hlt
je
loop
xor
push
add
cmp
inc
add
dec
adc
or
out
loop
es
mov
cmp
add
aam
inc
push
mov
arpl
popf
das
add
sbb
or
mov
xchg
push
mov
push
jle
jmp
xchg
mov
add
adc
bound
push
mov
mov
xchg
and
pop
mov
ss
xchg
pop
mov
sub
pushf
or
add
test
out
arpl
dec
mov
shrd
mov
mov
or
fcoml
imul
sbb
dec
dec
subl
cmpsb
xchg
inc
inc
ret
insl
mov
push
ret
mov
or
int
add
rclb
stc
pop
xchg
mov
enter
cltd
mov
cmp
rorb
xchg
fsub
mov
or
push
mov
jo
aaa
sub
adc
and
out
sbbb
and
js
stos
mov
and
inc
lcall
sub
and
inc
nop
mov
dec
aas
inc
fwait
inc
and
jl
dec
sub
dec
inc
sub
and
loopne
add
cwtl
mov
jnp
add
sub
jmp
sub
loope
pop
xchg
outsl
in
jp
adc
add
push
xor
shl
lds
or
pop
fsubrs
mov
dec
or
orb
xor
aam
sbb
aaa
pop
std
xchg
jnp
add
fidivrs
mov
xor
mov
pop
mov
add
pushf
bnd
lahf
cmc
rolb
aam
add
dec
lock
mov
and
or
mov
pop
xor
adc
inc
test
sarl
and
dec
movsb
daa
dec
ds
add
into
dec
jb
pop
cmc
push
mov
mov
sbb
jle
adc
push
push
adc
stos
mov
xor
lods
add
fsubs
out
xor
jno
push
jnp
cmp
push
add
add
cmp
fwait
push
jo
notl
fimull
fdivp
mov
push
inc
shll
into
ljmp
dec
pushf
mov
adc
sahf
outsl
popa
repnz
mov
test
in
push
mov
ljmp
lds
cltd
sub
mov
ds
add
divl
xor
or
in
flds
pop
jb
pop
loop
add
lret
mov
inc
xorl
cmp
das
aas
enter
add
jmp
and
jge
subb
pusha
repz
fwait
sahf
test
jp
adc
add
xchg
fidivl
fistl
pop
inc
cmp
adc
movsl
into
add
xor
fsubs
add
inc
add
aaa
or
sub
inc
nop
js
out
xchg
hlt
sbb
cli
aam
daa
adc
xor
adc
sbb
push
out
add
mov
test
iret
mov
lods
adc
push
fnsave
andb
adc
sbb
add
addb
push
jbe
lods
pushf
mov
add
ficompl
rolb
mov
mov
dec
sub
mov
loope
dec
add
aad
call
cmp
leave
add
sbb
sbbb
add
mov
rcr
subb
inc
mov
cmp
ret
pop
ds
mov
mov
out
add
mov
push
lods
add
repnz
std
pop
cltd
cmpl
xchg
xor
mov
add
push
lds
aas
rorb
arpl
movsb
lods
pop
add
mov
mov
add
pop
push
adc
int3
or
mov
lahf
dec
leave
sub
push
sbb
pushf
cs
push
stc
add
mov
cwtl
adc
iret
push
dec
enter
int3
inc
mov
stc
sub
sub
clc
add
jge
add
stos
fsubrl
dec
adc
jmp
mov
adcb
mulb
mov
data16
shll
mov
inc
sbb
call
adc
adc
add
pop
pop
insb
shrb
add
and
es
inc
test
adcb
add
xchg
dec
in
xlat
or
rcl
rolb
push
out
mov
add
orl
push
fwait
or
das
or
add
lret
stos
or
xchg
adc
mov
add
sbb
cltd
out
imul
add
pop
push
cmp
sbb
mov
bound
dec
shrb
icebp
add
add
test
lds
xlat
jmp
or
add
sub
int
dec
cmovne
and
in
cwtl
add
add
inc
add
sub
push
push
adcb
ret
or
cmpsl
orl
push
and
cmp
adc
stos
add
fistl
cmp
cltd
push
out
pop
dec
mov
ljmp
cli
in
out
loopne
outsb
call
xor
add
int3
push
cmpsb
aam
data16
and
ljmp
lock
fdivs
dec
jae
push
test
add
outsl
aam
loop
aas
outsb
add
ss
les
or
int3
mov
scas
in
sub
push
add
cs
inc
xlat
ljmp
pop
dec
xor
xor
adc
in
clc
adc
xlat
add
ret
mov
iret
xchg
jp
dec
push
xchg
push
in
jno
and
inc
mov
sub
aad
cmp
inc
mov
stc
xor
sub
sub
jp
dec
lods
push
xchg
mov
cmp
xchg
inc
xorb
or
pop
out
push
mov
pushf
loop
add
sub
aaa
inc
xor
sbb
int3
subb
dec
fmul
add
mov
rep
adcl
jns
add
mov
repnz
outsl
dec
cmp
sbb
popl
addb
dec
mov
sub
nop
int
pop
lahf
ljmp
leave
sbb
xlat
sbb
xor
mov
and
xchg
push
and
pop
scas
and
clc
subb
cmp
add
orb
adc
pop
dec
test
in
cmp
orb
adc
adc
inc
aaa
push
xor
mov
inc
push
adc
scas
sbb
pop
add
arpl
fidivs
add
mov
add
movsl
movsb
lods
imul
shll
sbb
mov
xchg
push
test
pop
push
je
xchg
das
int3
mov
cmp
pop
mov
fdivr
mul
push
pop
or
ds
orl
push
sub
loopne
mov
imul
xchg
fsubl
ret
addl
push
sub
fstps
je
cmp
inc
mov
sar
lret
jle
mov
add
fcmovbe
inc
cmp
movsl
sub
xlat
pop
add
mov
enter
call
mov
mov
insl
pop
repz
lret
add
jmp
add
js
add
lock
dec
mov
jmp
daa
pop
sbb
or
xlat
and
add
popl
push
pop
leave
out
pop
add
arpl
stos
daa
lods
push
dec
sbb
in
dec
insl
arpl
mov
js
ljmp
jmp
and
push
jae
jg
lods
orb
add
ss
arpl
add
js
add
std
imul
or
push
sbb
stos
enter
jnp
out
je
pop
xchg
ljmp
and
hlt
shrb
add
mov
mov
add
cmpl
nop
int3
sub
and
dec
pop
cmc
out
add
cmp
add
call
mov
lds
add
faddl
lret
sahf
cmp
nop
addb
add
cmp
sbb
dec
pop
aad
and
mov
les
loopne
mov
mov
sarl
add
lret
lock
jp
fisttpl
cmp
jb
pop
in
in
jnp
fxch
mov
scas
inc
sub
dec
sub
jb
add
mov
enter
jecxz
ss
cltd
faddl
mov
je
les
push
sbb
addl
and
cli
sbb
cwtl
cld
in
ret
add
into
repz
sbb
lods
mov
test
test
pop
push
fnsave
repz
mov
add
daa
jg
nop
add
js
cli
mov
jg
jp
add
cld
mov
xor
push
test
addr16
fcmovu
rcrb
repz
and
mov
push
mov
call
out
jnp
sbb
ljmp
mov
movsb
dec
push
sti
ret
les
sub
insl
mov
pop
aad
or
ficoml
push
ljmp
cmp
mov
or
and
pop
inc
cld
xchg
lea
mov
mov
jmp
xchg
adc
jmp
addr16
inc
adc
cmp
scas
or
pop
lret
shll
incl
les
xor
pop
mov
aaa
insb
imul
push
subb
add
adc
outsl
mov
aaa
xchg
sub
inc
mov
ds
std
fwait
cmp
dec
cltd
add
rcl
or
pushf
sbb
in
add
movsl
loop
pop
add
dec
or
rclb
and
bound
cmp
xorb
cltd
xor
nop
add
les
loope
cld
adc
mov
mov
pop
adc
xchg
inc
imul
faddl
test
jbe
mov
add
xor
jl
sbb
mov
xchg
inc
add
dec
push
aam
cmp
xchg
dec
outsl
pop
sub
fcoml
adc
dec
inc
add
nop
sbb
ret
in
and
xchg
xor
mov
add
mov
sahf
add
shll
fdivrl
mov
rcll
fsts
and
cmpsb
pop
mov
icebp
leave
pop
ja
add
int3
lds
mov
add
cld
inc
and
xchg
adc
cmp
mov
jno
add
jle
jo
lods
add
add
xor
sub
cltd
jbe
pop
mov
push
xor
mov
mov
pop
mov
push
mov
adc
push
mov
push
cmpsb
addr16
sarb
jbe
xchg
add
pop
mov
add
jp
insl
or
sub
push
movsb
mov
pop
popa
aas
jb
jne
push
jae
add
cmp
fisubrs
sbb
test
sub
test
jge
popf
and
outsl
mov
gs
mov
add
mov
filds
call
mov
add
fnstenv
push
aas
shll
mov
add
inc
mov
ss
pusha
insb
mov
loope
test
add
and
add
cmp
xchg
rcrb
mov
pop
add
add
mov
pop
dec
int
adc
in
mov
cmp
arpl
jmp
loopne
out
add
ficomps
add
imul
jle
mov
mov
jecxz
pop
aas
add
lahf
push
cmp
push
xchg
dec
stc
daa
js
push
add
xchg
mov
cmp
push
xchg
mov
xlat
add
sub
outsb
out
insl
add
inc
test
sub
les
dec
mov
or
sub
incl
insl
and
xchg
pusha
adc
add
aad
mov
in
pop
add
dec
or
aaa
cmp
imul
mov
adc
cmp
imul
add
leave
js
xor
and
cltd
add
xchg
jg
jmp
adc
xorb
push
je
dec
sub
xorb
hlt
cmpsl
in
add
dec
pop
dec
jge
fsubrs
inc
inc
ljmp
and
cwtl
sbb
pop
cmp
push
jo
xor
push
hlt
jg,pt
mov
or
dec
aaa
movsl
popa
pusha
push
add
and
xchg
arpl
sbb
push
insl
rcrb
add
mov
mov
xor
stos
mov
adc
inc
clc
imull
lret
add
mov
cwtl
dec
leave
ja
sbb
dec
lret
aas
add
mov
lret
push
or
cmp
popf
js
addr16
nop
xchg
sbb
pop
cld
ret
fstpl
insl
push
notl
mov
add
out
xlat
sti
push
leave
aad
or
xchg
add
push
add
dec
pop
sub
cmp
push
add
scas
pop
sub
fisttps
cmc
pop
and
cmp
push
repz
sbb
inc
outsb
add
add
jecxz
pop
aas
loopne
push
shlb
mov
lods
loop
rorl
mov
xchg
pusha
add
fwait
jp
sub
sbb
std
inc
adc
out
push
clc
fsubp
add
cmpsb
fstps
cmp
andb
in
jmp
xor
jae
mov
or
sbbl
je
shr
lret
cmp
lahf
add
add
sbb
add
xchg
pop
mov
mov
pxor
fisubrs
out
enter
pop
jnp
add
inc
mov
and
add
push
inc
sarb
leave
adcb
into
mov
pop
lds
movl
sbb
or
cmp
push
mov
movsb
add
sarb
ret
rcrb
adc
xor
mov
mov
mov
adc
jle
or
repz
pop
ljmp
adc
add
or
pop
add
jo
adc
mov
mov
popa
mov
or
add
mov
lock
imul
stc
lahf
fs
dec
out
push
add
sub
xor
cltd
push
test
sub
jg
cli
push
cmp
and
xor
sub
scas
adc
add
or
jno
loopne
ljmp
loope
aam
inc
add
mov
mov
add
ja
pop
movsl
inc
and
popf
dec
add
xchg
jmp
xorl
add
hlt
roll
sub
push
in
sub
loope
add
pusha
and
subl
sbb
inc
aad
faddl
add
xchg
or
pop
sarl
jecxz
xor
dec
lret
jl
out
cli
leave
mov
add
adc
dec
mov
jl
out
and
aaa
cmp
sbb
mov
es
mov
mov
ja
cwtl
cld
sldt
adc
xor
pop
push
add
cmpsb
stos
xorl
xchg
popf
pop
sub
out
ror
pop
cmpsb
dec
in
jp
popa
jne
and
jnp
adc
loop
cld
add
push
outsl
loope
sub
dec
bnd
ja
enter
add
pop
pop
call
push
xchg
in
pop
xor
imul
faddl
push
dec
inc
sub
and
sbb
add
sbb
inc
mov
stc
sub
mov
sbb
sub
mov
and
pop
xlat
or
lret
enter
into
mov
push
sub
xor
mov
arpl
mov
andb
inc
add
rorb
iret
add
mov
mov
jbe
insb
fbld
dec
imul
js
cmp
xchg
and
scas
inc
fbld
sub
fisubs
stos
and
or
out
add
js
mov
and
ss
pop
push
sub
mov
add
cmc
push
bound
mov
mov
push
js
test
add
cmpsl
pop
fbld
es
insl
push
cmp
test
push
in
out
inc
add
int
js
nop
xchg
data16
enter
not
inc
scas
in
lock
and
cwtl
pusha
aaa
fiadds
call
lcall
in
fisubrl
or
push
cmpsb
cmp
pop
aad
test
rolb
fidivrs
faddl
mov
mov
dec
mov
sub
push
and
lock
in
and
mov
sbb
xchg
mov
out
outsl
es
cmc
enter
adc
daa
add
dec
int
adc
pop
loopne
push
or
hlt
and
in
cmpb
and
sub
mov
stos
push
push
inc
push
adc
hlt
fisttps
test
int3
ljmp
dec
in
sbb
leave
add
aaa
mov
cmp
int
test
lcall
sti
mov
pop
dec
shll
pop
outsb
inc
mov
into
adcl
sub
or
adc
or
pushf
dec
jo
add
xchg
ss
add
push
mov
add
sub
je
pop
adc
ud2
jne
add
push
mov
and
mov
push
rclb
sysenter
andb
and
lret
cwtl
push
xor
clc
add
movsl
fldl
outsb
nop
push
ss
push
fs
pop
stos
int3
mov
pushl
mov
add
mov
jp
pop
les
mov
mov
ret
lds
lret
or
jns
cmp
out
jbe
add
inc
push
es
dec
xor
cmp
mov
dec
pushf
fiaddl
lods
leave
in
xor
pop
inc
ret
andb
or
inc
addl
insb
ljmp
test
sbbb
insl
and
ret
mov
push
push
adc
cmc
push
scas
loopne
mov
xor
pop
inc
fsubrs
push
incb
addb
push
xor
shll
cmp
push
xchg
fldl
pop
stos
sti
push
rcl
xchg
fstps
xchg
add
xchg
and
in
push
fwait
adc
push
jns
pusha
mov
call
xor
mov
pop
lods
or
loopne
jmp
add
xor
sti
mov
mov
pop
fwait
add
std
loopne
inc
add
jbe
jo
ds
dec
sbb
mov
loope
flds
movd
nop
mov
push
xchg
addl
sarb
mov
repz
movsb
fistps
jecxz
inc
aad
cmp
sbb
jmp
mov
clc
add
repnz
jl
fisttpl
cld
xchg
jo
xchg
xor
psubusb
mov
add
push
jno
out
adcb
cmp
add
cld
or
mov
pop
sbbb
call
push
mov
adc
stos
pushf
pusha
sbb
pop
incl
xchg
leave
dec
push
add
cwtl
in
pop
sbb
mov
std
lahf
dec
lds
sub
inc
cmp
adc
sbb
imul
pop
push
gs
out
bound
adc
je
sub
xchg
jle
push
aaa
call
fwait
test
mov
add
and
add
mov
mov
sbb
iret
add
lahf
or
punpcklbw
out
rclb
roll
adc
ret
in
mov
sbb
or
es
add
sbb
movsb
jg
mov
clc
leave
shrb
adc
loopne
inc
mov
pop
lods
push
add
out
jnp
add
and
insb
enter
mov
nop
add
mov
xlat
xor
mov
mov
mov
dec
mov
out
cmp
ret
mov
pop
mov
insl
sbb
pop
xchg
rclb
nop
xlat
push
pop
lea
push
and
cmpps
or
sub
ss
and
xor
jl
das
mov
mov
popl
jnp
call
notl
scas
add
xchg
mov
je
adc
cmpb
or
add
je
jle
adc
repz
loopne
and
add
mov
cli
pop
stc
pop
pop
lods
add
ret
add
mov
push
jo
lret
mov
mov
loop
add
das
addr16
sbb
lcall
incb
popf
cmpsl
sbb
mov
xlat
dec
jl
add
outsb
push
dec
cld
adc
sub
addr16
mov
shll
push
dec
mov
stc
push
pop
icebp
cmc
mov
ja
lahf
or
lock
add
sub
push
icebp
inc
repnz
and
cmpsb
jecxz
and
roll
insb
adc
loopne
je
dec
xorb
pop
dec
dec
lret
enter
out
nop
cmpsl
ss
jecxz
pop
and
jns
add
xchg
adc
sldt
ret
mov
jbe
and
xchg
add
les
out
orb
leave
mov
sbb
xchg
loopne
sbb
lods
mov
mov
jno
dec
fadds
add
pop
xchg
shl
adc
push
mov
and
and
add
or
push
add
shrb
out
add
addb
sub
ret
loope
mov
add
mov
push
sub
push
pop
add
dec
mov
cmp
xchg
add
rcrb
test
and
jl
push
das
add
lods
mov
xchg
cmp
add
xorb
enter
or
loopne
mov
loope
movsl
sti
dec
ja
xor
nop
add
rorl
jb
sub
mov
outsb
pop
gs
call
and
fld
leave
jo
jnp
dec
clc
dec
push
sub
sub
pop
lret
add
lea
push
cmp
xchg
add
lds
add
loope
adc
jb
mov
pusha
xchg
pop
add
lds
neg
test
sahf
mov
std
mov
je
or
js
shlb
add
xor
xchg
rcll
xchg
test
jb,pt
push
fcmovnu
icebp
or
or
pop
inc
and
xchg
jo
adc
add
fs
mov
es
aam
cmpb
divb
and
dec
xchg
outsl
aam
adc
gs
pop
fdivl
in
jae
add
add
mov
pop
loope
push
std
cmpsl
and
cmp
cmp
or
adc
rorl
test
fbld
mov
pop
xchg
cmp
xchg
adc
lret
inc
jns
add
lahf
mov
add
cmpsl
pushf
daa
adc
xchg
jbe
add
stc
jne
clc
or
add
mov
mov
or
xor
inc
loopne
pop
add
mov
dec
add
ror
inc
sbbl
add
sub
jb
mov
sbb
xchg
lret
add
pop
stc
in
jmp
adc
add
inc
push
sub
andb
mov
aas
cmp
sbb
loope
xlat
mov
test
scas
js
jle
mov
and
mov
add
xor
movsb
loopne
mov
xchg
in
scas
mov
mov
rclb
mov
jb
and
fwait
pop
push
movsl
cmpsb
jge
into
rolb
subl
les
adc
fiaddl
loopne
add
pop
popa
adc
dec
imul
pop
mov
stc
cmp
xor
inc
sbb
aas
xor
add
sbb
xorl
pop
cwtl
or
stos
loopne
mov
cmp
dec
inc
add
in
dec
adc
dec
sub
mov
iret
sbb
mov
ljmp
es
or
cmp
cmp
dec
rcrb
add
ljmp
and
fmuls
mov
dec
test
add
sarb
orb
dec
lahf
stos
sub
popa
add
xchg
movsb
dec
push
lock
outsb
xor
jo
jge
roll
sti
jne
outsl
lret
into
push
mov
pop
nop
rolb
jp
add
add
and
fwait
out
sar
out
cmp
iret
icebp
idivl
stc
jecxz
add
scas
xor
shlb
mov
outsl
scas
leave
sbb
push
mov
int
xchg
cld
pop
mov
and
adc
inc
jge
aas
xor
push
inc
fstpl
xchg
movsb
or
lds
sbbl
and
mov
fwait
call
inc
or
pop
adc
jp
out
aad
pop
enter
pop
cmp
into
push
add
js
repnz
add
pushf
enter
loop
pop
test
stc
gs
add
sub
cltd
jno
out
add
fisubrs
adc
cld
clc
xchg
sbb
and
push
ret
push
mulb
add
or
cltd
fdivs
or
or
outsl
jmp
lock
mov
mov
sbb
jns
dec
cli
inc
clc
int3
inc
les
in
add
mov
push
insl
push
nop
add
push
clc
xchg
jmp
mov
add
outsl
insl
jbe
and
push
sbb
fisubs
add
jmp
jo
inc
popf
add
dec
jae
call
int3
in
and
stos
sbb
negl
ja
repz
in
cltd
hlt
add
inc
int3
jb
cmp
cmpb
adc
dec
repnz
xchg
call
inc
cmpsb
xor
rclb
je
into
add
pop
rcrl
jo
jne
rolb
dec
mov
add
mov
xor
inc
lods
nop
lds
pop
inc
and
loop
and
int
sbb
es
cmp
pop
je
movsl
cwtl
dec
std
imul
dec
mov
imul
jns
fdivrl
sbb
sub
std
push
add
mov
gs
nop
call
mov
cmc
jno
or
rcl
mov
sub
sbb
push
pop
movsb
pop
mov
pusha
push
mov
mov
pop
scas
mov
add
xchg
mov
int
enter
sbb
jo
cmp
adc
adc
add
push
sti
cmp
lock
mov
pop
pop
clc
inc
lea
mov
cmp
mov
shll
cmp
push
adc
add
sub
xor
sub
add
add
iret
push
xchg
std
mov
fimull
adc
test
jp
mov
cli
mov
lret
lods
pop
js
rcr
pop
add
in
and
pop
mov
cmpb
jno
in
add
pusha
jo
pop
mov
jne
jo
shl
aaa
add
ret
pop
je
xchg
cmpsl
and
arpl
mov
addb
js
push
das
lds
hlt
inc
je
mov
xchg
fsts
push
or
mov
add
icebp
and
mov
je
push
mov
lret
mov
sbb
pushf
add
xor
fnsave
mov
daa
es
in
pop
mov
stos
das
cwtl
aas
xchg
pop
pop
push
jg
inc
ss
and
adc
sbb
adc
call
lea
dec
cmp
loope
sub
mov
inc
ret
or
fcom
xor
mov
or
pushf
pop
fs
xor
pop
add
push
cwtl
pop
ds
add
push
stos
dec
sub
xchg
jae
add
pusha
push
lret
sbb
fxch
and
jge
test
and
mov
and
push
call
push
jo
inc
xor
adcb
in
mov
sbb
push
sub
scas
bound
add
shlb
push
pop
dec
andl
loop
outsl
andb
pop
out
aam
xor
aad
pop
sub
cmc
push
push
shrl
rcpps
xchg
cmp
or
ret
pop
aam
push
jo
add
inc
pop
and
cmp
push
adc
inc
xor
push
sahf
pop
add
xchg
inc
movsl
andb
sbb
add
fwait
test
cmc
int3
jne
mov
jp
rcr
popa
ja
and
nop
js
je
enter
call
add
movsb
cmp
jg
dec
imul
pop
sbb
sbb
xchg
add
shrl
fstps
adc
movsb
gs
jl
xor
or
shr
dec
daa
sbb
cmpb
fidivrl
jbe
aaa
inc
repz
adc
and
xchg
icebp
cmp
pop
fs
and
jo
push
and
mov
jae
jno
insl
addr16
fldt
shlb
je
aaa
out
mov
inc
xchg
scas
add
jno
repz
fldcw
add
out
lahf
jnp
nop
rclb
push
sbb
xchg
arpl
add
sahf
or
inc
lahf
mov
xchg
loopne
xchg
nop
outsb
add
pop
and
push
loope
mov
mov
stc
lcall
mov
push
aad
cmp
xchg
pop
cld
adc
mov
pop
pop
adc
js
bound
add
fdivl
data16
cwtl
jnp
lret
out
ss
push
and
sbb
add
fnsave
gs
sbb
pop
icebp
add
pop
ja
push
shlb
addl
enter
mov
stos
mov
mov
push
outsb
cwtl
add
sti
sbb
rorb
xchg
rclb
jns
xor
fadds
jecxz
data16
lret
cld
pusha
xor
sbb
ror
add
test
pop
cltd
jmp
add
insb
adc
shl
sysret
push
mov
adc
sub
mov
mov
xchg
mov
nop
push
mov
or
ja
xor
mov
test
sldt
mov
mov
mov
cld
adc
imul
add
mov
aad
mov
add
cmp
inc
daa
pop
in
clc
mov
xchg
outsb
dec
or
xchg
push
test
in
addb
aad
add
push
pusha
leave
xor
pop
jg
fldt
sbb
jbe
cmp
fcom
inc
movsb
push
jg
pusha
xchg
fildl
stos
sub
popf
stos
and
jne
sbb
mov
adc
mov
addb
inc
rclb
or
js
mov
ret
stos
push
push
pop
aam
mov
push
faddl
sbb
popa
cli
jecxz
mov
enter
loopne
cmp
les
add
cs
add
mov
xchg
push
or
into
or
cmp
xor
cld
mov
iret
sub
subb
clc
cmc
hlt
aad
addb
lock
test
inc
dec
sub
lods
push
cmp
adc
je
jbe
sbb
push
xchg
lcall
add
mov
nop
pop
sbb
daa
stos
in
sbbb
xor
jbe
xchg
inc
loopne
fldenv
cmp
and
addr16
add
lods
iret
and
aas
and
add
imul
ret
push
or
pusha
enter
jnp
in
lock
je
add
test
jae
fistps
popf
mov
fldenv
inc
adc
int
loop
pop
pop
jmp
subb
dec
rolb
jg
roll
xchg
dec
dec
mov
push
sub
ljmp
ljmp
mov
cmp
rorl
cmpsl
xor
sbb
mov
or
xor
sbb
jnp
out
xchg
xchg
pop
adc
pop
jbe
add
xlat
jmp
push
rcl
add
cli
xor
leave
jg
add
clc
outsl
ds
jge
add
inc
sub
sub
fistps
fs
xchg
outsl
fsub
cmp
pop
cmp
push
add
leave
andb
or
cld
xchg
data16
mov
jg
andb
aaa
clc
and
roll
add
fcoml
arpl
jecxz
mov
inc
sti
rorb
inc
lock
addr16
add
jp
imul
cmp
mov
cmp
movsb
ficoml
jp
pop
mov
lods
adc
adc
test
push
adc
or
add
cmp
shlb
mov
ficomps
es
or
dec
sbb
and
pushf
and
scas
ret
cmp
ret
push
jge
xor
or
pushf
cltd
jns
testb
out
rorb
loopne
hlt
add
pop
lcall
push
fs
inc
mov
mov
inc
outsl
jb
cltd
push
loopne
arpl
lcall
aas
fistps
cmpsb
or
repnz
xor
inc
pushf
adc
or
sub
inc
lods
cmpsb
icebp
and
and
insl
dec
xor
xchg
mov
jb
sub
les
arpl
push
sub
clc
stc
mov
aam
add
push
lods
lret
inc
xor
add
dec
mov
pop
jb
adc
mov
dec
cli
inc
addb
insb
arpl
jg
aam
jbe
dec
add
cltd
push
in
shrb
xor
xchg
xor
jl
add
notl
sub
mov
sbb
mov
repz
cld
aas
cmp
adcb
test
add
sub
icebp
sbb
int
cmp
loope
xchg
cwtl
mov
cwtl
out
movsl
ja
cmc
add
or
adc
cmpsl
popa
add
pusha
push
mov
dec
mov
dec
outsl
add
push
clc
or
mov
and
mov
sub
pop
sbb
rorl
lock
jno
sbb
fadds
cmp
push
mov
jmp
add
mov
inc
add
or
out
push
mov
sub
pop
and
mov
xor
xchg
nop
call
fld
cld
std
stc
xor
or
lock
pause
add
push
mov
add
lock
add
rorb
jb
push
int3
inc
sbb
cmp
cmp
mov
scas
jnp
rcrb
ret
add
pop
add
xchg
and
jne
inc
inc
cmp
or
jne
inc
xor
pop
das
aaa
call
std
add
inc
dec
loope
dec
jg
or
push
pop
mov
cmp
js
fcomps
add
out
jmp
jne
lret
add
repnz
jbe,pt
jno
xchg
lods
cmp
inc
xchg
sbb
and
je
test
sti
push
pop
les
cmc
add
movl
pop
push
ret
jne
into
add
jbe
test
pop
aaa
ljmp
es
xchg
and
mov
fmull
seto
lret
les
add
jno
xchg
stc
or
add
shll
addb
sbb
icebp
imul
push
lret
lods
into
add
js
cmpsb
xchg
inc
pop
dec
push
maskmovq
testl
cmp
nop
push
jb
loope
aam
mov
int3
mov
jecxz
fdivr
jp
xchg
cmp
fldl
mov
or
pop
mov
push
mov
push
add
mov
jbe
scas
jp
cmp
or
cmp
add
fwait
pop
mov
xor
push
sub
stos
mov
aaa
xor
icebp
add
mov
mov
jae
out
xchg
jne
or
iret
mov
mov
or
push
call
lds
add
ficomps
es
outsb
shlb
add
and
out
leave
cmp
push
loop
and
icebp
add
push
movsb
cmpsl
ja
adc
or
fwait
dec
jmp
mov
orb
push
push
scas
cmp
or
xor
mov
aad
pop
push
dec
int
mov
xlat
add
xchg
sub
out
jge
mov
push
lret
mov
pusha
push
into
push
push
or
cmpsl
mov
sub
mov
adc
add
ret
out
stos
loopne
test
fisubl
push
mov
mov
mov
dec
stos
push
dec
in
add
xor
nop
mov
test
sahf
or
adcl
jmp
xchg
add
mov
filds
lods
push
sub
cmp
jo
movsl
nop
imul
xlat
lahf
rolb
loope
sub
out
test
sarb
mov
jle
push
push
sub
pusha
cmpsl
and
xchg
dec
add
jmp
adc
mov
jecxz
pop
cmp
jge
prefetchwt1
subb
pop
ja
mov
flds
jnp
xchg
sbb
sub
inc
jmp
and
dec
movsb
sbb
shlb
pop
and
ret
popf
sub
add
lea
mov
out
and
gs
xchg
sub
fadds
sbb
mov
loop
ficoml
fstl
out
cltd
push
add
cmp
int
rolb
mov
cwtl
cmp
test
pushl
leave
sub
mov
xorb
nop
lret
add
jecxz
dec
cmp
incb
add
out
andb
ljmp
mov
fdiv
mov
sbb
ja
xor
add
int
jo
call
mov
and
mov
sub
imul
jmp
inc
int3
add
or
insl
mov
cmpsl
add
sub
mov
subl
pusha
inc
sub
sarb
addl
cmp
pusha
and
sti
xchg
dec
jle
ss
or
push
inc
or
sarl
test
les
inc
sub
jns
push
add
rcll
sbb
icebp
pop
xor
xor
xchg
mov
push
lret
in
push
js
jb
add
adcl
sub
push
addl
pop
into
insl
stc
add
jmp
and
and
cmpsb
mov
imul
mov
xchg
jb
in
sbb
je
jo
shll
push
jge
add
loopne
cli
jp
jne
fwait
push
ljmp
js
wbinvd
cli
out
into
cmpl
outsb
sbb
lods
add
or
and
lds
adc
iret
pusha
jle
movsb
add
call
push
fld
dec
leave
and
fstpl
fwait
add
jmp
loope
cwtl
push
adcb
loopne
in
dec
push
addr16
jge
fsubrs
sbb
sbb
pop
sahf
mov
sbb
bound
xor
setge
out
pop
add
jge
cltd
hlt
xchg
lret
add
outsl
xchg
sbb
test
add
add
imul
add
or
adc
xor
pusha
icebp
fistl
add
cmpb
pop
scas
push
pop
add
arpl
jbe
pusha
sti
xor
ljmp
add
lcall
aas
test
mov
jl
cwtl
jnp
sub
in
or
inc
adc
test
xchg
inc
and
pop
adc
insb
jno
cmp
add
aas
and
sbbb
ret
lret
fwait
cmpsl
adc
lods
std
jmp
and
push
loope
lea
mov
add
cli
lret
add
cwtl
into
cmp
xor
stos
pop
mov
pusha
adc
mov
add
cmpsl
add
test
lea
mov
lcall
test
loope
jge
mov
sub
add
repz
ja
sarl
jl
fsubrl
or
mov
addr16
fimuls
fwait
mov
sbb
nop
test
and
sbb
rolb
mov
jo
xor
arpl
lret
add
push
add
clc
add
ds
xchg
pop
jns
add
add
aas
add
test
sbb
inc
and
cmpl
ja
adc
add
cmp
xor
arpl
hlt
sbb
add
cmpl
orb
add
cmp
add
cmp
add
inc
jl
les
in
mov
add
dec
popa
clc
loope
push
add
pop
shll
xchg
in
and
dec
sub
pop
adc
and
inc
and
and
andb
adc
test
mov
mov
and
inc
push
xchg
push
cmpsb
inc
jp
inc
push
push
inc
cmp
mov
int
sub
jne
cltd
add
aam
dec
push
inc
xchg
adc
mov
mov
stc
test
outsb
loop
pop
adc
mov
inc
popa
sub
push
add
or
or
add
cmp
incl
loop
dec
iret
push
inc
lcall
int
fsubr
add
ljmp
mov
notl
mov
and
lea
testb
sbb
test
movq
loopne
lcall
pop
push
aaa
mov
and
pop
fcoms
rorb
jp
mov
push
cmpsl
cs
pop
lahf
cmp
lds
cmp
test
adc
cmp
sbb
sbb
pop
jp
xor
cmpsl
es
insb
cmp
mov
pop
sbb
arpl
add
sub
addb
push
mulb
outsb
inc
xor
enter
xor
add
cmc
push
pop
ja
push
push
je
loop
and
add
mov
insb
sbb
sub
shlb
sbb
push
push
shrb
aad
jle
aaa
adc
cwtl
mov
add
xor
add
cvtps2pi
sub
xchg
fidivs
aam
fists
scas
xchg
mov
xor
push
mov
and
loop
add
movntq
std
add
inc
lret
fcom
jnp
add
movsb
dec
pop
call
push
call
pop
mov
xlat
mov
cld
ret
sbb
xor
dec
xchg
add
adc
adc
push
pop
stc
nop
ret
add
push
out
add
test
test
push
lcall
in
movl
dec
push
lahf
push
cmpsl
xchg
pop
lcall
push
add
jb
mov
mov
sub
mov
mov
add
mov
push
in
mov
cwtl
mov
stos
in
popf
sahf
sub
jmp
test
leave
dec
cwtl
scas
mov
xchg
jge
cmp
push
fiadds
cmp
and
mov
arpl
xor
jnp
out
out
add
in
pusha
jb
or
test
add
and
add
in
lock
dec
mov
xor
mov
jl
mov
add
jp
cs
and
fs
lret
aad
sbb
xlat
push
inc
inc
mov
test
stos
hlt
pop
pop
jl
add
mov
jnp
pop
movq
stc
aad
orb
ret
out
mov
add
dec
mov
fs
add
lock
mov
mov
movsb
jl
add
push
ret
xchg
fcoml
aad
rorl
es
or
xorb
ds
jmp
add
push
mov
push
addl
jns
enter
add
xchg
fs
sbb
cli
jbe
mov
add
out
push
push
mov
jl
mov
adcl
add
repz
push
inc
add
jno
sbb
jg
pop
sbb
jmp
add
mov
cs
shrl
les
add
push
jbe
loope
xor
add
mov
add
les
and
aas
xor
add
push
fidivrl
sub
add
inc
sbb
ret
leave
clc
and
roll
ror
jg
or
push
rorb
inc
xor
add
loopne
mov
push
add
stos
sbb
aaa
mov
mov
pusha
les
pop
js
adc
insb
add
movsb
ss
call
fstpl
sub
aad
rcl
xchg
mov
ljmp
add
push
out
and
mov
cmp
pop
add
loop
lock
dec
pusha
xchg
ret
or
testl
inc
cmp
push
sbb
or
fidivl
call
imul
cmp
pop
mov
rcl
add
popa
and
mov
ret
sub
sbb
adc
outsl
push
inc
repnz
adc
xor
fs
test
jne
sub
push
pop
cli
sub
cltd
jecxz
dec
adc
xchg
loop
fs
add
mov
sub
or
test
outsb
cmpsl
in
inc
je
sbb
add
add
sub
dec
xor
mov
sub
divb
mov
mov
je
add
iret
mov
add
push
enter
jb
aam
je
mov
fwait
inc
inc
jnp
or
pusha
pop
add
sub
clc
xchg
mov
sbb
movsl
pop
ret
pop
inc
mov
add
xor
pusha
sbb
jno
nop
jo
in
jo
sub
add
es
sarl
add
sahf
xor
and
push
mov
popa
push
scas
call
add
mov
nop
add
call
sbb
in
inc
dec
mov
add
adc
aas
testl
push
dec
mov
mov
add
bound
fisubl
mov
lds
and
inc
cs
aam
cmp
into
sbb
and
ret
lcall
and
lock
xchg
mov
xchg
inc
out
pop
stos
add
xor
or
cmp
xor
sbb
and
add
push
aaa
cmp
ja
aad
scas
aas
mov
jo
mov
or
out
pop
orl
pop
popa
inc
push
rcr
push
add
aaa
cltd
sbb
jb
inc
add
ret
inc
addl
push
or
push
packsswb
cli
insl
xchg
rcr
add
mov
cltd
dec
ret
mov
testb
sub
pop
in
xor
les
das
jb
add
pop
or
adc
cwtl
movsb
add
nop
jp
pop
out
add
mov
push
fmuls
inc
jmp
subps
test
adc
push
add
icebp
shlb
add
lret
es
insb
dec
jg
cmp
in
add
inc
sbb
mov
mov
testb
mov
cmpb
fdivp
xchg
cmp
inc
dec
loopne
add
mov
sarl
push
dec
addl
add
adc
dec
add
int3
cmp
xchg
pop
mov
lock
or
xchg
out
xchg
ret
sub
sbb
mov
jecxz
es
insb
xchg
mov
cmp
inc
or
push
stc
add
ret
enter
vmread
fs
pop
and
insb
aad
add
mov
fcoml
push
loopne
add
sub
rcll
add
dec
or
pop
arpl
out
fcomps
sub
xchg
addr16
popf
test
into
add
sub
ret
getsec
mov
pop
ret
push
out
dec
es
jmp
sbb
jle,pt
dec
add
cmp
daa
add
ret
add
imul
cmpsl
jns
add
pop
pop
out
adc
mov
ret
cmp
xor
inc
add
lret
sub
jo
mov
adc
add
dec
add
add
stos
fiadds
rcrb
jge
add
or
xor
jno
cs
xchg
nop
push
jnp
stos
or
inc
dec
inc
add
ret
inc
mov
fsubrs
dec
mov
jp
pop
xchg
div
and
xchg
lea
out
xchg
add
dec
shlb
push
inc
dec
and
ljmp
and
lea
mov
add
add
js
imul
add
in
gs
cmpl
ss
hlt
int
jge
outsl
mov
lods
pop
xchg
add
lret
cmp
fldcw
enter
in
test
fildl
mov
xchg
jl
mov
sbb
iret
andb
jle
cmp
inc
xchg
xor
xlat
mov
mov
cmc
sub
add
sub
jp
add
inc
xchg
jne
cmp
ret
outsl
mov
xchg
and
pop
icebp
xor
or
enter
popl
imul
mov
out
or
xchg
test
rcrb
clc
js
add
or
xor
push
push
pop
std
mov
cmp
sub
das
idivb
stos
add
movsb
add
ja
in
iret
mov
mov
repnz
popf
into
pop
jo
cld
sbb
push
push
inc
add
and
jo
mov
jmp
sub
outsl
add
cmp
jno
add
call
mov
nop
lods
cwtl
pop
or
xorb
imul
shlb
jbe
loopne
add
mov
mov
and
jg
fnstsw
inc
or
sub
lea
dec
addr16
inc
push
mov
push
and
add
filds
add
pop
push
push
aas
inc
loope
jp
enter
ja
pusha
call
insb
fldl
clc
dec
add
cmp
dec
fwait
and
adc
div
jne
int
pop
mov
scas
hlt
mov
hlt
mov
mov
aad
icebp
test
push
mov
js
std
and
push
add
sbb
xor
rorb
jle
jge
add
cltd
int3
je
jge
dec
dec
add
ds
mov
lds
and
xchg
mov
clc
out
inc
mov
push
sub
rolb
jl
sahf
mov
inc
sbb
dec
mov
add
mov
daa
loope
add
adcb
out
jmp
lods
sub
fucomip
and
lcall
inc
adc
dec
fadds
add
mov
jns
mov
cmp
inc
orl
repnz
test
jne
dec
cmp
movsb
inc
add
mov
xor
mov
add
inc
pop
int
lahf
outsl
scas
pop
adc
mov
add
cs
add
mov
lock
dec
bswap
sbb
ror
pop
aaa
mov
mov
out
jo
sbb
add
scas
hlt
xorb
or
add
mov
inc
add
cld
ret
cs
es
mov
and
insb
jbe
add
push
mov
mov
add
push
cmpb
sbb
dec
jg
sarb
add
insl
push
aaa
in
arpl
mov
mov
add
lret
xchg
adc
cmp
pop
adc
xor
add
mov
jns
push
mov
lret
cwtl
dec
call
mov
fiaddl
cs
cmp
gs
add
in
pushw
mov
jnp
adc
lods
and
dec
fmulp
icebp
adc
lock
add
shll
js
out
add
arpl
adc
rclb
pop
add
mov
aad
jle
dec
mov
sbb
inc
dec
fstpl
mov
sti
jcxz
int3
aas
leave
add
rol
mov
scas
inc
add
mov
or
add
pusha
cmpsb
rclb
nop
cwtl
xchg
jl
add
mov
jno
xchg
popa
jbe
mov
inc
test
or
pop
inc
dec
shrb
adc
aam
imul
xchg
lahf
loope
mov
xchg
xchg
fildl
and
inc
mov
xchg
jecxz
adcl
enter
repnz
xorb
in
lds
add
lahf
cld
push
mov
cmpl
out
add
enter
sarb
imul
mov
xor
add
test
push
add
fcmovnbe
inc
bound
lods
js
mov
pop
xor
add
mov
pmulhw
sahf
adc
imul
sbb
dec
sbb
inc
pop
mov
dec
jb
add
scas
add
inc
push
jge
mov
and
shr
jns
leave
add
pop
les
pop
xchg
push
jmp
std
dec
enter
addb
sub
arpl
adc
scas
add
iret
pop
fwait
bts
fsub
add
pop
cmp
sarb
add
call
lods
add
stos
lods
out
call
mov
test
cmp
arpl
aad
outsb
sahf
add
push
mov
adc
push
add
test
push
or
mov
pop
inc
dec
fsubr
ror
inc
xor
pop
pop
xchg
in
jmp
leave
shll
xchg
xor
cwtl
mov
fnsave
sti
ss
cmp
add
jp
add
mov
push
mov
popf
jno
dec
and
add
ds
or
repz
insl
roll
iret
imul
sub
mov
add
lret
or
filds
pushf
inc
xchg
fwait
in
jge
rep
test
xchg
rolb
iret
xlat
mov
sbbl
lret
out
add
je
mov
jle
or
xor
jl
incb
test
mov
pop
rol
add
add
mov
add
fwait
push
out
je
mov
add
mov
hlt
cmp
jp
test
jno
and
push
mov
add
lock
das
lods
pop
lret
je
sub
pusha
jg
dec
enter
cmp
sub
popa
loope
outsl
shr
int
inc
and
push
mov
adc
pusha
cmp
inc
add
lret
pop
mov
shr
jecxz
push
ja
dec
add
pop
cmp
into
push
add
fcomps
repnz
cmpsl
inc
add
inc
xchg
pop
mov
rolb
js
inc
add
sub
dec
jp
inc
fcomp
pop
jmp
movsl
mov
loopne
xchg
loop
cli
or
push
ljmp
pop
jp
jns
sbbb
pushf
sbb
push
xchg
sti
rolb
xor
add
sub
leave
lret
jb
add
mov
es
clc
cmp
aaa
into
add
rclb
rorl
out
or
test
push
add
mov
loope
inc
outsl
je
adc
sub
insb
pushf
add
lret
pop
xchg
dec
push
add
dec
dec
dec
pop
mov
fimuls
xchg
leave
cmp
stos
mov
stos
ret
sub
sbb
dec
out
mov
cmp
pop
push
outsb
lea
mov
mov
pusha
pop
pop
xchg
fisubrs
fwait
nop
dec
add
mov
dec
insl
pop
and
xchg
pop
test
sbb
add
sub
lock
int
inc
cs
gs
loop
jmp
nop
and
arpl
pop
fs
jns
jle
cmp
std
add
adc
sub
pop
pop
dec
push
imul
icebp
push
add
add
mov
sub
xor
xor
ja
xor
fldl
out
mov
push
sbb
add
cli
out
subb
add
call
in
push
lock
jle
fmull
jbe
add
clc
cmc
shlb
int3
jl
push
add
stos
push
adc
sbb
lock
add
sub
pop
add
cmp
adc
mov
divb
push
icebp
fwait
cs
add
clc
ret
xchg
sbb
add
loopne
xchg
cmpsl
mov
mov
fsubs
cmp
pop
pop
mov
add
out
jnp
sbb
xorb
sbb
add
add
push
pop
or
std
popa
repz
mov
cmp
lock
push
incl
pop
sti
lret
stc
sub
add
icebp
mov
fwait
add
jno
ret
mov
add
inc
mov
jmp
mov
cmp
movl
out
idivb
mov
add
sahf
inc
adc
and
cwtl
cwtl
add
jbe
stos
imul
data16
and
dec
sbb
stos
mov
pop
ljmp
add
movsb
cmp
xchg
sub
xorb
xchg
pop
dec
pop
cwtl
cmp
add
pop
inc
out
ljmp
lods
imul
xor
pop
inc
jo
and
add
stos
aad
test
xor
nop
pop
mov
repnz
jb
sub
int
ja
nop
cltd
add
and
add
mov
sub
add
push
sti
arpl
or
rol
rcll
xor
add
push
sub
pop
scas
sbb
je
dec
xlat
ret
add
and
pop
fwait
cli
enter
cmp
cmc
adc
in
cmp
mov
xor
pusha
jo
and
lock
xchg
add
mov
xor
cmp
jno
add
cmpsl
sbb
mov
add
pop
pushf
in
jecxz
add
adc
movsb
mov
lret
subl
jnp
add
and
mov
out
xchg
mov
ja
ds
jns
clc
aam
mov
xor
add
mov
adc
push
int
stc
add
jne
pop
jb
add
js
mov
int
xor
cli
imul
sahf
test
mov
push
leave
sub
rorb
push
cltd
sub
jp
vpaddw
lock
xchg
inc
neg
test
sub
inc
rolb
popf
fs
fadds
ret
popa
pop
stc
mov
or
in
mov
roll
popf
stos
pop
xor
mov
test
inc
mov
das
dec
inc
inc
push
fcoms
mov
inc
mov
lcall
xor
mov
sar
sub
add
and
sbb
incl
movsl
xchg
call
xor
push
jns
ljmp
aaa
cmpsb
int
or
mov
lods
cmp
add
jbe
movsb
and
aad
sub
jle
add
adc
ss
rolb
pop
data16
mov
filds
ds
pop
push
adc
sub
jmp
inc
xlat
lods
int3
std
inc
mov
pop
xor
stc
loop
dec
lahf
aaa
in
adc
sbb
sbb
mov
jl
pop
mul
pop
xchg
mov
insl
sub
xchg
mov
sbb
cmpsb
addb
push
outsl
adc
mov
mov
cmp
pop
clc
testl
cwtl
sarb
add
icebp
faddl
adc
jecxz
sarl
lcall
icebp
add
int3
mov
mov
movntps
outsl
dec
add
pop
push
int3
or
shr
popa
js
out
ret
les
or
or
test
popa
shrl
in
enter
outsl
or
jle,pt
jnp
push
mov
mov
add
jno
addr16
xchg
xchg
add
loope
out
lods
cmpsb
sub
iret
mov
andb
xor
sub
mov
add
in
shlb
cs
jno
pop
adc
add
xor
mov
movsb
jbe
add
sub
or
add
or
cmp
jp
ficoms
shlb
stos
mov
mov
out
in
cmp
xlat
fs
test
aaa
push
shl
andb
mov
push
pop
popa
iret
movsb
jl
mov
mov
add
adc
andb
insl
push
sarb
mov
rcrb
add
out
fisubl
stos
mov
inc
loope
sub
jbe
push
movsb
pop
push
outsb
dec
test
sar
adc
pop
inc
jno
iret
mov
bound
test
mov
sub
sbb
jns
sbb
push
adc
inc
lds
dec
cli
arpl
push
lods
jl
push
push
call
push
and
fdivp
mov
cmp
cs
outsl
in
lds
add
or
xchg
jnp
jo
mov
ss
movsl
aas
xor
mov
mov
add
enter
mov
pop
xchg
add
rorb
add
lods
jle
adc
push
mov
add
jae
lods
dec
add
xchg
sbb
xor
cmp
inc
add
inc
test
mov
popa
add
repz
pop
stos
enter
inc
push
cmpsl
ljmp
or
mov
add
incb
sahf
in
cld
push
scas
mov
mov
mov
test
bound
or
mov
pop
cmpsl
fucomip
pusha
xchg
sbb
lahf
and
jnp
add
sub
mov
pop
cmp
daa
dec
jo
pusha
and
incl
rorb
stos
insb
scas
xchg
xor
add
pop
aas
sbb
pop
adcb
dec
cld
sub
dec
push
push
cmpsl
inc
inc
mov
ficompl
icebp
dec
notb
jbe
push
call
inc
dec
daa
cli
fldl
push
ds
add
bound
shlb
xchg
rolb
xor
enter
ja
jg
push
fisubrs
xor
and
add
or
popa
jb
mov
add
lahf
inc
dec
rcr
add
mov
mov
hlt
int3
mov
push
enter
xor
mov
dec
sub
adc
decb
add
lock
repnz
jo
xor
jno
mov
pop
je
aas
jnp
push
push
and
jecxz
xor
sub
xor
mov
add
in
movsl
push
insb
les
add
jne
xor
add
push
addl
jl
push
sbb
sub
sbb
lcall
xbegin
repz
jno
mov
and
daa
or
or
jmp
cs
roll
jnp
dec
sub
ljmp
xchg
push
orl
xchg
and
add
notb
push
fcoms
lds
inc
and
sbbb
mov
or
add
loop
mov
pop
push
lock
add
insl
data16
cld
loopne
loopne
add
add
add
xor
xchg
and
subb
add
lret
imul
stc
pop
mov
inc
cmpb
mov
roll
stos
or
bound
pop
cmp
insl
inc
jb
neg
adc
movsb
or
or
and
cmpsb
imul
add
fistpl
stos
push
jae
pop
add
pop
jbe
in
fwait
add
fnstcw
inc
push
rorb
mov
mov
sbb
cmp
adc
popa
add
mov
rolb
add
add
imul
cmp
add
mov
add
push
in
jne
mov
jno
pop
and
adc
add
cmp
or
push
movsb
stos
out
movsl
add
sbb
cmp
lret
xchg
pop
push
or
adc
add
cmp
mov
iret
out
call
jnp
dec
cltd
pop
pop
int3
jmp
ret
dec
cmpb
scas
jb,pt
testl
inc
pop
not
cwtl
xchg
das
mov
in
mov
pop
rolb
push
pop
pop
pop
mov
xchg
fsubs
inc
mov
cmp
dec
ret
addr16
xchg
int
push
das
xor
aaa
add
ljmp
cwtl
add
int3
ret
jae
int
outsl
mov
or
hlt
adc
movl
scas
leave
push
cmp
sti
jecxz
mov
popa
fildll
std
cmc
pop
add
lods
in
mov
clc
pop
push
jle
lds
incb
xchg
pusha
gs
sub
sarb
test
in
clc
ja
cmp
add
lock
mov
dec
sub
jmp
cltd
addb
or
inc
xchg
xor
mov
inc
movsb
in
sbb
sbb
ret
xchg
cld
xor
ds
add
inc
lret
push
add
sbb
add
cld
andnps
ds
sahf
cltd
add
subb
out
aam
in
mov
lcall
rolb
mov
sbb
add
xchg
sbb
cli
lcall
pop
sbb
add
js
aam
loop
and
bound
rcr
loope
out
lods
adc
sbb
insb
add
and
mov
clc
adc
pop
sahf
mov
pushf
aaa
xor
xor
mov
dec
cmpsb
sub
addl
jl
loop
jae
rcll
fldl
hlt
leave
jg
pop
or
pop
add
push
adc
push
mov
fcoms
cmc
add
mov
sbb
sub
aad
clc
xorb
ret
push
xchg
movsb
cld
test
or
add
test
aaa
cmp
sbb
mov
mov
lahf
and
loop
sub
dec
inc
mov
dec
jle
mov
scas
add
bound
mov
pop
les
fnstsw
xchg
push
sbb
lcall
inc
inc
sub
jo
push
testl
add
and
repz
add
std
movl
loopne
movsl
mov
and
lcall
add
push
cwtl
movsb
mov
sbb
sbb
out
mov
adc
jne
daa
pop
cmc
sub
and
push
adc
mov
dec
add
dec
insl
fildl
xchg
jo
push
movsl
lahf
pushf
test
faddl
cmp
jno
push
pushl
add
push
mov
aam
sbb
add
mov
psubsb
stos
insl
cmp
cwtl
cmp
enter
test
and
lods
icebp
pop
cmp
out
fcompl
dec
popa
cmp
pushf
negl
addl
out
sub
outsl
pushf
pop
cmpsl
stos
shlb
insb
enter
popf
xchg
addb
push
xor
dec
add
out
lods
xorb
xlat
dec
sbb
mov
fildl
ss
xchg
push
dec
mov
pop
into
and
sub
mov
cmpsb
scas
mov
subb
cltd
jne
stos
add
cmp
cmp
add
and
add
add
cmp
dec
test
das
jmp
push
pusha
cwtl
movsb
inc
mov
add
adcb
mov
jp
pop
fs
test
adc
inc
sahf
out
sbb
sub
dec
rolb
xor
adc
cmp
push
arpl
fcompl
jl
dec
mov
sub
pop
adc
shlb
cmp
mov
mov
orb
mov
fdivl
in
adc
adc
test
inc
pop
sbb
popf
dec
dec
dec
add
addl
add
shrl
int3
push
mov
add
sub
stos
cmp
mov
sbb
aad
fnsetpm(287
pop
mov
add
dec
ret
out
addl
pop
pop
cld
les
mov
cltd
movsb
es
mov
mov
inc
push
pop
mov
mov
fdiv
orl
mov
fisttpl
add
add
push
arpl
push
lods
shl
cmpsb
xchg
mov
add
lods
jae
add
sbb
push
mov
jecxz
aad
jle
jb
pop
add
mov
or
icebp
jne
sub
xchg
pop
repz
dec
add
incb
push
jmp
xchg
mov
add
fxch
jb
mov
add
enter
cmp
js
add
adc
lea
jno
outsl
jne
aas
fldcw
cs
iret
mov
repnz
push
cltd
loop
dec
mov
das
adc
pop
adc
rolb
mov
orb
xchg
pop
nop
arpl
sbb
mov
mov
mov
mov
pop
mov
outsl
daa
int
sbb
cmpb
pop
add
cmp
pop
decl
xchg
dec
add
mov
inc
addl
insb
cli
das
and
fldt
inc
cmp
call
or
rolb
stos
icebp
xchg
rcrl
mov
incb
les
and
in
add
lods
cli
push
add
xor
bound
int
shlb
mov
and
fs
sbb
ret
add
xor
sbb
xchg
cmpb
push
or
xchg
cs
sbb
mov
cmp
push
inc
mov
xor
out
shll
iret
xlat
lods
add
sub
push
mov
adc
mov
test
addb
out
test
jg
xor
cmp
shrb
insb
cltd
das
out
stos
mov
mov
cmc
adc
int
mov
push
jmp
mov
sarb
adc
xchg
xchg
loop
add
jns
cld
movl
or
popa
lods
hlt
aas
std
sub
xchg
adc
xor
andb
or
jmp
adc
xchg
mov
add
fwait
push
push
mov
or
rolb
cmp
and
jne
out
daa
add
fwait
sub
insl
push
dec
xchg
add
lock
sarb
loop
lock
mov
insb
pop
push
fstps
xor
jae
add
pop
xchg
fdivp
lods
add
orb
cmc
and
add
jne
and
in
cli
int3
add
mov
into
or
add
adc
jns
and
mov
test
pop
lds
pop
lock
insl
pop
or
pop
adc
rcrl
xor
sahf
pop
push
aam
push
adc
add
mov
add
mov
loope
out
and
adc
and
test
or
sti
cwtl
xorl
xor
and
dec
negb
roll
pushf
lock
dec
arpl
jo
or
pop
cltd
mov
add
push
nop
lock
xor
mov
mov
cmpsl
inc
int
xchg
imul
mov
fisttps
sub
cs
mov
fucomip
into
jne
add
sbb
lock
sub
push
out
lds
sbb
pop
andb
cmp
leave
add
pop
js
in
lds
loop
sub
loope
pop
or
cmp
movl
inc
leave
sti
ret
fdivr
popf
mov
sbb
in
mov
xchg
adc
or
repnz
add
std
cmp
jmp
sub
push
imul
mov
xor
mov
mov
add
push
dec
dec
mov
fmul
jmp
cmp
mov
xor
loop
adc
adc
cwtl
push
pushf
add
adc
add
andb
push
inc
in
std
pop
lock
iret
adc
sbb
add
out
les
scas
hlt
add
xchg
pop
js
or
sub
filds
call
testb
imul
jnp
push
lahf
pop
xchg
rolb
je
dec
pushf
je
sub
rclb
repnz
hlt
cmp
cmpsl
pushf
dec
movsl
push
sub
je
loopne
sbb
cmpsb
out
dec
aad
inc
inc
test
cmp
mov
fdiv
pop
shlb
mov
push
mov
cwtl
rolb
xchg
ds
ffree
shrl
pop
jecxz
push
inc
sbb
enter
jp
scas
fimull
xor
add
out
mov
mov
lcall
outsb
imul
jns
lock
push
stos
inc
sbb
lret
aad
or
dec
lret
inc
inc
jnp
push
or
and
stos
jmp
mov
icebp
add
stos
test
clc
cmp
cmp
fists
mov
add
bound
add
and
je
add
dec
mov
loope
sbb
xchg
and
add
or
cs
sbb
push
sti
imulb
cwtl
pushf
add
xor
sahf
mov
or
mov
js
insb
jns
jne
shlb
jnp
push
mov
add
jb
xor
inc
add
test
fimuls
xchg
mov
loopne
inc
addl
aad
push
cmp
ret
leave
add
push
repnz
jp
sahf
mov
insb
data16
xchg
cmpsb
add
inc
dec
and
mov
insl
in
je
add
mov
sub
rolb
std
xor
movsb
sar
or
in
out
mov
add
arpl
cld
pop
inc
add
dec
push
mov
pop
add
cmc
pusha
fnsave
out
cmp
popa
call
lret
pop
lret
jl
push
inc
add
stos
inc
out
inc
inc
subb
and
sahf
adc
cmc
jecxz
repnz
loope
movups
cmp
add
imul
add
lcall
in
cmp
addl
scas
popf
add
mov
add
jns
xchg
aas
test
nop
push
daa
andl
xlat
cmp
andb
jle
int3
and
roll
rcl
xchg
cmp
adc
inc
fdivr
pop
outsl
add
imul
enter
nop
add
xor
add
insb
cld
enter
out
fisttpll
push
mov
or
and
ficomps
inc
add
inc
push
mov
add
jb
cmc
jl
nop
add
icebp
pop
test
aaa
lock
aas
in
push
mov
sbb
cltd
mov
xor
es
mov
icebp
jnp
andb
mov
pop
js
lret
pusha
ljmp
xchg
mov
add
stos
mov
test
add
rclb
fs
push
sub
rcll
roll
les
add
mov
gs
cmc
call
ret
jecxz
faddp
loopne
nop
ja
or
into
jge
or
ds
movl
filds
xor
cs
mov
or
xor
lret
mov
imul
es
vcmpsd
adcl
add
aad
mov
xor
subb
add
inc
or
xor
mov
repz
jmp
add
pop
and
add
inc
jno
and
jg
adc
pop
add
shr
ret
movsb
add
scas
in
mov
jle
xor
xchg
mov
scas
cmp
arpl
push
inc
push
stos
nop
fwait
sahf
and
adc
xchg
popa
push
in
or
pop
or
push
add
mov
push
xlat
pop
or
out
mov
mov
movsb
jl
js
or
loopne
ror
lds
xchg
dec
dec
push
pop
jmp
xchg
incb
adcb
jo
push
add
adc
pop
sub
and
mov
or
inc
and
stos
addb
inc
imul
es
incl
xlat
mov
addr16
xchg
js
addl
dec
sub
add
pop
push
add
popf
xchg
fnsave
dec
xlat
ds
fiadds
jle
cmp
cmp
lret
jg
jl
mov
mov
gs
test
pushf
dec
in
pop
add
jns
push
jle
jl
add
int3
mov
push
jp
dec
ret
and
in
jbe
mov
test
cltd
or
sbb
loopne
daa
shlb
add
xchg
outsb
sbb
lahf
lret
mov
cmc
add
and
adc
xchg
mov
in
push
mul
sbb
loopne
and
add
test
int
xlat
add
push
adc
pop
std
jge
jns
inc
and
mov
jecxz
mov
div
xchg
sbb
add
out
aad
push
aaa
pop
mov
ret
pop
cs
repz
hlt
lret
fcoml
sbb
shl
xor
xchg
iret
and
add
int
xor
out
jmp
icebp
pop
jge
or
into
lock
fmull
xchg
dec
mov
mov
rolb
gs
pop
jp
add
cmp
mov
lods
mov
dec
jmp
pop
inc
mov
repz
add
movsl
cmp
adc
add
jnp
add
and
pop
inc
pusha
add
adc
adc
mov
and
add
aad
push
inc
mov
cmpsb
pop
shl
out
fisubrl
and
jmp
rorb
movsb
sub
ja
add
popa
fucomp
outsl
pmulhw
inc
or
jmp
add
cltd
adc
jge
shrb
pop
arpl
sbb
scas
mov
lock
sub
add
stos
lcall
movsl
add
jl
mov
pop
inc
mov
push
loope
fdivr
and
jae
test
shlb
testb
push
in
adc
aam
dec
mov
pop
jb
pushf
add
aas
andb
popf
mov
into
pop
pushf
push
pusha
or
add
test
nop
mov
cmp
imul
sbb
fwait
dec
test
jmp
pusha
push
dec
lahf
ret
push
cmp
enter
add
sti
xor
sub
pop
or
divb
orl
cmp
dec
out
testb
rcr
das
rolb
test
cmp
xor
lea
jno
lods
mov
lds
sub
fildl
iret
sbb
fidivs
add
scas
adc
orb
or
add
inc
pop
push
jecxz
add
jno
mov
enter
fimuls
cmpsl
iret
lcall
adc
out
push
int3
dec
nop
add
lds
xchg
loopne
addl
inc
mov
test
lea
pusha
jns
int
add
xchg
int3
imul
jb
rcll
popf
mov
inc
xor
xor
push
jae
test
and
xor
dec
pusha
sbb
imul
push
scas
jnp
xchg
push
add
arpl
outsb
or
add
inc
in
lcall
test
pop
mov
cmp
call
div
add
mov
fcoml
scas
addr16
sarl
or
xor
fldt
repnz
and
add
mov
xchg
out
xchg
push
sbb
sub
mov
pop
jnp
add
mov
addr16
inc
addl
dec
int3
inc
pop
mov
cmpb
lea
jecxz
imul
inc
xchg
pop
add
pop
mov
jmp
cmp
and
sar
jo
add
int
leave
pop
push
jp
shrb
jo
clc
iret
mov
xorb
or
js
add
cmp
test
stc
push
inc
xor
mov
push
sbb
pop
xor
lar
jne
je
outsb
inc
add
add
mov
lds
jg
or
mov
add
lods
popl
pop
rclb
add
das
adc
sbb
or
push
loop
xchg
int3
sub
push
and
push
in
loope
add
inc
pop
inc
or
addr16
inc
es
dec
cmp
sbb
stos
add
xlat
out
jo
clc
mov
push
push
or
mov
jg
or
push
dec
rorl
repnz
add
pop
aam
mov
scas
es
call
cmp
fninit
loopne
cmovne
test
cmp
adc
inc
add
es
icebp
incl
stos
xchg
jnp
les
sbb
mov
sub
push
jo
mov
mov
lock
add
adc
sbb
add
mov
jae
add
jmp
outsb
scas
insb
pop
inc
add
decb
push
push
outsl
and
shr
lods
out
dec
adc
mov
or
icebp
fmuls
aas
cmp
lods
push
jnp
add
aad
test
sahf
dec
mov
xor
in
clc
or
add
xchg
rorb
mov
cmp
add
sti
mov
fwait
and
rorl
in
test
rorl
aaa
dec
nop
mov
fs
push
inc
pop
push
jae
add
cmp
pop
std
jbe
mov
or
pop
mov
mov
adc
xor
cmp
test
mov
in
into
xchg
pop
and
dec
sbb
push
adc
movsb
mov
xchg
jg
mov
or
mov
dec
push
add
pop
xchg
mov
cld
outsb
or
movsb
pop
call
jge
cmp
cmc
call
mov
mov
lds
sarl
add
ja
mov
push
inc
add
adc
rorb
push
sarl
daa
add
fucomip
push
cmp
outsl
add
and
out
cmpsb
cmp
add
jg
xchg
popf
les
pop
shr
add
mov
testb
ret
jne
add
add
add
jno
inc
std
sub
dec
add
sub
mov
add
test
jmp
xchg
and
stos
mov
sbb
cmc
mov
add
movsb
inc
pop
xchg
iret
pop
cltd
add
sbb
xchg
push
and
jle
cmpb
and
dec
xor
outsb
pusha
jo
mov
arpl
inc
cs
test
or
call
mov
std
mov
mov
add
push
mov
add
outsl
mov
or
add
xchg
mov
xchg
popf
add
sarl
add
icebp
and
mov
jns
sbb
scas
pop
cmp
xchg
sub
stc
sti
mov
subl
test
push
gs
xor
imul
movsl
add
push
leave
loop
repz
ror
add
add
xchg
fistl
add
adc
sub
lods
xchg
add
cmpsb
xor
or
add
lods
adc
pusha
xchg
add
lds
test
sub
add
xchg
fadds
imul
gs
add
shrl
or
jle
dec
bound
outsl
sbb
in
sbb
es
fidivrl
add
and
push
jmp
pop
add
rolb
out
jo
jae
pop
inc
add
cmp
add
jmp
push
ss
jno
add
icebp
loope
in
mov
xchg
movsb
mov
mov
js
das
pop
into
scas
push
jmp
xor
aas
add
stos
and
std
popa
negb
mov
cmpsb
add
inc
pusha
fldl
dec
or
cwtl
pop
push
roll
div
xchg
mov
push
negl
enter
mov
insb
xchg
xor
sbb
int3
add
mov
ds
dec
xchg
stos
xchg
push
ret
cld
lock
outsl
incl
arpl
pop
push
push
fbld
adc
dec
loopne
jmp
cld
push
mov
mov
adc
add
sub
pusha
jns
aaa
add
push
pop
add
sub
inc
xchg
flds
pop
push
aaa
ret
insb
push
xchg
mov
movsl
push
dec
sbb
dec
adc
xor
xor
dec
sbb
add
or
fldt
cs
insl
sub
mov
lea
dec
add
lds
xor
adc
add
ss
roll
out
add
addr16
mov
cmp
mov
mov
jle
xorb
fsubs
add
push
mov
pop
cmp
inc
mov
push
in
xor
push
fstps
jns
ret
sbb
adc
or
nop
xor
fimull
movsb
fcoms
pusha
mov
pop
cld
adc
shl
cmp
cwtl
sbb
in
pop
add
mov
jmp
loop
pop
loopne
stos
aaa
push
inc
lret
lgs
sub
add
daa
xor
call
and
mov
rcrb
mov
adc
dec
ss
shll
push
out
add
push
xor
inc
enter
cli
mov
js
scas
stc
inc
xchg
sub
mov
add
int3
lahf
mov
inc
dec
or
movsl
add
add
les
mov
sub
or
xchg
adc
mov
dec
xchg
xor
loopne
repnz
sbb
out
pop
sub
cmp
and
movsl
inc
int3
icebp
add
inc
sbb
add
sbb
bound
repnz
lea
mull
cmp
ja
mov
and
xor
xor
add
mov
sub
lahf
test
sbb
call
cmpsb
pusha
ljmp
jge
adc
lea
popf
scas
lahf
outsb
add
push
ret
cmpsl
push
add
fcmovnu
iret
enter
add
mov
das
sbb
pop
cmc
sarb
jns
push
add
cmp
frstor
jge
ror
or
cmp
add
push
lock
adc
in
rcr
pop
mov
sub
add
cmpsl
mov
jae
or
adc
pop
add
int
ljmp
sub
push
sub
fs
sar
mov
push
mov
or
mov
scas
xchg
add
or
lcall
stos
scas
loopne
mov
pop
xchg
mov
and
push
push
lret
js
add
or
or
sbb
mov
mov
sub
sbb
ja
hlt
punpcklbw
shl
adc
jo
rorb
add
mov
jno
popa
mov
pop
imul
mov
cmp
roll
xchg
lods
movsl
incb
inc
outsb
jns
or
mov
out
pop
in
adc
mov
xchg
jno
icebp
pushf
or
cltd
orb
je
stos
or
inc
add
arpl
rolb
sub
imul
mov
add
fistps
cmp
mov
or
jb
test
inc
pop
mov
punpcklwd
dec
cmpsb
dec
mov
add
dec
jo
or
inc
lods
and
popf
and
add
js
pop
jmp
mov
pop
mov
push
push
cwtl
pop
das
push
jb
loope
cmpl
pusha
mov
add
int
mov
dec
and
add
dec
jb
jno
push
add
mov
pop
call
mov
dec
fists
addb
ud1
xor
imul
adc
jbe
sbb
rcl
daa
sub
test
scas
add
xlat
pusha
pop
ds
mov
enter
xchg
add
add
sub
sti
cmp
xchg
cmpsb
fiaddl
fstl
clc
cltd
cs
cwtl
mov
sahf
pop
xor
clc
test
mov
push
push
push
inc
fnstcw
xchg
pop
add
icebp
leave
mov
jb
ss
add
xor
sahf
push
cmp
inc
out
in
adc
bound
mov
call
cmp
jle
jns
adc
adc
add
dec
fiadds
paddb
sbb
add
mov
pop
repz
and
push
add
inc
movsl
sbb
mov
and
add
enter
popa
pop
or
jbe
call
jno
mov
movsl
enter
pusha
cltd
test
in
inc
test
dec
fists
xor
lods
pusha
dec
and
xlat
mov
ss
pcmpeqb
and
aam
test
frstor
mov
xchg
or
inc
push
mov
mov
pop
icebp
inc
fcom
jb
add
jmp
movl
lahf
push
mov
add
repnz
jp
add
push
pop
out
test
test
sbb
dec
mov
add
xor
push
and
clc
pop
mov
add
sbb
jb
sub
push
addr16
pop
icebp
pusha
sbb
pop
dec
pop
pop
mov
loope
push
jp
test
gs
aad
add
ret
dec
adc
and
sub
add
sbb
and
into
add
adc
push
lcall
stos
xchg
adc
pop
pop
mov
movsl
sub
filds
test
out
inc
adcb
dec
add
popf
movl
add
or
xor
js
add
xor
sub
nop
pop
or
jl
out
push
pushf
add
cli
fbld
mov
lods
lods
pop
nop
mov
js
into
add
in
sub
testl
sarb
insb
repnz
flds
dec
loop
mov
jle
leave
insl
dec
xchg
cmovns
jecxz
inc
loop
data16
add
pusha
add
push
stos
push
jle
leave
movsb
add
addr16
xchg
cmp
add
pop
cmpsb
mov
mov
cli
push
sbb
clc
lods
cmp
js
or
in
and
insb
ja
jl
inc
jns
sub
push
pop
out
jb
dec
enter
leave
and
add
sti
cs
xor
sbb
lock
fadds
push
xchg
dec
xchg
or
lret
jno
xchg
pushf
add
popa
pusha
cmpsb
mov
or
int
sub
insl
add
add
mov
sbb
adc
jle
and
jle
adc
lock
mov
and
mov
call
movsl
fdivl
sub
pusha
sub
xor
xor
addb
push
in
lret
sbb
or
jne
add
cmc
pmulhuw
sahf
sbb
lea
adcl
jl
pushf
xor
pop
inc
andb
adc
mov
push
add
adc
mov
add
stos
aad
sar
leave
dec
das
xorb
mov
sbb
dec
pop
mov
les
aaa
addl
pop
pop
add
jecxz
add
push
adc
xchg
pop
addr16
shlb
mov
sti
add
xor
movsb
cmp
add
sbb
fsubl
mov
ljmp
call
lret
add
cmp
iret
sbbb
outsb
repz
push
and
and
out
adc
dec
in
pop
insb
in
jns
pop
cld
shlb
mov
rorb
fsubrl
in
mov
std
add
add
js
adc
dec
sub
nop
enter
add
cmp
ret
mov
test
push
add
add
and
add
call
and
add
ret
add
js
sbb
mov
sbb
mov
pop
pop
jne
or
adc
mov
cmpb
add
inc
adc
mov
ljmp
push
add
dec
out
jnp
mov
mov
add
xchg
push
movsb
add
push
push
mov
jge
or
movsl
inc
je
shlb
out
rep
adc
pop
push
ucomiss
call
sub
jae
xor
enter
or
push
out
aad
jbe
mov
sbb
jge
daa
fsubs
push
mov
add
pop
lret
xor
cmp
fmull
mov
add
clc
inc
bound
add
push
dec
hlt
jmp
inc
cmpsb
pop
je
push
sbb
jl
rorb
adc
js
cld
mov
aaa
cs
and
out
hlt
push
xchg
adc
hlt
push
xor
test
sysenter
mov
mov
add
mov
daa
movsl
sahf
add
or
outsl
mov
pusha
add
xor
add
mov
popa
mov
data16
outsb
xor
pop
aad
cli
sbb
mov
push
cmc
sbb
mov
test
fucomip
shlb
test
ds
insl
mov
lahf
incl
inc
jl
jbe
add
xor
mov
aaa
es
and
imul
or
jp
add
add
add
mov
add
and
sbb
jbe
ret
sti
dec
outsl
scas
add
sbb
nop
int3
shrb
test
loopne
add
frstor
lods
or
inc
pop
or
call
mov
adc
pop
cmp
js
pop
cli
add
adc
mov
lea
add
insl
sub
xor
xchg
xor
out
xor
add
inc
push
icebp
mov
jp
sbb
push
push
add
int
xor
les
popa
mov
and
cli
mov
add
sar
push
iret
roll
jp
repnz
jecxz
inc
add
mov
adc
dec
mov
lret
lock
popa
sub
and
add
sbb
xor
cmc
out
push
adc
ljmp
push
lret
xor
mov
mov
mov
shrb
in
hlt
sub
mov
add
cld
or
stos
xor
sub
shr
mov
add
xchg
ret
mov
cmp
aam
and
mov
fs
cmp
sbb
and
mov
int3
sahf
xor
fildl
pop
fbld
dec
cmc
ljmp
movsl
subb
add
cmp
ret
mull
pushf
fsubr
add
addr16
jo
aad
mov
adc
sbb
fsts
out
dec
ja
repnz
jne
mov
sarb
push
or
cmp
pop
daa
mov
jno
int
mov
icebp
mov
xor
jmp
and
push
push
add
push
sub
jmp
inc
icebp
shlb
loop
add
stos
notl
lds
and
je
add
jbe
push
jp
add
mov
inc
roll
pop
mov
movl
mov
rorl
imul
add
int3
push
add
xchg
sub
dec
jb
push
bt
add
cmp
test
jg
jmp
sbb
lock
push
add
movsb
divb
jecxz
and
jae
cmp
jno
push
add
jmp
jo
rcr
std
cmp
sldt
jecxz
or
cmp
test
mov
mov
dec
dec
xchg
add
cmpsl
xor
add
adc
cltd
aas
shlb
add
adc
push
cmp
loop
push
out
ss
mov
into
outsb
mov
aaa
mov
sub
dec
dec
lmsw
dec
push
cmpsl
mull
daa
pushf
cld
or
pop
add
mov
jmp
pop
cmp
dec
aaa
xchg
movsb
add
push
mov
mov
cmp
aas
jns
add
shl
insb
mov
jb
pop
cld
add
inc
sbb
ss
sbb
mov
push
add
sti
outsl
popf
jp
out
sbb
push
repz
add
in
push
das
push
leave
dec
mov
or
lods
cmp
cld
in
mov
scas
add
fadds
fsubs
jle
add
js
mov
pop
insb
xchg
add
sti
sbb
inc
cmpsb
adc
inc
xchg
mov
mov
xor
push
cs
add
loopne
xor
add
rorb
pusha
rolb
mov
aad
ret
sbb
mov
fs
in
jae
xorb
push
add
pop
fs
mov
leave
je
test
mulb
xlat
push
loope
movl
mov
sub
sub
xchg
leave
jp
rol
or
rorb
add
xchg
daa
xrelease
das
jb
sbb
in
push
add
orl
jl
push
jge
pushf
push
mov
and
add
fdivrl
sub
movsb
push
cld
jge
repnz
or
mov
cmp
cmp
rep
in
shrb
cs
and
mov
ucomiss
mov
pop
into
mov
and
xor
subb
icebp
add
add
add
enter
or
mov
push
aam
add
fisttpll
movsb
cmp
mov
pop
loop
adc
pop
pop
and
cmp
cmp
repz
adc
pop
add
loop
ret
add
aam
cmpsl
fstpt
shll
rorb
mov
pop
mov
fdiv
adc
fadd
xchg
int3
push
add
dec
repnz
mov
push
rcl
cmp
pop
adc
or
je
rcrb
jge
add
dec
jnp
push
bound
jle
xlat
mov
sub
outsl
mov
jne
mov
aaa
pop
out
jnp
cmp
test
lahf
add
fcomps
or
sarl
cmp
pop
int3
mov
sub
leave
test
cmp
inc
call
pop
xor
cmp
pop
adc
call
in
out
push
mov
sub
pop
test
xchg
rolb
mov
filds
or
out
sbb
cmp
imul
fmuls
sub
shlb
loop
xor
ds
movsb
push
mov
jns
cmp
push
pop
jae
or
psubd
add
mov
adc
add
call
mov
cmc
in
mov
mov
sbb
cltd
neg
loopne
push
test
cmp
cmp
nop
fisubrl
div
add
subl
sbb
popa
push
inc
sub
js
or
fstpt
jb
jae
adc
pop
push
xor
xchg
aam
mov
push
add
cmp
rcr
mov
pop
faddl
aas
pop
dec
or
movsl
mov
rcrl
xorb
and
adc
cs
add
out
je
add
movsb
aas
js
ds
add
push
test
outsl
lea
lret
fstps
add
sarb
scas
pop
lods
adcb
mov
push
mov
stos
repnz
jb
jne
add
hlt
sbb
push
dec
pop
inc
push
cmp
shrb
and
dec
lods
xor
addl
cmp
jne
out
jecxz
add
ljmp
cmp
bound
add
mov
roll
push
sbb
repnz
xchg
ret
mov
pop
lds
lods
inc
fs
add
iret
and
xchg
xor
mov
aam
xchg
fildl
rclb
or
add
add
adc
hlt
add
in
out
fistpl
add
int3
and
and
sbb
mov
or
int
push
mov
aad
add
jb
outsl
mov
lcall
jmp
in
sub
add
sbb
or
mov
mov
cmp
lods
es
lods
mov
js
inc
stos
icebp
push
mov
jmp
and
sbb
pop
push
mov
dec
icebp
inc
popa
sti
inc
lret
and
ljmp
lret
dec
stc
adc
mov
sarb
lahf
in
add
mov
shll
rclb
and
inc
mov
pop
lcall
hlt
and
ds
xchg
dec
out
adc
mov
lock
add
cmc
ja
or
pop
add
les
add
pop
jae
jge
add
movsb
int
inc
pushl
sbb
push
push
jl
mulb
add
test
jo
pop
lcall
inc
std
cmpb
sarb
cmp
jecxz
sbb
jo
sub
sarb
push
sbb
lcall
dec
inc
ljmp
test
inc
add
or
sbb
add
repnz
jecxz
test
add
add
mov
add
inc
pop
sbb
cmp
jmp
mov
mov
adc
out
fdiv
and
sti
dec
scas
sub
dec
cmp
push
and
add
insl
xchg
push
flds
fdivs
shrl
aaa
add
test
call
sbb
fidivs
push
push
iret
and
jl
loopne
lea
inc
jb
nop
jne
cmpsb
inc
add
xchg
jno
cmpsl
add
frstor
stos
mov
mov
ja
adc
cwtl
pushf
add
aad
adc
or
data16
lea
call
out
inc
mov
sub
cs
sbb
xchg
lock
mov
scas
sbb
leave
jbe
push
and
into
xor
fdivs
in
push
stc
pop
shll
add
lods
shrb
int3
stos
add
xchg
cltd
xchg
add
loop
xor
in
testl
mov
call
sub
add
and
mov
xchg
xchg
adc
sbb
mov
jle
lock
add
imul
mov
mov
mov
and
pop
call
pop
mov
cmpb
test
sbb
filds
dec
push
subl
js
push
xchg
int
adc
push
push
mov
jo
dec
aas
ficompl
addb
cmpsl
adc
push
loopne
xchg
add
iret
jb
inc
mov
insl
xchg
add
push
mov
or
or
stc
or
push
inc
aad
push
rcl
adc
add
xor
mov
scas
mov
mov
notb
xchg
pusha
xor
cmp
in
add
pop
or
lea
scas
pop
mov
mov
fcmovnb
loop
adc
mov
fwait
add
subl
out
cs
sbb
ds
pop
test
xor
or
ss
cwtl
dec
mov
aas
idiv
sub
or
push
js
dec
add
loopne
repz
pop
mov
stc
std
xor
pop
mov
outsl
jl
adc
xor
xor
adc
push
mulps
scas
push
xchg
push
jb
and
add
or
cmp
sbb
or
jo
subb
ret
mov
mov
lcall
inc
clc
popa
push
jo
sbb
sub
outsl
add
stos
adc
cmpsl
lods
int3
add
int
jle
enter
fnstsw
mov
call
jge
cmp
jnp
rcr
lret
insl
jecxz
mov
lret
fs
cmp
add
xor
sub
xchg
add
mov
daa
or
and
std
cmp
push
adc
packsswb
sbb
pop
das
add
cmp
icebp
loopne
idivl
sub
lock
jmp
filds
rorl
sbb
into
and
add
out
fstl
jmp
je
test
push
xor
and
std
inc
es
or
flds
mov
sbb
enter
jge
pusha
shll
add
adc
adc
dec
cmp
test
pop
xchg
add
pop
into
pop
bnd
ds
loope
inc
call
xor
cmp
mov
sbb
push
movsl
add
sub
int
lahf
lret
das
ja
roll
call
pop
push
add
sbb
imul
jmp
cmp
jg
lret
pusha
pusha
out
pop
add
cwtl
dec
pop
insb
sbb
add
mov
pop
jecxz
inc
test
fcoms
mov
insb
add
push
and
je
mov
xchg
mov
in
xchg
add
and
sbb
inc
enter
fistl
and
or
aaa
ret
lea
and
out
pminsw
add
xchg
add
xor
jecxz
jne
add
xlat
pushf
sub
mov
fiadds
mov
push
jge
cmp
ret
repnz
or
hlt
add
mov
adc
cmp
adc
jbe
pop
push
push
or
cmp
jnp
gs
add
clc
sub
push
in
add
mov
mov
jne
stos
adc
filds
pop
inc
mov
insb
loope
mov
add
mov
adc
das
test
adc
jae
jne
stos
and
add
outsb
inc
popa
call
scas
stos
dec
jne
shlb
test
js
jbe
pop
dec
sub
add
mov
nop
mov
sbbl
xchg
cmp
push
mov
add
and
sbb
mov
add
dec
inc
scas
repnz
jg
dec
and
push
add
add
sbb
add
jecxz
lods
dec
pop
dec
xchg
sbb
addr16
push
ret
fistpll
add
pop
movsb
push
push
push
sub
jo
push
adc
and
add
adc
rep
inc
pop
cltd
push
jns
mov
inc
imul
jno
add
imul
dec
mov
xor
cwtl
add
sub
mov
ljmp
insb
inc
jl
mov
popl
dec
pop
xor
and
push
adc
mov
and
mov
cltd
jo
loopne
test
loop
mov
lock
outsl
loope
inc
jge
in
inc
stc
xor
shll
add
jbe
test
dec
pop
add
mov
data16
js
jecxz
out
push
int
mov
add
fiadds
imul
dec
adc
stos
test
jg
xchg
int3
test
add
stc
into
push
pop
pop
push
and
sub
mov
add
das
push
fwait
roll
pusha
movsb
xchg
lock
es
and
mov
mov
fisttpll
jle
imul
imul
int3
out
mov
sbb
inc
js
add
jae
andb
pop
inc
add
scas
test
cli
jb
add
pop
or
mov
sub
mov
jo
and
orb
addr16
enter
inc
insb
cwtl
aad
rorl
int3
add
mov
push
sbb
jl
bound
pop
popa
sub
xorb
push
push
jp
sub
aas
dec
inc
andb
xor
jecxz
add
xor
add
and
lds
dec
stc
pop
loope
cmp
out
insl
add
mov
cmp
push
mov
add
ss
lret
mov
add
sbb
add
imul
test
test
test
mov
out
xor
cmpl
int
push
lret
push
jne
clc
mov
jmp
cs
adc
or
jne
add
mov
cwtl
fsubl
pop
ret
pop
push
pop
inc
add
or
sub
in
push
add
test
fists
dec
out
cmp
add
mov
sbbb
jb
nop
shl
xor
sbb
inc
pop
xor
dec
stos
sbb
dec
inc
jl
jb
outsl
stc
mov
inc
addr16
int3
add
bound
test
inc
mov
pop
into
in
in
jo
rcrb
xor
pushf
test
enter
add
or
add
cmp
push
subl
cs
add
andl
lret
mov
push
add
stc
push
cld
shlb
inc
sub
sub
push
sbb
daa
push
imul
scas
std
pop
and
pop
sbb
or
ja
mov
ret
aad
fcmovnu
std
inc
lret
add
mov
aaa
add
popf
mov
andb
lea
push
daa
inc
das
dec
add
cmc
sbb
in
jle
mov
add
shll
sti
inc
add
push
mov
mov
dec
push
pop
add
out
pop
popa
mov
jb
adc
xor
pusha
xor
cltd
cwtl
xor
scas
pop
xchg
xchg
inc
pop
jecxz
mov
mov
push
sbb
dec
fdivr
push
add
fs
adc
int
add
arpl
cmpsl
add
jb
mov
add
in
push
lock
cli
pop
cmc
jmp
add
orb
sbb
mov
dec
gs
fs
add
cmc
mov
dec
and
fcom
adc
shlb
push
imul
jge
add
out
pop
sbb
jmp
jnp
addb
dec
adc
push
sarb
stc
xchg
pop
nop
and
pop
sub
ficomps
sbb
jbe
loope
cmpsl
roll
mov
push
jg
clc
inc
xor
jge
adc
inc
jl
pop
add
fadds
nop
dec
aas
jmp
sub
sub
jne
rorb
mov
pop
inc
outsb
mov
sub
adc
or
sbb
dec
sbb
ss
out
call
out
push
lea
sub
call
sahf
dec
push
dec
add
cld
push
inc
cmpsl
cltd
repnz
inc
into
inc
mov
jb
mov
inc
mov
add
push
in
js
cmp
loopne
xchg
imul
mov
testb
pop
sbb
mov
or
idivl
out
dec
adc
aam
adc
or
cltd
sahf
mov
xchg
or
adc
add
sub
jmp
adc
push
subl
negl
add
mov
lods
pop
push
push
and
push
insl
js
mov
jns
lds
data16
fiadds
sbb
nop
lss
xchg
add
loopne
and
add
clc
lods
mov
hlt
jge
cmpb
bnd
add
icebp
mov
ret
mov
sbb
notb
lea
repnz
inc
inc
mov
jmp
and
outsl
subb
fldenv
jno
jg
add
int3
popf
mov
out
jecxz
jle
enter
jmp
cld
push
xor
mov
arpl
les
push
icebp
push
add
sbb
mov
je
sbb
add
mov
sbb
adc
test
roll
into
testb
mov
das
add
adc
mov
pop
inc
fidivrl
xchg
out
add
cmpsb
bound
dec
mov
fwait
jmp
in
pop
sbb
dec
out
pop
push
and
jo
add
pop
fisttpll
add
add
push
mov
adc
daa
movsb
pop
push
movsl
push
out
orl
in
jecxz
aas
or
push
test
rorb
sbb
pop
sbb
pop
rcll
dec
stc
add
es
adc
cmp
push
sbb
or
sbb
add
xlat
arpl
jg
adc
add
daa
int
add
cmp
inc
push
loop
adc
leave
add
mov
bndcn
subl
push
cmp
call
frstor
iret
cmp
idivl
add
movl
sahf
test
jnp
inc
mov
je
pop
outsl
div
mov
lock
dec
packsswb
xchg
leave
movsl
pop
pushf
sub
shlb
or
push
add
pop
movsl
out
add
subb
and
test
int3
ja
fs
gs
add
cmp
aad
call
jnp
push
xchg
outsl
xor
pop
sbb
call
cmp
movsl
movsl
pop
xor
mov
and
mov
adc
setb
mov
dec
jl
pusha
rolb
jbe
insl
push
or
add
dec
enter
jecxz
xchg
xchg
lea
push
push
adc
add
outsb
sub
aam
aas
add
mov
mov
pop
enter
add
fisubrs
ljmp
popa
in
jne
je
pop
je
push
add
sti
imull
add
das
and
jns
loopne
or
add
mov
mov
jg
add
cwtl
mov
jge
push
cmpsb
xor
or
add
mov
add
sub
inc
add
out
ss
test
hlt
andb
cmp
ljmp
movl
xchg
add
in
scas
xchg
add
insb
rcl
pop
and
mov
xorl
jo
xchg
dec
cmp
or
daa
mov
addb
sti
insb
mov
jmp
mov
sbb
add
jbe
mov
gs
xor
add
and
jo
pop
pop
lock
nop
pop
ret
sar
mov
inc
mov
sub
and
dec
add
mov
mov
ror
cs
add
fwait
int
cld
sbb
loope
sbb
out
sub
inc
push
in
jae
add
mov
addr16
sub
inc
add
loop
test
ljmp
lret
push
adc
mov
jae
add
test
cmp
data16
js
jb
sub
lods
mov
call
repz
hlt
scas
cld
xor
fldt
mov
dec
and
or
imul
clc
sub
add
scas
jl
hlt
cmp
cmc
testb
inc
in
add
iret
mov
mov
push
xor
imul
notb
add
jns
add
inc
fs
loop
cmp
dec
popf
and
jbe
xor
push
add
cmp
loop
push
add
rclb
enter
dec
fs
movsb
mov
push
rorb
out
jb
jp
add
pushf
lock
inc
or
cmpsb
add
aad
sahf
leave
subb
sbb
and
cwtl
xor
ss
insb
iret
enter
add
jns
imul
xchg
and
fs
push
mov
stos
jae
add
dec
std
js
sar
into
inc
mov
mov
sarb
inc
push
jg
push
mov
scas
cltd
and
clc
movsl
add
test
jmp
pop
repnz
push
push
mov
jmp
rolb
dec
and
push
add
lods
cmp
aaa
lcall
movsl
xchg
mov
pop
xor
adc
add
push
xchg
scas
add
cmc
roll
pop
andl
les
add
pop
xchg
xor
push
and
outsl
add
push
adc
fdivrp
pop
icebp
call
sbb
inc
add
mov
push
lock
sub
loop
movsb
add
dec
sbb
enter
inc
add
nop
add
es
ret
push
sbb
and
movsb
cmp
jg
leave
add
mov
adc
mov
mov
and
add
cmpsl
sarl
push
subb
outsl
add
jle
pop
ds
shrl
add
dec
imul
ds
sbb
sbb
inc
push
jb
push
gs
cmp
or
sbb
mov
add
mov
pop
jb
jne
jecxz
mov
or
sbb
and
loop
cmpb
loopne
wbinvd
js
push
inc
out
cmp
daa
call
push
add
jno
fiadds
es
sbb
rcr
int3
test
xchg
shlb
jmp
lcall
and
cmpl
shlb
adc
xor
adcb
add
push
add
add
scas
cwtl
jp
and
out
popa
cmp
add
cli
push
add
daa
push
mov
imul
mov
xor
popf
dec
cmp
mov
add
aad
testb
test
sbb
sbb
sub
pusha
fs
nop
mov
lds
jmp
loopne
bound
repz
inc
push
pop
jo
mov
mov
pop
ja,pt
ljmp
pop
notl
mov
bound
push
lea
out
adc
insl
das
sbb
push
xchg
pop
or
testl
xchg
xchg
pop
sub
pop
pusha
xor
shll
cmp
add
add
add
bound
loopne
add
cmp
pop
or
arpl
cltd
mov
and
fs
sub
andl
adc
xor
hlt
push
test
fnsave
std
jp
and
pop
fiaddl
jg
imul
add
fists
sub
das
in
mov
jo
out
add
mov
dec
push
shlb
sbb
ljmp
dec
roll
adc
and
push
movsl
mov
fiadds
stos
les
mov
add
movsb
das
lods
sub
jge
ss
jmp
pop
add
jecxz
popf
adc
adcl
and
xchg
lret
jbe
sub
sbb
enter
add
add
add
movsl
pop
add
outsl
pusha
call
in
inc
mov
xor
pusha
enter
andb
adc
cltd
imul
adc
inc
lods
and
data16
add
sbb
adc
jb
lods
insb
shlb
xchg
mov
test
mov
cmp
mov
cld
dec
push
icebp
dec
out
lretw
addr16
sbb
aas
cmc
fdivr
shlb
and
ljmpw
add
nop
push
add
or
outsb
in
push
add
xchg
or
inc
lahf
and
loope
xlat
inc
sbb
outsb
fwait
add
fstl
xchg
or
adc
jne
iret
push
lcall
sub
ljmp
cs
cmp
add
inc
sti
repnz
xchg
into
add
inc
nop
jmp
jg
rcl
gs
mov
pop
sbb
aam
nop
int3
mov
in
push
add
out
out
popf
add
addr16
in
xorb
xor
add
pop
mov
adc
mov
imul
jo
adc
stc
or
dec
outsb
dec
add
ss
adc
cltd
jnp
mov
lods
cmp
lar
xchg
imul
adc
int
add
add
mov
lahf
lods
cmp
loop
xchg
xchg
or
fisubs
cmovle
test
cmp
pop
lods
inc
cmpb
jns
push
test
inc
inc
mov
outsb
push
mov
push
ret
es
add
sub
ss
push
add
and
add
sbb
test
mov
cmp
andb
cltd
push
lcall
icebp
aas
ja
ds
out
mov
in
pop
out
dec
pushw
out
dec
add
jl
rolb
arpl
cwtl
sbb
xor
sarb
in
add
jmp
out
adcb
pusha
adc
push
scas
fcomps
or
lods
push
add
sbb
inc
push
add
sbb
stos
push
mov
push
mov
cltd
add
jl
mov
push
ret
lds
add
xlat
aad
mov
aam
orb
mov
add
and
int3
add
push
pop
xchg
lea
ret
pop
jno
fists
pop
movsl
cmpsl
sbbb
push
lcall
in
or
push
or
movsb
xor
jo
call
inc
add
mov
test
jnp,pn
jbe
in
and
out
cld
inc
push
add
in
outsl
xchg
push
pop
scas
mov
jle
outsb
add
push
jge
add
push
lret
jbe
test
adc
dec
test
push
test
mov
pop
push
into
mov
jmp
push
jl
ret
nop
add
movsl
mov
mov
add
fdivl
jbe
fucomi
lock
pop
inc
stc
into
popf
arpl
add
jbe
cmp
inc
xchg
mov
add
sub
jo
add
mov
out
fidivs
rolb
sub
mov
lahf
aaa
mov
into
jge
out
in
inc
mov
fwait
add
loop
rolb
aam
or
add
mov
sar
add
adc
mov
jmp
add
pop
or
shll
popf
push
jmp
in
call
sub
push
call
aas
add
pusha
mov
jnp
add
ds
adc
pop
outsl
pop
flds
xchg
sbb
add
sub
daa
add
shll
ljmp
call
aas
enter
or
pop
shrl
adc
and
xor
jns
add
iret
outsl
or
mov
jmp
dec
xchg
mov
inc
push
push
sub
mov
adc
add
nop
daa
dec
pushf
mov
icebp
mov
push
sbb
inc
add
push
sbb
enter
jae
inc
addl
dec
add
mov
xor
adc
data16
sub
out
ret
pop
jae
out
pop
cmp
loop
push
fnstsw
into
mov
pop
adcb
hlt
add
inc
xchg
ffreep
cmp
add
inc
pop
sbb
mov
fildl
sub
sub
inc
adc
daa
mov
add
xchg
sbb
jp
or
add
into
fs
pushw
sbb
mov
js
nop
mov
and
sub
sub
adc
adc
or
sbb
imul
jnp
ds
das
add
inc
out
adc
std
jmp
xchg
lahf
xor
add
xchg
jmp
sub
shlb
in
lock
add
pop
lahf
push
and
jb
pop
test
jmp
enter
fidivrs
mov
fs
add
int3
sub
mov
cltd
ds
pop
adc
aas
jae
test
rorb
sti
fiadds
mov
fwait
adc
cmp
imul
aaa
les
add
ret
testl
xchg
xchg
imulb
mov
ret
stos
std
push
xchg
int
and
xchg
sub
adc
jmp
divb
loope
roll
add
call
pop
fbstp
cmpsl
add
xchg
sbb
movsb
mov
test
push
ftst
xor
lods
and
jp
repnz
sbbb
hlt
inc
inc
lock
pop
sbb
lahf
pop
xor
add
shlb
inc
sbb
in
add
je
xchg
arpl
subl
add
pop
push
sub
jo
outsl
loopne
adc
adc
cmpsl
out
sahf
jno
inc
pushf
push
xchg
cmp
andb
mov
add
fcompl
test
adc
mov
lods
or
sbb
in
push
xor
jl
xlat
dec
mov
dec
add
out
iret
lock
add
lods
pop
fiaddl
test
js
ret
add
lea
sti
add
xchg
mov
in
lret
inc
fiaddl
mov
xchg
push
and
or
jmp
in
rcrb
pop
inc
sbb
pop
sbb
cltd
rcll
imul
sbb
adc
ja
pop
and
jne
mov
pop
loope,pt
aas
or
cmpb
mov
imul
mov
dec
sub
inc
xor
shrb
icebp
addl
cmp
push
push
ljmp
nop
mov
lret
cltd
adc
jnp
xchg
mov
sub
cld
pushf
sbb
xor
stc
mov
xchg
push
add
mov
cld
filds
push
xchg
dec
std
dec
repnz
add
popa
outsb
out
and
add
mov
mov
push
jecxz
iret
mov
loopne
clc
aaa
rclb
add
push
fidivs
xor
and
add
insb
outsb
lods
lea
popf
adc
loope
movsb
mov
xchg
cmp
dec
inc
xor
fldcw
fdivs
add
add
jne
xor
stos
push
shlb
add
cmp
xchg
fs
push
add
ja
lcall
add
cmc
out
xor
xchg
aaa
popa
add
cs
mov
call
mov
add
sbb
pop
jne
loopne
add
icebp
es
pop
jge
xor
gs
push
fwait
lret
add
les
push
cmp
cmp
xlat
mov
add
shrb
add
scas
mov
lock
mov
leave
jbe
xchg
push
mov
add
les
push
xchg
jne
inc
imul
pop
dec
push
ja
pop
cmp
lcall
sub
sbb
or
loopne
push
mov
std
jne
add
jle
mov
mov
jecxz
add
jae
call
adc
dec
lret
addb
daa
or
mov
or
aas
push
sti
inc
bound
sbb
inc
daa
add
xchg
add
lret
cltd
cmpsl
push
add
push
jo
jp
adc
repnz
icebp
fstl
mov
test
pop
scas
ret
js
push
cli
cmp
jmp
push
mov
ja
add
jne
fidivs
test
push
add
or
lret
cmp
les
inc
pusha
add
out
das
and
xchg
mov
mov
cld
adc
add
lcall
sub
pop
dec
add
sarb
addb
in
ret
scas
inc
add
mov
add
clc
aas
push
sbb
xor
or
or
in
mov
js
cld
ficoml
cld
mov
pop
push
pop
pushl
je
pop
loope
sbb
add
cmp
add
rolb
mov
adc
add
sahf
enter
mov
mov
in
stc
xchg
sub
add
cmp
lds
xor
out
add
dec
mov
mov
imul
jo
movsb
sbb
mov
hlt
or
add
xchg
pop
pop
add
loope
and
movb
call
test
push
aaa
add
jb
or
nop
and
fldln2
cld
cmp
sub
les
pop
add
repnz
mov
xchg
cs
sub
xor
lahf
xor
xchg
jmp
daa
nop
xor
fsubs
and
sub
cmp
lcall
mov
pop
mov
and
mull
repnz
je
mov
cs
popa
cmp
xchg
mov
add
div
mov
jae
xor
add
cmc
lret
pop
popl
int
nop
and
mov
mov
jb
loopne
sbb
fsts
mov
sti
mov
enter
sbb
cmpsl
lret
roll
jg
aas
test
movsl
xor
xor
lock
add
jae
ljmp
push
mov
dec
clc
pop
xchg
jne
inc
cli
add
mov
add
mov
rorl
fnstsw
and
mov
repz
jp
dec
nop
cld
iret
add
add
call
add
mov
jo
lds
or
in
icebp
in
inc
ja
clc
or
dec
jl
mov
cmp
xchg
xor
clc
mov
out
popl
mov
push
jo
add
dec
pextrw
pop
jno
and
mov
add
fcmove
pop
xorb
dec
pushf
fsubrs
ja
testl
repz
xchg
add
ret
sbb
aas
sarb
add
push
das
aad
and
jmp
imul
inc
out
add
sti
rcl
and
jo
pusha
imul
fcmovb
jo
repnz
adcb
out
add
cmp
ds
andb
or
sahf
jo
add
sarl
add
fidivrl
cld
stos
cmc
outsb
add
pop
popf
push
sub
data16
mov
nop
jmp
dec
xchg
mov
inc
pop
adcb
cwtl
and
dec
sub
loopne
inc
pop
call
sbb
les
sub
stc
je
adc
xchg
add
adc
pop
imul
mov
lock
hlt
add
sub
fnsave
push
jg
fcompl
add
sub
pop
sbb
test
adcl
pavgb
mov
mov
sbb
mov
cmc
shrb
in
ljmp
test
incb
cltd
push
jb
movsl
jl
jbe
add
in
shrb
cld
in
or
cmp
add
repz
xchg
cmp
pop
cmp
inc
mov
loop
mov
mov
mov
jge
and
inc
mov
testl
fs
push
jnp
lahf
rorl
outsl
mov
fidivrl
in
jne
sbb
pop
xor
outsl
xchg
mov
xchg
cmp
push
daa
push
mov
lods
mov
fidivs
xchg
out
sub
pushf
lcall
and
jo
sub
pushf
imul
faddl
mov
pop
popa
mov
jbe
mov
xchg
fldenv
mov
sbb
stos
mov
fs
push
rcrl
lret
xchg
xor
mov
sub
add
bound
sbb
mov
mov
imul
cmpb
pushf
add
sbb
push
add
lea
cwtl
inc
roll
add
adc
mov
xchg
mov
ljmp
adc
add
cmp
inc
fdivl
or
inc
mov
jg
adc
add
mov
aam
push
cmpsl
pushf
das
sbb
leave
lea
add
loope
sub
out
js
lret
push
aad
mov
dec
cmp
add
insb
jge
sahf
fstl
jno
js
mov
add
pushf
fidivs
out
sbb
dec
outsl
insl
js
and
dec
sti
popf
or
lock
sbb
sbb
int
shlb
push
mov
pop
xor
xchg
nop
add
gs
das
js
sbb
cmp
add
shrl
mov
add
jmp
movsl
jo
and
insl
push
push
cmpb
mov
pop
add
mov
xchg
rcrl
and
hlt
pop
ret
mov
adc
or
xor
out
outsb
bswap
push
dec
aam
adc
cmpsb
fdivrl
arpl
lret
inc
clc
mov
aam
mov
outsb
lret
mov
cmc
gs
call
dec
mov
test
pop
daa
nop
ret
arpl
jns
and
jecxz
xchg
lods
int3
xor
adc
mov
or
repnz
movsl
and
sahf
inc
and
adc
fsubs
daa
adc
fndisi(8087
add
test
or
fcomps
sub
mov
lods
lret
xor
nop
ret
pusha
fsubrl
cli
lods
rolb
int3
mov
scas
jo
add
inc
push
mov
test
and
in
or
xchg
xchg
sbb
inc
inc
inc
mov
pushf
es
adc
mov
aas
push
sub
cmp
push
xchg
pop
pop
sbb
mov
pop
inc
rolb
dec
lahf
mov
jge
cpuid
add
aad
pushf
mov
mov
fs
xor
adc
inc
enter
jmp
in
sub
into
cmp
mov
xchg
adc
rclb
cmpb
jle
nop
dec
add
pop
pop
mov
out
in
shrb
jae
sbb
dec
imul
push
mov
rcr
pop
add
fiadds
push
adc
call
mov
mov
lea
pushf
imul
inc
fisubl
testl
xchg
mov
lds
mov
iret
loope
cmp
cmp
out
mov
cltd
mov
enter
xchg
sub
popf
pop
push
inc
rcrb
and
das
hlt
dec
mov
enter
add
test
cmp
mov
dec
pushf
insb
push
aaa
xchg
or
pusha
sub
mov
fidivs
add
xchg
cli
pop
testl
push
sbb
jl
dec
mov
and
dec
hlt
movsl
int
xchg
and
adc
stos
lret
daa
je
bound
adc
rorl
cmp
add
mov
mov
dec
lods
xor
mov
and
sub
les
mov
xlat
xchg
rorl
dec
ret
add
test
dec
mov
xor
fmul
aaa
and
enter
and
xchg
pop
jno
frstor
sbb
sbb
repz
xor
arpl
add
rolb
or
mov
add
cmp
xorb
lret
inc
push
mov
adc
adc
jecxz
jmp
idivl
loopne
sbb
dec
in
stos
jle,pt
or
bnd
mov
in
mov
aaa
popa
and
lahf
lods
dec
push
xchg
addb
add
adc
jp
test
rcl
pop
xor
pop
in
mov
jnp
mov
mov
into
shll
mov
sbb
ljmp
pop
xor
add
cmp
int3
cs
adc
sbb
inc
add
push
lret
call
pop
pop
popa
cmp
ret
shlb
jnp
leave
push
adcl
and
popf
and
sbb
lret
cmpsl
add
js
and
or
pop
add
ja
mov
hlt
or
push
and
clc
sbb
cwtl
loopne
pop
inc
xchg
cs
and
mov
add
imulb
inc
mov
stos
or
pop
jl
mov
sarb
add
mov
stc
push
adc
fimull
or
enter
push
rcrb
inc
dec
arpl
gs
fistps
xor
popf
jb
std
add
sbb
pop
dec
dec
add
in
pop
test
mov
repz
cld
aad
jnp
xor
jp
aas
push
test
pusha
rclb
pop
inc
mov
testl
jge,pn
sbb
xor
dec
test
jo
xchg
mov
and
int3
sbb
insb
leave
mov
fmul
sub
push
ret
popf
add
jp
test
sbb
fildll
pushl
push
jno
add
fmull
cmp
jno
cmp
push
mov
inc
mov
cmp
mov
xchg
ja
and
lods
cwtl
jl
add
adc
mov
jo
mov
cli
mov
add
adc
adc
inc
mov
push
test
outsl
xchg
clc
dec
add
daa
cmpsl
xlat
jns
in
or
add
addl
out
push
aam
cmp
pop
loope
xor
adcb
in
icebp
add
pop
xchg
js
adc
outsb
add
inc
mov
mov
mov
insb
loope
and
fs
or
sbb
movsl
mov
loop
pusha
xchg
xchg
inc
adc
and
fucomi
int3
pushf
jg
addr16
add
je
pop
faddl
push
mov
fs
fs
inc
jne
jg
test
jnp
dec
mov
mov
xchg
subb
fildl
call
cmp
pushf
lock
fsubl
add
out
lods
mov
inc
es
jp
mov
sarb
sub
test
mov
and
xchg
lea
or
jg
sub
lahf
les
adc
imul
ljmp
cmp
out
bound
xchg
cmp
jne
outsb
stos
add
cmp
and
mov
pop
sbb
dec
hlt
jnp
dec
inc
or
add
roll
imul
sub
cmp
sub
ss
sbb
jns
clc
mull
je
ret
push
jo
jmp
inc
add
std
inc
xor
and
and
rorb
jmp
lods
push
dec
ss
add
adc
push
fsts
push
mov
lea
add
in
out
popf
and
subb
push
pop
hlt
pop
add
js
int
sub
xchg
lcall
call
add
iret
and
mov
push
cmp
sub
test
and
add
jb
daa
cwtl
lcall
mov
cmp
cmp
fnstenv
mov
daa
incb
sbb
cltd
js
sub
ss
ljmp
testb
or
add
mov
lcall
mov
dec
jo
add
add
cmpb
rolb
xor
and
rcrl
inc
cmp
pop
push
and
adc
or
ficomps
adc
xchg
pusha
movsl
pop
jl
sbb
mov
add
xchg
addr16
cmp
mov
inc
and
rolb
adc
adcb
jns
loope
and
dec
dec
mov
movsl
cmp
jo
add
lcall
and
xlat
sbb
sbbb
stos
or
xchg
enter
clc
lods
rorb
pop
mov
jno
shrb
test
cwtl
call
std
fstpt
xor
in
mov
and
sbb
in
pop
sbb
jbe
add
xchg
outsb
push
push
andb
rolb
ficoms
cwtl
mov
xchg
test
dec
add
sbb
push
subb
rcll
mov
cli
push
jae
jg
cwtl
rcrb
out
mov
lods
cli
addl
dec
testl
inc
lcall
mov
pop
mov
rorb
js
xchg
dec
sahf
mov
jo
sbb
cmp
sahf
mov
inc
push
fldenv
jbe
adc
push
or
push
out
xor
sbb
cwtl
std
add
jno
mov
jp
aam
dec
sbbb
daa
into
ja
push
push
cmp
mov
addr16
mov
sbb
pop
push
push
xchg
inc
xchg
mov
loopne
pop
mov
pop
inc
rcrl
shll
cmp
rcl
pop
js
repz
mov
xor
add
inc
pop
ja
mov
rclb
scas
cli
or
pop
fsubl
pop
and
rclb
inc
into
adc
cld
xor
lods
sbb
out
add
inc
or
js
push
cltd
sbb
test
je
pop
iret
ss
inc
sub
pop
sbb
pop
push
clc
test
int3
mov
ret
add
mov
cmovl
cmp
xchg
js
add
out
repz
daa
lds
pop
outsl
and
imul
mov
add
push
add
into
sub
bound
add
stc
inc
or
inc
mov
add
popf
add
or
outsb
cli
ficoms
mov
dec
sub
dec
pop
pop
stc
std
push
cs
dec
int3
sub
in
js
sub
rcrl
xchg
out
add
andb
out
dec
lea
mov
push
lret
movb
push
pop
push
clc
mov
cs
sub
dec
out
daa
insb
clc
aad
rclb
xchg
mov
loop
leave
mov
mov
mov
push
add
lods
icebp
and
sbb
push
jl
xor
test
mov
dec
xor
xlat
push
mov
add
cbtw
mov
xor
mov
mov
subl
loopne
inc
gs
and
lret
in
inc
cmp
rol
pop
test
jb
add
jne
into
xchg
popa
pop
pop
lock
cmpb
int3
sub
loop
add
cmp
pop
add
cmp
unpcklps
lock
inc
test
andb
clc
jne
rcrl
jmp
push
cmpsb
scas
lock
pusha
push
sbb
out
add
cmp
lds
scas
push
dec
push
lods
xchg
roll
dec
cli
adc
sbb
xor
int
pop
or
add
dec
dec
mov
push
adc
adc
xchg
sub
jg
and
pop
in
dec
insb
xor
adc
in
sarb
jbe
push
jnp
xlat
shrb
ret
mov
inc
dec
adc
pop
add
dec
adc
sub
fdivrl
add
leave
addb
dec
xchg
cmp
out
pop
jmp
push
js
bound
xchg
loope
add
pop
jns
cmpsb
mov
insl
dec
popa
fisubrs
xor
jae
jecxz
pop
data16
cwtl
orb
cltd
arpl
add
and
popf
insl
pop
sbb
cmpsb
leave
dec
xchg
aam
jns
pop
add
lahf
push
xorb
and
jle
add
mov
mov
add
test
dec
push
fs
add
jle
add
inc
inc
lods
sub
loopne
xlat
stos
ret
sbb
push
out
sub
add
adc
fmul
mov
repnz
add
loopne
iret
inc
filds
in
adc
jl
mov
rcrl
push
std
movsl
imul
add
pop
lea
or
pop
jmp
jecxz
cmp
lock
not
push
pusha
inc
jg
pop
lods
pop
lods
jae
mov
mov
jbe
addl
jp
mov
es
or
outsl
mov
push
jnp
jg
xchg
cmp
jle
imul
adc
mov
jno
insl
sbb
or
pop
xor
loop
mov
dec
insb
sahf
push
lret
cmp
xlat
imul
dec
xor
jl
repnz
xchg
adc
arpl
enter
movsb
stos
sti
jg
aad
mov
iret
xchg
jo
and
int
movl
sbb
add
pop
shl
aaa
inc
lret
mov
mov
or
mov
dec
jl
mov
push
and
dec
testb
aas
jp
mov
pop
add
arpl
sbb
ficomps
aas
adc
sub
andl
popa
cmp
push
rclb
into
xlat
mov
cs
pop
xchg
cmp
lds
mov
add
pop
add
repz
lret
fisttpll
leave
in
enter
cmp
in
sub
insl
sahf
add
fisttps
bound
rorl
fnstcw
icebp
push
or
jp
pusha
cmp
sahf
xor
jno
ljmp
mov
dec
dec
dec
pusha
fisubl
xorb
mov
testl
cmp
dec
jge
jmp
push
lea
sti
dec
nop
mov
jo
fdivrp
das
pop
movsb
push
roll
cmp
cmp
mov
mov
xorb
aas
push
pop
bndldx
out
mov
imul
call
add
pop
push
add
out
cmpsl
and
or
jb
out
out
xlat
push
jno
mov
or
mov
pop
and
imull
or
add
std
pop
inc
lock
sub
testb
loope
cmp
add
ljmp
dec
dec
mov
ja
js
popa
mov
inc
jp
es
mov
rorb
jmp
mov
andb
cmp
or
mov
inc
jmp
repnz
xor
jns
faddl
inc
dec
mov
or
out
aam
arpl
adc
outsb
jecxz
dec
adc
dec
push
aaa
movsl
pop
xor
and
mov
cmpsb
push
ret
mov
clc
flds
icebp
ja
clc
and
rclb
lret
or
cli
and
sbb
dec
mov
cmc
xor
mov
call
mov
fsts
inc
jl
test
fmul
sbbb
pop
push
or
adc
hlt
adc
lret
and
scas
cmp
add
jae
mov
dec
or
lret
out
xlat
pop
and
popa
jl
enter
enter
mov
push
scas
lahf
pop
sub
pop
unpckhps
std
mov
mov
xor
popa
arpl
push
xor
sub
repz
jno
pop
pop
jnp
dec
imul
adc
pusha
pop
sub
mov
loop
inc
xchg
cs
and
mov
jl
or
data16
sbb
or
test
adc
cmp
in
mov
and
add
push
push
out
dec
dec
js
or
xchg
fadds
in
and
pop
loopne
lods
seto
scas
cmpsl
mov
add
sub
sbbl
js
add
enter
inc
pop
and
mov
adc
roll
fdivr
and
xor
imul
add
leave
jns
or
jo
push
faddl
sbb
lret
mov
add
push
test
mov
xor
sbb
and
adc
pop
pop
cmp
or
xor
fs
mov
and
ficomps
arpl
adcb
cwtl
dec
shl
cwtl
xor
add
inc
push
pop
jp
cmp
call
pusha
or
popf
dec
add
ss
subb
ret
mov
cmp
mov
mov
pusha
inc
sbb
mov
mov
cmc
add
push
xchg
fs
xor
js
xor
sarb
dec
xor
inc
in
pop
sbb
push
mov
imul
mov
push
nop
rolb
mov
shrl
adc
jle
adc
es
cwtl
into
imul
mov
jmp
jmp
in
jb
add
mov
shl
add
mov
andb
push
cmc
sub
jl
je
mov
dec
sub
or
jb
jo
loop
add
decl
mov
inc
sahf
outsl
mov
add
leave
xor
loop
shr
roll
mov
clc
sub
jno
xor
mov
sub
addb
ja
xchg
imul
sahf
push
xor
and
es
movsb
cld
mov
push
adc
adc
lret
mov
mov
mov
mov
mov
shrb
mov
cmp
cmpsb
dec
out
xor
xor
cmc
inc
lods
pop
mov
mov
icebp
lods
call
jnp
sub
and
add
add
inc
in
pop
dec
divl
scas
sub
and
dec
repz
negb
push
mov
sahf
pop
inc
stc
and
les
movsl
fdivrl
sbb
cmp
popw
in
inc
xchg
sbb
cli
orl
arpl
imul
test
jecxz
clc
push
ja
lret
cwtl
loopne
xabort
add
stos
and
mov
sti
int
cmp
sub
ret
mov
xchg
cmp
hlt
pusha
pop
push
pop
or
jno
add
addl
into
data16
mov
pmuludq
xchg
add
or
shll
fcmovne
lahf
mov
adc
sbb
adc
ret
xor
test
pop
sbb
lahf
addb
xor
sbb
add
mov
pop
inc
addr16
outsb
int3
je
sbb
xchg
das
sbb
push
mov
inc
aad
fldl
or
pop
inc
adc
enter
pop
and
sub
je
mov
jg
add
testb
nop
loopne
sbb
and
int
rcll
inc
enter
adc
or
inc
push
out
scas
out
and
inc
idivl
mov
js
dec
xlat
insb
test
in
adc
sbb
sub
sti
and
es
add
fnsave
call
mov
in
out
push
add
fistpl
inc
imul
push
and
add
adc
in
andb
frstor
and
scas
les
shlb
jg
inc
jmp
and
pusha
js
pop
sbb
sahf
mov
cld
cmp
jg
inc
popa
andb
inc
out
clc
push
lret
xor
xchg
cltd
dec
shll
ljmp
nop
outsb
sbb
cli
ret
and
cmpb
cmp
mulb
enter
popf
xor
mov
ljmp
inc
add
sarl
imul
or
nop
and
dec
pushf
or
inc
inc
lock
into
lret
push
sbb
add
lret
and
or
ds
xchg
dec
or
xlat
movsl
push
and
adc
pusha
pop
cmpsb
roll
cmp
and
mov
shrl
loopne
test
cld
add
fsubr
push
mov
shl
shll
fwait
in
out
jae
fsubrp
and
push
pop
dec
imul
mov
flds
lock
jl
and
xchg
xor
movsb
pushf
xor
test
lret
add
mov
add
cltd
icebp
dec
jp
fmuls
pushf
lgdtl
loop
jae
add
xor
subb
imulb
mov
test
sub
loope
sti
add
repnz
dec
xor
add
and
and
inc
xorl
inc
sbbb
mov
out
inc
xchg
add
insl
ds
dec
or
jo
and
decb
mov
scas
add
dec
pusha
pop
loopne
cwtl
mov
inc
divb
adc
cmp
push
pop
jmp
or
testl
adc
mov
jecxz
out
xor
inc
and
test
push
and
xchg
mov
xor
dec
inc
inc
push
aaa
cmp
mov
pop
out
sar
dec
push
fadds
or
jae
or
sar
addb
add
gs
sbb
andl
add
cmp
arpl
cmp
mov
lods
nop
inc
imul
inc
int3
adc
lock
sahf
outsb
cmpsl
push
sub
sub
aaa
add
xchg
ret
arpl
fs
mov
add
sti
adc
add
sbbb
call
push
jnp
cmp
jae
add
lahf
int
rcrb
es
inc
add
bound
and
jl
rolb
es
inc
mov
add
cmpb
mov
dec
mov
negl
xor
and
gs
subb
cmp
and
add
es
push
pop
add
into
fbld
add
push
inc
in
dec
or
or
addr16
add
ficoms
adc
mov
inc
lea
inc
fs
pop
nop
xor
es
into
int
aad
enter
bound
pop
mov
adc
cmp
lea
sbb
neg
inc
dec
movb
lods
leave
jle
add
test
lods
xor
fisubs
mov
movsb
pop
mov
enter
jo
xor
cmp
sub
or
mov
mov
js
icebp
out
sbb
scas
cwtl
and
aam
mov
push
add
dec
mov
mov
cltd
sub
jnp
sbb
inc
pushf
push
shlb
xor
jno
es
jg
dec
rorl
inc
je
add
nop
cld
cltd
mov
imul
cmpsb
clc
add
jae
je
adc
add
jmp
push
es
cs
cmpsl
mov
movsl
add
or
sub
pop
sub
mov
inc
shlb
sbb
mov
mov
push
add
pop
shll
divb
testl
mov
pushf
add
add
in
stc
push
push
fwait
xor
call
cmpsb
dec
add
jmp
sub
rcrb
ret
enter
add
sub
hlt
xchg
insl
mov
inc
addb
in
mov
or
add
int
and
push
out
sub
leave
pop
inc
movsb
or
xchg
pop
adc
sahf
addb
xor
mov
pop
xor
add
or
mov
inc
jnp
nopl
dec
inc
add
add
bound
sahf
ret
hlt
mov
inc
add
dec
cmpsl
and
xchg
push
mov
popf
add
pop
jle
je
sahf
sbb
cmp
fwait
add
in
jns
fsubrl
xchg
movsb
push
jno
add
or
and
push
fisubs
inc
sbb
loope
out
sbb
dec
mov
icebp
or
mov
mov
test
fsts
sbb
imul
dec
notb
and
pop
xor
xchg
sub
pop
mov
adc
incb
xor
mov
dec
lcall
into
idivl
adc
cld
adc
mov
scas
int3
cmpb
dec
mov
mov
out
add
outsb
insl
adc
int3
dec
and
sti
cs
fwait
add
jle
imul
sbb
add
in
mov
jmp
jb
pop
mov
loopne
xchg
mov
xor
xor
aaa
sbb
add
sti
mov
subl
sub
movsb
outsb
push
or
pushf
popa
push
xchg
add
xchg
mov
xchg
lods
aas
mov
xor
add
repz
cmp
flds
xor
rol
mov
cmp
dec
ds
test
push
out
aas
add
loope
out
sbb
imul
push
add
add
jg
cmpsb
test
fildl
stos
add
mov
mov
arpl
dec
addl
sahf
and
and
test
int3
or
mov
sub
and
decb
adc
pop
add
jae
cmpl
jp
cltd
inc
inc
movsb
imul
orb
shll
adc
movsb
cmpsb
rolb
and
andl
lock
add
xor
push
rcll
mov
xchg
lock
inc
lret
mov
jb
icebp
and
fs
dec
test
xchg
inc
and
xor
jo
and
sahf
xor
sbb
sarl
inc
dec
mov
push
adc
or
clc
sub
add
sbb
dec
int3
dec
xchg
jo
jmp
call
es
or
scas
mov
and
jne
ret
movsb
fstps
or
subb
add
mov
xchg
rcrb
adc
cld
orb
int
cmp
pushf
xchg
pop
xor
jae
movsl
sub
outsb
xor
xchg
invd
pop
loop
sub
call
push
js
add
sub
mov
mov
clc
repz
cmc
imul
inc
xchg
cmp
and
cli
cmp
adc
popa
outsb
jmp
ljmp
test
lahf
sbb
orb
sahf
xor
jge
dec
cltd
xor
jl
jbe
call
cmp
mov
add
ljmp
and
scas
ss
or
push
fmull
test
popf
imul
push
aam
dec
sub
repz
ljmp
add
mov
pusha
and
movsb
adcb
call
in
add
or
iret
add
mov
mov
in
sbb
cmp
loop
jmp
mov
dec
dec
int
cmp
idiv
icebp
movsb
add
xchg
loopne
sub
and
pop
out
adc
das
imul
jg
add
sub
and
sarb
jo
enter
cld
jns
inc
enter
testb
mov
jbe
shl
push
add
ljmp
nop
sbb
inc
imul
lock
pusha
mov
testb
and
mov
xchg
jmp
and
add
mov
nop
cld
add
jae
pushf
push
les
jne
cwtl
jmp
mov
sti
inc
cmp
push
ja
aad
in
mov
ret
xchg
adc
inc
dec
dec
xlat
les
dec
test
sbb
inc
call
lods
je
pusha
cwtl
lock
add
sbb
sbb
test
rolb
out
lods
mov
add
test
xor
rolb
sub
mov
push
push
aaa
insb
call
mov
push
mov
sbb
das
outsb
sbb
inc
imull
and
faddl
mov
xchg
data16
pop
mov
mov
rcrl
dec
add
add
dec
popa
sbb
dec
sbbl
mov
cmpxchg
sub
cli
fcoml
mov
test
xlat
shrb
mov
cmpsb
push
pop
mov
out
mov
addb
add
and
add
adc
or
ss
int3
enter
inc
fcomps
addb
sbb
dec
hlt
out
inc
jo
and
decl
inc
hlt
dec
mov
or
orb
fs
add
push
mov
and
mov
sub
lea
mov
or
xchg
test
or
xor
divl
and
mov
hlt
jge
js
mov
test
sub
int3
ret
jns
pop
inc
add
rcl
mov
push
stos
jmp
enter
mov
xchg
push
in
test
pushw
adc
repnz
xor
dec
cltd
and
inc
pusha
push
sub
or
add
pop
int3
dec
rcl
in
jb
add
loopne
push
jnp
hlt
add
mov
adc
cmpsb
ljmp
jmp
add
push
xchg
xor
mov
mov
sbb
andb
add
dec
sahf
adc
xor
add
xchg
xorl
jecxz
add
dec
xor
movsl
or
call
pusha
mov
mov
push
push
jg
arpl
add
push
sbbb
mov
je
iret
cmp
rorb
lods
mov
dec
push
inc
dec
mov
push
jbe
flds
mov
pop
or
leave
push
mov
jae
cltd
cmp
sub
gs
add
rolb
inc
mov
jne
xchg
ret
xor
fs
mov
add
dec
ror
cmp
dec
inc
push
xchg
lret
sbb
xor
adc
outsb
mov
xor
sbb
jno
jmp
push
lret
cmp
lcall
mov
mov
adc
inc
je
out
js
scas
icebp
imul
cmp
lret
repnz
jne
pop
push
dec
or
movsl
test
jo
xorl
mov
or
mov
lds
sti
pop
xchg
sub
mov
mov
push
aad
adc
cmpb
nop
add
ljmp
add
out
rcll
test
inc
jl
mul
inc
xor
sub
in
dec
cmp
inc
call
lock
sub
fs
or
jno
sti
enter
and
pop
or
and
pmulhw
dec
int3
test
add
adc
dec
addl
mov
lret
dec
dec
inc
or
pusha
scas
rclb
mov
push
scas
adc
sbbl
adc
ss
push
inc
imul
push
inc
or
and
xor
mov
in
sub
cmc
lods
sub
inc
jae
in
sub
or
and
pop
mov
or
hlt
int3
nop
cld
xchg
xor
pop
pop
xchg
leave
mov
iret
icebp
add
test
add
fwait
add
gs
cwtl
xor
daa
nop
mov
pop
sub
add
xor
push
push
mov
inc
or
add
jp
mov
or
mov
pop
add
add
in
adc
pop
rolb
sub
jg
and
imul
sbb
xor
push
and
or
sub
pop
sarb
cltd
adc
sub
mov
test
and
rcrl
movsb
pop
dec
inc
inc
cmpsl
inc
je
int3
cmp
add
fwait
leave
jnp
lret
add
rolb
fldcw
jo
lret
pushf
add
out
pop
sbb
cmpsb
jnp
enter
clc
insb
sub
fucomip
xor
mov
mov
and
and
pop
imul
jns
shlb
fistpl
lea
fsubrs
outsb
add
js
pushf
xchg
sbb
xor
cwtl
jo
pusha
lret
imul
shll
js
outsb
add
push
or
and
add
mov
jne
and
mov
fmuls
repnz
stos
sub
lcall
in
and
rorb
out
imul
pusha
xor
sbb
sub
cld
cmp
mov
inc
repnz
in
testb
movsb
ljmp
sbb
sbb
pushf
lock
es
xchg
js
cmp
sbb
jo
call
inc
shlb
push
ss
out
pop
dec
pop
repz
jno
enter
xchg
cs
jne
rorb
jbe
imul
lcall
into
std
fwait
dec
add
sbb
push
pop
jae
repz
lea
orb
aam
pop
push
ljmp
pusha
xor
cltd
adcl
dec
div
stc
rolb
and
lahf
or
and
and
in
adcb
inc
push
insl
jl
gs
cmp
jae
test
add
out
scas
add
sub
inc
jmp
stc
adc
int
icebp
cld
aam
fadds
add
or
imul
sbb
icebp
je
pop
inc
lahf
adc
and
add
mov
nop
jg
xchg
mov
sub
push
inc
pop
jle
lods
les
lret
sub
sbb
cmp
mul
jmp
dec
test
pop
and
testb
out
cltd
dec
add
xchg
enter
mov
add
jne
in
mov
dec
adc
sbb
adc
cmpsl
mov
fimuls
adc
push
lret
outsl
and
cltd
dec
aaa
imul
subl
and
add
dec
push
les
roll
or
loop
popa
mov
mov
cmp
movsb
bound
cwtl
inc
push
imul
sbb
cli
mov
add
call
sbb
push
orl
add
inc
ja
adc
mov
and
mov
sahf
inc
sub
mov
xor
les
fldenv
dec
dec
push
sahf
js
cli
out
jno
mov
sbb
iret
clc
pushf
add
in
fcomi
stos
inc
inc
pop
mov
xchg
test
stc
add
loope
aas
repnz
dec
add
sbb
aam
nop
in
jg
jb
fimuls
in
movsl
sub
xchg
insl
nop
inc
int
jnp
jl
add
push
rolb
sbb
push
jl
add
cmp
jp
inc
enter
test
pop
loopne
mov
rcll
mov
and
sahf
pop
mov
out
pop
sbb
pop
mov
inc
add
mov
in
cmp
jmp
rolb
or
sbb
popf
incb
fsubs
mov
pop
cmpsb
add
or
inc
mov
mov
hlt
jge
test
add
xchg
lret
cltd
test
xchg
fwait
ret
fs
push
les
mov
pop
mov
andl
or
test
jb
mov
clc
out
add
cmpl
cmp
inc
addb
cmp
add
out
aam
ljmp
mov
adc
jg
cli
das
insl
push
xor
add
or
dec
jnp
cltd
enter
xchg
dec
cli
jbe
add
rcll
mov
sbbb
jl
and
dec
fdivs
ret
cld
mov
enter
add
imul
xor
or
xor
sub
das
mov
pusha
lock
and
pop
cmpsb
inc
mov
popf
add
repnz
add
je
in
aaa
cwtl
fdivs
jns
mov
and
cmpsl
sub
push
fdivrl
pusha
inc
popf
out
lcall
mov
jmp
mov
and
inc
rol
add
sbb
or
shlb
mov
sbb
mov
inc
sbb
sub
sbb
insl
jecxz
xchg
adc
xor
cmp
mov
mov
shl
lock
inc
or
sub
and
fwait
fs
adc
cvtpi2ps
xchg
mov
pusha
dec
leave
shll
mov
pusha
and
dec
add
mov
pop
xchg
xor
sbb
out
jo
mov
mov
or
imul
xchg
inc
int3
add
cmp
jmp
pop
and
clc
and
and
sbb
js
clc
in
rclb
movsb
lret
orb
sbb
mov
xchg
shll
cmpl
inc
xor
stc
call
ja
and
fisttpll
loope
mov
cltd
out
jp
pop
jnp
mov
add
dec
inc
sarl
cld
inc
sbb
cli
and
cmp
dec
pop
mov
adcb
aas
mov
xor
sbbl
add
sarl
out
add
movsb
mov
add
das
sarb
xor
dec
data16
outsl
jne
leave
sub
add
nop
decb
pushf
pop
mov
popa
enter
inc
cmp
pushf
cmc
and
mov
or
pop
shrl
pop
cwtl
mov
sub
scas
add
mov
daa
and
orb
and
into
cmp
gs
pop
inc
dec
xor
mov
cmovo
xchg
int3
fdivrl
pop
loopne
add
inc
out
add
jo
xorb
cmpsb
pop
adc
push
ret
add
xchg
xor
mov
iret
jns
jne
add
cltd
jnp
cmp
jge
push
xchg
pop
and
pop
sbb
xor
clc
sub
les
fbld
xor
fiaddl
enter
and
sub
es
inc
jmp
and
dec
xor
and
add
inc
aad
lcall
and
and
pop
mov
mov
or
testb
pop
inc
mov
push
xor
pop
outsb
inc
aam
add
call
xor
repnz
add
inc
xor
or
push
mov
jle
xlat
add
call
jo
andb
sub
mov
jg
push
push
pop
lods
imul
cmpl
adc
mov
xchg
add
les
inc
loope
sbb
adcl
int3
add
lahf
fldcw
cmp
lods
add
push
adc
mov
sbb
subl
mov
mov
addb
jns
add
mov
repz
add
imul
inc
inc
mul
sub
subb
add
addr16
clc
loopne
movsl
xchg
mov
and
mov
testb
cwtl
inc
imul
cmp
subb
rclb
mov
punpckhwd
push
enter
out
jae
add
lret
iret
xor
cmp
in
xor
test
mov
movsb
inc
out
add
dec
in
or
push
add
cmpsb
sub
faddl
mov
test
roll
cmp
test
xchg
add
add
andl
mov
aaa
pop
roll
inc
out
pop
or
mov
pop
clc
add
sub
fdivrl
xchg
imul
in
xor
addb
inc
enter
sbb
push
in
lds
add
mov
xchg
lret
rcll
rcrl
dec
es
add
mov
enter
add
lods
sbb
sub
pop
mov
fwait
aam
fs
add
xchg
icebp
movsb
sbb
enter
inc
aad
ficomps
inc
adc
xor
cmp
movsb
mov
xchg
mov
pushf
dec
lret
clc
add
dec
jne
jp
loopne
out
add
push
gs
in
repz
ds
dec
jge
test
movzwl
add
adc
je
fidivs
add
push
add
sbb
scas
dec
dec
enter
mov
ss
fcompl
or
sbb
mov
and
fdivr
add
jo
pop
js
pop
mov
mov
and
xchg
add
cmp
and
nop
fcompl
add
and
lods
dec
lock
std
test
xor
insb
xchg
add
xor
bound
add
mov
mov
jmp
xchg
stos
bound
inc
inc
stos
xor
add
loop
test
inc
fdiv
add
adc
pop
mov
cwtl
mov
pop
sbb
mov
and
dec
mov
repz
pop
push
cltd
sbb
jb
add
ret
adc
fsubs
test
int
jmp
xchg
inc
mov
add
and
testb
pop
stos
and
push
pop
call
or
pusha
lret
dec
sub
imul
sub
mov
movsb
cld
je
cmp
not
push
cmp
add
xchg
leave
rolb
mov
jns
mov
in
fs
and
mov
fdivrs
or
inc
int3
xchg
je
aam
test
or
aad
je
inc
sbb
and
ret
or
testb
imul
imul
inc
push
loop
mul
xchg
pusha
dec
andb
xchg
xor
mov
sbb
push
xor
stos
popa
iret
sub
loopnew
popf
daa
xchg
hlt
pop
xlat
inc
lock
fmuls
add
mov
sahf
es
or
cltd
rcrb
andb
rorb
add
mov
adc
push
add
std
lods
je
mov
sbb
inc
or
adc
adc
jmp
mov
stc
bound
sbb
xor
xchg
inc
test
fmull
sub
mov
add
add
fst
in
jge
add
mov
imul
and
xchg
lods
sub
xchg
icebp
repz
loopne
scas
pop
add
inc
aaa
inc
jmp
aas
and
and
call
mov
mov
jo
lret
jp
mov
jno
xchg
mov
adc
or
add
js
imul
mov
push
clc
hlt
leave
call
and
xor
les
jg
cld
sub
das
pop
inc
pusha
add
cli
loop
rol
rcll
xor
xor
iret
mov
add
jp
add
cmp
repz
pusha
push
sbb
repnz
mov
add
mov
xor
adc
mov
loop
push
fadds
jnp
aam
enter
int3
imul
inc
pop
mov
psubusb
pusha
mov
clc
xor
pop
int3
loope
and
push
inc
dec
inc
and
jmp
cmp
and
add
sub
fsubl
pop
and
dec
fcomps
cmp
add
cmpsb
mov
repnz
pop
hlt
cmp
mov
or
add
out
popf
push
mov
in
xor
sub
lods
sub
xor
nop
loop
pop
cmp
in
popf
mov
mov
mov
sbb
xchg
mov
mov
dec
jae
pop
sub
inc
dec
das
xorb
or
andl
ljmp
cwtl
mov
pushf
aas
cmpsb
mulb
cwtl
mov
or
pmaxsw
das
add
shr
andb
sbb
pop
outsl
jle
add
popf
pop
add
sbb
rcrl
in
lock
add
push
fidivrs
outsb
dec
inc
paddb
add
pop
push
call
clc
sbb
xchg
and
daa
pop
call
nop
not
add
cmp
pushf
add
sbb
or
and
pushf
popa
mov
das
mov
adc
frstor
inc
jmp
adc
aam
ret
mov
mov
add
adc
call
adc
push
mov
pusha
lock
push
add
jmp
jnp
nop
pusha
dec
adc
test
adc
shrl
sub
sub
pmulhw
pop
lea
dec
mov
ljmp
jae
sahf
push
push
pop
js
add
inc
imull
lods
inc
jo
pop
lahf
fmuls
repnz
icebp
stos
out
nop
xor
and
dec
data16
jns
cmc
jle
inc
mov
and
pop
add
mov
xchg
adc
ret
test
inc
inc
jge
inc
nop
adc
aam
xchg
mov
sbb
repz
add
rcrb
hlt
pushf
dec
add
cltd
dec
loopne
push
cmp
dec
add
imul
or
pop
fs
aam
int3
add
fnstsw
mov
xor
inc
push
loopne
insb
xchg
mov
jp
add
inc
test
sbbb
adc
pop
call
adc
adc
pusha
call
ss
sbb
or
dec
mov
pop
add
or
pop
cwtl
add
xchg
enter
and
sbb
add
in
push
aam
pop
or
imulb
jns
mov
repnz
popf
sahf
or
maskmovq
idivl
clc
and
add
mov
pusha
fwait
dec
inc
fbld
out
or
test
gs
clc
test
into
and
pop
xchg
les
jmp
sub
cmovne
dec
ret
add
mov
adc
and
mov
imul
push
pop
sub
pop
push
push
or
jno
or
add
add
loope
fcoml
sub
push
inc
popf
in
ljmp
jmp
push
mov
mov
or
les
adc
dec
add
cmp
ja
mov
jmp
jo
adc
mov
jno
pop
roll
dec
mulb
movsl
add
dec
push
addb
lea
sbb
out
mov
add
fdivl
inc
add
nop
adc
ja
or
mov
push
sub
adc
lret
js
jo
sub
cmpb
or
cld
pop
outsb
lds
and
sub
enter
test
and
test
or
pop
dec
orl
or
mov
insl
xor
in
jp
sbb
lock
adc
pop
inc
icebp
sub
mov
enter
pusha
dec
test
add
stos
xor
dec
xor
out
adc
pop
pop
push
and
add
xor
sub
out
inc
pop
lea
lock
add
mov
adc
insb
mov
and
xor
lahf
push
js
cltd
mov
xor
add
mov
and
pop
sub
sbb
xor
inc
and
mov
mov
cmpsl
push
adc
push
or
sub
test
decl
or
jae
out
inc
mov
test
shll
sub
mov
test
jp
lods
xor
xor
mov
mov
je
and
mov
lods
loop
add
pushf
and
adc
xor
dec
cmp
and
pop
popf
mov
je
cmpl
call
sbbb
ret
in
testl
cmpb
jbe
test
cwtl
adc
jnp
les
paddw
lret
mov
cli
jl
call
and
mov
lahf
lods
addb
ljmp
rcrl
pop
sbbb
addb
mov
outsl
push
lcall
lcall
pop
push
pushf
jmp
or
or
inc
into
sbb
mov
lea
add
adc
adc
and
and
dec
push
add
xlat
repz
insb
or
jge
je
jbe
addb
orl
inc
es
cs
dec
or
sub
xor
pop
and
in
xchg
mov
pushf
sahf
xlat
sub
iret
nop
test
or
popf
push
fnsave
enter
push
lock
add
int3
xlat
stos
inc
sbb
hlt
add
jp
pop
mov
shll
faddp
gs
push
fiaddl
cmpsb
push
and
add
mov
stos
push
rorl
adc
or
movsb
daa
call
add
cmp
fsubs
popa
pusha
inc
negl
in
inc
push
sbb
cmp
mov
fwait
in
test
enter
lock
sbb
cmp
mov
mov
scas
mov
fmul
add
in
sbb
mov
adc
mov
in
mov
in
sti
movsb
adcb
sti
dec
push
leave
sub
repz
or
fistl
inc
mov
inc
push
test
adc
fxch
jmp
push
test
ficoms
mov
mov
jmp
cmp
testb
sub
dec
add
std
jno
loope
jnp
push
sub
mov
popf
movsb
nop
outsl
fisubs
stc
mov
pop
pusha
adc
in
pop
mov
movsl
pop
dec
mov
and
and
add
outsb
adc
repnz
add
lret
pop
mov
pslld
sbb
lods
shlb
or
clc
dec
test
inc
sub
cld
or
jg
inc
icebp
ds
cld
cli
mov
inc
addr16
test
mov
sbb
and
ret
fadds
in
je
or
jnp
lcall
cmp
cmpxchg
out
pusha
fsub
mov
add
pusha
inc
push
dec
pusha
sbb
or
cmp
mov
rolb
add
in
add
cwtl
test
rcll
pusha
jo
outsl
mov
push
cli
dec
and
sub
cmpsl
je
dec
daa
call
jmp
and
mov
jmp
fcmove
adc
add
lds
mov
sbb
or
aam
lock
imul
sub
ljmp
push
in
in
popf
pusha
hlt
fisttps
cmpsl
shl
dec
ds
cli
add
outsb
ja
pop
rcrb
inc
sub
mov
adcb
or
add
jecxz
dec
pop
in
pusha
dec
xor
icebp
fdivrs
add
out
orl
mov
add
in
add
mov
sub
cmp
jmp
add
aad
hlt
and
and
popf
movsl
adc
out
and
pop
dec
push
or
mov
and
icebp
dec
mov
cld
je
sbb
enter
cmp
dec
ja
lds
mov
out
pop
mov
fists
repnz
push
les
pop
ret
clc
ret
adc
hlt
jge
test
mov
enter
sbb
aaa
fwait
outsb
ret
jnp
fdivrs
pop
sbb
movsb
xchg
lock
imul
xor
mov
clc
outsl
xchg
fs
lret
adc
bnd
rclb
daa
jge
xchg
in
aad
and
pop
cltd
sahf
js
in
repz
outsb
scas
pop
movsb
add
lea
daa
sub
adc
pushf
repz
cmp
shl
push
imul
mov
jo
setge
add
jmp
cs
add
imul
je
or
sub
dec
push
and
sub
adc
hlt
sarb
cmc
mov
sbb
push
xchg
dec
lea
jo
jmp
or
xorb
pshufw
pop
int
ret
push
fucomip
mov
jns
dec
add
mov
pushf
adc
in
inc
ret
cwtl
fmuls
add
jle
sub
rol
mov
mov
fstl
mov
enter
sub
int
jle
and
loopne
enter
mov
or
push
push
add
jne
aad
dec
add
inc
popf
inc
mov
cltd
fildl
mov
sub
and
mov
loop
jg
dec
mov
in
pop
test
rclb
adc
adc
decl
mov
hlt
mov
inc
mov
imul
js
sbb
es
inc
nop
push
mov
add
xor
cwtl
add
add
in
dec
es
jecxz
add
rcrb
jnp
adc
add
divl
fcoml
mov
dec
jbe
cmp
test
cli
push
mov
and
inc
movsb
jle
add
shlb
stos
jo
xchg
je
sbb
mov
and
out
hlt
cmp
push
xor
add
xor
orl
mov
mov
cmc
add
repnz
pop
sub
inc
imul
out
sbb
int3
clc
fdivrs
xchg
inc
lret
inc
and
mov
test
sub
ret
pop
jmp
adc
mov
stc
mov
jp
ds
idivl
lea
jo
dec
mov
or
je
andb
scas
movsl
test
add
popl
dec
sub
adc
outsl
mov
lock
pop
and
mov
and
add
xchg
mov
add
inc
inc
repnz
inc
lods
lea
xchg
pop
cld
xchg
clc
mov
fildl
ret
rcr
ficoml
andl
aam
popa
fs
jg
cld
adc
add
int3
leave
cmc
enter
loopne
stos
outsb
dec
add
mov
mov
cmpsb
push
aad
fiaddl
jo
mov
and
mov
mov
lods
jmp
push
idiv
mov
in
xchg
xorb
inc
movsl
sbb
mov
icebp
mov
dec
mov
inc
fs
xchg
inc
and
hlt
sub
pop
outsl
and
testl
pmulhuw
adc
xchg
repz
jbe
xor
mov
cmp
fisttpll
cmp
movsb
cmp
sbb
scas
aam
mov
int3
mov
or
rcrl
cmp
mov
xchg
add
jmp
faddl
ss
sbb
inc
lods
pop
arpl
xor
lcall
inc
sub
mov
loop
add
pop
out
inc
adc
cmp
ss
jp
or
js
mov
leave
loop
outsb
inc
fisttpll
jp
in
dec
repnz
add
loope
popa
jne
mov
or
insb
cmp
inc
clc
dec
jmp
fmul
sub
popa
ss
imul
cmp
cmp
lret
outsb
ljmp
filds
mov
loope
cs
push
push
test
push
xor
jp
enter
xchg
movb
mov
mov
add
fildl
rcll
cwtl
sahf
xor
add
addr16
fisttps
jnp
sub
jle
testb
jecxz
enter
fsubl
test
add
jnp
mov
adc
inc
pop
loop
pop
and
mov
push
or
lods
clc
lock
dec
pusha
cwtl
mov
hlt
imul
jg
jge
lods
cli
test
jb
cs
pusha
inc
sarl
pop
mov
sbb
push
adc
stos
add
xchg
and
mov
adc
call
xchg
pusha
ret
mov
add
fdivrl
sbb
mov
adc
add
pop
nop
je
inc
add
xchg
stc
mov
jecxz
outsb
mov
testb
dec
addr16
lods
loopne
mov
dec
stos
movsl
and
arpl
mov
inc
pop
es
nop
inc
inc
adc
js
rep
jnp
nop
call
fisubrl
jne
pop
add
aam
mov
add
sbb
mov
dec
mov
sti
jle
js
mov
add
shlb
test
add
enter
icebp
push
imul
cmpsl
inc
adc
fdivrl
out
jo
dec
inc
rcr
fdivrs
hlt
or
inc
xchg
pop
cwtl
lret
sbb
cmp
icebp
dec
out
add
nop
sbbl
mov
inc
mull
sub
push
cmp
mov
roll
ds
inc
inc
add
gs
jmp
shrb
cmp
or
xchg
andb
bound
jmp
mov
dec
sbb
shlb
adc
leave
and
int3
addl
jbe
lret
mov
aaa
dec
add
or
mov
add
sub
je
push
adc
jns
adc
add
xchg
jae
and
nop
rolb
pop
adc
out
sub
jp
enter
aad
add
sub
sub
mov
fildll
or
iret
add
mov
movb
lahf
add
lock
and
pop
mov
inc
cmp
rorb
or
lret
hlt
mov
xchg
xor
push
cmp
cmp
mov
adc
sbb
ss
or
push
sbb
fstps
xor
cwtl
pop
in
adc
cmp
add
mov
popa
pusha
insl
leave
pop
enter
out
jecxz
nop
jl
dec
push
sub
pop
jle
mov
imul
dec
add
lods
mov
adc
push
fwait
add
add
pushf
jnp
add
loop
lret
test
mov
inc
ja
arpl
aad
cwtd
inc
xor
adc
out
xor
jg
sub
rorl
push
bnd
clc
push
rcrb
lods
shll
sbb
mov
add
data16
pop
hlt
xor
je
stc
add
jge
dec
mov
popa
dec
xchg
mov
push
xchg
xor
xor
or
lret
ror
pop
sti
jp
add
mov
idivl
mov
aaa
nop
mov
mov
inc
clc
sbb
and
aad
lods
std
mov
popa
adcw
frstor
shlb
add
pop
movsl
mov
sub
sbbl
pop
rcrl
mov
sbb
adc
outsl
xor
pop
add
lmsw
or
sbb
daa
fnstsw
add
and
addb
lock
roll
or
pop
sbb
xchg
add
out
cwtl
pop
mov
sbb
mov
cmp
ret
test
push
mov
jae
jp
add
jmp
xor
push
and
and
or
mov
jno
dec
out
test
mov
daa
sub
push
and
dec
mov
sbb
lret
inc
fs
in
xchg
bound
repnz
add
mov
inc
call
add
ret
in
mov
sbb
xchg
adc
jnp
lds
sub
call
stos
in
test
popa
sbb
mov
fs
sub
test
aam
dec
ljmp
dec
sbb
inc
push
jg
dec
lds
fsubl
jecxz
js
add
inc
daa
mov
jl
ljmp
or
sbb
mov
testb
cmp
cwtl
mov
into
sbb
or
sbb
addb
sbb
ret
and
test
mov
rclb
add
xlat
test
push
hlt
sarb
stc
cmc
test
popa
dec
nop
mov
imul
int3
inc
test
filds
pusha
xchg
imull
push
push
add
jp
and
imul
pushf
mov
shll
pop
mov
mov
and
mov
pop
fsubl
lahf
inc
imul
loop
cmp
es
jae
or
cmp
add
sub
test
add
and
xor
push
jp
mov
pop
adc
arpl
mov
inc
enter
ljmp
rolb
cmp
jno
push
xor
adc
add
xchg
test
addr16
icebp
or
mov
push
test
or
rcr
pop
jno
enter
jmp
xor
lcall
add
in
add
clc
push
imul
dec
rolb
aad
orb
and
lds
xor
mov
aam
push
dec
pop
rolb
inc
xchg
inc
add
aas
les
pop
add
rolb
mov
das
popa
jg
xor
pop
add
loopne
cltd
aad
mov
and
std
sub
js
mov
inc
push
mov
cmp
hlt
add
in
les
mov
stos
jbe
sbb
mov
fcmovb
inc
movsl
adc
unpckhps
addl
jne
inc
mov
jno,pn
rclb
cmp
jnp
ret
ja
ljmp
and
repz
test
add
cmpsb
clc
pop
add
pop
sub
sbb
shld
or
test
mov
inc
fwait
and
jno
addl
scas
iret
icebp
add
or
and
lcall
mov
mov
sub
adc
cmp
fsubrl
xchg
je
pop
mov
or
rorl
lahf
movsb
ret
in
sti
sbb
sub
mov
xchg
sbb
jmp
pop
add
pop
jp
pop
scas
or
cmc
inc
jne
mov
sti
pop
sub
mov
imul
and
movsb
xor
pop
add
sarl
cmpsl
mov
ljmp
xchg
add
adcl
lcall
cmp
sub
ljmp
das
mov
xor
jmp
lock
les
push
adc
add
jns
sbb
nop
inc
xor
mov
mov
xor
add
sti
movsl
push
pop
add
loop
gs
sub
imul
sbb
push
data16
test
movsb
mov
jg
lods
adcl
sarb
mov
jns
aam
push
scas
cmp
adcl
inc
fs
cmp
test
xchg
unpcklps
nop
clc
adc
cld
sub
add
and
test
lret
sub
test
inc
orl
mov
incl
mov
xchg
movsl
pusha
cmp
lods
dec
pop
rcrb
movsb
or
xchg
add
adc
xor
mov
rcrb
fldenv
js
add
mov
rclb
jno
aam
or
add
sub
cmp
test
mov
cld
and
je
add
sub
pop
xchg
in
pop
mov
fistps
les
mov
cs
dec
mov
mov
add
lret
pop
negb
adc
add
imul
or
aas
pop
mull
and
mov
add
sbbb
adc
mov
sub
icebp
xchg
enter
add
xchg
fstl
inc
xor
xchg
adc
loopne
popa
jno
test
ret
loope
push
pop
push
pop
sub
mov
cs
adc
push
add
sbbb
adc
cmpsb
leave
inc
adc
lea
fcomps
pop
jle
sub
fdivr
ud1
add
push
test
dec
jg
test
sbb
push
mov
test
in
sub
enter
jmp
cwtl
rorl
movsb
and
cmp
sub
mov
add
pop
inc
inc
es
test
inc
xchg
mov
icebp
mov
mov
dec
movsl
fisttpll
test
mov
stc
jmp
pushf
les
mov
movsl
stos
subb
pop
adc
adc
stos
je
add
loope
cmp
cltd
add
adc
ret
or
inc
inc
and
pushl
xor
popf
gs
into
jnp
add
adc
sub
push
adc
mov
sub
add
pop
and
add
cs
icebp
adc
add
cwtl
push
aas
mov
int
push
pop
dec
lcall
bswap
rcrb
addr16
mov
adc
inc
add
or
pop
aam
rorb
or
vmxoff
cld
add
fistps
mov
and
pusha
xchg
xor
lods
sbb
jae
fcmove
xorl
sbbb
dec
add
dec
xchg
adc
in
inc
out
sbb
mov
or
gs
add
sbb
pop
add
popa
sub
pop
lret
hlt
in
dec
cwtl
inc
xor
xchg
cmp
je
sbb
add
mov
jae
cwtl
addr16
dec
subb
jl
icebp
and
sub
xor
gs
push
stc
mov
enter
mov
pop
test
push
out
movsb
cmp
stos
jb
push
dec
sub
jp
inc
mov
sbb
xchg
or
inc
adc
mov
add
xorb
clc
adc
jno
and
shrb
pop
cmp
fs
jb
lcall
das
pop
sbb
add
js
sbb
rol
mov
adc
rclb
or
cmp
fnstsw
leave
adc
out
in
jo
mov
and
icebp
and
pop
js
cmp
mov
sbb
test
mov
pop
cmp
push
mov
lock
cmp
out
and
xor
adc
pushf
call
xchg
daa
scas
push
orl
inc
ss
adc
push
jmp
add
mov
push
mov
pop
and
add
inc
mov
dec
pop
add
hlt
sarb
jne
push
pop
clc
stc
push
xor
xor
mov
das
jl
aad
sbb
adc
bound
mulb
call
jp
add
int3
or
and
movsb
jp
mov
and
fdivrl
sbb
popf
popa
pop
add
or
add
and
adc
jg
cmpl
inc
pop
add
movsl
add
popf
adc
in
dec
xor
add
pop
lods
pop
push
adc
add
or
popa
cs
es
leave
cli
test
scas
sbb
xlat
test
add
mov
and
add
xor
pop
aam
xchg
cmp
adc
mov
pop
ja
sbb
sbb
jbe
ret
mov
pop
int
pusha
pop
xchg
rclb
insl
add
testb
xor
sbb
movsl
loope
dec
mov
add
push
jbe
or
leave
int3
mov
inc
inc
cmp
lods
adc
dec
pop
out
or
add
sbb
lods
int3
out
cmpsl
sbb
lods
sbb
mov
mov
lds
scas
add
lret
push
int
inc
mov
mov
lods
clc
and
shr
or
jnp
sbb
add
cmp
icebp
xor
stos
cmpsl
lret
and
pop
mov
iret
inc
push
lds
out
ret
cmp
adcb
loope
repnz
aas
pop
and
xor
add
xchg
scas
jns
push
or
mov
es
pop
pop
and
mov
sub
and
push
pusha
jae
add
and
fmuls
outsb
mov
adcb
cmp
dec
inc
sbb
lcall
pop
ret
add
cmp
dec
sahf
scas
add
and
inc
cld
pop
add
mov
enter
and
pop
lds
negl
sahf
shl
shlb
mov
movsb
pusha
or
fs
dec
orl
mov
jg
or
loop
add
jno
pop
dec
iret
and
pop
cmp
mov
and
rclb
xchg
xchg
add
int
test
push
xchg
pushf
jns
imul
add
and
cmp
stos
sbb
sub
adc
pop
pop
lret
lods
mov
addl
andb
int
add
cmpsl
lahf
sub
add
jg
jnp
add
clc
push
pusha
add
inc
add
in
lahf
jb
divb
xor
xchg
rclb
adc
mov
test
sbb
xorl
enter
cwtl
into
or
or
inc
test
les
scas
aas
dec
mov
jns
out
pop
repz
insb
sbb
xchg
cmp
pop
repnz
rclb
or
hlt
scas
add
pop
in
mov
mov
and
pop
sarb
cld
mov
sub
in
popf
xchg
add
nop
and
sbbb
cmp
push
lods
inc
out
add
add
adc
add
push
and
fbld
dec
jne
mov
mov
jg
xchg
aas
nop
lods
pop
lods
sbbb
xor
out
cmp
bound
inc
cwtl
mov
mov
cmp
ss
or
and
pop
bound
add
push
lahf
icebp
dec
arpl
add
in
xchg
mov
inc
cmp
inc
jno
lock
sub
dec
sbbb
je
out
push
jns
popf
mov
sbb
leave
xchg
shl
jae
xor
sub
jmp
add
add
rcr
pop
in
leave
pusha
jp
add
hlt
sbb
push
push
mov
dec
sbb
fisubrs
rorl
add
xor
subb
shlb
adc
mov
std
mov
add
dec
xor
add
jns
lock
jbe
in
js
jnp
movsb
add
jmp
mov
cld
mov
inc
clc
mov
jo
out
add
cmpsb
lock
daa
cmpsl
lods
or
xor
jmp
ja
adc
inc
lock
scas
mov
nop
rcl
roll
add
xor
lock
jo
lea
add
lret
gs
inc
sbb
js
int
jnp
clc
fsub
cmp
inc
insb
push
or
aaa
or
adc
fucompp
dec
out
fldcw
cmc
andb
lcall
push
jmp
add
test
pop
add
fldl
outsl
loop
shr
pop
jmp
and
inc
lret
iret
push
ljmp
jg
and
jecxz
andl
outsl
ljmp
addr16
or
adcb
mov
cmp
adc
mov
cmp
cmp
sbbb
mov
sbb
pushf
xchg
jbe
add
clc
or
add
xor
inc
add
out
adc
jmp
dec
ss
inc
ljmp
jl
add
fwait
add
pop
sub
cld
mov
cmp
loopne
add
pop
int3
jmp
andb
stos
add
cmc
push
xchg
pusha
xchg
add
stos
adc
test
fdivs
add
fwait
push
pop
push
adc
xor
sbb
cmp
mov
cltd
add
shll
repnz
nop
adc
sti
add
push
pop
jg
or
cmp
add
data16
push
mov
fcoms
into
repz
sahf
mov
std
add
add
xchg
les
inc
popf
add
aas
insb
cld
sarl
or
xor
sub
xchg
ret
mov
repnz
ror
in
insl
add
adc
lods
push
xor
xorb
pop
stc
stos
mov
add
mov
js
add
repz
test
sbb
arpl
loopne
add
mov
add
inc
roll
rolb
repz
add
fcompl
aaa
pop
fucomi
fs
je
mov
mov
stc
adc
test
or
pop
and
orl
dec
inc
hlt
or
xchg
fsts
jns
add
stos
push
lahf
int3
xchg
stos
incb
mov
mov
movl
sub
adc
bswap
cld
lahf
repz
push
sbbb
mov
dec
jb
popf
cs
sbb
cmc
dec
sti
xchg
inc
lret
add
lods
pop
mov
mov
add
adc
paddsw
inc
xor
push
leave
sbb
popa
mov
sbb
and
jne
test
jmp
in
and
add
mov
jl
aad
jbe
pop
or
xor
mov
in
mov
int3
add
and
pop
shlb
adc
loop
add
icebp
popf
inc
pop
dec
xorb
pushf
pop
xor
cld
mov
lock
inc
in
dec
cmp
mov
xorb
dec
sub
jmp
push
cwtl
int3
dec
xorl
in
sbb
cmp
sbb
mov
add
jne
adc
repz
addb
in
pop
movsl
and
pusha
pop
imul
and
add
jle
sti
call
add
jns
data16
outsl
test
fwait
push
cmc
cs
cmpsb
sbb
test
push
adc
jp
add
lret
fisubrl
sub
xchg
mov
add
mov
fimull
adc
sub
pop
mov
sub
push
or
dec
nop
int
aam
sbb
dec
cld
ret
ror
repnz
rcr
mov
mov
test
push
pop
out
mov
and
inc
jg
movsl
cwtl
int3
add
jo
mov
test
pop
incl
fsubrs
subb
cmp
add
mov
mov
pop
push
add
or
hlt
add
ds
xor
add
mov
mov
add
push
and
xchg
es
pop
xchg
push
or
or
or
mov
loopne
add
ret
xchg
notb
push
dec
cwtl
jp
push
xor
test
inc
or
stos
push
nop
add
xchg
add
cwtl
vminss
loop
aas
scas
sbb
xor
lods
inc
adc
push
add
sbb
icebp
es
pop
inc
sub
fisttps
fsubrl
clc
gs
xor
repnz
icebp
fwait
cmp
add
jmp
shlb
fisubl
add
iret
subl
pop
call
jo
jne
lcall
cmp
cmp
xlat
sbb
sub
mov
add
push
mov
add
xor
in
jle
sbb
inc
add
adc
dec
insb
scas
sbb
push
jle
lods
aaa
sbb
push
loop
icebp
lahf
push
pop
push
loope
mov
xchg
sbb
pop
addb
xor
xchg
jmp
mov
call
mov
jno
nop
in
add
jle
fcomp
mov
sub
add
imul
xchg
jmp
jo
adc
add
stos
inc
and
or
mov
incb
xchg
mov
gs
insb
pop
fld
mov
adc
add
hlt
imul
inc
push
sbb
mov
inc
es
and
out
or
and
cmp
push
cmp
cltd
sub
lea
add
mov
adc
pop
rcl
sbb
jnp
aas
ss
add
cltd
and
mov
xchg
mov
pop
push
shr
incb
push
jbe
mov
or
cltd
movsb
cmp
mov
mov
lret
mov
jno
mov
cs
test
add
sbb
xchg
add
add
add
ljmp
roll
test
inc
sbbb
mov
pusha
aam
fnstenv
pushf
popf
fcomp
fwait
inc
pop
loopne
lea
inc
aaa
out
dec
int3
daa
inc
add
mov
addb
jne
out
nop
push
icebp
and
cmc
pusha
xchg
mov
addr16
sbb
jg
rclb
xchg
jno
dec
dec
push
pop
aas
push
xor
sub
clc
mov
flds
xlat
in
mov
xor
xchg
and
rcrb
or
icebp
je
clc
sub
ss
adc
sbb
imul
hlt
jbe
pop
and
add
out
sbb
pop
pslld
xchg
pushf
and
add
rcll
out
bound
mov
mov
mov
jno
cld
xor
push
ljmp
nop
into
in
jnp
add
push
and
and
add
rorb
xchg
scas
in
add
les
xchg
mov
jmp
or
lret
cmpb
sbb
sub
pushl
xchg
outsb
cwtl
push
roll
push
adc
jbe
push
int3
loopne
xchg
and
sbb
ljmp
push
pop
sub
pop
mov
ret
sub
pop
mov
mov
call
pop
inc
push
loopne
or
or
jge
add
cmp
test
pop
in
mov
dec
shlb
ja
cmp
xchg
sbb
popa
xor
ds
cli
xchg
fcmove
xchg
mov
into
test
cmpsl
cmp
adc
movsb
sub
out
lahf
rolb
js
add
sub
js
add
std
mov
add
add
push
fwait
inc
lds
or
sub
sub
dec
cmp
mov
add
pop
repnz
mov
loope
push
aad
nop
sbb
leave
add
mov
push
or
je
fnstenv
shlb
add
mov
outsl
add
pop
popf
rorl
add
lds
mov
mov
add
fisttps
cmp
inc
into
jb
cmp
or
rorl
repnz
test
cmp
sbbb
dec
jp
or
add
sub
adc
pop
sub
stc
add
cmpsl
inc
adc
rolb
pop
cmp
sti
cmp
sbb
loopne
pop
jo
adc
push
inc
adc
in
pop
out
loope
pop
into
jo
cmp
or
xorb
add
ss
adc
test
sub
pop
cld
sbb
fstl
lret
rorb
xlat
mov
sbb
in
add
cmp
add
into
fistl
aas
sarb
mov
fiaddl
jmp
faddl
out
je
mov
clc
fldl
xchg
imul
cmp
xchg
lock
push
add
dec
fsubs
add
sbb
pop
or
cmp
push
adcb
out
jo
xchg
xor
shl
fisttps
mov
adc
push
jnp
add
inc
les
imul
xor
xchg
cmp
lahf
add
imul
dec
outsb
out
in
sub
sub
aam
mov
dec
add
dec
jae
cltd
and
lock
insb
and
inc
aas
sti
stc
adcb
jmp
inc
inc
int
and
jge
xchg
ret
or
dec
inc
jge
dec
xchg
jp
and
imul
adc
shlb
sbb
or
xchg
jl
in
dec
test
jns
stos
cwtl
adc
mov
ret
out
pusha
pop
jbe
mov
popa
fisubl
mov
sahf
int3
xchg
or
fwait
inc
or
or
xchg
dec
stos
iret
jmp
inc
add
mov
jle
add
mov
pop
add
pop
push
inc
add
stos
mov
shrl
jo
aad
mov
loop
add
ja
pop
push
and
add
inc
mov
loopne
cmp
fists
cmp
in
aas
push
or
inc
pop
inc
popf
or
sbb
add
add
mov
lea
inc
pop
dec
lret
xorl
inc
gs
pop
xor
jg
cmp
inc
sbbb
lods
add
mov
shl
dec
mov
adc
push
icebp
adcb
dec
inc
inc
cmp
and
incb
cmpsb
shr
jb
stos
test
add
pop
cs
push
mov
nop
jo
std
dec
cmpsb
mov
jb
adc
mov
push
pop
fsubrs
add
addr16
mov
testb
test
add
out
dec
jmp
jb
pop
or
shll
aad
xchg
add
jnp
dec
add
hlt
loopne
adc
addr16
jno
add
mov
pushf
sbb
mov
xchg
cmp
loopne
stos
cld
out
xor
iret
pop
sbb
mov
icebp
adc
adc
and
ds
sub
add
flds
nop
dec
jg
add
cmpsl
add
pop
das
jg
fsubrs
es
sub
add
pushf
hlt
sbbb
lock
gs
aad
or
popl
pop
sub
subl
and
xor
pop
add
ljmp
add
data16
cmp
lcall
cli
push
add
pop
in
inc
sub
mov
mov
notb
gs
es
add
cltd
mov
lahf
dec
pushf
jecxz
shrl
add
jg
adc
aam
or
cmp
mov
sub
ret
add
sbb
and
sbb
jp
add
mov
pop
add
outsb
mov
dec
add
adc
jmp
jp
addb
aam
mov
mov
out
add
pop
add
sbb
cld
mov
dec
mov
ljmp
nop
mov
sti
xadd
push
lldt
inc
add
enter
push
push
jae
jb
scas
lret
push
testl
mov
pop
frstor
add
jmp
push
add
aad
cmp
mov
into
jg
add
adc
push
cmp
icebp
nop
andb
loopne
addr16
jmp
lods
test
add
jl
stc
pop
scas
xchg
mov
aad
push
and
enter
and
cmp
jl
or
cmpsb
adcb
loopne
popa
fiadds
mov
push
or
mov
add
in
lret
and
mov
mov
repz
pop
add
dec
xchg
sub
loopne
sarl
xchg
adc
jp
sbb
fnsave
out
das
rcr
mov
adc
lahf
sti
sub
es
add
pushf
add
lock
inc
fiadds
add
mov
mov
pop
jecxz
lret
add
les
inc
jb
mov
add
jge
push
jp
mov
movsb
add
cmp
jb
mulb
cli
sub
pop
push
mov
jb
popa
or
es
inc
push
incb
mov
js
or
push
or
pop
fimull
mov
pop
add
pop
std
inc
aam
dec
ja
add
pop
mov
data16
add
dec
xor
push
xchg
mov
xchg
ss
add
sarb
psubsw
mov
or
fildl
mov
stc
add
fsubrl
cmp
add
cmp
adc
out
xor
data16
outsl
mov
pop
xchg
aas
adc
loop
dec
and
jge
sbb
xchg
nop
int3
add
bound
sbb
cmp
out
inc
xchg
sub
xchg
js
pop
test
mov
mov
out
loope
xorb
imul
movlps
cmp
add
or
sbb
and
push
ret
mov
imul
int
cmp
inc
mov
or
sbb
push
loopne
sub
setle
leave
mov
adc
xor
cmp
xlat
pop
lahf
loope
aas
rclb
dec
lods
push
push
mov
aam
popw
ret
adc
mov
sub
jae
add
scas
or
or
or
repnz
fiaddl
stos
jns
mov
xchg
add
out
lret
loope
cld
sbb
cwtl
call
aam
int3
shlb
pop
scas
inc
andb
je
shl
fwait
dec
inc
pop
cmp
push
into
cmp
jmp
jb
pop
xlat
pop
xchg
or
aas
loopne
add
jecxz
dec
add
sub
pop
add
push
mov
mov
adc
add
jbe
es
stc
popa
cmp
mov
mov
add
je
jb
repnz
add
xchg
sub
lods
imul
daa
test
cmp
add
jp
xor
xchg
ret
add
adc
lret
add
int3
xchg
out
push
add
cwtl
xchg
loopne
ljmp
test
cmp
enter
adc
xor
adc
imul
aas
push
insl
sub
cmp
hlt
pusha
pusha
mov
jno
jg
or
add
xchg
adc
test
add
mov
out
cmp
add
imul
add
or
inc
and
repz
lcall
mov
insb
ret
xchg
repnz
ficomps
icebp
jl
leave
aad
daa
popf
orb
sbb
aas
dec
rcrb
dec
negl
inc
inc
loopne
inc
aaa
pop
add
xchg
mov
dec
push
loop
std
add
xlat
repnz
in
loopne
insb
add
out
inc
pop
dec
lds
fistps
xorb
pushf
push
enter
mov
in
nop
cwtl
push
push
sbbb
pop
sbb
mulb
sub
inc
mov
sbb
add
pop
push
jecxz
mov
sbb
andl
mov
inc
pop
jecxz
pop
mov
int
fwait
shl
push
in
jp
add
sub
cwtl
xchg
shll
hlt
sti
xor
mov
jne
cmpsb
add
bound
jg
add
daa
mov
mov
fiaddl
ret
dec
push
sub
rorb
pop
pop
pop
test
stos
cmp
sub
data16
adc
jge
iret
divl
clc
popa
mov
fwait
lret
lods
mov
aaa
imul
rclb
jecxz
pop
push
call
rcrb
xlat
sar
add
in
mov
stc
add
faddl
inc
cwtl
cld
andl
loope
loope
test
gs
insb
cmp
arpl
or
cmp
cli
orl
cmpb
add
jbe
mov
aad
lods
icebp
mov
pop
pop
add
shlb
sahf
add
sub
pop
and
lret
sbb
mov
fildl
cmp
inc
sub
icebp
mov
jmp
push
pop
pusha
cmpsl
adc
insl
addr16
roll
or
add
pushf
popf
xor
decb
adc
mov
mov
and
sti
add
pop
sub
sbb
sbb
mov
fst
iret
jecxz
adc
fsts
addb
mov
add
add
jmp
test
scas
fadds
addb
mov
pop
repnz
adc
dec
cmp
rcrb
push
popa
jae
push
in
mov
xchg
xchg
sbb
es
fsubrp
icebp
mov
dec
xchg
roll
pop
jnp
and
mov
inc
repnz
mov
out
cwtl
mov
ja
mov
mov
jmp
nop
pop
push
sbb
xor
or
jge
test
movb
dec
loopne
xchg
push
insl
add
fbld
jmp
mov
arpl
push
adc
mov
jecxz
add
lock
adc
retw
or
adc
inc
fwait
xchg
aam
add
data16
cmp
sub
jo
je
mov
data16
pop
push
cmp
xchg
add
fists
cmp
jne
xor
dec
or
jmp
lds
adc
imulb
add
and
xlat
pop
lock
xor
sahf
stos
mov
xchg
scas
pop
movsl
pop
das
xchg
xor
push
clc
xchg
add
into
fwait
jno
inc
jo
fldt
xlat
lods
or
jg
add
adcl
inc
imul
cli
jmp
cmp
out
inc
das
xlat
lret
fsubs
inc
faddl
bound
add
mov
or
lea
lods
mov
mov
jnp
dec
xchg
lods
push
mov
add
lahf
stos
mov
add
inc
repnz
xor
cmpsl
adc
cmp
sbb
sbb
std
nop
addl
ret
scas
mov
mov
add
add
inc
dec
cwtl
add
xchg
xchg
jle
add
jo
mov
out
and
xor
add
shlb
fdivrl
jo
sub
scas
mov
icebp
pop
adc
pop
add
mov
pop
ret
in
test
pop
push
icebp
sarb
or
fwait
cmp
add
and
je
inc
pusha
ja
cltd
cmp
or
mov
and
in
pop
add
mov
add
mov
push
add
pop
mov
js
mov
aaa
cmp
adc
sub
mov
adcb
inc
sub
loop
add
pop
mov
clc
mov
mov
add
and
and
loopne
imul
jl
rolb
jbe
push
sub
iret
aaa
cwtl
add
mov
out
add
shl
in
aas
cmp
sub
add
bound
or
fisttps
add
iret
popa
mov
stos
pop
inc
enter
adc
push
add
lods
mov
add
xchg
ds
stc
adc
sub
push
imul
movsb
rclb
mov
adc
jno
int3
test
jnp
movsb
jmp
add
sub
loopne
pusha
lods
adc
popa
rorl
nop
and
add
add
pop
hlt
ds
add
ljmp
or
push
cmp
dec
or
mov
lods
pop
jmp
jae
inc
rclb
and
xchg
mulb
sub
int3
and
mov
mov
aas
pop
aaa
jae
cs
or
mov
sub
js
xchg
mov
sub
inc
clc
movsl
mov
lret
dec
rorb
test
mov
add
sti
mov
jecxz
cmp
cmpsb
scas
loope
rclb
pushl
sbbb
xor
mov
jnp
jno
or
out
add
test
mov
mov
sbb
test
sbb
pop
aas
mov
shrl
add
sub
and
test
je
xor
mov
icebp
aam
add
jno
cmp
aaa
and
pusha
inc
inc
in
fidivrs
mov
cmpsl
fcompl
lock
rclb
and
add
ljmp
xchg
das
aaa
cmpsb
popf
push
adc
push
loopne
mov
jne
iret
mov
xor
ljmp
jge
pop
dec
xchg
inc
popf
jno
push
lds
push
xor
jo
mov
clc
xrelease
nop
ret
fcoml
ficoml
out
or
push
sbb
ret
shll
pop
lret
test
pop
test
pop
shlb
mov
and
xchg
jns
dec
jne
rcrb
fisttpll
add
notb
dec
fildll
pusha
ss
adc
add
out
les
dec
sub
add
or
scas
dec
and
adc
push
pop
sub
push
jle
fldl
mov
fwait
add
inc
test
jmp
cmp
add
mov
and
sbb
xor
or
jnp
add
mov
mov
fs
add
jne
push
cmp
cmp
pop
sbb
mov
and
adc
add
dec
mov
test
add
sub
jns
shrb
lcall
add
push
lock
mov
pusha
pop
or
fldt
and
fildll
xor
fs
add
xchg
mov
add
or
cmp
mov
add
sbb
sbb
hlt
outsb
xor
les
add
cs
push
add
xchg
arpl
ljmp
push
popa
xor
pusha
add
imul
pop
pop
xchg
scas
or
lds
pushf
setl
cmp
push
pop
or
shlb
ja
fisubrs
rclb
xor
xchg
mov
cltd
sub
add
push
fiadds
dec
inc
icebp
add
adc
xchg
nop
and
mov
pushf
xchg
ret
jl
inc
adc
loopne
in
and
sbb
rorl
mov
jbe
movl
push
cmpsl
pusha
adc
mov
push
fldl
xor
adc
pop
test
add
test
push
xor
ret
in
ds
cmpb
arpl
mov
add
iret
enter
sarl
xor
clc
iret
add
mov
imul
cwtl
jo
add
cltd
dec
notb
popf
push
loope
and
push
jg
jbe
and
inc
sub
xor
std
loopne
jb
dec
add
flds
inc
push
mov
stos
jg
cmp
inc
fdiv
push
xor
test
add
pop
nop
xor
loopne
push
stos
popa
adc
or
pop
lcall
pop
mov
jmp
mov
pop
aaa
ljmp
and
xor
cld
cwtl
jne
cmpsl
test
cmc
jns
cmp
test
add
shr
cld
dec
add
fs
xor
clc
cmp
xchg
loopne
jle,pt
mov
roll
insb
cmp
rcrb
add
cmp
arpl
stc
xor
int
mov
int3
jge
add
mov
psubsb
dec
cmpsb
mov
sbb
jp
sub
add
cmp
fdivrl
scas
add
push
mov
lds
cltd
push
dec
hlt
jl
jo
push
pop
test
lods
cmp
mov
seto
push
or
rorb
repnz
stos
dec
push
mov
jmp
jl
adc
ljmp
jp
mov
add
mov
add
leave
insb
rorl
sbbb
xchg
push
lock
mov
add
imul
push
test
insl
repz
outsl
mov
inc
mov
fadds
push
xchg
xchg
loopne
imulb
hlt
es
in
mov
sbbl
push
or
lods
and
xchg
xchg
fdivrp
mov
lahf
pop
inc
ja
inc
lret
in
psubq
imul
dec
fimull
std
mov
cmp
jecxz
jbe
loopne
orl
fildll
push
lcall
data16
ss
add
enter
lea
xchg
mov
int3
adc
les
add
lds
jns
scas
mov
dec
je
or
jo
xchg
or
andb
add
adc
xchg
inc
or
add
sbb
adc
mov
cwtl
ss
fmull
pop
pushf
add
out
pusha
mov
add
or
test
push
pushf
add
sub
sbb
push
ret
add
jae
add
inc
lret
add
inc
scas
mov
add
out
mov
push
add
jns
stc
cmc
inc
fs
adc
pushf
mov
sub
and
inc
les
push
mov
stos
cmp
stc
loopne
subb
adc
dec
mov
cwtl
popa
jge
mov
add
inc
push
push
sbb
int
push
push
cs
add
dec
callw
fiaddl
jae
test
dec
in
scas
add
xchg
pop
add
cltd
pop
dec
loopne
mov
in
lods
mov
pushf
inc
xor
push
xchg
nop
jg
cmp
outsl
cmp
mov
jae
xchg
sti
mov
push
add
iret
cmp
add
mov
dec
xchg
add
out
cmp
and
inc
fsubs
adc
cmc
data16
add
pop
lock
jle
in
adc
cmp
jecxz
pusha
mov
mov
sbb
ds
loopne
xor
mov
scas
cwtl
or
mov
addps
aad
out
xchg
adc
or
imul
and
imul
cmc
fiadds
add
inc
add
or
jle
mov
xor
popa
sbb
xchg
dec
fsubr
mov
inc
adc
test
stc
and
popa
out
lock
cwtl
pop
cmp
dec
ds
add
pop
add
pusha
or
add
les
fmuls
pop
repz
lods
add
lods
or
fildl
adc
fwait
cmpsb
cwtl
gs
push
fstps
call
mov
fiadds
lock
ret
fucomip
add
mov
xchg
add
mov
jno
adc
out
mov
pushf
add
imul
lods
jl
cmc
in
ss
std
mov
mov
ret
dec
add
scas
xchg
aaa
sbb
repnz
bound
cmp
add
mov
fildl
outsb
jb
int3
sti
inc
dec
les
and
subb
adc
les
fildl
adc
jl
imul
rolb
and
push
jae
mov
lcall
push
jmp
pop
add
loop
xchg
lock
sub
add
mov
mov
xchg
sahf
fstpt
add
or
test
xorb
fiadds
mov
cld
inc
rclb
das
push
ret
or
jae
add
sbb
stos
sbb
mov
pop
inc
mov
test
pusha
data16
push
subb
int
jno
sahf
stos
jp
lock
xor
cld
cltd
add
sub
hlt
jno
add
adc
sub
jle
add
lcall
sbb
ret
and
rolb
mov
pushf
test
aad
cmp
das
pop
movsb
mov
subb
mov
or
int
inc
imul
arpl
jb
shrb
roll
imul
jecxz
ja
sbb
fisttps
add
adc
test
dec
push
stc
aas
add
mov
mov
push
push
dec
pop
or
xchg
cmpsb
loop
roll
orb
jle
bound
pop
mov
lea
mov
cmp
ja
movsb
push
push
add
mov
int
repz
mov
inc
jae
push
das
add
movb
push
push
imul
popf
adc
mov
push
lret
xchg
xor
mov
add
xor
sbb
rorb
ret
adc
push
lock
pop
add
mov
jo
or
dec
jl
add
push
inc
lods
and
sbb
aam
pop
or
push
sbb
mov
xor
pop
jmp
xor
xchg
stos
mov
mov
or
mov
iret
outsl
sbb
pop
xor
add
jns
add
daa
add
pop
test
pop
imul
pop
cmpb
jle
repz
fisttpll
sub
dec
xor
jbe
xlat
add
push
adc
cmp
sbb
lock
fs
icebp
dec
pusha
mov
mov
sbb
dec
mov
nop
test
pop
or
sbb
out
rcll
cmp
fdiv
cmp
mov
xor
mov
add
ret
inc
push
rorb
add
rcrb
dec
mov
push
ss
mov
pop
sbb
jbe
gs
add
cmpsb
pop
test
pop
xor
mov
jecxz
xchg
xchg
imul
mov
inc
add
jge
pop
sub
add
adc
outsl
add
add
es
gs
mov
pusha
add
push
iret
ds
adc
adc
push
xor
pop
lcall
inc
xor
mulb
outsb
out
sbb
je
cmp
pop
inc
push
cmp
adc
int3
adc
add
add
popf
lods
dec
gs
ret
sbb
outsl
rclb
xor
push
push
int
dec
cwtl
shl
or
into
inc
mov
pop
sub
lahf
icebp
adc
pop
adc
rolb
inc
pop
adc
and
rclb
mov
jns
ret
gs
adcb
and
and
cwtl
adc
mov
sub
fnstcw
add
jns
shll
mov
jb
scas
mov
lahf
fistpl
nop
out
add
js
cmp
pop
jmp
pop
add
sub
call
ret
shlb
add
ds
in
add
in
cmp
mov
scas
and
loopne
or
add
in
cltd
xchg
ficomps
add
movsb
repnz
inc
lock
add
lods
xor
pop
rol
add
mov
inc
pop
call
jmp
ret
shlb
adc
das
test
lds
mov
pusha
fwait
test
add
pop
loop
jb
or
mov
mov
sub
loop
mov
dec
in
roll
mov
sub
sahf
cwtl
int3
pop
lods
jmp
xchg
xlat
sbbb
bound
push
jns
movsl
popa
or
and
je
xor
xchg
push
push
jns
test
jne
mov
adc
cmp
mov
pop
out
xor
mov
mov
cmpsl
cwtl
insl
sbb
or
jo
xchg
repnz
int
cmp
stc
xor
xchg
movb
mov
sahf
or
add
push
mov
shlb
xchg
loop
adc
push
fmul
add
sub
testb
jl
ret
mov
das
add
mov
sbb
push
arpl
dec
add
jg
pop
xlat
cmpsb
in
push
add
daa
movsl
jmp
sbb
add
jmp
add
cli
xchg
lods
xor
out
hlt
cs
movb
aam
aad
mov
mov
add
inc
jecxz
aad
je
cs
enter
xor
outsb
push
add
aam
xchg
add
dec
jmp
mov
jmp
popf
xchg
or
xchg
pop
add
in
mov
lret
lods
adc
lods
inc
mov
lret
push
add
xchg
add
mov
or
xor
jp,pt
add
pop
inc
icebp
popa
sbbb
mov
call
pusha
xchg
jmp
push
fdiv
inc
add
pop
dec
in
jae
stos
add
sar
hlt
int3
add
cmpsl
mov
push
cld
inc
add
cmc
in
insl
adc
addb
scas
pop
lcall
push
mov
lret
add
adc
scas
pusha
rclb
cmp
lods
push
and
mov
int3
add
mov
movl
jmp
rcrb
fdivr
sbb
pop
add
xor
push
push
mov
stos
pop
dec
mov
pop
and
leave
add
jbe
stc
lods
inc
fistpll
push
ss
xor
test
rcrb
push
and
sbb
mov
add
mov
and
jnp
addr16
push
xchg
pusha
add
jb
inc
ja
cmp
pop
ljmp
or
stos
gs
mov
push
sbb
add
test
jno
enter
xor
cld
push
push
pop
cmpsb
and
xor
add
cmp
ret
lea
inc
pop
movswl
mov
and
mov
add
add
mov
fidivrl
mov
and
jmp
add
sbbl
shlb
inc
and
int3
sub
ret
add
mov
pusha
sti
sarl
aad
or
clc
icebp
or
add
lret
cwtl
cmc
add
jne
mov
rcll
out
hlt
cmc
rclb
sub
popa
addr16
add
adc
xchg
dec
xrelease
cmpsl
jne
rol
cmp
push
inc
xor
xchg
xchg
outsb
lods
mov
mov
pop
add
in
and
imul
add
mov
dec
call
add
push
out
cmc
ret
fstpt
add
xor
dec
movsb
add
fs
or
push
mov
jo
add
dec
push
sbb
cmp
dec
adc
add
mov
add
loope
jbe
ljmp
int3
sbb
inc
enter
ret
xchg
loopne
push
mov
push
xor
add
clc
fdivl
dec
or
cld
add
push
mov
rcll
cld
dec
in
mov
cmp
mov
jle
aas
and
jnp
jge
dec
mov
add
pop
mov
dec
sub
xor
inc
les
lock
push
push
mov
or
in
add
ljmp
add
aaa
inc
xor
and
add
insb
mov
cs
rol
add
pop
lods
out
xor
mov
add
sbbl
inc
push
loope
pop
xchg
push
add
inc
jne
push
adc
add
sbb
stos
dec
jg
add
movsb
pusha
lods
xchg
movsb
sub
jge
add
das
dec
xchg
cmp
jb
push
mov
add
jg
lds
stos
add
lods
jnp
or
add
jae
push
push
add
jl
sbb
mov
and
mov
enter
cltd
push
pushf
push
jg
push
movsl
imul
test
jge
mov
mov
push
add
imul
xor
cs
addr16
and
idivb
aad
jbe
sbbb
mov
fstps
insb
mov
sbb
mov
test
pop
add
cmp
notl
aam
int
push
cltd
xor
cmpl
pop
jo
stos
cs
sbb
add
mov
hlt
xchg
outsl
cld
out
and
mov
stos
loop
mov
addr16
out
xchg
sub
sub
mov
idivl
fists
and
call
add
jns
add
test
outsb
clc
mov
add
fcmovnu
lret
mov
jl
push
sub
imul
add
movsb
cs
inc
notb
add
fdivrp
pop
or
cs
in
add
js
dec
cwtl
and
mov
or
dec
push
xor
xor
mov
and
cmp
xor
test
push
enter
and
cs
pop
sbb
cmp
fnstcw
shlb
ljmp
mov
xlat
out
fdivrs
andb
add
lods
and
add
popa
lods
xchg
add
xor
ljmp
and
orl
add
std
mov
add
xchg
pop
test
mov
add
cli
push
jo
adc
leave
not
jbe
test
jno
fwait
jg
rol
test
jbe
mov
xor
imull
add
xor
cld
pop
adc
push
jl
jns
mov
push
mov
add
push
xchg
add
scas
test
sbb
aaa
lcall
in
mov
fwait
add
xor
ja
xor
dec
jecxz
add
jnp
add
sahf
pop
push
adc
repnz
daa
add
add
and
inc
inc
sub
jecxz
jg
cmp
call
add
dec
clc
push
add
or
sbb
mov
jae
sbb
rclb
lcall
push
push
add
xchg
mov
cmp
add
and
cwtl
push
sbb
add
lods
test
lcall
add
xchg
shlb
cmp
or
cmpsl
dec
mov
lods
dec
or
orl
jl
or
xchg
adc
pop
out
les
ucomiss
test
cmp
xor
movsl
pushl
inc
hlt
sahf
outsb
hlt
insl
mov
xchg
pop
lret
movsl
mov
orl
rol
jl
jb
or
dec
and
incl
ss
mov
rorl
sti
push
sub
xchg
sbbb
fcompl
jmp
cli
loop
adcb
popa
addr16
add
sbb
add
bound
add
jne
shll
ljmp
aam
jno
mov
lret
mov
inc
icebp
add
xor
jge
cmc
lods
cwtl
mov
push
lods
xchg
pop
cwtl
mov
nop
shrl
fwait
add
adc
fdivrl
out
add
aad
dec
jecxz
mov
xor
or
call
pop
xor
dec
push
pop
xor
cmp
push
int3
ljmp
andb
sub
cmp
sbb
js
inc
inc
pop
pushf
pop
fistpll
cmp
outsb
scas
in
adc
imul
or
add
fcoml
fisubrl
xchg
pop
aas
xorb
mov
mov
or
push
incl
lds
push
xchg
lret
aam
and
clc
xchg
push
imul
aaa
shll
enter
cs
pushf
inc
pop
sbb
push
in
mov
jns
pusha
in
hlt
xor
cmp
insb
pop
jno
pop
inc
xor
or
mov
add
dec
mov
fcom
add
fdiv
sbb
test
and
pop
out
fiadds
mov
cmp
inc
iret
sar
add
pop
xchg
add
add
mov
addl
enter
xchg
les
fstps
pushf
rcrb
jg
jno
sub
or
dec
mov
in
je
xor
pop
sub
push
add
lea
pop
xor
loope
push
loop
clc
nop
insb
add
shlb
pop
addl
fiaddl
xchg
xor
mov
sarb
out
jmp
add
sub
sbb
add
inc
cmp
sbb
orb
dec
scas
xchg
addl
adc
in
pop
lods
push
sub
mov
jns
sub
adc
orl
add
add
cmp
test
ja
jecxz
cmpsl
aaa
pushf
in
ja
add
test
sub
rolb
sbb
loope
enter
add
rolb
jns
push
rcl
or
adc
cmp
mov
mov
add
and
rolb
popa
mov
fiadds
push
add
push
je
xchg
repz
dec
orb
add
and
lret
lock
jmp
out
ds
int3
subb
ret
dec
pop
add
add
insb
leave
and
mov
lods
jmp
shl
and
push
ja
test
add
int3
outsl
out
fs
jne
loope
pop
fldt
out
roll
pop
dec
jle
mov
adc
in
xchg
xlat
jns
sbb
or
add
dec
cld
loopne
test
mov
rcrl
inc
add
pop
push
ds
ljmp
and
hlt
arpl
aaa
leave
pop
sbb
push
les
and
add
insb
cmpb
push
dec
add
mov
movsl
sub
jl
imul
dec
call
dec
cld
add
je
loop
inc
mov
out
xor
and
test
push
outsb
dec
sbb
testb
sti
dec
sbb
and
sbb
iret
loope
adcb
jo
pushf
cld
add
and
fsubrl
add
hlt
pusha
fcoms
insb
add
shl
sbb
pop
addb
add
test
sti
roll
subl
sub
or
push
xor
stos
jl
add
xchg
cltd
repnz
or
xchg
inc
gs
orb
sarb
ret
mov
lahf
and
xchg
add
sbb
add
inc
lahf
jne
mov
lock
pusha
loop
or
inc
hlt
add
mov
adc
ror
xlat
mov
call
lods
movsl
sbb
jno
mov
nop
mov
ja
mov
push
mov
loopne
adc
int3
stos
or
jge
push
pop
dec
xor
adcb
mull
xrelease
xchg
aad
cmp
mov
sbb
cmpsb
popf
dec
and
movsl
sub
xor
jno
addb
ret
sahf
out
mov
or
xchg
ds
jae
add
cmp
scas
add
rol
add
fistpll
mov
stos
dec
arpl
cmp
xchg
add
outsl
pop
outsb
sahf
pop
add
mov
push
mov
call
scas
cmpsl
xchg
mov
inc
icebp
sbb
add
xchg
sub
jg
jmp
cmpsb
pop
cwtl
call
add
dec
jne
outsl
and
push
aas
subb
pusha
fistps
cmp
lcall
jnp
add
add
cmp
mov
sbb
mov
jno
hlt
dec
mov
adc
imul
and
popf
add
ja
pop
and
xchg
paddsb
dec
scas
je
jno
cs
int
fcomps
inc
pop
sub
scas
mov
cs
cltd
push
out
inc
into
div
shll
je
mov
or
outsb
xor
sbb
add
pop
or
add
push
lock
cltd
cmpsl
das
or
pop
jl
sahf
pop
mov
rcrb
inc
xor
arpl
xchg
push
mov
shrb
xchg
aaa
fildl
xchg
int3
dec
je
movhps
adc
cs
mov
mov
stos
dec
shll
xchg
jl
or
pop
adc
or
pop
push
inc
add
fidivs
fldl
lods
bound
cli
add
xchg
and
xchg
mov
call
jbe
sub
add
xchg
cmp
mov
inc
cwtl
roll
xor
adc
jecxz
enter
add
inc
lret
or
sti
data16
ja
lcall
add
in
sbbb
lahf
sarl
imul
lock
push
push
cmp
aam
gs
adc
pop
imul
sbb
xchg
sbb
jae
inc
xor
or
cs
xchg
add
loopne
and
cmp
add
dec
out
and
call
stos
fldl
shrl
mov
jnp
push
cmp
in
in
pop
or
and
or
mov
pop
sahf
insl
xchg
cwtl
js
adc
repz
and
add
ret
hlt
add
mov
lcall
adc
lods
mov
jb
mov
sbb
push
mov
cmp
mov
movsb
addl
call
jg
mov
jmp
fisttps
jmp
scas
int
test
ja
rcl
pop
pop
push
inc
add
sub
xchg
scas
insb
dec
add
sbb
lods
pop
mov
xchg
pop
xor
xchg
filds
mov
addr16
subb
jmp
add
inc
xor
pop
mov
mov
sub
arpl
jmp
repnz
cmp
inc
pushf
add
and
out
mov
and
bound
push
mov
add
and
adc
fdivl
adc
push
add
push
mov
lret
lods
pusha
lahf
rcr
jmp
add
push
push
push
call
adc
rolb
dec
pop
add
out
leave
mov
dec
dec
add
cmp
sbb
pop
xor
mov
xchg
add
or
rorl
data16
pop
mov
jb
push
add
shl
add
mov
out
movsl
add
mov
loopne
add
push
cmp
add
xchg
shrb
outsb
adc
cmp
push
or
xchg
jb
aam
or
adcl
mov
and
add
dec
rclb
clc
push
insl
add
lret
pop
mov
xchg
popa
mov
xor
cmove
arpl
add
dec
mov
aas
sub
ficoms
push
jnp
out
jg
hlt
or
xchg
mov
cmc
int
inc
pop
push
aas
leave
incb
push
sub
push
js
dec
imul
ljmp
adc
add
les
ljmp
push
add
dec
into
add
and
sub
push
add
pop
push
cmpb
xchg
push
or
jge
pop
push
sbb
test
add
sti
loop
sarb
add
movsb
addr16
aad
add
sbb
mov
int
add
adc
mov
inc
pop
adc
test
sub
hlt
out
dec
cli
outsb
cltd
xchg
cmp
xchg
mov
rolb
int
lock
je
sahf
add
cmc
xchg
imul
aas
sbb
add
mov
inc
cwtl
adc
inc
mov
dec
add
or
inc
roll
jp
push
mov
ret
addr16
inc
dec
mov
sbb
shr
lds
ret
add
xor
fldcw
pop
xchg
in
mov
xor
in
or
jnp
ret
add
pop
enter
dec
and
push
std
in
cmp
pusha
testb
inc
jbe
sbb
mov
dec
test
xor
mov
int
insb
fidivl
add
mov
fs
add
popf
test
adc
add
push
shlb
out
faddl
push
or
mov
inc
jae
add
test
pusha
fwait
aas
lds
sti
pop
dec
test
add
dec
cmpsb
xchg
lcall
jbe
cs
jle
add
lret
popf
xchg
xorb
mov
lds
sbb
adc
sbb
mov
jmp
mov
subb
jecxz
jle
add
jg
xor
outsb
mov
cmpsl
fnstsw
add
adc
jg
subl
sub
ss
pop
jnp
xor
and
fstpl
lcall
test
or
inc
adc
pop
add
adc
add
ret
dec
mov
stos
sub
jns
add
mov
adc
inc
xor
push
outsl
movsl
add
pop
mov
repnz
in
or
jnp
push
fcomip
and
add
xchg
out
sub
mov
gs
lock
pop
jno
pop
scas
cmp
das
in
les
jbe
jnp
push
jno
lds
dec
andb
lock
add
mov
in
push
ds
sub
pop
add
jno
inc
test
sub
xor
xor
icebp
mov
ret
movsb
adc
pop
and
dec
neg
add
cmc
fdivl
add
push
cs
jne
add
xor
mov
cmp
dec
cmp
aaa
andb
jb
or
test
and
xchg
xchg
push
jo
add
jmp
mov
add
rcl
dec
in
pushf
cmpsl
faddl
xchg
mov
inc
in
pusha
inc
cmp
addb
shl
call
pop
add
daa
dec
mov
pop
aam
cmpl
sbb
es
mov
sub
icebp
js
xor
ror
adc
repz
inc
push
mov
loope
add
pop
mov
and
and
dec
jl
jmp
add
push
aaa
cmp
popf
add
or
or
popf
sbb
int
fsubrs
sahf
inc
fwait
dec
jmp
scas
outsb
dec
cmc
pop
dec
mov
lret
out
xor
lahf
push
mov
cmc
cwtl
lods
pop
stos
aas
xchg
rcrb
dec
fs
cld
sahf
push
sbb
popa
push
int
add
clc
mov
mov
push
lods
cmp
and
stos
je
pop
push
daa
repz
xor
push
pop
cmp
dec
jne
mov
dec
repnz
add
jge
cmpsl
mov
outsl
push
add
js
inc
jp
dec
test
movb
dec
or
add
mov
test
jle
sub
fdiv
add
sbb
fs
add
cmp
and
and
dec
les
sar
add
fld1
xchg
pop
pop
xor
sub
negb
push
aam
add
and
test
out
push
add
popa
test
add
mov
cmp
ds
pop
imul
sarl
push
dec
pop
lock
sbb
xlat
aaa
shll
repz
sub
or
mov
inc
xor
imul
xchg
pushf
push
fldenv
push
rorb
ljmp
cmp
loope
in
push
inc
in
sub
sbb
mov
xchg
fs
xor
cmpsl
xchg
xor
inc
pusha
in
insb
adc
sbb
outsl
mov
cmp
mov
pusha
sub
adc
loopne
xor
sbb
lds
repz
sti
scas
daa
fmull
jo
dec
and
xor
push
or
psubusw
inc
add
adc
mov
cli
mov
jo
or
in
out
sub
pop
loop
add
imul
fidivl
shlb
ret
jge
mov
fdivrl
pop
adc
aas
popf
adc
and
lea
jb
addb
fidivrs
xchg
add
jmp
rclb
mov
test
scas
andl
push
sub
jb
add
icebp
in
sbb
xchg
ja
ja
cmp
jbe
test
push
sub
add
sarb
add
add
mov
push
sarl
clc
cmp
out
fadds
inc
add
lea
pop
push
ffreep
lcall
rorl
notb
inc
xor
xchg
imul
mov
inc
sub
adc
push
bound
xor
sarb
mov
push
fstpt
mov
sub
add
in
mov
cmp
cmpsl
push
lea
aam
add
bound
rclb
mov
rcrl
sbb
test
cmp
testb
add
cmp
xor
mov
js
xchg
ret
inc
add
mov
sbb
add
push
jg
orb
sbb
test
cwtl
fdivl
or
xchg
add
inc
jl
cmc
orb
movb
test
mov
push
jecxz
fidivl
xor
and
jp
loopne
add
sub
les
jbe
adc
jb
cld
aad
mov
insb
adc
inc
sub
adc
add
aaa
sbb
mov
mov
imul
addb
js
inc
add
dec
xor
inc
sub
lods
out
cltd
xchg
ffree
add
jp
mov
mov
lret
nop
adc
loopne
sub
xchg
shrl
std
fsubrl
imul
jle
js
add
adc
lret
pop
pop
push
sub
xchg
lock
dec
test
rcll
mov
es
add
scas
decb
add
jno
xchg
test
jmp
cmp
add
stos
cltd
iret
hlt
xchg
cmp
pop
sub
or
cmp
and
subl
push
jp
mov
add
sub
out
jmp
xor
pop
popa
js
xchg
clc
push
cmc
pop
popa
repnz
add
shlb
jb
xor
addr16
mov
or
rcrl
mov
or
int
adc
mov
rcl
add
mov
inc
stos
add
stos
in
call
inc
loop
push
addr16
mov
lret
mov
push
movsl
adc
mov
inc
add
insl
fcomps
hlt
lret
sahf
movzwl
or
jg
add
pop
shrl
lcall
mov
push
pop
dec
jge
mov
add
jl
popa
mov
int
adc
clc
addb
pop
pop
loopne
dec
push
mov
cltd
rolb
faddl
mov
pop
loop
dec
add
adc
fdiv
push
cmpsb
repz
xor
sti
andb
outsl
ljmp
dec
pop
push
jb
call
in
add
dec
orl
je
ret
in
mov
ret
xorl
js
dec
jns
or
testl
pop
add
cmp
or
jecxz
mov
push
cmp
rorl
popa
xchg
inc
xchg
xchg
xlat
or
fcomps
sub
cmp
jnp
jecxz
xor
nop
push
adc
adc
adcl
sub
in
dec
dec
mov
mov
scas
mov
pusha
in
mov
sub
or
int
lods
int3
and
jo
pop
enter
jg
mov
mov
lock
test
cmp
fiadds
js
hlt
pop
push
cmp
sub
pop
jp
repnz
xchg
popf
loop
sbb
std
ds
dec
aas
mov
rclb
inc
push
inc
je
xchg
cmpb
call
subl
sub
mov
xlat
and
lock
jno
in
pop
shlb
jg
subb
jl
xor
insb
inc
xor
jg
popa
pop
fildll
push
cs
add
ficoms
xor
jnp
push
mov
and
sub
add
add
adc
out
mov
mov
adc
ficoml
ljmp
xor
push
fsubrs
rcll
jb
js
mov
bound
and
or
int3
cmpl
add
enter
inc
in
push
add
push
mov
mov
in
rolb
jl
mov
sub
pop
loop
mov
dec
mov
pusha
dec
pusha
push
add
out
cmpsl
in
stc
mov
lea
inc
mov
mov
xor
rolb
mov
add
pushf
rolb
adc
xchg
mov
add
and
or
loopne
into
add
dec
test
mulb
pop
xchg
adc
mov
inc
sub
pop
flds
cmp
addb
add
add
or
xchg
sahf
inc
inc
dec
incl
dec
add
cmp
mov
add
shlb
in
popf
push
test
pop
add
int3
pop
outsb
push
out
and
pop
dec
or
icebp
loope
add
mov
pop
inc
cltd
fimull
inc
fldcw
dec
cwtl
jg
in
xchg
inc
das
jb
iret
adc
nop
movsl
popf
flds
lret
dec
das
mov
loopne
jg
imul
push
pop
adc
int3
jb
pop
mov
pop
mov
cs
inc
dec
lea
hlt
pusha
ljmp
xor
notb
fmuls
lea
outsl
add
mov
ret
fs
sarb
add
or
fadds
fdivl
stos
cmp
ds
or
or
adcb
fsubs
xlat
rorb
arpl
mov
rcl
out
faddl
shrl
xchg
scas
adcl
add
or
xchg
mov
jmp
ficomps
xchg
cmp
lcall
sub
xchg
mov
or
sub
hlt
test
cmpxchg
or
xor
mov
data16
sbb
addr16
and
clc
xor
stc
dec
lods
or
adc
mov
movsb
sbb
or
call
dec
test
bound
add
dec
adc
outsb
xor
andb
out
mov
add
adc
sub
pop
pusha
aaa
movaps
fcoml
jbe
lret
adc
jle
cmp
cmp
les
lahf
sub
add
cmc
xchg
repz
adc
push
orl
pop
sbb
sbb
rolb
sbb
pop
or
inc
inc
jb
es
addr16
or
and
jb
out
orb
vmovups
add
sbb
pop
xor
call
fdivs
dec
cmp
add
lret
mov
inc
cwtl
mov
repz
in
add
sub
addl
fdivrs
js
popa
enter
jnp
scas
dec
sub
pop
inc
pop
push
shl
dec
test
add
mov
or
sub
sub
sub
jl
jg
add
mov
mov
sbb
xor
or
lock
mov
cmp
mov
rcrl
aas
mov
call
push
pop
and
and
dec
addl
pop
pop
jle
sbb
pusha
stos
and
test
subb
shrl
mov
addb
sbb
rorl
or
sub
pop
icebp
sub
mov
add
fcom
testb
int3
js
push
scas
call
in
addb
rcrl
mov
or
add
mov
loopne
popa
add
push
jge
int
xchg
adc
pusha
fstl
pop
scas
dec
inc
ret
inc
cli
and
sar
add
in
mov
nop
stos
add
or
ret
in
add
push
cmp
fbstp
sbb
dec
mov
mov
sub
clts
in
push
enter
push
cmp
sti
stos
cmp
loopne
popa
add
and
daa
add
cs
aad
gs
loopne
sbb
hlt
roll
and
and
out
jnp
push
mov
stos
roll
inc
aam
imul
loop
dec
add
int
and
pushf
ret
in
lahf
fbstp
pop
je
add
test
nop
inc
mov
shlb
cs
cmpsl
daa
add
adc
repnz
ljmp
add
fcmovnb
push
mov
daa
lahf
popa
ljmp
pop
xor
jns
add
cmpsb
nop
add
jmp
sub
dec
xchg
and
ffree
bound
inc
add
pop
in
add
mov
js
jno
add
data16
cmp
or
loope
aad
das
add
rcrl
mov
sub
cmp
sarb
enter
mov
aaa
add
lret
xchg
or
ljmp
jp
jge
daa
pusha
data16
decl
mov
lahf
inc
xor
jne
cmp
dec
add
jecxz
outsl
stos
adc
jl
add
push
inc
push
lret
inc
inc
add
push
add
repnz
enter
jo
lock
dec
sub
adc
add
rcrl
add
pop
inc
push
xchg
in
cmp
add
and
mov
push
mov
ja
cmp
hlt
nop
ljmp
mov
aam
add
ret
adc
inc
das
and
add
adc
add
add
pop
xor
mov
pop
mov
loopne
cwtl
cmp
fdivrl
aam
xor
mov
cmpsb
insb
stos
add
xchg
negl
shlb
add
jo
pop
mov
sub
add
xor
sub
jnp
mov
fnsave
jne
jno
add
sarl
cs
stos
cmp
adc
and
xchg
xor
imul
in
adc
xchg
int3
lret
mov
roll
xchg
add
push
mov
dec
push
iret
jne
add
sub
ljmp
jo
jb
addr16
pop
out
add
and
mov
adc
inc
mov
inc
jp
pop
push
inc
leave
test
lods
in
loop
in
cmp
inc
dec
out
inc
xor
hlt
test
icebp
mov
mov
sub
add
out
xchg
adc
shl
mov
std
add
inc
inc
pop
inc
in
filds
xor
add
mov
ret
test
pop
add
dec
push
push
xchg
insl
fdiv
aas
add
dec
sbb
stc
xchg
int3
daa
ja
xchg
sub
pop
bound
push
rolb
les
xor
leave
test
jne
mov
adc
fisubs
pushf
call
mov
shlb
add
ret
xchg
mov
xchg
and
ds
mov
lcall
add
jne
stc
xchg
mov
add
shll
sbb
mov
ret
lcall
das
dec
insb
add
inc
stos
adc
jae
add
adc
cmp
leave
push
mov
das
add
mov
add
mov
pop
add
scas
hlt
xchg
push
jns
mov
sahf
push
sub
add
arpl
clc
xchg
shlb
jns
jmp
jb
add
dec
test
mov
cli
mov
adc
push
shr
add
aad
dec
stos
push
rcrb
or
mov
sbb
hlt
jle
push
outsb
add
or
xchg
shl
add
xchg
jp
leave
pop
mov
add
stos
mov
mov
jae
inc
cwtl
nop
adc
leave
loope
cmp
dec
push
mov
or
add
pusha
addl
mov
call
add
cmp
stos
rolb
add
push
pop
cmp
xchg
mov
push
push
testl
das
or
inc
mov
repnz
out
push
pusha
push
push
lret
inc
pop
inc
sub
pop
inc
mov
je
push
mov
call
lock
popa
lcall
sub
add
mov
cli
outsl
push
jmp
ret
addr16
xchg
bound
cli
sbb
rorl
in
shll
add
cmp
lret
pop
cwtl
pop
out
mov
mov
lods
add
xchg
shrb
dec
je
or
dec
and
addb
sub
pushf
add
nop
dec
imul
rclb
aas
jle
leave
dec
std
add
jb
pusha
add
add
outsb
push
inc
cmp
pop
add
jecxz
add
sub
test
add
cli
dec
add
in
rorl
lock
sarb
mov
jbe
sub
imul
scas
push
ss
ja
sub
xchg
inc
xor
insb
xchg
or
mov
lock
repnz
aam
movsl
mov
andb
inc
dec
xor
filds
add
rcrl
stos
arpl
add
jae
lahf
call
dec
nop
add
mov
fcomp
insl
insb
jae
add
sbb
icebp
in
imul
lock
rclb
aam
dec
mov
add
jge
jo
repnz
add
cmpsb
cltd
xchg
aam
jb
push
adc
das
sbb
cmp
in
lock
add
imul
int
jbe
add
orb
push
dec
jg
aad
in
loopne
push
jge
add
xchg
mov
inc
fcomps
in
jbe
add
int
mov
add
aaa
cltd
cmpsl
out
mov
jmp
push
nop
fxch
push
add
rep
add
lock
std
sbb
ja
ror
xchg
add
xchg
mov
push
inc
and
jle
cs
mov
add
push
out
pop
lret
xor
xor
xorb
cmova
aam
dec
lods
inc
pop
hlt
std
mov
jmp
cmp
add
mov
jle
fidivs
popa
inc
call
leave
je
xchg
push
in
js
nop
jno
add
dec
push
fcmovnbe
out
les
and
add
or
iret
lock
pop
fmuls
xchg
sub
and
jbe
mov
xchg
xchg
add
push
leave
fidivs
and
cli
xor
cmp
sbbb
inc
out
enter
aam
or
fs
icebp
in
pusha
add
adc
jb
xchg
push
in
clc
sar
dec
pop
movsb
add
cld
js
ja
jo
int
repnz
popa
mov
cmp
mov
pop
loope
cmp
cmp
mov
add
lahf
jge
clc
daa
rorl
xchg
mov
or
add
inc
xchg
dec
push
push
lret
dec
fdivs
adc
jns
mov
xchg
push
mov
mov
enter
ret
add
sbb
sar
adc
fwait
push
inc
les
add
cmpsl
adc
cld
scas
call
cmp
sbb
add
cmp
mov
mov
lcall
sbb
pop
push
mov
or
rcr
mov
test
pop
rcrl
cmpsl
mov
jmp
popf
inc
repnz
aam
cs
inc
cld
pushl
shrb
das
dec
call
jecxz
mov
add
add
sub
and
or
cmp
fldcw
mov
in
push
add
iret
popa
inc
rcr
repz
in
add
add
or
sbb
ds
add
sahf
ds
xor
mov
lret
fsubs
push
out
jnp
push
add
outsl
cmp
add
mov
into
add
pop
fisubrl
popf
jmp
scas
sbb
push
xchg
xor
mov
cmovge
cmp
mov
shlb
jb,pt
adc
dec
adc
shrd
xor
outsl
fwait
or
mov
xor
cmpb
adc
shlb
sbb
fadds
fstl
mov
and
leave
movb
xchg
add
xlat
pusha
fldl
inc
subb
lret
jg
add
in
jbe
ds
mov
add
lock
pop
xchg
add
test
jne
mov
add
or
pusha
xor
clc
mulb
xlat
pusha
fidivl
inc
dec
add
or
add
rcrb
lods
mov
jg
or
sub
cli
test
ret
aas
mov
gs
add
daa
sub
adc
das
sub
call
push
sbbb
in
imul
add
out
sarb
test
and
sbb
inc
or
add
mov
mov
jle
adc
enter
and
add
mov
xchg
pusha
add
cmc
mov
loop
add
call
mov
adc
rolb
imul
inc
sbb
dec
cmp
pop
cli
xchg
inc
test
pmuludq
mov
popa
mov
les
jl
jns
in
lods
add
jnp
mov
add
das
test
cmc
movsb
jecxz
xor
call
sub
rolb
cmp
cmp
in
stos
loopne
mov
push
dec
push
adc
xchg
xacquire
xor
xchg
adc
push
or
push
push
pop
and
or
loop
sub
int
aad
cmp
stos
add
rcrb
cmp
dec
out
sub
sub
pusha
add
std
aam
add
repz
xchg
enter
mov
dec
mov
test
pop
cltd
leave
add
adc
scas
xor
add
adc
jo
lock
aad
shl
dec
les
sbb
sbb
mov
scas
fwait
adc
sti
repz
mov
xorb
popl
xchg
dec
mov
mov
mov
xchg
xor
aas
cmp
cmpsb
orb
inc
test
daa
fisttps
pop
xchg
enter
test
add
add
sub
fs
das
ljmp
sub
test
loop
pusha
imulb
adc
lret
inc
sub
jp
adc
test
orb
push
xorl
aas
mov
or
std
clc
int3
add
mov
jo
dec
xor
sbb
sbb
pusha
ret
pop
cmpsb
cmpsl
pop
mov
jo
adc
push
push
repnz
and
inc
push
addb
sub
rcrb
ljmp
andb
or
pusha
push
aam
rorb
mov
subb
sbb
add
mov
or
and
xchg
shrl
pop
sbb
push
je
sub
iret
sbb
adcb
mov
push
jge
dec
add
repz
repnz
aaa
mov
insb
incb
or
sbb
add
xchg
sbb
inc
mov
rcl
imul
xchg
in
xor
shlb
cmp
add
shl
or
xchg
xor
push
test
arpl
push
insb
xchg
push
push
add
fisttpll
stc
inc
jmp
les
ja
adc
jns
mov
inc
jnp
add
mov
cmpsl
lods
test
xor
insl
shl
repz
decl
xor
mov
std
jo
or
lds
sbb
xorb
inc
add
dec
cmp
mov
jg
sbbl
jb
rcr
test
into
xor
out
ret
add
bound
mov
jle
lahf
enter
xchg
push
test
imul
shr
pop
arpl
jmp
and
cs
lret
out
call
popa
or
jae
jb
push
fld
mov
jbe
add
add
dec
loope
ds
call
inc
mov
lods
add
pop
gs
clc
enter
and
mov
lea
pop
mov
jno
in
movsb
popa
add
xor
pop
imul
add
inc
sti
pop
dec
and
ja
loopne
sub
fisttps
jo
sbb
outsb
ret
inc
add
push
dec
sub
mov
outsb
pop
pusha
mov
and
pop
add
jo
inc
xchg
arpl
add
adc
mov
xchg
daa
and
stc
add
add
int3
in
fcmove
fmuls
sbb
dec
sbb
mov
pop
jb
adc
into
jnp
push
push
mov
xchg
pop
stos
repnz
mov
loopne
call
outsl
popf
add
enter
clc
jge
inc
ja,pt
cmp
push
mov
mov
aas
lret
push
hlt
push
push
push
pop
aam
push
jecxz
shrb
push
or
add
sbb
loopne
fnstsw
cld
jo
cmp
sbb
inc
test
imul
daa
inc
mov
sti
lahf
inc
dec
nop
jmp
rolb
out
jmp
xchg
xlat
push
sbb
rcrb
enter
xchg
jns
adc
jmp
and
add
mov
and
outsl
lock
lea
push
add
cs
mov
pop
ror
shll
xor
loopne
mov
rorb
in
cmp
cmp
fsubrl
cmpb
loope
loopne
nop
cltd
mov
out
inc
roll
jmp
data16
jle
jne
ret
leave
andb
and
lock
call
or
sbb
in
sti
mov
mov
ljmp
in
pop
ja
xor
clc
dec
xor
iret
fwait
popf
push
xor
aad
mov
inc
or
test
mov
or
xor
cwtl
fadd
enter
mov
add
xor
ljmp
aaa
add
dec
and
call
lret
loopne
mov
add
pop
cmp
stos
addl
lock
and
loopne
or
mov
add
jg
or
addr16
xchg
scas
je
enter
add
stc
loope
cmp
add
inc
pop
popa
dec
cwtl
xchg
jmp
sbb
add
pop
adc
add
in
test
fsts
sbb
out
xchg
mov
js
sbb
mov
jns
pop
push
dec
xchg
dec
imul
mov
es
or
pop
add
adc
fisttps
sbbb
jecxz
pusha
sub
dec
add
sub
les
add
add
imul
pop
popa
inc
cld
inc
push
xchg
add
data16
xchg
call
pusha
push
loop
jne
dec
ljmp
or
fsubr
inc
popa
pop
pop
bound
jmp
ja
negb
sub
out
pop
push
adc
fiaddl
inc
popf
std
add
sbb
push
adc
popa
scas
test
shl
jb
inc
popf
out
add
xchg
push
dec
or
dec
notrack
add
ret
mov
and
jecxz
jo
ja
jae
pop
mov
lods
cvtps2pi
add
pop
or
mov
push
cli
add
xchg
pop
dec
mov
testl
test
and
xor
cltd
clc
pop
enter
inc
push
inc
xchg
pop
fmuls
add
fcmovu
arpl
pushf
out
mov
addr16
rcr
jns
xchg
orb
fwait
jle
push
icebp
fs
pop
cmpb
inc
add
bound
xor
outsl
roll
xor
fisubrs
imul
xor
sbb
and
add
mov
xlat
sbb
clc
sub
xchg
mov
stc
jne
or
pop
or
addl
jp
cmova
iret
cmpsb
mov
dec
adc
mov
xor
add
mov
inc
dec
lods
fiadds
add
int
imul
mov
mov
mov
inc
pushf
cmp
mov
add
add
dec
fstl
xor
fcomps
xchg
lods
or
adc
dec
fisubs
push
inc
nop
ficoml
inc
jbe
adc
add
adc
punpcklwd
lock
xor
pusha
aaa
sbb
pushfw
pushl
push
clc
sahf
popa
jno
test
f2xm1
jg
cmp
sbb
rcrl
inc
xchg
ss
push
and
mov
repnz
loopne
add
push
in
and
xorb
out
dec
jbe
add
cli
out
mov
imull
xchg
lret
addr16
push
cmpsl
fadd
cld
jns
call
jg
jbe
sbb
cmpsl
mov
scas
aam
cs
cld
cmp
cmp
mov
xor
movb
pop
adc
pop
and
jbe
shrb
int3
xchg
in
push
inc
movsb
outsb
lret
inc
mov
or
cs
bound
cmovle
add
sub
mov
aas
out
or
adc
mov
or
dec
jmp
add
xchg
lods
clc
cmp
pop
addb
or
pop
jp
leave
cs
push
cltd
in
add
or
sbb
into
ret
or
adc
iret
add
push
cld
jl
insl
les
cmp
push
inc
pop
add
jbe
xchg
test
addr16
call
pop
xchg
dec
adc
out
push
inc
mov
mov
and
xchg
push
pop
add
sbb
xor
xchg
mov
cwtl
and
xchg
add
push
decl
test
adc
jb
out
int3
push
cld
fwait
push
push
inc
fdivs
mov
and
rorl
setnp
dec
push
mov
mov
les
or
jmp
stos
loope
inc
popa
pop
lock
or
push
lea
and
add
pop
mov
xor
and
pop
mov
ss
call
aaa
ds
pop
jl
cmc
add
or
or
call
fs
adc
mov
shlb
xchg
pusha
mov
les
daa
shll
sbb
or
push
xor
sub
jo
add
fsubr
sbb
sahf
inc
inc
pop
movsb
inc
out
scas
js
lcall
test
mov
jne
loopne
popa
pop
add
adc
mov
addr16
bound
incl
add
add
mov
and
inc
enter
xchg
xchg
loop
test
dec
or
sub
xchg
icebp
subb
add
sbb
addl
jo
lahf
lods
pushf
dec
mov
mov
cmp
cmpsl
inc
loope
icebp
inc
in
or
fucomi
cwtl
xorl
into
lcall
xchg
mov
mov
stc
lock
adc
add
shlb
add
push
or
test
ljmp
mov
aad
mov
push
mov
adc
inc
push
movsl
mov
test
sbb
stos
rcll
pushf
mov
scas
mov
and
add
or
add
sar
inc
fsubrl
or
push
xchg
mov
lods
int
in
loop
stc
push
jmp
pusha
or
fsubrs
scas
gs
mov
hlt
sarb
jbe
repz
add
adc
arpl
mov
xor
negb
movsl
or
jno
loopne
lahf
push
sub
mov
test
movsb
add
dec
push
xor
loopne
and
add
es
shrl
xchg
sbb
fisttpl
cmpsb
add
ss
push
xchg
jecxz
loopne
pop
sbb
adc
sub
add
outsb
hlt
or
pop
add
test
shrb
roll
aaa
dec
mov
pop
pop
pop
mov
jae
or
into
jle
mov
cwtl
adc
mov
pop
inc
push
bound
dec
es
adc
sub
mov
nop
sbb
xor
jne
jg
and
sub
int
push
sub
add
aam
lcall
add
insl
cmpsl
jp
add
adc
sbb
xchg
cmp
push
xchg
andb
jnp
dec
shl
hlt
out
push
aas
pusha
sarl
cmp
sbb
leave
push
inc
xchg
int3
addb
inc
mov
movsb
pop
aas
movsl
filds
loope
sub
das
addb
add
mov
jbe
loop
sbb
jnp
call
mov
rorb
add
lret
add
dec
sahf
xchg
jmp
mov
out
outsb
es
sarl
leave
add
fimull
outsl
add
jo
in
add
fstpl
adc
push
not
sbb
add
or
mov
jge
add
shll
xchg
push
imul
jg
pop
clc
jb
in
scas
in
add
lea
lock
pushf
cmc
xchg
jmp
jnp
fs
sub
std
testl
cld
iret
in
xchg
sbb
mov
cmc
cwtl
bound
xor
test
enter
fwait
shr
push
add
or
add
in
or
aaa
dec
sbb
in
stc
stos
or
shrb
xchg
inc
fistpll
test
mov
add
shlb
pop
push
mov
clc
mov
xor
adc
fisubrs
mov
jns
test
cmp
or
insb
add
in
shrb
sbb
mov
sahf
xchg
jmp
fiaddl
into
adc
xchg
mov
sub
fdivrl
add
sub
js
add
add
shl
add
mov
in
jp
jnp
jl
xchg
scas
fdivr
add
jb
pop
push
iret
sbb
add
pop
inc
inc
adc
cmp
mov
jmp
leave
out
negb
fists
xlat
aaa
add
stos
push
mov
insb
jecxz
mov
inc
in
pusha
cmpsb
inc
add
and
jl
imul
inc
or
add
push
jl
test
xor
outsl
roll
pop
jns
inc
push
movsb
test
mov
popf
mov
sbb
repnz
adc
pop
fdivrl
shlb
add
mov
scas
mov
adcb
and
setle
repnz
cmp
shll
xor
nop
add
inc
mov
ffreep
cmp
jp
add
dec
iret
and
inc
ss
and
lcall
pop
scas
call
or
xor
adc
jnp
jl
popl
push
mov
pop
sub
loope
ljmp
sbb
mov
pop
push
push
push
out
icebp
push
gs
clc
mov
sti
xor
fldl
or
lret
xor
mov
arpl
sub
jb
lmsw
cmc
mov
fwait
add
mov
mov
xchg
pop
insb
mov
inc
cld
xchg
daa
push
cs
sar
mov
mov
ljmp
pop
adc
sbb
or
or
add
add
xor
stos
add
sahf
mov
xchg
sbb
outsb
mov
add
loope
mov
ret
mov
add
jp
xchg
ljmp
pop
sti
loopne
mov
jmp
mov
add
out
sbb
or
push
or
add
mov
sbb
push
arpl
test
sub
outsb
add
dec
mov
sub
enter
add
filds
inc
mov
mov
add
es
xchg
flds
mov
in
testl
dec
jle
arpl
add
lret
ror
jo
ljmp
ret
mov
adc
lcall
mov
push
jb
aas
sbb
add
inc
adc
fdivrp
push
push
xchg
cmpsb
in
shrl
jns
inc
loopne
mov
pop
test
rcrb
ret
adc
ficoml
jge
ljmp
sub
pop
lods
out
test
icebp
in
xchg
cld
in
add
or
adc
dec
incl
nop
dec
dec
add
push
std
ds
mov
add
add
xor
incb
or
and
adc
push
jo
add
mov
adc
jmp
push
mov
mov
xchg
jp
inc
xor
xlat
and
add
xor
shll
xlat
fcoms
or
mov
add
cmp
add
push
orb
sub
int3
add
leave
scas
or
ficoms
lret
in
arpl
push
dec
and
insl
insb
inc
jno
sbb
adc
testb
ds
clc
inc
stos
dec
add
dec
adc
sahf
mov
adc
aaa
dec
orl
or
in
add
loop
add
jl
idiv
enter
in
hlt
cmp
lock
push
add
pop
cmp
push
jb
daa
add
enter
add
rclb
sub
push
dec
sarb
fldl
fisubs
out
mov
adc
out
and
dec
add
push
shrb
notb
push
ret
cmp
in
add
mov
leave
push
pop
cli
lock
xlat
inc
inc
xchg
aad
cmp
mov
add
cwtl
stc
sarl
popf
mov
jo
ret
add
cli
inc
lahf
adcb
xor
popf
push
das
bound
pop
cmpl
dec
cmp
jae
call
jecxz
mov
andl
lods
test
add
jns
icebp
sub
jb
gs
push
and
loope
add
jp
dec
jmp
ljmp
mov
sbb
leave
mov
inc
les
sti
sbb
clc
out
addb
jo
loopne
mov
add
inc
int
sbb
xor
jp
pop
push
or
out
sub
shrb
add
lret
ds
jnp
add
and
repz
addl
aam
out
push
setne
adc
dec
cmp
lock
cmp
add
mov
mov
pop
incl
aad
aas
cmpsb
mov
xor
idivb
cwtl
sti
jae
mov
pop
push
pxor
fucomip
or
dec
jmp
cmpsl
adcb
icebp
emms
or
push
add
arpl
rorl
jo
jae
idivl
add
stos
sbb
subb
mov
sub
js
incl
add
xchg
push
push
jne
rcl
add
js
add
inc
dec
movl
fsts
push
push
add
lods
push
and
cmpsb
clc
divb
add
xchg
adc
cmp
inc
cltd
pop
xchg
push
pop
je
jmp
loope
add
sub
jp
insb
loopne
das
xlat
clc
and
jmp
cmc
xchg
aas
cmp
cmp
add
sbb
add
mov
jle
push
aas
xor
sbbb
lret
lods
inc
add
cltd
lds
jb
lods
jb
jo
les
cmp
inc
xchg
imul
cld
mov
mov
mov
lods
fcoml
push
test
add
aaa
pop
push
or
repz
pop
js
test
sbb
cmpsl
add
jge
push
mov
nop
mov
subl
shlb
in
sub
cmp
idivl
add
and
lock
adc
pushf
push
dec
scas
add
pusha
mov
mov
fs
sub
add
icebp
add
sub
es
dec
notb
jecxz
mov
cmp
les
sub
inc
add
sbb
xchg
cs
test
or
push
inc
add
movups
push
push
mov
dec
pop
rolb
inc
mov
push
cmp
incl
xor
inc
dec
push
repz
push
test
mov
ljmp
outsb
jb
add
cmpsb
jbe
mov
aas
out
hlt
add
mov
inc
dec
or
inc
fidivs
popa
les
dec
aad
shrb
out
dec
mov
loope
sbb
scas
jno
pop
into
jg
xchg
add
jbe
daa
xchg
push
sub
add
mov
inc
jge
push
add
dec
outsl
sub
cmp
incb
inc
fstpt
jmp
jle
push
cmp
loopne
sub
stos
mov
in
setle
aam
pushf
int
cmpsb
inc
mov
add
adc
in
cmp
add
or
stc
aaa
push
or
adc
aam
jno
dec
pusha
shrb
mov
lock
inc
cld
add
sub
mov
dec
add
xchg
sbb
sub
xchg
add
pop
add
movsl
fs
sub
add
int3
sar
adc
xor
int3
call
ljmp
lret
add
mov
movl
call
or
xchg
inc
xor
movups
popl
fldl
adc
push
add
ret
dec
jle
push
mov
xchg
inc
add
stc
push
cmp
je
xchg
mov
lock
cmp
scas
add
mov
adcl
pop
or
das
ret
jl
shlb
or
adc
vcvttsd2si
in
sahf
pop
pusha
push
js
pop
jne
pop
jmp
mov
aad
add
scas
popa
dec
scas
out
jg
add
pop
or
aad
pop
mov
adc
iret
cmc
add
pop
pop
lcall
pop
cltd
lock
and
xchg
mov
add
stc
add
mov
jnp
pop
test
push
movsb
cmp
fwait
mov
loopne
pop
ds
and
in
jmp
add
jae
fmulp
shlb
xor
in
xor
lahf
xchg
les
mov
inc
adc
sub
in
lds
cmp
adc
cmp
stos
fisubrs
jnp
test
shll
mov
xor
in
cmp
rorl
fldl
pop
add
cs
insb
dec
aam
pop
add
loopne
mov
add
jbe
push
add
in
sub
cmp
pop
rcrb
inc
loopne
add
lea
mov
clc
stos
add
fwait
mov
inc
cwtl
mov
ret
insl
or
loopne
fsub
lea
lods
vpmaxsw
xor
jb
xor
cmp
dec
push
cmc
add
cmc
mov
mov
cmp
mov
stos
add
or
add
sbb
adc
call
setbe
jo
pop
xchg
pop
sbb
roll
xor
loopne
mov
imul
jecxz
insb
mov
nop
fs
jg
and
pop
push
andl
ds
repnz
jbe
sub
sub
xchg
jns
imul
or
sahf
xchg
sbb
test
xor
call
push
es
pop
sub
add
xchg
cmp
push
xor
mov
lods
xchg
cli
sbb
add
ljmp
jnp
add
or
adc
psubw
call
push
or
adc
mov
push
and
mov
ja
add
inc
cmc
or
sbb
lret
repz
push
add
scas
lock
add
inc
lds
rcr
leave
sti
cmp
das
xorb
into
inc
movsb
rol
clc
aaa
aas
roll
stc
cmp
add
or
iret
jg
lret
lock
cmp
add
mov
bound
sbb
ds
out
add
dec
adc
or
fcoms
adc
xlat
push
mov
loop
mov
rcrb
dec
fsubp
adc
out
setg
add
jne
test
pop
in
mov
out
int3
push
fistl
sarb
cli
cmp
stos
inc
pop
lock
pop
in
push
add
push
fbld
push
add
cli
movsl
push
subl
pop
cmpsb
test
push
and
push
punpckhdq
xlat
arpl
sbb
in
rcrl
adc
test
add
packssdw
shlb
jns
add
iret
loopne
cmp
dec
push
pop
pop
movsl
mov
imul
movsb
imulb
xchg
push
jno
shl
xchg
aam
das
adc
adc
add
inc
aaa
jp
add
adc
cmp
insl
xchg
daa
rol
fdivs
shl
xor
cs
adc
push
mov
popf
jns
add
lret
int
push
or
sub
stos
adc
xchg
or
add
add
icebp
mov
sub
mov
sbb
pop
cli
stos
pop
inc
jb
push
push
not
shlb
int3
gs
or
xchg
jge
test
add
cmp
push
mov
dec
rdpmc
leave
das
xchg
inc
sub
mov
aaa
cmpsl
insb
mov
inc
add
mov
inc
sbb
fisubrs
stos
sbb
add
orb
push
or
mov
lods
lcall
imul
loopne
pop
adc
mov
jae
aaa
add
sbb
add
and
push
add
inc
lret
mov
adc
arpl
or
movsl
pop
mov
push
push
jae
and
repz
or
jl
in
jmp
inc
test
nop
sbb
stos
mov
push
dec
mov
pop
push
daa
lock
push
enter
adc
jno
pop
jle
fstpt
xor
sub
push
and
pop
fsubs
xchg
jp
or
lock
fsub
pop
push
int
and
sub
sbb
push
jnp
negb
fld
sbb
in
mov
imull
pop
iret
dec
add
sub
ja
aaa
sarb
mov
mull
push
add
out
lock
mov
mov
xorb
nopl
mov
cmc
xchg
call
mov
xchg
inc
gs
bound
je
mov
adc
loope
add
cmp
inc
je
sbb
hlt
push
add
jecxz
and
add
xchg
je
test
push
orb
jne
sbb
lock
push
leave
jp
je
xlat
add
ret
mov
popa
sbb
add
or
sub
jno
das
mov
fs
movq
inc
popf
das
pop
repnz
insl
mov
idivl
add
xor
call
aas
or
nop
or
sbb
push
into
add
jmp
push
data16
imul
js
outsb
lret
add
mov
jle
cmp
bound
inc
cmp
mov
mov
in
divb
mov
push
cltd
sub
add
push
mov
push
pop
shl
popl
jne
fiaddl
lea
adc
movsl
mov
fcmovnbe
ljmp
add
scas
cmp
push
sar
hlt
adc
orl
fmul
xchg
dec
gs
jne
sti
clc
lahf
jnp
push
popa
jmp
aas
xorl
xor
nop
fidivrl
mov
inc
pop
adc
add
add
and
lock
add
sti
pop
sub
call
adc
xchg
push
testb
das
mov
shll
rcrb
test
jle
jne
hlt
bound
pop
clc
mov
pusha
outsb
jl
mov
aaa
inc
inc
inc
adc
mov
xchg
cmp
mov
mov
popl
xor
mov
xchg
orb
lcall
mov
fildl
nop
add
jge
dec
jno
orb
mov
subl
pusha
sahf
ja
add
bound
sbb
push
popf
mov
shrb
pop
sbb
cmp
mov
in
cmp
mov
cli
add
fwait
pop
test
push
mov
test
add
push
fisttpl
pop
push
mov
lock
test
das
shr
add
out
movsb
xchg
xchg
sub
adc
sub
sti
pusha
ja
lods
scas
inc
add
sbb
mov
jbe
add
leave
pop
lret
sub
roll
int
movsb
fcomip
rcrl
inc
popa
ljmp
das
add
mov
xchg
lret
lcall
bnd
and
add
ret
pop
ret
xor
pop
imul
ljmp
add
and
sub
mov
nop
sbb
cmp
icebp
xchg
add
fstpt
faddl
in
rol
imul
inc
push
push
push
add
movsb
enter
add
inc
fcomip
xlat
cwtl
sarl
in
jp
enter
push
leave
cld
pop
add
repz
add
icebp
mov
jg
add
pop
enter
cmp
ds
xchg
int
add
mov
pop
mov
jnp
and
out
out
mov
jl
in
mov
in
jno
subb
popf
inc
outsb
add
js
imul
cmp
mov
ja
adc
fwait
sahf
or
movsb
clc
add
xchg
cmp
jne
decb
int
add
cmovs
fistps
or
enter
mov
add
jmp
stos
insb
fldl
xchg
or
pop
movsb
shll
and
aaa
add
insb
unpcklps
lock
pop
mov
addl
mov
cmc
orb
sub
test
pop
add
jo
jb
sti
cmp
leave
push
enter
int
add
in
jmp
subb
and
add
push
add
inc
mov
dec
cmp
add
mov
sti
sbbl
in
xlat
mov
sub
sub
sti
test
repz
dec
cmp
add
fists
leave
rolb
stos
out
add
in
icebp
std
fsubl
rorb
add
cmp
movsb
dec
mov
dec
cli
leave
add
enter
jo
pop
adc
lock
jge
xor
das
mov
xor
add
jl
rcll
scas
xchg
mov
outsb
stc
mov
cli
xlat
add
arpl
add
aad
mov
or
addr16
dec
sarl
shlb
jo
shlb
lea
mov
add
fdiv
xchg
push
addr16
dec
push
in
call
sub
das
mov
rcrb
xor
mov
mov
pop
lods
shl
push
or
fdivr
pop
insl
add
mov
push
cmp
incl
add
xchg
es
test
ja
adc
mov
dec
sbb
jno
ret
scas
push
aam
mov
daa
adc
sbb
ss
movsb
push
mov
add
in
mov
pop
jns
inc
cmp
add
sar
inc
pop
fdiv
filds
pop
mov
in
je
add
enter
std
cmp
xor
mov
hlt
imul
aas
sub
rcll
pop
ds
jne
mov
jg
das
aas
outsl
pop
pop
inc
add
testl
jmp
stc
xor
jmp
pop
or
push
add
jp
mov
xchg
or
hlt
push
add
push
pop
or
cmpsl
push
add
mov
sbbb
jae
add
pop
xchg
icebp
mov
push
ret
ljmp
jecxz
pop
cltd
mov
sub
push
insb
xor
add
xor
pusha
jl
sahf
test
adc
loop
adc
bound
pusha
push
stos
dec
gs
mov
lods
popl
push
insl
mov
dec
vsqrtsd
loopne
inc
add
lahf
mov
dec
and
add
incb
add
ja
adc
xchg
push
js
ss
xor
cli
fadds
cld
aad
leave
and
sub
xor
jns
push
or
xor
push
repz
movsl
cmp
push
lock
push
mov
jb,pt
add
push
mov
push
pop
mov
sub
sbb
repz
and
mov
push
clc
dec
add
outsl
nop
add
sub
imul
push
or
xchg
and
pop
fiadds
das
lcall
mov
mov
sbb
dec
cmpsl
stos
je
in
sbb
pushf
sbbl
xlat
push
std
xchg
cmp
or
into
jle
mov
dec
mov
mov
in
fcoml
sbb
inc
sti
mov
and
fiaddl
repz
sahf
iret
pop
dec
xchg
add
popa
outsl
fwait
jne
jl
pop
xchg
dec
cmp
sbb
adc
sbb
add
aad
pushf
fimuls
push
sbb
jno
xchg
loopne
out
int
pop
gs
repnz
push
xor
pop
pop
loop
push
outsl
push
dec
or
test
in
orb
mov
cmc
sti
rolb
mov
imul
sbb
mov
je
pusha
bnd
pop
sub
shll
push
sub
movsb
cmp
repz
inc
cmp
inc
jne
dec
outsb
add
lods
mov
jbe
insl
pop
xchg
and
imul
push
jg
mov
add
bound
stc
xchg
test
xchg
loopne
add
imulb
lea
xor
xor
lods
into
lret
wbinvd
or
clc
cmp
int3
mov
les
add
xchg
outsb
inc
pop
loopne
fistl
cmp
add
or
int3
xor
sbb
jg
push
inc
lods
xchg
ret
sub
jo
xor
imul
outsl
sub
popf
mov
repnz
adc
jno
sbb
test
int3
sub
out
enter
mov
sub
das
inc
jle
xchg
loop
jbe
pop
jae
push
add
int
jl
mov
lret
sbb
pop
faddl
or
inc
sar
stos
add
loopne
add
xchg
outsb
xorb
add
paddsb
mov
pop
aas
lods
mov
or
dec
mov
and
idivb
in
lcall
lea
outsb
aas
xor
ret
add
xchg
jge
inc
iret
lock
xchg
mov
popa
xor
push
popf
xchg
sub
daa
jge
mov
repnz
add
mov
das
add
sbb
in
mov
sbb
sti
das
icebp
out
fbld
mov
addr16
and
xlat
dec
dec
add
adc
xor
add
and
push
sub
pop
cwtl
xor
popf
xor
cmp
adc
insb
out
inc
sub
aad
or
pop
mov
xor
test
lahf
add
sbb
fwait
ja
add
stos
mov
add
adc
filds
push
dec
mov
mov
mov
test
jecxz
xchg
add
pop
jb
es
fs
xchg
mov
loope
push
enter
add
loopne
lods
je
add
pop
divl
shr
or
dec
pop
bound
filds
inc
xchg
mov
add
mov
dec
dec
push
cmpsb
arpl
subb
and
jb
add
out
out
dec
fwait
aaa
add
out
lock
add
sbb
inc
xor
jnp
lahf
test
add
xchg
pop
mov
cmp
dec
ret
mov
pushf
cld
or
push
and
add
lea
cmpsb
bts
xor
and
pop
add
int3
testl
outsb
jg
fisubl
dec
sbb
mov
inc
sub
and
or
sub
in
adc
pop
sbb
add
add
and
mov
add
insl
mov
loopne
sti
clc
jbe
lret
ljmp
js
es
add
dec
lret
mov
lock
lret
adc
mov
add
sub
enter
push
push
inc
repz
xor
xchg
int3
subl
incb
fadds
xchg
add
leave
pop
sti
mov
mov
scas
push
add
repz
out
lock
add
insl
jnp,pn
andl
pop
orb
adc
std
cmp
cmpsb
test
sub
add
mul
mov
outsb
add
push
data16
call
fnstenv
sahf
xor
dec
cltd
mov
loope
xor
clc
and
cmp
inc
mov
add
arpl
decb
xor
xchg
das
push
xor
std
shlb
mov
push
lds
xchg
idivl
out
shll
jge
int
insl
addr16
loopne
out
pushf
pop
and
lock
orb
xor
clc
pop
pop
ja
and
pusha
mov
sub
and
add
lods
adc
loopne
add
jne
pusha
pop
inc
lahf
inc
js
sub
scas
inc
mov
jge
les
push
or
cwtl
aam
xor
pop
mov
inc
add
xchg
jo
inc
add
in
mov
mov
aam
dec
es
loop
pcmpgtw
push
add
das
out
mov
add
dec
shlb
push
popa
shrl
or
push
popf
cmp
mov
aad
jmp
add
enter
and
pop
pop
rclb
pushf
inc
push
sbb
xchg
rorl
sub
addr16
mov
jl
mov
ja
jns
shll
and
and
sbb
jp
mov
cmp
pop
mov
dec
pavgb
dec
ret
push
aaa
inc
jbe
aad
adcl
add
xchg
shrl
mov
loopew
in
test
into
lds
xchg
mov
add
xchg
cmp
pop
daa
jbe
test
xchg
xor
sar
xor
or
inc
pushf
add
cltd
ja
jo
xchg
jmp
int
or
adc
pushf
add
and
orb
mov
es
lret
jmp
das
mov
sbb
popa
inc
mov
mov
imul
fcompl
or
or
movsl
add
xor
les
jbe
in
push
pop
shlb
pop
aam
mov
push
data16
pop
mov
add
sarl
aaa
dec
pop
mov
sysret
cmp
pop
jg
in
pop
mov
shrl
add
sub
insb
test
or
ficoms
es
add
jle
pop
pop
loope
dec
out
add
in
lret
cli
push
inc
sahf
and
in
add
jecxz
movsb
mov
repnz
imul
add
iret
jge
add
fs
insb
or
sbb
in
sbb
pushf
sbb
add
push
cld
fmulp
addb
enter
push
adc
outsb
mov
xor
pusha
in
aam
or
jg
sub
adc
arpl
inc
pop
les
jno
cli
add
xor
inc
jp
mov
mov
inc
push
dec
and
pop
push
and
bound
pop
xchg
adc
test
push
test
repz
pop
repnz
push
mov
test
cmp
xchg
sub
mov
add
dec
mov
fiadds
lahf
dec
bound
aaa
in
test
jp
push
inc
xor
adc
call
mov
mov
outsl
jge
lret
jmp
les
push
sbb
xor
jp
xchg
in
ret
and
mov
lret
add
sub
or
scas
jg
and
insl
xorl
sub
xor
cmp
add
dec
xor
jecxz
push
xchg
add
sahf
push
ret
mov
negl
movsb
rcll
filds
popf
repz
add
pushf
add
into
lcall
rorl
add
or
mov
mov
push
mov
clc
or
fisubrs
cmp
sbb
bound
shl
pop
pop
xchg
lret
inc
xchg
mov
mov
loope
jbe
inc
fwait
out
add
outsl
cmp
add
mov
shlb
insb
xorl
add
pop
aaa
shlb
jo
testb
mov
in
sahf
fwait
sbb
and
addb
add
pop
pop
mov
roll
cmp
dec
mov
shrb
cmc
add
jnp
insl
add
xor
adc
pop
inc
or
movsb
jns
jp
add
push
scas
cmp
lcall
jmp
out
nop
adc
testl
rolb
xchg
or
xchg
inc
add
mov
call
xor
sbbb
sbb
pop
add
mov
and
xor
sbb
add
dec
fdiv
dec
lods
add
inc
pop
in
sahf
mov
xchg
or
pusha
icebp
add
add
sbb
psubq
mov
add
cmpsl
outsb
cmp
cmp
xor
sub
ficompl
andb
adc
pop
mov
push
out
push
test
jp
or
rclb
lods
add
sub
gs
and
and
clc
pop
pop
lcall
nop
mov
and
dec
movsb
and
mov
test
test
les
pusha
lods
popa
push
sub
jbe
test
das
daa
pusha
push
mov
leave
xchg
pop
fcoml
mov
hlt
cmp
ret
dec
push
out
psubw
sbb
das
mov
iret
sub
jg,pt
add
rorl
mov
sbb
xor
dec
add
mov
push
mov
mov
and
and
sub
mov
mov
pop
or
mov
sub
add
pop
sub
adc
clc
faddl
loopne
imulb
cmpsl
add
ss
das
mov
mov
lock
mov
loope
fmull
inc
push
cmpb
sub
je
mov
hlt
add
ss
out
mov
add
adc
mov
test
add
jmp
fimull
add
dec
ja
insl
lods
sub
gs
mov
in
push
leave
ss
imul
les
push
adc
add
aam
loop
cld
jo
addl
or
inc
sar
testb
mov
mov
or
test
xor
pop
adc
push
icebp
sbb
cmp
in
ret
jle
add
sub
add
xchg
inc
test
push
jle
mov
jbe
sub
and
mov
dec
stos
mov
and
sub
sub
xchg
test
add
clc
dec
lods
adc
mov
fiaddl
insl
xchg
add
cwtl
push
lcall
jp
adc
mov
mov
repnz
pop
scas
mov
cld
aad
pop
sbb
mov
push
jb
jmp
mov
add
imul
xchg
adc
add
dec
or
add
xchg
bound
sbb
ss
mov
aad
das
pop
jg
pusha
add
cwtl
repz
js
add
fbld
pcmpeqb
test
jns
popa
lock
popf
sbb
iret
dec
dec
aaa
sahf
add
adcb
adc
lock
gs
add
xor
xor
lods
idivb
fimuls
icebp
je
and
mov
std
jno
add
stos
repz
cltd
decb
mov
jmp
rcrb
popf
test
dec
add
loop
in
out
fwait
mov
jge
arpl
out
nop
push
xor
aas
into
jno
in
add
push
cmp
imul
outsb
add
ss
cld
or
addl
jnp
rclb
mov
loopne
mov
push
jns
add
xchg
push
jecxz
insb
mov
mov
adcb
stos
add
mov
mov
pop
bound
push
and
mov
mov
pop
jl
jmp
clc
jo
aaa
add
lret
adc
push
aaa
add
add
cmc
push
daa
xor
cmpb
nop
add
cmc
cmp
xchg
out
pop
outsb
inc
cmp
jae
mov
sub
push
xor
scas
sbb
popa
jmp
push
mov
add
adc
xchg
xchg
mov
out
or
sbb
xchg
std
cs
mov
mov
fdivrp
jb
insb
add
pop
pop
incb
cmp
stc
or
pop
add
lea
pushl
mov
ss
inc
fs
mov
adc
loop
das
and
push
add
stos
lods
fisubs
jns
call
jno
pop
mov
push
fabs
pop
inc
and
add
inc
jl
or
adc
scas
das
sbbb
cld
add
xor
mov
jmp
jbe
xor
add
sbbl
push
enter
dec
jbe
cmp
nop
loopne
fcomps
aam
fstl
add
add
addl
aam
or
add
add
or
cmc
shlb
inc
add
cmp
add
call
mov
pop
popf
adcb
sbb
dec
pmulhuw
mov
jbe
dec
js
xchg
testl
sbb
and
add
jno
push
lods
sbb
aad
cmp
loope
outsl
ds
mov
jns
mov
ficoml
arpl
jle
add
dec
insb
pop
mov
adcb
fwait
iret
pop
inc
ret
jb
adc
cmovl
add
arpl
shll
loope
pusha
pop
enter
jbe
ret
fisubrs
adcb
add
cs
lods
adc
xor
jno
insb
mov
add
mov
push
int3
cli
test
sbb
xchg
mov
insb
xor
ds
pusha
pop
adc
mov
in
clc
cmp
jne
cmp
mov
lods
popl
xchg
cwtl
inc
add
aaa
imull
out
pop
mov
ds
fwait
loopne
xor
mov
or
in
les
lret
daa
sahf
jg
loop
jge
jbe
push
and
enter
outsb
rcr
cmp
int
subl
jne
or
mov
scas
dec
jae
nop
pop
add
add
cwtl
mov
add
test
mov
popa
nop
ret
cli
xor
in
fs
jbe
xor
pop
add
and
scas
sub
in
or
mov
jae
daa
xchg
bnd
mov
shll
jne
add
test
mov
inc
add
roll
loopne
test
add
mull
xor
shll
xor
mov
std
xchg
pusha
movsb
imul
dec
rcll
dec
jae
add
cmp
add
lds
scas
cmp
mov
into
add
lret
inc
jno
mov
lcall
xchg
sbb
sahf
out
add
push
jp
add
je
in
ss
push
add
insb
pop
cltd
add
lcall
add
ja
pop
shlb
int
dec
push
jne
xor
pop
mov
add
jns
mov
jo
sahf
ds
mov
call
push
add
jo
lds
jecxz
sbb
adc
add
inc
rcl
sub
mov
add
add
sbb
push
push
xor
mov
add
lcall
cmp
faddl
sarb
cwtl
clc
mov
add
fldenv
add
movsb
iret
stos
pop
imul
cwtl
push
jecxz
pop
pop
lock
xor
add
lret
shl
test
add
je
add
mov
or
xor
add
push
adc
sbbb
fmull
push
add
add
scas
xor
sbbb
jp
or
iret
or
testb
add
leave
cmpsl
inc
cld
dec
mov
xchg
adc
push
push
mov
cmpsb
scas
mov
add
addl
scas
ljmp
ja
add
lods
inc
jno
sbb
cld
adc
rsqrtps
sub
mov
sbb
inc
add
adc
fnstcw
incb
xchg
ja
subb
cmp
out
lods
add
daa
push
in
jne
dec
xchg
mov
mov
aaa
mov
cmpsb
add
mov
cwtl
les
cmp
dec
mov
add
or
imul
lcall
mov
mov
push
mov
mov
adc
xchg
push
icebp
add
in
sti
xchg
enter
cmp
adc
ret
jb
and
pop
or
jns
jmp
mov
cmp
aad
pop
adc
lods
push
in
sbb
mov
pop
fcmove
fstps
cmc
gs
sbb
sbb
adc
push
out
jl
add
in
dec
and
pop
xor
stc
add
dec
rcr
xor
test
outsb
inc
pusha
test
add
popf
push
pop
in
xchg
fcomps
cmp
add
shll
mov
pop
stc
outsb
adc
or
lock
sub
int3
lahf
mov
mov
sbb
xlat
loope
add
movsl
dec
dec
test
cmp
pop
gs
cwtl
lods
and
mov
daa
push
ret
scas
adc
popa
call
or
and
mov
sbb
enter
stc
gs
out
sbb
ficoml
xchg
cmp
movsb
fcom
xor
add
inc
mov
stc
add
inc
jp
rcrl
lods
imul
outsb
dec
add
cmp
add
inc
sbb
jle
pop
add
xchg
leave
inc
pop
jmp
sub
aas
and
add
inc
stc
psubsw
pop
add
bound
dec
push
shl
ljmp
addr16
pusha
or
xchg
dec
add
sbb
add
popf
cmp
hlt
mov
scas
loope
push
fstp
fwait
and
addr16
and
dec
mov
mov
inc
fwait
sub
jmp
repnz
movsl
aam
movb
fisttpl
cmp
add
insl
es
push
arpl
push
add
dec
fs
add
icebp
cmp
add
pop
fcomi
hlt
mov
mov
fcompl
fwait
cmp
lcall
mov
inc
stos
or
cli
mov
rolb
cld
cmp
lods
in
out
add
push
fisubrl
add
cmp
pushf
or
sub
add
jb
ret
lds
lret
add
adc
pusha
hlt
inc
push
or
cmp
rolb
sti
mov
inc
pop
xor
cltd
xchg
loope
loop
inc
outsb
in
add
mov
mov
int
mov
dec
inc
leave
icebp
ss
jmp
sahf
add
cmp
add
and
je
cmp
sbb
ja
pop
mov
mov
add
inc
xchg
sbb
cltd
add
pushf
pop
loope
stos
mov
cmp
dec
imul
add
sub
dec
inc
lock
xor
add
or
xor
movsb
jbe
jmp
add
adc
lods
outsb
scas
repz
add
xor
xchg
sbb
add
add
lret
dec
jo
xor
sbbl
stos
adc
popf
or
and
jo
aaa
or
cltd
mov
add
call
xchg
add
or
xor
fists
into
jno
mov
or
cmpsl
sbb
cmp
repnz
jge
jb
lock
aas
dec
cwtl
xlat
fidivrl
mov
adc
lock
xchg
cli
test
inc
inc
sub
add
arpl
les
mov
out
or
mov
aas
xchg
ret
hlt
mov
jno
pushf
leave
cli
add
pop
mov
clc
push
mov
stc
call
add
je
adc
pop
mov
fidivs
inc
dec
loope
stos
add
or
aas
or
add
std
lds
clc
hlt
and
pop
sti
mov
dec
ret
inc
jmp
call
add
mov
stos
add
mov
repz
testb
cmp
jo
sti
or
cwtl
mov
shll
jl
add
push
inc
jbe
dec
add
jo
adc
pop
mov
xchg
push
add
sahf
and
out
andl
mov
lahf
js
add
int3
pop
dec
jnp
shrl
add
sub
jl
inc
in
push
pop
or
ss
cmp
sti
out
test
add
sbb
ljmp
adc
push
mov
jl
add
shll
fsts
arpl
jmp
ret
or
sub
and
pop
out
adc
ds
push
dec
jl
cmp
dec
pushf
pop
push
fsts
push
mov
xchg
mov
cmpl
jl
mov
pop
mov
aam
shlb
lds
leave
cmp
aas
mov
test
xor
dec
pop
jge
xchg
insb
pop
idivb
shrl
pop
fisubl
push
xor
add
leave
and
mov
or
mov
mov
insl
add
cmp
sbb
loop
sub
aas
add
dec
add
or
daa
pop
mov
pminsw
xor
fmul
test
lods
mov
or
into
ror
or
lock
jecxz
test
data16
loop
or
and
test
and
jge
popf
add
jle
aas
mov
mov
sub
addr16
filds
mov
test
dec
push
movsb
jl
aad
aas
arpl
rcrb
push
adc
xchg
add
xchg
push
mov
add
popa
nop
push
aam
push
ret
shrb
gs
cmp
adc
sti
xchg
test
mov
out
clc
push
jecxz
fnsave
fldl
pop
cmpsb
cwtl
rorb
addr16
js
aad
fmul
jae
roll
xlat
adc
adc
add
jbe
gs
imul
sub
inc
in
dec
incb
adc
out
pop
testb
or
adc
add
lret
sub
call
mov
push
add
sbb
lret
lret
push
inc
sti
mov
bound
roll
adc
xor
lods
movb
arpl
pop
les
lock
mov
sub
dec
inc
sbb
push
lods
call
sub
mov
push
xchg
add
iret
cmp
xchg
pop
sub
rorb
push
mov
dec
stos
inc
push
lods
test
fmuls
pop
dec
pop
add
sarb
loop
or
hlt
sub
push
negb
lods
mov
loope
mov
lock
or
xchg
lea
xor
add
test
popf
sbb
xchg
add
lret
sbb
push
or
xor
int3
add
add
or
fdivrs
in
add
lds
add
cmp
data16
pop
sub
adc
jge
out
inc
add
and
pop
sahf
fistl
bts
je
sarb
aad
or
dec
insb
or
inc
add
mov
sbb
and
add
daa
sub
or
add
jbe
mov
push
add
push
fstpt
dec
pushf
push
add
mov
insb
scas
enter
gs
sub
cmp
push
jae
loopne
rorb
or
sub
loop
jne
ficoms
and
lret
add
cmp
movsl
cmp
fldcw
popf
nop
mov
mov
mov
outsl
movb
add
pusha
push
sbb
das
daa
mov
add
jbe
lds
dec
loopne
lea
je
jae
jo
int3
mov
shlb
adc
hlt
add
cmp
ret
add
and
int
pop
mov
sub
add
sbb
jmp
jns
add
push
jge
test
add
repnz
mov
call
sub
add
loopne
jb
gs
pop
or
fldl2e
mov
add
add
test
pop
mov
add
stos
push
or
cmpb
lods
xlat
add
inc
fsubrl
adc
mul
jle
jge
xchg
pop
addl
xchg
jmp
jns
adc
and
push
roll
mov
iret
filds
cmp
scas
lds
scas
cli
pop
jne
pop
xor
xor
and
add
aaa
fwait
popa
cmp
fsubl
shll
push
dec
shlb
adc
roll
outsl
loopne
mov
inc
insb
mov
pop
ffree
cmpsb
aas
aad
call
repz
xchg
cmp
inc
mov
jl
dec
xor
mov
aas
iret
data16
imul
add
ret
add
push
sub
add
push
and
add
or
stc
xchg
in
mov
leave
xor
call
add
icebp
dec
movsb
in
out
cli
scas
adc
mov
cmpsl
sbb
add
add
cmovne
clc
andb
and
mov
jns
stos
in
repz
dec
cmc
movsl
das
cld
mov
or
add
loopne
popa
jae
cmp
cmp
lea
xor
inc
cmp
sub
cld
add
sahf
test
and
andb
add
and
dec
jle
xor
out
outsb
xor
fidivrl
stos
or
cmpl
das
push
mov
fiaddl
fldcw
stc
jl
cmc
loopne
negl
out
add
inc
and
fwait
hlt
pop
jle
in
inc
jae
cwtl
pusha
nop
cmp
adc
mov
xor
popf
cmp
xchg
push
ljmp
cmp
lds
imulb
add
mov
nop
add
aam
dec
or
rorl
pushf
dec
and
out
jl
add
xchg
push
insb
push
inc
jb
mov
in
pop
inc
jmp
adc
xchg
ret
push
cmp
aaa
sbb
cmpsb
or
mov
add
lret
mov
push
arpl
xorb
shl
add
leave
inc
sti
xchg
add
call
sub
sbb
add
xchg
push
pop
cmp
add
dec
outsl
jecxz
sub
adc
sysret
in
push
mov
pop
push
mov
and
int3
sub
cld
in
jbe
stc
jnp
sub
add
sub
add
in
mov
add
insb
js
out
push
rcl
add
aaa
fsub
add
jno
ficoml
mov
add
jb
mov
fwait
in
mov
nop
inc
add
popa
jbe
add
sbb
push
sbb
outsb
cmp
jge
lcall
push
mov
or
and
jns
outsl
nop
adc
pop
ss
dec
enter
sbb
ret
or
add
cmp
mov
shlb
mov
in
push
add
inc
inc
sbb
push
cmp
add
and
mov
ja
and
dec
repnz
aam
rolb
rolb
popa
jg
add
dec
or
daa
or
inc
mov
adc
sahf
ror
sbb
pop
or
push
mov
fmul
add
add
mov
fs
xor
add
rcll
push
loopne
and
jae
add
das
dec
jg
mov
testb
addb
pop
imul
cmpb
xchg
cmp
inc
add
test
decl
add
mov
mov
xchg
dec
cs
aad
add
jmp
xor
aas
mov
mov
xor
dec
jmp
add
xor
add
std
pop
dec
mov
or
testb
add
xchg
add
lock
dec
pop
push
mov
xor
sahf
sbb
fldenv
mov
push
or
and
and
cmp
push
cwtl
xchg
ljmp
std
sbb
sbb
inc
pop
mov
jno
sahf
xor
fdiv
dec
add
jge
push
mov
std
inc
adc
push
pop
ret
aad
ror
cwtl
stos
pop
cmpsl
push
mov
inc
fbld
pop
add
fs
sub
add
add
mov
imul
add
push
roll
in
fcompl
add
xchg
mov
daa
add
xchg
xlat
mov
push
jle
dec
xchg
ffreep
push
cmp
pop
xchg
jae
add
jbe
push
add
sbb
sbb
cmpl
jmp
inc
adc
andb
or
cmpsb
add
sub
push
jp
sub
std
fmul
add
mov
pop
jne
and
imulb
xor
fwait
add
push
xor
aas
jge
fadd
in
cmp
add
mov
sub
add
mov
je
add
rcll
jno
fcoml
fwait
xlat
and
fistpl
cwtl
jo
xor
inc
dec
jg
mov
add
nop
add
or
sub
add
mov
iret
cmp
mov
mov
decl
jp
dec
jne
pop
daa
les
add
or
lods
mov
adc
mov
xchg
in
addl
fadds
fldl
add
rcll
outsb
imul
inc
fisttpl
pop
mov
adc
mov
add
popf
mov
je
fsubp
add
andb
mov
push
xchg
addl
popa
shrb
push
stos
in
aaa
daa
ljmp
sbb
in
add
dec
jge
pop
jo
add
stos
jl
scas
or
and
andb
in
lea
dec
add
clc
aaa
lods
pop
cwtl
and
push
sub
fidivl
iret
icebp
dec
sub
add
cwtl
mov
and
mov
and
mov
push
add
push
mov
aas
pop
mov
dec
add
ret
clc
out
shlb
add
mov
adc
adc
mov
sub
hlt
sbb
enter
movb
mov
mov
xchg
mov
pop
jnp
scas
fdivl
testb
ss
dec
iret
ret
jae
add
out
mov
jge
push
push
xor
std
inc
je
sti
clc
sub
add
or
testl
xchg
aam
add
pushf
lock
add
fistpll
lcall
and
mov
sbb
mov
leave
mov
add
jns
subps
dec
shlb
push
jo
or
xor
cmp
sub
das
sbb
shll
popf
cmc
into
insb
mov
mov
add
mov
scas
push
sbb
loope
add
pop
jmp
outsb
mov
movl
movsl
mov
xor
sarb
filds
add
xchg
sbb
or
adc
pop
jle
jne
jb
sbb
mov
dec
clc
insl
xorb
jnp
add
sar
mov
enter
or
aaa
sub
out
add
fdiv
les
orl
popa
xchg
pop
data16
pop
jb
test
in
mov
mov
pop
sub
pop
fwait
es
in
jg
adc
incl
and
out
insb
dec
test
mov
aad
dec
dec
add
shrl
push
mov
push
dec
sub
aad
fildl
jbe
jmp
shlb
scas
in
add
adc
mov
add
movsl
adc
clc
std
aas
insl
out
add
or
adc
cmp
add
mov
lcall
xchg
hlt
jg
ret
pop
mov
sub
sbb
arpl
int
or
add
fsubrl
and
addr16
mov
lods
shll
iret
lea
pop
pop
subb
jmp
jae
add
cmp
add
out
mov
add
daa
cmp
add
sbb
imul
jb
aaa
int3
pusha
add
and
mov
faddp
shl
in
push
daa
jge
add
subb
aas
add
mov
out
into
dec
lods
sbb
mov
xchg
fidivl
and
bound
adc
or
arpl
addb
mov
cli
incb
inc
cld
repz
ret
jnp
test
add
push
cmp
lcall
out
push
incb
mov
adc
fucomi
xor
push
clc
aam
fldl
xchg
xor
or
jmp
jge
add
sbb
add
pusha
icebp
add
adc
jnp
outsb
repnz
lahf
push
fiadds
lock
ds
cmp
sbb
add
js
add
push
pusha
and
inc
push
mov
out
sahf
call
rcl
add
inc
out
call
xchg
in
jle
sbb
fsubrs
mov
lods
mov
loopne
rolb
mov
mov
lock
adc
mov
and
push
scas
mov
sub
jne
inc
xchg
es
adc
add
push
sbb
add
pop
add
mov
sbb
pop
pop
in
cli
fwait
clc
pusha
addr16
scas
or
call
ds
add
int
adc
add
add
mov
mov
cmp
push
and
or
movsb
adc
adc
mov
stos
jno
add
jp
cmp
push
xor
insb
int3
sbb
add
cld
inc
test
rolb
mov
mov
test
jns
pop
lods
push
inc
pusha
and
add
xchg
jecxz
adc
cmp
clc
enter
adc
ret
add
sbb
cmp
ret
lods
sbb
mov
movsb
scas
sbb
js
add
dec
pushf
jp
addr16
pop
js
in
in
insl
jecxz
test
negl
dec
or
add
or
jmp
std
add
lock
fisttpll
xor
dec
xchg
ljmp
and
pusha
cld
xor
fcmovbe
jp
push
das
lods
adc
pop
sahf
pop
xchg
dec
cmp
nop
jns
xchg
lret
add
aas
or
or
lahf
xchg
ret
add
pop
mov
adc
add
lods
push
and
jg
add
inc
bound
testl
repnz
test
add
loope
sub
data16
test
push
stos
xchg
cmpb
outsb
lods
int
test
push
callw
add
dec
popf
sbb
mov
std
mov
mov
lcall
jle
xor
fwait
xchg
in
push
mov
mov
shrl
jecxz
mov
sub
lock
orb
jo
movsb
mov
fadds
outsb
aad
nop
in
adc
xor
adc
popf
and
pop
jae
lods
xor
xor
rorb
xorb
sahf
mov
jne
xor
add
sub
pop
aas
pusha
mov
test
iret
popf
sub
fistpll
addb
lret
xchg
push
add
xchg
enter
shll
inc
loope
int3
popf
or
mov
outsb
rorb
lods
jnp
add
xchg
pop
and
jbe
add
loopne
mov
gs
pop
mov
xlat
add
loop
nop
in
cmp
lock
aad
popf
inc
inc
dec
add
jnp
insb
imul
mov
dec
cli
cmp
repnz
jmp
test
push
aas
pop
icebp
add
ret
fildll
and
test
xchg
popf
aad
add
add
pop
add
insb
rol
jae
xor
repnz
mov
add
add
mov
mov
cs
sub
cmp
add
out
jo
jns
sbb
daa
outsl
add
repz
adc
aaa
ffreep
dec
nop
inc
je
add
and
mov
roll
je
daa
sub
inc
add
and
call
jle
inc
pop
icebp
arpl
mov
iret
clc
fildl
add
cmp
mov
lods
sahf
subb
dec
pop
pop
test
dec
add
cmpsb
xchg
xchg
aam
andl
adc
scas
add
loopne
push
add
mov
insb
sbb
sub
lods
cld
push
pop
inc
lds
and
nop
gs
lretw
xchg
cmp
xchg
or
xchg
ret
fidivrl
add
test
popf
lea
adc
add
orb
divb
add
in
mov
mov
cbtw
out
cmp
popl
ja
cltd
mov
push
lods
mov
movsl
fbld
call
sub
in
ret
mov
mov
pop
adcl
add
cmpb
push
add
es
adc
orl
add
xchg
dec
dec
into
insb
mov
or
jp
aam
pop
pop
mov
ds
scas
loopne
je
gs
mov
dec
mov
xchg
sub
popl
cs
mov
add
sub
cmp
test
loopne
inc
sbb
dec
mov
xchg
add
sarl
adc
sbb
mov
dec
ficoms
add
jl
in
sub
pop
xchg
pop
sub
loopne
mov
add
icebp
fisttpll
xor
fiaddl
adc
loope
push
jnp
jno
adc
xor
pushf
jecxz
outsl
loope
clc
std
sti
mov
sbb
leave
rorb
sub
into
in
and
ds
movsl
add
in
add
repnz
leave
push
add
sarb
loopne
add
pop
fcoms
std
mov
ret
or
clc
jge
mov
lret
hlt
test
xchg
inc
add
pop
mov
push
out
arpl
mov
nop
mov
sub
mov
jecxz
popf
pop
jl
lea
add
hlt
jge
scas
imul
or
sbb
sub
repz
orb
and
jo
mov
or
jns
andb
jne
setne
clc
cs
je
jge
sbb
push
inc
subb
pop
jmp
add
jecxz
repnz
addb
add
cwtl
nop
or
push
mov
add
cmp
push
outsl
add
sub
sbb
push
call
arpl
pusha
dec
ret
push
mov
push
popf
jp
mov
add
aaa
mov
mov
call
sbb
testl
jmp
add
sbb
push
add
xchg
mov
mov
mov
mov
and
sbb
in
add
mov
xchg
lock
add
cld
leave
popa
int3
imul
cwtl
mov
pop
add
add
dec
add
into
mov
jnp
add
add
mov
cmp
adc
negb
add
cmp
stos
sbb
in
pop
js
fadds
or
push
shll
lahf
add
mov
fildll
aam
mov
dec
add
xchg
adc
cmpsb
add
mov
push
mov
movl
in
jo
mov
add
stos
insb
into
xor
fcmovnb
lods
xchg
xchg
add
frstor
out
add
mov
mov
and
es
dec
mov
cmp
and
mov
xchg
sbb
sbb
cmpsb
aad
xchg
push
mov
loope
pop
sub
and
imul
frstor
xchg
add
bound
pop
subb
call
lock
cmpsb
aas
pop
aad
push
arpl
lds
add
add
js
adc
add
mov
sbb
pusha
sub
arpl
sbb
sbb
dec
lcall
insb
test
push
outsl
clc
call
add
mov
add
rorl
cmp
mov
push
xchg
loopne
adc
mov
lcall
insb
dec
shlb
dec
aaa
lock
testl
add
cmp
cltd
in
hlt
mov
add
repnz
insb
das
popa
pop
push
mov
or
out
inc
inc
xchg
out
push
xchg
or
stos
das
fsubl
loopne
add
push
stos
pop
pop
insl
test
rcll
arpl
add
mov
add
sbb
ljmp
mull
or
jl
ret
mov
dec
mov
push
push
shlb
add
sbb
xor
mov
in
sbb
dec
add
insl
les
xchg
outsl
add
andb
mov
adc
in
lea
data16
out
xchg
nop
test
pop
push
mov
lods
outsb
or
lcall
cmp
int3
popf
jge
fs
mov
add
stos
add
ljmp
add
cltd
sub
scas
or
out
and
or
lock
andb
push
fistps
stc
imul
adc
push
xchg
add
les
fldcw
fwait
adcl
mov
inc
mov
mov
pshufw
push
es
push
ss
int3
sbb
mov
test
adc
shr
movl
pusha
push
jecxz
add
jmp
mov
inc
loopne
add
dec
adc
add
cmc
loop
cwtl
xor
or
aas
lods
xor
test
xor
ret
add
pusha
in
out
out
shll
push
out
cmp
pop
dec
or
xor
mov
clc
pop
popa
xchg
rolb
xor
jp
fwait
pop
outsb
add
xchg
popf
push
pusha
pop
push
add
cmp
cs
push
test
faddl
xchg
mov
mov
iret
cmp
das
cli
sbb
inc
in
ret
adc
clc
outsb
jmp
mov
add
cmc
inc
mov
subb
stos
aas
mov
xor
cmp
in
in
add
add
add
pop
into
sub
mov
ret
sub
push
jmp
scas
or
jae
mov
push
fldt
xor
test
jo
pop
mov
add
ljmp
fsubrs
and
scas
mov
sbb
subb
jns
int3
pop
push
jge
jo
add
and
add
gs
dec
inc
shlb
fwait
sbb
jae
jp
add
clc
es
loop
add
sub
into
shlb
mov
mov
ret
fstpl
hlt
icebp
push
mov
pop
pop
cmp
jl
inc
js
mov
add
push
aaa
pop
add
imul
ja
add
fstps
negl
pop
lods
call
lret
and
pop
xor
into
add
sti
push
xchg
cmp
add
push
sub
in
mov
lock
cmp
aad
mov
xor
outsl
sub
add
lds
out
jo
hlt
mov
ja
add
xchg
pop
mov
loopne
cmc
cwtl
push
mov
add
insl
inc
cltd
bound
xchg
scas
popa
add
mov
cmp
out
add
pusha
andb
push
or
dec
ret
mov
nop
lret
mov
test
mov
lahf
inc
enter
pusha
adc
push
mov
push
mov
test
jo
rol
int
das
push
lds
sub
fsubrs
adc
std
jne
and
xchg
or
pop
add
fcompl
push
in
mov
dec
fnstcw
inc
subb
leave
jg
dec
add
ficomps
and
pusha
in
xor
clc
int3
add
loopne
nop
cmp
cmp
ljmp
or
pop
ja
xor
cmp
negb
add
or
inc
sbb
adc
add
pushl
aam
inc
add
or
in
out
out
hlt
movsb
add
push
arpl
std
push
cli
stc
cmp
jp
inc
pusha
dec
mov
push
add
popa
adc
adc
jno
pusha
loop
int3
add
ret
xchg
js
int
or
add
inc
fcoms
les
jo
in
pusha
insb
arpl
dec
mov
sbb
out
cmpsl
ds
push
and
fwait
push
fadds
xor
sbb
cmp
add
jo
mov
dec
add
mov
push
add
shll
mov
lea
pop
pop
inc
rolb
std
aad
dec
xor
movsb
mov
cwtl
faddl
mov
adc
rcll
add
cltd
xchg
or
je
xor
addl
rcrb
pop
in
pusha
cmp
mov
and
adc
ss
cmp
repz
inc
sub
jge
mov
ljmp
leave
hlt
or
das
add
and
pop
pop
add
mov
add
subl
inc
js
add
pop
mov
mov
clc
add
jle
xchg
inc
iret
push
inc
pop
xlat
loopne
clc
add
rcr
jecxz
cmpl
lods
pusha
pop
jl
add
bound
add
in
dec
inc
jbe
xchg
push
add
push
xor
cmpsl
push
and
out
xchg
mov
enter
insb
dec
flds
add
cltd
add
push
inc
push
rcll
mov
xorb
pop
mov
cld
or
fisubl
fildl
xchg
push
aas
push
lock
push
js
push
cmp
cmpsb
adc
push
insb
add
cmpsl
mov
dec
adc
push
dec
aas
adcl
stos
mov
jno
sub
add
cmp
popfw
jne
sbb
pop
pusha
jns
int
cmp
xor
repnz
dec
xorl
dec
out
add
adc
add
loop
loope
das
add
and
rorl
in
mov
jle
add
or
xor
dec
add
sub
addl
pushf
loop
or
cmpb
testb
pop
loopne
iret
mov
pop
xchg
enter
push
jp
pop
in
call
jno
xor
pusha
leave
pushf
stc
sub
ss
add
scas
xchg
pop
test
xchg
mov
cmpsb
jecxz
dec
insb
inc
or
jne
rcr
bound
push
in
loope
xchg
repnz
aam
js
mov
cmp
jb
xorl
in
or
invd
xchg
sub
jae
inc
stos
bound
xchg
fsubr
mov
incl
pop
mov
scas
xor
push
or
in
enter
dec
inc
bound
fbstp
add
push
imul
movsl
mov
or
test
add
adc
add
test
or
arpl
cmc
add
xor
jmp
loop
insl
mov
sbb
pop
std
icebp
mov
test
pusha
clc
in
jbe
pop
pushf
and
out
dec
pop
dec
add
add
dec
mov
nop
test
push
and
icebp
pushf
outsl
insl
add
add
sbb
scas
sub
sub
pushaw
addr16
repz
clc
xor
repnz
push
xchg
push
cld
mov
enter
push
icebp
xlat
mov
fs
xchg
adc
jmp
dec
mov
cmp
sahf
pop
and
jg
sti
mov
fisubl
adc
roll
das
int
mov
icebp
mull
add
iret
pop
xchg
stc
inc
add
and
sbb
in
xchg
dec
scas
mov
pushf
sahf
pop
cmc
fdivr
fidivrs
mov
rorw
xor
scas
xor
jg
add
push
sarb
dec
ljmp
xchg
lcallw
andb
rorb
add
imul
sbb
sub
lock
mov
cmp
or
or
add
pop
sub
mov
jb
pop
je
xchg
pop
dec
rolb
bnd
add
fwait
pop
cli
fidivs
scas
sub
lahf
jmp
inc
pushf
mov
incl
enter
add
dec
in
xchg
outsl
movb
lds
inc
mov
add
mov
lock
add
hlt
clc
xor
insl
aad
and
cwtl
sbb
lret
xor
xchg
sbb
test
adc
xchg
or
lock
cltd
sub
push
adc
push
shll
inc
and
enter
add
sbb
jmp
jno
or
fsubp
mov
xor
lea
and
or
push
add
psubb
add
nop
and
cltd
adc
shrb
inc
jns
sub
xor
test
fistpll
pop
adc
loopne
add
jne
or
inc
and
popa
xchg
adc
cmpb
cld
sbb
lock
cmpsb
clc
push
inc
xor
enter
xor
inc
outsb
cmp
xchg
xor
inc
push
push
add
sbb
cmp
cmp
loope
arpl
adc
stos
xor
and
popa
cwtl
adc
cwtl
cwtl
scas
adc
ja
push
mov
sub
push
adc
adc
dec
call
test
cltd
adc
inc
cltd
adcb
push
mov
adc
mov
sar
in
adc
xor
test
pop
adc
push
sahf
mov
data16
push
orl
adc
loopne
push
into
out
lock
cwtl
pusha
enter
sbb
in
adc
adc
push
adc
and
sub
js
inc
jo
or
enter
and
mov
lock
dec
dec
enter
popa
xor
sarl
sbb
sub
js
add
lret
jle
loope
mov
popf
pusha
sahf
inc
popa
icebp
push
dec
sbb
and
enter
rcrb
adc
movsb
cmp
inc
in
sbb
andb
stc
jae
lret
push
adcb
aam
sbb
rcrb
adc
cld
jno
pusha
popa
inc
jo
push
lret
jbe
and
mov
inc
push
mov
popf
dec
nop
xchg
cld
popa
cmpsl
xor
jno
or
sbb
sub
sbb
shll
jbe
add
repnz
in
jno
pusha
gs
aas
shrb
sbb
pop
push
dec
xorl
mov
adc
adc
inc
and
mov
adc
stos
push
mov
cmpsl
loop
and
in
sbb
sbb
cli
fistpll
pusha
xor
xor
push
cmpsb
cmp
sbb
ja
adc
cwtl
mov
adc
cmc
out
jle
or
inc
subb
push
adc
and
in
jb
lods
outsb
push
andb
mov
ficoms
nop
push
adc
outsb
dec
loope
addr16
or
ljmp
adc
sahf
out
mov
inc
add
in
cmp
mov
lcall
xchg
scas
or
jo
cwtl
push
or
les
lahf
adc
loopne
adc
push
push
push
mov
shl
adcl
fimull
dec
adc
dec
nop
jl
and
jle
xchg
sbb
xchg
pusha
cld
out
jne
pop
xor
and
mov
out
cmp
xchg
xor
loope
les
mov
shrl
mov
xchg
adc
xchg
jbe
xchg
cmp
mov
adc
clc
jp
xor
mov
cltd
add
mov
std
and
sar
inc
push
data16
out
inc
decl
cmp
gs
push
cmp
inc
push
pop
nop
sbb
sub
add
push
add
pextrw
or
or
add
pushf
and
test
xor
je
cli
push
test
repnz
mov
clc
add
mov
js
sub
mov
inc
orb
and
not
mov
mov
je
jl
jl
mov
sub
stc
lahf
cmp
movsb
pop
jnp
mov
cmp
push
xor
xchg
and
inc
mov
inc
mov
adc
or
jl
inc
mov
int
aad
sahf
mov
inc
lock
and
jp
inc
adc
xchg
lods
ja
lret
adc
cmp
lods
adc
xor
js
mov
gs
dec
movsb
pop
test
aam
jl
aam
pop
clc
sarb
cmpsb
lods
jl
ret
and
sub
ds
pushf
sub
les
cmp
push
xchg
push
out
iret
or
or
in
leave
and
xchg
ret
cmpb
cmp
mov
es
adc
movsl
jo
dec
lock
add
jno
cmp
lock
dec
nop
clc
pusha
dec
push
or
sbb
xchg
movsl
scas
add
lret
push
clc
int
sub
jmp
jns
sub
add
dec
rclb
jno
mov
cmc
jecxz
arpl
enter
add
jae
lahf
stos
push
cmp
inc
sbbb
pop
movsb
adc
xchg
inc
add
sbb
test
in
ret
xlat
mov
scas
push
int3
iret
data16
mov
cli
test
jle
clc
push
pop
repz
cmpsb
rcll
xchg
mov
jg
add
sub
sub
pop
icebp
add
sbb
sub
mov
mov
add
fwait
out
insb
dec
cmp
add
xchg
cmp
add
je
mov
pop
push
outsl
sahf
and
int
aam
inc
push
jne
lods
icebp
sbb
lods
push
xchg
jge
aaa
shlb
or
test
add
push
mov
addr16
push
add
xchg
add
adc
fs
jmp
mov
mov
dec
inc
add
imul
add
rolb
cmp
addr16
mov
xor
out
pushf
jne
jle
lea
loope
ja
je
cmp
add
mov
add
add
in
add
adc
test
add
pop
lea
add
inc
rorb
xchg
popa
add
dec
fildl
add
dec
repnz
mov
or
xor
add
cmp
pop
subl
push
mov
gs
mov
icebp
jns
jge
add
mov
mov
aad
add
xchg
pop
nop
and
loop
stos
loopne
jb
arpl
pusha
dec
lret
cmp
inc
add
jbe
pop
cmp
adcb
pushf
cmp
mov
add
rolb
push
xlat
movsl
sbb
cld
das
andb
jno
add
daa
sub
and
test
mov
sarl
addl
ret
mov
jo
and
test
jnp
movsl
mov
inc
push
pop
lret
pmovmskb
jmp
or
testl
inc
pop
pushf
fdiv
loopne
icebp
mov
nop
sbb
push
je
add
or
in
pop
xchg
mov
rorb
cmp
sahf
sub
xchg
add
xchg
pop
scas
jno
cmp
or
add
dec
ret
iret
pusha
push
xor
cmpsb
pop
fistpll
push
jbe
xchg
sub
jmp
push
cmp
cmp
lcall
out
frstor
mov
and
in
clc
out
mov
or
add
cwtl
inc
dec
or
jbe
orl
jge
fimull
adc
adc
nop
mov
outsl
add
leave
jo
add
push
outsb
and
inc
mov
rcll
stos
out
adc
imul
xchg
and
sub
shrb
ss
mov
lds
mov
mov
call
mov
hlt
popf
jne
pop
out
push
add
mov
jmp
movb
orl
lods
ret
fdiv
mov
and
pop
lcall
sahf
data16
sarl
cmp
mov
jecxz
test
sbb
movsl
pop
rcrb
cmpsl
roll
sbb
xchg
out
test
inc
jmp
rclb
addb
lock
nop
loop
or
mov
in
sub
add
xchg
iret
arpl
sbb
xchg
cmp
int
imul
hlt
push
fsub
test
and
les
fcmovnb
movsl
imul
xchg
filds
xor
mov
pushl
js
add
rcrl
mov
xchg
add
mov
jecxz
pshufw
cmp
shrb
push
aaa
add
popf
bswap
insb
fwait
or
jmp
mov
mov
out
push
sub
jo
push
add
xchg
cmp
out
call
add
movsb
mov
pop
adc
cmp
jg
cmp
xchg
je
in
inc
pop
cwtl
add
lock
add
jmp
and
ds
or
insb
sbb
icebp
rolb
pushf
pop
mov
add
mov
mov
push
add
loopne
mov
jae
pop
mov
add
push
or
imulb
jno
mov
jns
pop
int
cmc
dec
insl
sbb
pop
pop
ljmp
roll
add
loope
mov
cwtl
cmpsl
jnp
add
push
mov
push
in
add
cmp
mov
jg
pop
push
inc
sub
pop
push
xchg
or
add
mov
sub
add
xor
std
push
and
mov
add
dec
fisubrs
or
xchg
test
cmpb
cmc
aas
add
mov
and
lcallw
lea
jbe
add
push
idiv
xor
cmpsb
or
add
adc
lret
pusha
sub
bound
xchg
add
fsubs
arpl
cltd
lds
cmp
scas
clc
or
push
bswap
leave
pushf
xchg
mov
jno
sbb
push
xchg
enter
sub
sub
sbb
pop
add
lods
pop
mov
or
xor
inc
test
and
sub
push
incb
mov
add
jae
mov
in
add
jmp
icebp
mov
enter
inc
je
inc
mov
xchg
hlt
loopne
jg
add
jo
scas
jl
das
loopne
jnp
cli
or
push
cs
mov
xor
mov
add
cmp
out
enter
subl
roll
ds
pop
adc
xchg
repnz
rorb
outsl
pop
imul
ljmp
dec
lcall
cltd
xor
adc
mov
mov
mul
ret
add
out
fiaddl
lock
lret
int
ljmp
mov
add
fimuls
sbb
xchg
add
cmp
cmpsl
add
inc
movsb
orb
outsb
dec
movb
aad
fisubs
hlt
mov
add
out
jns
push
sub
loope
int
shl
out
add
js
data16
rcrb
outsb
add
mov
pop
xor
rclb
jge
add
xchg
je
dec
dec
idivb
inc
int3
cmp
add
and
and
xchg
cs
dec
add
or
push
ja
inc
and
les
out
dec
ret
dec
sub
pushf
add
mov
int3
ljmp
jnp
pusha
scas
jle
jo
sbb
pop
iret
dec
shll
mov
faddl
sbbl
push
and
push
nop
push
xor
mov
sub
jae
jp
ja
mov
hlt
enter
jns
and
dec
xor
sbb
in
or
sbb
cmp
add
in
les
add
jg
inc
jnp
mov
sbb
lods
mov
ja
out
xchg
cwtl
nop
adc
mov
shlb
shlb
div
jle
xor
inc
and
mov
add
adc
add
testb
movsl
jb
cwtl
dec
loope
inc
sbb
stc
add
jnp
add
xchg
clc
mov
mulb
in
mov
sub
inc
push
xor
adc
subl
push
sbb
lret
add
ljmp
nop
add
repnz
cmp
mov
out
sti
scas
add
rol
outsl
roll
add
adc
jo
and
int
add
and
mov
test
fadd
adc
imull
sub
add
mov
dec
stc
add
inc
cld
sahf
aaa
jge
icebp
rolb
add
sub
js
test
repz
and
xor
add
jg
push
and
push
mov
in
std
insl
xchg
add
lods
packuswb
das
pop
mov
in
lea
add
sbb
push
in
sub
or
mov
js
or
nop
mov
jl
lods
std
pop
outsb
pushf
pop
mov
dec
mov
jmp
pusha
repnz
add
arpl
add
addr16
jns
jae
or
pop
jno
pop
xchg
pop
push
std
lock
cmp
adc
in
pop
push
or
loopne
xchg
rcrl
jecxz
mov
dec
sahf
loope
cli
mov
add
or
aad
mov
subb
mov
aad
push
fcmovnu
clc
std
mov
insl
jmp
lods
pop
inc
add
loop
adc
jno
paddusb
js
gs
mov
int
and
fcmovbe
pop
mov
lods
push
or
aad
or
adc
addr16
std
add
hlt
xchg
scas
lahf
cmpsl
add
lods
dec
add
lds
sbb
jae
mov
mov
lods
imull
subl
pop
and
push
bound
pusha
or
inc
mov
add
push
loope
into
push
add
sarb
fbstp
std
xchg
movsb
pop
and
insb
add
jl
imul
jno
gs
fcoml
pusha
mov
lret
xchg
add
loop
lock
rolb
add
mov
cltd
inc
pop
loop
add
jmp
into
xchg
add
sbb
inc
jns
pop
inc
or
dec
int3
xlat
xchg
insb
sbb
jmp
add
jl,pn
test
push
pop
aas
addr16
std
je
add
xlat
cmpsb
mov
shlb
inc
inc
push
push
aaa
repz
mov
cmp
or
sbb
cmpsb
inc
jmp
xchg
add
push
or
dec
cmc
push
lret
stc
mov
add
in
repz
sbb
mov
add
sbb
push
add
or
test
divps
fcomi
push
jbe
stc
and
inc
adc
adcb
shrb
out
sub
mov
dec
or
pushl
repz
add
scas
sbb
stos
or
out
scas
aaa
fdivrl
add
add
add
sub
hlt
push
dec
pop
xlat
push
sbb
sub
test
pop
stos
daa
add
jne
div
jbe
sub
jl
aas
xchg
fwait
mov
push
jg
dec
rolb
daa
ret
xor
adc
inc
pop
lcall
push
mov
pop
pusha
or
add
aad
scas
jg
int3
movsb
and
dec
cmp
dec
jl
sbb
gs
jl
lahf
mov
add
cwtl
xor
sub
inc
daa
add
push
pop
push
ja
pusha
pop
pop
cmc
lock
pusha
sbb
std
add
add
adc
movsb
into
xchg
sbb
dec
add
call
mov
enter
pushf
add
mov
jg
jmp
add
rclb
das
jp
mov
push
jg
sbb
mov
in
in
scas
lock
test
and
push
das
add
mov
fistl
xor
jno
das
mov
mov
cmp
xorb
clc
iret
xor
mov
sarb
jecxz
push
cmovl
mov
jge
insb
scas
bound
rclb
enter
into
jg
leave
imul
mov
sub
adc
lods
dec
xchg
repnz
test
dec
enter
mov
popf
ja
roll
in
mov
sbb
sub
jmp
fistpll
or
out
into
jl
inc
or
je
push
sbb
sub
jge
push
movsb
leave
add
adc
out
jecxz
movsl
push
test
add
clc
pop
jne
ss
lea
mov
and
dec
cmp
mov
sbb
fadds
inc
jbe
mov
ja
and
je
adcb
rorb
add
pop
lret
loopne
mov
jns
aam
js
add
lcall
mov
adc
pusha
aas
loopne
scas
in
fdivrl
decl
les
dec
out
rcr
dec
pusha
sti
js
push
push
testl
pusha
nop
xchg
sbb
loop
je
test
add
mov
pop
or
xor
scas
sbb
push
adc
add
fdivrs
ds
adc
inc
shll
outsl
fdivl
xchg
mov
outsw
or
sub
add
add
cltd
xchg
sub
rorb
adc
arpl
ret
fsubs
in
popf
andb
addr16
jge
and
loopne
jbe
and
ja
add
js
adc
cli
pop
push
or
shrb
aad
icebp
loopne
in
xchg
adc
or
cmp
and
mov
xor
xchg
mov
ret
mov
sbb
mov
inc
test
jp
sti
or
sub
cmp
mov
cltd
jo
jne
in
jp
int
add
add
sbb
xor
pop
adc
movsb
mov
or
mov
scas
or
loop
push
dec
aam
dec
xrelease
or
test
adc
rcll
bound
je
jo
jbe
addb
js
lock
jns
jno
add
mov
inc
mov
sub
mov
sub
pusha
or
xchg
adc
bswap
test
sub
or
sbb
jno
and
mov
out
js
add
mov
hlt
popl
push
jae
sahf
add
xor
sub
adc
fmul
push
cmp
jae
add
or
leave
mov
mov
inc
dec
loope
ja
or
in
xchg
push
mov
mov
inc
mov
jl
std
test
sbb
cmpb
xorb
dec
jmp
bound
mov
mov
xor
push
dec
cmp
sbbb
add
loopne
test
divb
mov
scas
or
aas
hlt
daa
add
jg
or
sub
xor
es
xchg
pop
add
scas
mov
stos
add
mov
ja
nop
inc
je
and
int3
andb
add
add
clc
cmpsl
shl
jb
add
xor
mov
sahf
cmp
jmp
scas
je
fisubrl
imul
push
xchg
pusha
mov
add
addb
and
out
lret
add
push
xchg
int
loope
add
cmp
pop
cmp
hlt
dec
inc
js
add
cmc
call
add
stos
fistpl
jno
aad
add
inc
mov
dec
sub
pusha
adc
insb
inc
lahf
or
mov
popa
xchg
rol
je
daa
xchg
push
add
sti
push
mov
out
std
add
movsl
mov
cmc
xchg
pop
test
adc
push
in
sbbl
dec
cmp
out
pop
xchg
test
cmp
js
xor
jl
orb
mov
add
mov
mov
pop
add
push
or
lret
insl
push
loopne
hlt
xchg
sbb
ds
test
cmpb
jmp
inc
jmp
enter
add
and
sub
les
cmpsb
hlt
fmuls
stc
jae
bsr
lss
lods
stos
ret
push
or
lds
addr16
sub
scas
repz
and
jae
or
mov
jmp
test
aaa
push
rorl
loope
xor
aad
add
xchg
adc
mov
fldt
xor
cltd
adc
cmp
and
and
sub
xor
sub
pop
movl
add
jmp
add
dec
in
cwtl
pushf
and
js
arpl
push
dec
add
fisubs
jns
sub
dec
mov
nop
jmp
stos
add
rcrb
mov
aas
arpl
add
mov
and
rcll
pop
sti
mov
pop
sahf
cmp
shr
sub
es
mov
movl
push
push
lods
add
movsb
jl
pop
mov
scas
add
xor
out
das
inc
sbb
test
inc
loopne
fldcw
push
xor
loop
icebp
pushf
sbb
leave
sub
xchg
fcomip
mov
mov
and
adc
and
sbb
aad
adc
and
adc
fisubrs
and
adc
pushf
mov
push
mov
or
mov
add
cmp
test
roll
cmp
test
mov
fwait
stc
repz
add
fiaddl
add
dec
adc
sbb
or
mov
cmp
fistps
mov
or
dec
pop
jae
jnp
jle
pusha
sbb
cmp
and
icebp
cmp
int3
add
pusha
mov
es
mov
xchg
jno
wbinvd
cmpsb
dec
or
mov
aas
mov
dec
fld
in
adc
mov
stos
pop
scas
push
xor
or
inc
mov
sub
inc
add
dec
mov
sbb
and
test
ret
loopne
enter
ds
mov
xor
jl
sub
jmp
sarb
test
cmpsb
dec
mov
push
sbb
inc
sub
pop
add
and
mov
je
xchg
add
jb
jae
sbb
inc
cmc
pushf
mov
dec
js
rcl
pop
out
add
stos
and
xchg
xchg
flds
cmpsl
push
sahf
mov
add
clc
loopne
ds
ja
xchg
lret
cmp
es
adc
add
add
stos
fidivrl
int3
adc
inc
or
mov
dec
dec
bndstx
xchg
stc
add
push
hlt
add
pop
nop
cmpsl
lods
push
mov
xchg
add
andb
loopne
orb
add
filds
fimuls
repz
xorb
jp
cmp
mov
pop
add
jnp
aam
sbbl
push
mov
sbb
in
ds
je
lret
lds
push
ret
inc
jbe
cli
mov
daa
mov
push
mov
loopne
xlat
stos
movsl
mov
mov
mov
adc
and
and
or
in
xor
adcl
push
call
push
dec
jae
jb
push
jns
xor
loop
adc
fbld
inc
test
add
mov
xor
int3
pushf
xor
or
dec
cltd
cmpb
xor
aas
mov
or
jg
pop
cmp
mov
cmovns
es
mov
or
sahf
add
ljmp
or
and
cltd
inc
iret
adc
rorl
mov
leave
push
mov
scas
sahf
mov
mov
cmp
in
add
lahf
int3
pop
cmp
cs
inc
add
or
mov
sub
pop
fwait
cwtl
rclb
enter
pushf
and
sub
sbb
pop
decb
ret
mov
bound
js
imul
pop
mov
or
int
pop
add
popa
out
cltd
in
pop
addl
mov
daa
lea
clc
int
mov
imul
xchg
pop
mov
push
rcll
mov
jl
pop
popa
jp
gs
outsl
adc
inc
rcrl
add
mov
lock
push
jl
xchg
add
lds
iret
pop
ret
mov
jbe
mov
mov
mov
iret
jno
jnp
callw
inc
in
cmc
js
pop
outsl
sbbb
cmp
in
sub
nop
add
pop
ret
pop
dec
lea
push
adc
sub
adc
cld
and
es
int
jmp
lock
xchg
add
jecxz
out
mov
add
xchg
mov
inc
mov
pop
jg
loope
mov
cwtl
ja
adc
jecxz
fcoml
test
icebp
add
pushf
shlb
shl
xor
ja
push
iret
dec
lret
sub
dec
jl
adc
xor
outsl
mov
sbb
mov
mov
pop
iret
mov
push
ljmp
in
pop
jae
mov
mov
and
add
mov
adc
xchg
dec
inc
nop
fsubrl
in
inc
bound
pop
and
cmp
and
imul
push
aas
orl
movsb
lock
add
sbb
dec
or
sbb
sbb
pop
pop
mov
mov
push
xlat
mov
push
test
rcr
xchg
lret
cmp
or
add
cmc
test
add
leave
xchg
cltd
push
xor
sbb
pop
add
cld
lcall
push
imul
repz
and
cmc
insb
shlb
out
dec
or
sbb
les
scas
loop
mov
cmpsl
jg
mov
push
dec
add
pop
cwtl
push
std
and
and
lods
add
jne
int3
mov
dec
rolb
add
scas
faddl
mov
and
add
sbbl
add
inc
mov
xor
push
add
ds
jl
pop
sub
mov
cmc
xor
inc
out
mov
sub
addb
daa
dec
pusha
les
push
ret
jmp
push
test
push
fs
add
mov
sbb
xchg
add
mov
stos
add
xchg
mov
add
out
lret
sbb
or
and
loopne
inc
insb
cmpsb
mov
push
mov
mov
mov
call
imul
movl
jns
adc
add
pop
cld
sub
and
fs
cmp
cwtl
std
add
add
cmp
cld
inc
xchg
pop
xchg
leave
popa
cmp
xor
lock
fwait
in
packssdw
jmp
dec
cwtl
add
pop
adc
mov
ja
icebp
pop
sub
cmp
xchg
push
mov
mov
hlt
nop
and
adc
fwait
inc
int3
xchg
hlt
stos
icebp
add
add
add
jg
out
cmp
pop
je
push
repz
in
push
pop
gs
mov
jne
lods
call
stos
pop
mov
pop
dec
faddl
popa
push
ret
inc
dec
sbbl
cwtl
add
add
add
js
dec
pop
je
ds
cmpb
xor
adc
dec
and
aam
movsl
shrb
dec
roll
lods
ret
lea
pop
push
in
add
je
fstps
loope
dec
mov
aas
pop
mov
shrl
xchg
add
mov
in
repnz
sbb
pop
adc
std
iret
cmp
push
insb
add
stos
rcr
insl
add
push
jecxz
fldcw
outsb
push
pop
filds
loopne
mov
sarb
cmpl
popw
imul
cmp
or
pusha
xor
mov
fistpl
cmpb
out
cmp
xchg
adc
jmp
repnz
testb
add
add
adc
in
mov
adc
popa
xchg
cmpl
hlt
inc
pop
sub
adc
push
sub
sbbl
pop
loopne
and
adc
fnop
add
dec
xchg
jg
sub
push
mov
push
jb
lods
cld
mov
sub
cmpl
in
call
add
xor
add
int3
push
stos
mov
je
cmpsb
adc
push
cld
push
xchg
cmpl
adc
xchg
call
mov
loop
arpl
hlt
or
ror
ficomps
int
jp
cmp
jmp
add
icebp
repz
xchg
ss
lahf
out
nop
imul
subb
movsl
add
jle
fs
mov
cmpl
push
sub
mov
pop
jb
add
xchg
shlb
pop
test
bound
mov
scas
lods
and
movsb
add
rolb
ds
lcall
movb
scas
adc
je
add
push
inc
or
pusha
push
leave
loope
or
mov
and
push
jmp
pop
xor
jg
and
loopne
in
bound
cld
pop
xchg
adc
pop
mov
adc
jns
rclb
out
mov
aam
sub
sbb
push
xlat
jmp
add
je
mov
xchg
test
add
fldcw
add
imul
call
adc
sbb
adc
inc
in
jbe
imul
lods
add
into
xor
imul
mov
cmpb
clc
xor
jge
push
loopne
push
adc
inc
sub
xlat
add
add
xchg
cli
aaa
inc
insb
rolb
js
in
pop
mov
or
and
add
lahf
add
scas
adc
inc
adc
dec
add
jle
cltd
js
xor
cmp
pusha
imul
enter
stc
jge
cltd
and
loopne
lock
loope
and
and
icebp
pop
pop
in
aas
xor
unpcklps
cmp
pop
mov
mov
imul
or
sub
out
leave
cmc
shrl
fwait
repnz
inc
in
push
std
shlb
sub
push
cmp
adc
add
lods
outsl
add
sub
adc
inc
inc
andb
xchg
test
pop
sub
movlps
scas
mov
pop
push
lcall
add
rorb
aad
dec
lea
gs
add
hlt
aam
add
aam
test
loop
orb
cwtl
dec
cld
cmp
in
jae
jmp
test
adc
sub
loop
lds
and
pop
js
cwtl
addb
cltd
hlt
jno
sbb
add
jbe
dec
lcall
andl
int3
dec
not
lret
ja
rolb
ret
js
fdiv
test
fildll
rolb
sub
cmc
add
pop
push
outsl
aam
or
jle
add
aad
adc
cmc
push
les
sbb
fs
add
repz
pop
popf
pusha
mov
jl
cmp
mov
xadd
andl
mov
call
out
test
pop
push
add
add
mov
ds
xor
mov
or
out
cltd
mov
push
adc
test
andl
mov
and
cmp
add
ja
pop
leave
test
shl
mov
fs
cmc
test
mov
cwtl
gs
insl
pop
pop
in
xchg
lea
clc
mov
in
and
xchg
cmpsl
faddl
pop
loope
jo
pop
fadds
inc
jbe
fwait
scas
jnp
cwtl
outsl
andl
in
sbb
push
xchg
in
add
xchg
jno
lahf
mov
testl
ja
icebp
stc
pop
nop
mov
out
int3
pop
pop
addb
push
mov
dec
mov
aam
and
add
aad
xchg
cmp
jno
xchg
push
push
xlat
fcmovu
or
adc
shlb
movsb
and
dec
popf
xor
mov
in
call
pop
push
sti
pop
xor
mov
gs
and
std
shl
cwtl
inc
jle
jl
add
div
loop
mov
adc
push
and
clc
call
enter
add
popa
out
pop
popf
xor
repz
adc
shll
push
sub
and
pop
rorl
in
adc
cmp
lds
jmp
sub
sub
and
imul
test
mov
xchg
xlat
and
mov
je
hlt
sbb
shlb
add
lds
cltd
push
sbb
pushl
bound
mov
sti
jl
mov
call
pusha
and
mov
insb
cs
add
inc
xor
sbb
dec
filds
ret
xor
scas
sbb
pop
test
add
addr16
js
out
sbb
lret
add
incl
mov
xor
repz
add
test
iret
adc
cltd
scas
add
sbb
inc
sub
js
sbb
mov
xchg
push
or
mov
stos
lock
stos
mov
or
cmp
push
add
bound
pop
out
add
mov
cld
pop
push
xchg
push
dec
fyl2x
add
mov
aad
sub
aaa
stos
fisttpl
jbe
mov
push
mov
push
mov
les
push
mov
add
adc
loop
jge
add
add
add
adc
shll
ss
add
xor
add
fists
loopne
adc
push
cli
shlb
lock
jp
test
mov
add
push
sahf
push
inc
stos
jle
rolb
ret
and
lods
movb
cmp
jmp
mov
jbe
push
push
and
jnp
xor
lock
xchg
popl
cs
bound
add
cmp
ret
add
mov
sub
jp
xchg
lret
pusha
mov
sbb
out
xchg
or
loop
add
mov
jmp
sbb
test
nop
mov
dec
stos
pop
loope
adc
out
stc
mov
push
jne
push
movsb
js
add
aad
xchg
dec
test
xor
adc
jno
sub
shlb
loopne
add
setnp
sub
sahf
aaa
lea
movsl
add
leave
cltd
lret
scas
add
inc
adcl
aaa
jg
ja
jnp
popl
cmp
jmp
fcompl
sub
lock
push
push
sbb
mov
rclb
mov
mov
sbb
cmp
xchg
js
jbe
decb
add
sbb
mov
add
push
in
xlat
xchg
sbbb
rolb
and
outsb
jne
cmp
fadds
loopne
sarl
loope
xor
imul
sbb
mov
test
pop
aas
sub
ret
mov
mov
and
xor
inc
inc
sbb
sub
ds
inc
mov
xor
out
in
jne
xor
jnp
fadds
dec
addb
xor
neg
lea
push
insb
and
cmp
mov
sbbb
andl
cmp
aas
fldl
repz
loopne
mov
bound
fwait
push
or
call
adc
mov
loop
daa
pusha
subl
shlb
fcomps
loope
sbb
jno
mov
mov
fildl
popl
add
jnp
nop
mov
dec
adc
rcrl
jo
xor
cmp
pusha
arpl
ffreep
and
aaa
cmp
daa
icebp
inc
hlt
mov
sti
jle
cmp
xchg
fisubs
dec
rolb
jge
cmpb
add
cmp
out
xchg
cmpb
or
loope
arpl
rcll
and
push
lahf
pop
xchg
xor
sub
dec
pusha
pusha
rorb
pop
mov
mov
popl
cli
pusha
dec
loop
cmp
cwtl
loop
pushfw
mov
and
cmp
clc
mov
xor
bound
movsb
cmpsb
mov
imul
xor
xor
xchg
cmp
popl
jmp
mov
mov
inc
test
xchg
mov
or
insl
inc
jle
inc
jp
test
cmp
nop
jb
fcmovne
loopne
in
jecxz
jno
xor
pusha
push
jae
fwait
into
add
xor
arpl
punpcklwd
inc
lret
jo
mov
aaa
pushf
out
inc
loop
sub
jne
pop
cmp
sub
in
inc
mov
scas
ret
mov
in
fcmove
xor
cwtl
popa
lock
adc
int
push
inc
dec
cmp
rolb
rcll
inc
popl
and
pop
ds
out
mov
sub
out
mov
shll
pusha
mov
dec
shrb
sub
push
mov
sub
aam
jo
add
mov
jl
or
test
push
xchg
jge
repnz
and
mov
jne
popl
xchg
sub
add
insb
inc
bound
mov
and
test
mov
movsl
and
sahf
and
sub
sbb
ljmp
sbbl
and
mov
pop
push
xchg
sub
cli
mov
and
xor
imul
xchg
popf
bound
pop
and
jl
or
sub
mov
stos
test
push
jp
enter
pop
sub
cmpsl
mov
mov
pusha
add
cmp
sbb
jl
sbb
adc
xor
aad
pop
add
mov
xor
jnp
pop
push
add
aad
icebp
inc
fwait
sub
fmuls
rcrb
and
mov
mov
jl
popf
lods
mov
and
in
sbbl
inc
daa
into
and
xor
es
test
push
cmpsl
xor
and
jmp
xor
xchg
in
test
sbb
cmc
push
enter
out
pusha
sar
fldl
cmpsb
adc
xchg
fcmovnu
jbe
add
xor
js
and
and
jecxz
mov
xchg
xor
jnp
outsl
sbb
jmp
mov
das
inc
in
mov
fsubl
loop
jns,pt
mov
mov
or
xor
pusha
push
add
lods
xor
hlt
push
mull
jmp
clc
sarl
add
push
cmp
and
push
pop
or
xor
mov
imul
xchg
roll
fstpl
mov
je
pusha
shl
arpl
xor
fsubs
pusha
out
loop
call
and
pop
cmp
int
push
add
and
hlt
xchg
data16
and
popa
push
xchg
dec
pop
movsb
ss
xor
jl
call
xchg
divl
jno
xchg
je
pop
pusha
push
push
sub
mulb
loop
dec
sbb
add
test
xchg
and
adc
pusha
mov
hlt
mov
pusha
or
rcrl
lods
xor
pusha
or
lcall
rol
cli
and
or
inc
xor
je
pusha
shrl
in
rolb
arpl
mov
or
inc
mov
mov
mov
or
loopne
loop
and
or
adc
cmpsl
push
adc
loop
jae
inc
je
pusha
add
and
adc
icebp
scas
or
enter
or
mov
jle
repnz
xor
iret
daa
adc
mov
sbb
fwait
lds
push
mov
mov
mov
popa
xor
mov
lock
add
xor
xchg
mov
cmpl
xor
adc
scas
xor
xor
dec
cmc
mov
xor
test
mov
dec
js
mov
shrb
movsl
lock
pop
adc
imul
sbb
sbb
sub
xor
pusha
adc
xor
cmp
cmp
push
and
mov
adc
je
mov
or
jmp
mov
lret
clc
cmp
sub
lret
pusha
pusha
cmp
xchg
adc
lret
shrb
es
popf
xor
inc
mov
xorl
insb
push
or
xor
cmp
pop
or
insb
xor
ljmp
pusha
shll
ret
aam
pusha
shll
mov
pusha
rclb
out
popf
adcl
ds
inc
lret
cmp
insb
pop
inc
xor
into
push
pop
xchg
add
pop
xchg
incb
sti
out
das
xchg
adc
int3
xchg
inc
sbb
popf
nop
call
sbb
adc
cmp
inc
pushf
push
inc
push
subl
xor
pusha
add
out
in
imul
add
lret
cmp
inc
adc
mov
and
lret
rcrb
test
xchg
pusha
shlb
jb
in
push
xchg
pusha
add
mov
lds
lods
xchg
push
fcmovnb
rorl
fbld
xor
les
jge
icebp
gs
pop
rolb
or
cmp
pusha
cmp
ljmp
mov
jmp
faddl
add
xor
punpcklbw
xor
and
mov
inc
jp
fs
xor
fs
stc
icebp
adc
mov
push
shrb
inc
mov
mov
jl
shlb
xchg
shl
addr16
xor
sbb
lcall
sahf
fimuls
push
pusha
or
cmp
inc
xchg
and
shlb
xor
add
outsb
mov
mov
push
jl
xchg
xor
rorb
sbb
pop
xchg
inc
mov
rorb
or
les
ss
out
or
add
outsb
add
cmpsl
sbb
call
mov
and
add
inc
xchg
inc
gs
jl
or
inc
icebp
clc
movsb
inc
adc
jle
xor
sti
and
and
loopne
xor
repnz
inc
adc
ds
push
lahf
xchg
and
imul
mov
inc
clc
cmpsb
push
xor
mov
pusha
add
pop
xchg
sbb
jmp
fs
mov
dec
call
repnz
sub
adc
pop
mov
add
cmpsl
jno
cmp
xchg
stos
dec
push
and
lret
xor
icebp
sbb
xor
sbb
and
mov
pop
add
jl
cmp
push
hlt
test
and
add
or
dec
rcll
mov
push
dec
sbb
mov
sub
xchg
andl
test
rol
xor
jbe
pusha
push
sbb
cmp
stc
sbb
mov
popl
and
xorb
mov
cltd
mov
rclb
and
loopne
aaa
xor
les
jbe
dec
cmp
cmp
xor
xorl
fldl2e
dec
and
adc
pop
cmpsb
cmp
incl
pushf
cmp
sub
fxch
xor
fdiv
loopne
jmp
test
sub
insb
ret
outsb
lock
or
xor
sbb
push
sbb
sbb
and
xor
outsb
pop
leave
or
sbb
mov
lds
int
mov
xor
iret
adc
out
inc
data16
popa
les
xchg
loopne
repnz
and
popa
es
jl
cmp
popa
xor
negl
add
sbb
dec
inc
out
jl
adc
and
push
pop
push
adc
in
adc
jno
je
movb
lcall
test
mov
popl
ret
adc
ds
sar
sbb
dec
cmp
fdiv
xchg
xor
dec
xchg
out
pop
push
jne
mov
mov
cs
mov
xorb
inc
pop
sbb
lods
lret
sub
das
adc
sbb
sbb
add
adcl
es
pop
add
mov
aam
cmp
and
sbb
jge
popa
dec
out
inc
sbb
inc
cmpsb
fstpt
imul
rorb
test
adc
les
mov
repz
xor
sahf
rclb
adc
repz
fwait
mov
cmc
repz
lods
inc
icebp
push
scas
sbb
cmp
sub
and
in
mov
lods
xchg
jb
inc
mov
lock
dec
cs
rolb
push
pop
scas
push
and
sub
popf
movsb
shl
add
ficomps
sub
lock
pop
add
lret
decl
int3
jno
mov
pop
int3
ja
inc
xchg
clc
cmp
cltd
and
clc
and
rclb
fdivrl
or
pop
pop
xchg
mov
loop
xor
inc
push
inc
repz
test
push
loopne
dec
cwtl
jo
cmpsb
jecxz
fisttpl
loopne
leave
pop
xor
add
adc
cmp
or
push
xor
xlat
clc
inc
lds
cmp
fwait
lock
hlt
popl
and
cli
ds
and
insl
mov
pop
sbb
arpl
cmpsb
sti
or
xor
cmc
jns
cmp
sub
or
addb
adc
cs
cmp
jmp
xor
push
jbe
dec
fisubrl
rorb
cmp
lock
jmp
xor
lods
xchg
add
inc
outsb
pop
adc
les
bound
jno
or
add
xor
iret
xchg
pusha
shr
icebp
loope,pt
shlb
xchg
inc
and
jb
popl
dec
int
pushf
xor
mov
pusha
add
arpl
frstor
cmp
xchg
cmp
xchg
popa
mov
push
pusha
add
les
daa
add
sub
movsb
sbb
gs
sarl
shll
fcomps
dec
xor
fs
xor
pusha
js
xchg
inc
push
xchg
and
stos
push
xor
xchg
ret
dec
jae
mov
pusha
or
sbb
xor
push
jmp
and
and
lock
movsl
rolb
ds
mov
add
loope
push
push
and
jl
or
inc
xchg
push
lock
sub
dec
xchg
add
cld
clc
cmp
scas
aaa
cmp
sar
stc
adc
xor
push
loopne
bound
inc
dec
and
mov
jno
and
scas
aas
dec
xor
mov
pusha
jl
sub
mov
fisttpll
pop
inc
push
xchg
inc
sbb
cmpsl
xchg
or
add
sbb
add
cs
fadds
dec
js
mov
jnp
sub
pusha
mov
xchg
xor
sub
add
jmp
pop
lods
pusha
mov
nop
mov
addr16
xor
xchg
xor
pop
pusha
add
inc
icebp
aad
scas
shlb
push
mov
jl
sbb
in
popa
push
adc
pusha
pop
mulb
icebp
xchg
xor
or
test
mov
cmpl
popa
jno
pusha
fcomps
and
and
sbb
test
xchg
xor
lea
and
sbb
adc
and
jb
jmp
add
push
pusha
lock
aad
fs
fildll
pop
push
dec
in
repnz
sub
pusha
cmp
or
icebp
rcll
pusha
rcll
in
xor
and
ljmp
push
loopne
adc
icebp
inc
push
shrl
push
popl
push
adc
ds
shll
push
dec
and
clc
add
mov
loopne
scas
arpl
inc
push
and
add
and
add
roll
sub
xor
push
push
lods
dec
mov
add
mov
jecxz
push
push
xor
push
jle
popa
mov
cmp
pop
or
jge
xlat
pusha
adc
xor
and
rolb
pop
xor
sub
pop
shl
aas
push
push
jl
lret
or
cmp
fidivs
cmp
push
xchg
jg
inc
push
punpcklbw
stos
cltd
scas
xor
sbb
nop
xor
and
mov
mov
mov
and
xchg
and
xor
sbb
pusha
adc
frstor
and
outsb
and
aas
jns
rcr
push
add
lahf
fmuls
dec
ficoml
in
jns
fcoms
loopne
mov
pop
push
jno
shl
popa
lods
pop
inc
ja
ds
insl
ficoms
dec
cmp
test
nop
xchg
outsb
xchg
pusha
repz
xor
mov
jns
movsb
ror
push
in
loopne
mov
cmc
les
insl
mov
adcl
xor
xchg
push
out
movsb
or
fsts
dec
adc
lock
notl
lock
flds
jl
leave
sbb
and
pop
xorb
dec
fucomi
loope
ss
push
mov
fnstcw
call
push
sti
mov
shll
cmp
sbb
into
dec
or
add
es
xor
enter
incl
push
mov
in
cltd
insb
inc
loopne
push
popa
sbb
mov
das
push
cmp
data16
inc
xchg
in
add
pop
sub
mov
repnz
mov
dec
jle
inc
out
push
popf
je
xor
mov
xor
jecxz
pop
loop
dec
pop
add
push
nop
or
sbb
into
xorb
bound
imul
inc
shll
lods
sbb
and
ds
and
rol
out
jge
test
xor
push
jge
xor
iret
icebp
cmpsb
sbbb
cmpsb
xor
xorl
fisttpll
push
or
xchg
sub
loope
es
mov
roll
out
call
adc
inc
adc
loopne
test
std
jecxz
icebp
cmpsb
sbb
mov
dec
cmp
dec
rcrb
sbb
xchg
sarb
test
mov
std
rclb
notb
sub
lock
leave
add
xor
lret
cli
cmc
nop
push
les
push
aam
in
xor
adc
pushf
shll
test
xor
testb
loop
adc
push
and
mov
nop
jp
cld
lods
idivl
dec
enter
icebp
or
dec
or
test
sahf
popl
inc
call
jl
sahf
sub
scas
cmp
inc
jns
or
push
cmp
rorl
test
inc
out
adc
mov
sub
and
inc
dec
pusha
cli
and
mov
jge
or
test
into
and
std
test
repnz
push
pusha
testb
lret
repz
jmp
test
clc
add
aam
mov
sub
mov
pop
adc
inc
outsl
imul
adc
orb
je
jnp
dec
stos
and
gs
cwtl
lds
mov
cmpb
mov
in
imul
mov
arpl
mov
and
mov
add
mov
cmc
pusha
enter
rorl
sbb
and
loop
mov
inc
dec
arpl
add
stos
adc
mov
pop
push
mov
inc
stos
adc
mov
push
ljmp
push
test
mov
or
iret
inc
adc
or
test
stos
xor
mov
in
inc
rorb
pop
loop
arpl
ljmp
and
bound
mov
mov
add
test
mov
ja
pop
mov
mov
adc
push
scas
call
dec
sti
push
push
jns
or
add
outsl
cmp
add
and
scas
jae
inc
mov
js
out
adc
mov
imul
jne
push
stos
fimull
clc
pop
sarl
repnz
push
data16
sbb
mov
cmp
test
xor
jae
aad
mov
addr16
xchg
inc
andb
bound
sbb
inc
sbb
jl
push
xchg
xchg
add
fwait
cli
in
in
add
or
push
mov
dec
or
out
test
out
rolb
jns
into
sub
hlt
pop
and
cmp
or
and
clc
and
fdivrs
addl
mov
movb
pop
pop
mov
dec
test
loope
inc
inc
mov
into
lret
mov
and
and
call
mov
add
movsb
mov
pop
arpl
mov
lea
and
inc
mov
popa
test
pusha
rcrb
jl
bound
sarl
and
dec
mov
test
sub
out
or
sub
aaa
adc
and
xor
add
mov
lods
int
test
inc
cmpsl
dec
aas
subl
mov
mov
jg
dec
sub
push
sbb
add
push
xchg
fwait
loopne
icebp
xchg
add
jnp
push
shlb
adc
negl
jo
std
jge
test
xchg
mov
jo
arpl
popf
test
in
fs
mov
andb
jb
xor
or
mov
daa
mov
pusha
mov
mov
add
out
pop
pop
or
dec
and
sub
sbb
jle
mov
rcrl
lds
sahf
jb
je
or
call
push
pop
in
pop
pop
stos
clc
movq
mov
call
and
lods
addb
pusha
push
xor
call
push
insb
mov
jbe
add
nop
shr
in
push
popf
roll
push
mov
push
lock
adc
jmp
nop
adc
sbb
jae
iret
or
outsl
dec
pop
mov
sti
and
and
inc
dec
pop
add
movsbl
jl
cltd
ss
sub
outsb
adc
lret
add
inc
mov
jo
xchg
or
int3
adc
inc
mov
mov
call
test
jg
add
stos
jge
inc
sub
aaa
out
xchg
pop
push
and
and
js
je
jnp
xchg
enter
pmulhuw
add
jne
jge
shlb
add
sub
pop
cmpsl
xor
push
and
pop
or
movsb
add
pushf
xor
loope
rclb
cmpsb
xor
or
stos
pop
and
xor
stc
shr
or
xor
or
pop
sbb
test
mov
adc
leave
aam
jp
js
dec
add
jno
sub
aaa
add
jnp
sbb
add
or
sti
scas
sbb
stc
mov
jp
mov
or
in
jbe
mov
insl
add
add
add
mov
in
add
mov
aaa
fdivl
mov
out
cmp
pop
fnstsw
insl
sbb
sub
push
stos
mov
call
xor
fwait
loopne
leave
jne
insl
add
aas
fsubs
add
adc
sub
push
jle
ljmp
adcl
jg
out
popa
in
xchg
xchg
pop
jmp
jo
insl
pop
fimuls
jl
cmp
das
or
mov
add
and
add
inc
ficoms
mov
aam
pusha
mov
rolb
cmp
popa
hlt
cmpsl
out
mov
in
pop
lret
add
lock
sarl
mov
push
test
xor
insb
xchg
sar
mov
or
lock
pusha
jb
pop
ds
push
adc
mov
add
popf
scas
stc
lcall
sbbb
add
mov
mov
das
sti
adc
clc
adc
jnp
mov
sti
dec
fiaddl
dec
cmpsb
jb
and
xor
sbb
push
scas
inc
stc
dec
gs
lock
sub
pop
je
sub
pop
sbb
sub
jbe
dec
fisttps
mov
xor
fs
inc
test
cmp
add
dec
sbb
cmpsl
adc
add
clc
mov
add
sub
mov
insl
push
push
sbb
dec
test
pusha
inc
pusha
cmc
sub
adc
jge
incl
xor
test
icebp
pop
stos
sarb
decl
xchg
clc
orb
out
fwait
loope
repnz
add
sarb
xchg
inc
push
sbb
test
pusha
clc
imulb
sarl
sbb
push
addb
add
push
inc
insb
pushf
shl
lahf
add
pop
pusha
pop
sti
cmp
push
mov
push
xor
push
add
movsb
jbe
repnz
js
add
rcl
rolb
loopne
jnp
pop
sub
add
popf
add
std
jno
or
int
and
jecxz
cmp
aaa
subb
lods
incb
dec
dec
subb
lea
push
jmp
div
adcl
sub
xchg
fdivs
dec
add
outsb
jno
mov
or
fdivs
add
sarb
add
adc
iret
imul
add
inc
inc
mov
cmp
mov
insw
stos
fmull
add
fiaddl
push
lods
jo
loopne
mov
and
mov
call
popa
jne
jns
add
imul
fs
add
fsubs
ljmp
mov
adc
hlt
or
int3
stos
mov
cmp
and
pusha
and
xchg
in
add
inc
lea
pop
cmpsl
and
pusha
xchg
xor
fidivs
push
or
mov
test
aam
add
shr
jnp
incl
es
movsl
xchg
jge
nop
add
pop
cmpl
std
outsb
add
mov
mov
add
xlat
popa
mov
add
lods
xchg
add
les
in
ficompl
leave
fucom
fucomi
cmp
orl
aam
rcrl
js
jp
jnp
or
mov
pusha
lods
xor
out
add
mov
inc
add
lea
mov
adc
imul
dec
les
es
cmpsb
jbe
lahf
mov
mov
xchg
orl
sar
inc
xchg
neg
cld
testl
pop
push
mov
out
in
push
push
and
sbb
cld
pusha
stc
xchg
cltd
cmp
jecxz
sbb
xor
or
inc
jno
pushf
aas
mov
jo
cmp
loopne
and
adc
jns,pt
pop
mov
ja
adc
addb
hlt
shll
ss
rcl
mov
popf
sahf
or
add
pop
jge
push
roll
pop
popa
pop
mov
pop
mov
cmpsl
in
ret
add
mov
daa
xchg
add
mov
sbbl
in
mull
test
vpperm
xchg
dec
fdiv
stc
aam
add
dec
in
pop
adc
add
cmpsb
movsl
lret
cmc
and
xchg
pop
call
addb
inc
and
or
add
rclb
xchg
fbld
push
add
lods
insl
fs
adc
sub
movsl
mov
shl
jl
sbb
repz
clc
adc
xchg
jae
sbb
xor
outsl
add
add
fldl2e
and
test
cmp
jo
xor
jmp
aam
push
les
add
cmp
add
mov
shll
fwait
xchg
scas
sbb
cmc
xchg
jae
add
xchg
repz
xor
add
cmp
add
ljmp
es
pusha
adcl
jmp
add
jns
xor
xchg
sti
mov
les
aam
mov
scas
pop
pop
lods
rorl
xor
rclb
add
jecxz
sub
aam
add
xchg
mov
movsl
nop
push
dec
adc
rorl
cmpsl
cmp
sub
xor
add
add
movsl
test
add
dec
mov
mov
lret
add
fldl
fmuls
add
in
arpl
push
mov
ljmp
pop
add
add
cmp
cmp
rcrb
cmp
movsb
addb
and
xlat
jmp
sub
add
jecxz
add
mov
sbb
lods
cmpsl
add
and
pop
or
orb
test
popa
mov
push
fsub
cld
test
or
add
cmpsb
add
add
adc
stos
cli
es
cld
sar
stc
cmpl
push
lds
lret
add
outsb
xchg
lock
inc
in
xchg
adcl
add
adc
shlb
setg
and
inc
imul
mov
pushf
jg
mov
mov
jno
cmp
lret
jbe
push
mov
loopne
pop
iret
add
or
imul
fistpl
rcrb
add
and
dec
mov
enter
pushf
dec
lds
mov
dec
cmpxchg
sar
int3
add
jle
add
iret
mov
xchg
fcom
sbb
fs
jp
es
push
add
sub
test
mov
add
xchg
and
jne,pt
lock
test
push
testb
push
in
out
mov
pop
jno
xchg
mov
xor
adc
out
jns
adc
cmp
dec
jns
add
dec
repnz
pop
faddl
hlt
adc
cltd
sbb
add
jno
mov
mov
mov
in
pop
xchg
dec
sbb
jge
loopne
cli
mov
dec
add
icebp
jmp
pop
push
pop
pop
pop
int3
add
dec
outsl
aaa
xor
addb
ss
popa
mov
repnz
dec
rcrb
sub
stos
or
mov
jl
sbb
fnstcw
int
xor
add
adc
and
fwait
cmp
ja
dec
mov
mov
and
fcomps
push
or
movsb
sbb
fsts
add
jmp
inc
cld
addb
dec
call
out
add
pop
xchg
cli
mov
or
mov
out
add
scas
sti
loop
add
sbb
push
mov
add
mov
das
faddl
mov
sti
dec
inc
sbb
les
shrb
mov
jb
std
rol
and
ret
filds
ret
insb
pop
jbe
mov
mov
sbb
mov
pop
sarl
mov
test
dec
mov
jno
stos
mov
cmp
xchg
mov
add
leave
addb
js
in
mov
test
fwait
aam
mov
push
sub
xor
lods
add
xor
add
or
andb
leave
add
cmp
mov
mov
fisttpl
pop
loop
imul
fsubrl
add
pusha
cmp
into
addb
mov
add
jnp
jo
rcrb
insl
fbstp
sbb
flds
inc
add
sarl
add
loopne
pop
js
iret
repnz
das
adc
rclb
or
add
cmp
add
in
shll
or
jns
cmp
cmp
test
int3
faddl
xlat
add
push
push
sub
xchg
mov
add
dec
ret
or
push
arpl
out
clc
loope
inc
xchg
fwait
add
pcmpgtd
cmp
push
sbbb
adc
out
ds
out
pop
lods
rolb
iret
leave
test
dec
xchg
and
jno
movsb
xchg
xor
testl
lock
roll
outsl
sbb
scas
test
clc
iret
jns
add
popf
cmc
pop
push
adc
add
jb
adc
arpl
ds
cwtl
dec
rorb
sbb
inc
sahf
je
xchg
xchg
aam
mov
xchg
pop
or
pop
sub
lret
lret
add
cld
mov
jmp
mov
insb
mov
cmp
add
call
or
mov
xor
les
test
scas
shrl
insl
inc
sub
push
shrl
pusha
dec
jo
popa
sahf
bound
enter
fucom
repnz
jns
mov
out
pop
stos
mov
lds
mov
xor
lret
sbb
xorb
pop
sbbb
mov
inc
adc
loop
pop
and
jno
and
sbb
jo
test
add
add
cli
fstl
repnz
flds
jno
outsb
in
add
cmp
add
int
cmpsb
cmp
fwait
mov
loopne
xchg
mov
js
cmp
dec
or
mov
jb
xor
mov
mov
fnstcw
add
shll
gs
inc
push
loop
inc
xchg
push
pinsrw
ret
jns
mov
jb
mov
jae
push
js
les
loopne
or
mov
mov
frstor
pop
cld
jno
int3
pushf
mov
aaa
adc
bound
dec
inc
xchg
pop
add
mov
sub
stos
xor
lret
hlt
cmpb
das
in
push
fdivr
and
jbe
rcll
cmp
daa
dec
add
sbb
vhaddps
hlt
incb
sbb
movsb
push
loopne
mov
add
dec
sub
jnp
xchg
add
or
add
sbb
mov
add
mov
movsl
add
sbb
sbb
and
repz
mov
sbb
sahf
push
adc
cmpsl
mov
lods
jmp
dec
push
cmp
mov
clc
testb
adc
imul
daa
inc
popw
sbb
push
addl
loop
jmp
out
dec
sbb
jno
fiaddl
addb
mov
add
add
das
imul
jp
test
mov
sbb
fisubrl
lds
push
pushf
icebp
cli
mov
cld
inc
bound
fimuls
cmp
addr16
xor
jns
stc
loopne
imul
je
inc
mov
xor
mov
mov
add
pop
ror
dec
fildll
lods
mov
lock
sbb
mov
clc
enter
add
int
je
enter
jns
add
or
sbb
add
test
movsl
in
and
mov
lret
sbb
pop
pop
in
jo
aas
adc
mov
xchg
shrl
adc
lcall
mov
cmpsb
add
ds
pop
dec
clc
lret
add
pop
enter
sbb
mov
cmp
mov
push
cmp
jmp
cs
imul
addb
pop
rol
add
or
add
shrl
and
sub
cld
nop
mov
fstpt
add
xor
push
push
push
adc
pop
arpl
and
or
scas
sti
sbb
cmpsb
pop
fistps
or
int
add
jmp
mov
add
ret
cltd
hlt
shrb
jecxz
out
mov
pop
cmpsl
lods
mov
push
hlt
cltd
aas
mov
jge
xlat
in
ljmp
test
arpl
inc
xchg
fcomps
mov
in
jns
scas
mov
mov
in
xchg
daa
cmp
mov
mov
pushf
popf
mov
mov
bound
inc
add
rclb
mov
pop
pusha
jns
out
sbb
cwtl
sub
xor
iret
add
cmp
outsl
adc
mov
xchg
pop
dec
sub
pusha
jb
add
push
testl
pop
push
add
aam
mov
add
aas
jmp
add
jecxz
push
shll
inc
add
lcall
and
or
aad
imul
dec
cmp
aam
sub
test
or
add
test
mov
scas
mov
dec
and
stos
jmp
fs
xchg
cli
scas
jbe
push
and
sbb
lcall
pop
in
pusha
fisubs
insb
jp
add
jbe
cmpsl
lds
add
aaa
in
imul
add
stc
mov
hlt
add
or
add
and
or
in
push
mov
ds
movsl
inc
mov
mov
add
mov
add
out
cwtl
fld
mov
pop
out
jle
push
xchg
push
sahf
stos
push
shl
ret
iret
jno
add
cmpsb
fmulp
adc
mov
push
inc
mull
adc
int3
rclb
cmp
hlt
cmp
cld
lds
cmpb
incb
js
adc
push
out
cmpb
xchg
xor
add
and
cmp
decb
sub
xor
jno
adc
add
fcmovnb
loop
dec
or
mov
pop
clc
fiaddl
scas
pop
pushf
adcb
add
pop
xchg
or
in
repnz
xor
insl
pop
aaa
push
call
int3
imul
jmp
pop
pop
repz
loopne
sahf
shrb
inc
mov
and
dec
add
mov
cmp
jl
xor
leave
push
xchg
xor
push
inc
mov
add
fildll
add
dec
mov
pop
or
out
out
adc
pusha
push
leave
cs
add
mov
mov
cmp
jo
add
out
jae
mov
lea
xchg
ljmp
prefetchnta
add
fwait
cmp
cmp
add
enter
add
cli
mov
jp
or
push
ret
sub
dec
daa
ret
xor
xchg
push
ss
pop
cmc
gs
sub
pop
add
insl
push
je
lods
or
rcrb
mov
inc
add
ret
pusha
cld
dec
jl
cmovge
repnz
add
iret
pop
and
add
and
out
pop
cld
cmpsl
pop
cmc
xlat
push
mov
faddl
inc
jmp
popa
dec
fstl
add
push
stc
sub
fmul
movsb
pop
add
imul
cmp
jecxz
out
shl
add
mov
xchg
testb
cmpb
mov
enter
xchg
adc
insb
jbe
mov
sbb
mov
push
add
test
jl
adc
sbb
pop
push
rcr
mov
icebp
sbbb
pop
and
dec
xorb
or
add
pop
jl
sub
pop
jo
mov
fsubr
xlat
push
dec
call
out
lods
jbe
pop
les
testb
ds
fistl
add
push
add
cmp
cmp
ljmp
test
and
mov
dec
xchg
pop
dec
xchg
es
mov
add
divb
jb
or
mov
popa
adcl
fcmovnu
mov
roll
movsb
add
dec
or
in
add
lret
mov
jle
jnp
pop
test
jp
nop
push
mov
dec
out
add
call
and
lret
jl
adc
roll
movl
and
jne
fmull
cwtl
dec
mov
xchg
loop
add
xchg
int3
add
aam
je
add
aas
in
jg
adc
inc
mov
loopne
add
mull
aam
push
js
ror
testb
faddl
add
cmpsl
out
jnp
loopne
add
fsubrl
in
rcll
push
jno
add
imul
sahf
fdivrl
int3
lret
es
cs
jnp
lcall
xlat
sbbb
test
push
mov
les
add
adc
cld
bound
add
fdivrs
sbb
adc
inc
sub
add
adc
pusha
adc
loope
call
xor
out
jmp
adc
fstl
arpl
mov
popa
and
pop
cmp
add
cmp
mov
cld
sbb
sub
jge
rcr
mov
mov
jmp
call
out
xor
lret
mov
mov
add
addr16
or
dec
out
flds
cli
push
aad
mov
add
into
mov
mov
aas
push
and
cmp
and
inc
out
clc
insb
dec
dec
jb
add
stos
xchg
xchg
lcall
xchg
inc
out
adc
sbb
xchg
cmp
or
fmull
test
xchg
mov
gs
jnp
lock
add
cli
pop
push
ficomps
add
sbb
mov
pop
fmul
std
mov
outsl
les
daa
xchg
andb
or
addr16
pop
jecxz
test
clc
jne
mov
add
or
pop
mov
dec
cmp
lods
add
sbbb
adc
xlat
push
add
pop
dec
loop
push
add
sahf
maxps
push
cmp
sbb
cmp
adc
cmp
ret
pushf
bound
dec
mov
or
mov
and
push
jno
js
xor
jmp
mov
addb
inc
das
loope
push
sub
mov
pusha
rolb
insl
add
popf
pop
inc
pop
or
xchg
mov
add
popf
mov
add
lret
icebp
push
pavgw
fcoml
adc
jge
push
mov
cmp
test
push
lahf
or
add
inc
sub
cmp
call
aaa
inc
xor
cs
xchg
ss
fisubrl
in
rcrb
pop
add
leave
xlat
std
inc
push
add
mov
inc
pop
push
mov
loope
test
push
pop
xchg
sti
ja
fnsave
push
mov
adc
dec
inc
lods
lret
test
add
mov
dec
mov
stos
sub
lock
cmpsb
xchg
pop
xor
mov
loop
out
nop
inc
sbb
mov
enter
sbb
add
xchg
or
lds
xor
cwtl
leave
inc
aaa
push
jecxz
and
mov
popf
sub
add
and
push
jnp
dec
add
leave
lahf
popa
xchg
ljmp
into
cmp
pop
pop
mov
cltd
ret
dec
inc
iret
jge
jbe
jl
push
add
popa
add
mul
stc
sbbl
sbb
lods
int
push
sahf
loop
pop
lea
cmpsl
jae
cli
lcall
data16
add
ret
or
inc
sbb
cmpsb
repnz
jmp
into
dec
add
inc
dec
negb
jp
or
xor
insb
xchg
shll
cmp
into
xorb
and
je
stos
sbb
pop
add
lcall
adc
mov
pop
lods
add
scas
cmpsb
mov
testl
movsb
aas
jp
jns
push
ud2
jns
inc
cmp
pop
mov
or
xor
mov
or
out
imul
add
addr16
pushf
pop
add
sub
lcall
cmp
add
lods
sbb
jle
stos
cmp
and
cmpsl
movb
mov
adc
repnz
cmp
jo
call
pushf
sbb
inc
sbb
sub
add
add
push
xor
je
and
add
xchg
movsl
mov
dec
mov
sub
lret
out
cmp
and
add
daa
jb
adc
popa
add
inc
jmp
push
add
or
leave
dec
add
xchg
sub
jg
cli
ret
add
testl
inc
nop
push
mov
or
hlt
mov
addl
jecxz
and
ss
outsl
xchg
iret
outsb
pop
cltd
addb
xor
clc
inc
xchg
mov
add
jbe
stos
lock
jp
aaa
push
popa
test
sub
sub
es
clc
fmuls
popa
xlat
stc
xor
pop
add
fstps
loopne
cmpsb
cld
push
dec
mov
cmp
add
xchg
and
in
bnd
call
mov
inc
shll
fcoms
cld
scas
jmp
mov
aad
cmp
insl
in
lds
fidivl
add
imul
sbb
add
push
mov
int3
pop
filds
cmp
dec
push
push
mov
push
pushf
xchg
fs
out
mov
mov
cwtl
jp
scas
test
aas
cmpb
or
sti
mov
jle
rclb
cmp
xor
test
and
jbe
add
push
movsb
pusha
push
pusha
enter
mov
outsb
xlat
mov
add
rcl
pop
xchg
in
cmp
sub
or
xchg
lret
add
inc
sarb
mov
add
add
insl
mov
mov
enter
add
loop
mov
push
aam
xchg
faddp
cmp
and
inc
and
or
leave
add
dec
dec
pop
in
sbb
stos
add
and
pusha
cmp
jle
call
cltd
test
xor
repz
mov
push
scas
push
out
stc
ja
add
fcoms
lods
fdivrs
dec
push
pop
mov
jle
outsl
add
movsl
mov
dec
mov
or
xor
pop
sahf
pop
gs
add
mov
mov
jnp
mov
fwait
daa
xor
xor
xchg
scas
cmp
add
insl
cmp
push
add
mov
and
stos
cld
repz
mov
test
xor
out
add
rcrl
cmpsb
mov
jae
xchg
lahf
movsl
aaa
inc
in
aas
loope
cli
add
pusha
aad
imul
lahf
dec
mov
add
mov
cmp
scas
add
xchg
push
add
out
push
adc
hlt
mov
add
data16
mov
jecxz
add
xchg
add
cmp
inc
add
dec
push
add
lock
xchg
jnp
add
test
aad
cmp
mov
lret
ss
sbb
adc
add
xchg
call
or
rolb
push
cld
push
iret
into
sbb
out
pop
add
or
cld
add
sbb
and
mov
push
out
inc
add
loope
mov
dec
loop
push
cmp
rcrb
add
jmp
dec
push
mov
daa
jp
push
jns
aas
fmuls
mov
mov
xchg
add
negb
jo
mov
out
hlt
mov
adc
movsl
lcall
mov
add
lahf
dec
mov
imul
lea
dec
sbb
xchg
bound
pop
add
xor
sub
lcall
jo
or
pusha
add
adc
pop
xchg
in
jno
out
jne
mov
push
addb
push
mov
loop
nop
insb
add
andb
add
outsb
pushf
xchg
outsl
mov
add
mov
jmp
subl
add
inc
inc
scas
adc
das
je
mov
add
ret
add
push
dec
adc
mov
cli
dec
ja
and
gs
cmp
adc
jae
add
arpl
inc
xchg
dec
dec
cmp
dec
ret
pop
or
xchg
add
repz
jmp
pop
clc
cmp
jge
sub
idivl
fadd
add
out
pop
dec
inc
lods
pop
jae
mov
daa
mov
xor
shr
cmp
mov
addl
shl
jne
fsts
fmuls
jnp
lds
cli
pop
hlt
add
mov
add
dec
inc
add
iret
jecxz
inc
jbe
out
jne
push
and
xor
sub
xor
pop
mov
adc
stc
inc
faddl
jns
addl
adc
minps
mov
pop
pop
jo
ficoms
lret
jmp
jp
cmp
ljmp
pop
dec
add
int3
stc
push
int
inc
pop
jge
or
xor
add
cmc
cld
divl
push
cli
mov
inc
data16
mov
cmpsb
in
pop
pop
mov
or
wbinvd
incb
dec
and
lret
cwtl
add
adc
add
orl
cmp
add
pop
out
jp
popf
fadds
jecxz
wrmsr
std
mov
push
adc
cmpsl
add
mov
fdivl
arpl
adc
sbb
and
loop
sbb
popa
pop
lea
xchg
push
lcall
rcrl
add
push
pusha
outsb
sbb
cli
adc
and
subb
clc
or
imul
test
push
xchg
sub
pop
or
dec
push
dec
add
out
cmp
add
lret
cmpl
data16
test
in
decl
cmp
test
sarb
int
sbb
verw
push
sub
sub
mov
fs
rcrb
mov
cli
clc
pusha
js
emms
jmp
bound
lahf
add
jge
test
scas
jo
and
add
or
ljmp
fstpt
cmp
mov
ljmp
inc
in
sbbb
hlt
xorl
sub
push
enter
outsl
adc
jbe
add
push
loop
add
dec
out
ljmp
and
jne
out
pushf
and
adc
icebp
and
std
inc
adc
add
pusha
xchg
data16
add
dec
push
mov
cwtl
sahf
or
fadds
in
inc
mov
test
fiadds
xchg
xchg
cltd
ret
add
add
int3
int
out
mov
rolb
cltd
scas
push
ret
xchg
mov
add
stc
dec
stos
ds
mov
loop
enter
adc
push
sbb
add
testb
mov
outsb
loopne
fnstenv
movups
xlat
femms
inc
push
and
add
pop
scas
icebp
or
shlb
adc
pop
test
cmpsl
mov
inc
pop
loope
mov
add
and
aaa
and
pop
into
sti
mov
flds
jnp
add
cmp
stos
repz
xor
mov
movsb
inc
and
mov
jb
sahf
sub
sub
inc
dec
ds
shrl
and
and
or
jmp
mov
add
sub
pop
sarl
lock
orl
lds
xor
xchg
dec
dec
inc
mov
sbb
push
out
add
int3
xor
dec
mov
aam
mov
sub
mov
cmc
sub
xchg
xor
imul
sub
sahf
add
vphaddbw
push
filds
push
push
rol
inc
cmp
notb
aam
add
pop
imul
inc
repz
call
mov
lods
push
dec
andl
shlb
insl
dec
in
cmp
cld
add
lcall
add
paddsw
lods
mov
sti
push
fsubrs
mov
add
push
pop
xchg
add
dec
in
add
cmp
adc
cmc
jo
sahf
outsb
addl
or
sub
and
mov
in
dec
ret
addb
mov
sbb
or
lretw
and
arpl
add
add
dec
lret
ja
inc
pop
or
dec
push
test
arpl
popf
add
adc
xchg
mov
fisubs
add
or
imul
addl
xor
faddp
push
push
rcr
pop
jb
lret
cwtl
mov
sti
in
add
cmp
add
sbb
dec
sub
loop
or
inc
add
lea
das
fstp
cmp
and
mov
jae
add
loope
fidivl
fildl
inc
jbe
xor
lret
pop
imul
mov
jne
js
cmc
mov
loopne
mov
nop
cmpsb
stc
in
cwtl
xchg
add
inc
clc
xchg
testb
jns
cs
loop
add
test
adc
in
sub
pop
xchg
inc
out
test
add
clc
mov
pop
add
or
inc
inc
add
dec
je
cmp
dec
mov
arpl
mov
cli
add
das
pop
or
pop
add
rcrl
pop
add
jno
popf
xchg
push
fisubrl
in
cmpsb
ja
sbbb
add
divb
test
cmp
or
and
dec
mov
adc
sub
mov
enter
mov
xor
rcrl
add
clc
jmp
jg
xchg
test
stos
mov
adc
icebp
push
inc
fdivr
shlb
int3
mov
sbb
enter
and
dec
jge
add
mov
add
daa
jl
sub
or
cmp
mov
fs
mov
fidivs
test
shll
or
into
xchg
adc
stos
jne
loope
adc
pop
aas
out
cmc
ret
lock
nop
add
stos
jge
mov
jmp
stc
adc
adc
inc
test
outsb
jns
add
ret
aas
mov
push
pop
add
sub
adc
jecxz
mov
repz
rclb
fstl
cmp
cmpsl
faddl
data16
fisubl
dec
add
push
sub
push
dec
scas
ficompl
fsubrl
sbb
pop
hlt
fs
fldln2
sar
and
jae
add
cltd
pop
jmp
add
clts
add
add
test
subl
iret
hlt
add
pop
jae
lds
jbe
add
popa
loope
aam
xchg
mov
xchg
sahf
incl
dec
mov
mov
xchg
mov
add
repnz
and
cmp
loopne
lahf
and
loopne
or
aam
pop
add
hlt
andb
repz
pusha
jge
orb
rcrb
dec
jle
clc
icebp
sub
add
aas
es
and
inc
push
je
shll
stos
pop
mov
cmc
andl
cs
loopne
adc
js
push
pushf
cld
loop
popa
test
cmpl
mov
mov
arpl
jnp
add
js
adc
add
in
push
xchg
sbb
rorb
cs
add
popa
lret
sbb
test
inc
sub
les
cmp
leave
inc
and
nop
sub
icebp
add
or
fldenv
xor
pop
lods
xchg
add
cmp
rcll
lods
inc
add
and
inc
fwait
ss
pop
pop
ds
ja
mov
and
adc
rol
xchg
leave
subl
xor
xor
out
mov
negl
lock
adc
and
add
xchg
adc
add
stos
roll
inc
mov
ror
inc
jae
add
repnz
or
mov
pop
push
mov
push
sbb
ja
add
stos
inc
filds
and
adc
xchg
mov
push
mov
gs
fwait
popa
push
int
orb
lret
push
or
cs
mov
add
jns
xchg
jne
add
inc
inc
xor
rorl
clc
pop
cmp
ret
mov
lods
adc
repz
test
xor
mov
sbb
adc
jl
daa
or
add
adc
xchg
movsb
gs
adc
or
pop
xor
mov
jnp,pt
add
inc
imul
test
jne
lods
or
xchg
out
fwait
mov
imul
xor
fldl2e
mov
sbb
adc
dec
adc
push
test
enter
hlt
sub
fstpt
sti
pop
and
mov
xlat
ss
fldl
adc
cs
ja
cmp
pushf
adc
push
jnp
sbb
stc
mov
in
xor
sti
pop
outsb
pop
andl
je
mov
or
lahf
lea
push
data16
pop
lock
rol
imul
test
cmpsb
mov
xor
sbb
jns
add
sarb
test
and
sbb
ds
mov
jns
sbb
hlt
lcall
jle
mov
shrl
ds
sbb
test
sarb
leave
adc
pop
inc
add
lcall
push
mov
cmp
adc
addr16
lret
sbb
sbb
or
sbb
jnp
cs
shrb
out
add
cmc
cmp
pop
ljmp
sub
icebp
dec
dec
add
jg
ljmp
popf
leave
mov
js
std
lock
cmpsb
or
lret
inc
arpl
sub
sub
cs
mov
iret
add
cli
lds
addr16
sbb
push
sbb
sub
pop
xchg
mov
dec
cmpsb
aaa
dec
ret
inc
subl
xor
shlb
cwtl
scas
and
sub
cmpsb
mov
add
xor
jle
subl
sub
scas
jnp
xchg
xor
mov
jno
sbb
or
dec
add
das
xchg
pusha
add
add
repz
or
jnp
movb
push
in
lret
rolb
fmuls
sub
aaa
add
test
add
push
sub
divb
add
mov
sbb
and
add
fildl
cmpsl
dec
push
push
scas
adc
scas
inc
add
inc
aas
loope
add
adc
adc
in
dec
popf
add
sti
aam
sub
push
jns
cmp
inc
jno
pop
add
repnz
movsb
rcll
or
stos
add
xchg
xchg
mov
mov
stc
jno
shl
imul
roll
aad
insb
arpl
cmp
add
sbb
ss
faddp
jp
data16
jge
or
dec
in
add
std
fldenv
xor
ffreep
loopne
das
nop
add
cmp
xchg
sbb
sub
push
jbe
and
dec
sbb
insb
inc
or
out
xor
bound
mov
mov
pushf
xor
mov
das
call
in
and
mov
andl
or
or
inc
adc
clc
jl
daa
xchg
pop
sarb
mov
pop
repnz
and
pop
testl
in
loopne
and
inc
les
jecxz
filds
call
dec
add
cmp
sti
lcall
movb
in
pop
jmp
sbb
xchg
and
nop
xor
rclb
jo
fwait
pop
outsb
and
pop
add
cmp
jno
sbb
dec
in
imul
mov
lahf
inc
adc
mov
jne
ret
sub
push
add
adc
add
scas
cld
outsb
and
fdivs
mov
ficompl
add
mov
leave
outsb
add
enter
and
mov
bnd
scas
fidivl
sar
test
xchg
aas
or
aaa
sub
add
shll
cmp
or
mov
or
pop
clc
addl
outsl
dec
and
jo
dec
xor
frstor
add
outsb
add
pop
adc
push
movl
mov
mov
insl
mov
add
jle
and
outsl
sub
test
push
lods
leave
data16
dec
pop
add
mov
pushf
mov
fisubl
add
xchg
jecxz
add
xchg
movsb
push
xchg
ds
ja
xchg
add
push
imul
stc
add
pop
movsl
cmp
adc
push
sarb
arpl
pusha
seto
pop
loopne
scas
aad
xor
and
mov
push
sub
lea
pop
mov
sub
cmp
aaa
add
push
add
popa
add
fnstsw
sbb
mov
lds
push
mov
add
stos
inc
sbb
es
gs
orb
adc
lea
cmp
je
jo
rorl
sbbl
and
jle
mov
xor
mov
vandnps
inc
adc
or
jne
lcall
shlb
pop
add
stc
aam
insl
dec
dec
mov
mov
mov
add
pop
xchg
mov
arpl
push
das
adc
bound
and
in
sub
sub
std
mov
into
sbbb
lds
mov
mov
or
out
imul
push
sbb
stc
or
pop
adc
movsl
stos
rorl
clc
mov
mov
loop
and
add
jns
add
cwtl
pop
mov
xor
in
sbb
sbb
aam
ss
fldl
int
arpl
jae
mov
xchg
and
aaa
mov
sbb
std
sub
dec
lret
xorl
faddl
and
aaa
add
fxtract
in
lcall
mov
enter
add
inc
add
js
insb
mov
add
adc
cmp
std
sub
ret
int3
inc
sbb
cmp
nop
in
es
les
sarb
lret
cltd
add
pop
movsl
cli
repnz
add
ja
jecxz
mov
push
push
add
or
xor
sub
dec
dec
pop
loope
add
enter
pushf
xor
cs
test
stc
inc
adc
loop
add
sub
jecxz
sub
adc
and
cld
lds
sub
dec
cmp
mov
adc
add
pop
and
sub
push
add
mov
or
fldt
jl
push
adc
jo
mov
cmp
and
fbstp
and
adc
add
cmp
popf
ja
in
mov
dec
add
cld
push
into
inc
and
add
mov
ret
popa
mov
jo
cwtl
adc
pop
mov
add
lea
add
push
rol
add
dec
sbb
ret
adc
pop
lret
mov
jecxz
adc
cltd
xchg
repz
test
pusha
or
add
dec
adc
push
xchg
loope
cli
inc
mov
mov
sub
pusha
test
mov
mov
adcb
testw
dec
mov
jl
add
test
loopne
in
xchg
in
add
jbe
add
mov
jmp
sub
mov
xor
cld
std
aas
pop
addr16
add
add
jo
push
popa
les
add
dec
test
xor
or
in
rolb
in
push
lods
iret
xchg
je
jno
xorb
int
cmpsl
rcll
pop
push
js
cmp
ss
cmp
clc
cmc
pusha
add
jnp
mov
add
pop
std
out
pushf
cmp
jl
sbb
or
into
lret
fstps
pop
mov
in
xchg
inc
fs
pop
add
add
into
jmp
clc
je
add
cmpl
dec
jecxz
add
pop
pusha
and
std
sahf
jb
adc
add
jno
cmp
jecxz
scas
fs
add
jnp
xchg
add
imul
dec
mov
sbb
xchg
and
dec
pop
jg
cld
add
sub
sbb
dec
movsb
inc
sbb
pop
test
sarb
pop
loope
mov
dec
loopne
leave
and
and
shrb
pop
xor
bound
add
jg
cli
or
sbb
out
add
xor
add
sahf
in
jmp
jmp
sbb
in
dec
pop
add
adc
sti
pop
inc
loop
imul
cmpsb
jl
jb
adc
add
das
mov
add
sub
mov
movsl
les
push
faddp
pop
out
adc
add
add
clc
mov
sub
add
cmc
xchg
xor
mov
shl
lret
cmp
lahf
sub
testl
shll
fcoms
imul
cmp
lea
add
dec
insb
test
xchg
imul
sub
pop
add
add
jnp
bnd
and
and
cmp
clc
mov
mov
xor
add
stos
fildl
incl
lds
mov
int
cmpsl
rcrl
push
fs
roll
ret
lcall
add
cld
aaa
jno
pop
sub
ljmp
dec
add
popf
in
sbb
add
push
filds
mov
xor
jo
pop
ret
cld
lcall
outsb
out
lret
gs
incl
and
scas
sarl
mov
pop
add
jl
add
pop
loopne
add
xor
mov
or
push
popw
inc
mov
inc
mov
sbb
scas
adc
cmp
movl
xor
roll
mov
arpl
test
clc
hlt
jle
add
push
fldt
add
jge
mov
leave
add
dec
shlb
or
xchg
mov
stos
add
mov
push
pop
dec
push
cmp
push
mul
add
mov
repnz
cmp
clc
sbb
or
sbb
test
mov
std
popa
push
outsl
add
call
cli
pusha
xchg
mov
cmp
mov
xchg
sub
cmp
xchg
ret
fs
or
ds
sbb
aam
out
pop
push
adc
add
fisubrs
mov
rcrb
sub
xchg
test
pop
roll
xchg
mov
and
cltd
leave
aam
out
test
inc
incl
jp
add
sti
out
cmp
in
adc
jge
jae
adc
clc
sub
movsb
das
adc
and
or
inc
jns
mov
sbb
jae
sub
or
fsts
test
std
mov
data16
or
pop
outsl
jno
out
jg
mov
or
add
xchg
or
add
inc
mov
les
xor
mov
loopne
add
add
cmc
cltd
out
push
jb
and
je
in
jecxz
mov
stos
mov
mov
xor
lock
sbb
in
jns
add
iret
les
add
push
mov
sub
jl
sbb
lock
std
cmp
pop
je
xchg
pop
in
adc
xchg
jl
int
and
add
mov
sub
jmp
rolb
cwtl
enter
popa
adc
hlt
shlb
xorl
lea
inc
arpl
push
xor
and
aaa
push
in
push
xor
dec
mov
lret
rclb
lock
fwait
je
pop
subb
test
xchg
push
popa
and
stos
jne
mov
cld
repnz
in
daa
cli
cltd
ds
sbb
cmp
scas
xor
cmp
add
cmpsb
and
add
cs
jmp
sbb
cld
push
add
popl
jle
cmc
or
adc
adcl
out
cwtl
fldt
add
pop
mov
out
aam
and
xor
jnp
icebp
cmp
xchg
loope
nop
popa
nop
test
add
push
dec
mov
int
jl
mov
imul
cwtl
add
add
xchg
pop
jmp
xchg
add
xor
xchg
cmpxchg8b
int
push
and
sub
lea
add
inc
pushf
aas
mov
or
js
mov
push
sub
push
push
cmc
xchg
aas
cwtl
js
add
or
int
test
out
sub
cwtl
xorb
ljmp
xchg
jle
out
add
arpl
lahf
xlat
test
sub
clc
mov
clc
mov
push
out
cld
xor
add
iret
cmp
cs
jp
push
xlat
mov
lock
xor
push
cmp
cmpsl
jle
or
scas
cmp
ljmp
sub
fsubrs
add
movsl
psrad
cmpsl
lahf
insb
cmp
mov
push
mov
mov
jg
test
sbb
leave
jo
xchg
mov
add
xchg
rcrb
pop
daa
pop
push
xchg
and
fs
ljmp
add
lahf
lds
shrl
test
je
xchg
in
sbb
jnp
ljmp
mov
xchg
orl
mov
shl
fnstsw
dec
xchg
push
push
mov
adc
push
inc
add
sbb
jle
add
or
fwait
sti
mov
add
cltd
les
sbb
add
fldenv
mov
es
jl
add
lret
mov
loopne
mov
das
xchg
imul
outsb
data16
lahf
xchg
in
fstpt
push
mov
iret
and
mov
popl
andps
push
add
push
andb
inc
add
adc
add
sbb
inc
or
add
mov
xchg
bound
sbb
addb
xor
mov
dec
add
jmp
and
inc
lds
icebp
mov
sbb
in
scas
sbbb
add
pop
into
pop
test
test
sub
inc
cs
dec
test
dec
aas
jb
lock
sbb
insl
cli
loop
add
jl
jno
ret
shll
cmp
add
mov
mov
das
repnz
cs
imul
fists
lret
idivb
mov
cli
mov
cmpsl
jne
pop
ljmp
pop
movsl
addr16
loope
add
xlat
je
into
xor
ficomps
push
fistps
add
mov
loop
and
lock
jb
ret
add
push
xor
push
insl
rclb
mov
clc
xchg
fiaddl
rolb
daa
xlat
ret
ffreep
add
mov
movsb
add
pusha
ret
adc
aam
mov
sarl
jnp
aas
pop
pop
add
lds
pop
mov
xor
lods
cltd
add
mov
iret
and
push
sbb
test
movsb
push
dec
pusha
jl
add
mov
dec
add
inc
pop
jecxz
out
mov
mov
bswap
add
xor
fxch
xor
add
in
mov
add
mov
call
add
stos
inc
xchg
int3
sbb
sbb
mov
bound
lock
stc
pop
js
pop
push
repz
call
stos
and
out
add
mov
or
add
or
mov
add
xchg
cwtl
adc
stos
test
jmp
gs
add
cmp
dec
in
push
js
aas
dec
out
pop
inc
lods
or
sbb
xchg
add
mov
pusha
jnp
xor
shlb
adc
jb
add
leave
stos
cmp
mov
negb
adcb
popl
mov
icebp
mov
aam
pop
add
sub
xchg
and
cmp
cmp
ja
insl
cmpsb
pop
mov
mov
mov
dec
mov
pop
sahf
xchg
lods
ja
xor
pusha
int
test
aam
out
les
shl
sbb
xchg
jl
dec
int
adc
xchg
sub
sub
mov
xor
push
add
fdivp
in
test
out
nop
mov
test
sub
insb
mov
xchg
xchg
add
lahf
xor
ljmp
fs
mov
call
idivb
cmp
mov
and
mov
jne
add
cmp
cmpsl
add
mov
clc
mov
sbb
mov
fucomip
in
loopne
aas
addr16
mov
insb
comiss
mov
ds
adcl
mov
movsb
out
test
fs
cmp
mov
pop
incb
and
mov
enter
ret
cwtl
push
add
loop
pop
hlt
add
pop
pop
dec
rcl
dec
inc
outsb
loopne
mov
in
in
hlt
push
inc
je
mov
jle
scas
pop
out
pop
dec
faddl
jge
push
mov
jle
mov
and
mov
movsl
mov
cmpsb
ret
inc
ja
pop
cs
aas
insl
pusha
adc
dec
mov
sub
add
jno
xor
test
and
adc
add
ja
das
data16
add
aas
adc
daa
dec
mov
xor
ret
mov
stos
rcr
fistl
pop
es
mov
or
push
inc
mov
shl
fs
add
gs
daa
push
inc
sbb
lret
xor
leave
push
pusha
cld
jo
movsl
or
enter
jo
rcll
add
push
cmpl
add
inc
inc
push
inc
mov
cmc
mov
push
test
jp
cld
or
lock
push
sbb
aaa
test
sbb
fisubrs
push
clc
lcall
in
fwait
cmp
lds
and
xor
adc
pop
push
mov
adc
or
push
daa
push
fwait
add
jg
lret
addl
sbb
adcb
xchg
pusha
mov
xchg
push
push
pop
ljmp
or
jne
js
hlt
xor
cli
xchg
sbb
xchg
mov
push
shl
add
pusha
or
data16
inc
mov
push
xor
push
pop
into
dec
lret
xchg
mov
pop
mov
rcrb
and
jp
xchg
pusha
pop
adc
addb
out
sti
addb
mov
loope
xor
add
add
das
in
xlat
jbe
push
fisttpll
lds
and
xchg
arpl
jg
pop
lahf
add
sub
xor
add
popa
push
sbb
out
pop
subb
pop
xchg
jae
imul
lock
daa
or
mov
inc
mov
loopne
adc
rorl
mov
pop
pusha
xor
push
sbb
and
cmp
inc
cltd
xchg
filds
add
xchg
sbb
add
movsb
call
out
xor
sti
xchg
mov
pop
jge
test
jo
add
lret
push
negb
mov
sbb
mov
mov
pop
pop
rcll
jo
fimull
sarb
pop
sbb
shlb
incl
sub
imul
test
push
add
or
or
and
xor
cmpb
in
repnz
jl
sbb
add
pop
or
pop
test
pop
inc
mov
loop
mov
loopne
into
pop
sub
dec
fprem1
nop
dec
ficompl
xchg
cs
ret
jle
add
lret
shlb
shrl
nop
pop
or
adc
shrl
jne
fdivs
cwtl
stc
data16
or
add
imul
sbb
push
dec
pop
push
sub
lods
add
fidivs
add
xor
or
aaa
imul
sahf
cmp
je
sarl
in
lret
adc
lods
repnz
pop
adc
lds
add
mov
xchg
and
xor
inc
sahf
cmpsl
mov
xchg
push
or
mov
jp
repz
cmc
add
ss
cmp
push
add
pop
addr16
icebp
mov
cmp
dec
pop
fsubrp
add
push
pop
mov
sbb
sub
sub
or
add
pop
xchg
stc
mov
ljmp
in
rolb
pop
xchg
push
mov
mov
mov
rorb
mov
and
sarb
push
dec
ljmp
sub
arpl
idivb
push
pop
push
dec
into
stc
into
push
add
jmp
jb
pushf
cmp
add
xor
inc
dec
fsubl
pop
insl
inc
pop
leave
clc
push
js
add
fiaddl
adc
loop
or
push
add
push
mov
jb
push
mov
jmp
add
sbb
idivb
pop
sbb
rclb
shr
rcll
movsb
popa
add
inc
lock
jno
add
xchg
or
cmp
std
mov
cltd
mov
jbe
and
jno
sub
out
inc
rcrb
mov
or
ja
iret
test
rcll
inc
dec
adc
out
int
add
jle
xchg
mov
push
pop
dec
jmp
cmpb
adc
out
push
bound
pushf
and
std
jb
jbe
lcall
test
enter
repz
fs
jae
cmp
jl
dec
lret
cmp
mov
add
and
or
sub
sbbl
iret
inc
xchg
mov
jge
movsb
lcall
into
call
lds
jl
je
pop
xor
adc
add
inc
pusha
add
stc
add
cwtl
xchg
ljmp
nop
rolb
or
imul
rolb
pop
cmpsb
push
sti
enter
dec
jg
addr16
mov
jp
add
jae
push
rclb
aam
push
aaa
mov
jne
nop
or
mov
sbb
add
iret
sub
and
or
aas
fcoml
xor
sbb
cld
les
mov
iret
mov
cmpsl
jl
add
mov
or
fdivrs
jno
xchg
add
cmp
xchg
or
data16
filds
pop
ja
push
jmp
add
sti
sbb
dec
popa
add
lret
jmp
incl
ficoms
add
cmpl
push
aad
add
xchg
dec
push
dec
pop
push
add
ja
mov
in
jp
dec
pop
arpl
cld
cltd
add
push
popa
inc
push
add
jne
cmp
dec
push
iret
ja
adc
mov
cmp
and
mov
xor
lea
pop
imul
mov
pop
loopne
xorb
sub
data16
test
push
or
lock
inc
bound
sbb
xorb
test
dec
lea
scas
rcr
adc
add
fiadds
push
jmp
cmc
sti
sbb
sarb
push
shl
add
jbe
jmp
mov
and
cmp
xchg
add
jb
out
mov
outsl
sub
push
cmc
loopne
mov
push
fs
pop
das
dec
orb
outsb
push
sub
xchg
or
orb
daa
sub
add
stos
fnstcw
adc
lret
xorl
pop
push
icebp
sti
out
xor
mov
add
dec
fcmovnbe
xchg
pop
sbb
mov
sbb
pop
outsl
stos
push
cmc
jbe
pushf
nop
flds
cli
fwait
aaa
pop
pop
add
lret
dec
and
add
cltd
test
mov
add
notb
push
jle
mov
jae
ljmp
xchg
inc
mov
jmp
jp
test
sahf
inc
scas
add
rcr
test
lea
popa
pushf
loope
jecxz
lcall
in
icebp
mov
ds
xor
repz
sub
or
mov
icebp
jae
insb
or
push
loopne
loopne
aas
movd
adc
rolb
sbb
test
inc
sti
add
ljmp
cli
sbb
add
adc
and
bound
out
fsubl
add
fldenv
add
mov
push
jo
cli
add
repnz
aas
inc
cld
andl
cmp
test
pusha
pop
repnz
mov
jnp
push
mov
movsl
adc
add
push
mov
mov
cmp
popa
inc
sub
xor
outsl
dec
pop
gs
or
xor
jp
les
fcoms
sbb
jmp
lds
fiadds
mov
add
inc
into
inc
or
aas
push
add
sbb
sti
add
mov
add
into
in
ljmp
lock
fdivrp
lea
and
add
fstpl
push
inc
push
ds
pop
sub
ret
add
mull
mov
pop
add
fwait
sub
hlt
jmp
in
inc
mov
rolb
add
out
pushw
jmp
pop
mov
dec
adc
pop
cli
mov
ret
pop
cmp
loop
outsb
enter
xor
xchg
mov
or
adc
ds
add
stos
pop
in
pop
vmovsd
xchg
int
add
mov
stos
outsl
jns
add
cmp
pop
mov
add
dec
or
add
test
addb
fwait
mov
jnp
shlb
mov
into
js
ret
rcl
pusha
adc
ljmp
jae
adc
leave
notb
xor
pop
xchg
mov
shr
lock
sbb
add
dec
das
pop
test
test
push
mov
pop
popa
add
pop
push
add
mov
dec
pop
jnp
out
xchg
ror
push
push
daa
add
xorl
push
cmp
sbb
cwtl
push
rcll
push
pop
add
jp
add
data16
and
fs
pusha
add
xchg
jbe
cld
jl
or
add
xrstors
pop
push
adc
cld
sbb
xlat
pop
xchg
add
fstl
out
das
cmp
add
pop
mov
jmp
add
and
lret
mov
in
mov
fwait
pop
repnz
rorb
dec
roll
sub
and
xor
loope
xor
and
or
mov
les
bound
call
jb
ficompl
loop
shld
cmp
push
mov
or
andl
sbb
xor
mov
push
lea
jmp
aam
xor
and
or
add
and
xor
cmp
loope
in
fiaddl
jns
paddq
add
inc
iret
xor
xchg
or
into
pusha
inc
out
jb
cwtl
lcall
xor
aam
mov
shrb
pop
and
int
dec
jae
inc
mov
or
xlat
jg
pop
aad
mov
or
jb
cltd
cmp
roll
aas
add
lods
fdivrl
les
stos
insb
jnp
imul
pop
enter
pop
mov
jbe
xchg
add
push
divl
sub
sub
xor
inc
push
dec
mov
mov
jge
add
imul
add
jns
mov
cmp
and
and
or
pop
enter
or
cmpsb
pusha
push
inc
xlat
inc
fadds
rcll
stc
in
sbb
shlb
ret
dec
data16
xor
jns
add
sbb
insb
mov
scas
out
add
test
ret
inc
adc
push
push
addr16
mov
pop
ret
sub
and
cli
popa
mov
add
lret
mov
sbb
shlb
mov
mov
sub
cmp
ss
add
or
lds
adcb
push
packssdw
add
imul
mov
mov
outsl
dec
cmp
or
imul
and
push
jb
add
add
xchg
or
verw
sub
and
mov
add
jecxz
insb
sbb
pop
loop
adc
add
and
add
push
xchg
adc
cmp
in
sub
sbb
mov
mov
pop
push
call
and
test
jmp
jecxz
popf
lahf
push
ret
bound
mov
add
fists
sbb
adc
mov
test
jo
cld
enter
iret
jns
inc
and
add
dec
std
adc
out
mov
mov
sbbb
push
jne
push
pop
sbb
fsts
fstl
imul
push
lret
jmp
mov
mov
and
push
sub
cwtl
inc
mov
aaa
mov
in
scas
orb
sub
je
icebp
add
jp
movsl
clc
pop
sbb
push
decb
leave
es
dec
nop
sbb
ret
sub
hlt
add
mov
xchg
push
les
loopne
and
in
inc
sub
sti
sbb
ficomps
mov
or
pop
in
scas
add
outsl
insb
mov
lea
ret
mov
lock
imul
jo
mov
add
dec
sub
lock
dec
jae
add
inc
jmp
ja
pop
lret
pop
sbb
mov
push
andb
adc
rcrb
cwtl
aas
int3
iret
push
mov
jge
cmc
xor
andl
cmpsb
ja
xor
sbb
test
fcmovne
jne
add
stos
xor
xchg
in
and
cld
aaa
mov
sbb
lahf
cwtl
xchg
jno
add
cmp
pusha
mov
nop
mov
pop
add
outsb
andb
push
mov
sub
mov
bound
jnp
jecxz
dec
xorl
pop
mulb
daa
sbb
xor
pop
ret
js
add
roll
in
sbb
dec
call
std
inc
arpl
cld
dec
popf
loopne
pop
and
add
xlat
orl
cmp
cmc
lods
push
add
std
add
in
arpl
jg
es
jge
inc
add
ljmp
test
cmp
dec
adc
jo
push
add
std
pop
mov
arpl
push
mov
xor
enter
mov
sub
push
jno
add
sarl
push
pop
pushf
out
outsb
shl
incb
push
mov
jge
mov
sbb
dec
mov
push
mov
sub
in
cs
jno
mov
lds
xchg
mov
and
mov
push
xchg
nop
xchg
or
xor
add
fisttpl
jl
push
add
rorb
xlat
ret
xor
add
mov
add
adcb
enter
lcall
mov
lahf
ftst
daa
add
push
shrb
les
insl
jae
cmpsl
jo
mov
sbb
adc
dec
outsl
aam
sbb
sbb
adc
rclb
or
cltd
or
dec
mov
jle
test
mov
mov
in
fisubl
dec
rcrb
jbe
add
cmp
addb
and
and
add
mov
jbe
add
pusha
jp
pushl
push
sarl
mov
and
pusha
rcrb
cmp
adc
int3
popl
cmp
push
shrl
push
std
sbb
inc
out
and
jnp
mov
rcl
inc
lret
cmp
adc
shl
pop
mov
lahf
pop
loopne
add
bswap
or
out
in
les
pop
jbe
clc
cld
add
out
data16
ret
in
sbb
mov
je
outsb
xchg
jo
addr16
rcll
mov
test
cmp
mov
int3
ljmp
mov
add
pusha
int3
mov
fldl
fucomi
xlat
jle
adc
lds
pusha
or
cmp
das
dec
sub
movsl
imul
mov
mov
sarl
xchg
int3
imul
loopne
add
xchg
outsb
add
lds
popa
sub
mov
dec
icebp
push
mov
push
in
es
sub
mov
popa
outsb
fbstp
and
dec
sti
push
sub
xor
insb
inc
out
dec
push
test
sbb
jmp
xor
or
push
cmpsb
jg
dec
test
adcl
pop
jno
cs
add
push
xchg
fmuls
in
cmp
rcrb
adc
xor
sub
jo
xor
cmp
pop
cld
inc
movsb
mov
cmpsl
dec
enter
in
mov
data16
test
and
popa
adc
je
dec
dec
bound
sbb
fistps
inc
or
iret
les
fs
mov
lahf
sub
addb
adc
push
adcb
test
inc
xor
cli
daa
aaa
add
lds
or
ds
jne
movsb
sbb
mov
test
and
cmp
sti
xor
orl
pusha
mov
shrb
leave
push
cmp
out
pushf
subb
jne
data16
or
rcll
cmp
mov
cltd
test
xchg
xchg
cli
dec
add
sbb
adc
jo
push
pop
inc
jecxz
hlt
mov
in
add
lock
movsl
ja
mov
pop
imul
xor
jno
push
cmc
mov
pop
out
and
push
xchg
cmpsb
adc
add
push
xchg
add
add
pusha
cmp
or
lcall
adc
pop
insb
add
add
sarb
ljmp
mov
xchg
ss
test
mov
loope
stc
gs
mov
push
dec
sti
lods
dec
adc
aaa
pop
out
xor
in
bound
jnp
xor
inc
rolb
ret
enter
and
dec
add
daa
out
add
jns
pusha
jp
sbb
pusha
cmp
xchg
pop
into
push
orb
pop
add
test
jp
aam
cld
or
pop
cltd
xor
pop
xchg
mov
and
and
repnz
inc
adc
or
mov
pusha
into
outsl
out
xchg
inc
xor
and
nop
cli
cmp
rclb
lret
aad
jnp
daa
fdivrs
add
jl
out
sbb
push
orl
add
mov
fsts
mov
jl
nop
loopne
add
outsl
inc
add
jle
fnstenv
js
ficoms
mov
loopne
sarb
and
out
imul
xlat
pop
dec
lods
add
inc
push
mov
pop
mov
js
fsubs
dec
sbb
inc
cmp
cmc
iret
jecxz
das
test
ret
add
les
pop
pusha
int3
add
out
popa
pop
cmc
jg
or
pop
les
fmull
js
xor
cmp
outsb
roll
shrb
cmp
in
jl
sbb
fnstcw
add
into
or
insb
movsl
test
je
mov
rclb
cmp
mov
mov
xor
ret
out
pushf
and
pusha
inc
push
mov
test
and
bound
mov
mov
movsl
xor
jg
and
ret
sarl
inc
insl
frstor
sbb
rclb
jle
movl
xor
inc
add
mov
mov
adcl
push
movsl
mov
call
push
loop
dec
clc
inc
loop
add
xchg
xor
mov
cli
and
outsl
fisubrl
add
lock
add
loope
or
fdivl
addl
xchg
xor
stos
ljmp
inc
cmp
stc
ja
call
add
aad
sbb
push
test
ss
mov
mov
out
cs
inc
cwtl
sub
lods
clc
inc
sti
insl
fnstenv
and
les
iret
das
lret
shlb
mov
outsb
push
popw
sub
clc
pop
jnp
js
in
les
cs
push
or
jp
cs
adc
jb
sub
dec
xor
xchg
mov
mov
pushw
rclb
or
mov
or
dec
jnp
hlt
shll
iret
test
sbb
cmp
test
imul
pop
inc
or
pop
in
mov
adc
xor
pushf
cmp
repnz
sub
pusha
cmp
xlat
cld
or
jo
mov
dec
leave
pop
sbb
mov
imul
addb
xlat
in
inc
lcall
xor
fwait
ret
cmpb
and
push
mov
push
jae
mov
cmp
shrb
xlat
xor
aam
or
xor
pusha
cmp
cmpsb
mov
jp
sar
mov
mov
push
addl
inc
repz
lea
mov
mov
sbbl
lahf
outsl
add
jbe
cltd
sbb
mov
cmp
dec
dec
int3
xchg
aaa
pop
add
ret
or
add
pop
test
add
in
sbb
xlat
js
mov
sahf
cmp
jns
and
cltd
ror
sbb
mov
iret
arpl
insb
xor
cmp
mov
ret
lret
or
pop
cmp
adc
pushf
and
outsb
fs
rcll
jle
mov
icebp
insl
fwait
adcb
pushf
mov
mov
rolb
inc
push
out
fadd
inc
je
or
repz
cmpsl
or
mov
and
mov
adc
andb
lret
add
daa
lock
imul
test
and
add
insl
and
rorb
clc
xchg
or
sub
adc
mov
xor
add
add
aad
xchg
cmp
mov
ja
adc
add
adc
movsl
cmp
inc
adc
shl
lock
pop
dec
les
push
mov
xchg
xor
int3
add
inc
push
shr
sub
ja
decl
fs
lds
addb
nop
movsb
scas
adcb
inc
add
add
xor
cmpsb
xor
std
icebp
xor
les
cmc
jmp
jbe
js
lock
sti
int3
xor
dec
add
pop
movsb
xor
mov
in
sbbb
rcrb
rorl
test
cwtl
pop
add
add
aas
pop
xchg
int
inc
and
adc
push
in
pop
add
shl
mov
or
popfw
fiaddl
std
adc
push
add
loope
dec
lds
xor
push
add
loop
jl
cwtl
cmp
add
lock
js
inc
inc
or
lea
sub
cmp
mov
dec
hlt
lea
into
lret
mov
fmuls
push
mov
push
decl
pusha
shl
push
sbb
je
ja
inc
cmp
aaa
push
pop
pushf
jle
hlt
dec
sbb
shll
cmp
jbe
sbb
loop
outsb
fidivl
es
daa
inc
shlb
int
jo
sub
enter
cmp
or
dec
mov
sbb
sbb
js
pop
inc
stc
add
mov
ret
xor
cmpsb
push
lret
or
btr
cmp
repz
aam
sbb
movsb
pop
cmp
fisttpll
pusha
xor
cmp
xchg
nop
cmp
or
sub
mov
cltd
sbb
les
cmp
cmpsl
cmpsb
mov
fcompl
sub
and
ret
shl
xchg
das
dec
and
add
pop
inc
scas
imul
jo
lea
stos
xor
mov
rclb
mov
out
add
icebp
mov
insb
addl
xor
into
inc
dec
mov
mov
xor
or
lods
insl
in
cld
bnd
add
lret
inc
adc
mov
push
fsubs
pop
cltd
pushf
add
mov
pushf
int3
imul
call
xor
jge
or
les
sub
out
xchg
sbb
cmc
cmp
lahf
mov
cmpsb
jmp
mov
clc
sahf
fs
and
push
adcb
lea
add
mov
inc
or
shr
jp
cltd
js
xor
out
mov
add
repz
and
testb
out
add
jnp
push
push
pop
mov
cmp
push
mov
je
add
xchg
mov
cmp
mov
jno
add
data16
push
stos
aad
pusha
in
xchg
push
cwtl
call
jecxz
shlb
rcrl
mov
xchg
push
shrb
and
enter
mov
insb
inc
les
xor
jo
adc
mov
mov
enter
add
ret
xchg
repz
pop
leave
add
sbb
sub
add
dec
add
cld
and
add
data16
inc
pop
clc
mov
pop
or
pop
leave
mov
cltd
pusha
sbb
jbe
add
test
and
nop
jb
adc
scas
cmp
leave
jecxz
dec
nop
in
pop
enter
fidivs
cmpsl
test
cmp
aaa
pop
loopne
pop
mov
hlt
mov
sub
pusha
aam
inc
push
xchg
mov
add
aam
stos
pop
inc
insl
cwtl
test
dec
test
cli
pop
sub
das
adc
int3
icebp
dec
pusha
cmpsl
cli
shl
or
push
add
xor
and
push
addb
jb
xchg
dec
out
mov
inc
mov
sub
cltd
sub
shrb
insb
add
movl
add
fsubs
mov
inc
push
pusha
mov
push
mov
cmp
xchg
and
sbb
insl
leave
in
adc
mov
sub
push
aad
daa
jb
ret
add
push
and
int
lds
fdivs
sarl
fs
repnz
pop
jp
rcrl
cwtl
add
xchg
ljmp
jbe
dec
imul
inc
test
pop
mov
xorb
add
popf
cli
shlb
out
repz
enter
add
fadd
adc
ret
sub
rcrb
push
lock
lcall
std
enter
shr
dec
in
xchg
add
not
sub
call
insl
std
sub
es
jmp
adcl
sbb
inc
pushf
out
add
xchg
or
cmp
sarl
mov
sub
pop
jno
dec
call
sub
pop
jmp
jb
lods
push
icebp
es
adc
int3
and
inc
nop
xchg
or
pop
call
pop
xor
cli
fchs
pop
imul
adc
lock
adcb
mov
mov
push
test
test
hlt
and
pop
lds
test
loopne
cmp
inc
in
test
jmp
pop
fwait
add
mov
adc
jb
call
mov
lea
sti
xchg
xchg
lods
add
jmp
dec
push
clc
das
cmp
cmpsb
cld
pop
add
bnd
mov
ljmp
jl
xor
jo
sahf
add
inc
sub
add
pop
cmp
rclb
add
lods
dec
jb
pop
xchg
dec
or
mov
jns
nop
and
pop
mov
push
popa
cmp
js
jl
or
shlb
lds
pushf
sbb
mov
pop
add
lods
cmp
popa
pop
inc
call
and
cmp
lahf
push
add
xchg
sub
mov
cli
add
or
pop
dec
mov
pop
les
stos
bound
xchg
out
mov
repnz
fcomps
js
add
js
movd
sbb
or
and
adc
inc
sarb
jmp
push
movsb
out
and
aad
roll
ljmp
inc
add
xor
add
lods
inc
mov
mov
inc
lea
orb
mov
nop
scas
or
int3
adc
sbb
add
push
popl
scas
mov
hlt
and
inc
sub
mov
push
lds
cmp
jg
push
enter
xchg
lcall
hlt
jo
mov
dec
int
fcoms
test
mov
and
adc
adc
lods
loopne
add
std
nop
test
test
xor
inc
fwait
and
xchg
jo
or
mov
lahf
mov
pop
fcomps
mov
inc
cmp
imul
add
movsb
lahf
jl
sbb
mov
or
jae
add
in
and
jno
or
lret
orb
add
scas
mov
add
outsl
lods
jl
mov
add
adc
pop
push
pop
stos
arpl
xchg
mov
add
mov
stos
xlat
test
mov
icebp
push
fadd
jmp
push
gs
add
push
hlt
pop
jecxz
mov
mov
add
and
in
inc
fs
and
add
pop
jbe
pop
and
mov
inc
adc
pop
sub
idivl
cmp
lods
addr16
pop
sbb
mov
cmc
das
cmp
ret
jg
adc
out
mov
mov
cwtl
scas
mov
imul
push
aam
or
loope
in
je
inc
cltd
xlat
mov
jmp
xor
popa
adc
sub
enter
add
xor
idivl
aas
inc
adc
mov
xlat
nop
hlt
insl
and
jb
push
in
loopne
test
mov
std
or
or
test
push
xor
add
xlat
rclb
clc
into
and
inc
aas
xchg
cmp
daa
inc
and
aam
inc
lods
xlat
shlb
fisttpl
leave
sub
es
push
ret
push
or
mov
lret
inc
je
push
pop
lods
xchg
sbb
sbb
push
dec
in
sbb
dec
sbbb
rcr
sbb
dec
pop
add
cli
in
out
imul
and
mov
add
cmp
and
jnp
cwtl
pop
loope
add
jo
mov
mov
mov
shlb
in
les
add
test
in
pop
add
jp
in
sub
nop
mov
cmpsb
jbe
loopne
sbb
sbb
xchg
aas
mov
xchg
mov
xchg
arpl
cltd
pushf
add
sub
mov
add
iret
pusha
mov
pop
lea
or
int
push
and
cwtl
add
popf
adc
imul
or
pop
push
shll
je
repnz
add
and
jmp
aad
call
lahf
push
xchg
fsts
aas
pop
sbb
repnz
sub
je
cmp
in
sahf
xorb
mov
push
into
jbe
rcrw
dec
sbb
push
or
lock
or
add
push
xchg
inc
in
pop
lock
or
inc
std
inc
add
sub
syscall
fsts
lret
mov
or
outsb
sub
inc
or
mov
cmp
cmp
adc
shll
dec
bound
arpl
jno
pop
mov
mov
and
rorl
ds
imul
movsl
je
cmp
adc
out
mov
mov
subl
fs
and
mov
ljmp
inc
repnz
pushf
adc
lea
ss
add
lds
js
in
push
inc
mov
stc
or
dec
mov
in
dec
and
mov
jnp
xor
mov
inc
mov
xchg
jnp
ret
and
mov
add
out
js
enter
pop
jbe
pop
push
mov
xor
xlat
dec
insb
cmp
inc
jbe
hlt
xor
adc
add
mov
sub
leave
xchg
ja
pop
call
xor
lods
xor
xor
das
stos
push
movsl
inc
or
sbb
sbb
les
dec
enter
inc
hlt
sub
push
sbb
enter
jnp
add
fiadds
jno
or
push
sti
leave
lret
mov
sub
jl
data16
dec
or
aaa
orb
or
jno
inc
and
pop
int3
xchg
mov
inc
jno
stos
cmp
pop
rolb
int
xor
sub
subb
xchg
stos
jo
adc
cmp
lcall
cwtl
rclb
mov
mov
and
add
outsb
push
je
xor
add
jnp
das
scas
repnz
cwtl
jo
fiaddl
in
sub
sbbb
fisubrl
cmc
jecxz
rcl
dec
fs
icebp
cwtl
js
loope
js
mov
cmp
in
test
mov
aam
std
lcall
fs
mov
sbb
sub
fisubl
dec
or
mov
adc
adc
push
fdivp
add
lret
aaa
add
sbb
outsb
pushf
loopne
add
out
xor
jle
add
cld
push
iret
or
sub
sub
std
lahf
dec
xor
rorl
cld
add
sarb
stos
mov
cmp
inc
call
push
lahf
adc
loope
add
insb
add
inc
dec
dec
clc
rcrb
ror
adc
and
xchg
xor
jno
and
push
stos
add
fdivl
movsb
jb
dec
dec
enter
pop
and
pop
mov
outsl
scas
icebp
lock
inc
or
mov
push
and
push
jecxz
add
call
orb
mov
sbb
lahf
or
aas
dec
xchg
pop
fidivrs
mov
nop
clc
mov
xor
jge
adc
fsubrl
insb
adc
movl
test
sub
fwait
addr16
adc
mov
mov
mov
inc
icebp
sub
nop
sub
ret
dec
pop
inc
sti
mov
sbb
and
jg
add
pop
and
loopne
hlt
fadd
fucom
xchg
jmp
add
push
in
sub
mov
arpl
sub
push
stc
sbb
lds
call
jmp
xchg
push
add
subb
fdivr
adc
add
mov
add
cmp
dec
in
xchg
or
outsl
inc
pop
js
push
xchg
pusha
aam
jbe
scas
add
aaa
add
jae
or
jo
insb
lock
adc
and
in
xchg
mov
push
adc
and
xor
cmp
jnp
mov
roll
push
mov
or
adc
mov
adc
mov
lcall
nop
repnz
leave
arpl
scas
push
mov
in
add
pop
ljmp
sub
cmovnp
out
add
jg
pop
and
add
xchg
stos
scas
adc
mov
sub
xor
or
mov
dec
lds
test
stc
shrb
popf
adc
push
xchg
fsubs
rorb
insb
add
mov
aaa
rcll
xor
repz
jp
loope
cld
xchg
je
push
mov
lods
add
pop
sarb
sarb
adc
inc
jp
xorl
mov
fdivl
push
sub
cmp
xchg
jno
dec
jecxz
loope
hlt
mov
push
push
addb
add
or
mov
out
fs
and
aaa
test
test
xor
sbb
add
or
add
jge
xchg
sub
imul
stos
shlb
push
jecxz
fmull
xor
lods
xchg
pop
andb
xchg
mov
sbb
bnd
push
sbb
lahf
add
outsb
ret
sub
shr
icebp
inc
or
in
adc
inc
jle
pop
jmp
popa
add
icebp
lret
movsb
mov
aam
mov
shll
insb
sub
sub
aas
sub
sbb
je
mov
dec
push
sbb
fidivl
jecxz
fwait
shrl
xlat
sub
testb
sarb
lret
rorl
sub
jg
hlt
call
dec
xchg
test
js
aas
jb
push
cwtl
rolb
dec
orl
sub
lds
and
or
int
jno
in
xlat
xor
xor
jnp
mov
std
xor
mov
rcr
cli
dec
add
jb
cmp
out
adc
jne
mov
cmp
mov
scas
xchg
popa
lock
add
jo
cltd
daa
xlat
push
fldenv
js
fdivp
mov
xchg
fs
iret
mov
sbb
lods
inc
cmc
stos
mov
fnsave
push
add
cmp
adc
mov
dec
adc
xor
cmpsl
loopne
sub
add
fisttpl
loope
push
test
into
in
movsb
xchg
inc
lock
je
or
jp
add
cmp
arpl
js
mov
inc
adcb
insb
cmpsl
outsl
gs
stos
inc
mov
filds
in
xchg
mov
add
lret
cmp
pushf
adc
mov
or
xor
add
lods
cmp
adc
bnd
sbbl
dec
xchg
adc
or
fistps
lods
add
and
sbbl
jo
negb
add
jmp
cmc
dec
cmp
scas
xor
cmp
sbb
movsb
cli
inc
cmp
and
aaa
adc
xor
sub
add
inc
jne
jge
sub
inc
adc
push
add
jbe
xor
inc
dec
mov
in
add
andb
mov
mov
call
movsb
jae
in
mov
cld
and
pop
or
sbb
out
and
jle
sysret
ds
je
je
stc
jl
add
pop
lds
hlt
orl
jbe,pn
push
or
xchg
ljmp
imul
inc
mov
rcll
stc
and
out
pop
lret
lahf
ds
and
sbb
xor
adc
out
fstl
arpl
add
jno
cli
inc
add
push
scas
aam
sbb
jbe
push
lds
stc
out
bound
fwait
in
jle
loopne
and
add
mov
hlt
add
adc
xor
lock
mov
pusha
shl
je
movsb
add
cwtl
lret
mov
add
mov
sbb
mov
mov
mov
gs
enter
cmp
pop
out
clc
ss
outsl
aam
cmp
mov
xor
add
inc
lahf
test
or
add
and
xchg
dec
inc
adc
cmc
int3
and
add
lock
dec
aaa
int
push
lea
or
mov
pop
or
arpl
jo
pop
loop
les
lock
mov
push
mov
out
inc
iret
pop
mov
pop
add
in
mov
or
or
movntps
pop
add
add
imul
andl
jno
and
or
addb
out
lock
lds
adcb
bound
adc
out
inc
add
lods
cmp
scas
pop
or
add
dec
sub
fbstp
inc
inc
test
callw
xchg
jns
aam
push
ljmp
mov
cmp
adc
inc
mov
jl
andb
subb
ljmp
repz
insl
cmp
and
jle
int3
cld
aad
subl
fsubs
or
adc
or
loopne
lods
xchg
fs
push
and
xchg
add
inc
hlt
test
pop
dec
lock
push
xor
cltd
sbb
dec
fmull
repz
addl
hlt
sub
push
pushf
jbe
clc
sbb
pushf
aas
ret
pop
sti
mov
or
jo
aaa
lods
cltd
dec
lods
cmp
lret
xorb
int3
mov
ja
pop
pop
adc
out
repnz
lock
in
sbb
stos
and
sbb
push
scas
xchg
inc
lret
mov
add
push
enter
mov
fiaddl
pop
pusha
inc
and
dec
adc
ret
inc
xor
xor
iret
cltd
test
jecxz
xchg
xor
and
nop
enter
daa
fiaddl
cmc
add
aam
clc
dec
shl
ss
orb
int3
js
pusha
sbb
sti
add
addr16
adc
cmp
and
stc
insb
pop
imul
and
sbb
outsb
mov
dec
mov
sbb
int3
pop
inc
adc
mov
pusha
adc
pop
mov
lcall
sbb
movsb
andb
push
pop
lds
or
jecxz
dec
add
xor
lea
cmp
push
int3
adc
xchg
and
addr16
ret
sub
xchg
orb
mov
mov
es
mov
cld
sbb
movsb
nop
jg
je
mov
adc
dec
push
incl
dec
fs
repnz
xchg
into
icebp
add
nop
lods
cmpsb
xchg
les
and
push
fcomps
aam
xor
pop
dec
insl
test
add
loopne
and
call
inc
jp
clc
xor
jg
add
push
inc
push
lcall
addr16
cld
inc
in
cltd
sahf
idivl
add
out
or
shlb
dec
lcall
in
loope
or
rclb
inc
and
and
mov
ficomps
sub
add
push
or
and
push
fs
inc
xchg
das
jle
sbb
add
mov
call
js
cwtl
in
sbb
repnz
xchg
adc
pop
lock
add
scas
lret
inc
sti
push
nop
push
sub
mov
or
adc
or
mov
jp
sbb
addl
jo
xor
and
andb
inc
inc
int3
dec
mov
sbb
add
ja
xchg
addr16
mov
inc
pop
js
push
mov
movsb
cmp
push
or
sbb
add
imul
pusha
ja
adc
pop
repz
sbb
clc
mov
mov
rorl
cmp
in
stos
add
addb
in
mov
push
jns
lret
push
mov
dec
push
dec
pusha
and
aad
mov
lahf
mov
cmpsb
mov
dec
mov
int3
add
jnp
jbe
pop
adc
xor
mov
in
add
dec
mul
pop
mov
push
adc
lcall
dec
xchg
add
xorb
sub
push
inc
shlb
xlat
or
xor
std
sub
and
das
roll
or
in
jecxz
adc
icebp
cmp
mov
cmp
jl
mov
xchg
add
nop
sub
and
mov
andps
aam
dec
loop
push
push
push
adc
push
mov
mov
nop
mov
add
xchg
imul
aaa
lds
mov
cmp
imul
loopne
sub
add
call
adc
adcb
push
cmp
pop
out
xchg
or
mov
sti
add
imul
jne
cmp
movsb
iret
lock
mov
lret
dec
mov
jns
push
insb
in
adc
gs
lret
pop
cmc
jecxz
sahf
sub
jns
data16
dec
popa
mov
or
in
in
xchg
and
mov
sbb
cmp
jns
nop
enter
sbb
addb
add
jp
dec
add
mov
andb
cmp
sbb
push
in
xor
mov
divb
push
pop
jb
cmp
int
or
mov
enter
pusha
and
mov
fs
cld
mov
enter
dec
pusha
cwtl
pop
outsl
jnp,pt
add
cmp
pusha
arpl
adc
scas
dec
hlt
pushf
lahf
int3
lcall
data16
and
mov
fmuls
sbb
mov
and
ficomps
and
jecxz
add
inc
loopne
or
in
nop
fs
jmp
inc
dec
sub
pop
ret
adc
jbe
pusha
adc
aas
jae
jg
xor
and
mov
ret
data16
sub
out
std
ret
add
cs
push
dec
add
jne
mov
ret
cltd
add
sub
jmp
scas
add
nop
sbbb
cmp
mov
adc
cmpb
cld
insb
add
or
insl
add
inc
fisubl
push
cmp
scas
adc
mov
lock
add
outsb
mov
fidivrs
mov
cmp
jb
mov
and
cmpsl
adc
out
testl
dec
push
sbb
stos
fs
sbb
insb
inc
iret
pop
jmp
pop
jno
shr
cmp
sub
call
mov
movl
cmovge
add
push
jl
add
push
fs
add
fcmovb
jg
lcall
stc
jno
push
and
cmp
dec
test
and
push
lahf
std
pop
inc
push
cmp
add
sub
fs
leave
mov
jp
mov
or
add
mov
jne
sub
sbb
xchg
add
sub
xchg
nop
shl
add
xchg
push
cmp
cmpsl
addb
add
push
int3
or
cmp
aam
fiadds
sbb
jecxz
mov
pop
test
pop
das
pop
dec
mov
mov
add
lods
ret
and
jns
sub
dec
int3
daa
int3
rclb
gs
mov
lods
add
dec
stos
mov
add
mov
sarb
subb
push
and
movsl
or
jl
sar
fs
inc
xchg
pushf
push
sbb
push
push
add
add
lahf
adc
push
pop
gs
mov
sub
sbb
dec
push
icebp
cmp
mov
clc
icebp
adc
mov
pop
leave
add
jle
sub
and
stos
push
mov
and
adc
add
add
cmp
cmp
mov
in
xchg
in
pop
shrl
jge
mov
and
sub
lods
add
push
mov
stos
pop
sbb
addr16
inc
mov
and
test
sarb
inc
fdivrl
mov
stos
add
inc
and
fld
mov
cmp
mov
and
add
adc
mov
or
xchg
push
cmp
rcr
ret
cld
jmp
rolb
add
fadds
jbe
inc
lret
ret
mov
lock
fwait
xor
pop
iret
adcb
test
dec
imul
pop
mov
andb
jl
in
mov
pusha
add
xchg
in
ret
cmp
or
jmp
mov
in
andl
adc
shrd
or
or
pop
lock
xchg
out
add
mov
and
mov
sbb
push
dec
mul
fcoml
lods
mov
adc
and
ret
call
mov
adc
add
in
add
pop
lret
mov
ljmp
lea
sbb
test
push
add
pop
popf
push
lret
pop
and
shrl
dec
and
mov
sarb
loope
adc
or
sub
add
sar
add
daa
sbbl
cmp
out
mov
clc
add
gs
inc
in
leave
test
adc
add
or
add
jl
mov
xchg
add
xor
push
add
pop
push
shlb
mov
lea
fsubrs
mov
dec
xor
adc
add
sub
enter
push
out
add
bound
loope
repnz
int3
push
mov
addr16
add
mov
fs
pop
mov
add
push
mov
cmpsb
jmp
cs
shlb
add
mov
ret
cs
cmpl
jo
inc
imul
out
cld
pushf
cmpsl
pop
nop
pusha
icebp
out
loop
adc
push
pop
ja
push
adc
sub
adc
lea
js
stc
orb
shll
in
fisubs
lret
mov
je
icebp
inc
in
loop
push
insl
lock
mov
mov
push
iret
push
add
mov
ss
clc
sub
and
sub
xchg
mov
lret
xchg
cli
and
shl
repnz
or
ljmp
and
mov
shlb
mov
xor
ficomps
mov
lret
mov
sub
and
out
add
adc
add
mov
out
in
pop
mov
cmc
push
xor
rol
dec
xor
dec
pop
mov
lock
xor
lds
adc
add
jg
in
inc
in
fldt
or
jecxz
jle
jo
clc
xchg
jg
adc
cld
lock
add
icebp
adc
ret
pop
leave
push
adc
fiaddl
lea
adc
jne
cwtl
subb
mov
jecxz
cmpsl
xchg
push
sub
loopne
jb
xor
cmpsb
mov
addb
popa
ja
jnp
sahf
and
mov
shrl
xor
jl
push
lcall
adc
xor
xchg
mov
xchg
pop
xor
dec
jo
add
sub
pop
insl
cmp
and
ja
jnp
push
sbb
xor
in
ljmp
cld
add
fs
mov
mov
incl
dec
scas
sbb
push
jecxz
pop
jbe
xor
or
add
push
pop
enter
or
mov
or
out
sbbl
out
in
dec
aaa
inc
pop
cld
dec
mov
or
push
pop
adc
dec
jbe
jo
leave
fmuls
leave
cmp
test
das
rclb
jb
dec
mov
xchg
or
js
and
jp
in
and
inc
add
dec
movsb
xor
add
aas
pop
inc
cltd
mov
xlat
adc
stc
subb
dec
add
or
dec
add
jnp
mov
xchg
add
mov
test
xor
inc
jp
cli
jmp
xor
mov
lcall
xchg
std
ficomps
or
mov
jnp
cmp
mov
inc
movsl
bound
subb
add
add
mov
scas
sub
popf
jg
add
pop
push
dec
adc
xor
add
subb
cld
xchg
sahf
les
push
and
inc
cs
jne
test
jle
or
test
out
mov
dec
pop
inc
xchg
fidivl
or
push
nop
add
cmp
or
fists
test
adc
cli
jnp
shlb
inc
loope
sbb
fdivrl
pusha
les
add
adc
or
cmp
loopne
mov
jmp
sub
adc
xchg
mov
dec
jns
int
popf
push
mov
mov
push
je
pop
test
movsb
nop
enter
rcl
or
or
sub
incb
jns
add
mov
movsb
dec
mov
leave
sub
or
stc
jge
popa
or
or
mov
fcom
cmp
cwtl
dec
popf
lock
pop
inc
icebp
lcall
stc
pop
cmpl
fsts
sbb
adc
mov
enter
insb
inc
je
ss
jb
or
dec
icebp
mov
inc
bound
aad
sub
adc
push
aam
add
dec
jp
int3
add
mov
jl
add
jns
pop
lret
imul
or
addr16
jo
inc
int3
mov
enter
sbb
std
pop
sub
mov
call
lret
mov
enter
cmp
lock
imul
or
push
add
sbb
inc
mov
mov
jl
pop
loope
cs
inc
dec
xorb
rcrl
add
jo
movsb
and
test
jmp
loop
clc
fwait
mov
xchg
lcall
ljmp
mov
shrb
lods
sub
inc
pop
mov
xchg
callw
push
and
add
mov
shrl
add
cs
jle
adc
cmp
insb
pop
mov
add
test
xor
mov
mov
sbb
clc
ds
xor
in
loope
add
adc
or
jo
mov
add
fnsave
or
cld
fs
inc
pop
aad
stc
xor
push
in
fs
push
scas
addr16
inc
mov
pusha
or
cli
lret
xlat
outsl
and
shlb
inc
stos
mov
mov
mov
repz
roll
jo
sbb
jbe
and
lahf
xchg
in
cld
call
repnz
ds
je
add
popf
test
mov
clc
cmp
pop
out
hlt
push
push
add
jle
repz
xchg
nop
in
mov
out
mov
inc
or
inc
sub
inc
sbb
sub
xchg
cmp
sti
les
sbb
repz
inc
mov
loop
shlb
pop
add
pop
cmp
xchg
mov
cmp
int3
lods
sub
hlt
aaa
das
inc
pop
je
jo
jae
add
into
pusha
adc
push
cs
cmpsl
sbb
sub
leave
loop
or
dec
sub
shl
add
test
imul
out
push
addb
cmpsb
fdivrs
pop
iret
cli
push
mov
pop
scas
jb
and
mov
ja
add
iret
push
pop
add
lock
add
xor
jl
jnp
adc
das
mov
pop
js
add
jp
std
pop
push
push
and
and
lock
cltd
push
fs
ret
fadds
ficomps
sti
adc
cmp
or
push
fcoml
mov
nop
sahf
mov
dec
imul
clc
cmp
into
cmp
mov
lock
add
test
sub
sub
dec
les
cmpsl
adc
lods
mov
mov
dec
mov
inc
mov
cltd
cld
loope
shr
xor
clc
out
xchg
add
add
jge
rorb
and
push
mov
test
mov
xor
jo
mov
negl
mov
mov
pop
add
in
mov
cmc
stos
add
aad
jmp
cld
xor
add
sub
mov
inc
or
and
test
xchg
inc
into
push
test
sub
cmp
and
cmpsb
adc
imul
mov
pop
jmp
pop
sub
arpl
das
pop
call
pop
dec
ret
fstps
ret
adc
fimull
mov
adc
sbb
js
in
pop
adc
xor
push
sbb
lret
and
dec
adc
pop
push
mov
pop
rorl
mov
add
imul
ret
es
cmc
dec
jo
xchg
adc
in
insb
pusha
call
fdivr
addr16
inc
mov
mov
add
xchg
mov
jnp
mov
scas
addl
icebp
lahf
mov
incb
cld
or
std
insl
test
int3
jp
insl
jne
clc
icebp
add
dec
jge
mov
jns
pop
sbb
xor
adc
pop
and
jo
roll
cmc
push
daa
jne
stc
xchg
add
in
stos
shlb
shlb
add
inc
gs
out
adc
loopne
pop
jmp
mov
int
pop
xlat
mov
mov
mov
fs
les
insl
addr16
in
add
mov
xchg
scas
xor
imul
or
loopne
mov
mov
mov
xchg
movsb
pusha
aad
sarb
mov
cmp
jl
aas
mov
push
mov
jl
sub
sub
jl
adc
call
imul
dec
mov
mov
test
rol
ds
cmp
test
pop
dec
xchg
push
jle
inc
add
loopne
dec
mov
dec
fwait
adc
inc
cmp
or
xchg
ss
loope
lock
adc
cmp
mov
pusha
sub
mov
xor
jae
pop
out
lods
pop
test
iret
inc
jge
xchg
rclb
mov
mov
sbb
fsubr
outsb
and
push
mov
xor
mov
scas
dec
push
add
imul
push
bound
mov
sub
push
adc
std
dec
test
setb
test
xchg
jb
add
popf
icebp
or
lds
loope
add
idivb
lods
adc
jbe
les
mov
add
int3
xchg
xor
stos
inc
mov
movsl
add
mov
inc
dec
fucomi
imul
sub
shll
mov
vxorps
sbb
repz
lret
add
mov
xlat
das
int3
add
push
sbb
and
or
lcall
inc
sarb
lock
out
adcb
je
or
aam
pop
inc
push
movsb
jae
dec
cmovno
lretw
xchg
mov
cmp
mov
xor
lds
cld
cld
mov
arpl
aad
push
adc
add
mov
and
mov
add
push
jno
int3
push
in
jo
enter
and
in
imul
roll
xchg
mov
in
outsb
add
xchg
cmc
loop
jb
leave
mov
call
adc
repnz
add
jg
int
fs
movsb
addr16
dec
dec
add
cmpsb
shlb
loopne
cmpsl
dec
xor
sbb
pusha
inc
adc
mov
call
sbb
mov
cld
xchg
push
je
add
sahf
fwait
push
insb
call
sbb
xor
or
pop
aad
orl
pop
sbb
rcrl
nop
in
mov
loop
xor
sarb
test
dec
jge
test
lods
or
and
xlat
mov
pop
dec
add
leave
xor
inc
push
rolb
mov
mov
call
add
add
lret
or
int
push
pop
fdivl
pop
mov
and
imull
inc
push
dec
mov
dec
fisubs
js
add
out
data16
repnz
push
and
mov
nop
test
shlb
lcall
mov
flds
movzwl
dec
jg
adc
adc
fsubl
insb
dec
addb
or
lcall
mov
xchg
dec
jo
shll
loope
mov
adc
imul
mov
cmp
mov
cmp
or
aad
adc
pusha
fistpll
and
inc
movsb
add
sar
inc
sub
das
adc
adc
call
pop
jnp
cwtl
or
push
lahf
fs
xor
mov
add
mov
aaa
rcr
push
addr16
mov
mov
cmp
mov
sbb
sbb
add
loope
stos
in
mov
je
adc
bound
mov
jne
mov
dec
mov
sub
jg
cmc
add
jecxz
outsl
int
adc
or
aas
mov
add
inc
dec
sub
and
nop
mov
add
and
jmp
jp
out
push
push
cmpb
loopne
sbb
lods
mov
faddl
aam
cmp
xchg
rorb
push
movb
lret
xor
mov
in
dec
jle
dec
jnp
rolb
add
cwtl
dec
and
add
inc
push
sbb
dec
lcall
int3
pop
int3
mov
adc
aaa
mov
push
ret
or
std
popf
mov
loope
jle
and
push
mov
cmp
push
fisubrs
add
fwait
repnz
xor
add
outsl
sub
inc
or
add
sti
data16
stos
in
cld
and
mov
lods
add
add
xor
addl
adc
out
jnp
repnz
stos
adc
dec
push
mov
pop
mov
andb
push
mov
aam
pop
xor
andb
and
aas
adc
push
mov
rcll
leave
sub
andb
sbb
lods
push
jle
adcl
xchg
les
push
push
sub
dec
mov
dec
aaa
add
add
add
xor
add
pop
mov
inc
sti
add
pop
sbb
icebp
lods
pop
sbb
jae
stc
fdiv
add
adc
add
or
cwtl
call
pop
mov
clc
loop
adc
loopne
in
adc
push
adc
jae
nop
loopne
int3
and
inc
or
sbbl
movsl
popa
gs
idivb
jb
cmp
aam
jb
mov
mov
in
pushf
jno
or
pop
shrl
mov
cmp
and
sub
add
push
push
inc
fsubrl
daa
adc
pusha
adc
pop
sbb
add
xor
popf
xchg
add
dec
adc
add
jo
sbb
int3
push
imul
cmp
dec
xchg
sbb
and
movsl
insb
xchg
add
push
jne
test
cmpsb
ficomps
mov
ljmp
xchg
or
add
push
ss
push
cmp
mov
xor
ljmp
inc
pop
cmpsb
popl
pusha
or
xchg
movsb
pop
lock
imul
inc
or
cltd
xlat
ds
clc
add
out
mov
pop
invd
loope
push
add
mov
js
iret
xor
aaa
fadd
mov
and
stos
cmp
imul
test
mov
aad
hlt
adc
fs
js
dec
addr16
pusha
popa
and
xor
sarb
stos
outsb
xchg
rcrb
push
pop
rdtsc
add
iret
fisttpll
imul
jmp
mov
xchg
test
push
add
fs
cli
pop
dec
cmp
aas
push
es
jnp
mov
sub
setp
push
fcoms
jb
popf
test
enter
mov
out
push
jo
add
and
lock
je
ja
sub
lcall
mov
ds
pushf
out
fcompl
test
or
xchg
xchg
mov
lods
lock
or
inc
pop
and
mov
add
icebp
push
fimull
sub
pop
orb
cmp
ss
shll
nop
add
jnp
adc
push
jp
lds
jmp
movsb
adc
sbb
icebp
dec
xchg
test
adc
stos
bound
dec
gs
mov
rep
das
roll
add
aad
adcb
push
push
js
xchg
outsl
push
leave
addr16
add
in
lret
stos
cmp
pop
push
addr16
dec
fs
shl
or
loopne
xchg
cld
shr
data16
inc
js
out
mov
int
movsl
cmpsl
inc
jmp
sarl
mov
outsl
xchg
addl
adc
aas
cmp
dec
or
cmc
nop
cmp
add
inc
lret
sar
cld
test
adc
sub
and
fstl
or
xor
dec
int3
inc
xchg
stc
and
out
dec
enter
mov
inc
test
das
rclb
or
nop
adc
aaa
push
mov
sub
mov
xchg
movsl
add
sub
fsub
add
pop
arpl
adc
xor
pop
xchg
dec
adc
mov
xchg
xor
outsb
nop
and
jl
pop
jecxz
add
adc
xor
sub
adc
dec
das
mov
sbb
xchg
stos
cmp
loopne
push
lcall
mov
inc
or
and
push
movl
pushf
xor
outsb
xor
out
pusha
lret
sub
add
insl
jo
scas
fprem1
lock
and
dec
dec
mov
ret
adc
mov
pop
and
add
into
mov
daa
push
jns
xchg
or
add
shrl
push
sbb
or
cmpsb
faddl
push
mov
and
in
xchg
rdpmc
push
pop
mov
lds
or
add
gs
in
dec
data16
pop
cwtl
addb
sbb
hlt
faddp
pusha
test
cmp
push
pop
inc
mov
stos
dec
test
loopne
outsb
xchg
inc
cwtl
and
pop
rol
test
push
dec
mov
loopne
incb
les
leave
add
hlt
fs
push
test
and
and
test
inc
jns
cmpb
test
mov
loope
clc
cmp
and
mov
adc
repnz
in
mov
outsl
xor
push
mov
push
popa
mov
or
dec
in
add
pop
jmp
inc
rorb
incl
test
rclb
out
je
cmp
incb
mov
in
xchg
adc
lods
shl
add
inc
jae
push
aam
xor
cmpl
mov
or
and
data16
pop
adc
sahf
inc
adc
add
xchg
or
xor
cmp
add
adc
add
xor
cld
sahf
add
inc
pop
dec
mov
cmp
fs
popf
test
dec
enter
mov
das
fidivrs
popa
or
data16
nop
jbe
xor
ljmp
loop
jnp
or
xor
int
enter
mov
xor
jb
subb
fwait
nop
add
lcall
testl
int
jne
or
dec
add
mov
sbb
repnz
xor
mov
dec
push
pop
pop
shl
adc
mov
adc
push
mov
sbb
mov
insl
push
es
jl
sub
movsb
adc
mov
mov
inc
out
lods
fcoms
sub
or
sbb
out
or
xlat
andb
push
test
or
loopne
inc
jo
dec
sbb
div
push
sbb
clc
or
push
enter
addl
fdivs
faddl
add
xor
push
jo
inc
incl
outsb
push
and
in
sbb
cmp
sub
adc
rorb
push
cpuid
and
scas
inc
rclb
data16
in
sub
xor
xlat
shll
popa
out
pop
jb
mov
addb
out
mov
cmpsb
loopne
fsubs
lahf
jle
inc
inc
xor
sub
push
xchg
fsubrs
sub
sbb
mov
aam
in
pop
jp
add
push
dec
lock
mov
out
mov
shrb
popl
aad
out
add
andl
xchg
push
stos
add
stos
enter
mov
enter
call
jmp
jmp
test
inc
xor
jne
jl
inc
es
mov
jae
push
add
cs
in
mov
or
nop
and
mov
add
cmc
popa
jecxz
fcmovbe
cltd
int3
adc
outsb
pushf
imul
fucomip
sbb
jne
pusha
sbb
es
xchg
loopne
enter
test
mov
js
dec
dec
inc
jb
mov
and
jecxz
inc
jae
inc
xchg
stc
pushf
and
adc
sub
push
mov
mov
mov
and
add
mov
rolb
mov
add
out
enter
add
mov
out
pushf
mov
dec
jecxz
pusha
dec
push
dec
add
lret
push
ja
in
adc
add
jns
and
and
addr16
xor
pop
xchg
or
push
and
or
nop
xorb
jns
add
sarl
add
jae
daa
mov
inc
gs
mov
call
cmc
enter
cmp
dec
je
and
imul
jae
enter
mov
jb
movsb
sub
ret
sbb
nop
cmp
mov
out
or
xor
add
dec
or
mov
sub
fsubl
adc
add
xor
mov
add
dec
pop
and
add
sub
adc
sbbl
shll
frstor
adc
adc
mov
cmc
add
cmp
xchg
jns
adc
out
xor
subb
add
xor
xchg
fwait
xor
pop
imul
fsubl
aaa
testb
or
mov
int
jg
or
and
lahf
xlat
jp
pop
mov
mov
pop
add
loope
or
or
inc
sub
cld
sti
add
pop
dec
pushf
lods
add
shlb
inc
sub
mov
and
adc
inc
lods
rol
rcrl
inc
or
mov
js
jo
scas
sub
or
fisubl
add
fcoml
notb
xchg
out
add
jle
push
ud2
sub
test
mov
daa
mov
in
leave
or
pop
outsb
add
xchg
loop
xchg
add
fcmovb
lcall
pop
inc
or
lea
inc
xchg
cmp
aaa
or
rorl
cwtl
aam
push
mov
inc
lods
xchg
je
add
adc
jle
sbb
adcl
mov
aaa
icebp
mov
push
and
xor
data16
add
xchg
push
dec
sbb
cmp
insb
shrl
inc
adcb
or
loope
mov
icebp
stc
adc
mov
leave
inc
in
inc
mov
jecxz
mov
push
inc
dec
mov
stos
cwtl
cmc
enter
or
js
adc
dec
mov
adc
dec
add
mov
cmp
push
pop
test
push
push
and
cmp
mov
ljmp
insl
nop
shlb
inc
mov
adc
adc
imul
fprem1
fisttpll
add
daa
add
jne
je
sub
mov
hlt
outsb
dec
aaa
loopne
sbb
lcall
push
add
ss
xchg
dec
push
dec
sbb
icebp
cli
adc
xchg
or
rorl
ret
or
sbb
hlt
ja
pushf
or
sbb
test
mov
pop
out
stos
dec
rcrl
mov
dec
out
orl
ret
and
inc
cmp
pop
add
and
sbbl
xor
inc
or
stos
shll
push
xor
adc
add
inc
mov
jg
xor
pop
addr16
sti
pop
and
adc
icebp
or
xchg
xchg
sbb
enter
stos
push
xchg
mov
add
outsb
inc
pop
jmp
inc
or
xchg
sbb
decb
inc
mov
addb
mov
cmpsb
les
outsl
int
or
sbb
in
add
jge
or
lret
push
add
les
xor
pop
add
movb
pop
in
push
sub
test
mov
lock
mov
lock
stc
fldcw
or
bnd
fidivs
add
xor
pop
xor
call
cmc
push
add
aam
out
add
js
gs
ljmp
mov
cmc
jl
sub
add
addr16
jne
push
add
cmp
push
fnstenv
push
mov
shlb
add
into
add
push
adc
frstor
mov
imul
dec
xor
sbb
add
cmc
or
cmp
or
jle
add
in
jl
insb
add
sahf
jb
lfs
inc
adc
inc
fcomip
jge
data16
testb
xchg
mulb
mov
lods
add
fs
hlt
mov
repz
cwtl
add
inc
lods
adcl
add
ficoms
cmp
lcall
das
adc
daa
xor
xchg
cwtl
mov
mov
inc
inc
xor
xchg
add
clc
cmp
jae
xor
sti
xchg
mov
daa
std
inc
imul
add
lret
lahf
pusha
ds
addb
or
enter
insl
nop
push
inc
mov
dec
pushf
pop
cmc
lock
pop
sahf
addb
inc
mov
push
test
popf
dec
stos
sbb
in
cmp
add
pop
jl
sarl
test
mov
into
inc
ficoms
sbb
mov
xchg
adc
dec
push
int3
dec
fnstenv
add
and
push
or
fnstsw
and
es
push
sbb
jecxz
cmp
imul
js
ja
add
je
mov
mov
cmp
add
mov
jne
out
aad
les
xchg
cmpb
mov
rclb
mov
or
add
jae
xchg
aad
les
adc
cmpsb
and
cmc
xchg
push
sub
lret
ret
jl
or
and
mov
xchg
rolb
loopne
jne
sarl
mov
shl
jb
imul
push
push
sbbb
pop
es
aam
mov
cmp
loop
orb
and
dec
mov
xchg
scas
js
mov
cmc
xor
add
add
xor
jmp
and
jmp
or
aam
mov
stos
xor
mov
cs
mov
xor
test
sbb
pusha
in
or
mov
jno
push
iret
in
push
dec
add
hlt
fmulp
add
icebp
out
popa
mov
cmp
mov
shll
cmp
lods
xchg
add
ljmp
mov
adc
enter
jmp
mov
add
lds
fmull
xlat
dec
sub
add
in
cmp
pop
lahf
mov
push
or
mov
push
adc
pop
mov
add
nop
mov
cmp
sub
int
jg
xor
jle
jbe
add
movsl
cltd
popf
pusha
push
mov
mov
jg
stc
add
popf
mov
lret
mov
movsb
or
push
adc
or
add
cmp
aas
and
add
cmp
add
pushf
push
lock
dec
lcall
fldcw
xchg
add
adc
or
cs
dec
push
pop
push
in
push
pop
ljmp
lcall
or
icebp
or
fs
imul
pop
adc
add
cmp
lods
xchg
fisttpl
and
mov
mov
nop
gs
shrl
clc
xchg
mov
jno
inc
xchg
jg
repz
inc
pop
xor
mov
loop
insb
sub
arpl
cmp
sub
sbb
dec
cld
mov
dec
sub
rorb
shll
pop
lcall
inc
mov
inc
or
imul
xchg
clc
add
pop
mov
dec
in
rcll
lock
loop
and
std
fisubrl
cmp
mov
icebp
scas
in
add
shlb
je
sbb
aam
jl
jns
add
mov
add
jnp
push
jge
das
pusha
and
mov
nop
dec
jp
dec
ljmp
ret
cmc
outsb
hlt
sub
mov
add
out
add
push
mov
mov
lods
mov
js
out
ss
jg
pop
lock
jecxz
leave
add
dec
loop
cmc
jo
clc
lahf
inc
jge
lcall
xor
mov
ljmp
xchg
fists
jnp
pusha
xor
in
xor
cwtl
movsb
mulb
mov
push
xor
jns
push
test
push
invd
mov
lret
pop
adc
jo
scas
fstpl
cwtl
and
mov
or
pusha
cmp
das
xor
inc
jae
pusha
adc
xchg
sbb
inc
or
pushf
out
pop
push
xchg
jp
nop
hlt
sarl
jae
in
pop
incb
adc
mov
add
test
mov
jo
cmpb
flds
or
daa
xor
xor
xor
adc
inc
kmovb
loop
stos
add
rclb
xor
fsubrs
sub
adc
jle
inc
inc
imul
aam
push
repnz
js
adc
clc
loop
push
dec
outsb
mov
mov
add
fldl
cwtl
or
stos
and
out
inc
or
xchg
in
data16
add
call
push
movsb
inc
sub
aam
or
or
daa
or
movsb
push
popf
and
xchg
adc
push
cmp
icebp
add
push
cmp
sub
or
sub
add
inc
sub
sahf
or
call
add
adc
mov
and
data16
subb
xchg
xchg
push
pop
test
sbb
or
jno
faddl
adc
xchg
sahf
addl
inc
out
mov
and
mov
sahf
add
dec
js
cld
jmp
cs
adc
pop
nop
enter
mov
xchg
out
addr16
fs
rcrb
push
mov
fldl
and
sarb
rorb
nop
inc
or
or
add
mov
add
dec
out
in
dec
sbb
add
inc
jns
or
imul
cmp
out
lods
hlt
popf
cwtl
mov
stos
mov
jbe
or
int
cmp
popa
lock
jae
push
inc
popf
ds
mov
mov
ret
jmp
es
mov
or
inc
call
xor
jecxz
mov
addb
lock
lods
xchg
mov
or
and
add
jae
mov
je
or
push
and
jge
fwait
push
add
dec
cmp
adcl
ret
add
rcl
jmp
add
movsb
and
xchg
inc
jl
loope
fldenv
push
dec
out
mov
pop
xor
inc
loopne
pop
outsl
ret
push
popa
xor
mov
mov
xchg
mov
mov
bound
sbb
jne,pn
addb
and
cwtl
filds
repnz
data16
fidivrl
outsb
in
add
jg
sub
dec
jp
or
andb
xor
xlat
sub
add
jecxz
or
cwtl
and
mov
push
xor
dec
insb
mov
in
or
dec
call
loope
loop
and
cld
and
push
and
ds
add
out
js
shlb
nop
les
xor
cmp
or
add
jge
nop
mov
out
dec
int3
inc
ret
cmpsl
fucomip
add
mov
leave
mov
lock
stos
popa
rclb
in
pop
fldenv
push
or
fisubrl
and
inc
lcall
mov
xchg
xchg
stos
inc
inc
testl
cs
test
push
dec
cltd
mov
or
mov
inc
jle
sti
in
push
loopne
xorb
push
sub
sub
jmp
addb
adc
sbb
sub
pop
mov
jns
rcl
ja
js
js
mov
repnz
cmpb
mov
add
iret
lods
mov
dec
jb
jle
stos
add
push
ljmp
fisttpl
xor
and
adc
in
test
xchg
add
push
pop
shlb
add
fwait
lock
aaa
aam
mov
cli
rorb
push
pop
pushf
cld
mov
jecxz
sub
bound
cld
sub
dec
sub
aad
lret
pusha
jp
lea
cmc
mov
fcmovnbe
add
push
lcall
add
pusha
test
add
jne
in
jno
adc
mov
and
orb
out
imul
lods
push
xor
pop
pop
icebp
rorb
nop
jl
lret
sahf
add
cwtl
jnp
pop
out
adc
das
int3
addb
cmpsl
addl
incl
in
xorb
cmp
jl
add
mov
add
hlt
dec
pop
mov
add
xlat
into
or
jp
loope
test
push
das
mov
in
fdivl
call
mov
xchg
cmp
cltd
pop
cwtl
mov
call
and
pusha
add
sub
lock
popa
ret
jae
xor
add
stc
cmp
mov
jb
sbb
lds
mov
xchg
pop
sarl
jb
xchg
in
lea
mov
mov
mov
int3
add
inc
mov
enter
aad
pop
adc
stos
sub
into
lret
mov
add
push
loope
xchg
mov
out
fs
test
push
push
cmp
mov
mov
popa
shlb
rorl
enter
cmp
add
pusha
fstl
inc
les
dec
lods
enter
push
hlt
leave
sub
push
jl
add
je
adc
pushf
push
dec
fsubrs
mov
popf
cs
lods
sahf
js
mov
or
adc
xchg
add
cwtl
mov
lods
lock
mov
jo
in
outsl
push
lea
xchg
sub
dec
add
inc
pop
bound
or
cmp
fists
and
adc
add
mov
bound
popf
jnp
xor
sub
stos
pushf
jg
push
add
pusha
outsl
fiadds
out
adc
adc
rol
xor
stos
int
cmp
adc
mov
push
ret
jg
or
and
jp
bound
mov
aas
mov
inc
push
sbb
mov
push
and
movsl
add
cli
add
inc
or
fisttps
dec
popf
and
aam
xchg
sbb
rolb
push
and
movsl
or
cwtl
fs
add
cmp
bound
push
test
aas
outsl
lret
clc
inc
inc
add
pusha
notb
shrb
shrb
jno
inc
dec
sub
ja
xchg
sbb
and
mov
add
rcrb
les
fwait
push
pop
cmpsb
ret
clc
add
pop
daa
mov
cs
jo
out
mov
xchg
cmpsl
cmp
nop
or
add
xchg
in
or
and
pop
pop
xor
jo
mov
sbb
mov
in
lret
xor
add
sbb
adc
or
add
inc
mov
mov
cltd
or
fadd
xchg
ss
fisubl
sub
and
pcmpeqb
sub
pop
cmp
jl
mov
scas
mov
shr
je
sbb
xchg
or
inc
or
mov
das
or
inc
lahf
mov
inc
cmc
sti
fcomp
sub
jl
add
ja
xlat
push
sub
jl
dec
and
or
outsb
add
and
push
lock
fwait
pop
lods
xchg
mov
add
shlb
pusha
dec
or
leave
in
add
jl
xor
xor
sbb
lcall
push
out
jg
hlt
dec
adc
sub
mov
mov
ds
pop
bswap
dec
rol
inc
aam
jg
adc
rolb
stos
push
imul
add
push
rcrl
and
mov
lahf
addr16
jle
ljmp
or
pusha
xchg
or
jmp
dec
leave
pop
mov
jge
ror
stos
jo
pop
dec
inc
xchg
aam
and
rcrl
mov
mov
aam
add
add
or
inc
cmp
lock
jno
add
adc
pop
mov
or
add
call
adc
add
cld
mov
and
cmp
ret
out
cld
pusha
nop
lahf
popa
or
out
xor
adc
xchg
adc
add
pop
out
pop
loop
and
pusha
mov
mov
inc
cmp
dec
mov
adc
adc
xor
jb
mov
cmp
roll
test
adc
repnz
adc
call
or
pop
fwait
or
call
rcrb
adc
cmp
pusha
adc
mov
push
add
xchg
and
int
adc
add
mov
mov
jge
hlt
dec
out
daa
shr
decb
mov
or
cwtl
add
ds
stos
addl
sti
or
adc
aas
inc
pop
jmp
pop
mov
add
xchg
lahf
add
sub
xorb
call
or
inc
jne
cmpsl
in
adc
push
je
jp
mov
mov
jns,pt
push
faddl
xchg
and
add
push
mov
test
or
js
xorl
sub
outsl
sub
andb
cmp
orps
into
mov
jmp
and
mov
or
and
xchg
dec
out
rclb
xlat
mov
leave
mov
shrb
nop
inc
or
xchg
xor
push
scas
roll
mov
test
dec
sbb
jb
fs
lock
je
adc
insl
sub
test
jp
rorl
cmp
add
pop
stos
add
cmpsl
in
pop
orb
sbb
ds
cmpsl
sbb
xchg
jl
sbb
out
pop
or
dec
xchg
add
addb
sarl
rorb
cmp
jl
sbb
and
aas
push
std
or
mov
testb
ljmp
or
sub
mov
or
mov
fcomps
mov
dec
inc
mov
insb
jge
xor
inc
rolb
pop
pop
lret
cmpl
jle
inc
pop
and
into
add
bound
movsl
inc
mov
loope
xchg
fcoms
cwtl
sbb
push
push
pop
ret
add
lahf
mov
add
jecxz
xlat
push
sbb
push
daa
jge
xchg
imul
cmp
shl
add
test
dec
cmp
jno
add
in
shl
lret
fwait
dec
orl
cmp
xor
sbb
movsl
aas
mov
lahf
adc
xchg
cmpsb
inc
jo
xchg
mov
int
int3
insb
sub
pop
scas
add
loope
in
mov
test
imulb
cmp
sti
cmp
add
mov
dec
pop
pop
and
add
mov
wbinvd
mov
push
jge
ret
mov
insb
inc
inc
sbb
push
jge
jne
out
shl
addr16
add
sub
adc
pop
imul
out
mov
add
ffree
push
mov
fdivs
xor
add
mov
sbb
cmp
popf
jmp
pop
mov
out
mov
sbb
je
int3
or
or
loopne
jb
and
xchg
inc
clc
and
sub
add
pushf
or
push
mov
push
push
mov
add
add
mov
inc
xor
jo
icebp
push
xchg
movb
inc
cmp
dec
adc
in
or
jne
jg
pusha
bound
jae
stos
int3
mov
dec
popf
mov
add
jns
and
test
clc
pusha
adcb
dec
lods
add
lret
push
scas
shll
cmp
imul
add
arpl
lock
lock
cmp
outsl
sbb
stos
dec
and
and
imul
or
fwait
pop
gs
sub
mov
bswap
add
add
das
jo
pusha
sahf
dec
add
sub
sub
dec
jbe
pop
sub
pop
or
or
icebp
and
imul
cmp
cmp
scas
or
std
mov
shl
andl
jb
and
add
sub
push
rcr
or
pop
jge
push
popa
xchg
mov
or
push
dec
jmp
add
push
inc
push
or
adc
shll
add
mov
and
mov
jno
mov
ffreep
je
aam
out
lock
nop
gs
jg
ja
lock
lods
dec
xor
add
fucom
xor
mov
fldcw
pop
in
adc
cli
mov
mov
lret
sar
clc
addb
xchg
vandnps
hlt
xor
sbb
mov
add
and
mov
loop
pop
je
test
mov
mov
cmpsb
push
mov
addb
pop
test
cltd
loop
add
cmpsb
leave
loop
sarl
jno
sbb
les
popa
icebp
mov
adc
jmp
or
xor
loopne
cwtl
push
push
pop
mov
sar
mov
sbb
cmp
adc
pop
mov
test
mov
xchg
xor
in
pushf
sahf
cltd
call
adc
xchg
xchg
repnz
inc
mov
fxch
adc
cmp
xchg
outsl
fistpll
and
jb
xor
imul
ja
leave
jecxz
push
add
imul
add
push
pop
or
test
or
push
test
test
push
cmp
mov
fidivrs
fwait
loop
shrb
movsb
loopne
out
loopne
add
jp
cmp
push
les
and
jb
sbb
mov
cltd
in
cmc
je
les
test
fs
notl
loop
pop
mov
xchg
imul
popa
add
mov
cmp
jp
imul
stos
mov
sub
pop
xchg
scas
pop
inc
mov
dec
and
ja
jae
add
mov
lods
jecxz
cwtl
dec
xor
jp
xchg
scas
int3
inc
shrl
xchg
jo
push
inc
cwtl
inc
enter
cltd
dec
jge
clc
ss
xor
cld
jmp
orb
cmp
adc
adc
pop
jecxz
jae
push
data16
int3
lret
inc
nop
aaa
enter
repz
mov
into
aaa
jmp
add
mov
inc
push
cmp
add
test
add
mov
pop
popa
imul
scas
mov
popl
es
jno
iret
psubd
pop
mov
push
xchg
call
push
clc
mov
add
imul
dec
es
push
jge
mov
fcoms
sbbb
mov
ret
dec
add
and
pop
cmp
repz
inc
stos
and
shlb
sbb
inc
lcall
and
popa
sbb
fisubrl
inc
xor
enter
sbbb
push
push
in
addb
cmp
fwait
cwtl
icebp
mov
add
xchg
inc
lcall
adc
aaa
mov
pop
lret
std
icebp
xor
addb
add
fs
adc
lea
add
test
test
mov
add
aam
sbb
orb
push
adcl
mov
sbb
add
enter
into
bound
les
pop
cmp
loop
call
and
adc
inc
mov
popl
popa
lcall
pop
mov
shl
rol
add
mov
dec
cmpl
sub
nop
icebp
jl
or
testl
and
pop
sub
add
cwtl
inc
xor
xor
fwait
add
cmp
or
push
movsb
add
jle
jns
xor
stos
neg
mov
add
hlt
inc
cltd
dec
jmp
sub
dec
adcb
ret
orl
ret
mul
mov
push
jge
xor
jp
mov
push
and
cmp
fsubrl
outsl
cltd
push
inc
push
je
sbb
rcr
mov
dec
int
sub
sub
mov
and
lods
pop
push
or
imul
and
inc
ffree
xchg
inc
sub
in
mov
dec
jns
sub
adc
lea
mov
mov
add
aad
xchg
pop
into
out
enter
shl
cmpl
mov
mov
mov
or
push
adc
adc
dec
push
or
add
mov
mov
lret
or
mov
lret
pop
and
test
inc
out
cmc
xchg
cmpsb
dec
in
and
sub
hlt
sbb
fmuls
xchg
push
mov
dec
mov
mov
mov
lcall
adc
pop
mov
add
sbb
inc
push
pop
fisubrl
cmp
outsl
add
or
cmpb
gs
and
icebp
enter
pop
call
ret
pop
mov
xor
cwtl
cltd
adc
add
pop
int3
jbe
add
dec
inc
in
out
pop
repz
dec
dec
push
pop
mov
mov
cs
stos
mov
ljmp
out
rcrb
dec
lea
popa
mov
loop
jp
or
sub
or
and
bound
inc
sub
xor
stos
and
sahf
in
and
orb
movsb
adcb
sub
dec
push
inc
cmp
loopne
mov
push
cmc
into
ss
subb
cmp
mov
xchg
add
dec
xor
and
dec
movsl
ficomps
cmp
test
test
or
rcrl
pop
inc
xor
adc
jl
pushf
adc
xchg
xchg
repz
sbb
adc
jle
jl
fs
outsb
inc
cmp
dec
in
loop
sub
mov
adc
popf
jbe
mov
es
mov
add
loope
add
into
sbb
adc
test
enter
mov
les
and
les
mov
movsl
adc
mov
xchg
sbb
clc
mov
into
adc
loope
adc
enter
inc
mov
add
ret
sub
fcoml
test
nop
mov
mov
scas
push
xor
mov
subl
call
arpl
notl
test
sub
push
into
fs
push
add
jmp
inc
and
sbb
pop
mov
jle
aam
addl
pop
or
or
cld
mov
sbb
lods
lea
call
data16
pop
and
jae
sahf
add
aas
jne
subb
add
insl
loopne
mov
cmp
test
cli
inc
inc
adc
mov
and
pop
cmp
mov
add
loopne
push
fisubrs
sbbb
pop
push
dec
add
push
mov
xor
sbb
adc
test
cmp
fldt
andb
aad
push
rol
ret
data16
mov
adc
and
mov
or
addb
sbb
outsb
sti
mov
imul
lret
pushf
and
clc
enter
xchg
sbb
addr16
xchg
cmp
pushl
pusha
xor
jno
loope
iret
add
fnstsw
sub
add
adc
in
xchg
mov
and
std
sub
call
stos
add
sub
jl
mov
xchg
test
xchg
in
call
subl
add
mov
and
add
and
ljmp
jl
call
out
xorb
mull
les
pop
jmp
call
mov
add
enter
or
cmp
pop
ja
pop
out
add
insb
arpl
dec
popa
pusha
cld
enter
add
xchg
mov
and
mov
jo
or
scas
add
dec
xchg
add
mov
shr
sbb
lea
fimuls
test
lret
inc
sar
mov
inc
or
jp
sub
add
push
and
les
pop
xlat
popl
push
mov
push
cld
sbb
in
add
mov
or
or
adc
mov
inc
adc
mov
and
mov
and
pop
add
enter
pop
shll
jp
push
ss
push
insb
add
sub
fisttpll
add
pop
add
pop
pop
jns
sub
les
xor
or
adc
dec
pop
fisubl
pop
icebp
les
xor
add
cmp
xorb
sti
loopne
sti
jns
adc
loopne
enter
and
add
hlt
mov
mov
and
movsl
pop
popf
sub
mov
jne
and
fs
mov
inc
sub
push
es
cli
into
push
jge
push
or
cmp
out
sbb
inc
sbb
sbbb
adc
sub
or
inc
pop
fnstcw
push
mov
jle
add
and
and
pop
push
jmp
xchg
add
mov
dec
mov
xchg
mov
mov
ljmp
pop
stos
test
add
xchg
push
jecxz
hlt
xor
add
repnz
dec
cmpsb
cmp
pop
js
leave
or
xchg
clc
adc
ret
mov
je
inc
xor
shlb
je
add
or
outsb
rclb
push
rclb
mov
aaa
stos
inc
add
scas
cld
pop
cli
add
mov
insb
dec
cmpsl
add
test
xchg
xchg
push
in
xor
sbbb
add
fs
outsb
mov
int3
fwait
xchg
shrb
push
cmp
pop
xchg
xchg
jo
xor
push
sarb
inc
sbb
and
mov
sbb
arpl
int3
or
test
dec
addr16
push
pop
or
in
pop
lock
cld
jle
or
sbb
xor
mov
imul
test
fs
mov
add
jmp
mov
xchg
or
dec
arpl
stos
push
mov
push
pop
mov
jbe
test
add
jmp
sub
shll
adc
addl
inc
inc
sbb
jo
jae
orl
test
mov
test
or
into
lods
lea
cmp
cmp
xchg
add
in
cmp
lret
xor
nop
in
cwtl
enter
or
inc
or
jnp
cmpl
inc
lock
dec
dec
aaa
test
scas
push
lods
movsb
lock
xchg
or
orl
mov
dec
mov
dec
mov
mov
out
movsb
addr16
add
mov
mov
pop
cwtl
bound
orb
cmp
sub
testb
jmp
pusha
mov
test
add
and
sub
es
loop
scas
jmp
adc
call
lods
add
sub
and
and
aam
ret
lret
sbb
and
jge
call
cmp
dec
xchg
add
sbb
es
inc
cmp
push
add
out
test
xor
jg
mov
in
mov
mov
add
hlt
shl
jg
test
inc
das
mov
and
push
mov
xor
cmp
dec
sbb
jne
pusha
cltd
dec
and
inc
in
pushf
test
rorb
cmp
repnz
dec
sub
add
mov
xchg
pop
fs
leave
rclb
add
inc
movsb
push
or
test
add
inc
push
pslld
add
cmp
cmp
jp
and
mov
faddl
or
mov
filds
cwtl
test
sbb
pop
clc
loopne
dec
dec
je
add
ljmp
add
int
pop
push
add
pop
arpl
addr16
add
push
and
and
xchg
stos
aaa
xchg
add
int3
dec
repz
out
out
fwait
insb
paddusb
aas
and
jge
enter
repnz
add
out
aam
jg
add
ds
pop
outsl
sbb
mov
and
mov
jbe
rcr
cmp
mov
pusha
pop
js
adc
bound
leave
xchg
add
sarb
loop
add
xchg
xor
cmp
rcr
sbb
or
popf
mov
icebp
add
jmp
rolb
out
adc
pop
gs
or
into
es
enter
sub
loop
jnp
push
sbb
imul
add
std
push
dec
out
pop
iret
or
dec
add
lret
mov
xchg
and
adc
jl
add
xor
cmp
cwtl
inc
sub
xor
cmc
icebp
and
in
dec
cmp
addr16
cltd
and
jecxz
repz
rolb
addb
lahf
and
dec
and
adc
add
mov
aad
or
outsb
ret
fwait
shlb
lock
rcll
add
repnz
fimull
shl
and
test
aam
xor
adc
add
subl
jecxz
sbb
outsl
loopne
ja
shl
rorl
push
mov
xor
sbb
pusha
or
fs
or
roll
inc
int
and
call
fwait
dec
lods
movb
add
add
adcb
aas
add
cltd
popa
xchg
cmp
jl
inc
add
call
mov
dec
shll
cmp
inc
cmp
sar
icebp
rorb
inc
xchg
add
pop
inc
aad
mov
outsl
push
dec
adc
cwtl
dec
mov
loop
leave
push
jo
cmc
add
cwtl
stos
or
mov
lock
add
clc
and
aam
incb
pop
dec
jo
push
int3
mov
dec
or
adc
movsb
in
into
hlt
add
in
lea
push
mov
jmp
push
fadds
push
cmp
fnstcw
push
shlb
jae
and
or
subb
jb
add
dec
subl
dec
or
or
ljmp
inc
and
ljmp
inc
mov
aad
cmpsb
int3
fwait
and
xchg
clc
xor
out
mov
je
pop
cmc
add
dec
mov
shr
pushf
subb
icebp
add
dec
mov
leave
adc
pushf
mov
shl
sbb
push
lds
je
lret
ds
fildll
pop
add
sbb
xor
popa
popa
adc
nop
mov
mov
xor
cwtl
push
adc
into
pusha
and
les
cmp
xor
and
inc
int3
scas
mov
sahf
and
cmp
xor
fcmove
cltd
xchg
sub
insb
jo
dec
loopne
lock
call
add
outsl
inc
dec
scas
pop
in
and
shrl
fmuls
add
nop
mov
adc
add
cld
movsb
cwtl
cs
cwtl
shl
mov
jmp
call
pop
mov
push
mov
es
jmp
stc
pop
and
popa
mov
and
and
gs
xor
sbbl
adc
adc
call
cmp
shlb
mov
cmp
mov
add
enter
divl
sub
add
test
push
mov
popa
push
jp
xor
mov
push
or
shl
mov
push
hlt
sbb
or
pop
sub
push
add
imul
sti
inc
fwait
cmpsb
mov
jp
lret
inc
pop
add
mov
call
lock
sub
rolb
push
adc
dec
jmp
adc
xor
dec
outsb
mov
addr16
or
lock
xor
push
sbb
add
push
mov
in
add
je
rol
xchg
push
add
movsb
incb
jns
les
adc
or
in
adcb
cmpsb
cld
jle
xchg
loopne
add
je
shrl
cwtl
and
cs
inc
add
es
mov
sbb
out
inc
rolb
add
pushf
pop
imul
dec
repnz
adcb
mov
or
das
enter
push
ret
push
call
js
add
filds
fadds
push
mov
pop
insb
fnsetpm(287
add
pop
loope
ss
dec
daa
sbb
push
sub
sub
pop
mov
setb
decb
inc
sahf
das
mov
rorb
movl
lcall
or
mov
rcll
xchg
bound
add
mov
sbb
cld
testb
fidivrl
mov
cmc
pop
in
cmp
andl
xchg
orb
pushf
and
adc
or
mov
stc
inc
loopne
repnz
ret
sbb
les
popa
cli
xor
and
call
mov
cmp
aad
movsl
jb
cltd
push
jno
inc
add
scas
sbb
or
icebp
cmpsb
jne
dec
push
dec
fwait
rolb
add
jle
mov
cmp
push
inc
cmpb
in
cld
mov
stc
jle
test
adc
and
shrb
push
loopne
add
imul
xorb
xlat
inc
nop
hlt
rcll
lock
iret
inc
popa
out
cmp
jmp
and
jl
cmp
add
xchg
pop
iret
inc
cmc
jl
cwtl
pushf
adc
inc
out
je
popa
jecxz
sarl
test
scas
jno
pop
ja
aaa
enter
nop
pop
or
enter
fmull
das
nop
pop
out
js
xor
cmp
mov
dec
fs
push
push
outsl
jp
fisttps
add
insl
adc
int3
fildl
sbb
mov
inc
pop
or
and
cmp
push
mov
and
xor
bound
adc
aas
and
mov
dec
pop
fisttpl
adc
jo
add
dec
mov
pop
push
dec
cwtl
push
pushf
and
add
inc
and
orb
insb
add
add
insb
or
out
xor
jle
mov
in
add
das
pop
jo
insb
cltd
push
sub
push
cmp
scas
adc
cmp
adc
enter
lock
in
jne
sbb
je
lea
ficomps
dec
or
dec
movsb
inc
sub
in
mov
inc
ds
jl
adc
fstps
xchg
cmp
jo,pn
add
int
repnz
lods
movsb
pusha
stc
out
mov
popf
in
cwtl
add
test
les
test
xchg
inc
add
imul
roll
cmp
xor
jle
jbe
fidivl
popa
push
cmp
jle
or
push
sub
scas
mov
int
jnp
cmc
in
mov
jae
xor
pop
dec
cmp
lea
bound
pop
in
push
shll
cmp
jo
fcom
mov
cmp
mov
mov
loopne
stos
pop
adc
cltd
dec
mov
adc
shl
insb
cld
sub
xor
loop
mov
inc
rolb
gs
out
and
and
xchg
rcr
adc
mov
cltd
jnp
adc
pop
dec
xchg
and
add
xchg
cmp
scas
in
fs
xchg
cltd
add
mov
ret
movsl
fisubs
or
psubusb
pushf
cmp
stos
hlt
stc
xor
arpl
outsb
aam
pushf
and
mov
dec
daa
inc
test
sub
das
or
push
int3
xchg
add
sub
sub
lock
dec
add
lods
sbb
aam
les
and
or
mov
cld
popf
add
mov
scas
mov
push
sub
jmp
pop
adc
add
xor
xchg
shrb
out
nop
mov
mov
movsb
mov
movsb
mov
add
xchg
lret
rclb
mov
iret
mov
inc
dec
rolb
fsub
inc
and
jno
mov
lods
ficoms
cmp
out
mov
testb
push
jge
lret
add
xchg
pop
addb
jbe
ror
and
add
mov
loop
adc
enter
cmp
sbb
repnz
or
popw
push
andl
loope
xor
mov
pop
js
aas
icebp
xchg
xor
popa
pusha
fwait
inc
repnz
fiadds
xlat
xchg
xor
loop
xor
push
inc
jp
dec
aam
dec
adc
xchg
inc
lock
dec
insl
mov
mov
xor
subb
or
jo
decb
js
xchg
int3
sti
mov
adc
sbb
cwtl
fnstcw
in
xchg
call
lods
loop
ja
add
test
sub
ss
fstps
mov
add
fwait
sub
insl
add
in
movsb
or
mov
mov
xor
stc
adc
xorb
mov
add
xor
lods
cli
adc
sub
fucom
mov
xchg
in
xor
insl
and
aaa
lds
push
cmovge
and
dec
cmp
sub
negb
pop
popf
lock
lds
mov
popa
sbb
push
pushf
or
adc
jl
mov
mov
pop
jnp
sarb
aas
loopne
push
fs
in
leave
mov
xchg
or
insl
pop
cmp
mov
pusha
aam
cmp
xchg
adc
hlt
ja
jg
add
sbb
out
outsb
sahf
lret
lret
and
dec
add
dec
adc
adc
adc
mov
mov
add
cltd
add
add
pushf
call
leave
cmp
sbb
fwait
or
or
adc
sbb
jl
ljmp
inc
iret
lods
jmp
mov
aam
ror
ja
adc
lret
or
mov
mov
or
lods
mov
cmpb
fildl
add
adc
lods
add
popf
mov
push
add
jle
cmpsl
pushf
clc
xchg
clc
pop
fstl
jae
popa
lret
mov
mov
jb
mov
mov
jne
and
mov
mov
push
fstps
popa
lock
xchg
shr
inc
sub
cmp
ret
jbe
int3
and
xchg
repz
mov
pop
xchg
adc
add
js
jnp
add
dec
pop
fcoml
or
or
or
dec
nop
jo
es
cmp
popa
loopne
and
sarl
add
add
lret
pop
dec
push
add
mov
dec
out
fadds
ja
add
sbb
jle
lahf
mov
sbb
fs
je
sbb
pop
or
and
inc
clc
adc
ja
cmp
sub
jp
add
les
fs
pop
add
test
xor
push
dec
loopne
rorb
and
jno
add
push
enter
sub
jmp
xchg
insb
outsl
add
hlt
jg
je
sbb
or
push
addl
mov
clc
and
das
and
push
ss
add
sub
push
add
pop
sarb
pop
or
mov
inc
or
cltd
mov
popf
sub
mov
jg
cld
enter
into
lea
add
cmp
scas
decl
popf
imul
sar
pop
ds
add
pop
jnp
push
daa
push
les
data16
jg
pop
sub
sbb
add
out
in
call
add
shl
mov
xor
ljmp
ret
jp
cld
lahf
add
dec
out
add
arpl
cmpsl
mov
pusha
pop
loop
push
jecxz
mov
call
sbb
mov
cmp
or
xadd
inc
out
sub
xor
cmp
dec
int3
flds
mov
mov
cwtl
dec
push
xor
mov
cld
xchg
mov
xor
aam
add
cli
push
imul
inc
inc
pop
insb
cld
mov
add
jecxz
test
add
cwtl
and
mov
movb
movsl
je
pop
lods
adc
arpl
jne
mov
lock
dec
push
mov
add
mov
add
les
jb
adc
jae
lock
inc
pop
orb
cmp
mov
mov
fs
pop
mov
push
sahf
inc
add
xchg
xchg
nop
call
in
xchg
and
or
les
or
pop
add
xorb
enter
mov
dec
pop
cmpsl
jb
add
int
jnp
mov
jo
push
cmc
or
ss
dec
adc
lods
mov
mov
cmpsl
dec
jns
or
dec
sub
mov
mov
insl
loope
imull
icebp
mov
imul
pop
orb
pop
js
inc
nop
pop
mov
mov
inc
xor
jo
stos
or
push
sub
inc
push
outsb
mov
adc
adc
shl
inc
mov
and
pusha
xlat
add
pop
mov
dec
xor
jmp
dec
xchg
add
or
cmp
ja
inc
push
mov
or
add
lcall
xor
ret
imul
mov
or
jne
fldenv
sub
push
insb
or
sti
push
ja
sbb
cmp
stos
and
mov
bound
or
sbb
lcall
add
sbb
ja
pop
push
xlat
outsb
pop
add
cmp
mov
negb
inc
mov
sub
and
ficoml
in
or
mov
lcall
popa
jmp
int3
andb
cmp
sbb
jo
loopne
cmp
test
je
push
pusha
xor
into
cmp
or
jne
cmp
fwait
xchg
inc
dec
add
push
repz
add
fcmovnbe
mov
ficoml
addb
fadds
lock
in
out
loop
pop
jecxz
shlb
dec
in
add
aam
aas
jnp
xchg
out
and
dec
pop
in
mov
iret
xor
dec
call
jne
sub
sbb
nop
loopne
cmp
mov
cwtl
call
pop
out
pop
movsl
mov
icebp
repnz
jle
nop
mov
scas
ret
pop
jnp
add
mov
repz
movsb
cwtl
push
cld
push
cmp
pop
add
rcl
mov
add
neg
aam
nop
mov
add
cli
adc
sbb
in
insb
nop
mov
int3
nop
fdivrl
pop
xchg
cmp
inc
cmpsl
ret
and
in
and
jno
repnz
sub
pusha
add
xchg
dec
pushf
dec
and
lds
add
sbb
clc
or
cwtl
pusha
dec
sbb
stos
mov
xor
faddl
call
ret
or
sar
sbb
mov
sbb
aad
push
fiaddl
test
add
pushf
or
add
inc
enter
ss
pop
popf
push
fnsave
add
sbb
test
adc
roll
mov
push
add
mov
pop
stos
add
ror
testb
test
mov
std
jbe
mov
dec
jns
xor
xchg
xor
jle
mov
pop
enter
push
dec
adc
pop
test
and
rcl
cmc
dec
lock
loop
sbb
and
xchg
test
adc
loopne
test
fsubl
mov
xchg
pop
movsl
fs
mov
adc
mov
stos
push
outsl
lcall
int3
push
ja
push
sub
and
movsb
add
cmp
pop
repz
dec
fadds
sbb
mov
nop
xor
shl
sbb
std
les
lcall
jo
push
in
outsl
loope
jmp
sbb
pusha
sbb
add
cmp
rcl
dec
jl
rorl
sub
ret
std
add
adc
sarb
mov
dec
subb
lods
sbb
adc
int3
jge
mov
add
mov
aas
arpl
push
or
cld
push
jb
sub
xor
fiaddl
mov
inc
fsubrs
inc
jo
add
dec
or
fsubrl
push
cmc
hlt
mov
jo
sub
int3
push
sub
dec
jo
inc
testb
cmpsb
xor
aas
mov
das
nop
adc
and
mov
test
cmpl
ret
and
adc
jno
jb
add
data16
xor
mov
add
les
ss
add
lret
out
into
inc
out
push
or
fbstp
jo
mov
ffree
call
out
int3
mov
ret
or
rolb
jb
ja
push
icebp
lcall
cmp
aam
jge
mov
insl
adc
push
and
jnp
add
mov
lods
add
sub
cmp
sub
loopne
rol
mov
inc
pushf
adc
and
add
sub
xlat
mov
xchg
notb
ret
test
cmp
mov
stos
movb
cmp
nop
movl
je
in
ret
aaa
add
hlt
push
icebp
insl
fs
daa
sbb
cs
dec
push
pusha
xor
or
lods
and
fsub
lods
cmp
pop
add
ds
in
xor
dec
or
pop
imul
loop
fstl
add
dec
lea
or
stos
movsl
les
pop
add
repnz
fs
xor
mov
jmp
pop
add
push
test
bound
jb
fisttps
push
into
mov
cld
dec
test
dec
push
ss
sub
addl
aaa
jg
pop
add
cwtl
jnp
xlat
add
xchg
push
nop
shlb
dec
subl
flds
and
add
pop
divl
jp
sbbb
pop
scas
jo
pop
cmp
enter
aas
jae
inc
sub
sbb
or
mov
mov
add
mov
scas
sahf
adc
dec
add
pop
in
cmp
cmpl
imul
fiadds
mov
or
stos
pop
addr16
fdivl
rcrb
rolb
jae
add
jecxz
pop
xorb
popf
rcll
ljmp
jg
add
push
loope
leave
pop
and
mov
or
mov
dec
lods
add
cld
js
cmpsb
jno
jns
jbe
pushw
push
rolb
out
push
or
repz
lds
mov
pop
or
dec
or
pop
loope
push
in
adc
lods
push
loop
adc
les
std
and
hlt
sbb
cmpsl
scas
lock
leave
cmp
clc
lock
dec
enter
je
add
and
in
add
xlat
dec
xchg
lods
sub
jp
cmp
insl
dec
enter
scas
pop
push
shlb
or
or
jb
cmp
sub
test
cmp
fiaddl
sbb
loop
fstpl
push
iret
adc
lea
jnp
pusha
jo
inc
jmp
fsts
dec
jge
add
test
push
lods
jb
ljmp
xchg
inc
fadds
int
push
mov
andb
adc
cmp
push
sub
jp
push
add
enter
pop
sub
inc
pop
and
jecxz
daa
mov
aas
or
cld
cmpsb
rolb
jge
adc
add
and
inc
mov
aad
call
icebp
pop
rolb
xchg
pop
push
cmp
adc
cmp
faddp
sbb
ja
shr
cmp
cld
pop
xchg
sbb
mov
loop
es
push
mov
clc
cmpl
cmc
fsubs
add
rcl
xor
out
stc
xchg
mov
push
cmpsb
mov
add
test
push
cmp
lret
mov
enter
jmp
outsl
mov
insl
dec
andb
loopne
mov
test
in
cmpsl
stos
lods
test
mov
nop
jl
js
push
lods
pop
and
fwait
dec
sbb
dec
fs
adc
sti
cmp
cmpsb
and
mov
push
pusha
mov
es
rcrb
mov
lock
gs
popf
lea
nop
cwtl
nop
add
xchg
leave
icebp
cmp
jnp
lcall
add
vunpckhps
ror
or
movsb
enter
add
stos
addb
and
jecxz
adc
and
jmp
sbb
mov
pushf
add
in
cmp
inc
pushw
adc
xor
add
inc
mov
enter
inc
loope
mov
div
in
jo
inc
mov
pop
mov
sbb
xchg
push
pop
cmp
inc
add
cmp
cmpsb
mov
add
jae
xchg
pushf
call
lea
dec
aaa
adc
in
add
dec
mov
lods
aam
mov
hlt
xor
clc
outsl
add
push
js
or
aam
enter
xlat
cmp
jae
insl
push
push
and
mov
pop
ja
cld
cmp
aas
cmp
adc
iret
into
test
dec
sbb
and
push
sti
mov
lock
mov
sbb
mov
push
or
adc
add
or
mov
adc
add
push
adc
adc
das
jmp
and
lcall
loop
lahf
xchg
add
xchg
and
les
sub
xlat
jnp
mov
adc
sarb
repz
push
mov
or
and
push
push
adc
add
daa
jbe
lret
inc
mov
pop
push
xor
fistpll
div
mov
add
test
sahf
roll
int
sti
jmp
jecxz
and
fisubrs
movsb
adc
mov
js,pn
test
jb
in
addb
or
mov
int3
stc
mov
aaa
xchg
mov
inc
test
jne
clc
inc
loopne
enter
push
add
stos
xchg
add
insl
pop
xchg
lock
inc
xor
mov
jg
call
popa
roll
mov
lcall
test
call
or
add
leave
or
loop
mov
cmp
sbb
data16
aaa
adc
add
push
add
int
or
dec
cmp
push
rorb
push
add
fwait
ror
jecxz
ds
or
sbb
jo
jne
or
aaa
adc
mov
push
xor
jb
addr16
clc
or
add
xchg
je
stos
xchg
cmpsb
xlat
pop
int
inc
sbb
inc
xchg
fimuls
mov
sub
aam
dec
add
jb
int3
push
adc
dec
movsb
loopne
xor
in
push
or
mov
and
idivb
enter
dec
and
jp
leave
in
imul
pop
lock
test
sub
add
pop
adc
imul
popa
jl
daa
out
xor
lods
movsb
insl
jle
cltd
dec
jo
sbb
loop
add
cmc
cmp
jo
mov
mov
add
stos
into
imul
clc
lahf
cwtl
jge
add
sbb
mov
fsubl
push
and
inc
sbb
push
push
hlt
cmc
mov
scas
jmp
incl
out
movsb
adc
in
xlat
aaa
scas
lahf
lods
cmp
xorb
dec
cwtl
pop
add
out
jo
and
xchg
test
xchg
add
inc
push
ljmp
jge
jp
pop
sub
add
cwtl
popf
mov
jo
call
add
out
aam
mov
sbb
inc
or
jle
add
out
rorb
pop
push
mov
or
loopne
sub
sbb
and
lahf
jno
pop
and
lahf
fsubrl
enter
pusha
fs
cmp
adc
mov
leave
mov
enter
jmp
sub
sarl
andb
mov
adc
add
icebp
andl
push
ljmp
add
push
sub
lods
test
shl
jns
push
ficompl
push
cmc
fnstenv
add
je
enter
nop
daa
xchg
xchg
nop
hlt
mov
sbb
or
and
scas
call
fcomi
mov
ret
inc
mov
lret
nop
dec
jae
cwtl
ds
bnd
in
or
pop
divl
lock
psrld
inc
mov
aas
mov
push
mov
sbb
dec
push
mov
pop
adc
xorb
mov
pop
ret
sarb
mull
inc
repz
cwtl
add
mov
in
int
add
cmpsl
adcb
xor
sbb
je
subb
mov
mov
sub
or
ss
add
xor
ror
nop
call
test
lret
and
and
adc
cli
pop
add
shrl
cltd
sbb
sbb
inc
gs
in
mov
mov
add
inc
lock
nop
xchg
mov
mov
leave
testb
jmp
repnz
add
sub
int3
add
dec
or
in
shl
push
or
cwtl
int3
and
ljmp
ret
dec
pushf
and
inc
push
or
data16
hlt
lea
ret
sub
out
cmp
cmp
pop
sarl
mov
ret
shlb
dec
sbb
mov
lret
xchg
jb
stos
out
into
xor
in
pushf
cmpb
pusha
ret
mov
js
lret
sahf
lahf
jp
push
out
cmp
aas
push
jae
sub
icebp
pushf
or
loopne
sbbb
jbe
and
int3
cltd
lock
lods
mov
or
inc
out
sub
cmp
cmp
jecxz
lods
cltd
mov
jae
jmp
test
xchg
xchg
mov
movsl
add
dec
xchg
ss
bound
add
jnp
push
stos
shr
fs
pushf
xchg
cltd
sarb
cmpsl
lock
iret
icebp
ds
add
aas
pushf
idivb
push
jg
fbstp
mov
bound
insl
cmp
scas
add
in
fs
dec
adc
test
pop
test
adc
je
jmp
movsb
push
and
fcmovb
sub
test
das
xchg
test
inc
lea
inc
jo
rolb
pop
je
adc
js
inc
mov
je
add
xchg
xchg
andl
xor
leave
sbb
es
jnp
add
mov
mov
sbbl
pusha
mov
push
idivl
add
popa
jecxz
mov
mov
mull
les
arpl
mov
push
int
ds
mov
popa
lret
stos
ret
lods
pushf
add
dec
inc
xor
jecxz
test
sbb
add
push
out
xor
jmp
lods
and
scas
add
lret
mov
test
cmp
mov
test
or
data16
stos
add
frndint
jl
mov
pusha
inc
fldenv
add
iret
das
cmp
shr
cmp
and
and
and
mov
sbb
add
insl
ret
push
add
orl
jnp
add
int3
rorl
and
std
dec
add
or
add
mov
jb
add
hlt
icebp
std
add
cli
push
sbb
inc
sub
mov
and
dec
add
mov
cmpsl
cmpb
dec
inc
jno
daa
sbb
pop
push
popf
push
xor
mov
pusha
pop
push
bound
out
js
push
movsl
inc
subb
lcall
hlt
jl
cmp
lahf
jno
dec
or
sbb
and
das
add
add
cmpsb
add
xchg
pop
cmpsl
mov
mov
sub
loope
pusha
add
or
js
mov
clc
stc
add
ljmp
test
jnp
cmp
sbb
sub
repz
pop
dec
xchg
adc
sub
out
lds
sbb
adc
cmpsl
add
fnstenv
push
subb
mov
lcall
jle
cs
pop
xchg
mov
add
fstpt
fnsave
push
add
lcall
add
js
lds
add
pop
mov
mov
cmp
push
xchg
inc
rcll
in
inc
roll
xlat
call
cmp
jo
pop
adcb
imul
lret
leave
jl
testb
jae
mov
loop
repnz
hlt
pop
lcall
fnstsw
mov
in
mov
ds
roll
clc
add
es
add
adc
call
pop
or
pop
push
imul
cwtl
mov
jp
arpl
js
dec
jbe
cmp
and
ds
call
xchg
mov
push
stc
lock
inc
xchg
in
cmp
pop
add
sbb
pshufw
cs
cmp
fidivs
ret
fwait
test
call
add
jp
bound
fistl
inc
pushf
popf
mov
adc
xor
mov
add
fisubrs
cmp
aam
es
int3
fidivl
add
data16
add
jno
pop
int
in
in
mov
pushf
sbb
jbe
and
fwait
mov
jecxz
fwait
sub
outsb
dec
pop
add
jae
jns
outsl
in
add
sbb
or
clc
mov
add
add
or
mov
dec
aam
add
outsb
popf
rolb
hlt
cs
xor
mov
xor
pop
sub
push
addr16
out
clc
aam
cmpsl
cmp
pop
icebp
cltd
sarl
adc
fwait
js
in
pusha
add
push
inc
int3
xchg
adc
lcall
jns
jns
rcll
dec
or
push
add
sub
push
ds
loop
fsubrp
divl
push
and
scas
mov
into
ja
pop
call
adc
data16
jge
stos
cmp
xor
push
add
mov
les
add
cmp
leave
test
repnz
iret
cmp
mov
out
outsl
bound
xor
xlat
add
jne
pop
in
mov
inc
jo
aas
mov
shlb
dec
pop
sub
dec
icebp
mull
xor
lcall
and
and
add
rcrl
clc
str
shl
aam
sahf
add
addl
fwait
jl
push
mov
jo
pop
ret
jp
add
add
push
jns
ret
ficomps
mov
xchg
adc
pop
faddl
bound
testb
sub
jnp
sbb
add
sub
inc
jo
push
fs
add
sbb
add
lds
dec
dec
lock
mov
mov
inc
sub
xchg
pop
xchg
add
addr16
loop
pushl
lods
scas
add
xchg
jmp
add
or
mov
add
cmp
cwtl
push
pusha
dec
pop
add
jae
loop
jne
mov
dec
cmp
dec
inc
fstpt
xor
popf
sbb
add
sarl
scas
add
lea
sub
pop
lcall
and
xchg
fiaddl
jmp
imul
and
inc
add
sbb
lock
cmp
das
push
je
sbb
jg
lret
xchg
scas
and
add
hlt
sub
out
ds
addb
ljmp
nop
lret
andl
outsl
add
xchg
and
xchg
sbb
cld
dec
je
add
fsubl
and
ljmp
int
and
adcl
jns
mov
sub
andl
cmp
test
les
add
jmp
jp
fdivrs
addl
rorl
in
lods
xor
xchg
insb
mov
ficoml
scas
sbb
xchg
xchg
bnd
in
addl
lcall
js
test
pop
rclb
xlat
hlt
add
push
fbld
jle
enter
push
mov
pop
xor
cwtl
loopne
add
pop
fistps
mov
jb
in
xor
in
jno
push
cmpsl
aaa
push
jo
lock
shll
xor
mov
xor
and
jge
lods
add
xchg
fwait
pop
clc
int3
dec
push
pushf
add
pop
sti
xor
adc
ds
add
mov
add
pop
out
push
jns
fiaddl
or
jl
add
mov
xchg
push
adc
insb
add
jno
push
push
adc
into
in
not
cmp
shll
test
cwtl
aam
ret
jecxz
inc
lock
popa
add
cli
pusha
adc
adc
sub
mov
push
int3
mov
dec
add
shlb
add
mov
dec
dec
mov
adc
test
and
scas
add
jb
nop
and
outsl
out
cmp
push
loopne
jbe
fmull
or
movsl
jle
int3
mov
std
mov
shll
call
shrb
testl
xchg
add
orb
lcall
or
mov
mov
push
pushf
sbb
inc
js
push
roll
xor
add
mov
add
adc
das
leave
add
add
sti
aam
sarb
add
movsb
pop
mov
fcoms
xchg
mov
add
mov
add
daa
stc
xor
in
add
aam
jle
test
test
inc
sar
dec
repnz
psllq
pop
push
inc
jg
call
pop
jne
lret
cwtl
dec
add
test
cmp
inc
cwtl
jo
fdivs
insb
inc
add
fimull
and
add
into
ds
push
push
xchg
idiv
push
sub
in
loopne
push
int3
bound
jg
andb
ljmp
imul
add
xchg
cmc
hlt
in
add
imul
mov
and
jge
add
jnp
add
aaa
pop
add
dec
shlb
je
xor
es
cmp
add
push
out
test
xor
clc
push
imul
or
cltd
movsl
das
push
andb
cs
int
fdivrl
and
dec
subb
dec
or
out
cmp
stos
or
mov
daa
dec
add
adc
sbb
addb
dec
pop
mov
nop
xchg
xchg
add
adc
fadd
sarb
adc
and
add
dec
loope
add
jecxz
sbb
mov
test
add
pop
sub
aad
xchg
jo
sbb
push
lgs
pop
and
insb
loopne
call
or
sarl
sti
pop
xlat
out
jb
hlt
add
or
mov
add
push
inc
jbe
repnz
jo
popf
lcall
sarl
xor
out
loopne
inc
movaps
pushf
pusha
pop
jno
and
fidivrl
add
mov
add
sbb
push
ret
subl
rolb
jle
xchg
dec
das
and
loopne
pushf
jl
roll
cmp
mov
das
ss
pop
roll
sbb
add
push
mov
and
sbb
call
add
testl
add
jo
pop
stos
xchg
mov
loope
and
insb
pop
ficoms
inc
lock
cmp
pop
lods
movsb
cmp
shl
jp
inc
popw
cmc
add
inc
sub
sub
mov
iret
nop
loop
lods
or
cmp
hlt
aaa
loope
mull
or
loop
jmp
adc
add
mov
fucomip
ficomps
cmp
add
stos
iret
aad
loopne
mov
pushf
push
push
xor
sti
sbb
ljmp
and
sub
and
add
arpl
test
je
add
fdivr
and
inc
loop
into
push
xor
jns
push
add
mov
fsubs
mov
adc
lea
pusha
hlt
js
repnz
jbe
paddw
popa
cmp
or
test
in
cmpb
popf
add
push
cs
dec
xchg
shrb
stos
cmp
mov
call
add
outsb
sahf
repz
jb
sbb
ljmp
jae
fldt
jnp
sub
xchg
mov
sbb
mov
add
mov
mov
shlb
gs
add
push
clc
arpl
fwait
mov
ljmp
fnstenv
call
add
mov
lock
test
std
rol
dec
incl
mov
pop
mov
pop
pop
mov
shrb
outsl
ljmp
cld
jae
jge
lock
insb
add
xor
ljmp
adc
addb
sbb
push
sub
adc
sarl
sbb
mov
aam
xlat
cltd
cmp
push
cmp
js
sbb
add
rorl
fildl
push
jo
add
adc
and
rol
fcompl
das
fildll
lret
lock
incl
add
mov
cmp
and
dec
cli
adc
adc
addr16
mov
sbb
push
inc
repz
inc
jns
repnz
test
imul
popa
ja
jecxz
sti
mov
testl
shrb
sbb
popl
out
mov
sbb
and
cmp
add
daa
pop
xchg
add
and
dec
fcompl
loopne
negb
sahf
es
pop
rorb
mov
pop
nop
dec
insl
add
push
jae
fsubrs
test
lret
mov
mov
repz
stos
les
out
loope
adc
mov
cmp
clc
inc
in
aaa
pushf
jg
jo
pop
or
scas
lods
pop
add
out
adc
insl
je
aas
xchg
adc
pushf
movl
push
rclb
add
or
push
adc
jge
add
stos
sub
sbb
lods
in
push
or
xlat
adc
sub
inc
jno
push
adc
in
pop
les
dec
inc
outsl
pop
and
and
cmp
jae
xchg
pop
adc
dec
cmp
push
or
adc
xor
or
jmp
adc
fldenv
loopne
or
data16
shll
call
sub
test
mov
cmpsb
imul
push
push
lcall
add
lret
pop
jae
fwait
nop
push
pusha
mov
xchg
daa
sbb
popf
addb
xchg
out
fstl
dec
add
sub
lock
movsb
rclb
mov
fwait
jnp
pop
mov
leave
inc
and
or
fnstsw
in
in
aam
in
sbb
xor
add
and
xchg
inc
push
add
sub
pop
jg
iret
dec
mov
or
cmp
pop
dec
cmp
je
xor
and
mov
xor
pop
sub
js
pop
cmp
and
lahf
out
mov
jnp
jns
fdiv
hlt
sbb
in
cmp
enter
and
dec
cmp
clc
divl
imulb
cli
mov
add
ds
addl
cmp
in
dec
mov
mov
pop
rcrb
xor
push
add
inc
xor
sbb
push
inc
pop
repnz
mov
add
push
pop
out
lcall
xchg
scas
and
and
das
add
or
iret
rcrb
and
mov
pop
mov
ret
or
xchg
add
mov
pop
jp
push
jo
gs
int
mov
mov
adc
pop
sub
push
xor
repnz
mov
jmp
add
push
xchg
jl
fsubl
and
movsb
inc
push
dec
add
cmpsb
in
sbb
xor
xor
xor
aas
add
mov
adc
push
lods
clc
popf
faddl
hlt
call
aas
loopne
add
inc
sub
mov
shlb
mov
add
scas
hlt
rorb
mov
push
jo
enter
xor
and
arpl
rcrb
fsubrl
addl
ja
fnsetpm(287
mov
push
fldenv
jo
add
ljmp
out
aas
fmuls
cli
or
sbbl
lret
and
pop
mov
mov
leave
repz
test
testb
fisttpl
pop
and
pop
stos
jg
roll
jbe
lea
add
adc
adc
ret
xor
mov
enter
add
pop
leave
inc
push
sar
xchg
filds
out
cmp
mov
fstl
ljmp
data16
pop
push
xor
add
jae
adc
mov
mov
push
xchg
stos
inc
cld
jbe
inc
clc
bound
sbb
fcomp
sar
js
cwtl
lea
mov
push
test
ss
repnz
in
mov
xor
cmp
lods
lret
and
add
inc
mov
add
jmp
adc
add
sbb
xchg
mov
mov
sub
icebp
and
mov
push
cld
or
jecxz
stos
add
or
shr
daa
push
add
jo
sarl
add
dec
jp
add
add
cld
aas
or
jnp
xchg
es
add
fs
into
mov
add
loopne
mov
sub
in
sub
push
aad
insl
mov
lret
ret
push
jb
enter
add
jo
movsl
add
jl
sub
aas
flds
ds
inc
out
jge
or
sbb
sti
dec
add
iret
ffreep
in
rcrl
cmp
mov
add
mov
pop
add
inc
pop
cltd
pop
xor
sub
dec
push
dec
cwtl
clc
jg
js
lahf
mov
out
adc
lods
pop
ljmp
jo
inc
add
inc
xchg
cmp
addr16
jb
push
mov
add
dec
cmp
jg
test
sbb
xor
mov
add
les
jo
cwtl
add
js
pop
roll
sub
sbbb
lcall
ror
jle
add
cs
or
cmp
lret
test
imul
add
jg
jle
fstps
xchg
dec
inc
fldl
loop
cmp
xchg
or
in
fsubrl
dec
xchg
and
sbb
mov
add
into
cmpsb
call
add
adc
xchg
mov
inc
jp
fldenv
and
adc
add
inc
mov
fsubl
add
mov
scas
inc
daa
int3
add
cltd
fs
xchg
cwtl
mov
aas
cmp
push
push
mov
cmpb
or
cli
inc
in
add
push
pusha
fldl
xchg
xor
lcall
int3
lock
fmul
rolb
aad
pop
les
add
pop
adc
mov
fsubrl
push
loopne
pop
ss
pop
inc
jno
adc
ror
pop
mov
jbe
fmull
out
add
loopne
and
ds
insb
add
inc
jnp
das
popf
cmp
mov
ljmp
and
in
mov
add
adc
inc
push
xor
pop
adcl
push
lock
or
jl
add
ret
jge
addb
and
xor
dec
andb
cmpsl
add
xchg
push
mull
adc
loopne
add
push
dec
scas
daa
cmpb
add
icebp
xchg
xor
lods
or
xchg
jne
outsl
add
int
ljmp
test
adc
aad
arpl
pop
cmpsb
push
pop
sti
inc
add
aas
and
repnz
mov
add
push
jmp
push
add
aas
stos
mov
shrb
xchg
ja
repz
pop
cmp
or
outsl
sbb
lds
lret
pop
incl
scas
adc
or
mov
repnz
aad
inc
and
add
shrl
scas
imul
add
dec
xchg
test
daa
jnp
push
stos
and
sub
push
insl
cli
shlb
mov
add
add
jo
test
into
push
add
jmp
cld
sahf
fiadds
mov
xchg
push
pushf
mov
sbb
mov
movsb
add
mov
add
pop
adcl
sbb
fwait
mov
pop
int
adc
pop
mov
ds
mov
and
push
adc
in
jecxz
or
sar
mov
les
outsb
jb
pop
mov
aam
test
pop
sahf
cmpsl
or
rclb
addr16
add
or
sub
das
in
add
loope
mov
dec
pop
add
jno
int3
and
dec
add
sub
stc
jecxz
mov
and
call
enter
jbe
stc
sbb
push
dec
and
add
mov
nop
fs
jle
push
and
add
repz
lcall
fwait
xchg
pop
xor
test
add
or
add
in
ja
mov
adc
lds
mov
sarl
add
sti
add
bound
add
hlt
xchg
cs
cld
hlt
imul
xchg
xchg
in
mov
mov
jmp
pop
dec
fidivrl
mov
add
sbb
add
imul
aas
rcrb
add
jbe
cltd
add
add
jle
in
fadds
xorl
xchg
lock
lret
jle
mulb
add
movsl
pop
cwtl
push
andl
push
jo
push
add
pop
add
jae
or
sahf
aad
nop
cmpl
clc
lods
jbe
loope
cwtl
movsl
add
dec
fsts
mov
fadd
inc
popf
pusha
das
adc
fcomps
inc
in
add
or
jnp
add
jno
aaa
popa
pushw
adc
push
adc
and
cmp
adc
pop
xchg
add
popa
mov
repz
sub
les
push
push
arpl
dec
inc
daa
mov
fwait
mov
jecxz
xchg
add
and
dec
add
sub
add
hlt
gs
shlb
out
fcmove
pop
xchg
adc
jne
and
inc
out
mov
add
ret
cli
call
icebp
insl
add
adc
or
jne
rorl
xorl
xchg
mov
mov
pop
je
filds
les
lcall
scas
inc
aas
sbb
jle
add
mov
xor
xor
inc
ret
dec
pop
xchg
rclb
mov
sub
jbe
adc
arpl
push
inc
cld
jle
test
imul
push
push
ljmp
loopne
add
push
lret
add
mov
in
fwait
mov
inc
xorb
clc
sub
adc
dec
ret
xor
cmp
fadds
push
repnz
repz
mov
add
mov
addl
cmp
adc
lock
nop
pusha
add
push
ret
fiadds
pop
adc
and
fwait
pop
mov
arpl
sbb
mov
dec
pop
out
push
push
arpl
xchg
adc
mov
and
jp
push
xchg
mov
push
adcl
test
aam
loop
pop
dec
add
or
out
add
scas
hlt
pop
pushl
maxps
add
xor
or
pop
mov
shll
mov
test
fldt
add
lods
pop
jnp
loop
in
lock
push
add
std
mov
mov
fistl
insb
js
rorb
dec
xchg
mov
loopne
mov
xor
iret
xor
push
add
lcall
ss
fimuls
dec
xor
xor
jecxz
pop
add
stos
mov
pop
loopne
imul
roll
sahf
outsl
push
xor
gs
cmpl
push
mov
in
fs
hlt
push
add
enter
fstpt
cmpsb
mov
fisubrl
in
xor
sbb
inc
subl
jle
sbb
insl
sbbb
dec
add
cld
rolb
and
add
push
ficompl
dec
add
cmp
add
test
inc
sub
dec
add
xchg
shl
out
mov
inc
adc
mov
in
add
rcr
add
les
cmp
scas
cli
cli
filds
popf
xchg
negb
and
mov
ds
jp
les
call
add
mov
add
inc
insl
dec
ss
sbb
xor
sahf
push
or
das
repnz
mov
adc
mov
call
adc
cmp
lahf
or
nop
push
subb
mov
add
jg
jno
popa
pop
jmp
addl
pop
rcrb
pushf
sub
adc
fst
sbbb
lret
adc
pop
and
push
inc
mov
pusha
aas
int
sub
vmread
rolb
mov
popa
cld
mov
inc
xchg
and
xchg
stos
adc
mov
inc
jbe
subb
or
mov
imul
in
addr16
add
push
xchg
mov
cwtl
mov
add
mov
wrmsr
add
cs
stos
add
xor
jo
addr16
les
add
cli
je
loopne
push
add
xor
into
pop
insl
shlb
out
andb
fildl
mov
xchg
push
push
xchg
leave
add
int
insl
test
cmp
mov
mov
std
jno
sbb
add
cmp
adc
in
add
dec
decb
ds
sbb
iret
lcall
popf
hlt
cmp
pop
in
push
cmpsl
mov
sbb
sub
inc
mov
sbb
out
add
xor
mov
push
addr16
push
lods
inc
loopne
push
and
dec
add
call
add
pop
lock
adc
test
mov
je
ja
test
cmp
addb
pop
mov
lods
pop
idivb
mov
jo
mov
data16
xlat
mov
ret
fbstp
inc
cwtl
nop
xor
xor
xchg
jecxz
fisttpll
push
adc
mov
cwtl
test
inc
jge
adc
outsb
dec
mov
xchg
mov
push
testl
fisubl
mov
add
jp
mov
mov
nop
dec
and
sub
cmpsl
dec
mov
outsb
cmove
loopne
adc
rcr
dec
cmp
and
call
outsb
adc
xchg
sbb
pop
fadd
cmp
sub
and
sbb
mov
sub
jno
add
iret
lds
lret
int3
sub
add
adc
ljmp
mov
stos
add
ss
add
adc
in
add
popa
jl
lods
loop
psrlq
mov
test
or
add
ds
jne
out
add
leave
mov
stos
add
adcb
les
daa
add
dec
out
call
testb
push
or
mov
mov
jno
subb
or
pop
cld
ret
inc
repz
sub
je
and
mov
xor
jbe
xchg
sbb
or
cmp
add
ret
push
sbb
scas
push
add
roll
cmp
add
pop
stos
mov
mov
sti
shlb
or
cmpsb
mov
push
add
mov
cmpsl
add
jns
movsl
jmp
and
add
jne
lods
jge
add
and
scas
in
jl
lea
push
fbld
cmp
add
xchg
mov
loopne
sub
mov
xchg
mov
fisubrl
and
stos
inc
and
ja
add
pop
fwait
movsl
data16
jns
adcb
iret
cltd
in
mov
movl
aam
add
add
imul
cmp
into
js
sub
and
mov
pop
insb
xor
gs
pushf
jne
jecxz
mov
out
stos
push
clc
loop
rolb
andb
stos
add
push
out
jbe
add
lods
and
lret
fstpt
enter
hlt
idivl
push
cltd
daa
mov
inc
nop
call
mov
loop
or
or
xor
out
add
pop
xor
push
xchg
insb
mov
xor
and
pop
outsb
pop
mov
push
leave
icebp
lahf
xor
xchg
test
dec
movsb
inc
testb
and
mov
iret
int
sahf
icebp
aaa
add
js
pop
dec
jge
add
shl
clc
jns
add
add
dec
pop
bound
in
mov
xor
insb
cmpsb
lds
daa
inc
daa
div
shrb
xchg
mov
add
sub
cld
xchg
pop
jns
xor
add
rcll
push
insb
add
jp
aam
sub
jnp
add
sbbb
add
adc
pop
jo
stos
sbb
out
sbb
aas
out
mov
pop
sbb
paddq
jo
fisttpll
lods
je
mov
decl
adc
cld
adc
std
add
inc
fucomp
in
repnz
xor
add
pop
or
add
cmp
rorb
mov
sub
aam
arpl
test
sbb
add
add
fwait
xchg
adc
xlat
aam
add
push
dec
scas
hlt
in
mov
add
push
sarb
or
mov
pop
sub
or
jle
mov
add
lds
add
add
fwait
mov
add
add
jmp
das
rcrl
push
in
rclb
mov
mov
add
fwait
mov
lcall
push
inc
jle
mov
in
fsubrl
dec
lds
icebp
pop
inc
pusha
in
jnp
mov
add
ficomps
aas
add
in
js
cmp
js
xchg
fsubp
daa
lock
adc
notb
push
fisubl
ds
adc
jl
add
xor
daa
pop
data16
cmpsl
and
gs
mov
popf
mov
fst
jle
jnp
das
lahf
adc
sbb
pop
test
call
mov
add
xor
sub
nop
add
lock
push
dec
add
inc
fisttpl
and
fcompl
popa
cmpsl
cmp
inc
lock
sub
or
adc
hlt
mov
add
icebp
pop
mov
cld
cmc
bound
mov
inc
add
shl
addr16
jmp
out
cmpsb
add
stos
sbb
sbb
mov
jl
iret
stc
call
shlb
sub
push
loope
or
pop
addr16
outsb
add
fdivrs
cwtl
loop
push
add
add
add
adcb
mov
mov
mov
cmp
mov
add
mov
sar
cmp
mov
mov
pushf
adc
or
ret
or
xor
out
repz
test
sub
leave
xlat
xchg
dec
enter
xchg
add
nop
fbstp
movsb
jge
push
clc
enter
adc
jns
add
jae
sti
daa
stos
mov
xor
add
loopne
jle
orl
cmp
xchg
nop
add
sarb
test
adc
in
mov
push
pop
cmc
xlat
mov
xor
sbb
dec
scas
add
pop
jmp
xchg
or
and
aam
lret
add
imul
xchg
inc
cmp
int
mov
testb
cs
add
popl
xor
dec
fmul
cmovns
and
mov
push
rclb
es
dec
roll
add
sbb
call
inc
or
adc
xor
add
xor
jno,pt
fsubs
xlat
push
inc
pop
repnz
in
adc
mov
sub
adc
sub
mov
cwtl
push
add
lret
pop
rcl
js
add
dec
cwtl
iret
or
movl
add
xor
and
jl
mov
xchg
sbb
hlt
jge
add
lcall
daa
fcmovu
push
add
jne
test
inc
cmp
out
xchg
loope
jl
add
mov
enter
and
decl
and
mov
jb
sub
xchg
aas
arpl
inc
ret
cmp
daa
lods
sahf
add
adc
divl
in
adc
push
stos
cltd
xorl
lock
outsl
inc
loopne
es
jae
lock
popa
or
lcall
dec
dec
jmp
out
popf
clc
std
stos
adc
mov
pop
mov
add
cld
fs
popa
push
xchg
add
dec
sbb
imul
jbe
mov
mov
nop
xor
sub
ljmp
ret
fmull
add
mov
cwtl
aaa
clc
jl
mov
xchg
js
pop
lcall
inc
enter
inc
pop
adc
cmp
loope
sbbl
andb
push
adc
fdivrl
rolb
sbb
ret
enter
mov
addr16
icebp
imul
aam
cmpsb
xor
nop
lret
ja
ss
mov
pop
inc
ds
add
je
imul
lods
push
movb
sar
sub
push
fistpl
lods
sti
xor
mov
add
movsl
add
movsb
test
lcall
cltd
negb
fistl
push
fadd
enter
add
and
pop
je
cs
mov
mov
scas
mov
mov
std
outsl
dec
fldcw
push
mov
out
leave
push
shll
aas
stos
hlt
add
aam
add
sti
jmp
add
insb
push
fildl
inc
in
xlat
and
nop
cmp
mov
in
cmpsl
and
into
aas
or
in
pop
pushf
outsb
ffree
and
push
xchg
rcr
fdivrl
cmp
xchg
orb
or
xor
sbb
add
icebp
adc
cmp
sbb
jae
add
push
push
movsb
add
inc
aas
in
rorl
iret
iret
loopne
shl
mov
jae
add
and
lret
or
lret
inc
inc
rclb
or
fdivs
fcom
add
and
add
nop
push
cs
or
xchg
add
mov
push
cmp
in
push
out
mov
addb
add
in
call
add
cwtl
int
or
ret
mov
mov
dec
xor
cmp
cmpsb
mov
add
addl
roll
aaa
add
fdivs
int
ss
xor
js
add
add
stc
cmp
dec
mov
sbb
in
sti
and
pop
mov
cmpsl
ror
jl
jl
pop
mov
mov
inc
or
xor
xchg
adc
pop
ret
push
lock
pushf
aam
sub
add
pop
add
popa
mov
shlb
mov
add
pop
es
and
sbbb
and
push
cmp
rcr
xchg
loopne
jns
push
js
adc
sbb
in
shrl
mov
int
push
dec
xchg
jae
das
mov
cmp
shlb
inc
mov
push
es
inc
cmp
mov
loope
bound
xchg
or
dec
dec
shrb
ds
add
outsb
sub
imul
add
int3
push
mov
sar
xchg
mov
enter
push
ret
lahf
mov
adc
fisttpl
test
or
fld
add
mov
add
mov
inc
fs
pop
add
dec
mov
repnz
add
out
lret
mov
adc
cmp
push
and
loopne
lods
cmp
in
int3
sub
add
sub
add
aad
add
enter
mov
cmp
and
push
xor
jno
add
clc
mov
mov
std
cmp
dec
push
cmpb
add
dec
fldl
addl
fistps
test
adc
mov
sub
int3
fistl
call
xor
dec
mov
adc
and
insl
add
pushf
fwait
mov
push
cmp
adcb
test
fisttpll
sbb
jg
popa
cltd
cmp
hlt
or
adc
adc
mov
scas
fmulp
in
pushf
mov
icebp
inc
xchg
in
rolb
xchg
mov
pop
mov
add
ror
jge
add
jp
fldcw
orl
das
pop
in
inc
lds
fwait
xchg
add
gs
hlt
xlat
fdivrs
sub
int
ds
xchg
nop
mov
gs
add
ret
loope
das
jp
add
jmp
je
add
sbb
push
movl
add
and
xor
enter
dec
pop
jno
dec
or
stos
dec
stos
addl
call
and
xchg
push
aad
idiv
mov
frndint
sbbb
sbb
add
shlb
out
inc
mov
aas
repz
push
and
push
push
or
es
cmp
add
sahf
ljmp
rcrb
jo
xor
sbb
xchg
push
fadds
subl
js
adc
out
mov
add
mov
mov
cmp
xchg
xchg
sub
xorl
inc
movl
add
mov
mov
fisttpll
dec
in
daa
add
stos
add
out
daa
ret
pusha
movups
dec
mov
inc
insl
add
outsb
iret
sub
push
jae
add
repnz
add
and
mov
fisttpl
test
xchg
add
notl
pop
add
fnstcw
pop
sub
sbb
add
js
mov
inc
ljmp
pusha
fcomps
repnz
es
push
cmp
insb
jmp
mov
add
fnsave
les
movsl
shr
fistps
gs
add
cltd
inc
aas
cmc
jne
adc
lods
adc
jg
clc
add
iret
or
test
addr16
pop
aaa
sub
int
pop
das
jo
pop
adc
nop
pop
jg
add
inc
push
in
mov
test
bound
push
aad
loopne
daa
pop
jb
pop
cmp
mov
popf
xor
add
je
inc
sub
test
imul
and
mov
pusha
mov
pop
inc
ja
cmp
push
xchg
cmp
loop
push
nop
roll
das
mov
dec
in
je
mov
rorl
or
and
pop
addb
pop
aas
add
out
sub
arpl
out
negl
jne
add
xchg
sub
push
sub
lahf
loopne
xchg
xor
loopne
aaa
jns
ret
xor
popf
fwait
daa
add
enter
xor
cmp
add
sbb
adc
mov
xor
ss
clc
cmp
test
jbe
cmpsl
ljmp
jl
loopne
es
roll
andl
push
lahf
insb
mov
dec
xchg
add
sahf
mov
add
sub
dec
mov
inc
sbb
pushf
mov
rcl
pop
dec
xor
add
rolb
std
pop
cmp
cwtl
or
cs
mov
jecxz
pop
fisttpl
pop
aam
das
sarb
dec
negl
pop
mov
or
loopne
push
aad
pop
jo
mov
xchg
jg
xor
mov
add
test
std
xchg
shlb
repz
pop
sbb
fildl
or
dec
mov
sarb
cmp
push
dec
pop
jmp
jno
nop
add
lahf
fdiv
fstl
cmp
xchg
mov
es
int3
jne
add
xchg
adc
jl
jecxz
jae
xchg
call
out
pop
sub
outsl
sbb
add
sarb
mov
pusha
or
int
repnz
add
jge
or
into
roll
mov
inc
pop
xchg
add
push
incl
pop
lods
in
push
cmp
lds
add
and
je
cmp
add
dec
push
std
ljmp
inc
jo
rol
mov
xchg
in
pushf
outsb
mov
add
cmp
nop
jbe
aas
dec
cmpsl
adc
push
xor
iret
add
test
mov
lahf
xchg
jo
adc
in
repnz
dec
add
in
popa
idiv
pusha
js
jnp
jo
ljmp
pop
das
push
pop
add
xor
fiaddl
or
jecxz
pop
cwtl
aaa
mov
add
movsl
call
sbb
or
jae
push
aaa
xlat
add
and
jl
hlt
shll
mov
addl
xchg
add
lahf
mov
pushf
test
add
push
add
clc
clc
dec
stos
mov
insl
ret
es
pop
add
dec
xor
arpl
shlb
add
inc
push
jns
push
or
scas
add
adc
and
add
jne
cmp
pop
std
jnp
xchg
dec
in
cmpb
push
icebp
sbb
loope
add
cmp
dec
jo
push
add
push
inc
add
fstps
incl
ja
mov
and
testl
addb
xor
pop
mov
pop
sub
push
dec
imul
iret
push
or
cmp
xor
xorl
fmuls
dec
mov
and
addl
push
in
fsubrs
mov
inc
ja,pn
xor
xor
add
push
mov
lret
ret
add
out
addr16
mov
in
or
push
add
and
xchg
or
add
push
sub
add
nop
sub
movhps
and
stc
imul
mov
inc
xchg
xor
pop
jb
jns
pop
push
sub
lahf
imul
sbb
jb
andl
add
mov
ljmp
xor
xor
cli
push
aaa
rolb
add
lret
gs
mov
or
rcrb
loopne
add
inc
in
out
stos
push
add
imul
clc
les
push
imul
movsl
clc
mov
addl
js
cmpsb
mov
xor
pop
xchg
adc
push
add
pusha
jne
mov
cmpsb
add
inc
inc
push
xchg
mov
decb
xchg
pop
test
mov
mov
subb
mov
push
shll
mov
loopne
popa
adc
adc
mov
fiaddl
subb
lock
into
add
test
add
cmpsl
out
ss
cld
in
ficoms
scas
adc
je
add
arpl
adc
sahf
cs
lock
faddl
mov
add
test
xchg
divb
add
ja
call
sbb
pusha
add
sub
or
jnp
loope
subb
stos
mov
inc
ss
adc
push
pop
xchg
pop
mov
xchg
add
xchg
loopne
xor
inc
and
push
frstor
add
in
inc
add
int3
outsb
push
lock
jns
cmp
mov
pop
or
jg
or
shl
add
std
xchg
push
and
mov
and
add
or
ljmp
movsl
push
pop
xor
mov
lea
stos
add
add
pop
jmp
xchg
cmp
in
xchg
cli
or
or
fs
cmp
xchg
icebp
or
or
ljmp
jbe,pn
call
decb
aaa
movsl
mov
cwtl
popa
add
sub
pop
leave
cmpsb
jb
mov
adc
push
add
xchg
aad
cmp
add
out
call
hlt
inc
push
add
xor
loope
sbb
in
pop
jg
ffree
lods
mov
loope
pop
jns
add
pusha
mov
push
xor
pop
loopne
mov
add
mov
jecxz
sbb
lock
sub
bound
outsl
xor
mov
jno
sbbl
outsb
add
push
lea
push
cmpb
or
nop
fwait
mov
rolb
out
mov
int
cmp
ud0
pop
adc
push
mov
inc
daa
push
fistps
sbb
in
push
mov
sbb
insb
inc
jno
seto
test
loopne
dec
aaa
xchg
xor
inc
mov
and
loop
add
mov
mov
gs
xor
and
js
mov
jns
inc
jb
mov
cmp
add
push
rolb
inc
xor
mov
cmc
pop
loop
addb
cmp
mov
cmp
mov
push
pop
jnp
add
cmp
pop
loop
mov
mov
loopne
cmp
mov
fwait
addr16
add
scas
or
or
add
loopne
fldenv
push
sbb
loopne
jle
add
push
add
xchg
data16
and
pop
or
mov
mov
add
aaa
fldcw
psubd
das
scas
mov
cltd
in
fsubr
mov
insb
sub
add
lret
xorb
movsb
data16
jne
sub
push
rolb
xor
push
out
shll
in
sbb
dec
shlb
adc
add
fst
jmp
jno
cvttps2pi
cmp
mov
jae
add
in
das
jns
cld
cmpsl
mov
stc
push
add
sub
mov
aad
out
rcrl
cwtl
adc
inc
pop
loop
das
loopne
adcb
push
shl
pushf
jno
dec
add
jl
and
add
in
push
addr16
add
std
mov
cmpsb
add
andb
cmp
nop
subb
add
xchg
stos
pop
int
cmp
scas
add
nop
push
push
scas
les
sub
add
popa
je
ret
dec
out
mov
jb
xchg
pop
mov
add
xor
fmull
ja
or
push
add
or
add
test
ja
movsl
daa
fdivrs
and
repz
jo
add
cmpsb
jecxz
add
xlat
ror
xor
test
int
mov
mov
notl
imul
sub
lds
iret
bound
es
jo
xchg
add
mov
dec
sbb
lock
jns
mov
push
mov
push
add
xlat
sbb
mov
xchg
cmp
loope
and
daa
sbb
mov
or
test
xor
stos
enter
add
dec
repz
movsb
js
hlt
loopne
dec
and
test
push
ficomps
xlat
or
nop
add
xchg
repz
pop
and
pop
popa
xorb
subb
and
test
xor
loopne
jns
mov
mov
ret
pop
sub
sahf
outsb
out
mov
cmp
hlt
lods
and
xchg
add
or
aam
data16
mov
push
daa
cmp
out
ja
add
sub
add
or
mov
push
dec
ret
push
mov
imul
xor
inc
popa
popf
jl
nop
mov
jl
add
inc
lea
push
and
sahf
stc
je
jp
outsb
jae
inc
add
sbb
stos
pusha
gs
fildl
movsb
sbb
arpl
push
jae
je
bound
sbb
mov
push
and
insl
and
or
jp
add
mov
and
setae
pop
cmp
psubsb
xor
push
sar
arpl
fdivl
in
push
xor
movsb
pusha
jne
push
mov
sbb
mov
test
and
adc
clc
inc
daa
hlt
cmpsb
adc
pop
add
xchg
dec
sbb
add
outsb
add
cli
cmp
or
jo
repz
sbb
mov
outsb
mov
xor
cmp
mov
outsl
test
ljmp
cs
jo
xchg
cmp
jns
clc
mov
cmp
movsb
push
jns
mov
mov
imul
sbb
repz
jle
push
add
fs
add
inc
add
jl
push
xchg
rcll
mov
hlt
test
jb
adc
inc
or
lock
jecxz
or
ljmp
ror
loopne
jae
xchg
pop
or
popa
xor
jl
ds
aad
ficoml
jns
lcall
jns
rcrl
jbe
js
andb
mov
add
pop
mov
pop
jno
mov
test
fisubrs
jnp
cmp
cmp
popa
cmp
or
pushf
add
int
and
in
add
cmp
fwait
xchg
add
or
ds
scas
add
fcomip
dec
dec
add
sub
enter
xchg
mov
xor
pusha
outsl
ffreep
mov
xchg
call
mov
sub
push
and
push
adc
jge
pop
mulb
in
sub
cmp
mull
sbb
dec
addb
jne
shr
add
adc
add
mov
arpl
scas
clc
cmp
add
fcmovu
pop
mov
aad
lods
imul
cmp
pop
dec
inc
cmpsl
mov
sbb
sub
xor
addb
sub
sub
shr
sub
jle
ljmp
jno
bound
test
jbe
arpl
add
and
mov
add
inc
dec
imull
orl
cld
adc
lds
repz
nop
enter
add
lock
pusha
jbe
mov
adc
out
test
add
sbb
and
orb
imul
out
push
aas
sub
adc
add
and
and
je
or
movsl
inc
inc
test
mov
and
or
push
xor
bound
in
jle
jo
movsl
out
mov
adc
paddq
mov
inc
pop
test
ds
pop
rolb
adcb
mov
lret
pop
mov
mov
popa
inc
sbb
add
into
mov
push
daa
sbb
gs
add
jo
mov
push
cmpl
adc
sbb
sub
jge
sub
clc
adc
fistpl
add
sbb
jg
sbb
ljmp
fidivrs
mov
mov
sub
je
jno
ljmp
and
mov
jb
push
mov
shlb
add
test
and
add
or
lds
and
ljmp
xor
xor
arpl
pop
inc
fisubrl
add
xchg
dec
pop
push
test
pop
lret
nop
jno
add
mov
cmp
inc
test
add
stos
mov
mov
mov
adc
shlb
icebp
lds
int
mov
fimull
inc
add
call
es
pop
fimull
xor
lock
or
add
mov
popa
or
fwait
imul
adc
into
adc
cmpsb
xchg
or
and
and
out
sub
adcb
sbb
scas
xor
or
dec
jle
sbb
repnz
mov
insb
add
sub
jns
push
in
or
jo
mov
ret
dec
ljmp
add
enter
cmp
or
inc
and
cs
dec
sbb
mov
xor
dec
mov
andb
and
and
cld
sub
add
notl
fwait
pushf
loop
add
subl
mov
sbb
orb
in
popa
sbb
mov
or
cmpsl
xorb
stc
std
jl
jne
movsb
scas
cmpsb
add
mov
xchg
cltd
sub
ret
inc
cwtl
lret
mov
jne
cmp
scas
and
sub
or
sub
and
jle
add
repnz
mov
cld
mov
push
mov
js
jg
inc
lock
add
xchg
stos
mov
int3
nop
push
dec
sub
xchg
mov
adc
mov
add
sub
add
insl
and
dec
sahf
data16
out
add
movsl
fs
fistl
dec
add
and
xor
mov
xchg
mov
les
leave
test
pusha
int
mov
les
ficoms
or
mov
add
push
xor
sub
fwait
jo
dec
mov
and
add
and
and
dec
jo
jae
cmp
dec
out
add
or
out
adc
rcll
call
push
orb
or
xchg
jmp
push
pop
in
and
push
inc
sbb
loopne
xor
mov
and
mov
insl
lea
and
sbb
lahf
ds
pushf
or
push
fldenv
pop
mov
cwtl
cwtl
lods
out
cmp
nop
cmp
xchg
mov
jle
and
les
imul
out
sub
inc
cmpsl
adc
test
sbb
add
jg
jo
test
in
cli
dec
inc
ret
into
cmp
pop
in
test
and
loopne
les
add
repnz
adc
add
js
movsl
xchg
aas
cmc
in
and
push
shlb
sbb
test
int3
jl
testb
jno
jb
fcmovnb
and
xchg
aam
int
or
sub
mov
outsl
pop
xchg
jg
cmc
and
mov
sub
mov
jecxz
enter
add
xchg
and
jmp
add
add
aad
xchg
gs
add
fimull
sbb
adc
test
hlt
movsb
mov
pop
shlb
call
xchg
loopne
mov
add
andb
mov
dec
inc
cld
fsub
mov
dec
add
rcll
test
ljmp
aas
enter
rcl
mov
test
lds
jg
aam
jmp
xor
mov
adc
and
popf
or
lahf
jbe
rcl
rclb
xchg
sbb
pushf
or
adc
add
dec
cmp
lahf
test
ret
scas
cmpl
xor
and
in
iret
js
pusha
test
xchg
fwait
mov
dec
movsb
jns
addl
add
bound
mov
test
and
notb
or
pop
add
xor
mov
sbb
pop
cmp
sti
clc
lds
pop
dec
pop
or
sub
mov
mov
mov
add
test
orl
adc
nop
in
inc
cwtl
popl
faddl
call
pushf
cli
adc
jbe
popa
pop
addr16
sub
adc
push
mov
shll
sub
inc
sbb
xchg
and
cwtl
movsb
mov
fadd
pop
add
cli
arpl
shlb
mov
test
ja
add
ret
adc
movsl
push
mov
cld
jne
add
jmp
mov
push
int
mov
adc
mov
adcl
cmp
dec
roll
inc
push
fldl
data16
sbb
inc
xor
ja
add
adc
xchg
cmp
int3
or
inc
dec
jl
clc
pop
inc
inc
mov
or
lahf
lret
add
stc
out
nop
adc
fidivl
and
adc
data16
lea
mov
add
jne
cmpsb
jg
lods
subb
cmc
or
add
and
aad
cs
add
push
cmp
sub
cmp
idivb
dec
adc
sbb
enter
inc
push
sahf
xor
adc
xchg
inc
and
int3
mov
adcl
pop
imul
adc
push
mov
mov
int3
cld
cmp
cltd
and
fs
xchg
faddl
testb
test
or
sbb
push
inc
fmul
cmp
cmp
and
and
add
adc
dec
pop
sahf
pusha
pop
inc
scas
add
add
mov
aas
scas
add
mov
pop
cmpsb
mov
cmp
pushf
xchg
xchg
add
movsl
xor
subb
push
jp
enter
loop
xor
dec
xchg
lods
dec
jbe
ss
stos
and
cmp
jno
stc
insb
movl
push
and
push
out
dec
sbb
add
and
sarb
test
and
jnp
psubd
loopne
jns
insl
pop
add
add
mov
in
sub
xlat
push
add
mov
jl
mov
lea
add
adc
movl
xor
stc
push
push
mov
in
roll
das
mov
repz
add
gs
in
pushf
roll
aas
repnz
je
lret
faddl
xchg
mov
or
sahf
es
sub
mov
sti
jge
nop
mov
inc
add
dec
clc
and
add
xchg
cwtl
push
cmp
sbb
andb
popa
and
out
sbb
rorb
dec
mov
fnstenv
in
add
lods
ja
add
sti
repz
dec
mov
sbb
fcmovnb
xchg
loopne
sub
in
push
jnp
ljmp
xor
enter
in
dec
push
inc
mov
adc
aad
mov
jo
sbb
daa
dec
push
or
imul
out
jb
add
es
mov
mov
loop
mov
mov
fcomps
sub
test
nop
jl
fmull
outsb
pop
hlt
cmpsl
testb
aaa
xchg
push
and
mov
and
push
add
dec
aam
fdivrl
lods
jg
adc
add
shr
outsb
test
mov
outsl
test
and
sub
cmpsb
lret
add
sbb
aas
jge
aam
dec
push
fidivl
push
fistpll
push
mov
loopne
ja
add
xchg
or
int3
xchg
inc
add
aas
xlat
jb
xacquire
xor
test
lret
inc
add
mov
mov
lock
inc
int3
or
sahf
inc
ret
js
lret
sub
add
cmp
pop
stos
arpl
je
or
mov
call
cmp
xor
stos
gs
pop
mov
push
sub
hlt
cwtl
shlb
push
pop
loopne
sarb
gs
out
mov
and
pop
add
jb
roll
add
clc
bound
ljmp
xor
mov
pop
xlat
adc
pushf
fidivrs
loope
xor
cmp
pop
push
popf
loopne
mov
negl
add
cwtl
mov
add
filds
add
mov
add
push
inc
aam
mov
mov
sbb
mov
or
mov
in
mov
out
bound
inc
mov
dec
pop
inc
sub
mov
inc
mov
rcrb
aam
mov
or
pop
push
lcall
mov
push
aaa
enter
adc
dec
dec
jle
inc
xchg
push
add
aam
sbb
push
and
mov
add
xor
subb
test
sbb
ret
inc
orl
pop
out
mov
outsb
sbb
les
icebp
repnz
or
pop
lret
mov
sub
daa
xchg
mov
cltd
cmpsb
pop
pusha
xor
add
or
loopne
sbb
pop
xor
pop
outsl
mov
push
add
inc
push
xchg
add
sti
xor
push
xor
add
addl
push
andl
dec
js
or
sbb
cs
loop
push
or
in
sbb
loopne
add
jns
dec
push
pop
jle
ja
int3
mov
adc
addb
lret
lds
lea
or
icebp
ss
mov
sbb
pushf
mov
add
gs
sub
insb
inc
add
out
cmpsb
adc
xor
add
aaa
inc
push
daa
push
mov
sub
and
dec
cmpb
inc
or
das
bnd
pop
ljmp
sbb
cmp
pop
xchg
mov
cmc
int
andl
in
mov
cmpb
pop
inc
add
push
xor
push
fisttps
cmp
push
pop
push
testb
cmp
iret
add
test
adc
jns
jbe
outsb
jb
loop
cmp
mov
icebp
inc
testb
xchg
xchg
xchg
adc
in
add
jnp
je
xor
and
movsl
sub
or
int3
cwtl
je
pusha
jne
in
lret
inc
ds
hlt
add
cmp
sub
in
pop
xor
add
push
out
je
adc
in
daa
lret
mov
add
call
popa
pop
pusha
imul
orb
or
stos
enter
dec
cwtl
or
js
inc
scas
rolb
jb
add
sub
test
call
sub
test
and
loopne
outsl
jg
add
xor
add
xchg
pop
add
sub
add
mov
arpl
sbb
jno
sub
add
and
mov
inc
add
popa
enter
mov
dec
rcrb
add
mov
call
rorl
push
out
stos
in
xchg
pusha
iret
cwtl
mov
adc
pusha
and
pusha
filds
xor
mov
cmp
mov
inc
jge
fcomi
jns
loopne
push
mov
jmp
sub
add
test
sbb
jno
mov
jo
call
add
fs
xchg
cmp
add
cmpsb
fdivl
mov
fdivrp
push
mov
cmc
clc
mov
inc
xchg
loopne
cmpsl
cltd
pop
cmp
out
push
adc
inc
es
cmp
mov
out
adc
xor
xor
pop
add
jp
arpl
arpl
mov
insl
xor
cmp
xchg
pop
and
ljmp
sbb
jl
pushf
push
ds
outsb
aas
pusha
cmpsb
xor
rorb
pop
push
je
mov
outsl
xchg
test
imul
jmp
cli
adc
nop
rorb
faddl
lods
daa
pop
sub
add
les
add
arpl
int3
pusha
rcrb
dec
sub
adc
out
pop
inc
mov
add
xchg
pop
je
add
loopne
out
les
mov
pusha
mov
popa
xlat
add
and
or
movsb
jmp
lock
aad
xchg
dec
mov
jae
inc
sbb
or
in
mov
push
insl
fwait
jp
push
mov
xor
stos
xor
push
rcrb
out
add
fs
dec
lods
xor
dec
or
shl
test
pop
adc
cltd
mov
rcrb
addb
arpl
xor
xorb
add
decl
mov
ret
shrl
shl
and
xor
fidivrs
in
jnp
movl
inc
mov
nop
repnz
add
test
outsb
adc
add
xchg
insl
in
mov
jns
add
cmc
lret
imul
arpl
imul
pop
mov
add
push
add
shrb
loope
mov
jne
jecxz
rcrb
lahf
jp
adc
cli
pop
add
faddl
push
mov
fs
shlb
clc
add
aad
xchg
cwtl
pop
cwtl
xor
mov
cltd
add
icebp
inc
loop
sub
je
dec
call
dec
ret
aam
mov
inc
outsb
sub
in
pop
add
jno
push
add
sbb
mov
cwtl
add
das
js
cltd
roll
mov
out
sub
mov
and
loopne
and
icebp
stc
mov
addb
pop
test
add
cmp
insb
xor
rol
jns
rclb
or
add
cmp
jp
xchg
pop
pop
cmp
pop
mov
jl
and
add
call
push
xchg
cwtl
std
push
xchg
cmpsb
and
movsl
aam
pop
dec
sbb
test
or
loope
cltd
repz
lods
add
jmp
inc
xor
js
fstps
add
int
icebp
mov
sbb
pop
mov
xchg
ficoms
push
mov
cs
cmp
ds
cld
add
fwait
sbb
add
icebp
lods
pusha
pop
repnz
pop
fs
mov
ljmp
xchg
mov
add
lods
les
and
popf
fldl
mov
lock
mov
xorb
mov
add
add
sub
xor
out
xchg
sbb
xor
aas
sar
ljmp
adc
push
popa
inc
lahf
adc
cmpb
mov
flds
adcl
movsl
sbb
push
cmp
add
add
andb
imul
ja
add
call
dec
pop
mov
int3
push
lea
addb
lcall
cmc
mov
and
pop
mov
add
mov
les
clc
xchg
add
cwtl
or
cmpsb
inc
and
jb
and
sbb
je
fcomps
add
mov
mov
push
add
sti
test
add
ja
xor
mov
adc
mov
jl
add
lret
scas
jno
xchg
add
iret
popf
clc
jg
add
rolb
std
mov
adcb
push
xlat
gs
mov
or
pop
addr16
pop
aad
push
add
daa
push
push
in
popf
lock
fstp
cmp
adcb
push
add
push
mov
add
push
or
mov
jle
xchg
stos
push
mov
popa
out
mov
aam
fldenv
clc
lret
inc
iret
dec
enter
or
lsl
inc
pop
inc
add
jmpw
cmc
lods
es
jl
adc
pop
mov
cld
mov
pop
cltd
call
call
xchg
mov
stc
mov
xor
or
pop
add
cmp
inc
cmp
mov
xchg
lcall
mov
xchg
mov
test
xchg
or
add
mov
jns
add
nop
xchg
call
pop
mov
or
add
add
jg
adc
lds
pop
jle
xchg
push
sbb
pop
mov
mov
push
dec
mov
cmp
sarl
push
cmp
add
xchg
pop
lret
mov
aad
sbb
cmp
adc
jl
add
imul
test
jae
inc
cmp
notb
arpl
jecxz
insl
add
sub
pop
add
mov
mov
add
jge
sub
sub
scas
xchg
adc
pop
rcl
std
pusha
dec
add
cmp
push
push
add
push
add
les
mov
clc
int
sbb
fs
mov
pop
mov
test
and
in
push
add
je
insl
sbb
adc
mov
bound
test
xchg
jno
pusha
pop
and
mov
repnz
sub
daa
mov
in
add
inc
popf
lret
mov
jb
pop
or
pmullw
loopne
cmpsb
and
dec
add
fnstenv
add
xor
cmp
adc
cwtl
mov
mov
xor
cmpsl
jnp
add
mov
add
lea
rolb
add
cmc
xchg
add
ljmp
and
sti
enter
test
jmp
mov
add
leave
jne
clc
jb
rolb
rorl
or
ret
pop
and
mov
mov
pusha
mov
jb
mov
cmpsl
and
sub
inc
add
mov
xor
subl
jg
sub
sbb
push
hlt
cmp
pop
adc
jmp
push
mov
sbbb
es
jmp
int
dec
pop
dec
imul
repz
xchg
dec
xor
jle,pt
add
lock
inc
bnd
cmpsl
xor
add
popl
frstor
add
inc
add
cltd
pusha
jnp
js
fiadds
imul
int
shlb
or
jp
dec
loope
mov
js
add
xor
pop
cmpsb
testl
mov
shlb
add
sub
jno
imul
add
mov
das
mov
popf
lahf
mov
out
faddl
ljmp
inc
and
rcr
popl
adc
fisubl
ffree
fcomps
sahf
iret
in
int3
push
sub
dec
inc
cmp
es
adc
xor
mov
out
add
aaa
stos
xchg
add
mov
popf
jg
movsl
hlt
or
cltd
cmp
adc
mov
push
add
sahf
cmp
dec
dec
cmp
push
add
xchg
loop
jecxz
mov
sub
scas
add
daa
cmp
outsb
repnz
or
push
loope
add
icebp
loopne
leave
test
cmp
into
or
add
add
dec
dec
sbb
xchg
jg
add
in
xor
push
adc
cmp
sbb
mov
add
pop
shl
push
push
lock
int
adc
push
push
lcall
inc
adc
cmp
adc
fstl
inc
dec
test
add
mov
sbb
fisttpl
or
dec
mov
lret
add
mov
mov
dec
add
pop
adc
dec
xchg
outsl
add
push
push
mov
repnz
adc
fidivl
add
cli
inc
mov
or
rcll
fiaddl
add
loopne
jmp
loop
jl
xor
pop
dec
and
lods
mov
idivl
add
arpl
cmp
add
adc
lret
test
clc
push
pusha
jo
lods
inc
int
pusha
loopne
jbe
in
add
or
sarb
pop
cmp
add
xor
ja
push
mov
negl
and
xchg
pop
jecxz
mov
out
pop
jp
dec
and
dec
enter
clc
ljmp
sub
add
mov
out
xchg
adcb
ret
or
cmpsl
dec
push
pop
mov
cmp
lea
ret
add
imul
test
iret
or
xorb
rolb
aas
pop
or
mov
or
mov
ljmp
imul
movsb
movsl
xchg
incb
xchg
mov
sub
push
cltd
mov
sbb
mov
es
test
adc
test
add
cwtl
xor
sbb
cmp
movsb
sub
arpl
loop
push
test
add
pop
cmp
sub
cmc
push
add
inc
sbb
mov
or
into
movsb
inc
jnp
popf
add
loopne
in
mov
add
mov
in
and
push
rcl
dec
loopne
add
jp
sub
es
out
insb
add
sub
clc
xor
setg
xchg
lcall
jns
andb
fisubl
mov
std
ja
push
mov
outsb
xchg
loopne
xor
stc
repz
flds
dec
ret
jp
add
sub
and
or
xchg
add
sub
cmpsb
sarl
mov
dec
jno
pop
ja
add
aas
inc
insb
lahf
push
lds
hlt
mov
stos
inc
add
cmp
add
push
clc
ss
aas
je
push
arpl
jb
cmc
inc
add
mov
add
in
add
ja
mov
outsl
add
dec
rorl
xor
rolb
mov
icebp
mov
mov
jo
addr16
call
push
push
hlt
jne
adc
sbb
cmp
add
add
aam
leave
int3
push
pusha
imul
in
faddl
cli
out
add
inc
fidivl
mov
lret
mov
add
leave
add
or
cmp
stos
jno
jmp
cmovno
xor
dec
testl
cmp
jl
sub
dec
add
adc
jl
sbb
xchg
lods
cmp
cs
sbbb
add
imul
fcoml
lods
out
dec
mov
xchg
or
sahf
cmp
add
shr
cmp
mov
and
test
add
xor
leave
jecxz
push
dec
shrb
adc
mov
xchg
lcall
jl
add
xor
lods
jg
aad
out
rorb
xchg
jns
scas
sarb
adc
pop
rorl
xlat
xchg
cltd
sti
jns
ss
inc
aam
out
jo
into
add
shlb
xor
les
pop
icebp
push
jnp
jns
adc
sahf
xchg
xchg
add
mov
mov
mov
popf
rolb
jae
pop
je
pop
xor
out
arpl
pop
sbb
sub
push
add
test
mov
adc
das
sub
push
and
dec
cmp
dec
mov
lret
cld
mov
fdivrl
pop
rcrb
inc
sub
test
fadd
call
and
inc
lods
mov
loopne
sbb
push
cmp
lcall
xor
fiadds
or
and
mov
insb
add
cltd
out
jl
rolb
pop
adc
clc
movl
movsb
xor
idivl
aas
in
in
add
out
cmp
lods
mov
sbb
mov
lods
jno
shl
dec
cmp
fcoms
cld
xor
lcall
or
mov
push
fucomp
sbb
aam
rol
out
pop
cld
add
xor
and
pop
pop
ja
in
cltd
add
add
mov
bound
xchg
jne
aam
add
xchg
out
push
pop
repnz
cld
jg
sbb
cmp
push
adc
ljmp
idiv
inc
shrl
fmuls
and
cmp
dec
xchg
mov
repnz
cmp
or
pop
mov
sub
add
push
jno
mov
xor
nop
flds
add
sbb
sarb
add
cli
jmp
mov
pop
xor
sbb
and
test
hlt
pop
clc
pop
addr16
scas
mov
add
or
xchg
jmp
fstpt
xchg
add
stos
out
test
repz
int
xor
dec
xchg
outsb
loopne
add
push
shll
stc
jns
adcb
lods
cmp
aam
mov
sub
loope
push
jle
out
jp
pop
sar
in
sbb
rolb
and
pop
jmp
dec
int3
inc
mov
pop
xchg
insl
cltd
push
fwait
lret
stos
dec
jp
add
xchg
idivl
loop
sti
pop
mov
pusha
enter
fcompl
push
mov
jp
aas
cmp
addb
imul
std
add
pop
insb
pop
adc
jb
push
loope
xchg
sub
add
lods
cmp
mov
pop
and
jge
icebp
jb
sub
cmpsl
mov
pop
jno
cltd
xor
mov
add
mov
xchg
push
pop
mov
fucomip
jl
adc
sub
add
lcall
pop
and
out
popl
repz
jg
aas
dec
mov
and
fcmovne
pop
or
jecxz
xlat
stos
pop
add
rorl
ret
test
and
aaa
mov
inc
mov
loop
add
ja
je
adc
fcoml
test
xchg
stos
hlt
xchg
jno
mov
stc
jecxz,pt
or
loopne
sbb
sub
add
jo
push
adc
and
mov
std
int
popf
add
out
clc
cmpsb
repnz
jle
paddsw
pusha
lods
imul
clc
loopne
leave
and
pop
sub
movaps
add
adc
scas
jne
fcoml
cld
xlat
fbld
and
testb
sarl
jg
shl
push
popa
dec
in
loope
or
xor
jo
cmp
jmp
mov
adc
or
xchg
je
in
shlb
mov
test
sub
and
out
push
int
sbb
inc
pop
pop
icebp
repnz
mov
rorl
sbb
ret
loopne
pop
addb
mov
aas
lret
shll
test
adc
test
pop
adc
mov
mov
lea
xor
sbb
outsl
sbb
sbb
pop
fucomip
lods
pop
fwait
inc
or
inc
es
mov
pop
mov
add
std
add
imul
rol
inc
ja
sbb
xchg
ds
lock
test
add
jae
ret
notb
loopne
mov
pop
orb
inc
and
test
or
ljmp
int
lods
sbb
ds
mov
add
fists
popa
pop
cld
int3
aaa
mov
cs
cmp
add
negl
or
pop
add
inc
xchg
dec
and
outsl
jns
pop
pop
hlt
sub
mov
push
loopne
or
outsl
es
add
call
lret
sub
or
bound
fiadds
sbb
mov
std
enter
iret
mov
push
inc
adc
loop
and
bound
cpuid
in
add
push
rcr
add
xchg
adc
pop
ret
xor
mov
pop
mov
add
push
dec
jb
inc
enter
mov
or
jae
shlb
out
xchg
fldl
add
xchg
push
jge
add
fwait
or
pusha
call
cwtl
cmpsl
ret
add
std
imul
xor
in
add
lea
lods
pushf
mov
adc
mov
or
aas
js
mov
add
push
pop
add
scas
fistps
pushf
add
insb
mov
enter
nopl
in
int3
jo
fists
loope
push
hlt
cwtl
rcll
arpl
dec
adc
inc
push
sbb
mov
in
xchg
add
dec
xchg
cmp
imul
cmp
mov
mov
jo
or
nop
pop
jae
adc
enter
adc
pushf
enter
add
enter
movsb
stc
add
push
shlb
popa
mov
rol
cld
in
add
add
out
out
xchg
sahf
dec
fs
and
and
icebp
add
jmp
cmp
inc
sahf
clc
push
loop
push
fcmovnbe
push
add
xor
lahf
cwtl
loopne
leave
fdivs
add
push
dec
cmp
rcr
das
data16
add
add
ficoml
stos
jmp
mov
dec
addl
add
iret
daa
test
stos
mov
clc
mov
add
and
push
mov
and
xchg
push
dec
jno
adc
jl
insb
add
ret
outsb
loope
lock
or
push
lock
mov
mulb
test
cli
jae
mov
mov
mov
inc
mov
sbb
fsts
adc
in
pop
ret
mov
incb
jmp
push
sbb
dec
lret
jnp
clc
mov
add
pushf
pop
aaa
rclb
and
add
cmp
cmp
dec
mov
jns
add
pop
mov
es
in
add
adc
inc
pop
add
xor
ss
call
aas
stos
push
push
lahf
scas
fiadds
das
xor
sbb
lods
insb
and
lcall
xor
inc
call
icebp
gs
aaa
subps
not
add
stos
lock
or
pop
add
jg
and
lahf
sub
fsubrl
fiadds
push
fwait
shlb
pusha
insb
repnz
cld
test
rcrl
xchg
cli
arpl
fwait
inc
mov
and
test
sti
adc
bnd
jl
int
jbe
jge
or
sahf
push
cmp
rcrl
adc
pop
fldcw
push
pop
aad
aad
and
scas
rol
jmp
xchg
test
xchg
or
in
dec
ljmp
loope
lret
loopne
push
add
sarl
paddusb
lock
add
push
mov
leave
ljmp
decb
cmpsl
testl
filds
sbb
push
rolb
std
add
and
test
xchg
jl
jo
pminsw
dec
fwait
pushf
push
adc
scas
or
rolb
adc
outsb
xchg
lock
imul
add
lcall
mov
sahf
sub
stos
rcll
in
cwtl
add
cld
movsl
out
fldl
or
jo
push
mov
mov
push
lcall
fstpt
inc
and
ja
xor
iret
test
roll
add
dec
inc
sbb
sar
sti
push
push
out
bound
das
push
mov
sub
and
cld
ret
in
dec
out
aas
imul
lcall
hlt
jmp
add
pop
imul
jg
dec
dec
add
mov
daa
add
jb
jbe
popa
outsl
inc
add
das
sbb
add
jns
mov
add
fwait
jbe
xchg
cmp
jp
cmp
mov
sbb
push
push
add
das
int3
push
shlb
sub
out
adc
sbb
jecxz
testb
sub
test
out
push
add
mov
ret
addl
insl
push
arpl
je
add
push
adc
mov
lahf
add
xchg
ja
sbb
repnz
xor
mov
ret
mov
mov
xchg
or
aad
or
add
ljmp
and
adc
push
inc
and
xorl
add
jnp
xchg
push
iret
sarb
test
mov
jno
lret
cli
iret
hlt
push
cld
add
aas
movsb
rcrb
push
xchg
jne
add
sti
push
sahf
clc
outsl
data16
and
movsl
or
addr16
out
dec
pop
mov
comiss
cmpsb
mov
pop
cmp
inc
jbe
add
inc
mov
pop
mov
add
sub
loop
dec
add
adcb
popf
andb
push
xchg
push
xchg
push
mov
mov
shlb
add
jl
lret
mov
cmp
and
pop
pushf
movsl
aam
loop
nop
les
fidivs
int
sarb
icebp
add
push
sbb
sti
push
push
add
pop
cmpb
mov
mov
mov
popl
test
pusha
sti
dec
xorl
or
mov
or
mov
inc
xor
adc
jo
xor
add
lea
push
adc
mov
flds
lret
pop
out
mov
fcmovb
cmc
add
xchg
das
repz
push
mov
out
shl
mov
sbb
xor
pop
cmp
dec
cmp
mov
subb
jp
shrl
sbb
adc
add
cmp
incb
sub
pop
cmp
enter
fstl
jo
pusha
ret
push
mov
mov
mov
cmp
rol
mov
cld
fidivs
cmp
add
out
cmp
xchg
js
pop
dec
pop
add
repz
add
inc
sub
pop
cmp
scas
leave
in
cmp
loopne
or
dec
or
mov
mov
xchg
imul
cli
sbb
dec
mov
inc
inc
adc
inc
jae
icebp
pop
mov
pop
sbbb
sub
cmpsl
mov
adc
sti
add
call
add
dec
mov
add
cmpsb
or
loopne
sub
in
jnp
xchg
pusha
add
iret
insl
add
mov
imul
cmc
shl
cmp
sahf
insl
push
cs
nop
mov
loopne
test
ja
mov
movsl
mov
xor
aam
dec
push
lods
jl
stos
out
add
pop
or
rcll
pop
cltd
cmc
in
cmp
jge
in
add
lahf
sub
in
jno
add
aas
mov
mov
outsl
int3
xor
inc
mov
out
rorl
leave
sbb
iret
test
pop
pop
jno
add
cmp
sbb
dec
fwait
sub
sbb
sbb
mov
add
and
push
iret
stos
jne
mov
dec
out
je
movsl
jno
pop
add
mov
mov
dec
int
sbb
dec
nop
in
pop
and
sbb
sub
add
dec
hlt
jbe
jle
or
sbb
pushl
cmp
int
aad
incb
dec
adc
inc
xor
add
cmp
daa
adc
test
and
in
sarl
mov
sbb
into
int3
push
aam
add
mov
loop
xor
add
xchg
scas
rorl
lock
add
jl
idivl
inc
add
lea
pop
xchg
cwtl
sub
add
xchg
add
xchg
lahf
jecxz
pop
push
mov
mov
aad
sbbb
adc
dec
or
pop
xchg
xorl
add
movsl
fdivr
bound
mov
je
sub
mov
lods
pusha
nop
das
fists
pop
imul
push
pusha
add
out
xor
mov
leave
jae
pop
pop
int3
jge
ret
cmp
or
push
out
xor
cli
stc
add
or
xchg
push
cs
test
inc
call
inc
jge
mov
adc
pop
mov
outsb
lcall
jle
or
dec
stos
add
sbb
nop
cld
add
pop
rcl
icebp
scas
in
sbb
mov
pop
xchg
pop
sbb
test
push
mov
add
pop
out
push
dec
scas
pusha
mov
mov
testb
push
mov
or
xlat
jno
add
dec
xchg
fmuls
imul
jg
pusha
punpckhbw
add
not
ret
rcrb
xlat
loopne
push
xchg
xchg
add
inc
shrl
xchg
adc
outsb
add
data16
lods
loopne
test
pusha
cmp
mov
xchg
sub
adc
out
nop
sbb
and
and
add
call
cmp
add
outsb
into
and
mov
and
jb
xlat
add
pop
out
jnp
bound
jno
push
pop
add
rcr
out
loopne
icebp
cwtl
add
jmp
addb
inc
loopne
movsl
ss
and
push
pop
xor
xchg
add
in
clc
or
pop
adc
adc
fistl
loopne
rolb
xchg
icebp
fldl
inc
test
test
call
call
cmp
scas
add
insl
adc
in
mov
jmp
incb
cmp
enter
adc
mov
push
pop
xlat
lock
iret
push
mov
adc
roll
adc
nop
xchg
add
int3
fstpt
xchg
push
add
cld
ja
adc
aaa
das
rcrb
stos
jp
pop
dec
add
jbe
sbb
pusha
fcmovne
pushf
xor
mov
adc
add
xor
imul
jo
ss
stos
add
shlb
fisubrs
push
jno
jns
enter
mov
outsb
ret
sarb
mov
xchg
movsl
add
sub
rolb
popa
cs
mov
add
scas
or
out
push
movsb
inc
or
jne
xor
adc
mov
shr
movsl
out
add
pop
cwtl
popa
cmp
xchg
dec
add
add
imul
sbb
add
in
icebp
pop
inc
movsb
popf
in
lahf
add
out
fisubl
sbb
and
sbb
loopne
ljmp
jb
or
mov
loopne
sbb
or
cmp
cmp
je
rorl
in
inc
rcll
mov
nop
mov
mov
add
in
test
fdivrs
les
add
rcrl
xchg
xor
and
movsb
les
hlt
nop
add
leave
add
dec
sbb
mov
add
adc
mov
es
icebp
repnz
lods
mov
lret
data16
sub
jg
lcall
xchg
cmp
in
adc
fimuls
add
ja
hlt
add
lea
mov
xorb
sbb
enter
repz
jle
add
pop
test
cwtl
mov
push
mov
pop
jl
andb
add
test
add
mov
xchg
fsubs
add
movsl
pop
pop
mov
pusha
orl
aam
subl
shrl
pushl
adc
adcb
js
xor
and
enter
mov
outsl
scas
sub
dec
lock
add
adc
dec
sub
popf
imul
lahf
pop
push
mov
cs
inc
cwtl
add
hlt
adc
jmp
adc
test
xchg
add
in
mov
mov
xchg
inc
xor
popf
cwtl
inc
sub
xor
das
test
cs
sub
mov
mov
sbb
arpl
imul
aaa
nop
jb
cs
add
mov
aad
push
adcl
nop
lahf
subb
lcall
pusha
push
clc
cltd
push
mov
adcl
sub
push
repz
mov
xor
jmp
roll
ficoms
cmp
xchg
sub
dec
pop
jb
imul
rcll
clc
aas
add
out
and
pop
pusha
dec
call
movsb
or
and
add
add
filds
test
inc
cwtl
pop
dec
push
xor
xchg
cmp
pop
and
jo
int
or
test
xchg
out
movb
add
xor
push
rclb
add
std
pop
ljmp
lahf
add
lret
or
pusha
pusha
addb
xorb
add
iret
sub
aam
sbbb
movsb
jecxz
and
or
add
xchg
jl
add
imul
sub
xchg
mov
cld
push
push
nop
jo
mov
cwtl
or
jge
call
jl
enter
js
add
push
sbb
test
sbb
add
and
sbb
lcall
push
or
jge
mov
hlt
pop
pop
mov
cmp
jle
mov
mov
xor
push
pop
pusha
or
push
lret
cmp
repz
cltd
inc
test
scas
outsb
xchg
rolb
mov
out
addb
ret
dec
sbb
push
add
fisubrl
sub
mov
jecxz
add
addb
jmp
pop
jg
cli
and
movsb
aaa
add
mov
jns,pt
loop
pop
mov
jnp
sbb
mov
mov
dec
mov
cmpsl
mov
popf
sub
mov
popa
or
imul
push
int3
inc
jle
add
add
mov
ret
pop
add
dec
test
add
cld
push
iret
stos
call
test
add
lds
and
xchg
or
in
cmpb
fistpll
add
pop
or
adc
cli
xchg
jg
fidivs
adc
lds
add
jbe
js
push
nop
cld
outsb
xchg
pop
es
loop
inc
mov
push
and
add
inc
lea
inc
cmp
pop
mov
push
sbb
lret
push
sti
gs
cmp
loop
mov
jns
dec
and
lock
add
mov
jns
add
loope
mov
hlt
add
test
push
inc
mov
fs
jle
into
fcompl
bound
mov
sti
out
jmp
sub
std
js
cmp
pusha
jns
jl
sti
pushf
in
jl
adc
and
das
lds
add
mov
repz
repnz
or
std
addb
fadds
sub
dec
lcall
pushf
cmpsl
fs
ljmp
adc
and
push
data16
imul
mov
lods
add
loope
inc
int3
push
clc
or
mov
inc
loopne
movsb
mov
jge
mov
jmp
test
adc
ret
orb
nop
sub
xor
add
movsb
xor
cmp
mov
test
cltd
push
add
sbb
dec
xor
movsl
jno
inc
adc
imul
ret
aaa
push
sbb
inc
in
mov
inc
push
adcb
xor
sbb
scas
lock
mov
mov
js
sbb
push
sub
jns
dec
pop
add
ss
mov
repnz
jo
add
and
inc
add
dec
push
inc
stc
test
adc
mov
sbb
add
push
cli
cmp
fsubs
test
inc
mov
push
add
stc
rolb
add
push
mov
add
push
jo
test
sub
push
mulb
cmp
icebp
mov
les
push
outsl
cmp
push
or
jnp
and
sbb
cli
add
addr16
jp
sbb
xor
pop
inc
jnp
add
or
add
push
or
ljmp
adc
ret
mov
or
arpl
movsb
out
adc
push
pop
int
jo
orb
aaa
pop
in
ja,pn
pop
add
xchg
jmp
dec
pop
inc
adc
cmp
xor
add
push
sbb
sub
fnstenv
mov
or
negb
subb
inc
sbb
leave
cmpsl
mov
test
add
lcall
fs
push
popa
pop
ret
sub
or
scas
test
rolb
orb
mov
js
test
fdivr
mov
bound
or
dec
ljmp
mov
fs
add
pop
sbb
popf
and
mov
adc
jns
int3
push
js
mov
inc
rcrb
or
dec
cli
pushf
xchg
fimuls
mov
add
dec
test
add
shll
scas
mov
push
or
incl
and
enter
and
rol
sbb
rclb
ret
add
outsb
out
xor
sti
stos
and
aad
or
popa
xchg
mov
jge
fsubl
nop
adc
cli
mov
sbb
int
add
dec
aad
adc
mov
ret
movsb
cmpsl
or
sub
push
hlt
pusha
sti
movsl
or
test
xchg
mov
ljmp
shrl
rcr
add
je
mov
dec
sub
add
cmp
testb
shll
add
pushf
pop
add
mov
test
popa
mov
xchg
pusha
pushf
sbb
es
xor
mov
fs
int3
jg
stc
fwait
add
lcall
cmp
popf
in
inc
stos
loopne
sub
out
outsb
shll
hlt
rolb
mov
mov
imul
mov
aas
sub
dec
add
and
sub
pop
push
jnp
sbb
or
call
add
popf
xchg
inc
popa
lds
rolb
jno
inc
add
icebp
add
clc
mov
nop
inc
mov
sbb
and
cmp
lds
lods
insl
inc
mov
incl
cmp
mov
and
adc
leave
cmp
cmp
add
xchg
int3
xor
mov
repnz
inc
sub
jg
es
or
arpl
cli
test
mov
mov
scas
pop
xor
mov
ja
setbe
dec
mov
inc
cmp
iret
popf
rolb
mov
lods
fs
lahf
pop
mov
mov
xorb
mov
cli
pop
or
fisttpl
cmpsb
add
push
adcl
push
add
movb
mov
inc
dec
adc
lret
adc
fimull
movntq
push
test
xchg
movsl
add
cmp
and
and
pop
jbe
fiaddl
inc
push
push
add
mov
pushf
jl
dec
push
pop
inc
add
sub
adc
mov
jno
jns
adc
sahf
mov
cmp
and
sbb
add
or
rcrl
xchg
add
dec
cmp
pop
fisttpl
push
add
lock
push
shlb
and
pop
adc
cmp
into
nop
adcb
cld
ret
mov
jmp
ficomps
adc
jmp
loop
sub
add
lea
icebp
inc
and
aas
lahf
add
push
fbstp
clc
inc
add
pop
out
add
lret
pop
orl
dec
loop
movsl
scas
pop
mov
shrb
sahf
or
je
shrb
sub
test
pushf
clc
cwtl
dec
rclb
mov
repnz
pushf
decb
mov
add
jge
mov
xchg
pop
add
push
pushf
jmp
push
cmc
enter
sub
jecxz
scas
sahf
out
and
or
stc
add
jp
inc
pop
push
stos
cmp
rolb
lcall
imul
sti
add
out
enter
xchg
mov
sub
adc
das
roll
dec
pop
outsl
mov
mov
mov
and
in
inc
lret
mov
fs
lods
in
inc
push
sbb
inc
dec
jge
repnz
jne
insl
icebp
and
loopne
aas
jns
add
jge
test
clc
fwait
addb
testb
test
push
and
adc
mov
test
inc
mov
testl
mov
pusha
andb
mov
xchg
les
lods
add
xchg
jns
ss
hlt
lret
add
data16
and
in
jne
xchg
jle
mov
sbb
mov
jmp
cmp
mov
xor
sbbl
nop
scas
mov
ret
cmp
lea
fsubrs
scas
xchg
mov
cmp
mov
lock
jl
xor
fbstp
pop
iret
test
jns
mov
repz
mov
icebp
xchg
xchg
dec
cmp
pop
fs
rclb
xchg
add
cmp
mov
pop
cmp
push
pop
in
test
jl
outsb
pop
mov
sbb
add
xlat
add
hlt
adc
lret
jno
jns
mov
push
mov
dec
repnz
scas
in
inc
xor
sahf
mov
out
ds
addb
lock
cli
sub
fdivs
rolb
ret
in
int3
jbe
mov
push
dec
dec
cli
sahf
and
mov
jnp
int
xlat
insb
dec
or
add
shll
movsl
lods
push
jno
dec
inc
add
add
pop
ret
adc
lret
std
sbb
mov
fildl
xchg
mov
cmp
xor
adc
daa
add
inc
bound
clc
inc
push
movsl
add
add
fsubs
and
jecxz
adc
push
xchg
xchg
mov
in
add
xchg
mov
sbb
xchg
daa
ja
inc
xchg
and
neg
add
push
inc
push
inc
mov
js
pop
push
dec
mov
in
push
fadd
sbb
push
lret
xchg
xchg
rolb
mov
inc
add
cmpsl
push
js
xor
dec
push
in
ret
subb
addb
or
mov
lea
cmove
cwtl
fwait
jmp
pop
cmp
flds
xchg
jecxz
sbb
add
mov
mov
push
insb
cmpsb
add
in
adc
pop
inc
pop
loop
dec
test
js
cwtl
sbb
mov
or
pushf
xchg
mov
subl
mov
mov
inc
mov
mov
pop
pop
lahf
test
pop
mov
cld
push
pcmpeqb
imul
and
or
stos
mov
cmp
sbb
add
dec
and
add
enter
hlt
fdivl
or
stos
addb
cli
pop
adc
jns
fsubrl
or
cmp
ficoms
rolb
inc
sahf
leave
add
lock
jb
icebp
add
jle
xchg
and
cmpsb
ds
mov
outsb
ficomps
add
xchg
sbb
pop
ds
incl
adc
pop
mov
iret
cltd
gs
add
pop
mov
xor
pop
or
orl
sub
les
xchg
sti
imul
push
clc
add
mov
test
sub
fisubrl
cmp
std
mov
out
bound
inc
in
or
mov
xchg
or
inc
mov
add
mov
and
roll
mov
inc
nop
int3
popa
das
hlt
mov
jno
mov
je
jp
pusha
xor
xor
push
lods
add
dec
jae
add
xchg
mov
cmovnp
adc
mov
addl
mov
cmc
in
inc
daa
mov
xor
movsl
jno
lock
lock
push
dec
mov
inc
adc
in
cmc
stc
and
mov
and
leave
mov
and
cmpb
movsb
jbe
fwait
add
xor
cmp
inc
mov
cli
sbb
push
scas
lods
call
and
push
les
xor
pusha
pop
in
fidivl
mov
fiadds
mov
addl
test
repnz
imul
jl
in
cmp
fimuls
nop
pop
adc
add
cmpsb
mov
jecxz
sti
mov
in
je
add
xchg
add
jb
mov
test
out
mov
mov
mov
and
sbb
push
test
add
xor
pop
add
cmp
add
sbb
sub
jns
int3
add
add
in
mov
das
cli
adc
sub
shlb
ss
adc
add
imul
cmp
sbb
mov
pop
or
cld
xchg
std
push
cmp
fisubl
leave
push
lcall
aam
push
or
or
and
popf
pop
sbb
out
test
mov
icebp
xor
or
jp
incl
adc
es
pushf
or
or
mov
or
mov
ja
rcr
movsb
cmp
jae
mov
mov
push
lods
add
out
lods
xchg
lcall
je
xor
int
pop
mov
add
dec
dec
fstp
adc
add
xchg
or
add
xchg
add
sub
xor
rolb
adc
dec
or
stos
cltd
cli
add
mov
xchg
or
add
imul
out
sub
push
loope
repz
in
gs
or
leave
out
call
mov
fcompl
xchg
sbb
shl
mov
fidivrl
add
jnp
cwtl
cs
add
xor
icebp
lcall
adc
in
pop
movsl
adc
mov
dec
rcll
add
xor
fisttpl
stos
mov
dec
sub
pop
lods
ret
js
cmp
sub
pop
insb
loop
add
call
cmp
jns
add
adc
add
lcall
sub
add
inc
out
push
push
movsb
nop
test
sbb
mov
mov
nop
out
adc
cld
stos
add
push
imull
mov
lds
incl
inc
sbb
and
lea
popa
add
lcallw
pop
jb
je
add
or
dec
fiadds
and
add
out
lods
je
sbb
jl
xor
call
mov
cmp
dec
ret
add
add
mov
adc
lock
jmp
pushf
es
insb
inc
sbb
cmp
mov
fsubl
add
sub
add
int3
clc
dec
cmc
xchg
sbb
fnstsw
icebp
dec
or
inc
jge
orb
adc
xor
addr16
in
fidivrs
aas
insl
movsb
adc
xchg
or
or
mov
jmp
cltd
popf
dec
loop
adc
outsl
imul
pop
aas
xor
fcomps
cltd
popf
push
mov
jo
fbld
adc
jmp
sub
test
xlat
add
sub
jns
fucomp
mov
xchg
imul
pusha
jo
es
sub
push
pop
and
pop
push
adc
daa
mov
inc
add
dec
outsl
stos
pop
mov
dec
aaa
pop
mov
rol
ds
sbb
psubb
sub
cld
hlt
pop
jns
or
test
or
fadds
add
jecxz
unpckhps
add
xchg
adc
das
xchg
js
or
xor
mov
dec
or
loop
xor
icebp
cmp
repz
or
xor
push
mov
pop
and
inc
mov
addr16
nop
dec
sbb
rcll
push
jecxz
sbb
xor
imul
fs
and
enter
push
xor
cwtl
stc
add
fsubr
sahf
jmp
ds
mov
add
xor
hlt
cs
in
data16
jge
or
jg
addb
inc
andb
fidivs
cmc
adc
add
pop
and
cmp
mov
sbbl
stos
and
xchg
jmp
push
mov
ds
or
adc
add
add
pop
pop
inc
rclb
push
mov
sbb
test
cmp
test
sbb
cmpsb
sbb
sub
and
or
adc
cmp
add
xor
les
loopne
add
fldcw
cmp
dec
andb
fimuls
aaa
sub
pop
cs
pop
adc
add
dec
movsb
mov
add
push
jle
addl
lods
add
les
enter
leave
xchg
sub
add
fidivs
arpl
out
pushf
inc
ljmp
xor
fldl
in
or
in
xor
xor
pop
or
out
add
add
jg
cmp
je
dec
add
push
nop
popa
mov
xor
inc
add
dec
sbb
dec
push
movsb
test
pop
xor
cwtl
jmp
inc
lods
inc
aaa
scas
add
ret
clc
push
adc
hlt
mov
sub
movsl
sbbb
push
inc
dec
add
mov
jmp
jns
jo
and
cmc
mov
push
call
mov
rcrb
pop
ss
das
sub
aas
mov
and
add
xchg
jnp
lahf
sbb
xchg
fs
mov
pop
dec
pop
push
adc
mov
add
bound
xchg
mov
mov
aam
inc
stc
popf
mov
mov
mov
loop
and
xor
and
roll
xor
cmp
inc
mov
lea
mov
add
inc
nop
add
sbb
push
jg
dec
loopne
pop
and
mov
dec
push
roll
push
xchg
mov
lcall
sbb
jbe
aas
pushf
or
aaa
sub
push
repz
xchg
sti
sbb
mov
adcb
sahf
test
sbb
ljmp
mov
sbb
sbb
aam
ljmp
mov
xchg
push
adc
adc
cld
add
jo
nop
mov
and
aam
xor
les
xchg
or
mov
push
movsb
push
cmp
rcl
mov
adc
add
inc
push
imul
out
orb
pop
and
xor
inc
leave
xchg
iret
outsl
add
je
or
hlt
mov
xor
mov
pop
inc
xchg
fadds
test
mov
aam
mov
dec
adc
jp
mov
pop
jb
pop
fcomp
cmp
les
out
cmp
adc
add
testl
mov
jl
es
adc
test
aaa
bound
shrl
sbb
pushf
andb
pop
cmp
enter
test
cs
sbb
jle
out
mov
div
std
call
and
and
or
jmp
dec
fs
inc
aam
add
push
jbe
sbb
in
notb
rclb
sarl
add
es
and
aad
xor
push
ljmp
call
pushf
jo
pop
push
idivb
mov
icebp
mov
sub
les
push
xchg
or
and
xchg
adc
xor
add
mov
loopne
jne
sbb
sub
call
in
jmp
mov
dec
push
shrb
xchg
mov
orl
dec
loop
xchg
js
daa
test
or
add
push
pop
dec
and
add
cs
lods
cmpsl
xor
xchg
ss
and
push
push
cld
cmp
aaa
jg
mov
clc
xor
mov
xchg
sbb
scas
ja
popa
push
mov
stos
mov
sahf
js
in
movsl
sbb
mov
jns
and
or
cld
ds
pop
adcb
add
mov
mov
sub
aad
ud2
movsl
sbb
inc
xchg
inc
mov
add
popa
mov
setb
jle
dec
lds
insb
jmp
adc
rorl
scas
add
cvtdq2ps
inc
jmp
add
pop
fimuls
adc
aas
mov
sub
gs
ffreep
aaa
add
inc
and
in
test
pushf
in
add
push
dec
cs
lock
lar
jmp
mov
test
call
push
sbb
xchg
repz
fidivl
loopne
push
lret
add
add
ljmp
loopne
pop
mov
xchg
push
lret
out
int
mov
divb
adc
sbb
mov
and
std
lret
movsl
mov
push
aas
cmp
add
scas
lods
cmpsl
pushl
add
add
fisubl
ret
add
push
dec
mov
test
nop
test
xor
iret
es
adc
pushf
add
mov
hlt
fldl
jl
les
jp,pn
mov
sub
aaa
and
loope
inc
les
adc
dec
out
xor
add
iret
mov
sbb
pop
mov
jg
jmp
xchg
loop
adc
add
sbb
xor
add
cmp
xor
gs
popa
push
lods
mov
divb
fmuls
push
mov
xor
pusha
data16
xchg
inc
dec
mov
fadds
add
insb
push
leave
idivl
nopl
ljmp
adc
loopne
hlt
cmp
fisttps
xlat
add
je
std
sbb
and
out
mov
sbb
push
cmpsb
addr16
jmp
vmovaps
pop
das
mov
int3
aam
movl
or
and
popf
and
in
out
jl
or
or
adc
add
dec
xchg
or
dec
aaa
mov
hlt
cmpsb
add
push
sub
xchg
faddl
pop
jno
dec
or
inc
subl
mov
lea
in
lock
push
in
dec
std
adc
push
scas
fmull
adc
inc
sbb
incl
mov
sub
std
into
popa
les
shrl
or
xchg
test
cmp
push
or
cmp
mov
cmpl
dec
popa
mov
pop
sub
orb
aad
add
test
adc
cld
mov
jne
or
jmp
add
sub
fmuls
xchg
mov
sub
and
pop
add
das
push
aaa
add
addl
pushf
cmp
stos
or
push
jmp
xchg
js
notl
leave
popa
sbb
cmp
sub
add
xchg
je
loop
sbb
mov
xor
mov
int3
push
out
xor
pusha
sub
push
adcb
loope
sub
je
adc
push
mov
aam
pop
loop
add
lcall
xchg
test
cmpl
inc
mov
icebp
adc
add
cld
add
fsubs
int
pop
jmp
gs
fmuls
sar
je
push
jg
push
frstor
ret
and
sbb
sbb
idivl
cmp
add
dec
sbb
sahf
testb
outsl
mov
leave
cs
add
push
inc
pushf
add
jecxz
ret
jp
adc
pop
shrb
sbb
shlb
inc
ds
add
sarl
sub
movsb
xor
add
sbb
loopne
shlb
or
add
call
repz
pop
cmc
push
or
js
in
mov
xchg
dec
add
xor
jo
fiadds
push
sub
dec
push
mov
inc
xor
mov
mov
jns
push
mov
or
mov
sbb
mov
enter
scas
mov
addr16
push
add
jle
inc
pop
and
std
cmp
stos
sub
jecxz
add
imul
sub
rcl
add
lahf
push
inc
cmpsl
in
mov
xor
jae
mov
push
fs
rorb
je
mov
out
add
push
insb
test
mov
mov
sbb
inc
xor
xchg
hlt
test
je
movsb
inc
das
cmpsl
sahf
xor
mov
mov
dec
add
xor
lods
mov
enter
xchg
and
pop
or
jne
repnz
arpl
xchg
push
or
cmc
xchg
in
inc
mov
mov
leave
hlt
sub
bound
lods
mov
daa
inc
adc
pop
jg
cld
push
xchg
xor
lods
adc
hlt
and
cmp
mov
and
sbb
inc
xchg
cmp
in
rorw
inc
ror
clc
and
fimuls
pop
loop
sbb
pop
pop
testb
imul
inc
scas
mov
cltd
xor
addr16
test
outsb
mov
int3
adc
jp
sbb
stos
daa
and
push
and
loopne
push
sub
mov
or
push
cli
push
cmc
call
test
insb
les
add
sarl
subl
inc
add
ret
data16
add
fldcw
and
popa
stos
hlt
pop
and
xor
in
xor
add
ret
hlt
in
add
jnp
fsubrs
jno
add
mov
mov
xor
push
femms
sbb
fdivs
add
sbb
add
movsb
ret
test
or
lcall
test
pop
hlt
and
dec
cmpsl
add
test
push
inc
enter
xor
add
insb
cmp
add
stc
fdiv
aas
dec
add
adc
mov
pop
pop
sbb
dec
inc
adc
sub
sbb
out
mov
mov
lret
jge
push
adc
jb
xchg
mov
add
xor
repz
and
pop
lods
sbbb
mov
jmp
dec
add
shl
test
cld
cmp
mov
push
xchg
push
frstor
les
dec
test
jmp
pop
lock
pusha
mov
movb
or
dec
and
mov
pop
push
jne
add
xor
clts
and
add
or
sub
add
mov
dec
outsl
add
pop
inc
sbb
cmp
pusha
cmpsl
mov
sbb
fadds
insb
aad
add
cmp
or
sbbb
adc
pop
sbb
popf
cld
add
jbe
push
push
pushf
cmp
adc
dec
cmpsb
lods
sar
cmp
repnz
add
inc
dec
mov
fcomps
cli
out
sub
mov
sbb
sbbb
addr16
sbb
lds
sbb
sub
adc
pop
ds
add
mov
enter
add
out
inc
xchg
andb
mov
jecxz
ja
xchg
add
sbbb
jae
test
mov
dec
inc
cmp
add
xor
sub
out
aaa
jp
xchg
adc
loop
adcl
addb
sbb
sub
lds
enter
call
cmp
mov
and
cld
jo
js
push
inc
in
add
inc
movsb
xor
xlat
xchg
mov
xchg
pusha
or
das
shll
sbb
fsubp
or
popf
movsl
lods
cmp
dec
adc
data16
hlt
sbb
add
roll
scas
aaa
loopne
pop
inc
add
mov
pop
in
or
mov
jnp
pop
pop
push
cld
sub
and
lcall
xor
jl
movsb
and
add
and
testl
unpckhps
hlt
out
enter
dec
and
push
shl
and
push
adc
pusha
jge
mov
add
xor
jo
loop
adc
fldl
add
or
cmp
or
sub
int3
pop
lds
test
pop
add
dec
push
loop
les
sub
subb
add
dec
pop
call
mov
lods
es
mov
or
lret
sub
xchg
mov
hlt
xchg
test
lds
pop
pop
mov
push
adc
push
add
sbb
add
icebp
inc
pop
xor
bound
add
movsb
fnstenv
push
cli
add
cmc
mov
mov
das
dec
jb
jge
outsb
and
dec
and
shlb
mov
call
add
inc
xchg
jb
add
adc
pop
push
jecxz
jo
fs
fildll
or
jmp
mov
inc
mov
test
mov
fwait
xchg
and
pushl
nop
cmp
sbb
cmp
fnstcw
dec
ja
dec
js
xor
xor
jno
pop
mov
jle
pop
add
pop
add
stc
mov
push
ss
adcb
or
dec
mov
fstpt
jo
mov
add
and
loop
dec
jb
add
test
mov
pop
sub
sbb
sbb
loopne
cmp
clc
add
ljmp
mov
pop
stc
movsl
or
cmp
hlt
in
inc
mov
rclb
dec
jle
add
sub
mov
cmpl
sub
cmp
push
sub
jle
sbb
add
sub
ds
std
mov
push
in
push
mov
fdivrs
jge
fs
inc
aam
sub
aaa
mov
cld
sub
and
push
sbb
cwtl
rol
js
icebp
add
loope
jle
add
push
aas
stos
add
imul
xor
fs
or
xchg
inc
push
inc
sub
mov
adc
lods
arpl
gs
adc
push
les
xchg
cmp
push
aas
cmpsl
mov
add
pop
faddl
jl
cmp
cmp
jle
inc
fidivrl
dec
cld
push
pop
and
inc
mov
xlat
je
jmp
repnz
lock
xor
jp
inc
ja
fidivs
xchg
ljmp
mov
cmpsb
sar
jmp
dec
idiv
xor
pop
sbb
mulb
mov
push
add
add
lsl
dec
cs
add
aam
movlps
pop
add
add
push
sbb
or
frstor
ljmp
sbb
shr
test
add
or
in
add
mov
lea
mov
add
push
pop
hlt
enter
dec
gs
fidivrs
dec
loope
or
xor
sbb
add
dec
or
add
adc
dec
and
push
test
push
and
loopne
pop
add
pop
out
inc
icebp
push
popa
jg
das
stos
xchg
xor
xor
in
add
fstpt
stc
rcrb
aad
sbb
ret
lods
ds
fcomps
add
xchg
sub
or
pop
inc
mov
push
hlt
or
pop
push
mov
cli
lea
mov
xchg
sbb
mov
scas
and
lret
xor
iret
leave
xor
loop,pt
or
cltd
imul
sbb
mov
jmp
cmpsl
add
addr16
mov
test
loope
add
pop
fld
inc
shr
das
xchg
daa
je
push
or
sbb
fisubl
imul
sbb
jae
sub
hlt
mov
ret
add
sbb
push
out
cwtl
test
push
adc
add
or
add
pop
jbe
js
mov
sbbb
ds
lds
cld
add
pushf
add
push
xor
cmp
pop
scas
lods
pop
mov
clc
xor
add
sti
pushf
xor
add
loopne
mov
and
pop
xchg
movsb
cmp
inc
inc
jo
mov
adc
test
lret
jno
shlb
in
jmp
pop
cmpsl
hlt
adc
fiadds
xor
nop
mov
stc
add
mov
inc
int
movsb
fisttpll
push
xchg
add
cli
mov
in
lea
dec
jno
mov
bound
ljmp
pop
xor
fmuls
or
and
pop
clc
pop
xchg
pop
rolb
pop
into
or
add
and
or
adc
stos
daa
cmp
nop
dec
out
push
sbb
push
in
pop
mov
xor
push
xchg
jo
roll
mov
mov
sub
inc
mov
int3
inc
mov
in
jg
pop
add
ds
stos
push
and
nop
mov
dec
and
push
faddl
pop
push
xchg
rclb
sahf
enter
aas
nop
jns
icebp
out
cld
mov
add
neg
gs
shrb
sbb
stos
add
cmpsl
push
ret
aaa
sub
mov
add
mov
das
in
notb
outsb
sbb
in
scas
jmp
pop
or
push
add
jno
mov
addr16
out
ret
js
daa
out
rcr
add
and
jne
push
add
test
stc
push
daa
add
mov
and
sbb
cmpsl
cmp
xchg
sub
inc
sti
icebp
rcll
add
xchg
cmpsb
and
in
xor
dec
pusha
inc
or
and
jo
push
inc
faddp
jmp
dec
or
shl
xor
hlt
sub
nop
mov
flds
pop
daa
jg
and
xor
addl
enter
add
xor
pop
mov
mov
int3
add
mov
cmp
xchg
push
orb
dec
shl
std
popf
jb
jl
and
sbb
ret
and
in
add
rolb
popf
dec
imul
sbb
fmuls
loop
test
fdivr
cmp
jo
mov
or
bound
cwtl
xor
test
sub
xor
mulb
xlat
outsl
sub
sahf
cmp
rcll
add
leave
dec
mov
or
adc
js
pop
sub
push
push
or
push
repnz
mov
jae
dec
and
test
lock
cwtl
rorb
sub
add
rcrb
add
jmp
pop
inc
add
dec
in
lods
jno
test
and
xchg
mov
dec
push
imul
pop
push
jg
imull
in
add
ljmp
fstpl
mov
ret
xor
jno
out
in
fs
roll
mov
adc
jne
xchg
mull
add
adc
lds
call
and
loopne
pop
push
inc
pop
or
sbb
jle
das
ds
add
xor
cld
or
mov
subb
jae
cmp
pop
cltd
inc
call
call
fstps
xchg
popf
adc
add
loopne
popf
adc
adc
mov
add
cmp
cmovl
pop
ret
and
jg
adc
add
and
pop
insl
add
xchg
adc
test
cld
lea
and
addr16
or
jge
adc
es
clc
in
mov
stos
sldt
cld
das
cmp
ret
and
xorb
aas
lock
add
idivl
mov
sarb
addl
pop
pop
mov
add
jb
xchg
pop
std
enter
xchg
adc
cmp
mov
fisubs
int3
dec
and
cwtl
cmp
xchg
add
lds
and
adc
mov
pop
mov
sti
cli
xchg
pop
push
pop
cmp
fwait
and
adc
aaa
add
pop
mov
mov
int
xchg
out
sbb
lock
mov
shlb
mov
jns
add
cmp
cmc
add
dec
subb
inc
scas
push
sub
ror
daa
pop
jl
inc
jg
mov
xlat
fdivs
flds
add
test
test
dec
cmp
add
sbb
mov
imul
mov
sbb
push
lea
cmp
clc
sbb
jp
hlt
and
mov
ret
and
pop
stc
pop
add
adc
mov
dec
mov
rorl
jns
add
lods
pusha
xchg
sub
dec
push
mov
sbb
pusha
xor
es
inc
and
jb
mov
call
sub
jo
cli
xchg
mov
inc
popf
mov
xchg
add
jmp
adc
add
test
or
xor
rorl
dec
jp
add
and
out
pop
inc
leave
pop
push
movb
test
or
cmpsl
in
int3
mov
ljmp
mov
pop
lock
push
add
repz
mov
add
pushf
std
das
sti
sub
add
adc
jns
mov
inc
add
cs
in
loope
lcall
repnz
jmpw
fcomps
orb
aam
inc
xor
cld
add
mov
dec
repz
sti
sbb
inc
clc
in
and
shr
dec
sbb
sbb
inc
fadd
dec
aas
shrb
in
jno
stos
jg,pn
xchg
push
jns
test
add
pop
stos
and
test
ss
lods
jg
mov
add
in
inc
and
stc
add
dec
or
stos
cmpsb
adc
test
lock
lahf
add
cmc
in
dec
add
push
sub
je
lea
inc
clc
repz
pop
dec
mov
push
scas
adc
sbb
dec
and
mov
rolb
test
mov
addr16
sbbb
adc
sub
and
dec
nop
pop
jmp
sub
into
xchg
sti
adc
mov
or
sbb
les
and
lcall
push
inc
insb
add
dec
sbb
gs
addl
mov
bound
mov
add
decb
add
inc
test
add
into
mov
sbb
pop
in
dec
jnp
and
jle
pop
add
aaa
lds
hlt
mov
or
sbb
dec
xor
add
xchg
xchg
mov
mov
xchg
mov
sub
sbbl
add
and
in
out
mov
fcoms
orl
and
xor
icebp
test
push
cwtl
dec
or
mov
sub
mov
test
push
and
and
cmp
leave
or
repnz
cmp
add
add
leave
dec
and
enter
adc
iret
mov
filds
xor
popf
addb
jg
enter
nop
add
xor
jmp
fs
repnz
or
and
icebp
sub
cmpsb
mov
xchg
es
xor
mov
or
pop
clc
ss
or
inc
mov
push
mov
js
xor
pop
outsl
pop
outsb
xor
shl
dec
jns
xchg
and
push
out
push
push
shrb
jae
push
int
rclb
mov
cmp
push
bound
mov
fisubrs
jmp
mov
push
repz
ret
into
fiaddl
fimuls
push
jl
inc
inc
add
lea
mov
movsl
and
add
std
sub
pusha
loopne
shl
add
je
popa
cmp
enter
popa
inc
push
aas
in
and
jae
mov
mov
add
xor
pop
mov
lret
pop
inc
add
out
iret
push
pusha
es
pop
aam
jl
stos
cmp
sub
pop
push
jb
dec
and
pop
data16
rol
cmp
mov
das
sahf
jl
push
fwait
shrl
movsb
stos
mov
add
dec
jbe
lock
test
cmp
push
pushf
test
dec
dec
mov
rolb
sbb
movsb
dec
outsb
sub
test
sbb
cli
sbb
cmpb
lahf
jb
repnz
and
scas
cmp
addb
shl
fs
jle
add
cmpsb
add
mov
cmpsl
push
jle
outsb
stc
or
pop
xor
fistpl
repz
rclb
in
rcrb
jne
das
pop
or
mov
stc
dec
sbb
hlt
inc
cmp
dec
cmpb
es
enter
lret
xchg
sbb
dec
jge
test
add
pop
es
test
mov
stos
fildl
fnstcw
rcrb
pop
rorl
add
push
loope
fiadds
and
cs
test
and
mov
aam
add
in
mov
or
mov
neg
sahf
es
fdiv
jle
push
add
flds
mov
test
js
push
sbb
add
rolb
testl
push
cmp
dec
sbb
jae
ja
shll
pusha
sub
pop
sub
jnp
add
mov
add
mov
jo
ds
add
fcomps
and
mov
and
add
sub
add
call
dec
cmp
adc
mov
add
jae
xor
and
fdivl
add
add
pop
scas
outsl
jo
adc
cmp
pop
mov
aaa
lcall
pop
add
adc
cwtl
out
fidivrs
pusha
pop
sbb
insb
repz
pop
mov
mov
lods
adc
arpl
out
pop
mov
add
stc
aam
repnz
pusha
cli
fldl
lods
mov
and
xchg
movsl
jbe
test
mov
add
repnz
pop
icebp
push
and
insl
jbe
xor
pop
fnstsw
push
add
push
or
enter
adcl
arpl
ret
and
stc
mov
movsl
call
dec
fsubs
cltd
mov
bound
mov
call
lret
and
push
xlat
adcl
pushf
and
enter
addb
jp
ret
mov
push
aam
pushf
sbb
push
leave
cwtl
bound
negb
or
cmpsb
adc
jp
and
add
movsb
mov
stos
add
popa
pop
sub
pop
and
sbb
sbb
cmp
ja
loope
fdivs
push
jb
cwtl
xor
push
dec
popf
cli
adc
mov
and
fs
jmp
lahf
sbbl
jg
pop
mov
or
ss
xchg
add
xchg
scas
inc
fisttpll
mov
pop
mov
mov
push
pop
push
mov
les
push
mov
dec
xchg
ret
nop
push
adc
pop
or
andb
push
jns
out
addb
inc
or
insb
cmpsb
lods
repz
ds
je
push
sub
push
mov
imul
stos
nop
fsubl
stc
add
ljmp
or
pop
call
lcall
or
mov
jo
or
sub
dec
lret
add
fsub
mov
add
cmpb
push
mov
cltd
sbb
cmp
dec
lret
mov
fld
in
push
data16
cwtl
pop
js
xor
mov
andb
jl
add
aas
stos
xchg
dec
test
popf
imulb
fdivl
fwait
pop
hlt
lret
mov
cmpsl
cltd
fcompl
loop
dec
inc
je
dec
sahf
aam
or
jns
jbe
dec
test
js
cld
add
outsl
jge
lcall
das
jno
ja
add
push
or
and
jno
addr16
mov
imul
das
add
loop
xor
je
xor
hlt
inc
mov
adc
and
enter
jmp
mov
sub
rcr
std
pop
sub
mov
xor
movl
jns
push
push
lret
jbe
cmp
rclb
add
sbb
and
dec
ret
and
adc
cwtl
mov
clc
jg
arpl
jae
mov
and
mov
orb
mov
push
flds
inc
xchg
fwait
xorl
jae
out
iret
loope
add
mov
add
imul
push
sub
or
add
lret
push
add
dec
call
subb
inc
subl
les
ss
movb
loopne
sbbb
push
pop
jo
push
push
and
add
in
push
dec
ret
repz
add
sub
push
add
adc
push
loopne
dec
cmp
xor
add
inc
scas
cmpb
add
pop
notl
jns
gs
jbe
dec
pop
fsts
add
pop
lock
idivb
push
add
addr16
loope
js
cwtl
add
xchg
in
pusha
push
cltd
jle
xor
mov
cs
mov
mov
xor
push
inc
mov
rorb
ja
jg
pusha
xor
adc
test
or
loopne
jbe
repnz
das
int3
add
negb
pop
insl
xchg
add
ds
jge
mov
and
mov
mov
stos
popa
mov
push
and
add
jbe
inc
add
mov
out
sbb
cmpsb
mov
call
notb
xor
test
push
add
xchg
or
mov
add
push
inc
addb
movsb
loopne
cltd
sub
popf
and
xor
add
mov
test
sbb
rclb
mov
jl
lock
xor
sub
iret
adc
inc
dec
add
ja
stc
push
fsubrl
sbb
rolb
jecxz
mov
xor
cmp
les
imul
jns
pop
xor
pushf
pop
call
jae
inc
cmp
add
push
fisttps
add
fnstenv
pop
test
sub
orb
popa
xchg
mov
and
neg
inc
clc
mov
pop
mov
dec
jb
dec
add
movsb
lret
inc
add
xorl
xor
pslld
xchg
shlb
mov
mov
jns
mov
xchg
push
inc
or
inc
mov
outsl
rcll
add
xchg
or
cmp
test
and
xor
mov
mov
loopne
stc
add
xchg
test
add
push
mov
push
andb
adc
iret
shlb
mov
sub
aas
push
repz
mov
or
push
je
and
leave
xchg
dec
fs
hlt
shl
cmp
enter
scas
ss
xchg
call
xor
stos
jle
imul
cmp
pop
mov
fcoms
inc
int3
jnp
pop
mov
adc
mov
or
xchg
lock
fiaddl
add
dec
and
adc
sub
clc
pusha
mov
mov
mov
adc
jmp
mov
adc
rcrb
push
js
pusha
cli
addl
pop
mov
jbe
lods
xor
inc
int3
in
push
movsl
mov
and
xor
and
lock
jmp
outsl
in
xchg
imul
andl
lods
mov
in
mov
push
jno
sbb
jmp
add
push
xor
cmp
loopne
adc
loope
jbe
punpckhwd
sub
push
rolb
adc
xchg
jp
cmp
ret
movnti
testl
lods
popa
sbb
and
inc
roll
push
sahf
add
pop
pop
adc
ret
add
xlat
cmpl
push
rcr
xor
jb
arpl
bound
sub
lods
hlt
pop
jno
sub
lock
int3
popf
jmp
daa
mov
inc
lahf
sub
out
arpl
insl
mov
push
pcmpeqd
mov
sbb
fnsave
add
out
sbb
std
popf
adc
ds
xor
adc
push
inc
ja
addb
add
stos
jns,pt
add
add
xchg
push
ret
sub
mov
or
cmpb
xor
push
pop
dec
lods
and
push
and
sahf
in
or
pop
aas
rcr
xchg
sub
xor
jp
cmp
pusha
add
aam
adc
dec
pop
addb
lds
enter
or
xchg
arpl
cmc
dec
aad
mov
into
aaa
dec
popf
lahf
sub
mov
mov
add
dec
inc
adc
jp
cs
aas
mov
out
mov
in
cmp
pop
js
and
cmpsb
and
cs
or
xchg
cmp
pop
xor
xchg
xchg
test
sti
je
add
xchg
xor
jle,pt
lods
xor
leave
and
push
jecxz
fcomp
xchg
inc
cld
cmp
cld
jae
fdiv
pop
imul
xor
movsb
add
iret
dec
test
stos
or
shrb
mov
inc
jb
push
aad
inc
dec
daa
adc
shl
jae
pop
jne
fdivr
jg
mov
push
insb
shl
adc
adcb
push
call
and
mov
lret
cmpsb
push
stos
es
clc
ja
cmpsl
jo,pt
mov
inc
lcall
pop
xchg
ret
inc
mov
inc
inc
in
popf
or
pop
push
sbb
and
dec
cwtl
jne
fcoms
rolb
xlat
cmp
mov
es
ja
rcl
outsl
mov
rolb
ds
iret
lds
xchg
or
popf
mov
subl
sub
mov
pop
loope
faddl
jecxz
or
adc
leave
jne
or
mov
ret
cmpb
add
sub
dec
cmpsb
or
add
dec
cmp
sub
mov
mov
add
fisttpl
insb
orb
jo
add
fbld
in
stos
add
add
je
mov
mov
enter
and
inc
stc
push
pop
inc
dec
add
inc
and
adc
xchg
js
cmpb
cmpsl
mov
jg
jno
cmp
jmp
rorb
adc
mov
inc
addr16
popa
es
inc
or
test
xorb
adc
mov
sub
sbb
add
xchg
xlat
loop
add
mov
jo
jnp
movsb
fadds
outsb
cmp
arpl
xor
mov
mov
loope
mov
push
add
push
mov
jle
or
pop
aas
adc
push
rolb
int3
pop
lods
imul
sub
mov
mov
js
ds
add
pop
sti
cmp
mov
scas
xchg
ret
jne
les
add
popa
adc
cmp
cmpsb
dec
loopne
add
lock
cmp
pop
and
jl
pop
add
add
xchg
cwtl
jecxz
xorl
popl
enter
mov
cmpsb
or
or
lahf
gs
test
add
inc
dec
iret
jnp
aad
push
lret
je
sbb
enter
pop
mov
add
push
and
add
stos
fcoml
nop
and
cmpl
jl
add
mov
xor
add
orl
dec
pusha
pusha
sbb
jbe
mov
test
sbb
jnp
add
sub
add
cltd
pop
pop
add
jg
lock
pop
filds
outsl
cwtl
inc
dec
xor
inc
mov
loope
push
test
lock
sahf
into
in
loopne
jae
cmp
add
and
add
xchg
mov
aam
pop
into
mov
je
jg
add
icebp
or
cmp
mov
test
movsl
adc
add
push
filds
pop
cmp
xor
js
sub
add
hlt
adc
jno
inc
and
mov
pop
add
add
inc
sbb
out
sub
add
xchg
addr16
movb
mov
dec
int
inc
add
subb
data16
fs
fldenv
mov
lds
ds
xchg
pop
lock
cmpsb
and
mov
inc
and
push
sti
cmp
dec
cmp
iret
and
fcoms
add
cld
ror
push
or
ja
cs
iret
add
cmp
lock
jns
xor
push
es
pop
and
xlat
and
out
ror
filds
xchg
push
outsb
aad
mov
pop
movsb
xor
mov
xor
adc
push
inc
fmulp
adc
into
lahf
xchg
cmp
xchg
mov
add
sti
mov
out
idiv
mov
add
popf
and
dec
dec
add
cmp
shrl
xchg
aas
dec
movsl
push
sbb
rcrl
fiadds
popf
inc
cwtl
pop
adc
nop
add
movsb
add
daa
je
outsb
jp
jg
idiv
clc
adc
fs
add
add
add
push
dec
add
dec
