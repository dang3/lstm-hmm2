add
inc
add
add
jns
add
add
add
add
add
or
push
je
imul
insb
adc
add
add
add
add
adc
inc
add
xor
and
inc
add
xor
sbb
inc
add
das
inc
add
das
inc
add
xor
pop
push
dec
bound
arpl
sbb
inc
add
roll
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
add
mov
push
call
testb
je
movzwl
mov
add
pop
ret
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
add
mov
cmpl
jne
push
push
call
mov
cmpl
jne
xor
mov
jmp
mov
mov
mov
mov
mov
xor
mov
add
mov
lea
mov
mov
mov
mov
mov
mov
inc
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
add
pop
ret
mov
mov
ret
mov
push
push
add
mov
mov
call
mov
cmpl
jne
xor
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
pop
ret
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
mov
push
push
push
push
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
cmp
jne
mov
call
mov
mov
mov
mov
mov
add
jmp
add
cmp
jne
mov
call
mov
mov
add
mov
mov
cmp
jne
mov
mov
call
test
jne
xor
mov
pop
pop
pop
pop
pop
pop
ret
lea
push
push
push
push
add
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
add
mov
add
cmp
jb
cmp
jne
mov
mov
add
mov
mov
sub
mov
cmpl
jne
mov
call
jmp
mov
mov
add
mov
add
cmp
jne
mov
mov
sub
jmp
mov
add
mov
mov
mov
mov
add
sub
mov
sub
mov
mov
lea
mov
call
test
jne
xor
jmp
mov
jmp
mov
mov
mov
mov
cmp
jne
xor
add
pop
pop
pop
pop
ret
nop
push
push
push
mov
mov
cmp
jge
mov
jmp
add
and
mov
push
push
push
push
call
mov
mov
test
je
mov
mov
call
test
jne
push
push
mov
push
call
xor
mov
pop
pop
pop
ret
nop
push
push
push
push
mov
mov
mov
movl
push
push
push
push
call
mov
mov
test
jne
add
and
mov
push
push
push
push
call
mov
cmpl
je
mov
mov
call
test
jne
push
push
mov
push
call
xor
mov
pop
pop
pop
pop
ret
nop
push
push
push
push
add
mov
mov
movl
xor
mov
mov
add
mov
mov
mov
jmp
mov
mov
mov
mov
mov
cmp
jb
mov
mov
add
cmp
ja
cmp
jae
mov
mov
mov
mov
add
cmp
jbe
mov
push
push
mov
mov
push
call
test
jne
movl
mov
call
mov
mov
mov
cmp
jne
xor
mov
cmpl
je
mov
mov
mov
sub
mov
add
pop
pop
pop
pop
ret
mov
push
push
push
push
add
mov
mov
lea
lea
lea
mov
mov
and
mov
add
add
and
mov
mov
mov
mov
sub
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
mov
mov
cmp
jae
mov
mov
mov
cmp
jbe
mov
mov
mov
cmp
jae
push
push
mov
sub
push
mov
push
call
test
jne
xor
mov
jmp
mov
mov
mov
mov
cmp
jne
add
pop
pop
pop
pop
ret
nop
push
push
push
push
add
mov
lea
lea
lea
mov
mov
add
and
mov
add
and
mov
mov
mov
mov
sub
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
mov
mov
cmp
jae
mov
mov
mov
cmp
jbe
mov
mov
mov
cmp
jae
push
mov
sub
push
mov
push
call
test
jne
movl
mov
mov
mov
mov
cmp
jne
add
pop
pop
pop
pop
ret
mov
push
push
push
push
add
mov
mov
mov
mov
add
and
mov
mov
jmp
mov
cmp
jg
mov
mov
mov
mov
call
cmpl
je
mov
mov
add
mov
mov
sub
mov
cmpl
jne
mov
call
jmp
mov
mov
mov
cmp
jne
mov
mov
call
cmpl
je
lea
mov
mov
call
cmpl
jne
lea
mov
mov
call
xor
mov
add
pop
pop
pop
pop
ret
mov
push
push
push
push
add
mov
mov
mov
lea
mov
add
and
mov
mov
jmp
mov
mov
mov
cmp
je
mov
cmp
jne
mov
cmp
jne
mov
cmp
jle
mov
mov
sub
mov
mov
mov
add
lea
call
cmpl
je
lea
lea
mov
call
cmpl
jne
lea
mov
mov
call
mov
xor
mov
jmp
lea
mov
mov
call
cmpl
je
lea
lea
mov
call
cmpl
jne
lea
mov
mov
call
mov
xor
mov
jmp
mov
mov
cmp
jne
mov
cmp
jg
mov
mov
mov
call
mov
cmpl
je
mov
mov
mov
add
mov
mov
mov
sub
mov
cmpl
jne
mov
call
jmp
mov
xor
mov
add
pop
pop
pop
pop
ret
nop
push
add
mov
lea
and
mov
add
and
mov
mov
cmp
jbe
mov
mov
sub
mov
call
lea
mov
mov
call
mov
test
je
lea
mov
mov
call
mov
mov
mov
mov
cmpl
je
lea
mov
call
jmp
xor
mov
add
pop
ret
mov
push
mov
push
xor
push
push
pushl
mov
push
call
cmpb
je
push
call
mov
call
mov
call
mov
call
push
push
call
mov
cmpl
je
mov
mov
xor
mov
inc
cmp
jne
movl
mov
mov
mov
mov
mov
mov
mov
mov
movb
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
pop
ret
nop
push
mov
add
cmpb
je
xor
push
push
pushl
mov
cmpb
je
push
call
movb
mov
push
call
xor
mov
mov
mov
jmp
push
push
mov
mov
push
call
mov
mov
mov
mov
cmp
jne
mov
call
mov
call
mov
call
mov
mov
cmpl
je
mov
mov
mov
mov
push
call
mov
mov
cmpl
jne
xor
pop
pop
pop
mov
push
cmpb
je
push
call
push
call
ret
jmp
jmp
pop
pop
pop
ret
nop
push
add
cmp
jne
mov
mov
mov
mov
mov
cmp
jg
cmp
jne
test
jns
add
sar
mov
xor
mov
jmp
test
jns
add
sar
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
ret
lea
push
push
mov
mov
mov
jmp
mov
mov
cmp
jb
mov
add
cmp
jb
mov
mov
mov
mov
cmp
jne
movl
xor
mov
mov
pop
pop
ret
mov
push
push
mov
sub
lea
mov
cmp
jl
mov
movl
mov
call
pop
pop
ret
cmp
jl
mov
or
mov
mov
mov
pop
pop
ret
incl
mov
sub
mov
and
sub
add
call
ret
mov
cmp
jl
or
mov
add
call
ret
cmp
jl
mov
or
mov
add
andl
ret
push
push
push
mov
sub
mov
mov
and
cmp
je
movl
mov
and
sub
mov
xor
test
je
movl
testb
je
mov
sub
mov
sub
mov
mov
cmp
je
movl
mov
call
add
mov
pop
pop
pop
ret
push
push
push
mov
xor
mov
test
je
and
add
add
mov
test
jne
mov
mov
call
mov
mov
add
add
andl
mov
pop
pop
pop
ret
lea
push
push
push
push
add
mov
mov
xor
mov
call
mov
cmpl
je
mov
mov
mov
mov
add
mov
lea
sub
cmp
jg
mov
sub
mov
sub
cmp
jge
mov
mov
sub
add
mov
mov
call
jmp
mov
mov
sub
lea
call
mov
test
je
mov
sub
mov
call
mov
mov
mov
add
mov
add
cmp
jbe
lea
sub
call
mov
mov
call
mov
mov
add
pop
pop
pop
pop
ret
push
push
add
mov
mov
mov
mov
mov
mov
add
sub
mov
cmp
jg
mov
test
jns
add
sar
mov
mov
mov
cmpl
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
jl
mov
mov
call
test
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
pop
pop
ret
nop
cmpl
jle
cmpl
jge
movl
jmp
mov
or
mov
mov
mov
add
call
xor
mov
xor
mov
ret
mov
push
push
push
add
mov
lea
movsl
movsl
mov
call
lea
mov
mov
call
mov
test
jne
xor
jmp
mov
cmp
jae
call
sub
add
mov
add
mov
add
cmp
jae
call
add
mov
add
cmp
jne
sub
mov
call
subl
mov
mov
mov
mov
mov
add
pop
pop
pop
ret
lea
push
add
mov
mov
lea
call
cmpl
je
mov
call
test
jne
xor
jmp
mov
pop
pop
pop
ret
nop
push
push
add
mov
mov
mov
lea
mov
call
cmpl
je
mov
call
test
jne
xor
jmp
mov
pop
pop
pop
pop
ret
lea
push
mov
xor
mov
test
jns
add
sar
cmp
jg
mov
mov
mov
cmpl
jne
inc
cmp
jne
mov
pop
ret
lea
push
push
push
push
add
mov
lea
mov
mov
mov
mov
mov
cmp
jle
mov
mov
mov
mov
cmp
jle
mov
mov
mov
mov
mov
mov
cmp
jg
mov
mov
mov
cmp
je
mov
mov
jmp
cmp
jg
mov
call
mov
cmpl
jne
mov
call
test
jne
xor
mov
jmp
cmp
jg
sub
cmpl
jge
add
xor
mov
mov
mov
add
mov
or
mov
mov
mov
add
mov
incl
sub
add
jmp
mov
call
mov
mov
mov
sub
cmp
jl
mov
add
xchg
call
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
add
mov
mov
andl
mov
mov
mov
or
mov
mov
mov
add
mov
incl
sub
add
mov
add
pop
pop
pop
pop
ret
push
mov
add
push
mov
cmpb
jne
call
test
je
cmp
jle
xor
mov
jmp
xor
push
push
pushl
mov
cmpb
je
push
call
add
and
cmp
jge
mov
cmp
jg
mov
test
jns
add
sar
mov
mov
mov
cmpl
je
mov
add
mov
mov
andl
mov
mov
mov
mov
cmp
jne
mov
xor
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
mov
mov
add
mov
incl
sub
add
call
jmp
cmp
jg
sub
cmpl
jge
add
xor
mov
mov
mov
add
mov
or
mov
mov
mov
add
mov
incl
sub
add
call
jmp
mov
call
mov
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
mov
pop
ret
nop
push
mov
add
push
mov
xor
mov
cmpb
jne
call
test
jne
movl
movl
jmp
xor
push
push
pushl
mov
cmpb
je
push
call
mov
mov
sub
mov
mov
mov
test
jne
movl
jmp
decl
mov
and
sub
sub
test
je
mov
sub
mov
cmp
jl
test
je
movl
jmp
mov
sub
mov
mov
cmp
je
movl
jmp
add
mov
mov
mov
call
and
mov
add
mov
mov
cmp
jne
sub
add
cmpl
jle
call
xor
mov
call
jmp
mov
mov
test
je
and
cmp
jge
movl
jmp
mov
orl
jmp
mov
mov
mov
cmpl
je
mov
cmpl
je
mov
cmpl
jge
movl
jmp
mov
mov
add
mov
call
mov
mov
call
mov
mov
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
mov
pop
ret
mov
push
push
push
push
add
mov
add
and
cmp
jge
mov
sub
mov
mov
mov
and
mov
add
mov
cmp
jne
mov
jmp
cmp
jle
mov
sub
mov
cmp
jne
sub
add
cmpl
jge
add
sub
mov
jmp
mov
mov
testb
jne
mov
mov
mov
add
mov
call
cmp
jl
mov
add
mov
or
mov
mov
mov
add
call
jmp
mov
jmp
mov
sub
mov
cmp
jne
cmp
jg
sub
add
cmpl
jge
mov
add
add
xor
mov
mov
sub
add
mov
mov
and
or
mov
mov
mov
jmp
call
mov
add
mov
mov
testb
jne
mov
mov
mov
mov
cmp
jle
add
mov
sub
jmp
mov
call
sub
cmp
jl
mov
add
mov
call
jmp
add
mov
add
mov
mov
andl
jmp
mov
mov
test
je
and
add
mov
mov
mov
call
test
je
mov
add
mov
jmp
xor
jmp
mov
sub
add
mov
mov
and
or
mov
mov
mov
add
pop
pop
pop
pop
ret
nop
push
mov
add
push
push
mov
mov
cmpb
jne
call
test
jne
xor
mov
jmp
xor
push
push
pushl
mov
cmpb
je
push
call
mov
mov
call
test
je
mov
jmp
mov
call
mov
mov
sub
mov
and
sub
cmp
jge
mov
cmpl
je
mov
mov
xchg
call
mov
call
mov
mov
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
pop
pop
pop
pop
ret
lea
push
push
mov
test
jle
mov
call
mov
cmpl
jne
mov
call
jmp
xor
mov
mov
pop
pop
ret
lea
push
test
je
call
mov
test
je
mov
call
jmp
xor
mov
pop
ret
mov
test
je
test
je
push
mov
call
pop
or
je
mov
ret
mov
jmp
mov
mov
call
or
jne
ret
mov
jmp
test
je
push
mov
call
pop
or
je
mov
ret
lea
mov
call
ret
push
push
mov
mov
and
cmpl
je
mov
mov
call
test
jne
call
mov
jmp
cmp
ja
xor
mov
mov
xor
mov
mov
call
pop
pop
ret
mov
and
mov
jmp
ret
push
push
push
call
cmpl
pop
pop
pop
jne
ret
xor
jmp
ret
lea
push
mov
call
mov
pop
ret
push
call
mov
call
xor
mov
mov
pop
ret
lea
push
push
mov
mov
mov
cmp
ja
je
sar
js
rep
mov
and
rep
pop
pop
ret
lea
lea
sar
js
std
rep
mov
and
add
add
rep
cld
pop
pop
ret
push
mov
sub
je
dec
sub
jae
mov
call
mov
jmp
xor
jmp
cmp
je
cmp
jne
xor
jmp
mov
test
je
mov
call
mov
pop
ret
lea
mov
call
ret
lea
push
push
mov
xor
mov
cmp
jb
cmp
ja
and
cmp
jne
mov
call
mov
test
jne
mov
call
mov
test
je
mov
call
jmp
cmp
je
mov
call
mov
pop
pop
ret
mov
push
mov
mov
mov
shl
mov
mov
sar
js
rep
mov
and
rep
pop
ret
nop
push
push
push
mov
push
test
je
xor
xor
mov
mov
inc
cmp
je
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
inc
cmp
je
cmp
je
test
je
jmp
test
je
sub
cmp
ja
cmp
ja
lea
add
add
mov
inc
test
jne
dec
je
test
jge
jmp
inc
jmp
neg
jle
js
pop
sub
jmp
inc
mov
inc
jmp
mov
mov
inc
test
je
cmp
jb
sub
sub
cmp
jbe
sub
cmp
ja
add
cmp
ja
shl
add
mov
inc
test
jne
dec
jne
neg
pop
xor
mov
pop
pop
pop
ret
lea
push
push
mov
mov
and
repz
pop
pop
ret
lea
jmp
ret
mov
push
xor
test
jl
je
cmp
jge
mov
and
lea
fldt
fmulp
shr
je
mov
and
je
lea
fldt
fmulp
shr
je
lea
fldt
fmulp
jmp
neg
cmp
jge
mov
and
lea
fldt
fdivrp
shr
je
mov
and
je
lea
fldt
fdivrp
shr
je
lea
fldt
fdivrp
jmp
fstp
fldt
jmp
fstp
fldz
pop
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cli
or
add
add
add
or
add
add
add
push
ret
cmovo
add
add
add
adc
add
add
adcb
add
add
mov
add
add
sub
sbb
add
add
add
add
add
inc
mov
mov
add
adc
add
add
sub
test
add
sub
mov
xor
add
add
leave
sbb
add
cs
add
inc
jbe
imul
cmp
add
mov
mov
inc
add
bound
inc
add
xlat
fadds
nop
lods
outsb
xor
xchg
add
test
in
int3
into
sbb
rorl
mov
push
pop
test
enter
mov
inc
cmp
and
daa
lret
into
pop
inc
test
xchg
clc
js
aas
sbbl
pop
mov
addr16
leave
repnz
bound
and
cld
gs
sahf
mov
sub
inc
aad
iret
decl
js
roll
adc
lds
stos
mov
cmp
or
mov
pop
out
sub
imul
divl
jl
xor
cmp
call
mov
stc
popf
sti
jmp
stos
push
inc
mov
push
sbb
sarb
repnz
test
nop
fildl
daa
movsb
lahf
nop
inc
pop
stos
clc
scas
adc
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
inc
bound
ds
push
cmpsb
scas
mov
pop
or
addl
cmp
xor
in
cmp
sahf
xchg
pop
cmpsb
lock
mov
popa
mov
fsubs
addr16
repz
mov
subb
and
and
outsb
bound
xor
jmp
mov
push
xor
push
call
cmp
jne
push
call
and
cmp
je
cmp
jne
mov
mov
pop
ret
nop
push
mov
add
movzwl
mov
lea
push
push
push
push
push
call
test
jne
xor
push
push
pushl
mov
movl
lea
push
lea
push
push
push
push
mov
push
call
xor
pop
pop
pop
mov
push
mov
push
call
ret
jmp
jmp
mov
and
mov
and
or
mov
mov
pop
ret
add
inc
push
push
inc
push
inc
pop
inc
outsl
jb
popa
outsb
fs
inc
gs
jo
imul
push
dec
popa
jae
push
popa
insb
jne
add
add
fninit
fldcw
ret
mov
push
push
mov
mov
xor
mov
inc
rep
pop
pop
ret
lea
push
mov
mov
call
call
mov
mov
call
pop
ret
mov
push
mov
mov
call
mov
call
pop
ret
nop
add
mov
ret
mov
call
test
jle
call
ret
nop
test
je
mov
mov
call
ret
push
push
push
mov
mov
stos
mov
xor
push
shr
dec
rep
pop
and
rep
mov
mov
mov
test
je
push
mov
test
je
mov
jmp
cmp
je
pop
mov
add
mov
test
je
mov
mov
add
dec
jne
cmp
jne
pop
pop
pop
ret
mov
push
push
mov
mov
mov
mov
mov
test
je
call
mov
test
jne
pop
pop
ret
push
push
mov
mov
test
je
mov
mov
call
test
jne
xor
pop
pop
ret
mov
pop
pop
ret
lea
push
xchg
jmp
mov
mov
test
je
movzwl
push
add
repnz
je
pop
mov
test
jne
pop
ret
pop
add
sub
mov
pop
ret
mov
jmp
mov
cmp
je
mov
test
jne
ret
mov
ret
nop
mov
ret
mov
ret
lea
ret
lea
ret
lea
push
mov
or
je
cmp
jae
push
mov
call
pop
je
mov
pop
jmp
pop
mov
jmp
ret
nop
push
push
push
test
jl
call
xor
lea
mov
mov
mov
movl
mov
mov
pop
pop
pop
ret
jmp
mov
mov
test
je
mov
mov
push
call
pop
call
call
ret
lea
mov
call
ret
mov
push
mov
mov
mov
call
mov
pop
ret
mov
test
jg
ret
push
push
mov
call
pop
pop
ret
nop
cmpb
jbe
push
push
push
push
call
ret
nop
cmpb
je
push
push
push
push
push
push
push
call
add
pop
ret
lea
push
push
push
push
call
add
pop
ret
lea
cmpb
jbe
push
push
jmp
ret
lea
test
je
mov
cmpb
je
cmpb
jne
movsbl
inc
inc
jmp
add
add
ret
mov
cmpb
jbe
push
push
push
call
push
push
push
push
push
call
pop
pop
pop
pop
ret
nop
cmpb
jbe
push
push
push
push
push
call
pop
ret
push
push
cmpb
jbe
push
push
push
push
call
pop
pop
ret
mov
mov
testl
jne
cmpl
mov
mov
je
cld
call
mov
test
je
call
test
je
mov
mov
cmpl
je
call
cmpb
jbe
cmpb
ja
lea
push
push
call
cmp
pop
je
mov
mov
mov
jmp
mov
mov
mov
cmpb
jbe
cmpb
ja
push
lea
push
push
push
call
cmp
pop
pop
pop
je
orl
push
xor
push
push
push
mov
push
push
push
push
mov
push
push
push
push
call
mov
call
pushl
mov
mov
mov
movl
add
call
jmp
jmp
call
mov
mov
mov
mov
jmp
mov
ret
mov
mov
mov
testl
je
mov
movl
push
push
push
push
mov
add
call
call
pop
pop
pop
pop
mov
ret
mov
or
jne
mov
call
pop
push
push
push
push
push
push
push
push
push
push
push
push
jmp
ret
mov
movl
call
mov
mov
mov
mov
andl
cmpl
je
mov
call
call
xor
add
mov
pop
mov
mov
pop
pop
pop
pop
mov
ret
lea
call
mov
mov
mov
mov
call
pop
mov
xor
pop
mov
pop
pop
call
jmp
ret
xor
mov
mov
add
mov
call
ret
ret
mov
push
mov
mov
mov
cmp
jg
je
cmp
jg
je
sub
je
sub
je
dec
je
jmp
add
sub
jb
je
jmp
cmp
jg
je
sub
je
dec
je
dec
je
jmp
sub
je
sub
je
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
and
mov
call
pop
ret
mov
testl
jne
cmpb
ja
lea
push
call
cmp
je
mov
cld
call
mov
push
push
push
push
call
mov
cmpl
mov
mov
je
mov
test
je
mov
call
test
je
mov
call
mov
test
je
call
mov
mov
mov
mov
jmp
xor
ret
lea
xor
lea
mov
mov
mov
movl
mov
mov
ret
lea
xor
mov
test
je
mov
cmp
jne
mov
mov
ret
mov
cmp
je
cmp
jne
mov
mov
ret
push
mov
add
push
push
push
mov
mov
test
je
mov
mov
mov
xor
push
push
pushl
mov
test
jle
dec
mov
mov
mov
mov
cmpl
je
call
test
jg
xor
pop
pop
pop
mov
jmp
jmp
call
call
call
pop
pop
pop
pop
pop
pop
ret
push
mov
add
push
push
push
mov
mov
test
je
mov
xor
mov
mov
xor
push
push
pushl
mov
cmp
jle
mov
mov
mov
inc
mov
cmpl
je
call
cmp
jg
xor
pop
pop
pop
mov
jmp
jmp
call
call
call
pop
pop
pop
pop
pop
pop
ret
movl
movl
mov
xor
mov
mov
mov
mov
call
movb
call
ret
push
xor
push
push
mov
lea
mov
mov
mov
add
call
add
dec
jne
pop
pop
pop
ret
lea
push
xor
push
push
mov
lea
mov
mov
mov
add
mov
add
dec
jne
pop
pop
pop
ret
push
push
push
mov
mov
mov
mov
mov
cltd
idiv
add
xor
mov
mov
mov
mov
cltd
idiv
mov
dec
test
jne
mov
mov
mov
and
mov
xor
mov
mov
shr
dec
test
jne
pop
pop
pop
ret
mov
xor
xchg
neg
sbb
inc
mov
mov
mov
pushl
pushl
mov
mov
rep
pop
pop
leave
ret
ret
mov
push
cmpb
je
cmpw
jne
cmpl
jbe
mov
call
push
lea
push
push
push
push
call
push
call
push
lea
push
push
push
push
call
push
call
pop
ret
cmpb
jne
push
push
push
push
call
pop
ret
add
incl
add
add
push
push
push
push
mov
mov
cmpb
jne
cmpl
je
mov
mov
xor
mov
call
cmpl
jne
cmpl
je
call
call
xor
mov
cmpb
jne
cmpl
jne
xor
mov
call
cmpb
jbe
cmpl
je
mov
test
je
mov
call
mov
mov
cmp
je
test
je
push
call
call
cmpb
jne
call
cmpb
je
call
cmpl
jne
cmpl
je
call
mov
push
call
mov
mov
mov
mov
rep
jmp
pop
pop
pop
pop
pop
ret
mov
call
ret
nop
popl
jmp
ret
mov
test
je
movl
mov
dec
jl
lock
jne
push
lea
call
pop
ret
nop
push
push
mov
mov
mov
test
je
movl
mov
dec
jl
lock
jne
lea
call
add
dec
jne
pop
pop
ret
nop
test
je
mov
inc
jg
push
push
mov
call
mov
pop
push
mov
call
pop
pop
jmp
lock
xchg
test
je
mov
dec
jl
lock
jne
lea
call
ret
nop
test
je
mov
inc
jle
lock
xchg
test
je
mov
dec
jl
lock
jne
lea
call
ret
lea
test
jle
push
add
and
push
call
pop
movw
add
pop
mov
movl
ret
xor
ret
nop
push
push
push
mov
mov
mov
mov
call
mov
mov
test
je
mov
mov
call
mov
call
mov
pop
pop
pop
ret
mov
push
mov
push
push
push
push
mov
push
push
push
mov
push
call
pop
ret
nop
push
mov
push
push
mov
push
push
push
mov
push
call
pop
ret
nop
push
push
push
push
add
push
add
mov
mov
mov
test
jg
mov
call
jmp
lea
cmp
jge
push
lea
mov
mov
call
mov
test
jl
lea
mov
mov
call
jmp
mov
add
mov
mov
call
push
mov
mov
mov
call
mov
test
jge
xor
mov
mov
call
add
pop
pop
pop
pop
ret
push
mov
mov
call
pop
ret
nop
xor
test
je
push
cmp
je
cmp
je
cmp
je
cmp
je
add
jmp
inc
inc
inc
mov
pop
sub
jmp
ret
lea
xor
test
je
push
cmp
je
cmp
je
cmp
je
cmp
je
add
jmp
add
add
add
mov
pop
sub
shr
jmp
ret
lea
xor
mov
inc
jmp
ret
nop
push
push
push
mov
xor
repnz
jne
not
pop
add
pop
pop
jmp
ret
xor
test
je
mov
shr
jmp
ret
lea
test
je
mov
ret
test
je
mov
test
je
push
push
push
mov
mov
mov
mov
add
cmp
je
call
mov
mov
mov
add
call
pop
pop
pop
ret
call
mov
mov
jmp
ret
test
je
test
je
cmp
je
cmp
je
push
push
call
pop
pop
jmp
push
push
push
mov
mov
push
mov
add
call
mov
mov
mov
mov
call
mov
mov
mov
add
call
pop
mov
test
je
decl
call
pop
pop
pop
ret
mov
jmp
mov
jmp
ret
push
push
push
push
push
mov
xor
mov
test
je
cmp
jne
mov
mov
dec
jmp
xor
mov
test
je
add
cmp
jne
xor
dec
jne
test
je
mov
mov
mov
call
mov
pushl
add
dec
jmp
call
push
mov
mov
mov
test
je
mov
add
call
dec
jne
pop
pop
test
jne
test
je
decl
call
pop
pop
pop
pop
pop
lea
jmp
ret
mov
push
push
push
mov
mov
cmp
je
test
je
test
je
mov
mov
sub
ja
add
push
shr
je
mov
mov
cmp
jne
dec
je
mov
mov
cmp
jne
add
add
dec
jne
jmp
add
add
pop
and
je
mov
mov
cmp
jne
dec
je
cmp
jne
dec
je
and
and
cmp
jne
add
jmp
mov
sub
jmp
mov
sub
jmp
pop
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
pop
pop
pop
ret
mov
test
je
mov
inc
jle
lock
ret
nop
test
je
ret
add
ret
mov
test
je
mov
dec
je
push
mov
mov
call
mov
mov
mov
push
mov
call
pop
mov
dec
jl
lock
jne
lea
call
mov
pop
mov
ret
lea
jmp
ret
mov
push
test
je
mov
test
je
dec
jl
cmp
jge
sub
test
jl
cmp
jg
add
mov
call
jmp
xor
jmp
mov
jmp
mov
call
pop
ret
ret
test
je
test
je
push
push
push
mov
mov
mov
push
mov
dec
js
mov
inc
sub
jle
repnz
jne
mov
push
push
mov
repz
pop
pop
je
mov
jmp
pop
xor
jmp
xor
ret
pop
mov
sub
pop
pop
pop
ret
lea
push
push
push
mov
mov
xor
test
jle
mov
test
je
cmpl
jne
sub
add
push
mov
call
pop
add
mov
mov
movb
jmp
mov
call
mov
mov
test
je
mov
mov
cmp
jl
mov
call
mov
call
mov
pop
pop
pop
ret
mov
mov
jmp
ret
test
je
push
push
call
test
je
ret
lea
xchg
test
je
push
call
ret
lea
mov
test
je
movl
push
push
call
pop
ret
lea
push
push
mov
mov
mov
test
je
movl
push
call
add
dec
jne
pop
pop
ret
lea
test
je
mov
shr
je
push
push
push
call
test
je
ret
push
push
push
push
add
push
add
mov
mov
mov
test
jg
mov
call
jmp
lea
cmp
jge
push
lea
mov
mov
call
mov
test
jle
lea
mov
mov
call
jmp
mov
mov
mov
call
push
mov
mov
mov
call
mov
test
jge
xor
mov
mov
call
add
pop
pop
pop
pop
ret
mov
test
je
push
push
push
call
test
je
pop
pushl
mov
call
ret
nop
xor
test
je
push
cmp
je
cmp
je
cmp
je
cmp
je
add
jmp
inc
inc
inc
mov
pop
sub
jmp
ret
lea
test
je
mov
shr
ret
mov
push
push
push
mov
mov
xor
mov
test
jle
mov
call
mov
mov
call
test
jle
cmp
jge
mov
mov
add
mov
mov
call
mov
mov
call
pop
pop
pop
ret
nop
xor
push
mov
push
push
mov
lea
mov
mov
mov
add
mov
mov
call
add
dec
jg
mov
pop
pop
pop
ret
lea
cmpl
je
call
ret
mov
call
ret
cmp
je
push
push
push
push
mov
mov
mov
xor
mov
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
jmp
cmp
mov
jg
call
jmp
mov
call
jmp
cmp
mov
jg
call
jmp
mov
call
jmp
mov
add
call
dec
jg
jmp
push
mov
mov
mov
add
mov
mov
call
dec
jg
pop
jmp
push
mov
mov
add
mov
call
dec
jg
pop
jmp
mov
add
call
dec
jg
jmp
mov
mov
add
call
dec
jg
jmp
pop
pop
pop
pop
mov
jmp
pop
pop
pop
pop
ret
mov
cmpl
je
call
ret
mov
call
ret
push
push
push
push
mov
mov
xor
mov
lea
mov
xor
mov
push
mov
sub
jle
mov
add
add
call
mov
mov
mov
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
mov
pop
pop
pop
pop
jmp
mov
add
call
mov
jmp
mov
add
call
mov
jmp
lea
add
call
mov
jmp
xor
mov
pushl
pushl
mov
mov
lea
add
call
pop
jmp
xor
mov
mov
push
mov
lea
add
call
pop
jmp
mov
add
call
mov
jmp
mov
mov
add
call
mov
add
add
dec
jne
pop
sub
jle
lea
add
call
pop
pop
pop
pop
ret
mov
push
push
push
push
mov
mov
mov
mov
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
mov
pop
pop
pop
pop
jmp
mov
mov
call
add
add
dec
jne
jmp
mov
mov
call
add
add
dec
jne
jmp
mov
mov
call
add
add
dec
jne
jmp
xor
mov
lea
mov
mov
mov
pushl
call
add
add
dec
jne
jmp
mov
mov
mov
call
xor
mov
add
add
dec
jne
jmp
mov
mov
call
add
add
dec
jne
jmp
mov
mov
mov
call
add
add
dec
jne
pop
pop
pop
pop
ret
ret
nop
mov
jmp
ret
push
push
mov
mull
mov
mov
mull
add
mov
mull
add
pop
pop
ret
ret
push
push
push
push
xor
mov
mov
or
jne
or
je
or
je
or
jns
neg
neg
sbb
or
or
jns
neg
neg
sbb
mov
mov
push
xor
xor
shl
rcl
rcl
rcl
cmp
jb
ja
cmp
jb
sub
sbb
inc
loop
mov
mov
pop
test
je
neg
neg
sbb
pop
pop
pop
pop
ret
div
xchg
xor
jmp
ret
nop
push
mov
pushl
call
pop
ret
nop
jmp
ret
mov
call
ret
mov
push
mov
add
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
test
jg
test
jge
mov
call
mov
mov
call
jmp
xor
cmpl
je
subl
mov
mov
subl
mov
movzbl
add
mov
mov
mov
test
je
mov
mov
jmp
xor
mov
mov
imul
mov
mov
cltd
idiv
cmp
je
mov
call
addl
cmpl
je
mov
cmpl
jne
mov
mov
cmp
jle
cmpl
je
mov
add
mov
imul
add
mov
sub
mov
call
lea
mov
call
mov
mov
jmp
mov
decl
mov
call
mov
mov
cmp
jge
mov
cmpl
je
mov
imul
mov
add
xor
call
mov
push
mov
mov
mov
add
mov
call
jmp
mov
imul
mov
add
mov
mov
call
mov
movl
addl
mov
mov
addl
mov
sub
imul
mov
imul
add
xor
call
cmpl
jle
addl
decl
dec
test
jl
inc
xor
mov
push
mov
lea
mov
mov
call
inc
dec
jne
mov
mov
mov
pop
pop
pop
mov
pop
ret
mov
push
addl
call
ret
nop
mov
test
je
movl
lock
jne
push
mov
xor
mov
mov
test
je
mov
test
je
mov
call
sub
call
pop
ret
mov
push
mov
test
je
lock
test
je
lock
jne
push
push
mov
incl
call
pop
pop
mov
pop
ret
nop
push
push
add
mov
cmpl
jne
push
lea
push
mov
push
call
mov
mov
call
mov
mov
test
jne
mov
mov
mov
add
pop
pop
ret
nop
push
push
push
push
mov
mov
mov
mov
cmpl
je
mov
cmp
je
mov
cmp
je
mov
cmp
jne
mov
call
mov
jmp
mov
mov
mov
cmpl
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
push
push
push
lea
mov
jmp
mov
push
call
mov
mov
mov
test
je
cmp
jne
mov
pop
pop
pop
pop
ret
nop
push
mov
add
push
push
push
mov
mov
mov
mov
push
call
mov
test
je
push
push
call
mov
cmpl
je
push
lea
push
mov
push
call
test
je
mov
push
lea
push
mov
push
call
jmp
mov
cmpb
jne
mov
cmpb
jne
mov
add
call
mov
mov
cmpb
je
mov
inc
call
mov
mov
cmpb
je
jmp
mov
add
mov
mov
sub
lea
push
mov
push
lea
push
call
jmp
mov
inc
call
mov
mov
sub
mov
add
inc
cmp
jg
inc
push
mov
push
lea
add
push
call
lea
push
lea
push
call
mov
cmp
je
push
call
lea
push
call
lea
add
inc
cmp
jg
movb
mov
sub
dec
push
lea
push
lea
add
inc
push
call
lea
push
call
inc
add
mov
mov
mov
cmpb
jne
mov
push
lea
push
mov
push
call
mov
pop
pop
pop
mov
pop
ret
add
imul
gs
xor
cs
insb
add
add
inc
gs
outsl
outsb
addr16
popa
je
dec
popa
insl
gs
add
add
push
mov
add
push
mov
push
lea
push
push
call
movb
lea
push
push
push
push
push
call
test
je
lea
push
push
push
push
push
call
test
je
lea
push
push
push
push
push
call
test
jne
xor
push
push
pushl
mov
movl
lea
mov
call
lea
push
lea
push
push
push
lea
push
mov
push
call
test
je
lea
push
lea
push
push
push
push
mov
push
call
test
je
movb
movb
xor
pop
pop
pop
mov
push
mov
push
call
ret
jmp
jmp
push
mov
push
lea
push
call
push
lea
push
push
call
push
call
xor
cmpb
je
cmpb
jne
cmpb
je
lea
push
call
lea
add
mov
jmp
decl
mov
cmpb
je
lea
cmp
jne
lea
cmp
je
incl
cmpb
je
mov
sub
mov
sub
push
lea
push
mov
push
call
push
push
lea
push
call
mov
test
jne
cmpb
je
lea
mov
sub
mov
sub
push
lea
push
mov
push
call
push
push
lea
push
call
mov
test
jne
movb
lea
mov
sub
mov
sub
push
lea
push
mov
push
call
push
push
lea
push
call
mov
mov
pop
mov
pop
ret
add
push
outsl
data16
popa
jb
pop
inc
outsl
jb
popa
outsb
fs
dec
outsl
arpl
gs
add
add
data16
popa
jb
pop
inc
outsl
jb
popa
outsb
fs
inc
gs
jo
imul
jae
add
add
push
mov
add
push
push
push
mov
mov
mov
cmpl
je
xor
push
push
pushl
mov
mov
mov
call
xor
pop
pop
pop
mov
jmp
jmp
call
mov
mov
mov
cmpl
jne
pop
pop
pop
pop
pop
pop
ret
mov
mov
mov
mov
ret
mov
push
mov
add
mov
xor
push
push
pushl
mov
mov
mov
call
xor
pop
pop
pop
mov
push
mov
cmp
jne
mov
mov
mov
jmp
mov
mov
cmpl
je
mov
mov
cmp
jne
mov
mov
mov
mov
jmp
mov
mov
mov
cmpl
jne
ret
jmp
jmp
pop
pop
pop
ret
mov
test
je
movl
push
push
mov
call
pop
ret
lea
test
je
push
push
mov
push
call
pop
mov
popl
test
jne
ret
mov
push
call
ret
mov
test
mov
je
mov
push
call
ret
push
push
add
push
mov
mov
test
je
cmpl
jge
push
lea
push
mov
push
mov
mov
call
push
call
mov
mov
mov
call
jmp
mov
mov
call
add
pop
pop
ret
nop
push
mov
add
push
xor
mov
xor
push
push
pushl
mov
push
lea
push
push
push
call
lea
lea
mov
call
mov
lea
call
mov
cmpl
je
xor
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
mov
pop
ret
push
mov
xor
push
push
pushl
mov
incl
jne
mov
call
mov
call
mov
call
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
nop
subl
jae
movb
movl
movl
movb
movl
call
test
je
call
call
movw
movw
movw
call
mov
call
mov
call
and
cmp
je
call
and
cmp
jbe
movl
jmp
call
call
mov
jmp
call
call
mov
call
mov
ret
nop
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
push
mov
push
push
call
mov
mov
pop
pop
ret
lea
mov
ret
mov
push
push
call
mov
test
je
cmpl
jne
mov
call
mov
call
mov
cmpl
jne
mov
call
jmp
mov
push
mov
push
call
pop
pop
ret
mov
mov
mov
test
jne
mov
mov
ret
call
mov
push
call
test
je
ret
mov
ret
push
call
test
je
ret
mov
call
ret
nop
push
mov
xor
mov
push
call
mov
mov
mov
xor
mov
xor
mov
call
mov
mov
call
pop
ret
lea
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
xchg
call
ret
nop
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
pusha
movb
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
movb
incl
add
inc
add
movb
incl
add
inc
add
inc
add
movb
incl
add
inc
add
movb
incl
add
inc
add
movb
incl
add
inc
add
movb
incl
add
inc
add
movb
incl
add
inc
add
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
adcb
adcb
xchg
push
inc
add
add
and
inc
add
inc
add
xor
and
inc
add
xor
sbb
inc
add
das
inc
add
das
inc
add
xor
push
add
add
add
add
add
inc
add
add
or
arpl
je
outsl
outsb
call
add
add
push
inc
add
add
add
inc
add
xor
and
inc
add
xor
sbb
inc
add
das
inc
add
jbe
add
xor
push
inc
dec
gs
jo
js
gs
imul
add
add
add
add
inc
add
xor
and
inc
add
xor
sbb
inc
add
das
inc
add
jbe
add
xor
or
dec
jne
dec
dec
gs
outsl
jb
lea
mov
add
add
add
add
inc
add
xor
and
inc
add
xor
sbb
inc
add
das
inc
add
das
inc
add
xor
or
outsb
dec
jne
inc
jb
outsl
jb
push
inc
add
push
inc
add
add
add
inc
add
xor
and
inc
add
xor
sbb
inc
add
das
inc
add
das
inc
add
xor
or
js
gs
popa
insb
mov
push
push
inc
add
inc
add
add
add
inc
add
xor
and
inc
add
xor
sbb
inc
add
das
inc
add
das
inc
add
xor
adc
js
gs
popa
insb
inc
js
gs
imul
add
add
add
inc
add
xor
and
inc
add
xor
sbb
inc
add
das
inc
add
das
inc
add
xor
or
outsb
je
jb
outsl
jb
rorb
inc
add
pop
inc
add
add
add
add
inc
add
xor
and
inc
add
xor
sbb
inc
add
das
inc
add
das
inc
add
xor
or
imul
outsl
nop
pusha
pop
inc
add
inc
add
add
add
add
inc
add
xor
and
inc
add
xor
sbb
inc
add
das
inc
add
das
inc
add
xor
or
popa
outsb
addr16
jb
outsl
jb
pop
inc
add
add
add
add
inc
add
xor
and
inc
add
xor
sbb
inc
add
das
inc
add
das
inc
add
xor
or
dec
outsb
je
jbe
jb
insb
outsl
ja
inc
add
inc
add
inc
add
add
add
inc
add
xor
and
inc
add
xor
sbb
inc
add
das
inc
add
das
inc
add
xor
or
popa
je
inc
jb
outsl
jb
insb
pop
inc
add
add
add
add
pop
inc
add
inc
add
xor
and
inc
add
xor
sbb
inc
add
das
inc
add
das
inc
add
xor
or
outsb
jbe
insb
imul
add
pop
inc
add
add
add
pop
inc
add
inc
add
xor
and
inc
add
xor
sbb
inc
add
das
inc
add
das
inc
add
xor
or
gs
inc
imul
inc
add
inc
add
add
add
pop
inc
add
inc
add
xor
and
inc
add
xor
sbb
inc
add
das
inc
add
das
inc
add
xor
or
jbe
jb
insb
outsl
ja
shlb
je
inc
add
add
add
pop
inc
add
inc
add
xor
and
inc
add
xor
sbb
inc
add
das
inc
add
das
inc
add
xor
or
outsb
fs
insb
outsl
ja
int3
pop
inc
add
pop
inc
add
add
add
inc
add
xor
and
inc
add
xor
sbb
inc
add
das
inc
add
jbe
add
xor
cmovne
jbe
insb
imul
jb
pop
inc
add
pop
inc
add
add
xor
inc
add
inc
add
xor
and
inc
add
xor
sbb
inc
add
das
inc
add
das
inc
add
xor
or
dec
outsb
jbe
insb
imul
add
add
test
add
add
xor
inc
add
inc
add
xor
and
inc
add
xor
sbb
inc
add
das
inc
add
das
inc
add
xor
or
jbe
jb
inc
jb
outsl
jb
shl
inc
add
pop
inc
add
add
add
inc
add
xor
and
inc
add
xor
sbb
inc
add
das
inc
add
das
inc
add
xor
adc
arpl
jae
push
imul
outsb
lea
inc
pop
inc
add
inc
add
add
add
inc
add
xor
and
inc
add
xor
sbb
inc
add
das
inc
add
das
inc
add
xor
or
jb
jbe
insb
gs
cwtl
pop
inc
add
add
add
inc
add
xor
and
inc
add
xor
sbb
inc
add
das
inc
add
das
inc
add
xor
push
inc
push
je
arpl
jbe
jb
insb
outsl
ja
hlt
pop
inc
add
pop
inc
add
add
add
inc
add
xor
and
inc
add
xor
sbb
inc
add
das
inc
add
das
inc
add
xor
or
outsl
outsb
je
outsl
insb
inc
mov
dec
pop
inc
add
add
add
xor
inc
add
inc
add
xor
and
inc
add
xor
sbb
inc
add
das
inc
add
das
inc
add
xor
or
imul
outsl
jb
shrb
add
test
inc
add
add
xor
inc
add
inc
add
xor
and
inc
add
xor
sbb
inc
add
das
inc
add
das
inc
add
xor
adc
jae
gs
imul
gs
or
add
pop
inc
add
add
xor
inc
add
inc
add
xor
and
inc
add
xor
sbb
inc
add
das
inc
add
das
inc
add
xor
push
inc
inc
bound
jb
arpl
jb
jb
fs
inc
add
add
add
xor
inc
add
inc
add
xor
and
inc
add
xor
sbb
inc
add
das
inc
add
das
inc
add
xor
push
inc
dec
outsb
je
inc
popa
jae
inc
jb
outsl
jb
rcrb
rcrb
or
add
xor
inc
add
inc
add
xor
and
inc
add
xor
sbb
inc
add
das
inc
add
das
inc
add
xor
adc
popa
data16
insb
inc
js
gs
imul
add
add
aaa
xor
add
add
inc
add
add
adc
inc
add
push
jns
push
je
insb
jae
sar
inc
add
add
cmp
add
add
inc
add
add
adc
inc
add
push
jns
push
je
insb
jae
sar
incl
add
add
add
push
push
push
mov
mov
mov
push
push
mov
mov
mov
call
call
pop
pop
pop
ret
mov
or
jne
or
jns
neg
call
mov
inc
dec
mov
ret
mov
push
push
xor
div
dec
add
cmp
jb
add
mov
or
jne
pop
pop
sub
sub
jbe
add
mov
sub
jmp
mov
dec
jne
mov
ret
or
jne
mov
testl
je
pushl
pushl
mov
negl
adcl
negl
call
movb
dec
inc
add
ret
push
sub
fnstcw
fnstcw
orw
fldcw
mov
fld1
testl
je
pushl
pushl
andl
push
push
fildll
fildll
fadd
faddp
add
jmp
fildll
filds
fld
dec
fprem
fistps
fdivr
mov
add
cmp
jb
add
mov
fld
fcom
fstsw
sahf
jae
fldcw
add
ffree
ffree
ffree
ffree
pop
sub
sub
jbe
sub
mov
add
jmp
mov
dec
jne
mov
ret
nop
push
push
mov
mov
call
cmpl
je
mov
pop
pop
ret
mov
incl
add
add
add
add
incl
add
add
push
push
push
mov
mov
mov
call
mov
mov
call
mov
test
jle
mov
test
je
mov
mov
call
test
je
mov
mov
call
cmp
jne
dec
dec
test
jg
mov
pop
pop
pop
pop
ret
nop
push
push
push
mov
mov
mov
mov
call
mov
push
lea
mov
mov
call
pop
pop
pop
ret
add
add
incl
add
add
add
in
add
push
mov
test
je
mov
jmp
xor
mov
lea
push
lea
push
lea
push
lea
push
mov
push
call
mov
mov
imull
xor
mov
mov
mov
xor
push
push
mov
mov
call
mov
mov
mov
mov
xor
push
push
mov
mov
call
mov
mov
mov
mov
pop
mov
pop
ret
mov
mov
mov
mov
xor
repnz
mov
sub
mov
ret
nop
push
mov
xchg
call
mov
pop
ret
nop
push
push
push
mov
mov
mov
xor
test
je
repnz
jne
inc
sub
mov
mov
mov
mov
shr
rep
mov
and
rep
stos
mov
pop
pop
pop
ret
lea
push
push
push
mov
mov
mov
xor
or
je
repnz
sub
mov
mov
xor
repz
je
mov
cmp
jb
cmp
ja
sub
mov
cmp
jb
cmp
ja
sub
sub
je
pop
pop
pop
ret
mov
push
mov
mov
jmp
test
jne
xor
mov
jmp
incl
mov
mov
cmp
jne
mov
pop
ret
nop
push
push
push
add
mov
mov
mov
cmp
jbe
mov
mov
dec
mov
call
cmp
jne
dec
mov
mov
mov
call
movb
mov
mov
movb
lea
mov
xor
call
add
pop
pop
pop
ret
push
mov
cmpl
je
mov
mov
call
pop
ret
mov
call
pop
ret
lea
push
mov
mov
call
pop
ret
push
mov
add
push
xor
mov
push
push
push
mov
mov
xor
mov
add
mov
xor
mov
mov
mov
or
je
cmp
je
lods
cmp
je
stos
dec
jne
mov
sub
jmp
cmp
je
lods
cmp
je
lea
mov
mov
cmp
jne
cmp
je
lods
call
cmp
jne
mov
cmp
je
lods
jmp
mov
mov
cmp
jne
cmp
je
lods
call
mov
mov
push
push
call
pop
mov
sub
jae
xor
cmpb
jne
sub
jae
add
xor
rep
xchg
sub
jae
add
xor
mov
rep
xchg
sub
jae
add
xor
rep
cmpl
je
push
lea
call
pop
pop
mov
jmp
xor
cmp
je
cmp
jb
cmp
ja
imul
sub
movzbl
add
cmp
je
lods
jmp
pop
jmp
mov
cmp
jg
incl
mov
cmpb
mov
je
xor
cmp
je
lods
ret
and
mov
mov
mov
cmp
jg
incl
mov
lea
mov
movzbl
jmp
fs
add
inc
add
fs
add
gs
add
gs
add
gs
add
inc
add
inc
add
inc
add
inc
add
inc
add
gs
add
gs
add
inc
add
inc
add
shr
add
add
fsubrs
rorl
std
decl
faddl
xor
mov
sub
je
mov
cmp
je
mov
cmp
je
jmp
lea
mov
mov
cmp
jbe
xor
sub
je
mov
cmp
je
mov
cmp
je
jmp
cmp
jne
mov
ret
cmp
jne
cmpw
jbe
mov
lea
call
mov
jmp
xor
ret
cmp
jne
mov
lods
movzbl
jmp
mov
jmp
mov
add
cmp
jne
mov
lea
push
mov
call
pop
mov
mov
jmp
cmp
jne
mov
or
je
mov
cmp
ja
ret
mov
ret
cmp
jne
mov
push
mov
xor
mov
jecxz
repnz
jne
dec
mov
sub
pop
ret
cmp
jne
mov
mov
lea
jmp
mov
jmp
mov
mov
mov
cmp
je
mov
cmp
je
mov
cmp
je
mov
cmp
je
cmp
jne
mov
mov
mov
cmp
jbe
mov
cmp
jne
movzbl
jmp
mov
mov
cmp
jbe
mov
push
push
push
lea
mov
movzbl
mov
call
mov
lea
ret
push
push
lea
mov
call
pop
pop
ret
call
pop
pop
pop
pop
mov
pop
ret
mov
push
mov
push
push
push
push
mov
mov
mov
test
je
test
je
mov
call
push
mov
push
mov
push
mov
mov
mov
call
movb
mov
jmp
xor
mov
mov
pop
pop
pop
pop
pop
ret
lea
push
mov
push
mov
xchg
xchg
call
pop
ret
nop
push
mov
add
push
add
push
push
push
mov
mov
mov
mov
mov
call
cmp
jge
mov
call
push
mov
push
mov
push
mov
lea
mov
call
mov
jmp
mov
call
mov
mov
mov
dec
cmp
jl
jmp
add
mov
call
mov
mov
call
mov
call
push
mov
push
mov
push
mov
mov
dec
mov
call
mov
mov
dec
cmp
jge
mov
mov
call
jmp
lea
mov
mov
call
pop
pop
pop
mov
pop
ret
lea
push
xor
stos
or
jne
xor
jmp
or
jge
mov
neg
jmp
or
je
mov
stos
xchg
push
mov
xor
divl
add
mov
inc
dec
or
jne
or
jg
dec
mov
stos
cmp
jne
pop
pop
ret
nop
push
mov
add
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
cmp
jne
mov
cmp
jge
mov
cmp
jle
mov
mov
push
mov
cmpb
jb
mov
push
lea
call
mov
movzwl
sub
cmp
jae
mov
call
lea
add
mov
rep
jmp
lea
movzbl
cmp
je
cmp
ja
movswl
cmp
jle
mov
lea
add
mov
add
call
mov
sub
pop
pop
pop
jmp
shrl
add
imul
into
imul
inc
dec
lods
or
jne
mov
dec
ret
cmpb
je
mov
stos
ret
call
movswl
xor
cmp
jg
cmp
jl
or
jg
mov
stos
cmpb
je
mov
stos
neg
mov
rep
jmp
mov
inc
lods
or
je
stos
loop
lods
or
je
mov
mov
stos
lods
or
je
stos
jmp
mov
rep
or
je
xor
jmp
ret
call
call
mov
stos
mov
dec
call
stos
loop
mov
mov
cmp
jbe
xor
mov
mov
movswl
dec
call
ret
call
mov
cmp
jb
mov
movswl
or
jg
mov
stos
jmp
xor
cmpb
je
mov
dec
mov
div
mov
inc
call
stos
dec
je
dec
jne
mov
test
je
stos
mov
jmp
or
je
mov
test
je
stos
jecxz
mov
stos
dec
je
inc
jne
call
stos
dec
jne
ret
xor
mov
mov
cmpb
je
mov
mov
cmp
jbe
mov
add
lea
add
mov
mov
cmp
je
push
push
cmp
je
cmp
je
stos
jmp
call
jmp
call
pop
pop
inc
loop
ret
push
mov
test
je
mov
rep
pop
ret
and
inc
inc
inc
sub
inc
inc
and
sub
sub
and
inc
sub
sub
and
inc
inc
and
sub
and
sub
and
inc
sub
sub
and
inc
inc
sub
sub
sub
and
inc
and
sub
sub
sub
and
sub
sub
and
mov
pop
ret
nop
push
mov
add
push
push
push
mov
mov
movl
cmp
je
call
jmp
call
jmp
mov
mov
and
je
cmp
jne
testw
je
cmpl
jne
cmpl
je
inc
xor
movb
jmp
fldt
sub
imul
sar
inc
mov
mov
sub
fabs
push
mov
call
pop
frndint
mov
fldt
fcomp
fstsw
fwait
testw
je
fidivl
incl
fbstp
lea
mov
fwait
mov
mov
shr
and
add
stos
dec
jne
xor
stos
mov
add
jns
xor
jmp
cmp
jb
mov
cmp
jae
cmpb
jb
movb
dec
js
incb
cmpb
ja
jmp
movw
incl
jmp
mov
movb
dec
js
cmpb
je
mov
mov
shr
mov
mov
ret
xor
jmp
or
add
add
add
add
add
daa
add
mov
mov
mov
or
je
or
jns
neg
neg
sbb
xor
mov
or
jge
xor
cmp
jl
mov
inc
sub
sbb
jae
dec
add
adc
mov
mov
fildll
mov
mov
sub
je
mov
fidivl
fbstp
lea
fwait
or
jne
mov
mov
mov
shr
jne
mov
and
jne
dec
jne
jmp
mov
add
stos
mov
mov
mov
shr
add
stos
mov
and
add
stos
dec
jne
mov
lea
sub
movb
dec
cmpb
je
mov
shr
jmp
xor
xor
mov
mov
mov
ret
pop
pop
pop
mov
pop
ret
push
mov
add
push
push
mov
mov
push
lea
push
push
push
call
test
jle
mov
dec
lea
mov
call
jmp
mov
mov
call
pop
pop
mov
pop
ret
mov
push
push
push
push
mov
mov
mov
push
lea
push
push
push
call
test
jle
mov
jmp
mov
pop
pop
pop
pop
ret
push
mov
push
push
push
push
mov
mov
mov
mov
push
mov
mov
xor
mov
call
cmpl
jne
mov
mov
mov
call
pop
pop
pop
pop
pop
ret
nop
push
mov
xor
push
push
push
push
push
push
push
push
push
xor
push
push
pushl
mov
call
mov
mov
mov
mov
push
push
lea
push
mov
mov
dec
lea
dec
call
pop
mov
mov
call
push
push
lea
push
mov
mov
dec
lea
dec
call
pop
mov
mov
call
inc
add
add
cmp
jne
mov
mov
mov
lea
mov
cltd
idiv
mov
push
push
lea
push
mov
mov
dec
mov
add
call
pop
mov
mov
call
push
push
lea
push
mov
mov
dec
mov
add
call
pop
mov
mov
call
inc
add
add
cmp
jne
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
lea
push
mov
push
push
xor
mov
jmp
cmp
je
inc
cmpl
jne
lea
mov
call
mov
mov
pop
pop
pop
ret
mov
push
mov
push
push
push
xor
push
push
pushl
mov
xor
mov
jmp
cmp
je
inc
cmpl
jne
lea
mov
call
mov
xor
call
mov
mov
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
pop
pop
pop
ret
lea
push
mov
push
push
xor
push
push
pushl
mov
lea
push
call
mov
mov
call
mov
mov
call
mov
mov
add
sub
jae
push
push
call
push
push
call
mov
mov
movl
add
dec
jne
push
push
call
push
push
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
pop
ret
add
incl
add
add
add
add
in
xor
push
push
push
push
push
push
push
push
mov
mov
xor
push
push
pushl
mov
mov
mov
call
lea
push
call
mov
mov
call
mov
mov
call
add
sub
jb
mov
sub
je
add
sub
jb
xor
jmp
mov
test
je
jmp
mov
sub
je
sub
je
lea
mov
call
mov
mov
call
inc
mov
call
cmp
jle
jmp
mov
mov
call
jmp
mov
and
bt
jae
mov
mov
call
mov
lea
push
mov
mov
mov
call
mov
mov
call
add
jmp
mov
lea
mov
call
test
jne
mov
mov
call
inc
jmp
mov
lea
mov
call
test
jne
mov
mov
call
add
jmp
mov
lea
mov
call
test
jne
mov
mov
call
inc
jmp
mov
sub
je
sub
jne
mov
mov
call
jmp
lea
mov
call
mov
mov
call
inc
mov
call
cmp
jle
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
incl
add
add
add
add
add
incl
add
add
add
jns
add
add
incl
add
gs
add
jns
add
incl
add
add
add
incl
add
add
add
test
je
sub
ret
mov
push
mov
add
push
push
push
mov
mov
mov
push
lea
push
push
call
cmpl
jne
push
lea
push
mov
push
call
test
jne
push
lea
push
mov
push
call
mov
call
mov
jmp
sub
mov
lea
mov
call
mov
inc
lea
mov
call
mov
mov
mov
mov
mov
mov
call
test
je
mov
call
mov
mov
call
test
je
mov
cmpb
je
mov
mov
push
lea
push
mov
mov
push
mov
call
push
call
lea
mov
call
lea
mov
movb
lea
mov
movb
mov
mov
movb
mov
mov
movb
mov
mov
movb
lea
push
push
lea
mov
mov
call
mov
call
pop
pop
pop
mov
pop
ret
add
add
add
add
ljmp
add
add
push
jmp
cmpb
je
mov
call
call
lea
push
lea
push
call
push
lea
push
lea
call
push
lea
push
push
call
push
call
push
lea
push
push
push
push
call
push
call
jmp
push
lea
push
mov
mov
push
mov
call
push
call
push
lea
push
lea
push
push
call
add
ret
add
add
incl
add
add
push
push
test
je
add
call
mov
mov
mov
lea
mov
call
mov
test
je
call
popl
add
mov
pop
pop
pop
ret
mov
push
mov
push
push
push
push
test
je
add
call
mov
mov
mov
xor
push
push
pushl
mov
lea
push
mov
mov
mov
call
mov
lea
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
test
je
call
popl
add
mov
pop
pop
pop
pop
pop
ret
push
push
push
test
je
add
call
mov
mov
mov
lea
mov
call
mov
test
je
call
popl
add
mov
pop
pop
pop
ret
mov
push
mov
push
push
push
push
push
test
je
add
call
mov
mov
mov
xor
push
push
pushl
mov
lea
push
lea
mov
call
mov
mov
mov
call
mov
lea
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
test
je
call
popl
add
mov
pop
pop
pop
pop
pop
pop
ret
nop
cmpb
je
call
ret
xor
add
or
jb
jb
arpl
add
add
add
add
inc
add
add
nop
push
push
add
xor
call
mov
jmp
inc
cmp
jg
cmp
jne
cmp
jg
mov
mov
mov
call
jmp
mov
movb
push
push
mov
mov
mov
call
mov
pop
pop
pop
pop
ret
mov
mov
inc
add
or
arpl
je
arpl
add
add
add
add
inc
add
add
push
mov
mov
dec
je
dec
je
dec
sub
jb
jmp
mov
jmp
mov
jmp
and
lea
mov
mov
mov
call
mov
jmp
call
mov
push
mov
jmp
pop
ret
mov
push
mov
add
push
push
push
xor
mov
mov
mov
mov
mov
xor
push
push
pushl
mov
test
je
lea
mov
call
jmp
lea
mov
call
mov
mov
movb
mov
movb
mov
movb
lea
push
push
lea
mov
call
mov
mov
mov
call
mov
xor
pop
pop
pop
mov
push
lea
call
lea
call
ret
jmp
jmp
mov
pop
pop
pop
mov
pop
ret
mov
mov
mov
jmp
ret
mov
push
mov
call
lea
add
mov
call
pop
ret
mov
mov
mov
mov
call
call
ret
mov
cmp
jg
je
cmp
jg
je
sub
je
sub
je
dec
je
jmp
add
sub
jb
je
jmp
cmp
jg
je
sub
je
dec
je
dec
je
jmp
sub
je
sub
je
jmp
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
nop
push
mov
mov
call
and
mov
pop
ret
push
mov
add
push
xor
mov
mov
mov
mov
mov
xor
push
push
pushl
mov
mov
mov
cmpl
jne
lea
mov
call
jmp
lea
mov
call
mov
mov
push
lea
push
mov
push
call
cmpl
jne
push
lea
push
mov
push
call
test
je
mov
mov
movb
lea
lea
mov
call
mov
lea
call
mov
mov
movb
mov
mov
movb
mov
mov
movb
lea
push
push
lea
mov
call
mov
mov
mov
call
mov
jmp
mov
mov
movb
mov
mov
movb
mov
mov
movb
lea
push
push
lea
mov
call
mov
mov
mov
call
mov
xor
pop
pop
pop
mov
push
lea
call
lea
mov
call
lea
call
ret
jmp
jmp
mov
pop
mov
pop
ret
lea
push
mov
add
push
xor
mov
mov
xor
push
push
pushl
mov
mov
call
and
mov
add
sub
jb
je
dec
sub
jae
lea
mov
mov
mov
call
mov
jmp
push
call
pop
mov
jmp
mov
mov
mov
movb
lea
push
push
lea
mov
call
mov
mov
mov
call
mov
mov
mov
call
test
je
mov
mov
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
mov
pop
ret
lea
call
mov
call
ret
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
movl
mov
movl
mov
mov
mov
mov
movl
mov
movl
mov
mov
mov
mov
mov
mov
ret
mov
cmpl
je
mov
movb
mov
mov
call
xor
mov
cmpl
je
mov
movb
mov
call
xor
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
ret
lea
add
movl
push
call
test
je
mov
mov
mov
mov
mov
mov
cmpl
jne
mov
and
mov
jmp
mov
mov
mov
lea
mov
call
add
ret
mov
push
push
mov
xor
test
je
cmpb
je
test
jne
mov
and
bt
jae
mov
jmp
mov
dec
jmp
dec
test
jl
mov
and
bt
jb
mov
sub
and
jns
dec
or
inc
test
jne
mov
jmp
mov
and
bt
jae
mov
mov
pop
pop
ret
lea
push
push
mov
mov
xor
cmpb
je
mov
call
mov
dec
call
pop
pop
ret
nop
xor
cmpb
je
call
mov
mov
ret
lea
push
mov
cmpb
je
push
call
sub
pop
ret
mov
pop
ret
lea
push
push
mov
mov
mov
cmpb
je
mov
and
bt
jae
mov
call
add
dec
call
pop
pop
ret
lea
push
push
add
mov
mov
mov
mov
mov
call
mov
mov
mov
test
je
cmpl
je
mov
mov
incl
mov
mov
call
mov
cmpl
jne
mov
pop
pop
pop
pop
ret
nop
push
push
push
push
mov
mov
mov
mov
mov
call
mov
cmpl
je
mov
sub
mov
call
sub
jb
je
jmp
incl
incl
mov
mov
call
mov
cmpl
jne
mov
pop
pop
pop
pop
ret
push
mov
add
push
xor
mov
xor
push
push
pushl
mov
push
lea
push
push
push
call
lea
lea
mov
call
mov
push
call
mov
pop
call
mov
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
mov
pop
ret
mov
push
mov
push
push
push
push
mov
add
push
mov
call
push
call
xor
jmp
mov
mov
sub
jb
inc
mov
mov
and
bts
incb
dec
jne
add
cmp
jge
mov
or
jne
pop
pop
pop
pop
pop
ret
mov
cmp
ja
bt
setb
ret
lea
push
mov
add
push
push
push
movl
movl
movl
call
test
je
mov
test
je
mov
and
movzwl
mov
movzwl
shr
mov
mov
mov
mov
rep
cmpl
jne
call
test
je
movb
movb
jmp
push
call
pop
mov
mov
mov
call
setne
mov
test
je
movb
jmp
mov
lea
mov
inc
inc
cmp
jne
lea
mov
lea
push
push
mov
push
push
mov
push
call
mov
lea
cmpw
sete
mov
test
jne
add
dec
jne
jmp
push
call
test
setne
mov
push
call
test
setne
mov
test
je
push
call
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
push
push
dec
jne
push
xor
push
push
pushl
mov
call
call
cmpb
je
call
call
mov
lea
push
xor
mov
mov
call
mov
mov
call
lea
push
mov
mov
mov
call
mov
xor
call
mov
lea
push
mov
mov
mov
call
mov
xor
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
lea
push
mov
mov
mov
call
mov
xor
call
mov
mov
mov
mov
call
mov
lea
push
mov
mov
mov
call
mov
lea
call
mov
mov
call
lea
push
mov
mov
mov
call
mov
lea
call
mov
mov
call
mov
mov
mov
call
mov
lea
push
mov
mov
mov
call
mov
mov
call
lea
push
mov
mov
mov
call
mov
mov
call
lea
call
lea
call
lea
push
mov
mov
mov
call
mov
xor
call
test
jne
lea
mov
call
jmp
lea
mov
call
lea
push
mov
mov
mov
call
mov
xor
call
test
jne
lea
push
mov
mov
mov
call
mov
xor
call
test
jne
lea
mov
call
jmp
lea
mov
call
pushl
pushl
push
pushl
mov
mov
call
pushl
pushl
push
pushl
mov
mov
call
mov
mov
mov
call
mov
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
mov
pop
ret
add
incl
add
add
add
add
incl
add
add
fs
jns
add
decl
add
insl
insl
insl
insl
and
jns
jns
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
inc
dec
push
dec
add
add
incl
dec
push
dec
and
add
incl
add
add
insl
insl
add
incl
add
add
insl
insl
cmp
add
push
push
push
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
call
cmpl
jne
pop
pop
pop
ret
nop
push
push
call
mov
test
je
push
push
call
mov
cmpl
jne
mov
mov
pop
ret
add
imul
gs
xor
cs
insb
add
add
inc
gs
imul
push
jo
arpl
js
add
or
inc
mov
sbb
mov
add
inc
add
inc
add
add
mov
add
add
inc
add
add
inc
add
add
add
add
inc
add
mov
add
add
mov
add
add
mov
add
inc
add
mov
add
inc
add
mov
add
mov
add
mov
add
inc
add
inc
add
inc
add
mov
add
inc
add
mov
add
mov
add
mov
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
add
inc
add
inc
add
inc
add
add
add
inc
add
add
add
mov
add
add
add
inc
add
add
add
mov
add
add
add
inc
add
add
add
mov
add
add
add
inc
add
add
add
mov
add
add
add
inc
add
add
add
mov
add
add
add
add
mov
add
add
add
inc
add
add
add
add
add
add
add
add
inc
add
inc
add
add
add
add
add
push
mov
add
add
add
add
mov
add
add
add
inc
add
inc
add
add
add
add
mov
add
add
add
inc
add
inc
add
add
add
add
mov
add
add
add
inc
add
mov
add
add
add
add
mov
add
add
add
inc
add
add
add
add
add
mov
add
add
add
inc
add
mov
add
add
add
inc
add
add
cmp
inc
add
add
add
inc
add
inc
add
add
add
mov
add
add
add
add
inc
add
mov
add
add
add
mov
add
add
add
inc
add
mov
add
add
add
mov
add
mov
add
add
add
inc
add
mov
add
add
add
mov
add
add
add
inc
add
mov
add
add
add
mov
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
add
in
xor
push
push
pushl
mov
incl
jne
mov
call
call
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
call
mov
mov
call
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
push
mov
xor
push
push
pushl
mov
subl
jae
mov
call
mov
call
cmpb
je
mov
mov
call
call
call
call
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
add
add
incl
add
add
js
add
push
inc
jns
gs
jb
popa
jns
add
add
add
add
add
add
adc
pop
imul
cmp
jae
mov
push
pop
inc
cmp
jb
ret
lea
push
push
push
push
add
mov
mov
movl
movl
mov
mov
mov
shrd
shr
and
xor
mov
mov
mov
shl
mov
shr
xor
xor
add
add
sub
subl
sbbl
mov
mov
and
xor
mov
mov
mov
shl
mov
shr
xor
xor
add
add
sub
dec
jne
pop
pop
pop
pop
pop
pop
ret
push
push
push
push
add
mov
mov
mov
mov
call
mov
cmp
jle
mov
xor
mov
xor
mov
xor
mov
xor
mov
mov
call
lea
mov
call
mov
mov
call
mov
test
jle
mov
dec
test
jns
add
sar
inc
mov
shl
mov
call
jmp
mov
xor
call
cmp
jl
xor
mov
xor
mov
mov
sub
inc
cmp
jle
mov
lea
mov
lea
mov
call
lea
lea
call
mov
call
lea
lea
mov
call
add
cmp
jge
add
pop
pop
pop
pop
ret
lea
push
mov
push
push
mov
mov
call
xor
push
push
pushl
mov
xor
mov
call
push
call
not
inc
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
pop
pop
ret
lea
push
mov
xor
push
push
push
push
push
push
push
xor
push
push
pushl
mov
xor
mov
call
test
je
lea
mov
mov
call
mov
call
mov
lea
call
mov
call
test
jne
lea
mov
mov
call
mov
call
mov
lea
call
mov
call
test
jne
lea
mov
mov
call
mov
call
mov
lea
call
mov
call
test
jne
mov
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
pop
mov
pop
ret
nop
push
push
call
ret
lea
push
movzwl
add
mov
mov
pop
ret
mov
push
mov
mov
mov
pop
ret
shr
mov
ret
nop
mov
xor
mov
call
ret
mov
mov
xor
mov
call
ret
mov
mov
xor
mov
call
ret
mov
push
mov
add
push
push
push
mov
mov
mov
call
xor
push
push
pushl
mov
call
call
call
movl
movw
push
push
push
push
push
push
push
push
call
push
mov
call
push
call
movl
push
mov
push
call
lea
push
push
lea
push
mov
add
push
mov
push
call
mov
mov
call
mov
mov
add
mov
push
push
mov
mov
push
mov
call
push
mov
push
call
mov
lea
push
mov
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
add
call
mov
mov
movzwl
dec
test
jb
inc
xor
lea
push
lea
mov
mov
push
mov
mov
add
push
mov
mov
add
push
mov
push
call
test
je
lea
push
mov
mov
call
push
mov
mov
push
mov
mov
add
push
mov
push
call
inc
dec
jne
lea
push
push
lea
push
mov
add
push
mov
push
call
mov
mov
add
mov
push
mov
push
call
cmp
sbb
inc
test
je
mov
push
call
jmp
push
mov
push
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
pop
pop
mov
pop
ret
nop
push
mov
add
mov
mov
mov
mov
push
mov
mov
mov
mov
inc
dec
jne
pop
mov
pop
ret
push
mov
push
push
mov
mov
call
xor
push
push
pushl
mov
mov
call
push
call
test
jne
cmp
jne
xor
jmp
mov
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
pop
pop
ret
nop
push
mov
add
nop
nop
nop
nop
sidtl
nop
nop
nop
mov
pop
pop
pop
ret
push
mov
add
push
push
push
xor
mov
mov
mov
mov
call
mov
call
xor
push
push
pushl
mov
push
push
mov
call
push
call
mov
mov
add
add
mov
add
mov
xor
mov
mov
add
mov
shl
add
mov
add
mov
lea
mov
call
mov
mov
call
jne
mov
mov
add
mov
add
add
movzwl
mov
mov
shl
mov
mov
mov
add
xor
push
push
mov
cltd
add
adc
add
add
mov
mov
jmp
inc
jmp
xor
pop
pop
pop
mov
push
lea
call
lea
mov
call
ret
jmp
jmp
mov
pop
pop
pop
mov
pop
ret
nop
push
push
push
push
push
mov
mov
mov
call
mov
push
push
mov
push
call
mov
test
je
push
mov
push
call
mov
push
mov
push
call
mov
push
call
mov
cmpl
je
push
call
mov
mov
call
mov
call
push
mov
call
mov
mov
pop
call
jmp
mov
call
inc
cmp
jne
pop
pop
pop
pop
pop
ret
nop
push
push
push
push
push
mov
mov
mov
push
push
mov
push
call
mov
test
je
push
mov
push
call
mov
push
mov
push
call
mov
push
call
mov
cmpl
je
push
call
jmp
inc
cmp
jne
mov
pop
pop
pop
pop
pop
ret
lea
push
mov
add
push
xor
mov
xor
push
push
pushl
mov
push
call
push
call
mov
push
call
mov
push
call
mov
lea
mov
call
lea
call
mov
mov
call
mov
push
call
call
mov
call
mov
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
mov
pop
ret
nop
push
mov
add
push
push
mov
mov
mov
call
xor
push
push
pushl
mov
push
call
mov
call
mov
add
inc
push
push
call
mov
mov
call
mov
mov
mov
call
push
push
call
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
pop
pop
pop
pop
ret
lea
push
mov
add
push
push
push
xor
mov
mov
mov
mov
mov
mov
call
xor
push
push
pushl
mov
mov
call
lea
mov
call
xor
xor
mov
mov
call
mov
test
jle
movl
lea
mov
mov
mov
call
mov
mov
call
mov
dec
test
jl
mov
shl
add
mov
add
cmp
jl
sub
mov
mov
shr
mov
mov
shl
push
mov
pop
mov
xor
div
mov
and
jns
dec
or
inc
lea
mov
call
mov
mov
call
mov
incl
dec
jne
xor
pop
pop
pop
mov
push
lea
mov
call
lea
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
incl
add
xor
xor
xor
ss
cmp
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
das
add
add
push
mov
add
push
push
push
xor
mov
mov
mov
mov
mov
mov
call
mov
call
xor
push
push
pushl
mov
mov
call
cmp
jle
push
lea
mov
mov
call
add
lea
call
mov
mov
mov
call
jmp
mov
call
push
lea
mov
mov
call
add
mov
call
push
lea
call
mov
mov
pop
call
xor
lea
mov
inc
add
cmp
jne
xor
xor
lea
mov
call
cltd
push
push
mov
xor
call
mov
movzbl
add
add
and
mov
mov
mov
mov
and
mov
inc
add
cmp
jne
xor
xor
mov
call
push
lea
mov
mov
call
add
mov
call
push
lea
call
mov
mov
pop
call
mov
call
dec
test
jb
inc
mov
xor
inc
and
add
and
mov
mov
mov
and
mov
mov
add
and
mov
mov
xor
inc
decl
jne
mov
call
mov
mov
call
mov
call
push
mov
call
mov
pop
call
xor
pop
pop
pop
mov
push
lea
mov
mov
call
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
nop
push
push
push
mov
xor
mov
xor
cmp
setl
mov
jge
neg
mov
div
add
push
inc
cmp
jne
dec
jne
push
inc
mov
inc
pop
mov
inc
dec
jne
pop
pop
pop
ret
nop
test
je
sub
mov
ret
lea
push
mov
add
push
push
xor
mov
mov
call
xor
push
push
pushl
mov
mov
call
mov
lea
call
mov
mov
mov
lea
call
mov
cmpl
jbe
mov
jmp
mov
lea
push
sub
push
lea
call
add
push
mov
mov
push
lea
call
push
push
call
lea
mov
call
mov
mov
call
xor
pop
pop
pop
mov
push
lea
call
lea
call
ret
jmp
jmp
pop
pop
mov
pop
ret
lea
push
mov
xor
push
push
pushl
mov
incl
jne
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
xor
push
push
pushl
mov
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
or
add
mov
inc
add
add
inc
add
dec
inc
add
dec
inc
add
inc
add
add
add
inc
add
mov
mov
inc
add
inc
add
xchg
inc
add
add
add
mov
mov
push
push
dec
jne
mov
call
xor
push
push
pushl
mov
call
mov
mov
call
mov
mov
call
lea
mov
call
mov
lea
mov
call
mov
mov
call
lea
mov
call
mov
lea
mov
call
mov
mov
call
lea
mov
call
mov
lea
mov
call
mov
mov
call
lea
mov
call
mov
lea
mov
call
mov
mov
call
lea
mov
call
mov
lea
mov
call
mov
mov
call
mov
mov
lea
mov
call
mov
lea
mov
call
mov
mov
call
mov
mov
lea
mov
call
mov
lea
mov
call
mov
mov
call
mov
mov
lea
mov
call
mov
lea
mov
call
mov
mov
call
mov
mov
lea
mov
call
mov
lea
mov
call
mov
mov
call
mov
mov
lea
mov
call
mov
lea
mov
call
mov
mov
call
mov
mov
lea
mov
call
mov
lea
mov
call
mov
mov
call
mov
mov
lea
mov
call
mov
lea
mov
call
mov
mov
call
mov
mov
lea
mov
call
mov
lea
mov
call
mov
mov
call
mov
mov
lea
mov
call
mov
lea
mov
call
mov
mov
call
mov
mov
lea
mov
call
mov
lea
mov
call
mov
mov
call
mov
mov
lea
mov
call
mov
lea
mov
call
mov
mov
call
mov
mov
lea
mov
call
mov
lea
mov
call
mov
mov
call
mov
mov
lea
mov
call
mov
lea
mov
call
mov
mov
call
mov
mov
lea
mov
call
mov
lea
mov
call
mov
mov
call
mov
mov
lea
mov
call
mov
lea
mov
call
mov
mov
call
mov
mov
lea
mov
call
mov
lea
mov
call
mov
mov
call
mov
mov
lea
mov
call
mov
lea
mov
call
mov
mov
call
mov
mov
lea
mov
call
mov
lea
mov
call
mov
mov
call
mov
mov
lea
mov
call
mov
lea
mov
call
mov
mov
call
mov
mov
lea
mov
call
mov
lea
mov
call
mov
mov
call
mov
mov
lea
mov
call
mov
lea
mov
call
mov
mov
call
mov
mov
lea
mov
call
mov
lea
mov
call
mov
mov
call
mov
mov
lea
mov
call
mov
lea
mov
call
mov
mov
call
mov
mov
lea
mov
call
mov
lea
mov
call
mov
mov
call
mov
mov
lea
mov
call
mov
lea
mov
call
mov
mov
call
mov
mov
lea
mov
call
mov
lea
mov
call
mov
mov
call
mov
mov
lea
mov
call
mov
lea
mov
call
mov
mov
call
mov
mov
lea
mov
call
mov
lea
mov
call
mov
mov
call
mov
mov
lea
mov
call
mov
lea
mov
call
mov
mov
call
mov
mov
lea
mov
call
mov
lea
mov
call
mov
mov
call
mov
mov
lea
mov
call
mov
lea
mov
call
mov
mov
call
mov
mov
lea
mov
call
mov
lea
mov
call
mov
mov
call
mov
mov
lea
mov
call
mov
lea
mov
call
mov
mov
call
mov
mov
lea
mov
call
mov
lea
mov
call
mov
mov
call
mov
mov
lea
mov
call
mov
lea
mov
call
mov
mov
call
mov
mov
lea
mov
call
mov
lea
mov
call
mov
mov
call
mov
mov
lea
mov
call
mov
lea
mov
call
mov
mov
call
mov
mov
lea
mov
call
mov
lea
mov
call
mov
mov
call
mov
mov
lea
mov
call
mov
lea
mov
call
mov
call
mov
mov
call
lea
mov
call
mov
lea
mov
call
mov
call
mov
mov
call
lea
mov
call
mov
lea
mov
call
mov
call
mov
mov
call
lea
mov
call
mov
lea
mov
call
mov
call
mov
mov
call
lea
mov
call
mov
lea
mov
call
mov
call
mov
mov
call
lea
mov
call
mov
lea
mov
call
mov
call
mov
mov
call
lea
mov
call
mov
lea
mov
call
mov
call
mov
mov
call
lea
mov
call
mov
lea
mov
call
mov
call
mov
mov
call
lea
mov
call
mov
lea
mov
call
mov
call
mov
mov
call
lea
mov
call
mov
lea
mov
call
mov
call
mov
mov
call
lea
mov
call
mov
lea
mov
call
mov
call
mov
mov
call
lea
mov
call
mov
lea
mov
call
mov
call
mov
mov
call
lea
mov
call
mov
lea
mov
call
mov
call
mov
mov
call
lea
mov
call
mov
lea
mov
call
mov
call
mov
mov
call
lea
mov
call
mov
lea
mov
call
mov
call
mov
mov
call
xor
mov
call
call
mov
lea
call
mov
mov
call
jne
call
test
jne
push
push
push
mov
mov
call
xor
mov
xor
mov
movl
mov
call
mov
mov
call
mov
cmpl
je
mov
mov
mov
call
cmpb
je
call
cmp
je
call
cmp
je
mov
mov
call
mov
mov
mov
call
xor
mov
xor
mov
lea
mov
call
lea
lea
call
mov
lea
mov
call
mov
call
lea
call
mov
mov
call
cmpl
je
mov
mov
call
incl
cmpl
jne
lea
mov
mov
call
mov
mov
call
cmpb
je
mov
push
lea
push
call
mov
mov
call
push
lea
mov
call
mov
mov
call
mov
sub
xor
mov
call
mov
call
call
mov
mov
call
mov
lea
push
mov
call
mov
mov
pop
call
lea
mov
mov
call
mov
mov
call
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
lea
mov
call
lea
mov
call
ret
jmp
jmp
call
add
decl
add
add
jae
ja
bound
add
add
decl
add
add
gs
data16
add
call
add
add
jb
ja
push
dec
inc
popa
arpl
outsb
inc
imul
decl
add
jo
outsb
dec
ja
js
push
dec
push
push
add
add
call
add
add
outsb
inc
jbe
inc
push
inc
popa
arpl
outsb
inc
imul
decl
add
add
push
jp
aaa
ss
outsb
das
push
dec
insl
add
lcall
add
add
push
jp
ja
sub
je
dec
push
fs
push
dec
das
dec
jo
outsb
das
push
dec
add
call
add
add
xor
dec
push
pop
dec
xor
je
dec
push
add
call
add
add
push
push
jne
xor
pop
dec
xor
je
add
add
call
add
add
push
push
js
xor
pop
dec
xor
je
add
add
call
add
add
push
jne
xor
pop
dec
xor
je
add
add
call
add
add
xor
dec
dec
outsb
js
dec
xor
xor
add
decl
add
add
push
jne
ja
push
insl
fs
dec
inc
push
add
call
add
add
xor
dec
push
dec
push
pop
dec
bound
call
add
add
xor
dec
push
dec
insb
xor
push
xor
add
lcall
add
add
dec
jns
push
popa
push
outsb
dec
dec
dec
push
je
dec
popa
fs
insl
push
add
call
add
add
jb
jne
inc
ss
pop
pop
dec
dec
xor
popa
aaa
dec
je
push
add
call
add
add
jb
jno
addr16
xor
push
xor
imul
inc
jae
add
call
add
add
jb
jno
addr16
xor
push
xor
imul
inc
jae
add
call
add
add
push
jbe
push
dec
dec
inc
fs
dec
xor
ss
call
add
add
jb
jns
sub
dec
inc
xor
add
add
call
add
add
jb
ja
imul
das
dec
push
insl
jo
push
xor
xor
push
add
decl
add
add
pop
push
ja
inc
ss
pop
pop
dec
dec
xor
call
add
jbe
jb
outsb
push
jae
push
xor
dec
jo
push
dec
fs
add
add
lcall
add
add
jb
jno
imul
dec
xor
push
dec
jae
ss
gs
lcall
add
add
jb
outsl
sub
push
xor
push
dec
push
imul
imul
add
decl
add
add
push
jbe
push
dec
dec
outsb
inc
push
dec
pop
jns
lcall
add
add
jb
insl
sub
push
xor
dec
inc
bound
pop
jo
outsl
outsb
jns
arpl
cmp
add
call
add
add
jb
jno
push
push
push
dec
insb
dec
dec
outsb
push
xor
add
add
decl
add
add
jb
outsl
push
inc
dec
push
jo
dec
dec
pop
jns
call
add
jns
jb
outsb
push
xor
xor
dec
push
xor
bound
add
add
call
add
add
jb
jb
push
xor
push
xor
decl
add
add
jb
outsb
push
ja
push
pop
js
dec
push
push
add
call
add
add
jb
outsl
push
inc
dec
push
jo
dec
dec
pop
insb
jne
push
add
call
add
add
jb
jb
push
dec
push
insl
inc
pop
dec
pop
inc
jb
arpl
xor
add
lcall
add
add
outsb
inc
insl
imul
pop
push
aaa
dec
dec
insb
jo
ss
outsl
ja
jp
xor
add
call
add
add
jb
outsb
push
ja
push
dec
fs
dec
push
jo
dec
jno
xor
add
call
add
add
pop
push
ja
ss
push
xor
xor
outsl
push
insl
add
call
add
add
dec
dec
jp
push
je
dec
inc
aaa
dec
dec
aaa
pop
push
dec
push
add
call
add
add
jb
outsb
push
ja
push
dec
fs
dec
push
jo
dec
jno
xor
add
decl
add
add
dec
dec
jbe
inc
dec
dec
dec
dec
dec
dec
xor
add
decl
add
add
dec
dec
jbe
inc
dec
dec
pop
inc
inc
dec
push
add
call
add
add
dec
dec
jbe
inc
dec
dec
xor
dec
xor
add
add
decl
add
add
dec
dec
jbe
inc
dec
dec
xor
dec
xor
lcall
add
add
jb
insl
inc
imul
push
push
dec
xor
jae
add
add
incl
add
add
add
incl
add
add
add
decl
add
add
push
push
jns
dec
dec
push
outsb
jne
decl
add
add
jne
dec
jbe
xor
pop
dec
dec
dec
insl
add
decl
add
add
pop
imul
add
call
add
add
ja
push
jp
imul
dec
push
dec
outsb
inc
imul
call
add
jns
push
push
jns
dec
dec
push
outsb
js
dec
dec
je
dec
bound
add
add
incl
add
add
add
lcall
add
add
jbe
jb
inc
push
js
pop
pop
push
dec
jae
ja
insb
outsl
xor
add
add
decl
add
add
xor
push
inc
popa
popa
add
decl
add
add
xor
inc
inc
outsb
js
dec
push
add
decl
add
add
push
inc
js
outsl
aaa
push
xor
incl
add
add
insl
add
incl
add
add
cmp
jae
jns
decl
add
add
push
jbe
imul
dec
dec
dec
outsb
.byte
add
add
add
or
add
add
test
add
add
add
cmp
add
mov
add
rolb
add
pop
add
orb
add
rolb
add
xor
add
test
add
enter
or
add
add
orb
add
sub
addb
add
add
add
add
add
add
add
fcoms
add
in
add
lock
adcb
add
add
add
or
add
or
add
add
fadds
sbbb
add
sub
orb
add
and
add
dec
adc
adcb
adcb
subb
andb
addb
add
add
add
add
add
add
adc
sbbb
add
xchg
or
add
loopne
add
clc
add
add
add
add
add
add
or
add
test
add
mov
add
mov
push
add
pop
push
add
jo
add
mov
add
mov
adc
cmpb
add
add
add
add
add
pop
add
add
adc
add
call
adc
add
sbb
add
xor
add
dec
pop
add
pusha
pop
add
add
add
add
add
or
add
cmpb
andb
adcb
add
jle
add
mov
add
lock
add
or
add
and
add
cmp
add
push
or
cmp
add
push
sldt
orb
cmp
add
cwtl
or
cmp
add
mov
add
enter
add
add
or
adc
add
clc
or
sub
add
hlt
adc
add
inc
or
orb
sbbb
sbbb
add
and
add
xor
add
cmp
add
dec
push
add
push
push
add
pusha
push
add
add
add
or
add
push
add
jbe
add
adcb
orb
orb
add
js
add
nop
or
xorb
add
rorb
or
add
push
add
add
add
or
push
add
in
push
add
clc
push
add
add
add
adc
add
sbb
add
sub
add
xor
add
inc
pop
add
dec
pop
add
pop
pop
add
fs
add
jo
add
add
add
add
add
jl
add
mov
add
add
add
add
pop
add
scas
pop
add
mov
or
add
add
rclb
add
add
add
add
add
fcoml
add
loopne
add
in
pop
add
add
add
add
pop
add
add
add
push
sbb
andb
sbbb
add
sbb
adcb
add
add
add
add
add
add
add
add
add
test
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
enter
add
add
add
add
add
add
fmuls
add
add
add
add
add
add
add
add
add
call
add
add
add
add
add
add
add
add
add
clc
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
dec
push
add
add
add
add
add
add
add
pop
push
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
js
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
cwtl
push
add
add
add
add
add
add
add
test
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
enter
add
add
add
add
add
add
fmuls
add
add
add
add
add
add
add
call
add
add
add
add
add
add
add
add
add
clc
push
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
dec
sldt
add
add
add
add
add
add
pop
sldt
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
js
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
cwtl
sldt
add
add
add
add
add
add
test
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
enter
add
add
add
add
add
add
fmuls
add
add
add
add
add
add
add
call
add
add
add
add
add
add
add
add
add
clc
sldt
add
add
add
add
add
add
or
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
dec
adc
add
add
add
add
add
add
pop
adc
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
js
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
cwtl
adc
add
add
add
add
add
add
test
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
enter
add
add
add
add
add
add
fcoms
add
add
add
add
add
add
add
call
add
add
add
add
add
add
add
add
add
clc
adc
add
add
add
add
add
add
or
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
dec
adc
add
add
add
add
add
add
pop
adc
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
js
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
cwtl
adc
add
add
add
add
add
add
test
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
enter
add
add
add
add
add
add
fcoms
add
add
add
add
add
add
add
call
add
add
add
add
add
add
add
add
add
clc
adc
add
add
add
add
add
add
or
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
dec
adc
add
add
add
add
add
add
pop
adc
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
js
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
cwtl
adc
add
add
add
add
add
add
test
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
enter
add
add
add
add
add
add
fcoms
add
add
add
add
add
add
add
call
add
add
add
add
add
add
add
add
add
clc
adc
add
add
add
add
add
add
or
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
dec
adc
add
add
add
add
add
add
pop
adc
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
js
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
cwtl
adc
add
add
add
add
add
add
test
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
enter
xor
add
mov
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
push
add
in
add
add
add
fmull
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
and
add
in
add
add
add
push
outsl
add
xchg
add
add
add
add
add
add
jae
add
add
add
add
add
add
sldt
in
add
add
add
orb
in
add
add
add
sub
add
faddl
add
in
add
add
add
or
add
in
add
add
add
lock
add
push
or
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
mov
add
or
add
add
add
add
add
add
in
add
add
add
insb
ret
add
push
or
add
add
add
rolb
add
add
in
add
add
add
enter
inc
add
add
add
add
add
add
fldl
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
stc
add
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
adc
add
add
add
add
add
add
add
add
jg
add
in
add
add
add
fcomps
add
jne
add
in
add
add
add
push
and
add
in
add
add
add
in
sub
add
push
add
in
add
add
add
fdivrl
add
les
add
in
add
add
add
mov
or
add
add
add
add
add
dec
add
xor
add
add
add
add
pop
add
sub
add
in
add
add
add
dec
add
fisttpll
add
in
add
add
add
sub
add
popf
add
add
add
add
add
add
jne
add
add
add
add
jo
add
inc
add
add
add
add
mov
add
cmpsl
or
add
add
add
add
add
add
add
add
add
add
add
add
add
lock
add
add
add
add
add
mov
add
add
add
add
add
add
add
lea
add
add
in
add
add
add
jo
add
jl
add
in
add
add
add
in
xchg
add
mov
add
add
add
add
add
in
add
add
add
xor
add
popa
add
add
add
add
add
add
push
add
in
add
add
add
dec
lods
add
aas
or
add
add
add
add
add
add
in
add
add
add
in
rolb
lar
add
add
add
add
add
ret
sti
add
add
add
add
clc
enter
or
add
add
add
add
add
rolb
add
add
in
add
add
add
inc
loope
add
add
add
add
add
loope
add
add
add
add
add
add
add
loop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
icebp
add
sbb
add
in
add
add
add
je
add
and
add
add
add
add
add
in
add
add
add
mov
add
cli
or
add
add
add
add
add
add
in
add
add
add
push
adc
add
add
add
add
add
push
add
int3
push
add
in
add
add
add
mov
add
add
add
add
add
add
daa
add
dec
add
add
add
add
add
add
add
add
in
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
sub
add
int
add
in
add
add
add
clc
inc
add
je
add
in
add
add
add
insb
dec
add
into
push
add
in
add
add
add
cmp
add
lea
add
add
add
add
add
add
cmp
add
in
add
add
add
or
add
sldt
in
add
add
add
sub
add
lock
add
add
add
add
add
add
out
add
in
add
add
add
add
add
xchg
add
in
add
add
add
mov
add
in
add
add
add
pushf
mov
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
xchg
add
imul
in
add
add
add
pop
lahf
add
fwait
or
add
add
add
add
add
stos
add
stos
push
add
in
add
add
add
mov
add
add
add
add
add
add
mov
add
add
in
add
add
add
add
add
in
add
add
add
lds
add
add
add
add
add
add
or
add
add
add
nop
fldl
add
add
add
add
add
add
mov
add
in
add
add
add
add
add
das
or
add
add
add
add
add
add
xor
add
add
add
add
add
add
xor
xor
add
add
xor
xor
add
dec
add
add
add
add
aaa
add
add
dec
add
add
add
dec
add
add
add
xor
xor
add
dec
add
add
add
xor
xor
add
add
xor
add
add
aaa
add
add
cmp
xor
add
add
cmp
cmp
add
add
xor
cmp
add
add
xor
xor
add
add
xor
add
add
cmp
add
add
cmp
cmp
add
inc
add
dec
add
add
add
xor
xor
add
add
xor
add
add
xor
add
add
add
add
add
aaa
add
add
add
aaa
add
add
add
cmp
xor
add
add
xor
xor
add
add
xor
xor
add
add
xor
add
add
xor
add
add
xor
aaa
add
add
xor
add
add
xor
add
add
xor
xor
add
add
xor
xor
add
add
xor
xor
add
add
xor
xor
add
add
xor
cmp
add
add
xor
xor
add
add
xor
add
add
aaa
add
add
add
aaa
add
add
add
aaa
add
add
add
xor
xor
add
add
xor
cmp
add
inc
add
dec
add
add
add
xor
xor
add
add
xor
cmp
add
add
xor
xor
add
add
xor
add
add
xor
cmp
add
add
xor
cmp
add
add
xor
add
add
add
add
add
aaa
add
add
inc
add
dec
add
add
add
xor
aaa
add
add
xor
cmp
add
add
xor
xor
add
add
xor
xor
add
add
xor
add
add
xor
add
add
add
add
add
add
add
add
aaa
add
add
add
cmp
xor
add
dec
add
add
add
xor
xor
add
add
xor
xor
add
dec
add
add
add
add
xor
xor
add
add
xor
aaa
add
add
xor
xor
add
add
add
add
dec
add
add
add
add
cmp
xor
add
add
cmp
add
add
cmp
aaa
add
add
cmp
xor
push
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
add
add
xor
add
add
xor
cmp
add
inc
add
dec
add
add
dec
add
add
add
add
add
add
add
add
add
xor
xor
add
add
cmp
xor
add
inc
add
dec
add
add
add
add
add
add
add
add
add
aaa
add
add
add
cmp
xor
add
test
jo
cwtl
dec
pop
iret
pop
stc
in
sub
adc
and
add
mov
dec
jne
jae
std
jp
jl
pop
jbe
sub
sub
fnstcw
dec
fs
cltd
xchg
sub
test
flds
adc
and
out
fwait
lahf
mov
inc
popa
sub
mov
fsubs
scas
or
adc
out
mov
mov
and
mov
xchg
pop
dec
out
pushf
pushf
shrl
fdivrs
addl
xor
movsb
xchg
bound
stc
cmp
mov
inc
or
cld
cmpsl
sub
pop
sub
cmp
out
icebp
mov
ja
lcall
xchg
loope
pop
rcr
mov
cmc
int3
pop
mov
xorl
jb
adc
push
mov
cmp
lahf
mov
sbb
das
sub
adcl
xchg
push
fimuls
popf
inc
pop
mov
sbb
ret
dec
jecxz
out
push
enter
pop
push
cmpsb
cmc
sbb
xchg
aas
and
popf
mov
ja
ds
mov
fildll
xchg
neg
in
add
sub
fisubl
cmp
mov
test
filds
jle
sub
inc
scas
cmpsl
aad
add
arpl
pop
jp
adc
aaa
cmpsl
nop
aad
arpl
movsl
test
adc
aad
push
shll
jge
leave
xor
sbb
mov
mov
adc
mov
cltd
xlat
fistpl
push
push
adc
lods
enter
sbb
cmp
mov
add
scas
fcomi
and
pop
rcl
jbe
add
rorb
and
xchg
addr16
fisttps
nop
dec
loop
push
repz
push
jge
sbb
ja
loopne
ss
cmpsl
mov
jp
bound
aaa
xchg
jb
ret
cmp
call
aam
andb
or
loope
cmp
add
inc
push
adc
mov
dec
and
mov
jp
push
pop
lods
push
int3
in
or
shll
movsb
mov
xchg
inc
and
out
or
leave
add
fidivrl
rolb
clc
cmp
call
push
add
cmp
or
mov
add
faddl
xchg
xor
ret
sbb
or
mov
mov
negb
in
xchg
adc
repnz
and
cmc
cmpsl
stc
xor
fs
pushf
cmpsl
arpl
mov
pop
stos
cmpb
xchg
lret
cltd
jp
adc
xor
adc
test
mov
sub
dec
pop
cmp
bound
dec
mov
add
or
adc
pop
out
lret
sub
das
mov
sahf
pop
adc
rolb
inc
scas
cs
push
ljmp
pusha
sub
adc
imul
stc
rcrb
fwait
iret
ja
xor
push
sbb
movl
les
mov
js
rolb
aam
adc
js
repz
mov
loope
cs
push
inc
mov
lahf
insb
shrl
cmp
outsl
jmp
out
repz
adc
dec
inc
dec
xlat
inc
addr16
or
std
inc
pop
subb
sbb
inc
push
int3
imul
inc
lret
lods
cwtl
movsl
cmp
mov
jo
sub
outsl
add
leave
lods
rep
adc
pop
mov
out
cmpsb
cmc
out
jg
or
ja
push
shll
int
loopne
jne
jg
push
pop
and
adc
xor
adc
test
mov
sub
dec
test
cmp
jnp
mov
or
daa
cwtl
gs
repz
subb
xchg
into
repz
loope
jb
mov
or
mov
and
icebp
pop
leave
sahf
pushf
lods
pop
sub
aad
icebp
dec
sarl
xchg
push
sbb
pop
nop
sub
push
ds
mov
cwtl
cmp
ljmp
rcrb
subb
jae
pop
arpl
out
add
jo
stos
ja
gs
push
and
xorl
or
or
loopne
nop
dec
pop
jmp
mov
fs
mov
lods
dec
sbb
sahf
or
enter
in
movsl
or
or
negb
jp
push
xor
mov
mov
ficoml
sysenter
mov
test
repnz
pop
cmpsl
cld
dec
add
mov
and
sbb
adc
inc
aad
pop
inc
mov
bound
mov
fwait
sbb
roll
sarl
out
mov
mov
push
mov
insb
data16
jp
cmpsl
or
addl
sub
push
and
dec
movsl
jne
mov
sbb
loopne
mov
fdivs
movsl
fldenv
jo
push
dec
adc
inc
xchg
insb
and
push
xchg
loope
test
leave
addl
or
cltd
or
jl
jmp
and
pushf
push
jecxz
inc
mov
nop
jb
and
jmp
and
dec
std
into
les
lods
fnstcw
lea
xchg
sti
stos
xchg
or
xor
cld
pushf
sarl
jno
negb
pop
mov
rcrb
adc
nop
adc
shlb
push
mov
xchg
jae
cmp
dec
mov
sbb
int3
call
mov
stos
rcll
or
into
sbb
les
popa
int3
data16
daa
or
lretw
aam
sub
sysexit
xorl
loopne
gs
jnp
fnstenv
leave
dec
jb
xchg
stc
xor
pop
jne
stc
adc
std
ret
js
sub
icebp
add
bound
int3
lods
push
add
sets
xlat
sub
je
pop
fdivs
mov
and
outsl
cld
cmp
xchg
rorb
mov
stc
cmpsl
cwtl
pop
cmpsl
lret
add
shlb
jb
test
sub
push
sub
fsubp
xor
push
jns
push
std
icebp
ljmp
sbb
xor
xor
pop
std
enter
push
stos
mov
insb
lret
out
xchg
in
out
sbb
push
sbb
and
ja
cmp
idivl
mov
adc
xor
adc
xchg
or
movb
stos
mov
dec
sti
mov
shlb
inc
push
push
mov
js,pt
aam
or
sub
adc
iret
jns
inc
data16
lods
scas
xchg
jle
sub
pop
cmpxchg
jbe
inc
cmpsl
inc
adc
add
and
divl
iret
jns
test
and
pop
fsubs
cmp
jb
push
add
mov
inc
pop
add
sbb
mov
repz
repz
aam
dec
pop
test
add
and
popa
aam
inc
rorl
jg
pop
lods
mov
cmp
mov
ja
push
in
cmp
js
shll
out
out
jg
adc
nop
push
stos
jecxz
or
mov
and
cli
mov
adc
sbb
jns
sub
into
push
xor
xchg
decb
sbb
lret
mov
sahf
pop
ja
pop
sub
jo
les
and
sub
jb
ljmp
cld
xchg
dec
jp
scas
sub
mov
testl
or
sarb
mov
mov
testl
imul
mov
leave
clc
shrb
pop
cwtl
lea
int3
push
push
push
call
in
out
sbb
gs
fiaddl
xor
loope
xchg
stc
xor
pop
jne
stc
and
cmp
lock
in
cltd
jge
das
pop
jg
dec
sub
es
aad
lcall
jl
jo
mov
push
lahf
xchg
pop
mov
inc
xchg
cmp
jno
cld
dec
negl
dec
adcb
sahf
lods
cmp
data16
lahf
aaa
fildl
jle
mov
icebp
pop
jne
stc
inc
mov
sbb
in
sub
shl
insl
inc
add
outsl
or
xor
sbb
outsb
push
lcall
jne
cmp
sbb
sbb
jl
outsl
pop
mov
mov
mov
xchg
add
cmp
xor
xchg
dec
jo
cmp
inc
mov
xchg
stc
xor
pop
jne
stc
pop
fildl
ss
xchg
jmp
ds
dec
adc
push
mov
aaa
or
shll
gs
and
sbb
scas
fimull
mov
test
inc
xchg
jp
cld
stos
xlat
sbbl
mov
mov
or
pop
and
cmpl
or
frstor
pop
cmp
inc
lret
movsl
add
dec
in
popf
daa
sbb
jmp
mov
add
jo
pop
cld
test
xchg
lahf
cmp
test
xlat
or
icebp
dec
lds
adc
jns
notb
jne
stc
push
in
std
fnstsw
jmp
fcomi
and
std
fwait
dec
test
repz
or
iret
and
push
in
push
jl
push
std
call
sub
data16
xlat
and
xchg
stc
xor
pop
jne
stc
sub
aas
sub
mov
fucomp
inc
cmc
inc
loope
xchg
std
mov
pop
fildll
or
aam
cmpsb
add
and
or
int
mov
out
inc
cmp
rolb
inc
das
out
ds
jmp
lods
hlt
xlat
xchg
jo
xchg
hlt
cmp
xchg
and
icebp
adc
or
rol
dec
repnz
lock
and
ds
je
mov
pmaddwd
mov
insl
adc
into
cs
dec
inc
xor
lock
jnp
sbb
scas
hlt
sbb
je
pop
and
sbb
and
popf
sub
addr16
out
fs
sbb
les
pop
push
gs
xor
repz
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
scas
and
or
jge
test
sar
rcrb
and
xchg
xor
sbb
notl
push
dec
xor
mov
and
int
cli
mov
jg
mov
ds
xorl
scas
js
js
push
pop
stos
xchg
adc
outsb
mov
and
nop
add
push
xchg
lods
clc
pop
mov
push
out
clc
mov
xor
lahf
jle
fucomi
fninit
out
pop
stos
test
sbb
jb
inc
out
sbb
adcb
sub
push
fnsave
addr16
jae
icebp
and
dec
push
xor
and
jb
mov
fs
xor
test
std
mov
pop
aaa
lods
fisttpl
aaa
pushf
sub
stos
jb
sahf
popa
js
inc
les
loopne
sub
sub
bound
adc
mov
out
ret
lods
xor
js
js
subb
xchg
loop
sub
jge
adc
mov
mov
jge
adc
mov
ret
push
adc
push
xor
xchg
mov
insb
pop
mov
inc
xchg
in
jns
dec
ret
test
lret
mov
or
rcrb
testl
cmpsb
popf
inc
adc
pop
and
stos
sub
dec
mov
in
or
jecxz
in
out
jg
fiadds
xchg
or
subb
stc
push
mov
cmpsl
push
loop
sbb
jle
es
mov
jns
inc
dec
das
xchg
test
mov
xor
push
movb
mov
stos
sbb
jbe
test
cmpsl
flds
bnd
stos
jo
inc
sbb
inc
xchg
mov
je
in
sub
fisttpl
js
dec
lret
inc
data16
push
test
pop
and
add
out
lock
or
dec
mov
lret
mov
enter
je
pushf
cltd
pop
stos
mov
mov
or
xor
lret
mov
nop
sbb
pop
loope
mov
dec
adcl
ja
pop
xchg
cwtl
dec
pop
add
mov
inc
sub
in
sub
mov
loope
mov
scas
inc
or
cli
outsl
add
aas
dec
hlt
mov
bnd
push
or
jg
ljmp
sub
test
sub
adc
jno
and
adc
dec
mov
repnz
or
mov
cwtl
mov
cmpl
sbb
jecxz
jge
inc
jno
push
inc
cld
sahf
and
xchg
loopne
mov
out
imul
loope
jecxz
push
jae
jnp
sub
stc
push
popf
rorl
pinsrw
xor
and
or
pusha
jp
icebp
and
inc
lods
mov
lds
sub
push
inc
jp
jb
in
dec
lret
mov
mov
push
inc
icebp
inc
test
dec
cmp
lahf
mov
sbb
mov
sbb
cmp
je
inc
in
push
mov
repz
and
test
push
jl
xchg
and
jnp
adc
nop
nop
sbb
jmp
pop
sub
push
xchg
xchg
and
jno
mov
js
push
inc
inc
mov
jns
adc
and
rorl
jle
jns
push
sarb
add
cmp
xor
or
xchg
add
fldt
stos
shrl
int3
call
fistps
xchg
xchg
push
pop
int
scas
inc
jbe
cwtl
les
stos
test
std
mov
and
mov
scas
add
add
lock
ds
sbb
pusha
ret
scas
jns
insl
rolb
sbb
adc
stc
mov
add
jmp
mov
push
and
xchg
ja
fists
cmp
adc
xor
xchg
cmp
loopne
dec
or
sub
cmp
push
out
xchg
cmp
leave
mov
fsubrs
out
rclb
cmp
iret
aas
mov
imulb
dec
iret
add
dec
repz
out
mov
test
imul
xor
mov
imul
sbb
or
inc
insb
pop
pop
call
fsubl
and
jp
testl
aad
stos
add
inc
fs
dec
cmp
dec
cmc
mov
and
in
add
push
aad
testl
push
add
add
adc
add
adc
lods
dec
rcrb
ljmp
lea
jecxz
sub
leave
or
and
in
mov
jne
xor
xchg
bound
or
sahf
cltd
jmp
icebp
xor
pop
mov
push
mov
jp
pop
jle
psrlq
mov
into
dec
jmp
and
sub
int
adc
jl
lock
jae
jae
cmpsl
fimuls
fadd
dec
mov
sub
aam
fsubr
negb
ret
jecxz
mov
xchg
push
cwtl
jne
aad
scas
mov
and
mov
xchg
inc
and
jno
fistpll
lods
xor
ljmp
add
fsubs
shlb
adc
add
adc
mov
sbb
int
dec
push
mov
mov
subl
sub
movsl
pop
mov
dec
inc
fld
mov
lret
jno
sub
and
stos
dec
inc
pop
lcall
js
sbbl
mov
push
repz
sbb
sbb
pusha
add
cmp
popf
cmp
ja
push
loopne
cmp
pop
shl
jmp
inc
dec
notb
jecxz
cld
jg
add
aad
add
sahf
imul
cmc
adc
cld
push
pusha
insb
cli
sub
stc
adc
fidivs
ds
loope
sbb
incb
mov
jl
dec
dec
lds
inc
out
xor
sub
jb
xor
cwtl
clc
inc
mov
mov
in
repnz
mov
fcomp
psubb
push
mov
mov
dec
movsl
adcb
repnz
lods
lret
cmpb
push
call
xor
cmc
mov
add
lahf
mov
inc
lahf
or
xchg
cs
push
test
mov
jecxz
adc
push
push
pushf
jnp
jb
or
aas
push
mov
jns
and
das
test
rcl
pop
push
mov
dec
fnsave
test
and
jo
or
lea
mov
in
inc
push
in
inc
mov
or
or
arpl
call
sub
outsb
sub
xchg
cmp
test
outsb
dec
pop
scas
imul
fwait
int
adc
in
int3
jl
or
int3
add
nop
outsb
cs
adc
add
mov
out
mov
popf
jo
in
dec
les
sub
cmp
fldcw
xchg
cmp
mov
cmpsl
test
push
lds
fsubl
xchg
adc
xchg
jg
stos
sbb
lock
jge
sub
and
pop
sar
cmp
mov
test
xor
pop
mov
sub
daa
jecxz
divl
int
inc
fnsave
push
pop
cmc
popf
and
and
sbb
xchg
pop
mov
mov
cpuid
and
fsubr
stc
mov
inc
mov
mov
push
pushf
jle
xor
dec
jo
push
mov
adc
mov
adc
or
dec
mov
lds
fstp
fcompl
enter
adc
inc
mov
xor
cmp
js
sub
sub
jne
inc
sahf
scas
stc
dec
popf
es
scas
cwtl
mov
pushf
adc
ret
inc
mov
xchg
push
dec
shrl
call
cmp
pop
cmp
mov
jno
bound
pop
enter
test
cli
aaa
sti
dec
enter
push
inc
bound
aam
pusha
ja
jmp
sbb
in
pop
cld
iret
pop
xorl
out
out
loope
jbe
jnp
xchg
mov
insb
pop
aaa
or
sbb
mov
lock
jl
lret
insl
jno
cltd
push
stos
pop
fstps
std
insl
roll
jne
dec
bound
fidivrl
adc
in
in
in
in
repnz
mov
mov
mov
mov
jae
repnz
fadd
inc
iret
mov
mov
mov
inc
jecxz
mov
bound
pushf
cmp
ds
outsb
mov
repz
lock
pop
lods
jbe
mov
xchg
add
push
imul
jecxz
aad
filds
mov
int3
loop
bound
pop
scas
aas
dec
or
push
push
sbb
jle
mov
adc
loopne
in
inc
int
scas
rclb
clc
mov
adc
sub
add
sub
in
arpl
int
push
nop
shlb
sti
lret
aad
and
jb
lret
xchg
lds
sti
xlat
jge
lret
and
add
cmp
int
inc
cmp
aad
xchg
cmpsb
mov
xchg
add
adcb
mov
lods
in
call
imul
insb
and
pusha
sbb
mov
pop
clc
mov
push
repz
movsl
cmp
cld
lods
scas
sbb
push
aaa
pop
push
jg
cs
shrl
cltd
add
jnp
stos
jo
and
and
test
jno
xchg
xchg
inc
in
jp
outsl
and
unpcklps
xchg
jae
pop
aaa
es
in
test
add
adc
pushl
lret
popa
mov
xchg
mov
jo
adc
mov
mov
fstps
mov
out
push
mov
sbb
lock
mov
cwtl
mov
loopne
lea
aaa
cmpb
xor
jno
in
push
out
pop
xor
xchg
call
les
test
xchg
movsb
inc
inc
inc
imul
dec
mov
adc
aam
cmp
xchg
imul
stc
xchg
and
mov
and
cmovno
pushf
js
aaa
push
jne
das
sub
cmp
iret
roll
cld
sbb
into
fdivrl
mov
sbb
lcall
pusha
mov
icebp
div
sub
and
data16
mov
sub
iret
shlb
mov
jecxz
hlt
sub
lods
mov
outsb
cmp
popf
rol
push
jbe
inc
out
push
sbb
test
fimull
mov
or
mov
sbb
adc
in
int3
mov
imul
stc
cld
add
insb
lret
loop
frstor
jne
lock
push
pushf
sub
lahf
and
xchg
fists
pop
mov
add
xchg
xchg
adc
jmp
adc
inc
int
loop
ret
insb
cmp
mov
adc
adc
aad
xchg
add
cmpb
sub
imul
scas
pop
repz
fs
mov
lds
mov
loopne
or
jne
xchg
cmp
sbb
in
mov
cmp
pushf
xor
cwtl
roll
clc
mov
cmpsl
and
mov
outsl
lcall
in
push
icebp
mov
out
mov
pop
subb
jb
popf
mov
ds
cmpsb
jecxz
popl
push
movsb
adc
jge
je
lea
fiadds
push
movsb
mov
adc
dec
or
adc
out
push
fnsave
repnz
cmp
cmp
shrb
cmc
adc
xor
jb
push
ds
pop
sarl
jne
nop
nop
leave
ret
je
daa
std
pop
inc
sbbl
dec
inc
mov
xlat
or
rclb
jo
and
aaa
mov
repnz
cmp
mov
xor
sahf
mov
sub
pop
push
mov
adc
insb
std
popa
inc
lock
mov
mov
addb
aam
out
movsb
test
jae
pop
xor
xor
sbb
rcrl
or
arpl
xor
and
test
leave
ja
pop
outsl
mov
jno
and
xchg
xlat
pop
pop
push
lcall
ljmp
movsl
pop
pop
xchg
adc
xchg
pushf
xchg
mov
mov
sub
test
call
je
jmp
adc
aaa
sar
jb
xchg
mov
or
dec
push
xchg
jne
es
xchg
mov
arpl
idivb
sbb
sbb
push
mov
xchg
dec
jg
cmp
xchg
loopne
mov
pop
pop
sbb
outsl
inc
es
lods
mov
sub
push
fmulp
test
sub
mov
pusha
mov
jno
cs
mov
shl
and
mov
cmp
call
movsl
shlb
jg
xchg
and
out
cmpsb
shrb
sbb
jo
dec
sbb
mov
mov
sbb
insb
mov
mov
mov
loop
mov
xchg
and
push
jecxz
cmpsb
mul
cs
lahf
xchg
sbb
jp
pop
inc
out
cs
stos
je
sub
fistpl
mov
push
mov
test
xchg
aaa
dec
in
ljmp
outsb
pop
jb
sbb
insl
pandn
leave
lret
leave
cmp
data16
out
cmpsl
xchg
dec
ja
fidivl
dec
out
imul
xor
stos
sbbl
pop
cwtl
xlat
mov
xchg
jg
mov
push
bound
stc
lret
divb
sahf
mov
sub
xor
jle
inc
inc
in
leave
push
mov
sbb
sahf
jb
jnp
aaa
and
or
add
jne,pt
cmp
pushf
repz
xor
or
jle
or
push
cmp
push
or
mov
sbb
and
xor
jmp
fsubrp
mov
pop
push
pop
mov
loopne
in
ja
jecxz
stc
enter
jge
into
ja
lahf
in
enter
add
aad
cmc
pop
int
sub
shll
or
outsb
fistl
addr16
xor
xor
clc
nop
sahf
xor
sbb
and
pop
popa
cmp
aad
subl
inc
shll
or
adc
dec
notb
in
mov
mov
fildl
lods
icebp
cmpsl
leave
and
fs
and
mov
mov
hlt
pushf
fiaddl
pop
push
aad
insl
mov
mov
mov
jmp
repnz
test
cmp
aam
xor
mov
push
es
cwtl
jbe
or
ljmp
xchg
sub
inc
pusha
icebp
adc
ds
shr
aam
inc
popaw
mov
adc
cmc
inc
fildll
adc
fadd
sub
mov
movsl
ja
out
sub
loope
lcall
sbb
inc
cmpsl
xchg
popf
int
enter
mov
pop
dec
ffreep
xor
shr
jnp
jp
sbbb
rcl
fisttpl
fcoms
sub
or
jne
push
mov
mov
jmp
imul
out
cmp
into
outsb
add
push
pop
rcll
push
mov
aam
repnz
or
cli
das
pop
sti
sar
pop
fs
shlb
fcmovbe
cmpsl
pop
lret
xchg
into
iret
mov
xchg
ds
pop
dec
jnp
xor
mov
push
jb
sbb
and
push
adc
push
bnd
xchg
pop
cmp
dec
fistpll
pop
jp
lods
movups
hlt
stos
xor
inc
cs
outsl
xchg
dec
div
test
mov
cmpl
mov
outsb
inc
xor
xchg
in
rolb
mov
jecxz
lcall
orl
stc
push
test
mov
pusha
repnz
mov
adc
adc
pop
fdivrs
sub
jmp
sbb
mov
jp
xchg
sub
mov
adc
fldl
rcl
sbb
das
mov
adc
push
xor
pop
cltd
mov
mov
xor
cwtl
aad
ja
jmp
add
jb
leave
aas
jmp
lahf
lret
je
cmc
push
ss
mov
fimull
xchg
and
rorb
inc
add
mov
or
fs
int
enter
mov
mov
push
in
adc
add
jge
mov
lcall
xchg
xchg
jmp
mov
mov
mov
jecxz
adc
add
push
data16
iret
mov
dec
push
lcall
dec
js
stc
add
sub
jo
inc
cltd
popa
bound
inc
in
push
push
arpl
loopne
inc
jnp
cli
pop
pushl
popa
xchg
stc
cmpsb
lods
add
jae
add
pop
cltd
push
mov
ret
and
pop
stos
xor
add
or
xorb
in
out
cltd
mov
shl
or
movsl
loop
xorb
push
pop
add
fldenv
outsb
cwtl
rolb
dec
scas
out
mov
ss
cmpsb
fsubrs
lea
mov
sub
sub
dec
mov
sbb
add
xor
inc
mov
mov
cld
lea
inc
sar
inc
and
sti
test
leave
add
jl
mov
stos
or
push
xorb
aas
and
and
xchg
shrb
mov
cmp
icebp
dec
stos
ds
sbb
mov
test
aam
add
mov
testb
push
pop
add
inc
jle
sub
mov
jno
xchg
je
add
ficompl
xchg
cld
xchg
dec
mov
mov
push
push
test
pop
push
ficompl
mov
mulb
addr16
inc
inc
adc
pop
push
arpl
inc
es
jns
pop
jmp
inc
ss
dec
jns
xor
js
ret
mov
mov
or
xchg
inc
vpmacsdd
das
lahf
jl
call
ljmp
dec
pop
pushf
push
std
ret
pop
hlt
or
jl
stc
or
add
fidivl
lods
or
adc
loopne
andb
cwtl
push
xor
fimuls
ss
orb
jb
movsl
cmp
dec
xor
cmp
sub
jae
pushf
mov
sub
mov
pop
test
and
outsl
fsubrs
in
add
test
xchg
cmpsl
jns
jne
adc
stos
mov
and
jnp
int
notl
mov
data16
mov
clc
aad
das
push
ss
fsubrl
cmc
cwtl
lret
add
mov
add
push
cmp
adc
sbb
cmp
jle,pt
cmp
jecxz
outsb
xchg
in
mov
push
scas
inc
mov
insb
movaps
fsubrs
push
cmc
jl
popa
jp
sbb
mov
shrb
or
in
or
imul
add
scas
or
sbbb
push
in
lcall
push
mov
out
sbb
pop
cld
or
pop
dec
jnp
les
mov
jl
stos
out
jge
xchg
rcll
jo
testl
shll
dec
xchg
pop
push
inc
jb
sub
push
sahf
lods
es
sahf
lods
push
sbb
insl
push
cmp
mov
add
into
cli
xchg
sbb
xchg
cmp
xor
icebp
pop
jne
stc
dec
out
out
cs
cs
movsl
loopne
sti
aaa
rol
lock
cmp
add
dec
inc
and
xor
adc
jnp
or
std
mov
in
add
aad
mov
insl
fs
arpl
xchg
scas
push
lea
push
movsb
test
or
xor
sub
hlt
push
aaa
lcall
add
sub
jnp
add
lock
add
xor
test
stc
shlb
xchg
in
mov
imulb
jnp
popf
int
jo
clc
imul
and
mov
out
and
hlt
jnp
and
mov
fiadds
fnsave
mov
mov
mov
mov
not
inc
fidivrs
or
pop
popf
xchg
mov
lods
xchg
push
mov
popa
sub
sbb
ret
xchg
movsb
xor
loop
cmp
imul
add
ss
mov
lock
mov
xor
adc
push
mov
or
in
jne
xchg
lods
nop
push
inc
in
ja
mov
xchg
scas
push
pushf
dec
and
sub
jae
fcompl
add
push
push
aam
ror
outsb
cmp
pop
stos
lods
fdivs
or
loop
sti
mov
loopne
sub
push
sub
out
mov
loope
in
fiaddl
add
outsb
nop
int3
jge
adc
ret
pop
js
push
mov
in
repnz
sub
imul
xor
aas
subl
jo
push
fildl
and
movsl
and
cmc
int
mov
pop
inc
pop
jl
mov
sti
int
xor
call
fidivrl
mov
imul
xor
ret
scas
bound
popf
ja
pushf
les
aad
pop
lahf
rolb
xor
mov
cmc
fst
stc
les
test
mov
pusha
pop
mov
xchg
push
dec
gs
or
std
ret
ljmp
xchg
xchg
cmp
xchg
sbb
or
push
lea
push
movsb
test
enter
rclb
fldcw
mov
orb
addr16
lret
into
std
bound
push
les
jb
mov
ret
mov
xlat
sub
in
repz
stc
xor
pop
jne
stc
lret
xchg
aaa
cmp
stos
movsl
loopne
sti
aaa
rol
lock
cmp
daa
movsl
cs
je
xorb
aam
mov
jnp
or
std
data16
jmp
dec
mov
into
xchg
and
es
mov
insl
fs
arpl
xchg
scas
push
lea
push
movsb
test
fidivs
lret
xor
imul
push
shl
xchg
and
cmpsl
mov
and
cwtl
sbb
leave
mov
shll
lret
push
pop
ss
pushf
fildl
std
cmp
mov
or
inc
mov
add
cmp
dec
add
int3
and
dec
sbb
or
lea
hlt
negl
inc
cmp
jnp
in
jbe
jo
jo
es
mov
xchg
pop
and
fwait
into
pop
cmp
cwtl
clc
or
or
inc
push
xchg
shll
mul
xor
call
sarl
insb
lcall
mov
cmpsl
mov
gs
dec
push
sarb
loopne
mov
cmp
jp
xlat
add
sub
popa
push
adc
imul
std
push
jmp
cs
int
roll
test
mov
sub
dec
popa
cmp
cmp
and
xchg
ds
jne
sbb
daa
cli
ds
cltd
jmp
add
hlt
pop
pusha
bound
adc
mov
test
arpl
orb
stc
sub
pop
ja
jne
inc
insb
sub
adc
jl
adc
mov
aaa
xor
es
mov
jmp
push
sub
push
cmp
out
mov
jp
push
imul
int3
test
sub
xor
jb
mov
mov
mov
shlb
test
sub
pusha
sbb
jo
mov
push
psubd
add
out
mov
int
out
into
add
sub
inc
dec
lret
and
mov
movsl
int3
aam
cmc
jnp
sti
in
push
add
sub
pop
or
movl
sub
aam
inc
movsl
inc
sbb
clc
imul
pop
ss
xchg
add
repnz
insb
lcall
cmc
inc
sub
xor
cmpl
xchg
lea
mov
movsl
int3
aam
cmc
jnp
sti
in
push
add
sub
ficoms
imul
ret
enter
xor
fstpl
inc
pop
pop
sahf
dec
mov
jp
rcll
pop
mov
dec
repz
scas
std
ret
imul
aaa
and
dec
dec
popf
int3
mov
inc
pop
jge
aam
inc
pop
cmpsb
fs
flds
gs
popl
test
ds
bound
mov
ljmp
add
sbb
mov
cld
test
rcrl
cwtl
cmp
orb
sub
inc
inc
cmp
stc
xor
pop
jne
stc
fwait
push
or
push
sub
icebp
inc
push
fwait
jecxz
lds
ljmp
adc
xchg
nop
orl
movsl
sarb
mov
dec
sbb
sahf
mov
jge
push
push
dec
fsubrs
hlt
xchg
push
push
and
das
push
jmp
fs
pop
jae
jp
testb
call
mov
insl
add
mov
mov
addr16
cmp
mov
xor
movswl
fimuls
push
scas
fs
pop
pop
pushf
mov
push
int3
test
xchg
jae
out
fwait
std
sub
pusha
mov
sbb
loop
aam
sbb
cld
inc
ret
mov
inc
loop
inc
mov
xchg
push
fistl
jmp
ja
push
pop
adc
adc
push
fldt
fmul
inc
jb
mov
movsb
push
sahf
mov
jecxz
push
jbe
mov
and
icebp
lds
mov
jl
jecxz
jecxz
pop
lods
xor
jnp
sbb
jmp
ss
popa
loop
push
or
loope
jno
xlat
ds
inc
repnz
lock
mov
xlat
add
std
adc
mov
mov
push
iret
push
add
mov
dec
fmul
dec
mov
xor
dec
mov
mov
gs
loopne
dec
jo
aaa
aas
sbbl
lret
sub
stos
lret
lahf
jge
loop
loop
cmc
popa
mov
or
jne
dec
sub
xor
pop
sbb
push
and
sbb
pop
movzbl
add
shl
dec
mov
mov
je
mov
or
mov
push
mov
leave
dec
in
test
loopne
jge
jecxz
mov
ret
jmp
jne,pn
and
out
imul
enter
ja
rorb
jge
cmp
sarb
inc
sbb
lods
in
js
sub
or
add
sbb
xor
sbb
push
and
in
loop
pop
push
dec
lods
arpl
repnz
mov
lahf
lock
push
jge
shr
push
int3
cmp
incl
ficomps
add
orb
scas
and
add
xor
cmp
xchg
push
cmc
ficomps
jmp
or
cmc
sub
inc
movsl
in
pop
popf
in
lahf
xchg
cmp
out
shrb
xor
cmp
out
lock
sbb
test
or
in
daa
aad
add
xor
insb
out
xchg
dec
fdivrl
test
mov
sub
loopne
adc
mov
add
inc
sbb
popa
pop
ror
lahf
cli
inc
loop
sti
sbb
jb
pushl
push
mov
xchg
sub
dec
push
pop
adc
jo
int
xor
call
aam
inc
inc
test
repz
je
lahf
pop
cmp
mov
gs
ljmp
in
in
sub
out
ljmp
lods
fistps
sub
inc
movsl
dec
mov
stos
jmp
movsl
sarb
pop
pop
in
jnp
outsl
incl
xor
outsb
sbb
sub
insb
rorl
insl
inc
xchg
inc
or
xchg
sbb
sbb
fldl
fldl
sahf
mov
sarb
mov
bound
popf
pusha
repz
cmp
and
mov
neg
clc
fadd
mov
cs
mov
ret
inc
sbb
mulb
popa
jle
mov
lods
or
mov
in
in
lods
cmp
add
add
or
fcoms
test
roll
mov
rolb
je
cs
adc
shlb
inc
sahf
push
int3
mov
call
gs
bound
dec
pop
xchg
lret
leave
addr16
sti
ficompl
cmp
and
mov
neg
clc
fadd
mov
cs
mov
ret
inc
sbb
mulb
popa
jle
mov
lods
or
mov
in
in
lods
cmp
add
cwtl
mov
mov
fcoms
test
roll
daa
sub
orb
andl
dec
jg
shlb
inc
adc
add
mov
out
bound
dec
pop
xchg
lret
leave
addr16
sti
ficompl
scas
mov
ja
mov
mov
mov
ror
jb
or
or
call
movsb
sbb
out
cmp
in
sbbl
mov
inc
js
mov
dec
pop
dec
xor
mov
or
cwtl
mov
dec
ret
mov
pop
aaa
mov
int
fs
mov
cmp
jne
aas
adc
mov
inc
popf
ret
stc
mov
or
cmpl
xlat
and
pop
enter
lods
jbe
push
jmp
dec
lret
out
leave
cmpsl
sbb
es
or
roll
adc
add
clc
nop
jge
inc
sbb
pushf
sub
sbb
sbb
insl
scas
mov
das
insl
ret
negl
or
or
stos
sub
dec
sahf
adc
dec
dec
pop
repz
arpl
mov
loope
lods
mov
movsl
xor
pop
mov
jns
cmp
push
iret
in
fidivrl
jnp
movsb
jo
xlat
and
sub
mov
iret
jecxz
mov
push
push
shl
mov
test
hlt
pop
jnp
fwait
inc
lods
addl
andb
std
mov
inc
inc
fstpl
mov
imul
enter
add
sub
mov
je
aas
ss
ds
inc
mov
add
movsl
inc
loop
punpcklwd
jmp
insl
imul
mov
js
decl
mov
jno
pop
jne
lods
add
dec
ljmp
mov
adc
dec
sbb
sbb
sub
xlat
aaa
pushf
add
js
frstor
mov
test
sbbl
push
jo
sti
pusha
subl
hlt
lret
into
adc
inc
or
popa
pop
xchg
rclb
stc
mull
mov
cltd
mov
insl
int3
add
mov
loop
icebp
xlat
repz
fst
sub
sub
jo
and
mov
notl
dec
cmp
clc
sub
mov
and
inc
adc
pop
or
fildll
mov
outsb
cmp
insl
pop
call
or
xor
jmp
or
sub
adc
inc
dec
lahf
push
mov
aam
mov
mov
jg
cwtl
jecxz
sbb
push
add
jb
jg
aad
iret
aas
mov
fidivl
sub
data16
mov
es
fnstenv
dec
repnz
shl
adcl
das
mov
mov
inc
test
push
pop
dec
lret
and
es
cltd
in
in
jp
mov
mov
repnz
inc
push
fdivrl
cmpsl
adc
xor
xlat
pop
jl
stos
adc
xor
xor
adc
mov
mov
fldt
push
sub
xchg
jns
push
or
jo
jno
and
and
jg
je
jo
clc
call
sub
push
popf
pop
cmpb
cmp
pop
pop
or
ror
jmp
cmpsl
push
pop
aad
inc
out
xchg
pop
or
xor
sbb
xchg
sahf
push
mov
mov
fnstenv
adc
rorb
pop
jg
movsb
inc
test
lcall
xchg
jp
sub
sub
arpl
sub
jl
add
pop
sbb
cmp
in
test
adc
pushf
and
jecxz
into
mov
lea
ret
push
fisttpl
in
js
lock
inc
inc
mov
push
push
inc
inc
push
dec
pop
mov
add
push
inc
jmp
pop
mov
in
push
les
push
jmp
popa
jae
mov
outsb
jns
hlt
movsb
xor
sub
mov
movsl
fbld
in
lock
cmp
push
ja
mov
jae
insb
push
adc
dec
mov
das
ds
jp
pop
dec
sub
cmp
pushf
xchg
lret
adc
xlat
dec
xchg
cmp
ja
mov
lods
sbb
lahf
push
nop
cmp
adcb
sbb
push
addr16
daa
bound
enter
dec
shlb
ret
int3
push
inc
sar
and
nop
adc
pop
mov
xchg
rclb
lea
test
mov
fisttpll
xchg
outsb
lret
xor
imul
int3
push
mov
out
jmp
xchg
test
inc
sti
in
sbb
ja
mov
outsb
seta
loopne
andl
std
jne
insb
dec
mov
pop
push
ljmp
and
mov
xor
sub
mov
jae
daa
in
icebp
xor
adc
mov
mov
pop
add
cld
push
fcomps
jo
jge
mov
popl
shll
jp
xchg
xor
and
rorb
xchg
push
lcall
or
ret
outsl
jns
mov
bound
outsl
notb
pusha
sti
es
mov
add
mov
adc
paddd
dec
xchg
xor
imul
in
sbb
popf
das
stc
mov
dec
pop
movsb
inc
sbb
into
lods
call
mov
jl
mov
sub
aad
lret
xlat
setne
test
mov
cmpsb
scas
mov
fwait
and
cmp
cmpsl
pop
insb
jb
pop
movsb
inc
push
jbe
es
cwtl
mov
mov
jle
aad
lea
test
stos
or
and
xchg
push
pop
dec
fs
xor
push
test
jbe
inc
outsb
push
enter
insb
jb
pop
movsb
inc
mov
adc
ja
pop
scas
fnstcw
aad
lea
test
outsl
mov
inc
stc
int
xchg
ja
sbb
movsb
iret
out
insb
xor
push
test
mov
add
cmpsl
pop
insb
jb
pop
movsb
inc
xorb
fldenv
rcrl
aad
add
aad
lea
test
pop
cmp
nop
fcoms
idivl
or
pop
xchg
xor
push
test
shrb
push
cmpsl
pop
insb
jb
pop
movsb
inc
in
dec
add
orb
inc
jle
aad
lea
test
rcll
xchg
xlat
push
sub
inc
div
pop
addb
mov
inc
pop
mov
cmpsl
pop
insb
jb
pop
movsb
inc
pop
mov
sub
adc
jecxz
inc
cwtl
inc
call
jl
mov
and
addr16
psrad
mov
gs
jno
icebp
pop
cmp
fdivl
cmpsb
scas
mov
jl
cmp
mov
stc
mov
pop
insb
jb
pop
movsb
inc
cmpsl
cmp
and
jmp
je
jl
mov
lds
test
add
clc
add
cmc
rcll
xchg
aas
xor
push
test
xor
push
cmpsl
pop
insb
jb
pop
movsb
inc
hlt
sti
mov
scas
insl
push
popa
loopne
rcr
jle
aad
lea
test
inc
xor
das
sbb
cwtl
dec
or
test
fdivs
cmpsb
scas
mov
mov
push
or
cmpsl
pop
insb
jb
pop
movsb
inc
add
arpl
inc
inc
and
jle
aad
lea
test
das
or
xor
outsl
pop
push
pop
mov
shl
xor
push
test
cmc
sub
cmpsl
pop
insb
jb
pop
movsb
inc
cmp
mov
mov
cmp
cmp
aad
lea
test
xchg
mov
jl
and
mov
out
fs
rorl
scas
mov
dec
outsb
test
dec
cmpsl
pop
insb
jb
pop
movsb
inc
int
push
jecxz
cmp
int3
mov
pop
in
jl
mov
loope
mov
inc
addr16
mov
repnz
mov
xchg
push
popa
xor
push
test
cmp
mov
mov
jo
sbb
inc
mov
test
xor
push
out
std
ja
std
jmp
sbb
hlt
mov
mov
jecxz
push
fwait
jnp
mov
loop
jecxz
fidivrs
add
mov
xchg
xor
and
rcrb
out
inc
enter
lgs
add
push
xor
outsl
pop
mov
mov
jmp
nop
xchg
inc
cmpsb
adc
movsb
fiadds
sbb
sti
and
mov
xor
and
shlb
add
jns
test
scas
nop
movl
inc
imul
int3
push
jmp
push
pop
icebp
icebp
add
sub
nop
xchg
inc
cmpsb
adc
dec
mov
xchg
fisttpll
add
insb
and
out
xchg
xor
and
rcrb
pop
icebp
push
cmp
and
mov
and
push
xchg
sti
imul
cld
xor
mov
dec
jl
pop
sub
nop
xchg
inc
cmpsb
adc
cmp
sbb
inc
scas
lret
sub
fwait
and
rolb
fstp
xchg
pop
or
or
imul
int3
push
push
pop
out
jno
fs
lahf
add
inc
mov
inc
cmpsb
adc
imul
cmp
dec
addr16
or
out
xchg
xor
and
rcrb
insl
testl
imul
int3
push
icebp
dec
xor
out
cmc
mov
inc
lock
jno
cmp
xlat
dec
sub
and
repnz
mov
fwait
and
rorb
les
adc
sarb
adc
push
addl
pop
gs
sub
inc
jg
sbb
push
je
fnsave
ss
mov
adc
mov
push
mov
mov
push
arpl
out
lock
insb
movsl
xor
loop
and
xor
push
call
je
pop
sahf
cli
xorl
mov
mov
rcl
cwtl
xlat
les
dec
xor
outsb
and
xchg
jmp
in
jb
and
mov
test
jb
xor
pushf
push
or
mov
push
sarb
insb
in
xchg
lea
xchg
stc
xor
pop
jne
stc
repz
cmp
and
jnp
clc
test
out
outsl
test
dec
sub
sub
mov
fdivrs
mov
cwtl
mov
jae
repnz
fdivrs
xlat
test
repnz
jmp
outsl
repz
insl
jmp
pop
or
fdivrs
vmovhps
ss
pop
notb
mov
fsts
test
push
loope
jg
dec
mov
arpl
movsb
hlt
inc
mov
mov
lret
js
and
ljmp
sti
lahf
not
and
and
test
mov
pop
mov
push
sbb
fisttps
js
lcall
dec
cltd
jg
pop
scas
mov
pop
jmp
jecxz
push
pusha
daa
xor
out
imul
sub
and
hlt
lret
or
xchg
loopne
data16
cmp
fwait
mov
inc
or
into
jb
xchg
shlb
xor
add
fs
add
fmul
push
mov
ret
outsb
add
xor
jns
push
jge
test
jle
and
sbb
push
and
mov
cs
mov
das
gs
mov
dec
dec
push
cmpsb
lcall
repz
pop
scas
cmp
ljmp
jno
fbld
and
and
mov
push
cmpsl
xchg
lods
popa
inc
and
aad
push
add
ret
lahf
cs
sahf
mov
mov
sbb
mov
and
test
mov
xor
mov
dec
or
ss
sub
pop
push
cmpsb
push
in
or
adcb
aad
cmpsb
imul
dec
mov
push
lcall
in
cmpsl
stos
and
int3
icebp
mov
xchg
xor
pop
out
outsl
adc
jae
sbb
jg
mov
imul
fwait
sbb
std
push
pop
stos
push
das
pop
cmp
xchg
mov
sahf
adc
push
or
mov
mov
popa
pop
cmc
pminsw
hlt
inc
clc
dec
cwtl
les
adc
xor
add
sbb
jg
or
test
ret
push
adc
push
ret
xchg
mov
insl
adc
popf
das
addr16
shlb
add
fnsave
fsubrs
cmp
mov
aas
test
das
push
in
iret
ffreep
aas
jmp
adc
pop
ljmp
push
dec
ds
jb
movb
mov
xchg
jnp
cld
adcb
jnp
jne
dec
inc
mov
outsb
pop
and
rorb
insb
mov
bound
mov
pop
push
pop
rcl
rdtsc
sahf
insb
xor
bound
bound
fidivrs
arpl
aam
int
cwtl
pop
add
xor
into
dec
push
in
fldl
sbb
std
or
cmp
inc
mov
outsb
push
dec
int
cmpsl
sbb
dec
and
mov
mov
psubusb
insb
jne
push
les
mov
dec
adc
pop
lcall
pop
out
push
lret
std
inc
mov
rolb
pop
andl
xor
push
rcrb
test
adc
add
mov
mov
sub
or
dec
fldl
cmp
push
sbb
cmpsl
inc
bound
or
jbe
mov
sti
inc
add
xor
das
jmp
inc
enter
js
in
inc
cmp
imul
rorl
aad
cs
lods
inc
fcoml
dec
in
call
pusha
into
dec
movsb
icebp
push
aaa
inc
jmp
inc
rcpps
xchg
pop
pop
cmp
dec
das
or
stos
sub
dec
mov
add
push
leave
imul
or
roll
pop
lods
xor
add
cli
and
pop
mov
ret
dec
in
sbb
sbb
sbb
unpcklps
cs
sbbb
and
cld
add
dec
xor
imul
test
stos
add
inc
mov
and
pop
mov
mov
out
xchg
mov
dec
lods
mov
jmp
inc
shrb
in
daa
push
xchg
xor
push
pop
iret
sub
dec
push
scas
cmpb
cmpsb
pop
inc
outsl
pop
jp
inc
add
xchg
aad
leave
inc
adc
push
fidivs
test
jbe
ret
call
inc
dec
imul
cwtl
sahf
pop
leave
ss
hlt
test
xor
sti
fwait
ret
and
mov
cmp
mov
adc
fmulp
sbb
add
loop
mov
add
lea
pop
mov
bnd
mov
outsb
stos
xchg
gs
stos
cld
sub
dec
aas
xchg
pop
sbb
fnstenv
jmp
sub
push
inc
inc
ret
call
pushf
insb
jl
and
je
outsl
mov
into
sub
xor
call
scas
movsb
bound
jns
aad
scas
xor
add
mov
bound
jge
lea
rolb
out
jne
aam
sbb
inc
adc
bnd
lret
adc
ficomps
out
push
cmp
and
or
fistpl
pop
loop
xchg
das
push
popa
jbe
mov
mov
push
and
push
push
add
shrb
mov
mov
mov
inc
fcompl
add
std
inc
jmp
xchg
mov
add
dec
xor
adc
push
int3
and
fidivs
testl
xor
inc
push
cmp
popa
xor
pusha
cmpsb
jae
pop
sub
iret
scas
add
pop
jl
shrb
mov
mov
push
aaa
faddl
adc
pop
rcll
repz
push
loop
sbb
push
cltd
out
jp
ljmp
sbb
add
mov
ficomps
enter
in
js
outsb
ret
ljmp
inc
pop
aad
cmpsb
xor
mov
cwtl
stos
loopne
xor
in
call
and
push
mov
push
inc
cs
int3
inc
stos
jnp
mov
xchg
mov
mov
sbb
es
add
call
inc
xchg
xor
jo
pop
pop
push
mov
les
cs
sarb
mov
push
add
and
fdivrs
mov
mov
mov
jl
xchg
in
pop
mov
out
daa
das
xor
int
push
je
pushf
ja
outsl
push
cmp
and
mov
or
notl
loope
fcoms
ja
jo
push
and
pop
pusha
or
es
sbb
sub
shrl
mov
cmp
pop
xchg
adc
sbb
adc
xchg
dec
xchg
js
jge
or
leave
xor
cs
dec
jbe
scas
dec
test
popa
sub
xchg
stos
pop
dec
test
mov
mov
add
bound
push
and
jle
lods
je
and
aaa
or
add
inc
rcrl
pop
push
shlb
popa
sbb
or
movsb
pop
jbe
popa
jle
inc
jle
fwait
sbb
sbb
jecxz
add
popf
cli
add
xchg
repz
push
in
loope
daa
dec
divb
and
addl
shll
lods
pusha
into
push
loope
sbb
mov
jbe
out
cmp
and
jge
sbb
imul
int3
push
fs
sub
jnp
inc
test
sti
movsb
push
xor
inc
aaa
imul
mov
movsl
call
push
adc
dec
xor
sub
adc
ljmp
xor
ljmp
into
je
push
shrl
push
scas
jb
pop
lock
popa
jbe
sub
subl
cmp
fs
orl
and
dec
aam
lret
cmpsb
or
shlb
xchg
sbb
mov
push
mov
dec
out
adc
test
pop
out
inc
fwait
ljmp
loopne
xor
stos
call
cmp
xor
test
inc
lods
test
mov
hlt
arpl
into
test
sbb
stos
out
fadds
addr16
lock
mov
add
fstpl
dec
inc
enter
jb
cld
ret
sub
sub
jl
cmp
adc
inc
xchg
push
inc
pop
xchg
fwait
repnz
movsb
loop
mov
mov
inc
mov
and
inc
mov
stos
mov
loop
jle
aad
lea
test
cs
aaa
and
add
fisttps
sbb
das
out
das
jl
stc
sub
and
sub
loope
xchg
jno
jo
lret
xor
inc
inc
jle
inc
jne
loopne
aam
lds
pushf
pop
xlat
sub
xchg
lock
dec
and
lods
mov
jne
fsubs
movsb
cld
jg
clc
aad
push
aam
es
mov
jae
push
pause
jns
jecxz
jecxz
mov
inc
xchg
and
test
mov
fs
out
repz
clc
jl
int
sbb
sbb
pop
push
mov
adc
cli
jp
scas
cmp
aad
pop
fsubl
orb
jne
popa
sub
rcl
test
in
lret
pop
addr16
cmp
mov
nop
xlat
dec
inc
cmp
cs
jnp
aaa
xchg
xchg
int3
ds
ljmp
jmp
std
inc
js
cmc
jno
push
das
in
push
push
iret
int3
jl
push
mov
lahf
insb
gs
mov
add
cwtl
pop
adc
out
in
mov
dec
adc
jb
pushf
mov
dec
cmp
jne
jp
mov
subl
inc
mov
inc
test
jp
inc
adc
lret
in
sub
sbb
cmpl
xchg
out
pop
inc
loopne
sahf
cmp
testl
pop
lds
pushl
xchg
push
sbbl
or
add
xchg
pushl
rcrl
xor
int3
xchg
pushf
mov
ja
lods
and
pop
lcall
sbbb
stos
fs
jo
outsb
push
pop
mov
outsb
dec
or
mov
mov
lea
dec
dec
add
mov
imul
lods
sahf
popa
mov
and
jns
jecxz
adc
push
jo
dec
add
test
pop
jo
jbe
in
xor
xor
loopne
fadds
dec
movd
or
jecxz
cmc
mov
fidivl
ljmp
or
jnp
adc
or
xchg
sub
cmp
aas
sub
jno
mov
cmc
nop
stos
add
out
ret
jne
loop
rorb
mov
pop
mov
dec
les
movsb
and
ret
pop
mov
dec
and
cmp
lods
mov
pop
sbb
inc
mov
mov
stc
frstor
sbbb
les
sbb
sbbl
adc
xor
xchg
ret
inc
cmp
jmp
frstor
xor
jnp
jno
cli
btr
or
sti
sahf
mov
xchg
clc
outsb
lock
mov
xor
adc
sub
cs
iret
xlat
inc
xchg
jnp
pushf
das
sbb
mov
sbb
insl
sub
xor
push
push
fsubs
jg
ja
pop
mov
jle
adc
fld
icebp
shr
sbb
test
shrl
sub
adc
jb
push
mov
or
push
popf
daa
pusha
es
rcll
jp
sti
and
clc
dec
adc
mov
lea
cli
sub
pushf
sarl
es
rcll
push
pop
ret
cmpsb
insl
or
shll
add
fidivrs
jg
lods
sub
ja
sub
sub
push
sub
and
inc
mov
mov
sbb
mov
das
push
sub
pop
loope
pop
outsb
mov
out
adc
or
pusha
mov
pop
fnsave
hlt
push
movsl
jo
daa
xchg
jecxz
fists
pop
movsl
jnp
cmp
xchg
loop
repnz
int
mov
pop
pop
js
leave
aas
fistpll
fistpll
ljmp
sbb
sbb
inc
es
jae
stos
push
pop
leave
mov
push
lock
mov
xor
shl
js
jo
jbe
arpl
mov
dec
nop
inc
jae
aam
ret
pop
fiadds
jo
mov
xchg
jl
ret
xchg
inc
and
jg
insb
adc
dec
inc
xorl
cmc
push
cmp
lcall
hlt
pop
ds
mov
mov
cwtl
mov
into
dec
adc
outsl
and
sbb
push
mov
imul
add
out
test
fistps
fs
add
sbb
fstps
cld
dec
sbb
cmp
sub
lahf
out
mov
mov
inc
xchg
sbb
pop
jb
outsl
aas
pusha
or
das
fstpl
push
sbb
xor
shrb
lods
cli
jae
js
in
sub
jp
out
loope
insl
sti
je
jecxz
mov
dec
sub
daa
out
sub
popf
icebp
add
nop
cs
or
jecxz
push
cmp
insl
ficoms
mov
sub
das
call
mov
loope
inc
mov
fsubr
in
aas
jnp
push
jbe
cmc
lds
sub
and
and
push
fwait
mov
ljmp
add
xor
fisubrl
les
pop
add
cli
ljmp
std
imul
scas
leave
mov
cli
sbb
sub
daa
xchg
sbb
dec
jbe
mov
add
repz
in
int3
dec
pop
sbb
lcall
xlat
rolb
lock
xor
fs
setnp
loope
inc
push
lods
adc
xchg
aaa
in
js
cmp
subl
rcrb
arpl
out
out
adc
test
push
inc
outsb
sbb
adc
jecxz
adc
adc
mov
fsubl
inc
lret
push
jbe
or
pusha
sub
int3
mov
pushl
or
sub
add
rorb
dec
jl
push
sbb
jecxz
mov
xchg
gs
jo
jl
shrl
sub
aad
fsubrl
ret
sbb
rcrl
jecxz
int3
dec
push
mov
leave
add
pusha
gs
test
je
adc
sbb
push
dec
adc
imul
faddl
out
int3
push
push
pushf
into
mov
sarl
pop
ljmp
sahf
lods
int
pop
sub
insl
jp
sub
lcall
xor
dec
insb
xchg
jbe
pop
cmpsb
pop
imul
sbb
mov
xlat
jmp
pop
sub
popa
inc
sbb
fcomps
movsb
push
mov
imul
aad
and
andl
jnp
dec
test
outsb
jno
xor
mov
mov
fsubl
and
push
loope
fcoml
xor
pop
push
loope
lds
adc
test
dec
pop
add
sbb
fistl
lods
movsb
or
push
mov
sbb
or
push
pop
mov
pop
sub
cli
and
push
aaa
inc
inc
les
fiaddl
xchg
test
pop
jbe
aad
repz
sbb
add
addl
dec
repnz
sub
movsl
sbb
test
sbb
sbb
sub
imul
pop
and
pop
add
cmp
icebp
lahf
imul
inc
arpl
pop
gs
lods
sbb
pop
pop
jno
fwait
cmp
sbb
cmovb
push
leave
ret
sub
adc
addr16
sbb
das
test
adc
clc
pop
mov
and
mov
insl
hlt
andb
aam
pop
or
nop
adc
jmp
dec
cmpsb
sbb
sahf
or
inc
fiaddl
cmp
jae
test
xchg
stc
xor
pop
jne
stc
push
or
pop
dec
sahf
ljmp
dec
dec
pushf
movl
cmc
mov
dec
inc
into
push
cld
cmpsl
mov
shll
xchg
scas
pop
out
idiv
jmp
ljmp
mov
jns
jl
loop
ljmp
enter
hlt
mov
or
and
outsl
outsb
jge
sbb
push
fcomps
imul
push
enter
mov
dec
inc
popf
mov
inc
rcr
mov
insl
mov
jo
insb
js
rorl
out
test
cmp
mov
adc
push
mov
jecxz
inc
outsl
jns
inc
outsl
out
push
jge
jmp
test
dec
pop
aas
sbb
dec
rol
sub
ffreep
adc
outsb
and
jno
daa
fs
add
roll
push
mov
mov
inc
push
dec
fcmovne
sub
add
ljmp
rcl
sub
adc
inc
and
test
xlat
pop
cmp
lret
adc
in
sbb
and
mov
push
or
ds
cli
push
inc
sbb
cmp
sbb
dec
jge
push
pop
test
fwait
movsb
nop
fimuls
in
cmpb
sahf
or
xor
mov
xor
shrl
sub
das
push
pop
lods
pop
and
daa
mov
leave
jne
clc
loop
and
push
inc
pushf
inc
mov
mov
add
pop
cmp
pop
or
mov
bound
push
lea
out
inc
sbb
dec
or
out
and
adc
mov
add
loope
arpl
test
mov
and
and
fcomps
ss
stos
imul
push
xor
jae
into
mov
testl
ret
xchg
xchg
ret
add
popa
adc
aam
arpl
pop
stos
inc
lret
or
cltd
fmul
pop
popf
mov
test
cmp
add
rol
mov
xor
bound
or
inc
jno
fcmovnb
scas
test
xchg
jo
fisttps
insl
inc
fnstenv
sbb
fldt
push
sbb
cmp
cmpl
dec
dec
push
das
lcall
or
aad
fldl
jns
jp
adc
xor
and
lahf
cmp
mov
pop
push
push
adc
pusha
fmuls
pop
pusha
aaa
cmp
lds
popa
out
cmp
enter
or
aad
les
das
daa
mov
cmp
rcrl
rorl
xchg
or
add
jno
jno
scas
iret
push
mov
xchg
jmp
mov
jo
out
out
push
lcall
dec
in
jne
push
push
jecxz
mov
xor
push
xor
adc
jne
std
lods
in
daa
movsl
das
into
and
mov
cmp
cld
cmp
int
clc
test
mov
push
loope
mov
sarb
jne
pushf
lahf
sbb
xchg
adc
scas
in
mov
add
scas
nop
and
xchg
inc
mov
or
stc
cmp
loop
sub
mov
inc
icebp
sahf
push
push
aam
shrl
mov
pop
push
and
test
jp
xor
xchg
adc
psubsw
sub
cmp
popa
push
mov
inc
sbb
mov
mov
dec
add
sub
std
pop
pop
ret
push
cs
or
push
push
pop
je
dec
imul
mov
xchg
es
orl
sti
dec
push
sar
subl
mov
xor
sub
mov
int
in
sbb
xchg
mov
nop
push
into
adc
das
jecxz
fadd
sub
jmp
cltd
dec
adc
call
test
hlt
mov
pop
fisubl
jge
xchg
loopne
outsb
rorl
mov
mov
and
shll
jno
mov
popa
into
outsl
outsb
pop
cmp
mov
mov
je
loop
bound
xorl
mov
and
push
rolb
fimuls
mov
shlb
imul
fadds
pop
or
xchg
fnstenvs
inc
sbb
inc
js
and
in
fwait
shlb
push
sarl
xlat
or
and
testb
xor
sub
mov
sbb
lret
mov
cs
push
mov
cwtl
imul
in
jecxz
pop
xor
sbb
aas
jne
jg
jne
cmpsb
inc
jg
mov
or
fldt
ss
and
enter
xchg
sub
jl,pn
push
xchg
out
and
push
jecxz
mov
push
cld
pop
sbb
lods
setb
sti
jae
pop
xor
mov
jne
scas
mov
dec
lods
cmpsb
lea
jmp
addl
push
icebp
fcom
mov
stos
fdivl
push
pop
push
inc
push
fistpll
dec
adc
jns
push
push
in
cmp
adc
jo
mulb
cmp
shl
adc
cs
jge
dec
jmp
int3
mov
mov
stos
sub
xlat
out
sub
xor
cmp
pushf
das
sub
insb
or
hlt
testb
mov
dec
add
xor
adc
pusha
sub
fisubl
imul
in
sub
ljmp
mov
aam
int3
push
mov
push
mov
sub
inc
mov
outsb
sahf
or
sti
or
or
mov
aaa
dec
scas
mov
out
imul
jl
pop
push
mov
mov
arpl
sub
sbbl
ss
jo
mov
mov
add
rolb
or
xor
pop
ret
lods
xchg
and
sbb
fistps
lods
xchg
leave
push
lcall
sub
adcb
mov
xor
push
lcall
gs
hlt
dec
out
add
jns
data16
inc
inc
fidivrl
mov
cmp
lcall
sub
sbb
out
dec
mov
or
pop
add
stc
mov
in
in
js
jg
gs
ljmp
cld
xchg
fiadds
adc
insl
xor
jae
lea
sub
mov
fsubrl
cltd
inc
lods
fwait
mov
jg
mov
lret
mov
fidivs
enter
rcrl
jmp
inc
in
mov
leave
push
or
lret
pop
cmpsl
test
jae
std
xor
fisttpll
jle
cmp
and
mov
cli
sub
adc
cltd
fsubs
xor
daa
or
cld
mov
xchg
xchg
shr
movsl
mov
cmp
mov
xlat
sub
fs
lcall
jbe
or
hlt
clc
mov
shrb
push
push
and
add
xchg
out
pop
cmp
addr16
mov
aam
push
inc
mov
fcmovne
push
insb
xor
jne
push
outsl
xchg
xchg
lods
cmp
push
loop
loopne
sbb
adc
fists
aam
push
jnp
jge
add
lcall
in
lock
or
mov
loope
jp
fisubs
insb
cltd
sarl
or
clc
add
subb
enter
fwait
mov
add
imul
xchg
in
ror
push
insl
cli
xor
cmc
add
loop
in
jo
test
adc
jmp
adc
in
pop
loopne
leave
sahf
add
mov
testb
inc
xchg
jg
sub
xor
fstpl
sub
xchg
xchg
mov
out
dec
cmp
xchg
cmpsb
movsb
mov
scas
push
or
loopne
arpl
addb
icebp
mov
shll
lods
sbb
mov
push
sbb
dec
cltd
fimuls
into
sub
int3
and
jp
and
lcall
es
mov
jl
sbbb
and
movsb
xor
cmpsb
fmul
ja
mov
pop
xor
pop
aad
mov
jg
iret
fcomps
test
sbb
gs
cltd
out
mov
outsl
lahf
cmpsb
cmp
dec
ret
not
cmpsb
pop
mov
repz
cmc
sbb
fldl
out
rcll
ret
mov
dec
sbb
loope
mov
cmp
jbe
add
xor
scas
mov
cmc
inc
in
push
pushf
jecxz
adc
sti
pop
mov
and
inc
push
pop
jle
idivl
jbe
pop
mov
add
outsb
adc
outsl
adc
shrl
cs
sub
fwait
jg
mov
aad
shrl
ret
mov
fwait
xchg
dec
dec
sub
icebp
pop
and
stos
fsubr
push
jno
sti
adcl
idivb
or
cwtl
testb
repnz
and
mov
mov
fistps
jmp
loopne
into
adc
and
test
push
orb
fistps
test
push
pop
mov
repnz
popa
ljmp
cld
mov
out
mov
lods
sbb
mov
push
pop
xchg
and
int
cli
xchg
fmulp
idivb
adc
adc
fnsave
inc
adc
sbb
rcll
add
loop
jne
fptan
pop
mov
loope
int3
into
popa
adc
adc
mov
xchg
push
xor
xchg
jnp
or
mov
add
dec
bound
xor
jnp
je
std
ret
aaa
mov
or
outsl
push
mov
push
ds
mov
fdivl
rclb
lahf
jl
push
or
mov
and
lcall
cmp
stos
xor
cmp
sub
out
adc
scas
and
push
imul
fcoms
mov
std
cmp
dec
sub
push
subb
loope
inc
push
jl
ret
pop
adc
stos
je
mov
or
sub
and
insl
xchg
dec
popl
mov
hlt
inc
ljmp
int3
mov
xchg
repnz
aas
mov
cmp
or
sub
imul
add
scas
mov
fcoml
cltd
jae
mov
aaa
adc
mov
jnp
sub
cmpsl
cmc
inc
loop
cmp
aas
test
mov
adcb
and
jle
jecxz
aad
int
push
rolb
lock
or
stos
jmp
sbb
daa
test
adc
mov
sub
outsb
push
mov
inc
popf
push
adc
lret
icebp
out
mov
pop
imulb
icebp
mov
jns
cmp
and
cmp
mov
daa
sbb
fsin
shrl
ss
mov
decl
mov
mull
sbb
std
in
testb
or
xchg
ja
loope
inc
lahf
popf
in
push
lret
pop
div
pop
lret
fnstenv
jge
push
ret
rcrl
sbb
pop
add
imul
repnz
pushf
loope
in
out
push
adc
aas
pop
jmp
es
lods
push
push
mov
cs
fcmovnbe
pop
pop
call
movntq
and
xor
cmp
sub
ficoml
enter
das
in
pop
test
mov
adc
out
or
mov
imull
movsb
sub
xchg
ret
stos
popf
outsb
adc
bound
mov
fcomip
push
cmc
add
sub
enter
ret
jle
in
mov
gs
mov
adc
lock
add
in
lahf
jnp
clc
jmp
dec
mov
int
repz
insb
imul
fstl
lods
adc
mov
dec
xor
xor
cmpsl
cltd
xlat
sub
popa
pop
fcmovnbe
das
notrack
or
mov
insl
add
mov
stos
cltd
pop
call
negb
ss
xor
push
sti
ret
sysexit
stos
int
mov
lret
inc
dec
cmp
xorl
sub
xor
cltd
movsb
outsl
push
pushf
stos
cltd
pop
mov
stc
loop
test
and
inc
pop
je
dec
fldl
fwait
mov
sahf
mov
lret
pop
and
pop
dec
out
in
fidivs
push
push
orl
shrb
sbb
push
pop
int
lahf
sbb
jmp
jne
shrb
push
sub
les
and
das
adcl
sti
lahf
inc
popa
mov
adc
and
lods
sbb
add
hlt
pop
pusha
push
out
js
out
sbb
sub
mov
mov
push
push
adc
jmp
loop
sahf
push
data16
dec
in
push
jp
mov
test
scas
xchg
jmp
test
or
mov
lea
cwtl
fwait
cltd
rclb
arpl
cmp
jp
pop
xor
sub
push
fistpl
cs
dec
jg
lods
xchg
push
push
mov
add
cmp
inc
fsubrs
sysret
pop
and
sub
aam
push
loope
das
shll
xchg
insl
pop
mov
pop
outsl
adc
pop
lea
push
xchg
mov
xor
test
add
sbb
cmp
mov
scas
add
test
lcall
je
inc
mov
insl
out
test
pop
push
xor
pop
mov
adc
fucom
adc
jae
test
lds
enter
lret
lds
es
pop
pop
push
aam
push
movsb
mov
xchg
push
sahf
inc
fcompl
mov
out
xor
sarb
mov
add
in
jnp
jbe
mov
icebp
mov
xlat
jbe
adc
pushf
loope
in
out
push
subl
js
out
or
inc
dec
jle
sbb
ja
cmpsb
mov
pop
dec
stos
mov
sub
mov
fdivrl
in
and
pop
mov
and
inc
lods
lea
mov
xchg
and
arpl
sub
mov
sbb
lea
cwtl
push
subl
push
dec
movd
loopne
sub
movsl
arpl
nop
jmp
add
and
push
scas
pop
push
lret
int
aam
xor
sbb
dec
jb
mov
xchg
push
dec
arpl
je
jecxz
mov
jno
in
and
aam
call
lock
push
orl
fwait
mov
mov
subb
repnz
jl
fldt
jmp
scas
out
imul
insb
imul
fdivrp
mov
xchg
xchg
ja
and
in
dec
pop
stc
inc
xchg
psubb
pop
or
in
stos
inc
jo
sbb
jmp
stc
mov
fwait
sub
jbe,pn
inc
lds
cmpsb
imul
mov
add
mov
add
push
out
nop
push
cli
jb
fadds
popf
out
adc
and
mov
ds
mov
test
push
or
test
mov
and
jno
and
sub
pop
mov
sbb
push
sahf
xchg
out
ds
into
aaa
dec
jns
test
mov
mov
lea
inc
negb
cmp
mov
xor
add
dec
fmul
cmpsb
lret
fdiv
cmp
or
and
lods
fistl
inc
es
dec
dec
int3
into
out
sub
imul
push
push
mov
fnstsw
mov
testl
bnd
add
jne
imul
out
or
aaa
sar
jns
xor
adc
popa
push
or
outsb
test
pop
cmp
call
das
jmp
inc
rcr
mov
imul
aad
cltd
ja
push
mov
sbb
xor
jge
xchg
xor
ss
xor
test
inc
mov
mov
pop
rcl
xchg
inc
into
and
repnz
cwtl
cmpsb
cmp
adc
cmp
or
outsb
std
cmpsl
lcall
ds
pusha
push
xlat
lods
and
mov
mov
int3
xchg
ja
movsb
mov
jbe
cmp
cmpsl
xchg
sbb
iret
ss
jno
xchg
faddl
sub
outsl
dec
lods
stos
in
rep
jns
push
and
dec
jg
andl
push
shr
in
push
push
filds
dec
jno,pn
pop
ja
ret
sub
je
in
mov
out
cmp
mov
fwait
imul
mov
cmp
data16
sbbl
dec
je
int
adc
sbb
push
mov
and
or
xchg
mov
and
pop
fcom
pusha
and
mov
imul
negl
cmp
cmp
jecxz
ret
icebp
mov
lock
sub
int
aaa
sub
outsb
aad
aad
mov
cmp
mov
jae
add
mov
cmp
inc
mov
pop
test
mov
sub
test
sub
scas
movsl
add
aam
xchg
push
inc
add
dec
daa
mov
ja
idivb
aas
lods
inc
inc
dec
fldcw
sub
movsb
adc
mov
repz
ds
mov
das
xchg
lahf
aaa
repnz
add
or
xchg
mov
cs
pop
cld
xchg
mov
sbb
ljmp
add
pop
repz
and
fidivs
or
jae
xchg
or
xchg
jmp
and
ljmp
in
fiadds
pop
sarb
orl
inc
xchg
mov
out
xor
pop
fists
dec
xchg
int3
adc
stos
enter
aad
lahf
shlb
aaa
fcomip
push
cmc
add
push
bsf
mov
ds
dec
mov
and
jl
mov
nop
pop
dec
lret
push
mov
sbb
sub
outsb
imul
in
test
inc
mov
mov
xor
addr16
jnp
pop
mov
cmpsb
cmp
adc
mov
popl
xchg
fsts
inc
sub
inc
fisubs
xlat
lods
and
xor
xchg
xchg
shl
mov
push
and
cmpsl
aaa
movsb
popa
mov
mov
inc
xor
subb
add
mov
adc
xchg
mov
sarb
add
maxps
inc
repz
shll
fistl
xchg
sbbl
inc
stos
incb
movsl
cmp
rorl
bound
and
sbb
cmp
repz
inc
mov
and
or
ja
dec
pop
dec
sbb
clc
pop
adc
mov
jecxz
movb
pop
or
pop
ror
js
loop
insl
add
adc
icebp
add
out
or
in
ret
in
dec
cli
mov
jecxz
push
cmp
sbb
mov
mov
and
ljmp
fbstp
mov
sbb
movb
push
xlat
sub
in
js
les
pusha
jle
pop
mov
lret
aaa
fsubrl
cmc
jo
adc
scas
stos
pop
mov
in
cmp
cmp
in
nop
mov
mov
in
loopew
loopne
sub
lcall
sbb
sbb
xor
adc
push
adc
add
dec
ljmp
mov
jb
mov
enter
mov
cmp
std
fcmovnu
pop
rcl
sub
xchg
cmpsb
jo
loope
xchg
ss
jnp
xchg
stos
and
sub
mov
mov
sub
ret
mov
dec
mov
das
push
sub
ffree
int
add
repnz
mov
or
jno
neg
jmp
repnz
jg
inc
addr16
cmp
dec
pushf
in
insb
leave
insl
adc
lock
inc
add
mov
mov
test
ret
or
xchg
ljmp
jae
adc
inc
xchg
insb
and
xchg
gs
roll
mov
daa
scas
cli
call
sub
mov
sahf
jg
jmp
es
test
add
call
lahf
lret
jmp
imul
mov
mov
lea
xchg
sbb
push
pusha
pop
pushf
pop
subb
pop
std
imul
pusha
and
jae
push
dec
xchg
xchg
cmp
push
mov
mov
or
insb
leave
insl
adc
lock
and
pop
fisttpll
adc
ret
lods
insb
in
test
sbb
cmp
aaa
fisubs
xor
cs
iret
out
mov
pop
aad
pop
add
lods
dec
cmp
mov
daa
lods
jmp
sub
cmpsb
pusha
test
scas
mov
cmp
add
test
sbb
dec
repz
sbb
loop
sub
xchg
lret
mov
fisubs
cmc
inc
mov
pop
sbb
add
sbb
push
and
xchg
sub
inc
int
addl
nop
xlat
and
jg
dec
lods
out
push
mov
sub
js
mov
xchg
cmpsb
and
push
mov
lods
pop
stos
mov
cmp
sbb
fs
iret
lahf
add
inc
shll
pop
movsb
cli
mov
fcmovnbe
clc
mov
xchg
cmp
xor
pop
jmp
sub
cmp
daa
fbld
mov
cmpb
pushf
inc
cld
loopne
popa
outsb
adc
call
loop
std
adc
insl
scas
cmp
insb
gs
sti
dec
dec
out
es
cld
fists
jno
ja
and
stc
dec
dec
into
pextrw
jae
out
sub
xor
mov
fistpl
stc
jle
mov
push
mov
adc
sbb
aad
mov
in
sub
into
bound
call
loope
inc
pop
or
and
cli
iret
sbb
jb
aaa
push
add
leave
insl
adc
lock
pop
push
adc
js
or
pop
jnp
xchg
out
mov
cld
mov
adc
repnz
ss
out
pop
das
xor
sbb
into
xor
imul
and
jo
adc
cmp
mov
aaa
scas
push
cmp
in
lret
cmp
leave
xchg
pop
mov
adc
push
pop
mov
nop
pop
cld
push
inc
xchg
out
iret
cmp
call
dec
out
pusha
sbb
xchg
push
inc
dec
cwtl
or
das
leave
repz
push
lcall
cs
push
mov
push
add
add
inc
or
das
pop
iret
cwtl
mov
cltd
ds
inc
push
movsb
vmovaps
stos
stos
arpl
lahf
mov
jge
lds
in
lock
scas
mov
or
inc
call
mov
out
aad
pop
jmp
insb
cs
fildl
into
out
sub
scas
cld
mov
pop
sub
and
mov
mov
mov
xchg
and
xchg
add
dec
jl
xchg
sbbb
stos
fs
popa
js
out
adc
xor
ja
test
shlb
ljmp
pop
adcl
lret
repnz
aad
xlat
cmp
ljmp
cli
lcall
ss
or
out
jmp
addr16
fistps
sbb
scas
pop
insl
neg
xor
ja
test
push
fnstenv
add
adc
cmpb
cltd
xchg
add
dec
jl
xchg
aaa
mov
sbb
xchg
call
mov
inc
xchg
and
cmpsl
mov
scas
in
sub
les
jae
pop
outsb
lds
pop
mov
lock
pop
sbb
jl
mov
fsubl
ljmp
cmp
js
xor
enter
jg
mov
rcrl
aaa
rcll
es
mov
into
outsb
js
mov
and
test
pop
and
cmovg
add
fisubs
fwait
jno
fildll
add
ss
cmc
test
mov
xor
mov
push
mov
jmp
xlat
cltd
jmp
jp
addr16
mov
xchg
or
or
popa
outsl
dec
sbb
or
movsl
nop
subl
popl
and
cwtl
mov
andb
repz
add
mov
push
outsb
jbe
sahf
pop
js
ret
fimull
sbb
mov
and
cmpsb
aas
or
xchg
rcl
or
xchg
imul
or
loope
inc
xchg
fsubrs
je
pushl
ds
fsubs
test
sub
sbb
xor
movsb
popa
cld
xchg
push
xlat
inc
dec
pop
popf
xchg
and
daa
pop
rclb
inc
and
mov
push
leave
add
nop
ss
out
adc
shll
jp
jmp
into
jbe
xor
scas
mov
cmpsb
add
or
inc
mov
mov
out
dec
pop
dec
mov
js
cs
add
inc
pop
sahf
jno
xlat
mov
cmp
loope
push
cmpsl
xor
iret
cmp
adc
add
repz
cs
loope
mov
push
mov
fidivrs
jp
mov
testb
pop
jle
mov
arpl
stos
les
scas
pop
sbb
dec
add
xchg
ret
arpl
inc
shll
ja
push
fcomip
setno
add
lods
scas
imul
fcompl
sbb
sti
sbbb
not
cmp
pusha
hlt
dec
mov
sbb
mov
test
fs
negl
in
fidivs
push
push
pop
adc
adc
cmc
out
sub
jle
cmp
jmp
clc
or
or
leave
in
xchg
add
push
insb
pop
inc
inc
xchg
imul
cmp
popfw
outsb
sar
lods
nop
push
es
xor
fnstsw
cltd
ja
mov
dec
test
add
add
aad
mov
std
fldl
sbb
push
mov
add
xchg
cld
mov
lret
mov
out
cmp
cmpsb
addr16
dec
dec
pop
inc
cmp
pop
aad
xchg
jp
jge
mov
bound
lahf
xor
mov
add
add
inc
dec
in
sub
jl
aas
mov
and
jmp
xchg
stc
rolb
add
pop
sbb
daa
aad
int
and
xchg
mov
xchg
leave
or
jnp
in
mov
sbb
lahf
mov
jp
pusha
movb
fiadds
xor
jecxz
mov
aas
mov
out
dec
hlt
fcompl
xor
jecxz
and
lret
cs
aam
ja
scas
xor
shl
xor
dec
cltd
adc
test
cmp
jl
sbb
push
lcall
mov
lds
add
xor
xlat
add
sets
fs
fiadds
sbb
fnsave
in
mov
out
call
lea
inc
cli
cmp
push
jecxz
enter
fisttpl
mov
aas
int3
mov
flds
rcll
mov
mov
jle
push
jb
pop
push
dec
jne
fldenv
ljmp
push
push
bound
pop
lock
xchg
dec
and
cwtl
imul
jae
sbb
sbb
cmp
and
push
shlb
cmp
insl
je
mov
gs
rol
rcll
popa
std
mov
inc
ret
pop
imul
adc
jbe
icebp
pop
sbb
cmp
adc
xchg
test
rcl
or
and
fcoms
sti
outsb
xchg
nop
adc
xor
and
test
mov
cmc
add
cltd
dec
int
mov
sbbl
out
andl
gs
or
mov
mov
iret
jge
jns
cmc
cmp
xchg
negb
int3
das
xchg
fwait
pop
js
hlt
add
pusha
inc
add
mov
out
adc
testl
testl
dec
or
fcmovnb
pop
add
jmp
xchg
dec
and
inc
jle
and
imul
lods
or
sub
sub
jb
xor
mov
adc
into
pop
mov
cmp
outsl
jno
imul
fwait
stc
leave
pop
xchg
stos
shll
cld
icebp
imul
int3
inc
popa
js
orb
stc
push
jp
push
iret
mov
push
xor
aam
dec
mov
pop
sbb
jnp
add
pop
add
out
mov
mov
mov
fistl
fstps
cltd
dec
rcl
sub
repnz
add
hlt
ret
mov
or
jg
imul
ret
aad
outsl
jmp
push
sahf
imul
in
and
fld
push
fdivr
adc
xchg
dec
je
dec
adc
xchg
int3
gs
sti
adc
pop
scas
mov
and
mov
mov
cwtl
es
mov
mov
repnz
inc
in
xor
mov
fs
jp
adc
add
xchg
jp
push
movsb
shlb
pushf
lret
sub
push
mov
mov
jne
scas
arpl
data16
lods
call
pop
jo
lds
sbb
rclb
adcl
sarb
arpl
cmp
movsb
lcall
push
mov
mov
adc
mov
push
in
push
into
dec
adc
dec
lods
xchg
mov
shrb
in
lock
cmp
imul
test
fdivl
bound
xor
mov
cmpsb
cmpsb
dec
jns
jns
adc
xlat
ljmp
call
movsb
cli
shrl
call
sbb
cmp
jg
inc
jbe
jo
rol
push
cmp
fbstp
xchg
cmp
or
call
nop
in
cmpsb
fwait
jne
fidivl
cs
out
pushf
ljmp
repz
mov
fstpl
and
fdecstp
jecxz
sbb
push
loope
sub
sub
fcomps
sbb
dec
mov
mov
add
mov
dec
fnsave
in
push
pop
loop
xor
adc
xchg
push
mov
cmpsb
add
sbb
xchg
fists
mov
xor
adcl
jl
and
lret
jge
cmp
adc
loope
subb
inc
push
xchg
movsl
shrb
jecxz
cmp
sub
inc
and
and
sti
mov
call
xor
pop
flds
push
lock
push
add
fimuls
pop
adcl
adc
loope
fs
mov
out
filds
rorl
sbb
push
fsubrl
mov
sub
test
ss
cs
jmp
push
cld
lcall
aas
cs
sub
dec
orb
ss
mov
call
adc
dec
inc
addr16
push
and
and
push
inc
rorb
addr16
mov
dec
dec
sub
push
sub
and
pop
mov
mov
mov
loope
push
in
inc
jns
xchg
outsl
enter
sbb
dec
add
scas
adc
fwait
or
or
mov
lcall
les
xor
icebp
inc
dec
dec
aas
and
pop
xor
into
dec
es
ficoml
and
aad
or
sbb
or
jnp
jecxz
testb
push
mov
ljmp
pop
cmc
fsubrl
lret
cmp
cld
sub
cmpsl
xchg
pop
stos
cmp
rclb
stos
and
aam
imul
cli
leave
xor
fisttpll
loope
loop
lods
lcall
and
lcall
sbb
mov
sub
xchg
mov
mov
pop
mov
rolb
sub
adc
repz
js
or
cli
imul
inc
nop
and
inc
rolb
and
ja
cmp
lock
test
inc
fs
movsl
xchg
dec
cmpsb
loopne
pusha
and
cmc
xchg
mov
inc
cmp
pop
xchg
mov
xor
push
adc
mov
stos
jno
mov
pop
mov
sub
cmp
and
xchg
xor
mov
sti
call
sub
loope
jmp
scas
pushf
jl
hlt
js
inc
sbb
push
and
shlb
lahf
dec
sarb
movl
popa
dec
rol
lahf
insl
mov
mov
inc
pushf
xchg
roll
adc
repnz
data16
mov
in
and
inc
inc
and
push
push
jne
jno
sar
loop
sub
outsb
pop
cli
mov
addl
xor
pop
lock
xchg
sub
out
movsl
xchg
in
adc
out
or
mov
cld
movsb
xor
jns
lods
pop
mov
xchg
testb
push
add
mov
inc
pop
pop
sti
dec
dec
rcll
dec
push
add
pop
mov
add
jbe,pt
push
mov
push
xor
out
pop
push
test
ret
cmpsl
dec
imul
mov
mov
in
inc
cmp
cmpsb
xchg
fcomp
imul
xchg
jb
shll
rcrb
int3
stos
out
sbb
jns
daa
in
mov
fwait
insl
test
add
repz
add
fsub
ret
fiaddl
mov
inc
xchg
cs
pop
xchg
mov
add
in
mov
outsb
mov
push
lcall
adc
ffree
push
fisttpl
cwtl
xor
mov
mov
jbe
jne
cmp
aaa
or
dec
test
cwtl
arpl
dec
inc
and
addr16
mov
add
in
or
mov
mov
mov
push
cmpsl
mov
pop
inc
adc
mov
sub
inc
nopl
xor
cmpsb
sbbl
lahf
sbb
lret
mov
push
int3
jae
xchg
movsb
cmpsl
sbb
mov
roll
xchg
movsb
push
imul
incl
push
js
jl
xchg
lock
lods
scas
cld
insb
movsl
dec
mov
loope,pn
xor
dec
lods
andl
mov
pop
and
xor
test
outsl
inc
ss
jmp
mov
hlt
pop
test
test
cmpsb
xchg
fs
aad
jo
sahf
sbb
pop
inc
movsb
add
mov
adc
sub
fnstenv
cwtl
stos
out
pusha
xchg
int
les
hlt
roll
mov
js
jecxz
adc
dec
mov
bound
cmc
jne
push
ret
sti
out
xchg
stos
push
icebp
addr16
xchg
or
xchg
stos
int3
jp
and
adc
and
add
cld
mov
inc
and
repz
in
pop
call
das
int
loope
inc
lds
in
fcmovb
into
imull
jle
inc
inc
mov
fcompl
adc
inc
andl
sbb
call
test
jo
data16
jne
xor
ds
pusha
mul
aam
repz
les
dec
inc
daa
xchg
lods
adc
lea
shrb
repz
stos
repz
mov
les
inc
cmp
xor
push
push
in
add
xchg
outsb
cli
dec
in
push
bound
mov
movsb
xchg
lahf
sub
dec
jo
imul
in
pop
ret
loope
xchg
sbb
stos
sahf
pop
dec
imul
mov
movsb
or
adc
ljmp
in
shrb
fdiv
pop
dec
sbb
or
ret
mov
adcl
push
push
pop
sbb
xchg
data16
pop
add
sub
testl
aam
aam
pusha
out
xor
rclb
addr16
pop
jo
cmp
add
mov
lds
jg
cmp
subl
scas
in
scas
rol
movsl
fs
jb
fsubs
ret
mov
out
jge
inc
adc
int
stos
jne
test
int
sbbl
rorl
mov
sbb
sahf
es
iret
ficoml
shl
jnp
pop
pop
cs
dec
xchg
mov
jl
xchg
mov
lods
cmp
dec
lahf
or
std
popa
lods
sbb
adc
mov
mov
add
pop
dec
dec
cmp
mov
out
orl
push
outsl
sbb
xor
sub
jne
mov
cmp
or
aas
xor
in
cmp
sub
ljmp
cmp
dec
and
aaa
mov
sti
loop
pop
fistpll
fwait
jb
push
movsl
in
and
cmpb
scas
or
add
test
add
nop
popa
add
repz
dec
sbb
or
enter
mov
mul
test
jne
inc
dec
or
xlat
ret
filds
subl
inc
fcmovnb
xor
cmp
iret
and
pop
pop
mov
das
aaa
sbb
cmp
loopne
les
das
insb
jae
pop
push
ret
outsl
xorl
sub
cwtl
sub
cmp
xchg
daa
jp
sbb
lea
sarl
loop
mov
ds
je
popa
jno
mov
aad
test
mov
and
push
push
push
xor
imul
je
xchg
notl
into
add
repz
rorb
cmp
pop
xlat
out
imul
inc
adc
cmp
jmp
push
mov
adc
xchg
sbb
lods
ss
push
fstps
sbb
sbb
std
out
add
mov
pop
ret
and
pop
mov
pusha
ljmp
xlat
xchg
sahf
bnd
repz
jb
outsl
xchg
enter
fwait
dec
out
fs
cmp
mov
or
aad
out
pop
in
xchg
mov
rolb
punpckhbw
and
lcall
push
or
in
sub
adc
xchg
dec
and
inc
adcb
cmp
outsb
cmp
in
rcl
rorl
and
push
jle
mov
mov
mov
gs
test
mov
sbb
cwtl
jge
cs
insb
test
xchg
sbb
ret
pop
ss
jp
inc
add
xchg
xchg
out
adcb
pop
mov
pop
xchg
je
or
mov
lea
push
or
stos
jge
cmp
lcall
gs
insl
push
jp
mov
mov
push
scas
add
mov
push
les
test
mov
mov
test
das
mov
nop
xchg
xchg
test
lods
xchg
addr16
popf
jmp
imul
flds
add
into
and
pop
and
jecxz
repz
mov
outsl
pop
shll
cli
mov
notl
lret
bound
aaa
movsl
pop
push
cmpsl
std
cmp
or
pop
xor
pop
aam
scas
fldt
inc
dec
mov
mov
gs
pusha
paddw
daa
jecxz
icebp
jnp
lahf
data16
mov
popa
sahf
call
pop
adc
pusha
xchg
cmpsl
cwtl
daa
jmp
sbb
in
push
jbe
push
jg
ja
sub
in
sbb
lret
ss
dec
jge
in
xlat
jge
movsl
cmp
iret
mov
push
repnz
cmpl
push
push
mov
push
fsubp
push
arpl
jne
mov
xchg
lcall
cltd
pop
jo
mov
adc
int
jmp
clc
jle
rolb
push
pop
out
mov
gs
outsb
adc
pop
cld
mov
daa
shl
xchg
sahf
push
xlat
push
cwtl
cmp
push
out
rorl
push
dec
scas
mov
lods
jb
mov
cmp
jnp
or
pop
cmp
scas
stc
loope
outsl
mov
xor
ss
fisubrs
ss
aaa
adc
cmp
in
mov
inc
cmpsl
mov
sbb
scas
mov
push
dec
add
mov
cmp
or
adcl
imul
xchg
xor
int
cmp
sbbb
cli
in
sub
xor
jno
lret
mov
std
lods
lods
mov
jb
loope
cltd
ds
dec
xor
pop
fdivrp
mov
xchg
mov
lret
call
int3
and
cmpsb
lahf
cmp
ja
imul
loopne
sti
sbb
sbb
popf
xchg
jp
fldt
dec
aam
insl
fisubl
push
js
test
scas
es
test
inc
pop
mov
jbe
loope
cltd
test
and
jmp
mov
xor
jnp
aas
dec
mov
das
dec
mulb
js
call
push
das
jnp
shrl
notb
incb
xor
sbb
ret
or
cmp
add
adc
push
js
push
xchg
push
pop
xchg
mov
aaa
sbb
jmp
pushf
adc
mov
scas
inc
lret
adc
and
fisubrs
out
aam
mov
sub
sub
inc
fstl
fs
cmpsb
ljmp
dec
jmp
jmp
lock
dec
dec
inc
clc
repz
inc
out
pop
leave
sti
fcoml
or
mov
mov
cmp
adc
pop
test
ss
cmp
jecxz
add
push
pop
cs
push
fstps
test
push
mov
fadd
cmp
push
push
sbb
mov
mov
shr
pop
js
or
out
push
or
cmpsb
inc
and
dec
mov
sub
xlat
adc
shlb
aaa
das
mov
push
aam
mov
adc
daa
push
and
inc
fisubrs
jle
cld
sbb
rclb
insb
insb
pop
call
push
sub
push
arpl
push
mov
test
cmp
aad
std
add
pop
int
xchg
dec
jg
mov
test
adc
mov
es
jns
aam
jp
mov
lods
mov
sub
dec
sub
lods
and
inc
push
add
or
pop
push
xor
int
jg
test
mov
adc
push
negb
xor
icebp
lcall
cmp
jmp
cmp
mov
out
mov
and
mov
rcll
lds
out
cmp
pop
pusha
insl
mov
inc
inc
fnstcw
mov
orb
dec
lret
adc
inc
add
cmp
scas
xor
lods
dec
inc
movsl
and
ret
jno
insb
ljmp
add
pop
daa
mov
and
mov
pushf
fidivrl
cltd
xor
lahf
popa
push
or
test
xchg
mov
daa
mov
add
lret
jbe
add
mov
xor
repz
jno
dec
mov
loopne
out
or
insl
cmc
js
pop
xor
pop
mov
fmull
mov
aaa
cmp
out
mov
mov
imulb
sbb
inc
movsl
test
mov
notb
jb
fnstsw
cli
mov
scas
xor
idivl
pop
cmp
and
outsl
hlt
mov
scas
fcmovnu
fldt
cltd
mov
jl
nop
adc
scas
xchg
add
jae
cltd
mov
das
stc
xor
lods
add
sbb
and
std
in
lods
jns
sub
arpl
mov
jg
insb
sub
mov
fimull
push
mov
jg
push
jae
repz
repnz
scas
push
pop
outsb
mov
aam
ds
pop
daa
dec
push
movsb
bound
sub
out
xor
insb
cli
aad
bound
int
push
and
lret
mov
movsb
or
lcall
xor
fcoml
fs
push
xor
mov
rclb
and
dec
cmpb
sbb
push
xorl
push
andb
cmp
gs
call
pop
xchg
lcall
jb
repnz
mov
imul
jne
test
jbe
dec
lock
adc
xor
aam
orl
cmp
cwtl
cmpl
out
scas
dec
mov
cmp
lcall
jnp
ljmp
cwtl
mov
aam
xor
in
jl
fsubr
pop
std
aad
mov
shrb
dec
or
ss
dec
daa
mov
lock
leave
sbb
scas
xlat
shrl
daa
mov
pop
outsb
inc
mov
insl
adc
add
mov
sbbl
int
popa
fwait
dec
mov
insl
neg
sbb
lods
xor
mov
mov
pop
fistps
cmp
fildll
jg
and
mov
dec
in
xorb
xor
sahf
xchg
out
ds
mov
cs
out
imul
mov
jecxz
in
adc
into
dec
jmp
dec
shll
mov
and
fmull
rolb
int3
test
loope
mov
pushf
xor
sub
ret
fiadds
out
sub
cwtl
mov
xor
cmp
inc
push
test
out
or
decl
lret
xchg
mov
adc
sub
ret
add
cmp
xor
hlt
iret
outsl
push
stc
sbb
pop
pop
xor
movsl
fcmovnbe
subb
dec
jnp
enter
mov
cs
lea
loop
fwait
in
xor
mov
push
mov
mov
sub
iret
or
icebp
sub
fistps
hlt
je
add
pop
in
pop
daa
lahf
into
adc
sub
pop
sbb
out
je
fstps
push
mov
in
inc
mov
movsl
sti
mov
lret
inc
push
out
add
pushf
xchg
mov
mov
adc
cmp
mov
xorl
testl
shl
lods
xor
push
iret
movsl
ret
test
fcoml
test
inc
xchg
add
sbb
mov
xchg
cltd
into
into
movsl
inc
adc
in
hlt
popf
mov
loopne
sub
add
mov
rol
xor
pop
xchg
and
fs
sahf
cmpl
btr
ljmp
lock
mov
and
mov
pusha
roll
sub
mov
mov
dec
jle
js
adc
add
fs
add
lock
mov
mov
jae
pop
sbb
push
in
dec
cmpsl
push
xchg
push
inc
inc
rorl
pop
or
addr16
sub
sub
push
inc
leave
inc
icebp
jle
jbe
int
inc
pusha
pop
cmpl
dec
or
mov
std
inc
mov
add
scas
in
adc
or
in
or
push
repnz
xchg
sbb
ret
xor
inc
xchg
mov
jbe
popf
sub
pop
dec
mov
cld
mov
pop
mov
or
dec
dec
bound
add
enter
push
pop
jmp
ljmp
icebp
cs
ja
enter
lcall
sahf
dec
pop
fadds
dec
xchg
add
shrb
jecxz
dec
es
imul
inc
cmpsb
xor
pop
pop
into
adcl
inc
jp
mov
xor
gs
shrl
out
mov
fnstcw
xchg
arpl
movsb
sahf
scas
xchg
sbb
loope
flds
push
dec
or
aaa
pop
jmp
pop
cmp
mov
imul
in
pop
mov
js
or
and
jns
inc
clc
ja
mov
repnz
mov
repnz
stos
int3
mov
add
stc
cmp
fdiv
lea
sahf
sarb
pop
and
mov
sbb
and
imul
inc
imul
mov
jecxz
xchg
lret
lock
inc
idivb
or
inc
mov
scas
mov
inc
cmpsb
pop
jb
rcll
inc
in
and
test
xor
jne
push
sub
outsb
arpl
mov
ror
cwtl
add
cmpsb
add
mov
loopne
inc
push
sub
adc
xchg
adcb
inc
repnz
mov
mov
xchg
or
adc
es
pavgw
mov
dec
mov
cmp
sahf
xchg
xchg
fldt
orb
xchg
sub
ret
push
jg
aad
xlat
jne
repnz
negb
jbe
sbb
outsl
add
sbb
sbb
mov
cmp
sub
mov
loope
and
daa
mov
es
das
imul
dec
mov
lea
repnz
sub
dec
imull
add
or
out
insl
cmp
mov
and
and
jno
gs
adc
out
push
push
and
sahf
loopne
inc
out
iret
pusha
or
das
xchg
stc
xor
pop
jne
stc
and
daa
push
jmp
xor
xorl
imulb
stc
pop
lcall
fistl
mov
sbb
ffree
mov
sahf
cmp
stc
mov
jnp
rolb
pusha
icebp
icebp
xchg
out
js
rclb
rcl
lods
ja
adc
and
ja
mov
or
sub
mov
xor
xchg
cmp
mov
sbb
popa
pusha
dec
test
sub
push
fistl
das
popa
xor
and
mov
aaa
push
xchg
cmp
cwtl
outsb
outsl
notl
and
mov
dec
dec
pushf
fmull
rorb
fsubr
stos
jle
loopne
pop
and
lret
aam
fdivp
into
pop
mov
fisubl
cmp
cmp
daa
rolb
pushf
flds
lea
iret
cmp
xchg
inc
js
mov
cmp
jb
pop
leave
xor
dec
mov
int
inc
inc
in
les
out
jl
dec
das
std
add
iret
mov
in
jae
sbb
imul
jle
mov
mul
and
rcrl
push
cmp
cmp
mov
pop
cmp
sbb
jle
mov
mov
cld
jbe
inc
mov
cmp
ljmp
cli
push
out
cmpsb
sti
jl
inc
sub
std
jne
cmpsl
inc
lock
mov
and
cmp
adc
aam
in
and
cs
or
mov
inc
push
jbe
xor
repz
mov
rolb
mov
loop
xchg
rcr
gs
es
or
mov
jb
ljmp
add
mov
fcoms
mov
dec
mov
gs
mov
mov
push
sub
mov
enter
faddp
add
cli
push
inc
gs
add
add
movsl
leave
sub
cmp
fists
add
xor
inc
xchg
loopne
or
pop
add
xchg
cmp
sub
add
dec
adc
stos
pop
in
lret
loope
fnstsw
and
push
jbe
repnz
jle
das
stc
add
dec
aad
popf
lahf
jbe
push
cmp
adc
subb
or
lret
std
lret
push
dec
icebp
cmc
cmp
xor
inc
dec
subb
and
pop
test
dec
mov
jle
and
push
jbe
repnz
jle
pushf
fdivr
dec
lahf
add
ja
dec
jecxz
arpl
adc
push
jne
cmp
outsl
jle
dec
and
xor
icebp
loopne
leave
jl
jmp
jle
and
push
jbe
repnz
jle
das
stc
add
dec
aad
popf
xchg
xor
subb
or
lret
std
lret
mov
sub
js
test
xchg
pop
xchg
nop
aaa
push
xchg
stc
xor
pop
jne
stc
repz
in
int3
push
daa
push
add
lret
rcl
jae
aaa
push
mov
lahf
imull
mov
mov
jb
adc
push
hlt
mov
or
outsb
addr16
mov
pop
ret
and
test
fcomps
sub
xlat
xchg
mov
ss
mov
bound
aas
rcll
pop
sbb
enter
xchg
fs
xor
or
adc
int
mov
xor
pop
in
rorl
maxps
pop
fmull
mov
popf
js
shrl
test
fwait
imul
inc
push
movb
aas
cld
mov
inc
in
lock
mov
mov
mov
rolb
fstpl
sub
or
cmpb
shrl
negl
fnsave
iret
push
mov
sahf
cmp
xor
imul
mul
icebp
cli
xchg
test
push
cmp
dec
push
or
in
mov
pop
cmc
ljmp
dec
and
cmpsl
jae
mov
jb
inc
pop
inc
push
outsl
jb
aaa
rcrl
les
xchg
insl
mov
outsl
hlt
cmp
and
inc
int3
xor
lret
popa
aaa
icebp
testb
stos
call
jl
inc
push
mov
and
or
and
push
insb
inc
push
cmp
xchg
dec
and
pop
cmpb
orl
mov
mov
ljmp
add
mov
ss
into
mov
adc
adc
cmc
xchg
push
imul
jns
stos
test
adc
xchg
push
xor
adc
shlb
or
xchg
mov
mov
lock
dec
inc
sub
sbb
jmp
push
dec
loope
mov
in
push
jge
adc
jo
hlt
push
icebp
mov
push
add
ret
jp
out
stc
insl
jecxz
xor
xchg
ss
std
leave
mov
stos
mov
stc
loope
fsubp
xor
cmp
mov
scas
jns
sbb
stos
in
sarb
test
xchg
sub
aaa
cltd
cvtdq2ps
sub
pop
repz
clc
xchg
jmp
xchg
stos
mov
stc
pop
rcl
fucom
or
cmp
xchg
cmp
mov
mov
pop
sub
das
cmp
jge
cld
into
ja
xor
mov
out
icebp
and
pop
pusha
or
xor
rcll
dec
outsb
sbb
dec
push
je
xor
gs
aam
repnz
jae
fisubrs
in
xchg
cli
jp
cmp
inc
test
dec
and
mov
xlat
push
enter
cmp
dec
mov
scas
stos
lret
xchg
mov
and
push
pop
pmaddwd
cld
lock
xchg
ja
scas
stos
lret
in
sbb
mov
or
ds
pop
jne
mov
mov
pop
lcall
xor
xor
cmp
and
push
push
mov
adc
sti
inc
cli
cmp
aas
rolb
push
dec
je
sahf
test
scas
cwtl
mov
stos
insb
int
mov
cltd
sbb
fwait
jecxz
lcall
fsubl
outsl
lods
xchg
mov
les
pop
push
repnz
xchg
pop
fcomps
sub
outsb
addr16
or
cmp
test
sbbb
mov
pop
push
mov
sbb
movsl
mov
dec
xlat
jbe
inc
cmpsb
inc
das
lret
icebp
push
cmp
test
sub
fsubl
fwait
inc
inc
aad
loope
cmc
popa
shlb
jp
xor
int3
add
sub
sbbb
inc
loope
std
cmc
jae
lahf
lret
aad
lahf
inc
inc
lcall
aaa
ss
leave
orl
inc
and
push
sub
or
das
xchg
dec
popa
fcmove
mov
jg
out
inc
test
adc
fstpl
mov
mov
jbe
int3
leave
mov
pop
clc
lock
or
lea
cmp
ljmp
pop
jne
stc
push
in
inc
pop
xor
push
sbb
xor
call
lods
or
xchg
repz
mov
inc
ja
dec
fs
into
push
fisubrl
push
xlat
nop
jl
jno
cmp
sub
mov
jne
int3
xchg
je
jecxz
xchg
pop
xchg
arpl
add
add
fnstsw
push
das
lock
stc
xor
pop
jne
stc
push
in
inc
pop
xor
push
sbb
xchg
pop
adc
jecxz
adc
or
jmp
icebp
scas
dec
inc
ficoml
shl
mov
push
shl
ret
adc
ret
sub
mov
andl
test
mov
mov
and
test
sahf
in
insl
es
ss
inc
pop
fwait
push
aad
jb
arpl
mov
and
mov
inc
jp
rolb
add
inc
jg
inc
ret
mov
shlb
pop
add
dec
les
xor
push
jmp
shr
dec
pop
cmpsl
and
aam
addr16
adc
sbb
adc
jle
pop
push
testb
mov
fwait
add
jmp
or
out
inc
pop
add
aam
and
es
jg
scas
stc
bound
dec
dec
mov
mov
insb
and
lods
dec
dec
mov
sbb
xor
sbb
jle
mov
imull
pop
das
mov
mov
dec
mov
loope
inc
xor
fidivrl
jnp
bound
rcll
and
xchg
mov
dec
mov
scas
mov
jnp
mov
or
xor
jo
xchg
outsb
sbb
aam
jb
loopne
mov
mov
out
dec
sbb
adc
imul
lret
stc
movsl
lods
dec
loop
ljmp
mov
inc
dec
push
lret
ljmp
enter
outsb
sbb
divb
pushf
in
int3
mov
push
jmp
dec
in
fwait
pop
stos
call
iret
or
out
fs
add
std
aad
rol
xchg
loopne
jecxz
and
and
mov
pop
mov
mov
rolb
popf
xchg
ret
mov
out
into
les
pusha
fistl
dec
std
pop
xor
fldenv
arpl
lds
mov
sbb
mov
add
subb
push
inc
test
cmp
mov
stc
test
add
add
stos
push
dec
icebp
mov
fildll
int3
inc
lret
dec
bound
das
cmpb
repnz
dec
cmp
inc
bound
movsl
pop
push
lock
pop
inc
clc
mov
mov
imul
gs
mov
sbb
mov
mov
mov
mov
mov
adc
push
and
cmp
pop
das
nop
loopne
mov
scas
jo
mov
cmpb
or
movsb
mov
push
cmp
dec
arpl
jle
jle
icebp
loop
add
pop
ret
mov
jg
stos
xchg
fiadds
mov
dec
mov
out
sub
divb
xchg
pushf
pop
push
repz
push
sub
or
and
inc
and
push
push
into
or
js
daa
js
add
sbb
arpl
ja
inc
dec
mov
dec
xchg
xlat
and
mov
lods
out
push
aam
push
xchg
outsb
ja
push
in
test
dec
sub
lock
gs
and
push
push
inc
pop
add
std
in
dec
inc
mov
or
dec
xchg
mov
push
push
cmpl
mov
lds
mov
lds
mov
xchg
pop
adc
lret
add
xor
clc
and
fndisi(8087
dec
inc
push
icebp
or
push
je
adc
pop
adc
inc
sbb
out
pop
gs
fldl
repnz
das
inc
cld
dec
add
add
mov
arpl
ja
inc
dec
bound
sbb
or
insb
mov
cmp
cmc
mov
or
push
cmp
inc
int
dec
mov
out
call
fstpl
sbb
movsb
not
push
call
out
addr16
xor
inc
pop
in
mov
in
xlat
repz
add
cmc
xor
adc
sahf
ret
lea
shr
gs
das
xor
and
cmp
mov
pop
ret
popf
lcall
je
mov
insl
mov
aad
push
mov
idiv
cmp
outsl
jbe
mov
outsl
es
ret
mov
daa
cmp
inc
test
lret
call
jno
addr16
sti
mov
mov
or
mov
stc
ss
push
sub
lock
add
dec
and
adc
fs
cmpsb
adc
repnz
or
xchg
frstor
shll
test
or
mov
stos
ja
adc
inc
mov
sub
push
inc
jbe
insl
mov
cmpsl
jp
push
pop
and
test
movsl
add
mov
jmp
out
negb
xchg
in
xchg
rolb
aas
pop
dec
push
lock
or
pop
stc
mov
adc
fbld
xchg
fdiv
jge
pop
pop
lret
pop
sub
xchg
test
mov
shll
das
mov
jne
test
inc
dec
pop
popf
xchg
and
daa
pop
shlb
lods
sbb
or
adc
and
mov
push
insl
jp
in
mov
and
fistpll
pop
nop
mov
notl
jecxz
xchg
stc
xor
pop
jne
stc
and
cmp
lock
in
cltd
rcrl
dec
mov
pop
shrl
xchg
sbb
mov
mov
mov
mov
or
lret
outsl
pusha
inc
push
inc
pop
mov
xchg
sbb
push
cltd
vmovlps
cmpl
in
pop
push
cmpsl
sub
pop
add
psllw
lods
add
lods
mov
sub
std
insl
adc
sbb
xlat
and
dec
mov
imul
inc
mov
or
lcall
push
inc
pop
in
icebp
adc
or
stos
jle
or
dec
sbb
sbb
arpl
mov
and
mov
adc
rolb
cmpsb
stos
lea
push
xchg
fisttpll
loopne
dec
mov
sub
xchg
test
clc
sbb
add
push
loopne
and
mov
fimuls
mov
imul
xor
data16
adc
fisttpll
in
ja
adc
aad
sbb
ds
in
mov
movsl
and
push
shll
jmp
repnz
ljmp
and
hlt
sti
sti
sbb
or
xor
pop
loop
adc
cmc
add
insb
inc
fdivrs
jnp
stc
aad
xor
test
imul
push
or
int3
call
add
mov
add
lcall
arpl
test
or
js
jno
jno
cltd
out
cmp
iret
cmp
scas
out
mov
and
xor
cmp
dec
ret
or
xchg
out
xchg
jno
movsb
in
fcomip
cltd
sbbb
nop
lea
xchg
or
or
sub
pop
mov
jne
xchg
pop
scas
dec
xchg
fdivl
or
movsb
jge
test
shrl
std
push
add
clc
out
imul
pop
add
xor
push
mov
divb
pop
mov
xor
xchg
fmuls
in
fstl
inc
mov
adc
cli
push
xor
ds
pop
nop
rorb
ret
or
shlb
mov
pusha
mov
mov
inc
shlb
aad
fisubs
xchg
mov
dec
test
xchg
shrl
xchg
xchg
in
xchg
jno
inc
das
xchg
movsl
aad
pop
cmpsl
movsb
into
ljmp
pop
inc
cmp
inc
ds
fmull
lods
fldenv
pop
sbb
daa
xlat
arpl
sbb
and
or
mov
movsb
and
cmp
jae
daa
scas
ror
js
incl
mov
pop
iret
inc
inc
and
js
lret
mov
push
repnz
and
xor
push
nop
and
cmp
mov
lcall
pop
int
mov
pop
mov
cmp
pop
dec
in
xor
mov
xor
popf
xor
mov
lahf
mov
pop
imul
cltd
mov
notb
adc
outsb
cmp
dec
jmp
hlt
lock
nop
sbbl
fwait
pop
mov
shl
sub
popa
sbb
pop
fnstsw
push
int
nop
jo
mov
subl
test
rcr
movsl
push
mov
xchg
sub
mov
cmpsb
inc
roll
out
outsb
push
xor
add
inc
add
lret
cwtl
test
jp
es
outsb
andl
hlt
data16
sub
or
mov
mov
dec
movsl
loopne
mov
loop
lds
jmp
in
xor
data16
mov
xchg
add
sbb
shlb
inc
loop
popa
outsl
enter
out
xchg
xorl
pusha
test
enter
aas
in
xor
inc
aam
hlt
cwtd
stc
scas
pop
cli
sbb
xchg
push
inc
mov
jl
je
or
mov
orb
sub
jge
ror
movsl
push
or
pop
lret
or
inc
push
fsubrs
test
xor
sbb
ds
scas
inc
push
bound
stos
push
jecxz
js
push
jp
dec
or
pop
mov
sub
lds
jecxz
fstpl
push
mov
and
fildl
dec
inc
popa
pop
push
push
and
lods
rorb
jg
pushf
mov
shrb
roll
sub
jge
inc
imul
into
fcmovnbe
xor
mov
movsb
int
mov
push
inc
shrl
and
push
adc
xlat
mov
jno
jg
adc
jo
adc
mov
and
rolb
jl
pop
stos
test
scas
dec
jecxz
test
out
pop
pop
test
cmpsl
cmp
push
imul
mov
bound
jo
push
out
jno
mov
add
push
or
int3
pop
dec
pop
hlt
das
xchg
dec
aaa
and
and
pop
into
rcr
cmp
inc
ss
in
sub
jo
xor
and
fs
icebp
sti
mov
jne
dec
imul
test
adc
insb
xor
sub
adc
sbbb
mov
mov
sbb
sbb
jbe
rorb
in
xchg
nop
pop
xor
out
and
ja
jo
lods
mov
scas
mov
pop
mov
popl
adc
mov
cmc
aaa
jno
aad
test
pop
shr
je
push
es
cmp
sub
or
mov
nop
cmp
xchg
pushf
rorb
insb
das
into
imul
out
std
je,pt
in
xchg
decl
mov
jb
inc
dec
movsl
roll
test
test
and
xchg
arpl
sbb
aaa
xor
jb
data16
xchg
mov
lret
sub
fmuls
call
and
push
and
shlb
cmp
sub
push
sar
fisubrs
aam
arpl
lods
mov
lods
ficoms
decl
ja
jns
inc
pop
aad
add
push
ja
das
fdivrl
test
adc
pop
xor
jne
lock
call
scas
pop
xor
mov
dec
outsl
aad
add
or
xchg
push
xchg
aas
enter
or
mov
pop
inc
push
test
push
bound
push
ljmp
lret
jae
jo
pop
int
rcrb
popf
xlat
xlat
imull
ret
mov
outsl
movsl
and
imul
xchg
mov
fisttpll
sbbl
push
pop
test
rcrl
sub
and
cmpsl
int3
mov
outsl
sub
cmpb
dec
mov
adc
lods
stos
mov
out
mov
in
fdiv
cmpsb
inc
lock
in
dec
cmc
int3
mov
xchg
mov
and
mov
test
mov
cltd
dec
inc
pop
push
pop
lods
scas
add
mov
and
sbb
sbb
add
ljmp
gs
or
pop
mov
sbb
and
fdivrl
iret
jo
int3
or
push
jle
insl
pop
jle
mov
lds
mov
out
cli
pushf
xchg
sub
inc
jl
mov
in
or
lcall
xor
aaa
adc
enter
cli
xor
stos
pusha
jnp
sti
mov
std
cmp
arpl
add
cwtl
adc
pop
jne
cmc
stos
xchg
sub
pop
xchg
or
cmp
inc
shrb
jecxz
add
iret
in
mov
lret
cs
cmc
adcb
jp
or
test
sub
mov
out
outsb
mov
mov
mov
cwtl
nop
dec
rcrb
pop
and
jnp
and
adc
dec
aad
sti
les
into
nop
into
mov
add
stos
arpl
mov
insl
in
dec
aas
pop
jno
cmp
xchg
pushf
xchg
pop
popf
imul
or
add
std
sub
xchg
lcall
pushf
in
ror
aas
push
jo
test
sub
mov
les
push
mov
adc
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
add
shlb
xor
arpl
icebp
cmpsb
pop
xchg
lock
push
out
mov
fiaddl
addps
pushf
sub
push
mov
shrb
dec
bound
inc
in
jae
mov
popa
lock
daa
mov
enter
push
into
pop
mov
jp
mov
sub
xchg
jle
push
push
and
or
adc
jmp
fucomip
aam
dec
out
adc
aad
add
rcrl
movsb
icebp
gs
sub
gs
aad
xor
in
sub
addl
dec
bound
in
adc
pop
jae
rclb
push
dec
ficoms
cli
daa
rorl
mov
and
pop
sub
pop
jl
mov
imul
int3
push
adc
fsubrs
add
ljmp
insb
ljmp
push
popf
pop
cmpb
cmp
sbb
test
xor
outsb
and
movsl
jne
dec
loopne
xor
outsl
or
sub
jb
mov
int
or
push
add
cmp
rclb
pop
jecxz
jns
notl
lret
clc
int3
or
mov
out
mov
fsubrl
nop
cmp
jp
push
fmuls
orb
push
rolb
pushf
fldenv
je
in
adc
xor
loop
inc
inc
push
dec
jle
aad
lea
test
icebp
and
fidivrl
test
cltd
int
xor
mov
mov
mov
call
sbb
cmp
jle
aad
lea
test
mov
sub
nop
adc
pop
jg
sbb
les
jns
notl
cmp
xchg
dec
std
enter
xchg
push
repz
jl
mov
adc
push
add
adc
xchg
sbb
sti
rorb
mov
mov
add
jge
dec
push
add
lods
and
push
pop
insl
jmp
xchg
jbe
lret
pop
lcall
pop
mov
decb
dec
ljmp
mov
or
mov
inc
aas
and
pop
sub
jb
jb
lds
gs
mov
and
das
out
pop
push
ljmp
cmp
dec
mov
int
push
jg
movsb
mov
out
push
ljmp
adc
pushf
add
mov
mov
ucomiss
push
or
lret
imul
aaa
pop
sub
jb
push
cltd
sub
hlt
aas
jns
inc
clc
cmpsb
jmp
int3
les
nop
dec
pop
sub
jb
cli
or
inc
les
aam
cmp
shr
pop
inc
stos
inc
outsl
mov
test
jb
inc
sarb
xchg
jno
test
popa
mov
lahf
sub
loopne
cmc
gs
fstp
lds
push
mov
int3
and
sbb
lods
pushf
test
and
addr16
test
es
mov
out
int
rol
loop
jae
gs
add
adc
push
rorb
fisubl
sbb
lahf
mov
test
fwait
inc
sbb
fldenv
push
push
or
arpl
mov
push
and
jmp
js
sub
hlt
pop
test
arpl
ret
popa
fsubrs
sbb
scas
mov
xchg
and
xor
adc
lods
push
xorb
into
jl
adc
jno
cmp
pushf
dec
popf
jbe
push
dec
add
mov
adc
inc
mov
jmp
out
stos
loopne
inc
xchg
pop
adcb
jg
ret
in
jbe
xchg
cmp
stc
add
push
lahf
xor
loope
jle
and
aad
lcall
pop
lods
loopne
and
xchg
mov
inc
out
out
jnp
fstpl
lar
inc
jmp
or
inc
jae
int
sub
test
js
pop
inc
adc
data16
or
andb
adc
inc
adc
sub
pushl
add
mov
dec
enter
int
insl
push
sarl
xor
push
xchg
pop
sub
jmp
shrb
or
std
and
fldenv
imul
sbb
adc
inc
clc
outsb
xlat
bound
and
jbe
xor
inc
out
inc
jmp
dec
jmp
pop
int
cmc
filds
pop
out
xor
jmp
jl
jbe
push
sahf
movsl
add
xor
mov
inc
jns
mov
inc
ja
mov
aam
das
mov
adc
sub
mov
pop
jae
in
pusha
clc
ss
clc
rcl
dec
sub
mov
mov
icebp
xchg
cltd
jne
imul
arpl
jb
dec
push
or
push
or
push
mov
sbb
pop
nop
fwait
and
aaa
lea
push
movsl
aaa
jbe
adc
mov
push
ret
sbb
jp
cld
cs
pop
orb
inc
and
or
test
cwtl
filds
sub
ljmp
jle
jae
jns
pop
mov
fidivrl
fcompl
mov
andb
adc
aam
sub
test
inc
cmp
fidivs
mov
jae
aad
jno
adc
test
fistl
mov
mov
jae
test
aas
int
mov
cmp
add
xchg
xchg
fcompl
test
ljmp
mov
int3
out
ds
cmp
aaa
es
mov
cs
rcrb
sub
cmp
test
ror
ds
xor
sti
mov
scas
jne
sbb
outsb
aaa
lahf
mov
push
stos
pop
pop
and
jl
and
sbb
pop
jge
mov
dec
outsl
dec
push
aad
outsb
cmp
xchg
cmp
gs
adc
xor
mov
cld
or
cld
inc
aas
cmp
dec
mov
iret
les
push
cmp
aad
cld
sbb
ljmp
jmp
addb
ds
jg
jg
xchg
mov
cmpsb
push
or
popf
add
xor
jp
adc
pop
push
int
dec
movsl
outsl
fdivrs
mov
xor
ss
push
inc
loop
sbb
loop
mov
jmp
sub
pushl
add
arpl
mov
loopne
idiv
xchg
rcrl
aaa
dec
mov
lret
push
inc
xchg
cli
mov
xchg
or
mov
pop
int
hlt
and
inc
mov
xor
xor
clc
iret
dec
leave
dec
movsb
dec
cmp
jmp
mov
call
mov
cmp
push
ja
outsl
push
roll
aad
sbbb
outsl
out
and
mov
sub
cmp
out
daa
jmp
or
imulb
push
fsub
cmovns
jecxz
lret
and
loopne
dec
int
or
std
mov
cmp
pop
jbe
test
sahf
adc
fistpl
mov
mov
push
cwtl
das
mov
xor
lahf
jecxz
cmpsb
add
fs
inc
inc
inc
movsb
push
push
add
mov
add
cltd
clc
jg
adc
gs
test
dec
jg
shrl
mov
xchg
pop
cmc
mov
lea
and
ljmp
test
mov
adc
loope
cmpsb
sub
pop
pop
and
add
mov
cmp
jl
lea
push
in
out
out
jle
movsl
cmpsl
push
loope
xor
icebp
stc
cmp
adc
jnp
and
add
mov
or
mov
insb
xor
jno
out
dec
negl
aad
jno
insb
lret
imul
std
xchg
dec
lods
out
and
and
and
enter
loope
sbb
sbbb
push
lds
and
or
fcomi
cmpsb
xchg
mov
lods
loope
sbb
xor
call
mov
jg
sbb
outsl
sbb
out
sbb
xor
push
fdivrl
dec
movsl
shlb
test
inc
sti
mov
rcrb
repnz
loope
inc
lods
add
movsl
sbb
jb
inc
mov
cmc
daa
inc
jno
sub
inc
pop
ds
int
pop
lds
pushl
dec
dec
mov
es
out
scas
mov
ret
loopne
insb
or
adc
mov
xchg
and
pop
push
mov
adc
jnp
int3
inc
movsl
clc
dec
or
rorb
popa
jge
dec
repz
aaa
ja
orb
sub
imull
in
in
mov
les
mov
mov
xor
loope
mov
xchg
dec
setae
and
or
ja
ja
inc
scas
xor
xlat
jle
nop
lea
sbb
pop
in
pop
pop
mov
fbstp
and
pushf
or
enter
jmp
call
and
mov
orb
adc
add
fwait
sbb
rolb
xchg
adc
aam
rcrb
xchg
xlat
jge
dec
out
ret
scas
mov
icebp
pop
jne
stc
mov
test
mov
mov
mov
add
in
cmpsb
aad
cmc
pop
mov
lds
aas
and
loopne
ja
and
pop
xor
add
leave
dec
pushf
gs
cmovb
push
shl
cmp
mov
xor
outsb
pop
imul
dec
in
inc
std
sbb
sub
dec
in
js
xchg
pop
aas
xchg
inc
xchg
xchg
and
mov
in
stc
hlt
test
out
xchg
lret
ja
mov
test
inc
jo
popa
fcmove
sub
push
cmp
sbb
aaa
push
adcl
imul
sub
and
sahf
shll
mov
test
push
rolb
or
insl
hlt
lods
clc
mov
pop
sbb
pop
hlt
shrl
bound
jno
push
stc
shll
sbb
fs
enter
mov
add
cmp
out
loop
xchg
sub
fmull
jle
ljmp
fldl
push
in
sarb
push
insl
mov
xor
sbb
enter
push
ficompl
ss
sbb
test
cmp
repnz
mov
dec
subl
push
dec
jecxz
pop
mov
lods
add
movsl
sbb
jmp
enter
mov
mov
loopne
hlt
dec
repz
out
mov
jno
int3
cmc
into
aad
mov
pop
arpl
daa
andb
and
mov
sbb
add
jmp
std
shll
fdivl
sub
mov
push
rclb
dec
ss
imul
sub
mov
jns
pop
cmp
mov
es
mov
cwtl
in
out
popa
xor
ss
in
and
mov
or
lock
inc
mov
push
in
outsl
mov
mov
scas
xor
dec
sar
or
dec
aad
pop
test
out
xlat
aad
das
popf
lcall
int
pop
push
addl
sbb
lahf
ja
mov
scas
jl
les
mov
outsl
lahf
gs
push
mov
xchg
sbb
xchg
push
int
sbb
dec
test
outsb
jno
xor
mov
cmp
xchg
test
cmp
pop
sarb
notl
lods
and
nop
dec
mov
dec
out
pusha
in
mull
incb
add
repnz
outsl
int
mov
rcl
ja
sbb
mov
lods
es
push
and
sub
push
xor
ret
fwait
orl
adc
lock
dec
mov
pop
mov
pop
dec
ret
mov
ror
jb
repnz
lahf
inc
dec
pop
add
mov
daa
jno
xchg
sub
cli
or
stos
xor
clc
inc
mov
or
rorb
mov
mov
mov
xor
and
in
sti
aaa
push
pop
sbb
fnstcw
andb
loope
lret
repnz
mov
repz
faddp
mov
dec
cmc
leave
bound
and
xor
stos
jl
aaa
adc
cltd
mov
pushf
test
ljmp
sub
ret
add
movsb
inc
rorl
daa
cmp
mov
xor
mov
repz
mov
imul
int
cmpsb
cmp
pop
push
or
sub
jbe
in
sub
repnz
movsb
and
popf
xchg
ljmp
dec
inc
loop
cwtl
es
rclb
sbb
jmp
shll
hlt
dec
subb
ja
sub
push
xchg
mov
lods
gs
adc
lahf
mov
adc
ss
adc
cld
and
or
sub
mov
movsb
jns
sbb
orb
cwtl
mov
jno
pop
add
push
xlat
cld
inc
jg
loope
dec
imul
hlt
test
movsb
hlt
cwtl
stos
jo
les
xchg
test
outsb
jno
xor
das
push
cmp
mov
cmp
inc
cmc
inc
call
movsb
inc
mov
fidivrl
ficoms
push
and
jb
shl
arpl
jp
pop
out
sbb
and
sbb
icebp
scas
mov
call
stos
sbb
mov
pop
jle
imull
or
add
cld
sbb
jecxz
out
cwtl
jae
cmp
and
call
rcrl
xchg
testb
lahf
push
mov
fcom
add
addr16
xchg
sahf
into
inc
inc
cmpb
pop
ljmp
lds
mov
inc
inc
mov
push
inc
inc
stos
dec
loope
aam
or
test
sbb
enter
and
jb
test
iret
cmp
ja
movsb
jo
inc
hlt
out
push
xchg
loop
sbb
sbb
mov
inc
sar
fists
lahf
cmp
andl
mov
jae
loopne
popa
les
sub
popa
addb
mov
mov
lcall
sub
call
mov
and
sub
adc
divl
stos
je
and
pop
mov
push
sub
push
adcb
mov
pop
jnp
push
pop
subps
xor
jmp
iret
test
xchg
sbb
push
cmpsl
pop
sub
push
insb
xor
cmpl
xor
shrb
jl
or
insl
add
jecxz
cmc
cmpsl
mov
jge
ror
outsl
sahf
in
mov
sub
mov
push
mov
jle
cmpsb
outsl
ret
xchg
xchg
adc
icebp
cmp
dec
push
or
xchg
stos
lods
pop
adc
xor
push
add
test
shlb
cmp
mov
sub
dec
test
inc
mov
sbb
xchg
rol
lahf
mov
cmp
sub
jno
in
cmp
repz
repnz
push
inc
mov
add
sub
outsb
gs
dec
mov
xor
add
ficoms
mov
adc
sub
imul
adc
mov
outsb
iret
int3
xchg
or
mov
or
adc
push
and
sub
ljmp
jle
mov
cmc
mov
push
pop
ret
inc
jge
push
fs
xchg
scas
adc
jl
mov
push
in
dec
adc
jns
push
gs
mov
sub
xlat
inc
jb
or
sbb
shl
sbb
jo
mov
mov
push
cmc
jge
sub
nop
mov
scas
add
pushf
and
xchg
pushf
insb
rcl
nop
in
dec
cld
sbb
js
xchg
inc
mov
inc
jle
lods
jmp
sub
iret
push
pmaddwd
or
iret
test
xchg
and
sbb
inc
sbb
mov
mov
ret
push
push
adc
dec
jl
in
mov
lahf
shll
fstps
sti
mov
xor
mov
mov
pop
sub
xor
mov
adcl
push
adc
out
push
fwait
sub
mov
jp
shlb
loope
sbb
ss
faddl
loop
cwtl
or
lret
xlat
rcll
xchg
dec
adc
nop
dec
xchg
arpl
jl
imul
rclb
cmpsl
mov
adc
jnp
push
dec
push
mov
loop
addr16
dec
or
or
or
pop
adc
inc
dec
jnp
scas
sub
mov
rcl
scas
aad
inc
pop
ret
cltd
popa
lds
jns
sbb
mov
outsl
inc
mov
xor
inc
sbb
jno
or
pop
xor
movsl
lret
cld
leavew
std
je
fists
mov
jnp
and
cli
lcall
add
cli
fwait
mov
inc
push
aam
push
xchg
pushf
cmp
dec
mov
arpl
xor
inc
push
inc
ds
pop
sbb
pusha
fs
xchg
push
in
pop
mov
fst
mov
dec
lret
test
loop
rcl
and
shl
adc
js
mov
shl
stos
enter
rorb
mov
es
stos
push
mov
pop
lcall
popf
fisubs
lock
pop
or
mov
or
push
xchg
xchg
sbb
stos
addr16
push
adc
mov
scas
add
jge
ds
in
pop
dec
xchg
sahf
stos
add
dec
pop
xor
dec
inc
and
xchg
lahf
pop
aam
sub
pop
mov
bound
mov
pop
jp
outsb
pop
mov
xchg
ret
xchg
mov
outsb
push
loop
orb
push
dec
cmp
imul
jecxz
ljmp
aam
mov
out
dec
pop
mov
mov
lcall
sbb
add
enter
and
out
mov
xor
add
jno
jnp
in
xor
pusha
std
sub
inc
sub
ljmp
shr
pop
js
hlt
jb
movsl
movsl
ret
dec
inc
je
sti
jo
fwait
xchg
cmpsb
pop
cmp
pop
mov
push
pop
popa
lret
and
stc
rcr
xchg
adc
add
jg
xorb
pop
or
dec
jo
sbb
push
mov
adc
add
popa
jmp
out
inc
xchg
pop
push
sbbb
pop
push
or
lretw
sub
dec
mov
mov
mov
fs
jb
ljmp
mov
jno
ret
mov
jo
movsl
mov
inc
mov
lods
adc
add
mov
sub
xchg
icebp
mov
dec
jno
mov
xchg
jge
repz
es
test
pop
int
pop
xor
mov
mov
lret
mov
dec
xor
aas
stc
push
xchg
gs
cld
and
je
mov
cwtl
mov
ss
sbb
or
and
shlb
cmp
sbb
loop
mov
jo
bnd
xor
adc
add
mov
and
out
movl
xor
sti
mov
pusha
cmp
aad
call
add
out
mov
mov
movsl
addl
mov
adc
lret
xor
in
insb
inc
cld
ljmp
fwait
inc
lock
roll
mov
addr16
sbb
xor
xchg
xchg
and
and
insl
add
jne
jnp
bound
sbb
mov
pop
xor
inc
jns
jp
imul
add
out
and
pop
mov
mov
sbbl
pop
lods
hlt
inc
inc
rclb
mov
movl
gs
repz
mov
arpl
es
cmp
jg
adc
pusha
repz
popa
jbe
orb
xchg
and
xor
leave
enter
lods
or
aaa
cmpsl
push
cmp
cmp
stos
pop
movsb
dec
lret
mov
mov
push
push
pop
sbb
jbe
clc
mov
inc
sub
es
lcall
gs
cmp
jg
cmp
push
push
jbe
fnstcw
mov
sub
fisubrl
pop
pop
inc
fidivrs
scas
xchg
xchg
dec
xorb
mov
adc
out
adc
mov
mov
or
xchg
sub
repz
inc
out
aam
loope
and
push
repz
cmp
aaa
push
mov
mov
mov
mov
loop
enter
mov
sbb
jnp
add
jl
sub
scas
popf
pop
jns
jg
push
or
jns
dec
stc
mov
insb
and
mov
ret
test
cmpsb
lret
add
and
or
mov
lds
sub
iret
add
dec
lock
adc
xor
lods
push
dec
ljmp
mov
push
daa
data16
enter
mov
loope
mov
push
push
lock
pop
push
mov
lcall
out
jl
in
and
jo
andl
rorl
push
pop
add
iret
pop
mov
movsl
lcall
xchg
out
mov
icebp
sub
icebp
jae
push
xor
clc
dec
dec
dec
sbb
ljmp
pop
push
cmpsl
pop
shlb
dec
pop
movsl
jb
mov
test
xor
sbb
add
mov
std
std
xchg
mov
movsb
stos
add
xchg
rclb
jecxz
lock
dec
outsb
repnz
in
loopne
mov
inc
jmp
jb
adc
fwait
xchg
pop
imul
loopne
ja
sbb
push
repnz
push
sbb
mov
or
mov
mov
mov
xorl
pop
sarl
xor
outsb
pop
mov
cli
xchg
in
ljmp
jg
std
or
mov
add
fstpt
outsb
or
jnp
push
jmp
push
addr16
stos
mov
ret
movsl
aaa
sbbb
jne
stos
aam
mov
add
sub
loope
mov
lahf
stc
mov
sub
repz
pop
je
lret
xchg
mov
dec
inc
push
stos
mov
ret
xchg
aas
sbb
je
mov
lods
scas
shl
imul
lea
lret
jg
test
lods
adc
push
mov
pop
shrb
adc
adc
cltd
adc
mov
sti
js
cmp
sub
xchg
mov
jle
pop
ljmp
lret
ds
cs
xor
mov
repnz
sub
mov
arpl
imul
rolb
in
outsb
enter
lock
fs
imul
cld
pop
daa
xchg
push
pop
fdivs
mov
and
stos
fcompl
jl
xchg
xorb
xchg
dec
and
cli
add
or
mov
sub
out
aaa
add
into
test
mov
cmp
jne
out
xchg
scas
mov
mov
mov
ficoml
cmpsb
pushf
mov
call
or
mov
gs
lret
inc
mov
pop
stc
mov
xchg
ret
or
pushf
xor
es
add
int3
cld
or
addb
std
movsb
sub
pop
jo
stos
xor
push
jecxz
cmp
ret
hlt
scas
ss
jecxz
sbb
and
popf
lock
loopne
xor
les
mov
sahf
movsl
fwait
sub
popf
sti
mov
pushf
add
test
pop
add
sar
iret
dec
lret
inc
lcall
loop
mov
jo
inc
jecxz
cmpps
data16
inc
push
jo
sbb
hlt
mov
jb
aam
or
rcll
cmc
or
mov
add
mov
mov
pmaxsw
xchg
and
icebp
inc
jae
and
mov
sbb
push
mov
js
das
push
adc
jbe
push
xchg
and
adc
add
stos
arpl
or
xchg
sub
lret
xchg
rorb
push
add
mov
cld
ret
subb
int3
imul
pop
lods
fwait
jmp
lods
outsb
daa
out
iret
ds
jmp
xchg
inc
flds
lock
in
loopne
jnp
fldt
inc
push
lods
popa
popf
inc
xchg
testl
imul
je
iret
int3
notl
movups
int3
stc
mov
pop
imul
leave
xchg
lock
test
mov
cmp
daa
xchg
push
mov
fstpl
sub
aaa
adc
sub
inc
test
sbb
push
push
out
pop
loopne
pop
xchg
and
mov
int
push
sbb
push
testb
clc
fst
pop
adc
stos
loopne
lret
rclb
mov
scas
andb
out
pop
mov
mov
test
loopne
xchg
cmp
adc
or
out
and
movsl
or
adc
adc
mov
jnp
aam
sub
rcrb
or
stos
and
cmp
or
stos
adc
or
fsubl
in
pop
lret
jne
jmp
nop
shrb
int
testb
inc
dec
pop
leave
push
push
shrb
sbb
andb
pop
pop
adc
cld
das
mov
inc
into
pushf
cmpsb
imul
xlat
repnz
sarl
pop
outsl
or
sahf
lahf
popa
loop
push
fstl
mov
xor
icebp
adc
or
dec
loope
lea
testl
adc
xor
sub
pop
scas
and
push
mov
in
or
sbbl
test
lahf
mov
iret
adc
lcall
inc
or
dec
das
lods
jnp
inc
or
inc
pop
adc
sahf
add
das
pop
sbbb
test
out
inc
sbb
bound
gs
daa
mov
ss
mov
jo
ljmp
mov
cmpsl
and
xchg
mov
xor
cld
lods
cmp
push
fisubs
outsb
push
in
jne
cs
push
xor
push
mov
sahf
jl
jge
cmp
jl
das
mov
adc
pop
pop
push
lds
std
arpl
icebp
fs
insb
test
adc
loope
pop
fcmovnb
out
xchg
es
ja
xor
mov
aam
insl
pop
imul
mov
push
mov
aad
add
mov
xlat
and
ret
dec
shrl
ljmp
xlat
sbb
add
adc
sbb
jge
les
nop
and
and
lods
cmp
pop
jle
inc
mov
mov
inc
ljmp
outsb
and
jp
out
jp
cmp
popa
mov
nop
mov
mov
xor
inc
mov
or
test
and
leave
iret
test
push
cmp
mov
je
adc
outsb
sbb
test
xchg
ljmp
push
sbb
inc
push
jns
pop
mov
xor
fimuls
fstpl
mov
mov
xor
mov
shl
or
shrl
pop
inc
clts
outsl
rorl
int3
adc
sti
les
aaa
inc
sbb
push
xor
stc
sub
sarb
mov
pop
test
inc
or
mov
insb
rcrb
inc
cmpsb
or
cmpsb
mov
pushf
cmp
into
aad
add
insb
adc
cmpsl
push
xchg
xchg
and
insl
inc
leave
adc
cwtl
adc
push
inc
ffreep
cmpsb
outsl
xchg
adc
out
add
movsl
mov
pop
inc
repz
cmp
cmp
nop
sub
mov
out
call
push
sub
cwtl
mov
pop
sbb
and
dec
cmc
inc
mov
dec
fdivrs
inc
scas
push
or
test
pusha
jmp
loope
aas
popa
add
ret
dec
lods
xchg
fisubl
daa
addr16
dec
xor
cmpsl
cmp
movsb
push
mulb
dec
mov
rcll
loope
sarb
jnp
pushl
push
pop
aam
shlb
cmpsb
mov
mov
mov
sub
or
pop
cmp
jo
shrl
push
in
sbb
repz
adc
inc
lea
inc
or
mov
xchg
mov
sti
push
xlat
cmp
in
and
rclb
repz
dec
mov
mov
push
hlt
test
popf
imul
addr16
mov
ret
cmp
dec
pop
lahf
insb
rcll
pop
outsb
lods
ret
jg
xchg
mov
dec
dec
mov
mov
add
movsb
in
push
icebp
add
lret
mov
add
iret
mov
mov
mov
movsl
dec
cli
and
adc
mov
movsl
arpl
icebp
mov
mov
rcll
aas
ja
lods
lds
push
jbe
dec
rolb
daa
out
fs
cmpsb
fs
sti
je
stc
pop
adc
int3
movl
adc
aad
popf
es
das
mov
cmp
das
xchg
push
adc
inc
cmc
lods
pop
sub
stos
out
int
mov
and
jp
add
test
push
test
lods
repz
xchg
lock
xchg
lea
mov
adcl
and
cmp
clc
aad
add
xlat
adc
cmc
cmp
inc
aam
xchg
xchg
mull
mov
loope
lcall
fwait
xchg
iret
gs
mov
sub
mov
xlat
xor
sub
dec
jbe
pop
push
loopne
int
int3
dec
rcl
pop
fsub
mov
insb
cs
fidivl
call
popa
sub
add
arpl
dec
fcmovne
pusha
xor
js
loopne
xor
lds
xor
lea
mov
cmp
daa
pop
mov
sahf
jns
pop
pop
test
dec
mov
adc
ja
js
push
out
icebp
rcrb
dec
pop
dec
bound
jnp
sbb
mov
add
bound
mov
mov
ja
mov
mov
into
mov
outsl
lret
and
inc
xchg
or
pop
faddl
mov
lahf
in
lea
dec
jbe
adcb
sti
xor
fisubrl
or
mov
cmp
mov
mov
jge
and
jmp
into
pop
outsl
push
mov
sbb
sbb
dec
and
cli
dec
fldt
or
cmp
mov
das
xor
pop
add
add
cmp
inc
movsl
loope
repz
int
pop
popa
imul
or
push
adc
ret
and
enter
cld
es
loopne
insl
pop
dec
inc
lret
sar
pop
jp
sbb
loopne
sets
fisubrs
std
movsl
push
fistpl
xorb
inc
mov
leave
xor
mov
jg
outsl
testb
push
repnz
dec
sbb
jnp
shlb
xlat
gs
rcrb
sub
int
or
pop
dec
out
push
mov
cltd
dec
and
leave
stc
mov
test
add
xor
push
imul
push
insl
mov
push
inc
mov
xlat
js
inc
push
int3
sbb
cmp
shl
sub
inc
shlb
std
popa
sahf
aad
lea
jno
insb
rol
and
in
jecxz
pop
dec
mov
jmp
icebp
ret
push
ss
push
rcrl
jo
or
xsha1
cmpsb
lret
xor
xchg
cmpsl
cmpsl
stos
inc
ret
lds
inc
mov
imul
cmp
cli
pusha
push
icebp
lret
mov
jmp
mov
sbb
iret
sbb
pusha
cs
or
jp
sti
mov
pop
movsl
jae
dec
pushfw
outsl
push
aaa
incl
shr
lahf
adc
gs
jl
adc
hlt
scas
dec
addr16
outsb
popa
pushf
into
xlat
fcomp
mov
add
cmp
insb
insb
stos
shll
outsb
sub
imul
pop
mov
nop
pushf
or
outsb
es
mov
in
dec
dec
dec
iret
lock
xor
int3
pop
pop
mov
addr16
ja
cld
test
out
in
repz
je
xchg
xchg
adc
xchg
sub
into
cmc
cmp
mov
and
inc
outsb
mov
dec
out
shl
insl
popf
js
shl
xchg
mov
xchg
fwait
adc
push
sbbb
mov
aaa
in
push
test
xchg
mov
xlat
push
insl
mov
dec
scas
aas
clc
clc
inc
or
notb
aad
ret
or
les
mov
ret
cmc
cmpsl
jge
mov
outsl
in
mov
cmp
push
stos
and
push
cmp
fwait
mov
jno
add
es
push
mov
adc
mov
sbb
or
stos
outsb
loope
jecxz
and
sbb
or
andl
cmp
xchg
movsl
out
sub
mov
fcmovnbe
icebp
pop
sub
lds
imul
dec
xor
mov
shl
pushf
xchg
jecxz
mov
int
sbb
inc
pop
jns
mov
aas
outsb
hlt
dec
or
lret
insb
ret
addb
cmp
jle
cmc
enter
pop
into
push
sub
test
push
mov
rcrb
cld
adc
xchg
in
scas
add
roll
or
cli
scas
or
mov
fistl
sbb
push
in
cmp
test
cli
mov
and
mov
xchg
mov
xorl
mov
pop
mov
insb
imul
fs
mov
ret
jbe
idiv
cmp
mov
loop
int3
push
mov
scas
aas
mov
scas
mov
adc
pop
xchg
jo
fs
or
push
jb
insl
dec
push
inc
pop
ss
xchg
sahf
or
call
add
dec
cmc
call
inc
call
in
iret
cmp
or
mov
pushf
les
shll
inc
mov
mov
push
adc
xchg
push
fadd
add
orb
cmpl
cmp
dec
mov
xchg
add
cmp
pop
movsl
aad
stos
lea
xchg
dec
mov
in
mov
dec
fidivs
or
mov
or
and
cmp
aam
pop
xor
scas
in
xor
sub
mov
in
mov
pop
out
sub
or
mov
arpl
dec
mov
test
jb
not
pop
loopne
call
orl
adc
add
clc
stc
pop
mov
cmpsb
scas
cmp
sub
push
dec
leave
pushf
or
push
mov
and
dec
adcb
mov
fwait
add
test
mov
or
mov
pop
in
mov
pop
lds
imul
pop
jbe
dec
outsb
les
or
ret
sahf
hlt
popa
xor
sbb
add
out
mov
push
push
int
jl
out
out
mov
enter
jnp
mov
fs
sahf
roll
jmp
out
sbb
jmp
aas
daa
adc
dec
popf
cmp
outsl
inc
lret
int
int3
jae
jge
popf
push
and
insl
sahf
add
mov
fsubp
lock
xchg
out
mov
push
jle
pop
popf
lcall
dec
mov
dec
lods
jne
inc
in
insl
adc
xchg
scas
mov
iret
add
psubusb
shlb
xchg
adc
in
sbb
or
mov
insb
xor
repnz
sar
add
adc
fdivr
outsb
sub
sarb
and
adc
push
ds
movsb
dec
das
push
jo
cmp
pop
jl
mov
orl
pop
stos
adc
mov
gs
push
dec
mov
aas
cmp
lods
lahf
add
addr16
mov
leave
sub
rorl
push
jo
sbb
pop
mov
insb
xor
cmp
stos
lret
dec
jnp
test
out
sti
cmp
dec
add
loopne
xor
test
movsl
addr16
sub
iret
xchg
sbbl
lock
mov
adc
add
cmc
lahf
pop
pushf
sub
and
bound
mov
in
mov
rcl
jnp
mov
lret
test
jle
jg
adc
out
pop
out
bound
mov
cmpsb
mov
mov
xchg
xchg
in
fsubp
push
lods
into
jg
xchg
dec
imul
call
rcrb
push
or
xor
sub
inc
rorb
or
shlb
or
rol
pop
outsl
ja
inc
sbb
jle
mov
loopne
imulb
pop
or
aam
push
mov
std
cmp
loopne
or
or
adc
orl
cltd
sbbb
imulb
mov
loop
lods
pop
outsb
mov
cmpsb
hlt
stc
push
movsb
js
cld
es
and
dec
mov
dec
dec
add
xchg
xor
dec
xchg
jp
xchg
jbe
dec
jp
insb
mov
fbstp
mov
loopne
mov
push
popl
loope
fstpt
out
sti
jb
xchg
mov
lods
dec
mov
push
js
push
shll
sub
insb
bound
mov
mov
pop
pop
mov
ficoms
dec
test
sbb
jo
shlb
rorb
lcall
int3
push
lock
lahf
jnp
paddw
shrl
bound
inc
or
add
cmp
xchg
push
js
add
loope
dec
jmp
in
xor
imul
addps
jb
pop
lds
xchg
call
call
or
dec
cltd
sbb
movsl
mov
inc
xor
dec
inc
lock
sbb
aam
dec
pop
enter
mov
fucom
sbb
dec
ficompl
mov
xchg
lods
sub
scas
loope
cwtl
sub
ss
dec
cmp
xchg
cmpsb
je
push
sbb
inc
push
dec
inc
sub
push
mov
ja
mov
sub
sub
push
repnz
dec
aam
inc
jb
cmpsl
jmp
lahf
sub
iret
outsb
xor
mov
iret
fists
add
sub
out
push
mov
int
mov
jns
cs
xor
cli
adcl
pop
sarl
mov
push
test
fninit
gs
xchg
lods
filds
repnz
mov
push
mov
or
jb
lock
outsl
ja
repz
mov
ja
es
shl
ss
scas
lods
push
rorb
aas
pop
dec
xor
dec
hlt
or
sbb
xor
mov
pop
lods
fwait
xchg
jl
lahf
push
pslld
ret
ficompl
cmp
imul
or
jnp
out
add
dec
ljmp
cmpsb
sub
jbe
pusha
stc
pusha
mulb
adc
add
cmovnp
sub
jae
stc
pusha
cmp
loopne
mov
cwtl
mov
int
orb
or
dec
imull
push
mov
jb
and
xlat
in
scas
std
xlat
adc
mov
ret
mov
inc
push
outsb
xchg
pop
xor
lds
sub
cmp
jbe
add
test
pop
mov
test
lahf
daa
mov
ja
jmp
arpl
cmp
repz
inc
lahf
mov
mov
aam
xchg
sbb
call
aaa
and
add
sbb
xor
xchg
in
inc
mulb
lret
aaa
sub
loop
push
push
pop
lcall
pop
jmp
stc
loopne
lcall
push
lcall
mov
sub
ja
scas
mov
jo
mov
jmp
mov
push
jno
xchg
xchg
xchg
scas
add
scas
call
xor
mov
fiaddl
xchg
lahf
and
into
add
dec
dec
adc
ret
stos
sub
je
pop
test
ret
and
lock
pushf
lds
or
jns
into
lock
subl
and
loopne
or
or
pop
mov
ss
xchg
lret
mov
hlt
jg
movl
popf
aam
push
add
popf
cmp
scas
and
xchg
mov
addl
fildl
in
push
loopne
out
push
pop
ret
pop
stc
pushl
push
mov
fimuls
inc
mov
test
imul
jl
leave
fucomp
daa
repz
outsl
lahf
ljmp
xor
dec
pop
lret
push
mov
lahf
xchg
jo
inc
pop
mov
in
mov
ljmp
mov
and
in
cmpl
pop
sub
lcall
sbb
lods
mov
das
orb
push
xor
out
adc
cld
and
fdivr
icebp
push
test
clc
int3
xlat
jge
jp
jnp
adc
or
mov
xchg
mov
mov
xlat
xor
notb
sub
sbb
pop
sbb
mov
test
call
xchg
vmovdqa
jb
or
xor
mov
fisubrs
or
ret
lods
cmpsl
rcr
jecxz
mov
mov
and
sbb
sub
int3
mov
mov
mov
or
xchg
cmp
pop
outsb
dec
sub
cld
and
sbb
xchg
andl
in
test
xchg
loopne
loope
cmp
aaa
and
cmpsb
enter
mov
es
sub
or
test
sub
and
or
mov
lock
in
xorb
cld
lahf
hlt
inc
cmp
mov
push
mov
fcoml
xchg
mov
adc
push
adc
push
das
sbb
popa
rclb
jnp
mov
push
xor
cmp
jns
mov
cmp
mov
dec
sbb
mov
mov
sub
jmp
push
nop
sub
jmp
xchg
out
jnp,pt
pop
cmp
notb
mov
sahf
or
ljmp
xchg
add
jg
addr16
addr16
xor
sahf
dec
stos
push
push
sub
xor
jns
pop
out
in
cmpb
inc
mov
xor
jl
aad
pop
push
or
inc
ljmp
nop
push
sbb
mov
pop
movsb
xchg
mov
push
jnp
dec
sbb
aaa
jp
leave
lods
inc
and
mov
push
mov
mov
dec
jp
cmp
cmp
mov
push
and
xor
cmp
push
stc
mov
loop
cltd
push
stos
sbb
push
int3
popa
sub
and
leave
mov
sbb
add
dec
lahf
in
and
mov
fbld
xchg
inc
das
xchg
dec
sbb
sub
inc
push
adc
ficoms
in
nop
and
adc
mov
pop
enter
mov
stc
sarl
jp
pop
jo
jns
fcomps
movsb
rcrb
adc
cli
jnp
rol
shr
fbstp
test
sbb
das
mov
cmp
or
mov
sub
leave
roll
push
scas
insb
divl
scas
push
shl
das
xor
adc
arpl
mov
xor
aas
in
mov
cltd
mov
imul
das
ljmp
test
push
cmp
push
fstl
mov
sub
mov
inc
inc
sarb
sbb
fcompl
cmp
mov
xchg
cmpsb
shrl
push
stc
mov
sbb
add
lods
pusha
icebp
lds
mov
cli
sbb
xor
repnz
mov
jmp
andb
cmc
int3
push
int3
cmpsl
mov
outsl
or
rorb
imul
cwtl
cmp
mov
jno
popa
out
leave
mov
jae
mov
mov
movsb
add
jp
ret
push
xor
sbb
add
cltd
popa
dec
cmp
mov
sub
icebp
clc
push
fwait
loop,pn
xchg
test
pop
cmp
dec
cmp
in
mov
mov
mov
mov
push
call
add
push
mov
lea
jle
cmpsl
lahf
mov
scas
mov
fwait
inc
push
xchg
jle
lds
mov
jae
mov
push
insb
sub
andl
add
and
es
lods
inc
jmp
int3
out
icebp
data16
sbb
mov
mov
mov
add
addr16
loop
or
gs
adc
inc
mov
pop
cmc
adc
stos
xchg
jl
mov
in
mov
pop
addr16
out
mov
adc
out
test
mov
xchg
inc
insb
rcrb
je
cmp
insb
cld
jo
stc
jl
fldt
jo
or
cmp
jae
mov
cmpsl
jp
cmpsl
sbb
dec
lock
insb
push
std
xchg
shl
sti
jno
lret
inc
cmp
dec
loop
lds
ret
or
enter
rolb
insb
pop
or
jmp
ss
push
clc
call
push
les
mov
xor
jmp
fdivr
iret
pop
xor
mov
pop
mov
cmpsl
inc
mov
jb
inc
push
mov
push
int3
push
pop
test
jl
out
out
fwait
sbb
mov
popf
push
push
daa
and
pop
mov
in
aas
and
fdivrs
adc
sbb
pop
mov
je
adc
into
fbstp
fidivrl
pop
xor
bound
dec
and
loop
outsb
out
cmc
int3
shl
inc
ret
test
dec
pop
mov
cwtl
xchg
mov
push
lret
or
add
xchg
pop
add
xlat
push
shr
push
fdivs
movsb
fdivr
pop
jne
hlt
out
pop
lahf
pop
inc
aaa
fs
call
xchg
ljmp
loopne
jns
mov
sub
inc
bound
outsb
fiadds
movsl
pushf
out
sub
int
inc
subb
fistl
lds
lods
sbb
mov
sarb
adc
inc
push
mov
mov
jbe
xor
fcmovnbe
shlb
sub
lock
push
cli
sub
push
imul
mov
sahf
and
and
xchg
test
fsubs
popl
lds
push
or
pop
push
sub
cmc
mov
dec
jno
repnz
lcall
cld
repz
pusha
xchg
adc
fistl
jp
sbb
sarl
or
call
out
popa
in
lea
jmp
fistpl
pop
mov
loope
ret
ret
mov
jo
fcmovne
jmp
add
loop
dec
pop
flds
test
ja
mov
add
xchg
cmp
and
daa
pop
mov
and
insb
lock
ss
pop
data16
stos
or
gs
jle
popf
fxch
mov
xor
mov
jae
sub
rorl
jnp
rcll
rolb
mov
pop
mov
icebp
sub
div
lea
jns
rorb
dec
mov
loope
ss
mov
push
loopne
mov
push
push
add
mov
int3
popa
lods
scas
jmp
aas
or
mov
dec
sub
pop
mov
iret
es
lret
sub
or
mov
enter
pop
sbb
sarl
je
pop
fisttpll
test
xchg
in
jle
jmp
sub
xor
sub
fdivs
jbe
pushf
adc
pop
mov
lahf
and
insl
cmp
int3
mov
mov
mov
andl
sub
jne
popa
adc
xchg
in
inc
cmp
in
es
or
shrb
mov
leave
sahf
adc
inc
mov
je
push
ds
movsb
cwtl
pop
es
xchg
mov
xor
adcb
xchg
mov
pop
int3
mov
fdivl
fmull
shrl
loopne
cld
fcoms
in
push
xchg
xchg
xchg
xor
test
add
push
mov
push
outsb
das
hlt
arpl
clc
out
jp
insb
jae
mov
and
xor
sub
xchg
dec
testl
sahf
lahf
mov
add
in
sub
popf
andb
sub
jns
movsl
mov
fnstcw
inc
out
int
test
call
mov
jecxz
mov
add
sbb
mov
push
cwtl
in
mov
repz
in
and
arpl
xchg
out
and
add
jnp
and
adc
test
cmp
push
popa
jo
pop
jp
mov
movsl
pusha
lock
mov
mov
xchg
mov
aam
cmp
push
cmc
adc
addr16
pop
pop
or
in
lahf
mov
out
out
inc
lea
out
sub
push
mov
lret
lock
leave
adc
jecxz
cmpb
inc
or
cmc
loope
loope,pt
sahf
mov
imul
out
mov
lods
and
test
pop
mov
bound
add
and
pop
xchg
cmp
int
dec
mov
inc
scas
sub
stc
or
hlt
mov
cmp
jmp
aad
dec
out
sub
iret
dec
divl
inc
dec
cmpl
push
ret
cmp
rorl
repz
pop
scas
push
jmp
rep
mov
dec
push
rolb
bound
imul
mov
push
pop
cmp
popf
in
nop
xchg
fldl
orl
insl
mov
add
inc
jae
repz
stc
cmpsl
call
mov
jbe
cwtl
aam
xchg
je
jl
imul
mov
fistpl
out
xor
sub
and
into
or
adc
negl
repz
jg
enter
cmp
fldz
sub
jle
push
cltd
fwait
adc
and
loopne
sbb
cmp
jns
popf
enter
aaa
inc
out
jo
pop
ret
call
jl
push
mov
fistps
rolb
and
xchg
mov
sub
stc
xor
loope
and
adc
loopne
mov
repz
inc
cmc
mov
mov
loopne
sbb
pushf
stos
call
daa
outsb
push
jmp
negl
sub
ret
sub
inc
out
jb
lods
and
and
inc
ljmp
aas
out
pop
pusha
out
lahf
mov
and
cs
add
imul
inc
push
in
xchg
out
shl
decb
adc
add
lds
es
mov
rolb
sub
filds
push
inc
mov
xchg
outsl
sbbl
mov
push
push
iret
pop
sub
and
mov
popa
shl
lock
fcmovnb
mov
cmp
lcall
aas
jge
outsl
mov
jo
push
aam
dec
push
stc
xchg
cmp
sub
cmp
jnp
push
mov
mov
sub
lret
mov
popa
movsl
push
mov
out
aad
xor
lret
sbb
inc
mov
in
xchg
test
and
or
or
aaa
adc
dec
jne
imul
pop
mov
jle
sub
jno
ja
xchg
ss
dec
fdivl
fimull
push
jb
jo
pop
ss
in
or
jns
sahf
push
jl
jb
adc
data16
xchg
mov
xor
addr16
cmpl
or
imul
mov
psubw
nop
and
insl
sub
inc
pop
loope
mov
mov
movsb
clc
loopne
incl
mov
ja
sarw
pop
test
aaa
daa
outsl
and
mov
adc
sbbb
jno
das
out
pop
lods
sbb
sbb
xchg
or
mov
xchg
out
fs
sbb
lods
adc
cmp
push
pushf
add
inc
cmp
sbbl
xchg
inc
cmp
jmp
mov
fwait
imul
inc
movsl
lret
rcr
out
sbb
pusha
test
shrb
into
push
addr16
xchg
xchg
roll
xor
inc
pushf
jb
loope
ja
jge
inc
imul
xchg
scas
test
cmpsl
dec
in
jecxz
sub
adc
sub
enter
sbb
push
xor
inc
mov
add
subl
xchg
mov
adc
push
push
jg
test
cld
mov
jno
mov
lea
jge
scas
movsb
adc
jg
iret
insb
jb
mov
mov
adc
sti
or
outsl
ss
shl
add
pop
push
jne
ss
je
xchg
jmp
mov
imul
mov
cmp
jl
mov
xor
jg
dec
mov
mov
lock
adc
js
loope
scas
or
push
out
pusha
int
fimuls
int3
bound
or
das
das
jmp
jno
sub
cmp
jae
mov
adcl
inc
mov
push
out
cmp
cwtl
or
clc
leave
mov
dec
inc
xor
pop
psubd
mov
lods
ret
test
out
mov
mov
insb
loopne
fnstenv
adc
insl
lods
pop
mov
stc
push
cltd
je
add
mov
push
cmpl
mov
mov
sti
outsb
push
ds
adc
and
dec
test
mov
pop
fnsave
test
jg
ret
mov
jns
lock
sbb
test
mov
push
mov
imul
push
outsl
xor
notl
xchg
pop
push
jecxz
cmp
mov
mov
fidivl
push
jno
xor
xor
leave
aam
jmp
test
jo
decl
std
ret
mov
inc
jp
aam
push
adc
andb
icebp
cli
fwait
jmp
mov
loopne
dec
nop
call
sti
push
loope
lcall
mov
adc
sbb
and
and
cmpsl
jb
movsl
ja
cmpl
or
ds
xchg
in
mov
sbb
ret
stos
push
jo
sbb
loop
out
xchg
iret
js
mov
stos
in
xchg
je
add
dec
fistl
aas
hlt
cli
loope
jge
pop
or
cmp
pop
pop
adc
dec
pushf
xor
adc
int
pushf
mov
cmp
mov
dec
xchg
cmp
dec
fstpt
scas
shl
fisubrl
cmp
xchg
push
test
mov
pop
sbb
push
lock
enter
jmp
dec
sahf
jo
pop
mov
and
test
lods
arpl
aam
stos
or
sbb
sbb
or
in
arpl
ficomps
popf
pop
cmp
xchg
jno
jae
push
icebp
outsb
dec
sbb
jne
pop
inc
out
mov
dec
jg
push
lahf
jg
sbb
addb
xchg
imul
jnp
or
jns
in
stc
inc
add
cld
adcl
test
add
stos
pop
enter
mov
dec
xlat
cld
push
subl
pop
aam
mov
push
sub
mov
mov
mov
mov
pusha
out
std
cmpsb
push
pop
and
push
push
popa
cmc
shrb
pushf
push
push
loop
sub
mov
jp
mov
xor
mov
mov
sbb
outsl
cli
fwait
push
iret
sbb
dec
cmpsb
xchg
mov
xor
enter
inc
scas
in
sbb
or
add
xchg
fldl
in
mov
mov
push
movsb
je
stc
xchg
dec
in
out
loop
ret
stc
fimuls
in
mov
xchg
sbb
lahf
add
call
out
fsubrs
and
jo
sub
adc
insb
inc
clc
add
sarb
lock
hlt
push
fldl2e
testb
xchg
arpl
mov
lds
and
fldenv
sbb
cmpsl
pop
cmp
fwait
aam
xchg
shr
xor
adc
das
cmp
sbb
mov
inc
xchg
or
repz
imul
ljmp
and
cmp
cmpsl
sub
rorl
out
push
sub
divl
push
aas
adc
jnp
int3
pop
inc
push
push
xchg
pushf
daa
mov
mov
xor
pop
cmp
dec
push
addr16
add
pop
xor
cmc
sub
data16
xchg
stc
xor
in
push
out
std
dec
fdivrl
out
xchg
or
and
addr16
aad
sbb
jmp
push
outsl
push
lds
ret
pop
scas
pop
test
jae
pop
mov
pop
insl
sbb
add
dec
mov
add
aaa
and
dec
mov
mov
or
stos
mov
dec
dec
jecxz
lret
test
loopne
stc
mov
pop
hlt
out
test
cmp
jns
fistps
adc
or
cld
aas
cmp
dec
cmpsl
jmp
pusha
lods
cltd
mov
mov
inc
mov
add
ret
pop
xchg
inc
mov
add
cmp
adc
lea
cli
cmc
cmpsb
loopne
add
test
out
pop
pushf
mov
ss
repnz
int3
nop
mov
aam
fwait
leave
ficompl
iret
icebp
int3
mov
leave
mov
adc
dec
std
movsb
xor
jg
mov
in
xor
mov
push
not
sarb
and
bound
mov
jl
push
push
movsl
mov
xchg
ss
lret
int3
lea
xchg
inc
add
popa
aam
xchg
sbb
fiadds
out
or
dec
dec
dec
in
mov
push
cltd
push
mov
push
cltd
jnp
lds
xchg
in
xchg
fnsave
or
shl
dec
data16
sbb
iret
or
shll
xlat
mov
jge
adc
rcrb
fs
iret
push
je
notl
test
andl
dec
xchg
pop
cmpsl
out
cmp
test
cmpsb
add
push
and
xor
leave
or
dec
popf
stc
test
lods
push
data16
sti
mov
testl
fldcw
mov
mov
je
seta
xor
fstps
aas
dec
or
fs
and
int3
dec
push
xor
and
aad
stos
outsl
xorl
or
mov
xchg
mov
xor
les
in
pop
add
lods
popf
add
jl
aad
in
push
jle
mov
mov
adc
inc
push
mov
pop
ficompl
fisubrl
push
test
or
fdivrp
jge
daa
mov
inc
lods
pop
mov
testb
cli
inc
rcll
add
lret
aad
xchg
inc
out
inc
adc
aad
jle
leave
rcrl
in
mov
cltd
loope
iret
jg
rcrl
mov
hlt
xlat
xchg
pop
mov
out
and
xchg
loopne
das
jae
mov
mov
in
and
jbe
jecxz
rcrb
das
das
mov
fisttpll
cmp
rcrb
dec
and
popf
aam
mov
cmp
pop
cmp
lock
in
cltd
pop
xor
call
push
lock
sahf
sub
loop
add
jl
test
loop
rorb
or
sub
pushf
test
xorl
ljmp
push
pop
aas
dec
cs
das
lea
and
std
iret
inc
scas
loope
xor
or
data16
pop
adc
movsl
xchg
dec
push
popf
daa
push
dec
test
jmp
inc
or
in
mov
xchg
cmp
ljmp
lock
in
cltd
imul
or
test
xor
hlt
xchg
fiaddl
or
lahf
cli
inc
cwtl
or
sbbl
mov
pop
mov
aad
fdivl
mov
fisttps
xchg
test
adc
pop
pop
int3
mov
pop
call
aas
mov
and
sti
ficompl
stc
xor
pop
jne
stc
out
loope
dec
loopne
adc
lea
fildll
cmp
pop
jmp
push
cmp
xor
out
jge
xchg
jne
mov
dec
stos
sub
test
imul
mov
pmaxsw
fisubrl
mull
js
fidivl
fdivp
lods
movsl
push
pop
loope
push
add
pusha
mov
scas
fstpl
enter
mov
push
jmp
add
lods
inc
dec
negb
loope
xlat
adc
lahf
iret
inc
sbb
cmp
pushf
and
mov
xlat
xchg
fsub
testb
cmp
adc
add
add
loope
movsl
sub
inc
lcall
jle
pop
in
mov
cld
clc
adc
cmp
addr16
movsb
out
cmp
test
dec
in
mov
movsb
pop
cltd
mov
or
push
cmpsb
into
enter
xchg
or
or
ss
dec
iret
push
imul
rorl
stos
sbb
pop
jo
andl
loopne
hlt
imul
inc
repnz
cmp
mov
push
mov
xchg
dec
push
loop
test
mov
push
sub
jns
fisttpl
pop
jne
stc
pop
fimuls
push
or
outsb
jo
pop
push
mov
inc
push
scas
bound
push
pop
rol
incb
xlat
pop
test
mov
push
push
sub
ljmp
xchg
rcrl
xchg
cmp
and
cmc
into
push
mov
mov
and
pop
mov
adc
cmpsb
cli
call
mov
cwtl
test
adc
jne
and
fwait
mov
push
mov
jo
addr16
rcl
insb
shlb
lret
ja
jecxz
sub
adc
loopne
lret
cmpsl
push
pop
push
shl
dec
fwait
icebp
out
mov
push
push
aaa
or
xor
in
cmp
repz
std
shrb
sbb
push
add
cmpl
dec
jp
pushf
lret
ds
shll
cmpsl
imul
lds
sub
push
lea
pop
movsb
push
mov
gs
inc
imul
sbb
xor
fsubrp
fcmovbe
lods
lret
or
imul
fidivl
push
mov
xchg
js
xchg
stos
mov
test
mov
cmp
jle
lret
cmc
sub
mov
and
dec
pop
loope
push
fistl
jns
dec
and
adc
ja
loopne
es
jne
jmp
pop
sub
jge
movhlps
insl
rcrb
hlt
mov
pop
jae
mov
call
in
fisubl
and
in
ljmp
add
and
scas
pop
int
mov
xchg
sbb
sbb
xor
movsb
pop
push
push
xchg
shlb
push
inc
cmp
jl
cmp
mov
in
mov
pop
pop
aaa
in
loop
pop
push
xchg
add
addb
test
dec
and
into
outsl
outsl
mov
xchg
inc
push
js
sub
enter
jecxz
cmp
jge
test
add
stos
hlt
jno
stos
cltd
jge
push
out
inc
jle
ret
jae
mov
cld
add
cwtl
pop
test
pop
dec
sub
cmc
add
and
add
pop
lds
imul
stos
test
push
js
icebp
dec
lods
sub
js
out
jge
sub
adc
lret
or
fwait
add
lods
lret
outsb
jae
pop
or
pop
xrelease
and
sub
adc
dec
insl
loop
xchg
jg
ljmp
shll
gs
in
lahf
mov
cmp
jecxz
cmpsb
popa
rcrl
pop
mov
cli
pop
inc
inc
xor
addl
insl
rolb
pop
and
imul
and
dec
mov
mov
mov
decb
cmpsl
cld
arpl
mov
fwait
popa
daa
pop
fs
rol
jno
mov
mov
popf
inc
pusha
icebp
int3
add
sbb
lret
aas
and
in
stos
ret
cmp
and
or
lock
sub
sub
mov
loopne
inc
repz
out
pop
jle
stos
xchg
mov
rol
mov
push
xor
pop
jno
lods
out
or
pop
call
das
mov
test
rcrl
or
jno
xor
inc
ljmp
cwtl
repz
lea
test
inc
fstps
mov
movsl
mov
fists
out
lret
add
leave
hlt
out
or
movsl
push
fisubl
jecxz
scas
sti
xor
xorl
xor
push
ret
and
mov
insb
inc
xchg
movsb
roll
in
lcall
push
pop
in
pop
shl
ret
les
pop
imul
xor
dec
mov
lahf
and
lods
mov
imul
enter
jmp
aas
sub
rcrb
ljmp
outsl
sub
fsubrs
insb
add
mov
inc
out
out
jae
xchg
add
pop
cmc
or
filds
dec
mov
mov
sub
xor
dec
fwait
outsb
in
ds
fmul
hlt
push
lods
pop
or
loopne
je
arpl
adc
dec
mov
and
or
mov
idivl
sbb
mov
pop
shlb
cmp
jge
xor
pushf
push
std
pop
push
sbb
lret
nop
idivb
shrl
dec
mov
loop
fstps
pop
dec
cltd
leave
ljmp
iret
test
dec
loope
lret
cmp
dec
fisttpl
stos
scas
jne
dec
fstpl
jno
cmp
lock
jecxz
movsb
enter
fidivrs
leave
sbb
call
dec
flds
rorb
daa
dec
sbb
cmp
rol
jo
rorl
popf
pop
pop
sbbb
and
das
dec
push
or
xor
cmc
xlat
sbb
and
sbb
mov
add
out
jb
test
xchg
sub
lcall
xor
jmp
test
pop
es
mov
inc
icebp
aaa
into
sbb
sub
int
mov
dec
rorl
pop
jge
movsl
xchg
mov
add
jecxz
push
cmc
mov
or
or
fisubl
aam
xchg
mov
push
mov
mov
fs
cmpsl
cmp
adc
push
or
mov
jo
lea
mov
or
dec
daa
mov
fsubl
pushf
idivl
movsb
mov
dec
mov
xor
dec
in
ss
fdivr
test
adc
enter
psraw
dec
jl
outsl
fcmovnbe
sbb
sbb
in
and
and
dec
ja
fcom
push
mov
rorl
inc
leave
mov
addr16
lea
in
jl
rorb
repnz
nop
and
dec
fstpl
mov
test
andl
cmp
adc
cltd
enter
aas
push
ret
int3
scas
adc
ret
mov
mov
and
ret
dec
dec
sbb
cmp
outsl
sbb
into
shlb
iret
pop
mov
out
mov
xor
imul
mov
sti
mov
aad
add
mov
push
xchg
adc
in
jno
pop
cltd
testl
xor
sub
or
das
cmc
push
aam
add
fidivl
fdivl
loop
daa
or
sub
push
ret
pop
add
mov
jg
aad
fs
fcmovb
inc
jmp
arpl
repz
sub
fbld
stc
pop
sub
les
roll
mov
mov
mov
adc
and
repnz
push
es
mov
jmp
stc
push
push
mov
xchg
insl
movsb
add
jae
movsl
push
lret
and
mov
test
sbb
push
popa
adcb
sbb
pop
aas
dec
repz
jge
insl
popa
mov
or
test
fcoms
mov
clc
ffreep
test
insb
clc
scas
xchg
imul
fistl
addb
ret
cs
scas
pop
adc
ljmp
stos
xor
fs
and
dec
dec
sbb
xor
ret
or
fisubrs
testb
jne
sub
in
or
repnz
outsl
arpl
and
fst
ret
mov
xor
nop
jno
fsubl
daa
pop
adc
and
lret
mov
cmpsl
mov
mov
and
cmp
add
jns
adc
loope
jmp
push
subb
mov
popf
push
add
pop
push
js
xchg
mov
push
mov
mov
mov
xor
xor
sbb
dec
into
and
je
mov
in
aas
scas
add
fincstp
sub
xlat
loop
mov
push
das
xlat
in
lcall
stos
or
sbb
sub
out
push
xor
enter
or
loope
sbb
xchg
mov
divb
aaa
lcall
xchg
cmp
sbb
fucomip
xor
scas
popa
push
insb
cmc
jmp
cmp
mov
scas
jae
and
jbe
xchg
push
stc
mov
sub
cmpsb
lret
inc
mov
inc
stos
dec
stos
negl
hlt
fnstenv
outsb
stc
adc
test
lret
pop
pop
pop
sub
mov
and
scas
out
or
adc
movsb
sub
jecxz
stos
and
movsb
mov
test
dec
mov
leave
lahf
out
adc
leave
pop
pop
hlt
add
cmpsl
sub
cmp
pushf
add
mov
dec
ljmp
out
outsl
push
mov
ret
push
xor
push
stos
lret
mov
add
xor
lret
push
mov
adc
arpl
out
dec
xchg
mov
andnps
stc
jb
add
pushf
ret
ret
fcomi
sub
int3
std
jne
pushf
pop
inc
in
jo
jb
lock
into
jbe
xchg
rcl
iret
lods
ret
insl
mov
push
xlat
out
and
adc
call
and
loope
fmul
aam
sub
xor
ret
insl
cld
push
mov
iret
sub
adc
out
loop
xchg
or
mov
js
or
jns
add
or
inc
xor
hlt
loope
fcmovu
movsl
iret
lret
jb
and
sub
pop
sti
pop
and
sti
ficompl
jnp
pop
push
and
cmp
sbb
scas
xchg
stc
fisubrs
test
push
sbb
sub
push
fcomip
ret
dec
jno
sti
adc
cmp
inc
or
and
xchg
and
dec
mov
or
sti
out
stc
and
dec
movsb
fisubrs
pop
cmpsl
push
movsb
shlb
mov
push
mov
xchg
xor
xchg
test
js
mov
jl
cmp
jne
dec
call
aaa
mov
pop
cmp
cmp
pop
in
pop
pop
andb
stos
cmp
aad
repz
push
fistl
insb
sub
les
cltd
dec
into
xchg
cmp
in
cltd
push
jo
pusha
and
mov
mov
jp
ds
scas
sub
jmp
insl
lret
popf
and
cmp
push
sbb
jg
fwait
mov
cmc
pop
xor
mov
cmp
fwait
clc
loop
negb
mov
dec
mov
push
rorb
leave
mov
jge
nop
fadds
dec
test
mov
cmc
pusha
je
cmp
shrl
rcrl
add
cmpl
mov
mov
push
fimuls
xor
int3
cmp
push
fisubrs
xchg
lahf
lock
jecxz
push
add
jno
dec
fbstp
andb
mov
mov
jo
jae
jb
outsl
std
and
mov
inc
idivl
lods
or
aam
lock
lods
cmp
and
xchg
mov
push
dec
lods
lcall
jge
lods
iret
lcall
add
pop
or
inc
sbb
dec
sub
mov
mov
sub
lret
add
ljmp
xchg
add
loopne
sbb
pop
insb
jb
jl
mov
fsubrl
shl
das
bound
cmp
sub
dec
outsb
mov
push
xor
or
add
jbe
ds
std
addb
das
lods
mov
mov
or
fdivp
and
xchg
aas
jne
push
lock
addl
dec
xchg
aaa
xchg
adc
repz
jno
leave
cmp
fistpll
inc
inc
mov
push
add
jae
inc
ja
rolb
and
mov
sub
lcall
add
lcall
push
pop
sub
and
pop
xor
sub
inc
mull
xor
les
pushf
jg
lds
pop
nop
out
outsl
fimuls
fistl
call
les
xor
xchg
loope
fsubl
fwait
out
repz
jle
aad
push
adc
das
rcrb
jnp
mov
push
xor
lret
jle
rcr
popf
imul
push
clc
pop
cmc
sub
jmp
jecxz
mov
jecxz
andb
push
push
data16
ss
cltd
cli
bound
dec
push
push
movsb
pop
fs
pop
es
xchg
push
sbb
out
nop
jecxz
mov
sub
lcall
push
push
shll
mov
jno
and
adc
dec
mov
repnz
or
mov
cwtl
mov
cmpl
sbb
jecxz
jge
inc
jno
sub
mov
cli
enter
pop
pop
push
dec
inc
push
aam
dec
xchg
mov
dec
pop
in
dec
jne
into
es
imul
or
les
or
mov
pop
or
mov
addr16
jns
loopne
lahf
mov
icebp
cld
push
int
mov
push
movsb
outsl
jp
or
mov
repz
mov
loopne
jae
lcall
or
mov
out
mov
push
std
jns
loopne
lahf
mov
pop
xlat
div
push
stc
testl
inc
loopne
repz
mov
mov
aaa
or
out
sub
test
mov
out
mov
push
std
jns
loopne
lahf
mov
adc
dec
test
mov
into
inc
call
and
scas
mov
pop
sbbb
pop
sub
ja
sub
xor
cmp
movsb
outsl
jp
or
mov
repz
mov
idivl
pop
or
lds
nop
sar
push
ret
cmp
jmp
cmpb
fisubrl
push
mov
ds
pop
mov
fcomip
iret
pop
shlb
dec
sbb
sub
ret
fucomi
mov
and
bound
and
lea
jmp
loopne
mov
mov
cmpb
fdivrs
loope
cmpb
sbb
setns
loop
mov
aam
aam
lcall
andb
cmp
pop
xlat
div
push
stc
testl
inc
loopne
repz
mov
stos
loop
out
daa
and
cltd
rcrb
pop
in
ret
dec
jmp
out
sbb
and
and
lret
lahf
xor
jle
daa
add
sbb
lret
repnz
mov
jg
loope
fsubrs
and
mov
sahf
inc
sbb
mov
aaa
scas
iret
dec
pusha
pop
lret
xchg
push
push
lock
xor
je
xor
mov
and
sub
sarb
out
adc
sbb
ret
das
xor
lahf
xor
loop
push
and
loopne
mov
dec
cmp
icebp
jmp
adc
add
in
stc
jne
add
stos
cmp
je
inc
in
push
mov
repz
call
gs
xchg
inc
fisubrl
scas
out
add
sbb
cld
dec
and
dec
adc
push
movsb
outsl
jp
or
mov
repz
mov
mov
pop
test
loope
push
shld
xchg
rolb
out
xor
adcb
and
or
addr16
les
loop
outsl
loop
leave
repnz
mov
in
shrl
sti
pop
addb
dec
es
enter
lcall
std
and
or
mov
nop
call
xchg
fidivl
jmp
pop
pusha
dec
stos
inc
adcb
cmp
fs
push
outsl
fisubrs
inc
mov
pop
mov
rcl
arpl
cmp
ja
sbb
and
lds
push
pop
adc
push
das
dec
nop
sbb
jbe
in
cs
lods
or
roll
xchg
sbb
mov
cli
mov
out
jecxz
popf
loopne
pushl
push
sub
push
mov
out
jecxz
arpl
std
and
outsl
xor
xchg
mov
iret
mov
mov
out
jecxz
and
sarl
test
addr16
push
mov
out
jecxz
jl
jo
insl
ret
jmp
jns
fstpt
in
in
fwait
sbb
rol
movsw
or
shl
mov
sbb
stc
xor
lret
sub
dec
insb
push
in
push
shr
inc
cmp
stc
pop
xchg
out
insb
repnz
inc
jbe
out
mov
roll
lret
sbb
les
cmp
and
sbb
sahf
stos
xlat
lahf
jae
fsubrl
xchg
fwait
jle
dec
or
popa
mov
pushf
add
repnz
add
adc
xlat
mov
in
jb
cmp
std
and
arpl
and
inc
test
insl
sti
int3
loope
xchg
xorb
popf
mov
jae
out
je
sub
test
jae
mov
bswap
shlb
xchg
in
dec
sub
and
daa
xchg
inc
loopne
adc
in
xchg
leave
filds
cmp
les
arpl
mov
loope
mov
data16
sahf
scas
fwait
cmp
rcl
xchg
mov
inc
pusha
and
pusha
into
xor
jb
mov
push
add
inc
mov
pop
lods
jle
movsb
cmp
push
push
cvtps2pd
addr16
add
cs
mov
xor
scas
addb
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
dec
negb
jle
negb
push
or
add
add
mov
jle
negb
jle
negb
jle
negb
jle
negb
mov
lahf
rcrl
fdivrs
pop
test
js
pop
test
js
pop
test
imul
mov
mov
cmp
js
pop
test
and
dec
push
sarb
adc
sub
and
std
out
jae
jle
and
out
jae
jle
and
out
jae
jle
and
out
jae
mov
add
push
mov
pop
test
dec
adc
mov
out
repnz
push
lfs
out
jne
inc
lfs
out
jne
inc
lfs
out
jne
inc
lfs
out
jne
cmp
outsl
cmp
sub
jecxz
cwtl
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
repnz
jle
negb
and
or
mov
cwtl
icebp
or
cwtl
fnstsw
negb
jle
negb
jle
negb
jle
negb
sbb
cmpsl
rorl
subb
ficomps
lahf
push
pop
test
js
pop
test
mov
sarb
out
mov
sbb
cmpsl
fdivrs
pop
test
test
jbe
mov
inc
in
push
nop
daa
xor
test
fwait
mov
hlt
mov
inc
dec
hlt
mov
inc
dec
hlt
mov
inc
dec
hlt
mov
fdivrs
pop
test
mov
inc
leave
sbb
out
mov
xor
movsl
pop
sub
movsl
pop
sub
movsl
pop
sub
movsl
pop
sub
movsl
pop
sub
test
dec
negb
jle
negb
jle
negb
jle
negb
jle
negb
jle
negb
jle
negb
jle
negb
sbb
cmpsl
rorl
subb
ficomps
lahf
push
pop
test
js
pop
test
jmp
loope
shl
jl
mov
in
xorl
mov
js
pop
test
mov
push
mov
aas
gs
dec
hlt
mov
inc
dec
hlt
mov
inc
dec
hlt
mov
inc
dec
hlt
mov
inc
dec
hlt
mov
gs
push
mov
aas
gs
dec
hlt
mov
fnstcw
xor
movsl
pop
sub
movsl
pop
sub
movsl
pop
sub
movsl
pop
sub
movsl
pop
sub
movsl
pop
sub
mov
in
inc
fnstcw
xor
movsl
pop
sub
push
in
nop
jae
mov
cmp
fnstenv
adc
test
push
inc
mov
mov
mov
jb
cli
repnz
fldenv
cmp
adc
ja
adc
add
xchg
mov
sahf
xchg
mov
lds
sbbl
jl
mov
pop
jbe
mov
xor
pusha
jl
or
cmp
mov
cld
push
cmp
subl
push
js
fmull
outsl
dec
mov
popf
das
xor
add
rsqrtps
and
xor
cmp
xchg
mov
loopne
repnz
adc
xchg
xchg
int
fwait
in
pop
jb
lret
mov
addr16
faddl
adc
add
sub
pop
leave
mov
shrl
fwait
aad
xor
jle
ffree
dec
add
jae
jno
pop
mov
leave
mov
shrl
fwait
aad
xor
popf
or
mov
cmp
fnstenv
adc
test
push
inc
mov
mov
mov
jb
cli
repnz
fldenv
cmp
adc
ja
adc
add
xchg
mov
sahf
xchg
mov
lds
sbbl
jl
mov
pop
jbe
mov
xor
pusha
jl
or
cmp
mov
cld
push
cmp
subl
in
mov
add
fnstenv
adc
test
push
inc
mov
mov
mov
jb
cli
repnz
fldenv
cmp
adc
ja
adc
add
xchg
mov
sahf
xchg
mov
lds
sbbl
jl
mov
pop
jbe
mov
xor
pusha
jl
or
cmp
mov
cld
push
cmp
subl
push
js
fmull
outsl
dec
mov
popf
das
xor
add
rsqrtps
and
xor
cmp
xchg
mov
loopne
repnz
adc
xchg
xchg
int
fwait
in
pop
jb
lret
mov
addr16
dec
sbb
pushl
lahf
mov
inc
pop
or
mov
leave
xchg
es
out
out
jnp
les
aas
loope
fnstenv
lahf
mov
inc
pop
or
mov
leave
xchg
es
out
loope,pn
roll
out
mov
cmp
fnstenv
adc
test
push
inc
mov
mov
mov
jb
cli
repnz
fldenv
cmp
adc
ja
adc
add
xchg
mov
sahf
xchg
mov
lds
sbbl
jl
mov
pop
jbe
mov
xor
pusha
jl
or
cmp
mov
cld
push
cmp
subl
ret
push
aam
sub
mov
mov
movsb
mov
testl
int3
jbe
jp
daa
lret
xchg
les
clc
push
bound
push
mov
lret
test
lcall
scas
xlat
test
xchg
jmp
sti
mov
insb
ljmp
jl
jge
mov
std
inc
jp
test
push
lret
fistpll
pop
stos
cld
dec
int3
dec
daa
sbb
fdivrs
es
mov
inc
lods
out
xlat
dec
cli
sub
cmpsb
xchg
mov
push
out
push
sti
fwait
push
jae
hlt
cmpsb
int3
add
cmp
les
push
push
scas
insl
and
sbb
cmp
mov
pushl
sub
cmc
pop
lret
xchg
push
test
addr16
fnstsw
mov
ret
mov
mov
dec
into
add
test
mov
ja
sub
push
dec
cmp
cmp
clc
mov
jae
xchg
enter
scas
stos
test
cmp
sub
lods
por
aam
inc
push
and
jecxz
xchg
push
xchg
mov
imul
jg
scas
xchg
mov
bound
jnp
or
popa
dec
dec
xchg
add
enter
jb
push
loopne
stos
mov
addps
cmp
or
cmp
or
fisubl
cmpsl
mov
mov
inc
popf
dec
ror
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
stos
pushf
sbb
mov
pusha
lods
inc
dec
jmp
loope
sub
fmuls
fldenv
jge
adc
mov
mov
jge
adc
mov
cli
and
inc
and
mov
mov
mov
push
pop
ljmp
xchg
out
add
popf
cli
and
inc
and
in
rcrb
and
cli
and
inc
and
das
and
outsl
test
cli
and
inc
and
push
pop
xchg
lahf
pop
sbb
pop
cmp
sahf
les
cli
and
inc
and
in
stc
mov
and
inc
and
add
inc
jo
fs
in
loopne
cli
and
inc
and
mov
jbe
or
cli
and
inc
and
outsl
push
pusha
xlat
dec
sub
rolb
call
and
inc
and
mov
jbe
or
mov
call
test
cwtl
aam
lcall
inc
and
in
stc
mov
and
inc
and
dec
cmc
clc
lcall
inc
and
in
stc
mov
and
inc
and
pop
jbe
and
mov
cli
and
inc
and
mov
jbe
or
ljmp
aam
rolb
mov
cli
and
inc
and
mov
mov
cli
and
inc
and
insb
shrb
repz
inc
and
repz
jb
jbe
lods
xor
sarl
and
and
inc
and
in
stc
mov
and
inc
and
in
mov
xchg
pushf
cli
and
inc
and
fs
aam
sub
cli
and
inc
and
inc
mov
cli
and
inc
and
in
stc
mov
and
inc
and
fildl
cli
and
inc
and
in
stc
mov
and
inc
and
stc
mov
cli
and
inc
and
repz
jb
cli
and
inc
and
stos
cmp
cli
and
inc
and
in
stc
mov
and
inc
and
lea
aas
cmc
ljmp
jge
das
popa
in
stc
mov
and
inc
and
test
and
cli
and
inc
and
repz
jb
cli
and
inc
and
test
stos
cli
and
inc
and
in
stc
mov
push
negl
mov
dec
js
mov
cwtl
mov
jge
adc
mov
addr16
lock
sub
cwtl
mov
jge
adc
mov
mov
jge
adc
mov
push
js
movsl
ret
and
cli
push
dec
sahf
arpl
scas
movsl
lret
imul
push
xor
mov
mov
pop
jecxz
xchg
xchg
cli
inc
push
test
xor
insl
icebp
mov
es
les
addr16
cmp
lret
push
or
jg
cmpl
or
sbb
test
lea
xor
mov
jg
pop
sbb
lcall
dec
std
test
mov
cmpsl
into
inc
stc
mov
sti
stos
test
std
aam
pop
dec
fsubrp
negb
jmp
lcallw
je
popf
inc
imul
xchg
movsl
sub
sti
int3
negl
mov
xor
nop
inc
into
sbb
fmuls
and
add
adc
mov
and
jb
les
mov
aas
daa
movsb
mov
imul
stos
std
loope
and
cmpb
pop
das
insl
adc
lret
hlt
test
fldenv
cltd
arpl
pusha
pop
imul
xor
stos
sbb
cmp
push
xor
push
push
mov
xor
cld
loopne
mov
pop
push
or
or
js
push
push
mov
xchg
jmp
mov
pop
jo
enter
lock
jecxz
andl
inc
mov
mov
in
test
repnz
sub
mov
xchg
jle
pop
lahf
insb
dec
nop
sub
mov
mov
sub
in
js
fnstcw
push
mov
push
lcall
xchg
sub
xor
sahf
xchg
leave
sbb
xor
cmpsl
fdivrs
jns
ds
dec
cmp
orb
incb
out
mov
add
aam
jnp
jle
adc
inc
jge
enter
cmp
sti
pusha
not
sbb
pop
mov
cmp
jge
mov
lds
les
icebp
xchg
hlt
xchg
add
mov
divl
push
cmp
add
enter
inc
sub
add
jbe
cltd
les
add
jae
push
xchg
lods
xchg
lahf
loope
int3
mov
dec
and
xchg
pushl
sub
sub
lods
loop
jle
or
and
outsl
jnp
data16
nop
outsl
xchg
nop
outsb
cmc
ret
mov
loop
add
rorb
dec
nop
jmp
mov
sbb
mov
sub
adc
ret
mov
outsl
push
test
ss
jae
daa
push
popa
cld
jb
lock
div
repnz
or
clc
imul
push
push
ja,pn
xlat
fsub
mov
and
jb
fwait
push
xchg
inc
fldcw
loopne
cmp
or
lds
popa
mov
pop
or
insl
lret
in
jle
push
dec
je
scas
faddl
ret
testb
xor
cmp
dec
mov
pop
popf
test
xor
in
or
jle
sbb
ret
and
or
aaa
fisubs
push
xor
inc
out
and
bound
sbb
jno
cmp
mov
push
pop
testl
mov
add
mov
int3
xor
jmp
jb
jg
fisttps
je
int
mov
pop
push
mov
gs
lds
ja
cmp
dec
xchg
dec
inc
pushf
mov
adcb
adc
pop
test
dec
add
arpl
mov
and
int3
and
xchg
sbb
jecxz
and
pop
bound
pop
and
inc
inc
addr16
pop
loop
adc
fld
push
sti
nop
pop
aad
mov
jb
call
cli
lret
push
xchg
sub
sub
setle
pop
addr16
gs
push
rcrl
cmp
inc
bound
sub
subl
sub
pop
mov
std
loopne
pop
jmp
out
mov
and
cs
aas
jmp
xchg
out
loope
sarb
std
movsb
arpl
push
mov
and
in
jle
mov
outsb
adc
mov
jmp
inc
cmp
add
mov
mov
add
rol
mov
jecxz
fadds
mov
imul
mov
sbb
movsl
mov
cmp
adcl
mov
pop
adc
ds
sbbb
adc
and
push
push
jbe
push
push
push
mov
int3
push
pop
in
push
pop
sbb
mov
mov
jo
mov
mov
cld
push
imul
xor
mov
loope
push
or
fs
repz
dec
cli
into
mov
push
lret
or
mov
aaa
jecxz
mov
loop
mov
das
pop
pop
inc
or
ljmp
in
and
mov
ficoml
sbb
out
out
shrb
pop
dec
add
shrl
insl
mov
fistps
sahf
cmp
pusha
bnd
arpl
rcr
and
cmp
pop
pop
sbb
sti
xchg
test
xor
fdivrl
pop
testb
mov
jmp
mov
iret
sbb
pop
xor
popa
jb
or
frndint
mov
adc
push
xor
xchg
roll
cli
pop
dec
mov
jnp
jg
pop
inc
pop
bound
es
js
lahf
pop
lahf
outsl
dec
push
filds
into
xor
pusha
rolb
adc
mov
rorb
das
xor
aas
cld
mov
fstpt
cltd
aad
fdivr
xor
subl
cmp
jbe
pusha
xchg
adc
jle
mov
in
jne
sub
stos
repnz
out
enter
inc
mov
mov
ljmp
and
sbb
push
inc
in
aas
jmp
xchg
out
and
sub
push
addr16
push
sbb
mov
aas
push
pop
jp
sti
mov
inc
mov
imul
xchg
adc
push
into
nop
nop
in
or
inc
nop
sub
jne
scas
movsl
sbb
lods
dec
adc
xor
pop
rclb
xchg
sbb
inc
clc
call
ljmp
push
enter
inc
xor
ficomps
into
sbb
inc
ret
idivb
enter
mov
mov
ret
mov
cmp
fcmovnu
loop,pt
ds
add
das
rep
stos
jecxz
mov
fiaddl
add
mov
repz
dec
pop
rcrl
inc
daa
jmp
lods
imul
ss
pop
push
ljmp
sub
cmpsl
int3
adcb
mov
std
js
dec
xor
inc
out
mov
xchg
adcl
push
pop
pop
ss
push
inc
lret
sub
rcrl
call
in
xor
cmp
not
out
incl
mov
sub
dec
incb
sub
lret
and
dec
adc
in
and
push
cmp
cmpsl
call
xchg
dec
ret
cmp
adc
fdivl
pop
adc
rorb
jle
shlb
cmc
das
sub
cmpsb
dec
push
or
shl
jne
sub
sbb
jmp
inc
inc
push
rorb
cld
leave
push
cmp
and
lock
in
add
xchg
mov
lret
gs
push
lahf
push
ret
xchg
or
bound
scas
xchg
call
jo
int3
cmp
cmpsb
jmp
leave
xor
sub
test
mov
pop
fcmovne
push
or
and
sahf
mov
fs
pop
shl
jae
shlb
xlat
test
cs
es
leave
daa
dec
fwait
inc
insl
test
xor
jo
or
fucomip
push
and
negb
test
fcmovb
shrd
mov
clc
fstl
outsb
jecxz
nop
cs
jecxz
xchg
mov
rorb
aad
mov
lahf
gs
sub
icebp
nop
mov
jno
inc
lcall
ss
sub
ret
adc
mov
push
mov
aam
mov
push
pop
or
mov
mov
mov
out
pop
pushf
mov
jmp
ss
mov
mov
inc
or
lcall
or
mov
in
mov
cwtl
mov
push
enter
inc
nop
inc
dec
test
or
out
add
or
pop
adc
adc
fldenv
shl
ret
lea
in
lret
sbb
in
cmc
setns
stos
ljmp
shlb
loope
jnp
xor
rclb
jae
xchg
loop
nop
clc
pop
mov
js
int3
arpl
pusha
pop
sbb
loopne
repnz
sub
inc
and
ja
jl
mov
push
pusha
lret
or
pop
cli
je
gs
ds
data16
cmpb
pop
mov
sub
pop
clc
js
test
sub
xor
dec
fnstcw
or
pusha
call
stos
jne
jne
push
pop
xchg
lock
loopne,pt
cmp
adc
pop
cs
divl
cli
pop
inc
and
pop
out
incb
out
fimuls
sbb
xchg
lret
stc
jecxz
xchg
mov
dec
sub
mov
mov
pop
sbb
outsl
and
push
sbb
daa
lea
xchg
push
xchg
ds
in
negl
or
push
xchg
pop
es
add
sub
aad
push
inc
je
test
idiv
push
out
cmc
jecxz
pusha
repnz
addl
pop
bound
inc
push
fcomps
xor
mov
scas
call
nop
aaa
xchg
mov
aad
mov
add
in
int
loopne
fidivrs
movsl
xor
add
outsb
jmp
or
movsb
roll
jg
xchg
inc
mov
sti
stos
mov
das
pushf
scas
mov
loopne
push
cmp
lahf
out
lods
jo
push
push
cs
dec
and
dec
and
popf
into
inc
call
add
scas
mov
popf
es
sbb
xchg
xor
orl
divl
sub
sub
stos
les
jp
jne
jae
jb
orl
clc
inc
daa
popa
lret
test
adc
pop
mov
insl
adc
jae
das
popf
les
cmp
adcl
ljmp
jmp
add
sbb
arpl
lret
jns
aaa
and
mov
dec
sub
popf
jae
jmp
cmp
lds
lret
mov
cltd
or
and
lahf
fwait
pop
pop
cmp
mov
divl
or
cltd
in
pop
cmc
inc
cmp
sbb
or
mov
mov
adc
std
jae
cmp
mov
and
xor
pop
pop
imul
movsl
dec
pop
pusha
jbe
cld
aaa
mov
ja
out
push
xchg
push
push
fadd
std
popa
and
and
pusha
fsub
ficomps
outsb
xchg
pop
push
pop
pop
mov
movsl
and
push
idivb
aas
push
inc
cmp
and
jle
fadds
popf
cmp
leave
incl
andl
cmpsb
cmove
push
xchg
mov
fcoms
dec
mov
xchg
and
cmpsl
fsubrs
xchg
pop
inc
cltd
sub
lahf
in
cltd
pop
mov
push
and
cltd
sub
cltd
add
dec
mov
sbb
push
rclb
jge
mov
mov
push
scas
into
xchg
shll
jb
mov
lods
pop
je
jmp
adc
and
or
testb
sbb
scas
adc
jle
mov
and
dec
jnp
movsb
outsb
jmp
add
pusha
lock
je
cs
add
xor
or
scas
push
std
mov
mov
cmp
sub
add
or
push
add
mov
dec
mov
call
dec
adc
sti
pop
mov
sub
inc
stos
call
dec
xchg
mov
loopne
jae
aam
int
enter
add
mov
add
pop
jle
mov
std
dec
xor
dec
call
mov
rcrb
test
sub
pop
scas
arpl
mov
and
stos
mov
sbb
push
insb
fsubrl
push
sub
js
jae
add
add
xor
push
call
sub
in
and
lods
mov
mov
rolb
push
stos
stos
shll
add
mov
xor
mov
lods
mov
pop
dec
call
jbe
mov
add
xchg
outsl
lds
mov
sbb
and
ds
icebp
jmp
int
sub
sbb
loope
adc
clc
in
jno
lahf
xchg
add
pop
roll
mov
push
push
sahf
gs
mov
sub
gs
lods
insl
js
inc
sub
fcomip
gs
outsl
adc
jge
data16
xchg
in
pop
das
sub
sbb
jno
pushf
inc
or
xchg
out
and
xchg
and
adcl
ljmp
arpl
xor
popa
dec
dec
movsb
cmpl
into
mov
sub
sub
pusha
xchg
inc
xchg
mov
test
fidivrl
jge
sub
fistpll
or
pusha
lds
adc
std
arpl
jle
jns
and
dec
cld
fst
mov
cmp
sub
dec
int
stos
pop
mov
jbe
cmp
push
imull
inc
and
adc
sbb
fsubl
outsl
add
mov
or
inc
mov
cmpsl
push
pop
jno
out
jp
ds
xor
loopne
lcallw
pop
mov
cmpsb
outsb
daa
mov
push
jo
pop
inc
sbb
xchg
add
fsubrp
jne
mov
aad
sbb
cwtl
repz
and
dec
fcmovb
jle
cli
mov
mov
lock
fsubrs
adc
fsubl
idivb
fstl
push
mov
addr16
inc
pop
cmc
and
sub
outsb
inc
and
mov
enter
mov
daa
sti
scas
ret
outsb
add
inc
jns
aaa
pop
call
jl
aad
xor
fstp
addl
pushl
sub
sbb
dec
call
sub
lret
cmp
pusha
sar
mov
push
mov
lock
jo
xor
pusha
test
push
js
lods
addb
and
sahf
outsb
jp
xorl
jb
popf
jnp
pop
pop
cmp
mov
mov
in
pop
mov
ja
pop
ljmp
test
mov
out
or
aad
and
jecxz
call
jle
cmpb
xchg
jecxz
mov
lret
mov
nop
lret
xor
imul
imul
cmp
cmpb
adc
aas
mov
dec
push
xor
pop
enter
and
pop
mov
clc
loop
iret
adc
dec
inc
xchg
insb
jecxz
test
int3
loopne
stos
cld
loopne
lea
or
dec
mov
jae
prefetchwt1
push
mov
pop
mov
aad
sbb
mov
cld
and
and
je
loop
ja
out
inc
dec
test
inc
into
xchg
jns
int3
arpl
insl
fwait
and
jmp
shlb
push
fcoms
popa
add
or
ds
clc
sbb
fmull
out
cwtl
cs
xor
testl
xor
jg
mov
mov
leave
iret
cmp
ss
adc
sub
xchg
adc
pop
push
lret
arpl
jecxz
shrb
ljmp
add
adc
add
sub
dec
sbb
scas
js
lcall
mov
push
xchg
sbb
xlat
and
sub
jecxz
sub
cmp
push
jbe
push
bound
push
repnz
sub
scas
decl
adc
fildl
xchg
cmpsl
loop
xor
pop
out
popa
shlb
or
je
cmp
ret
sarb
decb
push
or
xor
inc
inc
sahf
pcmpeqd
mov
nop
or
pop
adc
dec
or
jmp
sub
lods
leave
les
mov
cmp
xchg
jbe
movsb
rcrb
loope
popf
mov
mov
dec
mov
test
dec
shll
mov
ljmp
lock
mov
call
mov
lea
mov
mov
rorb
stos
out
insl
xchg
pushf
inc
sbb
pop
pushf
mov
jge
sti
adc
in
dec
cmc
gs
faddl
xor
movsl
in
mov
testb
cltd
mov
int3
and
cmp
jno
pop
int
cltd
loop
push
xor
push
test
pushf
inc
mov
and
fldcw
mov
mov
inc
loop
pop
cs
out
and
shrb
mov
add
fs
add
pusha
int3
xchg
in
rorb
jecxz
add
mov
xor
es
fcomps
or
jge
and
dec
mov
les
sub
mov
lcall
jg
lret
pop
and
ret
pop
pop
stc
sub
pop
nop
adc
xor
or
lock
or
dec
lock
push
cmc
push
rcl
push
test
jo
iret
mov
test
insb
in
jno
fcmovu
xor
pop
enterw
or
stos
mov
aas
pop
jg
cmpsb
cmp
jo
push
cmp
mov
push
stos
xchg
push
mov
mov
movsl
jl
shl
adc
jb
leave
leave
mov
nop
int
lds
sbbb
loope
call
sahf
xchg
movsb
out
sti
in
lret
inc
dec
bound
xor
push
sub
cld
insb
inc
leave
xor
inc
jmp
push
call
scas
imul
addr16
cmp
lock
xchg
and
repz
mov
and
mov
pop
test
push
test
into
push
mov
dec
xor
lret
out
pop
inc
subb
ret
xchg
fldl
jbe
or
stos
test
bound
in
adc
cwtl
fadd
mov
xor
scas
jecxz
mov
movsb
push
cmp
aas
add
or
iret
pushf
ja
xchg
cmp
mov
dec
mov
xchg
inc
test
mov
inc
push
adc
mov
test
popa
shlb
cld
jns
dec
lods
testl
mov
push
gs
xor
xchg
mov
pushf
or
cmp
xchg
sbbl
test
int3
fsts
and
enter
adc
lahf
ror
loope
add
cmpsb
and
lea
sbb
mov
aas
push
xor
bound
popf
loopne
test
enter
imul
jge
divl
xchg
popa
and
movntps
test
add
xchg
test
faddl
jnp
ja
mov
aaa
cltd
cld
mov
and
mov
jp
xor
movups
dec
out
cwtl
mov
leave
icebp
lods
add
push
outsl
pop
pop
popa
and
xchg
pusha
or
mov
cwtl
or
pop
test
movsl
jo
cmpsl
push
sub
xchg
loope
pop
inc
xchg
push
pop
cmc
insb
cltd
mov
xchg
sbb
enter
loop
mov
std
jl
sbb
aas
inc
add
test
and
or
in
pop
cs
dec
jne
lock
and
lock
mov
icebp
push
pop
jnp
sbbl
shl
test
mov
inc
pop
lock
rclb
inc
and
inc
out
popa
aad
ja
jo
stos
fmuls
dec
push
sbb
dec
popf
sub
test
loopne
cmp
push
sbb
je
ret
xor
dec
insl
and
cmp
call
xchg
sbb
xchg
xchg
sub
mov
ret
xchg
xchg
imul
mov
mov
stos
arpl
and
ficoml
add
cmpsl
orb
stc
shll
imul
mov
jmp
outsb
and
pop
pop
enter
ja
push
js
ss
das
mov
xchg
sbb
push
popa
cmp
cmp
cmp
sub
xor
outsl
jae
stos
das
fwait
cmp
in
decl
inc
xorl
movsl
xor
rcll
cmp
dec
jp
out
xor
push
fisubl
subl
fdivrs
lret
leave
lcall
jmp
sub
xor
xorl
scas
dec
pop
xchg
test
pop
jo
or
cmp
jne
testb
adcb
mov
inc
lock
leave
fldl
sub
adc
loopne
test
pop
mov
scas
inc
push
push
movsl
or
mov
inc
cmp
mov
loope
cmp
inc
mov
push
push
stos
outsb
adc
jg
pop
cwtl
out
push
inc
divb
ja
ja
mov
mov
icebp
mov
xchg
or
fistl
fnstcw
sti
fcmovu
fwait
fwait
and
inc
and
push
inc
ja
mov
mov
scas
sub
mov
cmp
xor
popa
cmp
add
cmp
mov
push
mov
int3
movb
out
inc
movsb
loopne
loope
jle
hlt
mov
fisubrl
add
out
shl
dec
and
dec
mov
dec
cld
dec
insb
and
mov
test
test
cmp
mov
dec
imul
in
cmpsb
mov
mov
lcall
mov
shll
mov
and
jle
rolb
out
jl
stos
xor
cmp
pop
fdivl
xor
icebp
and
cltd
or
pop
xchg
leave
push
aas
ss
add
sbb
out
add
add
jmp
xchg
stos
jnp
mov
inc
das
mov
push
iret
lods
add
adc
cs
adc
or
or
dec
mov
mov
sbb
rcrb
pop
bound
cmp
out
xchg
adc
lcall
subl
and
mov
movsl
mov
xchg
cmp
push
mov
in
fndisi(8087
adc
mov
addr16
out
das
testb
fs
sub
cmp
shlb
js
out
ret
nop
xchg
mov
add
popl
sub
xlat
sub
pop
mov
pushf
test
jne
jb
aas
shrb
popa
ror
inc
xchg
xor
pop
shl
mov
aam
xchg
ret
inc
shll
insb
pop
mov
xchg
adc
jno
cmpsb
out
arpl
sub
in
inc
out
push
pop
mov
jb
mov
bnd
mov
jl
inc
cmp
sub
xor
jns
mov
push
mov
cmp
sbb
add
sub
sub
pop
loopne
cltd
sbb
mov
fdivrs
pop
aaa
push
fcoms
jmp
fstps
pop
imul
lret
pop
mov
jb
lods
or
cmp
sbbb
add
out
adc
push
mov
jmp
nop
int3
dec
xor
push
push
dec
pop
or
call
scas
sbb
nop
lcall
sbb
fwait
mov
xor
adc
inc
lods
stos
lock
test
lock
sbb
lods
pusha
in
clc
xor
inc
push
mov
pop
adc
mov
push
mov
loop
pop
shlb
sbb
test
ret
mov
imul
push
push
cmp
in
fbstp
adc
cmp
mov
push
or
jnp
mov
and
jmp
sbb
mov
cltd
mov
jmp
loope
and
outsl
add
imul
xor
leave
pop
push
xchg
fidivl
incl
not
and
inc
mov
arpl
sub
sub
push
sub
xchg
lret
rclb
and
push
jns
lret
leave
xor
out
push
lods
mov
jge
inc
dec
icebp
lcall
or
fdivr
fdivrl
icebp
jg
add
int
mov
mov
clc
scas
xor
jmp
jl
out
adc
aaa
mov
sbb
dec
es
mov
mov
inc
loopne
xor
movsl
xor
or
xor
add
fisttpll
sti
xchg
repnz
xor
sbb
sti
sub
mov
mov
test
dec
out
mov
xor
test
or
or
mov
sarl
imul
and
cmpsl
push
lods
fldl
das
lcall
lret
push
adc
in
test
call
fdiv
jne
add
inc
aaa
aam
xchg
loopne
fwait
or
inc
jnp
mov
push
lock
xchg
iret
mov
inc
or
mov
mov
lods
mov
cmpsb
xchg
mov
jg
out
mov
cs
lahf
jmp
insb
dec
mov
out
mov
pop
or
push
sbbb
inc
orb
xchg
mov
xor
mov
lds
rcr
insl
lcall
push
xchg
pop
or
mov
in
jp
push
pop
out
shll
inc
sti
pop
or
outsl
or
fwait
int
cltd
pop
cmp
lret
scas
cmp
test
mov
or
shrb
sbb
daa
mov
shlb
sub
add
add
push
int3
push
xchg
pop
out
rclb
out
push
sub
lret
in
int3
add
mov
lea
fcmove
andnps
fidivl
pusha
loopne
mov
inc
mov
fst
scas
sahf
sub
imul
jle
insb
jo
push
push
push
xor
insb
shll
and
dec
lea
sbb
sti
mov
mov
sahf
mov
dec
fnstcw
xchg
jno
xchg
add
cli
mov
daa
sub
addl
cmp
sahf
pop
fdivl
inc
sub
mov
or
push
xchg
call
xor
mov
push
xchg
fadds
iret
stos
inc
mov
cmpsb
andb
xchg
sbb
shll
rol
rol
aam
push
and
mov
dec
adc
fidivs
scas
jo
mov
dec
jbe
cmpsb
cmpsl
ret
in
incl
js
xor
cmp
hlt
cli
out
fistpll
jo,pn
cld
lock
xchg
cs
pusha
pop
fcmovne
mov
call
mov
push
addr16
movl
jns
adc
or
outsb
mov
out
or
mov
fsubp
adc
add
sbb
popa
adc
mov
add
mov
add
push
imul
or
pop
hlt
xchg
outsb
loope
cmp
mov
jae
mov
jae
push
add
nop
cs
jg
pop
pop
sahf
dec
mov
out
imul
faddp
cld
push
add
cmp
data16
cli
aaa
sahf
xchg
mov
push
mov
or
movsb
popa
adc
fdivl
xchg
push
jp
jns
cmpsl
outsl
xor
jecxz
cmpsb
aaa
leave
sub
jo
jae
das
fwait
leave
push
jnp
sub
and
je
adc
out
xchg
shr
enter
pop
jmp
and
call
cmp
inc
push
dec
cmpsl
shll
nop
mov
inc
test
mov
cmp
cmpsb
mov
inc
xor
loopne
xchg
fstp
xor
xlat
aaa
mov
icebp
sbb
jae
out
gs
jb,pt
cmpsb
in
lds
dec
dec
test
jecxz
insl
add
pop
xor
mov
push
jecxz
adc
push
rclb
cmc
xchg
loopne
test
scas
xor
pop
jne
or
out
pusha
movsb
mov
lock
insl
jl
jg
push
icebp
es
call
or
fwait
shl
out
or
scas
xorb
cmpsb
jge
and
test
cmpsb
cltd
in
or
out
pop
jp
xchg
sbb
mov
jae
outsb
in
sbb
xchg
imul
aaa
jnp
icebp
cmp
xchg
sti
lea
sub
aaa
outsl
lret
push
push
loopne
nop
mov
test
cltd
lcall
loope
jge
push
pusha
pop
sbb
lcall
loope
jg
push
cmp
push
adc
jecxz
ret
jg
shll
in
mov
mov
leave
fs
popf
aam
push
ja
shrb
sbb
dec
mov
out
adc
cld
sbb
push
aaa
out
pop
add
data16
sub
ds
aam
fsubp
lret
add
call
sbb
sbb
and
divl
aaa
imul
aad
ljmp
inc
pop
out
sbb
lcall
loope
mov
xor
rcll
aam
cltd
ret
jg
shll
in
mov
out
outsl
loope
outsl
add
inc
inc
sbb
jle
mov
dec
push
mov
cmp
popa
jnp
fisubrl
or
mov
ljmp
xchg
popf
aam
out
lret
sub
ja
pop
stos
inc
out
adc
jecxz
in
mov
shll
lods
xchg
iret
cltd
add
xor
shll
xor
jmp
das
inc
movsb
mov
mov
in
push
push
fldpi
stc
ds
push
pop
mov
adc
pop
mov
lret
add
ljmp
xchg
push
movsb
or
je
dec
insb
test
scas
dec
mov
xor
xchg
insb
jo
push
arpl
les
dec
imul
sub
in
push
cmp
cmp
push
dec
inc
insl
sbb
mov
cmp
sarl
minps
leave
cmp
aaa
xor
stc
aad
pop
outsl
ss
movsl
mov
cmpsl
cmpsb
ret
xchg
es
push
sahf
les
or
xchg
mov
dec
or
xchg
mov
sbb
push
shll
test
js
outsl
jns
xchg
hlt
mov
into
fwait
inc
shrl
cmp
dec
dec
popa
ljmp
dec
push
stos
jmp
insl
jp
nop
mov
cmp
jle
dec
shll
repnz
mov
ret
test
outsw
or
pop
sub
jb
or
shll
xor
pop
adc
xor
cmp
jb
sub
xchg
clc
adc
xchg
add
cmp
mov
in
jl
sub
mov
or
pusha
push
pusha
lcall
and
leave
push
jnp
lcall
in
dec
iret
adc
imull
stc
hlt
push
add
push
outsb
dec
jle
push
fidivl
add
fildl
pusha
loope
in
subb
std
pushf
jns
lcall
loope
inc
cmp
test
or
movsbl
sbb
aaa
movsl
xor
out
std
out
cld
iret
mov
ds
dec
gs
ds
aad
and
mov
mov
add
fwait
adc
xchg
dec
incb
xchg
insb
cld
pop
mov
test
sbb
in
mov
mov
ss
in
xorb
jl
jo
and
sahf
std
mov
mov
inc
mov
xor
das
cld
repnz
rcl
cmp
sub
cld
xchg
lods
xchg
stc
nop
mov
inc
test
mov
cmp
cmpsb
mov
mov
leave
fs
popf
aam
push
mov
mov
add
out
add
insb
loop
movsl
and
cld
lret
mov
pop
das
jb
shlb
pop
repz
cmp
push
push
mov
mov
xorl
dec
xor
shll
xor
xor
add
iret
adc
pop
stos
jae
leave
sbb
fldcw
mov
dec
out
adcb
push
cwtl
adc
or
jnp
imulb
add
pusha
adc
hlt
or
sub
add
enter
jl
xchg
retw
sub
adc
dec
pop
sub
push
mov
xor
inc
leave
ret
iret
xchg
adc
lret
adc
jle
pop
aaa
push
push
add
mov
xchg
sub
addl
fwait
jp
addr16
cli
in
mov
popf
cmp
lock
scas
fstl
aad
jne
inc
test
xchg
dec
incb
rorb
push
idivl
out
and
adc
push
js
xor
xor
aaa
movsl
xor
xchg
ds
lahf
ljmp
xchg
ja
cs
sub
pop
push
test
mov
dec
add
xor
into
cmp
push
orb
mov
ss
in
cmpsb
hlt
leave
push
adc
pop
out
ja
pop
out
xchg
jno
rclb
popa
xchg
jmp
test
andl
stos
shrl
add
add
cmpsb
pop
jp
pop
sub
iret
xchg
ss
daa
xor
repz
js
fsubl
call
fmull
push
test
push
push
loope
ret
outsb
add
imul
aad
ljmp
pop
inc
push
outsb
cmp
lds
jle
and
adc
inc
xchg
dec
incb
andb
jbe
cmpsb
pop
jle
lods
xor
aaa
ljmp
cmp
lret
insb
arpl
movsl
cli
test
sub
or
and
arpl
mov
jae
mov
icebp
sub
mov
out
push
dec
in
sub
jl
dec
cmpsb
mov
xchg
push
pusha
xlat
mov
xor
jnp
pop
pop
add
scas
ss
ljmp
mov
or
push
pusha
lods
enter
sbb
hlt
pmaxsw
rcr
xor
shrb
and
sub
mov
ret
pop
jae
sub
sub
mov
pop
mov
or
dec
mov
lods
and
xchg
dec
or
ficoms
push
add
add
mov
cmp
and
scas
cli
repz
push
cmp
stos
xor
imul
lds
mov
sbb
test
xlat
pop
hlt
imul
sti
imulb
add
scas
push
cs
or
jb
fwait
orb
cmp
call
call
dec
mov
inc
jns
call
mov
outsl
jns
jnp
shll
sub
repz
xchg
lret
sbb
test
inc
cs
sbb
xchg
in
inc
push
les
ljmp
sbb
mov
pop
mov
jg
sbb
cmp
push
mov
dec
test
inc
jo
js
sbb
adc
jg
cld
mov
fprem
xor
inc
sub
test
cmpsb
scas
nop
divb
mov
adc
stos
jae
push
mov
cmpsb
pop
mov
shrb
xlat
pop
xchg
cwtl
out
mov
jmp
inc
mov
sbbl
jp
das
lods
out
loop
test
ja
ljmp
aad
add
push
cli
mov
push
stos
rcll
lret
cmp
gs
push
mov
xor
pop
arpl
popa
jl
add
mov
sub
xchg
or
addr16
test
add
pop
fsubrl
imul
sbbl
inc
jne
push
sub
in
add
enter
mov
jp
push
cmp
sbb
xchg
xchg
mov
les
lods
push
xor
stos
sub
mov
xchg
cs
ret
fldt
cmp
movsl
mov
lock
inc
cwtl
gs
loop
dec
ret
loope
and
push
sub
orb
loopne
xchg
sarl
mov
outsb
fdivrp
sbb
and
sub
sub
repz
rorb
or
dec
dec
leave
jmp
mov
push
jo
out
pop
adc
mov
rorb
out
imul
xor
mov
pop
je
push
scas
dec
sbb
add
loop
imul
test
mov
out
mov
arpl
mov
dec
jae
enter
mov
into
sbb
lahf
stos
test
sbb
lock
ds
mov
aad
jno
push
fs
mov
jg
xchg
pop
push
mov
mov
mov
lock
mov
sub
pop
ds
push
fidivrl
push
add
mov
pushf
pop
jmp
dec
push
cld
jmp
jle
mov
add
jbe
pusha
movsl
inc
dec
data16
mov
adc
sub
inc
and
cmp
movsb
das
xchg
and
cmp
pop
push
arpl
adc
cwtl
data16
call
jg
sbb
in
jecxz
fldl
jmp
mov
or
xorl
clc
cmpsb
cld
xchg
and
mov
ror
mov
mov
sub
dec
in
sub
loop
std
js
inc
inc
lret
lcall
out
mov
cmp
push
pop
cwtl
xorl
out
lods
adc
jo
ret
mov
gs
in
pushf
in
sarb
icebp
lcall
hlt
xchg
fnstenv
add
aas
in
lods
in
xchg
cmpsb
add
dec
mov
jp
pop
aas
sbb
mov
fadd
ret
leave
cli
adc
int
pop
dec
ljmp
shrl
xor
sub
adc
andb
cli
fdivr
sbbb
ret
pop
in
adcb
testl
js
jbe
imul
lret
cli
mov
minps
sub
mov
test
in
stos
sbb
and
lcall
push
mov
or
and
lds
setb
sti
sub
inc
aam
movsb
xor
mov
or
shl
pop
jmp
pop
cmp
mov
hlt
sub
addr16
pop
in
clc
loope
cmp
int3
or
cmp
xorb
dec
cltd
adc
daa
jae
scas
mov
shrl
loopne
jl
lock
jae
das
addr16
andb
les
mov
pop
leave
push
lods
sub
popa
imulb
fwait
xchg
test
loop
pusha
fsts
jns
pushf
addr16
shll
out
es
outsl
test
xchg
xlat
out
cld
sub
sub
mov
outsb
data16
cmp
aas
loop
loope
sub
std
fs
rolb
cmp
out
sbb
shr
or
movsb
aam
pop
jecxz
xchg
cld
incl
adc
lahf
repnz
inc
xchg
mov
push
pop
inc
aaa
adc
xchg
fnstsw
call
xor
iret
test
jg
mov
gs
je
sti
jns
sahf
inc
filds
pop
cmp
imulb
insb
cmpsb
daa
ja
test
adc
push
or
cmpsl
pop
clc
add
or
cli
test
pop
pop
loopne
loope
sbb
jp
jg
jge
adc
test
inc
mov
jmp
mov
pop
sbb
pop
lahf
outsb
sub
cmp
dec
pop
clc
js
fstpt
add
outsb
dec
add
xchg
xchg
mov
dec
ret
push
ret
or
sbb
xchg
imul
sub
imul
cwtl
inc
hlt
dec
pop
pop
sub
lea
hlt
inc
xchg
pushf
pop
mov
mov
mov
push
cld
xor
push
pop
mov
sti
xchg
data16
jl
stos
or
sbb
and
mov
jne
jae
aaa
call
adc
fdivs
or
bound
xchg
mov
aas
fdivrs
cmpsb
xor
out
inc
sub
mov
cmp
push
jmp
js
add
push
aad
lock
iret
mov
pushf
or
cmp
pop
push
adc
mov
cltd
xchg
out
stos
clc
aad
mov
push
xor
int
fs
sub
mov
jnp
dec
imul
sub
mov
idivl
ljmp
sbbb
mov
mov
sarl
cwtl
xor
nop
fistpl
lea
divb
dec
jl
out
pushf
cmp
cmc
and
mov
mov
push
stc
mov
mov
clc
cs
inc
push
add
add
pop
ja
sub
sub
xor
sar
jae
out
or
aas
xor
push
pop
or
add
mov
xor
jbe
inc
mov
cs
aas
test
mov
push
lock
and
sbb
cmp
jmp
aas
sub
test
sub
jne
loopne
std
sti
pop
push
xor
jns
popl
or
sbb
es
cwtl
in
dec
cmp
push
loop
dec
mov
scas
aaa
mov
jne
sar
adc
xchg
stc
xor
pop
jne
stc
push
in
inc
pop
xor
push
sbb
xchg
pop
outsb
out
add
jbe
push
aad
mov
enter
inc
push
test
das
fs
in
lret
mov
lea
das
lret
nop
mov
and
jb
xchg
cmp
mov
pusha
mov
inc
xor
in
inc
roll
sbb
mov
sbb
das
lods
cli
inc
jmp
lods
dec
sub
lea
dec
jmp
outsb
jle
inc
sbb
ror
inc
cmp
shl
mov
sbb
add
cmpsl
xchg
xchg
js
bound
dec
hlt
test
mov
mov
add
es
cmp
dec
sub
or
sub
scas
stc
outsl
clc
xchg
xor
loop
movsl
fcompp
sbb
lret
ret
jmp
cmpsl
mov
cmp
popf
adc
stos
pushf
jmp
xchg
pop
lcall
mov
mov
stos
sarl
adc
pop
sbb
adc
out
cmp
mov
cmp
loop
pop
mov
imul
lret
lea
push
scas
test
loop
and
sub
mov
into
xor
neg
ljmp
pop
test
out
pop
mov
add
js
andb
scas
jmp
out
lds
push
stc
jbe
mov
jge
push
jmp
outsb
into
repnz
xchg
sub
cmp
loopne
mov
xor
xchg
mov
mov
jbe
das
add
nop
push
das
call
lret
and
jae
sti
adc
pusha
adc
dec
and
shr
lret
xchg
outsb
pushf
pop
push
cld
repz
inc
xchg
insb
and
add
out
jp
pop
dec
stos
out
enter
sti
sbb
mov
xchg
xor
inc
test
xchg
cmp
insb
shl
mov
in
adc
cmpsb
mov
imul
in
add
and
xlat
dec
sti
rorb
and
mov
mov
jg
ret
mov
aas
mov
or
and
fsubp
lahf
fldt
pusha
add
sub
shlb
mov
cmp
loopne
cmpsl
out
incl
dec
out
jne
loopne
push
pop
push
movsb
xor
imull
dec
les
cmp
push
adc
push
sbb
bound
and
popf
cwtl
test
rorb
dec
jle
pop
movsb
add
js
mov
fildll
cmp
pop
jecxz
outsb
push
mov
rcr
push
in
sti
lock
daa
cmp
push
ss
jne
xchg
int
pop
jecxz
mov
das
movsl
out
andnps
push
mov
std
jae
shll
repz
arpl
shl
pushf
les
test
or
fmull
lds
mov
popf
mov
imul
jne
hlt
shl
xor
rorl
xchg
ja
push
stc
adc
stc
outsb
fmuls
out
pop
popf
mov
pop
call
shrb
dec
adc
inc
xchg
insb
and
inc
sub
insl
xor
enter
and
or
push
mov
xchg
xor
lds
sti
int
mov
sbb
add
shll
call
mov
and
lret
test
jns
pop
mov
std
mov
jno
push
enter
shrb
xor
sarb
mov
inc
push
sbb
out
lret
sub
or
cmp
cld
jecxz
lret
jl
into
adc
ds
or
fildl
test
js
inc
lock
insb
ds
mov
sbb
aas
rolb
in
xchg
outsl
mov
sbbb
dec
inc
pop
test
jbe
pop
add
lret
scas
dec
cmp
mov
mov
popf
xchg
addr16
jecxz
aaa
shrb
sub
sub
mov
push
xchg
ja
negl
nop
iret
ss
test
imull
dec
mov
sub
cld
xchg
xor
idivb
or
arpl
inc
xchg
repz
std
out
push
pop
mov
inc
loop
dec
fidivl
stos
loope
lahf
xchg
nop
je
push
or
inc
inc
jno
or
jns
inc
adc
in
push
ficoml
orl
xor
fidivl
call
insl
add
test
cld
xchg
hlt
fmull
xchg
out
xchg
xchg
fwait
cmpsl
jb
inc
pop
xchg
mov
stc
cli
dec
lret
sarb
gs
aaa
mov
dec
dec
in
mov
cli
fistpll
movsl
inc
xchg
cmp
xor
out
lret
mov
outsl
mov
sub
sub
iret
aaa
or
adc
push
popf
sub
push
mov
xchg
iret
inc
jae
fnstsw
mov
inc
std
add
xchg
mov
icebp
stos
jne
das
add
inc
mov
mov
sub
adc
xor
ljmp
sbb
jne
pop
std
test
call
pop
mov
sub
sub
iret
push
movsb
jne
dec
jnp
xor
mov
pusha
pop
outsb
call
outsl
popf
add
pop
mov
clc
push
xor
addb
enter
and
add
push
mov
sahf
and
dec
or
mov
inc
cmp
add
lods
xchg
xchg
mov
fs
mov
or
sbb
movsl
scas
mov
and
jecxz
out
and
mov
push
mov
xlat
or
mov
dec
push
jne
mov
in
pop
test
jp
sbb
add
and
inc
xor
xor
lock
jns
mov
pusha
sbb
push
sbb
sar
insb
mulb
pop
mov
sub
dec
push
mov
arpl
add
dec
mov
jp
es
push
mov
jmp
test
loope
popf
es
mov
sub
in
cmpsl
dec
movl
sbb
push
inc
jo
push
push
addr16
xchg
xchg
cmpsb
repnz
icebp
movb
mov
sbb
xor
addr16
mov
les
dec
rolb
cmpsb
in
xchg
push
inc
jo
push
push
addr16
xchg
xchg
cmpsb
repnz
icebp
movb
mov
sbb
xor
dec
cmc
ljmp
push
add
cmp
punpcklbw
imul
mov
jge
or
push
sarb
add
cmpsb
pop
rorb
lea
cmp
mov
in
xor
mov
xchg
outsl
imul
lds
dec
sbb
pop
add
je
stos
sarl
arpl
dec
loopne
cli
fstpl
rcll
adc
push
fstpl
js
insl
lret
xchg
jecxz
test
xchg
outsl
adc
adc
sub
loope
xchg
xchg
cmp
xorb
inc
add
js
cli
movsb
sbb
mov
sbb
sarl
mov
in
xorl
ficompl
or
mov
lcall
dec
jle
xor
mov
mov
add
repnz
xor
sub
mov
add
jne
fistpl
shl
daa
out
mov
fcoms
in
ret
mull
sub
lock
dec
rcr
xchg
jg
adc
xlat
mov
adc
imul
movsb
imul
andl
push
pop
xchg
rorb
scas
je
je
cmp
jb
jbe
lahf
es
ficoml
pop
negb
ss
fists
inc
and
push
aas
and
pop
cmp
adc
scas
nop
add
popf
jne
push
sbb
sbb
mov
add
popa
jae
push
gs
pusha
or
cld
repnz
push
pop
mov
xchg
mov
or
jecxz
xor
sbb
lock
rcrl
pop
scas
xor
inc
dec
dec
sub
mov
mov
repnz
iret
push
inc
scas
mov
inc
mov
or
push
jb
cmp
fisubrs
fcmovnb
int
push
mov
pop
mov
nop
pusha
sti
lock
cmp
and
mov
sub
mov
insl
pop
hlt
hlt
shll
mov
jnp
icebp
leave
clc
fcomps
cwtl
test
dec
in
fs
dec
mov
fcmovbe
lret
ret
sbbb
pop
dec
push
mov
push
xor
or
xchg
movsb
sbb
or
and
outsb
sbb
jge
pop
mov
lret
lea
pop
or
popf
shrb
jb
pop
or
inc
mov
inc
aad
gs
mov
mov
jg
or
ror
mov
imul
pop
movsb
dec
and
sub
dec
inc
fcmovnb
mov
cmp
pop
jo
pop
popa
sbb
or
mov
jmp
jo
mov
mov
inc
sbb
xchg
stc
xor
pop
jne
stc
pop
lock
scas
cmp
jb
fildl
cmpsl
rcr
mov
lods
jae
inc
add
lea
xor
cmovbe
xor
xor
adc
mov
repnz
lea
and
sub
andl
mov
sbb
mov
or
scas
lea
aas
nop
ret
nop
test
sbb
stos
pusha
adc
xchg
sti
xlat
std
int3
mov
or
mov
sarl
mov
jmp
cmc
cmc
sbb
mov
dec
pop
idivb
cli
sbb
lcall
dec
xchg
dec
fcmovbe
data16
xor
mov
sbb
insb
test
dec
mov
add
sub
jg
mov
lods
rcl
mov
cli
fildll
cmp
cmpsb
adc
lcall
inc
or
or
jns
jecxz
pushf
mov
int3
sti
ljmp
aas
mov
pop
lea
int
adc
xor
adc
hlt
and
rol
or
push
into
dec
inc
or
push
pop
mov
and
in
popf
gs
incl
xchg
cltd
mov
cltd
xor
bound
fwait
mov
jns
and
inc
jp
rcl
fwait
add
movsb
jnp
add
cwtl
sbb
push
aam
inc
xchg
pop
ret
movsb
or
popa
cmp
mov
sbb
inc
fisubl
dec
mov
fbstp
mov
nop
ds
xchg
orb
xchg
xorb
cmp
ljmp
jno
add
por
insl
or
dec
add
dec
arpl
das
hlt
jmp
mov
xchg
lea
cs
cltd
push
dec
push
and
sbb
int
fmull
and
repz
dec
and
pop
and
movsb
adc
dec
xor
daa
popa
les
daa
ds
mov
fxch
scas
arpl
or
mov
adc
mov
mov
mov
in
sub
ret
mov
pusha
js
inc
gs
les
inc
cltd
cs
or
loopne
cwtl
les
xorl
xchg
pop
adc
das
mov
jl
out
sahf
and
scas
es
leave
popa
or
rorl
push
fistpl
lret
cmp
pop
cld
out
or
rorb
es
adc
push
and
addl
inc
stos
mov
mov
out
icebp
pop
jne
js
add
imull
in
ret
or
mov
inc
xor
pop
sub
cmpsb
xor
mov
in
sub
roll
cs
cmpsl
insl
xlat
and
js
push
ja
pusha
push
adcl
imul
push
inc
pop
outsl
or
pop
mov
data16
jbe
repnz
decl
arpl
popa
daa
dec
cltd
push
imul
xor
in
mov
cmp
aas
out
mov
imul
push
mov
mov
arpl
or
add
sbb
sbb
int
adc
push
jb
cmpsb
add
pop
leave
cld
push
jnp
js
add
lret
mov
jp
cltd
inc
imul
sub
mov
xchg
mov
or
outsl
or
inc
mov
ja
ja
outsl
dec
popfw
mov
repnz
icebp
movb
mov
loopne
fidivrs
sbbb
test
cmp
fisubrs
sbb
xor
rolb
pushf
or
out
mov
fwait
push
inc
test
std
lret
lret
outsb
mov
fistpl
out
mov
pop
sub
mov
mov
mov
stos
jae
sarb
stos
enter
pop
ret
movsb
or
mov
cmp
mov
sbb
cmp
outsb
bound
jmp
in
push
clc
cmp
push
rorl
popf
mov
insb
call
sub
andl
xchg
push
pop
push
mov
movsb
cmp
outsb
bound
out
mov
loopne
pop
out
cld
in
popa
xor
mov
jle
mov
mov
pushf
ss
inc
addl
adc
cmp
cmpsb
xchg
mov
int3
jne
add
xor
imul
adc
push
jno
outsl
les
xchg
mov
add
filds
out
sub
inc
popf
add
jge
leave
xor
rorb
test
inc
inc
dec
sbb
inc
stos
inc
cmc
mov
and
cmp
ret
lea
and
fstl
mov
sbb
aam
adc
dec
rolb
mov
fs
stc
xor
pop
jne
stc
xchg
inc
and
inc
inc
or
and
mov
sti
stc
and
push
jbe
mov
and
mov
test
dec
pop
sub
inc
test
xchg
adc
testl
stos
mov
iret
lret
mov
dec
repnz
and
xor
jmp
or
xor
mov
subl
mov
sbb
lock
loop
adc
inc
dec
stos
in
dec
cmp
push
push
dec
addr16
cmpsb
loopne
push
mov
out
xchg
push
mov
jp
test
inc
arpl
mov
test
movl
mov
insl
xchg
cmc
xor
jns
jecxz
pop
mov
add
imul
pop
rclb
mov
fnstsw
lods
repz
es
imul
enter
push
ret
fisubrl
mov
std
xchg
outsl
mov
sub
popf
xor
push
dec
loop
mov
inc
out
mov
out
inc
pop
add
aam
and
es
jg
call
or
or
cmpsl
gs
shl
andb
ljmp
clc
inc
pop
jo
cld
cld
inc
movsl
in
sbb
cmp
in
imul
cmp
ljmp
push
sub
cld
jo
je
jb
fildl
loopne
fistl
lret
sbb
cmpsl
popa
or
cwtl
mov
jp
pop
mov
push
lcall
or
pop
xor
loope
xchg
mov
cmpsb
cmc
sub
shlb
aad
sbbb
sbb
mov
adc
add
inc
daa
inc
ss
mov
loop
cld
loop
xchg
stos
in
mov
lods
mov
in
pop
mov
cmp
push
xchg
inc
add
cwtl
or
xchg
lock
push
xchg
mov
cmpsb
cmc
sub
shlb
aad
sbbb
sbb
mov
adc
jmp
popa
test
push
inc
scas
sbb
test
dec
pop
xchg
adc
sub
rclb
and
add
lods
mov
dec
add
sub
push
pop
mov
or
repz
fimuls
inc
push
adc
or
push
mov
nop
lcall
mov
sbb
ret
movsb
or
daa
ljmp
and
jecxz
movsb
cmp
outsb
bound
jmp
in
std
lods
push
fldt
scas
xchg
pop
add
jg
push
pop
icebp
test
lea
les
and
out
negl
cli
push
outsl
jnp
testb
fs
jp
lods
xlat
mov
sbb
out
xchg
push
popa
pop
lcall
loope
leave
pop
cmp
gs
dec
hlt
xor
adc
hlt
jl
jle
xorl
and
jp
fwait
add
mov
lock
sub
sbb
lahf
fisubs
xchg
notl
out
jo
fnstsw
ja
dec
fistl
sbb
scas
aad
sub
negl
dec
push
mov
leave
mov
mov
in
loop
mov
fs
stc
xor
pop
jne
stc
test
fmull
lds
pop
mov
aad
std
movsb
leave
fwait
pusha
inc
insl
mov
mov
test
daa
das
in
rep
jns
push
and
jg
jmp
movsl
cmp
jl
cmc
jno
into
ret
lahf
xor
mov
pop
xchg
push
aam
push
rolb
inc
out
cmpb
adc
arpl
inc
scas
js
xchg
jg
in
in
iret
inc
enter
dec
shlb
sub
mov
outsl
stos
jo
jmp
inc
mov
dec
sbb
xor
mov
mov
popf
cld
cmpsl
mov
inc
popf
add
jge
leave
test
push
andl
ljmp
sarb
sbb
push
imul
rcl
jp
xor
gs
mov
mov
in
and
test
add
cs
inc
sbb
iret
pop
adc
xor
roll
cmp
cli
fmul
and
jg
xor
push
cwtl
mov
mov
loope
and
mov
jns
out
imul
push
in
push
nop
iret
ss
test
ljmp
fs
fwait
sbb
mov
cli
xor
loope
lea
inc
insl
push
sbb
ficoms
pop
inc
aaa
push
mov
sub
fidivrl
adc
rorl
sbb
mov
push
and
jns
je
push
cs
lea
inc
lock
int
dec
pushl
dec
pop
sti
iret
icebp
mov
lods
pop
mov
test
cmpl
das
jecxz
pop
movsl
adc
and
inc
sub
ljmp
adc
mov
push
pop
leave
enter
cmp
fisttpll
pop
out
jecxz
imul
push
rorb
mov
lret
cmc
jnp
aas
rorl
inc
outsl
sti
pop
jmp
inc
jno
cmp
fsts
mov
mov
mov
mov
adc
andl
addb
mov
mov
daa
adc
int3
inc
pop
jns
add
scas
sarl
inc
rcll
jmp
mov
jmp
lock
xor
jo
je
sub
mov
into
sub
loop
mov
inc
xchg
dec
fdiv
orb
mov
jmp
dec
aam
jl
loop
pop
jb
out
push
jl
push
sbb
jae
cltd
shl
ja
bnd
in
sahf
out
test
sbb
ds
mov
movsl
repnz
ss
pop
hlt
mov
sti
sti
mov
test
loope
and
aas
jbe
push
ja
not
sbb
or
lret
orl
push
sbb
lods
jp
mov
nop
mov
addr16
std
mov
and
call
dec
int
lock
sbb
pop
rol
jne
mov
std
stos
mov
xlat
adc
xchg
jae
sub
arpl
mov
sbb
mov
divps
rol
or
jl
push
fdivp
jb
pop
fstp
movb
cld
ret
mov
lds
mov
inc
subl
rcrl
pop
mov
mov
pusha
inc
das
enter
or
icebp
les
or
adc
push
dec
in
cmp
or
cmp
adcb
pop
and
push
mov
fmull
or
int3
xchg
js
orb
mov
data16
mov
imul
lret
lods
xor
adc
add
loop
mov
subl
mov
mov
xchg
jne
cltd
jo
mov
mov
cmp
adcb
push
jl
loop
pop
cmp
mov
cmp
or
and
xchg
pop
cwtl
pop
xor
mov
adc
jp
xchg
jae
mov
arpl
mov
pop
jnp
add
lret
divl
aam
sub
jb
cs
call
ficomps
jg
sub
pop
inc
iret
stos
and
mov
lock
out
push
out
pop
cmpsl
cmp
push
push
sub
daa
cmp
stc
push
fisttpll
push
enter
jae
les
arpl
loope
iret
add
cmp
fcoml
adc
sub
xor
cmpsb
sbb
div
popa
pusha
jns
pop
and
pop
mov
push
outsl
mov
iret
mov
inc
lods
cltd
lret
lods
lret
mov
mov
sbb
mov
popf
push
sarb
xchg
dec
sti
jno
lods
mov
dec
push
xchg
les
and
pushf
add
loop
jge
cli
mov
fimull
mov
pop
test
stos
add
repnz
sbb
daa
dec
sub
add
and
test
push
es
lret
sub
shlb
push
aam
mov
mov
jge
and
rcl
adc
subl
xchg
inc
fcompl
lea
lock
lret
jno
xor
add
sub
jne
jne
dec
out
les
adc
adc
mov
mov
shll
pop
shrl
inc
jbe
mov
sub
inc
shlb
cmpsb
setp
stc
test
icebp
sti
fsub
hlt
loop
jno
sub
cmp
jo
ss
lods
or
mov
push
pop
sahf
pop
andb
or
cmp
push
lret
jmp
jp
insb
mov
pusha
aad
and
ljmp
lods
stc
or
dec
mov
test
ret
mov
xor
push
xor
xor
pop
hlt
std
mov
mov
mov
push
in
std
sbb
inc
scas
fxch
or
add
add
mov
sub
sbbb
adc
mov
outsb
add
das
push
adc
xchg
inc
sub
xor
xor
sbb
imulb
adc
pop
dec
sub
cmpsl
jmp
sti
add
jns
inc
mov
pushf
nop
mov
rclb
scas
lahf
mov
xchg
inc
dec
and
add
pop
repz
mov
xchg
adc
pop
sub
aad
cmp
inc
lret
idiv
mov
dec
lret
jmp
adc
add
ljmp
inc
mov
pop
sarb
sub
mov
cmp
and
das
xorb
movsl
aaa
push
pop
jo
popa
jo
stos
mov
mov
pop
lret
cmp
rcrl
jecxz
pushf
xchg
sbb
add
xlat
bound
mov
pop
sbb
dec
mov
jge
add
mov
arpl
jb
cmpsb
std
ret
mov
enter
and
pop
mov
mov
xlat
add
xlat
add
pushf
shlb
int3
add
xor
pop
inc
inc
loopne
adc
movsl
loope
ljmp
stc
push
nop
jmp
jl
mov
sbb
push
sbbb
les
add
js
in
stc
rcr
xor
stc
or
pop
out
adc
lea
dec
adcb
mov
not
pop
jp
insl
test
cltd
lea
and
ja
dec
sub
ljmp
call
cmc
mov
call
sbb
std
cmp
push
test
ja
mov
or
mov
shll
cmp
std
dec
sbb
xorl
mov
test
cld
sub
insl
movsb
daa
insl
adc
or
ret
sahf
jnp
xchg
mov
arpl
lret
jmp
pop
addr16
cmp
cmp
sbb
or
fistpl
inc
sbb
scas
jbe
xlat
imulb
xchg
outsb
loop
mov
adc
test
jno
jo
mov
xor
dec
in
lahf
push
push
cmp
xchg
sbbb
jb
sti
out
mov
xor
orb
push
inc
adcb
dec
sub
cmp
sub
movsl
fisttpl
push
lea
jo
nop
nop
push
jle
sub
inc
lock
xor
push
push
jge,pn
hlt
insb
add
aam
xchg
pop
lret
xchg
jae
scas
jp
test
inc
mov
imul
sti
shrl
je
cs
fstpt
jg
push
test
pop
jmp
test
pop
and
mov
das
xor
dec
lods
ja
lcall
lret
sti
fscale
out
fwait
or
sbb
pusha
lea
jne
inc
jb
arpl
leave
cltd
jbe
das
stos
jo
and
cmovb
out
test
js
push
movl
fsubrp
jbe
pop
fsubrs
daa
cmpsl
mov
jle
jnp
cmp
jne
push
jno
pop
inc
out
inc
cli
and
insl
pop
adc
scas
dec
pop
popf
repnz
or
stc
cmp
jl
ja
push
fwait
xchg
push
mov
mov
dec
int
pop
cmpsb
repnz
ss
repz
pop
jl
int
mov
shll
mov
push
inc
adc
push
mov
and
jnp
clc
lods
xor
sbb
jne
push
inc
mov
adc
jp
xchg
je
and
xlat
push
popf
arpl
aam
xchg
dec
fdivr
orb
pop
hlt
lret
mov
cmpsl
push
xor
push
pop
pop
jp,pn
mov
test
inc
dec
popa
dec
xchg
aam
xchg
add
jl
ret
inc
pop
mov
rorl
xchg
add
cmp
mov
jl,pt
ret
test
mov
shr
pop
adc
and
movsb
xchg
gs
adc
mov
mov
in
std
shlb
ljmp
sub
mov
pop
fistpl
dec
popf
mov
jae
stos
scas
mov
adc
pop
hlt
fwait
sbb
call
inc
outsb
sbb
or
pop
and
rcll
inc
data16
pop
adcb
pop
mov
jo
movsl
push
mov
cmp
in
stc
aam
dec
push
imul
repnz
popf
loopne
push
jb
jo
xor
xorb
adc
hlt
add
aaa
mov
jno
popl
adc
sbbb
mov
ret
adc
add
mov
and
insb
jp
fwait
lods
mov
jle
test
xchg
lcall
pop
sub
mov
das
cmpsb
arpl
push
mov
jmp
outsl
sub
fisttpll
ds
jg
enter
mov
push
adc
out
jns
or
test
adc
jp
in
dec
lret
inc
cwtl
les
sbb
iret
rorb
das
push
je
push
pop
lods
dec
lds
stos
test
sbb
sub
xchg
pop
jb
push
cltd
jge
daa
stos
imul
jp
cmpsl
stc
mov
fwait
ret
jb
enter
fsubrl
into
fwait
and
ja
xchg
ja
fstl
and
pushf
pop
push
out
jg
and
test
push
pushf
js
neg
xchg
jo
xor
mov
cmp
xor
mov
cmpl
arpl
les
sub
cmp
sbb
ds
ret
mov
rcll
sbb
add
mov
fwait
test
xchg
mov
adc
sub
mov
rcr
jns
jecxz
mov
lds
popa
je
mov
fs
out
jmp
fnstenv
andl
popf
mov
hlt
or
sbb
jl
cltd
mov
cld
jns
mov
mov
inc
mov
cmpsb
lock
enter
xlat
gs
clc
adc
xchg
imul
jnp
cmp
push
shlb
inc
aam
in
ror
decb
jns
cmp
mov
sbb
mov
movl
and
aam
fildl
lret
add
or
pop
pop
repnz
cmp
bound
ficoms
and
mov
fistps
scas
sbb
adc
mov
push
cld
test
lods
ficoms
lret
and
and
adc
or
aaa
enter
aam
lods
rorb
inc
or
and
fiadds
sbb
add
mov
cmpsb
jnp
sbb
out
out
add
mov
popl
push
or
inc
mov
push
or
shrb
pop
sbb
or
add
lret
mov
call
push
inc
cmpsl
dec
jmp
inc
jo
sub
jb
shrl
lahf
pusha
ss
clc
jae
out
or
aam
push
lret
loope
jnp
pop
daa
pop
pusha
mov
stc
sub
mov
adc
fpatan
push
lods
push
stos
js
jo
clc
xchg
out
xchg
outsl
jnp
xor
ljmp
andb
xlat
fs
cmp
in
push
add
or
mov
pop
mov
pop
outsl
dec
test
add
rorb
xchg
out
mov
xor
sbb
in
jle
mov
popf
dec
adc
mov
shlb
adc
cld
dec
dec
cmp
jg
loopne
or
mov
subb
enter
sub
adc
sbb
test
int
sub
adc
scas
movsl
insl
pop
add
add
inc
xor
and
out
scas
sub
das
cmc
fildl
xlat
cmp
pop
jmp
pop
insl
insl
cmpl
or
push
enter
testl
lcall
imul
stc
into
mov
cmovb
push
loopne
mov
mov
rcr
adc
pop
cmp
fwait
out
inc
dec
stos
mov
push
sbb
int
fmuls
push
loope
inc
jnp
push
pop
mov
sti
jle
mov
inc
push
fnstenv
shrl
loope
push
and
or
xlat
sub
lds
sub
leave
inc
adc
fdiv
mov
popa
cmp
pop
test
std
outsb
adc
out
jae
cmp
jl
ja
pop
push
imul
pop
push
mov
jno
pop
jae
mov
xchg
lret
xor
inc
add
dec
mov
hlt
sub
inc
mov
xchg
stc
xor
pop
jne
stc
dec
jl
test
aaa
push
sub
ret
in
xor
sbb
in
sbb
hlt
sbbl
in
and
jecxz
js
jne
stos
mov
movsb
dec
imul
scas
fwait
xchg
xchg
rclb
test
mov
xchg
push
inc
inc
cltd
scas
mov
movsb
mulb
push
sub
pop
cmp
cwtl
je
icebp
repz
xor
cli
lods
daa
and
mov
xchg
cmp
sbb
scas
in
or
testb
ficoml
iret
jbe
sub
out
sbb
inc
lds
mov
dec
aam
jns
cs
fcomip
and
fsts
xorb
or
cwtl
mov
mov
out
mov
imul
mov
lret
jecxz
and
adc
xchg
mov
and
cwtl
daa
jne
mov
lcall
and
jo
stos
and
jno
add
dec
js
cmc
aaa
cmp
lds
sub
jl
xchg
repz
in
dec
inc
xor
jmp
loop
cmp
loope
cltd
mov
std
push
cltd
rcll
xlat
lcall
cld
inc
dec
mov
out
mov
adc
mov
xor
lret
es
xor
mov
mov
lods
inc
xchg
or
push
fstps
test
or
paddsb
xor
ds
pop
leave
mov
jb
stc
scas
in
mov
nop
inc
movsl
sub
lods
ja
xor
outsl
mov
movsb
mov
stos
aas
lds
xor
push
scas
xchg
fbstp
push
push
sti
ljmp
jecxz
xor
imul
sub
xor
sub
mov
inc
int3
jmp
insb
into
jle
dec
sbb
mov
mov
sti
ljmp
leave
js
dec
pop
in
insl
test
outsb
and
mov
into
xor
cs
jbe
and
enter
cltd
add
es
xor
repnz
loopne
insb
loopne
nopl
divb
repz
scas
add
adc
mov
cmp
imull
inc
aad
mov
add
jge
sub
loop
jnp
cmp
mov
or
fs
add
out
mov
push
movsb
xchg
add
push
dec
xor
dec
sub
and
xor
push
es
lret
jb
add
pop
or
mov
xor
out
cli
dec
pop
lods
xor
mov
lret
mov
dec
mov
ja
xlat
adc
cmp
jno
inc
xchg
jge
xor
lods
xlat
cli
dec
rcll
mov
lock
call
outsl
pushf
push
mov
nop
es
push
inc
pop
sahf
and
xchg
imul
mov
xchg
cmc
test
nop
addb
mov
dec
call
jno
mov
jnp
sbb
out
es
inc
imul
mov
jge
aam
aam
dec
adc
mov
loopne,pn
mov
dec
cmp
lret
jecxz
xchg
fadds
fucom
mov
adc
cwtl
pop
cmpsl
xor
mov
mov
mov
sbb
test
xor
xchg
test
cmp
or
cmp
imul
xor
out
in
repz
scas
imul
cmp
pushf
cmp
aaa
sub
js
xchg
adc
cmp
push
cmp
and
mov
adc
divl
es
mov
or
int3
mov
imul
lods
outsb
test
clc
lock
inc
popa
mov
mov
fisubrs
jp
fisubl
and
sub
fwait
add
and
push
push
test
and
shll
sarl
sub
inc
add
xchg
xchg
push
push
fstps
mov
dec
mov
xchg
std
loopne
imul
cli
xchg
fstps
xchg
sahf
pushf
xor
dec
inc
sbb
mov
sbb
aaa
push
lret
nop
mov
mov
icebp
sbb
neg
mov
dec
inc
push
and
ret
jmp
add
inc
cmp
mov
test
rclb
jmp
xchg
out
cmp
mov
mov
cmovge
inc
aam
and
or
push
xor
adc
lahf
xlat
pop
fdivrp
clc
jb
adc
lret
movsb
aam
and
jge
stos
sub
sub
rorl
xchg
mov
adc
cs
repnz
inc
rcr
pusha
daa
out
test
jmp
popa
into
jmp
mov
fsub
sub
inc
out
popa
add
fsub
push
popl
sub
inc
push
std
lcall
mov
inc
cmp
ja
gs
popa
adc
lds
sub
jg
add
cmp
dec
ret
mov
shll
adc
or
mov
push
mov
sahf
cmp
jle
mov
pop
ss
cli
adc
pop
loope
or
jb
push
xchg
sub
dec
dec
ret
repz
stc
lods
and
lock
xchg
add
and
xchg
xor
dec
mov
rcrl
in
ss
jo
xchg
fisubs
or
fmull
cmpsl
xor
leave
sbb
mov
adc
pop
or
sub
pop
ret
ret
test
xchg
loope
cld
inc
ljmp
mov
add
mov
mov
lods
push
sbb
aaa
pop
push
test
ljmp
push
mov
lahf
cmp
push
jp
xchg
xor
testb
fstpl
jg
push
insl
inc
pop
xchg
xlat
lds
lds
mov
push
pop
in
sub
xor
imul
xchg
dec
pusha
imul
icebp
jle
cmp
gs
insl
jne
dec
repnz
mov
rcrl
push
stos
mov
xchg
sahf
cmp
jbe
bound
out
mov
dec
into
in
or
mov
and
xchg
xor
inc
cmp
mov
insl
cmpsb
stos
cmpsb
inc
mov
adc
xchg
mov
pop
inc
mov
gs
cmp
ds
inc
inc
lods
inc
sub
mov
mov
les
jno
test
dec
stos
les
popf
cmc
cltd
out
test
or
push
lock
sub
dec
mov
aas
out
or
addb
add
cld
xchg
xlat
mov
sub
adc
mov
jb
lock
or
test
popa
sub
cmpl
fsubp
push
test
ret
dec
jp
mov
sbb
sub
std
dec
lea
outsb
add
sbb
cmpsb
sub
xchg
mov
arpl
mov
jmp
mov
test
daa
jp
out
loopne
daa
sub
jl
pop
add
push
cmpsb
test
test
es
xchg
push
clc
call
cmp
into
or
inc
das
xor
xorl
es
aaa
into
and
pop
fs
jge
xchg
fcmovnu
lahf
push
test
xor
aad
testb
cmpsb
add
movl
mov
call
arpl
movsb
int
in
jg
pushf
addl
mov
mov
leave
sahf
push
rorb
mov
popa
jge
jne
ljmp
xchg
aaa
bound
xchg
repnz
add
jo
je
es
adc
and
test
xor
ljmp
cmp
fidivrl
inc
sahf
dec
inc
sub
jp
ret
jns
add
int
sub
sub
push
mov
mov
sbb
movsb
lods
fimuls
add
sbb
test
comiss
sub
dec
pop
test
xchg
xor
inc
push
dec
dec
or
in
and
xchg
scas
imul
jecxz
mov
xor
cmp
add
rorl
pushw
add
fwait
inc
mov
aam
jbe
xor
cs
int
xchg
xor
test
es
cld
sbb
push
out
dec
add
inc
movsl
loopne
mov
sbb
aam
adc
mov
xor
mov
idiv
lods
lods
mov
push
add
cmc
lret
mov
mov
popf
cwtl
les
loop
subl
arpl
sub
jg
enter
or
jp
jne
jle
xor
xchg
adc
aas
test
or
pop
lahf
fidivs
ret
mov
out
adc
push
or
iret
pusha
imul
loop
xor
subb
cmpsl
mov
cld
and
or
out
icebp
shrb
mov
mov
push
cmp
adc
mov
rcr
push
popf
es
and
mov
xor
dec
out
stos
out
ss
dec
shl
jns
adc
add
orl
jl
ret
push
xchg
add
or
mov
push
repnz
nop
imul
pop
xor
repz
mov
test
dec
lret
mov
int
mov
dec
out
ret
gs
imul
mov
push
push
mov
dec
fs
sub
adc
cmp
stos
mov
out
test
mov
shll
mov
pop
dec
cmp
iret
xor
ljmp
clc
and
inc
iret
push
int3
popa
xchg
in
das
int
cmpsl
pop
fidivs
sub
sub
scas
jle
jg
sbb
mov
push
cmp
or
test
inc
mov
aas
rcl
lds
jbe
or
push
jl
or
sbb
pop
mov
and
xchg
test
push
lods
jmp
insl
push
aaa
testb
adc
loop
aas
and
mov
mov
mov
inc
sub
mov
mov
sti
jmp
shll
mov
std
out
jp
sarb
aam
sbb
stos
mov
push
daa
push
repnz
fnstsw
mov
stos
sub
fs
pusha
add
js
push
pusha
loopne
and
jno
xchg
mov
xchg
and
jno
sub
add
pop
add
jo
add
jge
ret
mov
data16
xchg
ret
push
and
sbb
les
enter
xchg
mov
mov
pushf
xor
jle
xor
sbb
enter
mov
dec
clc
mov
call
repnz
xor
iret
sbb
mov
and
jb
xchg
push
or
add
fisttpll
out
hlt
shll
sar
in
insl
mov
cwtl
pop
int
add
stos
cmp
jge
mov
shlb
data16
popf
repnz
test
mov
xchg
inc
cmpb
lret
in
and
push
repz
pop
dec
dec
adc
out
jns
orl
jbe
dec
je
rcrb
mov
lret
test
add
xor
jb
jb
mov
xor
sub
mov
fs
ficomps
or
xchg
aam
inc
out
cwtl
xor
and
mov
test
test
mov
push
xchg
xor
inc
and
jbe
adc
imul
leave
or
jns
mov
out
mov
xchg
jp
fcmovnbe
dec
in
push
push
xor
sbb
push
jno
xor
addr16
jb
pop
int
jno
fdivrs
call
inc
push
popa
xchg
jnp
adc
mov
mov
sbb
xor
addl
or
mov
test
dec
fistpll
mov
xor
dec
sbb
dec
sti
xchg
adc
movsl
mov
negb
in
ficoms
or
rcl
pop
lods
ss
lock
fldenv
push
adc
mov
mov
lret
enter
enter
fcmovu
adc
push
and
adc
mov
mov
sbb
mov
pop
call
data16
mov
add
mov
and
add
fists
sub
les
test
mov
push
nop
repz
cld
fidivs
shl
adc
shlb
sub
loop
jl
and
mov
test
shll
mov
xchg
mov
pop
rcr
cmpsl
add
add
mov
cmp
add
pop
xchg
imul
aaa
cwtl
fdivl
mov
popa
ss
mov
add
sub
insl
cmpsl
into
add
cmpsl
in
xlat
mov
clc
test
dec
pop
addr16
mov
sub
xchg
in
sbb
ljmp
dec
insb
je
lea
jp
or
sub
imul
jg
fsubs
fldcw
and
inc
stc
sub
ficoml
imul
add
ret
inc
xor
xor
test
adc
ret
sub
sbb
ljmp
xor
jle
push
rcrb
popf
pop
xchg
jae
cwtl
shlb
loopne
in
lahf
mov
mov
movsb
push
je
daa
test
gs
inc
xor
mov
dec
aaa
std
sti
add
xchg
test
push
outsl
in
cli
jl
stc
popa
pop
loope
aas
push
imul
lods
cli
loopne
mov
sub
xor
xchg
je
fs
xchg
scas
cmp
add
dec
dec
push
or
lods
cmp
sbb
fcompl
lock
inc
adc
sub
sub
out
scas
jle
and
pop
andl
clc
repz
mov
mov
ret
insb
jmp
icebp
cwtl
hlt
pop
in
mov
subb
add
fstps
sub
daa
fsub
inc
adc
push
push
rol
xchg
adcb
cld
sub
mov
dec
pop
or
fisubrs
fdivrl
sub
lret
fcmovb
aad
or
inc
ds
in
adc
mov
sub
in
lea
sub
xchg
pushf
mov
push
mov
jp
loop
sub
arpl
clc
add
push
cmp
sarl
sub
sti
mov
ja
and
pop
out
push
xchg
pop
mov
sbb
into
dec
lret
mov
inc
push
bound
cmpb
jae
pusha
clc
inc
mov
aaa
inc
dec
sbbb
sub
xchg
cld
outsb
repnz
cmc
aaa
or
nop
cmpsb
xchg
enter
xchg
cmpl
cmpsl
pop
xchg
jae
jp
cld
cmc
dec
push
push
dec
add
dec
test
dec
sub
inc
dec
out
sbb
lods
enter
mov
rcl
xlat
pop
adc
push
push
out
loop
pop
test
inc
sahf
pop
jp
cld
repnz
or
call
cmp
adc
adc
sub
adc
cmp
nop
add
imul
jecxz
out
sub
push
pushf
xor
or
scas
outsl
or
dec
xor
in
test
arpl
imul
in
cmp
jg
mov
lahf
jp
pop
cmp
jp
add
lea
xor
xor
add
dec
out
call
mov
out
sarl
jns
xchg
int3
sbb
js
flds
xchg
cmpsl
mov
push
or
adc
xlat
mull
lret
pop
xchg
push
sbb
notl
ss
xor
or
sub
bound
std
push
or
loopne
xor
aas
jle
mov
cmp
and
scas
lahf
adc
ljmp
shrl
pop
fs
aam
cmp
enter
sub
or
xchg
jb
int3
mov
inc
ljmp
jns
imul
mov
sub
xchg
mov
lret
addr16
outsl
pop
adc
mov
iret
mov
loop
inc
inc
sub
push
push
lods
push
pop
popa
data16
cld
cmp
mov
repnz
sti
call
mov
inc
mov
shrb
adc
js
scas
mov
pop
pop
push
mov
pop
mov
mov
jle
vmovsd
outsl
and
bound
push
mov
jp
and
testb
jbe
jmp
jmp
sbb
cmp
mov
shlb
and
jle
arpl
pop
mov
jl
mov
adc
movsl
push
inc
cwtl
leave
das
loope
xchg
sti
addb
fcmovnu
sbb
cmp
jl
mov
negl
outsl
ljmp
and
xor
ret
xchg
aas
cmc
rclb
into
jmp
cmp
inc
rolb
inc
jb
mov
popf
push
and
mov
ret
cmp
push
dec
ljmp
call
dec
and
out
mov
scas
mov
mov
pop
movsl
xor
mov
xor
mulb
dec
addr16
shr
int3
inc
sbb
mov
shl
shll
sub
ja
cmc
mov
out
jge
shll
lahf
pop
mov
mov
clc
push
shl
push
aaa
and
addr16
jno
push
mov
and
mov
fs
out
ss
mov
jne
dec
aas
sbb
pop
fisubrl
dec
in
and
push
rcrl
xor
into
enter
add
adc
and
dec
dec
sub
mov
dec
push
mov
leave
xor
notb
mov
cmp
mov
movsb
repnz
or
sub
pop
dec
and
fwait
add
mov
sub
sub
sbb
inc
xchg
sbb
bound
cmp
sub
lcall
mov
xor
mov
shr
jne
rorl
sahf
push
loope
mov
dec
push
or
fisttpll
sbb
push
in
out
sbb
xor
add
adc
mov
andb
jb
pusha
lret
push
andl
cltd
and
add
pop
fnstsw
test
fidivl
fwait
int3
cmpsl
mov
scas
popw
mov
cmp
adc
jl
roll
sbb
push
cli
inc
pop
into
out
imul
mov
cwtl
or
dec
push
adc
ss
xor
adc
xlat
or
das
push
inc
in
ja
mov
pop
test
push
and
or
test
mov
push
mov
pop
add
popf
lock
mov
test
movsl
ret
loope
sub
xchg
int
mov
mov
inc
aas
or
cli
and
sub
mov
pop
in
mov
arpl
imul
pmulhuw
cs
jp
cmpsb
add
cltd
fstp
xchg
hlt
loop
pop
jmp
cmp
xchg
in
out
in
cmp
dec
cwtl
sub
adc
shlb
adc
add
jbe
and
sub
pop
sti
lods
dec
mov
ja
mov
mov
xor
inc
imul
fs
mov
sbb
iret
add
pop
andl
jnp
xor
test
aas
and
dec
in
ss
lods
inc
int
add
xor
and
inc
addl
jno
scas
mov
pop
mov
dec
add
jbe
add
bound
add
or
inc
add
arpl
add
bound
add
add
push
add
outsb
add
add
outsl
add
add
push
add
add
add
add
add
add
add
inc
add
imul
popa
add
add
jne
outsb
add
add
push
add
outsl
add
add
jns
pop
add
add
jae
add
jns
or
push
add
add
add
add
jns
or
push
add
jne
jb
jae
add
jns
push
add
jb
imul
jns
or
push
add
je
jne
jb
add
jns
add
add
dec
add
insb
add
add
jne
add
add
add
add
dec
add
je
add
dec
add
jbe
add
inc
add
arpl
pop
add
popa
add
jne
popa
add
jns
or
inc
add
bound
jb
jne
popa
add
jns
add
add
arpl
push
add
jb
imul
dec
add
jns
add
dec
add
outsb
add
add
dec
add
insb
add
push
add
jne
add
jae
je
or
push
add
jo
je
add
bound
add
pop
add
arpl
je
outsl
add
add
pop
add
outsb
add
popa
add
add
add
popa
add
imul
je
and
je
jns
jo
add
add
outsl
add
jbe
add
jae
imul
sbb
dec
add
jbe
popa
add
add
add
popa
add
imul
je
and
outsl
add
add
popa
add
add
outsb
add
add
outsb
add
popa
add
add
add
jb
add
insl
add
outsb
add
add
js
je
add
outsb
add
insb
add
add
js
arpl
add
je
imul
and
and
add
jae
jae
add
je
imul
and
data16
imul
add
add
outsb
add
add
data16
arpl
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
js
arpl
add
je
imul
and
imul
jae
popa
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
bound
jae
je
jb
popa
add
je
and
inc
add
jb
outsl
add
aas
add
arpl
arpl
add
jae
and
jbe
imul
popa
add
add
outsb
add
add
je
and
popa
add
add
add
jae
and
and
add
outsb
add
add
outsl
add
add
add
add
add
add
add
add
add
data16
add
add
add
jae
jae
and
and
add
popa
add
add
inc
add
bound
add
dec
add
jb
add
inc
add
jb
add
dec
add
jns
add
dec
add
outsb
add
add
add
outsb
add
popa
add
add
add
outsl
add
outsb
add
add
and
outsl
add
add
popa
add
add
outsb
add
add
outsb
add
popa
add
add
add
insb
add
jae
jae
and
je
jns
jo
add
popa
add
je
xor
inc
add
arpl
add
jae
and
jbe
imul
popa
add
add
outsb
add
add
je
and
popa
add
add
add
jae
and
and
add
add
add
data16
add
add
add
jae
jae
and
and
add
arpl
arpl
add
jae
and
jbe
imul
popa
add
add
outsb
add
add
je
popa
add
imul
add
jbe
add
data16
add
or
add
je
jb
outsl
add
add
and
push
add
add
jb
imul
insb
add
add
add
add
outsb
add
je
jb
jne
arpl
je
imul
sub
inc
add
arpl
add
je
imul
and
and
add
outsb
add
add
outsl
add
add
add
add
add
je
and
and
add
add
and
add
add
add
jo
jo
insb
add
arpl
popa
add
add
outsb
add
add
jb
jb
outsl
add
xor
inc
add
jb
insl
add
je
and
daa
add
add
add
outsb
add
popa
add
add
add
jb
and
imul
outsl
add
jo
popa
add
add
insb
add
and
ja
imul
and
popa
add
add
insl
add
outsb
add
add
outsl
add
add
jb
add
insl
add
outsb
add
add
outsl
add
and
data16
jb
insl
add
je
and
daa
add
add
add
popa
add
imul
je
and
insl
add
je
push
add
add
popa
add
add
and
outsb
add
je
and
jae
jne
jo
jo
outsl
add
je
add
add
add
add
add
je
add
inc
add
jb
outsl
add
and
arpl
jb
add
je
imul
and
jbe
popa
add
imul
je
and
outsl
add
and
jae
popa
add
add
add
jb
jb
popa
add
sub
push
add
jb
imul
je
and
outsl
add
and
jae
popa
add
add
add
jb
jb
popa
add
and
imul
add
and
outsl
add
je
and
outsl
add
and
bound
outsl
add
outsb
add
add
add
add
add
data16
add
add
outsl
add
jns
or
dec
add
add
and
add
jb
outsl
add
and
and
add
imul
and
outsb
add
je
and
data16
jne
outsb
add
add
outsb
add
popa
add
add
add
imul
outsb
add
insl
add
adc
push
add
outsl
add
add
popa
add
jns
and
outsl
add
add
and
data16
insb
add
jae
adc
inc
add
insb
add
and
popa
add
arpl
add
jae
and
add
outsb
add
add
add
add
add
add
add
outsl
add
add
add
outsb
add
add
data16
add
imul
or
inc
add
jae
imul
add
jne
insb
add
add
outsb
add
popa
add
add
add
jne
insl
add
jb
imul
imul
jne
je
adc
inc
add
jbe
imul
outsl
add
and
bound
jns
and
jp
add
outsl
add
add
popa
add
add
and
arpl
push
add
and
add
jb
outsl
add
adc
dec
add
je
add
add
and
outsl
add
add
data16
add
and
dec
add
jbe
popa
add
add
add
insb
add
popa
add
add
add
add
outsl
add
outsb
add
add
jo
add
popa
add
add
outsb
add
add
insb
add
popa
add
add
add
add
outsl
add
outsb
add
add
add
imul
outsl
add
and
bound
jns
and
jp
add
outsl
add
add
insb
add
popa
add
add
add
add
outsl
add
outsb
add
add
jbe
add
data16
add
sbb
inc
add
add
je
imul
and
jo
outsl
add
outsb
add
add
outsb
add
add
data16
add
out
push
xlat
sar
imul
dec
rclb
add
xor
push
push
aam
cmp
loope
sti
or
adc
sahf
xchg
out
lock
mov
push
push
xlat
add
xor
mov
cmp
loope
sbb
xchg
out
lock
pop
scas
cmp
imul
loope
xor
lcall
sbb
repnz
test
xor
add
or
push
sbb
jg
cmp
xchg
mov
movsb
jl
cmp
neg
xor
pop
dec
arpl
lret
lret
sub
jno
push
fincstp
fnstcw
xchg
popf
pop
jo
repnz
arpl
jp
xchg
and
fldenv
test
les
loop
aad
pop
stc
icebp
sub
xor
sbb
fistps
das
cmp
jb
pop
icebp
jne
mov
mov
sbb
scas
sahf
jmp
sti
mov
mov
mov
cs
cld
xor
filds
gs
outsb
jb
mov
hlt
xor
mov
pop
jmp
mov
clc
jae
cld
cmp
es
xchg
insl
enter
xchg
hlt
fmull
ja
add
lahf
int
sub
test
xchg
mov
xchg
fmull
clc
dec
xor
shlb
jae
sbb
call
xchg
cmpl
lock
and
push
adc
cmp
or
fcomps
fmull
mov
push
jae
pop
push
mov
ret
jb
fsubr
ret
addl
xchg
aas
out
push
dec
cmpsl
int
mov
xor
out
popa
sub
push
aaa
inc
mov
dec
js
pop
jns
push
das
in
ljmp
sbb
jns
sysenter
adc
jge
inc
in
arpl
cmp
pop
sub
es
push
xchg
in
push
js
in
sbb
jns
sysenter
adc
jge
inc
in
arpl
rclb
or
test
inc
jge
jg
push
dec
sub
jecxz
outsb
repnz
xchg
aas
out
push
jb
movsb
xor
jmp
push
fidivs
xchg
and
daa
movsb
xchg
push
push
mov
loop
sahf
xor
sahf
mov
lds
aaa
jo
xchg
cmp
test
test
ss
stos
lahf
fdivrp
push
sbb
mov
xchg
js
icebp
and
jo
fdivrs
push
mov
arpl
dec
les
mov
stos
dec
insl
fwait
xchg
stos
popa
adc
mov
cmpsl
fstpl
inc
xchg
inc
mov
clc
jge
push
stc
inc
lret
sub
push
or
sub
sub
push
stos
cld
sub
popf
push
xchg
cmp
xlat
mov
sbb
inc
add
push
aaa
pop
mov
or
jns
mov
push
test
jb
pop
inc
lock
les
push
scas
adc
dec
das
lahf
sub
sti
xor
push
popf
jmp
fs
xchg
cmp
lock
mov
andb
push
or
cmp
cmpsl
lcall
inc
ror
pop
xchg
cld
cmpsb
pop
imul
dec
ret
push
test
ret
pop
jle
aas
ret
mov
scas
mov
int
jecxz
jo
inc
mov
sbb
push
std
sbb
hlt
pushf
pop
gs
and
repnz
adc
jns
xchg
into
or
mov
pushf
sub
mov
int3
mov
xchg
insl
xor
mov
inc
push
dec
push
stc
fcomi
sbb
out
and
aaa
jmp
sbb
inc
push
pushf
fs
bound
sub
pop
aad
add
cs
cmpsl
adc
shrb
push
push
sub
call
lock
movsb
push
add
test
mov
mov
fdivrl
mov
sub
pusha
je
cmp
and
cli
js
pop
nop
outsb
mov
sbb
jp
cmc
out
push
sarb
data16
jne
loop
pusha
out
xchg
and
mov
insb
mov
les
insb
push
loopne
sbb
xchg
xchg
lcall
add
sahf
push
int3
cwtl
lcall
sarl
jmp
lock
repz
or
lret
clc
jecxz
sti
stos
pusha
je
cmp
inc
add
mov
fbld
sub
popa
pop
jb
jo
pop
fisttpl
or
mov
inc
add
hlt
adc
and
jmp
xor
add
xor
mov
pop
out
mov
out
idivb
pop
ret
andl
ja
imulb
rcrl
clc
outsl
fcmovnu
add
fstp
and
repnz
xchg
aas
out
push
sub
cld
xchg
lods
xchg
stc
mov
sbb
shrb
sub
dec
mov
fmul
adc
mov
pop
aam
sti
dec
xor
imul
and
scas
ljmp
xchg
mov
shll
cmp
mov
mov
stos
mov
jl
cmp
mov
in
cmp
and
outsl
ret
sub
lcall
daa
cmp
cmpsb
aas
lret
xor
push
mov
adc
mov
repz
cmp
xchg
cwtl
enter
jg
jl
cmp
jbe
mov
imul
inc
add
and
in
lea
push
mov
or
lret
mov
inc
inc
call
movsb
pop
jl
mov
mov
dec
jge
sbb
jle
cmpsb
jnp
jnp
mov
ss
lret
inc
jp
hlt
cmp
popf
shrb
das
mov
mov
sar
dec
mov
and
ret
xor
ret
cmc
aaa
daa
out
push
repnz
cmpsb
test
out
addr16
test
sub
adc
nopl
mov
std
push
push
jbe
bound
aad
pop
filds
add
aad
popf
push
int3
adc
sbb
push
cmp
popf
shrb
jno
push
popl
adc
and
or
pop
das
stc
nop
xchg
xchg
call
mov
mov
std
mov
icebp
pop
jne
stc
shrb
inc
push
js
fmuls
jg
mov
sbb
out
roll
mov
push
inc
shrb
push
int
unpckhps
push
add
test
sub
inc
das
cmp
mov
xchg
xchg
out
loop
push
test
cli
pop
adc
dec
inc
mov
bound
add
xor
sub
das
fdivs
dec
adc
cli
push
mov
pop
sbb
cmpb
stos
lahf
ljmp
mov
xor
mov
mov
mov
nop
aaa
ret
int
cmp
ret
sbb
dec
mov
push
cli
sub
fdivrs
rorl
mov
mov
ret
pop
lods
dec
pop
into
xchg
mov
jne
push
arpl
or
xchg
mov
dec
jmp
movsl
mov
aas
mov
jmp
sub
sbb
cli
cmp
add
sub
sbb
add
dec
cmc
inc
sbb
dec
lcall
in
shrb
inc
loopne
jp
xchg
jge
out
mov
and
aas
push
icebp
xchg
out
add
loope
fs
dec
lock
jg
aad
mov
pusha
fbld
test
push
jae
push
out
jns
scas
movsl
pop
mov
xchg
int
movsl
lods
icebp
lea
out
mov
xchg
push
mov
sub
fistpll
sub
in
dec
movsb
cmp
fnstenv
xor
icebp
jge
test
or
pop
nop
test
insb
cmpsb
ja
stc
daa
push
jg
dec
cmpb
sub
inc
dec
jns
jb
in
mov
adc
xor
adcl
fimuls
inc
inc
mov
shlb
addr16
and
pop
xor
lret
mov
xchg
sub
enter
ret
sbb
mov
in
pop
lods
daa
and
jmp
pop
cmp
cmp
add
xor
fadd
xor
or
and
in
xchg
in
jb
shlb
jne
les
or
add
test
in
stos
or
jbe
leave
aaa
mov
test
fs
arpl
mov
inc
sbb
shrb
inc
loop
aas
jp
lahf
lret
mov
decl
mov
sub
cs
addr16
imull
repz
adc
out
sbb
les
dec
sub
hlt
push
pop
add
push
pop
ret
add
icebp
jbe
pop
or
inc
push
or
enter
jmp
or
test
test
inc
test
repz
mov
xor
dec
scas
sub
add
fdivrl
les
and
fcmovnb
out
iret
icebp
test
nop
mov
push
cmp
mov
push
fld
orb
cmp
gs
arpl
insl
mov
jae
pop
lret
sbb
movsl
jle
cmp
or
dec
jne
add
sub
mov
cs
add
pop
xor
fucomp
cmp
jnp
or
cs
lret
xchg
aaa
cmp
stos
movsl
loopne
cmp
jnp
in
jbe
jo
jo
es
sar
out
xorb
add
inc
push
sub
sahf
dec
pop
fadds
inc
push
xchg
shll
inc
in
dec
cmp
subl
int
enter
pusha
mov
ficoms
test
mov
shrl
push
ret
xor
clc
push
movsb
lock
xor
test
fwait
pop
pop
xorl
mov
mov
mov
loope
cmp
xchg
icebp
sub
xchg
data16
jmp
outsb
xor
das
mov
mov
pop
loopne
push
xchg
or
aas
xchg
divb
mov
or
dec
pushf
in
jl
inc
outsl
pusha
mov
loopne
fwait
mov
mov
movsb
lock
lock
mov
xchg
xor
pop
shl
xchg
loope
in
push
lods
push
sbb
stos
fdivl
fldt
mov
cmp
dec
mov
pop
gs
mov
mov
xlat
sub
in
repz
mov
je
lea
pop
ds
push
movsl
push
iret
in
fimuls
mov
mov
lods
and
pop
ss
hlt
jo
mov
mov
xchg
pop
push
pop
and
xchg
stc
xor
pop
jne
stc
dec
mov
je
lea
pop
ds
push
movsl
push
iret
in
fimuls
mov
mov
jno
mov
pop
ss
hlt
jo
mov
mov
xchg
pop
push
pop
and
xchg
stc
xor
pop
jne
stc
dec
mov
je
lea
pop
ds
push
movsl
push
adc
sub
in
jl
sub
adc
cli
push
lds
ss
hlt
jo
mov
mov
xchg
pop
push
pop
and
xchg
stc
xor
pop
jne
stc
dec
mov
je
lea
pop
ds
push
movsl
push
iret
in
fimuls
mov
mov
pushf
mov
repnz
ss
hlt
jo
mov
mov
xchg
pop
push
pop
and
xchg
stc
xor
lret
inc
xchg
jmp
mov
in
pop
into
sarb
inc
pop
or
ret
xor
scas
push
and
add
icebp
fwait
fwait
stos
xlat
mov
sbb
lds
xor
scas
jmp
movsb
xor
dec
pushf
mov
mov
jl
stos
outsl
shrl
inc
jno
inc
jl
sbb
je
push
das
cmp
stos
dec
cmpsb
push
jge
mov
xchg
mov
daa
mov
ret
pusha
cmpsb
gs
sbb
jne
mov
subb
mov
scas
push
sub
fisttpll
aam
cmpsl
cmpsl
bound
xchg
sbb
daa
or
sub
fwait
imull
jbe
sbb
test
adc
xor
mov
lret
pop
and
fadd
mov
into
cmpsl
mov
cmp
mov
sbb
inc
cwtl
xor
mov
mov
sti
xchg
cs
imul
outsl
mov
sub
and
mov
jle
cmpsb
gs
sbb
jne
mov
subb
adc
repz
dec
int
out
repz
test
jbe
sub
dec
out
pop
or
push
in
mov
subb
sbb
sti
hlt
push
xchg
leave
idivl
gs
roll
mov
daa
mov
arpl
and
in
xchg
cmp
pop
mov
in
dec
mov
fildl
fnstenv
int3
dec
ret
shlb
pop
sbb
mov
test
into
cmpsb
pusha
add
into
sbb
stc
mov
nop
mov
lea
cmpsl
jbe
jbe
or
push
in
je
add
push
xor
shrb
cs
pop
add
enter
loop
cmpsb
loopne
xor
pop
add
mov
jb
add
shrl
addb
inc
jnp
repnz
xor
xor
fisttpll
and
jns
stos
in
shlb
stos
insl
lret
jp
das
jl
push
test
shll
or
mov
mov
adc
lods
sti
mov
inc
inc
movsb
pop
sub
scas
jmp
jmp
sbb
inc
pushf
or
add
imul
pusha
cmpb
pop
mov
mov
and
in
dec
mov
pop
fistl
or
mov
ret
out
scas
dec
jge
ficompl
or
mov
mov
das
mov
in
dec
and
jge
mov
pop
pop
out
in
dec
aam
lret
lret
scas
ret
add
pop
stos
or
push
add
pusha
pop
mov
mov
in
push
xor
int3
lods
lods
cwtl
pop
cmp
cmpb
sbb
sbb
pop
int3
aam
adc
jg
xorl
inc
lods
jo
decb
popf
addb
or
and
pop
cmp
lock
in
cltd
cmpl
cli
sub
sbb
scas
rclb
fbld
mov
gs
push
dec
lahf
push
out
test
mov
cmp
out
xlat
loopw
add
movsb
scas
leave
add
cmpsb
cmp
fdivr
push
pop
jne
aaa
xor
clc
test
pushf
pop
loop
push
mov
loop
jg
mov
gs
pop
sub
sub
pop
ljmp
insb
push
sbb
inc
sti
mov
outsl
xor
and
pop
lock
mov
daa
dec
sub
pop
ret
and
jge
pop
inc
int3
test
lods
clc
cmp
rol
xor
dec
push
inc
in
scas
xlat
leave
lret
xchg
aam
add
or
fiadds
sub
inc
in
mov
add
in
bound
push
lock
cli
lea
clc
call
add
jbe
rcl
sbb
aam
cltd
addr16
lock
test
popf
push
push
inc
cmp
jns
cmp
lret
scas
in
jnp
stc
pop
sbb
xchg
xchg
mov
iret
lock
clc
push
dec
movsl
xchg
adc
sbb
mov
cmp
jp
cmpsl
movsb
mov
pop
sub
jb
xchg
jge
inc
addr16
jo
test
in
sub
push
dec
pop
sub
jb
nop
adc
jno
mov
in
cmp
cs
lret
nop
aaa
jnp
add
add
mov
push
mov
cmp
loop
push
into
and
inc
xlat
jmp
stos
notl
in
inc
inc
xchg
inc
xchg
popa
pop
cwtl
loop
jl
test
lock
sub
fwait
test
mov
add
flds
push
sub
xor
jle
aad
lea
test
xor
lahf
je
outsw
test
dec
stc
idiv
dec
mov
adc
arpl
mov
dec
xlat
xchg
ret
sbb
jg
sahf
cmp
cmp
in
int
sbb
leave
pop
lods
mov
mov
push
movsb
jecxz
bound
rcrl
mov
jle
pop
push
sub
repz
push
imul
int3
push
popf
addb
add
rcrl
add
insl
mov
push
test
fsubrs
popf
pop
cmpb
cmp
test
or
xor
outsb
and
or
in
ret
lock
outsl
mov
jno
sub
jb
insl
sub
out
sbb
push
xor
enter
or
jns
notl
lock
add
xor
data16
mov
iret
push
and
jg
cmp
movsb
or
not
inc
sbbb
and
add
cmp
popa
in
cwtl
mov
aad
lea
test
dec
js
loopne
daa
mov
imul
or
rcrb
lock
mov
xchg
xor
mov
and
sub
push
push
les
dec
les
cs
fs
clc
xchg
in
and
sbb
aad
sub
test
push
adc
imul
int3
push
subl
ret
xchg
into
fst
adc
data16
jp
outsb
popf
pop
cmpb
cmp
add
xor
shl
int3
dec
xor
outsb
and
mov
sub
fistps
test
jb
pushf
add
scas
sbb
mov
jbe
testl
jmp
stos
notl
popa
cmp
push
mov
lcall
mov
fildl
xor
inc
and
loopne
bound
loope
and
add
xor
shrb
jle
aad
lea
test
dec
push
and
stos
in
sub
push
inc
inc
push
dec
test
fcmove
or
mov
mov
dec
lret
cmp
jg
push
les
mov
pop
mov
add
jae
in
dec
mov
out
out
dec
fstps
mov
jnp
int
in
jns
fwait
lods
dec
sbb
and
push
sahf
jle
sbb
out
aam
pop
and
fdivl
inc
aad
outsb
popf
pop
cmpb
cmp
push
jno
jecxz
dec
xor
outsb
and
or
xchg
inc
gs
mov
or
pop
sub
jb
or
fwait
cmp
push
jmp
mov
clc
mov
jns
notl
pop
cmpsb
pop
xchg
jle
rclb
push
xor
imul
xlat
fwait
pushf
imul
stos
push
int
add
fnstcw
arpl
adc
inc
nopl
aad
lea
test
jbe
iret
shlb
mov
int
lea
xor
mov
sahf
mov
jp
je
jg
sahf
cmp
cmp
dec
jg
addr16
or
xchg
lock
mov
rorl
cwtl
push
mov
mov
fldl
and
adc
stc
and
dec
push
fcmovne
push
pop
stos
imul
int3
push
mov
stc
test
pusha
mov
jmp
lods
out
sbb
cmpsl
aad
divb
cmpsb
scas
mov
xchg
cli
pop
xchg
shr
das
shl
int3
dec
xor
outsb
and
cld
mov
and
pop
xor
aaa
sub
test
jb
adc
or
cmp
call
add
push
mul
push
int3
inc
incl
xchg
jb
outsl
push
or
sbb
sti
data16
push
in
inc
mov
cmp
push
add
movl
aad
scas
and
add
cmp
or
sbb
das
pop
mov
jle
aad
lea
test
dec
test
push
or
jge
sbb
gs
jl
lcall
push
adc
jg
sahf
cmp
cmp
add
xchg
inc
mov
sub
mov
mov
or
adc
js
pop
cmp
ret
jecxz
and
mov
add
xor
push
shl
int3
dec
xor
outsb
and
push
leave
icebp
mov
add
das
cmp
in
mov
mov
sbb
mov
or
add
push
cwtl
cmp
dec
mov
mov
aad
cmp
addl
and
pop
sbb
cld
cmc
inc
lahf
out
xchg
xor
and
shlb
cmp
pop
int
stc
push
cmp
adc
frstor
and
push
jecxz
push
jmp
lods
sub
mov
pop
mov
mov
dec
jg
jge
pop
inc
sub
fnstenv
div
cmp
xor
xchg
xor
and
shrb
mov
inc
adc
insb
fwait
imul
int3
push
jb
repnz
jg
shll
fisttpll
jge
pop
push
aam
cmpsb
cmp
xchg
pusha
cli
stos
or
out
xchg
xor
and
rclb
movsl
imul
xchg
sbb
imul
int3
push
mov
jb
sahf
mov
addr16
xchg
push
das
xchg
xlat
fstpt
jb
lretw
subb
icebp
xor
xchg
xchg
adcl
ficoml
lcall
leave
push
jnp
push
mov
pop
neg
or
sub
les
push
cmp
push
data16
push
mov
orb
stos
inc
push
cmp
mov
mov
sub
or
hlt
loopne
xchg
push
xor
shlb
and
lcall
adc
dec
incb
and
push
rorl
mov
repnz
scas
bound
in
out
jmp
jl
aas
xchg
mov
sub
in
mov
arpl
js
pushf
hlt
xlat
jecxz
pop
xor
jl
in
fnstcw
rol
fstp
fdivrl
sti
pop
jns
mov
test
addl
inc
push
rcr
and
aaa
mov
in
fstl
sub
adc
ret
inc
scas
jno
in
popf
mov
add
ljmp
adc
or
ds
mov
das
mov
pop
jns
cmc
mov
sbb
mov
pop
call
movsb
movsl
icebp
lea
push
js
std
mov
out
cwtl
xchg
in
jecxz
sbb
jnp
rorl
inc
cld
lock
mov
jl
sub
mov
or
movsl
sub
stos
das
cmpsl
pop
jmp
aas
in
mov
jno
fincstp
lahf
inc
xor
and
rolb
leave
fs
popf
aam
dec
jge
scas
lahf
int3
inc
test
mov
icebp
js
jp
icebp
cmpsb
xor
ds
jl
js
fnstsw
gs
imul
vprotw
and
cs
pop
lds
cmpsb
popa
aad
cmp
mov
mov
hlt
add
push
incb
pop
jo
pushf
mov
mov
fnsave
not
sub
push
jo
sahf
mov
mov
leave
outsb
sbb
mov
sub
lahf
mov
rol
jne
cmp
or
cmp
jle
sub
pop
insl
inc
aad
ds
mov
mov
lea
in
loop
adc
lods
dec
pop
jl
icebp
loop
std
mov
push
sbb
ljmp
pusha
cmp
cmp
ljmp
insb
xorb
add
xchg
and
std
inc
push
lea
inc
aaa
jo
popa
add
jmp
or
cmp
mov
jl
lret
not
pop
data16
fmull
pop
and
dec
into
data16
push
mov
cs
fs
jbe
inc
int3
pop
cltd
lods
and
nop
and
dec
xchg
jle
xchg
jns
xchg
js
add
and
jmp
xor
gs
out
inc
fxch
adcl
push
jle
clc
popf
popf
push
xchg
sub
mov
adc
or
jp
mov
es
pop
iret
add
mov
mov
out
setno
and
mov
jno
test
xor
mov
lahf
dec
clc
insl
out
leave
mov
sti
addr16
sarb
and
cli
bound
sbb
pop
mov
mov
mov
xchg
mov
push
pusha
push
ljmp
cmp
inc
xor
movsb
push
cld
test
xor
inc
fstpt
insl
stos
cs
fsubrl
sbb
rorl
push
lret
xchg
sbb
push
ret
sbb
cltd
dec
outsl
outsl
mov
pop
int
in
cmpsb
cmpsl
ret
in
mov
fisttpll
testb
inc
mov
andl
inc
int
jg
loope
adc
jbe
push
bound
mov
movl
fsubs
jg
lock
dec
cltd
and
stos
fcmovnbe
loope
cli
shl
test
stc
adc
mov
mov
fwait
sub
xor
xlat
jle
mov
fcompl
leave
push
mov
xchg
jo
imul
loop
leave
loop
cltd
mov
lods
inc
inc
mov
dec
notl
mov
repz
jbe
jns
add
adc
int
sub
pushf
fsubrl
icebp
pushf
pusha
pop
lock
cltd
xchg
mov
xor
subb
stos
movsb
imul
adc
dec
xchg
sar
mov
testb
cld
push
movsl
mov
daa
aad
dec
icebp
inc
sbb
push
ret
mov
lcall
mov
lret
adc
xchg
ret
aam
xchg
dec
ret
xchg
in
pop
mov
rol
loope
rcl
ret
stc
sbb
jecxz
int
lret
sub
sbb
aam
and
xchg
idivl
and
out
jb
adc
mov
adc
push
inc
inc
mov
jmp
dec
cltd
sbb
jp
lret
fcomps
sub
cmp
adc
push
dec
icebp
push
mov
jmp
xor
fistpll
cmp
inc
inc
andb
pop
push
cmp
lret
cmc
inc
jge
sbb
jg
lret
outsb
adc
stos
in
imul
lret
fidivl
mov
inc
leave
add
or
push
and
or
dec
sbb
push
xchg
notb
pop
lcall
and
adc
out
dec
or
xchg
or
adc
fstpt
mov
xor
jae
jae
or
data16
ds
fbld
out
push
mov
push
pop
cmpsb
inc
jge
imul
sbb
js
clc
mov
or
jmp
add
test
lea
xor
pop
in
push
cmp
pop
daa
mov
out
and
lahf
das
aas
loop
hlt
loopne
push
sub
jle
mov
test
stos
mov
cwtl
mov
sub
inc
xchg
aaa
daa
or
xchg
ds
mov
ret
stos
clc
shrb
push
stc
mov
inc
and
xchg
mov
xor
aas
clc
dec
sahf
xchg
inc
ss
cmp
lds
or
adc
scas
xor
in
loopne
cmp
cmp
in
dec
xchg
rcl
mov
outsl
jae
out
and
flds
inc
cmp
popa
mov
inc
add
int3
and
fsts
test
add
xor
mov
insb
rcll
in
jbe
dec
sbb
pop
dec
popa
xchg
dec
je
push
shll
sbb
pop
cld
add
pop
shrl
sar
xor
mov
imul
div
and
fnstsw
jge
daa
out
jbe
aad
sub
adc
ficoms
mov
inc
mov
aad
outsb
sbb
lret
push
mov
and
sbb
out
add
xor
xchg
aaa
enter
jl
sub
or
jb
or
mov
into
adc
mov
out
es
dec
jno
or
in
dec
sbb
sub
shr
sbb
cmp
pop
jns
mov
fisubs
test
sbb
fistl
iret
mov
mov
add
enter
lods
fs
movsb
push
sub
jl
adc
mov
xor
xchg
push
fisubrl
dec
das
push
sub
and
les
jmp
repz
out
mov
subb
mov
cmpsl
mov
inc
mov
lret
rol
faddl
jne
mov
divb
cltd
push
repz
inc
push
push
loop
cs
jg
inc
push
lret
xor
negb
je
mulb
fsubl
imul
adc
dec
mov
push
enter
sti
test
addr16
in
add
xchg
mov
stos
cmp
xor
out
ljmp
pop
fidivs
adc
cmp
pop
xchg
iret
outsb
xor
popf
push
mov
lahf
sti
aaa
mov
in
lcall
mov
sbb
pop
stos
ret
cld
cwtl
inc
daa
push
ret
push
mov
push
scas
adc
popa
mov
int
imul
fwait
movl
cmc
xor
pop
lods
inc
xchg
fsubr
sub
pop
inc
adc
pop
or
pop
aaa
orl
and
pop
xchg
iret
outsb
xor
popf
push
mov
lahf
sti
aaa
mov
in
lcall
cld
push
es
and
ljmp
dec
cmp
cmpsb
jecxz
pop
xchg
and
bound
fwait
push
push
sub
ret
sbb
lcall
and
add
shlb
cld
mov
and
adc
mov
push
testl
sbb
in
mov
out
pop
push
cmp
ja
fdivr
enter
inc
jmp
dec
into
mov
jmp
jne
loopne
mov
out
push
iret
cs
push
test
cli
int3
xorl
push
xor
mov
and
xor
imul
stos
ret
or
in
push
push
sbb
ds
rcrb
cmp
inc
out
add
sbb
push
xchg
fs
test
stos
inc
scas
add
and
repz
add
dec
push
es
pop
jg
int3
mov
cmp
imul
add
fbstp
aas
push
lock
sti
mov
ss
in
inc
ret
ret
push
or
cmp
xchg
adc
adc
test
xchg
add
or
xchg
lock
fwait
iret
sub
jo
lods
xor
pop
daa
ss
jae
aam
jae
daa
sbb
push
leave
or
rcl
push
sub
mov
hlt
out
xlat
xchg
adc
jmp
sub
xor
lret
mov
stc
mov
xchg
add
rolb
aad
or
and
test
pop
ljmp
dec
mov
fwait
xlat
xor
jbe
out
gs
sbb
dec
movsb
dec
sub
lods
adc
add
mov
test
or
icebp
ret
or
test
xchg
mov
mov
test
enter
fwait
inc
inc
xor
repz
test
jmp
jno
add
por
insl
inc
jge
data16
sub
push
pop
jo
xor
add
mov
pop
aas
mov
xlat
imul
dec
and
mov
xchg
push
dec
loope
dec
fadds
add
out
mov
jnp
or
out
mov
or
xor
popf
iret
or
iret
lods
repnz
sub
data16
nop
ljmp
xor
insb
mov
pop
jb
in
sbb
lcall
mov
add
xor
mov
leave
inc
sbb
cmc
pop
mov
iret
daa
mov
aam
dec
fcmovb
mov
add
out
jmp
lar
inc
ret
jle
mov
cmp
incl
push
enter
inc
inc
insb
xchg
push
jecxz
add
jmp
pop
mov
xchg
jne
aam
fs
mov
push
fs
es
pusha
repz
rcrb
pusha
hlt
out
cmc
add
xor
stos
enter
inc
shll
add
push
mov
add
dec
mov
pusha
imul
or
lret
and
pusha
cmp
dec
and
cli
cmp
lds
cmp
sahf
ljmp
push
adc
addr16
dec
xchg
shll
in
dec
adc
push
cmp
outsb
int3
fistpll
dec
adc
and
mov
mov
inc
jmp
mov
jl
inc
adc
and
and
add
movsb
movsb
repz
push
cmpb
test
test
cmpb
xchg
jecxz
jne
sbb
mov
jo
int
cmp
lods
mov
sbb
adc
mov
xchg
push
xchg
xor
out
and
mov
es
in
mov
jno
xor
ficoms
out
push
js
lods
or
aam
lock
lods
pusha
sub
ss
sub
test
push
fistpll
es
shll
fisubl
xor
pusha
gs
adc
mov
loopne
push
pop
loop
fnstenv
lock
jns
sub
in
scas
mov
lret
sub
pop
lods
jno
mov
enter
stos
stc
rorl
jg
jle
inc
mov
mov
iret
ret
fbstp
lock
test
stc
rcrb
jbe
hlt
scas
sbb
aaa
iret
sub
fwait
mov
mov
pop
jmp
sub
sti
addb
mov
std
addb
das
lods
mov
data16
and
enter
adc
adc
je
cmp
lret
ffree
lods
repnz
cwtl
cld
out
fwait
dec
pop
mov
hlt
xchg
aad
test
adc
dec
bound
popa
std
insl
orb
enter
fmuls
jl
cmpsl
mov
xchg
inc
dec
cltd
fimuls
pop
dec
cmpsb
push
sub
fs
mov
jnp
and
pop
sbb
mov
ljmp
pop
sub
aas
sahf
push
push
add
xchg
xchg
inc
xor
pop
push
stos
testl
jno
sub
and
outsl
int3
jbe
dec
push
sbb
pop
call
push
test
push
push
push
mov
mov
sbb
xchg
jle
rolb
std
push
sbb
std
push
xchg
clc
aad
xchg
pusha
popa
mov
mov
sarb
cmp
sahf
sub
jne
cmpl
or
xor
lods
xchg
cmpsb
pop
xchg
jmp
sub
mov
rcrb
pop
push
divl
pusha
test
mov
into
cmp
inc
cmp
pop
jne
stc
push
in
inc
pop
xor
push
sbb
xor
lods
xor
lods
sahf
call
pop
dec
cmp
je
scas
out
and
and
sahf
push
mov
mov
cli
ret
idivb
cmpsl
data16
adc
cs
and
xchg
sub
call
sbb
stc
sub
or
rcrb
or
in
push
push
in
rolb
cmp
mov
ds
cmp
cld
xchg
mov
lahf
jge
lds
jle
xor
xchg
movl
xchg
hlt
ret
adc
shl
jp
xchg
stc
xor
pop
jne
stc
add
jge
outsl
or
loope
aad
loopne
add
and
xor
aaa
push
es
bound
outsb
stc
xor
pop
mov
dec
mov
add
lods
aam
test
rorb
psubsb
mov
dec
and
out
imul
xor
fcmovnbe
pop
push
enter
cmp
mov
sub
sub
fwait
jl
inc
lock
dec
jp
and
subl
add
cmpsb
xchg
ret
inc
fwait
jo
sbb
ret
aas
pusha
xchg
fdivrl
mov
xchg
and
xchg
gs
lret
dec
cmp
popf
mov
push
jb
inc
mov
pop
in
movaps
xchg
cmpsb
sbb
pop
ret
int
xor
pop
data16
xchg
ss
mov
xor
out
xorl
jo
push
popf
push
out
sarb
xor
jne
push
stos
pop
adc
mov
call
nop
pop
lods
faddl
stos
lock
fstpt
imulb
or
xor
sub
sub
stc
int3
out
push
arpl
mov
and
pop
in
pushf
mov
or
xchg
cli
in
gs
xchg
sub
xor
test
add
js
sub
adc
pop
ljmp
mov
and
mov
insb
scas
push
iret
fdivs
imul
cwtl
and
out
sbb
cld
mull
leave
ljmp
mov
fdivl
out
stc
sahf
xchg
mov
mov
mov
xor
pop
jno
jl
hlt
sub
shll
rcll
push
inc
push
outsb
and
fwait
ret
sub
jbe
aas
data16
fwait
out
push
jle
sti
lock
xchg
fnstenv
ds
inc
das
lods
sti
jae
cli
movsl
stc
sub
sub
cmpsb
and
or
add
jp
and
out
shrb
ljmp
xchg
popa
in
dec
popa
fadds
or
mov
jle
int3
jb
in
out
int3
and
cmp
pop
test
nop
or
dec
test
mov
sbbl
inc
push
and
pushf
and
push
push
and
inc
cmc
and
fistps
jno
enter
jb
cli
add
mov
mov
sub
aas
push
int3
mov
and
sub
test
ret
or
mov
clc
or
sub
js
sbb
inc
push
cmpb
das
and
cmp
jecxz
fdivrl
test
push
push
lret
mov
mov
mov
sbb
or
jp
jg
cmpsl
addr16
pop
dec
loopne
mov
test
xor
cmp
and
jmp
mov
add
cmpsl
push
jns
mov
xchg
ja
add
cmp
rcrl
ljmp
sti
je
xlat
mov
mov
dec
add
rol
xchg
cwtl
xor
xor
imul
nop
shr
hlt
adc
cmp
sahf
cwtl
enter
pop
ja
lock
push
gs
or
stc
mov
scas
fcmovne
sub
mov
jg
movsl
add
lretw
cmp
leave
xchg
subl
xor
jbe
sbb
mov
into
pushf
push
cwtl
xorb
adcb
lret
mov
popa
dec
cmc
lea
push
daa
pop
jle
test
add
sub
scas
or
sar
inc
cmp
adc
or
mov
hlt
add
loopne
jbe
sub
cmc
or
sti
adc
cmpsl
cli
sti
movsb
jno
mov
or
pop
test
lods
sub
dec
mov
mov
test
xchg
dec
sbb
in
dec
pop
mov
ss
add
sub
sarb
lea
in
push
int
mov
notl
scas
loope
adc
xor
stos
mov
fildll
mov
inc
mov
sar
add
xor
cmp
aad
in
and
subl
in
das
dec
xor
lea
insl
cmc
mov
outsb
xorl
cld
pop
jg
mov
mov
pushf
sbb
dec
sub
jbe
add
xor
add
std
push
lret
push
pop
adc
sbb
lods
das
pop
dec
loopne
or
mov
repnz
push
cmpsl
inc
insl
movsb
shr
inc
xlat
and
je
repnz
sbb
push
stos
jae
pusha
aad
xor
dec
imul
push
jns
ret
sub
movl
rcll
movsl
xor
and
jo
in
fstpl
mov
stos
iret
mov
popa
xadd
mov
sahf
jl
rorb
lahf
sbb
cmp
adc
mov
aam
imul
fs
mov
fmuls
not
arpl
fwait
mov
outsb
bound
xchg
cmc
jno
dec
jb
gs
cs
xchg
aad
mov
or
mov
cli
lock
in
lahf
and
sti
lock
shl
fsubrl
add
xlat
hlt
jg
mov
or
stc
mov
lret
pushf
sub
mov
imul
sbb
aaa
ljmp
cmp
loopne
jp
push
roll
cmpl
pop
push
inc
fists
add
repz
test
std
inc
mov
and
adc
sub
mov
jle
cwtl
aaa
push
mov
lret
dec
mov
shll
rcll
push
out
and
inc
sti
sub
add
xchg
dec
test
sub
jno
movsb
pushf
push
out
and
dec
bnd
in
in
sbb
and
dec
jo,pn
jecxz
or
cld
push
push
mov
sub
jne
ss
shrl
mov
adc
ljmp
mov
nop
jg
xchg
test
dec
inc
pop
xchg
sbb
mov
ds
fsts
js
ret
std
mov
pop
ds
cmpsl
jmp
sti
adc
xchg
lds
push
push
lea
sarl
jbe
jb
xchg
fxch
mov
inc
jne
dec
sbb
sub
stos
jg
out
sahf
adc
ljmp
xchg
xchg
pushf
iret
fisubrl
or
outsb
aad
inc
mov
enter
pop
xchg
sahf
sub
pop
jno
push
cwtl
out
icebp
pop
cmp
add
enter
hlt
jnp
lods
sub
adc
lret
notb
mov
std
shrb
xor
ret
jb
jmp
xor
xchg
xor
cmp
sub
jecxz
push
jle
and
leave
dec
inc
dec
add
lock
test
and
scas
test
cmpsl
out
in
jmp
jns
cmp
jno
sub
pop
mov
fcmovnu
pop
or
xor
xchg
arpl
sub
popa
jne
notl
xlat
xchg
or
cld
xchg
pushf
lret
enter
dec
pop
cmp
xor
clc
cld
test
jbe
jae
ds
mov
jae
hlt
scas
pusha
push
mov
ficomps
pop
xchg
cmpsl
cmp
and
mov
adc
test
mov
test
sbb
rclb
xor
sbbl
aas
sub
cwtl
xor
xlat
xor
sti
sti
xor
push
cmp
xor
and
mov
xchg
in
shll
xchg
jne
push
xor
sbb
pop
cmpb
aas
xor
fs
cmp
xor
jp
add
jl
loop
pop
adc
sub
sbb
negb
cwtl
cmc
pop
out
adc
lock
dec
sbb
jge
push
in
pushf
sub
fbstp
repnz
ret
push
inc
mov
jge
aaa
ljmp
cwtl
xchg
or
ja
sbb
ret
jne
sbbl
inc
aad
rclb
lret
notb
bound
iret
add
push
loop
mov
js
mov
and
push
or
fnstsw
shrb
sub
push
mov
cmp
push
mov
aam
mov
push
jg
jl
adc
inc
pop
inc
add
fwait
sbb
cltd
shr
movsb
cwtl
arpl
cld
lcall
inc
iret
arpl
and
scas
in
xbegin
and
jle
into
pop
je
lock
aaa
je
in
int
or
ja
sbb
mov
adc
cmc
mov
test
jle
or
jnp
outsl
sub
inc
inc
repz
int
jne
loopne
jmp
in
sbb
adc
mov
daa
mov
test
cs
mov
cmpsb
outsb
xor
dec
cmp
aas
lea
mov
cmp
xchg
xchg
adc
movsb
cmpsb
dec
addr16
xchg
jae,pn
sub
loop
ja
sub
jno
outsl
cli
adc
fisubrs
mov
mov
xlat
mov
pop
dec
fcmove
fbld
add
xor
addr16
nop
cmpsb
ret
sarb
mov
std
ja
loop
push
cmp
lock
arpl
jg
cwtl
mov
filds
mov
mov
lahf
fldt
lret
jns
jbe
cmpsl
xchg
lock
sub
test
fwait
rcrl
inc
bound
mov
loopne
cld
mov
movsb
shl
jl
push
stc
int3
or
push
out
mov
cmpsl
jo
jo
ljmp
shll
fsubrl
arpl
test
aam
lods
in
movsb
out
iret
jle
cmpsl
sbb
cld
aaa
cmpl
mov
or
jne
stc
adc
lret
notb
into
sub
inc
adc
repz
loop
mov
or
sub
and
scas
das
sbb
ficoms
ja
rorb
jnp
xchg
in
out
xor
js
int
inc
xchg
stc
xor
pop
jne
stc
mov
test
mov
das
js
xor
ret
les
sbb
cmpsl
xor
in
mov
adc
cmc
or
dec
ret
jno
lret
fimull
xchg
int
push
mov
mov
dec
outsl
ret
out
inc
pop
pop
or
jle
push
pusha
scas
loop
mov
dec
lret
adcl
xor
and
xor
aad
arpl
or
or
fmuls
xor
ja
lret
cmc
pop
scas
push
sti
int3
cmp
cmp
mov
cmp
mov
sub
stos
mov
mov
rcll
xchg
insl
mov
add
aaa
iret
xchg
inc
lock
cmpsb
js
mov
lahf
cmp
andl
andb
je
cmpsl
and
cmpsb
out
and
push
sarb
ficomps
jmp
dec
mov
jge
jo
xchg
jge
pusha
mov
pushf
pop
jle
xchg
mov
das
sub
push
add
sti
mov
mov
das
inc
daa
cmp
and
adc
or
stos
fsubrl
sbb
mov
adc
jns
int3
cmc
push
iret
push
mov
mov
mov
cs
mov
mulb
cs
ficompl
ljmpw
push
inc
test
adc
jle
popf
jnp
and
lods
add
movsl
sbb
add
call
mov
movsb
xchg
adc
mov
insl
stos
dec
lods
cmc
and
xor
repz
sub
arpl
inc
add
jge
push
pop
nop
xchg
and
outsl
dec
and
insl
pushf
mul
mov
pop
pop
cmp
mov
nop
lahf
mov
imul
xor
and
inc
ds
sbb
arpl
loopne
jno
mov
cmc
stc
xor
lds
add
mov
outsl
pop
nop
clc
pop
dec
inc
jbe
add
shlb
int3
mov
lret
add
call
cwtl
cwtl
popa
xchg
test
pusha
popa
arpl
repnz
lea
pusha
aaa
cmpsb
pop
aam
stos
outsl
pop
rcll
pop
idivb
lds
fdivp
sahf
cmpsb
subl
mov
ret
call
cmp
mov
cmp
fsubl
mov
bound
xchg
mov
cltd
sub
fwait
push
mov
dec
fdivp
add
leave
pop
mov
or
ss
loopne
xchg
cmpb
mov
dec
push
call
or
cltd
je
imul
xchg
inc
cmp
or
outsl
int
sbb
push
mov
fidivl
sub
ja
das
scas
xchg
sub
xor
xor
mov
gs
and
fnsave
je
fstpt
fstps
jg
cmp
add
stos
add
push
cli
fs
or
add
cmpb
js
das
sarb
imul
shlb
mov
xlat
cmpl
scas
loop
pop
mov
fistl
dec
or
loope
dec
mov
pop
sub
enter
jl
loope
inc
xchg
adc
cs
cmp
rcrl
jecxz
imul
int3
xor
and
rcll
out
push
data16
pop
cmp
loope
cmpsl
or
flds
icebp
je
push
pop
pop
scas
repnz
lahf
sarl
or
or
mov
or
sbb
insb
cmc
or
js
jp
or
mul
xchg
inc
cwtl
sub
mov
aam
jne
jo
leave
pop
lea
add
in
imul
sub
rcrl
cmpsl
mov
inc
lods
add
movsl
sbb
sbb
cmp
stos
cs
int3
mov
xor
inc
aam
loopne
mov
xchg
push
add
cmp
iret
es
stos
cmp
cmp
addb
out
aaa
mov
dec
sti
negl
fisttpll
jl
jbe
push
sbbb
cli
movmskps
cmp
xchg
cld
or
mov
jno
xchg
cmp
adc
leave
adc
lcall
push
out
cmp
and
cld
loopne
mov
mov
dec
ret
mov
mov
inc
xor
and
int3
inc
xor
inc
cvtdq2ps
add
stc
mov
call
out
movsl
icebp
sbb
nop
notb
mov
add
movsb
inc
xchg
dec
mov
shll
add
insb
ror
sahf
jne
cmp
sahf
jl
pop
ret
mov
pop
ds
mov
add
lods
xchg
arpl
std
inc
pop
sub
mov
je
inc
jb
cs
loope
xchg
repnz
hlt
stc
pop
mov
cmp
lods
sub
movsl
fs
lcall
aas
jbe
cwtl
orb
cwtl
aaa
push
lods
iret
hlt
mov
xorb
dec
lcall
sub
dec
lds
ss
push
pop
in
jns
cmp
mov
jns
mov
lods
testb
test
test
add
ficoml
mov
and
add
loop
stos
sub
or
mov
jae,pn
adc
enter
pop
or
rcrb
inc
popf
push
pop
cmpsb
mov
push
push
ret
mov
or
mov
mov
push
push
push
jmp
fists
es
push
idivl
in
push
or
sub
and
cmpsb
enter
dec
mov
popa
inc
inc
dec
jge
lea
movd
push
inc
inc
adc
jmp
gs
lods
jg
inc
dec
sbb
or
push
outsb
sbb
sbb
mov
pop
scas
cs
mov
mov
addb
or
inc
testb
mov
xchg
fstpl
jge
jecxz
mov
shrb
aad
mov
pop
stos
mov
add
mov
mov
movsl
inc
jmp
xor
push
pop
mov
pop
fwait
fs
hlt
mov
push
out
adc
xchg
cwtl
sbb
push
test
fdiv
ja
mov
adc
stc
sbbb
sbb
and
cmp
cli
xor
push
push
add
jp
mov
mov
mov
and
arpl
push
mov
mov
xchg
cs
adc
jo
mov
xlat
mov
call
jbe
test
adc
xor
push
out
sbb
mov
xor
es
loopne
xorl
pop
sbb
sti
rsqrtps
xchg
mov
icebp
shrb
cwtl
enter
cmpsl
and
subl
movsl
test
sbb
dec
pop
and
xchg
dec
mov
adc
add
ja
mov
int
xchg
je
loopne
pop
int
lods
push
and
test
sub
xor
sbb
xor
cmp
into
push
dec
fisttpll
push
pop
add
sub
pop
jecxz
enter
or
sub
inc
sbb
test
fnstenv
add
push
fimull
gs
sub
jne
movl
call
jmp
and
test
enter
sar
in
out
inc
into
sbb
xchg
inc
repz
hlt
leave
mov
dec
mov
inc
imul
adcb
mov
or
mov
idivl
je
pop
adc
mov
sbb
dec
clc
rol
jge
fsts
cmp
rcrb
clc
je
push
xchg
push
fcmove
sub
sbb
adc
test
pushf
repnz
xor
push
add
out
and
int
or
test
sbb
jae
test
repnz
fistps
push
mov
xchg
and
roll
gs
sub
mov
aad
xchg
sub
and
testl
sbb
or
mov
mov
xor
inc
xchg
mov
fmuls
mov
cmp
cld
loope
or
or
rorl
xchg
sbb
jne
mov
cmp
insl
ljmp
push
stos
ret
dec
cwtl
pop
sbb
sub
mov
pushf
push
mov
gs
insl
out
scas
in
popa
fcomi
xlat
aas
dec
ja
test
scas
mov
mov
and
shll
xchg
pop
lock
lods
inc
add
ficomps
push
mov
adc
pusha
pushf
lods
and
inc
sbbl
pop
mov
ds
fiaddl
and
and
jnp
inc
dec
mov
call
jns
scas
into
or
xchg
lock
rolb
lret
push
aad
sub
leave
pslld
add
or
sub
pop
arpl
mov
sbb
ficompl
ror
jo
jmp
imulb
xlat
add
jno
jae
and
mov
push
repz
lret
fmull
push
cwtl
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
pop
pop
inc
inc
leave
sbb
cmp
sbb
mov
shrl
fwait
aad
xor
insl
loopne
dec
cld
fdivr
mov
add
mov
inc
pop
or
mov
leave
xchg
es
out
insb
jmp
shl
or
and
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
dec
stc
push
insl
xchg
xor
sub
lock
jb
daa
fimull
jecxz
and
dec
push
jne
cmpsl
dec
xchg
in
in
mov
mov
xchg
int3
fcmovnu
gs
roll
loop
rorl
dec
push
inc
arpl
and
lds
and
mov
mov
jge
adc
mov
ljmp
adc
xchg
fwait
lock
inc
fs
jecxz
and
outsl
add
in
cwtl
mov
jge
adc
mov
mov
jge
adc
mov
ljmp
jne
outsl
fistl
and
sub
cmc
movsl
popf
leave
ds
scas
cwtl
mov
jge
adc
mov
mov
jge
adc
mov
ljmp
fs
out
lret
or
xor
add
adc
shlb
out
cmp
in
cwtl
mov
jge
adc
mov
mov
jge
adc
mov
scas
or
lds
out
loopne
out
fmull
ljmp
xchg
pop
push
push
ljmp
in
cwtl
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
push
cmp
rcrl
adc
mov
push
cmp
rcrl
adc
mov
push
cmp
rcrl
adc
mov
push
cmp
rcrl
adc
mov
push
cmp
rcrl
adc
mov
mov
dec
cbtw
mov
jge
adc
mov
nop
jmp
pop
aas
jae
cwtl
mov
jge
adc
mov
sbb
add
stos
adc
test
movsl
adc
call
imul
jns
js
in
jg
xchg
pop
push
inc
push
cwtl
mov
jge
adc
mov
mov
cmpsb
mov
mov
mov
aad
push
test
mov
popa
and
bound
xor
lret
jne
data16
subb
push
mov
or
xor
std
popa
or
jl
andb
pop
mov
mov
scas
jg
repz
mov
pop
and
sub
loope
je
data16
jae
sub
fmulp
jle
fistpll
fstpl
fs
sahf
mov
xor
jne
icebp
jle
xor
inc
push
test
push
lret
test
lock
movsl
dec
adc
cwtl
mov
add
xchg
shrb
iret
je
fs
cwtl
out
and
in
repz
daa
push
add
sbb
in
and
out
flds
xchg
loop
jno,pn
popf
xchg
shlb
xchg
popf
xchg
shlb
xchg
popf
xchg
shlb
xchg
popf
xchg
shlb
xchg
jl
inc
mov
repnz
dec
push
jbe
ja
mov
test
cwtl
mov
jge
adc
mov
mov
xchg
addl
outsl
mov
xchg
inc
insb
ret
shll
jb
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
cli
ljmp
gs
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
or
cli
jno
les
xchg
add
adc
cwtl
mov
jge
adc
mov
hlt
mov
and
dec
sub
mov
push
mov
xchg
adc
js
push
xchg
out
in
test
loope
orl
rcl
shrl
test
push
mov
adc
adc
js
fstps
or
pop
adc
fidivs
push
lods
divb
lahf
pop
cmp
rcrb
cwtl
mov
jge
adc
mov
xchg
add
jno
xor
data16
or
push
imul
insb
add
lret
push
push
sub
cmp
cwtl
mov
jge
adc
mov
mov
jge
adc
mov
push
xor
inc
out
and
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
push
imul
jne
cmp
mulb
testb
xor
in
arpl
jl
imull
ret
rorb
cltd
cltd
push
stc
in
out
push
sahf
push
sbb
mov
inc
out
fidivs
adc
rcl
aad
pop
push
jmp
add
sbb
das
mov
mov
sub
jg,pn
sahf
adc
inc
arpl
hlt
add
and
cmpsb
jmp
sub
scas
sahf
sbbb
into
rorl
push
stos
sti
mov
test
arpl
mov
int3
hlt
cmp
pop
mov
sahf
xor
xor
pop
sbb
inc
sbb
add
mov
ficompl
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
insb
dec
iret
movsl
xchg
imul
lock
add
mov
out
mov
test
icebp
mov
jg
fxch
lcall
int
mov
repnz
ljmp
mov
xchg
lock
or
mov
into
pusha
pushf
or
xlat
mov
jae
hlt
pop
outsl
adc
add
push
movsb
cmp
jb
jb
arpl
and
mov
pop
mov
push
pop
and
xchg
pushf
xchg
dec
in
mov
je
inc
incb
imul
dec
mov
pop
sub
adc
inc
mov
mov
adc
arpl
movsl
jno
div
imul
gs
cmpsl
cmp
add
repz
mov
dec
imul
fnsave
xlat
sub
fxch
inc
cmp
repz
nop
out
push
mov
jbe
cmp
lds
bound
ljmp
push
pusha
leave
lds
mov
in
repnz
aad
and
and
sahf
push
pusha
jmp
inc
xchg
xor
nop
xchg
pop
jns
jle
sub
loopw
dec
jns
ret
icebp
push
push
and
in
mov
adc
dec
dec
and
nop
push
and
out
xchg
mov
push
pop
cli
mov
add
sub
rol
add
jbe
scas
cmc
fcomps
or
cmp
and
lods
sub
dec
jg
ret
xor
movsl
arpl
cld
fstpt
xor
add
movsl
cmp
mov
mov
push
and
xchg
xor
mov
push
jmp
jns
jle
jge
mov
push
cwtl
mov
jl
in
inc
jl
adcb
rolb
dec
xchg
jge
adc
cli
sub
js
andb
lcall
ljmp
and
dec
sti
in
lods
scas
js
sahf
repz
cli
into
loope
jo
sbb
repnz
aaa
mov
cmp
pop
and
negl
cmp
es
rorl
inc
jbe
ficoml
rcr
sbb
add
pop
cmp
adc
cwtl
mov
shr
stos
insl
gs
or
push
imul
fcomps
int3
lcall
sti
sub
push
out
les
lds
popl
inc
dec
sarl
xchg
add
ss
ljmp
cmp
fistl
jno
in
ds
loopne
mov
dec
add
jne
mov
inc
repnz
mov
or
cwtl
notb
cmc
add
xor
ss
icebp
sub
stos
adc
mov
add
fcmovnbe
inc
push
dec
push
hlt
ds
icebp
and
sti
aaa
xchg
mov
and
fldt
adcb
into
jg
mov
popf
mov
int
adc
inc
clc
or
mov
add
pop
jge
cmp
test
ja
rorb
movb
and
ret
xor
and
cli
lret
pop
jg
sbb
or
ffreep
imul
inc
mov
push
stos
add
fcmovnbe
inc
push
popf
xor
sub
arpl
push
xor
test
jecxz
adc
mov
and
cltd
mov
cmp
rcrb
jns
fldcw
or
and
xchg
pop
aam
jnp
jecxz
push
leave
rclb
ljmp
mov
enter
notl
fbstp
xchg
test
cltd
dec
cltd
jae
xchg
incb
iret
dec
pop
jns
add
jno
jnp
dec
stc
mov
adc
xor
pusha
xor
movl
dec
sbb
or
xchg
scas
loop
les
mov
xchg
and
addl
jbe
jb
add
cmp
bound
in
cmpsl
rcll
in
imul
dec
imul
pop
cli
movsb
cmc
das
or
xchg
scas
loop
xor
movl
dec
sbb
in
or
adcb
sbb
cmpsl
rorl
rolb
bound
cltd
jae
xchg
incb
iret
dec
imul
pop
cli
movsb
cmc
in
mov
mov
dec
stc
mov
adc
add
jno
jnp
adc
jb
add
xor
inc
popa
mov
leave
nop
push
mov
xor
lret
addb
sub
lret
jne
adc
dec
jbe
jae
out
or
clc
sub
insb
mov
mov
aaa
aad
xchg
mov
push
loope
and
inc
cmp
and
leave
and
fs
inc
lea
bswap
push
jae
inc
std
mov
xor
call
cltd
sub
adc
test
pop
xchg
mov
mov
shll
adc
adc
and
pop
pop
or
clc
sub
insb
mov
pop
sub
scas
mov
je
jl
push
inc
mov
mov
addr16
or
pop
cmp
cmc
sub
lock
outsl
mov
lea
mov
into
andb
dec
xchg
dec
cmc
ja
adc
mov
mov
xchg
je
push
push
ret
sub
dec
repnz
popa
mov
das
imul
jmp
xchg
fiadds
mull
xchg
lret
and
or
jge
test
in
repz
cmpl
sbb
and
out
xchg
dec
jecxz
jle
sbb
push
mov
push
and
xor
aaa
in
pop
mov
fisubs
fadd
ss
dec
idivb
fwait
pushf
xor
mov
loope
data16
in
rcr
push
xchg
jnp
sbb
and
mov
xchg
lret
and
pop
adcb
jge
push
inc
jo
pop
cli
sub
jle
and
out
xchg
dec
repz
pusha
adc
pop
mov
push
arpl
xor
mov
inc
mov
mov
sbb
and
sti
inc
fcmovb
mov
sti
sbb
jecxz
mov
fcoml
mov
jns
pop
inc
rcll
int
cmpl
xor
scas
push
out
lock
push
shrb
call
popf
mov
arpl
xchg
jno
mov
add
mov
jg
aad
rcrl
inc
and
sbb
mov
sbb
int3
iret
mov
mov
mov
xor
cmp
lods
sbbb
xchg
in
jecxz
rcll
jl
jne
push
loopne
or
divl
xor
xor
scas
xor
dec
je
jle
xchg
aas
sub
fildl
mov
aad
add
rcll
ja
dec
cmp
push
ret
jno
or
movsb
pop
in
xchg
ss
cmp
dec
push
add
sarb
push
adc
or
or
dec
jecxz
lock
cld
les
pop
scas
xor
jle
ljmp
enter
xor
xlat
pop
mov
push
xor
mov
mov
sbb
xchg
xor
rcll
out
xor
enter
mov
es
cltd
ss
add
sbb
pop
inc
or
mov
mov
imul
push
inc
inc
jge
call
pusha
jns
popf
xchg
adc
mov
ret
inc
sub
out
popa
insb
push
daa
addr16
inc
out
sbb
idivb
push
cmp
and
pop
das
rorb
sbb
lods
mov
jmp
fistps
jl
and
fsubr
jbe
pusha
mov
leave
sbb
jecxz
xchg
adc
xorb
stos
movsl
add
cmpsb
sbb
rclb
cmc
ja
insb
aad
ficoms
ja
push
and
push
adc
flds
rorl
cmp
lret
insb
std
sahf
bound
mov
inc
cmp
bound
and
xchg
test
int
adc
rolb
xlat
push
iret
repnz
adc
adc
iret
popa
arpl
mov
fldcw
jbe
out
mov
adcl
pusha
ret
pop
push
fnstenv
sbb
fs
mov
dec
fcmovne
add
data16
sbb
aam
test
mov
lret
rorl
dec
cmp
jle
push
add
sbb
pop
xor
jle
mov
shrb
fnstcw
mov
cwtl
lcall
push
hlt
mov
and
adc
and
test
adc
xor
jbe
inc
popa
and
jno
cmpsl
and
aad
stos
push
jnp
hlt
and
repnz
xchg
into
movsb
test
loop
pop
xor
fnstsw
push
xchg
repz
cmpsl
or
mov
scas
adc
fstp
sahf
push
mov
mov
jmp
sbb
inc
inc
test
mov
push
push
aaa
push
push
mov
cmp
mov
xor
mov
adc
dec
hlt
pushf
psrlw
mov
sub
pop
adc
hlt
jmp
lock
ja
sub
sbb
negl
out
mov
lret
movsb
fidivs
imul
sahf
adcb
sbb
and
shll
movsl
fdivrl
pop
outsb
or
je
in
es
lret
cmp
dec
and
loopne
adc
push
push
or
xorb
mov
loope
lret
out
scas
push
out
outsb
mov
adc
mov
mov
pop
mov
lahf
loop
andb
pop
pushf
pop
push
push
dec
jg
jmp
js
sahf
cltd
ret
xchg
int
cmp
cli
dec
adc
jmp
in
push
testb
mov
sub
ret
lret
cmp
in
mov
inc
add
in
jp
lods
adc
insl
adc
adc
imul
xchg
xchg
mov
loop
loop
cld
jno
push
mov
stc
xor
pop
jne
stc
shrb
inc
pop
inc
sbb
or
mov
out
aad
fwait
pop
xchg
jno
mov
loope
mov
aaa
add
cmp
sub
and
sub
int
shll
mov
sub
lahf
mov
inc
daa
jno
test
push
cmp
sbb
sbb
icebp
inc
in
into
jle
or
inc
xor
in
repnz
sbb
cmp
imul
bnd
pop
mov
xchg
repz
or
dec
or
or
jo
js
fimull
punpckhdq
push
jno,pt
fnsave
cmp
int3
xchg
cmp
ljmp
pop
jne
stc
push
in
inc
pop
xor
push
sbb
lret
stc
push
lahf
xchg
aad
add
sub
and
mov
inc
imul
xchg
popa
push
dec
out
fmulp
cmpsl
xchg
repnz
dec
leave
push
add
lods
test
jg
cwtl
jmp
call
pop
popa
xchg
lock
rol
add
std
xchg
and
jo
adc
xchg
mul
and
out
mov
jb
repnz
mov
mov
jle
mov
mov
mov
shlb
inc
sbb
lea
mov
inc
dec
mov
inc
lods
pop
mov
testb
cli
inc
rcll
add
lret
daa
mov
loopne
xchg
adcb
or
inc
out
in
fs
push
mov
insl
fstpl
and
mov
or
gs
inc
pop
ss
testl
pop
xchg
xchg
push
and
mov
xchg
adcb
xchg
dec
jno
insb
add
mov
mov
add
pusha
jecxz
lods
bound
rcll
hlt
iret
hlt
pop
push
ret
jg
outsb
xor
les
outsb
sti
loopne
inc
push
movsl
mov
insb
mov
iret
sub
add
ss
test
jo
inc
dec
mov
hlt
cmp
cltd
sbb
mov
fs
xchg
stc
xor
pop
jne
stc
xor
daa
jno
test
push
cmp
sbb
dec
repz
daa
cmpsl
mov
sahf
sub
test
dec
jecxz
xorl
mul
mov
rorl
cmp
sbb
sbb
sar
adc
inc
lahf
jecxz
aas
fimuls
in
test
bound
or
gs
jecxz
es
mov
push
xlat
dec
inc
cmp
lret
or
in
stc
sarl
inc
lds
mov
inc
mov
pop
add
mov
mov
xor
xchg
adc
lahf
rclb
xchg
iret
adcb
dec
loop
cmp
or
sbb
inc
lea
adc
add
xor
mov
sbb
push
inc
inc
sbb
xchg
leave
dec
jb
loop
les
ret
outsb
xchg
mov
dec
push
stos
push
xor
sarb
pushl
fsts
clc
or
fadds
lods
popa
xchg
imul
mov
enter
push
int
push
inc
push
mov
mov
pop
sub
and
xchg
dec
shlb
dec
loop
scas
pop
or
rcll
inc
sub
dec
js
or
push
sub
test
fsubrp
andl
add
xchg
sbb
sarb
sbb
push
ret
xor
mull
and
add
push
movsb
clc
outsl
pop
adc
add
fnstenv
cmp
cmc
jae
mov
or
sub
aas
fs
pop
ja
stos
jmp
out
mov
adc
iret
cmpsl
xchg
sub
cmp
sub
aaa
aad
sub
sbb
fisubrs
mov
addr16
add
cmp
ja
cmp
das
pusha
or
inc
stc
pop
cmpsb
cmp
out
pop
sbbb
mov
sbbb
testl
popf
xchg
cmp
and
mov
pop
sub
ja
cmp
mov
ja
adc
test
cmp
out
mov
repnz
cld
test
mov
cld
add
add
xchg
jp
jecxz
adcl
pop
aaa
mov
dec
pop
mov
lods
jle
push
in
loop
fucom
push
jle
cmp
je
jnp
ret
push
xor
out
xlat
mov
divl
xor
sbb
push
es
adc
dec
arpl
scas
insb
pop
outsb
jbe
xor
pop
pop
pop
mov
idivl
xor
add
shlb
push
loop
pop
dec
jl
cmp
pushf
mov
call
test
cmc
jg
addr16
mov
xchg
adc
loop
imul
xchg
inc
jmp
mov
xlat
inc
ret
bound
imul
sub
stc
and
or
mov
js
shl
jb
stc
and
jnp
dec
jno
adc
mov
fisubrl
leave
xor
out
je
sbb
sbbb
stos
fs
cmp
jle
or
rolb
rol
aad
roll
mov
push
inc
inc
cmp
mov
cmpsl
scas
add
adc
das
sbb
repnz
push
popa
xchg
cli
xchg
out
sbb
mov
dec
adc
imul
test
inc
xchg
int3
sub
push
sbb
push
sub
rcr
imul
mov
xor
cli
pop
lds
adc
cmp
in
fstpt
and
in
lods
jp
dec
dec
sub
sub
or
cmp
xor
mov
jp
and
ljmp
in
cmp
xchg
pop
pop
cwtl
xchg
pop
stos
and
in
repz
cmp
lock
in
cltd
dec
cmp
popa
inc
add
inc
cli
pop
out
daa
adc
dec
xor
cmpsb
call
and
push
pop
mov
pop
lahf
lods
lcall
outsl
xor
and
sbb
adc
jne
mov
mov
in
or
lret
int3
bound
sub
cltd
xor
mov
and
mov
push
adc
in
sbb
mov
stc
xor
pop
jne
stc
dec
mov
je
cmp
sub
mov
jbe
sahf
and
xchg
inc
dec
call
inc
aam
push
clc
lods
leave
sub
inc
push
call
std
rcll
bnd
dec
xor
and
mov
fs
shrb
inc
pushf
cmp
inc
jle
mov
test
sub
cmpsb
mov
add
mov
pop
push
jnp
mov
jno
adc
int
cltd
cmp
sub
mov
fwait
mov
xchg
cmc
test
jbe
movsb
xchg
push
aad
xor
jl
jg,pn
inc
push
and
jo
sbb
jb
jg
sub
daa
jo
cmp
and
xchg
andl
add
add
dec
pop
and
addr16
add
add
push
mov
divb
push
mov
sbb
jp
xor
and
notl
imull
push
mov
sub
sbb
test
add
ss
or
lods
and
loope
mov
adc
push
stc
jne
push
movsl
sub
fst
xor
clc
mull
push
cmp
mov
sarl
or
pop
push
jge
ret
mov
xchg
cmp
ljmp
enter
rolb
call
push
jnp
jle
shrb
scas
jp
or
xor
movsl
ss
mov
xor
mov
pushf
mov
fs
ja
insl
push
sbbl
or
sub
dec
and
push
xor
lods
lcall
testb
shll
xchg
jo
fs
negl
xchg
popa
sub
mov
dec
mov
pop
movb
test
xchg
xchg
sbb
cmp
jnp
out
call
in
sbb
cs
xchg
xor
mov
std
sbb
and
fisttps
lcall
xorb
pusha
pcmpeqw
lods
stc
cmp
xlat
and
push
sub
sbb
mov
fs
pop
bound
mov
in
cs
ja
lock
push
xchg
test
inc
mov
popa
jecxz
push
shll
xchg
stc
xor
pop
jne
stc
push
xor
jb
ljmp
leave
inc
icebp
rcrl
leave
mov
sbb
rol
fwait
out
lods
jg
mov
push
adc
dec
pop
or
test
imul
in
lea
outsb
movsl
xor
mov
loopne
dec
repz
mov
xchg
or
scas
lret
and
cmp
mov
cmpsb
popf
je
loopne
ret
ret
jbe
ds
stos
or
imul
mov
adc
mov
mov
mov
call
mov
xchg
jb
or
cmp
out
mov
mov
inc
mov
jnp
pop
add
pop
mov
outsb
mov
aas
lret
aam
es
test
out
xor
mov
out
push
iret
movsb
adc
loopne
dec
jg
add
dec
test
pop
in
mov
xchg
inc
jecxz
dec
adc
pop
int
int3
leave
pop
pop
sub
out
subl
mov
or
jecxz
push
ds
fnstsw
mov
lds
inc
push
pop
mov
notb
xchg
aam
add
xchg
lods
je
rcll
or
jp
scas
pop
mov
mov
pop
push
sub
popf
inc
aas
adc
sbb
dec
add
and
xor
pmaxub
sub
pusha
outsb
in
lea
or
notb
xchg
popa
lea
hlt
int3
pop
into
leave
or
dec
lcall
rcrl
sub
mov
and
aaa
cmp
push
cmp
push
xor
int3
ljmp
pop
clc
adc
and
add
lods
mov
or
cmpsb
push
push
bound
roll
insl
insl
push
jb
icebp
add
cmpl
push
gs
mov
rcr
pushf
nop
bound
hlt
scas
jge
sbb
adc
inc
jle
lods
mov
or
shlb
or
and
add
pop
outsl
scas
jge
push
inc
loope
mov
push
loope
push
cmpsb
movb
outsl
repz
jge
sbb
jl
dec
push
inc
inc
insl
push
sbb
sbb
or
lahf
nop
add
dec
jge
inc
push
cltd
sbb
daa
push
clc
data16
jbe
jmp
imul
scas
insl
lock
aas
jno
inc
insl
sub
lock
stos
jb
add
xchg
pop
pop
aas
xlat
push
ret
mov
into
cmp
test
push
aad
std
movsl
in
pop
inc
test
outsl
fcomps
xchg
mov
dec
or
push
mov
mov
jg
pop
aas
adc
popfw
test
addr16
mov
adc
mov
mov
mov
sub
cmp
enter
movsl
push
fbld
out
cmpsl
lahf
inc
jmp
sbb
jns
lods
sbbb
test
fmull
and
mov
pop
inc
xor
scas
out
jo
mov
mov
in
dec
jmp
lods
ss
ljmp
sti
cmp
imul
push
ret
xchg
jnp
shll
fsubl
inc
cmp
xchg
jnp
and
dec
push
jae
sbb
fdivr
scas
mov
fcom
pop
xor
or
sbb
lods
mov
sarb
pop
nop
xchg
out
in
mov
jne
test
xor
mov
mov
outsl
pop
push
sub
pop
into
sahf
repnz
pop
lods
sti
adcl
sub
cmpb
dec
fnstcw
sti
mov
test
ror
cmp
xor
pop
out
xchg
stc
cmp
in
or
clc
sub
mov
sbb
mov
add
mov
cmc
rcll
mov
and
rcrb
outsb
nop
in
cmp
sub
fidivs
mov
and
xchg
inc
push
stos
stos
in
in
pop
sbb
test
xchg
pop
cmp
aas
pop
or
adc
aaa
pop
and
fsts
int3
lcall
push
jb
out
mov
popa
in
fwait
push
mov
daa
dec
cmpsl
sbb
pop
sub
fstl
pop
push
mov
inc
mov
mov
inc
arpl
lret
jb
cld
shrb
push
imul
aad
ret
lds
jae
mov
jmp
xchg
movsl
xchg
dec
jns
andb
lds
popa
cwtl
out
in
fsin
sete
inc
dec
je
xchg
mov
mov
pusha
repz
mov
xchg
xor
and
fildl
ja
pop
or
mov
mov
cmp
xchg
and
sub
wrmsr
bound
outsb
dec
xor
lahf
fcom
push
inc
adc
add
icebp
cmp
dec
incb
aas
stos
inc
repnz
push
push
fdivrl
dec
ja
jo
icebp
mov
pop
cwtl
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
int3
sub
es
ret
add
inc
mov
or
leave
imul
lea
add
ret
insb
jp
loopne
mov
sbb
shrb
sti
sbbb
inc
rsm
inc
popa
xlat
xor
push
sbb
jg
fcomps
std
xor
mov
rclb
adcb
inc
leave
imul
xor
mov
inc
out
fcompl
cmp
rcll
je
insl
repnz
xchg
mov
xchg
cmpsl
inc
imulb
cltd
jle
mov
pop
push
sub
jmp
dec
jg
pop
std
mov
ficomps
stc
push
test
inc
mov
lret
or
jl
mov
fists
push
iret
sbb
sbb
ljmp
je
sbb
in
lods
xchg
mov
mov
cwtl
repz
mov
cmc
inc
inc
aad
mov
sbb
fdivrs
dec
fwait
lret
cmpsb
mov
mov
mov
xor
xchg
shlb
lods
sbb
mov
push
scas
imul
stc
jns
mov
xor
rcr
es
dec
gs
xchg
pop
pop
sub
lret
pop
movsl
mov
pusha
dec
hlt
adc
pop
or
push
out
lcall
sahf
out
aaa
scas
jge
jecxz
adc
aad
fadd
jmp
insl
es
mov
push
add
sti
pop
push
push
cmp
lcall
popa
mov
and
imul
mov
and
ror
stos
or
push
cmp
dec
xor
cmpsb
push
addb
push
mov
mov
adc
loop
fiaddl
jmp
jl
sub
mov
or
out
mov
mov
aad
js
cld
jno
jae
icebp
push
mov
aad
jp
test
je
inc
pusha
ret
out
insb
cmp
cmpsb
pop
rdpmc
pop
xchg
dec
jne
dec
add
rcpps
gs
push
xor
inc
xor
mov
lods
pop
hlt
std
dec
sbb
inc
aas
insb
jae
rclb
and
inc
popf
cmpsl
dec
std
sbb
push
dec
jecxz
sysret
xor
insb
xchg
mov
mov
pop
notl
inc
xor
or
mov
push
in
jae
outsl
movsl
cld
imul
cmp
ficoms
dec
fldt
pop
js
das
aaa
cs
sub
mov
bound
mov
xchg
jmp
dec
ret
cmc
mov
jl
and
mov
xchg
jne
push
jecxz
and
jb
insl
mov
sub
pop
rorl
das
sti
mov
xchg
pop
cmc
pushf
test
testb
sub
add
ja
push
add
dec
ljmp
lods
inc
sub
js
add
aas
jno
xor
mov
cmp
enter
leave
insb
mov
mov
in
jecxz
add
mov
push
adc
add
jmp
xchg
pop
daa
in
mov
pushf
add
mov
mull
or
lcall
imul
add
sub
mov
push
xchg
stos
repnz
sbbl
out
in
andb
or
fiadds
dec
cmpl
and
push
and
push
pop
out
mov
mov
test
xchg
out
cmpsb
xchg
push
movsb
enter
out
inc
popl
xor
fmuls
pop
push
shrl
mov
insb
mov
adc
into
adcb
ds
xchg
xchg
cltd
bound
dec
repnz
push
jne
push
mov
bnd
test
inc
pushf
outsl
mov
xchg
shlb
ficomps
mov
pop
loopne
pop
loopne
xchg
andb
jno
mov
xor
push
sub
push
or
ret
mov
out
and
fildl
movsb
sti
cld
cmp
jp
sbb
mov
cltd
dec
sbb
subb
jge
pop
push
push
mov
sti
xchg
or
mov
imul
imul
incl
addb
gs
ljmp
mov
cs
or
ja
jo
outsl
jl
rcll
mov
lret
jb,pn
idiv
fdivs
mov
lret
and
cs
mov
lret
jns
push
lods
lods
sbb
divb
adc
pop
push
xor
rcrl
mov
movsl
xlat
cmp
mov
inc
xchg
aaa
xor
and
mov
adc
cmc
test
jmp
jns
les
jbe
mov
jle
xchg
push
fs
andb
xor
ljmp
ja
dec
pop
jmp
xchg
or
pop
fcmovbe
pop
sti
mov
or
jb
popf
sub
lahf
outsl
lock
and
mulb
inc
dec
pop
and
adc
das
xlat
xor
sbb
movsb
adcb
lods
mov
sarb
lcall
sub
sub
jp
fimuls
rcrl
jg
jae
popa
sub
sbb
ljmp
lods
adc
stos
dec
sub
sbbl
xor
mov
adc
arpl
test
push
xor
repnz
shlb
jmp
mov
inc
lods
push
pop
inc
mov
pushf
xor
aam
mov
mov
adc
inc
cwtl
lret
jl
push
inc
dec
les
sub
pop
sub
mov
dec
adc
sbb
ret
push
fildll
daa
xchg
adc
arpl
lods
inc
repz
jo
sbbb
rcr
addb
das
push
pop
fistps
xchg
test
mov
jno
cmp
aas
inc
imul
pop
divb
dec
mov
ljmp
jnp
test
mov
data16
jb
jns
mov
sub
sub
das
gs
sahf
jb
ret
xchg
sahf
fs
push
rorb
mov
test
pop
jae,pt
std
je
es
adc
lock
outsl
mov
xchg
xchg
push
pop
mov
inc
outsb
mov
dec
push
cli
call
lcall
jo
in
icebp
ret
mov
mov
les
jo
sbb
fmul
bound
inc
iret
mov
cmp
fisubl
add
adc
enter
call
scas
or
xor
xchg
scas
out
dec
bound
orb
loope
jbe
adc
jnp
mov
sub
fsub
dec
out
xchg
sbb
test
mov
leave
xchg
xchg
inc
aas
push
mov
call
and
sbb
adc
je
mov
std
lcall
mov
gs
jl
xchg
xor
repz
push
jecxz
inc
popa
push
bound
shrl
es
mov
or
shll
jnp
les
inc
pop
jle
ss
sub
mov
push
mov
push
insb
sti
cs
sbb
mov
add
pop
test
mov
push
sbb
adc
and
mov
or
jno
out
test
push
cltd
add
jns
sbb
enter
xchg
add
lcall
and
mov
mov
xchg
inc
icebp
push
js,pt
or
jge
fs
lods
les
sub
push
lcall
mov
fcompl
dec
add
jae
xor
mov
enter
jle
stos
jle
ds
and
ret
loopne
sub
fisttpl
push
andl
add
fwait
jmp
sbb
int3
cmc
jge
das
mov
ret
jg
ja
and
inc
jb
mov
xchg
mov
lods
mov
push
decb
add
xor
jno
or
xchg
out
fadd
sbb
dec
loope
mov
dec
roll
aad
or
hlt
ss
push
mov
leave
mov
add
push
push
and
ja
mov
or
and
dec
cmp
mov
shl
loopne
push
xchg
movsb
inc
mov
push
decl
out
hlt
xorl
ret
sbb
add
pop
jb
xchg
pop
cmp
enter
inc
insb
ss
inc
inc
xlat
cmp
add
add
insb
push
lea
lock
pop
pop
fs
cwtl
xchg
dec
xchg
push
rcrl
dec
add
adc
icebp
add
xor
add
and
push
jge
jle
fprem1
int3
push
repnz
scas
inc
daa
dec
into
aam
xor
xlat
pushf
lahf
cmp
push
pop
sub
or
sub
test
es
repz
mov
movsb
pop
sub
inc
and
add
sub
push
cltd
mov
mov
jmp
in
mov
jae
sub
and
xchg
pop
add
and
sub
movsb
pop
push
into
imul
test
fadds
ffreep
ret
add
test
jnp
les
insb
xor
xor
icebp
lea
movl
push
sub
divb
repz
sub
jnp
add
filds
mov
inc
push
inc
cli
or
ret
sbb
and
jmp
dec
dec
or
sbb
out
daa
pushf
mov
inc
push
cs
adc
mov
repz
push
mov
or
repz
outsl
dec
stc
leave
add
test
push
daa
sbb
mov
vshufpd
leave
pop
cmpl
sbb
adc
pusha
stos
xchg
xchg
ficompl
dec
int
xor
dec
push
sbb
sbb
mov
popa
add
push
jecxz
es
pop
cmp
jle
and
push
in
jle
inc
inc
jg
lahf
cwtl
std
into
xlat
scas
jbe
xchg
lea
push
add
pop
cmp
sub
xchg
fwait
adc
loopne
push
stc
addr16
popf
das
gs
testb
hlt
cli
or
scas
adc
sbb
out
mov
test
cmp
ror
cmc
out
enter
sbb
leave
cs
repnz
in
xor
xchg
or
dec
or
mov
pop
movsb
aam
or
insl
ret
lahf
cmpsb
fildl
xor
mov
pop
add
pop
push
push
in
aas
lcall
jecxz
bound
mov
dec
cmp
jmp
and
cmp
les
cld
sub
out
inc
outsl
notl
dec
dec
lcall
push
jnp
scas
cli
scas
jp
dec
popf
rorb
sub
mov
inc
push
lret
xchg
inc
push
mov
add
jnp
movsb
fisubl
jp
and
cli
jle
out
inc
mov
cmp
dec
mov
andb
mov
mov
jg
add
dec
and
push
test
hlt
inc
and
sbb
lds
outsl
aaa
jecxz
add
pushf
outsl
xchg
add
sub
imul
jbe
pop
jbe
or
out
bswap
popf
imul
les
scas
mov
scas
inc
push
stos
mov
mov
mov
fs
std
cmp
mov
add
int
outsl
pop
mov
cmpsb
xchg
push
fiadds
add
pop
dec
jle
call
sbb
inc
orb
scas
repnz
sub
adc
enter
ds
sub
cmp
xor
aaa
aad
stc
pop
mov
lods
stc
mov
fdivr
mov
and
cs
orl
fcmovnbe
mov
xchg
in
mov
sbb
gs
xchg
out
xchg
lds
lods
fldt
scas
ljmp
jp
cmp
je
out
push
test
push
xchg
jae
icebp
pop
out
test
fnstcw
mov
push
scas
adc
or
push
fdivrp
or
loope
aas
imul
push
jmp
jno
testb
mov
mov
sub
pop
mov
sti
aas
mov
add
sti
pushf
push
dec
mov
ss
ret
jae
dec
add
subb
add
insb
adc
into
or
mov
push
punpckhwd
xor
fsts
loope
xlat
gs
push
push
pop
mov
sub
mov
inc
cmp
jnp
iret
movb
jno
push
mov
jge
mov
adc
dec
inc
jo
push
add
and
push
gs
stos
divl
subl
aas
pop
mov
or
lret
clc
sbb
shlb
pop
test
pop
fmuls
add
xchg
rolb
sahf
xor
adc
xlat
shll
sub
popa
pop
clc
mov
xlat
mov
pusha
xor
fucom
mov
clc
push
pop
xor
xchg
js
pushf
div
movsb
mov
xor
pusha
cmp
cmp
pop
push
jae
sbb
pop
xor
stos
xchg
adc
sbb
test
sti
jecxz
aaa
inc
dec
inc
xchg
testb
pop
jae
and
pop
mov
sbb
pop
lods
loope,pt
aaa
ljmp
dec
repz
aam
pop
xchg
nop
dec
stc
rorl
in
push
push
add
mov
adcb
xor
aad
test
cmp
push
jo
out
repz
loope
div
xchg
cmp
fsubs
push
cmp
shrb
lahf
hlt
push
fadd
sub
inc
pop
pop
jmp
push
cmp
jo
cmp
mov
cli
movsb
mov
in
sub
inc
mov
mov
mov
test
sar
jne
repnz
jne
rcrb
divb
les
jecxz
push
dec
add
fcomps
mov
sbb
fimull
xchg
daa
popf
or
mov
sbb
mov
cmc
mov
leave
push
les
sbb
inc
jecxz
lods
and
fidivs
xchg
icebp
dec
xchg
loope
insb
in
insb
and
loope
push
cmp
imul
scas
es
sti
lods
jns
leave
push
jb
add
dec
sub
mov
xor
fs
dec
test
sub
popf
adc
cmp
fnstenv
pop
xchg
bound
test
test
adc
or
pop
addr16
lods
lock
cmp
pushf
mov
leave
mov
stc
push
ss
movl
adc
out
adc
testl
loope
mov
loope
fisubrs
int3
cltd
xor
sub
into
lock
js
fldcw
icebp
repz
je
js
jmp
push
pop
cli
push
mov
inc
pushf
push
sbb
mov
xor
and
inc
xchg
out
ljmp
les
sbb
pop
add
repnz
add
mov
mov
push
stc
and
and
hlt
xchg
or
fs
jle
and
shll
pop
dec
aas
std
dec
xchg
mov
xorl
dec
into
cmp
mov
push
mov
insb
xor
and
or
and
sbb
add
xchg
add
call
lea
inc
xor
scas
int3
aam
gs
mov
pop
jb
inc
repz
popa
popf
jl
mov
and
into
lods
fidivrs
jg
test
sbb
mov
xor
popa
jl
fcomps
push
xor
cmpsl
jp
in
stc
loop
mov
aad
push
imul
jge
mov
mov
lods
pop
into
lea
push
inc
mov
nop
xor
lahf
ret
loop
loopne
or
or
or
pusha
mov
sahf
push
mov
leave
loopne
pop
push
mov
int3
push
cli
mov
maskmovq
divl
or
fildl
cld
mov
ja
mov
sbb
scas
cmp
loope
mov
test
imul
inc
lods
leave
cltd
sbb
mov
adc
xchg
bswap
scas
xchg
inc
sbb
rcll
add
push
inc
dec
stos
inc
mov
xchg
out
push
cmp
addb
xchg
inc
out
cmpb
xchg
loop
jmp
mov
or
pop
jnp
adc
jmp
mov
mov
lret
daa
incl
scas
cmp
xlat
sbbl
and
mov
divl
into
jecxz
jbe
ja
sbb
mov
xchg
ror
xor
xchg
sarl
and
sub
int
pop
pop
pop
sub
pop
push
xchg
stc
test
pusha
sub
cmc
test
ret
mov
adc
xchg
call
xor
xchg
sbb
mov
imul
nop
sub
rolb
sub
test
inc
test
lret
cmp
scas
nop
cli
pop
fcompl
inc
jnp
in
pop
loopne
push
and
cwtl
sbb
adc
xor
lock
divb
mov
mov
dec
jecxz
sbb
lret
orl
mov
stos
jmp
dec
inc
mov
sbb
cmpsl
sub
sub
pop
int3
sbb
adc
pop
ret
out
mov
fwait
ljmp
dec
xorl
push
fadds
rcr
cwtl
push
or
push
xchg
cwtl
sub
jp
out
lods
mov
xchg
shl
or
lock
push
jae
push
inc
mov
or
das
jecxz
mov
ja
xchg
scas
loopne,pn
sub
fwait
inc
fdivr
xchg
gs
lods
jmp
sub
mulb
call
inc
xchg
les
shl
sbb
mov
push
ljmp
and
jae
mov
jmp
fs
inc
cmp
sbb
inc
pop
jecxz
fs
fs
call
subb
fadd
jp
dec
dec
jge
ss
xor
push
or
pop
fnsave
mov
into
sbb
jbe
xor
mov
sub
mov
add
mov
cmp
inc
push
es
sub
fildl
or
sub
mov
add
xchg
add
mov
push
pop
sub
xchg
outsb
mov
rclb
test
xchg
daa
inc
xchg
dec
cmp
adc
ss
mov
jno
sbb
pusha
mov
stos
push
and
add
fldt
mov
mov
lcall
xlat
pushf
push
jnp
jae
test
cli
cmp
stc
ret
popa
push
mov
icebp
pop
add
fsub
cmp
add
push
or
push
nop
xlat
jno
int3
mov
pop
mov
mov
mov
mov
jge
lret
mov
add
lahf
inc
rorl
loop
fwait
outsl
adc
loopne
pop
jae
cmpsl
jecxz
dec
sub
cmp
push
mov
cmpb
imul
sbb
adc
jp
lds
mov
sub
data16
mov
pop
dec
xchg
or
pop
or
cmpsl
jmp
xchg
pop
ds
jne
xor
je
repnz
pop
inc
push
in
vcvttsd2si
pop
jnp
mull
push
inc
fldl
adc
imul
add
xchg
aam
aam
sahf
js
hlt
dec
movsb
cmp
lock
daa
add
mov
or
lret
lods
ds
fcompl
cwtl
xchg
sbb
jmp
or
xchg
out
mov
mov
das
push
or
icebp
push
mov
sbb
aaa
xorl
rorl
stos
pushf
jno
xchg
test
xchg
push
mov
popf
fiadds
data16
sub
cmp
lcall
cli
adc
lret
and
in
lea
add
lea
loop
cmp
mov
clc
cmc
jo
jl
push
insb
jbe
loop
mov
rolb
adcl
lea
xchg
fwait
loop
mov
adc
in
pop
mov
push
shr
sub
movsb
push
lods
fsubs
divl
cmp
fwait
mov
stc
inc
jns
movsb
inc
sbb
ss
pop
jl
mov
das
test
mov
scas
xchg
xor
cmp
mov
cmp
xchg
clc
gs
mov
or
and
rolb
cli
enter
aas
cmp
cmp
inc
push
push
xchg
fdivs
add
dec
sahf
xchg
jp
and
sti
bound
adc
add
div
insl
aam
mov
xchg
add
sub
inc
insl
inc
dec
jne
shlb
cli
mulb
pop
lret
add
jp
pop
into
out
bound
imul
and
push
shl
arpl
mov
scas
inc
fimuls
testb
daa
stos
sub
and
ljmp
andb
xchg
xor
shlb
imul
sbb
mov
shl
iret
jmp
push
jp
sub
cmc
or
inc
mov
adc
movsl
or
jns
and
nop
jbe
dec
mov
push
xchg
scas
pop
loope
add
add
pop
add
xchg
sub
add
pop
js
push
pop
xor
adc
std
jno
aam
andb
nop
test
mov
pop
mov
sbb
pushf
icebp
sub
rcr
jb
popf
xor
dec
jae
jnp
incb
fistl
aaa
faddl
pop
fisubl
jecxz
xchg
loopne
and
js
int3
cmp
enter
cmp
jnp
cmp
into
cli
dec
and
xorl
je
dec
mov
or
iret
inc
mov
mov
orb
dec
adc
xchg
aaa
or
pop
pop
dec
pusha
inc
out
repnz
in
adc
inc
jae
xchg
stos
mov
or
stos
sub
mov
imul
push
das
mov
sub
popf
je
sub
flds
add
and
mov
scas
dec
fiadds
cli
sub
fcmovb
mov
inc
sub
cmpsb
les
in
incl
hlt
test
scas
repz
scas
iret
mov
jmp
jle
add
fnstsw
dec
xchg
dec
sbb
mov
int
lret
jno
outsl
leave
push
fisubrl
int
dec
xor
rorl
test
mov
mov
push
in
iret
pop
mov
dec
inc
aam
mov
ret
pushw
sub
lahf
inc
push
add
cmp
rcl
pop
xchg
adc
dec
les
mov
leave
stc
push
sub
add
loopne
imul
int3
and
jge
sub
dec
push
xor
int3
scas
addr16
mov
popa
out
enter
or
push
repz
xor
jecxz
aaa
mov
adc
jnp
xchg
ret
lea
cmpl
cmp
addr16
hlt
and
daa
in
dec
dec
pop
dec
rcrl
mov
repz
mov
jle
aas
pop
nop
xor
push
pusha
sahf
jecxz
and
js
jnp
dec
das
dec
div
cmc
push
roll
sub
out
push
add
cmpsl
insl
adc
dec
mov
roll
jmp
dec
idiv
repz
xor
mov
fadds
inc
cmp
dec
pop
out
shlb
mov
pop
mov
and
pop
out
inc
fldenv
ret
sub
loopne
mov
lods
jno
lcall
xchg
fists
push
in
stos
cmpsl
and
idivb
mov
fiaddl
test
mov
ljmp
es
adc
mov
pusha
pop
in
fdiv
scas
daa
nop
rcrb
cmp
imul
test
xor
popa
pushf
je
stos
inc
fs
repnz
outsl
mov
push
inc
icebp
push
sti
xor
test
in
mov
in
adc
pop
inc
movsb
stos
lcall
ja
jg
icebp
std
sub
bound
sub
out
repnz
inc
adc
jecxz
repz
xchg
stc
cwtl
pop
sbb
or
adc
inc
stos
mov
cld
cli
add
cwtl
dec
fimuls
xor
mov
dec
xchg
pop
testl
mov
test
mov
mov
aaa
mov
and
pop
mov
punpcklwd
jp
xor
dec
shrl
dec
aam
mov
arpl
mov
sub
jnp
dec
mov
mov
test
inc
movsb
push
addb
and
and
fnstcw
xchg
fsubl
imul
jnp
fcom
lret
mov
inc
test
lods
jmp
adc
imul
and
div
lcall
gs
adc
inc
cmpb
lret
popf
lret
aaa
imul
push
and
add
rcr
pop
stos
popf
mov
fcmovbe
mov
and
lret
arpl
shll
mov
lret
int3
psrlw
jmp
popa
and
push
mov
dec
movl
in
dec
add
fistpl
cmp
pusha
xchg
mov
shll
scas
fwait
pop
jae
testb
stc
daa
adc
scas
test
idivl
ret
jno
not
call
in
dec
push
test
ficoms
test
jle
loop
dec
mov
jge
add
pop
sub
in
cmpsl
jo
sub
int
and
shrb
rsqrtps
imul
lcall
fcoms
mov
mov
mov
int3
cmpsb
sti
incb
addr16
ds
incb
xlat
sar
test
int3
mov
xor
orl
mov
loope
dec
sbb
arpl
dec
sbb
leave
cmpsl
push
int
mov
adc
jmp
inc
shll
aam
enter
mov
fistl
pop
and
test
lahf
ret
fsubrs
stc
push
dec
rorb
mov
push
cmpsb
repz
aam
into
jne
mov
push
adc
mov
cmp
aaa
fildl
xor
push
enter
in
insb
outsb
sub
insl
and
or
cs
lea
pushf
insb
pop
test
jge
sahf
hlt
int
out
pop
mov
mov
jl
pop
outsl
test
cmp
bound
add
push
pop
push
dec
sbb
adc
in
lods
jmp
das
and
ja
call
add
dec
mov
in
and
ret
rolb
lock
xchg
pusha
enter
jle
xchg
jmp
ljmp
mov
inc
es
loope
add
mov
xchg
repnz
jp
sub
aaa
inc
into
rcr
fisubrl
cld
jecxz
pusha
cmp
out
iret
mov
pushf
jbe
inc
push
inc
loop
jns
int
mov
jb
and
pop
lock
outsb
jnp
arpl
test
xorl
lret
lods
lcall
stc
jns,pt
xorl
hlt
leave
xchg
andl
imul
dec
jo
mov
in
or
bound
andb
mov
rorb
adc
push
cmp
push
cmp
inc
adc
stos
js
in
sbb
dec
inc
fcoml
mov
fimull
sahf
cmp
insl
inc
sub
pop
shll
pop
lcall
hlt
testb
xor
inc
filds
int
loope
jo
dec
into
hlt
push
insl
inc
fisttps
sti
ror
push
cmpl
pop
mov
sbb
cmpsb
dec
push
mov
in
cmp
rcrl
fsts
daa
and
or
mov
testl
inc
fisubl
dec
xchg
pop
jg
les
inc
jno
scas
insb
xor
sbb
out
inc
xor
sub
add
add
scas
cwtl
and
sbb
add
lods
and
fbld
push
cmp
ret
xchg
jg
mov
loopne
scas
fildll
js
test
shlb
xchg
movsb
insl
add
fnstenv
shrl
imull
in
xor
imul
orl
das
pop
push
push
push
add
pop
imulb
subl
adc
cld
jle
hlt
mov
into
jle
jo
sbb
jg
and
inc
sub
pop
mov
jecxz
out
imul
divl
popa
outsb
lock
call
sbb
cmp
fs
cmpsl
adc
cmp
sub
pop
xor
test
jecxz
aam
imul
sbb
ss
addr16
int3
push
cmp
add
test
mov
lods
adc
pop
outsl
push
sti
cmp
sti
xchg
mov
lock
clc
mov
stos
fadds
xlat
rcll
jle,pt
jge
xchg
jmp
jb
stos
rcrl
out
xor
dec
sti
je
jl
or
cs
add
xlat
popa
pop
addl
daa
outsl
add
push
aas
lcall
lret
lods
dec
jl
ds
jne
inc
movb
lock
in
pop
mov
inc
and
rorb
pop
and
mov
jp
xchg
outsl
clc
push
jae
adc
in
sti
testb
mov
push
sub
cltd
lods
fwait
mov
aad
adc
mov
scas
and
cmpsl
inc
dec
mov
lock
sbb
and
sqrtps
lea
je,pt
add
lcall
stos
arpl
mov
imul
xchg
jb
popa
cwtl
mov
pop
stos
xchg
push
int3
inc
or
xchg
xor
fmull
jecxz
jne
aas
mov
neg
gs
jno
and
lret
jo
pop
jmp
repz
xor
jno
cmp
xchg
jno
pop
dec
mov
inc
mov
lahf
lahf
and
adc
leave
push
mov
xchg
and
mov
inc
int
mov
pusha
add
dec
and
xchg
mov
xchg
aad
inc
fstp
add
ljmp
mov
into
out
sbb
adc
lock
mov
popl
pop
xor
stos
or
pop
test
leave
sti
pushf
pop
aad
sub
int
mov
sub
fstl
call
mov
mov
cmpsl
fistpll
out
push
pop
add
mov
lds
fwait
out
and
xchg
outsl
lock
inc
inc
pop
rolb
fdivl
aaa
idivb
dec
lods
push
mov
imul
pop
imul
imul
jo
es
xchg
add
pop
inc
sbb
test
jnp
int
add
out
ja
loop
mov
mov
cmp
adc
addb
test
popa
adc
cmpsb
aaa
mov
mov
ljmp
mov
lahf
inc
testl
in
out
pushf
pushf
adc
arpl
mov
mov
scas
cli
and
into
push
cs
push
lods
lret
xchg
mov
testl
jl,pt
lret
sti
out
jbe
fisubrl
es
cmpb
sbb
jg
icebp
jge
leave
ret
das
dec
and
std
xor
and
out
loope
into
sub
mov
cmp
imul
and
or
addl
jg
push
mov
in
jmp
or
adc
ljmp
test
in
add
in
ds
pop
xor
xor
cmpsl
add
xchg
leave
aam
fstp
aam
add
cli
xor
jne
rclb
cmp
pop
cmp
jb
les
fmul
sbb
mov
test
mov
jb
add
inc
add
aam
pop
daa
cld
sbb
pop
out
out
fsubrs
call
mov
imul
pop
fwait
xchg
ljmp
negl
inc
mov
sub
sub
repz
pop
xchg
inc
inc
sbb
jo
adc
pop
das
dec
lock
inc
mov
rcl
adc
add
cmp
in
repz
dec
shlb
push
xchg
xor
daa
cwtl
seta
loop
adc
sarl
daa
inc
inc
clc
mov
jmp
in
xor
loope
je
fwait
test
pop
sbb
sahf
adc
addb
push
pop
add
aad
mov
jmp
fwait
xlat
inc
inc
insb
xchg
pop
mov
movsl
scas
pshufw
sbb
jbe
pop
ret
mov
lds
mov
out
mov
jb
rcll
sbb
cs
mov
jecxz
or
cmp
sub
nop
xor
stos
outsb
xorl
and
inc
nop
outsb
inc
push
sub
and
and
jg
aas
mov
push
std
ficompl
lret
mov
xlat
cmp
inc
cmp
cmp
out
push
mov
lret
inc
mov
inc
in
jecxz
rclb
or
jmp
int
sbb
in
aaa
std
andb
out
scas
enter
pop
xchg
dec
fcoml
icebp
and
inc
sbb
ret
inc
insb
jmp
sub
jno
orb
es
xchg
fucomp
pop
aas
scas
sub
popf
lods
stos
insb
inc
sbb
sbb
shll
ret
sbb
fwait
cld
mov
sub
mov
inc
fs
jecxz
jae
outsl
filds
sub
jmp
mov
fidivrs
adc
adc
pop
sarb
jg
adc
pop
adc
je
lret
xlat
add
push
cmpsl
arpl
or
inc
mov
ljmp
xor
sbb
sub
call
mov
mov
or
or
adc
loope
outsb
jns
in
je
xchg
imul
lods
jp
sti
ds
inc
push
jno
cmp
cmpsl
pop
inc
push
out
inc
sbb
sub
hlt
test
mov
and
pop
or
and
sahf
sbb
mov
stc
pusha
in
sub
cltd
sbb
lods
mov
xor
ljmp
ret
jbe
in
dec
dec
xchg
inc
hlt
xor
enter
push
mov
adc
pop
pop
dec
scas
sbbl
mov
cli
insb
cld
mov
sbb
lahf
out
inc
mov
scas
fnstenv
popf
xchg
arpl
es
lea
jge
int
cmp
xor
push
pop
and
jns
mov
mov
add
movsb
aad
movsl
data16
jp
lret
fsubs
sahf
pop
jb
xchg
or
aad
mov
jbe
pop
aas
adcl
mov
jmp
cmc
pusha
cmp
ja
xchg
ret
lods
movsl
js
add
rcrl
ds
pop
mov
ret
or
inc
imul
fnstsw
mov
lods
mov
pop
xchg
ss
push
lcall
jp
cld
mov
lret
or
call
mov
mov
jno
adc
push
lods
jg
aaa
lahf
sti
adcb
mov
jne
sbb
jae
loope
into
incl
sub
popa
xchg
adc
mov
push
popf
imul
jmp
inc
jmp
xor
in
rorb
icebp
lds
in
and
dec
int3
popf
fwait
jge
xor
or
test
cmc
fwait
insb
lods
int3
or
test
adc
adc
nop
xchg
push
repnz
mov
dec
add
loopne
or
jno
adc
fldl
addr16
adc
into
popa
mov
push
xchg
jmp
add
aaa
fs
adc
lret
into
pop
mov
int3
fcmove
es
stos
in
scas
fwait
dec
out
and
inc
movsl
pop
fsubs
ja
sbb
push
xchg
xlat
mov
mov
cmp
xchg
xlat
imul
inc
jmp
imul
int
test
cmpb
and
mov
imul
mov
movsl
add
add
scas
cmp
aas
adc
mov
add
inc
fucom
je
das
mov
sbb
aaa
rolb
cli
cmp
xor
mov
push
std
sub
lods
mov
loopne
push
lcall
mov
addl
sbb
push
dec
and
xchg
xchg
xor
sbb
mov
movsl
mov
rcll
cmpl
aas
push
hlt
rcrl
in
lahf
ljmp
jmp
std
inc
jns
xlat
insb
clc
negl
stc
xor
sbb
int3
fcompl
cmp
pop
into
rorl
repnz
sub
shrl
cld
scas
sbb
int3
xor
iret
lock
cwtl
or
sub
gs
movsb
ret
mov
aaa
pop
push
repz
fisubrl
and
faddl
fsubs
in
sbb
xchg
imul
lock
ret
gs
ret
jae
adc
pop
xor
fsubrl
push
int
sbb
fwait
cltd
sub
insb
jmp
sbb
inc
jp
push
imul
push
push
inc
sbb
cltd
jp
mov
or
fwait
and
add
cmp
sub
enter
xor
js
ret
inc
mov
shll
inc
mov
cmp
mov
or
movsl
shlb
mov
push
add
lock
popf
adc
cmp
pop
push
je
loop
xchg
add
xchg
push
divb
cmpsb
adc
aaa
add
lea
jle
rcrl
sbb
add
and
sub
imul
and
inc
aaa
leave
sarl
addr16
aam
and
lret
int3
scas
popf
mov
ret
frstor
bound
pushf
rcrl
xchg
xor
in
or
push
stos
fistpl
pop
push
fcomps
cli
push
outsb
nop
sub
push
mov
push
push
pop
mov
gs
int3
jmp
lret
xor
pusha
xor
std
stos
lods
aam
dec
mov
add
dec
repnz
test
addr16
push
sub
ss
rclb
xchg
imul
fsubl
jmp
dec
dec
hlt
xor
sub
mov
ss
mov
pushl
inc
pop
int
cmp
inc
push
push
rcrb
cs
sub
rorl
outsb
jecxz
cmp
inc
int3
int
test
rcl
in
clc
or
das
mov
cs
xchg
loop
shlb
inc
popf
mov
jmp
es
les
mov
or
pusha
mov
orl
push
data16
test
repz
sbb
stos
dec
xchg
std
mov
fs
mov
dec
loopne
push
or
jae
cmpsb
dec
mov
lcall
sbbl
cmp
cmp
movl
sub
cltd
imul
fcoml
dec
jmp
js
jge
mov
push
stos
xor
iret
std
xchg
pop
push
xor
push
pop
cmp
cmc
push
sub
and
stos
mov
sbb
mov
mov
inc
sti
bound
jge
loopne
pop
hlt
ja
sub
sbb
mov
lods
fldl
pop
sub
imul
out
jg
mov
xor
xor
outsb
jns
fildll
push
jae
fucomip
cs
out
jae
jbe
dec
push
jno
push
xor
js
ss
xchg
push
mov
lahf
mov
test
xor
adc
jns
shll
ficoms
lret
lret
cs
ljmp
addr16
cli
mov
stos
divb
out
push
pop
mov
xor
or
pop
push
sar
inc
sarl
add
mov
inc
mov
sub
mov
adc
ffreep
cmc
outsl
xchg
mov
icebp
hlt
aad
sub
add
cmp
lahf
mov
divl
inc
mov
cltd
jnp
mov
inc
fidivl
cwtl
in
xorl
in
call
sahf
jb
ljmp
adc
mov
std
call
adc
in
imul
or
imul
jmp
add
push
pushf
sub
mov
cmp
pusha
mov
push
mov
push
mov
push
ja
dec
insl
mov
loopne
aas
pop
adc
add
or
loopne
jne
jns
cmp
jle
mov
jmp
cmp
add
cmc
lcall
mov
push
lds
int3
pop
push
xchg
or
mov
xchg
cmp
mov
push
lods
daa
xor
and
push
or
int
inc
cmp
lret
mov
push
dec
inc
xor
mov
mov
and
repnz
mov
jb
mov
inc
pop
mov
or
fwait
test
pop
fwait
ds
insl
fisttpl
ss
int3
jo
xlat
addr16
push
cltd
inc
sbb
cltd
rorl
arpl
push
lods
cmp
incb
and
adc
push
push
pop
ljmp
or
mov
jle,pt
das
or
jecxz
mov
cmp
or
pop
or
jns
dec
or
and
cmp
cmp
movsl
inc
aas
lret
and
sub
jno
push
pop
xchg
mov
push
daa
adc
adc
inc
inc
in
ja
test
and
scas
out
int3
mov
vunpckhps
pop
mov
fsubl
lret
mov
pop
adc
pop
inc
bound
sub
rorb
xchg
and
or
aas
xchg
pop
xor
cmp
mov
mov
enter
jbe
lcall
pop
dec
test
out
push
imul
sub
fsubrs
mov
xchg
stc
out
jmp
out
mov
iret
push
aam
mov
jae
bound
lret
sti
inc
popa
cltd
and
pop
or
clc
xchg
sub
stos
pop
xchg
pushf
mov
push
and
js
lds
adc
outsl
frstor
aaa
pop
mov
push
pop
cld
lods
imul
stos
fadd
sub
adc
cmp
or
mov
sub
pushf
jmp
cwtl
dec
mov
mov
mov
or
insb
lahf
dec
arpl
shll
test
out
inc
test
and
push
push
leave
lahf
mov
mov
rcrl
xchg
test
pop
pop
xor
jle
loop
lods
sti
in
mov
dec
mov
out
lea
mov
sbbb
xchg
int
into
push
lock
push
jo
ficomps
mov
cld
lods
and
sti
or
mov
fidivs
inc
pop
loope
incb
xchg
lock
xchg
pusha
dec
rolb
ficoms
shrl
ljmp
and
leave
mov
shlb
mov
faddl
inc
adc
stos
roll
pop
mov
subb
add
adc
inc
popf
stc
out
jecxz
and
push
lods
es
cmp
pushf
mov
icebp
daa
mov
and
popa
jb
call
pop
filds
stos
cltd
lds
ror
cmp
fcmovbe
decl
lret
arpl
or
add
pop
pop
popa
imull
xor
aaa
mov
cmpl
lcall
adc
xchg
push
push
add
cli
stos
mov
andb
les
es
fmull
aas
sub
orl
adc
test
and
lcall
loopne
cld
pop
in
negb
dec
les
repnz
sbb
xor
fcoms
push
lret
arpl
sub
jo
pop
in
mov
data16
mov
pop
int
call
fisttps
loope
dec
fld
test
or
mov
imul
push
jno
leave
mov
out
pop
pop
or
mov
or
loopne
add
fwait
push
cmc
stos
push
rol
insl
jecxz
roll
fadds
sahf
sub
movsl
cltd
lcall
adc
jno
lret
js
pop
fbld
int
insb
sub
mov
dec
lods
push
int
mov
sub
xchg
sub
filds
insl
inc
dec
stc
adc
or
or
test
pushf
mov
inc
or
xor
jne
cmp
pop
loope
xor
pusha
mov
xor
iret
in
push
push
imul
mov
xchg
add
imul
xchg
stos
stos
mov
clc
in
fidivrs
aam
xchg
imul
xchg
xchg
mov
gs
xchg
test
addb
fstl
lea
shrb
dec
jg
pushf
call
inc
movsb
push
daa
cmpsb
and
push
icebp
mov
daa
lods
mov
xchg
xchg
inc
jp
sbb
and
xchg
ficompl
lock
jp
cmp
orb
int3
jecxz
cmp
in
lret
jge
in
in
inc
sub
push
mov
or
cmp
icebp
rorb
test
insb
cmpsb
loope
jecxz
fists
and
stos
loope
lahf
mov
or
jmp
hlt
dec
mov
lahf
lret
push
sub
xlat
xchg
xchg
adc
mov
testl
pop
cmpsb
test
dec
rorl
mov
mov
mov
cwtl
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
aad
cmp
sub
mov
jno
ja
subb
mov
xchg
out
or
aaa
pop
sub
pop
inc
add
pop
arpl
cmp
xor
les
inc
jne
lea
lods
xchg
movsl
cld
mov
jbe
lods
inc
push
adc
add
ss
decb
in
outsl
pop
add
loopne
xchg
inc
enter
gs
imul
jae
push
dec
push
loope
loopne
rcrb
outsl
pop
es
loop
mov
jge
adc
mov
mov
jge
adc
mov
lret
mov
jg
in
sub
insl
mov
sbb
out
cmp
inc
addb
ret
std
movsl
pand
mov
jno
movsl
clc
fiaddl
cmp
fs
pusha
xlat
or
popf
daa
inc
aam
lock
popf
daa
inc
aam
lock
cli
mov
movl
xor
mov
xchg
out
imull
mov
sbbl
jge
adc
mov
push
or
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
stc
mov
cwtl
mov
jge
adc
mov
rcll
cwtl
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
js
ret
test
cmp
mov
retw
repnz
xchg
int3
mov
cmp
mov
xchg
jb
mov
sbb
jno
loope
push
faddl
xchg
pop
cmp
mov
aam
pop
xchg
negb
shl
mov
sbb
bound
mov
jge
adc
mov
ret
push
inc
jno
push
pop
cwtl
sbb
fstpt
xchg
or
test
lahf
clc
arpl
psrad
or
inc
push
stos
push
pusha
xor
adc
inc
pushf
shl
pop
xor
dec
shl
mov
arpl
xor
loopne
addr16
mov
mov
iret
pop
jnp
lret
add
loope
stos
cmpl
jecxz
rcrb
xchg
pop
sarl
sub
ror
rcr
mov
add
fcomip
shrb
mov
call
sbb
je
pop
movups
mov
cld
ds
sbb
jb
imul
jno
adc
test
outsl
and
ljmp
mov
std
and
pop
js
add
aam
cmc
aaa
cli
dec
shlb
cltd
push
push
dec
idiv
jle
into
xchg
std
and
repz
jecxz
push
mov
ja
aam
cmc
aaa
cli
dec
sar
cld
mov
fucom
jne
dec
mov
movsb
enter
shrl
xchg
nop
imul
pusha
divl
aas
cmp
dec
aad
clc
fldl
dec
jg
fistl
push
sbb
movsl
fisttpl
and
pusha
xchg
push
inc
inc
faddp
xor
mov
jnp
pop
add
shlb
mov
adc
cld
std
mov
cmpl
in
mov
outsl
stos
jae
lods
es
lock
scas
add
push
into
adc
in
movsl
leave
push
out
jne
outsl
test
sub
iret
aad
ret
enter
xor
nop
imul
das
ficoms
xlat
inc
or
dec
xor
jne
xchg
sbb
fcomip
into
mov
and
dec
mov
cld
fxch
mov
mov
xor
out
rcl
cmp
gs
inc
pop
insb
stos
xchg
adc
cmp
icebp
repz
cmovo
add
stos
add
rolb
push
mov
push
mov
add
and
xchg
stos
cltd
fs
jns
and
xchg
add
stos
lods
dec
sahf
das
dec
scas
or
xlat
push
sahf
out
cltd
mov
cmp
sbb
and
out
fs
test
mov
jecxz
and
out
jnp
out
pop
ljmp
mov
cmp
cmpsb
mov
xchg
xor
icebp
pop
sahf
cmp
in
sub
daa
cmpsl
fcomps
ljmp
lret
lods
repnz
xchg
aam
cltd
insl
ret
int3
sahf
nop
jne
adc
int
push
dec
stos
movsl
and
scas
ret
add
jbe
jne
jp
sbb
jmp
push
es
push
mov
in
shlb
mov
shlb
mov
mov
cs
sub
stos
in
mov
xchg
ja
push
and
out
adc
pop
pop
ret
xchg
cmpsl
fwait
stc
popf
jg
stc
in
add
inc
xchg
push
sbb
out
or
push
scas
fcomi
and
sub
adc
inc
sbb
pop
add
add
iret
mov
or
rcll
mov
mov
xor
outsl
sbb
jae
fistpll
sbb
push
insb
daa
mov
jo
pop
mov
out
pop
push
dec
lahf
aam
fwait
ret
xchg
fisubl
pop
add
adc
mov
xchg
and
or
repz
clc
adc
loop
jmp
xchg
dec
pop
jb
mov
shlb
fcompl
bound
lds
dec
call
aam
inc
push
push
push
push
inc
les
jne
xor
scas
imul
inc
inc
sub
andl
inc
xchg
dec
incb
push
loope
add
stos
cmp
aas
mov
daa
stos
xor
imul
mov
push
cmpsl
loop
pushf
inc
cmc
mov
push
sbb
fisubs
inc
jae
aaa
imull
dec
pop
xlat
sbb
std
es
aaa
stos
and
and
popa
outsb
sbb
pop
std
jmp
mov
jbe
sbb
ret
cmp
xchg
cmp
cmpsb
mov
pop
sbb
and
hlt
jl
cmp
add
add
ss
in
ficomps
and
fwait
loope
add
xchg
adc
stos
adc
aam
nop
push
pop
sub
imul
repz
cmp
and
adc
movsl
xor
xor
ja
sub
fbstp
or
fdivrl
outsb
jne
enter
daa
in
insb
sub
jbe
mov
push
xchg
dec
push
daa
add
icebp
jae
add
enter
push
cmp
hlt
outsl
jle
pop
push
lock
dec
ja
les
push
pushf
loope
xor
and
mov
call
dec
insb
test
add
dec
lret
jg
sub
pop
add
jg
movsl
insl
fwait
adc
loop
xchg
xchg
sub
das
xor
shlb
mov
sub
push
ficoms
and
adc
insb
or
or
in
xor
test
aaa
xor
and
hlt
jl
cmp
add
add
ss
in
push
sub
daa
cltd
fimull
mov
mov
in
xchg
push
and
mov
in
and
sahf
std
mov
mov
inc
mov
xor
das
cld
repnz
rcl
cmp
je
inc
or
mov
inc
test
mov
cmp
cmpsb
mov
loopne
sub
ds
pop
mov
inc
pop
stc
jecxz
jbe
loopne
jg
lods
dec
fidivl
xor
call
ffree
aaa
inc
push
dec
mov
pop
sbb
fistl
cmpsb
xor
push
dec
and
jmp
ljmp
mov
lcall
jbe
inc
sbb
shll
into
jp
mov
aaa
es
in
test
mov
dec
xchg
cmp
frstor
sub
sbb
es
adc
imul
icebp
lret
pop
cs
push
mov
flds
dec
mov
mov
mov
stc
test
loopne
mov
jo
mov
lods
fildll
aam
or
jmp
das
int3
add
push
add
shrb
cmp
movsl
xchg
pushf
fstpt
xchg
xchg
mov
mov
test
xchg
gs
push
push
call
jl
sbb
mov
fmuls
and
data16
sub
iret
mov
dec
and
add
mov
nop
pop
je
mov
inc
add
mov
inc
aaa
push
mov
inc
in
push
add
subb
es
ss
jo
xchg
jge
cmpb
shlb
icebp
push
jnp
sub
push
pop
mov
movsl
pop
pop
pusha
adc
aas
xor
mov
sbb
cmp
push
dec
daa
adc
fcomps
and
jno
add
negl
jg
push
divl
testb
mov
push
sbb
outsb
push
in
push
xlat
adc
or
popa
cmp
sub
insb
lahf
iret
xor
mov
out
lret
pop
int
in
cmpsl
ja
jmp
cmp
mov
pop
das
scas
mov
adcl
fcomip
adc
mov
addr16
repnz
into
repz
add
and
mov
filds
pop
ja
rol
and
nop
xor
js
jge
push
or
int
mov
and
mov
stos
mov
sbb
push
mov
or
or
mov
add
setl
push
mov
fucom
adc
je
mov
or
clc
inc
mov
leave
and
inc
push
aad
movsl
or
loope
push
scas
mov
test
or
mov
movsb
cltd
jbe
int
jle
lret
outsb
add
jecxz
mov
test
fnstsw
sbb
sbb
push
int
xchg
hlt
push
jecxz
jbe
orl
dec
xchg
stc
xor
pop
jne
stc
and
cmp
lock
in
cltd
push
js
fmuls
jg
add
push
mov
pop
fsts
xlat
int3
mov
je
mov
cmpsl
xor
and
sbb
les
in
repz
in
inc
pop
xor
push
sbb
loop
call
add
pusha
sub
push
inc
pop
sahf
pusha
lods
cli
jecxz
or
cmp
cmc
fistl
lock
les
add
sub
sbb
mov
ficompl
mov
scas
sbb
add
jne
aaa
pop
jl
xchg
sbb
dec
push
push
or
or
test
lret
inc
data16
add
lret
mov
orb
inc
or
scas
or
jns
rcl
mov
jmp
test
pop
stos
dec
icebp
pop
fistpl
bound
mov
push
sbb
jo
inc
cltd
outsb
mov
mov
xchg
in
lock
mov
push
rol
test
dec
ds
ret
cmpsl
loope
pop
or
ss
or
cmp
out
loop
adc
cld
flds
inc
pop
xchg
inc
dec
mov
cs
cmp
push
and
cs
cmpsl
xor
pop
ss
mov
decl
inc
imul
pop
xorl
sbb
jae
cmp
cltd
add
cmp
or
add
flds
sub
xchg
mov
mov
cs
sub
xchg
push
xlat
insb
into
push
cmpsb
add
cld
cltd
adc
orb
gs
jns
jp
lahf
sahf
gs
and
dec
cmp
mov
jmp
sarb
inc
mov
cmp
push
mov
repnz
push
aam
cltd
xchg
ss
test
sub
xchg
cwtl
je
stc
into
int3
cli
shlb
mov
mov
jo
jl
in
sahf
inc
stos
imul
pop
pop
hlt
out
and
les
xchg
dec
imul
mov
dec
xchg
mov
push
test
lahf
and
popf
jmp
adc
pop
xlat
je
in
dec
inc
sub
add
enter
dec
xor
cmc
mov
hlt
lock
repz
sub
mov
sbb
jmp
or
pop
add
dec
mov
xlat
lods
inc
das
inc
pop
inc
add
mov
mov
xor
add
ss
je
mov
cld
flds
and
add
jg
mov
cs
sub
xchg
push
xlat
insb
mov
aad
jl
mov
cld
cltd
adc
orb
gs
jns
imul
mov
jmp
sarb
inc
mov
cmp
push
mov
repnz
push
aam
cltd
xchg
ss
test
sub
stos
adc
ds
les
jl
in
sahf
inc
stos
imul
sbb
mov
fimuls
fcomps
pushf
in
ds
adc
lea
push
scas
scas
cmc
test
mov
dec
addb
xor
push
mov
adc
inc
push
pusha
es
icebp
int3
enter
lret
xor
lock
mov
scas
dec
push
pop
dec
popf
mov
gs
jg
push
jnp
test
push
add
movsb
sbb
lock
mov
push
test
adc
and
bnd
mov
xor
je
addr16
mov
mov
xchg
fwait
jmp
dec
adcl
repnz
fcoms
fdiv
sbb
inc
lock
mov
adc
shll
icebp
rorl
jecxz
xchg
popf
je
push
jle
mov
pop
jno
jmp
add
cmpsl
out
out
xor
inc
mov
dec
iret
lahf
dec
into
jmp
add
insb
test
aaa
cltd
aad
sbb
mov
mov
or
shlb
movsl
push
mov
or
mov
and
pop
lods
lcall
int
in
aaa
add
push
jbe
cs
inc
jge
or
mov
fcmovu
inc
xchg
cmp
jle
mov
pop
push
call
fwait
sbb
push
add
mov
stos
andb
sub
lods
mov
pop
pop
sub
pop
cmp
insl
imul
sub
xor
out
inc
jmp
and
cli
cmp
imul
pop
jge
mov
sar
cld
in
sbb
int3
xchg
andl
push
out
int3
fsubl
add
movsl
std
dec
test
cmp
xor
pusha
inc
inc
shll
cmp
ficoms
out
iret
cmp
fcomps
pop
pusha
inc
inc
shll
in
test
push
mov
stc
test
pop
pusha
icebp
pusha
aam
pop
dec
inc
lock
test
adc
sub
dec
aaa
mov
xchg
stos
mov
or
sub
packuswb
insb
lods
push
inc
pop
lods
xchg
in
inc
popf
cli
fucomi
aaa
js
xor
jns
inc
stos
jecxz
or
test
xor
or
cmpsb
mov
lret
inc
push
adc
imull
dec
adc
js
inc
mov
fidivs
adc
mov
je
jno
fwait
pop
add
mov
insl
nop
cld
fadds
pop
sbb
mov
lds
sbb
shlb
ret
test
push
push
popa
fldenv
or
pusha
enter
adc
push
sbb
stos
cmp
outsl
cli
sti
jle
enter
adc
pop
jle
in
int3
inc
in
stos
mov
add
stos
mov
sbbl
push
int3
icebp
cmp
or
add
or
test
daa
cmp
lock
ret
mov
pop
ja
inc
dec
cld
fs
call
loop
sbb
mov
sbb
out
icebp
fldl
cmp
orb
and
jl
repz
jae
mov
in
mov
and
or
mov
int
daa
test
insl
ds
stc
pop
xchg
ljmp
bt
stos
push
adc
jne
push
mov
mov
sub
dec
movsb
lock
out
jb
push
in
and
fnstcw
jnp
cmp
mov
jg
ret
sti
mov
dec
aad
sbb
or
mov
sbb
inc
xor
xchg
jl
mov
inc
mov
mov
loope
enter
icebp
sub
data16
test
iret
jmp
faddl
xchg
pop
pop
add
lret
cmp
and
mov
outsl
aam
out
push
push
into
and
ret
fs
mov
test
fwait
pop
sbb
lods
sub
sbb
push
ja
loopne
ss
es
add
repz
loopne
loop
sub
pusha
mov
bound
incb
ljmp
dec
push
push
pop
scas
push
repz
loopne
loop
sub
test
or
test
leave
shl
adc
adc
js
sub
xor
pushf
inc
xor
mov
mov
mov
push
jns
leave
sbb
test
movsl
ret
ja
mov
into
hlt
lds
imul
into
cmpsb
cmpl
jo
scas
insl
les
punpckhbw
pusha
ljmp
sub
sub
and
imul
jns
out
sub
add
cmpsb
inc
ds
sbb
dec
call
bound
and
push
popf
mov
and
add
sti
adc
push
repnz
mov
scas
icebp
and
push
sti
lret
sbb
sti
inc
call
cld
jnp
int3
test
xlat
push
cmp
xor
mov
mov
pushl
and
mov
push
aaa
out
negl
pop
lahf
cltd
push
mov
mov
xor
enter
mulb
pop
test
lret
and
xchg
add
lods
jbe
xor
ret
push
sbb
push
aam
push
movsb
mov
pop
notl
aam
fnstsw
fs
mov
xor
test
adc
or
cmp
call
lods
neg
ret
pop
pop
pop
mov
or
lret
lods
sub
in
lock
lahf
in
inc
fs
mov
xchg
push
aaa
cmp
mov
or
bound
je
fisubrs
data16
add
sbb
enter
incb
sbb
mov
mov
adc
mov
lahf
loope
push
jg
iret
jnp
jmp
dec
mov
jnp
dec
addr16
cs
jo
mov
pop
test
je
clc
inc
lock
sub
movsl
in
xchg
xor
cmpsl
fiadds
and
sti
pop
or
and
lcall
insb
mov
xlat
fwait
xor
xchg
push
mov
stos
push
push
mov
pop
aad
ljmp
adc
jne
jb
mov
negb
fdivl
movsb
and
popw
outsb
iret
cmp
adcl
sbb
hlt
mov
jnp
fisttps
pop
mov
int3
sub
mov
fidivrl
rclb
stc
add
iret
fmuls
push
inc
pusha
push
push
dec
push
les
call
xchg
xchg
jno
icebp
and
pop
pusha
or
shll
xor
ljmp
and
into
push
push
jo
sub
fisubs
sbbl
sub
push
int
push
movsb
cltd
test
bound
test
pop
xor
pop
jp
cmp
sbb
inc
adc
outsb
or
test
lret
cmp
inc
dec
mov
negb
subl
dec
push
cld
cs
imul
adc
arpl
sub
sbb
pop
lahf
rclb
repnz
pop
push
cmpsl
nop
xlat
pop
sub
cmp
push
data16
jecxz
pop
push
mov
popf
pusha
jb
movsl
pushf
rcrl
dec
pop
in
insb
mov
aas
jb
pop
paddq
mov
pop
fsubrs
xchg
es
addr16
cmovno
stos
pushf
lcall
mov
sub
nop
mov
stos
push
sbb
xor
gs
cmp
shll
clc
idivl
js
push
inc
or
and
mov
jmp
ret
push
pop
addr16
dec
mov
lret
xchg
mov
push
dec
hlt
and
ja
jns
insb
xchg
lahf
adc
rcrb
jecxz
xor
adc
add
xor
int3
pop
daa
push
push
dec
scas
mov
insb
jo
repz
std
mov
push
pusha
xor
ret
fcmovne
and
addr16
jge
jecxz
icebp
icebp
mov
pop
fwait
mov
xchg
mov
adc
fimull
das
cmp
adc
aas
mov
test
mov
pop
cs
mov
lret
fdivr
ja
inc
cmp
je
loope
cs
imul
sti
pop
push
adc
cmc
push
push
xorb
mov
cmp
jno
pop
icebp
sti
loope
xchg
jne
pop
or
out
xor
incl
dec
push
std
xchg
pushf
push
sub
mov
lret
inc
sti
xor
sar
lods
lods
js
xor
into
mov
xchg
testb
mov
insl
jns
add
dec
insb
push
enter
sbbl
je
stc
sub
mov
sbb
mov
add
andb
adc
scas
or
lret
inc
emms
sbb
movsl
jne
inc
jp
movsl
loopne
lcall
add
cmp
rclb
icebp
leave
out
add
jb
xchg
aam
mov
push
imul
inc
test
arpl
lock
and
das
or
push
std
push
mov
leave
sbb
scas
pop
in
cmp
fwait
xchg
cmp
dec
xchg
jae
mov
bound
sbb
mov
push
jge
cmpsb
dec
add
pop
xor
dec
nop
or
lock
pop
adc
cmp
and
sbb
lods
lods
mov
sti
lcall
xor
das
xchg
pop
lret
cmpsb
pop
inc
movsl
aam
xor
cmc
jl
pop
xchg
push
mov
jmp
xchg
sub
arpl
pop
inc
xor
add
ret
sbb
cmpsb
fiaddl
aad
push
test
shrl
jg
les
dec
fwait
xor
adc
add
adc
pop
imul
mov
cltd
inc
dec
push
filds
int
push
pop
pop
std
ret
fcomi
enter
sti
test
add
jns
sub
sarl
xchg
int
mov
cmp
jnp
stos
subl
ljmp
xchg
and
adc
les
push
or
lahf
faddp
sub
pop
or
hlt
jns
jns
dec
inc
cmp
inc
cmpsb
xchg
addr16
xor
mov
pop
in
dec
shll
mov
add
fwait
mov
sbb
cltd
lcall
popf
add
lahf
into
pop
fs
into
cmp
mov
push
aas
stos
mov
enter
shlb
aas
jmp
ret
mov
dec
sub
rcl
js
data16
sub
xchg
mov
mov
lahf
ds
clc
fldcw
popf
sub
lret
mov
out
cltd
adc
mov
and
push
jge
mov
mov
stc
rcr
loope
jp
scas
mov
ja
add
aaa
xchg
mov
scas
ret
sbb
leave
mov
stc
out
enter
xchg
jne
es
rcrb
shrb
lret
subl
jbe
push
add
out
xor
cmp
sarl
lock
xor
das
bound
cmp
mov
jo
addr16
sub
push
jecxz
push
out
out
fs
fmul
mov
push
mov
insb
out
movsl
push
ret
jno
mov
pop
jmp
xchg
dec
sar
faddl
jo
outsb
xor
leave
stos
xorb
lret
adc
insb
or
mov
dec
hlt
or
rclb
bound
add
mov
stos
pop
jno
data16
sub
jmp
xchg
cmpsb
sub
jge
ljmp
jl
iret
popf
push
cmp
loope
imul
ret
mov
sahf
push
mov
rorl
or
aam
pop
mov
push
push
leave
jmp
imul
clc
ljmp
jmp
push
dec
lock
es
loope
aas
fnstcw
xor
idivb
xlat
ja
mov
rcrl
push
jp
mov
mov
sbb
or
mov
in
lods
xor
and
add
mov
es
ds
sub
sti
enter
push
sbb
lahf
xor
shrb
stos
ljmp
lahf
aas
es
lcall
out
mov
and
mov
xchg
sbb
and
and
cmp
rcrb
jns
push
into
add
push
xor
sbb
lods
and
cmp
adc
testl
fisttpll
dec
test
dec
das
cld
lret
xlat
arpl
xor
cmp
mov
ftst
pop
test
xchg
mov
add
dec
test
cmpsb
das
mov
repnz
sbb
fs
xchg
fiadds
in
jae
out
ret
sub
int3
or
movsl
inc
sub
stc
pop
mov
mov
iret
inc
stc
push
xor
mov
inc
out
xor
and
mov
and
in
arpl
dec
inc
arpl
cmp
inc
sub
popf
mov
push
sub
xchg
jmp
in
dec
jo
aad
loope
xor
in
aas
jbe
in
inc
jg
push
pop
test
rcrb
in
dec
and
inc
inc
pop
adc
fsts
sbb
pop
nop
jo
push
leave
sarl
fldenv
or
push
xchg
dec
add
int
push
inc
scas
mov
mov
xchg
add
lcall
mov
nop
lods
cmp
jne
jns
add
cmc
ret
call
dec
sub
rcrl
cmpsl
xor
or
loopne
test
hlt
sbb
ja
sub
sub
popf
mov
aad
movb
js
loopne
or
insb
nop
sti
nop
lods
adc
push
shll
fwait
jno
adc
jne
icebp
je
push
push
dec
and
adc
in
mov
icebp
sete
cmpsb
pushf
ds
lahf
ja
ret
mov
les
into
and
adcl
xlat
xchg
lea
outsb
mov
daa
mov
arpl
clc
and
mov
xchg
xchg
cmp
adc
mov
mov
jl
daa
pop
push
push
mov
sahf
call
les
inc
dec
xor
int3
into
nop
pop
fbstp
and
daa
mov
xchg
mov
stc
sbb
lds
adc
aam
popf
fcmovu
xchg
ret
or
push
fldl
dec
loop
cs
pop
push
in
dec
adc
dec
mov
mov
pop
fwait
mov
jle
jae
aam
adc
pop
adc
adc
js
jecxz
ja
mov
xor
ret
test
xchg
mov
cmp
mov
xor
roll
xchg
out
mov
push
test
sti
cltd
jb
cmpsb
mov
into
imul
in
cld
lcall
ret
mov
sub
arpl
daa
stos
shrb
xor
xchg
jb
orl
add
fwait
mov
cmp
divl
or
xor
ret
lahf
inc
cmp
out
mov
imul
arpl
stos
and
clc
gs
xor
iret
mov
and
mov
xchg
in
pop
stos
or
sub
dec
sbb
push
lods
mov
lods
int3
mov
add
cmp
dec
pop
pop
lock
push
jle
or
decl
xchg
stos
and
aas
mov
ret
out
mov
sub
stos
sub
jae
in
sbb
out
dec
fiaddl
iret
mov
fstpt
fwait
pop
mov
mov
or
add
xor
lds
mov
sub
imul
mov
inc
xchg
and
and
xchg
lds
orb
add
inc
jne
in
sub
sbb
mov
cmp
ja
orl
loopne
pop
les
sub
cmpsb
ljmp
adc
into
aaa
mov
inc
andl
ficoms
inc
push
and
arpl
mov
or
sub
ljmp
scas
lock
sahf
and
nop
lret
or
out
aad
arpl
or
pushf
pop
mov
cmpl
adc
repz
push
pop
push
xchg
pop
jb
xchg
add
clc
inc
pop
sub
aad
aas
sbb
pop
imul
mov
sub
es
int3
nop
rolb
pop
call
mov
stc
adc
popa
in
push
cmpb
push
adcb
or
mov
call
ret
jne
loop
in
ss
jmp
mov
enter
out
rorb
stc
sbb
mov
cmp
fdivrl
popf
in
mov
push
mov
out
repz
add
ror
add
xor
add
lock
pop
ljmp
cli
popa
and
fisttpll
icebp
bound
idiv
mov
shlb
cmp
mov
loop
sbb
xor
and
mov
dec
adc
rol
adc
mov
add
jl
fs
dec
lds
or
add
adcb
adc
sbb
or
ret
push
push
lods
mov
data16
mov
mov
lods
add
lret
pop
mov
aaa
mov
lods
clc
cltd
add
aam
adcb
cmp
mov
dec
addr16
push
jle
outsl
push
outsl
nop
movsl
leave
and
into
notl
adc
inc
ljmp
mov
inc
sub
jge
ds
pop
mov
cmpxchg
enter
and
mov
mov
inc
sub
out
lret
jbe
mov
mov
pop
mov
mov
jp
sbb
or
ror
inc
xor
mov
jl
xor
pop
fsubrs
out
mov
sbb
cmp
cmp
imul
stos
seta
loop
xchg
rolb
cli
sub
pop
xchg
stc
xor
pop
jne
stc
insl
idivb
and
into
movsb
or
loop
les
shll
in
sub
jle
lret
pop
int
push
pusha
push
pop
adc
insl
dec
xchg
jge
sub
hlt
inc
jl
mov
pusha
sub
fsts
and
pop
pop
push
jp
leave
lea
test
ljmp
mov
andb
insl
cld
cld
pusha
imul
mov
out
sti
adc
daa
loope
pop
adc
jo
push
imul
test
lock
sbb
decb
ds
lret
sub
inc
iret
test
ljmp
pop
jmp
pop
mov
lea
xchg
lock
jg
pop
cwtl
xor
pop
jo
repnz
add
addr16
rorb
pop
push
loope
dec
stc
sbbl
adc
mov
cmp
cmp
hlt
jp
pop
mov
xor
test
jmp
fwait
aad
adc
ret
mov
pop
pop
popa
lock
xlat
jecxz
mov
push
repnz
ret
inc
int3
repz
fmull
cli
inc
popa
aam
add
inc
jo
fmull
and
mov
jecxz
dec
pop
pop
pop
repz
or
xabort
ljmp
sub
push
arpl
pop
pusha
scas
loop
mov
xor
nop
shrl
mov
cmp
je
int
pop
push
rol
push
idiv
fnstsw
sub
jne
xor
or
inc
push
int
push
lock
idivl
sarb
rcrl
sti
hlt
add
ret
nop
adc
xchg
orl
or
jp
pop
daa
sub
lcall
scas
and
adc
inc
push
andl
pop
rcrb
push
push
ffree
imul
mov
aam
sub
or
mov
aam
cmpsb
ljmp
pop
and
addr16
xchg
out
or
cld
mov
leave
jg
out
dec
test
pushf
pop
jae
hlt
mov
dec
cmc
mov
fsubs
dec
clc
pop
push
fs
push
movsb
or
mov
inc
or
pop
pop
loop
xchg
leave
sbb
jae
gs
pop
fisubl
add
pop
mov
popa
sahf
or
clc
mov
inc
imull
push
mov
push
mov
dec
stos
popa
lds
jmp
cmp
dec
push
idivl
test
out
mov
fidivl
movsl
nop
test
sbb
cwtl
jecxz
je
test
mov
xlat
into
lahf
jmp
stc
out
xor
cmpsb
push
hlt
or
lock
cmpb
cltd
cmp
or
out
hlt
lret
push
jmp
fidivrs
cld
jns
cltd
pop
pop
xchg
mov
in
bound
mov
adc
xor
push
or
mov
dec
lahf
jle
movsb
rorl
loope
sbb
int
ljmp
mov
fstpl
ss
cmp
sub
insl
pop
icebp
sbb
push
repz
adc
push
loop
lock
faddl
add
jmp
daa
rcll
aad
std
add
sbb
in
clc
mov
cmp
fildll
popf
push
cmp
shlb
mov
jne
push
or
push
xchg
outsl
push
loope
shrl
movsl
into
sbb
mov
cld
jmp
shr
adc
push
adc
fst
jmp
popf
adc
imulb
pop
sbb
lcall
dec
loop
add
inc
nop
inc
stos
lods
ja
movsl
cmovb
mov
xor
mov
dec
inc
push
outsl
push
das
mov
adc
mov
stos
xchg
and
int
sbb
push
dec
iret
xchg
pop
inc
cmp
lret
testb
inc
pushf
mov
cwtl
fimull
pop
adc
push
add
aaa
sbb
out
pushf
fldl
icebp
pop
push
cltd
addl
cmpsb
push
or
clc
movsl
xchg
into
pop
lods
mov
sti
test
aad
sarb
lret
imul
cmp
inc
out
lahf
sets
push
adc
jle
inc
mov
dec
sbb
lret
test
pop
and
nop
jl
xchg
ja
movsb
cmpsb
rcl
push
daa
push
push
and
sbb
inc
cmp
push
shll
adc
jp
ljmp
shrb
xchg
or
add
lret
add
mov
pop
mov
inc
lods
inc
jo
jmp
xor
pop
call
mov
inc
int3
fistl
dec
idivb
xchg
insl
aas
nop
test
cs
jg
sub
push
or
int3
dec
loopne
cmpsb
in
xchg
aad
lea
mov
int3
fwait
stc
imul
mov
inc
adcl
cmp
jne
cmp
gs
ljmp
lods
cmp
cmc
fimull
add
rcrb
adc
sti
leave
or
insb
das
sahf
inc
outsb
dec
out
push
push
loope
jo
jge
pop
repz
xchg
es
aaa
and
imulb
inc
jns
sbb
in
mov
mov
xchg
bound
mov
in
orb
jne
sbb
cli
xchg
loope
jecxz
cltd
arpl
rclb
or
int
push
lret
repz
mov
inc
jmp
sarb
clc
outsl
xor
or
loop
xchg
je
sub
cwtl
pop
roll
mulb
das
adcl
loope
in
cmpsb
lret
leave
imul
or
inc
enter
inc
push
push
add
xchg
out
fcomps
pop
fstp
cmp
mov
mov
decl
scas
fwait
jo
xchg
in
adc
push
jl
shrl
test
repz
mov
push
and
xor
int
pop
mov
mov
mov
jmp
out
scas
and
mov
pop
xor
add
int
push
lahf
xchg
xor
fistpl
inc
cmpsb
mov
ret
imul
add
xchg
sbb
lcall
clc
mov
mov
inc
movsl
out
femms
sbb
loop
shlb
mov
loop
gs
pop
jno
loopne
fs
pop
std
push
test
push
ds
addr16
stc
lock
mov
out
cs
sbb
push
inc
sub
push
xchg
cmp
xor
xchg
xchg
pop
in
jae
mov
pop
cmp
repz
ljmp
outsb
pop
je
sahf
jno
comiss
cld
adc
loopne
pop
push
xor
cs
test
inc
popf
cmp
lock
sub
cld
inc
aaa
js
pop
fstps
push
call
and
mov
cmp
fistpll
add
scas
push
mov
adc
xchg
aad
loop
mov
sub
mov
jl
xor
sarl
stc
lods
sub
ja
fsubs
hlt
mov
or
pop
mov
lock
inc
adc
cmp
adc
rcll
add
xlat
dec
rcll
and
out
enter
push
or
daa
lock
ret
lods
outsl
and
clc
push
inc
sub
lcall
dec
inc
xor
test
mov
adc
jnp
mov
stos
push
dec
test
fdivl
jp
leave
pop
je
mov
mov
pop
ds
mov
cmp
frstor
push
imul
fcmovnu
js
ficoml
nop
jae
cmp
inc
xchg
dec
add
mov
mov
insl
push
scas
fdivs
mov
sbb
pop
dec
repnz
cmc
scas
mov
loopne
xchg
mov
mov
jl
dec
adc
pop
lcall
out
sbb
mov
test
push
mov
mov
pop
and
out
fmull
lds
lock
hlt
mov
movsb
popf
jb
inc
mov
std
sbb
or
or
sbbb
rcr
xchg
xor
enter
in
out
pop
call
xor
sbb
push
cmp
je
push
sub
dec
jo
in
inc
push
xor
test
repnz
mov
jne
sbb
nop
mov
insb
in
rcr
out
sub
hlt
in
xchg
pop
imul
jns
sub
or
scas
jo
sahf
repnz
das
das
pop
sbb
insl
mov
inc
inc
sub
lods
pop
jbe
mov
mov
insb
xchg
pop
daa
and
mov
les
sbb
and
outsb
int3
push
add
push
ljmp
dec
adc
test
int
loopne
add
jg
pop
loopne
orl
jnp
jg
data16
mov
sbb
movsl
hlt
inc
mov
jg
stc
pop
dec
xchg
cmp
adc
int3
push
jl
insl
inc
xor
jecxz
mov
jb
mov
frstor
and
sbb
ret
jne
movsb
mov
mov
adc
stos
test
mov
inc
add
mov
xor
and
dec
in
lret
roll
std
or
test
mov
pop
sti
jmp
jnp
dec
repz
xlat
scas
pop
enter
mov
xor
mov
movsb
dec
inc
push
xchg
lock
mov
jbe
jno
sbb
call
cmp
ret
idivb
dec
mov
pop
shl
xchg
dec
pop
repz
inc
or
call
push
mov
movsl
mov
push
cmc
arpl
cmp
repz
mov
adc
and
stc
cmp
mov
dec
pop
movsb
or
cmpsb
test
xchg
dec
fstps
cmp
sbb
or
mov
test
fmull
sub
cmpsb
adc
out
push
adc
pop
sub
test
mov
jp
rorb
lock
loope
imul
dec
imul
enter
hlt
fsts
imul
pop
xchg
or
int
imul
dec
pop
push
mov
daa
sub
cmc
pop
das
xor
fildl
push
and
jge
mov
push
cmp
mov
dec
and
adc
movsb
or
loope
add
pop
fwait
dec
pop
inc
std
mov
push
subl
adc
jp
notl
adc
mov
fsubrl
mov
repz
fstps
mov
test
pop
jne
stc
decb
in
cmp
inc
addl
cmp
test
stc
sub
xor
mov
mov
jnp
ds
push
jbe
xor
mov
mov
hlt
cmp
mov
push
lods
xchg
dec
cmpsl
sti
scas
popf
adc
rcr
addr16
shlb
gs
mov
insl
or
cmp
ja
dec
jecxz
in
sbb
sub
xlat
insl
jne
js
out
adc
add
push
stos
mov
icebp
pop
jne
stc
lret
mov
movsb
or
loope
add
pop
fwait
dec
pop
inc
std
mov
push
in
xchg
and
dec
cmpsl
xor
push
pusha
lea
cmp
push
cwtl
scas
pop
pop
ja
dec
in
aam
es
inc
insl
ljmp
push
stos
ret
dec
cwtl
pop
sbb
sub
mov
pushf
push
mov
gs
insl
out
scas
in
popa
fcomi
xlat
aas
dec
ja
test
scas
mov
mov
and
shll
xchg
popf
nop
mov
lods
inc
add
ficomps
push
mov
adc
pusha
pushf
jl
cld
sti
adc
or
rcr
xchg
mov
pop
loopne
jmp
test
and
jnp
mov
xchg
adc
hlt
pop
std
dec
mov
cmp
icebp
in
sub
jae
leave
pslld
add
or
sub
pop
arpl
mov
sbb
pop
and
pop
and
xchg
imulb
xlat
add
jno
jae
and
mov
push
repz
lret
fmull
hlt
inc
jmp
inc
sub
ljmp
adc
mov
test
outsb
stos
lods
aaa
dec
loopne
dec
mov
fstpl
mov
adc
push
ljmp
les
rorl
inc
outsl
sti
pop
jmp
inc
jno
cmp
fsts
mov
mov
mov
mov
adc
andl
addb
mov
mov
daa
adc
outsl
pop
fcmovu
mov
mov
jae
fidivrl
inc
cmc
xor
iret
lahf
mov
push
je
pop
lock
xor
jo
je
sub
mov
into
sub
loop
mov
inc
xchg
dec
fdiv
orb
mov
jmp
dec
aam
jl
loop
pop
jb
out
push
jl
push
sbb
jae
cltd
shl
ja
bnd
in
sahf
out
test
loop
test
mov
movsl
repnz
jge
cmp
repz
push
sti
sti
mov
test
loope
and
aas
fstps
lcall
lds
mov
pop
mov
jl
icebp
nop
cwtl
push
call
lods
jp
mov
nop
mov
addr16
std
mov
and
call
or
sbb
jg
pop
rol
jne
mov
std
stos
mov
xlat
adc
xchg
jae
sub
arpl
mov
add
cmpsb
popa
xor
pop
rol
jne
mov
scas
and
lea
repz
pop
fstp
movb
cld
ret
mov
lds
mov
cmc
bound
and
mov
and
fnstcw
or
dec
lock
jno
js
insl
add
pop
inc
cmpsl
push
mov
xor
inc
xor
lds
xchg
lea
jae
add
into
lock
cmpsl
icebp
sbb
and
push
mov
fmull
or
int3
xchg
js
orb
mov
data16
mov
imul
lret
lods
xor
jecxz
addr16
push
lahf
loop
mov
pop
and
je
sub
mov
xchg
jne
cltd
jo
mov
mov
cmp
adcb
push
jl
loop
pop
cmp
mov
cmp
or
and
xchg
pop
cwtl
pop
xor
mov
adc
jl
mulb
sub
dec
lds
or
rcrl
dec
aaa
hlt
inc
dec
fcom
sub
add
mov
inc
popa
cwtd
adc
inc
pop
xor
je
js
mov
lahf
lret
mov
fadds
cmc
dec
out
cmp
sub
add
xchg
loop
push
bound
mov
xor
and
dec
nop
cmp
adc
pop
cs
aad
imul
call
insb
cmp
jb
clc
or
sub
subb
jmp
inc
jno
je
dec
pop
and
mov
mov
in
cmc
inc
dec
in
fisttps
test
out
mov
lret
dec
imul
mov
sarl
dec
mov
repnz
mov
mov
scas
xor
pop
xchg
shlb
mov
cmpsb
sarl
or
mov
imul
mov
xor
jnp
push
adc
mov
ds
mov
jp
fdivl
push
or
add
imulb
xor
notb
hlt
iret
popf
cld
mov
int3
in
lahf
cmp
jl
pop
mov
movsl
andl
decl
in
xor
decl
dec
add
pop
call
mov
mov
popf
or
mov
jno
loope
cld
sti
sbb
int3
ja
dec
jae
out
fwait
jb
aas
ss
sbb
dec
ja
test
nop
mov
push
and
jnp
loopne
pop
lret
ss
push
into
enterw
mov
xchg
movb
mov
cmp
mov
bound
ds
jge
lcall
imul
push
shl
nop
inc
aam
adc
repz
pop
jmp
lfs
lret
dec
sub
es
add
adc
shrb
test
xor
sbb
out
jo
sub
mov
dec
aaa
sub
je
adc
dec
pop
xchg
jnp
ja
and
sbb
in
je
dec
pop
shlb
enter
xchg
or
pop
iret
mov
xor
ja
sbb
mov
jnp
push
std
std
jmp
mov
into
pop
scas
add
mov
frstor
jp
les
mov
dec
push
cmpsb
into
xchg
and
bound
scas
imul
jp
imull
es
cli
scas
repz
stos
pop
pop
mov
jle
stc
mov
xor
es
jecxz
lahf
adc
call
adc
cwtl
dec
mov
out
stc
cmp
mov
pop
aad
sub
add
test
xchg
cmp
insb
jne
xchg
xor
neg
aad
mov
cmpsl
lret
sti
add
out
repz
aam
outsb
arpl
add
push
pop
sbb
mov
sahf
jg
shrl
and
mov
mov
jmp
add
dec
adc
jo
dec
shr
adc
jne
push
imul
adc
xchg
out
popf
mov
test
into
and
mov
dec
out
or
test
loope
arpl
stc
std
mov
arpl
push
pop
fnstcw
sahf
mov
stos
sub
stos
mov
xchg
in
dec
push
or
fldl
mov
lds
out
xchg
mov
push
pop
push
mov
clc
int3
in
sub
pop
pop
icebp
adc
push
jp
cwtl
cwtl
xlat
imul
pop
pop
imul
loopne
mov
push
mov
jmp
xchg
clc
out
inc
sub
movsb
popf
cwtl
add
fiadds
mov
rcll
pusha
sbb
decl
sbb
push
cmpl
jbe
ret
pop
test
out
mov
sbb
ljmp
mov
or
mov
jno
pop
inc
add
mov
cld
or
mov
push
cmp
jnp
in
add
cmp
mov
out
mov
inc
decl
or
fwait
or
mov
cmpsb
mov
sub
xor
fiadds
lea
adc
mov
outsl
xor
push
ret
sbb
pop
popa
xlat
mov
add
pop
lods
jmp
sub
ds
mov
dec
hlt
js
xor
sti
ja
sbbl
pop
pop
in
fdivrs
sti
pop
or
pop
mov
lret
adc
clc
mov
push
dec
mov
xor
out
add
gs
adc
pop
repz
addl
test
ja
lret
jp
gs
and
in
roll
jp
outsl
addb
test
jnp
lock
and
mov
pop
shl
dec
aam
cmp
in
clc
or
cmpsb
push
sub
cmc
orl
ret
pop
sti
push
enter
or
or
or
jecxz
pop
lods
jo
add
push
mov
xchg
xchg
clc
jo
cmp
in
xor
adc
or
inc
dec
mov
cmpsw
lods
sbb
in
enter
in
inc
lret
and
pop
or
lret
push
rcl
cmpsb
sub
aad
sub
mov
shll
sub
repz
inc
mov
jl
push
outsb
sub
cmc
dec
or
test
mov
jecxz
dec
xchg
jmp
jge
xor
aaa
jnp
sbb
mov
scas
xchg
repz
and
jo
mov
sbb
in
or
dec
and
jns
pusha
mov
mov
mov
repz
jne
mov
xchg
sbb
fstl
pop
cmpsl
mov
xchg
push
int3
pop
and
rclb
in
mov
out
hlt
xchg
mov
stos
bound
lcall
mov
ret
nop
mov
lahf
mov
push
sbb
adc
pop
in
cmp
pop
addr16
data16
out
jbe
repz
ds
mov
pop
mov
hlt
jmp
test
xchg
ja
and
mov
xchg
repz
push
cmp
sbb
mov
push
push
xchg
sbb
int
orb
inc
inc
inc
push
cmpsb
mov
add
cli
fisttpl
in
addr16
jb
mov
popa
dec
in
js
mov
add
xor
mov
xor
cmpsl
lret
ss
test
jge
push
movsl
fs
cltd
xor
enter
sti
inc
data16
in
mov
mov
mov
subb
loopne
and
or
bound
push
mov
fistpl
popa
jbe
out
cmp
clc
sbb
pop
call
addl
iret
lret
mov
in
mov
dec
adc
and
add
dec
cltd
cwtl
loopne
pop
cmc
dec
ret
lret
dec
or
sar
or
lret
cmp
sub
rclb
jb
cld
adc
jmp
mov
jg
cs
push
scas
test
push
cmpsb
popw
jo
in
shlb
pop
pop
loope
dec
mov
outsb
into
lods
and
ja,pn
xchg
test
fcomip
test
mov
pop
xchg
pop
pop
test
xchg
out
add
arpl
sbb
mov
lds
jmp
test
adc
lock
push
test
sbb
mov
into
xchg
jnp
mov
pop
cld
dec
dec
push
push
fisubs
cmc
test
ss
xor
mov
push
loop
or
popf
imul
adc
mov
mov
xor
push
pop
jns
push
sbb
imul
iret
sbb
xor
test
pop
in
and
sub
stos
add
in
mov
xlat
test
imul
mov
aas
data16
sahf
ror
fwait
cmp
mov
fisttpl
jg
dec
jecxz
aas
lods
mov
xor
inc
mov
or
xchg
icebp
test
sbb
jg
lea
sbb
sti
cs
mov
inc
imul
xor
or
jl
pop
push
int
and
jp
cmpsb
sbb
aaa
test
aad
push
ds
push
out
stos
sub
xor
mov
mov
repnz
jbe
xchg
dec
cmp
adc
adc
in
cmp
or
inc
out
sti
mulb
call
xchg
adc
ljmp
inc
popa
test
mov
add
sbb
lret
pop
repz
idivl
test
and
stc
sahf
jecxz
pop
adc
pop
xchg
cwtl
loop
hlt
ja
add
mov
rcll
subl
mov
sbb
pushf
cmp
push
pop
std
xchg
mov
loope
jbe
cltd
or
pop
xor
ret
pop
lock
jge
hlt
loope
add
or
inc
xchg
into
xchg
lds
fdivrs
pushf
sub
clc
jle
pop
mov
lea
cmp
std
dec
je
stos
insb
push
cltd
dec
ret
aaa
sub
iret
lcall
mov
fsubs
repz
addr16
adc
ficomps
jmp
lcall
inc
xor
das
inc
inc
psrlq
mov
mov
sub
dec
ljmp
xor
hlt
idivb
andb
movlps
jo
cwtl
arpl
push
mov
mov
mov
pop
movsb
inc
aad
pop
mov
fdivl
xchg
inc
mov
clc
sbb
sti
cmp
cli
pushf
cmpsl
lahf
pop
in
cmpsb
inc
xlat
or
dec
xchg
dec
sbb
cmp
sbb
fisttpl
popf
les
gs
dec
xchg
inc
sbb
sti
and
push
in
imul
sub
loopne
push
loopne
inc
jp
pop
mov
into
cld
pushf
push
pop
pop
movsb
sbb
mov
dec
and
and
mov
popf
xchg
jbe
jb
push
dec
dec
xchg
mov
loop
xchg
mov
lahf
out
shlb
jbe
aas
lret
xchg
add
outsl
shll
pop
data16
pop
push
add
jb
push
lret
xor
into
fnsave
fs
das
lret
fwait
jl
psubd
nop
pop
aas
jno
pop
lahf
fldl
fbstp
and
pop
ja
or
add
adc
jo
cmp
into
dec
jnp
imul
jle
inc
ret
sbb
cmp
lds
js
outsl
mov
lcall
lret
aaa
inc
inc
test
cmp
lods
jle
inc
out
popf
neg
and
xchg
in
dec
scas
and
or
mov
mov
clc
arpl
pop
rclb
outsb
lret
fwait
insl
xchg
insb
jno
cmpsb
loopne
es
adc
xor
or
dec
pop
push
sub
adc
daa
in
jg
addb
push
inc
in
xchg
movsl
push
movsb
mov
pushf
xchg
loop
ja
imul
adc
xchg
sub
push
mov
mov
int3
cmp
test
inc
adc
mov
cmpsl
int
push
out
push
jg
lahf
call
sbb
pop
lea
fstpl
pushf
test
sbb
bound
or
inc
inc
sub
pop
sbb
push
pushf
aas
mov
mov
aad
xor
jo
mov
xchg
add
popf
lahf
fsubs
inc
jb
jne
mov
test
or
mov
dec
gs
inc
inc
jecxz
lds
std
dec
shl
sarl
leave
gs
and
adc
shll
jp
mov
in
cmp
jg
push
add
stos
test
les
rcll
pop
dec
ja
les
jo
sbb
ja
or
pushf
sahf
dec
mov
gs
push
imul
lock
outsb
sub
cmpb
or
movl
out
addr16
movsl
lods
ret
fsts
rolb
mov
enter
stc
pop
xor
mov
in
scas
cltd
mov
dec
ja
jae
push
fsub
icebp
sub
lods
pushf
jne
adc
jne
arpl
pop
ret
cmpsb
and
movsl
push
pushf
ds
movsb
clc
pop
mov
sbb
enter
gs
imul
test
adc
jne
cmp
lret
in
pop
or
pop
push
xor
cld
andl
rol
xor
stos
mov
jp
and
into
fs
movsb
repz
int
mov
adc
pop
jo
xor
lret
adc
xchg
fidivs
pop
pop
scas
mov
ret
rcrb
cmp
mov
imull
xchg
xchg
add
decl
or
sahf
or
enter
xor
push
jecxz
fcoml
adc
inc
loope
sbb
ficomps
icebp
push
mov
add
js
xchg
ss
cld
jp
imul
xchg
jo
hlt
push
add
loopne,pt
fdivrl
mov
stos
in
fiadds
sbb
xchg
cltd
cwtl
jno
push
sti
aad
ret
iret
out
pop
xor
mov
cmp
out
icebp
sub
adc
outsb
or
sub
pmaxub
shr
jle
push
sti
jb
cmpsb
jae
sahf
jns
cmpsb
test
inc
dec
pop
in
loop
jbe
repnz
cmp
test
outsl
mov
mov
test
push
gs
mov
fnstcw
cli
jmp
sub
jecxz
jne
or
out
lods
sub
cmp
lret
dec
fucomip
sub
xchg
or
out
mov
lock
dec
push
push
dec
sbb
lods
sbb
adc
sub
insl
test
sub
faddp
cmc
adc
pop
and
jae
leave
dec
stos
add
ljmp
test
fildll
in
loope
imul
stos
cmc
iret
mov
push
out
push
xchg
in
mov
sahf
jmp
dec
push
stc
les
dec
shr
inc
pop
mov
scas
js
sub
or
push
jns
sti
mov
addr16
jge
mov
inc
pop
xor
aad
push
mov
aaa
in
jge
mov
icebp
xor
lea
js
out
outsl
sbb
cli
fnstcw
and
mov
scas
and
out
lcall
aam
and
xor
jne
add
ficompl
pop
lret
push
xchg
ret
xor
fs
xor
fldenv
loop
imul
jae
adc
mov
pop
pop
enter
punpckhwd
cmc
xchg
xchg
ror
dec
or
gs
arpl
cmp
hlt
test
mov
lds
stos
mov
dec
cwtl
mov
pop
insl
iret
push
pusha
test
inc
lds
cs
sub
lret
aaa
or
xchg
cmp
sbbb
fstps
nop
out
clc
push
push
and
bound
sub
or
repnz
outsl
sub
cmp
pop
jo
into
cmp
or
jecxz
repz
cmp
inc
stos
and
popa
adc
jne
xor
cwtl
aaa
mov
or
mov
lcall
out
addb
stc
mov
in
dec
dec
std
enter
lock
ljmp
mov
and
mov
cmp
outsb
push
adc
daa
or
jo
adc
popw
sub
add
jmp
mov
outsl
or
jno
dec
lods
aam
mov
stos
xchg
mov
mov
pop
pop
jns
fldenv
out
inc
or
pop
dec
out
test
stos
dec
fs
sbb
rcrb
lods
dec
inc
int3
pop
ds
insb
and
or
or
pop
ss
fldenv
jnp
sub
pop
mov
mov
xchg
lock
sub
push
mov
int
mov
in
and
and
sub
jne
les
loopne
es
fs
in
les
fbstp
insb
mov
clc
or
cmp
ret
nop
inc
xchg
dec
adc
pop
pop
jmp
pop
hlt
jno
cwtl
dec
int
mov
xor
insl
add
stos
nop
push
push
push
jp
test
cmp
sti
andb
inc
ds
lock
mov
dec
push
xlat
mov
and
xchg
xor
pop
aas
inc
pop
imul
mov
lock
movl
test
push
scas
call
lcall
mov
pop
ja
lds
sub
add
pop
lds
add
ljmp
push
xor
sub
xchg
jnp
in
aad
cs
fsubl
sbb
pop
scas
mov
sub
mov
std
sbb
aam
and
lds
and
adc
stos
cmc
fmuls
sbb
or
sarb
mov
ud0
into
jmp
stc
leave
sbb
adc
fsubs
test
cld
cwtl
lock
je
dec
and
arpl
mov
insb
mov
adc
outsb
push
aad
invd
xchg
pop
sbb
adcb
adc
mov
push
loop
sbb
lahf
lock
pop
ss
addr16
cmp
dec
mov
inc
fsts
add
and
notb
add
fs
mov
xchg
aam
dec
cmp
mov
adc
xor
sub
sti
and
outsb
cmpsb
imul
pop
out
in
cmpsw
mov
icebp
pop
xor
mov
dec
mov
xchg
je
lds
iret
and
xor
test
dec
jecxz
add
fcomp
outsl
into
jmp
adc
sbb
ret
add
xorb
decb
push
loope
sub
mov
repnz
adc
and
adc
out
adc
or
ljmp
jnp
ljmp
loopne
push
xchg
push
jnp
std
and
sar
sbb
out
icebp
popa
push
inc
inc
mov
sti
call
xor
into
add
jnp
repz
icebp
mov
pop
mov
adc
lock
xor
or
test
rol
std
dec
lods
call
dec
jp
or
or
sbb
jmp
mov
dec
adc
mov
push
fidivs
xorb
call
or
inc
push
ret
cmp
jno
sti
or
leave
sahf
mov
dec
dec
xchg
push
cmp
or
testl
lods
push
cs
dec
daa
imul
dec
testb
test
lcall
jl
mov
in
mov
loop
adc
mov
xchg
push
mov
les
cmp
xor
or
push
sub
pop
repnz
sahf
loop
sub
add
dec
pop
lea
cmp
adc
mov
movsb
rorb
push
and
xchg
mov
cmp
sbb
call
shll
pop
push
fcoms
sbb
ret
jb
daa
stos
and
sub
xchg
add
xor
fiaddl
adc
push
in
mov
ret
fdivl
cli
dec
push
jae
jmp
xor
jbe
mov
in
xlat
stos
bound
xor
stos
push
xor
add
sahf
sbb
lcall
pop
jmp
mov
or
or
jns
cs
jno
loop
cmpsl
pop
jle
inc
fadd
std
mov
push
cmp
mov
mov
adc
es
inc
scas
sub
cmp
out
xchg
push
ljmp
and
and
adc
mov
outsb
pop
or
dec
push
and
and
addl
stos
inc
cmp
push
cld
inc
xchg
shl
and
div
mov
cwtl
mov
fldl
pop
push
and
into
movsb
ss
ret
es
pop
add
push
out
xor
mov
sub
hlt
fisttpll
in
lds
arpl
repz
pop
sbb
pop
enter
je
rcrl
sbb
std
inc
and
cwtl
inc
dec
js
jmp
push
push
jo
cmp
mov
cmp
clc
xor
adc
lea
mov
mov
mov
adc
sahf
das
xor
loop
mov
adc
imul
pop
call
and
add
call
pop
add
lods
or
mov
xchg
sysexit
adc
je
mov
mov
jp
test
jno
ljmp
adc
mov
rcrl
xlat
jg
stos
sbb
push
mov
mov
mov
jns
push
pushl
cmc
cmp
adc
lods
scas
jno
out
dec
cmp
pop
jmp
push
scas
cli
dec
or
adc
jle
mov
pop
or
xor
add
add
subb
jge
sub
cmp
xchg
pop
lods
xchg
jno
pop
cmpsb
mov
test
movsb
mov
rclb
sub
and
cmpsl
inc
gs
sbb
mov
jle
clc
aas
xlat
push
push
in
lods
and
out
xchg
mov
push
loopne
dec
jge
and
enter
adc
cmp
scas
popf
xor
push
lock
push
inc
mov
lret
jle
iret
ficompl
inc
adc
shll
pop
int
scas
xlat
jb
push
push
xchg
js
xorb
aad
jge
rorl
sahf
pop
dec
cmpsl
mov
mov
jmp
dec
arpl
cmp
sbb
jnp
pop
xor
fnstenv
inc
shrb
inc
dec
sbb
pushf
mov
je
mov
push
mov
sub
lret
add
cmp
pop
push
mov
mov
fcomps
xor
movsb
add
mov
add
shl
cwtl
cmp
bound
in
addb
inc
sbb
fwait
cwtl
pop
or
sbb
fld1
push
addr16
sahf
shrb
push
add
adc
stc
mov
jl
test
sub
aad
hlt
xor
mov
pusha
dec
cmp
dec
clc
mov
stos
mov
adc
or
cmc
and
pop
test
sub
icebp
or
dec
les
inc
jno
bound
and
add
push
cmp
mov
push
repz
iret
or
cmp
notl
lea
inc
popa
mov
leave
dec
cmp
sbb
pop
cmc
sub
ja
ret
dec
leave
mov
cmc
jecxz
cmp
add
fsubrs
test
push
mov
cwtl
or
pop
enter
stc
rcrb
sub
pop
aaa
out
out
scas
ds
or
mov
push
sti
push
mulb
lock
clc
jae
mov
pop
push
add
inc
push
jmp
mov
subl
test
das
xchg
xor
ja
lock
ret
cmpsl
es
in
mov
aam
ss
divb
pop
icebp
je
mov
jl
repz
das
lds
mov
dec
popf
arpl
vmaxps
xchg
inc
je
ret
xchg
or
leave
xor
data16
fst
push
in
mov
or
popa
xchg
notb
cld
push
outsl
nop
iret
lods
mov
xchg
insb
add
dec
popa
sahf
xchg
lock
and
aas
or
sbb
icebp
xor
or
bound
das
xor
push
cmp
pop
jo
push
sbb
or
xor
mov
mov
xchg
pop
or
push
test
xlat
test
cmp
in
mov
pop
fistpl
enter
inc
fistpl
sub
sub
pusha
loop
fstpt
mov
add
and
dec
js
bound
repz
mov
popa
pop
sub
push
xlat
fidivrl
leave
jle
in
push
mov
cs
jbe
xchg
sub
pop
push
sbb
fdecstp
icebp
outsb
mov
xor
scas
dec
cmp
and
cmp
in
lock
push
imul
inc
sarb
inc
out
mov
jp
das
mov
adc
sbb
enter
sbb
xchg
movsb
mov
es
pop
mov
mov
cli
ret
imul
hlt
or
sbb
aaa
mov
adc
cltd
or
sub
pop
loopne
jmp
mov
test
scas
fucomi
das
inc
cld
sarl
sbb
mov
mov
lock
int
add
push
repnz
enter
fldl
hlt
enter
pushf
xor
test
mov
repz
daa
xchg
incl
lret
mov
xchg
outsb
stc
in
jge
or
mov
xchg
test
jmp
sub
pop
out
sbb
ja
cmp
push
cmp
jmp
add
repnz
adc
imul
fdivp
sbb
cs
lods
movsb
push
lret
mov
sub
xchg
or
xlat
mov
incl
jp
mov
pop
std
les
xchg
stc
in
jmp
cltd
adc
cmpb
ds
sub
xchg
scas
cmp
leavew
sahf
adc
jp
lods
lods
fnstenv
std
cmp
dec
pop
inc
int
aam
pop
js
add
aad
dec
inc
cmp
add
pop
rcll
stos
mov
and
cli
and
add
mov
rcll
push
dec
popa
fsubr
mov
fs
js
aaa
fwait
pop
cltd
push
mov
adc
aaa
adcb
and
and
nop
mov
out
and
cmp
inc
ret
outsb
outsl
adc
push
jno
js
and
xchg
pop
xchg
jge
test
xor
add
sbbb
dec
mov
sbb
sbbl
push
xlat
aas
xchg
sbb
cld
out
and
pushf
pop
leave
je
aas
popf
cmpb
jnp
out
xchg
mov
and
add
out
aas
scas
xchg
ja
fnstenv
inc
pop
lds
mov
cmp
das
stos
aas
and
mov
push
popf
dec
shlb
mov
adc
pop
cmp
lret
ds
push
adc
jnp
jg
pop
mov
mov
sti
push
test
push
and
xchg
ds
xor
mov
fcomip
cmp
rorb
addr16
cmpsb
and
popa
roll
rcr
pop
data16
pop
daa
adc
mov
sub
and
jmp
jecxz
cwtl
jb
mov
cmc
out
push
xor
xlat
xchg
sub
shrb
cmp
sbb
sbb
gs
sbb
mov
push
test
cmpl
adc
lock
in
mov
pop
push
out
stc
data16
xchg
in
xchg
jbe
sbb
mov
gs
mov
push
dec
sub
or
mov
inc
sbb
outsl
sbb
push
add
fadd
sbb
pop
cli
pop
pop
inc
lret
pushf
jb
add
add
stos
xor
imull
dec
sub
ja
mov
bound
cmc
pop
jo
stos
pop
pop
mov
adc
lock
and
and
mov
cmpsb
and
mov
xlat
jno
and
jg
sbbb
cmp
ja
jnp
xor
push
and
test
icebp
xor
imul
add
cmp
or
out
xor
push
addr16
push
mov
aaa
shll
inc
hlt
jne
loop
ljmp
fcmovne
mov
inc
push
outsb
jno,pn
std
ret
fs
dec
pop
loope
add
in
loope
icebp
lds
orb
shll
lcall
dec
sub
fs
mov
movsb
into
sub
jbe
push
repnz
sub
test
cmp
xor
je
mov
call
add
je
xor
rorb
mov
sbb
add
int
mov
and
stos
or
push
sbb
cli
sub
popf
pop
mov
cltd
cmpsl
into
fstpl
adc
add
xchg
sahf
test
dec
inc
es
stos
shlb
aam
es
mov
push
cli
pop
dec
lods
fdivl
jbe
idivl
pop
and
cmp
pop
dec
push
xchg
fcomp
jg
and
enter
dec
xchg
mov
xchg
cmc
cli
mov
inc
xchg
inc
imul
pinsrw
pop
sbb
loop
sahf
lea
jg
ja
jle
xor
scas
adc
andb
out
aas
xor
les
mov
dec
jge
cmpsb
addr16
stos
add
in
push
mov
dec
cmc
inc
mov
das
mov
das
or
adc
sbb
push
arpl
jmp
inc
adcl
es
pop
add
dec
decb
sub
xor
push
lret
dec
sbb
pop
pop
push
movl
cmp
cltd
sub
stc
pop
mov
ss
xor
add
stc
add
push
inc
es
pop
mov
test
in
insb
jle
out
sbb
lret
cwtl
xchg
ljmp
movsl
fisttpll
add
add
out
aas
outsl
cs
cmp
xor
mov
leave
std
push
push
jl
stc
inc
push
ds
into
xor
push
push
test
ljmp
jne
shll
test
loope
cld
stos
add
push
inc
jb
jnp
fisubrl
jne
push
sarb
cmp
xchg
mov
int3
inc
inc
int
jle
push
mov
mov
sub
imul
or
in
dec
xor
or
mov
xchg
loope
fcmove
dec
jns
mov
push
push
jb
inc
aaa
test
cli
iret
shrb
mov
mov
jno
dec
sub
add
jnp
mov
xchg
sarb
or
sbb
das
ror
add
push
enter
shlb
add
cmp
fwait
cmp
insb
bnd
in
adc
lcall
lods
jmp
ror
enter
imul
imul
cmp
mov
movsl
lret
mov
pop
push
loop
jne
fsubs
mov
rcrl
push
and
fsubrl
xchg
mov
mov
jne
psrlw
sub
sti
je
or
mov
ret
mov
pop
in
push
mov
outsb
jle
loope
scas
sbb
lods
pop
push
call
inc
inc
in
cmp
xchg
sub
and
push
push
pop
sbb
push
or
dec
add
and
cld
addr16
fs
inc
pop
xchg
push
push
xor
aaa
cmpsl
mov
imul
mov
sahf
cmpb
jnp
sub
mov
movsb
out
xchg
pop
lahf
dec
adc
into
shll
or
mov
and
add
lods
loope
sub
inc
repz
out
xor
cmp
clc
rclb
repnz
das
vunpckhpd
pop
imul
sub
mov
int3
imul
pop
es
cmp
mov
ss
jae
adc
movsl
sahf
jo
gs
sbb
bswap
or
and
popl
imul
in
cmp
mov
arpl
add
adc
shll
or
jmp
push
stc
addb
loop
and
cmpsb
dec
sub
or
mov
ds
mov
xor
xor
jge
push
repnz
sub
cs
mov
movsl
push
or
sub
ret
aam
push
into
adc
lock
mov
push
inc
stos
push
lret
lea
arpl
mov
sbb
jle
lcall
sub
mov
sarb
sti
js
ljmp
dec
das
mov
add
shlb
jecxz
xchg
popa
std
aaa
mov
sbb
sbb
aam
inc
or
or
dec
addb
gs
pop
insl
test
add
jmp
dec
ss
in
imul
jnp
movsb
pop
push
xor
mov
jle
or
clc
mov
int3
xlat
scas
and
ret
movsb
mov
pop
xchg
sub
sbbl
mov
popf
imul
mov
fdivrp
int
inc
adc
xchg
dec
and
mov
in
push
dec
shll
sub
sub
repnz
outsb
mov
and
popa
mov
aam
add
or
cs
scas
decb
ljmp
rcrl
pop
mov
int3
add
cmp
adc
popa
cmc
mov
int
es
pop
jmp
pop
daa
fsubs
ljmp
add
lods
pop
push
pop
dec
pop
jbe
rcl
outsb
xchg
sti
dec
popa
ror
cmp
ja
nop
popf
hlt
inc
dec
jecxz
sbb
adc
or
mov
mov
test
xor
inc
clc
das
xchg
sbb
iret
lret
outsb
mov
dec
push
sbb
jbe
mov
sub
outsl
or
call
insb
pop
outsl
mov
or
cmc
pop
jecxz
cmp
cli
scas
in
jae
sub
xlat
push
enter
cltd
adc
lret
mov
add
lret
cmc
mov
iret
sbb
jne
jmp
jl
sbb
mov
loopne
pushf
mov
push
dec
dec
data16
js
xor
fsts
dec
stos
add
das
push
xor
daa
arpl
mov
and
idiv
inc
cmpsl
out
movntq
mov
leave
lods
inc
jecxz
mov
lret
pop
push
push
sbb
negb
movsl
cli
pop
push
insb
sbb
gs
xor
iret
cmc
rcrb
push
add
dec
nop
fnsave
test
sub
bound
inc
test
fstpt
test
or
filds
es
xchg
ds
pop
xchg
aas
aam
jl
fdivl
cmc
push
dec
lret
add
fwait
dec
fst
push
ret
bound
fiadds
xchg
mov
inc
stc
jge
or
xor
fwait
ret
jb
mov
sub
in
stc
das
push
dec
xor
jp
pop
or
xor
jecxz
sbb
cmovle
or
ja
sbb
iret
or
cmp
jmp
xor
pop
sti
mov
lahf
cmc
lods
mov
xchg
cmp
add
xlat
dec
pushf
xor
add
jae
rorb
imul
ror
xchg
and
sbb
or
iret
movsb
enter
ja
or
into
xchg
aaa
inc
inc
sbbl
adc
xor
cmp
mov
ss
cs
jmp
inc
lock
loope
repz
xchg
les
loopne
xor
pop
mov
dec
pop
xchg
and
and
jmp
sti
bound
adc
mov
adc
mul
cld
popf
test
test
lahf
mov
lods
iret
mov
mov
jb
in
sub
fdivl
jnp
cmp
or
mov
xchg
inc
stos
loope
inc
mov
fbld
lret
inc
mov
sub
or
pop
stc
jmp
ret
adc
dec
add
lcall
gs
xchg
sbb
mov
out
xchg
setne
xlat
sti
es
dec
xlat
out
scas
cmc
xor
arpl
jnp
addr16
fnstcw
push
test
fdivl
pop
bound
push
std
ljmp
popf
xor
lods
pop
add
or
mov
push
leave
scas
fmull
push
daa
xchg
pushf
rolb
js
ja
jp
push
aam
sarb
mov
push
push
outsl
sub
mov
cwtl
cmp
sub
dec
xchg
out
add
enter
mov
clc
inc
test
add
push
into
nop
mov
mov
out
or
dec
in
pop
ja
inc
test
sbb
mov
inc
out
push
sub
psubusb
pop
in
ja
sti
mov
push
repnz
stos
cmp
shrb
fcoml
pop
mov
ret
clc
jge
ret
dec
in
jmp
jp
repz
adc
mov
test
and
test
sub
daa
mov
daa
ljmp
xor
or
pop
xchg
jns
mov
add
ss
aad
dec
jo
ret
shlb
and
mov
or
mov
jp
movsb
enter
mov
test
test
mov
mov
push
scas
lods
jl
push
lcall
dec
outsl
jnp
xchg
pushf
std
shrl
cmp
dec
ret
cmp
dec
push
pop
outsl
pop
push
mov
dec
dec
popf
outsb
and
cmpsb
push
xlat
dec
dec
lret
test
aad
mov
ljmp
dec
adc
imul
leave
push
repz
mov
lds
arpl
jle,pn
mov
jmp
cltd
push
sbb
xchg
nop
les
stos
dec
cmpb
mov
mov
ljmp
mov
or
lret
loopne
xchg
arpl
lock
inc
or
mov
adc
mov
nop
loop
cmp
and
sub
outsb
or
add
std
dec
daa
and
cli
xlat
mov
shrb
jae
xor
adc
nop
scas
movl
ret
mov
add
outsb
inc
xchg
xor
cs
sahf
aas
insb
nop
inc
aam
pop
jbe
cmp
jbe
pop
ljmp
sub
push
push
mov
enter
jmp
jl
adc
cmp
adc
pop
cmpsb
daa
out
mov
sti
mov
movsl
inc
lahf
lret
inc
or
add
jb
aad
dec
add
or
flds
xor
or
hlt
xor
jo
or
xchg
pop
cmp
aaa
rorl
lret
cmp
cli
sarb
into
out
idivb
imul
iret
movd
aaa
xchg
insb
mov
jp
fs
mov
daa
ja
fsubl
test
and
xor
jno
jnp
in
xchg
rcrb
mov
stc
arpl
cmovge
cmp
xlat
lock
stc
cs
stos
sahf
iret
mov
mov
jnp
test
or
out
cli
ds
and
jecxz
or
add
sbb
mov
repnz
xchg
leave
adc
cmp
push
out
fiaddl
adc
and
mov
jns
xchg
mov
out
dec
mov
mov
call
pushf
cmp
insl
cmc
lds
cmp
xor
xor
mov
inc
mov
scas
test
or
test
xchg
stos
pop
nop
pop
out
jge
jmp
mov
outsb
or
or
dec
mov
pop
or
or
testl
or
scas
push
daa
mov
push
xlat
adc
lds
dec
xchg
cld
fstps
lea
call
jp
push
jl
xor
inc
lahf
dec
imul
cmp
adc
fmull
aaa
ds
cmpsb
mov
dec
pop
cmp
bound
jb
push
sbb
and
test
fldenv
add
leave
push
mov
and
push
xchg
ret
out
gs
jl
in
push
subl
pop
xchg
add
shl
ja
sub
test
outsl
adc
cmp
pop
scas
xlat
mov
add
repnz
insl
pop
sbb
sbb
testl
lods
mov
adcb
sbb
scas
cli
jge
or
xor
ljmp
xor
mov
testl
or
mov
adc
insb
movsb
rcrb
mov
outsb
push
lods
push
stos
mov
mov
out
inc
divl
cli
sbb
lret
jb
in
addb
add
push
pop
mov
mov
repnz
jb
sbb
sar
imul
pop
shll
xor
xor
scas
xchg
div
jecxz
push
jmp
lcall
or
xlat
bound
inc
mov
and
cmp
mov
pop
inc
xchg
pop
sar
sub
mov
pop
out
mov
scas
negl
stos
lret
cli
pop
scas
repz
mov
ficompl
sbbl
popf
mov
mov
leave
mov
add
push
outsb
mov
or
mov
in
movsb
addr16
stc
add
lods
cmpsb
cltd
and
iret
add
cmp
rolb
push
pop
hlt
outsl
icebp
test
outsb
shll
ret
jge
rcll
lea
fdivrs
fnsave
movsl
inc
imulb
addl
je
mov
leave
daa
lret
negl
push
mov
mov
push
mov
mov
int3
lods
cmpb
mov
movsl
cmpl
out
pop
mov
repnz
mov
cmp
shrb
dec
fwait
xchg
leave
addr16
in
adc
in
mov
jae
xchg
cmp
sub
add
cmc
xchg
pop
sub
daa
out
inc
lods
pop
sbb
fdivrl
sahf
mov
fcmove
add
adc
sub
inc
add
mull
dec
fimuls
push
cmp
mov
int
imul
jmp
xchg
push
mov
sub
inc
xchg
cmpsl
push
aad
push
jmp
pop
xor
jns
loopne
or
sbb
test
imul
shl
mov
mov
adc
mov
dec
add
das
pop
nop
and
pop
xchg
into
ret
or
lods
into
or
mov
pop
adc
sub
add
and
xchg
mov
jne
rorb
or
fisubs
xor
sub
dec
xchg
cwtl
je
bound
mov
ljmp
mov
xor
xchg
jge
dec
rcrb
push
jbe
fisttps
bound
sahf
cmpl
nop
in
mov
lea
insl
mov
sbb
out
fcoms
jg
std
jge
fimuls
jp
mov
add
sbb
cmp
jmp
jo
mov
jae
mov
dec
xchg
jno
jg
or
repnz
xrelease
lods
fwait
addb
mov
xchg
clc
jb
push
into
shlb
daa
xchg
jnp
add
jecxz
cltd
notl
cs
sahf
rol
scas
sbb
mov
mov
aad
jg
sub
les
fimull
insl
mov
add
in
inc
jne
out
out
scas
push
push
xor
cmpsl
in
ret
inc
je
pop
loope
icebp
adc
cli
imul
and
nop
mov
call
or
dec
out
sub
icebp
insl
repnz
jl
shl
jmp
jo
mov
push
lahf
subb
imul
xchg
test
lret
mov
pop
mov
aas
sub
xchg
cmc
push
add
mov
add
dec
sbb
out
test
sub
pop
pop
jg
push
xchg
jnp
jb
pop
or
or
xchg
adc
mov
push
sbb
pop
ret
mov
fisttps
xchg
roll
ljmp
outsb
add
imul
dec
in
mov
or
mov
mov
adc
imul
xor
xlat
sti
adc
push
cltd
in
dec
adc
daa
loope
jnp
outsl
and
dec
insl
fidivl
xchg
sub
xchg
clc
lods
fnstenv
push
mov
jns
fs
call
ret
leave
pop
cmp
add
inc
sub
imul
cwtl
pop
adc
sub
dec
adc
xchg
pushf
mov
cmpsb
pop
adc
and
xchg
push
mov
ror
jae
mov
add
pop
xor
sub
xlat
sti
test
int
push
xor
pop
stos
shlb
popa
mov
sub
sbb
pop
daa
mov
fwait
aaa
inc
push
repnz
jb
xor
xchg
subl
mov
cmc
loopne
xor
test
inc
push
mov
sti
or
jae
mov
in
or
imul
jmp
bnd
adc
xor
and
stos
sbb
inc
lds
insb
popf
cmp
add
pop
mov
stos
xlat
adc
fsub
test
jne
stc
push
fisttpl
add
jns
int
lock
adc
and
mov
in
int
fsubrl
insl
test
loop
lods
mov
jmp
cmc
xor
ds
mov
xor
add
stc
pop
and
mov
fidivl
cmc
loope
loope
add
dec
inc
in
lea
leave
scas
push
prefetch
dec
pop
xor
inc
insl
cmp
or
jns
ss
movsl
jecxz
dec
imul
or
push
or
stos
arpl
notb
push
imul
ret
test
sbbb
push
sbb
insb
xchg
ss
lods
sbb
jp
xor
add
xor
push
xchg
std
das
insl
addr16
add
and
mov
mov
fwait
cmp
lds
or
nop
dec
mov
popa
shl
and
or
inc
push
lods
sub
xchg
adc
push
stc
push
ds
in
xchg
sub
lahf
cmp
inc
cwtl
add
sub
outsl
ljmp
add
adc
call
repnz
mov
movsb
mov
pop
pop
mov
cmp
mov
mov
jo
inc
and
jle
add
xchg
les
push
cltd
xchg
sbbl
pop
jno
xor
stc
mov
sti
pop
cmc
dec
dec
insl
xlat
lahf
es
sahf
in
js
fnstcw
les
push
ret
inc
inc
scas
sti
lret
int3
int
mov
addr16
cmp
loopne
lcall
cld
leave
push
mov
gs
outsl
pusha
push
or
and
into
rcrb
loope
mov
mov
movsb
sub
ret
lods
jp
xor
shl
aaa
rorb
repz
inc
sub
sti
add
mov
add
hlt
enter
cmc
xchg
mov
fs
arpl
jg
pop
inc
add
dec
mov
outsb
ja
or
xor
push
or
scas
mov
add
adc
lods
dec
addb
sub
push
ret
pop
or
pop
cmpsl
cmpsl
mov
je
cmpsb
mov
push
xchg
mov
stc
leave
jnp
xor
inc
xchg
or
push
xor
lods
testl
in
xor
adc
push
add
bound
and
pop
mov
mov
loopne
rcr
rolb
idivb
cld
pop
gs
mov
jg
inc
in
call
add
cmp
pop
insb
dec
bound
js
movsl
jno
add
rcrb
loopne
es
aaa
mov
pop
fwait
cmp
add
add
or
add
add
push
arpl
imul
jns
push
je
insb
jae
add
push
jns
je
insl
add
adcl
je
or
push
imul
adc
jns
gs
adc
outsl
outsb
jae
add
sub
outsl
fs
add
and
jmp
cmp
negb
test
sub
xor
xchg
jo
aad
mov
rcrb
js
ss
mov
loop
ja
lret
test
jmp
sar
adc
sub
jns
jb
movsb
popa
mov
dec
cltd
mov
jbe
bswap
cmp
inc
mov
or
add
das
fstl
cli
jb
movsb
popa
mov
dec
int3
aaa
mov
ret
dec
movsl
pop
int3
fwait
sahf
movsl
sar
adc
xchg
enter
sahf
and
add
add
ds
jecxz
push
xchg
mov
ret
fbstp
js
jne
xchg
in
add
jae
sti
xlat
sub
in
repz
cmp
lock
in
cltd
cmp
adc
lock
sbb
mov
cli
dec
enter
push
fwait
sub
js
in
xor
lahf
cmp
js
cmpsb
push
fcomp
sbb
mov
jp
pop
gs
stc
insb
popa
xchg
out
and
movsl
sbb
movlps
popf
ljmp
movsb
lods
cmp
repnz
pop
lock
in
nop
cs
clc
mov
push
push
mov
xchg
rolb
dec
jb
shrb
inc
mov
add
test
xchg
js
cmc
sti
sub
popf
in
pop
imul
mov
xchg
leave
sub
cs
xor
push
sub
jp
jb
outsb
adc
adc
test
pop
and
clc
lods
pop
test
pop
hlt
xchg
in
fucomip
dec
clc
int3
push
add
xchg
pusha
or
aam
dec
push
lods
cmc
sub
icebp
jns
out
push
ds
mov
shll
add
or
or
cmp
fidivrs
xchg
std
pusha
xor
pop
mov
les
jns
popa
sub
and
outsl
push
lcall
cmpsb
xlat
icebp
and
mov
or
dec
mov
push
fbstp
stc
xor
pop
jne
stc
lds
in
ja
and
out
cmp
stos
movsl
loopne
out
cmpsb
mov
pop
and
dec
xchg
mov
inc
mov
loopne
xchg
mov
js
hlt
arpl
cwtl
dec
inc
jmp
pusha
lods
arpl
add
imul
test
mov
roll
imul
popf
idiv
rorl
push
add
mov
mov
insb
mov
outsb
sbb
or
cmp
push
inc
dec
mov
mov
sbbl
sbb
lea
insl
std
pop
xor
sbb
lahf
push
shr
out
cmp
jl
lea
popf
icebp
fsubl
out
inc
inc
add
or
inc
inc
cli
movsb
sbb
xor
push
pop
jo
pop
shlb
es
out
pop
lea
psllq
mov
test
aam
outsb
fstpl
and
mov
pop
sub
jl
shlb
std
mov
dec
mov
push
mov
es
add
ss
ret
pop
pop
pushl
add
sub
sbb
mov
xor
ficompl
sub
jb
into
cmc
push
mov
aad
out
pushf
popa
ljmp
test
fwait
push
aaa
sbb
xor
ret
lcall
in
incl
xchg
cs
cli
mov
popa
stos
shl
xchg
push
lock
fsts
or
popf
outsl
in
out
cmp
jl
in
loop
and
popa
movsl
inc
cli
movsb
sbb
jae
cld
push
filds
inc
or
push
mov
mov
leave
mov
push
aas
mulb
fidivrs
jo
sub
xor
mov
insb
add
mov
dec
jmp
cmp
idivb
jns
test
xchg
jg
in
push
lock
mov
pop
push
les
push
in
jge
lahf
sub
out
jle
push
mov
xchg
jmp
arpl
jbe
adc
out
inc
mov
pop
and
scas
shrb
push
les
jb
or
sbb
xor
xchg
jmp
push
sbb
loopne
mov
andl
repz
imul
jp
mov
lea
add
insb
jb
mov
data16
mov
pop
xchg
mov
xor
xchg
xor
adc
cs
cmpsb
sbb
mov
jge
fcmovne
cltd
lock
pop
hlt
shr
dec
pushf
subb
mov
lods
push
dec
or
and
shlb
fstpt
pop
ds
jns
and
jl
arpl
xor
scas
push
loopne
js
loope
jo
dec
inc
ret
aam
into
out
les
es
or
cmp
subb
xor
cwtl
jb
sbb
cmp
mov
cmpb
aam
enter
in
gs
jns
pop
ds
cmpsl
loop
xlat
mov
aad
cmc
mov
sub
pop
mov
sbb
adc
scas
sbb
in
sub
mov
nop
jp
int3
test
bndstx
dec
push
fildll
cmp
insl
mov
pushl
jo
daa
and
xchg
aas
in
lods
cs
fwait
data16
and
mov
sbb
les
rcr
xchg
jmp
cmp
mov
mov
mov
addr16
mov
fsubs
in
and
nop
and
outsl
xchg
aas
hlt
test
push
into
dec
es
inc
ret
mov
xchg
push
ss
jecxz
sbb
mov
xchg
jp
test
orb
jg
xor
mov
xchg
or
mov
mov
inc
push
dec
sbbb
adc
test
lods
and
mov
jbe
mov
test
dec
adc
sbbl
adc
inc
push
mov
xor
pop
sti
push
and
xlat
inc
mov
das
imul
add
cli
push
addr16
ret
sbb
jo
cmpsl
dec
int3
push
push
lahf
push
and
ret
in
scas
cld
out
add
jp
rcrb
stc
les
jne
lret
jae
xor
xor
repnz
dec
jbe
and
ss
push
fimull
sti
jne
and
gs
outsl
sti
and
mov
mov
cmp
dec
pop
adc
insb
sbbl
mov
xchg
mov
hlt
in
lock
lock
out
sub
jmp
mov
jg
cltd
pusha
xchg
sbb
gs
add
dec
lods
jecxz
es
out
inc
mov
cmpsb
xchg
pop
mov
adc
sub
enter
gs
adc
inc
mov
fs
add
xchg
mov
roll
push
mov
pop
daa
xor
addr16
addr16
adc
sub
jge
mov
imul
insb
add
mov
enter
sbb
int
dec
aas
xlat
iret
adc
and
sbb
and
sub
dec
dec
push
pop
testb
fistpll
cld
mov
add
add
adc
insl
mov
mov
in
test
and
aad
sub
insb
push
jl
enter
roll
fs
sti
jmp
cmpsl
sub
cmp
cmp
jmp
movsb
pop
or
stos
out
mov
fwait
adc
jns
and
mov
inc
jle
and
push
cmp
push
adcb
in
lahf
mov
lahf
es
mov
mov
adc
jb
add
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
lock
addb
sahf
mov
push
push
jl
sbb
jne
add
xchg
jae
ret
sub
push
fsub
mov
outsl
pop
mov
ds
cmpsl
and
aas
jbe
pop
adc
roll
neg
mov
movsb
sbb
jecxz
mov
ss
cmp
ret
cmp
jge
fwait
fwait
jns
sub
xor
insl
andb
xor
xchg
lods
movsl
int3
jg
enter
sbb
in
clc
push
inc
lahf
sub
fidivrs
in
dec
xor
mov
or
das
inc
inc
or
sbb
mov
or
sahf
xchg
pop
sahf
frstor
sub
mov
push
jl
je
add
leave
je
add
cwtl
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
ds
scas
daa
mov
cmc
sbb
sbb
stos
xor
lret
lods
enter
lret
cwtl
mov
jge
adc
mov
enter
lret
lods
enter
lret
cwtl
mov
jge
adc
mov
enter
lret
lods
enter
lret
lods
enter
lret
cwtl
mov
jge
adc
mov
enter
lret
cwtl
mov
jge
adc
mov
enter
lret
lods
enter
lret
lods
enter
lret
cwtl
mov
jge
adc
mov
enter
lret
lods
enter
lret
lods
enter
lret
cwtl
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
and
lret
mov
push
push
cmp
cmp
sub
jnp
xchg
rcl
mov
into
fcom
rclb
outsl
sub
sub
inc
and
testl
mov
jg
mov
aad
add
scas
into
adcb
notb
push
mov
ret
cmp
sti
push
sub
fcmovu
xor
bound
sub
sub
pop
mov
test
mov
pop
sti
aad
imul
mov
fcoms
lock
inc
fidivrl
aaa
pop
stos
mov
cmp
dec
adc
pop
movsl
ja
cmp
subb
ljmp
cmc
mov
mov
iret
lds
popa
pop
fildl
push
rcl
push
imul
sbb
fmuls
add
dec
dec
mov
adc
mov
mov
mov
xor
in
je
xor
xor
aad
cli
adc
imull
xlat
int
mulb
imul
inc
push
add
cmc
test
sbb
fisubrl
test
ret
mov
stos
push
adc
cmp
movsb
sbb
push
dec
imul
outsl
pushf
mov
sub
push
pop
cmp
jnp
jne
aas
movsb
adc
insb
jl
stos
lods
jns
idiv
dec
sbb
adc
cmp
pop
popf
loop
xor
ret
cli
pushf
shll
lods
inc
inc
mov
lods
inc
inc
mov
lods
inc
inc
mov
lods
inc
inc
mov
lods
inc
inc
mov
cwtl
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
inc
adc
iret
dec
outsl
mov
loope
inc
iret
dec
outsl
mov
loope
inc
iret
dec
outsl
mov
loope
inc
jmp
push
adc
stos
mov
movsb
pushf
stos
mov
movsb
pushf
stos
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
sbb
in
fincstp
add
dec
xchg
push
nop
inc
mov
jmp
mov
or
push
pop
insb
popf
and
icebp
subb
and
popa
mov
sbb
fwait
decb
cwtl
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
stos
mov
sbb
dec
outsl
mov
loope
inc
iret
dec
outsl
mov
loope
inc
call
sbb
sbb
jecxz
movsb
pushf
stos
mov
movsb
pushf
stos
mov
sbbb
cwtl
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
mov
jge
adc
mov
dec
ss
out
and
daa
js
cmpsl
inc
movsb
adc
rcrb
arpl
xchg
pushl
and
pop
shll
pop
aas
pop
inc
cld
in
push
mov
rorl
push
and
mov
stos
insb
jo
xchg
cmp
jp
outsl
pushf
insl
repnz
mov
in
bound
cmpb
nop
jle
lods
lock
imul
push
setnp
loope
inc
lret
repnz
dec
dec
pop
aas
push
and
xchg
sbb
add
inc
callw
imul
add
daa
push
xchg
adc
xor
movsl
xor
shlb
dec
clc
enter
clc
stos
lret
in
jbe
arpl
ds
sub
loop
push
jnp
add
daa
clc
outsl
es
or
aad
movsl
pop
andl
sub
cmp
shll
sbb
hlt
bound
outsb
mov
rolb
stc
shl
test
pop
pop
cmp
sbb
cmp
pop
mov
cmp
xor
mov
and
popa
or
jae
mov
int
gs
int
int3
imul
clc
int
divb
mov
xor
stos
mov
es
cld
cli
sub
mov
inc
loopne
mov
mov
jae
pop
push
mov
enter
decb
mov
jmp
inc
cltd
add
sbb
mov
inc
mov
int3
outsb
test
jmp
mov
push
ret
and
mov
jmp
xor
nop
pop
loopne
hlt
or
sub
sub
mov
lock
sbb
lcall
add
repnz
test
sbb
test
pop
push
push
out
rorb
mov
jmp
pop
lret
icebp
adc
repz
push
rcll
in
aas
jg
enter
rcl
andb
rcrb
arpl
imul
popf
cmp
xor
cs
push
sbb
push
incl
fwait
jmp
out
test
repz
cmp
cwtl
cmp
jl
xchg
mov
xor
fsubp
pop
clc
jp
fidivrs
cld
push
mov
cli
mov
aaa
add
push
cmp
imul
mov
out
mov
xchg
fcoml
inc
scas
je
fadd
inc
movsb
cmp
es
fcom
out
fstl
pushf
jne
mov
inc
xorl
dec
scas
xchg
jb
push
in
cmc
jl
cmp
movb
mov
pop
mov
ljmp
sub
stos
sub
xchg
or
aam
idivl
hlt
dec
adc
rcrb
arpl
mov
jecxz
cmp
int3
imul
clc
int
fisubl
int3
push
out
mov
outsl
xchg
dec
xor
jne
popa
addb
fidivrs
cld
inc
out
and
add
pop
lods
test
int
gs
int
int3
imul
clc
int
xchg
movsl
std
mov
push
popa
test
sub
xor
dec
lret
mov
xor
mov
lret
lahf
ret
or
dec
mov
adc
inc
fdivrl
xchg
ljmp
push
adcl
cmp
add
mov
fs
xchg
lahf
adc
dec
sub
inc
loope
jns
leave
imul
fsubrp
ljmp
out
bound
icebp
lret
in
adc
lret
sub
ret
fmul
sub
xchg
and
push
push
andb
aas
sub
daa
cmc
adc
mov
sub
cmp
aaa
and
xchg
nop
pop
jp
jmp
xlat
mov
fsubrp
ljmp
cmpsb
xor
out
xchg
aam
rol
pop
lds
or
xchg
xchg
adc
mov
add
mov
or
add
inc
adc
ffreep
mov
inc
dec
divb
xchg
loope
ljmp
push
push
rorl
push
pop
adc
outsl
push
pop
mov
mov
cmc
stc
xchg
inc
jno
hlt
cmpsb
mov
iret
inc
jmp
push
dec
dec
jns
out
or
pushf
ja
dec
xchg
xor
cmpsl
js
mov
cmp
call
shll
mov
out
adc
imul
mov
int3
xchg
lods
push
mov
in
push
movaps
out
adc
inc
cld
in
push
mov
shll
repnz
rcll
orb
xchg
orb
jmp
xor
xorl
push
sbb
stos
dec
jp
sub
vsubpd
or
dec
inc
mov
das
rcrl
jl
mov
inc
fistl
enter
pop
fcom
into
adc
and
xchg
cltd
lahf
lcall
lods
pop
inc
adc
cmp
sub
dec
mov
int3
cmp
pop
ret
imul
push
xchg
in
test
imul
or
and
stc
jb
xchg
cmp
ljmp
aaa
push
loope
stos
je
lds
stos
test
pop
mov
ret
mov
ds
inc
mov
mov
in
push
cmp
jmp
push
imul
add
adc
jne
pop
leave
mov
sahf
jp
jae
xor
inc
xchg
and
int
push
sub
push
popf
ret
adc
adc
cmp
andl
add
out
aam
rcll
xlat
cltd
les
adc
add
pop
ja
xchg
push
push
lock
jne
in
dec
int3
das
ret
es
dec
mov
jo
inc
fcmovb
hlt
imul
lods
sbb
std
hlt
mov
cs
punpckhbw
stc
xor
mov
push
cmp
or
pushf
pop
inc
mov
ja
push
das
fisttps
jnp
dec
into
inc
loopne
mov
inc
xchg
ja
mov
xlat
inc
mov
inc
mov
push
in
fwait
pop
cmp
shrl
and
std
fldl
xor
sbb
int3
xchg
lock
lret
mov
xchg
movsl
jo
fcomps
or
mov
xchg
inc
cmpsb
sbb
rcrb
add
fidivl
fdivp
lods
movsl
push
sti
imul
jge
or
ds
in
flds
jno
push
or
mov
sbb
mov
xchg
stc
xor
pop
jne
stc
xchg
adc
jl
fsubs
insl
hlt
fistps
mov
pop
repz
stos
es
push
cmp
dec
lret
mov
xchg
sub
pcmpeqd
jecxz
adc
arpl
ljmp
xchg
fiadds
jae
push
jnp
cmp
xor
push
lea
dec
mov
orl
mov
xor
bound
push
addl
sbb
xor
mov
out
pushf
js
pop
mov
mov
imul
cltd
adc
jno
mov
jo
push
sub
pushf
xchg
scas
pushf
pop
push
cmpsl
push
jmp
sbb
inc
hlt
pop
jecxz
cmp
enter
xor
mov
or
lcall
dec
cmpsl
and
dec
lahf
cmp
push
xor
xor
xchg
xchg
cmp
cwtl
nop
jge
loope
inc
and
test
jb
hlt
jbe
jnp
or
xor
stc
repz
add
rcrl
dec
jmp
lods
push
pop
xor
mov
push
pusha
mov
mov
subl
xchg
cmpsl
mov
adc
jge
stos
pushf
roll
xor
lcall
sub
fsubs
sahf
vmovups
mov
mov
jno
pop
xchg
inc
sarl
pushf
sub
sub
mov
xchg
push
fistpl
or
pop
add
mov
add
adc
in
xchg
adc
adc
rcll
sub
outsb
xor
push
or
repz
adc
inc
pop
push
sub
pop
cmp
and
idiv
sar
ficoms
jb
pop
mov
icebp
int
mov
jne
dec
ja
push
popf
ja
enter
jns
clc
inc
and
rcr
negl
insb
iret
cmp
les
push
cmpsl
ret
shl
mov
add
adc
movsb
mov
push
jl
outsb
inc
inc
fs
sub
lahf
enter
loop
mov
outsl
imul
cli
cmpb
cmc
sub
adc
pusha
jmp
cmp
mov
movsb
inc
mov
cwtl
addl
add
cmp
xchg
xor
cltd
xchg
xchg
sahf
adc
fwait
cld
add
shrb
mov
addb
xor
adc
ja
xchg
xchg
add
jns
outsb
jecxz
mov
and
in
and
mov
jge
call
into
ds
sbb
mov
mov
sbb
dec
insb
in
pop
dec
jne
add
sub
sub
cld
repz
pop
in
or
dec
decl
cmc
hlt
jmp
pop
jbe
test
shrl
lds
imul
pop
xchg
imul
inc
mov
aaa
pop
push
insb
in
jp
inc
aam
xchg
shl
cltd
xor
ret
mov
jge
pop
fs
mov
xchg
push
add
push
xor
in
cmpsl
cmc
jle
push
aad
stos
inc
inc
imul
xor
decb
or
subl
sbb
ror
fcompl
xchg
push
testb
cmp
stc
shlb
inc
testl
add
adc
sub
cltd
pop
out
lret
xor
push
dec
mov
imul
inc
je
jg
aas
cltd
push
xor
dec
jl
inc
xlat
cmpsl
pop
xchg
pop
mov
push
xchg
mov
mov
fimuls
jmp
pop
rcrb
mov
outsb
ss
test
push
orl
stos
sbb
movsl
fisttpll
sbb
gs
sub
jp
mov
fadd
inc
stc
push
xor
movsl
clc
adc
cmpsb
ret
dec
pop
push
mull
and
mov
push
jno
xor
pop
xor
enter
shll
cli
enter
leave
inc
jmp
pop
sbb
pop
xchg
stos
loop
dec
sbb
dec
je
in
addr16
rclb
pop
ja
jmp
mov
push
cld
xchg
push
add
or
push
fs
sbb
les
and
decl
pop
and
rcrl
daa
lea
insb
or
shr
sbb
inc
mov
jns
mov
aaa
add
or
clc
dec
das
add
not
xchg
sbb
pop
call
cmp
cmp
dec
aas
and
cmpsl
dec
ss
pop
adc
inc
add
pop
cli
fisubs
and
imul
jl
ret
sub
sbb
hlt
int3
mov
mov
pop
out
shlb
xor
mov
jns
sub
adc
call
pop
in
es
adc
and
jbe
les
adc
adc
in
add
test
xchg
jg
rcr
inc
inc
sahf
sbb
sub
ja
inc
daa
lret
es
jl
pusha
mov
xor
enter
sbb
xchg
popa
sbb
test
inc
outsl
cld
mov
cmp
xchg
push
jo
adc
jg
or
dec
jae
mov
mov
sbb
imul
jae
lahf
xor
adc
push
sbb
mov
fidivrs
data16
subb
inc
jp
jnp
or
fistl
xchg
pop
enter
mov
sbbl
frstor
xor
movsl
test
add
aas
cmp
mov
inc
fs
fiadds
stos
mov
data16
pusha
mov
xor
sub
jmp
jo
mov
lret
fstp
out
add
push
dec
jnp
lcall
sbb
xor
popa
test
shrl
or
test
call
shlb
repz
lcall
mov
movsl
add
or
inc
jbe
jg
les
xchg
fdivl
mov
adc
in
loopne,pt
xor
popf
rcrb
inc
jo
les
xor
insl
inc
mov
gs
push
movb
mov
shll
or
cmp
ljmp
sarb
ds
mov
and
or
js
or
mov
movsb
mov
rcll
bound
sbb
bound
mov
push
negl
sub
mov
cmpsb
mov
loope
stos
and
and
rcl
arpl
cmp
sar
sti
push
out
js
mov
push
add
and
mov
aad
mov
cmpsb
cwtl
xor
out
xchg
pop
xchg
lcall
inc
shl
iret
lea
cmp
jbe
jge
adc
mov
adc
xchg
xor
xchg
dec
adc
movsl
fsubl
jnp
arpl
call
lcall
shrl
xor
sbb
inc
dec
sahf
mov
push
jecxz
inc
sahf
sti
in
es
xlat
pop
cmp
xor
or
popf
pop
mov
mov
int
jnp
jno
gs
in
rorl
sub
mov
sub
jne
xchg
xorl
in
pop
loopne
mov
sub
sub
cmc
std
imul
pop
adc
sub
jae
out
loop
mov
fisubs
scas
mov
push
mov
inc
movsl
and
icebp
addr16
mov
repz
inc
outsl
xchg
cs
push
imul
stc
dec
ret
nop
jo
jae
add
push
pop
dec
jg
xchg
aam
add
adc
mov
lea
shlb
pop
cmp
or
mov
sub
jle
xchg
enter
or
or
ret
dec
pop
imul
addr16
lcall
mov
loopne
movsl
sub
int3
in
pushf
insl
outsl
loop
push
push
mov
sbb
and
lock
pusha
je
push
psraw
push
clc
add
ret
iret
or
pop
leave
cmp
dec
cmp
jle
dec
dec
sub
push
sub
xchg
mov
mov
mov
mov
cld
mov
mov
mov
fldcw
fwait
mov
rcrb
adc
loop
push
les
les
nop
mov
xchg
or
jp
arpl
mov
cmp
adc
icebp
mov
inc
mov
cmpb
je
sbb
add
sub
jle
xchg
js
arpl
jbe
outsb
loopne
add
or
inc
jno,pt
imull
mov
jo
pusha
mov
mov
lods
outsb
adc
xchg
add
lds
jo
and
stos
sub
and
unpcklps
xor
jbe
sbb
jecxz
xor
and
dec
xlat
and
inc
cmp
inc
jg
cmp
cmp
mov
cmp
add
mulb
pop
xchg
mov
dec
addr16
dec
push
ss
out
int
jae
lcall
cmp
cli
repnz
jmp
inc
push
push
push
lret
pop
jl
adc
fistps
out
stos
lea
clc
jecxz
enter
sbb
test
sbb
pop
sbb
inc
fisttpl
or
hlt
sti
std
dec
push
int3
icebp
jp
imul
jnp
and
out
mov
hlt
mov
rolb
les
rolb
gs
imul
add
subl
imul
inc
pop
shll
js
cmp
sub
xchg
mov
or
pop
cmp
add
iret
xchg
mov
add
movsl
into
adc
add
dec
mov
or
pop
and
dec
stos
js
and
scas
inc
mov
ds
lea
jle
xor
stos
shll
mov
ss
ret
jo
push
popf
movsl
aad
mov
inc
aaa
adc
pop
mov
repz
push
mov
imul
sub
outsl
scas
sbb
mov
jle
popa
repz
int
insb
sbb
fisubrl
pop
das
enter
xor
je
xchg
fldenv
push
das
pop
xor
fs
and
xor
pop
lods
aam
movl
js
sbb
sub
mov
dec
push
cmp
pop
into
inc
xchg
sbb
sbb
mov
das
aad
outsl
adc
fdivrs
lea
xlat
inc
adc
pop
and
sarl
push
das
sbb
ja
pop
or
loopne
leave
adcl
jmp
mov
sub
gs
jnp
fists
dec
fcmovbe
rolb
test
mov
clc
inc
add
iret
out
aaa
repnz
xchg
fdivrl
jmp
cmp
inc
pop
fistpll
add
dec
xor
jb
mov
dec
push
pop
lock
call
and
hlt
mov
push
or
adc
addl
ret
ja
xor
test
lds
push
push
mov
incl
xor
cld
inc
jnp
pop
cmp
cmp
inc
sar
add
or
mov
data16
mov
inc
sub
fildll
xchg
cmp
sub
fstl
cwtl
fs
into
mov
pop
dec
add
imulb
jnp
mov
je
dec
lds
js
and
cmp
adc
ret
shll
jae
test
jbe
cmp
sub
loopne
test
pop
loopne
je
mov
mov
mov
jnp
bound
fs
mov
push
mov
cmp
lahf
cmp
jne
add
mov
mov
adc
sub
ds
jb
mov
pop
pushf
push
inc
inc
add
add
xor
aaa
aaa
cmp
add
add
add
add
add
mov
add
fnstenv
or
pop
push
mov
std
mov
in
inc
ss
movsl
hlt
mov
adc
jbe
shll
mul
push
mov
outsl
sbb
sub
popa
mov
flds
cmp
ds
sahf
push
or
or
lods
cmp
hlt
fldcw
ret
sbb
in
and
sub
cmp
jg
pop
cli
loope
push
bndstx
gs
lock
gs
mov
imul
push
push
inc
mov
lahf
mov
jo
mov
mov
xchg
loop
clc
mov
stos
fs
out
filds
pop
clc
das
into
dec
insb
mov
fisttpl
sub
mov
inc
jl
cmp
jmp
jne
mov
cmp
mov
pop
pop
cwtl
arpl
test
mov
out
ficompl
jl
mov
inc
bound
push
jb
pop
mov
hlt
repnz
imul
shl
xchg
jge
sbb
clc
nop
pop
cli
jmp
mov
es
stos
sbb
pop
or
mov
mov
lret
sub
stc
lcall
adc
inc
rcrb
mov
arpl
loopne
sbb
fwait
xchg
dec
sti
ret
pop
bound
dec
jno
xor
sarl
push
test
into
dec
pop
pop
jno
js
dec
movsb
xlat
jge
push
xor
lret
ljmp
movb
pop
pushf
and
xor
pop
sbb
cmpsl
xor
or
or
leave
pop
cmpsl
dec
mov
in
push
push
sub
xchg
push
out
pop
fisubs
mov
jecxz
xor
shlb
pop
jns,pt
mov
cwtl
int
xchg
jno
pushf
out
sbb
adc
out
jne
les
shl
push
dec
fidivs
sbb
mov
fnstenv
daa
call
pop
mov
dec
lea
push
mov
add
adc
push
cmp
ss
sahf
in
leave
out
daa
imul
sahf
xchg
xor
decl
jo
xor
pop
orl
xor
lret
nop
xor
inc
adc
lock
ds
lret
cmp
mov
pop
lods
sub
lcallw
mov
scas
enter
and
push
xchg
pop
pop
rcll
mul
jmp
test
cs
mov
les
push
add
into
jge
insl
add
xchg
in
mov
out
dec
and
xchg
mov
xor
lret
mov
or
adc
push
jmp
fisubrs
loopne
mov
and
xchg
add
ffreep
fwait
push
popf
aas
or
mov
adc
xchg
inc
mov
paddq
fidivrs
xchg
pop
jmp
fsubp
gs
dec
mov
lcall
ret
sub
add
hlt
in
imul
push
test
cmp
mov
or
into
sub
jnp
ds
lcall
lock
adcl
pushl
call
push
pop
xor
outsb
cmc
imul
outsl
and
fistpll
push
mov
add
mov
std
stos
push
inc
scas
mov
es
fdivrl
adc
mov
les
pop
lcall
xor
xor
and
scas
aam
jmp
sub
and
int3
stc
pop
test
out
jg
testl
xor
cmp
rol
insl
in
mov
leave
inc
jns
push
insb
test
rorl
int
xchg
ror
xlat
xchg
jge
pusha
or
sub
lret
mov
ljmp
dec
pop
inc
shrb
into
pop
mov
xlat
out
inc
inc
aam
push
sbb
cmp
nop
mov
jno
scas
div
lds
pushf
ljmp
test
pushf
cmp
stc
inc
ss
adc
inc
add
or
in
push
push
cmp
mov
mov
sub
int
mov
cmpsb
sub
sbb
dec
ss
cld
mov
or
cmp
cmp
mov
cmp
dec
loopne
xchg
push
or
or
add
pop
and
jg
jnp
pop
jno
cmp
jge
les
inc
mov
rorl
ss
pop
in
sbb
mov
cmpsl
pushf
or
pop
xchg
pop
jne
sub
add
lock
cmpsl
cmpsl
pop
filds
jmp
fwait
aam
push
inc
or
outsb
mov
fisubs
push
inc
sub
or
mov
xchg
push
nop
lcall
mov
sbb
pop
inc
repz
jbe
dec
mov
and
jecxz
cmp
cmp
adc
fs
loopne
pop
dec
push
ret
sbb
std
xlat
mov
test
mov
push
in
xor
stos
mov
add
fidivs
cmc
sbb
in
addb
dec
pand
out
stos
xor
pop
push
mov
ficoms
fs
leave
movmskps
out
lahf
inc
test
lea
aaa
and
sbb
xorl
fisttpll
adc
pop
enter
push
ja
dec
lret
fstl
inc
mov
adc
insb
lret
sub
xor
inc
das
and
dec
sbb
pop
xor
sub
test
or
icebp
inc
jne
imul
dec
add
fbstp
xchg
fadds
aas
std
and
repnz
cmp
push
xchg
mov
jae
push
leave
pop
xchg
es
dec
rol
or
test
sbb
push
lret
push
pop
aam
add
cltd
mov
movsl
popf
dec
sti
jmp
sbb
gs
jmp
xor
adc
mov
fcomp
dec
lods
push
shr
mov
push
dec
pop
cltd
stos
cltd
adc
xchg
pop
mov
fistpll
shll
mov
int
pop
push
push
push
test
cmpb
aaa
bound
jg
pusha
rorb
arpl
mov
mov
in
dec
pop
in
in
mov
cmp
out
cltd
push
mov
add
ljmp
stos
jns
movsl
setnp
fisttpl
mov
or
shll
dec
cmp
jne
iret
pop
or
xchg
jo
pop
in
aas
leave
fstl
iret
pop
mov
xor
aam
jle
shll
aam
inc
lret
cmp
cmp
aas
add
test
test
daa
addr16
dec
mov
iret
fidivrl
mov
les
inc
jno
popf
jnp
das
div
mov
mov
test
popa
mov
sbb
ret
fwait
mov
std
imul
jle
dec
cmpb
movsb
dec
sbb
adc
mov
push
sub
insl
imul
cmc
fwait
iret
push
mov
mov
sbbl
add
sub
loopne
add
in
movsb
mov
cmp
clc
inc
mov
push
into
inc
cld
fldl
mov
jp
leave
stos
push
test
pop
pop
scas
sbb
cld
js
or
int3
sbbl
sub
cmp
test
push
fcoml
mov
into
inc
xchg
jae
adc
subb
dec
stc
cli
jnp
cmp
stos
arpl
mov
shrl
repz
iret
cli
sub
mov
adc
jmp
or
dec
xchg
mov
and
pushf
adc
stos
pop
out
pop
jmp
int
jne
sub
or
and
add
push
cmpsb
mov
shl
in
push
push
xchg
pop
movsl
jo
cmp
stc
dec
aaa
mov
jno
push
sbbb
rclb
mov
fildl
dec
mov
adc
add
shll
cmpsl
es
push
dec
or
movsb
ret
pushf
jle
ret
mov
mov
divl
and
aas
inc
mov
xor
std
sbb
popa
cmp
push
rcrb
lcall
aas
xchg
addl
aam
jmp
jnp
sbb
and
add
int
loop
mov
mov
lock
shlb
adc
mov
enter
lcall
test
cld
sarl
mov
cmpsb
push
mov
jo
push
pop
sbb
pop
imul
xchg
into
mov
imul
mov
pop
enter
sbb
lret
sub
push
arpl
xor
and
sub
jnp
mov
pop
xchg
mov
dec
lods
or
sti
mov
clc
popf
inc
pop
mov
les
in
inc
iret
lods
xor
xchg
les
mov
repz
repz
xchg
insl
fmuls
fisubrs
mov
cltd
or
dec
dec
lock
or
push
pusha
push
mov
pop
dec
stc
mov
adc
jo
fsubl
fdivrs
mov
adc
push
mov
or
fistpll
cmp
sbb
push
arpl
cli
popa
add
dec
mov
sbb
cmp
enter
or
sbb
je
jle
aam
fwait
imul
mov
jbe
imul
jns
fwait
mov
ret
daa
clc
xchg
hlt
jle
or
xchg
lahf
dec
pop
mov
cmp
jg
mov
andb
dec
addr16
add
ljmp
das
movsb
aam
aad
xchg
pop
sbb
dec
addr16
lock
pusha
sub
lcall
incl
mov
stos
sbb
hlt
call
adc
add
leave
fdivrl
adc
sub
inc
add
inc
divl
out
lea
cld
mov
pop
negl
pop
insl
loopne
pop
sub
clc
loopne
loopne
sarb
pop
fnstsw
inc
push
dec
push
xor
add
pop
mov
and
dec
icebp
xchg
ds
push
test
mov
pop
push
int3
aam
scas
rcl
ja
cmp
xor
mov
iret
pop
jns
push
enter
pusha
mov
xchg
dec
stos
ljmp
call
or
add
lret
cmpsl
nop
not
sar
imul
aam
mov
insb
cmpsb
leave
mov
decl
mov
push
jmp
mov
and
push
fbstp
sub
test
test
mov
leave
xor
inc
loope
xchg
aaa
mov
adc
out
aaa
add
fnstsw
dec
xorl
out
out
xlat
jno
orb
dec
xchg
jnp
fs
aaa
jbe
testb
dec
pop
xor
fimuls
stc
dec
cltd
add
outsl
cmp
or
bound
push
stos
fsubr
ret
jg
pop
test
jne
std
hlt
jne
in
jne
out
mov
sub
dec
roll
sub
add
mov
push
je
pop
cwtl
or
sub
pop
push
stc
push
mov
xlat
adc
cmc
or
add
jmp
cli
ss
cld
iret
popl
lret
mov
cli
je
ljmp
popa
mov
sahf
xor
or
in
xchg
mov
pop
or
sub
dec
adc
ljmp
sbb
mov
outsl
xor
add
pop
pop
adc
xchg
aad
xor
into
iret
rcrl
xchg
lcall
jo
sbb
sbb
mov
test
or
sub
jnp
adc
sbb
mov
lret
inc
mov
pmaxub
add
or
xor
icebp
or
cmp
xchg
repz
fsubrl
rcrl
cli
imul
stc
mov
or
out
outsb
repz
sbb
enter
sahf
add
mov
cmpl
fsubs
roll
nop
arpl
data16
and
das
adc
mov
subb
jg
sahf
lds
cmpsb
scas
insb
ss
sub
jnp
mov
sbb
dec
lcall
adc
dec
sub
inc
jb
add
fs
stc
divb
cmp
popa
mov
or
jle
add
mov
adc
in
test
sub
daa
pop
xchg
add
sbb
mov
cmc
mov
popf
push
adc
push
or
xchg
and
pop
add
dec
mov
loope
into
push
sahf
mov
es
loopne
lcall
cmpsl
and
adc
rolb
inc
inc
push
outsl
xchg
xlat
mov
jno
sbb
ss
jge
mov
iret
sub
mov
stos
push
cmp
xchg
test
out
rcrl
lret
or
push
movsl
cmp
fs
push
mov
fstps
mov
jno
mov
and
repnz
mov
xor
push
mov
sbb
sub
push
notb
xchg
xchg
lods
scas
add
cli
je
stos
xor
cmp
rorl
jge
and
inc
mov
cwtl
sbb
xor
ss
repnz
cmpsb
loopne
adc
in
adc
mov
addb
mov
pop
insl
arpl
movsb
add
aad
cmp
lea
jg
sbb
aad
jne
aaa
outsb
pushfw
je,pn
pusha
mov
es
stc
dec
pop
orb
rclb
subb
fldcw
jge
prefetch
dec
leave
inc
push
or
rolb
cltd
sahf
icebp
sbb
lock
je
lret
sub
outsl
xor
mov
cld
test
lcall
push
out
sahf
pop
and
sarb
adc
push
push
shll
sbb
mov
cmp
lea
ficoml
ljmp
aaa
jg
outsl
mov
out
xor
adc
xor
or
adc
jns
mov
jp
cmpsl
mov
addr16
xlat
dec
jbe
fwait
sbb
jmp
sub
in
push
loopne
mov
stos
sub
mov
jmp
jecxz
xchg
std
pop
cmp
stos
jmp
outsl
inc
sbb
insb
mov
sti
inc
dec
sub
xchg
pop
loope
jae
aaa
or
dec
rolb
lret
push
push
xchg
movsb
adc
adc
sbb
ljmp
leave
sub
shlb
cmc
inc
gs
inc
mov
mov
xchg
jp
aaa
jmp
hlt
call
mov
xor
out
jl
jae
icebp
ja
adc
lahf
js
add
int3
mov
pop
lret
dec
daa
std
out
pop
inc
xor
aas
jl
push
out
iret
push
pop
daa
lock
mov
inc
ds
sub
push
sahf
das
add
ja
stos
lahf
std
lods
sub
cmp
mov
or
insb
aad
lea
mov
data16
sbb
cmpsb
jnp
mov
xor
dec
pop
aad
lcall
or
lret
repz
mov
jmp
fsubr
cmp
xor
mov
xor
sbb
stos
adc
insl
mov
mov
mov
pushf
jp
add
sub
jb
ficoml
dec
fimull
arpl
add
sub
outsl
imul
xor
stc
ss
lds
out
orb
push
push
imul
cmp
icebp
push
push
xchg
loope
mov
imul
ret
je
pop
loopne
loopne
mov
fdiv
cwtl
cwtl
cld
pop
xchg
fs
push
scas
push
mov
dec
gs
mov
dec
ret
xor
lods
mov
pop
add
mov
pmaxsw
add
rorb
icebp
xor
aaa
xor
mov
fwait
sub
xor
das
lock
and
xor
mov
sub
std
push
jne
aaa
iret
in
add
fs
loope
pop
mov
hlt
mov
push
mov
mov
xchg
imul
pop
lock
xchg
insb
pop
pop
insb
xchg
or
mov
add
int
int3
adc
inc
lods
xchg
roll
shl
inc
sbb
aam
or
add
pusha
ds
dec
mov
adc
and
in
frstpm(287
dec
xor
add
dec
mov
enter
jge
pop
xor
iret
xor
jb
inc
dec
hlt
insb
pop
dec
outsb
dec
popa
lods
jl
sbbb
jp
xchg
int
mov
push
or
inc
jp
lods
clc
or
sub
cs
mov
scas
std
movsl
arpl
cwtl
ja
nop
filds
shlb
push
jne
out
test
dec
push
push
add
dec
addr16
mov
jae
cmp
outsb
sub
loopne
outsb
lret
mov
movsb
sbb
loop
test
les
push
jns
cwtl
mov
decl
scas
loop
push
insb
add
lods
and
nop
mov
sbb
push
les
mul
pop
loope
and
mov
add
in
jge
pop
xlat
dec
popf
lds
test
in
inc
pusha
mov
lock
mov
push
loopne
mov
insl
aad
sahf
xchg
aad
ret
sbbl
scas
movsl
shlb
or
or
add
pop
pushf
mov
fsubl
push
clc
pop
out
xchg
inc
adc
fisttps
imul
out
aad
sbb
sti
jo
je
in
loope
fdivrp
cwtl
mov
mov
scas
mov
mov
lods
out
push
xchg
enter
imulb
ja
dec
outsl
jae
cmp
adc
mov
filds
add
and
arpl
icebp
arpl
loop
ss
aas
jns
mov
ja
xchg
push
ficompl
and
dec
pop
cs
std
addb
nop
aam
mov
xchg
jne
inc
sti
call
jne
mov
cltd
stc
and
pop
lods
cmpsl
loopne
arpl
imul
sub
adc
pop
inc
xor
je
or
sbb
int
and
iret
pop
inc
cmp
add
fcompp
loop
mov
push
xchg
mov
jbe
adc
jg
fbstp
inc
aad
dec
xor
adc
adc
pop
xchg
sub
sar
add
inc
fstpt
jp
outsl
out
lods
mov
test
cmc
int
setl
mov
shl
cmpsb
scas
mov
push
jecxz
push
lret
dec
sbb
outsb
nop
lret
mov
dec
daa
rorl
adc
mov
js
inc
test
adc
adc
out
and
mov
cwtl
lcall
mov
addl
or
sbb
or
sbb
adc
enter
xchg
loop
pop
lds
cs
or
imulb
aam
push
dec
mov
aaa
mov
xchg
push
ljmp
or
inc
lret
out
lock
decl
mov
and
out
stos
lea
sbbl
dec
add
lods
pop
sarl
insb
mov
sar
pusha
notl
shlb
in
push
xchg
jae
dec
cmpsl
mov
jmp
ja
mov
mov
nop
cli
jne
popf
jg
jge
stc
mov
sub
xor
push
enter
xchg
sahf
add
dec
fwait
lahf
jne
icebp
roll
add
mov
ds
mov
negl
jp
mov
es
aad
int3
es
cmpsl
addr16
dec
jmp
stc
jle
and
mov
test
push
and
in
adc
cmp
dec
lcall
mov
and
cmpsb
dec
mov
fs
test
rol
xchg
loopne
xlat
sub
imul
dec
movsb
add
mov
jmp
call
dec
mov
push
mov
jo
cmp
mov
mov
insl
test
push
repz
mov
ret
lret
jmp
stos
pop
sub
xchg
shrb
into
cmpsb
and
pop
inc
out
inc
inc
stos
push
mov
fsubrl
mov
ljmp
lea
loope
sarb
mov
test
jnp
aad
cmp
xchg
ja
xchg
or
ja
mov
push
arpl
or
sbb
inc
leave
std
inc
and
inc
int
push
cmp
inc
mov
movsb
push
or
add
cltd
xchg
lcall
hlt
adc
mov
jo
dec
adc
fwait
push
fabs
sub
push
mov
cmp
ret
and
mov
push
jae
adc
daa
test
scas
pop
adc
shlb
push
pusha
ror
cs
test
sub
dec
mov
movsl
mov
js
rcrb
cmp
inc
mov
sub
mov
adc
pop
test
push
movb
adc
loopne
imul
or
repnz
movsl
xor
fs
jbe
mov
xchg
jno
lcall
lea
aaa
aam
jb
lret
lods
aas
lcall
push
mov
push
jns
dec
sahf
mov
shll
add
pop
inc
pusha
mov
pop
daa
xchg
xchg
sbb
lock
sub
inc
imul
sbb
out
xchg
pop
in
nop
sub
call
out
sbb
mov
popf
cltd
or
clc
movsl
mov
les
adc
stos
shrl
mov
notl
dec
or
lcall
jmp
out
sahf
push
cld
out
sub
sbbb
hlt
fwait
push
scas
loop
jge
mov
push
add
and
pop
adc
push
push
roll
rorb
les
add
ss
dec
jmp
or
adc
ret
hlt
jge
insb
and
js
mov
pushf
xchg
in
push
jecxz
mov
xchg
sti
xor
dec
loop
imul
inc
movsb
pop
mov
xorb
cmc
repz
mov
std
into
call
and
or
movsl
push
int3
fwait
stos
or
imul
gs
dec
sub
aad
daa
xchg
push
adc
mov
aaa
fstps
push
imul
out
jb
js
and
adc
mov
adc
xor
inc
test
pop
and
pusha
add
xchg
rclb
cmp
dec
out
pop
adc
mov
repnz
sti
dec
cmp
pop
out
adc
andb
cs
sub
sbb
les
jnp
pop
mov
cltd
test
push
shll
mov
std
pop
mov
mov
xchg
enter
mov
data16
adc
adc
xchg
or
push
sbb
pop
pop
and
jnp
cmp
out
fwait
sbb
fldt
or
cltd
add
fwait
int
add
repnz
icebp
add
xor
mov
test
mov
leave
cmc
mov
fucom
jns
sub
pop
add
mov
pop
xchg
lcall
mov
mov
jg
addr16
push
xchg
sbb
fcomp
test
sub
aas
rcrb
lock
cmpsb
enter
xchg
push
push
cs
pop
jp
add
adcb
mov
inc
add
test
imul
sbb
jle
fiaddl
loop
xchg
adc
jb
ret
xchg
mov
push
dec
xchg
pop
ret
aam
movsb
mov
cmp
sub
dec
ret
and
push
mov
ror
mov
mov
inc
sbb
inc
rcl
rol
lds
add
mov
ret
inc
mov
push
hlt
sub
add
sub
jmp
fwait
jecxz
pop
mov
cwtl
shl
jb
dec
jo
lock
outsb
push
or
push
adc
out
cmp
sti
dec
adc
mov
or
ret
andb
cs
mov
xchg
mov
out
push
mov
or
sub
pusha
mov
fnstenv
rcll
push
or
mov
mov
jo
mov
into
cmp
insl
sub
adc
insb
loopne
push
outsb
mov
arpl
lahf
pushf
push
ds
and
cmc
sbb
fnstenv
loopne
mov
std
push
into
mov
test
jnp
repnz
icebp
add
xor
jp
decl
iret
push
push
js
jne
leave
cmc
mov
jnp
jmp
pop
mov
pop
sti
and
jae
mov
inc
xor
fisttpll
enter
nop
into
pop
rcl
sbb
pop
bound
cmp
push
cltd
jg
jo
insl
ljmp
mov
xchg
add
dec
mov
lret
in
pop
adc
xor
push
bound
jle
rclb
in
xchg
sbb
idivl
fldcw
ret
aam
movsb
mov
test
ret
and
push
mov
inc
pop
push
mov
push
pop
test
scas
mov
jmp
out
das
sti
jge
pushf
shrb
sbb
jo
sbb
xor
dec
clc
xor
sahf
pushf
insl
gs
cmp
mov
ret
imul
xor
inc
xchg
jae
push
icebp
push
or
test
cmp
sti
dec
jo
dec
imul
ret
andb
cs
cltd
cli
sub
out
push
mov
or
adc
imul
into
aas
xchg
test
scas
or
ret
and
fcomp
push
or
lret
sub
lods
insl
sub
dec
movsb
call
mov
dec
adc
ss
mov
inc
out
and
pop
fdivl
sar
out
leave
insl
inc
push
xchg
and
mov
icebp
add
xor
and
lcall
imul
test
sub
pop
add
mov
pop
repnz
ss
push
pmulhuw
mov
iret
mov
icebp
xorl
cmpsl
cmp
sub
sub
lcall
hlt
imul
test
mov
test
aam
xchg
call
scas
pop
je
popa
movsb
out
dec
imul
outsb
sti
xchg
outsl
roll
adc
jb
ret
xchg
jbe
mov
mov
lcall
dec
mov
mov
arpl
movsb
inc
flds
xchg
jle
sarl
add
cmp
dec
and
das
repnz
mov
push
xchg
sbbl
not
loop
cmp
out
mov
dec
lret
jp
adc
call
or
xlat
lahf
sbb
mov
ret
cmp
pop
inc
int
pop
xchg
push
sbb
clc
dec
movsl
dec
jge
push
push
aas
sub
outsl
xchg
pop
push
and
jnp
sub
and
mov
clc
js
push
add
sub
jbe
pop
adc
scas
mov
daa
sub
pop
inc
xlat
sub
sti
jmp
mov
mov
lock
mov
popf
es
inc
xchg
insb
push
add
icebp
xchg
insl
push
fsts
pop
loop
xor
mov
popf
push
cwtl
add
es
pop
jnp
sub
mov
cmp
sarl
mov
cli
out
das
daa
jecxz
adc
jae
out
add
adc
xor
mov
fdivs
inc
sub
les
orb
shrl
movsl
push
loope
jg
arpl
sub
jb
pop
pop
mov
imul
faddl
repnz
aaa
sbb
in
cmc
xor
sbbb
sbbb
jns
es
jb
cmp
mov
int
movsl
subl
bound
pop
daa
pop
jmp
push
into
clc
push
shrb
fs
call
stc
into
push
or
data16
into
fsts
pop
outsl
sahf
adc
push
sti
cmpsl
pusha
xor
or
push
aas
pusha
xor
xor
lds
sub
arpl
ds
add
or
mov
xlat
sbbl
movsl
mov
movsb
hlt
push
push
xchg
sub
and
sub
lock
outsb
insb
sub
nop
mov
dec
jbe
xlat
mov
mov
fisubs
gs
fs
xor
mov
adc
push
fldl
clc
xor
dec
fisubrs
fmulp
loope
lahf
in
sahf
adc
dec
dec
inc
jl
insl
ret
in
pop
jle
das
mov
mov
fwait
sahf
pop
lahf
xor
dec
in
and
je
and
inc
sub
mov
mov
push
xchg
dec
ss
cli
fcoml
mov
jmp
das
inc
sbb
cmp
sbb
cmc
or
cmc
or
negb
out
push
push
hlt
push
outsl
in
push
xchg
jle
insl
test
out
or
cmpsb
loopne
cwtl
xor
pop
das
push
inc
sti
fmuls
sarb
stos
xor
xor
adc
push
rclb
pop
jne
cmc
out
pop
repz
cmp
jae
cmp
call
movsb
jnp
mov
jg
shl
fdivs
in
and
je
and
inc
sub
xchg
out
lcall
ficomps
scas
xor
fwait
pop
jle
push
lahf
ret
xor
out
push
shl
lods
lret
sub
add
pop
jne
cmc
out
mov
xorl
arpl
pop
jp
adc
add
fsubrs
cmp
aam
mov
xor
std
xor
mov
jle
mov
fnstcw
add
ds
jecxz
lret
inc
pop
test
dec
enter
out
imul
jno
popf
xchg
cmp
pop
aaa
lods
push
es
xor
jae
das
out
sub
popf
icebp
add
sub
arpl
jg
mov
mov
fldl
test
mov
jp
dec
insb
lcall
out
mov
adc
xchg
cli
mov
ret
repnz
xchg
or
xchg
test
aad
sbb
addb
gs
or
test
test
mov
fdivrs
cmc
cld
dec
rclb
dec
inc
sub
mov
mov
dec
sbb
insb
cwtl
or
fdivp
daa
fsubl
lock
nop
ds
and
jae
fadds
pop
mov
cmpsb
mov
ss
xor
and
in
and
je
sub
shrl
movd
inc
and
push
je
mov
icebp
fwait
push
in
scas
push
nop
jo
arpl
test
mov
fdivrs
cmc
cld
dec
rclb
loope
mov
or
cmc
push
loopne
stos
or
or
jecxz
jae
fcoms
int
out
inc
loope
insl
sbb
cld
cmp
sahf
int3
xor
and
sbb
sub
push
mov
push
mov
dec
cmp
push
add
jge
jb
xchg
outsb
movsb
xlat
fsubl
lret
jmp
dec
lcall
ret
mov
jmp
or
inc
mov
dec
gs
leave
std
adcl
cmp
inc
cmp
pop
jne
stc
push
stos
push
bound
jne
mov
sub
iret
add
cs
lea
xchg
pop
icebp
sub
loope
or
cmp
cmp
and
jl
rolb
push
or
mov
sub
lods
jg
aas
pop
mov
mov
shlb
xchg
cmp
mov
call
cmp
insb
ror
xchg
stc
xor
pop
jne
stc
das
shrb
xchg
loop
call
es
sbb
adc
jle
add
enter
xor
into
or
pop
pop
dec
ret
mov
aam
aas
mov
sbb
dec
and
mov
loopne
into
fldl
imul
sbb
xor
mov
lds
out
int
dec
outsl
stos
ds
and
test
xlat
xchg
add
subl
ds
pop
dec
mov
add
sbb
jbe
daa
sub
adcb
mov
adcb
push
inc
outsb
inc
into
loopne
add
sbb
shlb
pop
in
jl
fcmove
leave
cmp
mov
sahf
hlt
loope
std
lds
filds
xchg
add
aad
hlt
mov
dec
int3
and
inc
mov
inc
out
cmc
xchg
fsubrl
sbb
adc
fsubrp
and
scas
cmp
dec
pop
mov
cwtl
imul
imul
sbb
es
push
or
jle
dec
icebp
popa
push
jp
out
push
andl
xor
and
inc
ljmp
call
fildll
cmp
or
sbb
sbb
lret
cmp
mov
cld
pop
rol
push
inc
mov
repz
stos
shrl
pop
or
out
push
pop
cld
adc
or
pop
add
rolb
ret
and
mov
imull
int3
xchg
imul
or
inc
inc
jno
xor
es
mov
inc
inc
mov
or
mov
xchg
sub
push
inc
xchg
xchg
jae
jmp
jecxz
js
sbb
inc
xor
les
xchg
inc
cmp
sbb
push
es
fistps
pop
ja
cli
jmp
inc
adcl
inc
dec
jnp
mov
and
fucomi
jmp
push
outsl
xor
and
jne
xor
sbb
loopne
movl
outsb
adc
repnz
push
imul
xor
in
rol
and
mov
mov
call
dec
mov
cltd
mov
mov
cld
shlb
xchg
js
sbb
jae
dec
inc
xor
xor
mov
rcl
jo
int3
sub
dec
lcall
pop
clc
loopne
aas
mov
dec
out
stos
mov
cs
in
pop
push
xor
pop
orb
out
sbb
jb
dec
jo
mov
dec
and
cmp
push
dec
sbb
jne
jne
jnp
add
pop
add
fcmove
mov
loop
cmp
nop
fstpt
stc
mov
jmp
xchg
mov
ja
add
cmpsl
or
jns
mov
addl
insb
mov
mov
add
sbb
iret
stos
xchg
pop
aaa
and
or
push
repz
fs
lret
cmp
es
icebp
xor
mov
cmp
push
cmp
movsb
call
data16
sahf
mov
mov
push
mov
mov
mov
mov
ja
andb
scas
push
mov
int
mov
and
arpl
inc
or
bound
nop
out
int
cmp
lea
jp
sub
dec
sub
arpl
cltd
adc
fisttpll
popf
add
out
and
loope
fistpll
xor
sub
and
lods
add
stos
jge
mov
sub
add
loope
xor
pop
jp
sahf
faddl
and
jecxz
sbb
cld
and
dec
sbb
rclb
mov
insb
sub
cld
jle
adc
popf
and
sbb
shl
rolb
in
jp
into
cmc
xchg
lcall
mov
mov
shlb
and
xchg
jl
addr16
pop
addl
std
imull
add
cli
xor
xchg
andb
cwtl
orl
push
loope
sahf
cmp
ss
inc
mov
int
pop
mov
mov
cwtl
and
sbb
xor
xchg
negl
cmp
dec
nop
popa
pop
push
xlat
adc
mov
fdivl
cmp
push
imul
or
sub
pop
jb
inc
xchg
pop
mov
aad
dec
decb
cltd
sub
pop
push
das
jmp
addr16
jecxz
daa
mov
xchg
popa
shl
or
arpl
movsb
mov
shll
shll
lds
mov
jecxz
push
push
mov
or
sti
push
mulb
les
arpl
jnp
jb
mov
mov
bound
push
mov
clc
mov
cmp
int3
mov
and
mov
out
lahf
adc
popf
sub
outsb
and
inc
xchg
pop
mov
je
arpl
xor
mov
ss
dec
sahf
leave
clc
cmp
xor
inc
ror
sbb
push
dec
jbe
iret
or
sbb
int3
jae
outsl
sub
fdivrp
jne
insb
subb
mov
test
stc
ror
pop
cmpsb
or
sub
push
sbb
call
insl
shll
fmull
push
lahf
ss
loop
cmpsl
jae
adc
repnz
xchg
or
push
xchg
push
push
bound
sub
sbb
fistl
jbe
jne
inc
iret
adc
test
fisttpll
mov
mov
and
aaa
dec
sub
outsb
push
js
andb
sbbl
icebp
push
push
xor
xchg
or
xchg
add
xchg
cmp
xor
adc
push
movsb
sub
ljmp
mov
cmp
pop
fsts
cmp
or
icebp
in
add
xchg
push
outsb
bound
inc
lret
cltd
out
mov
stc
and
fsub
fildl
test
iret
stc
mov
xchg
sahf
repnz
or
pop
vfnmsub213pd
mov
add
mov
ret
xchg
mov
bound
push
outsl
fs
sti
mov
mov
ret
stc
scas
call
sub
and
aam
pop
shrb
add
ret
das
fisubl
shrl
stos
das
movsl
dec
mov
cmpb
es
xchg
or
mov
adc
in
xlat
jmp
push
rclb
rorl
or
add
repz
fxch
dec
sti
sub
jecxz
xchg
mov
ds
adc
repz
mov
das
pushw
pop
inc
cld
gs
sbb
inc
fwait
pop
sub
movl
inc
jne
push
leave
push
je
cmpsb
out
std
lea
rorl
stos
arpl
stos
pop
in
leave
ss
loopne
and
pop
stos
rcr
xor
cli
dec
popa
sbb
sub
add
add
or
popf
scas
inc
sahf
add
sub
dec
xor
sahf
pop
loop
mov
mov
adc
sbb
fs
mov
je
pop
xchg
out
or
je
sbb
jnp
xor
lret
mov
mov
lea
pop
sbbl
je
mov
das
push
mov
pop
test
sub
cmp
xor
mov
jne
or
pop
imul
repz
mov
xor
mov
and
lahf
fstpl
sarl
jnp
jne
rol
pop
add
pop
sub
pop
adc
xor
movsl
repz
adcl
jmp
lds
cmp
lea
push
int3
outsl
lods
fsubrl
mov
xlat
js
aas
cltd
xor
movsl
ret
cmpxchg
xor
sub
daa
jae
stos
jmp
jl
adc
sbb
and
out
mov
mov
or
xor
test
or
inc
in
jne
stc
pop
xor
cld
dec
into
xor
push
cmp
xchg
movsb
lret
mov
mov
pop
mov
jns
outsl
sub
add
xchg
cmp
hlt
push
je
sbb
stc
pop
lcall
cld
xorb
push
sbb
cs
xchg
xorl
mov
xchg
inc
pop
xlat
int
mov
ljmp
cmp
cmc
loopne
mov
into
shlb
adc
push
or
push
dec
xchg
jmp
mov
stc
hlt
daa
mov
mov
stos
add
mov
xchg
int3
mov
xchg
xchg
lea
and
mov
mov
dec
sbb
inc
mov
mov
xchg
or
dec
das
inc
inc
addb
pop
in
icebp
cmp
mov
add
sub
hlt
mov
xchg
test
xchg
xchg
mov
mov
inc
test
add
sbb
sahf
pop
ret
pop
jns
lret
fisubl
popf
cmpsb
pop
push
xor
cmp
inc
insl
fidivrs
pop
test
rcrb
cld
push
subb
xchg
mov
pop
push
loopne
mov
fwait
cmpsb
test
aam
scas
sahf
mov
unpckhps
sub
adc
mov
cmc
lods
lahf
sub
pusha
mov
push
das
daa
pop
lock
cmp
pop
add
ja
and
pop
test
cld
mov
orb
sub
mov
pushf
in
pop
sbb
mov
xlat
push
int3
inc
cwtl
add
mov
fcmovnbe
dec
repz
dec
and
mov
inc
mov
cmc
rclb
aaa
add
mov
xor
and
pop
pop
sbbl
sub
movsl
repnz
mov
icebp
mov
repz
inc
rorl
popa
adc
int
sub
rolb
imul
outsl
and
fs
jo
cmp
sbb
in
inc
fucomi
jmp
inc
shl
and
out
inc
mov
lret
xor
popf
rorb
mov
rcr
inc
or
fstpt
xchg
lds
mov
sbb
sub
ss
mov
mov
fmuls
popf
jle
mov
push
mov
icebp
xorl
pop
dec
in
addb
jo
sub
pop
es
imul
pusha
sbb
je
sbb
jl
addb
jg
int3
bound
sarb
push
jmp
push
stos
cmp
push
ficomps
mov
in
inc
xchg
lcall
push
repnz
xchg
les
mov
andb
cld
jnp
jbe
ja
dec
xor
mov
xchg
mov
fimull
popf
jp
out
xchg
adc
loopne
loop
dec
enter
sbb
inc
repz
ficomps
and
aad
sub
push
popf
sub
or
xor
sahf
adcb
mov
cmpsl
xchg
pushf
mov
lret
sbb
out
mov
lret
stos
jle
out
call
fmuls
lahf
push
test
mov
sbb
xchg
push
push
gs
push
sub
test
push
mov
rcrb
pop
sub
leave
adc
insl
jmp
xlat
daa
outsl
repnz
test
loope
push
inc
lahf
leave
mul
mov
add
out
or
ljmp
xlat
sub
push
sbb
insb
int3
shll
inc
cs
popl
loop
adc
or
cmc
out
xor
cmpsb
dec
add
mov
add
aam
ss
outsb
mov
xor
xchg
sub
out
xchg
xchg
sub
rcl
dec
rorb
scas
daa
in
fmuls
mov
jae
inc
mov
lcall
mov
rcll
dec
dec
shrl
mov
pop
aad
pop
test
pusha
dec
xor
loope
gs
lret
push
hlt
mov
shl
aad
dec
popa
js
inc
push
or
push
popf
sbb
jmp
and
lds
pusha
imul
dec
xor
cmc
cmp
xor
addr16
out
divb
mov
cld
lahf
sub
xor
ficompl
and
pop
push
and
adc
mov
test
sbbl
stos
and
inc
cmpsb
lcall
push
sub
sbb
nop
pusha
jbe
mov
mov
dec
inc
sub
cmpsl
inc
loopne
mov
test
sub
outsl
arpl
sub
mov
xchg
mov
ret
repnz
sbb
mov
mov
arpl
stos
dec
cmp
fisubs
cmp
xor
jne
inc
push
std
jle
sbb
ret
test
mov
dec
dec
cmp
outsl
xchg
jnp
in
lea
mov
dec
hlt
inc
xchg
test
xor
mov
aam
mov
sub
push
enter
orps
sbb
dec
pushf
cmc
fs
mov
pop
mov
inc
pusha
int
jle
sub
shlb
xor
negl
fldcw
gs
cmpsb
mov
or
xchg
das
in
mov
pop
pop
push
mov
mov
iret
mov
lret
lcall
popa
divb
add
xor
call
add
jmp
xor
jp
mov
shll
idivl
add
pop
jmp
scas
sbb
add
ficompl
inc
lea
xor
lods
pop
repnz
clc
out
fs
mov
add
jmp
rcrb
mov
push
in
sbb
insb
or
ss
pop
push
sbb
add
aas
hlt
sub
fidivl
sbb
mov
inc
cmp
pshufw
inc
movsb
addr16
xor
push
jno
add
sbb
fnstsw
lds
test
inc
stos
aaa
adc
test
lcall
outsb
shrb
shl
mov
data16
inc
mov
dec
inc
add
aad
mov
stos
shrl
mov
push
dec
je
xlat
fs
xor
xchg
push
mov
orl
aaa
enter
pop
cmp
stos
mov
or
mov
mov
adc
rcr
xchg
fsubs
push
out
jne
fwait
pop
pop
or
or
or
mov
es
imul
mov
xchg
ret
xchg
push
dec
js
fsts
enter
mov
sub
inc
dec
aad
jbe
inc
into
lock
jne
out
inc
fnstenv
iret
inc
daa
jl
dec
jo
adc
out
ret
dec
ret
mov
xor
mov
push
dec
ds
lret
les
add
cmpsl
xchg
xchg
js
sub
aaa
hlt
mov
imul
js
mov
jl
push
pop
daa
hlt
dec
pop
add
cltd
mov
sbb
mov
and
fsubs
and
cmp
gs
out
cs
daa
into
cltd
jb
inc
pop
mov
fildll
push
sub
mov
push
je
sti
pushf
fldenv
push
int3
cmp
mov
in
jae
push
lea
repnz
ror
inc
pusha
test
insl
and
sbb
lahf
jo
push
inc
loop
mov
int
das
test
dec
inc
mov
dec
push
lock
push
fstl
inc
pop
call
push
push
int3
jnp
pop
adc
adc
ds
jmp
call
mul
fisubrl
inc
std
inc
sub
adc
inc
pop
stos
and
pop
xchg
mov
fwait
xchg
mov
jbe
je
testl
pushw
push
pcmpeqb
decb
lds
mov
mov
mov
jecxz
pop
sub
or
mov
add
call
jge
jl,pn
mov
mov
dec
fstl
icebp
popf
loop
sub
mov
mov
and
mov
test
cmp
jmp
push
jo
xor
call
sub
js
addr16
pop
jb
adc
imul
pop
icebp
xor
jl
fistpll
xchg
sti
xchg
adc
stos
enter
arpl
jle
out
xor
cmp
imul
filds
sbb
add
fwait
sbb
mov
pop
xchg
lods
and
jge
es
lret
repnz
dec
push
mov
and
jecxz
cmp
lock
mov
pop
into
push
pop
jecxz
es
push
test
jge
jle
arpl
xor
sub
dec
fimuls
lds
enter
xor
push
jne
sub
addr16
or
sbb
test
sbb
sbb
inc
lret
sbb
pop
outsl
cmpsb
test
xchg
and
pop
mov
mul
in
stos
cmp
adc
cltd
or
mov
xlat
push
xor
enter
adc
lahf
imul
push
aad
ficoml
test
add
stos
xchg
fs
lret
enter
dec
shll
ds
mov
test
les
pop
incl
test
inc
rorl
iret
fwait
jno
sbb
sbb
jno
mov
std
aaa
dec
jg
sti
sub
sbb
and
repz
xchg
xlat
xchg
outsl
push
xorb
mov
mov
and
into
fwait
cmp
out
inc
mov
or
mov
sub
sub
xor
push
mov
jb
fsubrl
pop
xor
add
xchg
pushf
clc
stc
push
jecxz
call
and
pop
jne
decb
mov
shlb
rol
movsb
loopne
aam
jae
enter
pop
adc
aaa
or
cli
pop
jb
insl
push
mov
pop
push
add
out
jno
arpl
aaa
dec
push
mov
cmpsb
lret
mov
lret
mov
sarb
inc
in
jmp
mov
mov
mov
and
inc
fucom
mov
out
out
add
lret
push
js
stos
mov
mov
insb
or
inc
mov
push
test
sbb
push
in
into
jg
sbb
insl
ret
fsts
gs
mov
popa
mov
jno
lret
mov
inc
pop
mov
pop
loopne
icebp
repnz
add
lret
int3
push
sub
rorl
in
or
sub
dec
xchg
mov
inc
lahf
and
cmp
popa
pop
jge
aad
idiv
fimull
mov
iret
clc
dec
push
insb
or
and
push
add
pop
jbe
mov
jge
ljmp
ljmp
xor
cmpsl
loop
movb
push
xchg
fwait
arpl
inc
adc
inc
mov
loopne
adc
cmp
inc
mov
rclb
jbe
push
mov
sbb
adc
pop
add
jmp
inc
dec
adc
mov
in
movsb
jno
shll
add
fadds
call
inc
and
out
fs
rclb
mov
mov
mov
movsb
in
fs
test
xchg
fdivl
and
je
repz
cltd
loopne
vpsrlq
cmp
shll
add
insb
and
sub
or
fistpll
fwait
push
lret
jbe
lods
aas
xchg
pop
sbb
pop
cs
dec
push
add
inc
dec
movsl
sub
mov
dec
xor
adc
inc
adc
sbb
adc
mov
pop
pop
gs
xchg
scas
int3
push
jmp
jl
negl
adc
insl
mov
in
inc
mov
push
dec
mov
ss
and
faddl
sbb
ss
in
jno
dec
push
out
test
fsubrl
je
push
jno
out
cli
lods
cltd
ds
jg
adc
out
lahf
dec
loope
mov
lahf
cmc
cs
and
in
cwtl
mov
roll
stos
mov
xchg
mov
fwait
scas
movsb
and
and
dec
fnstcw
lret
pop
dec
lret
popa
push
sbb
jle
sbb
mov
scas
pop
rol
mov
xchg
jb
rcl
bound
pop
stos
or
cwtl
test
bound
mov
jns
call
std
cld
dec
xor
cltd
jmp
mov
paddb
mov
xchg
iret
out
int3
dec
fwait
std
or
int3
xchg
ror
push
cli
and
mov
js
loope
inc
stos
jo
bound
mov
xorl
dec
insb
and
test
pop
cs
stc
fsubr
rclb
popf
adc
fmull
aad
push
loope
dec
fidivl
clc
stc
and
and
jge
shrl
fistps
dec
dec
test
xchg
mov
jle
inc
dec
cmc
mov
mov
xlat
out
or
push
jne
dec
daa
out
sbb
int3
xor
nop
mov
dec
mov
pop
push
jmp
addr16
fisttps
add
xor
fsts
mov
mov
jg
cmp
fisubrl
movsb
imul
sbb
jo
hlt
lock
dec
cltd
xor
mov
mov
lods
jmp
sbb
rcll
icebp
ret
and
and
sbb
sub
loop
inc
inc
cli
push
shll
cmp
dec
sbb
ret
push
addb
stos
int
decb
adc
outsl
lds
hlt
jg
sbb
lods
pop
mov
jecxz
or
cmpl
rol
fildll
push
push
or
mov
test
inc
dec
out
mov
mov
lret
inc
jmp
aad
xor
pop
or
sbb
jo
xchg
pop
stc
in
sbb
mov
or
lds
inc
dec
inc
addb
mov
sahf
xchg
lea
loope
inc
jnp
lcall
and
dec
cmp
repnz
push
hlt
loop
push
adc
scas
sti
int
adc
push
mov
lret
out
insb
jle,pn
mov
xor
cmp
mov
repz
mov
jp
push
adc
loope
repz
repz
adc
mov
dec
out
popw
dec
jne
jg
push
sti
out
add
sbb
pop
xor
xor
cmp
outsb
fildl
adcl
imul
push
mul
jg
sarl
mov
pushf
add
sti
aas
sub
inc
fnsave
pop
and
in
jmp
push
push
xchg
xchg
into
mov
adc
pop
push
add
or
lods
inc
push
call
push
adc
testl
into
insb
sub
test
inc
or
pop
sbb
jl
jl
test
xor
cs
cs
inc
hlt
and
lcall
jmp
rorb
add
push
jne
test
jp
lret
sar
add
adc
lods
outsl
dec
pop
nopl
in
jg
sbb
sti
dec
ds
xchg
mov
mov
fldcw
sub
xor
arpl
mov
mov
pop
mov
std
pusha
pop
jne
test
mov
mov
gs
cmp
and
jl
sub
and
cmp
adc
add
push
jg
pushf
out
data16
rorl
xor
inc
es
rolb
imulb
push
mov
scas
sahf
ljmp
insl
jecxz,pn
xchg
out
mov
mov
or
aaa
fs
pop
sub
push
rolb
xchg
mov
stos
loopne
jne
fwait
jmp
cmpsb
icebp
mov
es
sbb
aas
call
popa
int3
xor
rclb
push
stc
sarb
adc
inc
cmp
cld
stos
rcl
leave
ljmp
ljmp
xchg
dec
in
xchg
fs
xor
popf
xchg
cmpsb
push
iret
push
xor
mov
xor
mov
leave
aad
dec
test
xor
lods
lock
jle
mov
cmp
ret
or
cmp
scas
adc
sti
pop
cmp
cs
mov
in
or
xor
sbb
xchg
filds
movsb
or
adc
mull
add
dec
jge
cmp
xor
pop
push
xchg
movsb
jg
outsl
mov
push
dec
or
pop
repz
sbb
cmp
addr16
lahf
in
fldcw
cmc
cmpsb
mov
inc
fsub
adc
ficompl
and
lea
ss
int
jbe
push
dec
out
cmp
js
add
cmp
adc
pop
jmp
cmp
stos
fs
sahf
daa
sahf
inc
shl
fistl
push
push
cmp
cmp
mov
and
in
outsl
cmpsb
xor
jp
pop
inc
and
movb
lods
ja
test
js
xchg
bound
dec
addl
je
add
fiadds
fdivr
push
rcll
and
jae
dec
push
shll
int3
xor
out
shll
in
loope
sbbb
jns
ffree
adc
sub
mov
fmuls
xor
daa
je
and
test
addr16
fimuls
and
inc
sub
xchg
cmpsl
in
sbb
xchg
mov
or
clc
add
gs
imul
fs
loop
fmuls
add
add
pop
adc
dec
cwtl
dec
les
fistps
leave
fwait
je
fcmovnbe
xor
aas
xchg
movsb
inc
xchg
rol
lcall
ret
aaa
dec
test
push
sub
out
int
scas
test
mov
xchg
xchg
pop
ss
test
xchg
scas
xorb
jge
aad
shld
cmpsb
cs
nop
scas
and
bound
xchg
data16
sbb
mov
mov
cs
test
repnz
sub
or
jle
fbld
dec
xor
aas
outsl
movsl
je
in
or
sbb
push
xchg
and
xchg
cmp
or
mov
movb
mov
push
cli
jno
add
sahf
dec
push
push
ret
mov
mov
jecxz
movsb
fbld
iret
out
mov
adcb
or
and
xchg
adc
js
dec
sub
sub
ds
insb
xor
jno
xor
mov
pop
jmp
aam
or
pop
shlb
or
mov
ret
sub
xor
push
filds
cmp
scas
jp
addb
jae
pop
jne
dec
add
bound
cmp
adc
cmpl
mov
mov
sbb
mov
adc
scas
mov
pop
scas
push
mov
out
xor
push
rcll
dec
mov
xchg
pusha
sub
in
push
inc
push
mov
xlat
mov
push
jae
pop
jmp
dec
dec
movsl
das
cli
cmp
inc
push
jae
aas
jnp
loopne
cmp
clc
and
jae
jne
inc
fwait
pop
mov
inc
out
sub
sbb
movsb
add
adc
add
iret
in
xchg
add
andl
and
out
pop
movsb
divb
scas
sub
or
ret
jnp
pop
and
ret
adc
test
mov
mov
pop
xchg
mov
iret
movsl
out
jne
push
mov
xchg
or
shlb
mov
sbb
out
int
and
xor
adc
mov
push
jo
les
inc
dec
pusha
push
jns
jecxz
mov
sbb
mov
or
push
jecxz
mov
xchg
int3
mov
inc
cltd
popa
stc
pop
xchg
cmp
cli
jle
push
popf
and
push
jne
mov
push
inc
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
