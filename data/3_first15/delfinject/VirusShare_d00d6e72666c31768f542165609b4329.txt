pop
stc
xchg
popa
leave
or
xorl
inc
lret
je
leave
pushf
jo
lcall
inc
jmp
in
movsl
scas
stos
notb
push
lret
int3
shlb
mov
add
push
jns
dec
fwait
ret
xchg
mov
mov
push
xchg
mov
outsl
gs
stos
inc
lret
dec
movsl
cmpsl
or
pop
inc
push
pop
pop
or
fisubl
fcomi
add
fdivrs
ljmp
jecxz
incb
dec
pusha
mov
test
push
push
inc
out
dec
pop
and
sub
or
pcmpgtd
stc
dec
mov
lods
jg
ret
addr16
stos
dec
pusha
cltd
mov
popa
cs
inc
insb
push
xchg
je
stos
jb
call
dec
xchg
dec
mov
loopne
adc
in
cli
cs
adc
fadd
call
lds
rolb
push
xchg
ds
mov
inc
stos
ss
sarb
inc
mov
hlt
push
lcall
mov
sti
adc
iret
mov
addl
adc
dec
into
pop
push
xchg
dec
inc
mov
iret
in
mov
xor
icebp
or
xchg
rcr
lret
push
lcall
mov
test
mov
pop
imul
or
testb
cmp
loope
inc
lods
cli
in
dec
pop
sti
shlb
clc
clc
lods
dec
xchg
pop
lods
imul
lock
sti
mov
cld
jne
into
mov
pop
mov
lds
inc
and
stc
bound
adc
push
xchg
dec
lahf
popa
push
adc
insb
mov
dec
mov
xor
stc
rcr
inc
xor
lock
data16
arpl
jns
mov
mov
inc
mov
sahf
add
mov
add
stc
dec
idiv
jmp
jns
int3
sbb
add
mul
sub
inc
pop
jp
ror
jecxz
negb
fwait
adc
inc
cwtl
decb
cmpsl
cmpsl
orb
leave
dec
cmp
xlat
and
in
data16
push
jecxz
cmp
inc
push
sbb
cli
fsubrs
or
and
mov
inc
in
mov
int3
mov
push
add
jl
push
call
jecxz
inc
adc
sub
push
xchg
push
inc
inc
adc
mov
adc
gs
sbb
arpl
dec
xor
pop
out
inc
mov
cmp
pop
scas
jmp
jmp
and
adc
push
inc
or
or
mov
shll
xchg
lods
push
mov
int3
in
add
xchg
and
cli
outsl
decl
and
adc
aam
adc
stos
shlb
mov
inc
lock
loope
pop
dec
stc
std
mov
dec
shr
inc
inc
divl
out
or
pop
adc
stc
out
adc
xorl
fs
xchg
sbb
bound
aad
sub
jo
pop
out
arpl
inc
inc
inc
or
imul
pushf
mov
push
push
or
push
pop
inc
dec
dec
pop
insb
adc
push
mov
mov
lock
movsb
adc
xchg
and
dec
cmc
adc
mov
cmp
dec
inc
mov
dec
jne
and
xchg
adc
adc
cmpsl
or
add
loopne
fcoml
inc
push
push
aaa
inc
shrb
xor
outsl
out
add
shlb
add
pop
data16
int
mov
dec
xchg
xchg
add
cmpsl
xchg
adc
add
adc
out
cli
xchg
adc
in
into
loop
faddl
push
dec
enter
mov
adc
push
push
lret
or
je
fs
dec
lret
int
push
mov
pop
lods
mov
xchg
movsl
mov
fwait
mov
dec
xor
mov
int3
dec
mov
mov
loop
or
pop
daa
sub
and
mov
cmp
add
jecxz
sbb
pushl
mov
arpl
mov
mov
jge
fidivl
push
xchg
push
inc
bswap
outsb
ljmp
dec
dec
or
add
cld
push
xchg
ds
lds
in
adc
mov
push
shr
in
iret
push
data16
push
sbb
cli
sti
out
jmp
add
ljmp
push
fwait
adc
leave
and
adc
in
sbb
sub
gs
je
pop
pusha
adc
test
sahf
lret
shlb
mov
mov
adc
push
mov
mov
or
loop
cmp
popf
test
inc
call
xor
stos
inc
adc
inc
add
push
mov
pop
mov
add
int
dec
mov
inc
ljmp
pop
rolb
adc
mov
adc
test
lret
jnp
add
push
sbb
ja
push
cmp
xchg
mov
addr16
or
rcl
inc
inc
and
xor
adc
and
or
pop
xchg
mov
aaa
push
shrd
xchg
mov
insl
enter
orl
mov
stos
cltd
int
movsb
into
sti
adc
loop
movsl
pop
lock
in
or
cmpsb
negl
jno
scas
cwtl
cltd
or
aad
arpl
in
movsl
rcrb
fisubrl
int3
mov
pop
dec
call
xlat
push
inc
inc
mov
inc
push
push
pop
sbb
and
add
cmpsl
fmulp
sub
out
fstp
movsb
in
and
xor
pop
out
fwait
cmp
call
popa
lods
dec
mov
in
sahf
sub
cmp
out
adc
adc
xchg
lahf
aad
sbbb
xor
cltd
shll
jp
shr
roll
or
inc
pop
outsl
adc
mov
ficompl
push
mov
dec
arpl
xchg
popa
aad
in
or
cmpsl
add
adc
mov
stc
inc
in
movsb
cmp
leave
pop
std
jge
ret
popa
and
sti
lcall
popa
call
inc
insl
xlat
sbb
icebp
pop
out
arpl
xor
pushf
push
jmp
push
sub
outsl
in
add
test
pop
aam
ds
dec
sub
mov
push
xchg
push
shrl
or
jle
sbb
dec
jmp
es
and
push
add
push
int3
out
fbld
js
adc
xor
cwtl
adc
icebp
add
push
aam
or
jb
popf
in
lods
add
xor
cmp
sub
sbb
fildll
push
mov
fistl
adc
jno
insb
popa
aad
push
pop
jae
lea
adc
jmp
jmp
dec
and
dec
ljmp
iret
xchg
xchg
aas
adc
xchg
sahf
int3
pop
pop
sub
sti
jns
hlt
push
inc
sbbl
fnstenv
mov
testl
lahf
cmc
push
in
into
sub
adc
cmp
inc
cld
adc
out
dec
fwait
dec
into
in
and
fcoml
ret
leave
fwait
inc
or
push
nop
push
or
jbe
mov
repnz
and
xor
aam
xchg
push
push
cmp
rcl
push
mov
push
fiadds
lret
xchg
je
scas
adc
cmpsl
movsb
mov
out
movsb
daa
mov
push
inc
fcmovnbe
push
clc
lea
cmc
mov
call
sub
jb
push
imul
lret
incl
fisubrs
gs
aam
mov
in
xchg
sbb
shrb
bound
jmp
lock
out
mov
iret
pop
or
mov
shr
dec
xor
mov
jg
cmp
call
add
xor
sbb
pop
mov
idivl
mov
in
roll
add
pop
lret
cwtl
push
outsb
xchg
mov
xchg
stc
and
cmpsb
cmp
lahf
sbb
es
mov
jl
cmp
inc
and
orb
lock
xor
xchg
idiv
dec
adc
pop
mov
xor
jecxz
cmp
icebp
push
or
cmp
nop
sbb
in
or
lods
or
fsubs
jmp
outsb
mov
movsl
xchg
sbb
mov
dec
decl
loope
test
mov
push
mov
mov
mov
lea
adc
fmulp
xchg
nop
in
ficoms
cmp
push
pop
mov
mov
push
test
xchg
push
mov
xchg
sahf
pop
jns
mov
push
in
adc
popa
push
into
dec
inc
popf
inc
push
inc
repnz
adc
push
addr16
or
push
mov
push
gs
mov
pop
cli
stc
sbb
pop
hlt
outsb
adc
xchg
or
lahf
cmp
imul
mov
and
pushf
dec
cmp
mov
fildl
rorb
fmuls
or
and
lock
fiaddl
lret
into
fs
mov
xchg
mov
cmc
iret
ret
shlb
mov
les
mov
cmp
inc
jmp
push
test
pushf
jp
arpl
xor
shrl
ds
arpl
es
mov
mov
xor
push
jmp
and
iret
lds
aad
add
xchg
popa
out
lahf
xchg
inc
sbb
jmp
shlb
aas
xor
out
push
xchg
mov
ja
lods
arpl
inc
call
repnz
iret
cmp
lea
sbb
sbb
xchg
mov
popf
cmp
imul
repnz
fwait
mov
xor
imul
dec
pop
push
mov
rclb
test
dec
or
fs
in
rcrl
fisubl
aad
jle
mov
and
or
or
out
jmp
std
pop
pop
out
leave
popa
sub
andb
jmp
shl
push
sub
push
push
mov
icebp
push
out
sub
nop
icebp
xchg
aad
jge
fstpt
push
in
inc
push
adc
adcl
push
ret
sub
jmp
cmp
pop
gs
mov
push
cmp
aas
pop
push
dec
dec
dec
cmpl
cmp
jno
cld
loope
rorb
inc
cmp
outsl
enter
ljmp
in
fdivrl
add
stos
fcomps
jne
test
js
sub
xchg
inc
aad
sub
push
add
push
outsl
into
dec
cltd
js
nop
inc
jo
xor
movsl
and
ljmp
je
lcall
pop
dec
xchg
enter
or
mov
arpl
push
fnsave
push
add
ds
add
or
or
iret
xor
ja
and
jmp
pop
mov
loop
pop
sub
xchg
xchg
pop
out
sbb
rcr
cmp
ja
or
xor
in
pusha
ljmp
mov
bound
fstpl
insb
add
sahf
pop
or
and
cltd
in
cld
fs
and
scas
mov
scas
mov
cmp
mov
xchg
cltd
sbb
push
fmull
roll
loop
shlb
or
jp
adc
dec
je
push
lock
adc
lret
mov
ja
mov
xor
lcall
sahf
cmp
lret
or
lock
stos
mov
add
dec
jbe
mov
stos
xchg
sahf
cld
pop
inc
cs
lahf
xor
in
pop
mov
imul
cs
xchg
fldcw
out
cwtl
push
dec
int3
xor
push
push
xchg
jne
xchg
insb
cmpsl
aam
cwtl
test
paddd
and
dec
loope
repnz
mov
dec
stc
int
push
mov
mov
int3
mov
loopne
movsb
or
call
inc
mov
sub
add
or
mov
lret
add
nop
mov
iret
test
mov
fisttpll
xor
in
testb
mov
mov
pop
pop
inc
xchg
add
sbb
ret
mov
sub
xchg
das
fmuls
mov
popf
sub
cmp
mov
inc
pop
out
jp
subl
pop
inc
adc
sbb
xchg
lods
mov
seta
ror
push
subl
inc
lret
sub
std
push
sub
adc
and
iret
out
ja
xor
or
jge
inc
ja
sahf
cmp
add
sub
imul
jmp
shl
mov
xchg
lret
cld
fildll
cmpl
push
adc
out
rcrl
int
push
dec
pop
mov
add
sub
out
push
loope
pop
xor
and
xor
repz
and
xchg
xor
dec
cwtl
in
decl
stc
and
adc
in
fdivrs
imul
jle
mov
jg
dec
adc
cmp
int3
aam
and
lret
adc
dec
dec
lahf
sbb
mov
int3
inc
push
mov
cmp
mov
push
xchg
jle
int
inc
inc
dec
or
sbb
pop
and
push
sahf
test
shr
fldenv
jmp
or
lds
xchg
push
iret
out
jmp
fistpll
cmp
sub
cmp
pop
or
jb
shrb
push
fisubrl
or
outsl
pushf
stc
std
inc
mov
cmc
clc
xor
mov
enter
sti
ds
sbb
pop
loope
rolb
cld
nop
mov
fcoml
pop
cmpsb
nop
mov
inc
loopne
in
fbld
fidivl
sub
mov
repz
adcl
fnstenv
scas
aad
pop
push
cwtl
out
dec
mov
divl
dec
push
test
mov
xorl
ror
add
adc
xlat
jp
or
mov
sbb
hlt
xor
mov
or
rorb
repnz
sbb
fidivrl
rorb
es
push
imul
popf
push
std
mov
push
in
das
repnz
push
add
adc
test
dec
mov
cmp
shl
mov
cltd
cs
push
cmp
out
std
loopne
rorb
outsb
sarb
sahf
aas
fistl
arpl
sub
cmp
jmp
loope
mov
ljmp
sti
dec
repnz
add
jae
mov
popa
or
or
stc
xchg
iret
dec
int3
stos
jmp
loopne
cmp
and
gs
icebp
mov
sbb
or
or
inc
push
and
aam
dec
jl
xchg
or
jo
cmpsl
mov
mov
dec
mov
fistl
inc
das
js
fucomi
in
push
adc
mov
mov
das
xchg
addl
sub
inc
scas
imul
loop
push
xor
jno
xor
outsl
rorb
pop
repnz
push
out
sub
mov
sub
jmp
xchg
xchg
andb
sub
lret
mov
mov
adc
je
cltd
movsl
cmp
popf
clc
jae
les
mov
or
mov
jle
push
add
xor
mov
xor
cmp
nop
add
dec
pop
out
pop
jb
shlb
mov
push
mov
add
mov
adcb
add
mov
xlat
cmpl
les
in
xchg
pop
mov
icebp
in
jg
cmc
insl
inc
fists
jne
push
repnz
adcb
cmp
xor
push
adc
and
dec
sub
pop
jno
push
lcall
pop
outsl
adc
dec
mov
popl
mov
ficompl
push
dec
and
frstor
add
out
jmp
and
xor
xchg
ds
sub
inc
push
leave
pop
xchg
out
in
rcll
in
adc
adc
rorl
pop
adcb
inc
cmp
ljmp
outsb
pop
mov
test
jp
notb
wrmsr
pop
sub
push
push
jecxz
sarl
pushf
mov
sub
mov
testl
pop
mov
fstpl
arpl
frstor
icebp
ss
or
int3
out
dec
movsl
stos
loope
pop
cmc
fidivrs
je
cmp
maxps
popa
rcrb
cmc
dec
roll
jp
and
sub
mov
pop
push
xor
xchg
pusha
lret
mov
xchg
mov
in
dec
push
movsl
sbb
fdivs
data16
lock
pop
dec
cmp
dec
sarb
jmp
test
mov
mov
jge
je
push
push
mov
pushf
add
popf
lret
loopne
in
arpl
lods
add
xchg
xchg
mov
sbb
lret
mov
es
jns
in
rclb
movsb
adc
adc
mov
xor
pop
adc
ss
ret
das
fimull
test
mov
cmp
aas
jno
or
cmp
arpl
xor
sub
loop
xor
clc
jecxz
cli
in
pop
outsl
iret
cmp
push
dec
or
jg
imul
sub
sarl
or
cld
or
mov
sub
pop
and
dec
fcoml
jmp
jle
push
outsb
aad
aam
jecxz
sarl
inc
sbb
mov
mov
sub
out
xor
cmp
pop
pop
cwtl
into
sbb
out
mov
jb
cmc
dec
popl
pop
adc
cmpsl
cmp
inc
roll
push
adc
sbb
mov
and
cs
pop
ljmp
ficomps
dec
ficompl
ret
jmp
ljmp
jns
push
in
lret
and
adc
cwtl
mov
fsubl
xchg
pop
repnz
sti
in
sbb
push
xchg
jmp
push
lret
in
mov
icebp
out
push
js
loop
jns
repnz
adc
mov
ja
or
ljmp
fs
notb
push
dec
dec
add
dec
or
cmp
mov
mov
ds
cmpsb
ror
shlb
dec
adc
cmp
mov
ljmp
int
idivl
push
es
dec
subl
repnz
dec
js
sub
pusha
mov
enter
dec
test
dec
shll
ljmp
fisubs
or
fidivrl
mov
into
ret
mov
push
fdivs
arpl
in
and
rcrl
leave
insb
jge
push
jbe
in
inc
and
daa
and
divb
shrl
fistps
or
subb
pop
in
test
popa
ljmp
fs
lret
inc
add
dec
cmp
xor
leave
ds
ja
fbstp
xchg
movsb
push
xor
out
add
sarl
out
in
call
or
lretw
mov
xor
inc
pop
dec
in
outsb
rcrb
push
mov
pop
jne
mov
jb
dec
push
decl
cmp
insb
loopne
xor
ja
mov
and
push
xlat
jnp
and
pushf
add
aaa
lcall
pop
and
or
pop
movsl
mov
jg
jae
xchg
pop
out
sub
and
and
pop
pushf
js
adc
or
jns
xchg
inc
iret
int
mov
std
outsl
fcos
imul
jns
mov
mov
inc
sbb
xor
fsubp
ljmp
jecxz
mov
mov
or
or
shrl
xchg
xchg
sub
rcrl
scas
push
pop
aas
aam
bnd
out
inc
sbb
lret
xchg
iret
or
mov
aaa
push
cmpsl
fwait
dec
arpl
cwtl
push
inc
out
addb
sub
xchg
repz
popf
inc
arpl
xor
push
rolb
lock
cmp
jecxz
int
rol
cmpsl
addr16
pop
popa
popa
daa
lret
sahf
in
aaa
out
add
pusha
mov
push
imul
push
das
and
pop
pusha
fwait
rorl
inc
pop
xchg
adc
adc
rorb
push
stc
sbb
sahf
pop
mov
and
fistpl
test
dec
push
sub
push
lret
outsb
ja
pop
xchg
popa
sarl
stos
ds
cli
xchg
std
cmc
mov
inc
mov
insb
sbb
js
jb
jbe
es
out
adc
mov
idivb
push
xchg
sti
adcl
add
fs
cli
push
xchg
mov
insb
dec
bound
cmp
out
adcl
dec
jo
cwtl
and
fadd
push
adc
psadbw
inc
stc
mov
adc
add
icebp
gs
sub
xchg
xchg
adc
mov
aam
xchg
aam
hlt
mov
shl
pop
pop
int
or
xchg
xchg
xor
nop
push
andb
clc
dec
lods
jo
mov
mov
or
in
rorl
lods
cmp
std
test
add
aas
in
stos
push
and
cmp
xor
pop
pop
dec
test
push
push
or
aad
mov
loop
std
test
or
and
negl
ja
incl
das
and
out
push
call
bound
jmp
repnz
mov
rolb
sub
movsb
mov
out
and
sar
xlat
leave
push
adc
test
stos
out
jp
push
ds
add
jns
testl
pop
inc
mov
add
sbb
call
jle
lcall
sub
clc
ljmp
cmp
dec
lods
push
mov
into
push
stc
dec
push
cmc
cmp
popa
repnz
push
cmpsb
les
dec
pop
push
add
push
mov
popa
jmp
sti
inc
ds
dec
ret
dec
lahf
dec
pop
adc
mov
aad
popa
pop
and
or
dec
std
in
sti
scas
rorl
sub
test
dec
dec
dec
shll
mov
and
out
pop
das
stos
int3
iret
fisubrl
xor
lret
stc
sbb
ds
cwtl
xor
ds
out
push
xor
push
inc
rorb
xchg
je
sbb
rcrl
xchg
mov
add
movd
outsb
and
or
inc
jo
stc
fs
cwtl
and
or
pop
sahf
mov
in
mov
fwait
rcr
std
jmp
int
cltd
jg
inc
or
mov
jge
fmull
dec
arpl
sbb
xor
sub
callw
inc
sub
cmp
mov
push
dec
fsubr
lret
dec
jns
js
mov
punpcklbw
aam
fstl
js
movl
and
push
or
xchg
jl
fcoml
ljmp
push
addb
push
jno
cltd
xchg
movsl
stos
push
lahf
lea
dec
inc
cld
inc
loop
dec
sti
xor
sbb
sbb
insb
orb
in
xchg
pop
cltd
in
les
lock
jmp
pop
mov
dec
cmp
xchg
pop
adc
iret
cli
das
out
xlat
mov
rcrb
pop
inc
xlat
pop
mov
inc
repnz
loop
std
push
enter
xor
dec
mov
imul
inc
shl
pop
add
xor
inc
push
xor
jnp
iret
data16
test
or
pop
hlt
pop
mov
ja
stc
jo
jecxz
insl
and
push
or
xor
push
loopne
test
adc
inc
movsb
pop
mov
stc
push
sbb
fstpt
dec
lret
mov
lods
lods
push
es
pop
and
shlb
xchg
xchg
pushf
jl
or
fidivrs
mov
inc
call
push
sub
into
jne
jp
pushl
jecxz
mov
insl
jg
push
popa
in
mov
inc
inc
test
cmp
lahf
daa
sahf
data16
cltd
sub
jb
fmuls
adc
push
inc
vpminub
fdivl
add
xchg
add
shrl
lea
aad
or
ret
fisttpl
mov
inc
decl
ja
notb
add
push
sub
xor
dec
mov
pop
imul
repnz
neg
rorl
sbb
mov
pop
int3
cmp
inc
paddb
or
in
lds
outsl
lahf
sbb
mov
mov
loopne
mov
shll
imul
inc
outsl
inc
mov
jo
push
mov
add
inc
mov
mov
xchg
push
fcoms
lods
repnz
xor
out
jmp
inc
push
cmpl
push
out
inc
or
pop
ljmp
jmp
add
sti
adc
xchg
fcompl
pop
adc
stc
hlt
mov
pushl
xchg
push
fsubr
stc
addr16
lret
xlat
hlt
scas
andl
push
and
jecxz
adc
jmp
and
xor
dec
mov
cmp
inc
mov
jg
lock
xchg
inc
push
fwait
mov
test
cmpsb
xchg
xor
mov
jge
into
scas
sti
mov
jmp
test
jmp
test
mov
lret
fstpt
pusha
or
sub
or
xor
pop
fwait
and
dec
in
dec
insl
or
iret
andb
xchg
jno
mov
cmc
xchg
mov
bound
push
pushf
call
dec
sbb
xchg
or
addr16
out
adc
push
add
dec
in
adc
scas
dec
pop
ljmp
sete
cmp
push
inc
mov
notb
mov
scas
sub
ret
push
ja
pop
jbe
mov
cltd
out
inc
push
xor
jbe
dec
adc
push
fstpt
iret
cmpsb
xor
mov
in
enter
loopne
push
std
aas
lock
loopne
cmc
popa
push
ficoml
xchg
sub
lods
mov
pop
testb
sub
aaa
xchg
outsl
adc
mov
lods
fwait
aad
mov
call
loop
adc
xchg
dec
push
xor
imul
sbb
cmpsb
cmp
push
mov
test
popa
js
bound
out
movsb
imulb
cmp
and
rolb
and
je
jmp
fdiv
inc
jle
push
imul
sbb
mov
pop
ljmp
pop
dec
in
inc
push
jne
sbb
pusha
movsl
inc
dec
dec
dec
inc
loop
mov
repnz
cmpsb
and
cmpsb
dec
sub
jge
pop
or
inc
sub
inc
jmp
test
or
into
adc
mov
inc
popf
fs
into
pop
andl
jl
inc
ljmp
aam
push
cmpsl
push
and
xlat
jnp
add
movsl
jecxz
xchg
cwtl
add
mov
push
outsb
xchg
aaa
popa
mov
push
icebp
xor
test
rcll
gs
xor
inc
push
or
scas
das
xor
xor
enter
lcall
mov
pop
and
sub
push
sub
aaa
enter
out
stc
sahf
pusha
push
xchg
repnz
test
adc
xchg
push
push
inc
cmp
cmp
xor
cli
xor
sub
int
cmp
inc
mov
sarb
mov
fwait
dec
leave
xor
mov
stc
lret
push
mov
stc
xor
push
xchg
dec
cmp
sub
mov
out
movsl
repz
sahf
shlb
or
and
and
jns
push
cwtl
out
shlb
enter
jne
dec
fwait
xlat
cwtl
std
ds
dec
dec
lcall
mov
cmp
stos
xchg
dec
mov
lahf
rcrl
sub
or
cmp
mov
stc
outsl
add
fidivrs
pop
mov
stc
jno
repnz
data16
or
mov
push
push
dec
imul
push
fisttpll
inc
xchg
jp
lcall
jecxz
sub
sbb
xchg
imul
fmull
add
and
dec
cmp
lret
dec
pop
test
and
rolb
or
clc
std
fs
inc
pop
outsl
xor
cmp
xlat
mov
das
dec
clc
pop
inc
pop
push
addb
jge
addl
out
mov
dec
cmp
pop
clc
popf
push
and
adc
push
ds
movsl
lret
add
into
add
ss
cwtl
xchg
clc
dec
popf
pop
push
in
call
or
or
into
pop
aam
out
fwait
or
stos
or
repnz
je
push
cli
testb
in
movsb
mov
and
testl
xor
xchg
cli
mov
cs
fidivrl
push
dec
rcrl
pop
pusha
mov
in
mov
mov
inc
mov
icebp
subl
fs
xchg
scas
sbb
and
push
cli
lea
push
mulb
fs
out
sbb
ret
cltd
ja
lahf
es
pop
pop
dec
mov
dec
lret
mov
xchg
mov
xchg
cmc
add
popa
xchg
aam
das
mov
add
adc
roll
in
pop
rclb
pop
aas
jmp
cmp
mov
je
sub
fdivrs
cltd
lret
adc
dec
repnz
and
mov
aad
bound
mov
sbb
lret
and
mov
cmp
out
stc
je
pop
adc
fidivs
mov
pop
add
flds
arpl
inc
outsb
std
xor
inc
mov
int3
jle
scas
mov
adc
sbb
lahf
dec
dec
pop
jge
push
jmp
notb
cmp
add
pusha
xchg
sbb
cmp
mov
mov
or
mov
mov
sbb
push
fcoms
imul
cmp
pop
cmp
or
enter
jmp
or
in
mov
mov
insw
mov
in
xorb
add
fidivrs
out
lock
jecxz
ror
dec
or
scas
rep
repnz
xchg
mov
dec
outsb
in
jl
dec
testl
mov
clc
test
sahf
into
pop
xor
lret
mov
in
push
movsl
fdivl
mov
add
mov
push
in
cmp
sbb
dec
pop
xor
imul
jmp
jmp
push
outsb
push
mov
popa
stos
data16
push
push
jns
jmp
pop
testb
js
in
push
cs
call
pop
inc
hlt
sub
adc
ficoml
test
lahf
scas
xor
xchg
mov
movsb
jp
pop
stos
mov
outsb
mov
add
mov
js
ljmp
cli
xor
cmpsb
dec
jecxz
xchg
xor
bound
cs
pusha
insb
xchg
add
sub
pop
xchg
mov
fstps
dec
xchg
fidivl
in
ljmp
jmp
es
insl
scas
dec
lock
xchg
into
push
push
roll
imul
inc
sarl
pop
push
pushf
lcall
lahf
int
cmp
adc
fimull
mov
sub
mov
insb
dec
pop
frstor
push
mov
mov
and
sub
repz
aam
pushf
test
xchg
fs
rclb
xchg
hlt
mov
jp
ds
sahf
push
and
insl
sub
adc
or
ret
pop
cs
rorb
mov
movsb
xchg
pop
enter
sub
mov
add
out
into
mov
fisttps
or
fnstsw
dec
adc
fs
mov
fs
out
loop
lods
out
lea
add
or
stc
lock
inc
jbe
jmp
cs
add
or
inc
sub
pop
add
pop
cmp
loopne
cmp
loopne
cmp
loopne
aas
pop
cmp
adc
imulb
push
lds
or
and
bound
and
adc
sub
xor
mov
sub
es
in
outsb
push
arpl
pop
enter
mov
jl
jbe
dec
movsl
ficoms
stc
sahf
mov
xlat
in
mov
pop
addr16
sub
mov
mov
push
mov
out
jnp
bound
daa
lods
fadd
ljmp
adc
xchg
mov
lock
insb
or
addr16
mov
adc
aaa
loopne
imul
mov
push
xor
or
inc
repnz
add
push
gs
push
mov
enter
inc
jne
xchg
pop
xor
inc
dec
fcom
jmp
jbe
sbb
mov
fnstenv
and
dec
adc
mov
mov
sub
cmp
mull
and
aas
sbb
stos
and
movsb
mov
nop
push
loop
push
cmpsb
dec
jecxz
xchg
push
jmp
cltd
adc
fiaddl
in
out
insb
adcb
xor
and
jb
icebp
fsubrp
mov
lret
aad
xor
ret
xor
jae
push
add
push
lock
cs
add
out
push
mov
xor
xchg
popf
sbb
or
or
pop
sub
dec
mov
aad
inc
fisubrs
pop
and
xchg
arpl
cld
loop
fisubl
adc
inc
xlat
in
xchg
popf
lods
push
rcll
loope
fwait
pop
cmpsl
mov
imul
push
adc
aad
sub
jb
daa
shrl
insb
dec
pop
aad
cmp
pusha
mov
push
mov
stc
mov
pop
aas
mov
push
or
mov
rclb
xor
dec
dec
imul
lcall
pusha
out
loop
adc
scas
lock
mov
insb
adc
mov
rcll
out
sub
and
push
mov
pop
fs
xchg
scas
popw
xchg
cltd
and
mov
xchg
outsl
jmp
dec
cwtl
sbb
cmpsl
jnp
sti
push
lret
push
jns
data16
mov
shl
in
nop
pop
xlat
imul
mov
push
outsl
aaa
mov
pop
mov
jg
je,pn
leave
das
jecxz
loope
mov
cs
or
push
lret
in
insb
movsl
xchg
dec
inc
xchg
inc
repz
in
lret
push
and
addb
loope
ss
rcrb
shlb
nop
lock
idiv
testl
fadds
cmp
cmp
addr16
fwait
hlt
aad
push
push
push
or
outsb
in
cs
or
cltd
pop
out
pop
lret
and
subb
popa
or
daa
sarb
pop
cmpsl
je
pop
jae
xchg
mov
lock
mov
bound
test
inc
test
inc
notb
cmp
cmp
cwtl
ret
sbb
mov
cmpsl
aad
test
in
stos
cmp
xor
push
clc
subb
dec
pushf
clc
lods
jg
dec
add
jb
mov
stos
xor
push
dec
mov
jne
ljmp
push
cs
cmp
xchg
cmp
adc
or
scas
and
lahf
ror
std
push
repz
push
lods
shll
push
dec
inc
outsl
aad
movsb
out
addr16
and
fwait
xchg
imul
push
std
dec
loopne
push
fwait
aam
dec
ret
icebp
in
pop
push
test
inc
shrb
mov
xchg
pop
lret
idivb
shr
pop
ret
mov
scas
inc
int3
ljmp
popf
pop
cmpsb
aaa
jo
stos
mov
xchg
js
repz
ljmp
in
adc
jo
lea
xchg
leave
hlt
cltd
orb
adc
aas
lahf
push
sti
mov
mov
out
outsb
sbb
push
adc
stos
sbb
adc
scas
xor
bound
sbb
add
mov
xchg
mov
ret
scas
sar
pop
loop
pop
cmpsb
pop
mov
cmpsb
aad
rcl
pop
cmp
imul
fisubl
cmpsb
test
mov
aas
mov
pop
ja
mov
jns
fidivrl
test
rcrb
enter
push
add
xor
and
and
lea
lcall
pop
dec
int
std
pop
mov
int3
add
jmp
or
add
fnstcw
lds
adc
push
cmp
fldcw
push
insl
lcall
xchg
fs
cmp
out
xchg
in
es
fsubrl
imul
mov
inc
rolb
shrb
cmovle
rclb
jmp
iret
or
jo
sbb
xchg
or
adc
pushf
adc
jl
out
add
movsl
and
decl
adc
pop
call
fdiv
jae
jecxz
in
add
pushf
inc
shlb
loop
jbe
pop
push
ljmp
inc
mov
mov
push
mov
dec
push
xchg
inc
fidivrs
out
jnp
fiadds
inc
decl
scas
sub
jbe
test
hlt
bound
clc
icebp
test
fstl
scas
iret
push
cs
inc
mov
cmp
shr
push
ljmp
call
lret
inc
jecxz
mov
mov
rcrb
in
xchg
aam
pop
subl
push
xchg
push
add
sub
xrelease
mov
or
pop
pop
imul
in
xor
push
mov
fstps
mov
loop
cmp
inc
aam
stos
enter
ficoms
inc
mov
pop
cmp
je
das
jnp
sti
or
mov
mov
divb
aaa
push
mov
or
xlat
imul
xchg
enter
arpl
sbb
dec
aad
or
cmp
shll
gs
jmp
pop
ret
cltd
ror
pop
push
or
loop
ljmp
mov
adc
rclb
testl
add
inc
pop
fwait
xlat
dec
push
push
or
loope
push
xor
xor
bound
imul
mov
gs
jl
dec
push
outsl
cmp
cli
lcall
xchg
mov
cmp
sbb
lcall
sbb
jge
push
cmp
scas
cmp
mov
dec
xor
sub
iret
repz
sahf
sti
ret
dec
xor
sub
int3
cwtl
push
xchg
pop
mov
jae
fidivl
out
cmp
int3
or
xchg
inc
nop
or
incl
pop
out
cmp
add
clc
arpl
push
mov
cld
notb
jnp
xchg
cld
or
mov
mov
insb
testb
shrb
ja
or
shlb
jns
mov
mov
shlb
dec
ljmp
jl
mov
popf
fistpl
sti
mov
test
sbb
and
xor
mov
fwait
cmp
jp
cmp
push
pusha
push
mulb
xchg
aas
cli
outsb
int
push
test
push
pop
lcall
fnstenv
lcall
mov
fwait
sbb
adc
rcrb
push
aam
push
push
xchg
iret
call
fadds
push
lret
lret
cmp
lods
fisttps
sbb
jle
loop
inc
popa
jnp
pop
into
in
leave
ds
and
andl
cmp
mov
pop
outsb
push
daa
cli
or
jno
iret
pop
jle
xchg
xor
push
sti
dec
dec
nop
orb
call
dec
cs
push
mov
push
xor
cwtl
xor
xchg
pop
cmp
ja
add
inc
outsl
jno
sub
ja
mov
pop
or
adc
shr
pop
mov
xchg
jne
sub
push
nop
es
aaa
push
mov
js
bound
jb
dec
ja
fidivs
loopne
test
inc
inc
and
repz
and
adc
lds
cmpsb
outsl
inc
dec
and
pop
mov
or
mov
daa
test
or
dec
inc
sbb
jb
lcall
sahf
aas
mov
stos
repz
jg
outsb
lahf
repz
pusha
cwtl
xor
mov
xchg
cmovae
xchg
jmp
and
jecxz
dec
push
push
push
xchg
mov
or
cmp
xor
das
bound
mov
jae
jo
pushf
lcall
mov
adc
popa
dec
pop
sti
push
push
xor
push
movsb
dec
or
cmp
mov
mov
out
mov
mov
or
aam
jae
dec
or
and
out
lods
mov
movsbl
jmp
jmp
or
inc
xor
push
sbb
mov
imul
cmp
daa
or
cmpsb
add
sub
je
lods
xor
mov
xor
dec
lret
and
aam
fwait
insl
mov
dec
pusha
in
xor
jecxz
sbb
jb
dec
aad
pop
lods
iret
sub
mov
mov
sub
sub
and
mov
push
ja
jns
popa
xchg
in
and
sbb
sbb
sahf
call
loope
dec
shrl
jle
mov
test
jge
addr16
shrl
or
adc
add
aam
push
push
push
xchg
xchg
es
lods
jbe
decb
addl
fcomps
int
jmp
jle
in
jne
fcoml
mov
rclb
add
or
sub
dec
adc
hlt
inc
sub
sub
in
in
push
lods
cmp
jle
jns
in
in
mov
imul
repnz
repnz
sub
adc
mov
pop
xor
test
mulb
or
push
or
push
mov
insb
cmpsb
jo
jo
push
cmpsb
xor
cltd
push
add
cmp
jbe
mov
data16
push
lods
or
jns
mov
jo
clc
add
arpl
jae
lahf
dec
iret
adc
mov
xor
testl
shl
shll
in
xor
fcoms
add
xchg
xor
pop
lea
movb
mov
add
or
xchg
mov
and
mov
dec
popf
mov
mov
test
xchg
adc
xchg
dec
or
inc
sub
frstor
or
xor
bound
sbb
popa
push
shl
int3
inc
xor
mov
repz
lret
negb
out
popa
cmp
int3
mov
push
movsb
test
xchg
mov
icebp
cmpsl
or
sbb
clc
aad
je
push
dec
push
mov
xor
add
loop
dec
or
fdivl
mov
adc
pusha
sar
sbb
fimuls
push
jnp
loop
test
shr
xchg
leave
ds
addr16
pop
push
xchg
and
into
add
sbb
or
add
into
icebp
scas
and
enter
adc
insb
inc
and
pop
notl
dec
icebp
add
sti
lods
mov
cld
fistps
pushf
push
xlat
or
dec
lret
in
cmpsb
rcrb
les
je
xor
xor
cld
fidivs
shlb
mov
mov
push
enter
int
dec
iret
in
addl
shll
enter
push
add
mov
shlb
enter
arpl
lea
inc
cmpsb
pushf
shrb
rclb
add
jge
xchg
mov
xor
adc
fwait
mov
mov
jns
jge
fsub
out
mov
aas
xchg
sbb
pop
push
jnp
outsl
xor
in
into
mov
pop
adc
fsubrp
cmpsb
ret
or
std
hlt
dec
scas
sub
test
jecxz
fildll
mov
nop
push
pop
xchg
fmuls
pop
and
xor
test
jg
into
jecxz
or
andb
fdiv
int3
repnz
scas
lret
fcmovnb
out
jbe
jae
cwtl
xor
pop
int
or
inc
fwait
or
fsubs
dec
dec
inc
and
das
xchg
pop
aam
mov
cmp
adc
cld
nop
outsl
rcl
pusha
repz
insl
dec
sub
xchg
adc
ja
or
and
xorb
inc
dec
fwait
mov
cld
pop
push
rclb
cmp
adc
in
adc
out
test
or
and
outsl
into
leave
inc
arpl
hlt
push
push
ljmp
adc
fstpl
xor
jmp
cld
or
cs
in
loope
jle
cli
int
in
dec
dec
adc
adc
pusha
pop
cli
add
dec
punpckldq
add
inc
dec
aam
jl
mov
cmp
mov
pushf
mov
pop
out
sbb
mov
out
lret
addb
fcompl
aad
cmpl
sbb
clc
xchg
testb
lds
rol
inc
sbb
push
jmp
insl
dec
dec
and
pop
adc
cmp
xor
out
aad
mov
movsl
testb
xchg
fisttpl
fsincos
nop
stos
mov
sbb
sti
xchg
pop
icebp
jbe
pop
xchg
into
inc
mov
ret
fistps
xor
shr
xchg
pop
out
sti
sbbb
mov
jecxz
jnp
or
add
int3
add
pop
dec
inc
sbb
ljmp
ret
lret
mov
push
dec
iret
xor
ds
sti
dec
cmpsb
out
inc
cld
test
aas
mov
stos
dec
sbb
and
mov
push
loope
mov
rolb
jns
int
ss
cmp
stos
mov
cmp
push
mov
jnp
inc
idivl
mov
imul
pusha
les
pop
loop
fldt
sub
xchg
inc
cmp
and
idivb
and
popf
stos
in
in
rol
pop
cmp
int3
cmp
ss
in
add
dec
cmp
fnstsw
leave
dec
shlb
inc
fmulp
out
sub
adc
mov
sub
in
xor
adc
ljmp
dec
pushf
and
sub
js
pushf
mov
mov
inc
ficomps
xor
inc
fiadds
adc
test
and
cmp
icebp
mov
xchg
dec
sbb
or
shl
ret
js
imul
lods
mov
xorl
pop
out
sarb
mov
and
out
adc
cwtl
dec
int3
je
dec
xor
mov
jge
mov
pop
dec
in
mov
mov
inc
and
inc
rcrl
mov
pusha
jle
test
inc
mov
xchg
sbb
mov
repz
movsl
fimuls
stos
dec
lods
fiaddl
movsb
pop
cwtl
xchg
or
inc
les
pop
xchg
mov
adc
hlt
mov
int
dec
test
ja
aam
jg
mov
dec
sbb
pop
sahf
loop
jmp
sbb
mov
test
hlt
and
fcmovne
movsl
into
xor
mov
fs
jnp
fs
sar
outsl
jne
roll
mov
call
add
pop
or
orb
adc
insb
sarb
mov
shl
leave
adc
into
cmc
stos
nop
inc
xorl
pop
stos
cmp
mov
loop
mov
fmull
out
or
bound
or
pop
fidivl
or
sti
addr16
xor
jmp
ficoms
dec
lret
dec
cmc
push
cmp
jae
testl
repz
inc
aad
pop
cs
je
out
inc
mov
cli
sub
push
hlt
clc
into
divb
cwtl
enter
pop
pop
add
add
imul
mov
inc
loope,pn
push
call
fiaddl
sbb
pop
js
push
int
xchg
mov
sub
jns
shlb
sub
aaa
push
inc
jmp
fcmove
mov
push
mov
ret
jle
pop
ffreep
mov
leave
mov
adc
out
mov
xor
add
pop
repnz
out
push
jns
inc
iret
push
xchg
xchg
mov
mov
sbb
jns
mov
jbe
mov
xchg
mov
stos
ret
dec
cmc
adc
jo
mov
addr16
cmp
out
pop
leave
jg
mov
outsb
xchg
mov
fildll
xchg
lods
push
out
cmc
dec
push
jo
xchg
sub
cmpsb
gs
in
ljmp
outsl
sbb
outsl
mov
sub
pop
push
hlt
stc
dec
dec
enter
fdivp
sbb
cmp
adc
xor
dec
repz
testl
adc
mov
jnp
adc
jmp
mov
aad
jg
rclb
or
cs
into
cltd
add
mov
outsl
stos
xchg
es
xlat
or
xchg
std
cmp
or
or
and
fdivr
dec
inc
pop
xor
mov
sbb
xchg
adc
out
sbb
mov
ds
adcb
mov
xor
lods
inc
in
mov
test
sbb
ljmp
adc
push
dec
and
push
inc
dec
call
sub
imul
fisttpll
popf
sti
icebp
inc
ror
cltd
add
sti
inc
xor
add
outsl
adc
fdivr
adc
sbb
pusha
push
insl
movsl
out
jmp
es
inc
jmp
mov
lea
sahf
scas
mov
imul
add
add
mov
xor
xor
add
inc
adcb
fdiv
xor
sbb
pop
popf
xchg
sub
cmp
dec
or
dec
xor
xchg
movsl
push
in
push
inc
mov
fs
pop
arpl
test
iret
xchg
call
add
mov
repz
dec
push
and
das
scas
sbb
adc
outsl
or
sub
add
mov
aad
inc
xchg
mov
mov
mov
mov
jns
or
subb
xor
ret
xchg
push
jb,pn
jbe
ljmp
outsb
in
push
mov
inc
xor
sub
aas
popa
and
mov
sbb
movsb
sbb
pop
popa
fwait
or
inc
into
nop
pop
sub
mov
mov
adc
scas
stc
push
leave
pop
iret
mov
lcall
popa
jbe
in
pop
dec
pop
out
test
sbb
cmpl
inc
pop
add
mov
in
cmp
jp
add
cs
push
sub
jmp
repz
sub
jo
xchg
mov
or
ror
and
mov
adc
inc
mov
jg
inc
cmc
movsl
aam
repnz
clc
or
ja
pop
and
fs
xor
push
movsl
jmp
xlat
test
stc
and
call
mov
mov
ret
cmc
mov
fucomip
xchg
lock
push
fdivrs
sbb
mov
xchg
ljmp
pop
sti
aas
or
push
rclb
icebp
divl
or
and
push
aam
es
sub
adc
pusha
std
sub
push
movsl
push
xchg
sub
int
dec
adc
dec
and
xor
test
sti
xor
test
jecxz
push
popf
push
fistpll
push
push
in
int3
iret
or
inc
fcomip
pop
and
xchg
dec
fisubrs
or
add
pop
mov
call
addr16
fidivl
sub
xor
js
dec
arpl
stos
popf
rolb
lock
idiv
nop
push
data16
movsb
jmp
push
inc
mov
xchg
mov
push
lea
mull
cmp
divb
outsb
repnz
dec
dec
pusha
dec
add
fsqrt
cltd
insb
xchg
sahf
push
xor
pusha
sarl
lret
out
pop
out
sub
push
into
neg
dec
notb
ror
xchg
push
pop
popf
dec
mov
mov
bound
adc
pop
add
movsb
gs
cltd
dec
cmp
scas
pop
xlat
pushf
ds
jb
dec
ret
outsb
inc
sub
outsl
in
pop
pop
mov
dec
ret
mov
mov
rol
mov
mov
push
ljmp
dec
dec
lret
pusha
mov
adc
popf
imul
icebp
je
outsb
pop
jle
push
xchg
sub
hlt
rcr
pushf
aad
pop
add
nop
adc
popf
push
xor
hlt
mov
adc
mov
cwtl
aaa
pop
mov
imul
fcomps
out
xor
pop
mov
inc
mov
aaa
xchg
jmp
adc
adc
outsb
insb
mov
cli
test
xchg
mov
pop
cmp
fwait
mov
adc
push
ret
mov
ljmp
out
sbb
mov
shll
mov
cmpsl
sti
inc
cmp
pop
add
pop
fstl
sub
popf
rcl
dec
loop
dec
xchg
cmp
rcrl
sahf
sbb
ret
stc
push
and
mov
cs
or
lods
push
sar
fdivrs
and
mov
into
test
data16
ret
fisubrs
inc
xchg
lods
dec
repz
sbbl
mov
popa
and
dec
das
pop
movsl
pop
sub
lds
add
jp
and
cmp
cli
call
push
mov
add
inc
cs
cmp
xor
xor
fldl
push
stc
add
and
mulb
sbb
adc
sub
xchg
add
dec
repnz
sub
sbb
xchg
pusha
mov
mov
nop
xlat
shr
gs
push
pop
or
xchg
push
push
mov
fnstsw
xchg
sti
lret
and
jmp
rolb
lds
and
cmp
sbb
add
popa
outsb
xchg
jmp
adc
mov
mov
mov
sbb
cmp
ss
xchg
rcrl
sti
int
mov
repz
push
inc
xor
inc
lret
pop
xor
aam
push
rol
arpl
sub
lcall
scas
push
mov
xchg
lds
loope
mov
dec
idiv
mov
shlb
sub
outsl
fimull
lea
sub
add
xor
int3
imul
push
xorb
les
adc
into
insb
subl
xchg
jo
xchg
and
sar
cmp
push
aam
shll
inc
lods
rolb
push
pop
int3
hlt
jp
push
mov
mov
cltd
xor
fxch
adc
mov
cmpb
cwtl
xchg
sub
xchg
or
xchg
icebp
xchg
inc
push
and
push
mov
pop
inc
pop
sti
test
xchg
pop
movsl
pop
inc
mov
or
arpl
fwait
mov
or
stos
fidivrl
inc
loop
xor
dec
repnz
jp
push
mov
or
rolb
ret
aas
xchg
insb
mov
stc
jns
mov
vmulss
adc
popa
fwait
sbb
push
imul
imul
sbb
mov
fidivs
ljmp
loope
mov
add
inc
in
dec
mov
leave
dec
jle
or
xchg
xor
cwtl
std
sahf
stos
mov
data16
ret
arpl
sarb
xchg
xchg
or
ljmp
xchg
in
xchg
mov
push
fimull
add
adcl
push
aaa
mov
jo
adc
inc
adc
mov
mov
mov
outsl
sbb
adc
sbb
cmc
xor
or
sub
xor
push
leave
stc
inc
inc
jnp
sub
cmc
jno
es
jecxz
push
sub
in
and
in
push
xor
or
xor
push
loop
lds
adc
pushf
and
sbb
and
mov
xor
push
inc
or
sub
cmp
adc
sub
adc
orps
nop
mov
jmp
push
out
sub
push
cmp
loop
lds
jne
ja
ret
inc
call
push
bound
mov
pop
push
mov
leave
mov
test
sub
mov
imul
mov
call
jae
int3
mov
cmp
loope
lret
scas
ret
push
xlat
pop
mov
jns
icebp
fs
lcall
jno
xchg
insb
xchg
fistps
mov
lea
sbb
xor
in
mov
test
movsb
test
fistpl
test
pop
jns
test
mov
jnp
dec
add
lret
imul
imul
inc
mov
scas
adc
mov
mov
mov
inc
mov
inc
inc
push
out
cltd
cmpsb
test
mov
push
popf
pop
dec
lahf
xchg
xchg
jg
lods
xor
cmpsb
push
cmp
mov
mov
loop
xor
movsl
inc
arpl
lea
dec
or
in
jnp
sbb
cmp
push
in
imul
inc
sub
inc
jecxz
in
inc
jecxz
rcll
scas
xchg
jae
mov
mov
pop
or
or
data16
jle
in
ds
lret
xchg
jno
xchg
fst
cmc
cwtl
leave
outsl
mov
into
push
mov
repnz
lock
jmp
pop
pop
scas
adc
jb
bound
lahf
stos
out
popf
push
push
push
jg
movsb
fwait
push
mov
aam
lods
xlat
lcall
mov
sarb
jno
jle
xchg
lret
adc
fdivs
mov
ljmp
push
mov
insl
xchg
sbb
add
mov
imul
adc
jmp
jle
cltd
lahf
sbb
sub
sub
xchg
mov
pop
or
adc
inc
cmc
jecxz
movsb
rorl
mov
mov
mov
xchg
insb
lret
and
subl
addr16
lods
adc
xchg
push
bound
into
gs
and
push
test
in
scas
and
je
pop
cmpsb
jne
xchg
jno
fcomps
jecxz
sarb
fwait
lods
loop
xchg
jmp
stc
pop
dec
dec
scas
xchg
jo
arpl
dec
mov
lods
cmpsb
add
pop
push
test
hlt
fstpt
xor
sbb
xchg
dec
add
loop
dec
push
outsb
lret
push
adc
push
repnz
mov
jne
dec
xchg
insl
clc
in
fmul
fsubrl
clc
adc
fdivrp
push
call
jno
xchg
mov
jg
xlat
jmp
clc
add
notb
sub
lret
stos
mov
sbb
dec
lahf
mov
xor
push
in
popa
es
mov
mov
popf
adc
cld
lahf
aaa
or
cmpsl
orb
or
add
mov
jmp
lea
fcmovbe
xor
lods
adc
dec
jnp
data16
lret
push
dec
dec
pop
sub
xor
adc
loop
lea
push
or
xchg
jge
xchg
es
inc
pop
add
xor
outsb
add
lods
es
adc
mov
aas
cmpsl
lock
add
ljmp
xchg
and
popf
cmc
mov
sub
std
loope
pop
jns
aaa
jae
sarl
xor
cmpb
in
arpl
aam
add
iret
lods
push
in
shrl
stos
jae
cs
cmpsb
xchg
in
mov
clc
lea
jmp
sub
mov
xchg
pusha
int
pop
out
jb
divb
into
arpl
mov
shrl
xchg
cmp
jne
idivb
xchg
notl
mov
mov
out
dec
repnz
lret
mov
cwtl
mov
xchg
add
push
or
test
and
insb
adc
inc
lret
rep
jp
notl
push
mov
repz
jmp
in
in
or
add
es
jle
stc
sarl
ret
shl
int
lret
mov
ljmp
js
lretw
jle
repz
cmp
scas
lret
cmp
test
int
mov
and
inc
testl
jb
cli
int
mov
int3
fucomip
xchg
popf
dec
dec
loopne
sub
sub
dec
int
lret
push
jne
out
addr16
rep
pop
adc
xor
pop
adc
cmp
insl
mov
gs
cmc
sbb
hlt
testb
aad
inc
pop
add
out
test
push
out
outsl
lea
jbe
pop
sub
arpl
popa
push
fsubrp
push
dec
int
dec
add
push
cmp
mov
mov
mov
ret
outsb
mov
ljmp
out
dec
xchg
fwait
mov
mov
mov
push
out
ds
sub
repz
mov
dec
xor
mov
mov
add
and
mov
add
std
fstl
mov
rcrl
subb
dec
cmp
mov
adc
jne
lock
xchg
xlat
dec
xor
sub
fst
cwtl
int3
in
inc
cmp
cs
out
or
decl
inc
xlat
jmp
pop
inc
mov
inc
push
dec
jge
xchg
adc
jb
mov
pop
fwait
test
mov
fwait
dec
sti
movsl
shrl
rorl
rcr
rcll
lock
dec
xor
xlat
adc
fcoml
stos
addr16
jle
xor
inc
push
aam
inc
dec
xchg
pop
mov
xor
push
int
movsb
stos
repnz
xlat
or
mov
cmp
inc
lea
in
lcall
sahf
dec
add
frstor
sti
outsb
adc
sub
cmp
push
pushf
mov
sbb
or
into
mov
mov
jl
jb
sub
scas
rorb
inc
subb
mov
test
stos
xor
sub
push
mov
sbb
hlt
mov
fistps
idivl
cltd
pop
aaa
xor
call
mov
push
xchg
xor
cld
arpl
lds
adc
minps
cmc
out
cmp
imul
fmull
fmull
call
sbbl
mov
xchg
dec
pop
aad
push
or
jp
dec
loop
out
add
add
fldenv
jo
leave
cmp
fwait
pop
adc
xchg
clc
mov
mov
negl
jb
sbb
push
loope
xchg
dec
adc
xor
sbbl
and
fwait
fs
lret
data16
popa
and
leave
add
push
jmp
add
test
mov
mov
gs
xchg
mov
xchg
or
jg
add
dec
je
stc
cld
movsb
mov
rclb
push
mov
xor
enter
xor
mov
mov
adcb
xchg
aam
sub
out
mov
or
mov
or
inc
in
gs
dec
ljmp
cltd
dec
aaa
ljmp
jbe
rcll
xor
xlat
cld
mov
push
jmp
out
notl
sub
sub
lcall
jno
mov
or
test
icebp
in
data16
loop
loopne
jb
addb
or
push
ljmp
into
iret
xor
or
testb
fidivl
jno
mov
frstor
inc
cli
jp
ret
movsl
daa
push
dec
jmp
or
cmpsb
jno
sub
xor
xchg
xchg
dec
and
mov
pop
lds
sub
leave
scas
repnz
and
in
fbld
inc
mov
pop
sarb
dec
dec
push
or
frstor
aad
daa
xor
dec
pop
or
adc
pop
adc
lret
or
pop
mov
inc
xchg
in
pop
cmp
mov
mov
cld
jne
imul
xchg
test
or
xchg
cmc
dec
xlat
jmp
cwtl
out
je
mov
aam
lret
test
pop
std
ljmp
shll
lods
into
icebp
test
fistpl
jg,pn
push
sti
or
ljmp
lahf
jle
int3
pusha
out
loopne
scas
ret
sbbl
les
js
xor
and
ficoms
cmp
and
cmp
push
jbe
or
xor
jmp
pop
shrl
push
movsb
mov
repnz
or
pop
mov
scas
inc
dec
or
push
and
mov
arpl
arpl
xchg
fdivs
xchg
xlat
lds
dec
int3
ja
lods
js
push
push
push
mov
adc
gs
aas
stos
imul
jle
pusha
dec
nop
stc
sbb
add
lret
xchg
pop
cmp
imul
xor
lock
cmp
pop
xor
rorb
xchg
pushf
ficomps
out
and
pop
shlb
sarl
repz
pushl
ret
clc
or
into
xchg
inc
rorb
shlb
and
ret
sbb
dec
ja
cmpsb
enter
xor
or
ror
fisttpl
fs
inc
pop
or
cmpsb
fwait
int
xchg
mov
outsl
xor
adcl
cmp
loopne
rclb
ljmp
sbb
xor
adc
test
inc
inc
mov
xor
movsb
xlat
stc
inc
repz
and
inc
negb
mov
adc
std
outsl
cli
dec
dec
jnp
pushf
cmp
jp
pop
push
jno
sub
jecxz
sbb
nop
clc
sub
jle
fdivrs
xchg
jmp
adc
mov
nop
mov
test
nop
psrlq
inc
nop
sarl
xor
cwtl
cmpsb
add
daa
popa
sahf
dec
stos
movsb
push
shl
repz
pop
jecxz
outsb
push
into
sub
in
fmul
enter
mov
xadd
outsb
sti
ret
repnz
adcb
sbb
push
lahf
mov
push
fninit
mov
mov
pusha
adc
inc
in
xchg
das
mov
push
outsb
gs
mov
das
jmp
mov
fdivl
insb
shrb
fwait
sub
imul
hlt
inc
jbe
adc
rcl
dec
insl
fwait
aam
icebp
shlb
int3
push
xchg
and
ss
stos
icebp
stc
sub
add
stos
jge
pushl
xor
lock
mov
jmp
cwtl
int
push
mov
and
cmp
arpl
mov
inc
out
and
scas
inc
push
adc
mov
xor
adc
lods
dec
xchg
sbb
jo
xchg
fildl
xlat
movsl
dec
fldcw
pop
push
lret
push
fmuls
add
pop
xrelease
arpl
out
outsb
mov
mov
lods
in
jmp
enter
aam
dec
and
dec
gs
stc
cmp
adc
and
stc
push
mov
mov
push
pop
call
imul
xchg
mov
or
test
dec
jns
push
out
loop
dec
in
shlb
dec
ret
shll
sub
dec
xchg
data16
aam
xor
cli
mov
push
inc
inc
pop
lea
mov
mov
in
mov
arpl
cwtl
fidivs
or
xor
xor
pushf
test
bnd
lock
mov
shrb
jp
mov
push
lret
insl
sub
ss
shl
or
gs
adc
enter
jecxz
in
int3
push
cmp
pop
jl
mov
mov
and
sbb
hlt
sub
sbb
mov
sub
loope
out
adc
mov
cmc
mov
jnp
stos
jnp
rolb
sbb
sub
ljmp
pop
or
or
ljmp
dec
sbb
fwait
loop
xor
add
cs
sub
and
push
mov
stc
cmp
in
test
sub
in
ficoml
in
stc
cmp
ficompl
add
enter
pop
fsts
ret
pop
pop
pop
bound
add
mov
rorb
push
fists
loop
add
scas
mov
icebp
arpl
sti
mov
aas
sbb
sbb
ds
sub
cmpsl
dec
inc
dec
std
push
popf
clc
xor
dec
xchg
fisttpll
adc
xor
cmp
pop
pop
mov
fwait
mov
fistps
mov
xor
out
out
adc
mov
mov
pop
cs
dec
data16
psubd
or
sahf
out
dec
test
call
ret
lods
outsb
jp
outsl
loope
sbb
bound
lret
lahf
xchg
xor
mov
sbb
or
push
out
mov
scas
jmp
loopne
int3
popf
lods
mov
shll
sbb
out
lret
gs
lock
cmp
pop
xchg
add
repnz
xor
call
add
xchg
pop
loope
add
mov
clc
test
mov
incb
lcall
mov
cltd
pop
lahf
out
out
ret
pop
int
pop
mov
mov
out
jmp
xlat
mov
xchg
push
add
cmp
loop
adcb
xchg
add
mov
mov
loop
ficoml
push
je
or
popf
lds
sub
ret
rcl
xor
pop
cs
dec
aas
stc
mov
sti
idivb
cmpsb
jae
pop
sub
cmp
push
push
cs
fisubl
pop
lret
or
imul
push
push
pop
xchg
flds
test
push
sub
and
arpl
dec
xchg
mov
xchg
sub
stc
cmpsl
pop
addb
test
out
xchg
or
cs
std
in
xchg
dec
and
and
pop
and
test
fistpl
in
mov
xchg
xchg
mov
cmp
in
icebp
or
imul
lods
push
test
fs
xchg
test
fiaddl
insl
stos
cld
pop
and
sub
mov
jle
sahf
dec
lret
jge
push
cmp
xchg
jns
pop
bound
imul
mov
inc
cmp
xor
movsb
rorb
and
aaa
daa
in
aam
sub
push
loope
shlb
cli
ret
dec
xor
in
mov
into
push
shlb
andb
arpl
call
jo
and
arpl
je
inc
pushl
inc
lcall
movsl
mov
dec
jmp
push
in
push
out
jecxz
js
xor
adc
or
int3
sar
outsb
sub
jecxz
int
loope
xchg
push
in
push
es
into
push
fistpl
ljmp
push
push
enter
lea
xchg
cmp
dec
fsub
or
or
repnz
jnp
dec
outsb
fsubr
push
or
jl
cmp
repz
repnz
mov
stos
test
test
and
mov
inc
movsl
push
shl
add
jecxz
enter
sbb
push
ficoml
in
sbb
call
push
out
mov
daa
push
sub
jmp
ss
int3
push
xchg
popa
mov
testl
ficoms
push
adc
push
mov
pop
sbb
in
mov
arpl
jg
push
mov
sbb
inc
int3
add
inc
jg
fimull
jno
fcmovu
push
or
cmp
add
push
push
pop
loop
cmc
sbb
shlb
int
dec
jg
sub
pop
cmpl
mov
testb
cmp
loop
dec
jecxz
dec
fdivrp
push
mov
jbe
and
in
enter
imul
pop
dec
pop
cli
in
sarb
push
mov
sbb
fists
imul
nop
cmpsb
fldl2t
rol
enter
imul
or
xor
add
aam
jp
mov
or
jmp
xchg
inc
mov
xchg
nop
add
out
xor
push
out
pop
sbb
add
xor
fldcw
dec
adc
xor
mov
inc
and
sbb
pop
out
iret
loopne
cltd
mov
mov
lahf
out
rol
adc
jle
mov
mov
mov
push
push
adc
sarl
aas
leave
out
dec
xchg
add
or
int
pushf
lahf
xchg
aad
das
leave
and
ljmp
je
lea
pop
mov
mov
fcmovbe
ret
and
push
es
or
insl
cmp
rcrb
repnz
add
add
ss
dec
bnd
jge
mov
mov
andl
sub
das
iret
pop
insb
xor
cmpsl
mov
and
nop
test
push
aad
adc
or
push
insl
sub
out
mov
cmp
jle
cs
mov
inc
sub
sub
dec
bound
leave
outsl
jge
sub
test
mov
sahf
jo
dec
or
movsl
sbb
fadd
dec
xor
add
addr16
insl
pop
xchg
jb
sti
xor
dec
xor
js
mov
jecxz
out
and
pop
dec
fwait
bound
aad
aam
dec
loop
jo
xchg
adc
mov
imul
nop
repnz
sub
cli
xchg
cmpsb
inc
out
push
push
ljmp
pop
sbb
jno
inc
cmp
sbb
lods
cmp
pop
adc
adc
push
lret
mov
leave
pop
pop
ret
adc
cmpsl
ljmp
lcall
jb
ljmp
sti
movsl
cs
sub
jno
rcrb
jmp
sub
jge
push
or
inc
dec
sti
mov
xchg
pop
and
mov
hlt
enter
cmp
mov
jg
repz
jo
out
inc
shl
std
dec
pusha
data16
push
or
xchg
arpl
fs
bound
cltd
mov
outsl
hlt
mov
mov
pop
dec
stc
rorl
fmul
add
lahf
pop
push
sbb
mov
mov
mov
cs
movsb
in
iret
std
sbb
inc
inc
mov
jmpw
push
insb
or
in
daa
imul
mov
add
iret
jg
or
cmc
xor
push
pop
jp
add
and
adc
decl
xor
js
pop
jnp
out
cld
ja
out
dec
inc
repnz
out
mov
aaa
mov
aam
test
xchg
insb
pop
push
jl
xchg
nop
xor
fstps
test
xchg
mov
add
lds
sbb
popa
test
gs
xchg
xor
pop
jecxz
xchg
adc
push
movsl
add
pop
or
lahf
movsb
into
call
into
adc
ljmp
out
or
hlt
rol
movsb
out
hlt
pop
out
test
mov
dec
stos
mov
std
sahf
daa
rcl
jle
mov
mov
out
or
mul
testb
rorb
out
mov
js
rol
in
xor
into
ljmp
adc
jbe
dec
xor
cld
mov
pop
jp
popa
cs
mov
js
dec
push
lret
enter
mov
movsb
repz
ds
inc
negb
cld
ret
movsb
or
daa
int3
stos
push
pop
push
lock
cli
dec
or
mov
pop
or
sbb
xor
dec
imul
dec
mov
sbb
or
or
add
mov
icebp
jnp
and
jge
jmp
fmul
icebp
sbb
call
lods
push
or
dec
cli
popf
mov
or
mov
ljmp
cli
ret
leave
icebp
loopne
adc
testl
ficoml
fsubrs
sub
xor
insl
lods
out
in
push
dec
jae
loopne
call
push
je
in
and
jmp
popl
rclb
sbb
je
ficoml
loopne
xchg
xor
lcall
jno
popl
jo
mov
fisubrs
mov
les
insl
stos
stc
shrb
xchg
inc
insl
lret
daa
test
mov
std
fsubrs
dec
ret
testb
sbb
adc
inc
or
or
xor
out
push
fldenv
cmp
cmp
mov
xchg
ja
adc
mov
cltd
sbb
int3
push
push
add
jl
mov
sti
in
scas
mov
das
jbe
out
fistpl
roll
add
cmc
push
xor
xchg
out
clc
add
ds
dec
inc
adc
int
sti
in
rcll
jle
loopne
dec
sarb
out
sbb
mov
sbb
leave
push
sub
nop
in
mov
xor
mov
mov
pushf
out
mov
push
mov
lret
mov
pop
sbb
or
popf
xchg
dec
push
dec
push
mov
sbb
ljmp
push
stos
mov
xchg
cld
cmp
xlat
ljmp
jmp
int3
ret
jge
jmp
jmp
cmp
cmp
sbb
cmp
inc
push
sbb
lret
sub
lds
pusha
out
lods
cmpsb
mov
cmp
mov
xchg
mov
adc
iret
mov
btc
addl
pushf
movsl
fldcw
pop
and
cmp
cli
or
imul
pop
dec
out
in
pop
mov
out
xor
pop
add
mov
cmp
repnz
dec
loop
push
sbb
outsb
loop
push
out
bound
test
sub
adc
movl
imul
cld
pop
inc
sbb
rcrl
pop
cmpsb
movl
dec
fiaddl
mov
fidivrl
es
sub
jne
je
adc
pop
sbb
cli
ss
aad
xchg
data16
sar
push
loope
sub
sub
das
cld
dec
sarl
inc
outsb
out
xor
in
inc
inc
pop
mov
pop
lods
xchg
sbb
nop
dec
xor
dec
ljmp
call
movsl
cmc
push
testb
stos
mov
xchg
inc
and
add
dec
repz
cmc
scas
dec
arpl
ja
std
lahf
ljmp
scas
and
jns
sub
lret
jmp
xchg
ret
frstor
in
cmpl
dec
sbb
js
fiaddl
outsl
leave
xor
jge
arpl
test
sahf
lock
push
xor
es
or
or
or
push
sub
test
xor
cmpsl
in
pop
rorl
dec
or
in
mov
push
xlat
repnz
or
subl
jnp
inc
sti
push
push
lcall
outsb
and
inc
jg
repnz
mov
fsubrp
dec
xor
sbb
and
adc
call
movsl
arpl
or
mov
adc
adc
mov
lret
mov
sbb
mov
pop
into
adc
int
and
push
mov
repz
ret
jae
push
insl
fisubl
inc
bound
data16
aam
add
les
mov
inc
adc
jg
dec
xchg
shl
cmp
ljmp
or
pop
popa
enter
pop
inc
aad
or
or
cmpsb
or
mov
lcall
aas
add
ljmp
xchg
inc
sbb
das
imul
cmp
repnz
iret
xchg
or
push
adc
jo
lods
outsb
mov
xchg
cmpsb
icebp
cmp
repz
push
mov
ret
in
cmc
pop
cmp
xor
add
xchg
out
ds
mov
lcall
mov
fmul
adc
xor
and
bound
fcoml
inc
ss
dec
dec
cmpb
adc
aam
mov
movsb
inc
and
push
daa
cmp
adc
jne
inc
dec
jmp
inc
leave
cmc
dec
or
in
rcr
imull
cmp
pop
hlt
aad
xchg
mov
push
push
adc
push
je
xchg
fistl
adc
loop
and
adc
popl
or
aaa
cwtl
sbb
xorl
arpl
push
aaa
cs
cli
dec
cltd
pop
jl
dec
test
jge
dec
rcrb
mov
push
mov
daa
fdivrs
push
fldl
xchg
pop
movsl
icebp
xchg
sbb
fcomip
mov
mov
inc
fildl
ds
push
mov
int3
adc
sub
ja
or
ljmp
pop
sub
dec
sti
dec
mov
mov
mov
pop
xor
inc
mov
xchg
cld
or
inc
mov
bound
push
inc
xor
inc
cmpsb
xor
gs
dec
xor
mov
dec
inc
xchg
inc
dec
imul
jnp
cltd
sbb
push
add
aas
insl
or
nop
mov
or
cmp
push
mov
mov
xchg
dec
stc
int
jmp
push
push
int
loope
mov
ds
cltd
add
lods
xor
out
das
xchg
add
cmc
add
xchg
pop
or
xor
repz
repnz
and
push
fdivrs
inc
cs
mov
push
adc
or
inc
and
push
mov
fdivl
pop
xchg
mov
xchg
pop
jg
adcb
add
jp
mov
cmp
fsubl
or
incb
hlt
mov
sbb
jns
push
xchg
cmp
pop
jno
jnp
ds
pop
pop
addr16
mov
mov
sti
cwtl
jne
int3
repnz
and
pop
mov
push
adc
ret
clc
negl
jecxz
aam
mov
lods
or
test
lret
pop
stos
mov
ror
and
mov
test
cmpb
inc
or
hlt
stc
hlt
add
aas
and
test
adc
or
loope
jmp
sub
inc
xchg
inc
stos
ja
loop
and
jge
push
dec
adc
mov
push
pushf
pushf
mov
jne
sub
xor
nop
inc
cli
mov
dec
add
jns
daa
into
jo
adc
scas
inc
fmull
loopne
dec
gs
lret
in
hlt
dec
negb
push
int
xchg
clc
or
mov
dec
aam
loope
cmp
ja
das
adc
push
rcrb
ss
ss
push
push
jnp
out
pop
icebp
xchg
ret
push
dec
roll
insl
cmpsl
lock
sbb
subb
jmp
mov
xchg
jnp
in
and
dec
mov
jne
dec
jb,pn
lret
ja
mov
push
inc
xchg
and
dec
in
das
cmp
mov
cmpb
loope
subl
leave
ljmp
or
insb
mov
or
aam
cmpsl
shll
int3
rol
clc
sbb
cmp
es
pop
cmp
sahf
mov
pop
lret
jmp
repz
dec
xchg
and
rcll
orl
les
pop
xchg
imul
pop
or
or
push
sub
cmpsl
add
je
adc
mov
mov
into
inc
pop
adc
push
icebp
sub
add
and
pop
out
add
add
jp
mov
ror
enter
jecxz
test
jno
mov
arpl
daa
cwtl
cmp
inc
mov
mov
sahf
cld
paddw
imul
es
out
add
jb
js
repnz
mov
ljmp
pop
push
add
adc
push
add
mov
xlat
in
rcrl
out
mov
call
cli
outsb
ret
sbb
fimuls
mov
je
rep
movsl
repz
test
lcall
lea
mov
xchg
sbb
fisttps
dec
and
loope
jecxz
add
sub
jmp
push
insb
and
add
lcall
scas
movb
inc
gs
fs
outsl
jecxz
decb
push
ds
jnp
aaa
xchg
fistpl
push
fnstsw
mov
fbstp
and
jge
push
sti
into
fdiv
or
mov
inc
scas
and
fimull
jl
or
xchg
jg
jmp
jne
out
test
xchg
clc
push
hlt
mov
out
out
out
addr16
call
push
mov
in
pushf
or
leave
xor
in
dec
inc
test
xchg
outsl
dec
dec
movsb
rcrb
imul
pusha
xchg
imul
leave
inc
adc
jmp
mov
jnp
adc
sbb
fsubs
or
ror
or
std
dec
outsb
push
jo
push
mov
shr
pop
rcrb
das
adc
iret
pop
daa
outsl
push
jno
das
subl
xor
inc
enter
push
imul
push
movsl
add
sub
mov
setb
cld
pop
mov
test
out
shrl
xchg
loopne
repz
mov
in
xor
mov
fidivrs
shl
push
aaa
adc
adc
cmp
mov
ret
dec
xor
jns
pop
mov
lea
jmp
sub
daa
jne
jp
push
inc
mov
popa
push
rcrb
mov
cmc
sub
cli
rcl
lret
jo
inc
into
andl
add
dec
ficomps
add
push
jle
popf
ficomps
pop
lret
aas
out
mov
jmp
pushf
push
into
out
lret
dec
or
out
push
mov
add
or
cli
in
test
adc
xchg
xchg
jae
ret
stos
leave
or
test
mov
add
popa
mov
call
dec
test
roll
pop
pop
pop
or
inc
loopne
adc
lretw
orl
or
dec
push
lret
mov
dec
out
lea
imul
mov
dec
test
or
enter
dec
or
aad
xlat
inc
inc
fs
dec
imul
into
fisubs
mov
nop
shlb
xor
and
das
and
dec
das
pop
lret
call
cmp
push
push
sarl
imul
mov
out
sub
sbb
lret
repnz
dec
loope
ss
pop
inc
flds
dec
mov
fistpl
sbb
adc
ret
imul
jmp
push
push
add
sbb
mov
repnz
out
push
jno
sarb
test
ds
lret
mov
mov
pop
mov
xor
sub
cmpsb
or
and
nop
leave
call
push
dec
ljmp
lret
sahf
pop
fnstcw
inc
push
subl
dec
div
not
into
dec
inc
jmp
sarb
popa
movsb
leave
rcr
xor
into
or
sub
enter
mov
xor
jbe
fsts
ret
push
and
xor
dec
insb
gs
xchg
push
lcall
mov
lret
test
repz
loope
hlt
or
push
lea
movsb
scas
or
push
push
mov
cmc
int
mov
fsubs
push
int3
inc
mov
inc
dec
pop
or
xor
imul
scas
popa
inc
push
mov
dec
push
jnp
adc
inc
sti
or
mov
insb
xchg
mov
fcomip
inc
jmp
testl
lea
push
cmp
push
sub
xchg
pop
xor
out
test
das
mov
test
dec
call
aam
insl
lods
lds
leave
add
cmp
xchg
cmp
push
dec
mov
xchg
cs
aam
and
call
sti
lock
mov
inc
sbb
fdivs
in
push
push
test
stos
push
mov
pop
pop
stc
mov
repnz
dec
mov
inc
push
out
mov
shrb
pop
jnp
add
and
mov
cmp
in
xchg
mov
add
sbb
scas
pop
lret
push
icebp
add
das
stc
mov
push
or
daa
pop
pop
shlb
ja
stos
cli
dec
das
cmc
dec
jp
inc
aad
insl
sub
cwtl
push
adc
fiadds
popa
inc
jmp
sti
loop
scas
dec
inc
mov
shrb
out
inc
ljmp
sub
add
insl
out
loop
jecxz
bound
jg
and
or
loope
mov
ffree
test
stos
xchg
mov
adc
stos
pop
dec
sbb
and
xchg
lahf
ljmp
lret
push
or
mov
idivb
xchg
xchg
add
mov
repz
xor
je
in
mov
lcall
cmp
cmp
and
xor
mov
fldpi
and
insl
push
int
pop
sbb
jecxz
cmp
bound
pop
xor
inc
mov
jae
or
or
xchg
sub
dec
xor
xchg
in
xchg
mov
sbb
ljmp
iret
outsb
fsubrl
int3
pop
jb
mov
pop
push
rol
cmp
enter
aad
cs
mov
mov
pop
ljmp
mov
cmpsl
lcall
test
adc
rclb
mov
lock
fwait
or
inc
in
dec
decb
loop
sti
sub
cmpsb
inc
dec
ljmp
xchg
mov
shl
rcrl
xchg
push
adc
mov
sbb
jae
or
insl
repnz
mov
subl
jo
add
cmpsl
jl
int3
flds
sbb
adc
xor
cmp
sbb
xor
loope
test
outsb
jb
cs
sbb
push
xor
mov
cmp
cmp
push
lret
sub
es
ss
scas
or
negl
sbb
cwtl
jmp
repnz
popa
in
popf
arpl
test
dec
stc
lcall
das
jne
add
pop
mov
dec
push
leave
xor
push
mov
add
dec
and
xor
or
dec
push
lcall
mov
fdivl
das
dec
sbb
cmp
fdivrl
and
test
or
push
cmp
cmp
ret
in
xchg
xor
xchg
pop
inc
push
mov
imul
lret
sub
or
cltd
jmp
cmc
fwait
popl
ljmp
pop
adcl
ret
call
cld
cmpb
jb
ljmp
sub
xchg
adc
clc
dec
sub
leave
xchg
pop
and
lahf
loope
mov
fnstenv
inc
cmp
std
mov
arpl
popf
sbb
test
cli
imulb
or
sti
dec
push
icebp
ficoms
sub
inc
adcl
sbb
jmp
sub
scas
xor
cbtw
dec
add
pusha
mov
cmc
jl
push
popa
sub
outsl
cli
sbb
cmp
fldenv
lcall
adc
pop
xchg
lret
arpl
sub
pusha
cmp
popa
or
xchg
pop
inc
jecxz
jbe
addr16
xchg
jle
nop
out
mov
sahf
nop
inc
or
mov
adc
jmp
aam
push
divl
ljmp
inc
inc
call
push
inc
sarb
xlat
es
dec
sbb
and
or
dec
inc
inc
daa
add
lds
xor
sub
sub
mov
push
ljmp
add
outsb
jnp
add
cld
push
int3
iret
insl
inc
mov
out
mov
cli
xor
push
jno
xor
or
int3
pusha
lret
cmp
mov
hlt
in
ds
xor
mov
pop
ds
mov
mov
push
jne
mov
icebp
jmp
xor
jae
inc
jp
arpl
movsb
fistl
pusha
mov
inc
or
adc
cld
inc
mov
imul
int
rol
cmp
popa
lret
add
in
cs
push
add
and
mov
inc
inc
xchg
cltd
das
mov
pop
sbb
lret
push
push
in
stos
rclb
cmp
mov
fcoms
push
add
aad
testl
mov
xor
les
adc
fisttpll
pop
pop
das
into
add
jnp
sub
add
je
addr16
or
imulb
sbb
gs
sub
shlb
and
jmp
ss
dec
cld
cmp
jbe
mov
and
dec
into
repnz
xlat
loope
out
and
pop
lret
pusha
inc
ds
dec
inc
daa
dec
setb
dec
xchg
fmul
cld
xor
mov
push
cmp
test
push
mov
push
adcb
leave
xor
lock
mov
pop
sbb
enter
lds
push
lods
cmpsb
or
mov
iret
test
add
cli
insl
sub
cli
dec
out
sti
int
mov
mov
mov
push
mov
loope
arpl
repnz
popf
mov
mov
mov
xor
add
out
int3
stos
mov
xchg
mov
xchg
hlt
adc
inc
and
push
out
popf
call
jno
mov
fsubr
mov
mov
into
cmp
sti
xchg
std
push
pop
adc
sbb
adcl
jns
mov
into
mov
xchg
mov
stc
or
js
xchg
sbb
adcl
into
push
and
pop
fildl
ret
cs
pop
or
pop
cmp
xor
and
xchg
stos
mov
inc
pop
cs
mov
fimull
sbb
pop
adc
cld
leave
sub
or
flds
push
outsb
mov
rcr
xor
outsl
fs
pop
movsb
mov
adc
mov
lea
fsubl
mov
jl
lds
add
jmp
jbe
les
push
xchg
sbb
imul
jle
lret
xchg
cmpsb
sbb
les
aad
testb
or
jne
and
sub
dec
jo
into
and
ljmp
dec
xchg
pop
test
mov
sub
cmp
mov
cld
sub
fcomi
pusha
xchg
insl
fwait
mov
mov
cmp
nop
sub
je
ret
jns
sub
xchg
bnd
arpl
jmp
jbe
jge
int3
clc
jmp
push
push
std
shl
or
stc
ljmp
in
add
call
into
fwait
sahf
fisttpll
out
sub
mov
out
xor
clc
shrb
add
bnd
inc
cmp
arpl
mov
dec
iret
adc
dec
popf
add
adc
mov
shl
dec
js
xchg
push
push
pop
mov
sti
in
out
add
or
inc
outsl
jns
push
lcall
pop
data16
cmpsb
repnz
mov
jne
xchg
ljmp
sahf
idivl
imulb
cmp
push
dec
sub
jmp
cmp
cmpsl
or
shll
push
shl
mov
stos
inc
mov
pop
aas
adc
mov
lea
leave
pushf
fs
cmpsl
mov
insl
xchg
mov
dec
adcb
dec
lods
mov
mov
xchg
in
sbb
jg
ljmp
or
lods
xchg
es
inc
insb
mov
xor
push
push
sbb
hlt
and
lret
sub
into
dec
dec
jecxz
sti
orl
inc
in
les
fildl
cmp
pop
xlat
cmp
or
fcom
aas
jbe
push
pop
inc
out
mov
loope
xor
fnstsw
sbb
sub
mov
fs
dec
js
xor
sbb
mov
ds
popf
movsl
adc
dec
dec
push
cmp
pop
aad
pop
jb
in
jnp
or
or
xchg
int3
or
imulb
je
dec
cmpb
jle
mov
sub
xchg
arpl
xor
popa
mov
sub
into
cltd
sahf
xlat
sbb
dec
and
adc
cmp
lds
add
and
mov
loop
fimuls
out
pop
mov
jns
pop
jmp
imul
adc
pop
cltd
dec
movsl
mov
hlt
xchg
inc
pop
out
jno
mov
sbb
cmp
jae
mov
ljmp
sub
inc
inc
stos
sbb
sar
flds
into
push
cmp
dec
jecxz
sub
cmc
xchg
push
jge
jb
or
lret
out
or
jge
mov
lods
inc
xor
and
dec
arpl
inc
add
adc
mov
mov
dec
test
adc
push
mov
test
mov
xchg
sub
cs
jmp
inc
cmp
add
movsb
cmp
les
icebp
dec
jg
fmull
jle
xchg
aas
and
jle
add
ret
loop
jecxz
imul
pop
data16
clc
lret
and
jle
add
inc
dec
test
cmpsl
addr16
add
inc
scas
ljmp
inc
sbbb
sahf
or
cli
mov
push
xor
fisttpl
mov
dec
cli
inc
icebp
xchg
sbb
pop
xor
push
add
push
or
dec
iret
test
mov
pop
lods
leave
outsb
mov
stos
adc
ret
dec
pop
mov
cwtl
lock
mov
ret
imul
or
dec
push
arpl
in
adc
dec
insb
xor
cld
and
fdiv
xlat
rcr
mov
sbb
cmp
or
add
sub
add
imul
xchg
test
cmp
xchg
shl
outsl
sub
movsb
push
and
inc
fnstsw
negb
cli
mov
push
iret
pop
or
xchg
xor
lds
xor
mov
dec
lret
lret
es
mov
push
pop
push
pop
cltd
int3
icebp
into
dec
mov
and
cmp
shll
xchg
push
xchg
dec
add
mov
into
sbb
les
das
adc
movsb
movsb
fisttps
sahf
pop
adc
xor
subl
out
aad
sahf
loop
loop
push
dec
dec
sub
jmp
and
test
adcb
iret
call
lahf
ret
or
jnp
mov
inc
insb
pop
push
mov
iret
mov
ds
pop
rorl
mov
sub
outsb
or
or
rcrl
inc
or
add
aas
pop
loop
pop
outsl
aaa
lret
push
push
clc
inc
push
mov
in
cli
mov
xor
int3
cs
insb
push
nopl
lcall
push
mov
xor
mov
sub
push
shrl
rcl
or
fwait
xchg
push
leave
xor
mov
out
stc
push
inc
out
cs
push
push
adc
mov
ss
pop
es
iret
xchg
adc
ss
push
insl
or
in
lea
ds
mov
pop
rcrb
pop
test
out
sbb
ss
adc
mov
sti
mov
xor
pop
xor
cmpsl
jecxz
es
outsl
xor
repnz
ds
popf
rcrl
inc
roll
mov
loope
ds
pop
fwait
rcrl
dec
add
aas
test
xchg
fisubl
xchg
mov
jo
jmp
lret
xor
xchg
andl
cmp
add
jns
push
jns
outsl
into
sub
movsb
mov
dec
cwtl
std
xchg
pushf
les
loop
sub
inc
test
mov
push
int3
inc
out
icebp
dec
push
xor
call
or
dec
pop
into
pop
fs
out
xchg
imul
inc
roll
jecxz
popf
stos
jge
iret
data16
jmp
mov
fldcw
dec
xor
push
pop
rcrl
mov
mov
sbb
dec
jge
stc
loopne
jle
rcl
gs
out
jp
loope
iret
pushf
pop
mov
inc
cmp
or
push
jecxz
sbb
int
adc
mov
addr16
aad
and
xor
mov
icebp
inc
jmp
out
outsb
roll
xchg
adc
loopne
hlt
aam
addb
xlat
xor
sub
in
push
in
adc
test
adc
loopne
popf
jns
stos
clc
fistl
jno
mov
push
xlat
sbb
push
mov
fisubs
repz
rclb
or
lea
movsbl
jno
into
rorl
aad
int
shlb
push
push
lret
dec
xchg
mov
pop
sub
jb
repz
xor
lods
cli
and
sub
sub
in
pop
arpl
sub
mov
lea
or
int3
or
dec
jne
popf
mov
aas
add
pop
xor
xorb
lods
add
ret
out
les
nop
xor
adc
sti
icebp
repz
orl
addr16
decl
add
nop
addl
mov
lahf
lods
pop
sahf
sub
out
jmp
lahf
scas
lods
cmp
ljmp
mov
fldt
push
fstl
mov
mov
adc
into
xor
jecxz
dec
add
insl
sahf
cmp
dec
mov
lods
stos
jmp
xor
dec
dec
les
das
xchg
pop
adc
xchg
stos
add
mov
cmp
out
or
inc
rcr
addr16
ret
nop
mov
adc
call
or
xor
or
sub
push
pop
les
inc
mov
repz
and
in
cmp
cmpsb
js
call
ja
lahf
cmp
or
xchg
pop
or
mov
or
push
push
out
aas
movsb
lea
or
stc
fs
jle
mov
push
lret
pop
mov
jecxz
incl
loop
push
pop
xchg
popf
bound
xchg
dec
add
lret
lahf
js
push
dec
mov
jbe
jbe
cli
fcomi
in
sub
and
jge
enter
xchg
call
push
pop
pop
aam
andb
dec
sub
mov
lods
sbb
fwait
add
mov
das
mov
jge
and
imull
push
pushf
repnz
mov
in
jmp
imul
push
sub
ret
push
jecxz
addr16
jns,pt
test
mov
pushf
roll
pop
in
pusha
aaa
push
pop
test
adc
andl
pop
and
mulb
push
andl
fistpll
sahf
arpl
stc
or
aaa
addr16
fwait
ljmp
sub
inc
mov
cs
xchg
jmp
aam
cmp
pop
roll
xchg
inc
jmp
adc
push
pop
mov
ss
xchg
das
xor
int
sub
cmp
mov
fisubrs
cmp
iret
jns
push
cwtl
cwtl
jns
bound
rolb
xchg
mov
mov
into
in
repnz
jge
mov
sub
or
repz
sbb
jo
int3
lea
lds
sarl
and
bnd
insb
xor
lea
add
sub
aaa
sbb
pop
mov
int3
inc
inc
mov
mov
sub
jbe
push
mov
dec
insb
jmp
adc
imull
dec
cmp
cmpsl
in
bound
or
test
fsub
jne
fstps
lods
imul
and
das
jmp
add
daa
mov
jecxz
cmp
outsb
sbb
dec
lods
aad
mov
sub
or
dec
ret
cld
arpl
rolb
fistl
aas
push
jle
hlt
insb
and
out
jns
sahf
sarb
pop
out
aam
in
fmull
mov
push
and
outsb
dec
out
or
push
call
in
jmp
mov
push
push
dec
in
sti
aad
repz
into
outsb
dec
dec
js
pusha
imul
pop
add
insb
inc
mov
sub
xlat
lods
pop
xchg
push
mov
add
movsb
mov
inc
mov
scas
leave
popa
jns
data16
iret
pop
add
xchg
fs
xchg
sahf
and
cmc
mov
shll
xchg
sbb
add
sarb
inc
in
mov
jbe
mov
xchg
push
lods
in
clc
aad
pop
mov
shl
mov
add
imul
xor
inc
int
pushf
sbb
add
cmc
clc
mov
dec
sarb
mov
jge
inc
aaa
mov
imul
xchg
mov
xchg
call
xor
add
mov
xchg
addr16
scas
push
lahf
fistps
loop
loop
in
xor
iret
add
test
mov
push
xchg
mov
jl
cs
mov
mov
cmpl
push
pop
loope
push
test
dec
cmc
imul
in
xchg
lret
fdiv
rcll
jnp
mov
mov
sub
push
mov
shlb
test
push
dec
or
into
ss
cmp
cld
mov
fistl
mov
mov
inc
lahf
movsl
pop
clc
jno
das
push
addb
data16
das
outsl
xor
mov
jbe
stos
ljmp
lods
cmp
adc
xchg
push
and
jge
lods
ds
xchg
pop
mov
ret
adc
and
inc
fwait
call
stc
pop
test
mov
push
sbbb
nop
sarl
push
notb
loopne
or
popa
push
inc
inc
xchg
inc
ja
lock
xorl
test
dec
or
in
lea
mov
in
inc
jmp
popa
fwait
dec
dec
adcb
aam
fsubl
scas
rcll
xchg
and
mov
xchg
add
mov
add
addr16
in
movsb
cmp
lahf
inc
daa
push
icebp
ret
fimull
out
lea
loopne
mov
shr
and
push
dec
sbb
xchg
push
iret
dec
cmpsb
mov
jecxz
fildll
jecxz
and
mov
cwtl
popf
sbb
das
mov
mov
sub
addb
jmp
loop
xor
popa
sub
xor
cmp
sbb
test
adc
xor
cltd
dec
inc
cs
imul
adc
ds
std
jno
loopne
mov
icebp
arpl
jecxz
lret
iret
imul
test
dec
lods
jmp
ret
outsl
decb
lock
dec
rcr
xchg
push
scas
test
push
daa
xchg
das
and
jge
arpl
jns
inc
mov
daa
xor
hlt
ret
sbb
xchg
arpl
cmpsl
push
lds
add
inc
loope
push
shl
icebp
inc
scas
test
mov
das
adcb
inc
out
stc
loop
adc
push
pusha
push
cld
lock
out
fadds
je
lea
out
stos
or
pop
dec
test
xor
sub
or
in
sub
and
push
fs
inc
xor
ljmp
and
fst
cli
adc
mov
add
arpl
jge
loopne
outsb
fists
stos
fwait
pop
push
push
dec
push
xor
lea
sbb
and
jmp
subb
pushf
xchg
mov
mov
scas
cmp
stos
ret
sbb
leave
jmp
fildll
enter
sarb
imul
and
ja
outsl
pop
in
push
adc
inc
mov
or
mov
sbb
loop
or
sbb
pop
repnz
xchg
subb
ss
mov
addr16
jbe
idivl
incl
sbb
clc
ljmp
cld
xor
mov
insl
cmp
leave
jae
pop
push
sub
loope
mov
adc
jp
and
arpl
mov
ljmp
movsl
adc
stos
or
addl
adc
out
test
flds
cmp
xchg
pop
push
arpl
add
xor
inc
xchg
mov
adc
mov
vrsqrtss
mov
xchg
push
out
jmp
movsl
into
pop
pop
push
mov
or
mov
push
lds
mov
mov
mov
je
push
jl
lock
xchg
dec
mov
adc
mov
jo
mov
mov
sub
lcall
mul
adc
roll
lret
ret
fistl
ja
into
ret
ss
mov
inc
clc
dec
lea
xchg
icebp
iret
out
pop
adc
popa
arpl
adc
movsb
lret
mov
cltd
shlb
popa
xorb
fisttps
lock
lods
rclb
xchg
push
rolb
pusha
sti
push
int
push
cs
adcl
xchg
imul
fdivr
out
cwtl
dec
xor
sti
rclb
mov
stos
out
push
add
and
ds
inc
pop
mov
nop
and
xor
ds
bound
test
jae
outsl
stos
push
or
rcl
fidivrs
in
outsl
xlat
rolb
mov
aaa
leave
pusha
xchg
rclb
sub
push
cmp
pop
fadd
jmp
cmp
aas
out
add
fdivrs
cwtl
cltd
lock
out
in
sub
sub
mov
cli
or
xor
xor
mov
addl
sub
sbb
and
negb
adc
addr16
push
jl
int
into
in
out
xor
jl
push
adc
int
dec
xchg
adc
mov
xchg
dec
xchg
in
xor
add
lcall
push
lret
bnd
sbb
push
cmpsb
dec
pop
sbb
pop
xor
divl
lahf
push
xor
mov
and
call
sti
lock
jbe
dec
dec
adcb
and
loope
clc
aas
jge
sub
sub
nop
sub
inc
fsubrl
pop
cltd
xor
inc
imul
lea
xchg
fdivs
cld
mov
lock
mov
insl
jne
movl
and
lahf
fildl
sbb
or
outsl
pop
xor
iret
loope
xor
pop
mov
das
iret
mov
lret
and
test
mov
xorb
cmp
in
jmp
mov
jecxz
mov
loop
int
aad
popf
push
inc
sub
and
arpl
js
ficompl
push
les
or
das
jge
mov
sub
fcomi
pop
ljmp
adc
imul
jae
xchg
clc
and
mov
pop
xor
mov
pop
loopne
mov
cld
pop
xor
lods
pop
dec
jle
rep
fbstp
dec
mov
jl
inc
insl
jns
rcrl
scas
jmp
movsb
stos
icebp
sub
ds
push
mov
mov
out
sar
repz
roll
int
mov
in
jecxz
push
inc
in
sub
insl
cld
jmp
je
stos
adc
dec
mov
stc
aam
rorl
data16
fyl2xp1
push
dec
mov
lahf
sarb
mov
cmp
cs
lods
push
fiaddl
in
flds
sub
dec
mov
sbb
xchg
xchg
jmp
jecxz
push
cmp
repz
mov
pop
dec
ficompl
jae
out
sbb
push
stos
lods
dec
rolb
mov
fimuls
outsb
fst
cmp
cwtl
std
mov
rcll
jae
xor
pop
mov
lods
sbb
pushf
jnp
fmull
iret
daa
cmpsb
pusha
ss
fs
or
add
mov
fbld
mov
aam
inc
or
pop
pop
idivl
add
jmp
out
pop
push
and
shrl
lea
outsl
sbb
ds
mov
faddp
int3
ja
scas
sub
fst
je
sub
push
mov
js
bound
dec
aad
in
jg
idiv
das
xchg
push
mov
push
scas
dec
shlb
cmc
popa
pop
daa
ret
decb
mov
ss
cltd
lret
xor
enter
mov
arpl
cwtl
push
in
clc
mov
into
aaa
and
cmpsl
stos
mov
mov
fmul
dec
jmp
in
sub
push
loopne
call
add
mov
push
gs
mov
pop
mov
mov
pop
add
imul
add
sub
dec
and
xor
lods
jne
pop
int
push
dec
movsb
inc
fstl
icebp
dec
mov
sub
js
xchg
movsb
dec
std
rolb
sub
sbb
mov
mov
cmpsl
je
xchg
mov
movsb
out
xor
aad
loop
ljmp
lock
xor
and
test
mov
jo
inc
sub
mov
inc
mov
pop
hlt
push
jle
insl
rolb
clc
stc
xlat
mov
ljmp
daa
imul
jne
xor
das
test
xor
gs
popf
or
movsl
adc
jmp
js
xor
fsin
int3
cld
test
cmp
daa
pop
cmp
lcall
push
into
es
push
cld
adc
cmp
push
sbb
repnz
pop
bound
in
fs
mov
mov
push
mov
adc
push
jmp
fisttpl
in
movsb
lret
mov
mov
inc
push
jnp
inc
dec
cmpsb
mov
inc
into
jg
mov
lcall
out
jae
xchg
jp
xor
cli
mov
sbb
mov
cmp
lds
ficoml
inc
mov
push
pop
pushl
lret
or
jmp
cli
inc
mov
push
loopne
fstl
ljmp
inc
mov
in
arpl
inc
mov
sti
sahf
bound
out
ljmp
xor
sub
jmp
fistps
das
shll
fisttps
pop
jle
push
fistps
fdivl
push
cld
pop
cmp
cld
xchg
push
cld
and
decl
cli
pop
add
mov
jp
xchg
ds
pop
popl
cmp
jnp
jmp
adc
stos
xor
jge
push
clc
inc
popa
inc
into
xlat
std
cmp
xlat
xchg
cmp
xlat
xchg
mov
push
pop
add
xlat
xchg
fadds
jae
xchg
and
dec
das
or
sahf
or
mov
std
pop
push
pop
or
sub
imull
std
xor
inc
scas
mov
aas
pusha
add
aad
rclb
xchg
mov
inc
xchg
xchg
xchg
fiadds
in
lret
push
mov
xor
add
int3
inc
inc
out
stc
dec
ljmp
pusha
je
push
fidivrl
hlt
xchg
jbe
xchg
jae
jno
movsb
mov
ljmp
jge
insl
scas
mov
mov
ds
fldenv
loop
dec
push
fiaddl
cmc
mov
divl
aas
fstenv
cld
pop
inc
js
lods
hlt
jno
mov
movsl
stc
mov
mov
mov
or
fidivrs
cmp
adc
jmp
inc
rcl
sbb
mov
jge
mov
stc
dec
push
push
inc
push
sbb
clc
xchg
dec
ss
pop
fdivs
mov
dec
adc
loope
xor
inc
or
or
inc
mov
push
cmp
movsb
mov
fisttpll
adcb
xlat
daa
inc
mov
fs
mov
mov
push
mov
scas
test
js
adc
sub
inc
iret
lea
or
fwait
stc
mov
cmp
sub
sub
test
dec
int
shlb
add
dec
xor
movsb
aaa
inc
sbb
sbb
sbbb
lahf
shll
add
int3
mov
adc
or
stos
test
xor
add
loopne
outsl
push
dec
dec
inc
inc
lds
bound
adc
leave
push
pop
push
sbb
sbb
andb
sub
pop
jne
jecxz
mov
mov
xor
inc
mov
fadds
mov
jecxz
cmp
and
in
rcll
push
iret
mov
flds
dec
pushf
mov
iret
adc
sub
mov
es
test
pusha
xchg
cmp
and
cmp
jnp
and
stos
add
jle
insl
mov
fwait
arpl
push
bound
fstps
lahf
insb
inc
lcall
xor
fdivrp
inc
inc
cli
stc
into
sub
movsl
mov
data16
outsl
push
dec
iret
movsl
mov
xor
lcall
xchg
add
mov
dec
gs
int
ljmp
inc
inc
mov
lcall
out
arpl
dec
jne
ss
cmp
jbe
not
fisttpll
jns
dec
outsb
mov
rcrl
inc
xchg
mov
cltd
xchg
es
fildll
clc
sub
int
lcall
push
push
ret
in
rcll
xchg
and
sti
lock
cmpsb
test
les
push
mov
xor
mov
insb
lods
cmpsb
lahf
jnp
lock
fcmovu
test
adc
mov
inc
pop
xchg
mov
addr16
insb
jo
shrl
flds
addr16
add
shll
int3
xor
mov
mov
mov
and
dec
mov
fimuls
jb
push
rcl
jl
pop
int3
std
ljmp
popa
push
mov
pop
push
cmp
mov
std
cmp
xchg
lret
dec
pop
mov
mov
stos
xchg
fmul
push
or
enter
jne
xor
testl
mov
mov
xchg
movsl
adc
arpl
jns
into
adcl
aaa
jbe
xor
adc
nop
push
xchg
xchg
inc
push
mov
pop
sahf
push
call
mov
clc
mov
outsl
pop
out
inc
in
sti
lahf
movsl
mov
jecxz
sahf
aam
jecxz
aas
or
pop
addr16
dec
push
xlat
leave
mov
cmpsb
or
mov
dec
jp
lret
pop
loopne
test
nop
fsubl
sbb
fimuls
jle
add
imulb
aad
jne
leave
test
and
mull
out
fucomp
cld
mov
mov
dec
lea
imul
fimull
shrb
xor
cs
cmp
stos
mov
push
push
cmp
fnstsw
aam
mov
outsl
dec
outsl
leave
outsb
scas
pop
mov
int
jg
xor
out
push
add
xchg
es
xchg
cltd
addr16
in
dec
cmc
mov
pop
mov
jno
scas
cmpsl
mov
cmp
out
fst
jbe
pop
in
outsb
inc
rorb
push
clc
xchg
or
lahf
dec
in
jb
lods
jb
mov
aad
xchg
inc
inc
inc
int
scas
hlt
lahf
lret
mov
incb
std
mov
sahf
es
adc
outsb
pop
add
mov
ss
ret
gs
out
clc
cld
stos
cmpsl
pusha
cs
out
push
inc
dec
push
cmpsl
stos
les
fdiv
and
rorl
push
mulb
or
aas
push
sub
scas
andb
pop
lahf
shrb
push
lret
testb
inc
push
shr
xchg
movsl
xlat
sbb
jmp
fsts
pop
scas
shll
out
pop
cmp
aad
repnz
div
push
xchg
adc
ljmp
jp
pop
inc
testb
adc
inc
ljmp
inc
ret
xchg
adc
mov
pushf
test
lret
add
popa
iret
sbb
inc
popf
xchg
sarb
sahf
scas
and
mov
aam
dec
arpl
mov
mov
sub
push
push
push
mov
push
sub
addb
xchg
movl
dec
and
popa
lods
stc
lea
dec
fwait
add
test
sahf
data16
into
ja
lret
mov
repnz
adc
xor
add
lcall
inc
xchg
cmpb
sbb
sti
gs
popa
in
xchg
movsb
fsincos
fimuls
jno
out
stos
icebp
xor
adc
ret
pop
pop
jecxz
and
lret
pop
inc
inc
cli
dec
and
imul
or
mov
cmc
adc
cltd
inc
sub
scas
and
jae
dec
jp
jmp
adc
mov
pop
les
jl
std
ds
scas
push
aam
fsubp
push
out
dec
jns
jecxz
mov
jecxz
call
subb
stos
out
mov
mov
mov
mov
mov
mov
js
adc
inc
push
jge
fld
mov
cmpsb
cmp
fisttpl
imul
xor
dec
xchg
mov
adc
ret
imul
dec
fiadds
or
jnp
rep
out
jmp
inc
loope
cmpsb
pmaxsw
popl
outsl
cmp
daa
sbb
cmp
aam
adc
mov
arpl
not
lods
mov
ficomps
or
sbbl
stos
or
loop
aaa
rolb
aaa
rcrb
xor
xor
mov
arpl
les
push
shl
aam
mov
lds
and
add
iret
sub
dec
mov
adc
xchg
and
sub
dec
mov
test
xor
mov
mov
sbb
push
adc
or
ret
cmp
in
mov
cs
sahf
lcall
fsts
cwtl
shr
enter
cmpb
xchg
popa
pop
inc
inc
cld
sahf
or
sbb
xchg
pop
mov
xor
mov
mov
jge
ljmp
push
repnz
mov
inc
push
xchg
sbb
cli
fidivl
push
push
sti
ficompl
call
sub
lret
popf
mov
sahf
push
stc
mov
scas
pop
dec
or
mov
aam
mov
jecxz
push
outsb
cli
add
cld
cmpsl
ret
notl
cmp
adcl
mov
mov
mov
movsl
loopne
mov
push
addr16
insb
dec
dec
dec
add
aad
sti
out
mov
cmp
sub
enter
xor
gs
cmpb
inc
mov
dec
outsl
jnp
dec
push
cwtl
cmc
ljmp
mov
adc
roll
in
out
das
lret
ds
xor
push
outsl
aad
loope
fwait
or
das
pushf
pop
jle
out
push
shlb
dec
ret
mov
xlat
insl
icebp
push
and
inc
mov
xor
int
adcb
push
rcrl
lea
xchg
jno
in
mov
dec
sar
popa
xchg
into
adc
mov
dec
dec
leave
imul
xlat
roll
jg
repz
iret
cmpsl
and
lock
inc
enter
and
jne
js
addr16
int
shlb
xchg
loope
mov
imul
pop
xlat
xchg
cli
pop
mov
xor
scas
insb
jno
xchg
lea
pusha
cwtl
dec
mov
arpl
xchg
cs
loopne
and
jp
lret
pop
inc
xchg
out
dec
jmp
adc
sub
jp
cmpl
in
sub
pushf
nop
cs
gs
mov
ja
rclb
dec
cld
inc
dec
loop
fdivrs
ljmp
cmpsb
push
dec
cmp
mov
xchg
in
or
out
push
aam
cmp
pop
dec
pop
aam
mov
inc
fdivs
pop
sbb
dec
rcr
jle
or
jo
push
ret
xlat
hlt
cmp
ficoms
fwait
int3
cmp
add
dec
and
mov
mov
mov
inc
rorl
fmull
add
hlt
jmp
pop
cmpsl
stos
sub
dec
pop
popf
rcl
cli
cmp
pop
cmc
mov
out
xchg
int3
push
xchg
leave
xchg
js
je
in
mov
jbe
or
and
pusha
mov
mov
add
test
add
cmp
cltd
xchg
lcall
push
xchg
lcall
dec
lea
dec
nop
cmc
pop
mov
fidivl
ja
jbe
mov
cwtl
push
mov
rclb
adc
pop
loop
or
dec
popa
test
dec
in
ljmp
cmc
cmp
cmp
jp
sbb
sbb
pop
xchg
push
repnz
jge
xor
pushf
inc
adc
popf
imul
orb
mov
push
out
pop
ret
scas
sub
faddl
fistpll
push
dec
cltd
ljmp
ljmp
add
cmp
mov
mov
loopne
mov
adc
mov
push
repnz
xor
mov
lcall
jno
jl
rcll
daa
mov
sbb
jp
shl
jnp
idiv
aad
mov
or
arpl
mov
stc
scas
out
dec
fbstp
jae
data16
add
jg
and
push
and
add
mov
jno
push
or
xchg
jno
ret
aas
xchg
mov
popa
ret
inc
fistl
mov
xor
cmpsb
out
loop
xchg
pop
push
cmp
push
cs
xor
mov
lock
xchg
add
push
mov
repz
jl
jp
into
push
cmpsb
add
in
and
aam
fcomps
mov
or
jnp
push
xlat
divl
dec
mov
push
inc
dec
stc
dec
xlat
xchg
dec
pop
jne
fsubl
lret
sahf
enter
fdivs
inc
test
mov
push
jo
push
push
sar
in
or
push
lret
imul
add
cs
rdtsc
divl
push
push
add
sbb
mov
mov
fmul
mov
xchg
out
rcrb
or
sub
dec
sbb
hlt
adc
lret
bound
inc
mov
jmp
jp
stos
dec
mov
pop
or
std
or
in
mov
std
in
aaa
testb
mov
mov
or
mov
jmp
nop
fsts
sub
hlt
pop
mov
lock
push
aad
mov
jecxz
push
sub
aas
iret
aam
xor
and
ds
mov
sbb
add
pop
adc
push
mov
adc
jp
ljmp
fistl
push
cmpb
cmp
fs
inc
hlt
enter
dec
xor
mov
outsb
iret
in
add
xor
mov
mov
ljmp
add
in
pop
pusha
jb
and
add
pop
addr16
dec
push
pop
adc
inc
lds
incb
stc
dec
adc
fiadds
lods
inc
shufps
cwtl
add
fnstenv
adc
rcl
mov
fdivrs
in
lahf
and
mov
inc
bound
cmp
fdivs
cld
in
pop
jecxz
sub
rorb
sbb
cmpsl
cmp
jge
xchg
mov
push
and
or
push
repnz
xor
mov
jmp
aas
adc
inc
das
dec
mov
xor
dec
pop
cld
mov
dec
fisubrs
mov
push
aas
mov
add
dec
push
call
daa
mov
mov
pop
jne
mov
jge
dec
pop
clc
push
xchg
rorb
jmp
nop
pop
cli
jmp
mov
lret
bound
into
sub
push
xor
inc
pushl
push
fnstcw
inc
out
push
fidivrs
cmp
fidivl
stos
sarl
ret
lods
add
mov
inc
aad
jno
movsb
fcmovbe
cmp
add
mov
fstpt
pop
imul
out
cmp
repz
aaa
add
out
inc
adc
mov
ss
in
call
scas
adc
pop
andb
sub
push
sahf
jg
cmp
mov
ja
mov
and
in
out
dec
pushf
aam
loope
ja
shlb
incl
push
dec
out
cmc
cmp
iret
push
stos
inc
int3
pop
cmpsl
call
repnz
xor
push
add
imul
out
push
sub
shl
cmp
pop
dec
mov
jecxz
mov
pop
in
fldl
ret
push
test
pop
shr
enter
dec
pop
dec
negl
imul
mov
xlat
inc
xor
jecxz
cmpsl
cmpsb
and
shr
idiv
dec
pop
aas
repz
dec
cmc
xchg
mov
rcl
mov
sbb
push
push
sub
stc
movq
sahf
std
bswap
ljmp
add
add
cltd
loopne
sbb
in
ja
loopnew
inc
jle
push
ret
mov
ljmp
cmp
jno
cmp
mov
nop
std
sarl
outsl
notb
cmp
inc
xlat
das
sub
lret
add
xchg
loopne
or
arpl
or
addb
cld
jns
push
cld
xor
dec
aaa
subb
call
dec
push
cs
jg
imul
xchg
xor
cld
dec
adc
mov
cmc
call
xchg
and
and
mov
daa
inc
inc
insl
call
xchg
movsl
cs
cmp
inc
daa
xor
mov
xchg
sbb
pop
inc
pop
out
dec
iret
cmp
push
enter
stos
rcl
shll
mov
push
insb
pushf
xlat
mov
fadd
adc
or
inc
add
cmc
iret
fbstp
sbb
cmp
xor
cli
dec
test
lock
dec
scas
sub
ljmp
iret
cld
ja
fs
xor
or
jbe
jecxz
push
xchg
fdiv
push
dec
jb
mov
mov
jae
cld
sub
push
cld
xor
dec
mov
rcl
sub
xchg
ljmp
fildl
xor
push
jbe
jecxz
insb
xor
idivl
test
rcl
mov
inc
mov
call
lock
sbb
mov
addr16
iret
sub
jno
push
mov
add
loopne
aas
movsb
inc
add
mov
push
jecxz
movsb
lock
imul
sbb
ds
popa
jle
lds
or
push
into
cmp
mov
xchg
dec
lahf
stos
in
pop
xorb
pop
jno
movsl
mov
cltd
xchg
push
xchg
xor
mov
mov
cli
js
jo
adc
inc
lret
loope
inc
cmp
cmpsl
hlt
jge
push
pop
lret
sti
dec
test
and
fcmovne
mov
fnstsw
fsts
jnp
std
dec
add
movsl
push
test
xor
cmp
lret
pop
push
pop
sbb
daa
dec
jno
xlat
movsl
repnz
stos
jge
adc
xchg
jmp
jl
repnz
outsb
cmc
pop
lock
into
fwait
pop
int
jns
inc
xchg
xchg
dec
jmp
sub
scas
hlt
pushf
aas
jecxz
scas
subl
repnz
dec
rolb
sub
xchg
mov
jle
cmp
adc
mov
adc
mov
int3
cli
jecxz
mov
cmp
mov
or
shlb
xchg
cs
into
xchg
lahf
aad
repz
jmp
or
jo
and
cli
mov
ficoms
and
push
dec
in
das
xor
hlt
dec
adc
scas
inc
mov
lea
std
shlb
sub
mov
xlat
aas
xchg
mov
pop
and
dec
adc
xor
inc
sub
idivb
popf
push
mov
test
loop
std
jp
dec
in
cld
aad
pop
int3
cli
cli
jmp
or
cs
pop
push
dec
xchg
push
push
aam
stos
push
call
stos
test
or
ljmp
inc
jle
inc
bound
sarb
ljmp
push
mov
test
xchg
rorb
cmp
or
mov
repz
lock
jg
out
arpl
test
sahf
jmp
out
fisttps
jmp
and
call
pusha
popf
and
sub
mov
ds
stc
loope
mov
out
add
push
insl
add
outsl
in
lret
or
or
dec
out
pop
fs
leave
out
inc
xor
and
iret
std
out
mov
pop
inc
mov
jnp
dec
mov
inc
ret
and
xchg
xchg
inc
out
test
fs
stos
sbb
fidivrs
push
jecxz
cmpl
jl
imul
fisubrl
jbe
out
cmpsb
ds
pop
dec
xor
mov
arpl
jno
aad
loop
int3
mov
sti
or
dec
fadds
xchg
pop
jo
dec
adc
push
icebp
push
xor
dec
mov
sbbl
cmp
xchg
push
scas
jb
mov
or
push
popf
xchg
leave
mov
sti
sti
xchg
setg
in
xchg
add
out
adc
data16
or
or
mulb
repnz
jmp
rclb
or
pop
lods
pop
es
fwait
or
movsb
inc
or
adc
mov
adc
dec
jns
push
xor
inc
xchg
test
stc
fisubrs
inc
faddl
test
popa
fwait
dec
jp
xchg
xor
in
repnz
push
clc
scas
in
xchg
jns
ror
dec
loop
pop
mov
pop
inc
sub
xor
mov
sbb
pop
mov
xchg
in
and
ret
imul
sub
xchg
or
out
sbb
xor
sub
jmp
inc
ret
push
inc
xchg
jo
jo
sub
sub
shrl
fsubs
xorl
inc
jp
xchg
aam
or
or
push
stc
adc
pop
add
lea
mov
aaa
cs
aas
push
xor
cli
xlat
lahf
rcll
imul
inc
out
das
fidivrs
xchg
jmp
sahf
xorl
out
xor
cmpb
jle,pt
xchg
test
enter
cmpsl
iret
push
pop
repz
sbb
into
mov
nop
repz
out
bound
ljmp
ljmp
rcr
shl
mov
push
or
xchg
das
push
jmp
gs
xor
mov
dec
cwtl
mov
shrb
mov
dec
add
mov
adc
aas
dec
mov
lea
add
call
cwtl
hlt
xor
jecxz
popa
adc
sub
cli
xchg
adc
outsb
or
movsb
dec
stos
xor
iret
mov
in
jp,pt
push
out
cmp
jle
mov
inc
addr16
int3
dec
rclb
sbb
push
int
ljmp
enter
xchg
jne
xor
push
jnp
aam
jge
into
jbe
rclb
fiadds
jnp
sub
fidivl
fcoms
nop
mov
call
mov
in
test
loope
lds
dec
push
leave
push
pushf
cmp
nop
es
mov
sub
ja
movsl
mov
mov
arpl
cmpl
mov
nop
push
out
int
repnz
add
ja
jbe,pn
test
je
fnstenv
xchg
in
fistl
cmp
cli
lret
pop
aaa
xor
mov
loop
js
pop
push
cltd
movsl
popa
psllq
sub
sub
adc
sbb
jb
mov
adc
into
sbb
es
stos
std
stos
icebp
sub
lret
ljmpw
fistps
cld
arpl
mov
pop
lret
cmpsb
int3
adc
push
mov
sub
mov
jmp
rcrl
sbb
fimuls
sbbl
push
add
jp
push
outsb
in
popf
add
add
lcall
popf
leave
jg
lret
inc
xor
jmp
inc
mov
and
pop
adc
mov
in
or
and
xchg
or
out
jne
aam
mov
dec
dec
cwtl
dec
cwtl
cmp
jp
inc
pop
rcrb
fstl
mov
pop
out
or
pop
in
xchg
add
ss
stos
push
gs
inc
dec
aad
pop
stos
fnsave
lret
mov
aad
xor
xor
mov
inc
cmp
add
or
outsb
iret
ds
fs
aam
inc
rorb
add
rorb
pop
adc
and
fbld
std
mov
xchg
fsubp
inc
jne
inc
sbb
dec
pop
mov
pop
aad
test
leave
inc
jmp
mov
int3
mov
in
xchg
cmp
xor
out
dec
imul
xor
popf
stc
aam
scas
outsl
gs
or
rcrl
ret
imul
jb
adc
daa
pop
repnz
enter
int
push
hlt
xor
aam
pop
lret
pop
adc
imul
jb
fldln2
jne
hlt
xor
in
jb
imul
fldenv
pop
and
mov
sub
rsm
push
lcall
loop
jns
jp
cltd
jbe
and
js
insl
push
in
ficoml
and
adc
mov
add
lahf
out
push
xlat
xchg
or
int
push
cmp
clc
popf
jp
lods
push
insl
inc
sub
or
out
add
push
insl
cmp
jo
adc
rcll
lock
std
dec
mov
scas
aaa
jmp
and
and
rorl
jmp
loop
and
cs
dec
cmp
dec
inc
idivb
fimuls
pusha
out
push
inc
add
nop
add
out
push
out
in
iret
adc
fs
pop
movsl
push
cmpl
lea
scas
sub
xor
push
mulb
mov
popa
out
cmpsb
out
jne
js
scas
inc
call
divl
loopne
insb
repz
adc
imul
fsubrl
mov
dec
test
mov
lods
test
rorb
pop
mov
testb
leave
rcll
je
mov
push
inc
pusha
cs
fmul
add
push
xchg
push
stc
sbb
enter
xchg
hlt
mov
cmp
fwait
jl
xchg
stc
xor
lcall
data16
movsb
testl
sub
movsb
xor
scas
subb
xchg
adc
sub
test
nopl
dec
cli
mov
sbb
or
imul
push
jle
adc
inc
and
sbb
lea
cmpsb
shr
sbb
fwait
mov
push
into
xor
mov
pop
fwait
jmp
imul
adc
int
push
adc
mov
xchg
addr16
fisubrs
jge
addr16
repnz
pop
add
mov
stos
pop
push
push
pop
aas
push
sbb
dec
add
mov
fcmovnu
stc
loope
push
fwait
icebp
test
iret
or
push
popf
pop
sub
faddp
xlat
dec
fistpll
shll
pop
mov
push
sub
out
lods
or
nop
jl
dec
xor
jecxz
xor
mov
cmpsl
xor
iret
dec
adc
push
dec
sahf
mov
adc
jnp
xchg
lea
jb
xchg
sbb
test
lock
lcall
leave
add
adc
adc
fs
lahf
add
xchg
sar
xchg
dec
lods
into
cwtl
pop
outsl
fistpll
mov
in
pop
push
or
ja
dec
mov
pop
ljmp
sbb
mov
std
xchg
push
sbb
sub
push
leave
xor
stos
add
or
sbb
shll
popa
ret
lahf
rorl
mov
dec
xchg
ljmp
inc
cmp
into
xor
jo
push
jb
pop
jle
jns
popa
nop
jbe
call
inc
pop
mov
mov
inc
xor
adc
adc
lods
mov
adc
cltd
rol
mov
xor
stos
cmpsl
test
mov
mov
dec
mov
xchg
pushf
cli
add
pop
das
pop
adc
popf
bound
nop
or
dec
sti
cli
jno
into
mov
mov
add
fimull
out
test
mov
add
cmp
push
aam
sbb
mov
cs
push
fs
mov
mov
xchg
iret
push
int
cmp
lret
stc
jge
lods
pop
dec
movsl
jge
enter
cmp
cltd
adc
push
xchg
std
outsl
cmpsl
mov
bound
lcall
fwait
mov
lea
dec
arpl
xchg
cmpsl
cmp
call
jg
cltd
xchg
mov
jnp
lret
cltd
addr16
push
cld
into
sti
pop
loop
fs
jp,pt
xor
and
jo
mov
jecxz
xchg
xchg
xor
adc
je
imul
xchg
push
adc
cmpsl
iret
dec
pusha
cltd
jg
jle
pushf
in
test
icebp
inc
stc
pop
push
cld
bound
pop
insl
lret
sbb
mov
cmp
push
mov
ficoms
arpl
cmpsb
jmp
ljmp
pushf
sub
out
insl
iret
rclb
mov
cltd
sahf
mov
jle
rcll
lcall
sti
xor
rcrl
lock
orl
xchg
loop
inc
aam
fs
sbb
shrb
xchg
sub
pop
push
adc
xor
push
and
xchg
cli
insb
jne
xchg
xchg
lcall
outsb
movsl
mov
sub
iret
js
mov
pushf
push
adc
mov
mov
jb
es
pop
rcrl
mov
ljmp
aas
repz
push
addl
cmp
jno
les
daa
ss
mov
aad
je
xchg
lods
pop
shrb
mov
shrl
lea
insb
out
outsl
pop
xor
jp
xchg
lcall
xchg
xorl
and
sub
pop
nop
iret
mov
xchg
mov
shrb
test
xor
inc
sub
daa
jecxz
dec
fs
xchg
in
mov
rorb
iret
bound
repz
push
push
ljmp
xchg
aam
addb
xchg
orl
outsl
data16
cli
mov
movsl
add
push
mov
sub
pop
mov
shlb
ss
mov
ss
fwait
lea
aaa
test
test
fs
out
testb
out
mov
in
xchg
or
dec
in
push
sub
push
jns
inc
mov
or
jp
movsl
push
imul
iret
xchg
lea
stos
mov
cld
mov
jo
ja
pop
stos
data16
mov
in
kxnorw
dec
jl
fisubrl
in
out
sbb
out
frstor
push
jp
hlt
inc
mov
inc
jne
loope
imul
daa
xor
xchg
pop
mov
stos
shlb
clc
stc
inc
es
lret
sbb
fsubl
push
out
aaa
or
sti
fiaddl
mov
fmul
fidivrs
imul
mov
imul
xlat
xchg
mov
out
mov
mov
pushf
or
insb
xchg
cmp
loop
imul
outsl
xorl
inc
gs
jge
push
cwtl
cmp
imul
leave
add
fidivl
add
pop
into
lret
loop
or
dec
stos
jne
mov
push
xchg
mov
jnp
cli
xor
adc
js
in
jbe
pop
mov
or
in
mov
xor
imull
xchg
sub
inc
xlat
jno
cltd
insb
ljmp
fists
js
stos
int
ret
mov
ljmp
fs
dec
push
xor
fmull
out
pop
sub
add
arpl
inc
stc
dec
aas
rcl
mov
adc
pop
pop
xor
iret
lods
lods
das
and
xor
loope
dec
pop
loop
loop
xchg
inc
cmp
push
lret
std
adc
in
int
lret
lea
imul
jg
pop
loop
ljmp
xchg
out
int3
and
mov
pop
loop
xchg
arpl
mov
ret
push
add
cmp
in
int3
cli
adc
mov
shld
call
out
cmpsb
dec
out
xchg
icebp
pop
into
test
xchg
mov
sbbl
mov
imul
mov
xlat
test
jo
pop
jbe
push
push
or
imul
stos
loop
push
mov
iret
fistl
popa
fstpt
ficomps
int
pop
push
es
mov
pusha
in
xlat
movb
push
push
sub
push
adc
cmp
ds
or
or
and
enter
in
and
out
imul
sti
int3
push
movsl
fildl
aad
stc
lea
aaa
rcrb
sahf
push
sahf
or
or
fs
jl
jmp
stos
ljmp
sti
push
es
push
cli
mov
out
cld
lea
cmpsl
addr16
mov
into
cmc
mov
lret
pop
mov
test
aam
jbe
mov
aad
push
out
fsts
inc
hlt
rcl
lea
negb
loope
push
jle
scas
in
mov
in
insl
jb
or
adc
mov
popa
jle
adc
stos
test
js
shll
ljmp
iret
mov
mov
add
xor
out
sarl
jp
es
rol
aad
inc
sti
fcomp
sub
push
out
sub
xabort
bnd
in
dec
ds
aaa
jmp
sti
aam
add
mov
dec
mov
sub
sti
dec
in
mov
inc
lahf
and
dec
xlat
out
pop
mov
dec
movsl
xchg
inc
pop
int3
sub
xchg
cmpl
mov
adc
sub
lods
pop
lcall
fcomps
add
push
jle
ret
test
nop
mov
push
inc
dec
into
jmp
or
mov
scas
loop
or
mov
test
popa
mov
out
dec
fidivs
cmpsb
or
das
xor
or
insb
aam
xchg
adc
and
faddp
je
add
mov
or
cmp
int3
jbe
subl
or
leave
push
mov
mov
scas
mov
fs
testl
xchg
sarb
xchg
jp
inc
popf
lds
push
movsb
cmpsb
bound
cs
lahf
nop
or
xor
pop
cmpsb
lds
lods
enter
popf
jmp
movl
filds
popf
imulb
pop
loop
and
lret
stos
pop
hlt
inc
mov
push
pop
jl
out
inc
push
xchg
stc
mov
dec
jle
popa
and
add
arpl
xor
sbb
lock
pop
imul
inc
sbb
push
repz
push
pop
ds
es
sti
xor
notl
add
in
call
sub
push
sub
and
into
std
add
jmp
dec
inc
xlat
movb
jmp
mov
xchg
inc
rcrl
add
cld
cmp
and
movl
mov
hlt
xchg
mov
and
fwait
dec
inc
jno
xor
daa
imul
or
insl
jbe
cmp
mov
mov
mov
mov
xchg
pusha
mov
loop
iret
add
xchg
stc
inc
stos
fistpll
and
and
mov
push
push
fisttpll
stos
inc
adc
ds
shlb
lret
out
jns
inc
pushf
jbe
cmpsl
bound
scas
dec
addr16
popa
adc
adc
test
jb
stos
stos
jmp
nop
pop
rcrb
loop
and
lds
xchg
mov
xchg
stos
adc
sarb
sahf
jmp
mov
push
jmp
xor
push
mov
in
test
lret
xchg
lret
cwtl
lods
pop
je
xchg
sbbl
cmp
das
dec
or
fwait
jne
xchg
dec
mov
fsubrl
pop
xor
xor
xor
out
mov
je
clc
cmp
xor
dec
cmp
fs
xlat
sbb
pop
xchg
ja
lcall
inc
fisttpl
stos
cwtl
mov
or
push
inc
pushf
cwtl
mov
sbb
jecxz
adc
stc
ja
int
fwait
popf
jae
ss
int
aam
loopne
mov
call
dec
jo
inc
mov
push
rcr
adcl
mov
call
gs
test
mul
into
arpl
xor
dec
sti
dec
mov
dec
inc
enter
ljmp
scas
mov
inc
les
xor
sub
mov
jmp
cmpsl
pop
jmp
xor
ss
out
ljmp
adc
pushf
outsb
cli
daa
push
subl
mov
mov
xchg
repnz
ret
cli
mov
push
out
xor
into
pop
jo
xor
jp
outsl
out
jecxz
cmpsl
stc
sub
push
stos
push
pop
pop
cmp
test
sub
dec
aam
clc
movsl
add
and
leave
adc
adc
imul
xchg
mov
fldcw
push
addr16
jo
outsl
push
into
mov
sahf
jmp
rolb
cmp
mov
add
sahf
push
push
std
inc
hlt
in
dec
add
xchg
push
jl
clc
jle
int
inc
ds
pop
insb
ljmp
aaa
xlat
bound
cmpsl
inc
popa
xor
dec
sub
adc
shl
mov
inc
in
adc
adcl
sti
clc
enter
divb
mov
pushf
dec
lock
jg
add
jns
sbb
or
mov
fldl
je
sbb
inc
pusha
orl
cli
lret
cmc
stos
and
test
loope
fsubrl
mov
sti
and
sbb
pop
flds
adc
inc
jl
pop
adc
push
sub
push
xchg
movsb
adc
js
gs
pop
mov
lahf
in
xchg
out
jo
int
dec
out
sarl
inc
movsl
fninit
adc
xchg
mov
fisubrl
push
repnz
out
out
cs
insl
sbb
cmp
push
lcall
int
push
mov
add
pop
lret
xor
sbb
pop
aam
jmp
pop
and
fisttpll
adc
pop
ficoms
inc
jbe
repnz
push
and
into
inc
xor
mov
mov
push
outsl
cltd
lahf
loopne
lods
popf
call
dec
fcoml
jle
std
stos
pop
add
jl
pop
ret
scas
ficomps
mov
ret
push
xor
cmp
jmp
lret
je
out
xchg
stos
in
push
jmp
jns
push
inc
xor
inc
clc
mov
aas
leave
pop
loope
outsl
xchg
enter
sbb
jp
test
les
arpl
leave
in
xchg
ljmp
sbb
add
lcall
cs
lock
lahf
xchg
inc
fsub
pop
popf
pop
add
mov
cmp
dec
icebp
out
mov
addr16
jo
into
xor
xlat
fildll
dec
test
mov
push
cmp
sub
das
es
cmp
or
imul
jp
and
mov
xchg
cmpsl
daa
jmp
xorb
and
out
notl
mov
pop
mov
mov
les
pop
sbb
mov
add
or
inc
ficompl
jns
dec
mov
test
stos
jo
and
ret
cli
test
repz
jnp
jp
pusha
lcall
fwait
mov
xchg
xor
out
lahf
dec
rorb
and
stc
add
add
sbb
clc
clc
mov
cli
xchg
loop
sbb
inc
loope
sub
stc
out
add
cmp
mov
cmp
divl
push
rcr
xchg
dec
lock
cmp
cmpsl
daa
loopne
xchg
sti
dec
cmp
and
jp
sub
xor
das
rorb
adc
push
sbb
stos
pushf
sarb
mov
ljmp
xchg
adc
in
push
not
std
sar
aaa
jno
pop
shrl
int3
adc
inc
adc
fcom
bound
pop
ret
add
insl
icebp
adc
push
ja
pop
xchg
cli
js
push
inc
insb
inc
std
in
sbbl
pop
dec
test
and
mov
iret
aad
adc
mov
icebp
xchg
cmp
dec
sarl
repnz
jle
movsl
out
and
mulb
dec
jo
push
or
inc
out
jecxz
adc
pop
xchg
sti
aaa
mov
ljmp
pop
add
and
icebp
aam
loop
adc
and
icebp
arpl
pushf
clc
or
fwait
repz
sub
rol
push
mov
cwtl
mov
pop
or
shrb
inc
sbb
ss
es
and
aad
jmp
cmpb
test
repnz
xor
imul
mov
pop
fs
xchg
arpl
xchg
ret
mov
sti
ljmp
sahf
fs
popf
xchg
sub
cld
mov
pop
mov
and
hlt
mov
or
pop
mov
jge
xchg
fisttpll
or
stc
enter
xchg
ret
icebp
pop
lahf
leave
faddl
out
lods
notl
stos
outsb
adc
mov
out
je
icebp
dec
addr16
jg
mov
rorb
inc
or
jg
fbld
mov
jecxz
les
gs
lods
aad
rcrl
jp
xchg
sbb
bound
movsl
mov
mov
outsb
sub
xchg
in
mov
movsl
inc
push
lods
lcall
mov
arpl
icebp
sub
pop
cld
dec
pusha
xchg
sub
je,pn
imul
iret
xchg
xchg
pop
loop
divb
xor
cmp
mov
push
jnp
aaa
sbb
xchg
add
daa
xchg
popf
push
sti
add
mov
cmp
mov
cmpsl
sbb
ss
ljmp
dec
jne
mov
dec
sub
push
xor
aas
jp
or
insb
jbe
mov
aad
les
div
pop
arpl
in
ret
ja
xor
imul
stos
nop
adc
jae
mov
xor
inc
jp
mov
xchg
mov
mov
xor
add
ds
fs
repz
push
ret
fists
inc
or
fimull
adc
push
cmp
mov
dec
adc
and
fildl
mov
xchg
repnz
movsb
aad
lea
or
adc
loopne
and
comisd
outsl
fucomip
mov
rclb
inc
cmp
ret
mov
sub
fnstcw
dec
vunpcklpd
cmc
dec
dec
mov
iret
xor
pop
lahf
sbb
test
fcoms
lods
push
mov
xor
push
add
hlt
jmp
fimull
xchg
dec
fsubr
lret
sbb
mov
lods
xor
outsb
xor
pop
shll
mov
das
pop
adc
xchg
stos
xchg
in
mov
xchg
stos
push
dec
cs
and
xchg
mov
jo
mov
mov
or
insb
data16
xchg
cltd
dec
xchg
pop
stc
pop
outsl
xor
pop
lret
sub
shlb
pop
fucomp
sbb
xchg
js
pop
jno
nop
ret
in
pop
xor
lahf
iret
mov
out
and
pop
rcl
xor
xchg
pop
sbb
mov
ror
icebp
or
dec
or
push
dec
pop
jmp
shlb
jae
fistl
push
dec
mov
into
in
lret
daa
cmc
ljmp
orl
fisttpl
sub
mov
dec
repz
mov
jle
fimull
lea
call
jecxz
xchg
fidivrl
push
add
repnz
xor
int3
ret
add
imul
inc
sbb
push
inc
imul
test
loope
aad
mov
adc
aaa
pop
mov
sbb
shrl
popa
inc
mov
popf
daa
pop
cmpsl
xchg
adc
arpl
aam
fsubrl
shrb
mov
jmp
cltd
in
sub
jb
loop
cwtl
sbb
xchg
loop
pop
inc
lret
gs
fdiv
stos
imul
push
lock
lahf
out
push
les
fstpl
or
popa
jmp
ljmp
mov
push
movsb
je
fisubrs
icebp
aas
xor
pop
push
loopne
sarl
es
cmp
adc
mov
enter
or
fxch
add
mov
addr16
lock
pop
add
roll
dec
xor
lret
mov
sarb
stc
push
and
adc
lods
and
hlt
sbb
xchg
orl
pop
stos
push
jp
mov
loop
in
adc
mov
inc
add
shrl
mov
testl
sub
into
cwtl
dec
mov
ret
and
loop
cmc
sbb
xchg
xor
xor
enter
xor
sarb
fs
mov
in
bound
dec
in
out
lods
mov
outsl
adc
xor
push
pop
movsl
les
ljmp
or
sub
rcrl
xchg
xlat
gs
out
inc
cli
jle
add
pop
sti
mov
mov
loopne
mov
or
aam
or
jecxz
jl
and
pusha
aas
or
push
in
rorl
xchg
and
adc
push
jmp
xchg
or
cmp
test
movl
das
push
aam
lcall
pop
or
push
jno
xchg
fcmovb
fs
add
jnp
scas
pause
das
mov
dec
loop
xor
mov
stos
inc
imul
and
imul
dec
push
cmp
inc
testb
iret
loopne
mov
push
pusha
mov
shlb
nop
in
inc
dec
out
sub
dec
mov
fiaddl
hlt
inc
out
stos
je
dec
insl
aaa
mov
inc
mov
xor
xchg
jnp
mov
shlb
clc
and
xchg
mov
in
ljmp
movsb
adc
xchg
fs
push
mov
test
fsubr
stc
xlat
cltd
add
scas
or
pushf
loop
pop
mov
dec
les
sbb
mov
adc
dec
dec
bound
jmp
xchg
cmp
fucomp
push
cmpsl
inc
or
test
fidivs
mov
xchg
lret
mov
cmp
sbb
sbb
ret
sub
pop
out
insl
ds
jb
xor
dec
enter
ljmp
and
lahf
iret
xchg
mov
pop
test
enter
loop
jbe
add
pushf
jae
mov
in
out
loopne
mov
dec
test
fiadds
bound
push
sub
mov
scas
dec
aas
xchg
and
mov
mov
stc
leave
add
pop
xchg
inc
push
or
cli
pop
xor
xor
enter
push
xor
sar
jo
jae
aad
popf
sub
call
aam
mov
jl
inc
cs
inc
add
push
lea
inc
lods
les
dec
pop
mov
fsts
ret
sahf
insb
popa
sbb
dec
push
xorb
cmp
sub
stos
xchg
sbb
pop
aaa
jmp
data16
jg
rclb
cmp
ret
xchg
cld
dec
xchg
es
add
pop
aad
iret
out
aad
mov
jecxz
xchg
jmp
xchg
pop
pop
and
push
sbb
icebp
mov
mov
jmp
xor
dec
cmp
mov
stc
xchg
testl
jno
ret
xor
mov
test
repz
push
lret
or
iret
sbb
shrl
xchg
dec
mov
sbb
jne
pop
addr16
idiv
sbb
push
shrb
adc
mov
popf
adc
dec
pop
pop
mov
xor
pushf
pushf
sahf
xor
mov
push
lret
mov
xchg
sbb
sub
mov
cmc
in
rcll
adc
icebp
cmc
push
loop
add
dec
or
jns
insb
push
je
aad
and
test
movsb
pop
push
and
mov
popa
push
xor
xchg
bound
ljmp
xor
and
jle
mov
sub
xor
push
shlb
or
inc
fbstp
sub
lret
ja
xor
popa
movsb
leave
aam
xor
test
das
insb
fcomip
lret
add
aam
xor
shr
je
dec
pop
mov
rcr
daa
and
dec
xchg
xchg
or
add
iret
cmpsl
cmpsb
cmp
xchg
mov
aaa
fs
out
dec
jle
xor
decb
aas
cmp
iret
cmp
scas
sub
insb
xchg
test
sbb
and
lret
scas
mov
imul
arpl
push
jl
inc
dec
sub
mov
flds
inc
imul
add
cmp
pop
leave
rcrb
mov
and
jb
sub
dec
es
cltd
sbb
xchg
adc
sti
iret
cmc
in
test
pop
loope
clc
ljmp
es
adc
push
fistpll
aas
sub
or
mov
das
jbe
fistpll
pop
push
dec
jns
and
cmp
push
dec
mov
and
cli
sub
pop
or
and
cmp
dec
push
pop
cmpsl
adc
push
cs
push
jp
jmp
add
pop
mov
cmpsb
xor
xchg
scas
insl
addr16
pop
dec
and
icebp
ljmp
add
inc
repz
adc
aad
jg
push
jns
fidivs
sbb
push
iret
push
jmp
repz
or
mov
pop
test
lods
inc
adc
cli
lds
push
cmp
std
lods
cmp
add
pop
xchg
stc
je
mov
adc
pop
popf
or
arpl
jbe
sub
in
addl
add
test
mov
push
xor
inc
add
xchg
mov
adc
dec
call
pop
pusha
xchg
sbb
cli
sub
cld
push
mov
add
test
inc
test
popl
in
dec
out
push
outsb
add
xor
sub
jnp
add
loopne
into
test
sbb
sub
dec
xchg
iret
xor
inc
pop
dec
xor
add
xchg
xchg
push
adc
jmp
push
jmp
lcall
add
cmp
mov
out
mov
cmp
add
faddl
in
mov
add
jae
jbe
push
jnp
pop
add
out
push
xchg
in
lea
iret
xchg
test
inc
xor
adc
dec
sub
pop
pop
pushf
fistpl
push
xchg
cmp
dec
dec
scas
jno
std
mov
sbb
sub
fisubs
pop
mov
jb
movsb
iret
addr16
adc
xchg
xor
loopne
mov
mov
pop
icebp
test
or
xchg
mov
cmp
sub
out
sub
jno
jmp
or
mov
out
jmp
add
call
inc
aas
ljmp
aam
or
xchg
mov
shrl
add
stos
sub
leave
mov
ds
xchg
mov
lds
sti
push
std
dec
push
inc
mov
cmp
sub
lahf
lcall
cli
sub
aad
push
add
mov
xor
dec
lods
sub
call
push
jbe
or
inc
pop
setle
pop
subb
or
pop
sub
lahf
rorl
dec
cs
xor
int3
xchg
test
inc
fsubs
ss
lret
push
leave
cmp
jecxz
add
jnp
not
push
test
or
frstor
stos
lds
sub
jp
inc
ljmp
fimuls
imul
lcall
cmp
popa
cltd
mov
and
mov
jns
push
adc
cwtl
jne
jo
or
pop
or
js
mov
add
inc
divb
ficoms
pop
daa
sti
adc
lods
sub
out
fwait
enter
jne
in
clc
mov
xor
jg
scas
sbbl
dec
xchg
mov
dec
mov
mov
pcmpeqb
cld
enter
fdivrp
subl
cmp
xchg
xor
cmc
jb
cs
sub
aam
out
push
adc
or
rolb
sbb
lods
sbb
pop
ja
insl
scas
dec
sbb
sbbl
xchg
leave
add
sti
out
xor
adc
lahf
xor
inc
rcrb
gs
iret
xchg
xchg
lcall
sbb
jge
pop
adc
pop
aam
out
imulb
in
and
inc
dec
out
xchg
mov
aaa
out
lods
inc
adc
les
fistpl
xor
xchg
cmp
fadd
dec
stos
cli
roll
add
dec
sub
or
outsb
shll
push
add
lods
mov
cli
pushf
into
pop
loop
inc
mov
pop
sahf
insl
mov
mov
je
lcall
and
adc
xchg
push
shlb
cmp
pop
inc
fisttpl
test
jbe
popf
sbb
andb
fidivs
cmp
xchg
mov
lods
and
mov
jge
shr
pop
lods
lcall
push
mov
cmpsl
test
jl
pushw
inc
lret
leave
dec
pop
test
or
incb
cmp
mov
xchg
test
aaa
fstpl
test
fs
ret
incb
enter
cmp
pop
fists
frstor
sbb
sbb
addr16
jmp
paddusb
test
sub
in
int
cmpb
cmp
into
rclb
push
dec
int3
rorl
shrb
fs
mov
mov
js
mov
stos
pop
jnp
push
sahf
and
mov
sub
ss
jl
dec
mov
enter
xchg
xchg
inc
enter
mov
outsl
jge
or
sub
out
sub
and
aas
sub
dec
lock
sub
xor
or
cmc
xor
stos
fmul
loope
cwtl
andb
add
add
das
push
lcall
or
xor
cwtl
lahf
adc
sahf
ret
mov
push
ja
dec
xor
fisubs
shll
mov
ficompl
pop
das
sub
jo
jns,pn
shl
sbb
in
cmp
dec
in
ss
pop
sub
popf
cmp
xchg
fwait
and
stos
mov
cmp
ss
sbb
mov
push
jo
jecxz
pop
popa
mov
sti
jbe
xlat
jae
out
jg
jae
push
cltd
add
sbb
fists
inc
inc
adc
inc
loop
push
jmp
adc
fcmovbe
movsl
mov
and
pusha
inc
jle
std
cmpsb
pop
jle
test
pop
xchg
mov
into
push
jl
mov
jbe
mov
in
sub
jmp
jo
ja
adc
stos
jmp
daa
bound
popa
pop
dec
and
or
dec
mov
iret
or
push
out
daa
jbe
cmp
cmp
out
mov
mov
fnstcw
es
scas
xchg
mov
and
sub
insb
dec
iret
sbb
int3
rcrb
inc
jnp
mov
jne
out
daa
cmp
gs
lcall
test
mov
jnp
cmp
mov
jne
std
pop
ds
and
push
add
xchg
mov
jp
stos
sahf
cmp
insl
or
std
inc
lahf
mov
mov
adc
ficomps
or
cmc
mov
cmp
mov
mov
sbb
cs
jl
push
jmp
inc
shlb
sub
ds
dec
pop
cmpsb
cmp
mov
cmp
pop
xchg
jae
aas
push
rolb
pop
pop
jns
icebp
or
xor
jge
push
adc
lcall
xchg
jnp
rcrb
cmp
lcall
inc
pop
ljmp
sub
jbe
add
loope
mov
mov
shl
stos
jl
cmp
icebp
sub
loopne
and
testl
mov
loopne
jg
jp
xchg
insl
inc
lods
add
popf
xchg
or
jns
fwait
xor
mov
and
and
push
push
iret
push
dec
movsl
iret
cld
adc
lret
sub
mov
imul
lods
push
adc
mov
sti
into
mov
sahf
sub
push
pop
inc
xchg
sbb
dec
cld
popl
push
movsb
dec
inc
dec
jbe
jecxz
outsl
dec
jp
adc
ret
lcall
gs
mov
adc
mov
in
mov
sub
idiv
out
fwait
iret
pop
int3
push
iret
cmp
enter
mov
jb
lods
je
add
sahf
inc
out
sarb
mov
cli
push
int
sub
or
sysret
jae
mov
and
mov
sub
out
push
stos
sub
aam
and
int
mov
std
sar
add
jg
lock
or
mov
inc
push
in
or
mov
fisttpl
jmp
int
mov
add
push
orb
in
fnstenv
rol
xor
fidivl
hlt
xchg
test
mov
mov
adc
pop
cmp
lods
xor
popa
scas
pop
xchg
pop
sbb
std
sub
pop
fwait
sbb
cmpsl
or
pop
xor
mov
js
push
cmp
or
repnz
ja
jne
or
cmp
dec
dec
adc
sarb
xor
mov
mov
movsb
mov
adc
out
rcl
mov
pop
ja
mov
lahf
incb
mov
aad
pop
ljmp
pop
or
test
cld
mov
dec
xchg
dec
mov
sub
arpl
and
bound
lds
or
notb
je
je
push
cmp
xchg
dec
dec
test
cltd
push
sbb
pop
cmp
stc
push
inc
xchg
adc
jns
add
nop
mov
jle
or
ret
inc
xchg
fimuls
jns
ss
adc
es
pop
pusha
outsl
mov
inc
jb
fidivs
sti
shr
lock
loop
shll
xchg
xor
mov
rclb
mov
imull
cwtl
push
js
lret
jecxz
or
mov
cmpsb
fsubrs
in
xor
lret
gs
ret
aaa
and
imul
stos
movsl
jge
out
aaa
xor
add
mov
ljmp
mov
fcom
pop
in
or
data16
in
dec
dec
add
movsl
fsub
xchg
pop
and
jns
mov
data16
jo
pop
or
sti
add
pop
cmp
inc
dec
popa
mov
clc
sbb
test
sbb
out
ja
call
cmp
or
xchg
xchg
jno
cmc
mov
into
in
jg
mov
xor
mov
sbb
loope
loop
jno
push
add
adc
pop
pop
mov
les
sar
mov
call
push
or
iret
jo
fwait
out
xchg
popa
xchg
outsl
or
jmp
add
into
xchg
in
fwait
rcrl
sub
adc
sbb
gs
lcall
fisubrl
dec
sti
sub
cmp
and
push
push
sbb
mov
test
push
arpl
shrl
ds
cmp
dec
aaa
lret
cmp
outsl
cld
dec
fdiv
mov
mov
sub
stos
fisttpll
test
pop
and
cmp
loopne
or
add
stos
fs
daa
mov
adc
jbe
and
loop
pop
dec
shll
fists
mov
ficompl
iret
loopne
push
add
add
hlt
fisubrs
int3
sahf
push
mov
add
dec
inc
xchg
outsb
negl
outsb
sub
jp
xor
fwait
mov
jmp
ss
popf
jecxz
outsl
faddl
and
mov
nop
pop
or
mov
stos
push
add
cmp
cwtl
arpl
xchg
pusha
imul
stos
in
sub
jecxz
outsl
pop
inc
inc
inc
sub
popa
sarl
mov
mov
ljmp
cmp
rcrl
lds
push
adc
movsb
sub
pop
dec
pop
ds
dec
add
iret
mov
call
xchg
mov
jnp
or
lret
outsl
iret
pushf
outsb
mov
fidivl
adc
jecxz
fisubrs
xchg
sahf
pop
rcl
int3
ret
xor
cmp
test
cmpsb
rclb
icebp
movsb
stos
xchg
inc
jo
sub
cwtl
lret
xchg
pusha
pusha
cmp
iret
xchg
scas
iret
or
add
in
or
loopne
loope
mov
adc
mov
rorl
divl
in
mov
or
aad
and
out
in
and
dec
adc
cmp
cmc
and
das
xchg
or
pop
fwait
or
pop
fbld
js
popa
pusha
testl
dec
sbb
sbb
or
sbb
in
stos
js
pop
or
push
flds
mov
das
xchg
mov
sub
dec
aas
push
rclb
out
push
mov
iret
pop
sarl
in
lods
mov
mov
pop
fwait
jne
jecxz
es
bound
or
xor
out
hlt
inc
sbb
jmp
cli
ss
arpl
aaa
push
loop
loop
sbb
sub
orl
dec
mov
daa
sub
repnz
adc
adc
cs
mov
dec
gs
dec
mov
push
enter
sub
lret
and
sub
mov
mov
xor
fwait
mov
pop
ss
dec
adc
cs
hlt
mov
cltd
leave
dec
aas
fimull
push
stos
jno
xchg
fbstp
sar
mulb
aaa
dec
movsl
or
mov
and
mov
add
xor
outsb
aam
dec
inc
push
fcmovb
insb
int
or
and
loopne
ror
push
fimuls
mov
mov
cmp
lret
mov
popf
or
or
push
xchg
push
dec
sahf
dec
and
push
dec
out
or
pop
inc
xchg
inc
inc
fsts
aam
jmp
jp
sbb
shrb
in
push
inc
push
cli
mov
ss
add
pop
jle
push
add
outsb
sub
inc
loop
and
push
push
push
push
pop
xchg
js
mov
jg
shlb
hlt
lahf
jbe
pop
or
adc
bound
int
bound
fcoml
in
repnz
shrl
les
shll
pop
push
loop
cmc
ds
jns
divl
stos
shlb
in
movsb
dec
mov
adc
popa
xchg
je
sub
cmp
mov
xor
int
les
in
cs
jp
add
imul
sahf
jp
rorl
ljmp
into
mov
jecxz
jmp
imul
inc
adc
cmp
lret
sub
sbbl
call
and
aaa
loope
sub
push
fdivl
inc
call
inc
mov
pop
sbb
sar
mov
cmp
jne
xchg
xchg
shlb
enter
test
iret
xor
mov
push
ljmp
data16
push
jmp
sbbb
jb
xchg
test
sti
js
cmp
sahf
ret
sbb
sub
and
test
sub
aad
out
xchg
dec
sbb
outsb
xlat
pop
iret
mov
and
rclb
xchg
xchg
ss
sbb
sub
mov
fcomi
pop
dec
loope
dec
dec
pop
cmpsl
ds
lret
in
jb
cmp
adc
in
cmc
in
fwait
out
icebp
xor
lahf
xor
xlat
mov
sti
mov
xchg
cmp
pushl
adc
push
fistl
cmp
jmp
add
cmp
in
push
and
pusha
or
stos
jo
cmpsb
and
dec
mov
mov
jge
cld
xor
sti
maskmovq
notl
ret
es
inc
int3
adc
xor
mov
sub
jmp
add
in
xchg
pusha
fs
test
rcrl
neg
pop
movsl
inc
push
sti
out
inc
out
xlat
movsl
jbe
divb
inc
in
out
dec
jo
push
mov
inc
pushf
dec
push
xor
push
in
sub
mov
pop
in
add
mov
test
mov
sysret
int3
sbbl
cmp
es
and
dec
fcoms
mov
mov
pop
shll
movsl
inc
mov
test
out
addr16
cmpsl
pop
lcall
lock
fs
ds
rclb
sarl
lret
fs
mov
inc
xchg
test
xchg
cwtl
push
clc
sti
cmp
iret
mov
push
xchg
add
frstor
add
xchg
push
jmp
scas
add
adc
inc
sbb
les
cli
pushf
nop
cltd
mov
adc
neg
notl
xor
xchg
cmp
movl
aam
out
jns
clc
dec
lret
orl
inc
push
ljmp
push
pop
imul
inc
push
xchg
dec
mov
add
xlat
xchg
dec
inc
iret
lret
sbb
mov
dec
test
testl
dec
inc
arpl
push
xchg
add
fmull
mov
imul
js
aam
out
leave
xor
or
adc
or
add
pop
or
push
jle
pop
clc
mov
push
fs
cs
lock
sti
push
mov
sbb
sar
mov
push
and
xchg
add
stos
fsubrs
sbb
fadds
xor
dec
jne
movsb
sub
int
sti
mov
adc
mov
loop
ja
fdivp
das
sti
cmp
ljmp
arpl
dec
dec
insb
adc
arpl
or
adc
enter
sbb
fsubs
push
push
add
addb
fdivl
sub
icebp
je
mov
sbb
mov
sbb
aaa
outsl
xchg
pop
fwait
test
stc
in
subl
mov
xchg
cld
clc
mov
pop
test
hlt
pop
sahf
mov
cmp
jecxz
cs
out
nop
ljmp
dec
push
xor
bound
push
lods
mov
lock
ljmp
cmp
push
push
pop
lahf
or
cmp
inc
out
in
xor
stc
mov
out
sbb
lods
sbb
clc
and
pop
add
ret
shr
out
and
cli
xor
lret
movsb
lods
cmpsl
in
jbe
fs
mov
inc
mov
mov
and
int3
stos
inc
jg
movsl
adc
sbb
mov
imul
mov
and
add
xchg
idivl
orl
mov
addr16
popa
jo
in
add
pop
push
test
stc
jp
jno
push
jne
lret
mov
sahf
xchg
xchg
jp
rorb
mov
movsb
mov
jo
adc
enter
in
or
imul
cwtl
andl
jne
lock
and
inc
add
rorb
addr16
fs
sahf
movl
pop
imul
sarb
cmpsb
dec
into
sbb
aad
cmpsb
inc
mov
pop
cwtl
cwtl
js
rcr
fimull
enter
pop
mov
imul
das
shr
xchg
leave
ret
sbbl
int3
std
fwait
jge
insl
inc
out
cli
arpl
mov
sarb
ss
cmp
mov
mov
sbb
xor
inc
negb
testb
sti
jbe
push
test
jge
stc
lods
sub
dec
cmp
sub
xchg
mov
adc
cmp
xor
arpl
inc
lcall
or
push
outsb
lea
inc
hlt
mov
sbb
jecxz
dec
mov
mov
int3
popf
mov
jecxz
dec
negb
and
in
out
leave
jmp
arpl
popf
xchg
inc
mov
lret
fisubrl
fcom
adc
dec
and
les
loopne
inc
loop
sub
addr16
push
inc
push
lret
je
insb
inc
jg
add
das
icebp
mov
shlb
cmp
aas
scas
cmpsb
outsl
cmc
xor
inc
inc
add
fs
into
pop
outsl
lods
xchg
sbb
mov
cmpsl
or
das
add
int3
and
fs
pop
mov
mov
sahf
push
xchg
cmp
cld
lret
jecxz
arpl
xor
mov
mov
cmpsl
leave
xchg
enter
jns
iret
mov
mov
mov
xchg
inc
andl
cmp
mulb
mov
ret
mov
imul
lret
pop
fdiv
or
cmp
push
lahf
sahf
or
adc
inc
in
xor
clc
cmp
stos
out
sub
xchg
pop
push
inc
cmp
loopne
ret
push
add
leave
shl
cs
mov
pop
pop
sub
hlt
mov
arpl
fldl
in
fisubl
xchg
outsl
and
xor
dec
int3
sti
xor
cltd
aas
daa
cmp
xchg
jmp
push
dec
loopne
add
mov
add
fisttps
out
movsb
mov
enter
sbb
outsl
jmp
hlt
jnp
dec
je
or
dec
cmp
sbb
sti
andl
xor
insb
stos
inc
das
cwtl
cmp
push
int
ljmp
xchg
pushf
sub
aaa
lahf
imull
fwait
push
sti
sbb
adc
mov
sbb
fbstp
mov
push
mov
add
adc
cwtl
jo
pop
ficoms
sbb
popa
pop
mov
addr16
adc
push
pusha
or
stos
mov
addb
pop
xchg
les
fidivs
imul
or
jo
adc
pop
test
cmc
pop
mov
xchg
fwait
popaw
mov
insb
jp
ret
and
cmpsb
out
xor
lcall
push
mov
es
aad
and
xchg
xchg
pusha
dec
subb
lea
jmp
jne
mov
flds
pusha
imul
mov
push
mov
cwtl
jno
cmp
push
adc
loop
lock
std
aam
push
xor
adc
xchg
out
mov
nop
cmc
test
adc
pop
fisttpl
or
aam
mov
mov
dec
add
mov
ss
aas
hlt
adc
inc
jns
sbb
inc
test
and
mov
mov
lods
popf
sbb
iret
aam
bound
rorb
jl
pop
mov
xchg
roll
loopne
out
mov
in
test
push
inc
xor
mov
pop
sbb
push
jne
or
adc
in
push
jne
sub
imul
imul
out
or
fnstenv
and
push
lret
fsubs
pusha
push
loopne
and
fisttpll
dec
lahf
sti
mov
inc
push
mov
jae
bound
ljmp
xchg
pop
push
jl
aas
lds
in
das
mov
jbe
push
xor
inc
loope
or
lahf
xchg
jno
shrb
test
mov
nop
cltd
jl
mov
push
xchg
inc
fsts
xor
in
add
in
mov
push
dec
js
vmwrite
cmpb
sub
jecxz
int
mov
push
ds
ljmp
test
adc
xor
aas
push
ficompl
movsb
push
fstpt
add
dec
mov
add
hlt
outsl
jne
jle
aaa
xor
movsb
das
sbb
cmc
fwait
ret
lahf
inc
sarl
ljmp
pusha
aam
xor
push
lock
sub
add
and
sub
push
xor
arpl
jae
cwtl
movsl
xor
inc
sub
cld
xor
stos
jmp
cli
and
inc
clc
adcb
push
jns
push
fisttpl
mov
ror
xchg
cli
dec
push
jecxz
xchg
fstps
fbstp
hlt
imul
cmc
fdivs
xor
les
fbstp
loopne
mov
aam
repnz
sbb
popf
addb
lret
rcrl
mov
stos
inc
pop
adc
mov
frstor
xor
or
inc
sub
stos
adc
mov
xchg
adcl
add
push
xor
or
loopne
cli
pop
clc
scas
dec
mov
dec
mov
test
and
mov
lret
push
and
dec
xchg
cmp
mov
mov
or
stc
into
dec
test
shll
mov
out
data16
pop
jno
fstpt
push
xchg
push
xchg
das
out
dec
pushw
int3
xor
lods
mov
cltd
jl
out
dec
xor
lret
ja
fdivs
fldenv
hlt
lahf
dec
subl
mov
pop
scas
mov
xchg
cli
mov
sub
test
mov
test
inc
pop
and
mov
test
inc
insl
out
sub
inc
mov
xlat
mov
xchg
pop
stc
lcall
push
pushf
fdivrp
and
test
fwait
jns
xor
gs
dec
lahf
pop
leave
incl
aaa
insb
cli
xchg
pop
pop
inc
cli
insl
push
fcmovnu
xor
faddl
movsb
or
mov
and
or
lret
clc
std
inc
add
mov
adc
fstpt
inc
mov
mov
fsubp
lods
das
outsl
sahf
jno
mov
pop
insb
je
cld
orl
push
pop
sub
xor
hlt
push
pop
pop
fwait
mov
mov
adcb
rcrb
mov
pusha
stos
adc
scas
sahf
lahf
sahf
jns
adc
jge
xchg
xchg
dec
mov
leave
xchg
sahf
pop
and
lods
pop
into
aam
push
ja
push
inc
cmp
ds
pop
push
jno
in
cmp
jle
xchg
sbb
sahf
iret
leave
ljmp
jnp
adc
dec
std
ficoml
sahf
push
mov
insl
imul
lahf
sbb
jle
jo
lahf
aaa
out
loop
pusha
insb
dec
lods
xor
aas
ja
stos
cmp
stc
lahf
fcomip
mov
aaa
enter
out
outsb
push
sub
test
sbb
push
nop
insb
test
cmp
pop
xchg
in
es
adc
push
ret
call
test
in
jbe
pop
xchg
and
xor
xor
pop
idivb
cmp
fadds
sbb
iret
fmulp
mov
jo
dec
imul
pusha
xor
and
inc
inc
cmp
in
pop
xchg
imul
stc
out
loopne
gs
jne
jg
sbbl
cld
jns
fstps
out
ret
pushf
pop
movsl
daa
mov
pushf
push
jg
packssdw
push
inc
adc
idivl
jmp
in
out
dec
dec
and
data16
sarl
cmp
movsl
inc
mov
mov
mov
mov
aad
in
lret
cmp
insb
int3
or
pushf
push
cmp
push
xor
sbb
in
mov
pushf
jge
pop
nop
cmc
or
int
sahf
xchg
xchg
sub
out
xor
mov
inc
in
shlb
sbb
xchg
cmp
out
inc
leave
or
lock
xor
stos
pop
jge,pn
xor
fiadds
fiaddl
nop
push
xchg
jno
cld
xchg
fs
xchg
ljmp
mov
pop
aaa
mov
hlt
js
mov
cmp
outsl
ja
mov
mov
adc
rcr
add
push
lcall
xor
add
mov
dec
cmp
jb
mov
add
movsb
sbb
xchg
cld
aas
inc
inc
pop
sbb
add
push
push
and
fmul
test
mov
shl
sub
lock
and
cmp
repnz
aam
cmp
out
adc
enter
push
and
sub
xchg
pop
iret
inc
andb
outsl
mov
push
in
aam
scas
cmp
pop
mov
mov
cmp
mov
in
aad
out
dec
jns
cmp
sbb
cmp
lods
push
sbb
lcall
jno
leave
cld
js
xchg
lret
shrl
jmp
mov
jne
cmp
mov
out
sub
mov
mov
iret
jo
xchg
icebp
and
ljmp
pop
or
mov
mov
fsubr
or
xchg
clc
leave
xor
pop
leave
pushf
dec
pop
mov
test
in
aas
or
incl
pop
sub
mov
pop
adc
sti
in
dec
pop
in
xchg
jno
xor
lods
pop
rcr
fwait
mov
xor
cld
jbe
out
cmp
in
adc
test
fnstcw
jmp
pop
ficompl
test
push
inc
or
idivb
and
stos
ljmp
cmp
in
cli
adc
sti
scas
clc
mov
mov
arpl
jp
xchg
xchg
je
pop
enter
jbe
lret
push
xchg
push
sti
xorb
std
pop
and
ljmp
cmpb
iret
testl
loopne
xchg
loop
sahf
clc
pop
fildl
adc
add
insl
xchg
ret
stos
imul
fisttps
icebp
adc
std
les
or
sub
push
push
xchg
sbb
ss
ret
stos
or
or
ds
dec
out
dec
into
xor
cmp
test
xchg
mov
dec
push
dec
and
jl
mov
push
sti
negb
testb
xchg
lret
jns
lods
sub
mov
cwtl
jg
out
movsb
call
pop
bound
jmp
pop
adc
mov
xor
outsl
sub
add
cmpsl
shlb
daa
outsb
and
sub
mov
add
cmp
mov
fisttps
push
arpl
adc
push
cmp
aas
ljmp
shrb
push
ljmp
xorl
xchg
scas
in
hlt
inc
das
out
pop
inc
loopne
xchg
rolb
stc
push
mov
lret
add
test
addps
cld
mov
xor
subb
jg
xchg
or
rcrl
xchg
inc
jnp
adc
rcrl
and
ret
cmpsl
call
nop
push
into
sub
dec
mov
xor
inc
xor
dec
ret
pop
jbe
push
test
lret
negb
mov
mov
sub
push
mov
pop
std
sbb
mov
add
test
xchg
ja
and
dec
scas
jae
enter
sub
out
cs
repz
dec
out
movsl
clc
jg
xchg
pop
stos
iret
std
and
inc
inc
les
ret
aad
push
mov
adc
stos
push
fmulp
or
inc
mov
dec
shlb
and
xchg
cmp
shll
and
inc
mov
push
or
cs
pop
fnstcw
mov
in
movsb
or
jno
or
inc
stos
jge
xor
or
cmp
push
out
dec
jg
lods
inc
lret
lcall
jae
inc
mov
mov
in
lret
jbe
dec
cmp
pop
sti
push
loope,pt
rcrb
fsubrs
call
dec
movsl
mov
inc
adc
jnp
cmpsl
std
movsl
mov
xor
xchg
loopne
aaa
lahf
pop
aad
pop
call
xor
inc
lods
mov
fistpl
lea
shlb
adc
leave
in
jb
ljmp
inc
jmp
push
xor
xchg
out
and
xlat
loopne
mov
mov
test
sbb
rcrl
inc
inc
xchg
iret
dec
inc
fwait
mov
inc
jno,pt
pop
xor
cmp
loop
ss
aam
inc
add
ja
push
jbe
mov
mov
add
push
xchg
leave
or
lret
jns
cld
aaa
jle
lahf
xor
dec
int3
enter
pop
and
out
addr16
insb
sub
push
mov
movsl
ss
mov
lret
xchg
jnp
jb
sub
das
mov
xor
inc
fcmove
loopne
xlat
pop
inc
adc
xchg
mov
aam
js
cld
ljmp
arpl
sub
pop
and
or
and
xchg
aaa
pop
es
aas
jg
outsb
adc
adc
mov
addr16
dec
fucom
mov
mov
pusha
pop
into
add
mov
fs
enter
loopne
addr16
inc
lds
decb
or
push
mov
in
sbb
iret
add
inc
leave
cli
arpl
dec
xchg
cwtl
dec
push
sbb
loop
into
pop
jo
mov
jmp
sbb
mov
cli
enter
add
mov
jno
lods
inc
dec
addr16
fsub
sbb
sbb
ds
test
imul
or
lret
mov
mov
add
dec
inc
jnp
fidivrs
pop
in
jno
and
mov
adc
movsl
xchg
rorl
arpl
jae
inc
les
icebp
jecxz
add
xchg
sahf
jmp
push
lret
imul
pop
in
fbld
cmp
fsubrs
orl
pop
repnz
jbe
xorb
cld
xor
sahf
dec
lret
adc
call
aam
push
mov
int3
in
mov
mov
cld
xor
xor
test
mov
jp
add
arpl
clc
testl
fldenv
aam
mov
push
shrl
aas
out
and
push
xchg
ljmp
das
repnz
push
pop
lahf
adc
mov
mov
jle
bound
ljmp
movsb
scas
mov
hlt
pop
pop
and
xlat
cmc
filds
xchg
inc
push
test
bound
int3
test
cltd
pop
jo
mov
mov
add
lds
pusha
and
hlt
push
jmp
mov
lock
xchg
or
popf
xchg
push
add
scas
and
push
lahf
call
jp
adc
sarl
in
pop
lock
popa
out
sub
cli
loop
cmp
aad
inc
stc
push
lea
test
ret
pop
mov
jge
hlt
cmp
push
xchg
leave
pop
test
add
jmp
sub
cmc
mov
ja
jle
inc
xchg
cld
mov
sbb
xchg
add
mov
jg
jmp
xchg
cmp
insb
xchg
adc
mov
jne
int3
mov
push
mov
add
lods
lcall
mov
xchg
movsl
mov
pop
arpl
push
aas
add
das
cld
jle
mov
hlt
repnz
movswl
outsl
sbb
stc
dec
clc
xor
push
mov
inc
sbb
mov
inc
inc
int
cmp
dec
push
lret
mov
enter
mov
jmp
js
sub
in
ljmp
or
lds
stc
neg
push
add
inc
repnz
xor
dec
enter
repz
cltd
mov
das
orl
mov
dec
cmp
loop
dec
inc
jno
cmp
pushf
insb
xor
fbld
and
int
arpl
cmp
cmc
ja
cmp
fsubl
aam
movsb
nop
mov
cli
xor
sub
pusha
or
outsb
mov
aaa
xchg
int
mul
movsb
adc
add
cmp
shrl
pop
popf
daa
test
sahf
jl
icebp
fwait
out
cmp
pushf
shll
xchg
outsl
ja
jle
cmp
repnz
test
adc
mov
cmp
pop
aam
xchg
not
and
loop
xor
shll
rolb
fs
cld
xchg
add
out
cmp
sub
loop
imul
and
pop
enter
mov
xchg
ret
ljmp
iret
adc
adc
ja
daa
test
dec
icebp
mov
lret
adc
xlat
add
xchg
push
push
outsl
rcll
mov
jl
and
push
repz
and
dec
mov
clc
mov
add
pop
xchg
inc
das
push
mov
push
jp
inc
pop
mov
jo
cmpsl
mov
pop
xchg
in
xchg
clc
shr
pop
add
or
enter
xchg
outsl
loop
stos
push
pop
or
imul
add
sahf
mov
xchg
mov
loope
outsb
ljmp
xchg
cmpsb
call
fstp
lods
cmp
adc
je
ret
scas
xor
jns
xor
out
stos
mov
xchg
dec
int3
fisubs
pop
mov
xchg
or
shll
pusha
cmpl
outsb
into
xor
sub
and
scas
inc
ds
jnp
sahf
mov
or
fs
std
je
cmpsl
or
enter
jbe
or
push
jmp
xchg
movsb
test
in
in
lret
jp
test
mov
mov
negl
jl
mov
jmp
xor
push
xchg
xor
dec
insl
dec
add
leave
push
sub
mov
jg
movsl
xchg
jb
stos
cmpsb
xor
xchg
scas
mov
cmp
decb
mov
dec
push
aam
repnz
gs
or
pusha
sub
cmpsl
push
cmp
fidivrl
fisubrs
sub
shrb
xchg
loop
adcl
xor
in
mov
ret
xor
and
dec
or
lret
shll
insb
stos
daa
sub
leave
testb
cltd
pusha
cmpsb
inc
inc
push
cmp
pop
dec
and
mov
js
out
mov
dec
fs
enter
cmp
mov
int3
mov
shr
ret
out
cmp
push
xor
and
rcll
adc
dec
pop
push
pop
cmpsl
push
mov
sub
cmp
inc
add
lcall
or
loope
fistpl
int3
sub
idivl
rcl
dec
fs
in
lahf
jmp
inc
sub
out
scas
and
lods
adc
add
lahf
xor
stos
call
sbb
jp
add
mov
decb
pop
or
mov
leave
repnz
or
sub
mov
fs
mov
dec
fs
xchg
mov
rclb
mov
pop
cltd
push
ficoms
orb
lcall
cltd
subl
iret
pop
inc
add
lahf
lret
cmp
cmp
mov
dec
pushl
movsb
roll
in
lods
les
stos
and
cli
xor
fbld
and
mov
pushf
ljmp
inc
ret
xchg
inc
cmp
jmp
lcall
testl
lcall
sti
xor
cltd
inc
jmp
or
push
mov
scas
jle
fists
dec
jmp
mov
test
inc
fisubs
clc
push
testb
xchg
movl
loop
out
pop
rcrb
adc
sbb
icebp
push
jl
jge
sarl
fimuls
lret
add
mov
and
dec
out
mov
dec
push
sbb
or
in
add
aad
adc
inc
out
int
outsl
aam
test
sbb
lcall
add
mov
ret
ljmp
sub
out
and
mov
cmp
iret
xchg
dec
ret
dec
ds
mov
xchg
pushf
or
adc
ret
iret
cltd
sub
xor
sarb
loopne
movsl
mov
jl
cltd
ljmp
adc
mov
or
mov
push
pop
ret
enter
notl
stos
jl
or
cmovo
inc
inc
mov
xorb
jecxz
adc
jnp
roll
decl
dec
push
lods
or
test
aad
fsubl
push
addr16
aaa
out
cmp
icebp
aam
testl
dec
sbb
hlt
stc
cli
dec
push
mov
lcall
sbb
insb
aad
cltd
mov
sti
test
ljmp
xchg
popa
vucomisd
xchg
xor
test
pop
xor
rorl
xor
cld
repnz
push
cmpsl
les
testb
and
cmc
dec
sbb
repz
dec
dec
inc
inc
je
mov
fcmovbe
ds
pusha
movsb
aad
popa
clc
adc
outsb
jb
xor
and
es
std
dec
test
mov
add
and
testl
int3
sub
in
das
pop
inc
jge
mov
jno
sbb
ror
and
mov
adc
xchg
nop
fwait
push
add
test
js
fcompl
jo
std
fmull
test
mov
push
insl
call
sti
mov
nop
pop
xchg
adc
cmp
lcall
xchg
xchg
mov
add
dec
andl
popa
scas
jmp
mov
pop
sti
into
or
push
xlat
push
dec
pop
push
repz
mov
mov
inc
das
and
roll
sub
lods
fildll
les
popa
mov
adc
mov
fimuls
inc
xor
push
repnz
shrl
fwait
insb
into
dec
lock
out
ljmp
mov
out
cld
or
test
fs
and
inc
and
enter
cmp
and
popa
lock
pop
movsb
pusha
repz
orl
lahf
rcrl
jo
bound
and
mov
lds
cmpsl
lcall
xchg
repnz
push
mov
neg
stos
out
in
pop
inc
fldt
sub
cmp
in
hlt
enter
sarl
sbb
cld
lret
rcr
cmp
dec
mov
scas
pop
cs
das
ds
pop
call
out
sub
xor
or
add
xlat
add
fnstcw
sub
das
nop
inc
clc
mov
les
mulb
cmp
shrb
orl
xchg
nop
mov
xchg
xchg
inc
mov
rorl
aaa
mov
inc
push
jb
cmp
and
xchg
js
fimuls
sub
jb
loopne
mov
or
sbb
fs
add
or
sbb
and
xchg
pushf
sar
push
jge
into
adc
xchg
iret
aas
adc
cmp
mov
mov
clc
not
jmp
in
stos
ljmp
popa
insl
lcall
das
fcoms
push
hlt
sub
mov
push
pop
jl
or
push
push
movsb
xor
cmc
sbb
sbb
fmull
mov
loope
xor
daa
push
sub
xchg
inc
lds
out
xchg
sahf
and
push
xchg
mov
push
mov
dec
or
negb
sbb
outsb
dec
xchg
jb
sub
cmc
push
mov
bound
mov
and
data16
cs
mov
les
xchg
shll
mov
inc
and
scas
insb
dec
xchg
push
mov
or
and
mov
ljmp
or
repnz
popa
push
pop
mov
addr16
in
aad
add
push
mov
push
fs
icebp
xchg
pop
cwtl
inc
and
push
fwait
movl
mov
call
popf
mov
mov
jae
movsl
aad
adc
popf
nop
stos
rolb
test
inc
stos
adc
fadds
dec
clc
xor
xchg
aad
inc
adc
movsb
xrelease
or
push
push
fidivl
pushf
cmp
or
mov
or
dec
mov
cmp
jle,pn
stos
test
leave
arpl
push
inc
and
xor
test
pop
lahf
push
cli
jg
test
int
adcb
cmpsb
into
loope
push
sub
cmova
xchg
push
inc
testl
notl
jg
adc
fadd
mov
loope
jp
test
not
stc
mov
mov
pop
jg
neg
pop
fisubs
lea
daa
inc
pop
ffreep
in
sbb
add
push
gs
adc
xchg
aaa
fisubs
sub
mov
inc
bound
out
add
xor
sahf
mov
jmp
or
sbbl
sbb
xchg
insb
push
inc
xchg
ret
sub
dec
negl
cmpsb
out
hlt
not
mov
mov
lock
fldt
inc
sub
callw
add
xchg
xor
mov
adc
adc
fisubl
out
repz
cs
mov
push
xchg
or
fstps
add
dec
adc
push
lea
push
daa
or
mov
movsl
mov
fidivrl
lret
or
iret
cmpxchg
roll
iret
xor
cltd
imul
dec
out
testl
pop
pop
jo
dec
or
adc
jecxz
pop
shll
ficompl
pop
cs
ret
and
nop
xor
add
pop
pusha
stc
xor
sarb
loope
rcrb
push
pop
insl
jmp
call
and
push
pusha
adc
mov
insb
daa
cmp
inc
mov
xor
jge
sbb
pusha
xchg
jns
sbb
cmc
cmpsb
jb
int
xchg
mov
xchg
aaa
lret
orl
cltd
test
stc
fstl
inc
fcoms
cwtl
mov
mov
xchg
not
xor
in
lods
cmp
dec
std
push
imul
cmp
imul
incl
xor
push
mov
cli
mov
add
xor
fwait
pop
stos
daa
add
sar
cmp
mov
add
lods
mov
jo
nop
dec
push
imul
shlb
inc
shrb
das
adc
adc
fs
lahf
enter
jl
ds
pop
sarb
stos
dec
aas
pop
mov
pop
inc
mov
sub
cmp
push
pop
xchg
dec
lahf
out
fsubrl
lea
adc
jns
cmc
push
mov
sbb
ss
mov
mov
and
and
outsl
sbb
xchg
rorl
scas
addr16
loop
mov
mov
std
add
push
inc
repz
pushf
popa
and
inc
add
jmp
mov
xchg
je
cld
int3
movsb
mov
pop
or
adc
orl
lret
mov
movsl
test
push
xor
mov
mov
dec
insb
mov
nop
sub
cmpsl
mov
mov
mov
int3
ficomps
pushf
ret
pop
icebp
int
int
inc
clc
mov
push
sub
adc
xchg
adc
jo
mov
scas
dec
rcl
test
rorl
scas
iret
xchg
sbb
repnz
xchg
clc
daa
nop
insb
ret
ret
add
pop
imul
clc
out
sahf
or
dec
jb
cwtl
fcmovnbe
imul
push
dec
or
jl
imul
sbb
lcall
cmp
mov
imul
cmc
pop
dec
nop
mov
dec
pop
xor
mov
subb
mov
int3
cwtl
test
outsl
cli
sbb
fnsave
mov
scas
out
jns
inc
scas
pop
adc
lret
out
dec
outsb
sub
push
adc
cmc
sti
mov
stos
dec
sbb
or
mull
cli
aam
ljmp
daa
mov
pop
or
shll
ja
pop
add
imul
push
loopne
mov
xor
fstl
fwait
mov
mov
sbb
push
pushf
loopne
inc
jae
xchg
mov
add
fnsave
jg
lea
rcll
adc
mov
xor
pop
ds
cmp
push
dec
call
pushf
icebp
pop
sbb
out
out
jl
aaa
fwait
lahf
and
dec
lahf
cltd
sarl
outsl
ja
dec
pushf
imul
and
std
xor
std
xchg
insl
rcr
cmp
sub
fs
push
jle
and
cmp
dec
dec
fistpll
cmpsb
mov
movsb
ret
int
out
inc
out
leave
push
xchg
jp
dec
and
scas
in
mov
mov
cmpb
lea
lret
dec
data16
loopne
incl
inc
fcoms
scas
cvtdq2ps
and
out
mov
add
jg
pop
or
dec
jmp
dec
iret
cli
mov
fisubs
bound
cwtl
mulb
fwait
es
mov
mov
daa
pop
js
or
pop
inc
int3
iret
inc
xchg
into
les
imull
in
mov
cmpsl
mov
sti
sub
lahf
or
lea
movsb
sbb
ficomps
pop
cmp
xchg
mov
mulb
orl
jno
arpl
or
xorb
repnz
shr
testb
les
mov
or
sub
xchg
sbb
movsb
jae
arpl
popf
xchg
push
push
inc
test
into
ss
inc
call
lods
mov
filds
sarl
dec
int3
or
jnp
mov
out
int3
mov
cmc
aas
mov
div
inc
leavew
in
enter
or
add
inc
xor
cmpsl
aas
push
cwtl
ljmp
out
inc
xlat
mov
arpl
or
push
mov
pop
repz
test
add
popf
inc
and
and
jb
push
push
or
mov
sub
imul
dec
jne
cmp
mov
inc
sbb
add
insl
add
pop
js
es
ds
xor
jp
inc
aas
movsl
pop
scas
fidivrs
mov
adc
fcmovne
pusha
cmpsl
rcr
xchg
xchg
ja
mov
pop
aam
lret
jle
pop
push
iret
fs
or
stc
add
cld
jecxz
jo
movsl
or
loopne
repnz
xor
roll
bnd
lahf
fs
cmp
xchg
ljmp
and
movl
cs
mov
or
lds
mov
jecxz
hlt
and
ljmp
incl
out
sbb
lds
inc
push
dec
or
and
xchg
mov
dec
hlt
sti
push
ja
jo
fiaddl
jmp
push
std
inc
stos
popa
loope
mov
fidivrs
lods
loop
mov
push
lahf
mov
mov
cmc
xchg
out
add
gs
add
or
add
inc
add
dec
shll
inc
push
fnstenv
loope
adc
lcall
enter
mov
add
adcb
ds
mov
mov
sbb
push
repnz
loope
movsb
mov
jl
jecxz
dec
xor
jmp
adc
bound
jnp
push
mov
dec
mov
jg
sbbb
ret
xchg
pop
or
add
pop
inc
cld
pop
jno
push
pop
cli
inc
or
roll
loope
xor
mov
int3
fdivr
out
mov
pusha
lods
in
lea
int3
pusha
pop
add
subb
loope
mov
and
dec
cmp
xchg
push
and
lret
into
adcb
and
xchg
lock
aam
xor
and
adc
mov
in
shrl
leave
mov
inc
mov
lret
or
int3
popf
cmp
cmpsb
test
pop
sbb
sbb
push
add
push
lds
push
popf
mov
pop
fistpll
ljmp
xor
mov
rcll
sub
call
or
xor
sub
mov
aam
sbb
fcmove
hlt
pop
push
or
mov
or
lret
sahf
loop
cs
pcmpgtd
cmp
mov
inc
gs
fs
pushf
jmp
mov
inc
push
rcl
int
pop
sub
movsl
jle
loop
rorb
jnp
mov
subl
or
or
sbb
lcall
sbb
xchg
testb
sub
dec
testb
movsb
sbb
jl
xor
popa
inc
inc
push
fistps
cmp
cmp
xor
orl
mov
jne
ljmp
dec
cmpsl
mov
mov
pmovmskb
inc
mov
gs
not
in
lret
fildl
mov
cmp
mov
enter
and
testl
mov
mov
sbbb
push
dec
and
xchg
cld
out
rcll
mov
mov
lods
or
out
dec
cli
jae
mov
lock
and
outsb
sarb
jmp
xor
jns
sbb
mov
xchg
and
pop
cli
push
pop
xor
pop
imul
inc
test
xlat
stc
xchg
sbb
xchg
sub
sbb
pop
mov
dec
sti
daa
mov
cmpsb
popa
or
flds
sahf
jo
xor
arpl
xchg
flds
mov
cs
test
fsubrl
int3
push
ret
jmp
out
std
lods
ret
popa
clc
pusha
add
jbe
sahf
cwtl
test
stc
and
test
dec
mov
push
lods
out
mov
jns
lods
xchg
ljmp
mov
aam
jg
jp
subb
add
xor
xor
fiaddl
into
orb
fucomip
hlt
cwtl
xchg
es
pop
rolb
fmul
test
cmpsb
jnp
test
int
data16
push
pop
jmp
xor
ds
xor
jle
je
pop
lahf
jae
or
and
clc
or
xor
sub
in
dec
mov
pusha
outsl
mov
cmpsl
push
xchg
inc
inc
into
into
aam
in
xchg
inc
lock
add
cmpsb
enter
mov
cmp
movsl
out
movsb
rcl
push
iret
data16
movsl
mov
sub
pop
shll
subl
repz
stos
pop
or
loopne
in
divb
push
xor
test
pop
and
dec
out
dec
add
fsubrl
lret
xorl
cltd
mov
shrd
inc
add
xor
movsl
scas
pop
das
repz
lcall
int
mov
jge
loopne
jp
xchg
cmp
int3
loope
push
sub
enter
cltd
cmp
ss
mov
sbb
stos
mov
pop
push
out
sub
mov
pop
adc
fstl
inc
mov
xchg
rolb
push
sbbl
sbbb
lcall
popa
sub
punpcklbw
cmp
test
scas
mov
lods
sub
sub
shl
cmp
pop
push
cmpsb
dec
repz
mov
push
xchg
xor
aam
push
xchg
mov
mov
xchg
outsb
stos
jecxz
xchg
sub
xor
cmp
jmp
xchg
mov
inc
mov
mov
pusha
mov
push
enter
iret
mul
cmp
push
sub
mov
pop
subb
jecxz
sub
add
mov
aam
sbb
lods
mov
je
mov
insb
and
and
xchg
xor
cli
inc
popf
jno,pt
push
out
add
sti
movsb
or
inc
fs
pop
xchg
add
push
leave
arpl
aaa
sub
inc
ss
mov
std
hlt
div
stc
in
pushf
jae
nop
out
int
fwait
lcall
jl
aad
or
scas
push
inc
aas
out
cmp
fs
fs
mov
xchg
fidivl
rorb
in
pop
jl
mov
int3
stos
enter
rclb
in
lret
add
ljmp
int
mov
repnz
out
push
in
mov
lea
inc
div
jae
xchg
loope
mov
mov
pop
les
push
pop
ljmp
xlat
sbb
mov
push
sti
sarl
int3
lods
lods
fimuls
mov
adc
rcrl
data16
repnz
cli
aas
movsl
jbe
in
je
in
sbb
xchg
mov
push
xchg
mov
add
fldpi
dec
cmpsb
stos
in
jg
das
out
ds
inc
outsb
and
push
int
sub
cmc
adc
mov
add
and
pop
dec
cmpsl
cmp
sub
dec
into
sbb
pop
lods
pop
cmp
lahf
adc
fsubs
div
dec
mov
jmp
push
push
pop
fcoms
movsl
in
dec
sbb
sbbl
pop
pop
out
std
dec
fsubs
addr16
jge
mov
pop
dec
fsubl
push
fs
xor
fistps
ja
pop
push
inc
push
xchg
cltd
pusha
in
mov
outsb
push
pop
sbb
jecxz
es
sbb
add
add
scas
jb
inc
fisubl
sub
sbb
daa
out
xor
pop
mov
ret
jmp
sbb
lret
inc
loope
ljmp
in
ljmp
nop
cmp
push
mov
out
es
out
dec
pusha
xor
xlat
sub
mov
xor
add
in
jne
adc
mov
push
leave
shll
mov
pusha
mov
dec
repnz
and
fsubp
lahf
sbb
dec
pop
pop
fbld
into
fsubrs
xchg
nop
stc
into
out
mov
ja
cmp
mov
xchg
push
push
cmp
xchg
mov
arpl
pop
inc
inc
pop
pop
push
test
inc
popf
lahf
leave
je
push
scas
popf
inc
pusha
inc
int3
mov
or
repz
cwtl
inc
xchg
xor
loope
mov
or
sub
add
shr
cmp
gs
addr16
nop
jl
icebp
sahf
movsb
insb
fwait
cmp
adc
ret
cwtl
jmp
shlb
movsl
mov
mov
inc
xor
in
outsl
ficompl
dec
sub
mov
fwait
out
js
mov
loope
hlt
and
xorl
in
mov
mov
xor
cmc
aad
in
aam
add
fucom
int3
pusha
lret
pop
jle
cli
mov
jmp
mov
mov
mov
adc
dec
and
arpl
mov
inc
popa
rolb
adc
dec
dec
jae
out
hlt
or
jo
inc
int3
das
imul
xor
adc
sub
js
xchg
lret
mov
lahf
cmovne
xchg
sub
es
mov
pop
ljmp
les
inc
not
scas
jp
sbb
ja
cs
enter
adc
icebp
xor
fisttps
jnp
adc
jmp
stos
in
mov
pop
jecxz
pop
gs
adc
mov
dec
push
xchg
fisttps
daa
dec
test
aad
int3
inc
ret
inc
mov
add
rep
and
rcrl
lds
push
sti
dec
inc
and
sahf
lret
bound
jp
icebp
mov
sub
and
pop
mov
inc
out
jnp
mov
inc
sarl
nop
pushf
dec
or
loop
in
dec
push
mov
out
mov
cmpsb
xor
stos
in
stos
jmp
jmp
sarl
addr16
out
fistpll
out
mov
popf
out
adc
mov
xlat
les
pop
xor
pushl
lods
out
xchg
inc
fldl
xor
pop
arpl
or
jo
pop
xor
jmp
cmp
insl
shr
lret
mov
hlt
add
lock
push
pop
push
lret
scas
btr
mov
pop
dec
mov
pop
mov
sahf
insl
or
es
push
mov
xor
fwait
rclb
stos
xor
and
add
clc
adc
movsl
movsl
lret
test
fdivrs
jle
push
test
shll
pusha
lcall
hlt
stos
cltd
fs
imul
push
lcall
out
jle
cs
xchg
mov
xor
cwtl
js
cmpsb
jns
cmp
add
mov
cmp
ucomiss
and
lret
pop
push
pushf
mov
jno
lcall
xor
bound
loop
cld
xchg
add
adc
mov
xor
xor
mov
xor
pop
lahf
cmp
stc
pop
mov
orl
push
xor
fs
into
enter
out
test
cmc
test
cli
dec
jmp
push
inc
push
sbb
add
push
inc
or
inc
notl
dec
adc
sbb
dec
negb
xchg
push
pop
cmp
dec
jbe
add
fistpll
movsb
sub
jge
incb
cld
test
sub
jle
mov
inc
mull
in
inc
xor
sub
add
gs
fcomi
cli
cmp
into
xor
ljmp
rorb
pop
inc
add
pop
ja
cmp
push
mov
inc
mov
pop
push
sahf
xchg
cld
dec
inc
addr16
sbb
outsl
adc
dec
xor
cmpsb
out
nop
bound
arpl
mov
push
push
stos
cs
les
test
pushf
js
repnz
lahf
andb
lcall
cmp
mov
lods
fnstcw
xchg
inc
imul
xchg
pushf
or
or
cmpb
dec
daa
mov
mov
xchg
add
repz
jb
dec
xor
adc
outsb
in
cmp
mov
dec
test
test
push
iret
xor
into
jno
rcrb
in
xor
loop
dec
ljmp
in
cwtl
mov
call
std
js
dec
bound
sti
xchg
stos
frstor
sub
mov
push
fidivs
mov
push
adc
test
out
xchg
scas
stc
sub
out
test
mov
xor
inc
xchg
repz
jae
lods
jmp
stos
aas
pop
mov
xlat
ds
jmp
xchg
adc
rcll
div
or
daa
sub
push
and
xchg
xchg
jecxz
jae
and
mov
sub
jo
das
dec
jno
jb
adc
xor
test
ljmp
pop
xor
ja
das
push
mov
jmp
or
add
popa
cwtl
cli
inc
loope
sbb
popa
xchg
cs
jmp
aaa
mov
inc
movsb
mov
cltd
out
aaa
hlt
stc
jg
roll
xchg
fisttps
push
dec
daa
into
or
and
pop
add
addr16
xor
bound
sarb
cmpsl
adc
ja
loopne
cmpsb
mov
outsb
lods
pop
xchg
xchg
mov
shr
fdivr
std
jecxz
lret
cli
xlat
mov
push
mov
jnp
xchg
iret
out
push
insb
mov
push
clc
clc
or
mov
xorb
cwtl
test
pop
add
push
push
mov
cwtl
fdivrs
andb
fwait
inc
dec
add
js
cmp
xor
adc
rol
dec
mov
es
mov
xlat
fsubr
movsl
or
inc
mov
dec
outsb
xor
cmc
pop
arpl
mov
xchg
repnz
inc
lods
cmp
mov
sahf
jg
inc
mov
leave
ljmp
mov
fnstcw
jmp
cwtl
sbb
or
pop
inc
nop
stos
mov
mov
repnz
lcall
mov
lret
adc
leave
lret
and
push
loop
xchg
bound
sub
incl
mov
adcb
roll
in
xchg
mov
fcompl
sbb
sbb
rol
add
jle
cmp
nop
and
scas
dec
or
movsl
inc
fcmovbe
rcrl
popl
ja
push
mov
jle
cmp
mov
mov
xor
push
adc
btrl
add
std
repz
lcall
scas
push
inc
push
pop
cmp
mulb
xchg
test
mov
pusha
push
cmp
int
out
and
movsb
pop
das
popf
pop
enter
push
fdivrl
mov
xor
xchg
mov
xlat
add
call
shll
out
testw
dec
cmp
and
test
es
sub
sub
ss
and
pop
and
add
ucomiss
nop
inc
mov
in
jmp
mov
adc
and
shrl
mov
adc
xchg
jmp
push
outsl
jnp
ret
mov
or
inc
lea
stos
and
dec
dec
call
ficompl
cs
push
adc
lods
mov
out
mov
push
ja
fs
xor
lret
mov
mov
mov
out
iret
test
mov
push
add
gs
dec
xor
inc
aas
pop
pop
and
iret
mov
mov
inc
out
adc
aam
sub
sbb
dec
gs
enter
ss
dec
adc
mov
jp
xchg
push
cmp
mov
pop
out
out
jmp
fistl
adc
pop
sbb
add
mov
jbe
in
jmp
aas
nop
cmc
push
cmp
xchg
in
aad
stos
andl
add
out
lret
out
sub
into
dec
xor
and
cmp
dec
fsubl
xchg
arpl
xchg
mov
xchg
popa
psrad
push
out
push
mov
out
jnp
out
xchg
push
ljmp
fisttpl
add
jb
gs
popl
ficoml
xor
lods
mov
fsubl
mov
cltd
negl
mov
xor
pop
xor
leave
lcall
fisttpll
push
dec
add
jl
add
mov
xor
fsubr
or
hlt
xor
inc
xchg
inc
fimuls
mov
fxch
adc
in
dec
mov
pop
cmp
jmp
lcall
or
xchg
dec
shlb
idiv
xchg
mov
jo
mov
outsb
or
lock
or
je
cmp
push
rcll
xchg
jmp
jb
xchg
mov
push
sahf
sahf
sub
and
int
xor
shl
add
dec
inc
loop
xor
dec
push
mov
in
adc
icebp
sbb
shrb
jle
ljmp
inc
cmp
sbb
in
adcl
cli
movsb
mov
jnp
add
inc
shlb
mov
jmp
mov
fmuls
inc
je
mov
addr16
xor
lahf
fisubl
cli
mov
cltd
adc
dec
lds
fiaddl
xor
dec
mov
loopne
sub
xor
jo
pop
mov
adc
cli
popa
cmp
subl
sti
std
rcr
ljmp
flds
pop
inc
push
sbb
ja
sti
fwait
lret
aas
outsb
rolb
dec
orl
ljmp
pusha
sti
aas
pop
mov
cli
mov
adc
test
inc
pushl
sbb
iret
std
std
outsb
mov
push
jno
hlt
stos
sub
jp
insb
in
xor
jg
test
mov
mov
out
push
sub
and
sti
iret
mov
dec
jg
loop
subl
xlat
cli
sub
out
data16
fsubrl
jle
pop
push
fstpl
pop
jb
jmp
adc
sbb
xchg
or
pop
lea
dec
jmp
stos
cld
xchg
or
leave
dec
jmp
movsb
orb
pop
icebp
addb
cmc
xor
cmpsl
mov
pop
in
das
ss
xor
adc
xchg
ret
in
scas
push
lret
stc
aam
push
jg
xor
les
fisubs
fisubrl
dec
iret
and
xchg
xchg
les
add
ret
sahf
stos
dec
fildl
leave
cmc
xor
aaa
stos
sbb
stc
xchg
into
insb
sub
push
xchg
lods
and
inc
push
in
dec
and
add
or
dec
xchg
clc
dec
notl
pusha
or
movsl
mov
mov
push
inc
adc
xor
mov
out
roll
inc
test
arpl
ret
inc
inc
adc
iret
daa
mov
sti
mov
push
lret
jbe
adc
decb
shl
and
or
xchg
xor
mov
and
ret
and
or
imul
jg
mov
sbb
inc
dec
inc
push
mov
push
jg
arpl
jno
cld
imul
push
into
movsl
mov
mov
lods
push
dec
xor
or
fwait
dec
push
mov
mov
arpl
nopl
fldl
add
int3
mov
xchg
jmp
adc
push
push
jg
jmp
mov
scas
lods
test
mov
pop
ja
mov
mov
jbe
and
insb
dec
popfw
xor
incb
lret
pop
rolb
je
push
outsl
jmp
in
in
data16
push
mov
pop
inc
cmp
or
push
mov
fadds
cmp
div
repnz
mov
jp
jb
outsl
cwtl
jnp
pop
jbe
cmp
dec
in
imull
shrl
inc
jl
mov
dec
xor
mov
sarl
or
or
xchg
push
mov
ljmp
sti
mov
push
test
scas
out
fs
pop
iret
sub
xor
xchg
in
xchg
sub
jge
pop
xchg
mov
dec
popfw
lcall
xor
cmp
inc
sbb
out
bnd
mov
add
popa
cmp
pop
sbb
mov
adc
lahf
mov
ljmp
divb
mov
gs
inc
inc
push
mov
test
sub
mov
mov
lods
xor
fstpl
and
pusha
popa
mov
js
fiaddl
cwtl
or
loopne
insb
mov
xchg
mov
push
push
sub
xlat
cmp
ficoml
jno
push
mov
dec
sbb
xor
mov
push
in
adc
lock
dec
outsb
pop
xor
das
sbb
push
mov
xor
pop
in
sti
into
sbb
push
hlt
inc
and
inc
fwait
fs
insw
js
aaa
xchg
sbb
or
jmp
push
movsb
dec
testb
xor
and
fcoms
mov
pop
or
mov
and
test
addr16
data16
les
ja
adcl
cmp
pop
sahf
ds
leave
ror
mov
inc
sbb
sub
jno
outsl
push
ja
addr16
sti
shlb
hlt
add
fcomps
outsl
xchg
in
aam
ficoml
mov
lret
lahf
repz
dec
ljmp
inc
or
insl
lret
push
dec
outsl
mov
cmp
lods
je
mov
sbb
pop
jg,pn
enter
in
or
push
mov
ficompl
mov
int
ljmp
mov
inc
push
or
test
mov
push
hlt
lds
and
add
dec
int
sub
dec
lret
add
and
jmp
out
imul
jmp
mov
mov
mov
inc
outsb
mov
dec
int3
push
xor
dec
push
test
jb
mov
addr16
out
sub
out
rcrl
jmp
mov
clc
insb
into
pop
test
stc
or
loop
negl
pop
xor
xor
push
xchg
xor
aas
enter
lret
test
sti
dec
shlb
dec
add
incb
mov
outsb
in
movsl
adc
rcr
xchg
test
fsubrl
std
jnp
mov
or
lahf
cmpl
leave
je
test
jb
stos
and
outsb
push
scas
mov
push
scas
out
xchg
mov
mov
lcall
call
push
lds
xchg
sub
push
mov
mov
sub
loop
push
mov
mov
push
shr
test
loop
lds
cli
push
cmp
cmp
std
cmp
mov
xor
push
fisttps
cmp
loope
inc
ljmp
ljmp
push
xor
adc
insl
rcl
mov
lret
outsl
fcomi
mov
cli
fmull
ret
push
xchg
sahf
cmp
iret
enter
pusha
fsub
test
nop
xchg
stos
clc
outsb
mov
lahf
mov
mov
cmc
repnz
pop
push
pushf
je
mov
in
mov
arpl
mov
xchg
cmp
into
mov
xchg
inc
imul
in
sbb
mov
fs
or
mov
icebp
mov
sub
fs
inc
pop
fucom
outsl
jp
repz
push
imul
add
xlat
pushf
rorb
jmp
cld
and
xchg
gs
inc
mov
xlat
dec
pushf
imul
add
mov
pop
stos
hlt
jne
arpl
imul
cmpsb
jp
dec
fdecstp
mov
cmp
cs
lods
jbe
mov
mov
test
inc
xchg
jmp
xchg
cmpb
int3
repnz
mov
lock
icebp
mov
xor
cmp
xchg
add
mov
test
inc
adc
ror
cwtl
mov
cmp
lahf
or
sbb
outsl
test
inc
mov
add
jge
test
rorl
add
jb
popa
jne
or
aas
roll
movsb
add
xchg
jae
dec
jg
scas
lahf
mov
repz
and
jno
aam
adc
lea
adc
ficomps
stos
out
mov
inc
shl
mov
jo
stos
dec
push
xor
and
lcall
mull
pop
out
xchg
imul
imulb
ja
or
dec
push
push
lea
or
xchg
mov
mov
aas
lods
repz
adc
imul
xor
add
and
fdivrs
cmp
pop
mov
mov
sbb
pop
je
add
movsb
insl
adc
loopne
outsl
mov
sahf
outsl
adc
lahf
add
lahf
mov
cmpsb
dec
cmpsb
mov
add
popa
outsl
mov
inc
inc
ffreep
repnz
xor
mov
push
gs
mov
sbb
adc
scas
add
or
xor
shll
push
mov
jbe
push
lods
addr16
pop
push
add
addb
cwtl
pop
mov
inc
xchg
mov
lea
cli
popa
pop
or
pushf
xor
imul
xchg
inc
das
dec
data16
sbb
push
cltd
lret
mov
dec
add
jb
push
int3
cmpsl
cmp
xchg
or
insb
mov
cmp
push
mov
repnz
add
aam
movsb
sti
dec
iret
inc
mov
je
mov
es
inc
decb
push
das
xchg
mov
add
enter
mov
test
lret
dec
add
pop
and
in
shlb
mov
mov
jbe
xchg
stc
adc
mov
jo
cmpsb
xchg
addr16
pushf
popf
cli
and
xor
into
iret
inc
jne
data16
insb
fwait
adc
sarb
push
dec
fistl
sbb
negb
cltd
and
sub
lods
pushf
cmpsl
loopne
push
adc
xchg
lea
fwait
xor
fcompl
pop
data16
sarl
in
outsl
sbb
jmp
mov
jle
loope
gs
pop
movsb
jg
icebp
outsb
push
enter
adc
jae
lds
push
mov
pop
xchg
dec
addr16
testl
push
mov
push
lahf
cmp
sub
mov
jo
ret
pop
xlat
pop
mov
je
ficompl
popa
sbb
xorl
jno
mov
imul
or
dec
fisubs
dec
jecxz
jge
cmpl
inc
pop
scas
clc
xor
push
xchg
popa
clc
add
lret
loopne
out
cltd
ror
movsl
repnz
xchg
dec
jae
outsl
out
xchg
call
jno
add
data16
stos
mov
mov
dec
pop
mov
pop
cmp
movsl
dec
insb
lods
fldenv
mov
aam
mov
add
hlt
cmp
fdivr
in
movsl
stc
pushf
sahf
pusha
add
cwtl
jge
inc
hlt
lds
xchg
icebp
adc
mov
lea
or
enter
fldt
adc
je
adc
cmp
dec
and
inc
jmp
and
jb
adc
sub
sar
xlat
push
stos
add
repnz
sub
idiv
das
inc
xor
lock
adc
ret
push
push
lock
jo
cli
push
leave
push
enter
rorb
dec
adc
clc
ret
mov
xor
adc
outsl
sub
rol
gs
adc
add
aam
andb
es
jns
inc
pop
or
pusha
mov
mov
push
in
sbb
push
push
xchg
stos
dec
inc
ds
daa
or
adc
push
cltd
mov
outsb
sub
in
ficoml
dec
xorb
cli
add
aas
ja
cmp
dec
imul
jg
pop
fnstenv
cmp
mov
dec
jecxz
fnstenv
sarl
push
push
or
sub
test
pop
loope
dec
fsts
cmpsl
fwait
push
push
cmp
loop
jb
sub
int
inc
jae
in
call
adc
dec
outsb
sbb
dec
enter
dec
push
inc
push
rcll
push
mov
mov
divl
inc
fsubrp
push
mov
int
out
add
mov
jecxz
out
or
sbb
sbb
xchg
jmp
aam
div
dec
outsb
jle
loop
or
imul
jb
pop
mov
ljmp
cmp
adc
aaa
inc
or
stos
mov
cli
sbbl
sub
dec
xchg
pop
aaa
xor
ret
das
pop
int3
movsl
aaa
cld
clc
mov
mov
fimuls
fwait
into
jbe
inc
sbb
orl
or
xor
fidivrl
shl
adc
or
pop
ds
orb
in
repz
vpmaddwd
insb
mov
xchg
int
dec
mov
mov
dec
mov
pop
loop
mov
out
inc
mov
ret
stos
sbbl
inc
in
jno
jb
imul
cmp
mov
test
fsubrl
mov
xchg
push
gs
pushf
outsb
pusha
adc
sbb
lret
stc
mov
out
xchg
int3
push
and
push
lcall
ljmp
push
sbb
cmp
cwtl
sbb
pop
and
call
dec
cmp
add
dec
mov
push
dec
inc
cmpsl
sub
test
jg
add
pop
cmpsb
cmp
ror
pop
xchg
aad
notl
sub
fbld
fs
cmpsb
cltd
lret
fwait
push
cwtl
and
sbb
xchg
sahf
mov
outsb
push
sub
fwait
adc
out
adc
pop
mov
ret
fwait
pop
xor
push
repz
push
inc
xchg
mov
popa
xlat
push
imul
push
sbb
cltd
xchg
pandn
popf
pop
idivb
sbbb
xor
xchg
dec
iret
jmp
mov
xchg
loop
cmpsb
stc
aad
jle
nop
fwait
xor
iret
in
fwait
xchg
push
lcall
add
mov
add
fstps
xlat
imul
push
repz
add
shr
add
loopne
jecxz
test
icebp
sti
into
imul
xchg
test
insb
testb
jmp
pop
rolb
xchg
dec
inc
daa
addb
imul
jg
test
or
je
into
std
test
fbld
xchg
xor
mov
xchg
lods
insl
scas
jge
jno
mov
stos
mov
mov
into
sub
loop
mov
test
add
jle
pusha
stos
shr
push
loop
push
ret
and
pop
leave
popa
xlat
mov
in
inc
imul
jp
xchg
in
movsb
jmp
dec
mov
mov
mov
lcall
rorl
dec
iret
sub
cmpsb
jne
sub
add
in
lea
cmp
cli
pop
loopne
cmp
out
ljmp
jge
adc
mov
cmp
aad
jg
dec
dec
fsubrl
adcl
jecxz
dec
mov
sbb
xchg
lds
inc
bt
xor
cld
jb
mov
push
in
sub
aad
iret
stos
cli
testb
inc
add
mov
sti
pop
inc
cmpl
xor
xchg
push
sti
shll
ficomps
into
cltd
inc
cli
cmpsb
push
fisubl
dec
add
dec
or
jle
pop
xchg
dec
dec
cmp
lea
roll
data16
xchg
pop
adc
xor
xor
es
xchg
movsl
mov
stc
pop
sub
push
lea
mov
and
lret
out
dec
imull
push
scas
shlb
and
or
les
lret
or
xchg
sub
test
and
negl
push
inc
inc
insl
inc
mov
jmp
test
shl
xor
shl
xchg
rcrb
aad
mov
stc
jmp
xor
cmp
pusha
cli
jb
xor
sar
into
cwtl
popl
ss
out
push
addb
inc
outsl
das
mov
and
jmp
mov
ss
cmp
outsl
lcall
cld
xchg
scas
jns
fldl
clc
xchg
or
les
mov
out
popf
stos
nop
or
jne
icebp
je
xchg
add
outsl
lds
push
test
movsb
je
xor
or
inc
inc
inc
pop
mov
sahf
call
sub
or
iret
imul
mov
lahf
mov
mov
push
jmp
xor
rorb
repnz
or
dec
mov
mov
shrb
std
or
dec
outsl
aad
movsl
hlt
fwait
shl
adc
cmp
les
xor
xor
dec
jno
jmp
lods
in
aaa
mov
cmp
les
sarl
rcrb
bound
xorw
dec
pop
xchg
push
pop
outsb
sub
in
mov
mov
rolb
inc
aad
das
outsb
rcrl
jmp
pop
xchg
insb
lahf
cmp
das
insl
fistps
jmp
mov
xchg
ljmp
sbb
frstor
outsl
mul
imul
insb
or
repnz
scas
mov
xor
mov
lret
pop
or
pop
or
cmc
cmp
inc
pop
fstpl
jbe
aad
mov
jmp
notb
sarl
and
pop
adc
scas
xlat
sub
and
loop
add
xchg
and
addr16
fs
adc
mov
mov
pusha
ss
jle
rclb
sbb
mov
outsb
mov
jns
imul
jbe,pn
insb
out
cwtl
push
xchg
xor
call
adc
rcrb
lahf
call
out
pop
adc
push
test
aas
mov
je
hlt
gs
cmc
das
push
lea
ret
mov
jg
cmp
push
out
jbe
mov
mov
pop
mov
test
mov
fldt
xchg
scas
es
je
aad
pop
ss
into
sahf
dec
into
insb
xchg
sub
mov
mov
xlat
mov
scas
stos
addr16
addb
and
cmp
mov
rcll
jno
xchg
stos
push
scas
fiadds
insl
mov
mov
and
fmulp
je
push
ret
mov
outsl
xchg
mov
cltd
scas
ficoml
mov
lods
or
outsl
mov
xchg
fcmove
lret
jg
mov
mov
frstor
lcall
xlat
xchg
mov
pop
lret
jecxz
dec
pop
mov
cltd
fistpl
pusha
push
push
dec
jle
fsts
inc
mov
lret
popl
jl
push
outsb
mov
adc
cmpl
shll
xchg
push
hlt
mov
jle
mov
out
notb
fs
mov
mov
adc
mov
aas
data16
addb
movsb
inc
or
int
leave
lret
cs
dec
pop
imul
es
js
mov
xor
xor
xchg
testb
sub
movsb
out
push
dec
dec
mov
mov
imul
dec
ss
js
inc
cmp
xchg
xor
xor
and
xlat
das
fwait
add
xor
int
dec
cmp
mov
into
popf
sub
cwtl
xor
mov
sub
mov
xchg
test
mov
jle
mov
fidivs
sahf
dec
enter
mov
pop
mov
xchg
test
cmc
push
mov
dec
add
sbb
mov
rcl
jo
call
mov
inc
xor
rolb
mov
xchg
mov
xchg
cmpsb
add
nop
mov
ds
xchg
xchg
ja
stos
and
call
push
pop
pop
enter
pop
add
xchg
xor
sub
int
sub
pop
imul
lret
mov
xchg
xchg
mov
xchg
xchg
test
mov
sti
fbstp
das
aaa
in
scas
data16
and
cli
lds
or
mov
mov
fstpl
std
push
inc
and
aam
ja
pop
sti
lahf
mov
push
push
xor
dec
adc
add
fdivr
dec
enter
ljmp
mov
pop
mov
cmp
mov
xchg
imul
push
dec
incl
mov
rolb
ffree
mov
or
jle
int3
xor
inc
adc
add
sub
imul
out
lcall
and
add
mov
out
call
dec
icebp
imul
push
negb
rorl
xchg
mov
in
sbbb
push
pop
mov
mov
jbe
pushf
lret
pusha
and
pop
mov
std
add
mov
int3
pop
fiadds
outsl
inc
dec
mov
pop
mov
int3
lods
ret
icebp
shl
pop
fscale
stc
pusha
add
in
mov
test
rolb
push
int
std
rorb
mov
fistpll
ljmp
movsl
dec
push
mov
add
aaa
pop
sub
cltd
arpl
leave
arpl
mov
lret
cld
mov
psrad
shl
jae
aas
pop
jl
jno
and
mov
out
adcb
mov
call
cmp
sbbb
jl
xchg
fs
push
mov
aaa
cmp
out
mov
mov
adc
xchg
aad
sub
xor
cmpsb
mov
ja
ds
push
or
jecxz
or
icebp
dec
imul
mov
jge
lret
push
lret
push
pop
imul
push
jmp
xor
ret
mov
push
jge
scas
rorl
aam
dec
sub
test
pop
cmp
pop
arpl
loop
xchg
or
fldl
jmp
mov
dec
adc
and
fisttpl
frstor
push
add
add
ljmp
iret
pop
in
adc
and
shr
test
data16
pushf
popa
inc
insl
cs
adc
xchg
mov
mov
in
loope
rolb
dec
mov
leave
dec
cmp
cld
pop
push
lcall
dec
out
jecxz
inc
and
clc
xchg
movsl
pop
dec
jbe
movsb
xchg
movsb
clc
movsb
loope
xor
loope
leave
orb
ss
popa
dec
iret
fdivs
xor
cmp
mov
jle
pop
loop
inc
int3
lods
ret
dec
jnp
or
sbb
cwtl
sub
leave
inc
iret
adc
push
push
xchg
sbb
into
lock
push
sbb
jne
arpl
popf
hlt
jecxz
dec
mov
add
out
aaa
sahf
in
es
jno
repnz
loope
add
cwtl
fsubrl
ret
xlat
aam
mov
lcall
lret
dec
test
shll
and
aad
inc
add
push
enter
or
cs
mov
jge
or
daa
mov
adc
hlt
cmp
push
inc
xchg
stos
sarl
mov
jge
or
mov
fwait
mov
fwait
mov
sti
scas
sub
xchg
xor
js
inc
out
jecxz
lret
jnp
xor
or
aaa
jle
mov
cmp
mov
mov
not
ds
inc
or
icebp
sbb
fdivs
cmp
cmp
cltd
in
fsubs
les
daa
pop
or
push
mov
push
adc
outsl
shr
aad
cli
nop
jne
lret
insb
push
sti
bound
ret
outsl
cs
lds
or
pop
mov
loopne
scas
dec
mov
ret
in
xor
xlat
mov
inc
rcl
jmp
inc
jp
sub
cli
and
ja
dec
lahf
repnz
insb
in
xchg
or
adc
add
push
dec
into
out
adc
push
cmpsb
cmc
xor
fsubrl
pop
clc
ljmp
fidivrs
push
roll
out
mov
nop
or
cwtl
movl
lods
jns
clc
repz
push
mov
push
push
js
pushf
sbb
cmp
fisubl
pop
add
and
frstor
jp
or
inc
sub
cmpsb
fs
cld
test
and
mov
jle
add
fistpll
push
out
pop
push
cmp
mov
push
loopne
pop
sbb
push
addr16
and
xchg
xor
or
mov
push
aas
xor
xchg
cmp
test
insl
mov
and
mov
aam
stos
push
xchg
icebp
ror
push
jmp
jns
scas
fsubl
sahf
xor
pop
addr16
cwtl
pop
aad
pushf
mov
mov
jno
movsb
pop
cli
mov
sbb
sarb
mov
inc
add
dec
mov
out
jp
int3
in
xchg
jns
cmp
cmp
pop
loope
cmp
movsl
ss
mov
push
xchg
xchg
xchg
sub
stc
scas
imul
jge
and
sbb
mov
nop
xor
dec
out
out
jle
jl
mov
xor
insl
cld
pop
sbb
adc
divb
sub
pusha
pop
aas
add
or
push
xchg
dec
push
lahf
add
test
add
push
aam
scas
lods
call
adc
pop
or
xor
imul
in
fistpll
sbb
lcall
cs
add
cld
add
ret
fucomip
cmp
push
test
in
das
jb
add
repz
mov
mov
popa
iret
cmp
adc
add
arpl
sbb
pop
mov
std
push
popf
inc
jnp
or
xor
pop
cmpsb
aaa
repz
mov
cmp
mov
push
std
xchg
sti
shrl
bound
das
xchg
imul
xlat
mov
ljmp
insb
in
out
mov
jp
push
jbe
pop
jecxz
pop
testl
fcoms
sub
pop
mov
rclb
xchg
insl
outsb
into
jno
fdivs
or
loopne
stos
cmp
sub
aam
in
xor
mull
stc
push
out
pop
fimull
std
lods
out
pop
mov
lahf
cmc
movsb
dec
pop
dec
cld
sbb
movsb
mov
out
idiv
mov
or
jl
cs
stos
cld
outsb
leave
xchg
sub
scas
dec
push
popl
into
jne
mov
cld
jecxz
loopne
add
mov
jle
xor
mov
adc
cmp
inc
or
push
pop
aam
push
mov
mov
data16
dec
dec
xlat
aam
sbb
push
dec
push
mov
cmp
pusha
repz
inc
sub
dec
mov
js
das
mov
sahf
lahf
push
out
lahf
add
dec
clc
pop
jnp
cmp
or
fistl
jp
push
hlt
or
jmp
inc
das
sub
xchg
iret
ljmp
aad
nop
adc
sub
jb
loopne
notb
mov
jae
push
and
push
sbb
insl
aaa
mov
cmp
in
cld
xlat
into
pusha
xchg
pushf
pushf
sub
aaa
push
push
scas
pop
xchg
ss
xchg
mov
fisubrl
rolb
cmp
scas
xchg
in
shlb
inc
ror
mov
jecxz
sbb
jp
or
mov
add
sub
lea
push
out
ss
jne
outsb
xsha1
cmpsb
push
mov
or
into
mov
pop
cmp
adc
mov
inc
fwait
mov
popa
mov
roll
pop
add
pop
sub
pop
pop
scas
mov
xor
fadds
cmp
cmpsb
sbb
xchg
iret
mov
jbe
shr
shll
jns
jl
add
shl
sarb
ror
aam
pop
enter
test
dec
dec
mov
loopne
pop
or
loope
mov
fdivl
in
dec
das
xchg
jle
popf
jge
push
fists
daa
fists
ficoml
movsl
add
iret
arpl
faddl
jmp
enter
push
mov
mov
mov
pop
mov
das
xchg
or
jns
mov
in
bound
rorb
arpl
repnz
xlat
lret
pop
flds
jo
out
loopne
out
inc
lret
popa
mov
pusha
fistpl
dec
lret
call
mov
cmp
xchg
movsb
jecxz
pushf
xor
std
sbb
int
ljmp
mov
dec
in
ss
xchg
aam
inc
inc
inc
fisubl
lcall
ficoms
cmp
jnp
inc
lods
sbb
fs
les
lahf
shll
mov
js
into
sbb
inc
loop
shr
cltd
fists
xchg
mov
ds
pop
mov
mov
mov
xor
or
pop
xchg
enter
lock
clc
adc
fcoms
inc
and
lcall
sub
out
jmp
fildll
mov
into
call
adc
cs
push
mov
sub
jle
pop
in
inc
fisubl
in
ja
cmpsl
inc
loop
iret
jmp
incb
jb
out
adc
ror
leave
bound
xlat
mov
xchg
rorl
lods
xchg
ljmp
push
into
out
sahf
stc
or
jge
arpl
cmpsb
ds
sbb
bound
gs
fsubl
jb
inc
sbb
ljmp
xor
mov
or
arpl
rorb
inc
movsb
inc
mov
aam
repz
pop
cmp
pop
push
pop
xchg
sahf
sahf
enter
js
xchg
xorb
iret
mov
ret
sbb
ficomps
kmovb
hlt
cmc
ljmp
stos
pop
mov
sbb
leave
sti
mov
jae
dec
jg
mov
cmpsb
push
test
adc
rorl
in
fbld
mov
jg
mov
adc
je
shrb
stc
pop
or
out
dec
icebp
enter
icebp
pusha
out
bound
out
clc
pop
out
loopne
shlb
pop
insb
into
pcmpgtw
mov
dec
pop
pop
push
movntps
cmp
cmp
push
mov
jno
call
lock
xor
test
jno
fcmovnu
xchg
inc
imul
jb
aam
iret
in
add
push
cmp
mov
notb
in
fadds
xor
lods
into
mov
inc
cmp
in
arpl
xchg
das
into
jbe
inc
inc
icebp
loopne
sub
insl
out
and
inc
mov
out
sub
stos
mov
cs
roll
jl
adc
out
incl
lods
push
cmc
mov
xor
dec
in
fstpt
jmp
test
dec
xchg
outsl
shr
vfrczpd
fwait
rclb
sbb
dec
xchg
outsb
sub
in
push
enter
in
daa
cld
scas
cmp
adc
sti
inc
or
dec
dec
addr16
push
jmp
jne
xchg
and
pop
or
xor
es
adc
rclb
enter
lret
cwtl
ja
inc
ja
push
or
fildll
cmp
xor
arpl
orl
in
inc
jb
jmp
ds
xchg
pop
jmp
adc
gs
xlat
mov
imul
jo
cmc
outsl
push
iret
jmp
das
inc
cld
xor
popf
xor
cld
enter
push
cwtl
outsl
int
xchg
pop
xlat
sar
roll
rcll
inc
scas
adc
jl
inc
push
jge
testl
shrb
mov
test
cwtl
into
es
sbb
add
mov
xor
popa
das
push
int
push
int
imul
dec
and
adc
inc
adc
scas
inc
scas
mov
push
push
aas
push
pop
add
lahf
mov
lds
sbb
pop
sub
xor
pop
pop
inc
ret
lss
andl
scas
cwtl
lods
cltd
xchg
repz
dec
adcb
leave
sahf
mov
sub
stos
ret
adc
and
gs
adc
shl
push
dec
or
or
outsl
sbb
mov
mov
out
dec
jp
in
lret
mov
fidivs
int
pushf
fs
ret
mov
imul
or
lods
mov
ficomps
inc
mov
jmp
insl
scas
sahf
les
adc
bnd
inc
aad
or
pop
dec
dec
dec
push
dec
pop
aad
lahf
data16
or
repnz
adcb
cld
dec
jecxz
rorl
out
push
pop
mov
movsb
mov
jae
int3
pop
inc
sub
std
stos
or
aaa
and
in
adc
push
add
int
lods
cmc
shll
dec
mov
hlt
fs
stc
adc
fimull
aad
jl
lret
xor
xchg
testl
lock
xchg
into
push
jmp
js
or
repnz
jecxz
cmp
enter
dec
nop
dec
leavew
cld
stc
jmp
lret
inc
js
mov
xor
push
test
and
cmpsl
lret
out
mov
xchg
dec
jae
jg
cmpsb
stc
inc
out
inc
outsb
out
clc
xor
cmp
aam
movsb
add
push
or
outsl
xchg
inc
xchg
cmp
lea
push
aad
movsb
jns
xchg
add
sub
xchg
rorl
add
and
dec
popa
incb
xchg
repnz
inc
setp
out
mov
sti
or
ja
out
jbe
xor
mov
and
xchg
bound
mov
lret
out
xchg
pop
inc
cmp
or
or
pusha
jno
jnp
into
stc
ja
push
dec
cli
imul
repz
int3
push
out
mov
mov
sahf
dec
push
lods
addr16
sarb
negb
pop
sbb
or
inc
xchg
dec
in
xchg
repnz
repz
jns
mov
aaa
js
push
daa
ret
pusha
loop
dec
dec
test
es
or
shll
popf
or
seto
out
shl
dec
mov
dec
xor
sub
stc
xchg
xor
inc
jmp
inc
cmp
xchg
enter
cmp
and
mov
cmp
inc
sti
mov
mov
mov
dec
add
mov
dec
pusha
scas
das
xchg
icebp
inc
rorb
js
leave
popf
ljmp
xchg
test
das
pushf
and
add
fisubl
scas
adc
or
push
test
xchg
ja
decb
jle
paddsb
in
dec
dec
pop
sub
pop
xchg
mov
mov
pop
dec
shlb
out
movsb
stos
pop
dec
fwait
push
stc
dec
cs
fcomps
cmp
push
icebp
cmp
mov
sub
stos
mov
jns
inc
incb
test
pop
leave
push
ljmp
stos
jno
in
cmp
xchg
xor
test
fs
xchg
insb
push
popf
adc
lock
mov
push
imulb
or
ja
jp
jmp
push
pop
dec
xchg
inc
mov
cs
sbbl
push
dec
aam
mov
adc
xlat
sbb
dec
push
aam
ljmp
cmp
jb
add
jl
pop
inc
mov
mov
xchg
push
iret
jl
repz
xor
sub
cmc
jno
loopne
push
cltd
mov
push
lds
fsubrs
fdivrp
xchg
fnstenv
fnstsw
sub
mov
jge
leave
mov
dec
and
sahf
push
mov
push
rclb
imul
pushf
sbb
adc
rcrb
jno
and
rorb
jl
dec
add
sbb
test
icebp
mov
pop
and
dec
cmp
and
loop
pop
mov
rclb
lods
cmp
inc
dec
mov
xor
or
cld
push
dec
pop
mov
sub
push
popf
iret
inc
cmc
adc
imul
std
mov
loope
andb
ljmp
enter
mov
push
pop
jns
push
lret
cmc
repnz
xchg
xchg
lock
icebp
xchg
leave
cmp
int3
pop
fs
and
fldcw
dec
out
cmp
pusha
and
dec
adc
inc
mov
shl
inc
loop
jns
mov
ret
mov
or
dec
push
pop
xor
stc
sub
pusha
dec
xchg
pop
ss
jle
cwtl
bound
fwait
orl
imul
push
adc
pop
mov
and
test
cmp
jg
mov
in
icebp
cmp
jg
add
mov
mov
roll
adc
push
iret
mov
xor
adc
xchg
shlb
aas
xor
out
xor
in
outsl
es
jmp
jp
int
les
lock
data16
movsb
push
jp
incl
xor
push
sbb
push
lods
or
cs
adc
sahf
and
dec
push
cmc
pushf
mov
dec
nop
mov
mov
imul
shll
loopne
adc
push
mov
ds
sub
jle
mulb
mov
jle
inc
xlat
iret
lahf
pop
cmp
ret
clc
sub
push
sbb
jns,pt
cs
inc
ljmp
xor
mov
daa
mov
out
xor
mov
lret
mov
jle
adc
lods
mov
cmp
pop
imul
sarb
jb
out
and
pop
into
mov
js
sbb
cmp
xorb
lods
fdivrp
inc
imul
push
jecxz
and
outsb
cmc
mov
insb
movsl
orb
sub
xor
add
dec
push
icebp
scas
lock
xlat
jns
push
pop
or
imul
dec
pusha
or
jge
jmp
lods
int
addb
dec
insl
into
mov
ror
mov
sahf
push
mov
or
cmp
pushf
push
inc
xor
mov
adc
add
mov
mov
jbe
daa
sbb
cmp
out
push
mov
jmp
pop
mov
fwait
mov
sbbb
fildll
in
or
fwait
outsl
ficompl
mov
xor
dec
xchg
ficoms
shll
mov
pusha
xchg
insb
shll
adc
jb
es
adc
xchg
cld
jmp
fists
adc
cmp
cmp
push
jmp
xor
mov
mov
mov
add
sti
cltd
fmul
fnclex
sbb
lock
jmp
out
xor
in
ss
mov
cs
sbb
xlat
dec
fildl
jl,pn
scas
or
lret
cmpsl
movsb
cmp
lret
stc
and
dec
in
push
movb
repz
lret
das
idivl
pop
int3
mov
out
cli
repz
mov
fists
mov
push
cmpsl
test
in
sbb
int3
push
lods
and
daa
scas
push
cld
mov
sub
mov
mov
adc
mov
jp
push
jae
hlt
or
xor
pop
xchg
xchg
push
mov
jb
into
push
mov
cs
movl
sub
and
jg
inc
lcall
mov
rcl
adc
repz
lock
sbb
xchg
add
mov
scas
loopne
mov
jle
adc
inc
mov
push
jle
mov
into
xchg
adc
push
int3
xor
lock
sbb
outsb
cwtl
and
xchg
pop
leave
insb
sub
shlb
or
and
push
shlb
out
je
test
push
in
jns
popa
fwait
bound
mov
add
aas
cwtl
and
in
inc
xor
ja
sahf
xchg
std
mov
sti
inc
shrl
test
ds
xchg
push
push
mulb
inc
insl
arpl
jg
ds
rcrb
fwait
sub
jns
lret
fisubs
mov
jno
push
xchg
pop
outsl
je
push
sbb
xor
jl
lahf
xchg
loop
mov
push
movsb
lods
cmpsb
cmp
dec
jmp
inc
pop
movsb
test
jp
movsb
out
adc
rcrl
pop
scas
nop
dec
shr
adc
ret
xor
mov
cltd
repz
xorl
mov
sub
mov
adc
adc
dec
sub
adc
sub
push
lahf
mov
leave
lds
out
aad
add
pop
dec
pop
ja
or
cwtl
mov
cmp
xlat
xchg
xchg
gs
cltd
lcall
cmpsb
lock
mov
or
or
dec
ja
push
xchg
jbe
shl
aas
lcall
das
dec
out
lahf
mov
xor
dec
aaa
lahf
loope
movsb
aad
or
mov
cmp
insb
sub
and
xchg
fstps
pop
jg
stc
and
shlb
sbb
sbb
ss
fadd
push
sahf
mov
xchg
pop
push
movsb
aaa
fistps
mov
or
inc
add
mov
ss
int3
dec
push
data16
pop
jns,pn
push
cmp
ljmp
movsl
sub
fwait
popa
fidivrl
loop
gs
xchg
rorl
ret
fisttpl
bnd
cwtl
pushf
sbb
mov
lret
es
mov
sub
stc
jp
stc
scas
in
popf
test
cli
jp
cmp
leave
lahf
dec
dec
int3
sahf
shl
add
leave
insl
inc
push
add
inc
mov
scas
dec
xchg
pop
loopne
arpl
decl
push
cli
lea
mov
incl
aaa
scas
iret
movsl
xchg
icebp
inc
dec
xchg
push
xorl
add
mov
add
mov
and
imul
inc
xchg
jns
xor
pop
mov
ljmp
jno
cmpsl
inc
sub
mov
test
xor
in
stos
insl
mov
xor
jbe
dec
push
or
adc
xchg
lret
nop
xchg
mov
push
mov
aas
out
add
adc
pushl
adc
ss
lods
addb
mov
fwait
rclb
out
or
sbb
sbb
cld
pop
hlt
mov
test
je
testl
adc
and
into
pop
fstpl
adc
xchg
pop
or
clc
inc
lcall
lea
push
aas
inc
pop
dec
xor
sub
sar
inc
adc
imul
pop
dec
inc
aas
xor
gs
pop
outsb
imul
cld
lods
push
in
and
mov
xor
jmp
icebp
jge
dec
inc
cmp
mov
int3
mov
push
cmpsl
fwait
outsl
outsb
iret
pop
inc
push
and
jo
popa
test
sub
sub
sbb
sub
mov
mov
movsb
aam
cltd
ljmp
push
jg
test
and
xchg
into
clc
test
in
int
sbb
ljmp
adc
jne
daa
cmp
sbb
fbld
or
dec
imulb
pushf
pop
sub
test
outsl
aas
mov
cmp
out
scas
jo
outsl
ret
xchg
push
aam
add
js
jg
shlb
pushf
lret
push
adc
fidivl
push
sub
xchg
mov
adc
jge
inc
dec
xlat
cmp
hlt
sub
bnd
sbb
out
dec
xchg
pop
pop
push
cmp
sub
pop
sti
adc
xor
ret
pop
cmovnp
ror
add
or
fwait
pop
push
pop
xchg
icebp
ss
dec
sub
aam
add
add
mov
push
push
inc
ljmp
test
lret
adc
push
imul
push
jns
mov
adc
pop
adc
push
call
jl
pop
push
mov
inc
movsl
and
fisubl
jecxz
pop
mov
and
ljmp
lret
push
adc
leave
in
xchg
mov
jmp
cmc
mov
cld
lret
xchg
rcrl
mov
fs
es
pop
shl
dec
xchg
sub
and
imul
shlb
fnsave
xor
sub
inc
sbb
adc
rol
cmc
ret
mov
call
je
iret
fwait
sub
dec
std
adc
mov
stc
inc
fcmovnbe
jl
testl
iret
pop
mov
jp
pop
stc
mov
jne
xchg
push
cs
mov
pop
pop
jbe,pn
dec
lods
adc
and
fiadds
add
popf
jp
jmp
mov
mov
add
sub
cs
je
mov
inc
frstor
rol
les
push
lret
jmp
shl
or
jecxz
nop
and
ss
testl
ds
mov
add
adc
lret
rorb
pop
and
push
push
pushf
into
inc
push
daa
and
push
dec
xchg
pop
arpl
movsb
jne
sarl
fs
mov
lcall
fwait
out
jno
lret
push
or
xchg
addl
dec
xchg
dec
loope
pop
ss
lret
hlt
mov
pop
pop
mov
loopne
daa
aad
adc
js
push
mov
mov
xchg
dec
pop
test
pop
test
cmc
mov
test
jle
ds
adc
aad
xor
aaa
movsb
loope
fs
adc
sub
out
mov
jns
das
mov
xchg
outsl
insl
scas
push
cwtl
jae
pop
scas
push
rolb
jno
cmp
cmp
pop
in
into
jle
jb
mov
pop
push
out
sub
insb
test
iret
ret
sbb
stos
inc
push
inc
adc
fbld
loope
jne
addps
jle
rorb
enter
adc
cmp
les
cli
lret
ret
ljmp
or
cld
out
pop
shll
fwait
xlat
jl
dec
push
or
pop
and
jmp
fdivl
popa
mov
ja
in
icebp
int3
xchg
arpl
inc
inc
call
adc
sub
jmp
inc
mov
mov
aam
jg
in
cli
xchg
fistps
sub
stos
stc
test
out
jmp
mov
dec
push
mov
adc
int
in
sti
fs
dec
cli
xchg
push
arpl
dec
int3
cmp
push
mov
push
int3
inc
into
pop
sub
stc
push
fdivrl
pop
jo
in
lret
cli
rolb
and
int
sub
dec
incb
mov
lds
mov
insl
xlat
dec
xchg
sub
cmp
and
jmp
jno
dec
add
pusha
mov
cld
rcr
jg
xor
or
iret
xchg
sbb
xor
jns
outsb
ljmp
pop
lods
lods
inc
xlat
dec
stos
sahf
int3
jmp
dec
inc
xchg
xchg
pop
dec
outsb
nop
mov
dec
push
add
fsubs
lods
jg
mov
dec
mov
mov
mov
into
movsb
mov
daa
sub
cmc
out
mov
and
push
lock
fisubrl
mov
nop
push
out
xchg
les
and
rcl
and
xor
jle
sti
addr16
repnz
mov
xchg
addr16
mov
mov
aad
xchg
clc
clc
icebp
fcoml
popf
rolb
imulb
lds
mov
sub
xchg
xchg
pop
pop
xchg
jle
dec
in
out
ret
in
pop
xchg
cli
in
pop
arpl
call
push
shll
inc
or
pop
arpl
decl
sbbl
ljmp
sub
or
push
jns
pop
pop
xor
stos
test
ss
xor
sub
in
mov
fstl
mov
cmp
xlat
and
jge
outsl
repz
cmp
bnd
adc
jne
inc
hlt
adcl
lods
repnz
cmpsb
lea
jae
and
cmp
mov
idivb
adcb
push
sarl
inc
adc
fdivrl
xor
xchg
mov
dec
cmp
lret
xlat
pop
pop
roll
repz
idiv
jmp
dec
andb
cld
sub
es
jae
lock
xchg
lods
mov
mov
fisubl
sbb
mov
inc
push
call
pop
fistl
dec
dec
scas
cmp
arpl
cmp
and
sub
and
out
fisubrs
inc
inc
out
mov
mov
movsl
pop
imulb
arpl
shrb
push
ja
push
aad
inc
dec
jno
inc
lcall
jns
pop
loope
into
and
cltd
lock
xor
fiadds
test
cmp
loop
mov
pop
mov
and
or
pop
jle
jno
or
rcrl
mov
mov
cli
mov
mov
je
hlt
mov
fs
jg
imul
xchg
in
leave
outsl
roll
sub
mov
push
dec
aas
hlt
dec
mov
xor
popa
mov
inc
dec
or
adc
into
stos
rcrb
call
mov
divb
mov
jb
xor
cmp
sarl
xchg
fwait
fs
xor
shr
xchg
dec
in
inc
jle
arpl
lock
and
test
jbe
insb
outsl
les
cmp
fdiv
sub
out
cmpsl
fimull
inc
inc
jge
add
jae
or
xor
ret
fdivp
and
inc
loop
mov
mov
daa
dec
call
xor
mov
repnz
adc
stos
das
mov
inc
cmpsb
jne
mov
sarl
jl
clc
fwait
and
daa
testl
popa
arpl
repnz
jne
mov
dec
mov
xor
bound
movsl
xlat
fstpl
int3
and
aam
fistl
inc
pop
les
lret
mov
iret
or
mov
inc
sub
ds
push
or
lret
icebp
add
incb
mov
ljmpw
sub
test
out
or
sarl
xchg
cli
int3
mov
xlat
sqrtps
pop
mov
dec
out
inc
fsincos
imul
jns
push
aad
and
gs
hlt
shrb
jg
mov
popl
dec
js
mov
shr
pmaxub
mov
dec
imul
int3
jle
popa
test
jmp
mov
adc
and
pop
shr
mov
loope
test
sbb
dec
adc
movsb
popa
push
dec
test
and
jp
xchg
aam
pop
mov
mov
pop
out
movsl
push
xchg
mov
xchg
lods
push
xor
aas
es
mov
dec
pushf
or
mov
ret
rcrl
jp
adc
add
xchg
ljmp
cmp
adc
out
adc
lea
scas
dec
clc
test
add
pop
fwait
dec
push
push
imul
pop
push
cmovl
nop
inc
lods
decl
addr16
sbb
jp
cmp
dec
pop
sbb
aam
std
sub
adc
aam
xor
subb
and
mov
inc
imul
push
adc
stc
aas
repz
loope
sbb
pop
in
daa
ret
jge
inc
pop
movl
mov
or
enter
int
fimuls
lret
iret
inc
push
addl
jmp
mov
imul
cld
outsb
xchg
jno
fucomip
cld
repz
ficomps
enter
xchg
pop
pop
push
scas
daa
xchg
shl
cmp
shrb
repnz
outsl
push
ljmp
ja
mov
dec
or
lcall
dec
out
dec
rcr
push
aas
aaa
and
ret
and
hlt
in
mov
fwait
mov
call
mov
cmp
cmp
mov
fsub
jge
aad
add
rep
adc
add
out
cmp
jnp
push
mov
int3
jmp
adc
push
fidivs
cmp
and
xor
fwait
sub
sub
cld
lret
mov
push
xchg
push
sub
stos
sahf
mov
sbb
cmp
mov
out
cld
pushf
inc
jne
add
push
pop
ficomps
cmp
push
mov
clc
int
push
bound
sbb
jno
shr
into
mov
negl
mov
mov
lret
adc
sub
repnz
les
jle
pop
test
inc
xchg
sub
fimull
movsb
insl
mov
or
fists
es
xor
stos
mov
cmp
jp
ficomps
sbb
cmp
xchg
jb
popa
or
jae
xor
repz
jle
shll
add
push
and
and
test
cmc
and
or
aam
pop
inc
addb
out
add
xchg
push
bound
jb
and
dec
lcall
push
adc
andb
call
jp
imul
adc
adc
xlat
or
clc
lcall
sbb
add
push
jno
xchg
xor
pop
mov
js
je
loope
ret
pushf
push
add
movsb
adc
pop
inc
mov
mov
pop
movsb
xor
test
lahf
adc
dec
stos
cmp
out
scas
add
movsl
mov
neg
mov
ret
sub
mov
cmp
cmc
pop
cmp
jg
xor
inc
out
mov
jge
xchg
scas
jno
daa
stc
bound
cmc
mov
cld
add
hlt
fwait
hlt
sahf
fs
in
out
orb
dec
push
ja
jne
jge
jmp
aaa
mulb
xchg
sarb
lds
fisubrs
cmp
out
shll
push
mov
or
dec
pop
mov
sahf
cltd
in
sub
ss
mov
jb
fimull
adc
pop
rol
adc
lock
xor
or
xchg
aaa
iret
sbb
or
dec
test
jbe
adc
repz
into
roll
and
ljmp
dec
mov
adc
sbb
xchg
fcomps
mov
imul
fstpl
sti
pop
dec
push
enter
rcll
into
cli
add
jecxz
mov
jo
push
subl
mov
ret
xor
fstpl
loop
test
out
or
cmp
repnz
push
fiadds
sub
ret
pop
cmp
mov
ror
movsb
push
cmp
ficoms
or
fisttpl
sub
cs
sub
in
es
lret
mov
lods
pop
mov
inc
pop
push
xchg
test
into
dec
in
rcr
sbb
push
int3
into
add
xor
jne
stos
rorl
jae
jp
cmp
mov
in
paddd
rcrl
dec
rcrb
jg
sub
out
pop
or
sub
xchg
int
out
cli
ds
cmp
and
je
rcrb
enter
call
js
dec
das
push
push
mov
push
int3
out
sbb
pop
sbb
popf
jns
cmp
fsts
push
lcall
out
mov
cmp
in
xchg
sahf
mov
pop
mov
xchg
push
ret
loope
nop
sub
hlt
mov
shll
mov
filds
lea
push
cld
xchg
dec
jmp
in
out
pop
add
or
mov
sbb
iret
or
ja
mov
lahf
sub
std
adcb
and
push
mov
ficompl
cmc
leave
outsl
pushw
pop
mov
cmp
les
cli
aam
int3
or
push
insl
xchg
cli
in
push
mov
add
jmp
lcall
adc
mov
mov
lret
dec
in
pop
fstl
out
sbb
xchg
mov
and
xor
or
test
icebp
mov
mov
cwtl
stos
mov
ss
cmc
into
mov
xchg
arpl
cmpl
push
stos
lret
and
cmp
lea
aam
or
stos
jne
icebp
sbb
pop
into
fdiv
push
push
cmp
stos
push
push
jae
push
inc
adc
popf
rcll
adc
andb
mov
fidivl
ljmp
jl
js
mov
pmuludq
mov
sub
fs
adc
xor
mov
mov
fadds
mov
push
sbb
insl
and
bound
jg
add
mov
sub
inc
addr16
sahf
sbb
lret
dec
repnz
shll
cli
iret
ljmp
cmp
xlat
mov
insb
push
rorl
push
sub
jnp
mov
scas
enter
mov
repz
mov
cmp
adc
sub
adc
test
pop
sahf
push
pop
sti
pop
and
sbb
les
stos
mov
or
cli
out
in
stos
pop
mov
imul
xchg
sub
leave
bound
jb
or
shlb
scas
jno
daa
in
dec
std
cmp
mov
in
adc
cs
insl
mov
loopne
aaa
adc
dec
mov
sbb
xor
cmc
push
mov
adc
std
mov
push
mov
lcall
adc
sbb
shlb
and
movsl
pop
ljmp
or
jnp
jmp
sub
pop
xchg
pop
jl
mov
pop
xchg
jecxz
add
add
outsb
sti
popa
loopne
aam
leave
add
loop
xchg
adc
sub
cmp
mulb
sbb
dec
movsl
cmp
push
xchg
xor
jne
stos
bts
cmp
mov
fimuls
lret
mov
push
xchg
repz
add
sahf
idiv
dec
test
and
sahf
xchg
in
mov
xchg
push
sub
jmp
mov
fadds
push
outsb
pop
sbb
cmpsl
fmull
gs
in
ja
mov
sub
sbb
mulb
dec
sub
das
cli
movsb
mov
popa
sbb
pusha
fstpl
jle
lret
sbb
cmpsb
sub
or
outsl
adc
cmp
push
mov
push
loope
fdivp
incb
cmp
mov
add
jb
push
adc
cmpsb
stos
dec
popa
icebp
inc
cmp
fcomi
jmp
dec
in
and
push
push
jb
std
test
mov
jmp
pop
push
lods
mov
push
xor
mov
mov
add
ret
xchg
add
dec
jnp
movsl
pop
fwait
in
out
clc
nop
inc
push
out
out
pusha
ljmp
and
lretw
cmp
mov
xchg
pop
sub
cmc
fdivr
lods
push
sub
ret
int3
push
in
sbb
jno
dec
pop
mov
jp
sahf
mov
cwtl
loopne
inc
push
andb
push
mov
loope
adc
jecxz
mov
int3
fwait
and
adc
mov
lahf
sub
ret
pop
icebp
das
ds
xchg
gs
fsub
imul
mov
ljmp
lods
sbb
decl
adc
dec
sbb
sub
mov
out
lret
test
xchg
sub
and
ret
mov
das
inc
xor
pop
iret
mov
and
addb
fcomi
sti
mov
pop
mov
and
sbb
popa
mov
andl
mov
shrl
test
xchg
les
sub
das
pop
ljmp
or
out
daa
shlb
push
popf
out
jge
sti
fwait
repnz
loopne
pop
cmp
add
sti
add
sbbl
sbb
pop
mov
cli
jae
enter
xor
popa
cli
lahf
or
xor
bound
jbe
popf
data16
inc
mov
sbb
lret
or
or
jns
cli
mov
test
jno
push
add
test
adc
lret
mov
mov
push
in
dec
insl
in
fcmove
xor
add
dec
loopne
xchg
arpl
push
cmp
dec
xor
mov
and
mov
push
cmpb
mov
iret
pop
roll
push
cmp
add
lea
mov
hlt
jp
dec
lea
sub
inc
inc
sbb
fwait
cmc
sar
enter
ljmp
das
stc
and
fistl
cmp
sub
mov
out
aaa
rolb
sbb
jae
jge
adc
imul
sbb
mov
and
mov
mov
jecxz
push
lds
inc
les
mov
push
sti
sbb
xor
mov
iret
and
dec
arpl
call
leave
loop
fwait
shlb
test
mov
int
loope
jne
scas
ret
jmp
mov
arpl
xchg
mov
xchg
sbb
mov
add
out
mov
lock
bound
mov
in
les
daa
int3
out
cmpsl
lods
lods
in
dec
je
sti
loop
scas
push
xor
sub
scas
xchg
js
or
cwtl
div
pop
cs
fimuls
pop
sub
lret
fsubl
dec
adc
inc
pop
jmp
icebp
jg
add
outsl
fstp
lds
flds
lret
mov
sbb
and
pop
inc
cmp
sub
out
push
push
iret
adc
xchg
rcll
inc
jnp
faddl
dec
sbb
cld
arpl
sub
jb
ret
adc
enter
mov
in
mov
inc
sub
inc
sbb
xlat
cmp
addr16
out
or
cmc
movsl
lcall
or
xchg
and
fcompl
pop
outsl
imul
or
shl
and
or
sub
scas
lods
adc
fwait
mov
jmp
cmp
xlat
int
pop
xor
aas
pop
repz
jmp
in
sub
dec
mov
clc
ss
mull
add
fdivs
jmp
notb
jg
xor
sbb
popa
imul
mov
adc
inc
hlt
int
in
ds
mov
orl
out
sarb
outsl
dec
sub
and
test
data16
xchg
xor
pop
dec
xor
mov
cwtl
stos
loopne
cmc
jp
sub
pop
xchg
mov
leave
aas
int
sahf
mov
cli
mov
cld
into
add
les
movsb
and
fcmovu
xchg
or
in
mov
fbld
jg
neg
data16
fldcw
in
ljmp
divb
or
mov
jns
pusha
shr
cs
pop
pusha
xor
fcmovb
outsl
fsubr
imul
fwait
sbb
movsb
cmc
mov
ret
inc
dec
cmp
xchg
sbb
or
xchg
xchg
lcall
xor
jle
jne
movsb
roll
xor
mov
fwait
jb
jle
or
lods
enter
and
inc
inc
dec
fisttpl
out
cmc
mov
jp
stos
dec
fadd
test
xchg
sub
sub
iret
mov
sub
xchg
jb
push
mov
adc
mov
test
push
xor
int3
inc
aas
ret
xlat
push
cmp
mov
cwtl
shl
add
mov
adc
int3
xchg
loopne
xor
stc
sub
leave
add
mov
fldt
and
or
shrb
mov
jbe
sti
jl
dec
dec
push
sbb
mov
fs
cli
sub
pusha
sub
add
pop
int
jns
dec
dec
cs
loope
mov
fists
fwait
jge
adc
xor
in
outsb
popa
fs
jp
xchg
jge
das
mov
jle
aaa
xchg
out
push
pop
xchg
sbb
rorb
out
outsb
inc
sub
sub
push
xor
or
mov
sbb
repz
lea
aam
mov
cmpsb
push
inc
sbb
mov
xchg
or
lcall
es
or
sti
dec
pop
push
test
data16
push
adc
cmpsl
es
lcall
outsl
es
pop
ret
sar
popf
or
inc
insl
rcl
imul
jl
jecxz
mov
decb
xchg
into
cltd
pushf
inc
inc
std
sar
jg
dec
xor
xchg
dec
inc
int3
or
scas
mov
pop
stos
bound
adcl
push
push
jl
xor
inc
xchg
push
sub
popa
data16
sbb
lods
mov
push
jo
dec
scas
sub
test
test
xchg
push
aad
or
dec
dec
push
sub
repz
mov
int3
sub
xor
lret
mov
inc
sub
xor
dec
sbb
out
shrb
inc
or
sub
lea
cmp
adc
fists
iret
mov
mov
das
mov
loop
pop
jbe
xor
outsl
sub
jne
jp
sub
jnp
sbb
push
mov
cwtl
push
mov
lahf
and
daa
dec
ljmp
jnp
shll
fs
dec
sarb
inc
out
mov
shlb
cmp
insl
movsb
pop
subb
push
xor
sub
pop
cmpsb
sub
out
xor
sahf
mov
push
mov
ja
or
sbb
or
es
adc
pop
out
test
iret
repz
add
push
popf
sub
adc
ror
out
jp
or
mov
subb
jnp
clc
aad
dec
ljmp
ljmp
xchg
mov
dec
sub
sub
add
push
lcall
xor
iret
mov
fwait
sbb
xchg
cmp
stos
push
fwait
xchg
iret
push
and
push
push
or
push
fsubs
push
mov
mov
mov
cli
xlat
cmovl
sbb
adc
pusha
mov
push
xchg
stc
inc
imul
lods
scas
jmp
je
xor
pop
adc
bound
fbstp
push
iret
fcmovb
repz
jne
inc
scas
mov
xor
dec
jle
stos
js
mov
push
sti
or
push
inc
sbb
jmp
add
mov
loopne
and
std
adc
dec
mov
push
nop
ljmp
add
adc
cmp
out
aam
ljmp
pop
rorl
mov
pop
mov
ret
add
push
mov
xchg
xchg
scas
data16
xorl
stos
jmp
mov
xchg
and
repnz
pop
and
xor
pop
cmpl
xor
xor
or
icebp
out
js
jle
fnstcw
cmp
and
aaa
mov
mov
cmpsb
idivl
jmp
adc
mov
mov
xchg
xchg
lcall
sbb
out
stc
sarb
fiaddl
xor
cld
pop
push
push
imul
or
rcrb
test
imul
loope
and
fsubrl
mov
popa
sub
jmp
sub
ret
push
into
xchg
jp
jmp
in
push
adc
adc
ret
aam
push
leave
xchg
incl
inc
divl
inc
or
lret
dec
and
sub
cmpsl
dec
dec
lret
jno
push
xor
shl
out
add
aad
adc
inc
pop
mov
dec
push
mov
sub
mov
je
mov
push
pop
in
xchg
add
imul
push
lcall
aas
cmpsl
sbb
or
add
push
leave
push
nop
popf
fs
push
loop
ret
push
scas
cmp
rolb
xchg
pop
and
lret
push
xlat
sti
inc
aam
jle
pusha
mull
add
sarl
andl
jp
add
cld
loop
mov
nop
jns
ror
movsb
fstl
ljmp
js
push
push
fmull
iret
xor
pop
jl
push
shll
repnz
jnp
sub
fcomi
adc
cwtl
and
mov
test
hlt
inc
aaa
push
xor
push
rcrb
aaa
xor
cs
jle
std
xchg
inc
repz
push
sbb
or
cmpsb
mov
insb
inc
inc
pop
std
or
sbb
xchg
xor
push
jle
dec
mov
sbb
push
mov
xor
xchg
and
adc
push
lcall
addr16
in
add
xor
dec
cmp
gs
xor
dec
lahf
cmp
std
pop
ja
push
xchg
mov
push
jecxz
push
in
xchg
hlt
or
loop
cltd
aam
call
xlat
repz
add
and
ljmp
test
adc
and
xchg
jle
out
xchg
out
lret
fidivs
mov
inc
jns
cwtl
xchg
xchg
js
leave
pop
test
dec
shrl
add
xor
jne
cmp
mov
scas
data16
cmp
sub
xor
xchg
xor
push
mov
hlt
and
push
mov
mov
xchg
sub
fisttps
mov
jno
and
mov
adc
mov
fbstp
sahf
lret
add
in
aad
and
xchg
mov
aas
dec
imul
xchg
fwait
dec
mov
sar
lea
jmp
jmp
lcall
in
cwtl
or
xor
fsts
xchg
xchg
xchg
push
inc
cli
xlat
add
je
push
mov
or
mov
clc
in
gs
inc
aaa
push
or
idiv
lahf
xchg
imul
cmp
push
fldl
or
arpl
movsb
fisttpll
push
insl
loopne
sub
in
cs
stos
jl
popa
out
clc
push
push
sbb
orl
sbbb
pop
test
call
mov
jl
hlt
sub
int3
fs
out
inc
lock
adc
repz
ljmp
pop
cmc
xor
iret
xchg
sbb
mov
sub
gs
movsl
jne
lahf
das
mov
cwtl
jle
inc
jge
xchg
push
ret
mov
jg
cli
jle
lods
xor
ror
adc
lods
addr16
xlat
std
int3
inc
mov
mov
cwtl
pop
je
test
xor
out
out
mov
dec
gs
call
outsb
jns
fstpl
inc
mov
iret
movsb
jmp
inc
xlat
je
fcmove
stc
mov
or
xor
andl
insb
sbb
push
dec
imulb
adc
inc
mov
stos
sbb
xchg
movsb
jge
addr16
cmc
fbstp
je
aaa
fsubp
mov
xor
icebp
or
rcll
jge
xchg
pop
push
pushf
cli
jle
popa
inc
gs
inc
mov
inc
mov
adc
fiadds
mov
or
lds
mov
ss
leave
mov
ja
mov
ror
xchg
xor
cltd
inc
out
inc
dec
out
cmpb
xor
loop
cs
sub
cli
and
dec
mov
out
shr
xchg
div
arpl
in
jmp
in
and
test
jl
testl
mov
jg
test
and
cmp
ret
or
out
push
lcall
imul
mov
loop
lcall
lods
loopne
lods
push
imul
rcl
sbb
loopne
pop
inc
mov
xor
pop
mov
jle
xchg
cmp
lahf
sti
std
or
fdivs
pop
or
cmpsb
sub
xchg
and
scas
mov
sbb
mov
add
push
gs
in
jg
loope
outsl
fidivs
or
dec
out
icebp
cmp
gs
xchg
xchg
das
add
int3
inc
jmp
jo
mov
jno
xor
push
add
outsb
add
fs
std
into
adc
mov
pop
fidivrl
add
sti
dec
push
test
shll
rorb
mov
mov
pop
pop
xor
inc
inc
testb
xchg
cltd
inc
out
das
adc
cmp
cs
cmpsb
jmp
jbe
cs
outsl
decb
orb
and
pop
xchg
sbb
sbb
push
mov
lods
int3
cmc
lock
into
cmp
mov
dec
int3
sbb
addr16
add
adc
in
in
xor
out
jge
adcb
movsb
test
loopne
cmp
insb
xchg
mov
fdiv
pushf
daa
dec
mov
lcall
imul
repnz
rcrb
mov
pop
pop
dec
sahf
or
sbb
and
ret
sbbl
in
jno
pop
inc
add
sbb
or
in
mov
pushf
out
mov
insb
mov
jg
adc
shll
sbb
lds
pop
jle
out
and
xor
out
das
xor
enter
cwtl
mov
out
mov
jmp
test
ljmp
mov
jmp
pop
stos
dec
jnp
stos
cmp
jae
icebp
fisubrl
sar
or
aad
push
icebp
sbb
xchg
js
or
adc
out
arpl
mov
xor
cwtl
mov
sub
int3
fnop
xor
repz
lret
push
aas
jb
or
pop
push
iret
sub
popa
test
mov
mov
repnz
in
push
inc
ret
push
add
imul
jmp
mov
imul
xor
ja
loop
pop
sub
pusha
scas
iret
loope
stos
into
xor
xchg
inc
or
lahf
subl
ss
or
xchg
mov
mov
mov
pop
ds
ja
test
mov
mov
in
mov
sti
movsb
push
xchg
outsl
test
push
or
aas
cwtl
jg
shl
es
mov
lcall
sub
sarb
xchg
mov
mov
xchg
cmpsl
xchg
repz
pusha
cli
jo
inc
xlat
test
inc
stc
or
xor
or
mov
aad
divl
mov
push
cmp
dec
mov
das
dec
imul
test
aam
mov
loop
adc
jle
xor
stc
cmp
into
pusha
add
sti
hlt
add
xlat
in
jl
sub
mov
add
jae
das
movsl
and
push
cmp
daa
xlat
out
dec
push
mov
push
out
sbb
pavgw
or
loope
lds
repnz
xchg
fcomps
sbb
addr16
fs
cs
out
std
pop
mov
loop
fdivp
rol
push
iret
mov
popa
or
dec
inc
mov
clc
mov
pushf
lret
cld
push
or
lods
subl
mov
mov
jecxz
inc
jns
mov
adc
sub
mov
and
inc
adc
clc
rorl
ljmp
mov
push
lock
leave
inc
aad
lods
push
aam
clc
pusha
push
mov
movsb
jmp
pop
push
jmp
gs
test
out
jb
into
movsl
pop
fcomp
adc
mov
xchg
rclb
arpl
push
push
cmp
mov
adc
pop
sub
mov
adc
stos
push
in
jb
xchg
xchg
mov
sbb
push
and
fiadds
popf
jge
popa
mov
push
int3
pop
test
jno
das
push
xor
dec
cltd
adc
push
adc
fsts
out
subl
insb
mov
xor
aad
lret
into
mov
xor
pop
inc
stc
add
pop
popf
push
mov
add
mov
test
or
mov
cmc
pushl
cld
icebp
outsl
lock
push
nop
gs
mov
rcrb
std
mov
cmpsb
push
fistpl
lret
mov
ud1
sarb
push
mov
push
mov
test
movsb
push
in
dec
dec
lret
movsl
mov
mov
xchg
lock
mov
hlt
arpl
hlt
shll
das
pop
lret
jno
sub
je
das
push
cmpsl
and
mov
add
fisttpll
daa
aad
dec
jp
in
ret
data16
push
pop
mov
push
insl
ret
div
mov
shrb
pop
int3
push
out
push
adc
mov
cmp
jle
scas
dec
mov
add
popf
mov
lahf
push
in
lock
pop
add
lds
mov
jle
cli
xchg
insl
mov
filds
inc
movsb
mov
sub
loope
sahf
pop
mov
mov
test
jb
jmp
push
in
or
or
xchg
mov
lret
cmpsl
fs
loopne
inc
xchg
sbb
xlat
pusha
mov
stos
push
dec
ret
outsb
dec
xchg
movsl
sarb
outsb
fcmovnb
gs
push
mov
mov
loope
fisubs
ds
lcall
call
lret
cmp
dec
arpl
pop
xor
into
jae
gs
xchg
pop
scas
sub
gs
or
shlb
js
pop
movsl
addr16
or
mov
sbb
mov
call
adc
outsb
xchg
cmpsl
push
jbe
mov
out
add
out
push
xor
xlat
cmp
push
or
push
imull
pop
push
enter
sti
add
cmp
test
rolb
add
mov
xor
add
push
or
jno
div
pop
inc
push
enter
cli
cmp
add
test
lea
lcall
jb
jmp
out
and
jg
dec
stos
fildll
decl
cmc
fidivl
pop
test
push
arpl
out
cs
dec
xor
push
rorb
pop
or
imul
sti
adcb
clc
call
call
xchg
cmpsl
sahf
out
cmp
add
dec
push
lret
mov
mov
popa
dec
int3
mov
push
in
add
mov
jbe
sub
adcl
push
int3
mov
adc
adc
jae
and
and
out
push
dec
xchg
ljmp
jo
xchg
decb
out
mov
mov
rol
jecxz
add
push
dec
sahf
cmp
sarl
aas
push
int3
cli
int
lds
push
and
or
dec
cmp
int
shlb
sarb
rclb
arpl
ficoml
mov
ficoms
push
push
std
nop
fiadds
ds
addl
int3
inc
inc
repnz
ja
inc
dec
mov
mov
dec
ficoml
sbb
cli
stos
sub
jecxz
push
test
sahf
jmp
rclb
push
test
and
dec
mov
cmpb
cs
adc
and
mov
mov
arpl
sbb
adcl
jg
xor
lea
in
mov
mov
or
mov
xor
mov
and
inc
xor
cmp
scas
mov
lods
xor
xchg
stos
xor
pop
neg
loope
out
xor
inc
addr16
dec
mov
sbb
std
fisttpll
inc
cmp
shlb
outsb
sbb
rorl
xchg
mov
mov
movsl
pop
ret
mov
push
pop
scas
xor
mov
cli
mov
enter
jbe
inc
add
insb
aam
sub
rcll
mov
imul
cmp
sbb
fwait
xchg
sbb
loope
stc
decb
mov
loope
int3
pcmpgtb
xchg
data16
ficompl
dec
scas
mov
sbb
xor
xor
adc
lret
imul
lods
inc
pop
cmpsl
sti
addr16
jl
cmp
pop
cld
pushf
inc
mov
fucomp
out
aad
decb
loop
mov
out
or
sub
repnz
fldenv
mov
cmpsl
stos
mov
enter
lds
pop
out
out
outsl
mov
jmp
out
jg
mov
inc
ret
call
loop
sahf
in
jb
sub
sarl
fwait
loop
mov
jecxz
cmp
pop
stc
fidivrl
outsb
mov
dec
dec
testb
mov
jmp
aas
push
jp
rep
jb
xchg
in
mov
paddsb
jno
xchg
push
fisubrl
dec
call
xor
dec
xchg
mov
push
iret
jne
lods
test
mov
mov
dec
mov
fwait
or
rcll
adc
add
and
test
sub
adc
sahf
mov
jle
mov
adc
xor
ljmp
inc
inc
mov
aam
add
jmp
xchg
or
push
fld1
dec
les
pushf
push
xchg
lret
dec
adc
das
and
sub
sub
cmp
fs
or
xchg
addr16
mov
pop
and
jle
shr
ja
fiaddl
sbb
lea
js
int3
iret
testb
sub
cmpl
mov
add
push
aad
mov
or
jns
adc
mov
in
outsl
movsl
popf
loopne
jne
inc
xchg
popa
xlat
mov
mov
or
xchg
mov
jo
jg
iret
sub
ret
cmpsl
dec
mov
push
and
fldl
add
je
push
push
push
xchg
add
mov
and
repnz
pop
xchg
fisttps
sahf
leave
addl
ljmp
sub
lea
aad
imul
dec
and
into
mov
inc
mov
sti
aaa
push
out
andl
add
lods
imul
in
out
icebp
out
push
lret
xchg
outsl
or
es
mov
outsb
ds
push
sti
mov
mov
pop
push
jbe
fldenv
inc
negb
jmp
xchg
inc
adc
jmp
mov
dec
mov
xchg
lods
daa
jg
shrl
pop
or
in
out
int
lcall
push
jb
fadds
testl
inc
ret
out
dec
or
push
int
dec
fidivrs
popl
out
mov
pusha
mov
inc
xor
jecxz
xchg
xchg
lods
scas
or
jg
fdivs
jmp
inc
adc
shrb
xchg
pop
out
cmp
gs
adc
mov
push
cwtl
xor
sub
out
repz
dec
inc
jnp
push
dec
xchg
xchg
in
mov
int
cmc
inc
adc
lahf
lret
adc
inc
push
mov
insb
sahf
sub
sti
inc
div
and
sub
adc
adc
mov
test
jbe
fadd
cld
nop
push
repnz
dec
neg
fadd
mov
insl
scas
int3
ja
fwait
mov
dec
call
jne
out
pushf
sbb
cmpsl
xchg
sub
loope,pt
push
lret
dec
insl
xchg
cltd
movsb
push
jbe
xor
lea
scas
inc
xlat
clc
jecxz
pop
in
dec
les
rorl
dec
add
xor
push
and
xchg
in
lahf
inc
xor
xchg
lea
pushf
stc
mov
add
lret
rorl
pop
inc
out
data16
test
out
push
dec
push
mov
dec
mov
cvtps2pi
jecxz
xor
in
add
inc
xchg
ret
sub
in
test
aam
mov
cwtl
mov
outsl
neg
mov
ljmp
imul
arpl
or
enter
or
pop
stos
inc
fcoml
xor
out
dec
mov
test
push
push
ret
mov
dec
jmp
mov
jmp
or
das
loope
add
pusha
lea
das
inc
aad
test
enter
pop
xchg
loope
push
icebp
inc
dec
mov
jb
xlat
xchg
cmpsb
leavew
dec
inc
xchg
divb
or
test
fisttps
pop
fs
dec
mov
nop
in
out
inc
in
leave
mov
addr16
sub
xchg
jmp
rol
int
sub
adc
scas
jbe
xchg
push
mov
sti
sti
outsb
push
jl
pop
jnp
mov
ljmp
inc
repz
data16
orl
rclb
hlt
scas
jns
je
cs
mov
movsb
jle
sub
cs
ror
push
and
sub
xchg
xchg
adc
cli
dec
sub
sar
xor
mov
sub
in
movb
int3
inc
sub
lret
push
data16
push
fcoms
mov
push
cmp
filds
fwait
pop
repz
movsb
and
aaa
push
ficoml
lcall
push
out
and
aas
insl
jbe
cmp
cmp
lcall
add
push
push
push
into
mov
stos
push
jmp
inc
jbe
outsb
mov
bound
fwait
push
sti
jmp
out
pushf
mov
push
fisubrl
repz
adc
aam
into
sub
xor
push
mov
sub
mov
lret
andb
push
jae
xchg
push
bound
push
xchg
lods
fistpl
adc
lahf
out
imul
in
andl
lock
cmpb
mov
push
es
out
adc
inc
aas
mov
adc
incb
adc
lods
ja
cwtl
add
movsb
or
or
mov
stos
je
jge
jle
inc
dec
shl
pop
test
mov
imul
sub
fldcw
iret
sub
imul
shr
lods
mov
inc
mov
aam
pop
repz
xchg
add
push
or
fcoml
mov
imul
sbbb
sub
mov
movsb
lcall
stos
addb
out
out
inc
cmpsb
or
inc
icebp
iret
mov
push
pop
sti
lret
fiadds
dec
lret
out
push
xchg
push
push
sub
xor
dec
pop
xlat
pop
inc
rclb
mulb
sub
je
pop
ret
cmpl
iret
or
jmp
sbb
mov
jmp
jo
xorl
adc
mov
sub
jp
adc
or
push
bound
nop
fs
jnp
stos
cli
dec
loopne
stos
movl
sub
or
push
dec
mov
mov
cld
bound
in
je
fs
pop
rcl
ss
call
hlt
xchg
sub
jmp
inc
and
pushf
and
jg
xchg
pop
push
fcomip
loope
push
add
jl
aam
fs
mov
push
mov
sbb
inc
or
sarb
andl
push
gs
lea
or
mov
mov
xor
mov
icebp
inc
fildl
dec
push
out
fmuls
jmp
add
test
lahf
imul
insb
sti
xchg
jmp
dec
jp
xchg
pminub
push
adc
cmp
jno
xchg
push
insb
lret
and
cmp
insb
ljmp
inc
fidivs
push
cmp
ljmp
sub
cmp
testb
fisttpl
clc
fnstsw
push
cli
mov
mov
push
test
insb
mov
adc
push
es
negb
sub
sar
int3
jo
xchg
mov
xlat
xor
pusha
jecxz
mov
int3
adc
cld
lret
xorb
popf
rorb
idivl
rorb
aam
stos
ss
fiadds
inc
mov
mov
xorb
in
push
push
dec
sub
aaa
loope
and
leave
arpl
mov
ret
adc
or
jg
and
pop
mov
dec
fcomps
mov
fcmove
and
lock
pusha
jae
xchg
in
ds
inc
xchg
jle
mov
pop
sub
dec
pop
xbegin
push
in
jno
push
mov
arpl
dec
mov
xchg
adc
mov
cmp
mov
fwait
cmp
sub
outsb
and
bound
inc
stc
mov
fst
xchg
pop
push
xor
pop
roll
fbld
imulb
dec
nop
push
jo
mov
sahf
loopne
push
mov
loope
scas
sar
iret
das
sahf
or
test
test
inc
out
in
or
inc
mov
int3
movsb
push
hlt
lea
sub
sub
fwait
xor
mov
sub
cwtl
sub
cwtl
aaa
jno
xchg
cli
cmp
add
xchg
movsl
popf
jne
sub
or
xorb
inc
pusha
test
out
sarl
mov
out
push
dec
adc
xor
or
add
imul
loopne
into
sub
push
mov
scas
add
xor
jno
inc
movsb
push
aas
shl
jle
mov
shlb
and
cmpsb
mov
aaa
aad
shll
adc
fcomip
lahf
lea
jae
inc
insb
out
push
clc
icebp
or
in
pop
repnz
ja
push
push
ret
arpl
jo
ljmp
das
jge
aaa
mov
pusha
mov
xchg
aad
jmp
out
sub
mov
movsb
cmp
cmc
lods
es
push
enter
mov
lret
decl
dec
mov
adc
jno
aam
xchg
adcl
cmp
push
xchg
inc
cmp
clc
out
add
cltd
shll
shll
mov
sub
xchg
xchg
in
leave
dec
pop
in
mov
adc
and
int
ret
jge
xchg
aas
or
shr
mov
ss
mov
mov
push
test
mov
frstor
cmc
in
fwait
rcll
cmp
jle
es
sbb
outsb
cli
iret
inc
pop
test
add
rorb
push
mov
push
idivl
leave
sub
rorb
int3
das
out
lods
push
shr
jle
xchg
ja
and
popf
out
mov
scas
fs
das
outsl
cmp
adc
cmp
jnp
stc
inc
imul
in
jb
xchg
cmp
test
inc
lahf
pop
adc
and
loop
xlat
xor
test
into
aad
sbb
mov
cmp
fistpl
je
ja
and
xchg
pushf
mov
or
push
lods
add
scas
mov
dec
pusha
cmp
fcoml
and
cmp
xchg
sahf
call
int3
das
inc
fsubr
mov
jb
mov
mov
xor
pop
enter
dec
aaa
stc
ja
jb
int3
push
mov
pusha
adc
pause
push
or
subb
jns
es
inc
or
je
adc
in
mov
fbstp
mov
xor
inc
or
outsl
mov
mov
gs
xchg
or
lahf
mov
orb
mov
sar
aaa
cmp
sarl
movsb
mov
roll
mov
or
push
out
mov
lods
pop
adc
scas
and
fs
mov
push
inc
stos
ret
or
jmp
bound
and
cmp
xchg
jecxz
leave
aas
or
stos
jne
jge
out
add
lea
jnp
cmp
inc
jl
or
cli
cs
and
fistpll
add
mov
fdivl
popl
rclb
mov
mov
push
loope
fists
fs
popf
pop
add
xor
mov
mov
popa
xchg
jecxz
push
cs
bound
pcmpgtb
ljmp
xchg
mov
cmp
lods
test
mov
scas
push
mov
shll
mov
or
inc
lock
mov
imulb
sbb
jmp
and
xchg
pop
ret
xchg
dec
les
cmc
cmp
shr
or
pushl
jae
jp,pn
jecxz
rcr
xchg
sub
adc
pop
ret
idivb
iret
shll
xchg
or
iret
add
xchg
jecxz
mov
jmp
adc
cltd
lret
ljmp
pop
cmc
inc
in
out
lret
clc
ret
sub
or
sarl
out
nop
ret
repz
inc
fs
xchg
call
sti
cmp
mov
lret
push
movsl
inc
sub
lret
fucomi
xor
jno
push
mov
mov
jns
in
mov
dec
mov
sub
mov
push
fwait
cmc
mov
sahf
shlb
pop
cmp
jp
pop
and
mov
es
rolb
subb
fbstp
adc
fwait
ljmp
sbb
cmc
rolb
ds
in
or
mov
lds
push
ja
pop
push
or
sbb
dec
neg
xor
jno
lahf
xchg
mov
cmp
jnp
loop
aas
idivl
test
jae
out
or
push
adc
mov
and
fnstcw
pop
or
mov
arpl
sbbl
xchg
das
rorb
mov
aaa
dec
sub
xchg
cmp
push
ds
xor
arpl
mov
fsts
mov
pop
sahf
adc
push
mov
int
jns
fwait
adc
scas
fstpl
lret
sub
lods
fidivs
mov
inc
inc
adc
iret
out
ret
push
popf
mov
adc
jnp
mov
xchg
std
scas
popa
adcb
dec
mov
imul
mov
lods
inc
sub
outsl
mov
sbb
js
fmuls
xlat
sub
dec
in
cmp
sub
test
repz
xchg
pop
or
fstl
inc
lea
xchg
int3
lods
loope
dec
and
or
fists
testb
or
pop
inc
xor
sub
fbld
add
iret
pop
xor
stc
adc
loop
push
adc
outsb
ja
mov
jecxz
test
sbb
xchg
cmp
aaa
mov
jbe
inc
xchg
pop
cltd
inc
jle
movsb
addr16
ljmp
xchg
or
jae
mov
lods
jb
fadds
pop
pop
imul
negb
jmp
add
sub
pop
sti
push
test
inc
inc
xchg
ret
push
sub
repz
inc
pop
add
test
arpl
aas
push
sbb
mov
add
gs
movsl
pop
lds
lret
mov
sbb
jl
test
outsl
es
cmp
mov
lahf
mov
popa
fdivrl
jg
xor
ja
xchg
ljmp
mov
xor
cld
or
lods
jnp
ret
nop
mov
popa
jnp
je
loop
push
idivb
loopne
fwait
movsb
xchg
xchg
cltd
add
inc
imul
mov
rolb
xchg
mov
sbb
sahf
or
dec
lret
bound
sbb
adc
inc
lret
mov
mov
pop
mov
mov
xor
push
imul
or
mov
gs
push
popf
pop
sbb
mov
xor
xor
mov
cs
pcmpgtb
lcall
jae
pop
and
repz
xor
adcl
lahf
dec
inc
sub
push
in
jmp
lret
xchg
add
and
pop
inc
or
fistpll
adc
mov
sub
inc
stos
sbb
andb
jmp
mov
stos
or
dec
mov
xor
pop
jp
jle
pop
mov
stos
lds
mov
orl
xchg
mov
cli
fsubr
aas
shll
and
fwait
xlat
sbb
mov
jmp
mov
fs
popl
outsb
push
mov
jle
lock
cli
lods
inc
sub
push
shr
inc
mov
mov
jg
fdiv
leave
mov
mov
push
ja
lea
in
je
lahf
push
scas
jno
adc
xchg
roll
test
fbld
std
rcrb
sbb
adc
xchg
loop
mov
icebp
xchg
inc
in
mov
add
and
fs
lret
scas
lcall
jge
xchg
cmpl
inc
test
stos
and
fimuls
jg
fwait
cmp
xlat
dec
push
mov
nop
jmp
stc
mov
jp
and
mov
aad
test
in
imul
stc
xor
add
cwtl
data16
adc
addl
mov
add
mov
inc
into
aad
mov
push
push
lods
movsb
and
dec
std
lcall
jns
pop
mov
jnp
jmp
mov
test
pop
dec
js
cmpsb
dec
inc
mov
nop
pop
xchg
lea
xchg
add
outsb
adc
mov
inc
lcall
jo
rcrl
push
stos
roll
xor
pop
mov
sub
mov
aaa
inc
ror
mov
xchg
shrl
ret
gs
xor
ds
xlat
movsl
loopne
pop
mov
jnp
jnp
loop
pop
mov
outsb
notb
jg
scas
test
nop
or
insb
je
adc
cli
mov
sti
push
sub
repnz
xchg
add
or
push
je
divl
cmp
jp
call
mov
mov
in
fnstcw
nop
pop
fistl
sbbl
fiaddl
and
iret
xor
lods
cmp
push
inc
mov
shr
xchg
xchg
fld
cmc
mov
xchg
scas
scas
insl
int
negb
mov
inc
mov
repnz
insb
inc
push
inc
sbb
inc
dec
ret
enter
xor
stos
clts
notb
sbb
add
dec
scas
xchg
push
out
jmp
sub
inc
in
out
call
loop
imul
cld
out
xchg
mov
into
lods
pop
mov
jbe
enter
pop
out
sbb
mov
das
and
int
shrl
dec
lret
and
push
fimull
iret
mov
je
lds
mov
fwait
xchg
jnp
orb
xchg
mov
cmp
xor
lret
inc
fcos
outsl
rclb
std
jle
jae
iret
adc
mov
pop
dec
pop
adc
mov
jp
mov
push
jle
mov
fisttpll
leave
push
push
dec
in
push
rorb
or
int
mov
sub
inc
pushf
sarb
pop
push
stos
test
or
and
pop
lds
pop
or
lods
fdivrp
push
mov
lods
inc
iret
jge
lods
mov
mov
aaa
imul
dec
sarl
cmpsl
cmpsl
aas
push
insl
ret
push
int
xor
stos
mov
push
out
imul
data16
mov
cs
jg
mov
data16
stos
out
stos
loop
outsb
aad
mov
cmp
in
into
shrb
dec
mov
xchg
test
mov
inc
movsb
mov
into
ficoml
ret
add
xchg
pop
xchg
aaa
mov
les
scas
mov
dec
jnp
pop
cli
xchg
ret
fldcw
movsl
push
jp
lret
add
mov
aam
lret
imul
std
mov
xchg
mov
inc
fistps
movsb
loop
push
repnz
adc
sbb
shrb
xchg
imul
or
es
insl
xchg
shll
pop
bound
cmp
neg
arpl
sub
arpl
int
sahf
arpl
mov
dec
xchg
test
repz
mov
pop
dec
adc
les
mov
orb
push
sbb
int
out
and
or
xchg
arpl
or
inc
dec
xor
clc
pop
sbb
arpl
pushf
test
fisubrl
push
cwtl
clc
test
shlb
repnz
js
add
adc
pop
xchg
inc
scas
or
inc
out
push
aas
mov
pop
int3
xor
and
or
fs
or
bound
imul
dec
push
jmp
pushf
sbb
cmpl
mov
inc
jl
mov
mov
mov
pop
movsb
jnp
ret
sub
pop
scas
lahf
xchg
js
add
push
jle
inc
xchg
add
imul
xlat
pop
sub
jmp
je
rep
push
loopne
aas
xchg
rcrb
or
jno
iret
jbe
push
or
and
sti
jecxz
mov
stos
sbb
stos
jmp
xor
jmp
inc
jmp
out
jnp
cmpps
pop
sahf
out
lock
dec
movsl
stc
sub
gs
cmp
jae
in
mov
dec
adc
ja
cmp
movl
lods
pop
pop
mov
adc
aad
mov
cmp
or
adc
enter
int3
fldenv
inc
fbld
shlb
cli
ljmp
je
jns
popa
insb
cmp
or
and
subl
nop
add
jmp
fadds
dec
stos
ljmp
sub
add
les
popa
mov
test
jle
mov
xchg
fwait
call
out
in
nop
sti
jmp
xlat
inc
pop
push
mov
icebp
ret
pop
xchg
dec
or
cs
or
xchg
imul
mov
xchg
mov
imull
dec
adc
push
sahf
push
mov
and
clc
out
xchg
mov
jae
cmpsb
inc
xchg
pusha
xor
inc
nop
outsl
pop
lret
mov
aaa
adc
cmovno
xchg
xor
rorl
xchg
mov
stos
shll
daa
push
pop
imul
and
mov
cli
inc
fisubs
in
outsl
shlb
jmp
jl
and
lea
xchg
je
inc
das
push
and
ja
lods
pop
push
cs
push
sti
and
cmc
ja
cmpsl
lret
inc
pushw
mov
jmp
popw
cli
int3
enter
ud1
mov
add
xor
pusha
popf
xlat
add
add
popa
jmpw
xchg
sbb
mov
lret
data16
subl
dec
mov
and
ja
mov
mov
mov
mov
mov
xor
xor
sub
int
jl
nop
call
rorb
inc
lock
sub
dec
jbe
popa
arpl
mov
xchg
push
xlat
ja
out
and
and
jg
mov
xchg
and
shrb
pop
jae
jmp
push
outsb
aad
pop
and
clc
mov
lock
ljmp
sub
adc
icebp
add
cmp
out
inc
in
cmc
and
push
rcr
es
movsb
clc
dec
lods
cmp
fdivrp
pop
xchg
sar
lret
dec
repz
es
testl
test
xor
mov
repnz
and
cmp
test
jb
dec
dec
lret
xchg
cld
js
idivb
mov
clc
outsl
or
inc
jae
fdivl
out
sbb
xchg
xor
xor
xchg
mov
test
mov
adc
sub
mov
pusha
sbb
gs
jnp
inc
xor
imul
pop
ja
xchg
pop
mov
mov
scas
jecxz
in
into
negb
ror
cwtl
push
dec
xorb
xchg
xor
and
sbb
fcomi
jnp
adc
lahf
xchg
and
insb
ja
out
es
mov
test
push
hlt
sbbb
xlat
gs
pop
push
sbb
test
cmc
cmp
outsb
lds
dec
adc
mov
adcb
add
or
xchg
pop
xchg
jae
icebp
xor
add
notb
scas
cwtl
mov
inc
ret
test
jno
std
int
cmp
sub
mov
test
xor
std
pop
insl
stos
insl
sahf
or
mov
nop
pop
inc
dec
and
mov
push
fwait
xchg
mov
stos
xchg
cld
das
nop
xchg
movsl
sahf
hlt
mov
push
lods
inc
sub
inc
popa
xchg
jns
ret
and
fimuls
xchg
push
clc
mov
subl
mov
jno
sarb
cvtps2pi
xchg
push
adc
mov
int3
xchg
divb
jmp
push
into
mov
imul
dec
add
lret
fs
pushf
dec
push
pop
cmp
pop
inc
leave
repnz
sbb
into
xor
dec
outsl
insl
fwait
sub
adcb
cmpl
mov
adc
sbbl
rol
roll
mov
clc
and
sub
xchg
mov
xchg
je
ds
pop
jae
stc
mov
mov
je
lods
add
out
adc
cwtl
jo
adcb
push
jnp
es
fwait
inc
in
sbb
ljmp
mov
adc
shll
jmp
mov
daa
mov
and
dec
mov
into
mov
add
inc
clc
fsubrl
pop
in
out
inc
push
push
inc
push
dec
out
cmp
movsl
clc
fldenv
and
lcall
mov
push
popa
mov
in
mov
insb
cs
cmp
iret
xor
out
push
in
cmp
cs
iret
lcall
or
add
gs
stos
cmp
jno
inc
dec
mov
repnz
arpl
or
cmp
inc
adc
es
xchg
mov
add
push
cmp
int
pop
jae
sti
iret
ljmp
sbb
mov
xchg
lea
imul
out
mov
das
loopne
dec
cmp
push
in
ret
popa
jp
rcll
clc
cli
fs
inc
or
jmp
pop
push
movsl
mov
sbb
out
fidivs
out
adcl
cmp
mov
jp
lahf
shll
shll
mov
mov
sti
std
pop
es
loopne
mov
lcall
push
movsb
xchg
xorb
int3
mov
outsl
sub
push
mov
mov
inc
mov
xchg
xchg
aas
and
xorl
lret
xchg
rcrb
push
cmp
xchg
add
mov
bound
ret
pop
mov
jmp
cbtw
stc
ljmp
cmp
pop
xchg
xor
fsub
pusha
xor
sub
lret
les
add
in
adc
adc
jmp
pop
les
and
in
dec
out
repz
sarb
fs
out
mov
cmp
push
imul
in
pop
xchg
lods
xchg
enter
lods
cwtl
xor
loop
xor
aad
int3
aas
sub
aam
inc
xor
push
lods
jne
cmpsb
cwtl
inc
push
iret
fdivp
dec
sub
or
in
mov
insl
cmp
hlt
xchg
insb
xor
dec
lea
cli
mov
fiaddl
clc
ljmp
lods
mov
nop
sub
clc
icebp
xor
sbb
scas
fwait
clc
sub
pop
add
icebp
hlt
cltd
les
push
pop
mov
cli
ss
jmp
and
fsubs
cmp
repz
xchg
repnz
xchg
repnz
dec
cld
js
jecxz
out
outsl
xchg
into
shll
add
rclb
fisubl
pop
outsl
shl
test
jmp
andl
xor
inc
dec
arpl
ret
iret
notl
std
outsl
icebp
rcl
cmp
dec
lcall
gs
cltd
dec
lahf
mov
stc
inc
cmp
out
lcall
repnz
xchg
repz
aaa
adc
cmp
mov
roll
imul
push
leave
nop
cmc
das
pop
mov
xchg
shll
push
xor
inc
jbe
xchg
mov
out
mov
sti
popl
cltd
js
inc
dec
cs
push
not
gs
lods
push
std
mov
ret
mov
or
mov
aam
fiaddl
arpl
mov
or
sbb
inc
sti
mov
subl
jne
aas
lcall
xchg
jno
pop
rclb
int
iret
mov
mov
int3
adc
subb
jb
fisttpll
adc
mov
int3
inc
stos
or
pop
movsb
dec
fisttpl
ret
dec
cs
imull
mov
lret
jge
mov
mov
sub
bound
je
mov
push
mov
movsl
ljmp
cli
sbb
push
test
xchg
and
push
push
jb
add
push
in
loopne
add
mov
xchg
cmp
cli
ss
mov
icebp
testb
cmpsb
pop
and
mov
idiv
in
jno
jle
mov
fwait
mov
out
or
or
push
push
lahf
dec
inc
outsl
ds
in
mov
pop
xchg
xchg
scas
or
cmp
cltd
jp
jno
lods
push
sub
adc
mov
mov
popf
clc
enter
cli
out
loope
testb
push
mov
push
mov
mov
sti
divps
ds
insl
push
push
adc
stos
call
fiaddl
lea
dec
xor
jno
mov
lock
lods
xchg
loop
cs
jp
out
push
cmc
push
cmove
cmp
and
ret
dec
out
pop
xchg
into
ret
sbb
xchg
mov
mull
std
pusha
cmp
adc
push
ss
adc
cmp
cmp
xor
test
xor
push
arpl
and
lret
daa
out
test
sub
cmp
inc
mov
int
popl
loopne
leave
stos
rcr
out
dec
xor
ljmp
lcall
inc
xor
je
and
mov
jmp
sbb
push
lcall
pop
adc
adc
xor
and
mov
bound
insl
jle
inc
pop
push
lods
sub
jns
inc
jbe
das
dec
stos
repnz
dec
das
and
mov
push
ljmp
adc
and
ss
pop
add
mov
lret
jmp
jae
fildl
and
cmp
cld
cmpsb
mov
hlt
xchg
addr16
pop
mov
dec
sbb
inc
jecxz
sub
jns
jmp
rcrl
sbb
cwtl
rorl
arpl
dec
push
jae
es
andb
push
mov
jo
shl
test
or
adc
ljmp
jbe
pusha
dec
xchg
mov
jecxz
or
shrb
mov
xor
pop
or
adc
rcl
jns
sub
push
add
orb
enter
pop
call
std
ljmp
cmpsb
jnp
dec
add
dec
pop
into
sbb
movsb
sarl
stc
pop
pop
fstpl
xchg
cli
mov
shll
jmp
ds
push
ror
cmp
xor
inc
shrl
dec
inc
loop
divl
in
or
daa
and
mov
xchg
xchg
stos
aaa
push
outsb
mov
xchg
sti
outsb
test
sarb
mov
outsb
lcall
repnz
ljmp
shlb
xchg
pop
es
fists
loopne
inc
ret
mov
pop
and
ret
add
into
mov
imul
popf
imul
sub
ret
mov
ja
mov
ds
div
insl
shr
pop
mov
movsl
movsl
xlat
dec
jp
pop
daa
sahf
scas
pop
fld
lock
mov
push
dec
shlb
lret
pop
jle
loop
sub
lcall
add
xchg
orl
sar
rclb
loope
mov
or
je
push
push
insb
lods
pop
cmp
out
adc
jne
jmp
xchg
imul
and
pop
ret
divb
cwtl
imulb
mov
lods
and
pop
addr16
xchg
adc
scas
and
jb
adc
iret
lret
cld
or
sub
dec
and
xchg
xchg
pop
sbb
int3
pop
or
sbb
stos
mov
sbb
add
frstor
gs
in
ja
push
push
or
fwait
xor
adc
cmp
call
adc
cmp
inc
sub
inc
fisubrs
lods
sub
jge
xor
leave
mov
jns
into
push
mov
xchg
push
dec
push
loop
and
outsb
sbb
jno
cld
sub
jmp
mov
repnz
pop
out
loope
sub
mov
aam
inc
imul
mov
inc
xchg
pop
pop
jecxz
test
xchg
movsb
jb
dec
mov
jge
int3
xchg
lahf
cmp
outsl
adc
and
aad
sub
outsl
jo
in
out
push
data16
inc
jns
or
loop
and
or
xchg
pop
sub
dec
mov
or
scas
mov
lret
cmp
flds
jmp
pusha
sub
fisubrs
fidivrs
sub
push
inc
test
aas
pop
dec
pop
add
aas
mov
mov
in
fbstp
mov
mov
ja
inc
cmp
pop
push
dec
sbb
fisttps
inc
mov
int
fldt
xchg
push
inc
cmpsl
scas
stc
pop
in
pop
push
cs
js
into
adc
lock
arpl
jle
mov
xor
lcall
lret
add
pusha
or
mov
mov
push
push
ret
push
scas
test
pusha
sti
lcall
testl
mov
dec
ljmp
inc
cltd
mov
push
pop
xor
sahf
or
sbb
mov
addr16
movl
mov
inc
push
push
repnz
iret
jecxz
mov
sub
sarb
rclb
repnz
mov
push
xchg
lods
xchg
inc
ds
dec
fiaddl
xor
dec
notl
andl
jmp
les
xchg
mov
xchg
inc
push
dec
repz
mov
or
mov
aas
subl
sub
scas
push
adc
pop
dec
stos
push
push
fwait
adc
cmp
adc
ret
inc
or
fimull
sbb
push
sbb
xorl
into
adc
pop
xchg
xchg
add
xchg
pop
xor
fdivrs
repz
subb
les
in
mov
lret
sbb
mov
push
test
mov
pushf
jle
js
ret
xor
cmp
xchg
outsb
repz
xchg
cmpsl
push
pop
and
cmc
mov
jnp
dec
sbb
and
cmp
add
leave
ja
inc
enter
rcll
push
sbb
mov
xlat
lret
mov
push
aad
mov
pop
cwtl
pop
insb
xchg
and
pop
into
push
adc
mov
mov
sub
mov
jb
mov
sub
xchg
or
test
mov
repnz
cli
not
inc
pop
pop
sub
add
insl
mulb
mov
out
dec
jae
xchg
mov
jmp
sbb
mov
mov
push
xchg
push
adc
push
gs
out
repnz
pop
push
xchg
sti
jecxz
pop
lret
in
and
out
out
mov
push
inc
stos
dec
xchg
sbb
jecxz
adc
pop
pop
inc
xchg
xchg
xor
pop
out
mov
inc
mov
pop
jno
cwtl
mov
std
jle
cld
dec
movsl
jecxz
push
leave
mov
daa
mov
incb
mov
out
jmp
cmp
test
scas
in
shl
sub
pop
aam
cmpsl
and
cmc
lret
inc
sub
mov
push
jmp
pop
xchg
stos
movsb
loope
mov
cli
roll
sar
dec
lret
adc
jne
mov
ficompl
sbbb
in
rcl
cld
clc
faddl
fwait
dec
shlb
fwait
ret
jns
ret
cmp
cli
es
adc
enter
mov
push
pop
pop
inc
xor
push
dec
push
fwait
cs
or
filds
jbe
adc
dec
lahf
mov
add
out
aad
icebp
movsl
push
stos
packsswb
pop
sub
xor
fcom
xchg
cwtl
sub
iret
lcall
sub
fidivs
xchg
inc
lds
and
jle
mov
dec
jg
mov
or
nop
testb
dec
data16
push
cltd
fwait
push
negb
js
in
nop
mov
dec
call
dec
sbb
mov
sti
arpl
fadds
push
adc
fldcw
cmp
or
fimull
shlb
add
fwait
inc
leave
push
add
inc
lret
fstps
jp
movsl
scas
aas
adc
sub
adc
enter
sahf
lds
mov
shlb
lds
aam
sahf
jbe
jg
jae
push
jne
shll
sub
mov
or
cmpsb
mov
ret
mov
jne
fcompl
mov
pop
std
cmp
push
or
and
mov
lcall
xchg
pop
lods
pop
xchg
inc
xchg
out
rcll
iret
cmp
lahf
ljmp
loop
lahf
push
push
mov
in
and
stos
pop
shll
scas
xchg
insl
call
stc
ljmp
mov
popa
mov
jae
aas
shr
xorb
jle
repz
test
lock
js
cmp
repz
clc
push
sbb
stos
jno
mov
jns
pusha
hlt
add
push
nop
xchg
and
addr16
push
icebp
dec
mov
inc
jle
lods
add
dec
lods
stos
push
or
or
fwait
mov
loopne
enter
mov
addr16
mov
sub
pop
push
shl
pop
xchg
dec
inc
push
jle
fcmovne
cmc
mov
ret
xchg
xor
les
test
lret
xor
xchg
push
gs
mov
fisubl
mov
lds
sbb
adc
mov
cmp
idivb
fwait
lcall
orb
scas
aas
sahf
sbb
insl
sub
fisttpll
out
mov
mov
push
lret
orb
mov
pop
sahf
jno
xchg
dec
jmp
sub
shll
dec
mov
push
aam
cmpsl
xor
addb
or
nop
cmpsb
mov
push
adc
fisttps
imul
cli
sub
movsb
xorl
imul
inc
inc
cmp
push
clc
pushf
xor
cmpsb
inc
dec
dec
dec
or
test
push
testb
adc
jg
pop
push
jecxz
push
rclb
mov
pop
sahf
jb
xor
jo
lods
shrb
insl
je
mov
add
sahf
lods
fsubrl
xor
aas
hlt
loope
lcall
inc
pop
jecxz
les
xchg
or
push
fists
xlat
xor
in
ljmp
outsl
push
nop
add
xlat
cli
shll
js
arpl
in
mov
xor
dec
mov
xchg
pop
in
cmp
fisttpl
in
scas
bound
dec
xchg
xor
or
inc
xchg
daa
orb
fadds
dec
imul
push
jg
popa
out
mov
icebp
pusha
inc
sbb
clc
cmp
loop
testl
xor
imul
inc
loopne
xchg
push
out
aas
ljmp
mov
push
mov
xchg
cmp
int
imul
lret
test
addr16
outsb
sahf
or
xorb
shrl
pop
iret
ljmp
mov
iret
mov
arpl
mov
push
jl
enter
dec
rcl
mov
pop
mov
out
andb
ja
inc
icebp
aas
sahf
cmp
adc
into
out
sub
xchg
mov
clc
add
popf
cmp
and
repz
stc
fisubrl
jno
mov
dec
xchg
movsl
fdivp
inc
dec
add
sbb
xchg
aam
imul
adc
stos
imul
or
mov
std
mov
lret
aad
dec
push
dec
int
inc
push
cli
arpl
or
cli
repz
push
or
out
nop
jecxz
popa
cmpsl
outsb
mov
in
mov
mov
lahf
mov
inc
push
repz
add
sub
rcll
xchg
cmp
adc
or
sub
incl
or
push
pop
jle
mov
in
or
and
xchg
lds
lock
fldl2e
rclb
int
lea
loope
mov
cmp
movsb
mov
pop
lea
das
xor
dec
push
jge
aad
outsl
negb
jae
xchg
pop
out
test
lea
shrb
push
jmp
pushf
cld
leave
out
cwtl
mov
xchg
adcl
sub
lds
inc
inc
movsl
dec
enter
stc
and
bound
cli
iret
or
push
test
ds
push
insb
lcall
lea
xorl
fwait
int
int
shlb
outsl
adc
enter
dec
mov
and
mov
pop
iret
insb
sub
test
mov
cltd
stos
xor
inc
es
jle
pop
mov
fmuls
imul
add
popa
mov
lret
cwtl
aam
and
nop
leave
stc
push
mov
jmp
fbstp
test
rolb
bnd
fisubrl
push
pop
add
mov
xchg
mov
mov
inc
pushf
cli
cwtl
gs
aam
movsl
mov
imul
mov
pushf
icebp
arpl
sarb
adc
mov
push
push
mov
ss
mov
leave
into
or
xor
lret
es
gs
xchg
dec
shrl
rcr
test
aas
xchg
aaa
ljmp
sar
rorb
aad
sub
call
push
jb
cld
or
cltd
pop
sub
fs
xor
lret
mov
jbe
jmp
xor
clc
cli
mov
jnp
popf
dec
lea
push
stc
xor
cmp
pop
mov
fisttpll
popf
fcompl
add
std
cmp
cs
pop
ss
arpl
imul
dec
mov
sub
jns
jb
outsb
icebp
dec
mov
sbb
sti
lret
jmp
or
into
lods
insl
cwtl
mov
dec
inc
cmpsb
mov
mov
sahf
xchg
dec
dec
dec
ljmp
aaa
push
add
imul
add
iret
cmc
xor
iret
and
push
or
fcomps
mov
faddl
xor
pusha
pushf
dec
mov
push
and
jnp
inc
outsb
adc
xor
out
das
psubusw
stos
cwtl
jecxz
dec
push
int3
ljmp
jo
mov
inc
addr16
outsl
jge
dec
mov
inc
xchg
cltd
adc
pop
jp
test
out
ljmp
cmp
call
ss
inc
push
popf
cltd
sti
and
cmp
mov
shrb
pop
xchg
xchg
adc
mov
jmp
sarb
xchg
cmp
push
mov
mov
cmp
mov
xchg
adc
xchg
push
xor
pop
ss
loop
int
mov
cmpsl
sbb
mov
ljmp
subl
pop
lahf
xchg
lret
mov
adc
dec
inc
push
mov
imul
test
imul
add
dec
sub
xchg
or
in
mov
push
xchg
lds
in
and
push
sbb
sbb
loopne
mov
add
repnz
cli
pop
std
call
lahf
lret
pop
mul
icebp
bound
push
xchg
cmp
xchg
test
fiadds
mov
iret
ljmp
push
imul
in
pop
ljmp
lods
lret
add
push
adc
loope
dec
sti
int3
inc
fadd
lock
push
daa
xchg
mov
lcall
and
arpl
test
in
pop
pop
stc
rclb
lcall
adc
jno
lea
dec
sbb
enter
ljmp
and
and
inc
jle
jmp
add
push
pop
push
in
cmpsb
aad
mov
les
mov
mov
add
push
or
cs
adc
sbb
aas
lahf
mov
mov
mov
mov
out
shll
xor
addr16
lret
jne
mov
xor
mov
ja
xchg
xchg
test
imul
pushf
into
inc
mov
mov
andl
ljmp
ljmp
stos
xchg
adc
adc
stos
adc
mov
jg
xchg
mov
add
clc
ja
dec
and
lds
stos
xchg
pop
xchg
dec
aad
mov
arpl
pop
lret
lcall
mov
dec
outsb
test
cmp
adc
and
push
inc
shrl
stos
jbe
mov
cs
test
sbb
mov
mov
push
mov
dec
imulb
pop
xor
ret
push
xchg
aaa
test
mov
aam
imul
mov
imul
or
ss
iret
imul
mov
inc
outsb
lret
movsb
mov
pop
push
jp
lahf
int
fs
jb
call
mov
scas
cmpsb
xlat
lods
pop
mov
es
lahf
nop
sbbl
aaa
fwait
lahf
pop
shlb
imul
xchg
repnz
fimuls
xor
imul
pop
xor
ja
dec
cmp
cmpsl
inc
sarb
pop
stos
cmp
fcmovnu
xchg
cmovbe
in
or
mov
fldcw
mov
jle
lret
addb
jno
xchg
dec
dec
pop
jne
mov
jns
xchg
dec
popa
push
icebp
in
cltd
sbb
js
aam
shrb
mov
das
shl
fildl
cli
cmp
mov
mov
mov
xchg
into
test
cltd
mov
nop
popf
rcrl
xor
mov
out
cld
mov
mov
in
cmp
pushf
in
jmp
mov
and
cmp
or
cld
xlat
mov
es
xor
es
xor
add
mov
dec
in
shr
adc
adc
iret
cmpsl
int3
lahf
inc
mov
pushf
out
inc
cwtl
int
lock
push
ret
lcall
arpl
xchg
sub
xorb
dec
xchg
or
adc
adc
and
cli
mov
sub
enter
clc
dec
ret
mov
lcall
push
hlt
in
or
mov
pop
fwait
mov
inc
mov
sub
mov
sti
inc
cmc
sahf
cs
mov
mov
xor
imul
lret
xor
dec
ret
loope
and
leave
dec
fisttpl
call
pop
lret
test
add
pop
outsl
in
in
push
inc
dec
cli
cmp
and
fnstenv
lret
jmp
xor
in
mov
push
xchg
call
jmp
push
pop
mov
and
into
fmul
or
fisttps
inc
into
cmpsb
scas
in
mov
nop
mov
or
cli
xchg
jne
xor
fsubrp
fsubrs
stos
fscale
sbb
and
mov
cmpsl
sub
and
pop
push
xchg
xor
fsubrp
mov
add
add
movsb
testl
push
cmp
sti
push
insl
idiv
mov
fimuls
out
push
xlat
aaa
out
xor
push
loopne
adc
stc
aaa
inc
dec
popa
jg
xchg
movsl
ljmp
cmp
cli
dec
pavgw
ja
subl
pop
sbb
or
sti
cmp
or
cs
sub
sti
xor
lock
out
les
jge
les
push
std
xchg
jp
mov
pop
xor
mov
test
adc
jmp
je
imulb
push
sti
inc
dec
or
outsl
js
and
sbb
cld
insl
les
into
cmpsl
aam
dec
fidivl
or
insl
mov
pop
xchg
add
dec
stos
nop
pop
push
pop
les
and
and
inc
xor
jo
test
xchg
add
cmpsb
dec
adc
and
pop
pusha
mov
scas
push
push
movsb
cltd
adc
leave
cltd
push
ds
cli
add
outsb
insl
dec
adc
mov
ljmp
or
aam
jmp
cs
xor
mov
sar
cmp
xor
mov
ss
leave
adc
cmp
cmp
arpl
or
sbb
addr16
test
hlt
and
cmp
leave
ss
or
movsb
inc
cltd
das
pop
and
xchg
xor
scas
inc
jp
xchg
mov
xor
lds
clc
rclb
jmp
push
iret
inc
inc
xor
xor
call
cmp
mov
sahf
cli
iret
adcb
and
iret
lds
xchg
add
add
push
xor
leave
jmp
popa
in
in
or
ret
cli
lret
aad
lahf
ljmp
inc
sti
ljmp
mov
inc
jno
mov
cmp
imul
cs
pop
or
add
enter
push
imul
sub
xchg
mov
lea
and
mov
lcall
sub
pop
aad
mov
stos
mov
or
inc
shlb
pop
or
pop
and
jne
test
iret
jns
mov
lret
psadbw
sub
dec
push
or
inc
lret
cltd
push
mov
xchg
add
jb
or
int3
add
jno
loopne
mov
fs
lret
cmp
fsubl
adc
or
ljmp
loop
movsl
stc
cmp
xlat
pop
pop
dec
loopne
dec
xchg
popf
or
sahf
push
sub
jno
and
mov
int3
xchg
jge,pn
pop
pop
shl
sub
mov
lret
cmp
jne
jecxz
push
mov
mov
mov
mov
dec
scas
xchg
loop
adc
inc
xchg
sbb
pusha
fdivr
xchg
pop
jne
clc
lea
add
cmpsl
adc
cmc
stc
out
cli
cli
insb
inc
xchg
sub
aad
rcl
das
pop
mov
pushf
jecxz
mov
jecxz
testl
mov
in
testl
jno
dec
xor
and
movb
xchg
orl
xchg
rclb
sahf
lret
rorl
sub
cld
gs
inc
dec
cmpsb
repnz
inc
mov
pop
lahf
movsl
xor
int
pusha
ja
out
rclb
lock
cld
movl
jge
inc
test
nop
adc
fists
loop
cmp
jno,pn
pop
sbb
xor
dec
stos
sub
pop
lret
mov
mov
sub
fisubs
adc
pop
cmpsb
xor
xchg
pop
xchg
jo
jbe
sbb
push
xor
pand
inc
xor
ja
sub
mov
outsb
sbb
lods
add
inc
xchg
mov
mov
jno
push
lret
out
enter
mov
push
sahf
out
arpl
cli
into
mov
mov
popa
adc
push
pushf
imul
out
int
pop
jns,pt
push
cs
rcrl
mov
dec
jae
xchg
rolb
js
mov
je
movsl
push
stc
sarl
or
fisubrs
mov
cmpsb
jno
movsb
push
data16
push
inc
sahf
adc
or
cmpsb
or
movsl
push
shrl
shrl
cmp
inc
push
dec
push
add
or
pushf
mov
xchg
das
add
imul
mov
subb
mov
ret
filds
jne
in
leave
inc
inc
dec
aas
and
push
inc
sti
sahf
fbld
insb
mov
ss
fistps
test
jg
gs
push
andb
adc
aam
clc
iret
ljmp
sub
rorl
int
popa
test
jle
in
sbbb
cmc
and
dec
lret
pop
les
arpl
repz
and
lods
xchg
mov
fcmove
fwait
sbb
bound
roll
dec
jbe
std
test
jmp
cmp
in
mov
xor
cmp
mov
adc
or
loope
jno
add
cmp
mov
xchg
add
stos
sub
cmp
xchg
cmp
loope
sub
pop
sub
lea
loopne
mov
pop
mov
mov
pop
sbb
inc
or
inc
fdivr
push
inc
mov
inc
mul
bnd
dec
das
inc
incl
mov
and
testb
arpl
xor
in
dec
in
xor
add
push
jb
mov
arpl
in
xor
lahf
clc
nop
cltd
jl
or
in
inc
adc
jo
gs
jb
push
iret
cmc
pop
inc
or
jbe
jmp
jnp
xchg
jmp
cltd
scas
pop
jmp
je
cmp
inc
dec
gs
iret
push
shr
sahf
test
xor
mov
mov
cli
ja
in
mov
cmpsl
inc
int3
push
add
inc
mov
adc
or
hlt
out
shlb
fwait
mov
push
mov
push
push
into
mov
or
mov
iret
lods
push
lods
imul
jmp
addr16
pop
gs
cmp
adc
cmp
lret
or
std
jmp
jmp
pop
ds
out
mov
in
stc
int
ja
and
pop
xchg
outsb
inc
inc
pushf
push
leave
dec
loop
imul
inc
fistps
mov
mov
int3
and
cmp
jae
fisubrl
nop
jmp
or
xchg
mov
movsb
adc
rorl
test
call
xchg
pusha
pop
data16
xchg
and
in
mov
or
faddp
mov
mov
xchg
imul
lods
sbb
mov
cmp
push
xor
negb
out
cltd
sbb
add
jo
xchg
icebp
mov
push
mov
ljmp
roll
fwait
cmp
xor
cltd
add
xchg
inc
push
xlat
movb
outsb
lea
jge
pop
mov
xlat
mov
xchg
out
sahf
mov
xchg
repz
imul
sub
push
adc
clc
imul
in
adc
xor
jg
jmp
icebp
cmp
arpl
iret
mov
imul
lcall
xchg
and
xchg
call
daa
cmc
add
out
out
sbb
rolb
int3
lods
std
mov
xchg
dec
in
and
adc
xor
test
xorb
clc
push
dec
pop
ja
jns
pushf
adc
ljmp
clc
cld
mov
xchg
pcmpgtb
fisubs
xor
sbb
fistpl
xchg
orl
sbb
cmc
push
and
dec
mov
and
pop
cmp
js
data16
pop
arpl
mov
in
arpl
leave
or
cwtl
pop
pop
loop
jecxz
push
mov
jnp
gs
fsubrl
insb
fildl
insb
sahf
push
inc
add
in
out
orb
aam
inc
ds
adc
popf
aas
sbb
and
inc
pop
mov
mov
pushf
das
mov
push
sub
popf
rclb
dec
mov
addl
rol
sub
fdivs
xchg
push
mov
mov
mov
dec
add
add
pop
add
fsubs
testb
sbb
std
movsb
repnz
xchg
orb
adc
inc
es
push
fadds
or
outsl
repnz
xchg
loop
shlb
push
mov
cmpsl
ljmp
mov
push
test
lea
scas
jmp
dec
repnz
mov
push
ljmp
iret
cmp
fisubrs
imul
jl
xor
mov
cmc
push
jle
jmp
bnd
aam
pop
movb
out
sbb
pop
adc
adc
cs
jns
loop
gs
mov
push
mov
shl
pusha
clc
fisttpll
jge,pn
dec
lds
into
rol
xor
push
mov
fsubrs
in
mov
fcmovnbe
testb
imul
call
xchg
jns
ret
shrl
mov
push
and
aad
out
xor
jp,pn
add
and
stc
dec
push
dec
sub
mov
push
popf
stos
mov
mov
inc
ja
dec
mov
aaa
mov
in
or
push
push
outsl
iret
gs
lock
cs
jg
adc
cs
out
dec
xchg
ds
push
out
mov
mov
pop
or
mov
sbb
dec
mov
andl
add
push
sub
lock
ret
pop
pusha
jb
mov
out
in
es
push
jbe
cmc
idivb
pop
cltd
arpl
ss
jns
push
cbtw
loop
dec
sbb
sub
rorl
aam
js
mov
js
mov
mov
shlb
push
jmp
ljmp
cld
int3
jno
dec
mov
sbb
pop
nop
adc
jmp
adc
pop
fistpll
mov
dec
imul
int3
push
ss
or
push
lretw
clc
sbb
xchg
mov
fnstcw
sarb
pop
mov
lret
out
pop
dec
push
or
in
add
mov
mov
xor
inc
sub
push
sbb
pop
es
scas
ljmp
rcl
jmp
mov
sub
jns
loop
popa
shlb
cmc
jmp
push
pop
push
jnp
sbb
sbb
push
das
cs
dec
fisubs
jmp
fs
negl
pop
icebp
add
mov
cmpsl
and
push
pop
repz
inc
dec
or
out
arpl
and
addb
inc
mov
popw
dec
sub
cs
xchg
lret
ret
iret
lret
or
inc
cli
shlb
sbb
dec
data16
aam
shlb
enter
xor
inc
or
lahf
xor
aad
sbb
pslld
mov
int3
xor
jecxz
pop
or
aas
std
inc
popl
ror
adc
or
jo
add
shl
pop
inc
filds
dec
loopne
inc
ss
mov
cmc
xchg
js
sbb
cld
mov
mov
jo
fcomp
cli
jo
jmp
lahf
cmp
gs
ds
sub
and
push
cmpsl
cmp
and
in
mov
mov
cs
mov
decb
sahf
movsl
mov
xor
dec
add
fs
pop
pop
dec
fcmovb
xor
dec
mov
push
int3
push
push
xor
mov
clc
push
fldl
cmc
inc
adc
sarl
xor
push
cld
int
add
xchg
mov
cmp
xchg
pop
popf
js
out
adc
loop
cmc
push
arpl
add
enter
icebp
imul
jge
arpl
ja
inc
mov
gs
xchg
sbb
dec
fsubrl
inc
in
enter
push
or
push
adc
inc
jmp
push
or
xlat
aad
and
push
jae
jns
jecxz
mov
shlb
jae
test
shrb
mov
inc
sub
or
mov
lds
sti
or
in
cmpsl
lahf
sub
push
rorb
mov
xchg
mov
push
aas
push
xchg
fwait
cmpsb
pusha
pop
jae
inc
bsr
mov
inc
arpl
or
xchg
int3
movsb
sbb
pop
rorl
subb
clc
loope
arpl
or
icebp
push
mov
xchg
aas
adc
mov
outsl
bound
xchg
and
inc
mov
pop
int3
or
cli
mov
push
dec
sub
dec
adc
cmpsb
jge
loopne
or
cmpsb
add
nop
jo
mov
or
cmc
lods
loope
sub
jb
mov
icebp
add
sbb
push
push
cs
repnz
sbb
rol
ds
xchg
inc
pusha
push
je
lods
xchg
popf
pop
adc
add
sbb
fsubl
fimuls
sbb
push
popa
out
loope
ret
adc
lods
pop
cwtl
xor
xor
les
inc
and
shlb
imul
int3
cmp
or
nop
incb
inc
lods
mull
push
and
cmc
push
ss
or
lods
mov
jno
aam
cmpsl
pusha
dec
loope
sub
cmp
ds
push
xchg
sub
or
jl
negb
sti
dec
popf
dec
jmp
inc
aaa
cmpb
cmpsb
shrl
fwait
stos
pusha
adc
sbb
outsl
addr16
mov
sub
xor
fdivrl
adc
adc
xchg
ss
mov
stc
inc
add
add
sbb
mov
push
repnz
push
or
sti
aas
outsl
push
xchg
adc
and
js
test
xor
pop
loop
mov
inc
and
xchg
lods
pop
mov
sbb
popf
sub
jp
pop
xchg
in
orl
std
mov
mov
insl
xchg
cmpsb
pop
xchg
aaa
push
or
mov
push
fdivs
xchg
daa
loopne
inc
inc
clc
enter
ss
dec
and
arpl
or
ljmp
stc
sub
mov
pop
mov
dec
stc
mov
popa
pusha
sub
push
lret
add
lahf
cmc
lea
arpl
aad
mov
push
jne
dec
jmp
iret
mov
mov
bound
cld
xchg
mov
mov
inc
and
pop
mov
pop
push
sbb
mov
les
rcl
sahf
cmp
jmp
mov
insb
sub
fs
mov
cmpsb
addr16
fcoml
or
jl
dec
add
call
pop
xor
jne
roll
cli
les
clc
lahf
lret
add
adc
pop
pop
lahf
xchg
addr16
xlat
ljmp
pop
in
jle
sub
js
lcall
mov
sub
fadds
xchg
lahf
cli
sbb
pop
lock
call
sbb
shll
clc
or
jl
fcmovne
jecxz
pop
fwait
stc
imulb
outsl
adc
inc
dec
orl
icebp
int
mov
fisttpl
lods
in
pop
rcll
push
xor
movsb
dec
pop
rcrb
into
and
imul
aas
mov
adc
pop
fidivrs
ds
inc
push
icebp
push
xchg
mov
inc
cmpsb
push
inc
shl
lret
lret
xchg
adc
es
pop
adc
mov
mov
fldcw
adc
int3
jg
mov
ror
gs
jmp
repnz
add
rorb
lret
mov
and
mov
imul
movsb
setge
xchg
push
nop
cmpsb
stos
enter
sub
mov
mov
pop
loopne
int
cmp
mov
lahf
shll
mov
jo
mov
rorl
imul
cli
and
fdivs
push
and
or
jo
pop
cmpsb
mov
mov
divl
rclb
pop
stc
pop
movsl
cmc
in
lahf
test
mov
jecxz
test
jp
inc
out
aam
xorl
jne
pop
xchg
inc
dec
out
cmc
jle
xlat
cmc
bound
or
scas
aas
jl
sbb
aaa
js
clc
push
dec
fistl
add
mov
fbstp
aas
ljmp
icebp
mov
in
les
jg
out
call
jp
lcall
and
stos
add
ds
insb
insl
aad
sub
mov
cmpsl
cltd
sbb
or
test
dec
push
sti
cmp
jg
repz
sub
mov
testl
mov
arpl
outsb
xchg
mov
not
push
jecxz
pop
aaa
dec
pop
add
iret
pop
dec
lock
stos
mov
inc
ja
mov
dec
stos
cli
inc
stc
repz
xchg
mov
push
loop
jp
out
aam
test
hlt
sbb
add
sub
cmp
add
cli
xlat
inc
fs
jg
jns
repz
loope
cmp
sub
aaa
ret
or
andb
xlat
dec
xchg
lea
xlat
add
mov
xlat
sub
lods
push
leave
daa
loope
cld
xchg
xchg
dec
and
invd
dec
call
jp
into
shr
cmp
xchg
in
push
imul
scas
dec
and
stos
fwait
pop
xor
shll
pushf
das
dec
mov
jo
pop
je
and
add
sbb
out
inc
mov
shl
loop
hlt
sub
aas
xor
iret
inc
xchg
out
sub
mov
arpl
ror
dec
mov
fimuls
sub
pop
mov
cs
call
push
movb
testl
cltd
into
lahf
mov
push
mov
or
lret
stos
lret
adc
scas
outsl
sahf
enter
iret
and
mov
xlat
mov
int3
xlat
push
pop
rcrl
mov
daa
xor
insl
ret
or
pop
jl
pop
mov
sbb
out
mov
mov
stos
push
dec
mov
jg
jecxz
mov
pop
shll
adc
mov
adc
jge
js
icebp
out
gs
add
or
imul
leave
mov
arpl
dec
xchg
inc
lcall
ja
mov
in
mov
lods
adc
hlt
xchg
mov
stos
xchg
fmul
jmp
ja
inc
mov
aaa
mov
gs
test
lcall
dec
mov
gs
push
mov
push
inc
in
fcomi
aad
dec
dec
or
and
sarb
sub
pslld
cwtl
dec
outsb
adc
xor
pop
jg
push
cs
mov
jmp
jmp
rcr
xchg
sbb
iret
inc
sub
fmuls
dec
ret
dec
mov
repnz
daa
adc
mov
jl
popf
jnp
push
in
lahf
mov
add
bswap
lds
sahf
sarl
push
shl
sub
push
and
in
xor
xchg
addr16
nop
push
sub
test
das
ss
jle
dec
leave
and
scas
mov
ret
stos
or
sbb
xor
bound
push
push
or
mov
gs
fcompl
es
pop
sbb
mov
inc
push
dec
leave
xor
cli
stc
add
cs
sahf
xchg
icebp
push
cmp
movsl
icebp
adc
fistps
and
jne
jmp
and
sub
rol
mov
lea
cmp
mov
es
jnp
aas
inc
mov
notl
cld
adc
das
jl
add
std
out
rolb
mov
add
dec
mov
cmp
cmc
outsl
push
and
scas
icebp
push
imul
fdiv
mov
ljmp
dec
jle
mov
xchg
jmp
in
icebp
testb
orl
movsl
jno
add
pop
lds
inc
addb
cmp
jb
test
leave
std
inc
inc
or
cwtl
icebp
jae
dec
xchg
fldenv
sbb
test
fucomp
cld
fildll
pop
lock
scas
ret
inc
flds
cmpb
mov
stc
mov
push
in
iret
cmp
punpckldq
mov
pushf
adc
push
cs
add
pop
das
xor
pop
pop
test
cmp
aam
or
xchg
mov
icebp
imul
xor
add
cli
fmulp
push
push
lahf
and
and
pop
fwait
inc
iret
xchg
imul
ret
pop
sub
dec
dec
pop
aaa
stos
aad
xor
xlat
sbb
scas
or
in
jae
test
in
lcall
fstpt
mov
inc
cld
ret
sub
or
sub
jbe
inc
pop
dec
loope
push
add
repz
xor
mov
loope
dec
repnz
call
and
pushf
sti
sub
stc
sti
xor
aad
jb
loop
cld
jne
pop
inc
shl
sub
mov
cmp
into
push
leave
daa
sbb
xor
mov
sub
fisubrs
cmp
push
cs
sub
sbb
and
mov
outsl
lock
punpcklwd
insb
xor
dec
sbb
mov
xchg
jp
sub
sbbb
cmp
push
enter
jle
xlat
xor
jg
mov
mov
mov
jg
addl
dec
jmp
pop
pop
sti
sbb
xor
mov
pop
xchg
mov
and
jbe
pushf
sbb
sbb
adc
mov
popaw
push
popf
mov
in
roll
in
xchg
pushf
outsl
aas
shl
jp
shrb
outsl
fnsave
dec
int
or
xchg
pop
mov
fistpll
loop
int
add
push
and
xchg
int
xchg
cmp
loop
mov
les
popf
in
and
mov
dec
scas
xchg
lds
insb
and
aas
insb
aaa
jl
flds
mov
loop
dec
dec
int3
dec
aas
jmp
cmp
xor
mul
jno
dec
shrb
lods
jne
push
or
jecxz
jnp
add
add
push
cmp
test
mov
shll
xor
lret
dec
adc
cs
ss
pop
loope
push
dec
mov
jo
sub
jecxz
pop
movsb
inc
inc
and
mov
pushf
lret
test
outsl
xchg
or
movsb
mov
lea
and
mov
fs
mov
cwtl
rorb
test
inc
add
lcall
adc
xchg
inc
add
shll
stos
addl
mov
push
jmp
jmp
xchg
stc
ret
ret
jbe
leave
sbb
stc
inc
cmp
movsl
outsl
scas
cltd
cmpsl
add
or
loopne
subb
inc
fwait
das
or
push
xchg
pop
out
aaa
pop
movsb
jmp
clc
push
inc
mov
orb
jmp
dec
scas
sub
pop
xchg
fldl
popl
xchg
mov
ficomps
imul
imul
mov
jp
mov
mov
repz
adc
xchg
or
addr16
int
aam
insb
dec
xchg
jne
lret
pop
sub
scas
inc
sarb
push
rcll
popa
arpl
or
addr16
and
lret
jno
outsl
not
fnstcw
out
inc
and
cmc
dec
leave
sub
insb
push
mov
dec
fld
loopne
or
in
js
dec
push
xchg
push
aam
jmp
and
jmp
inc
dec
rolb
fs
push
or
and
add
jae
adc
inc
sub
mov
sbb
sbb
or
inc
sub
outsl
out
pushf
sub
mov
sahf
lock
adc
int
in
cli
lea
cmp
movsl
dec
loope
pushf
inc
lahf
dec
incb
fwait
push
call
jo
sahf
ret
sbb
lcall
adc
lret
and
inc
andl
mov
cmc
inc
cltd
loope
cltd
or
std
cmpsl
sarb
sbb
lods
mov
or
out
shl
shr
loop
arpl
loop
fs
out
sti
xorb
or
into
pop
xor
xchg
shll
cli
sub
adcl
push
jno
loope
into
push
mov
cmpb
push
add
insb
sub
push
adc
cli
jnp
sahf
jge
xchg
and
pusha
aas
repnz
daa
movsl
xrelease
mov
mov
pop
roll
mov
loop
loop
pop
pop
aad
adc
pop
fwait
sub
shrb
push
xor
addr16
and
adc
push
or
aas
insb
cltd
jno
fcmovu
push
nop
movsb
outsl
insl
sub
je
aad
and
outsb
popa
insl
or
insb
ror
push
aam
jmp
int3
cltd
mov
not
loopne
pop
or
and
ss
aad
int
clc
mov
fisubl
pop
data16
xchg
jge
add
xchg
dec
push
stos
lret
leave
push
lcall
adc
and
imul
and
push
test
pop
popf
mov
mov
pop
sti
push
push
push
stc
dec
movsl
test
in
inc
mov
push
outsb
lcall
adc
jl
sub
mov
nop
ljmp
jge
sbb
fmuls
sbb
jno
add
cli
clc
mov
mov
inc
jmp
pop
xor
dec
ds
mov
fidivl
add
jecxz
pusha
add
push
into
ror
and
or
aad
nop
repnz
xor
push
div
lahf
lea
add
scas
dec
inc
ret
mov
pop
jne
hlt
dec
ja
cs
mov
xchg
loopne
pop
js
out
dec
insb
push
mov
shrb
jne
roll
xchg
scas
hlt
xchg
jge
jecxz
xor
in
jo
ret
lahf
test
mov
arpl
xchg
enter
dec
jbe
xchg
jmp
dec
mov
ss
lods
int3
hlt
rol
push
or
xchg
fidivs
into
and
popa
lods
fnstenv
lahf
and
pop
ljmp
inc
mov
mov
push
ret
dec
push
out
sub
mov
add
push
ret
fwait
lods
inc
xor
stos
dec
out
cwtl
pop
test
jmp
push
outsl
push
adcl
rcrb
add
pop
test
ds
nop
out
xor
in
aaa
sti
test
push
add
pushf
mov
adc
orb
pop
xor
cmc
ss
add
sahf
stc
sub
pop
mov
inc
imul
push
aam
mov
push
addb
js
jb
dec
cmp
cmc
aad
mov
mov
rclb
adc
jle
xchg
lcall
jg
and
push
rol
cmp
add
js
stc
pop
push
jno
je
out
subb
lcall
int
dec
add
xor
enter
cld
lret
xor
xorl
pop
jmp
fs
mov
adc
mov
sbb
pop
sbb
repnz
jns
inc
sahf
push
repz
scas
jnp
push
lea
mov
cs
repnz
cmp
iret
or
adc
add
out
dec
lds
mov
out
jno
mov
mov
jae
shll
push
inc
jecxz
into
pusha
adc
add
push
xor
sti
fwait
jo
dec
ss
xor
cmpsb
push
xchg
jg,pn
outsb
sub
xor
dec
je
testl
out
or
add
push
sti
gs
cld
pop
js
pop
and
cmp
dec
dec
shlb
xor
pushf
dec
xorl
mov
push
dec
mov
popf
jge
xchg
mov
ret
xor
push
lahf
cs
xor
jp
mov
add
add
outsl
xchg
xlat
pushf
or
dec
sbb
leave
push
addr16
mov
adc
dec
inc
lea
pop
lahf
loop
pop
arpl
cmpsb
mov
shlb
pusha
dec
xor
sbb
jmp
jmp
test
push
movsb
cmpsl
xor
and
xor
aas
sub
loop
fcoms
in
mov
or
adc
mov
cld
jns
cmp
jmp
and
rcll
mov
sbb
jmp
mov
aad
push
jge
ds
stc
jnp
and
movsb
or
inc
sub
stos
fimuls
mov
loopne
mov
mov
int
mov
fildll
call
push
xchg
and
push
ds
leave
jge
sub
gs
movsb
mov
loop
repz
hlt
push
and
call
push
aad
jecxz
or
dec
mov
mov
testb
inc
out
or
and
push
mov
inc
popf
out
hlt
iret
mov
rorb
rorl
or
jns
aam
ret
lcall
pushf
xchg
xrelease
mov
pop
mulb
movsb
pop
lret
jg
scas
addr16
das
cli
fwait
hlt
push
out
repnz
cmp
mov
shlb
xchg
sbb
pop
arpl
iret
mov
cli
int
mov
add
and
pop
out
testl
lods
lds
fldt
lods
sar
dec
scas
mov
xor
dec
popf
pop
cmc
mov
dec
in
repz
test
push
push
adc
cmpsl
mov
repz
push
cld
adc
push
xor
inc
popf
std
notb
mov
lods
scas
add
daa
add
sahf
jno
mov
sbb
stos
xchg
ficomps
imul
jmp
dec
add
adc
xor
xchg
mov
add
ds
rorb
and
filds
cmp
adc
cltd
xor
rorb
and
adc
lcall
ret
iret
mov
jecxz
out
rcrb
cmp
xchg
jb
inc
and
clc
insl
inc
fimull
stc
loopne
and
gs
push
bound
mov
scas
test
jl
inc
insl
test
je
lea
icebp
scas
mov
inc
scas
jge
xor
mov
ret
cwtl
pop
shlb
cmp
xchg
push
mov
aam
pop
add
lea
cs
sub
mov
dec
jb,pn
fsubl
sub
adc
lock
pop
pop
out
jae
in
push
jbe
mov
add
icebp
mov
mov
pop
xor
sub
inc
sbb
push
sbb
sbb
jno
and
aam
adc
jmp
mov
cli
jb
cltd
pop
xor
mov
and
add
fdivl
sub
out
jmp
and
fs
shlb
call
xor
xor
jbe
loopne
push
scas
sub
orb
sbb
icebp
mov
lock
popa
lahf
adc
mov
ss
or
and
insb
lock
movsb
jle
out
cwtl
out
test
xor
das
inc
push
out
inc
nop
movsl
call
pop
ljmp
mov
arpl
bound
div
hlt
shrl
sahf
ret
ds
ds
lock
inc
lahf
jecxz
mov
xchg
fcoms
and
aam
outsl
adc
ficoms
movsb
mov
xchg
ss
in
fs
xchg
jge
sub
mov
mov
iret
pop
call
bound
adc
mov
mov
add
mov
add
sbb
lahf
jge
mov
movsl
lods
mov
cs
loope
cwtl
jbe
sets
jmp
testb
or
sub
iret
pop
scas
stc
leave
dec
cli
push
xchg
cmp
fcomp
inc
mov
sbb
sbb
jg
sub
jmp
inc
adc
lock
pop
mov
jge
popf
inc
push
push
test
cmp
stc
insb
popf
sbb
mov
xchg
mov
jecxz
aad
lahf
xor
dec
xchg
cmp
aas
adc
xor
gs
or
sbb
icebp
test
cltd
mov
dec
mov
or
aad
cltd
je
push
hlt
xor
inc
js
jno
mov
adc
jno
inc
jae
mov
in
dec
mov
cmc
pop
dec
push
stos
xchg
push
dec
mov
jecxz
mov
nop
dec
js
push
adc
jns
jge
mov
orb
pop
mov
mov
or
cmp
adc
inc
shll
jbe
cli
and
pop
sahf
cmp
sub
das
cli
mov
psubw
cld
inc
inc
push
movsb
loopne
sbb
stc
mov
add
aad
aad
or
arpl
int
push
xor
adc
sbb
push
jecxz
dec
mov
popf
rcrl
inc
fisubl
push
mov
push
add
jl
add
les
mov
imul
pop
mov
cli
shll
outsb
mov
xchg
mov
es
out
cmpb
lock
jmp
insl
mov
arpl
xor
pop
fs
xor
test
sbb
mov
jecxz
in
ret
idivl
add
fnsave
bound
mov
or
sarl
dec
cmp
fs
into
add
mov
dec
test
or
fstpt
and
dec
adc
mov
push
add
jg
or
mov
mov
cmc
cmpsl
mov
test
fiaddl
pop
jmp
dec
test
sbb
and
and
xor
or
outsl
xor
push
mov
pop
out
sbb
addr16
cmpsl
sub
mov
inc
cli
adc
mov
jmp
inc
pop
fidivs
aas
ret
xchg
lods
cs
xchg
icebp
and
shll
and
dec
lock
ds
sub
mov
sbb
jl
sub
mov
xor
sub
cmp
clc
dec
dec
sbb
dec
je
andb
jne
xchg
or
addr16
stc
mov
mov
jge
out
mov
dec
add
aad
inc
fwait
lds
mov
cli
fs
mov
xchg
jb
aam
jle
cwtl
adc
push
popf
jb
scas
cltd
cmp
cltd
iret
mov
loope
xchg
mov
jmp
mov
pop
mov
stc
add
mov
iret
mov
push
pop
outsl
sub
mov
ljmp
lods
inc
cmp
sbb
shlb
mov
jmp
pop
rcll
inc
lret
mov
sub
gs
adc
shr
jg
cli
mov
mov
pop
test
nop
xchg
adc
stos
mov
xor
sbb
outsb
jne
shrb
mov
inc
push
mov
jmp
xor
jl
xor
inc
leave
stc
push
dec
dec
jns
cld
mov
sbb
inc
mov
popa
xor
cltd
cld
stc
push
mov
push
out
jbe
in
inc
jb
jp
fstps
clc
gs
aad
add
inc
adc
shrl
fisubs
mov
stos
inc
lret
xchg
push
push
inc
sbbb
fistpl
loop
jl
and
or
andl
sbb
add
and
pop
jecxz
dec
jecxz
add
push
jbe
push
pushf
enter
fsub
mov
clc
push
xor
xchg
enter
or
ljmp
in
loop
jo
les
inc
test
je
cwtl
sbb
out
pop
dec
cmp
stc
xchg
iret
pop
daa
inc
xor
std
mov
hlt
cmpb
sbb
stc
movsl
clc
lcall
clc
sbb
lods
inc
ljmp
out
mov
cmp
int3
in
add
or
xor
or
sub
aad
cmc
sub
cmc
sub
inc
sub
lods
insb
cltd
fidivl
mov
aaa
repz
scas
mov
inc
in
ss
rcr
jnp
es
fistl
rorl
ds
push
or
and
inc
out
mov
inc
nop
mull
stc
int3
xor
leave
mov
es
adc
mov
cmp
leave
ds
dec
lods
and
bswap
dec
lret
insl
inc
subl
movsl
mov
push
imul
pop
popf
xchg
insb
inc
pop
inc
cmp
sub
jmp
aas
add
jo
or
xor
mov
lea
jns
imul
loop
sub
jnp
mov
adc
ljmp
cmp
or
or
pop
push
xchg
sbb
or
cmp
cmpsl
int3
jmp
cmp
mov
xor
jmp
dec
imul
imul
jle
xor
ret
add
push
push
lods
leave
adc
cmp
ja
lock
cs
syscall
dec
sbb
mov
ss
mov
sbb
enter
popf
mov
es
mov
ja
inc
inc
xchg
test
ret
sub
mov
sahf
fadds
dec
icebp
adc
movsl
and
popa
or
out
stos
cmp
push
sbb
fimuls
pusha
popf
fwait
jns
lock
icebp
xchg
mov
popf
cmp
sarl
cmp
ror
pop
mov
cmp
mov
cmpsl
fildll
je
fidivrs
dec
arpl
cmpsb
sti
inc
sub
fidivl
pop
mov
mov
push
fdiv
sbb
in
sub
mov
inc
mov
cmp
push
cmp
in
pop
lahf
sti
out
xchg
mov
xor
out
dec
adc
mov
popf
scas
cmp
test
out
mov
hlt
jle
fsubrs
ljmp
imulb
jnp
add
mov
sub
cli
bound
mov
rcrb
loop
repz
dec
add
cli
setbe
nop
or
dec
xchg
fwait
ud0
aam
add
xchg
adc
mov
push
stos
jne
add
cmp
into
jl
sbb
push
ret
pop
jecxz
and
dec
nop
sti
xor
imul
mov
inc
out
es
bnd
sub
xchg
sarb
ds
addb
lret
cs
outsb
adc
hlt
inc
call
add
in
fwait
add
pop
movsb
xchg
push
faddl
sub
in
or
shll
std
std
int
testb
push
mov
jle
lock
rcrb
dec
sub
sbb
mov
stc
popa
adc
or
push
dec
in
adc
out
sbb
pusha
or
je
push
inc
repnz
xor
jns
push
test
lret
mov
adc
jns
mov
mov
nop
jb,pt
js
lret
lret
xchg
adc
stc
inc
dec
out
mov
xor
xor
stos
imul
dec
add
lods
inc
inc
cltd
inc
add
cs
dec
cmp
stos
ja
out
arpl
ret
mov
test
scas
outsb
lcall
mov
cmp
dec
cmp
ficoms
scas
test
mov
and
shll
sbb
leave
xchg
mov
dec
push
pusha
inc
mov
cmc
dec
fs
mov
push
push
xchg
inc
mov
ja
sub
dec
gs
sub
inc
xor
rcl
push
cmp
cmpsb
jmp
mov
das
sub
bound
out
arpl
mov
iret
inc
jmp
xor
and
ljmp
sbb
pusha
clc
push
mov
fdivs
inc
lret
insb
or
shrb
and
xchg
pop
xor
adc
xor
das
add
lods
imul
mov
mov
out
push
cmp
and
in
jecxz
jbe
enter
and
dec
adc
lret
sbb
sub
pop
pop
mov
and
stc
push
xchg
xor
mov
mov
fadds
pop
or
dec
cmp
mov
mov
fcmovbe
mov
jae
pop
jmp
sti
dec
inc
imul
sti
inc
sarb
fwait
jmp
mov
cmpsb
mov
das
cld
inc
in
frstor
jg
inc
out
cmpsb
xchg
or
dec
pop
push
jecxz
sti
lea
lea
mov
jbe
sub
pop
inc
dec
imul
pop
std
lock
mov
lcall
in
xchg
dec
test
add
arpl
dec
imull
call
dec
adc
jg
orl
cmp
mov
jmp
fiadds
ss
adcb
test
sub
ror
push
in
pop
sub
sti
repnz
dec
mov
cltd
pop
movsl
movsb
call
fsubrl
adc
aad
call
push
inc
xor
dec
or
sbb
adc
cmp
pushf
lods
cmp
push
jb
sub
ret
dec
add
fldcw
pusha
pop
jle
lock
mov
push
aas
out
movd
rcrb
cmc
sbb
push
or
add
mov
mov
pop
cmp
jmp
push
inc
subb
call
jnp
inc
xor
gs
jge
cmpsl
fldt
nop
shrb
jno
in
xor
enter
icebp
lds
movsb
rolb
inc
fisttpll
sbb
mov
xor
stc
rcl
outsl
shrb
fcoml
adc
sbb
lds
dec
mov
sub
jb
gs
inc
bound
pop
scas
xchg
dec
nop
pop
mov
pop
in
or
add
add
test
loopne
mov
cltd
mov
sub
idivb
inc
subl
sbb
cmp
add
push
lcall
sbb
xchg
negb
dec
ljmp
mov
sub
push
mov
pop
pop
sbb
fs
ja
pop
cmp
push
mov
push
icebp
les
xor
mov
std
adc
pop
addr16
push
cmpsb
js
inc
mov
jmp
adc
inc
test
lea
repz
repnz
adc
push
rcrb
stc
or
dec
inc
adc
xor
test
js
xor
jne
jnp
bound
lds
popf
lret
frstor
xor
repnz
dec
xchg
ret
cmp
lret
mov
inc
mov
subl
cmpsb
sub
out
xchg
sbb
xor
xchg
hlt
xchg
repnz
pop
dec
mov
outsb
sbb
movsb
mov
adc
xlat
xchg
jnp
movsl
and
dec
mov
add
fwait
iret
and
notl
cli
in
push
xlat
lcall
inc
xor
sub
aam
icebp
lock
add
sub
stos
orl
cmp
mov
dec
fnstenv
out
fldt
dec
push
jns
push
test
stc
arpl
outsb
aas
test
inc
push
fistpl
sub
push
lahf
and
movsb
adc
popf
pop
aas
push
ret
mov
ret
xchg
lcall
dec
jmp
mov
movsb
dec
push
ss
out
mov
mov
je
xor
mov
hlt
sarb
mov
imull
jmp
imul
ficompl
pop
jns
dec
adc
xchg
sbb
mov
add
mov
cmp
ljmp
mov
rorb
jmp
sbb
dec
jge
sbb
fcompl
shrl
cltd
popf
aas
int
mov
jmp
sub
testl
mov
or
sbb
xor
movsb
fnstenv
imul
and
push
push
or
test
pop
movsl
hlt
fsubrp
push
adc
neg
cld
movsl
cli
xor
loope
daa
cmpsb
outsb
into
cli
ds
lahf
repz
popf
mov
cmp
xchg
add
cli
xchg
popa
pop
adc
pop
mov
or
pop
sub
cs
inc
mov
insb
fcmovu
mov
pop
mov
sbb
cs
jb
scas
or
jb
xchg
lcall
scas
mov
mov
add
mov
call
cmp
out
push
sbb
out
inc
jecxz
aam
sub
addr16
scas
sub
or
sbb
inc
inc
aam
jne
test
lds
cld
jnp
into
fnstsw
fimull
mov
push
les
fadds
xor
push
stc
push
or
pop
movsl
mov
aaa
inc
addr16
mov
push
jmp
insb
test
xchg
fldl
int3
push
outsl
push
movsb
shr
shll
mov
pop
or
pop
jo
xchg
sbb
and
pop
ss
cmp
mov
add
loope
sbb
das
push
pop
inc
sahf
aas
xchg
in
scas
cmp
mov
std
adc
inc
or
add
cmpsl
out
in
push
loope
imul
imul
adc
cmp
or
dec
xchg
ret
outsb
aam
sub
dec
lret
outsl
pop
adc
arpl
cld
pop
xor
and
shrl
pop
mov
xchg
addr16
push
add
push
push
mov
inc
lea
arpl
inc
and
ljmp
mov
mov
xchg
xchg
cmp
ficompl
lahf
pop
inc
shll
loope
call
adcb
or
jbe
movsl
aad
daa
dec
or
jns
pop
loop
movsl
mov
xor
cltd
sahf
ds
les
lods
cmp
mov
repnz
mov
dec
cltd
fcmove
scas
jne
sahf
mov
sub
push
and
outsb
or
mov
cmp
repnz
mov
push
mov
sarb
push
scas
and
shll
sub
and
cld
mov
jo
mov
add
jge
aam
pop
mov
and
fildll
js
sbb
inc
pop
dec
push
pop
sahf
fs
aad
xor
sub
dec
inc
in
or
testl
pop
mov
xchg
popa
fdivrl
push
popa
sbb
push
inc
mov
out
testl
fmull
adc
push
out
push
or
xchg
mov
pop
push
dec
idivl
insl
int3
leave
push
testl
xor
outsl
and
jns
mov
xorb
fcmovne
cmpsb
and
mov
mov
shlb
add
sbb
push
cmp
fwait
jnp
ljmp
pop
cmc
rorl
ds
stos
rorb
mov
roll
mov
push
cmp
and
mull
xor
dec
mov
push
pop
pop
cmp
dec
faddl
adc
push
shll
mov
push
pop
mov
ljmp
cltd
rol
in
leave
imul
fisubs
scas
push
jbe
jnp
mov
out
repnz
imul
xchg
dec
cmpsl
pushf
jo
push
nop
push
mov
int
call
ljmp
nop
mov
push
sub
dec
or
dec
mov
iret
sti
lahf
and
sbb
fimuls
clc
dec
lahf
mov
jp
cmpsb
ljmp
mov
push
sub
andb
or
xor
adc
cmc
dec
cmp
aad
imul
mov
pop
and
sub
xor
or
dec
ss
call
popl
push
in
insb
popa
data16
jp
outsl
arpl
push
aad
sub
sub
mov
inc
mov
xor
roll
jp
jle
push
pusha
in
dec
mov
das
inc
fidivrl
fidivs
hlt
mull
mov
insb
insl
push
test
mov
int3
xchg
ficoms
mov
enter
push
out
sti
jecxz
outsl
push
aas
ret
xor
pop
mov
sbb
andl
aaa
xor
xchg
test
imul
push
leave
push
sti
movsb
jmp
clc
and
cli
push
xor
dec
xchg
icebp
mov
jns
ss
pop
xor
xor
pop
jo
fisubs
je
xchg
mov
fsubrp
arpl
stos
movb
in
test
rolb
fwait
aam
adc
jg
add
xchg
aas
insl
nop
sti
movsl
dec
popl
cmp
scas
jne
rorb
sub
push
fstp
mov
mov
xchg
insb
pop
push
insl
sbb
test
into
and
orb
cmp
pop
pop
int
jmp
cld
jns
aad
loop
mov
cmp
in
adc
rclb
mov
lret
loop
shll
xchg
xlat
loope
push
cmpsl
mov
aad
push
inc
add
iret
stc
jp
jge
repz
int3
and
arpl
jecxz
imul
ljmp
cltd
sti
fwait
pop
push
repnz
jl
dec
out
add
test
aam
cmpsl
add
pop
sub
lcall
int
in
in
xchg
fcoml
mov
xchg
mov
ds
and
jp
push
int
ljmp
push
mov
mov
jmp
and
out
out
gs
enter
rclb
and
movsl
ret
mov
pop
mov
cmp
mov
and
cltd
adc
or
dec
fadd
jno
jle
or
dec
mov
pop
inc
out
dec
sub
xor
aad
test
movl
inc
fimull
dec
mov
in
scas
jle
rorl
push
cli
shl
jmp
mov
xchg
cmpsl
lcall
outsl
cmpsb
dec
xchg
xlat
adc
outsb
sbb
enter
push
xor
mov
ror
adc
xchg
shll
das
mov
pop
sbb
insb
jg
ja
shrl
mov
pushf
outsl
in
mov
mov
jb
lea
xor
mov
inc
int
shll
movsb
fcmovu
ja
sbb
mov
lods
sub
in
negl
or
sarb
cwtl
pop
int3
mov
lcall
arpl
pop
jge
imul
rcr
movsl
shl
mov
adc
in
scas
rorl
dec
pop
lret
add
pusha
je
jmp
inc
push
pop
addr16
mov
xchg
mov
sbb
pop
adc
ljmp
cmp
pop
mov
int3
jb
cli
into
adc
shlb
push
int3
dec
sar
or
mov
mov
pop
jmp
dec
fisubs
fmul
jnp
pop
icebp
add
jo
mov
lret
fnstsw
loopne
sub
sahf
leave
in
pop
push
dec
push
popa
push
jo
cmp
xchg
movups
fiaddl
mov
iret
mov
push
pop
xchg
push
scas
out
adc
insl
sbb
adc
arpl
ja
lcall
mov
dec
adc
add
add
shll
mov
sub
adc
mov
mov
dec
arpl
dec
movsl
cmpsl
in
pop
movsb
sbb
arpl
scas
pop
movsl
arpl
insb
jl
lods
int3
arpl
repnz
stos
jmp
mov
sahf
cli
pushf
movsl
mov
fmuls
push
repnz
stos
mov
pop
inc
mov
shrb
shl
insb
movsl
inc
dec
mov
dec
lods
jp
js
xchg
scas
orb
xchg
xchg
dec
xor
dec
mov
aaa
rorb
addr16
dec
mov
push
push
fdivrl
inc
fwait
cltd
clc
imul
cli
pushf
jecxz
imul
push
das
cld
lahf
clc
adc
mov
fwait
lret
cwtl
pop
ffreep
movsb
or
inc
mov
pop
xchg
leave
jns
cmpsl
jmp
xor
jns
jno
adc
xor
repnz
mov
mov
cli
lods
inc
mov
ficoms
xchg
sub
aas
adc
jg
pop
int3
test
or
pop
jmp
jne
mov
test
arpl
pop
addr16
push
xlat
push
imul
xor
xlat
push
gs
push
gs
ss
movsl
pop
movsl
mov
push
xor
repnz
sub
add
daa
add
cmp
add
cmp
sbb
aas
add
cmp
sbb
inc
add
cmp
add
cmp
add
cmp
add
cmp
cli
cmp
daa
cmp
sub
sub
push
aas
cli
add
loopne
call
dec
pop
int3
or
dec
decb
push
jmp
sti
imul
mov
enter
sahf
int
inc
xor
dec
repnz
je
dec
push
dec
and
arpl
faddl
cmp
jmp
xchg
out
popa
cmpb
out
pop
sub
pop
or
out
inc
jle
add
push
xlat
mov
stos
je
pop
mov
icebp
fstpt
mov
popa
mov
jge
push
cmp
clc
in
pop
adc
rcl
in
sbb
sbb
cmp
outsl
aaa
xchg
ss
sbb
daa
push
ljmp
dec
cmp
xor
pop
pop
add
aam
pusha
mov
mov
push
into
gs
rcll
push
ficoml
jp
out
stc
gs
pop
xchg
aas
add
enter
pop
sbb
bound
dec
jp
jp
inc
mov
and
lret
std
mov
lret
add
pop
jp
sub
xchg
shld
xor
es
mov
xchg
inc
push
hlt
mov
ficompl
rcl
inc
cld
popf
fwait
notb
arpl
mov
adc
or
call
xchg
or
inc
movsb
mov
cmpsb
mov
les
mov
popl
xchg
dec
aaa
adc
arpl
mov
dec
cmc
fwait
sub
lds
mov
daa
sbb
pop
jecxz
mov
fcmovb
pop
repnz
push
push
jecxz
push
daa
push
sbb
jb
out
pop
xchg
mov
inc
es
out
cmpsb
mov
out
cmp
mov
stos
mov
aad
lea
mov
scas
lds
jge
fiadds
movsl
addr16
test
sbb
dec
push
lods
mov
stos
mov
insl
outsb
mov
arpl
adc
push
mov
mov
lret
inc
adc
out
insb
or
les
push
mov
push
pop
xor
xlat
in
mov
push
mov
xchg
push
or
rcrb
fcomip
call
mov
insb
pop
or
aad
mov
cltd
std
push
dec
mov
mov
sub
or
xor
int3
stc
jp
mov
xchg
js
out
mov
icebp
testl
dec
cmp
insb
jg
popa
mov
in
pop
lods
push
stos
inc
and
sub
outsb
ss
add
ja
push
mov
lock
leave
lds
add
push
aaa
fsub
es
add
shl
mov
in
xor
xchg
add
sar
stos
push
push
dec
arpl
push
jp
std
pop
orl
xchg
dec
cmp
cmp
jno
cmp
loopne
cmp
loopne
inc
loope
into
ds
jmp
cs
push
adc
lret
repnz
sbb
aas
push
sbb
insl
leave
popa
add
or
sarb
psubusw
add
roll
add
flds
fcomip
cmp
mov
aaa
bound
sti
jnp
shl
push
ret
push
push
adc
mov
imul
fdivs
in
cmc
mov
jg
mov
cmpsl
enter
pushf
add
dec
adc
fwait
push
ret
loopne
cltd
pop
call
xchg
mov
int3
dec
pop
test
adc
movsl
lcall
dec
dec
pop
std
xchg
test
push
dec
mov
arpl
stc
fistl
push
xchg
and
inc
xchg
stos
sub
std
xchg
data16
xchg
jmp
orl
fdivrl
sahf
mov
iret
cltd
fbld
add
cmp
iret
adc
cmpsl
pop
in
mov
dec
xchg
and
lcall
imul
mov
xor
xchg
in
aam
jb
cwtl
inc
mov
push
mov
inc
push
data16
in
xor
repnz
insb
fnsave
popf
add
outsl
sahf
push
adc
dec
mov
xchg
jo
jbe
aas
add
mov
mov
push
mov
mov
push
in
and
pop
or
std
out
jbe
test
push
imul
lock
imul
mov
sbb
ja
mov
fcmovnbe
mov
ja
orb
dec
jnp
dec
cmp
es
push
movsl
adc
ljmp
mov
lcall
inc
clc
nop
inc
jecxz
div
dec
dec
mov
xchg
mov
push
inc
ficompl
enter
pop
stos
cmpsl
dec
adcb
int
and
lds
fs
das
arpl
into
mov
dec
adc
push
lret
arpl
pop
pop
sub
push
lods
jmp
cwtl
mov
mov
adc
or
cmpsb
jb
cmpsl
or
jmp
popf
sbb
xlat
cltd
mov
cli
pop
jne
bswap
or
andl
fdiv
gs
loope
in
and
mov
lret
cmp
ficoml
cli
stc
clc
and
add
in
jns
adc
push
mov
adcl
test
out
and
clc
imul
pop
addr16
add
inc
mov
in
call
xchg
add
pop
cld
call
lock
add
jbe
das
and
pop
addb
push
xor
loop
into
add
push
inc
push
dec
jecxz
mov
arpl
push
arpl
out
jno
out
mov
fxch
xchg
mov
ret
mov
lahf
popa
dec
rorl
dec
dec
push
adc
mov
popa
sbb
add
mov
or
cmpsl
jns
mov
mov
iret
inc
mov
add
dec
mov
fs
mov
int3
pop
mov
xchg
jle
es
and
inc
and
dec
popl
loop
nop
or
adc
int3
mov
cmp
loopne
cmc
sbbb
stos
ljmp
push
pandn
decl
mov
out
or
in
fsubs
push
cmp
outsl
stos
cmc
dec
push
jne
mov
jmp
sub
dec
push
xchg
sub
or
push
enter
test
scas
mov
mov
jge
cmp
test
and
xchg
adc
pushf
je
mov
popf
fildll
mov
mov
xor
fcomip
inc
loop
ds
xchg
mov
les
push
aad
inc
sub
fcom
movd
dec
pop
mov
shrb
add
or
fcoml
and
push
test
ret
or
cmp
idivl
lret
mov
lahf
loope
icebp
mov
cli
movsb
xchg
xchg
push
push
pushf
xor
shlb
in
je
push
dec
push
out
lret
mov
mov
pop
int
jne
js
pop
lret
jo
mov
icebp
mov
popf
stos
push
rclb
in
adc
pop
outsl
daa
dec
inc
push
out
xchg
sahf
movsb
mov
lahf
rol
fisttps
cltd
rcl
repnz
fistpll
sarb
andl
xchg
cmpsb
mov
data16
sub
push
mov
insb
outsb
in
popf
mov
mov
xchg
dec
pushf
xchg
push
scas
std
movsb
pop
xchg
movsl
push
push
loop
addl
shl
ds
mov
add
mov
test
pusha
sbb
mov
inc
jg
mov
sub
dec
enter
add
fsubrp
mov
cmpsb
aaa
mov
js
icebp
in
popa
aam
inc
std
dec
sub
inc
js
xchg
test
xor
xor
fldl
repnz
xchg
js
jmp
or
cmpsb
jecxz
adc
jbe
push
push
jns
push
outsl
mov
sbb
icebp
pop
fimull
mov
xor
sub
lahf
ret
movsl
xor
cmp
mov
jge
or
dec
xor
outsb
lret
arpl
fimull
orb
dec
shll
dec
out
inc
imul
xchg
adc
lret
xor
repz
in
stos
inc
jo
xchg
pop
push
sahf
lcall
jnp
cmpsb
mov
iret
ss
jne
out
mov
loopne
sbb
xchg
test
mov
mov
pop
lret
sub
sti
jg
stc
jns
pop
imul
jp
sbb
xor
xchg
or
dec
sub
sbb
mov
pop
cs
iret
add
data16
aas
mov
insb
jbe
jg
outsb
mov
ljmp
sbb
dec
xchg
push
sbb
ljmp
leave
cmpsl
jae
inc
push
stos
and
adc
sbb
jecxz
stos
call
scas
jno
fdivrl
and
mov
stos
cmp
mov
je
std
mov
shlb
add
jne
lea
int
arpl
mov
xor
dec
pop
lcall
imul
pop
iret
into
mov
sahf
fs
gs
fisubs
pop
scas
xor
inc
in
mov
sbb
fisttps
fs
addr16
aam
cmpsl
rcrb
pusha
push
out
sarb
imul
dec
add
ret
lods
data16
cmp
pushf
aam
int
arpl
mov
stc
sub
out
dec
cmp
flds
sbb
test
pop
jb
adc
js
jle
lahf
popa
pop
enter
or
adc
mov
int
imul
fs
xchg
dec
push
sbb
out
aaa
push
mov
stos
ljmp
clc
push
aaa
fisttpl
cmp
inc
je
movsl
jg
gs
lods
in
mov
or
fimuls
pop
stos
mov
ss
push
sarl
imul
xchg
pop
enter
ja
pusha
add
mov
add
orb
mov
loop
out
bound
adc
iret
out
outsl
in
push
cmp
stos
adc
and
in
sarb
outsl
add
cwtl
push
push
or
sbb
iret
cli
jg
jmp
ljmp
adc
push
cmc
mov
adc
inc
xor
imul
ficomps
cmp
xchg
pop
inc
push
push
push
inc
rcrl
jg
pop
outsb
mov
rcl
add
push
fimuls
sahf
ret
jmp
mov
into
mov
notb
sbb
cmp
xchg
iret
mov
mov
rcrl
cli
mov
mov
sub
int
popa
cmpsb
les
insb
cltd
icebp
mov
xchg
in
mov
or
inc
sub
xchg
testl
loop
jne
adc
jg
loopne
cmp
ds
paddb
hlt
faddl
mov
sbb
aas
scas
push
jge
stos
in
sub
decl
dec
mov
push
and
inc
std
ss
outsb
imul
xlat
adc
lret
jge
inc
push
and
inc
dec
fsubrp
jbe
jne
jnp
mov
sbb
in
sbb
jmp
clc
lret
mov
icebp
cmpsb
repnz
push
jnp
inc
shlb
sub
xchg
and
je
push
mov
test
ljmp
sub
xor
rclb
fwait
xchg
and
stos
rorb
inc
sbb
xchg
dec
mov
int3
push
cmp
enter
jp
imul
cmp
jle
test
inc
pop
xchg
arpl
call
dec
and
inc
xchg
adc
dec
ficomps
bnd
and
addb
dec
add
repz
push
jns
cmp
or
cmp
out
cmp
pop
test
jmp
lock
add
mov
or
fisubrs
in
xchg
mov
sbb
xchg
adc
and
lret
insb
adc
push
mov
mov
cmpsl
mov
mov
enter
int3
mov
sub
jo
ss
pop
fstpt
rcrb
std
fnsetpm(287
jle
inc
in
insb
mov
in
lahf
loope
cli
std
mov
int3
or
mov
jno
cmp
je
stos
addl
fs
push
or
sub
dec
sti
enter
or
and
and
or
loope
in
out
mov
push
in
and
cs
pop
and
jmp
cli
cmp
ret
icebp
out
xchg
addr16
xor
cmp
ret
jae
xchg
lret
cmp
hlt
add
sahf
int
mov
lods
sub
popl
cltd
xor
add
dec
sbb
pop
outsb
not
sub
jae
sahf
lret
xor
mov
pushf
jno
stc
mov
cli
push
push
mov
mov
push
dec
add
sti
sbb
xchg
aaa
push
xchg
inc
rorl
cmp
fdivs
mov
dec
test
outsb
inc
xchg
mov
cmp
bound
push
mov
in
popa
pop
mov
mov
adc
cs
ret
adc
xor
xor
cs
inc
jg
jmp
cmp
mov
ret
pop
dec
lea
cmp
jb
inc
and
sarl
enter
mov
iret
js
icebp
js
mov
cwtl
push
roll
sahf
cltd
xor
das
arpl
adc
jle
xchg
notb
rol
in
out
clc
mov
dec
mov
inc
push
pusha
in
mov
xor
cmp
test
jecxz
push
ss
jecxz
add
mov
mov
out
pop
test
dec
fbstp
xchg
mov
leave
stos
mov
adc
xchg
jb
fs
pop
ds
popa
icebp
movsb
fsubr
into
pop
inc
xor
adcl
outsb
inc
or
sbb
jae
pop
sarl
inc
push
cmp
mulb
fsubs
ficompl
test
jne
bound
pushf
sbb
movsl
xchg
add
or
jmp
mull
xchg
fs
xor
fsubrs
sbb
bound
imul
in
arpl
jae
xchg
out
cmp
and
xchg
fcoms
pop
and
add
cwtl
and
data16
sub
jmp
or
add
loopne
dec
pop
sti
inc
aad
mov
scas
lock
ljmp
pop
dec
mov
cmp
lcall
sub
stos
adc
shlb
push
xchg
je
jmp
movsb
dec
mov
push
pop
mov
sarb
push
ss
cmp
popl
ljmp
and
popa
mov
pop
add
dec
pmaxub
js
xchg
mov
inc
int3
mov
test
inc
stc
pop
push
adcl
fwait
addr16
xor
cld
xor
mov
ja
adc
ret
not
jl
gs
aas
in
out
inc
jmp
cmp
xchg
test
js
les
scas
ljmp
add
mov
dec
jns
pusha
sbb
jnp
jge
jl
inc
jle
or
mov
stos
stos
pop
ss
sbbb
mov
dec
or
shrl
fsts
jo
xor
pushf
fsubrp
and
loopne
xchg
inc
rorl
xor
repnz
lret
outsl
pushf
cld
nop
mulb
sbb
mov
inc
cmpsb
int3
push
icebp
or
icebp
cmc
push
test
add
xchg
lret
pop
bound
insl
addr16
xchg
fwait
pop
rcrl
rcr
dec
sub
jnp
repnz
mov
fimull
decb
mov
push
sub
mov
adc
xchg
addl
aaa
movsl
or
add
xor
lods
sbb
pop
xlat
add
lret
test
cmp
jg
mov
xchg
popf
outsl
movsl
push
and
adc
mov
out
xor
or
push
cmp
in
inc
mov
jg
push
jle
dec
stos
outsl
add
stc
hlt
leave
pop
hlt
jmp
pop
imul
sub
fs
or
call
push
xor
lret
mov
push
mov
mov
xchg
add
pop
dec
xor
xchg
pop
inc
aas
mov
outsl
fisttps
idivl
xlat
xor
sti
nop
jne
push
xlat
test
and
add
push
int3
inc
mov
leave
dec
out
arpl
icebp
mov
in
pusha
int
or
xchg
sysenter
mov
pop
outsl
sbb
mov
lret
popa
xor
or
sahf
mov
das
sahf
rorb
dec
xchg
push
push
or
sbb
xchg
mov
add
inc
mov
adc
mov
jns
jg
imul
mov
clc
push
push
inc
stc
fwait
dec
xor
cmp
mov
jmp
mov
mov
mov
lret
mov
mov
inc
sbb
pop
jo
cli
cmp
jno
insb
addr16
and
repz
in
push
xor
cmp
mov
movsl
cwtl
mov
pop
adc
adc
xchg
or
lds
jmp
popa
jmp
xor
mov
sarb
in
adc
dec
popa
xor
inc
pusha
repnz
lods
xchg
add
or
jmp
cmc
sbb
pop
fcoms
mov
fwait
imul
pushf
pop
mov
dec
cs
add
mov
jb
pop
stos
dec
or
in
pop
mov
push
sbb
shrl
lods
xor
dec
add
xor
jbe
push
ss
lret
xchg
arpl
fmulp
dec
sarb
lret
fiadds
orb
movntq
loop
mov
mov
out
jecxz
inc
test
cwtl
mov
cmp
out
sahf
and
aad
jb
mov
shl
test
shrb
push
lahf
out
jmp
loop
mov
lds
add
mov
fadds
pop
mov
lret
call
fldenv
xorl
insb
inc
dec
mov
es
into
mov
and
mov
cmc
sub
push
shll
push
mov
insl
push
inc
fwait
lods
int
xchg
xchg
jne
cmpl
or
mov
fbld
add
dec
jge
pop
xchg
push
mov
dec
call
add
mov
ret
mov
lds
ret
lret
jnp
adc
xchg
ss
mov
das
or
mov
sub
jp
cli
or
test
xchg
pop
pushf
push
aam
xchg
cmc
fldt
stos
addr16
mov
pushf
paddusw
ds
aaa
ret
scas
inc
jp
mov
pop
cld
jg
lahf
add
gs
push
lcall
lret
test
and
mov
xchg
and
test
imul
add
dec
in
pop
inc
imul
push
arpl
iret
mov
xchg
enter
or
imul
lahf
jmp
popf
jo
push
stos
and
fmul
jg
sub
xchg
shl
in
rolb
int3
add
xor
repz
pop
dec
or
push
pop
cld
repnz
ja
sbb
or
lcall
stc
push
sahf
imulb
cmc
xor
shlb
cmp
ret
cmp
pop
outsl
icebp
pushf
gs
fsubs
mov
shrl
xchg
addr16
or
xchg
repz
add
xchg
xor
xor
test
or
shll
xchg
stos
stos
stos
jmp
imul
jnp
jns
mov
gs
mov
mov
arpl
cmc
notb
xor
pop
cmp
pusha
stc
dec
adcb
pop
jmp
stos
rorb
repz
dec
aam
loop
out
or
imul
loop
mov
or
repnz
sub
ljmp
or
out
stos
jmp
shrl
roll
xor
std
loop
js
rcll
adc
inc
xchg
mov
push
mov
mov
or
stos
or
jb
lock
dec
mov
push
jno
out
push
pop
aas
and
dec
inc
push
ret
sub
xor
xor
add
ss
xchg
mov
dec
addr16
cwtl
sub
aas
pop
cmp
int
inc
lea
pusha
ja
push
cmpsb
xchg
mov
mov
popf
sub
fstp
jge
and
add
insb
pushf
mov
or
and
cmp
push
mov
jmp
xchg
push
pop
sbb
inc
into
test
outsl
add
xor
xchg
pop
push
jle
add
subl
sti
fisubl
ret
arpl
sub
dec
mov
inc
mov
cmpsb
jae
xor
push
lcall
int
xchg
cli
and
mov
lods
out
call
push
ja
and
pop
xchg
inc
cltd
sbb
mov
mov
and
in
loopne
fildl
xor
xor
adc
gs
mov
outsl
cmp
iret
clc
icebp
loopne
adc
shlb
push
ret
mov
call
out
sub
sahf
xor
pop
into
inc
push
xchg
mov
cli
stc
mov
mov
xchg
outsb
inc
adc
push
adc
adc
movsb
mov
pop
xorl
or
sbb
inc
repnz
movsl
mov
test
jne
iret
or
repnz
push
mov
bound
push
repz
ja
inc
cli
xchg
sbb
mov
push
cs
push
jae
or
roll
pop
dec
cli
cmp
jne
xchg
adcb
adc
xchg
dec
jg
xor
in
in
loopne
lock
xchg
adc
lret
test
jecxz
add
xchg
shll
cmp
mov
mov
push
dec
lds
jne
stos
shl
clc
jmp
or
mov
jbe
aad
xchg
mov
or
test
mov
jnp
dec
gs
movsb
mov
mov
dec
xor
sbb
xor
sbb
cmpb
push
in
popf
push
mov
shl
push
xor
sub
aam
push
and
jns
dec
fildl
ja
xchg
xchg
sub
pusha
mov
rorb
mov
dec
ffreep
push
add
fidivs
fdivrl
mov
lahf
popa
jo
dec
in
sarl
fcoms
and
adc
xchg
pop
loope
sbb
cmp
roll
loopne
mov
pop
cmc
mov
or
xchg
hlt
pop
lock
sbb
ds
mov
push
adc
ds
and
mov
imul
out
adc
sub
push
mov
in
xchg
addb
sarl
sahf
mov
jl
ret
addr16
mov
rcrl
out
or
sahf
cmpsl
stos
jle
incb
cmpsb
cmp
fwait
das
inc
push
jle
popf
in
icebp
sbb
adc
mov
pop
cmp
lock
and
or
fs
sub
addb
dec
dec
jne
inc
mov
push
jbe
in
cld
sub
icebp
neg
sub
pop
sub
xchg
iret
cld
push
xor
mov
jecxz
fwait
nop
mov
mov
aam
test
imul
pop
rorb
jb
mov
movsb
dec
push
push
adc
jns
test
pop
incl
out
inc
mov
lret
pushf
add
sbb
mov
pop
inc
jl
xor
push
pushf
test
push
iret
adc
movsl
mov
fst
out
push
inc
loopne
xlat
inc
mov
mov
rcl
pop
jno
xlat
mov
xor
push
mov
out
mov
adc
filds
stos
fnstcw
cmpsb
vhaddpd
in
lods
in
jno
dec
out
imul
push
mov
add
movl
aad
push
fimull
xchg
mov
add
xchg
mov
imul
jae
out
xchg
cmp
xorb
and
xchg
and
std
adcb
dec
mov
lahf
loope
mov
js
inc
mov
xchg
out
icebp
jmp
outsl
cs
pop
rcll
or
movsl
dec
aam
push
cmp
popf
inc
mov
mov
mov
mov
inc
adc
dec
popa
push
pop
mov
fistpll
mov
fs
shlb
jge
inc
inc
add
pop
mov
fs
mov
loopne
mov
hlt
push
lea
movsl
mov
push
jge
scas
sahf
arpl
lds
in
mov
dec
cwtl
int3
cmpsl
test
adc
nop
mov
cli
leave
cs
add
jns
sbb
mov
or
mov
int3
cmp
int
nop
add
pop
cld
xchg
lea
mov
xchg
popl
jl
call
in
pop
adc
pop
xchg
pop
pop
ss
or
lea
sub
xchg
sub
lods
repnz
in
sub
test
outsb
cs
pop
push
scas
sub
sub
mov
jge
jle
pop
clc
inc
dec
mov
repz
rcrb
mov
hlt
mov
mov
ficoml
xchg
pop
dec
out
sahf
pop
inc
stos
sbb
or
out
dec
jmp
sbb
les
outsb
mov
punpcklwd
inc
jmp
cli
cmp
sbb
add
cmpsb
mov
push
pushf
xor
out
jle
rolb
mov
popf
ss
push
mov
std
pop
dec
fstps
out
das
andb
loopne
mulb
iret
test
jecxz
adcl
aam
arpl
lret
lret
mov
mov
inc
mov
inc
push
cmp
xchg
xchg
mov
idivl
loop
in
mov
rol
std
push
inc
xchg
inc
stos
cmp
aad
ror
sub
in
negl
fadds
and
fmul
mov
fwait
shr
stos
andb
cmp
push
push
and
lods
cmp
xchg
lods
mov
sub
and
out
sbb
ljmp
stos
frstor
xor
std
xor
jl
push
imul
loopne
sbb
aam
sbb
pop
cmp
cmpsb
xchg
ja
xchg
jo
mov
shrb
xor
push
in
popf
orb
and
or
out
icebp
jle
shll
adc
xchg
cmp
or
jbe
push
pop
add
jnp
jle
lret
or
jg
test
aam
mov
mov
cmpsb
add
ret
pop
or
sahf
sub
cmp
dec
jo
mov
cmp
or
xchg
shrl
adc
xor
stc
dec
push
sub
cmp
das
or
aaa
push
mov
andb
pop
cmp
mov
dec
shrl
in
sbb
fildl
push
pop
fcoml
jne
cmp
inc
jmp
icebp
inc
and
in
jge
push
sub
cltd
xchg
mov
pusha
push
jnp
dec
xor
push
pop
adc
insb
popa
fsubr
testb
or
fsubp
dec
or
push
push
mov
fistpl
inc
sub
adc
cmp
inc
pop
jmp
outsl
notb
push
or
ljmp
popf
pop
rol
push
lds
cmp
mov
sarl
pop
loope
push
adc
loopne
fisubrl
lcall
dec
fisubrl
xchg
fnstcw
mov
cmpsl
into
dec
mov
fucomp
jp
jnp
loopne
test
xor
lea
lock
xchg
stos
movsb
mov
or
test
mov
mov
int3
mov
sub
xchg
clc
rcr
out
push
jne
mov
setno
outsb
inc
fbld
mov
je
push
pop
stos
ja
xchg
inc
xchg
inc
pusha
outsl
clc
push
rclb
out
dec
mov
jno
xchg
sub
push
mov
sti
or
adc
jno
mov
push
outsb
push
add
ja
mov
cmp
leave
jp
in
jae
mov
jle
arpl
fnstcw
cmp
mov
imul
lret
mov
movsl
inc
jg
xor
sahf
inc
scas
popa
dec
imul
insl
sub
rorb
mov
leave
mov
fs
jnp
sbb
inc
sub
arpl
loopne
aas
addb
push
nop
and
insb
cmp
push
mov
and
fnstcw
stos
imul
aam
push
inc
push
test
clc
xor
dec
in
mov
ret
aas
test
test
xchg
fs
ficoms
sub
stos
roll
leave
adc
popf
xchg
imul
aad
movsb
into
xchg
xchg
addr16
sbb
ds
ret
add
lret
leave
mov
jb
dec
dec
bound
pop
add
mov
imul
jbe
scas
clc
test
ficoms
inc
pop
dec
push
outsb
dec
inc
rcrb
lcall
mov
sbb
and
xchg
pop
outsl
jg
jecxz
imul
sub
inc
push
dec
mov
mov
cs
jnp
mov
std
dec
jg
jno
dec
jp
dec
inc
fcoml
clc
into
insl
and
lock
in
cmp
push
sbbb
sub
fnstenv
push
sub
cmp
filds
push
pop
arpl
mov
jmp
mov
mov
mov
sbbl
sbbb
sbb
cmpsb
scas
jmp
mov
popa
or
imul
cmpb
sbb
cmpsl
fsts
ss
mov
and
mov
lahf
push
stc
pusha
cld
dec
pop
out
xchg
ljmp
jecxz
movsb
dec
call
popa
or
rclb
xchg
les
xchg
jp
aad
inc
enter
outsl
jns
adc
arpl
sub
mov
leave
xchg
push
dec
js
push
adc
aas
mov
in
and
lret
arpl
dec
sahf
dec
push
sahf
test
push
int3
leave
insb
mov
xchg
repnz
mov
orl
jp
dec
or
or
mov
and
xchg
negl
add
dec
jmp
out
pop
lcall
jp
arpl
cmpsb
jl
mov
mov
sub
insb
stc
int3
cmpsb
mov
adc
dec
xor
gs
out
lock
sbb
add
dec
shr
fwait
outsb
push
mov
fbstp
cwtl
pop
fnstcw
rorl
mov
or
jns
div
mov
push
xlat
cmp
arpl
popf
inc
push
fcmovb
mov
sub
jns
ljmp
inc
sti
shll
jmp
mov
movsb
dec
cmp
mov
in
ret
xchg
outsb
pop
fcmovne
out
sbbb
pop
rcll
jno
and
add
lret
push
push
xchg
cmp
dec
sbb
and
lahf
idivb
inc
jbe
sub
xor
pop
cmp
jp
mov
pop
sbb
shlw
inc
aas
dec
lahf
sar
jg
jnp
mov
clc
sti
pop
sub
sar
mov
mov
jmp
push
pop
fcmovne
rcrl
dec
clc
add
popf
push
xchg
xchg
pop
iret
repnz
and
cmc
andb
xchg
cs
adc
filds
pop
mov
dec
fiadds
mov
shr
xchg
aas
push
add
inc
dec
into
sar
cwtl
xchg
andb
inc
movsb
dec
mov
add
inc
ss
out
or
nop
repz
cli
ss
cmpsb
dec
adc
inc
lret
jns
hlt
adc
jb
add
ljmp
inc
filds
jl
adc
push
inc
mov
xchg
mov
jmp
push
mov
repz
rcll
or
lret
int
popa
inc
adc
fs
int3
add
lret
popa
or
inc
xchg
add
dec
iret
push
stos
add
and
cltd
cwtl
js
and
inc
jmp
test
adc
lock
fwait
outsl
nop
mov
xlat
xor
sub
mov
aas
push
add
fs
ss
sbb
push
mov
testl
into
mov
jns
movsb
stos
inc
xchg
jne
pop
mov
jne
push
sbb
mov
adc
ret
arpl
nop
ret
fisubrs
int
aam
js
dec
fdivrs
sahf
sbb
xor
lcall
xlat
xchg
mov
xchg
adc
pushf
mov
push
inc
mov
shll
or
add
cmp
xchg
jmp
xchg
sub
mov
mov
add
lret
push
jno
stos
aas
mov
popa
enter
dec
lods
cs
mov
push
xchg
mov
addr16
push
in
pop
push
icebp
pop
mov
sub
mov
jecxz
insb
mulb
push
mov
pusha
cltd
sti
mov
sahf
iret
daa
xchg
or
xchg
and
or
test
fidivs
in
push
fucomi
mov
adc
pop
adc
dec
mov
adc
sub
mov
xlat
fucom
in
mov
pop
je
lahf
xchg
adc
push
out
das
jb
jge
cmp
or
mov
push
ljmp
jb
out
lcall
sarb
movsb
or
fdivs
cmp
push
aaa
insb
adc
decl
fs
xor
mov
adc
pusha
out
stc
mov
and
int3
pop
js
inc
hlt
cmp
iret
mov
scas
and
jg
sub
jp
xchg
dec
sbb
addr16
mov
xchg
cs
ficompl
pop
lcall
iret
mov
jmp
mov
mov
push
rclb
cmc
jmp
jmp
mov
out
dec
push
iret
out
inc
call
in
jb
sbb
adc
mov
push
cltd
push
mov
dec
mov
xor
sub
popf
addr16
notl
push
xor
adc
xchg
cmpsb
in
dec
push
int3
movsl
cmpsl
cmp
dec
cmp
out
rclb
imul
xchg
scas
in
sub
cs
pop
xor
xor
stos
mov
jle
int3
jbe
arpl
mov
lahf
lods
inc
xchg
lret
sbb
std
loop
dec
lret
jp
jnp
jbe
hlt
mov
aas
popf
adc
pop
stos
aaa
fs
xchg
cmp
push
adc
jae
inc
inc
in
dec
or
mov
jle
jnp
mov
xchg
xchg
imul
cmp
sbb
pop
dec
cli
and
mov
mov
inc
push
jg
loop
cwtl
push
mov
xchg
xchg
adc
and
cmp
sub
jmp
enter
mov
xor
jg
out
pop
cs
inc
cltd
pop
mov
push
cmp
in
popf
and
mov
xchg
decb
ds
cmpsl
je
xorb
push
rorl
ret
sahf
mov
sarb
je
xchg
mov
loope
jg
jne
mov
stos
dec
jmp
ljmp
movntq
dec
aam
imul
es
pop
or
push
in
data16
insb
mov
js
aaa
insl
gs
pop
push
dec
iret
ljmp
sti
sahf
cmpsb
es
imul
sub
dec
xor
stos
dec
aas
cmp
ljmp
mov
cli
shlb
lods
fidivl
les
pop
ret
lret
fbld
push
jge
lret
jns
or
in
stos
pop
push
xor
add
pop
push
clc
in
test
push
push
pop
sbb
sbb
push
out
push
push
jmp
sbb
sbb
leave
sbb
pop
sub
movsb
aaa
pop
and
or
add
into
push
lea
iret
push
jne
rorb
mov
lea
incb
aam
or
fisubrl
inc
inc
mov
movsl
outsb
insl
test
fsubs
es
or
test
pop
shlb
faddl
cwtl
loope
xchg
mov
mov
ja
dec
mov
lahf
inc
xor
push
aas
jae
adc
cmp
movsb
jmp
js
push
xchg
lods
fwait
repz
xor
mov
popa
mov
xor
in
ljmp
mov
int
xor
pop
or
and
scas
bsf
aam
xchg
mov
fdivrs
add
xchg
push
xchg
adc
cli
pop
dec
inc
sbb
test
rcll
mov
xor
cltd
jp
pop
arpl
adc
xchg
cmp
roll
xchg
daa
dec
mov
lret
xor
xor
outsb
sub
add
fcoml
jnp
arpl
mov
loopne
clc
jmp
imull
into
jnp
sub
pushf
push
mov
xchg
rcll
pop
sub
xor
xchg
jbe
std
mov
je
arpl
repnz
xchg
cmp
pop
orl
pop
jle
cld
dec
pop
jecxz
dec
insb
sub
cwtl
adc
or
test
mov
mov
lahf
shlb
or
and
dec
imul
mov
sbb
pop
push
movsb
iret
rolb
pusha
xlat
loopne
and
jmp
xor
nop
or
push
out
hlt
addr16
jns
adc
cmpsb
push
stc
clc
cltd
jle
out
popf
push
jno
out
popf
add
push
arpl
sti
add
faddl
adc
insb
push
bound
in
adc
xchg
popf
dec
into
jbe
sbb
inc
sarl
cmpsb
scas
pop
mov
mov
cld
jmp
repz
mov
mov
int
sbb
sub
push
lret
test
xchg
rclb
jne
sbb
lea
out
push
movsb
jg
mov
xchg
lahf
adc
fists
jge
push
pop
out
int
cli
icebp
fucomip
mov
in
and
mov
fbld
xchg
jg
jmp
add
mov
mov
jae
fidivs
adc
clc
icebp
jg
rcrl
adc
adc
insb
xchg
mov
jge
inc
mov
adc
jmp
shr
out
xorb
scas
loop
and
sbb
outsb
jge
mov
xchg
rcrb
cs
les
out
int
fiaddl
test
mov
add
sbb
fcmovnb
xor
xchg
pop
cltd
fs
pop
cmp
sbb
push
pop
lret
ret
outsl
gs
ficoml
jo
sub
xchg
stos
shlb
jmp
dec
adc
mov
sysexit
movsb
cmp
iret
add
daa
mov
lods
push
notb
add
mov
cmp
cs
ja
cmp
lret
adc
lods
rolb
aam
dec
in
sbb
adc
or
sub
mov
sti
into
xchg
leave
inc
cmp
cltd
mov
loopne
mov
sub
rcl
mov
aad
inc
nop
fmuls
data16
xor
push
xchg
xchg
fmuls
push
adc
mov
jne
xlat
lods
push
cmp
repnz
cmpsb
adc
movsb
inc
pop
or
jmp
and
les
push
jge
jo
es
and
dec
cmp
mov
sub
and
mov
popf
psrad
jmp
call
std
sub
inc
add
iret
shlb
add
xchg
loopne
inc
mov
sbb
mov
dec
sub
inc
lahf
cmpsl
jo
inc
push
xor
in
sarb
pop
or
add
shll
popf
mov
stc
xor
das
jbe
aam
movd
insl
leave
ret
sbb
test
mov
call
mov
mov
mov
fwait
sar
adc
xor
cs
andb
cwtl
or
jecxz
loopne
subl
xchg
pop
xchg
push
xor
fs
leave
and
dec
pop
sbb
xor
call
aas
xor
leave
movb
ljmp
stos
push
dec
rorb
lods
aas
sub
mov
inc
lret
test
fwait
jae
adc
test
cmp
arpl
aas
lock
xchg
mov
or
dec
mov
out
jo
aas
fildll
cmp
nop
and
cwtl
ret
sahf
push
ss
cld
xchg
lahf
data16
jmp
outsb
fstps
shlb
or
sbb
or
popa
repnz
es
dec
mov
push
movsb
dec
or
adc
pop
xchg
loope
aam
add
sub
lea
jg
das
push
test
lea
scas
adc
fiadds
iret
dec
or
movsl
mov
stc
or
push
pop
imul
cmp
jmp
mov
aam
icebp
dec
nop
fnstenv
pop
jns
outsb
jmp
mov
addr16
pushf
clc
pusha
pop
mov
or
mov
dec
xchg
mov
imul
xor
add
jo
clc
clc
aaa
add
imul
pop
sbb
sub
add
mov
push
cli
sub
pop
mov
lods
flds
push
jb
shrl
dec
aam
shlb
stos
daa
cld
and
data16
or
xor
loope
cmc
out
jp
nop
inc
jp
lahf
hlt
scas
loopne
or
push
adc
adc
add
pop
cmp
xchg
hlt
sti
cpuid
or
xchg
pop
add
popf
mov
mov
lods
mov
mov
ret
push
sarl
clc
push
outsb
xchg
js
imul
or
adc
mov
mov
pop
xor
popf
popf
popf
inc
jb
sub
push
dec
or
pushf
dec
cld
lock
imul
push
xchg
jmp
cmpsl
ljmp
cmp
add
jbe
mov
or
push
mov
cmpsb
rorb
mov
bound
std
lock
leave
dec
mov
mov
push
cmp
push
inc
in
movsl
jno
pop
rcrl
orb
and
test
pop
push
int3
jbe
push
movsb
dec
jg
and
cltd
adc
in
outsb
inc
mov
push
aas
std
lahf
push
outsb
arpl
bound
call
ljmp
or
mov
jmp
jmp
data16
jg
in
popa
popa
inc
mull
jo
adc
pop
add
xor
shlb
cmp
nop
data16
cmp
jecxz
rclb
aam
xor
or
stc
inc
sbb
jnp
into
cmp
adc
pop
push
dec
iret
inc
nop
jo
push
jns
out
hlt
or
add
scas
cmp
in
mov
jle
pusha
das
imul
lcall
bound
or
cmp
popf
fistpl
or
mov
push
mov
sahf
jge
aas
movsb
aad
fs
xchg
out
xchg
test
decb
out
jno
inc
dec
xor
fidivrs
addr16
jbe
aam
nop
xor
add
adc
push
mov
push
mov
push
int3
mov
cld
mov
shlb
std
sbb
mov
sub
lock
aaa
jmp
adc
mov
mov
add
mov
out
cmp
in
aas
mov
imul
dec
pop
dec
sbb
loop
mov
sub
xchg
mov
inc
pop
rcll
outsl
mov
int3
mov
in
sbb
sbb
test
ds
aad
incl
push
or
sub
insl
mov
inc
xlat
ficompl
push
sahf
pop
iret
mov
push
jb
in
sbb
dec
push
pop
mov
pop
mov
or
xchg
icebp
dec
sbb
lahf
or
loopne
lret
xchg
push
and
push
xor
lret
push
mov
mov
lods
jb
sub
out
inc
inc
pop
cli
sbb
sub
das
or
leave
sub
and
movsl
rorb
stc
cmp
shl
mov
insb
hlt
loopne
jb
mov
pop
das
test
and
mov
insl
mov
xchg
leave
mov
gs
bound
mov
push
mov
jmp
outsl
push
fsubrl
push
cmp
push
xchg
fcompl
lea
xor
lcall
movsl
or
aaa
and
jmp
sub
xor
cmp
in
rclb
hlt
mov
sbb
push
mov
add
lret
loop
and
lds
in
mov
dec
dec
dec
xor
sar
and
dec
or
mov
cmp
out
sbb
push
es
ljmp
fwait
sub
aam
inc
insb
pop
mov
stc
mov
mov
xchg
fistl
mov
fcoms
lahf
insl
cwtl
cwtl
cmp
jmp
dec
lock
pop
int3
movsl
movsb
fsubrs
push
mov
inc
loopne
jge
sub
mov
fidivl
pop
sti
adc
out
cmp
test
push
in
jne
fstl
push
je
add
inc
push
fprem1
sub
inc
and
mov
in
add
popa
xlat
and
add
push
and
popf
dec
add
push
dec
sarl
inc
ja
loope
popa
sub
arpl
sbb
outsl
frstor
fidivrl
xchg
dec
das
mov
aas
xor
xchg
iret
mov
cmp
xchg
popf
xchg
fimuls
aaa
xchg
ljmp
lahf
cmp
mov
mov
movsl
push
inc
xor
mov
jle
push
mov
cmpsb
fisttps
dec
scas
xlat
adc
in
scas
lock
es
dec
jge
gs
test
movsb
mov
sbb
clc
dec
jp
or
xchg
pop
cmp
fists
testl
addr16
aaa
jmp
fidivrl
aad
push
mov
arpl
xchg
pop
lds
inc
cmp
jbe
lret
push
data16
mov
push
add
or
pop
lret
or
push
add
jecxz
jmp
pop
push
movsl
cmp
push
int3
stos
and
inc
push
mov
mov
xchg
mov
cli
push
pop
sbb
shll
mov
xchg
push
iret
xor
dec
icebp
mov
ss
aaa
pop
mov
pop
insl
mov
sub
cmp
repnz
cs
ja
addr16
sub
iret
test
pop
pop
pop
push
inc
loop
push
outsl
lcall
mov
iret
xchg
dec
xor
in
roll
into
ret
push
or
stos
sbb
mov
xchg
pop
or
jecxz
sarl
stc
dec
dec
push
xchg
test
js
mov
add
stos
iret
in
addl
or
ret
mov
and
testb
jecxz
sbb
out
mov
rclb
das
ljmp
sbb
sbb
push
iret
and
shlb
sub
mov
add
orb
outsl
pmulhw
xchg
sbb
jp
arpl
ret
xchg
dec
rcrb
iret
xchg
or
lods
popa
push
pop
sti
push
lods
scas
jle
stos
sbb
or
test
and
rorb
std
clc
rclb
jle
mov
jo
fnsave
popa
movhps
incb
lcall
xchg
cmp
data16
jnp
add
ret
mov
dec
fldenv
subb
int
adc
inc
lahf
pop
inc
outsl
arpl
xor
inc
add
cmp
stos
mov
aad
cs
in
adc
mov
aas
inc
jbe
les
mov
sub
pop
ljmp
fwait
lock
leave
daa
sub
sarl
das
dec
sub
mov
mov
push
dec
dec
inc
and
push
scas
xchg
jno
aam
cli
lcall
pusha
xor
sbb
inc
sub
push
cwtl
push
xchg
xor
or
pop
lods
dec
pusha
int3
out
xor
ficompl
nop
cmpsb
mov
ss
fwait
call
adc
dec
out
xor
std
jo
loop
and
inc
sahf
sbb
add
mov
stos
lds
imull
mov
scas
outsl
pop
jb
cli
or
fisttps
cmc
sahf
mov
into
int
data16
in
jle
push
mov
fcomps
push
movsl
js
xor
xchg
aad
ja
aas
dec
pusha
in
xchg
pop
ljmp
and
mov
pop
push
dec
xchg
test
arpl
addb
movsl
push
sysenter
inc
fbstp
or
iret
js
in
inc
add
mov
mov
cld
cmp
mov
mov
pop
lcall
inc
ret
add
adc
movsb
mov
jle
lds
stc
mov
or
lahf
lret
daa
mov
add
shll
stc
adc
pop
in
popa
dec
dec
inc
les
pop
clc
jmp
int
and
pop
inc
std
xchg
dec
jns
popa
outsb
out
pop
and
push
lret
loope
add
data16
sub
xchg
movsl
push
sbb
or
fs
pop
or
jmp
frstor
jbe
out
fs
ja
xlat
lcall
sbb
jbe
adc
jb
call
enter
cltd
in
inc
lret
aas
mov
mov
cmp
sarl
jne
lock
lods
push
sub
test
rcr
sti
push
pop
xchg
or
mov
shrb
dec
fld
mov
sub
inc
lea
cs
aaa
cmc
pop
inc
sbb
test
jne
xchg
pop
rclb
inc
cmp
or
mov
push
xor
mov
fsubl
hlt
cltd
adc
xor
lret
out
js
inc
int3
fnsave
xor
mov
mov
adcb
adc
leave
aaa
xchg
mulb
push
shrb
xor
pop
jmp
sti
xchg
pop
mov
fidivl
loop
ret
imul
mov
add
mov
popf
daa
mov
sti
mov
jae
enter
push
jbe
xchg
push
shll
rcrl
push
lahf
mov
movsl
mov
fcoms
jne
lret
addb
arpl
sbb
jb
out
orl
xor
xor
int3
aas
inc
divb
mov
insl
lcall
and
loopne
sub
jp
movsl
mov
outsl
push
mov
push
mov
mov
insb
div
dec
dec
xchg
psubw
rorb
nop
mov
setge
inc
or
push
iret
xchg
mov
movsb
sahf
ror
leave
rcll
xchg
ds
inc
das
jno,pn
mov
mov
xchg
sbb
fisttpll
xor
mov
ret
xchg
xchg
xlat
mov
pop
dec
dec
leave
iret
cmpsb
jno
xor
insb
pushf
lds
mulb
jns
jp
lods
ret
xchg
fstl
in
cmpsb
jp
push
sahf
add
stos
sub
in
lahf
lods
fcomps
mov
cmpsb
push
jmp
lods
iret
ss
sub
or
es
repz
push
iret
xchg
fwait
shr
setnp
or
sub
add
repz
rcrb
or
orl
leave
out
pop
sbb
inc
and
inc
sub
dec
in
lret
in
dec
xchg
push
in
mov
int
rorl
xchg
xchg
outsl
and
sub
in
addr16
pop
test
int
popa
or
jbe
pop
cmp
mov
inc
push
sbb
mov
aad
mov
push
aas
dec
inc
dec
add
dec
mov
loopne
jle
inc
aaa
mov
int3
xchg
inc
popa
lret
pop
mov
mov
sub
cmp
popf
bound
mov
into
ja
shll
mov
mov
and
or
xchg
addl
pop
lock
inc
int
xchg
rorl
and
imul
or
xchg
movsb
hlt
cmc
jg
xchg
xchg
mov
or
dec
aad
cmp
pop
in
cmp
mov
xor
adcb
lret
push
in
dec
stc
js
mov
xlat
xor
mov
jecxz
jmp
dec
inc
push
xor
arpl
fcom
out
scas
jmp
arpl
clc
dec
pop
enter
loop
ficompl
fisubrs
aad
fidivrs
lea
out
shlb
lret
push
dec
mov
addl
fwait
cs
or
gs
mov
iret
add
pop
ret
jnp
stos
rclb
in
xlat
or
push
xor
lret
mov
repnz
xchg
fnstsw
std
inc
loope
popa
dec
int
pop
xor
and
in
imul
in
mov
cmp
xor
pop
cmp
fnstcw
dec
das
sbb
loop
les
aam
jge
adc
mov
jnp
jno
lea
out
lret
mov
xchg
mov
xor
push
fldt
insl
sub
in
sbb
mov
xchg
ljmp
or
mov
fwait
dec
jbe
aas
jbe
mov
fmuls
mov
filds
xorb
loope
test
pop
jnp
xor
mov
push
jae
sarb
inc
cmc
mov
and
adc
in
push
jns
lahf
ljmp
mov
fdecstp
cld
fld
js
fdivrl
clc
push
cs
ss
inc
ljmp
movsb
jne
pop
jge
outsb
in
add
lret
movsb
rorl
stos
test
mov
cmp
jmp
call
lret
mov
push
imul
mov
hlt
xor
mov
dec
pop
outsl
xchg
push
imul
sti
aam
mov
lods
in
adc
js
adc
lahf
jmp
daa
lret
comiss
inc
lods
cltd
jae
addr16
xchg
pusha
or
mov
scas
or
sahf
mov
pop
add
pusha
push
and
sahf
cli
scas
dec
mov
dec
lret
dec
pop
dec
iret
sbb
mov
push
testb
enter
xor
cld
cmp
int
xchg
push
gs
adc
xor
rcrb
lret
adc
pop
push
mov
loop
pop
lods
cs
add
mov
pop
mov
xlat
shlb
stc
stos
dec
pop
xor
cmpsl
cmp
cmp
lret
jmp
aaa
mov
xor
nop
cmp
cwtl
shll
scas
xchg
xchg
imul
ja
pop
lea
xchg
mov
sahf
lods
sub
or
movl
outsl
lock
sbb
push
xchg
jle
aas
cld
xchg
fsubp
rcll
out
mov
inc
call
fstpt
int
idivb
mov
dec
push
xlat
push
outsb
jle
cli
xor
xchg
jecxz
pop
push
mov
mov
mov
inc
sub
xchg
dec
dec
sbb
mov
xor
mov
xchg
xchg
out
sub
jnp
in
mov
sub
jmp
mov
std
xchg
cmp
push
mov
pop
out
data16
cltd
cltd
stos
lds
lea
inc
adc
push
and
or
call
inc
loope
mov
mov
ljmp
push
mov
orl
arpl
outsl
jp
mov
fdivrl
ds
xor
jl
fs
fisttps
cmp
loop
vcvttps2dq
xlat
iret
test
ret
xchg
cwtl
test
ja
fsubrl
cmpsl
fldl
cld
or
cmp
out
daa
lods
ss
cmp
pop
repnz
adc
xor
idivb
and
loope
add
ss
mov
and
fmull
fbstp
or
and
xchg
scas
jno
dec
and
negl
pop
lea
nop
orl
pop
mov
jnp
lahf
lret
add
sub
fst
xor
aam
sti
dec
js
cmp
mov
aad
sub
or
mov
lret
cli
in
sub
mov
loopne
xchg
mov
cld
cmpl
mov
mov
out
addb
sub
mov
enter
daa
mov
insl
inc
fs
jmp
ficomps
ffreep
xchg
mov
jmp
scas
int
insl
mov
scas
xchg
mul
cmpl
xor
nop
fsub
sub
xchg
ret
add
dec
xchg
push
fldenv
sbb
movsb
loop
sbb
outsb
call
mov
and
xchg
mov
ljmp
out
pop
fldcw
mov
or
movsb
fists
pop
shr
adc
aad
push
xchg
repz
mov
cli
sbb
mov
bound
in
sub
lods
addb
push
adc
insb
rcll
jne
repnz
out
gs
add
xchg
or
mov
sbb
sub
push
hlt
shrl
js
sbb
bound
jle
jg
sarb
push
jbe
and
out
inc
test
in
mov
cmc
fwait
push
out
cmp
dec
outsb
divb
repnz
in
adc
adc
ljmp
daa
push
xor
adc
mov
bound
fdivl
fstpt
rorl
xchg
pop
pop
push
fidivrl
mov
dec
xor
sub
in
mov
xchg
mov
jecxz
cmp
jbe
stos
mov
pop
ds
gs
out
int
mov
mov
mov
adc
and
sar
shrb
sbb
outsb
push
mov
in
cli
out
jmp
insb
dec
iret
jmp
int3
sbb
sub
xlat
fwait
sbb
push
dec
pushf
mov
fcoms
rorl
outsl
divb
repz
or
mov
lret
out
ljmp
mov
pusha
mov
icebp
push
loopne
insl
dec
sahf
xchg
mov
fmull
cmc
xchg
mov
mov
sub
add
roll
jo
addb
add
out
sbb
pop
dec
xchg
add
jnp
xor
out
dec
sbb
sub
cs
xchg
mov
icebp
xchg
pop
sub
fistps
lret
and
mov
or
cmp
fists
adc
ljmp
movsb
sbb
dec
push
repz
insb
sbb
lahf
xor
adc
fcmovnu
cltd
mov
hlt
ficoms
ret
jns
ja
arpl
loope
xchg
sub
lahf
lcall
popf
lret
lahf
jmp
or
mov
adc
bound
negb
aam
mov
mull
push
shl
push
cmp
sti
pop
dec
iret
cli
mov
add
imul
add
xchg
pop
cld
leave
push
test
sti
jle
push
xchg
repz
and
mov
insb
dec
out
jl
sbb
jge
or
jbe
int
mov
lret
jns
rcll
sbb
adc
and
cwtl
lret
lds
ljmp
cmpsl
imul
std
popf
fwait
or
pop
stos
push
movsb
xchg
or
jle
jne
xchg
xchg
nop
jno
out
cli
stc
and
cli
and
pop
or
adc
stc
mov
mov
gs
jmp
or
daa
in
inc
dec
outsb
mov
sbb
pop
aas
shlb
in
in
or
and
jecxz
popf
mov
sahf
mov
in
mov
sub
fisttps
int
xchg
out
sti
mov
lcall
popf
aad
shl
stos
mov
call
inc
sub
sbb
testb
jle
push
or
shll
xchg
adc
xor
loop
dec
push
fists
syscall
xchg
sti
or
cmp
je
ret
adc
mov
jle
sbb
cmp
sti
cwtl
cmp
xor
loope
dec
and
push
cli
mov
jne
subb
mov
out
jge
lret
dec
lret
xchg
ss
sahf
and
pop
aam
push
and
cltd
out
sub
push
jb
lret
lret
dec
jge
fbld
mov
js
sahf
sub
xchg
frstor
icebp
xchg
cmp
dec
pop
jae,pt
mov
mov
sbb
popf
or
scas
inc
sbb
dec
jo
cli
loop
mov
sysret
mov
adc
inc
popf
jb
sub
imul
daa
inc
stos
pop
aad
xchg
xor
adc
notb
push
mov
adc
and
ljmp
imul
push
pusha
pop
scas
cmp
mov
sbb
lret
pop
cld
xchg
push
imul
push
clc
add
and
pop
push
pushf
das
in
push
loope
xor
mov
xchg
xlat
andb
enter
fstpt
push
mov
jecxz
adc
dec
push
mov
jnp
scas
fwait
or
sbb
lahf
sub
and
and
into
in
and
out
into
into
and
pop
cmp
scas
rcr
test
pop
jecxz
testb
cmp
stos
icebp
shll
jp
ljmp
loop
mov
icebp
andl
leave
xchg
or
test
add
add
mov
push
mov
loop
stos
xchg
lea
cmpsl
das
faddl
lahf
xchg
dec
mov
xchg
and
lock
dec
popf
cmpsb
mov
jp
mov
push
cmp
push
sub
pop
es
xchg
cmp
aas
lahf
adc
and
xor
iret
sti
xor
sub
loopne
sbb
adc
rcr
test
pusha
mov
arpl
arpl
aaa
or
les
mov
out
xchg
inc
cli
jne
stc
addr16
dec
movsb
inc
inc
push
mov
call
xlat
pop
mov
orb
out
mov
daa
add
subl
dec
xor
cmpsl
mov
cmp
popf
leave
adc
mov
jmp
lds
jmp
and
aam
push
and
jns
add
outsb
fistl
push
inc
lds
mov
pop
clc
push
fildl
das
sbb
jp
fs
inc
inc
push
cmp
mov
icebp
adc
daa
stc
sub
out
mov
push
sti
add
xchg
xor
enter
dec
pop
push
xchg
sub
cli
hlt
add
xchg
les
jo
push
push
add
jae
mov
fbld
test
test
aas
ds
sahf
xor
pop
push
dec
xchg
subb
shll
push
dec
in
sbb
lock
cmp
js
or
lahf
in
sub
roll
cmp
mov
scas
jne
in
jge
jl
test
cmp
test
xor
cmp
inc
pop
sti
sbb
inc
fildll
shrb
ss
ret
jg
cmp
xor
xor
imul
loope
push
cmp
inc
push
xor
andnps
ljmp
adc
jge
and
mov
jge
xchg
popf
das
aaa
outsb
mov
xchg
aas
or
mov
push
inc
icebp
inc
xchg
out
cmp
sarb
fnstsw
loope
jbe
pop
fcompl
ljmp
addr16
sbb
sub
incb
jnp
inc
dec
ffree
inc
mov
inc
in
cwtl
outsb
stc
aaa
into
add
stos
push
ja
call
fwait
sbb
mov
cltd
or
fisubrs
cmc
dec
in
and
ss
stos
xor
xchg
test
mov
sahf
and
movsb
mov
ret
push
pusha
cs
push
push
push
xor
sub
dec
iret
push
inc
lods
frstor
fbstp
xchg
cwtl
jnp
bound
iret
fidivs
negb
fsubp
dec
mov
in
inc
shlb
testl
push
imul
adc
int3
dec
jmp
pop
push
push
fwait
pop
das
bswap
push
andl
mov
xchg
ds
mov
mov
cltd
jnp
mov
cmc
push
out
loop
xor
mov
mov
mov
xchg
fnstenv
loopne
jne
pop
add
jmp
js
aas
testl
sti
aas
fadd
cld
mov
mov
fistpl
adc
inc
push
jp
pop
xlat
imul
fildl
sub
push
push
xor
stos
push
jmp
std
clc
lret
leave
movsl
cwtl
push
in
lock
mov
mov
negb
sbb
es
push
pop
leave
dec
dec
jge
xchg
pop
xor
insl
sbb
jge
sub
adc
enter
nop
xchg
test
push
mov
inc
aad
push
enter
lds
or
push
stos
and
leave
dec
loop
inc
xlat
xchg
mov
mov
pop
data16
rcl
jl
aad
inc
stos
xchg
xchg
enter
adc
movsl
fbld
pop
dec
inc
push
int3
rorb
mov
icebp
imul
mov
popa
mov
mov
add
sti
aad
popa
addr16
lret
mov
out
or
push
cmp
xchg
xchg
lds
fnstsw
mov
stc
ljmp
jbe
push
xchg
das
aam
jbe
insb
repnz
pushf
inc
ficoml
outsb
fdiv
lret
jge
in
int
outsl
int3
pushf
std
ffreep
out
push
mov
lret
xchg
mov
arpl
and
xorb
cld
nop
shlb
sahf
mov
ret
push
dec
out
les
xchg
sbb
push
cli
mov
iret
imul
loopne
js
je
int
inc
mov
jno
dec
or
mov
add
pop
mov
add
xchg
lea
push
cli
rclb
cs
dec
leave
pop
out
push
into
andl
maxps
int
ds
mov
or
mov
inc
fmull
jnp
fs
rorb
fidivrl
jg
adc
push
clc
inc
sub
add
fisubrs
dec
mul
jle
loope
add
push
daa
mov
xor
push
cs
inc
out
in
daa
fisubl
adc
xor
push
rcll
stos
push
pop
das
mov
ret
lock
sahf
fiaddl
lret
push
sub
in
mov
in
jns
rcrb
push
scas
push
dec
add
dec
mov
in
lret
add
js
lahf
mov
repnz
jmp
mov
jle
loope
mov
stc
xorb
stos
dec
pop
loop
test
aad
rolb
outsl
ja
pushf
fxtract
aam
inc
push
into
in
insb
je
pop
pop
xchg
cmp
mov
popf
into
jne
ss
fs
out
mov
pop
sar
jmp
inc
xor
arpl
pushf
pop
icebp
insb
pop
test
jmp
jbe
jmp
cmp
jecxz
je
xchg
jbe
les
push
rcrb
ds
cmp
lea
and
cmp
dec
ret
test
ficoms
jbe
adc
addr16
in
std
and
movsl
xchg
imul
sbb
mov
xor
mov
xchg
mov
mov
inc
je
mov
clc
outsl
ss
mov
mov
inc
or
sbb
dec
fildll
or
or
cmp
pop
jg
imul
rclb
push
dec
xchg
pop
pop
pop
push
test
sub
test
add
push
faddl
xor
sub
into
fmul
xor
mov
mov
and
cmp
inc
jmp
dec
in
mov
sub
out
sub
inc
loope
lods
iret
ds
jp
repnz
arpl
xchg
inc
push
inc
sti
lods
xor
int3
into
jge
and
mov
sbb
xor
into
loope
ljmp
push
iret
dec
pop
iret
jmp
adc
dec
mov
cs
push
sarl
fwait
nop
inc
mov
pop
adc
or
mov
sbb
dec
cmpsl
pop
ror
test
xchg
fs
bound
loopne
push
stos
cs
jmp
inc
sbb
cmc
aad
js
lret
iret
pop
subb
incb
xchg
int
mov
dec
sbb
sub
sarl
ret
and
lret
data16
jl
and
dec
and
aam
loopne
pusha
add
mov
repz
sahf
insl
scas
rcll
mov
xor
lods
jo
add
fwait
ljmp
push
cs
xor
daa
es
out
into
lock
pop
cmp
cs
out
sub
push
lret
cmc
dec
int
out
popa
fcomps
xor
in
sahf
lock
mov
sub
mov
mov
test
mov
jns
and
pop
nop
ret
or
aam
jle
movb
jmp
dec
fdivrs
sub
add
inc
sbb
lea
aam
add
ds
les
lock
adc
mov
mov
out
lahf
sub
adc
mov
jae
loopne
xchg
dec
mov
push
lock
popf
and
arpl
cmc
iret
cmc
nop
bound
mov
mov
add
iret
lret
or
and
leave
ficomps
or
sahf
rcll
jle
mov
out
popa
into
dec
fidivs
xor
mov
cmp
jae
xor
mov
cmp
pushf
lds
lock
inc
jbe
lods
call
leave
ljmp
sub
jnp
rorl
push
sub
mov
dec
sbb
sbb
mov
and
es
ret
mov
inc
lret
mov
mov
xor
sbb
aas
cmp
adc
sbb
cwtl
aad
icebp
pop
lock
mov
dec
icebp
pop
in
adc
sub
in
hlt
cmp
adc
test
pop
icebp
rorl
push
inc
adc
fisubrs
push
cwtl
and
mov
scas
test
sub
clc
push
pop
in
shrl
xchg
mov
repz
mov
xchg
push
test
pop
repz
push
idivl
pop
mov
jb
mov
ud2
push
mov
push
xor
jb
sti
lea
lods
inc
leave
inc
in
add
pop
xchg
rorl
test
mov
jg
into
bswap
pushf
jno
dec
in
ds
jb
cmp
xchg
cmpb
out
ja
cmp
iret
andb
mov
icebp
jecxz
cmp
sbb
sub
sahf
jns
into
mov
stos
jmp
fidivs
pop
mov
scas
inc
jp
and
jns
scas
lods
add
mov
xchg
jb
pop
jp
mov
lret
dec
enter
dec
cli
jg
cmpsb
mov
jae
cmp
lahf
push
cmp
dec
inc
adc
clc
dec
jp
dec
iret
pop
mov
pop
sahf
or
xor
lock
xorl
pushf
in
sub
jg
pop
sbb
sbb
push
cs
lret
mov
pop
push
popf
jne
lea
and
jbe
push
iret
in
lods
mov
bnd
roll
outsb
push
xchg
fidivl
xchg
sub
in
in
mov
cmp
mov
fnstcw
repz
sub
add
std
jmp
test
sub
push
out
pop
jecxz
inc
nop
jno
cmp
push
push
int
mov
mov
cld
inc
push
sar
arpl
adc
enter
jmp
xchg
lock
cld
sub
shr
mov
int
inc
sub
cmp
inc
dec
dec
mov
int3
fidivs
not
sbb
push
add
fnsetpm(287
pop
pop
dec
stc
mov
mov
or
loop
lret
sbb
movsl
fsubrp
sub
cld
pop
pop
movsl
insl
std
fxch
fwait
sub
sub
cmp
pop
push
stos
or
iret
inc
adc
insb
lods
or
push
clc
mov
or
cmp
mov
lret
inc
cld
ljmp
nop
dec
inc
and
mov
data16
or
pop
jo
cmp
dec
push
es
les
cs
xchg
xor
sti
mov
int
fwait
cwtl
notb
int
sar
ljmp
push
xor
dec
and
adc
jmp
lods
adc
mov
dec
aam
js
cmp
mulb
push
push
lcall
dec
movsb
adc
dec
enter
insb
mov
stc
mov
aam
es
add
mov
dec
push
xor
mov
xchg
in
mov
pop
or
cmp
js
pop
push
jns
loope
orl
rcl
cli
shlb
fildl
iret
aaa
stos
ljmp
cmpsb
or
aas
inc
adc
movsl
dec
add
pop
pop
inc
and
outsl
cmp
xor
jle
jg
stos
cwtl
test
inc
add
sub
sti
push
jo
adcl
lock
or
jbe
rolb
add
decl
or
test
in
mov
fmull
jne
jb
jns
fstpl
sub
inc
xor
xor
mov
pop
adc
cmp
outsb
ss
jecxz
inc
dec
cmpsl
mov
sub
inc
cs
jb
adc
dec
lret
clc
xor
or
inc
popf
mov
and
sub
dec
sarl
enter
add
jbe
mov
xchg
arpl
std
mov
es
mov
pop
xor
cwtl
pop
dec
scas
mov
fistl
sti
movsl
add
scas
sarb
inc
mov
push
pop
mov
and
mov
sub
ljmp
fstl
sbb
div
out
adc
inc
fwait
cmp
loop
pop
dec
lock
inc
xchg
in
lds
xor
mov
cmc
out
dec
push
adc
cs
cmpsl
mov
stc
hlt
pop
pusha
mulb
call
ret
incl
mov
mov
xor
or
in
sbb
shl
jecxz
jmp
out
iret
jo
idivb
xchg
jge
aam
and
jmp
fstl
fidivrl
mov
addr16
fcoms
add
sarb
fidivl
or
cltd
fsubrl
fdivs
call
dec
lods
cmpl
dec
jo
dec
pop
mov
das
push
mov
filds
testb
lock
sbb
sbb
xchg
ret
rol
fucomp
dec
fidivrs
in
outsl
mov
jle
in
xchg
push
cs
mov
push
mov
pop
cmpl
cmp
lds
dec
push
mov
lret
hlt
out
mov
sarb
shlb
cmp
pop
out
inc
div
pushf
pminsw
xchg
dec
rorl
stc
xlat
movsb
cmpb
in
imul
es
pop
jno
out
dec
and
add
sub
push
pop
adc
mov
mov
insb
iret
std
ljmp
or
or
pushl
stos
mov
mov
fs
pop
xor
call
aad
outsb
pop
shrl
cmp
jmp
inc
dec
call
sub
mov
add
pop
rorl
sub
outsl
push
stc
jae
popl
sub
push
mov
sub
into
mov
adc
xor
mov
lea
or
pop
jecxz
dec
loope
push
decb
iret
cs
push
jbe
movsb
cwtl
mov
xor
push
push
ret
es
push
inc
mov
aaa
cwtl
ljmp
push
ljmp
inc
cmp
sti
in
sub
xorb
jle
pop
jmp
mov
ljmp
subb
pop
call
or
popf
cmp
sti
inc
inc
std
adc
dec
jae
pop
outsb
jmp
inc
jg
cmp
pusha
out
mov
xor
sahf
mov
sarl
or
insl
add
mov
inc
imul
cmp
aad
movsb
clc
cmc
jmp
cmc
sub
iret
iret
jl
cli
popa
lahf
hlt
fbstp
xchg
sbb
ret
xchg
pop
imul
sbb
outsl
fld
jmp
inc
outsl
dec
add
into
rcl
push
or
pop
test
inc
xchg
repnz
adc
mov
out
stos
mov
popf
loopne
push
pop
or
test
add
data16
das
ss
jb
xchg
inc
add
ret
icebp
jmp
adc
pop
jl
addr16
push
pop
xor
mov
pop
and
and
aad
fisttps
sahf
pop
xchg
out
fistps
inc
inc
inc
sahf
xchg
xchg
mov
sti
adc
mov
sarl
xor
imul
imul
mov
andb
in
movsb
mov
ja
imul
sahf
xchg
bound
mov
mov
add
mov
push
xchg
cmpsb
mov
add
les
outsl
lods
ljmp
fs
lcall
mov
mov
push
popf
popa
outsl
sub
pop
fcos
xor
mov
sub
daa
push
nop
pop
int3
mov
mov
inc
sbb
jp
dec
call
adc
lcall
mov
js
push
nop
das
lret
push
push
mov
lcall
nop
xor
mov
cltd
lds
or
adc
and
inc
jo
stos
mov
iret
sahf
xchg
fistpl
cwtl
leave
nop
sub
adc
sahf
dec
sbb
inc
out
dec
push
pop
shl
cmp
aam
fisubrl
sbb
das
xor
mov
rcrl
sub
insb
sub
adc
dec
test
adc
xor
into
ficoms
jns
xchg
jne
stos
adc
rcr
pop
lret
cmc
out
inc
ljmp
stc
mov
pop
testl
addr16
inc
jmp
je
xchg
adc
iret
mov
clc
mov
fisttpl
dec
fmuls
mov
bnd
mov
sbb
xlat
iret
jb
and
push
enter
lahf
dec
xor
out
xorb
xor
cmc
pop
lret
insb
orl
jb
lock
adc
xlat
dec
fiaddl
dec
dec
add
push
jnp
out
jno
lret
sbb
into
xchg
xchg
addr16
dec
push
push
xchg
pop
push
or
in
xor
rcrb
jbe
add
pop
jmp
in
mov
dec
inc
sbb
into
pop
ss
clc
mov
cmp
inc
inc
xor
mov
test
pop
testl
dec
int3
pushf
ljmp
cs
jbe
pop
scas
sahf
and
mov
dec
cmp
fnstcw
call
loop
leave
inc
aad
aad
es
mov
and
testl
lret
lea
outsl
inc
xchg
mov
mov
mov
sbb
sahf
and
and
aas
in
shll
outsb
add
movl
sbb
sbb
xor
int3
inc
or
and
scas
or
fs
push
jb
aaa
jmp
movsl
cmp
in
jne
xor
das
cli
or
mov
and
ret
cmc
cwtl
and
jg
dec
out
es
iret
aaa
cltd
test
push
roll
pop
or
xor
push
jb
cmp
addr16
pop
les
dec
mov
xor
pop
shrb
jmp
ret
cli
jmp
mov
dec
and
out
cmp
daa
jno
roll
dec
pop
inc
aaa
inc
push
movsb
insl
mov
jp
ja
in
repnz
fwait
mov
jb,pt
jb
fstpl
arpl
lods
mov
mov
inc
mov
mov
dec
ja
or
mov
insl
pop
dec
xor
mov
and
or
orl
mov
inc
dec
and
shlb
mov
xchg
out
sub
sub
fwait
in
push
add
sub
jmp
jmp
adc
bound
sbb
out
inc
mov
xchg
test
xchg
mov
repnz
mov
jmp
pop
pop
fisubs
std
das
cmp
inc
xchg
mov
or
sub
in
out
or
shrb
cs
push
int
or
sarb
call
or
das
add
xor
add
imul
sub
out
sbbb
dec
jmp
in
pop
aaa
sbb
cs
aam
ja
js
leave
in
cmp
mov
mov
mov
pushf
add
adc
bound
cmp
mov
loop
jl
arpl
enter
push
cmpsb
pop
xor
jmp
push
xchg
cmp
mov
repnz
sub
fistpl
jmp
mov
pushf
inc
cs
cs
pop
shrb
repz
andb
jp
mov
aas
dec
xor
idivb
mov
cld
leave
or
outsb
fs
sahf
dec
pop
jge
push
in
add
movsl
shrl
xchg
ret
inc
bound
loopne
sub
cli
lds
pop
dec
or
pop
adc
or
outsl
shlb
mov
dec
pop
aam
stc
mov
lret
test
jo
mov
pop
ret
ret
lea
outsb
pop
ffreep
xor
push
popf
rcrl
shrl
sbb
pushf
add
jp
mov
jmp
repnz
push
inc
stos
movsb
push
dec
mov
aad
imul
jno
sbb
cmpsl
rorb
inc
mov
push
jae
jno
in
cmc
fistpll
lods
jle
mov
pop
ss
shll
fldt
fstps
ds
dec
arpl
jmp
pop
dec
lods
pusha
aad
xor
ja
dec
push
sub
lahf
hlt
mov
ja
xchg
push
int
inc
jbe
nop
and
jne
push
bound
test
dec
inc
test
lods
dec
jmp
js
mov
jecxz
hlt
jge,pt
pop
in
xchg
jp
dec
xchg
push
stos
scas
addr16
xchg
pop
insl
fisttpl
cld
flds
mov
cli
push
sub
push
int
sbb
push
pop
dec
adc
imul
int3
xchg
jg
mov
in
shlb
push
out
mov
stos
hlt
pop
xchg
js
inc
ljmp
shrb
push
xor
shll
push
dec
mov
rcrl
xchg
testb
fildl
push
insb
mov
lahf
or
pusha
test
adc
icebp
push
mov
cli
pop
mov
xchg
movsl
in
and
push
shl
das
mov
xchg
sbb
push
and
inc
not
js
scas
sbb
lret
sbb
mov
mov
repnz
jp
lahf
pop
dec
dec
inc
xchg
out
dec
repnz
inc
inc
insb
mov
lret
fucomip
adc
cmc
imul
cltd
inc
xchg
in
ret
sbb
bndstx
add
dec
sarb
mov
inc
dec
sbb
cli
push
lods
fnstsw
cmp
hlt
cmp
add
xchg
stc
out
sbb
mov
fisttpl
daa
push
cli
test
inc
jb
lret
jbe
inc
jbe
jnp
movsl
sub
pusha
cwtl
sbbl
es
fnstsw
jmp
mov
jo
hlt
hlt
insb
cmp
xlat
in
mov
aad
xchg
out
xor
out
stc
stc
mov
in
xchg
decl
and
cmp
or
adc
daa
mov
fdivl
test
mov
inc
inc
shll
or
fnstenv
xor
outsb
cld
jg
cmp
mov
mov
mov
popa
dec
enter
int3
call
sarl
pop
and
into
dec
scas
ret
into
dec
dec
dec
xchg
add
adc
scas
stos
cli
cmp
sub
fidivrs
lcall
mov
add
popa
sbb
add
dec
repnz
push
clc
cmp
scas
xor
lahf
mov
addb
push
lods
decb
or
orb
cld
lret
jae
pop
test
ret
arpl
xchg
inc
addl
popa
sbb
shlb
dec
mov
leave
mov
ljmp
sti
mov
mov
mov
js
mov
pop
add
push
inc
fs
xor
cwtl
lret
adc
stc
icebp
jne
rcll
int3
lods
push
into
lds
int
xchg
sub
das
xor
xlat
scas
cmp
ret
idiv
inc
push
aam
mov
or
push
lret
xor
or
stos
cmp
jge
cmp
mov
adc
mov
fs
xor
loop
cmp
mov
xchg
popa
push
test
sub
mov
sahf
ret
or
sbb
pop
out
cltd
xchg
std
push
test
fmul
das
sub
stc
fstpt
aad
jle
adc
fnstsw
pusha
add
in
dec
cli
repnz
mov
inc
push
neg
xor
cmc
clc
mov
mov
rcll
sub
adc
dec
in
insl
std
fisubrl
or
sbb
out
mov
dec
lods
insb
dec
icebp
adc
out
mov
mov
lock
jbe
aam
arpl
scas
aaa
mov
out
incl
pop
jns
lcall
jg
aas
mov
cmc
shlb
inc
aaa
cmp
dec
mov
dec
out
int
in
sbb
scas
push
and
xchg
dec
mov
pop
or
push
add
leave
arpl
shll
xor
enter
xchg
std
sti
xlat
insb
push
push
inc
into
testl
nop
imul
imulb
dec
push
stc
adc
xor
mov
in
jo
rorb
int
add
add
xchg
in
sub
inc
inc
mov
fucomp
cmpsb
stos
enter
push
imul
and
mov
mov
add
pop
jbe
pop
stos
xor
stc
lret
cs
xlat
xchg
imulb
pop
out
inc
movsb
and
jecxz
outsl
daa
movsb
loopne
push
pop
fiadds
xchg
lock
out
insb
ljmp
push
aaa
cmp
cli
jle
and
push
insb
call
lret
adc
movsb
xchg
and
fildll
push
lret
or
cmp
addr16
cltd
lret
push
test
mov
xorb
loop
dec
mov
push
push
lahf
shrl
xlat
and
and
inc
or
iret
push
icebp
jg
jg
out
cmp
popf
pop
cmpsl
les
cmp
mov
movsl
xor
bound
out
shll
dec
outsb
jl
push
movl
inc
pushf
repnz
aas
fdivrl
xchg
cli
inc
push
xchg
addr16
lahf
pop
pop
mov
or
ss
jb
pop
push
xchg
mov
mov
lahf
insb
lods
out
scas
lods
inc
lcall
add
jge
outsl
adc
pop
mov
lcall
xor
xchg
or
fcompl
lcall
fdivl
shll
movsl
jge
push
mov
stc
push
cmpsl
and
lock
in
and
pushf
dec
movsb
jae
xchg
cmp
jo
xchg
cmc
ljmp
adc
lahf
ljmp
push
aas
fstp
xchg
ret
imulb
hlt
fbld
push
les
sti
xchg
push
mov
clc
scas
test
movsl
rclb
movntq
inc
cwtl
ljmp
aaa
jbe
xor
cmp
idivb
scas
sahf
aam
imul
movsb
or
scas
sub
aam
push
xor
ja
scas
and
clc
add
fsubs
xchg
shl
in
iret
insl
loop
sbbb
xchg
ret
mov
add
ror
outsl
and
mov
iret
add
add
fs
lea
and
sbb
in
fiadds
js
out
cld
sbb
divl
push
or
fisttpl
mov
dec
mov
mov
adc
daa
xchg
fwait
xchg
mov
pop
cmp
in
pop
cmp
std
add
aaa
shll
and
je
ret
inc
sub
out
ss
out
sub
cld
dec
push
rclb
or
push
adc
add
arpl
imul
cmc
into
lods
inc
pop
fwait
cmp
mov
rorb
add
aad
stc
adc
add
adc
push
adc
mov
cwtl
leave
shl
cmpsb
sbb
inc
pop
fisubrs
out
leave
cmc
mov
xchg
mov
cwtl
insl
pop
dec
shrl
cmpsl
dec
ret
mov
jne
jo
aam
out
iret
xchg
pop
dec
mov
popa
shrb
jle
std
mov
stc
fwait
sbb
ss
repnz
cld
jo
in
push
add
leave
ret
notb
adc
xchg
cmp
sti
in
push
subl
push
jg
dec
lcall
leave
sub
sbb
adc
mov
xor
jmp
cltd
ds
mov
lcall
mov
loope
and
push
add
xchg
sti
loope
outsb
ret
lock
xchg
jg
fucomip
xor
sbbb
dec
mov
fisttpl
or
inc
or
andb
out
inc
cmp
ror
fcomps
lods
and
xor
mov
jns
push
lds
or
or
fstl
in
push
or
icebp
stos
mov
movsl
lret
je
pop
imulb
mov
fdivl
es
and
mov
jns
dec
or
sbb
dec
ficomps
leave
in
outsb
subb
lret
push
inc
push
or
dec
dec
cmpsb
stos
test
nop
jne
sahf
mov
cmpsb
push
ret
je
push
xor
xorl
and
xchg
movsb
clc
mov
setge
cmc
imul
inc
jecxz
pop
xchg
mov
mov
mov
test
push
popf
dec
lret
add
int3
xchg
stos
lods
movsb
pop
shlb
push
cmp
je
lea
mov
test
pop
daa
xchg
rorb
mov
mov
xor
cmc
push
mov
push
in
add
sar
leave
sub
cmp
and
push
or
push
testl
pop
xor
lea
stos
hlt
adc
mov
inc
mov
mov
sbb
pop
or
int3
mov
push
or
lret
clc
lock
stos
xchg
lods
ss
pop
fisttpll
mov
dec
dec
fwait
mov
out
dec
imul
xchg
pop
rcll
mov
out
and
cltd
loopne
aaa
imul
ss
cli
push
mov
sbb
mov
test
jp
fistpll
cmc
xchg
pop
xlat
gs
add
lods
lods
adc
in
and
push
cs
rcrb
and
scas
pop
lret
popf
mov
dec
aad
scas
repz
cmpsb
dec
es
shrb
cmc
xchg
outsl
loop
icebp
icebp
cwtl
pop
pop
xchg
cs
lea
sub
xor
mov
stos
mov
ljmp
xchg
ja
dec
dec
js
cmp
aad
ljmp
into
scas
dec
sti
call
imul
xchg
mov
fdivrs
stos
out
xor
shrl
sbb
sub
cmp
sbb
movsl
in
sar
cmpb
sti
outsl
les
pop
jne
add
push
fcmovb
xor
es
popf
lea
xchg
movsb
enter
cmpsb
shr
inc
cli
inc
pop
push
enter
add
jbe
push
lock
lods
sub
orl
or
inc
loopne
inc
aas
mov
ror
xchg
scas
insl
cmpsl
adc
cmpsl
push
jge
sub
into
mov
mov
pop
movsb
mov
push
mov
in
insb
dec
mov
push
mov
lret
and
xchg
pop
push
inc
cli
in
mov
xchg
inc
or
addb
sahf
lods
xchg
sub
jmp
jle
lcall
mov
je
nop
test
xchg
fisubrs
cli
jno
es
xchg
scas
lea
pop
aaa
push
inc
fwait
lret
data16
mov
mov
pop
push
inc
dec
push
dec
mov
hlt
out
sahf
inc
jbe
movsl
ret
xchg
mov
int3
movsb
into
mov
into
mul
xchg
adc
fistl
testb
push
add
js
push
xchg
xchg
mov
cmpsl
aaa
push
jno
arpl
sarb
bnd
lahf
fs
mov
xchg
mov
pop
push
fmuls
mov
mov
cmp
sbb
mov
xchg
fwait
add
sub
add
into
sarb
imull
std
imul
and
cmp
xor
or
mov
mov
lret
movsb
or
push
xchg
push
push
and
ret
xchg
push
push
push
push
add
icebp
or
data16
xor
inc
mov
pop
sarb
jecxz
dec
adc
aas
inc
jg
in
pop
lock
pop
xor
mov
jg
dec
inc
mov
loop
mov
test
enter
int
aam
inc
inc
cmpsl
ret
cltd
roll
insl
cmp
cs
call
adc
xlat
mov
sbb
mov
cs
sbb
mov
stos
loope
xlat
repnz
pop
clc
adc
adc
xchg
xor
sub
popf
add
mov
aas
pop
and
or
xchg
dec
adc
inc
out
fwait
cmp
pop
xor
mov
cmc
xchg
jmp
push
repnz
ljmp
push
adc
and
ds
jb
xchg
push
push
inc
xor
pop
jnp
inc
fldenv
push
in
push
fidivrs
mov
inc
mov
mov
push
or
inc
test
adc
jb
notb
jecxz
dec
sub
mov
lret
add
cmp
imul
mov
cmp
gs
mov
mov
inc
xchg
test
xchg
xor
stos
pop
out
and
cmc
push
pop
or
nop
getsec
jmp
sub
lea
outsb
aaa
push
dec
mov
xor
sub
add
xor
dec
jmp
push
mov
mov
shr
jmp
mov
mov
loop
loopne
xchg
jbe
jl
dec
ret
inc
repnz
add
dec
sarb
adc
lock
pop
es
out
or
arpl
jbe
cmpsl
adc
mov
lret
cmp
popa
mov
ficoml
cmp
mov
in
xchg
cmp
mov
loope
xchg
push
mov
jnp
arpl
lret
push
stc
fsubrs
in
sbb
sub
jb
mov
sub
push
pop
cmpsl
aas
xchg
or
dec
adc
cmp
mov
dec
cmp
pop
shrb
fstps
and
addps
jmp
cmp
mov
loopne
xor
push
or
test
xor
fcompl
push
idivb
sbb
sub
jnp
lea
hlt
mov
gs
insl
clc
lahf
and
xchg
nop
arpl
clc
inc
out
mov
mov
or
push
add
loop
mov
es
iret
adc
mov
fidivrl
pop
in
loope
cld
mov
testl
xor
lock
fwait
sbb
lods
rclb
sub
sbb
mov
icebp
xchg
xor
in
in
in
lret
fucomp
dec
shll
jmp
xchg
ficomps
pusha
lcall
lahf
ja
shrb
sahf
sub
push
mov
dec
pop
sbb
adc
cli
mov
shll
lods
dec
cs
xchg
jb
pop
loop
inc
mov
cli
jns
jno
or
ffreep
lret
sarl
inc
fisttpl
dec
mov
pop
add
mov
outsb
pop
std
inc
xchg
mov
sub
push
std
adc
jle
xor
mov
jmp
sub
pop
mov
scas
sarb
push
in
push
mov
in
pop
jnp
push
lea
outsl
lods
cs
mov
test
mov
push
and
in
pop
mov
aas
cmp
fadds
lock
lods
sbb
sarb
inc
xor
mov
adc
sbb
pop
test
in
int
ds
mov
bound
iret
dec
push
xchg
mov
or
frstpm(287
adc
int3
cmp
or
jp
iret
push
std
xchg
mov
dec
inc
lcall
pop
xchg
mov
das
sbb
xor
pop
movsb
pop
add
xor
cwtl
jo
pop
sub
sub
int3
addr16
push
push
es
pop
pop
jecxz,pt
mov
rorb
dec
ja
sub
out
lds
xchg
gs
mov
pop
pop
or
shl
arpl
sbb
pop
jp
dec
push
roll
loop
xchg
push
or
clc
jns
stos
add
fsubrl
mov
pop
mov
sbb
and
xlat
nop
jg
add
and
jg
push
jnp
movsb
lods
push
movsl
aaa
lea
and
or
and
push
inc
jno
je
div
cmc
sarb
dec
sub
adc
and
ljmp
jmp
data16
push
rcll
pop
out
mov
pop
dec
pushl
jle
xor
pop
cmpsl
adc
and
xchg
inc
repnz
enter
sbb
scas
xchg
ret
mov
imulb
rorb
cld
or
shll
sub
mov
loopne
decl
dec
sti
fst
inc
dec
repnz
aad
or
in
mov
in
es
push
adc
cmp
mov
je
inc
mov
pop
aad
xchg
mov
out
data16
arpl
ds
push
out
sbb
push
or
mov
xchg
arpl
addb
add
pusha
into
dec
lahf
or
andl
cmp
push
mov
rorl
jecxz
add
repnz
lret
mov
in
lock
pop
mov
fcompl
or
ffreep
mov
loope
pop
shlb
cwtl
rcl
ja
mov
fistpll
repz
dec
jmp
cmp
jmp
mov
pop
mov
ds
mov
popa
sub
ficomps
inc
or
stc
add
pushw
insb
popa
dec
and
ljmp
sbb
mov
jp
sub
roll
push
fadds
mov
jl
imull
int3
in
test
mov
push
dec
notb
not
addr16
popf
sub
dec
unpckhps
mov
dec
movb
stos
lret
sbb
push
fs
adc
sub
aaa
push
enter
out
dec
notl
pop
js
call
sbb
jmp
add
test
bndldx
mov
or
aas
or
out
in
sti
in
mov
push
cwtl
das
push
scas
mov
dec
push
jl
mov
out
test
fiadds
jbe
and
cwtl
adc
dec
mov
inc
fnsave
mov
rcr
lret
mov
adc
and
movsl
jnp
das
dec
daa
test
ds
mov
loopne
and
incl
cmp
es
xor
hlt
cmp
mov
aas
out
xor
loopne
or
pop
mov
dec
push
jge
into
lahf
push
jnp
es
mov
jecxz
cmpsl
jl
lock
shlb
fildl
pop
xlat
imul
cs
sbb
xor
sarw
out
xchg
mov
je
jb
or
incb
std
sbb
sub
inc
push
cmc
in
adc
out
negb
adc
rcrl
mov
movd
popa
stc
sub
daa
shl
inc
dec
sub
sbbl
vmovups
das
xor
sub
or
inc
or
and
dec
sbb
mov
mov
xchg
popa
lds
hlt
jge
daa
gs
es
xchg
cmpsb
push
mov
push
xchg
mov
gs
sahf
jg
mov
pop
lahf
pop
dec
inc
loop
iret
inc
push
clc
pushf
xor
outsl
inc
imul
in
xchg
sbb
pop
add
jnp
out
xor
jne
push
push
sbb
leave
in
adc
outsb
enter
rclb
gs
dec
aad
pop
dec
dec
sbb
dec
sbb
or
aaa
lods
imul
subb
ja
mov
xchg
push
fst
adc
loop
rcrb
sub
sub
pop
shll
in
popa
movsl
and
or
dec
push
xchg
and
stos
inc
scas
negb
dec
mov
loop
ficompl
flds
sbb
inc
dec
inc
outsl
xorb
jns
imul
dec
std
lret
iret
clc
push
add
out
and
pop
stos
ja
clc
push
test
pop
call
pop
aas
addr16
sbb
xchg
arpl
mov
or
loop
fsubl
outsb
add
out
xchg
popf
sahf
push
gs
fcmovnbe
cwtl
pop
aad
jb
jl
push
test
std
jecxz
jp
mov
pop
inc
inc
jmp
push
xchg
inc
push
sub
dec
insb
xchg
arpl
mov
lret
arpl
xchg
cli
xor
xlat
cmp
push
cmp
push
in
fnstenv
cltd
jmp
mov
dec
mov
mov
ds
sbb
fiadds
xchg
sub
fsubl
imul
aad
or
lret
mov
test
pop
sti
xchg
dec
mulb
xor
push
pop
loop
inc
push
xchg
dec
rcrb
jl
push
aad
push
push
push
pusha
int3
add
cli
dec
pop
rolb
sbb
xor
movsb
fisubrl
ds
inc
adc
or
fsubl
aas
into
test
mov
jb
xor
and
jmp
sbb
dec
andl
pop
dec
jl
pop
mov
mov
pop
push
andb
incb
xor
inc
bound
mov
nop
fidivs
xchg
mov
aas
shlb
mov
cmpsb
or
incb
and
mov
adc
fistps
jmp
push
je
jne
jmp
lcall
pop
out
stos
test
cli
mov
bound
imul
cmpsb
mov
and
sbb
arpl
gs
push
push
jle
hlt
mov
adc
icebp
out
fs
sahf
ficomps
ret
test
xchg
jge
iret
jnp
stc
dec
ret
jns
test
mov
dec
in
cmp
int
and
pop
subb
adc
mov
test
stos
mul
ljmp
pusha
jo
lods
shrb
push
sbb
mov
push
pop
shll
or
sub
addr16
sti
lods
sbb
cwtl
out
pop
insl
add
sub
aaa
es
lds
jmp
imul
outsl
pop
jge
adc
cmp
lds
jmp
push
sbb
jmp
fwait
jecxz
pop
cli
cmp
cs
call
xor
ljmp
int3
repz
inc
das
daa
fldl
mov
or
push
arpl
hlt
aam
repz
add
cld
mov
push
dec
movsb
jmp
popf
cmpsb
loope
lcall
test
jecxz
pop
and
dec
aam
cmpsb
rorb
inc
push
mov
push
ret
sbb
sbb
das
out
in
loop
dec
adc
dec
jae
mov
mov
push
sub
pop
adcb
jge
xlat
fiaddl
jae
cmp
int
fisttpll
mov
sar
cli
andl
lcall
sbb
xchg
idivl
out
jo
and
jmp
dec
push
mov
clc
inc
sar
dec
jns
mov
lea
mov
xor
cli
mov
add
insl
push
push
out
jns
xchg
out
cmp
jmp
xchg
xchg
xchg
adc
pop
pop
pop
inc
xchg
and
mov
fisttps
dec
mov
popa
insl
mov
pop
clc
jns
inc
shl
add
mov
lret
lods
cmp
push
mov
aaa
add
out
pusha
lock
mov
pop
notb
popa
lock
push
insb
sbb
dec
jmp
cs
test
push
inc
pop
mov
mov
pop
cmpsl
movsl
adc
loop
sbb
xchg
jge
push
adc
repz
jl
xor
or
outsb
outsl
ret
cmp
push
jl
movsl
inc
mov
cmp
jb
cmp
cmpsb
stc
in
sar
xor
sub
popf
or
test
out
mov
pop
mov
xor
arpl
out
lea
rcl
int
movsb
das
inc
repnz
dec
or
std
dec
pop
mov
mov
add
add
mov
push
push
sbb
lret
sahf
clc
clc
iret
sahf
out
cli
nop
arpl
sub
push
mov
clts
cmp
mov
xchg
sbb
aad
jle
cmc
out
and
and
add
mov
fisubrs
adcb
inc
jle
notl
ds
jno
sti
std
cwtl
insl
inc
inc
fmuls
jbe
dec
jmp
mulb
pop
inc
rcl
push
sub
and
imulb
rep
call
pop
and
imul
adc
in
popa
dec
enter
imul
sub
adc
pop
push
gs
popa
inc
inc
popa
rdmsr
aam
adc
mov
xchg
push
push
mov
out
clc
sahf
fs
stos
cli
and
dec
cwtl
xor
in
xchg
jnp
ljmp
cs
leave
gs
xchg
inc
stos
xor
fstpt
repz
sub
inc
mov
mov
ficoml
into
dec
mov
nop
dec
inc
sbb
pop
sub
jg
or
jne
ffreep
imul
hlt
pusha
aam
int3
incl
pusha
popa
mov
jae
pop
mov
and
dec
shrb
xchg
inc
inc
xchg
out
xor
mov
enter
sets
xor
mov
bound
cmp
mov
and
gs
or
dec
scas
pop
xor
pop
movsb
fdivrp
jmp
push
loope
int
test
pop
pop
inc
js
out
sar
pop
sub
inc
test
mov
insb
lods
out
push
cld
imul
scas
cmp
or
add
jbe
nop
cmpsb
fcmovne
mov
jns
mov
inc
sub
in
mov
sbb
daa
mov
adc
rolb
das
call
repz
pop
xchg
lcall
int
push
mov
imul
push
adc
push
jns
xchg
and
aam
test
roll
pop
ljmp
inc
lea
enterw
jge
scas
int
cmc
mov
stc
mov
movsb
dec
pop
nop
lock
popa
push
mov
lods
mov
bound
adc
jo
data16
pop
mov
lret
test
pop
push
out
ds
mov
cmpsl
lea
push
dec
cmpsb
test
pop
dec
xorl
loopne
into
mov
ret
lock
cltd
sbb
or
dec
outsl
sbb
jecxz
and
pop
mov
add
sub
sub
lcall
gs
in
call
jp
movsl
cld
inc
or
js
fsub
lahf
test
out
shr
dec
int
mov
lods
in
pushf
scas
sub
sub
xchg
jnp
jnp
cmp
jmp
cwtl
test
icebp
adc
inc
into
xor
xchg
lea
mov
adc
pop
push
mov
or
popf
jp
pop
fisttps
pop
jmp
into
cmp
add
leave
xchg
sub
pushf
mov
outsl
sbb
stos
int
ror
xchg
insb
jmp
or
in
jno
pop
aas
inc
push
lds
dec
shr
outsb
cld
pop
cmpsl
into
lea
ret
pop
mov
fdiv
sub
dec
mov
loopne
jp
fadds
mov
jbe
cld
pop
adc
test
pop
pop
xor
pop
ds
mov
imul
in
mov
fidivl
adc
aam
in
fiaddl
add
cltd
mov
js
stos
pop
ds
movsl
mov
imul
mov
loopne
test
jbe
jmp
jno
mov
sbb
loopne
test
andl
xchg
mov
daa
aas
mov
scas
jnp
fwait
hlt
push
xchg
cltd
jge
roll
arpl
jmp
in
pop
mov
fstpl
xlat
jl
cmp
mov
pop
lods
mov
test
inc
mov
aad
lea
setae
add
dec
lahf
xchg
sub
scas
cmp
xor
jno
inc
out
pop
or
cmpsb
loope
roll
test
push
jecxz
add
push
inc
or
mov
stos
ja
mov
push
cmp
loope
xchg
xchg
ja
sub
inc
int
pop
add
mov
xchg
push
std
xchg
mov
mov
push
loope,pn
or
mov
iret
jb
mov
cmpsb
lea
fs
sahf
or
aam
cwtl
mov
sti
push
dec
mov
das
adc
stos
lcall
dec
jbe
stc
sar
outsl
xchg
mov
dec
xor
jb
mov
call
js
add
test
in
mov
xor
lods
mov
mov
inc
fistps
inc
cmc
imul
nop
push
repnz
bound
xor
cs
adc
jmp
push
sahf
rcrl
scas
sbbl
sbb
ficoml
dec
cmc
xchg
sahf
dec
outsl
nop
sti
rol
sahf
inc
jmp
bound
scas
sahf
icebp
in
sbb
xchg
inc
inc
aad
xchg
mov
cli
jb
pop
orb
mov
dec
xchg
xchg
inc
lcall
dec
rcrb
lcall
and
dec
pop
mov
mov
push
or
repnz
aas
jecxz
out
ljmp
frstor
jne
cld
or
imul
mov
pop
cmp
adc
cwtl
repz
aas
or
cmpsl
mov
clc
mov
arpl
enter
and
push
push
push
fsubs
rcll
bound
movsl
or
push
addr16
iret
icebp
inc
xlat
lods
in
stos
add
jne
cmp
mov
and
push
sub
push
push
fcmovnbe
cld
cmpsb
mov
jmp
adc
faddp
push
fldl
ds
and
dec
mov
mov
mov
int
stos
fldl
lods
mov
mov
cmp
lods
xchg
mov
push
fdivrp
aas
out
inc
sbb
xchg
jl
sub
pop
lahf
nop
mov
dec
ret
xchg
hlt
movsb
stc
mov
jmp
lods
pop
push
cmpsb
outsb
mov
aad
stos
mov
inc
jno
bound
clc
orl
jecxz
in
scas
jg
mov
das
adc
jne
adc
and
and
rorb
sahf
mov
rcll
cwtl
std
sarb
xor
add
inc
test
push
sub
ljmp
jns
mov
inc
repnz
lods
cmpsl
cmc
lods
in
xchg
loope
fwait
data16
pop
insl
mov
shrb
or
cmp
shll
pop
xor
arpl
or
outsb
repnz
pop
inc
inc
out
stc
imul
jg
add
into
dec
ds
xor
out
mov
cli
cmp
push
sbb
icebp
and
not
push
cltd
add
dec
mov
iret
into
out
repnz
test
lahf
mov
inc
dec
sub
dec
dec
push
stc
mov
mov
lret
out
fwait
or
into
rcrb
push
mov
arpl
adc
lods
in
test
pop
int3
data16
sbb
and
fisttpl
inc
shr
adcb
mov
inc
test
sti
cld
shll
adc
mov
mov
push
repz
sahf
mov
outsl
xchg
or
pushf
cmc
lcall
movsl
call
jmp
sahf
add
jno
out
lods
notl
cmp
push
jg
mov
lcall
flds
jbe
lea
mov
dec
cltd
cld
cmpl
adc
push
cmp
icebp
mov
pop
xor
mov
cmp
enter
cli
inc
sahf
mov
fsubrl
idivl
test
adc
push
push
fs
in
cmp
add
test
rcrb
sub
adc
enter
js
inc
out
loop
push
push
mov
jnp
push
xchg
mov
adc
add
ret
jp
out
cmp
cmpsl
xor
enter
std
sub
mov
jns
and
sub
aad
push
jo
icebp
mov
lods
loope
cs
push
inc
adc
outsl
mov
jnp
or
fisubs
jo
daa
lcall
int
mov
add
push
shll
xchg
adc
xor
push
jmp
mov
mov
xor
jns
bound
pop
and
dec
scas
push
add
dec
clc
ljmp
jle
mov
inc
lods
scas
push
xchg
xor
push
mov
inc
lret
or
lcall
inc
cld
add
and
adc
outsl
les
in
fiaddl
fcmovne
rolb
lahf
lds
dec
stc
fcmovnbe
push
cld
xchg
add
iret
xchg
rcrl
lea
movsl
dec
in
cmp
int3
add
shll
addr16
or
test
inc
sub
adc
xchg
bnd
push
adc
mov
jmp
popa
stos
pop
pusha
mov
movsl
mov
nop
adc
call
dec
out
cmpsl
jb
cmp
sub
jne
sbb
pop
sahf
js
lret
mov
lret
and
mov
mov
enter
rcl
jl
das
ret
loop
dec
insl
sub
xor
mov
imul
int3
xchg
mov
inc
mov
push
lahf
lods
push
cs
or
pop
xchg
or
jmp
xor
adc
mov
rol
cli
dec
and
mov
orb
jp
test
xchg
out
mov
scas
dec
xor
pop
or
les
add
daa
pop
xor
fildl
dec
xor
lea
dec
cmpsb
cwtl
pop
or
in
out
sti
out
adc
lods
sub
ljmp
shrb
mov
dec
leave
arpl
int3
dec
aam
repz
int3
fcmovnbe
dec
dec
ret
pop
enter
std
sbb
cmp
mov
dec
push
mov
sti
mov
cli
xchg
incl
dec
add
jl
mov
cs
imul
cmp
add
into
pop
ljmp
xchg
popf
adc
lods
aas
lock
incl
xchg
aam
out
xor
mov
mov
xor
ss
into
pushw
add
xchg
ds
dec
inc
sbb
lds
sti
cld
adc
xchg
shll
das
clc
lea
imul
sti
aas
xor
int3
mov
nop
lcall
xchg
jle
lock
outsw
xor
pop
idivl
xor
pop
data16
arpl
ds
loop,pn
shll
dec
test
xchg
jg
jmp
popf
fwait
jp
outsl
adcb
mov
fisttpl
jo
ret
or
fwait
std
in
stos
adc
aas
cwtl
in
dec
mov
popf
xchg
sarb
pop
jo
jnp
xchg
lea
jge
sbbb
ret
and
jmp
mov
push
outsb
fimuls
nop
imul
outsl
cli
das
xchg
mov
dec
mov
stos
sbb
lcall
outsb
mov
enter
mov
pop
xor
gs
cli
stos
hlt
in
lcall
xchg
inc
dec
sti
xor
cmp
sbb
sbb
push
push
push
xchg
hlt
mov
std
jmp
push
cmpsl
cmp
cld
inc
jmp
in
push
jl
in
and
imul
mov
scas
sub
mov
or
or
sarl
or
xor
in
ja
xchg
pop
test
xor
popf
cmpsb
push
sahf
xchg
push
pop
and
and
leave
sbb
sarl
cli
in
popf
mov
push
movl
ret
add
ljmp
jbe
jmp
into
rcll
xchg
test
aad
stos
ljmp
pop
or
push
imul
pop
xchg
cltd
fsts
mov
lahf
imul
and
in
leave
shrb
shlb
sbb
lret
fisttpll
and
cli
imul
mov
sbb
lock
out
ret
cmc
adc
incb
dec
test
popa
inc
cmpsb
mov
or
mov
adc
mov
rorl
repnz
pop
jmp
ljmp
pop
add
sub
jo
mov
mov
adc
inc
dec
aas
or
xchg
sbb
movsl
testl
inc
shll
cwtl
sbb
cmp
jb
ljmp
xor
jmp
cmp
inc
and
and
lret
in
cmpsl
cmp
mov
in
fucomi
jp
fwait
sbbb
mov
add
fists
xchg
xchg
mov
dec
ljmp
test
les
jmp
sti
xor
cmp
das
add
subl
mov
sbb
push
and
gs
cld
out
roll
sub
inc
popa
push
pop
sbb
or
lock
inc
lahf
lcall
rorl
ss
mov
push
xchg
sub
mov
cs
xchg
sbb
xor
cmp
leave
fisubl
adc
inc
sub
dec
add
xchg
mov
mov
inc
jo
inc
fistl
sub
push
cmp
jb
movsb
pushf
sub
sbb
sub
movsb
ret
lret
adc
mov
fcom
data16
cmpb
xor
ss
push
adc
lcall
pushf
jg
shlb
sbb
divb
mov
jb
mov
sub
or
paddsb
in
scas
xchg
mov
lock
pusha
movsb
xor
cmp
and
dec
jmp
sub
out
stc
nop
xor
in
out
mov
push
int3
mov
in
inc
xor
int
imul
clc
dec
out
jp
push
test
mov
push
loop
jecxz
lock
mov
lea
rorb
mov
stos
fmuls
push
lods
push
mov
dec
aad
inc
rolb
jp
ljmp
in
xlat
pop
out
je
add
push
jle
les
andl
stos
xor
movsl
fisubs
sbb
or
repnz
mov
mov
imulb
popa
outsl
fcmovnu
xchg
xchg
xor
cmp
push
or
sub
iret
jmp
loopne
jmp
push
push
aam
test
sub
jnp
dec
push
and
mov
cltd
popa
out
dec
adc
inc
xor
icebp
pop
aas
shll
sub
mov
enter
jmp
icebp
inc
pusha
mov
out
xchg
fcoms
xchg
shl
ret
clc
clc
push
test
push
fwait
mov
popf
and
ret
lea
faddl
stos
in
pop
fs
xchg
jmp
scas
jl
push
mov
mov
fwait
sbb
adc
into
ljmp
dec
sub
insb
adc
bound
dec
test
data16
int
aas
xchg
or
cmpsb
insb
push
mov
sbb
shl
negl
ljmp
call
cld
jecxz
and
xchg
outsl
and
inc
ljmp
mov
ret
in
lds
out
fsubrl
aas
decb
test
adc
fs
pop
mov
out
aaa
movsb
jbe
jmp
mov
in
add
cs
mov
add
jne
cmpsb
adc
ds
pusha
cs
orl
mov
adc
mov
fcoms
push
fcomip
fmul
int
sub
mov
or
idiv
popa
fs
jmp
gs
cmpsb
cltd
mov
inc
lret
mov
cmpb
inc
xor
mov
inc
into
ret
sbb
mov
shr
pop
pop
out
notl
mov
gs
mov
xor
js
and
mov
stc
sbb
int3
sub
push
in
das
dec
sar
push
sahf
jno
or
inc
sub
xor
ss
loop
out
faddl
iret
dec
rcll
or
sarl
or
sub
jbe
jmp
insl
lret
fucomi
inc
les
lock
imul
jecxz
rcr
pop
repnz
mov
push
xlat
cmp
outsl
lahf
lcall
adc
shl
inc
jg
fsubrs
xor
movsl
jnp
leave
jno
pop
or
push
pop
fsubrs
ja
mov
idiv
adc
cld
fiadds
mov
in
lcall
add
inc
in
pop
mov
cmp
aas
cld
or
pop
adc
int3
shrl
dec
jmp
mov
das
outsb
inc
shl
loop
aad
add
lret
js
lods
xchg
stos
out
mov
mov
sahf
data16
or
icebp
and
mov
ja
mov
mov
mov
jns
sub
adc
divb
lret
cmpsl
out
daa
mov
fwait
sub
shlb
jno
testb
inc
mov
ljmp
or
adc
sub
lods
adc
inc
dec
mov
fldt
jae
int
jns
popa
fwait
jns
fdivrp
lds
js
mov
xor
add
into
shlb
loopne
adcl
mov
inc
lret
fidivrs
icebp
call
pop
jp
xchg
inc
add
cmp
or
dec
roll
dec
jp
xchg
add
roll
sub
in
ret
insb
aad
inc
add
ret
push
or
xchg
call
pop
nop
jbe
aam
sub
mov
inc
mov
push
stos
fcmove
sub
inc
lret
lcall
xchg
push
ss
jl
int
pop
stos
push
xchg
dec
xchg
cmpsb
les
out
lcall
push
mov
mov
and
and
lea
je
pop
xchg
cltd
gs
hlt
jbe
sbb
fwait
int3
jp
inc
mov
jo
xor
andl
adcl
in
push
aam
and
push
rcl
pushf
ss
test
shr
ja
xchg
ja
jecxz
xor
nop
mov
aad
mov
or
insb
pusha
xlat
cltd
mov
sarb
mov
movsl
mov
push
out
aaa
dec
or
outsl
mov
inc
adc
jl
std
fs
aas
out
cmovp
mov
jo
pop
or
mov
mov
xor
inc
xor
jb
pusha
inc
cmpsl
popa
je
cwtl
adc
mov
mov
std
push
and
out
xor
scas
fldenv
dec
gs
das
lcall
mov
iret
add
lret
sub
pop
pop
mov
movsb
aaa
mov
into
push
mov
dec
daa
xlat
sahf
popf
popf
add
mov
cmp
cmp
jb
sahf
push
xchg
lahf
shrb
sub
fwait
cwtl
cltd
dec
inc
in
jg
xchg
ret
rolb
scas
sub
imul
les
push
xor
xor
push
push
mov
mov
std
dec
icebp
jnp
ss
pop
dec
dec
pop
mov
jb
movsb
push
inc
push
int
iret
sti
pop
or
sub
pop
jno
mov
jecxz
dec
int3
pop
cltd
js
addr16
xor
insb
jo
cmpsl
popf
in
nop
lahf
jmp
xor
mov
dec
sbb
jne
cmp
xchg
bound
dec
adc
push
mov
fs
mov
xchg
sub
nop
or
and
hlt
sbb
cmp
mov
jg
pushf
insl
and
stos
inc
imul
inc
popl
and
gs
arpl
mov
lcall
into
xchg
mov
popaw
xchg
add
test
inc
dec
int3
out
popf
loope
cmp
mov
jle
lret
lods
push
ret
sub
xchg
stos
mov
pushf
ljmp
sbb
fs
xor
jb
int
lods
sub
adc
lret
icebp
xchg
psubb
xor
lock
cs
fst
xchg
dec
cmpsb
movsb
push
fcmovu
or
ds
mov
rorb
imul
out
mov
jne
arpl
orl
fdivrl
out
cmp
test
inc
inc
and
xlat
fwait
sbb
in
int
xlat
xchg
mov
mov
jnp
incw
mov
push
sti
add
xchg
outsl
push
sub
xchg
xchg
xchg
and
loope
and
repnz
mov
int
sub
cmpsb
shrl
fldt
and
in
xor
fcmovne
mov
negl
inc
lahf
xor
rcrl
adc
jbe
scas
mov
mov
or
fnsave
into
pop
mov
pop
je
out
mov
add
dec
push
insl
sub
mov
sbb
mov
pop
incb
inc
or
and
cli
and
push
stc
test
mov
ljmp
fdivr
test
mov
add
test
cltd
add
mov
pop
out
xor
xlat
ja
dec
push
ja
shl
xor
mov
adc
loop
daa
pop
push
mov
xchg
das
cli
out
and
cwtl
mov
lds
pop
les
das
push
add
int3
cwtl
xchg
jge
xor
int
jl
mov
mov
xchg
cmpsb
mov
call
pop
adc
push
jmp
jl
sbb
jne
mov
fnstcw
or
nop
loop,pn
std
push
and
mov
adc
ss
stos
sbbl
call
add
scas
adc
push
xor
inc
movsb
imull
mov
shrb
mov
xor
add
xor
dec
sub
fs
pop
cmpsb
or
or
lock
testb
lcall
mov
xchg
popa
adc
xchg
lea
push
rol
outsl
int
test
pop
scas
test
xor
out
mov
lret
pushf
jae
cmp
aaa
cmpsl
scas
push
or
xchg
push
lret
push
in
pop
sbb
icebp
mov
dec
aad
mov
lret
xor
mov
push
clc
out
dec
out
pushf
clc
rorb
dec
imulb
scas
add
add
stos
jg
rclb
mov
into
jmp
into
adc
sbbl
les
cmpl
push
push
or
sbb
cmpsl
push
out
clc
popa
nop
push
xchg
nop
cmpb
jnp
xchg
sbb
jne
mov
sub
sub
xchg
cltd
cli
pop
and
push
fs
shr
sub
adc
push
mov
cltd
in
repnz
inc
das
pop
or
push
mov
mov
icebp
loope
stc
jge
movsb
push
out
scas
in
xor
push
mov
push
lahf
insb
ja
push
pop
pop
sbb
push
jne
outsl
ds
mov
in
jnp
in
dec
jmp
inc
mov
jmp
sbb
jle
pop
nop
inc
aad
lahf
out
je
aad
js
ja
arpl
ret
outsb
inc
cmpsl
inc
repnz
xchg
cmp
mov
ds
loop
xorl
mov
jbe
movups
push
hlt
inc
inc
pushf
xlat
jmp
sbb
xor
movl
sbbl
mov
push
mov
sbb
and
rcr
mov
jecxz
pop
adc
notb
mov
add
push
add
jo
call
stc
lret
sbb
pop
stos
mov
mov
inc
bound
mov
mov
jg
lret
or
fs
xlat
adc
mov
and
lret
sbb
jle
inc
fisttpll
clc
lcall
popa
les
ror
js
xchg
xchg
fiaddl
fistpll
imul
push
call
push
inc
push
adc
movsb
out
outsb
adc
xor
icebp
enter
ficoml
inc
inc
mov
push
dec
pop
mov
xor
out
inc
xor
js
push
add
sbb
push
or
stos
xchg
das
inc
push
jno
pop
cltd
es
sarl
or
popl
or
push
cmp
hlt
mov
aaa
outsl
and
nop
add
mov
bound
aad
push
and
arpl
cltd
mov
out
adc
xchg
xchg
dec
fwait
adc
or
insl
dec
aaa
sbb
jns
loopne
jmp
sti
adc
cvtdq2ps
xor
popa
loope
out
sub
rcll
cmp
pusha
adc
and
xor
out
in
pop
adc
fistpll
sti
sbb
notb
int
cmp
inc
inc
adc
mov
xchg
test
push
shlb
std
pushf
inc
mov
xchg
and
add
mov
loopne
push
cltd
add
xchg
mov
out
fsts
rorb
fs
ss
dec
cmc
in
filds
iret
ljmp
pop
xchg
icebp
popf
dec
dec
daa
cmpsl
xchg
out
mov
iret
mov
xor
add
xchg
xchg
sbb
lcall
cld
mov
out
loop
cmp
out
shrb
xor
inc
into
pop
rcrb
xorb
xchg
fcomps
jb
imul
dec
in
mov
adcb
popa
fiadds
rcll
popf
daa
xor
test
and
cmp
mov
mov
gs
mov
pop
pop
cmc
sub
inc
fs
mov
pop
lcall
ret
les
rcl
jbe
mov
pushl
gs
outsb
sbb
jne
inc
ret
cltd
inc
imulb
sub
push
dec
aas
jo
mov
dec
jp
add
inc
mov
fdivrl
cmp
and
outsl
fdiv
sbb
xchg
pop
xchg
xor
fadds
inc
sar
test
or
movsb
mov
adc
and
testb
push
ljmp
xlat
imul
or
je
enter
mov
insb
pop
imul
aam
lret
lock
sub
mul
movsb
fcmovu
or
add
xlat
incb
sarl
sbb
js
jge
inc
dec
cs
pop
mov
xchg
inc
jae
loop
je
inc
xchg
dec
aam
add
xchg
mov
dec
loop
pop
in
mov
insb
xor
jge
jecxz
hlt
in
lret
inc
test
mov
add
mov
mov
sub
into
loopne
adc
jno
insl
xchg
push
and
sub
insb
dec
push
mulb
mov
cmp
in
rorl
push
sub
fwait
out
out
loope
mull
dec
pop
push
rcrl
mull
pop
test
inc
dec
cmp
pop
cmp
test
adc
ret
or
in
icebp
ja
pop
loopne
jmp
mov
dec
xchg
dec
jnp
xlat
es
in
icebp
fstps
jbe
ffreep
xchg
int3
icebp
pop
dec
daa
mov
sbb
cmc
scas
jmp
cmp
das
adc
xchg
cmp
inc
in
xchg
mov
or
mov
sahf
push
cmp
leave
leave
push
outsl
mov
jbe
mov
pop
scas
leave
inc
and
cltd
fistpl
lock
xchg
sub
in
dec
inc
pusha
inc
jbe
adc
xchg
imul
mov
aaa
bound
into
xor
add
out
cli
xlat
pop
outsb
cmp
iret
mov
add
push
push
adc
xor
popa
push
addb
sub
in
jecxz
sarb
orb
loopne
fldl
inc
out
aaa
js
cwtl
cmp
mov
jg
int3
int3
dec
sub
popl
mov
mov
insl
lock
xchg
adc
inc
and
mov
rol
js
add
popa
push
aas
mov
or
aad
insl
or
mov
dec
mov
scas
jmp
int
mov
shll
pop
cmpsb
ja
addr16
shlb
dec
adc
pop
mov
lea
stos
dec
pop
loopne
push
xchg
or
pop
sbb
xorl
fcompl
jns
pop
clc
xchg
inc
loop
sbb
push
repnz
sahf
sub
push
hlt
mov
dec
and
sub
test
outsl
sbb
repnz
sbb
aas
xlat
pop
push
mov
cmpsb
adc
jl
sub
insb
inc
int3
adc
in
adc
push
jg
dec
mov
xchg
pop
mov
lret
movsl
rcrb
insb
ss
push
mov
shlb
pop
outsb
push
push
mov
jnp
scas
xor
mov
xor
movsl
hlt
int3
mov
cmp
dec
sahf
std
mov
pop
out
out
pop
stc
roll
or
add
jg
add
int3
xor
pop
loope
mov
dec
cs
cli
mov
jne
jg
adc
or
ss
orl
outsb
out
mov
imul
insl
dec
clc
xor
push
cli
out
xchg
cmpsb
dec
cmc
mov
mov
mov
push
es
xor
mov
fdivr
out
cli
mov
add
scas
add
in
sar
scas
xor
or
aaa
push
in
jbe
mov
xor
stos
jns
xor
data16
das
pop
lds
test
subb
cli
repnz
call
loope
popa
ret
dec
sti
loopne
jne
xor
shll
into
mov
fildl
inc
addl
push
dec
jb
mov
push
xchg
inc
sahf
outsb
in
sbb
std
xor
aad
icebp
popa
xlat
pop
dec
and
mov
jg
fwait
xchg
pop
sbb
mov
fwait
mov
inc
push
popf
rolb
imul
scas
cmp
movsl
cli
std
cmc
rorb
inc
add
push
mov
orb
xor
mov
scas
inc
ja
add
enter
cmp
iret
jbe
aam
negb
mov
xchg
lods
mov
pushf
outsl
dec
lods
lret
outsl
popf
or
rcr
test
call
push
xlat
cmp
inc
push
xlat
xor
into
loopne
int3
xor
mov
enter
jno
or
fld
xor
sbb
movsl
pop
pop
insl
call
nop
jb
sub
xlat
idivl
dec
test
and
or
jmp
or
xor
adcb
cmc
cmp
lret
mov
fildl
inc
int3
pop
adc
rorl
aam
pop
rcrb
xchg
jge
jl
jnp
lods
adc
inc
popa
pop
jbe
add
ffreep
mov
incl
sub
idivl
jbe
jg
push
out
pop
mov
inc
out
mov
insb
push
jmp
cmp
in
fbld
push
out
jbe
jmp
inc
das
xchg
dec
dec
dec
adc
cmpsb
push
or
adc
cmp
fimuls
dec
mov
enter
out
out
arpl
push
popa
inc
sub
daa
mov
jmp
out
sahf
sar
jecxz
lods
fmul
rep
insb
iret
cmpsb
dec
sbb
dec
outsb
pop
aad
es
iret
xchg
popa
add
rorl
mov
or
insb
out
dec
xchg
out
cmpsb
push
mov
pop
inc
jo
mov
mov
push
sahf
add
inc
mov
mov
cli
or
mov
dec
and
insb
jecxz
and
add
add
pop
xchg
lods
push
data16
mov
xchg
jnp
mov
sti
xor
ljmp
dec
ret
or
mov
mov
xchg
subl
out
testb
out
or
repnz
lcall
in
cwtl
adc
add
jns,pn
dec
fisubrs
lret
scas
mov
aas
hlt
loope
jno
push
nop
push
cmc
fs
stos
pushf
pop
jmp
leave
cmp
lret
lock
jg
je
cld
cmp
push
les
cmp
fstpl
push
xchg
cmc
ljmp
ret
jecxz
xor
jbe
pop
jp
je
popa
sarb
mov
or
dec
adc
jl
daa
clc
stos
outsl
lcall
and
adc
lea
add
mov
sti
xor
fisubs
jg
mov
push
add
movsl
std
mov
xor
insl
cmp
sbb
in
mov
paddsb
test
push
pop
mov
movsl
dec
push
test
test
popf
sti
lahf
mov
inc
push
and
mov
stos
popa
push
mov
sub
xor
sub
in
movsb
xor
int
add
cmp
cmpsl
bound
test
mov
xlat
inc
adcb
push
lock
imul
jns
das
iret
push
dec
loopne
into
ds
insl
or
mov
adc
movsb
mov
sti
mov
inc
or
imul
cli
xor
xchg
out
in
popa
xchg
out
or
out
and
incb
loopne
add
push
test
or
dec
fdivl
mov
add
jno
sub
xor
xchg
xchg
adc
mov
bound
xlat
push
lds
mov
in
daa
mov
xchg
cli
or
incb
test
lret
lds
jmp
xlat
xor
notl
lock
or
push
lcall
xchg
pop
mov
xchg
loope
jbe
jmp
push
ret
arpl
lods
cmpsl
inc
dec
loopne
or
jns
clc
jecxz
fistl
jo
mov
cmp
sahf
out
push
or
out
xchg
orl
pop
push
jp
jne
movlps
mov
push
mov
fwait
jge
test
dec
xor
clc
xor
mov
jb
xor
sti
inc
inc
push
or
mov
mov
mov
in
out
mov
add
addr16
shlb
lahf
mov
loope
out
outsl
jle
mov
pop
repnz
iret
je
push
movsl
pop
mov
mov
out
cmpsl
fisubrl
inc
xor
mov
add
sub
or
test
cmc
lcall
mov
xchg
ret
sbbl
ljmp
add
cmp
or
adcl
aas
test
mov
fbld
insl
mov
bswap
inc
mov
push
ja
mov
sbb
cmp
shlb
mov
sbb
scas
imul
or
vlddqu
inc
stos
cmpb
pop
scas
and
sti
mov
mov
lret
xchg
fwait
scas
jg
lret
out
neg
sbbb
test
and
lret
ja
pop
xorl
adc
mov
pop
jmp
mov
fisttpl
aaa
pop
jl
pusha
aas
jge
dec
test
lea
int
mov
xchg
mov
or
addr16
lods
mov
push
xchg
xor
inc
sbb
jge
or
pop
dec
pushf
xchg
outsl
cmp
lock
pop
inc
xchg
sub
jbe
les
pop
and
pop
pop
xor
je
mov
jae
aam
mov
mov
sbb
stc
pop
out
sarl
push
andb
jbe
roll
scas
stos
mov
jcxz
in
outsb
mov
xchg
aad
inc
hlt
cmp
aad
bound
xchg
xor
movsl
sahf
jo
push
cmp
xchg
ja
popa
cmp
shr
or
icebp
dec
cmp
in
adc
xor
push
aam
push
ds
jmp
mov
inc
adc
fdiv
mov
xchg
push
dec
adc
sti
ret
dec
or
dec
rcll
sub
movsb
lods
push
sub
xor
rorl
je
jg
lods
push
push
int
inc
push
mov
femms
arpl
pop
outsb
sbb
dec
gs
xor
and
or
add
test
add
dec
add
xchg
sub
jo
rorb
inc
jno
stc
sar
psrlw
push
or
stos
add
or
push
dec
push
push
cmc
xor
mov
inc
jb
loopne
gs
das
dec
inc
push
push
xor
xchg
pop
out
add
stc
xchg
lods
sub
mov
dec
push
outsb
or
fdivl
int
dec
jae
lcall
rorl
int
fdivr
das
push
mov
in
call
xchg
pop
push
fsubp
pop
stos
loopne
pop
inc
loop
pop
pop
in
xor
jmp
push
sbb
adc
rcll
xor
xor
clc
inc
aam
dec
pop
mov
in
call
xchg
rclb
scas
stos
jle
or
and
ljmp
adc
push
xchg
movsb
stos
test
addl
fmull
popa
mov
inc
mov
cltd
or
mov
or
adc
or
mov
leave
or
in
cltd
in
xor
dec
or
data16
xchg
dec
jmp
clc
sbb
push
movsb
shr
pop
push
jge
dec
sahf
loop
lods
xor
adc
mov
addr16
jmp
xor
xlat
pushf
pop
imul
arpl
icebp
lds
xchg
fs
dec
std
cmp
incl
mov
xchg
sahf
call
ror
mov
xchg
xor
push
in
pop
ljmp
lahf
inc
insl
fistpl
sahf
test
xchg
dec
xchg
push
call
ljmp
push
add
test
lods
xor
or
movsb
inc
into
cmpsl
rclb
xchg
outsb
xchg
jmp
insb
loope
int3
inc
pop
pop
add
jg
mov
push
inc
insl
cmp
mov
jl
inc
mov
into
leave
ja
outsl
xor
cmp
xchg
addr16
sub
testl
sarb
lods
or
and
sbb
ja
push
mov
orb
lods
lods
icebp
mov
push
pushf
mov
in
into
jecxz
lret
or
adc
inc
add
and
sbb
aad
add
cmp
dec
dec
sbb
repnz
xor
ds
leave
mov
dec
imul
sti
int3
xchg
and
cli
popa
xchg
repz
lea
inc
push
xchg
sbb
pop
mov
lret
inc
mov
out
neg
sbb
test
push
rcl
mov
scas
imul
mov
iret
sbb
xchg
loop
pop
imul
sar
sbb
jnp
fcmovnbe
jns
xchg
loop
paddsb
cmp
xchg
aad
and
jg
pop
lods
je
cs
xchg
pop
mov
sahf
inc
shr
push
pop
int3
out
pop
and
addr16
fwait
mov
mov
mov
dec
sarb
mov
inc
cli
arpl
mov
xchg
xor
pop
adc
je
jle
jle
dec
jnp
loop
push
enter
inc
movl
je
lods
cmpsb
fidivrs
push
xor
inc
cmpsb
and
add
repz
arpl
jmp
jne
mov
ret
xchg
xchg
ds
push
sub
movsl
fidivl
sbb
xor
fcmove
fldenv
mov
ljmp
xor
sub
in
pop
into
jne
inc
push
xor
mov
xchg
enter
adc
sub
sub
add
push
or
out
xor
cmp
xchg
test
cmp
push
adc
jno
ljmp
add
imul
shrl
push
xlat
popa
fwait
ret
lds
std
adc
outsb
aam
xchg
mov
dec
jmp
xor
add
je
jb
lea
call
out
add
iret
scas
jns
fcmove
cmc
insb
cs
dec
and
push
movsb
xchg
jecxz
cltd
mov
shlb
pop
lcall
inc
mov
mov
push
jns
push
popf
pop
lcall
stc
jl
arpl
imul
jmp
or
pop
dec
mov
fwait
push
test
sbb
add
lret
dec
cld
cs
lahf
xor
sbb
push
pop
jns
mov
shrl
or
push
or
jmp
cmp
ljmp
stos
jne
pop
xchg
les
loope
mov
cmp
shll
xchg
bound
es
pop
adcb
fidivs
jle
cmp
lret
dec
xor
xchg
jmp
pop
cld
cs
adc
xchg
imul
cmp
or
int3
mov
fdivr
cmpsb
sbb
add
pop
sti
outsb
inc
mov
movsb
stos
push
xchg
in
xor
aad
inc
mov
adc
rcrb
pushf
cmp
jge
ja
adc
sbb
int3
jmp
cs
jl
paddsb
ficomps
rcll
out
push
add
jae
xor
out
mov
test
fnstcw
notb
inc
cmpsb
aas
or
adc
or
cmp
and
lret
lock
jo
cmp
aaa
enter
push
shll
sbb
fisubs
inc
je
outsl
test
xchg
dec
mov
popa
outsb
mov
and
bound
push
imul
ret
xchg
imul
xchg
pop
mov
xchg
push
stos
sub
ror
outsl
mov
xor
data16
xchg
insl
lret
dec
test
int
xchg
cmpb
mov
pusha
aam
push
dec
mov
inc
rcll
push
imul
mov
mov
in
inc
sbb
stos
fs
pop
mov
fsub
xchg
sub
gs
fcmovnu
inc
push
jne
or
faddl
or
sub
mov
jns
mov
inc
sub
jns
jecxz
inc
repnz
out
lods
nop
jle
push
xor
cmpsl
jge
pop
jns
out
insl
mov
mov
gs
add
fptan
push
addr16
push
leave
push
cmp
dec
xchg
cmpsb
mov
and
mov
loopne
dec
imul
mov
rorb
addr16
js
fsubrl
sub
shlb
xor
inc
pushw
or
xchg
gs
insl
pop
add
and
sahf
ret
xchg
mov
pop
dec
mov
xchg
xchg
stos
setle
popf
outsb
call
inc
sub
mov
fidivrl
mov
mov
in
mov
ret
test
std
pusha
lods
das
leave
push
loop
mov
cmp
mov
xor
in
ficomps
imul
not
push
iret
pop
scas
fstpl
mov
rcrl
lret
add
inc
imul
aad
and
popa
cld
mov
inc
xchg
mov
movsl
pushf
adc
fsubrs
test
jg
lahf
jae
cmc
pop
sub
add
out
hlt
in
mov
cltd
pop
xlat
movsl
cmp
push
cltd
aad
inc
adc
pop
xor
xor
jle
fidivrl
fimull
inc
mov
loope
dec
lret
sbb
mov
mov
cld
jns
out
cmp
jge
inc
and
push
int
adc
rcrl
stc
stos
adc
fsts
lahf
mov
cmc
sbb
dec
lock
ret
xchg
dec
adc
imul
mov
or
mov
repnz
ret
mov
and
ss
sub
cmc
inc
lods
push
jns
push
stc
xchg
add
jnp
sub
aas
lods
jl
enter
scas
add
sahf
outsb
imul
shll
mov
push
push
sbb
je
popa
inc
ljmp
stc
neg
sub
mov
movsb
sbb
popa
or
cmp
dec
stc
mov
into
cwtl
das
call
imul
xchg
xlat
outsl
jl
stos
cmpsl
outsb
lock
sbb
mov
push
ret
jno
and
and
xchg
andb
scas
es
test
ja
repnz
mov
jb
xchg
aad
enter
mov
push
out
push
mov
adc
lret
outsl
mov
push
fisubl
lods
data16
sub
sarl
xchg
mov
movsb
adc
pop
sbb
icebp
mov
out
cwtl
mov
out
lock
repnz
add
repnz
out
test
xchg
into
inc
out
cwtl
push
inc
xchg
pop
xlat
enter
mov
shl
lea
add
cltd
pop
xchg
imul
dec
inc
sti
dec
push
mov
cmp
push
inc
frstor
lret
out
ljmp
pop
cmp
mov
lcall
ljmp
dec
nop
xchg
data16
xchg
out
popa
add
shll
adc
xor
out
or
out
ja
xor
in
clc
fwait
aaa
rolb
add
mov
inc
sub
lea
inc
mulb
mov
adc
test
outsb
cli
int
fs
or
add
xchg
cmpsb
sbb
xchg
xchg
icebp
aad
cs
bswap
sbb
lret
cmp
rdmsr
inc
je
fwait
cwtl
cmc
adc
adc
cmp
loop
cltd
adc
add
cmp
fucomip
pop
cs
repnz
scas
jns,pn
mov
inc
mov
jle
fiadds
xchg
xchg
jl
scas
inc
repz
mov
cmc
push
and
stos
scas
loope
xchg
sub
mov
ja
stos
inc
stos
mov
mov
into
push
hlt
jl
jl
push
add
negl
mov
xlat
iret
xchg
push
sub
in
xchg
and
out
mov
cltd
test
jmp
jmp
enter
inc
inc
add
popa
push
jg
sub
fsts
jmp
mov
add
int
cli
shl
js
pop
sbb
cli
xor
aaa
jno
add
mov
sub
test
add
sahf
xchg
pop
loope,pt
dec
imul
std
ljmp
lahf
sbb
les
dec
add
adc
cmp
mov
xor
fucomp
pop
push
outsl
mov
arpl
mov
mov
lods
repz
in
mov
movsl
cli
ljmp
or
push
inc
in
jmp
mov
cltd
add
test
pop
lock
pop
sub
adc
pop
cmp
test
shrl
fstl
fsub
xlat
add
xchg
push
mov
lret
pop
adc
sbb
adc
fdiv
stos
in
inc
lods
inc
call
gs
lcall
push
push
mov
cmp
insb
push
ficoms
xor
inc
daa
out
dec
out
mov
dec
outsb
mov
xor
push
xchg
addb
or
ds
jno
xchg
dec
out
jmp
outsb
pusha
pop
nop
in
popa
repnz
shlb
rolb
push
cli
jmp
or
mov
dec
add
jmp
push
sbb
dec
lcall
mov
lock
movsb
gs
mov
ja
xchg
lahf
mov
addr16
xchg
push
push
les
sub
xchg
cmp
iret
mov
shrb
jmp
mov
repz
mov
ljmp
pop
or
lcall
mov
dec
push
adc
push
mov
inc
dec
outsb
jnp
lods
das
adc
jecxz
scas
dec
iret
aam
pushf
dec
outsl
mov
lock
pop
push
out
sub
lea
adc
xchg
cmp
sti
decb
sbb
hlt
dec
in
add
adc
or
cld
fdivrl
loope
sahf
sbb
push
aad
in
dec
stos
popa
add
mov
popa
xor
lods
std
shr
mov
pop
mov
push
xchg
xchg
jge
scas
jle
mov
mov
aam
inc
vphadduwd
out
mov
pop
mull
mov
push
xchg
fisttpl
push
cmp
add
decb
iret
nop
jb
sar
xchg
jmp
shrb
sbb
cltd
sub
das
iret
xor
mov
mov
aam
push
rclb
lret
out
push
ljmp
mov
or
ljmp
lea
xor
stos
or
sarl
stos
ret
ret
outsb
dec
mov
lea
dec
xchg
push
xor
cli
inc
mov
lock
das
add
mov
bts
stos
inc
xchg
into
dec
mov
jmp
sub
int3
scas
mov
ljmp
xchg
mov
in
mov
mov
fwait
xlat
inc
mov
pop
orl
insl
hlt
cmpsb
inc
sub
sbb
dec
pushf
fwait
rcll
in
add
lret
push
xor
shll
mov
clc
ss
leave
mov
stos
mov
int
dec
ds
iret
mov
shr
xchg
std
in
icebp
pop
rcll
repz
cmc
xor
mov
js
stos
std
xor
lods
hlt
cmc
testl
push
shlb
nop
inc
rorl
mov
or
aam
xchg
and
insb
mov
adc
xor
popf
xor
cmpsl
imul
stc
fisubrs
adc
movsb
sub
xchg
fstps
sbb
or
push
lods
fadds
jns
hlt
jns
xchg
lret
add
mov
mov
out
leave
cmp
ljmp
nop
add
xchg
cli
sbb
inc
xchg
jno
and
xchg
jbe
aaa
push
gs
push
movsl
mov
nop
jp
and
ja
inc
jne
cmp
std
loop
ret
cmp
scas
push
stc
push
nop
dec
jl
out
push
aam
mov
clc
lea
dec
or
sbb
mov
inc
lcall
dec
fcmovbe
fstl
data16
aaa
pop
dec
jmp
cltd
pop
dec
fistpll
arpl
sarb
cmpsl
jge
repnz
dec
mov
outsb
nop
jle
ds
not
jae
jle
xlat
ret
push
jp
mov
stc
xor
xorl
xchg
adc
or
into
dec
push
int
pop
ret
das
push
je
or
in
fisttpl
jne
inc
fisubrs
jg
dec
push
cmpsb
push
lods
mov
push
mov
mov
jnp
clc
adc
sbb
pushf
mov
or
das
jb
sbb
cmpsw
jmp
mov
dec
test
aad
imul
sub
in
fsubl
mov
in
scas
popa
pop
stc
mov
leave
mov
in
cmp
sbb
fsub
sub
push
pop
cmp
mov
xchg
xchg
andl
leave
int3
xchg
adc
xor
leave
stos
xchg
jecxz
dec
fs
push
stc
fisttpl
fwait
lret
loope
push
dec
cs
mov
jmp
rorb
js
data16
sub
inc
or
test
pop
mov
mov
lcall
push
adc
ljmp
mov
and
xor
pop
cwtl
sbb
jmp
jmpw
lds
outsb
popa
out
fs
ja
xor
in
add
out
push
adc
fsubrs
push
push
or
es
sub
out
or
cld
sub
sub
add
shrb
adc
in
je
cmp
inc
cmp
adc
imul
jne
add
cmp
sahf
out
sti
shrl
incl
jle
mov
push
jnp
aam
sahf
shll
js
push
insl
cmp
rcrb
xchg
insb
xor
xor
pushf
push
xchg
xor
jne
or
ja
mov
ret
xor
clc
cli
pop
add
std
popf
adc
fs
in
mov
mov
mov
movsl
sbb
stc
ret
jbe
push
mov
int3
cmp
cltd
mov
mov
cmovbe
mov
ret
or
outsb
enter
and
insb
js
jbe
ja
adc
xor
aas
fidivrs
push
movsb
out
fidivl
pop
or
sub
xchg
icebp
mov
mov
loop
xor
out
mov
sbb
std
mov
xorb
je
adc
cld
js
aam
push
or
jge
jno
cmc
xor
xchg
daa
sub
pop
sahf
jmp
push
push
out
add
add
or
shlb
in
not
sub
mov
pop
pop
inc
aas
in
insb
ret
inc
into
rorl
xchg
jnp
mov
into
imul
dec
movsl
jp
and
push
mov
mov
inc
mov
fidivs
adc
sbb
cld
jle
into
in
scas
in
out
xchg
sbb
fimuls
out
cmp
cvtps2pd
or
repz
cltd
mov
outsl
cltd
or
neg
inc
cld
pop
inc
xor
out
push
ss
push
scas
push
outsl
ljmp
jecxz
in
adc
inc
xchg
shrb
imul
and
add
cmp
fnsave
mov
inc
xchg
fdivp
cmp
adc
popf
sbb
push
mov
cwtl
xchg
adc
xchg
lret
and
push
daa
pop
jmp
push
and
int
cmp
jbe
inc
adc
xchg
xor
cmp
lcall
loopne
add
mov
cmpsb
pop
stos
pop
in
mov
lret
loopne
adc
cmp
xor
or
cwtl
mov
jmp
inc
and
mov
xchg
mov
rcrl
pop
imul
or
lahf
jno
mov
mov
inc
cs
push
imul
mov
idiv
insl
cmp
dec
cmp
mov
push
mov
mov
add
loope
je
and
adc
ljmp
rolb
mov
cmpsb
cmc
sar
pop
pop
adc
inc
sub
lods
xor
cmp
js
sahf
js
push
jmp
xchg
jle
movsb
xchg
cwtl
push
xor
lret
daa
arpl
loope
std
movsb
notb
or
out
insb
jbe
and
mov
enter
xchg
ljmp
out
movsb
fsts
mov
das
aas
popf
and
sbb
sbb
xor
mov
sbb
xchg
or
fdivrl
mov
xchg
xor
icebp
xor
mov
cli
pop
mov
mov
xchg
or
dec
mov
push
sbb
sub
jns
dec
xor
cs
lods
cmpsl
pop
sbb
xor
or
pop
xor
insl
cmp
jns
xor
imul
or
mov
lods
dec
js
xchg
or
ljmp
xchg
adc
stos
mov
setb
or
inc
imul
add
ja
enter
inc
fdivrs
inc
fwait
adcl
sub
movsl
inc
popf
popl
leave
cwtl
pop
cli
and
inc
rol
notl
arpl
add
les
mov
xchg
popf
mov
jecxz
into
xor
pushf
pop
xchg
add
bound
inc
xor
lret
rorb
sti
cmpsl
cmpsb
push
xchg
out
imul
add
xor
ret
xchg
icebp
or
scas
paddd
mov
rolb
add
and
cli
mov
cmp
mov
add
mov
sub
ljmp
pusha
mov
loopne
inc
mov
sub
imul
xor
pop
mov
int3
xchg
es
sti
or
sbb
mov
mov
ja
push
cmp
sub
inc
jmp
sti
stos
mov
adc
dec
mulb
nop
imul
adc
cmp
cltd
movsl
and
lahf
popf
push
sahf
xchg
scas
jecxz
movsl
mov
jb
and
pop
inc
xchg
rcrl
shll
or
push
sub
mov
into
mov
inc
inc
lahf
scas
mov
mov
xchg
aas
jnp,pn
ljmp
popf
push
fstpt
enter
mov
cltd
test
fdiv
rcrl
mov
cld
adc
sub
and
xchg
scas
cmp
cmpsb
add
xchg
outsb
insb
loope
imul
rorb
mov
add
scas
in
rcll
cmc
lock
pop
imul
adc
xchg
in
mov
outsb
mov
sahf
push
mov
rorb
arpl
inc
xchg
lock
cwtl
xlat
fcoms
xor
dec
cld
nop
js
sti
es
push
pop
cli
adc
mov
lds
test
or
out
loopne
mov
lea
stos
loope
adc
insl
mov
and
mov
cmp
jo
aam
jp
out
xchg
and
jge
add
mov
or
dec
cld
out
add
mov
cltd
push
or
pop
lahf
xor
ja
loopne
xchg
xor
mov
pusha
rcrl
xchg
lods
mov
lea
pop
push
cmp
mov
adc
enter
scas
outsl
push
inc
xor
in
fsubrs
pusha
mov
push
daa
xchg
movsl
jmp
daa
push
xchg
cs
inc
sub
sub
cmp
enter
dec
into
loope
cmpsl
mov
repz
mov
mov
movsl
cmpsl
shrl
xor
loope
sub
inc
lods
cmc
insl
lret
ds
arpl
imul
and
cmc
outsl
xor
or
repz
int3
jge
add
gs
leave
mov
stc
les
cmpsb
call
inc
push
out
cmpsb
pop
add
adc
cmpl
sub
mov
lods
push
lret
jp
mov
sbb
sub
aaa
sub
shrl
push
xor
jmp
pop
rcll
shll
lret
mov
rcrb
fisubs
or
pop
frstor
jmp
fdiv
jecxz
or
lock
out
out
and
hlt
add
ljmp
pop
out
cmpsb
push
jmp
dec
jnp
inc
sub
lcall
jmp
pop
dec
push
pop
mov
push
and
push
cmpsl
and
add
nop
fbstp
jb
dec
lret
mov
out
ja
inc
inc
mov
sti
inc
jecxz
sub
pop
mov
scas
add
iret
dec
sbb
arpl
mov
mov
out
dec
adc
xor
or
jbe
dec
mov
xlat
loope
sub
nop
pusha
lcall
fimuls
adc
pop
clc
xchg
into
in
push
mov
pop
dec
nop
scas
int3
jmp
push
sub
nop
fcmovbe
mov
cs
and
cmpsb
pop
repnz
pop
mov
fsubl
fmul
subl
pop
cmpsb
dec
jecxz
xchg
cmc
xor
in
stc
fistps
loopne
cmpsb
inc
es
aad
xchg
mov
and
adc
push
imul
arpl
outsb
mov
negb
dec
mov
in
rol
stos
ss
jl
sub
pop
aas
mov
push
iret
stc
ds
jecxz
mov
push
sbb
repz
mov
mov
push
arpl
mov
mov
mov
test
push
arpl
or
mov
or
sbb
clc
shl
jl
jmp
xor
leave
push
push
cwtl
mov
test
push
lret
je
push
push
fisubrl
mov
adc
pushf
push
cmp
cmpsb
xor
loope
lds
data16
sbb
out
fs
fcomp
pop
aad
push
lea
dec
mov
lods
pop
leave
push
arpl
xchg
pop
xor
out
bound
push
es
sub
and
adc
scas
aad
test
sub
adc
sbb
cmp
imul
leave
add
rcll
stos
cmp
adc
xchg
je
jp
push
push
loopne
gs
cmp
cld
ret
aaa
inc
push
cmpsb
cmpsb
fmull
lods
lahf
push
insb
testb
mov
mov
dec
cli
pop
jl
pop
mov
jb
shl
sti
jns
push
insl
lcall
call
in
mov
push
mov
or
fistpl
iret
pop
xor
dec
push
add
arpl
imul
pop
dec
lods
xchg
cmc
andb
in
testl
pop
notl
test
leave
adc
xchg
hlt
arpl
pop
scas
bt
mov
jge
movsl
data16
lea
xchg
adc
mov
adc
in
mov
imul
in
dec
scas
pop
fisttps
test
sti
lea
inc
cltd
shrb
sbb
repnz
inc
stos
leave
rcrl
xchg
mov
bound
push
xlat
dec
in
lea
lret
movsl
cld
inc
stos
rol
push
xor
leave
mov
psrld
xchg
xchg
int3
cmpsl
cmpsb
mov
repnz
adc
insb
jle
loope
mov
inc
lret
xchg
ja
test
dec
insl
pop
sarb
cmp
push
std
jb
add
stos
push
mov
sub
fcmovne
add
stc
pop
xchg
stos
xchg
cmpl
mov
inc
cmp
jecxz
stos
add
scas
xor
pushf
outsb
pusha
lcall
idivb
pop
arpl
mov
xor
lret
mov
icebp
cltd
lret
jae
test
cs
dec
aad
dec
repz
mov
test
mov
cmpsb
add
lcall
mov
int
dec
sahf
mov
inc
xchg
xchg
imul
cmpsb
shrb
jno
les
pop
fidivrl
in
mov
mov
fsubrp
cmp
mul
in
inc
adc
fstpt
mov
in
adc
xor
adc
mov
roll
imul
mov
mov
rorl
xchg
dec
outsb
lods
push
cmp
push
cltd
adc
adc
gs
aam
inc
adc
mov
and
xlat
std
jnp
jbe
loope
dec
xchg
add
iret
push
aaa
push
push
and
mov
pop
ljmp
loop
xchg
fs
jbe
inc
movntps
xchg
insl
or
xchg
aaa
gs
subl
xorl
xorl
mov
push
xbegin
inc
sub
jbe
add
sbb
push
dec
fcmovb
mov
mov
jbe
pop
mov
clc
fidivs
in
pop
loope
or
rcrl
cmc
ficomps
cmc
out
popa
cmc
out
sbb
cmc
int
mov
mov
add
je
sbb
outsb
push
int
je
lret
fs
lret
rclb
movsb
in
and
xor
mov
iret
cltd
sub
jmp
orb
int3
flds
sub
fnstenv
mov
sbb
shlb
xor
movl
xor
jns
inc
pop
push
or
mov
xchg
leave
jne
pop
jle
pop
test
mov
lea
xor
mov
nop
push
add
nop
push
jb
ret
push
inc
cltd
push
xchg
mov
dec
dec
mov
cmp
dec
push
lea
popf
rorl
add
add
shrl
repnz
xchg
xor
lahf
push
je
ficomps
je
shll
lret
lcall
outsl
inc
fnstenv
sahf
adc
sub
cmp
lods
out
loopne
mov
outsb
xlat
mov
insb
rcl
es
mov
and
push
in
dec
imul
int
inc
adc
shlb
lods
outsl
push
iret
mov
mov
jbe
stc
test
clc
mov
sbb
pop
inc
int3
push
xchg
int3
mov
sbb
jno
mov
sub
out
mov
loop
sub
xchg
mov
fisttps
add
fmuls
push
xchg
addb
jb
stos
xchg
or
xchg
repnz
stos
add
xor
ljmp
aas
pushf
xor
outsl
and
push
adc
or
sbb
add
fmull
daa
aad
pushf
test
divl
mov
sub
outsl
xchg
push
stos
fbld
ja
mov
jae
lcall
xchg
mov
mov
inc
out
mov
in
aam
push
sbb
fisubs
push
dec
push
add
or
mov
pop
xchg
dec
loope
pop
dec
out
arpl
or
bound
cmpsl
out
jbe
inc
pop
jo
sub
sti
popf
adc
sub
fst
loop
mov
pop
sub
ss
rcrb
inc
sub
movsb
push
xchg
mov
mov
push
push
in
repnz
or
adcl
cmpsl
pop
adc
add
mov
mov
clc
mov
and
mov
mov
lock
int
dec
xchg
inc
pop
std
mov
ljmp
scas
inc
outsb
xor
inc
push
fs
aam
lock
pop
repz
fsubp
inc
jp
jg
cmp
add
out
lods
out
adc
mov
inc
mov
mov
sbb
xchg
and
cs
fst
inc
xchg
mov
push
pushf
lods
and
enter
aam
int3
fidivs
mov
xchg
repnz
pop
loope
imul
scas
sbb
je
jnp
dec
in
pushf
in
icebp
sbb
inc
or
aad
or
and
push
mov
loope
inc
mov
pop
dec
lock
or
jle
cmp
mov
and
popf
mov
dec
out
xchg
dec
push
pop
imul
jb
es
stc
imul
or
insl
cmp
adc
mov
out
lea
stos
xchg
movsb
and
icebp
cmpsb
inc
xchg
insl
test
cli
jo
xor
mov
dec
xchg
push
xchg
adc
out
jb
ret
xorl
inc
inc
add
pop
jle
outsb
mov
add
cwtl
push
sbb
adc
adc
jg
adc
shlb
mov
add
std
movsl
pop
shrb
out
mov
rclb
out
cltd
xchg
outsl
stos
insl
sbb
int
mulb
sbbb
imul
xor
icebp
mov
jne
data16
jg
mov
pop
mov
pop
jne
sub
ljmp
ds
inc
jne
jmp
das
lods
daa
into
pop
cs
xchg
cmp
loop
insl
imul
jnp
add
fidivl
gs
faddl
jbe
movsb
push
outsb
push
dec
es
ljmp
adc
into
fdivrs
out
mov
xor
mov
std
mov
add
andl
add
vcvtss2sd
push
daa
xchg
xchg
and
lds
push
adc
movsb
mov
jb
mov
mov
dec
inc
aad
mov
xchg
mov
inc
lahf
push
inc
outsb
inc
push
pop
pop
mov
imul
test
insl
push
xchg
lret
test
xchg
arpl
shl
fisttps
dec
mov
mov
mov
shlb
pusha
test
outsb
leave
cwtl
repnz
arpl
lahf
mov
insb
dec
ja
aas
pop
insl
lcall
jl
shlb
mov
xchg
adc
push
mov
sub
push
mov
and
data16
in
jns
jl
lea
into
in
mov
arpl
or
mov
mov
inc
mov
cli
adc
mov
test
push
sub
jp
outsb
push
cld
mov
jno
loopne
dec
aas
out
in
popf
mov
xchg
not
jo
arpl
cwtl
add
xor
cmpsl
in
rorl
shrb
sbb
test
test
icebp
jns
pop
addb
out
out
test
sahf
fcompl
fisttpl
inc
cld
xchg
lcall
inc
xchg
sub
pop
out
mov
int
cmp
mov
roll
lret
mov
cwtl
sub
add
jecxz
not
enter
dec
inc
xor
lcall
xchg
adc
add
jo
mov
push
into
out
loopne
js
loope
xchg
call
call
sbb
out
xchg
mov
mov
pushf
aas
stos
call
shll
mov
mov
sub
cmp
lcall
inc
in
dec
fcmovu
push
lea
cltd
pop
rcl
sub
pop
in
clc
cmp
lds
clc
out
jo
push
lahf
idivb
xor
in
cmc
sbbl
mov
inc
fcoml
mov
xor
leave
leave
cwtl
dec
mov
xchg
inc
popf
pushf
imul
movsl
xlat
test
movsl
test
in
adc
fs
mov
shrl
shll
stos
xor
mov
dec
lds
sub
into
cld
jno
in
data16
adc
mov
movsl
das
or
dec
sbb
mov
cmpsl
adc
xchg
out
ss
dec
add
adc
out
sti
stos
jmp
test
cmp
jbe
gs
lcall
pop
dec
mov
sti
xchg
fdivrp
mov
mov
movlps
lcall
xchg
inc
jbe
or
pop
adc
mov
orb
pop
data16
xchg
mov
add
mov
adc
sub
xchg
leave
popa
fistpl
int3
sahf
xlat
in
adc
pop
jmp
push
dec
js
jns
push
inc
out
inc
mov
outsl
inc
jle
adc
pop
cs
jmp
add
add
mov
repz
imul
add
addr16
mov
push
int
enter
dec
ljmp
cltd
sub
push
out
popf
lret
mov
cs
stos
push
jp
pop
xchg
inc
lret
aas
popf
push
lret
inc
loope
jns
fdivrs
out
pop
xor
sub
popa
inc
scas
or
pop
dec
ljmp
int
mov
mov
jg
movb
lcall
adc
or
mov
cmpsl
mov
popa
fnstcw
adc
mov
push
loope,pn
addb
push
mov
inc
sub
adc
mov
ret
xchg
cli
xchg
jnp
cmp
pusha
add
arpl
xor
in
nop
mov
aas
dec
call
adc
mov
enter
jecxz
inc
inc
enter
ljmp
sub
es
pop
imul
or
repnz
into
nop
mov
insl
fsubl
int
rcr
cmp
outsl
rorl
mov
xchg
cs
setnp
or
pushw
ja
leave
ffreep
int
mov
notb
cmp
js
jmp
aaa
push
push
mov
xor
xor
shll
xchg
in
xor
mov
daa
mov
vpsllq
in
cld
fxch
sbb
test
adc
stc
test
cli
movsb
aaa
lret
mov
xor
cmp
dec
and
in
std
dec
insb
jp
fstps
daa
cltd
xor
aam
addr16
movsl
mov
push
inc
xor
aad
loopne
arpl
xlat
xchg
mov
outsl
mov
mov
shrl
xor
lret
mov
jmp
lahf
les
cmp
dec
dec
mov
mov
xchg
cli
lea
stos
aam
fistpll
jp
nop
sbb
push
divb
das
int3
adc
std
arpl
fistpl
xchg
fistps
cmp
cmpsb
fnstenv
and
fld
dec
clc
or
inc
test
aaa
lret
cmp
insl
fs
stc
dec
lods
xor
iret
pop
mov
sub
push
mov
and
and
in
outsl
xchg
bound
lock
data16
mov
cmpsl
fnstenv
fcmovu
xor
aas
cmp
xchg
inc
cmp
fsubrs
addr16
cld
xchg
cld
ja
and
in
jae
push
ds
adc
inc
and
mov
adc
inc
dec
sbb
aas
adcb
mov
add
orb
or
ret
ficomps
dec
jmp
loopne
add
jns
les
aaa
cwtl
insl
xlat
jnp
clc
int3
push
iret
roll
call
adc
shlb
ret
inc
dec
imull
es
push
out
fstpl
pop
mov
into
dec
or
mov
rclb
mov
lret
push
in
dec
inc
jbe
fcmovbe
pop
dec
push
stos
lahf
into
add
push
adc
add
inc
dec
test
negl
push
lods
stos
or
and
test
fldcw
lea
jp
out
jg
mov
cmp
rol
xchg
setb
sbb
imul
jle
lock
xchg
or
inc
mov
arpl
nop
mov
push
clc
add
dec
aas
push
lock
popa
jb
mov
xchg
negb
ds
or
add
push
inc
mov
icebp
lret
pusha
dec
sub
dec
sub
push
cs
add
push
lcall
inc
xchg
icebp
or
leave
mov
arpl
adc
lahf
lret
push
or
fst
insb
arpl
jmp
cwtl
push
insl
js,pn
push
or
push
cmpsl
push
or
dec
lcall
int
in
or
push
inc
cltd
mov
loope
fimull
jmp
lret
lock
arpl
pop
pop
popa
push
filds
push
arpl
adc
stos
stc
dec
pop
stos
jmp
jg
je
insl
and
outsb
test
inc
aad
push
cmpsl
cmc
mov
push
cmp
xchg
dec
xor
adc
arpl
jmp
xor
xor
arpl
or
js
pop
mov
pop
fistpll
cmp
push
loop
xchg
sub
or
xor
into
in
pusha
mov
xlat
call
stos
or
dec
adcl
stos
inc
popl
jns
pop
and
xchg
sub
adc
push
sbb
leave
dec
cwtd
mov
clc
sbb
mov
jno
add
mov
aam
or
outsl
sbb
and
dec
and
jmp
dec
loopne
fldl
in
cmc
pop
stc
test
push
sub
cmpsb
mov
subb
jmp
repz
jne
int3
std
out
pop
push
mov
sahf
push
sbb
pop
jne
xchg
xchg
int
shl
xchg
popa
lret
call
sub
fimull
add
cwtl
out
andb
sahf
dec
pop
lcall
push
clc
xor
dec
inc
mov
xchg
out
movsl
sub
ret
sti
test
lahf
enter
xchg
ljmp
or
jmp
xchg
pop
call
xor
aam
leave
pop
and
dec
data16
mov
adc
or
fcomi
xchg
sub
icebp
push
xchg
cmp
dec
and
mov
xchg
insb
enter
stos
or
fcmovnb
mov
mov
jb,pn
jg
sub
add
lret
dec
mov
int3
push
inc
mov
movl
bound
dec
out
sub
inc
or
je
jecxz
aam
and
pop
add
adc
bound
repnz
negb
dec
adc
bound
lea
arpl
mov
ficoml
xchg
dec
adcl
and
imul
out
push
cli
xchg
imul
insb
mov
push
xchg
mov
repnz
ret
stc
or
mov
cli
hlt
cltd
fnstcw
fnsave
and
lret
iret
cmp
sbb
jne
adc
sahf
or
mov
cli
dec
cmpsb
adc
mov
xchg
jg
mov
gs
xchg
jge
stos
inc
jp
dec
sahf
push
add
and
xor
lea
fildl
inc
inc
or
pop
cld
lret
cmpsl
inc
and
cmpsb
fimull
scas
lret
in
test
jno
rep
lds
out
cld
xor
movsb
adc
cmp
or
adc
bound
xchg
dec
mov
call
mov
insl
cmpsb
fwait
mov
testl
adc
jmp
inc
and
add
pop
xor
cltd
rcll
test
mov
cwtl
sub
nop
jp
mov
clc
inc
xchg
negl
outsb
insb
out
sub
dec
jp
imul
repnz
inc
cmp
dec
nop
rolb
sti
inc
pop
into
jb
inc
cmpsl
jmp
xor
add
insl
adc
mov
ljmp
xor
inc
add
jecxz
inc
iret
fadds
push
inc
stc
pop
sub
push
mov
cld
inc
mov
lock
jae
dec
in
inc
mov
adc
and
addb
xchg
cwtl
push
xchg
sbbl
shll
rolb
or
xor
roll
or
jmp
xorl
push
push
mov
lret
xchg
inc
xlat
movsl
xchg
cmp
mov
add
fmuls
into
push
mov
testl
jp
xor
fcmovnb
push
inc
sub
jae
sub
lods
rclb
jge
into
cwtl
stc
ret
mov
pop
insb
lock
mov
into
das
test
xor
pop
imul
mov
lods
adc
add
push
push
movsl
leave
ljmp
inc
in
add
and
mov
lock
stos
loope
push
lods
fidivl
dec
inc
out
mov
enter
push
fwait
xor
mov
sub
cmp
cld
icebp
dec
push
mov
sub
add
add
enter
xlat
dec
aam
or
das
in
roll
inc
xchg
fisubrl
cld
push
pop
adc
in
ds
push
fistl
and
mov
dec
lock
dec
cmp
jecxz
or
xchg
sbb
and
xor
out
in
xchg
out
xchg
bound
rolb
inc
or
xlat
loop
jecxz
addr16
fs
out
adc
sahf
push
inc
mov
ret
mov
dec
inc
or
push
mov
push
sub
pusha
dec
cmp
fdivs
in
lret
or
loopne
gs
stc
inc
dec
or
xor
jo
out
sub
lods
or
xor
out
nop
push
dec
adc
std
fdiv
sarb
lahf
mov
clc
pushf
mov
inc
outsb
pop
pop
cmp
or
test
push
lcall
inc
mulb
xchg
loope
std
lea
xchg
jmp
jmp
incb
pop
cmp
xchg
mov
fdivrp
xchg
push
int3
stos
xchg
ret
xchg
and
cmp
pop
xor
jns
stos
cs
aam
mov
outsl
pop
fmull
in
cmovg
ss
mov
dec
ss
push
xor
cld
imulb
xor
subl
pop
xchg
cmp
aad
and
fimuls
pop
inc
add
inc
cmp
test
mov
imul
sub
cmp
mov
xor
loop
lret
inc
inc
jae
ljmp
int3
sbb
shll
jmp
cwtl
dec
xor
iret
in
repnz
jge
cmp
cld
addr16
fwait
pop
mov
xchg
jmp
lods
insl
es
mov
or
xchg
bound
dec
ljmp
pop
movsb
push
jmp
dec
mov
mov
cmp
or
adc
push
pop
adc
add
pop
insb
rorb
jmp
xchg
lahf
cwtl
bound
xchg
mov
adc
mov
pop
hlt
adc
sahf
into
xchg
sbb
push
sub
arpl
mov
lcall
inc
clc
cmp
leave
int3
clc
adc
lock
aam
dec
sub
pop
add
pop
pop
lahf
xchg
rorb
movsb
xchg
adc
outsl
repnz
xlat
push
add
sti
sahf
daa
inc
in
jbe
or
xchg
roll
adc
dec
dec
int3
push
pop
popf
repz
push
icebp
sub
push
cmp
pop
push
imul
mov
and
cmpsb
rep
stos
ss
fldt
inc
ss
push
arpl
imul
lret
mov
jno
mov
jns
and
push
adc
xchg
push
jno
aas
test
sbb
jne
inc
mov
lods
addr16
xor
andb
jns
test
das
adc
xchg
or
js
mov
pop
dec
aas
sbb
xchg
inc
cld
jne
jmp
cmc
pop
cld
jecxz
outsb
outsb
xor
idivl
jle
dec
cmp
into
xchg
clc
push
and
loop
inc
fs
les
ja
jnp
jp
add
arpl
xchg
sub
ja
push
inc
sbb
lods
jl
iret
jae
outsl
or
jmp
neg
add
movsb
fisubl
in
les
sub
xchg
aaa
xlat
js
jbe
pop
pop
xlat
sub
stc
xor
adc
jp
aam
push
fildll
inc
inc
imul
sub
mov
jns
nop
pop
addl
sar
fdivrs
add
or
jns
sahf
test
pusha
daa
jp
fdivl
bound
ljmp
lds
mul
xchg
ds
loope
ret
push
es
mov
aad
lahf
aam
sub
pop
jle
add
xchg
iret
out
mov
inc
fdivrl
mov
or
and
jae
jl
push
in
in
push
mov
or
imul
insb
mov
xchg
jmp
lcall
out
iret
xchg
ljmp
das
outsl
mov
stos
or
pop
xor
aad
in
mov
mov
loop
ja
sqrtps
jae
mov
xor
div
sbb
das
pushf
jno
outsb
mov
dec
pop
enter
mov
cmp
xor
sub
cld
jmp
je
pop
popf
lcall
leave
inc
mov
lahf
fisttps
dec
dec
and
fwait
dec
push
mov
add
shlb
inc
xor
xchg
ljmp
cmp
xchg
push
mov
adc
pop
ret
movsl
inc
push
movsb
sub
loope
inc
xchg
dec
or
outsb
mov
pushf
mov
ficoms
jle
mov
lret
sahf
push
mov
push
fdivs
mov
mov
mov
iret
pop
lahf
xchg
mov
sub
fucomip
pusha
imul
cmp
add
jg
mov
cmp
insb
mov
add
sbb
ret
stos
dec
subb
lret
nop
inc
cmp
jnp
notl
push
and
lcall
dec
lods
cwtl
dec
popf
dec
jne
repnz
add
hlt
and
xchg
das
sub
addl
outsb
in
or
mov
faddp
xchg
push
pop
xchg
xor
mov
pusha
adc
xchg
repnz
arpl
arpl
mov
push
mov
pop
pop
imul
addr16
int
mov
cltd
aam
inc
rorl
inc
dec
jp
pop
cmpsb
cmp
divl
pop
mov
rolb
addr16
sub
and
mov
push
sbb
xchg
jge
dec
in
adc
xor
popa
or
lret
lret
fmuls
enter
push
inc
push
pop
mov
test
faddl
arpl
mov
jmp
push
push
mov
js
and
sub
jae
icebp
pop
and
sub
adc
testb
cmp
in
subl
mov
test
add
mov
or
lds
jmp
jae
adc
add
test
push
dec
inc
cltd
dec
shll
push
and
in
test
cmpsb
divb
aad
pop
push
das
shlb
imul
cmp
cmc
push
jns
push
call
sbb
aam
xchg
or
xchg
stc
inc
int3
xlat
adc
xchg
or
pop
xchg
addr16
push
xchg
mov
dec
xchg
lock
rorl
adc
lock
dec
mov
lods
dec
in
gs
out
pop
sbb
xor
into
data16
in
aam
popf
into
push
stos
or
inc
hlt
data16
add
push
push
lods
push
ja
clc
push
lods
push
rclb
push
mov
push
loopne
xchg
scas
ljmp
jmp
test
sub
inc
dec
mov
mov
loope
loop
imul
xchg
sarl
insl
inc
bound
pop
sbbl
ss
add
in
out
out
cmp
fs
in
lcall
js
jle
fs
push
pusha
inc
xchg
pop
pushf
pop
lods
ja
add
pop
mov
outsb
fsub
insl
xor
aam
xchg
push
cltd
stos
shr
and
nop
mov
inc
mov
jmp
and
fsubrs
fdivrl
add
repnz
cmp
repnz
mov
push
lock
arpl
int
mov
lea
and
cld
mov
xor
test
iret
loope
shlb
push
ficompl
adc
out
int
fiaddl
cld
or
out
sbb
clc
imulb
sarl
xor
shlb
into
in
cmp
push
lods
test
rcrl
jecxz
adc
and
dec
les
mov
jecxz
mov
fidivs
inc
ss
pop
adc
movsl
inc
dec
out
inc
push
dec
inc
incl
push
insb
js
mov
add
lods
dec
xor
sub
imul
xor
and
sub
adc
scas
push
pmulhw
and
dec
incl
dec
int
adc
dec
jg
inc
movsl
cmp
int
jle
das
cltd
shll
ret
out
adc
popa
push
dec
cmpsl
jno
jno
add
les
xchg
nop
fidivrl
sub
push
fmuls
fucom
add
imul
lahf
dec
pop
fisubrs
or
popa
repnz
in
std
sub
and
ljmp
out
insb
pop
rcll
push
in
push
loopne
mov
xor
cmpsw
pop
pushf
cld
inc
inc
push
hlt
aas
xor
cmp
notl
hlt
mov
inc
push
mov
mov
ficomps
push
cmc
sub
mov
pop
test
loop
cmp
add
cmp
xor
pop
das
jae
fldt
arpl
insl
into
push
lret
lock
sti
adc
cmpsl
in
mov
lods
cltd
movsb
mov
repnz
sti
ja
ror
iret
inc
mov
movsb
rcrl
aas
pop
fnsave
adc
jmp
out
push
int
xchg
neg
cltd
xchg
imul
imul
pusha
movsb
pop
lods
inc
dec
call
add
xor
insb
sub
cmc
popl
stos
pop
jge
test
fcoml
or
push
int
xor
cmp
xor
das
mov
cmp
lds
not
mov
sub
cmp
jp
pop
mov
int3
sarl
inc
mov
lods
fisubs
push
push
das
fs
jge
cmp
push
mov
xor
or
lret
je
cli
or
sbb
jl
loope
test
sbb
sahf
pop
movsl
pop
xchg
push
stc
fwait
dec
shr
idiv
or
inc
pop
pusha
std
into
cmp
loop
dec
fucompp
sbb
or
jnp
loope
adc
push
mov
in
xchg
fidivs
scas
pop
xchg
mov
push
clc
inc
mov
jg
and
lret
xchg
xchg
adc
jns
mov
adc
loope
popa
jnp
and
das
in
and
jno
xchg
popa
mov
jbe
fmull
movsb
mov
pop
and
push
mov
pop
push
mov
call
inc
mov
jle
xchg
aaa
xchg
stos
mov
movsb
xchg
inc
add
mov
mov
loope
out
out
inc
xchg
sub
in
push
in
jg
call
jbe
mov
cmpsb
sub
and
ljmp
rclb
pop
xor
lret
mov
rcrb
or
pop
inc
stc
pusha
loope
jle
lock
push
push
movups
cwtl
sti
adc
xchg
xchg
mov
iret
mov
lea
dec
mov
shll
adc
aaa
test
mov
pop
mov
cwtl
pop
sbb
stos
dec
hlt
sarl
inc
sbb
incl
xchg
xor
cs
lods
inc
lds
mov
scas
xchg
test
xor
jb
inc
fwait
dec
mov
in
mov
sbb
fs
pop
sahf
lock
test
fstps
lods
mov
sbb
cmpsb
out
sub
mov
fisubrl
or
insb
lods
jge
mov
fnsave
out
add
push
lret
and
xor
sbb
dec
pop
xchg
scas
or
jae
movsb
mov
arpl
movsl
jecxz
loope
into
insb
pop
push
movb
lea
stos
mov
into
lea
movsb
mov
and
es
jp
dec
cmp
movsb
fidivs
inc
rcl
add
cmp
loop
imul
adc
movsl
lahf
jnp
jecxz
xchg
xchg
or
xchg
push
leave
fldcw
ja
outsl
into
push
in
xor
xchg
jl
add
imul
out
faddl
xchg
xchg
push
movlhps
adc
mov
mov
adc
es
nop
bound
jnp
mov
jle
jecxz
and
shl
push
jmp
imul
add
sub
lds
add
test
aas
pop
insl
out
lahf
lret
movsl
dec
into
in
test
cli
jnp
push
sub
pop
lret
inc
xchg
shlb
popf
xorl
imull
xchg
loope
mov
mov
pop
int
dec
sub
aas
push
fs
ret
mov
fstpt
inc
fsubrs
inc
repnz
insl
rcr
and
mov
out
dec
cmp
vmovhpd
outsl
push
packsswb
or
or
mov
xor
fwait
out
clc
sbb
jg
call
adc
push
mov
cmp
outsb
xor
movsb
pop
sbb
loope
mov
push
add
push
mov
mov
jns
das
xor
call
or
leave
es
out
inc
inc
ret
push
mov
aam
out
jmp
ljmp
push
pop
js
sbb
orl
enter
lahf
and
mov
movsb
push
out
rorb
faddl
fmull
into
cmp
add
pop
lcall
dec
scas
negb
outsl
out
cmp
jns
mov
xchg
xor
sbb
and
inc
push
push
xchg
mul
and
gs
dec
cmpsl
fucomip
fldenv
rcrb
mov
out
cmc
add
push
xchg
pop
in
and
mov
popf
jnp
xchg
adc
fisubrl
mov
push
cmp
testb
mov
push
push
out
jle
mov
ss
test
pop
inc
xchg
inc
pusha
into
mov
cmp
cmp
iret
push
shll
or
cmp
scas
mov
pop
les
aas
xchg
jns,pn
inc
pop
mov
and
outsb
xchg
and
arpl
andb
and
dec
movsl
sub
push
push
jns
leave
dec
jecxz
fs
mov
sti
fucomp
add
insb
jmp
xlat
cmc
out
mov
out
aas
cld
arpl
imul
ret
ja
xor
bound
lods
lds
cmp
cmp
std
sbb
inc
rclb
movsl
cmp
pop
pushf
or
pop
add
and
and
mov
jno
push
push
push
and
imul
mov
mov
mov
pop
popf
ss
mov
outsb
loope
int3
aad
clc
hlt
mov
rclb
dec
xor
inc
add
xchg
stos
not
cs
push
lret
into
mov
rcrb
and
aam
out
shr
push
jbe
inc
cmp
imul
dec
add
cmp
add
aas
arpl
idivb
push
rolb
cli
jle
xchg
sub
jbe
mov
push
mov
addr16
lds
aaa
call
xor
cmp
mov
sti
aas
cmc
in
into
outsb
inc
jecxz
mov
in
imul
rcll
sub
jmp
aam
sahf
in
loope
stc
cmpl
xchg
js
mov
xor
xchg
cltd
or
dec
fs
push
outsl
push
mov
inc
rolb
popa
aas
and
or
push
sbb
dec
mov
jg
fwait
pop
in
mull
ror
sub
add
pusha
adc
popa
faddl
ja
mov
fucompp
gs
scas
push
cld
xor
iret
cmpsl
jg
nop
cvttps2pi
xor
or
sub
pop
sub
add
xor
sub
mov
cmpsl
lret
sub
stos
arpl
in
and
in
addl
mov
and
cli
out
sub
adc
xor
fbld
call
xchg
aam
leave
mov
sub
not
mov
mov
aam
inc
mov
call
lret
jp
inc
fisttps
mov
add
cmp
add
sub
adcl
orb
push
push
hlt
xchg
data16
scas
pop
loop
mov
xor
mov
fiadds
xor
pop
movsl
les
enter
outsb
cmc
push
or
pshufw
sbb
stos
negl
sti
lock
lret
int3
xor
cmpsl
push
gs
and
movsb
lock
in
jp
out
ret
jb
in
movsl
sub
fs
jmp
dec
push
mov
in
leave
cmp
pop
sub
daa
pop
adc
insb
jmp
lods
sarb
cltd
jnp
and
or
movsb
mov
pop
push
inc
xlat
ljmp
in
lods
xchg
cmp
rolb
pop
cmp
jecxz
rcr
out
sahf
push
mov
mov
int3
dec
in
add
inc
xchg
in
push
adc
fisubrs
inc
arpl
mov
pop
mov
mov
rol
sub
fs
jecxz
fisttps
mov
dec
into
sti
jmp
out
jnp
scas
test
imul
aaa
das
mov
cmp
sub
mov
ljmp
add
cmp
pusha
or
fistl
rorb
adc
das
mov
pusha
push
xchg
cli
pop
out
std
stos
inc
mov
inc
in
adc
mov
movsb
cmp
jl
inc
xchg
jae
int3
fldt
call
icebp
das
ret
xchg
pop
push
das
stc
cmp
mov
and
push
pushf
mov
push
aad
sub
xchg
add
dec
push
idiv
insb
cwtl
clc
lds
pop
in
aam
add
adc
pop
xchg
mov
shl
push
jb
xchg
push
push
rorb
data16
push
push
shrl
insb
bswap
call
pop
xor
ljmp
repz
loope
in
dec
dec
adc
ja
cmp
jp
mov
mov
test
sbb
jne
pop
jge
mov
hlt
push
push
addr16
addb
xchg
outsl
pop
in
jno
jmp
adc
shl
imul
in
fucomi
insl
and
out
xor
repz
gs
jnp
pushf
scas
stc
nop
xchg
adc
iret
or
xlat
call
cs
xor
inc
sub
negl
cwtl
icebp
das
fcmovu
adc
out
push
pop
imul
aaa
jmp
insb
icebp
jne
movsl
inc
dec
inc
int3
movl
inc
and
xchg
lock
cld
push
outsb
sti
fmull
loop
iret
inc
mov
mov
add
mov
cld
jne
dec
rorb
dec
loope
lret
and
fs
std
mov
jp
and
rorl
lock
mov
into
dec
xlat
movsl
mov
addr16
pop
fnstenv
mov
fwait
push
jae
sub
imul
sbbl
inc
mov
sbbb
mov
in
adc
sbb
cmp
popa
lahf
sub
pusha
hlt
imul
xor
sub
push
ficoms
ljmp
fldl2e
dec
xchg
mov
loopne
or
inc
push
iret
movl
jns
cltd
scas
push
mov
lret
or
push
cmp
pop
jp
or
mov
movsb
and
repnz
mov
push
jne
in
lea
fs
xor
cmp
and
ljmp
push
pop
jp
fcom
out
stos
mov
add
popa
mov
es
fidivrl
jmp
test
sbb
faddl
pop
push
mov
and
div
das
inc
dec
mov
push
rcrb
aas
shrl
lahf
int
xor
stos
cmp
test
or
jle
popa
jmp
out
rolb
test
xor
lds
notl
pop
xchg
shll
xor
dec
lret
negb
into
fistps
sbb
pop
adc
in
jp
xchg
inc
pop
push
pop
subb
repnz
inc
xchg
sbb
jmp
xchg
cld
push
jmp
jne
add
xor
pop
inc
data16
jne
and
mov
sbb
or
jg
rclb
xchg
cmp
adc
loop
sub
push
lods
out
inc
xor
xchg
ljmp
jecxz
loopne
lahf
xor
lock
xlat
and
mov
sbbl
in
insb
dec
sahf
mov
push
int
fcoms
dec
add
out
mov
movsb
inc
jmp
ret
movsl
shll
xchg
insb
insl
inc
pusha
or
cmpsl
clc
pop
pop
inc
leave
je
xchg
enter
unpckhps
cmpsb
jae
dec
imul
pop
push
add
inc
or
pop
push
fwait
nop
sarb
aaa
cld
push
sbb
jmp
mov
lea
adcb
xchg
pop
insb
or
daa
add
add
inc
push
shlb
mov
out
mov
adc
xor
dec
es
and
dec
add
jne
or
jg
idivl
and
add
push
jno
cli
test
es
sbbb
sbb
pusha
lahf
pop
movsb
je
mov
jp
dec
out
daa
push
into
pop
xchg
pop
lock
movsb
stos
dec
push
pop
push
push
xor
imul
sti
inc
sub
jmp
or
cld
and
repnz
fisttpll
negl
dec
call
movsb
xor
pop
jnp
test
addr16
jo
mov
test
popa
call
add
enter
add
mov
popf
xchg
lret
sub
or
pop
jl
sarl
sar
sbb
arpl
pop
pop
xchg
int3
out
dec
sahf
mov
fwait
sti
adc
fisttps
mov
aas
es
in
sahf
aam
mov
adc
dec
scas
xor
lret
cmpsb
imul
mov
into
xchg
into
std
push
push
push
fildll
sub
mov
out
inc
in
aam
mov
pop
loopne
aas
psubusw
loop
lret
js
rcrb
mov
fmuls
mov
jmp
les
sbb
pop
mov
lret
mov
iret
and
shll
mov
inc
out
mov
sub
aam
dec
in
stos
mov
mov
fists
clc
mov
into
jecxz
arpl
test
int3
fiaddl
nop
out
stc
lret
fstpt
rcrb
mov
shr
negl
add
testl
push
iret
push
inc
pop
push
dec
arpl
aad
lock
dec
shll
pop
out
lret
sub
les
inc
popa
nop
mov
mul
mov
adc
lcall
or
aaa
mov
test
add
inc
cmp
mov
ljmp
faddp
mov
out
insb
lcall
aas
orl
sub
cmpsl
push
in
pusha
xor
cmpsb
test
test
jnp
or
es
ds
inc
pop
jl
frndint
cmpsb
add
cmp
fstpl
mov
mov
add
iret
mov
xor
inc
in
jg
hlt
push
das
ljmp
cmp
jecxz
sub
jp
inc
mov
aam
dec
xlat
dec
or
sub
mov
add
push
pop
inc
outsb
xor
std
fwait
in
fwait
addb
loop
sbb
add
cltd
mov
fsubrl
cld
jno
xchg
cmp
repnz
cmp
daa
mov
mov
xchg
fs
sarb
sarl
jl
jnp
cs
lock
cmp
lds
cmc
rcr
stos
mov
mov
int
xchg
push
divb
push
jb
cmp
xor
out
call
pop
rorl
jnp
lret
push
call
leave
add
mov
fwait
push
lahf
mov
sub
dec
fcomp
inc
ret
pop
fisubrs
pop
xor
xchg
daa
aas
xor
xchg
fstpt
ss
sub
mov
jb
xchg
mov
in
xchg
mov
lret
mov
and
outsb
xchg
imul
push
or
push
xchg
call
fs
bound
fidivrs
pusha
paddq
in
lcall
fimull
pop
adc
arpl
xor
jmp
mov
aas
jl
mov
and
jge
cwtl
xchg
mov
mov
imul
jecxz
lret
sbb
popa
popa
xchg
push
insl
lds
mov
decl
pop
mov
push
cli
xchg
mov
push
fisubs
jns
scas
shll
dec
orb
pop
dec
rcl
mov
or
xorb
add
into
gs
adc
jbe
clc
mov
adc
dec
das
lret
mov
push
or
add
push
loopne
cli
shlb
jno
test
stos
loopne
fiaddl
popa
cmp
sub
pop
ds
aam
ret
pop
dec
adc
xchg
test
sbb
xchg
fwait
jae
subl
loopne
dec
dec
mov
pop
fs
add
dec
into
jae
jns
or
ljmp
dec
add
cmc
mov
test
sbb
in
sti
or
sbb
pop
arpl
xorb
das
inc
pop
mov
cmpb
xor
arpl
inc
inc
dec
movsb
insl
lock
nop
stos
notb
fisttps
js
push
fcomps
repnz
jno
jg
push
jno
push
mov
and
mov
mov
jnp
pop
or
pop
sahf
jnp
inc
outsl
push
in
pop
dec
xchg
sub
fists
xor
repnz
xchg
in
push
push
xchg
pop
jmp
xchg
movsb
outsb
pop
ljmp
fmuls
aas
mov
das
inc
xchg
ljmp
adc
fisubs
mov
int
xchg
sbb
xchg
xor
mov
xor
jmp
into
sbb
rolb
out
fcoml
imul
xor
ss
out
xor
les
idivb
outsl
into
mov
push
iret
das
inc
mov
sbb
ficoml
out
std
ret
sub
jp
pop
addr16
push
xchg
sbb
enter
lret
mov
ds
xor
sbb
mov
push
test
shrb
call
push
insl
sbb
dec
mov
add
dec
pop
das
pop
fisubl
insb
add
rcl
aad
pop
sahf
xchg
daa
jo
stos
shlb
push
mov
or
pusha
ret
cltd
mov
and
movsb
in
mov
xor
add
enter
xchg
gs
aad
out
rol
mov
repnz
lahf
dec
repnz
shlb
es
add
inc
aad
shrl
in
or
scas
cli
push
cwtl
cmp
repz
or
loop
mov
insl
sbb
xor
dec
sbb
daa
push
subb
imul
dec
cmc
bound
daa
inc
mov
jg
js
add
outsl
xchg
call
add
data16
jge
lret
jle
int
rcr
sbb
xchg
xor
test
insb
xchg
or
aam
scas
ret
add
fnstsw
push
cmpsl
or
call
addb
xchg
inc
pusha
sbb
pop
rcrb
add
push
inc
lods
push
stc
movsl
notl
jp
push
lcall
mov
xchg
mov
in
kunpckwd
or
lahf
fdiv
das
and
notl
subb
adc
jne
pop
std
sbb
jmp
nop
xor
insl
je
adc
or
push
dec
dec
add
xchg
loop
pop
inc
sbb
add
bound
ljmp
xchg
inc
idiv
pop
lock
das
dec
xchg
ss
adc
jne
adc
mov
cld
leave
xchg
push
adc
jbe
xchg
or
jnp
pop
xchg
jns
push
lret
xchg
mov
jae
jb
rorl
insb
xchg
sti
psrlw
mov
dec
or
jns
cwtl
jmp
dec
ljmp
dec
ret
add
and
sahf
xor
aas
inc
ja
xchg
das
pop
mov
or
lock
sbb
add
std
add
mov
sbb
dec
push
and
xchg
cld
cmc
jno
jg
jae
mov
xlat
add
cmc
ficompl
lret
sahf
dec
cmpsb
ljmp
mov
sbbl
inc
cmp
lahf
test
popf
push
stos
pop
dec
mov
fwait
push
testb
jns
xor
or
cmp
rcr
adc
add
mov
fsubs
jmp
mov
pop
sub
repnz
or
outsl
div
mov
fidivrl
or
popa
ss
in
mov
addr16
mov
cmp
ljmp
xor
jmp
aad
scas
leave
xor
adc
je
pop
aas
push
cmp
lret
pop
notb
outsl
sahf
in
dec
dec
pop
push
inc
dec
pop
lahf
lret
fs
dec
sti
fldenv
jb
xor
mov
mov
adc
fbld
mov
fwait
movsl
dec
sub
lods
fwait
jmp
and
or
into
pop
adc
loop
ljmp
jns
das
loope
ret
aas
push
jne
lret
ss
and
leave
xor
or
mov
mov
push
fcmovne
out
push
es
int3
lahf
sub
aam
add
bound
lds
sbb
fs
mov
add
push
mov
sahf
sub
bound
imull
lcall
mov
pop
jmp
xchg
xchg
add
push
in
and
mov
sub
dec
xchg
inc
arpl
mov
cmc
or
xchg
nop
push
movl
jns
or
bound
mov
imulb
sti
xchg
pop
pop
lret
pop
outsb
push
rcl
int
mov
pop
push
in
jmp
fwait
push
sub
insl
enterw
adc
jb
xchg
movsl
lods
aam
repz
push
insl
add
jb
cltd
or
push
daa
test
out
fidivrs
mov
fadd
lret
lret
ja
add
in
fiadds
pop
xchg
lock
and
hlt
and
dec
jge,pt
test
sbb
popf
xchg
leave
mov
xchg
add
pop
fsubrs
mov
dec
sub
int
ret
mov
ret
xchg
leave
add
shrb
adc
jmp
sub
xor
lcall
pushf
insb
std
push
push
ljmp
sub
mull
gs
xor
cmp
mov
lret
sti
out
fistl
je
andb
sub
testb
xlat
arpl
ret
rorl
push
jecxz
scas
push
cmpsb
fiadds
into
lods
loopne
shl
faddl
rcr
push
out
xchg
mov
xchg
aas
arpl
aad
and
sbb
adc
jne
xor
pop
mov
hlt
outsl
sub
stc
loop
cmc
or
mov
daa
push
mov
mov
addr16
add
cmpl
in
cli
adcl
or
lret
cmc
into
pop
dec
mov
xor
lret
shll
popa
das
stos
fdivrl
filds
sub
dec
push
out
mov
sub
test
jl
int
inc
mov
popf
sti
xchg
je
push
lret
mov
outsb
fstps
iret
inc
shlb
mov
jno
push
imul
dec
dec
xlat
push
jns
lret
mov
shrb
ret
cmc
ljmp
inc
test
cli
rclb
pop
insb
dec
dec
stc
loope
sahf
cmpl
mov
shl
inc
jns
loopne
sbb
inc
cwtl
dec
mov
imul
popf
mov
mov
sbb
scas
push
shrl
jo
xchg
add
iret
inc
sub
jae
jle
in
push
push
sti
in
sub
and
xor
and
mov
push
aas
adc
xchg
add
in
add
lods
xor
sbb
mov
daa
mov
push
stc
dec
or
movsb
outsb
inc
jmp
mov
das
dec
xor
inc
shrb
inc
dec
inc
ss
or
pushf
adc
lret
mov
loopne
sbb
push
insb
int3
jl
adc
sub
jbe
cld
nop
aas
imul
dec
sub
ret
mov
bound
das
addl
jecxz
mov
sub
sarb
bound
xor
aas
mov
or
cmp
insb
dec
addr16
xchg
cs
int3
dec
ret
sub
repz
imul
std
inc
fistps
hlt
mov
in
test
pop
ret
adcl
lret
dec
sbb
pop
xchg
xor
inc
lahf
mov
mov
inc
ss
call
imul
loop
jle
loope
xor
loop
mov
inc
mov
inc
enter
pop
stc
sub
fstpt
or
add
dec
inc
jg
push
lret
push
push
sti
lods
push
dec
das
cmp
repnz
cmp
mov
mov
pop
into
outsl
dec
std
mov
pop
mov
mov
setg
cmp
or
add
xchg
mov
jno
inc
imul
sub
clc
sar
adc
pop
dec
insl
sub
or
sbb
out
dec
cltd
cs
sarb
jmp
loope
add
subl
aaa
testb
inc
xor
xchg
mov
sbb
rcll
imul
push
xchg
pop
dec
ds
mov
lcall
fcomip
sub
mov
mov
inc
mov
mov
or
sub
imul
mov
movsl
jmp
ljmp
mov
push
ret
cmpsb
mov
mov
jecxz
and
mov
inc
fwait
sub
push
mov
jecxz
pop
mov
inc
or
daa
dec
cmc
cmp
sti
aaa
je
push
cmp
int3
jg
movsl
test
cmpsl
push
inc
or
dec
push
ja
lret
negb
mov
push
pop
out
cld
inc
loop
push
jge
in
mov
shl
test
stc
int3
int3
sahf
in
pop
xor
and
dec
jl
clc
andl
es
loop
sbb
push
adc
outsl
add
imul
jns,pn
fmulp
inc
jmp
js
mov
enter
mov
xchg
mov
inc
push
outsl
sbb
in
nop
xor
xchg
xchg
sub
lods
mov
pop
movb
test
inc
mov
lret
xchg
bound
ja
insb
stc
mov
mov
or
adc
mov
insl
mov
xchg
mov
sbb
mov
or
inc
inc
adc
cmp
sub
int3
stc
dec
lock
xchg
into
jecxz
sub
xor
xchg
fnstenv
test
push
sbb
jmp
sub
lret
rcll
xor
mov
xchg
jl
repnz
or
mov
orb
aam
outsb
sbb
add
jno
sub
aam
mov
in
push
cwtl
mov
imul
testl
frstor
pop
fidivrs
inc
es
xchg
mov
ds
lds
push
pusha
movsb
xchg
fincstp
mov
addr16
dec
cmpsb
lea
mov
shlb
xor
enter
xor
orl
icebp
lea
loop
jne
inc
inc
cmp
outsl
test
lahf
mov
adc
xor
pushf
scas
push
pop
nopl
adc
and
xchg
xor
push
sbb
cmp
cli
dec
and
test
push
jns
addr16
repz
inc
push
out
sbb
frstor
insb
xchg
pusha
push
imul
mov
push
dec
sub
pop
pop
mov
adc
push
popl
xlat
adc
cltd
addr16
mov
dec
jnp
iret
inc
sahf
cld
pop
cmp
jle
lahf
mov
jl
pusha
clc
repnz
inc
add
enter
js
xor
sbb
iret
push
cld
sub
push
xor
adc
mov
inc
pushf
mov
cs
stos
xor
mov
repz
pop
loopne
mov
popa
mov
ja
mov
shrb
xchg
xchg
pop
dec
std
mov
bound
ds
jmp
sbb
or
imul
jo
dec
aam
pop
rcrb
mov
mov
fwait
push
icebp
fisttpll
mov
mov
pusha
in
jp
jae
cld
ret
adc
lds
push
mov
pushf
jg
xchg
fdivr
xor
in
xor
sbb
xchg
dec
adc
popf
mov
cld
lret
inc
inc
js
mov
and
cmp
cmp
movsl
or
push
cld
cmpsb
xor
aam
jno
and
cli
sahf
sub
out
and
in
mov
pop
les
int
hlt
jl
jbe
pop
adc
loop
out
std
mov
aam
cmpsl
xchg
lods
sbb
sub
in
pop
push
frstor
loop
push
pop
nop
mov
dec
mov
or
sub
out
sbb
add
jmp
and
jb
negl
dec
add
add
and
jecxz
dec
jle
mov
testb
movsb
frstor
or
cli
inc
push
movsb
cmp
lods
jae
jns
xor
mov
pop
mov
int
lret
rcrl
jp
and
loopne
movsl
dec
dec
mov
enter
subb
sub
mov
shrb
mov
adc
cmc
xchg
pop
xchg
push
inc
push
fprem1
cmpsb
cmc
mov
inc
adc
fidivl
cmp
dec
gs
lcall
mov
cmp
ret
pop
dec
dec
jo
push
cli
xchg
mov
arpl
inc
xor
arpl
in
sub
sub
mov
dec
rclb
leave
adc
mov
cmpsl
fwait
je
mov
ja,pn
in
fdivrp
pop
mov
or
test
push
pusha
inc
lds
stos
imul
imul
mov
adc
jmp
mov
pop
mov
jnp
xor
and
sti
adc
dec
in
adc
enter
jbe
and
sahf
in
inc
dec
inc
das
pop
jge
xchg
xchg
jbe
sbb
push
pushf
xchg
xchg
mov
es
sti
cmp
mov
push
sahf
cmp
pop
rolb
mov
adc
add
push
sub
js
and
xchg
rcl
xor
push
popa
push
push
push
adc
add
sbb
or
icebp
xchg
pop
pop
cmp
add
mulb
subb
inc
pusha
and
add
sbb
jnp
jecxz
filds
push
out
mov
daa
in
out
pop
inc
cli
clc
inc
mov
push
out
sub
int
and
in
icebp
les
nop
jns
mov
lock
imul
dec
jne
pop
inc
in
push
imul
mov
lret
or
dec
jmp
push
inc
or
xchg
sbb
push
lock
subb
pop
clc
sarl
add
in
shll
or
fbstp
xor
xlat
bound
fildl
daa
mov
int
test
or
imul
xor
enter
cli
clc
add
mov
lret
adc
ret
add
pcmpgtb
movsb
add
inc
mov
jae
xor
scas
adc
cltd
or
js
push
push
lret
ljmp
cwtl
shl
pop
jecxz
enter
lret
stc
arpl
and
push
lret
hlt
and
adc
pop
stos
xor
or
add
xchg
loope
lret
pop
sti
push
stos
jnp
cmp
ljmp
stc
call
dec
sbb
xor
inc
dec
subb
adc
xchg
jmp
hlt
xchg
mov
mov
test
cmp
dec
pop
mov
or
adc
popa
lcall
push
xchg
lock
push
das
lret
and
outsl
pop
dec
xor
jp
loope
ss
mov
cmp
bound
sarb
lret
add
push
adc
pop
movsl
cmp
mov
push
int
push
sub
and
inc
repnz
out
push
lods
push
mov
inc
adc
lret
mov
cmp
sub
imul
jno
sub
jns
dec
dec
into
xchg
imulb
mov
xchg
outsl
stos
imul
push
dec
cwtl
mov
mov
dec
mov
outsl
cli
or
aas
rcll
xor
adc
jbe
mov
xor
stos
aaa
mov
inc
jne
lods
mull
sbb
sbb
hlt
pushf
push
imul
movsb
cmp
sbb
xor
movaps
sbbl
pop
xchg
shlb
dec
jmp
cli
shrl
icebp
push
dec
xor
mov
mov
pop
std
pusha
daa
aaa
jmp
sub
adcb
add
mov
out
xor
daa
mov
arpl
xchg
mov
dec
pop
push
jmp
push
pop
in
cmp
pop
imul
push
sub
cs
gs
cli
push
lret
jnp
test
or
nop
test
movsl
add
sahf
sti
cli
mov
add
mov
sbbb
gs
xorb
je
lock
in
or
lret
aad
iret
sub
sbb
xchg
push
jns
out
aad
jns
mov
psrad
xchg
pop
mov
inc
es
lahf
fldl
and
ficoml
add
rclb
inc
dec
popf
dec
lcall
mov
push
jp
int3
xor
pop
sbb
lea
cmc
xchg
mov
outsl
fidivs
in
xchg
xor
add
ljmp
outsl
imul
mov
lods
sbb
pop
mov
iret
insb
inc
faddl
push
into
rcrl
orl
ror
hlt
in
cmp
js
ljmp
or
fmul
scas
out
push
sub
leave
repnz
or
outsb
mov
loopne
stc
repnz
nop
pusha
cli
pop
sbb
lock
or
fdivrp
sub
es
adc
cwtl
repnz
lock
cmp
xor
fildl
int
scas
mov
xor
hlt
xor
mov
push
std
push
sahf
cmpps
or
aam
lret
dec
xor
xor
sti
lods
lea
repnz
jp
shl
xor
pop
adc
xchg
inc
adc
mov
test
cli
dec
mov
cwtl
inc
mov
mov
leave
dec
pop
add
dec
stos
push
inc
enter
cs
ret
shll
pop
cld
pop
lret
pop
aam
pop
xor
mov
fmull
mov
mov
loope
fs
sarb
xchg
add
scas
pop
xchg
inc
pop
xor
pop
jle
add
sbb
ljmp
cmpsb
in
movsb
dec
jl
xor
sbb
ror
dec
mov
popa
insl
shlb
sbb
data16
repnz
and
pop
aad
jne
imul
setae
cmp
cs
iret
sub
xor
inc
and
mov
insl
jmp
sub
sahf
xor
adc
sbb
mov
xchg
loopne
push
lods
sub
aas
cmp
jge
loop
enter
cli
mov
out
lds
push
sbb
adc
pop
into
xchg
daa
cs
lahf
bsf
into
dec
jl
adc
xchg
xor
mov
shll
ljmp
xchg
fucomi
bound
mov
lock
adc
or
inc
xchg
jnp
cld
xorb
xchg
or
sbb
andl
sbb
or
ss
shll
add
inc
out
add
stos
fiaddl
int
fdivr
bound
dec
enter
inc
adc
decb
aam
xchg
sbb
dec
out
sub
inc
pop
cmc
or
inc
sbb
xor
add
inc
sti
inc
inc
pop
std
in
sbb
dec
jo
js
push
popa
addr16
sbb
mov
push
iret
xor
mov
aam
imul
or
mov
pusha
xor
add
add
nop
stc
cmpsb
sub
xchg
jne
cmp
lods
insl
xchg
xor
adc
mov
test
and
and
pop
fsubl
sbb
pop
mov
sahf
rcrl
and
testl
ret
stos
in
xor
mov
cmpsl
lock
lea
adc
loope
xorl
outsl
fidivrs
insb
inc
mov
call
jl
mov
mov
lods
shlb
rclb
psubd
je
jns
mov
cs
pop
bound
imul
jmp
add
sub
inc
cli
sti
dec
mov
sbb
xchg
xchg
push
jae
cmp
fistl
loope
scas
test
cmp
aaa
mov
pop
pop
es
sub
rcrb
mov
xchg
lods
xor
mov
push
and
loopne
and
test
inc
and
mov
stc
ret
push
mov
bound
andl
mov
xchg
or
inc
fiadds
or
mov
pop
out
pop
mov
jle
add
cwtl
cmp
and
popf
imul
movsb
mov
aam
hlt
jle
dec
iret
xor
sahf
mov
shrl
sub
adc
pop
stc
imul
ja
aad
cltd
mov
mov
cmc
mov
std
mov
cli
xor
mov
iret
lcall
adc
xchg
dec
enter
fs
dec
lea
mov
call
insl
xchg
xchg
push
into
aas
jmp
sbb
push
mov
push
xchg
idivb
push
sub
inc
xchg
loop
test
pop
sub
mov
cmp
inc
inc
mov
pop
mov
ljmp
and
dec
inc
xchg
pop
inc
mov
rclb
adc
pop
sbb
xor
mov
inc
in
aam
pushf
int
mov
rcrl
fdivp
pusha
loope
mov
xchg
mov
adc
inc
lods
int3
sbb
rolb
repz
sub
xor
pushf
inc
cmpsb
and
hlt
fwait
stos
pop
and
adc
xor
cmp
jnp
mov
add
add
std
lds
add
lods
cli
jmp
add
adc
jmp
scas
js
icebp
adc
add
or
iret
mov
pop
nop
sub
adc
and
jbe
sti
xor
rorl
out
sub
cmp
or
loope
sbb
addr16
ds
xor
xor
add
invd
popa
push
mov
ror
add
push
dec
dec
sub
daa
cli
jecxz
ljmp
xchg
jno
cmp
pop
xor
or
add
push
add
ret
and
ljmp
ss
mov
cmpsl
lret
pop
mov
adc
pop
stos
dec
xchg
push
mov
or
cmc
sbb
adc
push
ljmp
int
testl
leave
adc
xchg
clc
insl
push
jecxz
addr16
sub
imul
or
jmp
mov
xor
xor
cs
inc
ja
sub
sbbb
push
add
lods
or
and
addr16
shl
lret
mov
push
mov
jmp
repnz
aam
cli
dec
inc
imul
mov
das
popf
mov
incb
adcl
push
mov
push
outsb
push
push
jbe
pushl
jecxz
xlat
sub
pop
das
xor
xchg
daa
rolb
mov
cmp
aad
push
and
dec
push
mov
fs
arpl
sbb
cmpb
icebp
bound
iret
daa
daa
insb
adc
mov
arpl
xchg
popl
jle
out
sarb
cmp
nop
les
movsb
stos
mov
and
fldt
xor
mov
fistl
out
les
sti
bound
xchg
sub
xlat
push
xchg
dec
jp
and
out
mov
pop
cmc
adc
adc
repnz
inc
in
pop
cli
jo
mov
shll
xchg
mov
xor
ljmp
xor
ljmp
pop
xchg
test
jb
rcll
daa
pop
mov
or
js
lods
mov
and
xchg
into
xchg
xor
jg
ret
es
ljmp
decb
rcrb
addr16
fwait
int3
mull
push
in
dec
sbb
push
pop
cwtl
jno
outsl
mov
sbb
mov
jb
stc
sahf
mov
jne
je
outsl
lahf
sub
repz
and
jbe
mov
mov
jecxz
cmp
inc
xchg
mov
mov
dec
stc
dec
push
or
jb
xchg
mov
movsb
enter
and
outsl
push
jae
pop
jbe
or
xor
jmp
pushl
pop
sub
add
gs
in
jmp
push
ret
xchg
jnp
aam
addr16
pop
dec
mov
xchg
mov
rcrl
pop
xchg
sub
pop
add
nop
add
jno
insl
sub
fs
mov
add
rcl
gs
push
xor
pop
shll
mov
call
xchg
cs
cmpsb
jb
std
sbb
je
jge
xor
nop
into
cmp
dec
push
xchg
or
add
in
in
clc
lods
outsl
outsl
mov
loope
repz
lea
or
movsl
pop
imul
subl
aad
sub
push
mov
adc
push
push
mov
xor
aad
iret
adc
lret
aam
inc
shlb
inc
mov
cwtl
sub
fsubp
jl
jbe
cmp
mov
dec
jge
gs
in
test
inc
jg
cwtl
jg
test
cmc
mov
iret
mov
iret
ss
repz
lock
mov
in
jp
in
jne
sbbb
cmp
jl
nop
repz
mov
jle
xchg
sub
addr16
mov
sbb
clc
mov
daa
xchg
rcrl
imul
lcall
push
stos
pop
clc
mov
mov
sbb
pop
hlt
pop
push
push
dec
das
int
cs
adc
out
aad
lret
in
sahf
ror
lea
decl
fmulp
xacquire
and
mov
mov
pop
mov
dec
pop
shrb
or
pop
fdivl
inc
in
ja
mov
dec
ja
dec
mov
test
adc
daa
scas
loopne
cmp
mov
mov
inc
pushf
fidivs
idivb
adc
ret
xchg
adc
cmp
sub
xchg
inc
jmp
stos
pop
insl
ja
inc
mov
push
push
ja
cmp
notb
outsl
and
rcl
and
mov
fists
dec
cltd
jecxz
push
cmp
mov
out
dec
lcall
fldcw
fisttpll
test
mov
mov
or
or
in
and
add
or
jbe
sub
loop
imul
cmp
pop
dec
jne
xlat
push
out
arpl
cmpsb
out
sahf
cmpb
and
aad
movsb
jae
stos
push
fstpl
push
ret
loope
in
mov
mov
jns
movsl
jo
sbb
shlb
sub
push
ret
add
aad
cld
mov
fsubs
lahf
jne
dec
and
add
cmp
loop
inc
out
mov
sahf
lods
lea
jp
ret
and
ljmp
inc
pop
xchg
sar
push
cmp
sahf
cmp
ds
inc
lock
dec
jecxz
mov
cmp
jle
int3
ss
mov
iret
add
imul
cld
sti
adc
or
push
iret
shl
cli
sub
mov
gs
loopne
cmp
jecxz
movsb
sbb
inc
loop
addr16
xor
lea
rolb
addr16
xor
or
std
push
mov
movsl
jb
sahf
mov
xchg
shr
mov
stc
fdivrs
and
mov
addr16
cld
call
xor
shlb
popf
imul
xor
sbb
jge
out
jo
call
ljmp
das
or
repz
adc
scas
stc
pop
je
cmpsb
push
xor
mov
lahf
pop
xchg
dec
push
jl
jno
cmp
imul
inc
sahf
mov
int
fiaddl
or
gs
jmp
shlb
es
pop
movsl
fcomp
iret
ror
inc
mov
ja
push
fsubp
sti
enter
cli
in
push
push
stc
pop
adc
mov
lret
nop
loope
enter
dec
movsb
mov
push
loop
xlat
shl
inc
push
addr16
dec
xchg
fwait
add
mov
loopne
popf
mov
rcll
xor
or
dec
stc
test
subb
lds
cmp
mov
add
arpl
xchg
inc
add
push
nop
cmp
fmuls
pop
push
in
sub
loope
or
shlb
pop
xchg
or
das
mov
and
push
or
pop
in
dec
cmc
inc
jge
sahf
int3
rcrb
dec
leave
jo
jno
mov
sub
cmp
push
dec
dec
pushf
fistl
mov
jp
cltd
into
insb
inc
mov
jl
xor
sub
cmp
decb
cmp
push
iret
mov
lret
inc
sub
or
sti
mov
mov
dec
iret
mov
lahf
lods
fsubl
repz
add
mov
mov
push
shll
testl
xlat
in
mov
xchg
stos
push
das
cltd
clc
imull
inc
dec
adc
testl
push
cwtl
push
mov
jge
in
cld
jle
jge
outsb
sahf
add
xchg
out
jg
fs
mov
ljmp
out
xchg
mov
mov
loopne
xlat
and
adc
iret
jle
je
gs
dec
mov
cli
mov
lds
jmp
mov
sub
inc
cmp
pop
outsl
stos
jmp
or
inc
lock
ret
push
mov
das
fldl
fwait
xchg
cs
pop
push
push
xchg
arpl
arpl
add
gs
test
jmp
les
movsb
negb
adc
cmpsw
cltd
arpl
stos
std
std
xorl
mov
mov
xchg
out
push
ljmp
pop
aas
rclb
cmp
inc
and
fcomps
and
xchg
or
pop
inc
pop
rcll
mov
mov
sbb
neg
or
int3
pop
shlb
ljmp
jnp
imul
pushf
push
insl
rcl
dec
aaa
cmpsl
push
jne
imul
cwtl
jne
lods
icebp
mov
outsb
inc
cmpl
mov
shlw
jle
add
xchg
int3
cli
scas
popa
pop
sub
xchg
and
fs
imul
ja
iret
outsb
push
nop
test
fs
movsl
dec
gs
dec
or
hlt
xchg
pop
cmpb
test
fs
pop
stos
mov
mov
inc
repnz
daa
mov
shrl
dec
lcall
loope
in
ja
mov
sub
sahf
xchg
sahf
inc
xchg
lock
loope
mov
fisttps
imul
loope
fnstsw
mov
or
mov
fidivrs
nop
xchg
pop
mov
inc
lods
jno
lret
lahf
mov
pushf
mov
mov
mov
jmp
xor
xchg
cmp
mov
ffree
mov
dec
push
out
lods
test
aad
mov
inc
sbb
pop
cli
inc
ret
jns
call
inc
adc
loope
dec
jne
sub
jge
xchg
mov
lret
dec
mov
imul
lods
pop
xlat
int
jle
push
jns
mov
nop
inc
push
add
test
and
enter
out
ret
push
dec
int3
aad
mov
sub
andb
pop
adc
push
lea
iret
outsb
xorl
mov
sbb
inc
sub
xchg
popf
out
lahf
fdivs
pop
xor
in
pushf
stos
jg
mov
inc
jl
rcrb
xchg
mov
xchg
push
mov
push
mov
sub
repnz
or
mov
xor
push
sub
push
sub
out
add
push
fisubrl
mov
lcall
or
dec
lret
sub
arpl
pop
mov
loop
shll
xchg
fwait
pop
or
xchg
cmp
adc
cs
jl
mov
xor
movsl
add
dec
dec
test
inc
push
sahf
push
mov
jecxz
lcall
pop
lret
cltd
jl
icebp
push
sub
mov
pop
lcall
aam
pushl
bound
in
xchg
mov
xor
push
xchg
add
fists
inc
div
or
lretw
dec
xchg
push
jae
push
movsb
xlat
arpl
in
lret
xlat
out
adc
in
icebp
insb
jecxz
int
xchg
pop
cmp
rorl
mov
jno
into
mov
xchg
faddl
nop
add
mov
dec
lcall
xchg
push
lret
sti
add
adc
mov
mov
call
inc
or
and
iret
pop
mov
or
sbb
xor
sbb
add
cs
ja
lea
insb
rol
mov
int
test
push
aam
sub
ds
dec
push
adc
pop
add
push
lock
and
sbb
jmp
addb
push
adc
xchg
dec
and
stos
fcoml
scas
in
outsb
shll
int3
insb
scas
sbb
fcompl
cli
lret
sub
mov
lret
into
scas
inc
imul
xorl
xchg
ljmp
or
ja
mov
and
test
shr
dec
or
fimuls
cmp
fiadds
cmp
imul
push
cmpb
fiadds
mov
jns
xchg
addb
sbb
mov
or
push
dec
inc
cmp
cmp
ljmp
cltd
adc
out
xor
mov
mov
outsl
adc
mov
mov
inc
cmpb
leave
mov
mov
lcall
fnsetpm(287
mov
loope
call
cmpb
push
in
lcall
xchg
scas
enter
cwtl
add
or
cwtl
loop
test
or
add
mov
in
dec
sub
or
mov
aam
xchg
mov
jo
out
sub
dec
push
stos
inc
jecxz
push
xchg
pusha
sbb
fadd
inc
ljmp
aas
jecxz
mov
mov
jecxz
jmp
aad
pop
push
loop
mov
push
cmp
xchg
adc
ret
push
push
or
jmp
push
popa
js
clc
out
outsb
xor
imul
pop
std
mov
xor
jmp
inc
stos
mov
fistps
shlb
sarb
cmpsl
push
fnsave
pop
pop
inc
push
lahf
jnp
mov
or
nop
jne
shlb
out
movsb
loope
mov
clc
xchg
stc
push
insb
subb
and
frstor
cbtw
mov
xor
stos
mov
imul
inc
pop
cwtl
mov
je
divl
loop
dec
repnz
sbb
into
insb
int3
pop
inc
mov
inc
or
dec
or
pop
out
adc
jmp
mov
sarl
xchg
lahf
hlt
movsl
jg
cwtl
push
xchg
call
repz
xor
xchg
mov
and
mov
cmp
sti
jnp
stos
jns
jecxz
xor
mov
loope
sub
lods
inc
shl
pusha
and
mov
sub
ja
adc
cmpsl
stc
push
ljmp
cmp
cmc
mov
push
fldenv
test
xchg
add
cs
roll
insl
xchg
call
movb
or
roll
out
pop
adc
bound
rorb
mov
in
add
icebp
jae
js
mov
repnz
jg
lahf
add
cmp
les
shrl
and
test
and
cltd
adc
loopne
mov
std
cmpsb
sbb
pop
es
lahf
cmp
loop
push
mov
adc
imul
sbb
xor
test
add
add
push
ljmp
mov
in
inc
data16
out
stos
je
ret
cmpsb
xchg
inc
addr16
xchg
es
sbb
das
inc
aad
adc
dec
outsl
ja
push
mov
jl
cli
sub
mov
pop
pop
loopne
push
xchg
sbb
or
iret
aas
loop
dec
leave
in
pop
mov
push
sahf
and
dec
rorb
pop
inc
inc
inc
call
pop
cs
aam
and
inc
in
and
inc
sub
xchg
ljmp
je
sub
inc
xlat
inc
mov
fisttpll
and
xchg
mov
inc
idiv
cwtl
aam
aam
cmpsl
or
lret
pop
pop
cld
hlt
outsl
pop
xchg
insl
or
inc
aaa
cmc
push
cli
lret
sarb
mov
lock
nop
or
mov
or
xchg
xor
adc
add
cmc
sub
pop
dec
inc
fsub
xor
xor
sar
test
orl
rcrb
mov
push
cltd
xchg
lahf
mov
sbb
and
fldt
inc
pop
arpl
ja
xor
shrl
jne
jno
dec
rcrl
stos
cwtl
scas
inc
and
cwtl
mov
xor
push
sub
dec
sarl
repz
and
cwtl
sbb
out
or
xchg
les
mov
push
test
fs
fidivrs
rolb
mov
or
cmp
lcall
aam
pop
ds
lret
aas
or
add
lret
push
imul
inc
loope
fnstenv
jb
pop
xor
sbb
popf
lret
ret
xor
inc
pop
adc
xchg
xchg
decl
enter
or
test
push
xchg
js
shrb
out
fnstenv
enter
imul
inc
stos
mov
inc
mov
push
sub
out
push
jmp
cli
push
imul
imull
push
or
mov
inc
push
adc
cmpb
mov
mov
mov
push
xor
in
rolb
push
inc
adc
in
out
xchg
xor
mov
fs
xor
inc
shrb
cmp
test
outsl
aas
inc
dec
xchg
mov
cmp
or
ljmp
mov
pushf
or
out
xor
shlb
in
out
add
xor
mov
lock
push
adc
jmp
js
out
push
iret
xchg
mov
inc
cli
ljmp
xchg
push
jp
inc
loop
rolb
pop
fcomip
xchg
out
mov
xlat
adc
gs
and
cli
adc
out
out
ret
xchg
cli
inc
insl
sbb
hlt
lods
xchg
mov
sub
add
pop
lods
iret
call
in
dec
jg
repnz
inc
xorl
push
lods
jb
push
cmp
popf
enter
mov
cld
mov
add
enter
leave
es
pop
lret
not
test
ljmp
call
push
inc
pop
out
mov
jns
leave
mov
xlat
xchg
lds
xor
fisubrs
arpl
ja
mov
xor
sub
ret
sahf
mov
mov
xchg
inc
adc
roll
inc
xor
loope
inc
loope
sub
leave
mov
mov
cmp
fsubp
add
mov
push
loop
in
adc
sahf
outsb
ret
adc
sbb
icebp
mov
mov
fimull
dec
rcrl
inc
cwtl
mov
adc
sbbb
xor
mov
xchg
mov
sbb
imul
xor
inc
lahf
xchg
mov
push
ja
jo
mov
jnp
stc
fnstenv
in
in
ds
or
push
dec
unpckhps
cwtl
rcl
imul
add
popa
test
out
outsl
ret
push
cmpsl
lret
mov
enter
or
jno
mov
and
xchg
or
cwtl
icebp
cld
adc
out
jbe,pn
cmc
aam
adc
xchg
fbld
push
mov
mov
out
inc
jae
addl
and
fwait
jle
mov
inc
mov
rorb
cld
add
test
mov
fldl
mov
shrl
add
xor
push
cmpsb
jno
shll
push
outsb
pop
mov
outsb
std
mov
in
sahf
xchg
xchg
cmp
loope
jno
mov
fdiv
add
shl
lahf
mov
pop
scas
lds
mov
push
mov
mov
adc
in
adc
lods
fistpll
sub
cmc
sti
aaa
mov
lods
loop
stos
adc
xchg
add
jle
push
adc
int
shll
and
movlps
outsl
sbb
in
lock
inc
stc
mov
cltd
mov
and
or
sahf
ss
sahf
push
clc
fcoml
mov
cmp
or
les
lock
dec
insl
pop
aas
sub
ljmp
sub
cltd
fwait
out
inc
out
mov
inc
popl
pop
pusha
inc
das
push
mov
mov
and
fistl
cmpsl
inc
movsb
lock
pop
xlat
xchg
mov
testl
cmp
inc
out
fisttps
lahf
leave
mov
xor
dec
insl
dec
jp
orb
push
and
repnz
cmp
xor
aas
into
in
push
loopne
and
pop
mov
mov
pop
mov
mov
test
push
lock
adc
cmp
inc
int
push
dec
pop
inc
stos
jg
iret
push
inc
mov
test
divl
ficompl
aad
push
ret
inc
outsb
pop
adc
cltd
ja
aam
sub
add
out
jmp
adc
xchg
lret
icebp
les
pusha
mov
stos
jmp
pop
ret
ret
shl
and
sbb
mov
mov
push
dec
inc
jne
dec
leave
inc
cltd
sub
jmp
out
xchg
dec
sbb
inc
mov
leave
dec
pop
xchg
xor
shll
jmp
xchg
push
movl
pop
cld
faddp
dec
popf
mov
lret
pusha
dec
in
or
negl
cmp
xor
out
xchg
lret
int3
xchg
test
and
iret
lods
xchg
inc
call
push
xlat
mov
xchg
cmp
mov
xlat
or
popl
xor
data16
lret
xlat
pop
jbe
ds
bound
dec
addr16
or
mov
jb
sub
popa
inc
lahf
pop
fbld
sub
rolb
sahf
mov
pusha
nop
pop
testl
pop
repnz
dec
andl
mov
pop
xor
popl
add
push
and
pop
mov
mov
in
dec
push
dec
jnp
aad
mov
dec
fimull
lock
enter
fimull
mov
mov
in
xchg
insl
mov
sbbl
gs
pusha
pop
jbe,pn
sahf
and
xchg
movsl
xchg
cmp
pop
mov
mov
inc
adc
movsb
cld
in
je
cmp
mov
mov
cli
fldcw
shlb
or
negl
fstpt
xor
sbb
call
std
das
lret
test
xchg
inc
cmpsl
popa
in
or
push
jmp
cltd
push
ret
in
jo
jmp
pop
in
mov
les
scas
imul
fs
mov
mov
insl
ljmp
sub
dec
inc
dec
cmp
cli
jecxz
lock
mov
hlt
fsubr
data16
pushl
addb
ror
js
inc
jle
ja
xchg
fcmovnbe
lock
xchg
test
xchg
and
dec
jnp
test
stos
mov
test
xchg
clc
outsl
lret
sbb
stos
arpl
pop
dec
mov
push
lock
aas
push
add
dec
mov
popf
jp
mov
and
mov
popa
pop
xor
das
aas
popf
fwait
sarl
jle
lahf
pop
and
test
int
and
mov
cs
subb
mov
mov
and
mov
cli
mov
lret
clc
das
rorl
mov
icebp
mov
cmpsl
mov
test
orb
test
xchg
ret
popf
adc
mov
cmc
jae
ljmp
fldenv
sbbb
xor
addr16
add
stc
pusha
inc
mov
loope
pop
push
xor
lcall
push
ja
inc
xchg
sbb
fnstenv
sub
lret
cmp
inc
int3
add
xor
push
rclb
sbbl
stos
jmp
push
sbbl
fcoms
ret
ret
mov
xor
test
pop
rclb
ret
pop
sbb
fists
sahf
inc
movsb
imul
enter
js
fsub
divl
pop
movl
das
icebp
mov
int
neg
xor
mov
mov
stc
mov
xlat
mov
mov
mov
pop
add
dec
mov
testb
shl
mov
xchg
pop
and
pop
xchg
fcom
or
dec
std
fimull
movl
or
adc
pop
push
push
dec
push
lret
lea
addr16
mov
sbb
inc
jnp
shrl
and
push
shll
arpl
ret
stos
mov
lahf
popa
push
push
jb
in
call
hlt
movsb
popf
ljmp
shll
addr16
loope
pop
stc
and
ret
dec
cld
jge
cmp
aad
mov
ljmp
jmp
mov
shlb
and
inc
fwait
arpl
out
adc
pop
addr16
xlat
shll
jmp
outsb
repz
mov
adc
mov
push
xchg
pop
sti
or
outsb
push
jmp
sbb
dec
out
aas
lcall
mov
cli
shlb
imul
jg
fsubr
ljmp
pop
scas
sahf
insb
mov
in
popa
imul
leave
push
sub
addr16
dec
stc
and
bound
mov
push
cmp
mov
push
icebp
and
add
lock
je
ret
sbb
sbb
out
imul
sbb
cmpsb
dec
jl
or
outsl
sarb
inc
iret
push
jno
or
push
outsb
in
lock
loopne
lock
dec
sbb
and
cmp
sub
lods
xor
pop
mov
jb
nop
daa
mov
hlt
out
add
add
fmuls
imul
inc
int3
mov
gs
jno
out
add
push
mov
cld
sbb
xchg
aas
mov
mov
cli
jae
cs
repnz
adc
pop
jp
stc
pusha
mov
pop
pushf
xchg
les
daa
aad
sbb
cwtl
jae
lock
test
mov
push
cwtl
xchg
sbb
push
mov
push
ljmp
in
xchg
pop
cld
mov
ds
cld
out
mov
in
mov
clc
in
dec
sbb
mov
sbb
stc
add
add
xchg
insl
test
and
out
pop
dec
dec
mov
xor
mov
xchg
loop
xlat
add
push
pushf
or
jnp
fxch
out
out
and
fucomip
loope
out
std
in
jae
lret
adc
jbe
sub
ret
imul
in
pop
mov
fisubs
dec
fadd
inc
fs
push
and
or
dec
sub
jne
push
push
dec
pop
mov
aaa
ffree
in
xchg
in
xchg
imul
shl
ja
jecxz
cwtl
shlb
lea
aad
mov
out
hlt
inc
out
fstpl
mov
sub
jne
arpl
mov
jmp
stos
out
xor
jmp
dec
cmpsl
loopne
out
lret
mov
pop
dec
xor
outsl
or
dec
add
jge
aaa
ljmp
and
out
sub
aas
add
dec
ss
xlat
xor
movsb
mov
dec
loopne
pop
addr16
mov
pusha
fidivl
aam
mov
pop
dec
jns
js
das
sahf
inc
inc
ret
out
fisttpll
outsl
or
sti
cltd
in
jecxz
pop
mov
stos
outsl
ret
add
mov
aam
sub
dec
mov
add
sti
or
shll
push
insb
sbb
adc
xchg
leave
leave
add
mov
pop
sahf
mov
stos
xor
cmp
mov
leave
outsb
int
or
cmp
test
insb
xor
xor
or
xor
xchg
arpl
push
jo
jmp
fdivrs
xchg
cmpb
cli
outsl
cmpsb
leave
push
mov
or
int
sbb
and
xchg
pusha
loop
popf
push
xchg
in
cmpsl
sub
adc
jne
icebp
mov
std
mov
and
aam
iret
roll
push
mov
jae
push
push
lods
jb
les
mov
rclb
ds
jl
addb
push
push
mov
fcmovbe
mov
mov
sti
addr16
les
arpl
divb
out
test
stos
hlt
xlat
fisubs
in
mov
es
lahf
cld
movsl
scas
in
sbb
fdivrs
pop
std
insl
or
xchg
inc
jne
test
test
push
mov
cmp
loope
cmp
jg
ja
mov
scas
aad
or
mov
xchg
rcrl
xor
in
ja
lahf
sti
and
pop
or
mov
out
icebp
mov
mov
pop
sub
addr16
adc
std
fdivs
fldenv
fimuls
je
pop
out
int3
inc
pop
aas
sub
sub
inc
xor
adc
xor
addr16
and
push
lret
pop
sub
fcmovb
xor
inc
jo
push
leave
mov
sbb
pop
es
inc
mov
leave
adc
sub
arpl
mov
and
push
and
xor
out
cmovae
scas
xchg
push
cmp
mov
sbbb
movb
add
fmull
or
cmpsb
scas
xchg
jmp
fs
jb
das
enter
adc
es
ret
fsubrs
push
loop
dec
arpl
adc
pusha
inc
dec
popa
popa
add
iret
fstps
dec
dec
das
add
and
mov
js
sub
inc
mov
inc
fwait
xor
dec
ljmp
pop
lret
orl
addl
push
mov
das
add
les
mov
and
mov
cld
jmp
gs
push
jne
addb
pop
data16
push
dec
aas
test
imul
jne
jbe
sub
icebp
mov
lret
adc
lahf
dec
icebp
mov
iret
cmc
test
inc
xor
mov
mov
test
push
js
bound
sub
ljmp
andb
ror
leave
leave
out
cs
cmp
add
push
mov
xor
pop
outsb
xchg
ljmp
dec
push
in
jmp
pusha
fsubr
shrl
popf
jno
dec
add
xor
stc
xchg
add
bound
loopne
es
in
inc
xchg
fisttpl
mov
lea
push
test
add
cmp
sahf
cmp
jge
fisttpll
rol
fiaddl
inc
lods
mov
inc
stos
push
mov
das
das
ljmp
ret
aad
ret
or
mov
push
push
cmp
pop
mov
call
testb
nop
sbb
outsb
cmp
push
mov
fidivrs
imul
cmp
dec
pop
lret
shll
fldl
int
jmp
rclb
mov
cmp
pop
lea
xor
cmp
adc
mov
out
jle
pop
idivl
add
sub
outsb
mov
push
add
xor
push
mov
pop
pop
inc
sbbb
push
addb
jg
mov
dec
push
inc
fs
loopne
test
dec
xor
inc
cmp
lea
dec
outsl
out
jge
adc
mov
outsb
outsl
ja
and
inc
sahf
and
hlt
mov
add
inc
mov
and
xor
push
push
insl
je
inc
ds
test
and
leave
fdivl
iret
or
add
sub
mov
push
mov
lcall
mov
mov
xor
add
push
adc
popf
or
nop
fimuls
push
or
or
ret
nop
shlb
sub
int
push
jge
mov
into
mov
cld
int3
out
aas
pop
inc
push
pop
arpl
cmpl
lea
xchg
dec
inc
sar
repnz
bound
jmp
xor
dec
je
cmp
into
fwait
mov
stos
xchg
push
lret
jecxz
jl
jns
adcl
out
inc
pop
cmp
jno
mov
mov
loop
rorl
in
mov
dec
mov
xchg
xor
lods
mov
rcll
push
lds
mov
pushf
fldl
mov
dec
lods
insl
ds
sbb
mov
int3
mov
adc
mov
mov
das
dec
das
lret
aaa
into
movsl
xchg
mov
sub
cli
in
pop
mov
fwait
out
pop
clc
xor
outsl
rorl
pop
jb
mov
fadds
shr
or
in
cld
lea
out
lcall
stc
pop
pop
mov
or
jmp
loopne
pop
cwtl
imul
sarb
add
jle
sub
cmpsl
cmp
clc
mov
inc
mov
and
add
push
add
mov
mov
sahf
xchg
push
pop
mov
aas
insl
fsubrp
adc
push
das
repnz
xchg
dec
insb
mov
push
dec
cmpsl
push
or
enter
sub
in
pop
mov
xchg
jb
pop
jae
cs
pop
cmpsb
cmp
xchg
sbb
jo
ror
or
xor
jl
popf
inc
jg
sahf
jne
xchg
xchg
dec
leave
push
push
cmp
lods
jmp
jb
add
xchg
shlb
cmp
cmp
lods
xchg
xor
aaa
or
pop
test
iret
call
daa
jl
out
push
push
mov
mov
mov
aad
dec
adc
push
jecxz
rcrb
cmp
mov
cmp
test
xchg
xor
out
xor
inc
mov
mov
addb
adc
xchg
popa
nop
xchg
rclb
cwtl
mov
mov
sub
jnp
hlt
fwait
in
jl
test
in
jp
pusha
gs
xor
dec
mov
inc
jl
cmpsl
data16
scas
jo
sub
push
xchg
movsb
das
popf
sub
cmp
addr16
pushf
inc
nop
inc
out
insl
pop
xor
push
das
call
cmc
mov
mov
pushf
fwait
dec
adc
leave
adc
add
in
iret
xchg
dec
push
test
jbe
or
xor
mov
fs
push
dec
sub
nop
and
jle
push
xchg
test
inc
repz
jb
xchg
pusha
out
ljmp
mov
cli
jne
adc
jmp
push
pop
pop
lods
sub
cmp
mov
xchg
lahf
xor
xchg
cmp
outsb
push
mov
imul
or
xor
aam
clc
mov
mov
push
aas
mov
rorb
add
scas
shll
out
cmp
rcl
xchg
addl
jmp
std
fisttpl
adc
cli
in
aam
iret
inc
pop
js
stos
insb
lret
sbb
fadds
mov
jne
pop
enter
pop
out
dec
outsl
inc
imul
aad
dec
mov
call
mov
xchg
add
pop
push
aas
sti
movsb
jle
xor
mov
xor
outsb
add
mov
dec
mov
xchg
imull
out
sbb
mov
cmp
pop
xchg
dec
or
fstpt
test
and
xchg
jg
loopne
pushf
iret
push
std
ret
sahf
outsb
xchg
mov
fldenv
das
imul
mull
sub
dec
mov
jno
adc
lcall
testb
cmp
rcll
mov
xchg
in
push
adc
js
stos
push
outsl
xlat
bt
push
jle
leave
cmpsl
or
push
and
jnp
cmp
cs
movsb
inc
test
pop
inc
and
dec
cmp
pop
mov
sub
aaa
fistl
out
or
xchg
push
arpl
jns
aas
lret
mov
mov
mov
cli
aas
jnp
test
xor
mov
in
mov
dec
pop
arpl
cmp
mov
push
std
fiadds
or
add
adc
stos
mov
addl
cli
pushf
sti
pop
adc
sub
js
inc
ss
test
cs
jle
jno
and
push
sub
mov
jno
shlb
fnstcw
orb
addr16
out
aam
jl
scas
stc
cmc
iret
lods
mov
push
or
aad
movsb
mov
daa
hlt
ja
xchg
xor
aaa
sbb
mov
jge
movzwl
push
push
and
dec
movsl
dec
ja
shl
mov
stc
and
test
sub
das
ret
xchg
xchg
push
xchg
aaa
and
jmp
dec
int3
imul
push
test
pop
cld
dec
or
inc
mov
sub
mov
xor
or
ja
sti
mov
mov
dec
aaa
jl
jmp
rorb
ret
ret
xor
xchg
aas
mov
or
testb
shrb
cmp
fnstcw
mov
outsl
fistps
shr
mov
loop
pop
xchg
inc
xchg
mov
xchg
jae
xchg
adc
sbbl
testb
insl
std
cmpsl
sahf
xchg
mov
or
fisubl
or
cmc
mov
mov
pop
in
adc
aaa
test
stc
loopne
push
loopne
shrb
inc
test
adc
sub
jns
sbb
dec
mov
nop
dec
mov
push
ljmp
in
aad
mov
push
shll
test
lea
jp
outsb
insl
dec
orb
xchg
sbb
sub
lret
ret
jns
daa
icebp
aad
xor
pop
xor
call
or
nop
fmull
push
mov
mov
repnz
inc
ljmp
out
jne
int
ljmp
add
dec
popf
pop
mov
sbbl
jp
cmp
lock
jg
cmp
sbb
das
scas
pop
jo
pop
jmp
sbb
int
xlat
sub
jecxz,pn
lds
dec
imul
jmp
xchg
jae
popf
jl
inc
pop
out
pop
sbb
xchg
nop
jg
pop
jmp
out
pop
cltd
sub
mov
or
jae
subb
mov
mov
popf
pushf
xor
mov
xchg
and
sbb
push
div
cltd
push
push
cs
add
mov
cmp
loop
dec
pop
das
add
inc
or
pop
mov
outsl
or
push
jns
jg
mov
fdivrl
insb
sbb
mov
mov
dec
sbb
xlat
cmp
dec
add
xlat
ss
xchg
out
cmp
jnp
lds
dec
pop
mull
inc
bnd
cltd
ds
lahf
xchg
dec
pop
iret
rcrb
pushf
mov
or
int
inc
aas
scas
sub
setb
int
movsl
inc
int3
pop
movsl
addr16
sub
popa
lods
pop
mov
mov
or
pusha
dec
ds
ss
test
cmp
jge
adc
mov
xor
pop
std
add
dec
inc
sti
inc
mov
cmp
int
stos
incb
and
out
xchg
dec
lret
loope
push
pop
inc
in
shrl
adc
repz
mov
push
cmpsl
mov
xchg
loop
out
pop
addl
mov
jns
jg
std
dec
mov
sub
incl
into
push
jmp
sar
and
jo
jb
xchg
mov
in
call
in
inc
repnz
pushf
cmpsl
xchg
dec
movsl
or
repz
out
lcall
push
es
xchg
sbb
jnp
xor
adc
arpl
gs
idiv
inc
mov
cs
add
sub
jecxz
sub
outsl
mov
pop
push
xchg
jo
insl
adc
sub
xchg
ficomps
test
imul
shr
pop
fcoml
icebp
lret
inc
cld
jge
jb
push
repnz
dec
adcl
sub
nop
xchg
outsb
lods
xor
das
xchg
and
sub
mov
lds
nop
mov
test
fs
xor
pop
orl
adc
loop
xchg
mov
fisttps
jo
sub
jecxz
movsl
fsts
test
xor
fidivrl
pop
scas
jge
and
mov
push
xchg
push
in
mov
pop
repz
das
rcll
hlt
mov
int
cli
arpl
jnp
in
mov
lods
aad
dec
and
data16
dec
mov
cmp
and
cmp
add
jge
push
adc
ljmp
scas
lcall
stos
push
lret
pop
inc
xor
fidivs
mov
mov
aam
cwtl
mov
cltd
jo
mov
mov
icebp
sbb
pop
arpl
inc
call
jl
dec
lret
mov
pop
loop
icebp
sbb
sbb
test
cmp
lahf
idivb
sti
jnp
daa
mov
xchg
leave
push
out
add
int3
shrb
inc
dec
mov
push
dec
push
imul
jmp
fnsave
dec
mov
inc
stos
pop
popa
mov
adc
xor
ja
xchg
cmc
daa
lods
mov
jne
dec
push
cmp
outsb
je
insl
outsl
xchg
add
imul
ret
cltd
out
jne
xlat
jbe
jae
jo
mov
mov
scas
int3
sub
aas
xchg
rcr
xchg
xchg
dec
pop
jl
repnz
addr16
mov
js
and
outsb
dec
pop
xor
cli
and
mov
adc
icebp
adc
cmpsl
frstor
or
fwait
jle
cmp
sahf
aam
cld
movsb
jmp
incl
enter
adc
xadd
gs
test
fiadds
jbe
lea
data16
xor
loop
xchg
and
pop
add
mov
outsw
das
stc
push
pop
cmp
fcomip
out
ljmp
ds
outsl
xorb
jne
cmpsl
jg
call
sbb
arpl
adc
mov
lea
mov
xchg
jle
leave
push
lea
pop
adc
dec
dec
cmp
pushf
mov
adc
pop
stc
and
jl
dec
out
lock
mov
aas
sbb
sbb
dec
mov
push
push
adc
call
sub
out
push
or
shlb
or
sbb
dec
jno
jg
lods
insl
mov
lea
add
fcmove
or
movsb
lds
je
xchg
sbb
stc
xor
notl
cmc
add
and
mov
xor
push
faddl
xlat
jne
pop
into
sar
mov
cltd
clc
out
sub
jecxz
dec
or
int
js
stos
mov
and
push
test
fwait
aaa
push
push
std
push
xchg
sub
dec
dec
pop
in
movsb
daa
jp
dec
ds
sub
lret
repz
leave
mov
into
out
insb
lds
or
sub
push
xchg
adc
test
inc
push
pushf
stos
and
cmp
andb
adc
aam
rcll
dec
push
add
mov
sahf
cs
rorl
mulps
repnz
or
jg
sar
xor
daa
mov
xchg
mov
fcmovu
lahf
pop
push
xor
xchg
inc
int
rolb
cli
jo
and
inc
xor
das
stos
scas
or
or
stos
jmp
shl
nop
xchg
movsl
ffreep
loopne
push
push
in
jns
ret
in
sti
sub
cld
cmp
lock
cmc
xor
xchg
push
jle
or
sub
mov
and
jg
dec
dec
dec
mov
mov
loopne
cmc
cmc
aas
xchg
cli
mov
enter
mov
mov
pop
rcrl
scas
xlat
cmp
jb
cmc
jmp
lods
mov
cltd
aas
fbld
cwtl
jl
aad
inc
test
mov
push
test
lock
ret
inc
jns
inc
movb
fildll
jl
fwait
xchg
fwait
pop
fistpl
jae
sarb
sbb
inc
fcomps
orl
adc
and
xchg
or
cmp
mov
nop
bnd
push
cmpsb
jnp
dec
push
sahf
jo,pt
arpl
fisubrl
sti
xor
lahf
imul
cltd
dec
fsubrp
ret
pop
xchg
stc
push
xchg
xlat
and
mov
or
dec
into
int
scas
jmp
dec
int3
fwait
adc
sahf
int3
or
pusha
lahf
fsubr
inc
jmp
xor
orb
cltd
fsubr
fmuls
jg
loop
mov
dec
cwtl
mov
xor
push
es
or
sub
sub
mov
in
cmc
insl
mov
lahf
faddl
data16
sar
lret
nop
int3
test
mov
adc
push
mov
ja
fwait
mov
inc
and
lds
cmp
add
push
les
and
xlat
or
jg
and
xor
fisttps
sub
push
mov
aas
nop
sub
fdivrl
adc
lret
mov
push
sahf
movsb
inc
lcall
adcb
sub
pop
outsl
xlat
pop
mov
inc
das
mov
shll
jle
je
mov
pop
pusha
or
addps
push
dec
cs
inc
rcll
movsl
cmc
out
int3
push
xlat
cli
in
cli
in
call
fwait
jl
push
mov
xor
scas
mov
cmc
lods
sub
xchg
xor
xor
int
pop
xchg
push
mov
mov
scas
mov
jmp
gs
push
adc
dec
mov
sahf
and
mov
imul
lret
push
aam
arpl
xor
adc
xor
insl
cmpsl
dec
adc
pop
xchg
or
daa
xor
divl
testb
into
rcl
add
inc
mov
add
mov
daa
and
arpl
mov
cmp
and
rclb
mov
adc
mov
push
and
popf
cld
out
clc
xchg
xchg
xchg
pop
fdivr
outsb
jne
adc
mov
enter
mov
sti
dec
push
pushl
sub
inc
push
mov
adc
xchg
sub
imul
enter
in
jmp
aaa
push
into
scas
ja
xchg
mov
jle
xchg
fisttps
push
jne
fwait
test
push
inc
je
or
pusha
ljmp
sbb
jo
daa
mov
pop
jmp
jl
mov
fs
gs
iret
sti
mov
test
lods
jbe
shlb
data16
xchg
or
dec
push
out
sahf
xchg
pop
cmp
inc
enter
and
cwtl
mov
ja
sub
sub
xchg
out
fcmovne
dec
cmp
dec
and
into
cmpsl
leave
dec
or
aam
cs
out
sbb
popa
jb
inc
pusha
jae
inc
mov
pop
std
ret
lret
into
int
icebp
pop
ja
lods
data16
leave
jle
mov
rcrb
or
mov
mov
jle
sub
aas
cmp
fucomip
mov
stos
aad
or
ss
inc
dec
mov
rol
xlat
jg
fsubr
add
into
xchg
decb
cmc
outsl
ds
mov
adc
or
xor
mov
pushf
inc
xor
sub
ret
sbb
jne
lret
stc
imul
xor
pop
cmc
cmc
push
xchg
mov
xor
or
pop
stos
stc
cli
out
insl
clc
sub
lock
jb
mov
in
mov
cmc
pop
xor
mov
mov
out
xchg
scas
jbe
lea
in
and
hlt
add
pop
stos
loop
jecxz
jae
clc
xchg
lcall
testl
mov
cld
adc
jecxz
je
stc
pop
gs
add
or
add
in
inc
mov
or
adc
push
js
or
imul
xchg
ljmp
dec
push
rorb
mov
push
mov
or
lret
movsl
adc
cmp
adc
mov
dec
inc
ljmp
push
in
xor
pop
cmp
je
in
fucomi
inc
push
sub
subps
pop
lods
andb
sub
jnp
js
adc
xchg
dec
xor
and
inc
xchg
dec
jno
loopne
push
dec
leave
mov
dec
cmpsl
test
stc
lret
lahf
in
fisubrs
and
movsb
push
or
or
mov
fwait
and
pop
xchg
pop
sub
and
xor
mov
add
push
mov
jns
bound
mov
or
sub
add
aas
rolb
cs
iret
mov
pop
cmp
cmp
movsb
das
outsb
in
mov
dec
mov
sbb
loop
jecxz
cmpsb
jae
jge
scas
cmpsl
fs
in
mov
pop
mov
call
in
adc
lret
out
pop
or
leave
add
out
xor
jmp
imul
xchg
pop
dec
inc
mov
sbbl
or
mov
inc
mov
dec
ficoml
inc
dec
ljmp
jle
arpl
jmp
icebp
dec
push
cwtl
push
movsb
mov
mov
addb
cmpsl
mov
push
fsts
xor
mov
inc
mov
and
xor
jmp
outsl
add
push
sub
mov
fstps
cmpsb
dec
out
shll
xor
jl
push
clflush
cmpsb
inc
int
outsb
sbb
outsl
cmpsb
icebp
or
insb
jns
mov
cmp
mov
inc
push
pop
inc
push
xor
pop
dec
lret
push
and
popa
test
test
pop
jmp
sti
or
jns
jmp
jbe
outsl
decb
in
dec
scas
idivb
sbb
pop
subl
xlat
add
andb
and
iret
sahf
mov
or
cltd
lea
lret
xchg
jmp
insb
in
mov
mov
push
insl
lcall
mov
inc
outsl
jle
loope
stos
leave
or
sbb
mov
pop
jb
push
test
scas
xchg
xchg
mov
stos
inc
adc
out
or
jg
mov
cmp
leave
shr
sahf
mov
mov
jo
cltd
loopne
dec
orb
xor
nop
jp
cmp
inc
dec
shl
pop
dec
cmpsb
int
bnd
and
jne
cs
xchg
lret
mov
lea
fidivrl
mov
fcoml
xchg
dec
jnp
xchg
or
pop
mov
xor
outsb
cmc
add
lea
cmpsl
xor
push
or
mov
pusha
sbb
out
xor
es
dec
push
mov
push
sbb
outsl
sahf
and
push
dec
or
mov
popf
pop
imul
imul
push
lcall
pop
push
mov
daa
adc
mov
or
roll
stos
orb
mov
dec
movsb
push
cli
cmpsl
xchg
jae
push
shl
jno
mov
or
add
push
or
pop
mov
clc
add
mov
fstpt
hlt
aas
push
sbb
cmp
xor
mov
jmp
shr
xor
jl
sbb
aad
push
mov
jmp
repnz
push
mov
dec
push
sahf
jne
popa
fstps
add
int3
shrl
cmp
and
xchg
dec
pop
dec
nop
lds
idivb
mov
cmp
pushf
push
mov
xchg
xor
movb
and
inc
mov
cmp
lret
jnp
jnp
movsl
and
jns
pushf
push
lret
jmp
jmp
dec
mov
test
outsl
xor
int
in
lret
scas
mov
push
mov
xlat
sarl
xchg
adc
dec
int3
pusha
lcall
pop
mov
adc
lcall
or
addr16
shrb
inc
in
push
bound
pop
lret
lods
sbb
jb
lret
jl
in
inc
stos
xor
adc
xchg
shrb
shll
adc
and
stos
jge
pop
stos
xor
mov
adc
push
push
inc
push
leave
sub
jp
popf
cmp
adc
xor
and
bnd
adc
cmp
push
sub
test
jg
sbb
dec
inc
xchg
cmp
pop
xlat
and
enter
dec
xchg
arpl
fs
in
cmp
jge
push
loope
leave
loop
add
or
push
out
mov
pop
jnp
call
xchg
scas
push
jl
adc
movsl
ljmp
aad
imul
xchg
stos
out
arpl
dec
in
jp
cmp
mov
movsb
push
jmp
push
dec
xchg
mov
push
jo
repz
dec
cmp
fsubs
xor
push
outsl
cmp
out
push
mov
out
es
inc
mov
cmp
or
repz
pop
rclb
jg
mov
outsl
aas
xchg
into
cmpsl
inc
dec
daa
jno
notl
push
lret
shlb
loopne
sti
scas
xor
movsl
cmc
stos
and
loop
xchg
cwtl
xor
push
stc
mov
arpl
fistps
loopne
int3
dec
ret
int
and
xchg
push
jp
fwait
or
push
mov
fwait
or
dec
and
insl
sbb
add
ljmp
lahf
mov
inc
ret
cmp
leave
gs
fistpl
movsl
xchg
or
test
test
and
rcrb
idivb
hlt
lahf
rclb
adc
jmp
cmp
pushf
enter
inc
inc
jb
xchg
ss
testb
mov
sub
xor
mov
sets
sbb
pushf
stos
ja
xor
xchg
and
push
fsubp
out
jns
stos
cs
mov
movsl
sti
jg
or
adc
and
js
call
stc
inc
cs
or
mov
inc
in
xchg
bound
ret
lea
repnz
inc
pop
sti
insb
nop
rolb
inc
xchg
inc
pop
in
int3
sbb
leave
in
dec
rcl
clc
ljmp
jns
jo
push
mov
xor
push
out
dec
mov
inc
push
dec
push
es
cmpsl
push
mov
outsb
sbbl
dec
pop
xchg
cmc
xchg
lret
pop
std
or
mov
sub
xchg
pop
popa
push
jle
xor
arpl
cltd
pop
cwtl
add
out
add
shr
je
pop
sub
clc
xlat
or
stos
test
xchg
cmpsb
push
pop
cmpsb
daa
pop
int
loopne
pop
inc
dec
jp
mov
dec
mov
enter
jb
cltd
push
jge
loop
mov
dec
movb
pop
sarl
mov
loop
roll
mov
rorl
mov
sbb
inc
hlt
imul
test
lret
stc
test
sbb
push
xlat
flds
testb
cli
xchg
add
es
repz
push
clc
push
xchg
in
fwait
test
roll
repz
pop
movb
dec
das
inc
mov
sub
sub
loope
dec
dec
xor
or
mov
in
pop
mov
sarl
sub
cmc
sbb
xor
mov
movsl
xchg
inc
pop
stos
jbe
xor
repnz
jecxz
adc
mov
mov
stos
test
add
rcr
mov
fsubp
icebp
loop
cli
leave
out
jns
sub
aam
dec
clc
stc
mull
ss
out
ljmp
in
test
inc
ljmp
lret
sbb
push
std
dec
in
leave
stc
pop
jae
test
mov
push
fdivl
fcmovnu
lcall
pop
out
jecxz
out
sub
mov
iret
push
and
dec
mov
sar
cltd
or
inc
sub
push
adc
arpl
dec
data16
jecxz
and
pop
xor
shrl
mov
dec
aad
sahf
cs
cld
xchg
mov
pop
lcall
in
sub
and
or
rorl
lcall
lret
aad
imul
mov
pop
cmp
jo
add
xor
or
fwait
outsb
mov
in
pop
push
fists
fnstsw
data16
push
sahf
jno
movsl
lock
rorl
mov
rcl
mov
imul
fwait
lret
and
sub
and
push
jmp
mov
push
out
push
pop
or
sahf
mov
add
loope
cmp
jo
mov
and
lahf
xchg
scas
push
iret
rolb
sahf
aad
lods
mov
add
push
arpl
push
push
jae
mov
xchg
mov
adc
jle
or
pop
add
cmp
add
out
jne
ljmp
hlt
inc
out
jmp
ljmp
enter
push
ret
dec
hlt
pop
dec
les
out
mov
adc
call
mov
push
cld
arpl
pop
std
adc
lret
ja
in
xchg
pusha
pcmpeqb
js
push
icebp
outsl
sti
xchg
and
mov
lret
mov
insb
cld
out
mulb
ljmp
stc
sbb
aas
or
mov
push
cli
ret
out
popf
jns
inc
jge
iret
mov
ljmp
dec
pop
sbb
jbe
mov
inc
inc
sbb
mov
stc
rorl
mov
sub
cmp
xchg
cli
adc
or
leave
andb
push
iret
mov
sub
jp
xchg
and
xchg
cli
cmp
mov
mov
or
pusha
cwtl
mov
push
fnstenv
ret
pop
sub
xlat
pushf
pop
cmpsb
xchg
adc
gs
testl
fxch
faddp
int3
mov
cmp
pop
jmp
lds
mov
mov
iret
int3
icebp
mov
jle
cmp
mov
iret
mov
mov
sbb
leave
stos
push
xor
push
int3
cld
mov
mov
or
fistl
hlt
lock
xor
xchg
mov
push
stc
or
jge
je
movsl
inc
mov
jle
push
mov
lret
pushf
sahf
lea
sti
sahf
push
shlb
nop
cmc
push
stos
push
mov
fists
sbbb
icebp
inc
lcall
push
loop
xchg
dec
add
or
scas
iret
fmul
cli
xchg
dec
shll
das
adc
push
cmp
or
mov
mov
mov
cmp
dec
shl
dec
and
mov
jae
sbb
rsm
lahf
imul
push
int3
xchg
fiadds
aas
mov
mov
mov
bound
fstpl
mov
mov
jmp
bound
dec
daa
cmp
dec
cmp
sahf
data16
aam
dec
and
sub
popf
les
jnp
scas
shll
xor
out
jge
add
pop
push
cmc
in
cmp
adc
out
mov
inc
push
adc
pop
mov
pop
movsl
mov
bnd
cmc
cmp
cmpsb
fistpl
shll
mov
bound
pop
mov
or
sbb
int3
scas
dec
cmp
jno
sbb
enter
fimull
dec
lret
push
fwait
mov
aad
int3
addr16
add
or
xlat
imul
push
aad
dec
in
aad
push
inc
lods
dec
out
jecxz
sti
lret
ds
out
ret
dec
adcb
push
icebp
mov
xor
adc
ja
mov
cmp
and
inc
add
xchg
sbb
dec
jno
pusha
or
les
xor
mov
or
les
loop
stc
pop
cmp
out
xchg
cmp
mov
shl
or
jg
aam
gs
pop
dec
loop
cli
mov
mov
mov
xchg
or
mov
ss
xor
rcrl
stos
xor
aam
mov
cmp
xor
pop
jge
int
xor
push
xchg
movl
stc
and
rorb
in
scas
sub
leave
push
fwait
mov
push
subl
in
clc
and
jmp
dec
cmpsl
aad
aad
and
lret
dec
leave
daa
mov
bound
test
xor
pop
xor
push
xchg
inc
lret
mov
jmp
mov
testl
xchg
outsb
rcll
imul
lods
ss
or
push
xchg
sbb
jb
add
aam
iret
out
xor
xchg
mov
inc
loopne
lods
jle
xor
dec
sub
fucomp
fisubs
imul
adc
adc
out
adc
insl
fdivl
push
or
lahf
int
imull
mov
mov
movsb
not
rol
push
sub
mov
push
mov
pusha
sub
or
sub
push
es
dec
push
xchg
dec
and
int
imul
sbb
adc
shl
hlt
mov
and
mov
mov
in
je
leave
nop
lods
pop
stos
push
sub
dec
dec
xor
stc
push
pop
push
int3
aam
push
adc
movsb
enter
push
add
shrl
push
xchg
xchg
push
cmp
push
int3
inc
mov
add
fdivs
incl
cli
xor
mov
xchg
lret
idivb
xchg
push
mov
icebp
push
jle
jp
mov
xchg
daa
aas
mov
jg
orb
xor
lahf
inc
xchg
jo
cmp
loopne
fistps
add
and
jp
xor
add
int
lret
sahf
popa
mov
sub
xchg
cmc
pop
dec
mov
cli
push
mov
xor
stos
aaa
xchg
mov
dec
xchg
imul
fiaddl
aad
pop
push
popa
ds
bound
dec
ret
out
xchg
push
out
aaa
inc
or
inc
cmp
mov
fdivr
xor
idivl
loop
mov
push
stos
stc
adcb
fstps
cmp
mov
ret
xchg
sarb
rol
imul
push
dec
and
repnz
lcall
push
inc
ljmp
xchg
push
jp
adcb
cmc
xchg
dec
mov
call
fsubrs
test
dec
xorb
dec
push
cmp
mov
cmpsb
sti
fcmovb
adc
gs
arpl
dec
dec
adc
dec
cltd
je
jl
out
push
mov
inc
xchg
inc
dec
push
mov
mov
ficoms
xor
in
les
jl
adcl
pop
inc
mulb
movsl
dec
lea
cs
rcrb
sbb
xor
cmpsl
clc
sbb
add
sub
int3
jle
push
xor
cmp
test
scas
push
sub
sub
nop
stos
divb
hlt
stc
jb
adc
call
inc
cmp
xor
fs
stos
lods
imul
xor
in
xchg
jmp
shl
ret
jp
pop
in
ljmp
es
xor
push
and
sub
push
icebp
mov
push
leave
cli
jge
mov
dec
sbb
adc
aaa
clc
loope
enter
jle
sub
mov
and
or
xlat
lea
add
xor
add
repz
dec
dec
xlat
lods
xchg
dec
mov
inc
loope
cmp
insb
sub
add
push
insl
mov
fists
leave
jle
push
fidivrl
repz
popa
fistl
or
shlb
xor
mov
xor
sub
sub
push
movsl
lret
jne
icebp
nop
sarb
xrelease
sbb
cmp
mov
xor
jl
dec
or
sti
jnp
mov
mov
push
mov
sub
ffree
mov
es
lock
sub
dec
imul
lock
repz
sbb
gs
inc
inc
fidivrl
loope
or
or
cmp
je
stos
dec
aam
cmc
shrb
arpl
out
jmp
sahf
repnz
or
leave
dec
inc
mov
xchg
les
dec
hlt
ret
mov
sub
mov
hlt
xchg
fcoml
cltd
int3
pop
push
and
mov
rcll
and
pop
inc
aam
cmp
rclb
xlat
in
cmc
mov
stos
mov
bound
dec
push
xor
ret
add
mov
icebp
xor
xchg
cli
or
inc
xor
les
pop
dec
nop
adc
mov
push
je
sub
les
or
fisttpll
es
std
sarb
and
lahf
repz
mov
fldz
mov
adc
xchg
les
cmp
pop
xchg
sbb
cld
iret
xlat
sbb
lcall
je
daa
lahf
test
add
jmp
loop
cli
outsb
movsl
sub
lea
fisubs
test
mov
xor
mov
cmp
out
inc
xlat
xor
leave
lea
js
arpl
xchg
into
les
xchg
lods
push
into
std
mov
cmp
das
cmp
cmp
or
lret
loope
pop
dec
dec
and
pop
push
xlat
test
mov
adc
lret
or
mov
or
sbb
adc
stc
pop
pop
dec
jmp
dec
jmp
adc
enter
mov
fwait
rcrb
lea
repnz
loope
or
sahf
iret
inc
movb
jmp
push
popf
lock
or
pushf
cmp
jns
clc
in
pop
xchg
push
dec
outsl
jmp
push
mov
scas
movsl
fs
imul
popf
mov
xor
push
jmp
roll
or
hlt
mov
lods
das
loopne
mov
imul
xchg
pushf
add
das
xchg
insl
icebp
iret
jmp
jge
fmuls
int3
push
repz
clc
or
fmul
cli
sbbl
sbb
inc
xchg
cmp
icebp
in
dec
mov
int3
pusha
xchg
or
into
lds
xchg
push
xchg
inc
xchg
aad
shll
or
inc
xchg
cs
aad
push
lods
idivb
push
insl
test
clc
roll
in
enter
xchg
mov
iret
sbb
pop
loope
cmpsb
mov
insl
or
aas
stos
jge
pop
iret
inc
xchg
pusha
sti
or
test
xchg
xchg
mov
in
and
repz
pusha
in
xor
push
pop
shll
jp
push
iret
imul
cs
fldenv
xchg
bound
and
aaa
int3
mov
std
orl
sbb
stc
mov
xchg
mov
or
push
mov
mov
xchg
xor
mov
add
ljmp
jb
push
xchg
sbb
push
xor
fs
adc
add
iret
and
cmpsb
addr16
in
cmc
sbb
lods
int3
pusha
and
in
cs
xchg
mov
and
and
sar
cmp
mov
cmp
mov
daa
testl
inc
lret
shll
and
sti
aam
dec
adc
add
and
mov
adc
pop
mul
or
inc
xchg
decl
test
in
pop
cli
loope
int3
mov
or
into
lock
faddl
pop
mov
ss
xchg
push
sbb
aas
mov
rorl
push
push
sub
mov
cmp
inc
out
jns
aam
dec
or
push
sarb
and
xor
lds
iret
dec
cld
hlt
popa
and
sub
add
push
xor
stos
push
aam
fisubs
daa
shrl
in
inc
mov
adc
sbb
xor
icebp
hlt
ja
aad
push
pop
pushf
and
mov
pushf
lods
cmp
pop
scas
add
jmp
nop
push
and
movsb
js
mov
js
jecxz
arpl
mov
xchg
jge
enter
sahf
xchg
lahf
ljmp
aas
aas
rclb
dec
or
mov
cli
in
sbb
mov
dec
addr16
push
inc
mov
imul
pop
mov
test
js
inc
mov
xchg
dec
shlb
inc
mov
jl
cmp
dec
and
cli
xor
sub
jbe
hlt
test
call
and
cli
adc
mov
dec
mov
or
loop
loopne
sub
sti
dec
std
in
neg
mov
gs
xchg
cmp
in
int3
jb
cmc
sete
xor
cltd
fistl
dec
iret
dec
ja
xchg
pop
adc
mov
ret
fisubrs
mov
mov
xchg
inc
ss
inc
icebp
mov
cmp
push
jg
out
aaa
mov
flds
cmp
testb
mov
push
sub
mov
lea
testb
push
xlat
mov
movsl
xchg
ss
mov
outsl
inc
cmp
xlat
xchg
lods
push
push
pusha
dec
insb
out
dec
ret
loopne
sbb
dec
mov
popf
or
cwtl
add
repz
mov
aam
push
roll
add
sarl
xor
stos
scas
in
xchg
popa
pop
and
push
decl
cmpsb
or
and
sahf
xchg
aam
loop
aad
rcll
inc
sub
push
insb
ds
jle
push
rorl
lret
pop
icebp
pop
lds
xchg
sub
pop
pop
mov
inc
out
mov
push
leave
dec
loope
inc
push
out
cmp
pop
pop
jle
push
inc
fmul
int
xor
arpl
push
sub
lret
jnp
sar
inc
cwtl
mov
incl
mov
jecxz
mov
movsb
xchg
sti
repnz
shlb
rorl
insb
xchg
mov
aad
out
lea
mov
stc
push
outsb
sbbb
and
mov
mov
cli
or
popf
push
push
imul
ret
scas
in
imul
push
pop
and
sahf
adc
jno
fdivrl
outsb
es
mov
and
sub
ret
cwtl
fnstcw
mov
cltd
mov
hlt
lahf
mov
adc
push
inc
pushf
mov
mov
dec
adc
es
in
xchg
or
fwait
jmp
adcb
ja
mov
pop
jecxz
mov
sub
popa
outsl
int
mov
lret
xchg
jne
jmp
inc
xacquire
adc
or
pop
insb
pop
aam
pop
xchg
pop
fisubrs
xor
lret
or
mov
inc
daa
rcl
push
and
cmp
push
pop
push
in
je
repz
xchg
adc
dec
xor
fwait
sbb
push
cmp
cli
adc
lods
pushf
adc
jbe
fwait
add
out
lock
dec
cs
push
xor
lcall
dec
rcl
xchg
xchg
xor
and
shrb
sub
rolb
pop
lret
cmp
xchg
fwait
gs
mov
stos
aaa
jecxz
xor
xchg
lret
cmpb
jo
clc
andb
pop
aas
cmp
into
roll
out
cmc
push
stos
repnz
push
cmp
repz
jp
push
xchg
dec
call
ss
popf
cs
insb
push
sub
jecxz
ret
adc
ret
mov
dec
cs
add
out
pop
popf
xchg
stos
lods
jb
shl
ds
pop
lea
test
stos
pop
mov
xor
loope
mov
jmp
out
aad
jmp
push
imul
mov
stc
icebp
pop
adc
iret
fwait
push
push
push
add
outsb
xlat
push
rcrl
xchg
pop
sbbb
clc
les
cmpsl
xor
mov
fdivrl
jbe
lahf
iret
adc
frstor
sub
daa
out
int3
dec
jle
aad
test
mov
mov
idivb
aaa
into
dec
movsl
enter
insb
jae
bound
adc
bound
add
lahf
add
rcl
fcomip
pop
iret
or
push
add
cwtl
int3
push
mov
dec
pop
jno
nop
out
jle
push
in
jg
out
pop
mov
aaa
adc
sbb
pusha
int
pop
dec
dec
neg
lret
push
jge
jne
dec
push
mov
xor
mov
xchg
mov
dec
aad
push
mov
adc
stos
fisubs
sub
xchg
into
xor
decl
cmpsl
xchg
sbb
mov
and
popf
ljmp
xchg
aaa
cs
loopne
cmp
loope
fsubrs
push
push
adc
dec
out
cmp
leave
xor
test
imul
xchg
mov
dec
out
lret
pop
dec
mov
sub
pop
scas
xor
adc
rcl
jnp
sub
sqrtps
test
fbld
aad
mov
lods
int3
xor
in
mov
das
rcrb
aad
sub
imul
and
cmp
mov
jl
mov
shlb
fidivrs
in
in
aam
push
fcoms
cmc
mov
xor
pop
iret
dec
push
mov
xchg
jne
addb
sbbb
fisubs
jmp
fldcw
add
xchg
in
mov
lea
in
fmull
and
mov
or
in
imul
insb
into
call
xchg
or
add
mov
xor
push
xlat
and
ficomps
repz
jbe
xchg
nop
add
bound
xlat
jb
cmpsl
aad
outsb
icebp
idivl
movsl
jg
cmp
mov
arpl
clc
addb
out
sbb
adc
daa
or
imul
imul
fstp
add
adc
push
jae
outsb
call
adc
mov
sub
dec
sbbb
xor
inc
push
test
cmpsb
lcall
push
or
dec
push
loope
lret
repnz
xchg
push
lods
rcr
push
icebp
daa
mov
lods
xlat
out
dec
shlb
pop
cli
xchg
movl
inc
dec
mov
dec
push
and
and
add
inc
mov
sbb
push
outsl
or
arpl
out
subb
dec
mov
jle
or
mov
pop
aas
mov
xor
lret
test
dec
inc
jp
mov
lods
daa
loopne
cld
xlat
cmp
xor
gs
xor
push
dec
xchg
icebp
cmp
aad
cmpsl
mov
in
mov
pop
fisubs
xchg
xchg
mov
dec
pop
push
sub
add
jl
add
and
adc
xor
cmp
mov
test
mov
das
in
sub
jmp
mov
xchg
les
cmp
subb
pushf
std
insb
insl
dec
cli
adc
or
addr16
aam
adc
xor
in
jge
mov
imul
adc
cmc
cli
in
cmp
dec
mov
dec
mov
sti
xchg
xor
inc
out
popa
push
ljmp
lds
leave
xor
xchg
ja
xchg
aam
mov
shlb
xchg
popa
hlt
push
push
adc
or
decl
and
push
mov
adc
imul
mov
shlb
jns
xchg
fs
push
xchg
out
jnp
rol
pop
jl
mov
xacquire
jne
int3
push
addr16
xchg
push
movsb
cmp
xor
mov
enter
aam
xor
ds
sub
fwait
aam
lcall
xor
xor
mov
dec
push
fdivs
push
xchg
xor
xor
es
sti
loop
ja
jae
cmp
xchg
lcall
sbb
enter
mov
mov
inc
mov
add
lahf
loope
sbb
pop
mov
mov
int3
pop
push
scas
xor
jl
xor
shll
cs
test
adc
dec
xor
lret
and
adcb
jbe
addr16
iret
pop
in
negb
fbld
cmpsb
sub
jmp
mov
adc
mov
in
or
xchg
lock
or
jnp
arpl
sub
sbb
pop
xor
sbb
inc
inc
lret
ljmp
out
or
int3
xchg
fisttpl
adc
test
and
cmp
xchg
xor
or
repnz
call
jne
test
rol
lret
imul
insl
sbb
ljmp
call
adc
jmp
cld
jnp
pop
fdiv
sbb
mov
in
dec
mov
loop
ss
loopne
adcl
lret
cld
cmpsb
inc
test
lahf
adc
inc
lods
add
jnp
sti
sbb
push
es
jnp
xchg
xor
sub
adc
imul
frstor
mov
cmp
leave
mov
jne
repz
mov
in
jge
out
arpl
ss
pusha
repnz
mov
stos
mov
mov
lods
inc
or
mov
cmpsb
jp
iret
testb
sbb
and
push
js
push
xchg
out
int
or
or
dec
mov
shrl
ss
orl
mov
adc
cltd
pop
mov
out
in
or
insl
icebp
call
arpl
popa
loopne
inc
jl
rorb
mov
das
jb
xchg
popf
adc
mov
incb
in
ficoml
rolb
cmpsb
cmp
cmp
insl
push
repnz
fimuls
xor
jmp
and
push
bound
out
pop
popf
xchg
lods
mov
xchg
testb
push
divb
out
mov
lock
ret
jp
mov
cltd
cmpxchg
or
pusha
or
cli
inc
cmp
rclb
outsb
cwtl
add
xchg
pusha
push
or
xchg
data16
mov
inc
mov
add
jmp
mov
fs
shrl
sti
ret
scas
outsb
cwtl
sub
fwait
or
xor
daa
sbb
jg
stc
dec
in
push
or
les
sarl
test
or
ret
dec
outsb
sarb
cwtl
mov
shrl
mov
and
mov
dec
xor
or
or
adc
dec
mov
shlb
push
or
popfw
shll
leave
or
cmovl
leave
pop
xchg
test
inc
fsubs
lret
mov
mov
mov
clc
testb
arpl
adc
pop
xlat
leave
mov
dec
scas
fcmovnu
loope
xor
push
roll
sub
mov
test
fisubrl
sbb
xor
mull
subl
decb
inc
adc
cwtl
pop
jb
mov
jge
fists
add
mov
add
push
mov
in
pop
hlt
test
lret
icebp
xchg
mov
fucomi
jge
push
pop
mov
inc
xchg
xchg
jno
xchg
ds
outsb
testb
xor
adc
int
or
xchg
mov
sub
dec
arpl
and
mov
dec
imul
ss
or
sahf
jg
cltd
outsl
push
repz
pop
sarl
mov
mov
and
mov
in
lock
mov
hlt
fcom
adc
lds
jno
rcll
or
outsb
add
imul
add
jnp
or
dec
sub
cmpsb
pop
int
adc
xchg
adc
mov
cmc
jb
sti
xchg
inc
push
cmpsl
cmpsl
adc
test
movsb
mov
insb
xchg
test
shrb
ljmp
imul
insl
jle
jmp
pop
in
outsb
test
fsubrl
sub
ljmp
mov
cmpsb
xlat
xchg
dec
ljmp
repnz
iret
movsb
imul
insl
xor
xchg
scas
dec
inc
adc
dec
lret
jecxz
dec
xor
mov
lret
data16
jns
lret
jecxz
dec
jae
movsb
mov
xchg
stos
lods
xor
push
sti
mov
pushf
int
rcrb
xchg
mov
fmul
out
das
clc
add
jmp
das
mov
jno
lret
daa
inc
outsl
mov
arpl
insl
movsb
rcl
mov
insb
mov
shrb
inc
add
arpl
dec
fs
cmp
fildl
test
xlat
das
sub
ljmp
in
cmpsb
xlat
xchg
dec
ljmp
iret
movsb
imul
insl
xor
xchg
fimull
adc
dec
lret
jecxz
dec
xor
stc
xchg
data16
jns
lret
jecxz
dec
jae
movsb
sti
push
xchg
stos
lods
xor
push
sti
mov
pushf
int
rcrb
xchg
mov
fmul
out
das
std
add
push
mov
fmul
daa
inc
outsl
mov
arpl
insl
rcl
mov
insb
mov
shrb
inc
lea
arpl
rclb
in
mov
shl
int3
sub
xchg
mov
mov
daa
cmpsb
dec
int3
int3
les
movsb
xchg
shr
push
jno
fists
lret
dec
lcall
dec
out
outsl
push
out
fs
out
jno
add
or
out
outsl
inc
call
pop
xchg
adc
lcall
sahf
cmpsl
adc
arpl
xor
mov
mov
push
mov
jns
cmp
add
cmp
hlt
or
mov
or
or
enter
sub
add
rcl
inc
xor
adc
inc
inc
or
adc
arpl
push
mov
es
subl
pop
mov
in
pop
push
inc
sysexit
stos
gs
xchg
fxch
dec
lods
in
sahf
call
mov
daa
movsb
mov
mov
xor
xor
stc
loop
int
inc
add
xor
and
cmp
stos
outsb
pop
pop
clc
int
mov
imul
pop
loopne
ret
sbb
int
sahf
das
xor
mov
arpl
add
stos
xlat
xchg
fbstp
xchg
xorl
cli
lret
dec
lods
xchg
pop
stos
call
sbb
xlat
movsl
ja
stos
adc
xchg
out
insb
xor
arpl
rcll
rcr
xchg
push
xchg
lret
ret
inc
out
insl
dec
push
dec
int3
jecxz
jle
mov
inc
push
fsubrl
xchg
push
dec
xchg
in
push
outsb
clc
gs
int
int
outsb
sti
dec
mov
dec
add
inc
into
aad
movsb
jp
iret
movsl
ljmp
mov
inc
sub
push
into
es
mov
xor
movsl
push
inc
out
pop
pushf
iret
jmp
jecxz
or
or
inc
push
scas
jecxz
add
jp
sub
adc
jbe
sub
or
daa
cmpsl
out
addl
mov
pushf
mov
cltd
cmpsb
sbbl
shlb
fdivr
jg
jo
cmpsb
fnstcw
ds
pop
pushf
cmc
jne
inc
pop
negb
mov
push
pop
scas
lods
mov
add
fstpt
shll
mov
loopne
data16
jne
std
pop
in
imul
orl
lahf
icebp
ret
inc
push
imul
mov
scas
cmc
jnp
mov
inc
pop
lcall
fisttps
imul
mov
fcmovbe
sub
mov
pop
jl
add
or
adc
ljmp
into
push
hlt
adc
lods
or
aam
adc
push
mov
popf
mov
pusha
aas
xor
cwtl
xchg
sbb
xchg
mov
push
xor
jns
gs
popf
xchg
xor
jmp
and
imul
xor
sbb
mov
xor
cmp
xor
inc
inc
or
mov
fldl
mov
xchg
mov
xchg
add
iret
mov
testb
lret
sbb
cmp
push
andl
jge
out
pop
shlb
or
xor
mov
push
xchg
xchg
pop
sahf
and
pop
xchg
out
cli
mov
lods
mov
lods
jp
stos
xchg
cmc
popf
insb
daa
push
jle
xchg
loope
mov
bound
push
movsb
call
fstps
test
aad
sub
cmp
iret
push
xor
jno
xchg
scas
jno
test
mov
sub
lahf
imul
lods
lods
push
cwtl
pushf
jo
mov
cmpsb
mov
maskmovq
testl
ds
ds
cmp
lahf
ret
fdivrp
dec
rorl
pop
shll
jne
mov
xchg
mov
dec
cmp
pop
dec
icebp
sbb
mov
adc
nop
lcall
cltd
rcll
inc
and
dec
push
loope
lock
inc
mov
jbe
fs
daa
pop
test
xchg
fdivrs
dec
fwait
stos
inc
mov
ret
xchg
add
dec
dec
arpl
mov
aad
push
ljmp
pushf
aad
enter
sahf
xlat
and
xor
ja
outsl
ret
lods
xchg
pop
popf
fnsave
xor
cltd
dec
rcr
mov
and
inc
lods
jb
js
mov
jle
mov
adc
lahf
ds
cmc
fwait
xchg
adc
fwait
and
repnz
mov
nop
mov
lret
jmp
inc
adc
or
iret
sbb
negb
pop
mov
inc
jmp
mov
inc
xor
and
add
inc
mov
sub
lret
shll
mov
cmp
mov
fs
add
stc
sti
imul
pusha
pop
pop
dec
jne
into
adc
loop
out
xlat
xchg
mov
pop
push
out
inc
mov
movsl
dec
sub
aas
jge
mov
nop
push
dec
pop
inc
out
data16
mov
push
dec
pusha
xlat
pop
sbb
aad
add
outsb
leave
push
je
lret
in
imul
imull
sbbb
add
push
inc
out
push
mov
push
into
test
fcoms
es
mov
adcl
jnp
xlat
adc
sub
orl
leave
pop
inc
fidivrs
sub
and
pop
push
in
mov
mov
or
gs
push
lock
mov
adc
mov
rclb
rcrb
add
aaa
push
add
push
push
add
cmp
call
push
push
or
xor
or
sub
addl
push
leave
out
inc
sub
sbb
jnp
sub
es
push
xor
in
mov
mov
ret
rclb
popf
xor
into
pushf
lahf
test
inc
jns
jge
or
arpl
xchg
push
fcoms
jg
stos
mul
pop
nop
movsl
jmp
mov
xor
lds
sbb
mov
movsb
pop
mov
mov
jno
jle
xchg
cmp
dec
sti
scas
cltd
xor
sahf
test
notb
jg
xchg
mov
icebp
cltd
addl
lods
scas
jno
mov
sbb
push
out
adc
xor
inc
popa
test
mov
idivb
xchg
jnp
push
mov
bound
and
inc
scas
mov
inc
jno
jle
loope
pop
nop
ja
sbbb
shrb
mov
loopne
mov
add
ds
pop
mov
xchg
je
scas
mov
cmpl
mov
pop
or
outsb
adc
icebp
fsubp
adc
lahf
mov
roll
test
mov
ds
outsl
out
ret
sti
cmp
sub
xor
xchg
lret
ss
jmp
xchg
push
mov
and
cmpsl
idivl
cmp
addr16
pop
lock
in
in
mov
push
inc
daa
cs
in
adc
xor
aad
in
int3
in
jns
rorb
les
pop
cs
scas
dec
jmp
iret
inc
add
bound
xchg
inc
xchg
sub
rcll
imul
in
shr
mov
mov
xor
xchg
stc
fildl
mov
jp
lcall
fbstp
add
ds
imul
nop
xor
fdivrs
mov
aad
not
inc
aam
iret
rcr
inc
stos
icebp
push
fcmovne
repz
push
pop
cmp
or
dec
jns
scas
inc
dec
sub
pusha
xchg
inc
or
push
testb
cld
push
jmp
arpl
push
lahf
jne
test
push
pop
pop
lahf
push
jg
jp
fimuls
jb
jp
clc
adc
ret
cltd
dec
mov
lret
sub
jnp
nop
inc
add
pop
rolb
jl
ss
cld
icebp
mov
push
aas
push
or
rcl
cltd
cli
fcompl
sub
push
sbb
xchg
stos
push
popa
push
repnz
lcall
fdivl
sbb
pop
into
inc
inc
mov
jae
cmp
iret
mov
push
and
dec
inc
jmp
negb
cld
adc
and
add
aas
rcl
mov
fs
xchg
jae
scas
iret
adc
adc
jle
jae
out
or
clc
inc
inc
or
or
jbe
xchg
arpl
dec
cli
mov
movsb
testl
scas
pop
popl
in
sub
enter
cs
inc
jno
imul
add
adc
in
xchg
inc
stos
mov
lods
in
xchg
dec
mov
mov
jo
sahf
dec
cmp
dec
inc
cmpsb
fidivl
movsl
add
pop
jle
dec
lahf
jb
scas
add
xchg
jge
mov
jle
mov
push
stos
inc
nop
and
lret
xchg
std
mov
int3
inc
in
cld
xor
hlt
xchg
cmp
loope
arpl
cwtl
xchg
jg
call
cld
dec
mov
repnz
clc
fcoml
lods
and
stc
xor
pop
inc
fistpll
pusha
repnz
mov
or
nop
aaa
shld
jg
mov
inc
and
mov
xchg
lock
mov
sbb
or
xchg
ficompl
vmovss
pop
xchg
enter
sbb
lods
sti
jne
and
jns
push
dec
jae
mov
sub
int3
iret
sbb
mov
mov
movsl
mov
stos
addr16
stos
outsb
mov
lock
imul
test
push
mov
mov
scas
lret
xchg
in
mov
mov
push
push
add
cmc
addb
xor
stos
enter
jg
mov
inc
lods
out
inc
push
ss
ds
clc
rorb
cli
adc
mov
fsubr
push
push
aaa
imul
and
xchg
or
pop
adc
sbb
jnp
ss
fldcw
mov
sbb
xchg
dec
xchg
mov
xchg
scas
out
jae
lret
sub
sub
dec
test
ja
xor
jmp
aas
ds
pop
mov
push
jge
sbb
bound
cwtl
test
rolb
inc
cltd
out
sbb
or
insb
orb
sbb
jmp
in
ret
xor
sub
pop
add
sub
or
xchg
xchg
inc
punpcklbw
addb
jne
dec
cltd
push
ljmp
inc
out
repnz
es
xor
or
lock
pop
fucomp
ja
dec
cmpsb
ss
mov
jle
in
js
push
leave
cmp
lret
ret
stc
push
ret
add
popf
dec
insl
sbb
lret
cmpsl
test
ja
mov
outsb
mov
mov
dec
outsl
shll
pop
adc
cli
movsb
adc
wrmsr
dec
ss
jmp
test
data16
movsb
mov
sarb
shrb
mov
cmp
push
mov
enter
cs
cld
xor
in
cmpb
out
push
fsubs
cmp
pop
jns
push
ss
add
dec
sbb
out
lods
repnz
into
adc
xchg
fs
jns
mov
mov
std
push
xor
and
aam
jns
imul
enter
mov
mov
daa
mov
adc
ljmp
dec
int3
std
fimuls
cmpl
rclb
das
pop
cmp
sub
sub
iret
insb
sahf
repz
out
mov
iret
inc
lods
sub
in
imul
jmp
sub
repz
lods
sbb
pop
and
cmp
or
sub
xchg
xchg
mov
dec
sub
aam
fcomps
mov
push
rcll
pop
jns
in
in
mov
push
lea
rclb
ret
jecxz
lcall
mov
ret
std
into
push
pop
adc
fldl
mov
fsubs
add
pop
jmp
sub
xchg
xorl
pop
mov
mov
idiv
or
or
mov
leave
push
int
ss
adc
stos
xor
ret
sbbb
inc
fisubrs
adc
mov
mov
divb
fwait
stc
fst
or
adc
dec
mov
sarb
mov
sub
icebp
push
iret
inc
mov
xchg
test
int
push
push
adc
lock
push
loop
sti
lea
repz
repnz
inc
rorl
mov
hlt
bound
imul
std
jp
cwtl
dec
call
fwait
ret
and
imul
cmp
ficoms
mov
cmp
xchg
arpl
addr16
mov
cmp
cli
lcall
addr16
xor
out
pop
imul
out
inc
xchg
mov
cmp
pop
outsb
add
dec
jne
int
inc
cli
dec
insb
mov
push
pop
mov
daa
dec
xor
xor
ret
sbb
push
pop
mov
xor
inc
push
pop
addr16
push
ljmp
aam
mov
push
rcrl
push
imul
pop
les
cs
jg
mov
fimuls
and
punpcklbw
push
mov
hlt
stc
je
stos
mov
xor
fwait
add
out
mov
ljmp
je
pushf
rclb
enter
cli
mov
mov
cmpsl
xor
push
mov
cmp
xchg
lods
in
lock
jp
fdivr
movl
cwtl
es
jg
mov
pop
and
xchg
jns
adc
pop
ret
or
or
gs
or
push
push
ret
sar
test
rorb
pop
icebp
mov
jmp
mov
fnstenv
xorl
dec
jne
les
sbb
sbb
push
out
fists
aaa
cmc
aad
in
hlt
xlat
add
and
js
cwtl
mov
xlat
mov
ficoms
add
test
out
adc
subl
lock
lea
mov
iret
shl
push
mov
jne
fimull
xchg
xor
dec
sub
xlat
xchg
add
cmpl
popf
cli
jp
mov
hlt
sub
add
mov
push
into
jecxz
hlt
inc
pop
inc
cmpsl
movsl
bound
clc
xor
sub
cwtl
push
push
outsl
jb
movsb
leave
pop
out
js
xor
push
int
fisubrs
xor
fcmovne
cmp
dec
sti
test
loop
iret
scas
mov
add
sti
iret
inc
idivl
js
pop
pushf
fists
cwtl
push
mov
push
sub
xor
hlt
ljmp
enter
arpl
scas
fisttpll
xchg
and
and
aaa
mov
call
outsl
sbb
loope
or
mov
bnd
fs
inc
sub
aam
bound
jno
shr
out
add
sbb
sbb
xchg
mov
ret
sbbl
les
sub
xchg
inc
push
push
divl
aad
mov
pop
jmp
sub
fmuls
xchg
and
mov
cmp
or
subb
xchg
xor
bound
sub
or
ja
mov
lock
into
out
mov
or
ljmp
jg
lods
cmpsb
stc
insl
jmp
ja
test
pop
jmp
into
and
ljmp
jb
pop
call
jbe
lret
std
xchg
fidivrl
outsl
push
es
mul
xchg
dec
ja
adc
push
rcrl
lahf
aam
pop
mov
rcrl
push
xchg
sti
or
andb
or
fcmovnbe
call
ret
pop
dec
push
xchg
fstpl
sub
jge
movsl
stos
xchg
ljmp
out
sub
cli
stc
subb
jno
add
bound
push
out
xchg
and
stos
loope
pop
ss
popf
lds
repnz
push
rorb
shlb
rclb
jmp
mov
aas
or
pop
cld
aas
push
pop
mov
in
adc
push
or
adc
cmp
fdivr
test
test
push
xorb
into
xorb
jmp
and
in
or
sub
jle
xlat
dec
ljmp
iret
mov
in
call
repz
shlb
ljmp
cld
int3
mov
mov
fs
std
inc
mov
dec
in
sbb
js
adc
sub
sub
push
clc
push
mov
fmulp
aad
fwait
add
add
pop
inc
aad
pop
lret
mov
ret
stos
dec
mov
sub
inc
sbb
mov
mov
repz
int3
sti
push
mov
xor
lds
loopne
test
rcll
outsl
and
xchg
sub
dec
xchg
cmp
arpl
notl
inc
jmp
arpl
jp
loopne
fwait
push
dec
inc
push
xor
insb
data16
inc
cmp
arpl
dec
xchg
pop
cmpsl
cmp
pop
incb
jmp
jbe
ret
and
scas
fcmovne
push
dec
lret
repz
fcomi
lret
fnstcw
xor
push
mov
cmpsl
and
xchg
sub
mov
fldl2e
cmpsl
lea
insb
scas
rep
fdivrl
inc
sub
lds
mov
sbb
sub
nop
pop
lcall
in
dec
or
xchg
shl
or
and
daa
mov
xchg
sbb
testb
xor
xchg
or
sub
inc
pusha
or
pop
xor
xor
nop
dec
push
jo
out
outsl
mov
pop
arpl
out
cmp
fxch
scas
xchg
sbb
sbb
dec
cmp
cs
sbb
xor
or
adc
xchg
pop
push
and
sbbb
outsb
mov
jecxz
cli
sub
pop
or
sbb
cltd
or
cmpsb
in
ja
pop
jnp
les
jle
faddp
neg
fstl
into
out
fisttpl
ss
adc
mov
inc
or
bound
scas
out
adc
add
mov
mov
jbe
jle
push
ds
pop
fldenv
jmp
cwtl
mov
jmp
xchg
cmpb
mov
in
mov
and
add
mov
into
test
orb
mov
xor
lods
jge
rcl
test
shl
ret
stos
rcr
push
lods
push
xchg
imul
leave
iret
sahf
push
xchg
sub
jae
out
movsb
mov
push
cmc
push
add
pop
dec
fidivs
push
dec
sub
cmp
outsb
mov
xchg
notl
scas
xor
add
sbb
ja
adc
inc
and
icebp
popa
or
dec
aad
jo
sbb
push
or
dec
sub
imul
nop
inc
inc
xchg
popf
mov
pop
mov
jle
xor
or
movsl
in
aad
xor
int3
adc
sub
and
inc
adc
gs
cmp
pop
jecxz
adc
leave
sbb
fsubrs
push
and
jae
insl
mov
ljmp
data16
arpl
nop
es
mov
jmp
add
imul
xchg
movsb
es
push
lods
mov
jb
inc
mov
imul
adc
sub
xor
jge
imul
jmp
xchg
test
clc
or
xchg
add
repnz
lea
mov
add
dec
mov
nop
sub
stos
jb
int3
test
movsb
mov
xchg
push
and
aam
insl
shrl
loope
sahf
je
dec
xor
in
mov
fwait
xchg
mov
xchg
lds
icebp
aam
dec
lods
test
mov
movsb
sub
xchg
fwait
lcall
outsb
mov
jg
dec
in
xor
jl
outsb
subl
jp
xlat
cmpsb
adc
negl
xchg
aaa
sub
add
icebp
jae
or
xlat
jle
mov
push
cs
nop
outsl
inc
lret
in
outsb
out
sti
addr16
push
xchg
push
out
xor
mov
fs
mov
xchg
cmp
daa
idivl
scas
jl
fistpl
insl
mov
xchg
movsb
mov
addr16
js
les
push
test
adc
push
aas
std
int
iret
lahf
iret
dec
inc
mov
scas
insb
cmp
repz
mov
xlat
mov
rclb
or
nop
popf
or
dec
push
aas
push
mov
jmp
cltd
mov
mov
faddl
jge
xchg
test
data16
or
test
pop
pushf
loope
popa
mov
mov
int
iret
movsl
test
popl
test
pushf
cmp
mov
mov
xor
or
lock
in
xchg
add
stc
mov
cli
jecxz
lret
orl
out
fs
rclb
jmp
pusha
out
mov
adc
ficoml
jge
mov
movsl
data16
jne
movsb
bound
into
outsb
fnstsw
cli
lods
clc
cmp
xchg
cmp
das
cld
lret
mov
call
push
push
xor
inc
je
cmp
stos
pop
movsl
ljmp
mov
adc
pushf
int
mov
add
xor
and
mov
add
mov
lcall
mov
scas
mov
push
ss
sub
jp
in
dec
lcall
and
repz
add
into
xchg
dec
inc
jle
inc
jnp
xor
pop
sahf
cwtl
in
mov
pop
adc
jmp
arpl
das
out
fs
stos
stos
adc
cmp
lea
push
and
adc
loope
enter
lret
addr16
clc
popa
roll
inc
movsl
sub
sub
mov
lea
adc
inc
dec
mov
movsl
adc
pushf
cli
fisubrs
mov
je
push
icebp
aam
jge
popa
dec
out
aas
push
decb
subb
sbb
sbb
cmpb
sub
xchg
lcall
cmp
arpl
jo
mov
sub
insl
sarl
ficomps
aam
repz
add
repz
ficoms
repz
jp
in
mov
dec
and
ss
and
adc
xchg
lahf
out
xchg
sub
mov
iret
pop
mov
sub
mov
and
xchg
sub
mov
stos
sbbb
into
rorl
arpl
dec
mov
fnstenv
rol
repnz
jle
pop
lods
mov
ficomps
cli
lods
mov
in
out
dec
push
jns
adc
out
ss
pop
aaa
lods
add
xchg
pop
insb
std
cmp
shl
fwait
inc
and
xor
outsb
dec
inc
push
pop
jno
scas
leave
push
fmulp
jbe
inc
mov
mov
push
test
xchg
push
inc
arpl
cmp
sahf
mov
filds
mov
into
adc
push
jno
sahf
rcl
xchg
xchg
push
popa
jo
push
pusha
fiadds
cmc
inc
jbe
aad
push
clc
sbb
jno
sti
mov
sarl
xchg
test
add
xlat
jl
mov
push
jne
orl
shl
in
inc
mov
jae
or
lahf
xchg
out
idivl
dec
int3
scas
dec
dec
out
add
cmp
into
scas
lahf
dec
out
leave
jle
mov
mov
sub
aam
inc
xchg
ja
je
stos
xorl
into
mov
jnp
sbb
rclb
loope
jno
arpl
push
daa
inc
push
xchg
mov
ljmp
push
ljmp
mov
aas
cmp
mov
lds
dec
test
ss
loope
ds
ljmp
dec
pop
xchg
xchg
aaa
jg
imul
scas
scas
xchg
mov
sahf
pop
cmp
xchg
jb
xchg
xor
scas
movsl
popl
aaa
nop
mov
mov
push
mov
movsb
int3
push
sar
or
lea
mov
test
stc
lahf
ficoms
xor
cmp
data16
pop
mov
lret
ljmp
xor
outsb
and
sarl
int3
mov
jecxz
cs
insl
js
pop
movsb
sahf
cli
aas
jbe
or
int3
jmp
inc
testl
scas
pop
fidivrl
xchg
insl
push
mov
push
mov
jns
pop
testb
shlb
lret
cli
mov
aas
pop
cli
icebp
xchg
ljmp
aas
movsb
scas
cli
xchg
ja
sbb
mov
cli
imul
inc
xchg
mov
ljmp
xchg
fcmove
jb
cmp
test
jp
hlt
into
aad
pop
sub
pop
js
add
insl
mov
fildl
mov
mov
stos
lret
jle
jmp
in
inc
ljmp
sahf
inc
fimull
xchg
push
fnsave
jle
jmp
ficoms
mov
xchg
out
cmp
and
push
jge
jo
out
arpl
nop
fdivp
adcl
inc
pop
xchg
nop
push
es
out
and
shrl
in
xchg
out
mov
clc
cs
pop
out
int
jecxz
cltd
js
loop
jb
mov
les
cltd
mov
mov
xor
sbb
xchg
pop
inc
int
xchg
out
xlat
pop
rolb
outsb
xchg
mov
xchg
test
dec
push
mov
fs
ficoml
sbb
jb
push
mov
aas
insl
xchg
xchg
cld
xchg
mov
mov
pop
in
pop
cmp
jno
pop
out
shlb
mov
movsb
xchg
sti
idivl
lret
mov
rorl
sub
mov
inc
sahf
data16
xchg
xchg
add
enter
mov
fwait
jle
jns
cmp
push
cmp
leave
mov
ljmp
ljmp
cmp
mov
sub
jb
int
add
jmp
jo
mov
lret
mov
hlt
pushw
xchg
fimuls
dec
pop
mov
fidivl
imul
mov
lcall
push
fs
xchg
sbb
fucomip
pop
push
mov
lret
aam
cmp
fistpll
test
sti
pop
imul
xchg
mov
in
xor
icebp
xchg
push
into
xor
into
fnop
in
cmp
lahf
repz
lret
pop
inc
dec
cli
mov
and
mov
inc
cwtl
xchg
inc
mov
es
inc
scas
into
and
int3
out
push
loop
jl
mov
out
jns
lea
sub
mov
mov
ret
cmp
loope
out
fstl
gs
or
xchg
and
lret
lea
dec
cli
dec
int
pushf
mov
sub
popa
inc
lcallw
scas
jnp
sub
xchg
pop
push
iret
cmpsl
mov
or
xchg
shlb
ljmp
mov
stos
jecxz
push
cmpsb
jecxz
or
sub
push
mov
addl
jg
mov
ja
dec
rcll
scas
xor
mov
xor
mov
out
xor
push
pop
jmp
rcrl
int
bound
int
data16
stos
call
insl
xchg
mov
out
xor
mov
mov
inc
push
adc
jnp
push
rcrb
or
push
xchg
or
push
pop
or
push
xor
sbb
sbbb
mov
aas
outsb
dec
xor
fimuls
sbb
push
mov
movsl
sti
stos
bound
and
in
add
mov
loopne
mov
push
movsb
mov
jmp
movsl
outsb
in
push
movsl
xor
xor
mov
in
out
in
add
shrl
jns
sub
xchg
pop
jl
leave
mov
lds
add
jmp
ds
fistpl
ds
xchg
inc
add
outsl
jle
cmp
mov
xchg
in
xor
in
xor
jmp
js
popf
pop
stos
stos
mov
dec
cmpsb
fcmovnb
jb,pt
jecxz
ds
inc
xchg
pop
xlat
cmp
std
aam
push
imul
mov
data16
inc
in
mov
mov
mov
dec
adc
mov
sub
std
iret
push
push
jmp
rcrl
jmp
rcrl
cmp
xchg
mov
mov
out
dec
movb
dec
lahf
push
mov
nop
sahf
xor
cmpl
push
cli
imul
dec
cld
popf
mov
iret
fstps
aam
int3
pushf
mov
dec
fwait
sbb
sbb
insl
orl
ss
jns
push
pop
mov
push
divl
mov
iret
cmp
std
lret
xor
add
jne
imul
mov
sti
cmpsb
popa
repz
mov
lret
dec
mov
and
cltd
ret
les
cmp
into
mov
test
jg
repz
push
repnz
iret
sarb
adcb
adc
stc
lods
and
aaa
push
adc
cwtl
out
je
adc
xchg
lock
cltd
mov
sbb
pop
mov
daa
aam
sub
dec
shll
popf
push
leave
cmpsl
outsl
xchg
addr16
jns
pusha
sbb
sbb
cmp
mov
fcmovnu
iret
pop
mov
mov
sub
cmp
es
xchg
pop
push
or
add
jecxz
mov
dec
clc
pop
pop
inc
dec
int3
imul
or
int
jp
leave
stos
adc
outsl
xor
shr
pusha
sub
xchg
popf
dec
leave
lods
arpl
xchg
clc
test
mov
leave
inc
jp
cmpsb
push
xor
dec
push
cmp
movsl
mov
std
mov
push
enter
push
inc
arpl
xchg
call
repz
push
fists
rclb
iret
enter
pusha
lods
add
ror
lds
xchg
ljmp
jnp
mov
in
inc
mov
mov
movsl
xor
outsb
inc
aad
out
std
sub
insb
jne
mov
lret
sbb
push
inc
dec
out
cld
popa
in
loopne
loop
popa
dec
add
insb
insl
dec
push
pop
cltd
jb
cs
int
sub
inc
outsb
sub
inc
xchg
mov
dec
outsb
add
or
call
imul
lods
inc
fnstenv
into
add
push
bound
or
addr16
xchg
sbb
mov
into
int3
imul
fs
dec
das
inc
aas
out
jecxz
arpl
arpl
fmull
mov
mov
outsl
jnp
cmp
gs
xor
mov
add
cli
or
sti
je
xor
or
fwait
es
mov
rcrl
add
jg
mov
lret
push
push
push
or
push
out
clc
test
stc
cwtl
push
or
mov
shl
std
outsb
nop
and
dec
cmpsb
std
inc
cmpsb
jp
testb
mov
inc
nop
lret
iret
jmp
inc
loopne
notl
insb
iret
xor
dec
push
arpl
dec
cmpsb
and
shlb
and
or
add
lods
dec
push
ficoml
lret
cmpl
stc
add
or
stos
fsubs
data16
push
aam
cmp
aam
lds
lods
jno
and
ds
push
jb
jp
push
imul
scas
pusha
daa
sbb
pop
lahf
fldcw
scas
mov
cmp
jge
ljmp
arpl
rcl
pop
in
mov
loop
outsl
hlt
sarl
mov
jmp
cltd
jge
jns
stc
dec
mov
push
dec
add
mov
lahf
flds
mov
jne
loop
xor
data16
inc
dec
jl
sti
fsubs
inc
mov
out
outsl
inc
lcall
in
cmp
dec
js
pop
or
fmull
xor
loop
out
gs
xor
push
std
cmp
and
xor
mov
sub
cli
lahf
pop
xchg
jp
sub
sti
dec
pop
push
push
arpl
push
int
pop
mov
jbe
repz
lcall
lods
insl
add
sub
jae
push
mov
push
add
push
push
fwait
mov
mov
add
push
xchg
jo
mov
dec
xchg
popf
xor
sahf
mov
pop
sub
sub
add
cmp
jbe
adc
arpl
jg
cmova
imul
test
xchg
or
mov
sarl
adc
dec
fsub
push
mov
xchg
xchg
sub
enter
stc
int3
cmpsl
inc
cmp
mov
cmp
arpl
add
in
dec
clc
jl
rorl
shlb
xor
pushf
loop
xor
out
dec
scas
repz
cli
or
push
out
imul
mov
or
movsl
pop
lea
xorl
sbb
mov
loope
mov
jl
cmp
ljmp
sbb
jns
call
dec
jmp
int3
shlb
fmull
mov
mov
cld
lds
sub
push
popa
cmp
icebp
inc
and
enter
cmpsl
out
jp
popa
xor
repnz
pop
imul
dec
out
sarl
adc
jno
popf
xlat
mov
mov
imull
and
fcom
enter
out
shll
stos
lret
loope
rorl
les
lds
push
push
xchg
lea
fdivrs
pushf
in
xchg
xchg
sbb
push
or
mov
outsl
jns
xor
sbb
push
shlb
inc
xchg
fucomp
mov
pop
adc
les
push
fidivs
push
pop
and
loopne
loope
out
clc
rcr
xchg
mov
pushf
test
pushf
andb
jle
dec
out
mov
xor
icebp
sbb
dec
pushf
or
subl
lea
daa
call
fmull
ljmp
jmp
cld
fdivrl
jo
mov
sahf
cs
pop
popl
imul
and
adc
sti
mov
or
adc
add
cltd
stos
xor
mov
adc
push
mov
lea
mov
sub
sub
call
add
cmpsb
dec
push
adc
scas
and
adc
adc
lods
jecxz
out
xor
cmc
push
jmp
adc
out
push
rorl
jmp
push
mov
jnp
subl
int3
fs
pop
data16
fimuls
lret
test
adc
push
or
dec
jno
lds
pop
popa
pop
xlat
sbb
pop
pop
pop
int3
insb
into
inc
scas
push
xchg
popf
xor
adc
enter
cli
mov
adc
mov
xchg
and
test
stc
ljmp
lea
or
mov
mov
mov
call
sti
xchg
xlat
mov
out
mov
lods
xor
movsb
jmp
aas
mov
mov
mov
xor
dec
push
sbb
push
add
cld
and
dec
xchg
stc
into
movlps
sbb
push
pop
xchg
add
clc
inc
mov
movswl
out
stos
mov
fwait
lret
clc
insb
movsl
jge
enter
scas
inc
jle
sti
mov
in
int3
mov
adc
fs
lret
lea
sbb
mov
pusha
and
xchg
das
cli
jmp
lss
jb
das
push
das
inc
inc
push
inc
jg
fdivl
push
ss
sti
movsb
pop
mov
push
mov
or
inc
pusha
cs
adc
xchg
gs
fstpt
sub
in
idivb
subb
sar
push
in
sbb
ret
movsb
and
jle
jnp
push
push
inc
cmp
sahf
inc
mov
mov
sbb
lcall
js
jecxz
cmp
mov
mov
lods
stos
jns,pn
cs
inc
jle
and
fwait
xchg
mov
fdivs
jle
cld
cli
mov
js
jns
and
sub
mov
das
add
xor
not
daa
dec
popf
inc
je
out
mov
jg
jmp
js
clc
mov
jecxz
sub
dec
push
xchg
jne
sbb
cmp
or
cmp
mov
jno
shrb
aam
push
loop
lods
add
outsl
fbstp
dec
push
xchg
testb
pop
pop
jg
push
pop
loop
cld
add
or
mov
mov
dec
pop
dec
adc
out
sub
shr
or
lods
inc
mov
sarl
in
or
sbb
nop
loopne
xchg
shrl
xor
lret
adc
roll
pop
lds
fidivl
movsl
sbb
lea
push
push
jmp
movsl
cmpsl
mov
xorl
test
dec
gs
imul
and
fbld
xor
mov
xchg
mov
pop
xor
js
je
enter
push
push
pop
fidivrs
bound
mov
jno
xor
shr
push
loop
or
dec
push
and
xchg
inc
inc
add
sahf
push
push
mov
push
outsb
arpl
jb
cmp
cld
lods
inc
pop
imul
fcompl
arpl
orl
inc
out
xor
jo
dec
mov
adc
inc
rcrb
mov
clc
sbb
xor
test
fidivrs
rcr
scas
mov
push
push
or
fldenv
rep
add
push
dec
aam
pop
stos
fcmovnu
jne
aam
push
jecxz
xor
mov
arpl
adc
or
nop
push
repz
jl
inc
jg
add
ljmp
rolb
cltd
jecxz
mov
je
scas
mov
or
cmpsb
in
push
xchg
test
adc
fisttpl
and
xchg
aam
or
int
or
or
jmp
subl
sbb
jmp
lods
fldt
xor
push
test
cmp
pop
rorb
cmp
idiv
fldl2e
rcl
jb
mov
xchg
aaa
pop
jno
xor
sub
stc
pop
mov
rclb
xlat
mov
das
insl
je
out
jmp
stos
imul
mov
daa
mov
loop
adc
ret
sbb
cmpsb
loop
adc
rclb
decl
out
pop
push
lret
pushw
mov
mov
sub
int
xchg
or
pop
sbbb
fs
fiaddl
or
mov
repz
imul
and
aam
adc
sbb
lcall
dec
push
add
jnp
ss
add
inc
sub
sar
or
and
xchg
in
mov
pushf
in
sub
push
push
mov
jns
or
sbb
mov
inc
lret
fsubr
sbb
pop
imul
xchg
xor
dec
mov
or
jne
jbe
pop
pop
fistpll
push
imul
mov
inc
mov
mov
in
xor
cld
lret
add
aam
inc
pop
lods
xchg
inc
loop
or
outsl
fidivrl
in
and
sub
lret
xchg
ret
mov
push
and
shl
mov
pop
dec
jle
push
pop
dec
jns
inc
popa
sub
loopne
jmp
fs
xor
xchg
shll
jns
sbb
jle
int3
shr
push
cld
insb
mov
add
jb
mov
mov
dec
pop
sbb
or
loopne
push
jmp
push
adc
sti
jmp
aad
mov
mov
lret
lods
xchg
mov
stc
push
or
ret
std
call
xchg
push
jmp
in
push
nop
test
in
jae
ror
stos
ret
pop
outsl
cld
pop
insl
fcoms
jb
push
gs
and
xlat
cli
inc
int3
xlat
push
jo
in
popf
inc
push
lret
jns
cs
inc
mov
jnp
sub
sbb
cmpsb
movsb
jge
xchg
pop
repnz
jle
shrl
out
or
pusha
sahf
mov
adc
mov
insl
jg
mov
xchg
cmp
int
sbbl
ss
inc
es
lock
dec
dec
cmpsl
lahf
pop
sub
cmpsb
ljmp
push
sti
sbb
or
cmp
into
fdivr
fwait
ljmp
fisubs
data16
call
pop
dec
insl
mov
pop
inc
addr16
loope,pt
sbbb
lahf
mov
add
cmpsl
mov
dec
dec
lods
in
mov
xor
jmp
add
push
pop
lods
loope
sbb
mov
mov
add
int3
xchg
shrb
mov
test
iret
mov
out
mov
xlat
outsl
out
sbb
jg
aaa
adc
xchg
sbb
or
cmp
pop
jmp
mov
jbe
ret
andl
arpl
bound
lods
call
fwait
dec
inc
test
clc
mov
int3
scas
add
inc
push
mov
sub
and
movsb
test
mov
adc
jmp
fisttpll
dec
ficoms
xor
sub
jg
sub
xchg
xchg
xchg
rolb
xchg
int3
aad
and
cmp
sarb
outsl
fs
xchg
ljmp
shrb
lahf
mov
int3
fnstenv
push
mov
adc
mov
pushf
stos
pop
iret
adc
inc
mov
inc
ljmp
adc
cmpsb
rcrl
add
xor
hlt
jp
pop
and
or
lret
add
shrb
dec
cld
out
jnp
test
mov
dec
push
xchg
js
mov
adc
inc
nop
out
pop
xchg
out
cmp
dec
ss
enter
outsl
xor
dec
push
test
es
imul
push
xor
mov
jno,pt
and
jge
ljmp
cmp
clc
or
lret
xor
fdivl
ss
add
adc
mov
repz
adc
int3
shrb
inc
add
ret
arpl
pusha
xchg
add
mov
cli
or
cmp
dec
ficomps
pop
ret
iret
pop
hlt
enter
sub
notb
in
int
int
lods
push
xchg
rolb
out
jmp
mov
jmp
push
imul
mov
fwait
mov
ljmp
push
stc
call
sbb
jg
mov
cli
nop
sub
xchg
je
mov
js
ret
or
jecxz
mov
push
push
or
insb
jno
xlat
mov
inc
jl
sbbb
movsl
xor
push
lret
cmpsb
data16
das
add
dec
jecxz
and
cmp
pop
push
lss
arpl
je
xor
into
pop
enter
in
subl
mov
xchg
mov
or
fst
test
mov
test
or
shr
sarl
and
dec
xor
xchg
je
pusha
push
adc
push
das
xor
enter
fs
movsl
loope
inc
out
jle
xchg
inc
aam
lret
test
fidivrs
fbld
add
mov
jmp
shll
mov
outsb
les
nop
mov
testl
es
mov
into
dec
inc
jae
frstor
sub
mov
outsb
push
divb
mov
xchg
and
jle
lret
ljmp
icebp
icebp
cmpsl
testl
sub
aas
call
adc
fldt
test
push
sub
mov
loopne
push
das
push
mov
xlat
push
je
mov
jae
mov
outsb
mov
add
jle
test
cld
push
js
call
mov
pop
repz
xor
or
jp
leave
ja
sub
xchg
cmp
mov
insl
loope
mov
cmpsl
pop
inc
shll
pusha
bound
push
lret
mov
cmp
sub
fwait
mov
sub
cmc
add
inc
xor
jmp
fldcw
mov
test
inc
aad
push
adc
ds
test
imul
jo
pop
cltd
ja
pop
adc
cmpsl
stos
sbb
xor
mov
adc
outsl
and
push
pop
cmp
xchg
cmp
lods
jp,pt
mov
shlb
fcoms
adc
jg
cmp
cmp
ret
jo
cmpsl
mov
inc
push
cmp
fmull
inc
cmp
fmull
jmp
dec
fcmovbe
jnp
or
or
push
fucom
aam
aaa
fscale
mov
dec
int
mov
outsl
jnp
and
popa
pop
pop
test
and
jmp
cmp
inc
pop
jo
xchg
adc
scas
xchg
and
sub
mov
loope
xchg
movsb
mov
test
into
imul
mov
jecxz
mov
lds
shlb
mov
dec
mov
dec
cmpsl
mov
jp
imull
in
or
imul
in
cwtl
jns
lods
pusha
cmpsb
xchg
pop
jecxz
mov
inc
sbb
or
outsl
aam
mov
je
lea
rcll
push
pusha
sbb
mov
dec
push
clc
add
addl
pop
adc
add
sbb
cmp
imul
ljmp
jnp
pop
rcr
add
arpl
pop
popf
cwtl
mov
or
clc
mov
mov
xchg
mov
movsl
mov
ffreep
mov
insb
and
repz
decb
cmc
pop
add
mov
dec
aas
pop
bound
xor
xor
mov
mov
push
setp
jmp
push
jnp
dec
out
rclb
and
add
sub
addr16
ds
ds
mov
push
xor
rorb
and
push
xor
and
xchg
mov
cwtl
lahf
add
sti
dec
iret
sub
pop
add
or
mul
inc
jmp
shrl
fdivrl
adc
subl
fcoml
shrl
xor
pop
dec
rcl
or
ficoms
inc
jne
lds
js
adc
adc
leave
jp
pop
cmc
push
push
lret
jp
push
xchg
push
jl
sbb
pop
adc
cld
jno
mov
pcmpgtw
cmpsb
mov
sub
cltd
dec
dec
mov
sbb
adc
xchg
xchg
mov
repnz
add
jne
and
pop
pushf
mov
mov
cmpsb
in
mov
jmp
and
in
cmp
fsubs
or
mov
imul
in
insb
imul
insb
unpckhps
test
popa
cmp
ja
fldl
add
hlt
movsl
out
lahf
pop
test
xchg
inc
inc
pop
xchg
psubw
negb
or
mov
js
pop
inc
imul
or
loop
mov
outsb
push
jmp
or
pop
cwtl
imul
xlat
jns
xchg
repnz
mov
cmp
aaa
fcomps
mov
push
addr16
in
nop
ss
in
sub
mov
testl
inc
in
mov
int3
sbb
cmp
xchg
pushl
fimuls
clc
mov
out
sahf
inc
mov
push
xor
and
es
mov
and
adc
enter
push
pop
lea
sub
pop
mov
scas
mov
mov
xlat
sahf
movsb
mov
dec
cwtl
xor
test
bound
xchg
sub
inc
mov
pop
adc
sub
pop
cs
mov
aad
leave
lret
scas
daa
cwtl
test
mov
push
push
push
jp
xchg
inc
mov
std
dec
dec
push
sbb
imul
add
xchg
sahf
in
in
add
loop
adc
xchg
and
pop
mov
aas
cli
pop
ret
shll
mov
fs
ret
int
mov
mov
mull
mov
and
add
dec
or
pop
ljmp
xchg
jns
xchg
clc
inc
into
or
pushl
pop
xchg
imul
lods
and
lret
sub
push
lock
lret
add
jmp
mov
mov
inc
cmpsb
mov
cwtl
jle
insl
push
sbb
movsl
ljmp
dec
gs
inc
add
adc
push
out
lret
push
fisttpll
dec
and
daa
mov
scas
sub
inc
inc
bound
imul
aaa
sub
out
cmpsl
ja
mov
mov
cwtl
xchg
push
push
aad
int3
sbb
cmc
push
sub
jl,pn
stc
dec
push
push
enter
loope
xchg
enter
dec
jp
or
ret
hlt
lods
xor
adc
add
xchg
dec
push
insl
add
aad
stos
jl
mov
dec
cmpsl
fidivl
cmp
inc
pop
fimuls
inc
cld
mov
mov
pushf
pop
jnp
mov
enter
or
in
test
fdivs
inc
dec
int3
push
test
imul
xor
sub
sbb
lcall
push
outsb
icebp
xchg
push
and
push
sub
arpl
cmp
jne
fs
lods
and
inc
mov
mov
push
xor
jge
inc
and
ret
cmp
jae
out
pop
lahf
inc
add
pop
jbe
add
fidivrl
push
orl
or
or
mov
xchg
xchg
mov
pop
test
dec
faddl
cli
jmp
cmc
lds
stc
xor
repnz
push
xchg
sbb
ds
xorl
sbb
and
mov
ss
adc
xchg
xchg
outsb
lods
mov
adc
push
int3
insl
push
push
repz
and
cmp
sub
scas
adc
lea
pop
fistl
push
adc
cmc
fs
xchg
jmp
and
pop
fcoms
in
push
add
movsb
out
inc
ffree
daa
adc
mov
stos
filds
inc
loope
roll
push
loop
xor
ror
fcomi
and
iret
xor
adc
popa
xchg
mov
shrb
insb
scas
jae
jno
xor
or
or
arpl
scas
outsl
pop
push
fs
push
push
cmp
mov
fcomps
add
xor
cmp
push
or
pop
jge
lret
push
sub
xchg
adc
xor
mov
das
aam
inc
imull
mov
pop
xchg
arpl
lret
jecxz
dec
mov
enter
push
je
es
and
cli
inc
adc
dec
mov
ficoms
xor
in
push
mov
out
pop
pop
cld
pop
inc
jmp
xor
ficoms
push
adc
xor
mov
jo
xor
dec
adc
jno
call
dec
fs
gs
xor
mov
ljmp
adc
sbb
lea
lods
pop
push
and
or
loope
add
jge
scas
cmp
sarl
cli
push
into
mov
pop
mov
cmpsb
sbb
adc
and
sbb
xchg
lods
xchg
iret
mov
jg
mov
ror
movsb
push
mov
dec
xor
mulb
and
shr
ljmp
pop
dec
pop
addr16
jg
push
mov
push
xchg
and
lahf
scas
pop
rclb
adc
push
into
adcl
out
pop
aam
int
xchg
and
push
std
inc
stos
dec
dec
push
xchg
cmp
adc
dec
ret
mov
js
xor
push
sub
mov
adc
movsl
dec
mov
mov
es
sub
mov
cli
in
aas
fsubs
mov
xor
shrb
dec
and
mov
dec
call
adcb
movsb
xchg
inc
jmp
div
jmp
sub
adc
loope
es
pushf
or
arpl
adc
dec
rcll
daa
mov
mov
je
daa
push
sbb
dec
sub
ljmp
jp
leave
fstps
dec
adc
jno
push
jnp
cmp
stc
in
aad
mov
xchg
inc
test
push
leave
jl
rep
iret
or
mov
adcb
iret
jmp
cmpsb
incb
xchg
or
lods
mov
xchg
mov
loopne
jo
into
ja
xor
adc
mov
movsl
ja
and
xchg
mov
call
mov
ret
shrb
push
push
ffreep
stos
jns
repnz
pop
lret
push
sbb
dec
fildl
mov
ret
push
int3
bound
adc
pusha
cmp
das
in
les
lods
mov
rcr
out
js
mov
lock
sbb
lcall
test
mov
aaa
pop
iret
jge
sbb
adc
fadd
into
shrb
shrb
adc
cld
cmp
cmc
pop
mov
mov
loop
mov
inc
pop
sti
inc
nop
addr16
lock
cwtl
dec
jae
add
sub
lret
mov
mov
xchg
xchg
insl
jb
ljmp
repnz
jno
lret
jmp
push
sbb
das
jns
pop
cmp
les
stc
in
push
lahf
xor
pop
js
mov
xchg
or
and
sub
xchg
rcrb
xor
push
movsl
shll
das
popa
mov
ljmp
enter
mov
lret
insb
lret
and
dec
test
and
sbb
out
add
mov
adc
int3
into
push
mov
arpl
movsb
mov
xchg
cld
insl
or
jnp
or
ret
shlb
fidivl
xchg
inc
ja
out
dec
xor
push
sahf
sub
sahf
in
mov
jnp
scas
dec
mov
cmp
xchg
mov
je
mov
movsb
scas
les
adc
xor
mov
out
sub
xlat
ret
xchg
aad
insb
iret
insl
lds
jge
jb
addb
mov
cs
outsl
sub
jne
cmpsb
push
xchg
mov
push
mov
pop
ja
dec
pop
adcb
loopne
pop
jo
into
cltd
or
pop
xchg
insb
mov
ret
dec
push
dec
add
testl
out
test
xor
loopne
sub
ret
inc
inc
adc
inc
push
in
leave
inc
inc
shrb
mov
cwtl
es
rcll
or
ss
push
jnp
movsl
arpl
lds
mov
xchg
jle
mov
inc
pop
push
inc
jmp
data16
xchg
cmp
fcompl
mov
cltd
inc
mov
gs
shlb
mov
pop
jo
pop
xchg
int3
fisubs
sub
cmp
inc
jl
es
dec
movsb
mov
xchg
call
inc
inc
jl
scas
mov
mov
cs
icebp
scas
and
xchg
out
out
push
ljmp
cmp
int
mov
pop
xchg
mov
jg
jmp
push
mov
mov
or
add
mov
in
test
lods
xor
insl
mov
enter
dec
cmp
or
gs
mov
test
mov
mov
add
xchg
out
fsubs
les
xchg
pop
pop
adc
pop
fs
sbb
lret
mov
scas
jae
mov
pop
in
fnstcw
lret
add
frstor
xchg
js
cmp
sbbb
mov
mov
shlb
inc
out
out
cmovnp
mov
jno
mov
testb
std
stos
jecxz
mov
pop
add
and
inc
adc
ljmp
cmp
cmp
and
xchg
aam
xchg
pop
push
xchg
icebp
les
imul
movsl
xchg
cwtl
mov
dec
leave
fiaddl
hlt
fnstcw
pop
mov
or
xor
sti
inc
mov
nop
test
movsw
add
mov
lods
jns
inc
sub
cli
mov
add
mov
cmp
sub
jne
mov
dec
call
imul
insb
push
out
popf
pop
lods
scas
jns
or
mov
jp
int3
jno
mov
loope
push
out
cmp
xchg
iret
inc
mov
or
jbe
jmp
lret
adc
insb
addr16
adc
sar
sub
lods
and
push
mov
push
push
sbb
jbe
mov
movsl
dec
push
ucomiss
xor
push
mov
xchg
out
addr16
ficomps
jb
outsb
jmp
mov
or
mov
enter
mov
cmp
mov
adc
loopne
fistps
sbb
scas
jle
ja
add
mov
sub
mov
lret
jbe
das
out
aad
icebp
pop
shll
pop
pop
jnp
mov
enter
int3
sbb
aas
stos
mov
insb
test
outsb
xor
icebp
push
sar
sbb
arpl
rcrl
lods
les
mov
stos
jle
imul
data16
test
jns
inc
loop
outsl
mov
xchg
jmp
pop
lds
arpl
out
fwait
loope
aam
rcrl
popf
stos
out
sub
xor
ret
int
setle
xchg
lds
shl
ret
std
mov
ss
ja
mov
hlt
xchg
lcall
arpl
push
cli
xchg
movsb
fiaddl
push
ljmp
lahf
or
pop
push
cmp
lret
lret
jmp
lret
jb
ljmp
aad
ret
inc
negb
mov
clc
pop
mov
mov
mov
jb
and
aas
mov
jmp
cmp
movsb
pop
cmp
call
fstpt
mov
in
imul
pop
pop
lret
fbld
or
sub
scas
xlat
jge
or
je
mov
sti
nop
call
dec
add
repnz
cmp
jecxz
jle
in
mov
popa
shrb
and
xor
pushf
lahf
ljmp
jnp
icebp
aaa
test
xlat
cmc
xor
ljmp
adc
inc
xor
sti
fs
mov
push
and
stos
lods
lds
push
or
pop
out
pusha
ficoml
pop
jmp
pop
and
lahf
pop
dec
movsb
ficoml
out
and
push
mov
mov
xchg
mov
mov
cli
insl
clc
inc
dec
clc
mov
sbbl
popf
jmp
or
mov
xchg
adc
adc
in
cmp
add
ret
outsb
nop
sub
clc
aas
adc
and
dec
repnz
ds
dec
sub
xchg
loope
push
out
hlt
mov
sti
mov
xor
insb
push
xchg
mov
jl
dec
pusha
clc
inc
out
scas
adc
std
lret
aas
pushf
popf
cmp
jno
sbb
pop
rcl
pop
les
xchg
sub
mov
inc
loop
sbb
mov
xchg
pop
mov
lods
or
dec
iret
cs
or
sub
cmp
imulb
jmp
fwait
pop
mov
jecxz
add
or
jp
mov
fsts
jne
or
mov
or
pop
pop
roll
pop
jns
push
sarl
jge
sbb
fwait
fs
lcall
jb
cmp
ret
sub
repz
adc
push
xchg
mov
sbb
adc
jp
lods
xchg
or
inc
out
push
jb
adc
mov
mov
dec
add
pop
and
jmp
int3
cwtl
push
push
pop
cmp
dec
lcall
push
lods
mov
test
adc
and
mov
cmpsb
xchg
imul
cmp
lahf
mov
mov
insb
adc
dec
and
lods
push
int3
insb
clc
add
ret
sbb
push
cmc
or
push
mov
pop
jle
dec
and
out
fcomip
pop
push
std
push
push
fisttps
enter
mov
js
push
gs
adc
jnp
jmp
aas
stos
movsb
sbb
fldl
push
xlat
lea
dec
jb
xor
sbb
ret
pop
nop
mov
mov
xchg
sti
insb
push
arpl
push
in
roll
cmc
mov
push
xchg
jbe
inc
jnp
mov
cltd
xchg
pop
ljmp
xlat
xchg
mov
movsl
pop
nop
imul
movsl
adc
push
mov
mov
pop
inc
sarl
xchg
jg
test
xchg
mov
mov
mov
push
cs
ret
ljmp
and
mov
xor
push
das
mov
int
into
push
cmpb
xor
cmp
xor
xchg
lea
movsb
lahf
cwtl
sahf
push
out
mov
loopne
xlat
xor
push
out
xchg
xchg
pop
and
add
inc
jne
mov
sbb
sbb
mov
jmp
xchg
loope
cmpsb
dec
sbb
andb
mov
sahf
lea
in
cmp
in
lret
dec
jo
ss
loope
cvtps2pd
add
outsl
cwtl
jne
cli
sub
add
push
loopne
pop
add
aaa
xchg
lods
sarb
xchg
add
push
and
cwtl
mov
sbb
lcall
and
mov
imul
xchg
jl
es
sbb
insl
stos
jbe
sub
adc
xchg
push
shl
push
mov
xor
jnp
mov
test
ljmp
ret
inc
sbb
jg
scas
icebp
xor
push
jmp
push
pop
loopne
fmuls
and
pop
xor
iret
movsl
out
pop
out
push
cmp
sbb
push
xor
jl
fbld
push
xchg
inc
add
enter
xorb
cmp
push
mov
cwtl
mov
leave
dec
incl
cmp
add
add
je
shlb
adc
stc
in
push
loop
ret
loope
adc
pop
push
insl
ds
ret
sub
lret
incb
decl
mov
xchg
xchg
xlat
mov
adc
fwait
mov
mov
fidivs
and
mov
jbe
sarl
xchg
insl
cs
adc
push
dec
cmp
push
loop
or
and
fwait
jnp
add
mov
jbe
stos
mov
mov
mov
lods
loop
xor
sub
xchg
fimull
jmp
hlt
xchg
loop
xor
dec
xchg
lea
pop
or
xor
xchg
jle
dec
mov
inc
mov
daa
xor
pop
jp
popa
out
aad
push
xor
xchg
sub
aas
icebp
fimuls
je
scas
adc
imul
lret
fdivs
add
xchg
cmc
into
xchg
adc
xlat
mov
mov
adc
mov
pop
dec
jg
jno
pop
mov
icebp
fisttps
test
mov
dec
mov
nop
movsl
cmp
inc
out
jne
lahf
jg
pop
jl
shr
popf
fsubrl
xchg
stc
popf
ret
mov
mov
mov
gs
jp
daa
jno
das
xchg
dec
outsl
clc
xor
sbb
xchg
cmpsb
pop
xor
out
inc
out
lret
out
lret
mov
or
inc
push
sbb
insl
push
jecxz
push
iret
mov
hlt
scas
xchg
cwtl
dec
repnz
push
xchg
sbb
dec
mov
inc
xchg
stos
popa
sbb
stos
enter
push
jg
ror
jge
jp
push
dec
adc
cltd
cli
imul
loopne
in
add
repz
push
sti
lret
mov
xchg
andl
fcomi
loopne
xchg
orb
enter
in
jg
mov
jg
pop
push
pop
add
inc
mov
lret
pop
xor
mov
adc
jle
es
sti
mov
mov
sbb
das
xorb
arpl
mov
mov
mov
mov
mov
shll
cmp
mov
sbb
jne
dec
fisubrs
sub
jle
leave
xor
jbe
fwait
cs
mov
push
ljmp
or
cmp
sbb
loope
rcrl
mov
shl
mov
ret
ss
ljmp
jg
in
mov
repz
testl
pop
stos
loop
les
std
fs
out
movsb
inc
mov
out
adc
xlat
fildl
dec
aam
fs
lods
lea
scas
cmpsl
mov
pop
sub
lods
addr16
icebp
or
dec
or
es
lods
outsl
mov
test
jns
xor
pushf
shr
leave
or
lds
mov
xchg
dec
out
and
jns
iret
jp
xchg
in
push
sub
xlat
leave
dec
jecxz
inc
rorl
sub
repnz
shll
jp
in
sub
dec
xchg
repz
adc
and
out
pop
mov
fidivrs
arpl
mov
ds
mov
adc
bound
jo
jns
push
call
ljmp
pop
out
mov
mov
outsb
inc
pop
rorb
jp
test
test
frstor
jns
adc
adc
adc
femms
cmp
adc
inc
lds
and
and
adc
pop
adc
mov
push
inc
or
sub
sub
push
push
sub
leave
or
jnp
sub
push
je
jecxz
push
push
inc
mov
or
jmp
mov
call
addr16
cs
mov
push
adc
xchg
xor
mov
or
aad
cmpsb
out
adc
pop
bound
inc
dec
ret
jecxz
jnp
div
mov
xchg
push
data16
imul
dec
dec
cld
add
xor
push
push
iret
add
insl
movsb
movsb
add
or
popf
rcll
sbb
std
inc
xor
inc
sbb
rcrl
or
sub
push
negl
xchg
repz
jle
and
rorb
jae
shrl
loop
add
in
ret
push
xor
out
fnsave
add
cmp
or
dec
pop
dec
and
lahf
into
dec
mov
jb
mov
lahf
into
dec
imul
sbb
dec
rclb
movb
out
add
add
adc
lret
add
dec
mov
fwait
cmpsb
jecxz
and
mov
roll
mov
stos
and
ljmp
rclb
mov
insb
scas
ljmp
jns
inc
outsl
pop
pop
mov
or
repnz
ss
push
jae
test
loopne
push
inc
and
jmp
icebp
mov
xor
xchg
mov
es
mov
fnstenv
xchg
scas
xlat
add
adc
test
aad
push
pop
dec
mov
lea
xchg
mov
xor
dec
rcll
xchg
or
scas
and
sahf
mov
lods
xor
repnz
push
mov
adc
les
mov
shrb
xchg
test
add
mov
lahf
adc
push
mov
mov
or
add
movl
xor
mov
test
lods
cmpsl
pop
add
xor
out
sbbl
enter
xchg
lock
xor
push
fs
xchg
jmp
jbe
push
pop
xor
fstps
push
jno
jg
adc
sbb
clc
jmp
jle
sahf
pop
push
push
push
and
popf
ljmp
push
lret
add
and
loope
pop
insl
and
add
popl
xchg
sbb
sub
mov
shrb
push
push
imul
das
sub
ret
jbe
and
xor
loop,pn
test
aam
cmc
pop
inc
out
mov
js
jle
xor
icebp
inc
sbb
sbb
dec
and
cmp
aad
adc
lods
clc
adc
mov
xchg
or
add
and
test
add
sub
stos
fimuls
jmp
xor
xor
mov
and
fisttpl
inc
mov
mov
inc
call
mov
loop
jp
or
cmova
movsl
push
push
lret
mov
popf
or
and
or
jns
notl
mov
icebp
hlt
cmp
adc
test
repnz
pusha
inc
fnclex
jp
jge
cmp
mov
cmc
leave
gs
ret
jnp
sub
inc
and
dec
mov
sub
or
dec
lods
xchg
hlt
outsb
lods
jo
pop
or
mov
jge
adc
sub
cmp
lret
cmp
into
xor
mov
out
push
fcompl
sub
xor
pop
mov
pop
loop
mov
or
pop
jbe
addr16
loop
bound
cmp
push
xor
into
sbb
into
mov
xchg
jmp
xchg
negb
xchg
int3
add
inc
sbb
lret
les
and
mov
xor
mov
add
mov
fnstcw
cmc
aad
fcomi
decl
mov
xchg
jbe
call
not
pop
std
shll
or
xlat
addb
pop
lds
xchg
out
in
test
inc
or
and
test
xor
or
sbb
xchg
mov
dec
xchg
js
loope
pop
roll
adc
xchg
dec
jnp
adc
mov
mov
mov
add
mov
loopne
inc
xchg
adc
cld
dec
jb
mov
mov
scas
sahf
cmp
daa
test
mov
arpl
shrb
xor
push
sub
cmp
fwait
adc
mov
hlt
adc
mov
dec
or
mov
cmp
push
cmp
arpl
in
push
rclb
sbb
icebp
push
add
inc
test
daa
or
rol
iret
push
and
testb
leave
sahf
mov
mov
jno
sti
inc
cwtl
mov
ja,pt
aas
mov
test
jne
lods
push
push
fimull
sbb
gs
push
mov
or
divl
pop
inc
les
mov
scas
std
sbb
stc
mov
mov
stos
out
xor
cmp
popf
pop
ffree
imul
int
sbb
sbb
push
lea
ret
mov
adc
clc
sbb
push
push
pop
push
mov
out
test
xchg
call
and
ret
mov
movsb
sti
dec
jl
arpl
cmp
xchg
xor
arpl
mov
sarb
mov
ljmp
xchg
push
testl
pop
lret
adc
mov
sti
add
lahf
pop
cmp
xchg
jno
xor
xorb
in
into
adc
out
xchg
xchg
fdivrs
mov
push
lcall
xchg
push
add
inc
out
adc
push
mov
iret
outsb
xor
inc
sti
repnz
fcomps
sbb
in
xor
in
bnd
push
shl
jge
adc
int
out
nop
push
cmpsb
push
xor
shlb
mov
cmp
pop
testl
mov
pop
push
call
mov
inc
imul
mov
dec
scas
jmp
out
mov
mov
xchg
adc
rcrb
jno
mov
mov
push
dec
fcmovnb
test
aas
dec
push
daa
mov
cmp
xor
shrl
insb
xor
cli
stos
icebp
imul
iret
fidivs
imul
lds
ret
dec
jmp
or
outsl
mov
push
inc
inc
loope
loope
push
shll
dec
xor
and
dec
popf
lret
movsb
sti
or
cwtl
stc
cli
jle
mov
imul
imul
mov
xchg
cwtl
das
jns
ljmp
aad
inc
mov
mov
pop
pop
scas
mov
fisttpl
bnd
repz
clc
out
xor
pop
aaa
jae
mov
in
cmp
dec
jge
sub
xor
fucomp
ljmp
pusha
lock
push
cmp
icebp
stos
iret
sti
lods
ljmp
idivb
cli
and
pop
mov
test
inc
xlat
add
push
xchg
xchg
push
mov
inc
mov
dec
mov
sub
leave
mov
inc
dec
mov
adc
gs
sahf
jns
lcall
pop
add
aaa
jmp
sbb
fsubrs
ja
mov
sub
stc
push
mov
ss
jns
dec
int
call
push
xchg
dec
pop
out
push
nop
gs
dec
decb
sub
jnp
cmpsl
sahf
leave
mov
roll
out
mov
mov
push
mov
arpl
mov
mov
cwtl
push
das
push
sahf
xchg
lret
loop
stos
or
add
imul
xor
xchg
fxam
inc
push
and
rorb
or
cwtl
repnz
jnp
jge
xchg
push
sub
ljmp
mov
xchg
xlat
or
cmp
or
jp
aam
out
in
sbb
sub
mov
loopne
cmp
pushf
stc
push
sbb
pusha
push
push
mov
fwait
rolb
loopne
addr16
sahf
das
ljmp
lahf
xor
lods
mov
jb
jle
notb
lds
mov
outsb
outsb
mov
xor
add
dec
cli
dec
dec
aam
or
shl
xchg
sahf
fldcw
enter
ljmp
mov
or
jb
dec
mov
jns
push
push
mov
sub
sub
lret
sbb
idivl
cld
xor
cmc
test
xor
sti
aam
cli
les
pop
push
mov
clc
imul
push
jecxz
mov
shrl
push
jae
scas
cmp
pop
inc
jne
popf
test
popf
das
lea
shlb
and
popa
stos
lcall
inc
stos
mov
inc
add
stos
mov
or
les
imul
out
pop
push
mov
pop
shl
fdivp
mov
in
mov
jb
out
out
inc
cltd
sbb
sarb
shl
add
xchg
adc
xchg
pop
mov
dec
sub
int
mov
push
ss
jae
pop
scas
mov
cwtl
out
js
mov
test
cwtl
cmpsl
jg
xchg
stos
std
add
mov
fnstcw
inc
or
mov
mov
stc
addr16
fdivr
nop
in
inc
ret
lcall
int
neg
mov
jns
inc
inc
fs
xchg
cs
cltd
pop
and
mov
mov
fildll
jp
mov
pop
cmp
lods
or
les
leave
cmpsl
fldl
cmpb
test
jae
inc
sbb
enter
add
nop
jp
cmp
sub
mov
pop
imul
mulb
or
pop
xor
scas
lret
dec
xchg
mov
or
dec
jle
dec
fisubrs
mov
cmp
pop
fwait
incl
sbb
addr16
push
lret
mov
aaa
ljmp
cmpsl
stos
adc
mov
popf
cmc
mov
and
shlb
leave
insb
shrb
mov
stc
xchg
cmc
pop
xchg
js
jne
mov
jns
jmp
or
lds
inc
movsb
jb
mov
xor
in
mov
fimull
sub
aaa
cmp
addb
mov
inc
ljmp
cmpb
pop
push
adc
add
int
jp
push
hlt
int
ja
jb
mov
sti
jmp
mov
je
sub
sub
in
jae
cmpsb
dec
rorb
lahf
in
mov
cltd
jg
mov
xor
cli
pop
mov
inc
xchg
pop
mov
lcall
inc
insb
fimuls
scas
xor
add
xchg
and
addl
dec
pop
out
mov
jl
ljmp
lods
and
mov
lea
pop
jbe
enter
mov
push
push
inc
fs
cmp
cmp
or
fstpl
cmc
insb
pop
xor
xchg
aam
jmp
rcll
ficompl
cli
push
jb
or
cmp
mov
dec
mov
inc
xor
adc
test
sub
repz
pop
jp
into
dec
push
popa
add
xchg
jecxz
out
or
push
in
orl
mull
clc
aam
sbb
dec
das
rcrb
lods
and
cmp
push
cmp
in
push
jo
lcall
jecxz
add
popf
jle
clc
and
aas
pop
cs
cmc
add
jbe
jae
mov
cmp
push
xor
fimuls
xlat
idiv
sbb
dec
or
shr
mov
fptan
fimuls
xchg
imul
mov
fldt
dec
test
pusha
out
fldt
js
or
xchg
cmc
inc
sub
xor
mull
fdivl
imul
shll
xchg
mov
xchg
shlb
xchg
xchg
mov
push
in
xchg
lcall
pop
mov
stc
cmp
lcall
cmp
scas
ljmp
sub
xor
lds
stc
rorb
shlb
or
push
shll
scas
out
fcom
pop
std
rcr
es
insb
pop
mov
xchg
dec
pusha
fldenv
data16
jg
subl
pop
aad
arpl
fwait
jmp
cld
adc
cwtl
jg
fcmovne
pop
sbb
fsubl
mov
ret
in
jge
fs
push
add
push
out
testl
jns
add
sbb
sub
imul
mov
sub
push
leave
push
push
fistl
das
sbb
jbe
jo
mov
data16
mov
pop
and
xor
ret
lcall
pop
xchg
mov
sbb
fsubp
mov
push
movsb
sub
dec
push
lea
or
or
mov
iret
dec
out
leave
cmp
shll
enter
clc
pop
add
sti
es
pop
aam
outsb
push
ret
dec
sub
ljmp
decb
addr16
jns
and
cmpsl
mov
and
stos
cmp
xor
add
ret
cmpsb
outsb
jecxz
xchg
call
or
outsl
sbb
rolb
pop
sbb
movsl
inc
and
rcll
fsubrs
pcmpeqw
sbb
pop
rcrb
stos
xchg
mov
push
cli
mov
outsb
psrlq
sbb
lret
ret
add
lcall
sar
rclb
mov
xchg
jo
cli
and
mov
out
sub
mov
dec
js
xor
jnp
sub
int3
inc
lock
lods
and
out
lea
mov
aam
fistl
jmp
push
sbb
add
mov
loop
push
pusha
cltd
mov
dec
insl
push
in
inc
push
push
in
mulb
dec
pop
push
xchg
xor
cmp
repnz
cmpsl
dec
jmp
xor
xchg
insl
jle
push
xchg
sbb
add
rcrb
js
xchg
mov
cmp
into
lret
dec
or
dec
xchg
das
sub
into
mov
dec
nop
mov
push
es
mov
cmp
mov
push
lods
cld
imul
cmp
cs
mov
dec
cmp
mov
ret
mov
mov
sbb
xchg
aas
cmc
ret
pop
loope
dec
xchg
inc
ss
push
pusha
mov
pop
orl
test
je
dec
into
jg
out
mov
or
mov
xor
add
imul
mov
in
test
xchg
js
add
ja
jno
aad
lods
repz
push
fisttps
push
test
lahf
lea
inc
in
ret
jge
or
repz
mov
ret
clc
ljmp
ljmp
pop
jno
divb
xor
sub
dec
push
aad
mov
stos
push
adc
cmp
into
aaa
popf
test
sub
xor
xchg
mul
adc
dec
cmovne
ret
push
add
das
dec
outsl
xchg
ljmp
insl
int3
push
fstpt
sbb
jmp
into
push
ds
dec
test
or
dec
cmp
aaa
xor
push
mov
jb
stos
das
les
leave
aaa
or
xor
scas
mov
adc
inc
push
push
xor
inc
int3
sub
xchg
sub
push
sbb
fwait
loop
les
call
push
adcl
imul
pop
xchg
fnsave
mov
aam
inc
js
dec
stos
repz
xchg
mov
mov
addr16
fmul
and
mov
push
loop
movsb
xor
mov
inc
sub
dec
jns
xor
testl
inc
in
push
dec
cmp
jge
lea
inc
sahf
or
lret
pop
push
ds
iret
dec
data16
sub
push
lret
popa
jecxz
xchg
js
push
imul
cwtl
mov
cmp
iret
loopne
aad
scas
xlat
jne
mov
xchg
push
or
xchg
stc
push
das
pop
push
repnz
ljmp
mov
mov
loop
imul
xchg
in
mov
stc
xchg
jecxz
lret
hlt
and
leave
sub
stos
ljmp
imul
sub
shll
dec
cld
mov
xchg
cmp
inc
cmp
ljmp
in
int
or
or
fimuls
mov
repnz
cs
iret
or
sarl
inc
hlt
mov
jbe
test
testl
iret
inc
ret
rorb
insb
das
dec
ss
dec
popf
cwtl
roll
xchg
xor
add
sbb
loope
imul
push
jmp
dec
je
push
xor
aaa
inc
in
xchg
mov
es
in
shl
sbb
ds
out
psrad
mov
ss
sarb
fisubl
addb
mov
mov
pop
and
mov
jne
dec
push
pop
dec
loop
addr16
pop
mov
lds
out
bound
cmp
std
movl
jb
inc
test
incb
pop
push
je
imul
js
bound
int
je
cs
or
hlt
sbb
ljmp
adc
repnz
loop
pop
movsb
add
sti
push
or
std
aad
pop
mov
dec
rep
xchg
imul
dec
xchg
in
sub
adc
push
xor
push
add
repz
xchg
dec
in
pop
lock
pushf
gs
test
cmp
ljmp
stos
mov
mov
addb
xchg
push
into
pop
jo
jle
pop
popf
xchg
mov
addl
add
call
cmp
sub
in
ljmp
push
inc
das
xor
out
cmc
sbbl
xchg
sarb
xchg
jmp
dec
jmp
das
push
movsb
lret
mov
sti
push
sub
enter
and
dec
ficompl
adc
test
movsl
jg
jne
cld
pop
inc
jnp
repz
push
xchg
xor
add
out
test
adc
jecxz
adc
ds
pushf
scas
pop
ret
xchg
adc
jo
js
and
sub
notb
jp
mov
cmp
mov
jmp
and
jne
mov
es
or
mov
mov
mov
inc
cmpsl
sub
push
pop
xlat
jns
insl
xchg
fsubs
sbb
rcr
jns
shlb
dec
mov
insl
in
adc
dec
or
popa
rcl
inc
jnp
xchg
inc
push
xchg
jbe
push
sti
jo
push
xorb
sbb
cmp
call
or
cli
loopne
adc
adc
xchg
jo
pop
mov
repz
clc
out
pop
cmpsb
incl
pop
push
xchg
mov
aam
es
jae
or
xor
call
sub
inc
and
stc
adc
out
mov
sti
addr16
pop
repz
adc
mov
inc
inc
dec
ret
sti
pop
lahf
push
cltd
orl
out
int3
jle
clc
dec
out
in
stos
loopne
push
das
or
out
dec
movsb
insb
add
and
cmp
lcall
pop
movsb
repnz
cwtl
aas
je
xlat
cmp
pop
lea
inc
mov
pusha
fdivs
mov
mov
fcomip
ror
mov
cmc
xchg
out
pop
test
fists
shlb
loope
call
divb
out
ret
xchg
mov
dec
or
adc
xchg
in
xor
jmp
popf
sbb
out
mov
loop
imul
mov
or
xor
icebp
and
je
xchg
and
jle
pusha
dec
cmp
cmp
mov
clc
push
adc
dec
repz
inc
mov
enter
adc
mov
imul
or
pop
push
loope
fcoms
sub
lods
xchg
push
cs
add
jle
push
pop
rcl
stos
mov
inc
in
lsl
ret
sbbb
dec
ja
push
sub
imulb
into
mov
icebp
xor
inc
mov
mov
jle
sbbb
sub
mov
adc
adc
pop
pop
inc
push
mov
and
or
push
dec
loopne
shlb
mov
jp
fisttps
out
xor
sub
xor
cmp
repz
ljmp
call
push
fdivrl
adcb
insl
xor
mov
iret
insb
add
test
andb
xorl
les
mov
add
cmc
out
pop
xor
popf
add
push
lcall
ds
mov
shlb
pop
nop
and
hlt
mov
mov
adc
inc
out
dec
pop
adc
jne
dec
mov
insb
inc
pop
sbb
daa
inc
iret
cmpsl
xor
jmp
inc
xchg
inc
push
cmp
mov
dec
mov
inc
nop
push
jecxz
adc
ss
jle
push
js
pop
cmp
add
dec
lret
ja
add
cli
adc
jns
xchg
test
shrl
sub
es
sbb
lods
dec
fwait
mov
iret
cmp
lret
lret
in
pushf
cmp
ljmp
mov
mov
inc
fidivs
repnz
adc
test
sub
bound
call
ret
std
fildl
movsb
cmp
loope
outsb
pop
and
jb
loopne
aaa
dec
inc
pop
jb
xchg
mov
dec
out
vpsrld
fwait
rcrl
aam
call
push
push
arpl
sahf
jmp
push
push
jmp
negl
jmp
clc
iret
xchg
push
movntps
aaa
imul
cmp
jne
xor
mov
ret
or
pop
out
sub
outsb
outsl
gs
mov
bound
cmp
mov
mov
dec
pop
or
mov
cmp
in
js
or
jecxz
stos
dec
mov
jae
shll
stc
sub
xchg
sub
xor
js
push
mov
sub
out
xor
push
add
lea
pusha
adc
aad
and
add
scas
jo
lds
xchg
fdivs
inc
pop
add
mov
lret
sbbb
dec
jns
sbb
push
mov
or
push
dec
mov
scas
lcall
popa
inc
xor
adc
dec
or
out
mov
or
and
sbb
push
testb
insl
sti
xchg
push
jge
fmuls
outsl
loop
call
adc
jbe
insb
push
xchg
and
sub
subl
pop
mov
add
mov
lods
mov
xchg
mov
push
inc
add
mov
xchg
ja
imul
xchg
pop
push
dec
inc
mov
xor
in
sbb
sbb
addr16
sbb
xchg
imul
mov
mov
lea
push
xchg
stc
sub
lods
sbb
dec
inc
xchg
mov
call
nop
fcmovu
push
imul
pushf
pop
outsb
mov
test
in
or
add
fldl
mov
push
stos
jmp
cmp
xor
out
nop
aaa
dec
pop
or
mov
nop
add
mov
jge
jp
jmp
push
imul
pusha
lcall
or
fsub
xchg
cld
and
xchg
pop
jg
fucomi
mov
int3
push
jecxz
cmpsl
mov
loope
test
nop
nop
shl
dec
dec
pusha
leave
lahf
out
jmp
inc
pop
and
imul
sbb
cmpsb
repz
cmp
mov
push
sub
mov
in
arpl
fiadds
inc
vmulps
andl
mov
inc
mov
rorl
outsl
push
clc
fnstenv
xchg
arpl
and
or
fdivl
xchg
clc
lahf
outsl
xor
xchg
inc
icebp
std
mov
dec
enter
mov
sbb
adc
cli
and
mov
mov
lock
repz
add
push
movsl
pusha
enter
inc
call
popa
lret
cmp
sbb
insl
adc
outsb
movsl
adc
test
stos
add
in
inc
push
ljmp
int
pop
shrb
sbb
lea
mov
jae
addr16
sub
mov
icebp
repz
nop
out
movsb
insl
in
sti
inc
jmp
inc
push
imul
mov
shll
adc
cld
decb
flds
call
cmpsb
xchg
push
mov
pop
loope
mov
mov
push
cld
daa
fucomp
testb
insb
incl
loopne
push
ja
add
je
push
int
ljmp
repnz
out
mov
sub
or
int3
push
inc
or
imull
mov
inc
jp
fcmovbe
jns
sarb
stos
nop
mov
imul
mov
in
push
lods
xorl
ret
dec
clc
daa
mov
ror
jmp
std
inc
es
xchg
shll
cmp
push
gs
fdiv
arpl
dec
and
cmpb
inc
mov
fidivrs
dec
pop
cs
cmp
rol
mov
mov
orb
lea
stos
sbb
and
sbb
inc
add
sbb
lcall
mov
add
push
movsl
insb
pop
push
push
push
call
cld
cmc
pop
pushl
mov
cmp
ret
inc
loope
stos
mul
arpl
in
pop
and
xchg
popf
inc
sarb
into
jmp
ljmp
shll
adc
pop
popf
mov
mov
bound
push
and
lds
in
fbld
jne
shll
pop
ljmp
cli
in
pusha
push
into
xor
mov
xor
shl
imul
je
push
push
movsb
fld
and
dec
and
out
aam
cld
push
mov
js
mov
call
dec
adc
hlt
push
jmp
xchg
out
push
stos
mov
dec
jno
cmp
aaa
mov
lock
out
mov
adc
popa
mov
xchg
sbb
and
dec
add
repnz
jne
xor
rclb
hlt
push
jnp
movsb
idivl
ljmp
jnp
repz
in
dec
pusha
mov
aas
jg
icebp
lods
fdivs
loopne
pop
out
push
shl
push
test
mov
imul
xchg
and
xchg
call
mov
pop
push
or
out
inc
lods
std
pop
mov
xor
ficomps
xchg
or
jecxz
pop
notl
lahf
sti
ficoms
cs
addr16
jge
out
pop
inc
push
hlt
int
sbb
fdivl
repnz
xchg
adc
mov
in
in
xor
push
xchg
shrl
jbe
sub
loope
fistpll
neg
fsubl
out
inc
pop
loop
fstpt
fdivrp
dec
and
popa
cli
in
adc
jmp
sahf
and
xchg
xor
cmp
cmp
xchg
push
adc
adc
pop
push
lcall
lds
inc
cmpsb
out
mov
mov
xchg
mov
aad
in
ja
sub
xor
push
mov
mov
mov
movb
xchg
sub
stos
or
dec
mov
inc
sub
sti
cmp
ret
inc
shrb
popa
mov
xchg
mov
xor
cmovge
jmp
je
bound
pop
mov
frstor
aam
subb
inc
int
sarl
pop
ljmp
out
inc
nop
adc
lcall
lgs
in
loope
jmp
lods
aam
lock
mov
jne
test
mov
add
adc
xchg
mov
pop
pop
or
call
jnp
push
sub
in
pushf
lahf
push
mov
add
loope
mov
pop
psubsw
icebp
enter
pop
or
xchg
gs
xchg
adc
xchg
sahf
jae
pop
lcall
mov
jbe
call
mov
lcall
test
push
jmp
xor
add
mov
int
mov
mov
dec
shr
rcl
aad
and
inc
ror
out
sbb
and
fdivl
ficoms
mov
add
add
push
into
jnp
pop
bound
dec
jp
ror
jnp
imul
pop
sbb
dec
mov
popa
or
ja
cmpsb
dec
push
sbb
push
int
adc
imul
pop
jns
in
and
loopne
sarl
jns
sbb
xor
add
sbb
ret
shll
mov
mov
and
pop
push
and
xor
lds
shlb
or
cmp
mov
add
jae
sbb
xor
ret
bound
ljmp
stc
sti
or
daa
popa
imul
mov
push
mov
push
jbe
icebp
jmp
mov
push
cmp
fstpt
mov
fimuls
mov
push
insl
fdivp
push
inc
push
mov
lret
into
stc
pop
push
js
stos
bound
ljmp
int
iret
adcl
mov
ljmp
sbb
ret
jae
push
mov
mov
in
xchg
jecxz
jb
mov
push
mov
xor
lods
xor
fsubrl
xchg
lahf
pop
xchg
xor
stc
inc
scas
jle
xchg
in
shlb
repz
jns
fs
push
sbb
rcrl
xor
push
jg
jmp
movsb
cs
out
or
enter
xchg
aas
fs
mov
push
negl
test
bound
gs
data16
test
push
mov
dec
jo
inc
cli
sub
gs
fwait
movsb
sub
pop
mov
add
mov
inc
cltd
pop
pop
rolb
test
pop
insl
and
dec
mov
stc
pop
std
fdivs
movsb
in
sti
mov
cwtl
cmp
add
mov
in
das
lret
jle
push
or
xchg
jne
mov
lea
mov
shll
sbb
xchg
test
mov
int3
call
add
testl
mov
adc
mov
pop
cwtl
jg
xor
mov
cmc
add
mov
scas
adc
lret
stos
push
mov
mov
adc
lahf
fldenv
pop
outsl
mov
popa
inc
dec
lods
leave
insl
ret
add
fidivs
std
push
add
leave
das
cmp
push
cli
mov
xor
daa
lret
iret
mov
popf
mov
lea
cmp
lods
mov
cmp
les
inc
outsl
and
cli
or
pop
sbb
adc
call
adc
bound
xlat
fisttpll
imul
adc
xchg
inc
jne
pushf
pop
inc
mov
cmp
push
sahf
mov
ljmp
and
movsb
jmp
flds
push
cli
push
or
pop
popf
dec
cwtl
testl
jle
lods
sbb
je
xchg
loopne
test
or
sarl
jns
sahf
mov
pop
negb
xchg
outsb
das
notb
push
dec
testb
faddp
jle
fimull
lds
xor
or
sbb
out
or
pop
sub
dec
std
popa
inc
xor
xchg
xlat
fs
xchg
popa
lret
or
xor
sti
cmp
in
out
jns
add
aas
jl
push
lret
sti
mov
mov
loopne
sub
mov
inc
shl
or
fdivrl
push
mov
in
dec
mov
pop
pop
mov
cltd
out
add
in
mov
sti
mov
sbb
mov
std
push
js
int
testl
inc
jp
addr16
adc
jle
inc
in
leave
mov
lcall
scas
jns
into
lret
mov
dec
aas
cmpsb
lock
push
outsl
xlat
sub
push
testb
in
adc
in
cmp
pop
xchg
or
into
xor
stos
call
icebp
jnp
jp
add
mov
dec
mov
push
adcb
inc
xor
cmp
dec
sub
icebp
mov
jmp
sbb
cmp
push
fnstsw
jmp
mov
cmpsl
inc
fnsave
aas
lock
sub
xchg
cmp
dec
sbb
dec
xor
xchg
scas
cltd
or
adc
jns
fdivp
mov
enter
adc
rorl
jbe
xor
inc
and
shr
ss
shll
cld
cli
sti
xchg
es
pusha
sbb
sub
xor
cmp
jp
cli
push
rcrl
scas
xor
pop
into
mov
in
mov
jno
jmp
addr16
cld
or
in
jp
mov
cmp
leave
mov
cmc
push
test
lds
push
jg
mov
mov
lret
stos
pop
es
pop
xor
and
dec
jmp
adc
and
push
aam
divb
adc
mov
shr
cmp
aaa
xchg
mov
push
jne
pop
fwait
shll
movl
lock
pop
pop
mov
in
lahf
es
pop
push
subl
sti
mov
sub
icebp
sbb
jo
fildll
lret
push
cmp
and
push
dec
mov
xor
clc
adc
lret
mov
aad
ret
adc
cmc
cmp
pop
jge
xor
out
mov
or
dec
xlat
sub
dec
adc
idiv
push
subb
orb
int3
xchg
cltd
adcl
fistpll
in
scas
adc
xor
testb
pop
pop
jge
cmc
jae
adc
push
jp
xlat
roll
stc
push
arpl
imul
rorb
je
bound
rorb
xchg
add
sub
dec
in
cld
inc
loop
push
inc
dec
nop
jmp
and
xor
xorb
jmp
and
adc
rcrl
int3
adc
nop
xchg
clc
insl
pushf
incl
add
lret
mov
movsl
pop
cmp
rorl
mov
jmp
inc
mov
shll
xchg
lret
and
mov
js
ret
lock
aad
dec
cmp
pushf
jge
fcos
dec
sahf
ficoml
inc
nop
iret
adc
mov
mov
mov
dec
enter
aad
pop
popf
xor
cmp
or
popa
cs
jge
xor
sbb
adc
mov
jae
in
call
xor
push
nop
mov
fwait
mov
lea
addl
jl
lcall
mov
jno
popa
mov
into
int3
idiv
inc
sbb
sub
int
sub
pop
data16
scas
add
inc
in
dec
cmp
enter
mov
test
jl
dec
xchg
push
outsb
inc
addr16
std
lahf
shll
cld
insb
hlt
rol
adc
xchg
xchg
sahf
mov
and
nop
lods
push
dec
dec
adc
movsl
addr16
lea
sbb
jge
ds
xor
mov
mov
fwait
push
mov
es
sub
aas
imul
cmpsb
loope
int
shll
das
cmp
sbb
in
sbb
aam
in
add
mov
fildll
xor
fsubl
scas
mov
xor
scas
notl
or
pop
shrb
test
aad
mov
and
mov
test
pop
dec
jg
adc
fs
inc
inc
arpl
mov
adc
fildl
movsb
rorb
add
mov
mov
out
xor
adc
sub
sub
test
mov
sbb
adcb
adc
xchg
cmp
movsl
mov
and
push
pop
push
mov
les
push
dec
adc
leave
pop
fisubrs
out
ret
inc
dec
push
inc
stc
inc
sbb
dec
dec
add
repz
cs
stos
xor
xchg
inc
out
fwait
mov
js
mov
fdivs
clc
fcmovbe
mov
fisubs
imul
and
dec
mov
jmp
data16
dec
lret
clc
test
into
xor
inc
scas
cwtl
mov
shrb
cmc
cli
push
sti
pop
jne
adc
push
fdivr
and
push
pop
incb
in
push
mov
cwtl
inc
insb
mov
pop
cs
sahf
hlt
bound
push
loop
mov
sub
mov
cli
dec
mov
jo
inc
adc
dec
cmpsl
mov
xchg
xor
pop
push
jge
mov
mov
lahf
jnp
mov
ret
rcr
outsl
inc
clc
or
xchg
mov
in
fs
jecxz
or
pop
push
mov
lret
stos
or
adc
mov
fimuls
outsl
mov
std
mov
add
and
movsl
stos
sahf
int3
fmulp
mov
add
mov
es
pusha
mull
mov
xor
push
push
negb
sti
mov
sub
push
into
lea
push
cmp
push
pop
jno
or
in
movsb
mov
mov
bound
lds
mov
js
sub
into
arpl
rorl
mov
sahf
add
mov
aam
xchg
or
in
inc
dec
dec
xchg
mov
mov
push
movsb
cmp
dec
and
cmpsl
aaa
mov
sub
mov
fucomip
mov
dec
ds
arpl
cwtl
clc
testl
add
xor
inc
aaa
and
jne
iret
std
sbb
push
cmp
push
jae
imul
mov
xchg
hlt
and
xor
cwtl
xchg
add
add
or
addb
leave
ror
rolb
pop
jge
mov
icebp
mov
fisttps
shll
cli
outsb
jne
scas
iretw
es
cmp
movsb
cmc
stos
nop
and
xor
out
stc
mov
pop
add
in
and
lret
cmc
mov
iret
mov
cmp
dec
push
xchg
pop
sahf
mov
ja
add
push
xchg
int3
inc
test
into
pusha
push
stos
enter
sub
pushf
push
or
jne
repz
cmc
mov
mov
jnp
out
mov
cmp
sub
ds
lahf
sub
lcall
fdivrl
mov
addr16
jns
sub
inc
lret
cltd
xchg
imul
jne
adc
xor
jno
fidivrs
dec
repz
rorl
and
jecxz
movsb
out
rolb
je
mov
mov
loopne
pop
js
popa
outsl
pop
mov
es
insl
cltd
mov
in
stos
data16
pop
das
shlb
in
adc
push
pop
xor
aas
call
xor
lcall
push
jp
ljmp
xor
sub
add
movsl
mov
mov
dec
xchg
dec
int3
mov
sbb
repz
stc
push
das
cmp
inc
mov
rorb
jb
addr16
ds
sbb
cltd
or
pop
dec
lcall
jns
mov
les
add
les
insb
cmpsl
push
pop
push
sahf
inc
push
xchg
aaa
push
pop
lret
inc
mov
push
adc
mov
stos
outsb
faddl
xor
adc
js
jle
jge
jmp
rcr
lret
out
lods
xchg
mov
pop
add
inc
xor
hlt
xchg
int3
clc
in
jle
xchg
xor
das
in
fisttps
int3
pop
inc
fistpl
lahf
xor
shrl
jge
cmp
in
mov
loope
in
sub
push
push
add
test
pop
outsl
or
lds
repnz
mov
and
ret
out
lock
les
popf
lds
push
inc
xor
xor
ss
cs
or
ss
xor
inc
pop
in
jmp
rcll
mov
js
ljmp
mov
movsb
cltd
adc
pop
mov
addb
adc
cli
adc
bound
movsl
jp
icebp
sub
scas
lock
decl
movsb
ret
jns
int
stc
es
cwtl
js
inc
cmpsl
fstpt
or
shlb
cmp
sbb
dec
fistl
pop
fsubrp
mov
aam
jl,pn
push
or
outsl
jle
movsb
cmp
xor
sub
jno
dec
sbb
push
pop
xchg
aaa
lret
movsl
in
xchg
pop
sbb
test
mov
nop
sub
pop
sub
sbb
int
jmp
mov
scas
cli
mov
cmp
arpl
and
adc
std
out
lret
mulb
js
inc
lret
sbb
jp
data16
mov
mov
in
pop
insl
popa
mov
sub
repnz
or
inc
test
lret
orl
xchg
xchg
and
cld
lock
rorl
push
lret
sub
fistps
xor
xchg
test
dec
rclb
or
aaa
xchg
mov
sub
outsb
rcl
jg
in
cmc
sbb
arpl
xor
sub
pop
and
insl
xchg
mov
fs
cltd
addr16
sarb
insl
fbstp
js
pop
push
fwait
loop
shll
gs
rcrl
fidivs
in
cmc
add
out
pop
and
adc
lea
lret
dec
dec
xchg
adc
dec
xchg
sbb
rcrl
ss
outsb
xchg
and
mov
jg
dec
push
add
xchg
leave
or
jns
mov
mov
nop
std
mov
lret
dec
push
inc
loopne
jo
mov
leave
push
mov
mov
outsb
cmpb
pop
imul
data16
rorl
in
jmp
sub
adc
mov
push
mov
notl
testb
xlat
sbb
inc
mov
adc
sub
hlt
std
mov
mov
ss
ss
mov
and
add
stos
ja
and
and
add
sti
fcmove
jle
mov
add
xchg
mov
pop
cmpsl
inc
dec
mov
icebp
dec
sbb
xchg
mov
push
fwait
lahf
pop
sbb
enter
imul
insb
mov
jo
test
mov
push
ljmp
ds
call
test
jb,pn
lcall
mov
push
add
movl
sub
setp
lds
jl
fucomip
sbb
inc
add
jbe
int3
sub
in
daa
pop
ljmp
inc
jns
popa
add
or
fcomps
scas
cld
lret
sarb
movl
jo
test
fs
out
push
sbb
add
inc
sub
outsl
sbb
pop
outsb
icebp
xor
rcll
lods
mov
bound
std
jmp
sbb
out
out
out
rcll
loop
repnz
fists
adc
and
mov
mov
sub
or
sub
push
jno
inc
fadds
mov
xchg
mov
pop
add
sub
lock
pushf
dec
negb
sub
movsb
sub
sbb
out
adc
and
bound
repnz
imul
out
and
xchg
jns
add
repnz
data16
sbb
inc
repnz
jg
pop
mov
sahf
mov
leave
fucomp
fstl
inc
sbb
pop
out
fistl
xchg
insb
sub
sahf
push
stos
jno
stc
sbb
inc
adcb
loopne
dec
inc
mov
push
jge
sbb
mov
dec
cmp
or
and
sarl
xchg
inc
mov
or
mov
mov
sub
pop
and
and
cmp
sub
mov
fwait
mov
js
pushl
xchg
lods
adc
fisttpl
ljmp
cmp
call
fistl
test
dec
lret
or
jle
sub
pop
and
jge
scas
add
adc
mov
dec
jmp
lods
arpl
rcl
jne
hlt
mov
adc
aad
push
repnz
pop
mov
leave
push
jae
push
cli
adc
sbb
lock
sbb
sbb
adc
hlt
addb
push
push
mov
insb
pop
fldenv
lret
scas
hlt
into
adc
aad
cmpsb
mov
jg
out
jp
fcompl
lds
mov
jecxz
xor
enter
int
push
mov
rcr
mov
push
cltd
dec
es
mull
or
inc
mov
fcoms
push
sti
shlb
jnp
and
mov
lret
xchg
push
push
add
push
xor
inc
sub
xorl
lret
and
aas
arpl
lret
cmp
out
push
sbb
aas
mov
icebp
jp
ret
lret
xor
adc
xor
mov
mov
add
dec
aas
xchg
lcall
or
push
add
cld
sub
adc
jmp
jns
mov
into
dec
pop
popa
sbbb
jg
loope
insl
and
loop
mov
and
outsl
or
xchg
xchg
cmp
xchg
nop
cmp
and
mov
rorb
into
inc
int3
push
fsincos
inc
dec
adc
pop
mov
out
lret
popa
inc
ror
xchg
icebp
sub
xor
jg
cli
out
adc
test
push
adcb
pop
outsl
aam
push
add
sub
js
in
cmp
subl
push
dec
lret
sub
aas
mov
or
lods
mov
rclb
sbb
lret
pusha
mov
ljmp
push
dec
pop
pusha
mov
and
test
pop
xlat
xor
fimuls
in
xor
sub
push
and
adc
fwait
into
dec
sbb
sub
inc
ja
cmpl
push
cmp
xor
clc
into
mov
divb
aas
js
nop
and
push
rol
dec
into
cmp
push
das
pop
jo
xor
sbb
xchg
push
pop
mov
scas
inc
xchg
les
es
ficoms
rcrl
mov
js
xchg
cmpsl
fadd
mov
repnz
adc
cli
xchg
js
daa
cld
pop
push
into
pop
and
cmp
pop
test
das
adc
das
in
mov
inc
jnp
popf
test
ret
sub
dec
bound
xchg
mov
loope
arpl
das
enter
push
cmc
mov
loope
in
push
andb
insl
dec
sbb
xchg
sub
push
jl
lods
hlt
fucomip
ret
pop
iret
pop
hlt
in
clc
sub
je
sbb
mov
push
orl
out
mov
pusha
mov
xchg
insb
rclb
xchg
into
adc
sbb
and
ret
pop
adcl
sbb
xchg
fiadds
or
jmp
imul
mov
xor
out
inc
adc
es
jmp
les
ficoml
and
inc
stos
mov
cmc
adc
cmp
mov
shll
fsubrs
sarb
call
dec
outsb
sbb
jno
mov
xor
sub
push
fyl2xp1
stc
cwtl
adc
xchg
adc
and
lock
les
cmpb
mov
dec
push
mov
adc
loop
test
sbb
push
or
xchg
ret
pop
mov
xlat
rolb
sbb
icebp
loop
aas
pop
ds
stc
dec
call
jne
add
lret
mov
jb
movsl
inc
dec
in
shl
xor
mov
add
sbb
fimuls
push
cmc
xor
mov
cmpsb
inc
cmpb
pop
push
nop
imul
out
sub
xlat
jmp
jl
std
bound
test
dec
aaa
mov
and
sbb
popa
xchg
push
cli
lock
jno
test
cld
lods
loope
xor
mov
test
mov
push
sahf
cmpsl
inc
add
hlt
and
xchg
jg
gs
imul
mov
fmull
fsub
imul
pop
shll
jecxz
and
dec
jnp
lcall
inc
and
rorb
inc
pop
inc
es
xor
sbb
rolb
dec
sub
aas
in
aaa
rcl
cmp
jecxz
xlat
cmp
sbb
and
xlat
aad
inc
pop
xchg
mov
sbb
mov
lcall
testb
fdivrs
pop
push
cmp
fistpl
pop
in
ljmp
adc
pusha
int
sub
xor
lods
ret
hlt
jl
addb
push
ljmp
ljmp
push
rcrl
scas
add
stc
inc
movsl
xor
mov
std
js
test
xor
mov
inc
mov
cli
lods
out
mov
or
call
lcall
cs
jg
pop
push
out
aad
jns
pop
pop
or
cmpl
inc
je
inc
adc
dec
call
xor
xor
in
jbe
loope
push
pop
loope
xchg
sub
call
mov
movl
push
sbb
scas
adc
mov
cmp
gs
sbb
jb
jns
std
movb
out
or
jge
mov
cmp
sub
or
xchg
push
adc
cli
pop
aam
dec
inc
mov
fiaddl
or
mov
ljmp
cs
xchg
dec
loope
int3
sbb
aas
pop
xlat
stos
test
fildll
lock
roll
fsubrl
push
push
jg
arpl
fwait
jge
push
inc
out
or
xor
and
xchg
dec
xchg
or
aad
jge
adc
fs
mov
adc
mov
jl
shl
test
lcall
and
pop
mov
js
pop
push
loop
xor
daa
push
dec
sbb
mov
loopne
int
pop
pushf
mov
das
ss
jbe
subb
or
insl
mov
pop
lret
inc
adc
push
shr
xchg
cmp
add
test
xor
mov
cltd
adc
fcmovu
fdivl
xor
or
lock
sub
out
std
out
cs
test
pushf
dec
mov
insl
jle
repz
xchg
stos
and
cmc
xor
lods
mov
add
lock
mov
into
inc
shlb
cli
lods
mov
xchg
sub
nop
andb
pushf
sub
jle
jl
bound
mov
fisttps
imul
push
push
test
cli
mov
mov
cli
pop
outsl
scas
or
stc
mov
pop
pop
jne
xchg
xor
inc
add
out
mov
nop
xor
mov
inc
iret
into
dec
adc
lods
pop
ficoms
xor
popf
mov
mov
insl
rclb
adc
lea
cmpsb
aaa
fcomps
fldl
jl
lea
ljmp
daa
sub
stc
cmp
sbb
imul
bound
and
call
inc
pushf
cmp
out
ss
push
test
jl
jecxz
cmp
push
hlt
cld
gs
stos
sub
sbb
fidivs
xchg
cmc
sub
shrb
or
and
push
mov
aaa
jne
rolb
sub
xchg
pusha
sub
jae
push
mov
cmpsl
test
xchg
imul
sub
inc
push
cmp
movhps
xchg
or
clc
xor
mov
cmp
jle
movsl
sbb
ljmp
adc
pavgw
pusha
testb
sti
jle
jg
into
mov
rcl
int
inc
push
rcl
js
mov
mov
inc
xor
xchg
addr16
insb
fldenv
xor
fwait
jne
sbb
mov
lcall
adc
sbb
mov
test
ja
xor
out
outsl
jmp
in
imul
and
jb
fcmovu
push
rcr
sbb
out
ret
sub
aam
jae
in
xor
cmp
lret
xor
ds
xchg
mov
iret
push
or
bound
rcll
push
mov
sub
push
jl
into
inc
mov
outsb
js
fs
sbb
aam
xor
lods
mov
scas
lret
adc
dec
adc
pop
outsb
push
enter
in
iret
push
push
jmp
mov
push
cmp
cmp
cwtl
aad
fidivs
push
mov
jl
in
xchg
sbb
push
cmp
stc
push
out
mov
sti
cmp
popa
test
ds
sbb
pop
mov
iret
je
mov
mov
popf
lret
jl
ss
cwtl
aad
inc
xchg
daa
dec
mov
jl
mov
clc
adc
push
or
mov
adc
xchg
inc
rorb
cmp
or
push
sbb
pop
xchg
xchg
idiv
sbb
divl
mov
in
shrl
pop
jmp
jl
pop
xor
push
in
dec
addr16
mov
loopne
sub
or
and
xchg
push
insb
stos
dec
gs
push
push
js
clc
in
jmp
inc
or
cmc
sti
xchg
ss
dec
adcb
call
movsb
out
ja
jp
frstor
sbb
out
push
inc
xchg
adc
cs
mov
sahf
sbb
cli
inc
fidivs
sahf
leave
push
mov
xor
ja
push
int
add
mov
push
ffree
push
push
inc
ret
jmp
lcall
hlt
pop
subl
inc
movsb
xchg
xchg
leave
dec
mov
dec
adc
js
int3
insl
lahf
outsb
inc
pop
inc
fcoms
mov
jmp
data16
sub
sub
cmpsl
je
mov
sbb
insb
rolb
aad
mov
into
jns
lods
push
arpl
aad
arpl
in
or
out
repnz
add
mov
add
cmp
imul
cmp
cwtl
ds
fstpt
ljmp
fsubr
lds
jecxz
adc
mov
fs
lea
jge
imul
enter
sub
mov
outsl
pusha
test
dec
mov
mov
and
sub
or
adc
push
adc
inc
pop
stos
insb
in
jg
sub
sub
clc
inc
mov
mov
test
inc
lret
xor
shr
pusha
fistpl
xor
fucomi
dec
and
shrb
xor
jecxz
jmp
sbb
mov
ds
rclb
in
jne
insl
lret
push
add
sub
mov
push
cmp
repz
mov
out
popf
test
mov
adc
pop
rcll
out
sbb
lods
lahf
dec
and
jle
bound
repz
jg
iret
bnd
mov
test
push
and
push
sub
int3
pop
std
xor
dec
cmp
jo
in
add
mov
aad
adc
stos
cld
popa
movsb
jbe
jne
test
paddusb
add
push
mov
aam
imul
sbb
lods
push
push
dec
mov
sahf
jg
or
movsb
sub
loope
cmp
push
fwait
out
sbb
into
or
roll
dec
mov
and
sub
shll
mov
roll
or
or
pop
push
xchg
xor
push
inc
pop
pop
xchg
push
insl
mov
xchg
ficomps
movsl
gs
push
xor
mov
shlb
pop
mov
xor
repnz
jo
fistl
ret
imul
push
push
jmp
aaa
adc
mov
pop
mov
inc
push
jnp
pop
mov
insl
fs
sti
ds
inc
xor
jg
rolb
into
in
in
dec
ss
mov
dec
arpl
shrb
mov
repnz
lahf
adc
rorb
fsubl
sbb
add
insl
add
gs
xchg
or
push
inc
int
cmp
xchg
xchg
popl
sub
mov
add
out
xor
sub
jecxz
sub
pop
faddl
jecxz
and
adc
sub
test
sbb
jmp
jecxz
mov
mov
loope
sbb
lods
dec
mov
or
dec
add
sbb
dec
mov
in
inc
add
inc
mov
xorl
push
mov
dec
sub
push
add
loope
xchg
or
in
dec
push
pop
inc
jnp
dec
mov
dec
mov
cmp
cli
ret
jp
aaa
mov
dec
iret
fdivp
mov
push
dec
cli
mov
mov
fstps
scas
mov
lcall
sti
ljmp
popa
dec
xchg
clc
jg
test
pop
pop
cmp
ljmp
test
push
pop
cmpsb
mov
or
mov
mov
sbb
jecxz
pop
jo
jle
jbe
cmp
jl
dec
clc
dec
leave
in
in
in
sbbb
push
dec
xor
sub
or
push
in
inc
mov
and
jg
mov
shl
xchg
jmp
inc
xor
mov
incl
stos
sub
aad
ret
push
out
and
add
add
ljmp
ficoms
inc
loopne
test
lahf
mov
sarl
fwait
pusha
cltd
sub
call
cli
xor
inc
mov
dec
insl
lret
or
ja
out
push
ljmp
inc
cmp
mov
stos
call
fisttpl
insb
xchg
clc
xchg
inc
lods
movsb
stos
mov
jl
orb
mov
or
sbb
lret
xchg
fs
in
pusha
das
cmpsl
inc
jmp
push
hlt
fstl
fdivs
mov
xchg
dec
mov
adc
das
in
jge
jl
push
jb
xchg
jno
pushl
jne
mov
in
adc
sti
in
push
enter
fucomip
in
xchg
dec
popa
cs
rcrl
gs
scas
inc
xchg
fmull
mov
clc
insb
fdivr
and
add
push
pop
sub
mov
cs
add
mov
mov
adcl
jecxz
lods
inc
mov
or
xchg
popf
pop
add
fcmovnbe
pop
mov
stos
sub
out
xchg
mov
in
xchg
mov
xor
adcl
add
cmp
orb
stos
andb
inc
cltd
jne
push
and
fistps
dec
test
mov
mov
test
clc
es
idiv
inc
jle
pop
lds
xor
add
mov
out
xor
das
sub
iret
inc
jbe
pusha
sbb
pusha
push
dec
jbe
das
push
fimull
cs
arpl
or
mov
xchg
and
lock
data16
cs
sbb
sbb
das
test
cmpsl
fsubrs
nop
gs
sahf
cmp
dec
mul
lret
mov
insb
popa
mov
cmp
shlb
pushf
test
pushf
jbe
cmp
test
or
and
lret
frstor
imul
and
leave
sbb
lds
sahf
xlat
push
lahf
ret
cwtl
mov
leave
sub
aam
or
ljmp
lret
and
jb
add
mull
cmc
popl
xor
cmp
cmpsb
and
mov
jb
gs
dec
std
and
inc
dec
stos
fwait
loop
rol
and
shlb
ret
es
or
cmp
sub
das
xor
xchg
push
and
shlb
pop
jl
push
fisubs
and
push
xor
mov
and
inc
mov
sti
test
xorb
fsubrl
sub
in
and
lock
arpl
ret
pusha
scas
mov
hlt
sub
pop
jle
enter
jne
inc
push
cli
cmpsb
sub
ret
sub
mov
mov
fisubs
icebp
mov
xchg
rcl
sub
je
adc
adc
xor
or
fisttpll
psrlw
lods
mov
ss
cmp
mov
inc
out
mov
aam
in
mov
scas
push
mov
addr16
loop
stos
adc
dec
or
push
and
adc
mov
ja
cld
jl
add
xor
in
xchg
pop
push
inc
xor
cmp
enter
out
jmp
push
or
add
mov
dec
sub
inc
inc
rcr
dec
outsb
shrl
aam
mov
jp
inc
dec
cmpsb
pxor
jo
outsb
out
fwait
js
ljmp
push
pop
mov
inc
out
xlat
mov
ret
rorl
ret
jmp
mov
fidivs
arpl
mov
mov
sbb
mov
sub
adc
jbe
dec
or
idivb
insb
dec
cltd
les
fdivr
shll
or
jmp
jle
fimuls
and
and
xchg
gs
push
inc
insl
cmpsl
in
mov
push
out
ret
enter
test
push
jb
mov
push
xchg
fld
popf
xchg
inc
cmpsb
jne
cmp
add
js
pop
and
jns
into
pop
bswap
pop
inc
lret
pop
loopne
push
cmp
gs
ss
sbb
jno
sbb
inc
or
subb
sbb
inc
push
outsb
mov
cwtl
xorb
in
jno
jle
pusha
lret
adc
inc
inc
push
test
nop
inc
mov
fs
lock
sub
mov
inc
mov
gs
stos
push
mov
iret
pop
adc
cmpsb
mov
cmp
and
bound
push
and
icebp
sub
inc
dec
pop
or
and
dec
mov
cmp
inc
stos
jmp
aam
mov
fstps
jmp
outsb
les
dec
hlt
shll
insb
adc
push
mov
mov
and
lahf
pusha
ljmp
sarl
into
pop
add
push
subb
sbb
inc
outsb
pushl
aam
stos
rcrb
int
std
and
mov
ljmp
fucomip
dec
xchg
xchg
int3
push
das
sub
jbe,pn
or
popa
dec
insl
andl
add
push
xor
push
jecxz
cld
mov
pusha
sti
xor
std
sti
std
repz
mov
pop
xor
fisttpll
add
or
mov
sub
mov
movsl
fadd
jmp
pop
and
testb
mov
mov
jmp
adc
push
xchg
xchg
dec
mov
add
ja
jg
aas
fisttps
enter
enter
mov
je
push
mov
lods
jmp
jns
xor
pop
adc
cs
outsl
in
cld
shrl
pop
int3
outsl
mov
mov
sti
iret
adc
sahf
xchg
lret
mov
push
fildl
jnp
dec
repnz
push
cmp
jae
and
adc
jl
lea
ss
cmpsl
xor
or
aam
sarl
cmp
ja
fsubrp
stc
cmp
sub
jmp
mov
int3
popf
xor
idivl
bnd
pop
sti
inc
outsb
push
lahf
andb
outsl
int3
mov
lods
das
sub
mov
je
fldl
pop
notb
test
xlat
mov
mov
cli
lcall
mov
lcall
popf
addr16
or
mov
stos
xchg
lea
push
lock
out
and
xlat
mov
inc
repnz
xor
mov
xchg
int3
movl
lds
jle
loope
mov
add
cltd
andb
inc
sbb
cmp
mov
enter
sbb
rcll
lods
sbb
int3
mov
mov
ja
xor
jns
add
jmp
test
cmp
push
das
imul
cmc
xchg
cltd
mov
sbbb
mov
or
mov
pop
out
clc
test
push
stos
addl
mov
imul
dec
aam
jbe
ljmp
dec
push
inc
sbb
jg
and
xor
dec
or
bound
pushf
movsl
sub
bnd
dec
stos
cmc
scas
les
push
dec
out
sub
sub
int
mov
push
jge
mov
cmc
shll
mov
sub
in
popf
xchg
imul
repz
cld
loope
ret
data16
repz
andl
cltd
loopne
cltd
jg
inc
dec
cmpsb
xchg
cmp
mov
xchg
jae
xor
lahf
push
sahf
inc
push
jmp
cmpb
lret
mov
test
mov
mov
mov
cwtl
mov
adc
insl
mov
mov
cmc
xchg
in
xlat
insl
jnp
cmpsl
testb
stc
call
jo
les
arpl
inc
fsubrl
push
mov
popf
cmp
mov
mov
xchg
fisubs
inc
or
xchg
mov
jg
fs
addr16
push
js
loopne
rorl
xchg
xor
lods
pop
mov
outsb
stos
test
add
cli
cld
mov
lods
cmpl
lods
mov
mov
xchg
lret
add
mov
out
cltd
cmp
pop
cs
cli
sub
fs
mov
mov
mov
fcmove
leave
inc
add
rcrb
out
xchg
dec
mov
icebp
cmp
jmp
inc
mov
inc
xor
sahf
and
cmpsl
xchg
adc
pop
bound
daa
cs
mov
sub
lods
test
cmpsb
out
xor
mov
scas
jp
movsl
test
xlat
data16
sub
bound
xor
cld
flds
cld
ds
cli
adc
in
jge
clc
sub
xor
clc
xchg
sub
je
cli
cltd
and
xchg
jnp
divb
popf
sub
repz
bound
mov
inc
push
stos
sbb
testl
inc
out
jecxz
data16
daa
adc
test
mov
xchg
mov
ljmp
pop
mov
or
jns
push
stc
fldl
ljmp
push
leave
into
jnp
xchg
mov
les
lds
mov
stc
push
fisttps
imull
lcall
fstpl
lcall
stos
xchg
and
xchg
mov
xor
mov
xor
jp
outsl
lods
push
jo
pop
lahf
mov
add
sbbb
adc
sub
std
out
data16
arpl
loope
xchg
cmc
jle
inc
xchg
inc
scas
sbb
mov
inc
xchg
rorl
in
dec
es
mov
rclb
mov
fdivp
fidivl
jle
cmpsb
les
sti
out
outsl
insb
lea
pop
add
mov
imul
xchg
cmp
shrb
stos
inc
fbld
mov
xchg
or
fcoms
imul
mov
dec
inc
xorb
inc
stos
std
lds
mov
cmc
popf
lods
mov
in
ds
pop
imul
sbb
mov
stos
cwtl
outsl
xchg
jne
decl
scas
das
cwtl
pushf
insl
and
mov
sub
cmp
ljmp
fneni(8087
out
mov
adc
aas
ds
cmp
in
add
sahf
sub
nop
bound
roll
iret
ss
pop
mov
rcrl
xor
movsb
enter
sub
inc
int3
xchg
push
ret
mov
stos
xor
repnz
sbb
adc
xor
test
aad
idivl
movsb
xchg
jmp
jns
ficomps
mov
sbb
mov
mov
repz
hlt
movsl
data16
jle
rcr
ja
xchg
pop
movsb
daa
xchg
xor
pop
pop
add
data16
negl
dec
cmc
inc
jle
fisubrl
inc
xchg
cmp
mov
int3
cmpb
fldt
lods
aam
xor
sub
jo
iret
jns
xor
cmpsl
imul
fidivl
add
dec
lcall
push
adc
outsb
pop
into
movsb
loop
sub
insb
mov
push
in
mov
shll
sti
mov
call
and
shr
mov
jnp
mov
movsl
mov
test
and
aam
add
inc
cmp
out
mov
std
lods
aaa
lcall
pop
xor
js
mov
push
mov
lret
xchg
fisubl
pop
in
lods
pop
pop
jecxz
xor
loope
fiadds
jecxz
xchg
insb
out
xchg
xchg
gs
scas
addr16
ret
xchg
mov
xchg
call
inc
or
jne
xchg
out
loop
mov
mov
jb
xchg
jmp
rclb
xchg
inc
aad
lret
test
call
add
int
or
popa
inc
out
cmova
popf
jecxz
std
movsl
and
fstpl
mov
inc
mov
xchg
xchg
xchg
pop
add
insb
addr16
popa
repz
popf
xchg
in
xchg
cli
pop
ss
int3
pop
xchg
push
mov
inc
fistpll
xor
sbb
in
adc
lahf
sti
inc
inc
mov
or
inc
out
lods
mov
push
loop
lcall
mov
adc
cmp
jnp
inc
cmp
mov
int3
mov
xor
rcrl
xchg
int
xchg
ret
popa
mov
fucomp
add
sub
aad
ret
sub
cmc
mov
inc
mov
mov
int3
loop
xor
pop
jae
std
xor
mov
leave
cmpsb
xchg
scas
nop
mov
add
fists
adc
in
je
hlt
xlat
sub
adc
xchg
cltd
in
out
lcall
cmp
jns
push
stc
insl
inc
jmp
adc
movsb
stc
mov
xor
loop
inc
fidivrs
sar
stc
filds
mov
push
inc
pop
inc
sbb
xchg
cmpsl
xchg
or
cli
sub
aad
xchg
sbb
mov
adc
push
jp
push
je
repz
fldcw
xchg
cli
sub
ja
dec
rolb
outsb
cmp
in
inc
jb
fisubrl
jb
test
mov
jae
push
enter
mov
sti
clc
jecxz
fcoml
scas
cmp
dec
or
sub
xchg
in
sub
add
rorl
pop
jle
rep
pop
sbb
xor
and
jb
sub
xor
fldenv
inc
std
and
cmpsb
xchg
add
cmp
arpl
mov
loop,pt
outsb
das
fwait
jmp
mov
mov
mov
mov
out
cltd
push
das
cwtl
xor
xor
movsb
cmpsl
cmp
sarb
sub
push
in
inc
cmp
xchg
fwait
js
adc
inc
jp
cmp
bnd
les
cltd
mov
xor
addl
mov
cltd
aam
and
xor
jp
outsb
mov
imul
dec
fdivs
jl
mov
scas
clc
fiadds
cmp
shr
in
sahf
mov
aas
sarb
iret
xchg
dec
rcrb
cmp
dec
cmp
mov
mov
dec
insl
daa
pop
dec
ret
inc
and
test
mov
jle
rclb
xlat
cltd
pop
lahf
stc
xchg
lcall
push
stos
movsl
data16
popa
cli
dec
jmp
inc
pushf
pop
fdivp
insl
and
and
loop
mov
dec
pusha
xchg
cli
arpl
mov
jb
scas
xchg
enter
mov
pop
pop
stos
rorb
fisubl
jp
rorb
sbb
mov
inc
cmp
ja
jle
lods
addb
bound
mov
sub
dec
xchg
pop
xlat
ficomps
fsubr
ljmp
mov
aas
xor
add
stos
popf
and
sub
and
daa
jmp
mov
jb
lret
xchg
fcmovnbe
xor
dec
push
inc
dec
lock
divb
fbstp
inc
adc
mov
jmp
mov
xlat
fisubl
movsb
fistl
xor
ret
xor
push
loopne
mov
xchg
sahf
cld
xchg
repz
mov
inc
fwait
daa
jecxz
test
std
rcrl
jle
ja
or
popf
test
mov
les
ret
add
push
pop
mov
in
jmp
jmp
sub
fs
jo
mov
das
add
call
mov
movsb
push
ljmp
xor
mov
cmp
jecxz
inc
push
or
stos
clc
jg
xchg
sub
dec
out
jmp
inc
xor
aam
xchg
into
cmp
dec
jno
lcall
and
jmp
cmpsb
daa
mull
push
out
out
outsl
jnp
sbb
sub
xchg
jb
mov
cmp
and
xor
xor
mov
push
dec
mov
movsl
mov
mov
imul
aaa
mov
out
cmp
iret
das
in
xlat
pop
stos
stos
jb
dec
push
sub
xchg
cwtl
jg
pushl
cmpsb
scas
popf
pop
in
pop
xor
mov
dec
test
mov
jmp
orb
pop
push
aas
inc
ret
rcrl
loop
stos
dec
xchg
movsb
cli
pop
inc
push
mov
pusha
stos
test
shll
data16
data16
xchg
push
cmc
sub
push
push
add
or
xor
movsl
or
lcall
sbb
cli
mov
cmpsb
divl
pushf
ljmp
xchg
ficompl
cmp
pop
sarl
jecxz
adc
jg
mov
clc
loop
outsb
ret
mov
fstps
pop
mov
outsb
out
or
xchg
pushf
int
xor
andl
stos
fwait
mov
pop
jecxz
cmp
aad
xchg
in
scas
in
int
inc
mov
int
xor
push
cmpb
rorb
jmp
maskmovq
testl
xchg
pop
mov
mov
jg
sbb
inc
xchg
and
cmp
mov
mov
push
std
fdivs
mov
pop
mov
je
test
dec
cmp
arpl
sub
mov
jp
test
into
xorb
jb
or
enter
out
cli
and
jl
imul
test
add
xchg
xor
lret
gs
or
cli
and
jnp
std
xchg
clc
stc
push
stc
cmp
loopne
hlt
neg
negb
push
in
repnz
fists
faddl
divb
inc
mov
ss
cmp
lods
ljmp
clc
dec
sub
fwait
sti
pushl
test
repnz
lds
sahf
ror
cmp
pop
scas
jge
psrlw
ret
sahf
loop
jns
popa
mov
movsb
ljmp
xor
popf
daa
inc
mov
data16
xor
or
loope
lret
pop
out
jle
and
fisubrl
fisubl
jne
cmp
mov
loope
xor
add
loop
loop
clc
cmp
shll
dec
inc
shr
aas
cs
cs
es
inc
and
mov
fldenv
adc
push
jae
divl
push
push
adc
xor
dec
imul
movsl
xchg
inc
dec
dec
lcall
cmp
pushf
lret
or
push
inc
lds
cmpsb
fistps
xchg
adc
jecxz
popa
fcompl
movsl
xchg
cmp
clc
cmp
sub
cmp
push
data16
push
pop
ss
mov
inc
xor
test
out
pop
testb
xchg
dec
dec
shr
adc
cmp
into
sahf
xchg
out
jle
cltd
pop
sub
adc
lds
icebp
xor
shll
jne
dec
xchg
mov
mov
ljmp
sub
dec
pop
sar
rcrb
mov
repnz
iret
nop
add
rcll
cmpsb
push
pop
pop
push
add
mov
pop
ljmp
fsts
pop
aaa
hlt
leave
imul
cwtl
push
in
mov
xchg
rorl
sub
stos
shlb
das
jae
sub
sahf
cli
divl
xor
jmp
stc
out
aaa
cmp
cmp
add
jo
sub
xchg
into
loop
movsb
cmp
xchg
insb
in
aad
xchg
dec
adc
enter
mov
push
adc
mov
push
out
imul
adc
cltd
jle
pop
stc
fcomp
lret
push
mov
and
add
xor
repnz
xor
jmp
xchg
clc
adc
jp
roll
stc
inc
inc
insb
dec
fstpl
imul
andl
popa
adc
fnsave
inc
rcrl
movsb
das
sarb
jne
aad
xor
push
cmp
addl
stc
ds
cmpl
jecxz
cmp
std
xchg
or
enter
pop
and
sbb
rclb
xchg
fdivrs
or
stos
gs
or
and
mov
rol
adc
jns
inc
and
shll
lods
xchg
pop
xchg
adc
cld
inc
xor
push
dec
out
outsl
pusha
repz
add
xor
aad
dec
stc
fistpl
fsubr
cmc
addr16
xlat
cmp
inc
jnp
ja
xor
pop
stc
scas
pop
push
fbstp
fidivrl
dec
sub
rolb
mov
out
jg
ja
jle
loope
fwait
popf
imul
inc
cld
jne
push
lret
mov
xchg
inc
xor
mov
mov
xor
jnp
inc
fcmovne
push
stc
repnz
push
lahf
rclb
out
dec
cmpsb
aam
fisubs
pop
mov
mov
outsb
jae
outsb
sub
sti
insb
cltd
in
test
mov
aad
mov
mov
push
sbb
mov
nop
mov
jnp
xchg
lss
roll
das
mov
xor
jge
push
mov
shl
pop
mov
jmp
fldenv
fs
mov
mov
lret
std
sub
push
mov
mov
mov
kmovw
xlat
pop
pop
mov
mov
cli
shll
test
call
lds
dec
ss
mov
ret
daa
idiv
jno
mov
pop
xchg
xchg
cmp
decb
xor
mov
daa
fdivrs
pop
dec
fdivrs
jns
jns
loop
insl
cmpsb
and
sahf
jb
fsubl
dec
je
scas
addr16
das
lods
jnp
icebp
or
add
xor
lret
xchg
inc
clc
lcall
mov
inc
sbb
stos
xor
mov
pushf
jl
daa
mov
into
lahf
icebp
xor
ljmp
mov
adc
repz
in
outsb
sub
mul
cmp
cld
ljmp
jge
daa
xor
cmp
mov
pop
or
push
cmp
flds
imul
push
push
rcll
mov
addb
inc
dec
mov
mov
movsl
fcmovnb
sub
arpl
pop
lret
add
daa
dec
adc
insb
mov
xor
dec
mov
aaa
xchg
xchg
jns
dec
scas
loope
sub
push
jnp
subb
mov
jle
mov
sahf
cmp
mov
in
dec
dec
mov
mov
mov
add
pop
push
out
mov
shrl
stos
addr16
jne
jae
push
pop
inc
aad
xchg
ficomps
jo
mov
fucomi
push
ds
xchg
cltd
test
mov
cld
mov
mov
les
add
mov
inc
imul
in
jne
xor
cs
loopne
xor
daa
adc
fildl
xor
add
jle
fstpt
daa
adc
clc
and
stc
push
add
test
ds
adc
mov
pop
lret
xor
jne
xchg
fists
xchg
jo
shll
lods
mov
mov
inc
cltd
shlb
gs
mov
jo
dec
data16
or
jecxz
mov
push
pop
xchg
adc
test
daa
xchg
xchg
inc
adc
outsb
cmp
or
xor
mov
dec
test
mov
lret
xor
cwtl
xchg
stc
pop
mov
icebp
pop
push
jo
ss
push
sahf
ficoms
loope
repnz
pop
and
stos
or
cmpsl
xchg
adc
xchg
sbb
inc
clc
pop
mov
lret
push
int
mulb
pop
sub
pop
sub
clc
out
adc
lock
sbb
orb
std
movb
add
daa
jmp
test
mov
hlt
out
out
pusha
faddl
xor
bound
aam
xor
jb
inc
mov
xchg
cmp
inc
lahf
aam
aam
fidivrl
push
in
sub
adc
fldl2t
inc
ss
lods
mov
xor
bound
cmp
ss
sub
and
xchg
adc
sbb
sbb
outsl
jecxz
pusha
data16
arpl
push
movsl
xor
iret
pop
outsl
outsl
mov
inc
addr16
arpl
lods
out
cli
sub
sub
pusha
dec
ljmp
dec
in
sbb
lods
pop
xchg
loope
push
pop
ss
outsb
xchg
popf
into
ror
cmp
inc
mov
mov
push
cmp
hlt
ret
push
or
push
lret
mov
or
pop
addb
lret
push
sub
dec
mov
cwtl
xchg
repnz
notl
xlat
jle
cmpsl
test
mov
ljmp
dec
jle
dec
xchg
adc
pop
pop
and
stos
push
stos
adc
push
inc
mov
lock
mov
or
and
sub
mov
insl
bound
adc
es
pop
mov
xchg
inc
ficomps
stos
inc
and
jae
repnz
mov
fistpl
or
ja
mov
sbb
popl
sbb
inc
shl
or
ds
lock
addl
std
cli
ljmp
pop
or
mov
add
dec
cld
aam
jns
loopne
js
ud1
sar
sbb
push
jmp
loop
or
pushf
rcrl
sub
jo
dec
outsb
clc
jg
and
test
int3
movsb
cmp
enter
mov
insb
inc
mov
inc
nop
pusha
popa
and
inc
ljmp
daa
imul
jno
mov
movsb
mov
push
xlat
notb
jmp
push
popf
inc
cmp
outsb
enter
xchg
repz
add
insl
cli
out
das
dec
push
in
cmp
lods
push
js
or
xor
push
mov
je
push
int3
jno
mov
out
cmpl
inc
xchg
sbb
cli
std
sbb
pop
ja
loope
cmp
adc
push
mov
mov
mov
jno
mov
or
push
mov
insl
mov
and
dec
adc
iret
sahf
fsts
mov
lcall
or
jle
inc
mov
popa
adc
mov
cmp
hlt
fs
fiadds
mov
adc
movsb
jecxz
lcall
adc
in
ja
sti
push
pop
pop
xor
push
cld
dec
inc
seto
mov
and
fwait
ja
cmpsb
imul
mov
fcomp
in
adc
push
ss
lahf
mov
adc
sub
sti
jecxz
arpl
int3
mov
enter
push
lahf
and
insl
inc
push
xchg
ja
addr16
or
dec
and
loop
mov
test
inc
stos
mov
lcall
inc
dec
cmpsl
cmp
jmp
and
xchg
loopne
adc
out
in
ret
dec
stc
out
jno
xlat
jl
mov
push
cmpsl
call
mov
mov
ret
setp
mul
dec
into
mov
mov
lcall
je
xchg
lods
sub
fidivl
scas
xor
xchg
jmp
jmp
xor
add
popf
clc
jo
ret
dec
xor
jno
iret
inc
out
and
outsb
pop
inc
cmc
movsl
ss
mov
jg
aam
adc
icebp
fcoml
shrl
pushf
pop
in
dec
adc
or
sub
sti
xchg
pusha
fs
insb
or
push
xlat
out
nop
rcll
push
sbb
dec
and
rcrl
lods
xor
in
in
cmpsl
jecxz
bnd
into
dec
movsb
adc
and
pop
adc
and
hlt
push
xchg
movsl
xor
jge
daa
fimuls
push
popf
imul
xchg
push
jg
rolb
xchg
sub
repz
hlt
xchg
adc
or
mov
test
xchg
xlat
push
std
cmpsl
shll
inc
cmpsb
or
rcl
fsubrp
jmp
loope
ficompl
das
push
rorl
sbb
push
and
cmp
fmull
xor
mov
ja
push
adc
and
ljmp
push
out
add
inc
bound
xchg
aam
sbb
flds
scas
push
imul
mov
xor
or
push
lahf
dec
ret
pop
push
mov
jae
ret
dec
aaa
es
ja
inc
in
jp
push
dec
mov
pop
pushf
dec
dec
testb
test
packssdw
mov
pop
hlt
lahf
cmp
push
dec
cltd
test
jg
cltd
sarb
xadd
ja
or
inc
adc
add
bound
xor
add
sub
mov
shll
jns,pn
add
push
jae
pushf
add
mov
mov
jle
stos
mov
push
adc
repnz
call
repnz
push
dec
cli
fs
lret
clc
popa
out
std
mov
lods
sub
test
ficoms
push
je
outsb
sub
inc
cltd
mov
jbe
pop
xchg
sar
lahf
mov
mov
arpl
cwtl
rcl
ficomps
fildll
aas
repnz
cmp
out
push
push
push
xchg
adc
xchg
xor
dec
fidivl
ljmp
push
orb
ljmp
dec
and
sbb
mov
gs
sub
jae
dec
aam
cmp
xchg
xchg
shll
fwait
js
mov
ret
mov
fdivr
xchg
pushf
not
add
or
gs
pop
in
pop
xor
sub
inc
adc
sub
mov
popl
jp
and
ret
push
icebp
shll
push
sub
cli
loopne
pop
xchg
mov
fmul
in
sbbb
lcall
jmp
or
xchg
aaa
push
clc
adc
pushf
test
scas
pop
daa
dec
pop
pop
mov
xchg
xchg
js
unpcklps
fstps
test
imul
pop
ljmp
dec
mov
fcmovb
mov
out
cmpsl
ds
dec
sbb
repnz
in
test
mov
add
inc
sub
movsl
in
push
cmpsl
jbe
shrb
int3
add
shrb
or
andl
and
cmpsl
pop
or
cmp
ret
adc
xor
adc
in
xor
push
out
pop
clc
inc
xor
adc
add
push
push
fiaddl
push
push
js
dec
xor
jbe
cmpsb
jmp
jb
xchg
and
cmp
sub
imul
lods
add
iret
jo
push
mov
test
pop
xchg
sub
addl
mov
out
mov
ss
cs
dec
inc
cltd
clc
sub
inc
orl
popa
add
mov
gs
xchg
mov
dec
mov
xchg
nop
xor
scas
pop
xor
sti
cmp
mov
sbb
cs
jmp
xchg
xchg
push
int3
mov
lock
enter
movsl
mov
lcall
xor
into
mov
and
or
jne
cs
pusha
mov
jp
icebp
jns
ret
cwtl
or
out
lods
jb
xor
dec
stc
push
sarb
aas
cs
adc
sarl
sub
push
and
pop
jo
adc
sbb
je
popa
outsb
aad
cs
cmpsl
xchg
nop
icebp
push
cmpl
sub
movsb
inc
fidivrl
leave
jmp
xor
mov
insl
aas
rolb
ss
mov
add
icebp
int
repnz
dec
in
sub
xor
pop
jl
adc
cltd
jecxz
sub
movsl
cmp
mov
int3
ljmp
mov
sbb
mov
and
cmp
cmp
dec
mov
dec
outsl
imul
lcall
jns
shrl
jmp
mov
pop
xchg
movsb
cli
imul
or
jg
out
call
fcoml
inc
insb
cmpsl
sub
sub
test
test
cwtl
inc
fadds
jbe
push
jae
xchg
xchg
imul
add
out
mov
jmp
pop
lods
pop
dec
mov
out
mov
cmpsl
in
clc
mov
xchg
jg
xor
mov
xchg
imul
jno
push
sub
pop
lahf
stos
adc
push
sti
push
mov
daa
adc
cmp
loope
jb
outsb
xchg
sub
sub
mov
mov
push
mov
sbb
outsl
xor
cmp
xlat
add
bnd
sub
lret
dec
fmuls
pop
jge
repnz
jo
mov
loopne
lahf
mov
into
shll
es
dec
sar
xchg
cmpsl
cld
mov
gs
inc
dec
jp
ljmp
push
addr16
sti
push
pop
insl
and
adc
jle
mov
mov
xor
adcb
and
in
adc
ja
xor
adc
imul
pop
mov
in
sahf
out
pop
rcrl
mov
mov
cs
scas
xor
push
roll
clc
xchg
in
and
jae
inc
jne
out
pop
push
mov
push
mov
mov
fldenv
xor
push
dec
push
fsubrl
imul
or
push
rcr
fsubr
lods
repnz
test
xchg
sub
dec
ja
inc
in
xchg
inc
or
loop
cmp
xchg
pushf
lret
rol
mov
sbb
push
shrb
pop
add
aaa
jnp
cmp
jg
mov
popf
mov
adc
aad
pop
insb
jecxz
push
testb
into
push
outsl
pop
dec
pop
inc
push
pop
pop
xchg
push
sbb
loopne
jmp
xor
arpl
fs
add
inc
xchg
icebp
cmpsl
iret
and
movzwl
inc
fadd
stc
push
sub
add
mov
mov
cmpsb
pop
inc
and
sti
outsl
inc
push
repnz
fldenv
xchg
popa
cmp
xchg
inc
bound
cltd
in
mov
cli
loop
pusha
dec
mov
pushf
ljmp
ret
bound
lcall
push
or
shlb
xchg
dec
inc
xor
hlt
arpl
sub
faddl
outsb
push
pop
cmp
ja
jecxz
lock
stos
mov
lds
ds
in
xor
frstor
das
mov
push
jno
add
out
test
out
xchg
cmpsb
mov
mov
gs
dec
shlb
adc
push
clc
jmp
das
dec
enter
xlat
dec
mov
imul
xchg
pop
loope
jno,pt
movsb
jmp
add
xlat
movsb
mov
xchg
push
fcmovne
mov
mov
xchg
xchg
fists
mov
pop
mov
sbb
cltd
sub
adc
loope
mov
dec
in
out
push
js
xchg
xlat
pushf
idivl
add
mull
adc
in
pop
jo
push
xchg
dec
lcall
out
out
lret
outsb
push
imul
data16
movsl
mov
mov
jnp
mov
mov
xchg
in
cltd
push
ds
imul
sbb
jb
push
movsl
mov
mov
xlat
xorl
inc
out
adc
xchg
movsb
std
aad
or
insb
es
and
mov
sub
ja
sahf
jl
xchg
or
aaa
aaa
dec
test
pusha
and
sbb
gs
sbb
xchg
inc
aas
fiadds
repz
adc
int
jae
mov
dec
sbb
lcall
adc
or
mov
out
test
dec
test
sub
pushf
aad
mov
out
mov
out
hlt
or
jle
les
xchg
pop
shll
sub
jo
jne
out
jne
decb
shlb
loop
xchg
jae
ret
data16
pop
test
push
out
cld
mov
adc
mov
dec
xor
and
dec
mov
mulb
lock
cmp
rcll
mov
rolb
mov
stc
imul
mov
cwtl
test
out
in
xor
rcr
xor
ljmp
out
and
stos
lret
push
inc
jmp
xchg
jnp
ret
cli
or
xlat
imul
lock
and
std
movsb
xor
lahf
inc
or
icebp
sub
add
popf
test
in
fwait
jno
jmp
dec
pop
add
ss
jecxz
mov
jmp
push
mov
call
int
mov
nop
fcoms
mov
or
sub
insb
out
add
movsb
fsubrl
push
xchg
orb
push
fistps
mov
idivl
dec
in
lods
pop
jbe
add
adc
fidivs
lods
loop
and
nop
idivl
xor
out
ja
lods
sbb
xchg
into
ljmp
shrl
out
jae
fmulp
xchg
dec
sbb
lods
dec
jb
push
push
mov
ror
pop
loop
dec
sahf
inc
push
pushf
push
push
dec
dec
push
mov
lcall
cli
in
xor
or
xor
adc
js
sub
pop
mov
mov
pop
stos
jp
jecxz
jg
jecxz
xor
ret
cli
dec
ffreep
shl
loope
aad
mov
lock
aaa
movsl
xchg
inc
fsubrl
ss
cmp
stos
mov
mov
leave
mov
pop
andl
loopne
add
or
dec
aaa
jecxz
cmp
shr
fidivrl
fdivs
ds
xor
dec
insb
jg
movsb
mov
je
in
enter
xor
popl
stos
out
divl
into
aad
pop
scas
sbb
in
lods
sti
xchg
decb
jge
dec
into
or
inc
xor
imul
outsl
test
adc
jo
inc
repz
shl
xor
push
pop
int3
jecxz
ret
sub
fwait
mov
or
and
mov
xor
loop
pop
gs
pop
sub
pop
or
cmp
aaa
outsb
je
xchg
and
nop
pop
lret
sub
sti
mov
leave
repnz
inc
adc
or
lcall
idivl
inc
jp
lret
and
test
xor
cmc
or
push
out
dec
jle
pusha
js
push
xchg
dec
gs
outsl
subb
sbb
das
jl
sbb
and
push
les
cld
xchg
and
xchg
lods
pusha
mov
jmp
stos
icebp
out
lods
jns
fadds
es
inc
and
ljmp
push
mov
sar
xchg
mov
int
aas
cmp
rorb
ret
adc
xor
mov
dec
in
imul
data16
testb
jae
push
mov
lds
push
dec
bound
mov
fcmovnbe
hlt
das
push
sti
in
jmp
dec
std
mov
scas
pushl
sub
adc
out
pop
mov
sbbb
js
push
outsl
fists
adc
xchg
sbb
push
icebp
repz
loope
pop
call
cmp
fldenv
icebp
rolb
divb
andl
pop
add
pop
xchg
ror
inc
cmp
pushf
adc
jne
mov
or
imul
sub
cmp
pop
shlb
inc
out
add
xor
push
fwait
xor
call
icebp
inc
pop
xchg
out
pop
xchg
add
sub
pop
jae
push
push
loopne
les
in
stos
inc
sahf
fdivp
aas
shll
cwtl
hlt
xchg
insl
outsl
imul
sub
mov
outsl
sahf
ljmp
lahf
int
addb
test
cli
jnp
mov
fsubrp
jbe
adc
pop
mov
cmp
mov
mov
dec
lds
jns,pt
push
mov
shl
ret
pop
shr
xchg
push
int3
or
or
in
cmp
movsl
ja
ds
or
iret
aad
aam
lret
das
mov
add
sarl
or
or
sub
mov
mov
jo
cli
push
push
sub
iret
xor
call
sbb
mov
ret
push
cs
scas
aam
sbb
cmp
pop
adc
loop
fbld
idivl
sahf
sub
imul
dec
lret
mov
add
out
out
cmpsl
popa
jno
rorl
or
pushf
jns
sub
addr16
aam
sbb
arpl
nop
repnz
pop
push
sbb
dec
stos
stc
outsl
mov
cltd
sbb
and
aam
mov
mov
jecxz
inc
or
push
dec
push
fidivrl
or
sub
int3
popa
inc
push
mov
dec
stos
mov
mov
sahf
into
pop
pushw
push
lret
lahf
int
adc
repz
fsts
mov
mov
fisttps
in
nop
dec
daa
in
rcll
lahf
lods
mov
xor
arpl
sbb
mov
test
das
call
lret
pusha
jnp
adc
mov
fdiv
push
cmp
int
pop
mov
push
xor
pop
cmp
mov
push
outsb
int
data16
fldcw
push
xor
mov
fiadds
mov
cmpsb
mov
xchg
lcall
in
xchg
mov
xor
lcall
pop
fidivl
dec
mov
scas
stos
sbbl
xchg
pop
mov
xor
jmp
sahf
dec
and
inc
ds
call
cmp
clc
gs
xlat
inc
push
aam
or
push
push
jge
rol
and
jbe
xor
push
fs
int3
mov
ljmp
dec
cmp
js
dec
je
mov
or
push
adc
stos
dec
and
xor
sub
in
clc
loopne
aam
mov
pop
int3
xchg
aad
popa
lods
mov
cmp
lcall
sub
movsl
pop
pop
pop
and
fmull
pop
cmc
les
xchg
repz
pop
xchg
sub
sahf
dec
orb
mov
jmp
fcmovbe
dec
pop
movsl
jle
mov
or
push
div
cwtl
fstpl
sbb
jb
mov
xchg
imul
repnz
sarb
inc
sbb
je
xor
cs
cli
adc
adc
enter
roll
shl
sub
inc
or
stos
fdiv
jl,pt
xchg
ljmp
in
repnz
push
or
sbb
insl
push
stc
mov
mov
cmp
xchg
xchg
lcall
sti
stos
jecxz
xlat
movsb
jg
inc
out
sahf
xor
outsl
lea
cli
icebp
add
ljmp
push
enter
push
inc
pushf
hlt
iret
ljmp
pop
adc
out
push
sti
push
fimull
cltd
cmc
subb
popa
std
dec
repz
enter
mov
rorb
sub
dec
and
add
mov
dec
pop
cmp
sub
jns
ljmp
xor
jmp
out
into
ror
jae
icebp
lret
pop
clc
rolb
and
or
xchg
cmpsl
movsl
cli
aam
xchg
inc
popf
je
or
xchg
cs
enter
sub
dec
inc
outsl
pop
out
add
sti
add
xchg
push
imul
push
cld
adc
insb
mov
push
sub
call
dec
mov
lahf
add
mov
mov
rcll
popa
test
arpl
add
mov
enter
out
dec
lods
stos
adc
push
jne
and
dec
and
cld
cmp
push
and
sbb
push
xor
jnp
fisubrl
mov
pop
sahf
cwtd
pusha
xchg
pusha
mov
adc
test
and
into
rcr
mov
hlt
xchg
push
xor
xchg
mov
pushf
fwait
inc
add
repnz
xchg
cli
adc
cmp
testb
add
cs
inc
insl
dec
lds
lahf
lret
mov
stc
dec
into
mov
pusha
push
fsubrs
push
push
push
mov
ljmp
movsl
pushf
shll
jne
jp
push
ror
mov
imulb
cwtl
ret
push
and
or
fldl
stos
xchg
xor
jmp
xor
sbb
inc
or
out
xor
call
stos
dec
mov
xor
fmuls
in
fs
adc
testl
sub
stc
mov
sahf
lds
or
cld
int3
mov
repnz
xchg
fwait
aaa
repz
pop
xor
mov
ljmp
xor
jle
idivb
mov
ljmp
mov
mov
xchg
fmulp
pop
adc
stos
adc
dec
sub
inc
fcomi
stos
cs
add
mov
dec
push
xchg
stos
dec
es
mov
or
jo
cmp
cld
or
pop
mov
jp
loop
in
shrb
das
cmp
dec
scas
dec
mov
lds
cmc
rdtsc
add
jp
jp
push
mov
push
loope
mov
in
mov
cmp
fwait
test
jb
scas
sbb
xlat
fwait
xor
call
into
loope
cmp
adcl
repz
xchg
pushf
das
vpsubusb
mov
cmpsl
sbb
lahf
mov
cli
pop
mov
push
and
daa
cmp
fstl
xor
es
fimuls
jae
enter
int3
rol
cs
inc
jo
jmp
add
add
imul
stos
shll
ficompl
sbb
call
lret
ljmp
mov
inc
leave
lret
mov
push
fucomi
dec
jns
inc
jecxz
test
and
aad
add
mov
test
xchg
sub
dec
out
or
movsl
jns
sub
and
into
mov
fsubrl
pop
mov
into
imul
mov
ss
sub
dec
xor
inc
iret
inc
test
iret
xor
divb
repz
sahf
movsb
out
imul
pop
xor
loope
aam
cs
xor
mov
add
jnp
test
movsb
hlt
pop
into
inc
push
mov
fidivs
ja
lea
pop
sahf
push
jnp
or
aaa
push
xchg
clc
jne
ret
add
dec
pop
jnp
sub
cmc
sbb
fimull
test
sbb
mov
je
and
outsb
xor
push
fcomps
sbb
lea
sub
sbb
outsb
icebp
inc
xor
jbe
jle
out
xor
mov
pop
stc
shl
inc
and
mov
push
fnstenv
sbb
mov
cltd
repz
into
scas
mov
xlat
cmpsl
insb
int3
mov
insb
addr16
lret
andb
fbstp
scas
sbb
cli
inc
inc
cltd
or
out
jecxz
lds
mov
aaa
xchg
fwait
call
imul
lea
push
sti
xchg
aas
xchg
lods
cmp
mov
into
test
lcall
pushf
xchg
outsb
mov
scas
inc
bound
xchg
push
jo
mov
repz
push
xor
loope
dec
cmc
jnp
xchg
xchg
dec
dec
loopne
mov
aam
fstps
arpl
in
and
cmp
fldt
xchg
cmpsb
movsb
pop
std
cmp
lea
mov
push
xor
scas
lods
or
icebp
adc
fwait
dec
push
shl
stc
nop
repnz
and
mov
pusha
stos
cmp
js
mov
stc
push
out
fildl
pop
push
lods
jmp
pop
fisubrs
sti
loopne
je
adc
lret
imul
lds
stc
mov
pop
test
outsl
pop
ret
data16
pop
in
imul
out
pop
cmp
lret
cs
sub
and
push
mov
dec
out
jne
popa
add
xchg
and
imul
and
insb
cmp
add
sti
lock
scas
xchg
xor
aam
cltd
pop
cld
mov
bound
in
adc
mov
sbb
ret
inc
fstpt
ret
inc
faddp
les
adc
ret
leave
imul
nop
pop
mov
movsb
mov
add
scas
dec
pop
dec
shll
js
imul
mov
sahf
add
andb
ljmp
flds
adc
add
jmp
in
and
or
adc
xchg
ds
mov
cmp
fnsave
xchg
sub
imull
icebp
xor
jae
cmc
sub
fwait
jmp
push
jle
xor
cmp
fstpt
mov
xchg
ja
adc
loopne
jns
pop
dec
push
xor
push
sbb
decl
lock
push
call
out
adc
fadd
dec
std
adc
shr
and
rorb
setp
add
leave
xchg
cltd
lahf
dec
popf
cltd
and
mov
notb
adcb
rol
into
adc
pop
xor
fcomip
sti
test
cwtl
inc
ret
pop
fmuls
fadd
andb
into
xchg
adc
mov
insl
xchg
ja
and
mov
inc
xchg
lods
mov
nop
mov
imul
mov
xor
jp
or
icebp
loopne
sti
shrl
lods
pop
lret
movsb
dec
out
shlb
dec
and
dec
push
xchg
ficomps
mov
mov
iret
lock
insl
aad
mov
popf
lret
pop
inc
dec
xor
icebp
sub
lcall
xchg
or
push
adc
repz
push
ds
mov
ljmp
idivb
loop
xor
icebp
add
movsb
fildll
push
push
xchg
fbstp
sbb
cmp
mov
sub
mov
gs
dec
icebp
negl
mov
ja
out
lods
lods
mov
sub
jl
mov
sahf
std
mov
add
push
xchg
adc
or
xchg
stos
and
aas
push
jmp
xor
xchg
hlt
mov
and
push
push
dec
cmpsl
fdivl
inc
adc
push
enter
iret
decb
shll
ljmp
cmpsl
test
pop
mov
xor
jg
lahf
aas
add
leave
sbb
sti
jmp
add
in
xchg
xchg
xchg
ror
cmp
xor
mov
out
pop
xor
mov
push
fcomps
movb
mov
cmp
aam
fimuls
idivl
push
or
es
movsl
cmp
and
je
jno
mov
fstpt
cli
in
fwait
dec
outsb
ljmp
lahf
mov
cmp
dec
sbb
xor
or
ds
pop
add
add
daa
push
clc
stc
adc
idiv
jg
dec
sub
inc
popf
movsl
dec
jnp
xchg
pop
lock
or
inc
jns
out
leave
aad
adc
int
lret
inc
push
insb
push
inc
rorl
push
mov
dec
cld
mov
fisubrl
mulb
dec
lcall
push
push
les
cld
jmp
xchg
incb
lea
jnp
pop
xchg
adc
inc
sbb
test
arpl
in
popf
cmp
leave
jo
mov
pop
jmp
cmc
mov
cmp
dec
test
inc
mov
xchg
dec
push
inc
push
popa
jecxz
arpl
in
mov
xchg
pop
sti
cwtl
lods
cmp
sarb
and
xchg
mov
ja
jp
aad
loope
cmpsl
sahf
lret
sub
mov
push
and
inc
cmp
popa
lahf
pop
push
cmp
nop
into
mov
jge
inc
mov
add
es
stos
icebp
es
mov
addr16
inc
imul
arpl
leave
popa
xchg
pop
cmp
sar
and
notb
call
in
push
push
out
push
or
mov
add
dec
add
arpl
mov
or
and
testl
xor
clc
cmpsl
rcl
daa
out
pop
ljmp
cmpsb
repnz
jle
sbb
mov
push
aas
or
in
into
cmp
sub
fcmove
pop
mov
out
mov
or
mov
or
mov
sub
sub
push
push
add
arpl
jno
push
mov
stc
mov
in
aaa
dec
mov
jb
fildl
cwtl
inc
inc
insb
push
jno
popa
aam
add
cld
push
sbb
mov
fidivrl
in
int3
clc
stc
push
or
dec
jmp
lahf
out
repz
mov
gs
leave
fistpll
pusha
ret
xor
shlb
bound
rol
mov
and
push
es
sub
cmp
push
lcall
push
or
or
mov
push
cmpsl
shr
cwtl
mov
clc
xchg
mov
andb
nop
ss
inc
push
jle
pop
jb
adc
lcall
movsb
push
std
ret
mov
imul
test
out
int
mov
inc
movsl
xor
inc
add
bound
cs
dec
data16
leave
cmpb
or
xchg
lcall
sbb
adc
ret
out
dec
imul
fstp
inc
and
ljmp
cmp
cmp
add
pop
inc
shll
jb
jp
mov
cltd
sbb
add
inc
cli
rcrb
aam
ffreep
adc
and
xor
jne
imul
xor
imul
mov
fs
fstpl
pop
movsl
xchg
lods
sbbl
mov
mulb
lret
notb
daa
loope
mov
scas
aam
sub
jmp
or
adc
fs
dec
xchg
addr16
xchg
xor
mov
push
test
lahf
ja
mov
dec
repz
cli
fwait
add
add
mov
test
sub
stos
mov
cmc
fiaddl
imul
aaa
nop
ret
das
loop
nop
jno
and
dec
out
loop
and
js
adc
scas
std
xor
insl
lds
inc
mov
bound
cs
pop
mov
lock
ficompl
fcoms
icebp
lret
inc
xchg
adc
inc
adc
ljmp
loopne
ret
sti
call
out
outsl
sub
popa
xrelease
pop
aad
adc
mov
int
nop
pop
xor
out
sbb
mov
jmp
mov
pop
sbbb
sub
cmp
dec
pop
push
lods
push
pop
lcall
pop
adc
in
dec
add
in
mov
mov
shr
inc
and
inc
das
fcmovbe
gs
inc
fcomp
push
mov
ljmp
jne
mov
loopne
stc
mov
inc
inc
jecxz
pop
and
cmp
test
jmp
push
mov
dec
scas
mov
cli
popf
mov
jecxz
cli
stc
rcrb
xchg
cs
xor
push
nop
or
cmpsb
nop
into
inc
movsl
rcrl
lret
xor
dec
jle
cs
or
movsb
push
jecxz
fs
cmp
das
nop
xchg
aas
fists
push
jle
das
pop
sub
repz
lcall
mov
in
lods
ljmp
or
and
mov
jl
jne
popa
movsb
jle
sub
mov
movsl
push
fcompl
sbb
mov
sub
or
sti
inc
icebp
cltd
lcall
inc
clc
ja
xchg
pusha
add
inc
pop
jecxz
mov
mov
and
lods
mov
adc
or
pop
cli
ljmp
popl
mov
movsl
stos
mov
dec
rol
aad
ds
mov
cmovbe
jb
ljmp
add
lods
stos
addl
mov
mov
lods
ljmp
xchg
xchg
sbb
xchg
shlb
orb
test
mov
xchg
das
ret
cmp
mov
sub
imulb
xchg
shlb
adc
loop
test
lret
xor
jae
mov
xchg
sub
xlat
inc
add
xchg
dec
test
stos
add
lock
out
inc
mov
fcoms
add
std
outsl
mov
pop
sub
out
lock
add
shll
sbb
sbb
loope
lock
int3
cmp
in
add
xor
xchg
xchg
mov
bound
lret
inc
dec
cmp
mov
adc
repz
mov
cmp
insb
stos
adc
push
add
iret
dec
aad
add
push
sub
mov
jg
ror
adc
pushf
call
xor
pop
outsl
jecxz
xchg
incb
imul
lahf
shlb
dec
pop
clc
adc
sbb
xor
xchg
cltd
xchg
int3
std
pop
dec
addr16
ret
test
sarl
sub
cmp
mov
repz
mov
pop
stos
cld
pop
pop
and
pop
lock
inc
aam
mov
out
pop
addr16
out
fistps
aam
popa
cmp
cmp
das
insb
mov
xor
fildl
fcomps
ja
jb
into
jne
and
out
dec
or
arpl
dec
in
inc
xchg
fwait
pop
push
ja
mov
popf
xor
xchg
inc
dec
ss
in
mov
xchg
xchg
xor
mov
fwait
test
fbstp
xchg
jae
jb
cwtl
aas
pop
or
div
ret
shll
ficomps
push
rorl
push
mov
test
inc
pop
xchg
repnz
push
inc
add
jg
in
mov
outsl
into
jno
inc
enter
enter
adc
loop
call
sbb
xchg
xor
test
mov
lods
aam
mov
out
mov
cmpsb
xchg
filds
bound
out
lea
outsl
repnz
loope
mov
in
out
jge
mulps
sub
fsubp
and
dec
xchg
pop
movq
repnz
xchg
add
sbb
icebp
and
outsb
sub
imull
lea
out
orl
dec
cmp
fsubr
mov
or
cmp
inc
enter
jnp
test
lret
inc
mov
push
ss
or
sahf
ljmp
in
sti
xchg
jnp
popa
arpl
ja
stos
xchg
sarb
sub
xor
aaa
inc
js
popa
mov
mov
insl
ds
ficoml
dec
mov
cmp
aam
cmpsb
cmpsb
sbb
sbb
dec
add
pop
mov
pop
loop
fisubrl
fcompl
push
addr16
pop
jno
imul
sahf
out
in
mov
pushf
mov
push
ret
cmpsl
mov
cmp
jg
fs
xchg
sbb
cs
test
mov
push
xor
inc
mov
adc
push
inc
rorb
imul
in
bound
or
adcb
cmp
xchg
adc
add
fisubs
pop
pushf
mov
and
dec
add
lds
adc
jne
or
or
test
sahf
mov
mov
fsubrl
ret
out
push
push
dec
popl
sbb
ficoms
inc
sbb
loopne
fcmovb
jle
cmc
bound
sbb
dec
push
mov
daa
xor
popa
or
insl
movsl
aam
stos
push
cmp
pop
call
loope
fcoms
xor
sub
dec
xchg
nop
inc
pop
gs
pushf
mov
xchg
sub
rorl
orb
sbbl
sar
rol
mov
mov
sbb
fidivrs
fidivrs
in
shr
leave
fwait
cmp
mov
sbb
out
push
fsubl
xchg
jae
das
inc
inc
lds
insb
call
push
or
in
enter
or
rolb
pop
cmc
xchg
jne
rol
iret
mov
frstor
inc
jo
out
mov
push
adc
repz
fmul
jo
call
addr16
cmp
ja
rcl
xchg
scas
push
mov
push
mov
mov
xchg
sahf
loop
xchg
lods
mov
dec
mov
sbb
push
pop
pop
cmp
out
push
cs
sbb
popf
pop
mov
cmp
inc
dec
or
outsl
mov
adc
push
mov
jb
ss
cmp
rcl
mov
xor
out
subb
sbb
mov
mov
in
mov
xchg
outsl
sbb
dec
jnp
pop
push
addr16
push
xchg
cmp
dec
pop
fsubp
fcoms
imul
add
dec
in
mov
jae
jns
adcb
mov
clc
adc
cmp
dec
mov
push
out
mov
aas
fidivl
or
rclb
push
push
nop
and
imul
xor
xchg
vmovsd
imul
mov
adc
push
push
lret
xchg
dec
dec
call
movsl
inc
pop
mov
mov
cmp
lds
cmp
push
add
xchg
mov
xchg
adc
jo
ljmp
xchg
cmpsb
jle
ffreep
jle
movsb
popf
and
jl
mov
jmp
jb
xchg
pop
inc
movsb
hlt
lods
adc
xchg
stc
mov
inc
push
fimuls
xor
fs
push
int3
xor
cmp
stos
aaa
or
dec
bound
pop
push
out
notl
ja
aad
outsl
cmpsb
add
jb
xlat
lea
scas
lea
inc
into
gs
mov
mov
mov
dec
pop
mov
imul
into
mov
mov
out
mov
jnp
gs
sahf
movb
je
mov
jo
sub
xor
loope
jmp
jl
lock
sub
out
rol
sbb
jg
xchg
mov
aad
aad
or
xchg
sahf
nop
mov
mov
dec
loopne
and
add
pop
fbstp
test
xchg
stos
mov
mov
es
mov
push
js
xor
pop
rolb
popf
sub
dec
imul
imul
repz
and
out
sbb
push
sbb
and
stos
xchg
mov
jmp
push
jg
lds
int3
out
xchg
lds
sbb
cmp
sbb
adc
and
cmc
xchg
push
fisttps
mov
rcrl
dec
sar
jecxz
ljmp
les
cmp
mov
mov
mov
in
mov
ds
add
shll
imul
fisttps
push
ficoml
xchg
fwait
jbe
mov
cli
mov
inc
les
sub
xor
test
insl
inc
push
icebp
int
ljmp
test
cmpsb
xchg
mov
pop
cmp
repnz
popf
sub
pop
shl
mov
mov
cs
sbb
cld
hlt
out
shll
sbb
push
jmp
nop
shll
loope
cltd
jge
and
mov
push
repnz
mov
jmp
cmp
in
mov
nop
xchg
push
ror
pusha
dec
les
xlat
jbe
imul
insl
rcl
adc
inc
cld
and
cmp
xchg
mov
cmpsl
aas
lret
sub
scas
outsl
ss
mov
shlb
neg
daa
arpl
stc
jmp
fxch
jmp
pop
dec
sbb
jae
jmp
sbb
xchg
mov
push
scas
sbb
sub
and
jle
and
pop
aad
mov
out
and
mov
imul
add
nop
sbb
dec
mov
shll
cmp
insb
adc
ljmp
clc
push
mov
int3
sbb
stc
cmpsb
mov
xor
loope
stos
push
adc
and
jecxz
mov
loop
imul
fnstsw
pop
cmp
dec
data16
cmp
nop
ret
aaa
xchg
add
repz
sub
mov
push
movsl
pop
rcll
add
test
fsubs
lods
movsl
sahf
adc
jb
inc
or
mov
movsl
call
out
arpl
push
aad
adc
es
int3
out
pop
cmp
icebp
mov
aam
push
dec
mov
outsl
iret
icebp
lods
push
lahf
ds
mov
inc
mov
rcll
jmp
imul
jb
call
sbb
aam
loop
pop
pop
and
inc
push
jb
cltd
div
aas
ds
test
imul
test
or
or
dec
andb
pop
jb
xor
mov
out
pop
popa
jecxz
pusha
adc
pop
add
xchg
mov
push
sub
push
push
sbb
inc
dec
icebp
imul
jne
cmp
cmp
push
shl
inc
pop
add
in
les
cli
call
pusha
sbb
adc
sub
scas
aaa
mov
xor
inc
stc
fwait
or
in
adc
xchg
cmpsl
dec
pop
xchg
xchg
orb
push
xchg
sub
cmp
in
ds
outsl
fwait
cmp
ljmp
xchg
sbb
fstp
dec
dec
push
les
mov
movsb
test
das
xor
ljmp
push
ficomps
pop
sub
fwait
imull
loope
icebp
arpl
aam
roll
dec
or
out
push
out
push
ret
imul
stos
subb
fsub
xor
push
ljmp
jge
mov
test
and
pop
aam
push
out
in
mov
pop
fs
fsubs
cmc
mov
mov
xchg
addb
and
mov
inc
loope,pt
push
cld
jno
add
push
mov
sbb
inc
pop
xchg
xor
push
jbe
fisubrs
movsb
mov
xchg
mov
and
jl
and
mov
pop
fstpt
and
ja
xchg
insl
daa
jle
fcoml
insl
negb
or
adc
jmp
mov
jns
dec
cmpsb
push
pop
sbb
mov
sbb
orl
icebp
std
cmp
dec
cli
inc
xchg
mov
pop
cltd
test
test
cmc
icebp
outsb
xchg
lret
or
outsb
out
push
stos
sbb
pop
clc
jp
imul
sub
cli
add
rcll
ret
loope
and
xchg
rcl
inc
addr16
mov
xorb
jmp
and
push
addb
pop
mov
dec
js
mov
popf
xchg
push
xchg
sub
lret
add
xchg
fisttpl
movsl
push
sub
mov
movb
push
cli
mov
ret
iret
mov
or
out
sti
mov
int3
sbb
mov
dec
aas
iret
testb
testl
int3
lret
mov
mov
imul
div
adc
jnp
fwait
add
xchg
or
xchg
lds
pop
scas
push
pop
es
ret
js
imul
pshufw
lods
ret
test
sahf
frstor
js
ljmp
dec
aam
jb
push
test
mov
hlt
mov
xchg
je
mov
adc
lds
fisubs
pop
insb
dec
aad
jmp
pop
out
adc
mov
adc
dec
imul
loope
jbe
xchg
testl
mov
outsb
xchg
or
adc
cmp
xchg
not
fisubrl
dec
fxch
add
mov
andl
mov
dec
dec
adc
jnp
scas
icebp
xor
push
mov
jno
mov
lock
and
push
cli
mov
mov
or
add
call
aam
xchg
int
stc
in
or
leave
dec
pop
rcl
inc
or
add
popf
inc
adc
dec
push
xlat
sar
mov
enter
mov
test
ret
aad
xchg
cmp
sub
xlat
clc
pop
lret
dec
lahf
mov
and
mov
repz
rclb
and
stos
ret
inc
cmp
inc
push
sub
xchg
fwait
inc
mov
mov
insl
leavew
push
sahf
lods
insl
pop
push
xchg
pop
ja
adc
fwait
push
lcall
xchg
lcall
test
pop
mov
xchg
xor
dec
xchg
xor
adcb
dec
xlat
in
ret
fucomp
stc
push
mov
mov
mov
add
dec
shll
jb
push
fwait
test
iret
icebp
fsubrl
sub
adc
jo,pt
mov
shlb
cmp
push
xchg
or
aad
dec
or
sahf
add
lret
cmpsb
adc
pop
lahf
lcall
xlat
push
or
sub
push
jp
leave
ja
inc
adc
ficoms
xor
mov
je
sahf
pop
xor
es
das
xlat
mov
jns
dec
int
jp
iret
push
mov
pop
shl
sar
jmp
repnz
or
xlat
inc
cmc
xor
jae
dec
inc
pop
xor
movsl
or
sti
arpl
cmp
lock
xlat
pop
sub
sub
repz
mov
scas
enter
data16
sti
pop
int
pop
enter
mov
shrb
adc
loopne
js
mov
roll
mov
jle
mov
jne
push
cli
and
iret
sbb
xchg
mov
jae
adc
fldl
cmp
loopne
inc
adc
jg
ret
sbb
dec
pushl
arpl
fs
ljmp
cmp
arpl
lods
punpckhdq
push
outsb
cmpsb
xchg
dec
inc
lret
dec
addr16
xorb
sbb
int
in
ss
mov
push
fwait
sbb
inc
adcl
sbb
mov
xor
push
mov
mov
push
mov
pop
inc
or
push
adc
cmp
ret
jbe
dec
in
enter
push
rcr
adc
xchg
icebp
scas
sub
pop
mov
data16
int3
jecxz
lds
movb
jnp
dec
rclb
xor
add
dec
dec
jmp
cmp
mov
roll
xchg
out
jl
iret
pop
insl
pop
sti
fldl2e
lret
repz
jp
hlt
lea
sahf
mov
inc
je
sbb
push
fildl
lods
popf
aaa
scas
jp
lods
pusha
bound
inc
sbb
mov
fists
cmp
scas
enter
add
subb
std
cmp
out
xlat
push
loop
dec
dec
jle
inc
decl
in
adc
push
rcl
int
cmp
xchg
mov
push
loop
lcall
cmpsb
sbb
sub
jno
lds
mov
xor
stos
push
testl
pop
fldl
mov
push
push
or
inc
inc
xlat
jmp
jno
fadds
fistpl
loopne
int
push
xchg
xlat
mov
gs
jg
dec
lock
repnz
cltd
mov
rorl
sti
out
inc
jp
push
push
and
xlat
inc
loopne
pop
mul
push
mov
fbld
pop
mul
sub
adc
push
stc
lea
lret
mov
mov
loopne
sbb
pop
xchg
xor
add
inc
jmp
dec
push
inc
dec
jmp
pop
pop
sar
mov
xchg
cs
aad
xor
dec
inc
stos
xchg
sub
test
int3
xlat
fs
cli
addb
call
inc
xchg
dec
add
inc
inc
mov
pop
lret
lret
dec
daa
xor
dec
xchg
xchg
adc
movsl
dec
xchg
add
into
stos
push
push
jmp
scas
mov
xlat
xchg
pop
in
xchg
fucomp
dec
ds
inc
xor
lock
es
mov
jno
movb
movsl
jne
pop
mov
push
mov
stc
pop
popf
pop
lcall
arpl
fwait
push
mov
mov
int3
in
fcomps
xor
rdtsc
dec
sbb
sub
repnz
mov
mov
sbb
sti
xchg
pushf
sbb
lea
inc
mov
mul
aas
jge
jnp
lret
mov
xchg
popf
and
movsl
pop
sar
into
mov
dec
inc
fcoml
popa
cld
xlat
inc
pop
inc
xchg
arpl
jge
dec
xor
adc
enter
int
dec
xchg
test
out
cli
insl
jmp
cmp
testl
push
je
fildl
pop
loop
aam
fsubrp
inc
or
jle,pt
xor
mov
sbb
sbb
pop
aas
icebp
pop
or
push
xchg
push
sub
mov
bound
and
enter
repz
clc
scas
jmp
adc
mov
int3
test
adc
lods
lret
push
imul
pop
test
add
arpl
outsb
jge
pop
stc
add
fidivrs
jno
loopne
adc
mov
xchg
inc
pusha
idivl
add
bswap
cwtl
xlat
push
mov
mov
adc
pop
insl
iret
out
xchg
imul
add
xor
inc
pushf
add
xchg
in
xchg
and
pushl
inc
jge
dec
inc
pop
into
mov
mov
mov
push
fildl
mov
mov
xor
cmp
in
and
ja
arpl
push
dec
add
addr16
clc
lahf
daa
loopne
mov
mov
pop
in
imul
push
in
in
pop
inc
repnz
call
lock
or
xor
inc
lret
dec
push
lret
aad
icebp
repnz
adc
call
cs
lret
out
dec
xchg
inc
jp
stos
daa
add
jmp
add
inc
shrb
lret
mov
out
das
sub
js
and
fcmovbe
inc
xor
push
in
popa
fisubl
idivb
cmp
dec
mov
add
daa
xor
movsl
inc
cmp
cmpsl
mov
daa
xchg
dec
mov
cmpsl
adc
aas
idivb
dec
jle
lcall
sub
cli
in
stos
addr16
out
out
test
and
imul
xchg
stos
and
adc
cmc
arpl
in
mov
cltd
adc
xorb
ret
dec
push
imul
xor
mov
fistpll
or
jbe
enter
scas
jno
lea
mov
inc
push
lret
test
mov
test
imul
sbb
sub
out
sbb
loope
leave
movsb
in
out
out
xchg
xor
dec
sahf
ficoml
fidivs
or
stos
cltd
bound
leave
ret
inc
repz
repnz
insb
jl
sub
jnp
mov
fisubl
data16
add
inc
sub
pop
push
push
mov
ds
lahf
or
pop
dec
dec
call
cmp
scas
aaa
pop
pop
stos
jge
inc
mov
push
jb
xchg
hlt
mov
pushf
push
pop
les
in
mov
mov
mov
lds
je
andb
xchg
mov
dec
push
xorb
movsl
cli
mov
inc
call
inc
out
cltd
or
clc
and
push
mov
lods
leave
jbe
sub
and
mov
add
dec
adc
mov
xchg
fs
ror
or
push
ljmp
cwtl
lock
aas
sbb
fs
fmuls
lahf
xchg
mov
push
daa
inc
int3
xorb
pop
pop
dec
jmp
push
lret
repz
int
mov
push
add
cmpsl
sub
lds
mov
jmp
pop
mov
mov
imul
and
pop
mov
outsb
ljmp
mov
inc
mov
loop
push
call
sub
add
popa
dec
jle
fs
scas
or
leave
xchg
fsubs
mov
mov
jb
das
cmp
mov
les
xor
dec
lahf
add
stos
sti
mov
mov
ljmp
add
fadd
jge
lahf
inc
cmpsl
inc
scas
out
jbe
jmp
frstor
mov
add
jbe
bound
jle
push
xor
andb
xchg
in
bound
mov
lock
popf
add
sbb
or
out
out
ss
and
jo
sub
jge
int
addr16
out
lds
mov
cmc
loop
stos
es
out
mov
add
aam
cmp
stos
sti
sbbl
mov
faddl
pcmpeqw
jno
movsb
sbb
fsubl
adc
arpl
imul
xor
mov
outsl
pop
sub
push
aas
sbb
popw
mov
ret
push
pop
ret
fsubp
int3
rcll
sub
ret
adc
pop
ss
popf
jge
jns
mov
adcb
shlb
in
fistl
jl
lds
jno
pop
rolb
xor
popf
mov
ja,pn
out
add
xor
das
ds
dec
push
movsl
loope
jecxz
adc
sub
or
push
lods
ret
xor
shlb
call
inc
sub
dec
mov
mov
enter
lea
fldcw
dec
push
inc
in
sub
cmc
imul
cmpsl
mov
jg
enter
pop
sub
arpl
sarb
call
in
and
push
mov
jae
mov
in
sahf
or
insl
hlt
mov
mov
and
mov
or
loope
ret
int3
push
push
mov
imul
xor
insb
mov
arpl
sbb
push
push
stos
mov
xor
adc
jmp
popf
les
push
jl
pushf
or
cmp
in
push
fildll
mov
or
inc
outsl
push
inc
ja
jne
push
in
add
int3
mov
sbb
inc
and
push
dec
add
xchg
test
add
xor
inc
aam
push
aaa
test
mov
daa
mov
call
rcr
xchg
jmp
xor
sbb
pop
mov
loop
divb
push
das
pop
aad
insl
sbb
mov
out
fldl
mov
jbe
pop
jbe
imul
mov
repnz
pop
mov
add
addr16
xchg
jne
das
push
xor
filds
xchg
mov
shrl
sub
enter
push
inc
in
pushf
mov
nop
xchg
icebp
mov
jge
int3
inc
arpl
in
mov
inc
xchg
add
repnz
adc
cmc
hlt
rcr
fs
loop
pop
popf
imul
xchg
or
repz
into
jmp
daa
movsl
test
pop
mov
in
lret
js
mov
mov
lds
divl
xlat
cmc
add
adc
add
out
adc
mov
push
popf
rclb
pop
lcall
mov
cmc
subl
xor
movsb
bnd
push
mulb
jmp
mov
cmp
outsb
fs
lds
sbb
jnp
push
int3
enter
pushf
dec
xor
jle
xor
test
add
cmc
lea
cmp
mov
xor
scas
lock
push
lds
add
sahf
sub
dec
dec
push
adc
bnd
lods
frstor
adc
inc
mov
fisttpl
bound
xchg
add
in
adc
cmpsb
dec
adc
push
mov
jb
mov
push
cmp
mov
mov
loop
es
mov
xchg
sbb
test
push
lea
adc
cmp
lret
jmp
jne
mov
int3
cld
shrl
in
mov
jne
jbe
divl
dec
out
je
nop
push
test
repz
xor
sbb
push
dec
xchg
push
into
insl
pushf
cmp
dec
pop
into
pop
cmpb
out
pop
mov
fwait
push
rolb
pop
inc
popa
cmc
inc
mov
bound
and
lods
and
xor
xchg
iret
test
and
shrb
into
add
pop
dec
loope
xchg
mov
and
mov
aas
sbb
out
nop
repnz
outsl
mov
sar
mov
mov
pop
xchg
jb
adc
test
mov
inc
idivb
stos
cli
adc
pop
lret
pusha
jns
push
imul
dec
insb
iret
inc
test
push
lea
sub
xor
dec
scas
mov
and
pusha
pop
ret
insb
pop
cli
gs
xchg
mov
jne
bound
pop
xor
and
inc
inc
sbb
sbb
leave
jns
loop
pop
pop
fisubrs
pop
xchg
scas
lret
sub
out
sbb
popf
addr16
cmpsl
into
mov
lods
mov
loopne
fstl
and
mov
jne
fldcw
out
mov
push
ficompl
enter
imul
rcll
dec
stos
push
mov
jb
mov
lret
sti
das
mov
mulb
call
dec
mov
or
and
fisubl
xor
fdivrl
lea
in
insl
mov
adc
das
xor
pop
mov
cmp
f2xm1
push
sub
pop
call
mov
stc
jecxz
enter
adc
stos
jnp
mov
in
lahf
mov
push
mov
dec
ja
xchg
pop
adc
mov
mov
jmp
and
iret
testl
aas
mov
xor
adc
jg
movsb
push
push
or
jmp
mov
mov
sub
push
xchg
in
sbb
das
sahf
xchg
sub
scas
xchg
shr
mov
dec
popa
pushl
outsl
xchg
jmp
iret
lea
imul
inc
outsb
mov
lret
popa
dec
adc
mov
std
out
in
lret
pop
fwait
lds
and
mov
mov
push
xchg
xor
lock
fmuls
lea
xchg
aas
adc
lcall
hlt
jp
dec
mov
mov
and
jbe
jnp
fsubrl
dec
mov
jp
testb
cmpsl
xchg
sub
test
jnp
add
repnz
jbe
gs
jno
xor
mov
rcl
cmp
loope
xor
hlt
mov
cmpsb
icebp
sub
or
cvtps2pd
jle
rcrb
stos
loope
out
inc
insb
sarb
or
and
jnp
adc
mov
push
lret
outsb
or
popf
cmp
cmp
jno
sub
js
js
cltd
adc
sbb
pushf
in
inc
lret
jns
mov
cmp
inc
sbb
xchg
pop
or
das
pushf
gs
dec
adc
sbb
std
rcrb
mov
js
mov
ljmp
testl
fcompl
orl
jge
adc
cmc
mov
fcoms
fldt
js
fsubr
cmc
xchg
push
fs
or
xor
mov
sbb
pop
inc
aam
adc
inc
sbb
movsb
jo
adc
leave
sbb
call
cmc
push
pop
mov
outsl
lock
push
daa
jno
aam
push
jmp
cmp
adc
adc
mov
xor
fwait
movl
cmp
inc
shr
loopne
and
xchg
lods
leave
int3
stc
rclb
or
cmpsl
adc
jne
xchg
xchg
xchg
das
dec
testl
pushf
add
negl
stos
pushf
cmp
fwait
idivb
rcr
inc
cmp
retw
out
call
icebp
loope
and
loopne
pop
adc
out
mov
ret
das
pop
fs
cmp
cld
insb
stos
inc
mov
pop
push
aaa
xchg
shlb
das
ret
xchg
loopne
shlb
ljmp
xor
xchg
cmpsl
das
aaa
pop
jecxz
adc
push
push
hlt
cltd
outsb
sti
movb
add
jg
mov
pop
je
or
in
jg
outsb
cmc
movd
or
sbb
mov
jmp
lahf
jnp
cmpsl
mov
or
loop
pop
int
pop
jl
adc
dec
mov
or
stos
sbb
in
pop
orb
xor
movsl
cmp
cmp
fcomps
mov
and
jb
and
inc
lahf
mov
pop
sahf
sbb
scas
xchg
enter
fisubs
aaa
lds
sbb
loopne
daa
push
dec
mov
pop
les
xchg
or
sbb
roll
shll
jmp
sbb
mov
mov
daa
sahf
leave
lea
aas
cmp
decl
mov
xchg
sti
sbb
in
push
clc
inc
test
js
shll
mov
aaa
cmp
push
pusha
push
xchg
add
jp
out
int
xor
cmpsb
cltd
pushl
out
jle
pop
test
je
sbb
je
cmpsb
jl
sarl
out
pmaddwd
pop
add
mov
mov
pop
xchg
sbb
or
xchg
test
movsw
xor
cmc
popa
push
inc
fisubs
sub
inc
mov
add
jno
adc
xchg
daa
dec
aas
dec
push
sets
cmp
xchg
popf
or
fwait
sbb
xchg
mov
jno
mov
sti
dec
aaa
les
jmp
sbb
add
cltd
mov
sub
jbe
test
ljmp
xchg
mov
imul
adc
adc
mov
cld
ss
int
jns
xchg
lahf
adc
add
dec
imul
sbb
les
jns
and
or
ficoml
shl
inc
sub
std
sub
xor
stc
pop
push
mov
les
mov
sub
pop
or
add
stos
mov
jmp
sub
and
test
xchg
cli
sti
ficomps
movsb
daa
loope
pop
ret
es
xor
lods
sbb
lcall
stc
fistl
in
sbb
das
out
sub
out
adc
push
pop
test
and
lock
jbe
fldcw
mov
lea
jecxz
ljmp
or
enter
dec
jb
leave
jmp
or
dec
pop
aam
in
fwait
idivl
movsl
xor
inc
mov
icebp
inc
sub
dec
into
dec
inc
sbb
dec
call
das
mov
xchg
ljmp
rcrb
fsubr
dec
shll
and
pop
lcall
out
in
pop
enter
xchg
sbb
dec
lret
cmpsb
add
xor
xchg
push
add
jmp
xor
loop
pop
rclb
xor
test
push
pop
lcall
rcr
mov
in
fstps
dec
aaa
sbb
rcl
pusha
adc
xor
into
mov
in
dec
loope
jl
dec
push
inc
and
sub
cwtl
xor
lea
out
repz
jae
and
adc
sub
mov
jle
shlb
js
js
lods
ss
jb
cs
clc
inc
fimuls
repz
dec
test
ss
xor
test
sub
sub
test
cli
mov
in
ljmp
pop
dec
clc
std
push
negl
rcr
adc
sub
cmp
mov
add
mov
cmpsl
xchg
repz
or
inc
es
mov
sar
push
mov
dec
lahf
add
lods
xchg
fldt
mov
int
nop
repnz
dec
xor
inc
mov
push
xor
sbb
sbb
pop
mov
xlat
and
cli
cs
icebp
cmp
ljmp
lahf
loope
inc
ret
xchg
fistpll
dec
xchg
mov
je
scas
subl
push
mov
popf
clc
push
loop
sub
jnp
and
push
jne
adc
pop
push
jg
sbb
fs
ds
jl
cmp
xor
into
and
inc
jge
push
adc
jle
xchg
cld
mul
mov
icebp
fwait
call
lea
sub
arpl
and
lcall
nop
and
fs
cmp
lea
or
out
inc
dec
add
jp
inc
pop
mov
clc
jae
pop
push
imul
inc
inc
sti
xchg
sbb
mov
mov
jecxz
xchg
jecxz
jbe
jnp
xor
outsb
cltd
lds
clc
popf
cmovb
cli
jae
rcrl
dec
fs
xor
aas
sub
frstor
sub
lahf
and
sub
pand
popf
gs
out
subb
xlat
mov
iret
sub
mov
mov
mov
lret
ds
movsb
cs
sahf
xor
jo
dec
mov
jl
mov
sbb
jae
cmp
mov
mov
pop
imul
pop
xchg
inc
sbb
jl
arpl
in
mov
or
dec
push
lds
gs
xor
leave
test
mov
inc
js
adc
dec
xchg
adc
aas
mov
add
cli
dec
ds
push
fs
push
repz
fisubrl
ds
push
rorl
and
xchg
mov
aad
dec
adc
push
cs
sub
dec
xor
stos
jne
pop
scas
xchg
dec
iret
cmc
pop
xor
int
push
push
fdiv
dec
loopne
fcmovu
mov
pop
push
mov
inc
popf
add
sub
push
dec
mov
sub
fcmovne
xchg
les
jns
daa
push
add
xor
jbe
cmp
sbb
stos
stos
out
arpl
and
jecxz
push
int3
pop
or
in
idivl
arpl
ss
shlb
rcrl
out
inc
xlat
les
mov
and
dec
jmp
mov
fiaddl
push
jecxz
jmp
inc
jb
xchg
lret
cli
pop
pop
or
xor
bound
mov
bound
mov
cld
push
lret
pop
push
mov
dec
add
pop
test
push
outsb
enter
xchg
aaa
push
movsb
lret
int
sbbb
testb
inc
gs
sub
imul
dec
xchg
in
fiadds
scas
leave
ficoml
adc
sti
adc
jbe
xor
pushf
fstpt
xlat
lahf
lods
mov
pusha
fs
jmp
xchg
xor
negb
cmpsb
jle
push
adc
rcr
add
adc
ljmp
stc
xor
movb
xor
loope
add
dec
loopne
cmpsl
ljmp
sbb
inc
cmp
pop
cmp
jno
jle
insb
fildll
lret
imul
orb
and
add
test
push
ss
gs
call
fwait
lahf
xchg
es
test
gs
test
ret
lret
pop
mov
iret
test
pop
popa
pop
or
adc
pop
cli
jne
cmp
lock
inc
sbb
fistpll
enter
test
dec
xchg
in
es
push
jg
cmp
xchg
sub
inc
push
xor
push
pusha
outsl
fucomip
mov
testl
fidivl
imul
sahf
pop
es
cltd
pop
lret
jb
rorb
adc
aas
add
stos
sti
ljmp
push
xchg
or
mov
int3
mov
stos
js
popa
inc
lret
fwait
dec
mov
sub
outsb
jae
lds
or
out
jns
int
push
or
mov
divb
mov
push
cmpsl
cmp
cmp
push
cld
enter
dec
sarl
mov
or
sbb
xchg
adc
mov
rcr
xchg
add
dec
jb
sbb
nop
stc
inc
dec
jmp
fs
loop
daa
subl
ljmp
enter
aaa
add
xchg
mov
fbld
push
ljmp
in
test
cli
sbb
jp
es
shlb
popa
cs
and
repnz
pop
cmpsb
arpl
scas
inc
dec
daa
pop
popf
arpl
jmp
jmp
cli
lods
mov
jno
push
arpl
arpl
movsb
add
fistpll
test
dec
icebp
cmp
out
push
xchg
popl
arpl
mov
das
das
push
ljmp
into
cmp
mov
add
cltd
out
sub
jns
add
push
icebp
je
xchg
or
shlb
dec
pop
imul
aam
dec
or
in
shl
push
xchg
movsl
xor
call
in
test
push
shlb
pop
fidivrl
push
inc
ficoml
inc
aaa
push
jae
dec
jmp
sbb
xchg
push
or
add
bound
mov
popa
shlb
es
in
cmp
sub
jns
in
test
rcrb
sub
out
shl
mov
pop
push
mov
cmpsb
adc
add
pop
shl
or
dec
mov
dec
xchg
cmp
jbe
cmc
inc
mov
std
fwait
push
clc
xor
push
jl
rcrb
mov
dec
sbb
add
dec
adc
testb
add
cmp
test
xor
ret
inc
cmpsl
lods
insb
jo
inc
jg
cwtl
adc
icebp
jmp
and
xchg
fldt
add
iret
repnz
push
mov
inc
test
pop
test
cwtl
mov
sbbb
lock
inc
add
xchg
shufps
mov
mov
ss
jecxz
arpl
inc
mov
sbb
lea
sub
inc
inc
pop
movsl
xchg
dec
pop
daa
lea
inc
inc
sbb
push
outsl
mov
cli
out
lods
movsl
mov
outsl
sub
pop
das
or
ds
fidivl
dec
rorb
arpl
divb
xor
outsb
cmp
aaa
ljmp
adc
leave
stc
sub
sbbb
and
pop
push
stc
fdiv
div
sahf
clc
and
jge
test
into
jne,pt
les
out
mov
outsb
out
inc
lcall
cmp
xchg
rcl
lret
daa
xchg
scas
add
xchg
sbb
or
repz
sarl
dec
iret
inc
and
inc
mov
aad
dec
nop
jbe
push
icebp
lods
jns
cltd
inc
or
add
int3
mov
adc
test
in
arpl
push
jmp
sahf
into
test
dec
inc
test
adcl
das
or
cmp
mov
sub
xchg
sti
jo
dec
pop
mov
sti
inc
and
jge
xchg
lret
mov
and
mov
fwait
pop
int3
dec
leave
int
arpl
dec
adc
rorb
jbe
bound
je
xchg
push
xor
mull
andl
or
xchg
aam
out
aas
fistl
js
dec
and
ror
and
sub
sar
jp
movsb
clc
std
in
xchg
jg
or
sti
mov
xor
mov
add
ficoms
test
mov
andb
xchg
dec
cli
movsl
jae
adc
dec
or
inc
push
adc
jb
push
dec
inc
jns
mov
ficompl
jne
cmpsl
push
pop
rolb
pop
mov
mov
add
repz
sbb
iret
inc
inc
sti
insb
jmp
dec
lods
push
pop
push
pop
inc
push
loopne
fcoms
jg
insb
xchg
lds
pop
and
xchg
and
ret
iret
loopne
lea
push
cli
adc
pop
lea
push
movsb
lret
sahf
ljmp
es
xor
mov
int
mov
jle
fwait
test
mov
pop
cmpsb
addl
in
outsl
rorb
or
in
in
rcll
gs
aas
add
or
add
cld
xor
mov
call
pop
rcl
sub
nop
sbb
test
xchg
mov
aam
test
xor
ss
sti
cmc
and
shrb
js
leave
inc
rorb
push
xchg
imulb
or
pop
in
xchg
inc
inc
jne
std
mov
out
jbe
lahf
stc
mov
aad
jnp
mov
jl
dec
dec
push
jg
fimull
hlt
ret
insb
dec
int3
dec
push
push
xchg
dec
mov
test
mov
enter
sarl
push
test
clc
jbe
push
xchg
cmp
fistpll
add
cmpsb
xchg
cmp
ficoms
dec
daa
nop
fidivrl
push
outsl
sub
lret
push
mov
rcll
dec
push
pop
sub
mov
shll
out
push
push
xor
into
xor
adc
sub
mov
or
push
mov
fisubs
pop
jns
jne
ja
scas
cld
pop
outsl
aas
jb
or
scas
mov
dec
fs
jb
mov
pop
sub
es
inc
clc
js
inc
add
data16
lea
aad
sub
cmp
test
inc
add
adc
sbbl
dec
mov
push
cmp
jns
dec
lods
mov
cmp
jle
mov
aas
pushf
hlt
xor
into
mov
cmpsl
data16
mov
imul
jmp
fwait
jmp
icebp
or
xor
jne
inc
in
cmp
jl
mov
push
or
cmp
jo
je
fwait
cmpsl
and
mov
xchg
fidivrs
scas
adc
pusha
addr16
pusha
fnstenv
and
push
repz
into
xor
dec
movsl
dec
dec
dec
cmc
repz
popf
pop
inc
pop
into
xlat
push
jp
ja
cwtl
sub
ljmp
iret
mull
in
inc
vcvtsd2si
mov
push
or
or
movsb
mov
cmpsl
leave
out
mov
cmp
jle
sbb
rolb
ljmp
repnz
popa
stos
mov
pushf
fucomp
movsl
lahf
xchg
adc
dec
cs
xchg
lahf
icebp
jmp
mov
leave
pushf
aam
out
ficoml
iret
gs
out
iret
mov
sbb
in
leave
push
xchg
ds
mov
xchg
push
fsubs
mov
and
xchg
repz
xchg
cmpsb
mov
mov
or
es
cs
inc
shlb
loopne
je
jge
xchg
mov
push
sbb
in
ljmp
mov
inc
cld
dec
jnp
lods
stc
into
and
inc
insb
pop
dec
push
jne
sbb
adc
clc
sbb
jae
call
or
out
adc
int3
pop
es
sub
daa
aam
fmull
or
mov
mov
imul
shrl
lods
jmp
not
stc
cwtl
inc
lahf
aaa
xor
lret
or
andl
mov
cs
mov
addr16
test
jp
jmp
nop
inc
jecxz
mov
nop
cmpsb
int3
inc
sarl
movsl
xchg
dec
xor
fnsave
and
imul
sbb
aas
add
movsl
sub
clc
jae
aad
lcall
pop
shrd
cmovns
lret
cmpsl
inc
push
mov
pop
lret
test
cmpsl
lcall
faddl
daa
mov
mov
daa
shrb
pop
out
adc
in
mov
into
insl
lahf
push
inc
cmpsl
add
mov
mov
xor
cmp
mov
sub
out
outsb
ror
sbb
mov
mov
es
mov
shll
fbld
arpl
add
dec
inc
lcall
test
cmp
mov
stos
das
add
stos
fwait
mov
mov
cmc
jne
iret
sbb
sub
movsb
fdivs
inc
pop
sbb
test
dec
mov
test
add
das
or
push
adc
ja
inc
push
divl
xor
dec
cli
xor
and
outsb
out
pop
sahf
dec
fcmovnu
pop
sub
mov
add
cmp
icebp
xchg
popl
subl
adc
xor
loop
mov
add
and
adcb
subb
cmc
mov
sbb
inc
aad
xchg
jl
or
imul
mov
push
ret
inc
fs
test
testl
cmpb
js
mov
loop
popf
mov
sub
cmp
push
scas
mov
mov
xchg
in
outsl
int
clc
stos
adc
pop
test
inc
pop
sbb
xchg
movsl
aas
stc
and
xor
sbb
cmp
test
mov
push
push
stos
xchg
pop
xor
insb
and
dec
or
xor
dec
out
rol
cmp
cmp
rcrl
dec
out
lea
loope
movsl
enter
xchg
and
mov
push
mov
daa
cs
nop
testb
inc
pop
jp
jecxz
inc
mov
inc
popf
testb
aas
inc
mov
aaa
fadd
pop
xchg
sti
dec
mov
int3
add
pop
cli
orl
mov
test
arpl
fisubrl
jle
lahf
adc
push
pop
inc
frstor
std
or
xor
or
sub
cmp
or
das
pop
sbb
loop
and
cltd
sti
pop
inc
adc
push
rorl
addr16
cmp
xchg
xor
jbe
icebp
test
rolb
xchg
push
aam
in
xlat
jae
in
mov
push
push
aas
out
out
push
loope
cmp
scas
leave
push
pushl
add
out
dec
ds
or
scas
sub
aad
pushf
or
jg
and
je
sub
fldenv
sahf
hlt
xchg
mov
add
xor
fsubr
enter
pop
in
mov
xor
xor
dec
jae
push
mov
pop
sbb
arpl
inc
and
cmp
aas
cld
pushf
xor
mov
pop
enter
and
fildll
xor
or
pop
jl
or
or
inc
out
xor
sahf
xchg
xlat
push
dec
jl
shrl
fwait
mov
divl
es
pop
and
pop
cs
int3
scas
jmp
jmp
je
mov
sub
xor
push
insb
xchg
mov
sarl
or
into
lds
roll
mov
aaa
ret
add
fimuls
jecxz
dec
lcall
dec
rclb
mov
sub
jl
push
mov
dec
ljmp
imul
jns
shr
ja
fldcw
movsb
cld
push
xor
xchg
mov
jnp
jae
nop
add
dec
adc
frstor
fdiv
aad
jmp
and
inc
cmp
imul
int
jecxz
outsl
sub
popa
in
cmpsl
icebp
add
mov
stos
adc
in
ret
dec
mov
xchg
xchg
inc
leave
clc
mov
cmpl
aaa
mov
or
ljmp
out
mov
inc
adc
js
pop
mov
cmp
ljmp
fst
push
jle
imul
scas
aam
dec
add
lcall
sbb
or
or
push
stos
or
testb
cmc
and
jmp
stc
cwtl
data16
dec
fsub
xchg
dec
add
push
push
popf
and
and
pop
popf
pop
sbb
cmp
mull
pop
enter
lret
into
mov
lret
jnp
inc
loop
jl
imul
ficoms
roll
call
dec
popf
pop
movl
fsubrp
cmc
mov
push
dec
or
mov
or
mov
mov
xchg
sbb
or
cmpsb
addr16
iret
adc
lods
push
in
and
adc
mov
repnz
test
xlat
mov
mov
call
inc
ret
leave
adcb
rol
sub
sarl
push
lcall
xor
mov
movsl
inc
sarl
add
jmp
adc
pop
or
jecxz
cli
inc
push
addr16
rolb
and
jg
jmp
xchg
jecxz
add
dec
ret
push
and
fld
push
in
cmc
int3
adc
xor
icebp
fidivrl
pop
or
pop
cmp
push
sbb
fisttpll
jmp
push
dec
push
ret
mov
rcr
xor
mov
or
xlat
call
loope
and
mov
push
fwait
js
hlt
leave
cltd
push
jb
shl
mov
cmc
dec
xchg
jb
jnp
lcall
jecxz
ret
dec
mov
mov
push
loope
lcall
punpcklwd
mov
jle
xchg
loop
sbb
in
ret
jmp
fcomi
jns
add
xor
ljmp
aam
movsl
je
add
mov
and
test
pop
into
fnstenv
sbb
stos
test
sbb
aam
loopne
ljmp
das
adc
sub
in
call
loopne
adc
cmc
cmpsb
mov
sti
scas
mov
aad
icebp
int
lea
jb
insb
push
push
shl
and
inc
push
mov
out
fwait
push
mov
push
cs
test
mov
jo
lahf
jg
icebp
push
dec
xor
push
lea
pop
push
iret
or
fisubs
es
xchg
cmp
push
fdiv
mov
std
aam
out
mov
push
jmp
adc
mov
pop
mov
jg
xchg
dec
in
icebp
lcall
pop
mov
inc
jne
movsb
ljmp
shll
gs
aam
cmp
in
loop
push
int
ljmp
or
and
bound
cmc
push
repnz
push
popf
pusha
xchg
leave
outsb
je
or
jmp
scas
ss
adc
outsb
loope
adc
inc
cltd
jmp
xchg
adcb
imul
mov
push
iret
jne
push
imul
stc
shlb
cmpsl
and
jno
mov
jb
adc
lods
movl
add
notl
jns
sbb
pop
pusha
das
inc
lahf
stc
mov
xor
dec
rorb
sti
fildl
fcmovu
xor
fbstp
adc
add
push
lahf
int
push
hlt
lods
inc
inc
push
int3
out
push
lock
arpl
cld
cld
js
mov
adc
imulb
outsb
out
mov
jmp
sahf
int
mov
in
inc
push
insb
out
dec
std
shll
js
mov
xor
jbe
fwait
pop
sbb
bound
movsb
pop
adc
testb
ret
xchg
std
rcl
movsl
insb
lahf
iret
inc
dec
pop
das
mov
insl
cld
inc
push
stos
add
mov
loopne
cld
and
dec
aas
scas
mov
sub
adcl
push
in
pop
adc
imulb
dec
lock
cmp
int
xchg
int
int
mov
mov
sub
ds
cltd
mov
in
dec
iret
mov
cmpsb
std
xchg
mull
loopne
add
cwtl
in
and
dec
push
mov
push
cmp
fs
mov
enter
pusha
mov
jmp
inc
je
leave
xchg
xchg
push
test
out
dec
shlb
movsl
mul
lcall
rcr
dec
lock
inc
repnz
jmp
ljmp
sub
cmp
and
into
push
cmp
hlt
pop
cmpsl
bound
push
cmpsb
pop
test
sub
enter
rcrl
xchg
lcall
rclb
mov
jecxz
sub
out
leave
std
pop
or
or
sbb
pusha
lea
xchg
mov
mov
pop
adc
push
in
mov
xchg
stos
add
scas
dec
push
int3
jmp
rep
cmp
xchg
cli
ret
sar
fimuls
pop
jo
cli
data16
mov
mov
xor
loopne
cld
movsb
shlb
push
int
ja
enter
mov
xor
xor
and
adcl
pop
movsl
pop
adc
testl
ljmp
arpl
and
ljmp
leave
outsb
inc
sbb
mov
testb
pop
jae
dec
push
or
push
mov
lahf
jmp
mov
mov
inc
mov
cmc
push
mov
adc
int3
rcl
stc
mov
mov
sbb
jnp
mov
xchg
test
adcl
pop
pop
jge
xchg
mov
pop
xchg
pop
loopne
cmp
jle
mov
push
dec
dec
jge
call
gs
cltd
inc
push
dec
insl
push
mov
push
push
lcall
divl
das
dec
sahf
push
or
adc
clc
test
adc
jns
mov
dec
nop
mov
fnstenv
inc
adc
int3
sub
jne
dec
arpl
cld
fsub
add
jmp
sbb
fldt
ss
adc
jno
adc
xchg
ficoml
jmp
lret
push
cmc
popa
bnd
jecxz
data16
cmp
out
xchg
mov
mov
out
je,pn
xchg
ror
xor
pop
push
mov
pop
outsb
aas
xchg
sub
shll
icebp
dec
cli
or
pop
imul
mov
add
jle
pushf
mov
or
inc
xor
shlb
xor
arpl
enter
pmaxub
sub
cmc
mov
pop
lods
in
imul
push
jo
mov
cmpsl
movsl
testl
dec
inc
sbb
movsb
jmp
mov
stos
lret
or
or
aad
loope
or
jnp,pn
mov
jp
clc
jecxz
outsb
jmp
daa
mov
ljmp
mov
leave
push
add
mov
mov
hlt
mov
inc
fistl
sti
stos
cmp
outsl
imul
loopne
adc
fdivs
mov
fwait
leave
or
jge
aam
sti
xchg
cli
mov
sti
je
sahf
pop
std
shrb
fsubs
jecxz
and
imul
sti
lret
ss
pop
pushf
adc
mov
xchg
sbb
jae
cs
mov
sbb
adc
lea
add
mov
fnsave
xchg
mov
cmp
or
ret
cmp
sbb
popf
lods
xor
push
mov
fwait
aaa
movsl
adc
movsb
jnp
mov
lcall
xor
push
jge
outsl
aam
insl
ds
inc
fimull
decl
test
inc
inc
adc
aam
ljmp
loope
rolb
sti
repz
std
mov
mov
and
jns
out
cmp
mov
add
mov
jbe
enter
or
repnz
mov
push
ss
ss
push
rcrl
or
push
fcoms
mov
dec
fisubrs
jmp
xchg
loop
iret
xor
sbb
pop
aas
pop
jp
mov
mov
pop
dec
push
lret
into
inc
shll
jb
push
test
mov
inc
pop
xor
ret
dec
lret
mov
movsl
out
jp
in
cli
fisttpl
imul
cmp
pusha
jecxz
add
push
and
fstpt
pop
cmpsb
jns
pop
outsl
push
push
aam
stos
andl
mov
insb
inc
xor
rcrl
dec
ror
mov
lea
movsl
lds
jae
adc
into
xchg
sbb
loopne
sub
sbb
lds
addr16
xchg
ds
mov
sub
adc
ficoml
mov
jle
int
ja
enter
pusha
adc
inc
cmpsb
imul
scas
sbb
push
jnp
ljmp
outsb
cmp
iret
sbb
int3
xchg
inc
pop
push
inc
loope
ljmp
xchg
test
add
dec
or
cmp
fidivs
inc
cs
mov
xor
cmpsb
push
test
fxch
adc
sbb
xchg
jle
cmp
xchg
out
repnz
ds
sbb
ljmp
dec
int
inc
repnz
sbb
jnp
mov
ficompl
das
int3
js
push
enter
pop
adc
outsl
xlat
xor
std
dec
adc
insb
fstpl
jno
cli
arpl
xlat
mov
xchg
xor
test
nop
insl
rcrb
pusha
push
clc
dec
sbb
dec
dec
xchg
pop
aas
cs
imulb
movb
sub
in
arpl
pop
add
jp
fidivrs
mov
add
or
cltd
push
cmp
sub
ret
xchg
lret
in
mov
jmp
lret
xchg
jg
or
lret
and
pop
aas
js
xchg
cmp
push
cmpsb
dec
sti
jmp
jbe
idivb
lock
imul
cmp
push
mov
rolb
aaa
les
out
sahf
pusha
mov
jg
mov
push
clc
imul
lcall
or
adc
addr16
xor
data16
iret
repz
enter
ret
inc
adc
cmp
xor
pushf
data16
mov
push
mov
mov
mov
jge
sbb
test
data16
push
push
push
test
fs
push
cwtl
mov
out
xchg
data16
inc
inc
pop
movsl
fildl
cmp
movsb
xlat
dec
loop
and
pop
adc
sahf
inc
insl
rclb
sub
int3
adc
xor
dec
addr16
mov
addr16
mov
sub
jp
xor
cwtl
xlat
in
sbb
mov
lret
xchg
or
jge
xor
jo
xchg
repnz
and
cmpsb
cmpl
lds
lcall
push
scas
mov
sahf
dec
arpl
pop
pop
rcr
imulb
mov
sahf
mov
mov
jp
mov
or
mov
cmpsl
mov
adc
dec
and
xor
shr
jbe
cmp
and
sub
aad
enter
sub
mov
fst
lods
in
mov
push
stos
outsl
ds
icebp
fs
das
cmp
loope
push
sarl
push
xor
push
nop
push
out
loop
xor
in
mov
dec
clc
add
shrl
cmp
push
popa
pushaw
inc
bound
imul
dec
xchg
pop
lcall
mov
aas
sub
stos
mov
adc
xchg
in
or
mov
imul
dec
jno
bound
stc
mov
addb
repnz
popf
inc
fdivrl
cmp
mov
cmp
adcb
sti
stc
aas
lods
movsb
rcll
sbb
into
xchg
lea
adc
pop
xlat
adc
stos
aas
xor
cmp
mov
cmp
in
popf
mov
stc
jns
mov
jp
xchg
xor
inc
ret
iret
push
sub
sahf
push
sub
inc
and
push
lds
pushf
dec
test
and
rcrb
fbstp
mov
outsb
cmp
loope
jo
adc
mov
pop
dec
jno
rcrb
js
jne
push
jmp
fidivrl
movsl
cld
push
or
pop
ret
iret
int
cwtl
test
fimuls
pop
xchg
jmp
inc
lods
xchg
cmp
add
imul
jno
aad
mov
xchg
or
lock
mov
push
int
loope
in
shll
outsl
jmp
mov
insb
sub
loopne
fcmovnu
xchg
push
xor
jae
cmp
jo
mov
out
fdivrl
stos
add
pop
xchg
mov
mov
push
dec
lret
outsb
pop
push
enter
aad
in
and
jb
jmp
jne
inc
sub
pop
jmp
mov
call
in
push
jmp
mov
mov
js
cmc
mov
cli
dec
push
push
js
jmp
dec
push
aaa
movsb
dec
int3
aas
pop
sub
sbb
clc
and
inc
lea
data16
jecxz
inc
pop
movsb
bound
push
call
xor
test
push
jmp
cs
push
mov
jbe
loopne
call
cs
imulb
or
mov
leave
mov
xchg
outsb
dec
lock
ljmp
sbb
bound
push
mov
inc
inc
divb
mov
mov
call
xor
pop
movsl
and
cs
and
push
mov
push
cmp
push
pop
or
orl
and
mov
ljmp
sub
sahf
mov
pop
sub
fdiv
imul
bound
add
lods
push
sub
das
int
sub
sahf
push
push
cmpsb
pop
test
jo
mov
xchg
mov
push
jg
in
and
sbb
sbb
lods
xlat
cmp
idiv
dec
jg
dec
mov
xor
ds
pop
aaa
sub
mov
stos
inc
mov
mov
imul
and
les
mov
aad
mov
rcll
inc
and
andnps
cmp
or
int
cmp
jb
mov
inc
imul
arpl
pop
pop
scas
xchg
jne
xchg
mov
jp
mov
lods
push
ss
or
icebp
pop
fildl
adc
jne
hlt
arpl
mov
cld
scas
or
orl
add
lret
or
push
adc
outsb
pushf
ljmp
cmpsl
roll
mov
mov
ljmp
fwait
pusha
mov
jno
mov
lret
xorb
inc
or
loop
pop
dec
jns
pop
imul
push
jl
dec
xchg
aad
jbe
cmpsl
jle
mov
sub
ja
test
jbe
push
dec
jb
inc
push
cmpsb
xchg
test
test
push
or
xchg
ficoml
xchg
fbstp
xchg
xor
cltd
aad
xor
add
je
inc
jl
repz
test
pop
xchg
sub
xchg
les
adc
cld
mov
xor
fsub
lods
mov
or
cmp
mov
scas
mov
mov
dec
lods
lds
xchg
jp
pushf
ljmp
cmpsl
imul
adc
out
push
test
leave
lcall
push
lahf
push
jmp
cmpb
outsb
cmp
pop
adc
jecxz
xchg
pop
xchg
mov
lret
cld
mov
xor
mov
aas
xchg
hlt
jb
pusha
cmp
push
mov
test
mov
mov
mov
xor
sbb
inc
std
mov
inc
cmp
aam
xchg
jns
dec
repnz
in
dec
jno
cli
lret
imul
loop
fbld
negb
xchg
fs
int
pop
bound
mov
clc
cmpsl
add
xchg
jae
stc
lahf
mov
shrl
ret
xchg
mov
add
js
ljmp
loopne
stc
leave
ficoml
imul
test
jne
push
clc
lods
inc
add
test
mov
mov
cmp
jp
imul
imul
movsl
xchg
sahf
int
mov
in
fwait
push
lods
inc
je
cltd
test
xchg
inc
outsl
xchg
stos
inc
xchg
lock
jno
loope
aas
inc
fldenv
imul
push
dec
daa
mov
jbe
bound
xor
inc
xor
clc
in
inc
in
test
data16
test
test
bound
xor
xor
push
xor
lock
pop
test
out
fcmovu
ret
xchg
flds
push
test
cmpsb
cltd
jbe
inc
push
mov
sbb
imul
add
movsb
sub
arpl
clc
adc
test
lretw
aaa
pop
lahf
int
ficoms
test
dec
mov
inc
cmp
std
dec
cmpsl
jb
scas
push
cmp
push
ss
xor
shll
xchg
push
jbe
jb
ds
je
dec
and
into
or
dec
outsb
or
inc
in
dec
imul
push
mov
scas
mov
loopne
push
push
mov
push
out
mov
mov
mov
inc
mov
arpl
mov
mov
gs
mov
sbb
stc
xor
jno
jne
ret
sub
jnp
fldcw
imul
psubb
outsb
push
in
pop
jb
lahf
rcr
in
sbb
adc
pop
data16
int
sub
dec
lock
js
mov
dec
test
ror
loope
test
or
xchg
pop
mov
sub
jbe
fldcw
sahf
cmpsb
push
cmpsb
ja
pop
jno
mov
xchg
jecxz
insl
lods
dec
jbe
jmp
rolb
and
xchg
xor
mov
pop
sub
push
mov
push
xor
addr16
push
mov
jmp
pop
adc
negb
addb
scas
sbb
cmpsb
jnp
int3
cld
sbb
mov
or
shlb
insb
lcall
mov
push
repz
pop
adc
repz
into
scas
adc
mov
fwait
into
mov
lahf
sahf
adc
data16
nop
clc
movl
stos
push
ficompl
int3
xor
xchg
int
and
push
push
stos
push
addr16
xchg
lahf
lret
aad
imul
jns
push
bound
addr16
es
pop
lock
or
jp
or
outsb
and
lcall
cmp
dec
shlb
mov
push
ja
add
fnstcw
jbe
sub
movsl
les
nop
xlat
call
jmp
push
repz
sbb
data16
loopne
imul
mov
outsl
pop
dec
ds
subb
jle
pop
fsub
js
dec
lret
arpl
cmpsl
jg
jnp
xchg
sbb
mov
popa
jo
into
dec
and
sub
pop
ret
push
into
ljmp
lret
sahf
cmpsl
mov
test
loope
fidivl
lret
inc
ds
cmp
ret
xlat
inc
dec
mov
push
cmpsl
jle
adc
jge
pop
pop
lock
jns
int
out
jle
mov
cwtl
xor
inc
pop
jo
xor
pop
mov
fildll
and
lods
iret
mov
js
mov
addr16
sarb
sar
fdivs
imul
jnp
jmp
cmp
loopne
or
clc
ljmp
aaa
notb
popf
add
mov
bound
add
aaa
push
rep
inc
jmp
mov
stos
std
cmpsl
subl
xor
insl
stos
dec
lock
pop
outsb
mov
arpl
xorb
lds
popa
roll
movsb
shlb
add
dec
xor
into
mov
jbe
pop
pop
push
sarl
cmp
ss
mov
sub
inc
insb
cltd
in
stos
in
push
cwtl
bound
dec
pushf
js
inc
add
cmc
ds
fiadds
mov
lock
xor
out
jbe
dec
xchg
mov
pop
jno
cmp
shl
dec
into
rolb
leave
push
adc
fnstcw
fs
cmpsl
jp
lcall
std
lods
ret
sub
test
or
inc
cmp
jb
out
nop
lods
shlw
mov
cli
mov
mov
lahf
adc
sbb
inc
jne
sub
cltd
mov
pop
jg
insl
dec
out
mov
cmpsb
mov
fsubrl
cltd
pop
xchg
mov
sub
int
xor
cmpsl
sub
jbe
int
jo
je
into
ljmp
lret
popa
cmpsl
mov
cwtl
icebp
aam
add
movsb
adc
orb
sbb
cmp
out
in
cwtl
push
sbb
aaa
fisttps
cmpsb
cmpsl
rorb
ss
inc
push
push
mov
ja
and
cmpsb
popf
xchg
jmp
nop
push
ljmp
in
and
dec
das
cwtl
nop
out
cwtl
lcall
pusha
ljmp
fwait
sbb
mov
ret
sbb
dec
dec
push
xchg
nop
out
xchg
lcall
pusha
ljmp
insb
mov
mov
cmc
rcl
out
popa
in
mov
sti
iret
jle
pop
cmp
aam
sahf
mov
fucomip
movsl
pop
inc
in
adc
lock
or
iret
dec
out
ja
cwtl
and
or
das
movb
outsb
and
shll
shll
loopne
pop
sbb
mov
mov
jle
lods
xchg
movsl
jae
xchg
pop
in
ja
sbb
dec
lret
adc
sbb
dec
xchg
add
xchg
mov
cmpsb
jbe
inc
push
aam
mov
lcall
inc
popf
mov
int
sti
adc
test
out
pop
push
or
jmp
test
inc
mov
xor
out
sar
inc
ss
mov
xor
pop
sbb
add
roll
mov
mov
jne
test
out
dec
push
test
push
inc
ja
in
mov
cmp
aaa
xor
pop
dec
inc
cs
cmp
addb
xor
data16
or
xorb
mov
pextrw
mov
cli
mov
scas
pop
push
inc
inc
pop
aad
lcall
inc
sub
and
movsb
cmpsl
xchg
fdivs
sub
jmp
xor
push
aad
cmp
sbb
outsl
xchg
push
call
mov
rcl
push
cld
fnsave
leave
xor
arpl
and
rorl
mov
inc
and
ficompl
inc
lea
add
movl
cmp
ljmp
out
shlb
pop
mov
jp
icebp
pop
fisttpll
push
or
roll
mov
jmp
frstor
push
mov
es
ret
mov
jb
xchg
sub
insb
insb
loopne
push
scas
call
jl
shrl
mov
jno
test
sbb
jp
sbb
aaa
call
arpl
and
mov
out
push
lcall
fs
xchg
mov
pushl
inc
or
in
jge
mov
ljmp
hlt
jbe
out
cmpb
cmp
pop
jle,pt
pop
push
cmp
data16
fxch
cs
inc
push
aaa
pop
rolb
ffreep
das
sti
xchg
and
xor
mov
push
sbb
push
cs
enter
mov
lods
adc
in
push
jmp
cwtl
dec
sub
stos
jp
fmul
insl
sbb
lret
dec
int3
or
add
adc
fidivrl
ja
inc
sbb
dec
shrl
xchg
repz
scas
xor
lock
idivb
out
cmc
mov
out
adc
dec
mov
sub
xor
sub
scas
mov
mov
test
cltd
mov
pop
sahf
add
jmp
push
and
jae
xchg
xchg
bound
add
mov
jo
mov
sub
ljmp
ret
and
stos
out
push
cmp
pop
cmp
mov
and
mov
fwait
repz
push
push
push
ret
cmpsl
cmp
popf
adc
out
lahf
hlt
arpl
pop
pop
nop
sar
nop
out
mov
jbe
add
aad
push
and
mov
les
adc
pop
or
icebp
stc
outsl
lcall
mov
push
mov
sub
outsb
push
mov
inc
mov
lret
add
mov
jmp
dec
lods
mov
fdecstp
frstor
fsubrs
mov
inc
movsb
fwait
inc
sarb
xchg
cmp
hlt
mov
lret
push
cmpl
pop
inc
out
sbb
nop
dec
lods
les
pushf
ljmp
cmpsl
cmpsb
fwait
dec
pop
inc
lds
mov
fwait
cmpsb
lcall
cmp
fxch
dec
lcall
iret
sbb
rol
sub
inc
inc
xor
outsl
adc
iret
lods
fwait
hlt
arpl
pushf
insl
out
movsb
fwait
pop
add
rolb
xchg
icebp
stc
push
ja
out
jns
adc
lahf
mov
arpl
sub
mov
mov
mov
ss
sub
mov
test
mov
lahf
fbld
dec
mov
outsb
cwtl
ret
lret
sbb
dec
cmp
xchg
inc
mov
mov
cltd
sub
pop
mov
int3
pushf
ljmp
xchg
mov
aad
mov
xchg
inc
popa
mov
inc
fwait
out
ret
movsb
mov
mov
and
lods
je
fistl
lahf
inc
sarl
dec
cltd
fisttpll
inc
call
xchg
icebp
stc
xlat
xchg
jnp
sbb
sub
xor
xchg
roll
dec
lods
jae
fistl
mov
inc
lods
int
into
xchg
xchg
xchg
test
xchg
mov
popf
xchg
rorl
rolb
lahf
and
ljmp
ss
out
out
sti
addr16
pop
and
xchg
loopne
mov
in
sub
xor
scas
out
popa
orl
push
sbb
dec
lods
icebp
sti
loop
jo
xor
data16
cmpsl
mov
les
adc
add
stc
out
lods
jb
xchg
cmpsl
ja
mov
mov
inc
mov
fisttps
jle
incl
sub
sbb
fsubrl
int3
outsb
ret
cs
or
pop
push
dec
adcb
rep
pop
mov
rolb
aam
inc
fcmove
fwait
jecxz
xchg
mov
lret
sbb
dec
xchg
shrb
mov
mov
jbe
roll
stc
stos
subb
adc
into
mov
fxch
stos
pop
daa
int
pusha
ljmp
fwait
pushf
nop
xchg
stos
pushf
ljmp
cmpsl
scas
mov
test
jmp
mov
outsl
ljmp
iret
or
jmp
dec
jle
and
scas
cmpsb
lahf
inc
pushf
cmpsb
push
add
enter
loope
adc
sub
mov
mov
fcmovbe
cmpsl
mov
adc
pop
in
rcrb
test
push
sub
dec
out
or
pop
ljmp
xchg
jle
rep
push
enter
dec
mov
push
enter
rcrb
xchg
xor
mov
pop
mov
fdivl
scas
out
nop
test
xchg
inc
dec
mov
pop
not
sub
imul
add
test
cld
add
inc
test
xchg
mov
imull
adc
rol
sub
dec
int
popf
jbe
push
popf
inc
out
fwait
mov
mov
lret
inc
lea
lret
fcmovu
adc
jno
outsl
cmpsl
das
cmpsb
cmpsb
jbe
stos
and
cwtl
dec
aad
rcrb
jns
dec
mull
sti
movsb
xchg
mov
dec
lock
pushf
mov
je
into
jb
movsb
stc
mov
movsl
cs
stos
inc
mov
mov
movsb
mov
lahf
rolb
mov
jb
xchg
movsl
or
xlat
test
xchg
stos
xchg
je
mov
leave
dec
xlat
xchg
stos
inc
xchg
cltd
call
jno
dec
das
xchg
data16
xor
movsl
loopne
ret
push
stos
dec
faddp
test
xor
lods
xchg
outsb
nop
inc
arpl
adcl
pusha
outsb
mov
fistps
xor
jo
mov
mov
mov
xchg
jg
cmp
mov
out
xchg
cmp
in
mov
inc
je
or
pop
lahf
gs
in
push
lret
stos
mov
aaa
push
mov
sbb
stos
pop
leave
jmp
iret
fildll
mov
je
sub
std
sbb
shll
rclb
out
add
mov
insb
int
mov
ljmp
loope
jae
jbe
pop
push
adc
sbb
stos
stc
pop
xor
arpl
in
push
pop
rolb
mov
out
or
ljmp
xchg
call
sti
je
outsb
sub
add
jne
xchg
xchg
dec
into
adc
iret
mov
sti
cmp
movsb
fistl
lods
movsb
sahf
cld
xchg
fbld
out
xchg
nop
out
ss
popf
inc
lret
fwait
enter
filds
push
cmp
aaa
pusha
aas
mov
stos
nop
out
lock
out
or
push
mov
inc
outsl
jbe
and
pop
dec
insl
hlt
or
sahf
mov
nop
shl
dec
dec
push
xor
xchg
lret
ss
lret
outsl
lret
and
mov
push
cmpsb
mov
jbe
rolb
clc
jge
pop
popf
int
jle
lods
leave
leave
jmp
fists
ret
out
fidivs
les
sahf
jns
ds
sbb
jne
mov
es
xor
jb
lea
mov
jmp
jbe
inc
inc
out
cli
fiadds
int3
out
aas
cmp
or
iret
dec
xor
js
mov
adc
sahf
fisubrs
sbb
call
jbe
push
cmpsb
addl
lods
pop
jnp
std
out
scas
fisubrl
jle
sbb
cltd
xor
jae
inc
mov
jno
jne
ret
sub
inc
outsl
mov
add
clc
int
sbbl
inc
leave
jmp
or
stos
leave
jb
or
sbb
test
outsl
cmp
cmpsb
aas
test
ficoml
jbe
shlb
sub
mov
or
cmp
icebp
sbb
jo
mov
ljmp
test
cmpsb
cltd
jbe
pop
pop
push
roll
dec
lods
xchg
pop
cli
xor
stos
or
pop
into
add
movsb
xchg
lds
movlps
dec
push
stc
test
bound
push
sti
inc
fsts
xor
int
cmp
cmc
fcomps
jle
lods
aaa
out
inc
data16
xor
or
std
out
es
cmp
and
arpl
add
orl
std
mov
imul
cmpsb
sbb
cmpsl
sub
sbb
sbbl
inc
iret
lret
jnp
imul
pop
hlt
pusha
sub
mov
dec
arpl
dec
mov
fldenv
lret
les
or
xchg
inc
cmpsl
jp
leave
sbb
sub
lahf
cmpsb
push
cmpsb
ret
cmp
dec
lock
clc
pusha
and
inc
pop
jb
push
adc
xchg
pop
ret
xchg
fldenv
call
cmp
aad
cmp
cmpsb
jp
fdivrp
loop
sbb
jecxz
sub
pop
cltd
in
stos
dec
fists
imul
push
cli
movsb
jns
xor
mov
bound
call
mov
or
cs
nop
fs
xchg
dec
cmpsl
adc
add
cld
dec
cmp
fstl
lock
into
xchg
iret
movsl
mov
xchg
insl
jg
sub
pushf
jb
fdivrp
sub
in
mov
loop
addr16
leave
xor
jns
ljmp
pop
lock
xchg
sbb
in
sub
xchg
std
xchg
rcrb
rolb
add
sub
in
imul
lret
xchg
not
insl
cmp
gs
sti
jns
fdivrs
cmp
loope
iret
xor
mov
cmp
cmp
inc
mov
out
mov
cmp
dec
sbb
xor
std
sub
cmp
jo
pop
out
cmp
lcall
pushf
rolb
sbb
jle
outsl
into
je
jp
in
ljmp
lret
sar
mov
xchg
enter
xchg
xlat
jno
mov
rep
cld
inc
mov
cmp
inc
inc
ss
sub
adc
fimuls
inc
aad
xlat
into
ljmp
dec
xchg
mov
mov
dec
adc
stos
ret
aas
inc
sbb
hlt
arpl
inc
inc
cmp
hlt
mov
pop
cmpsl
inc
mov
les
adc
xchg
jne
movzbl
dec
push
test
sub
jecxz
jp
fadd
lahf
cli
adc
aam
hlt
arpl
sti
push
xchg
xchg
jne
add
pop
fwait
movsb
aad
or
jb
enter
pop
cld
hlt
arpl
insl
andb
cmpsb
xor
stc
xlat
xor
in
dec
adc
or
pushf
ljmp
stos
scas
xchg
push
sti
test
stc
mov
mov
shr
dec
lods
test
fistl
or
xchg
inc
mov
aas
cli
neg
adc
mov
mov
mov
rolb
adc
xor
cmp
nop
out
ds
pusha
ljmp
popf
inc
lcall
pop
inc
pop
and
test
divb
aaa
fistl
cmp
dec
dec
cli
inc
xchg
jle
les
pop
sbb
dec
and
sbb
push
xchg
xor
xlat
inc
insb
adc
jecxz
mov
aas
mov
aad
push
scas
fldcw
push
pushf
fisubl
xor
insl
sbb
inc
jle
icebp
stc
scas
dec
jb
repnz
or
inc
dec
fcoms
movsb
cmc
pop
lock
inc
loope
icebp
jecxz
movsb
ja
inc
insb
adc
loop
out
pop
cmp
xchg
lock
movsb
jns
scas
dec
inc
inc
int3
xor
cli
jnp
shrb
insb
or
daa
insl
int3
es
out
dec
push
test
test
xor
stc
divl
jb
xchg
dec
ja
es
or
and
mov
and
xchg
dec
mov
mov
inc
je
in
icebp
stc
aad
jb
xchg
dec
ja
es
or
lahf
in
out
dec
sub
pop
stc
fs
mov
mov
ljmp
or
jbe
movsb
int3
repz
xchg
xor
xlat
stc
dec
and
cmc
xor
outsb
scas
and
insl
lea
push
movsb
sbb
jl
clc
mov
std
and
arpl
and
test
repnz
lds
jmp
jb
mov
adcl
ss
fdivrl
cs
addb
adc
cmp
shr
xchg
push
mov
fldt
mov
cmp
xchg
aaa
sahf
add
xchg
push
stc
adc
stos
add
cmpsb
mov
xor
dec
int3
push
inc
sahf
sahf
add
push
jp
mov
pop
pop
and
dec
mov
push
sti
cmpsl
gs
cltd
adc
repnz
xor
addr16
out
dec
cmp
jae
out
jno
sahf
dec
das
xchg
push
mul
insb
xchg
push
fists
aad
inc
cmp
popa
lock
lds
push
and
test
add
es
in
mov
shlb
push
inc
jl
inc
lret
or
jmp
ficoms
add
and
sub
inc
into
mov
out
jb
stos
xor
mov
xor
xchg
dec
xchg
test
xchg
push
push
fmuls
repnz
inc
pop
push
lods
add
addr16
icebp
inc
inc
xchg
add
mov
lock
adc
dec
dec
jbe
xchg
imul
mov
cli
test
jl
inc
mov
dec
inc
stc
mov
loop
push
aaa
in
enter
and
mov
pop
push
mov
popf
sub
dec
sahf
mov
cmpl
std
jnp
mov
or
sub
into
incb
mov
push
stos
cmp
icebp
fs
jno
and
mov
push
call
mov
jno
mov
xchg
mov
dec
addr16
adc
iret
inc
push
mov
fdiv
jno
xchg
sbb
mov
jl
cmp
mov
pusha
mov
fwait
jbe
dec
xchg
adc
cli
insl
ja
lds
sbb
or
sbb
and
mov
addr16
mov
dec
or
cmp
dec
stos
pop
cli
sub
sbb
gs
xchg
lret
dec
mov
inc
js
mov
jmp
jecxz
mov
shl
jb
aaa
dec
out
push
adc
xor
mov
mov
mov
push
xchg
inc
outsl
push
cmp
arpl
subl
xchg
ss
sbb
iret
lock
arpl
mov
mov
jno
xor
iret
shlb
pop
pop
adc
inc
cmp
lds
negb
or
jg
lock
idivb
xchg
sbb
cmp
inc
dec
xchg
lock
inc
shrl
jno
cmp
xchg
lds
ljmp
mov
lcall
mov
repnz
jp
negb
inc
lret
shl
sub
addr16
mov
in
das
stos
sbb
pop
out
cs
repnz
inc
es
testl
dec
push
xchg
push
outsl
in
scas
imul
rcr
in
xchg
mov
jnp
fcmove
inc
xchg
inc
or
sub
jno
sub
push
dec
mov
sbb
inc
or
jne
out
or
arpl
mov
or
repz
mov
jae
mov
adc
ret
jne
les
add
add
lea
mov
loop
movsl
adc
sti
jno
mov
shrl
mov
in
das
stos
inc
mov
das
dec
mov
dec
xchg
hlt
inc
mov
jmp
movl
sub
xchg
pop
jmp
pop
shll
xchg
adc
xor
sahf
or
push
lcall
adc
or
xchg
xchg
push
xor
out
sub
sbb
adc
sub
dec
sbb
repz
lock
out
sub
dec
in
inc
out
cmpsl
or
push
fcoms
shlb
mov
inc
test
pop
sub
xor
sub
adc
int3
pop
push
fidivs
imul
out
sahf
cli
movsb
xchg
dec
pop
inc
sbb
xor
or
hlt
push
mov
call
xor
pop
xor
in
inc
test
into
stc
inc
or
lds
jmp
or
fistpl
cs
icebp
cmpsl
stc
jecxz
and
ret
mov
sub
aad
jg
subl
es
idivl
adc
sbb
aad
pusha
inc
dec
out
andl
imul
jo
push
mov
and
dec
mov
shrl
xchg
pusha
sbb
cli
sub
inc
arpl
lret
dec
int3
xchg
dec
pop
in
fld
sti
xor
adc
lret
lret
aad
mov
mov
push
mov
push
std
jmp
sub
lods
mov
jecxz
aaa
mov
ljmp
add
pushf
bound
dec
jecxz
nop
sbb
test
imul
and
cmpsl
cld
call
fwait
mov
pushf
addr16
push
stos
push
aam
xchg
xor
inc
sbb
fwait
popa
inc
xlat
push
scas
cwtl
movsl
push
mov
cmp
ljmp
out
shlb
pop
mov
and
mov
or
xchg
fldl
cmc
cli
repnz
pop
gs
inc
jecxz
sbb
xor
pop
xchg
fs
inc
sub
popa
mov
or
push
leave
xor
cwtl
mov
inc
or
jb
or
xor
add
in
test
or
sub
in
dec
iret
stos
dec
mov
in
or
inc
ds
pusha
adc
xchg
jnp
xor
stos
add
inc
xchg
inc
or
xor
shll
loopne
or
loop
dec
imul
arpl
or
push
jns
xor
jecxz
dec
push
or
xchg
xor
xor
mov
rep
or
sarl
cwtl
aam
inc
fisubl
push
push
pop
add
ds
cmpxchg
movsl
test
cmp
pop
mov
or
fldl
clc
mov
and
nop
cmp
add
into
push
jecxz
adc
adc
jmp
mov
testb
dec
icebp
dec
sar
enter
mov
lahf
push
inc
push
or
inc
push
sub
ds
in
push
loopne
movsl
dec
mov
dec
mov
xchg
adc
jbe
std
stos
xchg
test
dec
xor
in
push
cli
sbb
cmpsl
mov
pop
xchg
push
inc
pop
xchg
push
out
daa
xor
test
sub
lcall
test
jl
movsb
fs
push
aas
xlat
add
pop
ret
cmp
ljmp
jb
sub
pop
in
std
inc
out
xchg
cmpsl
pop
cmp
xchg
jecxz
mov
rol
fdivl
aas
jns
fstpl
js
mov
in
cmc
int
pop
jp
jmp
jae
dec
rcll
ljmp
mov
pop
mov
push
mov
xchg
mov
cmp
push
int3
adc
sub
adc
dec
arpl
jmp
pop
sub
cmp
add
cmp
loope
arpl
in
movsl
daa
shl
push
fs
in
aad
enter
push
ljmp
sbb
dec
push
fidivrs
or
push
repz
iret
mov
cmp
mov
out
adc
hlt
bound
call
pop
xor
cs
push
push
dec
into
jmp
addr16
arpl
mov
out
pusha
inc
sub
or
orl
xchg
out
arpl
loopne
pop
test
mov
cmpsb
leave
pop
xchg
xor
pop
int3
pop
mov
decb
sbb
push
and
movsb
leave
push
sub
inc
pop
adc
movsb
pop
lahf
int
idiv
dec
fsubs
loop
mov
aas
jg
iret
jg
hlt
arpl
inc
addr16
icebp
stc
cld
pop
jb
xchg
pop
ja
pop
insl
flds
pusha
rclb
clc
loop
mov
daa
ja
scas
fsubr
testl
pop
iret
movsb
dec
cli
aad
dec
push
adc
loope
hlt
mov
xchg
pusha
add
add
cld
jecxz
jno
in
lret
loop,pn
shlb
push
scas
imul
pop
adc
or
je
bound
pop
push
adc
insl
mov
sub
cmpsl
xchg
pop
dec
dec
or
out
pop
stos
insb
cli
scas
ljmp
inc
lret
loop
or
shlb
inc
hlt
pop
icebp
stc
inc
pop
jb
xchg
push
ja
pop
insb
or
pop
mov
pop
mov
add
push
dec
xchg
dec
rcrl
dec
adc
fdivrl
sbb
jno
add
inc
shr
mov
xor
add
push
fiadds
lret
mov
mov
shll
lods
aad
fistl
lahf
mov
mov
loope
inc
push
cwtl
out
sbb
cmp
jmp
push
lock
mov
jbe
fcompl
push
rolb
dec
icebp
stc
or
push
ja
pop
insb
or
dec
inc
pop
mov
out
repz
inc
ljmp
dec
lock
pop
pusha
dec
and
insl
dec
repz
pushf
push
fdiv
lret
aaa
aad
out
pop
lcall
pusha
ljmp
jno
cmp
add
xor
arpl
inc
xchg
dec
jmp
rolb
ss
testb
push
pop
jp
dec
jle
add
mov
cltd
pop
fnstenv
xchg
fcomi
lret
adc
mov
fcmovb
les
lods
cmc
dec
fistl
inc
ds
jno
or
inc
inc
icebp
arpl
push
push
adc
push
std
out
adc
das
rorl
dec
ljmp
sarb
xor
in
in
pop
sahf
lret
pop
mov
cld
xor
dec
sarb
xchg
dec
sbb
clc
sub
test
outsl
dec
int
inc
pop
adc
call
pop
fstp
push
xor
push
pop
cmc
iret
mov
jb
stos
cmp
fsts
adc
hlt
arpl
push
test
loope
bound
pop
xabort
pop
fsts
cld
nop
push
std
sbbl
repz
es
stos
push
imul
jb
mov
scas
adc
cli
mov
dec
enter
mulb
push
ja
popa
insb
or
arpl
inc
int3
popa
mov
sti
xor
push
icebp
loopne
movsb
ja
pop
push
xchg
cmc
sub
cwtl
aad
incb
out
add
xor
xchg
sbb
xchg
push
pushf
ljmp
into
popa
fisttps
out
mov
call
cli
dec
push
jecxz
stc
sub
xchg
push
jb
xchg
push
ja
arpl
iret
fcomp
hlt
arpl
mov
fstl
cmc
nop
push
mov
sbb
cmp
push
std
mov
icebp
push
adc
ljmp
xchg
out
push
mov
lahf
lea
je
fsubs
arpl
jb
or
or
insl
jb
aam
adcl
cmp
stc
leave
imul
fs
fadds
xchg
dec
out
in
dec
mov
mov
jbe
dec
lock
lret
push
push
adc
ja
fs
fsubs
inc
lea
xchg
dec
jmp
push
loopne
add
inc
lcall
cmp
in
std
dec
or
jle
dec
aad
std
movsb
rcrl
push
jb
xchg
push
or
ss
dec
xchg
outsl
jp
or
js
scas
lret
jecxz
dec
sti
mov
dec
pminsw
popf
data16
xchg
push
dec
bound
dec
dec
ficoml
jecxz
xor
jle
stos
test
sbb
inc
dec
testb
mov
lret
psrlw
cmpsb
dec
mov
pushfw
mov
inc
push
ljmp
fimuls
inc
into
test
call
adc
dec
mov
dec
sub
or
test
jge
push
enter
mov
lret
jns
aam
cltd
or
inc
dec
dec
or
out
dec
lcall
popa
ljmp
fwait
hlt
shl
lret
fs
xor
rolb
inc
sar
les
mov
loop
inc
js
paddd
fstpl
push
std
inc
adcl
test
outsl
aam
mov
cmp
cmp
jp
mov
insl
jae
dec
insb
push
inc
lcall
inc
lahf
insl
icebp
stc
xor
ja
fildll
sarl
inc
and
ss
shlb
in
test
xor
push
mov
std
rcrl
inc
pop
mov
scas
into
push
pusha
lods
into
mov
out
dec
movsb
jle
nop
mov
ret
imul
adc
push
dec
adc
ret
adc
int
arpl
int3
insl
into
movsb
iret
pop
ljmp
hlt
push
jb
xchg
addr16
inc
insb
and
lret
dec
mov
push
dec
push
ret
push
das
adc
in
adc
mov
hlt
arpl
into
pop
jle
rolb
imul
and
ja
pop
stos
fcos
stos
cmp
fsubl
xchg
pop
mov
imul
ret
mov
xchg
pusha
dec
fbld
add
out
dec
lcall
popa
mov
or
int
lret
scas
shll
and
popa
fdiv
loopne
fabs
and
ret
adc
je
push
clc
dec
inc
rcll
pop
sub
nop
xchg
popa
push
adc
or
hlt
arpl
lret
movsb
lret
pop
rolb
popa
icebp
stc
or
stc
xchg
pusha
ja
dec
insb
or
dec
push
int3
dec
mov
pop
dec
push
lret
add
test
mov
push
push
sbb
iret
es
call
cmp
xor
ja
or
cmp
rcll
ret
xor
data16
xchg
adc
std
pop
xlat
cld
into
cmpsl
sbb
xor
lea
or
outsl
dec
je
js
mov
je
mov
in
fwait
dec
cmp
js
mov
je
xchg
xchg
xchg
fldcw
dec
jne
ret
sub
stos
in
push
dec
bound
jbe
js
mov
sub
pop
pusha
or
popf
add
inc
push
fcmove
mov
call
iret
fadd
call
ljmp
mov
xor
sub
data16
adc
int
out
clc
xor
outsl
dec
test
cmpsb
cltd
jbe
arpl
inc
bound
mov
testb
add
xchg
jbe
mov
ret
and
mov
xchg
loop
lret
xor
jb
or
inc
in
fs
inc
imul
sbb
sub
mov
cmp
mov
and
mov
es
inc
xchg
filds
and
dec
repz
movsb
inc
and
aas
out
jne,pt
scas
xlat
sub
adcb
xor
fistpl
fldcw
dec
lock
pop
in
cmp
adc
lods
dec
repz
test
negl
lcall
loope
xchg
and
sub
and
xchg
test
outsl
xchg
fisttpl
dec
dec
inc
mov
fmul
je
dec
xor
inc
push
ds
imul
in
mov
jno
push
mov
sbbb
sbb
adc
in
push
xchg
jno
dec
xchg
faddl
rcrl
fwait
test
ds
cmpsb
jecxz
sbb
scas
mov
inc
je
gs
subl
out
push
lret
pushf
cs
cli
pop
loope
xchg
shr
jbe
rcrl
je
push
std
push
adc
cld
imul
mov
pop
or
lods
sbb
xchg
out
dec
sbb
push
arpl
mov
xchg
sub
push
xchg
push
stos
test
mov
jae
out
sbb
stos
dec
leave
test
iret
fildll
mov
sahf
shr
ret
dec
and
fnsave
xchg
mov
xor
add
xor
cmpsl
jp
in
pop
call
mov
dec
pop
pop
stos
fsubp
inc
test
mov
mov
ret
ss
pop
sbb
sub
dec
lock
dec
inc
mov
bound
test
fsubrs
mov
fs
mov
inc
push
xor
xor
std
mov
fldcw
fwait
mov
inc
xchg
out
xchg
dec
mov
addr16
cmp
xchg
xchg
ret
cli
inc
add
mov
pop
into
push
push
xor
push
repz
push
repnz
push
scas
sbbl
xchg
les
dec
lret
adc
xchg
mov
sub
ljmp
or
mov
sub
push
pop
dec
adc
in
pop
fneni(8087
jmp
jle
pop
inc
adc
icebp
pop
mov
je
das
mov
mov
dec
ss
inc
inc
xchg
add
cmp
jae
mov
xchg
ficoml
lret
cmpsb
cli
sbb
lock
stos
ja
hlt
dec
cld
push
add
mov
dec
es
adc
stos
fsub
popa
adc
push
mov
pop
imul
mov
dec
push
ljmp
mov
mov
ja
jl
push
repnz
adc
testl
xor
clc
cltd
cmp
push
arpl
ljmp
add
push
adc
ret
lret
sub
sub
dec
xlat
push
or
in
adc
addl
push
addr16
pop
insb
dec
push
pop
inc
push
flds
adcb
test
jge
xchg
stos
fdivs
inc
mov
cvttps2pi
fildll
mov
cmp
mov
fstpl
push
testb
mov
xor
or
scas
jno
pop
inc
push
lret
pop
or
mov
pop
fiadds
repz
fildl
mov
mov
fistps
xlat
add
stc
loopne
push
clc
outsl
jp
pushl
fimull
test
cli
xor
jmp
lret
into
mov
fiadds
push
fsts
outsl
jnp
jns
fimull
mov
cmp
cmp
outsb
out
push
xchg
ljmp
jb
inc
cli
xlat
fs
jecxz
fisubs
dec
xchg
ret
fsts
popa
das
mov
mov
sbb
ret
add
mov
jp
popf
iret
inc
addl
mov
cmp
mov
fstpl
xor
ljmp
mov
dec
scas
lea
fs
fsubrs
sub
loope
cld
mov
fsts
stc
xor
xchg
inc
fimuls
insb
xchg
push
xchg
arpl
iret
lea
mov
dec
int
inc
outsb
inc
lds
mov
push
jno
loop
jno
lcall
dec
out
out
mov
push
test
push
xlat
test
insb
dec
shll
faddl
mov
push
test
test
mov
mov
push
jg
movsl
add
scas
pop
mov
or
mov
loop
cmpsb
cwtl
in
cmp
ret
in
mov
ucomiss
in
jnp,pt
pop
jle
stos
lock
pop
pop
xor
stc
stc
imul
mov
adc
adc
movsl
imul
xchg
ds
nop
xor
out
push
mov
adc
cmp
sbb
jecxz
dec
cmpb
fucomip
out
push
test
inc
in
stc
xchg
sub
pop
test
dec
adc
lods
push
push
adc
faddl
cmp
dec
mov
dec
cld
in
insl
mov
in
aad
idivl
ja
push
out
arpl
dec
gs
jp
ljmp
loopne
aad
jae
cmc
xchg
fnstsw
adc
xchg
leave
imul
jnp
cli
repnz
jo
out
adc
pop
pop
push
jno
divl
fcmovnb
inc
inc
push
mov
adc
enter
xchg
clc
cmp
imul
mov
jge
movsl
cltd
mov
clc
adc
ja
incb
push
jb
stos
cmp
dec
stos
push
or
inc
jle
mov
int
push
mov
adc
push
push
sub
xchg
push
and
int3
sbb
xchg
les
pop
mov
sbb
repz
js
inc
adc
cmp
adc
push
inc
add
fistpll
cmp
mov
adc
shlb
sub
pop
mov
out
xchg
lods
mov
ret
add
or
add
mov
std
roll
xchg
icebp
mov
jae
negl
out
aaa
and
je
rcrb
out
and
add
es
add
loope
mov
imul
inc
pop
bound
je
jne
out
push
std
and
lret
add
sahf
aaa
pusha
scas
mov
inc
cmp
or
xor
cmp
or
cwtl
lahf
out
pop
js
loopne
shl
inc
mov
dec
insb
rcl
mov
xchg
addl
mull
lods
popa
test
imulb
mov
jbe
leave
addr16
and
sub
sbb
xor
stc
loop
dec
fwait
inc
mov
stos
movsl
insb
enter
add
jne
cmp
sbb
ret
neg
xchg
out
iret
mov
or
dec
sub
push
daa
xchg
push
push
repnz
xchg
or
sub
lcall
lret
mov
rorb
xchg
jne
incb
daa
xlat
pop
mov
testl
sub
inc
xor
mov
dec
dec
into
or
dec
lds
mov
sbb
or
xor
mov
shl
testl
adc
inc
mov
xorl
mov
inc
push
dec
ljmp
sub
dec
je
out
ljmp
inc
push
pop
inc
xchg
xchg
dec
jbe
pop
mov
xchg
dec
mov
xor
shlb
faddl
cltd
and
xor
insl
jle
arpl
das
test
push
stc
sti
ss
sub
sub
idivb
cmp
pop
inc
lahf
sub
pop
out
inc
jno
scas
inc
shrl
sbb
stos
outsl
add
icebp
pop
mov
shlb
dec
shr
neg
add
dec
or
push
lahf
push
jl
test
mov
outsl
add
pop
inc
sbb
xchg
imul
inc
mov
lret
jmp
xor
imulb
xor
inc
int3
shrb
int
and
aaa
adc
jmp
pop
dec
xchg
gs
mov
dec
push
sahf
xor
jbe
sbb
adcl
pop
sbb
push
or
pop
xchg
cmpsl
xchg
pusha
hlt
pop
ret
xor
dec
lret
imul
adc
or
xor
mov
push
aad
push
dec
or
rclb
jg
loope
leave
and
xor
dec
into
mov
negb
imul
add
imul
or
dec
dec
push
cmp
out
or
lret
fcmovne
pushf
int
mov
inc
leave
sub
in
mov
or
lods
xchg
pop
dec
mov
cld
cmp
cli
into
or
filds
push
xchg
fistps
push
das
sti
test
xor
popa
mov
mov
dec
daa
arpl
sti
jns
push
cmp
data16
fwait
addr16
or
cwtl
inc
insb
loopne
lcall
std
add
pop
dec
pop
inc
inc
xorl
dec
xor
in
cmpsl
xchg
push
add
push
pop
xorb
into
std
test
aam
les
fcomip
dec
imul
sti
inc
pop
pop
xor
xchg
std
inc
sub
or
ret
sbb
ljmp
push
mov
test
sbb
inc
testl
jge
sub
addr16
call
mov
jecxz
in
fmul
cltd
mov
stos
out
iret
out
mov
neg
add
dec
lock
mov
rcrb
add
popa
add
sbbb
hlt
das
in
in
ror
jmp
inc
flds
push
push
xchg
outsl
sub
jmp
notb
insl
nop
aam
mov
in
xor
jbe
dec
lret
cmpsl
incl
sar
sub
pop
dec
dec
push
sbb
ret
adc
jnp
sub
cmp
inc
repz
xchg
xchg
mov
in
mov
cmc
cmpl
leave
ret
out
movsl
jne
jbe
pop
or
dec
push
shlb
testb
test
repnz
repz
dec
and
xchg
adc
cmp
insb
out
arpl
call
cli
iret
movsb
mov
clc
xor
mov
dec
xchg
sbb
iret
movsb
sbb
jecxz
adc
fistl
adc
fiadds
insb
lret
mov
nop
dec
dec
int3
sarb
int3
jp
cmp
ljmp
cwtl
dec
repnz
daa
mov
cmp
sti
mov
mov
popf
pop
jp
jp
lock
aas
xor
mov
mov
inc
mov
adc
cs
arpl
sub
sahf
dec
sti
outsl
dec
jmp
mov
arpl
add
xchg
subps
inc
xor
arpl
inc
arpl
xchg
out
cmpsl
test
mull
fcmovbe
and
mov
je
jmp
pop
inc
inc
inc
mov
out
out
loope
movsl
int3
aam
ret
and
fwait
xor
lods
adc
addr16
push
outsb
stos
or
repnz
dec
ficoml
orw
inc
sahf
xor
jnp
or
mov
xlat
or
xor
ljmp
cmpsb
jmp
fs
cmp
lret
dec
dec
pop
xor
dec
adc
into
mov
adc
div
outsl
jge
lret
jecxz
mov
jnp
shlb
scas
sbb
jecxz,pt
mov
pop
adcl
jnp
imul
xchg
stc
inc
and
inc
push
jno
imull
pop
jbe
insl
out
sbb
or
inc
jp
mov
adc
add
sbb
data16
dec
jb
or
div
adc
sti
xchg
add
pop
inc
notb
lods
xchg
cmp
pop
or
inc
jno
dec
add
out
popa
sti
and
dec
addb
fs
xchg
bound
sub
and
push
lret
add
sbb
leave
mov
pop
or
dec
fiaddl
xchg
jne
fcoml
lds
pop
outsb
ret
sbb
mov
ljmp
mov
out
or
push
add
shrl
popa
inc
ds
scas
jmp
xor
lods
cmp
and
xchg
add
sahf
dec
sbb
movb
daa
icebp
push
adc
imul
xlat
icebp
cmp
ja
sub
jl
lods
xchg
inc
repnz
xor
push
or
adc
ret
ds
int
inc
negb
dec
add
push
aam
lret
dec
mov
pop
cmp
loopne
call
arpl
pop
mov
jge
mov
mov
mov
mov
mov
mov
repnz
int3
stos
jl
push
xor
cmpsl
inc
mov
dec
mov
cmpsb
inc
mov
shlb
sbb
leave
mov
jp
out
cmp
fists
xchg
push
gs
xor
mov
lret
rclb
mov
repz
xor
ds
mov
jmp
or
jge
movsb
test
roll
sub
pop
push
add
cmpsb
das
mov
push
jmp
cmp
fidivl
fcmovne
lds
das
iret
gs
cld
stc
lods
mov
dec
icebp
fsts
dec
or
inc
iret
xchg
inc
xor
or
add
sti
lahf
push
scas
mov
dec
mov
mov
in
nop
lcall
mov
pop
mov
shrl
stc
pop
movsb
mov
jecxz
out
add
pushf
call
fcmove
in
cld
mov
ljmp
fsubr
bound
dec
test
je
shrl
push
push
or
sahf
dec
pop
inc
jmp
divl
mov
lret
jle
call
mov
push
popf
mov
mov
push
aam
push
push
mov
cli
xchg
cmc
dec
mov
jb
push
ljmp
das
push
nop
xchg
dec
jmp
mov
xor
mov
mov
aaa
out
test
cs
jecxz
inc
popf
sub
mov
push
add
xchg
aas
mov
fld
mov
test
or
mov
call
outsl
ljmp
fistl
xchg
fadds
into
pop
mov
jmp
xchg
sbb
dec
sub
inc
inc
scas
in
jo
pop
lret
push
jle
inc
scas
fisttpll
dec
cmpsb
icebp
xchg
or
nop
jg
cltd
imul
mov
je
xchg
arpl
data16
mov
jl
xchg
xchg
jge
addb
sub
aad
mov
lcall
add
mov
bound
loop
sahf
fldl
lret
sbb
mov
xchg
xlat
ss
mov
xor
fistpll
into
mov
fiadds
sti
push
outsl
aaa
jb
cmpsl
into
dec
xchg
aad
adc
subb
cmp
push
and
fwait
inc
sbb
push
bnd
adc
and
inc
mov
int
inc
xor
sbb
fucomp
mov
loope
ljmp
leave
pop
pop
jbe
test
adc
sbb
enter
jecxz
stos
xor
push
dec
ds
jle
xor
call
add
iret
push
cmpsb
sbbl
pop
pop
jle
xchg
inc
call
or
stos
sbb
adc
test
fs
lar
cmp
pushf
inc
fildl
jae
add
mov
dec
mov
or
lret
addb
leave
outsl
js
lcall
add
neg
aad
das
out
dec
lea
jbe
sub
idivb
inc
push
mov
outsl
sarl
into
xchg
std
push
pop
bound
add
add
stos
data16
dec
cli
lods
test
mov
lea
mov
movsl
fiaddl
dec
mov
inc
inc
pop
mov
push
push
mov
inc
addr16
leave
outsl
mov
and
fsubrl
fmull
test
jmp
fisubl
ror
in
ds
aas
dec
daa
or
add
pop
add
push
sub
call
cmp
nop
outsb
lcall
add
cmp
mov
cmp
cmpb
dec
jb
into
mov
or
ficomps
sbb
out
repz
pop
sub
gs
enter
mov
aaa
dec
xchg
dec
pop
or
lahf
mov
push
data16
push
daa
jmp
sbb
ret
or
xchg
mov
mov
mov
dec
push
loop
pusha
mov
sub
dec
ret
sub
out
clc
aad
pop
cmpsb
out
cmp
pusha
or
insb
mov
repz
mov
and
sarb
jmp
pusha
imul
gs
ljmp
xchg
in
sbb
xchg
std
inc
ret
xchg
xchg
xchg
adc
loopne
loop
bnd
test
scas
push
icebp
cltd
sbb
data16
cltd
popf
push
mov
sub
pop
enter
cmpsl
dec
xchg
push
inc
std
adc
leave
mov
fsts
xor
xlat
push
dec
push
pop
xchg
roll
adc
and
jecxz
push
repnz
fwait
dec
push
cmp
test
int
inc
mov
dec
dec
dec
shll
inc
stos
test
sbbl
cmc
mov
push
jp
ficoml
jns
pop
cld
and
push
and
mov
add
add
xor
cli
push
sub
pop
mov
cmp
shll
push
inc
push
and
pop
or
push
js
leave
cld
jb
push
mov
mov
add
leave
add
jb
leave
adc
in
push
ljmp
push
pop
dec
sub
inc
mov
add
int
mov
cli
shrl
mov
dec
imul
add
push
into
in
loop
in
rcrl
jmp
pop
inc
dec
mov
es
decl
adc
inc
sbb
push
pop
pop
and
repz
sub
test
or
mov
xchg
adc
scas
jo
lock
cmp
fldcw
mov
xchg
sahf
jmp
lea
in
into
insb
pop
mov
or
jbe
sub
and
pop
mov
xchg
inc
bnd
in
stos
leave
lea
rcll
fwait
xchg
arpl
clc
dec
bound
cmp
mov
dec
fbld
in
dec
in
jecxz
pop
push
lret
das
mov
call
xchg
jmp
ss
xchg
sahf
xor
stc
pop
jmp
sti
sub
not
cmp
fadd
das
orb
loop
xchg
jecxz
pop
out
nop
out
cli
push
call
push
mov
int3
daa
mov
add
in
sub
xlat
cmp
xchg
dec
test
andl
adc
add
loop
loop
in
loope
out
sbb
or
arpl
pop
pop
insb
cs
pop
or
insb
rolb
popa
push
fnstenv
xchg
jle
adc
stos
jp
inc
sahf
lds
dec
mov
jmp
cmp
add
or
in
call
mov
pop
push
cmc
dec
pop
repnz
and
push
adc
mov
in
pushf
push
int3
dec
inc
mov
out
sub
xchg
dec
dec
aam
aas
lods
ret
push
xchg
mov
subb
mov
xor
aad
sub
in
inc
xlat
add
push
out
arpl
loope
iret
clc
int
jle
mov
rclb
and
pusha
out
movsb
rcl
jbe
ret
popa
scas
sahf
jmp
arpl
add
inc
and
nop
mov
out
std
aad
push
xlat
adc
jg
cli
push
jmp
sti
inc
ds
in
inc
sahf
outsb
test
xlat
stc
das
push
mov
in
call
or
insl
pop
out
fs
loop
int3
push
fsubrs
in
call
xchg
dec
push
push
out
stos
and
inc
ds
pop
adc
or
repnz
test
push
sahf
xchg
dec
jle
or
jbe
sbb
push
repz
mov
push
dec
ljmp
pop
mov
dec
jmp
cld
dec
inc
shl
xchg
mov
testb
int
outsl
rcl
into
xor
mov
dec
dec
into
mov
pop
call
xchg
mov
outsl
stos
push
fbstp
inc
mov
push
xor
mov
loop
loopne
arpl
xchg
pop
or
or
ficomps
mov
pop
insl
add
frstor
cmpsb
adc
jp
outsl
rclb
dec
gs
pop
dec
mov
mov
jmp
mov
mov
jbe
leave
nop
aas
lret
arpl
outsb
psubsb
push
cmp
push
dec
sahf
out
call
sbb
imull
sub
dec
xlat
pop
aad
cli
mov
and
xchg
xlat
push
adc
sbb
into
ret
cli
add
cld
sbb
cmp
ret
push
iret
loope
pop
mov
pop
push
xlat
xor
ficoml
dec
sbb
lahf
loop
and
fs
xlat
sbb
push
lcall
xchg
fs
push
xor
dec
dec
mov
ds
fisubl
push
and
mov
push
add
inc
dec
inc
lahf
pop
into
sub
push
push
out
cltd
call
mov
stc
loop
dec
xlat
fs
mov
pop
adc
enter
cmp
fs
loope
insb
pop
push
adc
out
imul
fs
imul
int
nop
es
pop
xor
push
dec
mov
xchg
out
dec
sbb
or
add
add
xor
loop
std
fs
mov
jmp
cltd
mov
repz
jmp
ficoml
movl
sbb
shlb
mov
dec
push
cli
addr16
data16
and
sahf
fldl
inc
loopne
fs
add
pop
outsb
xlat
mov
lcall
mov
pusha
dec
xchg
xor
lods
fs
push
lahf
push
xlat
cmp
adcb
repz
ret
pop
je
jle
dec
mov
cli
mov
cmp
mov
fs
clc
jp
push
imul
jbe
int
cli
mov
xchg
negb
mov
js
sub
xlat
jo
pop
into
xchg
jb
push
jae
sbb
mull
sti
rolb
sti
outsl
iret
xor
mov
xlat
or
pop
push
sti
mov
sub
push
mov
rol
cmp
mov
and
lahf
inc
ret
add
icebp
push
xor
mov
fcmove
insb
add
xor
fisttps
push
ss
pop
sub
push
push
movsl
jg
fidivs
sbb
and
push
xlat
cmpsl
mov
loope
xor
cmp
mov
outsl
lcall
fdivl
add
aas
fistpll
push
and
push
dec
dec
adc
pop
sti
leave
ds
sub
push
and
mov
push
pop
ja
jp
ja
subb
ja
int
adc
jle
in
pop
push
test
and
retw
mov
popa
lock
cli
testb
sti
adc
or
inc
fbld
jno
add
icebp
movsl
pop
cmp
sbb
fs
mov
push
call
cld
fs
push
cmp
push
pop
fs
fistpl
out
push
scas
or
xlat
fidivl
mov
repz
mov
push
sub
addl
incb
loop
and
xorl
imul
sub
cmp
imul
push
arpl
and
cmp
adc
ds
imul
shll
push
call
xchg
xchg
push
neg
in
iret
leave
das
stos
mov
in
call
xchg
rcll
ljmp
lods
pop
sahf
into
adc
or
mul
inc
jnp
negl
or
ja
in
xchg
xchg
cmp
lcall
cltd
mov
sbb
orl
adc
dec
loope
sub
ljmp
stos
add
pop
testb
jge
pushf
push
rcrb
inc
shl
mov
inc
dec
jae
push
test
xor
mov
inc
pop
jmp
ljmp
push
pop
inc
xchg
sub
cmp
ds
jae
dec
xchg
popa
lock
jle
out
mov
jmp
cld
add
sbb
add
sub
xor
push
jp
in
ljmp
inc
mov
ljmp
mov
sarl
roll
push
mov
mov
sub
dec
inc
dec
xchg
push
dec
scas
jns
adcl
bound
iret
or
xor
mov
xor
push
adc
mov
das
ljmp
push
push
xchg
out
push
ds
dec
and
std
mov
xor
mov
sarb
arpl
push
loop
test
cmc
jg
int3
xor
adc
fmull
xlat
test
mov
orb
xchg
jl
repz
or
sub
test
xor
enter
dec
mov
das
in
lea
testb
push
inc
xor
mov
sti
iret
xor
adc
ds
aad
mov
pop
or
push
mov
push
nop
scas
imul
dec
out
adc
push
rcrb
rcll
lods
jno
imul
dec
xor
out
xor
scas
das
pop
out
repz
jo
lods
ja
mov
popa
mov
shlb
leave
mov
in
sbb
xor
in
xor
xchg
inc
roll
stos
sub
mov
jle
aas
jb
stc
or
pop
sti
mov
aad
fs
fxam
pop
stos
loope
push
inc
jmp
in
movsl
ljmp
in
insb
adc
sub
push
arpl
stc
ljmp
or
ror
sbb
inc
or
int3
loop
xchg
xor
int
fcomp
das
mov
out
loopne
faddl
stos
lret
inc
into
lds
dec
add
ljmp
mov
outsb
or
ret
mov
dec
jbe
dec
push
rclb
dec
fisttpl
push
mov
lahf
add
pop
jo
xchg
inc
pop
mov
dec
xor
adc
push
jae
in
mov
mov
mov
xchg
ror
push
fwait
fstpl
mov
push
cmp
xchg
jmp
repnz
stc
cmp
xchg
subl
lcall
je
cmc
cmp
loop
lds
test
xchg
jno
dec
jecxz
cmpsb
out
movsl
loop
adc
xchg
pop
xor
pop
jnp
inc
cltd
jp
sub
es
gs
lds
jge
or
movsl
je
xorb
mov
mov
mov
jmp
mov
jmp
in
out
mov
loope
lds
mov
push
xchg
mov
call
push
push
or
subl
into
adc
sub
push
imul
sub
and
out
xor
xchg
push
in
mov
call
loopne
push
mov
out
lds
push
push
test
inc
inc
push
inc
xchg
jl
je
mov
bound
or
sub
push
leave
xor
push
es
je
loopne
fwait
jmp
mov
shrl
cltd
mov
cmp
add
push
divl
xchg
jmp
fwait
inc
cmp
add
jg
out
int3
sub
sbb
push
or
jnp
sub
and
mov
jmp
out
cmp
loope
mov
aas
push
jno
fldcw
add
fcoml
push
jnp
sub
and
sarb
mov
xor
orl
cmp
roll
push
sbb
call
push
xchg
or
push
int
hlt
mov
xchg
in
push
jmp
cmp
mov
in
aad
lea
add
push
leave
inc
inc
push
jnp
sub
repz
add
inc
leave
hlt
hlt
push
loope
adc
mov
lods
hlt
loope,pn
fildl
jle
xor
inc
leave
adc
push
in
inc
ja
sbb
push
hlt
adc
in
inc
das
bound
push
sub
in
inc
insl
sub
push
sub
mov
inc
push
jo
xor
and
mov
or
xor
sub
pop
and
sarl
xor
aas
jno
sub
inc
roll
ret
ret
xor
or
lcall
ljmp
fwait
pop
adc
out
push
sbb
arpl
popl
test
push
mov
mov
pop
addb
sbbl
lds
cmpsl
cmc
int
cwtl
add
inc
dec
testb
and
ljmp
or
push
jb
fwait
insb
subl
mov
orl
cmpsl
xchg
inc
jne
stos
or
xchg
mov
cli
add
test
and
int
mov
sub
pop
xchg
xlat
addr16
je
cmc
in
mov
push
jg
ja
cs
or
sbb
adc
or
pop
fcoms
pushf
mov
adc
test
adc
cmc
xor
loope
stos
adc
jnp
fldcw
fidivs
adcl
cmp
pop
push
sahf
fimull
inc
push
mov
push
int3
xor
scas
cltd
data16
xor
test
mov
out
and
or
lds
dec
insb
int
push
push
pusha
nop
hlt
hlt
jp
in
sub
xlat
inc
lcall
xchg
mov
dec
dec
xchg
xor
cwtl
mov
inc
adc
rclb
mov
dec
out
xor
mov
es
inc
push
inc
dec
mul
xor
inc
inc
cli
out
cmp
push
lret
inc
mov
jmp
out
sbb
inc
push
inc
push
add
add
in
mov
xor
testb
jle
call
xor
hlt
xor
sbb
data16
xor
and
pop
or
xor
or
jnp
rol
inc
lret
insb
push
leave
dec
cmc
dec
cmpsb
pop
enter
mov
dec
daa
mov
leave
aad
lock
dec
outsb
mov
sbb
sub
nop
mov
and
movsb
mov
addr16
mov
les
icebp
mov
ss
xchg
pop
mov
jno
ret
arpl
mov
push
xchg
subb
loopne
xchg
stc
ljmp
cmp
add
xchg
outsl
cmp
pop
aaa
push
and
or
inc
jae
mov
push
cltd
nop
sub
sbb
es
lret
mov
and
out
lret
ret
inc
shl
shlb
xchg
lret
xor
ds
adc
or
adc
cmp
mov
popa
jge
push
add
add
adc
adc
cmpsb
mov
push
shl
lret
mov
movsl
arpl
push
repnz
mov
ja
push
pushf
inc
pop
lcall
gs
xchg
popa
out
push
insl
cmp
push
xchg
fs
out
daa
pop
push
push
add
sub
dec
loopne
mov
pop
mov
cmp
cmp
pop
pop
insb
movl
cwtl
lret
pop
enter
inc
cmpsb
adc
push
pop
in
into
mov
sarb
lret
and
add
sbbl
ljmp
cmp
mov
jg
xchg
call
and
dec
repnz
lods
loop
int
in
push
and
sahf
insb
aam
xlat
mov
dec
pop
mov
test
call
or
push
lretw
pop
fisttpll
cmp
xchg
and
dec
xchg
mov
cmp
dec
scas
inc
xor
movsl
cmpsb
mov
xor
mov
mov
and
xchg
or
push
xlat
es
stos
out
movsl
jne
add
xlat
enter
fs
inc
xor
cmp
sub
jl
push
xor
mov
lret
into
jmp
xchg
std
out
mov
in
xor
jnp
mov
hlt
sahf
dec
fstpl
pop
imul
fcomip
pop
push
xor
bound
xchg
or
into
sbb
xchg
push
sbb
push
out
pop
dec
and
adc
push
or
fmull
jle
shrb
jo
xchg
call
out
jae,pn
xchg
push
mov
cmp
scas
adc
dec
push
jmp
cli
mov
mov
fwait
or
dec
andl
inc
sahf
mov
lahf
push
cmpsb
in
stos
mov
xlat
lret
popa
and
dec
mov
push
es
mov
mov
or
add
mov
repnz
or
dec
arpl
push
pop
lods
fidivrs
push
enter
mov
dec
scas
popa
fsubrp
imul
in
inc
js
pop
mov
in
call
xchg
xlat
push
jle
pop
stos
push
jnp
push
into
js
push
mov
aaa
jmp
sti
outsl
ds
in
mov
cli
or
cmp
ret
dec
pop
popa
push
ljmp
sahf
int3
fdivs
in
out
mov
xchg
jmp
inc
in
inc
fmul
std
mov
push
xor
gs
mov
sbb
jmp
inc
add
dec
sahf
mov
outsl
jmp
sti
fistpll
data16
lahf
xor
lods
fwait
pop
adc
out
stos
stos
jp
inc
push
scas
and
popa
or
add
daa
sar
jmp
sahf
stos
popf
int3
into
xlat
jno
mov
xor
subl
stos
fsubrs
in
out
push
sub
push
push
ljmp
outsb
mov
jmp
cld
sbb
ss
xor
mov
mov
ds
shrb
sahf
es
lret
push
mov
cli
in
stos
stos
jp
inc
push
fldt
ljmp
push
bnd
sahf
cmpsb
lods
int3
loop
jne
mov
pop
in
call
leave
mov
dec
loop
sahf
ljmp
mov
jmp
cld
add
dec
push
mov
in
call
xchg
jecxz
jb
adc
data16
iret
fisttpll
push
push
mov
and
push
shlb
inc
mov
jae
mov
rolb
shll
xchg
daa
push
add
mov
inc
pop
stos
and
popa
push
repz
push
iret
lds
xor
popa
xchg
ljmp
mov
sbb
jmp
inc
arpl
int
in
call
xchg
push
push
mov
inc
cs
notl
jae
shrl
jp
inc
inc
fcmovnb
dec
dec
popa
or
sbb
xor
icebp
jmp
sahf
stos
mov
das
mov
adc
stos
dec
mov
mov
push
pop
xor
mov
ljmp
das
cmpsb
mov
pop
jns
andps
out
xchg
outsl
xor
in
xchg
jmp
sti
addr16
shl
shll
setle
sbb
push
mov
push
cli
in
stos
mov
scas
mov
ljmp
shl
jmp
sahf
sahf
cltd
int3
jge
repz
sbb
xchg
arpl
ljmp
rorb
cld
out
rcrl
ror
std
xor
mov
fwait
jmp
sti
lret
ds
rorl
in
sbb
cmpsb
adc
xchg
sti
outsl
ds
in
adc
jp
pop
push
mul
xchg
stos
lcall
mov
ljmp
push
sub
fcomps
in
out
adc
xchg
call
push
push
inc
ljmp
jb
test
jmp
cld
mov
push
rclb
shll
xchg
xor
xchg
stos
lcall
mov
ljmp
push
loop
inc
sahf
xchg
das
ljmp
adc
xchg
call
jae
aad
stos
mov
in
call
xchg
mov
adc
out
stos
ds
dec
mov
call
xchg
jnp
push
out
stos
jb
cmove
jmp
dec
cli
mov
ds
xchg
shll
jb
mov
dec
das
push
mov
pop
inc
out
lds
outsb
ljmp
jmp
cld
out
rcrl
ror
jmp
fwait
jmp
sti
sarl
push
shlb
sahf
push
sub
push
fldl
mov
das
clc
dec
sahf
repnz
int3
xchg
fsubrs
in
out
pop
add
out
stos
inc
arpl
call
xchg
jnp
dec
out
stos
outsb
jnp
inc
adc
pop
push
dec
and
or
repnz
rcll
popf
int3
rcl
imul
es
dec
push
pop
ljmp
jle
popf
jecxz
gs
ret
ds
rclb
shll
in
testl
xchg
push
lcall
inc
pop
scas
mov
cmp
ljmp
shl
jmp
sahf
xchg
mov
loop
subl
add
and
push
or
sub
ljmp
sub
inc
aam
fsubr
das
mov
call
xchg
mov
stos
ds
arpl
xlat
in
cmp
sti
ja
push
rcl
shll
mov
adc
int3
out
add
aaa
stos
xchg
jp
inc
ret
mov
ljmp
adc
out
dec
cmpsb
dec
mov
mov
push
pop
xor
mov
dec
mov
fcomp
das
lcall
pop
add
lock
sub
cmc
xor
loope
jmp
sti
ja
push
sarb
sahf
xor
xchg
sub
mov
lahf
stos
stos
jp
inc
push
xlat
dec
dec
popa
adc
and
pop
push
bnd
sahf
xchg
movsl
int3
jp
jne
lret
mov
push
xchg
out
int3
dec
insb
sub
jmp
mov
out
stos
cmpb
es
dec
cld
mov
jle
pop
sarl
add
dec
mov
pop
cld
mov
out
cmp
ror
int
outsb
mov
jmp
cld
sti
inc
fidivrl
dec
cmp
jne
lret
pop
push
inc
in
push
adc
fisttpll
jbe
jne
jmp
cld
and
sub
sti
ljmp
mov
out
stos
push
jnp
mov
repnz
stos
xchg
jp
inc
mov
lret
ret
popa
adc
xor
sahf
not
int3
lcall
in
call
arpl
repnz
cs
jle
cltd
ja
dec
cld
fistpll
data16
jg
jno
out
lods
fldenv
iret
push
mov
rcrl
jmp
and
mov
mov
xlat
push
outsb
repnz
xchg
mov
xchg
sbb
pop
jp
mov
mov
iret
hlt
xchg
cld
add
inc
cmc
fwait
sbb
push
xchg
xor
lahf
lret
push
lods
dec
mov
sbb
add
jle
repnz
xchg
add
pushf
sbbb
adcl
or
mov
push
and
sbbl
in
pop
mov
pushf
jb
mov
xor
push
rcrb
cmp
scas
jb
cmpsl
mov
add
adc
out
into
jne
fdiv
out
adc
mov
clc
xor
neg
cld
lcall
fs
sub
imul
xlat
fistpl
xchg
pop
sti
arpl
clc
inc
fs
fidivl
xor
mov
das
jp
fstpt
stos
inc
ja
push
push
fcmovnbe
stos
adc
lock
shrb
shl
xchg
stc
cmpl
mov
mov
fsubrl
push
lods
sbb
ret
adc
and
std
dec
xor
ljmp
sahf
and
mov
inc
fs
pop
shl
cmp
dec
ret
sarb
fsubrl
cmp
rcr
out
into
pop
lret
add
fsub
push
push
nop
mov
pop
out
pop
sub
cmp
xor
test
sti
cs
lret
dec
dec
jp
cmp
sbb
imul
popf
dec
ljmp
mov
inc
repz
and
mov
cltd
or
out
loop
mov
mov
jb
mov
jmp
bnd
xor
test
sbb
jno
inc
mov
fcoml
mov
push
adc
add
iret
fstpl
push
pop
lods
dec
mov
fistpl
xchg
dec
mov
sub
mov
pop
add
cwtl
fcmovu
and
shrb
out
xor
lahf
push
dec
dec
mov
mov
pop
mov
mov
sti
dec
scas
fsubl
insl
sub
cmc
sub
lret
sub
mov
xchg
mov
fs
cmpsb
lcall
adc
jg
outsb
dec
int3
pop
addr16
xchg
jae
das
mov
add
sbb
xor
stc
cli
jmp
xchg
movsb
push
cmpsb
xor
out
js
loop
outsb
xchg
dec
mul
sub
mov
xor
adc
stos
inc
add
ss
rorl
inc
jnp
and
test
scas
adcb
xchg
inc
push
mov
fisttpl
inc
xor
repz
stc
cli
mov
daa
iret
jmp
or
cs
adc
negb
out
jo
xchg
push
push
adc
icebp
jl
outsb
inc
lret
push
and
mov
mov
pop
inc
adc
insb
mov
imul
inc
adc
inc
sub
sub
std
jecxz
iret
jge
outsb
imul
inc
jb
mov
push
out
mov
jge
push
rorb
iret
insl
faddl
arpl
shll
ds
loopne
dec
hlt
idiv
mov
fidivl
sub
mov
loope
into
int
jle
sbb
fcmovne
lret
xchg
pop
pop
lret
mov
push
mov
dec
sbb
aas
popf
stos
or
test
mov
insl
es
mov
stos
add
notb
mov
js
movsb
mov
adc
in
into
out
xchg
jl
jae
out
add
push
cmpl
add
and
inc
push
xchg
fstps
fidivrl
push
xor
lret
lods
inc
cmp
into
mov
mov
mov
negb
scas
notb
shrl
xorl
in
stos
jmp
sti
jge
movsb
outsb
pop
adc
jnp
mov
inc
jg
imul
nop
in
or
fmull
mov
inc
sbb
jo
lret
xchg
divl
mov
insl
mov
or
xchg
js
pop
push
xor
or
scas
or
pop
mulb
dec
pop
aad
jne
inc
push
into
nop
daa
je
mov
jge
mov
mov
mov
dec
mulb
pushf
mov
sub
popa
dec
ljmp
es
xchg
xchg
int3
lahf
xor
fistpll
outsb
xchg
mov
lret
push
loopne
lods
mov
mov
sub
call
inc
sbb
xchg
and
lret
cmc
add
xchg
jmp
iret
das
dec
out
out
test
fisubs
loopne
imul
sahf
negb
mov
loopne
cmpsb
stc
push
stc
cmp
arpl
testl
jbe
jbe
mov
pop
push
push
adc
sbb
out
adc
push
mulb
adc
xchg
stc
lds
push
cmp
add
ss
push
adc
sub
incb
ss
add
and
adc
mov
mov
cwtl
loopne
cmp
loopne
cmp
leave
cmp
fnstcw
push
loope
cmp
loope
cmp
loope
cmp
loope
cmp
loope
push
fmuls
sub
mov
mov
cwtl
loopne
cmp
cmp
das
jbe
adc
sub
gs
xor
out
push
jp
dec
xchg
shrb
push
adc
sub
fadds
fisubrs
xchg
pop
sub
xchg
jl
cmp
add
nop
add
push
mov
inc
xchg
push
sub
add
jecxz
imul
and
sub
lock
test
add
cmp
mov
inc
cmp
dec
fidivrs
cmp
in
ss
push
je
push
sub
or
dec
pop
out
lods
loope
add
loop
xchg
lods
popa
aam
idiv
or
pop
ficomps
daa
inc
jmp
mov
push
inc
test
jae
mov
push
outsb
hlt
and
dec
add
ds
cld
cmp
xchg
push
jo
mov
fcom
outsb
jmp
loop
cmp
leave
jmp
sub
ds
mov
mov
loope
cmp
fs
push
loope
xchg
push
shll
mov
gs
xor
in
mov
dec
mov
jno
xchg
out
les
lock
jge
lds
sbb
insl
ficoml
in
jle
push
insl
push
push
es
inc
loop
es
dec
cmp
imulb
inc
mov
rol
push
dec
mov
or
inc
cs
xor
cmp
daa
loopne
push
dec
nop
fisubrl
jg
pop
test
sti
in
aad
insb
xchg
stos
loopne
addb
scas
dec
adc
loop
fmuls
jecxz
mov
testl
outsb
lods
dec
movsl
scas
lret
out
add
out
sbbl
sub
mov
jle
outsl
add
cs
call
pop
sub
jge
mov
add
pop
lahf
fs
push
mov
dec
into
incb
das
data16
dec
scas
inc
or
jp
fisubrl
out
adc
in
cmp
psubusw
pop
hlt
xchg
das
mov
in
cld
aam
pop
stc
or
das
lcall
cmp
js
lds
mov
pop
aam
stc
fsubs
adc
or
push
push
negb
insb
std
pop
xor
mov
mov
xor
cmp
rcr
and
jp
xor
popa
das
pop
das
add
xchg
mov
push
or
add
cmp
add
cmp
dec
cmp
add
test
xor
mov
fisttpll
fisubrs
or
cmc
ret
sbb
cmc
jnp
mov
cmc
cmp
vsubpd
and
bound
cmc
cmp
vcvttps2dq
aad
imul
add
inc
add
and
add
add
inc
aad
xchg
and
mov
add
mov
jo
mov
pop
fldenv
lods
fnstenv
mov
fsts
sbbl
inc
push
lcall
jg
popa
pop
jns
adc
fdiv
cmp
enter
mov
jne
les
jne
ret
jg
rol
mov
adc
sbb
cmp
std
cmp
xor
and
jecxz
sub
cmp
mov
out
mov
mov
call
sub
out
enter
mov
sub
sub
or
or
psubb
pop
call
inc
add
enter
mov
cld
mov
cwtl
cld
js
mov
call
ds
cld
mov
aas
cmp
sbb
sub
or
sbb
clc
stc
cmp
push
push
in
sbb
testb
xchg
imulb
mov
add
cmp
mov
cmp
add
cmp
add
cmp
add
xor
clc
jmp
xor
add
fdivr
cmp
imull
les
jne
les
jne
ret
addr16
ret
push
jne
ret
inc
jne
les
jne
les
jne
les
jne
loope
inc
push
fs
push
cmp
test
mov
push
mov
js
mov
call
fs
loop
xchg
xlat
add
sub
in
cmp
icebp
popa
mov
xor
add
and
add
ss
mov
mov
xchg
fstps
aad
ljmp
and
inc
push
add
and
xchg
pop
adc
inc
sub
and
lea
xchg
sub
add
int
push
push
fadds
test
xchg
inc
lods
js
aaa
jne
les
jne
les
jne
jne
subl
out
dec
ret
cmp
jne
les
jne
les
jne
ret
ja
fadd
addr16
ret
push
jne
ret
inc
jne
les
jne
les
jne
lahf
pop
int
fsubl
mov
jne
cmpb
mov
js
mov
cmc
adc
sbb
sti
icebp
enter
aad
iret
inc
daa
repnz
xor
loop
mov
aas
ret
stos
jns
idivb
mov
mov
outsb
mov
adc
mov
repz
mov
cmp
add
cmp
ljmp
add
mov
mov
mov
ljmp
jno
cmp
and
push
add
cmp
add
xor
repnz
add
jecxz
imul
and
sub
add
cmp
mov
jb
mov
jne
ret
xorl
push
loope
cmp
lcall
out
clc
das
pop
out
add
and
inc
shl
cmpsb
inc
mov
not
inc
xor
inc
push
mov
inc
pop
imull
inc
testl
pop
adcb
cld
ss
or
inc
mov
dec
xchg
adc
xchg
sbb
cmc
popf
sbb
cmc
movsl
sbb
cmc
lods
sbb
cmc
popa
sbb
cmpsl
cmc
jne
mov
js
mov
js
sub
add
adcb
jle
ror
dec
fcom
lcall
fldl
pop
fyl2x
jl
in
ret
cmp
jne
les
jne
nop
push
inc
into
adcl
jp
or
aad
in
inc
in
dec
pop
out
adc
sbb
cmc
mov
jg
mov
sbb
out
js
mov
or
or
jb
rcr
aad
insb
xor
lahf
inc
js
lahf
cmp
lahf
imul
jg
mov
mov
js
mov
or
mov
sbb
mov
jmp
mov
repnz
cli
sbb
inc
shl
xchg
cmp
loopne
cmp
iret
cmp
cmp
fistpll
pop
loope
aas
push
mov
sub
sub
sub
out
push
sub
in
inc
pop
ficompl
aaa
enter
add
shlb
cmpsb
add
xchg
ss
jp
into
add
ss
add
ss
add
incb
ss
add
and
divb
cmp
add
xor
lcall
jle
xchg
test
inc
test
push
mov
push
mov
gs
cli
fs
mov
push
or
pop
in
stos
gs
xchg
gs
jle
mov
xchg
fisubs
fs
scas
fs
mov
dec
loope
or
cmc
sub
jg
sarb
push
fidivrl
pop
loop
xor
dec
stos
inc
cmp
add
cmp
add
mov
fidivs
xchg
xorl
jne
les
es
pop
sub
push
pop
sub
push
out
daa
cmp
cmp
add
cmp
fsin
imull
add
fnstenv
and
fnstcw
and
push
xor
fnstcw
mov
call
xor
icebp
insl
push
mov
inc
cmpsl
mul
inc
push
lret
divl
inc
pop
mull
inc
inc
imull
inc
ljmp
repnz
cli
fistpll
cmp
loopne
cmp
lret
inc
push
or
into
sub
out
sub
out
mov
add
or
stos
insl
jb
mov
mov
ret
lahf
rolb
push
sub
mov
int
cs
jl
out
aad
pop
leave
push
mov
or
or
push
pop
cli
daa
push
sub
cld
fisubrl
mov
mov
mov
mov
scas
add
fnstsw
cmp
in
jl
and
rclb
xor
xlat
daa
inc
std
add
es
add
mov
outsl
lea
add
jne
les
sub
dec
jne
les
jb
fsubl
scas
movsl
pusha
push
fistpll
pop
out
xor
sti
call
ret
cmp
sbb
cmp
rorl
sti
mov
cmp
sti
mov
jns
adc
cs
pop
outsb
test
mov
nop
add
sub
sarl
mov
out
sub
jl
psubd
or
push
sarl
rorl
xchg
loope
cmp
push
cmp
cmp
mov
daa
sbb
leave
in
xchg
ss
push
push
jns
ret
add
jne
mov
push
jl
ret
dec
aam
dec
push
cmpl
ljmp
xor
pop
fwait
mov
jae
jle
cmp
and
jl
les
sbb
cld
inc
je
xchg
fwait
pushf
push
std
shrl
lret
cmc
arpl
xlat
jg
dec
sti
sti
cmp
ja
imul
inc
dec
cmpl
sub
cmp
je
xchg
outsl
lods
shl
sbb
ss
or
imul
xchg
je
sub
or
sbb
cli
mov
xorl
adc
lahf
rcr
adc
shl
pop
xor
into
cmp
adc
fcomp
ds
scas
enter
aad
or
loope
inc
push
or
mov
clc
out
cmpsl
sbb
outsl
pop
mov
hlt
jge
pop
popf
cld
and
mov
and
xor
or
jno
sub
loope
sbb
push
xor
int
sub
clc
cmpsl
pop
lds
daa
movsb
in
jecxz
jbe
ds
cld
adc
mov
cltd
aaa
in
add
call
cmp
add
jle
leave
xchg
and
insl
add
jecxz
imul
adc
add
xchg
mov
mov
xchg
cwtl
stos
adc
jb
xchg
push
jge
mov
adc
aad
add
out
mov
pusha
out
and
sub
or
sbb
add
loop
addr16
xor
cmp
loope
cmp
mov
pop
and
sti
daa
mov
jl
data16
push
mov
loope
or
rorl
add
and
notl
psubusb
inc
cmp
ljmp
push
sbb
inc
fildl
push
cli
and
sti
test
and
xchg
xchg
test
adc
ret
push
jno
lods
sub
out
enter
cs
enter
in
lcallw
sub
push
cmp
push
lods
das
push
stc
cmp
push
addl
leave
cld
cmp
push
mov
jbe
ss
mov
xchg
adc
add
mov
xor
enter
or
sbb
loopne
add
xor
cli
mov
or
pop
xchg
loopne
xor
lahf
sub
lahf
inc
js
sarl
imul
nop
dec
or
lcall
and
rcr
dec
add
ficoml
inc
cld
sub
push
sbb
and
repz
leave
push
out
cltd
mov
push
imul
mov
push
xchg
mov
lcall
ror
xor
cmp
fstpt
data16
test
jae
push
mov
repz
mov
sti
add
jne
lea
loope
xchg
add
cmp
out
pop
mov
push
adc
aam
stos
sub
mov
loop
cmp
push
jo
loope
sub
frstor
ds
jbe
les
inc
pop
push
push
fisubl
ds
ja
hlt
inc
adc
das
addl
cmp
imul
mov
cld
add
ss
inc
inc
push
add
mov
rcr
jmp
cmp
push
cmp
dec
sub
daa
das
push
add
aam
in
popa
ret
fldt
cmp
or
pusha
cmp
fnstsw
enter
sub
fisubrs
movsb
cld
loop
xchg
cld
rol
sti
ss
repz
mov
fstps
sbbl
and
aaa
push
insl
fstpt
pop
sbb
sub
or
sbb
sti
xchg
sahf
loope
test
xchg
mov
ljmp
lods
divb
pop
test
and
and
add
loopne
in
popa
jle
dec
xor
in
inc
dec
or
gs
sbb
jbe
mov
mov
in
addr16
lret
or
sub
cmp
cltd
sbb
into
fs
or
scas
cmc
insl
sbb
sub
sar
imul
jecxz
push
push
cmp
cmc
sarb
xchg
cmp
xchg
cmp
add
aad
fildll
sub
inc
adc
pop
cs
jmp
xor
xorb
push
push
jmp
ffree
dec
adc
shlb
sub
dec
push
out
sbb
xor
out
ficoms
jo
xlat
xor
dec
les
subl
es
sbb
loope
inc
jecxz
fdivrs
mov
xchg
dec
dec
cmp
jnp
jb
jp
jl
std
dec
cmp
mov
lods
jns
adc
cmp
fs
repnz
push
dec
cmp
divl
inc
lret
mov
pop
sti
gs
frstor
out
std
fstpt
fdivr
dec
scas
leave
ljmp
ljmp
ficomps
xlat
inc
cs
mov
pop
add
ja
hlt
fwait
rol
mov
pop
in
pop
push
fldcw
insb
hlt
outsl
sahf
movsl
dec
js
ret
mov
sub
xchg
stc
lods
inc
xchg
loope
test
pop
push
or
pop
cli
sti
shlb
repz
cmp
and
add
add
add
test
cmp
xchg
out
jp
and
dec
fdivr
data16
jp
push
test
ret
js
aad
in
inc
add
cmp
adc
xor
and
out
int3
fidivs
adc
cmp
mov
daa
push
repnz
cmp
fstl
mov
add
xchg
daa
ds
jp
aad
aas
jne
imul
rorb
fmul
cmp
jbe
mov
lea
mov
cmp
js
cmp
adc
cmp
call
into
jmp
adc
push
cmp
push
cmp
mov
jle
dec
xor
ds
imul
inc
pop
divl
inc
es
fsts
into
mov
enter
sub
ds
sahf
arpl
out
add
sahf
fiadds
ss
add
das
mov
cmpl
loopne
and
xor
xor
inc
push
imul
fwait
test
push
andl
mov
repnz
xchg
push
aad
adc
sbb
repnz
cmovb
aad
popa
es
rorl
je
jl
lods
repnz
stos
cmp
mov
mov
stos
jecxz
stos
xchg
mov
sahf
jne
mov
lea
push
pop
movsl
les
rep
cmp
out
pop
add
ret
mov
push
xlat
leave
pop
fisttps
test
stos
aas
push
or
push
enterw
or
cmp
sub
mov
test
jne
leave
jne
shll
les
hlt
push
mov
xlat
and
sbb
les
add
and
jne
ret
adc
dec
or
stos
add
mov
aas
into
adc
mov
lcall
mov
jg
ret
aas
push
cmpsb
loope
cmp
sti
mov
ljmp
xor
mov
mov
mov
mov
das
mov
adcb
lahf
popa
data16
pop
iret
dec
jl
pop
out
sbbl
pop
fadd
lds
nop
lods
adc
mov
mov
out
jle
mov
inc
ret
into
adc
push
sbb
push
pop
xchg
mov
andl
dec
jle
arpl
aas
andl
imul
or
daa
ss
jbe
sar
and
and
and
dec
call
mov
push
js
aam
imul
lcall
mov
scas
inc
jp
mov
add
loope
cmp
out
loope
cmp
xor
lods
jae
pusha
add
pop
cmp
xchg
mov
mov
mov
loope
aas
dec
mov
into
sub
mov
ret
push
mov
aad
out
sub
enter
aam
dec
xor
iret
xor
movl
fidivs
inc
test
lods
dec
dec
adc
aaa
sbbb
outsb
add
fnstenv
enter
aaa
xchg
cmp
loopne
aas
sahf
stos
mov
cmp
aas
push
stos
adc
icebp
addr16
mov
or
cmp
or
sbb
pop
clc
sti
out
add
aaa
mov
jmp
jo
shrb
dec
mov
out
xor
add
ss
push
iret
sub
sbb
nop
xor
cmpsl
ret
idivl
mov
cmp
mov
stos
rcrl
nop
mov
push
mov
lock
pop
sbb
sub
ss
sub
fsubl
imul
outsl
decl
add
fbld
xchg
sub
pop
pushf
pop
lahf
pop
cld
sub
push
push
adc
mov
mov
cld
outsb
mov
push
mov
pop
loope
cmp
mov
push
stos
pop
sub
decb
sar
arpl
fcos
pop
shl
aam
ds
mov
outsl
repnz
lods
divl
cmpsb
pop
jp
mov
rcrb
pop
xchg
push
lea
adc
and
lret
lahf
sarb
outsl
pop
das
test
sti
popf
out
xor
xor
outsb
aas
mov
fcompl
stos
stc
push
mov
and
nop
enter
mov
adc
dec
or
aam
pop
jge
es
repnz
les
dec
mov
xchg
cltd
or
dec
jmp
mov
dec
sbb
inc
push
pop
popf
push
cmp
in
mov
mov
call
sub
xchg
sbb
xchg
popf
adc
dec
mov
push
push
pop
jmp
sub
out
push
sub
ds
lcall
sti
roll
jae
jge
scas
adc
xchg
rolb
incb
or
js
cmp
ja
js
rol
sub
loope
cmp
loope
inc
sbb
stos
cmp
ficoml
sub
cmp
dec
mov
xchg
xor
inc
dec
aam
sub
cmpsl
jbe
ds
or
fisubl
sbb
sbb
aas
fisttpll
lahf
stos
mov
stos
aam
rorl
and
cmp
add
mov
das
fmul
rorl
lods
cltd
rol
ret
jl
imul
xor
fstpt
js
mov
sbb
mov
sti
xor
cld
divl
outsb
xchg
test
in
jl
loope
dec
out
add
repz
xor
pop
popw
mov
mov
mov
pop
xlat
clc
jb
dec
aad
dec
push
mov
icebp
xchg
inc
dec
cmp
adc
cmp
mov
mov
dec
vcvtps2pd
cmp
xor
push
daa
sbb
aas
add
sbb
jg
mov
loop
fimuls
or
and
jnp
enter
divb
insl
jbe
adc
mov
lcall
mov
out
push
lret
aam
sbb
pop
arpl
push
jge
sub
xor
es
and
inc
pusha
xchg
mul
in
xor
outsb
dec
lock
jecxz
pop
cmc
pop
fcmovbe
rcrb
sub
cld
nop
cmpsb
dec
nop
or
jb
push
push
shll
icebp
test
ss
mov
adc
imul
rep
adc
fistpl
pop
fsubl
ret
movsl
in
push
cmp
sbb
fadds
test
loope
mov
jo
xor
das
mov
pop
cwtl
cmp
sub
jecxz
cld
insl
js
push
push
aad
xlat
fcomip
push
add
mov
push
sbbb
cld
shr
jmp
stos
inc
orb
mov
lea
shl
into
andl
scas
add
fnstenv
push
mov
in
out
jns
int3
in
mov
add
pop
mov
adc
sub
xor
jmp
popa
les
rcrl
pop
cmc
dec
or
aam
adc
add
testl
lock
pop
pusha
movsb
lret
pop
rcl
sub
inc
out
arpl
jmp
cmp
xor
push
in
jns
add
nop
cmp
push
enter
pusha
es
push
cs
add
and
pop
jmp
loopne
xor
mov
jno
imul
and
push
push
push
outsb
jl
xchg
je
xor
aas
inc
repnz
xor
sbbl
gs
jp
jo
in
mov
adc
sbb
loope
nop
adcb
sub
jecxz
int
dec
mov
std
add
jp
pop
dec
cld
cs
add
sar
sub
test
test
add
aaa
dec
bound
rcl
pop
adc
mov
jb
lret
mov
inc
inc
out
das
fsubs
pop
hlt
pop
and
hlt
or
xchg
movsl
mov
loopne
pop
dec
cmp
mov
out
inc
test
sahf
dec
push
or
cld
add
mov
nop
addb
inc
shl
inc
test
fsub
xchg
cwtl
out
jge
xchg
aas
fcomps
rorl
sbb
lds
pop
pushf
sbb
lret
xor
sub
repz
nop
je
scas
mov
int3
js
cltd
inc
lcall
mov
into
nop
stos
rcl
scas
mov
push
mov
mov
out
in
sub
es
daa
mov
sub
push
push
in
ss
push
outsb
lea
test
adc
lcall
cmp
push
mov
popa
adc
std
xchg
mov
xchg
aad
jecxz
loop
sub
mov
dec
adc
sub
or
mov
sub
add
push
inc
xchg
mov
jo
cmc
mov
or
out
gs
inc
jl
sahf
mov
push
and
sar
in
adc
push
mov
xchg
mov
stos
sbb
hlt
out
xchg
loope
push
or
and
lcall
mov
dec
sub
xchg
mov
loopne
push
sub
add
sarb
push
scas
dec
in
cmp
stc
mov
lock
sbb
int
mov
imul
aad
pop
repnz
inc
ss
loopne
push
mov
lock
inc
iret
push
test
push
adc
jmp
jle
lret
flds
sub
and
sub
mov
test
loope
bound
push
mov
dec
shrl
cmp
mov
lea
fcom
test
sub
cwtl
mov
fsts
push
loop
mov
adc
subb
dec
repz
xchg
test
repz
sbb
xchg
int
lds
pop
sub
add
aad
aam
and
xor
dec
push
idivb
mov
fs
sbb
mov
out
fbld
mov
ret
push
aad
inc
sub
fwait
sbb
stos
and
cmp
divb
orl
ss
or
into
loop
xor
int
and
ss
xor
adc
jg
icebp
andl
aad
xchg
movsb
cli
mov
dec
sti
out
test
adc
and
cwtl
jne
js
xchg
xorb
out
aaa
sub
jmp
pop
push
out
ds
cmp
sub
stos
dec
dec
repz
mov
and
jmp
sub
push
inc
mov
push
jnp
enter
or
xor
in
sbb
js
mov
or
or
jge
lcall
adc
mov
lds
mov
add
inc
loope
es
or
cmp
out
xchg
sbb
js
mov
adc
mov
inc
int
pop
mov
loope
loop
dec
xchg
jbe
push
cmp
sbb
mov
or
push
addr16
cwtl
sbb
add
mov
and
jne
push
popf
and
stos
add
adc
push
fwait
cli
cmp
cmc
xchg
sahf
fdivrs
loope
dec
dec
dec
and
and
iret
hlt
cmc
call
inc
sub
rcl
shr
test
jne
mov
ds
jb
inc
inc
in
inc
jbe
sbb
push
into
and
out
xor
lahf
pop
sahf
xchg
sbb
popa
push
inc
sbb
inc
pop
es
test
pop
xchg
sbb
ss
sbb
cmp
rclb
dec
sahf
inc
push
xchg
lcall
push
pcmpeqb
xchg
sub
into
push
pop
jb
pop
aad
cltd
push
cmp
stos
mov
lret
cmp
mov
cmpw
add
out
out
lods
inc
cmp
pop
inc
dec
xchg
mov
jmp
xor
dec
lret
pop
dec
ucomiss
adc
aam
mov
jg
push
dec
jbe
shl
cmc
adc
or
push
das
xchg
cmp
and
aas
inc
es
sbb
pop
sahf
call
lds
dec
or
fsts
orb
pop
dec
popf
add
mov
add
adc
push
outsl
movsl
cmpsl
add
lahf
cmp
add
ss
push
iret
mov
cmp
mov
out
push
fs
movsb
jle
orb
mov
adc
xor
dec
cmpsb
in
repnz
xlat
push
dec
pop
aad
cli
push
test
insb
ljmp
in
adc
pop
negl
out
imul
clc
cli
and
or
notb
sarl
push
sbb
cwtl
icebp
cltd
xor
sub
jecxz
cmp
mov
rol
fiaddl
rolb
enter
sub
xchg
add
mov
mov
pop
rcr
push
jge
insl
xor
sti
mov
xorl
xchg
arpl
push
aad
and
bnd
xlat
flds
sbb
sbb
iret
sti
dec
in
aam
inc
fildll
aaa
xchg
add
sahf
test
jae
dec
fnstcw
push
out
popa
jne
cltd
xchg
fwait
and
imul
jp
fcoml
jecxz
mov
pushf
or
stc
sti
loope
or
pop
pop
adc
outsb
mov
adc
data16
sbb
or
sti
jne
loopne
add
in
mov
mov
mov
adc
js
mov
or
mov
test
and
out
fs
push
aas
stos
negb
jbe
sub
gs
movsb
jnp
push
jb
bound
fmul
and
cmpsl
out
mov
mov
aam
out
in
sub
ss
lcall
xchg
fiadds
je
scas
dec
pop
pop
xchg
xor
jl
in
in
xor
popa
shl
popa
inc
clc
int
xor
xchg
dec
push
jne
sbb
cmp
inc
lods
and
sti
xor
out
cmp
roll
lods
mov
and
movsb
adc
sti
hlt
stos
or
jnp
fadds
jge
push
out
pop
call
dec
aaa
psllq
xchg
add
loope
dec
mov
sub
mov
jmp
je
jo
add
jmp
xor
ss
rcr
mov
xor
std
mov
mov
push
push
and
stc
and
jns
adc
xchg
xor
sub
fucomi
xor
rclb
mov
nop
xor
adc
imul
ret
inc
and
xchg
mov
mov
push
push
jb
std
pushf
cmp
mov
iret
sub
out
xchg
ss
fisubs
jno
adc
test
and
movl
mov
in
dec
nop
pop
fstl
jns
adc
push
lret
mov
sub
sub
xor
pop
cwtl
adc
loop
adc
sti
les
bnd
xchg
loopne
and
add
xchg
xor
ret
fidivs
or
cmp
out
add
andb
repnz
hlt
in
cmc
xor
cmp
cmp
jb
cmp
aam
ss
push
int3
sbb
popf
add
repnz
push
cli
movaps
nop
nop
mov
lret
pop
dec
xor
cmp
and
stos
repz
std
jae
push
pop
inc
adc
mov
in
repz
ret
xlat
repnz
inc
and
popa
add
xchg
fstp
ret
cmpsb
dec
push
stos
sbb
jg
sub
add
xchg
out
inc
xor
in
outsb
xor
mov
xlat
lret
cmc
fldcw
leave
das
cmp
pop
outsb
iret
mov
pop
push
es
ret
fistpll
aaa
adc
jns
adc
mov
adc
stos
jecxz
pop
push
addr16
int3
dec
pop
cmp
mov
movl
jne
push
rorl
imul
add
xorl
shll
mov
jecxz
jbe
mov
imul
aas
insl
push
dec
in
mov
adc
inc
std
leave
outsl
jl
mov
es
xchg
jae
mov
arpl
dec
lods
clc
hlt
add
xor
mov
outsl
int3
xchg
jecxz
adc
inc
mov
mov
subl
pop
fdivrp
insl
leave
loopne
jp
xchg
xor
sub
mov
push
ficomps
sbb
xchg
loop
sbb
mov
and
push
out
cmc
jns
sub
mov
imul
pop
and
xor
push
pop
add
mov
fadd
push
push
pop
sbb
lds
outsl
scas
std
xorl
cmc
and
cmp
mov
dec
dec
mov
mov
cmp
roll
ds
and
aaa
xchg
mov
cmp
jmp
sub
xchg
int3
call
lahf
cmp
pusha
enter
adc
mov
push
cmp
xor
jb
mov
mov
bound
mov
loope
lcall
mov
sti
aaa
cld
js
js
xor
andb
cltd
cwtl
fisttps
test
jb
outsl
mov
movsl
aas
inc
jo
push
add
xlat
dec
js
std
pop
and
sub
or
lods
sub
loope
cmpsl
xchg
rcrb
jnp
fisttps
icebp
lods
adc
clc
mov
sbb
inc
imull
fstps
cmpsl
adc
or
mov
in
sub
cmp
pop
lods
scas
push
ss
in
mov
fld
jl
ret
mov
lock
sub
call
sti
data16
shlb
in
and
mov
or
iret
push
and
pop
cld
scas
cmp
rcl
repnz
jne
and
add
fcoms
rolb
lock
add
lock
imul
in
push
out
rorb
lahf
adc
mov
aam
dec
cmp
sti
in
xlat
inc
add
rcl
push
sbb
mov
popf
mov
mov
iret
shrl
xchg
repnz
and
jbe
testb
cmp
mov
pop
pop
cmpsl
pop
jg
fcoms
sti
inc
into
ret
imulb
leave
popf
mov
mov
sub
lock
adc
add
push
jecxz
aad
in
movsl
in
loope
dec
xchg
mov
or
lods
ss
pop
pushf
xadd
movsbl
cli
lea
sub
cmp
or
sbb
nop
fldl
test
mov
and
push
in
and
bound
in
push
cltd
movsb
sti
xor
dec
repz
cmp
in
js
adc
push
pop
mov
es
insb
loopne
subb
daa
data16
sub
ret
add
out
je
pop
pop
mov
cmp
idivb
adc
mov
cmc
loop
outsb
mov
xchg
subl
mov
mov
push
mov
cmpsb
pop
fisubs
cmp
push
psadbw
push
loope
sbb
scas
std
and
js
add
inc
inc
ret
push
jae
mov
push
xchg
dec
xor
test
mov
jbe
dec
cmp
adc
push
add
pop
int
inc
incb
outsb
sbb
cwtl
mov
jp
mov
push
loope
dec
pushf
cld
cmc
inc
sbb
and
je
xor
hlt
int
cmp
sbb
add
loope
fiadds
movsb
je
testb
jae
cld
and
push
sbb
ret
push
add
push
pushf
in
setl
lods
andb
out
fldcw
ss
in
sti
sti
clc
sahf
ret
xchg
inc
arpl
addr16
ret
aaa
lcall
cmp
icebp
push
rcll
ficompl
jmp
aas
mov
arpl
xchg
mov
in
cmp
in
out
xor
sarb
andl
loope
outsl
jo
sub
scas
adc
mov
psubsb
sar
shrb
push
sbb
inc
mov
adc
adc
push
xchg
stc
push
fs
mov
hlt
imul
in
jno
dec
incb
js
lahf
je
mov
mov
rcrl
lret
mov
cltd
gs
pop
cmp
or
popf
testl
in
xchg
aas
inc
lret
or
ds
and
or
movl
ja
fsubrs
imul
mov
out
and
xchg
shl
jmp
push
push
xchg
push
fimuls
lods
xor
mov
outsb
dec
push
fnstenv
leave
mov
push
fildll
mov
jge
lcall
shlb
mov
mov
mull
pop
dec
push
arpl
in
inc
dec
lds
mov
jge
mov
jmp
mov
lret
mov
orb
xchg
inc
adc
into
std
mov
testl
movsl
in
leave
arpl
out
mov
inc
mov
in
stos
add
cmp
pop
mov
inc
jae
sbb
sbb
inc
ss
dec
dec
jle
and
pop
into
test
mov
ret
int3
jecxz
inc
mov
jbe
fsubs
jl
fnstenv
sub
jb
sti
lods
es
or
jp
addr16
push
cmp
mov
int3
sub
adc
jmp
loopne
push
xchg
cmp
jp
shll
inc
into
sbb
pusha
outsb
pop
test
push
dec
xor
inc
in
jne
pop
out
inc
shrl
push
sbb
popa
ret
cmpsl
lret
pop
dec
jg
cmp
aaa
mov
arpl
xlat
cmpl
js
into
test
pushf
rcrb
xlat
leave
iret
dec
mov
icebp
jl
in
mov
aam
and
sub
add
jne
stos
iret
pop
cmp
cli
cmp
in
rcrb
sbb
fisubrs
repz
call
mov
out
mov
lds
fs
loop
push
add
imul
xchg
adc
mov
xor
loope
loopne
into
xchg
lock
fists
push
mov
jg
push
or
cs
mov
aad
jnp
mov
mov
ret
test
adc
idiv
scas
and
je
lock
sar
cld
add
pop
rorl
pop
lahf
and
aam
mov
pusha
xchg
ja
lahf
push
pop
shll
in
and
rclb
jae
lds
sbb
add
cmp
mov
jnp
inc
and
dec
pop
ret
nop
mov
das
fdivrl
fdivl
push
jmp
lcall
adc
pop
xchg
xchg
popf
xchg
sub
lds
sub
cmpsb
in
popa
push
push
push
lods
in
loop
cmp
es
mov
sub
add
es
and
xor
pop
xchg
fdivs
fmul
mov
xor
pop
jbe
hlt
adc
stos
dec
xchg
daa
push
sar
and
data16
sub
es
push
mov
adc
pop
fidivrs
xchg
and
pop
mov
lods
cs
mov
fistl
hlt
movsb
add
mov
cmp
sbb
movsb
mov
and
mov
movb
addr16
rclb
stc
xchg
imul
pop
std
mov
push
xchg
gs
fcmovbe
aam
mov
aaa
xor
push
add
mov
mov
movsl
cmp
fnstcw
jp
cld
sub
mov
and
std
adc
jb
mov
push
sarb
in
aas
scas
mov
fdivr
ljmp
cmp
pop
hlt
dec
mov
jl
sub
add
cmpsb
maxps
or
inc
adc
jnp
xchg
mov
push
fwait
sub
stos
leave
mov
ds
dec
mov
dec
ja
iret
les
ja
jecxz
mov
add
test
int3
dec
cmp
mov
loopne
adc
stc
pop
push
roll
ret
int
jmp
dec
xchg
adc
inc
cmp
sbb
mov
imul
in
cmp
fld1
ja
xchg
aaa
pop
loopne
es
lods
adcl
adc
dec
in
icebp
ficompl
insb
das
and
cli
and
jmp
xor
jmp
push
stc
test
bound
cmp
in
cs
mov
mov
sub
xchg
mov
xor
inc
jnp
lahf
adc
jnp
cwtl
cli
int
mov
adc
stc
shrl
loope
push
xchg
jl
insl
popf
pop
aas
mov
pushf
fmuls
movb
xorl
push
xor
lahf
dec
adc
aas
jne
mov
cmc
jmp
mov
xchg
mov
pop
cmp
popa
test
jb
inc
cmp
sarb
loope
sbb
lcall
popl
add
inc
jb
push
sbb
and
jb
sbb
mov
sub
ljmp
ret
add
ljmp
mov
test
fwait
or
adc
out
cmp
push
dec
lock
aam
inc
hlt
movsb
adc
push
clc
xchg
popa
into
insb
outsl
mov
lret
ljmp
nop
pop
sbb
lock
xchg
ret
add
jb
es
add
adc
sub
cmp
rclb
pop
push
xor
sarb
xchg
aam
insl
pusha
mov
xor
loopne
sbb
cwtl
push
adc
xchg
push
adc
inc
mov
dec
cmpsl
sub
dec
cmpb
and
cmp
pop
mov
cmpsb
dec
cmp
ljmp
xchg
sbb
push
xchg
test
mov
subb
in
xlat
push
aam
or
mov
xchg
jb
push
repz
cmp
jg
fucomp
iret
mov
cmp
mov
cmp
scas
loop
test
jne
and
adc
es
loope
aas
mov
or
xor
adc
cmp
sti
add
pop
sbb
cmp
inc
call
scas
rclb
xchg
mov
xor
inc
out
jge
mov
sbb
icebp
push
test
xchg
popf
mov
stos
insb
add
pop
cs
and
mov
lcall
loope
pop
sub
cmp
and
testl
fildll
mov
icebp
inc
inc
adcb
mov
imul
pop
orl
pop
insl
mov
fdivr
pop
hlt
pusha
jge
mov
test
sbb
lcall
outsb
clc
es
push
mov
cmc
jb
pushf
dec
outsb
ror
inc
lret
es
ss
stc
cmpsl
lret
jle
jbe
push
fsubl
mov
into
dec
jb
loope
aas
mov
fimull
iret
and
fcomps
inc
lods
loopne
push
inc
xchg
ja
dec
dec
hlt
cmp
push
mov
loopne
mov
mov
test
xor
je
xchg
jl
add
repz
push
loope
pop
jns
sub
pop
sti
cs
xchg
es
dec
sub
push
cmp
jns
and
inc
sbb
mov
xor
js
pop
sub
iret
xor
sub
pop
shlb
imul
jbe
cli
repz
cmp
lods
cld
xor
out
or
cld
add
xor
lods
mov
dec
xchg
add
push
fdiv
bound
mov
xchg
pop
repnz
add
push
arpl
jecxz
cmpsb
jecxz
push
scas
cmp
mov
dec
dec
add
sbb
fldcw
mov
jle
lods
cld
rorb
mov
xchg
push
mov
rcrl
scas
xorl
les
mov
out
sbb
mull
jo
lds
repz
sub
cli
sbb
adc
rclb
enter
mov
arpl
dec
or
push
push
pop
push
sbb
js
aad
imul
add
cld
cmp
pop
xchg
pop
push
aad
xchg
pop
inc
adc
fwait
lret
jne
xchg
xlat
inc
mov
xchg
sub
aas
js
mov
and
in
data16
fldcw
and
fnstcw
xor
inc
ror
inc
sbb
xor
out
sub
xor
fdivr
cmp
fildll
movsb
dec
pushf
jo
scas
jnp
out
adc
or
jno
mov
jmp
icebp
fstpl
insb
jae
mov
and
xchg
push
out
pop
das
out
ds
stc
add
xchg
es
xchg
pop
rcr
push
divb
xor
mov
popf
cs
cli
movsl
seto
es
cmpsl
daa
jg
push
hlt
xlat
testb
repz
pop
xor
push
fs
into
in
imul
into
pop
rcll
lahf
mov
sbb
push
fsubrs
adc
xor
xchg
cmpsl
jl
lcall
mov
jno
mov
sbb
or
xor
fwait
pushf
pushf
mov
mov
test
lods
mov
or
sbb
jne
mov
or
repz
ss
arpl
or
ret
xchg
cwtl
sub
into
testl
jnp
ds
in
pop
pop
clc
mov
dec
aam
repnz
cmp
in
push
mov
pop
pop
pop
pop
add
xchg
or
cs
arpl
js
lret
xchg
outsl
add
push
push
xchg
and
ror
cmc
int3
ret
mov
pushf
daa
mov
iret
cmp
loopne
jne
mov
adc
sahf
jno
pusha
inc
out
subl
dec
das
mov
insl
fs
je
push
and
cmp
and
and
inc
dec
orl
xchg
dec
test
icebp
lret
lods
add
cmc
adc
aam
add
jnp
mov
mov
mov
in
mov
pop
push
mov
test
xchg
cld
sarl
cmp
ds
jns
push
sbb
popa
fsubrp
das
ss
mov
mov
cwtl
aam
lret
add
dec
daa
sub
push
pop
mov
repnz
jnp
sbb
or
stos
out
subl
subl
test
ror
nop
xchg
leave
mov
stc
jecxz
adcb
gs
mov
aas
xor
add
or
mov
loope
mov
test
pushf
loop
pop
ja
sahf
fsubrl
dec
or
xor
mov
adc
add
hlt
mov
loopne
idivb
push
clc
mov
push
mov
out
xchg
popa
push
cmp
sbb
das
pop
jo
out
pop
dec
std
dec
ss
scas
fsincos
scas
repnz
push
sub
xor
mov
jne
insl
fdivs
xor
gs
cmp
shll
out
jg
rcll
std
inc
ret
fcomp
jg
and
dec
sub
cmp
subl
mov
notb
popf
repnz
inc
ret
mov
cs
jmp
das
jmp
xor
mov
cmpsb
xor
lds
cmp
in
xlat
dec
adc
sbb
xchg
dec
enter
in
dec
and
aaa
mov
inc
add
mov
and
call
or
call
adc
jmp
mov
sbb
test
ret
mov
xchg
int
adc
push
add
dec
call
arpl
clc
sbb
jp
mov
add
jg
sub
rolb
pop
orl
cmp
inc
into
aam
adc
rorb
and
addr16
adc
pop
nop
dec
inc
ljmp
add
adc
lods
cmp
sub
arpl
fisttpl
jb
xor
stc
dec
dec
setp
scas
or
arpl
pop
jge
push
xor
fbld
es
lods
out
out
push
fisttpl
push
or
jb
rolb
xlat
pop
scas
loop
cs
xor
jbe
leave
mov
inc
xor
cmp
out
lcall
push
xor
jne
es
stc
out
mov
repz
cmp
fdivr
aam
adc
dec
mov
inc
scas
pop
das
push
mov
cmpsl
adc
sti
sarb
icebp
pop
in
cmp
in
inc
xor
cmp
inc
xchg
mov
and
push
mov
pop
hlt
in
mov
roll
jl
mov
fsubr
jp
jmp
xor
and
popa
loopne
lahf
sbb
inc
sti
iret
addr16
hlt
mov
inc
fimuls
xchg
dec
adc
xchg
pop
cmp
subl
les
sbb
xchg
push
fisttpll
cmp
data16
push
jecxz
xor
and
fnstenv
sub
sub
loop
fdivrl
cmp
jp
or
xor
push
outsb
cmp
push
ret
fisubs
movsl
jne
xchg
xor
sub
mov
push
add
mov
call
mov
shl
add
pop
xor
sub
inc
fnstenv
cli
or
sarl
pop
pop
push
jmp
xor
xorl
out
fcoml
pop
jecxz
clc
decl
mov
push
or
jbe
sbbl
fcmovnbe
fnstcw
mov
adc
inc
inc
jp
mov
mov
repnz
inc
fisubrs
sbb
and
aad
mov
pop
data16
shll
repnz
je
aas
repz
fidivrs
loop
rclb
test
add
lret
xchg
inc
add
adc
into
inc
cmp
push
in
and
xlat
int3
mov
jmp
cld
jbe
cmp
dec
push
in
sub
lods
loopne
rclb
arpl
cmc
jae
jmp
and
cli
or
insl
sti
sti
ficoms
call
push
jns
mov
sbb
sub
pop
movsb
std
xchg
outsb
shlb
jecxz
inc
pop
pop
clc
jecxz
movsb
sbb
aas
add
xchg
in
sbb
xchg
arpl
add
ret
mov
pop
lcall
and
hlt
js
xor
popf
mov
adc
mov
ljmp
outsl
cmc
iret
fs
push
sub
sub
shl
dec
or
and
mov
ljmp
cs
cli
mov
repnz
lret
aad
leave
add
fxch
dec
or
mov
hlt
sahf
ficoms
mov
push
pop
aam
and
pop
or
fmul
mov
cld
insb
push
mov
leave
mov
sbbl
es
mov
shl
movsl
nop
rclb
lock
cmp
dec
mov
sbb
jnp
xor
cli
ds
adc
testb
cmp
push
mov
ss
lahf
hlt
add
dec
sbb
sbb
es
dec
ss
or
pop
jge
xchg
xor
pop
sahf
out
popa
js
stos
imulb
enter
lods
ljmp
add
xchg
cmp
adc
stos
inc
sbb
pop
jmp
jp
jge
mov
js
insb
cmpsb
aad
shll
sbb
in
jo
mov
stos
push
popa
arpl
in
stos
lahf
std
stos
inc
loopne
add
mov
push
fdiv
mov
repz
negl
cmp
decb
inc
or
stos
aad
sub
loope
sub
in
dec
xor
popa
push
add
loop
push
jne
scas
cltd
jge
pop
mov
pushf
sub
aad
pop
std
inc
pushf
adc
out
ljmp
cmp
stc
push
xor
xchg
mov
push
into
mov
rorb
mov
cmp
pushf
std
and
inc
movsb
mov
std
inc
xchg
lock
pushf
mov
add
inc
push
add
push
or
ds
cmp
sbb
mov
hlt
or
leave
int
cmp
loope
and
outsl
push
loope
xchg
mov
jmp
xchg
pop
pusha
jp
xchg
xlat
mov
pop
movsb
iret
lods
push
mov
int3
insb
xchg
pop
jmp
outsb
or
fcomps
div
stos
mov
pop
dec
pop
scas
jl
aas
sarb
sub
aas
stos
ret
pop
mov
scas
adc
mov
and
jge
xchg
xchg
jns
pop
fisubl
loopne
movsl
dec
lcall
push
mov
int3
repnz
mov
lods
js
test
rorb
loopne
outsb
cmp
ret
fs
adc
imul
mov
jle
add
xor
cmp
xchg
dec
xchg
push
sub
rsm
pop
xor
in
mov
cmc
mov
xchg
push
movsb
dec
mov
jge
lret
idivl
push
inc
adc
dec
icebp
cmp
xchg
and
idivl
aad
outsl
inc
cwtl
sbb
sbb
sub
scas
push
sbb
xor
mov
mov
mov
leave
mov
loope
cmp
loope
inc
inc
aad
push
scas
mov
pop
fstl
rcll
test
cmp
xchg
inc
and
sbb
xor
cmc
adc
mov
je
cwtl
mov
sbb
push
in
cltd
enter
or
pop
imul
jne
mov
jbe
add
cli
test
or
fnstenv
mov
mov
adc
aaa
es
aas
pop
pop
ljmp
mov
cmp
out
mov
clc
cld
add
divb
lock
mov
fadds
xlat
sbb
push
ret
testl
cmp
mov
jb
adc
test
jbe
loopne
inc
mov
je
cwtl
jl
mov
in
pop
nop
repnz
push
int3
adc
push
mov
pop
hlt
loopne
sahf
lret
cmp
or
mov
adc
jmp
add
add
pop
dec
sub
rorb
movb
fcmove
xchg
pop
lret
and
jns
push
push
std
hlt
dec
push
je
sbb
and
call
clc
test
adc
fistpll
cmp
aas
sub
mov
mov
and
outsb
clc
inc
mov
or
fldl
stc
pop
dec
aam
dec
dec
nop
sahf
inc
lcall
js
lods
push
add
lret
dec
cmp
les
mov
dec
fs
jnp
repnz
aam
mov
xchg
js
sub
mov
orl
daa
or
repnz
pop
daa
ja
insb
sar
push
dec
pusha
ja
movlps
das
cld
out
mov
add
pop
aad
sti
xor
mov
fwait
mov
lods
mov
lret
add
mov
push
ret
push
mov
loopne
xchg
les
fsubs
rclb
ss
cmp
jecxz
inc
xchg
sub
mov
xchg
mov
adc
inc
insl
and
inc
rcll
sub
push
mov
cwtl
pop
in
xor
or
into
xchg
sub
push
xor
mov
rolb
ret
mov
push
adc
jp
adc
and
jmp
pop
out
rcr
aas
ret
popa
clc
pop
xor
mov
fcoml
cmp
sahf
movsl
fidivrs
jle
mov
jmp
inc
xchg
push
iret
imul
pusha
data16
mov
insb
mov
rolb
out
enter
cli
into
adc
sbb
dec
mov
push
dec
sub
les
mull
and
cmp
xor
test
jge
test
sbb
daa
out
dec
xor
int
add
inc
daa
inc
mov
lret
jmp
pop
push
lcall
insl
lods
cmp
lret
jmp
test
inc
insl
in
in
popf
inc
in
loope
jbe
xchg
scas
pop
add
aad
xor
push
mov
clc
mov
es
jg
aas
out
stc
aas
xchg
sbb
mov
es
test
cld
out
mov
dec
cmp
adc
adc
loope
jecxz
cmp
iret
loop
ret
jno,pn
aas
push
mov
dec
push
cmp
pushf
out
mov
test
push
and
mov
decb
in
movsb
xchg
adc
jl
ret
cmp
adc
out
xor
jne
lcall
adc
outsb
mov
adc
dec
std
and
loop
cld
decb
in
push
leave
fs
movl
pop
fidivl
xchg
insl
mov
addl
pop
sete
and
mov
xchg
push
insl
fisubrs
cmpsl
test
int3
cmp
out
push
ffree
lods
mov
xchg
cli
js
test
cli
mov
cld
push
mov
xchg
inc
movsl
or
int
inc
stos
sbb
sar
into
cltd
pushf
loope
cmp
sti
clc
imul
xor
jl
sbbb
or
sti
insb
mov
stos
ja
js
push
push
sahf
mov
ss
fcoml
mov
jnp
xchg
aas
cmpsb
les
push
xchg
fiadds
hlt
outsb
loop
jb
test
jbe
iret
mov
arpl
clc
jge
dec
outsl
icebp
sub
in
inc
dec
aam
mov
scas
push
js
jecxz
and
sub
lcall
pop
xlat
pop
pop
xchg
pop
fdivs
adc
loope
sub
and
dec
fldl
sbb
jo
leave
test
popa
mov
std
sub
les
pop
dec
push
mov
inc
ret
mov
popf
inc
xchg
loopne
loop
sub
pop
dec
push
clc
popl
mov
fmuls
outsb
in
xchg
lds
mov
dec
inc
cmp
and
xlat
aas
data16
decl
dec
dec
hlt
push
pop
sub
repnz
stc
decl
dec
pusha
mov
sub
sub
cmp
aaa
repz
je
mov
inc
aad
iret
pop
and
call
and
stos
cmpsb
cmpsl
aas
pop
inc
xor
lods
mov
jmp
jbe
inc
andb
push
add
xor
mov
das
nop
outsb
jp
ja
xchg
and
add
mov
push
mov
jmp
loope
nop
cmp
pop
jl,pt
fldz
adc
out
repnz
arpl
adc
cmpsb
cs
xchg
je
outsb
lock
fcmove
test
xchg
dec
adc
sahf
adc
jbe
aaa
test
iret
insb
daa
pusha
dec
or
popf
mov
in
cld
fidivrs
dec
je
jo
clc
xlat
ret
div
pop
push
pop
jnp
push
mov
arpl
sub
call
xor
outsb
ds
outsl
inc
xchg
arpl
idivl
xor
pop
mov
xor
push
std
addr16
popa
xchg
aas
mov
jne
imul
pop
sub
aas
sub
into
addb
mov
inc
call
out
fnstcw
data16
imul
andl
inc
scas
push
daa
add
cli
lcall
shll
mov
or
movsb
insb
and
test
dec
popf
sti
pop
adc
repnz
pop
mov
add
pop
and
push
pop
dec
out
xchg
add
pop
scas
sub
inc
dec
sbb
sbb
and
rcrl
pushf
movsb
fdivs
je
or
sub
aas
push
lea
jmp
pop
jecxz
insl
add
cmc
loop
sbb
fs
cmp
or
cmp
xchg
cmpsl
and
out
and
jecxz
idivl
mov
xchg
jmp
jl
ret
adc
divb
mov
rep
dec
push
inc
adc
in
loopne
inc
and
mov
add
aaa
mov
inc
rolb
xor
push
pshufw
bound
mov
sub
xlat
sbb
or
push
add
stos
jnp
outsb
dec
cwtl
sbb
push
aas
xor
js
sub
xor
fdivl
les
enter
es
push
push
mov
push
and
xchg
arpl
insl
cmp
mov
imul
mull
aaa
imul
clc
pop
mov
cwtl
dec
xor
pusha
into
sbb
inc
testb
lea
add
cmp
jae
shlb
fcmovu
and
lahf
inc
je
adc
lret
fistl
and
subl
jne
push
out
sti
es
nop
pushl
fcoms
pop
push
mov
mov
mov
cmp
loope
out
sbb
fidivl
cmpsl
bound
and
inc
or
daa
out
jb
push
out
lcall
cmp
push
data16
mov
mov
popa
les
nop
dec
cmpsb
lret
arpl
adc
pop
pop
push
mov
out
mov
js
shlb
xchg
push
push
pop
xchg
push
pop
dec
mov
pop
sbb
aas
xchg
pop
into
arpl
push
stc
push
push
lods
push
dec
ret
xchg
inc
stc
cwtl
dec
daa
push
scas
pushf
mov
xchg
test
jle
loopne
or
pop
dec
sahf
imull
aas
mov
xor
int3
mov
xor
push
adc
jg
cmp
mov
fadd
pinsrw
inc
sti
xor
or
cld
enter
test
imulb
enter
stos
push
shl
idivb
jo
rorl
inc
push
dec
fimuls
sbb
add
mov
divb
jae
jp
jmp
bound
lcall
icebp
lods
cmp
scas
pusha
jnp
inc
sub
mov
addr16
arpl
out
mov
mov
sbb
jbe
cmp
je
movsl
test
push
imul
cmp
mov
xlat
js
in
aas
hlt
mov
retw
test
aaa
cli
or
mulb
add
js,pt
add
fildl
fstpl
stc
mov
inc
pop
fsubrs
mov
js
dec
in
cmp
call
scas
movsb
inc
leave
inc
fidivs
xchg
icebp
dec
add
mov
pop
outsl
fildll
test
push
pop
lret
push
pop
mov
sahf
sbb
imul
pop
cmpsb
sbb
mov
mov
or
aaa
jne
fdiv
aas
xor
mov
xchg
and
and
cmp
cmc
movsb
mov
bound
pop
sbb
std
mov
insb
cld
ffree
dec
cmp
arpl
je
push
pop
test
data16
cmp
rol
and
loop
daa
dec
sbbl
in
movsb
xchg
xor
push
hlt
adc
insb
inc
dec
xchg
mov
js
mov
ds
adc
aas
ljmp
aaa
xchg
add
into
dec
rcll
mov
or
je
pop
dec
inc
or
ds
lea
fldenv
stos
jmp
xchg
rol
jecxz
nop
test
ret
clc
push
jecxz
flds
mov
sbb
fsubl
xorb
stos
imul
mov
sub
lcall
shl
dec
ja
mov
data16
mov
push
xor
inc
insb
sbb
add
pop
nop
scas
push
jbe
sub
bound
mov
ret
dec
add
mov
jl
add
jge
pop
mov
sti
cmp
mov
fcom
sbb
or
xor
or
sbb
push
ret
sti
fsubrs
sbb
sub
arpl
scas
jo
or
and
repz
loope
jb
mov
dec
dec
dec
fwait
lret
mov
lahf
repz
push
pop
dec
cld
and
es
inc
not
xchg
insl
test
jnp
xlat
xchg
inc
lret
mov
stc
in
ljmp
pop
aad
imul
pop
mov
xor
testb
mov
gs
or
jl
lods
jmp
gs
iret
stos
rclb
fcomps
bnd
pop
mov
testl
xor
es
xchg
js
dec
andb
xchg
jmp
out
push
mov
dec
mov
cli
out
cmpsb
push
adc
dec
test
sbb
addr16
popf
outsb
sub
insl
int3
adc
lds
add
xor
xchg
or
into
dec
aas
pop
mov
push
ds
daa
data16
pop
push
mov
lahf
arpl
cmp
loope
mov
ja
lods
loopne
mov
aaa
pop
dec
push
sub
aad
fstps
xor
call
aad
rcll
mov
cmp
push
adc
xchg
fcomp
sub
lret
lret
xchg
adc
jle
ret
outsb
repnz
pop
insb
jb
xchg
sub
in
xchg
add
push
dec
cmp
xchg
mov
inc
sbb
js
addb
xor
test
lret
pop
lods
testb
inc
lcall
dec
je
test
outsb
aam
sti
jecxz
lret
pop
mov
adc
ds
pop
cwtl
xor
aas
push
xchg
fidivrs
pop
push
fdivs
test
pop
in
fnstsw
mov
imul
in
loop
sbb
mov
idiv
out
dec
cmp
cmp
int3
mov
add
cmp
mov
xor
fsubr
pop
jae
mov
outsl
mov
push
xor
dec
dec
clc
sti
fwait
in
nop
fimuls
dec
outsl
ja
mov
add
addb
mov
inc
xor
push
sub
aaa
add
mov
es
cmp
pop
xor
mov
xchg
in
mov
cmpsb
ret
mov
ss
cmp
mov
jb
push
ss
sti
scas
cmpsb
movsl
xor
mov
loope
ss
xorb
add
rcrl
xchg
xchg
movsb
or
fs
stos
cmpl
daa
aam
cs
imul
jnp
mov
sub
stos
mov
aaa
push
lret
pop
dec
mov
cs
inc
mov
mov
test
sub
hlt
div
sti
pop
mov
jno
cmpsb
pop
sarb
aad
dec
aaa
xchg
push
mov
add
jle
repnz
outsl
pop
pop
mov
aam
dec
mov
xor
fucom
pop
ds
test
stc
notl
outsb
push
or
arpl
shll
je
jge,pn
outsb
mov
sbb
repnz
inc
mul
je
mov
adc
push
adcl
mov
adc
cmp
ds
and
sbb
test
iret
jae
sbb
das
jo
fs
xchg
sub
mov
cld
rol
out
shlb
dec
das
iret
imul
test
inc
repz
icebp
into
hlt
inc
xchg
mov
enter
push
adc
sbb
cs
ror
xchg
popa
xor
or
adc
daa
out
and
repz
dec
pusha
add
in
lret
fwait
jbe
shll
lcall
bndldx
mov
xchg
ret
adc
iret
cs
push
jg
cmpsb
sbb
jbe
nop
call
mov
xor
sar
test
in
cwtl
cmp
jo
lret
push
xchg
sbb
in
mov
subb
add
cmc
fcoms
dec
push
pusha
mov
outsl
iret
syscall
or
mov
subb
lahf
xlat
xchg
movsl
xchg
in
mov
subb
insl
inc
xchg
or
push
stos
xchg
dec
bound
mov
jbe
adc
fiadds
xchg
stos
les
xor
int3
out
mov
adc
aas
sbb
or
ror
mov
mov
imul
ret
xor
jmp
mov
xchg
mov
fs
into
in
loope
push
jl
mulb
jg
into
aaa
and
ss
js
lock
xchg
jecxz
or
mov
push
lock
stos
test
cld
ret
out
sbb
pop
xchg
mov
sarb
popf
add
inc
sbb
xor
sbbl
clc
sub
hlt
and
xchg
cmp
mov
mov
lret
mov
cmp
sbb
or
div
sbb
outsb
fcoms
sub
loop
aaa
mov
movsl
xchg
mov
mov
ret
or
and
xchg
pop
dec
xchg
sti
test
loope
cmp
jg
pop
push
jns
cmc
jne
cmp
popf
sbb
cmc
test
cmp
sub
push
jmp
in
faddl
shr
add
js
repnz
sub
repz
addr16
cmp
cmc
pop
pop
inc
movsl
sub
sar
adc
and
push
sub
dec
pop
xchg
push
test
add
popf
flds
or
out
add
pusha
aas
cli
es
pushf
leave
adc
aas
pop
or
mov
jb
mov
adc
sbb
adc
add
jae
cmpsb
arpl
lea
push
hlt
sub
test
add
fdivrs
std
pop
repnz
std
fisttps
mov
outsb
jo
mov
cmpb
jecxz
or
data16
jle
aam
push
imul
in
jle
and
hlt
test
daa
and
test
push
leave
imul
pushf
xor
shl
cld
pop
ret
jne
pop
mov
dec
mov
xchg
mov
in
in
push
pop
xchg
mov
sbbb
jbe
mov
das
js
jge
add
mov
fildl
das
cmpsl
push
outsb
mov
add
xchg
in
sbb
ljmp
mov
aas
cmpsl
xor
jne
sbbb
fucom
jmp
xchg
inc
push
dec
pop
jno
sbb
incl
arpl
or
lds
lods
mov
sbb
testl
lea
sahf
ret
cltd
mov
ret
sub
hlt
pop
mov
cmp
das
push
repnz
fcomip
ds
scas
mov
mov
divl
cmp
mov
sbb
out
mov
ljmp
jl
adc
imul
inc
mov
dec
xchg
insl
inc
outsl
jge
fmull
loope
jecxz
mov
mov
rorb
adc
pushf
out
cltd
sub
aam
and
mov
pop
aad
cmp
sbb
les
pop
push
loop
fxch
cld
sub
ljmp
inc
pop
scas
push
xchg
jns
imul
pop
jnp
sarl
jmp
in
inc
leave
push
int3
in
adc
imul
hlt
jecxz
stos
pop
sub
pslld
sub
xor
popa
mov
add
mov
rdpmc
push
ss
out
hlt
loopne
cmp
xor
xlat
xchg
xchg
and
lods
cld
js
sbb
and
and
dec
insl
cld
out
lcall
sbbl
insl
in
fstpt
jb
fwait
bound
popf
mov
lock
ret
dec
mov
out
andl
pop
shl
mov
or
je
add
repnz
mov
movsl
hlt
sbb
lods
xchg
fs
fisubrl
xor
or
lcall
repnz
mov
push
jg
mov
xchg
sbb
push
inc
push
out
sub
sbb
cwtl
das
mov
loopne
inc
xor
ja
mov
repz
inc
ss
sub
popa
je
adc
ret
fcomps
test
out
mov
js
lcall
dec
cmpsb
cmpps
adc
jae
arpl
into
dec
adc
test
shll
xor
mov
popa
push
loope
mov
dec
daa
ret
xchg
pop
cmp
fwait
ret
repz
subb
fs
popl
sbb
xchg
cli
mov
rcrb
test
xchg
push
int3
mov
es
in
out
test
sti
pushf
fisubrl
in
mov
cld
mov
lret
test
test
divl
int
sti
mov
sarl
cld
stc
push
xor
inc
push
pop
dec
bound
sbb
repnz
inc
pop
jae
nop
js
or
lods
aad
es
aaa
jmp
loop
mov
es
sbb
hlt
lods
fdivrs
push
stc
or
lret
fildll
iret
xorl
pop
sub
pop
pop
push
cmp
imul
pop
test
aam
cmpsb
push
mov
push
loopne
mov
xchg
repnz
xchg
inc
scas
leave
scas
rol
or
cs
in
loope
dec
mov
xchg
xchg
cld
mov
stos
int3
ja
pop
dec
mov
mov
fstps
shl
inc
das
ss
push
repz
ds
mov
int3
adc
or
xchg
lret
jb
mov
ljmp
dec
sahf
movd
inc
xchg
sub
xlat
roll
loopne
jns
xor
push
pop
mov
outsb
cmc
xor
jbe
xchg
xchg
dec
sub
out
std
adc
or
mov
stc
sub
stc
test
pop
mov
in
jl
add
push
neg
jl
pop
mov
ret
xchg
lds
sbb
jno
mov
jne
andb
add
xchg
jg
cmp
sbb
mov
mov
repz
cld
mov
dec
mov
sbb
xchg
push
and
ja
mov
xchg
push
mov
sub
loope
les
jmp
inc
cs
mov
jecxz
pushf
cmpb
xor
in
mov
add
es
mov
mov
out
jb
hlt
testb
xchg
pushf
mov
xchg
fsubl
cmp
sti
loopne
adc
xor
in
jnp
sub
dec
call
hlt
adc
mov
pop
out
dec
out
xchg
jo
test
lcall
mov
sub
cmp
jmp
popf
in
mov
js
int
addl
mov
inc
outsb
roll
jecxz
push
and
jecxz
sbbb
pop
jbe
nop
fcomp
fcoms
rcll
or
xchg
jecxz
xlat
xor
xor
icebp
xchg
subl
mov
dec
sub
push
sub
mov
or
pop
adc
pop
stos
mov
loope
push
je
xor
adc
and
std
jbe
pushf
shlb
mov
xor
aaa
cs
inc
int
push
inc
roll
xor
ja
cld
add
xchg
xchg
mov
adcl
adc
or
push
and
fsubrl
cld
sub
stc
and
popf
in
f2xm1
scas
jae
dec
imul
push
xchg
clc
sub
divb
test
mov
in
test
xor
call
adc
adc
cld
mov
push
cmp
or
pusha
mov
ja
shrb
loope
shl
jle
jp
mov
adc
aaa
es
add
aaa
add
pusha
jmp
mov
or
test
pop
hlt
inc
dec
dec
cmpsb
je
js
mov
and
nop
jns
xchg
adc
inc
sbb
push
shl
clc
inc
clc
in
xchg
pop
push
test
mov
cmpsb
sbb
ret
inc
dec
ljmp
add
jbe
inc
cmp
add
scas
stos
lock
popf
shll
xor
aaa
shlb
loope
mov
in
pop
jecxz
and
rol
xchg
pop
cld
call
add
mov
cmp
jb
loop
dec
pop
pop
neg
jnp
cltd
sbb
jg
fcoml
ss
or
dec
jno
sub
dec
push
cmpsb
sub
mov
das
xchg
cmp
fdivl
xlat
xor
push
pop
loop
fadds
ja
cmp
jl
int
xchg
push
adc
mov
add
pushf
ret
push
cld
lcall
sub
pop
sub
iret
pop
cmp
js
and
scas
xchg
in
jg
mov
mov
pop
lods
in
dec
fld
xchg
adc
xor
jl
mov
jmp
xchg
int
adc
sbb
test
sub
jmp
aas
test
jecxz
inc
push
jmp
fwait
rol
xchg
sub
fiadds
dec
mov
inc
aam
mov
out
xorl
div
loop
xor
push
mov
imul
mov
lds
int3
xor
adc
orl
inc
cwtl
mov
push
jge
js
push
repnz
xor
sti
inc
scas
and
sbb
daa
dec
push
negl
insl
stos
in
cmp
shrb
xchg
or
repz
lahf
inc
jp
jbe
arpl
add
xor
mov
xor
fbstp
mov
fwait
jbe
rorb
push
loopne
xor
xor
add
aas
shl
sbb
dec
test
sub
lahf
mov
jo
xor
xor
jne
in
inc
cmp
jle
cmp
push
inc
enter
xor
sbb
enter
pop
arpl
xchg
lock
and
sub
outsl
dec
xor
dec
xlat
mov
ret
insb
and
cmp
or
lock
lds
cmp
stc
pop
mov
in
leave
and
adc
outsl
fmuls
adc
jmp
andb
fs
mov
pop
fcomps
mov
xor
mov
mov
and
lret
jmp
cmp
and
fisubrs
shrb
inc
fdivr
fcoml
sub
add
pop
mov
bound
lods
out
repz
fldenv
addl
or
out
repnz
mov
dec
call
out
sti
adc
add
or
inc
mov
mov
lcall
test
out
lret
in
jb
clc
pusha
xor
pop
mov
hlt
xchg
fmul
inc
ss
add
inc
lahf
fdivrl
shlb
das
lds
test
fdivrs
pop
mov
out
fwait
push
and
xchg
and
ret
cmp
in
es
adc
loop
clc
pop
outsb
pop
hlt
inc
xor
jno
sub
fs
adcb
int
lds
mov
jno
mov
adc
fidivs
mov
pop
xor
callw
dec
adc
xchg
xlat
xchg
sub
icebp
xlat
or
cmp
pop
xchg
mov
std
jne
pop
dec
cwtl
in
sbb
jl
ret
loopne
clc
xchg
and
push
dec
addr16
sbb
pop
ja
fdivrs
movsl
test
sub
xor
shrb
call
ret
sub
mov
mov
lods
inc
push
cltd
loop
aad
and
cmp
jns
movsb
sbb
testb
in
xlat
aad
xchg
cmp
mov
cmp
insl
adc
dec
pop
mov
sub
mov
cld
xchg
xor
xor
xor
fdivs
fnsave
les
aam
insl
lret
jne
xchg
gs
js
les
cmpsl
push
cmp
rcrl
sub
sub
fimuls
ds
lahf
jg
fisubrs
notb
mov
adc
xchg
or
stc
push
es
ljmp
jbe
xor
das
jns
shlb
scas
repnz
push
aad
flds
dec
cmp
dec
add
mov
add
in
stos
mov
jecxz
mov
inc
sti
or
movups
imul
mov
cmp
repz
loopne
mov
scas
inc
inc
add
jecxz
pop
mov
mov
inc
add
rcrb
xor
aaa
sti
repnz
cmpsb
jo
dec
jb
sbb
in
out
ret
fsubs
rcrb
jp
insb
rcll
lods
stos
pop
fisttps
imul
mov
sbb
iret
inc
cmp
inc
push
in
aas
cli
mov
mov
les
rol
mov
iret
fwait
movsl
cld
pop
push
std
lods
outsb
jmp
lock
push
movsb
and
cmpsb
xchg
mov
test
popf
mov
mov
fsts
add
fcomps
mov
int3
lahf
xchg
add
or
add
push
fdiv
mov
push
lcall
push
rorb
inc
xchg
in
das
and
mov
jle
xchg
pop
sbb
xchg
shll
cmp
cltd
jb
ror
inc
aas
add
or
xlat
out
loop
sti
fsubrl
adc
sbb
lods
nop
mov
in
jmp
cmp
jg
lea
mov
dec
sub
aas
dec
push
cmp
rcrb
bound
and
fildll
shlb
test
adc
mov
inc
aas
loop
adc
enter
adc
pop
xor
sbbb
dec
bound
hlt
sub
fistpl
jne
sbb
hlt
pop
mov
sbb
jmp
insl
push
add
out
aad
cmp
ret
sbb
push
in
das
dec
shrb
or
and
cmp
add
das
lods
lcall
mov
sub
xchg
das
loope
pop
mov
jmp
pop
mov
in
ficomps
faddl
clc
inc
int3
add
xchg
lcall
out
test
jmp
js
aam
inc
cli
push
add
lahf
add
icebp
or
outsb
mov
pusha
repz
dec
xchg
xor
push
repz
addl
insl
mov
sub
add
push
int3
pop
mov
lret
dec
mov
add
adc
xchg
std
pop
lods
fadd
jb
adc
jg
jl
push
cmp
adc
xor
mov
cli
adc
xchg
pop
je
rcrb
mov
xchg
ret
imul
xchg
loopne
pop
sub
movsl
in
ja
dec
ds
xchg
cmpsb
movsl
outsl
lods
inc
and
repnz
mov
cmp
call
xor
lods
fstpl
jmp
je
ret
hlt
int
pusha
or
jmp
mov
push
js
inc
xchg
out
fimuls
push
rol
jge
arpl
xchg
insb
aas
or
jecxz
mov
aas
out
repnz
mov
cli
iret
orl
xchg
stc
nop
mov
jnp
push
dec
iret
cmp
into
mov
aaa
pop
rclb
arpl
gs
icebp
filds
call
mov
cmp
xor
sub
inc
mov
insb
outsb
xor
rcl
dec
rcl
insl
mov
nop
loop
fsubrs
fisttps
jmp
js
mov
mov
leave
fists
sbb
stc
test
dec
jns
mov
mov
jns
adc
das
and
jno
mov
jnp
sub
loope
cmp
xor
fimull
clc
cltd
sub
fisttpl
push
dec
sub
in
inc
xchg
cmp
add
and
pushf
mov
aam
imul
mov
dec
lock
jmp
jg
cmp
pop
popa
test
or
adc
cld
movl
into
sub
lret
dec
push
jbe
rep
les
mov
jl
jo
jne
adc
in
mov
adc
out
int
ljmp
js
test
adc
adc
mov
dec
mov
data16
addr16
adc
pop
mov
mov
loop
ds
jg
cmp
add
sti
rcr
out
sahf
out
or
stc
push
call
movsb
inc
mov
imul
inc
lcall
aam
xchg
mov
pop
inc
jecxz
out
xchg
mov
mov
mov
jnp
ljmp
loopne
mov
inc
add
fidivrs
ds
frndint
es
or
fildll
and
sbb
adc
or
xchg
arpl
lcall
pop
call
and
and
mov
jnp
fldt
ss
ljmp
sbb
lock
cmp
scas
int
add
ljmp
loopne
lret
bnd
popa
into
jle
push
mov
and
mov
aam
in
or
add
ljmp
stos
add
xor
insl
add
mov
inc
xor
dec
testb
mov
shll
fiadds
sub
inc
call
mov
jno
sbb
push
scas
lret
or
ljmp
add
push
push
sub
mov
gs
cmp
and
adc
aas
mov
mov
insb
fisubs
inc
jmp
push
decb
inc
test
es
add
loopne
mov
jle
jl
xor
cmp
xchg
pop
testl
mov
sahf
dec
mov
popf
lock
and
test
mov
mov
popf
mov
hlt
xchg
test
or
lods
insl
push
out
pop
loopne
cli
test
cmp
icebp
pop
and
ret
je
jg
pushf
out
pop
sbbb
sub
add
jge
mov
lock
loopne
shlb
ja
or
loop
push
mov
inc
sti
out
pop
dec
scas
je
or
pop
sub
mov
add
je
pop
cltd
jmp
inc
sbb
shlb
mov
mov
loopne
push
pop
dec
insb
inc
mov
cmp
sub
inc
xchg
scas
mov
cmp
aam
pop
and
fcomps
mov
andl
lret
hlt
sub
inc
subb
mov
dec
dec
push
pop
and
imul
push
jmp
je
jb
push
cmp
push
or
jecxz
aas
add
sub
dec
icebp
inc
push
jnp
mov
xlat
sbb
gs
cltd
aaa
xor
push
adc
or
jns
sub
xor
stc
jae
dec
ja
inc
cmc
ret
int3
xchg
xor
rcrl
xlat
ss
sub
jno
mov
dec
sarl
data16
adc
ss
cmpsb
adc
add
stc
jne
movsl
negl
pushf
dec
dec
xor
mov
shlb
jbe
mov
add
xchg
sti
int3
cs
dec
mov
cmp
es
dec
sub
rcrl
xchg
cld
scas
or
lock
adc
lret
lret
shlb
sub
out
dec
clc
icebp
notb
jecxz
cmp
out
sbb
call
fidivrs
add
and
xor
push
or
dec
int3
leave
movl
mov
mov
rcll
call
aad
push
add
idivb
add
xchg
outsl
sarb
test
hlt
popf
repz
add
not
rorl
sahf
fsts
les
mov
pop
inc
cmp
aam
jle
into
daa
aas
jb
xchg
enter
lret
ret
dec
pop
idiv
hlt
adc
jl
js
aad
pop
push
in
loopne
push
rcrb
ja
xchg
sub
push
pop
test
in
aaa
clc
sbb
das
ja
out
pop
dec
testl
cmpsl
mov
jmp
mov
adc
add
sub
xchg
jbe
js
jp
fcomp
pop
cmp
push
adc
cmp
mov
jns
xor
shll
push
out
lods
iret
mov
add
mov
cwtl
jne
push
aam
test
push
pushf
xchg
shll
dec
dec
inc
cli
mov
mov
push
xor
push
cmp
ud0
push
jge
sub
add
sbb
pop
push
dec
fidivs
loopne
xor
xchg
pop
imull
push
daa
movsb
aad
ss
mov
inc
cmpsl
xchg
and
cmc
int
dec
not
xchg
ret
lahf
push
cmc
pminub
pop
adc
imul
fildll
dec
call
rep
mov
pusha
leave
jns
jb
dec
mov
pop
jmp
ss
fildl
xor
fstps
mov
sarb
push
ss
aaa
cmp
inc
mov
ljmp
ret
lods
or
mov
out
hlt
jle
sbb
and
xchg
loopne
divb
ret
mov
jnp
stc
stc
bound
cltd
adc
lea
addb
sbb
or
or
push
jle
xor
lret
ret
divl
imul
jp
push
mov
dec
push
in
lods
push
mov
insb
ret
dec
lock
push
sub
not
bound
dec
imul
add
ret
dec
cld
jnp
fwait
mov
ljmp
lahf
jae
lcall
jnp
ljmp
inc
inc
sbbl
jle
xchg
cmp
shrb
jg
pop
addr16
xor
push
ret
lea
mov
faddl
jle
divl
push
inc
inc
ljmp
sahf
popl
pusha
jne
add
out
test
add
push
jo
pop
fisubl
subb
ret
js
pop
cmp
pop
xchg
fcoml
fisubrs
and
mov
xor
pop
dec
lods
pop
es
repz
mov
movl
adc
mov
scas
enter
jge
push
rcrb
adc
mov
loop
cmp
aas
repz
fldenv
mov
mov
add
fisubs
mov
sub
fiaddl
fisttpl
jmp
out
out
xor
adc
into
jae
cmc
sub
xchg
sbb
inc
sub
cmp
jecxz
lcall
and
fwait
mov
pop
xchg
xor
adc
inc
movsb
sbb
inc
imul
lock
outsl
mov
decl
jle
hlt
pop
sub
cmp
fsubl
test
test
int3
ja
lahf
rorb
sahf
pop
aas
cli
mov
int
das
cld
xchg
stos
das
movsl
or
in
pop
in
xchg
loop
mov
inc
mov
pop
outsl
inc
mov
shlb
lcall
pop
ss
hlt
jno
scas
and
jno
jbe
push
pop
enter
in
outsl
lods
xchg
lock
sbb
mov
insl
jle
cmp
lret
fnstcw
push
aas
mov
pop
lret
xchg
or
adc
pop
cmp
outsl
cltd
outsb
inc
xor
ja
cmpsb
pop
pushf
push
adc
rcl
mov
add
stc
or
ds
mov
shl
xor
push
ficomps
push
push
or
adc
aas
dec
fcmovbe
lahf
shll
lods
outsb
divb
js
mov
pop
imul
lret
leave
lea
int3
rcrl
or
je
divb
ja
lcall
pop
mov
mov
inc
mov
rcr
es
push
mov
push
sbb
and
std
cmp
xor
fsubs
rorb
stos
jmp
iret
je
sub
mov
popa
clc
lock
jmp
stos
jne
sbbb
cmp
loopne
dec
push
xchg
adcb
incb
idiv
jns
sub
push
xchg
leave
sub
add
into
mov
and
fcoms
call
or
mov
je
sbb
loopne
dec
cmp
push
call
mov
gs
and
in
xor
and
mov
dec
inc
pop
stos
mov
xor
sbb
hlt
xchg
dec
cmp
jbe
cmp
das
lea
lods
shrl
add
ja
daa
mov
out
pop
int
aas
das
inc
xor
notl
in
adc
xor
push
mov
mov
incl
jo
mov
jne
push
push
inc
sahf
jp
leave
notl
jle
mov
pop
fdiv
notb
out
jbe
dec
mull
mov
js
xor
inc
xchg
push
in
data16
xor
pop
fcomps
lods
and
outsl
inc
lret
dec
add
movsb
sbb
loope
cmp
lds
lret
push
out
clc
insb
sahf
std
aad
rorl
adc
pop
mov
pop
xchg
test
fnop
daa
ds
in
cld
stos
ffree
mov
lcall
cmp
push
dec
test
cmpsl
mov
adc
and
lret
nop
pop
inc
xchg
push
xor
mov
push
xchg
pop
pop
lods
mov
xchg
mov
xchg
scas
sbb
mov
sbb
stc
repz
cmc
lods
sub
xchg
iret
lret
aam
sahf
sbb
ret
fidivrs
mov
filds
push
cmovl
js
stos
data16
jge
lret
hlt
lret
and
dec
js
mov
cmc
adc
xor
sbbb
hlt
and
xchg
or
xchg
sahf
mov
pushf
and
lds
jl
incl
mov
test
cld
les
movsl
dec
cwtl
xor
push
fs
jbe
aad
lret
xor
inc
jp
scas
sahf
outsl
in
mov
fadds
shlb
mov
daa
mov
andb
aam
rorb
and
out
xchg
xor
fadds
gs
out
cmc
and
add
jb
sldt
add
add
pusha
or
je
call
pop
add
cmpb
jne
popa
jmp
fldt
cmp
add
pop
and
xor
mov
add
cmp
jne
movzwl
add
mov
add
cmp
je
sub
jmp
mov
mov
add
mov
add
jmp
mov
mov
push
push
call
call
pop
sub
mov
sub
mov
movb
popa
jmp
insb
sbb
adc
test
pusha
xor
mov
shr
je
pop
cs
or
sbb
adc
test
pusha
xor
mov
shr
je
pop
cs
or
sbb
adc
test
pusha
xor
mov
shr
je
pop
cs
or
sbb
and
jl
sub
mov
mov
inc
mov
inc
mov
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
mov
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
mov
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
mov
jmp
sub
mov
popa
ret
jmp
jmp
add
or
stos
stos
and
out
adc
jmp
xor
add
adcb
fistps
pop
les
add
xchg
push
andb
popa
jo
cmp
pop
push
jle
push
std
xor
sarl
or
aad
or
cwtl
pop
and
pop
jo
pop
pop
cmp
inc
mov
adc
dec
and
push
flds
fwait
xchg
add
scas
add
insl
imul
push
and
xchg
and
and
mov
in
cmp
inc
pop
add
or
or
test
mov
je
mov
inc
loop
hlt
or
inc
and
ds
xor
mov
cmp
or
and
aad
jmp
mov
add
out
sbbb
jge
orb
or
xor
or
sbb
incb
xchg
inc
jmp
ss
fsubl
inc
leave
ret
inc
add
dec
in
inc
lea
mov
push
test
adc
orb
ret
mov
sub
or
cmpl
lea
orb
mov
js
ror
invd
dec
cmp
add
and
bound
mov
mov
jb
rcrb
cmp
sub
aas
popa
jmp
adc
test
and
pop
stos
jmp
jp
and
jle
jl
or
jl
adc
pop
cmpsb
pusha
dec
sbb
push
push
xor
testb
mov
and
sbb
test
jae
outsb
cmpsb
sarb
subb
ret
push
mov
push
pop
pusha
mov
xor
and
aaa
add
jne
mov
out
or
xor
loopne
pop
rorl
roll
add
add
push
and
jne
mov
mov
add
adc
movb
test
xor
jns
mov
add
lret
push
call
movsl
imul
mov
and
xor
add
mov
push
adc
push
rolb
out
add
xor
cmpsl
lret
lock
je
add
fcoms
cmpb
jne
and
je
add
cmp
mov
jg
shl
sub
fadds
pop
test
je
mov
dec
add
ret
sub
pusha
int3
push
pop
pop
pop
mov
fsub
push
cmp
add
adc
orb
je
or
and
adc
jbe
sub
jp
inc
adc
jp
push
jmp
and
clc
int
or
jge
sbbl
add
inc
rep
jmp
pop
push
clc
pop
insl
enter
push
hlt
test
dec
shll
lock
cmp
loopne
jb
shrb
fisttpl
sti
lock
or
ja
jmp
xchg
and
cli
or
or
pop
dec
ret
or
or
or
aaa
and
test
pop
lock
add
mov
shlb
cltd
stos
es
pop
cmp
cmp
jb
mov
stos
cmp
mov
mov
cmova
dec
jne
mov
mov
xorb
add
mov
aas
ss
fmull
in
pop
imul
xchg
add
sbb
pusha
les
addb
sbb
dec
add
cmpsb
sahf
adc
and
or
aad
xor
les
ss
or
push
sahf
lahf
les
adc
xor
inc
push
in
push
clc
shl
or
pop
mov
loop
std
fsts
mov
or
push
jnp
repnz
mov
lret
xor
cmp
jbe
movups
icebp
cmp
inc
xchg
or
push
adc
add
push
and
mov
rorb
inc
push
or
jne
adc
adc
repz
or
pop
iret
in
or
mov
or
js
shlb
mov
or
ja
xor
inc
adc
shlb
or
sarl
sub
seto
xor
add
jle
xor
test
xor
and
mov
cmp
add
mov
rorb
inc
jmp
or
mov
stos
stos
push
mov
adc
and
je
pop
sub
stos
aad
xchg
ds
mov
push
xchg
inc
xchg
or
adc
mov
add
mov
fcmovu
mov
adc
and
add
sub
clc
hlt
sub
mov
or
adc
xchg
jmp
mov
fmull
inc
pop
cld
subl
mov
lret
std
aad
jo
adc
xchg
or
nop
add
ja
add
dec
int
push
mov
sbbl
jb
sbb
xchg
pop
in
inc
insl
and
cmovbe
cld
cmpsl
push
es
lret
inc
mov
leave
mov
fistps
add
outsb
and
or
std
pop
mov
adc
pop
add
sti
push
pop
add
inc
push
push
inc
nop
imul
push
mov
rorl
addr16
out
insl
cmp
out
jo
rdtsc
pop
mov
and
outsl
loop
imul
push
pop
mov
jne
adc
adc
add
or
sub
add
adc
pusha
bound
and
dec
or
fstps
adc
popf
icebp
lahf
sbb
sahf
adc
test
dec
ljmp
mov
cmpsl
mov
js
fcmove
test
ficomps
and
shrb
xchg
arpl
fstpt
mov
jns
add
xlat
cltd
or
lock
dec
push
xor
or
push
lock
jnp
in
ljmp
pushf
pop
xor
test
dec
and
leave
xchg
int3
xchg
and
xlat
push
movsl
cltd
add
jl
mov
jg
mov
cmp
add
insb
and
mov
cmp
sbb
push
loop
test
add
in
das
xor
mov
inc
cmp
xchg
sbb
sub
cmpsl
jle
fsub
icebp
fldcw
aaa
jbe
bound
push
or
lret
pop
sub
add
sbb
sbb
inc
inc
xchg
jecxz
mov
dec
and
inc
add
or
push
xor
cmp
push
out
sti
and
jns
sbb
icebp
js
mov
fmuls
fildll
je
or
sbb
loope
and
push
cmpb
aaa
xor
in
cmpsl
xor
xchg
add
ret
stos
mov
push
fmuls
add
bsr
add
mov
or
mov
add
add
inc
popa
fstpl
cwtl
jge
mov
imul
add
jno
mov
push
mov
arpl
mov
cmc
inc
lea
add
std
repnz
out
pop
pop
aam
mov
add
inc
notl
shrl
arpl
pop
add
lahf
cmpsb
shlb
in
xchg
mov
aaa
movsl
pop
dec
loopne
sub
push
int
cs
mov
pushf
in
shl
cwtl
into
imul
aas
lods
sbb
in
add
iret
add
test
inc
sbb
je
insb
add
stos
out
bswap
dec
call
sub
les
fcomps
xchg
jle
enter
cmpl
icebp
stos
addb
les
adc
popa
xlat
dec
imul
mov
fs
xchg
mov
pop
inc
into
push
dec
cmp
and
push
push
add
jo
fcompl
lret
mov
cmp
sub
add
inc
test
cmpsl
inc
push
xchg
pop
or
dec
inc
lds
adc
xor
leave
dec
dec
add
daa
rorb
movsl
mov
fildll
cmc
test
sub
cmp
enter
adcb
loope
ss
xchg
call
and
or
lret
push
sub
mov
mov
mov
loop
sahf
in
push
mov
cmpsl
xorl
les
mov
or
push
pop
lret
add
mov
add
cli
outsl
sub
xor
pop
cmp
inc
pusha
movsl
or
sbb
sahf
mov
sub
movb
or
mov
loopne
push
or
shl
jecxz
adc
dec
arpl
rolb
inc
dec
add
outsb
lret
outsl
xchg
lret
cmp
ret
scas
jb
xchg
push
imul
sub
fidivl
punpckhwd
cmp
fsubrs
or
add
dec
shlb
cmpps
and
and
shl
es
pop
int3
add
inc
cmp
test
sbb
push
mov
sub
and
pushf
mov
add
lahf
idiv
addl
push
test
add
sub
addb
test
fdivrs
cmpsb
subl
cmpsl
andb
add
arpl
es
push
mov
add
mov
mov
shll
adc
push
xor
sbb
xor
leave
stos
scas
xlat
nop
dec
or
nopl
lock
stc
add
inc
or
push
fsubrs
int3
push
rcll
cld
add
loopne
add
sub
lahf
mov
inc
data16
into
adc
jmp
ss
push
add
sbb
add
ret
add
add
add
ret
int3
add
add
or
clc
fwait
add
dec
inc
outsl
fsubrs
shlb
pop
xchg
lods
add
test
pop
or
inc
pusha
dec
xchg
xor
cwtl
or
pop
jge
movsb
lahf
add
jnp
mov
je
dec
mov
out
inc
add
adc
jne
jecxz
push
jo
das
loopne
call
xor
shl
ret
xchg
cmp
shl
xorb
pop
jne
or
sbb
popa
push
scas
add
loope
sbb
or
xor
fsubp
rol
mov
cmp
clc
xchg
pusha
mov
rcrb
pop
xchg
aas
cli
sahf
rclb
cmpsl
or
andl
or
shrb
popa
fbld
aam
rclb
leave
sub
add
filds
adc
pop
inc
inc
adc
in
add
jmp
shll
inc
mov
cmovae
ss
aaa
add
pop
into
dec
sub
jae
cld
adc
push
mov
mov
xor
stos
xor
movsb
ret
inc
mov
cmp
dec
and
sysexit
pop
lcall
push
and
shll
add
inc
xor
adc
pop
sbb
dec
imul
test
sbb
inc
push
ja
add
arpl
and
sbb
sbb
mov
lods
add
cwtl
jp
imul
add
stos
stc
pop
lods
test
js
lock
add
repnz
aaa
adc
sub
enter
movsl
pop
xchg
je
ss
mov
rolb
clc
cwtl
hlt
cmp
mov
cld
add
insb
test
dec
rcrl
and
in
dec
cmp
or
mov
add
dec
clc
stos
in
inc
pushf
ret
add
inc
lea
and
and
adc
data16
add
xchg
dec
in
adcb
test
bound
leave
icebp
mov
in
cld
xor
cli
fwait
cmp
or
pop
xor
addb
xchg
in
je
adc
icebp
push
pusha
mov
push
xor
xor
or
mov
sbb
ss
aaa
sbb
push
cmp
or
test
cs
xchg
or
sub
inc
js
xchg
out
pusha
adc
add
out
xor
leave
mov
add
mov
loopne
jne
push
andb
mov
popa
into
inc
int3
add
mov
add
cmp
jl
push
mov
orl
sub
test
outsb
add
lods
fistl
dec
add
and
sub
add
inc
std
mov
insl
inc
ret
aad
cmpsb
cmp
sbb
mov
adc
jge
adc
shlb
mov
adc
mov
in
fdivr
xor
rcrl
int3
adc
push
lcall
rorb
dec
cmp
sbb
pop
lods
inc
mov
push
and
and
jns
add
test
push
mov
dec
out
or
ds
inc
lock
or
repnz
shll
das
sti
push
fcoms
adc
nop
pop
out
sub
sub
jnp
inc
inc
adc
pop
hlt
adc
test
xor
adc
fcos
or
mov
inc
cld
mov
mov
es
sub
adc
test
cmpsl
pop
add
mov
dec
lods
lret
cld
test
or
dec
xor
xor
add
scas
scas
in
sbb
push
ret
rcrb
rcrb
icebp
enter
fs
in
mov
dec
add
cli
xchg
cmp
ret
test
mov
pushf
mov
push
arpl
enter
add
push
pop
flds
sbb
imul
add
mov
adc
mov
rcll
ja
clc
adc
cmp
xor
imul
add
repz
mov
adc
out
rcrl
inc
pop
jno
inc
add
lret
push
mov
jbe
fcmovu
test
test
add
xor
push
mov
mov
inc
or
sub
in
add
jb
clc
jae
mov
dec
push
nop
fcomps
push
mov
fdivr
pop
cltd
das
xorb
and
sahf
into
inc
add
fs
or
mov
loope
rol
and
jmp
xchg
jp
push
in
xchg
mul
fsubrs
inc
mov
aas
dec
subb
cmc
enter
aam
add
xor
add
mov
or
add
fisubrl
addr16
lret
mov
push
add
imul
mov
rcl
in
jne
test
pop
dec
mov
test
add
fstpl
iret
add
mov
push
add
add
lods
outsb
scas
xorl
add
sbb
add
faddl
xchg
jle
xor
dec
add
mov
sahf
add
cmpsl
add
xor
add
js
aas
data16
add
ret
xor
push
mov
in
add
lcall
add
sahf
pop
jb
stos
add
cld
push
push
fstl
mov
add
mov
adc
popf
insl
cmp
push
push
cmp
mov
inc
inc
sub
push
out
in
cwtl
add
mov
add
cmp
dec
xchg
fcoml
add
enter
xchg
add
lods
sbbb
sub
sub
popf
add
mov
les
sub
xor
lds
pop
les
int
or
pop
mov
ret
inc
mov
movsl
pop
pop
pop
jne
add
jo
or
fldt
out
fadds
pop
adc
lds
inc
aad
adcl
sarl
stc
aas
pop
dec
lods
sbb
add
cmc
or
aam
push
fldl
repz
sbb
js
xchg
sub
xchg
sbb
fisubrl
xchg
in
add
cmp
sub
sub
loopne
jmp
mov
mov
nop
scas
or
and
lock
inc
ret
jne
add
xlat
in
scas
and
or
clc
and
jge
xor
rorl
call
mov
stos
hlt
or
and
call
add
mov
pop
gs
jns
pop
dec
mov
pop
cmpsb
ret
pop
js
ljmp
subl
inc
jmp
sbb
dec
add
sub
cmp
jl
add
andb
sub
jbe,pt
andb
or
adc
test
or
sahf
dec
push
jo
fbstp
xor
call
mov
add
jle
outsl
lret
test
inc
outsb
push
sub
lcall
mov
sub
adc
movsl
in
rcrb
popf
pop
sbb
js
or
fistpl
mov
sbb
cmp
addb
cmpsl
push
fisubrl
lahf
and
mov
fmuls
mov
push
and
aas
mov
rol
sub
pop
mov
in
sub
test
cmp
push
sub
push
push
and
loop
sbbl
insl
cwtl
add
inc
adc
or
or
sub
pop
insl
dec
test
add
gs
cli
jae
cmp
mov
add
or
cli
addr16
or
add
or
jo
negl
js
iret
insb
pusha
fadd
cli
dec
sbb
xchg
inc
sbb
xor
fwait
mov
cwtl
and
sub
xor
sub
rorb
sbb
or
push
pop
mov
jge
aaa
shlb
je
add
xlat
clc
aad
mov
add
insl
aas
lds
rcl
mov
sub
jae
rolb
inc
mov
jmp
mov
fsts
in
mov
insl
fwait
add
add
xor
aas
mov
adc
and
fbstp
push
insl
adc
xchg
pop
insl
or
lret
and
cwtl
sbb
cmc
adc
adcb
mov
in
add
loop
lods
repnz
and
push
loopne
mov
sub
xor
dec
inc
les
mov
sbb
adc
adc
and
cwtl
mov
inc
dec
fcompl
fs
dec
mov
cmp
mov
arpl
mov
in
iret
jno
xchg
int3
sbb
xor
aam
pop
dec
nop
jo
sbb
xchg
inc
push
cmpsl
mov
or
mov
mov
inc
std
mov
in
push
mov
iret
mov
out
jnp
lahf
nop
movsb
test
sahf
cmp
aas
orl
test
push
add
xchg
inc
push
gs
jl
sub
lret
in
xlat
scas
jo
add
cmpsl
pusha
inc
push
ss
cmpb
or
lock
adcl
add
dec
or
movsb
inc
mov
push
or
test
dec
jo
dec
inc
les
or
adc
aaa
cwtl
adc
bswap
dec
je
ror
cmpsb
rcrb
movsb
cli
pusha
add
sub
scas
xlat
cmpsl
cltd
cld
or
inc
enter
ror
pop
add
stc
push
test
mov
add
inc
push
stos
xchg
mov
adc
testl
loopne
and
add
xchg
sub
lods
fildll
jo
add
add
xchg
stos
inc
into
scas
add
fadd
push
and
and
aad
adc
mov
imul
cmp
sub
xor
jp
sbb
hlt
pop
xchg
inc
movsb
sahf
sub
sbb
and
cld
je
sbbl
pop
push
subl
call
jmp
and
and
push
push
rorb
jl
test
test
fnstcw
das
cmp
in
mov
dec
dec
or
in
inc
loop
fadds
push
fwait
pop
jb
movsb
mov
sub
ljmp
add
xchg
sub
inc
dec
popf
sbb
pushf
and
stos
cmp
add
mov
or
mov
int3
add
out
aam
adc
sbb
dec
lock
sub
fidivrs
aad
cmp
icebp
leave
fildll
movsl
nop
pop
or
mov
rclb
add
and
pop
ret
pop
insl
outsb
addl
rcrb
pop
lret
jl
xchg
addl
mov
pop
sub
pushf
adc
aam
xchg
xchg
mov
cmc
out
inc
cmp
cmp
inc
and
dec
add
adc
cld
mov
mov
jl
das
push
add
jne
mov
out
add
icebp
into
cmc
sbb
lahf
pop
and
pop
ret
sub
cltd
inc
sub
adc
out
adc
sub
xchg
and
sbb
ror
xchg
addb
loope
addb
and
jmp
stc
dec
mov
and
popf
aam
outsl
mov
outsb
add
sbb
jle
add
pop
out
cs
shrb
loop
push
mov
jbe
sub
les
sub
mov
jns
sbb
in
add
out
int
sub
adc
jge
mov
jg
mov
adc
sub
mov
sub
shr
dec
rcrb
jge
sub
shl
addb
sbb
data16
and
repz
inc
sbb
pop
pop
fsubp
outsl
inc
loopne
lea
popl
mov
ret
daa
sbb
in
add
imul
cmpsb
mov
dec
pop
std
test
loop
or
adc
sbb
in
lock
pushf
or
negl
test
adc
mov
or
rclb
inc
dec
and
add
pop
insl
pop
xlat
out
aas
xor
iret
add
je
xchg
add
sub
mov
push
push
mov
push
dec
incl
or
sbb
add
add
lcall
leave
push
push
dec
aam
mov
inc
push
cmpsl
outsb
bound
and
nop
inc
push
add
sub
ds
lret
mov
xor
loope
movsl
mov
or
test
add
mov
push
cld
push
test
ret
or
rolb
or
jp
xchg
int
mov
mov
add
jecxz
add
test
push
sbb
jg
sub
movsl
stos
clc
add
es
outsb
and
cmp
jo
fisubl
fmuls
or
pop
add
or
roll
les
add
adc
cmc
push
shlb
sub
cli
cld
mov
xchg
and
add
movsl
mov
adc
or
mov
mov
adc
out
daa
mov
mov
push
mov
jno
fldl
push
and
clc
mov
xor
js
xor
out
or
inc
or
test
xchg
movsb
and
push
jl
xor
nop
pop
xchg
cmovo
aad
bound
ljmp
mov
add
xlat
mov
or
adc
lods
push
jno
sbb
sub
shrl
mov
inc
sub
std
and
add
dec
int
add
sub
insb
jo
test
mov
int3
pop
inc
xchg
test
push
jno
mov
jge
inc
rcl
sbb
push
add
mov
add
mov
lds
mov
add
or
adc
push
jns
ficoms
outsl
sub
repz
pusha
add
and
pop
adc
shrl
movsl
pop
xor
add
movlps
pop
push
daa
pop
mov
add
rcrb
out
inc
js
inc
xor
adc
jnp
push
add
push
cmp
push
sub
sub
mov
push
adc
aaa
sbb
nop
hlt
int
mov
mov
jle
or
push
stos
and
adc
pop
and
mov
pop
sbb
jns
push
and
in
fcompl
ret
flds
xchg
add
pop
mov
add
jge
xor
add
mov
ljmp
mov
xlat
movsb
fmulp
add
cmp
int
sbb
shrl
hlt
iret
lds
and
add
cs
fs
push
dec
mov
mov
dec
lods
shll
add
mov
adc
shlb
adc
xchg
dec
enter
inc
fs
mov
cld
dec
mov
sub
dec
clc
mov
loop
adc
sahf
or
fcmovne
rorb
and
out
pop
add
push
sub
lods
mov
jns
or
test
lods
cmp
adc
mov
add
add
and
test
pop
cli
inc
add
shll
pop
inc
repnz
sbb
add
dec
and
call
test
insb
sbb
push
jge
ljmp
dec
repz
add
jmp
add
call
pop
sbb
ret
pop
xor
push
sbb
add
fldl
mov
ret
add
mov
add
sub
cmpl
es
mov
cwtl
out
jecxz
mov
clc
repz
divb
add
dec
movsl
sbb
inc
jns
jno
sbb
sub
fadds
xchg
fadds
imul
call
and
stos
pop
dec
sub
or
lods
xchg
add
roll
and
cmc
sbb
shrl
iret
push
jo
lahf
frstor
mov
outsb
add
jns
jmp
lds
pusha
movsb
inc
push
dec
sbb
nop
in
mov
loope
add
xchg
dec
repz
ljmp
push
sti
dec
push
popa
int3
shll
sbb
aas
adc
sahf
add
xor
mov
out
jp
dec
mov
jge
pop
xchg
xor
pop
mov
daa
cwtl
mov
sbb
les
int3
adc
or
std
int3
sub
sbb
repnz
pop
mov
xor
add
ljmp
popf
or
loopne
sub
push
pop
pop
test
lods
sub
jns
lcall
test
add
cmp
roll
dec
sbb
out
in
iret
lret
cmp
add
addr16
jg
and
popa
int
inc
push
pop
add
movb
pushf
pop
lds
loope
push
pop
adc
loopne
push
or
add
aad
enter
lea
or
jl
iret
add
and
adc
sbb
daa
mov
pop
or
mov
mov
cmpsl
pushf
enter
sbb
jns
sbb
pop
pusha
pop
in
mov
ret
les
sbb
xor
lods
push
and
adcb
xchg
push
test
jae
add
push
dec
add
out
jae
mov
sbb
xor
popl
xchg
add
mov
out
inc
jno
cld
mov
add
or
in
cmp
sub
xchg
lock
outsl
pop
movsl
loopne
cmp
dec
pusha
mov
movb
add
fcomps
push
loop
pusha
sub
lcall
aam
inc
add
aas
dec
rorb
xchg
mov
fxch
mov
push
pusha
js
adc
add
jnp
dec
mov
enter
pop
sbb
pop
lcall
inc
test
sti
push
insb
fs
mov
js
push
adc
popf
push
rorb
inc
scas
inc
loopne
subl
das
mov
lahf
addl
nop
scas
pop
iret
xchg
ret
clc
lds
pop
inc
sbb
je
sbb
ret
mov
add
cmpsl
xor
std
loopne
repnz
or
movsl
into
clc
and
subl
inc
mov
lods
das
inc
add
mov
scas
iret
or
cmp
pop
pop
dec
jo
cwtl
stc
or
dec
sub
in
pop
xor
xor
inc
nop
out
mov
lahf
js
scas
pop
je
aad
pop
jno
push
lock
xchg
cs
les
sbb
data16
push
cmp
popa
mov
mov
sub
add
push
adc
add
xchg
mov
cmp
icebp
dec
inc
xor
ljmp
jecxz
decl
divl
add
xor
pop
frstor
and
cmp
aad
imull
mov
pop
out
xorb
int3
jno
jg
mov
push
sbb
mov
and
subl
push
lods
in
adc
adcb
add
or
add
dec
rclb
cwtl
sti
sbb
popf
inc
dec
pop
xchg
ret
and
or
cmp
pop
or
mov
cwtl
push
xchg
lds
in
pusha
jb
repz
js
sbbb
mov
enter
mov
js
sbb
xor
bound
jl
add
int3
or
add
mov
dec
jbe
and
adc
mov
jl
pop
inc
iret
or
fwait
sbb
or
mov
rclb
add
adc
and
ljmp
dec
or
or
add
ficoms
lcall
sbbb
pop
sub
add
jge
lea
out
fistpll
mov
push
and
push
adc
sbb
sub
sub
in
or
in
clc
subb
dec
filds
movsb
test
pop
lcall
lock
fdivs
ficoms
inc
jo
imul
pop
aam
mov
xor
adc
sbb
adc
xchg
and
addr16
cmpsl
add
jb
jbe
xchg
mov
pushf
xor
cmp
push
faddl
sub
sbb
mov
push
jmp
sbb
and
hlt
inc
pop
aaa
scas
pusha
inc
addl
in
shr
stos
push
jmp
push
cltd
test
sbb
dec
lret
add
push
jl
aaa
cld
icebp
shrb
cld
add
mov
hlt
cmp
mov
out
shlb
mov
or
pop
jbe
add
shld
pop
jmp
faddl
pop
adc
daa
mov
aam
pop
movsl
or
pop
lods
lret
roll
dec
cmp
add
push
inc
ljmp
adc
das
sbbb
dec
cmc
lock
xchg
sub
add
sahf
jne
xchg
pop
jmp
or
sbb
mov
lods
jl
adc
test
inc
in
sub
adc
inc
xor
ret
mov
rclb
dec
lret
fdivs
lods
inc
xchg
mov
mov
pop
dec
cs
adc
jnp
rolb
pop
test
adc
jne
sub
dec
call
inc
jecxz
repz
jae
sbb
pop
mov
and
push
push
inc
add
pushf
bound
push
sbb
fcoml
gs
sbb
inc
aam
mov
inc
nop
jbe
and
mov
add
in
sub
in
push
popl
dec
lret
out
enter
mov
push
test
sar
inc
das
xor
fcoml
cmp
add
int
dec
faddl
mov
xchg
jbe
add
jmp
mov
insl
loope
cmpl
adc
mov
inc
pop
pop
sbb
xor
hlt
mov
adc
incl
loope
aad
cltd
inc
and
cli
inc
or
rcrl
xor
xchg
cmpsb
jo
outsb
pusha
xor
push
test
and
inc
add
mov
lahf
ljmp
sub
std
leave
inc
fidivrs
or
pop
push
mov
ficoms
mov
mov
sarb
cmp
pop
sub
mov
sub
mov
push
int
dec
dec
xor
dec
fcmovne
adc
dec
aam
cmp
sbb
aaa
jo
js
jo
push
inc
push
sub
xchg
daa
push
mov
loope
fst
mov
and
fdivs
push
jge
mov
shrl
fs
pop
sahf
sbbl
xsaves
jnp
dec
orl
lret
pop
push
lods
xchg
stos
xor
int3
add
js
cmp
outsl
inc
pop
pop
sbb
sbb
add
mov
push
movsb
test
lret
mov
aam
hlt
add
daa
cmp
sub
add
xlat
int3
mov
in
or
rolb
or
dec
cmp
sub
mov
decb
cmc
cmp
fdiv
push
inc
sbb
xchg
dec
and
cwtl
pop
dec
adc
nop
mov
cmovl
test
sbb
test
dec
lahf
push
inc
push
movsb
push
nop
add
scas
sub
in
rclb
sbb
sub
cwtl
sbb
xchg
inc
iret
inc
iret
and
dec
dec
nop
and
and
outsb
mov
add
fbld
mov
rclb
add
mov
outsb
add
ja
and
pop
inc
push
insb
psadbw
out
addl
add
push
pushf
jno
sbb
sbb
mov
repz
jo
add
jge
add
movsl
push
jp
cmp
xor
sub
jmp
pushf
mov
xchg
pop
call
lahf
fimuls
push
or
pop
shr
sbb
cwtl
mov
and
inc
adc
or
sub
mov
xor
adcb
shl
and
adc
aad
test
insb
add
jb
xor
inc
fcomps
xor
mov
inc
shrl
cmp
ljmp
adc
adc
outsb
enter
std
xor
cmp
sbb
pusha
or
fldl
daa
sbb
jmp
call
xor
sbb
sbb
jo
sbb
or
dec
je
and
lcall
sub
les
insl
sub
aad
adc
addr16
test
push
sbb
cld
pop
dec
and
mov
inc
lods
shlb
push
mov
push
loopne
test
xor
pop
mov
outsb
mov
push
adc
push
shlb
test
xor
and
callw
test
repnz
jmp
das
fldt
enter
xor
leave
movsb
and
push
mov
mov
pop
pop
movsb
icebp
pushf
push
inc
and
push
push
imul
cmpsb
add
pop
sbbb
ret
jp
jb
add
mov
cwtl
fdivs
adc
mov
add
popa
jb
lods
pop
out
lock
inc
mov
jns
sbb
mov
or
add
add
and
pop
mov
repz
ret
inc
add
shll
sbb
adcb
mov
aam
sbb
cld
mov
dec
mov
fsubrl
jns
cld
or
sarb
xor
mov
jne
sub
mov
pop
cmp
sub
cmp
sub
xor
dec
sbb
and
leave
mov
addb
cmc
std
dec
cli
and
and
scas
dec
ror
enter
sar
data16
jnp
add
popa
push
cmp
mov
bound
pop
repz
add
scas
stos
insl
gs
sahf
adc
in
dec
fmull
rcr
sarl
pop
add
inc
jb
test
jmp
ds
sbb
sbb
cmp
or
xchg
loop
add
loopne
out
fidivs
sub
stos
popa
in
fmull
pop
rcr
pusha
pusha
push
inc
cmp
pop
xor
mov
sub
xchg
sbb
jnp
pop
scas
addb
inc
adc
inc
fldenv
ss
aam
xor
mov
sbbb
dec
fdivs
cmp
leave
xchg
jb
mov
mov
aas
and
sub
xor
push
inc
sbb
push
aaa
repnz
dec
mov
inc
mov
jmp
jno
sbb
or
jg
test
fadds
sub
add
and
mov
adc
dec
in
dec
inc
rorb
add
cmp
pop
pop
cmpsl
push
push
dec
or
test
push
stos
mov
sub
les
inc
shrb
inc
fadds
adc
mov
sbb
pusha
scas
add
and
adc
popa
and
fiadds
jecxz
inc
sub
hlt
mov
add
xchg
push
add
ret
mov
fs
sub
les
rolb
jp
iret
cmc
jbe
and
lret
push
xchg
add
loop
inc
addb
dec
add
sbb
mov
orb
inc
pushf
pop
add
sbb
add
cmp
add
hlt
pushf
lahf
inc
test
pop
jno
inc
out
sub
sbb
mov
in
lock
cmpsl
mov
movsb
sub
xchg
inc
or
xor
or
adc
cmp
push
movsl
rcrb
inc
pop
xor
mov
les
pusha
jno
fwait
dec
and
rorb
mov
pop
adc
dec
cld
cmp
xor
int3
add
and
pop
push
into
mov
cmp
add
mov
add
add
dec
cmp
in
lret
daa
add
stc
clc
popa
outsb
orb
mov
cmp
cld
xchg
scas
cmp
and
bound
inc
push
cmp
xchg
sbb
push
stc
nop
nop
les
lidtl
sub
icebp
add
daa
cmpsl
push
xchg
enter
mov
pop
test
pushf
and
andl
ret
ucomiss
push
dec
inc
cmp
xchg
je
lods
pushf
add
sub
cld
sbb
nop
xchg
outsl
and
or
mov
sub
or
pop
mov
mov
mov
les
inc
push
jae
pop
or
inc
push
repnz
sub
mov
movsb
jnp
daa
sbb
sbb
jns
adc
mov
mov
leave
inc
or
cmpsb
in
and
mov
hlt
xchg
add
jle
xchg
sub
jnp
mov
lock
inc
dec
xor
adc
clc
push
mov
adcl
stc
sub
and
inc
or
mov
fcoml
loope
mov
sbb
js
xchg
mov
push
lds
faddp
test
or
dec
push
inc
fsubl
leave
movsb
nop
inc
jg
mov
pop
in
fsubs
fwait
mov
inc
xor
sub
das
xor
xchg
sub
addb
dec
and
sbb
loop
jno
loopne
adc
xchg
iret
orl
mov
pop
push
xor
jns
mov
inc
mov
sbb
or
sbb
or
dec
xchg
in
pop
add
jnp
insb
lods
jl
cmp
adcb
scas
stc
loopne
mov
sbb
call
decb
or
sbb
fcomps
loopne
jns
sub
jbe
xchg
dec
add
mov
fisttps
cmpsb
jns
fwait
pop
lock
hlt
test
add
inc
mov
arpl
adc
push
repnz
or
sub
dec
jns
pop
pop
sbb
out
adc
push
adc
or
mov
loopne
fadds
nop
aam
movl
sti
adc
pop
inc
mov
inc
shrb
stos
inc
hlt
idivl
add
movsl
jnp
adc
test
xor
sbb
jp
add
sbb
and
jl
xlat
jno
in
mov
fnstcw
and
enter
xchg
dec
clc
mov
xchg
insb
and
xor
sub
xchg
add
pop
sarb
test
adc
inc
sbb
pop
mov
sub
jl
lods
sbb
sub
add
outsb
orl
hlt
xchg
ret
mov
subl
sar
cmp
dec
or
mov
and
jne
test
les
add
testb
or
nop
das
and
aaa
pop
fistpl
and
pop
in
sarb
add
bound
or
cs
mov
and
daa
xor
lock
xchg
outsb
int3
pusha
pop
imul
jmp
lock
inc
mov
cmpsb
xor
add
scas
jnp
sbb
subb
add
dec
das
int3
and
add
add
mov
adc
and
mov
sub
sub
push
ret
dec
daa
add
sarl
pop
std
pop
shrl
xor
mov
cs
jae
xor
jge
xor
int
popa
lods
icebp
aam
scas
add
cld
xchg
and
mov
cmpsb
pop
mov
mov
inc
push
mov
repz
in
jb
mov
in
pushf
inc
jo
push
test
clc
mov
pop
or
push
fadds
enter
xor
sbb
sub
push
scas
mov
sbb
xlat
cmp
pop
cmp
push
pop
cmp
mov
mov
mov
sub
je
imul
nop
and
loopne
mov
cmpsl
pop
lcall
cli
xor
sub
movsl
and
movsb
lods
ret
les
sbb
sbb
andl
push
rorl
lds
pusha
test
add
mov
test
mov
jnp
test
adc
and
sti
cwtl
nop
adcb
mov
inc
je
orb
xchg
sbb
inc
rolb
add
daa
sbb
orb
and
push
adc
sbb
add
mov
inc
dec
mov
nop
xchg
mov
add
shlb
add
insl
stos
das
aam
iret
or
sahf
and
hlt
movsl
in
fdivl
jp
add
dec
jp
fsubrs
add
and
cli
add
aaa
push
jb
shrb
jae
jb
es
add
or
sarb
sbb
adc
and
clc
je
cmp
hlt
ficompl
push
xchg
mov
popf
iret
rclb
lea
cmp
mov
push
cwtl
fwait
cld
lahf
inc
add
and
repnz
xor
rep
sub
and
xor
loopne
adc
test
imul
sub
inc
insb
push
jne
xor
stos
add
push
movsl
adc
inc
dec
rol
outsb
les
xchg
test
fimull
sbb
add
cmp
fwait
jp
les
add
cs
loopne
and
push
mov
or
or
sbbb
rcr
fidivrs
cld
dec
in
in
mov
push
pop
inc
sub
lret
add
cmp
add
pop
clc
add
and
add
lret
leave
fisttpl
loopne
jle
test
adc
js
jbe
jl
aad
loop
bound
jl
rorb
inc
adc
adcl
ljmp
movsl
imul
cmp
imul
cmpb
sub
out
sub
dec
mov
ja
xchg
pop
or
sbb
add
xor
outsb
sub
xchg
clc
jl
add
insb
mov
add
push
outsb
mov
loopne
adc
pop
mov
clc
rorb
add
adc
mov
adc
cs
xor
mov
sbb
mov
jne
xchg
inc
rorb
dec
dec
sbb
test
fs
stos
rolb
in
mov
xlat
scas
rolb
push
pop
pop
pop
cmp
inc
sbb
adc
push
stos
push
add
maxps
xor
fdivs
and
inc
fsin
add
jo
gs
out
bound
sbb
add
rcrb
mov
cmp
xchg
fcoml
xlat
subb
movsl
mov
and
add
lret
mov
fdivr
mov
push
insb
mov
and
mov
pop
cld
pop
bnd
and
popf
roll
mov
add
mov
inc
sbb
ss
in
add
lahf
decl
mov
adc
shrl
add
xor
nop
ljmp
push
cmp
pop
rorb
faddl
jl
test
jmp
enter
jl
fidivl
ss
loopne
gs
and
dec
sub
inc
jl
fmull
push
call
or
pop
int
mov
clc
shrb
pop
cld
test
push
fsubp
push
cs
inc
mov
or
pop
pop
mov
or
inc
mov
push
andb
add
lret
pop
inc
outsb
aam
or
jae
das
scas
cmpsb
jno
add
in
mov
fs
movsl
xchg
dec
arpl
or
xchg
das
mov
inc
enter
orl
rolb
cltd
sub
jmp
xchg
dec
test
bound
lods
sub
clc
scas
inc
push
cli
loopne
adc
push
fbstp
add
aas
pop
pop
pop
aam
in
xchg
ljmp
push
call
mov
movsb
inc
loopne
sbb
mov
test
xchg
mov
sbb
and
dec
ret
std
nop
add
add
push
push
daa
cmp
adcb
movsl
ljmp
test
add
add
sub
stc
inc
repnz
cmc
daa
xchg
rolb
sub
sbb
je
mov
cmp
scas
xchg
popa
dec
cmp
inc
or
lret
idiv
inc
jl
ljmp
and
cmp
mov
popa
std
mov
add
inc
sbb
fstps
or
mov
aad
mov
pop
ret
mov
das
inc
js
add
adc
push
mov
rorl
push
or
jnp
inc
jecxz
sbb
mov
enter
idivl
je
daa
test
popa
fsubl
add
xchg
addb
cmp
mov
movsb
xchg
out
les
sbb
xor
popf
repz
movsl
and
cltd
loopne
push
clc
push
fadds
outsb
cmpsl
mov
sbb
std
inc
mov
addr16
pop
mov
das
test
add
lcall
or
add
sbb
adc
dec
inc
or
movsb
test
in
jl
xlat
add
cmp
leave
or
cwtl
inc
cs
adc
shll
lock
lock
sbb
pop
insb
inc
movsb
mov
pusha
and
push
test
inc
mov
push
adc
out
pusha
add
or
jle
sbb
sbb
add
ss
mov
mov
int
mov
leave
divl
add
je
in
fs
popa
jmp
aaa
aad
xor
xchg
or
cmp
inc
add
sub
out
out
fwait
outsl
mov
adc
adc
loopne
or
add
rcl
xor
push
call
jb
das
mov
adc
sbb
les
dec
push
aas
jne
and
add
mov
shlb
paddq
jo
pop
lahf
int3
rorb
or
push
fcoml
lock
sbb
test
xlat
repz
pushf
pop
dec
mov
lock
pop
stos
cmp
push
and
dec
jl
and
add
scas
les
push
inc
out
and
aas
aad
and
rclb
movsb
shll
xor
jb
and
cs
test
cmp
hlt
test
push
or
jno
lret
xor
shrb
mov
aas
sub
andb
pop
cwtl
scas
or
ljmp
sub
or
sbb
test
or
jo
adc
push
mov
faddl
loopne
xor
cli
je
test
mov
cs
and
test
clc
insb
sub
sbb
xchg
or
call
sbb
shrb
fmuls
xchg
loop
push
mov
pop
and
pusha
adc
or
int
jecxz
jge
pop
loope
push
cmpsl
mov
paddb
bound
scas
inc
pusha
cmpsb
and
std
or
add
mov
mov
cmpsl
or
dec
and
pusha
xor
bt
clc
add
jae
es
and
xchg
cmpsb
outsl
cwtl
adc
add
popa
dec
xchg
repnz
jl
ret
ret
mov
dec
pop
outsb
in
jbe
add
or
mov
icebp
aaa
mov
inc
mov
int3
or
dec
rolb
push
or
dec
or
cmp
mov
aam
sub
lods
rolb
rol
sbb
dec
mov
cmp
mov
and
inc
fstl
jo
fadd
pop
add
flds
or
cld
xchg
out
clc
pop
jbe
xor
push
cmp
sbb
inc
not
mov
inc
mov
imul
xchg
pop
xor
jae
or
in
xor
ret
incb
mov
mov
jge
mov
push
and
mov
test
nop
test
add
cmp
outsl
cld
or
nop
js
xchg
adc
inc
jo
loopne
outsb
loop
and
pop
lcall
mov
xchg
and
ja
daa
sub
sbb
movsl
test
adc
sub
sbbb
loope
adc
cmpsl
push
test
sbb
out
std
xor
mov
rcl
sbb
xor
andb
insl
xorb
andb
or
mov
and
aad
and
add
js
test
mov
jne
or
mov
jb
or
inc
pop
clc
pusha
xor
mov
movsl
pushf
nop
inc
sbb
xor
ljmp
cld
add
cmp
ljmp
imul
inc
xor
add
pusha
xor
mov
test
or
or
or
inc
sub
test
push
inc
enter
inc
mov
test
or
xchg
test
and
jae
nop
or
xor
or
adc
adc
or
push
push
scas
andl
sub
mov
mov
push
cmpsl
sub
inc
les
sbb
inc
cmp
arpl
xor
jmp
adc
or
repnz
ss
aaa
cltd
adcl
adc
adc
sub
xrelease
icebp
or
pop
xor
xor
call
or
mov
xchg
jo
inc
and
arpl
or
into
call
fdiv
adc
or
dec
shll
cwtl
add
xchg
push
ret
dec
fsubr
or
inc
ror
bound
jbe
sbb
sub
fists
popa
jns
cwtl
xor
mov
mov
mov
add
cmp
or
mov
mov
add
enter
fisttpll
andl
movsb
pop
push
pop
xor
xchg
mov
add
push
or
shlb
sbb
sbb
xchg
jne
sbb
xchg
xor
leave
int3
and
mov
scas
xlat
xchg
in
jle
lcall
sbb
cwtl
cmp
xor
js
rcrb
adc
stos
add
cmpsl
cmpl
add
mov
add
adc
cmpsb
cli
sbb
js
les
jns
sbb
mov
shlb
jb
cmpsl
mov
ljmp
adc
mov
rol
loop
add
cmc
xchg
xchg
add
pause
mov
mov
scas
add
xlat
stos
inc
repz
add
add
aam
xchg
adc
cmp
xor
mov
xor
lea
xchg
cld
adcb
mov
out
nop
loopne
repz
lcall
mov
and
lahf
pop
shlb
or
add
ret
jbe
add
xchg
mov
inc
gs
rorb
adc
aas
mov
cmpsb
adc
add
cmp
add
jmp
loope
push
stos
mov
mov
xor
int
add
test
clc
movsl
adc
add
dec
push
mov
faddl
shlb
mov
inc
lock
xor
cmp
test
mov
out
xchg
call
fwait
mov
aad
sbb
aas
lahf
sub
xor
pop
unpcklps
jge
punpcklbw
lock
add
ret
js
cmp
or
cmpsb
roll
movsl
push
enter
sub
inc
aad
jecxz
mov
inc
fs
inc
mov
in
cwtl
xchg
int3
adc
inc
inc
sub
pop
jge
sbb
stos
mov
scas
call
xor
xor
mov
call
sti
loopne
aam
popf
add
fnsave
add
inc
mov
int3
stos
push
ret
ja
inc
repnz
jge
mov
imull
pop
stc
ds
mov
inc
ljmp
add
push
loope
lods
loopne
or
loop
or
rolb
in
xchg
and
cld
sahf
inc
mov
add
repnz
sarl
or
sub
sub
inc
es
clc
add
jbe
dec
outsb
mov
loopne
lds
cmp
mov
mov
push
cmp
daa
sbb
xor
movsl
and
sbb
cmp
dec
xchg
mov
stos
outsb
faddl
loope
and
mov
insb
das
clc
daa
sub
insl
lea
cmp
sbb
sbbl
jns
mull
sbb
aad
les
out
adc
enter
out
clc
mov
xchg
adc
dec
test
inc
fisttpll
cld
cmp
addr16
outsl
sti
mov
xor
xor
push
xor
sub
clc
sbb
xlat
cmp
mov
rolb
xchg
inc
or
jecxz
pop
js
mov
aas
cmpsb
andb
push
cmpb
aam
adc
in
fbstp
sti
add
insb
mov
and
push
mov
jp
xchg
xor
rcrb
test
xor
inc
or
and
cmp
mov
lahf
mov
add
and
sub
cli
sahf
add
testb
push
icebp
cmp
add
sete
add
jge
nop
or
cmpsl
clc
or
fsubs
push
nop
mov
pop
clc
and
in
add
fsubrs
xor
das
or
arpl
cmp
add
decb
xor
hlt
add
jne
jge
js
sar
sbb
add
sub
pop
pop
xchg
lock
movb
jnp
or
pop
xchg
cmpl
arpl
enter
je
add
add
dec
jge
add
outsl
ret
or
adc
movsb
mov
inc
mov
fsub
mov
add
inc
pushf
push
sarb
add
sbb
out
orl
rolb
orb
add
sarb
out
sahf
mov
stos
imul
sbb
shlb
test
or
in
popa
mov
mov
lock
outsl
mov
rcl
add
outsl
shrl
test
loope
in
push
and
add
adc
les
sbb
add
mov
add
int3
cld
xchg
and
and
loope
xchg
in
aad
fcom
sbb
push
xchg
xchg
adcb
test
das
rorl
pushf
push
or
adc
test
out
dec
or
sub
std
cwtl
xor
mov
mov
sub
adc
test
movsb
adc
inc
mov
add
xor
adc
or
mov
fld
loop
rclb
cmpsl
jo
mov
repnz
fsubl
mov
cmp
dec
cwtl
imul
add
mov
add
stos
into
in
pop
inc
in
cmpb
enter
fcmove
enter
mov
or
pop
cmpsb
orb
lahf
dec
push
fs
in
pcmpeqw
jle
push
das
cwtl
push
sub
mov
rcr
bound
imul
test
fcmovnbe
pop
add
pop
jge
push
add
ljmp
incb
fists
dec
pop
adc
fwait
jmp
shll
dec
punpcklbw
inc
jl
add
push
xchg
dec
lea
mov
enter
inc
add
or
inc
and
jno
cmp
sbb
lret
pop
sbb
cmp
in
orb
hlt
add
inc
push
xchg
std
inc
jae
add
adc
dec
aad
subb
into
in
sub
sub
std
jnp
scas
add
push
lods
nop
or
adc
mov
inc
xor
cltd
sub
xchg
inc
dec
cltd
push
idivb
sub
add
inc
mov
call
fisttps
dec
add
aaa
mov
idivb
or
cwtl
movsb
out
arpl
out
xlat
mov
in
add
cs
aam
stos
jb
and
xlat
xor
aad
and
enter
pop
fadds
xor
mov
imulb
pop
cmp
or
int3
faddl
dec
adc
ja
cmp
xchg
mov
sbb
lds
jmp
mov
leave
mov
les
add
and
xor
adc
push
mov
nop
jmp
mulb
dec
inc
add
popa
call
aas
enter
dec
add
scas
add
add
shll
push
das
add
out
mov
std
sbbb
xor
lcall
aas
js
add
shlb
pop
loopne
out
gs
imul
sbb
ja
loop
sub
cli
add
std
js
inc
cmp
pusha
in
incb
inc
test
or
pop
xor
repnz
add
sbb
loop
jbe
out
xchg
push
shll
adc
jecxz
lods
add
mov
inc
add
das
mov
xchg
push
cmpsl
nop
cld
pop
jle
in
and
cmpb
inc
xor
adc
test
repz
and
and
pop
sub
sub
mov
cmp
adcb
jp
inc
mov
pop
xor
pop
adc
inc
mov
loopne
cmpsb
rorl
inc
lock
std
lea
clc
cmpsl
test
repnz
pop
or
push
pop
mov
mov
test
or
das
add
cmpsl
xor
mov
jo
mov
dec
or
jae
rclb
test
jge
in
sbb
push
in
pushf
inc
xor
lcall
pop
sbb
in
mov
lea
mov
cltd
pushf
adc
bound
rolb
enter
clc
outsb
inc
stos
push
sub
and
add
aaa
mov
add
mov
sub
xor
out
mov
out
jno
cmp
sbb
sub
dec
fwait
cmp
adc
xchg
mov
jp
pop
sub
rcl
inc
dec
sub
mov
fst
pop
add
cmpb
mov
sbb
add
mov
outsl
xchg
sbb
fisttpll
and
xor
mov
insb
test
sbb
cmp
int3
mov
pop
js
dec
cwtl
mov
cmc
mov
sub
and
dec
cmpsb
jo
cmpsl
in
pop
mov
xchg
addb
inc
test
and
sbb
lahf
xchg
aam
or
jge
andl
mov
daa
push
add
inc
ljmp
loope
mov
mov
dec
adc
ljmp
or
or
fdivs
add
cwtl
push
inc
mov
les
loope
xor
and
insb
clc
cmp
loop
push
mov
inc
inc
shrb
call
ret
mov
xor
sub
pusha
cmp
xchg
rclb
push
mov
jno
xchg
dec
cmpsb
mov
shlb
std
dec
mov
pushf
mov
push
xor
inc
add
lods
xor
shlb
clc
or
pusha
cmp
or
jns
aas
add
add
sub
pminsw
es
adc
add
add
outsl
jecxz
ret
push
mov
shll
sub
push
dec
add
dec
xor
and
or
lods
sbbb
faddp
mov
fadds
pause
xor
insb
orl
stos
mov
or
sub
mov
add
mov
mov
cld
mov
fcoms
cmpsl
je
mov
add
mov
sbb
inc
out
test
add
sahf
test
outsb
daa
push
pop
adc
loopne
inc
sbb
scas
and
adc
iret
fwait
loopne
fstpt
cmp
pop
inc
jns
push
xchg
adc
cmp
mov
out
addl
test
inc
loopne
fildl
mov
fadd
ret
fs
enter
inc
mov
or
incl
je
cmp
test
std
inc
sbb
push
inc
and
fwait
pusha
add
dec
pop
mov
pusha
jne
aaa
ss
or
and
xor
lock
xor
or
ret
adc
loopne
popa
adc
and
inc
and
or
mov
imul
call
sbb
cmp
adc
adc
fcompl
mov
paddsw
nop
pop
sbb
cmp
push
pusha
cld
inc
sub
lcall
or
add
pop
mov
in
rol
cmp
aaa
sbb
cmp
dec
add
addr16
popa
and
cld
mov
call
hlt
das
call
test
adc
xchg
mov
pop
por
and
add
xlat
fmull
pop
rclb
pop
inc
pushf
in
movsl
scas
cmp
xchg
andb
mov
adc
ret
sbb
or
mov
mov
sbb
scas
in
sbb
fwait
mov
mov
sbb
movsb
cmp
and
das
enter
test
sub
inc
stos
sub
es
mov
xchg
int3
rclb
sub
movsb
inc
mov
xor
clc
and
dec
pop
enter
jmp
adc
sbb
les
push
ss
lods
push
cmp
aaa
xor
and
hlt
push
sbb
push
ljmp
int
cmp
lods
inc
les
daa
stc
push
bound
dec
das
xor
stc
ss
adc
or
js
repnz
icebp
sub
xchg
call
jecxz
mov
inc
std
gs
enter
push
cld
ss
icebp
jmp
cmp
adc
or
iret
lods
adc
mov
inc
pop
sub
jl
fmuls
test
cmpsl
sub
hlt
hlt
fcoml
outsl
add
mov
add
or
and
imul
mov
inc
adc
push
xor
mov
rorb
call
and
js
add
dec
push
fbstp
stos
call
jecxz
pop
loopne
enter
pushf
push
push
das
aas
add
test
cmpsw
add
ljmp
add
inc
adc
xchg
mov
add
adc
popa
es
inc
push
push
pusha
cwtl
es
add
je
mov
or
adcl
rolb
pop
movb
test
sub
mov
popf
add
pop
jne
repz
hlt
add
xchg
lock
movsb
push
or
lcall
loope
inc
fisttpll
inc
int3
hlt
jl
adc
jle
lea
dec
sarb
and
in
jb
shll
dec
movsl
push
shlb
inc
cmpsb
shrb
call
test
sub
es
xor
sub
sub
addr16
je
or
or
dec
les
cmp
sar
jae
ret
out
adc
or
dec
clc
js
out
faddp
xchg
fistl
pushf
add
rclb
loopne
in
imul
lods
inc
jns,pt
fmul
push
mov
rcr
outsb
js
lds
inc
mov
pop
fists
inc
js
inc
nop
loop
lea
cltd
mov
shll
cmp
call
xchg
adc
les
sti
mov
call
pop
orb
jbe
mov
scas
cmp
dec
xor
add
ljmp
sub
ret
int3
pop
adc
adc
mov
push
xchg
aam
loope
xchg
enter
in
xor
and
dec
cmova
clc
cmp
loop
mov
bound
stos
push
loopne
fsubs
fdivrs
imul
or
inc
clc
fsubrl
test
add
leave
or
ja
in
mov
add
or
out
fdivrs
leave
scas
out
cmp
insl
add
in
jge
jo
mov
mov
mov
sbb
pop
mov
jne
lock
jnp
add
sub
enter
add
emms
das
in
loop
lock
mov
mov
mov
cmp
fisubs
pusha
out
xchg
test
fcmovbe
jecxz
and
fsubl
test
test
loopne
xchg
sub
fsubs
mov
push
movsl
mov
int3
ljmp
inc
dec
sub
leave
inc
icebp
mov
mov
call
cmp
add
andl
mov
sbb
cmc
sbb
or
fldt
mov
std
stc
push
xadd
xchg
add
bnd
xlat
add
mov
sahf
inc
push
push
insl
add
mov
pop
test
nop
fidivrl
ljmp
pop
dec
add
loopne
mov
jns
add
test
inc
mov
mov
xchg
daa
xchg
dec
inc
fstpt
cwtl
rolb
jl
mov
lock
mov
inc
sub
cmp
in
icebp
add
add
jo
outsl
lds
mov
lods
sbb
lock
add
sub
or
cwtl
or
scas
sbb
add
clc
insl
gs
fidivrs
xor
mov
mov
test
mov
jecxz
pop
jo
jmp
orl
pop
js
mov
mov
addl
pop
incb
lods
repz
daa
sbb
inc
adc
cs
xor
sahf
addl
loope
es
add
in
in
sbb
inc
hlt
std
movsb
repnz
adc
add
mov
jae
popf
dec
and
sbb
idivl
push
das
clc
inc
daa
test
inc
cwtl
pop
inc
nop
clc
stc
sbb
push
xchg
and
dec
cli
pop
jl
out
adc
fcomps
test
jbe
leave
pop
cli
repz
xor
pop
jge
or
arpl
andb
stc
add
add
ret
je
cmp
js
lea
leave
cmpsb
or
and
pop
in
outsl
jecxz
stos
inc
loopne
pop
fs
push
mov
and
mov
adc
push
mov
sub
add
lret
clc
jge
add
rorb
mov
jl
adc
sbb
ror
add
in
add
fcom
cmp
xchg
or
push
jno
add
inc
or
adc
fwait
mov
add
cmpsl
test
mov
std
cwtl
pop
sub
jo
lcall
push
cwtl
mov
pop
mov
xor
adc
dec
add
push
sub
inc
adc
std
or
xchg
or
jp
sub
jecxz
add
popl
aaa
inc
std
jne
int3
xchg
rorb
in
mov
stos
add
add
xchg
xchg
xchg
xlat
cmp
mov
add
cltd
dec
mov
ror
stos
call
pop
lods
xchg
xchg
jb
sub
mov
mov
push
cmp
fsubrl
fsubp
mov
mov
call
adc
inc
mov
jno
and
push
out
pop
cwtl
out
and
cmp
mov
mov
cmp
mov
jge
jno
lret
pop
in
jmp
rcll
jbe
mov
addl
mov
mov
mov
add
inc
imul
adc
add
mov
sbb
pusha
lahf
push
sbb
push
or
jae
cltd
adc
mov
dec
pop
jne
sarb
cwtl
add
mov
pop
imul
dec
cmc
aaa
fdivs
in
sti
stos
fists
lods
jae
or
ss
xor
sbbl
es
sbb
rclb
imul
sbb
test
test
add
and
stc
ljmp
test
sbb
mov
mov
pop
pop
mov
mov
mov
mov
dec
or
adc
mov
ret
fsubrs
fcmovnb
imul
pop
insl
add
je
and
mov
xor
ret
cmc
xchg
add
jecxz
add
xchg
mov
enter
lods
hlt
mov
cld
sbb
mov
push
xchg
or
push
inc
push
jno
cmc
jge
or
xchg
lret
daa
in
enter
in
jns
jbe
xor
nop
adc
jp
mov
sbb
add
or
dec
or
rcrl
fs
shrb
push
inc
clc
rorb
cmp
xchg
xor
cmp
add
mov
add
inc
adc
or
mov
add
pusha
push
cmp
adc
insb
int3
jns
jo
dec
jmp
orb
sub
sbb
push
cmpsl
add
mov
dec
insb
add
push
cwtl
xor
stos
jne
push
pusha
inc
mov
fiaddl
cmc
aad
xchg
cmp
xchg
add
push
xchg
mov
or
push
push
cmp
pop
dec
xchg
add
cmpb
aad
dec
jecxz
mov
fbstp
stos
jmp
cmp
pop
dec
adc
cwtl
je
mov
andb
push
pop
push
pop
xchg
mov
adc
push
inc
les
add
cmc
add
sub
or
test
adc
pop
sbb
sub
jne
or
test
xor
or
sbb
or
mov
mov
mov
ja
in
sub
pushf
add
sahf
sub
or
lret
add
or
cmc
int3
xchg
xor
cmp
or
xor
xchg
int3
fidivl
and
mov
ja
testl
sti
test
stos
mov
inc
rorb
mov
mov
cmpsb
xor
and
xchg
adc
sub
dec
insb
repz
adc
dec
js
sub
adc
mov
dec
mov
push
adc
mov
bound
cmp
stos
fsubrs
pop
mov
sbb
pop
adc
nop
fadds
sbb
jge
adc
cmc
nop
rorb
adc
push
in
sub
lock
mov
inc
mov
pop
fbld
repz
adc
and
test
ss
push
faddl
aas
pop
mov
call
in
test
mov
add
and
cmp
xor
mov
and
push
xor
push
jmp
push
pop
dec
pop
jo
nop
add
fstpt
cmc
test
pusha
addr16
test
xchg
mov
adc
roll
and
pop
or
movsw
sub
jecxz
or
inc
adc
dec
sub
jb
enter
and
inc
outsl
or
mov
inc
insb
inc
lods
or
cmp
incl
hlt
pop
sub
push
pop
pusha
ja
adc
js
sub
imul
xor
nop
sub
jl
sbb
mov
inc
and
mov
xchg
adc
and
test
in
adc
imul
fiadds
cmp
sbb
shrl
repz
lea
dec
pop
fwait
xchg
imul
add
adc
add
mov
dec
or
sti
lcall
rorl
xor
or
ss
pop
popa
add
aas
dec
mov
jl
dec
popa
rol
cmp
and
stos
scas
pusha
ljmp
mov
mov
dec
push
add
or
mov
cmpl
aad
and
imul
add
adc
dec
and
sub
mov
push
nop
pop
aad
cmp
jecxz
lods
cmp
or
icebp
mov
addr16
test
inc
adc
xchg
adc
xchg
fadds
loop
add
or
mov
mov
call
mov
mov
fs
inc
cmpl
sub
cld
pop
or
cmp
hlt
or
stos
dec
xchg
fadds
pop
inc
das
jg
icebp
rcr
notl
cmp
loopne
stos
lcall
inc
or
mov
push
mov
inc
pop
test
pop
fimull
xchg
ja
leave
sub
push
js
dec
and
shlb
or
jge
fcom
cwtl
add
xchg
dec
dec
mov
faddl
xchg
outsb
addr16
ret
xchg
xor
and
in
pop
gs
push
mov
jge
xor
xlat
adc
mov
sbb
jle
add
xchg
cmp
and
lcall
and
pop
mov
nop
pop
sub
mov
lods
in
add
cmp
movsb
pop
bound
das
add
lods
or
dec
or
add
sbb
xchg
div
or
pop
add
xor
mov
arpl
jno
sub
rclb
cmp
mov
xchg
mov
fcmovb
add
lods
or
push
xchg
addb
in
pop
add
pop
dec
pop
sbb
mov
aas
mov
shlb
sub
aas
push
fs
mov
and
nop
xchg
dec
xchg
add
adc
mov
xor
add
sbb
push
dec
push
stos
xchg
push
jns
add
loope
cmp
and
pop
and
dec
mov
test
fadds
shl
xor
sub
icebp
jo
fdivr
cmc
call
sbb
mov
popa
jo
xor
sub
inc
and
inc
ljmp
fcomp
xchg
add
adc
jnp
enter
add
mov
std
inc
pop
mov
push
jle
adc
bound
jge
pop
shlb
mov
mov
or
fdivs
cmpb
pop
scas
nop
xchg
movsb
or
mov
adc
lods
pop
dec
pop
ds
lods
fisttpll
mov
cmc
push
cmpsl
jne
sub
test
adc
mov
stc
sti
and
pop
outsl
loopne
lret
sub
cwtl
les
rdpmc
int
push
push
pop
fistl
imul
mov
sub
movsl
shr
sbb
xor
fs
cs
pusha
push
aas
mov
or
xchg
mov
mov
fmuls
jg
cmp
mov
pushf
inc
je
mov
pusha
lret
cli
sbb
insl
cmp
scas
jae
enter
dec
bound
and
stos
sbb
dec
mov
push
loopne
push
sti
lret
inc
or
pop
xor
or
mov
dec
lea
and
icebp
js
jge
or
movsb
mov
push
xchg
add
jnp
es
add
out
orb
adc
or
add
scas
aad
rorl
adc
adc
mov
fnstenv
push
std
xor
ljmp
inc
mov
inc
fnsave
pop
mov
push
add
sub
and
dec
add
xor
fcmovbe
icebp
pop
ret
push
call
add
sub
pop
cmpsl
fisubrl
in
pop
cwtl
xor
xchg
loopne
fcompl
cmp
dec
jne
aas
xchg
aam
in
jae
loopne
fsubrl
int
add
xor
les
hlt
pop
mov
mov
mov
das
dec
pusha
pusha
movsb
cmp
mov
and
sub
fs
sub
cli
add
notb
cmp
incl
jns
out
lret
push
xchg
sub
icebp
adc
aas
and
fldt
sbb
add
shr
jns
jecxz
fdivrl
push
pop
inc
pop
or
fs
jae
sbb
and
loope
cmp
data16
call
pusha
stos
cwtl
nop
mov
xchg
cmc
push
adc
mov
orl
shl
je
cmp
sbb
jne
cld
jns
mov
sub
push
mulb
jmp
xor
sbb
push
cmc
add
mov
pop
xor
push
mov
dec
int
mov
repnz
rolb
fists
ja
mov
push
sbb
push
pushf
dec
bnd
or
pop
add
dec
les
andb
icebp
insb
test
mov
loope
out
push
mov
push
add
jl
mov
mov
and
add
insb
vmread
adc
or
movaps
pop
ja
popf
pop
fs
sbbl
mov
jne
inc
insb
pop
nop
mov
mov
in
aad
lcall
call
mov
xchg
cmpl
mov
sbb
fisttpll
push
outsl
cmp
rolb
test
dec
rolb
orl
fildl
ret
xor
push
out
push
cmpb
inc
adc
pusha
jo
stos
mov
mov
xchg
xchg
cmp
lock
sbb
or
int
cltd
in
adc
add
pop
aas
test
pop
cmp
jge
and
mov
mov
shlb
mov
pop
js
ss
cmp
mov
xor
insb
sub
xor
inc
pop
out
pop
adc
clc
mov
add
negl
daa
ficoms
jo
sbb
mov
fcompl
das
arpl
fdivrs
pop
add
idivl
jecxz
push
dec
xchg
std
add
add
inc
add
bound
sti
call
jb,pt
jae
lods
mov
leave
in
pop
pop
add
test
jno
sub
cmc
push
dec
pushf
inc
mov
push
pop
mov
sbb
sarb
test
or
mov
pop
test
sub
pop
in
jl
rcrb
dec
pop
das
test
ss
xchg
jg
push
cli
fcomps
xor
inc
dec
rcrb
je
pop
scas
addb
mov
inc
pop
lret
xlat
les
dec
adcb
push
jmp
adcb
cmc
add
mov
adc
pop
mov
add
inc
mov
mov
adcb
dec
shlb
and
add
mov
pop
mov
sub
mov
pop
push
je
adc
data16
adcl
pop
mov
nop
fildl
adc
xor
or
hlt
dec
add
cwtl
mov
mov
mov
add
test
fwait
call
test
jl
jo
xchg
mulb
or
sub
pop
mov
jl
cmp
mov
xchg
mov
or
repnz
stc
loopne
aas
or
lods
dec
xchg
movb
xor
pusha
lret
push
out
test
aam
mov
push
or
scas
mov
mov
add
addr16
test
xor
jns
insl
in
ljmp
sub
or
fstl
add
out
es
mov
xor
add
mov
stos
psllw
hlt
mov
cmp
inc
mov
sub
in
xchg
add
dec
push
cmp
xor
xchg
and
mov
mov
xchg
xchg
and
mov
dec
push
add
xor
add
mov
jl
add
xchg
or
cli
loopne
aad
aam
sbb
leave
pop
pusha
pusha
jbe
insb
mov
or
mov
add
in
sbb
sarb
repnz
lock
and
test
mov
inc
add
dec
movsb
shlb
inc
cmp
lock
outsl
cmp
inc
and
subl
adc
lock
adc
adc
add
ja
test
xlat
movaps
je
in
mov
imul
adc
iret
pusha
in
mov
sbb
and
mov
dec
cltd
cmp
or
xor
jp
mov
mov
or
mov
iret
pop
lcall
enter
movsb
ljmp
shrb
jmp
pusha
and
int3
lods
or
in
rclb
xor
loope
rolb
cmp
or
or
add
cmp
test
add
push
inc
add
pop
dec
popl
push
dec
inc
cmp
and
fcompl
test
and
or
xchg
xchg
mov
dec
loope
mov
fimuls
mov
adc
cmc
mov
or
push
xchg
inc
cmpxchg
xchg
loop
lock
jbe
add
and
cmp
push
add
ret
clc
lret
pop
add
inc
push
cwtl
jo
or
test
les
sarb
sbb
mov
inc
nop
inc
push
dec
clc
dec
ret
mov
or
sub
icebp
fcmovne
cltd
dec
hlt
cmpsl
add
arpl
aam
les
mov
shlb
lods
add
sub
ja
adc
xchg
rcrb
daa
add
jae
mov
pop
clc
out
cwtl
test
sub
nop
inc
push
mov
ret
imul
mov
popa
cmpsb
clc
or
test
add
jmp
adcb
cmp
sub
hlt
dec
int3
inc
and
add
cltd
dec
cmp
pop
adc
and
adc
push
mov
jne
cltd
fmuls
ja
add
packuswb
loopne
add
loop
adc
push
shll
les
dec
or
lods
push
lock
pop
jbe
leave
fwait
add
andl
movsb
sbb
inc
add
jae
xchg
imul
push
cltd
dec
cmp
add
mov
xor
add
xchg
pop
or
mov
mov
xor
sub
lcall
test
es
xchg
popa
sbb
adc
in
xchg
mov
pop
pusha
scas
add
enter
call
leave
outsb
pusha
mov
mov
popa
add
cmp
sub
fstps
pop
and
sbb
cwtl
push
inc
icebp
push
mov
jae
je
or
adcb
or
inc
test
arpl
pop
sub
outsl
movl
mov
mov
aam
lret
mov
dec
mov
add
out
sbb
add
adcl
in
fmull
and
mov
push
cmp
enter
lea
inc
hlt
push
adcl
ret
mov
scas
xor
loope
test
cmp
add
dec
dec
aad
in
cld
lds
aaa
hlt
mov
stos
cs
and
pop
test
insl
inc
xchg
jo
scas
add
xchg
and
insb
add
add
push
adc
dec
jb
push
insb
mov
loop
sbbb
loope
jo
jbe
fdivl
dec
out
xor
int3
push
push
fsubrs
add
cmp
into
mov
iret
inc
mov
inc
pop
mov
adc
dec
je
cmp
sbb
cmp
adc
fnsave
sahf
adc
notb
lods
pop
push
repz
aad
jg
inc
fstps
jbe
outsl
jmp
add
add
fnsave
cmp
jg
or
cmpsb
xchg
mov
xchg
cmpl
jecxz
xchg
sub
icebp
pushf
loop
cmp
mov
inc
cmp
arpl
je
adc
adc
jne
cmp
sbb
popf
fcoml
mov
cmp
dec
adc
jmp
adcl
mov
and
and
mov
sbb
mov
pop
pusha
dec
xor
call
ljmp
lea
fdivs
cmp
push
in
addb
mov
cmpsb
pop
push
cltd
loopne
mov
ljmp
faddl
mov
andb
es
mov
sbb
sub
and
testb
pop
fstpl
inc
jo
clc
xor
xlat
xchg
add
sub
xor
stos
mov
xor
jb
js
inc
pop
insb
mov
rcl
sbb
sub
push
xor
xorb
mov
pusha
cmc
adc
sub
add
icebp
imul
cmovo
or
adc
pusha
ljmp
jl
mov
pop
orb
lock
fisttpll
mov
inc
mov
fs
jo
loopne
push
jg
cmp
rcrl
cmp
or
lcall
je
sbb
jb
aaa
xor
mov
mov
jo
sub
cmp
push
push
lcall
mov
pop
or
arpl
hlt
mov
sub
sub
test
and
mov
mov
jne
shlb
adc
popa
cld
push
cmp
fiaddl
mov
in
ds
adc
cmp
add
cmp
loopne
minps
addr16
mov
push
mov
ret
pop
arpl
fistps
jecxz
push
sbb
rorb
or
pop
adc
add
and
adc
jg
jb
push
jmp
push
add
mov
jg
rcll
jmp
mov
mov
push
or
fsubr
incb
or
fsubrp
lds
inc
and
cmpsl
mov
push
pop
push
mov
inc
jecxz
pop
sub
pop
add
sbb
sub
mov
pop
pop
cmpl
in
mov
or
push
sub
add
add
pop
sub
mov
add
mov
or
adc
add
xchg
je
decb
lahf
lret
mov
clc
mov
cmp
cwtl
push
push
jmp
add
loope
ficomps
shl
inc
add
sbb
jmp
jo
cmp
sub
pop
sub
push
or
jmp
pop
int
xor
aad
or
mov
jbe
sub
mov
imul
or
ljmp
sbb
pop
inc
mov
sbb
add
int
cli
add
loope
lea
push
outsb
addl
rol
lds
and
inc
pop
push
mov
lods
into
test
pusha
xchg
adc
push
outsl
push
in
js
xor
aam
mov
pop
push
push
loop
ljmp
mov
push
pop
test
add
add
mov
stos
adc
rcrl
ds
push
or
clc
push
aaa
adc
aad
es
pop
sub
xor
or
lret
ret
xor
dec
sub
and
gs
inc
ds
mov
or
jge
mov
sub
dec
cmp
adc
push
add
fadds
sub
shl
add
jmp
push
pop
fsubs
adc
pusha
push
pop
xor
inc
sub
push
mov
jle
aad
cmc
in
out
and
bound
stos
pop
or
mov
orl
add
adc
sarl
inc
loop
push
mov
adc
inc
mov
popf
adc
jmp
outsl
xchg
xor
push
ret
push
ds
nop
mov
mov
or
add
sbb
pop
add
inc
incl
xor
les
pop
loopne
in
adc
dec
add
sub
mov
lcall
pop
add
push
cwtl
adc
adc
mov
into
adc
pop
xchg
cltd
xor
mov
or
mov
inc
or
push
ret
aam
jmp
sarl
jmp
ret
pop
jmp
pop
stc
xor
pop
shll
cwtl
pop
jmp
xor
scas
ljmp
sbb
daa
push
and
add
in
out
sub
sub
inc
and
adc
jp
push
mov
aaa
sub
xor
sbb
inc
fwait
add
or
sbb
int3
movsb
inc
pop
pusha
out
jmp
sub
and
add
cmpb
pusha
lock
pusha
fprem1
out
inc
in
xchg
dec
xchg
jp
insl
jbe
and
pop
pop
mov
mov
and
dec
push
push
testb
sub
sub
pop
mov
xor
sbb
iret
pop
or
inc
int
adc
cmp
std
pop
jmp
dec
outsl
push
push
repnz
adc
push
aaa
and
enter
ss
sbb
jns
xor
lock
rclb
sub
and
inc
or
inc
xchg
sub
push
mov
shl
inc
std
adc
notb
push
sub
sbb
aam
enter
dec
decb
xchg
sub
push
and
sub
out
inc
mov
adc
fwait
test
leave
aad
stc
test
cmp
pushf
ret
stos
add
rorb
cmp
iret
mov
cmp
push
incb
stos
std
add
mov
fdivrs
lea
jmp
out
adcb
xchg
negl
xor
rcrb
push
mov
xor
or
push
scas
arpl
fmul
out
adcb
push
mov
push
movlps
out
ret
add
pusha
enter
repnz
pop
cltd
xor
push
daa
add
fiaddl
inc
mov
xchg
jno
dec
xor
adc
pusha
movl
outsb
out
cmp
adc
xor
dec
mov
sub
cs
jae
mov
jns
add
flds
cwtl
cmp
test
pusha
jp
xor
fs
add
rcll
add
add
fistpl
testl
xchg
jnp
push
push
push
pop
rolb
jmp
ss
push
dec
mov
sub
pop
clc
sbb
xor
jnp
mov
dec
xor
jbe
fsubl
jmp
test
inc
or
iret
fwait
test
out
xor
push
in
popl
in
push
inc
rcll
jbe
push
push
out
pop
pop
pop
push
mov
jg
icebp
pop
ror
subb
xor
scas
mov
fdivrl
push
push
test
adc
add
sub
inc
add
jbe
mov
xor
cmp
push
sub
repz
add
stos
inc
test
jmp
add
pop
xchg
nop
sub
mov
pop
mov
leave
pop
popa
arpl
dec
outsb
pop
xor
pop
xor
aas
roll
add
fwait
ss
push
inc
mov
xlat
and
int3
movsb
cltd
sti
popa
jmp
push
mov
inc
adc
xchg
fsubs
mov
adc
sub
add
push
jo
push
mov
pop
push
dec
pushf
call
enter
push
jg
inc
xchg
enter
adc
inc
sub
pop
sub
sub
add
and
cli
jl
jg
movsl
call
and
ds
xor
push
pop
inc
add
fdivrl
or
fsubr
mov
mov
and
jl
cmp
or
xor
mov
outsb
daa
add
pop
and
movl
xor
shlb
inc
sbb
jmp
ljmp
cli
rorb
mov
loopne
stc
inc
addl
bound
inc
orl
int3
xchg
inc
shrb
sub
mov
xorl
push
push
jmp
mov
neg
push
dec
std
add
or
push
mov
pop
xor
inc
mov
push
pop
decl
idiv
loopne
xchg
jmp
ret
shlb
adc
xor
push
adc
push
push
jmp
jae
movsl
les
stos
pop
adc
daa
add
push
cmc
int
push
dec
push
adc
inc
xchg
bound
bound
mov
xor
dec
je
lcall
fidivl
jle
add
into
mov
idivb
add
orl
xchg
sbb
push
fsubrp
not
adc
add
inc
and
add
sub
scas
cmpb
out
mov
xorl
add
xor
sub
pop
pusha
mov
xor
outsb
or
push
push
jae
inc
loop
push
and
add
jmp
nop
stc
dec
andb
dec
add
push
sbb
inc
cmp
add
push
xchg
ja
inc
stc
sarl
xlat
lret
xchg
into
xchg
adc
push
loope
ret
jmp
loope
inc
sub
push
sub
aad
fadd
adc
mov
pop
icebp
adc
jns
lock
add
jae
lahf
popa
es
ss
sbb
ss
ret
sbb
roll
aad
gs
shr
xor
in
call
fwait
sub
add
mov
xchg
repz
add
push
repnz
in
inc
push
ret
stc
dec
jmp
push
pop
ret
into
mov
mov
add
pop
push
cmpl
sub
pop
ret
adc
daa
lea
sub
mov
mov
bound
std
inc
js
sub
adc
ja
cwtl
jge
sbb
dec
mov
push
adc
or
test
mov
add
xchg
jno
out
push
orl
or
movsl
add
sub
jmp
mov
and
sbb
adcb
fimuls
xchg
int
add
and
cli
cmp
mov
pusha
iret
mov
mov
pop
sarb
aas
dec
push
add
loope
inc
or
xor
fisubrl
rcrl
or
aam
dec
lahf
xchg
push
rol
mov
pop
add
and
loopne
ljmp
add
jmp
jmp
hlt
enter
push
rcrb
sub
jmp
mov
test
nop
jo
test
lods
push
loop
aam
lcall
shlb
and
outsl
es
mov
and
mov
testb
sub
scas
fisubl
cmpsl
sub
shrb
out
aam
rcrl
leave
arpl
icebp
bound
ret
roll
lret
fsubrs
std
add
fdivrl
iret
daa
cmp
add
mov
out
sbbl
push
jmp
pop
push
pusha
bound
daa
cli
dec
add
lret
fisubl
push
inc
leave
cmp
xor
dec
rorl
inc
fldt
jp
push
mov
mov
or
dec
sub
push
sub
pop
sbb
add
push
mov
push
or
dec
mov
out
addr16
push
adc
inc
push
pop
je
mov
push
push
push
mov
lcall
xor
jecxz
dec
ss
inc
ljmp
dec
rorl
push
inc
pop
shll
imul
mov
add
pop
xor
jle
sbb
sbb
cmp
aas
push
jbe
cmp
or
jmp
push
add
not
xor
or
cmovb
jmp
insb
jbe
adc
xchg
nop
ret
push
fld
or
adc
mov
ret
sub
xor
cltd
adc
add
test
sbb
sbb
cmp
negl
inc
daa
inc
cmp
mov
push
mov
pop
neg
push
add
dec
sub
add
and
adc
in
lods
push
adc
sub
int3
dec
mov
sub
sti
in
xchg
xchg
sub
pop
cmp
cmpsl
sar
pop
and
push
push
push
inc
jp
push
jns
icebp
shr
not
shl
cmpsb
or
subb
push
push
mov
icebp
xchg
mov
and
sbb
or
std
xorb
mov
pop
mov
jmp
xchg
push
rorl
sbb
xor
inc
aad
bound
loopne
push
mull
enter
add
lock
jmp
pop
dec
inc
js
mov
insb
sbb
adc
push
xchg
loope
inc
dec
testb
shl
dec
add
rorl
dec
mov
jns
and
addb
addl
sahf
int3
das
faddp
daa
pop
push
and
sub
scas
push
adc
xorl
sub
adc
lcall
ret
pop
or
pop
clc
mull
mov
enter
dec
jnp
es
lahf
push
test
mov
or
js
mov
jno
or
es
or
mov
inc
cmp
jmp
mov
arpl
lds
and
inc
push
loopne
push
push
mov
jbe
fsubrl
xor
xor
jmp
loop
sar
sbb
out
and
dec
push
push
add
pop
sub
in
pusha
lahf
cmc
add
rolb
mov
dec
ljmp
out
mov
mov
jmp
push
aaa
xchg
push
pop
push
int3
adc
push
pop
scas
sar
inc
xor
popa
mov
jbe
addl
dec
pop
and
pop
test
and
jo
xchg
pusha
push
mov
cmpb
movsl
mov
mov
pop
nop
enter
cmpsb
sbb
push
push
push
add
shl
mov
dec
test
push
fnsave
jne
sub
loopne
sub
jb
sahf
shll
adc
shl
or
push
lock
cli
xchg
repz
lds
jmp
iret
or
and
inc
pop
adc
jl
lcall
add
mov
pop
add
pop
xor
push
dec
mov
push
mov
ficoml
push
into
xchg
sbb
jmp
out
shl
cmc
imul
xor
pop
sbb
push
pop
push
bound
jmp
arpl
inc
push
mov
and
inc
clc
jmp
cmpl
movlps
inc
push
jmp
mov
nop
add
mov
push
inc
cmp
jmp
mov
add
mov
sub
dec
add
in
pop
sub
sbbb
inc
pop
push
out
movsb
std
push
add
xchg
lods
xchg
pop
jl
sub
xchg
jg
call
sti
and
pop
add
push
or
pop
sbb
repz
jmp
xor
mov
push
and
inc
jecxz
mov
inc
or
stc
shl
mov
add
loop
add
sbb
sub
sbb
pop
test
xchg
push
mov
sub
mov
xor
pop
dec
shl
ja
stc
cmp
sbb
push
mov
aas
push
dec
add
out
mov
mov
faddl
or
mov
xchg
mov
push
insl
cmp
shl
in
push
sbb
xchg
adc
testl
lds
jmp
and
pusha
addb
mov
mov
pop
xor
stos
add
shr
push
cwtl
cmp
pusha
daa
jmp
or
dec
test
inc
mov
and
rorb
out
or
push
outsb
lcall
xlat
xor
jmp
addb
push
mov
mov
dec
sarb
dec
sub
or
add
add
ljmp
and
stos
adc
dec
add
push
inc
in
subb
loope
fildll
cmp
xor
testl
in
xor
or
jp
jo
mov
push
push
stos
push
push
mov
lods
subb
or
cwtl
or
sub
sbb
mov
mov
ffree
insb
jp
and
and
jp
and
lahf
rorb
cmp
movsb
sbb
sbb
inc
pop
add
scas
push
sbb
push
rcrb
sub
in
dec
adc
push
rclb
shrl
testl
sbb
out
sub
pop
mov
jle
push
adc
add
mov
push
xchg
inc
jmp
in
enter
icebp
mov
rcrl
not
mov
rorb
lahf
push
jo
push
push
sahf
inc
popf
mov
mov
ljmp
add
mov
sbb
ret
mov
sub
test
jmp
push
jl
jle
and
pop
fiaddl
insl
inc
add
cmp
add
push
add
shr
shl
adc
xchg
movsl
push
pop
loope
shrb
js
test
mov
dec
mov
pop
pushf
lock
xlat
inc
and
add
fldenv
sbb
fwait
lods
or
add
insl
sahf
aas
pop
loop
pop
icebp
sbb
repz
adc
sub
push
dec
add
and
add
cmp
adc
add
push
add
sub
popf
lcall
pop
ja
js
outsb
xchg
xchg
sbb
dec
insb
out
mov
push
fwait
pop
shl
jmp
pop
dec
or
jno
roll
lods
cmc
bound
add
addl
sub
insb
movsb
or
adc
adc
adc
dec
or
movsb
data16
adc
xchg
lahf
mov
push
inc
pop
and
xor
fmuls
sbb
out
adc
xor
push
push
or
add
sub
popa
add
mov
sub
jo
and
sbb
mov
shr
sahf
inc
xchg
dec
adc
push
xchg
js
arpl
iret
lock
inc
xor
pop
mov
in
push
bound
push
jle
push
add
addr16
mov
aaa
test
adc
adc
clc
clc
mov
push
add
shr
add
cwtl
xor
xchg
insl
push
xchg
and
repnz
mov
in
clc
mov
xchg
mov
inc
mov
jnp
dec
inc
rolb
mov
pushf
mov
popf
out
cwtl
add
inc
dec
sub
pop
aaa
ret
push
pop
push
cwtl
add
dec
jns
ds
push
pop
xor
dec
jmp
push
xchg
dec
cs
mov
pop
mov
mov
mov
sbb
test
mov
aaa
xchg
les
pop
pop
xchg
xlat
sub
push
or
or
xchg
xor
inc
push
xchg
jbe
push
xor
inc
int3
mov
add
daa
cs
test
mov
dec
dec
cli
and
jbe
repnz
dec
mov
jo
mov
pop
or
pop
imul
ds
les
lea
or
xor
adcb
push
and
push
xor
and
movsb
mov
inc
or
test
mov
or
repnz
pop
adc
fwait
mov
push
hlt
pop
cmp
or
or
and
jns
sub
aas
add
xchg
movb
jne
pop
ja
sub
out
in
hlt
mov
push
and
push
xchg
shl
jmp
adc
mov
pusha
mov
mov
imul
inc
in
addr16
or
icebp
xchg
cmc
in
call
add
in
pusha
push
xchg
inc
pop
inc
and
adc
add
push
inc
xchg
loopne
mov
popa
or
out
pop
roll
sbb
inc
cs
push
fildl
add
jmp
dec
xor
and
jns
sbb
jecxz
push
cmp
sbb
xor
sub
or
mov
pop
sub
in
sub
and
mov
add
rolb
inc
xorb
add
push
jns
mov
mov
nop
out
mov
ja
or
jle
pop
lods
sbbb
pop
cs
aad
or
ficoml
shrl
int
add
adc
popa
pop
push
jg
sub
add
jmp
inc
jne
das
jbe
add
notl
add
adc
pop
or
adcl
test
adc
or
add
repz
fdivrs
sbbl
add
jmp
jnp
roll
aaa
jle
mov
imul
je
and
std
pop
and
jp
shlb
mov
mov
das
and
xchg
sub
sbb
cld
cwtl
or
xor
sarl
push
push
add
and
pusha
cmp
pop
or
lea
stos
es
mov
loope
pop
xchg
push
push
add
cmp
xchg
insl
cmp
out
sti
notb
lock
mov
push
lcall
jmp
mov
rcl
add
push
jge
repnz
cmp
cmp
push
dec
adc
sbb
fs
jp
shrb
js
xchg
and
sub
ret
insl
jmp
sbb
mov
add
or
add
shl
xor
arpl
or
test
or
je
pushl
call
push
push
xchg
ror
pop
ss
inc
xchg
push
pop
push
std
sbb
cmp
rcrb
jnp
push
mov
push
xlat
push
inc
adc
xor
and
enter
cmp
f2xm1
or
pop
xchg
mov
xchg
add
out
test
push
mov
mov
pushf
ficompl
sub
mov
pop
pop
sbbb
arpl
fnstcw
pop
lret
or
pop
and
mov
pop
testl
cmp
mov
mov
ret
into
push
mov
enter
aam
mov
pop
ret
lret
adc
repz
push
in
lret
shlb
sub
pop
les
ret
inc
movsb
sub
flds
mov
jp
popa
pop
cs
and
add
adc
xor
push
mov
inc
addl
xor
mov
pop
jle
push
scas
add
pop
and
mov
cmpsb
insl
mov
jae
cld
imul
mov
fadd
jp
jne
enter
pop
add
xchg
dec
push
mov
lcall
xor
cmp
jg
sbb
sub
rcll
int
cmp
sub
dec
ucomiss
xchg
jo
sbb
and
jmp
pusha
dec
scas
add
xor
imul
jmp
mov
mov
scas
mov
xchg
jg
dec
imul
mov
pop
xchg
cltd
sbb
mov
in
pop
mov
test
add
pop
repnz
lods
add
xor
test
inc
mov
cld
pop
dec
addr16
add
sub
add
cs
mov
add
sbbb
sbb
jmp
je
fs
imul
push
add
sbb
push
cmp
add
push
add
mov
push
sub
push
pop
pop
xchg
jmp
cmp
popf
ret
or
adc
cwtl
push
mov
not
xchg
jmp
or
pop
add
inc
adc
lds
into
pop
push
xor
mov
and
repnz
adc
mov
add
inc
mov
fdiv
sbb
mov
mov
pop
mov
push
add
or
fcoml
mov
cld
jmp
loope
jge
sbb
test
pop
adc
inc
adc
adc
lret
push
cmp
inc
pop
add
fwait
dec
subb
mov
stos
mov
sbb
sub
inc
pop
enter
idiv
or
xor
clc
jg
xor
and
test
add
push
adc
mov
aas
sub
movsl
jmp
xor
and
sbb
daa
cmp
jecxz
sbb
sti
lret
xlat
out
daa
in
hlt
mov
clc
hlt
mov
push
clc
add
repz
lret
pop
mov
int3
adc
sarb
pop
and
in
jmp
pop
dec
and
pusha
jne
loopne
sar
test
add
mov
jmp
mov
enter
test
or
fildl
push
rcrl
jmp
push
push
call
data16
and
push
fstpl
add
loop
push
cmp
jns
mov
xchg
or
jle
pusha
mov
or
js
mov
inc
lret
push
fsubp
mov
lock
and
push
or
xor
pop
rorl
cs
pushf
or
mov
pop
xchg
not
iret
add
jle
sbb
loope
dec
gs
pop
cmp
mov
xchg
int
shr
shl
imul
rolb
push
inc
sub
iret
scas
xor
clc
insb
mov
fildll
nop
ja
movsb
pusha
movsb
xchg
repnz
or
pop
xor
pop
add
jno
addr16
add
xor
arpl
out
cmp
and
push
push
sti
iret
aas
push
cltd
aad
clc
or
pop
push
stc
sub
outsb
mov
inc
mov
das
loop
add
dec
inc
and
sbb
dec
push
jecxz
sarl
jmp
xor
mov
cli
sbb
add
push
sti
pop
andb
jbe
mov
and
mov
lar
pop
cmp
sti
pop
sbb
jecxz
jnp
xchg
aad
push
pop
sub
fadds
es
ljmp
jmp
shrl
insb
xchg
or
into
insl
lock
add
iret
jmp
das
jbe
or
add
mov
cmp
pop
sub
inc
add
popf
add
rolb
push
xchg
xor
fcomps
mov
xchg
fs
mov
inc
jmp
inc
mov
dec
add
and
mov
cmp
inc
mov
push
iret
pop
push
ret
dec
pop
data16
inc
push
bsr
cmp
push
cltd
ljmp
push
add
jmp
sbb
push
push
jg
jo
daa
lds
or
sbb
or
and
rolb
lcall
bound
mov
fmuls
xchg
dec
rorb
scas
jae
or
jmp
adc
jno
add
ljmp
int
inc
shl
rol
jno
sub
sbb
cs
cmp
xchg
adc
mov
add
add
push
cmpsb
dec
mov
cmp
call
inc
add
fwait
repnz
xor
movd
xchg
xlat
mov
clc
decb
jne
ljmp
loopne
mov
xor
loope
xchg
xchg
std
fnstenv
push
jp
add
mov
and
std
insl
and
rorb
or
js
adc
xchg
pop
add
mov
js
daa
xchg
pop
mov
sub
lea
mov
ret
imul
jnp
push
xor
adc
xchg
add
jl
adc
add
push
lretw
fdivs
outsb
dec
fildl
add
xorb
call
cmpb
lods
or
and
adc
imul
rolb
cmp
dec
inc
xor
adcb
push
sti
mov
pop
pop
les
mov
inc
cmp
sbbb
fbstp
add
jmp
mov
sub
lret
data16
outsl
dec
push
push
outsb
push
mov
push
or
adc
add
lahf
mov
push
call
inc
xor
xchg
dec
push
or
add
xchg
mov
cmpl
jmp
movb
cmpsl
sub
mov
add
adc
hlt
loope
dec
dec
and
imul
add
pop
stc
xor
ds
mov
jmp
xchg
aaa
xchg
push
mov
dec
mov
int3
cmp
or
std
stc
mov
je
movl
in
push
cld
fcmovnb
push
sarl
inc
subb
les
stos
add
not
test
xchg
loop
and
sub
xchg
loopne
dec
lret
push
pop
cmp
ret
push
or
jo
push
cwtl
aaa
inc
mov
push
push
std
fstp
xor
add
loope
push
cld
cmpsb
mov
popf
cmpb
and
sbb
add
mov
and
pop
cmpsb
add
jne
mov
jmp
inc
xchg
or
push
mov
clc
add
push
xchg
mov
fxch
fisttpl
clc
les
mov
andb
jge
xor
pop
in
mov
sbb
ds
cmp
cmp
sbbb
aas
data16
leave
add
add
dec
push
adc
movsb
adc
pop
in
mov
push
inc
jge
sub
pusha
loop
inc
fwait
sbb
adc
fcoms
ret
rorl
xor
add
cmpsl
push
lcall
dec
rcrl
xor
lret
sub
ret
add
neg
icebp
add
xorb
js
nop
lods
dec
adc
push
lods
into
push
mov
jae
cmp
pushf
mov
pop
jmp
push
inc
jmp
jne
ret
inc
or
addl
push
jmp
push
mov
xorb
incl
jge
lret
sub
imul
add
cmc
pop
dec
pop
cs
xchg
pop
cmp
inc
adc
aas
xchg
push
xchg
mov
scas
xchg
xchg
movsl
add
adc
push
mov
sub
jmp
lret
pop
lcall
aaa
xor
insl
mov
test
mov
and
shll
sbbb
add
pushw
xchg
hlt
test
push
xor
shrb
mov
or
or
testb
pop
xchg
adc
jl
cmp
aam
out
pop
add
mov
mov
adc
shr
and
or
insl
dec
test
mov
sub
insl
mov
repz
push
xchg
out
jne
mov
xor
cmp
sbb
or
xchg
shrb
idivb
adc
test
push
int
cli
jne
xor
icebp
pop
pusha
psrad
inc
dec
or
jge
adc
add
fildl
ret
lret
ljmp
imul
add
lea
out
or
pop
out
js
add
pop
mov
es
sahf
adc
call
divl
push
out
in
mov
test
addl
xor
aas
sub
xor
je
orl
inc
mov
xor
lcall
inc
mov
add
jmp
lods
push
mov
in
inc
test
lret
dec
mov
or
and
mov
push
dec
push
int
add
mov
daa
rclb
pop
mov
andb
iret
pop
pop
jmp
push
out
and
cmp
adc
pop
and
mov
leave
sub
jmp
es
addb
push
push
popa
ljmp
sub
iret
adcb
pop
neg
cmp
add
cli
add
push
push
icebp
sub
loope
iret
inc
and
lods
jnp
adc
jbe
inc
push
inc
mov
adc
sbb
or
jo
inc
and
pusha
and
cmp
jnp
inc
hlt
xor
fldt
jg
mov
cmp
mov
mov
mov
mov
aad
inc
mov
push
repnz
aas
pop
daa
shl
mov
push
fwait
insb
mov
outsl
pusha
mov
fwait
and
js
rol
mov
cwtl
fisubl
or
xlat
inc
pop
or
sub
pusha
inc
adc
xor
jp
or
jne
push
fidivrl
adc
adc
dec
mov
and
ljmp
inc
push
pop
shll
push
jmp
cs
and
mov
add
sub
lret
jmp
pop
mov
mov
push
mov
mov
xor
fisubrs
nop
cmp
loop
dec
push
xchg
call
cmpb
loop
les
inc
sbb
je
movsb
xchg
xor
cmp
push
jne
nop
lods
or
xor
das
or
adc
insl
lock
popf
insb
push
das
push
roll
rol
sub
fadds
mov
shll
or
push
bound
pushf
into
lret
mov
push
jno
je
popa
xor
pop
and
add
jns
adc
lods
mov
pop
and
nop
push
jmp
popa
pop
and
push
inc
popf
and
pop
test
inc
pop
shl
jle
lahf
jmp
and
lock
adc
xor
mov
sbb
nop
jnp
and
dec
stos
add
xlat
inc
rorb
add
sub
sub
gs
add
addr16
ds
popa
cld
ss
inc
lds
pop
push
rol
js
add
sub
xor
xchg
and
test
fmull
repnz
es
inc
add
mov
loopne
cmp
insl
jo
pop
add
aaa
loope
dec
push
loopne
sub
addr16
xor
mov
sub
lods
xor
adc
aaa
dec
cmp
imull
and
push
ljmp
xor
sub
or
add
push
lods
insb
mov
loopne
inc
mov
mov
pop
ljmp
add
dec
aas
jp
in
pop
mov
or
jmp
xor
pop
out
clc
in
add
jbe
xchg
or
lret
pop
jmp
push
mov
push
adc
jmp
je
push
pop
data16
loope
jmp
push
lock
inc
push
inc
xchg
sbb
not
or
jmp
push
xchg
je
pusha
dec
in
or
and
adc
mov
pop
pop
aaa
mov
add
stc
or
outsl
xor
pop
adc
jbe
adc
cwtl
pop
cwtl
fwait
pusha
mov
mov
mov
pop
add
mov
jle
mov
shl
inc
inc
mov
xor
xchg
cmp
call
pop
sbb
mov
gs
and
fs
push
loope
adc
in
negb
xchg
repnz
pop
dec
lods
inc
pop
out
and
or
push
dec
mov
mov
sbb
jno
orb
jecxz
rol
jl
push
fildl
pop
push
pusha
pop
arpl
inc
push
jmp
mov
add
push
cmp
pop
jae
dec
cld
dec
mov
push
xchg
xchg
cmp
push
inc
nop
pop
shl
repnz
and
jg
cmp
dec
test
xorb
pop
push
mov
mov
pop
bound
daa
push
cmp
pop
fsubr
jl
movsl
mov
jge
bound
lahf
hlt
lds
test
out
divb
sbbl
stos
out
mov
js
in
sub
sti
push
sbb
push
jmp
and
push
iret
add
push
mov
dec
xchg
shr
fcomps
mov
inc
scas
add
jmp
shl
add
shl
xchg
jmp
insl
mov
dec
add
jmp
fsubs
test
mov
pop
push
stos
call
in
push
not
jmp
or
xor
es
lods
aas
jnp
in
loopne
or
inc
cmpsl
sub
outsb
rcrl
fidivrl
jmp
xchg
mov
fsub
add
mov
jmp
mov
paddw
adc
and
or
sub
push
and
lock
xor
jp
out
dec
mov
sub
push
pop
inc
mov
mov
or
xchg
scas
clc
stc
or
daa
loope
ficompl
or
pslld
outsb
out
mov
shrb
out
sti
and
pop
je
js
jl
rclb
je
data16
shr
sub
jo
pusha
and
sub
dec
bound
aas
sbb
fld
fs
aad
push
adc
subb
imul
add
inc
mov
push
pushf
add
jle
add
adc
in
dec
pop
fdivs
sub
xor
scas
dec
jp
push
imull
adc
dec
or
jmp
mov
test
push
mov
push
push
push
shll
mov
jp
stos
xor
jmp
ret
sbb
test
cs
adc
add
push
popa
or
adcb
fs
sub
pop
sahf
in
faddp
cmp
cmp
jo
or
push
mov
push
pop
push
add
scas
in
enter
inc
sbb
or
mov
jmp
lock
pop
inc
push
mov
add
enter
rolb
pop
jmp
mov
mov
mov
xor
mov
or
adc
mov
cwtl
xor
add
jbe
ljmp
inc
rorb
fdiv
cli
sbb
lcall
mov
inc
jo
or
shlb
push
dec
cmpsb
and
xor
fimuls
daa
push
out
lahf
dec
stc
cmp
and
cmp
mov
data16
xlat
sub
add
xchg
shrb
rcll
inc
int
mov
test
lcall
pop
jmp
aad
sub
stos
inc
mov
orb
or
lods
test
pop
imul
xor
push
add
repz
add
or
mov
mov
inc
or
pop
jo
mov
in
mov
jg
adc
add
les
xor
dec
jbe
adc
bound
adc
mov
mov
sub
push
jo
js
jne
mov
into
pop
cli
neg
xchg
pop
fdivrp
mov
cltd
mov
jmp
xlat
sub
push
push
sbb
or
add
xor
pusha
sub
xchg
jp
adc
sub
mov
or
push
notl
sub
loop
stos
jmp
mov
int3
lds
cwtl
ret
add
out
inc
mov
pop
popf
bound
fisttpll
jne
shlb
out
cli
popf
xor
aaa
sbb
fwait
jmp
dec
add
mov
sub
nop
mov
adc
pop
lds
fists
dec
or
sti
push
addr16
or
arpl
cmpb
push
jbe
popa
cmp
add
or
adc
adc
jmp
insb
add
call
pusha
jnp
cmp
cmc
push
or
mov
mov
add
push
sub
cmp
cmp
mov
push
incb
push
xlat
aas
mov
imul
and
pop
lods
push
cmp
or
mov
jae
adc
add
test
push
call
test
add
out
add
neg
push
mov
cld
push
call
daa
and
mov
push
mov
push
mov
daa
imul
mov
pop
sub
rcll
sarb
push
jb
sbb
std
and
xchg
not
out
add
dec
ljmp
outsl
xor
xlat
clc
jo
push
pop
mov
lods
lcall
lock
pushf
push
cmp
in
addr16
movsl
jecxz
insl
pop
xchg
jg
xor
gs
push
mov
mov
add
data16
adc
push
mov
shr
subb
mov
add
sbb
pop
cs
and
bound
pop
and
push
jl
mov
out
dec
loop
jmp
xchg
sub
and
sbb
lods
pusha
lahf
inc
imul
ljmp
jno
add
jmp
mov
pusha
pop
xor
xor
adc
jp
dec
jl
push
out
sub
ret
add
fistpll
cmpsl
daa
inc
push
adc
add
inc
push
cwtl
sti
or
mov
sub
dec
jl
add
sbb
sahf
sbb
xor
push
and
cmp
jle
pusha
jb
je
mov
and
daa
pop
or
aaa
push
sahf
aas
sbb
sbb
inc
or
or
mov
int
push
ret
add
lret
adc
cmp
ljmp
jmp
int
mov
stc
push
loopne
or
movsb
or
test
push
repnz
xor
jg
icebp
sub
inc
adc
daa
add
ljmp
and
jmp
mov
cwtl
neg
push
push
jno
int
int3
pop
mull
jmp
jmp
rorl
rorb
cmp
out
mov
cmp
or
cltd
mov
insb
pusha
fcmovnb
push
and
jmp
mov
insl
lods
push
inc
subb
mov
pop
inc
add
mov
pushf
ljmp
mov
mov
sub
push
nop
lea
movsb
popa
xlat
mov
mov
ficoms
stc
sub
add
jmp
js
jmp
out
mov
pop
aas
adc
lock
cmpb
test
in
mov
xchg
js
add
pop
mov
int3
mov
subb
and
cmc
push
jmp
xchg
push
cmp
iret
sbb
or
add
inc
andb
and
mov
mov
loop
daa
inc
pop
test
mov
add
add
test
dec
sarb
or
loop
pop
lahf
dec
add
xor
pop
inc
std
das
pop
shl
push
pop
lret
daa
lahf
xor
in
dec
xchg
jl
pop
mov
ljmp
lods
push
shrl
in
add
repz
jnp
pop
out
in
mov
add
shll
lds
inc
cmp
pusha
inc
inc
inc
mov
jmp
mov
jl
pop
xchg
add
adc
mov
mov
pop
movsl
add
clts
push
add
enter
or
jns
sub
inc
daa
jmp
sub
popa
mov
sub
lret
sub
fwait
add
mov
mov
cmp
rcrb
aam
xor
movsl
dec
push
xchg
inc
mov
or
mov
call
test
shrb
inc
lahf
inc
jmp
push
pop
fsub
sarb
pushf
dec
aaa
call
adcb
ror
test
hlt
imul
push
scas
adc
out
add
or
aas
push
mov
mov
shrb
pop
and
cmp
or
push
sarl
pop
hlt
repnz
add
inc
jmp
adc
push
pusha
fstpl
add
adc
outsb
inc
cmp
adc
push
out
mov
hlt
and
jle
jmp
scas
xchg
insl
das
jne
sbb
inc
cmc
push
rolb
or
enter
pusha
mov
push
cli
inc
loopne
mov
add
sar
rol
add
xchg
fisubs
jmp
push
dec
insb
mov
loope
and
jle
add
pop
shrb
jecxz
push
push
pusha
or
xchg
or
outsb
das
pushf
int3
xchg
inc
cltd
mov
pop
mov
inc
dec
mov
push
dec
lahf
cmp
push
jmp
push
cmpsl
inc
das
movsl
stc
adc
dec
cltd
pop
enter
adc
add
add
rcll
arpl
enter
push
mov
sub
outsb
mov
test
inc
loopne
cli
pop
push
imul
mov
push
jbe
nop
jae
push
push
icebp
push
mov
das
jmp
inc
dec
push
ret
dec
test
mov
mov
mov
pop
mov
or
xor
insb
add
cwtl
fs
sub
test
mov
add
hlt
or
scas
outsb
xchg
std
scas
push
es
and
lock
pop
mov
test
add
roll
push
dec
inc
pop
pop
inc
xchg
jge
sub
cmp
add
in
push
je
inc
push
cmp
out
daa
imul
pushf
xor
mov
outsl
push
or
inc
stos
daa
adc
dec
mov
pop
cmp
xchg
jae,pn
rcrl
leave
lcall
xor
xorl
push
pop
xor
pop
and
and
in
lret
cmp
add
js
mov
das
int3
push
adc
or
gs
aam
add
jns
pop
clc
lds
sub
cmpsb
mov
dec
pop
in
push
add
mov
rolb
mov
sarb
icebp
sub
test
push
xor
hlt
btr
sub
jg
into
push
add
pop
adc
sahf
data16
add
pop
push
popa
mov
mov
add
add
sub
or
add
add
jo
adc
aas
mov
lds
pop
sbb
and
sbb
or
ret
sub
movsl
ljmp
mov
nop
or
push
int3
es
sub
mov
adc
mov
subb
bound
or
js
outsl
repnz
mov
das
add
jbe
and
sub
sub
mov
sub
jmp
mov
fldcw
mov
add
lret
loop
add
push
mov
inc
sub
pop
cwtl
aad
mov
neg
sahf
jl
pop
sub
ret
mov
jmp
pop
jecxz
pop
sub
repnz
xchg
mov
mov
call
or
push
shrb
movsb
in
push
sbb
or
add
fldlg2
cmpsb
jle
pop
movsl
je
stos
pusha
aas
jge
mov
inc
sub
cmpb
pop
pop
add
call
jae
push
add
jmp
leave
pop
aaa
adc
xor
fisttpll
not
dec
xchg
stos
iret
loope
fsubr
sub
stos
jmp
inc
hlt
add
dec
pop
xlat
and
jns
nop
xchg
aas
adc
pop
sub
bound
fcom
dec
add
fisubl
adc
stc
jge
sub
jmp
push
mov
push
pop
inc
lret
add
std
lea
out
mov
daa
mov
les
dec
loop
adc
fidivs
or
cs
popa
arpl
aad
add
jmp
xchg
std
or
rcrb
fld
cwtl
sbb
or
pop
dec
add
xchg
insb
inc
push
push
clc
adc
cmp
add
add
std
xchg
adc
sbb
filds
xor
push
add
idivl
icebp
rol
sbb
dec
stos
mov
xchg
jp
adc
and
repnz
andb
pusha
cmp
mov
jmp
inc
dec
sub
xchg
xlat
ret
jae
pop
xchg
xchg
addl
jb
mov
inc
add
jae
mov
arpl
outsl
addb
addr16
xor
cmp
lds
sbb
mov
adc
into
push
and
sbb
add
pusha
xchg
push
js
bound
leave
sub
jg
test
popf
mov
ljmp
ret
or
push
addl
jnp
sbb
lahf
and
push
in
addl
push
repnz
add
imul
enter
jl
out
repz
mov
call
adc
sub
push
mov
sti
jbe
xchg
add
dec
rorl
push
pop
pop
cld
addl
or
or
dec
sub
and
adc
push
jne
test
pop
inc
push
into
sahf
xchg
mov
cld
and
xlat
orb
test
addl
sub
mov
fldl
mov
sub
fs
pop
addb
out
add
int3
neg
cli
dec
xchg
out
adcl
add
inc
mov
pusha
daa
scas
inc
and
mov
shlb
xchg
mov
ret
push
andl
mov
push
add
adc
jmp
enter
or
sub
pop
cmc
inc
jmp
jmp
dec
pop
mov
xor
shrb
dec
nop
add
jmp
jns
out
andb
andl
idivl
adc
out
push
enter
inc
dec
hlt
xor
mov
dec
cmp
stos
push
push
nop
scas
xchg
add
mov
dec
push
inc
add
lods
addb
addr16
jmp
push
pop
stos
imul
roll
or
fildll
je
or
js
pop
dec
push
outsl
push
sub
test
shl
or
imul
mov
cltd
shr
cmp
daa
jmp
xor
pop
fisubl
out
pop
gs
mov
into
xchg
call
push
mov
int3
pushf
mov
sub
add
sub
leave
jge
xor
or
jb
sub
add
cmp
add
inc
mov
add
inc
ret
fsubs
cmovl
das
add
mov
lods
nop
and
dec
out
ljmp
jp
cs
les
mov
push
or
adc
add
in
arpl
scas
daa
xchg
out
pusha
repnz
xchg
pushf
sbb
pop
mov
test
push
xchg
cmp
aad
filds
xor
int3
mov
pop
push
mov
testl
das
mov
pop
sub
sub
xlat
or
pop
ds
adc
outsb
jnp
cli
jp
jae
shrb
push
stc
je
push
lret
sbb
rolb
push
shrl
mov
mov
push
out
enter
push
jecxz
rcll
mov
sbb
sub
loopne
jmp
mov
mov
or
not
push
loope
and
fists
pop
mov
mov
aad
fs
adc
sbb
out
add
add
incb
mov
nop
scas
cmp
sbb
xor
xor
orl
inc
add
ret
or
or
fidivs
int3
repnz
pop
push
lret
insl
shlb
push
mov
sti
mov
or
nop
and
adc
dec
clc
pop
lret
and
pop
mov
fsubrs
pop
std
cmp
sbb
fnstsw
movsl
or
imulb
xor
movsb
push
push
add
mov
jmp
push
pushl
sbb
jne
mov
in
or
mov
idiv
dec
jg
jmp
addl
sub
push
mov
and
inc
repz
xor
push
push
outsl
movsl
ja
cmp
cld
pop
sub
pop
int3
or
das
pusha
ds
adc
imul
add
popa
shl
jmp
inc
or
sbb
sub
pop
sub
sbb
sbb
lea
ljmp
jmp
fs
xor
mov
cmpsb
xor
movsb
inc
sub
inc
pushf
lcall
pop
inc
add
inc
inc
and
ljmp
addl
mov
mov
pop
jbe
or
shl
and
nop
push
xor
dec
or
dec
dec
test
addr16
xlat
jecxz
add
into
inc
mov
fstl
clc
jmp
xchg
xor
adc
ljmp
adc
or
sub
fmulp
mov
sub
or
clc
ret
push
pop
mov
inc
mov
push
or
call
push
or
shl
push
subb
dec
pusha
or
sbbb
dec
es
shl
mov
stc
popf
or
pop
subb
push
dec
mov
subb
rcll
sub
lods
pop
test
or
inc
push
in
ficoms
dec
rcr
adc
add
push
mov
imulb
mov
jmp
jbe
or
aaa
add
xorb
out
add
add
out
or
dec
or
and
jb
jl
xchg
add
imul
pusha
scas
pop
jp
xor
dec
add
push
xchg
add
mov
jmp
mov
push
andb
bound
testb
test
cltd
sbb
test
pop
cld
pusha
and
push
jmp
repz
cmpsb
push
rolb
push
lahf
imul
add
dec
loope
cli
or
jns
or
add
fmuls
add
mov
repnz
in
and
das
lret
push
push
sbb
mov
out
icebp
pop
lcall
mov
pop
add
dec
test
fimuls
sbb
xor
mov
sub
shr
push
subl
xchg
sbb
xchg
xchg
cmp
add
mov
push
mov
loop
jg
shlb
xor
dec
mov
cmpsl
neg
notl
dec
mov
add
cs
jo
lcall
cmp
daa
mov
dec
sub
imul
pop
mov
xchg
lcall
dec
add
dec
test
ss
and
pop
das
inc
mov
loopne
add
and
dec
or
adc
dec
ret
jl
or
int3
pop
dec
cmp
xlat
sub
fstpl
xor
mov
dec
aas
clc
mov
mov
xchg
sbb
call
or
ds
jbe
inc
addr16
imul
inc
or
test
scas
mov
push
into
aam
es
push
mov
jae
repz
jo
mov
bound
pop
subb
pop
rorb
mov
sub
rol
jmp
testl
xchg
or
ds
icebp
push
cwtl
ficoml
cli
add
push
out
sub
and
push
lods
jns
sbb
push
jp
std
mov
mov
xor
add
fstpt
stos
ret
fimuls
mov
cld
lret
cmp
lds
and
push
daa
dec
pop
stos
push
mov
mov
imul
dec
repz
add
imul
dec
mov
incl
inc
mov
sub
sub
pop
lcall
adc
xor
pop
hlt
jb
mov
jbe
ds
es
sbb
push
call
add
into
pop
test
cvtdq2ps
cmp
xlat
pmulhuw
or
jl
movb
pop
ss
inc
sub
dec
mov
and
adc
and
cmp
xor
mov
adc
pop
jge
cmp
add
mov
cli
ja
mov
push
add
dec
lcall
nop
lock
shlb
push
neg
pop
and
adc
jmp
mov
fsts
les
adc
adc
jge
rclb
inc
adc
dec
loope
ficoms
xchg
lahf
arpl
and
cmp
pop
mov
xchg
sahf
sub
adc
push
mov
shrl
add
xchg
cwtl
jmp
mov
shrl
mov
push
notb
add
stos
or
sbb
stos
and
jb
inc
lds
movsb
test
xchg
adc
mov
decl
add
addb
daa
adc
cmp
and
or
sub
or
add
add
cltd
vxorps
dec
mov
aas
inc
mov
mov
ss
push
mov
xchg
inc
push
std
add
jmp
xor
and
std
pop
add
shl
dec
add
repz
icebp
arpl
pushf
ds
dec
clc
cmp
sti
dec
aas
mov
sbb
jne
out
mov
pop
sub
jmp
out
clc
jb
jae
adc
add
sbb
push
shrb
push
leave
test
mov
clc
lods
mov
push
pop
das
add
pop
push
lds
stc
shlb
mov
shl
mov
and
push
clc
jge
mov
lock
jp
popf
pop
lret
dec
push
pop
dec
and
push
test
push
and
sub
out
subl
shr
std
leave
lods
xchg
lret
hlt
mov
jmp
jne
aam
pusha
out
call
mov
repz
cli
xchg
jmp
pop
mov
pop
jnp
js
push
xor
mov
mov
push
fiaddl
int3
sub
xor
push
aam
ffree
adc
aas
cmp
out
pop
or
lock
cli
push
shlb
test
pusha
leave
pop
popf
shrl
add
push
mov
inc
dec
xor
pop
mov
jmp
rcrb
dec
filds
shl
sub
pop
cmpsl
xchg
xlat
les
daa
xchg
push
push
sbb
in
dec
push
lock
sub
sub
fwait
aam
js
in
clc
jbe
adc
push
jmp
push
pop
pop
or
cmp
rol
mov
push
push
push
xor
dec
push
lahf
aaa
aam
les
lret
xor
outsb
mov
mov
push
push
push
inc
dec
jg
fistl
cmpb
sbb
sub
dec
or
loopne
call
sbb
jo
leave
cmove
test
call
xchg
loopne
or
mov
mov
lock
in
xchg
add
ret
pop
mov
je
push
adc
les
xchg
push
xor
popl
add
adc
enter
mov
push
pop
or
push
daa
sub
cmp
movsb
xchg
mov
inc
aad
lds
xchg
mov
ja
sub
shll
or
scas
popa
push
jg
jmp
mov
add
std
imul
stos
mov
dec
push
repz
jp
fsub
pop
or
arpl
out
push
mov
dec
dec
push
xchg
js
pop
and
std
inc
or
leave
insb
rorl
pop
mov
ljmp
pop
rorb
inc
jl
clc
xlat
rclb
mov
dec
cmp
push
adc
cmpsl
clc
test
adc
jno
jmp
jns
xor
dec
pop
out
xchg
loopne
fldt
cwtl
xor
xlat
add
insb
add
jmp
and
xor
sub
addb
out
adc
push
push
sub
je
in
mov
sbb
movsb
dec
mov
bnd
gs
jmp
inc
jne
rclb
pop
addb
cmp
dec
xor
cld
pop
pop
inc
or
repnz
inc
or
mov
push
dec
sub
jbe
popa
mov
mov
mov
mov
test
adc
les
mov
mov
int3
jne
cld
lds
xchg
add
sub
ja
test
and
daa
pop
push
mov
sbb
add
pop
sub
sub
pop
adc
lcall
movsl
mov
mov
iret
xor
rorb
mov
inc
jbe
std
xchg
pusha
inc
cs
je
xor
mov
cmp
xor
imul
push
rolb
sub
push
stc
push
jbe
sub
mov
cmc
les
dec
outsl
pop
lret
in
or
push
mov
cld
or
fistps
add
pop
jnp
pop
xchg
dec
lods
xor
cmp
cmp
jmp
mov
rclb
push
orb
adc
ret
xor
dec
out
fadd
add
in
movsb
sub
jmp
sub
mov
xor
mov
sub
std
mov
xor
call
mov
fcomps
mov
xlat
push
push
push
xor
subb
lock
clc
cmp
shrl
fsts
mov
in
pop
pop
ret
pop
shl
jle
mov
adc
cs
and
aaa
pop
or
pop
add
inc
clc
sub
lds
repz
mov
rol
dec
shlb
mov
rcr
fmul
inc
pop
pop
sbb
fcoml
jmp
or
and
pop
push
inc
mov
scas
shrl
sub
push
shrl
cs
and
leave
fsub
lahf
and
xor
push
in
lock
jl
ret
push
mov
popa
fwait
jmp
ljmp
add
adc
pushf
xor
pop
aaa
sub
add
dec
sub
sub
arpl
sbb
pushl
jmp
inc
in
test
push
repz
mov
xchg
jo
dec
je
mov
flds
loope
sub
or
add
fucom
sbb
and
jp
ret
xchg
mov
adc
push
les
push
ret
push
xchg
mov
or
mov
jg
test
push
in
movsl
loop
pop
loopne
fisubs
push
outsl
int3
cmp
push
inc
adc
pop
dec
cmp
mov
mov
add
mov
add
jae
and
mov
add
pushf
dec
neg
ljmp
jl
popa
ja
mov
mov
push
sti
and
ljmp
cmpsb
add
add
pusha
in
orl
jmp
in
mov
stc
sub
and
stos
cwtl
iret
mov
jge
popf
dec
add
pop
sub
in
in
sbb
pop
outsl
mov
push
push
clc
imul
add
adc
test
movsb
adc
js
orb
fdivrl
add
aaa
adc
push
push
mov
add
mov
and
sti
or
loop
pop
sub
pop
test
cld
dec
xchg
push
popl
add
mov
xor
add
test
inc
push
das
adc
dec
mov
jmp
shll
xlat
addr16
mov
negl
lret
out
out
push
out
mov
aam
lds
lods
push
vpunpcklqdq
sub
cwtl
mov
inc
cmpl
push
orb
xchg
stc
jp
jmp
movsl
stc
out
mov
pop
mov
sbb
and
adc
sbb
fistps
aam
mov
inc
std
test
out
mov
pop
pop
psrlw
imul
sti
mov
jb
sub
movsl
test
imul
mov
jl
popf
popa
jo
jp
jno
mov
pop
push
loope
pop
roll
add
push
mov
js
arpl
out
sti
add
adc
adc
add
sub
cmp
add
xchg
adc
xchg
scas
or
subb
shlb
cs
ja
adc
mov
mov
cmpsl
filds
and
es
push
push
loope
push
adc
pop
mov
mov
add
icebp
adc
add
rclb
cs
lea
in
jmp
mov
loope
mov
push
dec
testb
cmp
cmp
jne
xchg
int
push
out
xor
aas
push
mov
xor
pop
jl
mov
pop
mov
mov
add
or
in
stos
add
in
fucomip
and
jp
fcomps
inc
pop
out
inc
mov
imul
push
pusha
jle
and
adc
adc
loopne
bound
jge
inc
sub
sub
or
cmc
xlat
cld
mov
subl
xor
mov
int
adc
inc
jae
dec
xchg
inc
js
add
mov
push
or
lcall
popf
imulb
add
sub
cmp
sbb
fimull
ds
idivl
fadd
add
or
xchg
pop
ret
and
les
jl
mov
rolb
push
jle
aaa
pop
inc
xchg
and
jmp
dec
jb
add
insb
pop
push
push
lods
jecxz
push
lds
xchg
xor
loop
mov
push
xchg
sub
repz
jl
cs
lods
fisubs
mov
fidivs
xor
psrlq
sti
data16
jb
jp
pop
add
out
push
jno
or
xorb
push
or
cmp
add
repz
jae
mov
or
jbe
and
mov
or
sub
jmp
dec
and
movsl
stos
or
rolb
xor
and
add
mov
clc
addl
lea
jne
aas
adc
test
call
or
lret
pop
xchg
mov
shll
add
movsb
fmuls
inc
flds
mov
aas
xor
xor
cmp
leave
pusha
out
xor
pop
mul
or
jge
cmc
imul
cmc
ret
pop
cwtl
repz
xor
dec
shlb
and
xlat
or
pop
std
movl
push
xor
push
push
jne
testb
adc
lret
push
sub
mov
jnp
dec
jl
jo
mov
dec
pop
arpl
adc
xor
add
sbb
mov
leave
mov
subb
insl
push
jno
mov
add
and
add
adc
and
test
mov
adc
ljmp
mov
or
sbb
mov
dec
add
shll
aam
movsb
inc
jl
roll
sub
push
mov
sub
add
adc
sub
sbb
push
pushf
sbb
ds
and
xor
sahf
icebp
daa
loope
sbb
or
add
cmp
or
bound
dec
mov
popa
ficompl
mul
sbb
aaa
ss
add
or
add
sub
mov
mov
mov
inc
test
xor
repnz
mov
jg
clc
out
cmp
scas
lret
jo
mov
mov
inc
jmp
in
call
fwait
cmp
test
ficomps
lock
xor
sub
add
mov
jl
es
add
xor
shrl
mov
repz
jg
and
adc
fdiv
mov
leave
push
lds
push
inc
xchg
cld
xchg
lods
jbe
sarw
add
stos
inc
xchg
mov
mov
cmp
lcall
push
mov
and
sbb
mov
or
shl
scas
cmpl
jmp
push
mov
or
mov
push
sub
adc
imul
add
lods
mov
loopne
push
pop
cli
jae
inc
imul
inc
aad
jg
mov
test
fs
andl
mov
pop
xor
out
dec
loope
pop
or
xor
or
out
call
clc
bound
cmp
nop
loop
rcll
or
sarb
add
in
insb
outsb
add
mov
incl
cmc
std
ret
cmp
stos
aas
xor
push
cmpsb
jmp
push
outsl
or
dec
add
es
or
cli
push
out
or
sti
pop
inc
add
decl
js
cld
test
xchg
imul
adc
or
std
sub
mov
rorl
pop
scas
in
call
inc
jmp
pop
sub
ljmp
mov
insb
pop
idivb
and
decl
push
pop
and
mov
test
mov
stos
ret
dec
push
hlt
sar
adc
cli
addr16
shrl
xor
jmp
iret
push
inc
mov
aam
test
push
les
subl
cs
gs
ljmp
je
pop
sub
insl
or
mov
add
int3
cwtl
inc
sbb
dec
xor
xchg
lcall
adcb
xchg
xchg
ret
sub
cmp
or
xorb
outsb
shlb
jmp
pop
mov
stos
add
sbb
push
xchg
pop
mov
repnz
and
jmp
jbe
call
into
sub
inc
je
bound
xchg
push
bound
lcall
adc
add
out
sub
loope
jmp
test
rorb
in
or
sbb
rorl
xor
inc
popa
add
movsb
neg
addl
and
repz
out
xchg
adc
scas
pop
mov
jo
adc
cld
adc
pop
jmp
or
pop
nop
xor
push
push
gs
cs
imul
test
mov
pop
jne
lret
js
test
sbb
nop
dec
pop
call
and
addw
sub
clc
test
jb
xchg
leave
repz
adc
fdivrl
or
das
jne
or
cmpsb
inc
lret
hlt
and
pop
mov
mov
xchg
and
cmp
adc
lock
push
cld
int3
mov
popf
inc
dec
les
cmp
mov
sbb
pop
inc
pop
jmp
pop
cmp
add
add
sub
mov
pushf
pop
cld
mov
stos
push
or
or
sti
imul
mov
xchg
mov
adc
pop
adc
inc
loopne
popa
add
sbb
mov
nop
aad
pop
je
jae
xchg
push
lret
mov
sbb
sub
fiaddl
fstl
cmp
movsl
mov
dec
jns
pop
jns
dec
xor
mov
jp
jne
lret
adc
cltd
mov
sub
sub
jmp
mov
mov
aad
popf
xor
lahf
cmp
inc
inc
xor
imul
or
pop
pop
call
mov
pop
mov
lods
test
repnz
push
dec
mov
push
xchg
sbb
pop
in
popa
imull
push
aam
dec
add
jno
mov
out
icebp
push
adc
xorb
ds
js
ret
or
pop
push
daa
adc
inc
popa
inc
or
inc
push
xchg
das
pop
jle
dec
sbb
push
push
cmp
je
inc
jmp
and
mov
push
push
xorl
das
out
notl
out
and
dec
repz
cli
stos
in
jp
fdivrl
sub
or
pop
jg
jmp
addb
in
lock
arpl
add
shl
out
bound
jb
or
xchg
roll
push
pop
jb
into
ljmp
dec
clc
adc
enter
mov
jno
inc
jmp
add
mov
faddp
jmp
out
or
rcr
in
call
or
mov
adc
sub
gs
test
inc
cmpsl
daa
sub
and
or
gs
or
call
or
rdpmc
fstps
jle
adc
sbb
loopne
iret
add
and
mov
notl
push
adc
push
push
push
nop
xchg
cld
repnz
cmp
inc
jg
mov
mov
je
sti
popf
les
sbb
sub
test
xor
orb
mov
test
sbb
add
pop
jmp
lods
stc
push
xor
mov
cmpb
mov
je
fcom
xor
in
or
push
imul
js
es
push
call
mov
das
add
neg
xchg
leave
int3
mov
adc
mov
dec
or
loopne
add
push
xor
ret
fisttpll
jnp
jmp
add
jmp
outsl
movsl
push
andl
or
push
bound
xor
int3
xchg
or
push
ror
inc
jmp
inc
mov
dec
mov
movsb
mov
imulb
in
daa
daa
add
push
or
lret
shr
orb
mov
or
xor
push
jmp
push
in
sub
pusha
sbb
das
mov
enter
sub
arpl
pop
jge
dec
rcrb
or
push
mov
xor
jl
dec
sub
pop
mov
jmp
adc
xor
out
ja
rorb
adc
es
dec
push
dec
or
jbe
adcb
insl
lds
fiaddl
stos
sub
pop
icebp
rcrl
and
pop
movsl
sbb
outsl
push
sub
and
sar
xchg
je
mov
sub
pop
mov
gs
jno
xchg
push
mov
out
and
icebp
jo
xor
sbb
push
call
mov
add
inc
and
jp
ljmp
mov
sbb
sarl
stos
or
aas
pop
outsb
idivb
dec
xorl
mov
test
push
mov
bound
subb
add
add
adc
das
mov
push
pop
mov
sub
cmp
inc
sbbb
pop
loope
jbe
pop
xchg
and
int
mov
push
mov
push
dec
ljmp
xlat
std
jo
aaa
add
addr16
xchg
jb
dec
lea
repz
fstpl
jl
cmp
in
inc
xchg
add
in
in
jl
xor
pop
push
push
lods
or
jmp
shlb
pop
jno
add
pop
mov
adc
and
gs
addb
daa
pop
sti
dec
fistpl
ret
cld
mov
cwtl
pusha
push
ret
adc
jge
pop
out
leave
nop
jmp
pusha
sub
mov
mov
ret
push
cmpsb
ds
add
mov
aas
mov
mov
or
fs
mov
mov
cmpsl
jo
jmp
orb
pop
sub
dec
sub
or
cld
jno
mov
mov
out
dec
pop
repz
pusha
imul
popa
addb
jecxz
jp
lahf
aaa
cmpsl
insl
add
div
gs
lods
mov
xchg
xor
push
sti
mov
in
sub
test
orl
lcall
sbb
push
xor
jmp
pop
push
push
add
jns
inc
stos
add
adc
lcall
nop
xchg
pop
push
add
inc
or
inc
andb
repz
or
test
lret
xchg
aad
adc
fs
jno
lret
add
push
andb
xor
push
xor
icebp
test
cs
add
sub
mov
sub
push
inc
je
mov
mov
xor
add
cmpb
mov
push
xor
loope
subb
aas
and
add
shl
xchg
stos
xlat
fwait
push
and
out
fwait
and
mov
cld
sar
es
in
ret
sub
jns
inc
shr
test
add
adc
xlat
inc
or
aad
stos
cwtl
mov
mov
sub
jae
adc
aam
push
or
add
or
pop
and
push
data16
push
mov
and
enter
add
mov
pop
dec
mov
jp
add
pop
xorb
lds
sbb
lret
add
jle
ljmp
mov
and
push
sbbb
pop
je
add
push
jno
add
pop
addr16
pop
loopne
arpl
push
rcrb
xchg
mov
or
iret
movsb
fs
add
xor
mov
jnp
and
jno
dec
cwtl
mov
or
dec
push
sbb
or
movsb
inc
fistl
popf
push
jl
or
roll
mov
lods
stc
add
jle
jns
xor
roll
mov
out
mov
ret
push
cmc
dec
hlt
mov
inc
dec
ljmp
pop
mov
rcrb
cs
add
mov
andb
sub
les
mov
xchg
or
sub
xor
stos
push
mov
fcomip
jns
xchg
lea
in
mov
fcompp
jg
push
mov
inc
push
push
mov
inc
jp
loop
bound
and
inc
lods
or
mov
test
mov
xchg
mov
and
cmp
jae
sti
fs
dec
push
sahf
outsl
imul
ss
stos
adc
add
stos
mov
adc
jnp
stc
cmp
sbb
or
pop
and
or
and
mov
fwait
add
fmuls
pop
push
jmp
not
push
adc
add
in
imul
jo
sub
xchg
not
or
jmp
jb
mov
push
mov
les
rcl
or
mov
ds
es
leave
add
daa
or
call
call
lock
jno
imul
add
mov
popf
pop
subb
pop
pop
or
nop
and
pop
push
and
sub
rcrb
addr16
add
mov
cli
lret
xchg
andl
ds
adc
add
ret
push
mov
dec
idivb
data16
push
ljmp
add
out
mov
pop
mov
xor
in
xor
daa
jmp
push
push
xchg
xor
pop
gs
imul
or
add
outsb
and
sub
and
fadds
movsl
lret
icebp
lea
cmp
mov
neg
dec
jp
frstor
mov
ret
and
pop
lret
lock
or
push
mov
inc
and
or
icebp
setle
jmp
ja
orl
call
mov
dec
and
push
gs
sub
jne
ds
orl
hlt
adc
or
mov
daa
rclb
sub
mov
adc
in
cmp
popf
test
push
sti
add
dec
or
push
or
add
jno
or
dec
inc
pop
jne
mov
aas
mov
shrl
test
ret
jge
ud0
sub
jmp
dec
push
lret
jmp
icebp
and
push
push
xchg
pusha
dec
mov
push
and
shrl
cmc
out
loope,pn
jp
jnp
pop
xor
mov
push
push
test
int
imul
das
movsl
movsb
std
jmp
sub
pop
iret
cmpsb
cmp
push
pop
in
add
push
jns
add
pusha
shr
div
dec
add
pop
inc
push
mov
add
cwtl
jp
call
push
xchg
cmp
add
test
fs
call
cmp
mov
mov
cld
xlat
dec
pop
or
cmp
imul
push
inc
and
addb
push
negl
sbb
divl
pushf
mov
or
dec
push
cmc
jmp
fs
and
test
ds
jns
dec
shll
std
dec
icebp
mov
shl
inc
mov
xor
jno
xchg
stc
data16
pop
jnp
inc
mov
mov
fldl
cmp
in
mov
insb
xor
in
call
pop
xchg
push
cmpsb
pop
jnp
mov
add
jecxz
dec
les
push
ret
out
sbb
mov
int
or
adc
push
aad
jmp
stc
and
mov
or
push
pop
push
loopne
mov
or
sub
insl
lock
dec
push
xchg
test
aaa
in
pop
ficompl
sbb
add
outsb
sub
push
xchg
sbb
clc
lret
jmp
sub
rcrb
push
in
jnp
enter
adc
mov
add
out
mov
sbb
xor
or
push
mov
or
sbb
or
shr
add
adc
loopne
popf
testb
cmp
push
sbb
mov
mov
fists
sub
test
divl
mov
sbbl
mov
sbb
adc
test
pop
lock
push
ljmp
inc
adc
mov
adc
add
pop
sahf
cmp
test
jb
adc
lret
pop
add
jg
cwtl
loopne
adc
aad
or
in
mov
jb
or
mov
addl
xor
sbb
inc
adc
mov
sub
rclb
dec
adc
mov
add
mov
mov
imulb
add
inc
xchg
jmp
cmp
ret
sbb
out
or
loope
out
aas
stc
and
addr16
sahf
icebp
sub
movsb
sahf
mov
or
loope
in
test
rorl
rcll
add
shr
jmp
add
ja
sahf
cmp
out
insb
stos
xchg
mov
or
inc
cmpsl
cwtl
add
into
or
cmp
stos
adc
pop
adc
mov
pop
cmpsl
mov
or
cmp
jnp
push
scas
dec
dec
mov
mov
test
adc
das
aaa
inc
jae
add
xchg
pop
jno
sub
inc
xor
mov
cmp
adc
mov
pop
mov
movsl
xchg
mov
inc
push
or
add
inc
mov
imul
mov
add
xchg
hlt
xchg
jl
jecxz
clc
cltd
bound
xor
dec
jno
inc
push
sub
in
xchg
jo
aas
jmp
int3
addl
sti
pusha
ss
pop
imul
inc
or
cmp
or
adc
shr
ss
cmp
movsl
push
add
inc
js
ljmp
or
jne
pop
in
add
jg
or
jl
inc
insb
pop
dec
and
sub
hlt
mov
testb
add
sarb
mov
sub
sbb
add
cli
ret
call
loope
cmp
push
pop
inc
xor
add
movaps
or
sarb
out
nop
daa
mov
xchg
xchg
out
jmp
jl
dec
push
out
stos
nop
neg
push
xchg
mov
lock
or
outsl
xor
push
jne
rol
orb
stos
stos
jge
push
and
dec
add
push
ret
sub
pop
xor
and
add
neg
xor
add
push
pushf
imul
xor
pusha
mov
sub
rcrb
sbb
leave
repnz
add
aas
push
std
lds
push
pusha
add
add
xor
and
pop
cmp
scas
add
dec
dec
rolb
adc
adc
fidivrl
lea
lcall
jl
bound
lods
enter
sahf
dec
adcl
test
sub
jb
xor
pop
cmp
sbb
cmp
sub
adc
or
ror
enter
sub
inc
fisubl
leave
mov
pop
loop
aad
push
cmc
xchg
dec
negl
jmp
pop
pop
sub
rcrl
pop
inc
lock
mov
add
or
jns
shrb
dec
aam
push
ret
mov
notl
in
pop
mov
mov
repz
or
pop
out
add
jno
clc
aad
sub
into
pop
mov
mov
lret
arpl
mov
and
cmp
hlt
push
out
lahf
shl
add
or
movsb
mov
sub
sbb
pop
jmp
and
stos
lret
dec
dec
mov
or
mov
push
mov
jne
dec
jmp
push
mov
adc
pop
push
aas
adc
pop
stos
popa
mov
xchg
push
sbb
inc
xor
xchg
pusha
fiadds
mov
pop
shll
mov
sbb
or
pop
push
sbbb
add
mov
sub
xor
mov
pop
pop
adc
jne
scas
nop
in
jb
mov
cmp
and
aad
cmp
icebp
fsubl
mov
dec
or
mov
or
adc
dec
or
add
into
notb
dec
jo
out
mov
pop
testl
mov
or
enter
jmp
insl
clc
adc
add
xor
dec
movsb
out
sub
adc
sub
loopne
add
cmp
popa
stc
sarb
bnd
repnz
movhps
or
add
xor
dec
mov
dec
pop
pop
mov
jmp
push
inc
lret
or
push
pusha
cmp
xchg
cltd
sub
xchg
icebp
add
leave
push
or
sti
jb
pushf
shrb
test
ss
sbb
mov
movsb
adcb
xor
sub
mov
add
sbb
inc
jmp
inc
ret
test
inc
pop
push
dec
pop
cld
in
std
out
mov
mov
xor
pop
push
mov
or
les
faddl
lahf
mov
mov
mov
dec
pop
lret
aam
mov
in
adc
inc
lods
adc
sbbl
sub
add
dec
mov
rcll
pop
pop
cmp
inc
call
stos
lods
inc
aam
shll
ds
adc
cmp
and
adc
add
bound
jge
lret
xor
dec
or
repnz
xchg
cltd
mov
adc
mov
inc
mov
pusha
orb
test
adc
dec
in
loopne,pt
pop
sbb
pop
pop
jmp
add
cmp
push
cmp
jl
sbb
xor
ret
lahf
push
cmc
mov
data16
jp
daa
push
into
dec
dec
loopne
jmp
daa
enter
dec
iret
movsb
and
jmp
lock
sbb
cs
pop
add
mov
out
mov
int
mov
pop
sbb
or
iret
das
inc
sbb
fadds
cmp
imul
add
addr16
add
int
pop
dec
cmp
in
or
mov
xor
clc
ror
sub
adc
or
add
in
push
loopne
mov
or
xlat
add
push
roll
xorl
pop
idiv
mov
nop
push
out
jmp
mov
xchg
add
push
js
push
jmp
cmp
sub
and
dec
push
push
pop
mov
jns
or
and
sbb
or
add
jecxz
adc
mov
aaa
cmp
mov
pop
mov
push
sbb
sub
cmc
orb
mov
enter
dec
sub
sub
dec
mov
xchg
fisubrs
int3
lret
jo
adc
push
int3
xchg
inc
ss
add
add
loop
test
sbb
sub
inc
jnp
add
fucomp
popa
cmp
push
mov
leave
ret
xor
mov
push
jg
unpcklps
repz
je
mov
imull
mov
jg
jmp
xchg
ja
xor
dec
sub
rorl
cwtl
loop
mov
push
push
jmp
add
jae
mov
je
jp
lods
inc
mov
push
sti
xlat
cmc
xchg
xor
ja
stc
adc
pop
sub
jmp
sub
add
dec
dec
jmp
ficoms
xchg
cmp
mov
xchg
and
sbb
and
ja
add
dec
jae
andb
lods
in
sub
add
push
mov
push
fldt
push
call
push
jmp
mov
sub
mov
and
add
and
rol
pop
dec
sbbb
and
lds
shr
in
adc
mov
sbb
pop
add
sub
add
adc
dec
inc
cli
add
mov
jo
push
or
loope
aaa
dec
mov
jmp
lods
add
ljmp
hlt
loopne
mov
add
mov
imul
std
pop
ds
push
mov
rorl
fcompl
or
addr16
pop
ljmp
out
stos
shl
cli
jnp
cmpsl
les
daa
mov
pop
es
fs
rclb
and
xchg
stc
mov
adc
mov
or
ds
push
add
pop
test
out
mulb
ret
fists
adc
insb
push
inc
mov
or
jae
rclb
std
and
aas
add
mov
and
xchg
jnp
and
addb
jl
cltd
cmpsl
mov
imul
out
or
popaw
mov
adc
mov
inc
test
scas
fiadds
dec
loop
test
push
decb
les
imul
push
jns
divb
add
mov
jmp
mov
fldl
pop
add
cmp
mov
sub
adc
lock
aas
int3
addr16
adc
test
add
out
mov
mov
addb
pop
push
pusha
pop
push
popa
push
lock
mov
subl
and
imul
sub
jmp
pop
cli
xchg
pusha
sahf
pop
jp
pop
pop
sub
pop
push
jns
ljmp
in
add
push
movsb
jno
sbbb
outsb
loop
dec
shlb
imul
xor
sub
add
pop
push
and
je
xor
sbb
out
inc
jl
jno
sub
movsbl
orb
pop
data16
mov
lods
cmp
push
fcoms
out
or
jmp
mull
or
ss
mov
cmpsl
push
pusha
mov
push
testl
sub
xchg
ds
push
inc
nop
out
pop
imul
movsb
inc
or
xor
dec
push
jb
fwait
ljmp
outsb
jle
shll
inc
addb
or
addr16
aam
into
loopne
push
lock
xor
mov
xor
mov
fdivs
ss
push
sbbb
mov
fcoms
or
xor
rcrl
out
scas
mov
mov
loope
call
fcom
dec
rcrl
add
aaa
dec
clc
dec
jae
cmp
add
rorl
jb
inc
outsb
inc
mov
dec
movb
xor
div
and
pusha
pop
push
or
iret
pop
cwtl
add
and
jnp
mov
std
cmp
int
xor
hlt
adcl
jb
sbb
les
mov
out
adc
cli
mov
mov
sub
ljmp
mov
pop
push
iret
sub
loop
pop
cli
scas
xor
cmc
mov
sti
lret
lock
jmp
sbb
jbe
mov
fs
lds
inc
mov
or
int3
pop
lock
jp
ret
add
mov
or
sbb
and
js
loop
jg
cmp
push
add
ss
sbb
test
cmc
pop
adc
lahf
fdivrs
jno
fsubr
and
dec
pop
movsb
mov
repnz
test
sbb
inc
sbb
nop
jb
push
jp
xor
and
sub
add
mov
jmp
lret
fwait
pop
lret
pop
lahf
div
testb
jl
or
test
mov
dec
mov
ljmp
stos
adc
xor
dec
pop
mov
pop
movsb
pop
and
jbe
cwtl
xor
cmp
push
add
jns
or
pop
decb
cmp
add
sub
ljmp
jge
mov
and
pop
mov
test
xor
sub
pop
popa
or
cs
inc
cmp
gs
or
jo
mov
and
cli
xchg
push
sub
mov
and
inc
adc
andl
dec
sbb
add
adc
inc
jbe
adc
jne
push
push
jo
and
adc
sub
mov
dec
scas
cmp
das
push
push
xchg
sbb
sti
jb
rorl
inc
inc
jmp
fstps
call
ds
inc
xchg
pop
mov
dec
push
push
test
inc
test
xchg
js
sbb
insb
ret
pop
bnd
ja
fmuls
adc
mov
add
lahf
xchg
loop
test
iret
cli
push
ror
mov
xor
push
push
aaa
lret
test
add
xchg
inc
push
pop
mov
push
dec
in
xor
lret
test
push
push
dec
negb
xor
adc
fs
adc
int
adc
xchg
testb
imul
or
or
ds
push
add
movsb
mov
sub
push
xchg
adc
test
arpl
pop
push
leave
test
lods
xorl
mov
jmp
pop
sahf
js
adc
sub
push
push
test
hlt
lods
adc
fs
mov
leave
and
pop
or
or
pop
es
pop
cld
shrl
add
hlt
ret
hlt
cmp
mull
push
mov
push
push
mov
popf
enter
jae
jbe
or
dec
and
jne
cmp
add
jae
movaps
pop
push
mov
jmp
sbbl
in
cwtl
pop
mov
xlat
pusha
push
push
sub
leave
mov
xchg
cmp
jb
pop
adc
in
jns
and
gs
cltd
adc
push
dec
jnp
jmp
sbb
stc
push
push
xor
or
cmp
das
push
ret
movsb
ds
push
rcll
xchg
or
push
cmp
adc
adc
lock
js
lds
cmpsb
lods
fsub
adc
sub
pop
add
jg
mov
jmp
clc
push
inc
lcall
dec
cmpsl
push
mov
out
pop
xorb
mov
insb
popf
jno
xchg
pop
lds
sti
sub
mov
pop
mov
dec
jnp
clc
add
jmp
es
sub
mov
mov
adc
ror
inc
pop
push
cld
les
push
sahf
dec
aaa
or
rcrl
dec
inc
mov
xlat
imul
inc
jno
xchg
push
mov
sub
add
adc
mov
mov
lds
dec
and
stos
push
fisubrs
inc
xchg
inc
mov
in
fucomip
jle
mov
ss
push
add
dec
jmp
rorb
mov
cmp
les
sarb
push
jl
popf
scas
push
test
daa
rcrb
in
dec
das
or
push
sub
cli
push
clc
or
adc
rolb
push
cld
cmpsb
daa
cltd
mov
and
lds
add
js
jbe
rcl
inc
in
pop
call
push
clc
cmp
mov
add
xchg
popa
or
cmp
sbb
push
aam
jbe
mov
push
xchg
scas
and
mov
fsubl
ret
test
xchg
mov
jo
and
cmpsl
sub
adc
or
je
push
or
sub
or
cwtl
outsl
push
icebp
shll
jmp
dec
push
clc
lret
fst
mov
adc
pop
pop
xor
bound
xor
cmpsl
icebp
lret
ret
aad
leave
and
sub
in
insl
dec
and
xchg
gs
add
shll
inc
push
jle
xor
shrb
or
push
cmp
push
adc
test
jb
dec
and
jmp
stos
inc
out
imul
dec
inc
add
cmp
push
jmp
push
das
sub
jle
cmpsl
cmc
jmp
sub
and
clc
enter
pushf
jnp
aas
mov
mov
enter
das
jmp
mov
lock
sub
sub
scas
aam
adc
sbb
ret
jmp
insb
ja
aas
adc
call
and
or
pop
test
inc
add
and
sub
bound
pusha
dec
push
add
jne
mov
mov
jmp
inc
pop
push
inc
push
rorb
inc
or
fs
pop
cs
add
popf
movsl
mov
or
add
scas
push
pop
cmp
pop
push
sub
add
popf
jp
inc
test
push
jbe,pt
xor
dec
je
ss
and
pop
adc
xor
or
sbb
adc
and
test
add
orb
add
loopne
sub
andb
or
loope
sub
sbb
pop
push
push
stc
or
push
daa
xchg
push
pop
sub
not
push
xchg
es
pop
and
mov
es
push
add
xchg
cltd
sbb
mov
es
mov
lcall
push
shll
add
and
ja
push
mov
es
push
sub
pop
lret
mov
or
xchg
fstps
test
ret
pop
push
cmpl
dec
sbb
test
sbb
xor
in
nop
jg
adc
push
sub
sub
call
cli
pusha
jmp
inc
or
or
aas
adc
dec
pop
xchg
mull
or
repz
movsl
jecxz
jl
shrl
jb
pusha
inc
xor
iret
jmp
pop
sub
or
inc
xchg
mov
in
cmp
or
pop
jmp
pop
in
aaa
lahf
in
sbb
push
push
xor
out
or
fsubr
dec
fildl
pop
add
jae
cmpsl
push
test
push
add
push
jmp
mov
sub
pop
scas
dec
mov
and
jmp
dec
es
lock
call
sub
outsl
ljmp
dec
lret
mov
cmc
push
fildl
cmpsb
and
into
insb
mov
rcr
pop
pop
and
xor
or
js
pusha
xchg
lds
xor
mov
cmpsl
test
mov
filds
xor
ret
ret
dec
xor
xor
jb
mov
jmp
sub
xchg
dec
bound
dec
jmp
adc
add
or
stc
hlt
push
add
mov
mov
rcrl
cwtl
daa
stc
and
xchg
or
out
add
jno
shr
pusha
aas
jns
cmp
roll
loop
xor
mov
das
neg
push
cmp
out
call
lret
mov
mov
inc
jb
pushf
push
adc
inc
nop
pop
mull
pop
xorb
cmpb
enter
fiaddl
sub
cli
xchg
dec
mov
pop
cld
push
popf
cwtl
or
inc
pop
fcomps
fdivp
jmp
push
add
out
rol
shr
pop
push
or
mov
mov
lods
sub
push
mov
aas
les
jecxz
xor
sbb
jmp
popl
or
push
pop
mov
add
add
ljmp
int
sti
loop
test
mov
jmp
push
push
cmp
cmpsl
lock
dec
dec
xor
sbb
cmp
sbb
dec
mov
sbbb
add
filds
and
add
or
push
mov
or
pop
jmp
sbb
ja
in
cmc
jo
in
pop
pop
xor
mov
sub
lds
mov
fwait
and
shr
add
nop
dec
lret
call
mov
and
pop
jbe
xlat
adc
fmuls
push
cmpsb
sub
adc
mov
xchg
and
popa
dec
sbbb
sub
and
loopne
fldenv
fsubrl
add
and
or
xchg
lods
cmp
rcrl
iret
cld
adc
sbb
icebp
push
push
jnp
jb
and
mov
repz
popa
bound
jp
fiaddl
imull
imul
dec
stos
cmp
dec
sub
pushf
mov
xlat
adc
adc
lock
dec
adc
dec
js
daa
pop
hlt
and
jne
add
push
in
out
pop
dec
push
or
push
push
adc
bound
adc
jmp
pop
add
hlt
dec
ret
mov
movsb
mov
andb
out
cmp
or
jo
in
cmp
dec
jb
adc
jmp
lock
jl
decl
inc
add
jnp
int
pusha
dec
mov
das
js
rcrb
leave
popf
inc
fildl
imul
adc
scas
dec
call
adc
jecxz
add
or
loopne
repz
jmp
mov
icebp
jae
sbb
sbb
fidivl
daa
sub
insb
js
das
pop
cmp
pop
sbb
adc
sub
or
aam
add
popa
sbb
les
int3
neg
xchg
cmp
add
xor
jmp
pop
psrlq
repz
push
mov
jmp
out
or
in
xor
popa
ret
or
jbe
jae
xlat
xchg
lock
testl
mov
lods
sub
sbb
adc
std
loopne
fs
sub
stos
adc
aas
dec
dec
jle
or
and
js
aaa
repnz
inc
inc
pop
push
shrl
sub
adc
pop
adc
push
sbb
lea
jg
add
ja
jp
push
inc
sbb
xchg
dec
dec
in
scas
adc
push
dec
mov
jmp
mov
adc
jmp
dec
or
cmpsb
shrl
add
dec
outsl
add
imul
dec
or
loope
sbb
or
popa
clc
dec
outsl
pop
xchg
sti
sub
sahf
jnp
outsl
pusha
and
dec
add
pop
sub
gs
or
pop
dec
dec
push
clc
fisubl
mov
push
imul
aam
or
lret
fimuls
pop
shl
pop
push
mov
mov
test
adc
jno
lods
push
cmp
outsb
push
or
sub
xchg
in
outsl
pop
and
jb
push
call
popf
imul
mov
adc
dec
int
push
addb
fmull
sub
push
xor
adc
cs
in
pop
call
test
mulb
sub
mov
cmp
stc
jg
dec
push
pop
xchg
incb
jb
xchg
les
icebp
mov
pop
in
mov
and
mov
or
pop
push
rorb
jmp
push
add
dec
pop
push
add
pop
xchg
jmp
fs
fstpl
xchg
pop
xor
incl
repnz
ret
xor
dec
pop
out
xor
pop
push
lret
xchg
sub
adc
sarl
jmp
sbb
or
pop
and
inc
xchg
mov
xchg
out
cmp
enter
sub
and
out
sbb
jle
xchg
xor
aam
jmp
mov
pop
notl
or
pop
mov
sub
andb
rclb
or
sbb
and
scas
popa
xor
fildll
dec
inc
xchg
jg
aad
jle
inc
pop
mov
roll
mov
test
jecxz
nop
fs
test
xor
leave
dec
or
jnp
pop
nop
jns
dec
dec
push
mov
cmpsl
adc
test
out
adc
pop
xchg
push
pop
xor
popf
dec
jno
cwtl
dec
dec
pop
out
push
mov
mov
pop
mov
dec
clc
jae
or
cmpl
cmp
or
adc
pop
pop
lods
jmp
push
sub
ds
and
xchg
sar
push
cmp
mov
aaa
popf
pop
add
jae
push
push
sbb
fmull
fistps
jmp
popa
pushf
push
das
notl
cmp
push
add
jmp
and
ret
xchg
xor
aaa
test
out
add
jmp
mov
pop
push
test
ret
pop
jo
mov
shr
int3
push
ret
dec
pop
jns
mov
mov
and
push
mov
dec
push
cmpsb
jp
jecxz
xchg
mov
cmp
fucomp
lods
sub
cmpsb
pop
jnp
pop
movb
bound
pop
ret
rclb
jmp
add
mov
loope
stos
pop
clc
or
cmpsb
dec
cmp
sbb
jmp
test
add
aam
ljmp
enter
xor
xor
xchg
ret
or
xor
int3
incl
scas
dec
ficoms
xorl
fsubr
dec
push
pop
dec
lret
test
mov
pushf
sti
xchg
insl
scas
cmpsb
cmp
data16
sar
lock
sbb
mov
out
hlt
mov
les
jl
fimuls
sub
pop
shrw
hlt
out
in
nop
cs
fs
and
ret
enter
jno
out
rolb
ljmp
test
xor
sti
push
cli
mov
adc
cmp
mov
psllq
sub
add
and
sub
rcr
cmpsl
outsl
add
dec
add
push
push
sbb
fldenv
xchg
call
or
gs
sbb
int
jae
negl
aas
shr
inc
je
mov
fistpl
pop
or
mov
shl
je
push
mov
sub
mov
or
push
enter
ficoml
mov
loope
sbb
push
add
add
adc
es
jecxz
or
pop
jo
or
add
mov
push
add
shlb
add
mov
popf
cmpsl
iret
lea
orb
daa
inc
xchg
imul
sub
jne
xor
pop
mov
push
not
add
daa
add
loope
aas
mov
jg
aas
aam
gs
sbbb
or
or
sbb
mov
das
or
aaa
jmp
inc
add
push
add
dec
pop
mov
fstpl
movb
add
adc
jns
inc
mov
or
push
mov
adc
dec
push
das
adc
sub
test
cmc
cwtl
pop
jmp
iret
push
mov
cmp
mov
addr16
xchg
mov
push
inc
jmp
lret
xor
sub
cli
push
fcmovne
daa
pop
hlt
cmc
repnz
aam
pop
dec
sbbl
and
or
daa
inc
cmp
pusha
push
sbb
inc
sbb
sbb
cmp
std
nop
cmp
sbb
addb
push
mov
mov
incl
andb
or
jo
icebp
lods
sub
stos
pop
rcll
pop
xchg
pop
add
add
nop
sub
push
inc
mov
cmp
mov
xor
cs
inc
fists
cmpsl
mov
fisttpl
test
pop
popf
jge
mov
ret
loop
pop
push
cmp
cmc
das
xor
adc
daa
mov
jmp
mov
add
jge
push
lea
in
js
add
or
loopne
jmp
test
adc
jmp
stos
fsubs
addr16
outsl
lret
mov
dec
push
addl
das
insl
int
mov
dec
mov
gs
or
cmp
in
and
rol
add
jmp
orb
mov
jne
jmp
fucomp
xor
mov
testl
dec
inc
cld
mov
fs
pusha
inc
test
dec
push
test
aas
out
sub
pop
sub
add
lea
xor
popf
dec
xorl
out
pop
call
or
shlb
adc
push
add
cmp
sub
pop
sbb
in
sbb
jecxz
lods
and
adc
mov
out
push
and
or
test
cmp
jmp
pop
sub
das
add
popa
xor
adc
or
cmc
mov
mov
push
or
pop
jmp
into
orb
rorl
call
sbb
xchg
inc
mov
add
ffreep
movl
and
sti
push
cmp
cltd
je
or
loopne
push
subb
cmp
inc
testb
aam
add
mov
cs
sub
pop
jmp
cmp
inc
jne
cmp
out
outsb
dec
pop
shlb
sbb
adc
aad
out
test
pop
add
xor
jb
mov
push
js
fxam
cs
outsl
das
je
pop
sub
filds
js
sub
lret
cmp
sbb
imul
or
push
pop
mov
push
xor
jns
jno
pusha
out
cmc
call
loope
outsb
lcall
ret
push
cmp
mov
jnp
pop
pushf
pop
rorl
ficoml
not
push
lret
push
ja
xor
loop
push
rolb
arpl
push
push
call
cmp
cmp
es
sub
mov
inc
clc
mov
sub
out
sub
push
fsts
cwtl
xor
add
sarb
pop
movsl
inc
dec
pop
adc
cs
sub
push
mov
popf
fstps
nop
or
add
je
sub
movsb
xor
sub
repnz
sbb
lret
push
and
push
mov
not
push
mov
sub
cmpsl
push
pusha
sub
add
fsubrs
out
jmp
push
or
dec
add
fdivs
sub
lret
xchg
lret
and
addr16
add
mov
cwtl
jno
dec
test
ja
pop
mov
xor
gs
inc
mov
jnp
push
jae
sbb
mov
or
jo
jmp
aas
xchg
js
or
and
les
add
pop
or
push
outsl
inc
adcb
mov
and
mov
inc
add
add
mov
mov
xchg
mov
pop
hlt
mov
push
mov
loop
adc
aas
repz
stos
inc
xchg
das
js
inc
pusha
xchg
repnz
gs
rcrl
addr16
addb
aas
adc
jbe
pop
ljmp
popf
add
jmp
cld
fsubp
jmp
inc
adc
in
push
repnz
jne
out
mov
adc
jne
add
bound
int3
fisubl
push
dec
pop
pop
xor
loopne
cmp
pushf
nop
lret
insb
xor
xchg
scas
lcall
testl
xor
iret
loop
loop
mulb
outsl
imul
test
aaa
cmp
add
cltd
insl
jmp
push
and
and
mov
mulps
loop
jo
std
test
sbb
and
jp
or
xchg
pop
push
mov
push
in
add
mov
nop
sub
pop
popf
sarb
sbb
and
mov
daa
movsl
adc
cld
mov
mov
push
cmp
mov
jmp
in
adc
mov
push
mov
mov
pop
and
pushf
mull
ja
sub
pop
lahf
test
mov
das
inc
pusha
dec
xchg
jae
into
inc
mov
and
inc
sbbl
cmp
push
inc
add
mov
sbb
pop
sti
adc
push
stos
lret
cltd
dec
mov
insb
jle
int
pop
mov
dec
sbb
push
iret
test
in
lahf
nop
sti
xor
lea
out
popa
sbb
popl
xor
pop
mov
add
push
and
and
cltd
jg
int3
mov
test
sub
int
in
pop
push
or
or
pop
or
aas
add
clc
inc
rol
icebp
and
mov
in
les
mov
xor
aaa
loope
jmp
iret
movsl
push
das
hlt
lods
sbb
jmp
rcr
add
loope
shr
fildl
movsb
mov
and
fisubl
dec
sbbb
jbe
daa
xorb
jne,pn
stos
xlat
add
push
or
fsubp
jae
loope
push
cmp
daa
clc
jb
shl
dec
dec
dec
sub
push
mov
lea
jmp
pop
mov
pop
cli
pop
out
js
dec
jbe
cmp
or
and
pop
pop
sbb
fadds
daa
pop
xchg
adc
lock
push
negl
push
test
cmp
dec
lahf
cmpl
addb
lcall
add
sub
or
or
imul
outsb
fwait
adc
jno
mov
mov
pop
mov
mov
xor
mov
add
shlb
mov
add
js
lods
and
jnp
lods
dec
cmp
pop
xchg
pop
jmp
into
adc
ret
jmp
mov
cld
int
fstl
movsb
gs
add
or
mov
add
aaa
test
test
jno
nop
mov
lret
xchg
popl
cmp
jmp
clc
jl
mov
fdivrs
testl
daa
mov
lods
dec
inc
add
pop
loop
push
cmp
fnsave
pop
jmp
subb
incl
or
inc
inc
and
or
xor
pop
add
ljmp
out
ret
das
add
outsl
add
xlat
or
inc
nop
repnz
jmp
cs
dec
repnz
push
rcr
or
dec
adc
loope
jno
lds
mov
xchg
mov
xchg
dec
icebp
dec
push
bound
xchg
xchg
xchg
cli
xchg
jbe
pop
imul
push
push
jmp
movb
mov
or
orb
jmp
test
push
adc
lret
add
gs
cmp
jnp
xor
out
add
jmp
int
test
or
pushf
mov
xchg
mov
jp
out
mov
jno
xlat
jns
jne
mull
xor
ja
pop
iret
or
insb
sbb
or
ja
pop
cmp
ds
js
or
mov
add
xor
test
jecxz
ja
push
add
pop
fs
and
adc
ds
ret
divl
fwait
pusha
push
inc
es
pop
add
mov
jno
outsb
xchg
or
adc
and
jl
adc
inc
jmp
mov
arpl
adc
aam
pop
jno
jp
or
jmp
testb
adc
aaa
das
push
pop
inc
pop
xchg
out
sub
or
aad
in
fdivr
add
std
xor
int
aaa
or
pop
mov
mov
test
mov
adcl
pop
decb
pop
out
shll
add
ficoms
pop
xor
dec
insl
nop
repnz
sbb
add
jno
fadds
mull
push
xchg
push
mov
inc
clc
cmc
inc
test
jl
mov
push
push
push
mov
ficoms
mov
pop
add
push
mov
mov
pop
pop
and
shlb
outsl
das
and
sub
in
add
int3
mov
addb
in
outsb
fucomp
jne
nop
aas
or
xlat
adc
shrb
inc
or
dec
add
xor
in
jo
push
cmpsb
test
or
adc
add
pop
mov
daa
cmc
pop
push
cmp
xchg
je
sub
lahf
mov
repnz
mov
xchg
mov
cmc
add
sub
xorps
add
and
adc
push
adc
jl
or
pop
pop
dec
stos
xor
aaa
and
aaa
daa
fcmovnu
or
daa
pop
pop
scas
add
jae
cs
cmp
adc
mov
or
dec
mov
mov
or
not
xchg
add
sub
fs
ret
inc
inc
int3
cmp
lret
dec
lods
lods
dec
mov
push
shr
rol
aaa
mov
imul
add
mov
xor
dec
out
call
clc
push
xchg
dec
inc
mov
inc
cmp
xchg
push
or
inc
sbb
jp
cmp
ljmp
cmp
js
adc
jle
add
add
in
inc
mov
test
es
and
push
jle
pop
loop
shl
lds
cld
and
scas
sbb
stc
add
xchg
push
sub
imul
pop
or
pop
cmp
jnp
push
and
xor
push
sbb
loopne
mov
jmp
or
dec
jne
xchg
xor
mov
arpl
mov
mov
or
mov
fnstenv
aas
mov
es
cmc
xchg
or
push
int3
push
ss
dec
test
xchg
and
dec
pusha
call
push
roll
and
push
gs
mov
xor
sub
jno
xchg
test
xor
hlt
addr16
repz
push
pop
xor
out
and
push
add
pop
nop
xor
movsb
jo
mov
add
frstor
dec
movsl
inc
or
jle
or
or
mov
sub
inc
sbb
daa
inc
popf
fwait
inc
xchg
xchg
push
inc
adc
std
push
cs
mov
sub
aam
pop
out
lret
and
sbb
xor
jg
pop
or
icebp
inc
stos
sub
shlb
jmp
int
push
dec
jmp
inc
out
xlat
mov
xor
int
in
bound
and
es
or
mov
or
jbe
push
ja
js
jge
adc
roll
mov
adc
stos
and
dec
pop
xchg
push
push
push
mov
fistps
lahf
aas
mull
mov
dec
mov
jp
into
cmc
or
or
inc
add
add
adc
push
cmp
enter
add
cmp
fisttpll
add
testl
das
xor
push
aaa
cltd
pop
add
adc
push
fs
adc
je
mov
fldl
mov
inc
cmc
mov
addb
insl
inc
mov
scas
add
mov
and
jmp
pop
push
push
adc
adc
pop
inc
mov
xchg
add
mov
push
xor
or
jmp
std
out
mov
mov
push
mov
mov
cmp
xor
sbb
or
dec
scas
jns
pushf
int3
xor
cmp
add
jnp
dec
mov
push
inc
sti
push
mov
xor
push
movsb
add
and
inc
cmc
shrl
sbb
push
sub
cmp
adcb
loopne
sub
aam
nop
outsb
add
push
push
pop
pop
std
fisubs
enter
mov
out
and
in
push
mov
inc
es
cld
mov
push
or
cltd
mov
lahf
pop
lock
dec
cmp
sar
add
addr16
notl
mov
out
pop
cltd
ffreep
insb
out
jp
sub
pop
cmp
xor
stc
jecxz
pop
or
xchg
mov
in
add
cli
xchg
or
in
dec
and
jecxz
xor
mov
fnstcw
or
rol
add
orb
mov
push
or
repz
jg
and
adc
cmp
das
sbb
ja
out
pusha
jl
jge
jae
mov
pop
add
sti
fsubs
dec
pop
pop
xchg
das
and
popa
cli
loope
subl
add
and
rep
xchg
out
and
popf
fistpll
jmp
es
mov
push
mov
pop
dec
add
jl
das
mov
dec
cmp
cmc
pop
loop
cmpl
push
jmp
in
cmp
dec
aam
and
dec
mov
imul
rolb
shl
dec
push
adc
fldt
stc
jmp
mov
fst
mov
mov
mov
sbb
mov
and
xor
sub
bound
push
fadds
stos
inc
dec
pop
mov
jb
add
ficomps
sub
mov
pop
into
aas
push
pop
adc
shr
xchg
jmp
es
incl
ror
mov
adc
in
dec
mov
mov
inc
cs
popf
push
mov
or
orl
in
lock
push
es
pop
or
lret
rcl
pop
enter
aas
in
and
push
cltd
mov
push
mov
aad
in
out
imul
mov
movsl
dec
dec
call
dec
inc
mov
fwait
lds
pop
dec
lahf
sub
pop
xchg
cmp
outsl
es
or
mov
xchg
or
jge
jmp
or
lea
jmp
lret
push
pop
pop
push
cld
xchg
dec
pop
cltd
adc
mov
xor
xlat
into
orb
jb
daa
and
mov
fisubs
sub
cmp
or
adc
cwtl
inc
jmp
addr16
jp
repnz
test
push
daa
xor
cmp
ffree
mov
ret
fdivrp
mov
ljmp
dec
inc
mov
js
or
jl
inc
stos
mov
jp
fcomps
mov
add
arpl
pop
push
orb
sub
jmp
rclb
test
inc
push
adc
jg
cmp
gs
adc
add
aad
in
into
pop
ret
or
in
add
xchg
not
jmp
sub
pop
xorb
rorl
sub
jmp
mov
sub
insl
xchg
mov
cs
lds
scas
or
mov
jle
jmp
loope
add
jl
mov
push
pop
shl
loope
cmp
js
call
sub
add
mov
and
mov
into
jle
add
mov
inc
dec
out
daa
addb
rorl
negl
int3
int3
mov
out
fimull
adc
mov
jne
mov
xchg
add
lret
jmp
cli
shrl
js
jmp
popf
xor
pushw
or
add
imul
and
dec
jle
faddl
gs
insb
push
lret
pop
lods
jns
mov
push
aam
lods
icebp
fidivrs
pushf
adc
pushf
jno
xor
stc
mov
sti
pop
stc
mov
ret
repnz
leave
adc
in
fists
push
test
push
lahf
add
and
ds
push
repz
int3
frstor
and
pop
sub
std
push
lds
fstpl
repnz
inc
hlt
in
cmpsl
mov
out
inc
sub
popf
adc
sbb
in
fwait
mov
pop
xchg
test
ss
or
scas
aam
emms
mov
dec
pop
fisubs
stc
and
add
mov
lret
cwtl
stc
push
roll
mov
shrb
dec
mov
xor
es
push
jns
mov
cmp
ljmp
add
pop
xchg
inc
gs
xor
cmp
lock
lahf
call
push
es
sub
xchg
inc
mov
add
mov
dec
cmc
outsb
pop
data16
cwtl
ss
jnp
jg
lods
imul
mov
sahf
add
arpl
inc
out
sub
push
add
rep
add
notl
jmp
sub
mov
mov
jmp
pushf
xor
mov
fwait
or
andl
cmp
sub
mov
cmc
push
pusha
ret
xchg
jo
das
outsl
xor
xchg
push
mov
mov
enter
inc
pop
adc
jno
popa
lcall
sub
pop
pop
sub
cmc
cmp
or
stc
lods
lods
dec
iret
dec
adc
add
fldl
in
inc
xor
cmc
call
xchg
pop
pop
add
or
dec
cltd
sub
aas
push
call
xor
ss
push
fbstp
iret
mov
jb
lds
push
push
sarb
sub
mov
ljmp
jp
lahf
add
jg
int3
cmp
pop
cmp
sbb
out
mov
sub
sbb
or
adc
mov
adc
jno
sbb
cli
mov
fildll
mov
inc
and
adc
bound
mov
sub
add
xchg
inc
sbb
sbb
adc
jmp
mov
or
das
jmp
adc
orb
sub
mov
hlt
xor
das
les
jnp
or
mov
xchg
mov
mull
ja
jg
dec
mov
sub
and
fistpll
sub
scas
mov
out
mov
fldcw
cmpl
out
jge
arpl
js
fwait
sti
and
dec
sbb
lds
shl
mov
call
testl
stos
int
jbe
pop
lcall
cs
or
shr
out
subl
fiadds
push
lock
push
popa
dec
aaa
sbb
or
mov
stos
cmp
fadd
push
cmp
pop
xor
dec
fimull
jno
add
and
add
pop
cli
lds
jmp
inc
test
in
loop
dec
and
xorb
push
call
xchg
cwtl
incb
imul
jl
into
dec
xchg
aam
pop
mov
add
dec
and
mov
in
cwtl
loope
test
jge
out
mov
mov
or
sarb
mov
insl
js
fwait
add
xor
mov
add
sarb
leavew
out
pop
push
jne
daa
shrb
and
pop
mov
add
dec
shlb
insb
andb
pop
shl
rorb
push
ret
repnz
lea
jmp
lods
dec
mov
pop
mov
fwait
xlat
adc
jmp
xchg
nop
data16
sub
and
addr16
test
mov
xor
int
addb
rol
sbb
sub
mov
dec
leave
or
mov
clc
sub
add
push
mov
xchg
dec
sbb
mov
mov
insl
in
push
or
pop
imul
cmp
and
dec
bound
movhps
fsubl
mov
and
push
push
jns
repz
inc
or
mov
enter
xlat
pop
push
fwait
inc
mov
xchg
pop
jp
ljmp
mov
imul
jno
cmp
test
pop
out
lcall
add
imul
test
das
jmp
sti
pop
jno
dec
add
push
pop
pop
gs
icebp
bound
sbb
add
jbe
dec
add
cmp
mov
clc
cltd
mov
and
inc
in
and
push
and
and
cmpb
sbb
inc
sbb
or
push
mov
lahf
scas
insb
push
push
stc
sbb
inc
mov
call
xchg
pop
stc
mov
push
mov
lods
mov
jmp
inc
je
or
and
push
rcrl
repnz
add
cmc
jge
mov
jb
aas
mov
pop
cmp
cld
scas
insb
jl
xorb
xor
rep
jle
push
cmp
stc
mov
push
pop
mov
rclb
jbe
or
jmp
push
mov
add
xor
test
or
lcall
or
cld
push
and
dec
jmp
jge
mov
bound
test
push
or
std
add
movsb
mov
pop
stos
gs
mov
aas
add
aaa
shlb
mov
lods
add
arpl
enter
call
push
scas
gs
pop
add
ret
xchg
mov
dec
and
xor
mov
or
test
movl
lods
inc
sub
and
out
and
or
mov
dec
das
mov
jl
adc
fldenv
in
les
cltd
pop
push
mov
and
mov
aam
jecxz
loope
jae
repz
mov
pushf
jb
mov
movsl
mov
data16
cld
ficoms
js
and
ret
jnp
leave
or
mov
stos
inc
cld
mov
sbb
data16
idiv
jae
or
dec
xchg
pop
jno
lahf
push
in
jmp
les
cmp
cs
notl
in
mov
daa
nop
adc
xchg
jne
dec
decb
mov
sub
sub
or
sbb
rolb
enter
push
push
push
jmp
add
add
dec
scas
sub
cwtl
fwait
pop
pop
int
jle
xchg
std
adc
lret
xor
push
jp
in
xchg
cwtl
or
ret
and
scas
xor
lock
mov
add
pop
add
and
rclb
push
sub
inc
or
cmp
and
mov
fdivs
dec
call
inc
push
push
adc
xor
add
insb
push
push
lods
sub
psubusb
andb
sarl
call
inc
push
dec
scas
xor
mov
adc
repz
push
push
mov
push
add
sbb
jb
mov
lds
inc
and
pop
neg
pusha
sahf
add
addb
dec
addr16
mov
incb
sub
cltd
imul
mov
sub
xorl
daa
pop
sbb
fsubrl
push
shrl
sub
sub
addb
mov
xor
or
sahf
sub
loopne
dec
pop
movsb
jb
and
push
in
inc
adc
mov
push
dec
xchg
idiv
dec
sub
xchg
in
adc
sub
popf
jecxz
std
push
mov
stc
mov
lcall
shrb
or
sub
pop
lods
or
pop
outsb
or
sbb
inc
mov
add
inc
inc
and
sbb
push
movsb
fsubs
xchg
pop
or
mov
mov
movsl
jmp
or
addb
dec
or
ret
adc
mov
mov
dec
in
mov
mov
pop
mov
inc
add
or
inc
addr16
lcall
lds
in
mov
cld
add
and
mov
adc
out
stos
sar
cli
adcb
push
and
sahf
sbb
push
lret
out
dec
or
roll
ret
loop
shr
xchg
jecxz
dec
lock
or
aaa
imul
sahf
subb
cwtl
aam
movsl
int
sbb
cmc
sub
pop
pop
pusha
loopne
push
jge
xlat
mov
push
jmp
scas
insb
arpl
adc
add
or
inc
pop
sub
in
arpl
inc
xor
add
dec
push
adc
sub
xor
lods
lds
nop
neg
inc
jmp
add
mov
adc
ret
pop
xor
les
decl
sbb
and
mov
cmp
inc
or
out
mov
adc
in
add
cmc
outsb
mov
jmp
outsl
cwtl
repnz
pop
push
or
negl
out
sub
jns
push
xchg
jo
mov
mov
fisttpl
fmuls
push
aad
mov
or
mov
push
mov
cld
adc
popf
ljmp
mov
mov
lret
mov
add
mov
add
add
xadd
or
push
and
dec
comiss
and
inc
stc
fxch
sub
mov
sub
xchg
ret
jb
or
or
add
add
ds
xor
fcmovnu
dec
js
jmp
arpl
roll
fimuls
inc
inc
std
adc
adc
add
cmp
dec
stos
inc
mov
sbb
aad
or
xlat
lds
cltd
sti
lds
cld
cwtl
or
js
add
push
push
mov
in
shll
sub
lods
push
fstps
adc
sbb
cmp
pop
mov
adc
mov
adc
add
xchg
leave
adc
mov
sbb
lds
xor
gs
and
add
shl
out
sbb
or
adc
dec
sub
add
pop
push
adc
idivl
test
or
or
dec
out
xchg
pop
xorl
test
mov
jp
sbbb
movsl
jmp
inc
xchg
mov
add
or
dec
adc
jno
add
cmp
jmp
out
and
push
ljmp
or
xor
pop
push
and
sti
xchg
mov
jbe
or
es
pop
pop
xchg
in
and
pusha
rorl
cli
xchg
push
sbb
sub
push
sub
mov
outsl
je
lods
fcomi
scas
jecxz
mov
adc
jle
rclb
and
loopne
xchg
stos
stos
decl
filds
movsb
sub
imul
jmp
xorl
inc
add
orb
pop
sarb
mov
lea
jg
ja
mov
and
iret
sbb
outsb
cmp
test
test
pop
adc
xlat
xchg
mov
pop
push
add
ret
mov
and
push
or
mov
in
lea
cli
xchg
dec
jle
les
loop
pop
repz
ljmp
jp
leave
insb
mov
push
mov
jnp
inc
mov
sub
jecxz
test
pop
in
lods
xor
pop
and
dec
or
rclb
and
push
mov
inc
rclb
mov
sbb
push
or
push
add
cmp
or
mov
test
mov
push
adc
inc
std
lea
xor
daa
adc
in
jmp
and
add
shrb
cmp
push
sbb
or
dec
shr
shrb
mov
sbb
push
xor
pop
mov
test
in
iret
sbb
xchg
and
repnz
shrb
push
mov
xor
sub
pop
addl
mov
xchg
aad
xor
jmp
and
xor
int3
add
cmp
movsb
mov
out
fadds
add
test
xchg
xlat
xor
test
rol
pop
pushf
ljmp
adcb
mov
and
pop
pmaddwd
add
test
sti
mov
stos
add
insb
inc
push
xchg
sbb
stc
add
cs
or
and
outsb
cmpl
mov
inc
fldl
repz
fdivrl
adc
mov
dec
ljmp
dec
lret
test
push
in
pop
movsb
xor
cld
repnz
subl
jp
and
or
sub
mull
repz
add
push
pop
add
adcb
adc
not
jmp
jo
jl
sub
add
and
andl
clc
add
hlt
lahf
push
pop
and
pop
push
ret
and
lock
push
out
jnp
hlt
mov
es
xor
or
stc
cmp
jns
pop
and
repz
push
dec
and
and
and
or
sahf
push
cmp
int
mov
adc
out
sub
cmp
push
shrb
sbb
sti
mov
aaa
xor
jmp
dec
imul
jae
add
or
jmp
insl
sub
jne
sub
and
pop
add
inc
cs
cmpsl
jp
jecxz
mov
loopne
pusha
je
sbb
je
or
hlt
adc
mov
pop
dec
cli
es
orb
lods
xor
mov
fsubr
pop
push
and
repz
outsb
leave
or
add
push
push
addr16
dec
das
outsb
cwtl
popa
sub
sahf
dec
lahf
cwtl
ficompl
mov
test
push
neg
es
adc
dec
or
mov
add
das
push
add
shll
push
pop
push
sbb
xchg
into
not
push
push
mov
mov
dec
pop
mov
jge
push
cli
xchg
les
add
xor
cmpb
dec
inc
andnps
test
sub
mov
gs
cld
je
xchg
outsb
add
scas
stos
loopne
iret
pop
mov
cmp
clc
xchg
inc
ja
ficomps
sub
mov
loop
xor
jmp
pop
jg
pop
pop
dec
sub
push
inc
pushf
push
or
or
mov
sub
in
or
mov
das
and
idivl
xor
jle
adc
dec
mov
pop
mov
add
je
adc
repnz
inc
push
sbb
cmp
inc
push
nop
shlb
mov
in
inc
cmp
lods
insb
xchg
mov
mov
cmpsb
es
stos
or
jae
add
dec
fmul
inc
out
data16
rolb
mov
adc
jns
pop
jmp
dec
add
fsts
inc
pusha
add
popf
pop
pusha
pop
inc
decb
add
sub
cmpsb
pop
sbb
leave
push
adc
add
xchg
popa
push
aam
xchg
mov
js
xchg
mov
add
xor
push
add
mov
cli
mov
in
push
popf
clc
inc
pop
pop
roll
repnz
mov
mov
sub
push
and
out
jle
outsl
pop
mov
or
jae
pop
outsb
sub
add
arpl
addr16
jb
add
add
or
aas
mov
test
or
arpl
ret
or
or
pop
cmp
insl
push
push
xor
sub
and
imul
xchg
xchg
add
loopne
mov
out
pop
jg
cmp
jne
or
add
xlat
addr16
or
dec
sbb
inc
and
pop
and
stos
and
cmp
icebp
push
mov
adc
loopne
or
test
mov
sbb
fdivrs
clc
ret
add
and
sbb
push
mov
shlb
and
dec
push
jmp
iret
xchg
pop
fldenv
aam
dec
jle
pop
xchg
mov
inc
loope
or
jnp
cmp
or
jge
pop
xchg
push
inc
push
jmp
mov
xchg
mov
jg
xor
push
adc
insl
mov
roll
push
and
push
mov
test
jecxz
movd
ret
lods
mov
add
pop
push
sub
xor
or
add
sbb
mul
pusha
sbb
adc
imul
sbb
pop
and
imul
sbb
mov
jmp
and
sbb
jnp
mov
pop
pop
ret
cmc
mov
pop
lods
sti
std
int3
pop
mov
imul
cmp
lcall
xchg
inc
or
pop
lods
aaa
bound
outsb
sete
stc
jmp
hlt
and
adc
xchg
push
jmp
xor
imul
mov
loope
mov
shll
cmp
inc
or
sbb
xor
inc
jne
ret
shrl
clc
nop
push
jmp
add
pop
dec
mov
scas
cs
jmp
push
sub
out
jmp
mul
add
inc
cmc
call
xor
dec
stc
inc
pop
lods
and
enter
add
inc
xchg
neg
push
or
pop
aam
fsubl
add
push
stos
daa
cld
test
xchg
adcb
mov
mov
xor
pop
rolb
add
fucomip
aad
jle
test
add
sar
cltd
inc
and
push
dec
fcomip
lock
shll
cmp
repnz
pop
add
in
popf
bound
jno
dec
ret
push
lret
scas
xor
lds
fadd
dec
jmp
subb
push
cwtl
loop
inc
sub
pop
xchg
insb
sub
bound
or
push
sbb
add
pop
add
cli
call
adc
jmp
pop
pop
shll
mov
aad
mov
cs
pop
sbb
pusha
out
pop
add
pop
dec
xchg
neg
mov
jmp
jmp
xor
scas
or
add
repnz
jne
push
jmp
sbb
mov
sbb
not
mov
mov
push
mov
das
push
fcoml
pop
xchg
popa
cmp
sbb
jmp
push
icebp
adc
test
cmpl
sub
pop
stos
push
xchg
or
push
ret
ret
pop
fs
or
ret
add
ljmp
push
mov
xor
sbb
icebp
subl
push
mov
inc
jae
add
mov
add
sbb
push
orl
sub
dec
iret
std
cli
xchg
add
clc
aas
fistps
out
pop
aad
call
faddp
bound
lret
out
dec
add
fisttpl
test
push
repnz
mov
or
ss
add
scas
dec
mov
pop
mov
ret
jno
push
mov
jge
inc
xchg
xchg
and
and
adc
adc
xchg
std
push
sub
lahf
dec
lret
cmc
mov
or
inc
das
jmp
dec
cmp
insl
push
out
sbb
pop
pop
sub
add
pop
mov
test
in
and
xchg
add
repz
rorb
xchg
loop
shll
fnstenv
jmp
dec
stc
rclb
sub
pop
jae
mov
or
xchg
or
into
jne
xorb
not
mov
call
sub
push
cmc
cld
mov
dec
jb
dec
loopne
test
mov
ljmp
pop
jo
sbb
sub
xor
or
in
int3
push
jmp
push
dec
sbb
push
inc
orb
adc
mov
push
nop
inc
or
sub
out
nop
daa
push
bound
scas
sbb
lock
push
push
add
sbb
inc
rcrb
cmp
jmp
inc
or
pusha
jecxz
sub
fs
dec
push
xchg
aad
pop
or
rcl
push
sub
xchg
pop
adc
dec
shrb
sub
out
mov
pop
sub
push
and
jae
decb
pusha
xchg
or
sbb
shrl
xor
cmpsl
add
xor
dec
jle
rolb
jne
dec
xorb
add
je
push
ss
pop
pop
mov
inc
push
mov
or
lret
cmp
jp
jbe
mov
and
pop
mov
add
stos
jmp
push
xchg
jmp
mov
mov
sub
sbb
cli
mov
lods
dec
ds
andb
sbb
ljmp
mov
xchg
lret
adc
ret
push
cwtl
mov
cmc
cmp
fucomip
cli
and
in
sub
push
shlb
faddl
push
xchg
sub
mov
rorl
ret
repnz
and
jbe
jge
dec
sub
lret
sub
push
popa
jg
adc
mov
xor
push
cmp
insb
scas
mov
stos
test
xchg
sub
out
add
cmpsl
lods
add
lret
dec
add
lds
test
mov
cmc
outsl
adc
push
cs
jmp
into
sti
sbb
or
inc
and
mov
xchg
test
jne
mov
movsb
add
and
jp
push
jae
adc
orb
repz
int3
mov
arpl
pusha
mov
xchg
pop
push
ja
add
nop
add
or
jmp
push
sub
je
stos
loop
shlb
and
sbb
shl
jmp
and
pop
or
inc
jmp
loop
aaa
and
decl
pushl
add
pop
push
mov
pusha
pop
jmp
mov
out
or
jbe
jle
and
sub
dec
add
and
xchg
shr
ja
or
or
test
sub
jmp
jno
imul
das
test
mov
lds
mov
out
into
mov
add
sub
pop
jmp
rcr
js
or
popa
aad
mov
inc
out
lcall
push
mov
addr16
pop
fdivs
dec
lods
in
mov
add
jle
sub
dec
pushf
das
add
fcoml
cld
lahf
or
sbb
xlat
push
into
lahf
jns
insb
dec
jmp
lods
add
adc
adc
sbb
nop
sbb
add
icebp
and
sub
sbbl
pop
lods
jnp
ljmp
push
add
add
imul
adc
cmc
adc
fnsave
mov
das
leave
jno
mov
sbb
push
mov
lock
pop
pop
mov
add
into
push
lods
adc
int
stos
or
push
addr16
lea
pop
pop
fs
out
push
icebp
jmp
add
mov
mov
cmpb
or
mov
cmpl
mov
sti
jcxz
or
aaa
or
add
dec
dec
jmp
mov
push
cli
ret
cmc
push
incb
push
push
push
ret
dec
cmp
adcb
or
test
inc
and
daa
and
enter
popf
int3
add
cmp
stc
aam
adc
add
movsb
stos
pop
mov
ret
mov
and
push
adc
sub
or
add
pop
push
push
mov
inc
push
and
or
and
pop
push
mov
pop
sub
sub
sub
jmp
rcll
mov
popa
mov
sub
add
gs
pusha
pop
jge
in
je
pop
or
adc
and
lcall
add
dec
frstor
jecxz
jbe
lock
sub
clc
cmpsb
lock
jb
add
shrl
jo
mov
add
or
mov
test
sub
iret
or
xchg
mov
sbb
js
fiadds
cmp
inc
push
add
fsubs
jle
testl
sub
or
test
sub
pop
push
mov
fildl
in
cmp
jmp
cwtl
push
pop
fisubrl
adc
pop
xchg
sub
cmc
mov
adc
adc
scas
ffreep
push
sub
add
and
inc
pop
jno
movsb
pop
ficomps
orb
rcll
adc
mov
adcb
negb
add
pop
jb
pusha
jo
or
push
mov
int
int3
jmp
aam
and
testb
jmp
push
in
iret
mov
out
mov
inc
les
idiv
fistl
pop
fisubl
mov
int
clc
jbe
jmp
lret
mov
ds
lcall
addr16
lods
xchg
enter
dec
adc
xor
out
adc
or
lcall
and
or
in
dec
jmp
repnz
cmpb
pop
ja
insb
pop
pop
stos
add
lret
lds
subb
dec
pop
inc
adc
inc
or
push
bound
jp
cli
xorb
insb
push
ret
sub
push
pop
cmp
pop
pusha
test
dec
cmc
mov
xchg
mov
lcall
pop
mov
mov
jl
cmpsl
aam
lock
inc
imul
pop
mov
mov
scas
dec
test
dec
mov
repnz
popa
xor
nop
int3
xchg
and
pushf
pop
push
hlt
sbb
rcll
rorb
popa
add
sub
mov
das
push
std
sub
jle
stos
add
ret
cmp
sub
pop
add
pusha
inc
jle
push
dec
push
push
adc
or
push
cmp
push
jg
sub
and
sub
insl
mov
and
push
xchg
ds
inc
add
jmp
filds
lods
je
pop
fisttpll
push
and
xchg
shr
xor
pop
adc
or
pop
mov
mov
sub
stc
ds
sti
mov
mov
arpl
pop
cmp
icebp
test
push
mov
jecxz
dec
std
aaa
adc
adc
rorl
pop
mov
divb
xor
repz
sub
push
test
jmp
test
notl
pop
in
xchg
push
dec
lea
add
ljmp
xor
push
jmp
push
pop
push
mov
xor
cli
mov
and
and
lahf
push
push
jb
addr16
aas
fdivp
xchg
iret
mov
mov
add
cmc
jnp
mov
xchg
xchg
out
xlat
push
sub
inc
sbb
vpslld
divb
or
adc
push
icebp
pop
add
pop
in
gs
mov
xchg
pop
popa
cwtl
adc
pusha
inc
lods
mov
add
and
dec
mov
mov
add
jmp
in
in
or
xor
xor
cmpb
dec
inc
pop
and
or
push
mov
push
loopne
push
add
jmp
ss
sub
out
xchg
div
or
arpl
or
push
and
movsb
xchg
push
add
cmp
lds
ljmp
ja
mov
mov
mov
clc
add
shr
stos
lret
mov
push
dec
aaa
xor
test
add
and
jp
negb
les
lock
push
ret
add
or
bound
inc
push
test
and
pop
roll
cmp
pop
pop
stos
addr16
cmp
dec
je
aas
adc
sub
mov
jb
in
popa
in
js
adc
imulb
gs
lock
test
push
xchg
and
xchg
into
mov
in
pop
push
mov
sbb
mov
negl
xor
or
push
inc
popa
cmp
dec
shlb
xchg
or
cmpsb
clc
cwtl
cld
mov
sub
in
imul
xorb
mov
mov
xorb
lock
daa
add
ret
aad
in
lds
cmpsb
jmp
filds
das
sub
rclb
pop
push
push
add
std
xchg
ljmp
cmpl
push
jne
adc
out
lods
jns
xchg
add
xorb
std
push
push
cmpsb
int
in
loopne
dec
add
and
std
adc
push
mov
pop
jne
jmp
push
xorl
push
add
push
mov
xchg
test
repnz
pop
xor
leave
testl
push
mov
inc
pop
sub
insl
cmp
jmp
push
and
xchg
daa
jns
inc
orl
push
out
popa
in
or
test
cmp
mov
push
cld
scas
push
shlb
sahf
cmp
jmp
outsb
rorb
inc
mov
cs
popf
adc
lahf
lock
lods
push
inc
mov
pop
test
add
xchg
stc
xorb
mov
adc
adc
cmp
jmp
or
dec
repz
int
jmp
mov
pop
in
cmpsl
cmc
stos
cltd
xor
mov
mov
xchg
insl
test
cmp
inc
rorb
cmp
pop
dec
push
sbb
loop
xchg
xor
jmp
sub
push
add
ss
aam
or
mov
mov
pop
cmp
sub
data16
mov
cmpsl
pop
jl
jmp
pop
out
add
cmp
es
jmp
push
mov
dec
mov
fdivrs
ja
imul
ds
or
cltd
out
sub
mov
jmp
out
bound
neg
roll
xor
mov
ret
push
insl
repnz
es
sti
jo
push
pusha
push
pop
and
or
daa
sbb
mov
enter
popf
testb
and
outsb
test
adc
inc
mov
inc
add
scas
add
repnz
jne
cmp
enter
push
or
ds
dec
je
leave
fsubl
add
push
lahf
js
add
lret
insb
pusha
pop
push
movsb
sub
das
out
cli
dec
rorl
xchg
xchg
adc
lods
add
icebp
in
cmp
sbb
fs
addb
and
add
xchg
jb
inc
lcall
test
xchg
aas
add
dec
outsb
inc
and
or
clc
jbe
pop
xchg
popf
and
out
subb
add
rolb
rcrl
inc
or
loope
imul
test
xchg
iret
mov
fdivp
or
pop
add
gs
sbbb
adc
jmp
pushf
mov
and
and
push
mov
daa
add
fdivrp
adc
rcrb
loop
fiadds
ror
insb
sbb
imull
cld
cmpsb
push
repnz
or
fcompl
jb
xor
int
subl
sub
mov
mov
push
mov
or
cmp
pop
movsb
mov
fadds
mov
fldcw
fxch
mov
out
std
pop
inc
adc
sub
test
adc
popf
jecxz
add
loop
jne
mov
test
push
mov
mov
push
push
divb
cld
xor
sub
pop
in
test
add
aaa
add
mov
paddsb
ffree
adc
inc
fnstenv
sub
shlb
mov
ret
aad
and
xor
pop
or
movsb
scas
add
mov
cld
dec
dec
loopne
cmp
scas
pop
bound
pop
pop
incl
inc
add
in
sub
sarb
jo
cli
arpl
and
nop
adc
cwtl
sub
fimuls
mov
xchg
adc
or
fldl
pushf
dec
mov
je
xor
mov
repnz
sbb
fisubl
aaa
cli
orb
cli
and
sub
pop
or
xor
pop
push
jo
lods
clc
hlt
out
movsb
push
xor
mov
or
jae
arpl
jo
dec
sbb
xor
ljmp
int3
lret
push
xchg
push
inc
dec
test
sub
lock
hlt
xchg
out
or
add
dec
jo
lea
mov
push
mov
pop
loope
jmp
or
mov
cmp
adc
push
loop
xlat
inc
inc
or
jne
pop
mov
out
dec
push
and
xchg
add
sbb
jo
sub
xchg
out
pop
lret
in
dec
xchg
cmc
push
xor
mov
pop
xlat
icebp
and
push
push
popa
add
sub
mov
and
imul
add
add
mov
jmp
out
in
inc
dec
jge
shl
pop
arpl
sub
addr16
jg
push
repz
movq
jl
leave
jno
imul
fcomip
add
shll
aaa
mov
and
pop
xchg
inc
scas
test
mov
aad
sub
aad
scas
dec
lahf
ljmp
lock
mov
pusha
cld
dec
xchg
fs
ljmp
loopne
sub
cmp
les
or
cmp
and
pop
push
push
mov
mov
pop
sub
jmp
inc
jge
adc
jl
xchg
loop
fidivrl
das
xchg
dec
pop
push
cmp
xchg
ljmp
andb
notl
sub
jl
test
stc
xor
loope
out
stc
iret
push
loop
fmull
faddl
into
ljmp
sub
jmp
cmpsl
mov
dec
clc
mov
and
pop
xor
add
lahf
and
out
cmp
ret
inc
ficompl
or
pop
add
add
adc
clc
sub
sub
mov
sbb
jg
jp
subb
stc
cmp
xchg
in
mov
lds
push
imul
pop
push
or
jae
jne
or
dec
ljmp
pop
jb
mov
inc
jmp
xchg
adc
push
inc
add
ljmp
add
outsb
out
mov
xchg
jle
insb
or
in
mov
testb
les
dec
loop
das
sub
into
dec
or
mov
push
out
mov
adc
mov
push
mov
ljmp
into
sub
test
adc
add
daa
out
dec
sbb
mov
rol
adc
ja
repz
or
add
sub
pop
or
dec
jmp
push
jmp
fimuls
push
popf
pop
and
idivb
in
fstpt
popa
jmp
fadd
jecxz
in
mov
inc
arpl
sub
aas
jnp
in
out
je
bound
dec
pop
push
sbb
incb
or
pop
push
or
test
insl
xorl
push
sbb
jmp
por
test
cmp
cmp
or
push
mov
fsubr
cmp
or
sub
cli
inc
or
sbb
add
dec
xor
pop
or
clc
jge
flds
test
lods
stc
into
or
lds
or
xchg
add
push
xor
adc
insb
mov
add
ss
dec
ljmp
pop
nop
outsb
stos
sub
jle
inc
jmp
and
fsubrs
cmp
jl
lret
inc
pop
mov
daa
pop
sarb
cmc
je
jmp
iret
sub
int
popf
insl
add
iret
movsb
popa
pop
pop
or
cmp
sar
dec
adc
into
lock
lahf
shrb
push
xchg
faddl
inc
push
mov
mov
jnp
dec
cmp
inc
daa
pop
pop
mov
bnd
mov
dec
inc
adc
pop
add
pop
xchg
in
movsb
push
dec
pop
xor
mov
cmp
sub
sub
stos
sub
cli
push
imul
fiaddl
push
pushl
xchg
or
fistpll
add
fstps
lods
or
arpl
mov
mov
jg
sub
test
hlt
fs
push
add
ss
add
inc
daa
ja
push
jne
negb
rorl
add
push
jmp
jmp
in
sbb
dec
movsl
dec
jp
dec
pop
loopne
push
push
or
inc
jb
jg
lods
adc
loopne
add
loop
aad
fildl
and
outsl
push
xchg
imul
call
mov
jmp
cmp
dec
mov
push
sbb
sub
or
test
clc
push
jmp
shrl
xchg
jbe
imul
int
data16
aad
outsb
es
hlt
xchg
add
pop
pusha
aam
aas
mov
sbb
dec
ret
jmp
pop
or
pop
inc
push
jmp
movsb
aaa
mov
mov
mov
js
aaa
pop
mov
xlat
add
or
lock
and
add
scas
add
iret
sub
inc
jmp
movd
adc
in
xor
neg
nop
add
lea
pop
stc
mov
aas
inc
fisttpl
or
pop
test
out
dec
jle
in
push
dec
cmp
jns
arpl
add
lods
adc
jne
and
adc
jge
pop
mov
ljmp
adc
cmp
add
pop
js
mov
hlt
pop
lods
shlb
pop
push
mov
mov
ret
shll
add
cmpsb
ljmp
pop
pop
dec
lret
push
xor
adc
cmpsb
mov
test
xor
cli
push
mov
hlt
jbe
pop
add
xor
jmp
sbb
and
sub
mov
or
sbb
jle
push
ss
decb
inc
adc
sub
stos
das
mov
pop
cwtl
mov
jne
into
or
test
mov
loop
shlb
adc
xchg
fsubr
push
pop
push
imul
xchg
out
jno
out
mov
push
stos
dec
push
loope
je
xor
clc
xlat
lds
mov
and
and
shlb
jo
add
cmp
outsl
andb
dec
jmp
and
adc
cmp
mov
out
cmp
cmp
mov
jp
mov
lcall
xlat
jne
mov
inc
mov
inc
xor
loop
sahf
cld
out
xchg
or
adc
sub
push
ljmp
cmp
mov
fisttpll
mov
repnz
test
imul
and
sub
or
in
or
mov
or
cli
sbb
inc
jmp
lahf
sbb
mov
ret
pop
sbb
or
add
fucom
add
adcl
push
dec
cwtl
fwait
das
loopne
sub
pop
xorl
pop
mov
nop
add
cmc
lods
js
sbb
pop
jg
adc
es
and
mov
push
and
pop
and
sbb
adc
std
add
push
mov
shl
addb
shl
push
clc
push
pop
dec
test
push
ss
sbb
fists
cli
not
rolb
xor
bound
lret
pop
xlat
mov
mov
or
add
sub
pop
icebp
push
clc
out
xor
push
xchg
in
push
shrb
lods
and
ds
adc
mov
aas
add
test
adc
cmp
sbb
addb
push
jmp
lock
dec
cmp
adc
push
test
sub
addr16
mov
push
rcll
mov
and
repz
dec
fs
scas
push
and
clc
ljmp
jno
mov
or
stos
les
xchg
push
hlt
sub
add
jmp
not
xchg
shr
or
pop
xor
xlat
or
addb
and
pop
push
movsl
sti
mov
and
pop
in
mov
dec
push
and
inc
loope
jno
orb
cmp
add
mov
aaa
dec
add
jb
xor
loop
xor
fisttpl
imul
adc
add
icebp
lea
xchg
and
push
and
push
jp
and
push
pop
add
rolb
jge
cltd
dec
repnz
inc
cmc
pop
out
mov
or
sub
daa
cmp
ljmp
ja
or
shrb
xor
pop
out
pop
mov
jle
pop
daa
xchg
fdivrp
jmp
stos
or
sbb
add
stc
cmpsl
bound
lret
leave
push
test
cli
mov
das
loope
pusha
call
ss
jne
pop
jge
mov
push
adc
addr16
scas
cmp
ret
jbe
lods
fcom
cmovg
and
pop
jmp
outsb
cld
outsl
icebp
adc
test
fcomp
mulb
mov
pop
loopne
pop
sbb
pop
dec
mov
jno
xorl
push
ja
outsl
pop
add
add
adc
pop
and
push
outsb
jmp
jl
hlt
adc
das
mov
dec
cs
inc
xor
xor
pop
xor
or
ljmp
lret
stc
pop
sbb
jmp
jmp
out
xor
cmp
inc
jns
mov
insl
insb
or
pop
add
stos
push
pop
sub
adc
add
es
cltd
lret
and
loope
aam
int3
jb
mov
inc
xchg
pusha
pop
aad
shl
jmp
push
stos
cs
cmpsb
or
ja
push
mov
sbb
and
or
fstpl
add
rolb
and
rclb
pusha
inc
jnp
push
das
add
es
jge
add
add
sar
jae
pop
fdiv
mov
flds
dec
scas
adc
decb
xor
sahf
or
ffree
or
cltd
and
mov
lahf
sub
push
lret
int
call
fneni(8087
addl
jne
add
xor
popa
notl
pop
jne,pt
fucomp
push
jmp
sbb
mov
fistpl
stc
shrb
xor
mov
in
push
pop
cmc
ret
in
pop
xor
and
adc
jb
push
push
sub
mov
testl
mov
pop
mov
comiss
stc
jnp
or
ret
jl
in
out
and
pop
movsl
imul
mov
inc
push
xor
dec
lret
jmp
mov
sub
mov
adc
hlt
stos
rcl
jb
push
lret
fsin
stos
popa
dec
or
add
shrb
movsl
adc
push
inc
jmp
ja
and
push
xor
and
add
pusha
subb
js
lods
and
incb
mov
aad
stos
xchg
dec
add
cltd
es
and
mov
push
sbb
lret
mov
cmp
cmc
ds
push
sub
fucomip
fstpl
out
mov
icebp
in
jae
loope
pop
xchg
mov
xchg
add
sub
jmp
sub
mov
shlb
and
sbb
or
add
test
incl
add
lcall
xchg
jmp
xlat
nop
ljmp
mov
jno,pt
mov
sub
push
sub
aas
inc
or
inc
in
mov
rorl
jg
jb
lock
push
push
xchg
sar
adc
xor
add
mov
cmc
mov
mov
pusha
mov
push
mov
ret
lret
es
xchg
inc
add
sub
orl
negb
add
movb
adc
pop
repnz
or
jbe
add
dec
lock
jle
popa
push
add
mov
adc
dec
ficoml
jbe
add
jne
cmc
out
scas
ds
aam
push
xchg
pop
and
fs
ret
call
mov
ret
xlat
pusha
out
add
imull
out
dec
jmp
sub
jne
sub
jge
or
das
or
sldt
xor
mov
add
add
add
mov
push
sbb
insb
inc
or
and
outsl
fmull
mov
sbb
adc
scas
int3
add
jmp
adc
addr16
or
sbb
mov
bound
adc
adc
lahf
aad
dec
sbb
sub
add
jecxz
into
sbb
cmp
bound
mov
mov
rolb
adc
or
std
sbb
adc
and
pop
gs
in
sbb
lret
mov
neg
add
add
xor
adc
mov
mov
mov
pop
and
and
push
nop
mov
arpl
push
mov
cmp
mov
sbb
or
push
dec
mov
sub
xor
xorl
push
shrl
adc
pop
push
inc
xchg
or
xor
xor
rcl
loop
cmp
mov
les
and
sahf
inc
mov
mov
add
or
std
jo
imul
or
andb
fisttps
and
pushf
and
mov
icebp
mov
push
mov
mov
or
push
cmp
shlb
sub
adc
pusha
stc
je
or
loop
and
hlt
idivl
fadd
adc
push
in
sub
jns
int3
xor
stc
mov
sbb
xchg
push
jg
cmpb
orb
test
int3
or
inc
test
mov
aaa
scas
jmp
aaa
xchg
dec
les
or
cmpsl
add
adc
or
mov
and
aas
sbb
mov
mov
pop
add
jne
add
jge
pusha
pushf
cld
call
jae
cmp
mov
adc
inc
sub
add
xor
mov
mov
mov
dec
or
jne
testl
mov
xor
or
mov
xor
mov
les
sub
pop
push
dec
push
movsl
les
loop
and
pop
cwtl
pop
ljmp
dec
push
sbb
sub
mov
shl
mov
mov
sbb
sub
adc
stos
shrl
add
jns
cmp
xor
fnstcw
dec
ds
mov
ret
push
mov
addl
sti
loop
or
mov
flds
jmp
xor
jle
sarb
dec
outsb
and
imul
xor
push
inc
jmp
out
loopne
dec
je
sub
lcall
sti
pop
or
cmpl
rcrb
dec
sbb
es
jle
ret
xchg
in
jmp
cmp
shll
adc
call
sub
pop
adc
jmp
and
push
cli
mov
jg
lods
sub
popa
xor
in
ror
loopne
test
push
jns
or
add
push
adc
movsl
or
add
jmp
andb
inc
ror
sbb
cltd
jnp
push
xchg
or
xor
lret
ficoml
pop
in
int
push
pop
cmc
add
dec
popf
js
pop
shrb
mov
inc
inc
add
sarb
pop
mov
pop
sub
shrb
add
fcmovnu
add
inc
jmp
lret
add
xchg
sbb
inc
add
xor
inc
sahf
shlb
repnz
inc
incb
int3
push
pop
popa
jge
mov
nop
sbb
pusha
and
scas
mov
mov
pop
outsb
in
mov
sbb
out
add
add
jl
clc
ljmp
cld
in
add
in
arpl
lahf
sbb
dec
jg
mov
test
mov
adc
jmp
daa
jg
test
xor
xchg
sbb
sub
aad
lock
add
add
or
in
jo
filds
jge
mov
xor
add
cmc
dec
dec
sub
cld
and
or
or
sbb
inc
fsub
mov
cli
or
mov
int3
shll
je
push
aaa
adc
push
ror
push
inc
pop
daa
push
jmp
movhps
out
flds
pop
pop
cmp
push
sub
pusha
das
or
pop
loop
mov
lcall
xor
cltd
in
or
fmuls
mov
push
or
pop
jmp
mov
das
dec
loop
mov
sbb
jmp
or
and
std
fnsave
jb
sarb
out
and
adc
jl
jnp
and
add
xchg
cmp
bound
mov
or
pushf
cmp
pop
test
mov
or
cmp
shlb
or
add
jmp
mov
hlt
lea
les
jmp
ret
dec
pop
sub
jns
hlt
in
loopne
xchg
cmp
rorb
or
andb
pop
loope
pop
xor
jp
fsts
pop
or
mov
add
mov
aas
aaa
das
mov
push
nop
mov
jecxz
test
jmp
dec
dec
stos
adc
sti
sub
rol
ljmp
and
in
pop
movsb
shlb
dec
loop
sub
jnp
clc
cmp
mov
xchg
cld
icebp
mov
add
imul
ror
call
inc
jmp
imul
jno
or
out
sub
jmp
cmp
jbe
sbb
cmpsb
or
and
lahf
push
pop
sahf
mov
mov
mov
jmp
push
mov
adc
mov
sbb
add
pop
jge
pop
cli
mov
dec
pop
in
inc
enter
sub
test
das
or
fucomi
movsb
fadds
cld
inc
adc
mov
lret
mov
cmp
add
inc
enter
loope
loop
not
enter
iret
mov
popa
aas
pop
jns
das
push
inc
sub
add
pop
aam
add
push
push
mov
pop
xor
adc
xor
dec
das
push
inc
inc
mov
add
jl
pop
adc
pop
insb
ss
dec
push
or
lds
pop
int3
jbe
sub
or
popa
dec
push
nop
ds
sub
or
mov
loop
xchg
pop
jle
add
scas
loop
or
std
shr
jp
jae
ljmp
mov
xor
sbb
sbb
in
stos
and
clc
cmc
sub
or
push
pop
sbb
hlt
ret
adc
dec
mov
or
push
and
enter
sbb
cmp
mov
mov
pop
mov
jb
jns
rep
in
or
add
add
mov
pop
adc
mov
push
xchg
jno
push
dec
push
mov
push
pop
gs
jae
rorb
sub
jmp
push
ret
pop
xchg
xchg
push
or
push
push
jne
pop
push
or
jmp
or
and
movd
adc
dec
std
and
shrl
clc
cmp
and
ds
cs
pop
das
stos
mov
jno
xchg
fistps
and
add
orl
sbb
inc
and
xor
fs
fadd
incl
sbb
and
pop
cmpsb
adc
dec
shll
adc
cmp
and
push
xchg
jp
out
mov
aad
adc
inc
cmpsl
pop
cmp
pop
xchg
inc
xchg
in
and
add
adc
daa
arpl
das
sbb
sub
push
jle
inc
pop
pop
out
gs
add
dec
es
ret
je
daa
cmp
mov
jge
ficoms
fbld
push
add
add
cmc
jecxz
mov
push
std
clc
mov
mov
lahf
pop
xchg
push
add
inc
std
fnsave
vrsqrtps
sub
inc
daa
push
js
or
out
or
push
xorb
cmpsl
push
add
or
xchg
outsb
dec
jmp
or
pop
sub
das
addr16
jmp
xchg
adc
xchg
adc
mov
or
mov
or
shl
xchg
outsl
loope
addb
add
pusha
dec
jge
subb
sub
mov
adc
dec
pusha
icebp
xchg
pop
sub
push
push
aas
ljmp
leave
btc
out
pusha
or
sub
rcrl
out
xor
mov
lret
std
hlt
xorb
or
scas
cmpsl
pusha
and
outsl
idivl
out
dec
dec
pop
sbb
lock
xchg
mov
jmp
js
pcmpeqb
push
pusha
loopne
mov
mov
jmp
jnp
push
mov
xor
sub
outsl
pand
and
inc
inc
and
sbbb
mov
out
popa
cmp
imul
adc
push
pop
fwait
cmpsb
nop
je
mov
add
jge
notb
sub
xchg
lea
dec
inc
dec
or
cli
test
xor
xchg
sarl
lret
lds
inc
xlat
dec
je
mov
jmp
add
mov
das
mov
mov
cmp
rolb
pop
push
gs
jmp
je
lds
sbb
sbb
vfrczsd
cs
iret
dec
sti
aam
fcompl
push
shl
add
pop
fnstenv
add
es
mov
or
dec
daa
inc
inc
push
xchg
mov
sbbb
int
stc
aaa
xlat
repnz
or
cltd
lods
add
cmp
pop
and
repnz
add
movsl
fadd
addl
lock
or
ds
jmp
jne
nop
inc
push
ret
or
subps
inc
out
incl
mov
mov
fldl
enter
sbb
imul
add
mov
or
push
sahf
jbe
leave
push
das
mov
loopne
inc
jmp
dec
push
addl
loope
or
mov
pop
int3
add
mov
add
in
xor
add
pop
inc
xor
sub
dec
xor
dec
icebp
jo
int3
add
test
xor
pop
pop
and
ret
aas
jae
in
stc
and
push
pop
pusha
and
dec
sbb
cltd
cmp
das
mov
jecxz
add
push
inc
shr
mov
pop
jmp
aad
cmc
sub
mov
xchg
stos
and
sahf
stos
pop
push
jmp
mov
mov
es
stos
ljmp
jmp
lods
jecxz
jo
insl
testl
push
inc
in
sbb
xchg
xchg
mov
pop
out
and
movsb
repnz
dec
xor
or
cmc
dec
or
jae
imul
in
iret
movsb
out
mov
push
loope
push
rorl
xchg
dec
cli
out
mov
out
and
mov
rclb
mov
mov
and
or
sub
dec
jns
lods
inc
hlt
fsubr
je
pop
or
mov
cmpsb
pop
adc
imul
shrb
pop
push
add
sbb
ss
jbe
add
push
dec
and
fsubr
call
mov
fstpl
or
mov
jbe
xchg
test
fs
leave
push
leave
push
jno
jmp
xchg
jg
jno
lds
pop
xor
mov
push
jg
mov
push
adc
andb
test
sti
out
or
xchg
lock
pusha
mov
push
ljmp
fadds
inc
mov
xor
and
jno
pop
dec
out
dec
adc
shlb
lock
mov
fsubl
cld
bound
int3
mov
shr
add
cmp
mov
cmp
pop
jle
sar
dec
xor
test
fcoms
mov
shlb
or
push
mov
jmp
inc
xor
dec
jnp
add
lret
lods
push
mov
dec
popa
lahf
dec
stos
xchg
jb
jle
fsts
mov
or
push
cmp
sar
push
xlat
add
xor
mov
ret
or
push
push
mov
and
sub
int
sub
adc
cmp
sub
cli
push
addb
in
inc
pop
pop
call
dec
sbb
and
into
add
cmp
add
sub
sub
pop
out
adc
inc
popa
adc
adc
out
je
add
icebp
add
and
insl
cld
xchg
pop
add
push
pusha
adc
dec
mov
xchg
add
test
jmp
mov
add
jmp
pop
inc
jnp
pop
add
pop
cmc
sbb
loope
ja
enter
cwtl
je
pop
test
mov
in
push
mov
cli
rolb
mov
pop
mov
xchg
xchg
mov
xor
xchg
add
mov
repnz
leave
or
pushf
push
addb
sub
lahf
jo
dec
in
add
add
cltd
mov
add
or
add
neg
push
adc
dec
push
mov
scas
popf
clc
outsl
loope
xor
cmpl
mov
add
sub
test
jmp
dec
pop
mov
push
push
pop
mov
mov
sub
ja
add
jmp
lret
loop
test
mov
jb
dec
mov
pop
jmp
pusha
pop
mov
lds
out
call
incb
mov
jmp
push
outsb
jne
dec
adc
daa
sbb
or
aad
or
push
mov
push
test
adc
adcb
mov
inc
cs
stos
out
pusha
sbb
adc
js
or
repnz
pop
lret
cmp
mov
adc
mov
call
loopne
push
sbb
out
mov
lcall
inc
cmpsb
dec
test
push
or
mov
push
shll
test
add
mov
jmp
jle
dec
mov
ret
push
lahf
xor
sub
movsl
ljmp
pop
xchg
inc
add
iret
or
cmc
mov
xchg
xchg
ret
or
mov
lea
or
adc
icebp
push
mov
inc
clc
mov
cmp
les
mov
aas
pop
or
jg
push
add
stc
xchg
or
inc
mulb
filds
mov
or
outsl
mov
bound
cmpsl
in
bound
cmp
sub
push
xchg
icebp
addb
push
push
add
adcb
pop
shl
rorb
cs
and
xor
lar
mov
lock
rcl
inc
imul
sahf
out
or
or
add
inc
out
push
xor
sub
lds
aam
jmp
mov
in
adc
or
divb
and
inc
add
push
push
sahf
or
sub
ja
mov
add
imul
xchg
hlt
lea
inc
jo
sub
gs
inc
dec
pop
xchg
les
pop
arpl
jo
lock
icebp
cli
loop
inc
mov
iret
pop
dec
out
xor
es
dec
and
mov
push
mov
inc
mov
outsb
mov
jge
pusha
std
pop
xchg
jmp
mov
sub
out
jp
or
push
and
nop
inc
dec
stc
mov
mov
gs
outsb
inc
lea
fisubrs
cld
mov
sub
xor
mov
pop
xor
pop
add
pop
mov
scas
jbe
or
repz
ret
lret
pop
ret
dec
pop
and
and
push
loopne
fbld
out
icebp
xor
mov
jmp
add
ror
nop
sub
and
dec
addr16
fwait
and
pop
sub
data16
rorb
xchg
push
stos
and
pop
cmc
loopne
repz
jl
int3
cmp
jnp
dec
jne
outsl
mov
mov
mov
and
xor
lds
pop
test
adc
sti
jg
jne
inc
cmp
xchg
lret
rolb
lods
xchg
in
push
out
cwtl
cmpsb
das
cmp
loope
dec
inc
insb
jmp
dec
inc
arpl
test
sub
imul
jg
outsl
dec
push
mov
mov
pop
and
mov
dec
dec
jb
loopne
testb
imul
dec
or
daa
dec
inc
pop
dec
ficompl
dec
sbb
lret
call
orb
adc
jg
lret
insb
hlt
mov
push
push
xchg
dec
mov
daa
mov
mov
fwait
add
mov
addb
or
xor
xor
push
jmp
pop
pop
xchg
lock
jns
adc
loop
fs
jl
jecxz
mov
adc
dec
rclb
nopl
sbb
or
movd
sub
cmp
imul
sub
filds
sbb
xor
jae
fisttps
sub
ffreep
add
or
adc
sub
dec
out
pop
addr16
inc
push
movsl
add
int
add
mov
pop
test
xchg
pop
stc
icebp
xchg
xchg
jge
or
data16
cli
es
xor
je
or
pop
ja
mov
leave
inc
ja
jmp
pop
pop
inc
aad
dec
mov
jae
fucomip
xchg
dec
pop
mov
push
aas
push
jmp
or
push
add
push
inc
push
adc
rorl
stos
shlb
stc
loope
sub
inc
aam
sbb
es
or
add
cmp
popa
pusha
ret
or
mov
fsubs
addl
in
jg
popa
add
or
push
sub
add
ss
cmc
mov
cli
lds
test
call
in
push
mov
insb
daa
ss
xor
mov
push
xchg
or
fisubrl
fisubs
push
pop
in
add
pop
jnp
in
sub
cli
iret
or
mov
add
sub
enter
inc
push
mov
jmp
xchg
sub
pop
pop
js
test
add
pop
mov
andb
push
inc
sahf
loop
jle
lahf
mov
adc
arpl
bound
push
dec
or
insb
mov
lcall
push
sub
test
fsts
or
jg
mov
pop
cmp
mov
not
xchg
loopne
mov
sub
xorl
out
push
pusha
mov
pop
or
inc
jmp
lods
jp
loopne
out
xchg
pop
cmp
push
inc
or
loop
ja
shlb
inc
not
xchg
cmp
or
sbb
ret
test
sub
adc
cs
dec
add
scas
sub
xor
xor
or
mov
jmp
jmp
addl
cmp
xor
mov
jb
mov
cmp
sbb
stos
enter
fistps
inc
or
mov
hlt
orl
mov
push
addl
scas
clc
ja
sbb
pop
out
jns
mov
outsb
lahf
and
sub
inc
push
jno
or
int3
jle
xchg
gs
xchg
adc
in
xorl
jmp
cmp
loope
sub
aam
es
rclb
xor
sti
adc
lock
roll
xor
inc
jmp
jl
dec
js
je
jae
mov
cmpb
add
jmp
lcall
pop
repz
cmp
call
inc
stos
push
daa
shlb
in
lds
inc
xchg
pop
pushf
mov
or
imul
popf
cs
leave
enter
fcom
outsb
adc
jg
dec
push
lods
jmp
mov
push
push
daa
mov
inc
out
dec
jne
push
iret
dec
popa
push
rol
dec
sbb
ret
pop
shl
sub
mov
ficomps
push
pop
pop
mov
add
test
in
outsb
ds
ljmp
or
fs
push
sub
jmp
add
xchg
jge
cmc
inc
loop
push
push
or
adc
fisttpll
pop
pop
xorb
push
cmp
mov
or
lock
leave
cmp
jmp
stos
fimull
add
mov
ja
call
mov
pop
loopne
or
or
mov
shrl
ljmp
add
pusha
sbb
rclb
shlb
movsl
in
into
pop
test
mov
das
nop
jbe
mov
mov
pop
and
sbb
das
negl
popa
daa
pop
loop
stc
push
jg
add
mov
adc
int3
cli
or
notb
rclb
inc
jecxz
mov
mov
enter
mov
sub
xorb
hlt
xchg
fidivl
sub
cwtl
add
push
jmp
in
adc
xor
mov
mov
jbe
outsl
test
aad
xor
jmp
ret
mov
stos
lea
repnz
mov
std
pop
adc
fdivs
or
mov
cmc
out
bound
push
or
rclb
stc
add
and
shlb
pop
adc
enter
jbe
out
pop
lods
dec
mov
les
and
cmp
jmp
cmp
mov
mov
sub
ljmp
fildl
shll
fs
fistl
adc
leave
add
xor
and
incl
add
adc
jmp
and
jne
adc
dec
add
and
imull
leave
cmpl
in
add
add
outsb
push
and
xchg
adc
or
or
dec
ror
inc
xchg
sbb
fistl
cwtl
jae
push
imul
lods
mov
push
add
mov
pop
jle
push
out
decb
loopne
mov
in
daa
lret
nop
inc
and
jp
mov
daa
lock
cmp
pop
pop
bnd
inc
pop
loop
ret
push
push
mov
and
repz
das
pop
mov
sub
shrb
sbb
iret
loope
or
push
flds
jne
es
pop
pop
xor
add
mov
lcall
mov
push
jge
pop
sub
lds
bswap
mov
inc
sub
jg
or
xchg
mov
out
push
js
imul
jo
sub
mov
js
sti
sub
imul
pop
xor
pop
cmp
cmpsl
or
push
mov
mov
or
jmp
jmp
pop
add
inc
lcall
das
gs
or
roll
lret
shll
fmull
std
insb
imul
and
add
lcall
add
call
or
push
lods
mov
push
test
push
jmp
in
add
sbbl
lret
mov
pop
cli
bound
cmp
push
inc
dec
bound
mov
ret
daa
lock
or
mov
rolb
fsubrs
cmpsb
ret
xchg
rcrl
je
pop
mul
mov
sbb
mov
pop
in
or
push
push
cmp
test
and
out
add
sbb
mov
inc
or
pop
sub
sub
push
hlt
in
movsl
mov
fdivr
fs
dec
mov
sbb
pop
push
lahf
ret
lods
enter
xor
push
add
sbb
sub
out
dec
xchg
in
mov
rcrl
add
lea
fcmovbe
aam
mulps
jae
or
pop
sub
or
pushf
sub
or
xor
cmp
dec
add
fcoms
jge
gs
and
mov
stc
dec
jb
call
scas
int3
leave
dec
xchg
add
push
popf
clc
jp
enter
add
xorl
inc
pop
inc
int3
adc
fdivrs
and
pusha
pop
fcmovb
or
aaa
cwtl
inc
or
or
cwtl
mov
cmp
jmp
add
in
mov
mov
test
jbe
andl
xchg
popa
popf
pop
and
mov
push
fidivrs
js
std
dec
xor
mov
mov
adc
adc
dec
popa
dec
lret
add
cltd
sbb
mov
mov
sub
mov
outsl
test
jns
adc
pop
adc
mov
addr16
sub
fwait
ja
jmp
stos
mov
aad
dec
mov
cli
push
and
sub
push
push
psubb
push
ret
mov
or
hlt
dec
mov
gs
jge
and
jns
test
adc
icebp
adc
sbb
add
in
xor
inc
inc
pop
aad
and
cmp
aaa
adcb
push
sub
jmp
roll
jo
pop
jnp
testl
sub
ds
insb
push
mov
sbb
push
nop
enter
rcll
push
pusha
lret
dec
ret
dec
inc
scas
jl
roll
push
mov
jmp
mov
inc
mov
or
dec
lods
push
out
or
jno
sbb
dec
leave
dec
fcmovu
ret
pop
cmp
pop
jne
push
sbb
fidivs
pop
mov
dec
pop
fistpl
pop
lahf
lds
lret
pop
cmp
and
out
ljmp
or
add
and
test
jmp
and
cmc
dec
out
mov
add
imulb
addr16
lret
or
jmp
pushf
fbld
out
and
es
and
push
push
pop
insl
push
sub
int3
aam
mov
insl
mov
add
ss
add
or
xor
push
add
in
add
sbb
stos
clc
sub
aaa
pushf
sti
push
adc
popa
mov
pop
jmp
sub
add
xchg
sub
adc
stos
and
add
cs
push
cmp
ret
pop
lods
ret
fimull
inc
pusha
push
or
xchg
sub
out
in
dec
out
clc
arpl
out
jbe
and
pop
out
je
ljmp
jge
push
mov
jne
imul
gs
mov
das
jmp
out
iret
fmuls
sub
sbb
and
std
dec
in
jae
sub
mov
inc
out
jbe
pop
ret
dec
clc
or
push
jmp
aas
lcall
and
sar
pusha
add
and
nop
push
xchg
movsb
add
lret
sub
sub
sti
inc
jecxz
and
daa
jmp
lds
pushf
in
cmp
inc
and
push
cli
sbb
int
mov
jmp
mov
jecxz
dec
xor
jae
xor
rcl
orb
dec
mov
pop
into
sbb
ficomps
ds
add
mov
shl
stos
int3
hlt
lods
call
and
rorb
jbe
push
fidivrl
das
sbb
lcall
xlat
add
add
subb
xor
xlat
xchg
stos
aam
out
mov
sub
fcmovb
push
cmp
pop
in
in
fdivrl
inc
mov
jns
in
mov
pop
bound
pop
shl
mov
stos
enter
into
push
in
dec
jle
and
leave
adc
or
pop
lcall
int3
loope
xchg
mov
jp
or
pusha
jmp
add
mov
scas
mov
xchg
mov
ds
or
jl
out
stos
bound
cmpb
push
loope
popf
je
movsb
test
cmp
sbb
int3
add
adc
in
xchg
add
hlt
mov
mov
fildll
icebp
into
xchg
std
dec
or
out
ss
xchg
jmp
push
push
xor
pop
rcl
jmp
loope
push
imul
pop
xor
das
ss
and
adc
inc
in
jmp
jle
lcall
jmp
mov
lahf
paddusb
popf
sbb
ljmp
dec
fldenv
mov
cs
addr16
adc
repz
mov
xor
aad
mov
aam
jge
and
jg
jnp
pop
xor
sub
stos
sub
sbb
loop
dec
addl
sub
push
cmpsl
and
fdiv
dec
jno
cmp
test
enter
pop
dec
xadd
dec
add
mov
or
xor
push
or
mov
xor
and
push
mov
push
imull
add
sub
mov
or
pop
popa
xlat
push
mov
aam
jp
push
adc
jecxz
pop
lods
sbb
mov
aaa
dec
cmpsb
or
cs
comiss
adc
popf
jnp
xchg
fisttps
jo
lock
testl
test
xor
adc
and
imul
addb
pop
push
mov
and
sbbb
mov
lret
xor
sbb
outsl
or
ja
rcrl
adc
inc
aad
lock
punpckhwd
sub
cmpsb
xor
adc
add
pop
add
and
mov
add
and
stc
add
or
ret
sbb
shlb
jmp
push
cmc
dec
sub
pop
bound
jg
and
or
sbb
cli
sbb
mov
sbb
mov
and
test
in
add
jb
mov
shr
lahf
inc
repnz
add
imull
rolb
rep
ret
pushf
dec
adc
faddl
or
xor
cmp
and
les
repnz
xchg
mov
dec
jmp
pop
push
jle
cmpsb
in
cmpsl
ja
leave
pop
adc
mov
mov
shrl
in
arpl
push
not
push
ficoms
or
or
jmp
test
adc
xchg
rcll
jg
adc
or
cmpl
xor
aad
adcb
push
scas
cmp
jmp
cld
notl
xchg
lds
mov
add
push
stos
enter
or
arpl
adc
bound
jmp
scas
pop
outsl
jge
pop
fstl
in
mov
clc
cmc
stc
int3
mov
dec
aas
repz
pop
loop
aam
and
pop
shr
and
sahf
or
stc
loopne
mov
sub
orl
test
repz
xchg
mov
test
dec
mov
les
pop
repnz
enter
mov
outsb
xchg
or
sti
dec
lahf
cli
inc
ja
idivb
push
lods
aas
add
shr
mov
pop
icebp
lock
cmp
jae
in
pop
jbe
jmp
cld
xchg
pop
stos
iret
xchg
dec
mov
jl
scas
insl
sahf
cmp
inc
fs
xchg
fisttpl
xor
arpl
in
mov
mov
or
ss
out
or
arpl
adc
jne
pusha
xchg
adc
push
push
mov
mov
or
push
repz
xor
pop
je
mov
cmpsl
into
inc
lcall
test
jmp
andl
orb
mov
repz
cmp
sub
pop
fidivl
mov
pusha
add
pop
negb
sub
or
pop
xchg
outsb
add
stos
mov
dec
jae
adcl
inc
dec
inc
inc
test
dec
movsb
dec
add
inc
push
into
int3
icebp
insb
inc
dec
xchg
and
add
inc
dec
push
or
jle
pop
pop
mov
gs
movsl
mov
mov
xchg
jecxz
addl
call
rolb
jmp
call
cltd
adc
xor
mov
ret
push
les
lock
add
add
add
jmp
adc
or
mov
fisttps
dec
out
push
sub
clc
inc
and
or
movsb
and
mov
push
mov
fcoml
pop
pushf
std
dec
ret
in
inc
insl
push
rcll
in
outsl
cmc
mov
stos
popa
xor
je
jle
add
xor
mov
testb
mov
in
pop
mov
mov
or
mov
jge
jb
add
call
mov
push
gs
orps
push
cmp
and
jne
pusha
pop
or
inc
or
sub
add
add
testl
cmp
push
popa
lock
push
fstpl
sbb
cmp
nop/reserved
jecxz
dec
mul
mov
lea
daa
inc
pusha
lock
jmp
push
inc
sub
push
repz
cltd
push
xchg
clc
ret
mov
dec
mov
sbb
lret
mov
mov
leave
fs
add
inc
and
pop
xor
sub
cwtl
shrl
xchg
dec
leave
push
in
xlat
mov
inc
mov
into
add
loopne
data16
dec
sub
pop
out
jno
or
in
lcall
and
push
mov
clc
enter
pop
mov
xorb
leave
fsubs
pushf
dec
in
or
mov
adc
adc
sub
xchg
inc
mov
aaa
sbb
and
push
mov
repz
add
cld
shll
sub
std
lret
or
inc
and
incl
and
int
sub
or
sbb
or
and
in
mov
enter
cli
lea
sbb
adc
and
out
lahf
inc
roll
ret
outsl
fs
jbe
lock
adc
fcmovnbe
in
adc
dec
in
sahf
jae
jmp
xor
cs
in
cmp
jo
jmp
out
fdivrs
pop
test
call
sub
mov
jmp
push
mov
fdiv
aad
add
cmpsb
inc
adc
push
shlb
push
or
mov
cmp
fsts
clc
jno
mov
xlat
inc
or
and
mov
cpuid
dec
jl
test
cmpl
or
jmp
lret
sub
das
dec
outsl
add
icebp
inc
mov
iret
inc
fisttpl
jmp
mov
push
sbbb
and
mov
scas
lock
mov
aas
mov
hlt
mov
lds
prefetchw
jns
jne
dec
mov
pop
mov
add
iret
into
push
sar
adc
sbb
int3
cli
mov
stos
cmp
leave
push
add
or
pop
xor
je
sub
stos
add
out
loop
jo
arpl
or
mov
and
cmp
dec
int
movsl
or
mov
stos
stc
cmc
xor
push
pop
nop
es
push
xor
shlb
add
mov
icebp
pop
add
add
enter
rorb
adc
or
or
ja
push
and
xorl
adc
push
inc
add
repnz
xchg
pop
jne
addl
sub
mov
xchg
fidivrl
and
rorl
adc
repnz
add
mov
stos
cmpsb
sarl
mov
cld
pop
or
and
mov
sub
sbb
mov
lds
sbb
add
cli
push
pop
in
mov
fisubs
push
outsl
mov
subl
xor
pop
out
lods
jbe
leave
dec
jno
sbb
leave
add
popa
xor
jmp
in
sbb
mov
rorb
add
xchg
ficoms
mov
loop
ja
xchg
les
push
push
ret
xor
arpl
fwait
sbb
mov
ficomps
mov
jae
mov
and
movsb
jmp
rcrl
pop
and
adc
dec
adcl
push
loop
aad
add
or
cmp
push
inc
and
iret
invd
dec
cmp
imull
hlt
push
pop
mov
adc
rcr
sub
and
das
sub
movsl
jne
fcompl
lcall
xor
cmp
add
pop
loope
sub
xor
mov
mov
sub
sub
and
dec
xchg
jmp
mov
xor
sub
and
mov
shlb
or
dec
lcall
adc
inc
lods
pop
add
sub
jge
popf
add
sub
mov
and
jmp
mov
je
scas
pop
scas
jnp
fisubl
push
xchg
jmp
adc
cmp
adc
xchg
loopne
fsubs
iret
mov
and
jle
pop
push
jl
add
push
pop
and
mov
inc
add
and
adc
mov
or
adc
sbb
push
ret
cmp
cltd
add
and
int3
icebp
adc
inc
push
push
mov
popa
or
adc
dec
sub
punpckhbw
sbb
adc
or
push
cmp
jg
push
add
push
mov
mov
dec
push
or
jg
push
in
add
pop
sub
xchg
sti
imul
mov
mov
jo
mov
mov
mov
pop
shrl
scas
sahf
loopne
dec
stos
add
adc
xor
push
mov
dec
jmp
sbb
cs
jns
ljmp
call
adc
pop
fadds
xor
sahf
test
mov
cmc
cmp
sub
cmp
sbb
pop
or
jg
or
xor
stos
mov
aas
repnz
pop
inc
pusha
xchg
idivl
mov
fdivs
inc
jmp
mov
std
sub
or
sbb
shr
xchg
adc
xchg
outsl
xor
test
mov
js
add
adc
pop
lcall
xchg
pop
push
xchg
and
fisubrl
cmp
mov
outsl
mov
out
pop
or
mov
push
lret
or
xchg
arpl
inc
insl
sbb
jge
std
xchg
add
cvtdq2ps
popa
add
int
mov
rep
or
pushl
xlat
adc
pop
or
inc
inc
jle
adc
mov
and
cli
mov
in
daa
fisubl
mov
sub
or
xchg
sbb
arpl
jnp
sbb
mov
sbb
cmp
stos
cmpsb
push
and
mov
mov
mov
sub
lret
out
and
add
dec
xor
or
inc
mov
xchg
stos
ds
idivb
add
lcall
push
and
cltd
cmpsl
movb
addb
aad
sbb
aaa
jns
sub
xchg
sti
int
das
fisttpll
sub
push
pop
xchg
cmp
fnstenv
adc
sbb
pusha
outsl
std
sbb
push
ficoms
lds
sub
push
jmp
or
mov
into
mov
mov
dec
std
mov
adcb
sbb
adc
add
mov
lock
xor
inc
push
fldlg2
mov
adc
pop
pop
cmp
push
sarl
ret
and
bound
or
add
mov
mov
orb
int
xor
neg
or
mov
push
js
jb
aaa
sahf
xor
add
jmp
in
jmp
in
stos
fmuls
cmp
xchg
fs
repnz
cmp
cmp
fs
or
ja
pop
push
std
lret
pusha
sbb
sbb
pop
les
das
sub
push
mov
pop
add
mul
jp
jg
ud2
sub
inc
push
jge
pop
mov
movsl
pop
shlb
call
mov
mov
lds
mov
jns
sub
in
dec
loop
mov
dec
subl
mov
lock
movsl
sub
pop
loope
dec
sub
mov
push
adc
sub
mov
add
add
pop
call
xchg
mov
sbb
xor
insb
in
lret
das
das
or
popw
pop
push
les
add
add
pop
in
lock
int3
inc
push
mov
xor
clc
pop
cld
icebp
adc
aad
mov
adc
jnp
adc
pop
inc
das
lds
out
lods
mov
das
vpaddd
enter
nop
popl
stos
push
cmpsl
pop
neg
jmp
or
mov
out
pop
cmc
mov
fwait
push
push
mov
jp
pop
stc
push
pop
pop
das
jmp
jno
adc
sub
sbb
rorb
mov
das
mov
in
mov
out
and
dec
pop
pop
cmp
jmp
popa
push
stos
mov
dec
mov
test
or
cld
jnp
fbstp
cmpsl
mov
dec
push
mulb
rol
jmp
gs
movsb
push
aad
or
push
inc
xor
das
jmp
add
jge
dec
xchg
and
and
add
pusha
or
pusha
ret
test
outsb
ret
dec
pop
shrb
and
scas
repnz
out
add
mov
push
inc
add
pop
and
daa
and
adc
stos
jle
je
outsl
cld
dec
push
shl
adc
out
xchg
fidivrs
jb
jmp
mov
das
mov
dec
out
cmp
sub
or
test
dec
push
jl
into
cli
mov
mov
out
sub
in
fadds
push
addb
daa
mov
out
in
mov
or
lods
or
bound
or
pop
pop
xchg
push
subb
inc
pop
adc
add
loopne
xchg
and
pop
push
arpl
and
insb
fdivs
push
rcrl
xchg
cld
cmp
mov
sub
mov
mov
mov
push
pop
fwait
inc
inc
in
jbe
xchg
lds
lret
or
dec
rolb
dec
adc
mov
jmp
adc
int3
inc
jge
pop
orb
lods
testl
add
xor
cmpsl
pop
test
loop
xor
int3
sub
or
jno
mov
cltd
das
mov
call
imul
sbbl
jp
adc
xchg
sbb
pop
jns
inc
or
into
dec
inc
das
sub
push
out
outsb
mov
andl
add
loope
in
mov
pop
test
in
cmc
jbe
and
or
or
popf
repz
aas
dec
gs
das
sti
jge
mov
and
shr
adcb
mov
push
shrb
pop
jmp
mov
je
jo
mov
and
xchg
pop
adc
push
dec
data16
mov
push
bound
jmp
mov
pop
adc
mov
data16
adc
xor
lcall
stc
adc
not
and
dec
or
mov
inc
cmpsb
cli
adc
push
sbb
cmc
dec
fcoml
and
cmp
xor
loop
ret
mul
pop
jnp
addb
mov
es
aam
push
sbb
xchg
adc
paddw
jno
std
pushf
inc
mov
fisttpl
or
jb
push
jae
loop
shr
push
inc
das
push
je,pn
sub
or
ret
and
ss
call
ficompl
loop
mov
push
sub
and
dec
push
cli
sub
xor
or
pop
shr
loope
sub
and
add
scas
enter
push
sub
inc
lahf
mov
pop
mov
dec
sub
mov
repz
pcmpeqb
dec
push
push
neg
jg
or
add
aad
test
bnd
dec
push
add
popf
adc
jae
xor
pop
rorb
push
ret
mov
in
popf
or
popa
jg
or
inc
sbb
cmp
dec
in
jae
inc
jecxz
push
dec
out
daa
jecxz
into
push
and
cmpsl
inc
xchg
das
dec
js
mov
dec
pop
push
out
or
push
push
lret
xchg
std
push
inc
mov
fucomip
inc
nop
subb
or
les
or
data16
jle
pop
xor
cli
cvttps2pi
dec
addb
ss
aaa
jmp
test
adc
sub
les
pop
cs
loop
adc
filds
cmc
cmp
leave
sarb
add
addr16
cmp
mov
sub
das
loopne
insb
sbb
insl
sbb
or
jmp
add
cs
mov
and
aaa
pop
fdiv
mov
pop
push
hlt
mov
sbb
dec
push
ret
mov
mov
call
lret
sahf
stc
xor
out
outsb
cmp
and
push
jo
daa
and
out
push
xchg
loop
mov
push
scas
push
std
mov
jbe
and
pusha
or
int
add
sub
pop
or
cmp
mov
add
movb
push
pop
mov
loopne
xchg
sub
lahf
add
dec
sti
xchg
push
cli
or
cmp
mov
js
les
or
sub
das
jmp
sbb
and
mov
jmp
clc
jo
les
inc
insb
scas
xor
pop
loop
bound
ss
sub
cli
jg
or
out
lds
push
push
test
push
sbb
dec
cmp
cmpb
pop
or
movb
adc
adc
jmp
add
dec
pop
and
sarl
add
mov
arpl
cmp
and
mov
jmp
movl
sbb
test
lods
stos
or
dec
xor
sub
xchg
imul
push
lods
lds
pop
add
bound
push
adc
jb
mov
jmp
pop
push
ror
mov
or
out
xchg
lods
into
add
das
adc
jne
shl
daa
dec
dec
pop
mov
pop
and
lret
inc
jmp
add
adc
mull
divl
loope
lods
pop
movsb
mov
scas
popa
or
inc
dec
sbb
inc
mov
xchg
in
addr16
sub
call
jb,pn
imul
push
sbb
repnz
push
cmp
aas
add
test
push
xchg
mov
popf
fisttpll
leave
inc
ljmp
cmp
pop
jae
shrb
pusha
jb
push
jmp
push
push
or
xchg
dec
lock
es
cmp
jmp
add
out
push
mov
add
jle
es
jle
or
es
mov
add
add
push
fsubrs
xchg
push
adc
daa
adc
add
divb
adc
dec
push
jmp
fisttpll
and
cmp
mov
outsl
imul
xlat
sbb
cmp
shl
pop
add
push
push
adc
or
lock
add
xor
dec
pop
lahf
dec
jle
test
or
cmpb
rcr
and
not
mov
and
aad
and
jmp
shl
clc
repz
jo
pop
jae
inc
sub
inc
and
les
pop
repnz
mov
adcb
popf
cmp
lods
in
sahf
push
xor
push
sub
push
mov
ljmp
push
mov
jmp
dec
pop
sub
mov
int
sbb
lds
pushf
test
jl
jp
movsl
jns
pop
jmp
stos
cmp
jne
sbb
sub
sbb
inc
xor
or
dec
xchg
adc
jl
and
movsb
cli
pop
cmc
js
adc
pop
or
mov
loopne
lret
rcll
jmp
inc
mov
es
or
mov
xchg
push
clc
orb
std
mov
and
out
jle
inc
push
push
pop
jmp
lods
in
mov
mov
or
mov
add
popf
adc
adc
pop
push
pop
xchg
in
scas
or
inc
jp
enter
addb
addl
adcb
popf
add
add
add
xchg
popa
jb
imul
sbb
out
je
icebp
repnz
lcall
add
das
add
dec
pop
mov
inc
push
dec
ljmp
adc
shll
loopne
adc
dec
ret
daa
xchg
fs
cmp
ja
repnz
ljmp
notb
push
loop
call
xchg
in
and
or
push
push
out
adc
sbb
cmp
xchg
scas
push
dec
mov
xchg
pop
sahf
sub
pop
push
jns
pop
push
lods
or
xor
cmp
add
mov
adc
or
cmp
clc
add
inc
pop
outsl
daa
sbb
loop
push
xlat
xorb
mov
xor
mov
push
push
xor
loopne
mov
cmc
andb
pop
xor
nop
lods
shll
loop
jmp
std
pop
adc
addps
outsl
pop
adc
fdivrl
push
je
jmp
cwtl
mov
or
adc
cmp
out
or
add
icebp
jnp
add
arpl
add
inc
dec
pop
pop
pop
and
fcomp
mov
das
ret
cld
call
loope
add
sahf
dec
pop
mov
mov
repz
nop
je
or
cmp
dec
jbe
imul
add
hlt
fwait
and
inc
push
mov
ljmp
and
jl
adcl
out
ljmp
mov
mov
lods
push
cmpsb
clc
dec
xchg
pop
cmc
pop
or
sub
pop
xchg
xlat
cmp
daa
sub
outsl
adc
pusha
in
and
aas
imul
mov
mov
shlb
dec
outsb
cs
mov
pusha
dec
lcall
mov
pusha
mov
jmp
bound
iret
out
adcl
pop
js
clc
jg
pop
jmp
mov
or
jle
and
mov
cli
out
and
ja
lahf
adc
jno
into
or
loope
jl
std
shr
les
sub
mulb
cmc
push
jnp
loop
fcmovnb
push
xor
and
arpl
or
int
pop
neg
sub
xor
fbstp
pop
clc
repz
push
mov
cmp
pop
mov
das
mulb
aam
les
sbb
mov
push
inc
cwtl
insb
je
aad
scas
sub
test
cmp
jge
movsl
ds
out
orb
mov
dec
sub
cld
dec
sbb
daa
jp
loop
mov
retw
leave
jne
jp
mov
pop
pop
push
sub
adc
test
mov
lret
fists
jecxz
movsl
pop
aad
jmp
clc
mov
sbb
clc
mov
jnp
or
add
or
out
mov
aad
jno
mov
push
popf
inc
fisubrl
or
xlat
mov
sti
aad
jo
test
push
pushf
bound
jmp
xchg
mov
fldcw
les
sub
in
addb
sbb
icebp
mov
and
pop
push
gs
dec
daa
fisubl
push
mov
push
icebp
popa
bound
rorl
push
jmp
inc
cmp
dec
ljmp
sbb
cmp
popa
push
mov
fists
xchg
arpl
xchg
push
sti
push
add
xor
cwtl
push
cwtl
jo
subl
push
repz
popl
pop
sub
cmpb
add
adc
ds
push
out
sub
and
mov
aas
dec
pop
je
xchg
call
add
out
data16
add
fiadds
add
push
sub
mov
rorb
add
in
lock
add
pop
rcl
xchg
lcall
mov
cmpsl
dec
push
fadds
aaa
xor
sbb
in
out
arpl
test
add
xor
ret
mov
mov
push
push
jmp
jecxz
imul
sbb
loop
mov
arpl
cmp
inc
add
xchg
jle
mov
nop
jo
pop
push
mov
mov
add
not
dec
cmc
dec
cld
push
add
xchg
or
cwtl
dec
enter
cwtl
mov
push
mov
inc
loope
push
cmc
inc
int
cmp
dec
fisttpll
jg
jecxz
loop
lahf
out
adc
shr
insl
and
jo
pop
or
call
xor
cmp
mov
sub
or
dec
mov
jbe
xchg
mov
cmpps
inc
adc
stc
cmpsl
lcall
icebp
adc
add
cmp
idivb
jl
push
loop
push
pop
out
adc
ds
lods
xor
pop
rcrb
inc
add
insl
ret
hlt
push
jbe
jmp
jle
xor
je
jne
loope
mov
orl
pop
lds
add
mov
fnstsw
or
daa
push
sbb
cmp
loopne
jne
lret
int
icebp
sbb
iret
lret
imul
push
or
cmp
pop
mov
inc
xchg
and
pop
scas
pop
mov
adc
xchg
dec
mov
hlt
and
ljmp
pop
mov
or
sbb
jle
xor
les
push
dec
loope
mov
add
jp
jb
push
cmp
mov
jmp
pop
push
jmp
rcrl
jmp
cmpsl
out
jl
push
sbb
or
xor
mov
sbb
xor
dec
rclb
sbb
popa
ja
sub
mov
pusha
mov
mov
and
and
dec
add
xor
jp
or
cmpsb
or
or
mov
adc
jae
push
add
and
sbb
xchg
dec
in
push
clc
out
pop
push
or
xchg
stc
sub
jb
test
dec
push
mov
mov
js
mov
mov
lret
jmp
sbb
sub
pop
push
hlt
call
sbb
pop
fmuls
pop
pop
adc
sub
nop
push
push
pop
mov
and
or
sub
push
jb
shlb
cwtl
push
push
nop
xor
cli
mov
mov
popa
or
pop
inc
pushf
lods
mov
fwait
std
pop
loop
and
jae
popa
sub
lock
xorl
push
pop
inc
add
sbb
int3
xchg
scas
icebp
andb
jo
mov
inc
repz
jne
imul
fs
fsubrs
out
push
leave
sbb
fwait
scas
cwtl
and
testl
aad
repz
dec
push
add
inc
or
andb
jle
xchg
sub
jge
repnz
push
je
sub
add
xor
add
les
adcb
std
aaa
add
pop
jmp
mov
mov
call
fcoms
into
mov
mul
dec
xor
test
push
ds
inc
mov
push
push
jge
pop
dec
out
and
pop
or
faddl
repz
clc
pop
sub
or
mov
shufps
lods
jge
jo
pop
lea
lret
stos
or
dec
cmp
push
xor
bound
add
repz
push
enter
pop
mov
retw
push
xor
adc
mov
andb
test
pop
rol
das
stos
jge
cli
push
in
cmpl
add
out
adc
pop
test
sbb
rolb
les
and
dec
adc
pop
dec
mov
or
dec
lock
cmc
add
loop
loopne
mov
cmp
fistl
push
cmpsl
cmp
push
imul
pop
xchg
gs
std
cmp
addr16
fcompl
loop
pop
adc
dec
mov
jmp
aam
push
daa
fs
sarb
imul
dec
ds
sub
inc
fcomi
lret
test
cli
popa
and
xchg
pop
add
es
cli
fldenv
or
nop
and
addl
push
out
aas
pop
fidivl
je
add
cld
lods
xchg
cmc
outsb
addl
lea
push
xchg
pop
xlat
xchg
clc
daa
fcoms
lret
ds
jge
cli
imul
int3
mov
pop
out
add
rcr
cli
jno
add
jmp
mov
pusha
or
dec
daa
add
in
or
test
das
pop
push
cmp
jmp
cmp
test
popa
adc
cmp
xchg
rclb
or
sbb
xor
sahf
adcb
shrl
in
sbb
sub
mov
jge
rol
out
mov
inc
inc
adc
test
das
sub
dec
push
jno
add
add
cmc
dec
cld
or
repnz
mov
xchg
and
cmp
les
stos
cmp
push
fwait
pusha
test
or
mov
or
pop
mov
or
adc
in
jmp
mov
dec
shrb
or
jp
arpl
je
dec
xchg
push
add
aas
adc
inc
sti
add
add
sub
jmp
or
neg
rorl
fucom
mov
jmp
push
cmc
sub
pop
outsb
into
xor
fldl
pop
roll
push
jl
sar
jp
sbb
pop
lahf
cld
testl
test
insb
int3
mov
dec
cmpsb
xor
lds
ljmp
add
mov
add
sar
adc
add
aad
ljmp
and
fstpl
mov
push
inc
in
ja
jne
stos
xchg
add
xor
push
push
lods
les
std
or
jae
sbb
jmp
cmp
sub
add
repnz
stc
jmp
imul
add
and
inc
cmp
shr
pop
inc
je
push
outsb
call
add
pop
ss
or
or
addr16
shrb
add
fstl
pop
enter
xor
cmp
lret
or
mov
or
inc
add
cs
repz
leave
ds
jno
or
imul
sarb
nop
test
push
and
push
add
and
sub
and
cli
aaa
out
ja
ret
mov
aam
or
pop
fldl
fldt
icebp
jb
and
mov
int
pop
push
mov
xor
fbstp
pop
hlt
shrb
dec
outsb
stos
sbb
inc
loop
lock
rcll
dec
cld
int3
add
add
or
mulb
add
jg
mov
push
jmp
orb
inc
sbb
pop
das
jle
jo
sbb
inc
in
mov
push
adc
cmp
nop
or
lods
js
in
inc
shl
jnp
arpl
rcll
out
test
push
popf
daa
inc
jge
into
notb
pop
adc
and
add
push
pushf
adc
add
sbb
scas
out
or
ret
roll
rcl
mov
fisttps
mov
sub
sbb
adc
ret
out
mov
push
pop
stos
repz
movsb
insl
shll
lock
mov
enter
mov
cmp
pop
dec
pop
and
mov
pop
pop
aas
xchg
add
push
cs
sbb
fldcw
js
pop
or
jnp
pop
jge
pushf
or
pushf
bound
mov
mov
rclb
or
outsl
xor
or
addr16
daa
popf
or
add
addr16
and
xchg
cltd
add
cli
or
mov
xorl
aad
mov
add
jmp
push
mov
jmp
pop
push
movsb
add
sbb
rolb
and
pop
pusha
push
cmp
out
xor
outsl
jl
rclb
inc
sahf
xor
inc
mov
sub
loopne
jmp
cli
push
test
cmp
adc
lock
lods
jge
stos
mov
icebp
or
not
or
add
mov
and
dec
loop
int
mov
pop
pusha
shl
repnz
or
sub
dec
arpl
out
sahf
inc
and
inc
xchg
fimull
repz
or
mov
adc
lea
loopne
cmp
in
pusha
dec
lock
pusha
mov
jg
xor
add
add
hlt
in
push
jg
test
adc
sub
pop
sub
pop
shrb
mov
das
out
add
xor
pop
mov
pusha
negl
mov
sbb
mov
adc
mov
cmp
bound
dec
xchg
or
cld
sbb
add
inc
leave
sbb
imul
shrb
xchg
xchg
scas
gs
test
dec
addl
mov
stos
movsb
out
adc
hlt
bound
rorl
inc
out
mov
jno
pop
adc
les
ret
adc
imulb
ljmp
push
fwait
ret
pop
sub
mov
cmc
outsb
cmp
hlt
mov
jno
les
dec
clc
sub
mov
or
test
das
sub
or
cmp
and
rorb
xchg
mov
mov
sub
mov
sub
lret
je
push
addl
xor
sbb
mov
aas
nop
sbb
jmp
xchg
mov
pop
fadd
jmp
push
push
add
sub
adc
arpl
push
cmp
inc
cmc
pop
and
xchg
pop
pusha
shl
call
and
push
mov
cmpsl
push
cmpsb
add
or
shr
outsb
mov
mov
jmp
inc
roll
xor
jecxz
neg
xor
mov
daa
push
cmp
add
push
add
pop
ljmp
icebp
es
dec
xchg
out
fcoml
loopne
sub
dec
xor
add
insb
push
test
or
stos
xlat
movsb
adc
push
lds
push
adc
cwtl
xchg
les
mov
push
push
es
inc
mov
and
push
or
mov
test
ficoms
lret
or
sub
hlt
nop
push
jp
inc
push
leave
or
ljmp
xchg
stos
sbbb
mov
test
repnz
jp
pop
mov
clc
or
inc
loope
insb
ds
loope
inc
popa
cwtl
fidivrl
popf
pop
ja
inc
hlt
jb
mov
mov
fisubl
mov
and
adc
mov
in
xor
push
jmp
cmp
xor
in
xlat
cs
jnp
push
push
xchg
jl
add
pop
out
xor
mov
shlb
clc
pop
stos
sub
sub
dec
jnp
or
sub
push
jbe
mov
sub
into
negw
pop
push
jbe
add
adc
dec
jmp
adc
fdiv
mov
push
negl
sub
push
add
hlt
sbb
or
push
jecxz
int3
insb
jp
sub
dec
or
pop
inc
add
add
int
mov
push
adc
jmp
add
xor
add
daa
jl
push
enter
leave
cmpsb
cmp
push
fists
xor
jb
and
loopne
inc
sub
cli
xor
jmp
jne
push
imul
mov
cli
add
cmp
cs
sti
mov
push
xchg
push
ljmp
daa
pop
movsl
sbb
pop
pop
lret
add
orb
cs
jmp
lret
fistl
xor
jle
add
jecxz
and
jg
xor
or
inc
push
xchg
or
jmp
in
sbb
fs
and
or
sarb
enter
leave
jge
aad
movsb
or
scas
mov
and
jl
ds
dec
xor
mov
sbb
mov
repnz
jle
pop
mov
pop
mov
cltd
jg
outsl
jnp
dec
bound
stc
insb
popa
push
or
rcrl
inc
mov
dec
fimull
out
nop
pop
xor
dec
add
mov
test
je
fwait
imul
or
fistps
xchg
fadds
fsqrt
stos
pop
mov
sbb
ja
orb
xor
pop
test
pop
int
loopne
push
and
mov
cmp
fbstp
mov
adc
divb
inc
mov
pop
add
inc
mov
daa
pop
jmp
jecxz
shrl
add
mov
mov
stc
bound
sarl
inc
das
mov
inc
inc
aad
jo
ret
adc
fstps
sub
sbb
xchg
scas
loope
jnp
outsl
mov
adc
mov
xor
mov
scas
and
jg
cmc
in
in
push
mov
push
call
clc
inc
in
das
add
jle
scas
cmc
mov
push
sub
and
add
and
inc
dec
xchg
xchg
and
rclb
or
call
mov
jmp
out
pop
out
mov
dec
in
or
push
sbb
jb
popf
sti
arpl
sub
iret
pop
ja
inc
cmp
mov
sti
pusha
lds
sub
rorb
fimull
je
push
mov
inc
adc
loop
aas
jmp
cmc
xchg
movsb
mov
dec
pop
pop
shlb
jb
xchg
jns
iret
push
adc
cmp
and
ret
mov
inc
push
call
aas
testl
movsb
mov
int
fs
sub
gs
inc
stos
rcrb
xorb
ret
out
push
mov
jmp
loopne
ror
loope
add
sub
jle
pop
mov
pop
jmp
test
inc
cs
add
pop
std
and
mov
out
jb
push
xor
jnp
xchg
dec
sbb
lds
cs
sub
mov
inc
jnp
ficoms
lret
mov
dec
daa
sbb
push
sbb
and
mov
jbe
pop
mov
roll
inc
shl
sbb
lcall
mov
and
add
mov
sarl
dec
out
rol
xchg
add
sub
popf
or
add
pop
push
jo
jno
cmp
cmp
push
repz
jmp
xlat
cltd
add
sbb
daa
movsb
pop
movsb
push
out
pushf
adc
push
xor
jmp
ljmp
push
add
pushf
jmp
dec
js
das
push
push
sarl
insl
add
adc
xchg
lret
ret
push
dec
into
out
sbb
arpl
sbb
imul
pop
mov
dec
stos
lret
dec
xor
mov
repnz
push
out
test
jmp
push
push
push
sahf
movsb
fwait
inc
cmpb
xchg
loop
aam
add
in
sbb
ja
xor
inc
das
stc
sub
lods
les
xchg
dec
test
jg
inc
or
cmp
mov
and
mov
and
flds
inc
and
jae
add
dec
mov
add
and
xchg
fdivrl
movsl
popf
shlb
xlat
or
pop
cwtl
aas
push
scas
dec
mov
mov
repnz
push
adc
out
shr
pop
jle
cwtl
loopne
push
sub
cmc
adc
ja
cmp
pop
cmc
mov
iret
inc
adc
sub
stc
pop
push
mov
imul
gs
xorb
cmp
test
int
int3
in
sbb
daa
call
lds
mov
out
ja
andb
fwait
fs
and
pop
out
sub
mov
pop
mov
int
scas
and
mov
ret
divl
dec
jecxz
incl
fstpt
pop
imul
in
daa
ljmp
int3
push
or
xor
idivl
in
mov
jne,pn
or
cmpb
les
scas
icebp
dec
adc
cmc
xor
sub
sbb
pop
cmc
xchg
add
daa
pop
jg
dec
add
dec
ror
push
inc
adc
fnsave
push
mov
dec
shlb
into
adc
or
xchg
mov
xchg
push
pop
es
add
stos
jnp
out
sub
add
push
ror
sub
xor
popl
roll
stc
cli
int3
imul
inc
hlt
sub
sarb
xor
fcomps
mov
mov
leave
rorl
sub
insl
movb
test
push
aad
sbb
mov
int
or
and
pop
jmp
push
inc
xor
push
in
push
adc
jge
pop
push
add
outsb
pusha
xchg
mov
mov
add
push
test
jmp
rcrl
dec
add
insl
lea
inc
inc
bound
mov
lds
add
cwtl
pop
pop
repnz
sub
hlt
scas
mov
add
cmp
bound
cmpsb
fwait
dec
push
lds
cmpsl
enter
cs
or
pop
cld
adc
jns
sub
pop
push
sub
shll
jo
mov
dec
and
inc
sbb
jl
push
pop
xchg
cmpsb
sbb
in
jle
sub
or
add
pop
mov
jb
icebp
push
in
add
inc
imul
incb
pop
add
jns
call
add
xor
stos
and
lret
je
jne
inc
pop
dec
movsl
incb
pushf
call
and
pop
rcrb
out
bswap
popf
lock
inc
mov
cwtl
rclb
mov
push
or
mov
dec
in
lahf
sarl
add
jne
inc
pop
push
push
add
jmp
rorb
stc
fucomi
les
jnp
dec
test
jns
stc
out
xchg
mov
xchg
pushl
push
fucomp
jle
mov
pop
pop
xchg
stc
stos
sub
adc
cld
pop
das
push
push
ret
cmpsl
mov
icebp
push
test
adcb
jae
sub
mov
or
or
sbbb
add
mov
bound
aad
in
jmp
shl
leave
push
aad
lock
xchg
inc
push
mov
shrb
fsubrs
ljmp
adc
mov
mov
dec
sub
pop
pop
stc
adc
pusha
adc
out
and
int
pop
jge
push
mov
pop
pop
mov
lds
enter
mov
or
mov
jno
lock
in
daa
pop
sbb
mov
imul
push
sbb
ds
push
sub
mov
add
leave
out
sub
push
mov
xor
inc
jp
pop
daa
add
mov
jg
dec
push
xchg
data16
dec
and
add
icebp
mov
jmp
mov
or
cmp
pop
testl
lock
pop
std
add
and
daa
or
fcomip
test
ljmp
aad
add
or
jne
sbb
adc
scas
enter
xor
pop
mov
xor
sbb
pop
mov
mov
and
lods
test
dec
scas
into
aaa
adc
xchg
push
push
mov
not
cmc
mov
ljmp
or
je
vpsubusw
and
repnz
std
inc
call
push
mov
push
dec
mov
push
add
xchg
fcoms
or
pop
rcrl
add
mov
or
iret
inc
jecxz
xchg
push
or
call
or
imul
shlb
xor
das
mov
jae
mov
push
mov
jmp
nop
xor
and
mov
add
sahf
jo
push
repz
sbb
dec
add
pop
sub
insb
inc
jo
fcompl
call
and
jmp
and
or
xchg
mov
dec
test
sti
lret
sub
nop
mov
jns
shr
add
xchg
xor
mov
pop
cmc
xchg
pop
push
out
fbstp
leave
aad
push
mov
adcb
loope
std
and
inc
pop
lret
push
loopne
pop
call
mov
sbb
jmp
out
mov
jg
push
add
and
movsb
and
and
add
stc
lock
mov
lods
push
adc
push
cmp
imul
mull
outsl
aam
sbb
jmp
movsb
or
ja
xor
std
xor
es
testb
gs
inc
loop
jg
or
pop
jmp
sbb
cmp
pop
sub
popf
shll
pop
cs
mov
push
lcall
xor
fs
loop
int3
push
jnp
jo
or
add
add
sub
xor
or
jno
inc
jmp
incb
ss
cwtl
dec
add
sub
cmpsb
popa
pop
jmp
sbb
into
jb
stc
and
add
push
lock
rcl
sub
es
sub
push
rolb
push
out
pop
push
xorl
mov
movsb
divl
adc
inc
mov
andb
sub
popf
cmp
inc
dec
out
dec
adc
rcll
inc
jp
mov
aaa
nop
roll
xor
arpl
xchg
leave
andb
outsb
cmp
stos
mov
inc
jbe
fldt
and
xchg
mov
fst
testl
or
stos
cmp
cli
mov
loopne
dec
cmp
ret
push
lods
adc
fldl
mov
mov
add
jmp
out
loopne
push
dec
js
cmpsl
idivl
ret
pop
clc
push
test
cmc
add
xor
insb
pop
std
je
jmp
dec
in
adc
xchg
in
das
fldt
push
adc
inc
lods
jp
sub
into
pop
adc
test
mov
mov
test
xchg
xchg
sbb
dec
push
sub
sbb
out
ret
adc
iret
xchg
pop
push
xlat
nop
outsl
jge
cmp
jns
out
xor
xor
push
cmp
sub
sahf
out
add
jmp
mov
repz
xor
sub
or
jmp
xlat
add
sarb
xor
test
jecxz
jno
mov
add
fsubl
or
insb
fwait
add
cmc
imul
mov
add
outsb
push
xor
push
mov
outsl
shl
loopne
out
std
jb
add
sti
out
test
pop
cwtl
adc
sub
andb
mov
out
jb
daa
rorb
dec
mov
add
cmpsl
sti
mov
pop
jmp
jne
push
insb
and
mov
mov
in
popf
xor
cltd
xor
mov
sbb
jmp
inc
mov
dec
xor
dec
cwtl
cmp
lea
aad
test
std
and
pop
push
mov
add
int3
xchg
outsb
inc
dec
pop
cld
jl
pusha
adc
mov
in
adc
xor
add
fucompp
hlt
lret
mov
sar
push
add
fiaddl
ss
ss
mov
out
lret
cmp
dec
sbb
sub
jle
fs
pop
or
sub
cwtl
cs
jns
xchg
jnp
cmpsb
pop
pop
jmp
lahf
out
cmpsl
push
mov
mov
nop
mov
sub
push
rcrb
imul
sbb
clc
mov
insb
push
mov
add
testl
push
loopne
jmp
mov
pusha
out
xchg
adc
fucomip
mov
pop
out
and
cmpsb
pop
lds
je
push
test
mov
sbb
idivb
dec
xchg
pop
les
in
push
jmp
push
into
jle
pop
ud0
in
or
or
sub
dec
and
jmp
or
mov
popa
call
repz
adc
in
pop
pop
jne
adc
mov
mov
ds
add
jge
shl
shrb
scas
add
pop
xor
mov
push
jmp
mov
dec
cmp
pop
jge
call
js
inc
lods
adc
jmp
sub
push
lea
ret
push
xor
dec
add
mov
sbb
rorb
daa
fwait
movsb
leave
ja
clc
mov
sub
das
lret
add
inc
dec
pop
jmp
add
inc
sbb
or
inc
xor
cmp
push
pop
movsb
and
ret
icebp
pslld
and
shr
scas
lods
cmp
mov
loopne
jb
or
inc
std
dec
cmp
mov
ja
test
mov
out
movsb
add
ficomps
fucomi
mov
pop
movsl
adc
pop
or
sub
ljmp
mov
stos
imul
push
fisubrl
pop
add
lods
pop
pop
mov
push
js
push
popa
inc
jno
or
dec
or
imul
ret
pop
mov
inc
fisubl
das
int
push
jg
cmp
xchg
adcb
call
pop
orl
push
xchg
sub
jb
fimull
or
mov
push
adc
mov
sbb
leave
lret
in
das
mov
and
mov
inc
daa
and
shrb
imul
dec
mov
sbb
imulb
xlat
aas
loope
jp
and
bound
sub
or
popa
outsl
xchg
jmp
push
mov
imul
add
sbb
imul
xchg
mov
in
test
xor
mov
imul
push
adc
adc
popf
scas
cltd
aaa
inc
stos
shll
cmp
inc
in
jge
loope
stos
sub
negb
sbb
jbe
das
inc
xchg
das
dec
add
arpl
xchg
gs
push
lock
dec
or
sub
xchg
not
das
or
push
push
mov
lret
push
adc
add
sti
push
mov
stc
ja
xchg
out
out
ret
add
xchg
call
jno
rorb
xlat
add
dec
jmp
stos
jmp
mov
mov
sub
ja
and
or
shl
push
add
xor
xor
out
mov
popf
lods
cmp
popf
xor
cmp
insb
sbb
lret
jns
sub
in
xchg
loop
lret
shlb
fmull
in
dec
dec
dec
lods
cwtl
shrb
push
xchg
fwait
mov
cwtl
es
call
gs
sub
int
idivl
mov
pop
es
xor
mov
scas
repnz
mov
push
mov
inc
orb
sbb
push
mov
xor
add
jmp
mov
sub
fsubr
or
adcb
hlt
adc
outsb
add
dec
cmp
adc
je
dec
mov
enter
push
in
or
or
out
mov
push
test
push
push
int
and
add
push
push
cli
das
hlt
inc
movsb
int3
lret
add
mov
je
lea
iret
or
xor
imul
insl
aad
in
punpckhdq
xor
jl
dec
scas
jg
push
ja
or
cmp
pop
movsl
sub
xchg
in
push
sbb
pop
lcall
xchg
or
jmp
mov
xchg
stos
mov
shl
mov
in
orb
add
rcrl
fldcw
pop
inc
lods
repz
sub
out
scas
fidivl
push
pop
ljmp
mov
sbbb
or
aam
xor
aaa
push
jmp
icebp
add
dec
push
xor
mov
cmp
push
aam
aam
in
add
std
sub
adc
pop
push
add
jb
xor
scas
vpsubd
pusha
sbb
or
xor
pop
ds
hlt
add
fmuls
adc
inc
mov
loop
push
push
push
cli
push
mov
stos
pop
mov
ds
jle
sbb
dec
push
shrb
adc
push
pusha
pop
jl
cmp
dec
aad
pushf
in
loop
clc
push
mov
add
pop
and
clc
fcmovb
lea
adc
cwtl
out
pusha
pop
or
xchg
shl
cmp
sub
pop
ret
add
mov
into
lret
mov
lahf
cld
hlt
inc
mov
jle
xor
push
jno
jne
je
push
or
or
shlb
sub
orl
imul
cmc
arpl
loopne
fucom
cs
sub
and
push
cmp
jle
jb
or
or
lds
add
in
arpl
mov
enter
sub
jmp
sub
pop
loope
mov
lret
ljmp
icebp
jnp
xor
xor
and
fcmovnb
fidivs
iret
mov
cltd
or
mov
mov
add
sub
dec
jno
xchg
push
pop
push
mov
in
repnz
dec
mov
pop
jnp
add
in
insb
std
test
push
sub
aam
dec
mov
dec
jo
dec
jle
or
stc
jmp
cmp
push
mov
or
jbe
push
incl
sbb
std
ja
cwtl
data16
push
dec
addb
push
neg
dec
inc
icebp
sbb
sub
cmpb
dec
scas
adc
lea
push
test
xchg
jmp
jne
xchg
stc
pop
shr
push
mov
adc
cmp
mov
orl
sbb
sub
xor
sbbl
lea
xchg
xlat
enter
fwait
dec
fstl
jmp
lahf
push
out
notb
popa
jmp
popf
leave
mov
jo
add
push
push
mov
mov
cmpl
add
jl
mov
sbb
cmp
ficomps
inc
adc
or
lds
mov
clc
pop
cmpsl
sub
xchg
ja
jge
sub
sahf
pop
xchg
mov
and
iret
sub
jmp
mov
lret
fbld
insl
push
cmc
push
push
jmp
repnz
imul
inc
mov
in
push
inc
jl
daa
fs
cs
or
mov
arpl
ljmp
push
push
jb
je
or
iret
into
sub
ljmp
and
push
inc
jg
and
lods
ja
or
push
pop
pop
enter
adc
nop
cmc
mov
mov
sbb
cmp
dec
clc
jle
add
in
jp
fdivs
lahf
inc
and
aam
pop
pop
data16
cli
into
rcrb
mov
inc
scas
push
stos
add
sub
push
pop
cltd
mov
push
test
add
cmp
cmp
or
pop
sub
sub
call
mov
cmp
inc
cmp
mov
int3
cwtl
jnp
mov
sbb
adc
sub
sahf
fldenv
test
dec
pop
mov
push
mov
sub
fld
sub
rdpmc
ds
dec
les
call
loop
adc
aas
xor
test
ficoms
lock
adc
aaa
imul
and
add
das
mov
dec
sub
enter
push
pusha
fidivs
in
dec
pop
movsl
andb
inc
pop
inc
mov
mov
scas
add
jnp
inc
outsl
out
jle
jns
lods
sbb
jbe
loope
out
mov
xor
test
ja
mov
dec
dec
jl
or
add
push
cwtl
push
add
add
outsl
mov
mov
pop
mov
fiadds
or
xor
jmp
mov
insb
ljmp
mov
push
jmp
imull
rorl
jo
xchg
add
in
pop
dec
jmp
mov
or
pop
testl
enter
cmp
push
jp
imulb
clts
mov
out
pop
pop
pop
sub
enter
pop
xor
mov
lret
popf
mov
test
jge
mov
lcall
xlat
sahf
imul
ss
cmp
pushf
cli
sub
lea
and
push
add
adc
adc
imul
ja
inc
jmp
lcall
outsb
mov
mov
jnp
push
scas
das
sub
cltd
jb
aaa
std
inc
jnp
adc
lahf
add
push
sbb
jmp
cld
out
adc
sti
lret
iret
in
aad
out
lahf
push
dec
es
mov
in
dec
adcb
cld
mov
jne
sub
push
add
and
jle
and
cli
lock
cmp
inc
not
inc
fiaddl
mov
pop
push
jmp
fbstp
add
adc
pop
sub
scas
and
and
test
dec
cli
sub
and
imul
sbb
inc
daa
jge
xchg
mov
inc
sbb
mov
push
jo
add
rorb
pop
repz
ficompl
mov
and
lock
popf
jnp
inc
notb
enter
jno
and
and
cmp
cmp
jl
sbb
jg
testl
adc
add
dec
sbb
pop
movsl
mov
jecxz
out
add
pop
dec
push
lahf
dec
lods
or
xor
push
push
push
add
sub
mov
dec
mov
jp
inc
and
mov
loop
inc
inc
lahf
xor
pop
ljmp
xor
pop
jp
cmp
jle
push
push
xchg
xchg
dec
mov
mov
push
jge
icebp
faddl
popf
push
adc
ret
in
and
sub
aad
insl
pusha
insb
std
push
adc
mov
push
scas
lahf
mov
push
xchg
fsubs
dec
jne
sbbb
jmp
shrb
xchg
fabs
dec
fimuls
movsl
aaa
mov
jl
and
pusha
or
mov
inc
fcomip
cltd
jle
ds
lock
mov
cli
push
jle
nop
xchg
cwtl
jge
ret
outsl
jmp
sub
stos
pop
pop
xor
jl
mov
into
push
inc
xchg
mov
ss
mov
add
das
cwtl
adc
mov
mov
test
or
pop
xor
or
dec
or
or
cmp
xchg
or
insb
xchg
bound
push
cmpsl
cwtl
add
or
jp
or
andb
iret
setb
jmp
addr16
adc
jmp
xlat
pop
push
push
push
dec
push
pop
inc
cli
inc
out
xchg
mov
jbe
out
xchg
pop
rcr
and
dec
popa
xorl
and
dec
add
jae
adc
add
push
mov
and
jne
insl
movsb
fstl
or
pop
mov
pop
sub
data16
setge
rclb
add
push
mov
xor
ljmp
ljmp
add
pop
push
stc
push
mov
stos
loope
cmp
outsb
push
push
test
xchg
jg
xchg
lods
add
out
dec
in
aam
jg
add
jge
inc
inc
xor
and
add
test
or
pop
cmc
sahf
jns
jmp
push
xchg
push
adc
push
shl
pop
xor
scas
sub
jo
pop
pop
stos
cmp
inc
cwtl
hlt
test
add
ret
sbb
insl
movsl
cltd
icebp
inc
sti
push
adc
inc
jae
ljmp
daa
mov
sub
mov
push
jle
xor
scas
stos
mov
lods
push
inc
dec
sub
iret
es
push
xchg
xor
jnp
cltd
mov
cmpsb
popa
xlat
repnz
and
jle
dec
inc
xchg
and
jo
scas
cld
popa
sahf
dec
jbe
adc
mov
push
mov
hlt
mov
es
add
into
jae
and
popf
jmp
sbb
xor
jo
xlat
sub
jno
push
aam
pop
mov
dec
les
repnz
xchg
clc
lods
adc
jmp
lods
mov
jmp
rorb
nop
das
inc
mov
or
dec
cld
and
cmpsl
jns
cmp
in
leave
or
xlat
xchg
lods
and
pusha
sub
push
add
push
push
mov
addl
pushf
push
sub
push
dec
sbb
dec
jmp
lock
popa
or
mov
mov
mov
cmp
ljmp
add
loop
dec
inc
add
arpl
pusha
adcl
loop
pop
adc
dec
popa
jp
imul
das
ja
jg
sub
aas
jge
shrl
aaa
dec
fmul
or
sbb
adc
jg
ficoms
dec
push
pop
nop
icebp
add
push
mov
xor
pop
rorb
add
push
sti
mov
cmpb
jecxz
scas
push
push
lahf
icebp
popf
loope
pop
mov
dec
cld
js
cs
xchg
sarl
push
das
ljmp
or
in
pushf
xchg
pop
jmp
add
push
aad
outsl
ja
int
rclb
dec
dec
jp
lea
cmp
ss
jl
add
cwtl
or
out
test
push
add
mov
and
push
jb
adc
stc
aaa
pop
std
dec
xchg
lret
push
pop
pop
jae
jno
popa
cmp
add
ss
sub
mov
imul
mov
stc
adc
or
jle
pusha
xchg
js
pop
jno
or
clc
or
das
push
pop
jmp
sbb
add
mov
insb
xchg
mov
loopne
andb
or
push
gs
xorb
push
je
aad
add
push
sub
daa
dec
movsb
pop
hlt
or
jmp
scas
sub
mov
jp
int3
rcrb
sbb
test
int
test
hlt
test
add
out
arpl
jne
adc
std
out
or
add
cmpsb
andb
sub
sub
lock
add
xor
jmp
out
mov
lahf
and
std
dec
sbb
add
mov
jo
in
jle
xchg
fisttps
push
fbld
leave
inc
imul
cli
addl
fs
add
into
push
loope
xor
in
xchg
out
mov
imul
mov
movsl
mov
imul
in
sub
add
jmp
or
hlt
push
sub
mov
and
cld
dec
cmp
jp
xor
fsts
popf
push
sbb
jnp
or
mov
mov
push
in
pop
sti
sbbl
aas
sub
not
jmp
sbb
out
sub
aas
and
sub
mov
out
or
pop
xchg
cwtl
sbb
ret
out
arpl
dec
xchg
fists
std
imul
xor
decl
sbb
push
ret
xchg
pop
std
jae
fs
ret
shl
pop
pop
fisttpll
xchg
test
jno
rorl
push
xchg
push
loop
add
inc
popa
dec
or
shll
fs
test
out
or
pop
push
mov
jmp
adc
dec
push
jl
mov
mov
loopne
dec
pop
sub
mov
or
pop
dec
push
mov
or
cmp
xlat
cwtl
int3
out
out
rcr
mov
jmp
shl
pop
mov
or
jmp
dec
push
out
lods
xor
xchg
and
minps
scas
jb
hlt
xchg
xlat
or
jecxz
push
std
pop
mov
push
gs
orb
dec
ljmp
push
loop
cs
jb
pop
xchg
movsb
arpl
dec
xorl
adc
inc
and
xor
stos
movsl
je
in
jmp
dec
pop
adc
aam
mov
fiaddl
mov
xor
pop
lds
pop
mov
pusha
push
insb
mov
push
cmp
pop
push
scas
test
push
xchg
notl
test
xchg
sub
call
push
mov
hlt
or
inc
jmp
or
jae
adc
jmp
mov
mov
mov
ljmp
out
stc
cwtl
decb
shl
push
test
testb
fiaddl
jl
movsl
das
xlat
ror
sub
and
out
lahf
je
js
jge
das
cmp
push
or
outsl
in
adc
jmp
std
jbe
movsb
fisttpl
push
push
add
flds
xchg
dec
cmp
or
jl
sub
xchg
sub
pop
jle
xor
push
add
or
dec
pop
or
add
jnp
pop
jg
test
inc
mov
lods
inc
loopne
out
mov
rolb
add
adc
add
push
bound
ret
dec
lret
shl
inc
pop
xor
and
and
push
add
dec
out
mov
jmp
fsubrs
lea
sarl
pop
cltd
lds
lods
jl
dec
fcomps
cmpsl
gs
adc
aam
or
push
pop
pop
push
sub
lcall
add
shrl
add
addr16
push
inc
cmp
sbb
dec
test
dec
hlt
inc
add
shrb
test
out
add
in
in
aad
loopne
or
out
testb
adc
jmp
cmp
out
pop
xor
mov
and
ret
push
cmpsl
adc
aaa
adc
inc
or
push
push
mov
push
add
in
xor
cli
dec
sbb
push
clc
or
sub
call
xchg
sahf
leave
cmp
dec
adc
inc
adc
lcall
cmp
adc
xchg
push
in
sub
rcr
cmp
das
repz
cmp
xor
es
push
das
out
pop
push
pop
pushf
nop
inc
sarl
and
shlb
fldt
add
rep
and
pop
push
mov
sub
fmul
mov
pushf
or
insl
dec
dec
jbe
dec
faddl
mov
push
cmp
mov
cmp
jmp
xor
jge
mov
mov
lods
outsb
cltd
xchg
add
enter
insl
add
mov
or
int
das
call
sbb
sub
push
jl
dec
sbb
or
sbb
movsb
xorb
fsubr
or
dec
scas
out
or
pop
pop
pop
les
jmp
pop
or
jne
add
and
push
push
lods
cmp
bound
movsl
and
negb
mov
sbb
pop
nop
hlt
inc
sub
mov
cmpsl
push
in
or
enter
cmc
fldenv
es
cmp
in
inc
gs
hlt
daa
sbb
cld
dec
cltd
inc
mov
or
dec
sub
inc
xor
sbb
call
push
pop
or
jmp
pop
pop
lock
cmc
push
mov
jns
popf
add
cmp
imul
push
mov
or
loope
das
test
sbbl
push
dec
insb
or
jl
inc
lret
pop
jbe
cmp
inc
loopne
jb
adc
inc
adc
pushl
add
or
mov
adcb
rorb
imul
inc
sti
iret
or
xchg
test
iret
outsl
mov
into
sbb
lret
xor
aad
push
pop
jmp
pusha
and
push
neg
arpl
jge
dec
scas
add
inc
lahf
iret
add
or
inc
les
pop
bnd
pushf
adc
add
mov
daa
lock
scas
hlt
mov
jb
add
dec
jno
push
mov
pop
and
enter
add
push
push
inc
rorb
out
lret
xchg
nop
xchg
jmp
repnz
mov
jg
loopne
pop
or
jp
dec
cmp
sub
xchg
push
cmp
adc
mov
cmc
or
rorl
and
push
lcall
push
pop
push
cmp
push
xchg
dec
aad
add
in
sub
push
add
repz
ficomps
sbb
jmp
insl
xchg
jmp
jo
stos
in
adc
mov
repnz
je
push
lods
imul
dec
aad
pop
gs
add
xchg
and
jno
mov
dec
bound
and
scas
jne
pop
aam
das
jbe
jno
sub
jne
ficompl
pop
jne
add
call
jmp
test
popf
push
out
sub
sbb
aad
mov
hlt
inc
lods
jne
lret
cmc
ljmp
add
pusha
fsts
sub
or
imul
xchg
jno
mov
das
std
push
lret
mov
inc
push
adc
pop
mov
pop
cltd
inc
lcall
sbb
push
dec
mov
leave
xchg
mov
jl
nop
out
lods
push
adcl
sti
or
add
out
test
sub
movsb
test
push
or
add
pop
ds
inc
jmp
pop
aam
push
arpl
in
add
mov
out
sub
sarb
out
rolb
imul
stos
mov
nop
pushf
pop
test
xchg
mov
jmp
pop
mov
or
mov
push
arpl
mov
push
jmp
push
mov
or
mov
out
sub
lods
addb
add
stos
push
ret
cmp
cmpb
sub
ret
or
pop
add
add
pop
aas
xor
or
jge
and
or
push
hlt
fidivrl
sub
pop
pop
cmp
icebp
loope
dec
cs
hlt
imul
stos
je
add
mov
testb
push
add
je
sub
inc
cmp
ljmp
and
sub
pop
jnp
dec
fcompl
mov
fildll
push
fldl
xor
cmpl
add
in
dec
jmp
jns
arpl
fisubs
outsb
out
or
cmpsl
pop
addl
add
loope
push
inc
sbb
sub
push
sub
dec
sti
fwait
add
and
int
ret
jnp
insl
dec
adc
adc
pusha
mov
fmuls
into
sub
jne
xor
lahf
jl
mov
shl
inc
jno
dec
push
test
add
and
ljmp
and
cmpsb
clc
push
sub
testb
cmc
push
mov
jg
iret
es
jmp
lock
es
dec
inc
fs
out
mov
test
dec
icebp
sbb
adc
stos
cmp
mov
imul
or
xor
and
xor
into
leave
jnp
and
inc
fisubs
ficoml
sti
or
push
inc
dec
je
leave
cmp
cmp
mov
dec
pop
sbb
pop
sub
test
scas
test
pop
or
sahf
xchg
xor
xor
aaa
dec
sbb
pusha
out
in
leave
cmp
std
push
mov
or
mov
push
loopne
pop
pop
mov
mov
add
sub
sub
pop
add
loop
fsubr
sar
loop
sti
sub
jmp
pop
mov
adc
in
jmp
mov
stos
or
push
sbb
push
testb
jmp
jmp
call
xor
cld
pop
jp
dec
cmp
jmp
ja
outsl
add
aad
jg
fcos
aas
push
shrb
sub
push
push
enter
push
cmp
xor
push
repz
lahf
or
int3
out
push
daa
xchg
mov
popa
xor
sub
add
das
das
inc
pop
or
add
sti
outsl
loope
outsb
in
les
iret
pop
jnp
and
cmp
aad
sbb
xlat
out
daa
pop
jo
mov
jo
add
adc
jp
sti
mov
pusha
dec
shr
jbe
dec
dec
mov
ret
or
adc
fstps
scas
adc
cmp
lods
pop
mov
add
and
jb
push
sub
push
jmp
stc
out
xchg
xlat
and
add
mov
and
sub
arpl
loope
sub
jmp
lods
dec
test
in
jae
push
cmc
stc
or
repz
lock
sti
mov
push
loop
push
in
xchg
lods
add
nop
push
sti
popa
push
add
add
subb
pop
sbb
jg
push
mov
mov
shl
inc
mov
mov
add
popf
sub
add
xor
sub
clc
and
in
xor
adc
xlat
mov
adc
pop
cmc
mov
pop
aad
or
jmp
pushf
push
outsl
xor
jp
pop
mov
or
jle
ror
or
pop
add
adc
in
mov
jmp
lock
ds
add
mov
mov
xor
dec
insl
scas
mov
das
xchg
scas
imul
add
pop
sbb
adc
scas
andb
pop
push
ja
mov
adc
sarl
js
add
xchg
dec
ret
fucom
mov
nop
jmp
ds
xchg
mov
std
jle
ret
push
inc
mov
add
pop
xchg
push
mov
shlb
pop
sbb
iret
gs
fnstcw
scas
mov
sarl
in
ja
or
loopne
jbe
mov
sub
ficompl
stos
jb
push
fidivs
or
div
pusha
push
mov
pushf
cmpsb
je
pop
out
mov
in
add
test
pop
sub
pop
inc
int
test
in
idivl
jg
pusha
jns
add
xlat
jge
aaa
je
insb
pop
xor
movsb
cmc
das
fcmovbe
mov
pusha
add
in
and
push
cmpsb
ja
mov
push
cltd
mov
dec
add
out
sub
or
test
add
inc
xor
or
adc
xor
or
mov
pop
lea
pop
stos
and
roll
mov
in
jmp
outsl
push
mov
sub
roll
shrb
subb
and
xlat
pop
lods
clc
add
and
add
ss
stos
xchg
shll
int3
and
scas
cmp
jg
adc
ds
add
jmp
mov
jle
filds
lea
add
lods
adc
mov
dec
ja
cmp
mov
sub
daa
xchg
or
scas
bound
jg
mov
xchg
pop
popf
push
mov
jae
pop
shrl
cs
pop
xorb
pop
push
js
insb
pushf
sahf
sbb
sbb
shll
inc
push
fnstsw
sbb
cmc
push
sub
aad
push
popf
iret
mov
pop
or
aad
or
add
jnp
fmuls
adc
push
sub
scas
clc
cmp
data16
mov
data16
enter
ss
push
movsl
mov
dec
leave
movsb
movb
aas
repnz
jmp
fsub
adc
jbe
and
les
jb
mov
sub
inc
sarb
sub
nop
cmpsl
jl
sbbb
shr
push
push
push
mov
add
inc
jmp
jge
cmp
aad
flds
mov
sbb
pop
sub
stos
adc
pop
add
cli
cmp
add
adc
jne
sti
push
xor
mov
jmp
pop
fstpl
popa
xchg
aas
add
adc
shrb
shlb
xchg
and
loopne
adc
or
insl
dec
xchg
adc
ljmp
addl
xchg
sbbl
pop
and
dec
ss
jne
lds
inc
hlt
pop
rclb
sub
add
lar
fsub
pop
imul
add
lcall
pop
or
orl
push
push
outsb
lods
mov
test
sub
mov
jg
or
lret
imul
orb
dec
das
or
test
mov
cmpb
add
ljmp
nop
pop
sbb
cmp
ror
add
push
or
jmp
std
xor
and
movsb
push
push
mov
or
pop
sub
popf
mov
std
dec
or
xor
insb
in
cmp
mov
jnp
cmc
push
inc
cmp
outsb
pop
jge
fadds
sub
or
shl
or
add
inc
xchg
mov
cmp
imul
loopne
or
xchg
pop
inc
and
xchg
add
sbb
mov
and
and
cmc
shrl
push
xchg
push
cmp
scas
rclb
mov
jbe
test
or
pusha
ljmp
pop
xchg
scas
shrb
lock
fiaddl
push
sti
testb
jmp
add
test
sbb
bound
imul
inc
pop
pop
ret
popfw
inc
cwtl
shrl
xlat
mov
dec
enter
mov
divl
mov
aas
sbb
pop
neg
les
add
jmp
stc
add
and
imul
dec
pop
stc
lret
test
mov
or
dec
sbb
pop
leave
push
jmp
cs
aam
enter
mov
push
or
mov
mov
push
es
push
inc
das
mov
push
gs
ret
dec
cwtl
in
add
push
mov
dec
dec
pop
push
xor
shll
dec
aas
lea
sub
push
push
or
mov
jge
and
leave
push
or
fstps
aad
cmc
and
and
or
sub
push
loop
test
das
push
and
sub
dec
pop
enter
add
inc
jmp
mov
ja
daa
push
add
adc
pop
pop
push
inc
cmp
jbe
cmc
call
std
nop
out
xchg
pop
adc
sbb
add
add
push
loop
hlt
dec
xor
jl
and
xlat
cmp
shlb
fbstp
jno
data16
xchg
or
test
pop
scas
dec
xlat
lock
cld
sbb
cmp
incl
and
shr
push
pop
push
push
add
pusha
xchg
or
sbb
sbb
pop
or
jg
mov
cli
repnz
mov
sbb
pop
add
adc
stc
pop
or
jg
out
rolb
push
insl
sub
mov
jmp
nop
pop
fists
push
jecxz
not
cmp
daa
push
xor
mov
adc
xchg
dec
loopne
jns
adc
jge
ret
addl
insl
add
sub
pop
add
sub
xor
sbb
in
mov
cmp
jno
sub
cs
popa
adc
mov
fstpl
xchg
enter
aaa
or
adc
int3
add
and
pop
rcll
push
push
adc
add
icebp
out
jo
mov
or
icebp
out
ljmp
fucomp
das
out
je
ret
je
dec
dec
pop
jp
popa
outsl
lods
std
xor
aas
or
dec
add
sub
push
jne
inc
xchg
insb
subl
or
js
push
scas
or
in
or
sub
ds
adc
mov
sahf
xchg
sub
sub
shll
loope
push
push
mov
icebp
jne
add
pop
push
push
cld
sub
jo
pop
add
add
dec
sbb
sub
mov
fdivl
ret
push
push
pop
jg
movsl
repnz
push
cmpsl
cmp
inc
aad
cli
js
in
outsl
adc
mov
sbb
scas
sub
fadds
out
sub
push
inc
or
push
push
pop
push
push
jb
and
cmp
mov
pop
in
aaa
inc
sbb
and
pop
or
add
fistl
pop
add
dec
cmp
and
pop
sub
in
fnstcw
xchg
stc
pop
mov
pop
out
jno
mov
push
int
jb
movsl
fwait
jle
or
ret
in
add
stc
inc
or
mov
jmp
cmpl
fisttpl
inc
jmp
lods
jg
loop
lock
popf
int3
hlt
pop
jl
dec
and
xchg
mov
cmp
outsb
aam
cmp
ss
addb
aaa
and
pop
shrb
or
push
pop
out
xchg
lods
dec
or
repz
jbe
jb
test
shrb
pop
pop
stc
inc
cmp
dec
ficoml
mov
testl
roll
jns
movsb
add
push
push
add
lret
adc
fsubs
adc
mov
inc
mov
hlt
lret
call
and
jg
add
sbb
xor
sub
or
in
outsb
ja
add
sub
add
sarl
and
add
mov
pop
loop
sbb
cmp
push
jns
xchg
sub
mov
add
xlat
mov
fcoml
dec
cmp
mov
push
outsl
jae
pop
mov
mov
fsubl
mov
fcmovbe
int3
lret
icebp
mov
xchg
dec
push
mov
test
jmp
jge
jmp
lds
aam
call
popl
inc
ss
sub
xchg
or
or
and
add
inc
hlt
sahf
xchg
xlat
stc
cmc
adcb
js
jp
fs
inc
mov
test
add
lods
cmp
jne
mov
movsb
push
test
fdivl
pop
xchg
sbb
xchg
sti
inc
cmp
xchg
and
sub
add
pop
sbb
or
mov
push
fs
in
cmp
push
cmp
out
xor
out
push
testl
dec
in
push
cli
xchg
add
sub
gs
add
jo
push
subb
adc
push
mov
in
lods
or
cltd
jb
adc
inc
aad
xor
inc
or
sub
call
sbb
inc
mov
rcrb
pop
jo
jne
push
jmp
sahf
adc
push
sbb
add
into
incb
mov
jmp
test
mull
pop
aaa
inc
add
addr16
push
mov
xchg
cwtl
imul
push
push
cmpsl
sbb
jmp
pop
idivl
jl
inc
jle
cmpsb
test
pop
dec
in
stos
push
and
es
cmp
pop
add
sbb
push
subb
cmpl
and
fists
push
subl
sub
jnp
jl
adc
inc
or
mov
pop
test
iret
nop
adc
clc
div
out
in
fcompl
push
xchg
dec
fisubrl
hlt
adc
jmp
icebp
pop
ljmp
stos
pusha
push
or
cmp
outsl
or
adc
call
fcoml
jo
xchg
shr
mov
je
jmp
mov
adc
cmpsb
arpl
add
out
sbb
mov
enter
ret
je
push
add
sbb
inc
mov
mov
outsl
or
pop
cli
fbstp
testl
scas
testl
and
rorb
xchg
cli
add
sub
cwtl
cmpsl
lods
inc
dec
and
xchg
gs
or
pop
mov
push
pusha
pop
cmp
ljmp
fsubs
adc
loopne
ja
pop
fwait
xchg
pop
mov
xchg
adc
scas
andb
mov
out
inc
or
lret
sub
mov
les
lahf
cmpsl
add
in
aam
stos
jl
jmp
cmp
jge
push
loop
call
sub
mov
xchg
arpl
decb
mov
test
addr16
xor
out
fldcw
and
pop
or
xchg
inc
push
addl
jo
repnz
das
nop
roll
call
out
adc
inc
loope
repz
js
xchg
icebp
mov
pop
mov
mov
in
cwtl
out
lods
pop
call
sub
in
test
mov
sbb
bound
jns
sub
mov
dec
fnsave
add
mov
pop
mov
mov
inc
fsubr
daa
addr16
lret
stos
xchg
test
xor
rclb
and
or
das
cmp
sub
xlat
lods
pop
or
fstpl
inc
mov
or
ljmp
dec
dec
rcrb
rcrb
xchg
pop
inc
pop
inc
mov
pop
adcb
fwait
pop
call
pop
loop
rcll
arpl
pop
xlat
mov
or
dec
and
dec
sub
push
orb
mov
push
leave
push
orb
dec
push
dec
inc
xchg
add
in
mov
scas
ret
add
sub
mov
notb
and
dec
cli
sarb
and
add
pop
sbb
push
xchg
or
dec
icebp
sahf
notb
xchg
add
jne
and
inc
pop
aas
rcll
jne
inc
push
pop
sbb
xor
out
adc
pop
imul
popf
pusha
mov
and
push
std
xchg
lods
jb
add
pop
mov
jg
mov
rclb
dec
xor
sub
push
adc
mov
rolb
neg
push
lcall
and
jg
loop
push
mov
xchg
jl
or
nop
out
or
add
das
mov
sub
pop
enter
fldl
mov
pop
xor
in
and
lcall
loope
ljmp
lds
push
notb
je
shr
or
push
js
mov
jp
adc
fwait
inc
iret
jg
push
and
dec
add
push
aas
mov
scas
mov
adc
pusha
js
test
jl
lds
add
daa
mov
sbb
inc
jnp
cmp
scas
mov
pop
lock
pop
and
rorl
fst
std
js
cmpsb
and
sub
ds
movsb
mov
lret
push
jmp
fadds
push
das
push
or
ret
fs
cmp
mov
dec
xchg
ja
dec
testl
sub
cmc
bound
jg
mov
cmp
jle
clc
movsl
roll
sbb
add
xchg
dec
js
push
jmp
orl
push
jle
adc
push
stos
orb
sbb
add
sub
fsubrs
jmp
stos
or
insl
ret
or
and
or
dec
fcoml
jmp
mov
setae
stos
mov
jno
cmpsb
inc
test
out
xchg
pop
add
cmp
inc
pop
lret
jmp
mov
rcl
test
xor
mov
mov
adc
and
jle
lods
jl
xor
dec
or
jmp
imul
fbld
push
add
lock
ret
or
ret
cmp
pop
sub
inc
mov
or
jg
out
or
adc
push
bound
int3
add
or
loopne
cmp
movmskps
jmp
mov
inc
lret
cmp
cmpb
cmc
fstl
push
ret
lds
mov
icebp
xchg
dec
sub
xlat
and
jge
push
jne
sbb
jae
jmp
adc
add
or
adcl
sti
cmp
mov
stos
fs
adc
mov
pop
test
push
or
and
imul
mov
enter
fidivrs
test
push
mov
lret
and
stos
fs
jno
mov
sub
mov
xor
pop
movsb
mov
lock
cmp
mov
add
push
leave
or
cmc
adc
jp
int
mov
push
dec
cmp
jl
or
inc
dec
lds
leave
and
mov
push
adc
stc
dec
movsl
cmp
mov
roll
loopne
or
jmp
push
sbb
out
xor
shll
pop
loope
je
jge
leave
add
shrb
fldpi
or
pop
aas
mov
pop
xor
std
rcrb
adc
jo
jmp
call
psadbw
and
xchg
sbb
add
in
jp
xor
jg
pop
test
sub
and
mov
cwtl
push
mov
lahf
daa
push
cmc
pop
in
mov
roll
xchg
push
push
dec
inc
xchg
movsb
ja
push
mull
jo
and
add
push
lret
es
xchg
push
in
call
mov
jno
daa
push
fucom
pop
sub
in
adc
jg
cmp
inc
lea
adcb
jnp
xor
sub
dec
push
addb
cwtl
xor
lods
push
adc
ja
mov
orb
mov
jbe
xchg
rol
jle
loop
push
push
je
lds
pop
add
outsl
mov
cltd
arpl
mov
sbb
inc
pop
inc
jne
mov
jmp
jp
mov
sub
shlb
xor
pop
adc
sub
cltd
and
repz
ret
dec
push
dec
dec
cmp
pop
pop
xor
jmp
sbb
es
mov
das
jbe
shl
inc
mov
rcr
or
es
popl
rcll
xorl
push
xchg
stos
cltd
cltd
cmpsl
gs
lret
aam
mov
sbb
decl
push
jnp
dec
mov
andb
xor
jnp
aas
out
adc
xchg
stos
sbb
sub
mov
scas
xor
sbb
bound
data16
inc
sbb
and
in
cld
jp
fnstcw
or
push
nop
ret
mov
push
pop
int3
lock
rsm
loop
adc
loopne
pop
popf
dec
daa
add
shrb
and
pop
cmp
loopne
jb
sub
pushl
sub
and
mov
jmp
push
daa
jle
and
add
or
adc
jb
mov
in
xchg
push
mov
xor
inc
jge
inc
mov
icebp
add
lret
mov
fstl
xchg
call
enter
testl
cld
sbb
add
cli
jno
adc
jmp
inc
inc
xchg
cmp
or
fcoms
xchg
and
call
scas
mov
dec
adc
lret
or
sahf
push
out
test
icebp
or
mov
mov
jnp
sbb
add
push
xor
or
pop
outsb
pop
xor
push
xor
dec
rcl
lret
fldl
push
push
push
mov
aaa
dec
dec
pop
lock
cltd
jp
insb
decb
xchg
addr16
icebp
jnp
push
mov
cmc
jp
movl
arpl
neg
test
test
inc
inc
out
insl
aas
std
outsb
cmpb
fsubrs
aam
int
dec
sbb
and
dec
xchg
lcall
cmp
pop
addr16
push
pop
testl
or
dec
outsb
or
cmp
std
pop
fmulp
in
fdivrs
pop
or
push
jnp
repz
aas
in
push
pop
push
pop
dec
push
xchg
xor
insl
push
enter
inc
jbe
or
xchg
push
mov
ret
hlt
cmp
gs
xchg
pop
jg
mov
xor
cli
lds
dec
imul
mov
sahf
push
sbb
push
out
mov
bound
push
pop
icebp
push
shl
pop
loope
icebp
mov
push
outsl
stos
jle
inc
sahf
int3
movsl
rclb
mov
xor
mov
jge
jb
out
pop
movsb
push
sub
inc
or
and
push
add
jno
jmp
and
push
daa
add
jnp
pop
pop
mov
sub
jge
popf
add
out
ljmp
ds
roll
or
pusha
loop
jne
mov
popl
das
cmp
imul
out
or
fcoml
dec
pop
shl
mov
insl
mov
mov
out
push
dec
or
mov
pushf
and
dec
scas
ret
cmp
aam
inc
cltd
in
sbb
popf
lock
sbb
sti
push
in
idivb
adc
sbb
or
je
push
cmp
repnz
sub
int
into
push
adc
popa
pop
outsb
cmpsl
daa
pop
mov
cmp
pusha
sbb
ja
cmp
push
ret
mov
add
in
rol
rcrb
inc
and
sub
shrl
iret
mov
add
fxch
dec
xchg
das
xchg
imull
ljmp
jmp
and
sub
sub
sbbl
shlb
neg
dec
in
adc
jecxz
dec
cmp
lea
int
xchg
or
adc
ja
mov
mov
inc
xor
arpl
pop
in
mov
and
push
fidivs
jmp
mov
inc
xchg
cwtl
ficomps
and
pop
push
in
or
push
mov
int3
ds
mov
xor
pop
add
icebp
mov
xchg
cmp
sub
icebp
jbe
pop
imul
loope
xor
mov
push
pop
push
lahf
mov
aad
dec
loope
cld
and
jno
mov
cmc
insb
cwtl
fwait
ljmp
subl
and
add
call
pop
ljmp
pop
jbe
pop
arpl
cs
xchg
sarb
ret
nop
jno
add
xor
or
insl
mov
jo
jle
lret
aaa
mov
or
dec
rorb
jne
out
push
rcrb
shlb
sbb
gs
mov
sbb
push
in
imul
inc
mov
fistpll
push
daa
fstl
dec
sar
nop
test
outsb
in
popf
lods
xor
jo
cmp
or
sbb
inc
lods
lock
cld
pop
je
jo
ret
lcallw
shr
lahf
pop
xchg
mov
ror
add
fdivl
insb
popf
xor
push
leave
cld
and
ds
sub
bound
push
scas
decb
testb
sbb
sbb
xchg
inc
add
ljmp
or
rclb
and
adc
pop
or
sub
push
movsl
mov
cmp
cli
add
lds
aas
les
or
mov
xchg
add
add
out
adc
sbb
cmp
and
es
nop
dec
out
push
fsts
sub
insl
stos
or
clc
rcrl
sbb
aad
fcoms
jmp
in
pop
fistpl
mov
mov
pop
add
sub
loop
daa
imul
mov
outsb
call
fwait
cmp
push
hlt
pop
data16
mov
jno
xorl
mov
or
addr16
aam
push
in
mov
les
lret
or
sarl
rorl
in
das
adc
movl
jl
push
or
mov
adc
cmp
fistl
mov
es
nop
je
dec
adc
lods
xchg
in
dec
fbld
push
mov
push
popa
mov
mov
fsubl
sbbl
out
jecxz
lcall
mov
push
push
add
mov
mov
mov
sub
mov
sub
jns
pop
jmp
rclw
xlat
fs
out
or
mov
movzwl
loopne
clc
jl
and
adc
ja
or
insl
cmp
dec
test
push
repz
pop
and
int3
jge
push
jecxz
sub
rcll
cwtl
xchg
leave
xchg
jnp
push
inc
dec
loopne
add
mov
add
push
lock
pop
cmp
add
mov
xchg
pop
lret
and
or
repz
jbe
orl
pusha
pusha
fiaddl
add
inc
cmpb
es
mov
mov
pop
jb
inc
loope
call
sbb
adcb
add
aad
jmp
push
pop
pop
push
add
sub
cltd
or
lods
xchg
es
inc
xor
scas
add
loope
pop
xchg
push
pop
dec
std
xchg
sti
cmp
movsb
bnd
jge
es
popf
jne
mov
dec
push
rcrb
push
ljmp
jmp
or
andps
dec
int3
lahf
scas
test
xchg
stc
stos
xchg
push
sbb
loopne
inc
movsl
js
mov
push
cmp
lret
shr
add
add
ljmp
push
xor
adc
cmp
gs
push
sti
out
inc
jecxz
mov
test
mov
cmp
pushl
in
ljmp
scas
imul
xor
mov
mov
rorl
fisubrl
jnp
cld
ljmp
lock
jmp
xor
push
hlt
pop
pop
or
mov
add
in
std
out
cld
fmul
sub
mov
ds
cwtl
pop
jmp
cli
das
sub
inc
adc
fldl
inc
idivl
mov
sub
pop
ja
ljmp
pusha
inc
or
popa
mov
and
mov
jp
mov
lock
sub
and
pop
push
mov
iret
gs
insb
cmp
test
in
movsb
jbe
xchg
inc
mov
out
das
cmpsb
and
and
sbb
outsb
ret
push
clc
jnp
insl
xchg
xor
insb
mov
mov
dec
nop
xor
cmp
or
nop
lahf
dec
pop
mov
pop
jmp
leave
movsb
mov
jecxz
repnz
mov
shlb
jb
mov
bnd
pop
or
ljmp
xor
jg
cmp
and
sub
out
in
jmp
mov
std
int
rorb
push
sub
sbb
aas
or
les
jg
cmp
fsubr
xor
iret
dec
mov
scas
lcall
push
outsb
lock
dec
cld
mov
loope
mov
cmp
mov
mov
jmp
das
jb
and
fwait
mov
mov
js
sahf
addb
dec
fstl
jmp
inc
sbb
push
cmp
push
aad
add
sub
mov
dec
xchg
add
cmp
jg
mov
dec
imul
inc
pop
pusha
add
subb
testb
push
mov
sbb
pop
loopne
mov
xlat
xor
pusha
mov
push
push
repnz
push
faddp
push
jmp
cmovbe
lcall
rep
mov
pop
shr
shrb
inc
mov
loopne
nop
into
sub
sub
lock
and
push
jmp
pop
cli
pop
loop
sbb
subb
roll
jmp
pop
es
cmp
int3
pop
xor
std
out
pop
xor
or
push
mov
pop
add
jae
push
xor
mov
xor
push
call
in
lds
pop
cmp
cmpsb
dec
jno
cmp
ror
xchg
add
mov
add
inc
dec
or
daa
xchg
push
push
adc
testl
xor
jo
sub
fwait
push
mov
or
mov
cmpsl
xor
mov
or
or
sub
sub
in
xchg
lcall
inc
or
and
les
rol
rcll
pop
iret
repz
dec
es
and
insb
xchg
cld
scas
add
imul
cwtl
xor
aaa
xchg
js
lahf
icebp
xor
ljmp
pushf
cmp
mov
sub
inc
jp
jno
push
mov
pop
inc
mov
fadds
test
pushf
lock
addr16
or
lret
rcrb
mov
daa
and
fnsave
push
or
fwait
mov
push
popa
out
pop
mov
fdivs
adc
sub
xor
rol
push
cmp
nop
sbb
stc
outsl
pop
pop
js
cwtl
movl
and
inc
xchg
shr
add
add
inc
xorl
xchg
sub
cmp
arpl
data16
dec
and
insl
push
jnp
adc
adc
shll
dec
ret
and
mov
insb
cmp
loope
xor
out
loopne
sti
sbb
add
mov
shr
add
in
and
shrb
clc
mov
cs
es
shr
jge
mov
cmp
add
jp
cmpb
cmp
inc
adc
shlb
scas
fsubrs
adc
or
xor
jmp
mov
jmp
push
jb
je
or
push
jg
and
inc
dec
nop
pop
ljmp
push
leave
mov
adc
or
jmp
addr16
mov
out
mov
cmpb
pusha
pop
adc
xor
and
adc
cli
pop
pop
push
push
sbbl
clc
setl
test
or
lret
add
jno
xchg
mov
or
sbb
lods
push
and
add
jmp
push
mov
loope
movsl
arpl
mov
or
sub
inc
fdivrl
adc
adc
xor
jmp
push
cli
rolb
mov
adc
insb
adc
sub
in
pop
and
mov
icebp
sub
sbb
push
test
subb
je
adc
out
push
pop
add
sbb
jp
hlt
lock
push
pop
cmp
pushf
jmp
scas
outsb
ds
sbb
std
out
sbb
pop
in
shl
int
push
xorb
mov
xor
mov
jne
insl
daa
or
daa
pop
inc
jle
jmp
jmp
cld
push
pop
arpl
or
in
mov
pop
addb
add
pop
xchg
pop
daa
sub
sbb
xor
jns
dec
sbb
adc
xor
inc
push
pop
int3
hlt
jmp
std
inc
into
cmc
test
inc
xor
mov
inc
add
rcll
push
int
jle
jle
lds
scas
cltd
sbbb
xchg
sbb
cmp
pop
xchg
push
mov
dec
loop
pop
inc
icebp
pop
pop
fs
lods
inc
testl
pop
enter
dec
jne
pop
mov
adc
jmp
es
std
jg
sahf
xor
push
add
int
push
cmp
and
in
xchg
mov
sbb
out
mov
aas
cli
cmp
leave
notl
inc
lods
mov
add
xor
dec
xchg
mov
add
mov
out
sub
add
shlb
jb
push
mov
stos
enter
clc
xchg
not
push
xor
push
jmp
pop
ja
and
icebp
add
clc
pusha
test
xor
fidivrl
shr
sub
rclb
icebp
nop
imul
lds
or
mov
push
std
nop
pop
orl
shr
or
mov
div
mov
notl
sbbl
add
syscall
or
je
shrb
sbb
inc
repnz
ficomps
xchg
lods
mov
pop
popf
push
mov
data16
sub
cs
or
dec
dec
push
daa
fimull
std
outsb
ret
lods
aam
and
adc
cmp
push
ja
mov
adc
out
lds
decl
push
movsb
stc
mov
xchg
cmp
testl
jle
mov
mov
cmp
cmp
out
inc
or
adc
and
cmp
push
das
jecxz
cmp
sbb
adc
nop
in
xchg
sbb
nop
mov
pop
loop
jne
push
mov
fiadds
add
inc
xor
jle
sub
imul
pop
lods
pop
pop
aam
movsl
ja
or
loopne
push
insb
daa
xchg
addr16
mov
xor
push
push
cld
and
sbb
mov
or
stos
mov
or
push
int3
rcl
push
cmp
mov
ss
cmp
dec
or
jb
fidivs
push
pop
sti
mov
or
xor
mov
push
subb
xchg
mov
call
stos
gs
orb
or
popf
lods
or
sub
insl
adc
test
hlt
scas
repz
out
xor
fcoms
sbb
push
xchg
imul
adc
mov
xor
out
jmp
and
pusha
arpl
aad
in
sbb
push
call
sub
in
js
shl
jmp
cli
push
fsubl
add
or
dec
decb
add
pop
jecxz
negl
adc
daa
add
jbe
jmp
push
inc
shrl
jle
inc
test
pop
ret
idiv
or
cs
mov
ja
or
and
notb
daa
dec
test
addb
insb
ud2
cmp
ljmp
cli
mov
mov
add
or
roll
fcomps
sub
jns
andb
or
and
std
pop
mov
shl
xchg
scas
add
inc
icebp
shll
pop
enter
outsb
inc
jmp
mov
or
int3
ret
pop
in
repz
sub
push
bound
outsb
std
addr16
sub
push
mov
shlb
sbb
inc
pop
dec
mov
xchg
inc
stos
es
push
inc
mov
repnz
sub
or
pop
pop
inc
mov
shrb
insl
mov
pop
js
sub
jb
jmp
xchg
jnp
in
mov
sbb
sub
fstl
aad
or
push
mov
and
push
in
pop
and
bound
mov
negl
mov
sub
jmp
add
sub
pop
mov
test
lods
jnp
movsl
shl
cmp
lcall
inc
nop
pop
out
push
adc
stc
add
cltd
mov
cmpsb
inc
test
dec
divps
dec
push
fstl
jl
in
test
fisttpl
mov
or
push
cmp
adc
fwait
inc
imul
inc
jmp
sub
subb
fnstenv
inc
and
lea
das
xor
aas
dec
popa
xchg
add
arpl
xor
bnd
cld
inc
pop
inc
shll
fisttpll
push
mov
inc
das
scas
cmp
aam
sub
ja
and
shrb
dec
dec
outsl
mov
fs
out
iret
lods
push
mov
push
test
jae
mov
in
and
jg
pop
jle
sbb
inc
cmp
sub
jo
out
and
mov
and
arpl
add
cmp
mov
cli
sub
pop
mov
mov
sbb
sub
and
mov
and
lea
jge
sub
mov
jo
int
push
push
nop
nop
push
pop
cli
imul
aas
cmp
add
inc
push
add
pop
movsb
es
hlt
add
jecxz
mov
dec
pop
add
jmp
inc
js
push
bound
mov
sub
bound
shrb
icebp
inc
mov
xchg
rclb
mov
jns
outsb
jl
add
scas
sub
jge
mov
in
aaa
aaa
ret
push
add
xor
stos
js
dec
pop
shl
icebp
in
aas
cmpsb
out
ljmp
dec
out
aad
out
mov
xchg
pop
push
lods
cmc
cmp
or
sub
int3
inc
fwait
jle
andps
shlb
mov
pop
shr
cmp
ds
pop
rcll
loop
add
xchg
push
xchg
outsl
lock
cld
inc
lea
outsb
int3
insl
decb
inc
mov
sub
xchg
push
pushf
dec
xor
out
push
jne
mov
pop
in
not
push
ljmp
jb
mov
fdivrl
cmp
fsts
sarl
adc
test
enter
mov
and
mov
cli
dec
and
pop
add
mov
scas
fdiv
dec
add
pop
and
adc
sbb
icebp
loopne
lahf
and
sub
jmp
add
mov
jecxz
pop
sub
mov
adcb
dec
in
jno
daa
push
clc
or
add
push
aad
lret
cmp
nop
cmpsl
cmp
cs
jmp
inc
push
add
in
pop
jnp
rcrb
orb
pop
jb
jg
mov
cmp
cmp
mul
push
inc
pop
jmp
add
stc
je
cli
adc
ret
addb
dec
rol
daa
scas
or
jb
add
add
jmp
mov
nop
mov
xor
add
cld
mov
push
jl
sbb
lea
aas
clc
inc
add
add
andl
dec
enter
jg
iret
or
inc
ret
sbb
lret
or
les
push
xchg
idivb
pop
mov
jmp
xchg
mov
xor
xchg
jo
xor
imul
adc
pop
stos
insl
cmpsl
jle
jne
push
add
xor
or
mov
mov
clc
xor
add
cmp
fidivrl
stc
cwtl
test
push
clc
jo
popf
out
inc
das
inc
mov
sbb
movaps
into
add
sub
push
pop
push
mov
sbb
mov
mov
xchg
mov
or
mov
in
inc
pop
dec
shlb
mov
or
adc
inc
xchg
cmp
mov
jecxz
lods
clc
jae
adc
jp
cwtl
pop
mov
xchg
les
jge
enter
or
mov
inc
pop
shl
xor
mov
fsts
cltd
loope
pop
shll
pop
pop
add
fwait
jmp
leave
aam
dec
aad
aas
xchg
imul
inc
gs
divl
not
jno
imul
mov
pop
loopne
jae
adc
test
sub
adc
stos
and
xor
jmp
jp
push
dec
mov
cmp
pop
and
lods
push
adc
or
stc
ds
int
stos
popa
dec
scas
xor
gs
mov
sbb
sbb
call
mov
jecxz
sub
xor
mov
movsl
sahf
lea
ror
imul
dec
jo
add
xor
pusha
cmp
and
imul
adc
cmp
and
repnz
push
and
jmp
dec
adc
and
popa
insb
jbe
inc
mov
repnz
xchg
jmp
mov
dec
sub
xchg
loope
mov
aad
rclb
shrb
jbe
adc
icebp
hlt
xchg
jmp
cmp
sbb
push
out
lds
shrl
popa
enter
mov
mov
out
jmp
xchg
rorl
jno
mov
sub
into
mov
out
jo
popf
inc
sbb
decb
int
mov
push
add
inc
xchg
stos
je
add
loopne
sub
adc
sub
sub
pop
sub
decb
jge
adc
cltd
inc
pop
jo
push
dec
xor
mov
rcll
mov
leave
fidivrl
sub
push
mov
dec
xor
push
or
add
push
lods
pop
inc
or
add
sub
sub
mov
dec
pop
push
sti
cmp
pop
cwtl
sub
jge
xchg
popa
int
in
push
and
xlat
rorb
sub
xor
movsb
inc
jae
in
cmp
cmp
mov
add
mov
jmp
push
pop
sub
jge
xor
push
pop
push
and
mov
ds
leave
in
rcrl
jmp
pop
pushf
or
pop
rorl
popf
xchg
sub
pop
outsl
loopne
or
jge
sbb
inc
xor
outsb
dec
pop
repnz
pusha
inc
push
bound
inc
in
push
sahf
outsl
xchg
shl
push
je
popf
add
add
adc
mov
push
dec
jbe
mov
cltd
or
pop
add
pop
data16
rcl
push
aaa
inc
loop
pusha
js
ljmp
xchg
and
punpckhdq
adc
jns
xor
or
jns
outsl
mov
jne
test
stos
xchg
arpl
jecxz
adc
ffree
dec
in
pop
push
or
das
scas
testb
aas
loope
fs
xchg
out
jnp
shll
fs
stc
jg
add
push
add
movsl
mov
nop
push
mov
stos
movsb
and
push
pop
fld
cmp
sbb
mov
mov
lahf
mov
push
ds
mov
daa
pop
mull
cmpsl
mov
in
shlb
inc
add
xor
lods
movsl
lcall
adc
rcll
lods
sub
adc
pop
or
add
adc
adc
or
lock
add
int3
add
repnz
xchg
outsb
xchg
dec
pushf
or
push
push
jo
fisubrs
adc
and
inc
imul
adc
jle
pushl
dec
xchg
cmovo
nop
js
mov
enter
addr16
pop
mov
push
out
jg
mulb
and
jno
pcmpeqb
jmp
aam
ss
cmp
xchg
mov
pop
sbb
leave
ret
decl
fidivs
lret
pop
rorl
loopne
sub
ficompl
loop
repnz
push
jmp
testl
push
jbe
icebp
arpl
sub
sub
rcl
popf
pop
notb
jae
scas
mov
out
sub
sub
cmp
cmp
add
cs
adc
daa
pop
mov
mov
nop
inc
repz
adc
fcomps
or
shr
or
mov
es
in
and
or
loopne,pn
clc
xor
add
rorb
jmp
jecxz
ret
shll
data16
insl
cmpb
lods
add
xor
in
xchg
xor
test
mov
roll
inc
out
in
jmp
mov
or
pop
neg
jmp
cwtl
inc
rdtsc
mov
negl
loope
cmp
xor
fwait
and
inc
dec
pop
and
mov
push
jmp
push
mov
pop
adc
lods
xchg
jmp
test
mov
dec
cmp
sub
mov
adc
pop
pop
pop
jns
pop
inc
jb
pop
cld
mov
add
int3
cmp
aad
scas
test
cmp
or
mov
es
sti
mov
daa
xor
jo
jne
ret
pop
pushf
dec
and
out
loope
adc
adc
add
jge
imul
mov
cmp
xor
mov
rorb
lret
mov
mov
nop
add
xor
ret
hlt
cmp
and
inc
or
push
or
scas
scas
mov
jne
jns
fst
ret
ljmp
jecxz
clc
xor
out
adc
add
imul
inc
ret
sbb
add
mov
shr
out
ret
fs
add
xor
pop
jnp
jmp
push
sub
xor
and
int3
aam
pop
lret
out
test
scas
pusha
lock
adc
cmp
popf
adc
jg
fnstsw
roll
mov
ret
or
inc
lahf
and
lea
pop
mov
mov
add
adc
dec
sub
adc
jmp
std
adcb
cmp
gs
pushf
js
icebp
hlt
mov
leave
mov
popa
mov
sti
jg
dec
scas
mov
xchg
subb
pop
dec
cmp
je
rol
mov
nop
ja
add
or
int3
jle
pop
js
adcb
adc
pop
adc
or
mov
out
push
sbb
push
or
insb
or
fs
mov
cmp
push
dec
and
mov
jae
inc
mov
js
or
cmp
sub
sub
and
jmp
outsl
mov
mov
hlt
mov
sarb
xor
xor
push
stos
push
fwait
or
xchg
cmc
push
stc
push
inc
adcl
dec
idiv
lret
jge
popa
xor
ja
filds
jnp
and
fs
ljmp
jno
jle
daa
cmpb
add
lret
repnz
jecxz
adc
mov
clc
xor
sti
dec
inc
sbb
mov
jmp
pop
add
xlat
cltd
adc
xor
jne
in
add
repnz
cli
mov
pop
sbb
and
jbe
add
xor
sub
jecxz
and
insl
cmp
pop
jne
or
pop
std
sub
push
loopne
or
stc
and
lds
pop
push
xchg
mov
and
xor
inc
in
dec
mov
aaa
cmovge
pop
sbb
cmp
shlb
fldl
scas
sub
pop
add
jnp
dec
cmc
ljmp
das
loopne
xor
test
out
into
push
jb
into
lss
movsl
ret
lock
faddl
adc
cwtl
adc
jnp
int3
mov
in
pop
cmp
or
mov
or
xor
lds
push
xchg
imul
shll
pop
inc
mov
xor
xchg
and
jmp
icebp
xor
jecxz
add
out
enter
loop
rorl
and
pop
stos
hlt
std
sbb
fs
adcb
dec
xchg
push
jg
push
dec
stos
fmuls
jmp
testb
daa
ret
js
jae
push
inc
sub
dec
roll
jmp
loope
std
mov
test
add
pop
xchg
imul
outsb
pop
js
adc
xor
add
sarl
lret
test
lods
push
mov
add
in
adc
pop
pop
xor
push
fst
sbb
enter
pop
xchg
mov
stc
pop
sbbb
rcrl
jnp
bound
pop
movsl
jge
mov
mov
loope
ret
dec
pop
cmp
push
mov
jmp
and
imul
iret
fimuls
sbb
or
ret
insb
ret
popa
jle
adc
dec
inc
decb
jecxz
add
int
inc
xchg
inc
daa
aam
jo
shlb
out
pusha
sbb
dec
or
xor
out
sub
or
push
adc
mov
gs
sub
cmc
jmp
repnz
pop
dec
add
lods
xchg
icebp
out
outsl
out
dec
cmp
jns
sarb
mov
stc
adc
or
daa
fnstenv
cmp
push
mov
jne
clc
bound
or
pop
sbb
in
or
xchg
arpl
push
xor
or
push
ds
sbb
repz
and
pop
mov
in
sti
inc
sbbl
je
lods
repnz
das
fldenv
mov
push
adc
or
or
sub
sub
push
dec
neg
push
push
std
jb
filds
testb
sub
inc
cmp
cmp
in
cmp
ds
es
or
pop
adc
cmp
push
xlat
sarb
dec
inc
adc
pop
inc
pop
nop
cmc
insb
sub
sarl
cmpsl
jge
push
adc
dec
les
fsubrs
xchg
test
in
es
mov
mov
insb
adc
pop
addr16
mov
mov
cmp
add
inc
jle
cvtps2pd
and
idivb
dec
aad
or
push
jae
mov
inc
push
aam
popf
sbb
dec
pop
sbb
mov
int3
clc
push
push
adc
sub
ds
mov
mov
dec
shlb
sbb
sbb
scas
sub
repz
mov
cmp
addb
ljmp
cmp
inc
das
int
aad
add
jbe
pop
xlat
pop
push
aam
clc
ja
pop
mov
cld
sahf
rol
or
mov
jmp
sub
test
jns
mov
out
test
lods
pusha
mov
and
sbb
dec
mov
shrb
mov
xor
mov
sub
push
fistpll
or
dec
loopne
dec
stos
inc
pop
push
pop
pop
nop
repz
push
cmp
aaa
jp
imul
or
inc
jmp
pop
inc
adc
in
int
orb
push
nop
mov
xchg
xlat
xchg
jp
pop
in
rol
movsl
inc
mov
fsubrp
cbtw
add
adc
mov
inc
push
mov
cld
jmp
xchg
add
addb
and
jmp
in
inc
add
mov
add
mov
pop
popa
fsub
sub
mov
loop
sti
jecxz
mov
add
es
sbb
jbe
sbb
jg
lea
mov
inc
or
lcall
popf
cli
push
shr
outsb
adc
mov
daa
pop
pop
pop
add
add
inc
aad
iret
pop
or
inc
test
das
jbe
lahf
sar
test
mov
xchg
das
mov
add
push
mov
add
in
dec
out
push
jmp
shr
notb
pop
cmpsl
jne
mov
or
jns
push
or
es
pop
imul
dec
mov
or
sbbb
mov
inc
sbb
fsubr
ret
inc
in
pop
mov
jmp
jecxz
mov
or
or
xlat
pop
pop
call
lret
cs
js
or
and
push
push
int
mov
aam
push
rorb
inc
push
pop
dec
int3
and
or
xor
xchg
adc
jae
nop
cs
ret
js
mov
pop
sbb
inc
sub
popf
ljmp
and
inc
and
and
dec
lods
xchg
add
adc
or
insb
pop
xor
jmp
ret
jne
add
imul
jne
mov
sub
mov
inc
xor
insl
stos
adc
add
pop
sub
sbb
sub
cmp
subl
cld
aas
xor
and
xor
and
xor
mov
dec
arpl
negb
add
mov
test
rcrb
push
adc
cmp
inc
aad
mov
outsl
mov
cmp
inc
icebp
push
dec
pop
mov
bound
bnd
out
popa
xlat
push
lds
cmpsb
lea
loope
stc
mov
jmp
cld
daa
incl
lahf
xchg
push
stos
inc
adc
xor
adc
cld
dec
in
pop
add
jmp
rolb
test
add
push
xchg
sub
sub
movsl
push
in
sub
add
push
push
sbb
and
mov
cmp
sbb
cmp
push
call
xor
xor
cmp
mov
add
std
inc
into
or
push
mov
cmp
sbb
int
dec
adc
cmpsl
and
aam
or
daa
stc
mov
xlat
xchg
cmp
jge
xchg
sub
dec
sub
add
out
test
mov
add
or
and
jmp
push
dec
negb
mov
xor
adc
test
dec
aaa
js
popf
enter
lods
outsb
sti
dec
push
jno
jg
out
mov
ljmp
cwtl
cmp
push
hlt
movsb
jo
mov
pop
out
and
mov
pop
xchg
rcrl
add
test
xor
cmp
aaa
pop
cmpsl
mov
push
ret
push
sub
sub
jmp
out
push
bound
enter
cmpb
dec
add
mov
and
adc
sbb
adc
adc
mov
xchg
loope
mov
or
testb
mov
shrb
imul
stc
or
cmp
je
leave
dec
inc
xor
int3
xchg
pop
sbb
adc
jne
scas
adc
mov
imul
pop
rolb
dec
andb
in
mov
sbbb
movsl
pop
shll
lret
xor
adc
rolb
sbb
add
ret
movb
adc
mov
in
adc
push
add
jmp
and
repz
ja
mov
cld
or
fbld
cwtl
in
or
mov
inc
add
movb
stos
stc
pop
loope
fsubrs
mov
adc
fidivl
add
and
push
cli
adc
cwtl
test
inc
mov
mov
push
mov
xor
out
ret
popf
xor
fucom
aad
xchg
xor
scas
adc
jo
xor
lods
mov
aad
mov
xor
push
sbb
pop
adc
add
or
cmp
aas
orl
rolb
jmp
fadds
add
es
jl
and
outsl
jg
add
or
push
test
sub
add
int
cwtl
mov
sub
xchg
adc
inc
adc
jae
leave
mov
xor
cmp
fisubrl
stos
lret
and
pop
pop
sbb
push
incb
or
jmp
fimuls
adc
cmp
das
mov
inc
pop
add
out
mov
inc
lahf
das
or
pop
push
leave
mov
imul
mov
es
adc
pop
inc
shlb
cmp
jno
addl
add
push
sbb
and
jbe
push
into
mov
or
push
sahf
hlt
xchg
add
insb
not
int3
mov
add
sbbb
sbb
mov
xor
jmp
maxps
jp
es
jnp
cmp
frstor
outsb
inc
inc
and
in
cmpsl
lret
clc
fidivs
addr16
mov
fbld
sbb
jl
ret
mov
outsb
inc
popf
std
adc
and
sbb
aaa
daa
xor
pop
inc
mov
push
es
sub
add
pop
cmc
stos
shlb
rcrl
enter
or
mov
add
pop
push
shr
xor
es
add
repnz
mov
es
pop
cwtl
cs
sub
lahf
es
push
pop
adc
aad
in
in
inc
pop
dec
dec
cmpsl
add
jecxz
dec
pusha
dec
jno
sub
push
xor
jle
jecxz
stc
mov
call
bound
jb
add
call
loopne
or
ficompl
cmc
adc
or
sub
mov
addl
jae
int3
sub
cmp
pop
stc
pop
cmp
cmc
ret
jmp
inc
xor
mov
xlat
or
sub
mov
sti
pop
or
fcomp
adc
jno
out
adc
repnz
or
jbe
pop
mov
pop
mov
add
jge
inc
mov
inc
lahf
cmpb
test
rorl
jge
jg
adc
pop
sub
data16
in
sub
bound
inc
das
push
xchg
add
add
mov
pop
les
add
shlb
lock
sub
dec
in
out
es
add
mov
pop
push
fdiv
push
or
int
push
mov
lahf
and
fs
inc
pop
push
out
dec
add
and
cmp
sbb
push
aam
or
jge
pop
or
jmp
jle
lret
addr16
sub
and
add
jo
cmpsb
push
add
push
mov
and
popf
inc
ret
repz
lds
xchg
ljmp
sub
adc
shld
sbb
roll
sub
and
or
xchg
test
xchg
sar
mov
fwait
insl
out
mov
add
sbb
ljmp
addb
xchg
mov
mov
dec
inc
pop
daa
xchg
adc
mov
sbb
mov
lods
inc
loop
adc
adc
inc
repz
out
push
xor
xor
sub
jle
or
inc
pop
or
add
in
xor
ljmp
xor
jae
adc
adc
das
in
mov
dec
imul
js
pop
pop
int3
xchg
add
rclb
into
mov
ret
push
fcmovb
mov
jo
mov
imul
jecxz
stos
aad
sbb
pushf
ret
fstl
inc
shrl
test
sbb
xchg
push
push
mov
jb
js
or
je
sub
call
stos
mov
jg
into
push
out
addr16
mov
sbb
lods
movsw
lock
mov
lea
cmp
popa
pop
popf
std
lcall
jne
jno
std
mov
pop
or
dec
fstpl
out
shrd
shl
jmp
std
stos
dec
call
daa
push
xor
dec
inc
add
add
and
push
xchg
jle
mov
dec
sbb
mov
add
cli
push
pop
push
jmp
xor
sbb
pop
and
inc
jl
or
cmp
adc
jns
popa
cmpsl
imul
pop
dec
adc
leave
inc
scas
jp
arpl
sub
sbb
pop
shr
in
fadds
lds
mov
shl
shlb
in
roll
ds
orb
dec
shlb
inc
push
or
call
cmp
out
jae
icebp
ja
orl
jg
cs
or
dec
sub
loopne
stos
popa
fstpt
or
aad
pusha
sub
ljmp
sub
pop
mov
popf
push
lcall
popf
jo
lock
pusha
in
sub
add
add
fmuls
sub
cli
das
inc
int
pop
insb
sub
or
add
loopne
sub
clc
or
stc
scas
cs
inc
repz
cmp
dec
mov
je
push
add
inc
xor
and
mov
sti
inc
and
push
inc
daa
xor
push
vmovdqu
clc
and
mov
and
sub
add
add
pop
sub
fists
sub
inc
lock
sahf
and
sbb
pop
xchg
not
xor
push
mov
icebp
fldenv
jmp
sub
xchg
lcall
in
sub
mov
pop
scas
bound
out
inc
jmp
jmp
push
aam
leave
test
sbb
add
or
jp
mov
loopne
inc
in
push
adc
loope
push
adc
xchg
pop
and
insl
sbb
cwtl
dec
and
mov
aas
and
movsl
inc
clc
fadds
pop
add
jmp
loop
mov
sbb
pop
ja
add
arpl
into
dec
add
in
neg
pusha
or
push
sub
xchg
jl
or
fcoms
nop
adc
mov
mov
sub
pop
xor
jmp
movsb
lock
mov
xor
je
cmpsb
add
mov
add
rorb
pop
mov
adc
sbb
loopne
out
addr16
cmp
adc
sub
mov
push
insb
jp
repz
xor
out
xchg
ja
or
stos
ja
es
push
push
jo
xchg
add
outsb
or
push
aas
js
loope
test
jecxz
sbb
insl
notb
mov
sbb
testb
cmp
jno
sub
das
cld
out
push
rcrb
add
dec
shl
idivb
or
fwait
loopne
sub
xlat
pop
or
sub
andl
inc
jg
test
test
mov
es
or
adc
andb
cli
mov
jne
cmp
lret
push
gs
sbb
lods
movsl
xor
or
test
cmp
push
fdivs
into
pop
push
cld
js
in
dec
ret
mov
jecxz
xor
insb
call
fstl
dec
mov
sub
sbbl
and
xchg
mov
out
lds
jnp
adc
mov
icebp
jle
push
xchg
mov
push
fnstsw
add
repz
xor
test
add
sub
sbb
scas
mov
dec
mov
xchg
mov
xor
xor
mov
inc
sub
sar
dec
sbb
fdivs
xchg
fcoms
inc
and
out
addr16
push
adc
int
scas
add
pop
add
shr
lock
mov
pop
pop
test
shll
add
add
fldt
jle
inc
cld
lds
popf
rclb
ss
push
sbb
push
xor
or
sub
out
psubsw
iret
or
sub
mov
cwtl
inc
cmc
pop
dec
sub
pop
xchg
roll
pop
pop
imul
fcompl
mov
or
inc
icebp
dec
addr16
aas
int
and
imul
cmc
out
stos
inc
mov
mov
inc
ja
je
add
inc
mov
sbb
ljmp
and
jmp
adc
and
add
aas
mov
xchg
push
popa
and
das
imul
sub
lret
inc
and
mov
pop
out
insb
push
sbb
clc
shlb
add
jae
lods
push
imul
ljmp
lock
call
xchg
dec
lods
pop
jbe
add
sub
pop
popf
in
shlb
pop
jmp
mov
sub
aam
aas
mov
jg
scas
push
or
cmp
imul
fisubs
xor
stc
ss
or
and
adc
mov
sub
xchg
out
add
outsl
sub
jb
or
add
fwait
push
add
lret
push
test
push
pop
cmpsb
ds
and
jmp
fistps
dec
inc
repnz
cmp
jl
addl
enter
dec
sub
sbb
jb
inc
aam
inc
pop
pusha
pop
add
call
mov
adc
xchg
cmp
aaa
sub
adc
push
pusha
sti
mov
andb
jb
sub
add
dec
pop
insb
pop
mov
or
pop
pop
push
push
add
mov
add
ret
cwtl
xchg
shr
push
sub
xchg
pushf
xor
push
daa
inc
ficompl
pop
xlat
addr16
stos
adc
add
dec
jmp
mov
cmp
cmp
inc
jnp
xor
sub
data16
bound
or
push
sbb
and
and
adc
inc
rcrl
inc
jmp
push
xor
mov
aas
das
shr
imul
jl
movsl
xor
push
scas
cld
mov
mov
imul
bound
repnz
push
add
cmp
int
stos
jns
inc
fs
cmpl
test
sub
sub
add
arpl
aam
jb
mov
pop
sbbb
sbb
and
and
shl
add
or
arpl
je
out
add
jge
sub
dec
add
or
push
scas
loopne
pop
dec
aad
mov
xchg
pop
loop
dec
stos
xchg
mov
nop
mov
sub
cmp
or
mov
add
nop
clc
or
sub
push
add
adc
nop
push
pop
out
push
dec
add
aas
sarb
orl
imul
rorl
or
mov
outsl
and
loop
or
inc
push
cmp
xor
xchg
fcomps
push
sub
push
shll
xchg
pusha
adc
push
add
mov
xchg
lods
pusha
dec
mov
inc
or
jns
sub
pop
pop
mov
repnz
jmp
mov
das
sti
or
out
aad
jge
lea
sbb
sti
xor
or
add
neg
mov
add
xorb
sbb
pusha
adc
mov
push
mov
out
or
imul
add
jnp
sahf
ud0
lahf
push
outsb
movsb
adc
add
adc
cmp
adc
jecxz
adc
sbb
lcall
das
push
out
sub
das
fsub
pop
dec
push
sti
gs
add
jmp
xchg
add
lret
and
icebp
clc
push
mov
cli
add
movsl
sub
out
fwait
rorl
jg
in
or
lret
mov
sbb
mov
jmp
and
mov
mov
xchg
mov
adc
xor
jmp
pop
add
repz
add
sub
clc
jge
add
bnd
pop
pop
call
add
inc
pop
pop
dec
push
imul
ds
inc
push
imul
pinsrw
or
fisubl
mov
add
or
pop
mov
and
arpl
ret
push
adc
mov
add
mov
mov
loop
subb
mov
mov
es
daa
popf
jo
or
mov
inc
out
pushf
push
mov
or
cmpl
mov
cltd
push
or
leave
insl
hlt
mov
mov
std
cltd
cmc
push
in
pop
dec
lcall
xor
in
push
add
faddl
sahf
xchg
cmp
adc
stos
cmp
jmp
mov
dec
aad
inc
or
test
in
es
lds
mov
aad
in
sbb
xor
subb
addb
adc
jmp
shll
dec
lret
rorl
push
jmp
sti
lcall
dec
test
jg
movl
outsb
push
add
push
xor
push
xchg
test
lahf
sub
adc
pop
rcll
loopne
sub
adc
mov
jmp
test
cmp
mov
jne
jmp
out
adc
adc
bound
test
mov
jl
test
push
pop
ret
jg
sbb
or
push
and
mov
adc
push
inc
ljmp
inc
cmc
xchg
fwait
test
rolb
pop
dec
or
cmp
mov
cmp
inc
push
or
pop
fldl
sub
test
pop
mov
push
jle
pop
xchg
cli
nop
in
pop
sub
xchg
rolb
dec
not
aas
or
sbb
fnsave
mov
and
sbb
xor
int3
shll
shlb
loopne
or
les
lock
sub
xchg
cli
pop
and
ljmp
fwait
loop
xchg
ficomps
inc
or
iret
rorl
and
daa
push
fistpll
add
add
cmp
push
or
fcomps
scas
adc
mov
or
imul
mov
mov
push
sbb
cmp
pop
or
shlb
out
aas
fisubl
xor
add
jmp
mov
loopne
es
dec
daa
fdivr
cwtl
push
dec
pop
aad
add
jb
add
or
test
and
out
addb
inc
jb
xchg
fs
ret
add
add
xor
inc
xchg
sbb
pop
cmpsb
je
icebp
xchg
loopne
stos
pop
cmp
push
adc
push
mov
daa
or
push
aas
mov
push
mov
mov
jmp
std
cmp
insl
and
gs
mov
ja
lcall
lock
mov
add
inc
movlps
pop
pop
xorb
sub
push
jle
mov
xchg
mov
es
xlat
xchg
ficompl
pop
or
fwait
jg
sub
sbb
daa
pop
sub
sbb
jnp
cmp
adcb
pop
dec
jmp
imulb
dec
xor
jae
imul
xor
aas
aas
repnz
js,pt
jbe
push
jp
mov
add
dec
inc
sub
divl
push
cmp
call
mov
xor
icebp
pop
cld
sarl
fmuls
shr
add
add
xchg
cld
leave
and
xor
jmp
cmp
mov
or
aam
xor
inc
or
mov
mov
and
xchg
lret
sarb
jno
inc
xchg
int
daa
push
cmpsl
es
mull
jecxz
xchg
pusha
push
sbb
push
and
pop
push
idivl
frstors
lret
pusha
out
add
ja
es
add
orb
add
iret
shrl
mov
in
into
pop
push
sub
data16
mov
xor
sub
jmp
orb
enter
xor
jmp
mov
mov
jl
cmpsl
jl
push
jmp
pusha
or
sbb
out
sbb
loopne
stc
push
or
add
in
inc
pmuludq
mov
mov
xlat
pop
dec
and
dec
daa
xor
xor
sub
scas
hlt
push
push
mov
mov
adc
jecxz
xchg
mov
shrl
inc
cmp
xchg
xchg
pusha
push
push
sub
dec
add
int3
adc
dec
fldl
adc
xchg
and
pop
pop
pop
pop
xchg
jmp
lahf
into
in
xchg
sub
subb
adc
mov
test
inc
test
dec
mov
and
or
mov
push
lock
pop
jo
pop
das
cmp
sub
test
mov
test
cmp
subb
xor
push
push
ds
xor
fldl
dec
mov
sbb
pop
aam
jo
mov
in
jno
aas
fsub
sub
adcb
shlb
loope
xor
mov
or
data16
mov
addb
add
cmp
loopne
js
jne
inc
sbb
fs
push
pop
call
and
mov
dec
mov
adc
jo
xchg
jns
pop
rcrl
in
insl
imul
fbstp
or
test
pushf
js
dec
and
inc
sub
sub
negb
jge
sub
and
push
mov
sub
dec
sub
das
push
arpl
cwtl
inc
push
testb
cld
push
cli
mov
pop
cmc
push
jle
fmuls
dec
lock
jo
mov
lahf
mov
dec
nop
or
testl
loopne
jmp
cmpb
fisttpll
xlat
popf
jae
and
jns
out
xor
mov
pusha
push
fsin
sbb
mov
push
leave
arpl
sub
push
dec
inc
jo
dec
rcrb
push
pop
dec
lods
or
push
pop
jmp
sahf
adc
stos
pushf
xchg
jmp
push
jb
or
jmp
out
ret
pop
call
lahf
add
out
jno
ret
fldt
jnp
fidivs
mov
dec
xchg
add
jae
cli
stc
push
mov
leave
add
roll
push
cmp
subb
andb
popl
push
cmp
sbb
in
mov
mov
lcall
jmp
ljmp
fmul
add
add
out
add
rcll
cmc
imul
xchg
and
clc
pop
inc
pusha
in
add
sbbb
and
dec
xor
add
aas
ja
dec
jmp
ret
sahf
loopne
fcoms
sbb
xchg
push
dec
rorb
les
pop
aam
out
pop
test
in
fst
stos
mov
mov
cmc
pop
add
add
xor
insl
orl
jne
cs
fldcw
dec
or
iret
inc
sbb
mov
sub
test
dec
jmp
inc
mov
push
pop
push
cltd
enter
jle
xchg
test
xchg
mov
ja
inc
cmp
je
jb
gs
sbb
in
es
aad
shr
inc
jg
rcll
add
pusha
jl
inc
mov
push
lds
mov
adc
mov
xlat
lahf
shr
xchg
push
pushf
xchg
ja
jmp
add
add
cmp
lds
sub
incl
mov
xor
push
dec
pop
jmp
pop
jmp
adc
adc
pop
cmp
push
cmpb
push
das
and
loopne
js
jmp
movb
jb
test
aam
pop
push
jecxz
add
loope
add
mov
dec
int3
mov
xchg
call
push
dec
add
js
xchg
xchg
in
cmp
push
mov
dec
add
aas
jmp
popf
sahf
dec
nop
mov
sbb
add
dec
xchg
not
push
push
xchg
adc
aam
adc
inc
sub
mov
andl
aam
rclb
ds
cwtl
xchg
test
sahf
out
mull
push
gs
out
cmp
or
mov
jmp
sahf
xchg
sbb
xor
in
call
and
shl
es
push
pop
pop
mov
and
push
cmp
cmp
fwait
push
push
mov
add
roll
or
mov
jmp
repnz
mov
decb
cltd
push
push
inc
roll
inc
xor
or
in
fsubrl
rorl
bound
sub
or
cltd
or
enter
adc
int
or
repnz
xorb
lock
cmp
mov
xchg
push
mov
sub
xor
inc
lahf
push
cwtl
lahf
aam
push
jmp
xor
sarb
adc
out
incb
inc
sbb
std
xchg
lods
in
mov
push
inc
or
jg
jecxz
mov
pop
or
and
jl
jle
scas
fisttpll
shlb
fmuls
sbb
ret
sbb
daa
adc
mov
imul
nop
mov
ds
sub
jmp
push
jnp
inc
enter
cltd
cmp
jns
sub
cmp
dec
ljmp
test
and
in
stos
push
adc
jo
popf
or
push
or
add
jg
mov
hlt
push
and
pop
fidivrs
pop
dec
add
mov
addb
push
mov
cmc
xor
jmp
jge
sub
scas
xchg
add
add
and
les
sbb
or
inc
adc
add
add
pop
and
jmp
stc
xor
jmp
inc
push
test
push
outsb
xchg
pop
notl
fwait
popw
gs
adc
ljmp
fs
and
fnstsw
inc
xlat
rorl
cmp
jle
fcomip
sbb
cli
mov
push
pusha
daa
adc
imul
jb
mov
adc
lcall
pop
pop
pop
inc
cmp
lock
or
push
icebp
shr
ja
in
dec
jno
in
movsl
ja
and
push
mov
or
xor
fldt
and
mov
inc
xchg
push
mov
jg
mov
bnd
cmc
xor
inc
mov
jbe
jo
pop
pop
mov
shlb
ljmp
and
jno
add
out
inc
test
and
mov
sub
add
and
insb
dec
mov
add
pop
inc
dec
into
clc
mov
xor
mov
inc
xor
daa
std
stc
sbb
sub
or
sti
jne
scas
lahf
popl
cmc
cmpsl
movsl
adc
repnz
xor
fsubr
jg
fdivp
pop
push
dec
lea
mov
cmp
cmpsl
repnz
mov
sub
popf
hlt
cmp
cmp
ficompl
popf
lret
pop
lret
jb
aas
push
idiv
addr16
sbb
push
push
add
push
dec
incl
mov
lret
sub
ss
cmp
or
es
xadd
mov
je
clc
test
leave
push
pop
popf
push
pop
fcompl
in
repnz
roll
pop
push
push
sub
jns
xchg
pop
test
inc
mov
and
bound
cltd
xor
outsb
out
sub
sbb
vmovupd
sbb
movsb
addl
pop
mov
lds
call
xchg
sub
fs
std
jl
inc
cmpsl
push
jmp
mov
and
add
add
jp
cmovne
jmp
push
repz
shll
lods
mov
cmp
push
mov
mov
pop
xor
jnp
stc
pop
push
jmp
fstpl
sbb
bound
cmc
ret
add
xchg
add
push
mov
mov
hlt
jo
xor
faddl
mov
push
pusha
leave
out
sbb
push
mov
mov
cwtl
xlat
pop
or
out
mov
ret
push
sbb
loopne
mov
sub
imul
call
or
rorb
das
mov
mov
pop
out
add
adc
pop
jmp
mov
mov
jge
insb
pop
push
or
andb
mov
stos
scas
mov
js
and
imul
fcmovnbe
sbb
shr
add
ret
dec
or
push
in
dec
dec
push
jmp
cmp
mov
mov
jb
aaa
add
xchg
lea
pop
push
hlt
in
dec
adc
sbb
push
fldenv
mov
in
jns
jl
push
xlat
mov
mov
stos
in
dec
lcall
mov
leave
push
pop
xchg
adc
pcmpgtw
pop
sti
add
icebp
inc
or
jmp
enter
add
push
add
mov
inc
push
sub
adc
or
scas
pop
fidivrl
or
popf
lock
shlb
stc
pop
imul
shrb
ss
inc
push
pop
fimull
dec
push
xor
jo
cmp
add
mov
and
scas
rol
pop
outsb
jnp
shl
pop
sub
femms
fldenv
push
add
out
aas
pop
xchg
inc
pop
std
cli
pop
xchg
add
loop
sarb
cltd
frstor
dec
mov
std
repz
or
push
jp
pop
xorb
xchg
lods
clc
shr
popf
lcall
sbb
xchg
in
xor
inc
das
fisttpll
jmp
rclb
mov
pusha
cwtl
dec
adc
js
pop
enter
dec
push
fwait
ds
lahf
jns
fucomi
daa
push
pop
push
push
hlt
popa
or
call
shr
cmp
lcall
sub
cmp
jmp
test
xorb
scas
push
mov
icebp
inc
es
sub
or
jg
andl
push
test
jns
pop
in
sarb
mov
inc
cmp
movsl
inc
jo
into
aas
lds
cli
rcrl
pusha
xchg
adc
test
jge
mov
mov
repz
adc
xchg
xchg
push
lret
rolb
cli
cli
notl
pop
jmp
icebp
stos
dec
pop
fisttpll
push
dec
jmp
inc
lock
subb
test
fsubrs
jg
add
xor
outsb
push
in
cmpsb
add
out
pop
shr
iret
mov
mov
dec
aas
loop
daa
ljmp
add
mov
mov
aad
ja
push
stos
and
shrb
ret
cmc
xor
add
inc
push
mov
xor
lret
sub
fisttps
ljmp
jg
push
sbb
testb
push
push
icebp
fistl
xchg
push
inc
cs
aam
lret
push
iret
jne
xchg
push
mov
or
xchg
push
adc
cvttps2pi
sbbb
repz
inc
jle
adc
ljmp
jmp
ja
mov
jmp
mov
push
mov
adcb
inc
js
pop
rcrb
inc
ror
aad
add
push
insb
sub
shll
outsl
add
jl
cmpsl
fldl
cmpsb
push
or
pop
push
pop
mov
shrb
jmp
sbb
xchg
adc
lahf
add
sub
xchg
xor
and
fisubrs
insl
jmp
ljmp
addl
loop
sbb
add
xor
cmp
sub
fsubrp
es
xor
pop
jg
sbb
pop
inc
mov
shlb
cmp
dec
dec
icebp
push
das
cmp
les
rol
inc
outsb
lea
pop
imul
push
jae
btc
mov
scas
sub
fistl
xor
dec
push
pop
add
jno
fsubs
jns
mov
pop
cmc
loop
out
pop
rclb
pop
out
hlt
inc
pop
inc
cld
adc
push
enter
inc
cmp
push
loope
addb
adc
icebp
inc
fwait
cmc
ficomps
mov
pop
mov
or
jne
cmpsb
mov
cld
jbe
jmp
js,pn
mov
nop
xor
lahf
aaa
adc
mov
sub
pop
inc
icebp
sbb
cmp
ds
inc
or
sbb
push
lret
mov
test
shlb
jns
pop
mov
or
mov
pop
pop
sub
dec
es
xchg
push
jmp
inc
pop
out
dec
and
rolb
sbbl
fisttpl
jmp
xor
inc
test
sub
popf
je
mov
sub
test
push
stc
das
xchg
stos
xchg
push
push
jmp
fwait
ljmp
aas
mov
xlat
and
jmp
mov
add
jo
jmp
jl
rorb
jno
or
mov
int
sub
adc
movsb
add
cmp
or
test
sub
pop
es
pop
notl
test
loope
add
mov
inc
jp
push
stc
jg
mov
xor
pushf
push
dec
mov
lahf
pop
shr
mov
or
addb
outsb
js
cmp
adc
jne
xor
notb
or
inc
popf
mov
push
in
cld
add
xchg
call
push
inc
or
cmc
in
vmovdqu
mov
jg
xchg
stc
pop
mov
mov
aas
sub
mov
pop
call
leave
ds
cs
or
inc
pop
xchg
mov
mul
cmp
pusha
pop
add
call
or
faddl
arpl
or
inc
in
mov
push
negl
repnz
test
sub
or
pop
add
out
jae
je
data16
sbb
add
cmc
shrb
xlat
adc
jmp
cmp
mov
insb
lock
xor
cmp
push
not
jns
ss
in
sub
push
inc
into
inc
push
mov
inc
scas
add
xor
adcb
neg
fst
test
inc
pop
adc
pop
and
ret
testl
mov
push
pop
or
pusha
rorl
jb
jge
daa
xchg
stc
push
aas
adc
fsubr
add
mov
addl
add
mov
sarb
test
inc
or
xor
lock
jecxz
lcall
adc
stc
das
lret
pop
dec
xchg
push
mov
push
xchg
loopne
lea
pop
aam
pop
push
cmp
sub
inc
cmp
popa
xor
rorl
mov
push
add
dec
and
cmp
inc
daa
jnp
pop
call
jno
shr
in
xchg
jns
test
sub
mov
call
xor
push
mov
inc
inc
push
push
xchg
ret
sti
aam
pop
in
pop
popf
je
jb
lds
push
cmpsl
pop
popf
dec
lahf
push
ret
ljmp
inc
mov
clc
movb
or
lock
push
sub
inc
sbb
jg
jge
and
jl
loop
icebp
jge
in
mov
leave
jo
cs
sbb
fadd
push
jmp
adc
sbb
stos
add
shr
sub
dec
jbe
or
cmp
push
jmp
mov
inc
shr
cmpb
cmpsb
xor
jmp
add
push
or
inc
pushw
out
jno
cwtl
fists
jp
sub
aaa
aam
mov
pushf
dec
test
adc
rolb
jmp
sbb
out
xchg
je
jne
jecxz
in
sbb
mov
and
jno
popf
cmc
xor
jmp
ljmp
inc
adc
fists
mov
daa
pop
notl
jl
dec
lds
in
sti
mov
pusha
push
nop
push
test
mov
jmp
push
push
loop
sarb
inc
sub
push
sbb
fldl2t
push
pushf
out
testb
adc
jmp
push
push
fldt
hlt
xor
int3
in
popf
lahf
lds
int3
adc
jl
pop
xor
imul
jmp
shr
imul
adc
cli
dec
inc
repz
test
and
dec
movb
jge
and
out
cmp
push
push
fsubl
imul
clc
fcompl
adc
popa
pop
sbb
inc
aad
jnp
shr
in
and
lods
mov
push
jo
stos
mov
loopne
pop
pop
call
add
je
mov
mov
cmc
xor
int3
ljmp
inc
or
and
icebp
add
mov
adc
popa
push
sbb
inc
movsl
inc
dec
xadd
in
js
mov
div
push
push
jmp
fbstp
dec
pop
mov
adc
lahf
lods
jmp
push
xchg
ret
sti
std
xchg
pop
pop
push
divb
add
add
rolb
pop
pop
cwtl
adc
cmp
mov
addb
xchg
pop
popf
and
sub
fadds
int3
ret
push
or
push
cli
xchg
sub
ds
cmp
push
pop
sub
out
idivl
push
xchg
pop
mov
inc
inc
jl
jg
adc
mov
or
dec
fcmovb
add
add
and
ret
jbe
or
pop
sbb
lahf
adc
arpl
pop
or
mov
jmp
dec
leave
sar
stc
mov
adc
jb
jmp
mov
mov
popa
ret
shl
push
add
fwait
xchg
not
test
jmp
add
out
shlb
in
nop
into
or
sub
test
or
mov
jmp
ret
aam
cmp
rol
out
jbe
push
inc
cmpsl
sub
sbb
mov
dec
neg
jmp
sub
add
push
call
lock
lret
lret
pop
in
pushf
cmp
dec
and
insl
mov
fnsave
sub
fucomi
rolb
mov
data16
jno
rcrb
push
mov
lcall
lods
add
out
mov
dec
push
icebp
sahf
inc
fucomi
stos
fcom
mov
call
sub
cmpsl
push
mov
insl
or
xor
sub
push
sbb
and
mov
mov
sahf
push
inc
dec
js
scas
add
jle
jmp
fadds
daa
push
not
jmp
jl
and
jmp
pop
jge
in
loope
aaa
hlt
mov
xchg
icebp
mov
fcompl
sbb
sub
jp
fdivrl
push
xchg
adc
addl
jne
mov
cli
dec
lods
aad
ja
jecxz
fldenv
fs
ret
and
add
ds
add
dec
out
mov
sbb
xchg
dec
jg
out
or
arpl
push
sub
xor
repz
icebp
cli
xor
rcll
cmpsb
jae
dec
shrl
pop
lods
hlt
adc
nop
cmpsl
sahf
and
push
fsubs
and
xchg
or
xor
mov
sbb
add
and
ss
inc
in
add
repz
out
add
lock
push
in
loop
push
add
mov
popa
jae
leave
push
pop
mov
ret
out
fldcw
xor
or
pop
inc
leave
call
jns
push
mov
outsl
inc
aam
add
cmpsl
in
fstps
push
sbb
push
test
or
xchg
jle
mov
div
dec
loopne
jmp
pop
cmpsb
cmpsb
dec
movsl
mov
add
in
lds
ret
sub
push
sbbl
cld
and
movsb
rcrb
or
push
mov
call
pop
jmp
les
push
jg
loop
out
pop
lahf
clc
push
mov
lock
fwait
jp
std
or
xor
adc
cmpsl
push
cmpsb
imul
addb
push
insb
rcl
test
lcall
insb
in
pop
pop
adc
xchg
scas
jecxz
lds
adc
orl
inc
add
mov
jle
loop
cmp
gs
enter
ret
jo
sbbl
bound
inc
adc
or
xchg
jnp
int3
xchg
push
jmp
inc
mov
and
rcl
xchg
cli
inc
pop
cli
cwtl
mov
subb
std
or
out
mov
add
and
pop
push
movaps
or
not
filds
idiv
stos
sub
push
lret
nop
popa
notb
dec
jg
push
add
imul
xlat
inc
adc
jo
sti
cmp
or
repnz
jmp
pop
pop
mov
sub
adcb
cmp
add
dec
enter
adc
dec
mov
data16
arpl
dec
leave
inc
and
dec
stc
loope
stos
push
in
push
pop
and
addr16
push
push
pop
cmpsb
lds
xchg
cld
jb
jb
jbe
imul
jle
and
mov
in
mov
loopne
mov
je
scas
mov
in
cmp
gs
mov
out
and
pop
insl
and
loope
nop
dec
daa
insb
aam
ds
cmpb
rcr
hlt
push
dec
aas
loope
rorb
jp
xor
pop
and
xchg
call
std
or
mov
push
sub
pop
int
jp
push
or
adc
adc
mov
add
and
pop
push
mov
out
dec
mov
or
fldl
loopne
mov
pop
jmp
adc
es
push
subl
inc
popa
xchg
rcrb
pop
pop
scas
pusha
pop
mov
mov
pop
stc
or
testl
jp
jb
add
repnz
cmpsl
lahf
xchg
mov
sub
shrb
push
and
and
cmp
popl
push
scas
movsb
jg
pop
jmp
or
jl
fbld
push
rcr
add
jg
cld
and
jo
jl
adc
adc
or
add
jp
sub
test
pop
ror
aaa
add
loope
dec
mov
jmp
rcrb
inc
add
movl
push
dec
or
adc
aad
add
mov
xchg
aad
ret
jmp
cmp
lods
imul
ret
inc
mov
xor
pop
call
or
xchg
pusha
inc
neg
roll
add
or
fbstp
aaa
add
mov
sub
dec
lock
cmp
dec
dec
loop
lds
int
cs
xchg
shll
std
sbb
rcr
jnp
idiv
repz
mov
mov
loop
push
push
pop
mov
jl
sti
pushl
and
pop
mov
testl
xor
adcb
dec
add
xchg
adc
outsb
cmp
dec
out
lods
jns
dec
leave
testl
sub
test
push
mov
sub
jmp
addl
jp
call
fnstsw
mov
mov
xor
dec
cmp
dec
and
jne
pop
lret
ret
adc
xchg
lret
xchg
jae
or
sub
pop
inc
add
inc
xor
orb
div
sub
popf
pop
out
or
pop
sub
hlt
jbe
add
das
shrb
cmp
imul
inc
pop
and
adc
lea
daa
add
jl
fcmovnu
push
or
shl
mov
lock
pop
mov
or
daa
ficoms
pop
add
mov
push
mov
enter
adc
add
std
outsl
inc
mov
dec
add
or
pop
hlt
adc
ret
pop
xor
pop
pop
outsb
mov
sub
clc
cmp
and
leave
sub
stos
mov
add
add
xor
jns
mov
cmpsb
cmp
dec
mov
stc
mov
push
jns
pop
add
push
in
cmp
mov
cld
in
cs
repnz
fsubr
stos
aam
sub
daa
stos
iret
push
movsl
inc
xchg
call
jb
mov
shrb
pop
cld
cmpsb
or
stos
push
inc
push
roll
cmp
and
inc
pop
jge
dec
incl
imul
daa
sub
outsl
mov
and
xor
push
inc
add
scas
icebp
and
sub
das
or
and
in
sbb
rcl
add
rcll
or
xor
cwtl
or
pusha
sbb
add
cwtl
je
sbb
sti
roll
and
mov
cmp
push
dec
popa
nop
inc
pop
push
lea
setne
adc
flds
fdiv
cmp
out
pop
and
mov
add
jo
pop
pusha
adc
jns
mov
push
es
jo
pop
rcrl
test
dec
sbb
sub
loope
or
or
je
cwtl
push
pusha
outsl
pop
mov
sub
ret
fildl
jecxz
insl
inc
insb
push
add
pop
cmpsl
es
or
aaa
xchg
aad
jnp
mov
lods
sarb
shrb
or
push
push
aas
inc
xor
fiaddl
in
outsb
or
inc
inc
push
movsl
inc
roll
pop
add
jle
xor
jmp
stos
pop
clc
or
jne
xchg
fcoml
fnsave
movsl
dec
mov
jmp
sub
push
push
dec
jae
arpl
jecxz
sahf
add
push
nop
in
out
fdivl
jp
jp
orl
sbb
adc
push
sahf
pop
lods
pop
hlt
mov
sub
adc
ret
flds
add
jg
insl
test
pusha
add
hlt
ds
sub
mov
sbb
cmp
loopne
mov
sub
or
cli
inc
mov
mov
pop
push
sub
add
clc
adc
mov
add
pusha
ret
scas
add
sbb
js
jmp
xor
and
cmp
lds
pop
cmpsb
loop
aam
scas
sbbb
cli
cmp
test
stos
push
jno
daa
xchg
jb
add
aaa
shl
aaa
add
sub
mov
xchg
ret
incb
inc
jo
sub
jmp
xor
enter
mov
mov
jg
pop
filds
or
jmp
add
dec
cmc
leave
pop
loope
js
dec
scas
hlt
and
adc
mov
xor
sub
mov
out
icebp
roll
es
dec
nop
add
fs
jno
das
push
push
or
push
ljmp
xchg
daa
ror
leave
aad
or
xchg
or
and
jle
dec
pop
mov
movsb
test
movsb
es
push
pop
dec
out
add
das
mov
push
mov
mov
pop
inc
jecxz
push
mov
push
dec
pop
aam
adc
and
jae
shr
shrl
addl
in
inc
cltd
xchg
sbbl
sub
xchg
mov
insl
aas
cmpsb
js
push
mov
adc
scas
pop
sub
and
mov
inc
nop
add
jecxz
mov
lock
mov
aam
pop
dec
fisubrl
sti
icebp
jmp
or
pop
mov
adc
int
sti
inc
pop
pop
pop
cmp
mov
dec
mov
minps
sub
and
aad
or
call
ret
pop
addl
dec
mov
popa
pop
add
scas
data16
adc
push
push
pop
jmp
aas
push
push
insl
push
push
mov
das
incb
dec
mov
mov
call
or
or
test
and
mov
or
add
out
bound
adc
inc
fsubrl
xor
cmp
sbb
clc
sbb
push
adc
les
in
push
inc
adc
std
sub
add
mov
leave
dec
add
pop
xor
cmp
das
add
push
inc
dec
dec
enter
pop
or
ds
inc
add
popl
mov
pop
mov
or
lods
cmc
inc
ljmp
xor
stos
push
loopne
or
sub
and
cmp
cmc
stos
and
or
mov
fiadds
mov
pop
mov
cmpsb
les
or
inc
sbb
cwtl
or
lahf
jge
add
bound
fwait
js
cmc
in
sbb
push
or
mov
leave
adc
adc
inc
sub
and
and
xor
inc
mov
push
je
or
mov
or
nop
sub
bound
or
push
inc
test
or
add
into
gs
addr16
dec
test
sub
dec
inc
add
sbb
or
push
dec
xorl
adc
add
push
push
push
or
xchg
add
push
add
aaa
add
dec
add
addl
mov
push
adc
andl
or
icebp
and
addl
imul
xchg
enter
mov
in
add
arpl
xrelease
or
jb
les
mov
test
or
xor
inc
cmpsl
mov
mov
popa
orb
ret
inc
pop
pop
inc
dec
sub
xor
imul
enter
mov
xchg
sbb
sub
repnz
xchg
adc
and
and
xor
jns
pop
sbb
std
in
test
mov
xor
sub
mov
hlt
pop
pop
mov
stos
inc
and
aam
push
shlb
mov
ds
xlat
sub
jae
sub
push
xchg
xor
jno
add
pop
add
push
add
cmpsb
incl
adc
jmp
ds
out
fisttpl
cli
lcall
aas
push
add
jmp
push
push
fsubrl
xchg
sub
pop
stc
xchg
lods
cmpb
adc
arpl
daa
lahf
sarb
jns
sub
add
cmp
jmp
addr16
or
imul
inc
inc
hlt
xchg
pop
out
dec
xchg
cmp
mov
pop
mov
nop
and
shl
or
cmp
xchg
not
into
or
sbb
pop
imul
push
mov
add
push
pop
mov
sub
push
loop
jno
repnz
xor
adc
jmp
and
mov
inc
dec
add
fcmovne
or
xor
inc
addb
cmp
lret
adc
mov
push
stos
jbe
daa
movl
jnp
nop
fiaddl
push
mov
pop
fwait
add
ret
xor
leave
mov
dec
mov
fsubr
jmp
out
pop
ss
inc
push
iret
mov
femms
sub
imul
bnd
in
mov
pusha
popa
mov
pop
inc
and
out
je
sub
data16
dec
inc
or
movsl
pop
push
inc
shr
shl
test
xor
lahf
mov
sub
scas
cwtl
xor
cld
rolb
int3
jmp
add
cmpsb
mov
pop
dec
clc
xor
mov
std
sti
add
sub
jmp
push
test
add
and
dec
jmp
or
sahf
mov
mov
fldcw
jns
fcomip
pop
test
and
filds
xor
adc
add
in
icebp
push
ds
inc
mov
sub
jmp
mov
sahf
jmp
jb
xchg
sbb
mov
xchg
es
loop
mov
sub
xchg
xchg
jo
or
fmul
jmp
popf
jo
pop
outsl
xor
mov
add
xchg
mov
pop
add
lock
and
xchg
in
lahf
and
push
xor
sbb
mov
jno
jnp
shlb
mov
cmc
mov
sbbb
repz
sahf
jae
in
dec
in
lods
aam
add
loope
mov
sub
xor
mov
imul
pushf
and
lea
es
dec
jge
inc
inc
ljmp
xor
stos
jae
stos
inc
std
push
pushf
mov
mov
enter
das
jmp
ja
push
in
jno
adc
call
push
cmp
push
mov
mov
fdivs
cld
leave
daa
icebp
cwtl
dec
push
in
xchg
pop
lcall
adc
mov
das
fbld
xor
inc
imul
inc
fs
addr16
into
dec
and
xor
add
pop
ret
adcl
aad
pushf
mov
dec
pop
jno
mov
aaa
xchg
mov
je
mov
ret
inc
or
pop
add
bound
test
jmp
or
or
mov
lods
cmp
push
mov
cmpsl
sbb
cmp
mov
jmp
pop
fisttpl
and
jmp
rcrb
mov
ljmp
aas
mov
jle
sbb
js
dec
and
je
rclb
mov
push
mov
add
sub
or
or
pop
or
xorl
add
add
enter
leave
stos
fists
jbe
mov
rcrb
push
or
or
and
adc
and
xchg
inc
out
adc
mov
sarb
or
dec
pop
add
push
bound
lahf
jb
push
xchg
and
inc
or
inc
ret
jg
fiadds
and
mov
mov
xor
dec
or
jb
dec
sti
mov
gs
orb
sub
sub
and
push
mov
cld
rorb
lcall
or
jmp
push
fdivr
mov
testb
lahf
out
icebp
cs
insl
sarb
or
sbb
into
les
push
add
jmp
shll
push
mov
and
push
mov
sbb
decb
lock
lcall
xor
jns
push
and
mov
pop
stos
loope
scas
cmp
out
sbb
insb
push
testb
sahf
call
sub
add
repz
pop
mov
shr
jl
cmp
ljmp
sub
insl
repz
in
adcl
rcll
mov
xor
mov
out
jl
mov
or
scas
clc
pop
xchg
out
sub
imul
fmul
jl
bound
loope
clc
cs
ja
and
adc
test
ja
add
and
or
imul
sub
mov
push
mov
pusha
sbb
mov
cmp
sub
out
arpl
repnz
push
mov
jg
push
mov
sub
out
push
not
sbb
dec
xchg
adc
shr
dec
pusha
push
mov
cmp
std
pop
imul
scas
adc
outsl
dec
sub
xor
testb
ret
push
sarl
dec
pop
jb
jns
lret
jmp
int3
data16
nop
sub
lret
loope
jp
rolb
dec
enter
mov
push
adc
pop
pop
lcall
jmp
stos
inc
outsl
mov
lret
movsb
testl
pop
jg
xor
andb
mov
pop
cmp
dec
repnz
sbb
xor
imul
jecxz
push
xor
pop
push
mov
sub
cmc
and
sbb
repz
sbb
lret
inc
ja
cmp
jno
cmp
cs
xor
and
in
clc
mov
pop
test
mov
sbbl
incl
dec
and
pop
inc
aas
push
out
adc
sub
dec
ror
adc
cmc
and
in
pop
add
cmc
and
xor
push
jnp
push
bound
insl
test
sbb
xchg
fcmovb
pcmpeqd
pop
dec
outsb
cwtl
jae
xor
daa
popa
pop
pop
mov
call
repz
and
dec
bound
jns
jecxz
mov
insl
mov
dec
xor
sbb
mov
mulb
shrb
and
sbb
test
push
push
sub
and
sub
lret
pop
imul
dec
lods
sbb
jp
stc
or
addr16
cmpsl
jl
fs
in
movsb
dec
mov
loop
fisttpll
inc
cmc
mov
inc
add
xchg
dec
push
mov
inc
mov
xor
jl
pop
pop
jp
cmp
xor
xchg
addb
shrb
popf
push
xlat
daa
adc
loopne
push
sti
jno
jmp
fildll
clc
mov
mov
lock
das
jns
ret
cmpsl
push
mov
shll
adc
div
sahf
ret
push
rcrb
mov
mov
and
insb
xchg
push
push
outsb
leave
pop
dec
mov
hlt
sbbb
sbb
out
adc
in
xor
fwait
xchg
add
add
or
pop
mov
and
test
inc
popa
cmp
xor
pop
cmp
addl
mov
pop
and
clc
or
inc
jo
scas
jmp
in
movsl
hlt
jb
jmp
mov
pop
and
mov
sbb
insb
pop
insl
cmpsl
pop
int3
mull
jp
dec
bound
push
dec
out
call
mov
cmp
and
ret
add
stc
les
outsl
rclb
pop
pop
adc
xor
or
xor
cmp
pop
popl
xlat
loopne
js
sub
inc
mov
add
jle
leave
pop
push
jge
lock
insb
mov
xchg
xor
std
pop
and
adcb
push
pop
mov
pop
sarb
addb
aas
or
divl
jno
stc
nop
add
mov
cs
jmp
mov
jle
in
hlt
sub
iret
repnz
jge
cli
dec
orl
incl
or
push
test
stc
in
jl
repnz
sbb
daa
push
mov
test
xlat
inc
enter
pop
lea
xchg
neg
or
jmp
push
ljmp
add
jmp
jns
mov
add
jle
pop
add
sub
jmp
jb
push
pop
jbe
jb
xor
pop
nop
sbb
cltd
cmp
scas
lods
xor
sbb
pop
or
sub
call
sub
pop
pop
ljmp
lcall
les
add
sbb
and
neg
imul
jl
ret
test
inc
loopew
call
xorb
jmp
and
add
add
cmpb
in
jae
mov
shr
hlt
jmp
or
outsb
orl
xor
les
push
adc
mov
pop
loope
jg
data16
addb
or
xchg
add
daa
cmp
inc
mov
cmp
cmp
or
pop
mov
and
jmp
or
and
mov
and
cld
add
sub
mov
pop
dec
cs
repz
aaa
outsl
enter
cmp
adc
pop
insb
jnp
and
inc
subb
mov
std
pop
pushf
les
loopne
and
push
xor
sbb
push
shlb
fbld
dec
in
adc
add
inc
sbb
jle
cmp
mov
jle
inc
or
push
mov
addb
xor
test
sub
xor
mov
mov
int3
push
inc
data16
iret
xchg
pushf
push
jb
xor
or
jge
pop
xchg
pop
mov
aad
les
add
lret
fistpl
sahf
push
ret
adc
outsl
inc
or
icebp
and
sub
mov
add
cs
push
pop
sub
ljmp
jecxz
inc
mov
dec
mov
dec
add
add
adc
shrb
mov
mov
mov
std
lahf
xor
jne
jle
add
dec
out
scas
pop
fwait
sbb
xor
loopne
and
or
fdivs
xchg
jb
jbe
or
add
idivb
rcll
cmpsb
add
mov
sub
sub
mov
jmp
orb
repz
dec
inc
or
cmpsb
push
in
pop
push
push
mov
xor
mov
in
popf
int3
xchg
rclb
dec
test
sbb
test
and
push
in
lahf
rcr
mov
xchg
mov
das
mov
jmp
push
andl
jo
cmp
mov
mov
push
sbb
clc
mov
sbb
in
daa
xchg
cli
shr
or
mov
es
std
mov
inc
ljmp
xlat
cmp
pop
outsl
add
mov
in
adc
stc
fsub
or
and
cmp
movsb
dec
mov
les
and
lock
add
add
mov
push
push
pop
les
pop
mov
add
inc
sbb
mov
dec
cmc
imul
pop
and
cltd
lds
or
inc
cmp
shlb
adc
add
js
fldl2t
out
sub
fcmovne
add
jne
and
jge
cs
into
dec
sub
add
fisubs
imul
sbb
jmp
test
and
test
sub
loop
inc
mov
pusha
pop
mov
add
pop
mov
xor
pop
in
mov
and
cmp
cmp
adc
jge
into
and
pop
jle
add
pop
xor
jne
mov
negl
clc
or
pop
daa
pop
call
xlat
jg
repz
testl
adc
jmp
adc
iret
pusha
ds
rcrb
movsb
test
scas
or
jbe
dec
je
pop
push
mov
lods
add
shrb
dec
mov
mov
xor
fistps
int3
push
mov
xchg
push
clc
adc
inc
push
scas
push
adc
es
lds
mov
fnstsw
out
dec
adc
jmp
xor
pop
push
pop
push
sub
repnz
xchg
cmpb
mov
es
add
and
nop
pusha
or
or
je
sbb
pop
ds
in
jmp
ret
sbb
dec
pusha
mov
adc
xor
pop
dec
xor
std
jl
adc
in
stc
lahf
jne
pop
xor
rol
mull
subb
dec
xchg
fists
jmp
lcall
dec
cmp
xorb
mov
add
jb
lcall
add
std
cmc
or
mov
cmc
stos
mov
mov
jb
dec
lahf
xor
mov
hlt
sub
sbbb
lods
daa
xor
cmp
lret
adc
cmp
mov
cmp
add
aam
sti
sahf
jl
js
daa
fsubrs
dec
pop
repz
inc
mov
sti
pop
cltd
fs
cmp
push
mov
ljmp
insl
add
lock
sub
sbb
push
jmp
jo
sahf
sbb
dec
add
mov
ja
das
popf
fdivrl
and
dec
jle
push
push
pop
or
sub
ret
dec
mov
push
subb
shll
jl
out
fsubr
or
stos
pop
mov
xchg
out
cld
cmpsl
push
cmp
addl
sbb
ret
test
jmp
xor
dec
fistl
std
jnp
loope
xchg
xor
pop
or
sbb
jbe
add
jo
enter
pop
push
mov
jmp
std
cs
daa
test
mov
adc
add
das
cld
stc
push
outsb
mov
cmp
adc
push
fldl
cmpsb
inc
xchg
or
add
jnp
addl
push
mov
lahf
sarl
dec
daa
pop
iret
aad
push
jmp
jecxz
sbb
pusha
imul
adc
fstl
add
cltd
push
std
dec
sub
pop
or
in
mov
push
jl
adc
clc
dec
popa
andl
adc
xchg
loope
ret
xor
pop
ds
out
sti
or
cmp
add
ja
push
nop
pusha
or
mov
paddw
test
mov
xor
ja
imul
cltd
popa
subb
jp
sub
or
sub
shl
imul
loope
cltd
dec
xchg
pop
loop
lahf
inc
out
jmp
xorb
cmp
dec
cmpsb
or
loope
cmp
outsl
and
xchg
sbbb
or
mov
adc
inc
lods
adc
sbb
mov
add
add
test
das
mov
fcomip
addr16
mov
push
cmp
jmp
mov
lods
dec
movsb
xchg
repz
imul
outsl
mov
push
xchg
scas
adc
jno
fldenv
dec
daa
sub
adc
mov
adc
cltd
mov
dec
test
mov
xchg
inc
jb
dec
out
sub
xor
fcoml
repnz
repnz
push
push
fbstp
je
jmp
in
jp
dec
sahf
adc
jge
data16
ds
xor
sysenter
inc
dec
imul
pusha
loopne
lahf
bound
rclb
sarl
mov
or
lret
ljmp
mov
jg
ljmp
inc
jno
dec
push
pop
sbb
xlat
dec
jle
fs
test
out
into
filds
mov
pop
popl
jg
in
rcl
mov
leave
push
add
xor
mov
cmp
pop
shlb
shl
out
repnz
std
fisttpl
xor
daa
jmp
test
inc
call
xchg
jl
inc
rep
dec
ss
mov
add
add
scas
imul
adc
popa
filds
shlb
outsl
jmp
sub
push
push
push
mov
orb
out
add
flds
push
or
or
andb
add
xor
aaa
ret
and
cwtl
add
rolb
pusha
jle
inc
jle
dec
stc
in
dec
lahf
xchg
cmp
movsb
outsb
clc
mov
shrb
add
cld
std
cmp
imul
sub
mov
and
push
sub
pop
imul
icebp
fnstcw
xor
dec
xor
popl
push
in
nop
out
dec
mov
dec
out
loopne
adc
je
das
dec
sbb
clc
lret
daa
mov
mov
inc
mov
push
sahf
leave
fsubr
adc
jmp
neg
inc
subb
mov
fbld
adc
jmp
fisttps
dec
jge
xor
mov
in
sub
div
adc
arpl
rcr
or
stos
add
filds
loop
sbb
jbe
lahf
clc
or
lods
sbb
jmp
push
pop
pop
mov
les
mov
arpl
push
repz
jecxz
into
orb
add
mov
ds
ljmp
dec
adc
or
sub
incb
jecxz
inc
adc
xchg
jl
daa
outsb
hlt
adc
pop
stc
subl
fldcw
pop
in
adc
mov
xor
jp
sub
add
orb
pop
pusha
push
out
push
mov
in
jne
mov
xor
lahf
add
inc
lods
repz
ret
push
iret
out
inc
and
inc
dec
test
pop
mov
add
inc
jmp
add
fsubrs
fptan
sub
pop
xchg
bound
mov
push
subb
jno
lods
or
insl
lock
arpl
xchg
jns
icebp
inc
out
lret
push
jae
pop
inc
jecxz
or
jg
pop
add
pusha
dec
jnp
incl
std
jmp
cmp
push
add
adcl
jno
and
and
mov
test
mov
mov
push
nop
adc
test
dec
push
push
in
mov
shll
icebp
dec
call
mov
test
int
jmp
mov
push
gs
dec
clc
push
lock
pop
mov
daa
gs
lahf
jno
lods
xchg
andb
jp
mull
dec
xlat
arpl
cmp
into
sbb
pushf
ds
and
add
mov
enter
fcmovnb
lahf
sub
jo
push
sub
or
add
xor
sub
add
jbe
hlt
jae
sub
jmp
ss
dec
lods
xor
cld
movsb
mov
sub
js
pop
pop
addr16
lds
fidivs
mov
sub
and
fidivl
stos
hlt
jmp
cltd
jmp
push
push
jmp
xor
pusha
loopne
jecxz
add
aas
dec
and
or
add
dec
stos
add
call
mov
pop
in
hlt
sub
add
xor
notl
jmp
pop
fstps
inc
mov
push
mov
push
mov
or
shll
fstpt
aad
sahf
push
add
jnp
add
pop
cli
fisttpll
mov
xor
addb
cwtl
xlat
fcmovnb
scas
push
negb
mov
gs
sub
dec
lret
push
push
gs
lret
leave
mov
in
jl
pop
add
ret
test
dec
and
add
jno
mov
outsb
mov
les
dec
cmpb
mov
jg
daa
jle
jle
inc
push
leave
imul
icebp
fisubs
and
outsb
xor
lock
xchg
and
loop
cld
aas
es
add
sub
mov
xlat
mov
dec
and
out
scas
and
push
mov
pop
jmp
mov
stos
insl
sbb
adc
ja
mov
bound
cmc
mov
push
sub
stos
or
and
pop
adc
sub
out
add
mov
scas
js
lods
pop
ficoms
leave
xor
sub
xor
inc
add
jbe
repz
cmc
jmp
xchg
cmpsb
jmp
pop
add
jmp
inc
add
shl
add
adcb
and
push
add
ret
clc
ficompl
add
icebp
call
pusha
mov
cmpsl
or
jae
mov
sbb
imul
pop
push
push
imul
mov
mov
in
gs
push
pop
inc
rsqrtps
pop
loopne
mov
inc
loopne
xor
sahf
jno
clc
pop
sbbb
jo
or
je
push
xchg
lea
lods
inc
sbb
mov
mov
addl
jmp
jnp
dec
js
add
sahf
sub
rcrb
mov
cwtl
jno
or
aaa
stos
add
jmp
jmp
cmp
shlb
sbb
and
mov
ds
mov
icebp
jecxz
mov
scas
cmp
js
sbb
and
push
xor
sub
test
xor
test
jb
add
and
mov
push
ja
xor
aaa
mov
std
jmp
xchg
or
popa
xor
fs
loope
pop
insl
jge
push
jb
xchg
fidivs
in
ljmp
std
mov
test
and
pop
push
jmp
sub
cli
pop
fsubr
insb
sub
inc
out
pop
add
arpl
ret
lods
push
int
xor
pusha
mov
mov
cmp
dec
pop
and
clc
xchg
mov
out
cltd
mov
dec
push
call
out
dec
push
js
adc
ljmp
loopne
fbstp
rorb
and
dec
ljmp
or
in
test
insl
mov
mov
add
sbb
dec
rclb
ss
xchg
ret
idivb
jmp
jecxz
push
mov
cli
xlat
jge
cmpsb
jmp
pop
int3
or
jbe
fsubrs
imul
pop
adc
jae
loop
push
push
cwtl
jno
add
pop
stos
shl
fbstp
punpcklbw
in
pop
mov
cmpsb
pop
dec
jno
push
jecxz
clc
add
inc
movsb
cmp
xchg
cmp
mov
add
pop
mov
repnz
into
ret
shlb
ja
sub
stos
xchg
push
add
mov
pop
add
pop
sub
push
pushf
aaa
out
fistpll
inc
add
repz
je
jp
clc
or
gs
nop
ret
idivb
pop
call
pop
xor
xchg
add
or
sub
mov
std
fs
jmp
fcoml
mov
or
add
das
sub
mov
lret
sti
dec
xor
xchg
or
mov
rorl
loopne
dec
push
xor
xchg
or
or
or
jbe
das
inc
test
outsl
repz
nop
inc
nop
fwait
xchg
mov
loope
subb
xor
push
inc
or
in
sub
pop
dec
add
adc
xchg
imul
mov
into
shlb
shl
pop
clc
inc
cmp
pop
popf
pushf
outsb
jg
mov
pop
xor
xchg
adc
ss
lcall
pop
dec
nop
sbb
lea
inc
mov
or
adc
dec
scas
and
mov
mov
iret
cwtl
jg
or
popa
shr
jne
ret
pop
cmp
repnz
inc
ficompl
js
mov
inc
mov
int3
add
bound
and
sbb
add
pop
push
mov
cli
jo
add
pop
push
mov
jmp
loope
roll
popa
add
mov
add
xlat
mov
jl
push
pop
leave
push
pop
scas
incb
cwtl
insb
ficompl
mov
das
mov
inc
lahf
rcl
dec
fldl
inc
daa
mov
mov
inc
xor
pop
cli
dec
mov
add
stos
inc
xchg
imul
nop
jle
neg
inc
shlb
test
fstpl
sub
jmp
jns
notb
add
mov
mov
and
lcall
adc
sub
out
call
out
pop
inc
xchg
mov
sub
pop
aad
inc
addb
cltd
dec
arpl
test
sbb
addb
inc
out
or
mov
lret
xlat
pop
popa
jg
in
mov
movsb
adc
xchg
cmp
dec
or
sbb
jecxz
cmp
sub
jle
into
dec
xchg
adc
jmp
sub
in
and
dec
and
rclb
adcb
lret
or
lds
test
push
add
adc
and
jg
or
and
in
fmuls
sub
pop
push
test
loope
movsl
jle
xor
adcb
into
add
dec
arpl
cmp
ret
mov
add
mov
mov
rcr
cmp
fildll
add
cvtdq2ps
rcrb
xchg
jl
add
fcomp
jo
jmp
inc
add
inc
xor
mov
sti
push
or
xlat
inc
pop
addr16
mov
or
or
inc
push
push
inc
jl
fs
add
pop
not
pusha
jne
sub
adc
xor
sub
shll
or
sarl
xchg
add
ret
sub
adc
or
inc
inc
fiaddl
push
repnz
mov
or
sarb
rorl
sub
aam
ja
cld
jp
stos
add
add
inc
jne
mov
push
pop
inc
in
mov
adc
fidivrs
nop
in
not
dec
mov
inc
or
or
adcb
xor
xor
rcr
mov
ds
scas
std
addr16
sub
xchg
add
insb
imul
push
xchg
sbb
leave
popa
fisubrl
test
and
pop
sahf
mov
xlat
pop
xchg
shll
mov
scas
jmp
inc
stos
jmp
ret
mov
pusha
inc
and
mov
dec
cld
andb
fadds
push
rcrl
cli
sub
adc
push
lahf
and
dec
mov
xor
jo
sbbl
filds
pop
xchg
and
or
jne
adc
icebp
flds
pop
ja
nop
mov
lods
sbb
shrb
cmpsl
mov
mov
addl
addr16
and
das
jmp
inc
cmp
mov
xchg
or
pop
push
das
pop
push
iret
pop
stos
sub
or
faddp
out
cmp
lock
sub
out
loopne
lret
dec
inc
inc
mov
bound
sub
arpl
add
sub
dec
jmp
jmp
cld
cmpsl
ret
or
lea
pushf
pop
fucomip
push
pop
jle
sbb
enter
loope
insb
enter
in
mov
add
call
adc
popf
loopne
pop
lret
js
xlat
rcll
cmpsb
pop
lds
imul
xchg
fdivrl
lret
jg
inc
repz
fs
fiadds
cmp
pop
loope
mov
out
popf
push
mov
out
push
enter
das
fildll
sahf
cli
nop
xor
mov
out
enter
addr16
xchg
lret
jne
mov
dec
fcompl
lods
and
cmp
xchg
cs
or
cli
andl
andl
push
lea
sub
xor
xchg
push
dec
dec
xchg
xor
mov
adc
scas
or
xchg
jne
dec
mov
repz
das
mov
sti
cwtl
push
lds
cmp
std
inc
stos
or
repz
jl
popf
nop
add
add
inc
sbb
add
orb
xor
rorb
loopne
or
xchg
std
push
sbb
add
cmpb
or
pop
xor
out
js
sarl
sub
jno
sub
pop
addb
mov
out
mov
push
dec
cmp
cmp
xor
mov
xlat
sbb
pop
mov
push
jmp
mov
ds
aad
pop
dec
stos
sbb
xor
jbe
mov
in
push
outsb
mov
mov
jnp
aas
sbb
into
rclb
setb
mov
jno
int
ds
sub
xchg
in
and
pusha
mov
subb
mov
push
in
cmpsl
lds
adc
pop
xor
jmp
add
or
cmc
bound
mov
stc
and
mov
adc
lea
in
jp
lock
push
cwtl
insb
add
sub
je
push
ja
fbld
push
sub
sub
jle
pop
sub
mov
fcoms
pop
add
inc
jmp
icebp
and
adc
enter
fsubrs
xchg
aam
rcrb
pusha
xchg
int
or
into
push
xchg
nop
lock
aas
mov
mov
mov
sub
add
repz
add
xor
sub
pop
stc
mov
js
call
aam
xor
out
fs
or
les
clc
cmp
add
cmp
pop
or
mov
fisttps
fsubs
inc
ss
inc
addr16
dec
pop
in
fstps
xchg
pop
jle
add
xchg
not
lahf
or
inc
addb
in
xor
adc
cld
pop
inc
insl
lea
cmp
repz
jg
fimull
jmp
add
rcrb
mov
pop
jb
pop
inc
dec
test
pop
jl
pop
fisubl
push
push
lahf
push
mov
ret
ret
mov
pop
jg
std
inc
stos
adc
and
pop
jne
lahf
adc
in
js
test
jp
or
xor
dec
cli
insb
mov
lods
dec
test
or
fcmovnb
jecxz
add
mov
lret
jmp
sub
stos
push
or
mov
push
mov
movsl
inc
jmp
adc
mov
jo
rolb
push
inc
jb
xor
push
pop
cmpsb
and
lcall
pop
push
mov
add
xchg
push
dec
push
icebp
xor
and
scas
pop
xor
pop
or
dec
int3
addr16
add
clc
sub
imul
scas
jmp
inc
add
mov
adc
dec
lret
xchg
mov
and
add
pushf
fsubrs
mov
cmc
push
xchg
inc
adc
jg
cmpsl
sub
mov
inc
loope
mov
xor
idiv
insb
add
push
push
xchg
movsl
fs
scas
rcrb
hlt
mov
jne
call
jmp
cmpb
or
sbb
and
inc
pop
add
pop
xchg
pop
ja
inc
push
pop
or
das
andb
jb
clc
hlt
dec
xor
aaa
add
test
sbb
lods
add
sub
sbb
or
adc
andb
xchg
into
out
mov
pop
les
icebp
in
jmp
add
out
cmp
sub
movl
jmp
mov
mov
xor
or
xor
or
xchg
into
or
xor
mov
addb
add
pusha
jle
push
xchg
cmpsl
aam
add
or
mov
push
dec
ljmp
xchg
arpl
insb
inc
rcl
or
sub
add
sbb
ljmp
mov
or
sbb
fucom
ljmp
jl
or
add
in
add
cld
popa
xchg
nop
das
pop
adc
je
mov
out
and
fldl
xor
xor
add
cwtl
pop
push
and
test
in
adc
inc
ret
dec
ja
push
cmc
stos
mov
pop
shrl
lret
test
repnz
aam
les
mov
mov
shll
sbb
xchg
fildl
mov
repnz
lret
push
icebp
add
daa
or
shll
mov
arpl
push
jecxz
jge
cli
mov
xor
ret
jo
pop
jmp
mov
repz
repnz
daa
data16
mov
pop
push
lds
ficoml
sub
orl
jl
xchg
out
and
ret
push
jbe
mov
xor
or
cmp
adc
mov
or
adc
sbb
sbb
idivb
js
jmp
mov
xor
and
sub
xor
scas
sti
cmpsb
fbld
jmp
push
dec
adc
jne
inc
and
lock
ret
and
pop
mov
sub
or
fcomps
add
popa
push
dec
xchg
imull
or
cmpsl
and
sub
sbb
not
adc
mov
or
je
xor
dec
add
shr
test
dec
orl
cmp
repnz
mov
mov
cmp
pushf
pop
inc
gs
push
lea
jecxz
lods
out
xchg
or
sysexit
push
ja
add
lahf
insb
fisubl
ljmp
sub
repz
stos
inc
iret
mov
pusha
stos
push
jmp
add
dec
ror
push
pop
ret
sahf
add
and
dec
pop
cld
out
aas
lds
cmp
ret
pop
xlat
icebp
in
popa
push
push
xchg
inc
pop
orl
add
xchg
sbb
loop
pop
in
jo
inc
repz
or
adc
xor
mov
mov
xlat
or
and
xchg
push
in
add
sub
sub
fidivrs
dec
sbb
ja
dec
andb
out
lock
pop
mov
dec
mov
loope
push
enter
cmc
divl
call
lock
fldl
xor
mov
sti
popf
sub
repnz
sbb
repnz
add
adc
add
pop
into
cmp
xor
ret
rorb
xchg
push
test
jmp
gs
das
aam
das
negl
xchg
fucomi
pop
sbb
dec
in
mov
dec
inc
fs
add
clc
daa
sub
add
mov
cmp
jb
mov
mov
and
ljmp
mov
inc
jmp
lret
add
or
testb
add
dec
add
fistps
cld
mov
inc
ja
xchg
mov
push
push
or
push
leave
cli
cmp
adc
xchg
ret
and
jge
push
data16
lahf
je
movsl
inc
rclb
into
inc
push
hlt
neg
nop
int
pop
adc
popa
xor
das
in
push
in
sbb
sub
mov
sub
dec
out
pop
push
mov
and
mov
and
adc
xchg
stos
out
sub
pop
enter
loope
sbb
xor
enter
outsb
adc
jecxz
xchg
ljmp
inc
sbb
shlb
and
add
add
inc
sbb
and
jecxz
nop
xchg
ret
mov
cmpsl
jne
jle
sbb
and
dec
in
stos
mov
popf
rcrl
call
dec
and
push
pop
mov
sahf
jmp
push
insb
sbb
clc
add
pop
out
test
sbb
and
mov
mov
sbb
xor
jg
lods
sub
popa
add
sub
leave
inc
or
cmp
xorl
jp
icebp
jge
push
xchg
lock
ja
dec
test
xchg
mov
mov
jns
lods
ja
sbb
sub
or
jmp
or
and
cwtl
jb
lret
or
inc
adc
icebp
jo
inc
sub
add
stos
add
cmp
lock
out
inc
dec
mov
shr
push
pop
ret
inc
mov
adc
shl
pop
mov
cmp
lds
cmp
xor
jmp
shr
push
jp
es
dec
dec
fdivl
leave
and
lock
add
jg
and
pop
xor
lret
inc
ror
mov
sub
jmp
shr
shl
push
sbb
mov
mov
add
pop
xor
pop
popf
les
ds
mov
jmp
daa
xchg
jnp
add
imul
sub
ja
into
into
add
pop
fistl
xlat
std
xchg
int
push
mov
jl
leave
mov
ret
in
vpmacsdqh
loopne
je
popa
aam
aas
push
loop
and
rorb
pop
iret
bound
mov
pop
xchg
pop
aam
sub
inc
shlb
and
das
test
loope
mov
rcrl
test
and
push
xor
dec
bound
pop
push
cwtl
mov
and
pusha
fdivs
lds
xor
add
or
add
push
sub
adc
mov
jo
push
mov
dec
call
or
cld
sub
pop
call
jnp
lods
xor
js
xchg
ffree
pop
sub
mov
ficoml
sbb
push
add
mov
loop
pusha
and
push
jmp
fisttpll
fsubrl
cmp
mov
fdivs
or
jmp
cmp
orb
jecxz
rsqrtps
daa
jne
xlat
push
xor
jmp
inc
add
pop
pop
mov
pop
and
fmuls
daa
mov
and
nop
das
add
sub
repnz
insl
loop
push
decb
dec
bsr
les
pop
push
push
pusha
mov
xor
cwtl
pop
pop
cwtl
pop
pushf
pusha
dec
out
imul
rolb
add
pop
push
cmpb
mov
mov
dec
out
cltd
mov
push
dec
cli
pop
jae
bound
dec
xchg
ret
mov
ja
add
cmp
or
and
inc
clc
sbb
or
add
pop
or
sbb
mov
jae
dec
xchg
ja
sarb
outsl
dec
push
mov
push
mov
xor
into
shrl
and
jmp
push
aam
pop
jbe
xor
pop
les
dec
add
mov
out
shlb
cmp
xchg
orl
or
fimuls
cmpsb
sub
push
sub
int
cmp
jnp
xor
mov
bound
pop
fstpl
add
mov
dec
insb
jle
mov
add
sub
sub
insb
adc
pop
enter
js
xchg
sbb
js
adc
xchg
sub
mov
jmp
dec
aas
mov
jl
aaa
test
or
notl
jb
mov
mov
inc
or
stos
pop
mov
ret
loopne
arpl
shrb
stc
mov
mov
lock
dec
mov
popf
add
push
mov
test
icebp
popf
cmp
fnstcw
and
mov
dec
inc
push
stos
push
jmp
lret
mov
or
pop
mov
mov
jmp
stos
pop
mov
pop
cmp
enter
and
push
sbb
test
decl
pop
sub
sub
jg
push
adc
roll
sub
inc
cs
loopne
loopne
rcrl
insl
inc
or
sti
sub
rolb
mov
shrb
mov
xorb
xor
repz
sar
lret
dec
mov
mov
icebp
bound
jno
jnp
nop
add
or
pop
pusha
test
xor
aam
fadds
mov
sub
cld
bound
and
sub
inc
rolb
shrb
or
xor
out
and
iret
inc
into
or
pop
dec
add
xor
sbb
test
loopne
push
jmp
dec
movq
in
jp
xchg
push
ret
pop
push
sbb
int3
rcrl
or
cmp
dec
cli
sub
call
sub
inc
or
out
in
or
shll
ret
imul
shll
addr16
or
dec
xor
cmpb
and
stos
out
mov
push
mov
cmp
ficoms
ret
xchg
fsts
push
mov
add
and
mov
cwtl
scas
dec
and
sub
into
cmp
ret
clc
dec
shl
pushl
xor
adc
or
add
add
shlb
mov
in
lret
mov
out
repnz
mov
mov
cmpsb
jbe
dec
aas
xlat
mov
mov
sub
cmp
jbe
pop
inc
les
or
sbb
pop
jns
or
mov
ljmp
repnz
push
enter
cmpsb
mov
inc
cli
das
add
shr
jmp
mov
and
test
mull
ret
add
lds
add
xor
ljmp
push
sbb
pop
ja
icebp
cwtl
jecxz
jmp
mov
push
sub
sub
xor
xchg
aam
xchg
push
mov
mov
mov
pusha
mov
std
inc
testl
dec
push
filds
fsts
jmp
lret
loopne
dec
pop
test
add
and
sbb
add
sub
or
fmul
dec
je
mov
jmp
cmp
sub
inc
dec
dec
add
push
clc
imul
push
jns
mov
or
push
js
addb
mov
push
pop
pop
test
push
lret
outsb
or
adc
sbb
jmp
cmp
pop
ss
push
push
in
adc
xor
cmp
std
or
lcall
mov
fcom
or
mov
pop
or
cmp
push
stos
xchg
pop
rcll
das
out
push
inc
mov
pop
sti
jbe
ret
sub
sbb
lcall
cmp
dec
jle
cmp
sbb
call
sub
cmp
pop
out
inc
insl
mov
lea
mov
sbbb
pop
imul
sub
clc
push
dec
sar
xor
arpl
cmc
or
cli
shlb
and
mov
pop
mov
mov
dec
rclb
push
sbb
xor
jmp
stc
dec
les
mov
mov
or
sub
sbb
movl
iret
add
std
jmp
cwtl
jle
inc
std
pop
cmp
and
push
out
pop
pusha
dec
push
pop
aas
jo
push
mov
or
jmp
xchg
not
or
movsl
mov
xchg
scas
ret
pop
or
insl
movsl
mov
pusha
fs
add
push
stos
mov
shrl
js
pop
addb
jb
cmp
and
shr
mov
mov
neg
icebp
or
or
jmp
mov
and
cmc
jmp
mov
sub
std
ja
pop
out
dec
dec
inc
inc
pop
add
jmp
pop
sti
nop
xchg
ret
xchg
cmpsb
bound
rep
jno
push
mov
xchg
push
out
and
mov
shlb
negb
dec
push
out
ret
mov
inc
mov
add
std
push
clc
jmp
cmp
ljmp
xlat
popa
nop
add
jge
add
nop
inc
orl
xchg
movsl
cmp
repnz
push
dec
adc
inc
std
push
addr16
and
jmp
loop
sbb
icebp
dec
mov
and
add
xor
push
sahf
pop
mov
add
inc
mov
push
cltd
jmp
jg
pop
les
pop
xor
pushf
das
pop
fldl
out
dec
push
hlt
std
sahf
insl
add
push
cwtl
lret
jae
adcl
outsb
mov
mov
add
and
aad
sub
or
ret
cmpsl
ss
dec
out
push
jns
loope
jmp
inc
jnp
push
lock
les
sbb
fchs
repnz
or
sub
push
pop
test
adc
jecxz
sarb
mov
popa
movsb
andb
in
mov
orb
add
mov
sbb
loope
xor
pop
pusha
pop
xor
dec
jl
popf
repz
push
fwait
jge
jecxz
cmp
jnp
mov
cmp
sub
lret
push
movsl
ja
in
push
notb
movsb
sub
das
adc
clc
decl
or
jmp
or
fst
iret
pop
jmp
stos
pop
and
xchg
daa
loop
lahf
pop
into
or
lods
pop
add
mov
inc
mov
in
subb
andb
out
movsb
sub
enter
sbb
mov
or
xor
push
adc
push
dec
in
lods
or
pusha
sbbl
xor
leave
cmp
add
daa
pop
arpl
pop
hlt
add
mov
scas
sbb
dec
fwait
xlat
xchg
call
cli
push
jl
pop
add
ds
jmp
mov
mov
push
add
fisubs
jmp
cwtl
xchg
imulb
pop
roll
lret
push
mov
jno
insb
add
push
sbb
dec
push
in
cmc
adc
add
mov
mov
xchg
dec
bound
mov
stc
pop
inc
fnstcw
pop
xlat
cmp
jmp
cmp
or
mov
cmc
pop
leave
ds
push
jmp
cmp
pop
mov
fs
cmc
ljmp
mov
xchg
in
inc
sub
test
inc
ja
and
lock
nop
pop
sub
push
pop
ds
cmp
cltd
mov
mov
sbb
je
pop
sbb
dec
xor
fucomi
xchg
lea
pop
xchg
inc
sub
dec
or
add
inc
ror
mov
or
sarl
xchg
add
inc
jmp
enter
push
mov
push
or
rol
cmp
xchg
xchg
rol
scas
addl
adc
movsl
rep
enter
aad
cmc
in
dec
ljmp
sbb
mov
add
int3
iret
leave
in
out
dec
xchg
mov
das
cltd
sbb
sub
dec
mov
sub
or
imul
add
add
dec
jmp
out
fwait
or
sub
cmp
add
mov
mov
into
xchg
xorb
fwait
adc
insb
dec
add
ret
sub
in
or
pop
inc
pop
push
push
test
add
add
add
js
push
pop
mov
pop
mov
mov
shlb
cs
or
aas
aas
sub
pop
sbb
dec
adc
pop
popa
je
push
xchg
adc
shrb
fists
or
iret
aaa
andb
call
dec
movsl
call
dec
push
ja
sub
xchg
arpl
and
out
add
test
or
rorb
imul
js
pop
or
jno
pop
mov
push
sub
push
nop
mov
popl
xor
push
fsubr
cmp
mov
jne
jmp
packuswb
push
inc
mov
rcll
mov
dec
mov
stos
mov
push
or
xlat
dec
das
fisttps
pop
dec
push
cltd
sub
pop
popa
push
cmp
popf
mov
push
popa
mov
sub
push
mov
es
or
pop
and
not
xchg
mov
popa
gs
pop
into
jae
jmp
jo
loopne
in
repz
out
jmp
nop
sbb
jg
movsb
loope
repnz
sub
mull
mov
inc
push
dec
orl
int
xor
push
jmp
inc
push
stos
popl
orb
mov
push
outsb
inc
inc
push
mov
pop
or
inc
dec
inc
mov
je
pop
in
cmp
or
fs
push
pop
mov
pop
push
adc
sub
pop
mov
cmc
mov
add
push
pushf
es
xchg
add
push
dec
push
popf
rorl
adc
js
in
sub
mov
daa
add
mov
and
mov
sub
jne
mov
pop
push
mov
mov
and
daa
xor
xchg
aaa
and
push
in
and
dec
mov
pop
and
pop
imul
xchg
pop
cli
inc
sbb
shll
and
loope
es
ja
out
pop
push
lods
xchg
push
xor
and
andb
and
push
mov
dec
mov
adc
and
mov
imul
movsb
in
xor
mov
cmpb
mov
cltd
inc
out
add
daa
fdivl
inc
and
adc
in
in
or
adc
jne
or
jmp
lret
lahf
shrb
dec
push
mov
add
repnz
loope
push
insb
sub
sub
sub
add
mov
adc
aas
or
xchg
fwait
xchg
jp
sub
mov
imul
sub
mov
out
mov
mov
mov
addb
das
push
femms
fisttpll
jne
push
sub
adc
cld
jmp
sbb
fistl
outsl
mov
test
push
and
push
jl
push
rcr
scas
sub
es
loope
pusha
je
lret
cmpsb
fistpl
std
dec
daa
test
push
adc
cmp
pop
pop
cmp
pop
mov
mov
cvtpi2ps
repnz
mov
push
adc
sub
fbld
push
inc
adc
xchg
bound
add
add
jbe
inc
frstor
dec
mov
sub
jmp
lret
mov
lahf
xor
pop
loopne
imull
out
mov
fwait
test
jecxz
pop
inc
mov
cmp
adc
jbe
push
jae
and
stc
pushf
jo
out
jg
out
add
jne,pn
jmp
jmp
bound
loopne
repnz
jae
and
sbbl
imul
or
ret
cmp
mov
add
cmp
xor
sub
xchg
jno
std
xchg
incb
dec
cmp
mov
sub
aas
lds
inc
shrb
aam
xorl
jo
or
popf
icebp
movsl
xor
lcall
jmp
fisttpll
push
das
sarb
jns
dec
jp
das
pop
mov
xchg
xchg
dec
add
push
outsb
add
or
sub
xchg
scas
sub
add
loop
shrl
cmp
push
daa
ret
sahf
sahf
popf
aad
sub
pop
sub
mov
dec
add
or
dec
xchg
sub
clc
push
cmp
ret
mov
mov
lret
lods
pop
jo
push
ss
xchg
int
enter
rorb
pop
mov
in
movsl
cli
nop
fs
jge
add
mov
or
xlat
repnz
mov
icebp
lds
movsl
jg
mov
or
repnz
pop
rolb
pop
mov
add
push
adc
adcb
hlt
in
addr16
sub
jbe
iret
fstl
lcall
jbe
sub
arpl
jnp
sub
push
mov
popa
push
into
mov
adc
lds
push
test
inc
xchg
mov
int
imul
adc
xor
sbb
ret
sub
xor
adc
pop
aam
cltd
push
sub
sbb
jne,pn
pop
jmp
inc
scas
and
aas
push
push
mov
xchg
ljmp
test
mov
lods
add
push
mov
imul
add
or
jmp
xor
dec
adc
xor
adc
movsb
or
pop
sub
add
sbb
das
push
arpl
fidivrs
call
js
dec
sbb
cmp
mov
jge
jmp
dec
and
rcrb
push
jmp
jnp
inc
frstor
sti
jp
scas
sub
push
dec
dec
pop
out
test
decb
pushf
mov
xor
push
mov
add
sub
jmp
repz
stc
jp
movsb
aam
clc
sub
clc
lods
out
popf
jmp
push
pusha
ret
imul
add
stc
cmp
add
mov
push
bound
ljmp
xchg
in
xchg
iret
das
test
sbb
lret
lcall
fs
add
ja
mov
pop
lods
bound
add
xor
or
jmp
mov
sub
mov
shl
pop
jno
cmp
ds
popa
das
ds
pop
shlb
add
nop
fiaddl
mov
xor
add
sub
push
ret
mov
or
jmp
push
cltd
add
pop
pop
xor
mov
add
cli
ljmp
ret
push
mov
mov
xor
pushf
add
stos
mov
or
pusha
and
decb
inc
jb
outsb
dec
mov
fwait
mov
or
or
jmp
mov
fmulp
push
push
adc
xor
adc
ret
mov
test
cmpsl
into
jge
repnz
push
add
cmp
aaa
dec
jne
dec
xor
out
jno
dec
sub
jne
sbb
dec
jns
test
sub
cmpsb
cmpsl
pop
je
das
pop
sahf
sbb
adc
sub
cmc
daa
add
sub
ret
pusha
push
cs
mov
dec
or
in
add
push
dec
ss
loop
mov
dec
add
jmp
test
sub
ss
or
fs
jg
push
jl
jmp
fmuls
jmp
in
faddl
ror
rorl
notl
mov
adc
xlat
push
mov
ss
adc
sub
mov
lds
xchg
sub
xchg
jb
fbld
pop
imul
fs
cmc
or
add
pusha
push
jmp
push
xchg
ffree
cmc
test
das
adc
les
aad
mov
jmp
xchg
xchg
out
mov
insl
test
pop
push
shll
sbb
call
push
shll
mov
xchg
pop
sbb
out
adc
xchg
adc
jbe
push
mov
ret
jae
int3
inc
iret
loop
aaa
jg
sub
xchg
rcll
push
dec
scas
scas
fisubl
fmull
lret
ljmp
arpl
push
fwait
testl
xchg
sub
movb
push
xor
pop
add
shrb
sub
out
add
inc
rolb
outsb
pop
adc
nop
mov
xchg
out
push
or
dec
lret
cmp
lahf
sub
dec
daa
out
mov
in
adc
dec
neg
mov
stos
mov
icebp
sub
bnd
or
in
mov
mov
popa
cwtl
xor
mov
ja
pop
jmp
loopne
add
popa
fs
inc
data16
je
push
adc
imul
inc
test
rolb
inc
push
jae
add
loope
jnp
outsb
aaa
shll
add
jle
aaa
add
xor
push
cld
xor
pop
rorb
mov
fdivrp
fs
mov
adc
cmp
adc
stc
sub
pop
push
push
shlb
sub
pop
into
test
shrb
pop
mov
cli
adc
js
xor
cmp
mov
into
call
dec
pop
orb
xor
push
not
pop
or
lret
repnz
xor
and
enter
cld
or
pop
mov
das
cwtl
sub
pop
ja
jns
and
pop
mov
mov
pushf
std
push
lcall
out
add
jecxz
mov
stos
add
jl
adc
testb
and
das
fiadds
es
jno
pusha
pusha
cmpsl
add
test
test
push
stc
mov
jne
test
imulb
popf
stc
scas
dec
xchg
adc
cmp
aas
out
push
adcb
aam
mov
call
stos
sti
sub
jb
jecxz
inc
pop
push
dec
ja
scas
dec
test
cmp
movsb
cmpsl
cwtl
push
xor
cmp
insl
jae
push
xor
imul
jg
cli
push
sarl
and
add
ja
push
popf
cmc
out
and
addl
inc
or
mov
shlb
inc
jno
ficompl
js
movsl
imul
jmp
pop
ret
loopne
fmul
push
testl
mov
popa
data16
add
inc
mov
test
mov
int
xor
adc
push
push
insl
stos
inc
xchg
loope
mov
sub
test
mov
pop
enter
pop
hlt
imul
sbb
mov
push
shr
andb
mov
ljmp
cmpsl
lret
mov
dec
push
pop
mov
shl
xor
dec
hlt
adc
push
rorl
lods
movsl
add
roll
loope
push
dec
insb
push
push
xor
scas
out
leave
pop
frstor
cmp
push
sbb
sbb
sub
mov
jno
or
push
imul
add
push
test
add
rolb
cmp
mov
repz
push
inc
loop
pop
je
call
test
sub
pop
xor
pop
sbb
sti
dec
jmp
cwtl
adc
stc
jns,pt
jbe
sub
pop
push
push
lds
jmp
es
loopne
pop
xchg
hlt
mov
in
mov
or
ja
aad
dec
cmc
enter
push
dec
mov
into
cmp
mov
xorb
lret
or
adc
in
add
adc
cmp
jae
sbb
push
inc
mov
jmp
shlb
jne
testb
aas
daa
mov
lds
and
and
mov
xor
and
push
or
xchg
jge
ret
daa
pop
call
aad
fdivrp
lock
add
cmp
and
fiadds
or
jns
jp
add
xlat
xchg
shr
add
jae
add
leave
shr
add
add
xor
pusha
repnz
lea
icebp
cmp
add
loope
pop
sbb
xchg
ret
cli
inc
sahf
fbld
push
mov
or
add
mov
dec
add
cmp
in
push
add
mov
or
js
imul
and
jmp
imul
xchg
push
add
add
sub
xor
mov
roll
dec
add
dec
push
jmp
js
add
mov
cmp
add
and
mov
int
fildll
repnz
or
dec
xchg
xchg
pop
mov
and
dec
sbb
jmp
ret
or
repnz
hlt
int3
or
xchg
shll
mov
cli
daa
add
std
cltd
pop
ja
aaa
jmp
ja
sub
push
inc
mov
adc
jg
dec
ljmp
sbb
add
xchg
insl
or
sub
mov
sbb
adc
mov
stos
push
pop
inc
mov
ucomiss
push
std
pop
pop
rorb
and
pop
xor
pop
mov
jae
add
and
js
leave
and
sub
and
outsl
inc
fidivrl
insb
add
sub
push
cmpsl
dec
inc
nop
xchg
icebp
sub
xor
js
ljmp
imul
cmp
iret
inc
jne
push
sub
stos
mov
mov
fwait
test
mov
pop
movsl
and
pop
loope
or
jo
push
mov
pop
cmp
add
mov
das
mov
inc
jmp
movsl
push
fwait
and
sub
repnz
mov
pop
mulb
sbb
adc
cmc
pop
cwtl
aad
jo
sub
mov
dec
les
jl
les
pop
mov
add
pop
ret
js
outsb
xchg
and
rcll
sub
andb
mov
xchg
adc
or
cmp
test
mov
add
fiadds
mov
fs
dec
mov
add
xor
ljmp
inc
sti
ret
xlat
ret
outsl
mov
jne
xorb
mov
decl
pop
mov
jne
outsb
pop
pop
jb
sub
aas
mov
xchg
mov
jmp
test
dec
scas
xchg
and
cmp
xor
or
push
or
xor
add
sbb
jmp
hlt
pop
jo
or
jne
lret
dec
test
ret
scas
sub
inc
pusha
sub
inc
mov
or
lahf
shlb
mov
mov
inc
dec
adc
sub
and
push
jmp
sarb
inc
mov
bound
lret
js
jge
mov
jg
aas
xor
adc
fnsave
or
jmp
pop
sbb
dec
push
dec
fists
jmp
jne
iret
shlb
mov
pop
jmp
pop
push
add
mov
call
mov
mov
pop
sub
sbb
dec
loop
leave
mov
les
ret
jmp
jge
push
xor
scas
pop
subb
in
lods
fldenv
and
pop
ret
sbb
push
lcall
xor
jmp
mov
fstpl
adc
es
arpl
add
xchg
sub
inc
out
mov
pop
test
mov
sub
jmp
or
sbb
addl
stos
mov
mov
cwtl
mov
jmp
mov
cmp
add
pop
adc
stc
cmpl
hlt
cmp
and
jbe
lahf
movb
sahf
jne
jle
sub
add
add
out
pop
pusha
int3
test
shr
aaa
roll
add
inc
cwtl
jb
lcall
cmp
jno
jmp
aad
pop
out
jg
push
das
jmp
daa
jne
push
xchg
pop
xchg
nop
aaa
push
push
mov
cmpsl
xor
adc
pop
adc
dec
lds
sbb
pop
add
add
sub
jo
push
push
push
aad
inc
xchg
and
xchg
stos
xchg
sub
rol
cld
pop
pop
je
add
pop
hlt
dec
dec
mov
loop
std
dec
mov
rcrb
shl
push
mov
cwtl
jns
adc
jmp
jl
das
fimuls
mov
jmp
jge
cmp
inc
mov
jge
add
xor
xchg
out
cmp
outsl
xor
pop
jnp
or
push
jmp
pop
add
or
data16
push
loopne
not
xchg
lds
aad
test
push
cs
aaa
jne
jnp
sbb
xor
icebp
cmp
in
and
push
fisubl
or
mul
mov
mov
jmp
or
mov
inc
add
adc
icebp
rcll
cli
sbb
fs
aas
push
outsl
mov
clc
jmp
or
loop
jnp
cmp
mov
inc
mov
aaa
pushf
lahf
loopne
loope
jnp
mov
sbbb
test
sbb
mov
popa
stos
dec
add
and
dec
or
add
adc
mov
insb
les
cli
lds
notb
leave
test
jl
test
adcb
addr16
cwtl
jg
pop
push
add
xor
adc
mov
pop
jecxz
out
lret
and
imul
shrb
outsl
loopne
imul
or
subl
add
jae
sub
pop
sub
aad
inc
jle
mov
es
sbb
hlt
lahf
jecxz
in
lret
xchg
movsb
or
mov
mov
jnp
sub
adc
out
mov
xchg
sub
add
mov
and
mov
lds
push
leave
xor
dec
pop
jbe
jb
jne
inc
cmp
and
jb
pushf
call
add
stos
pop
faddl
popf
clc
mov
bound
add
mov
ret
cwtl
jno
popf
adc
push
mov
sbb
icebp
push
cmp
das
js
adc
push
subl
adc
push
mov
mov
mov
sbb
jmp
add
call
add
ljmp
sti
add
enter
jp
add
mov
mov
aad
add
test
sbbb
add
add
pop
adcb
xor
js
xor
jmp
lret
mov
sti
pop
jmp
cmpsl
aam
adc
xchg
ljmp
pop
xchg
inc
and
mov
and
icebp
cmp
cltd
cmp
adc
pop
neg
ror
loopne
inc
loop
inc
mov
stos
sub
sub
jmp
paddb
loop
cmp
ljmp
jb
sbb
repnz
and
jns
push
aam
adc
xchg
shlb
push
xchg
daa
dec
pop
cmp
and
clc
loopne
mov
cmp
mov
adc
scas
mov
add
push
rorl
dec
jmp
cmc
xchg
mov
push
stc
cmp
mov
sub
sub
lods
arpl
push
add
add
xchg
fs
or
jp
cmp
or
into
inc
mov
dec
scas
das
lcall
jo
jnp
inc
pop
dec
pop
ds
iret
subb
sarl
stos
cmp
incb
rorb
lods
test
les
shll
pop
mov
sbb
push
mov
and
cwtl
repz
mov
jmp
out
push
out
mov
ror
sub
clc
sbb
pop
mov
mov
jne
bound
daa
nop
jb
dec
inc
mov
into
mov
adc
push
inc
adc
sub
jbe
or
cmp
cmc
subl
lock
add
out
sub
or
mulps
jp
mov
cmpb
fisubl
jecxz
sahf
out
rol
les
add
mov
mov
jg
and
add
mov
jbe
ret
mov
jmp
repnz
lahf
hlt
insl
xchg
ret
jno
imul
popf
in
sub
jmp
lds
or
fistps
sub
xchg
xchg
imulb
scas
pop
jbe
xchg
push
repz
test
cltd
add
or
mov
xchg
andb
mov
sbb
repnz
ljmp
pop
lret
out
lds
jmp
or
jbe
iret
xchg
cmpl
adc
xor
out
inc
pop
aaa
in
push
and
push
rclb
out
lahf
aad
ret
adc
lahf
mov
mov
jmp
or
popa
pop
push
fs
fnstenv
pmulhw
iret
out
js
jb
pop
dec
mov
pop
mov
xchg
jecxz
jmp
mov
sub
rolb
mov
mov
pop
ljmp
jns
jg
add
lret
push
fdivl
js
in
sub
and
cmpsl
je
pop
jmp
mov
je
inc
clc
cld
mov
or
mov
xor
in
mov
jnp
mov
rolb
dec
shll
mov
pop
sbb
outsl
pop
lret
push
inc
and
mov
jl
jne
rol
scas
add
adc
fnstenv
lea
lret
dec
push
cmp
xchg
or
sub
mov
iret
lret
in
ficoms
daa
addr16
test
pop
inc
xlat
and
daa
call
push
insb
imul
dec
adc
repnz
push
add
jmp
mov
jmp
ss
stos
lret
inc
mov
cmpl
inc
and
or
jmp
sub
aaa
xchg
adc
rorl
pop
mov
test
or
sbb
adc
outsb
test
xchg
add
fld
and
sub
mov
sub
sub
mov
xchg
mov
or
jbe
sahf
in
cwtl
or
xor
adc
mov
push
mov
inc
and
cs
or
adc
sub
xor
in
aas
and
pop
mov
clc
inc
sbb
in
shr
ret
int3
and
in
nop
std
or
adc
pop
mov
in
aam
add
in
adc
push
push
clc
or
ds
adc
adc
inc
fisubrl
jb
adc
pop
push
xchg
cmp
ret
mov
xchg
bnd
push
insb
or
adc
into
mov
bt
cmpsb
sbb
xorb
roll
fisubl
out
jo
jmp
add
jl
mov
cmp
sub
lret
dec
aas
dec
adc
lods
pop
pushw
stc
inc
push
mov
mov
xchg
cmpsl
aad
adc
dec
mov
or
or
add
mov
push
cltd
xor
aad
xlat
inc
mov
gs
mov
mov
pop
cmp
cltd
mov
out
xor
jmp
push
push
pusha
addb
pop
xchg
pop
mov
jmp
cmp
inc
inc
xor
out
fmull
sbb
popa
and
loop
inc
xor
pop
cli
and
ja
xchg
dec
lret
pop
lods
pop
imul
sub
jo
adc
xchg
and
repnz
movl
rorl
cmp
pop
insl
jb
cld
dec
cwtl
jne
mov
push
add
popf
pop
jmp
fdivrl
cmpsb
fwait
mov
push
add
out
jo
xchg
inc
xor
lea
clc
lret
scas
add
mov
dec
sub
adc
and
xchg
test
mov
jbe
inc
cmc
jne
mov
mov
ja
popa
adc
je
mov
push
jmp
add
inc
and
dec
jmp
or
push
xchg
push
call
jmp
inc
subb
push
or
dec
xor
repnz
stos
inc
insb
add
aad
mov
call
cmp
xchg
ja
push
popf
fadds
xor
inc
jmp
sbb
mov
push
xchg
jae
mov
dec
jg
aam
xchg
jmp
pop
xchg
filds
and
xor
inc
nop
in
mov
dec
pop
ljmp
sbb
xchg
sub
aam
mov
push
aad
call
test
pop
inc
pusha
add
or
or
nop
mov
xchg
mov
push
push
and
insb
xor
and
sti
das
or
mov
out
outsl
and
dec
jo
push
mov
loope
fs
test
cmpl
mov
call
sub
xlat
push
repz
popa
aad
in
inc
fimuls
lret
les
jge
nop
jecxz
aad
jp
mov
xchg
add
adc
clc
lret
idiv
sub
push
icebp
mov
xlat
xchg
push
mov
loopne,pn
mov
dec
cld
int3
add
add
dec
outsb
in
pop
adc
xchg
mov
std
jp
js
or
inc
mov
pop
mov
and
dec
imulb
dec
xor
and
xor
inc
lods
aad
xchg
lods
negb
ljmp
test
daa
mov
call
add
pop
xlat
pushf
cmp
push
push
pusha
mov
loope
sub
inc
leave
sub
mov
xchg
cmp
adc
popa
test
loop
jmp
movsb
jmp
pop
mov
sti
in
hlt
xchg
dec
cmp
imul
push
inc
lock
cmp
in
rol
pop
repnz
cmp
cli
xchg
in
mov
add
cvttps2pi
push
cwtl
mov
push
sbb
movsl
pop
push
ja
jns
pop
outsl
sbb
mov
hlt
adc
jbe
pop
fidivs
add
xor
adcl
jns
mov
jo
add
sbb
jecxz
ds
fildl
repz
pop
icebp
mov
sub
lret
and
mov
ds
add
jne
mov
or
pop
jb
sti
out
add
ret
push
and
cmpsb
sub
mov
bound
or
pop
mov
pop
and
call
pop
mov
lea
sti
pop
rcr
pop
sbb
test
and
pusha
hlt
inc
sub
pop
repnz
pop
call
ret
push
xchg
lret
cmp
push
xchg
clc
mov
xor
les
stos
mov
mov
insb
jmp
mov
mov
ret
mov
shrb
sti
adc
clc
fwait
scas
add
inc
push
or
adc
add
pop
push
xchg
sti
rolb
or
cmp
xor
out
adc
clc
lahf
pop
or
ja
rclb
mov
mov
cmp
clc
jmp
add
in
scas
mov
add
xlat
pop
scas
jns
or
pop
fstl
outsb
rclb
push
popf
push
fldl
repnz
dec
aas
adc
and
mov
jp
xor
cld
adc
arpl
push
cmpb
into
shl
inc
leave
ds
sbb
jmp
mov
xor
addr16
jmp
in
mov
sub
sub
pusha
cli
sub
sub
shrb
jecxz,pn
sbb
clc
test
pop
push
mov
dec
out
cmc
bound
or
push
gs
inc
adc
jmp
add
or
or
les
jmp
mov
into
xchg
mov
and
xor
movups
test
or
push
js
sub
jnp
hlt
das
lods
out
loope
push
mov
add
int3
idivb
xchg
loop
pop
xor
not
jne
pop
jmp
mulb
add
scas
add
shrl
inc
pop
cmpb
pop
fsubs
xor
popa
out
outsb
push
inc
scas
rcr
pop
push
mov
pop
imul
cli
cmpsb
lret
jg
repz
mov
push
jno
adc
cli
mov
movhps
fists
mov
aad
ror
mov
sub
jns
or
jbe
sub
sub
aad
mov
ret
add
ljmp
inc
stc
add
push
push
xchg
test
stc
out
inc
or
iret
mov
testl
xor
pop
jp
xchg
movsl
dec
ljmp
jmp
flds
nop
mov
push
ret
add
pop
rol
xorl
outsb
push
jmp
das
jae
movsb
cmc
dec
add
outsl
movsb
or
andb
insb
mov
push
shl
adc
mov
scas
sahf
incl
int
aam
sub
xor
xchg
dec
subl
out
sarb
pop
test
imul
mov
mov
mov
adc
clc
out
and
and
mov
mov
rcrb
add
jns
jmp
repz
mov
stos
pushf
es
mov
in
jle
into
pop
ss
popf
push
or
pop
stos
cld
xchg
inc
push
nop
out
push
adc
imul
mov
imul
cli
add
adc
bound
and
jnp
add
mov
or
scas
notb
adc
mov
out
dec
adc
jmp
mov
inc
sub
fwait
ss
sahf
or
push
pusha
shll
test
sub
mov
or
in
or
push
dec
or
add
sub
hlt
fsubr
fsubrs
clc
or
add
ret
push
out
pushf
push
xor
icebp
xchg
out
sub
jmp
ret
sbb
add
inc
xchg
dec
mov
fs
sub
dec
push
inc
aad
mov
jmp
add
jmp
pop
pop
les
ds
inc
and
jne
or
jmp
fisttpll
addl
nop
pop
mov
decl
scas
jmp
call
and
add
adc
cmpsl
sub
jnp
fildl
mov
cmp
or
cs
cmp
or
or
and
or
cmp
xor
sub
add
pop
test
mov
push
mov
adcl
adc
or
cmp
push
cmp
xchg
sub
loope
fadd
ret
push
out
loope
inc
add
mov
adc
push
ret
xlat
inc
out
in
add
sti
mov
jnp
sarl
add
outsl
jns
fsub
add
or
push
aas
pop
mull
data16
cld
mov
testl
jmp
mov
insl
or
dec
repz
movsb
leave
ljmp
pusha
das
push
mov
dec
adc
ljmp
pop
inc
inc
adcb
adc
inc
push
dec
jmp
mov
and
cmpsl
push
movsl
sti
push
or
adc
jle
push
mov
test
ret
pop
stos
adc
jge
insl
out
or
das
rolb
xchg
inc
mov
push
mov
and
jp
sub
pop
mov
inc
or
jns
enter
shrb
add
jne
inc
pusha
cs
push
ss
or
push
imull
mov
sub
std
cwtl
les
sub
in
xchg
cmp
in
mov
lahf
pop
sbb
push
ja
cmp
push
or
fst
pop
sarl
dec
cli
add
inc
inc
dec
mov
loopne
or
fisubs
in
mov
mov
mov
cltd
lahf
push
add
sarl
add
sub
rcll
std
xchg
aaa
rcrl
adc
lods
lcall
push
push
sub
add
jmp
dec
add
cwtl
scas
mov
test
inc
cli
xor
xor
jmp
mov
or
loope
xchg
add
push
add
xchg
xchg
testl
dec
jmp
add
dec
cmc
sub
out
aad
add
int3
pop
out
hlt
xlat
pushf
mov
not
add
add
cmp
xor
mov
es
push
or
iret
mov
xchg
iret
adc
and
push
jmp
sub
jge
clc
sub
mov
shl
ljmp
cmp
bound
xor
sahf
nop
adc
adc
add
and
popf
and
mov
add
lods
mov
lods
loopne
test
mov
je
cmp
iret
shrl
jbe
cwtl
in
ja
dec
adc
sub
jo
push
call
leave
xchg
and
dec
inc
jmp
data16
daa
sub
or
sbb
fildll
or
pop
les
jg
bound
xchg
sti
jne
dec
push
pop
les
dec
pop
movsb
push
pop
add
stos
push
mov
lods
and
scas
cmp
mov
cli
add
sbb
sub
shll
pop
ror
and
jae
das
mov
mov
out
inc
popa
mov
xchg
sarb
add
cmp
bound
mov
mov
sbb
mov
pop
cwtl
enter
push
idiv
sbb
xor
or
ja
mov
lret
pop
rclb
mov
jno
dec
dec
adc
std
mov
cmpb
jmp
xchg
hlt
rcll
sub
mov
jmp
and
jmp
push
xor
xchg
or
pushf
insb
movsl
sub
mov
movsb
and
xchg
jb
push
mov
mov
scas
pop
mov
xor
dec
icebp
daa
push
pop
mov
push
pop
pop
clc
or
incb
stos
leave
mov
cmc
push
cmp
cmp
jge
add
and
jmp
sub
invd
jp
and
outsb
xor
and
xor
iret
or
mov
add
popf
mov
mov
mov
inc
cli
mov
xor
dec
or
fsubrl
cmp
jbe
sub
mov
add
not
pop
xor
shl
mov
push
add
das
mov
fidivrs
jmp
cmpsb
loopne
jmp
push
sbb
push
xchg
adc
push
mov
leave
sub
pop
mov
rdtsc
or
adc
out
add
stos
add
add
loopew
pop
sub
or
add
xor
bound
pop
or
lcall
pusha
push
scas
hlt
or
insb
dec
pop
lock
pop
mov
bound
pop
dec
or
push
and
jmp
mov
pop
jp
mov
clc
jecxz
ljmp
mov
dec
mov
loopne
cs
add
pop
mov
push
push
push
push
sbbb
mov
and
sbb
scas
xlat
push
mov
pop
inc
cs
sbb
push
cli
pop
dec
add
in
pop
pop
pop
push
or
sub
inc
sub
jne
jmp
negl
cli
mov
and
fs
ljmp
dec
jg
ss
cmp
fdivs
or
cld
mov
lds
sti
pop
in
and
cs
ja
notb
mov
outsl
sub
mov
subb
js
ret
mov
aad
daa
jmp
popw
push
xchg
pop
push
cmpsb
sbb
add
jl
or
mov
or
and
ret
or
loopne
push
push
push
nop
dec
pop
test
stos
out
push
push
sbb
push
dec
mov
and
loop
fisttpll
fistpll
test
loopne
dec
jno
push
subl
js
or
adc
xchg
jne
pusha
daa
inc
loop
aad
fadd
ret
das
jecxz
xchg
test
addr16
fbld
sti
mov
mov
pop
stc
jp
dec
out
test
sbb
lahf
inc
add
sbb
pop
and
cmp
in
jge
mov
pop
nop
mov
mov
inc
pop
aaa
adc
mov
mov
cld
pop
mov
enter
add
dec
push
mov
insb
lds
and
and
or
push
mov
hlt
cli
xchg
repz
mov
push
fsub
sbb
jo
push
sahf
mov
cltd
add
flds
leave
add
push
push
mov
pusha
add
pop
jmp
jecxz
sbb
jb
out
dec
outsb
xor
repz
sub
adc
and
mov
push
or
or
inc
cmc
and
js
push
or
ds
imul
out
jae
clc
or
pop
push
push
jno
std
outsb
inc
int3
icebp
and
or
out
and
mov
stos
dec
int
pusha
sbb
cwtl
pop
sub
sub
push
dec
cmp
pusha
cltd
mov
sub
sbb
push
popf
fs
loopne
adc
jmp
bound
in
test
mov
pusha
mov
pop
leave
xlat
mov
cmp
xor
xchg
and
int
push
add
loop
ret
dec
dec
pop
xor
or
sbb
mov
in
dec
test
jmp
lock
xlat
or
pop
lea
mov
mov
and
insb
adc
lcall
imul
cmpsl
test
adc
loopne
jmp
out
dec
adc
popf
or
mov
cld
test
and
pop
test
test
in
mov
std
lock
jl
dec
push
ss
mov
mov
jmp
cmp
dec
pop
push
mov
rcrl
not
cwtl
jmp
sbb
xchg
jl
js
fs
adc
scas
dec
daa
add
push
fwait
loopne
neg
xlat
add
inc
or
test
mov
push
xchg
jecxz
aas
jnp
dec
pop
fiaddl
scas
push
test
jl
cmp
lret
push
and
cs
dec
int3
lods
cmpl
adc
movsl
adc
cmp
jo
sub
jge
enter
adc
mov
inc
or
sub
std
push
mov
mov
add
mov
pop
sub
cli
pop
add
and
inc
call
push
mov
add
xor
mov
push
mov
popf
stos
popa
jmp
push
push
mov
scas
or
loop
sarb
add
out
inc
aaa
pop
inc
jne
sub
push
or
jp
inc
jmp
mov
xor
add
mov
data16
arpl
test
ja
cmp
lret
pop
in
test
and
js
or
push
punpckhwd
mov
or
adc
push
mov
sub
out
das
negb
into
pop
mov
sub
loopne
subl
neg
push
push
jmp
or
mov
js
ja
in
or
xchg
mov
push
add
sbb
lods
or
or
and
mov
add
cs
mov
sub
pop
push
inc
xchg
xchg
inc
pusha
jmp
ds
inc
dec
loopne
outsl
adc
inc
mov
sub
inc
jmp
jg
int3
sub
adc
push
push
clc
mov
sarl
adc
mov
loop
les
xchg
lret
sar
ret
push
xchg
pusha
cli
adcb
gs
loop
xchg
add
xor
pop
and
pop
test
pop
daa
mov
test
jmp
xchg
out
cmpsl
adc
sahf
adc
pop
inc
int
jmp
mov
fs
jge
push
mov
mov
xor
or
push
cli
out
lret
pop
mov
adc
dec
popf
inc
cmovbe
rcll
adc
push
loop
or
add
nop
xchg
fisubl
xor
ljmp
add
adc
adc
das
insb
xchg
add
xor
cli
xor
xchg
out
divl
pop
jge
bound
dec
dec
or
xchg
clc
mov
sub
or
mov
pop
ja
mov
push
jb
jbe
and
push
int
xor
add
jbe
ret
je
push
ja
enter
lret
push
mov
pop
orb
mov
rcrb
jp
dec
xor
jl
fimull
or
jg
pop
dec
popf
pop
sub
rorl
and
pusha
das
daa
sbb
out
dec
sahf
imul
and
lret
lock
or
push
cmp
and
push
jle
or
push
jae
pop
sub
xchg
lods
dec
fcoms
inc
nop
xchg
add
data16
adc
shlb
sub
pushf
adc
jmp
or
test
sahf
aaa
cld
scas
pop
sbb
test
push
dec
test
rclb
xchg
pusha
and
jb
lret
xchg
dec
addr16
add
push
fisttpll
mov
inc
fists
ret
pop
and
cmpsl
shlb
in
popf
pop
push
fs
mov
xlat
mov
jle
add
mov
nop
xchg
cmp
push
mov
pop
sub
jnp
sarl
mov
imul
and
pop
mov
mov
movsl
fadds
ja
ljmp
sahf
cmpsl
add
fcoms
add
add
fsubrp
dec
jmp
ffreep
sub
js
mov
lods
mov
jle
bound
sbb
push
pop
popa
cmp
outsl
push
mov
js
mov
jns
jne
sti
jae
dec
scas
jns
add
jb
dec
ret
sub
add
cmp
or
icebp
movsb
xor
mov
push
push
ret
dec
push
clc
xchg
xchg
inc
sbb
loop
fldt
aam
rorb
out
xchg
out
xchg
enter
leave
lret
cltd
jle
add
jnp
test
loope
dec
pop
mov
test
ret
lods
mov
jge
insb
insl
mov
and
push
nop
or
mov
sbb
dec
xlat
push
cli
ret
sbb
pop
cs
shl
in
cltd
push
xor
ret
dec
pop
push
in
inc
ret
jl
inc
test
or
xor
dec
jno
jmp
idiv
and
add
push
mov
popf
push
shrl
icebp
lods
mov
or
mov
loope
leave
jae
push
push
nop
lods
dec
sti
clc
ljmp
loop
stos
lahf
xchg
movsl
push
push
in
mov
pop
or
or
and
pop
push
lock
jne
cld
cld
test
lods
pushf
rclb
lods
std
js
or
test
push
cmpsl
mov
int3
mov
dec
push
addr16
pop
mov
adc
pop
jns
mov
imul
test
adc
push
jg
push
add
test
cmp
cmc
ja
mov
shl
cld
mov
shlb
fs
adc
lahf
ror
cs
pop
mov
or
dec
or
push
movsb
lods
hlt
add
cld
addb
iret
clc
cmp
add
sti
pop
mov
lods
sbb
and
cmp
xchg
jb
mov
jbe
jecxz
xor
aas
add
mov
push
and
out
popa
scas
pop
clc
adc
push
push
pop
orb
movsb
pop
jmp
sbbb
mov
xor
push
dec
leave
out
cmpb
enter
pop
push
testl
seto
or
add
cmp
ja
outsb
mov
sub
jmp
lods
push
push
sub
loope
lea
fwait
adc
or
push
adc
jno
xor
xor
in
imul
not
mov
sub
pop
loope
outsl
loopne
lods
jno
ds
ret
mov
mov
mov
and
icebp
lcall
sbb
aam
jno
lret
cmc
inc
push
sbb
xor
jmp
mov
push
mov
sub
les
pop
mov
outsl
pop
sub
push
pop
add
pop
sahf
pop
sub
pop
jno
aam
loop
cwtl
or
mov
mov
icebp
fwait
and
xchg
pop
scas
sub
sub
ror
mov
cmp
jmp
je
idiv
mov
pop
repnz
sbb
fisubl
xor
xchg
scas
mov
ret
ror
jnp
mov
bound
xchg
std
sbb
int3
sub
or
sbb
cmp
add
and
negl
sbb
mov
push
add
add
mov
pop
and
or
std
adc
jmp
adc
mov
jp
movsb
cltd
in
orb
icebp
push
adc
mov
outsl
dec
and
xlat
jmp
sub
pop
pop
adc
mov
addb
sti
movsl
enter
mov
sti
xchg
xrstor
and
cmp
or
icebp
lret
sub
xchg
testl
test
push
mov
or
into
pop
dec
jmp
add
out
pop
or
pop
push
sbbb
and
sub
cs
xchg
push
addb
not
icebp
mov
in
in
dec
pop
out
inc
mov
js
pop
loope
pop
stc
inc
outsl
cld
mov
pop
stc
bound
dec
fidivrl
test
lret
mov
data16
out
int3
repnz
add
loop
push
mov
add
mov
push
xor
push
mov
mov
mov
ja
push
lret
push
pop
popf
inc
pop
mov
icebp
inc
mov
jbe
inc
sti
mov
pop
mov
pop
mov
test
test
or
sahf
push
pushf
sub
out
rcrb
adc
sub
add
mov
mov
jle
icebp
and
in
or
or
fsub
jbe
pop
pop
push
insl
imul
fistpll
jbe
push
cld
dec
jmp
das
xor
insb
outsl
and
daa
xor
in
mov
and
sbbl
jne
repz
mov
out
lret
ja
or
jmp
loope
sbb
and
mov
add
icebp
jmp
jo
or
xor
mov
mov
insl
scas
and
push
into
orb
pop
int3
xlat
rcrb
lret
loop
sarb
adc
insl
mov
xchg
es
daa
xchg
dec
in
or
jb
jo
lret
sbb
mov
lds
loop
cmpsl
jle
sub
pop
ja
push
jbe
popf
jb
lret
jecxz
push
aam
shlb
js
cmp
daa
jecxz
shrb
jb
mov
or
inc
out
mov
jnp
mov
pop
adc
in
daa
jno
daa
jae
leave
js
xor
adc
pop
jb
sub
and
add
mov
sbb
push
ss
in
sub
addr16
repnz
sbb
hlt
lret
stc
and
jbe
and
jge,pt
jge
fs
js
xor
push
dec
mov
jmp
mov
jl
push
mov
jecxz
sub
mov
jne
sub
pop
push
out
movsl
pusha
cmp
test
or
pop
subb
push
cld
into
mov
stc
fstps
shl
mov
lock
jb
jnp
pop
xor
and
test
cwtl
fucom
or
mov
adc
add
outsb
ljmp
and
jne
mov
lret
or
std
inc
fdivs
push
pop
xor
jmp
in
cmpsl
xchg
cli
sbbb
jmp
cmp
mov
int
push
inc
or
pop
test
shl
pop
frstor
clc
jg
mov
sub
pop
mov
ret
xchg
add
outsl
inc
xor
pop
xor
mov
fnstenv
mov
xlat
xchg
out
stos
aad
insb
xor
pop
in
push
aad
imul
jmp
pop
test
lds
add
shlb
jmp
xor
in
popaw
mov
dec
push
push
add
or
and
pop
push
pop
in
pop
rcll
jle
loop
adc
rol
cwtl
jge
dec
fisttps
add
stos
mov
das
add
add
ret
or
cmc
jge
andl
loope
pop
dec
cmc
incb
or
call
push
gs
push
dec
push
arpl
cmp
adc
fwait
nop
roll
in
and
xchg
add
pop
loopne
pop
xor
cli
adc
jmp
std
xchg
ljmp
mov
inc
add
mov
lock
jmp
or
loope
sbb
sub
out
push
ljmp
mov
mov
jb
mov
pop
ljmp
adc
jmp
sbbb
cwtl
pop
inc
fidivs
cld
mov
push
lea
scas
iret
mov
inc
clc
add
mov
or
cmp
data16
pop
outsb
push
pop
xchg
mov
mov
les
mov
xlat
cwtl
inc
xlat
subb
je
inc
sbb
add
enter
movsl
pop
mov
push
daa
out
push
icebp
push
pop
push
mov
cmc
loop
lret
push
add
or
cmp
repnz
lret
push
push
or
sbb
data16
sub
push
loop
add
pop
incl
jmp
scas
jecxz
add
testb
xchg
out
popa
pop
or
jmp
mov
lods
aad
cmp
push
jmp
jp
cld
pop
or
cmp
daa
add
mov
into
pop
inc
pop
shr
mov
xchg
repz
or
xchg
cmp
lret
daa
inc
push
inc
mov
rcll
sub
pop
push
js
fimuls
xchg
out
dec
push
inc
sbbl
sub
dec
sahf
adc
mov
rorl
movsb
dec
mov
jne
std
imul
push
and
inc
jo
jmp
test
ja
shr
add
repz
and
adc
jl
xchg
adc
xchg
ljmp
pop
lock
pop
nop
pusha
jmp
dec
add
inc
or
fdivr
xor
jbe,pn
dec
adc
xor
popl
repnz
or
adc
insl
push
out
and
adc
mov
in
add
pop
or
dec
orb
push
ljmp
data16
shl
fisttps
popa
fsubrs
scas
in
sub
sub
push
add
jle
push
jmp
andl
push
fdivrs
inc
popf
fdivrp
pop
jmp
add
push
ljmp
cli
gs
loop
addb
pusha
or
mov
scas
or
jmp
shrl
aas
popf
push
and
inc
mov
xor
stos
and
cmp
cmc
mov
cld
ret
and
lret
or
pop
mov
pop
sbb
stos
into
xchg
inc
scas
bound
inc
add
xor
xor
test
aad
cld
pop
adc
daa
adc
sbb
mov
test
sbb
jmp
sub
mov
or
sub
jmp
dec
jecxz
or
das
movsb
xor
test
pop
test
stos
adc
nop
sub
das
jl
cld
push
mov
jae
add
lahf
mov
in
fnstsw
adcb
pop
jno
push
sub
into
fnsave
mov
cmp
imul
adc
sub
and
int
pop
add
cmpsb
sbb
inc
jg
ret
dec
or
pop
push
loop
imul
push
in
rolb
aam
outsl
and
leave
jg
dec
inc
mov
aas
cld
fsub
fsubl
add
pop
and
add
push
pop
cs
int3
in
jne
xor
sti
push
mov
xor
fmull
mov
inc
lahf
insb
aas
mov
les
add
sbb
push
lahf
xor
orb
jmp
mov
lret
icebp
roll
pusha
push
or
aad
push
push
js
stc
ss
insb
sub
rolb
call
arpl
xchg
mov
aad
mov
mov
leave
mov
sarl
hlt
adc
icebp
fwait
sbb
jns
dec
bound
cmp
test
xchg
mov
nop
pusha
or
data16
fs
movsl
test
mov
iret
shll
shr
push
stc
sahf
push
ljmp
gs
and
mov
or
or
dec
and
lock
cmpsb
jne
or
or
ds
cs
mov
pop
pushf
test
stc
xor
xchg
add
xor
jmp
sub
repz
sbb
pop
neg
loope
pusha
sub
outsb
cld
xorl
test
add
xor
push
cwtl
and
pop
pop
hlt
inc
ljmp
fldpi
repnz
out
and
int
cmp
push
sarl
xchg
outsb
cmp
es
loop
push
or
xor
and
and
nop
loopne
jge
imul
dec
mov
and
inc
fwait
addb
nop
pop
out
mov
cmp
stc
adc
inc
mov
pop
out
mov
mov
mov
mov
dec
shlb
dec
pop
loope
in
cld
jnp
push
stos
sub
sub
mov
push
in
call
pop
pop
orl
mov
mov
add
outsb
dec
rorb
add
aad
push
pop
push
ret
xor
add
outsl
jb
xchg
popa
push
mov
jo
or
xor
mov
aam
pop
rorl
jmp
sub
enter
test
push
xchg
cmp
icebp
fiaddl
out
std
lahf
add
add
mov
push
movswl
lock
cli
scas
test
sub
cmpsl
jo
jmp
roll
cmpsb
ds
or
push
fmul
in
adc
push
sbb
inc
cld
jmp
jge
rorb
ret
imul
jne
in
scas
scas
push
into
pop
and
pop
add
pop
lock
lret
das
pop
ret
adc
xchg
xchg
andb
les
push
push
cli
sub
mov
sub
cmc
add
dec
aad
mov
jno
loop
loope
out
mov
jge
jl
ljmp
or
dec
sub
pop
push
push
mov
ror
ss
xchg
or
xchg
aad
testl
out
and
xor
std
mov
add
stc
jne
test
add
push
xchg
pushf
lods
int
mov
les
scas
sub
sub
dec
fildll
fwait
call
mov
inc
dec
sub
dec
dec
xchg
jg
mov
push
lock
jae
adc
and
dec
clc
xlat
jnp
popa
jmp
repnz
cmp
mov
adc
and
cmpsl
xor
fs
push
pop
cmp
imul
pop
and
add
add
fstpt
popa
add
gs
jmp
inc
paddd
inc
test
xchg
fisttps
test
bound
add
loop
idivb
push
cli
aad
and
cmc
bnd
pop
sub
addr16
add
fistps
addr16
jg
inc
inc
mov
in
mov
dec
add
jmp
shl
cmp
in
test
mov
imul
rorb
and
lret
pop
sbb
jecxz
leave
jmp
add
jns
and
sahf
mov
push
add
add
jo
or
pop
and
push
mov
sbb
dec
and
or
cmp
pop
add
add
push
xchg
or
and
ja
push
jmp
ja
imul
mov
push
out
mov
inc
push
call
inc
sbb
xchg
mov
ret
pop
push
inc
push
pop
jmp
inc
and
inc
xchg
dec
shll
sub
jnp
leave
cmp
push
push
ljmp
popf
pop
inc
add
shl
xor
sbb
enter
out
in
jmp
pop
pushf
or
leave
jmp
sub
pushf
inc
add
jmp
das
sar
mov
mov
aas
cwtl
test
inc
cmp
pop
sbb
cmpsb
cmp
push
sbb
pop
mov
in
lcall
jge
dec
pop
dec
sahf
add
icebp
push
adc
xor
insl
loopne
insb
bnd
fnstsw
mov
jp
daa
fisttps
call
pop
cmp
lret
adc
enter
cmpsl
loop
sbb
ret
lcall
xor
push
fnstcw
add
adc
pop
cwtl
mov
dec
mov
jns
xor
aas
xor
faddl
shl
add
add
sarb
movsb
mov
pop
pop
push
adcl
add
ret
fst
push
test
pop
xor
scas
ficoml
inc
xchg
xchg
inc
jae
mov
or
inc
push
jno
es
and
enter
fsubrs
ja
and
add
jb
loope
jecxz
sub
mov
and
hlt
dec
repz
add
scas
ret
add
fwait
loopne
sarb
pop
inc
ret
test
mov
jnp
dec
inc
mov
dec
push
add
mov
pop
jnp
scas
fs
push
push
cs
inc
mov
sbb
push
lret
inc
mov
pop
and
mov
lahf
jp
insb
js
or
push
into
add
jbe
ret
aas
ret
sub
dec
push
les
das
jmp
stos
xlat
xchg
rcr
mov
in
int
outsl
and
addr16
repnz
or
addl
aaa
je
adc
inc
shr
pop
pop
jb
std
outsl
push
dec
jge
or
jo
pop
fildl
add
or
shr
xchg
shll
out
fxch
jle
es
dec
pop
mov
out
mov
xchg
jmp
mov
es
mov
pop
out
xchg
push
mov
mov
imul
add
incl
and
dec
add
inc
xor
cs
shlb
scas
call
sbb
insb
mov
popa
add
jne
add
xchg
arpl
dec
out
orl
arpl
hlt
lods
cli
add
xchg
inc
aam
jmp
inc
fwait
cmp
sub
mov
inc
sub
pop
rclb
std
jg
add
xor
in
and
aam
daa
jge
xor
negl
mov
xor
xor
out
dec
out
jno
jmp
or
sub
dec
call
or
insb
loopne
inc
pop
inc
or
out
jnp
dec
mov
test
sub
aaa
adc
inc
adc
xchg
push
or
dec
fwait
mov
fnstcw
push
mov
dec
sub
popa
pop
add
aaa
sub
sub
les
push
div
outsb
sbb
push
pop
ret
or
and
pop
mov
cmc
pop
push
lret
jl
inc
sti
pop
inc
jno
sbb
jmp
add
fnstcw
push
jne
sub
lds
or
add
mov
jp
mov
adc
lahf
cmpb
add
ret
and
fldz
fnstenv
out
and
mov
inc
inc
paddusw
clc
add
mov
dec
xchg
nop
in
sbbl
inc
imull
adc
cmp
int
lahf
and
mov
xor
idivb
pop
cmc
pop
mov
pusha
int
push
dec
add
push
mov
jmp
mov
jo
pop
push
incl
mov
sub
add
test
or
mov
add
fwait
and
mov
xchg
sub
cmc
shl
xchg
lds
in
jne
loopne
arpl
or
pop
mov
xchg
xchg
push
and
xchg
mov
mov
and
mov
mov
aad
add
xor
outsl
jmp
sub
ja
push
daa
es
push
xchg
andb
lea
lahf
jp
repnz
add
testb
push
popf
mov
or
lds
pushf
out
xor
rcrb
pop
push
push
adc
mov
jmp
push
inc
ret
loope
rcll
pop
pusha
inc
ss
das
dec
dec
add
pop
call
sahf
rclb
or
mov
fsub
push
leave
or
ffree
cmp
pop
dec
mov
mov
mov
insl
leave
add
pop
push
adc
in
mov
shrb
jle
popf
push
mov
mov
outsb
cmpsb
add
scas
out
sub
xor
jbe
and
push
push
in
dec
shufps
imul
int3
pop
nop
add
fists
dec
mov
inc
leave
cmc
adc
loopne
push
mov
scas
sbb
pop
jo
popf
or
sarb
lea
push
mov
neg
pusha
lds
push
mov
jmp
xor
rclb
mov
repnz
mov
jle
ds
in
sbb
jmp
cs
cmc
add
jno
iret
xor
jo
sub
push
mov
sub
in
jmp
aas
shl
jo
push
mov
int
aas
mov
mov
ret
xor
jmp
jg
lds
je
imul
ret
push
jb
dec
push
cwtl
mov
jmp
sbb
fsubr
movsb
adc
cli
or
adc
jmp
test
add
add
sub
push
jmp
jmp
mov
movsb
add
shrb
test
daa
mov
and
jp
mov
or
clc
push
sahf
shrl
adc
mov
out
add
loopne
jno
cmpb
dec
outsl
or
pop
fldl
dec
push
sbb
xor
push
adc
mov
mov
ficompl
xor
lds
push
out
sub
pop
mov
cmp
popa
aad
cmp
lcall
pop
in
stos
adc
dec
mov
ds
ret
or
sub
mov
xchg
es
stc
push
dec
jns
outsl
or
mov
lock
test
out
mov
cld
add
das
pop
mov
mov
lods
xor
mov
add
sub
mov
add
sub
or
jmp
icebp
incl
sahf
outsl
inc
sarl
stos
push
lret
lahf
fcompl
fisubl
lods
xchg
leave
add
fld
loope
shl
sub
jle
rcrl
jmp
xchg
lock
xor
pop
push
fstps
cmpsl
jge
cli
sub
insl
mov
sbb
add
jle
jecxz
setb
sub
add
into
push
push
notb
lret
cltd
aam
test
jmp
mov
and
xor
ffreep
jmp
shrb
mov
jmp
aas
faddl
lea
out
or
adc
push
push
sub
stc
call
jbe
push
ss
adc
mov
xchg
add
dec
out
cmp
daa
add
std
jmp
nop
sbb
shlb
pop
cmp
xchg
jle
or
sar
pushf
adc
adc
mov
into
cmp
sti
out
lret
push
add
fbld
push
dec
sub
lods
test
or
fidivs
add
ljmp
pop
pop
stc
inc
or
jmp
xchg
ret
ljmp
pushf
sub
mov
jmp
jo
xor
sti
mov
adc
stos
mov
ret
cld
cmovs
cmp
inc
or
roll
imul
ds
xchg
pop
in
jl
ficompl
mov
ljmp
daa
add
xchg
inc
pop
movsb
rcl
int
pop
idiv
lods
jl
sbb
pop
push
fsubrs
mov
aad
xchg
add
fdivs
mov
and
add
push
jmp
pop
sub
jnp
add
xor
pop
repz
aad
jns
sub
sbb
call
cmp
sub
je
mov
cmp
lret
sub
xor
jnp
xor
mov
addr16
pop
sub
and
movsb
push
sbb
push
data16
pusha
xchg
pop
lea
mov
xor
adc
xchg
or
mov
repnz
das
pop
inc
out
loop
mov
ret
or
stos
pop
add
pushw
mov
adc
cmpb
mov
mov
push
cld
loop
into
and
add
aas
adc
pop
push
or
pop
jmp
mov
repnz
xor
stc
sub
mov
dec
inc
jno
pop
fsubl
xchg
xor
stos
adc
fs
mov
inc
es
dec
out
cmp
pop
dec
sub
fucomp
shll
xchg
imul
cmp
inc
dec
or
lds
in
mov
ss
mov
lods
insb
mov
cmpsb
and
ffree
call
pop
leave
ficoml
adc
clc
xor
dec
or
sbb
add
roll
cwtl
jecxz
sub
shll
cmp
test
js
add
mov
js
mov
lock
and
lods
sbb
mov
je
ret
fildll
data16
cmp
or
aaa
pop
pop
xor
push
xchg
popa
popf
jbe
insl
dec
xchg
das
xor
les
add
fucomp
imul
movsl
call
cli
testb
push
adc
xchg
cs
shrl
add
cmp
jmp
sbb
movsb
adcb
mov
mov
sub
adc
dec
int
mov
xor
test
std
scas
mov
cwtl
pop
icebp
dec
xchg
stos
call
xchg
hlt
pop
or
inc
sub
pop
jbe
imul
mov
jo
jnp
ret
xlat
cltd
fcoms
ret
sbb
dec
and
cli
fstps
nop
fmull
clc
xlat
pop
fs
dec
roll
dec
xor
lret
adc
sub
jmp
push
rcrl
lods
pop
cmpsb
cmp
orb
movswl
movsb
mov
adc
pop
out
es
dec
mov
aas
divl
jo
test
xor
cmpsl
push
imul
inc
adc
je
stc
mov
xor
pop
stos
js
rorl
push
test
push
int3
push
and
xchg
rorl
dec
mov
pop
les
in
sub
dec
daa
dec
loopne
push
test
xchg
mov
inc
pop
push
add
and
or
or
imul
jne
insb
xchg
fsubs
push
mov
push
clc
imul
pushf
repz
push
mov
loop
imul
xor
cld
pop
jnp
mov
out
pop
cld
ljmp
pop
outsl
inc
rorl
pop
cltd
movsb
and
push
xorb
mov
sub
and
aam
mov
add
jg
and
mov
outsl
jg
scas
mul
out
leave
fstp
movsl
popf
les
push
jo
idivb
rcrl
add
and
or
mov
jae
dec
lea
flds
sub
push
mov
mov
cmpsl
or
lcall
outsb
mov
sub
mov
pushf
dec
ja
adc
push
test
lret
and
popf
jg
mov
imul
mov
adc
dec
test
add
inc
cmp
popf
jb
lock
and
scas
mov
pop
jmp
out
nop
movsb
lods
pop
adc
sub
out
push
dec
adc
xchg
add
cmpsb
add
push
mov
jnp
leave
cmp
or
icebp
aas
roll
dec
pusha
stos
jmp
mov
vmovddup
push
aad
xor
sahf
aam
adc
pop
jnp
lock
or
jb
daa
add
mov
add
jmp
je
push
mov
and
cmp
std
jno
pop
dec
fistpl
aaa
iret
mov
dec
js
sbb
push
popf
icebp
and
add
sub
shr
dec
xorb
add
rcrb
jmp
xor
or
or
gs
sbb
pushw
jl
das
or
in
or
add
jmp
popf
adc
pop
push
adc
and
or
pop
pop
in
ficoml
jmp
mov
je
scas
clc
gs
pop
cmp
lahf
push
pusha
icebp
mov
add
dec
mov
pop
hlt
popf
out
adc
icebp
jge
fwait
sub
ds
and
dec
aad
das
testl
add
inc
or
xchg
mov
popa
jbe
mov
sub
xor
xlat
ret
mov
mov
push
pusha
jae
dec
or
ss
sub
call
ret
aas
ljmp
loope
outsl
loopne
iret
pop
inc
inc
insb
mov
mov
in
dec
adc
push
enter
sub
ret
dec
dec
sbb
lcall
add
das
push
call
xorl
dec
dec
pusha
cli
push
mov
pop
add
das
ja
inc
lret
daa
sub
push
mov
lods
sub
daa
cli
mov
cmc
fcomps
or
mov
push
sar
cmc
mov
cmp
add
ja
xchg
inc
pop
scas
mov
xchg
das
not
push
out
pop
clc
ja
rcl
test
xchg
push
pop
mov
das
into
cmp
add
imul
pop
cmp
push
mov
inc
pop
sub
out
adc
pusha
mov
into
xor
mov
dec
jmp
push
cmpl
or
outsl
movb
aad
jmp
dec
mov
or
sub
fidivrs
insb
lock
div
lds
xor
in
mov
adc
imul
jle
push
xchg
call
test
dec
mov
inc
and
mov
in
and
or
and
and
iret
out
sbb
dec
mov
adc
cwtl
add
dec
sti
cltd
add
xorl
lcall
stos
pop
push
inc
ja
add
pop
adc
or
pop
jge
mov
xlat
movsb
mov
call
insb
imul
subb
pusha
pop
jbe
dec
jne
shll
xor
dec
dec
mov
movsb
sbb
mov
xchg
pop
out
scas
and
add
orps
xchg
mov
in
jmp
cmp
mov
shl
xchg
mov
aaa
or
or
and
mov
jns
cmp
xor
cmpsl
rcr
adc
jo
cmp
pop
sbb
pop
adc
cmpb
ret
push
ror
and
dec
loopne
sbb
add
rcrb
mov
mov
pop
fstl
push
mov
or
adc
lahf
pop
mov
pop
push
and
xchg
mov
add
adc
or
cs
xor
pop
fcompl
xchg
inc
lahf
jnp
aas
push
xchg
inc
inc
lret
negl
clc
or
lahf
add
imul
sub
push
sahf
jge
jle
seto
cmp
pop
pop
push
xlat
lods
jl
mov
pop
stos
xor
or
xchg
pop
push
xor
ret
shlb
cmp
or
add
dec
push
xor
jmp
mov
or
dec
icebp
cmp
adc
jmp
jb
pop
fsubl
jo
lds
pop
nop
cli
in
lds
mov
lea
mov
insl
inc
mov
cmp
mov
aaa
mov
stos
xchg
pop
fsubrs
cmp
mov
popf
cld
les
mov
mov
pop
jb
add
sti
ds
inc
xlat
inc
bound
jmp
jno
imul
fstpt
mov
add
loop
pop
jp
daa
jmp
push
mov
sub
clc
cmc
xchg
mov
in
bound
jmp
sahf
xor
inc
jl
jb
test
ds
aaa
push
lret
repnz
add
add
mov
ljmp
cmp
mov
dec
test
adc
mov
sub
jl
sub
sarl
push
mov
sub
and
ss
in
cmpsb
lret
xor
pop
push
mov
stos
inc
popa
jmp
sti
add
and
aaa
cmp
testl
or
daa
imul
arpl
jp
lock
outsb
stc
adc
outsl
notl
sub
jmp
pop
dec
mov
mov
dec
mov
out
and
test
inc
xor
scas
xor
cmp
sbb
add
and
xor
sti
inc
xchg
nop
ret
pushf
jns
pop
push
movsb
scas
pop
mov
push
or
adc
mov
addr16
cmp
cmp
imul
shlb
test
push
push
aas
xchg
pop
cmpsb
std
adc
idivl
repz
mov
inc
shr
sub
mov
push
bound
pop
fsubs
mov
lock
pop
dec
pop
sbb
mov
call
push
inc
push
xor
cs
jecxz
inc
inc
jae
sub
or
dec
xor
pusha
fmull
mov
mov
cld
inc
adc
inc
or
adc
pop
inc
mov
test
ja
fdivl
cmc
test
sbb
xchg
mov
xor
test
sti
or
jl
lds
adc
and
add
in
pop
pop
sbbl
and
mov
cvtps2pi
lock
outsl
std
icebp
fucomip
xchg
add
jmp
adc
pop
adc
xchg
iret
andb
pop
add
jno
in
andb
pop
fs
add
daa
push
fisttpl
add
test
xlat
add
insl
push
cltd
shl
push
and
icebp
incl
jge
push
mov
pop
xor
loop
lahf
daa
pop
inc
into
add
int3
lods
sbb
cmpl
aas
aam
cwtl
pop
ret
xlat
fwait
notb
add
push
xchg
add
fsubr
cmp
mov
mov
into
mov
or
movsb
xor
popf
in
leave
out
pop
xor
pop
scas
iret
sbb
sahf
mov
xchg
ljmp
ret
std
dec
jg
mov
lds
xchg
add
sbb
pusha
push
pop
in
mov
and
pop
dec
jmp
dec
push
pop
xchg
mov
in
std
cmp
loope
push
xchg
mov
fs
push
xor
sahf
sbb
and
xor
adc
imul
mov
lcall
add
inc
dec
sbb
in
add
and
imul
aaa
adc
in
add
test
dec
lret
mov
int
add
icebp
mov
jecxz
sbb
sbb
rcrb
outsb
pushf
scas
cmp
es
jnp
push
jmp
cmp
mov
dec
pop
loopne
or
adc
and
cs
pop
mov
mov
pop
fbstp
jmp
hlt
ret
push
cld
shlb
cmpsl
pop
mov
ret
add
or
push
xorl
mov
dec
jnp
xchg
ret
call
cmc
add
in
decb
mov
cli
js
add
dec
xor
xor
add
cmp
sub
adc
push
setnp
into
in
cmp
fsubl
ss
leave
jecxz
nop
cltd
push
int3
sti
adc
push
mov
adc
push
mov
jmp
inc
inc
jb
lods
or
cwtl
adc
ret
xchg
jge
in
or
imulb
push
xchg
or
popa
shll
adc
insl
xor
dec
ja
adc
call
add
pop
shrb
enter
ds
dec
sbb
shl
xchg
sbb
mov
xor
inc
inc
inc
add
push
lcall
jg
sbb
add
adc
lds
push
adc
gs
push
add
shrb
cli
push
push
pop
je
add
addb
lods
cli
and
inc
mov
sahf
ret
mov
insb
adc
mov
jns
lds
push
into
dec
shlb
shrl
mov
ja
add
sub
cs
test
lock
sti
push
add
pushf
subps
cmp
add
mov
push
jne
pop
push
and
subb
movsb
rcll
pusha
and
cmpsl
inc
fninit
mov
inc
cmp
jl
xor
mov
pop
imul
enter
cmp
mov
dec
lea
mov
test
imul
dec
dec
cmc
push
adcb
cmp
push
sub
dec
cwtl
das
cmpsb
or
repz
or
xchg
shr
aam
mov
icebp
roll
adc
or
or
shl
inc
add
adc
jl
iret
push
mov
xchg
mov
sbb
push
xchg
push
xor
pop
xchg
mov
jbe
in
mov
add
jb
enter
adc
sub
test
and
jge
or
cmp
xchg
push
push
fnstsw
add
add
add
fisubs
lahf
hlt
xchg
add
inc
test
and
or
mov
push
loopne
or
xor
push
fs
jae
test
and
adc
out
sbb
xor
leave
sub
xchg
dec
inc
sbb
mov
clc
stos
aam
pushf
or
add
inc
jle
scas
shlb
inc
adc
adc
lret
nop
es
ss
sub
std
push
push
int
mov
test
lcall
call
fmull
aad
sub
stos
sahf
sbb
add
xor
cmp
add
jbe,pt
add
dec
mov
or
xor
jg
pop
sub
ret
test
push
and
add
push
cmpsb
xlat
clc
sub
sub
aam
sbb
iret
and
or
pusha
out
jns
fmull
dec
push
iret
xor
add
aaa
pop
lret
cwtl
sbb
xor
aas
cmpsl
out
pop
mov
inc
gs
mov
mov
rcrl
xchg
sbb
bound
pop
adc
ret
insb
add
rorl
js
xor
dec
out
das
dec
sbb
inc
adc
ret
adc
xchg
scas
pop
cs
add
push
push
cltd
ret
in
and
lahf
insl
mov
dec
sbb
add
sub
xor
add
inc
mov
sahf
ret
scas
je
shlb
pop
push
lret
pusha
popf
adc
add
add
cltd
arpl
lea
movl
jecxz
add
mov
aas
int3
aad
push
or
enter
clc
or
inc
xor
ficompl
adc
xchg
add
add
rolb
push
clc
add
inc
and
mov
or
loop
lods
test
mov
and
add
out
repnz
into
iret
out
or
jp
dec
xchg
ror
xchg
mov
and
arpl
hlt
rorb
ret
or
addr16
shrb
fimuls
out
pop
pop
andl
imul
add
and
sub
ds
push
iret
and
add
or
inc
clc
ljmp
mov
pusha
fstl
pusha
rolb
std
pop
or
adc
or
pusha
push
pusha
push
adc
push
jb
pop
jge
add
pop
adc
subb
inc
jg
cltd
stos
add
stc
sbb
cwtl
xchg
add
lock
jmp
adc
jl
lahf
ficompl
inc
imul
pop
push
mov
pop
shr
arpl
cs
je
aam
pusha
js
dec
or
in
sbb
xchg
inc
push
arpl
cmc
dec
mov
add
pop
sbb
sub
cmp
add
jo
fistl
xor
push
test
add
icebp
lods
jnp
xchg
les
sar
dec
jno
or
cmp
mov
pop
aaa
adc
mov
nop
jbe
dec
stos
push
sub
cli
cmovnp
inc
adc
add
push
je
xor
mov
sbb
inc
insl
xchg
scas
adc
sub
and
xor
mov
outsb
cmp
inc
cmp
push
add
pusha
rorl
cmp
shll
mov
jne
aad
fcompl
and
mov
or
ret
jp
add
mov
lret
mov
movsb
sbb
adc
sbb
dec
inc
sub
lahf
arpl
xor
add
stos
mov
add
shlb
dec
mov
cli
cmpb
leave
repz
inc
shll
xor
cmpsb
sarb
add
jle
xchg
gs
scas
or
xor
sar
xchg
imul
sub
inc
loopne
add
stc
and
js
stos
mov
jne
mov
pusha
popa
sub
gs
aaa
fdivrl
aam
dec
cmp
in
cmp
data16
das
or
add
cltd
dec
lret
bound
add
out
cmp
push
push
xor
mov
sbb
cmc
sbb
mov
xor
aam
cwtl
movb
and
lods
fcomi
arpl
lods
sbb
lahf
mov
ds
cmc
lds
lcall
inc
xor
sub
std
int3
aas
dec
nop
sti
jo
jo
add
sbb
inc
loopne
fimull
or
jbe
lds
leave
bound
daa
cmp
lret
xlat
push
push
or
jo
gs
and
repnz
push
add
jg
jo
clc
cmp
push
xlat
or
cmpsl
enter
inc
ja
add
jae
mov
pop
mov
jmp
fwait
rolb
outsb
imul
mov
sub
jne
mov
pop
dec
out
test
pushf
stos
add
add
imul
test
xor
mov
cmp
mov
outsb
adc
jo
sti
das
jl
lods
ret
repnz
inc
insb
pushf
mov
cwtl
int3
stos
mov
sbb
insl
fisubrl
mov
push
and
add
mov
cltd
int3
jmp
adc
fisttpl
fs
ljmp
xchg
outsl
lret
xchg
dec
jne
xchg
ss
xor
rorb
sbb
sbb
or
daa
xchg
out
arpl
in
sbb
scas
cld
shll
sub
dec
insb
flds
aad
push
mov
inc
add
xlat
adcl
scas
add
loop
sbb
add
adc
js
inc
add
jne
test
call
and
fs
pop
out
jl
dec
cmp
movl
dec
fwait
xor
push
outsl
bound
les
lcall
xlat
lea
js
repnz
pop
jb
mov
add
js
xor
jns
mov
sub
mov
dec
int3
call
into
cmp
or
push
sbb
pop
int
xor
mov
xor
push
jno
xchg
mov
and
add
cli
jno
add
mov
popf
lahf
add
pop
idiv
cs
sub
int
daa
mov
sub
sbb
and
xchg
sub
or
inc
mov
cmpxchg
add
das
andb
rcrl
popf
dec
jns
xchg
jmp
jno
cmp
fadds
or
int3
fisttps
bnd
mov
sub
shlb
and
not
cmpsl
fidivrs
jecxz
xor
pop
wbinvd
cmp
xor
out
add
mov
imul
xor
dec
dec
adc
cmpb
fs
and
clc
add
or
add
idiv
sub
sbb
movsb
add
sub
test
ja
jl
ret
or
xor
sahf
popa
fstl
mov
or
lcall
fs
ja
fwait
pop
mov
add
mov
mov
lods
mov
loopne
lods
jl
xchg
fisubl
mov
add
clc
fprem1
sub
xor
jo
add
jmp
adc
andl
out
out
pusha
xor
clc
add
push
movsl
dec
orb
add
adc
cmp
repz
dec
stos
lret
out
lds
arpl
inc
call
aam
pusha
push
pop
or
stos
aad
inc
shlb
and
dec
mov
jns
pusha
mov
jnp
aaa
daa
ja
dec
or
aam
stos
nop
fildl
and
jecxz
repz
sbb
ret
incl
xor
mov
sahf
push
and
sarb
movsb
sub
testl
sbb
xorb
add
inc
mov
shl
movsl
shl
data16
xlat
mov
mov
sub
out
les
jge
push
int3
inc
jo
je
pop
test
add
jnp
lret
add
sub
mov
mov
cmpl
pusha
sbb
aas
dec
pop
xorb
pop
in
push
add
sub
test
jb
mov
lods
add
inc
push
mov
dec
ficomps
add
ja
mov
mov
and
lcall
inc
jle
xchg
fistpll
data16
xchg
gs
and
loope
and
sbb
inc
pop
int3
mov
xorb
roll
jbe
sub
scas
fdivrl
inc
test
push
xor
sub
pop
sub
jno
mov
mov
xor
stc
jge
decl
cmpsb
int3
ficomps
mov
jae
adc
push
and
movl
subl
sub
lret
fadd
inc
cmp
mov
xchg
je
jp
xor
and
and
mov
adc
cwtl
cmp
add
cmc
add
push
jmp
and
test
scas
shll
mov
test
mov
dec
jae
imul
or
mov
jmp
orb
jo
mov
testb
or
xchg
jne
insl
add
push
clc
testl
add
lcall
mov
push
sbb
aaa
mov
enter
jp
add
push
pop
call
inc
imul
mov
int3
out
js
mov
sbb
pusha
mov
mov
punpcklwd
sar
inc
add
call
out
cwtl
jp
add
icebp
add
sub
sbb
adc
jg
int
pop
aas
dec
jmp
sub
add
outsb
sahf
cmp
cmp
popl
add
fadds
and
inc
pop
leave
add
hlt
stos
fcoml
pop
pusha
add
dec
and
cmpl
movzwl
mov
cld
push
ficompl
lret
cli
pop
das
mov
jae
out
jmp
pop
push
or
pop
icebp
xchg
add
cmpsb
or
push
and
sub
xchg
scas
add
mov
scas
shl
jbe
sbb
into
les
lock
mov
insb
aaa
push
sahf
adc
push
jno
mov
leave
ret
sub
inc
inc
and
sbb
ret
xor
cmp
nop
dec
inc
lcall
cmp
sbb
fiadds
femms
add
mov
outsl
insl
lods
movb
fildl
and
rorb
mov
inc
fmull
sub
push
add
in
lcall
add
sub
push
pushf
sahf
rorl
sbb
cmp
loop
pushf
push
stos
lret
add
arpl
stc
shlb
add
out
jp
fdivrs
js
imul
dec
jno
and
add
inc
mov
add
dec
test
mov
sbb
mov
add
cltd
inc
test
jne
mov
xchg
sub
add
sbb
pop
mov
mov
sbb
add
inc
mov
xor
movsl
sub
xor
stos
loopne
insl
add
inc
movb
and
fs
adc
ret
popf
dec
iret
cli
dec
xor
xchg
pop
or
xor
sti
add
imul
cmpsl
fsubrl
into
add
shufps
add
mov
add
jns
insl
bound
xchg
pop
jbe
cmp
and
jne
nop
dec
sbb
orb
xor
sub
mov
popa
bound
hlt
or
fs
pop
push
dec
leave
xor
pop
mov
push
and
adc
mov
divb
sbb
adc
cmp
sbbl
je
pop
cwtl
mov
into
cmp
es
cmpsl
pop
pop
push
iret
sub
mov
popa
mov
in
ret
decb
or
mov
out
push
jbe
leave
cmp
cld
mov
mov
out
cs
jl,pt
inc
jo
fiadds
pop
dec
test
rcll
out
scas
mov
cmpl
add
popf
out
push
lock
aas
jmp
clc
push
sahf
loopne
fsubl
pop
sub
nop
dec
inc
test
shl
push
push
mov
aaa
in
and
push
inc
dec
mov
or
cmpsb
inc
and
test
or
xor
push
outsl
test
mov
xchg
xor
rcll
jns
mov
orb
push
push
mov
push
sub
dec
mov
add
cmp
xchg
jge
xchg
inc
sub
enter
mov
stos
adc
jp
les
jbe
mov
fstps
add
je
push
int3
inc
and
setns
push
ljmp
mov
testb
add
mov
push
cwtl
pushf
push
inc
andb
mov
mov
subl
adc
psubusb
mov
pop
push
adc
jne
daa
push
inc
in
and
clc
lcall
fsubrs
inc
in
pop
in
pop
pop
xor
cmpsb
adcb
xlat
and
and
mov
fisubl
xor
inc
sbb
icebp
and
sub
inc
push
inc
enter
lock
push
out
test
adc
lahf
lret
jbe
mov
out
dec
js
pusha
movsl
sbb
sahf
jne
pop
xor
pushf
push
adc
cmp
fucomi
inc
ficoms
outsl
xchg
push
js
jl
test
mov
adc
inc
or
fwait
dec
sub
data16
pop
cs
xor
cld
xor
sbb
sahf
mov
or
jnp
ret
mov
xor
pop
cvtpi2ps
cmpsl
shl
ret
xorl
dec
and
pushf
add
mov
pop
xor
jae
mul
fists
popf
ret
xchg
cmpsl
add
daa
add
stc
pop
and
negb
mov
and
pop
and
ret
loop
lcall
mov
adc
int3
jmp
add
ret
ss
mov
pop
xchg
or
ret
sbb
bound
mov
aas
gs
cli
subb
mov
adc
icebp
insl
lea
add
lcall
add
les
cli
movaps
cmc
aas
add
cmpsb
push
rolb
xor
imul
mov
sub
aaa
loopne
hlt
mov
mov
sbb
cld
add
mov
add
adc
or
jg
mov
jnp
adc
xor
jl
jle
add
mov
or
mov
jo
add
dec
jl
push
cmp
xlat
jnp
xor
and
and
and
jp
popf
aaa
sahf
adc
and
xchg
jb
fdivr
mov
insb
or
fidivrs
and
repz
xor
adc
call
add
pop
in
imul
ja
cmp
and
jbe
test
xchg
bound
mov
daa
ss
pop
mov
rorb
loopne
cmpsl
clc
pushf
push
inc
test
ljmp
lods
push
int3
add
out
sub
adc
jl
and
call
insb
outsl
inc
push
pop
aam
sbb
jo
inc
nop
mov
pusha
sahf
pop
scas
adc
adcb
lock
adc
call
das
jle
in
add
gs
stos
js,pt
pop
add
movsb
or
test
into
adc
inc
int3
lds
pushf
nop
sub
mov
imul
rclb
sub
cmpl
mov
sbb
cmpsb
popl
push
cwtl
or
daa
je
adc
sub
add
push
cmp
loopne
arpl
inc
das
add
in
and
jmp
loop
inc
push
jb
sbb
lods
add
imul
int3
or
dec
add
push
cmpsb
orl
fcomps
imul
daa
mov
mov
cmp
mov
cmp
add
imul
mov
sbb
enter
mov
stos
mov
push
add
cmpsl
sub
popf
push
mov
xchg
js
mov
push
xchg
cmp
aad
insl
add
js
shlb
mov
cwtl
iret
sub
fwait
xor
or
xchg
jge
in
nop
jl
mov
pusha
xchg
test
pop
push
loopne
mov
pop
mov
aas
aaa
add
inc
loop
mov
imul
loopne
cwtl
idivl
loop
repz
test
mov
and
jne
sbb
mov
cltd
add
and
insb
and
aam
sub
repnz
add
xchg
xlat
popf
sbb
nop
xlat
sbb
mov
aam
mov
imul
lods
test
inc
mov
and
xor
ficoms
adcb
add
cmp
mov
fimull
popa
xor
in
add
dec
mov
insb
or
cltd
inc
and
mov
arpl
lods
pop
test
movsb
fwait
jl
mov
into
xchg
add
jbe
pop
pusha
nop
rorb
jbe
rorl
loop
test
xchg
add
sub
mov
pushf
pop
into
push
add
adc
outsl
aam
clc
ss
mulb
in
or
push
adc
js
push
fiadds
and
or
lods
test
fwait
loopne
fldt
and
mov
js
ss
out
lock
push
lretw
sub
cmp
push
mov
enter
test
das
pop
mov
or
cmp
push
push
xchg
push
sbbl
add
sbb
adc
in
xchg
stos
sarb
addb
popa
adc
cmp
pop
xchg
les
add
sbb
mov
hlt
jle
out
add
aam
mov
add
or
cwtl
lcall
mov
sub
add
insb
cmpsl
cwtl
aam
push
or
and
repz
inc
sub
jae
leave
xor
lcall
out
xor
sub
aam
mov
jl
or
push
test
mov
push
js
xor
or
mov
aam
mov
mov
in
and
in
inc
or
push
mov
stc
or
sbb
xorl
mov
add
and
insl
jno
add
jmp
repz
add
lcall
pop
push
push
sub
stc
xor
jae
cmp
pop
adc
enter
mov
push
lret
adc
cmp
adc
dec
loope
das
and
sbb
sbb
shrb
int3
push
mov
fwait
test
aad
adc
mov
mov
adc
fs
je
or
sub
add
and
mov
imul
adc
imul
loop
mov
jo
ss
loopne
add
les
mov
je
mov
icebp
mov
sub
or
mov
inc
clc
and
addb
and
sbb
test
and
shl
inc
jne
or
test
mov
mov
mov
inc
add
pop
mov
pop
es
inc
add
ret
mov
mov
or
pop
mov
incb
orl
rcrb
js
fcom
cmp
sbb
add
adcb
dec
dec
cmp
sar
pop
je
mov
imul
stos
pop
add
dec
pop
loop
lea
inc
add
pushfw
lods
aam
aad
aam
or
lods
test
lods
loop
lods
je
pop
mov
mov
cwtl
insb
dec
mov
ds
push
mov
lock
sub
mov
push
or
rcl
adc
xchg
sti
add
add
sbbl
shl
or
int3
nop
adc
or
fisttpll
decb
fwait
and
inc
jns
mov
add
lods
adc
and
movsb
stos
shlb
or
mov
add
nop
scas
mov
loop
pop
xor
pop
lds
adc
and
mov
mov
sub
test
out
lret
cmp
bound
and
inc
pop
jnp
movsl
add
loope
sbbb
prefetchw
or
cwtl
outsb
scas
es
xchg
pop
test
mov
addb
and
mov
insb
stos
xor
rcrb
sbb
in
pop
add
mov
mov
xchg
shll
mov
cltd
add
lods
mov
xchg
push
pop
mov
xor
loopne
sbb
sub
sahf
sub
add
fmull
rol
imul
das
mov
sbb
out
adc
mov
fcmovnbe
and
lds
push
mov
fwait
mov
sub
test
rclb
add
nop
fucomi
into
rcrb
imul
dec
pop
cmp
add
scas
loop
clc
inc
add
mov
repz
sub
sbb
lods
or
pop
xchg
mov
sbb
or
fnstenv
lds
dec
push
mov
sub
mov
das
xchg
push
inc
faddp
mov
adc
nop
sbb
sbb
movsl
cwtl
add
cmpsb
orb
mov
fadds
in
in
add
inc
sarl
fsubrs
cmp
mov
in
int3
sbb
mov
add
test
adc
sbbb
loop
jnp
jecxz
mov
inc
lea
movsb
pop
mov
jp
xor
repnz
fs
orl
rorl
loopne
add
add
and
insb
lods
mov
jge
enter
cmp
jno
sub
lret
mov
sub
scas
push
addr16
dec
push
orb
nop
adc
ja
push
add
fbstp
add
ss
orb
cmc
and
mov
push
dec
or
inc
or
js
fisubrs
push
bound
mov
adc
xor
out
movsl
adc
sub
jl
jo
xchg
and
or
cmpsb
or
cmc
stos
mov
inc
lret
lds
dec
sbb
or
inc
or
mov
dec
push
xchg
add
or
cmovs
xchg
or
adc
call
iret
in
xchg
hlt
cmpsb
mov
push
add
xchg
popa
or
fcmovb
daa
roll
lea
xor
outsb
add
xchg
shll
jecxz
rclb
xchg
sbb
jno
lods
js
add
push
xor
sbb
leave
cmpsl
sub
std
stos
and
lcall
pop
ret
xchg
cmp
imul
jb
push
sub
jg
add
xchg
mov
das
cmp
jne
xor
xchg
loop
mov
sbb
or
lahf
and
pop
jns
xor
adc
cmpxchg
xchg
inc
inc
ljmp
idivl
fnsave
shr
inc
add
and
test
in
mov
movsb
and
adc
verw
mov
lods
add
adc
fdivrl
sahf
fcomps
jns
pushl
dec
or
subb
adc
or
xchg
jnp
dec
stos
add
jl
and
xchg
lret
cltd
xor
or
in
ret
xchg
jl
mov
pop
je
aas
fwait
or
xchg
stos
mov
ret
add
out
subb
scas
mov
cwtl
cmp
add
xchg
or
addr16
xchg
or
xchg
pop
xchg
idivl
push
jg
cmp
mov
and
or
add
jne
aad
push
push
xchg
xchg
and
iret
cmp
push
or
cltd
add
jecxz
jne
mov
movsl
jbe
add
jns
ja
lea
mov
mov
dec
hlt
ja
push
jo
dec
add
jns
aaa
cmpsl
iret
subb
aam
mov
addl
fs
sarl
add
mov
add
adc
sti
js
inc
jno
add
xchg
lret
mov
cmp
aaa
clc
add
dec
dec
leave
inc
push
shll
sub
cmp
lret
sbb
pop
cmp
mov
cld
roll
cmp
lret
mov
sarb
shll
int
dec
mov
iret
shlb
sub
inc
adc
leave
psllw
push
pusha
decl
xchg
cmp
cli
adc
xor
cli
xor
fldcw
js
sbb
mov
in
or
sub
sahf
push
xor
cmp
pop
sahf
cmpb
add
fildll
adc
and
xor
push
outsb
test
imul
lock
or
in
xchg
or
out
loope
mov
xor
push
push
xor
outsl
ljmp
daa
mov
inc
icebp
sbb
and
pop
cmp
outsb
insb
xor
adc
xor
inc
sub
pop
cli
sub
lret
cltd
or
cmpsl
lods
sbb
repnz
fildll
outsb
pop
gs
rcrl
jns
orb
xor
xor
es
outsl
in
or
pushl
adcb
and
notb
add
mov
push
xor
and
sbb
inc
pop
add
sbb
mov
enter
push
in
outsl
adc
es
xchg
sbb
dec
inc
push
dec
outsl
or
jmp
cli
pop
xor
xchg
movsb
adc
ljmp
fs
and
test
sahf
push
js
mov
xchg
xchg
test
adc
mov
lea
push
inc
loop
jo
pop
mov
ficoms
or
adc
push
adc
mov
test
or
loope
push
js
xchg
fisttps
and
sub
dec
inc
out
dec
lret
cmp
lods
adc
cmp
pop
mov
and
xchg
or
shrl
xchg
mov
or
xorb
pusha
call
xchg
lock
in
dec
jno
imul
aaa
fwait
mov
lret
and
popa
push
outsb
push
inc
je
and
xchg
in
add
mov
sbb
mov
adc
mov
sbb
out
push
push
adc
popa
loopne
adc
arpl
push
fdivrs
in
cmp
dec
jmp
pop
add
shlb
frstor
cld
clc
or
test
mov
adc
mov
lods
and
ret
add
pop
jb
sub
loopne
stos
stos
pop
adc
inc
addr16
loope
jb
subb
insl
mov
daa
mov
outsl
das
add
mov
push
or
es
pop
push
roll
add
sbb
aaa
inc
rorl
in
insb
pusha
xchg
add
negb
add
and
scas
add
daa
sbb
out
mov
scas
mov
mov
add
jl
xchg
add
adc
sub
xor
es
jge
or
pop
jo
sub
cmp
inc
mov
jp
cltd
add
in
sbbb
sbb
lods
push
pop
aaa
loope
jae
or
mov
jmp
add
lods
mov
cmp
jl
dec
adc
adcb
popf
xchg
push
add
mov
or
adc
add
jecxz
test
iret
mov
gs
roll
hlt
imul
mov
adc
xor
sahf
aam
push
inc
or
mov
cmp
out
fistps
add
adc
jae
or
or
mull
sbb
cmp
add
pop
add
dec
push
in
adc
out
lock
add
orb
idivb
jecxz
fs
ret
cli
arpl
mov
sbb
xchg
inc
and
addb
lahf
shrb
aaa
xor
and
inc
and
and
scas
mov
jl
dec
xchg
or
sbb
jo
add
dec
stos
scas
add
and
pop
adc
add
jns
adc
ret
add
outsb
out
ffreep
lahf
out
add
pushf
cld
testb
xor
iret
or
repz
add
gs
pushf
rcl
dec
test
sub
enter
mov
movsb
xchg
pop
cmpsl
fldl
jns
dec
mov
push
out
dec
add
jnp
cmpsl
lock
push
cmc
ds
pop
inc
sub
add
sar
mov
or
xchg
mov
fs
or
push
jno
cmp
mov
mov
and
jnp
sti
out
jp
push
xlat
inc
or
js
mov
add
jle
cs
nop
xchg
or
dec
push
xchg
adc
cmpsl
je
add
add
jbe
jnp
sbb
ds
adc
push
jge
add
and
cwtl
and
add
aam
jne
sub
and
ret
nop
pop
add
xchg
repnz
lods
sub
int
sahf
out
xchg
fwait
add
test
inc
fsubrs
pushf
lock
hlt
lcall
cmpsl
dec
das
lock
addr16
inc
jg
out
jnp
out
inc
add
push
dec
pushf
jno,pn
add
or
sub
mov
sti
aam
add
test
cmpl
push
and
and
xlat
or
and
mov
inc
daa
out
jbe
cmp
pop
add
loop
dec
outsl
daa
das
insb
jno
xchg
arpl
lret
cmp
repnz
mov
decb
test
sub
es
add
jne
pop
fisubs
cltd
add
xlat
dec
addl
mov
mov
fmulp
lea
add
lds
xchg
push
inc
mov
add
stos
mov
data16
mov
dec
incb
sub
pop
sbb
test
pop
incb
cmpsb
mov
imul
pop
fldcw
mov
sbb
pop
xchg
mov
add
xlat
xchg
pop
sbb
lock
addr16
push
mov
jo
stos
pusha
sbb
pop
push
cld
pop
clts
xchg
inc
popf
and
lahf
jb
add
enter
xchg
xchg
pop
xorps
dec
ds
rolb
sbb
cld
push
mov
mov
push
mov
xor
adc
push
pop
pop
push
xchg
inc
adc
loop
add
xchg
cmp
jns
pop
pop
fnstcw
or
jp
adc
lock
push
arpl
pop
sub
push
pusha
mov
into
xorl
mov
add
cltd
xchg
hlt
xor
out
and
cmpsl
push
sub
xchg
inc
mov
xchg
popf
clc
sub
clc
pop
shrl
test
pop
and
xor
repnz
inc
xor
pop
scas
aaa
fcompl
sbb
stos
cs
inc
addb
in
int3
ljmp
push
subl
push
daa
sbb
rcr
repnz
int3
push
subb
push
pop
pop
pop
sub
jmp
cmp
add
sub
sbb
adc
add
add
or
ficoml
loop
pop
adc
pop
dec
in
dec
cmp
dec
jno
pop
aas
lods
mov
testl
xchg
insl
add
pop
movsb
or
sbb
mov
repz
hlt
fldt
and
add
sti
dec
xchg
dec
push
repnz
cs
pop
cmp
cld
push
loop
cmc
and
mov
ljmp
fwait
jbe
pop
jbe
sbb
xchg
mov
add
movsb
movsb
cld
repz
icebp
les
ja
pop
insl
push
pusha
das
leave
mov
push
lods
push
and
fadd
jle
sbb
jno
inc
test
je
addr16
add
cld
out
lock
dec
cltd
mov
mov
cmp
out
ja
sbb
rolb
lock
or
fiaddl
lock
adc
mov
sbb
add
xor
scas
add
lea
scas
dec
push
je
push
lods
cmp
xor
jno
mov
pop
nop
add
fisttpll
push
inc
dec
inc
sbb
lods
out
scas
pop
add
cmpsl
movsl
jns
add
xor
fucom
daa
ja
lret
or
push
mov
ret
insl
and
pushf
add
jae
dec
out
sarl
xor
out
add
jge
push
add
or
test
jo
pop
inc
addb
aas
jge
subl
loop
int
xchg
cltd
inc
inc
adc
push
sbb
movb
leave
jge
add
movsl
scas
sarl
dec
add
fcomi
sub
xor
or
ljmp
enter
adc
or
out
paddb
movsb
inc
subl
sbbb
jmp
in
pop
ss
aaa
fisubl
js
add
xchg
stc
leave
mov
fsubl
cmovno
pop
mov
adc
mov
stc
popf
sbbb
adc
add
test
movsb
cmp
or
mov
jno
arpl
pop
inc
jae
loopne
add
xchg
sbb
mov
jl
add
lahf
dec
testl
ja
push
stc
dec
or
outsb
fnstenv
push
sbb
lret
int
xchg
mov
aaa
cld
test
mov
sub
mov
mov
repz
xchg
inc
mov
scas
mov
decl
lock
movb
mov
xlat
shr
mov
divl
pusha
cwtl
mov
mov
arpl
add
adc
int
pusha
rcl
shrb
pop
arpl
xorl
or
pop
inc
mov
dec
push
leave
add
cmp
sub
sub
test
add
lods
dec
dec
cmp
xor
aam
xchg
lods
adc
inc
pop
lods
xor
add
mov
add
stos
clc
mov
mov
sahf
pop
stos
movsb
ljmp
cmc
aaa
add
bound
cmpl
lcall
jo
mov
icebp
and
xchg
mov
pop
cmp
shll
data16
push
dec
cmp
or
sbb
imul
addb
inc
xor
rcrb
dec
nop
pop
xor
aaa
nop
pop
add
inc
adcb
dec
hlt
rorb
cmp
xchg
add
rcll
inc
std
roll
rorb
mov
dec
dec
cmpsl
inc
mov
add
dec
iret
inc
shll
pusha
cld
xor
mov
cmp
cld
js
sub
pop
pop
dec
incl
push
pop
mov
lret
stc
int
arpl
pop
icebp
rcrl
mov
aaa
add
push
sub
mov
xchg
clc
call
pop
aam
push
dec
lea
mov
push
mov
testl
jmp
dec
jge
cmp
pop
icebp
bound
int
arpl
jl
ds
push
inc
push
push
jl
cld
cmp
mov
mov
xlat
aam
mov
aad
std
test
mov
mov
cmpsl
rcll
sbb
test
inc
bound
les
lret
inc
fcoml
shlb
add
cwtl
adc
imul
dec
std
sub
inc
cmp
ss
testl
sbb
inc
mov
cmpsl
push
dec
aaa
push
repz
cmpsb
sbb
cmp
cld
lea
push
aas
pop
add
jl
lods
cmp
mov
sub
sub
sbb
push
add
js
popf
push
xorb
ficompl
loop
adc
inc
mov
popf
add
insb
or
lods
outsl
adc
fildl
iret
lock
fs
ljmp
or
add
and
fldl2t
push
scas
mov
in
cs
mov
clc
or
sbb
loop
pop
mov
add
insb
and
movsl
pop
xchg
mov
jnp
jae
jge
and
sahf
out
fistpl
ljmp
adc
mov
fcomps
mov
movsl
xor
iret
out
subb
imul
mov
fnsave
adcl
jp
mov
scas
es
add
in
jge
adc
fiaddl
jno
jnp
scas
inc
test
enter
nop
jp
enter
inc
in
jbe
lahf
cmpsb
cmp
adc
jl
mov
mov
shlb
test
push
test
xor
jmp
mov
and
fildl
xchg
inc
fsubs
jno
dec
outsb
mov
mov
push
push
mov
or
fcom
pop
fadds
adc
pop
scas
dec
loopne
or
xorl
jmp
push
imul
pusha
mov
inc
mov
lahf
popa
mov
nop
jmp
and
arpl
pusha
test
xchg
and
jmp
jno
push
lcall
mov
js
out
add
fidivs
andb
ds
xor
fistl
and
add
subb
pop
pop
lods
clc
adc
and
and
mov
clc
and
cltd
divb
fildl
pusha
add
or
stc
mov
shll
dec
je
cld
mov
fistl
inc
add
xadd
add
add
mov
cmp
push
sbb
jo
and
outsl
cmp
jg
lods
addl
xor
add
cmc
xor
adc
sbb
add
stos
test
aaa
lcall
cli
test
addr16
sbb
rorl
divb
push
in
test
dec
in
sbb
outsb
sti
dec
jnp
shlb
mov
mov
test
pop
inc
add
mov
cmp
and
jo
jb
out
sbb
fwait
bound
mov
sbb
cwtl
jae
fildl
xlat
add
rol
push
rclb
sbb
add
mov
aam
hlt
push
sbb
xor
cmp
jmp
dec
dec
lcall
xor
add
add
cmpsb
push
or
or
mov
xchg
push
add
mov
outsl
gs
sbb
aad
jmp
fildl
pop
inc
sub
into
outsl
sahf
jp
aaa
mov
mov
int3
nop
inc
das
mov
add
popf
jne
push
into
cwtl
or
mov
add
leave
adc
in
or
push
push
ds
xor
xor
test
pop
test
mov
int3
lods
adc
xor
aas
sub
adc
dec
enter
faddl
add
push
cld
dec
cmp
sub
inc
xlat
test
dec
xchg
pop
les
inc
or
push
sbb
cmpl
mulb
add
sbb
es
mov
out
out
push
xchg
test
pusha
add
jne
and
movsl
pushf
pop
mov
adc
es
inc
and
sbb
dec
push
cmpsl
cmpb
call
push
es
nop
jnp
sub
and
xor
cmp
xchg
adc
dec
xlat
cli
sub
sbb
test
jo
push
xor
inc
mov
push
cmp
inc
addl
in
lods
mov
loopne
jmp
dec
andb
xor
fcoml
mov
addl
xchg
mov
mov
orb
subl
loopne
add
or
and
cmp
decb
pop
dec
adc
cmp
insl
add
pushf
ret
into
mov
rorb
int
lret
jnp
fsubrl
add
lcall
add
es
pop
xor
lods
pusha
push
and
out
sbb
dec
mov
js
shl
jg
add
adc
jp
mov
orb
sub
add
pop
xorl
leave
mov
pop
sub
and
add
jnp
call
add
cli
addr16
xor
movsb
xor
xchg
enterw
aad
mov
add
jb
cmpsl
es
mov
xor
add
xchg
aaa
push
pop
and
inc
test
adc
test
mov
xor
js
mov
pop
outsb
inc
fcoml
add
rcrl
insl
outsl
adc
inc
xchg
call
es
pop
sub
cmp
add
and
cwtl
bound
or
and
add
xor
out
in
adc
mov
xchg
movsb
mul
xchg
inc
xchg
or
int
nop
icebp
add
lret
bound
sub
mov
test
aas
and
xchg
xor
add
and
arpl
pop
xor
push
sbb
gs
stos
dec
mov
scas
cmp
or
inc
jmp
jecxz
adc
lret
aas
sub
mov
test
mov
ds
pop
mov
cmpsl
mov
int
sbb
push
das
ds
lds
ja
nop
sub
add
adc
or
fwait
sub
int3
jae
ret
sbbb
sub
pusha
xchg
enter
clc
and
adc
hlt
call
xorb
lahf
add
and
cld
jb
and
mov
imul
setae
and
sbb
outsl
and
in
dec
mov
add
xchg
or
aas
pop
cld
popa
lahf
les
and
sbb
fwait
xchg
mov
mov
inc
add
jbe
mov
mov
add
push
ficoms
ljmp
jnp
int3
shrl
addb
dec
cmp
insb
imulb
ljmp
loope
mov
add
out
dec
push
es
or
add
pop
jb
jne
outsb
and
sub
push
mov
mulb
outsl
stos
enter
les
push
out
mov
mov
mov
insb
sub
push
out
es
cmpsl
pop
pop
lret
ret
mov
pop
inc
xor
pop
sbb
and
mov
outsb
nop
rcrb
add
sbb
nop
sub
sub
inc
adc
add
add
frstor
add
pusha
pushf
add
movsl
dec
popa
fwait
cwtl
add
or
into
test
arpl
mov
in
mov
lods
pop
push
push
aad
ss
lds
andl
shll
es
sbb
shl
adc
dec
or
fwait
xlat
sub
or
inc
or
sub
sbb
test
shl
xchg
push
in
sbb
mov
pushf
mov
fidivs
out
adc
enter
jb
cmpsl
dec
inc
adc
mov
fstp
or
arpl
fadds
or
add
xor
jge
lea
xor
les
inc
sti
push
loopne
lahf
dec
popa
xor
sbb
pop
push
loopne
outsl
lea
insl
test
mov
jne
mov
test
cmp
pushf
sbbb
jns
mov
repnz
and
mov
add
pop
sub
gs
stos
pop
adc
inc
fimuls
push
in
negb
lock
add
add
add
mov
jb
sub
xor
nop
xchg
in
add
add
cli
jl
leave
xor
sbb
arpl
adc
xchg
mov
xorb
testl
dec
fcomps
das
push
pusha
jo
jmp
add
cs
ficoml
cwtl
pusha
sbb
xor
test
sub
outsb
cmp
cmp
xchg
enter
cmp
xor
pop
es
sbb
das
or
fcom
lods
mov
sbb
jecxz
repnz
dec
xchg
nop
xchg
repz
mov
xlat
sbb
add
xchg
stos
jae
mov
adc
pushf
pop
jo
sub
testl
lret
push
inc
jmp
xchg
enter
test
xor
adc
sub
mov
orb
cli
in
sub
or
movsl
addl
add
int3
jo
mov
subl
test
push
adc
or
xor
stos
add
shll
ss
add
push
sahf
jg
mov
add
sub
insb
or
leave
lods
in
or
adc
stos
sbb
cmpsb
mov
paddb
add
pop
fnstenv
mov
or
out
pop
shlb
nop
sub
repnz
inc
sbb
adc
in
cmpsl
in
cmpb
mov
or
and
jle
mov
bound
jo
add
mov
pop
aam
repnz
lret
add
dec
js
rol
lods
add
xor
lods
imul
lret
andl
push
or
dec
orl
sbb
jb
test
mov
pop
fiadds
hlt
mov
mov
jecxz
jp
push
insb
adc
lock
shll
push
mov
inc
xor
mov
leave
mov
stos
xchg
faddl
int
icebp
sub
sarl
and
push
cli
jle
mov
es
push
mov
jo
mov
sbb
xchg
push
mov
clc
add
imul
hlt
inc
push
inc
gs
cmc
pusha
sti
sub
lcall
xor
mov
sar
jecxz
stos
adc
call
xor
sbb
cltd
xor
out
mov
and
mov
mov
mov
test
cmpsl
imul
mov
fsubrl
jo
pusha
mov
mov
call
fdivr
pop
dec
or
push
shl
scas
cmp
sbb
repz
push
and
ret
add
loop
enter
mov
inc
add
fs
loope
int3
sub
inc
jno
mov
in
jo
add
imul
dec
add
jne
xchg
pusha
mov
hlt
ss
push
rolb
out
pop
mov
enter
inc
or
sbb
jl
les
xchg
fs
fdiv
jns
test
mov
xor
aam
adc
xchg
rcrb
rolb
fiaddl
add
fisttpl
sub
imul
mov
xorl
inc
push
add
pop
rcll
inc
inc
add
loop
mov
fldpi
mov
dec
daa
fiadds
add
orb
lret
mov
cmp
sahf
jo
lret
dec
dec
in
sub
dec
lds
add
adc
jecxz
inc
addr16
leave
enter
nop
add
jb
cmpsl
push
push
hlt
pusha
sahf
sbb
add
xchg
bound
jl
inc
push
add
mov
adc
push
and
arpl
pop
test
adc
loop
xor
test
inc
aad
popa
add
add
repnz
testb
dec
pushf
add
jno
outsb
mov
cwtl
cld
xchg
and
adc
mov
aad
add
test
pop
dec
es
in
daa
pop
or
push
mov
test
aaa
mov
pop
test
addr16
rcr
add
rolb
daa
pusha
sub
outsb
jne
mov
mov
add
mov
add
mov
mov
and
lock
mov
aas
push
in
xorb
insl
sbb
lcall
in
add
pop
sub
sbb
fs
push
gs
imul
mov
dec
add
sub
aaa
jns
xchg
cltd
mov
add
out
sub
jmp
mov
xchg
shlb
dec
cmpsl
ror
lock
sbb
xchg
cmp
add
jp
cmp
add
pop
loopne
and
insl
repnz
add
into
and
loopne
cs
fcomip
xor
adc
and
jb
jg
dec
add
fldl2t
enter
adc
xor
pop
repnz
addr16
test
lock
and
pushf
pop
mov
ljmp
gs
adcb
mov
dec
pop
mov
pop
outsl
sbb
xor
adc
pop
add
ds
and
and
mov
out
loope
mov
pop
sbb
and
adc
dec
push
sbb
dec
mov
inc
mov
enter
and
fsubp
or
add
je
pop
mov
mov
in
add
cmc
flds
pop
dec
dec
cmp
xchg
and
mov
add
ret
dec
inc
iret
jle
sub
aam
sbb
dec
jg
xchg
add
loopne
adc
aaa
add
das
adc
icebp
adc
and
pop
dec
ret
fs
mov
sbb
mov
inc
sbb
orb
add
fiadds
stc
leave
mov
je
loope
int
test
je
mov
in
or
lods
or
mov
xchg
mov
mov
outsl
sbb
sti
jbe
ljmp
cmp
xchg
addb
leave
sbb
ljmp
push
movsb
or
pop
pop
mov
pop
imul
xchg
and
clc
push
fs
sarb
mov
or
loope
inc
lock
scas
pushf
add
movsb
int
mov
cli
and
adc
add
pusha
push
adc
fdivrs
out
lret
sub
mov
les
call
movsb
add
call
ja
dec
mov
xorb
lock
hlt
mov
dec
xchg
mov
and
imul
loopne
xchg
cld
jns
sbb
mov
cmc
and
fs
and
mov
add
jmp
mov
add
sbbl
leave
call
add
aas
mov
mov
push
in
fst
pop
push
pop
mov
xchg
xchg
orb
mov
cwtl
sub
rcll
int3
jne
and
mov
dec
mov
in
mov
outsb
add
mov
inc
std
jl
sbbb
daa
add
pop
repz
int3
mov
add
inc
in
sbb
daa
xor
lock
les
movsb
jmp
dec
mov
sub
jnp
xchg
arpl
mov
inc
add
lods
cmp
das
jae
mov
or
js
mov
loope
loopne
inc
movsb
mov
data16
jl
mov
addr16
jb
cmpsl
push
sbb
mov
dec
mov
call
clc
cmpsl
ds
lds
dec
or
add
repz
outsb
push
call
dec
adc
insb
aaa
adc
sub
dec
repnz
inc
mov
inc
add
fcomi
sub
add
mov
adc
or
icebp
arpl
ja
add
jo
sbb
sub
leave
add
xor
push
bound
xor
mov
fistps
mov
add
ss
dec
xor
call
je
rcl
push
aad
shl
pusha
sub
ljmp
shlb
lods
mov
arpl
mov
movsb
cmp
inc
imull
es
insb
and
push
and
and
add
and
lcall
loope
adc
sub
js
roll
out
testb
xor
in
das
add
xchg
int3
imul
jmp
fsubrl
out
mov
and
aaa
xor
add
insl
inc
mov
mov
and
dec
js
adc
roll
add
jo
popa
clc
dec
mov
jge
shll
in
add
and
add
pop
inc
mov
pushf
jmp
jmp
test
and
iret
repz
loope
mov
std
add
dec
hlt
cwtl
pusha
add
imul
push
xchg
outsb
cmp
cmpsl
fsubs
repz
xlat
or
xchg
sub
movsl
or
mov
sbb
ds
mov
enter
dec
xchg
sbb
adc
in
sbb
mov
shr
jbe
outsl
adc
fbstp
cmp
sbbl
jns
repz
sbb
in
scas
scas
xchg
adc
or
hlt
test
and
xor
push
xchg
int3
cltd
shr
flds
cmp
sbb
shlb
cli
and
ljmp
add
shrl
les
andb
dec
sbb
dec
push
and
lods
xchg
lock
add
pop
lahf
cmp
jnp
inc
cmp
or
dec
lahf
loope
cmp
notb
add
nopl
arpl
loope
adc
je
movsl
sbb
pop
sub
sbb
mov
push
and
mov
stos
call
pop
pusha
pop
loopne
push
add
lock
lahf
fidivrl
dec
ds
fisttps
xchg
subb
std
add
xchg
sbb
mov
fidivl
pop
pop
and
ljmp
push
lods
sub
jo
push
and
outsl
mov
and
sarb
call
test
cld
dec
adc
sbbl
or
push
mov
testb
dec
and
xor
sub
inc
insl
cmp
mov
sub
mov
jp
and
mov
out
repnz
movb
ret
push
or
arpl
mov
rcll
xor
btr
ja
adc
into
das
adc
insl
adc
xchg
add
cmpsl
sti
movsb
cmp
pushf
sub
and
xchg
sub
mov
cmp
cmpsl
sub
enter
in
add
xchg
dec
cmp
stos
push
dec
or
and
pushf
dec
dec
fimull
add
outsl
jnp
sub
sub
jl
rorb
lods
test
dec
inc
popf
pop
or
or
daa
ret
mov
clc
in
push
inc
andl
dec
mov
dec
push
mov
add
and
xor
dec
add
inc
scas
inc
filds
jmp
in
je
test
xchg
lock
aaa
lock
sub
xor
out
dec
in
mov
push
rolb
in
ljmp
sbb
pushf
jecxz
orl
lock
sti
cmp
mov
sahf
or
lret
subb
aaa
add
inc
fimull
and
sbb
and
enter
push
insb
cmp
pop
in
daa
jmp
out
dec
pop
sbb
movsb
cmp
jae
xchg
and
test
lods
or
inc
or
sbb
cltd
sbb
cmp
mov
fdivl
mov
push
jge
insb
sub
lahf
fstl
or
xor
jle
mov
sbbl
clc
jae
pusha
outsl
repz
add
pop
add
daa
int3
dec
call
sub
mov
lock
or
jecxz
popa
or
xor
add
mov
lds
add
in
sub
jge
or
sub
insb
adc
push
faddp
sti
xorb
cwtl
pushf
stos
mov
or
fsubrl
push
jae
mov
add
mov
add
dec
test
cmpsb
hlt
loope
push
in
xor
sub
mov
test
pop
adc
data16
inc
push
es
fs
inc
dec
dec
cmc
jns
nop
sub
sti
jno
xlat
test
sbb
out
inc
sub
or
rolb
xor
sbb
add
cmc
add
loopne
mov
hlt
add
arpl
sti
int3
add
mov
dec
jl
and
adc
dec
fdivrl
mov
mov
mov
fadds
push
xor
mov
mov
inc
inc
loopne
cmp
add
loopne
pop
popa
subb
loopne
mov
push
pushf
add
mov
ja
add
sbb
jecxz
mov
adc
mov
aaa
icebp
jo
test
push
add
jne
cmpl
inc
int3
sub
fisttps
sbb
pop
mov
in
mov
inc
adc
jo
dec
xor
hlt
mov
loop
repnz
xor
adc
lock
sbb
pop
add
pushf
add
arpl
test
hlt
cmpsb
add
mov
and
clc
xchg
stos
pop
xchg
xchg
push
callw
mov
mov
mov
cwtl
or
inc
out
mov
add
dec
xor
dec
xchg
lcall
or
xchg
push
sahf
pop
enter
add
pop
lcall
cli
out
inc
ljmp
push
ficompl
or
push
or
adc
adc
in
lock
sub
mov
inc
and
call
sub
sub
inc
mulb
sahf
adc
repz
xor
loope
hlt
or
dec
dec
dec
and
and
and
add
sub
mov
jno
daa
pop
loopne
mov
or
cmpsl
repz
hlt
jno
sbb
cwtl
mov
inc
adc
cmc
push
xchg
js
add
loop
cmp
add
lcall
mov
and
insl
adc
mov
sub
push
pop
leave
movsb
rcrl
dec
dec
mov
dec
in
arpl
mov
in
xor
loop
int3
pop
xor
adc
enter
and
add
sbb
mov
fdivrs
xlat
lods
xor
add
psubb
push
cmp
adc
xchg
xchg
ss
push
pop
pop
mov
repnz
mov
mov
adc
fnstenv
data16
outsb
jmp
addl
jo
xchg
out
push
lea
sbb
xor
inc
xchg
sub
inc
jb
sub
mov
or
jns
xchg
push
or
jnp
addb
dec
data16
je
jnp
add
iret
adc
mov
or
sub
mov
in
or
or
cld
inc
cmp
bound
enter
push
inc
mov
inc
push
xchg
mov
inc
rep
or
or
sub
movsb
xor
cld
aas
ficoml
mov
jge
xchg
cmpsl
and
xchg
push
leave
gs
out
icebp
xor
addr16
or
and
or
fs
fst
xchg
pop
or
dec
dec
mov
pop
test
adc
outsb
xor
add
xchg
cmpsb
pop
adc
nop
sarl
pop
pop
lods
pop
pop
clc
loopne
push
pop
es
daa
sub
push
xorb
aas
xor
arpl
jecxz
cwtl
orl
test
pop
jns
or
mov
popa
sbb
pop
dec
and
loope
add
jno
call
xor
add
cmp
or
popa
mov
cmp
aas
jecxz
push
fsubs
testl
xor
aam
dec
or
mov
pop
leave
mov
pop
xchg
xor
sub
xor
hlt
fmul
mov
in
in
mov
jecxz
sbbl
test
ret
call
jbe
add
fnstenv
xorw
and
and
lods
add
fstps
faddl
insb
sub
outsb
add
jae
inc
cmpsl
arpl
lret
cmp
inc
nop
add
and
icebp
jns
jp
test
jnp
xchg
sbb
les
lods
pop
cli
sbb
mov
in
movsb
add
sub
fcmovu
and
mov
sub
cmc
es
mov
rcrl
stc
pop
mov
mov
adcb
dec
dec
in
scas
lds
pusha
add
cmp
test
xor
add
jmp
adc
roll
lds
ret
ljmp
sub
xlat
add
loope
jp
push
cmp
repz
dec
adc
pop
dec
xchg
xor
and
or
pop
addl
xchg
daa
jl
repz
enter
in
aas
popa
cmp
aaa
enter
xor
or
dec
out
dec
jae
inc
pusha
insl
and
insb
inc
lods
ljmp
and
stos
sbb
loopne
mov
mov
cmpsl
imul
adc
mov
cmp
call
sbb
in
addr16
sub
pushf
and
ret
popa
adc
add
inc
clc
inc
mov
add
sbb
popa
in
daa
stos
push
test
int
sbb
and
adc
mov
xor
or
sub
mov
pop
inc
movsl
test
sbbb
xchg
cmpsl
test
sub
lods
sub
and
sbbb
andb
add
dec
orl
add
xorb
cs
cmp
or
xor
add
mov
rcl
add
cmp
jo
aad
and
inc
mov
mov
sbb
add
push
jbe
add
xchg
adc
movd
in
pop
mov
xor
fidivl
pushf
inc
add
push
xor
imull
cld
out
in
aas
cmp
nop
cs
and
stc
in
shll
jl
add
pop
dec
fsubr
movsl
fst
push
xor
cwtl
add
and
cmc
inc
ljmp
mov
cmpsl
mov
mov
insb
nop
sub
add
and
adc
jmp
fs
and
sbb
push
call
sub
jg
lods
add
stos
cli
mov
pushf
cli
pop
inc
shrb
test
loopne
inc
adc
mov
xchg
cmp
dec
in
imul
inc
push
outsb
cmp
lods
or
shrb
test
mov
xor
fimull
incb
mov
pop
sub
jbe
pop
fnstenv
push
lahf
inc
loope
or
stos
sub
leave
popf
mov
cmp
pop
outsl
jne
add
out
or
cmpb
push
idivb
cs
dec
mov
loopne
pop
pop
jge
call
loope
jl
ret
inc
sbb
xchg
and
jmp
push
pop
mov
push
pop
mov
test
jnp
fisubl
shlb
add
add
rolb
add
arpl
xchg
cwtl
pop
cmp
jne
add
lcall
or
jae
dec
andl
pop
inc
out
or
push
sbb
and
movsb
movsb
pushf
lret
dec
popa
mov
pushf
dec
lock
loopne
or
orb
jl
push
dec
inc
sbb
lcall
test
xchg
ret
mov
pop
hlt
xchg
bound
pusha
cmpsb
mov
xchg
repnz
sub
mov
pop
pop
in
data16
and
adc
stos
imul
add
cld
and
dec
or
dec
sub
add
cwtl
jle
jge
cmp
sbb
arpl
mov
cwtl
lret
jb
sbb
loope
in
fs
pusha
addr16
dec
xor
mov
xchg
xchg
insl
add
add
cs
dec
hlt
sub
sbb
orb
xor
pop
jo
mov
not
in
ds
dec
aam
test
inc
pop
loopne
push
loopne
sub
adc
aam
int
or
or
in
pop
ret
jmp
push
sarb
test
cmp
flds
inc
shr
lock
jge
mov
insl
sub
jge
insb
sbbl
out
jo
loop
mov
leave
dec
lods
cmpsb
inc
loopne
ss
pop
stos
movsb
hlt
pop
insb
and
repz
xor
lret
add
clc
pop
mov
test
stc
add
lods
loope
js
xchg
and
jmp
rorb
jp
fwait
xchg
mov
out
imul
daa
and
std
xchg
add
push
push
in
add
cmp
inc
push
call
mov
outsb
aaa
enter
jno
cmpb
pop
sbb
dec
jno
orl
mov
pop
add
and
nop
sub
jns
add
movsl
sbb
mov
sbb
dec
popf
dec
enter
xor
shl
sub
jae
add
das
jnp
add
jecxz
mov
repnz
xchg
jl
mov
shrl
mov
lret
sbb
xor
inc
push
jl
loop
xor
test
stos
int3
ljmp
xor
mov
loopne
lock
popa
jae
call
jns
and
bound
mov
outsb
jbe
mov
insl
andb
sub
dec
sub
ss
int3
xchg
lock
pushf
xor
mov
or
sub
ja
xchg
cmp
ljmp
inc
xor
dec
aad
pop
pusha
or
aam
adc
setne
and
adc
aas
aam
pop
jno
negb
aam
pop
aaa
je
mov
lds
hlt
cs
jb
add
or
jbe
lcall
mov
mov
shrb
xor
sti
orb
inc
adc
add
call
hlt
mov
sbb
cmp
dec
stos
enter
test
mov
push
push
aas
mov
int
mov
dec
add
andb
jne
inc
add
dec
insl
pop
sbb
sub
sub
mov
pop
je
jo
inc
popa
mov
mov
xchg
dec
bound
and
cmp
push
or
in
shrb
rcll
or
nop
test
fiadds
or
jne
aam
mov
or
ja
and
lods
add
shl
aas
mov
pop
pop
dec
or
fsubrl
cmp
add
rcr
ja
or
dec
inc
sub
sarl
ja
je
hlt
pop
pop
sbb
mov
jecxz
xchg
or
cmp
mov
mov
addb
daa
mov
cmp
sub
xlat
imul
pop
add
loop
fs
mov
xor
inc
bound
jae
pop
mov
dec
call
pop
pop
and
mov
pop
inc
negb
ljmp
jo
pop
es
rcl
enter
fcmovnbe
cmp
jbe
cmp
rolb
loopne
push
cmp
mov
cmpsl
daa
jecxz
sarb
inc
addb
outsb
dec
jge
in
mov
movsl
int3
test
ret
dec
cmpsl
in
stos
jae
test
nop
repnz
add
popa
loopne
adc
mov
jnp
jge
adc
xor
shl
sub
or
mov
das
loopne
push
jg
pop
or
adc
inc
xor
inc
mov
popf
dec
adc
xor
sub
lock
bound
cmpsl
mov
cwtl
popa
lahf
imul
mov
ljmp
scas
sub
or
mov
lods
adcb
jae
pop
add
dec
mov
or
fucomi
adc
and
js
repz
and
add
addr16
xchg
inc
les
dec
push
mov
inc
out
ljmp
movsb
or
movntps
fs
cmpl
nop
je
add
enter
xchg
xor
push
pop
loop
adc
iret
dec
lock
dec
and
lods
xor
daa
push
jo
aad
xor
mov
xchg
adc
jno
cmp
cmp
jne
mov
fistpl
inc
int
add
pop
sbb
stc
ja
adc
jo
mov
add
add
daa
sbbb
jge
pop
nop
dec
mov
or
ss
repz
sahf
jo
add
fisubs
mov
pop
sbb
push
dec
lret
imul
clc
jbe
insl
inc
add
or
or
es
ss
les
adc
inc
adcb
jo
call
les
xor
clc
dec
mov
lret
jp
lahf
pop
inc
stc
shlb
rorl
imul
mov
cwtl
les
js
add
jnp
jae
scas
inc
addb
aam
push
fistps
ljmp
negb
xchg
add
jmp
mov
faddl
pop
push
js
mov
dec
loop
daa
mov
sub
cmpl
fsubs
and
inc
add
aam
mov
or
inc
dec
inc
and
hlt
out
lock
ret
sbb
or
aas
outsl
add
fidivrl
dec
jecxz
in
das
and
in
add
std
lcall
jecxz
sahf
fsin
mov
cs
mov
add
loope
xor
dec
mov
cld
enter
xor
mov
aas
in
sbb
adc
mov
mov
in
mov
scas
loopne
add
pop
mov
pop
push
clc
movsl
lock
cmpsl
cmp
das
jmp
repnz
daa
out
mov
fisubs
push
imul
leave
xchg
dec
mov
popa
add
jp
xor
iret
xchg
sub
adc
mov
add
xorl
and
lock
dec
xchg
push
pop
pop
es
addr16
rcrl
data16
sub
adc
adc
mov
lcall
push
xor
push
in
in
sbb
xchg
add
add
adc
in
mov
faddl
adcb
add
addr16
xor
cmp
add
pusha
xchg
cmp
ret
cmp
andb
inc
or
popa
aad
aam
adcl
rclb
dec
pop
push
add
push
repnz
add
xchg
insl
xchg
lret
dec
pop
inc
and
pusha
sub
or
xchg
adc
mov
cmp
outsb
test
sub
xchg
rsm
lret
fs
mov
sbb
popa
lock
dec
and
xacquire
dec
pop
dec
and
add
aad
sub
mov
call
lods
rcrb
andb
inc
fs
popa
adc
inc
and
ret
add
or
or
sahf
pop
sarl
insl
pusha
in
repz
jbe
scas
dec
cli
mov
add
imul
and
adc
pushf
cmp
push
jle
mov
in
xor
ss
jo
jecxz
test
sub
addl
pop
imul
test
fs
fldenv
test
dec
roll
loope
scas
and
loopne
adc
sbb
sub
pop
sbb
daa
xor
loope
cmpb
push
loop
test
adc
bound
popa
adc
shlb
jecxz
cld
data16
jae
add
sbb
mov
mov
adc
push
dec
xor
and
inc
mov
out
sahf
insb
add
test
xor
inc
int3
adc
cmp
test
add
test
outsb
cmp
sub
loop
pushf
adc
js
call
cmp
inc
push
lods
enter
mov
and
aad
sbbb
lods
add
mov
aam
add
jns
out
neg
mov
xor
dec
cld
mov
js
dec
jne
mov
xchg
inc
in
repz
push
sbb
je
pop
push
or
add
mov
cmpsl
dec
and
sub
in
add
mov
rolb
xor
add
loope
cmp
push
adc
cli
xchg
push
popa
nopl
sti
add
mov
int3
sbb
jno
sbb
fdivrs
or
inc
ds
shrb
lds
ljmp
or
fnsave
jne
add
add
xor
add
pusha
inc
jecxz
sti
or
inc
sub
pop
loopne
rol
imul
mov
add
pop
sbbb
mov
sub
fbstp
sbb
sub
popa
add
testb
shll
xchg
aam
fmull
lods
sub
adcb
xlat
test
add
outsl
sub
insb
nop
pusha
pop
push
add
dec
sbb
jecxz
cs
adc
sbb
pop
daa
inc
in
je
fisubl
xor
insl
mov
cmp
call
and
out
lods
pop
push
outsb
dec
cmpsl
mov
lea
mov
pop
dec
add
popf
xchg
cli
lret
add
add
sub
xchg
daa
rclb
ja
push
sub
into
pop
rcrb
push
int
inc
shrb
jge
sbb
push
jg
sbb
push
das
adc
lahf
adc
push
pusha
adc
pop
sub
add
inc
leave
pop
testl
dec
ljmp
add
inc
cmp
sbb
cld
add
das
iret
popa
ds
add
inc
mov
jo
sub
ds
lods
push
add
add
pop
cmpl
and
int3
jns
cmp
clc
aad
sbb
pop
xlat
push
or
push
jmp
sub
or
fadds
inc
ret
cmp
fwait
ljmp
call
cmpl
add
sub
mov
push
inc
fsubrl
add
into
pop
addr16
loope
sbb
add
adc
push
xor
clc
inc
cmp
ret
lds
sbb
sub
pop
jb
int3
pop
iret
nop
mov
mov
cmp
sub
shlb
xchg
test
mov
sub
mov
outsl
add
pop
nop
movsb
das
icebp
and
adc
xchg
dec
push
bound
arpl
jo
or
inc
or
push
or
enter
inc
and
mov
dec
mov
and
mov
jnp
pop
hlt
outsl
sub
mov
pusha
js
or
and
xchg
fdivs
xchg
sub
pop
jg
mov
adc
into
adc
sar
push
xchg
mov
xor
test
pusha
mov
pop
cwtl
xor
pop
add
aaa
test
mov
and
mov
xor
xor
adc
push
or
cli
or
sbbb
int3
sub
fisubs
inc
mov
mov
pusha
loopne
cs
loopne
jp
sub
add
inc
les
movsb
add
das
inc
or
loope
sub
popa
jo
lods
adc
jb
test
scas
cwtl
add
add
rcr
push
mov
loopne
inc
dec
and
ljmp
mov
inc
ja
dec
dec
or
pop
loope
mov
fs
dec
push
jnp
adc
mov
sbb
sub
arpl
nop
and
loope
sbb
mov
sub
inc
mov
ret
pop
add
nop
add
mov
pop
or
cmp
ret
pop
cmp
cmpsl
inc
xor
enter
xor
and
dec
pop
sub
add
add
add
pushf
test
pop
aam
imul
dec
adc
inc
mov
fiadds
sbb
sti
push
lret
jbe
jno
adc
rorb
and
pop
add
movsl
jmp
sbb
cmp
lcall
jp
xor
add
movsl
xor
icebp
sub
subb
insl
sub
xor
je
push
lods
push
ret
mov
fidivl
ljmp
fs
xchg
add
bound
adc
push
scas
mov
pop
js,pn
mov
test
stos
clc
dec
inc
arpl
push
mov
add
ds
cwtl
push
stos
push
sbb
mov
scas
std
dec
dec
mov
sbb
cmp
nop
push
inc
std
jmp
test
sbb
outsl
stos
inc
push
pop
cwtl
add
test
out
dec
daa
popa
mov
or
scas
rorb
pop
hlt
sub
xor
jg
pusha
shrb
mov
repz
rcrb
push
sti
dec
sub
sbb
adc
xor
pop
bound
add
mov
in
push
or
or
or
or
ljmp
mov
adc
sbb
fs
jne
subl
scas
xchg
xor
jns
push
dec
lock
loopne
cmp
repz
sbb
sbb
and
push
dec
pusha
bound
sub
cmp
dec
push
jg
stos
pop
out
popa
int3
jno
mov
xchg
pop
add
shlb
sti
jbe
xor
dec
mov
out
in
xor
inc
pushf
and
out
int
mulb
adc
cli
mov
sub
enter
bound
add
pusha
adc
repz
push
sti
push
mov
and
jg
test
adc
loopne
lods
test
cmp
in
push
push
fsubl
push
or
adc
syscall
adc
insb
mov
dec
add
negb
fs
and
sbb
dec
adc
add
or
std
add
stos
outsl
sub
sub
sub
icebp
stos
push
add
sub
mov
add
dec
inc
shlb
jmp
clc
mov
imul
shlb
and
adc
xor
stos
dec
add
sub
shll
imul
or
loop
jno
cli
in
sub
js
xchg
add
movsl
push
jns
cmpsb
dec
cmp
mov
push
push
negb
xchg
xor
insl
bound
dec
pop
rcrb
push
mov
lods
popa
lods
add
cltd
pop
inc
xchg
in
scas
dec
and
push
adc
aam
cwtl
repnz
leave
jns
inc
mov
mov
or
mov
aas
mov
sub
sbb
or
movsl
xor
mov
add
mov
mov
imul
adc
cmpsl
or
jp
vprotw
pushf
mov
lock
mulb
add
cmc
shrb
sti
and
test
dec
cld
push
je
lcall
mov
push
sub
inc
jl
mov
xor
dec
or
pop
push
mov
add
push
inc
fsubrl
and
adc
addb
xor
add
pushf
nop
popa
jp
pop
jge
int3
in
or
lods
std
imul
jne
lcall
sbb
cwtl
cmp
inc
mov
cwtl
adc
mov
mov
sbb
sub
cltd
andb
sub
out
sti
nop
roll
or
out
mov
inc
pop
mov
or
push
out
and
sub
lcall
call
imul
inc
test
dec
test
sub
inc
push
xchg
cmpsl
test
pop
dec
dec
adc
push
xor
in
mov
int3
insb
pop
rcrl
and
xor
pop
out
lret
loopne
cmp
sub
inc
dec
test
cmp
mov
shll
scas
testl
loope
ret
jo
jp
repnz
mov
fwait
pop
cltd
adc
pushf
pop
xcrypt-cbc
cmpsl
pop
xor
ja
dec
test
inc
imul
hlt
cli
jp
sub
fs
mov
les
pop
adc
inc
and
add
in
xor
je,pt
add
mov
scas
sub
dec
sub
lcall
dec
sub
mov
ja
or
stc
sbb
push
cmovns
pusha
push
xor
bound
sub
cmp
jno
aas
mov
inc
test
pop
xchg
or
sub
xchg
add
cmc
insl
sub
add
push
popa
es
pop
inc
fs
fs
out
or
in
std
add
shrb
adc
cltd
adc
sahf
cwtl
fnsave
cwtl
jns
bound
sbb
lock
push
sub
push
pop
sbb
mov
add
pop
lret
push
adc
rcll
mov
in
sbb
sub
or
dec
jnp
loop
call
cmpsl
sbb
push
mov
test
inc
adc
xor
jl
jns
in
mov
fstl
and
int3
out
xor
mov
lock
outsb
scas
sbb
sbb
adc
mov
out
in
sti
sbb
lret
cmpl
sbb
cmp
jb
insb
jl
mov
aad
ds
cmpsb
lods
pushf
adc
and
mov
cli
inc
mov
sahf
or
out
xorb
scas
or
cmpsb
out
fwait
push
repnz
mov
pop
cmp
fldenv
test
mov
adc
lods
shlb
pop
inc
aam
cmp
add
push
push
inc
in
fcompl
cmp
and
mov
sub
mov
jo
lcall
cmpsb
shrb
mov
or
and
add
pop
jg
push
push
in
cmp
jp
fwait
leave
adc
mov
gs
hlt
mov
and
pop
repz
cmp
or
inc
xchg
or
or
nop
adc
add
sbb
mov
dec
enter
pop
mov
fidivl
inc
mov
cmp
sbb
add
mulb
jge
loop
subb
and
pop
clc
pusha
mov
mov
dec
das
mov
mov
dec
lods
pop
jo
cmp
add
inc
andl
mov
jo
and
sbb
cmp
sbb
insb
add
or
or
insl
add
in
jl
sub
add
and
repz
and
xorl
sbb
rcll
jmp
add
sbb
jo
jno
mov
xor
test
sub
xor
pusha
sbb
xchg
or
xor
push
fisubs
cs
mov
inc
test
or
inc
jle
dec
mov
cwtl
add
add
add
dec
mov
les
sub
or
inc
mov
or
pusha
cmp
add
insb
sahf
mov
add
imul
sbb
xchg
enter
add
clc
mov
int
adc
inc
xchg
add
jge
xchg
add
in
xor
enter
mov
pop
es
mov
pop
clc
ljmp
call
fnstcw
rcl
add
sbbl
pushf
outsb
push
in
pop
movb
mov
xor
inc
pop
jns
add
jle
and
sbb
sub
inc
fisttpll
cwtl
xchg
jb
pop
cmp
lock
and
push
shl
and
andl
leave
inc
fimuls
pushf
pop
jb
xchg
add
or
inc
mov
push
adc
add
ds
fwait
lods
cs
pop
insl
lods
fcmovnb
jp
shrb
sbb
iret
xchg
punpckldq
and
in
xchg
cwtl
or
inc
scas
cmp
je
pop
xchg
test
mov
std
out
xchg
adc
mov
inc
mov
push
popa
std
mov
pop
mov
enter
nop
sub
sbb
pmulhuw
test
cmc
pusha
imulb
add
leave
add
stos
adc
iret
pop
cltd
shufps
mov
outsl
cbtw
adc
cld
fdiv
push
mov
bound
push
mov
mov
notb
sahf
scas
xor
out
insl
xlat
and
insb
jmp
add
aad
inc
pop
cli
dec
pusha
add
test
fucomip
xchg
add
mov
and
add
hlt
dec
add
push
insl
lea
add
xchg
sbb
inc
jmp
leave
adc
fs
fldl
icebp
xchg
test
shll
lock
push
stos
movsl
dec
loopne
in
lea
and
xor
std
ljmp
sti
push
imul
jo
icebp
add
and
inc
add
pusha
std
xchg
orb
add
jbe
pop
inc
fidivl
sbb
jg
cmp
fst
lods
les
adc
push
test
sub
loopne
and
dec
in
jmp
repnz
lcall
movsl
arpl
out
add
addb
push
ljmp
cs
add
dec
jmp
xor
jp
pop
mov
mov
add
stos
add
inc
pop
aam
xorl
mov
in
pop
js
fs
hlt
pop
ljmp
fprem
add
jns
stc
add
add
add
mov
rclb
xor
xchg
outsb
int3
mov
mov
push
std
mov
add
jo
das
stos
push
fisubl
xorb
jno
add
fcoms
pop
into
mov
sub
inc
add
dec
mov
add
mov
add
jl
sub
sub
sub
js
jno
push
mov
call
fdivp
aaa
pop
push
push
fildl
nop
data16
push
add
test
mov
jecxz
ljmp
filds
or
mov
test
fld
je
scas
addb
test
fists
pop
pop
adc
adc
add
mov
adc
aaa
jbe
add
push
jmp
add
icebp
lods
jbe
jnp
sti
add
cmp
jnp
add
jo
cmp
mov
pmullw
xor
inc
sub
mov
nop
mov
pop
ljmp
popf
pop
mov
imul
xor
or
insb
scas
cmc
add
dec
aam
ficoml
movb
ret
cltd
xchg
cmp
test
enter
push
adc
cwtl
cmp
jge
or
add
inc
mov
call
xlat
jbe
jp
add
shlb
push
js
jo
dec
aas
adcb
sub
jne
test
fsubp
add
sti
ljmp
adc
push
jae
mov
add
fadd
adc
loopne
add
hlt
cmpsl
pusha
iret
pusha
inc
repz
in
add
dec
add
add
lahf
js
push
sub
jb
add
jle
push
mov
xor
testb
and
cwtl
out
dec
rcll
xchg
movsb
or
out
addr16
and
jg
add
insl
rolb
mov
sub
add
mov
jne
push
add
add
in
adc
jae
add
adc
mov
add
inc
adc
jle
popl
lods
rorl
ss
or
hlt
bound
fiadds
sub
sti
aas
mov
push
xor
ja
cld
outsb
jb
sbb
adcb
add
imulb
jmp
pushf
add
sbbb
fst
inc
lret
loope
inc
add
ret
push
movsb
add
test
cmp
xor
cltd
add
in
push
das
addl
jecxz
sbb
mov
vpmadcswd
ja
push
out
movsl
or
int
stos
add
or
xchg
push
aas
xchg
pop
orb
dec
add
frstor
cltd
add
into
jecxz
leave
jb
sub
mov
roll
push
add
fwait
js
aam
lods
nop
aas
add
sub
push
mov
les
or
data16
stc
jae
clc
cmp
mov
mov
add
data16
std
add
outsl
inc
or
inc
jbe
pop
into
push
push
mov
shl
pushf
xor
lret
add
aam
fdivs
mov
imul
adc
aas
add
scas
pop
mov
inc
movntq
lea
jge
pop
test
lcall
pushf
mov
mov
pop
xor
xchg
and
mov
fisttpll
jp
jle
jecxz
cli
dec
lock
sub
hlt
or
pop
outsl
add
js
xor
js
enter
xchg
jl
add
push
or
stos
push
fisttpll
dec
hlt
pop
jbe
leave
clc
stos
je
add
pop
sub
lock
add
xchg
fdiv
rolb
push
clc
cmp
add
and
stos
xchg
sub
and
popl
jns
pop
popf
arpl
cmp
and
repnz
xchg
and
mov
js
and
mov
add
add
rcll
and
adc
add
lds
sarl
sarb
fistl
add
push
sbb
pop
mov
and
mov
je
pop
das
add
daa
inc
pushf
arpl
mov
jg
nop
addr16
stos
dec
sahf
ficompl
fsubrs
sbb
jl
push
out
sbb
outsb
cmp
add
cltd
bound
ja
cld
add
js
xchg
hlt
test
xor
cs
movl
addr16
rolb
nop
sbb
add
sub
jno
sub
xlat
int3
mov
push
mov
inc
dec
addb
mov
add
add
int
push
dec
lds
out
push
in
ffreep
pop
sbb
mov
aaa
xor
dec
xchg
sti
inc
pusha
cmpsl
sub
repnz
add
mov
hlt
cmpb
push
subb
add
lods
pop
dec
sbb
push
loope
jnp
sbb
lahf
xor
jns
add
hlt
ret
mov
add
xor
cmp
flds
or
andb
adc
sbb
cltd
mov
sbb
gs
push
out
sti
hlt
rcrl
lret
inc
mov
inc
add
test
ljmp
add
xchg
fcmovu
add
insb
mov
add
cltd
push
push
sub
mov
into
xor
pop
add
shl
pop
leave
add
daa
test
inc
add
inc
mov
aaa
push
in
nop
arpl
ja
sbb
mov
cmpsb
bound
imul
mov
inc
cmc
lods
mov
dec
roll
mov
cwtl
push
addb
mov
adc
xchg
mov
fisubrs
xchg
and
jae
jbe
adc
cmc
clc
add
jg
out
pop
add
test
xchg
add
loop
pop
cwtl
test
xlat
mov
sub
add
iret
push
sub
mov
shlb
test
arpl
cmp
mov
out
popl
lret
inc
loopne
sbb
montmul
cmpsb
add
pop
push
int3
xlat
gs
enter
js
negb
xchg
and
lds
shrb
int
or
add
ja
xorb
push
mov
shl
rolb
push
push
add
mov
add
mov
pminub
cwtl
outsb
push
or
rorl
ficomps
hlt
adc
pop
cld
push
push
and
inc
jmp
adc
nop
int
loope
sbb
xchg
mov
jp
cmp
inc
shll
push
fcomp
push
push
jmp
cmp
into
pop
jno
mov
subb
mov
jg
add
bound
sbb
loop
adc
sarl
adc
aad
push
cs
push
sti
add
mov
add
pop
inc
dec
orb
in
ljmp
pop
and
repnz
mov
pop
fldl
add
ss
or
mov
out
push
inc
and
mov
xchg
sub
stc
fdivs
rcrb
ja
les
notl
addb
sbb
das
test
in
pop
or
and
leave
cmpsl
mov
add
jmp
dec
lahf
dec
fidivl
data16
js
add
jg
sub
das
pop
add
leave
imul
enter
or
jg
sbb
jo
and
jle
lock
ljmp
or
test
sbb
fsubr
sbb
mov
vmovmskps
insb
add
add
mov
jge
xchg
loope
add
mov
orb
mov
aaa
jp
sbb
in
sbb
scas
sbb
add
out
and
pop
dec
add
ljmp
inc
mov
dec
sbb
sbbb
mov
push
call
xor
loopne
mov
adc
inc
xor
pop
add
adc
lahf
add
push
jle
outsb
mov
and
pop
sbb
mov
lret
enter
mov
cmp
loopne
lea
mov
xchg
push
push
push
out
mov
inc
scas
dec
sar
popa
xor
movsl
xchg
jbe,pt
cmpsl
icebp
push
cmovs
and
jge
notl
jo
loope
sbb
xchg
scas
push
mov
adc
adcb
in
shlb
adc
ds
jns
push
add
add
xchg
call
cmp
push
add
sbb
add
cmp
and
hlt
add
pop
jle
jb
sbb
enter
cltd
clc
pop
iret
adc
adc
mov
push
add
incl
hlt
xlat
add
mov
fsubs
inc
mov
sbb
iret
and
mov
loopne
xchg
mov
rdpmc
push
sbb
mov
mov
push
push
loop
or
scas
add
shlb
pop
cli
pop
push
cmp
aad
jg
icebp
lea
or
inc
sub
in
dec
mov
add
clc
cld
mov
cmp
stos
andl
mov
clc
shlb
xor
repnz
mov
add
jmp
mov
sub
add
stos
shr
push
mov
ror
dec
js
cwtl
add
popf
hlt
inc
xor
pop
pop
or
pop
push
rcl
fs
jo
imul
add
xchg
xchg
jb
push
loopne
shrl
pop
clc
xchg
out
enter
aas
ret
shlb
stos
add
push
pop
fsubr
pop
add
xchg
insl
pusha
jne
out
cmp
add
outsl
dec
mov
jl
pop
adc
inc
jb
add
cwtl
sbb
push
add
outsb
push
fmuls
mov
sbb
add
lods
xor
inc
add
hlt
xchg
js
lret
xor
fnstcw
jg
movsl
adc
dec
add
jne
xchg
jbe
xor
add
push
in
rcrl
cmpsb
sbb
lods
add
mov
xor
fisubrs
mov
in
and
pop
push
push
pop
pop
fwait
movsb
pop
incl
loopne
add
sbb
out
mov
jne
loop
pop
test
mov
add
jp
sbb
sbb
push
sahf
lods
movsb
sub
sbb
or
or
pop
mov
adc
push
jge
add
mov
insl
add
nop
jnp
xchg
dec
mov
sbb
rolb
mov
lret
add
bound
scas
xorb
adc
and
cld
mov
mov
pop
movsb
aad
rcr
jg
enter
lock
inc
scas
js
es
jo
insl
or
fwait
sbb
adc
mov
popa
pushf
pop
aas
sarl
vmovhpd
cmp
lods
mov
xor
je
out
xchg
cmp
aam
and
xor
jmp
int3
inc
pandn
xor
mov
jo
jle
pop
outsl
dec
push
jb
mov
sub
cmp
xor
jl
je
cmpb
in
add
stos
jge
mov
adc
push
into
xchg
pop
push
jo
cmc
mov
aas
sbb
xchg
sub
and
push
jb
ret
mov
lahf
in
sbb
lds
cmp
shrb
jb
adcb
rcrl
add
cmp
mov
inc
xchg
lret
scas
add
adc
xchg
add
xlat
adc
xchg
insb
pop
sbb
mov
testb
xchg
dec
dec
push
sub
out
push
popa
xor
push
add
sbb
pushf
dec
push
adc
mov
hlt
popl
mov
jns
dec
out
fwait
sbb
xrelease
sub
mov
cli
add
sub
pop
sbb
push
add
adc
mov
clc
or
push
lock
insl
loopne
inc
clc
or
test
add
int
jl
jge
std
insl
push
add
xchg
mov
xchg
cld
jl
out
sahf
push
lret
mov
add
xchg
adc
or
lea
pop
mov
xor
and
xor
in
sti
add
add
sbb
jae
xor
shrb
or
push
or
out
aad
add
cld
add
daa
and
aaa
fsts
or
add
add
leave
stc
and
mov
repnz
fdivs
add
jg
mov
push
push
pop
mov
push
repz
mov
xor
push
xchg
add
sub
push
addr16
push
mov
gs
bound
dec
es
mov
add
sbb
mov
xchg
or
xchg
arpl
jno
xor
xchg
cwtl
push
shlb
mov
insl
add
out
xor
push
jp
mov
or
int3
jmp
or
loopne
popf
inc
sub
xor
push
clc
fiadds
ret
and
nop
test
and
ljmp
mov
add
int
les
xchg
shlb
xchg
jbe
and
adc
scas
push
aam
and
fimull
mov
shlb
shlb
subb
out
jb
pusha
aad
sbb
or
jg
mov
sti
add
sub
and
int3
cwtl
rolb
inc
mov
outsb
sbb
sti
sub
aas
cmp
mov
xor
rcll
adc
push
inc
ljmp
rorb
fdivl
pop
popf
pop
lds
push
in
movsl
jae
test
pop
bndstx
add
push
or
inc
add
jge
pop
lea
into
mov
and
mov
ja
add
loop
data16
add
mov
add
sub
pop
jbe
icebp
out
sub
add
xchg
adc
jmp
add
inc
inc
std
aad
dec
mov
and
shlb
arpl
add
xor
mov
fs
call
pop
les
cmp
fnstcw
sub
add
mov
xchg
ret
lock
mov
adc
push
sub
fwait
std
lods
outsb
jg
add
fldcw
pusha
aas
jno
add
xchg
addl
in
fs
daa
mov
fwait
dec
fadds
sahf
adcl
sbb
add
jecxz
add
pop
adc
enter
jo
add
ljmp
adc
push
lods
shlb
mov
or
dec
inc
xor
popf
test
cmp
add
loopne
jle
and
mov
push
pop
js
and
fdivr
lret
test
adc
negl
cmpl
add
add
xchg
outsl
je
jmp
push
and
xlat
dec
mov
daa
test
inc
rolb
cwtl
add
pop
stc
jmp
xchg
add
repz
lock
cmp
faddl
mov
incb
out
orl
je
pop
xor
jge
cmp
jb
inc
add
shll
mov
je
or
pop
jl
add
lods
push
xchg
jp
les
cmp
jp
add
stc
jb
mov
test
add
xlat
push
test
dec
andb
mov
data16
lock
jo
addl
adc
mov
fcmove
lds
inc
scas
mov
icebp
jmp
add
andb
popa
inc
sub
pop
inc
dec
dec
sbb
mov
sbb
dec
adcb
test
jp
jle
jae
fiadds
ja
mov
popa
add
orb
mov
inc
jp
iret
or
add
int3
shrb
pop
or
sub
ja
arpl
add
add
mov
je
imul
andb
pop
add
lahf
int
fsubrs
xor
and
xor
xorb
aas
call
push
jge
jp
add
stc
or
xor
xor
add
mov
popf
insb
arpl
lcall
pop
sub
daa
and
cs
add
ret
xchg
movsb
ds
push
mov
add
pushf
mov
or
pushf
adc
into
aaa
add
ret
dec
outsb
outsl
dec
push
loop
add
add
cs
mov
dec
dec
addr16
dec
lea
push
inc
sub
push
adc
adc
mov
push
sub
adc
pop
or
cltd
nop
dec
test
dec
add
pushf
and
and
pop
adc
mov
and
fisttpl
sbb
test
insb
insl
inc
jge
mov
inc
jmp
test
mov
jg
lahf
or
rclb
mov
les
and
test
ja
push
rorl
mov
inc
add
clc
pushf
mov
mov
inc
bswap
cmc
cltd
mov
adcb
pop
add
insl
fxsave
iret
arpl
jecxz
sbbb
xchg
sbb
add
outsl
mov
or
add
add
or
mov
dec
imul
add
aam
push
shl
ds
fcomps
lcall
mov
add
fiaddl
rcrb
xchg
addb
add
ja
fnstcw
add
imul
es
push
mov
push
mov
jae
jo
pushf
add
int
mov
add
stos
cmp
or
out
mov
dec
in
mov
jne
loopne
rcrl
pusha
loop
jmp
clc
shll
in
xchg
int
loopne
pusha
push
jmp
stos
rorl
shlb
jns
lcall
stc
pop
mov
pop
out
dec
sbb
sub
add
pop
rorb
mov
movsb
sub
mov
repz
movsl
imul
shrb
add
inc
push
insb
dec
xchg
loop
lahf
add
adc
das
or
in
insl
dec
mov
aam
inc
addr16
mov
sbb
lret
scas
pusha
mov
cld
inc
lea
jb
jns
sub
sbb
std
adc
push
mov
clc
push
mov
popf
idiv
sbb
xchg
or
mov
sbb
jle
push
adc
xchg
sub
pop
jl
pop
jmp
test
inc
mull
ljmp
xor
clc
sti
cmpsb
dec
inc
jl
dec
daa
dec
pop
movsb
enter
mov
and
loope
pop
add
leave
cmovl
ds
mov
sbb
push
mov
xchg
inc
faddl
cmp
subb
inc
mov
rcr
inc
insb
cmp
pusha
cmp
add
imul
lcall
add
outsl
dec
push
pop
jmp
jb
pop
and
pop
repnz
or
adcb
add
jne
fucomip
rol
cmove
push
pusha
dec
test
call
les
push
add
cmp
jle
xor
push
mov
in
cs
pop
cmp
jns
inc
in
cmc
ja
cmp
mov
mov
in
pop
cld
or
push
pusha
mov
aam
pushf
xor
cmp
sahf
add
stos
add
popl
xchg
std
pop
idivl
jae
ja
cmpsl
orl
jne
aad
xchg
dec
push
add
sahf
in
mov
add
xchg
pop
arpl
mov
sbb
mov
testl
jg
jecxz,pn
mov
sub
add
std
pop
orb
mov
mov
fwait
mov
add
xlat
insl
add
inc
insb
pop
pop
mov
xor
cld
pusha
cmp
pop
jns
xor
pop
mov
add
std
into
test
rol
or
xor
mov
sub
inc
add
popa
cmpb
stos
add
mov
mov
fisubl
ret
mov
nop
jno
pushf
adc
cs
mov
add
mov
add
xchg
pop
loope
in
push
sub
mov
imul
mov
jo
stc
cmp
add
xchg
sti
xchg
xchg
mov
in
xchg
roll
cli
je
ja
add
mov
jno
mov
add
xor
or
ffreep
jle
cmp
add
dec
cmc
bound
xor
fstpl
orb
mov
popa
or
ret
in
data16
jno
testl
mov
jnp
add
jl
out
sahf
stos
jns
call
add
cmp
add
jecxz
mov
xchg
sbb
shlb
add
dec
jg
inc
add
jbe
paddq
pop
add
ljmp
mov
jmp
or
flds
cmp
cmp
subb
fsubrs
pinsrw
adc
clc
pop
ret
lock
ret
mov
mov
jecxz
pop
pop
mov
add
ret
popa
add
lea
shlb
jo
inc
sub
cmp
jo
xchg
push
movsl
sub
lock
out
aas
add
fisttpll
mov
pop
scas
mov
jecxz
mov
mov
xchg
mov
xor
pop
jbe
rol
adc
and
dec
mov
hlt
add
in
pop
add
sub
add
jne
mov
inc
cmpsb
and
fdivs
jno
mov
pusha
push
jg
lahf
or
mov
jno
xorb
lods
add
adc
cltd
pop
cmc
jne
pop
inc
test
lods
jo
push
adc
mov
dec
leave
cmpl
mov
jge
add
push
xchg
dec
xor
pop
outsl
mov
pop
lcall
jae
add
mov
lea
cmp
rorb
jb
shl
sbb
and
dec
je
repz
les
mov
sbb
pusha
mov
inc
call
fldenv
sbb
out
or
shlb
jl
add
sub
stos
mov
inc
mov
lahf
add
adc
jno
add
mov
dec
push
dec
outsl
push
xor
or
jmp
sub
mov
add
fisubrl
cmp
jno
cmp
and
ret
mov
test
inc
xor
push
pop
adcb
loop
push
int
js
push
xchg
punpcklwd
daa
loopne
and
add
movsb
sbbl
xchg
icebp
lea
mov
cvtdq2ps
je
push
int3
cmp
lea
push
and
push
sub
and
nop
rcl
pop
fdivs
jb
adc
or
add
and
mov
add
mov
stos
inc
xchg
mov
mov
inc
mov
mov
ds
add
fsub
stos
rolb
inc
mov
mov
push
mov
fbld
adc
loopne
adc
pop
add
loope
faddl
stc
push
rolb
cmpsb
sub
xlat
out
inc
adc
push
add
mov
fiaddl
cmp
out
cmc
inc
xchg
out
xchg
aam
cs
and
push
push
lar
xchg
cmp
jl
push
cmc
cwtl
dec
fsubrl
sub
jb
inc
add
imul
fdivrs
add
pop
pop
out
fdiv
add
scas
clc
jns
dec
loope
and
data16
fnstenv
sub
int
add
pop
mov
and
add
mov
fs
mov
test
iret
mov
aas
xchg
pusha
sub
cmp
add
and
mov
xchg
add
xchg
cmpl
push
and
das
add
mov
sbb
jbe
test
ljmp
mov
mov
cmp
scas
and
fiaddl
pop
xor
sbb
lods
testl
dec
push
xlat
or
mov
or
jo
pop
mov
push
mov
add
add
xor
add
dec
jge
mov
enter
dec
xor
add
mov
mov
outsl
add
xor
sub
into
popf
fdivl
daa
sub
and
gs
fstps
cmp
cltd
add
xor
insb
dec
insw
xor
pop
enter
cmp
cmovl
jo
sbb
icebp
mov
pop
jne
jmp
jo
in
idivl
adcb
aaa
cmp
xlat
cmp
mulb
test
sbb
add
flds
out
out
xchg
je
addb
pushf
mov
push
cwtl
mov
inc
and
jne
mov
popf
stos
outsl
add
ret
push
jbe
jo
add
daa
dec
in
cmp
mov
les
repnz
lret
cwtl
imul
push
or
xor
das
push
lcall
test
testl
scas
fidivl
add
jo
call
sub
xchg
dec
loop
mov
loopne
mov
push
mov
sbb
xchg
imul
add
mov
and
addr16
inc
out
pop
xor
pop
adc
mov
faddl
mov
stos
sbb
iret
push
popf
add
imull
imul
lea
js
push
lret
fistps
and
mov
add
cmpsb
sub
add
outsl
fisttps
push
dec
mov
mov
pushf
jno
mov
jae
push
clc
add
push
push
jecxz
fadd
xchg
imul
sub
shl
sbb
enter
jae
cli
pop
add
xor
and
adcb
sub
push
incb
mov
enter
pop
add
daa
add
mov
sub
adc
cltd
mov
mov
xor
xchg
mov
mov
pop
and
xchg
pop
pop
and
lods
adc
lret
popa
xchg
add
movsb
ja
es
mov
jo
in
mov
cmp
iret
addr16
cwtl
xchg
ror
leave
and
pop
icebp
add
sbb
mov
add
sub
pusha
xor
inc
scas
lods
in
dec
jb
data16
ss
subl
mov
pop
pop
sti
rolb
jne
movsb
jl
rcrl
mull
lods
aam
lret
ja
mov
clc
cmpsb
xor
push
adc
stos
xor
xor
or
push
push
sub
aam
pusha
jno
jb
mov
daa
add
cli
scas
mov
xor
lea
sub
pop
xor
mov
cmc
add
stc
out
nop
cmp
lahf
adc
dec
cmpl
xor
cmp
cli
dec
loope
jg
divb
jo
add
push
inc
add
jae
dec
xchg
xchg
dec
add
inc
fistl
adc
cltd
aam
mull
pop
sarb
push
add
rorb
faddl
mov
inc
push
pop
jae
out
jmp
cmpl
and
jno
push
leave
add
js
dec
jnp
pop
rcl
cwtl
adc
xor
add
mov
push
out
arpl
push
cld
sbbl
cltd
sbb
fldln2
loope
aam
inc
mov
or
jno
addb
scas
ffree
pop
dec
in
ja
xchg
lcall
std
movsb
popl
divl
out
add
sbb
add
orl
push
shlb
or
xchg
pop
fisubs
dec
adc
loopne
scas
mov
fisttpll
xchg
into
bound
fadds
sbb
cli
push
jge
or
pop
or
mov
mov
insb
outsl
loopne
fcoml
addr16
fucomi
movsl
dec
loope
test
cmp
add
jns
cmp
pop
add
mov
out
add
cwtl
mov
add
pop
inc
hlt
int
jecxz
push
imul
test
jns
add
jl
sub
stos
inc
popa
add
mov
cmp
dec
mov
subb
je
dec
xchg
add
roll
pop
pop
mov
loopne
mov
add
cwtl
rclb
mov
and
add
loop
lds
add
aas
cmp
nop
lea
push
jle
fs
cld
das
leave
cmp
xor
sbb
mov
xor
sbbb
push
add
gs
das
mov
mov
movsb
dec
xchg
xor
pusha
dec
xor
out
mov
out
add
imul
flds
addr16
mov
loope
push
int
call
icebp
xor
jne
sub
add
cmpsl
jae
jl
push
pop
aam
clc
enter
mov
seta
cmc
sti
fbld
jae
add
xchg
jl
xor
imulb
fdivrs
flds
cmc
insl
add
test
cld
jmp
addl
repz
add
fwait
lods
inc
sbb
rclb
push
or
out
jno
add
movsb
mov
in
or
rolb
ss
call
sbb
mov
jecxz
xchg
add
cmp
jge
int3
pop
add
adcb
cld
out
ret
cmp
adc
pop
hlt
push
xor
sub
pop
add
imul
fistpll
ret
incb
shlb
fnstsw
dec
push
mov
pop
mov
sbb
cs
rclb
push
add
mov
rolb
or
or
xchg
sahf
add
scas
iret
add
mov
cltd
fstpl
popf
adcb
shl
sbb
inc
andb
cmc
push
jne
shlb
jb
dec
inc
lods
mov
xchg
inc
ds
cld
fisubs
push
mov
out
addr16
xor
xor
in
in
nop
xorb
pop
add
xor
pop
add
clc
lods
test
xchg
sbb
movsb
xor
inc
call
mov
add
pop
push
dec
or
jge
cwtl
orb
inc
orl
or
int
call
pop
xor
and
ret
mov
in
loope
or
std
or
cmp
hlt
test
imul
out
icebp
pop
aam
enter
add
int
dec
xchg
pusha
mov
and
add
xor
adcb
cs
mov
add
sbb
in
mov
add
and
xor
sub
inc
shll
add
mov
inc
nop
add
movsb
pushf
ret
loope
pop
dec
jo
fiaddl
xor
pop
and
or
inc
movsb
add
xorb
cmp
loop
in
outsb
xchg
int
sbb
loope
xor
insb
ret
movntq
xorb
mov
pop
das
xchg
andb
add
or
in
rolb
insb
inc
fsubs
dec
cltd
cld
add
xchg
add
popf
xor
or
call
ds
add
mov
dec
xchg
or
cs
popf
int3
sbb
sahf
das
cmpb
push
lea
push
aam
xor
in
jmp
add
push
mov
in
testb
sbb
addb
andb
pop
pop
leave
std
icebp
pushf
lock
fdivrl
add
into
outsl
iret
fdivrs
mov
fisubrl
sbb
mov
sbb
ret
test
adc
jne
movb
xchg
mul
mov
cwtl
jmp
mov
push
aam
test
lret
xor
add
or
test
data16
push
pop
pop
cmp
adc
cmp
adc
push
popl
in
add
pushf
cmp
mov
pop
mov
cmc
fsts
addl
lcall
outsl
and
mov
fisubrs
es
push
mov
add
xchg
test
dec
inc
adc
cltd
jnp
mov
jecxz
enter
pop
cmp
ret
add
mov
push
testb
rcr
loope
add
pop
pushf
mov
jecxz
gs
clc
arpl
inc
fcmovne
add
cmp
inc
btr
xlat
sub
icebp
cmove
inc
int3
pusha
outsb
iret
repz
ljmp
xchg
add
dec
lds
pusha
pusha
jg
fldl
dec
and
and
sub
faddl
jp
push
xchg
and
cld
or
inc
jecxz
mov
fisubl
iret
incb
inc
sarl
inc
lcall
mov
mov
add
jp
jo
pop
sbb
or
sub
jae
sbb
mov
out
mov
insl
mov
adcb
or
cltd
pop
xor
rorb
into
mov
lcall
mov
jnp
leave
inc
mov
pusha
insb
xchg
add
or
add
adc
or
sub
nop
cmp
int3
dec
stc
jle
fwait
out
jae
filds
inc
sbb
jmp
les
xchg
xor
lahf
sub
je
push
mov
mov
xor
pop
lea
rolb
and
jnp
test
shl
adc
shlb
or
mov
nop
cwtl
leave
clc
add
dec
push
xchg
int
and
add
jae
shll
filds
jno
jo
lds
lods
test
inc
mov
cmp
hlt
aam
add
mov
and
rol
sub
cs
hlt
push
arpl
fs
pop
leave
sarb
pop
call
and
pop
dec
push
cld
add
cs
xchg
mov
fisubrs
rcll
dec
add
mov
adc
jp
sub
cwtl
dec
push
and
fwait
out
aam
lahf
add
adc
fnstsw
cld
jne
pusha
push
adc
cmp
int
xchg
add
pushf
add
enter
sbb
cmp
add
incb
sub
in
jno
cmp
movsl
mov
clc
daa
repz
push
add
sub
je
dec
jl
inc
hlt
inc
cmp
cmpsl
pop
jo
add
int
cld
enter
mov
imul
mov
add
in
lahf
pop
jl
add
jb
add
outsb
cmp
hlt
inc
add
sbb
mov
xchg
aad
loopne
stos
fiadds
mov
ljmp
rclb
out
xor
pop
iret
aad
es
add
bound
leave
out
gs
and
inc
std
ljmp
xchg
push
int3
lods
xchg
sbb
subb
jno
push
loopne
lcall
int
mov
or
fiadds
cltd
or
aam
add
cmpsb
insl
jl
into
icebp
idivl
add
xor
add
mov
sub
xchg
int3
push
pusha
inc
fidivs
pop
pop
push
leave
cltd
inc
mov
xor
add
mov
sub
or
jle
in
fadds
inc
jge
aas
popa
mov
mov
mov
shrb
stc
dec
insb
je
sub
sbb
aas
push
and
repnz
add
mov
js
leave
dec
pop
mov
pop
dec
add
daa
push
xchg
scas
fst
dec
xchg
mov
mov
call
pop
roll
fwait
rorl
lds
mov
test
lcall
int3
add
jo
jle
fdivrl
adc
add
mov
push
add
stos
push
lock
mov
sti
dec
xorl
cmp
push
mov
add
sti
and
imul
mov
pop
mov
xchg
jmp
push
mov
adc
push
repnz
subl
mov
ss
push
mov
es
push
test
jno
add
aad
jg
cmp
xor
mov
jo
test
mov
cwtl
repnz
cmp
test
mov
mov
mov
push
ret
movsl
adc
mov
adc
nop
push
adc
aam
hlt
or
dec
adc
cli
jp
add
lret
sti
shlb
add
inc
xchg
movsl
dec
rorb
les
and
pop
testb
hlt
jns
sarb
psubusb
and
dec
mov
adc
xchg
loope
aam
inc
fidivs
xchg
mov
cmp
xor
or
adc
nopl
jle
and
int
gs
scas
lahf
lods
subb
or
inc
int
imul
add
add
sub
cld
rcrl
mov
jecxz
push
cmp
push
jge
es
xchg
pop
in
add
mov
pop
pop
jg
pusha
cld
xchg
pop
scas
push
add
movsl
jns
jnp
sbb
add
popf
imul
aad
jnp
pop
sar
ficompl
xlat
xor
xchg
punpcklwd
cmc
sbb
ffreep
stos
cs
inc
xchg
sbb
and
or
test
shl
mov
ja
adc
mov
mov
jbe
xchg
sub
mov
add
adc
in
clts
cmpsl
cmp
add
sahf
xor
rol
lcall
xchg
test
mov
arpl
aaa
add
dec
cmp
mov
ja
xor
jp
mov
xor
add
sbb
mov
xchg
gs
arpl
andb
pop
add
std
in
cmpsl
inc
push
and
inc
test
in
mov
jl
pusha
jle
push
in
mov
mov
gs
int3
pop
xchg
cmp
mov
in
pop
pop
mov
mov
inc
sbb
adc
adc
faddl
repz
xor
add
xchg
cmpb
lds
les
in
add
ret
insb
pusha
push
hlt
aaa
add
mov
lock
jae
sbb
and
or
popa
enter
adc
lret
jno
scas
dec
fistpl
in
cmp
punpcklbw
clc
ss
push
dec
mov
cmp
shlb
dec
shl
cwtl
in
mov
add
fcompp
add
shrl
xchg
jne
or
nop
jecxz
mov
mov
dec
mov
sub
int
std
jle
cmp
test
mov
adc
pop
add
mov
xor
add
pop
loop
mov
mov
insb
out
adc
push
mov
fs
and
add
adcb
push
scas
dec
xchg
cwtl
adc
add
in
sub
mov
sbb
push
addb
cld
in
add
sbb
cmpl
fiadds
imul
repnz
inc
pop
sbb
pop
fists
pop
jg
ja
add
pop
pusha
and
clc
add
jp
inc
enter
or
repnz
and
ret
jns
adc
and
push
mov
adc
dec
dec
xchg
add
icebp
cmpsb
pop
push
daa
mov
rcr
mov
lret
dec
add
xor
add
fs
fisttpll
pop
ds
das
mov
jmp
adc
cmc
and
sbb
xchg
in
dec
adc
pop
add
test
sahf
xor
mov
hlt
int
sub
pop
adc
add
fdiv
lcall
jbe
inc
mov
add
jb
add
add
fiadds
popf
mov
add
xor
int3
sub
arpl
enter
or
mov
rcrl
pop
cli
outsb
cmpl
iret
gs
pop
dec
xor
add
mov
pop
sub
jmp
test
icebp
test
stos
jne
shlb
lods
subl
pop
add
cltd
lock
in
add
add
data16
jae
or
bound
add
push
mov
fwait
inc
mov
cmp
push
jmp
mov
popa
sbb
mov
rorb
jnp
mov
pop
subb
rclb
jg
fiadds
and
pop
sbb
ja
rcl
pushf
sub
mov
add
mov
cmp
xchg
cwtl
shlb
push
push
mov
adc
or
repz
sub
add
sub
xchg
clc
int
jmp
jno
jns
sub
les
mov
mov
mov
outsl
rolb
push
arpl
add
imul
jmp
add
ja
push
sbb
hlt
lock
bound
xor
add
cmpsl
clc
inc
pop
pop
cmp
addr16
mov
add
adc
sbb
push
push
add
fdivrs
std
and
inc
add
mov
popa
add
addr16
adc
cwtl
pop
sbb
inc
adc
xchg
inc
add
push
les
sbbl
ds
xchg
push
or
sarl
add
inc
add
mov
popa
scas
mov
add
sbb
cmp
xchg
and
mov
and
pop
lods
add
xchg
cmp
cli
inc
pop
ja
add
fsubl
mov
lret
imul
xor
push
mov
add
cwtl
stc
mov
wbinvd
repnz
inc
aaa
mov
inc
rcrl
inc
cwtl
push
aam
daa
repnz
ret
xor
mov
testb
xor
jecxz
call
pushf
mov
mov
sarl
ss
je
shrb
and
enter
mov
add
jnp
pop
movsb
setnp
int3
adc
mov
cltd
subb
or
add
push
les
mov
daa
pop
in
mov
mov
jbe
push
add
xor
add
ss
pop
sub
pop
mov
outsb
add
aas
pop
adc
sub
cmpb
xor
xchg
enter
aad
add
push
jns
pop
clc
jo
dec
inc
movsb
icebp
dec
int
add
into
add
pop
jnp
push
ja
sub
dec
aad
cmpsb
jb
push
cld
dec
inc
xchg
add
adc
mov
fldl
add
jg
adc
jne
cmovnp
push
adcb
shl
and
inc
xor
adc
icebp
mov
add
ds
jns
add
movsb
cmpsl
add
add
xchg
mov
add
push
ja
in
rol
inc
inc
mov
mov
sbb
adc
lret
or
repnz
mov
mov
dec
add
mov
test
pop
fldl
mov
push
into
sub
cmpsl
add
dec
jno
test
or
add
movsb
adc
add
add
mov
add
adc
cltd
aad
sub
int
mov
clc
sub
scas
test
pop
push
shrb
xorl
pushf
sbb
add
jmp
fmuls
sub
negl
cmp
add
push
cmp
push
sbbb
dec
fsubrl
cmc
rcl
nop
lret
jnp
fiadds
lds
sbb
jo
int
fcompl
sub
inc
or
inc
pop
mov
insb
cwtl
fdivrs
add
test
out
inc
xor
dec
or
imul
add
mov
rolb
popa
lock
cmpsl
jns
xor
push
cs
je
cld
sbb
shr
testb
ja
fisttpl
scas
lea
add
push
fnsave
mov
fidivrs
int
outsb
jb
loopnew
add
aad
xchg
or
int
scas
imul
inc
pop
and
push
xchg
cmp
or
xchg
ret
fs
mov
add
int3
insb
in
cwtl
pop
dec
or
pushf
push
fiaddl
movsl
xor
and
sbb
cltd
js
add
mov
inc
arpl
cmc
push
bound
movsl
jno
pusha
xchg
mov
mov
cli
stos
test
xchg
pop
cmp
xor
fcompl
hlt
cmc
mov
jge
jo
test
in
cmp
adc
sub
into
loope
call
add
pop
inc
ljmp
bndldx
nop
add
inc
mov
xor
dec
mov
test
repz
and
pop
jge
jns
mov
lods
cwtl
insl
movlps
lret
add
fs
lcall
jns
pushf
xor
hlt
inc
push
jnp
add
dec
pop
insb
inc
decl
add
xchg
test
add
fcomip
ret
cmp
dec
and
lods
push
cmp
sbb
sbb
xchg
push
pop
out
sarl
pusha
or
jge
add
mov
rolb
xchg
stc
mov
xchg
jl
sahf
cmp
push
adc
push
xor
test
clc
or
cmp
insb
inc
outsb
add
adc
or
incb
xor
pop
pop
in
inc
pushf
cmpsl
mov
jo
loopne
and
cmp
punpckhwd
add
or
fildll
add
xor
push
fnstenv
mov
jmp
ljmp
scas
pop
cmp
mov
add
mov
add
and
out
or
jg
aad
add
xchg
xchg
gs
mov
sub
add
out
inc
inc
sbb
ss
dec
cwtl
rcll
rorl
sub
shrl
int
inc
out
in
sbb
add
pop
xchg
sahf
add
outsl
call
sbb
push
enter
xlat
pushf
inc
pop
mov
mov
scas
pop
test
clc
fsubl
jo
mov
cmc
and
icebp
cltd
pop
imul
dec
out
add
dec
push
mov
jns
es
or
and
mov
push
cs
add
scas
add
pop
add
mov
jmp
das
mov
or
adc
fildl
and
dec
or
hlt
aaa
lods
cltd
popl
into
xor
lock
adc
push
rolb
jno
adc
xor
insl
hlt
pop
add
dec
outsl
sbb
test
mov
mov
ja
iret
mov
mov
pop
lock
sbb
xlat
lods
adc
out
hlt
cld
push
push
call
add
subb
int3
int
add
push
cli
pop
pop
ret
xchg
cld
in
push
add
inc
roll
mov
cwtl
xor
aas
mov
pop
xor
sarb
cwtl
sahf
cmp
icebp
add
inc
loopne
movsbl
jbe
dec
dec
cmpsl
ja
clc
adc
test
scas
xor
mov
or
mov
add
iret
jns
mov
scas
roll
inc
enter
cmpsb
push
add
dec
rolb
dec
sub
outsb
jl
iret
fs
add
xchg
push
lret
mov
add
mov
imul
add
xor
mov
gs
pusha
mov
iret
ret
dec
test
jb
add
push
imul
in
xor
pushf
or
add
stos
shll
inc
div
pop
or
pop
jmp
mov
mov
mov
push
sbb
addb
jge
add
jecxz
fdivs
pusha
cmp
push
mov
or
filds
roll
pop
in
xor
add
cli
dec
jle
add
jno
pop
popf
push
adc
data16
xchg
in
mov
into
pusha
fdivs
xchg
or
cltd
add
mov
xchg
out
add
inc
adc
mov
fdivr
leave
add
cmp
dec
out
nop
add
or
aam
or
aas
gs
mov
jp
sub
cmp
fwait
ds
add
lds
xchg
adc
jae
add
push
loop
jecxz
test
add
dec
mov
rclb
sub
andl
cmp
and
js
cmp
das
add
push
add
sub
pop
in
xchg
add
ret
xchg
cmpsl
add
inc
and
push
loopne
fs
call
pushf
cwtl
xor
xor
xor
test
xorl
xor
shlb
add
iret
push
jg
add
shlb
or
add
push
pop
inc
mov
cmp
xchg
out
mov
mov
imul
inc
xchg
mov
test
sub
xor
mov
test
popa
xor
cmp
cmp
adc
dec
xchg
sbb
js
ss
inc
dec
xchg
or
sub
inc
push
ret
or
loopne
push
sbb
cmc
pushf
mov
jecxz
jle
and
lods
insb
int
cmp
inc
inc
les
cmp
cld
sbbb
fldl
in
inc
std
cwtl
sbb
or
xor
dec
fwait
cld
add
out
lods
fistpll
mov
cmp
testb
add
je
add
mov
add
xor
loope
cld
lock
push
data16
fwait
into
cs
add
mov
push
lea
ret
insb
add
pop
lret
incl
stos
add
daa
idivl
lahf
int3
sub
loopne
mov
and
sbb
push
mov
push
rorb
cmpb
fisttps
sbb
pop
rcr
jmp
cltd
cmp
or
add
add
sbb
dec
das
clc
popf
add
cld
ljmp
scas
imul
test
dec
div
pop
sbbb
or
movb
inc
xchg
sbb
lock
test
mov
dec
aaa
addb
mov
xchg
pop
push
shl
jbe
mov
dec
add
int3
add
xchg
incb
mov
cmpsb
add
xor
adc
or
add
cmp
push
dec
rcrb
jnp
cmc
add
jl
pop
stos
repnz
inc
test
sbb
inc
daa
addl
push
addl
lcall
xor
daa
lret
mov
shrb
sbb
in
dec
add
jno
test
rclb
and
repnz
sub
je
xchg
dec
xor
push
in
or
push
pop
jmp
pushf
psubw
loop
shlb
movsb
in
testl
mov
sbb
stc
sbbb
and
jp
inc
mov
dec
xchg
btc
inc
dec
adc
dec
pusha
int3
faddl
add
inc
sub
icebp
adc
xor
xor
inc
into
mov
mov
xchg
rolb
or
cmp
and
out
pop
mov
inc
cmp
add
test
jge
fbstp
das
outsb
dec
scas
and
nop
sbb
adc
add
mov
dec
xor
add
push
adc
mov
fldt
dec
pop
sbb
sti
clc
or
lds
insb
dec
stc
inc
pop
mov
sub
clc
test
enter
jb
add
add
pop
cmp
mov
jb
mov
lods
cmp
xor
mov
loope
mov
imull
idivb
cwtl
add
in
mov
roll
mov
mov
dec
insb
add
jecxz
lods
push
inc
pop
bnd
test
nop
mov
and
jle
mov
push
pop
add
add
jge
scas
mov
adc
sub
dec
sub
es
cmp
add
adc
push
inc
ja
into
pop
inc
lods
sar
pushf
shrl
rcrb
inc
les
shlb
jbe
mov
fcomip
fwait
rolb
dec
cmp
lret
cli
outsl
and
mov
popa
lds
mov
cs
mov
loopne
dec
inc
sbb
cpuid
cmp
ljmp
mov
sub
dec
fdivrs
add
dec
test
mov
adc
add
add
and
mov
pop
add
or
nop
mov
add
pop
loopne
jge
add
or
sbb
add
mov
pop
sbb
add
pop
ss
sarb
push
or
sub
mov
mov
push
mov
add
mov
lea
mov
fidivrl
out
xor
add
xlat
aaa
lret
xchg
enter
jb
xchg
jne
cmc
dec
sbb
add
pusha
dec
add
dec
jns
je
scas
mov
or
into
fmul
enter
subl
xchg
call
aad
mov
or
test
adc
cmp
shlb
cmp
mov
addr16
sbb
and
sti
mov
popa
push
arpl
fadd
xor
gs
data16
cmp
mov
movb
clc
xchg
and
add
and
test
xor
bound
add
or
or
in
pop
push
mov
add
dec
andb
loopne
cmp
enter
cld
rcrl
notb
add
movsl
out
add
pop
xor
negb
mov
ds
add
or
loop
das
mov
das
mov
fnstenv
xchg
add
out
shlb
mov
imul
add
sub
movsb
stc
leave
paddb
inc
add
mov
or
add
xorl
bound
in
jns
add
cli
scas
dec
push
roll
hlt
adc
push
ret
hlt
clc
nop
and
or
cltd
into
adc
add
clc
incb
push
adcb
add
mov
xor
cmp
enter
mov
fsubrs
rcrb
ljmp
jmp
jle
aas
adc
popa
outsl
add
push
daa
xchg
arpl
mov
push
stos
push
hlt
lcall
adc
add
daa
popa
pop
test
cmp
dec
add
xchg
pop
mov
dec
adc
adc
dec
add
lods
or
pop
sub
xchg
out
xchg
sbb
jbe
rcrb
popa
add
das
pop
add
or
add
mov
add
adc
add
lret
out
push
ret
pop
ja
popa
orl
aam
dec
add
pop
aam
xchg
inc
add
sarb
fnstcw
orl
add
arpl
outsl
rcrb
nop
dec
or
sbb
jp
in
and
push
gs
iret
imul
xor
xor
add
inc
call
dec
mov
pop
cld
fcoms
nop
scas
adc
inc
loopne
mov
lock
test
and
addb
mov
push
dec
pusha
jle
pop
mov
push
daa
or
or
xor
xchg
clc
in
jae
aam
xchg
inc
call
movsb
iret
dec
pop
je
cvtps2pd
dec
ja
mov
mov
jl
enter
add
shrb
mov
lds
cltd
dec
lods
push
sbb
repz
sbb
xor
pop
xchg
fs
and
pop
inc
pop
les
movsb
jg
add
or
mov
sub
das
add
jp
cmp
lahf
adc
xor
add
shr
into
repnz
and
adc
pop
in
dec
mov
pop
pop
jmp
scas
shlb
push
addr16
add
xor
mov
enter
xchg
jmp
ja
sub
aad
add
loop
out
add
jl
stos
xor
es
fisttps
add
ja
sub
jg
bound
nop
aas
enter
out
add
repz
sub
dec
jmp
and
hlt
cmp
or
cli
fbld
pop
adc
movl
call
mov
stc
pop
sbb
sub
sbb
jo
jno
xchg
pop
inc
and
addr16
add
stos
sbb
push
jmp
sub
adc
rorb
cmp
sub
pop
sub
xor
add
jae
pop
adc
out
pop
icebp
add
sar
and
inc
fnstenv
cli
xchg
push
and
fildl
xchg
fmull
test
push
and
fwait
mov
aam
sub
cwtl
add
gs
or
xchg
daa
cmp
lret
push
mov
stc
mov
jge
push
push
in
aad
xor
dec
inc
xchg
into
stc
lcall
mov
adc
adc
xor
ret
mov
pop
cmp
pop
xor
lcall
push
dec
daa
mov
xor
mov
lea
mov
je
icebp
lds
jb
in
push
aam
adcl
or
loope
push
loop
push
sub
push
test
push
dec
xchg
addl
jle
mov
add
test
sub
pop
addr16
mov
sbb
arpl
xchg
andb
mov
shrb
out
inc
or
jb
push
and
andl
mov
test
ss
clc
mov
add
inc
jne
cltd
cmc
ret
dec
add
adcl
dec
sbb
cmp
imul
add
cmp
fdivl
cmpsl
adc
sbb
adc
inc
cwtl
adc
loop
lock
test
idivl
loopne
inc
dec
sub
inc
xchg
adc
add
xchg
icebp
xor
fstps
test
jp
lods
pop
xor
or
cltd
or
adcb
fadds
add
cmp
xor
test
lock
pop
add
ret
xchg
cmpsl
jnp
inc
add
mov
icebp
sbb
mov
sbb
lea
cmp
call
mov
popa
icebp
cs
pop
test
xchg
loopne
cmpsb
mov
push
and
outsb
outsl
add
xchg
or
shlb
repz
jge
ja
add
ficoml
clc
cld
rcrl
push
leave
repnz
sub
jo
rolb
fldcw
hlt
test
lods
inc
xchg
popa
mov
repnz
mov
addr16
xor
mov
add
push
cmpb
ljmp
stos
lock
dec
mov
lock
das
cmpsb
dec
aaa
dec
subb
and
jno
test
sbb
xor
add
pop
popf
add
push
xchg
test
dec
xchg
int3
or
dec
inc
loopne
jo
mov
add
cmp
rol
aam
jno
inc
mov
lahf
and
jmp
inc
xor
loope
push
xchg
push
mov
pop
cli
sbb
bsf
adc
rol
sbbl
mov
mov
xchg
add
inc
add
pop
lret
or
call
push
xchg
mov
or
cmp
xchg
add
leave
lods
adc
sbb
rolb
pop
adc
gs
lock
test
pop
or
lahf
addl
nop
push
movsb
lds
repnz
add
and
push
mov
or
in
lret
inc
mov
and
add
movsb
sarb
scas
hlt
and
push
call
mov
addb
imul
adc
push
add
mov
mov
subb
mov
cld
dec
jmp
push
mov
fs
add
jl
mov
adc
cs
add
cwtl
pop
xor
cmp
inc
jge
add
nop
xlat
mov
test
adc
jl
add
mov
leave
sbb
jge
mov
cmpl
ja
call
lahf
dec
cmp
jo
dec
push
sbb
jg
mov
add
inc
jmp
fidivrs
cs
xchg
cmp
dec
and
pop
mov
xor
inc
cmp
push
sub
ljmp
dec
dec
sbb
sbb
mov
push
data16
add
jl
inc
fsubs
ret
arpl
mov
dec
test
jnp
decb
sub
pop
or
inc
sub
sub
cmc
add
call
xchg
enter
add
std
fcomps
movsl
lds
mov
add
out
xor
dec
jbe
int3
pop
dec
sbb
test
addb
xchg
add
out
jb
int3
imul
shrb
pushf
bts
in
pop
scas
xchg
push
test
dec
out
test
imul
mov
sub
lock
aam
xchg
stc
and
jmp
sub
push
movsl
cmp
inc
adc
sub
or
add
xor
adc
add
jo
call
lahf
and
jle
xchg
leavew
dec
sahf
lret
cltd
fs
popf
sti
pop
daa
add
push
arpl
mov
movsb
xor
jg
in
mov
xchg
js
adc
pop
sbb
out
push
int
lds
and
movsb
mov
pop
xor
mov
or
std
xor
pop
bound
sub
scas
loopne
aaa
add
div
rcl
pusha
sahf
or
add
out
push
enter
lcall
int
pop
aaa
cmp
adcl
call
rolb
xor
inc
lcall
add
ja
pop
inc
mov
lods
dec
daa
enter
cmp
lea
fisubrl
scas
push
add
cmpsb
cmc
cmp
call
jle
push
orb
add
xchg
dec
sub
sub
pop
sbb
cwtl
js
test
daa
cmpsb
or
mov
lods
sub
test
shlb
rcrb
jle
pop
sarb
mov
jg
mov
cmp
xor
add
inc
loopne
mov
cwtl
lock
mov
loopne
cs
inc
add
inc
test
adc
cltd
not
mov
xor
es
adc
push
jg
add
inc
jge
ds
xchg
adc
mov
jl
sbb
cmp
pop
jmp
cwtl
push
pop
mov
sbb
pop
adc
mov
add
mov
push
add
sub
cmp
add
gs
insb
lcall
pop
in
jnp
outsb
repnz
mov
jmp
loopne
cmp
scas
dec
push
inc
faddl
popa
scas
add
push
jnp
fsub
dec
aas
pop
mov
fisubrs
add
cmpsl
dec
fcmovb
and
sti
shl
and
pop
xchg
cmp
loopne
xor
add
sub
sbb
mov
xor
cld
jl
add
adc
pop
lret
mov
lds
shlb
adc
jnp
push
cmp
cmp
and
and
add
adc
xchg
cld
lahf
aad
cmp
pop
add
filds
aas
dec
jno
pushf
add
leave
pop
lods
rclb
testb
xor
sbb
lock
inc
push
xchg
lods
and
and
cmpsl
shl
dec
sbb
sbb
push
and
inc
or
imul
aad
in
jae
int
ljmp
loopne
xor
cmp
in
add
add
mov
push
push
loope
sub
js
jl
sbb
loopne
repz
jmp
pop
xchg
cmp
pop
or
cmp
jecxz
jmp
dec
or
or
inc
jecxz
and
inc
cli
dec
jmp
bound
test
out
sub
ret
sbb
push
xor
dec
lods
add
mov
dec
add
fbstp
mov
and
clc
sbb
cmp
mov
cmp
mov
push
push
pusha
std
lret
pusha
out
jno
leave
lcall
repz
aad
fcoms
jp
inc
add
fs
mov
rcrb
test
mov
sub
inc
or
popf
add
push
jns
andb
mov
mov
orb
inc
xlat
cli
dec
cli
jmp
mov
jg
arpl
repnz
add
pop
repnz
fcmovb
add
inc
push
ret
out
ss
or
outsl
adc
mov
sti
or
aam
sahf
icebp
loopne
in
hlt
fdivr
sbb
mov
jno
cmp
cs
add
fwait
stc
dec
int
add
pusha
int3
lcall
xchg
pushf
xor
stc
dec
push
xor
mov
adc
mov
xchg
imul
fcoml
lahf
add
test
stc
cmc
mov
jo
iret
add
jge
xor
mov
in
xor
add
imul
mov
std
mov
fistpll
add
testb
add
shl
pop
and
nop
add
call
insb
add
xchg
repnz
jle
es
add
fistpll
and
or
lcall
stos
sub
stos
cmp
enter
push
push
fidivs
out
in
fldl
mov
mov
aaa
xor
or
add
andb
jge
sbb
add
stos
iret
inc
adc
clc
jle
fstpt
add
jl
push
push
imulb
sub
movsl
sbb
stos
xlat
add
mov
add
mov
loopne
xchg
push
add
stc
call
aas
pop
fidivrl
popf
add
stos
ljmp
mov
sarl
xor
mov
and
ret
xchg
movsb
nop
dec
cmovo
test
test
jl
fiadds
daa
hlt
adc
test
lods
adc
outsb
adcb
dec
std
add
mov
push
cmp
xor
imul
testl
fiaddl
push
sub
loopne
inc
jge
sbb
in
rclb
shrl
cli
lods
inc
cs
clc
push
imul
mov
mov
pop
pushf
sbb
test
jp
jge
or
push
fadds
addr16
pop
sbb
xlat
cmp
aam
mov
xchg
popf
test
mov
cmp
add
sub
jp
rclb
notl
test
pop
stos
inc
in
lock
dec
rolb
add
sbb
imul
icebp
mov
or
inc
pop
pop
shl
int
cwtl
lods
xchg
inc
add
adc
movsl
add
mov
cmp
stos
mov
lahf
dec
scas
test
faddp
rolb
mov
add
loope
fists
dec
lods
add
lret
xorb
in
mov
or
inc
sub
mov
arpl
mov
inc
sbb
nop
xchg
push
fistpl
add
push
call
add
out
add
daa
cmpsl
outsl
dec
jno
pop
es
fcoml
sub
enter
jecxz
lods
test
sub
add
rclb
xlat
ret
pop
mov
inc
and
mov
int
stos
insb
xor
in
cwtl
add
mov
out
lret
add
dec
xchg
pop
add
addr16
xor
in
rorb
mov
inc
fwait
test
and
jge
hlt
test
sub
ja
add
sbb
mov
or
sub
mov
sar
push
dec
insl
lcall
mov
sbb
sbb
loope
fdivl
cld
or
sbb
sub
adc
add
fiaddl
dec
push
lret
or
sbb
ret
or
scas
sbb
arpl
pop
add
push
movsb
pop
idiv
dec
add
inc
popf
and
and
or
insb
add
xchg
dec
mov
sbb
push
bound
xor
mov
sbb
sub
cmpsb
add
fildl
aam
push
addr16
rolb
mov
push
pop
arpl
add
cmp
pusha
jo
cmp
mov
addb
or
add
loopne
jl
mov
jmp
dec
mov
add
mov
loope
or
andb
mov
cmpsl
xchg
sbb
xchg
mov
sub
cmp
imul
dec
rcrl
outsb
jmp
clc
int
cmp
cmp
je
xchg
add
xchg
sbb
les
into
inc
js
insb
add
imull
push
add
cmc
repz
rolb
ds
push
jae
repnz
fmull
sbb
adc
xor
adcb
clc
pop
or
sarb
std
sbb
test
push
adc
push
or
mov
xor
sub
xchg
mov
out
adc
lods
jg
push
mov
adc
jnp
daa
pusha
cmp
adc
in
daa
jo
pop
rolb
add
adc
xor
xchg
xor
aaa
jp
add
scas
inc
adc
ja
jle
movsb
mov
or
mov
js
mov
subl
aam
out
and
jo
mov
inc
adc
repnz
adc
push
call
lods
mov
mov
cmp
jle
jl
fsubs
sarb
stc
call
push
push
mov
ret
cmp
inc
pop
add
daa
xchg
or
test
pusha
clc
inc
adc
pop
in
xor
stos
shl
adcb
add
cmp
pop
add
dec
pop
push
sbb
mov
pop
xor
mov
push
mov
outsl
push
pop
and
dec
mov
dec
ljmp
mov
dec
mov
push
loopne
iret
add
scas
cs
and
cmpsb
add
es
icebp
push
jg
push
lds
ss
pop
fiadds
dec
fsubs
fadds
sahf
add
test
xchg
add
scas
and
cli
fdivrl
shll
mov
lret
add
cltd
lods
mov
inc
dec
cmpl
jp
and
mov
add
adc
and
add
into
xchg
call
psubb
popf
imul
pop
push
mov
out
in
add
xchg
test
mov
std
or
lahf
sub
add
sbb
popa
orb
jno
aas
add
cwtd
pushf
and
cld
xchg
and
inc
cli
sbb
lods
cmpb
adcl
ss
jo
jg
and
int3
pop
xchg
lret
mov
imul
outsl
xchg
cmpsl
push
gs
loopne
adc
cmpsl
pop
call
out
sub
dec
sub
es
mov
lea
mov
call
xor
jp
and
aam
pop
jns
add
jae
pusha
das
inc
roll
add
pop
fcoml
loop
ljmp
push
mov
add
pop
jge
inc
xor
icebp
push
cmp
sbb
jp
fwait
popa
aam
jno
arpl
mov
mov
dec
xor
adc
dec
jns
mov
mov
mov
mov
into
lret
imul
add
lds
inc
xor
cld
adc
inc
sub
fldl
hlt
adc
daa
mov
jge
inc
and
add
subb
add
dec
aas
into
add
dec
xor
add
xchg
jb
mov
psrad
aam
out
adc
jg
mov
and
cmp
and
add
adc
inc
loopne
je
push
sbb
jne
cmp
add
jae
negl
data16
add
inc
sub
mov
test
lds
jmp
add
pop
les
ret
sarb
mov
rol
pop
mov
add
mov
addb
mov
fs
add
mov
xchg
and
jbe
enter
adc
mov
pop
adc
int3
sbb
aam
push
or
sahf
and
cwtl
dec
movsl
mov
sub
add
inc
ret
jl
rolb
dec
pop
andl
repnz
insl
cmp
es
outsb
pop
jne
inc
shll
bound
xchg
pop
daa
daa
add
dec
ret
lret
popf
xchg
pop
add
in
dec
mov
dec
subb
call
add
fildll
andb
cmpsl
sbb
dec
xlat
stc
xchg
sbb
add
ss
cs
inc
stos
lods
aad
cmp
cmp
test
lahf
mov
mov
pop
push
jg
pop
stc
div
test
add
xor
dec
or
inc
cs
sub
fldcw
adc
fildl
int3
add
add
ret
mov
rorl
cld
jae
loopne
inc
cmp
les
addb
movb
repz
or
cmpsl
loope
or
call
sub
daa
out
adc
mov
imul
loopne
cmp
mov
adc
or
dec
pop
shrb
loope
xor
inc
leave
aam
icebp
hlt
add
popa
push
add
mov
lods
lret
mov
js
sbb
xchg
add
push
out
xor
adc
push
jmp
add
sbb
pop
adc
dec
add
cmp
stos
push
push
icebp
sbb
add
inc
loope
adc
andb
inc
add
into
mov
loopne
daa
cmp
jle
pop
add
pop
add
jecxz
divb
scas
cwtl
inc
nop
pusha
push
int3
imul
push
mov
cmp
add
daa
or
ret
jl
cmc
pusha
jle
pop
nop
je
mov
je
cwtl
push
lods
bound
jnp
sub
scas
pusha
cld
fadds
jge
ljmp
lea
mov
inc
inc
sar
sub
or
daa
fcompl
lods
or
adcb
es
enter
xchg
push
mov
repz
cltd
pop
repnz
ljmp
pushf
mov
shrb
add
fcos
fwait
out
mov
xchg
or
clc
push
sbb
mov
cmp
rcr
push
add
fucomip
fdivp
cmp
cli
out
dec
nop
outsb
aam
addr16
mov
repnz
add
jno
dec
mov
add
push
int3
leave
ficompl
cld
lcall
loopne
call
out
gs
data16
je
insl
repnz
rcl
sub
notl
mov
dec
orb
cmp
lods
add
mov
jbe
setbe
movsb
push
add
mov
imul
jns
sbb
add
dec
jmp
das
pop
cwtl
jne
mov
hlt
jecxz
adc
and
aas
lods
add
mov
push
nop
movsb
mov
xchg
cmp
mov
push
inc
adc
js
adc
pop
daa
imul
ja
shll
mov
sbb
add
sbbb
mov
rorl
lds
ds
loopne
or
popa
pop
add
push
mov
cmp
mov
add
adc
inc
sub
or
add
call
adc
call
fildl
jge
jns
xor
jo
mov
mov
or
or
shlb
inc
sbb
jecxz
adc
mov
aam
outsl
xor
add
sbb
daa
add
or
in
or
cwtl
add
pop
cli
test
lds
add
in
call
add
std
or
shlb
adc
mov
sbb
rolb
decl
test
adc
or
jno
adc
pusha
sbb
fidivl
push
cmpsb
orl
add
popa
sti
pop
push
lcall
dec
mov
xor
outsb
je
sti
adc
fbstp
xchg
jl
rcr
leave
mov
or
and
mov
or
cmpsb
or
adc
mov
ljmp
xor
and
cmp
dec
adc
pop
push
outsb
ja
mov
out
pop
aaa
mov
into
lahf
pop
and
xchg
dec
hlt
mov
add
mov
pop
test
dec
clc
and
cli
mov
inc
push
jle
xchg
xchg
sub
sbb
sub
andb
das
orb
add
hlt
and
xchg
out
push
adc
mov
sbb
in
push
mov
es
push
add
xlat
pop
jo
faddl
nop
cmp
arpl
movsb
mov
sub
add
add
inc
lahf
mov
pushf
mov
mov
ja
cmp
jecxz
dec
test
idivb
cwtl
push
adc
mov
add
add
les
cld
pop
mov
mov
cmc
aas
shrl
mov
inc
out
xchg
mov
mov
call
mov
sarb
rclb
mov
test
add
call
cld
fstpt
xchg
rcrb
add
xor
jecxz
mov
mov
mov
cmpb
push
icebp
dec
ficompl
in
push
pop
mov
rorb
add
push
ds
or
call
jns
into
dec
jl
add
mov
sub
sbb
out
stc
mov
xor
mov
popa
int3
mov
xor
and
out
test
mov
icebp
roll
and
push
rolb
xchg
or
subb
mov
sub
lret
bound
and
fs
mov
sub
xor
sub
add
push
jbe
mov
roll
push
sub
outsb
pushf
xchg
cld
add
mov
cwtl
mov
call
cmp
pop
xchg
or
adc
ret
popa
pusha
hlt
cmp
das
push
mov
push
ds
mov
inc
jmp
sub
movsl
lds
aam
cmp
js
push
cmp
cmpsl
lahf
into
mov
stos
in
cmc
lcall
ds
mov
rcrb
inc
into
nop
daa
and
pusha
cmpb
arpl
push
jo
inc
xchg
adc
jp
pusha
or
movsb
testb
push
jb
dec
icebp
cmpb
add
pop
insl
add
jle
inc
or
cltd
repz
stos
imul
rolb
pop
loopne
xchg
push
cmpsl
insb
lahf
call
mov
pop
scas
pop
movzbl
repz
xor
cwtl
popf
mov
shlb
arpl
or
sbb
add
ljmp
adc
dec
add
lcall
add
cmp
insl
data16
in
cltd
add
out
mov
dec
xor
sbb
add
int
outsb
or
and
sbb
xchg
and
dec
or
xchg
pop
push
sub
rclb
and
mov
lods
add
call
pop
push
cmp
mov
cmp
mov
pop
add
test
adcb
mov
pushl
add
in
fcompl
imulb
imul
mov
cmp
xor
dec
rcrl
test
and
pop
movsb
add
lock
mov
out
mulps
ds
mov
mov
testl
mov
out
and
dec
adc
jl
ja
add
movsb
test
jne
in
adc
inc
xchg
fcom
pushf
aad
sbb
ljmp
inc
push
add
pop
lret
test
scas
frstor
inc
dec
ret
es
movsb
imul
in
mov
inc
lahf
pusha
cld
adc
lock
dec
lods
add
xor
aas
aad
add
dec
leave
mov
push
or
jge
jmp
stos
pop
icebp
rcr
ds
pushf
notb
pop
mov
je
mov
pop
stos
enter
aas
rcrb
mov
pop
mov
adcb
jecxz
inc
test
addr16
sbb
inc
dec
frndint
mov
hlt
fs
movsb
cmp
in
aas
and
cld
pushf
lock
xor
das
pop
nop
andl
lret
push
std
lds
fisubl
call
jmp
bsf
lcall
stc
add
and
mov
sarl
push
xchg
sub
jmp
incb
dec
xorl
ja
xor
jge
pop
adcb
in
subb
sbb
xor
push
xchg
fdivl
lods
push
xchg
cmp
outsl
popf
movsb
ret
sar
or
call
mov
ret
xlat
lahf
or
les
push
add
dec
or
add
jne
or
add
mov
int
in
mov
add
sub
das
inc
nop
pop
pop
jo
xor
mov
adcb
push
icebp
mov
sub
dec
add
fs
fstps
mov
insl
add
xchg
xchg
out
add
into
sbb
mov
inc
adc
sarb
jno
dec
inc
pop
and
add
sarl
cmpl
dec
add
xchg
jle
es
mov
fnstenv
push
pushf
jge
and
mov
je
mov
enter
cmp
stos
ret
push
cs
inc
push
nop
add
lcall
xchg
outsl
xchg
shlb
add
sti
add
add
add
and
push
push
incb
adc
cmc
and
stos
loope
negl
jl
rolb
ret
xchg
imul
loop
mov
enter
jae
inc
jns
xchg
push
bound
add
lcall
inc
in
lds
push
stc
adc
daa
add
mov
adc
adcb
adc
dec
xchg
outsb
das
and
imul
xchg
adc
stos
xchg
lea
fistpl
push
clc
adc
and
nop
push
add
dec
fs
ret
sub
push
out
pop
sub
aas
js
adc
jge
out
push
dec
nop
pop
sbb
mov
sbb
out
insl
lret
add
loopne
add
fistpll
sub
cltd
jbe
and
jmp
lock
call
push
pusha
nop
add
loopne
cli
pop
push
nop
data16
sbb
pop
ss
add
jg
sbbl
lret
jne
std
add
mov
or
in
xor
push
test
mov
xor
inc
std
add
movsl
mov
dec
jne
ficompl
xchg
sub
add
clc
add
mov
dec
popa
into
xor
xchg
insl
fistps
jle
aaa
adc
imul
add
and
sub
add
stos
rol
rcrl
push
add
push
inc
js
xchg
pop
jo
icebp
pop
mov
or
dec
add
mov
inc
sub
nop
xor
jb
inc
dec
pop
iret
mov
cmp
sbb
sub
gs
cmp
inc
push
or
or
sbb
repz
mov
pop
int
add
loopne
adc
aas
adc
or
pushf
mov
jo
test
and
fmull
imul
cwtl
mov
das
ja
sub
mov
aad
inc
and
xor
cmp
xor
int3
mov
adc
and
xchg
fstpl
roll
vprotd
sbb
sbb
jns
push
int3
es
add
and
out
test
sbb
sub
add
cmpl
add
sbb
lret
mov
incb
push
add
call
sbb
sbb
jmp
jl
cmp
aas
mov
aam
add
fnstenv
dec
inc
loopne
jbe
or
test
es
incb
cs
jno
xchg
dec
enter
xor
inc
pop
mov
out
adc
stos
add
lea
pop
add
jp
pcmpeqb
mov
inc
dec
adcb
inc
dec
cwtl
jge
aam
jge
ja
test
push
xchg
movsb
daa
jecxz
pusha
cmp
adc
jbe
testb
mov
cli
and
sbb
inc
outsb
movsb
mov
pop
mov
es
xor
sub
lret
divb
mov
add
lahf
in
leave
add
ljmp
nop
pop
cmp
jg
or
daa
or
sbb
add
inc
call
pop
adc
cs
xlat
xor
mov
mov
pop
clc
test
and
xor
imulb
add
fs
sbb
and
xor
lret
ret
adc
arpl
adc
sub
daa
addb
and
adc
add
ret
inc
arpl
rcll
sbb
jl
add
fnstenv
xchg
in
sahf
and
orb
push
ss
incl
xchg
add
fadd
enter
jb
xor
sub
jp
add
cmp
hlt
push
inc
and
ficomps
pop
push
add
cmp
inc
push
rolb
into
ret
in
mov
fdivrs
pop
cli
xor
pop
out
addb
xor
mov
mov
jns
add
into
test
dec
lcall
push
int
movsb
jmp
out
jae
or
sub
or
add
lcall
inc
orb
mov
add
rcrb
mov
dec
aaa
ret
aad
ds
cmpsb
in
and
cli
dec
adc
xchg
jecxz
adc
mov
or
cmp
and
sahf
shrb
and
adc
cmp
xchg
inc
mov
in
pop
cmc
cmp
and
add
not
adc
and
cwtl
add
int
adc
xor
inc
mov
fcomps
nop
xchg
testl
movsl
stc
ja
into
dec
xor
cmp
lods
loop
add
shrb
mov
ds
push
xor
xchg
cmp
mov
mov
incb
sub
pop
cmp
xor
stos
or
loopne
sbb
imul
imul
xchg
repnz
add
add
popf
je
jbe
inc
addr16
sbb
loop
pop
sbb
push
in
jns
neg
push
lahf
add
ffree
dec
aas
imulb
aad
call
mov
pop
mov
push
xchg
imull
imul
push
les
or
iret
lsl
lods
sbb
mov
testb
inc
roll
cmc
or
inc
adc
sub
out
push
or
sbb
jbe
add
sbb
aaa
aas
jne
push
inc
int
pop
movsb
neg
mov
and
xor
outsl
add
jno
inc
xlat
ret
cmpsb
in
clc
pop
add
push
test
aam
aas
dec
xchg
mov
add
mov
mov
mov
insl
mov
call
push
inc
addl
sub
push
fwait
jmp
xor
cmp
add
shr
add
and
pop
inc
movswl
push
xor
sub
or
in
or
pop
aas
and
add
std
or
sub
add
jo
jb
movsb
stc
jns
xchg
inc
aad
insl
jg
sub
int
orb
popa
sbb
outsl
loop
push
int
cmp
pop
cmp
add
xor
sub
dec
ja
sub
push
aad
add
je
pop
push
push
inc
mov
sbb
and
pop
pop
rclb
imul
out
sub
movsb
scas
mov
add
aaa
ret
jae
or
incb
jmp
push
add
in
lds
adc
add
lsl
sbb
aad
inc
outsb
movsl
xor
pop
imul
or
movsb
xor
pop
outsb
lcall
cld
dec
mov
loopne
cmp
arpl
push
leave
sbb
fwait
ret
sub
push
aaa
cmp
cmp
shl
and
and
or
pop
mov
divl
adc
mov
sub
xchg
test
dec
xchg
ret
xchg
and
ret
add
nop
mov
out
testb
dec
xor
add
inc
sbb
pop
cmp
jns
push
testb
sbb
movsl
and
jmp
dec
jge
add
dec
es
je
add
mov
int3
xor
mov
xor
sbb
add
testb
mov
add
call
shll
cmp
cld
aaa
push
or
sub
add
testl
dec
xlat
mov
icebp
add
inc
sub
pop
add
hlt
enter
pop
fmuls
push
push
cmp
pop
rol
leave
xchg
add
add
add
fwait
adc
pusha
xchg
add
cmpb
jl
leave
std
xlat
inc
inc
cwtl
insl
shll
insb
adc
test
call
andb
cmp
repz
cwtl
ret
adc
mov
add
loop
add
cmp
push
cld
scas
cmp
notb
inc
test
xor
add
mov
lock
push
xchg
std
jns,pn
and
add
add
ds
and
shl
or
jne
repz
cmp
outsl
or
pop
add
es
lahf
jle
inc
mov
ret
fwait
mov
cmp
pop
loope
sbb
pushf
iret
sbb
lret
add
push
adcb
imul
rcll
mov
cli
add
test
xchg
std
sbb
fstpt
outsb
cltd
mov
cli
insb
mov
adc
call
out
es
js
adc
xchg
add
adc
sub
push
jle
dec
test
and
cmp
xchg
and
add
test
mov
test
jbe
cli
jne
cli
ss
inc
lea
addr16
mov
inc
xchg
out
jno
cld
lods
enter
inc
lds
and
mov
xor
js
scas
movswl
mov
clc
cld
fisttpl
cmp
mov
lea
fucomi
pop
aas
sub
sbb
icebp
cmp
icebp
adc
xchg
testl
mov
push
xchg
mov
dec
aam
add
dec
mov
test
fcmovnb
and
sub
lea
add
mov
dec
sbbl
xchg
mov
push
mov
cs
pop
add
cwtl
xor
cs
mov
pop
jmp
jecxz
idivb
stos
cmp
jl
pop
loope
mov
fstpt
mov
push
inc
subb
sbb
fadds
out
dec
and
pop
push
test
movsb
adc
add
mov
pop
pop
enter
and
jle
jmp
mov
or
orl
or
jnp
dec
jl
lret
cmp
scas
fdiv
push
loop
ret
add
push
jbe
test
je
xchg
imul
xlat
imul
add
cld
pop
and
mov
push
insb
imul
xor
lods
add
and
add
adc
cmp
push
cmp
dec
dec
cmpb
les
dec
push
push
add
out
cmp
mov
inc
sub
into
mov
enter
and
es
out
or
jecxz
movsb
pop
adcl
xor
or
cli
mov
scas
or
loope
xchg
lds
loopne
and
mov
rolb
push
ljmp
lea
aas
fs
mov
add
sbb
lock
jo
dec
pop
fcmovb
cmc
xorb
add
pop
pop
pop
pop
adc
jae
push
popf
cmp
cmp
mov
add
pop
cld
punpckhbw
xchg
clc
sub
xchg
adc
xor
adc
in
add
dec
pop
or
cmc
aas
jb
cli
mov
sub
push
jg
pop
add
fidivrl
push
cmp
cld
ds
bound
in
sbb
pop
mov
xor
push
insl
xchg
test
inc
add
jmp
imul
xchg
repz
sbbb
in
add
outsl
faddl
scas
in
jge
out
sub
out
adc
pop
push
in
ret
pop
sbb
xlat
lcall
add
push
add
cmpb
cmp
xchg
popa
push
jb
or
into
pop
lods
popl
loope
add
nop
movsl
cli
sar
jo
xorb
xchg
sub
cld
lock
adc
cs
sbb
pop
into
popf
add
adc
jl
lods
incl
sub
sub
aaa
dec
inc
sub
scas
shr
mov
cmpsl
xchg
and
fmuls
movsb
add
insl
ret
inc
loopne
in
jg
imul
inc
subl
push
push
pusha
mov
adcl
mov
repz
ret
add
dec
sub
and
add
inc
mov
dec
dec
lods
dec
dec
mov
adc
repnz
pop
cmp
adc
sbb
das
jb
xlat
mov
xchg
pusha
loop
jbe
cmpb
mov
jb
icebp
jl
daa
dec
pop
or
mov
fstl
mov
dec
sahf
sbb
inc
mov
pop
inc
ret
das
inc
cmpsb
leave
fisubl
in
sub
jmp
ss
cli
push
nop
xorb
out
adc
out
rcrb
adc
add
andb
jno
in
or
add
es
push
bound
dec
add
xor
lcall
mov
cld
fcoms
adc
jg
dec
mov
jb
scas
cmp
cltd
int3
stos
lcall
or
add
mov
mov
jmp
cli
or
in
jno
sbb
scas
std
ds
or
nop
out
adc
mov
jecxz
jb
cld
cltd
sbb
in
hlt
adc
add
je
bound
xchg
mov
adc
inc
icebp
pop
out
jbe
adc
cmpsl
jne
in
sarw
or
add
sub
pop
pushf
fstps
jg
sbb
mov
stos
int3
add
call
dec
imul
xor
ljmp
adc
and
push
and
mov
or
je
setp
bnd
jge
movsb
add
dec
gs
mov
mov
add
addl
add
xchg
pop
movsl
hlt
inc
jb
test
loopne
stos
add
add
in
lcall
sub
xor
es
sbbl
andl
lcall
adc
insl
ljmp
cli
xchg
ljmp
sub
adc
gs
clc
add
adc
sub
mov
arpl
andl
imul
mov
sbb
pop
shrb
call
movsl
xorb
add
movhps
mov
mov
sub
cs
or
adc
and
mov
jl
and
lret
repnz
insl
adc
cmpsl
test
loop
sbbb
pusha
repz
xchg
jo
add
push
xor
sti
loope
add
movb
sbb
stos
pop
mov
mov
adc
add
insb
jae
cmp
cmp
repz
faddl
mov
leave
sbb
jbe
adc
cmp
cs
or
cwtl
mov
inc
scas
cmp
sbb
push
lods
add
inc
xor
sub
mov
push
cmp
mov
add
inc
jns
imul
movsl
fiadds
mov
ja
inc
imul
inc
and
add
push
pop
testl
out
stos
aad
rolb
jle
cmp
jne
loopne
push
mov
add
pusha
adc
sahf
dec
add
sub
nop
jg
sahf
shlb
fcmovu
repnz
jle
mov
jo
jg
enter
mov
push
insb
aam
sub
dec
jnp
push
movsl
adc
push
ljmp
sahf
mov
xchg
jo
push
xchg
push
pop
inc
and
mov
mov
and
adc
mov
push
push
push
or
ljmp
sbb
mov
cld
shr
push
mov
add
adc
mov
hlt
add
xor
js
pop
testb
mulb
out
in
pushw
mov
add
cmp
xrelease
insb
adc
rcrb
xorl
or
and
sub
push
and
imul
jae
sbb
punpcklwd
push
dec
lds
hlt
or
jne
adc
add
ret
pushfw
mov
add
cmp
pop
xlat
sahf
sbbb
xorb
push
add
push
or
ds
arpl
mov
sub
pusha
push
aaa
in
or
add
sub
mov
adc
xchg
sub
add
xor
pop
mov
call
inc
push
mov
adc
lock
clc
adcb
enter
mov
aad
fdivrl
add
add
xor
mov
sub
add
mov
or
in
xchg
jne
rolb
adcb
mov
fs
leave
push
call
loop
cmp
addl
or
sahf
lea
ss
repnz
call
sub
mov
dec
cltd
popf
daa
adc
xor
lret
imul
sbb
mov
js
rol
pop
shlb
xchg
sub
mov
mov
mov
rcrb
mov
cwtl
xorl
fwait
xor
mov
ljmp
in
add
sahf
push
pop
shlb
divl
fbstp
add
int
mov
jle
in
add
xor
icebp
cmp
xor
cmpsl
adc
xor
push
add
into
or
push
jne
repz
dec
test
pop
jae
mov
sub
add
pop
cli
inc
push
inc
test
int3
fildl
int
xchg
in
inc
stos
in
adc
inc
in
fsubp
sarl
xchg
iret
sub
mov
aam
ds
or
cld
repz
jo
push
std
mov
pusha
sahf
and
sti
pop
or
mov
movsl
sbb
lcall
cmp
out
nop
sbb
call
ficoml
and
jmp
sub
mov
inc
xor
pusha
sbb
and
jnp
sbb
cmc
out
jns
rcrb
cmpsl
bound
dec
cmpsb
adc
and
push
pop
mov
out
cmpb
jecxz
pop
insb
roll
fwait
test
jno
rcr
inc
sahf
lods
cmp
lods
jecxz
xor
andb
fimull
mov
xchg
and
dec
add
loope
jne
andb
cmc
cltd
xor
int
sahf
add
int3
fisubrs
inc
jmp
mov
pop
ror
pop
aam
jno
imul
in
in
sbb
xchg
jo
sbb
or
add
les
inc
lock
cmp
or
adc
test
movsb
adcl
pop
or
lds
and
or
mov
push
pusha
test
outsl
aaa
pop
mov
xchg
stos
lret
fldl
ret
repnz
pushl
and
jmp
or
and
lret
dec
push
sub
fs
ret
push
xor
pop
inc
xor
sub
jb
push
mov
xchg
rcrb
mov
cmp
or
jo
cmpsb
sbb
mov
int3
inc
stc
add
push
add
xor
call
rclb
xorb
pushf
dec
js
adc
inc
adc
flds
cmp
lcall
sub
xchg
es
adc
add
shlb
rorl
dec
filds
dec
push
or
test
lods
and
iret
and
adcb
rorb
add
xchg
pop
fbld
sbb
mov
adc
adc
repz
mov
pop
mov
dec
lret
add
pop
mov
imul
xchg
jl
xchg
inc
std
arpl
cmp
data16
push
pop
call
sbb
or
adc
les
inc
je
pop
jo
adc
and
mov
mov
xchg
add
push
test
sbb
inc
fwait
push
or
sub
ret
scas
or
divl
and
jmp
inc
add
xchg
push
std
ljmp
test
test
xor
lock
xor
lret
push
cmp
jmp
stos
xchg
xor
push
test
mov
rcr
sub
and
mov
mov
lods
nop
les
cwtl
test
cmp
push
cld
ret
out
and
add
push
add
sbb
jle
jge
xor
and
dec
lret
add
and
xchg
out
xor
xlat
fmull
sahf
xchg
xchg
fists
sbb
jl
mov
pushf
dec
test
inc
mov
mov
jb
jno
jne
or
cmp
add
sub
sub
shr
pop
mov
add
push
adc
and
addr16
jg
or
inc
pusha
mov
mov
sub
adc
das
jo
sbb
cmpb
inc
or
xchg
and
adc
aad
fstps
outsb
in
cld
add
xor
dec
js
sub
jp
fucomp
and
push
sti
pusha
mov
push
jecxz
and
xor
add
xchg
paddusw
cld
sub
cwtl
mov
push
repnz
push
out
test
dec
xchg
jns
addr16
and
add
push
sti
add
push
mov
push
stos
andb
in
xor
pop
ljmp
aam
rolb
in
xchg
add
fsubrl
or
jl
adc
andb
lods
int3
xor
jge
in
adc
rorb
je
add
pop
pop
dec
push
mov
int3
pusha
ss
xchg
cli
add
and
test
xor
add
mov
pop
aam
or
mov
cmpsb
loopne
cld
dec
lods
or
ja
cltd
add
mov
aas
pusha
mov
fisubl
fstps
rorl
dec
icebp
adc
les
cwtl
mov
xchg
or
jl
xor
lea
xor
xchg
mov
les
gs
or
loopne
push
bound
xchg
lret
mov
pop
aad
fisttpll
pop
js
xchg
ja
sti
enter
push
add
mov
xchg
xor
call
test
xchg
cmp
leave
cld
add
pop
test
sub
stos
xorb
xchg
add
inc
std
enter
lahf
arpl
lock
and
cmpsb
and
xchg
xor
loope
mov
add
mov
das
xlat
lea
jmp
test
xchg
adc
lret
add
sbb
push
notb
aaa
inc
nop
rclb
ss
or
add
dec
sub
push
and
mov
dec
add
jae
test
jo
bound
jmp
add
int
cmp
pop
dec
push
enter
bound
jbe
mov
cwtl
push
pop
bound
sbb
orb
push
stc
movsl
pop
push
mov
hlt
psubsb
sbb
cltd
push
mov
and
lods
sahf
inc
add
sub
push
mov
xor
data16
add
int3
cld
and
pop
arpl
fs
sub
jno
sbb
dec
pusha
jae
mov
xor
push
push
iret
aam
push
outsl
shl
les
pusha
insl
movsb
adc
sbb
add
stc
xchg
add
stos
add
sbb
dec
stos
inc
add
xchg
outsb
or
rolb
in
sbb
mov
xor
int3
adc
push
leave
mov
repnz
jo
mov
add
dec
add
mov
jo
add
bound
push
inc
sbb
lock
jbe
insb
hlt
les
sbb
arpl
int3
fwait
inc
push
xchg
fisttpl
adc
fcompl
pop
mov
add
add
inc
stos
lds
mov
mov
add
fcompl
mov
sbb
add
ficoml
mov
and
mov
les
fdivp
pushf
pop
sub
sahf
inc
dec
fcompl
xor
in
inc
mov
popa
xchg
push
stos
sbb
xor
mov
lods
arpl
popf
jne
xor
sbb
adc
shr
mov
pop
mov
lret
int3
stos
inc
cmpsb
mov
jo
iret
ret
xchg
test
jle
lret
jno
push
fistpl
mov
clc
push
dec
iret
or
loopne
adc
shrb
mov
mov
cmp
sahf
test
pop
xor
or
int3
jne
movzwl
mov
out
ret
adc
jl
adc
sbb
add
gs
add
pop
or
fsubrp
cwtl
mov
inc
pop
pusha
pop
jp
fisubs
or
and
or
and
jnp
adc
xor
pop
pop
or
xor
sub
dec
flds
enter
aas
and
push
lods
test
push
inc
mov
and
int
repnz
mov
data16
add
sbb
mov
fistpl
data16
mov
test
pop
stos
mov
push
cmp
ficomps
adc
nop
or
stos
lahf
call
inc
shll
sahf
mov
ret
cmp
mov
bound
fisubs
ror
loop
jnp
adc
sbb
sub
sbb
loop
add
jmp
jg
sub
inc
loop
lods
test
dec
adc
daa
mov
adc
and
or
inc
fstpl
mov
jo
stos
add
cltd
fsubrl
mov
nop
dec
sbb
jns
gs
xchg
aaa
loope
or
fcomps
nop
cld
cwtl
test
xorb
and
incl
inc
lret
lock
inc
imul
shll
fcoms
fldt
push
pushf
xor
mov
aas
sub
faddl
ret
pusha
pushf
mov
xor
ds
adc
sub
ja
sbb
add
hlt
add
clc
lods
push
xchg
test
mov
sbb
pop
lds
or
push
into
cwtl
mov
xlat
scas
and
dec
into
cmp
mov
sbb
scas
lds
xor
add
mov
fwait
mov
inc
add
xor
add
loop
mov
cli
jne
adc
jmp
mov
pop
inc
sbbb
xor
scas
jecxz
jp
ja
out
and
bound
mov
xor
adc
rcr
push
lahf
adc
fidivrl
push
ss
adc
push
add
add
cltd
roll
xchg
cmp
mov
add
cwtl
cld
xchg
jmp
sbb
jge
fisttpl
sbb
test
fs
mov
sbb
rclb
or
dec
adc
inc
mov
inc
pop
lahf
scas
popa
add
fdivl
mov
mov
inc
cmpsl
push
pop
test
adcb
push
xor
xchg
and
xchg
xor
in
cltd
dec
add
rcr
dec
sbb
sbb
adc
cli
fs
lret
sub
ret
fisubrs
mov
lret
add
mov
sub
loopne
testb
add
xor
aam
cwtl
add
adc
frstor
dec
mov
sbb
jae
add
jno
xor
xor
nop
push
imul
enter
cmp
mov
sti
sbb
ret
fstpl
adc
pop
add
pop
add
cld
mov
or
stos
shrb
test
add
shrb
lcall
xchg
adc
dec
sub
sbb
loope
pusha
sbb
dec
jo
out
fcoml
adcl
into
adc
stos
fsts
or
fsubrl
pop
test
lret
arpl
fsubs
mov
add
pop
mov
and
stos
shll
and
push
cwtl
fidivrs
mov
movsl
mov
pop
pop
fbld
stos
adc
ret
push
add
mov
inc
in
xchg
xor
adc
xchg
popa
mov
sbb
add
inc
in
rclb
test
enter
int3
test
mov
jl
shrb
pop
test
data16
or
xchg
add
repnz
loop
mov
aam
ficoms
mov
call
inc
and
les
sbb
or
or
nop
loopne
arpl
fisubs
adc
into
fimuls
jb
push
leave
rcr
push
mov
cwtl
test
imul
or
inc
lock
xchg
ror
insl
xchg
rol
clc
ja
add
scas
push
jmp
push
mov
sbb
jp
xchg
sbb
add
test
xchg
push
mov
call
lahf
mov
inc
mov
add
insb
jecxz
sbb
lods
dec
orb
fmul
clc
sub
icebp
hlt
push
pop
in
cmpsb
add
mov
popa
xor
fs
sbbb
hlt
cmpl
int3
cmp
daa
or
xor
add
ja
add
fiadds
adc
movsb
pop
cwtl
xor
mov
scas
rcrb
push
cmp
lds
jge
add
mov
sbb
inc
dec
icebp
dec
or
mov
out
sub
mov
mov
or
popa
or
pop
daa
popa
and
mov
insb
xchg
push
repz
adc
pop
or
rorb
jbe
mov
mov
xchg
sub
and
pop
cmp
mov
lods
push
scas
pusha
cmp
cmc
les
rol
xorl
or
sbb
lret
add
adc
clc
cli
out
andb
or
mov
rcl
xor
mov
xchg
sbbb
nop
fsubs
js
and
in
cmp
stos
movl
mov
cltd
stos
add
add
xchg
pop
nop
pop
call
or
insl
rol
scas
test
fsubl
sbb
out
faddp
stos
push
cmpb
sbbb
outsl
das
push
xchg
incl
and
jmp
or
test
pop
inc
sbb
in
dec
and
mov
push
sub
sbb
nop
sub
sub
xchg
fdivs
mov
xchg
adc
mov
stos
sbb
mov
sbb
and
jle
stos
sub
jae
mov
mov
add
adc
pop
notl
add
stos
add
mov
data16
push
push
add
call
jnp
mov
and
sbb
mov
or
xchg
dec
loop
push
movsb
and
adc
sbb
lahf
mov
fsubs
pop
push
adc
sahf
rolb
shll
jno
js
clc
cwtl
or
sbb
dec
rol
and
nop
rclb
pop
jl
icebp
mov
and
add
jae
test
sarb
stos
rcrl
addr16
adc
adc
enter
add
in
mov
rol
cwtl
rolb
test
sbb
popf
fcomps
cmp
cmp
nop
mov
insl
mov
cwtl
test
les
fisubrs
adc
mov
call
sti
cmp
enter
xchg
xor
inc
hlt
jno
xchg
nop
add
push
pop
push
push
cltd
cmpsl
dec
or
or
fldl
and
pop
lods
repnz
adc
and
sub
test
mov
pop
add
pusha
mov
repnz
mov
fisubs
in
iret
iret
and
ret
mov
imul
jns
jns
sbb
add
mov
lock
ret
sbb
dec
movsb
mov
jg
punpckhwd
add
test
sbb
out
sbb
xorl
sbb
mov
add
and
pop
movsl
and
inc
test
scas
cmp
xor
sahf
jg
fcomi
ljmp
cld
dec
jnp
push
cwtl
mov
xor
dec
or
jl
lods
sbb
into
enter
add
sub
pop
sahf
xchg
in
mov
fimuls
mov
push
pop
incl
cmp
sbb
inc
mov
pop
mov
in
stc
outsb
add
mov
fmuls
inc
or
pop
jno
fistps
or
xor
rcrl
sub
jge
shrb
rolb
pop
xchg
inc
dec
jo
mov
inc
mov
leave
pop
in
cmp
and
mov
push
stos
cmp
enter
pop
add
adc
sub
ljmp
jl
int
je
cmp
push
xor
dec
sub
in
fmull
fstl
xchg
push
mov
push
pop
lods
xchg
add
fldt
mov
daa
dec
add
push
dec
or
scas
loopne
nop
and
fsubl
pop
fstl
xchg
jae
cli
lock
add
dec
jle
loopne
mov
ss
add
jae
sub
mov
mov
repnz
aas
cmp
add
cmc
jno
add
push
or
arpl
shl
jl
sub
and
add
test
roll
or
add
out
jl
adc
xchg
and
pop
xchg
mov
xchg
into
hlt
enter
test
test
jecxz
test
popa
jmp
jg
adc
push
arpl
xor
cmp
icebp
mov
imul
jecxz
test
daa
and
fildl
subl
sbb
jg
or
push
enter
sub
xchg
repnz
fstpt
xor
xchg
pop
ja
orb
pop
add
or
les
xor
dec
mov
fwait
loope
add
test
rclb
int3
pop
pop
add
add
adc
pop
xchg
and
lods
add
mov
pushf
hlt
xor
sub
add
bound
push
sarl
imul
sti
js
js
call
cmp
pop
cs
adc
mov
dec
dec
lcall
jne
lock
xchg
add
outsl
xor
jno
or
inc
mov
mov
dec
xchg
in
out
enter
sub
cld
sub
add
adc
mov
int3
and
adc
lret
shl
arpl
add
ficoml
push
mov
add
fisubl
jl
push
adc
adc
and
dec
dec
add
or
and
sahf
sbb
inc
sbb
fidivrl
insb
xor
push
xor
add
mov
add
mov
inc
test
dec
lahf
add
push
and
rol
jp
imul
mov
lret
xchg
jno
add
test
sub
cmpsl
mov
adc
mov
jg
add
jp
mov
add
and
lods
lea
lods
imul
jecxz
out
stos
shlb
adc
push
fildll
jmp
andb
ret
mov
mov
lods
test
int3
sub
loopne
lret
scas
in
push
xchg
xchg
adc
cmpsb
inc
adc
add
xor
mov
jnp
xchg
sbb
add
out
jg
and
pop
add
ss
or
or
jb
add
ja
pop
inc
addb
push
xchg
mov
dec
xchg
jo
and
sbb
xor
pop
adc
fucom
or
xchg
pop
mov
shlb
add
sbb
or
cwtl
adc
call
xchg
sbb
and
pop
inc
lods
cmpsb
mov
or
cmp
test
ret
ret
cwtl
orb
add
les
sahf
cmpl
nop
mov
xchg
fs
and
pop
bound
mov
in
and
and
jl
sub
in
out
js
pop
and
decb
add
xchg
jecxz
add
cmp
dec
xchg
mov
push
scas
push
mov
mov
add
leave
loop
sub
call
and
lahf
ret
das
xchg
or
out
loopne
cli
inc
add
rsqrtps
xchg
pop
dec
lods
sbb
dec
ds
lods
inc
xchg
out
push
mov
mov
inc
ljmp
gs
lcall
sar
test
pop
add
sub
jne
rcr
popf
sub
fadds
sub
adc
clc
hlt
lock
mov
in
cmpsb
sbb
shll
push
sbb
dec
test
pop
out
loopne
mov
lods
int3
sbb
test
mov
repnz
xor
popa
divb
mov
push
je
xchg
dec
hlt
push
xchg
nop
and
or
inc
js
scas
sub
loop
mov
mov
adc
bound
xchg
fs
jge
pusha
popa
push
adc
jecxz
fistl
push
les
dec
nop
pop
xchg
mov
add
mov
adc
outsb
xor
push
sub
ret
or
lods
fs
push
test
pushf
data16
push
cmp
stos
or
xchg
shlb
cmp
movsb
adcb
das
mov
or
add
sbb
mov
sbb
fmul
mov
xchg
rclb
or
add
dec
rorl
ja
dec
mov
jl
pop
pusha
xor
sbb
xor
xchg
test
add
sti
mov
movsl
jae
pop
xlat
xorb
inc
stos
lahf
mov
xor
roll
and
and
lods
mov
and
cmp
str
xchg
nop
mov
ret
sbb
mov
sub
je
sbb
pop
mov
ss
sbb
aas
xor
xchg
adc
adc
mov
push
shlb
out
mov
lret
push
mov
adc
call
inc
mov
xor
xor
imul
test
hlt
sub
insb
add
jmp
loopne
add
cmpsl
jge
stos
les
or
loop
jp
pop
aaa
xchg
call
xlat
or
and
jne
add
push
xchg
adc
rorb
dec
mov
in
dec
xchg
sahf
sub
jecxz
mov
cmp
mov
sub
add
sub
adc
xor
or
lods
adc
rclb
pop
pushf
xchg
add
add
leave
mov
jns
or
es
enter
gs
jg
xchg
push
cmp
dec
dec
mov
inc
je
iret
pop
cmc
adc
mov
nop
in
or
les
jl
clc
cmp
addb
pop
jge
or
sbb
outsl
xchg
mov
icebp
inc
cld
cli
dec
add
lcall
test
inc
add
mov
cs
test
leave
add
adc
fadds
arpl
inc
add
enter
imulb
mov
add
int
mov
popf
icebp
dec
jns
sbb
pushf
sbb
push
inc
mov
shrb
jl
rcrl
dec
fldenv
les
insb
sahf
mov
adc
mov
mov
sub
jne
faddl
pop
add
ret
rorl
xor
inc
mov
rcrb
out
inc
pop
xchg
rcr
xor
push
sub
clc
add
add
vpmacssdd
in
sbb
test
xchg
adc
lock
dec
mov
jmp
xchg
mov
clc
jnp
mov
sbb
add
ja
xor
int3
adc
inc
test
xchg
xor
mov
fs
fistpl
add
jmp
add
stos
lds
aam
fisttpl
add
leave
jecxz
addr16
stos
sbb
test
scas
push
jmp
movl
cmp
add
jecxz
iret
test
add
jp
and
xchg
mov
popf
or
fldenv
subl
aas
movsl
add
and
cmp
rcrb
pusha
lds
sub
xchg
sub
add
fcmovbe
test
popf
lret
pop
mov
push
pop
jnp
mov
fistps
adcl
xor
icebp
rolb
js
out
test
jge
les
xchg
pop
add
fdivrs
cld
aam
je
and
in
xchg
pushf
and
sbb
movnti
pop
push
das
jo
mov
sbb
call
mov
push
or
cmpsl
jecxz
add
sbb
stc
icebp
xchg
idivl
dec
loop
repnz
xor
push
mov
popf
nop
or
add
and
dec
insb
xor
mov
enter
mov
sbb
xor
push
and
fimuls
lock
scas
loope
sarb
add
add
mov
xchg
sub
pushf
add
adc
push
mov
mov
lock
mov
xor
push
dec
jle
xorl
mov
sub
stos
add
aas
fs
pextrw
fwait
mov
adc
aam
lods
stos
stos
and
stc
outsl
es
sbb
xor
or
sbb
enter
xchg
sbb
lret
add
inc
add
or
fldl
int
outsb
shrl
mov
cmpsl
iret
pusha
icebp
mov
outsl
mov
pushf
xor
pop
mov
bound
or
sahf
jl
mov
into
inc
push
mov
mov
rcrb
dec
ds
loopne
pop
push
aas
add
xor
jne
jl
adc
sub
subl
je
add
or
cmp
nop
fsubrs
jl
mov
jns
mov
popf
xorb
lods
sub
add
ret
fldl
data16
mov
xchg
pop
mov
lods
ljmp
outsl
mov
popa
adc
jl
lock
xchg
cmp
mov
ret
ss
pusha
sub
add
pushf
inc
inc
jbe
bound
xchg
andb
dec
or
push
imul
andb
divb
jg
cmp
stos
adc
andl
sub
in
push
xchg
test
mov
icebp
or
lahf
and
ret
sahf
adc
repnz
add
icebp
or
push
fs
mov
adc
jl
mov
or
pushw
pop
and
out
pop
test
xchg
lock
mov
adc
push
in
sub
cmp
aas
out
leave
stos
pop
hlt
push
or
mov
xor
lahf
inc
or
add
xor
fstpl
or
or
sbb
and
cmp
popf
pop
inc
mov
mov
dec
sub
aad
sbb
pop
xchg
xchg
in
lock
dec
sldt
in
stos
jb
push
stc
dec
add
iret
test
add
mov
iret
pop
call
pop
repz
add
aam
jns
add
faddp
into
orb
jb
push
jae
dec
out
fsubrl
and
fadds
push
pop
hlt
nop
nop
mov
rol
scas
sbb
jnp
add
xor
ss
jmp
cmp
sbb
fsubrl
fisubrs
xchg
jmp
cld
add
in
shlb
dec
shll
xchg
adc
ljmp
out
adc
stos
ds
inc
cmp
ds
test
je
xor
add
cli
bound
add
mov
test
mov
add
mov
xchg
cmp
lret
push
jns
dec
movsb
enter
sbb
push
add
dec
pop
jl
cmpsb
mov
fsubs
adc
add
push
cmp
scas
jnp
xchg
push
and
or
pop
arpl
fstps
push
das
pop
pusha
push
es
lods
add
add
pop
sti
push
test
and
call
add
cli
scas
add
mov
adcb
add
lcall
clc
fildl
in
in
outsb
cmp
in
jmp
sub
rcrb
lods
xor
lds
cmpsl
mov
mov
inc
pusha
aas
add
cmc
dec
loope
inc
scas
call
jns
stos
movsl
clc
enter
add
xor
insl
inc
xchg
add
pop
xorl
inc
leave
repz
lods
test
inc
push
inc
mov
test
push
pop
and
into
jne
mov
scas
pusha
mov
cli
adc
addr16
ljmp
add
jecxz
out
push
pop
or
add
sbb
fsts
and
and
ljmp
js,pt
sub
and
dec
inc
std
sub
loope
push
lds
jge
jge
add
pop
das
sbb
dec
lock
inc
sub
inc
pop
in
mov
movsl
cmp
in
inc
mov
shrb
and
inc
jmp
les
xorb
add
push
dec
dec
rolb
mov
mov
inc
test
xchg
dec
js
and
popl
cli
jnp
add
iret
xor
je
push
aad
add
decl
xchg
adc
pusha
and
add
dec
jns
fadds
repnz
clc
add
sahf
fs
add
ljmp
orb
aaa
stos
pop
add
sbb
xor
ret
mov
loop
inc
fs
jle
push
into
adc
mov
sub
bnd
pop
cmp
push
in
xor
sbb
leave
aaa
add
std
sub
lock
movsb
jae
add
mov
dec
sti
rclb
add
fisttps
adc
mov
xor
pop
xor
arpl
call
mov
mov
sub
adc
jle
mul
sbb
fmulp
and
or
aam
insl
outsl
sbb
decl
ja
add
cmpsb
pop
add
cmp
xchg
or
xlat
in
pop
mov
adc
fmul
xchg
aaa
cmp
loopne
dec
push
movsl
nop
lock
test
pop
pop
mov
mov
fidivs
dec
lret
lods
xchg
push
dec
stos
sbb
sbb
dec
and
mov
sahf
gs
mov
push
or
mov
add
and
stos
adc
push
xor
mov
or
rolb
test
xchg
push
in
add
xlat
jno
mov
mov
add
cmp
xor
pop
jge
nop
add
cld
fnstenv
sti
das
sub
out
scas
xor
shll
cwtl
add
xorl
cld
mov
mov
test
or
xor
pop
add
popa
lds
push
stos
loop
inc
sahf
outsb
mov
aaa
mov
aad
add
add
add
aas
xchg
mov
idivb
shlb
sbb
fstpl
enter
add
fsubp
jge
push
out
mov
arpl
xchg
imul
psubusw
cmpsb
movsl
xchg
jg
out
hlt
ljmp
add
shl
cmp
cwtl
addb
mov
aam
cmp
and
sub
dec
and
and
orl
cld
inc
mov
cmp
add
sbb
adc
call
cltd
push
add
sub
mov
push
xor
inc
fisubl
or
or
lret
adcb
loope
insb
add
inc
jno
pop
adc
cmpsl
sarb
stos
inc
aaa
je
inc
cmc
jle
test
ds
jl
xchg
dec
cmp
sbb
cmp
mov
mov
and
push
inc
jecxz
sbb
add
stos
push
jns
jb
rclb
and
cmp
lahf
mov
or
add
mov
add
aad
dec
mov
cmp
xchg
or
pop
arpl
dec
dec
in
sbb
add
mov
aam
repz
xlat
cmp
xor
mov
sarl
xchg
add
and
add
sbb
cmp
dec
lds
out
adc
in
mov
add
aam
in
addr16
lea
out
add
mov
aam
add
pop
mov
movsl
lret
jge
add
sahf
cs
push
push
stc
cwtl
sub
int3
cmpsl
or
inc
lock
adc
push
cmp
pop
addb
mov
mov
sbb
cmc
jo
push
imul
icebp
inc
pop
xor
add
inc
call
xor
xchg
out
push
jbe
jle
push
rorb
sbb
shrb
add
fldenv
push
rolb
add
mov
pop
popl
int
imul
sbb
rorl
adc
mov
jno
sahf
mov
add
mov
lods
ret
imul
lods
pop
mov
mov
ds
clc
pop
jp
xchg
pop
xor
push
or
stos
lea
movsl
cld
sbb
xor
add
add
mov
add
add
bound
jmp
add
dec
rcrl
mov
add
push
xchg
push
imul
fnstsw
fadds
add
adc
out
add
or
and
or
sbb
mov
lock
jge
add
xchg
jp
mov
adc
mov
dec
in
mov
add
mov
stos
inc
jp
aad
dec
add
xor
lcall
sbb
psllw
arpl
xchg
in
xchg
movsl
add
jg
push
clc
daa
aaa
outsb
add
mov
cmpsl
adc
add
mov
xchg
jo
fs
ljmp
rcll
imul
aad
subb
into
dec
sub
inc
push
xorb
cwtl
add
aaa
jb
movsl
inc
mov
je
add
sbb
faddl
daa
adc
push
fldl
sbb
divb
or
mov
add
xor
or
outsb
adc
jge
xchg
das
cwtl
add
xor
add
sti
add
iret
mov
add
pop
add
cmp
inc
add
stc
mov
cmp
daa
insb
addl
inc
and
pop
add
outsb
mov
mov
jne
add
dec
mov
push
or
test
lods
aaa
add
pop
ret
aad
mov
sub
add
arpl
push
and
cmpsb
inc
sti
dec
xchg
jbe
add
mov
adc
out
jle
add
push
loope
push
dec
jnp
es
sbb
int
test
je
jno
sbb
and
loop
rorb
add
loop
push
add
pop
xchg
mov
sbb
cli
push
mov
mov
iret
in
aas
push
pop
fbstp
hlt
or
sbb
adc
mov
xchg
mov
or
and
pusha
push
das
jmp
jo
lds
add
lahf
stos
and
dec
arpl
in
add
rclb
add
jae
mov
push
push
xor
leave
test
push
mov
fmull
lock
push
add
inc
pusha
test
loopne
dec
mov
add
cmp
add
mov
cltd
call
add
test
jbe
ja
add
jecxz
out
push
and
sbb
icebp
pop
es
jnp
add
jae
push
cli
xchg
call
sub
les
add
sbb
jo
popa
in
mov
gs
inc
push
xchg
andb
xor
nop
mov
jle
clc
ret
nop
cld
add
cmpsb
mov
subl
add
and
sbb
and
insl
sbb
inc
jle
jno
or
adcl
cmp
add
fsub
xchg
shlb
pusha
hlt
subl
test
xchg
mov
je
mov
adc
jle
push
in
bound
and
mov
sbb
xchg
lock
cmpsb
movsl
lods
or
sbb
loopne
sbb
data16
cmp
dec
and
mov
negb
add
pop
lods
mov
ror
inc
cld
add
daa
push
mov
sbb
inc
push
sarb
add
jl
pop
xor
in
add
ds
add
sub
mov
out
cltd
jo
imul
jge
mov
add
call
jno
into
clc
jmp
stos
add
inc
gs
test
test
pop
sbb
dec
imul
pop
pop
pop
and
call
push
xor
sub
or
pop
pop
adc
lret
add
outsb
jl
leave
inc
sbb
and
orl
pusha
cmpsl
bound
xor
cmpsb
faddl
mov
mov
add
or
inc
add
push
mov
mov
sub
jo
pop
mov
popf
mov
or
test
popa
mov
popa
push
loopew
pop
stc
add
movsl
xor
add
pop
inc
mov
test
in
sbb
sti
jp
in
movsl
and
sbb
jne
sti
add
pop
cld
pushf
imul
jno
xor
loopne
clc
les
adc
add
mov
push
and
pop
popf
jns
stos
add
lods
mov
pop
fistpl
mov
and
or
add
repz
in
lock
jl
inc
and
push
cmp
add
out
and
fdivp
pusha
xchg
add
mov
shrb
fstpt
xchg
inc
add
pushf
rolb
add
xlat
mov
push
rcl
or
andl
ror
xchg
mov
mov
sub
decb
imul
adcb
mov
add
xchg
rsm
in
sbb
sbb
mov
mov
add
mov
repnz
cmp
jmp
pop
pop
and
or
out
aad
lods
das
movsb
jne
jge
xlat
loope
mov
mov
out
add
fdivrl
iret
cmpsl
add
pop
out
push
rol
dec
insl
jae
bound
outsb
pop
in
push
add
out
popl
repnz
adc
outsl
dec
xor
or
add
fwait
inc
aad
jle
add
mov
mov
jnp
add
pop
movsl
imul
lods
aas
aam
stos
add
xor
mov
or
test
push
clc
add
loop
cs
add
jmp
xchg
add
add
mov
xor
in
add
adc
add
xor
cmp
xchg
mov
cwtl
in
jg
cmp
int
inc
or
mov
mov
popf
aaa
pop
and
sub
aad
inc
pop
es
pushf
add
ja
xchg
add
test
mov
push
dec
subb
sub
adc
adc
xchg
movsb
mov
add
xchg
pop
stos
add
ss
rclb
add
and
mov
xchg
dec
add
pop
jg
add
into
mov
arpl
lret
jno
nop
xchg
add
imul
mov
mov
mov
xor
or
lods
loope
lcall
rcll
push
inc
call
pop
xor
add
mov
adcl
xor
pop
movsl
add
sub
lock
call
jo
add
or
cmp
add
pop
xor
je
movsb
sbb
clc
ret
ja
movsl
push
sub
pop
sahf
inc
cmp
repnz
or
push
inc
popf
pop
add
mov
or
movsb
adc
aas
pop
xchg
je
add
xchg
push
aam
int
in
mov
mov
cmp
and
loopne
pop
add
cmp
je
and
orl
and
push
adc
sbb
jne
ja
lret
adc
inc
cmp
sbb
cwtl
inc
stos
call
ficomps
or
addr16
pop
jecxz
push
ljmp
mov
sub
cmpsl
pop
stos
aas
xchg
ljmp
jmp
add
cltd
fmuls
xchg
and
sbbb
movsb
cmp
lret
mov
outsb
pop
out
inc
fwait
sub
popa
cmpsl
scas
sbb
add
outsl
fcomip
push
das
push
inc
call
icebp
cs
and
xchg
dec
rcl
inc
add
imul
mov
loopne
test
and
push
inc
add
push
xchg
out
shlb
mov
push
repz
inc
or
insl
mov
test
cmc
sbb
in
sbb
push
test
pop
adc
cmpsb
popf
xchg
mov
sarb
add
pop
sarb
xchg
repz
jns
and
jne
push
push
add
ret
cmpsb
or
jns
cmpsl
pop
jle
push
xchg
xor
das
adc
ljmp
ret
sbb
push
pop
fs
cmp
pusha
sbb
sbb
adc
xor
rolb
inc
cwtl
push
push
movsl
addb
jle
cmpsb
mov
stc
das
xor
and
mov
bound
add
lret
pop
nop
insb
in
iret
push
sbb
xor
xorb
adc
add
adcl
or
or
add
add
mov
bound
xchg
cmp
and
jmp
cmpb
add
pop
sbb
add
pop
mov
jl
ljmp
jmp
aam
cmp
add
sbb
xor
cmp
push
andb
mov
add
push
jmp
jmp
aam
cmc
pop
dec
stos
dec
sbb
mov
pusha
pushf
leave
daa
pop
mov
rorb
pusha
mov
vunpcklpd
shr
fistl
pop
jl
inc
int3
add
mov
add
sub
sub
pop
dec
jecxz
lods
add
hlt
push
js
push
jle
sub
jle
add
imul
sarl
outsl
add
add
cmp
cs
pop
nop
inc
sbb
bound
jbe
add
sub
int3
vmread
mov
test
jb
push
mov
and
out
aad
or
mov
imul
cmp
inc
movsb
pop
insl
push
test
dec
testl
scas
xchg
and
pop
pop
pop
dec
add
pop
ficomps
cwtl
cli
jne
aas
and
jns
or
in
loop
inc
popa
push
push
imul
sarb
jmp
dec
repz
pop
std
rol
in
pusha
insl
cmpsl
push
outsl
mov
pop
sbb
arpl
ret
aad
call
ja
fdivr
lds
ds
sub
test
jle
nop
or
inc
xorl
jb
pop
inc
mov
mov
push
insl
pop
sbb
pop
mov
sub
add
int3
in
lret
pusha
shlb
adc
push
test
pusha
pop
pop
nop
add
mov
inc
xor
ret
jno
add
mov
dec
pop
cmp
adcl
inc
or
pop
add
pcmpeqb
pop
inc
mov
mov
addb
push
or
jecxz
repnz
xor
cmovno
loopne
inc
rclb
push
mov
rclb
cmpsb
cmp
adc
add
ret
test
in
lahf
jl
add
pop
inc
mov
push
push
jge
inc
fcomps
test
fldenv
movsl
inc
push
mov
daa
add
shr
add
fldenv
call
adc
mov
or
pushf
insl
mov
xorl
sub
sub
add
cmpsl
lods
ret
add
adc
xor
sub
arpl
add
pop
sub
or
xor
xor
xor
add
sub
nop
popf
xchg
pop
cmpsb
jecxz
and
orl
mov
mov
inc
jno
xchg
add
into
test
ds
loopne
sbb
add
popa
xchg
mov
jg
lcall
subb
xchg
outsb
add
es
jo
pop
sbb
mov
leave
add
sbb
sub
sub
pop
add
pop
test
shlb
cs
jo
inc
jecxz
add
outsl
popf
jp
pushf
daa
or
repnz
push
push
dec
add
mov
cmpb
push
pop
or
popf
pop
mov
and
test
push
sbb
orb
mov
mov
in
cmc
mov
add
aaa
ljmp
lds
nop
test
sub
fisubl
rol
adc
movsl
mov
es
add
jecxz
and
fs
xchg
add
push
dec
js
mov
leave
cmp
xchg
mov
mov
mov
test
mov
inc
jp
jl
test
add
xor
stos
gs
mov
in
add
mov
push
insl
test
jae
add
test
scas
pushl
mov
jmp
push
push
pop
jb
add
push
es
jns
or
and
cmp
cmc
rol
pusha
add
jbe
fsubs
repz
xchg
ds
ficoms
mov
jb
nop
ret
sar
lahf
inc
test
in
xchg
jb
ljmp
sahf
flds
test
shrb
fcompl
mov
adc
cld
add
mov
adc
ret
out
lock
add
imul
add
or
outsb
sbb
pop
jecxz
adc
and
enter
cmpsb
add
lahf
push
sub
ret
xsaveopt
jge
add
test
popa
hlt
push
rcrb
cmp
je
div
subb
add
pop
repz
pop
xchg
iret
loope
scas
adc
insb
xlat
add
add
push
enter
push
shll
cmp
inc
out
sbb
xchg
jnp
jo
or
fscale
adc
push
dec
xchg
in
xor
js
lods
pop
add
scas
fwait
lret
and
out
scas
mov
aaa
insb
fadds
repnz
sub
xchg
jb
pusha
mov
jp
fcomps
aaa
jl
or
pop
mov
and
pop
pusha
push
pop
dec
add
lea
or
dec
pop
into
scas
ljmp
nop
mov
mov
inc
mov
in
in
movlps
mov
pop
add
gs
and
jo
add
xor
shrb
xchg
pop
fiadds
int
add
jae
push
mov
add
das
push
cmp
cmpsb
cmp
xor
jecxz
clc
cmp
ss
dec
mov
mov
adc
movl
add
std
jno
pop
inc
jns
add
imulb
dec
fs
pop
add
test
mov
int
cli
and
xchg
cmp
or
fiaddl
lock
add
in
xor
in
push
sbb
dec
test
push
js
pop
adc
xor
xor
inc
push
jae
add
ss
fcoml
popf
cmp
fisttpl
add
push
pop
jbe
dec
add
in
js
mov
cmp
mov
jb
or
mov
dec
sub
outsl
ret
xchg
add
test
jge
xchg
dec
and
lods
imul
movsl
or
add
insl
mov
add
xchg
mov
std
btr
int3
mov
xchg
xchg
or
pushf
push
test
mov
scas
add
add
cmp
data16
sub
cli
inc
sub
pop
jb
dec
xor
xchg
loopne
mov
push
and
fsubrp
push
sub
sub
add
push
mov
and
push
add
mov
lods
stos
es
ss
das
mov
int3
xchg
add
fisubl
pop
xchg
add
test
xor
adc
inc
mov
not
or
dec
xchg
push
push
push
xchg
add
xor
sub
nop
enter
fdivp
dec
data16
loopne
loope
add
mov
cmp
jno
pop
pusha
inc
pusha
int3
push
xchg
pop
in
imul
and
das
enter
sbb
into
notb
push
cmp
push
movl
mov
cmp
or
test
xchg
add
xchg
mov
or
popa
loope
add
sub
rolb
out
sahf
pusha
mov
roll
imul
aas
and
cmp
mov
xor
lods
inc
push
out
adc
clc
nop
mov
adc
mov
out
pop
sbb
xor
xchg
in
inc
mov
les
add
addr16
mov
in
mov
ljmp
lcall
add
mov
mov
pop
aam
xchg
ljmp
add
adc
loop
fadd
cli
ja
push
bsr
lret
shl
mov
pop
in
cs
gs
lock
xchg
push
ror
inc
push
lret
add
jno
shrl
mov
jbe
cmpsl
xor
test
mov
insl
lock
push
addl
add
aam
dec
es
mov
add
cli
ds
js
rolb
pop
or
add
test
xor
and
out
rorl
lcall
cmp
mov
mov
mov
ffreep
cmp
and
add
dec
fsubs
inc
cltd
jae
xor
enter
iret
add
incb
jle
push
sub
xor
addr16
enter
mov
mov
mov
dec
mov
mov
mov
jle
xchg
cltd
push
fldcw
mov
xor
dec
mov
push
int
pop
nop
cmpsb
sti
sub
imull
fmul
or
or
pusha
jecxz
popl
pop
lods
nop
es
add
jecxz
sarl
je
pusha
and
cmp
and
lds
filds
fwait
sbb
mov
aaa
cmp
loopne
mov
mov
xor
rorl
outsb
jge
push
cmp
int3
mov
lret
pop
add
test
cmp
les
int
add
incb
dec
inc
add
mov
les
xor
insl
inc
pop
sub
sbb
bound
mov
mov
leave
std
dec
addb
push
mov
xchg
push
add
ret
add
sti
mov
mov
nop
mov
jmp
int
mov
xorl
andb
push
movsb
jae
push
dec
int
xor
pop
xchg
std
add
jp
or
inc
xchg
in
outsb
lret
mov
mov
js
adc
outsb
jno
pop
mov
push
popf
loope
dec
test
stc
fisttpll
sbb
dec
mov
andl
sbb
loopne
testl
movsb
lcall
jbe
mov
push
xchg
movsb
movsl
or
shrl
xorl
mov
and
xorb
stos
int
aas
sbb
clc
ret
push
and
mov
xor
aam
mov
xchg
lret
mov
mov
adc
mov
mov
push
xor
adc
and
xchg
adc
add
addr16
fsubs
cmp
mov
mov
mov
jmp
insb
mov
popa
dec
mov
out
cwtl
hlt
aas
repnz
adc
insl
add
ret
push
pusha
dec
stos
mov
shll
xor
jo
mov
int3
push
popl
ret
cmpsb
mov
es
sbb
lds
adc
xor
and
inc
aaa
push
mov
jl
push
or
and
test
mov
or
sbb
icebp
jnp
xor
pop
subl
add
in
xor
mov
jg
and
movsl
inc
fs
pusha
add
test
sub
repz
add
jbe
movsb
cmp
or
sbbb
add
jle
adc
call
js
outsl
and
push
add
add
mov
xor
iret
and
mov
int3
mov
inc
mov
or
push
sbb
cmp
mov
packsswb
loope
cmc
test
popf
fwait
adc
xor
add
outsl
lret
shrl
fs
mov
inc
dec
outsl
add
sbb
cmp
ja
es
jle
jb
arpl
or
or
fsts
sahf
jo
in
xchg
fisttpll
and
jg
pusha
call
out
outsl
cltd
loope
inc
add
lds
adc
mov
popa
out
test
sub
push
int
xor
mov
push
mov
popa
jnp
sahf
inc
lret
mov
aaa
js
sbb
repz
je
fbld
pop
inc
pop
insl
dec
mov
inc
nop
add
mov
and
mov
xor
inc
test
jge
mov
out
push
mov
fadds
rcll
cs
outsb
mov
push
or
inc
and
inc
insl
sbb
mov
imul
test
jnp
jnp
and
push
mov
or
repz
movl
es
rolb
out
adc
pusha
push
pusha
dec
dec
jmp
scas
ljmp
or
push
inc
rclb
ror
sbb
cmp
aaa
xor
stos
dec
fcmovb
push
cltd
sbb
fmuls
jecxz
arpl
xor
das
jg
xchg
pop
call
xor
outsb
push
xor
inc
outsb
iret
push
xchg
leave
and
lret
fcoms
mov
out
lods
and
push
jle
pop
pop
sub
add
dec
das
and
mov
push
mov
lea
sbb
push
nop
roll
cli
mov
cwtl
or
outsl
jl
into
insb
xchg
call
mov
cmpl
mov
out
dec
sbb
or
cs
jecxz
add
out
push
inc
cwtl
add
popa
mov
inc
scas
ficomps
in
rolb
fwait
call
ss
add
sar
or
mov
lret
xchg
mov
push
nop
and
test
sub
insb
push
shl
ret
insl
out
adcb
and
sub
xor
adc
and
fsts
aas
xor
cmp
aam
and
and
push
out
idivl
arpl
add
inc
int3
push
hlt
sub
lcall
xor
cmpsl
inc
pop
les
pop
imul
rcl
bound
loop
mov
ror
sbb
push
fadds
bound
and
aad
test
fldt
mov
add
xor
dec
dec
mov
leave
xchg
mov
cmpsl
xchg
sub
adc
xchg
mov
and
leave
sub
push
mov
lods
jecxz
mov
and
imul
dec
sbb
inc
test
fwait
shll
mov
jmp
jle
add
cld
mov
cltd
and
cld
and
es
or
and
rcll
sbb
adc
add
or
pop
popa
leave
aaa
dec
repnz
fwait
sub
add
js
rol
add
ljmp
add
test
test
test
test
push
mov
inc
cwtl
cwtl
add
dec
adc
mov
out
adc
push
repz
dec
push
adc
cltd
pusha
int3
xor
or
aad
mov
jns
xchg
pop
inc
or
test
fldl2e
fwait
enter
sbb
mov
arpl
xor
sti
imul
adc
mov
xor
hlt
mov
cs
dec
mov
sub
adc
je
insb
mov
call
out
or
add
xchg
sarl
outsb
imul
fld
les
inc
add
lods
mov
xor
mov
sbbb
lahf
rcll
push
sub
push
add
dec
mov
mov
jle
push
jns
js
adc
pop
cwtl
add
mov
cmp
outsb
and
push
test
mov
mov
fdivl
push
sub
fcomps
xlat
cmp
pop
adc
inc
gs
orl
les
jl
push
push
sbb
arpl
pusha
mov
push
fstpl
jecxz
dec
and
mov
xchg
push
lret
sbb
and
call
mov
add
pop
lock
add
mov
xor
addr16
stos
in
add
dec
xor
outsl
xchg
and
jns
mov
cmc
xchg
mov
add
int3
inc
fadd
out
nop
add
int
hlt
xchg
mov
inc
insb
stc
cli
add
pushf
outsl
push
mov
and
and
in
notl
bound
lcall
popa
mov
dec
out
push
out
mov
call
gs
push
nop
js
mov
jmp
inc
and
lock
dec
cmp
xchg
addr16
enter
jnp
adc
sub
adc
sbb
and
push
lcall
adc
jmp
xor
adc
mov
pop
jo
and
mov
push
add
sub
adcb
int3
sbb
pusha
insl
mov
xchg
and
mov
add
enter
and
or
test
adc
and
lcall
hlt
pusha
sar
bound
push
in
mov
sub
scas
sbb
and
xor
inc
add
dec
loope
xchg
pop
inc
test
nop
fsts
fildl
mov
mov
addl
mov
movsl
cs
cmp
mov
jecxz
xchg
pop
mov
fs
xchg
cwtl
adcl
jl
xchg
add
addr16
enter
jle
sub
cli
cmp
hlt
pop
adcb
and
enter
lds
out
sbb
xor
lock
sbb
pusha
add
insb
test
dec
xchg
mov
clc
add
xor
xor
and
pusha
or
fwait
sub
push
sbb
cmp
leave
push
push
test
arpl
xor
adc
es
add
push
sbb
rorl
cld
loopne
daa
cmp
push
stos
faddl
xlat
and
sarl
mov
clc
add
add
jno
sbb
sub
js
bound
xor
or
subb
add
outsl
aas
and
jl
cmp
int
mov
and
sbb
inc
dec
mov
mov
xor
out
dec
hlt
sbb
push
and
ror
shll
mov
out
pop
int3
adc
push
inc
mov
popa
lret
fisubrl
popa
mov
rcll
xor
testl
or
subl
stos
add
or
pop
cmpsb
int3
pop
int3
hlt
jns
lds
add
int3
sahf
xchg
addb
daa
mov
outsl
mov
mov
xchg
test
gs
jns
pop
dec
mov
inc
rorb
pop
cli
roll
lahf
xor
or
or
outsl
je
cwtl
nop
push
cmpl
jb
mov
rol
and
mov
jns
push
mov
sub
nop
loope
dec
or
add
jg
rclb
fistpl
add
frstor
and
int3
rolb
sub
adc
push
cwtl
test
add
lret
fnstcw
or
cmp
mull
cwtl
test
mov
add
push
mov
cmp
xchg
add
and
lods
sahf
jo
xlat
adc
hlt
js
movsl
xchg
mov
xchg
cmp
fwait
push
adc
in
cltd
add
xchg
orb
fnstsw
mov
cld
mov
jns
sbb
add
inc
scas
add
mov
mov
push
es
enter
pop
imul
fs
and
aam
out
add
mov
int3
xchg
mov
sbb
jno
bound
push
add
fnstsw
cmp
jle
mov
out
icebp
jns
sub
es
outsb
imul
sub
pop
ja
sub
mov
outsl
pop
je
out
push
rorb
rcrb
rolb
nop
bound
xor
fistpll
outsl
es
syscall
js
mov
movsb
push
inc
inc
pop
clc
pushf
fs
and
xchg
sub
aam
icebp
push
or
or
push
adc
xor
outsb
sbb
add
rcl
mov
pop
cmp
arpl
mov
sub
negb
mov
add
fstpt
inc
into
adc
inc
shrl
insl
frstor
lock
xor
std
lea
sub
or
aaa
sub
mov
cmp
and
mov
inc
out
je
rclb
push
test
shl
lods
ljmp
data16
sbb
pop
push
mov
add
mov
filds
or
subl
add
fdivp
and
and
out
push
pushf
int3
loope
lret
fdivl
aam
jmp
sbb
dec
aad
and
aas
mov
jp
or
cmpl
rol
enter
sbb
add
pop
aam
lcall
or
add
xor
das
leave
les
push
orb
dec
daa
imul
fdivl
mov
mov
out
inc
adc
out
mov
mov
test
jmp
test
pop
add
rol
add
ret
mov
jno
sbb
push
dec
and
subb
int
mov
mov
sarb
ja
push
movsb
pop
pushf
lret
inc
test
out
adc
or
mov
shlb
imul
stos
pushf
push
bound
inc
cmp
xchg
insb
into
push
mov
shlb
jp
add
add
lea
inc
pusha
repnz
lret
addr16
sbb
push
loop
or
and
and
pop
add
add
sub
test
shrb
jne
add
hlt
jmp
or
fistpl
add
out
ret
fcompp
add
imul
jge
add
push
cmp
and
jne
andb
data16
mov
mov
sbb
jl
add
mov
sub
add
xor
xor
or
stos
push
iret
and
test
and
jns
add
testb
jecxz
mov
xchg
jo
insb
jg
cltd
pop
dec
int3
mov
notl
jno
sbb
mov
sub
add
int3
mov
or
cmpsb
sbb
push
mov
scas
inc
pusha
repz
jns
sbb
add
testb
jl
es
mov
add
aas
sub
sbbb
cli
jl
sub
jne
and
pop
add
and
inc
or
shll
mov
fcomps
or
enter
add
pushf
loope
subb
in
mov
repz
mov
and
nop
jecxz
aad
dec
out
or
cs
xorb
iret
lahf
enter
jmp
in
arpl
mov
inc
sahf
and
mov
or
push
lods
and
add
push
and
stos
sub
sub
mov
adc
aaa
dec
shlb
cmc
rcl
push
fisttpll
cmp
inc
xchg
cmp
push
ss
pushf
and
stc
lahf
push
test
mov
loopne
mov
ret
and
and
pop
mov
xor
adc
cmp
add
call
movsb
or
push
xchg
jns
jno
sbb
add
loope
hlt
insb
cmp
adcb
popf
add
js
push
and
sub
or
icebp
mov
mov
mov
sbb
xor
xor
xchg
cmc
add
mov
jne
gs
mov
pushf
and
add
aas
or
cmp
sbbb
pusha
pop
call
mov
sahf
test
nop
inc
mov
add
int3
or
mov
mov
push
push
insb
decl
shlb
addb
xchg
paddb
ret
or
inc
pop
test
cmp
arpl
adc
jae
push
pop
cmp
inc
insb
test
pop
cmp
test
push
adc
add
dec
sti
push
adc
loope
or
mov
iret
xchg
js
adc
add
dec
test
mov
mov
adc
mov
push
xor
clc
inc
jp
sub
xchg
xchg
xor
inc
cmp
inc
sbb
popa
sub
mov
pop
test
xchg
int3
mov
add
shlb
out
pop
popf
inc
dec
movsb
cmp
adc
adc
cli
adc
cmp
inc
lods
aaa
in
in
push
sub
pop
xchg
test
test
pop
aam
movsb
cmp
into
cmp
gs
into
arpl
shrl
in
fcoml
push
push
xor
iret
jo
nop
pop
pop
cmp
xor
mov
push
sub
push
pop
fdivp
and
push
es
jo
and
mov
cmp
fucomp
loopne
push
sbb
pop
sub
insl
popa
add
fnsave
subb
ds
jl
mov
add
daa
mov
xchg
adc
push
pop
lods
jl
sub
add
aad
stos
fisubl
pop
movl
jg
mov
hlt
add
roll
jecxz
mov
pop
sbb
shlb
push
lar
mov
xchg
mov
es
add
cli
enter
dec
sub
inc
xchg
or
pop
mov
cld
dec
cmp
adc
ja
shrb
mov
popa
stc
imul
cmpsb
inc
pop
test
pushl
cmp
and
xor
daa
push
lock
and
pusha
xchg
cmp
mov
dec
or
jmp
je
shl
cmp
stos
mov
pop
mov
xchg
pop
lea
or
test
sub
sub
adc
sahf
add
cs
dec
mov
arpl
push
mov
outsl
es
sub
push
pop
mov
or
cltd
mov
add
cmp
jo
jle
xor
inc
lock
iret
inc
xor
out
mov
arpl
vpcmpeqb
sbbb
and
and
in
mov
aaa
test
push
sub
imul
xchg
movsb
mov
imul
pop
js
lds
popa
mov
leave
jne
adc
imul
clc
and
add
cmp
je
add
pushf
roll
std
xchg
xchg
pop
xchg
lahf
repz
sub
orb
int
xchg
orb
fwait
cmp
adc
ja
push
pop
addl
add
mov
xchg
xchg
xor
and
dec
or
or
dec
mov
int
dec
cs
pop
test
xchg
test
repz
push
sbb
pop
int3
adc
loope
jle
add
rorb
call
fidivs
rolb
inc
cmp
sbb
xor
jo
outsb
sub
mov
stos
or
or
push
mov
add
cmp
leave
add
outsb
test
dec
scas
cmp
stc
mov
cmp
or
add
stos
jecxz
pop
frstor
sti
add
shlb
out
mov
add
lock
push
mov
jo
inc
inc
add
or
add
enter
clc
dec
daa
out
push
scas
inc
xchg
clc
lret
sarb
add
or
ret
out
add
pop
or
insl
je
push
push
and
dec
or
aas
nop
xchg
push
xchg
rolb
cmp
inc
jp
movsb
shrl
add
cmp
movsb
add
pop
adc
xchg
inc
shrb
inc
iret
adc
adc
sbb
pop
aam
mov
fstpl
cmp
in
je
pop
lret
inc
enter
sti
xchg
sub
insl
lret
push
pushf
pop
lcall
push
addb
daa
fs
pop
mov
outsb
cmpb
dec
in
clc
rorb
push
adc
int3
xchg
aam
fisttpll
iret
mov
mov
jle
or
orb
lahf
dec
loop
cltd
xchg
jns
sbb
and
dec
push
insb
pop
mov
or
xchg
add
pop
cvttps2pi
lcall
nop
shrb
cmp
cmp
fistl
jmp
leave
cmp
inc
shl
mov
fldt
addb
mov
jne
test
pop
aas
add
cmp
shlb
add
shrl
cli
xchg
jo
and
dec
fiadds
add
dec
add
mov
add
mov
pop
pextrw
inc
dec
hlt
and
movsl
enter
icebp
and
stos
pop
cmpsl
imul
fwait
aam
jl
lock
push
jnp
jp
and
es
add
add
icebp
sub
pushf
xor
js
icebp
aam
roll
gs
lods
dec
mulb
and
push
fisubrs
or
cmp
jp
mov
sub
add
mov
xchg
push
add
jbe
popf
cmp
add
push
jo,pt
cmpsl
push
mov
adc
inc
mov
xchg
out
mov
lock
or
fadds
ds
sti
add
lea
push
addr16
loope
mov
mov
xor
lcall
arpl
data16
pop
mov
ficoml
fs
loopne
test
pushf
fistps
ss
xchg
dec
sub
out
inc
fisttpl
mov
je
xor
repnz
pusha
mov
mov
pushf
push
sub
dec
and
fcmovb
and
movsb
idivb
loope
addr16
inc
andl
push
add
pop
pushf
shlb
dec
cmp
stos
mov
add
fiaddl
cwtl
stos
pop
push
mov
outsl
jg
and
xor
mov
xchg
add
test
mov
sub
mov
cwtl
rorl
popa
pop
aad
scas
inc
cmp
or
movsb
add
adc
xlat
cmpsl
add
adc
test
andb
or
sbb
out
mov
or
xor
push
in
cmpsl
nop
sti
pop
cmp
inc
stos
cmp
lock
or
scas
out
dec
and
cmp
fs
cmp
add
mov
add
addb
xchg
jmp
mov
inc
jbe
cmp
daa
or
mov
fs
add
add
ja
lahf
inc
clc
xor
dec
sub
xlat
andb
repnz
cmp
mov
sbb
jnp
pop
xorb
add
sbb
cld
lahf
pushf
loop
mov
mov
xor
and
xchg
fidivl
lds
dec
clc
loop
inc
sub
adc
ss
xor
mov
cmpsl
inc
sub
mov
mov
ret
rcll
push
test
sti
mov
lret
xchg
pushf
xchg
cwtl
arpl
jo
lods
cld
pop
test
adc
fadds
and
add
cmp
daa
mov
dec
mov
inc
jne
and
add
sbb
lahf
cmp
stos
leave
clc
insl
popa
cli
rolb
in
gs
repnz
inc
mov
push
lods
or
insb
fldenv
aad
jnp
iret
xchg
loope
add
jge
push
xchg
enter
rcrl
and
aas
inc
inc
mov
mov
fs
and
sub
cld
dec
mov
mov
xor
test
inc
sub
push
repz
mov
sbb
fimull
mov
pop
inc
mov
lock
or
in
sub
sub
pop
adc
out
out
inc
xor
and
ljmp
jnp
adc
int
movsb
mov
pusha
clc
and
es
add
mov
sbb
and
cmp
mov
or
lods
and
dec
hlt
popf
add
addr16
mov
add
addl
add
adc
in
push
xchg
sbb
out
or
ljmp
scas
mov
add
lods
out
lret
nop
add
mov
dec
or
inc
leave
add
mov
mov
inc
cltd
cwtl
add
pop
xor
or
mov
dec
sbb
test
xor
mov
mov
clc
cmp
shlb
dec
dec
test
ret
roll
jg
sbbb
push
mov
les
subb
lds
cmp
add
jg
in
add
pusha
rorl
rolb
or
add
mov
dec
notl
test
fs
aaa
scas
xchg
shlb
xchg
jo
pop
std
jmp
cmp
dec
js
mov
adc
subb
and
add
or
xchg
mov
cli
aas
pop
mov
lock
stos
pushf
pop
xor
push
sbb
andb
or
cmpsl
stos
inc
pop
push
or
jp
cwtl
es
adcb
dec
imul
js
xchg
mov
mov
hlt
in
inc
pop
add
movsl
incb
jecxz
jmp
add
adcl
fadds
sub
mov
sub
inc
enter
or
orb
jno
add
or
add
sbb
mov
pop
or
fildl
cmpsb
je
adc
cltd
add
sbb
ss
xor
movsb
mov
hlt
cs
inc
adc
lret
or
fadd
sbb
pop
add
pop
xor
call
add
adc
xor
or
imul
add
lahf
lcall
pusha
ljmp
leave
popa
in
pop
pushf
orb
in
mov
add
mov
push
ja
jle
es
in
xchg
movsb
insl
aam
xor
ret
in
rorl
adc
cmpb
es
add
pop
jg
xor
aas
fs
rcrl
addl
je
aas
xor
jbe
inc
sbb
sbb
cwtl
xchg
cmp
leave
pop
add
cmp
push
mov
adc
rcrl
dec
loope
add
sub
cmp
add
pushf
mov
cmpxchg
icebp
jp
clc
inc
jae
xor
push
scas
jb
ret
mov
int3
or
xor
jb
dec
or
mov
popa
shll
xor
add
and
dec
and
jecxz
pusha
dec
mov
mov
inc
mov
scas
jo
add
test
data16
loop
and
push
shll
xor
imul
adc
ret
push
xrelease
or
aas
and
mov
dec
test
mov
sub
xchg
add
fidivl
negl
loopne
and
add
repz
int
and
shll
pop
daa
icebp
fwait
sbb
cmp
mov
andb
push
cmp
cmc
inc
or
sub
fs
jecxz
push
mov
sbb
jg
mov
pusha
lret
fidivl
add
aas
pop
cli
std
repz
and
add
repz
mov
xor
add
sub
jb
xor
xor
dec
add
fcmovnu
or
and
popa
test
imul
mov
out
mov
push
daa
call
mov
add
repnz
add
xchg
add
aaa
ficoms
into
jo
jb
movd
arpl
sub
add
cwtl
push
xor
test
and
jno
lcall
into
cwtl
sub
sub
cmpsb
pop
sub
adc
enter
jne
bnd
int3
fs
je
mov
push
into
sub
lret
mov
add
xchg
cli
mov
data16
ret
xchg
fmull
ss
add
jbe
ja
adc
out
and
xor
adcb
sub
call
iret
movsl
or
nop
cmp
mov
imul
add
lods
cmp
rclb
jae
add
stos
daa
out
mov
or
cs
mov
les
dec
sbb
jo
out
nop
adc
idiv
call
or
sbb
add
test
sub
jmp
les
jb
pusha
sbb
sbb
cmp
jge
xor
cmpsl
rorb
repz
xor
repnz
and
sbb
shrb
and
js
sub
mov
imul
or
out
sbb
ja
add
imul
aas
loopne
add
add
jno
add
or
test
or
mov
fwait
movsl
mov
add
push
mov
mulb
lahf
hlt
or
and
push
mov
push
jle
sbb
xchg
and
lret
xchg
inc
movsb
rolb
movsl
into
inc
sbb
mov
mul
movsb
xchg
and
xchg
rcrb
add
push
out
sub
jg
sub
xor
mov
and
jle
mov
add
in
aaa
pusha
fs
and
inc
adc
subb
lods
mov
test
data16
jle
add
dec
mov
xchg
push
add
xchg
inc
loopne
lcall
clc
fdivl
sahf
jbe
mov
sahf
insb
rcrb
repz
dec
dec
cld
mov
inc
in
push
cltd
call
lahf
xlat
add
out
int3
lock
mov
repz
adc
mov
cwtl
sbb
repnz
inc
mov
dec
fistl
mov
adc
or
adc
clc
inc
lcall
pop
add
lcall
or
jl
enter
sub
ds
insb
popa
daa
sbb
push
mov
clc
sbb
nop
je
inc
int
popa
nop
and
aam
xor
ret
shrb
and
add
inc
sub
hlt
bound
xchg
into
sub
pushf
vcmpps
enter
or
mov
inc
inc
movsl
dec
adc
jo
mov
push
out
xor
sub
or
lret
shr
xchg
les
imul
or
jns
and
push
rcl
shlb
push
jp
push
nop
and
xchg
clc
mov
cld
imul
or
mov
add
push
lods
and
stos
cmp
fisubs
xor
add
push
sbb
mov
nop
jl
mov
insb
leave
cld
lret
aaa
les
push
aas
push
add
stos
add
das
subb
addb
cltd
inc
mov
pop
cmp
or
idivb
sbb
and
mov
adc
jo
loop
mov
add
dec
filds
insb
xor
mov
pop
mov
subb
push
xor
movl
fs
sti
and
pop
insl
and
sarb
leave
sbb
mov
repz
pop
pop
in
sbb
orb
push
or
cmc
cmp
add
lock
cmp
pushl
adc
and
add
imul
xlat
cmc
adc
inc
movsl
cwtl
xchg
cmp
and
cmpsb
mov
and
inc
inc
test
mov
pop
xchg
add
xor
faddl
add
dec
out
sbb
jp
and
imul
add
aas
inc
leave
lret
add
test
pop
or
mov
push
movsb
lock
add
fnsave
or
daa
lock
dec
loopne
adc
rcll
lahf
dec
jmp
add
popa
es
pop
fdivl
nop
push
movsl
lock
lds
xchg
loopne
aas
and
pop
fs
pushf
imul
out
testl
mov
mov
sbb
xorb
mov
xchg
xchg
lret
mov
push
aas
xor
jae
adc
repz
pop
xchg
or
rorb
sub
testb
jne
out
xchg
cmp
mov
add
iret
mov
les
xor
push
incb
pop
pop
sbb
aaa
fidivrl
adc
data16
cmp
popa
int
pop
push
repz
rcrl
in
or
jne
adcb
sti
sub
imul
pushf
icebp
add
int
dec
pusha
jecxz
ret
dec
or
inc
jne
in
xor
lahf
movsb
cmpsl
popf
add
jp
int3
add
inc
sub
adc
arpl
cltd
sbb
mov
and
mov
decb
shlb
lcall
sub
subb
addr16
sbb
xor
mov
shlb
out
xor
andl
jo
cli
cmpsl
test
mov
cmp
xor
clc
sbb
cmp
inc
aam
inc
lock
cli
jns
jns
sbb
add
cmp
cli
inc
into
aaa
pusha
xor
fwait
pusha
mov
in
pusha
repnz
adc
add
dec
test
mov
imul
cld
adc
in
push
mov
cld
les
shrb
or
sub
test
out
stos
out
and
arpl
je
add
or
test
pop
stos
xchg
sub
repnz
pop
in
dec
les
cmp
push
test
sub
mov
mov
sbb
rolb
mov
lret
push
rorl
sub
push
popa
or
dec
cmp
filds
mov
aaa
stc
test
into
sub
es
and
pop
inc
xchg
xor
insb
adc
mov
aad
movsb
inc
lods
outsl
loopne
or
mov
mov
xor
into
clc
or
insb
test
les
lods
ret
and
mov
movsb
std
push
ret
neg
bound
xchg
loopne
sbb
pop
nop
xchg
or
adc
enter
xor
pusha
arpl
movsb
popa
mov
roll
fiadds
or
inc
dec
lock
mov
lods
or
xchg
mov
hlt
mov
andb
xor
test
int
or
cmp
add
std
popf
inc
daa
jmp
fs
jbe
js
roll
and
cmp
out
add
and
sete
into
fmull
mov
movl
inc
inc
cld
dec
pause
js
cmp
repnz
aam
pusha
push
jo
xor
enter
xor
jp
notb
sbb
mov
cmpsl
mov
and
les
inc
and
mov
div
adc
adc
call
mov
test
mov
bound
sub
sbbb
add
adc
imul
test
popa
jae
mov
pop
mov
push
push
add
mov
std
or
aas
inc
inc
xor
je
xor
cltd
adc
or
daa
out
arpl
lods
and
fiadds
pop
lods
je
sbbl
sbb
inc
mov
xchg
pop
fistpll
add
cmp
mov
xchg
inc
jns
mov
pop
inc
data16
xchg
pop
adc
ja
mov
std
mov
aas
add
stos
sbb
pop
mov
mov
mov
inc
ja
sbb
jmp
cli
dec
in
iret
xor
mov
mov
pusha
pop
mov
cli
lods
push
into
xor
jmp
mov
nop
leave
popa
out
lods
add
loope
mov
stos
push
add
and
faddl
mov
mov
pop
adc
pop
lock
les
repnz
test
in
and
data16
or
cltd
pop
xor
adc
or
jo
outsl
sbbb
lret
sbb
into
sub
fwait
xlat
pop
sub
stc
push
repnz
test
pusha
jg
mov
pushf
push
mov
ss
sbb
pop
imul
and
mov
pusha
cmp
cmp
sysret
jo
lcall
mov
aad
lds
mov
rcrb
subb
icebp
pop
fdivl
in
loop
xor
pop
push
jmp
sbbl
mov
fisubl
pop
into
fsts
add
aam
out
lcall
jl
add
fdivr
add
lods
out
dec
jno
loope
cmpsb
mov
adc
sub
fcomi
adc
or
cmp
mov
js
clc
std
mov
mov
pop
hlt
xchg
push
push
cmpsl
add
in
es
fadds
inc
lret
mov
pop
xor
inc
lods
adcl
outsb
adc
jge
sahf
les
adc
leave
inc
mov
inc
dec
movsl
adc
dec
je
movsb
fcmovne
xchg
mov
sahf
in
add
xor
xor
adc
cmpsb
mov
adc
fmulp
add
xchg
out
push
sub
in
mov
mov
add
pusha
fdivrl
bnd
out
out
or
lea
sbb
add
out
mov
push
push
inc
mov
inc
push
addr16
shll
add
or
inc
push
mov
int3
push
shlb
cmpsb
xor
dec
enter
xor
mov
add
cltd
inc
in
add
adc
pusha
mov
or
add
adc
test
and
mov
and
push
mov
xchg
adc
mov
jge
cmp
mov
mov
leave
dec
xchg
enter
push
adc
adc
xor
mov
mov
mov
push
mov
dec
imul
adc
imul
movsl
xor
enter
pop
aas
scas
add
cli
mov
adc
or
add
movsl
sbb
inc
mov
cmpsl
inc
xchg
repnz
cmp
sub
pop
or
or
add
inc
test
adc
js
pop
pop
jne
add
and
sbb
pushf
stc
push
jns
sbb
jne
andb
aad
dec
add
movsb
test
clc
orb
add
out
dec
inc
xor
mov
inc
mov
ja
push
inc
faddp
in
in
shll
inc
int
mov
testl
sub
cmpsl
rcrl
dec
mov
movsb
ret
rcrb
cmp
insl
imul
ljmp
mov
fcmovne
int3
clc
mov
fidivl
repz
xor
cmc
add
add
jo
cld
int3
sbb
dec
imul
pop
movsl
inc
stos
add
add
les
pop
pop
lock
adc
mov
sub
xchg
call
or
aaa
mov
jp
leave
loope
add
sub
push
rcl
sbbb
add
nop
pop
inc
xchg
jle
orb
mov
ret
sub
aaa
stc
or
pop
and
dec
mov
add
jno
mov
cmc
clc
popa
loope
out
movsb
aad
pop
sub
in
cwtl
loopne
inc
nop
lock
add
pop
pushl
mov
xchg
pushf
fidivs
fdiv
fwait
cmp
xchg
push
js
in
pusha
out
and
jl
clc
add
dec
pusha
js
iret
loopne
inc
and
or
push
add
xor
adc
inc
add
arpl
dec
pop
cmp
lcall
jbe
lcall
sbb
sub
jno
sbb
jb
jp
add
add
mov
in
cmp
clc
lods
mov
adc
enter
in
pusha
out
test
pop
xchg
mov
add
sbb
or
add
lods
inc
icebp
dec
shl
jno
sbb
sub
add
lret
ret
adc
cmp
mov
cmpsl
cmp
dec
stc
push
push
cmp
add
sbb
stos
sbbl
shrb
and
cltd
imul
pop
mov
pop
mov
mov
shll
add
mov
fs
aam
push
add
incl
loop
mov
jbe
mov
xor
dec
nop
add
int
mov
insb
es
insb
xor
ds
jo
test
sub
inc
out
hlt
pop
add
test
les
ret
cmp
cmp
je
int
sub
xchg
mov
sarl
into
inc
jl
stos
push
gs
fst
pop
daa
ljmp
dec
aam
inc
cmp
push
xchg
imul
test
mov
push
mov
add
je
mov
jp
repnz
mov
movsb
in
int3
mov
jmp
or
movsb
jo
inc
sbb
sbb
sbb
out
mov
push
xor
adc
test
cld
cwtl
mov
lds
xor
push
mov
sbb
jl
and
ret
sbb
pop
movsl
cmp
xor
inc
jbe
movsb
adc
bound
pusha
ss
xchg
lea
push
inc
into
xor
mov
and
mov
push
outsb
jo
push
pushf
xor
lahf
lahf
fcoml
jl
subl
sbbb
hlt
pop
gs
leave
loop
push
mov
mov
sbb
adc
movsl
pop
or
ret
and
cmp
jmp
xchg
sub
gs
adc
add
inc
jae
dec
ljmp
xchg
add
sbb
les
or
cli
mov
mov
rorb
or
popa
test
test
or
and
or
pop
pushf
lods
imul
aam
dec
mov
jb
imul
mov
lret
push
sti
in
dec
icebp
or
pop
mov
jbe
add
outsl
dec
push
mov
sysret
nop
mov
fcoms
pop
cltd
adc
insb
sbb
out
insb
mov
xor
sub
adc
add
nop
xchg
jp
inc
jb
mov
pop
inc
addb
negl
pop
xor
andb
add
add
lcall
sub
mov
add
inc
cmp
dec
add
pop
jecxz
loop
xor
sbb
and
mov
in
pusha
lock
testl
bnd
mov
add
pop
nop
loopne
das
inc
das
fadd
dec
fs
daa
call
fcompl
mov
movsb
pop
and
xor
cltd
xlat
loopne
or
dec
mov
loopne
inc
fdivs
push
adc
sbb
shlb
daa
icebp
cmp
or
mov
push
daa
js
je
sarb
fwait
jnp
push
add
push
scas
jb
pop
dec
mov
les
mov
call
jae
daa
aas
jo
in
mull
subl
or
sarb
clc
pop
das
cmp
add
inc
push
mov
das
sbb
test
mov
leave
inc
add
clc
pop
inc
ja
bound
loopne
cmp
movsb
mov
mov
pop
clc
sub
fs
sbb
rorb
out
movsb
sub
dec
adc
out
sahf
jb
inc
xor
push
cltd
loope
mov
pop
cmp
sub
pop
fsubs
sbb
or
xor
jmp
test
xchg
cmp
enter
xor
xor
movsl
mov
fwait
cmp
rorl
xor
mov
leave
xor
int3
into
inc
shlb
cld
js
add
dec
sub
es
pop
je
mov
fadd
fsub
add
loop,pt
repnz
xor
mov
adc
out
lret
pop
cs
outsl
add
jl
sbb
push
mov
imull
jb
aaa
mov
inc
out
push
js
popf
adc
cmp
insl
push
int
repnz
inc
xor
dec
adc
xchg
cs
and
lods
sbb
sub
orl
push
mov
xchg
mov
in
inc
lods
jne
lods
xchg
xor
pushf
in
mov
cld
daa
push
mov
outsl
inc
iret
xor
ss
xchg
mov
movsl
add
inc
mov
push
cmp
fsub
or
cmp
add
pop
or
cmp
mov
xor
cltd
das
fstpl
rclb
cld
fsubrl
cli
cmpsl
int3
nop
inc
jg
and
mov
jp
cmpsb
push
lock
and
repnz
xor
mov
inc
pop
adc
mov
add
cmc
sbb
sub
dec
lods
pop
xchg
and
mov
add
push
adc
mov
sub
sub
add
mov
pop
cmp
jecxz
mov
out
les
inc
push
notb
mov
or
pop
pushf
lret
lahf
push
mov
xchg
dec
xchg
pusha
les
arpl
dec
rorb
dec
inc
mov
fwait
insb
sahf
mov
fstps
xor
negb
fwait
sahf
and
or
inc
andb
dec
add
inc
arpl
pop
rol
gs
clc
and
adcl
inc
mov
mov
and
test
adc
push
jne
push
sub
mov
les
outsb
shr
inc
ficoms
mov
das
enter
fldenv
movsb
scas
fstp
fsubrl
push
and
add
adc
in
bound
xchg
sub
inc
sarb
iret
mov
sbb
sub
stos
pop
mov
aad
add
clc
inc
xor
sbb
push
pop
fsubrs
fidivrs
shlb
movsb
sahf
add
add
fcmovne
sbb
add
jns
mov
dec
les
int3
jo
pop
xchg
ret
mov
aas
popf
out
xchg
mov
lcall
inc
mov
cld
or
or
mov
bound
xor
addl
mov
sbb
jae
jmp
or
jbe
sub
sub
inc
adc
sbb
add
sub
inc
add
movsl
fmul
mov
mov
pop
das
jmp
add
sti
mov
dec
cmp
dec
das
mov
mov
rcr
daa
pusha
dec
add
in
jae
aaa
adc
mov
and
into
test
addl
jg
std
add
inc
xchg
cmp
hlt
hlt
lds
lcall
push
test
ja
cmp
adc
push
cli
inc
mov
adcb
imul
xchg
lcall
daa
icebp
imul
mov
cwtl
lret
mov
arpl
cmp
xchg
aaa
test
push
aad
into
test
mov
push
lret
pop
js
push
clc
cmp
icebp
adc
cmp
add
sbb
sbb
add
jecxz
xchg
push
lds
xor
clc
fnstcw
sub
fsubr
pusha
pop
jb
lahf
test
mov
inc
mov
or
xor
inc
pop
mov
int
enter
mov
push
push
call
shlb
add
dec
movsl
pusha
xchg
bt
popw
gs
in
mov
mov
clc
call
pop
rclb
sub
or
icebp
pop
clc
clc
mov
js
add
inc
add
sub
lods
in
jl
jae
pop
or
les
aas
sub
in
test
je
push
xor
addb
sbb
outsl
imul
sbb
adc
and
mov
push
shl
mov
sarb
into
xchg
mov
pusha
int
fildl
and
push
push
push
loop
adc
mov
inc
repz
mov
cmp
add
ds
cmp
in
add
dec
dec
xchg
bnd
int
jl
mov
lods
push
mov
pushf
or
mov
shlb
inc
dec
or
pop
pop
and
push
out
loopne
sbb
andb
cmp
mov
pop
push
cmp
add
add
stc
jecxz
and
inc
push
cmp
xbegin
push
and
rcrb
int3
mov
jb
cmpsb
int
in
clc
mov
push
fmull
dec
orl
fstps
add
xor
push
pop
jnp
rcrl
cltd
enter
dec
out
cli
mov
loope
jae
and
push
mov
daa
lock
into
js
push
hlt
or
push
jae
iret
add
cs
xor
enterw
cld
mov
icebp
ficomps
clc
and
mov
mov
sbb
cmp
jp
call
mov
popa
inc
daa
sbb
cmpsb
xor
orb
xlat
push
ds
mov
sub
cmp
pop
inc
jno
test
fsubl
aam
dec
jnp
cmc
or
add
or
push
xchg
outsl
push
add
or
imul
add
mov
sub
mov
pusha
lods
int
jl
into
push
add
jnp
jbe
add
gs
or
out
inc
test
sub
dec
and
fucomp
movsl
shll
daa
inc
mov
adc
cmp
clc
mov
je
xor
and
cltd
pop
loop
jns
clc
cmp
sub
adc
and
pop
or
lret
jl
int
xor
inc
fwait
push
test
js
out
loopne
mov
cld
and
pusha
loop
testl
pop
enter
fnstcw
mov
lock
cmp
inc
and
sahf
insb
or
mov
mov
pop
mov
push
insb
insb
in
jle
add
push
cltd
xor
rolb
mov
cmp
or
jmp
inc
leave
add
push
cld
cmp
sub
cmp
cwtl
sbb
inc
out
fsubrl
jno
flds
hlt
pop
or
out
mov
dec
push
add
jecxz
outsb
jns
add
mov
and
mov
lret
pushf
mov
ljmp
iret
je
add
insl
sbb
and
test
inc
or
adc
ret
push
push
xor
add
pop
out
nop
mov
add
inc
or
xor
fisttpll
or
mov
add
jbe
xor
mov
jl
xor
in
inc
pop
addb
jl
sbb
call
mov
and
popf
testb
pusha
movswl
int
mov
mov
and
push
add
sti
mov
jmp
fcomp
mov
fildl
xchg
push
inc
lcall
mov
stos
into
xor
pop
ret
adc
inc
push
ret
lret
add
jge
adc
and
mov
roll
cmc
cmpl
test
dec
xchg
inc
sbb
clc
cld
cmp
test
add
fidivl
fldl
fisttps
xchg
sbb
sbb
ret
and
inc
push
ret
jns
jnp
add
cs
repnz
pop
and
cli
or
popa
or
int3
or
cmp
adc
sbb
push
cmp
pop
stc
enter
sub
incb
rolb
mov
jmp
pop
shrb
add
orb
sub
clc
sub
and
int
sahf
cld
jno
pop
pop
test
sbb
and
cmpb
mov
clc
xchg
push
push
xchg
and
inc
push
ret
dec
adcl
adc
sbb
cltd
iret
adc
xchg
movsb
xor
cwtl
cmp
movb
cmp
and
lcall
and
or
cmc
mov
adc
jp
sbb
fsub
scas
inc
xor
insb
mov
rcll
cmpsb
or
out
push
int
adc
jo
xchg
mov
mov
lcall
ja
clc
xchg
jns
add
push
inc
jmp
iret
arpl
push
pushf
fdivrl
add
cmp
je
dec
push
adc
mov
sbb
rolb
nop
mov
add
add
lea
push
cltd
jmp
sahf
addb
mov
xchg
test
mov
adc
pusha
adc
add
mov
or
mov
xorl
je
push
ret
mov
lret
testb
add
xlat
and
cwtl
loopne
push
jns
adc
and
add
or
sbb
mov
mov
mov
push
jmp
daa
fmull
mov
jl
sub
xchg
jge
jle
nop
jns
in
jne
and
dec
jbe
sbb
pop
clc
jmp
std
add
adc
or
out
in
push
flds
jecxz
inc
xchg
cmc
insl
dec
dec
sub
sbb
js
adc
pushf
out
jne
or
popa
mov
jmp
fwait
pop
jae
lea
popf
cmp
push
in
pop
mov
or
adc
add
fists
cmc
push
rclb
sldt
cmp
aaa
out
cmp
dec
jecxz
xchg
in
adc
and
add
xchg
cli
cmpb
andb
orb
and
xor
rclb
inc
lret
fisttpll
push
cmpsb
popf
sub
jp
push
aaa
in
cli
mov
and
adc
push
je
sbb
push
pop
push
inc
sub
jecxz
mov
sbb
sub
fmuls
mov
or
jne
adcl
insb
inc
sbb
pop
pop
popa
sysenter
loope
packssdw
orb
scas
sub
sbb
mov
mov
aam
sub
dec
dec
mov
leave
and
sub
xor
push
dec
popl
outsb
addl
xchg
call
mov
and
mov
xor
cwtl
ret
sub
add
mov
test
xchg
jle
push
mov
popa
or
clc
push
sub
scas
rclb
stos
cmc
nop
shll
jl
add
pusha
jmp
add
push
jge
mov
mov
push
add
push
ret
cmpb
mov
jne
sub
mov
mov
cltd
inc
rcrl
sbb
sbb
mov
icebp
or
out
mov
in
pushf
rcr
sbb
dec
add
ficoms
cli
mov
adc
sbb
jp
pusha
or
loopne
lds
fadds
inc
sbb
ror
fcoms
xor
nop
addl
push
mov
shr
and
mov
sbb
call
fcoms
mov
push
jmp
add
call
in
or
inc
out
add
sbb
mov
push
pusha
xor
mov
xchg
in
out
enter
aaa
mov
sbb
mov
pop
imul
mov
data16
mov
dec
sub
in
pop
cmp
sub
cmp
jmp
dec
cwtl
adc
pop
push
push
outsb
scas
jl
outsl
int
push
lods
pop
maskmovq
testl
in
cmp
sub
and
mov
repnz
sub
loop
xor
dec
psubsb
test
and
or
add
dec
pop
jp
inc
sub
push
sgdtl
pop
fldenv
cltd
add
mov
repnz
sbb
in
out
and
lcall
mov
add
pop
sahf
lcall
clc
rolb
dec
shrb
testl
shlb
cltd
aam
fimull
popa
pop
test
mov
stc
int3
test
imul
push
sar
and
pop
js
popa
mov
adc
push
jmp
das
jae
fcom
push
mov
jl
sbb
sub
movsl
or
fwait
jmp
les
pusha
cmp
push
dec
aaa
xor
xlat
lahf
add
aaa
xchg
mov
mov
adc
add
dec
jmp
sbb
sahf
inc
cmp
cmp
cs
add
inc
xchg
test
ja
add
mov
test
add
popf
subb
jns
negb
and
js
movb
inc
xchg
bound
popf
lahf
mov
lods
sbb
ficoms
adc
push
loop
mov
popf
stc
sub
jge
mov
inc
dec
das
aad
mov
add
sbb
mov
adc
fisubs
cmp
inc
stc
mov
cmpsl
out
inc
sbb
scas
add
add
xor
jmp
mov
push
xor
mov
jbe
adc
xlat
pusha
add
cltd
sbb
mov
popa
clc
imul
add
inc
sbb
aas
es
adc
pop
mov
add
cli
inc
popf
pop
add
cs
rcr
inc
mov
movsb
push
pop
stos
cmc
add
call
add
adc
xchg
xchg
push
lea
jecxz
shll
bound
popl
mov
mov
movsb
mov
popl
popa
pop
mov
xchg
pop
subl
in
stos
xchg
insl
out
jmp
or
jge,pt
push
or
bswap
repnz
js
dec
add
push
mov
xchg
iret
mov
adc
scas
fsts
les
imull
cmc
add
push
fwait
xchg
sbb
push
movsl
fbstp
mov
out
jnp
pop
or
add
lret
and
nop
mov
bound
mov
fsts
test
xchg
cs
and
xchg
push
sub
stos
add
pop
push
xor
pop
cmp
in
lods
ret
xchg
mov
jbe
add
dec
or
sbb
fldcw
shrb
push
mov
sbbb
push
popf
dec
pop
stc
shlb
hlt
mov
dec
xorb
add
shr
dec
loope
jecxz
pusha
dec
fwait
addb
add
sbb
mov
pop
or
push
cmpsb
aad
sub
jo
jnp
jno
test
and
add
dec
jns
adc
jo
add
dec
mov
push
mov
xchg
adc
or
cmp
cmp
lea
sbb
hlt
adc
cmpsb
inc
mov
cmpl
cmp
mov
lret
aas
cmp
decb
iret
xor
sbb
mov
out
add
stc
xchg
popf
inc
popa
lock
mov
push
sub
xor
ficoms
push
dec
dec
add
and
ret
lea
xor
inc
movsl
popa
mov
add
sub
adc
push
sbb
jae
sbb
and
test
ja
xor
lret
fs
adc
nop
pusha
adc
inc
in
jae
mov
xorl
xchg
and
inc
sbb
adc
jp
in
push
cmp
clc
loop
sub
ror
add
push
pop
gs
inc
or
jno
pusha
push
pop
nop
cld
cs
inc
sbb
lret
jns
mov
push
jo
mov
xchg
lret
aaa
lock
jo
mov
xor
in
es
mov
cmpsl
cmovnp
cwtl
lea
sub
add
add
xchg
fwait
pop
andl
into
loopne
dec
nop
push
mov
and
xor
lret
int3
add
add
fnstsw
xchg
and
jns
popa
icebp
fmull
rorl
and
movsl
add
pop
adc
test
ret
adc
mov
pushf
mov
aas
icebp
or
or
push
pop
movsb
jl
subl
adc
jle
popa
dec
push
add
ljmp
push
lahf
sub
or
dec
push
test
and
jecxz
mov
mov
lds
mov
nop
mov
aaa
fmull
aaa
es
fstpt
and
je
and
add
iret
nop
mov
xchg
cmpsb
dec
mov
rcl
inc
shll
mov
fs
sub
pusha
mov
mov
and
pop
sahf
es
fiadds
pushf
out
sbb
xor
in
add
test
and
cli
scas
inc
outsb
cmp
inc
xchg
in
sbb
dec
or
push
xor
add
enter
sbb
inc
inc
shlb
addl
mov
pop
add
push
repnz
mov
fcomi
sbb
dec
inc
adc
arpl
imul
cmc
sbb
xchg
mov
sbbl
call
lret
or
mov
fdivs
inc
lcall
dec
leave
adc
sub
add
xor
jbe
mov
add
lock
xor
ret
call
setno
dec
in
or
in
adc
outsb
push
sbb
push
adc
inc
nop
mov
pop
jmp
call
shlb
add
imul
in
cld
adc
cmp
adc
daa
pop
xor
add
popa
sub
jge
mov
movswl
out
sub
cld
cmp
ljmp
push
jl
call
and
or
fucomi
shrb
pop
pop
sahf
dec
std
shl
cmc
cli
mov
movsl
sar
xchg
js
sub
popa
les
pusha
xchg
push
std
stos
fsubl
mov
not
or
nop
mov
outsb
stc
or
repnz
aaa
flds
sbb
test
or
and
sub
call
push
stos
out
loop
pusha
push
in
fcoms
ja
mov
push
sub
xchg
inc
in
in
dec
lds
pop
and
fs
push
loope
xchg
cmp
mov
jle
and
pusha
sarb
jns
or
mov
pop
call
add
out
fldl
mov
nop
mov
inc
ret
int
sarb
cmpsb
and
adc
jl
rcll
mov
stos
ror
testl
jmp
ds
xchg
fcomp
pop
insl
mov
cmpl
dec
shrl
popw
push
pusha
popa
pop
push
mov
and
test
xor
or
push
pop
or
outsb
daa
jbe
add
mov
xchg
xchg
pop
pop
pop
nop
adc
pop
lea
adc
dec
lret
xchg
cmc
out
test
popf
in
cltd
dec
jns
add
xor
sub
movsl
add
add
xchg
data16
sbb
adc
cltd
and
or
roll
popa
jg
jl
xchg
mov
add
cmpsl
push
iret
sub
add
add
inc
adc
xchg
popa
mov
or
dec
sahf
xchg
mov
add
popf
or
ss
push
jne
pop
jp
add
xchg
dec
adcb
lock
sbb
daa
mov
inc
movsb
dec
or
mov
cs
sbb
pop
lret
push
mov
int
inc
jge
rcrl
pusha
in
xchg
push
ret
jle
jbe
sbb
std
ja
pop
add
sub
and
jb
insl
das
jbe
leave
cs
push
jnp
pop
jne
aaa
mov
jecxz
lea
fadds
out
inc
cwtl
loop
xor
mov
and
out
in
adc
cmp
push
jnp
data16
popa
cmpl
pop
scas
xor
jb
int
loope
inc
add
dec
jo
mov
adc
xor
xchg
adc
cmp
daa
push
or
xchg
jae
pusha
jge
dec
loopne
pop
xlat
push
mov
adc
add
fcomp
into
and
pop
inc
jo
mov
pop
sarl
mov
call
mov
sub
dec
mov
adc
mov
daa
cmp
mov
cmp
das
push
insb
into
into
mov
sub
rorl
xorb
fsts
jl
dec
rcrl
les
mov
dec
pop
inc
scas
stos
or
mov
je
fsubl
pop
call
pop
addl
daa
mov
sub
enter
add
cli
inc
add
jmp
pop
in
ret
test
or
or
jo
sub
xor
push
mov
dec
ret
addr16
idivl
push
or
adc
divl
repnz
jno
cmp
inc
jecxz
push
mov
fldt
and
add
cli
insb
mov
jbe
notl
xor
loopne
xor
shl
or
xchg
xor
mov
cmp
push
jnp
inc
push
imull
adc
mov
std
ret
popa
pop
xchg
or
push
push
mov
add
inc
out
inc
add
mov
push
add
inc
pop
xor
add
mov
leave
notb
roll
mov
sub
popa
je
mov
cmpsl
repz
enter
pop
and
loope
adc
mov
mov
bound
dec
outsb
adc
rcrl
xor
push
adc
mov
adc
adc
rorb
push
mov
xchg
dec
pop
adc
pop
clc
stos
mov
popa
out
sarl
pop
nop
adc
icebp
jno
xchg
clc
dec
xchg
sbb
push
lcall
add
jb
jns
mov
clc
sbb
xlat
add
mov
adc
movlps
pop
test
pop
xchg
adc
add
call
insl
pop
and
imul
add
hlt
add
jo
fmull
sbb
dec
outsl
mov
add
scas
dec
and
push
push
test
xchg
ja
add
bound
test
out
xor
adc
mov
fwait
loop
shlb
mov
push
xor
xchg
sub
pop
xor
jb
pop
repz
rclb
mulb
out
push
es
test
pop
sub
mov
les
cmp
cltd
andb
or
and
adc
shlb
mov
pop
xor
lods
leave
add
add
push
sub
rol
negl
fnstenv
in
mov
mov
repnz
mov
aas
iret
sarb
lods
jp
lahf
lahf
loopne
sbb
mov
sub
cmpb
add
and
mov
scas
movsl
push
pusha
xchg
mov
cmp
sub
xor
or
divl
mov
sub
xchg
decl
repnz
add
xor
mov
stc
sub
callw
les
push
or
cmpb
push
out
call
mov
mov
inc
sbb
or
decb
adc
shlb
mov
mov
mov
pop
scas
jo
pop
or
dec
jo
fs
mov
or
cld
daa
dec
add
mov
testb
lret
add
jp
and
clc
hlt
out
popa
pop
pop
outsb
dec
jo
aad
cmpsl
mov
dec
inc
push
xchg
js
icebp
rorl
push
insb
mov
fwait
lock
mov
les
loope
les
in
xor
andb
lahf
adc
in
jo
in
into
mov
dec
add
and
roll
cmp
popf
pusha
add
mov
popa
mov
leave
and
jno
shll
pop
mov
mov
or
and
adc
icebp
xor
or
mov
testl
xor
mov
xor
outsb
movsl
pop
enter
rclb
cmp
in
sbb
jnp
mov
jbe
sub
cmpsl
bound
jge
and
sub
push
pop
mov
and
leave
mov
jne
add
dec
in
loopne
and
insb
xchg
fistps
pop
imul
sub
xor
add
test
in
dec
and
stos
inc
or
sbb
and
out
xchg
scas
mov
arpl
les
inc
add
lcall
hlt
xor
test
insb
shrb
mov
inc
xchg
int
ret
pusha
xor
xchg
dec
out
dec
ss
popl
mov
pop
mov
icebp
or
add
ret
jo
rcll
loope
xor
xlat
and
popa
pop
fsubp
test
test
imul
rorl
inc
shll
jle
fisubs
stos
pusha
mov
inc
shll
movsb
xor
lds
je
sbb
stc
mov
faddl
xchg
jo
rclb
repnz
push
cmc
adc
mov
cld
iret
push
push
adc
xchg
pop
iret
rorb
mov
mov
or
insl
out
cld
jp
dec
or
into
add
sbb
mov
add
mov
icebp
sbb
cli
add
cmpsl
lret
xchg
mov
add
shrl
add
aas
xor
shll
scas
push
xchg
adc
mov
pop
test
cmc
movsb
add
popa
rolb
push
sbb
jmp
popa
popf
imul
jnp
js
sarb
jl
faddl
dec
cmp
push
xchg
xor
mov
dec
dec
pop
and
jmp
jl
pop
mov
fisubrl
aam
pop
loop
loopne
push
xor
cmc
sbb
in
fisttpll
sub
pop
lahf
sahf
filds
add
mov
in
pushf
adc
jmp
fidivs
dec
and
jns
shl
sub
push
adcl
mov
in
mov
mov
sbb
ret
sub
pop
aaa
mov
clc
mov
sbb
pop
pop
push
andb
test
xchg
add
stc
or
or
je
clc
and
sbb
and
sbb
cmpsb
mov
and
push
mov
repz
out
std
ljmp
xchg
ret
in
lea
xchg
or
jo
mov
xchg
sbb
repnz
mov
push
jmp
xchg
out
and
sarb
dec
push
add
test
inc
jne
adc
and
jle
xor
push
lret
xchg
mov
pop
bound
or
bound
mov
gs
lahf
cmp
xchg
rcll
inc
jnp
addr16
jns
sub
icebp
or
adcb
mov
movsl
fstps
lret
loop
lock
jns
cmp
fs
add
mov
push
pop
inc
aas
ds
adc
ret
test
shll
push
popa
bound
mov
inc
cmp
fdivrl
mov
daa
jns
mov
add
jge
lods
sub
dec
push
xchg
xchg
mov
in
push
inc
enter
rcl
sarb
fs
add
test
sbb
and
inc
stos
sub
clc
pop
jp
test
ss
cmovp
inc
or
sub
cmp
js
lahf
sbb
jno
inc
adc
stos
mov
or
inc
out
xchg
imul
jnp
movsl
jbe
inc
mov
out
sub
push
xchg
cmp
pop
mov
and
adc
dec
inc
les
popa
inc
pop
push
sub
add
pop
push
sub
cmpl
dec
sbb
push
lahf
test
sbb
mov
jle
inc
add
fadd
mov
push
xor
cmp
or
xlat
cwtl
push
pop
shl
mov
mov
dec
rolb
dec
inc
mov
mov
xor
and
add
out
xor
cli
xchg
and
mov
mov
stos
xchg
push
sbb
or
popl
pop
push
push
pop
pop
das
rdtsc
nop
mov
mov
jbe
and
dec
adcl
or
rolb
into
movsb
cwtl
xchg
arpl
add
pop
mov
cld
cmpl
outsl
add
inc
cmpsl
push
mov
sarb
ret
sub
push
add
dec
bound
cmp
iret
test
lods
adc
les
pop
mov
imul
roll
dec
das
cmpsl
sbb
pusha
push
mov
xor
sar
scas
add
popa
pusha
cld
push
or
add
fdiv
test
mov
lea
add
out
sbb
or
jecxz
cmp
lret
dec
or
mov
gs
adc
ficoml
inc
sbb
test
mov
push
cmp
or
daa
lea
or
add
cld
sti
pop
cmc
pop
dec
inc
lock
movswl
mov
insb
data16
cld
xchg
aam
mov
ja,pn
call
jo
fildl
add
mov
push
in
movsb
push
cmp
lea
xchg
sti
pop
mov
std
jno
ror
mov
jg
mov
adc
xlat
jg
loope
out
add
stos
jmp
dec
out
add
adc
xchg
les
xor
xorl
scas
jb
scas
and
mov
or
pop
int
iret
pusha
cmpsl
mov
nop
cmp
jno
adc
ds
mov
sub
inc
dec
ljmp
pop
test
jp
lret
into
push
or
sbb
and
dec
out
loope
lret
inc
push
aas
push
add
mov
mov
push
outsb
xchg
mov
stc
jne
and
scas
outsl
xor
inc
push
loopne
sti
jnp
popa
fucomp
sub
xchg
nop
adc
fimull
add
xchg
fists
mov
and
xor
rol
cmc
cld
adc
lods
nop
test
add
enter
jne
push
add
add
push
outsb
adc
mov
ljmp
jle
imul
psubusw
dec
dec
xor
iret
lea
pop
add
sub
loope
andb
andps
add
push
pop
push
pushf
fwait
add
xchg
push
rcr
outsl
pop
jne
inc
xor
jp
adc
mov
jne
stos
pop
fiaddl
std
mov
out
int3
dec
mov
cmp
xchg
jg
cmp
shlb
xor
cmpsb
xchg
aam
xor
dec
pop
push
push
sub
mov
jb
xchg
or
mov
and
loopne
or
dec
sub
jge
je
adc
cmp
daa
cltd
adcl
or
xor
pop
ret
idivb
imull
adc
inc
je
das
push
adc
jnp
add
add
daa
xchg
mov
lock
pop
push
out
mov
orb
mov
out
xchg
xchg
add
outsb
xchg
xchg
push
jg
cmp
add
push
decl
test
mov
pop
mov
push
das
outsb
mov
cmp
mov
jle
jbe
mov
push
pop
imul
out
mov
or
push
shl
mov
add
call
filds
negb
push
rorl
pop
dec
and
inc
and
sti
pop
add
in
pop
repnz
xor
stc
jp
cmc
scas
pop
lea
dec
fisubs
add
into
mov
add
push
pop
push
pop
xor
rcll
out
xor
div
ficomps
push
push
jle
add
cmp
insl
push
popa
jno
add
add
sbb
enter
pop
fdivp
repz
lahf
mov
xchg
lds
or
aad
jnp
adc
lret
inc
jmp
mov
push
mov
pop
lods
imul
jns
cltd
add
rcrl
pop
mov
or
mov
jg
mov
xlat
jmp
fstps
sbb
sbb
in
mov
jno
inc
insb
sbb
pop
movsb
mov
movsb
push
js
add
lea
xchg
insl
hlt
shlb
push
adc
imul
and
clc
or
push
xchg
loopne
test
or
dec
lea
xor
fsubs
adc
pop
jecxz
outsb
ret
mov
push
loope
sahf
jbe
jne
enter
sahf
shr
dec
into
test
in
xor
inc
in
xchg
out
mov
in
lret
mov
es
jp
cwtl
insl
fnsave
scas
hlt
mov
dec
pusha
outsb
mov
icebp
xor
mov
testb
mov
add
push
pop
inc
adc
add
test
sub
addb
ss
xor
jb
add
sbb
mov
pushf
arpl
push
cmp
repnz
add
push
ljmp
inc
or
popf
pop
sbb
pop
jae
mov
andb
cmp
push
mov
add
loope
add
rcll
pop
in
into
popf
enter
mov
cmp
pop
add
mov
mov
lcall
sarl
sti
mov
jb
sbb
ret
ljmp
test
dec
lret
ja
fwait
jl
jne
push
and
mov
sbb
mov
xchg
pop
adc
or
and
daa
jae
jp
outsl
add
aad
cmpb
aaa
cld
xchg
adcb
mov
and
add
and
shll
dec
add
xlat
mov
cmovns
out
xchg
push
mov
jbe
fmull
lds
gs
sti
sbb
adc
hlt
faddl
add
xor
xchg
jl
or
add
cmpb
and
fstps
push
sbb
add
stc
int3
sub
add
mov
loopne
mov
pop
cmpl
movb
mov
mov
nop
leave
int
add
xlat
mov
fsub
pop
adc
lods
mov
fnstsw
test
pop
or
lret
js
sbb
pushf
xor
or
and
add
cmc
add
dec
sbb
mov
push
pop
pop
in
add
inc
jnp
gs
adc
pusha
mov
pop
lret
stos
addb
pop
adc
mov
test
sahf
push
pusha
adc
xchg
jge
mov
dec
in
es
fisubs
ret
pop
sahf
outsl
inc
fisubrs
xchg
lcall
sbb
test
jmp
repnz
mov
dec
dec
out
dec
cmp
adcl
pop
mov
cmp
es
aaa
mov
arpl
lcall
lea
cmp
jb
cli
mov
nop
xchg
fisubrl
sub
cltd
fisttps
mov
in
and
mov
dec
and
repnz
stc
icebp
push
mov
sbb
mov
or
and
add
sub
nop
xchg
sub
xor
cmpsl
sub
cwtl
jecxz
addl
sub
sub
pushf
into
dec
xor
subb
and
dec
lock
lahf
jae
adc
imul
pusha
sub
sub
xor
jnp
jo
mov
and
and
xor
xchg
addr16
push
mov
mov
das
mov
mov
sbb
sub
adc
clc
sbb
mov
dec
insb
pop
jo
aas
pop
add
sahf
pop
ljmp
sub
jmp
inc
cmc
addb
pushf
xor
movsl
enter
sub
pop
in
mov
sub
push
orl
jecxz
pop
and
cmp
in
xor
pop
or
sub
insb
pop
push
mov
mov
pop
ja
add
test
bound
cmp
pop
stos
mov
push
add
clc
push
xlat
jns
addl
mov
sub
pusha
testl
xor
jmp
loope
fnsave
or
cmpsl
add
sub
outsb
sbb
imul
add
mov
pusha
cwtl
pop
push
push
mov
xlat
fwait
cld
adc
sbb
or
fdivrl
mov
aas
pop
cmpsl
mov
xchg
outsb
xchg
shrb
test
or
mov
in
xchg
cwtl
xor
bound
cmp
mov
jl
sbb
icebp
jecxz
push
add
jmp
add
dec
mov
cmp
or
mov
leave
cs
in
out
jg
mov
xchg
sub
leave
mov
jecxz
in
icebp
int
das
fisubrs
lahf
in
cmp
cmp
and
lret
out
fwait
sub
int3
movsl
add
js
inc
add
jo
push
cmp
pop
cmpsb
imul
mov
clc
rorb
or
or
mov
pop
mov
pop
dec
push
or
sbb
pop
inc
and
add
push
pop
popa
mov
shlb
sbb
std
ret
lahf
sbb
pusha
adc
and
imul
ret
pop
add
rcl
push
inc
enter
add
push
pusha
enter
add
bound
leave
push
pop
popa
mov
lahf
sbb
push
cwtl
or
pop
lea
mov
add
data16
cltd
add
daa
dec
cmpsb
mov
mov
jns
mov
dec
mov
rcrl
xlat
add
cmp
or
sub
inc
pop
shlb
lds
xor
push
out
popa
adc
test
lock
inc
xor
movsl
inc
adc
popf
sbb
bound
jb
pusha
and
push
pop
mov
or
stos
cmp
lea
xor
ret
aam
inc
adc
cmc
and
push
mov
mov
or
mov
jne
add
scas
sub
test
rcrl
push
pop
xchg
aam
cmp
xchg
cmp
xchg
and
push
rorb
sbbb
xchg
jge
in
shrb
lds
or
daa
add
fsts
jle
push
popa
ret
shl
jmp
or
fsubr
pop
es
sar
inc
xchg
mov
jmp
dec
mov
in
push
jnp
add
add
in
sbb
pushf
sbb
pusha
out
call
cwtl
add
inc
mov
out
or
push
addr16
inc
add
pop
adc
adc
orb
jns
mov
movsb
push
shll
orb
inc
or
les
ss
push
dec
jp
push
push
add
sbb
dec
jbe
lock
pop
jbe
shrb
xor
call
icebp
push
loop
add
imul
lds
int3
add
or
dec
roll
sub
in
add
pop
cld
stos
roll
mov
push
xchg
out
push
bound
in
les
imul
outsb
add
lcall
mov
std
cmp
adc
add
or
sbb
punpckhbw
xor
sbb
adc
jp
add
mov
shl
repz
adc
push
xchg
mov
std
sub
push
pop
fidivrs
in
mov
ret
das
jl
pop
push
add
xor
push
out
pop
mov
ret
mov
pop
je
jecxz
loopne
inc
and
adc
push
sub
push
es
pop
or
xor
ret
ljmp
hlt
xchg
pop
insl
mov
push
add
js
xchg
add
push
outsl
lret
xor
nop
rolb
scas
inc
jb
rcrl
repnz
inc
jne
add
fmull
and
daa
push
cmpsl
rclb
cmp
push
jne
pop
mov
insb
dec
and
push
and
outsb
fisttpll
jle
mov
pop
xor
sti
sub
xchg
jo
mov
repz
jmp
lods
inc
clc
or
test
ljmp
aas
je
in
popf
sbb
push
add
mov
sarb
pop
data16
sbb
sbb
bswap
flds
jmp
mov
repnz
push
jecxz
pop
inc
add
cmc
pop
rolb
sub
push
adc
sbb
cmpsb
mov
addl
add
add
mov
or
int
data16
add
and
fimull
add
mov
cmp
stc
iret
call
pushf
cld
sti
outsl
mov
stos
dec
jbe
cli
or
add
pop
je
lret
fsubs
sbb
and
jnp
mov
cmp
add
out
mov
psubusw
push
adc
jbe
add
xor
enter
sbb
sbb
add
mov
pop
push
test
cmp
mov
out
mov
lds
push
inc
pop
out
add
xchg
js
dec
fcompl
cmp
add
fcompl
pusha
ret
shl
pop
or
inc
inc
nop
add
and
std
sub
in
xchg
out
and
inc
cmpb
or
cltd
lea
add
push
inc
sbb
jecxz
sub
stos
inc
and
dec
jns
add
cltd
add
into
in
cmp
push
mov
fdivrs
lcallw
shrl
dec
jge
mov
inc
xchg
mov
xchg
add
push
subb
mov
cmpb
xor
fsubrp
ficompl
mov
xchg
pop
loope
loop
or
push
imul
lea
fisubrs
test
sub
push
push
add
push
aam
mov
cli
and
inc
jo
stos
push
pop
add
and
cmc
inc
je
movsb
dec
xlat
lods
sbb
in
mov
clc
mov
jno
push
mov
or
incl
jle
daa
add
mov
ljmp
push
cwtl
sarb
outsb
mov
pop
hlt
jle
adc
shr
inc
add
mov
les
xor
xor
lods
hlt
ret
in
xor
pusha
jno
push
cmpsl
enter
dec
push
mov
adc
mov
mov
mov
retw
fiaddl
mov
fs
xor
jno
aaa
fstp
lahf
cmp
mov
push
test
fwait
add
cmp
jp
pusha
xor
out
cld
lock
enter
ret
and
cmp
xor
cmp
jecxz
mov
nop
mov
mov
add
cwtl
mov
movsl
sub
into
xchg
xor
adc
jg
std
int
loope
sbb
fistpll
and
gs
loopne
pop
and
movsb
pushf
and
cmp
aam
cwtl
and
test
jbe
and
mov
sbbb
mov
xchg
out
mov
ljmp
pop
cmp
mov
daa
mov
push
push
and
icebp
leave
add
js
roll
outsl
data16
adc
and
add
lret
rolb
dec
scas
sbb
ja
orl
jmp
add
lahf
int3
or
cmp
push
mov
stos
scas
lcall
or
sbb
movsl
subb
jo
or
mov
add
adc
cmp
add
inc
mov
or
add
shl
and
popa
push
ja
adc
sbb
and
sbb
jp
add
in
subb
xchg
adc
add
add
fs
dec
sti
mov
mov
gs
add
cmc
jp
add
pop
sti
lret
iret
lock
mov
int
xchg
xchg
mov
or
xor
test
push
sarb
push
ja
add
xor
xor
test
paddsb
hlt
mov
insb
incl
cmp
imul
push
test
rorb
out
inc
out
arpl
lea
enter
xor
stos
leave
shlb
loopne
xlat
pop
lock
inc
mov
pusha
hlt
ret
ret
dec
enter
xor
pusha
and
inc
xor
cmpsl
add
lret
loop
add
and
xor
xor
dec
in
ss
test
xor
add
add
hlt
and
and
test
push
add
or
hlt
inc
hlt
add
cmp
add
cli
dec
mov
mov
orl
dec
inc
mov
xchg
lret
xor
scas
imul
push
repnz
jb
lret
test
ds
add
xchg
faddl
repz
lods
cmc
sub
pusha
adc
add
aaa
xor
stos
les
xor
je
and
or
fisttpll
mov
jno
fwait
add
mov
dec
mov
bound
loopne
add
dec
cmp
xlat
movsb
jg
cli
std
add
rclb
xor
sbb
adc
test
pop
push
es
int
ljmp
add
push
pop
adc
sbb
in
jg
stos
add
adc
fisubrl
daa
add
xchg
subl
push
ror
jle
insb
mov
lcall
xor
add
inc
inc
cmp
pop
jg
mov
jp
and
dec
cld
loopnew
sbb
mov
jg
rolb
mov
cmp
out
lcall
out
lcall
andb
int3
jmp
xor
add
push
bound
jo
in
cwtl
pop
add
int3
lahf
sbb
jmp
out
cmp
ljmp
pop
mov
int3
push
sub
or
dec
into
test
sti
mov
inc
jne
cmp
jb
repz
and
add
test
xchg
mov
cmp
sbb
lret
fadds
adc
pop
cmp
jo
xor
shrl
mov
cmpsl
stos
incl
xor
pop
sub
and
mov
pop
pop
add
iret
cmp
aas
add
sbb
and
in
add
jo
cmp
push
fmull
xor
push
jnp,pn
mov
mov
outsl
es
inc
adc
loopne
xor
ret
int3
ret
ficoms
xchg
mov
ss
sti
and
jae
vmread
xor
addl
add
push
add
add
movsl
lret
movsb
adcb
jg
bound
or
mov
mov
push
std
lret
cmp
add
imul
add
orb
imul
incl
mov
or
lea
adc
and
jae
stos
mov
das
negb
cltd
add
push
mov
or
dec
fwait
push
and
and
shl
jl
mov
or
cmp
test
pop
cmp
xorb
jmp
inc
push
and
test
fsubrl
xchg
loope
lea
mov
sbb
and
loopne
xchg
sub
std
push
or
inc
cmp
movb
sub
mov
cmp
aaa
cs
stc
mov
cld
out
fs
push
flds
out
cmp
mov
jmp
ret
decl
pop
stos
cmp
push
push
adc
and
sbb
daa
dec
inc
xor
cmp
jo
push
ja
ficoms
jbe
popl
not
in
mov
test
test
in
xchg
jmp
pop
pop
xor
outsb
push
shrb
mov
shrb
push
imul
sar
in
xchg
add
nop
pop
inc
push
cmpsb
dec
fldcw
ja
xor
iret
adc
int
mov
jg
jmp
test
lds
jle
aaa
addb
jo
repz
jge
int3
clc
or
test
cmp
jne
add
lods
adc
sti
xchg
mov
bound
aaa
xor
xor
or
add
add
gs
jno
jge
xor
fwait
sbb
pop
xchg
mov
pop
add
or
rol
mov
jne
inc
in
inc
sbb
cmp
mov
push
loop
mov
cmp
out
mov
dec
jbe
fldl
call
xchg
stc
push
mov
cmpsb
into
notl
and
sub
in
xor
call
outsb
xchg
add
test
mov
test
push
add
popf
mov
pop
and
pop
popf
iret
mov
adc
fchs
dec
cmpsl
mov
nop
jae
add
push
cld
push
and
shlb
push
xor
call
push
lds
loopne
nop
shr
add
and
push
add
add
in
sub
push
add
jg
rclb
xchg
in
aaa
mov
lods
xor
or
mov
loope
xchg
test
push
movsl
fiadds
fiadds
or
mov
arpl
push
cmp
adc
mov
popa
add
mov
push
mov
pop
call
lods
inc
out
aaa
popf
sti
add
loope
mov
adc
sub
adc
and
xor
outsl
cwtl
test
leave
in
fistps
add
push
cmp
cmp
pop
push
idivl
inc
or
test
test
fs
hlt
jb
lahf
test
pop
lds
ret
mov
cmp
mov
stos
add
stos
add
and
loope
mov
add
add
pop
inc
loope
stos
and
inc
push
or
dec
and
mull
aas
inc
add
mov
mov
testb
clc
pop
inc
cs
test
sub
call
ljmp
rcr
mov
xchg
int3
call
ss
nop
cmp
inc
ja
ficoml
in
xchg
clc
cmp
pusha
push
addb
push
push
inc
inc
leave
add
das
sbb
sub
filds
shll
mov
andb
aaa
inc
add
xchg
loop
sub
add
dec
mov
mov
dec
imulb
add
and
or
mov
out
scas
adc
sbb
xchg
repz
int3
push
adc
call
sub
xchg
data16
mov
fsubr
outsb
fisttpll
mov
mov
mov
pop
lret
xchg
icebp
xor
aam
xor
add
adc
daa
xchg
mov
and
mov
add
addr16
sbb
ret
push
lea
adc
and
movsl
and
mov
or
add
cmp
fldt
int
sbb
shll
adc
jbe
fsubl
fwait
mov
or
mov
out
outsb
ret
lods
mov
ficompl
pop
adcl
sbb
movsl
leave
or
sarb
scas
add
sbb
loopne
add
clc
pop
jae
sub
psubusw
add
adc
pop
test
scas
fwait
movsb
adcb
mov
add
mov
nop
stos
shr
and
daa
test
jne
fiadds
xchg
out
and
pushf
or
or
dec
movsb
mov
lock
mov
in
and
push
insl
jl
adc
outsl
and
sub
jmp
pop
testl
sbb
push
lret
mov
add
sub
mov
sbb
stos
fcmovbe
sub
push
inc
and
scas
or
sub
pusha
icebp
ret
pusha
adc
rcrb
xor
fcmovb
std
mov
xchg
aad
pop
inc
clc
fsubrp
imulb
gs
std
clc
add
push
sbb
jne
repz
dec
cmp
add
out
mov
add
pusha
lods
mov
mov
test
sbb
lahf
int
loopne
sub
push
sbb
stc
lods
dec
lods
ss
sti
add
sub
sti
jp
or
xchg
mov
lods
dec
pop
pop
neg
cmp
push
mov
mov
dec
push
jg
fwait
or
dec
test
xchg
xchg
add
dec
mov
nop
loopne
and
outsb
push
sbb
xchg
sub
pusha
test
push
mov
sbb
jge
inc
aas
or
std
sub
xchg
sbb
ja
mov
pushf
or
pop
xor
rclb
ret
push
adc
cmpb
std
bnd
test
and
gs
pop
mov
js
cltd
inc
sti
cs
push
mov
and
scas
repnz
jmp
js
int
or
mov
loopne
push
adc
pop
jmp
int
test
sarl
cmp
dec
pop
push
repz
add
cwtl
and
test
out
aaa
add
cld
sub
sub
nop
pop
movsl
jo
adc
es
shrb
out
sahf
imul
add
sbb
add
stos
pushf
or
add
adc
ret
jmp
lfs
fimuls
dec
hlt
add
out
addr16
arpl
stc
sub
pusha
testl
inc
sbb
sub
pop
test
ds
or
add
out
nop
jmp
and
pop
shll
pusha
fwait
cli
aad
mov
xchg
mov
fcomps
mov
adc
mov
pop
jge
mov
push
in
xchg
loopne
sub
sbb
orb
mov
push
mov
loop
dec
inc
sbb
inc
or
mov
push
call
dec
lea
cmp
mov
call
mov
inc
std
sbb
bound
in
mov
mov
mov
fbstp
jp
or
add
in
push
pop
add
cmp
test
lock
iret
jp
dec
add
bound
mov
sub
test
test
jg
push
mov
pusha
pop
enter
cs
fucompp
das
adc
lds
mov
add
roll
int
cwtl
inc
cmp
add
out
ljmp
push
pusha
jns
dec
loop
push
sub
mov
nop
pop
pusha
and
or
sub
lret
inc
mov
jnp
pop
cmp
mov
nop
cmpsb
loop
shrb
sub
push
sub
pop
fimuls
inc
cs
sub
lcall
pop
bound
add
adc
sub
jo
or
jo
in
add
lcall
mov
or
mov
je,pn
hlt
add
pop
ljmp
out
jp
rcr
push
mov
mov
push
movsb
dec
or
cmp
mov
fiadds
mov
mov
out
sub
test
loopne
jge
cmp
in
sub
xor
test
dec
loopne
aad
stos
ficoms
and
jle
mov
test
insl
out
enter
les
insb
lret
orl
mov
jp
addb
add
push
push
lcall
pop
sub
push
sbb
push
pop
sub
cld
add
imul
inc
adc
rcll
xor
push
lcall
mov
and
lds
movsl
in
pusha
dec
pop
push
mov
adc
jbe
mov
xchg
addb
jb
jns
dec
lret
ljmp
sbb
mov
cmpsl
add
ret
ret
add
cmc
mov
xor
pop
mov
push
gs
pop
xchg
add
add
out
mov
jo
cmp
xor
inc
push
out
xchg
rorl
das
or
and
sub
push
movsl
cmp
add
add
ficoms
mov
mov
jmp
mov
shlb
or
push
iret
mov
pop
in
push
sbb
ret
aad
add
add
mov
inc
dec
subb
test
loope
push
sub
fwait
in
xchg
cs
inc
or
sub
jecxz
mov
test
lea
push
xor
pusha
pop
cmp
lods
xor
roll
mov
sub
jne
sub
ja
sbb
or
pusha
popf
stc
insl
lret
ljmp
mov
hlt
add
int
pushf
dec
sbbl
or
xor
push
jmp
clc
sbb
rcr
cmp
xchg
sbb
adc
adc
jecxz
cmpl
test
sub
shlb
cmpl
xchg
mov
cmc
pop
push
and
fisubrs
enter
sub
push
mov
out
push
das
mov
ror
mov
inc
mov
or
mov
or
jbe
shlb
mov
xchg
mov
aad
pcmpgtd
mov
dec
add
les
mov
shl
lds
add
pop
popa
pusha
std
arpl
int3
push
aaa
icebp
push
ret
and
pop
loope
movntps
adc
and
push
add
out
pop
or
inc
mov
add
xor
jae
dec
push
ficoms
cmpb
xchg
add
dec
jbe
push
xor
hlt
add
lods
leave
dec
push
xchg
pop
xor
ret
fwait
adc
mov
das
cmp
xlat
xchg
popa
mov
dec
mov
mov
cld
and
cmp
mov
push
add
and
cmpb
mov
and
or
mov
out
add
lret
xor
add
xchg
icebp
mov
inc
test
enter
dec
pusha
and
and
mov
mov
pop
add
dec
dec
push
out
popa
push
mov
inc
mov
push
push
push
std
shlb
mov
and
inc
sub
js
xchg
sbbl
mov
add
je
jmp
fucomip
xlat
fstl
cmp
jp
pop
jmp
in
cmp
mov
pop
shlb
pop
or
shll
jnp
jle
outsl
add
cwtl
lea
adc
leave
mov
test
add
imulb
cmp
mov
jg
cmc
data16
jl
mov
or
mov
xchg
cmp
in
or
aam
je
fisubl
mov
dec
sahf
pop
aam
movl
movsb
adc
int3
mov
jmp
test
or
mov
mov
add
arpl
mov
inc
add
orb
arpl
dec
mov
ds
cltd
mov
inc
daa
enter
mov
adc
mov
add
sbb
pop
and
add
ss
and
leave
or
dec
inc
cs
sub
push
call
jmp
mov
dec
jno
pop
and
sub
xchg
into
cwtl
rorb
lcall
sti
pop
popf
scas
repnz
sarb
xor
movsl
lahf
jle
xchg
pop
jb
sub
dec
cld
shrb
cli
rorl
roll
xor
int
and
add
int3
adcb
pop
pop
popa
cld
test
inc
and
ret
add
adc
in
pop
mov
inc
jge
sbb
add
popa
mov
fidivrs
pop
clc
movl
cld
mov
ret
inc
ja
push
dec
int3
shl
adc
jmp
push
int3
fwait
and
mov
lret
mov
mov
mov
xor
sbb
roll
jmp
lcall
add
in
out
jmp
ss
fs
pop
sbb
sub
and
sbb
adc
push
daa
sbb
mov
push
pusha
jo
iret
add
cld
fmull
in
jge
mov
lods
pushf
cmp
mov
cmp
sbb
test
and
repz
dec
xchg
sbb
and
sbb
in
cmp
mov
mov
mov
cwtl
popf
mov
or
add
negb
arpl
add
mov
ret
or
sbb
add
nop
mov
andl
clc
or
xchg
lods
lret
cwtl
pop
sub
adc
andb
popf
sub
adc
xchg
addr16
insl
dec
lahf
je
faddl
cmpsl
fwait
scas
shl
cmc
xchg
push
adcb
les
out
mov
rorl
push
incb
adc
add
scas
lcall
mov
inc
lods
nop
push
xorb
rcl
xchg
sarb
or
je
mov
orb
lret
nop
fsubl
adc
fnsave
jne
iret
mov
leave
adc
jmp
call
jge
cmpsb
call
cmp
add
or
push
dec
push
xor
mov
or
push
movsb
cmp
sub
gs
fs
mov
sbb
sahf
mov
pop
pop
inc
add
ret
lock
xlat
xchg
mov
out
loop
push
call
int3
shlb
sar
xor
repnz
lock
dec
inc
test
adc
inc
xor
icebp
lock
add
adc
jge
bound
mov
sbb
mov
sbb
add
sub
cld
cmp
fcmovnbe
push
out
sti
or
pop
std
sub
lods
ficompl
adc
sbbb
test
fldl
aam
mov
movsl
inc
pop
xorl
and
add
adc
dec
adc
leave
stos
push
loopne
dec
cmp
aam
psrlq
push
enter
movl
jecxz
dec
push
insb
mov
loope
push
shrb
add
jmp
out
or
jae
mov
jb
pop
jo
ret
roll
push
dec
mov
nop
sbb
cmp
lods
dec
stos
gs
or
push
jbe
xchg
pop
xchg
sbb
push
cmpsl
adc
cltd
mov
test
icebp
out
lcall
loopne
pop
popa
dec
scas
push
or
jns
dec
loopne
sbb
push
leave
mov
roll
imul
xor
jnp
jmp
sub
jg
sub
gs
pop
jmp
jmp
sahf
aas
test
stos
mov
fdivrl
pop
nop
xor
mov
dec
test
popf
and
mov
cmp
mov
loop
subb
in
mov
fdivrs
xor
push
shll
mov
repnz
adc
aas
inc
mov
out
repz
push
cmp
int
inc
and
lods
fldcw
cmpsl
or
or
add
cli
xchg
hlt
sbb
pushf
xor
push
in
add
nop
jle
faddl
sub
in
stos
dec
lods
repz
add
xor
divl
xor
in
mov
adc
push
push
rolb
and
jae
jo
inc
add
arpl
js
ret
ret
and
popa
push
or
jne
es
out
add
push
xchg
dec
mov
icebp
aad
push
mov
sbb
xchg
add
mov
into
in
ss
loopne
jb
mov
loop
rolb
loope
fdivl
xor
sub
sarb
inc
adc
xchg
leave
in
cld
cmp
xor
stc
jo
out
jg
adc
jno
add
xor
adc
or
sti
push
add
popf
mov
loop
out
fbld
and
add
and
in
or
shl
sar
inc
mov
inc
dec
adc
push
push
mov
push
pop
popf
and
stos
mov
call
or
inc
mov
jmp
add
or
inc
or
outsb
sbb
mov
jg
dec
scas
ret
cld
hlt
movsb
ja
aad
test
pop
or
xchg
cmp
scas
aas
add
daa
imul
imul
add
daa
and
out
adc
test
sahf
adc
sbb
jmp
test
mov
jbe
adc
and
sub
movsl
inc
and
mov
notl
xorb
negb
aas
xchg
jmp
stos
movsl
and
roll
aaa
or
pop
xchg
outsb
xchg
aad
or
cmp
mov
dec
push
test
mov
mov
jl
insb
loope
popf
stc
xor
jo
clc
and
adc
push
mov
add
mov
popf
xor
sub
sbb
mov
ljmp
inc
negl
dec
stc
lahf
jp
sbb
in
mov
adc
leave
fisubl
imul
or
daa
push
dec
arpl
add
repz
aaa
pusha
inc
test
push
subb
test
pop
pop
mov
andb
in
dec
mov
aad
pop
sub
pop
inc
ja
les
pushf
and
inc
scas
popa
loop
loope
jnp
add
shrb
das
insb
std
pusha
gs
xor
xchg
popa
mov
cwtl
mov
lea
jmp
data16
popf
shr
jne
mov
negl
out
data16
int3
ret
call
cmp
jno
in
push
push
pop
mov
mov
jns
in
lock
repz
jo
ja
fisttps
jno
ds
roll
jp
imul
out
push
mov
imul
gs
push
loop
cmp
xchg
adc
mov
idivb
andb
xchg
xlat
cmp
push
in
mov
add
push
lods
mov
add
xchg
jecxz
and
sbb
daa
les
imul
add
sahf
dec
out
jns
mov
in
add
jmp
mov
mov
xor
outsl
lds
jae
cld
and
bsr
add
in
add
dec
pop
aam
stos
ficoms
scas
jne
lock
aaa
pop
adc
out
mov
xor
rcl
pusha
add
into
bound
mov
mov
div
loopne
les
loope
xor
mov
in
clc
ss
daa
adc
into
mov
push
fdivs
lret
outsb
aaa
sbb
inc
add
lret
sub
cltd
in
aas
int3
push
ja
sbb
and
lock
clc
jo
jno
sub
test
adc
mov
or
mov
mov
pop
outsb
push
add
orl
loop
push
add
in
aas
stc
pop
call
lock
jmp
jnp
clc
stos
ret
add
push
rcll
jl
or
filds
lret
aad
push
push
movsl
cltd
js
arpl
and
sbb
and
mov
fadds
pcmpeqb
mov
pop
in
pop
push
push
sub
xor
daa
fisubrl
adc
bound
push
xchg
adc
add
mov
cs
bound
repz
mov
in
add
xor
jp
add
xchg
hlt
scas
ficoml
push
adc
movsb
jmp
jecxz
ficoms
and
push
jmp
das
cmp
call
fdivl
fwait
push
mov
cmpsb
push
lock
push
cmpl
sub
icebp
mov
pop
shlb
hlt
add
push
nop
jg
sub
les
andb
je
xor
sbb
sbb
sbb
push
sub
in
add
inc
xor
lcall
cmc
push
push
stc
push
add
test
jb
pop
gs
mov
outsb
xchg
fsubl
pop
pop
fcomps
pop
adc
das
jno
daa
adc
sub
add
mov
xchg
gs
cld
ja
xchg
push
dec
jo
or
pusha
repz
add
mov
rcrl
inc
pop
xchg
imul
lds
sub
mov
add
pop
xchg
fcoml
dec
lcall
daa
andb
cmc
xor
inc
cmpsb
and
mov
js
or
fidivl
add
out
xchg
mov
clc
xor
int3
nop
daa
lock
in
pushf
loopne
ja
cmpsb
add
popa
das
inc
lea
fidivrs
jecxz
popf
mov
mov
rorl
lods
mov
jle
mov
sbb
and
mov
fimuls
cmp
mov
xchg
rcrl
xchg
xor
stc
mov
mov
cmc
loope
xor
push
cmp
mov
inc
xchg
add
xorb
aas
lods
add
cmpsb
mov
mov
outsb
push
xchg
fs
pop
cmp
or
mov
movzwl
cmp
jae
pop
scas
clc
nop
push
data16
add
pop
outsb
cmpsb
and
xorl
push
shll
movsl
shll
adc
add
std
adc
nop
or
pop
rorb
cmp
mov
adc
pop
aad
mov
xchg
in
dec
lret
push
or
push
pop
or
push
and
dec
add
xchg
mov
push
push
pop
jmp
push
loope
das
outsb
mov
stc
xor
sub
adc
sub
aaa
mov
jnp
movsl
int
inc
ljmp
jge
es
mov
cltd
adc
adc
inc
add
mov
fdivrl
popa
pop
mov
pop
dec
pop
rolb
adc
pop
pop
cmp
sub
test
jmp
ja
shl
sar
in
cmc
jnp
dec
xchg
imul
jns
js
icebp
les
orl
sub
xor
imull
pop
mov
ja
cmc
sub
scas
fcoml
cmp
call
jmp
stos
bound
pusha
mov
dec
call
fmull
sbb
movsl
xor
in
fnstsw
ljmp
add
data16
lcall
fstp
sbb
adc
sbb
add
je
int
aaa
rcrl
mov
mov
jecxz
add
in
add
imul
in
cmp
jecxz
repz
cltd
adc
jmp
adc
mov
fcoml
std
add
lds
dec
orb
ja
or
fstpt
lods
mov
add
dec
rol
add
adc
mov
out
mov
aam
jp
xor
les
add
bound
loopne
dec
xchg
add
popa
mov
pop
hlt
inc
js
mov
cmc
xor
push
fwait
cltd
add
test
scas
fnstcw
dec
icebp
or
add
xchg
sahf
xchg
add
dec
dec
pop
jmp
lods
test
daa
out
dec
fistl
leave
int3
mov
and
aas
jmp
cmp
into
mov
adc
mov
mov
add
hlt
pusha
out
add
dec
cmp
jno
or
mov
push
repnz
sahf
sbb
in
push
sahf
fwait
out
cmp
fwait
dec
jp
jne
xchg
pushf
lcall
mov
mov
mov
adcb
sub
push
adc
sbb
cmp
mov
xor
push
mov
sub
jnp
std
pusha
ljmp
popf
add
jecxz
push
lods
ljmp
mov
xchg
add
sbb
cmc
shll
jbe
xlat
aas
andb
out
jo
rcrl
in
inc
inc
push
pop
aam
lret
adc
lds
jno
popf
sub
out
push
inc
aaa
add
in
out
js
out
xor
mov
sub
subl
mov
dec
jae
mov
or
fisttpll
lea
mov
add
inc
add
sbb
and
pusha
sti
iret
inc
incb
xchg
sbb
push
mov
rorl
gs
imul
sub
jl
popf
xchg
mov
sti
je
sub
mov
mov
ss
mov
sbb
dec
lods
rclb
cmpsl
gs
call
psrlq
sub
test
mov
xchg
bound
loope
sbb
push
push
rcl
js
iret
add
dec
icebp
sbb
loope
lret
lods
or
pop
or
loopne
xor
icebp
imul
dec
mov
mov
nop
mov
ret
stc
mov
xor
xor
out
loopne
sarl
inc
ret
mov
test
mov
nop
push
inc
push
sub
popf
imul
popf
xor
mov
ror
mull
push
jno
sarb
sbb
and
mov
shlb
xor
bound
scas
mov
cmc
dec
mov
fwait
xchg
xchg
mov
jns
xor
inc
cmpb
inc
adc
fs
out
cmp
add
fs
dec
xchg
jmp
pop
lcall
sbb
in
dec
or
pop
cmc
in
fwait
fcoms
add
inc
ret
mov
cmp
adc
stos
sub
adcl
mov
add
pop
std
dec
xchg
mov
cs
mov
hlt
shlb
add
rorl
mov
popf
adc
push
dec
repnz
loope
or
and
and
dec
cmc
out
adc
push
mov
ja
mov
cli
or
dec
jge
xor
inc
cs
popf
adc
imul
add
cmp
jp
jg
pop
push
loop
gs
shlb
xchg
sbb
pop
data16
mov
pop
pusha
jnp
jo
das
add
dec
mov
mov
clc
push
jae
add
outsb
cmp
add
sarb
pop
popf
or
addr16
and
jbe
std
das
dec
fcmovnb
test
inc
lods
add
loope
or
das
and
cs
daa
dec
sbb
sarb
jbe
jmp
in
add
repnz
or
je
push
aad
xlat
mov
gs
inc
cmpsb
imul
inc
lahf
pop
sbb
daa
in
insb
pop
andb
out
or
shrb
dec
xchg
lea
call
loopne
nop
pop
jmp
dec
lods
inc
mov
pop
mulb
add
fsubrs
mov
push
cmpsb
cli
imul
push
out
mov
inc
mov
pop
cld
lea
arpl
sub
les
lods
and
add
lea
sub
call
push
test
add
es
pop
pop
lds
push
cmp
push
mov
add
mov
cld
popf
fdivp
add
sbbb
jecxz
adcb
fdivrs
pop
stc
cmp
outsb
movsb
mov
in
test
cmp
lods
stos
aaa
cmp
mov
inc
and
jp
add
test
fmull
stos
cmp
stos
push
mov
jne
mov
push
mov
lcall
dec
and
xchg
or
lahf
inc
mov
or
add
or
dec
add
jl
loope
out
cli
add
test
pop
dec
sbb
cmp
or
sbb
repnz
adc
mov
or
mov
pop
dec
cmpsl
and
ds
xchg
testb
xor
shrb
xchg
mov
jb
add
inc
xchg
jo
loope
fdivrl
xor
mov
mov
fbld
jo
fnstcw
lahf
xchg
popf
stos
ss
mov
cs
data16
dec
rolb
pop
mov
and
adc
inc
push
mov
mov
jne
loop
loope
and
js
inc
xchg
dec
nop
imulb
addr16
add
jnp
jle
mov
xchg
xlat
mov
sbb
xchg
adc
sbb
incl
enter
clc
mov
push
leave
lcall
pusha
and
out
fidivrs
hlt
out
sub
fmulp
xchg
jmp
loop
mov
std
dec
pop
into
addr16
add
fcoms
xchg
leave
movsb
repnz
xchg
dec
ror
dec
and
add
daa
xor
dec
loope
cmp
or
shll
jle
fnsave
lcall
or
xchg
insb
outsb
dec
fmulp
adc
adc
or
mov
shlb
mov
loope
mov
adc
and
mov
jmp
outsl
cmp
shl
movsl
in
mov
lret
adcb
arpl
jg
testl
in
loop
jmp
inc
in
ret
rol
dec
imul
pop
cmc
loopne
das
xorb
pop
and
ja
popf
sbb
mov
inc
xor
cmp
pop
das
push
jle
movsb
sub
adc
add
push
sahf
idivb
in
dec
out
loopne
xor
in
adc
std
jl
mov
out
stos
push
js
movl
pop
cmp
cld
mov
sub
movl
inc
and
add
sbb
aaa
sbb
arpl
out
and
xchg
call
mov
cmp
mov
push
pop
xor
ljmp
cmp
xchg
rolb
push
repz
adc
ss
fwait
dec
or
add
sbb
lea
push
add
aas
push
pop
leave
dec
fnstcw
or
jle
bound
fldt
mov
xchg
outsb
fxch
das
mov
jp
and
mov
pop
in
or
mov
dec
je
adc
test
stc
pop
mov
movsl
pop
pusha
jmp
mov
xorl
sub
xchg
das
je
test
es
mov
push
jmp
jnp
out
popf
in
cmp
shlb
fmull
dec
or
adc
mov
xorl
les
xor
nop
adc
add
adc
mov
aam
fiaddl
or
jl
test
mov
xchg
dec
adc
sub
test
out
push
add
outsl
mov
or
cmp
xor
dec
add
pop
mov
nop
das
inc
addl
test
pop
push
add
bound
addl
das
add
jno
and
jge
clc
lods
in
pop
push
and
fucomi
jo
push
dec
push
mov
das
mov
insl
add
in
inc
adc
adc
xor
push
pusha
push
int
sbbl
mov
add
add
aam
sbb
fwait
fs
ss
cmc
es
or
nop
sahf
imul
xchg
or
cmp
loopne
add
sete
add
pop
mov
push
sbb
inc
lcall
fstpt
imulb
or
addb
imul
lret
movsb
mov
push
xchg
fs
jecxz
scas
jle
mov
mov
outsb
scas
das
push
and
adc
cmp
sub
pop
sub
loopne
jecxz
push
cli
add
add
inc
cmp
pop
out
dec
or
jp
mov
mov
xorb
add
mov
cwtl
cmp
xchg
sub
pop
call
shrl
xlat
in
mov
lret
loope
std
aaa
mov
int
test
enter
jb
stc
jg
or
out
add
xchg
sti
push
add
icebp
and
lahf
orb
jno
fimull
mov
mov
ret
sbb
data16
pop
mov
xchg
into
filds
xchg
leave
cwtl
jle
popf
inc
or
xchg
add
pop
dec
jmp
inc
pop
sti
sahf
cmc
adcb
sub
daa
imul
rorl
mov
cmp
mov
and
dec
nop
dec
rcrb
lods
add
and
mov
in
mov
mov
push
jle
cmp
mov
cwtl
dec
sbb
pusha
mov
leave
fiadds
pop
push
cli
jo
and
add
js
test
cmp
xorl
test
mov
jae
adc
rorb
in
push
aaa
mov
jno
in
imul
dec
push
fdivs
ret
mov
add
je
rolb
adcl
in
ja
jge
addr16
ror
in
loop
add
push
sub
repz
and
popf
test
mov
inc
cld
sub
jbe
rcrl
daa
jmp
pop
loopne
mov
movsb
ret
push
push
pop
adc
loop
lret
jp
out
xor
add
das
shlb
lret
cmc
cmp
pop
fnstcw
in
loop
jns
mov
cmc
or
bound
orl
mov
jl
bound
and
pop
movsl
adc
xchg
xchg
shrb
jbe
ret
or
sti
xor
add
push
fcomps
sahf
mov
push
daa
stc
and
mov
inc
outsb
notl
pop
mov
xchg
rorb
jae
imul
adc
xorb
shr
in
mov
popf
pusha
sbb
xlat
leave
sub
notb
jo
add
rol
clc
xor
shrb
or
daa
dec
add
mov
jmp
xchg
clc
mov
mov
sbb
add
adc
in
push
cmp
add
mov
je
imul
xchg
xchg
sbb
repz
jnp
add
mov
xor
cmp
popf
ss
lea
pusha
push
dec
test
loope
shrl
sbb
mov
jecxz
fmul
jl
lret
stc
add
jns
jecxz
mov
movsb
flds
jo
inc
das
je
push
mov
test
popa
or
mov
push
cmp
loop
sub
addr16
cmp
or
sub
loope
sbb
ret
pop
adc
xor
jns
sbbl
andb
arpl
aad
aaa
or
or
popa
shrl
mov
call
xchg
mov
testl
dec
addb
nop
push
and
push
mov
test
lds
sbb
jnp
sub
inc
cltd
mov
jle
add
mov
inc
mov
enter
pop
xchg
xor
popa
mov
sub
and
stc
orb
jae
sub
fnstsw
pop
popf
xor
xchg
and
sub
stos
cmp
add
mov
mov
push
sbb
add
pop
adc
and
inc
test
movsl
pop
cwtl
adc
adc
mov
bound
lea
dec
pop
stos
add
sub
je
xor
or
and
popa
mov
repnz
add
fwait
mov
decb
ret
dec
xchg
sub
dec
pop
lea
cmp
pop
pusha
xor
cmp
mov
negb
inc
mov
sarl
and
shlb
mov
loope
adc
rclb
mov
out
insb
xor
imul
rcll
scas
lcall
push
and
xor
sub
daa
adc
pop
lock
push
push
push
out
add
je
mov
pop
lahf
adc
les
and
and
add
xor
sbb
adc
insl
insl
xchg
xchg
push
cmp
loopne
mov
pop
mov
es
xor
filds
cmp
into
scas
iret
sub
loopne
add
movsb
add
xor
or
jg
test
popa
dec
fcmovb
or
add
push
sub
sbb
inc
mov
add
and
lret
add
push
cmc
xor
mov
mov
inc
or
and
out
mov
jns
add
add
jg
mov
mov
loope
sub
imul
outsl
faddl
jbe
adc
std
cmp
add
sub
pop
pop
add
fistpl
xor
add
ret
add
pusha
push
fcomps
pushl
enter
jle
xchg
pop
sub
or
aaa
mov
xchg
cwtl
push
mov
popf
sbb
mov
sbb
xchg
into
pop
xchg
mov
add
cwtl
mov
enter
stc
mov
push
popf
pushf
xor
push
int3
fldcw
jmp
mov
in
xchg
add
xchg
mov
orb
mov
mov
sub
mov
mov
add
mov
mov
fnclex
in
push
orb
pop
jmp
push
scas
test
fiaddl
call
pop
xlat
ficompl
jmp
push
pop
cmp
test
cmp
and
aaa
and
add
loope
cmp
dec
stos
and
fwait
dec
and
imul
xlat
pop
shrl
pop
cmpsb
loopne
dec
adc
xlat
mov
xor
and
xor
mov
push
add
add
jg
jb
mov
into
addr16
pop
movsl
sbbb
adc
ds
mov
fistpll
fildl
fdiv
dec
out
adc
sbbl
loope
pop
pop
cmp
insl
push
and
imul
jae
jmp
arpl
int3
out
add
push
or
wrmsr
or
push
dec
pop
or
ss
loopne
fcomip
dec
xor
adc
lret
xchg
add
sub
dec
and
popf
lods
push
movsb
xchg
pusha
jl
shrb
lods
dec
rorb
loopne
ret
nop
add
std
test
or
mov
loopne
pop
jge
xchg
or
hlt
aas
leave
cmpsl
cmpsl
cmc
jae
fdivrs
push
jno
push
je
imul
mov
mov
sub
je
popf
adc
inc
inc
xor
add
jae
shlb
push
add
and
int
and
push
inc
or
cwtl
adc
fisubs
aam
test
aaa
ljmp
orl
mov
mov
adc
adc
insb
popl
mov
add
adc
outsl
xchg
add
cmc
ljmp
dec
mov
pop
sub
subl
push
cld
lcall
subl
ljmp
shl
add
xor
mov
scas
jae
fsts
or
rorl
loope
cs
ret
push
dec
push
and
cld
mov
push
mov
mov
lea
cmp
jp
mov
xchg
aad
add
mov
mov
fcomps
outsl
or
sub
fcom
aad
lea
repz
jbe
das
and
jmp
xchg
das
sub
lahf
cmp
int
cmp
ss
mov
jae
fcomps
vmload
cmpl
mov
push
push
pop
int
outsb
xor
mov
add
inc
adc
lret
dec
sub
adc
dec
mov
sub
lods
xchg
dec
rcl
sub
fnstsw
dec
adc
or
rorb
pop
adc
sub
mov
popa
cs
dec
dec
lods
mov
out
sti
insl
lds
mov
test
repz
add
loope
adc
xchg
add
push
aas
aaa
xor
adc
pop
repz
push
pop
rcll
pop
insb
adc
in
fwait
lret
xor
mov
pusha
xor
add
adc
testl
xchg
jl
inc
sbb
add
xor
in
mov
mov
in
jns
mov
frstor
movswl
add
iret
gs
push
xchg
inc
sub
addr16
sub
das
std
aad
pop
sahf
mov
jp
fisubrl
arpl
lods
add
pop
mov
adc
sub
in
xchg
movsb
dec
mull
popf
xor
cmc
and
fsubs
cmc
in
mov
mov
call
jno
jae
sub
adc
mov
ret
enter
leave
sbb
xor
in
fisubs
pusha
push
popf
and
push
add
dec
out
add
cld
sbb
aam
out
and
gs
or
xchg
dec
xchg
ja
aad
mov
data16
cmp
lock
lea
and
add
movsl
pushf
mov
cmp
out
mov
add
jns
dec
push
lods
fdivrs
cmc
and
andl
mov
jnp
or
gs
xlat
mov
jge
data16
sub
movsb
mov
mov
call
data16
inc
imul
mov
jmp
ss
inc
loope
jae
dec
and
mov
jbe
addb
fsubrl
movsb
and
mov
test
add
fmuls
cld
sahf
inc
jmp
pushf
add
push
ja
xor
loop
mov
fs
in
jns
mov
add
gs
and
xchg
mov
repnz
fimull
test
andb
mov
mov
jp
or
pop
fdivrl
cmp
xchg
mov
loope
out
subb
xchg
push
push
cltd
add
loope
dec
add
movsl
aad
jbe
in
bnd
push
jo
add
and
mov
and
enter
lret
or
pushf
sub
mov
aam
adc
adc
stc
push
fists
xchg
fsub
loop
dec
push
roll
adc
sub
movsb
aaa
data16
daa
inc
lret
int3
dec
jnp
add
mov
mov
push
enter
jmp
mov
adc
mov
stc
mov
push
sub
add
push
mov
dec
shll
lea
push
push
pop
jno
xor
pop
out
in
dec
push
mov
adc
stos
pusha
mov
jne
push
mov
mov
add
fwait
stc
and
inc
push
sub
inc
repnz
loop
pop
popf
sbb
cmc
inc
push
dec
insl
push
mov
pop
lahf
pop
in
clc
hlt
test
out
gs
in
mov
movsl
pop
mov
push
sahf
lcall
adc
je
lods
mov
pop
xchg
stc
mov
jnp
add
and
cmpsb
rcll
fnsave
and
popf
mov
dec
add
fidivrl
adc
xchg
sbb
shl
push
xchg
sub
mov
cltd
cmp
cltd
pushf
cmp
cmp
in
incl
jge
push
addb
add
jg
sbb
push
xchg
mov
sbb
repnz
sub
addb
testl
clc
fcomip
bound
xchg
sub
cmpsl
inc
sub
or
push
stos
into
or
inc
add
adc
divb
sti
loope
xor
adc
cmp
inc
xchg
idivl
xlat
jno
lods
jae
lods
mov
mov
add
femms
imul
mov
jns
movsl
pop
mov
ficoml
or
xchg
mov
cmp
sarb
out
out
add
xchg
and
fnstsw
lcall
ss
test
icebp
fsubl
testb
int
add
jmp
push
movsb
test
ja
test
fisttpll
push
inc
jecxz
insb
ljmp
ret
jno
dec
ret
int
loopne
xchg
imul
out
lcall
and
fldenv
das
cmp
decb
sub
inc
sahf
and
popf
adc
repnz
push
add
fdivrl
rcr
loopne
xchg
push
and
add
add
popf
sub
sub
mov
data16
inc
movsb
mov
pop
add
inc
pop
and
sbb
adc
popf
cmp
repnz
aam
popa
pop
das
sub
pop
push
pusha
add
call
lods
lcall
or
inc
mov
loopne
cmp
das
aad
cmpb
adc
xchg
mov
add
popa
popf
sbb
push
mov
push
and
out
sub
rolb
gs
jae
ljmp
push
ss
pop
ret
std
mov
mov
lahf
mov
xchg
adc
roll
mov
and
shl
pop
popa
adc
and
loopne
fisubs
in
dec
fs
dec
in
outsb
leave
stc
rolb
jae
fmuls
ja
call
jp
mov
or
adc
inc
adc
add
lods
and
xorb
leave
sub
push
push
adc
mov
push
into
call
mov
cli
add
push
mov
add
push
sub
inc
and
push
jmp
add
cmpsb
jge
sbbl
add
orb
jae
popf
cmp
ja
push
add
cmp
xor
aad
add
sub
stos
push
mov
rorl
push
ss
and
addl
xchg
pop
dec
add
mov
lods
leave
arpl
inc
xchg
cmp
mov
loopne
repz
add
or
cmp
mov
clc
pop
mov
add
scas
xor
aad
pop
lods
sbb
hlt
pushf
daa
icebp
loope
aam
clc
mov
lret
cmpl
jbe
das
stc
pop
ljmp
xor
jmp
movsl
cmp
and
test
movsl
cli
sub
add
popa
std
xchg
lods
sbb
imul
outsb
cwtl
mov
pushf
sbb
bound
add
loopne
cld
lcall
cmp
inc
sub
enter
mov
mov
inc
sub
push
sahf
popa
test
pop
popf
cmp
mov
fs
and
mov
out
jbe
shrl
rorl
mull
mov
testl
repz
pushf
pop
mul
pop
push
stc
push
into
fbld
push
add
add
sub
sbbb
pop
out
loopne
xlat
mov
cmp
mov
iret
repz
add
lea
mov
scas
leave
adc
xchg
xchg
inc
mov
xorl
stos
int
cs
jle
mov
xchg
fcompl
push
shrl
aas
pop
in
repz
jl
jb
mov
add
xchg
adc
cmp
incl
mov
jge
fcompl
adc
popl
add
andl
xchg
and
mov
lods
sub
or
cld
in
mov
loop
pop
movsb
mov
mov
andb
sub
aam
test
sar
fs
mov
fwait
cli
shlb
ljmp
mov
mov
addr16
dec
mov
mov
mov
pop
adcl
add
insl
mov
jg
push
adc
dec
scas
pushf
mov
mov
cmp
out
lock
std
mov
div
hlt
and
and
push
xchg
push
out
fsts
repnz
inc
fidivrl
adc
popa
jmp
daa
lahf
sbb
int3
push
cltd
add
adc
push
pop
dec
jge
fucomi
xorb
mov
xchg
pop
xchg
jmp
arpl
mov
insb
adcb
mov
cmp
cmp
push
cmpsl
xor
mov
hlt
out
loop
mov
fcoms
loopne
or
stc
mov
mov
int
dec
mov
aam
inc
cltd
or
push
ljmp
aad
imul
ds
jecxz
loopne
xchg
mov
fildl
daa
add
je
mov
pop
jecxz
and
jo
mov
in
xor
add
sahf
or
inc
jp
dec
inc
cld
das
enter
int3
mov
enter
pop
das
adc
lds
mov
mov
subb
push
xor
je
push
popf
push
and
add
fnsave
adc
cmp
insl
push
sbb
dec
add
mov
pop
pop
cmp
daa
jne
cmp
adc
xor
mov
popa
jmp
add
and
loop
jbe
xchg
pop
dec
scas
cmp
ljmp
clc
and
adc
stos
and
push
push
jae
adc
out
xor
mov
sub
iret
inc
or
and
cmp
mov
mov
sub
clc
add
mov
popa
cmp
cmp
and
in
inc
sarl
add
mov
inc
mov
movsl
inc
pop
cmp
push
negb
add
xor
lahf
jno
add
in
in
int
add
lea
mov
enter
imul
dec
shlb
push
das
mov
sbb
sub
dec
sbb
push
lret
dec
add
les
aam
std
push
add
add
lcall
xchg
cmc
cmpsb
xor
add
mov
mov
aaa
pushl
sbb
or
fists
add
outsl
sub
sub
mov
gs
or
lea
push
cs
add
mov
arpl
imul
sbb
nop
jmp
mov
popa
out
jmp
in
mov
xchg
fsub
pusha
mov
dec
popa
mov
xor
popa
loop
dec
imull
mov
and
push
aad
xchg
in
out
mov
lahf
or
leave
mov
insl
or
das
fadds
lahf
xchg
sarb
mov
xor
test
shll
mov
add
mov
cs
stc
add
scas
pusha
sarl
adcb
std
mov
clc
adc
das
and
je
and
jecxz
dec
jp
add
xor
insb
cmpl
ljmp
call
les
cli
mov
xor
mov
iret
ljmp
in
inc
mov
loop
add
movsl
dec
adc
repnz
hlt
notb
cmp
fmuls
shrl
cli
add
jne
and
in
shrb
inc
in
add
adc
pop
jns
mov
mov
or
sub
push
push
addr16
xor
dec
imul
jg
mov
cmp
cmp
adc
scas
sub
push
mov
sub
push
negl
in
mov
outsb
dec
pop
lcall
inc
pop
inc
mov
les
dec
add
xorb
cmp
sub
cltd
sahf
ljmp
fs
das
mov
push
cmp
push
pop
jne
out
cmc
cmp
ljmp
mov
repnz
push
mov
lret
dec
push
lea
pushf
jns
lcall
xor
inc
mov
sub
icebp
stos
add
out
movsl
outsl
and
xor
mov
mov
xchg
jno
pop
pusha
mov
push
push
push
pop
dec
popa
push
mov
fxch
test
lahf
jno
push
xchg
fnsetpm(287
movsb
jmp
adc
push
popf
jge
cld
aaa
hlt
mov
sbb
aam
jg
push
xchg
aad
add
pop
popa
adc
sbb
jmp
daa
aad
mov
push
shrb
addr16
fisubrs
mov
xor
cmp
push
pop
inc
add
or
ss
dec
xlat
sbb
cmc
dec
ret
imul
out
test
subb
inc
pop
sbb
and
fs
pusha
addr16
pop
sbb
cmp
cmp
loope
sbb
mov
fmuls
xchg
lds
and
into
stos
sub
adc
aam
aad
adc
test
adc
cmp
lret
test
mov
lods
mov
aas
decb
jg
cmpb
add
xor
pop
xchg
adc
sub
rorl
mov
adc
push
xlat
mov
stc
popf
cmovbe
jmp
jne
popf
or
push
jg
dec
pop
pop
add
jecxz
jnp
mov
das
mov
negl
jmp
add
sti
out
aas
rolb
sbbb
sub
mov
rorl
adc
sbb
sahf
and
and
addr16
fcom
scas
push
cmpsl
cwtl
push
lods
test
dec
mov
push
push
pop
xchg
hlt
les
push
fildl
out
mov
jge
or
mov
fsubrp
inc
jle
mov
imul
or
xor
mov
nop
inc
outsb
pop
add
fbld
pusha
add
pop
pop
mov
aaa
xchg
add
pop
mov
push
sub
aam
xchg
mov
jno
add
rolb
cmpsb
sub
jb
mov
in
jnp
dec
and
xchg
add
in
fistpl
negb
arpl
sahf
cmp
mov
xchg
mov
dec
or
cmp
or
or
das
fcoms
mov
lret
jmp
test
pop
push
cmp
inc
stc
mov
xchg
test
movsb
aam
ret
push
xor
loopne
dec
sub
gs
add
loope
mov
rclb
mov
arpl
mov
sbb
fs
cli
flds
xor
out
mov
imul
mov
mov
daa
test
or
adc
std
sbb
sub
mov
shl
lock
loopne
pop
cmp
add
sti
sbb
fsts
btc
shll
and
jg
add
push
push
cli
int
loop
roll
nop
mov
lret
dec
add
mov
rclb
jecxz
add
xor
imul
aaa
incb
and
cmp
ds
sub
jo
aaa
daa
ret
add
lds
fbld
and
divl
xor
xor
stos
mov
push
xor
in
imul
pop
xchg
jl
add
jae
adc
lret
xlat
pusha
clc
push
lahf
loopne
sub
daa
jbe
mov
push
jmp
mov
inc
aas
fwait
inc
sarb
jo
sbb
add
add
mov
push
es
cmp
out
aas
mov
sbb
test
sub
push
dec
pop
xchg
cmc
fisubs
sub
xchg
fs
loopne
dec
and
les
and
mov
mov
inc
jno
mov
rcr
inc
sub
mov
or
outsl
jecxz
add
pop
push
ds
jp,pn
sub
sub
jbe
pusha
sbb
test
xchg
hlt
or
or
xchg
sub
inc
das
adc
and
ljmp
pusha
inc
scas
sub
arpl
jo
ja
dec
and
pop
inc
xchg
rcrl
xor
enter
push
loop
pop
xor
pusha
push
out
pop
dec
dec
fisubrl
cmp
sbb
xlat
sbb
or
push
mov
test
dec
push
fs
jg
jno
cld
jb
inc
jmp
mov
test
in
or
cltd
imul
jne
xor
mov
ficoml
add
dec
mov
pop
push
dec
jg
adc
loop
ja
scas
or
popf
insl
adc
mov
push
dec
sbb
dec
jb
or
popa
push
pop
adc
adc
add
negb
add
fisttpl
ret
pusha
dec
fsubp
pop
sbb
mov
add
outsb
pusha
dec
mov
insl
stos
inc
aas
in
jo
daa
adc
xchg
lcall
cmp
movl
pop
dec
xchg
insb
repz
pop
mov
sub
push
mov
xchg
mov
rorb
jns
int3
lret
jne
xchg
fsubs
mov
lock
jmp
outsl
arpl
add
xor
fldl
aaa
add
jb
xchg
mov
lods
push
fs
sahf
dec
or
popf
xchg
test
push
in
outsl
xor
testb
in
roll
fistps
xchg
stc
add
inc
mov
push
xor
xchg
out
fsubl
sub
fcmovnbe
dec
lock
jo
add
sub
sbb
arpl
ret
pop
xor
call
addr16
jnp
adc
mov
sahf
add
orl
lds
adc
outsb
into
inc
xor
mov
or
add
es
sub
jmp
je
cmp
add
pop
mov
and
sub
and
rclb
jo
sub
sti
and
mov
sub
lahf
pop
push
xor
jno
daa
adc
lahf
in
out
popf
ficoms
cld
sub
mov
jg
sbb
or
sbb
xor
push
in
fstl
popa
fcoml
aas
in
sub
mov
shrl
out
pop
push
addl
mov
sub
stc
shr
fcoms
pop
pop
pop
mov
mov
ljmp
imul
mov
jg
jl
dec
mov
popf
aam
imul
mov
add
mov
mov
dec
leave
mov
add
jp
add
and
xchg
xor
fstp
dec
dec
pop
sub
rorb
sub
dec
popf
mov
push
mov
lea
xor
fstl
int3
ss
cmc
std
dec
enter
fimuls
cmp
jge
jne
jb
sbb
push
or
sti
cltd
loop
ret
mov
add
mov
mov
ljmp
pop
lahf
int3
enter
into
leave
sub
push
push
rorb
data16
pop
jne
xchg
mov
test
jle
jbe
xlat
inc
loop
pop
add
add
push
es
push
imul
test
mov
push
add
cmp
push
loop
or
mov
rclb
movsl
push
test
icebp
mov
pop
sub
and
xchg
andl
xor
cwtl
lcall
in
icebp
inc
adcb
aam
testl
rclb
xor
fcomps
call
adc
fsub
or
xor
push
push
sub
mov
dec
push
mov
in
or
sbb
add
mov
jae
shll
and
idivb
push
aas
sbbb
pop
mov
dec
add
das
inc
xor
adc
nop
hlt
daa
inc
mov
pop
and
jl
loope
roll
xor
stos
pop
pusha
and
mov
mov
movsl
rcrl
shlb
jo
dec
mov
cmp
pop
adc
fnstsw
sub
jno
call
test
jmp
fidivl
push
add
ja
add
stos
jo
adc
lds
add
rorl
mov
mov
mov
subl
jae
add
clc
fiaddl
xchg
cmpsl
mov
sub
pop
mov
fxtract
add
ljmp
lcall
xchg
outsb
lret
sarl
pop
pop
in
sti
leave
clc
jo
les
mov
adc
pop
xor
sub
jg
es
mov
or
add
clc
call
add
fwait
mov
inc
das
fcoml
sbb
iret
xor
popf
and
xchg
cld
int
inc
pop
cltd
pusha
frstor
mov
jns
push
xchg
cmp
aam
xchg
push
lret
je
and
fimuls
out
push
pop
int3
add
mov
cmp
loop
cmp
mov
mov
add
xor
xchg
push
adc
or
stos
outsl
movsb
or
cmc
adc
sarb
xchg
jb
hlt
xor
and
mov
dec
jp
add
pop
pop
dec
imul
cmpsb
shll
adc
lcall
sti
xchg
xchg
dec
inc
sub
leave
shrl
push
std
leave
add
xchg
daa
cltd
dec
pop
push
pop
cmc
jmp
fwait
mov
imul
lahf
stc
inc
mov
shll
or
dec
sbb
out
or
jnp
xor
cli
adc
pop
cwtl
inc
or
pop
pop
out
add
sarb
jo
popa
nop
sub
push
cwtl
fdivr
call
repnz
inc
rcrl
mov
lods
es
ret
push
add
xor
scas
or
ds
imul
push
aam
sahf
shrl
push
iret
jbe
cmp
dec
push
in
pusha
cltd
nop
mov
dec
push
int
sbb
lret
sub
mov
outsl
adc
negb
or
enter
pop
pop
xchg
in
lods
dec
jmp
ret
dec
add
mov
dec
jle
imul
add
push
loope
aaa
insl
jg
icebp
xchg
lods
lret
fldl
ljmp
sub
push
and
lret
add
mov
dec
int3
push
and
push
push
iret
cmp
pop
mov
sbb
dec
mov
mov
xor
test
push
adc
fwait
add
rorl
fbld
pop
xchg
outsl
pop
xchg
sahf
mov
add
mov
mov
mov
js
icebp
add
mov
or
mov
popf
sbb
xor
dec
cmp
fs
loopne
and
test
aas
add
cmpb
push
mov
in
out
lahf
push
dec
dec
sbb
lahf
add
cmp
or
or
mov
xchg
mov
fcmovnbe
cmc
fs
or
mov
in
add
ss
cmp
fcom
push
jmp
clc
sub
in
mov
sarl
stos
or
jbe
adc
adc
jno
sbb
mov
and
adc
leave
dec
or
js
dec
jno
movsb
mov
inc
sbb
push
xchg
inc
push
xchg
jp
add
adc
mov
xchg
inc
add
mov
jmp
daa
jl
imul
out
gs
std
sbb
jbe
inc
push
and
addr16
mov
mov
mov
and
lods
push
pusha
hlt
inc
fisubrs
cmp
mov
inc
adc
jmp
ss
sub
dec
lret
adc
movsb
mov
outsl
jne
incb
mov
and
lds
or
sub
add
sbb
lds
mov
mov
loop
and
repz
push
pop
cld
popf
pop
and
push
hlt
inc
iret
inc
mov
cwtl
cli
push
mov
and
add
mov
repz
stc
sbb
pop
aam
jp
into
mov
int
jnp
std
int
cs
int3
lcall
xchg
xor
cmp
cmp
test
add
fistpl
and
mov
test
push
bswap
mov
lods
pop
sub
cmpsb
push
adc
jo
ja
dec
cwtl
lret
inc
nop
and
push
sbb
sub
bound
xchg
outsl
sub
dec
add
pop
arpl
dec
es
pusha
xchg
cmp
cli
pop
frstor
mov
inc
dec
loop
int
jg
imul
rol
xchg
sbb
dec
js
cmpb
bound
pop
lret
test
cli
lcall
mov
push
pusha
xor
sbb
dec
popa
rorl
mull
mov
jb
push
out
cmpsl
inc
jle
pushf
xlat
lret
jbe
scas
xchg
out
movsb
sbb
aam
loope
cmp
loope
outsb
sub
sbb
insl
in
bound
idivb
repz
rcrl
xor
push
jg
test
jno
pop
nop
test
pop
mov
and
push
cmp
mov
mov
xor
adc
cmpsb
push
mov
mov
test
int
jmp
test
add
test
pop
pusha
in
inc
dec
pop
test
sbb
jne
jns
mov
or
jnp
add
and
inc
jge
adc
inc
das
xor
cmp
aaa
sub
lahf
faddl
push
popa
repnz
add
push
adcb
mov
sbbb
or
cltd
inc
out
out
scas
dec
cmpsb
les
iret
add
dec
cmpsl
insb
sbb
adc
aas
mov
push
jo
jbe
iret
inc
ja
mov
lcall
push
ret
push
xchg
add
lahf
test
sub
mov
cltd
imull
push
jo
xchg
lret
xchg
js
in
add
mov
fcmove
mov
shl
inc
jecxz
in
fldenv
sahf
paddusb
pushf
test
adc
pop
js
lcall
xor
outsl
bound
jge
push
inc
pop
pop
lea
imul
push
fldenv
scas
pop
mov
nop
mov
xchg
clc
push
shrb
cltd
add
mov
inc
ss
out
add
sub
fsubl
add
mov
mov
xlat
inc
xchg
mov
dec
gs
call
mov
andl
push
adc
bound
call
jl
jg
cli
pop
sti
xchg
cld
xchg
xchg
cmpsb
sub
shlb
push
aam
std
inc
inc
arpl
icebp
cmpsb
movsl
push
gs
jno
jae
icebp
mov
ret
add
adc
xor
roll
or
imul
jae
sar
fldt
push
or
cmp
jne
push
dec
orl
fs
pop
add
subb
push
and
sub
sub
rcl
mov
mov
push
adc
xor
mov
fisubl
add
cli
pop
std
out
add
jne
xchg
push
xchg
inc
push
pop
pop
sbb
add
scas
test
enter
jg
adc
adc
jnp
xchg
cmc
lods
ret
push
mov
pop
ja
fnstsw
push
pop
inc
pushf
adc
jecxz
stc
mov
pop
fnstsw
sbb
hlt
movsb
incl
sbb
adc
mov
xor
ss
rolb
xor
insb
rcl
inc
pop
or
popf
sbbl
call
fldt
cmpsb
aad
jo
iret
cmp
or
pop
popa
je
in
lods
ficoms
mov
xchg
mov
lods
mov
push
outsl
clc
xchg
aas
or
ret
mov
push
testb
ja
sbb
xchg
pop
mov
popa
sub
gs
pushf
cwtl
xchg
sub
push
pop
push
pusha
shl
dec
sub
mov
testb
inc
mov
mov
xlat
in
jo
mov
ficoml
add
sbb
in
or
jecxz
dec
xor
mov
mov
divb
mov
xor
cwtl
add
sti
ficoms
push
test
inc
dec
push
xor
push
and
mov
add
xchg
daa
or
push
out
sub
sbb
aas
and
sub
cmp
ret
pop
loopne
cli
dec
addb
xchg
lds
movsb
shll
dec
or
cmc
or
cmp
adc
aad
mov
mov
inc
push
enter
pop
pop
rclb
pop
cmp
push
cli
jnp
add
nop
cs
out
and
rep
in
xchg
push
mov
add
aas
push
dec
sbb
aaa
inc
cmp
lods
pop
xchg
lahf
add
sti
mov
test
pop
mov
mov
add
sbb
xor
mov
addr16
int
mov
mov
js
arpl
mov
lret
dec
sarl
mov
xchg
nop
or
xlat
fs
ret
fmull
mov
daa
xor
out
pop
cltd
xchg
mov
jae
cmc
jg
cmpsl
mov
mov
cmp
add
call
dec
cli
jns
sbb
cmpb
push
fstps
dec
hlt
fidivrs
pop
inc
daa
mov
xor
adc
cmpl
dec
addb
fs
jbe
mov
pop
inc
ja
dec
jno
push
movsl
inc
jno
inc
js
pop
cmp
jnp
mov
lea
jns
sbb
lods
aad
push
inc
sahf
dec
mov
fmull
adc
mov
daa
xorb
dec
push
mov
pop
push
add
fisttpl
sub
jg
pop
xor
test
int
inc
jmp
clc
dec
add
int
aad
sub
fxch
jp
notl
fistl
add
stc
adc
nop
mov
dec
add
xchg
test
jecxz
push
mov
hlt
mov
push
xchg
push
clc
out
mov
cmp
dec
out
loop
je
movsl
pop
cmp
push
add
or
sbb
or
mov
add
fsts
add
mov
and
dec
push
add
pop
jb
aaa
int
ret
jg
inc
lret
mov
mov
push
and
xchg
aam
cmp
push
fmuls
sub
das
mov
mov
and
add
xor
loop
add
jo
mov
bound
mov
or
add
and
add
popf
pop
das
sbb
bound
in
adc
adcb
mov
jbe
cmc
add
cmp
lds
inc
push
sbb
and
enter
icebp
or
mov
pusha
dec
xor
enter
in
div
mov
xchg
scas
and
xchg
dec
pop
mov
mov
xchg
test
sbb
lahf
insb
jb
cwtl
dec
lock
mov
testb
orb
dec
xchg
rcr
enter
add
jne
test
add
insl
jns
push
pop
insb
loopne
jmp
es
repz
pop
sti
lret
shlb
sub
decb
pop
in
mov
mov
jo
cwtl
data16
ret
cltd
fcmovu
insl
xchg
cwtl
mov
fdivs
sbb
out
fistpl
cmp
call
rsqrtps
mov
mov
rolb
xchg
add
shlb
lea
mov
jns
cli
fwait
sbb
cmpsb
pop
dec
mov
icebp
or
mov
mov
aas
pop
sti
outsl
dec
outsb
lds
cld
je
push
cwtl
xchg
sub
adcb
mov
or
test
and
add
xor
imul
mov
aaa
mov
or
aaa
loope
out
mov
ud2
popf
mov
cmpsb
sub
push
orb
pop
decl
fwait
mov
call
or
cmp
sub
das
cld
ds
outsb
sbb
adc
iret
fsubs
mov
sbb
mov
insb
adc
xor
movsb
sub
sub
pushf
inc
pop
stos
es
dec
andb
inc
sub
test
and
in
pusha
lods
dec
mov
jl
jbe
pusha
bnd
pop
dec
lods
fildll
js
and
shll
or
jne
fwait
inc
aad
pop
mov
jp
dec
add
dec
push
dec
pop
jmp
cwtl
mov
icebp
jg
stos
jno
sub
leave
insl
test
add
and
popf
ds
add
dec
lret
ds
fldl
shrb
pop
sub
sbb
ds
sub
imul
daa
popf
inc
jbe
jb
sub
mov
loope
pop
mov
cmpsl
xchg
sub
fldcw
sbb
xchg
mov
pushf
xchg
dec
pop
jo
daa
outsl
xor
sbb
stos
das
fdivrs
repz
mov
mov
lcall
arpl
add
mul
mov
xor
lret
dec
ljmp
shll
dec
dec
add
sub
pop
xchg
mov
sub
mov
pusha
clc
mov
jge
mov
inc
xchg
fidivrs
mov
and
push
push
adc
pop
out
sub
mov
mov
cmpsl
cmpsb
add
jae
rclb
popa
pop
xchg
sub
sub
cmp
rcrb
add
out
dec
xlat
mov
clc
sub
scas
adcb
aad
jmp
mov
cmp
test
xor
push
scas
fstps
xchg
mov
mov
ret
arpl
aas
aad
fnstsw
cmpsb
adc
popa
pop
dec
mulb
std
fcoml
push
sarb
iret
int3
dec
sbb
hlt
rcrl
sub
rcll
ja
dec
or
mov
imul
mov
add
scas
mov
pop
out
out
inc
cmp
fdivs
roll
sub
cwtl
adc
sub
pop
or
in
xor
mov
jl
aad
cmpsb
mov
xchg
and
aas
enter
cmc
pop
adc
mov
cli
pop
imul
xchg
mov
pop
mov
fildll
popa
cli
stc
sub
sub
sbb
sbb
rolb
pop
adc
loop
hlt
push
fs
pop
movsl
hlt
push
xor
pop
clc
daa
add
movsb
jb
loopne
daa
inc
and
dec
std
xchg
cmp
inc
inc
mov
mov
push
dec
movsl
not
mov
pusha
mov
dec
dec
ret
or
test
push
mov
jo
roll
sbb
mov
ss
mov
out
jp
add
lock
xor
mov
loope
shl
loopne
sub
div
or
sub
cli
sub
pop
or
rolb
shl
repnz
pop
loope
pop
add
sti
sub
imulb
pop
mov
sub
repnz
cmpsb
jne
int
add
push
daa
arpl
scas
mov
addb
and
and
in
std
lds
cmpsb
out
lock
lret
leave
out
sub
jmp
adc
mov
lds
adc
bound
fsts
pop
or
xchg
push
push
mov
sub
pusha
ss
cltd
add
ljmp
xchg
mov
rol
or
push
xchg
rcrl
out
pop
xor
pop
jl
push
popf
pop
and
dec
sbb
jne
stc
sahf
test
jne
add
fsubrl
mov
lods
xor
mov
dec
lahf
and
sbb
lds
sbbb
or
test
neg
jb
pop
imul
roll
aas
mov
loope
sahf
or
jae
jno
xchg
push
xor
xchg
fldt
shlb
aam
sbb
roll
sub
lds
div
or
push
or
sbb
test
scas
cltd
inc
test
mov
div
je
imul
jbe
fistpll
xor
fbstp
xchg
adc
inc
push
outsl
mov
andl
leave
scas
xlat
fwait
inc
aam
fcompl
xor
jg
sbb
jge
xorl
int3
clc
sub
jnp
add
jmp
add
sbb
pop
cltd
push
push
test
inc
movsl
jmp
mov
add
push
add
pop
mov
push
fs
pop
mov
mov
sarl
adc
mov
sbb
rcrl
hlt
add
pusha
mov
inc
lods
int
xchg
pop
nop
stos
adcl
jle
std
dec
push
sar
lret
subl
movnti
mov
xlat
scas
outsb
adc
sub
xor
push
fwait
add
shll
push
arpl
in
jno
add
pop
pop
adc
jnp
pusha
lods
and
mov
out
pop
pop
adc
cmpsb
lock
mov
and
xor
loope
fiaddl
or
push
das
push
out
sub
das
pop
sbb
fsts
popa
insb
xor
pop
xchg
mov
pop
mov
or
sarb
clc
pop
or
pusha
mov
in
psllq
and
push
jg
ljmp
popf
pop
and
mov
xlat
les
xchg
xchg
ds
in
repnz
xor
popf
stc
add
sub
push
leave
or
mull
pop
mov
xor
mov
push
mov
inc
mov
cmp
pushf
adc
repz
fisttpl
jle
das
sti
mov
or
xchg
aas
stc
adc
test
add
dec
add
xor
xor
cmc
daa
mov
dec
mov
or
sub
arpl
mov
push
sbb
mov
adc
pop
mov
popf
sbb
jnp
mov
push
nop
fldl
js
lcall
mov
or
add
push
mov
xchg
insb
and
clc
mov
dec
mov
out
rclb
outsl
enter
nop
cmp
mov
call
pop
hlt
jmp
test
pop
aad
sti
or
popf
sbb
mov
popf
cwtl
insl
push
pop
and
outsb
loop
loope
in
mov
sub
and
lcall
push
iret
icebp
lods
cmpsl
scas
push
adc
out
add
clc
out
cmp
sub
test
sub
lock
sub
or
xlat
or
adc
push
xbegin
push
or
sub
stc
imul
mov
xor
or
in
hlt
mov
jb
sub
and
mov
mov
movb
sbb
notb
aas
out
mov
es
pop
jmp
add
pop
shl
jnp
sbb
pop
icebp
leave
push
nop
cmpsl
bound
push
push
hlt
subb
push
pop
pop
xchg
lea
jle
shl
jne
add
pop
mov
rep
mov
jmp
xchg
neg
jae
add
pop
out
js
or
ljmp
jl
dec
push
mov
mov
incl
adc
push
aaa
movb
xor
mov
mov
xchg
fistpl
adc
sbb
mov
lret
inc
sahf
add
loopne
dec
mov
or
cmp
pop
jo
loope
mov
sbb
addl
jmp
or
sub
popa
aad
stc
rorl
and
pop
in
popa
push
jecxz
add
iret
test
cmpsb
mov
jmp
shrl
adc
adc
dec
mov
jo
sbb
mov
hlt
imul
stos
sahf
mov
popa
and
add
nop
cmp
add
fwait
add
inc
stos
xor
out
add
sub
sbb
push
mov
cmp
insb
push
imul
notl
or
int
add
xor
mov
orb
jmp
and
outsl
dec
or
dec
adcl
lret
fildl
ja
das
ret
push
xor
js
iret
xchg
add
int
loopne
fildll
xlat
add
jge
mov
roll
loopne
insl
jae
pop
in
stos
dec
jl
nop
cmc
xor
mov
sub
pop
daa
bound
mov
xsha256
cmpsb
push
mov
stc
sub
andl
pop
out
xchg
mov
xchg
fisubs
mov
jb
add
adc
mov
jo
lret
or
pop
or
dec
mov
mov
mov
fsts
mov
loope
lods
cli
fnstenv
push
test
imul
mov
pop
dec
cld
lods
or
loop
push
pop
pusha
mov
pop
pop
sub
pop
mov
ja
scas
add
mov
lods
xlat
mov
addb
int3
xchg
sahf
xlat
sub
lret
add
mov
gs
xchg
clc
xchg
adc
pop
mov
mov
mov
scas
movsb
jne
cmp
add
mov
daa
cmp
push
shrb
out
jo
add
xor
clc
and
lods
push
loopne
mov
pop
push
ret
cmc
aaa
rclb
mov
shrb
pushf
insl
fdivl
dec
jg
xor
movsl
adc
sub
cmpsb
clc
add
add
es
mov
xlat
in
icebp
shlb
push
jmp
insb
jmp
inc
rorl
cltd
sub
int3
and
ds
jle
xchg
loopne
lret
add
out
imul
cltd
and
jl
jl
mov
or
add
fucom
leave
adc
xor
clc
cmp
jecxz
in
repnz
in
aaa
pop
dec
jecxz
daa
pop
insl
pop
shrb
fcomps
je
arpl
xchg
mov
xchg
mov
repz
add
out
hlt
or
push
movb
jl
fwait
xchg
lahf
inc
jo
or
insb
and
mov
mov
orl
mov
ficoml
mov
jns
movsb
icebp
dec
sub
lahf
cmp
into
dec
and
add
dec
lcall
add
sub
cli
push
fmull
mov
jmp
js
sub
push
int
jl
sbb
pop
outsl
int3
cmp
sub
push
pusha
icebp
mov
add
sti
popa
mov
aad
out
sub
test
pop
daa
outsb
leave
add
xchg
cmp
pusha
mov
mov
mov
cmp
nop
das
repz
test
int3
pop
adc
mov
ret
popf
pop
and
mov
jl
imul
adc
icebp
xor
jo
or
pop
xchg
mov
sub
add
push
cmpsl
mov
jge
pop
bound
lcall
out
loopne
jmp
pop
or
xor
nop
pop
add
in
and
popf
dec
or
add
adc
push
out
mov
add
bound
sub
pop
sbb
ds
jns
test
into
addb
popf
cltd
int3
push
jnp
scas
das
mov
sti
or
sbb
xor
outsl
jns
xlat
das
and
pop
mov
movsl
mov
aas
fwait
push
add
gs
cltd
lret
je
sbb
jno
inc
mov
imul
jne
frstor
inc
adc
push
fcmovnbe
push
mov
adc
loopne
and
mov
or
xor
or
fiadds
pop
iret
out
push
sub
sti
je
xorb
subl
cmp
aaa
mov
jae
xchg
in
mov
pop
add
mov
icebp
push
fs
sbb
lahf
mov
dec
roll
sbb
mov
add
mov
cmpsb
pop
xchg
mov
dec
loope
push
mov
leave
dec
rcr
adc
push
pop
or
jp
adcb
sarb
push
out
into
fs
xchg
fwait
lods
shlb
mov
jl
inc
adc
sahf
loope
xchg
repz
jg
mov
imull
cmp
in
add
pop
das
pop
imul
or
lret
sbb
mov
test
fs
or
sub
sahf
test
outsb
adc
nop
andb
or
clc
mov
or
jg
cmpsb
inc
jb
in
xor
lods
imul
pusha
cmpsb
and
mov
aas
out
cmc
scas
and
loop
add
sub
js
insl
push
inc
scas
jo
mov
add
mov
inc
out
jge
cmpsl
lods
jle
cwtl
daa
inc
pusha
fsubr
inc
js
mov
jecxz
push
sub
xchg
add
cwtl
mov
add
sbb
das
dec
push
fsubr
inc
or
pop
daa
fdivl
js
push
or
pop
out
xchg
imul
cmp
call
int3
les
fs
mov
mov
lods
rorl
or
leave
xor
jne
add
sbb
and
daa
cmp
out
je
jmp
bound
pop
int
loopne
dec
mov
scas
push
scas
rolb
out
das
ja
sbb
push
call
inc
add
adc
pop
sub
aad
or
or
pop
das
call
call
int
adc
xor
pop
mov
adc
movsl
fwait
or
insb
mov
lret
jmp
mov
popf
popf
xchg
enter
mov
xchg
and
pop
nop
pusha
push
mov
lcall
fistps
cmpb
and
and
bound
scas
push
pop
repz
add
jae
arpl
push
lret
pop
shlb
arpl
pop
lret
mov
jno
add
mov
xor
ljmp
add
mov
add
add
adc
adc
repnz
out
pop
cmp
xchg
cmpb
lods
mov
jmp
cmc
in
mov
and
mov
icebp
in
test
push
lods
hlt
mov
push
faddl
add
mov
push
sub
es
xchg
mov
sbb
jb
jg
iret
xchg
dec
je
pop
push
fmull
dec
cmp
push
mov
cld
sti
shlb
jno
scas
imul
lret
stc
popl
sbb
and
xor
lea
aad
dec
fldcw
mov
pop
cmp
add
add
add
add
jno
stc
and
daa
mov
bound
add
sub
jmp
int3
add
xor
stos
icebp
cmpsb
dec
pop
cmc
sbb
mov
sahf
lcall
or
mov
add
out
scas
mov
dec
add
mov
mov
dec
leave
mov
xchg
xchg
addr16
cmp
mov
jmp
mov
faddl
and
shlb
imul
popf
icebp
adc
cmp
fstpt
shlb
bound
stc
sub
mov
lock
pop
popf
cwtl
scas
mov
gs
mov
and
scas
inc
add
adc
push
outsl
iret
add
push
sub
pop
stos
sar
dec
test
fstpt
insl
out
loop
into
andl
add
push
out
adcb
mov
dec
add
sub
inc
mov
repnz
je
mov
cmpsb
inc
loopne
loope
les
ja
xchg
das
popf
or
jl
fmull
in
pop
mul
mov
cld
push
pop
add
pop
xchg
mov
push
lret
ja
shr
xchg
in
add
pop
aad
shl
loopne
das
mov
rolb
cld
stc
sbb
movsb
jo
dec
fcomps
popf
mov
dec
inc
paddsb
mov
add
push
pusha
leave
adc
test
inc
insb
popa
pop
mov
ds
push
shlb
add
mov
lea
adc
pop
mull
ljmp
lods
mov
rorb
mov
lcall
cld
and
jmp
sub
test
in
cli
jp
daa
jecxz
lcall
push
jns
pop
adc
cmp
dec
lock
xchg
das
aad
add
insb
pusha
call
add
inc
push
stos
add
in
addb
cmp
fidivrs
rol
popa
in
push
add
sub
sub
lds
mov
jecxz
fstpl
sub
cmc
movsl
adc
sub
mov
and
jecxz
je
jbe
das
adc
test
jns
or
bound
jl
push
fcmovb
sbb
add
mov
dec
or
xchg
mov
ficomps
and
aam
and
push
jae
pop
lods
sub
dec
lods
std
xchg
mov
loop
push
inc
inc
push
jge
inc
adc
add
sub
clc
add
es
mov
ljmp
daa
or
mov
aad
sbb
std
dec
out
lods
subb
pop
mov
decb
add
mov
pushf
leave
cld
and
or
mov
inc
dec
inc
lods
insb
dec
test
outsl
sbb
es
add
jbe
daa
mov
add
shll
and
and
push
add
leave
pop
xchg
daa
int3
mov
sbb
fadds
xchg
incb
pop
jle
add
movb
xor
divl
out
mov
mov
cmp
inc
xchg
test
sub
in
lea
pop
idivb
outsl
mov
xor
xor
cli
popa
test
inc
fisttps
fwait
xchg
pop
dec
aas
mov
xchg
loop
mov
and
insl
mov
add
inc
ds
and
or
jp
add
cmc
dec
pop
mov
bound
mov
daa
lods
pop
inc
rorl
add
sbbb
xor
dec
push
jmp
icebp
aaa
adcl
xchg
pop
add
cmp
add
stos
or
jmp
mov
add
mov
jb
push
rorb
inc
push
mov
mov
xor
jo
mov
adc
mov
lahf
xor
push
lahf
je
add
popf
and
xchg
insl
adc
mov
clc
imul
dec
lcall
cmp
mov
popa
mov
mov
fimull
pop
dec
sbb
pop
xor
mov
fisubrs
enter
mov
jle
daa
dec
push
xchg
xor
cmp
jno
inc
dec
sub
ljmp
push
cs
scas
das
push
pop
sbb
xlat
nop
adc
scas
cmp
cmp
dec
add
arpl
lods
orl
pop
dec
in
test
leave
call
jae
mov
mov
stc
pop
repz
mov
add
aaa
add
les
mov
popf
dec
push
sub
aaa
enter
cli
fistpl
or
jge
in
jle
pushf
aam
cs
test
mov
sbb
dec
mov
int
push
mov
add
pop
sub
fildll
dec
and
cmp
sbb
lret
mov
jg
out
fnsave
and
lock
inc
adc
mov
jmp
add
push
jp
scas
cld
pop
test
mov
adc
mov
cmp
xchg
push
inc
adc
imulb
test
adc
pop
das
mov
cmpsb
xchg
mov
add
mov
addl
bound
jbe
push
aas
sub
pop
mov
sub
clc
dec
add
incl
push
push
jnp
jo
mov
jns
jmp
add
outsb
out
mov
cltd
sbb
dec
push
pop
push
in
jne
out
sub
das
test
les
cmpsl
adc
mov
fisttps
lret
sbbb
mov
add
jmp
mov
add
mov
lahf
ja
push
adc
in
dec
loopne
mov
add
aaa
dec
stc
sub
sub
roll
jbe
and
pop
push
mov
js
pop
insb
add
cld
pop
rolb
jmp
mov
stos
and
cmp
jo
movsl
add
add
int3
add
add
aaa
gs
push
aam
out
lock
xor
bnd
addr16
mov
xor
inc
jae
test
xchg
push
add
and
xor
negl
lcall
xor
add
inc
test
mov
add
xor
pop
inc
mov
insl
int
fiaddl
out
jge
mov
fcomp
add
xchg
lret
sbb
loop
loop
mov
inc
js
movsb
xlat
repz
cwtl
in
adc
xor
sbb
repnz
dec
push
hlt
das
mov
mov
push
stos
or
outsb
fxch
push
mov
je
sbb
add
xchg
loopne
mov
lahf
fcoml
leave
adc
mov
pop
pop
adc
icebp
sub
inc
mov
push
and
mov
jo
or
imul
dec
fcmovb
stc
push
and
fistpll
pop
inc
jcxz
cmp
pop
jae
or
xor
adc
sbb
outsb
mov
mov
mov
call
stos
fcompl
adc
inc
js
and
add
mov
or
ret
push
sti
pushf
faddl
pop
mov
pop
sub
cmpsb
rolb
mov
inc
data16
hlt
xchg
imul
arpl
pusha
adc
sbb
and
sar
or
dec
xor
rclb
inc
jmp
bound
dec
push
xchg
add
aaa
imull
jg
rclb
aam
or
jecxz
add
dec
imull
mov
inc
je
sti
pop
nop
inc
push
push
xor
imul
cmp
pop
sbb
push
jmp
xchg
or
sbb
or
adc
adc
cmp
subb
add
jmp
sbb
push
sbb
inc
cli
inc
jge
cmp
mov
les
scas
inc
ja
loopne
fiaddl
sti
ret
xchg
rolb
dec
jnp
stc
push
pop
into
add
add
nop
jne
mov
bound
xchg
fistpll
add
icebp
push
jne
inc
add
arpl
cmp
xor
fwait
enter
out
adc
cmpsb
pop
stc
sub
shlb
add
lcall
push
sub
mov
out
add
jmp
mov
pop
dec
sub
lea
icebp
sbb
inc
pop
cmp
jecxz
sahf
out
test
or
cld
fidivs
dec
pop
sub
add
mov
orb
into
stc
adc
mov
push
movsl
test
mov
jno
insb
jg
and
xchg
fsubrs
xchg
call
or
faddl
add
jae
pusha
dec
orb
cmp
sub
and
jge
mov
orl
out
lds
addr16
xor
pop
add
cwtl
and
cmp
std
push
fbstp
inc
movb
or
push
icebp
and
enter
inc
push
movsb
inc
fs
sub
pop
mov
mov
xchg
mov
sti
mov
loop
push
ret
leave
or
stos
push
sub
ds
cmp
push
test
rcrb
aad
dec
rolb
pop
movsb
mov
mov
clc
sbb
enter
cwtl
repz
lods
adc
and
add
out
xor
mov
mov
fdivp
add
push
test
std
jno
cld
mov
lds
xchg
pop
movsl
and
in
mov
lret
aad
daa
mov
cmp
add
lock
shlb
in
sbb
push
push
dec
or
pop
sbb
adc
dec
sbb
faddl
cmp
adc
xchg
push
mov
rolb
push
sti
aad
xchg
mov
cmpsl
lock
subl
insb
addl
daa
aam
cmpsb
sar
aaa
clc
inc
or
push
into
xlat
js
add
or
xchg
mov
add
and
mov
and
cmc
ret
add
loope
jbe
mov
stos
sub
sub
lods
or
push
jo
sbb
mov
xor
xchg
loopne
jp
movsl
movb
shlb
loopne
xor
add
in
and
cmpsb
shll
cmp
jl
bound
fdivs
adc
push
aaa
add
es
enter
rclb
add
pop
ret
push
test
pushf
jmp
pop
popa
jl
mov
or
sbb
cmp
mov
mov
ljmp
sahf
into
loope
outsb
test
push
das
add
sub
fldcw
add
jo
push
decb
pop
adc
leave
inc
stc
dec
in
pop
push
add
cltd
pop
loopne
mov
xchg
cmpsl
aam
push
jmp
add
scas
or
cld
pop
repz
dec
cmp
data16
add
mov
ja
push
xchg
xchg
and
iret
pushf
ret
add
mov
in
mov
lock
dec
add
addr16
mov
adc
int3
lahf
add
call
xor
pop
xorl
mov
loopne
add
pop
sub
ret
mov
xor
adc
push
sub
icebp
push
jbe
lcall
xchg
sbb
and
subb
sub
test
push
cmp
jle
adc
jne
pop
mov
xchg
mov
incb
sarl
scas
and
dec
ds
out
mov
lods
xchg
pusha
jno
mov
jl
popa
lret
aam
fdivrl
scas
frstor
mov
fisttps
aad
and
fdivs
adc
les
cmpsb
adc
dec
xor
fwait
and
hlt
add
mov
pop
adc
inc
mov
cmpsl
lods
jb
xor
jle
adc
pushf
add
sbb
ljmp
cwtl
add
cmc
dec
mov
adc
jmp
sub
cwtl
dec
xorb
add
lods
jp
mov
add
push
incb
mov
add
js
nop
out
enter
push
dec
faddp
inc
hlt
cmp
movb
xor
xchg
sub
outsb
add
or
jno
sub
xor
and
jns
xor
add
xor
hlt
jno
lcall
or
stos
add
test
mov
addl
mov
call
lds
pusha
mov
xor
push
xchg
loope
lds
mov
and
sbb
les
sub
test
mov
ret
loop
ja
mov
inc
data16
sarl
stos
cmp
movsb
adc
push
cli
or
sarb
push
mov
sgdtl
les
push
negl
mov
xor
jecxz
xor
call
ds
jno
cmpsb
cld
lods
add
push
cmp
jmp
mov
cmp
loop
mov
ret
inc
cmpsl
sbb
jp
inc
sbb
adc
sbb
inc
add
or
add
jecxz
sbb
mov
fdivs
pusha
ja
xchg
leave
out
adc
cmp
dec
xor
xor
add
addr16
sahf
nop
jecxz
popf
test
and
inc
nop
xchg
mov
sbb
cld
rclb
push
sbb
or
out
adc
push
pusha
or
cmp
es
aaa
daa
bound
dec
add
test
xor
mov
cmc
and
loopne
insl
pop
add
push
jb
or
xor
mov
out
jne
add
xchg
int3
cltd
push
dec
pusha
shrl
and
in
add
mov
test
sbb
out
lock
add
dec
sub
sarl
loopne
pop
mov
popa
jle
and
enter
insb
filds
fistl
xchg
or
push
cmp
mov
inc
jle
push
mov
xchg
enter
xor
stos
shl
xchg
insb
jle
add
js
or
sub
ret
sub
cmc
pop
xchg
add
into
fnstsw
mov
sub
enter
push
lea
lods
cli
and
cmc
pop
rcrl
add
subb
out
xchg
cmp
push
add
in
mov
sbb
cmp
bound
add
jl
ret
sbb
arpl
pop
in
push
xchg
and
or
mov
lock
or
daa
stc
xchg
clc
sub
xor
add
mov
mov
sub
test
or
sbb
push
mov
add
add
dec
adc
cmp
push
push
adc
jge
neg
adc
dec
lahf
push
daa
add
fistpll
pop
xor
add
cmpsb
roll
or
cli
leave
xlat
cwtl
adc
cmp
dec
mov
je
push
add
mov
pop
les
stos
mov
pusha
and
add
pop
ds
lds
xchg
mov
adc
and
dec
outsb
mov
out
pop
imul
in
out
xor
add
hlt
in
dec
je
nop
dec
fisttpll
xchg
popa
ljmp
call
jle
dec
pop
loop
nop
cmpsb
pop
notb
nop
and
fndisi(8087
subb
shlb
fwait
mov
nop
shll
adc
mov
pop
push
add
fisubs
push
and
and
add
in
xchg
xchg
dec
stos
fs
adc
and
add
mov
iret
xchg
jo
add
nop
lods
daa
xchg
cmp
push
mov
adc
out
loopne
enter
pop
cld
sahf
inc
xchg
mov
aas
sahf
out
subb
jl
mov
lret
adcb
dec
and
aad
addl
scas
adc
mov
and
scas
int3
out
cwtl
data16
fiaddl
jb
mov
adc
dec
out
and
jge
aaa
mov
xor
aad
outsb
mov
pop
test
dec
popf
in
lock
jmp
dec
push
std
in
add
fistpll
fidivl
lods
sub
call
stc
jmp
mov
shrb
int
and
push
and
aam
dec
add
and
mov
sbb
pusha
popa
cmc
cwtl
push
enter
adc
sub
xor
ffreep
push
jns
iret
sbb
roll
mov
fwait
iret
addr16
xor
int3
faddl
mov
adc
mov
sub
fsts
out
lcall
jl
outsb
shrl
fstpt
and
lds
divl
or
aas
out
jp
add
pusha
cmp
cld
add
push
adc
pop
push
or
fnsave
sub
mov
and
add
testl
xor
loope
mov
je
loop
mov
int
jno
mov
stos
stos
lock
cmc
pop
enter
adc
mov
adc
clc
enter
or
mov
unpcklps
and
dec
sbb
inc
dec
fs
popf
xchg
adc
mov
jo
sub
xchg
push
push
inc
jg
shr
iret
test
inc
std
push
pop
cltd
mov
xchg
xor
sub
icebp
adc
rcrl
mov
testb
call
jno
sti
cmp
imul
xlat
pop
lea
idivl
flds
mov
shlb
lar
shlb
xchg
pop
pop
xor
cmc
inc
mov
jnp
sbb
subl
xor
sub
fisttpl
int3
out
pop
js
mov
aaa
mov
popf
fcmovnbe
shrb
cli
ret
scas
mov
rolb
dec
scas
mov
push
out
lock
cwtl
mov
pop
fsub
sbb
call
imul
jg
movsb
fildll
pop
sti
mov
test
cs
sub
mov
test
pop
add
cld
cld
cmp
xor
add
stc
push
xchg
jge
pop
xchg
inc
add
adc
or
add
and
je
xchg
cli
mull
adc
dec
fcoms
xor
mov
xchg
std
add
test
shll
pop
xchg
ficompl
lcall
popf
and
cmp
call
repz
and
pop
jge
sti
sub
arpl
push
movsl
xor
stc
jecxz
mov
pop
mov
pop
insl
popf
imul
test
add
cmp
sub
dec
test
pop
mov
cmpsb
xor
into
add
popf
repz
push
xchg
xor
fisubrl
lock
stos
jmp
int3
shlb
push
and
jge
add
popf
movsl
imul
jp
pop
movsb
fsubl
daa
jmp
or
loopne
dec
mov
pop
inc
dec
loope
push
fmull
xchg
inc
jge,pn
mov
mov
outsl
pusha
adc
mov
mov
add
inc
mov
sti
xchg
adc
inc
mov
fwait
ret
in
cmp
dec
fildll
mov
adc
mov
mov
or
shlb
cltd
cs
add
in
push
xchg
mov
jno
je
sub
add
sub
ret
or
movsl
xchg
sbb
lret
jb
jno
or
cmpsl
jle
push
add
orb
jge
jp
in
movsb
sub
in
aad
popa
pop
jle
cmc
out
mov
lock
cwtl
lea
add
outsb
iret
gs
cmp
pop
stos
in
mov
int3
rorb
insl
hlt
gs
je
sub
or
movsl
push
add
cmpsb
outsl
lahf
and
iret
jl
pop
nop
sti
and
push
pop
out
or
jmp
inc
sbb
jle
loope
adc
adc
mov
neg
addr16
pop
add
cltd
pop
xlat
stc
popf
push
add
dec
ds
popa
pusha
sub
jb
rcrb
loop
sarb
fildll
fcmovne
lds
cmp
dec
mov
push
je
mov
rcll
cmp
mov
pop
scas
jo
addb
mov
mov
cmp
add
xor
or
test
xor
mov
jge
sti
and
insb
out
data16
xchg
mov
popf
jnp
pop
sbb
in
test
ss
das
mov
in
and
mov
in
pop
std
in
std
inc
sbb
adc
aas
jmp
scas
loope
cmp
adc
ficomps
loop
aad
cmp
mov
push
dec
movsl
cmc
adc
add
loop
push
adc
jno
das
jo
je
mov
sarb
jmp
and
das
jbe
fadds
mov
dec
repnz
jecxz
jge
jo
pop
sub
mov
sub
sbb
xorb
iret
ret
stc
inc
lods
pop
push
push
shll
inc
lods
cmp
xchg
fildll
cmpb
sbbb
pop
sbb
inc
sbb
mov
mov
aaa
jnp
sub
aaa
and
mov
out
dec
jns
dec
sub
sub
idivl
and
int3
mov
and
cmp
dec
or
xchg
push
sbb
movsl
js
add
ds
addr16
pop
jmp
test
loope
adc
hlt
nop
inc
jne
adc
xchg
pusha
sti
lret
movsb
or
jmp
jecxz
add
xlat
hlt
xchg
xchg
iret
fwait
mov
lea
xchg
aam
fmull
add
loopne
lods
mov
aaa
les
cmp
sub
mov
push
data16
incl
mov
in
fdivrs
movsb
xor
sbb
cmpsb
loope
xabort
pop
xor
mov
inc
adc
mov
or
in
mov
and
scas
int3
and
add
cld
and
fstpt
cmp
and
sbb
inc
jbe
dec
mov
call
xchg
cmp
mov
jg
sbb
adc
icebp
mov
xor
add
cmp
repz
jp
sbbb
sub
aam
and
aad
repnz
or
mov
pop
pushf
xchg
mov
leave
or
ss
dec
jmp
lds
js
cmpb
mov
shrd
out
stos
adc
das
jo
mov
sbb
cmp
cmc
mov
lods
fcoml
rclb
popa
pop
push
repz
push
push
pusha
jb
add
xchg
jno
push
mov
sti
stos
cmpsb
mov
inc
sbb
ret
jne
sahf
add
mov
and
jne
add
jecxz
adc
xor
mov
jo
std
push
mov
inc
test
xchg
clc
pusha
test
int3
lret
jmp
in
sar
mov
clc
cmc
pop
adc
cmp
mov
or
cmp
mov
inc
mov
rol
or
mov
repnz
cld
mov
fucomip
cmpsb
cs
cmpsb
jg
scas
lods
dec
mov
test
and
adc
dec
mov
sbb
sar
push
out
cmp
lret
mov
and
jnp
adc
fwait
int
fwait
cmp
lea
add
test
adc
imul
stos
in
test
sbb
sub
dec
aas
push
push
int
fs
outsl
pop
decb
or
cld
push
jl
xchg
mov
jg
push
mov
and
mov
adc
test
push
xchg
notb
mov
adc
jbe
pusha
add
popa
push
cs
cmpsb
adc
lods
xchg
scas
in
sbb
push
adcb
cld
add
cmpsl
inc
dec
fdivs
loop
sbb
adc
cmp
push
add
pop
sahf
lret
lcall
xlat
mov
push
mov
insb
scas
popf
and
lret
cli
pop
xchg
cmpsb
enter
stos
and
sbb
add
cli
adc
mov
shlb
push
inc
mov
jecxz,pt
xchg
adc
dec
ret
cli
adc
mov
orb
mov
clc
stos
subb
jmp
ret
mov
jl
mov
pop
int
cmp
stc
aaa
inc
in
lahf
icebp
testl
ds
or
xchg
je
ret
push
out
js
mov
adc
cmp
and
fistps
mov
add
xor
int3
sub
lahf
in
lahf
mov
add
fcmovbe
nop
xor
sahf
mov
cld
aam
rol
jbe
inc
jge
mov
push
dec
push
inc
pusha
xor
call
sbb
out
inc
jp
in
pop
add
pop
inc
ret
jne
popf
or
add
xor
add
mov
out
pushf
pushf
push
mov
pop
imul
dec
int
das
push
dec
lea
mov
push
sub
xorb
notb
mov
sub
je
or
sbb
call
mov
cmpb
xchg
sub
cmp
and
int3
test
sbb
mov
adc
loopne
cld
mov
xor
fwait
lret
loope
arpl
adc
xlat
imul
push
and
adcl
rolb
add
mov
sub
ud1
cmp
jle
mov
cmp
dec
pusha
or
pushf
dec
jp
and
add
movsb
scas
xor
push
pop
inc
pop
mov
sbb
sbb
sub
repz
std
cmp
mov
inc
mov
stos
mov
xchg
nop
or
nop
pusha
push
or
adc
inc
jle
mov
push
lock
or
add
pop
int3
push
cld
repz
insb
adc
imul
or
sub
addl
in
add
pushf
push
es
push
jb
ds
cmp
adc
pusha
or
mov
stc
xor
push
mov
jecxz
dec
sbb
sub
xlat
mov
aam
daa
push
sub
dec
cmc
test
and
jae
or
js
add
adc
mov
add
stc
mov
push
lods
pop
das
arpl
add
xchg
loopne
cmp
cmp
xchg
popf
flds
and
pushf
jmp
jl
pop
adc
pop
mov
call
mov
fwait
push
pop
incl
xchg
inc
adcb
xchg
jmp
add
lahf
xor
push
xchg
add
jnp
jae
addb
or
inc
jecxz
adc
pushl
jp
push
les
xor
sub
xchg
dec
add
imul
push
out
dec
or
xor
mov
seto
shlb
xlat
pusha
push
pop
cltd
cmc
adcb
cmpsl
inc
jl
add
loop
sub
push
adc
jno
cmpsl
sbb
jmp
inc
lods
xor
sub
add
les
test
in
popf
data16
mov
pop
stc
jbe
xor
or
add
repz
pop
push
les
push
out
jbe
sub
inc
sbb
int
loopne
inc
sarl
orb
aam
movsl
cmc
xor
or
jbe
sbb
das
sbb
mov
cmp
pop
add
cmp
repnz
inc
idivl
sbb
incb
push
push
bound
popf
mov
outsb
aam
lock
int
ss
sub
aam
cmp
faddl
stos
gs
mov
inc
inc
adc
in
push
rorb
aaa
rolb
push
mov
and
faddp
xchg
outsb
adc
adc
lock
pop
add
test
out
jne
out
mov
mov
and
sbb
lods
fisttpll
mov
movsb
add
cmpsb
inc
nop
or
dec
aam
push
xchg
pop
xchg
cltd
or
mov
add
cmp
add
rorb
add
jb
dec
outsb
sbb
add
push
or
or
js
lods
jle
or
fldt
add
xchg
cld
jns
stos
push
jb
das
jg
xor
inc
mov
outsb
jns
sbb
xchg
mov
outsb
test
sub
fmull
shl
inc
and
mov
cmp
test
stos
jnp
and
sub
stc
popf
pop
sbb
cmp
loope
fistps
jb
pop
adc
scas
mov
push
and
negb
xchg
add
decb
xchg
push
dec
int
cmp
add
stos
arpl
push
push
dec
cmp
mov
movsb
mov
mov
push
inc
pusha
cltd
push
sub
xor
mov
lods
add
push
lods
dec
sub
repz
dec
daa
lods
lods
adc
adc
clc
clc
int3
dec
sti
jnp
add
or
adc
outsb
pop
add
test
add
iret
sbb
xchg
push
imul
or
cmp
lcall
push
xchg
addr16
xchg
ja
push
push
leave
or
sub
xchg
sbb
shll
xchg
inc
flds
loop
or
repz
ja
icebp
daa
dec
adc
ja
aas
daa
rcrb
mov
imul
clc
int3
add
mov
add
xor
mov
mov
enter
je
outsb
push
lea
js
pushf
push
dec
cmc
fmuls
mov
mov
mov
outsl
enter
faddp
sub
stos
loope
cmp
push
outsl
lods
add
push
mov
popf
xchg
xchg
mov
mov
mov
popf
xchg
insb
jg
data16
test
xchg
xchg
dec
movsb
inc
loopne
adc
loop
sahf
cmp
ja
mov
pusha
ja
ss
movb
jle
cld
sahf
pop
sarb
repnz
adc
out
loop
xchg
lock
push
imul
mov
stc
hlt
das
nop
mov
pop
xlat
addb
lock
xchg
adc
daa
pop
nop
loop
dec
cmp
jns
cmp
adcb
add
mul
fcoms
push
xor
mov
add
inc
cmp
pusha
popa
mov
adc
push
pusha
dec
js
jns
daa
fldl
rcl
pop
lret
je
and
xchg
sti
mov
xlat
dec
push
fdivrs
jecxz
push
test
pop
mov
cmp
adc
mov
daa
sub
sysexit
mov
sub
call
lds
jbe
or
push
loop
sbb
aad
xor
sub
add
sbb
jae
xchg
stos
dec
pop
test
and
dec
cmc
popf
adc
aad
jno
sbb
push
stos
cltd
insl
cld
xchg
jnp
rcrb
hlt
mov
iret
loopne
fs
stc
mov
scas
jmp
sub
push
jmp
sub
fwait
cli
lret
or
sbb
decl
std
and
stos
xchg
test
add
mov
cmp
add
loope
pop
and
mov
sti
int3
dec
aad
add
movsb
repz
sbb
mov
rclb
adc
out
add
ds
lret
jo
sub
sub
es
mov
popa
test
mov
push
pmulhuw
stos
int3
push
push
mov
popa
xor
and
repz
sbb
mov
or
call
adc
movsl
push
scas
jb
fisttps
adc
jp
cmpsb
ret
jg
orb
out
stos
add
jo
sub
add
mov
or
dec
repnz
incl
jae
add
add
sub
fwait
mov
add
out
out
outsb
xchg
in
mov
push
pop
iret
loopne
cmc
inc
hlt
icebp
add
popf
out
lock
add
xchg
test
jp
inc
std
int
loopne
lcall
adc
outsb
in
adc
push
push
pop
pusha
xor
ljmp
pop
mov
mov
inc
jmp
adcl
popa
sarl
movsl
clc
loopne
xor
out
push
in
jmp
dec
sbb
push
outsl
icebp
aas
mov
dec
sbb
out
aaa
inc
add
adc
push
pop
mov
cld
cmc
movsb
adc
mov
mov
nop
in
sahf
loop
frstor
add
pop
std
dec
sub
adc
sbb
sahf
das
out
jmp
int
imul
mov
lret
daa
fsubl
dec
mov
imul
lods
jmp
and
or
mov
cmc
mov
sbbb
out
mov
adc
push
cmpsb
imul
out
test
out
dec
mov
lea
jo
daa
and
mov
jno
nop
inc
jns
push
aaa
out
ja
mov
push
mov
push
stc
or
pushf
in
mov
inc
xchg
loopne
into
mov
and
add
hlt
test
lods
cmpsb
pop
dec
cmp
cld
popf
test
outsb
in
int
stos
add
movl
mov
xor
inc
data16
dec
jo
pop
inc
mov
fisttps
int3
mov
ljmp
loope
mov
lods
cld
mov
and
das
mov
inc
lret
jo
cmc
cmp
inc
xor
push
testl
dec
dec
jg
ds
dec
sbb
outsl
add
fstpt
std
cmp
and
in
xchg
pop
push
out
leave
xor
das
jmp
xor
sbb
clc
jne
mov
andb
cmp
mov
test
je
cmp
outsb
ds
in
jne
negl
outsl
decl
data16
jge
mov
pop
or
lock
mov
cmp
lcall
fidivl
cmp
push
in
imul
aam
adc
iret
stc
mov
mov
les
xchg
into
pushf
pushf
jae
syscall
test
loopne
pop
cmc
fisubrs
imul
add
out
enter
xchg
and
lods
sbb
dec
xorb
and
out
pusha
cmp
mov
xchg
dec
pop
in
add
clc
sbb
add
scas
ljmp
stc
fcoms
dec
jmp
add
cmp
andl
dec
in
pop
pusha
push
sub
in
jb
in
iret
cltd
pusha
inc
add
jecxz
push
pusha
sarb
std
loopne
pusha
sahf
imul
movsl
mov
stc
cmp
mov
sub
es
stc
jp
xchg
mov
dec
shlb
ljmp
push
pop
dec
sti
aam
sub
sub
and
popa
cmc
in
ficoml
enter
adc
fimuls
and
add
int
sbb
sbb
mov
in
add
mov
fistl
mov
dec
xor
xchg
and
mov
push
leave
test
imul
push
cwtl
push
push
add
divl
sub
mov
adc
add
dec
cmp
lahf
hlt
popa
dec
pop
outsl
xorb
andb
roll
cmp
les
xchg
stos
cltd
or
fs
inc
pop
add
dec
stos
testl
adc
jp
add
mov
push
aas
pop
push
sahf
cmc
inc
push
icebp
xor
jmp
mov
jl
jge
daa
mov
xor
push
pop
cmp
mov
inc
mov
lods
rcl
outsl
in
loop
pop
xchg
stos
xor
popf
popa
xor
mov
pop
add
mov
iret
mov
pop
popf
xor
xchg
jne
jl
adc
std
popa
xchg
mov
mov
mov
adc
test
add
pop
pop
test
sbbb
aaa
xchg
aam
inc
je
mov
clc
jne
lahf
and
daa
xchg
fiaddl
insl
pop
in
subl
lea
xchg
pop
mov
xor
cmp
mov
setbe
es
fistps
mov
lret
pop
insl
jmp
adc
xchg
lock
jle
jmp
scas
push
add
xor
je
adc
pop
std
call
jle
mov
add
sbb
cld
nop
push
pushf
cmpsb
subl
xchg
mov
push
shr
jmp
push
or
cmp
nop
inc
jb
gs
cmp
mov
jnp
xor
xchg
push
popa
jbe
faddl
fistpll
popf
dec
ficoml
sub
cmp
cmp
in
mov
adc
ja
and
lret
lock
pavgw
mov
mov
adc
cmp
pop
mov
sbb
dec
ror
ja
stos
cmp
jg
cwtl
enter
fidivrs
mov
shll
xor
mov
push
lds
mov
cmp
jnp
mov
mov
in
and
ss
hlt
ret
iret
mov
inc
fsubr
and
pusha
cld
les
insb
lcall
add
stos
repnz
pop
popa
sub
lea
and
scas
dec
lret
hlt
cmp
loopne
and
mov
popa
adc
xchg
jae
pop
sbb
scas
add
icebp
xorb
xor
cmpb
test
jecxz
push
xor
jne
mov
jmp
shr
inc
popf
shll
pop
sbb
adc
mov
aaa
out
adc
ds
pop
pusha
sbb
jno
add
out
jns
adc
mov
jle
popa
mov
xchg
aam
add
fildl
mov
jbe
dec
jo
or
xor
push
jo
pop
xchg
push
mov
push
xchg
xchg
jmp
jno
lahf
push
test
cltd
scas
xchg
es
scas
in
mov
pop
fisubrl
shr
push
test
add
sar
push
sub
cmpsb
cs
testb
shl
icebp
mov
sub
test
ret
dec
inc
xor
xchg
add
adcb
dec
dec
outsl
test
adc
cwtl
popf
xchg
xchg
idivb
mov
or
call
xchg
adc
out
add
bound
in
hlt
push
pop
mov
adc
test
lea
test
pop
clc
xchg
leave
mov
fsubl
mov
enter
mov
push
xor
popf
faddl
mov
add
mov
fs
and
jo
mov
or
aaa
cmp
imul
or
enter
lahf
mov
daa
ja
and
aam
dec
push
enter
jp
pop
jge
or
iret
pop
or
repnz
push
movsl
lret
cmp
imull
push
pop
and
jnp
loope
dec
pop
sub
pop
leave
mov
lds
stos
sub
incl
cwtl
in
xchg
jg
dec
lods
xchg
cmc
mov
pop
sub
pusha
sub
sub
shl
call
add
in
jb
popa
and
data16
mov
sub
add
sti
pop
call
test
popf
movsl
stos
add
mov
inc
sub
int3
mov
dec
and
pop
lea
push
test
ret
xor
pusha
orl
adc
adc
adc
sbb
outsl
div
aad
inc
xor
pusha
add
cltd
sub
inc
jmp
cwtl
jo
or
add
and
jge
js
in
or
dec
test
popf
push
sbb
fisubrs
xor
jle
sub
scas
int3
je
cmovne
sarb
movsl
ljmp
les
stc
push
lds
mov
das
mov
xchg
cmp
xorb
fs
ds
pop
andb
das
test
fimuls
stc
les
sbb
cmp
pusha
sbb
inc
inc
add
xchg
mov
aam
out
aad
call
int
dec
lret
mov
push
movsb
add
lods
mov
call
aad
invd
adcb
sbb
sbb
adc
cmp
popa
out
test
insb
jp
pop
sbb
adcb
jno
cmc
cli
push
ffreep
lahf
or
or
or
fsubl
mov
fldl
insl
scas
mov
and
mov
sub
mov
es
cmp
cmp
int3
mov
adcb
in
push
movsb
sarl
add
xchg
call
aad
inc
push
push
movsl
rolb
movsb
dec
out
pusha
mov
adc
mov
xor
mov
pop
repz
call
int3
add
das
imul
push
fs
cmp
mov
hlt
or
jb
stc
sbb
lods
jp
in
imul
les
mov
dec
popa
and
out
push
push
cld
pop
mov
pop
roll
inc
jno
popf
or
add
xchg
adc
adc
scas
sub
jns
push
rcll
cmp
push
add
add
inc
mov
movsl
scas
loop
jge
repz
popa
imul
adc
adc
push
xchg
adc
jmp
cmp
fcomps
mov
mov
sbb
adc
cmp
daa
xchg
cmpsb
sbbb
fdivs
push
jmp
popa
push
mov
xorb
fsubrl
int3
incb
mov
push
or
and
xor
dec
sub
jnp
add
outsl
es
sar
cld
sub
rorb
stc
pop
or
add
xchg
or
call
push
jecxz
sbb
sub
sbb
mov
inc
or
js
inc
fldl
mov
cmp
xor
shrl
xchg
xchg
mov
or
mov
and
rclb
push
xor
xor
add
orl
xor
sub
and
mov
jne
jne
push
pusha
test
shl
inc
das
mov
out
fcomps
call
int
dec
rol
jb
call
cmp
cmpsl
repnz
sbb
push
add
push
ret
mov
in
lahf
loopne
jae
xchg
mov
sbbb
sbb
es
or
fstpl
dec
xchg
ljmp
mov
pop
push
mov
inc
xor
mov
mov
shrl
jae
cld
cmp
dec
imul
cmp
dec
mov
push
xor
ja
popf
xchg
out
add
push
nop
jmp
in
fadds
dec
popa
jmp
push
ror
mov
test
movsb
incl
or
xchg
scas
jne
jo
fcoms
loope
in
push
lock
mov
xchg
repnz
lds
cld
mov
test
push
cwtl
lods
xchg
dec
jge
outsb
add
fidivs
mov
test
es
fs
dec
in
dec
mov
movsb
shrb
pop
ret
xlat
mov
add
mov
jne
mov
dec
add
or
and
std
leave
mov
fsubs
out
dec
bound
in
mov
fidivrs
pop
dec
test
out
fiadds
idivb
xchg
and
adc
fistps
pusha
cmc
repz
shrl
js
push
lret
add
jo
fisubl
imul
repz
sub
rolb
mov
push
test
pop
outsl
lret
aam
movsl
cmc
aas
repz
dec
push
clc
jns
std
rcll
sub
ljmp
mov
mov
inc
dec
cmc
lea
sub
push
cmp
dec
rcll
sbbl
jnp
cli
add
add
xchg
ret
nop
je
add
shll
sti
jmp
or
nop
jle
dec
imul
mov
popa
xchg
call
mov
out
add
cli
mov
pop
andb
mov
pop
sbb
sub
outsb
add
lods
loop
ret
cmp
push
les
mov
sbb
lret
das
scas
jo
dec
mov
pop
xlat
iret
jecxz
int
fstpl
mov
xchg
sub
cwtl
ja
andl
xor
mov
stos
movsb
push
add
xchg
cmp
adc
mov
and
jae
add
mov
adc
mov
cld
pop
ja
push
int3
adc
add
or
sub
dec
sbbl
lret
lea
dec
dec
daa
jge
inc
jae
aas
xor
adc
mov
inc
adc
pop
add
mov
test
mov
xchg
fidivs
mov
xchg
lret
xor
mov
mov
xor
mov
mov
jl
mov
or
jl
cld
push
in
cmp
and
sarb
or
lret
sahf
adc
jge
cltd
mov
jno
out
mov
xchg
jmp
sub
add
jmp
mov
stos
outsl
fs
aad
sbb
pusha
shll
sub
or
mov
add
jl
push
xchg
js
jmp
add
dec
dec
test
mov
pop
and
jns
or
mov
addr16
mov
pop
popf
xor
int
test
dec
out
cld
rol
pop
mov
jnp
cmp
inc
hlt
lock
sbb
sub
pop
inc
ret
or
sub
lods
and
scas
scas
das
sub
pop
mov
pop
xchg
xor
in
jl
sbb
jecxz
pop
xor
jecxz
add
mov
pop
fsubrp
mull
roll
add
cmpb
or
mov
mov
je
dec
mov
mov
dec
call
stc
faddl
imul
fsubs
add
popf
inc
loopne
repz
push
inc
into
dec
cmc
adc
stos
popa
inc
test
push
mov
std
inc
cmp
sub
push
sub
mov
mov
xchg
pushf
loopne
cmp
mov
or
out
mov
mov
jno
lea
xchg
cmp
mov
fdivrs
xlat
rcrl
ljmp
sbb
pop
xchg
add
mov
pop
sti
jmp
hlt
push
fcomip
ja
mov
sbb
add
or
popl
inc
and
xor
jns
xchg
out
dec
jmp
vmread
or
pop
out
jle
aaa
icebp
vmrun
ret
mov
mov
sub
das
jmp
std
sti
cmpsb
and
ret
cld
adc
dec
pop
lods
ficoml
ret
xchg
adc
add
ljmp
sbb
imul
loop
pusha
push
sub
addb
adc
test
loop
mov
lods
fidivrs
sub
repnz
lea
xchg
cld
xchg
addl
popf
push
imul
imull
das
cmp
call
xorb
cmpsl
xor
push
movsb
ds
cs
into
lahf
dec
xor
clc
ja
mov
sbb
mov
sarl
xor
push
adc
repz
add
or
mov
pop
out
sub
push
and
out
adc
add
inc
xchg
dec
adcl
jl
pop
inc
sbbb
lcall
rcrb
or
jmp
pop
sub
jno
cmp
and
xchg
add
scas
mov
cli
lea
pop
push
inc
into
mov
fists
loopne
mov
std
xchg
mov
push
adc
sub
push
push
jmp
cmp
fimuls
mov
in
std
gs
in
push
pop
das
push
sbb
add
xchg
nop
lea
aas
mov
addl
out
loopne
lcall
mov
pop
icebp
movsb
inc
or
cli
loop
jnp
jmp
inc
mov
inc
adc
adc
dec
movsl
test
jg
imul
mov
out
add
add
push
dec
repz
add
addl
test
sarb
add
xor
dec
dec
daa
push
lods
sarb
jle
inc
cmp
sbb
stos
mov
mov
sub
in
xchg
mov
pop
mov
jne
test
ret
jns
push
inc
shr
xor
mov
inc
popa
pop
dec
xchg
orb
dec
xchg
out
push
lret
inc
inc
sbb
mov
sbb
and
pop
jmp
and
mov
push
out
add
fld
or
add
popf
lods
pop
mov
sub
lock
mov
jae
or
cmp
sub
test
js
mov
ds
add
cmpsb
or
sbb
aas
orb
xchg
adc
fnstcw
or
add
ret
or
int
les
andb
or
mov
pop
push
cld
pop
lahf
and
xchg
jne
jnp
mov
mov
call
jae
dec
shrb
push
stos
sar
push
push
sbb
pop
in
cmc
mov
daa
cmp
inc
aas
push
jge
pop
cmpsb
popf
mov
xor
mov
mov
call
add
inc
ljmp
sbb
push
es
mov
xor
xor
test
xchg
cmp
sub
or
in
xchg
mov
adc
ret
fildl
cmp
sbb
jmp
xor
pop
shll
scas
int
sub
mov
or
pop
push
inc
adcb
xor
aaa
sub
xor
cld
xchg
jno,pt
leave
mov
pop
into
out
mov
lea
push
enter
jbe
xor
in
popf
jb
pop
add
fists
mov
and
testl
cli
repnz
pop
test
xor
hlt
aam
jae
add
mov
add
stos
and
push
and
mov
jp,pn
repz
pop
popa
mov
inc
repnz
lods
dec
jnp
add
in
into
out
push
js
push
inc
mov
pop
gs
xchg
shlb
mov
fdivrs
fdivr
faddl
mov
lret
adc
mov
sarl
adc
cwtl
adc
cmp
sub
adc
daa
adc
out
test
and
jno
orl
pushf
cmp
and
in
je
pop
jg
bound
out
xlat
inc
push
xchg
add
ljmp
sbb
testb
das
jne
jl
loopne
mov
push
pop
sub
pop
fsts
and
add
inc
pushf
mov
repnz
or
cmp
jp
movsl
adc
loop
add
sti
repnz
shl
aad
mov
add
cld
inc
lret
bound
push
mov
sub
shl
inc
xchg
popf
xchg
test
jp
pop
lods
fiadds
jp
imul
pop
mov
in
mov
pop
push
les
jb
add
imul
sbb
rcll
and
sub
das
inc
mov
xchg
in
cwtl
or
cmp
lret
addr16
mov
inc
andb
inc
xor
add
push
jl
js
repz
pop
and
cmp
fs
mov
add
iret
in
adc
adcl
imul
and
or
jp
pop
pusha
loop
out
fldt
out
xchg
cs
popa
add
sarb
mov
inc
mov
mov
fsts
movsb
add
pop
add
mov
scas
lods
scas
scas
rcrb
call
mov
popf
movsb
inc
and
frstor
xlat
mov
adc
push
pusha
cld
add
and
or
pop
cmp
mov
push
das
scas
lahf
add
lcall
in
xor
je
mov
push
jecxz
and
fsts
outsb
js
add
pop
jne
mov
jl
pop
ret
or
popa
pop
dec
sbb
sbb
pop
test
clc
sahf
add
popf
sbb
push
mov
lea
call
sub
xchg
movsl
mov
push
pop
mov
mov
inc
cmp
mov
fildll
outsl
jne
xor
mov
mov
je
inc
push
or
popf
mov
push
or
push
pop
add
popf
in
jg
out
mov
mov
xor
sbb
outsb
push
shr
cwtl
maxps
test
inc
add
fmull
push
mov
into
fists
xchg
mov
into
outsl
in
out
insl
rolb
aam
push
dec
dec
mov
pop
out
mov
mov
lcall
xchg
das
jle
adc
xchg
push
cli
mov
add
mov
fisttps
mov
add
pop
inc
pop
pop
push
idivl
and
xchg
pop
jno
xchg
mov
in
add
jp
add
daa
xchg
movsl
sbb
xor
push
pop
repnz
leave
push
pop
jbe
movsl
outsb
xor
dec
or
popf
mov
mov
testl
out
adc
jmp
sub
add
mov
xchg
daa
out
out
lock
sbb
mov
push
mov
mov
or
les
mov
dec
in
icebp
loop
mov
mov
inc
or
test
add
xchg
pusha
jecxz
jge
lea
sbb
lret
xchg
mov
std
push
pop
nop
xor
add
jmp
mov
mov
xrelease
sub
xlat
add
cmp
js
das
add
outsl
lcall
outsb
imul
mov
add
loop
add
xchg
and
mov
cwtl
std
and
push
add
adc
and
jle
mov
dec
pop
and
mov
mov
loopne
jg
test
and
int
orl
sub
aam
sbb
lret
add
cmpb
xor
pop
jl
subb
sub
or
xchg
mov
sub
push
pop
jnp
mov
jg
enter
adc
shrb
enter
jae
addr16
inc
mov
fsubrp
sub
sbb
push
inc
cli
add
test
sbb
lods
dec
jae
inc
shll
mov
adc
xchg
sbb
inc
add
repnz
add
inc
cli
sub
imulb
cmp
xchg
stos
or
xorb
mov
xlat
loopne
add
mov
jp
jmp
sub
xorb
cltd
in
add
inc
pushf
sbb
inc
popa
shlb
add
cmpsb
and
adc
sub
add
jl
fdivs
add
adc
outsl
xchg
add
sub
inc
jns
stos
push
imul
cmp
rol
add
cmp
rcll
test
push
sbb
mov
test
dec
push
push
loopne
mov
jne
sbb
ljmp
incl
xchg
jo
hlt
add
jl
mov
pop
mov
in
pop
add
fs
xchg
pushf
ltr
adc
scas
cmp
outsl
test
add
stc
xor
push
mov
or
adc
xor
filds
mov
idiv
push
sub
jb
pusha
mov
in
mov
jp
fs
cmp
fcmovnu
or
pop
sbbl
shlb
movsb
sar
lahf
fdivs
icebp
dec
js
das
scas
add
and
push
addr16
push
mov
push
inc
pop
adcb
mov
fisttpll
popf
sub
lods
test
aaa
mov
add
fmull
subb
pop
xchg
les
enter
stos
in
adc
xor
mov
std
icebp
mov
int3
test
call
mov
sub
mov
in
std
pop
cmp
sub
xchg
xor
cmp
pushf
ud0
shll
adc
mov
jo
filds
or
and
fwait
clc
pop
je
add
push
add
subl
lods
ret
rolb
jg
pop
mov
insb
dec
mov
repz
mov
sub
sub
mov
dec
insb
arpl
movsl
and
dec
repz
loop
aas
outsb
push
add
aas
imul
call
jge
dec
add
xor
jecxz
inc
jb
in
clc
scas
mov
movsl
push
mov
push
cltd
dec
pop
cwtl
adc
fisubl
shrb
jg
sub
inc
xor
repz
jl
pop
daa
or
xchg
scas
cld
sub
xchg
xor
mov
add
push
bound
movsl
sbb
mov
cwtl
lret
out
in
add
add
test
lahf
dec
pop
lret
sub
out
push
cmp
push
adc
xchg
pushl
data16
movsb
rcrl
jne
add
sub
mov
inc
mov
out
push
dec
sub
scas
adc
xor
orb
sub
cli
xchg
mov
fadd
popa
pop
cld
outsl
xor
add
cmpl
adc
xchg
pop
jo
nop
adc
outsb
mov
add
pop
mov
jns
and
or
adcl
mov
dec
das
mov
mov
imul
enter
std
or
xchg
dec
out
sbb
mov
loop
bound
adc
dec
xlat
sarb
arpl
inc
pop
pop
add
mov
lds
ror
push
bound
xchg
inc
lret
stc
sub
testl
push
push
xchg
bsf
leave
xchg
mov
std
subl
mov
mov
loopne
cmp
out
lret
stc
rorb
clc
test
fldl
mov
pop
rorb
mov
and
jno
mov
inc
data16
or
xlat
pop
push
dec
sbb
pop
lret
lock
lods
pushf
jo
sub
xor
jnp
mov
add
push
aam
pop
jle
pop
ror
and
dec
pop
mov
jbe
add
leave
fimull
mov
mov
es
sahf
add
jge
mov
idiv
push
sbb
inc
adc
pop
or
mov
sub
dec
call
or
jnp
push
dec
pop
inc
loop
lock
clc
and
mov
or
call
push
outsb
scas
add
push
push
add
mov
and
pop
dec
inc
rolb
inc
mov
xchg
mov
ret
add
movsb
xchg
aas
add
ja
call
push
jns
test
es
mov
mov
mov
sub
cmp
push
jae
jle
sub
in
stos
jb
in
mov
mov
hlt
push
in
sysret
out
jnp
dec
nop
xchg
fucomi
in
jo
add
add
jl
mov
loopne
rcrl
mov
pop
inc
lock
js
xor
dec
fnsave
xchg
in
and
pop
stc
lods
scas
shll
dec
test
loopne
subb
mov
and
pop
or
lods
outsl
and
dec
orps
sbb
push
mov
es
int
sbb
aas
es
mov
add
fsts
dec
insb
or
add
dec
dec
jno
add
mov
scas
shl
dec
push
ss
repnz
push
push
mov
lret
test
mov
clc
mov
call
xchg
push
repnz
jp
push
add
cmp
mov
add
pop
or
jle
jmp
mov
stos
mov
out
add
fchs
aam
jae
leave
dec
mov
inc
arpl
jo
out
jge
sahf
xchg
pop
lods
leave
jmp
push
jne
push
jnp
jns
cwtl
imull
rolb
out
jg
xchg
jb
xor
and
push
mov
sub
ja
fcomps
js
add
xchg
mov
cmp
xchg
push
addl
xor
jp
adc
loop
jle
lret
or
sub
cltd
mov
bound
cld
das
add
xchg
jno
ja
xchg
jp
fcomip
cmpl
and
popa
jg
enter
cmp
inc
ss
loopne
and
clc
mov
loop
std
adc
jnp
inc
sub
mov
scas
repnz
leave
mov
and
repnz
push
mov
add
in
imul
into
mov
sbb
and
test
clc
outsb
inc
sub
mov
lcall
inc
cmp
into
in
arpl
pop
aas
cmp
or
adcb
adc
jp
cli
add
inc
or
pop
pop
clc
cli
es
lods
cmpb
lds
andb
mov
stos
rcrb
lods
ds
lret
adc
cmc
push
and
lsl
inc
gs
xor
pop
push
clc
xor
es
push
pop
scas
inc
lds
inc
mov
add
cmp
es
insl
jbe
mov
cltd
mov
sub
jns
add
mov
call
adc
sub
loope
jl
cmc
iret
and
outsb
in
addl
stos
jge
lret
mov
iret
xchg
cld
push
pusha
and
lret
add
add
inc
ja
dec
nop
xor
add
testl
pusha
test
add
adc
push
lret
sbb
mov
sbb
mov
add
mov
adc
or
ret
subl
test
fmuls
cmp
and
roll
call
dec
fstpl
sub
push
imul
fs
out
ljmp
push
inc
inc
loopne
or
jge
and
mov
push
cmp
mov
jp
add
or
mov
sub
ret
lret
pop
jmp
push
mov
and
dec
cltd
ret
and
or
stc
add
fwait
cmp
pusha
jg
testl
mov
mov
loopne
push
ja
and
in
jno
mov
fnstcw
add
jne
test
lods
sub
icebp
add
xor
imul
sbb
cs
nop
daa
sbb
sarb
dec
push
add
shlb
pop
dec
push
scas
jg
shl
and
add
fstps
mov
cmpsl
push
add
sbb
addl
pop
mov
mov
fadds
arpl
addr16
and
cmpl
pop
ljmp
sub
lcall
push
mov
add
sbb
jmp
call
shlb
scas
jb
dec
mov
rorb
dec
or
add
dec
cmpsl
fwait
mov
lea
inc
negl
test
push
xor
stos
mov
and
add
rcrl
add
and
jmp
loop
lods
add
add
aam
or
xchg
or
cmpsb
add
leave
cltd
mov
sbb
push
jno
addl
jl
add
call
push
sub
sbb
mov
test
cmp
adc
inc
add
cltd
sbb
inc
inc
xor
jno
sbbb
addl
push
mov
cmp
or
ss
repz
nop
fs
inc
loopne
rorb
add
loope
push
sub
pop
push
repz
mov
icebp
add
test
cmpsl
push
pop
cmpsb
pushf
ds
mov
sub
mov
and
or
enter
push
stos
addb
and
inc
sub
pop
mov
pop
ret
push
leave
in
push
les
or
add
shlb
push
jmp
adc
movb
add
std
decb
imul
fisttpll
testb
sbb
jge
shlb
mov
sbb
mov
push
xor
sbb
mov
fiaddl
cs
cmp
out
repnz
sahf
cmp
xchg
adc
lcall
mov
jge
mov
movsl
sbb
std
mov
or
sbbl
cmp
xchg
cmp
xor
imul
inc
test
std
inc
lods
arpl
mov
cwtl
lret
mov
ret
shr
mov
jnp
sbb
sub
xchg
inc
repnz
call
enter
add
add
jmp
test
or
mov
push
add
or
fimuls
rcrb
sbb
mov
into
sarl
pop
cmp
lret
xor
xchg
add
jmp
mov
in
insb
push
test
in
and
push
fwait
testl
or
sub
adc
push
pop
jmp
mov
cmp
sub
lret
pusha
dec
pop
mov
or
sub
leave
dec
pop
jne
add
rcrb
or
insb
jmp
nop
sub
xchg
sbb
add
nop
and
or
push
jne
jmp
or
arpl
mov
mov
xor
in
inc
repnz
cmp
negb
sub
cmpl
xchg
adc
cmp
cmpsb
xchg
inc
stc
or
and
mov
decl
cmp
fadd
cmpl
pop
xchg
call
cmp
xor
stc
push
inc
mov
push
add
xchg
add
jae
pop
lahf
arpl
aas
cmpsb
inc
xchg
mov
ret
dec
and
enter
pop
pop
clc
ret
leave
ret
sbb
sbb
pop
cs
addb
cmpsb
mov
xlat
call
loopne
or
add
push
inc
clc
addl
add
dec
dec
mov
or
div
hlt
pop
dec
pop
jecxz
add
xchg
add
cmpl
xchg
insb
enter
cmp
sub
in
mov
xor
or
xor
scas
push
mov
or
int
add
add
jmp
mov
add
xchg
xchg
sub
push
es
cmp
cmp
repz
stc
push
sbb
push
dec
sbbl
or
push
pusha
lsl
pop
xor
inc
pop
scas
mov
inc
pop
sbb
test
call
push
test
dec
repz
sbb
outsb
sub
shrb
sub
imul
jns
adc
mov
add
in
jno
add
hlt
pop
js
push
cmp
inc
andb
sahf
std
and
in
outsl
shlb
pop
jo
adc
sbb
pop
add
sbb
sbb
add
test
sbb
xchg
dec
arpl
pop
jbe
add
sub
divb
jne
test
mov
jl
pop
fnstenv
shlb
push
cmpsb
pop
sbb
mov
mov
mov
lret
loopne
movsl
push
in
push
mov
popa
xchg
aam
imul
adc
sti
jmp
mov
ficomps
xor
mov
cld
mov
lods
mov
xor
enter
add
aaa
cmp
sbb
jmp
or
inc
pop
or
clc
mov
inc
sub
push
sbb
push
repz
dec
lea
into
pusha
ret
in
or
movsb
and
pusha
xor
loopne
push
lcall
push
shlb
mov
cltd
mov
scas
dec
pop
repnz
aam
in
push
mov
call
inc
les
setp
adc
shrb
sbb
rolb
aaa
and
je
sbb
test
and
xor
in
aad
mov
jp
movsb
add
xor
std
cmp
sbb
jg
add
mov
dec
bound
cmovl
leave
and
cwtl
loope
mov
cmp
lret
movsb
dec
xchg
add
inc
enter
int3
mov
stos
mov
cltd
daa
jnp
sbb
sbb
mov
nop
sti
es
icebp
loope
mov
repz
movsl
push
add
mov
inc
jp
test
push
cltd
nop
push
lods
xor
mov
es
or
and
or
add
pop
and
stc
mov
lret
add
jne
jo
pop
out
cmp
mov
jge
sub
mov
inc
fimuls
rcpps
mov
push
test
jb
leave
xor
cwtl
add
adc
mov
and
aad
rclb
sub
loope
rolb
or
nop
shlb
sbb
cmpb
ror
pop
fadds
sbb
sbb
xor
ja
push
stos
xchg
mov
pop
and
push
fidivs
punpcklbw
sbb
cmpsb
sbb
push
adc
adcb
mov
flds
imul
int3
shlb
add
cld
rcr
inc
xor
decl
add
imul
aam
cmp
or
and
pusha
jge
add
and
rclb
and
enter
jb
xchg
xchg
adcb
xchg
outsb
es
push
fmul
sbb
push
je
xorb
in
sbb
cwtl
or
and
mov
hlt
aad
xor
jno
insb
adc
es
add
add
jnp
divb
loopne
and
int3
adc
xchg
outsl
push
add
jle
inc
push
movsb
repz
mov
dec
pushf
xor
loope
movsb
push
ss
add
vmovd
push
rorl
or
mov
mov
outsl
add
jno
es
or
outsb
inc
test
sbb
sub
xchg
out
imul
filds
and
add
lods
mov
test
cltd
fadds
xchg
push
pop
xor
sbb
insb
and
cld
inc
mov
lret
pop
cmp
addl
mov
clc
lods
add
test
popf
xor
or
add
sbb
xchg
xor
inc
add
insl
es
mov
add
add
add
sub
inc
jne
mov
pop
popf
fiadds
loopne
pop
push
lcall
sbb
xchg
jl
sbb
imul
loopne
icebp
adc
add
ds
add
mov
lea
or
xorb
imul
out
call
adc
loope
loope
lods
xor
cld
xor
or
cmp
jmp
js
scas
pop
pop
cmp
dec
rcrb
add
cwtl
imul
dec
call
stos
add
cmp
mov
ja
pusha
add
ds
cmp
push
subb
sbb
aam
or
jno
pop
fwait
add
bound
ss
test
and
mov
xchg
adc
inc
call
mov
add
in
cmp
or
outsl
nop
in
add
jp
push
lret
nop
into
mov
xchg
and
cmpb
add
pop
sub
outsb
sbb
loop
push
pusha
adc
lods
fisubs
cltd
jbe
jno
mov
pop
push
cmp
mov
mov
ret
add
cmc
mov
stos
icebp
jno
filds
and
rcr
sbb
daa
add
xor
jno
call
push
and
out
jle
data16
mov
sbb
add
or
retw
sbb
sbb
into
jno
gs
lea
and
cmp
int3
and
mov
jns
js
out
gs
add
mov
int
jmp
mov
idivl
add
inc
daa
mov
add
cmpsl
popf
mov
xchg
cld
stos
add
ds
push
cmp
push
aas
xor
lods
and
jb
and
pop
das
lods
pop
xchg
and
or
ret
push
push
sbbl
push
cmp
lods
add
add
adc
int3
fldenv
cltd
or
xlat
shr
aad
jp
push
xor
in
lods
push
jns
push
or
push
adc
and
rcrb
test
test
pop
pop
fimuls
cmp
aas
imul
bound
xor
sahf
sub
push
mov
mov
hlt
jmp
mov
push
insb
mov
incb
or
adc
sbb
cmp
xor
add
mov
add
rcl
insl
rol
divb
or
push
or
jmp
fwait
cwtl
lock
cmc
cmp
sbb
leave
les
jae
adc
push
pusha
jo
jg
add
mov
add
adc
repz
gs
sub
push
push
xor
out
and
xchg
sbb
lea
icebp
lahf
mov
dec
pop
adc
adc
xchg
cmp
inc
in
and
pop
mov
in
pop
jmp
cld
cmpb
sbb
test
dec
and
repz
push
clc
jge
and
jo
andl
and
sbb
cwtl
adc
push
jmp
jl
pop
cmp
lret
xor
lcall
loop
bound
outsl
add
outsb
jb
jl
les
cmp
add
in
lds
dec
popa
cmp
push
mov
push
es
ret
or
movb
inc
sahf
push
cmovg
inc
mov
or
stos
or
outsl
dec
dec
mov
xchg
fbstp
fucomi
cmc
add
or
sub
aam
repz
cmpsl
sub
out
xlat
imul
rorb
dec
pusha
lea
xor
gs
add
mov
add
pushf
cmpsb
sub
dec
jg
add
and
mov
cbtw
fnstcw
pusha
xchg
sbb
adc
mov
fstl
gs
or
mov
xchg
jns
ljmp
jo
mov
push
pop
push
fwait
into
push
and
xchg
push
lcall
sub
xchg
loope
lock
sub
es
and
xchg
shr
int
and
les
gs
out
and
inc
imul
jne
orb
clc
jg
dec
in
cmc
sbb
adc
add
mov
nop
sahf
mov
mov
jae
adc
sbb
loop
aaa
ror
sub
add
in
shrl
jno
mov
push
out
add
movsl
mov
leave
xor
xor
cwtl
push
scas
push
cmpsb
cs
movsb
add
dec
insb
ljmp
mov
xor
dec
sub
test
test
clc
sbbb
xchg
adc
pop
adc
std
sbb
mov
fchs
jecxz
push
lret
push
xchg
and
or
mov
push
add
daa
out
and
out
push
movsl
movsb
cli
inc
stos
adc
inc
mov
or
sbb
sbb
xor
add
inc
and
cmp
add
or
int3
push
jbe
add
pop
add
rcll
jp
dec
xor
pop
mov
adc
push
mov
movsl
mov
jb
adc
or
adc
push
cs
fcoms
cmp
sbb
js
or
sbb
add
push
mov
movsl
test
in
repnz
mov
dec
lret
mov
scas
data16
dec
lods
gs
scas
cli
out
test
in
test
sub
ret
mov
ljmp
fadds
add
fldcw
ret
xor
xor
gs
call
scas
mov
in
xor
popa
or
and
xchg
add
mov
xchg
mov
fidivrs
mov
dec
inc
fdivs
out
pop
and
jmp
mov
je
mov
pop
stc
lds
in
mov
ffreep
dec
iret
cmc
sbb
mov
xchg
add
mov
jbe
sub
int
fwait
adc
or
hlt
push
loope
sub
icebp
jmp
cltd
dec
int
outsb
and
out
cmp
inc
gs
aaa
int3
xorb
adc
pop
sbb
add
int
mov
pop
out
nop
mov
push
gs
inc
sub
lea
mov
inc
push
out
jb
les
gs
inc
test
adc
cwtl
lods
cmp
mov
adc
sub
or
mov
lret
adc
repz
add
rolb
mov
nop
adc
dec
sar
mov
xchg
dec
test
jne
lods
add
ror
mov
test
jg
test
or
and
cwtl
and
sbb
sti
leave
dec
or
mov
fsubs
bound
inc
or
roll
jns
add
mov
lea
sbb
jne
mov
nop
loopne
xor
sub
cltd
rolb
inc
cwtl
cld
dec
and
mov
add
test
inc
xchg
cli
mov
les
sub
imul
js
hlt
add
iret
je
dec
sub
imul
repz
jne
add
fstl
ret
seto
loope
mov
cltd
call
loopne
lret
in
vdivsd
push
js
fs
jo
xor
out
divb
sub
movsb
mov
pop
outsl
leave
mov
fs
repz
sub
sbb
and
pop
sub
add
xlat
pop
or
xchg
push
mov
lcall
test
ds
loop
test
dec
pop
add
adc
mov
xlat
jo
push
ficoms
rcl
in
pop
jecxz
loopne
fsubl
leave
xchg
inc
mov
pop
arpl
lds
dec
or
inc
sub
and
outsb
data16
out
cmp
test
out
cmp
or
insl
mov
add
mov
je
dec
adc
jmp
dec
cwtl
sub
je
and
xor
adc
fcoml
pause
inc
mov
adc
sub
lods
pop
rcl
or
dec
lds
cmpsb
or
push
fst
and
inc
xor
je
pop
pusha
or
scas
add
push
push
pusha
mov
jnp
test
cli
in
lea
dec
push
jmp
and
mov
mov
mov
subb
xchg
movsb
inc
mov
push
dec
aas
xchg
mov
cltd
add
data16
and
or
repnz
js
loop
pop
xchg
jl
test
push
pop
sbb
mov
js
adc
and
dec
or
inc
mov
gs
mov
popa
cs
call
mov
adc
cmp
out
int
pop
or
icebp
loopne
adc
xor
and
sub
lcall
scas
mov
stc
xchg
cmpsl
call
adc
inc
lods
daa
push
into
test
add
push
push
rcrb
repnz
stc
sahf
push
adc
out
jne
and
out
xchg
dec
xorl
movsl
fs
add
aam
mov
shrl
cld
lret
add
mov
and
sub
push
add
mov
test
in
mov
arpl
add
mov
add
add
mov
mov
push
imul
and
into
aas
inc
adc
test
fs
push
aad
jecxz
sub
fcoml
push
add
gs
adc
les
stos
test
outsb
jl
wbinvd
push
std
inc
subb
fistpl
adc
ja
add
stos
fdivp
aam
sbb
inc
rolb
daa
int
lret
pop
sbb
push
or
push
xchg
inc
pop
lods
gs
add
test
out
leave
inc
cmp
pop
pusha
pop
je
cmp
orb
cmpsb
int
nop
filds
dec
mov
outsb
hlt
add
leave
mov
add
mov
xor
add
jb
jbe
movsb
cmp
mov
pop
or
or
outsl
fdivrl
scas
pop
test
and
test
cwtl
pop
and
lcall
sub
nop
je
fs
mov
fstpl
imul
andl
mov
loope
push
xchg
aaa
cwtl
and
jno
fwait
sub
mov
mov
pop
out
push
mov
jbe
add
movsb
cld
lock
push
mov
movb
add
cmp
push
mov
loopne
jno
dec
int
sbb
sbb
es
decb
push
jae
popl
lods
adc
test
push
in
in
or
ja
fisttps
or
sbb
sbb
out
shrb
popf
test
jg
sarb
xlat
push
cmpsl
add
or
je
sub
xchg
xor
cmp
cmpsl
add
enter
test
pop
jnp
inc
push
and
or
mov
into
mov
roll
adc
cmp
and
cmpl
xorb
inc
xchg
xchg
js
add
mov
add
icebp
fidivrl
sbb
into
add
pusha
mov
add
mov
aam
cmp
les
xor
fs
lods
ja
mov
add
push
jg
or
mov
adc
push
loope
cs
sub
movsb
ror
rclb
in
insl
sub
pop
mov
adc
fiadds
sbbl
mov
push
push
xchg
cmp
inc
fistpl
mov
jae
insl
out
movsb
jno
mov
aas
sbb
xchg
fsubl
in
mov
adc
and
push
roll
sub
das
outsb
xchg
sbb
movsl
cld
sub
out
mov
pop
cmc
push
cltd
adc
das
out
inc
movsl
ret
call
pop
sbb
mov
fisttpll
jp
scas
adc
bound
add
out
test
and
in
fs
jp
lock
mov
shlb
adcl
scas
movsl
cwtl
jno
inc
shlb
test
pusha
add
rorb
xchg
andb
sahf
push
push
or
addr16
out
imul
daa
jmp
sub
enter
mov
mov
sarl
jmp
outsl
in
adc
aam
in
or
push
inc
pop
and
mov
xor
fdiv
aaa
incl
shl
or
mov
cmp
pusha
sub
dec
sbb
lds
rorb
xorb
pop
fmull
hlt
psllq
pop
xchg
mov
pop
adcb
je
jo
in
add
jp
cwtl
hlt
sub
and
sbb
and
mov
pop
add
mov
cwtl
jle
jl
sub
filds
sarl
add
xorl
pop
cmp
fcom
jg
push
jl
inc
cli
xchg
add
jb
aam
mov
adc
xor
aas
push
sbb
js
add
sti
das
std
or
imul
cltd
and
daa
movsb
pop
loope
nop
xchg
mov
mov
pushf
xchg
mov
mov
insl
adc
sbb
sub
mov
ja
in
add
adc
xchg
fildll
shlb
iret
int3
xor
xchg
out
hlt
mov
jbe
cltd
in
cld
out
or
mov
das
cli
cmpsb
jbe
add
fs
add
je
dec
ret
push
inc
out
mov
fwait
repz
push
cmpsl
xchg
ss
lock
jno
xorb
rcll
xor
roll
xor
loopne
int
arpl
test
push
roll
sub
pusha
add
inc
cmp
int3
push
or
mov
xor
add
xchg
inc
pop
add
mov
mov
in
fs
cmp
lret
enter
xor
add
adcl
cmp
lret
faddl
push
ss
fidivl
and
sub
sub
and
jmp
sbb
push
mov
cwtl
xchg
and
jl
popf
icebp
subb
xor
loopne
aam
out
mov
inc
sbb
addr16
jo
pop
push
scas
cmp
lsl
or
bound
es
xor
dec
sub
xor
mov
mov
pusha
fistps
adc
push
pop
xor
call
mov
pop
push
sbb
add
mov
and
ret
and
or
add
lcall
mov
pusha
sub
cld
loope
sti
dec
aam
sbb
in
and
sarl
gs
rolb
and
sub
dec
push
pop
loop
add
push
cmpsl
add
imul
insb
test
sub
pop
rsqrtps
add
push
and
mov
in
inc
and
add
psubd
sbb
insl
pop
testb
repz
inc
jno
cmp
rcr
sub
das
lret
pop
adc
movsl
pop
in
jae
add
pop
loop
and
mov
and
add
inc
fcoml
jo
add
add
loop
popf
test
shlb
cld
fcom
mov
std
adcb
dec
and
or
add
shll
jb
add
adc
push
loopne
and
cwtl
add
out
emms
leave
add
adc
mov
ss
mov
xchg
add
into
sub
jns
cmp
xchg
cmp
jne
fistpll
addr16
or
lahf
add
int3
gs
rol
aad
addr16
add
test
imul
pop
pop
pop
xor
sub
sbbb
mov
andb
pop
cmp
jb
xchg
fcoms
shll
add
and
mov
xchg
mov
je
add
iret
xchg
sbb
add
push
xor
sahf
add
in
pop
push
popa
loope
pop
xchg
mov
stc
add
bound
and
shrb
in
leave
shr
es
jl
mov
lock
cltd
les
jo
rorl
addl
jge
inc
int3
jb
mov
pop
add
mov
in
adc
scas
mov
jae,pn
adcl
mov
pusha
cmp
in
adc
lds
imul
xor
and
xor
add
movsb
add
cmp
add
mov
inc
sbb
stos
incl
pop
clc
and
rolb
lret
xchg
movsl
fcmovbe
sub
or
push
cmpsl
sahf
mov
out
cwtl
jne
push
add
ret
jno
lret
fwait
add
mov
mov
mov
inc
lcall
add
push
push
xchg
add
xor
sbb
movsb
cmp
xchg
dec
push
enter
jg
lock
cmp
lods
andb
mov
add
adc
and
add
lret
mov
xor
movsl
add
push
data16
andb
mov
dec
fldl
jo
jns
rcll
sub
mov
and
add
repnz
std
dec
sub
cmp
out
add
sbb
cmp
add
add
pop
mov
cld
jmp
or
push
in
dec
jl
mov
add
ficoml
sub
and
test
gs
enter
lcall
add
cmp
inc
xchg
je
adc
cwtl
hlt
jbe
add
add
into
out
inc
jl
or
push
mov
jecxz
add
lods
sbb
xchg
pop
sub
gs
loop
adc
into
inc
shl
hlt
call
jge
dec
rolb
out
add
jle
loopne
cwtl
mov
dec
cmpsl
add
or
jnp
leave
add
jae
push
scas
jbe
stos
add
lret
int
repnz
push
fxam
push
shr
push
mov
mov
jbe
ljmp
adcl
inc
mov
aam
mov
rol
mov
sbb
add
es
mov
push
jg
add
into
push
pop
ret
add
xchg
jb
insb
xchg
daa
xchg
add
ret
push
xchg
add
sbb
adc
pop
popa
movsb
add
jb
fstl
in
imul
mov
cld
movsl
hlt
or
mov
loope
outsb
push
out
stos
add
addr16
nop
mov
jmp
mov
in
lret
cmp
mov
sbb
cmp
or
aam
push
adc
dec
pop
add
push
movsl
cmp
inc
aam
into
shl
add
xor
jle
adc
es
loope
addb
scas
cmp
test
xchg
xchg
imul
notb
or
inc
add
sahf
mov
adc
mov
cmc
cmp
and
hlt
iret
adc
or
xchg
mov
jbe
popa
xchg
mov
or
out
jb
add
xlat
popf
and
adc
pushf
les
add
or
and
xchg
lret
lea
xor
xchg
dec
push
jo
ds
fisubl
add
add
fcomps
or
add
cli
push
xchg
cmp
dec
xchg
mov
negl
xor
js
fdivs
add
stc
arpl
add
adc
bound
int
stos
adc
push
lods
or
mov
gs
cmp
pop
es
add
pop
push
repnz
jg
jmp
sbb
je
arpl
or
les
test
mov
ds
fsubs
jno
shrb
neg
push
jae
inc
lock
sub
adc
sar
ficoml
cmpsb
sub
mov
add
test
or
mov
out
jb
ds
fistpl
mov
cltd
pop
push
inc
hlt
xor
jg
add
clc
data16
mov
inc
out
add
jne
aad
pop
cs
push
and
mull
push
addr16
lcall
mov
inc
xchg
jmp
test
mov
stos
adc
xor
rolb
fadds
or
mov
or
pop
mov
clc
addl
lods
aam
repnz
cmp
pusha
lock
sub
iret
orl
mov
xchg
inc
push
xor
push
dec
lock
jbe
pop
pop
xchg
inc
cwtl
cmp
int3
sub
mov
push
sbb
cmp
stc
add
int
fistps
rcrb
add
jecxz
mov
pop
or
sbb
cmp
aad
xchg
jb
pop
and
daa
fidivs
psubusb
push
mov
mov
jne
add
imul
mov
add
std
iret
addl
jae
add
and
out
add
mov
xor
add
mov
loope
lock
jbe
mull
add
imul
int3
int
xor
push
jb
add
push
mov
xor
cmpsb
loopne
stos
lock
into
jp
fstpl
and
mov
push
add
cltd
shll
mov
scas
pusha
sub
add
cwtl
shlb
lods
or
pushf
stos
or
jle
jg
add
sub
jne
adc
test
jns
mov
out
addr16
shlb
add
mov
push
test
jp
cs
push
cwtl
sbb
repz
addr16
push
clc
je
cmc
cli
rolb
xorb
je
and
imul
ret
pop
xor
add
adc
imul
aad
jne
dec
pop
add
popa
mov
fcompl
loopne
out
nop
sbb
inc
add
repz
mov
sbb
test
pop
cmpsb
cld
sbb
add
or
jmp
icebp
addr16
les
xchg
inc
inc
in
aaa
inc
sahf
add
add
xchg
dec
into
rcrb
inc
sbb
sub
mov
push
fisttpll
add
and
add
mov
roll
roll
movsl
cltd
push
lods
nop
add
das
out
inc
fdivrp
test
add
xchg
jmp
out
pop
inc
add
push
mov
dec
add
mov
lea
loopne
andb
add
and
pop
mov
ror
out
cli
je
add
cmc
scas
xor
add
and
sbb
sub
mov
aam
mov
cmp
mov
xchg
roll
enter
and
jl
mov
ja
and
or
std
cli
imul
addb
push
add
cwtl
loopne
add
push
xor
mov
fcoms
sub
xor
aam
mov
out
cmp
js
add
inc
xchg
xor
inc
sub
sbb
adc
mov
fdivrs
fimuls
les
add
and
rclb
jl
sbb
stos
adc
lret
push
scas
mov
test
add
mov
xchg
mov
push
outsb
clc
mov
pop
push
jae
rorl
movsl
xlat
nop
sbb
jo
mov
cld
imul
mov
push
pop
mov
add
iret
jo
mov
lret
xlat
mov
pop
jae
movsl
lods
repz
iret
jecxz
mov
xchg
pushl
add
sbb
add
jns
pop
dec
fcoml
pushf
xor
icebp
movb
rolb
cmp
inc
and
je
test
push
loope
orb
jnp
add
jbe
leave
bnd
flds
decb
stos
sub
mov
lea
pop
andb
and
mov
iret
add
outsb
scas
ss
sbb
adc
cld
adc
xchg
add
imul
sub
mov
adc
pop
roll
rdmsr
adc
inc
fimuls
jp
add
add
enter
jecxz
sbb
popf
cmp
xor
add
hlt
inc
clc
add
mov
repnz
lods
sbb
jecxz
jns
pop
sub
imul
jp
sbb
or
xchg
loop
dec
add
rcrl
jbe
add
fildl
and
aam
cmp
mov
jmp
jns
add
pop
mov
add
iret
xor
xor
rcl
add
loopne
ret
stc
add
cmpsl
fidivrs
pushf
adc
les
lds
adc
add
add
or
pop
add
mov
inc
in
out
stos
cmp
add
and
nop
or
pop
mov
divb
js
cwtl
in
xchg
leave
cmp
mov
fistpll
test
out
add
mov
mov
repz
loope
cmc
inc
push
nop
or
push
push
cmp
test
mov
fstpl
xchg
mov
or
mov
bound
into
dec
cmc
test
rorb
fadds
shr
mov
and
out
pop
sub
jno
inc
iret
jmp
insb
pushf
repz
and
orb
jne
xor
inc
mov
sub
adc
cli
xchg
popa
pop
adc
into
hlt
arpl
push
xor
push
cmp
test
aam
dec
ss
push
pusha
movsb
insb
jbe
js
adc
testl
in
mov
iret
ja
lret
and
loopne
or
jno
or
mul
into
sbb
add
sub
jo
andb
push
das
xchg
popf
jo
add
xor
sub
add
sbb
mov
jl
pop
mov
stos
repz
fdivrl
fildll
mov
divl
or
arpl
adcb
pushf
pop
add
jae
mov
pop
shll
incb
jl
xor
mov
movd
and
std
jmp
dec
shll
in
adc
jge
xchg
push
mov
mov
add
pop
lcall
iret
mov
mov
mov
push
aam
jae
add
inc
stc
jb
mov
xchg
add
dec
ljmp
loop
inc
add
xchg
lock
xor
inc
loopne
bound
sub
scas
lea
out
hlt
pop
adc
imul
jae
sahf
mov
add
cmpsl
pop
insl
aas
nop
jmp
adc
gs
jae
mov
mov
push
push
dec
cs
nop
add
ficomps
sbb
sar
daa
or
dec
cmp
js
cs
outsb
dec
push
push
imul
fs
fbstp
mov
shll
dec
dec
ret
jg
out
push
adc
adc
mov
mov
stos
scas
add
inc
repz
mov
jl
fldenv
pop
add
cmp
rcll
mov
xor
js
lods
mov
lea
add
dec
adc
mov
js
rcr
or
inc
shrb
inc
adc
and
push
sub
adc
xchg
sbbl
mov
testb
jp
ret
push
test
and
cmp
mov
push
addps
dec
lods
xor
out
icebp
ljmp
add
cltd
mov
sub
dec
jge
ret
dec
xor
mov
dec
add
fnsave
nop
add
out
cmpsl
or
les
push
push
add
ljmp
add
hlt
outsl
add
mov
nop
iret
jno
add
mov
dec
int3
inc
sub
sub
out
mov
repnz
add
cmp
lock
sbb
je
and
add
xor
popa
dec
adc
cwtl
sbb
lods
sub
cld
lea
testb
xor
inc
repnz
pop
add
shl
sub
sub
scas
je
and
add
sbb
sub
out
push
cmpsl
dec
incl
fwait
aam
mov
test
lret
aas
lahf
inc
inc
add
cmp
ficoml
xor
rcrb
add
dec
or
xor
iret
sahf
icebp
mov
movsb
adc
add
push
or
jo
mov
ss
lock
add
adc
mov
and
jb
sti
sarb
ror
nop
mov
xor
xchg
push
inc
clc
push
add
jno
mov
jbe
inc
cltd
cmp
cmp
stc
rcr
mov
push
notb
pop
imul
sar
lea
enter
jae
mov
add
out
pop
or
and
out
xor
jl
cmp
push
xor
lret
add
popf
jo
inc
aas
jge
sbb
cs
loopne
or
and
add
fdivrp
jp
clc
inc
push
lcall
int3
cmpsb
gs
and
rolb
sbb
cmpsb
mov
jbe
ficomps
cmp
inc
outsl
pop
mov
add
iret
or
dec
or
out
sub
jae
add
mov
repz
add
mov
mov
rol
fidivrl
stos
cmc
jns
jno
shll
mov
push
pop
fisttps
rolb
inc
ja
add
mov
pop
or
pop
sbb
sti
dec
cmpb
movsl
or
bsr
cwtl
mov
or
push
lcall
pop
loopne
js
adcb
mov
push
add
inc
jo
inc
loopne
in
add
mov
mov
add
cmp
flds
in
dec
add
add
popf
cwtl
add
xchg
adc
aas
mov
xchg
inc
fs
out
pop
cmp
jno
sahf
add
aad
add
cmp
out
pop
xor
andl
pusha
lcall
sub
xchg
jo
pop
in
add
lcall
push
cmpl
pop
push
loopne
mov
pusha
les
lea
and
pop
mov
ret
call
lahf
and
lods
mov
je
mov
xchg
push
in
pop
mull
add
clc
inc
leave
loopne
mov
or
orb
add
add
test
mov
test
adc
pop
xor
mov
test
mov
jp
aam
push
pop
and
pusha
clc
cld
push
aad
push
mov
inc
mov
sbb
mov
sarb
or
sub
movsb
and
cwtl
sbb
shl
xorb
pop
in
mov
or
imul
xchg
sbb
int
fs
int3
xlat
cs
shlb
and
mov
popa
gs
test
dec
mov
jle
jecxz
ror
add
cwtl
inc
pop
mov
inc
add
mov
add
add
mov
rolb
push
pusha
push
ror
push
jae
adc
adc
sub
inc
mov
sar
sbb
pusha
fcomps
test
mov
add
imul
hlt
add
daa
and
adc
imul
lods
push
or
or
out
in
loopne
fadd
jo
and
cmp
mov
add
aaa
cwtl
cltd
add
sbb
sub
ss
mov
xlat
add
jo
ja
enter
add
pusha
push
shr
movsl
mov
inc
xlat
add
xor
fdivrp
or
mov
rorb
pop
sbbl
cmp
mov
or
hlt
jmp
fs
jbe
add
dec
in
push
ja
and
and
add
shlb
add
repz
sub
scas
inc
push
insb
das
fldcw
and
adc
iret
shr
add
mov
pop
xchg
inc
inc
ret
push
lods
daa
lods
dec
xor
pop
pop
imul
add
cld
orb
pop
fwait
popa
or
cmp
cmpsb
cmpl
pop
test
sbbb
lahf
dec
jno
mov
iret
mov
insl
mov
xor
fwait
inc
jb
mov
mov
mov
xchg
test
mov
hlt
add
or
add
std
mov
add
sub
xor
scas
fsin
mov
push
add
adc
daa
imul
inc
add
mov
sub
fs
lret
test
push
xchg
and
mov
mov
jge
jno
dec
add
jb
or
arpl
fldcw
lods
gs
loopne
inc
mov
jne
scas
push
cld
pop
mov
dec
inc
mov
sub
xchg
push
mov
call
gs
jo
sahf
add
mov
jge
xchg
and
sbb
xor
dec
sarl
mov
insl
dec
rol
adc
add
sbb
cmp
xchg
dec
xor
sbb
jmp
aam
test
adcb
sarl
loopne
add
mov
ret
add
nop
lock
int3
scas
rolb
mov
movsl
frstor
inc
imul
fdivs
xlat
movsb
pop
xor
sub
pop
add
shlb
xchg
inc
adc
or
ficompl
jns
jne
stc
and
lea
dec
loop
flds
lahf
inc
data16
int3
fwait
aad
into
jns
add
cmpsb
mov
pop
add
sbb
dec
pop
xor
out
jae
pcmpeqb
push
jo
and
add
pop
scas
lods
test
fucom
nop
jnp
xor
push
mov
pusha
inc
sub
sbb
lret
out
and
cmc
sub
je
xor
inc
mov
nop
cld
xchg
hlt
push
mov
and
adc
fidivs
mov
xchg
add
push
aad
int3
out
loopne
pop
push
test
lods
lods
nop
jns
fisubrl
add
popf
xor
add
mov
loopne
jns
dec
scas
popa
jo
gs
push
push
mov
add
adcl
xor
mov
inc
shlb
add
mov
jp
sub
stos
dec
xchg
cmpsl
jbe
jnp
je
jle
daa
push
lcall
gs
and
daa
sbb
jne
adc
adcb
std
aad
jle
push
sub
jno
push
cmp
mov
test
in
inc
ds
jl
idivb
add
fisubl
sbb
pusha
fsqrt
add
outsl
iret
shrb
push
pusha
xchg
add
push
or
add
dec
mov
call
or
gs
add
mov
icebp
push
loop
push
sbb
call
fwait
ss
dec
inc
or
addb
xchg
loopne
test
out
or
rorl
mov
sbb
icebp
mov
loop
std
lock
jle
pop
pop
je
mov
lods
add
mov
sub
clc
add
jecxz
ret
jp
insb
push
rolb
fsubrs
das
sub
cld
push
push
enter
push
addr16
cmp
xchg
adc
dec
sti
add
or
and
push
add
adc
sbb
in
or
xor
mull
shr
pop
sub
int3
ja
xchg
fdivrl
fwait
jl
iret
fisubrs
pop
xor
mov
add
pushf
data16
push
aaa
cld
stos
xor
mov
rcr
add
and
adc
sub
enter
mov
and
push
mov
pop
cld
orb
repz
mov
clc
cmp
sbb
inc
mov
addr16
add
jns
cmp
out
jne
rorb
into
repz
jmp
mov
lret
lods
inc
std
or
clc
loopne
or
mov
cmpb
sbb
or
loop
cmp
test
sbb
loop
aam
xchg
mov
lret
shl
lods
adc
shlb
add
push
xchg
fisttpl
add
addr16
pop
xor
dec
pop
inc
aaa
insl
inc
adcb
fmuls
xor
and
add
xchg
dec
jae
imul
and
jno
add
lcall
adc
xchg
pop
lock
aam
dec
insb
inc
adc
rclb
add
ds
lock
add
cli
lods
stos
sbb
shlb
xchg
add
rcl
push
idiv
imul
add
mov
lods
ret
addb
adc
adc
jmp
call
jg
add
jb
fsubs
sahf
add
cmp
or
cmp
pop
idivl
mov
pop
sti
or
jge
or
add
pushf
lret
lock
int
dec
ret
add
and
mov
out
add
mov
ss
push
cltd
rclb
push
mov
jmp
mov
orb
lods
mov
mov
dec
mov
rcll
in
jbe
mov
jecxz
push
out
jo
mov
out
sbb
push
incb
jbe
test
dec
scas
fldcw
je
jl
add
int
sub
adc
push
pop
filds
jo
push
cwtl
lret
add
fnstcw
inc
sub
int3
add
inc
mov
cmp
cmp
inc
fiadds
mov
int
mov
or
mov
xchg
outsl
loope
fildl
adc
jnp
cmp
insl
dec
int3
jmp
mov
orl
imul
xchg
test
js
pop
dec
rolb
in
mov
rol
cld
add
or
pusha
add
ds
stc
jge
enter
add
xchg
dec
add
arpl
lea
in
stos
js
je
or
lock
negl
jmp
rcr
inc
int3
fildll
push
ja
add
jbe
jmp
add
dec
out
lods
dec
xchg
iret
mov
lea
add
pop
mov
test
das
out
nop
mov
cltd
xchg
jno
sbb
adc
mov
icebp
movsb
in
pop
lcall
roll
push
ja
add
or
pop
lahf
dec
add
cltd
movsb
xor
inc
mov
pusha
enter
aam
rolb
sbb
add
mov
push
repz
pop
addl
lods
not
add
pop
jnp
xchg
sub
jns
add
insl
sub
int3
mov
sub
fsubs
lods
adc
add
xchg
push
inc
hlt
mov
dec
cmp
xor
jp
aad
out
add
mov
lea
cwtl
xorb
faddp
xchg
and
adc
push
pop
dec
mov
xor
js
mov
adc
sarb
xor
rclb
cs
cld
add
push
je
jecxz
shlb
pusha
add
in
aas
gs
add
dec
mov
push
pop
clc
mov
lea
add
inc
sub
sub
add
sbb
rolb
pop
movsb
xchg
enter
xchg
jbe
jp
pop
ds
or
mov
add
pop
loopne
and
add
jmp
mov
push
test
imul
rcll
mov
cli
mov
fcoms
inc
cmp
add
cmp
add
lret
sub
dec
lods
lock
add
sbb
out
call
adcl
or
fadds
and
xchg
lcall
sbbb
xor
je
and
cwtl
inc
cmp
inc
and
add
mov
jl
in
xchg
add
loop
fldpi
ljmp
addb
mov
add
cmp
aam
shlb
cmp
je
nop
outsb
cwtl
pop
sbbl
push
test
add
and
inc
stc
enter
add
jle
cs
lahf
lock
popa
mov
add
or
jb
stos
pusha
add
jle
jae
rclb
ret
addr16
dec
test
aas
or
add
pop
int3
jge
xchg
test
sub
ja
cli
push
and
lods
sahf
sbb
test
add
sub
ret
pop
mov
out
aaa
rolb
orb
or
pop
ljmp
shrl
inc
es
jle
mov
add
nop
arpl
sub
hlt
bound
shr
cmp
add
stc
add
call
pop
fidivl
adc
dec
test
and
and
aad
mov
or
pusha
and
add
jl
mov
movsb
jo
pop
in
insl
inc
call
fisubl
movsl
sub
lods
xchg
push
mov
add
clc
xor
pop
mov
pop
repnz
loopne
ljmp
ror
or
imul
add
mov
push
mov
icebp
add
dec
test
mov
ja
loopne
or
in
inc
shrb
hlt
pop
loop
xorl
imul
bound
sbb
insl
popf
add
push
rolb
cmc
add
inc
pop
dec
js
scas
shlb
sub
addr16
push
in
fstpl
lds
or
add
in
pusha
push
inc
ja
mov
ljmp
pop
mov
pushf
sub
add
addr16
mov
jo
orb
mov
mov
sbb
outsb
sub
in
rol
push
and
add
call
loop
cwtl
out
or
mov
outsb
dec
aam
mov
xor
les
and
cmc
sbb
lret
sub
test
ret
ds
test
or
push
push
adc
data16
inc
sbb
mov
push
jae
pusha
mov
aam
cwtl
xor
pop
loope
or
inc
pop
sbb
push
mov
jmp
mov
ret
jno
mov
cmp
pop
test
xchg
jno
mov
adc
xchg
or
adc
cmp
lcall
pop
lods
jns
hlt
xor
and
adc
add
and
dec
push
push
dec
sub
pop
sbb
add
or
push
pop
stc
xlat
cmp
sub
xor
add
in
outsb
test
mov
sub
adc
mov
clc
roll
sub
or
mov
push
ltr
fsubl
add
mov
icebp
dec
aam
xor
and
add
sub
adc
jo
loope
xorb
fildl
movsb
lea
adc
imul
sbb
pusha
ds
push
or
xor
rolb
outsl
push
xor
jns
pop
sbb
js
in
xlat
or
cltd
mov
ret
aas
lcall
dec
les
inc
xchg
les
cmp
roll
std
pop
test
in
cmp
in
jno
xchg
rorb
js
cmp
add
xchg
pop
push
jp
add
push
js
js
add
and
inc
add
clts
adc
cmp
add
xchg
clc
mov
pop
rclb
inc
pushf
in
incl
scas
out
aaa
push
add
jp
aas
sub
sub
and
or
xor
cld
add
stos
fwait
mov
xchg
pop
add
sbb
pop
cmp
add
frstor
dec
mov
or
xor
inc
mov
add
xor
adc
mov
xchg
mov
mov
cwtl
rorl
push
rcrb
call
mov
int3
adc
faddl
movntq
out
jno
std
add
sub
adc
test
cmp
call
or
push
test
sub
repz
add
adc
cltd
arpl
stc
cmpb
pusha
jb
sub
movd
inc
test
sbb
fadds
call
popf
add
call
femms
sahf
or
adc
push
add
das
or
loopne
push
jmp
loope
or
and
mov
add
xchg
ret
sub
jnp
mov
shlb
jbe
pop
incl
fisubrs
pushf
aaa
add
mov
std
xor
add
aad
test
decb
mov
or
mov
add
pop
xor
pushf
add
rcrb
in
jae
or
loope
adc
nop
nop
xchg
jo
add
sub
lea
add
scas
stos
xor
add
xchg
inc
aam
fldl
mov
xchg
sub
and
daa
dec
fwait
call
jno
idivb
and
lcall
test
jle
outsb
add
int
push
cmc
inc
sahf
add
stc
pop
xchg
or
jle
popf
dec
jb
nop
in
push
inc
push
fistpl
cmp
push
dec
add
inc
stos
repz
out
xor
sbbb
inc
aam
bound
call
mov
popa
aaa
add
dec
mov
or
or
sahf
addb
loop
movl
popf
pop
repz
adc
jnp
push
inc
movsb
movsb
cmp
out
test
jmp
mov
insb
push
mov
shlb
rcll
pop
pop
stos
pop
xor
movsl
pop
stc
add
subb
push
xor
dec
push
mov
push
push
icebp
dec
and
or
xchg
loopne
insb
add
sub
xlat
push
inc
add
jp
jo
lock
mov
testb
xor
sti
xchg
mov
cmp
ret
jae
cltd
adc
in
call
icebp
loope
sub
xor
add
jge
test
dec
push
add
clc
popf
mov
pusha
or
xchg
push
mov
pusha
and
loope
sub
pop
lock
push
ss
sub
idivl
js
mov
lods
jmp
in
test
mov
add
xchg
lock
add
lret
movsb
jle
roll
shl
mov
subb
stc
sbb
mov
cmpb
insb
lock
jge
cmp
add
dec
icebp
bound
mov
rclb
and
xchg
cli
add
sar
adc
scas
mov
pop
mov
out
ja
pop
into
dec
push
cltd
push
incl
or
mov
jbe
shrl
dec
jbe
sub
or
fwait
mov
aas
std
sbb
add
gs
outsl
insb
addb
xor
cwtl
push
push
js
inc
repnz
int3
mul
add
leave
push
scas
add
sub
jo
add
mov
jb
add
mov
add
bound
jns
neg
addl
cmp
shl
mov
add
movsb
add
cmpl
xor
adc
cmp
arpl
adc
cltd
or
sub
add
daa
inc
add
jp
add
lods
mov
in
pop
clc
push
xor
ds
jb
inc
lret
lds
lock
pop
sub
add
xor
pusha
pop
rorb
sbb
je
add
outsl
push
pop
add
mov
xor
adc
movaps
movb
loop
sub
out
inc
out
das
out
add
push
call
dec
or
push
sahf
repnz
popf
sbb
add
out
sub
jge
out
add
adc
ja
int
add
jp
fidivrl
ficomps
faddl
addb
cmpsl
pop
mov
stc
xchg
push
xor
xchg
cmpsl
test
test
in
cmp
mov
pop
pop
out
push
sbbl
loop
add
pop
dec
add
rol
mov
aaa
lret
dec
insb
inc
jne
es
inc
js
mov
jmp
mov
add
shlb
xor
jg
call
push
ljmp
adcb
jnp
fs
test
xchg
dec
push
add
or
ret
repnz
adc
xor
sbb
lods
imul
iret
out
mov
add
mov
jl
mov
rcrb
or
jecxz
lea
add
ret
mov
cmc
in
outsb
ja
outsl
jmp
sbbl
fstp
pushf
enter
pop
scas
imul
roll
cmp
mov
add
sub
les
add
paddusb
add
scas
inc
loopne
gs
adc
dec
add
mov
sub
fsts
xor
repnz
repnz
and
or
and
loopne
pop
xor
and
push
dec
mov
push
inc
dec
pop
loopne
enter
add
push
jne,pt
push
add
fsub
enter
lods
out
sub
lds
lret
push
clc
add
jp
adc
add
sbb
or
xor
sahf
out
lea
push
xor
add
rorb
pop
xor
lret
pushf
subb
mov
in
sbbl
pop
movsl
loope
test
or
rolb
or
pop
mov
pop
js
dec
out
cmp
adc
mov
rol
xor
add
cmovne
testl
mov
fiaddl
cmp
sbbb
add
dec
les
std
inc
xchg
pusha
xchg
cmp
adc
inc
mov
pop
enter
repz
sbb
lds
add
sbb
fcompl
cs
dec
and
inc
nop
and
xor
hlt
jns
leave
add
fs
mov
or
inc
test
cmp
subb
repnz
in
repnz
psubusb
mov
aaa
inc
jno
paddq
lcall
mov
xchg
out
and
ljmp
sbb
popa
push
jnp
inc
push
cmpxchg
test
fsubrs
fadds
imul
shll
lock
or
in
add
pop
cmpsl
mov
adc
xorb
jmp
and
outsl
les
popa
cmp
jmp
add
inc
add
xlat
outsb
hlt
andb
sbb
cmp
into
inc
push
jae
add
inc
or
add
inc
cli
mov
fldl
cmpsl
test
sub
or
pusha
sbb
xchg
mov
or
ljmp
add
dec
aad
js
lea
inc
ljmp
outsb
sub
add
mov
movsl
jns
fs
aas
inc
add
mov
out
sub
add
mov
cmc
int3
cwtl
out
arpl
mov
xor
dec
lods
sbb
add
and
add
ret
and
rolb
dec
ret
push
pop
xor
addl
dec
rol
cmp
out
mov
push
or
add
test
cltd
aam
lods
xchg
inc
inc
ret
xchg
mov
js
adc
lods
pop
subl
dec
xchg
nop
je
cmpsl
data16
mov
je
jecxz
xlat
pushf
out
dec
xchg
cmp
into
pop
pop
add
pushf
sbb
fcompl
add
repnz
adc
xchg
add
pusha
xchg
lea
fdivr
repz
cmp
outsl
shrb
add
out
sbb
sti
iret
cmp
jg
lcall
dec
repz
push
mov
inc
aas
sar
pop
dec
cmp
stos
fadds
ljmp
add
insl
dec
adc
les
xchg
outsb
add
sarl
add
adc
jge
inc
cwtl
das
xchg
stc
add
xchg
hlt
in
mov
push
mov
ficomps
push
push
dec
test
mov
and
mov
push
add
adc
jg
stos
adcb
xchg
or
jno
insb
arpl
in
es
in
stc
add
jecxz
xchg
shr
pop
dec
sbb
jg
test
movsb
xor
sarb
cmc
xor
add
push
stos
test
mov
add
dec
mov
xchg
adc
mov
lods
dec
or
call
shl
shlb
fdivrs
ret
hlt
add
ss
xchg
roll
mov
sbb
outsl
scas
mov
pop
lods
pop
or
add
dec
fisttpl
inc
icebp
dec
jp
add
cmp
jns
inc
fsubl
pop
dec
sti
fcom
movsl
jmp
xchg
cmpl
loopne
outsl
nop
ds
jg
data16
lret
and
call
cmp
js
mov
jmp
adc
pop
dec
scas
mov
and
std
push
sub
scas
mov
push
int3
or
and
and
and
add
aas
js
lods
je
add
xchg
inc
sahf
imul
jecxz
xchg
adc
jne
add
push
push
insb
rcl
movsl
mov
pop
cmp
inc
pop
xchg
cmp
stos
pusha
and
stc
sete
push
jmp
cmpsb
jle
sub
dec
mov
inc
sahf
mov
imul
or
nop
pop
jae
das
cmp
xchg
rcr
dec
or
and
add
hlt
sbb
xchg
std
ds
and
cmpsl
movsl
sahf
push
adc
sub
inc
inc
test
xchg
mov
aam
cmp
test
mov
incl
pop
daa
data16
lock
and
icebp
mov
mov
add
push
in
rorb
sar
mov
jl
aas
decl
mov
fsubrp
sub
adc
sbb
add
aaa
or
call
movsb
pusha
mov
inc
xor
jmp
imul
test
adc
xor
mov
xchg
mov
fs
cmpsb
lock
mov
rorb
and
adc
jo
dec
or
push
popa
pushf
lcall
jecxz
in
rep
cmpb
jns
add
mov
cmp
nop
rcrb
movsl
fcoms
sarl
ja
sub
ljmp
icebp
ds
fmul
or
insl
add
ficoms
lds
fisubl
std
mov
inc
cld
sbb
sbb
in
or
int3
jp
and
test
pop
movsl
test
rolb
adc
fisubrs
jo
repz
sbb
inc
dec
add
stos
jne
pusha
js
pop
jno
and
sub
call
ja
xor
aas
add
and
fs
lcall
mov
repz
jl
or
ss
nop
xorb
or
add
int
xor
push
iret
mov
in
shll
movsl
xlat
jo
roll
cli
mov
jnp
add
arpl
fcoms
adc
and
pop
jnp
xlat
shlb
jns
insl
outsl
add
out
mov
pusha
add
add
xor
fwait
jo
mov
add
dec
pop
jmp
icebp
xor
mov
push
pop
int
add
cli
addl
jmp
jno
shrb
inc
or
pop
cmc
test
add
loop
adc
adc
lods
adc
add
rorl
les
cli
add
outsl
neg
push
out
and
imul
pop
xchg
pop
mov
out
into
movsl
mov
jg
int3
push
adc
jge
add
or
aaa
add
out
lea
mov
xor
pusha
push
js
xor
xor
jbe
loopne
outsl
popf
lods
and
nop
jae
xchg
sbb
lahf
ljmp
rcll
add
roll
mov
pop
aam
mov
jge
jmp
aas
push
lock
cltd
xor
adc
jl
test
add
call
push
into
pop
fnstsw
push
cmp
cmp
out
xchg
out
sub
lahf
add
lds
dec
mov
xor
cmp
int
push
or
sub
das
scas
into
add
mov
or
cmpb
testl
test
into
aad
lock
sub
popf
lods
ljmp
dec
mov
add
cmp
sub
sub
add
xor
mov
leave
outsl
out
nop
cmp
shlb
pusha
loopne
cmp
aaa
and
jnp
add
out
add
scas
pop
jnp
fwait
icebp
pop
lret
jae
xchg
or
push
rolb
push
or
mov
stc
adc
add
iret
add
mul
data16
dec
xchg
jae
add
shl
ja
inc
xchg
sti
imul
pop
add
push
and
jle
adc
rcrl
add
inc
fdivrs
push
sub
mov
jmp
add
in
lcall
rcrb
and
test
adc
js
dec
mov
lock
sub
subb
outsl
sti
inc
hlt
or
insb
les
xor
add
pop
add
rcrb
xor
mov
sbbl
lds
add
push
call
mov
jbe
inc
sub
cld
push
add
fmull
mov
inc
add
push
and
jo
in
cltd
cmp
lods
mov
pop
jnp
mov
hlt
sub
call
jae
xchg
test
add
push
fwait
lods
aad
sbb
mov
inc
sub
loopne
add
fistpl
mov
add
in
or
call
lods
sbb
mov
sbb
popf
xchg
gs
push
push
loop
or
xor
adc
add
repz
roll
fwait
clc
in
loope
dec
test
sbb
loop
push
gs
loopne
xchg
cmp
ljmp
cmp
mov
push
push
mov
cmp
rclb
mov
shll
test
fs
and
aam
dec
jne
pop
add
idiv
ds
mov
int3
es
add
cmp
data16
mov
sbb
aam
pop
cs
shll
pop
mov
icebp
aas
or
cmp
sbb
loopne
into
fdivrs
inc
fwait
push
and
icebp
je
ret
shll
sbb
test
test
xchg
leave
out
mov
lcall
push
xchg
jno
pop
pusha
addb
dec
ret
and
pop
sub
in
lahf
xlat
jo
out
add
jns
add
subb
dec
push
in
or
and
test
inc
cld
js
add
and
clc
sti
pop
add
in
sbb
add
jmp
jno
mov
sahf
ret
scas
roll
cwtl
mov
iret
int3
je
cltd
add
pop
arpl
cld
repnz
nop
pop
adc
mov
dec
lret
xor
test
sbb
cmpsl
push
js
lds
add
dec
jae
add
ss
sahf
popa
gs
sbb
loop
mov
in
insl
jmp
sbb
and
imul
aam
popa
cwtl
std
push
in
mov
and
add
adc
add
jecxz
add
push
xchg
mov
rcrb
ud1
push
pusha
and
xor
stc
jl
movsb
and
lret
push
dec
cmp
add
mov
pop
jge
out
or
inc
add
gs
cmpsl
insl
movsl
sbb
sub
rcrb
adc
and
lock
add
xchg
cwtl
mov
addl
insb
stc
push
add
pop
fwait
xchg
sbb
out
mov
add
push
aaa
inc
pop
and
data16
xor
ret
push
je
cs
psubb
pop
mov
das
mov
adc
fistpll
sub
pop
shrl
sub
mov
mov
xor
add
pushf
adc
adc
fiadds
and
and
int
lds
dec
inc
loopne
test
xor
xchg
xchg
daa
and
pop
and
mov
jmp
inc
loopne
and
jp
add
sub
dec
jl
dec
int3
lea
push
sarb
ss
lock
loopne
ss
jne
stos
rorb
int
cmpl
es
xor
ret
sbb
xor
mov
push
add
stc
cmp
add
aaa
dec
std
pop
mov
cmp
sbb
into
xchg
xchg
add
rorb
xor
imul
ja
jnp
cld
rolb
inc
xor
enter
arpl
shr
inc
orb
in
inc
popf
out
push
xchg
cmp
das
mov
in
add
aas
mov
xor
insl
fs
add
dec
test
cmp
and
addb
dec
pop
push
adc
lea
pop
mov
add
mov
stos
mov
add
ret
cwtl
repz
mov
movb
sbb
ljmp
iret
cli
add
idiv
mov
pop
and
add
fucom
sub
insl
jns
imul
push
mov
mov
divb
roll
adc
push
push
addb
in
or
verr
adc
fidivs
mov
xor
xor
repnz
push
add
jg
jae
pop
cmp
add
add
adc
pop
das
in
pop
lcall
scas
testl
mov
adc
adc
pop
add
lret
clc
je
dec
nop
insl
add
rcrl
pop
movsl
das
repnz
push
inc
test
fadds
pop
aaa
out
mov
repz
add
mov
out
mov
mov
adc
call
scas
xchg
cmpb
add
fdivrs
push
popa
in
lods
add
sub
fwait
cmpsb
out
movsl
pusha
sub
ror
ds
adcl
cld
testl
mov
ret
loop
das
mov
fcomp
dec
mov
bound
adc
sub
ds
pop
fiadds
push
jb
mov
sub
add
and
rolb
sbb
sub
subb
jno
mov
outsb
cmp
inc
out
mov
xchg
add
mov
aad
xchg
rorl
stos
pop
outsl
lcall
jp
fiadds
add
pop
lcall
imul
jge
icebp
mov
push
adc
cmovne
push
lock
add
adc
sub
pushl
jmp
in
jno
sahf
or
inc
xlat
out
mov
hlt
lret
inc
xorb
dec
fwait
add
and
pop
jle
jg
and
mov
out
ret
sbb
fwait
add
lret
test
add
cmc
in
dec
mov
andb
scas
or
aaa
mov
shl
ret
int
add
mov
cmp
and
in
dec
jne
loope
rcrb
jg
out
mov
add
jmp
test
xor
xor
and
inc
inc
cmp
ljmp
pop
jle
addl
imul
xlat
or
xchg
inc
je
add
xorb
repz
inc
out
in
movb
jecxz
into
pop
or
fadds
shr
aas
xchg
popa
les
shlb
push
or
enter
jl
adc
xchg
sbb
add
icebp
mov
sar
cmc
add
call
or
movswl
andl
test
clc
add
xchg
cwtl
loopne
and
add
xchg
inc
aad
cltd
into
push
cmpsb
and
inc
in
sbb
xchg
jecxz
or
mov
sbb
cmp
add
mov
test
add
pop
add
jl
ja
push
xor
js
pop
lock
call
add
push
mov
push
hlt
xchg
add
inc
out
daa
cmp
add
loope
push
pop
shl
mov
movsb
loopne
mulb
add
lcall
xlat
cmp
or
outsl
addl
jle
imul
roll
cmp
ltr
in
mov
icebp
roll
and
test
lahf
ficompl
addr16
sbb
xor
sub
inc
enter
and
pop
inc
pop
lock
iret
add
movsl
jge
lods
sbb
pop
nop
add
filds
pop
gs
mov
movswl
in
add
inc
sub
mov
cmp
or
jge
ljmp
and
cmp
dec
stos
push
add
lcall
add
jmp
sub
add
and
ss
int3
dec
push
rcrb
cmpsl
aad
xlat
or
icebp
insb
cmpb
fwait
sti
or
mov
cmp
mov
jmp
js
and
add
fdivr
enter
add
divl
sbb
push
ss
out
addr16
inc
jno
pop
outsb
les
rcrb
and
loope
push
pop
or
pop
pushf
xchg
lods
movsl
es
repz
pusha
lds
flds
add
ja
dec
pop
inc
xlat
add
lahf
mov
push
mov
cmpsl
subb
add
int3
rolb
lret
push
pushf
mov
mov
enter
cmovp
cld
fldl
pop
rcl
xchg
cmp
add
bound
cli
mov
jnp
idiv
rclb
pop
add
out
loope
inc
sarb
add
adc
ja
adc
mov
add
icebp
dec
clc
adc
push
jae
dec
dec
mov
add
xchg
add
adc
or
push
xchg
fistps
and
inc
pop
sub
and
sbb
mov
jno
adc
mov
roll
stos
jbe
and
repnz
add
cmp
pop
add
push
sub
mov
stos
xchg
add
fiadds
adc
mov
lret
aam
je
cmp
mov
add
cmc
jecxz
mov
xchg
add
push
sbb
mov
sbbl
enter
insl
cmp
sub
mov
cmpb
mov
mov
adc
mov
sub
lret
mov
add
out
inc
lret
sub
add
pop
xchg
jo
xor
in
xchg
adc
jns
jo
push
cli
clc
popf
testb
push
in
or
pop
jnp
xchg
sbb
mov
stos
sbb
mov
lea
jae
cmc
push
xor
mov
rcrb
mov
dec
jmp
aad
lock
add
xchg
sbb
test
xorb
and
mov
pop
test
pop
jp
outsl
add
adc
inc
cwtl
jns
mov
push
subb
sub
cwtl
push
add
orl
push
sbb
bound
cwtl
add
mov
inc
sub
test
mov
shrl
pusha
sub
jg
shrb
orb
add
jl
lcall
xor
jns
mov
js
test
iret
jns
xchg
icebp
or
adc
push
iret
inc
or
mov
dec
jmp
xchg
push
xlat
je
mov
cmp
add
enter
add
outsl
sbbb
or
daa
add
movb
jb
into
xor
or
popf
or
push
mov
ljmp
js
add
mov
out
fcom
movsb
add
inc
or
fisttpll
adc
sbb
or
clc
sbbb
dec
xor
fsubrl
xchg
cwtl
fwait
jne
testb
jns
mov
or
xor
xor
mov
xchg
cmpsb
adc
dec
test
and
adc
test
cwtl
roll
cltd
adc
or
pop
push
shrb
loopne
insl
xor
mov
fs
in
imull
adc
loopne
sub
push
adc
push
pop
mov
dec
fs
pusha
or
fisubrs
adc
sbb
dec
gs
in
adc
in
and
sbb
sub
and
cli
lahf
into
ret
outsl
sbb
nop
jl
jb
fs
out
mov
sbb
icebp
xchg
push
ljmp
inc
pop
add
sarb
cmc
sbb
sbb
aad
ljmp
cmpsb
push
pusha
inc
jns
adc
jae
fbld
pushf
or
and
lea
jno
stc
mov
jmp
aam
add
xchg
add
fs
inc
repz
cmp
add
fucomip
mov
mov
inc
add
fwait
push
cmp
dec
push
adc
jmp
test
or
add
lret
adc
adc
dec
jle
xchg
in
dec
lods
lret
cltd
mov
in
mov
cwtl
mov
dec
andl
or
xchg
mov
nop
test
mov
loopne
ljmp
popf
sub
fiadds
jle
icebp
sbb
add
in
and
mov
jnp
xchg
pop
mov
icebp
jmp
loope
subl
push
pop
insb
mov
mov
test
jle
ret
lods
mov
cmp
mov
add
dec
mov
dec
inc
loope
mov
lds
mov
inc
inc
adc
test
in
jecxz
mov
js
add
fisttpl
mov
dec
xchg
lahf
mov
inc
js
ret
ret
mov
loopne
cmpsb
xchg
imul
mov
jmp
fldenv
lock
mov
or
xchg
xchg
call
imull
push
sub
mov
sbb
pushf
adc
pop
sub
filds
mov
jbe
mov
push
pusha
cltd
loopne
jmp
imul
push
sbb
imull
xchg
add
shlb
mov
in
nop
int3
jmp
push
add
and
sti
into
add
inc
clc
sub
push
out
or
add
or
mov
jo
hlt
xchg
sbb
aad
jmp
orb
testl
jnp
cmp
sbb
enter
jo
mov
imul
movsb
repz
or
dec
cmpsb
or
xchg
jle
les
or
cmp
cmpl
xor
sahf
mov
imul
stc
push
mov
adc
lcall
loopne
ds
pusha
shr
mov
mov
sbbl
rcrb
add
sbb
add
or
xor
jmp
pop
or
test
pop
add
stos
test
or
jne
cwtl
push
dec
add
mov
push
jg
mov
into
dec
movsb
inc
and
sbb
add
lea
cmp
cmpsb
aaa
outsl
xor
sbb
dec
mov
test
adcl
push
cmpb
push
stc
push
mov
mov
push
add
cs
add
clc
push
movsb
mov
sbb
pushf
cmp
test
add
mov
mov
add
mov
les
xor
add
add
xchg
mov
push
sbb
cltd
stc
ja
jp
loopne
sub
jl
leave
xorb
outsl
mov
xchg
mov
adc
and
or
sbb
nop
and
add
insb
in
mov
scas
add
or
rorb
jns
loopne
jbe
mov
add
mov
in
cld
xchg
cmp
imul
or
add
dec
xor
and
dec
fadds
in
push
mov
mov
sbb
cmp
xor
lods
in
shl
aad
mov
adc
mov
sbb
jo
mov
xchg
orb
fwait
sub
sbb
add
sub
cs
mov
add
pop
inc
cmp
jle
lods
cmp
pop
ficomps
data16
cltd
adc
or
fwait
push
in
sub
add
imul
inc
sbb
inc
popf
aam
js
add
shll
adc
pop
dec
xchg
add
inc
je
sar
add
xchg
mov
or
std
rolb
mov
test
or
lret
and
mov
push
aas
cli
stos
mov
data16
mov
mov
xor
insl
and
ss
add
ret
stc
popa
aam
fstpl
or
add
sub
adc
and
ret
test
mov
test
mov
add
scas
add
nop
ret
enter
sub
jae
xchg
sub
sbb
out
mov
xor
jle
mov
loopne
mov
xchg
mov
mov
iret
or
incl
shll
inc
ljmp
pop
dec
mov
add
sbbl
jg
add
roll
push
cld
and
shlb
dec
out
movl
sbb
aad
mov
cmpsb
andb
mov
add
or
add
int3
out
xchg
repnz
xchg
mov
cli
push
adc
popf
pop
popa
cmpb
sub
xchg
out
push
out
test
push
je
cmpsl
mov
shll
jbe
cmp
pop
cli
pop
pop
decl
mov
lahf
xchg
sbb
mov
jno
xchg
push
stos
and
add
outsb
xchg
movl
in
int3
add
loop
push
push
loop
fimull
xchg
add
pop
jns
adc
push
add
mov
insl
shl
xor
add
ret
pop
repnz
lret
inc
pop
inc
and
popf
adc
xor
loope
inc
xor
out
and
mov
sub
mov
xor
mov
push
xor
lret
movsl
pop
adcb
cmpb
or
std
aam
outsb
add
pop
xchg
movsb
dec
ss
jae
lret
fstpt
jne
xor
imul
adc
or
jne
add
mov
mov
dec
aam
jo
add
insb
in
jo
add
add
fcmovne
push
and
pusha
jns
bound
add
xchg
push
inc
mov
popa
sbbl
mov
push
addr16
adc
adc
movsl
imul
mov
jnp
ja
gs
push
mov
pop
loop
push
cmp
movsb
int
add
or
and
and
stos
sub
inc
ds
roll
sbbb
jnp
bound
clc
mov
test
mov
jns
add
les
cltd
or
cwtl
ror
cmpb
hlt
adc
ja
or
sub
add
or
hlt
jle
cs
sbb
scas
xor
popa
or
pop
add
adc
add
jae
in
mov
mov
push
in
xchg
les
popf
clc
mov
cmp
jb
or
sub
fistps
std
push
js
js
fsubl
xchg
add
inc
add
pop
mov
pop
adc
pop
xchg
sbb
inc
insb
cmpb
call
loop
add
or
jnp
enter
add
lahf
loopne
hlt
lods
xor
dec
aaa
lret
pop
and
mov
sub
sub
mov
call
or
jle
pusha
jmp
jle
aad
pop
ficompl
in
xchg
push
mov
xchg
jbe
lock
shrl
xchg
adc
pop
leave
sbb
push
mov
add
lret
cmp
add
mov
insl
add
add
push
cmp
ds
adc
add
push
push
mov
pop
mov
jge
add
in
dec
ret
adc
pop
pavgb
sub
insb
cmp
xor
in
sbb
mov
pop
cmp
insb
push
dec
push
cmpsl
adc
dec
adc
xchg
mov
je
loop
add
lods
jp
pusha
repnz
ds
add
mov
adc
lcall
lahf
mov
mov
pop
pop
adc
andl
ret
test
add
pop
loop
or
insb
xchg
nop
mov
dec
mov
cmp
in
inc
test
jbe
out
cmp
fidivrs
sbb
data16
fildl
insl
or
or
mov
push
cmp
insl
lock
and
cmp
add
jbe
push
aad
xor
lock
xchg
movsb
jg
testl
shll
mov
jns
xchg
inc
mov
out
scas
pushf
add
dec
addb
jo
aam
cmp
pop
pop
pop
in
sbb
clc
cmp
int
ss
or
add
repnz
loopne
cwtl
cmpsl
mov
adc
js
nop
jecxz
adc
mov
enter
push
add
mov
sub
jns
sbb
dec
jns
arpl
mov
in
or
outsb
ret
aas
push
sub
push
test
jp
jle
add
adc
push
ret
push
sti
add
jb
mov
mov
add
mov
and
adc
sub
mov
cli
fwait
mov
adc
je
pop
aam
add
out
xor
mov
rclb
inc
add
dec
add
add
out
pop
mov
jle
jecxz
mov
lds
es
movb
cmpsl
jb
js
sbb
sub
jo
shlb
andl
and
push
addb
imul
stos
out
test
xor
pop
sbb
jne
subb
inc
into
imul
cwtl
daa
or
or
cmp
fnstenv
mov
push
cmp
xorb
lahf
jbe
jmp
ss
sbbb
mov
popa
sbb
sub
test
inc
xor
movaps
xor
add
push
fcompl
push
cmp
push
add
jbe
ljmp
fnsetpm(287
into
cmp
or
int
lret
lret
in
jl
cli
out
add
ret
inc
or
lock
add
mov
push
push
pop
in
xor
cli
add
xchg
xor
mov
sub
loopne
stos
add
ret
leave
das
int
add
sarl
mov
push
cs
data16
push
aas
lret
xor
adc
mov
cwtl
xchg
and
rorl
add
xor
cmp
ds
lds
mov
cmc
mov
add
sbb
sbb
insb
pop
xor
and
dec
dec
fidivl
aad
add
sahf
pushf
xor
mov
int
dec
scas
jmp
cmp
aad
or
mov
hlt
sbb
sbb
cmc
dec
subb
adc
mov
stos
addr16
add
dec
jp
mov
add
faddl
je
mov
inc
or
add
push
clc
sahf
sub
jg
test
sub
outsb
or
loopne
jecxz
push
ror
dec
inc
inc
add
daa
mov
add
mov
adc
ret
mov
sub
add
data16
dec
add
ret
sub
add
fwait
cmc
pop
lds
or
dec
stos
mov
into
push
jbe
addr16
jae
jne
mov
scas
inc
cli
hlt
in
test
and
fsubr
cmpsl
sbb
stc
inc
and
cmp
inc
dec
rcll
cmp
xchg
cs
sub
dec
adc
push
sete
xchg
add
cltd
adcb
pop
shrb
jne
cmp
and
int
lock
inc
push
ret
jne
push
out
pop
orb
cmp
and
mov
push
fisttps
arpl
push
je
scas
xor
inc
sbb
and
or
sbb
mov
mov
inc
inc
add
inc
addl
js
mov
adcb
int
dec
add
xchg
in
sub
aaa
cwtl
add
out
or
popf
jae
or
push
cmp
xchg
rolb
push
aas
ljmp
lret
mov
popf
add
mov
dec
xor
xchg
pusha
ret
add
fs
sbb
popa
lea
lock
mov
inc
add
inc
add
cs
cwtl
or
dec
add
jecxz
imul
ror
add
stos
mov
xchg
jle
push
dec
cmp
xorl
or
scas
xchg
pop
push
jle
aas
or
cmp
shlb
bswap
ret
add
push
xor
push
or
inc
cltd
mov
mov
adc
jae
cmpsl
mov
add
repnz
lock
mov
pop
mov
add
adc
ds
ret
movsb
data16
add
jo
inc
xor
jb
bound
out
cli
inc
sub
sbb
xchg
mov
hlt
adc
dec
pop
lret
pop
push
xor
pop
jae
add
adc
mov
xor
stc
cmpl
adc
inc
out
add
xor
loope
sbb
hlt
add
testb
adc
mov
enter
insb
loope
hlt
inc
mov
in
push
mov
add
cli
mov
out
pop
movsb
inc
adc
aad
ds
cwtl
mov
adc
repnz
fiaddl
aas
add
iret
xor
add
sbb
sbb
mov
cs
jo
mov
add
pop
in
or
sbb
add
cli
lds
add
rcl
add
jl
jbe
decb
fidivl
pop
jge
add
test
divl
arpl
test
stc
xor
addb
add
inc
inc
imul
in
mov
dec
cli
cs
cmp
stos
cmp
call
and
aad
mov
add
sbb
xor
mov
test
cmp
pop
cmp
js
xchg
sbb
mov
stc
mov
and
sbb
cmpsb
scas
xlat
add
loope
in
jle
cld
ss
jg
cmp
or
mov
adc
add
lock
cwtl
xchg
fs
in
add
outsl
xor
std
cmc
pop
into
les
lods
add
mov
ds
dec
loope
pop
enter
mov
sub
inc
ret
add
and
out
pop
addr16
das
push
push
call
add
pop
add
push
sbbl
mov
outsl
aad
loopne
mov
inc
lret
add
inc
jmp
subl
xor
adc
pop
lret
cmp
lods
inc
mov
pop
or
xor
mov
add
push
lret
pop
into
mov
dec
push
or
mov
mov
sahf
les
and
in
repz
inc
pop
push
imul
xchg
mov
jp
add
mov
daa
sbb
repnz
mov
cs
fiaddl
adc
fisubrs
aaa
add
push
in
pop
inc
shlb
iret
xchg
push
lcall
xchg
out
pop
in
leave
jo
test
fwait
jne
testl
inc
mov
add
jge
hlt
and
fsubrl
add
inc
mov
imulb
shlb
sub
inc
inc
ljmp
cmpsl
sub
add
mov
jno
xchg
fnsave
add
pop
mov
cwtl
xchg
fdivl
jbe
or
add
fdivs
imul
mov
fcmovnb
enter
add
pusha
fs
test
rclb
add
cmpsl
pop
cmp
xchg
pop
mov
xor
int
rclb
mov
pop
ljmp
test
mov
clc
add
mov
mov
dec
xchg
sbb
pop
sarb
add
cli
dec
incb
cmpsl
xor
and
call
jne
pextrw
pop
pusha
inc
push
test
in
out
ret
add
pop
pushf
je
dec
inc
sub
push
scas
ss
js
lds
aad
jne,pn
cmp
insl
pop
sbb
mov
addb
lcall
out
in
sbbl
adc
sub
dec
es
shrb
push
mov
out
fists
inc
sub
add
dec
add
sbb
mov
jl
add
repnz
test
fdivs
xchg
outsb
or
add
add
mov
cmp
pop
add
fsub
jecxz
aam
pop
push
adc
pop
jmp
call
push
add
mov
cmp
xchg
cmp
xchg
or
pop
jecxz
lock
idiv
cmpsl
dec
in
ljmp
je
aas
push
jnp
mov
add
nop
push
sbb
ljmp
sub
std
rcr
in
mov
sbb
mov
pop
out
add
lret
adc
xor
stos
sbbb
inc
push
inc
xorl
pop
pop
add
mov
add
push
inc
mov
lods
or
shrl
subb
mov
ss
cltd
mov
filds
inc
sbb
scas
add
cmp
roll
pop
fidivs
movsl
loopne
das
add
jb
in
pop
jmp
push
outsb
cltd
pop
rcrl
lds
enter
push
insb
testl
or
jl
mov
lret
divb
jecxz
xor
pcmpgtd
add
fwait
idivb
adc
in
and
outsl
sub
pushf
xchg
sbb
rorl
cmpsb
mov
add
lods
adc
pop
cmpsl
inc
mov
out
push
dec
add
inc
fwait
into
add
sbb
es
inc
sbb
popa
ds
push
out
mov
repnz
dec
cmp
in
sbb
pop
mov
and
cmp
lea
add
dec
xchg
test
mov
jmp
ret
inc
pop
enter
idivl
add
mov
sub
arpl
mul
or
add
push
jle
or
fistl
push
pop
in
sub
inc
add
jecxz
dec
jp
and
add
xor
popa
push
add
push
inc
cltd
dec
test
lods
add
inc
lcall
insb
ret
xor
mov
icebp
push
mov
or
xchg
lret
shll
and
cmovnp
mov
push
jle
adc
jns
ss
xor
add
dec
add
mull
inc
decl
add
cmp
pop
add
dec
push
push
hlt
xor
cld
pop
adc
movsl
dec
pmulhuw
addb
imul
inc
push
outsl
mov
sbb
fbld
inc
pushf
loopne
add
sbb
pop
sbb
xchg
lahf
dec
mov
movl
scas
add
jecxz
push
add
cmp
mov
pop
cmpl
aad
xor
adc
xchg
sahf
add
mov
int
loope
leave
nop
popl
xchg
dec
ds
add
mov
xchg
mov
hlt
out
adc
mov
sub
lock
cltd
mov
add
jg
mov
clc
pop
add
mov
sub
push
or
lds
out
rcrb
enter
add
subb
mov
add
bound
nop
xchg
cmp
xchg
mov
xor
push
nop
jb
dec
cmpsb
pop
jbe
movsb
lds
cli
cmp
push
subl
xchg
stos
inc
jl
cli
push
add
lahf
jmp
xchg
rcr
addr16
orb
dec
add
mov
mov
dec
add
cmpsb
dec
inc
add
decl
nop
sbbl
rcrb
mov
cmp
fsub
or
mov
xor
jno
jg
ss
repnz
in
mov
mov
mov
orb
push
rcll
inc
ja
add
repnz
mov
sub
mov
shlb
shr
add
mov
jl
xor
shlb
adc
aaa
dec
mov
fisttps
cmp
pushf
pusha
loopne
out
xor
mov
or
cmp
rorb
jb
cmp
andb
lock
add
lds
out
jg
testl
cltd
sbb
int
fdivs
mov
mov
xchg
pop
mov
adc
or
lahf
fdivr
add
jp
bound
mov
push
mov
cmpl
xchg
das
testb
add
pushf
insl
xchg
dec
add
insb
hlt
add
lods
pop
inc
ds
cmp
xor
add
pop
xorl
cmp
add
dec
pusha
scas
sbb
mov
movsl
test
int3
sbb
fidivrs
or
icebp
mov
shrb
das
gs
shlb
xlat
stos
xor
cltd
add
inc
nop
roll
jbe
pop
cmp
mov
gs
out
push
add
cmp
pop
lahf
add
sahf
lock
mov
xlat
add
mul
add
push
or
std
rcrb
or
pop
cmp
adc
rolb
mov
loope
push
insb
add
xchg
int
dec
imul
sub
xor
popa
jmp
call
add
push
sahf
pusha
push
inc
add
cmpsb
add
xor
gs
push
mov
add
sub
push
xchg
lret
lock
pop
leave
imul
adc
fdivrs
dec
xor
pop
pop
inc
dec
insb
das
xchg
inc
std
sub
jg
cmp
nop
jbe
addl
pop
mov
popa
adc
adc
dec
push
cmp
int3
movsl
sub
add
test
lds
jl
add
shlb
push
dec
dec
lret
add
sub
stos
mov
loopne
push
movsl
ret
insb
jl
repnz
jbe
and
jp
fildl
stos
int3
cmp
insl
aad
add
dec
imul
sub
inc
or
adc
loop
dec
mov
mov
cwtl
out
xor
adc
ja
mov
add
cmc
add
lods
out
adc
js
and
adc
push
jne
jge
shlb
add
sub
mov
dec
xor
xor
fisubrs
add
jns
xchg
shl
icebp
mov
jo
xchg
outsb
sbb
xchg
or
mov
sub
jmp
jle
sub
add
repz
pusha
es
mov
inc
mov
add
std
les
ja
xchg
lds
mov
enter
orl
dec
repz
js
xor
lds
inc
hlt
fmuls
scas
add
repz
adc
call
test
push
repnz
inc
mov
push
or
les
cmpsl
popf
leave
imull
sti
mov
cmp
jne
push
sbb
or
std
pop
cmp
test
pop
fists
jmp
pop
mov
and
insl
inc
rclb
and
push
loope
mov
ja
cmp
and
xor
into
add
ret
repz
aas
jmp
lea
mov
xor
sub
cmpb
xor
int3
mov
adc
adc
iret
lret
test
imul
pop
jbe
mov
andb
orl
or
faddp
outsb
lret
add
je
push
clc
xchg
xchg
outsl
clc
add
mov
cmpsl
pop
and
add
jge
adcl
mov
adc
xorb
imul
pop
push
xchg
xbegin
repnz
lret
cmp
divb
push
inc
add
or
cmpsb
shlb
frstor
shlb
add
fidivrs
and
add
xor
repz
mov
test
rcr
mov
mov
pop
scas
dec
adc
and
sub
roll
imul
lods
fnstcw
enter
add
int
jle
negb
and
dec
decl
filds
mov
pop
xchg
fmulp
xor
pop
add
mov
loope
jp
repnz
stos
cld
cmp
push
lds
es
popf
fisttpl
add
xor
cwtl
or
lahf
pavgb
cld
int
jle
negb
pop
adc
add
out
add
das
adc
in
inc
loop
repnz
pop
lahf
scas
das
hlt
inc
adc
and
nop
cmp
jl
insb
aas
mov
mov
dec
stc
scas
xchg
ret
daa
es
inc
scas
add
jecxz
fcomi
xor
shrb
xchg
sbb
cmc
inc
fisttps
add
loope
mov
ds
or
movsb
es
hlt
sti
jno
ljmp
mov
imul
std
sbbl
xor
xor
xor
push
lock
and
insb
pop
fldt
push
shlb
cmc
xor
cli
push
or
jb
push
cmp
jnp
push
mov
add
dec
cli
and
sbb
lret
ficomps
xchg
nop
mov
insb
cmp
pop
lret
mov
pusha
push
insb
lea
cmc
out
add
ss
push
cli
xor
js
lea
test
push
inc
push
mov
sbbl
stos
lock
test
data16
add
es
fidivs
or
add
int
loope
scas
add
mov
adc
cmp
inc
inc
dec
outsl
push
and
push
test
pop
call
test
mov
mov
inc
and
xlat
adc
repz
ss
je
pusha
mov
push
add
pop
add
pop
out
xlat
dec
icebp
ret
mov
pushf
ljmp
fwait
and
cmp
add
and
addr16
mov
inc
jp
add
outsb
cltd
xor
icebp
inc
aas
cmp
in
push
test
test
xchg
std
loop
pop
mov
xor
fwait
or
rorb
ljmp
enter
xchg
cmp
mov
mov
and
stos
jb
sbb
mov
rolb
out
mov
sete
clc
xchg
jmp
movsl
sub
adc
and
in
mov
enter
cmp
mov
sbb
int3
cld
pop
imul
test
dec
xor
scas
pop
sbb
add
inc
fwait
add
mov
add
ret
lahf
sbbb
aam
imul
js
jns
cmp
hlt
xor
shl
jmp
sub
arpl
nop
mov
andb
lcall
in
leave
sbb
cld
xchg
jp
into
scas
arpl
and
inc
cmpsl
ja
jo
arpl
loopne
mov
rorl
sahf
das
xor
bndldx
push
addb
arpl
push
pop
cwtl
les
mov
xchg
push
adc
push
mov
xor
jae
cmc
and
popf
movsb
lods
fiaddl
jp
ret
add
jb
xchg
push
and
sub
sub
mov
add
sub
push
add
jb
mov
shlb
in
mov
cld
push
mov
push
push
xchg
shll
add
call
sub
pop
pop
mov
inc
pop
insb
or
cmp
loop
xor
cli
rcrb
repnz
testb
mov
push
sub
jbe
icebp
add
push
fstps
outsl
and
lahf
add
leave
and
mov
lret
mov
dec
data16
bound
arpl
loope
js
scas
aaa
cmpsb
ja
xchg
orl
xor
pop
adc
imul
sub
scas
add
inc
loop
cmpb
jmp
ret
roll
insb
xor
sbb
add
inc
add
xchg
orb
lea
aam
mov
jmp
sbb
daa
add
push
iret
mov
stos
decb
jne
add
mov
sbb
pop
inc
lea
into
dec
adc
push
xlat
jns
pminub
data16
adc
je
cwtl
mov
jp
rorb
maskmovq
mull
or
sub
mov
ss
or
ret
lret
add
call
addb
mov
fbstp
std
out
sarb
jb
inc
pop
inc
cwtl
mov
das
fimull
adc
pop
je
out
in
dec
mov
test
add
movsb
jns
add
mov
lret
add
jle
test
inc
mov
add
rcl
push
pop
imul
add
out
repnz
loopne
lods
inc
pop
cmpsb
jno
jo
pop
mov
in
pop
shll
leave
dec
inc
jbe
jb
cltd
or
cmc
push
add
push
roll
push
rol
cmp
mov
add
popa
xor
add
out
or
add
mov
and
cmp
and
lret
cmpsl
sbb
xchg
add
das
pop
popf
jb
inc
add
push
in
jns
mov
outsl
adc
ljmp
adc
imulb
inc
andb
push
add
push
jg
add
or
or
dec
cmp
jg
adc
daa
lds
movsb
jo
mov
pusha
mov
sub
fnclex
int
cmp
ret
or
out
cmpsl
add
testl
add
mov
arpl
insl
pusha
into
ficoms
lds
lahf
or
pop
sahf
dec
and
or
js
cmp
add
les
add
xor
inc
out
mov
xor
lods
popf
jae
push
add
insl
push
enter
cltd
inc
sub
xor
add
inc
pop
xor
add
out
add
jmp
xor
ss
adc
push
leave
out
xchg
aas
push
mov
hlt
xor
or
mov
dec
fs
pop
jecxz
push
cmp
push
pop
testb
cmp
pop
mov
push
mov
pop
add
xchg
nop
lds
out
sbb
push
js
loop
loope
jae
js
mov
lahf
add
push
mov
cld
int
sub
sub
je
lods
add
or
cmc
xchg
xor
mov
test
xchg
mov
mov
mov
dec
out
cltd
push
mov
lahf
psrld
test
outsb
fsubs
repnz
stos
lret
pop
pop
adc
xchg
adc
lods
mov
push
pop
lock
mov
add
sbb
sub
add
test
inc
push
adc
xchg
cmpsl
push
mov
cmp
or
shrb
xor
mov
rclb
ds
aad
loop
js
add
out
inc
sbb
addl
cmp
add
out
lods
jae
and
loopne
sub
pop
dec
push
cmp
cmpsl
loopne
dec
sti
push
lock
add
aaa
mov
add
sbb
mov
push
push
cmp
dec
nop
nop
cmp
add
jecxz
fmuls
push
mov
cmpsl
add
nop
ss
pushf
mov
xchg
push
add
xor
xchg
lret
out
xor
and
xor
push
inc
mov
add
push
sbb
cwtl
lds
jmp
shr
pop
add
mov
xchg
add
bound
inc
and
sbb
hlt
xor
add
popa
jl
inc
rcrb
jge
idiv
jb
xchg
je
add
loope
insb
dec
andl
pop
xchg
shrl
jp
sbb
cmpsb
or
add
adc
andl
shlb
sbb
mov
loop
jp
fs
mov
mov
mov
xchg
jns
icebp
dec
pop
insl
dec
add
daa
jo
fiaddl
pop
sbb
push
jb
out
add
aas
scas
jae
in
add
push
push
out
aaa
jo
or
adc
ss
aam
add
xchg
pop
pop
loopne
and
add
jmp
popl
add
hlt
add
frstor
mov
movsl
pop
pop
adc
inc
aam
jbe
add
fcompl
or
jecxz
shlb
jno
stc
mov
fstps
cmc
jo
cmp
imul
mov
addr16
sub
or
xchg
dec
push
pop
lock
incl
adc
gs
xchg
lods
push
repz
ljmp
hlt
ret
add
sarl
rcr
pop
add
popl
movsb
add
xchg
inc
leave
xorb
das
xchg
sub
pop
fistpll
jo
dec
fs
pop
add
jp
push
outsl
and
fiadds
mov
jns
stc
push
std
test
or
jg
in
cmp
jmp
cmpsb
add
and
dec
jmp
scas
jmp
leave
popf
xorb
cli
cmp
push
and
push
adcb
ret
xchg
into
fidivrl
adc
inc
push
add
and
movsl
bt
loopne
xchg
push
push
jge
sbb
repnz
sub
jecxz
adc
pop
sbb
add
push
and
jo
outsb
pusha
add
mov
addl
cmpsb
out
and
outsb
push
int3
jo
pop
daa
lock
add
dec
test
jp
aad
add
scas
jge
movsb
adc
mov
push
movsl
push
loope
xchg
inc
out
pop
subb
fdivrl
add
push
fwait
addl
push
xor
nop
sahf
sbb
mov
mov
scas
mov
pop
add
repnz
es
loopne
dec
movb
out
sbb
loope
xchg
or
das
ret
daa
call
push
pop
jns
pusha
mov
rcrb
inc
orl
mov
or
pop
lock
sahf
out
lret
stc
xchg
mov
lds
pop
imul
testl
scas
cmpsb
add
test
rclb
hlt
jno
fistl
push
pop
fsubrl
xchg
sahf
dec
sbb
ljmp
mov
sub
cmpsl
sahf
addr16
or
mov
hlt
adc
sarl
add
mov
cli
enter
add
sub
lods
jo
add
inc
fdivl
bound
add
adc
fimuls
add
xchg
and
cmp
or
jmp
add
mov
fcomi
clc
enter
sub
sbb
stc
mov
add
cmp
mov
add
popf
loop
lods
sbb
pop
out
mov
outsl
lret
inc
mov
adc
jb
imul
push
push
scas
cmp
adc
add
add
jo
mov
setnp
pop
inc
int3
ds
adcb
mov
in
xor
rol
push
jo
add
dec
mov
pop
subb
negl
push
in
mov
cmpsl
cli
add
sbb
sub
xor
mov
roll
aaa
inc
mov
sysexit
pushf
sarl
shlb
hlt
add
daa
cmp
xchg
push
add
jg
in
inc
add
xor
or
addr16
add
inc
xchg
push
adc
push
xor
dec
add
add
fdivs
add
xor
testb
iret
mov
enter
sarl
fsubrl
mov
mov
add
clc
daa
in
fwait
push
mov
incb
bound
xchg
push
dec
fdivl
pusha
xor
add
mov
es
loopne
mov
rcll
push
movsb
add
repnz
repz
jmp
popf
popa
mov
sbb
sbb
mov
in
rorl
mov
movsb
das
test
mov
pop
add
aad
pop
jne
cli
jno
cmp
addb
lar
jmp
cmp
push
lds
cmp
cmpsl
sub
pop
mov
add
leave
jbe
inc
lcall
fsts
sbb
pop
xor
or
inc
pop
sbbb
loopne
xchg
lods
imul
add
dec
sbb
sarl
push
movsl
lods
test
add
xor
sbb
insb
pushf
test
cmp
lret
les
pop
aam
cs
jle
and
lret
ret
add
xchg
push
inc
inc
outsb
add
fiaddl
cmp
jecxz
pop
mov
or
outsb
mov
test
add
out
ret
dec
pop
sbb
hlt
mov
jg
jo
jle
add
and
insl
daa
loopne
push
cwtl
cmpl
or
sub
cmp
and
inc
mov
cmp
xlat
arpl
leave
icebp
add
pop
lcallw
cwtl
aad
std
adc
inc
add
cmp
push
add
mov
add
iret
mov
push
add
add
fildl
divb
dec
es
xchg
push
mov
lock
pop
mov
in
ja
add
cmpsl
pop
sbb
xchg
mov
mov
orb
fcoms
jb
cmp
cmc
sti
mov
add
push
mov
cmp
mov
add
mov
pop
cmp
mov
xchg
sub
add
cmpsb
loop
fsubrl
loopne
add
pop
idivl
cld
add
jecxz
inc
mov
ds
es
das
inc
or
leave
dec
pop
lahf
add
jb
jmp
push
hlt
aam
test
dec
cmc
push
or
fisttpll
sub
lods
imul
add
pop
data16
push
loopne
xorb
xchg
mov
add
and
and
hlt
mov
cmp
or
andb
add
pop
mov
ja
out
ret
adc
loope
rolb
add
call
add
loopne
pop
into
xor
adc
xchg
aaa
pop
testb
nop
or
imul
fsubs
cmp
push
pop
mov
imul
loop
movl
add
nop
add
mov
mov
test
pop
les
push
sbb
rclb
adcl
ficoms
ffree
ret
mov
add
sbb
pop
gs
add
cltd
sub
and
mov
add
pop
fucomi
add
adc
push
add
mov
lret
inc
rorb
pushf
add
mov
xor
pop
std
jp
pop
inc
clc
xchg
push
insl
mov
cmp
jno
movsb
out
xor
lods
add
mov
inc
add
ljmp
into
jo
mull
popl
popf
sarb
sub
add
sbb
mov
jecxz
xor
mov
cmpsb
jno
in
mov
rcll
or
mov
loop
mov
pop
int
aas
inc
push
dec
enter
sbb
pusha
rol
pop
icebp
test
mov
dec
popa
fxam
jmp
sbbb
xor
stos
mov
into
mov
cld
fsubs
cmp
pop
dec
es
dec
loopne
add
jnp
jns
jp
mov
sbb
sahf
lds
aad
sbb
sub
or
add
inc
ja
adc
xor
outsl
ss
rcrb
push
cmp
cmpsl
cmpsb
and
mov
dec
push
cld
je
add
adc
mov
clc
cmp
sbb
sub
cmp
sub
inc
add
test
add
lahf
mov
clc
pop
subl
cltd
cmp
in
pop
sbb
rcrl
fs
cmp
jecxz
xchg
scas
push
add
data16
adc
add
dec
xor
jmp
sbb
jne
jb
fnsave
int3
add
xchg
aaa
add
test
out
call
cli
adc
push
jl
pop
das
cmp
ret
test
xchg
and
movsl
hlt
cmpl
jne
subb
shll
push
in
add
outsb
add
jl
xchg
add
mov
sub
cwtl
push
lods
loop
add
mov
xchg
pop
add
es
inc
mov
mov
lock
and
add
dec
xchg
aad
xchg
add
jnp
les
arpl
push
xchg
add
cs
in
in
scas
add
ret
jmp
aaa
jecxz
xchg
pop
fmuls
jp
sub
inc
and
cmp
adc
es
cmp
divb
je
jno
add
push
push
jne
push
pop
dec
sahf
popa
iret
dec
pop
add
test
add
mov
push
pop
mov
rcr
aaa
ljmp
pop
add
dec
jle
add
cmpsb
je
push
push
mov
xchg
add
dec
pop
dec
lahf
test
pusha
ljmp
adc
gs
sbb
sahf
es
insb
add
xorl
sub
test
sub
add
in
add
xor
shll
std
pop
dec
jmp
in
sbb
add
adc
cmp
xchg
movsl
rolb
mov
insl
sub
add
lock
arpl
inc
test
cs
gs
inc
and
das
sbb
inc
and
adc
sbb
test
add
and
jmp
add
sbb
add
cli
sti
sub
sbb
xor
ljmp
rcl
adc
test
sub
testb
push
add
add
mov
ficompl
ljmp
je
bound
call
add
lds
xchg
push
xor
sub
jg
cmp
jns
or
pop
sub
jae
cwtl
add
xor
dec
mov
lods
mov
pop
gs
sub
xor
lock
xchg
sub
lods
adc
call
fistl
add
push
mov
stos
add
cmp
lea
add
xor
loope
loopne
nop
add
repnz
push
and
or
pop
or
cmpb
je
add
inc
lahf
mov
and
mov
cmp
cmp
pop
cmp
add
xchg
loopne
mov
mov
dec
jge
pop
mov
inc
or
xchg
xor
lods
jae
add
repz
outsb
inc
and
jp
pop
lret
adc
cmc
adc
inc
mov
and
mov
call
stc
pop
xchg
fnstcw
icebp
fisubrl
sub
adc
and
lods
push
mov
add
rorl
jns
daa
shl
movl
shl
mov
sbb
clc
std
or
orb
xor
push
mov
repnz
repz
scas
cmp
add
jns
or
outsl
push
call
rolb
sbb
add
jg
and
sbb
out
in
mov
add
mov
sahf
add
lods
dec
je
scas
inc
add
xchg
nop
test
pop
addr16
add
mov
cmp
rdtsc
pop
xor
pusha
orb
call
scas
nop
int3
fdivs
pop
or
les
int3
dec
xchg
push
add
mov
stos
pop
ja
adcb
add
leave
repz
cmpsl
lock
int3
add
clc
mov
add
ljmp
ja
aas
cmpsb
sbb
outsl
sti
test
mov
pop
mov
inc
popf
add
dec
mov
add
adc
cli
add
mov
movsl
cmp
sub
jo
pop
lock
aad
std
loop
inc
nop
xlat
repnz
ja
add
outsb
int
or
mov
test
add
pop
cli
lea
faddl
adc
outsb
fldcw
mov
add
sbb
jns
ret
std
enter
add
je
mov
int
mov
call
inc
push
test
ja
cmpb
fcoms
jl
xor
add
cmp
sbb
sbb
mov
sub
push
aaa
nop
roll
push
and
jo
cld
add
or
mov
fisttps
or
mov
add
in
sbb
std
mov
fdiv
dec
add
sarb
cmc
sub
xchg
mov
es
add
clc
jg
out
or
mov
repz
inc
mov
jnp
sub
cwtl
stos
in
divl
pop
add
rorl
and
loopne
in
cmpl
xlat
adc
lods
enter
arpl
cmp
scas
add
mov
lock
loope
and
add
cld
adc
sub
cmpsb
fwait
jns
fadds
or
clc
xchg
lods
test
jge
pop
inc
fisubs
xor
xlat
mov
add
int3
decl
or
outsl
jo
test
mov
std
scas
fdivrs
pop
call
in
add
mov
xor
mov
fistpll
xor
ja,pt
jae
aaa
in
jo
insl
add
orps
xor
mov
inc
lods
les
loope
mov
dec
add
jo
add
mov
add
cmpsl
mov
stos
pop
pop
sbb
sub
and
xchg
pop
mov
adc
bound
jns
aas
add
fs
add
wrmsr
pop
mov
inc
jo
nop
ja
sub
jl
mov
mov
mov
sbb
push
push
dec
mov
fldt
add
stos
fcom
xor
lods
xchg
or
adc
push
repz
xchg
or
int3
stos
movb
lret
push
push
testb
inc
push
insb
jns
cmp
dec
subl
pop
aaa
add
or
mov
repz
loope
jmp
pop
cmp
enter
sti
jo
pop
imul
sbb
mov
cmp
test
jmp
xlat
sub
shll
add
lcall
mov
xor
sbb
shrb
enter
add
icebp
fcoms
movsb
fprem
push
add
mov
add
dec
adc
andb
xchg
das
jecxz
mov
mov
pushf
test
push
scas
sbb
shrl
add
ret
in
js
jns
or
xor
jge
mulb
movsb
or
cmp
and
leave
add
in
repnz
pusha
pop
pop
sub
mov
ss
dec
cmp
push
fld
jecxz
sti
andb
and
sub
cmpsl
sahf
adc
sbb
mov
mov
int3
cmp
jp
jg
add
jno
repz
iret
lea
adc
mov
adc
inc
imul
cmpsb
inc
pop
fcmovb
adc
outsb
cmp
fiadds
sub
test
shrl
int
ret
add
sbb
sub
pop
addl
dec
aad
sbb
push
add
fsin
int3
jmp
add
mov
inc
andl
sub
loope
lods
nop
mov
out
andl
sarb
lock
add
pop
ss
pop
sbb
and
testl
add
pop
nop
adc
mov
ja
hlt
movsl
sbb
out
popf
lods
add
cmc
pop
pusha
aam
cmp
es
xor
or
xorl
push
add
mov
pop
add
push
jae
pop
mov
es
jmp
daa
adcl
add
adc
clc
in
or
jmp
in
sbb
lock
xor
cmpsl
and
cs
mov
int3
icebp
aad
fs
dec
and
dec
and
movntq
pop
mov
sahf
orb
jb
inc
jo
add
outsl
ss
sti
shrb
and
mov
and
in
mov
mov
xchg
jo
mov
jle
insl
shlb
mov
cmp
aam
dec
sbb
mov
pcmpeqb
pop
add
dec
cmp
or
xchg
mov
pop
add
pop
inc
inc
mov
lret
lea
das
fisubl
and
add
mov
cmp
cmp
dec
cwtl
sbb
or
push
add
and
clc
or
cmp
orl
pusha
push
adc
movsb
pop
add
add
subb
es
data16
xchg
cld
push
mov
add
pushf
cmpsw
push
xor
adc
dec
add
mov
nop
lock
add
in
popf
inc
in
pop
mov
jmp
jno
test
add
aad
jp
mov
add
loope
hlt
mov
sbb
pop
fwait
cmp
imul
mov
pop
fiadds
push
xlat
mov
or
add
ljmp
jecxz
in
insb
push
sub
in
lods
jl
add
jbe
mov
add
xchg
fldcw
add
aad
movsl
push
dec
int3
push
cli
adc
or
nop
sbb
sahf
into
xlat
add
push
mov
fidivrs
jl
lods
imul
xchg
ljmp
add
push
mov
andb
fiaddl
iret
add
push
cmp
and
mov
test
add
fdivl
pop
leave
inc
call
cli
in
add
adc
add
add
in
mov
insb
outsl
push
xchg
repnz
push
pushl
test
dec
std
jp
add
and
inc
popf
dec
leave
add
out
fdivs
fnstsw
mov
cwtl
inc
jg
or
add
loope
mov
fcompl
enter
sbb
daa
shlb
or
test
mov
rorl
xchg
movsb
mov
adc
shl
dec
mov
cmp
pop
shrb
xchg
jmp
cli
loopne
inc
add
push
cmp
add
clc
fdivrl
jbe
fucomip
fs
les
pop
into
mov
cmp
stc
inc
add
bound
lret
add
xchg
nop
or
xorb
fwait
xchg
mov
add
sub
sub
ret
repz
dec
iret
add
loope
sarb
mov
push
pushf
adc
xor
shrb
adc
sub
ret
sub
cmp
jle
and
int3
clc
add
subl
in
pop
inc
pop
and
rcll
mov
aam
push
add
xchg
bound
nopl
xor
imul
mov
out
sti
clc
mov
xor
pop
jne
cmp
imul
pop
into
js
cwtl
jge
add
pop
scas
push
pushf
inc
out
add
pop
test
adc
mov
das
jl
repnz
add
sub
dec
and
hlt
jecxz
test
addl
dec
sbb
pop
aas
push
add
ret
xor
jo
jge
mov
dec
inc
mov
int3
ret
mov
cmp
testl
add
pop
lods
inc
push
cmp
dec
cmp
inc
add
aam
cmc
xchg
enter
mov
lods
test
inc
jb
shrb
dec
inc
jno
push
xor
outsb
sub
and
cmp
jle
js
or
loopne
ja
jo
shrb
pusha
add
and
sbb
xchg
sub
sbbl
add
pusha
jg
lock
in
add
sub
and
add
push
push
into
add
outsb
inc
mov
shlb
loope
seto
and
push
imul
aad
jae
cmp
xchg
dec
in
add
mov
inc
jo
jns
adc
ret
test
xchg
cmpsl
out
pop
lea
add
push
pop
mov
das
insl
xor
xor
stos
insb
add
in
push
fdivrl
push
shlb
js
icebp
hlt
pusha
xor
fs
ret
test
and
int3
push
mov
jnp
add
push
mov
mov
jne
mov
fistpll
add
and
loope
enter
xor
mov
nop
cmovl
out
movsl
add
add
ret
push
mov
das
cmpsl
sbb
lods
add
mov
faddp
mov
hlt
testl
xor
addl
popa
dec
or
pop
std
xchg
fildll
lods
xor
xor
jns
addr16
insb
pusha
dec
js
or
jge
inc
test
and
in
or
aaa
jge
add
es
das
loopne
pop
or
rorl
mov
push
xchg
mov
xor
cmp
jp,pn
ljmp
cmp
aaa
sbb
mov
leave
mov
dec
push
push
js
or
mov
xlat
sbb
dec
orb
shlb
mov
cmp
adc
sub
mov
xchg
pop
loope
add
push
hlt
inc
dec
imul
sbb
shrb
add
push
dec
mov
sbb
sub
jmp
popf
pop
cmp
out
out
add
icebp
call
xorb
and
add
xor
xchg
sti
in
pushf
fldt
mov
cli
call
decb
cmp
cmp
lret
test
mov
sub
jg
in
xor
xchg
pop
fdivs
cmp
mov
imull
sbb
push
add
stos
call
inc
add
and
add
push
or
pop
push
movb
jo
xchg
push
push
js
and
or
and
cmp
es
js
mov
sarb
std
dec
outsb
pop
pop
xor
inc
cs
mov
pop
add
inc
outsb
les
lea
iret
rclb
daa
mov
divb
es
rclb
or
push
aad
in
fadd
xchg
mov
and
fiadds
add
es
lea
ljmp
daa
jg
pusha
clc
adc
inc
mov
add
and
movsl
cmp
loope
lahf
inc
cmp
pushf
call
repnz
add
popa
jmp
dec
vpunpckldq
add
lods
cmpl
cmp
sbb
insl
enter
data16
add
in
inc
dec
gs
push
add
fdivl
sub
and
pop
les
push
subb
scas
push
arpl
pop
dec
adcl
orl
lea
outsl
push
xor
xchg
addr16
test
push
inc
movsb
lock
adc
lods
sbb
push
add
push
popf
lds
push
nop
aam
add
inc
pushf
inc
lcall
in
xorb
in
je
cmp
mov
mov
jle
repnz
and
cld
inc
ljmp
dec
iret
fcoms
cmc
mov
xor
xor
add
mov
dec
push
cmpsl
xchg
sub
mov
pop
add
adc
sbb
push
jbe
movsl
neg
add
imul
outsb
hlt
jns
push
mov
mov
push
aad
push
testl
jl
or
dec
add
call
aaa
adc
insb
sti
fdivrs
add
inc
es
imul
push
or
leave
push
mov
and
std
xchg
or
sbb
add
sbb
or
or
mov
push
lcall
adc
sub
jnp
leave
call
shrb
icebp
sub
add
cwtl
arpl
out
mov
mov
inc
cmp
push
fs
add
inc
or
sub
push
lods
inc
cmp
scas
fucomip
jp
sbb
inc
rolb
addl
adc
and
fadd
dec
adc
add
xchg
mov
push
jae
adc
icebp
inc
repnz
pop
pusha
add
inc
push
and
lcall
pop
sahf
add
and
add
push
and
negl
insb
pop
jns
add
fisubs
adc
cld
je
and
add
jmp
rclb
adc
into
or
xlat
testb
cmp
rorb
add
movsl
mov
daa
add
imul
stc
pushf
fwait
and
into
inc
add
fcmove
repz
js
xchg
xchg
leave
test
shll
mov
cmp
sbb
out
ror
fs
repnz
insb
mov
or
push
add
les
sbb
pop
scas
adc
jno
and
dec
jo
mov
bound
xor
mov
mov
leave
push
sub
cli
push
sub
or
cld
add
sbb
rorl
jne
das
mov
js
pop
clc
cmp
out
lods
je
push
ljmp
inc
test
dec
repnz
add
and
data16
jmp
fwait
jmp
cwtl
fldenv
sahf
add
lahf
jl
and
push
and
fbld
xorb
adc
and
dec
add
movsb
xchg
jle
push
dec
cmp
and
sbb
je
add
inc
iret
xchg
cmp
xchg
push
out
stos
and
pop
sub
negb
xchg
lret
notl
mov
ret
fwait
movsb
add
cmp
inc
add
fs
adc
stc
rol
jnp
jo
mov
mov
push
push
jle
xchg
or
int3
add
fimull
inc
int
xchg
sbb
inc
cmp
adc
add
add
sbb
cmc
mov
dec
mov
loopne
and
or
in
xchg
xchg
cwtl
inc
add
out
jbe
sub
les
pop
dec
mov
mov
mov
add
or
out
arpl
int3
pop
cld
outsb
enter
and
mov
add
lods
ja
pusha
subb
push
sbb
les
xor
push
adc
popf
and
mov
mov
sbb
jmp
push
add
je
mov
add
dec
hlt
mov
pop
push
add
insb
inc
cmpsb
rolb
popf
aaa
leave
xchg
mov
xor
sub
pop
pop
out
arpl
add
dec
mov
push
out
in
adc
test
popf
rcrl
adc
and
stc
sarb
inc
bound
ffreep
in
outsb
outsl
icebp
add
ljmp
mov
dec
add
in
push
jo
cmp
jno
lcall
leave
pop
pop
in
insl
pop
mov
adc
scas
nop
das
std
mov
shll
outsl
xor
loope
push
mov
xchg
and
mov
cmp
and
add
sbb
ja
xor
cwtl
lret
fsubrs
movsb
in
adc
pusha
cmp
push
xchg
cmpsb
mov
pop
imull
lret
jmp
roll
movsl
xchg
mov
aad
jae
or
mov
ret
hlt
sub
or
jne
testl
sub
jnp
add
ficomps
push
rclb
add
dec
aam
xor
add
mov
inc
push
xor
mov
xor
or
stc
mov
out
gs
adc
pusha
out
or
repnz
dec
dec
daa
fdivrl
sbb
cwtl
cli
sbb
cs
rolb
pusha
inc
data16
xchg
rsm
cmpl
jbe
fmull
and
inc
mov
xlat
add
sti
adc
mov
leave
jl
ja
mov
aad
rcrb
shl
cmpb
cmp
scas
adc
sarb
cmp
jmp
inc
cmp
sti
int
pop
into
jae
insb
cmp
push
shll
repnz
or
add
inc
idivl
sub
hlt
lcall
or
pop
push
mov
iret
and
jl
add
in
add
or
or
shrb
or
adc
mov
stos
cmp
sub
pop
jae
pusha
cli
loop
cwtl
orl
sub
je
adc
lds
and
jne
add
cmp
or
arpl
jo
add
push
fdivrp
mov
add
sub
fwait
sbb
cmpl
xchg
pusha
adc
mov
lcall
loop
pop
lret
add
add
xor
fiaddl
cwtl
mov
push
jle,pt
add
mov
movswl
add
xchg
inc
jb
int3
xlat
ret
or
add
mov
lcall
add
sbb
popa
mov
add
movsb
and
aam
jecxz
fisubrs
out
xorb
add
mov
mov
icebp
add
sbb
out
mov
or
ljmp
xchg
jge
push
ss
mov
shll
jb
and
jnp
hlt
loopne
add
test
ljmp
pop
cmp
popf
or
subl
sub
sahf
lcall
jns
mov
add
mov
scas
jge
mov
sub
inc
aas
orb
rorb
add
jl
push
sub
jne,pt
push
sti
sub
js
rcrb
inc
sub
aas
add
dec
shrb
mov
or
jecxz
mov
mov
ret
cmpsl
stos
arpl
pusha
sub
insl
pop
add
mov
les
pop
popl
pusha
shr
pmaxsw
push
xchg
fists
lods
sub
add
out
enter
and
out
or
loope
adc
movsl
mov
stos
add
outsb
mov
sti
call
je
lcall
inc
fstps
mov
lahf
fwait
lcall
xor
jmp
lret
fiadds
push
fistps
lock
mov
inc
aaa
xchg
mov
pop
mov
enter
incl
aaa
addl
insl
push
in
fdivrp
fwait
pop
xor
xchg
dec
movsb
lret
jl
dec
mov
ljmp
mov
cld
mov
and
push
out
pop
int3
js
add
pop
add
mov
aaa
jb
in
out
iret
inc
add
cmpsl
mov
daa
push
cmc
mov
adc
or
dec
andb
xor
xchg
pop
cltd
jno
into
arpl
hlt
or
roll
fmull
or
sub
add
mov
rcl
fisubl
enter
pop
pop
mov
add
adcb
pop
dec
cmp
nop
pop
xor
xor
in
xchg
loopne
mov
push
dec
jbe
repnz
inc
xchg
sbb
add
lods
cmpsb
stc
add
lds
add
add
cmpsl
addr16
add
and
push
add
inc
xchg
mov
je
add
push
add
fiadds
mull
loop
das
aas
add
movsb
lods
sbb
jb
shrb
push
imul
test
pusha
test
mov
inc
insb
pop
mov
add
or
pop
scas
aad
shlb
pop
stos
loope
cmp
cwtl
xchg
inc
mov
add
loopne
cmp
add
and
sbb
mov
push
sbb
repz
pop
cwtl
js
xchg
ss
std
jge
mov
or
jle
push
out
pop
add
das
fcmovnu
jns
insl
stos
add
xorb
hlt
mov
or
sbb
adc
add
cld
dec
xlat
negb
xchg
cmp
shrl
inc
add
xchg
sub
aam
popa
stos
add
mov
fdivs
lock
pop
sub
iret
pop
push
xor
out
das
mov
cmp
enter
arpl
adc
adc
testb
dec
pop
ds
fwait
add
int
sbb
dec
sbb
push
xor
adc
add
jne
mov
scas
xchg
dec
ja
add
pop
or
add
subb
add
jne
mov
adc
call
lods
push
push
mov
cs
mov
inc
in
pop
scas
cmp
je
adc
clc
mov
pop
jge
adc
cmpsl
push
push
mov
mov
lods
mov
cltd
rcrb
lods
les
test
pop
sbb
faddl
mov
mov
xor
jmp
lahf
pop
imul
fildll
push
ret
add
loopne
test
out
lock
jle
add
and
ljmp
dec
cmp
out
out
ds
int
cli
aam
sbb
out
mov
cwtl
add
mov
out
push
cli
loop
mov
add
cs
nop
or
xchg
cmpsb
push
imul
movsb
sub
rclb
addr16
dec
mov
dec
outsl
xchg
pop
bound
mov
lea
pop
sar
mov
outsl
fldenv
sbb
add
or
add
and
test
imul
mov
pop
push
push
das
pop
loopne
push
mov
dec
dec
adc
jnp
rclb
add
and
fwait
lret
add
jecxz
jg
out
subl
mov
dec
adc
fucomi
enter
out
mov
enter
push
push
push
add
jmp
std
arpl
sbb
mov
outsb
or
arpl
fimull
add
adc
arpl
or
mov
push
jecxz
call
lock
add
mov
ja
add
xchg
imul
xchg
adc
out
sbb
adc
roll
lods
jmp
jno
adc
jle
mov
pop
inc
out
xchg
cld
mov
and
loopne
mov
je
stos
aas
adc
or
mov
dec
inc
push
repnz
fiadds
mov
dec
pop
testl
xor
daa
sbb
sub
or
jbe
ds
sub
or
fstl
int3
shrb
jg
loopne
jb
xchg
int
inc
aas
push
or
jmp
pop
pop
lods
fldl
repz
int3
add
push
fmuls
fstl
popl
addb
das
shlb
imul
test
or
cld
stos
fs
test
sbb
sub
int3
mov
std
mov
cmpsl
cmp
mov
xorb
mov
sbb
arpl
xor
sub
stos
mov
and
inc
and
inc
mov
and
or
push
repnz
in
test
jl
sbb
push
mov
into
pop
xchg
add
pop
cmc
scas
sahf
push
add
das
movsb
add
inc
jb
add
cltd
push
pusha
xor
and
mov
ret
mov
add
jns
pop
xchg
sub
pop
cmp
or
test
add
add
mov
xchg
inc
and
js
cmp
std
sub
int
mov
lret
imul
comiss
mov
out
cmp
ds
fstpt
xchg
hlt
xor
jo
push
or
cmp
shrl
ficoml
jmp
scas
xchg
jbe
incb
xor
fcomps
icebp
jp
add
inc
jmp
pop
jnp
add
xchg
mov
lcall
mov
inc
mov
xor
scas
xor
dec
cwtl
cmp
xor
mov
or
fcmove
cmp
cmp
sar
add
or
add
xchg
or
je
test
mov
mov
lods
ljmp
movl
nop
movsl
sbb
es
pop
fdivs
mov
xor
je
mov
add
fs
filds
rcrl
outsl
dec
pop
and
in
adc
push
sbb
mov
xchg
into
jae
jne
push
add
add
stos
add
imul
fcompl
add
adc
mov
and
popa
add
outsb
sbb
fmull
sbb
iret
std
aad
mov
mov
int
hlt
subl
test
es
lcall
imul
iret
pop
out
ljmp
lock
xor
pusha
call
jmp
cmp
stc
or
lock
xor
xlat
sub
cmp
lock
jno
adc
or
push
popa
xor
aam
mov
sub
inc
fnstcw
test
or
cmp
inc
and
mov
xorb
add
adc
pop
call
push
cmc
or
cmp
mov
mov
inc
call
dec
dec
add
jmp
mov
lock
cld
mov
inc
popa
push
icebp
mov
ret
dec
xchg
mov
add
daa
in
add
sbb
add
pusha
fistps
add
lret
outsl
push
mov
add
add
pop
xchg
pop
add
adc
add
daa
imul
jge
push
bound
mov
push
cmp
or
push
loopne
sub
add
flds
cmc
or
cmp
in
jo
and
fsubl
push
int
and
mov
testb
cmp
dec
fs
setnp
pop
aam
add
lcall
add
jno
insb
adc
int3
icebp
inc
xchg
fs
xchg
ds
mov
in
and
repz
andb
adc
push
inc
movsl
pop
xor
mov
sub
add
lret
cs
ss
add
aaa
push
inc
push
pop
pop
pop
data16
or
mov
clc
inc
pop
mov
arpl
aas
pop
adc
xor
sti
ja
js
mov
out
filds
mov
out
jns
daa
sbb
adc
roll
cs
lods
mov
es
inc
push
lcall
imul
cmpl
mov
addb
adc
mov
add
out
lods
mov
ss
call
add
cmpsb
adc
addb
add
int
sub
insb
pop
adc
or
xlat
cmp
aas
xor
gs
pusha
mov
in
std
xor
sbb
add
inc
call
add
adc
mov
roll
pop
je
add
xchg
test
test
jo
icebp
xor
push
or
push
or
iret
scas
mov
pop
cs
xlat
lcall
xor
aad
adc
add
dec
outsl
std
add
jbe
sbb
mov
inc
sbb
rorl
sbb
das
iret
xchg
inc
andl
add
fists
and
xor
pop
fwait
leave
lds
cmp
add
push
stos
std
mov
call
loope
add
xor
add
mov
jbe
push
fisttpl
or
int3
out
dec
dec
test
add
sbb
sub
mov
cmp
jmp
loopne
les
nop
add
repnz
mov
addr16
mov
out
ss
int3
in
daa
add
adc
xchg
mov
hlt
scas
jb
fwait
xchg
add
std
mov
add
cltd
divb
test
test
jle
sbb
mov
stos
add
je
and
cmp
in
aam
jecxz
leave
mov
bound
xchg
call
nop
add
int3
sub
inc
jp
or
xchg
dec
js
push
fildll
data16
loopne
jb
in
gs
ljmp
sbb
xchg
sub
xor
popf
xchg
add
idivl
xor
inc
add
sarl
call
fwait
jnp
or
mov
andb
lret
sbb
mov
fisttpl
into
cmp
and
addl
aam
push
pop
es
inc
sbb
push
and
add
call
mov
add
rcrl
in
cmp
aam
cmp
ds
xchg
clc
lods
outsl
add
and
mov
mov
xchg
jle
add
inc
lret
stos
sub
add
mov
loope
or
xchg
data16
daa
mov
adc
xor
sar
push
add
sbb
mov
xchg
add
jo
cmp
fimuls
fbld
fptan
or
stc
jle
add
xchg
pop
and
je
jnp
cli
pop
add
out
shrb
adc
in
outsl
jecxz
or
inc
rol
cmp
ret
popf
rclb
sahf
jno
push
lock
dec
add
mov
mov
xchg
inc
xor
pop
add
jb
inc
ficompl
je
xorl
popf
jbe
cmp
or
fbld
sbb
sbbl
leave
mov
lret
mov
push
sub
js
push
add
mov
leave
add
sub
mov
lock
add
or
or
in
outsl
test
insl
sahf
cmp
adc
popf
or
ljmp
mov
insl
add
lret
fidivl
adc
add
or
mov
jns
pop
inc
or
mov
out
and
sub
or
pop
xorl
push
in
add
test
dec
shll
push
inc
les
cwtl
adc
sahf
addl
or
inc
pop
dec
pop
pop
pop
jno
movsl
incl
insb
add
mov
pusha
je
mov
mov
jecxz
in
push
inc
orb
mov
pop
inc
cmpb
and
test
xor
add
adc
in
add
dec
or
inc
xor
adc
pop
sub
add
add
push
and
aam
dec
adc
push
add
aas
and
popa
and
pop
push
add
mov
out
aaa
inc
sbb
xchg
add
fidivs
cmpsb
sbb
inc
inc
add
inc
andb
pushf
add
loop
fisttps
fcompl
jo
insb
mov
pop
xorl
lea
loopne
inc
ror
xchg
je
add
mov
xchg
dec
cld
int3
or
fistl
leave
mov
add
mov
sarl
mov
mov
pop
popa
dec
pop
mov
mov
jg
sbb
mov
data16
std
in
outsl
cmp
or
pop
out
fisubrl
js
mov
sbb
aam
andl
pop
pop
pop
lock
add
mov
mov
push
pop
call
jno
pop
sub
cmp
fdivl
pop
push
das
mov
mov
add
rclb
dec
jno
add
imul
aam
enter
cmp
cmpsb
xor
dec
cmc
add
shrl
or
bswap
jle
inc
je
mov
pushf
add
sbb
or
iret
popl
std
sti
sbb
gs
pop
inc
jo
add
test
add
notl
js
mov
lcall
cmp
add
lret
inc
sbb
test
stos
push
out
or
dec
icebp
cmp
clc
in
or
push
xchg
cmp
rolb
add
and
mov
push
lgs
popa
push
ret
rclb
in
in
lods
jp
xor
mov
push
or
mov
sub
xor
add
mov
in
inc
add
or
dec
inc
test
adc
decl
dec
ficompl
fistl
inc
xchg
test
or
add
mov
dec
ret
push
mov
add
push
jb
incb
jae
push
lret
lahf
sub
fsubrl
sbb
aad
push
dec
pop
loopne
cltd
and
push
mov
push
mov
xor
add
sub
daa
pop
rclb
pop
or
jge
mov
adc
dec
aad
lods
popa
xor
bound
cmc
adc
movsl
ret
js
fs
leave
mov
dec
push
and
fisubs
dec
xchg
push
mov
lahf
push
jg
mov
mov
fdivr
push
ljmp
je
add
or
lret
add
sub
add
add
in
iret
jb
rol
out
or
xor
clc
pop
xlat
stos
add
sbb
aad
and
pop
stos
jno
cli
mov
daa
popf
jns
es
xchg
or
mov
int3
add
in
xor
in
rol
xchg
ret
popa
xor
jo
mov
jp
gs
arpl
fdivrs
jbe
mov
xchg
cmp
push
lahf
fbstp
lods
rolb
cmpsb
enter
jae
mov
jl
fstpt
sbbl
out
add
test
or
call
adc
add
inc
inc
ljmp
movl
inc
mov
leave
lods
push
ds
rolb
add
mov
roll
in
push
ret
insl
add
test
pop
add
jmp
add
add
adcb
add
xchg
cmp
lea
add
inc
add
add
xchg
jmp
xlat
xor
addr16
mov
mov
jle
dec
insl
jl
xchg
shlb
or
push
dec
fdivrl
fldl
sub
movsb
adc
lcall
repnz
data16
test
out
mov
add
sbb
or
pop
and
cltd
aam
sbb
cmp
ja
and
add
arpl
fwait
adc
testb
add
dec
mov
add
pmulhuw
in
outsb
inc
sbb
xchg
or
cmpl
push
jecxz
jbe
out
int3
mov
dec
add
adc
and
stos
jge
movsl
inc
enter
add
xchg
enter
push
mov
mov
cmp
imul
ret
jb
push
add
icebp
adc
mov
dec
or
inc
data16
hlt
fsubrp
loopne
add
jno
xor
pop
addr16
pusha
out
jns
subl
jno
jecxz
inc
nopl
inc
dec
or
push
dec
rorb
cmpsl
jmp
and
push
jecxz
or
shr
pushf
popa
jne
out
iret
xchg
je
out
push
stos
pop
sti
add
mov
add
or
dec
cmp
test
imul
jg
pop
ja
add
test
cmc
push
pushf
outsb
cmp
adc
mov
adc
push
add
popf
cld
in
enter
jge
in
inc
add
xor
test
adc
add
sub
push
jb
add
jnp
and
mov
cltd
rcll
hlt
ficoms
or
dec
jmp
xor
lds
cli
out
adc
add
enter
subb
cmpb
push
nop
add
pop
push
cli
popw
dec
jae
add
ljmp
pushl
or
add
inc
push
dec
outsl
pop
call
lret
cmp
cld
popf
loop
mov
enter
adc
andb
dec
cmp
or
lret
push
add
mov
bound
ja
inc
sbb
push
add
pop
stos
test
or
mov
lods
add
sbb
adc
add
js
mov
jbe
ja
push
test
push
add
in
in
push
lds
sub
jp
ds
dec
js
rclb
rcr
in
inc
lret
in
mov
add
mov
das
cltd
jle
push
loope
mov
bound
mov
add
addl
sbb
cmp
mov
pop
jge
inc
mov
int3
fidivs
sub
outsl
out
icebp
add
clc
ja
je
pop
add
popf
mov
data16
pusha
push
add
push
xchg
mov
sub
add
jo
xchg
xchg
ljmp
dec
inc
or
add
imul
sub
rol
add
in
cs
aam
add
xlat
mov
call
xchg
and
sbb
test
cmpb
mov
cmpb
pop
mov
jl
xor
lret
rolb
stos
xor
loopne
dec
mov
hlt
ds
or
add
adcb
shrl
sahf
jae
mov
sbb
mov
mov
push
adc
out
add
fwait
adc
in
inc
fdivrs
loope
je
out
mov
pushf
outsl
xchg
add
movsl
lock
or
xchg
inc
sbbb
sub
add
mov
icebp
sbbb
pop
lret
cltd
add
fdivr
call
sbb
std
sub
or
mov
cs
fiaddl
flds
cmp
test
sbb
sti
xchg
pop
mov
hlt
mov
ret
adc
fdivl
push
gs
push
bound
or
ret
xor
orb
cmpl
xchg
push
jg
or
daa
add
das
rorl
ljmp
push
std
mov
cmp
divl
cmc
aam
out
adc
push
pop
jl
sbb
stc
push
add
pushf
push
sbb
mov
out
add
add
fmul
pop
movsb
mov
int3
pop
scas
and
jp
xor
inc
add
adc
add
mov
cmp
jbe
sbb
scas
push
push
out
xchg
adc
lret
add
aas
mov
mov
pusha
adc
ja
add
mov
add
nop
in
iret
shll
cmp
popf
jmp
lahf
dec
ljmp
pushf
mov
inc
gs
or
enter
es
shrb
add
cmp
fists
in
inc
ljmp
nop
cmp
insb
pop
adc
xor
or
outsl
mov
lret
out
add
xchg
adc
and
push
pop
xchg
bound
xchg
add
jno
or
and
nop
or
inc
popa
xor
and
adc
mov
mov
stos
mov
rcr
push
ljmp
mov
in
outsb
and
and
in
test
add
jl
add
adc
push
add
xor
stos
aam
push
int
push
popf
cwtl
sbb
adc
cwtl
ret
movsl
push
outsb
add
xchg
es
cmp
loopne
daa
dec
dec
xchg
icebp
in
or
push
inc
cmp
sbb
rclb
cs
sbb
xlat
push
outsb
orb
xor
sub
ret
push
push
or
inc
jle
cmp
add
decb
ret
lods
push
aad
movsl
sbb
and
add
sbb
addr16
mov
mov
outsl
pop
add
cmp
inc
mov
je
adc
divb
add
add
bound
subl
add
cli
cmc
int3
shll
lods
add
addr16
adcl
sbb
adc
jecxz
inc
imul
xlat
mov
sub
nop
in
repz
das
add
lret
cmp
scas
add
int
sarl
xor
aam
xchg
jmp
cmpsb
jnp
or
jns
jle
pop
aas
data16
pop
pushf
mov
sub
nop
sbb
test
mov
cmp
mov
call
lcall
mov
mov
sub
or
add
push
addb
inc
add
push
lahf
xchg
inc
je
mov
shll
sub
data16
sub
mov
shr
addr16
xchg
loope
stos
sub
dec
jge
add
cs
xor
cmp
or
cmp
cmpb
pop
lahf
enter
jb
mov
add
and
sbb
fdivl
cmp
xchg
mov
pop
mov
repz
add
add
neg
icebp
or
pusha
or
mov
sub
mov
sub
and
test
minps
fbstp
dec
and
sbb
addb
jne
mov
dec
shl
leave
push
pop
xchg
adc
cld
mov
or
mov
fs
jge
add
xchg
dec
and
add
adc
push
add
xchg
adc
cmpsb
mov
jecxz
inc
lods
and
sbb
jbe
mov
cmpsl
mov
aad
sbb
rcrb
dec
ljmp
out
jnp
or
jo
icebp
out
add
xor
cmp
add
jae
jg
adcb
and
hlt
sbb
stc
pop
les
dec
aad
dec
sbb
sub
add
ss
fs
loopne
add
mov
lahf
mov
push
ja
add
jo
jg
add
cmp
and
xchg
cltd
pop
cmc
lds
shl
nop
push
sub
clc
cmp
or
cld
push
loop
cli
loop
xchg
arpl
loope
xor
aam
call
fldl
pop
dec
loope
jo
stos
mov
or
fisttps
ret
loopne
pushf
xchg
add
xchg
and
inc
mov
mov
lret
push
push
mov
and
inc
sbb
cltd
add
andl
pop
adc
test
cmp
aam
and
daa
add
popa
sub
js
or
bnd
xor
rclb
xchg
mov
mov
jg
cmp
mov
xchg
xchg
add
inc
or
push
pop
sar
mov
mov
ret
xchg
inc
xor
enter
mov
sub
cmp
and
pop
test
test
xchg
lds
push
mov
add
mov
nop
push
hlt
jp
add
mov
sbb
pop
wbinvd
or
roll
sahf
adc
pushf
lret
jbe
aaa
fs
ss
insb
cmpsl
in
or
add
dec
and
add
adc
jns
shl
add
pop
daa
xor
js
addl
cmp
sti
or
call
push
daa
sbb
jecxz
dec
bound
cli
cmp
or
push
and
pushf
push
mov
aad
pusha
inc
enter
nop
xorb
add
or
xor
int3
xchg
pop
dec
mov
jp
cmc
or
add
dec
scas
jge
add
mov
jecxz
add
mov
add
add
jl
add
rclb
dec
pop
decl
and
xor
jp
inc
inc
xlat
cltd
pop
sahf
fists
dec
pop
ja
cs
add
push
xor
movzbl
add
lods
lret
add
push
pusha
xchg
ss
push
or
std
addr16
and
mov
or
push
jne
mov
or
inc
sarb
fidivs
jno
dec
cmpsl
adc
push
and
mov
xor
dec
add
adc
pop
xorl
pusha
int3
push
pop
dec
jp
ja
add
movsl
test
or
jno
or
mov
mov
mov
push
scas
add
neg
pusha
int3
or
adc
mov
clc
jle
add
cmpl
fistpl
and
push
xor
cmp
cmc
rcrb
add
leave
aad
pop
jl
movsl
jp
dec
mov
pop
or
jno
test
pop
push
into
iret
ficompl
adc
aam
pop
outsb
cltd
test
aad
lcall
mov
es
add
out
stc
cmp
add
jmp
enter
add
pop
in
add
lahf
cli
add
mov
in
add
push
cmpsb
mov
add
xchg
adc
jmp
and
stos
pop
pop
hlt
push
xchg
dec
testb
outsl
xchg
push
stos
mov
mov
xor
loopne
xchg
cmpsl
add
cld
add
fcomp
sub
nop
cmp
push
push
mov
stos
xchg
add
lea
add
pop
xchg
jo
cmpsb
in
insb
xor
mov
pop
push
ds
jb
mov
and
inc
fiaddl
sub
xchg
testb
add
cwtl
dec
std
push
ja
int
sub
loop
je
push
xchg
push
fdivrl
sub
fadds
ret
fisttpl
jge
mov
push
cmp
xlat
add
inc
xorb
loop
add
sbb
sti
sbb
inc
or
pop
jae
jno
add
cmp
fiadds
orl
pop
call
mov
add
mov
jle
out
add
mov
cpuid
loopne
add
add
add
fiaddl
lds
or
xchg
cmp
inc
sub
aaa
hlt
cmp
pop
add
dec
aam
cwtl
fistpll
add
int
ss
jbe
xchg
test
xchg
popa
sbb
or
add
and
cli
adc
stos
pop
lret
ss
jge
cmc
popa
sub
aam
push
add
iret
out
and
cmp
xchg
pop
addr16
rol
add
mov
inc
xlat
and
mov
lock
push
push
inc
nop
je
mov
add
jmp
jnp
jno
add
lock
enter
addr16
add
cld
insb
pop
mov
clc
aaa
js
aas
mov
hlt
cmp
xchg
push
inc
xor
push
test
add
mov
sub
mov
xlat
pop
mov
cs
dec
inc
stos
jne
dec
js
add
insl
lcall
movsl
dec
push
leave
lock
call
push
push
lahf
out
jmp
and
mov
sbb
fcmovnbe
shl
mov
fdivrl
jge
add
pusha
sbb
xchg
es
add
loopne
add
or
mov
adc
add
or
insl
mov
mov
xlat
in
fstpt
add
pop
movsl
push
xor
int3
lods
repz
xor
mov
jb
add
xlat
xchg
hlt
hlt
mov
or
filds
mov
iret
add
jno
je
dec
mov
cmp
push
mov
or
add
jg
mov
push
and
xchg
nop
xor
dec
outsl
add
fsub
rcrb
call
aad
mov
and
and
sbb
mov
sbbb
loope
adc
in
add
xor
push
and
cld
repz
pop
faddl
jns
aad
fcmovu
test
add
mov
les
rcll
fcmovbe
xor
and
ds
adcl
sbb
out
or
shll
icebp
add
xor
adc
sti
in
xor
jbe
popa
mov
orb
mov
test
pop
xor
fildl
cltd
xor
test
and
add
sbb
add
je
enter
aaa
or
orb
iret
add
mov
roll
fs
aaa
xchg
mov
mov
test
mov
js
or
cld
sub
pop
ficoml
sahf
add
adc
inc
arpl
cmp
sub
sbb
sub
sub
pop
dec
mov
dec
loopne
je
js
xor
jne
dec
add
mov
shlb
imul
inc
push
mov
add
pop
adc
rolb
dec
push
push
sbbb
xor
jo
push
or
cmp
xchg
mov
rorb
dec
xchg
rolb
pop
add
xchg
in
pop
sbb
test
adc
and
add
pop
addb
or
inc
mov
cmpb
lods
mov
aaa
xchg
test
add
pop
bound
adc
xchg
dec
pop
pop
mov
mov
mov
jecxz
jns
dec
and
jmp
mov
mov
dec
jbe
fmull
push
cmpsl
jl
add
adc
add
jo
cmp
lds
and
inc
jmp
mov
xchg
adc
ss
add
dec
jmp
dec
xchg
sahf
outsl
xchg
xor
pop
int3
adc
into
shlb
shrl
out
pusha
push
xchg
popf
in
leave
notb
mov
push
sub
test
dec
daa
add
mov
or
xor
adc
adc
mov
push
xor
xchg
add
ljmp
in
push
push
adc
ss
xchg
add
pop
dec
inc
xchg
or
nop
sbb
testl
lock
add
pusha
jl
sub
jnp
cmp
jb
xchg
add
cmpb
jle
or
xor
psubsb
iret
jno
cmc
add
push
insb
test
std
and
jae
add
inc
mov
inc
pusha
orl
mov
xor
rolb
mov
aam
shlb
pop
test
sbb
mov
stc
mov
xor
outsb
inc
lods
add
rcrb
stos
add
xchg
lock
repnz
ficompl
sahf
jge
jp
aam
push
adc
pushf
mov
mov
pop
call
sbb
sbb
orl
adc
addr16
jo
add
cmp
mov
test
movsb
cwtl
xor
pushf
inc
xchg
or
test
or
jmp
stos
and
add
aas
pop
fwait
aam
cld
adc
sub
fs
or
add
jbe
ljmp
add
mov
mov
pop
insb
add
aam
test
adc
test
ljmp
pop
pop
dec
fdivrl
ja
iret
xchg
mov
pop
mov
ret
add
xchg
xlat
test
rolb
push
ss
popa
add
pop
jle
stc
aaa
hlt
mov
nop
popf
pop
add
push
pop
push
xchg
popa
push
icebp
cli
imul
cld
add
sbb
add
outsb
sbb
nop
mov
dec
push
fimuls
push
add
popf
loopne
add
movsb
xchg
add
mov
mov
pushf
testl
pop
push
adc
das
jno
shlb
jge
pop
pop
je
jbe
ror
fidivrs
sbb
loop
cld
enter
dec
push
ret
inc
inc
pop
js
add
jnp
movsb
mov
inc
xor
pop
push
mov
sub
and
xchg
push
mov
mov
xor
rclb
add
lods
jae
call
lret
xchg
insl
add
in
add
xchg
inc
out
adc
jp
add
cmpsb
in
or
push
push
inc
mov
add
mov
icebp
mov
jecxz
sub
loop
mov
adc
jmp
in
inc
inc
out
add
ss
pop
add
out
pop
mov
xchg
inc
xchg
jle
enter
add
fnstcw
repnz
mov
jge
xchg
dec
adc
out
lock
add
xchg
aam
loopne
iret
dec
adc
jae
add
loopne
cld
add
in
push
adc
cmp
fidivs
push
mov
push
lea
push
aad
ljmp
clc
enter
adc
je
jl
and
add
xchg
adc
inc
pop
and
pop
pop
pop
jae
push
push
push
add
data16
outsl
roll
daa
nop
cwtl
or
push
pop
xlat
jo
jmp
push
int3
mov
mov
out
add
test
aam
sti
lods
mov
push
mov
incb
add
mov
subl
repnz
arpl
iret
cmp
add
int3
movsb
add
and
dec
outsb
mov
cs
push
mov
mov
addb
xchg
mov
mov
add
or
gs
and
shrl
dec
sbb
imulb
scas
call
pop
mov
add
lods
pusha
pop
or
and
push
xor
insb
std
dec
xor
cld
mov
mov
es
sbb
push
dec
sub
fisubs
popf
add
stc
dec
jmp
or
notb
pop
pop
divl
fldt
iret
out
call
adcl
xchg
mov
jnp
repnz
dec
test
data16
push
xchg
sbb
mov
outsb
enter
pusha
fs
jp
add
popf
dec
popa
adc
subps
aaa
es
or
inc
jl
divl
mov
or
jae
jnp
arpl
and
add
jne
jmp
pop
push
rcll
int3
cwtl
add
push
js
add
add
test
les
popa
and
rcl
loope
rolb
out
sbb
sahf
lahf
inc
int
adcl
sub
and
or
pop
loop
setle
shr
ljmp
ficoms
andl
pop
mov
add
outsl
lahf
mov
sbb
pop
add
jle
xchg
ljmp
and
add
push
cmp
add
or
push
ret
mov
daa
lods
and
das
dec
fs
aas
add
out
mov
xchg
add
out
shr
out
add
pushw
pushf
sbb
ror
shrb
add
jne
jbe
les
mov
push
pop
call
mov
mov
ljmp
xor
xchg
inc
add
and
add
fisttpl
cmp
cli
in
leave
fwait
loopne
gs
jno
inc
rcl
pop
mov
add
sub
xchg
add
dec
xchg
pop
pusha
cmp
ret
pop
xor
push
fmul
mov
in
or
sub
call
icebp
or
mov
inc
rorb
ljmp
loop
and
xchg
aam
orl
shrb
add
cld
mov
adc
hlt
push
add
lret
imul
dec
add
lds
mov
push
xor
sarl
cmpsl
sub
scas
out
add
rcrl
push
fcmovnb
hlt
mov
push
test
sub
pop
fiaddl
into
pop
movsl
in
push
push
jns
outsl
inc
inc
or
sbb
push
pop
pop
test
ja
fs
imull
rep
inc
add
pop
xchg
ficompl
test
sub
cmp
push
dec
lock
sbb
sbb
or
mov
pop
xor
emms
sub
cmp
pop
nop
stc
add
adc
les
push
or
pop
cmp
mov
xchg
mov
cmp
sbbb
cmp
pop
jmp
hlt
add
shr
pop
scas
add
mov
jnp
js
push
and
or
adc
popf
add
xchg
inc
sub
loopne
pop
pusha
std
test
pushf
adc
pop
add
inc
lods
fs
mov
sbbb
sbb
or
cmpsb
stc
mov
roll
jmp
repz
out
push
mov
add
popa
push
jae
jns
or
stos
mov
fsubs
add
and
loop
push
cmovg
push
xchg
in
jl
pushf
xorb
fsubl
sub
bound
cs
mov
pop
sbb
inc
and
inc
mov
mov
dec
xchg
add
lds
fnstsw
sbb
pop
jbe
mov
add
arpl
adc
sarb
pop
cmpsb
and
or
and
adc
pop
int3
sub
pop
or
push
add
hlt
dec
sub
fisubrs
cwtl
jp
enter
clc
cmp
pusha
cs
ficompl
loop
int
add
pop
dec
aaa
hlt
sbb
inc
push
pop
pop
push
pusha
cmpsb
inc
mov
div
sahf
add
out
inc
and
and
push
inc
inc
orb
test
mov
aad
pushf
inc
sar
mov
jecxz
cltd
jne
insl
mov
push
mov
sub
pop
mov
add
test
lcall
mov
sbb
lods
repnz
xor
push
mov
adc
jns
sbb
icebp
adc
xchg
cmp
add
fidivrl
sub
adc
cli
xchg
cmp
sbb
cmpsb
aam
loope
inc
pop
out
push
jmp
cld
imul
lods
mov
movsl
cmp
push
jne
scas
xchg
addb
dec
fidivl
jl
add
jmp
xor
lods
jmp
movsb
aam
pop
add
and
add
inc
cmpsl
inc
jo
pop
or
xorl
xor
je
cmpsb
int
lds
std
sub
hlt
and
and
jne
sub
orb
ret
add
mov
xchg
in
cs
or
dec
hlt
jbe
out
cmp
cmp
add
adc
pop
add
loopne
in
adc
add
andl
sbb
adc
std
lock
popf
pop
xchg
dec
add
mov
pop
sub
js
rclb
lods
xchg
bound
or
mov
add
mov
cmp
jl
in
jle
add
push
imul
iret
mov
push
and
mov
adc
test
add
out
cmc
mov
in
pop
add
inc
adc
fsubl
xchg
addr16
repnz
jns
repz
xchg
dec
fcoml
in
or
mov
popa
and
loop
loopne
adc
jl
dec
add
aad
and
inc
push
sti
jne
push
ss
loop
dec
mov
jle
xor
fstpt
jle
hlt
jle
adc
in
xchg
mov
sbb
out
add
mov
loope
adc
lods
pop
push
je
jmp
push
in
dec
ja
jecxz
loop
mov
std
jmp
das
cld
sbb
inc
add
add
or
fmull
in
pop
add
adc
imul
xchg
es
ret
and
push
push
or
cmpb
rorl
fsubrs
mov
push
xchg
xor
pop
pusha
sub
scas
xlat
psubq
xchg
xchg
jo
add
les
lods
mov
in
movsl
mov
add
inc
inc
stos
dec
push
roll
xor
xchg
jnp
add
mov
push
xchg
ds
add
xor
gs
adc
xchg
cmp
sub
out
cmc
lds
nop
in
adc
sbb
add
dec
fwait
pop
seta
cli
daa
and
add
jp
jnp
in
inc
mov
outsl
or
and
cmp
dec
jne,pt
push
loope
add
sub
add
or
and
add
xchg
xlat
leave
push
lea
clc
je
dec
fistl
imulb
xor
pop
aad
cmp
inc
xchg
dec
fnstenv
push
adc
cmp
mov
sbb
subb
sbb
xor
cmp
mov
lock
add
add
mov
in
das
sub
sbb
lods
inc
jno
xor
or
or
mov
test
push
jecxz
mov
decb
fisttpl
inc
and
out
jno
imul
sub
mov
cmp
test
and
mov
dec
xchg
xchg
push
sbb
rolw
sarl
out
push
aas
push
add
inc
js
pop
popf
jo
xor
rol
testb
rolb
pusha
jo
hlt
mov
ja
push
outsb
and
inc
jl
adc
mov
xor
sarb
push
mov
adc
jp
jmp
cmc
inc
aam
int
add
fadds
push
add
dec
ret
xor
lahf
fs
js
pop
out
pop
les
add
mov
test
adc
lahf
shl
add
adc
push
dec
push
mov
fistps
lods
add
test
push
mov
pop
inc
stos
push
lods
sahf
dec
mov
nop
mov
xchg
add
mov
add
dec
lret
add
pop
xchg
inc
mov
dec
lods
pop
mov
pop
add
test
xor
sub
ss
data16
in
jo
or
jns
sbb
enter
mov
hlt
xlat
push
jg
out
add
imul
scas
in
aam
into
sbb
in
inc
pop
mov
jmp
out
jno
push
jg
mov
ret
xor
aad
adc
mov
aaa
out
mov
clc
add
jg
xlat
out
test
jae
divb
mov
or
pop
xor
or
adc
sub
clc
fidivrs
out
sbb
dec
pop
add
xor
ret
cltd
popa
ss
enter
mov
dec
adc
fwait
repnz
cmp
movsb
sarb
pop
add
lods
sbb
xchg
sbbl
push
add
lret
sarb
fimuls
daa
or
push
add
add
and
jb
xchg
rcll
mov
test
test
jmp
add
fcomps
add
int3
mov
inc
sub
cmpsb
push
orb
cld
add
push
js
mov
clac
or
out
adc
and
or
push
cmp
inc
add
jbe
xchg
aam
es
push
popa
jne
pop
cmp
fstpt
scas
adc
adc
lock
fldenv
in
shr
ja
mov
pusha
lret
fs
aam
cmp
std
add
or
adc
add
incl
pop
xchg
mov
cmpsl
jl
pop
pop
or
popf
andb
add
dec
cmpsb
ret
add
adcb
into
jmp
push
push
cld
iret
in
add
fucomp
or
ljmp
sub
dec
shrb
sub
add
and
je
pop
das
cmp
aad
mov
or
push
pop
mov
adcb
ficompl
add
ret
xchg
inc
das
insl
ja
add
jl
mov
enter
or
adc
sub
pop
movsb
out
fs
pop
js
xchg
shlb
jl
add
pushf
or
push
add
imulb
jns
into
aam
loopne
xor
mov
fistpl
lods
in
std
cltd
mov
mov
in
cmp
push
cmp
mov
imul
add
movsb
mov
sahf
sbb
shlb
jmp
add
dec
xor
faddl
inc
jns
lods
cld
imul
das
push
add
cld
jmp
pop
push
and
clc
cmpsl
lret
test
movsl
inc
arpl
xchg
inc
mov
addr16
pop
add
ror
mov
imull
nop
lds
dec
test
add
ss
shlb
sbb
add
push
sub
add
movsl
out
pop
cmp
sbb
test
inc
sub
addr16
xorb
adc
adc
mov
dec
lahf
pop
scas
mov
inc
mov
push
add
mov
out
cmc
jle
mov
mov
push
dec
lods
mov
add
stc
sub
popa
pop
add
mov
add
and
dec
in
or
adc
in
xchg
add
push
cmovp
add
mov
push
cmpsl
out
or
and
flds
dec
cli
stos
inc
pushf
js
add
xor
pop
movsb
or
test
dec
add
orl
stc
dec
movsl
xchg
cmp
inc
shrl
pop
xor
mov
loopne
pusha
inc
enter
adc
and
and
or
sub
imul
mov
pop
add
and
invd
jecxz
nop
xchg
test
inc
add
lock
dec
cmpsl
inc
sub
mov
sub
xchg
test
addr16
sub
nop
je
add
pop
iret
mov
jecxz,pt
add
jmp
jp
add
jle
faddl
mov
jmp
jae
inc
add
mov
lcall
sti
ficoml
push
out
or
pusha
push
cmpsb
push
pop
shlb
fcmovnu
aas
add
int3
stc
sbb
dec
cmp
or
add
les
ret
loopne
repnz
int
dec
xchg
roll
adc
or
pop
mov
pop
rolb
mov
push
loope
mov
pop
xor
push
cwtl
push
xchg
fcmovb
mov
rcrl
xchg
popf
mov
sub
inc
inc
lret
mov
push
out
aas
cmp
jnp
xchg
mov
xchg
add
sbbl
cmp
movsb
lret
push
test
pushf
loopne
shr
add
mov
add
add
repz
mov
les
jl
arpl
push
xorb
sbb
or
mov
ljmp
push
dec
sbb
pushf
xlat
shrb
fidivrl
cmp
push
sbb
mov
add
jle
out
xor
pop
add
cmp
test
xchg
xchg
scas
jecxz
hlt
xorl
adc
lret
push
test
add
jo
sub
push
pop
jmp
mov
jbe
add
je
jmp
xor
popa
jle
stos
out
sbb
lock
xor
jmp
aaa
ja
and
add
mov
fdivrs
cmp
cmp
shl
jl
jae
push
push
ret
sbb
ljmp
sub
lret
jb
add
movsb
outsl
add
loop
add
ret
dec
mov
xor
add
pop
insl
fwait
add
leave
add
data16
rol
cld
sbb
cmp
call
sti
pop
test
loopne
fidivrl
push
jl
jne
add
or
rolb
adc
push
push
add
pop
cmpsb
popa
jo
sub
shlb
push
or
mov
xchg
clc
aad
dec
jno
add
or
pop
outsb
rolb
mov
or
sbb
addr16
aas
and
cmpb
xorl
movb
and
add
pop
xchg
pop
cs
jg
lock
sbb
shrl
inc
push
lock
add
decl
mov
js
add
xchg
scas
and
xchg
ror
aas
insb
sbb
cld
sub
sahf
and
sbb
or
and
lea
jle
ja
pop
push
mov
scas
orl
cmpsb
or
repz
mov
pop
xor
pop
jg
cld
lcall
add
cmpsb
sbb
cs
inc
mov
stos
ljmp
pop
xchg
add
mov
jg
add
mov
test
push
lods
mov
add
mov
std
leave
mov
xchg
mov
insl
and
hlt
xor
or
and
jo
add
xchg
pop
add
and
mov
push
outsl
add
add
sub
les
mov
push
je
lahf
sub
add
jb
mov
xchg
adc
fstl
daa
pop
xor
fcom
loope
fwait
enter
outsl
add
bound
add
leave
add
imul
insl
mov
inc
shl
xor
sahf
add
lds
pushf
shlb
push
in
sub
push
repz
sahf
add
jbe
cwtl
push
xchg
jmp
pop
lock
roll
add
cmp
pusha
divl
add
lcall
sub
push
jg
jmp
loopne
ror
and
rorb
mov
add
ret
mov
call
nop
pop
imul
out
aas
cli
ljmp
cmc
sbb
mov
loop
andl
clc
push
add
and
xchg
hlt
inc
add
inc
dec
adc
inc
jne
shl
loopne
adc
roll
lds
xor
or
xchg
in
adc
loopne
in
ja
repz
mov
push
xor
inc
push
mov
lods
enter
jnp
add
xorl
xchg
pop
mov
add
inc
xchg
aam
add
add
test
inc
push
fldcw
scas
fisubl
ror
add
fdivrs
inc
sbb
push
jno
push
test
in
sarb
mov
sub
cmp
dec
outsl
and
cmp
dec
jg
aas
push
pcmpeqb
pop
mov
clc
cmp
add
dec
inc
and
add
push
into
or
pop
je
mov
fidivs
push
or
popl
and
shrb
add
fldenv
adc
fadd
dec
mov
je
shll
inc
adc
cltd
jnp
and
or
data16
add
cmp
xchg
mov
mov
cmpsl
mov
mov
rclb
push
mov
leave
push
scas
fsts
in
enter
std
out
and
sub
jge
mov
aas
out
and
out
xchg
fwait
add
dec
jl
inc
aaa
jae
add
stc
hlt
push
and
out
add
cmp
call
jns
mov
xchg
jns
bound
popl
je
add
push
shl
cli
stos
lret
add
hlt
outsl
xor
inc
rsm
push
popa
es
push
fidivl
loope
add
aam
std
dec
jnp
pusha
and
sbb
push
in
lcall
xchg
lret
popf
data16
pop
add
mov
stc
add
mov
adc
pop
mov
movb
int3
inc
faddl
xchg
loop
mov
popa
add
pop
ljmp
sub
in
test
add
in
fistpll
xchg
out
inc
popa
ret
in
arpl
in
jecxz
sbbb
push
push
add
jl
rclb
add
inc
jno
add
sub
in
movsb
lock
mov
gs
add
ds
jb
mov
addb
add
pop
cmpsb
xor
pop
sbb
add
jbe
jg
rcrb
add
or
mov
jle
jmp
in
lahf
sbb
nop
loop
mov
xchg
popf
jmp
add
dec
sbb
mov
mov
jbe
inc
mov
mov
push
fistl
call
xor
js
pop
movl
test
cmp
sbb
sbb
movsb
add
dec
xor
cld
fimull
ss
mov
roll
stos
xchg
stc
js
jbe
movl
in
lret
push
add
lret
add
pop
and
cs
test
pop
and
cmpsl
add
cmp
pop
fcoms
rcrb
sub
mov
cmp
mov
and
xchg
jp
bswap
mov
mov
subb
and
inc
pop
enter
push
fisubrl
and
push
cmp
mov
lea
xor
xchg
lret
pop
int
mov
mov
adc
popl
sbb
add
inc
mov
cmp
cmp
ljmp
pop
jmp
add
fs
push
add
orl
sahf
cmp
or
int3
lods
cld
aad
cld
aas
adc
notb
loop
add
fs
lahf
pop
jmp
repz
cwtl
push
mov
test
cmp
insb
cmp
sbb
mov
fidivrs
ljmp
jns
lods
pop
sti
mov
pop
mov
in
bound
add
mov
icebp
or
push
push
fldl
sbb
xor
add
push
and
leave
add
out
int3
fcoml
out
add
mov
xchg
mov
lock
bound
pop
xchg
inc
dec
pop
mov
out
enter
add
sub
sbb
mov
mov
adc
pushf
add
fdivs
inc
enter
add
mov
cmp
dec
test
lea
pop
add
ja
outsl
push
or
test
sub
lods
test
faddp
inc
sub
insb
jp
xchg
sbb
cli
pop
aam
rorb
incl
add
jnp
inc
push
or
pusha
add
xchg
mov
xor
cmc
dec
movsb
out
pop
add
imul
mov
sub
push
inc
jno
adc
incb
pusha
fistl
icebp
loop
add
cwtl
rorb
xchg
dec
flds
adc
out
mov
jo
lea
push
leave
lret
ljmp
jb
pop
xchg
push
jbe
sti
in
stc
sbb
push
or
xor
andb
hlt
inc
cmp
or
push
xchg
fs
outsl
and
fldcw
stos
movsl
mov
orb
and
jo
xchg
or
dec
lahf
fidivrl
mov
push
add
mov
dec
ret
add
dec
and
add
fcmovbe
pop
and
cmp
dec
add
mov
insb
inc
and
rclb
popa
sub
jge
push
fcompl
ret
mov
cmp
into
sub
bound
jnp
jmp
pusha
push
aas
xor
fcomps
add
add
pop
xchg
inc
lret
sbb
inc
lea
jo
inc
aas
dec
add
add
or
outsl
stos
je
jle
cs
mov
dec
lret
add
cmc
xchg
sbb
nop
insl
test
mov
je
lock
add
shrl
es
shlb
mov
cmp
loope
or
push
adc
rcll
inc
add
pop
pop
popf
adc
push
push
xchg
sbb
dec
stos
in
mov
nop
jl
shll
add
mov
adcb
inc
xor
cli
jp
pop
adc
pop
cmpb
addl
test
cmp
pop
mov
inc
fs
xor
add
xchg
pop
inc
shl
in
aam
daa
sub
sbb
jns
jae
scas
mov
jo
add
je
imul
inc
sub
popf
sub
hlt
outsl
add
mov
test
xchg
add
fimuls
les
push
ret
outsl
add
lret
std
adc
pushf
add
in
push
scas
dec
xlat
pusha
in
rcr
mov
and
pop
loope
mov
mov
sbb
das
je
ja
add
icebp
mov
hlt
outsl
adc
and
sub
or
cltd
rolb
add
scas
in
out
out
push
jle
in
gs
add
in
sub
pop
int3
mov
xor
push
rcrb
pop
pandn
add
add
jge
cmc
in
or
push
sbb
mov
jecxz
call
add
xlat
mov
sti
jbe
out
hlt
ds
cli
pop
roll
lods
cs
mov
cmpsb
xchg
int3
popa
loope
jecxz
cmc
enter
pop
sub
imul
testl
cmp
xchg
ljmp
push
and
cmp
cmpsb
jnp
sbb
xor
mov
mov
cmp
mov
pop
add
cmp
int3
dec
jno
repnz
lcall
xchg
lock
jge
gs
add
or
insl
shll
repnz
jl
or
and
pop
mov
lahf
inc
sahf
push
sub
push
push
movsl
jmp
ret
and
add
stos
cmp
push
mov
push
je
add
xor
mov
in
xorl
scas
scas
add
pop
leave
hlt
mov
jae
mov
lcall
adc
inc
add
jb
push
clc
cmp
test
sbb
data16
add
test
inc
in
testl
sub
mov
fs
lods
gs
mov
adc
pop
into
std
mov
add
mov
jg
lret
adc
add
or
mov
sbb
jp
repnz
add
shrb
xchg
push
inc
sbb
xchg
pop
mov
pop
xor
sahf
sbb
ret
sahf
popf
xor
dec
cmpb
jl
cmp
xchg
add
arpl
add
jp
add
xchg
hlt
xchg
faddl
xor
ljmp
dec
cmp
add
xlat
pop
add
sub
mov
jne
add
adc
iret
add
bound
pop
stc
jb
inc
idivb
xchg
and
repnz
xchg
test
push
push
ja
mov
test
add
ljmp
push
add
imul
jno
pop
push
xchg
xchg
jg
lock
out
pop
mov
adcb
stc
xor
or
xor
fildll
fwait
jae
dec
fldt
sbb
sub
lods
stos
daa
fistpl
cmp
cmp
js
cmp
mov
rcrb
xor
add
scas
fisttps
movsb
scas
add
jb
mov
cld
or
dec
add
rolb
jnp
push
sbb
pop
push
push
les
push
add
or
and
add
negb
mov
mov
mov
or
mov
mov
xchg
sub
add
jnp
movsl
jno
push
pop
call
inc
aaa
add
add
sti
leave
xchg
mov
jb
loope
scas
add
enter
fxsave
dec
cwtl
xchg
fdivl
sbb
out
sarb
xchg
sbb
adc
fnstenv
add
pop
dec
outsb
xchg
add
lea
push
push
mov
cmp
mov
sarb
test
xchg
mov
ret
cmp
dec
popf
scas
dec
add
and
pop
sahf
mov
cmp
sub
jae
std
and
loopne
mov
add
jnp
lret
icebp
push
in
pop
mov
out
pop
push
xchg
data16
jl
roll
int
jle
std
lods
pop
add
mov
jp
jno
int3
fcoml
add
mov
movl
int3
shr
or
jle
adc
cmp
add
push
jecxz
icebp
aad
icebp
jne
add
int
dec
add
jp
push
sbb
pop
loope
jno
mov
mov
inc
mov
mov
mov
mov
loopne
xor
sarb
adc
dec
jns
add
int3
je
xchg
xor
dec
pusha
inc
cmp
repz
pop
mov
imul
pop
lea
pushf
mov
mov
jp
aad
jbe
add
add
rclb
dec
fadds
mov
lea
xor
mov
bound
pop
add
pop
or
enter
dec
dec
push
add
mov
enter
adc
mov
jo
dec
xchg
and
push
push
addr16
les
fwait
jp
push
dec
cld
mov
cmp
xchg
or
test
add
repz
add
ret
add
scas
add
movl
or
cmp
add
mov
cld
add
jge
mov
add
or
push
pushf
js
lock
std
mov
pop
cmpb
popl
daa
jecxz
dec
shll
ret
or
xlat
mov
es
cs
addb
add
or
test
dec
movsb
sahf
outsb
mulb
in
fiadds
cmp
rolb
jns
mov
push
push
and
adc
dec
jae
shl
mov
pop
je
or
add
stos
test
jae
add
ror
mov
imul
add
sbb
jmp
cmp
out
in
or
cmp
mov
cmp
add
orb
add
stos
lock
aas
add
or
jecxz
sbb
out
pushf
lret
test
mov
leave
pop
cmp
lcall
es
push
pop
add
inc
out
lret
add
mov
inc
mov
rolb
mov
fucomi
pop
add
cmpsl
jmp
add
mov
mov
fisttpll
add
inc
dec
data16
mov
mov
sub
or
inc
ss
sbb
add
adc
add
pop
mov
loop
pop
push
shll
in
cmpsb
add
ljmp
or
add
cltd
add
jmp
cmp
inc
int3
movhps
iret
loop
add
addb
pushf
add
bound
and
jge
sbb
inc
nop
jl
jnp
dec
jmp
test
stos
mov
nop
mov
subl
fs
lods
push
add
mov
incb
or
mov
cmp
adc
or
mov
xor
xchg
test
adc
add
bound
mov
sbb
push
aad
dec
rcrl
in
insl
imul
mov
ret
xchg
push
imul
iret
jb
std
sbb
scas
add
nop
outsl
inc
xlat
cmp
add
test
pop
movsb
pop
popf
push
addb
rcrb
enter
jl
cmp
xor
pop
add
lock
sub
sbb
jmp
add
pop
mov
jg
lods
lcall
loopne
sub
add
add
or
test
pop
dec
gs
xchg
stos
add
or
ret
pop
mov
cmp
adc
xchg
lea
dec
cmc
pop
mov
push
fistpl
out
test
mov
mov
fstl
or
xchg
aam
pop
ja
clc
sbb
mov
je
mov
mov
scas
adc
cs
xor
jo
add
cmpsb
push
add
mov
xchg
mov
add
mov
rcrl
jmp
jl
or
shlb
insb
mov
add
push
cltd
js
mov
fcomip
mov
sbb
adc
hlt
dec
rcr
daa
insb
push
xlat
sbb
push
inc
adc
push
adc
je
jp
mov
iret
unpckhps
xchg
bound
sub
jmp
push
rol
sbb
repz
pop
sahf
nop
sbb
les
mov
inc
lods
sarb
pop
icebp
addl
sbb
roll
fsubrl
add
dec
arpl
push
orb
add
xchg
js
aas
mov
lret
lds
pop
inc
and
into
dec
shr
or
jns
adc
mov
enter
dec
adcl
jecxz
dec
mov
xchg
push
test
pop
ss
fidivrs
dec
xchg
fiaddl
inc
sbb
imul
push
call
loopne
inc
dec
lret
add
ret
mov
icebp
cmp
xchg
add
adc
and
jmp
xchg
dec
lcall
andw
adc
xlat
cmp
rcrl
nop
js
js
jle
push
hlt
subb
les
test
and
push
dec
pushf
pop
std
or
test
fstps
movsl
dec
inc
test
dec
rorb
dec
push
add
iret
inc
ljmp
pop
enter
sub
sub
adc
jno
sub
add
lds
xor
rolb
add
mov
adc
mov
mov
int3
dec
jg
pop
sbb
ret
or
data16
decb
lds
add
jo
jg
fildl
cmc
and
add
mov
mov
addr16
daa
mov
xor
jnp
insb
psubsw
les
daa
xchg
pop
jl
in
pop
pop
inc
mov
xor
sbb
pop
pop
subl
lock
push
jge
imul
insl
or
and
and
add
pop
sub
sub
inc
pusha
inc
shll
pop
mov
cmpsl
loop
out
cltd
add
xchg
pop
push
ret
jbe
roll
mov
mov
mov
jo
rol
or
cmp
fnsave
dec
loope
mov
cmp
pop
lahf
jns
fdivrs
loopne
enter
xorb
nop
outsl
pusha
sbb
cmp
push
int
adc
fs
cmp
sub
jmp
roll
dec
mov
fdivp
shll
fs
frstor
add
mov
jno
mov
adc
daa
imul
fdivr
out
dec
xor
test
ljmp
adc
add
clc
daa
sub
cld
or
xchg
jle
aad
sub
pop
in
movb
dec
add
pop
push
cwtl
push
jnp
stos
xchg
fmuls
inc
add
js
lods
inc
sbb
lcall
adc
stc
xor
jns
into
inc
xchg
push
sbb
add
inc
mov
icebp
push
mov
fwait
push
cmp
xchg
pop
jno
xor
dec
lret
incb
inc
xchg
daa
rcr
mov
popf
add
xchg
or
enter
in
pop
shlb
and
jmp
scas
fsubrl
in
add
out
and
jbe
dec
inc
nop
je
imul
scas
inc
mov
jo
jns
dec
mov
add
inc
aad
add
pop
ret
dec
mov
fwait
sbb
dec
addb
shll
int
cmp
retw
push
add
loopne
xor
push
fsubl
cld
aaa
jno
mov
inc
add
in
adc
mov
mov
add
pop
mov
cmpsl
cwtl
add
out
scas
mov
sub
jae
add
pop
push
sub
jo
mov
xchg
ja
loopne
lods
cmpsl
jns
dec
sahf
cmp
jb
mov
ljmp
mov
rorb
ret
loop
hlt
stos
bound
aaa
add
retw
std
shll
or
adc
sbb
push
cmpsb
out
push
lcall
outsb
mov
sub
xor
inc
xchg
and
inc
mov
and
add
inc
test
or
lock
and
movsl
bound
fcoml
mov
out
sbb
and
add
cmpsb
jb
jbe
sbb
or
or
std
mov
insl
rcrl
jb
mov
lret
add
pushf
push
jo
ds
xchg
es
dec
sub
mov
add
mov
xchg
pop
test
push
fwait
add
push
sub
or
cmp
sbb
fidivrl
rorb
imul
and
popa
das
jp
mov
xchg
daa
or
xchg
jecxz
loopne
sbb
and
pop
inc
sbb
lock
mov
add
movsl
nop
cmp
out
mov
fwait
shrl
mov
cmp
xchg
sub
push
pop
icebp
rolb
das
or
jb
mov
lret
sbb
data16
or
add
mov
inc
cmp
int
add
mov
loopne
aad
dec
xchg
adcl
xchg
mov
add
test
cwtl
xor
pop
push
cmp
es
add
aam
add
jp
add
pushf
stos
dec
shld
leave
inc
lret
loope
pop
rcl
loopne
add
and
mov
pusha
inc
loope
in
divb
cmp
cmp
add
jne
insb
shrl
push
push
xor
lock
mov
mov
pusha
pop
sbb
into
dec
add
sub
mov
xor
sbb
xor
stos
xor
jbe
or
push
ret
inc
rcrl
add
add
daa
out
stos
jl
cmp
mov
jb
mov
add
jnp
and
sub
rol
lods
push
pop
add
rcl
add
fildl
push
mov
rolb
xor
xor
add
in
lea
jbe
rcll
lcall
cld
or
popf
push
or
sbb
inc
jne
lcall
add
lds
outsl
sub
add
mov
notb
jle
lcall
loope
out
fmulp
sbbl
mov
adc
mov
add
inc
xchg
aas
sbb
dec
mov
jne
shrb
inc
pop
sub
pop
adc
xchg
loop
scas
inc
fcompl
cmpsl
push
add
or
xchg
pusha
jge
js
sarb
cmp
ja
dec
das
sbb
imulb
dec
mov
xor
inc
push
mov
add
add
xor
mov
test
dec
loopne,pn
lds
jecxz
cmp
sub
hlt
repnz
push
pusha
inc
jmp
fimuls
in
jne
popa
add
in
ja
fsubrs
inc
es
add
mov
add
int
push
push
sub
add
mov
pop
sahf
xchg
mov
xchg
jnp
inc
roll
cld
psubb
dec
lahf
jae
jns
cmp
jo
pop
call
xchg
mov
push
mov
shl
mov
loope
mov
xchg
pop
xor
inc
in
jne
cld
or
in
inc
fisubl
call
sbb
cli
dec
jmp
das
ficompl
adc
mov
cmpxchg
add
fsincos
int3
push
out
or
inc
int
fidivl
mov
or
add
rclb
cmp
cmpl
add
push
mov
loope
int3
add
in
mov
mov
or
rolb
sbb
pop
pop
and
adc
int
ljmp
xchg
pop
call
ret
xor
icebp
outsl
push
repnz
jae
ja
addb
cmp
add
stc
int3
rolb
mov
ret
dec
cwtl
or
pusha
or
add
les
ljmp
jb
push
stos
add
adcl
mov
inc
cwtl
mov
cmp
test
inc
mov
push
hlt
loop
cmp
ret
dec
leave
out
add
test
bnd
mov
sbb
or
or
sub
subb
sbb
add
xchg
aad
rolb
sub
jl
and
add
or
arpl
add
jo
lods
sbb
frstor
dec
testb
dec
pusha
scas
push
insb
inc
mov
add
add
add
mov
fs
adc
icebp
sbb
imul
je
add
fmuls
push
mov
lret
jo
loope
clc
dec
adc
rolb
mov
aaa
xor
mov
xor
inc
loopne
sbb
mov
sbbb
adc
dec
hlt
scas
adc
sub
sbb
mov
push
mov
push
imul
xchg
pop
adc
jmp
mov
add
loope
repnz
shll
xchg
fldl
add
mov
ljmp
jg
outsb
or
sub
sub
test
insl
jle
push
adc
pop
add
inc
rorb
jl
lret
nop
pusha
iret
push
mov
test
mov
lods
sarb
stos
or
cwtl
mov
fucom
sub
ret
pusha
add
leave
iret
rcr
xor
lods
adc
dec
je
add
out
xchg
aas
pop
add
mov
dec
xlat
std
loopne
rcr
add
sub
add
leave
adc
into
pop
mov
and
faddl
inc
bound
mov
out
jl
pop
add
jo
nop
repnz
adc
xlat
sarb
ret
out
pusha
call
pop
add
sub
pop
jp
jnp
frstor
pop
test
inc
add
sarl
adc
fildl
mov
aam
or
mov
shrb
mov
dec
clc
or
test
xchg
adc
mov
loopne
lcall
lcall
pop
cmp
and
addl
mov
test
push
sbb
shlb
call
sbb
xor
movsl
and
mov
inc
and
js
add
inc
lock
xchg
add
inc
mov
out
push
mov
xor
xorb
cmp
jb
sarl
mov
notl
es
xor
imul
add
lcall
ss
mov
ret
scas
imul
mov
xor
adc
push
fmul
fnsave
jb
add
pop
adc
int
mov
pop
cmp
pop
jl
dec
jp
sub
pop
jne
xchg
gs
mov
xchg
pop
fs
jle
mov
mov
pop
das
push
idivb
rcrb
jne
cltd
or
adc
push
add
inc
cmp
imul
out
push
pop
dec
dec
and
add
test
sub
or
arpl
faddl
add
cmp
add
xor
into
add
iret
lret
sub
jnp
cs
ja
add
and
push
ss
cmp
add
pop
sahf
sbb
addr16
mov
and
daa
add
mov
lock
pop
hlt
mov
mov
rclb
adc
inc
or
out
inc
imul
pop
hlt
cmp
insl
lods
dec
adc
add
loop
xchg
repz
popa
or
fists
and
add
js
test
out
movsb
xchg
mov
adc
xchg
add
cmp
push
fstps
cmpsl
hlt
arpl
les
xchg
daa
and
and
dec
xchg
and
push
movsl
pop
adc
jo
mov
cmp
mov
add
inc
mov
mov
ret
inc
or
je
mov
sar
in
push
cmp
add
inc
or
jg
out
inc
filds
adcb
add
mov
loopne
loop
aad
ret
test
jno
int3
stos
aaa
jno
inc
cmp
and
lds
rorb
adc
sbb
mov
or
mov
add
icebp
xchg
add
rcll
outsl
fsubl
clc
rcrb
int3
cmovge
sub
push
adc
jmp
cmp
pop
xor
adc
jo
add
and
cmp
mov
lods
xchg
in
fbstp
divb
shll
sbb
jno
rorb
push
and
adc
add
sub
or
and
mov
sbb
int3
movsb
xor
repz
push
cmc
and
pop
add
inc
rcrb
sbb
pop
dec
add
jmp
add
push
sbb
dec
mov
pop
inc
add
stos
dec
lcall
sbb
repnz
into
out
in
mov
out
ret
pop
aaa
xchg
fisttpl
or
lahf
sbbb
icebp
xchg
add
or
cli
sub
sbb
in
lret
mov
mov
jns
jg
adc
cltd
pop
inc
push
loopne
mov
test
add
loope
int
cld
addr16
add
pop
cmpsl
mov
shrb
lcall
dec
rorb
push
add
adcl
in
jmp
stos
out
sub
call
sub
lea
pop
clc
shrb
fcmove
pop
lods
dec
mov
cli
movsl
in
ss
sub
orl
add
pop
cmp
stos
lahf
mov
and
lds
pop
cwtl
subl
test
or
cmpsb
push
nop
pop
mov
pmulhw
lea
push
bound
leave
lret
int
and
fstps
add
in
loopne
arpl
sbb
data16
and
sub
test
sub
fs
loopne
pop
fstpl
mov
mov
sub
repz
fstpt
jecxz
ret
rorb
cmp
bound
cmp
dec
lret
rcll
mov
pop
in
lods
and
adc
mov
adc
loope
sub
in
cmp
push
adc
cmpb
xchg
push
mov
mov
inc
sub
mov
add
mov
jp,pt
xor
loop
call
jae
decb
or
test
add
or
jle
jo
loopne
mov
aaa
lods
ror
sbb
dec
jle
add
jg
lret
jp
push
xchg
add
xchg
rcrb
divl
and
mov
xor
pop
fldl2e
sub
cltd
test
sbb
xchg
jo
hlt
repnz
jo
ret
add
sbb
or
sbb
stos
iret
sbb
jl
add
pop
pop
xor
dec
inc
inc
rorl
sbb
call
mov
cwtl
pop
aad
mov
imul
mov
mov
add
leave
lahf
fstpt
sbb
fistps
and
std
pushf
adc
pop
xchg
push
popf
pop
and
push
pop
lcall
lods
xchg
add
xchg
insb
sub
and
inc
daa
push
test
push
add
or
leave
push
sub
jns
movsl
add
mov
add
add
push
add
shlb
jb
into
mov
sub
rol
mov
insl
and
xchg
inc
lea
xchg
xor
push
test
movsb
mov
adc
sub
push
pop
popf
ffree
xor
test
add
inc
mov
mov
sub
andb
aaa
fldt
add
ficoml
in
cmp
inc
mov
xorb
xchg
insl
lea
mov
int
sbb
mov
fcom
sub
outsl
test
add
inc
rorb
test
test
push
or
jae
outsb
push
sub
add
push
kmovw
inc
pop
into
cmp
cmp
mov
or
ret
mov
inc
clc
push
pop
lret
lods
jg
mov
and
and
add
sahf
fidivs
inc
aam
pop
pop
cmp
lds
push
gs
add
jno
add
outsl
test
std
insb
loope
jns
push
dec
cltd
and
mov
mov
xchg
dec
jo
and
bound
sbb
aam
repnz
add
out
or
jns
pusha
sbb
xor
mov
in
clc
adc
mov
cs
rcrb
mov
cmp
dec
call
mov
int
mov
add
hlt
imul
cmp
mov
and
mov
jl
rcr
ret
xor
mov
cmc
xor
or
jo
cli
mov
movsl
add
std
clc
mov
dec
sahf
outsl
js
cmp
stos
dec
add
test
out
cmp
jnp
add
in
add
mov
mov
loopne
stos
divl
xor
cwtl
or
or
push
sti
mov
fwait
scas
dec
inc
lds
mov
nop
mov
adc
loope
xor
in
sub
cli
imul
cmpsl
jnp
or
or
inc
jns
add
pop
jb
setg
shrl
daa
inc
sub
cmp
insb
cld
int3
mov
sbbl
mov
andb
test
add
or
repz
aad
xchg
and
fdivs
or
and
mov
or
push
loop
add
aas
cmp
and
cwtl
pushl
dec
inc
movsl
mov
mov
ljmp
or
mov
mov
mov
sti
test
or
push
adc
xor
inc
daa
dec
sub
jl
lret
and
adcb
arpl
cwtl
lea
or
inc
jb
iret
jmp
ljmp
mov
push
sbbl
out
adc
sbb
sub
cmp
call
daa
add
arpl
xor
xchg
adc
sar
mov
mov
sbb
adc
push
add
mov
ret
add
cmp
dec
pop
adc
mov
enter
jne
clc
add
push
dec
in
add
dec
shl
mov
push
jge
sbb
inc
addr16
jg
push
push
push
inc
daa
lcall
and
push
adc
test
shlb
sub
jns
or
mov
inc
in
mov
cmp
lods
add
stos
and
pusha
cld
daa
pushf
fisubrs
sbb
stos
add
incl
jbe
int
or
adc
shll
inc
add
adc
add
fsts
xor
out
orps
add
mov
mov
sub
push
add
sub
rcrl
lret
inc
cmp
out
push
loopne
push
cld
push
aad
xor
sbb
mov
adcb
insb
and
and
xchg
stc
adc
push
into
sbb
insl
outsl
or
sbb
adc
fsubrs
out
aas
and
pop
cs
sbb
pop
add
hlt
sub
xchg
mov
mov
mov
int
pusha
hlt
sub
imul
inc
push
push
cmc
add
into
sub
out
push
mov
xchg
test
mov
inc
or
pop
jg
in
inc
add
mov
adc
shlb
jmp
sbb
cmp
add
and
icebp
sbb
jmp
insl
sbb
fnstcw
pop
test
movl
xchg
jae
pushf
lret
ds
and
mov
iret
adc
dec
adc
sub
or
xor
and
clc
add
es
sub
add
sub
bound
aaa
add
out
mov
movsb
jbe
out
and
xor
add
fsubr
inc
mov
icebp
adc
xor
pop
push
rcll
add
icebp
shrl
loop
push
jo
jae
adc
popa
add
mov
xchg
xor
cld
add
loop
out
data16
stos
and
cmpb
mov
sti
mov
cmpsl
pop
xchg
into
xchg
dec
sub
scas
and
cli
push
and
and
mov
add
pop
fwait
jnp
imul
xchg
mov
sahf
sbb
cmpsl
sbb
loopne
xor
dec
mov
or
mov
fidivs
mov
xchg
dec
cmc
add
or
add
test
movsb
jae
call
cmpb
mov
or
shlb
mov
aad
mov
repnz
fisubrl
cmp
push
sbb
nop
add
test
insb
stos
out
test
sub
pop
fidivl
movsb
js
add
leave
or
testb
cld
adc
mov
add
cmp
dec
and
inc
aaa
loopne
sub
out
push
clc
sti
lret
push
lcall
jmp
je
mov
mov
loopne
pop
push
mov
cli
xor
push
popl
or
push
mov
dec
push
and
nop
addl
add
int3
stc
decl
stos
jb
mov
vpunpcklbw
rolb
sbb
stc
inc
and
pop
fldt
adc
jno
das
sub
dec
add
out
push
push
sub
add
add
fidivrs
push
rorb
jge
mov
cmp
add
push
out
cld
pusha
sbb
jmp
test
push
pop
fidivl
or
rorb
loop
jne
add
pop
mov
jo
push
adc
out
les
dec
rolb
push
dec
dec
jge
add
or
lods
mov
cmp
add
add
mov
cmp
movl
jmp
mov
mov
pop
sub
in
and
nop
adc
or
mulb
and
cli
adc
lahf
adc
adc
adc
ret
add
and
mov
cmp
imul
in
fs
mov
dec
js
mov
xchg
jns
hlt
mulb
add
out
clc
push
mov
rolb
push
add
xchg
pop
cltd
adc
cmp
lods
sub
clc
jge
movsb
adc
stos
movsb
dec
mov
fstpl
add
scas
rolb
xchg
in
add
xor
loop
arpl
lock
shrb
pop
jno
mov
cmpb
mov
adc
mov
adc
sub
das
sahf
add
xor
xlat
fwait
andl
cltd
in
pop
adc
mov
arpl
je
in
cmpsb
adc
rcr
push
add
mov
xchg
push
dec
dec
sbb
aad
lcall
clc
jp
and
or
faddl
in
ds
and
pop
flds
add
add
aam
and
and
and
ljmp
shl
test
add
and
insb
mov
xor
add
mov
or
mov
mov
pop
pop
stos
loopne
or
jae
out
cltd
ficompl
gs
add
inc
mov
hlt
adc
lahf
adc
mov
xchg
lods
cli
and
jne
fmuls
sbb
lds
lods
test
add
jmp
loopne
push
inc
or
cs
in
mov
ficoms
ret
shlb
sub
xor
insb
out
mov
nop
mov
aaa
and
push
xchg
out
jns
ljmp
popa
adc
shlb
lret
insl
int
pop
idiv
sub
mov
sbbb
pop
movntps
xor
pop
cmp
mov
pop
add
sbb
es
add
fcoms
dec
add
mov
dec
add
mov
add
add
xlat
push
movsl
int3
loop
pusha
mov
cmpsl
push
addr16
jno
cmpsl
sub
sbb
cwtl
fildll
mov
xor
sbb
das
and
test
or
lock
or
push
xchg
mov
sub
sti
sbb
pop
pop
insb
sbb
inc
mov
les
sbb
fcmovnu
add
cmpsb
test
and
mov
test
and
lret
mov
jp
fsubs
push
push
loopne
add
pop
in
sbb
jge
jle
jmp
sbb
lock
adc
jnp
add
enter
sbb
std
add
sub
sbb
test
adc
inc
imul
ret
hlt
cli
xor
mov
aad
xchg
xchg
push
movsb
sbb
pop
pusha
enter
fcompl
sub
lret
rolb
add
lds
xchg
aaa
repz
sbb
mov
mov
add
or
rolb
call
in
or
lret
sahf
cmp
into
flds
and
out
add
test
cmp
xor
cltd
roll
xor
xlat
cmpb
and
add
imul
ds
and
add
nop
add
and
stos
shl
stos
test
add
shrl
cli
or
mov
mov
cs
mov
sub
aaa
cmp
dec
pop
and
or
mov
sbb
pusha
adc
pushf
xchg
mov
xchg
ret
adc
cmpsl
stos
loope
pop
lds
dec
add
and
pop
inc
xor
push
shl
das
inc
popf
adc
and
mov
push
inc
insb
pushf
out
lods
das
enter
jbe
pop
cmpl
lock
inc
insl
dec
sbb
and
cmp
cmp
and
stc
jp
fs
ds
stos
pop
xor
or
outsb
cmc
js
arpl
bound
add
sbb
xlat
and
shll
xchg
mov
push
or
outsb
addl
push
pop
lea
in
adc
mov
mov
mov
mov
lea
out
negl
add
fmuls
scas
inc
xchg
jecxz
xchg
int
inc
add
iret
std
push
sbb
mov
lret
mov
lret
push
cwtl
mov
or
sbb
adc
and
pop
andl
fidivrl
cmp
fs
jne
xorl
xchg
xor
sub
and
mov
jnp
add
ljmp
loope
adc
dec
sbb
mov
call
and
aad
push
data16
adc
add
pop
lret
aam
sub
add
mov
dec
sbb
bound
or
ret
notb
fs
mov
add
xor
aaa
sbb
adc
ss
cs
add
dec
sti
mov
pushf
add
int
adc
push
pop
sub
imul
mov
sub
insl
outsb
push
inc
andl
dec
mov
inc
imul
roll
out
xor
dec
cwtl
mov
xlat
movsb
push
fs
fidivl
add
add
loop
ljmp
adc
mov
push
jg
loope
mov
add
loop
jns
inc
add
je
xor
rcrl
jo
adc
lahf
jg
shld
xchg
jmp
lds
add
cld
inc
sub
addps
shlb
mov
fldl
push
pop
jmp
mov
xchg
mov
fisttps
and
pop
mov
pop
call
stc
dec
adc
lea
insb
dec
cmp
jo
sbb
aam
inc
enter
push
loopne
jle
dec
pop
push
push
and
roll
pop
xchg
xchg
shlb
mov
fwait
xchg
xlat
inc
mov
insl
push
push
cmpsb
rorb
add
lret
cmc
push
gs
out
push
add
xchg
loopne
and
jns
mov
dec
sbb
push
push
lods
shr
inc
test
in
adc
sahf
mov
pop
or
add
sti
sbbb
pushf
mov
dec
add
dec
or
push
inc
bound
loopne
dec
jb
call
arpl
mov
add
int
adc
call
dec
jge
pop
push
jle
mov
nop
mov
xchg
inc
sub
pop
inc
mov
push
xor
jle
insb
jmp
fistpl
pop
outsl
call
push
and
add
push
mov
insl
call
mov
mov
xor
jbe
lock
xor
add
mov
pop
into
add
loop
bound
mov
mov
clc
inc
test
fdivrs
mov
sbb
pop
add
inc
jae
stos
stc
push
lahf
jne
add
stc
xor
rol
cs
xchg
test
and
jo
arpl
stc
and
inc
xchg
mov
out
pop
nop
incl
mov
rorb
push
mov
call
xlat
push
stos
mov
test
and
js
shll
xor
es
loope
addr16
or
mov
ficoml
mov
test
nop
and
add
in
jb
xchg
faddl
push
xorb
xchg
push
lcall
xor
int
sbb
in
or
bound
cmp
je
fisttpl
jne
or
imul
faddl
out
mov
xor
je
add
sub
cld
xlat
test
int3
mov
cmp
fwait
inc
cmp
push
popa
adc
rcrb
pop
imul
add
ret
cs
cmpsl
aas
lcall
ja
mov
cld
mov
add
mov
and
add
adc
fdivs
jo
jp
add
cmp
outsl
std
mov
push
call
xchg
push
inc
jmp
jecxz
lock
adc
add
lods
sbb
filds
mov
cmp
gs
mov
or
lahf
add
pop
icebp
shll
sbb
mov
int
cld
andb
pop
test
sub
icebp
clc
xor
test
sub
scas
cmp
mov
popf
xsha1
cmpsb
bswap
out
stos
cs
stos
sarl
out
mov
mov
dec
jb
xchg
cmpsb
adc
dec
pop
inc
sub
mov
dec
pusha
sub
push
adc
dec
cli
mov
pop
or
adc
sub
imul
out
rolb
faddl
mov
mov
add
shll
push
je
mov
scas
add
jl
mov
push
jbe
pop
xor
cmp
add
es
daa
xchg
sub
mov
jo
cld
jg
pop
cmp
incl
pop
aad
cmp
sbb
cmp
cwtl
and
cmp
into
push
add
hlt
add
pusha
add
add
cld
out
sub
sbb
imul
pusha
sub
pop
pop
outsb
mov
inc
outsl
insb
fs
jb
pusha
fstpl
mov
or
das
pop
insl
jle
add
and
loope
pop
pop
push
fbld
mov
xchg
lret
mov
add
jne
into
xchg
or
mov
lds
mov
gs
push
jge
lods
addl
dec
pop
or
add
xor
call
jge
imull
mov
mov
cmp
sub
pop
xchg
jge
pop
xor
sub
popa
push
dec
orb
lods
dec
inc
cmc
mov
push
in
es
daa
sbb
add
mull
sbb
jge
push
add
dec
imul
inc
adc
push
mov
push
mov
jo
data16
jmp
test
adcb
adc
lahf
sub
test
push
enter
sub
or
leave
dec
sbb
add
das
mov
lock
lahf
sar
or
out
sub
fdivl
pop
push
sub
les
test
data16
xchg
fstpt
or
mov
pop
push
in
xchg
cmp
sbb
mov
lock
cmp
cmp
sbb
add
xor
push
call
mov
insl
test
loopne
or
add
push
push
jns
adcb
adc
add
mov
push
xchg
mov
and
dec
sahf
mov
jo
call
cli
inc
push
loop
add
fwait
lret
mov
xchg
inc
movsl
add
mov
pop
dec
jo
mov
add
cmpsl
hlt
and
sub
stos
daa
pop
std
mov
add
or
adc
and
xor
adc
fcoml
add
xchg
mov
xchg
lock
add
adc
dec
jp
fst
out
mov
scas
fwait
mov
and
mov
mov
fldenv
jmp
rol
jae,pt
call
jg
mov
negb
mov
in
out
mov
add
sbb
cmp
and
mov
mov
push
pop
jecxz
cmc
data16
les
lret
in
movsb
pushf
adc
or
jae
outsl
adc
dec
jg
mov
push
jne
loop
pop
andb
xlat
mov
ret
call
add
add
jl
jnp
push
popa
subl
test
cmp
add
cmpsb
cltd
cwtl
popf
sbb
push
mov
imul
daa
pop
xorb
out
add
add
mov
inc
cmp
or
daa
push
mov
inc
or
mov
fcompl
add
call
inc
jg
dec
loope
add
stos
aad
pusha
lea
shlb
jno
scas
sbb
int
pop
jp
and
out
add
jno
scas
xor
mov
psllw
sub
or
sub
jg
mov
stos
testb
pop
sbb
mov
push
pop
and
mov
sub
push
cltd
add
dec
pop
int3
mov
test
mov
lret
and
sar
fucomi
fisttpll
adc
iret
cmpsb
lock
adc
popa
and
jp
das
and
xchg
in
pop
daa
test
call
dec
pop
or
mov
add
jne
nop
dec
cltd
ljmp
outsb
call
push
scas
fdiv
inc
add
and
and
push
lea
mov
dec
sub
xchg
loope
cmp
cmp
pop
jns
sbb
mov
add
lock
nop
stos
add
mov
dec
xchg
bnd
psubsb
aaa
test
jge
fadds
adc
adc
inc
jo
xchg
jle
test
sbb
mov
cmp
add
xchg
mov
pop
lods
rol
les
sar
or
xor
js
mov
shl
push
inc
add
jns
cmp
lcall
push
sub
stc
mov
fbstp
mov
iret
adc
xchg
lock
xlat
push
jbe
add
pop
testl
pusha
xchg
push
add
and
xchg
aad
push
push
mov
mov
mov
fstp
mov
fimuls
orl
inc
inc
push
jne
sub
add
add
push
movsl
aam
clc
cmp
and
add
je
rorb
xor
pop
add
sbb
pusha
subl
xor
into
lcall
and
xor
pop
and
mov
jne
sbb
mov
add
xor
leave
dec
dec
xchg
jmp
and
cwtl
xor
pcmpgtb
xor
or
js
add
inc
jne
lcall
add
or
pop
jo
in
das
shl
stos
ja
pop
testl
inc
fdivrl
test
lahf
leave
push
dec
pusha
bound
add
adc
pop
clc
mov
add
mov
add
cltd
mov
sbb
push
bound
pop
icebp
xor
push
xchg
mov
pop
lock
test
cli
sbb
sti
add
xchg
add
add
mov
cli
test
in
daa
mov
adc
lret
rcrb
and
add
pop
dec
jg
sbb
mov
add
xchg
cs
sahf
pop
cmp
jnp
rcrl
mov
pop
shrb
jae
push
in
inc
push
cmp
add
xor
cvttps2pi
push
and
nop
paddq
xchg
sbb
ds
sbb
shrb
add
and
stc
sub
sub
out
arpl
sub
test
xor
in
jp
xchg
mov
out
nop
scas
ja
add
dec
dec
xor
stos
ficomps
xchg
mov
test
mov
aam
pushf
fstps
mov
or
adc
jmp
test
jb
xor
out
cmp
jnp
mov
out
xor
into
adc
mov
push
add
mov
icebp
insb
pop
stos
sbb
mov
shrb
in
mov
add
cld
sti
and
pop
inc
sbb
pop
repnz
inc
ja
mov
push
push
movsl
sar
sub
sarb
add
jb
bnd
xor
add
push
int3
or
xor
cmp
roll
xor
cwtl
fistpl
add
add
or
subb
or
and
inc
push
fdivrl
nop
jnp
mov
add
push
std
push
call
add
jnp
ret
inc
xchg
mov
or
mov
fstps
popf
and
inc
mov
sbb
inc
addr16
or
movsb
pushf
pop
ret
dec
cs
push
lods
shl
cmp
sbb
dec
and
xor
push
inc
iret
andl
gs
mov
fcomps
outsb
movsb
leave
enter
bound
fists
xchg
add
mov
mov
xchg
or
sbb
in
dec
test
add
outsl
daa
pop
ss
arpl
adc
mov
sub
jns
loop
inc
mov
dec
xchg
add
insb
xor
mov
js
adc
cmp
popf
add
pop
rolb
pop
xor
orl
addb
jg
jae
aas
pop
sbbl
and
xor
adc
add
jle
xchg
sub
push
pop
les
subl
mov
sbb
sbb
push
ret
jns
js
in
add
mov
mov
cwtl
sub
push
xchg
mov
add
lcall
jp
mov
xchg
add
dec
aam
sub
xchg
iret
int3
mov
add
jecxz
lock
cld
push
and
mov
xor
mov
orb
mov
testl
sbb
movsb
push
rcrl
add
subl
arpl
add
loopne
in
in
ud2
cld
mov
lods
adc
jl
add
xor
test
fs
and
scas
stc
stos
dec
rcll
adc
ss
mov
push
dec
ja
dec
ljmp
dec
cmpl
into
leave
outsb
popf
and
daa
dec
int3
and
xor
xchg
inc
push
sub
pusha
ja
pushf
pop
fimull
lret
clc
jo
xor
lods
bound
ret
and
cmp
outsl
add
cmpl
int3
sbb
jmp
jo
and
jmp
cld
ds
add
loope
and
std
shlb
test
xorb
mov
mov
int3
add
out
iret
xchg
lret
add
sahf
fbstp
lods
imul
popf
rcrb
daa
mov
inc
pop
mov
mov
xchg
rcl
out
loopne
mov
je
into
add
mov
or
aaa
negl
sbb
jle
sbb
jmp
push
lret
sbb
shll
sbb
mov
dec
xor
pop
xor
orl
inc
xchg
mov
jnp
pusha
jmp
dec
fldl
mov
pop
mov
fsubr
pop
pop
mov
repnz
dec
push
push
nop
aam
xor
mov
stos
xchg
pop
adc
mov
mov
or
jnp
movsl
mov
aaa
mov
les
sub
mov
movswl
sub
mov
adcl
and
rcrb
or
jbe
cs
mov
cmp
cmp
enter
add
pop
xor
add
add
jno
xor
dec
lret
fildll
inc
jo
sbb
bound
in
or
sub
jo
xlat
fdiv
inc
xor
dec
xchg
arpl
out
and
fisttps
icebp
push
add
jp
mov
sub
lock
mov
call
sub
ret
sub
iret
jo
pop
lcall
or
pop
pop
movsl
addr16
leave
aad
cmp
incl
xor
js
sub
mov
repz
int
inc
adc
xchg
sub
mov
adc
dec
add
shrl
add
adc
adc
mov
loopne
shll
jp
and
dec
addl
push
outsb
out
inc
push
ret
or
dec
gs
inc
ja
roll
add
xchg
loope
pop
push
mov
jae
in
ljmp
xor
sbb
nop
mov
scas
cld
shll
add
pop
jae
inc
xlat
pop
add
push
add
pop
xor
cmp
or
mov
hlt
push
add
insb
aam
es
add
cmp
inc
xchg
repz
add
or
out
and
and
outsl
jmp
fisubl
cltd
mov
add
stos
test
fisubrs
and
cmp
fmull
loop
je
pop
jle
sub
inc
hlt
movsl
jns
mov
test
sbb
and
mov
lods
cltd
int3
jmp
and
daa
inc
jg
or
outsl
push
in
xchg
adc
xchg
and
push
mov
sub
ja
nop
xor
jle
mov
inc
out
inc
cmpsb
sbb
pop
rclb
fstpl
pop
mov
mov
fimuls
imul
ljmp
in
mov
lret
add
ds
push
xor
sub
push
push
in
mov
iret
adc
repnz
adc
hlt
inc
sub
mov
mov
inc
mov
jbe
cmp
loope
dec
loopne
or
lret
pop
fmull
cmp
rcll
dec
jle
int
je
dec
push
add
pop
or
or
add
push
hlt
adc
mov
mov
daa
inc
add
xor
inc
test
arpl
repnz
ds
xor
push
sti
das
inc
jae
add
or
scas
lret
int3
popa
mov
repnz
sti
add
insl
jle
test
jbe
ret
fldcw
push
sbb
inc
mov
scas
add
adc
push
dec
mov
lock
dec
cmp
jmp
test
add
lock
je
xor
pop
out
mov
xchg
mov
mov
add
push
mov
cmp
ljmp
fs
sbb
mov
jl
mov
mov
pop
push
lds
jge
sbb
or
push
orb
sahf
pop
push
mov
aam
aaa
push
or
fucompp
popa
mov
or
mov
push
sbbl
add
jle
fldcw
daa
xor
or
add
mov
fdivs
pop
add
sti
jp
mov
xor
outsb
add
lret
dec
add
mov
cmp
cmp
shl
leave
pop
lods
ja
jge
sub
enter
add
sahf
push
faddl
pop
inc
dec
fadds
insl
inc
pusha
xchg
or
loop
and
mov
lea
xor
lods
fsubrp
cmp
imul
xor
out
add
movsb
sbb
cld
sahf
sbb
add
sub
hlt
add
popa
jmp
aad
or
dec
leave
ret
mov
ljmp
and
or
test
adc
xor
mov
mov
adc
sub
pushl
outsl
jecxz
popf
mov
outsl
pop
lret
mov
mov
insl
dec
adc
or
mov
xor
mul
inc
mov
jmp
add
mov
into
push
movsl
dec
mov
xor
xor
pop
sub
std
orb
imul
push
push
cltd
xor
pop
sbb
lret
pusha
iret
inc
add
add
in
lcall
sbb
xor
push
cmc
mov
xchg
addr16
movsb
push
mov
imul
test
dec
add
add
inc
xor
mov
outsl
push
sub
ret
push
pop
loopne
inc
add
push
jbe
nop
and
rorl
fistps
nop
push
test
xchg
dec
mov
cmp
mov
jo
int3
mov
jae
repnz
movsl
sub
jno
xor
dec
enter
or
jle
scas
or
add
cmp
dec
pop
add
jecxz
cld
mov
rclb
sbb
aas
cmp
lods
inc
inc
push
cmpsb
fdecstp
push
add
out
repz
pop
pop
jno
adc
sbb
add
test
cmp
add
mov
cwtl
mov
andb
inc
xchg
mov
dec
addr16
imul
sub
mov
jae
popa
or
pop
js
pop
arpl
ss
push
mov
xchg
pop
mov
or
cmp
lahf
orb
ja
in
sbb
mov
shlb
pop
sahf
lahf
lods
and
loopne
jne
jbe
and
adc
cli
in
push
push
sub
add
xchg
ljmp
sbb
sbb
mov
es
into
jno
push
cld
ss
xor
xchg
add
xchg
jle
add
xchg
ficoms
add
scas
pop
shrl
popa
fldcw
js
push
adcb
mov
int3
push
mov
sbb
sbb
adc
pop
and
pop
out
add
jno
jmp
rolb
pop
pop
jge
loop
jecxz
cmp
test
add
cmp
cmp
sete
push
in
aam
mov
mov
gs
add
and
ljmp
loop
add
jae
mov
imul
in
out
mov
add
push
inc
mov
xchg
add
xchg
pop
jge
add
shll
inc
gs
cld
add
jbe
xorb
ret
daa
fnstsw
lods
and
sbb
in
fs
cmc
cmp
loop
in
imul
sub
popl
test
nop
sub
mov
or
lock
cmc
adc
sub
popa
add
jge
cld
inc
movsl
dec
je
add
insb
dec
cli
flds
std
popa
rolb
adc
jmp
pop
not
push
addr16
xchg
mov
mov
sbb
cmp
xor
arpl
inc
scas
inc
out
nop
adc
and
mov
jl
add
fwait
in
loope
pop
inc
mov
cmp
and
add
daa
iret
lea
faddl
xchg
inc
sub
add
sahf
test
hlt
add
addb
sbb
and
mov
in
inc
pop
cwtl
shlb
xorb
xor
fdiv
push
fisubl
sbb
add
push
jnp
and
out
mov
sbb
cmpsb
and
sti
inc
movsb
into
jb
add
arpl
xchg
pop
shll
pop
sub
mov
pusha
add
or
or
mov
xor
in
and
cs
add
loop
sti
sub
push
adc
std
rorl
mov
scas
movsb
and
scas
nop
fisubl
sti
inc
sbb
pop
fdiv
rolb
dec
jo
push
lret
add
ds
and
pop
and
mov
pop
cmp
pusha
push
mov
call
jge
add
dec
dec
adc
shrb
jecxz
add
call
pusha
into
pushf
add
mov
cmp
sbb
push
test
push
mov
add
jle
inc
clc
xlat
pop
shl
lods
lret
dec
push
xor
or
aas
inc
sahf
add
bound
sar
out
mov
out
out
test
int3
add
stc
adc
add
mov
inc
xchg
adc
pop
xchg
mov
add
cmc
or
or
jno
cmp
xor
and
popf
mov
sbbb
jnp
jmp
adc
xor
jp
dec
and
mulb
sub
xlat
aaa
sbb
add
loopne
adc
inc
jbe
pop
pushf
sub
repz
xor
xor
and
inc
pop
cmp
rorb
mov
test
out
jno
in
jle
je
or
add
adc
add
cld
int3
mov
test
aam
into
orb
sbb
adc
jne
add
xchg
pusha
test
add
mov
pop
pop
inc
add
out
es
adc
insb
mov
inc
push
sub
push
shrb
fisubrl
ret
call
cwtl
add
in
icebp
dec
sar
sub
mov
dec
mov
add
push
mov
and
ljmp
push
clc
aas
enter
add
stc
lcall
add
jno
movsb
cmpsb
and
add
mov
mov
into
test
or
in
jp
jmp
bound
xor
mov
pusha
pop
les
in
cwtl
mov
add
xor
add
xor
fs
mov
xchg
sbb
pop
or
loopne
adc
add
stos
stc
pop
jno
imul
sub
add
mov
mov
in
add
add
push
dec
sbb
cmp
in
adc
sbb
aas
mov
in
imul
inc
leave
sub
cmp
fdivrs
add
sbb
push
dec
mov
and
pop
inc
and
add
add
cmp
jmp
sbb
lahf
pop
mull
add
mov
sete
add
fs
pop
sub
stos
push
and
repz
ja
dec
iret
add
sti
cmpsb
stos
adc
cmc
xor
dec
add
and
repnz
xchg
pop
mov
add
outsb
loop
rolb
jns
add
inc
add
mov
and
pop
loop
out
and
shrb
dec
hlt
jg,pt
mov
mov
jbe
mov
add
aam
pop
dec
add
pop
les
add
out
pusha
jmp
add
xchg
sub
cwtl
dec
add
xor
icebp
repz
andb
arpl
add
cmp
inc
cmp
and
hlt
test
outsl
push
jmp
loopne
sbbl
testb
fwait
inc
js
push
mov
test
jns
es
idiv
jbe
add
mov
fiaddl
inc
mov
jl
pop
cmp
mov
or
in
fiadds
je
add
je
add
into
jns
sbb
add
shrb
add
sub
mov
mov
or
fwait
aas
jne
mov
popf
lcall
jmp
fildl
int3
push
outsb
repnz
push
jg
add
ljmp
add
out
jne
xchg
sti
inc
stos
add
pop
lods
push
add
jp
and
out
sbbb
pop
pusha
testl
cmpsl
add
adc
jno
sbb
imul
les
jecxz
lret
mov
jg
pop
scas
dec
das
lret
stos
pop
js
or
popf
fmuls
les
insb
icebp
neg
sbb
push
loopne
add
mov
mov
sub
test
xor
sub
jns
adc
jae
fmull
test
or
sarl
fidivrs
sarb
mov
adc
jmp
push
ror
or
and
dec
add
pop
movsb
pop
inc
sub
add
sbb
add
je
fwait
int
mov
test
mov
mov
or
jg
jge
add
or
outsb
jno
jns
add
adc
incb
mov
pop
pushf
stc
add
insb
int
hlt
addl
mov
jecxz
mov
outsb
add
lock
adc
inc
mov
jp
lret
cmp
or
test
sbb
hlt
push
test
shlb
cmp
popf
push
ss
lahf
and
xorl
aaa
mov
dec
xchg
xchg
fwait
pop
or
and
les
push
daa
mov
jne
or
loopne
mov
clc
cmp
xor
pop
andb
and
addr16
jne
ljmp
mov
cld
cmp
adcb
movsb
shll
add
test
jecxz
lret
add
repz
pop
imul
jl
inc
pxor
sahf
push
sbb
dec
add
mov
mov
aam
rorb
addl
inc
mov
into
bound
xlat
jne
pop
cs
sub
ljmp
bound
jg
inc
xor
jns
sub
xchg
scas
and
sub
iret
push
cmp
adc
enter
sbb
mov
add
mov
and
pop
add
inc
and
push
cmp
mov
repz
pop
in
jg
add
lods
xchg
dec
ds
sub
add
mov
sbb
adc
fwait
lods
mov
fadds
cmp
js
add
shlb
cwtl
pop
call
mov
outsl
jmp
xchg
cmp
addb
cmp
adc
push
xor
fmull
hlt
sbb
xchg
push
imul
push
rol
xor
pop
sbb
adc
push
loop
daa
dec
push
add
and
in
inc
pop
cli
cmp
add
add
jge
adc
test
out
sbb
jp
outsb
jl
mov
add
xor
jb
jecxz
add
sarb
adc
xchg
add
mov
daa
dec
repz
push
push
push
dec
loope
add
dec
mov
out
and
xchg
sub
test
and
into
sub
shll
cmp
jmp
mov
pop
xchg
cld
sbbb
or
jl
or
mov
lcall
lea
fldl
add
add
jp
in
dec
pop
cmp
mov
mov
cmc
xor
push
les
nop
jmp
fwait
add
in
movsl
add
clc
mov
ret
repnz
inc
add
pop
or
add
xchg
fcoml
sbb
add
sti
pop
out
add
mov
je
jg
adc
add
jbe
or
aaa
jmp
subb
loopne
cmp
xchg
add
shlb
ret
int
es
jg
xlat
subb
push
leave
pop
push
jo
xchg
adc
push
mov
out
jns
outsl
pusha
sub
lret
andl
lock
jnp
add
or
push
rcrb
jae
add
add
dec
idivb
bound
cli
inc
sbb
mov
adc
ja
stos
sahf
mov
adc
hlt
in
mov
addb
aad
and
or
scas
dec
push
subb
add
xorl
cwtl
int3
arpl
and
or
mov
jno
sbb
imul
pop
jl
cwtl
add
stc
inc
sbb
mov
sbb
incb
test
sub
lret
ss
or
inc
adc
and
popa
adc
or
add
xor
scas
add
push
xchg
notl
and
dec
cmp
xor
ret
inc
mov
sub
inc
adc
les
fimuls
lret
addb
aaa
mov
icebp
add
outsl
jge
mov
mov
loopne
shlb
loop
iret
addb
mov
adc
xchg
sub
jle
inc
in
add
cli
popa
std
subl
fiadds
js
rolb
xor
cwtl
insb
add
sbbl
inc
daa
xchg
jp
loopne
dec
sbb
movsl
xchg
adcb
push
sbb
test
inc
sub
inc
lock
or
fsubr
stos
inc
inc
mov
pop
jb
sbb
cmpsb
inc
jae
add
bound
cmp
orb
add
cmp
add
int3
mov
push
or
pop
ja
adc
mov
xor
call
int3
je
subl
fstl
mov
or
shll
add
jns
cmova
add
pop
ljmp
mov
push
or
add
xor
das
shl
dec
sahf
sbb
rclb
xor
addb
mov
pusha
cs
inc
gs
add
xor
pop
mov
push
dec
aas
mov
sbb
icebp
int
push
rclb
into
mov
pop
mov
rcll
push
rcrl
cmpsl
mov
call
or
es
outsb
int3
imul
into
popa
adc
aas
popf
sub
inc
sbb
loopne
rcll
lahf
test
outsb
lret
shlb
enter
xchg
call
es
inc
in
push
mov
mov
test
sbb
inc
sahf
add
jns
sub
mov
lock
xor
sbb
add
insl
inc
mov
push
dec
add
lret
add
add
in
in
push
out
jno
and
cwtl
or
stos
popf
rcrb
loopne
sub
lock
lock
xor
inc
call
mov
adc
outsb
add
in
xchg
jmp
xchg
adc
loopne
cmp
or
pusha
enter
push
xlat
xchg
dec
jo
test
add
mov
jb
add
mov
outsl
movsl
pop
and
cmpl
sub
add
xchg
push
addr16
adc
jle
or
popl
mov
add
xchg
rolb
das
cli
rorb
xor
or
sti
ja
lods
in
es
inc
inc
pop
and
inc
rclb
sahf
aad
dec
arpl
mov
pop
hlt
sub
xor
test
addb
inc
or
sub
add
cmp
add
mov
mov
jecxz
add
outsl
push
dec
push
out
jg
add
insl
retw
adc
rorl
dec
movsb
mov
ret
sti
mov
fdivrl
and
sahf
mov
inc
in
add
dec
les
out
add
or
jge
inc
rcl
xchg
daa
mov
xchg
add
mov
dec
fcom
jne
xor
sti
xor
jo
jnp
aad
and
les
je
xchg
push
in
in
push
ds
pop
mov
add
shrl
mov
dec
movsb
imull
lods
or
ror
outsb
or
cmpb
sub
jecxz
mov
lds
loop
cmc
adc
and
inc
andl
jecxz
packsswb
sbb
add
jno
scas
sbb
sbb
push
inc
pop
add
xor
inc
add
jecxz
sbb
fisubrl
shr
enter
sbb
or
add
mov
cmp
sub
icebp
fistps
out
ret
clc
setge
jne
orb
into
leave
ret
mov
sub
mov
neg
test
popl
mov
mulb
mov
add
xor
aas
test
andl
add
ds
out
add
popf
lahf
jp
je
pop
add
jne
adc
push
dec
add
test
popa
call
out
push
data16
mov
inc
push
clc
daa
shrb
add
inc
mov
pop
or
or
ja
fisttps
imul
add
or
icebp
mov
sar
xlat
in
ljmp
shl
sbb
push
iret
mov
or
mov
lods
add
xchg
insl
adc
cwtl
shll
and
pop
or
xor
pop
cld
cmp
add
jns
push
jnp
out
cs
clc
push
sbb
add
mov
add
rorb
mov
ljmp
cmpb
push
cmpsb
add
insb
cld
xor
mov
mov
push
orb
jge
out
lret
imul
ljmp
add
lds
cwtl
jmp
scas
add
data16
das
gs
mov
mov
xchg
inc
jae
xchg
ds
xlat
movb
jbe
cld
mov
and
cmpb
inc
dec
mov
mov
dec
and
adc
push
add
fistpl
pop
jle
add
mov
pop
push
fldl
push
cwtl
cwtl
pop
inc
jne
cld
inc
push
jge
add
dec
pop
es
jg
fistps
rclb
push
mov
fsubr
pop
test
add
orl
ja
mov
sbb
lock
push
or
push
aaa
mov
cwtl
ret
add
mov
inc
cmp
imul
or
mov
pusha
cmp
mov
pop
sbb
rcrb
adc
lods
neg
xchg
xchg
jae
stos
add
inc
popa
ss
adc
add
pop
pop
xchg
mov
pop
inc
mov
pop
lcall
cld
lds
add
sbb
cwtl
xchg
inc
inc
add
pop
xchg
cmpsb
jmp
add
mov
mov
std
push
clc
hlt
movb
and
sbb
insb
bound
fcoms
xchg
xchg
je
jmp
pshufw
mov
push
add
fldenv
int3
fisubl
pop
mov
mov
and
movd
mov
and
xchg
xchg
jecxz
xchg
in
cmc
out
adcl
test
dec
mov
sbb
lret
pop
mull
inc
xchg
add
mov
adc
pop
add
mov
aaa
in
mov
aas
xchg
sahf
loopne
ficomps
test
psrld
or
or
jmp
mov
cmp
add
fwait
mov
repz
and
mov
or
jp
cmp
aam
ret
out
cli
fadds
mov
xchg
fadd
push
xor
sub
xor
dec
popf
ljmp
and
add
push
leave
xor
xor
adc
jns
pushf
xorl
add
loop
or
out
out
xor
cltd
lret
or
scas
add
xchg
adc
aas
dec
sbb
adc
popa
dec
scas
incl
add
cmp
jo
call
add
mov
idivb
scas
add
mov
mov
jecxz
and
dec
out
pop
test
cmp
add
fisubs
mov
xlat
sub
xchg
out
testl
enter
adc
xor
aam
outsb
shr
movsb
cmpl
mov
mov
movsl
and
mov
adc
or
test
in
pop
pop
xchg
cmp
subb
or
popa
xlat
aad
pop
dec
jo
push
nop
fadds
inc
xchg
sarb
mov
enter
dec
jae
sbb
shlb
add
js
cmpsl
jge
popf
mov
xchg
push
pop
int3
psrad
jne
mov
or
xchg
pop
mov
lock
mov
dec
sub
xor
mov
add
loope
loopne
lcall
push
xchg
jge
pop
pushf
inc
dec
add
repnz
add
hlt
sub
push
add
test
push
xchg
cmpb
or
bound
add
push
inc
popa
sti
mov
and
or
or
pop
dec
pop
popa
jo
xor
jb
push
aas
inc
adc
mov
xor
sar
out
je
mov
pop
ds
addb
stc
verw
iret
das
ds
fnsave
lods
cmp
movsb
push
xor
shlb
dec
pop
arpl
jnp
je
dec
in
fwait
jecxz
and
cmp
jnp
ret
sti
movsl
push
xchg
shlb
faddl
mov
popa
in
add
fwait
xchg
orb
insl
add
rcrl
push
jae
hlt
sarb
add
jbe
inc
mov
stos
adc
fsubs
mov
fsubrl
lret
fildll
mov
orb
push
mov
pop
mov
xor
adc
sbb
repz
inc
adc
inc
inc
lret
out
xor
lock
push
ja
repnz
pop
sbb
in
nop
add
add
nop
mov
icebp
call
add
ret
xchg
arpl
and
fidivl
add
push
frndint
bound
and
mov
jmp
dec
pop
add
sbb
clc
pop
mov
mov
sahf
cwtl
ja
in
sub
add
std
jg
add
outsb
add
loope
fisttpll
push
sti
roll
dec
jg
add
cmp
lock
outsb
pusha
xchg
add
inc
add
cmc
pop
adc
bound
mov
imul
hlt
fiadds
ret
lea
add
cmp
jge
inc
mov
and
add
or
and
add
pop
mov
jg
or
xchg
add
xchg
pop
and
push
add
jae
jl
fisubs
adc
dec
sub
jl
cmp
imul
lock
add
mov
xchg
add
xchg
std
mov
mov
add
add
scas
incb
dec
cmpsl
push
and
popf
inc
nop
fdivrl
add
fstps
rcrb
cmc
inc
xlat
jge
sub
and
push
in
push
pop
outsl
mov
add
das
and
push
and
xchg
pop
ja
add
je
inc
pop
lahf
mov
mov
lcallw
or
js
hlt
sbb
adc
inc
push
ret
or
add
mov
add
cli
adc
jg
lret
add
sub
sbb
mov
push
inc
cwtl
insb
add
daa
add
mov
sbb
fcoms
push
push
inc
jle
add
cmpsl
mov
push
pop
popf
cmp
fdivs
je
adc
mov
std
add
push
push
sbb
mov
add
stos
cmp
mov
mov
aas
cmp
xor
jae
add
mov
test
aam
and
push
out
cwtl
adc
adc
pushf
add
std
mov
pop
mov
jo
loop
mov
sub
subl
lock
adcl
je
pop
mov
data16
and
and
and
or
sbb
add
cmpsb
shrb
jo
mov
lods
adc
rolb
push
sbb
bound
or
ret
cltd
lods
fiaddl
into
push
push
andb
movsl
jo
addl
pop
xchg
repz
les
inc
aad
push
mov
add
pop
test
push
pop
addb
sub
add
dec
addl
add
lahf
pop
push
hlt
pusha
call
cmc
pusha
mov
dec
xchg
gs
sub
rcl
add
sbbb
dec
arpl
cmp
and
das
add
lods
in
mull
popa
hlt
outsl
out
add
mov
push
inc
inc
fwait
add
aam
jg
ret
cmp
daa
sbb
out
add
arpl
lcall
cmp
je
jp
cld
xchg
fcmovbe
cmc
decb
pop
and
cwtl
xchg
push
out
inc
add
sbb
in
xchg
and
nop
adc
xchg
cmc
jecxz
or
sbb
dec
andb
add
pop
dec
and
jo
inc
inc
loopne
push
add
rcrb
movsb
das
push
or
or
js
loopne
lret
in
dec
mov
daa
adc
xor
sub
adc
dec
loope
out
cmc
adc
add
into
ss
pop
clc
loopne
outsl
iret
js
or
or
fimuls
movsl
repz
lahf
mov
test
jp
les
add
jmp
mov
lcall
mov
lods
call
adc
imul
popf
adc
push
cmp
pop
jo
fstpt
dec
hlt
or
cmp
sar
outsl
cmpsl
sub
add
leave
fdivs
sbb
and
in
enter
out
ret
pop
fisttps
add
fisubs
rol
adc
mov
xchg
push
pop
lds
insl
gs
incb
jno
inc
jl
or
or
adc
mov
flds
cmp
cmp
jg
negl
aam
int3
cmpsl
inc
mov
insl
cld
and
add
in
nop
jne
xor
and
ret
inc
cmp
mov
inc
or
fdivrs
pop
cwtl
add
adc
loop
sbb
ds
add
cwtl
cmp
nop
add
and
cmpsb
or
aam
jge
cld
xchg
iret
sarl
adc
pop
push
mov
enter
js
mov
mov
add
outsb
jle
pop
add
data16
mov
insb
add
mov
adc
je
sub
sbb
cmp
add
mov
inc
jecxz
sarl
jb
orb
inc
push
xchg
or
add
dec
mov
popf
jmp
lock
mov
incl
cmp
pusha
jmp
add
xchg
cmp
jns
push
test
shr
xchg
and
sub
mov
dec
and
outsb
add
mov
mov
es
into
cmp
add
add
xchg
sarl
loop
add
xorb
push
inc
pop
fs
in
inc
sarb
dec
or
cs
inc
mov
nop
mov
jle
push
dec
pop
inc
stos
orb
rolb
adc
dec
and
repz
jl
loopne
dec
mov
mov
lahf
inc
ja
cmp
inc
jl
pop
and
xchg
inc
arpl
lahf
mov
ret
lock
fidivs
adc
adc
push
and
ljmp
fidivrs
adc
mov
rcrb
xor
mov
mov
dec
pop
es
pop
pop
cmp
xchg
cmp
push
lahf
dec
aaa
push
or
sbb
push
inc
stos
add
and
sbbb
add
test
daa
add
mov
popf
add
sti
xor
out
push
dec
add
lock
bound
lcall
shlb
cmc
loopne
or
jb
shl
sbb
rcrb
in
add
jmp
xor
push
mov
jg
ss
fsin
jno
lds
xchg
stc
hlt
addb
inc
mov
lds
cmp
jl
mov
stos
inc
xchg
and
rorl
pop
fs
subb
shll
pop
into
addr16
repnz
mov
ljmp
add
pop
lods
sub
inc
cmpsl
inc
loop
cmp
or
xchg
mov
sub
xchg
test
cltd
dec
push
inc
push
add
xor
repnz
dec
pusha
sbb
pop
and
enter
add
add
lcall
push
xchg
add
add
xchg
add
jae
aas
inc
mov
cltd
xor
or
sub
mov
adc
mov
subl
sbbb
xchg
push
or
adc
mov
add
xor
nop
sti
pop
ds
fincstp
add
pop
shl
and
xor
adc
fs
lret
add
mov
add
fwait
mov
lea
sbb
aam
xor
jle
es
mov
sub
xchg
add
xchg
notb
push
das
mov
jns
jmp
pop
ss
andb
add
fisttpll
xlat
xor
jns
inc
adc
lea
add
pop
inc
pop
jne
out
and
add
dec
jo
call
sbb
xor
mov
test
and
sub
add
out
jge
inc
rolb
ret
es
dec
and
pop
insb
outsb
sbb
mov
inc
fwait
inc
or
incb
add
sub
sbb
fndisi(8087
and
xor
add
out
rcl
add
nop
xor
out
cmp
mov
pushw
push
cmpsl
fmuls
loop
lods
pavgb
movsb
pop
or
imul
add
and
stos
sbb
lret
rolb
ffreep
repnz
fs
mov
fs
enter
inc
imul
push
add
pop
cmp
push
add
lahf
sbb
lds
xchg
xchg
add
sub
fcmovnbe
sub
loop
mov
mov
add
fisubs
cli
mov
mov
dec
pop
and
mov
fsubs
daa
jl
push
outsl
mov
pushf
add
stos
mov
call
xor
or
inc
loopne
add
add
icebp
xchg
xor
test
cmc
pop
loop
cmp
insl
mov
loopne
xchg
orl
aam
jb
std
test
addr16
mov
cmp
and
stc
pop
or
and
add
add
xchg
jmp
xor
sub
inc
lods
inc
push
push
iret
mov
ror
addl
pop
cmp
sti
nop
mov
stos
icebp
add
out
jnp
dec
sbb
and
lcall
push
cmpsl
pop
jno
inc
aas
push
add
pusha
fs
adc
rcr
add
test
xchg
pop
add
xor
add
xlat
in
imul
mov
outsl
jo
adc
fsubrl
hlt
add
cmp
sbb
add
andl
sbb
mov
lods
or
aad
cmc
lret
push
movsl
jl
pslld
js
or
in
jo
jo
into
sub
add
add
mov
cli
enter
imul
mov
xlat
daa
jbe
add
adc
add
dec
mov
daa
adc
ret
mull
sbb
call
clc
mov
mov
jl
repz
fsts
cmpsl
aam
shll
insb
in
lahf
jp
sbb
sbb
inc
les
lea
cmc
out
push
iret
sub
repz
add
insb
push
pop
push
adc
or
pop
pop
call
test
adc
pop
into
int3
rolb
imul
testb
dec
jge
sub
adc
shrl
pop
pop
and
push
and
and
xchg
incb
cli
fcmovu
aad
mov
xor
insb
push
pop
insb
sub
adc
mov
ja
in
orb
mov
mov
cmp
push
xor
mulb
fs
bound
stos
add
and
jno
aad
js
jo
sbb
mov
addb
mov
mov
fistpll
test
and
push
sbb
cld
add
add
pusha
sbb
test
stos
sti
or
add
leave
cs
pop
add
mov
pop
shrl
add
xor
and
add
mov
cmp
mov
push
push
inc
add
xchg
add
repz
mov
aas
or
gs
int
adc
mov
nop
xchg
sti
inc
cmp
dec
sub
push
dec
ja
pusha
shr
add
cmpsb
sub
cmp
mov
into
popa
lret
dec
or
repnz
cmp
sbb
add
lods
shll
ss
sahf
sarl
sub
cmpsl
sbb
inc
add
movsb
imul
loopne
pop
mov
fcmove
mov
mov
call
mov
add
fsubs
testl
inc
add
add
fnstcw
inc
sbbl
push
mov
fnsave
add
fdivs
inc
in
out
xchg
add
mov
inc
je
int3
fsubs
adc
bound
dec
mov
les
rclb
push
xadd
ret
mov
adc
sahf
fisubrs
into
add
sub
xchg
add
push
data16
adc
and
add
outsb
ret
mov
fstl
cltd
int3
lret
adc
idivl
data16
mov
sub
add
sub
nop
in
imul
mov
jae
ret
inc
fsubr
clc
xchg
sub
repnz
jne
and
cmp
push
push
aaa
pushf
xchg
add
inc
mov
add
out
iret
popf
add
cmpsb
icebp
cmc
ljmp
aad
outsb
jmp
jae
lret
lcall
add
out
imul
rclb
or
sbb
ret
push
daa
subl
push
add
mov
andl
cmpb
pop
faddl
inc
jae
inc
arpl
mov
push
jge
ss
or
mov
sub
inc
jbe
sub
movlps
xchg
add
loop
add
add
push
aam
fwait
cld
jg
mov
rcrb
push
repz
fs
add
fcmovu
setns
push
mov
push
bound
or
cmp
int3
addb
and
andb
std
mov
mov
inc
inc
xor
test
add
inc
or
xor
add
mov
into
xchg
pop
testl
lods
repnz
inc
add
hlt
enter
lcall
mov
and
mov
shll
add
lret
mov
add
xor
add
testb
dec
add
out
mov
pop
bound
outsb
mov
loop
nop
add
fadds
mov
add
icebp
scas
insl
xlat
nop
pop
dec
cmp
add
leave
jecxz
sbb
jae
imul
push
xchg
or
scas
fidivl
push
lds
std
push
pusha
popa
mov
jnp
adc
scas
push
sbb
in
in
mov
and
dec
sbb
fcomp
add
fs
cmpsl
add
repnz
xor
cwtl
sahf
adc
je
pop
push
cmc
addl
mov
add
in
bound
adc
add
aad
sbb
loop
nop
sub
test
or
pop
inc
pop
aam
negl
and
roll
rolb
or
jl
mov
ror
das
sbb
adc
lret
dec
jmp
dec
xchg
push
add
cs
flds
adc
fistpll
ds
add
cwtl
sbb
mov
cltd
movsl
and
gs
add
mov
lock
add
wbinvd
jmp
push
repnz
add
mov
adc
js
shlb
imul
sbb
adc
pusha
pop
push
mov
adc
icebp
aam
jecxz
mov
jbe
add
fnsave
hlt
loopne
mov
shr
dec
rcll
pop
push
mov
xchg
pop
bound
aaa
mov
and
mov
rolb
int3
leave
and
jmp
ret
and
das
test
cmc
xchg
mov
sub
nop
outsb
mov
sub
push
cmp
pop
push
mov
test
mov
fistpll
inc
dec
xchg
push
stos
pop
xchg
push
loop
jbe
fwait
dec
pop
dec
test
xor
repnz
mov
ror
outsb
and
daa
inc
loopne
sub
adcb
adc
mov
jnp
mov
gs
aad
cmp
je
lret
push
leave
mov
add
lea
sarl
scas
mov
test
pop
fildl
mulb
dec
push
rol
rcll
mov
andb
lret
inc
xor
cmp
sbb
inc
add
sub
les
fwait
jno
xchg
adc
and
adc
stc
imulb
cltd
push
inc
cmc
push
and
xchg
call
xchg
cmp
add
push
icebp
mov
test
xchg
sub
sahf
popa
sub
int3
mov
sbb
pop
mov
push
xchg
negb
mov
mov
mov
adc
and
gs
cmp
mov
inc
sub
dec
rolb
sbb
jg
lods
sbb
loop
test
xchg
add
dec
or
std
adc
rcrl
push
xor
and
add
add
in
inc
mov
test
push
jno
loopne
outsl
imul
int3
or
and
add
mov
mov
mov
jno
mov
or
sbb
movsl
sbb
adc
shr
or
out
lods
fs
lahf
push
movsl
dec
rcrl
es
lret
cli
roll
xor
push
jns
lea
or
stos
popf
scas
call
mov
sbb
pushf
pop
adc
adc
pop
lret
stc
movb
sbb
das
jns
mov
mov
out
add
add
scas
negl
andb
in
jo
mov
dec
mov
sub
scas
xchg
adc
scas
out
pusha
sbb
shll
mov
xor
push
jl
cmp
inc
cmc
movsb
cmp
jg
mov
add
nop
out
and
adc
xchg
or
lret
cld
sbb
add
add
cmp
test
lds
insb
mov
add
out
push
or
test
inc
cs
pop
xchg
add
or
orl
in
enter
popa
sub
jae
push
jns
push
sub
cmpsl
pushl
add
repz
sbb
lea
std
mov
inc
sahf
test
cmpsl
imul
inc
pop
lods
add
out
cmp
lahf
mov
or
rol
jnp
in
xchg
push
xor
lods
mov
push
dec
pop
mov
mov
test
pop
das
addr16
push
add
mov
add
pop
jno
call
pusha
add
loopne
xor
testb
push
fisttpll
or
in
call
sbb
mov
stc
jb
inc
sub
test
inc
inc
mov
dec
mov
scas
jecxz
xor
xorl
stos
mov
sarb
add
mov
jle
mov
rolb
push
mov
or
add
test
mov
or
inc
add
data16
pop
out
xchg
xor
sub
sti
inc
cmp
inc
mov
and
or
inc
cmpb
rcll
imul
nop
aas
andb
add
and
mov
mov
sbb
mov
adc
push
xcrypt-cbc
cmpsl
nop
jecxz
xchg
or
pop
xchg
scas
and
fnsave
inc
add
xlat
mov
int
shlb
pop
insl
mov
adc
outsb
push
jo
add
mov
int3
mov
cltd
add
jmp
ja
ljmp
jae
mov
xchg
enter
insl
aas
pop
mov
sub
jnp
add
sub
pop
add
jns
repnz
call
notl
add
stc
mov
jecxz
out
mov
lods
cmp
add
mov
scas
add
push
sub
cli
add
std
loop
add
mov
add
xchg
pusha
jge
pop
mov
rcrb
jns
pop
nop
or
xor
jae
push
fcomi
dec
add
or
or
lods
or
cwtl
lcall
test
rcr
mov
jl
int
xor
pop
mov
mov
sub
and
sbbb
outsl
pop
lcall
sub
pop
push
xor
sub
cs
pop
mov
add
call
push
xor
dec
jle
jge
repnz
mov
push
add
cmp
sub
sarb
mov
in
testl
add
sbb
loop
add
lret
push
dec
js
add
sbb
mov
int
add
jecxz
pop
add
sti
xorb
fidivrl
sarb
pop
push
mov
adc
dec
and
insl
scas
movsl
sti
mov
outsl
call
sbb
push
loopne
loop
fnstsw
loope
dec
sti
fldenv
testb
inc
sbb
cmp
push
push
roll
pusha
outsl
stos
movsb
pop
mov
dec
popa
add
jecxz
in
inc
add
push
out
mov
fcmovbe
ds
push
lods
in
push
add
movsb
mov
jae
xchg
cs
or
cmc
popa
inc
das
mov
xchg
pop
imul
iret
scas
mov
adcb
dec
mov
push
imul
loopne
mov
mov
fadds
lods
int
or
adc
adc
mov
int3
outsl
pop
lea
add
out
shl
repnz
add
pop
cmp
loope
das
std
pop
push
popl
xchg
int3
xchg
adc
mov
pop
dec
mov
xlat
add
mov
add
and
xor
cmpsl
pop
xchg
pop
and
data16
inc
fistps
jg
add
jmp
sub
add
test
jg
iret
adc
andb
dec
add
add
stc
cwtl
jp
sbb
mov
jo
add
cmp
dec
sti
aas
out
cmpsl
add
repz
in
inc
clc
andl
pop
push
push
and
push
cmp
jno
inc
add
sbb
mov
push
cmp
jecxz
addr16
xor
xor
cmp
add
mov
fld
add
scas
mov
jmp
neg
inc
test
cmpsl
xor
adc
sbb
nopl
add
jmp
mov
add
aam
lock
adc
xchg
outsb
out
push
out
test
arpl
xor
mov
add
jae
mov
inc
flds
push
add
sub
jne
incb
push
sbb
sub
dec
xchg
orb
in
sahf
js
cmpsb
jmp
clc
pop
cmc
xchg
movl
or
clc
icebp
dec
lds
je
mov
inc
aam
add
sti
xlat
clc
fsub
inc
pop
add
fisttps
gs
mov
push
pop
mov
add
mov
and
mov
ds
bound
outsb
push
test
jl
sbb
pusha
sub
inc
mov
cmpsb
cmp
shrd
mov
add
ss
sbb
cmc
add
aaa
pop
adcl
add
cmpsb
fcmovnb
out
scas
pusha
ds
test
xor
push
pop
je
xchg
stos
ja
add
test
add
call
add
mov
cmpsb
jnp
lret
mov
fsubl
lods
sldt
push
and
test
lcall
hlt
push
dec
or
add
fisttpll
adc
mov
js
stos
and
pop
pop
ret
outsb
sub
lock
out
rorb
push
test
cs
hlt
add
cmp
inc
ret
push
xchg
popf
xor
dec
rcl
repz
xchg
pushf
add
or
inc
add
dec
sub
pop
pop
in
call
mov
push
shr
pop
fisubs
pusha
cmp
push
popa
add
adc
lods
sbbb
inc
into
and
add
jns
stc
add
mov
aam
test
push
js
mov
add
mov
xchg
pop
stos
push
add
or
jbe
push
xrelease
add
mov
push
shl
mov
pusha
mov
xchg
cmpb
jne
ljmp
cmc
rol
sets
aaa
fdivrs
push
jmp
or
cwtl
lret
mov
mov
icebp
sub
cli
aas
sahf
xor
xchg
clc
jns
call
lods
cmc
mov
add
in
sarb
les
cltd
setb
inc
jp
sets
icebp
push
push
jns
jne
add
arpl
jge
mov
outsl
add
sti
loope
or
inc
xchg
call
mov
xor
sbb
push
mov
aad
add
and
and
push
add
push
pop
pop
fists
test
inc
imul
add
adc
cmp
gs
add
bound
lldt
mov
int3
and
lret
bound
or
sbb
outsl
sbbl
inc
sub
mov
fs
sbbl
adc
roll
divb
aam
sbb
std
iret
mov
or
scas
faddl
sub
mov
sub
inc
scas
mov
cmp
and
mov
push
popa
ja
cmpl
jno
pop
in
xorb
mov
subb
push
faddp
dec
add
in
push
pop
aaa
xor
leave
loop
and
pusha
mov
mov
sub
movsl
xor
add
fs
aad
xchg
lret
repz
inc
dec
mov
sub
and
mov
aam
mov
mov
dec
add
iret
lods
lock
jmp
adc
add
cmpsl
es
or
add
imul
mov
shrb
add
push
adc
add
es
faddl
rcrb
imul
addb
cmp
fisttpll
mov
add
sti
sub
in
aas
shll
insl
rcrb
xor
mov
jo
mov
and
and
lcall
mov
mov
sub
dec
lock
nop
add
lds
rolb
pop
int3
or
add
add
add
out
sbb
add
aas
sbb
cmpsb
adc
add
mov
xor
dec
fisttpll
add
jecxz
sub
andb
dec
sub
loope
jno
push
hlt
js
mov
fadds
pop
add
and
pushf
xchg
jae
lock
sbb
cmp
push
vmwrite
sbb
mov
adc
xor
negl
add
add
cld
add
les
add
pop
sub
and
pop
push
lds
add
ficompl
les
xor
mov
mov
fdivrp
add
dec
add
mov
aad
pop
cltd
add
sbb
scas
lea
repnz
sbb
jb
sarl
add
or
ljmp
jo
jp
flds
outsl
sub
and
mov
pusha
testl
add
dec
clc
imul
mov
fs
cmp
imul
xor
ret
imul
aas
cmp
leave
flds
arpl
ja
jbe
or
mov
std
jg
ljmp
imul
call
adc
sub
shll
or
loopne
in
jmp
out
das
mov
aam
clc
add
ljmp
test
push
add
jne
adc
out
mov
add
jb
call
inc
fdivs
adc
ds
inc
jbe
dec
jecxz
daa
xor
xlat
inc
add
lods
xor
sti
int
js
rolb
aaa
gs
sub
or
aam
pop
xor
in
imul
lods
lds
mov
shll
shrb
push
xchg
xor
daa
out
add
mov
bswap
add
or
movb
add
jns
ds
and
cmc
hlt
push
sti
add
adc
cmp
pop
add
sahf
pusha
xchg
jmp
fdivrs
mov
frstor
int3
mov
push
rcl
rcrl
hlt
add
lret
push
icebp
mov
mov
mov
add
fildl
aad
xchg
movsb
adc
pushf
sub
rolb
call
xor
ja
fcomip
outsl
mov
mov
sub
aaa
adcb
aas
pop
movl
xchg
nop
sub
mov
lds
scas
jecxz
mov
xor
mov
xorl
and
call
pop
push
xchg
jge
ds
aaa
dec
or
adcl
mov
js
mov
daa
mov
out
in
jp
add
hlt
sbb
sub
sbb
inc
cld
sbb
lahf
subl
add
inc
xorb
add
cmp
lds
sub
push
shlb
add
test
cmc
add
imul
sti
jae
add
xchg
mov
ds
xchg
pmuludq
dec
xlat
mov
and
gs
and
ja
clc
xchg
dec
jnp
rolb
dec
jg,pt
pop
mov
jle
pop
sbbl
leave
int3
jo
popa
pop
pushf
jle
add
inc
lods
mov
test
ret
loopne
repz
std
enter
dec
inc
jl
imul
in
add
or
cmp
inc
and
movsl
adc
loopne
add
mov
ret
pop
enter
sbb
pop
add
inc
pop
jbe
and
mov
xlat
mov
out
into
arpl
mov
add
pop
sarl
mov
push
or
inc
dec
leave
dec
add
repnz
hlt
mov
aam
nop
pop
jnp
aas
js
xchg
push
adc
push
fisttpl
sbb
cltd
outsl
jmp
pop
and
inc
mov
sbbl
ljmp
xchg
add
test
cmp
mov
adc
icebp
pop
rcrb
sbb
pusha
nop
aaa
testb
and
repz
add
hlt
sbb
cmp
outsb
int3
jbe
push
data16
leave
inc
test
push
aam
add
inc
sub
mov
dec
test
fisttps
add
mov
mov
add
incl
add
and
inc
lcall
xor
cmp
out
jb
lock
cwtl
push
aam
arpl
test
add
mov
lret
roll
xor
cmpsb
xor
daa
jle
cmp
add
sub
xchg
add
jno
or
adc
dec
stc
imul
cmpsl
push
imul
push
leave
jmp
call
sub
cs
in
icebp
and
mov
fs
insb
iret
cmp
jecxz
stos
mov
xor
inc
cmc
and
jp
sbb
or
lock
fnstsw
jo
mov
dec
mov
cmpsb
sub
call
mov
jbe
mov
inc
mov
ret
jle
pxor
shll
mov
mov
insb
cmc
imul
sub
push
insl
dec
cmp
shl
sbb
add
out
stos
pushf
or
in
jnp
lahf
cmpsb
mov
pop
add
jns
dec
mov
sub
clflush
loopne
rcrb
daa
movsl
sbb
xlat
add
pop
fnstsw
lret
add
js
test
dec
loope
add
jmp
xchg
lcall
add
push
inc
popa
loope
lea
shlb
add
movsb
add
scas
test
shlb
jne
add
jae
sbb
mov
mov
rorl
add
jb
cli
nop
fsts
add
fstps
rclb
xchg
arpl
cmp
add
push
popl
test
fimull
mov
std
mov
filds
inc
add
and
mov
push
bound
xlat
xchg
shll
inc
subb
hlt
add
push
out
loope
stc
mov
movsb
mov
into
adcb
push
lds
cmpsl
repz
add
jne
movsl
gs
fstps
jp
mov
out
faddl
push
sbb
cmp
lea
xchg
lods
adc
nop
cmp
addr16
xchg
test
inc
movsb
fldenv
mov
inc
add
arpl
pusha
out
push
add
subb
out
xchg
xor
out
pop
or
mov
inc
and
loopne
push
jmp
xchg
outsl
test
xchg
dec
dec
mov
push
sbb
cltd
scas
add
lods
cld
das
int
aad
push
push
hlt
pop
mov
aas
pusha
add
fldl
add
mov
inc
xor
push
in
lret
ret
fwait
sar
pop
andl
sbb
cmp
add
aas
adc
repz
fwait
add
outsl
hlt
dec
dec
push
loopne
and
push
xchg
or
lods
mov
in
inc
je
lods
add
fcmovne
in
bound
add
cmpl
fsub
cli
sar
mov
xor
add
or
inc
movsl
sahf
xchg
add
inc
xor
ds
xchg
push
dec
das
leave
xor
pusha
shrb
xchg
mov
mov
test
rol
xlat
lea
lcall
mov
fs
loopne
xchg
test
insb
adcl
js
adc
mov
cltd
jns
inc
in
mov
push
jge
mov
jno
bound
movsb
mov
in
into
dec
nop
add
add
lods
cmp
sbb
cmpb
fbld
add
out
in
mov
mov
jg
and
inc
call
lcall
lods
lahf
lret
cmp
jg
mov
jno
aad
xchg
adc
pusha
xchg
ja
inc
or
mov
enter
in
adcb
pop
out
push
arpl
adc
outsb
pop
pop
or
mov
pop
inc
mov
add
sub
xchg
test
out
xchg
push
mov
push
rcll
sbb
stos
pop
pop
add
test
and
ds
sahf
aas
in
imul
add
add
push
add
loope
loopne
call
daa
jbe
fsts
jno
sarl
mov
and
inc
push
insb
loop
lods
fsts
pop
int3
pop
cmpsl
ja
add
iret
add
push
sarb
cltd
and
enter
test
mov
add
add
adc
inc
in
sbb
inc
add
rorb
add
shl
popa
jb
adc
jl
and
xor
hlt
daa
pop
jns
jle
xlat
shlb
negb
mov
fisttps
jge
lahf
or
cmp
mov
popa
cmp
jb
add
js
pusha
adcb
outsb
jl
xchg
add
xchg
push
not
faddl
sarl
call
jns
sbb
push
or
push
test
jns
js
mov
pushf
push
mov
add
in
push
xlat
or
inc
mov
insl
push
leave
add
lea
aas
fsubrl
scas
add
outsl
lods
jo
adcl
imul
mov
andl
xchg
adc
clc
dec
leave
pop
add
cld
test
pop
mov
test
gs
pop
add
mov
inc
jo
stc
mov
mov
push
out
add
test
pushf
ror
pop
fistpll
xlat
xchg
test
add
jnp
sti
sub
and
pop
insb
adc
orl
nop
cli
pop
xor
adc
jno
add
add
add
mul
inc
daa
xchg
mov
fsubr
out
xchg
nop
add
jnp
shrb
add
inc
jmp
mov
or
shll
and
and
or
inc
addl
cmpsl
push
mov
xchg
add
mov
and
pushf
or
setle
cmp
add
test
pop
cwtl
add
aas
push
add
cs
arpl
mov
in
fnstenv
or
cmp
enter
mov
add
stos
and
mov
inc
notl
in
jo
add
pop
jp
bswap
cmp
inc
scas
hlt
fwait
adc
cmpsb
add
sarb
cld
add
bound
dec
js
inc
add
mov
add
pop
icebp
add
rclb
mov
cwtl
addb
out
fmuls
cld
dec
add
push
aam
subps
loopne
sub
inc
fiaddl
dec
mov
pop
xor
or
pop
jge
adc
ret
cmp
inc
pop
test
xor
sahf
clc
push
mov
add
jae
stc
out
outsl
xchg
les
pop
movsb
adc
pop
test
and
jp
pop
add
shrb
add
dec
fcomi
ffree
das
scas
dec
add
subb
imul
je
test
xor
subl
push
mov
add
inc
cld
mov
add
call
lods
sub
mov
add
pop
icebp
jnp
insb
jg
or
jecxz
adcb
cmpl
popf
pop
dec
rcrb
jle
add
lock
pusha
call
mov
int
outsl
in
dec
mov
jl
jge
pop
mov
fldl
pop
sar
adc
movsb
lahf
mov
je
iret
and
addr16
repnz
jg
fldt
cmp
das
adc
sar
outsb
loope
jg
cmp
push
add
dec
inc
mov
pusha
xchg
lock
cltd
mov
xchg
nop
cmp
jg
aas
lds
popa
sub
sbb
mov
jb
test
jp
jnp
jecxz
mov
pop
cmp
lea
call
or
pop
pop
inc
shll
sub
cltd
jmp
cmp
lahf
loopne
jae
cmp
mov
sbb
sahf
pushf
dec
pop
rolb
int3
cmp
mov
adc
das
jns
add
fs
arpl
pop
add
mov
adc
outsl
inc
xor
inc
xchg
add
add
loope
and
jbe
daa
test
and
jbe
jl
cmp
cld
loopne
repz
sbb
into
repnz
or
mov
xor
jl
repnz
cmp
mov
icebp
or
jmp
addl
aad
rclb
cltd
push
mov
and
sbb
shrb
aad
js
or
aas
lret
jo
pusha
adc
cs
or
int3
out
push
push
cli
pop
pusha
mov
aam
icebp
lret
dec
call
mull
mov
cmpb
movsl
add
js
xchg
xchg
add
fldenv
or
cmp
rolb
testb
jb
xchg
xor
sbb
cs
jl
mov
cmp
leave
cmp
cmp
adc
xchg
adc
xor
test
je
nop
jl
fcomps
sbbl
clc
shr
xor
movsl
push
add
dec
pop
inc
xlat
dec
mov
fs
and
mov
or
add
inc
enter
add
push
push
add
adc
hlt
cmc
mov
pushf
add
int3
call
dec
stc
je
jp
adc
push
mov
ds
lock
add
jns
lret
inc
lock
or
adc
movsl
sbb
jno
push
arpl
in
lock
lcall
pop
sbb
pop
mov
xchg
mov
cmp
add
mov
pop
add
cmp
loop
es
bound
sub
loopne
add
movsb
negb
dec
xor
mov
mov
sub
out
cmpb
addr16
mov
dec
mov
div
dec
mov
pop
sbb
rcr
mov
xlat
stos
xchg
mov
ds
fisubrl
add
add
pusha
test
cs
pop
rolb
loop
sahf
hlt
pop
test
sti
cmp
nop
popa
in
movsl
dec
sbb
dec
push
adc
repnz
pop
xor
add
sub
xchg
sub
movsb
adcl
sar
mov
js
aas
jbe
scas
cwtl
xchg
inc
pop
add
out
jno
add
sbb
add
test
add
dec
add
or
mov
and
stc
subl
pushf
mov
sbb
mov
rol
imul
data16
mov
xchg
and
cmc
shlb
setnp
and
sub
outsl
ds
cmp
out
sub
in
sub
push
aaa
adc
adc
or
ret
fldln2
adc
add
jg
lods
subb
add
dec
mov
sbb
push
add
scas
js
call
mov
adc
push
cmp
ds
sub
push
cmpsb
adc
and
add
or
cmp
sti
mov
aam
push
out
fst
pop
adc
add
ds
add
loopne
sbb
sar
in
add
xchg
cltd
dec
lods
loopne
mov
mov
or
jno
cli
xchg
rcrl
mov
or
iret
dec
and
popa
push
in
and
xchg
mov
fwait
insl
cmp
add
sarb
ror
sbb
dec
push
aad
mov
mov
jecxz
add
adc
or
fsubp
cli
shlb
dec
jnp
int
lock
dec
daa
jp
addb
sbb
jg
stc
xor
imul
mov
push
add
cmpsl
add
inc
push
mov
rorb
fs
pusha
add
sub
inc
popa
arpl
test
stos
add
cmp
pop
jns
gs
sbb
xchg
jnp
mov
addb
cmpsl
push
sbb
stc
scas
inc
icebp
jmp
fdivr
in
jae
or
fistpl
pusha
cli
sub
and
movsb
cmp
sbb
cmp
or
loop
rorl
and
shrb
ljmp
lock
inc
add
pop
mov
test
add
ds
cmp
in
subb
add
out
cli
lcall
rorl
fcmovu
add
movsb
pop
dec
clc
sub
test
mov
cli
mov
jg
out
jp
paddq
pusha
jecxz
movsl
imul
inc
or
ljmp
pop
pop
cmp
sub
in
inc
loopne
outsb
jl
jnp
orb
or
inc
pop
mov
lds
add
mov
xor
inc
fstpt
pop
xchg
je
pop
and
adc
jne
adc
sbb
push
jp
shl
rclb
outsb
add
inc
adcb
scas
nop
jbe,pn
mov
repnz
cwtl
pop
xor
je
push
test
jl
add
out
das
sub
in
rcrb
popa
add
insl
cld
jmp
add
inc
mov
cmpsl
movsl
ret
das
sbb
cmp
mov
xchg
pop
add
sbb
test
lret
inc
xor
repz
es
gs
add
jmp
jge
inc
shrb
add
sub
movsb
dec
add
and
push
bswap
pop
mov
jecxz
inc
jecxz
jbe
test
sbb
clc
mov
stc
fimull
add
scas
mov
cli
sbb
and
insb
loop
pop
ficoml
outsb
push
cmpsl
call
daa
popa
xor
dec
cld
sbb
mov
mov
mov
cmp
lret
negl
mov
inc
pop
in
outsb
dec
sub
sbb
in
popf
ja
adc
add
sbb
insb
jge
push
add
adc
popf
lods
push
icebp
shr
xor
sub
and
push
adc
inc
cld
cmp
dec
fmuls
add
int3
pop
ljmp
jg
dec
sub
and
sbb
popa
icebp
int3
add
and
pop
shrb
xor
in
andb
push
pop
inc
push
jmp
add
fnstenv
fildl
mov
add
jle
and
out
push
gs
pop
add
dec
rclb
or
fildl
cwtl
jb
ret
add
cmpsb
add
out
xchg
shlb
sbb
pop
sbb
cmp
dec
ds
aad
dec
loop
rclb
xchg
pop
jno
add
shll
push
adc
cld
inc
sub
xchg
mov
adc
push
cmp
inc
add
push
pushf
insb
jg
flds
out
cli
rol
jp
jo
enter
test
clc
ds
dec
dec
and
outsb
or
mov
or
add
sub
fistpll
cmc
adc
aas
sbb
ficoms
sub
leave
std
call
mov
dec
or
pop
xor
mov
add
xor
cmp
int
fnstcw
cmp
lea
clc
add
push
cmp
add
ljmp
clc
add
add
xchg
shlb
orb
push
dec
jge
add
push
mov
addr16
loope
dec
incl
mov
rolb
add
xchg
jnp
int
cmpb
add
dec
cwtl
dec
add
ret
test
mov
push
loopne
addr16
je
or
mov
ret
add
stos
sbb
cli
sub
std
dec
jmp
xorb
rcl
dec
ret
pop
hlt
pusha
jnp,pn
and
test
mov
add
inc
and
mov
lret
push
pop
dec
stc
jbe
dec
cs
sub
sub
add
push
repz
je
cmpsb
add
sbb
lret
fistpll
mul
xchg
inc
push
int
shlb
fildl
rolb
cmpsl
xchg
ljmp
les
sub
test
inc
mov
dec
jp
inc
test
xor
jecxz
pop
push
or
shll
inc
rcll
lret
sbb
add
jmp
cmp
add
xchg
out
fstps
mov
cmp
add
mov
scas
out
xorl
in
add
iret
dec
lcall
aas
in
pop
cmp
push
ret
cltd
xor
pop
mov
subps
lock
cmpsl
fiadds
lret
push
sbb
fadd
lods
add
push
inc
push
lcall
add
out
add
daa
jmp
fsubs
add
jns
loopne
inc
lea
mov
sti
call
repz
xor
inc
loopne
dec
cmp
dec
stos
and
mov
adc
sbb
fadd
outsl
scas
movsb
ss
faddl
xor
and
mov
push
clc
sub
push
fdivp
push
add
scas
lea
movb
and
dec
sti
inc
xor
add
es
cmpb
dec
test
xchg
mov
in
outsl
loop
or
imul
rclb
in
add
roll
aas
pop
into
add
add
jle
jno
pop
lock
repz
or
push
sub
jp
xchg
shrb
int3
clc
jg
add
cs
fucom
int3
rcl
in
push
leave
pusha
sahf
insb
in
add
cmp
cmc
dec
add
cmp
inc
fisubs
push
mov
pop
xor
sbb
loop
jle
mov
or
rolb
pop
cmp
montmul
cmpsb
add
xor
int3
movsl
add
mov
or
rol
dec
scas
add
test
add
sbb
mov
fsubr
inc
aam
add
add
bound
xchg
imul
enter
xor
add
push
in
pop
mov
bound
sub
xchg
sahf
mov
les
ja
int
test
mov
sarb
mov
jmp
adc
mov
xchg
or
rclb
les
div
sub
cmpsb
and
test
push
es
jecxz
mov
mov
daa
lods
ffreep
je
add
dec
scas
mov
inc
push
adc
xor
data16
and
out
test
or
call
add
test
int
orb
jle
add
jg
add
loop
ret
insl
cli
xor
insl
clc
subl
cmp
sti
xchg
subb
int
jbe
in
jae
xchg
add
movsl
pop
cmp
pusha
cmp
pop
pop
adc
jge
subb
adc
xor
sub
add
xchg
cmp
adc
out
push
and
loope
in
jbe
ljmp
idivb
pusha
inc
js
sti
add
mov
fsubrp
insb
xchg
rorb
add
movsb
jo
popa
js
in
jle
mov
es
aam
pop
cmp
setg
cmp
flds
mov
jg
jb
shlb
pusha
into
dec
cmp
add
iret
test
jno
add
data16
fnstcw
movsb
mov
ret
jecxz
inc
scas
lods
nop
or
add
bnd
sahf
or
cmp
clc
aas
adc
jl
dec
iret
sub
xor
or
rcl
dec
fldl
mov
pop
cmc
add
imul
pusha
pusha
sub
push
or
inc
pop
or
cmp
mov
nop
add
push
jne
add
mov
jecxz
add
aas
sahf
fwait
dec
dec
insl
sbb
cmp
adc
sbbb
jb
cmp
frstor
push
mov
loop
shlb
push
sti
push
or
sbb
in
add
adc
inc
adc
xchg
push
rolb
add
fst
push
pusha
adc
fildll
jno
in
cmpsl
flds
fmuls
jbe
add
js
or
aam
inc
cmp
cmpsl
and
sub
into
inc
pusha
xor
cmc
xor
push
xor
mov
test
clc
add
adc
sbb
mov
loope
adc
cmc
sahf
xlat
add
es
add
out
push
sbb
mov
ja
rorb
iret
pop
inc
xchg
xchg
cli
out
pop
inc
jo
imul
insb
pop
and
fldl
lahf
sar
call
add
push
in
sbb
mov
xchg
int3
out
loopne
add
fbstp
mov
add
cmp
or
insl
stos
push
pop
xlat
sbb
jne
mov
add
decb
push
leave
in
in
and
rorb
push
mov
xor
cmp
popa
push
pusha
insb
out
fnstsw
sub
cmp
xor
pusha
xrelease
mov
cmc
or
addl
adc
cmp
push
xchg
add
mov
in
xlat
inc
mov
or
cmp
sub
add
pop
outsl
adc
push
mov
xchg
push
pop
sub
fidivrl
repnz
mov
add
scas
xor
sbb
test
mov
notl
loop
add
push
xlat
rclb
sbb
ret
mov
loope
add
xor
mov
add
jmp
in
cmpb
add
push
subb
movsb
sbbb
and
rolb
arpl
lcall
dec
adc
add
pop
lock
add
pusha
aam
mov
xlat
rorb
or
xchg
jge
add
inc
imul
sbb
notb
cmc
aam
adc
lret
sarb
pusha
int
xchg
and
subl
mov
jg
aaa
iret
js
mov
pop
mov
add
sub
add
cmpsb
repz
sbb
das
and
jg
test
adc
scas
adc
xchg
and
jl
mov
or
xor
rorb
xlat
insl
push
aad
aam
xchg
shll
jge
fildl
mov
xchg
pop
cmp
cltd
add
push
daa
or
rcll
mov
aas
test
or
rclb
add
jne
idivl
xchg
pop
popl
wrmsr
sub
ficomps
pop
push
sub
test
inc
mov
push
orb
sti
cwtl
mov
add
fwait
jl
dec
adc
jo
mov
cwtl
add
fsubs
arpl
orl
jo
pop
mov
xchg
jno
cmpb
sub
inc
les
aaa
push
mov
insl
sbb
pop
mov
push
nop
sbbb
popl
push
add
xchg
cmp
jecxz
add
cmp
sub
add
and
rcrb
adc
add
sbb
leave
andb
popf
push
mov
sbb
test
mov
sbb
fmuls
dec
loopne
add
pusha
mov
sub
cltd
xchg
add
fstpt
xchg
add
outsl
push
pop
std
xchg
and
pop
daa
cmpsb
mov
inc
mov
or
jg
push
jnp
sbb
fld
outsb
pop
notb
mov
or
add
pop
roll
add
pusha
addr16
lods
js
pop
call
xchg
cmpsl
stc
push
dec
and
add
mov
add
lahf
mov
enter
nop
fbld
insl
mov
adc
pop
mov
rclb
fisubrl
hlt
mov
js
out
add
cmp
test
jb
pushf
arpl
add
add
add
mov
xchg
shrb
xchg
dec
mov
mov
cltd
jmp
notl
push
int
xor
pop
pop
hlt
dec
cs
fsubrp
jge
xor
sahf
pop
xchg
jmp
mov
xor
loopne
lcall
pop
ret
mov
fdivl
push
cmp
add
sub
xor
mov
push
dec
pusha
pop
fdivp
xchg
or
js,pn
add
enter
in
jae
roll
dec
xchg
test
and
rcr
pop
sub
dec
lods
shlb
inc
jge
add
stc
jmp
mov
iret
stos
mov
scas
add
in
sbb
mov
pop
jecxz
inc
dec
xor
or
sahf
lcall
pop
ret
xor
push
sub
push
lcall
out
aad
sbb
test
cmp
mulb
daa
fcomip
insl
std
out
stos
cmp
iret
add
push
pop
adc
mov
cwtl
loopne
add
repz
pop
sub
lahf
and
xchg
sti
dec
std
hlt
mov
sub
fidivrs
inc
lea
dec
out
push
pop
test
cli
leave
push
aaa
xlat
adc
add
push
mov
rcll
add
adc
add
xlat
jno
xor
add
and
fldt
mov
or
fsubs
cmp
add
lea
xor
add
in
jbe
insl
jmp
popf
insl
pop
mov
xchg
add
sub
dec
push
dec
cs
add
jl
push
xlat
sbb
ja
xor
jp
lea
adc
sbb
xchg
jp
dec
rolb
sub
lock
xchg
mov
jecxz
pop
jae
je
dec
and
push
bound
jge
mov
mov
adc
rsqrtps
pop
and
add
add
mov
call
fstp
sub
add
sub
mov
add
inc
add
pop
inc
enter
mov
int
fnstsw
push
test
pop
push
jnp
add
lahf
xor
mov
out
add
cs
jbe
or
push
push
mov
in
fnstenv
ljmp
dec
xchg
jmp
mov
adcb
add
addr16
lds
aam
ja
sub
ret
and
ret
mov
loopne
sbb
in
inc
mov
sub
push
add
sub
stos
cmp
jb
add
dec
mov
or
adc
arpl
scas
jle
inc
jns
and
push
xchg
test
int3
pop
jb
fadds
cld
flds
jge
or
lcall
push
pop
jp
mov
fidivrl
cltd
nop
dec
adc
sbb
rorb
or
cmp
sbbl
inc
imul
in
push
loopne
mov
sub
hlt
imul
dec
pop
or
pusha
sub
and
dec
and
rorb
add
cli
dec
dec
mov
pusha
add
mov
xchg
mov
and
cmp
xchg
adc
and
faddl
gs
jle
jb
pop
clc
mov
mov
adcl
sbb
pop
push
fbstp
pop
mov
imul
repnz
test
outsl
rorl
dec
sub
ja
add
jmp
ror
inc
lods
ret
movsb
adc
inc
les
jb
mov
xchg
jno
mov
out
lahf
dec
dec
jne
popa
hlt
jl
rolb
dec
lds
cvtps2pi
jns
mov
repnz
cmp
loope
xor
stos
sbb
je
pop
test
std
add
stos
add
or
dec
in
je
inc
sbb
shrb
xor
popf
sub
mov
bnd
inc
mov
jbe
aam
xchg
mov
and
popf
aaa
sbb
mov
pop
roll
mov
mov
dec
mov
adc
sbb
push
cmp
add
cmpsb
rcrb
xchg
mov
rcrb
mov
into
inc
psrad
mov
mov
fcmovnb
inc
adc
jnp
hlt
push
push
clc
push
push
imul
dec
into
sarb
pop
negb
cmp
into
je
mov
push
nop
addb
dec
mov
fmuls
pcmpeqw
jecxz
lds
sub
inc
ret
pusha
dec
mov
jo
stc
loope
xor
sub
pop
test
mov
or
push
pusha
inc
pusha
aas
sbb
sbb
loopne
mov
xchg
scas
std
fistpll
push
les
loope
enter
test
pop
xor
imul
add
mov
push
xor
seta
call
call
adc
mov
add
hlt
lods
cmp
call
fs
add
mov
jl
out
nop
add
roll
dec
cmpsb
jle
cld
jle
adc
fwait
call
xor
ret
adcl
mov
dec
push
mov
inc
cmp
inc
in
cld
inc
lret
in
test
je
add
mov
mov
add
add
repnz
jo
shrl
clc
addb
mov
aad
dec
test
enter
addb
test
mov
pop
cmp
add
test
test
add
inc
sbb
sub
dec
loopne
add
sub
movsb
jl
icebp
adc
push
mov
loop
sub
lods
xchg
std
out
in
inc
sbb
inc
mov
cmp
push
mov
hlt
add
out
or
xchg
enter
stc
add
jecxz
movsb
std
sbb
iret
outsb
call
stos
push
dec
jb
add
lcall
add
sbb
test
int
xor
and
jno
sub
jbe
inc
add
inc
in
or
enter
or
rolb
push
add
xor
or
lea
add
sub
stos
add
pop
mov
ljmp
adc
fnstsw
dec
mov
sub
mov
sahf
jge
mov
lds
push
rcrl
mov
call
ss
pop
add
jae
sub
aaa
les
cmpsl
sti
cmpb
or
sbb
jmp
stos
sbb
add
in
popl
xlat
dec
add
xor
pop
fisttps
loope
js
add
push
xchg
ror
fimull
sbb
add
cmpsl
test
pusha
adc
sarl
add
cmp
rorl
jnp
js
pop
icebp
push
lock
mov
sub
pop
out
or
out
ret
cmpsl
push
mov
sub
mov
sub
and
xchg
dec
or
pop
sub
mov
cwtl
add
cmpsl
jecxz
test
addl
mov
jne
loope
jp
jg
and
rorb
idivb
stc
das
cs
or
cmp
outsl
mov
js
inc
mov
and
xor
nop
pop
jnp
sub
mov
lods
pop
jae
dec
jl
adc
int3
mov
add
mov
insb
pop
mov
fdivl
mov
mov
popa
insl
rolb
out
scas
or
popf
cmp
add
rcpps
jge
idivl
cmpl
dec
xor
mov
mov
dec
add
pop
into
ss
push
pop
add
mov
fadds
cmp
sbb
aam
shl
cmpsl
and
add
xchg
mov
xor
add
xchg
packsswb
jbe
and
sbb
movsl
mov
ljmp
inc
and
outsb
jne
push
cmp
push
mov
xor
adcl
sub
test
xchg
in
lret
and
in
and
jge
pop
lret
sbb
inc
jae,pt
dec
insb
cltd
jecxz
xchg
jne
add
shlb
pop
ja
mov
push
sbb
sbb
call
mov
add
pop
mov
popf
push
pusha
pushf
and
test
sub
and
cmp
lcall
sbb
add
jbe
int3
jle
add
dec
outsb
sbb
jb
andb
bound
fisubs
nop
push
add
fcom
mov
rcll
cmp
fwait
xor
jae
add
lret
dec
jl
xchg
and
add
movsb
jle
dec
xor
jg
cmp
outsl
add
scas
sub
lcall
aad
xlat
and
adc
mov
inc
adc
in
lock
in
sbbb
cpuid
xlat
sub
outsb
movl
cmp
push
pop
pop
aad
je
jbe
insl
xorps
imul
icebp
ret
pusha
sbb
pusha
mov
push
xchg
pop
add
xlat
add
cld
add
into
pop
repz
jl
and
mov
push
xor
jl
push
xor
arpl
outsl
cld
sti
jmp
mov
ljmp
lea
mov
dec
and
in
fsubr
out
mov
and
cmp
push
sbb
or
mov
add
xchg
out
lods
cli
rcrl
cmpl
xor
iret
and
sbb
inc
adc
or
into
xor
dec
pop
cli
aad
cmpsb
sub
sarb
mov
sub
xchg
sbb
push
ljmp
jne
out
adc
add
sahf
sbb
mov
inc
jp
inc
sbb
sbb
cmpb
push
stos
stc
lods
and
outsl
into
fwait
pop
xchg
rorb
out
jl
jbe
jge
cmp
mov
add
xorl
jecxz
stos
fwait
movsb
or
xchg
add
cmp
rolb
sarb
fwait
add
jmp
ljmp
lods
sub
icebp
cmpsl
pushf
inc
and
add
gs
iret
movsb
lods
jo
add
stos
sub
js
shlb
mov
inc
push
pusha
lock
add
inc
push
lret
xchg
js
mov
mov
xor
outsb
inc
aam
clc
mov
sarl
add
jb
leave
dec
sub
les
add
fdivs
xor
xor
gs
add
mov
clc
pop
testb
push
cwtl
mov
aam
sub
sbb
adc
in
jns
scas
je
data16
aas
xchg
dec
jp
cld
fmull
dec
mov
pop
dec
pop
ret
xor
lahf
rolb
jae
leave
mov
mov
gs
sbb
xchg
je
fistpll
test
xor
insl
out
gs
sbb
jg
xorl
inc
lods
push
jl
dec
lret
shlb
std
mov
jle
out
adc
scas
add
ljmp
jge
push
and
repz
xorl
jo
pop
prefetch
or
mov
and
or
pop
pop
ror
jecxz
stc
icebp
insb
les
repz
mov
add
fs
in
sbb
hlt
mov
add
xchg
cli
add
ds
xor
cli
les
dec
hlt
push
sub
lock
mov
cmp
inc
xlat
push
subb
add
jge
or
cmp
adc
das
fadds
sub
pop
in
sub
dec
pusha
xor
add
aaa
push
jb
xor
roll
pop
cli
xor
rolb
repz
xchg
sbb
imul
mov
push
roll
lock
adc
cwtl
inc
enter
fsub
scas
dec
add
cli
and
xchg
hlt
mov
psubusw
xor
cmp
inc
add
push
testl
add
xlat
sub
lock
mov
ret
sub
sbb
or
rsqrtps
loopne
in
add
push
xchg
ljmp
lahf
xor
pop
xchg
or
ss
dec
int
inc
push
add
dec
sbb
ljmp
inc
iret
inc
cmp
pop
add
int3
lret
jns
add
push
rclb
add
xchg
xor
dec
adc
cld
lret
add
int3
repz
dec
data16
daa
flds
mov
nop
mulb
popa
lcall
adc
pop
inc
xchg
or
inc
ret
and
inc
out
je
mov
arpl
or
xchg
popa
cmp
add
dec
mov
jb
jae
lret
adc
out
xchg
pop
cld
insb
testl
mov
movsl
aas
add
jae
inc
out
les
jbe,pt
xor
mov
or
or
xchg
add
push
add
ja
ret
sarb
sti
lods
pop
add
adc
lahf
fists
popf
add
inc
rclb
add
cmpsl
loope
sbb
mov
and
mov
xor
das
add
rorl
ds
push
add
lds
stc
jae
loopne
or
lods
pop
aaa
bound
xchg
and
ljmp
call
jp
add
mov
flds
enter
sbbb
mov
or
cmc
sbb
or
repnz
cmp
adcb
or
push
inc
leave
inc
cmp
stos
movsb
ja
jns
movsl
push
and
add
push
adc
dec
fiadds
push
push
lahf
xchg
add
add
jnp
add
out
xchg
push
adc
fiadds
pop
mov
dec
cli
popa
push
inc
ss
adc
sbb
inc
repnz
fldenv
sub
xchg
int
jnp
add
nop
jae
cltd
adcb
loope
xchg
stos
addr16
fstps
xor
sahf
or
lret
clc
movl
gs
push
inc
mov
fiadds
movsl
pop
add
add
in
std
inc
cltd
fsub
push
ret
lock
pop
sahf
sub
push
mov
jmp
adc
std
or
push
scas
mov
cmpsl
subb
adc
ret
xlat
dec
popf
push
cli
cli
add
test
js
das
pop
pusha
fadds
jmp
lahf
rorb
xchg
jae
pop
inc
cmp
loope
jle
add
xchg
les
add
into
mov
add
and
stos
pop
mov
mov
bound
add
mov
inc
push
push
shll
loopne
jecxz
lods
repz
push
xor
out
call
cltd
loope
nop
jbe
dec
add
aam
in
lcall
jp
lea
loope
xchg
int3
jecxz
add
les
add
mov
cmp
add
enter
pop
add
pop
mov
sbb
jo
int3
push
jmp
pop
mov
mov
mov
cmp
popf
or
mov
push
mov
imul
pop
pop
jnp
xor
sbb
sub
into
stos
mov
jne
dec
not
sub
repz
cld
dec
jae
push
das
fcmovne
adc
add
mov
lods
add
xchg
inc
jecxz
mov
mov
arpl
hlt
shl
aam
decl
cmp
clc
adc
mov
push
aas
ret
aad
inc
dec
das
inc
sbb
ss
add
push
insl
push
add
ret
pusha
aas
mov
fwait
pushf
notl
or
add
sub
lret
add
inc
sbb
pop
rcr
jle
lahf
loop
xor
dec
mov
jno
add
mov
bound
sbb
dec
add
int3
mov
xchg
pop
add
daa
outsb
pop
lods
test
les
lret
sbb
inc
xchg
or
sub
mov
pause
outsb
mov
sbb
sbb
addb
lds
bswap
lret
mov
dec
lea
add
jb
out
cwtl
add
lods
adc
fadds
xchg
fiadds
dec
push
inc
sub
jp
arpl
pop
ss
insl
fwait
and
push
inc
add
jno
imul
pop
push
test
out
add
add
inc
jp
jo
add
sbb
or
data16
jg
addr16
add
movsb
scas
enter
int3
or
adc
jecxz
daa
sbb
jnp
add
insb
mov
jnp
and
add
add
hlt
out
xor
xchg
mov
xchg
lea
pop
cmc
add
xchg
repnz
andb
add
shr
mov
aad
xchg
shr
int
flds
jb
pop
jp
aaa
pushf
push
ror
add
adcl
add
dec
inc
nop
dec
jns
sbb
pop
fcmovb
or
lock
int
inc
std
sbb
sti
and
shr
add
mov
iret
lods
add
lahf
andl
in
sbb
push
sub
js
shll
xchg
in
push
int3
sbb
fldt
cmp
or
mov
mov
or
mov
test
shlb
xchg
xchg
and
stc
nop
cmp
adc
pushf
add
add
or
loope
and
icebp
pusha
pand
lcall
das
jg
xchg
adc
repz
test
xchg
xor
fcoms
dec
neg
addr16
and
imul
push
add
add
aaa
scas
sti
inc
and
pop
les
lods
push
scas
pop
sbb
and
mov
add
jns
bound
and
movsb
jmp
lock
cmp
out
lahf
jmp
mov
or
push
inc
adc
fwait
movsl
jbe
aaa
add
mov
icebp
push
stos
adcl
insb
pushf
and
dec
pusha
movsb
mov
daa
jae
push
fldt
xchg
mov
out
sub
xor
add
lods
shll
hlt
test
inc
push
das
add
add
imul
stos
jg
or
xchg
fildl
cwtl
addr16
pusha
sub
icebp
mov
push
jno
push
add
sbb
out
push
repnz
enter
gs
cmp
in
outsl
and
paddusb
mov
mov
es
sar
repnz
or
jae
nop
mov
push
push
pop
push
push
loopne
push
pop
pop
mov
int3
data16
fcoml
add
adc
in
add
lea
cwtl
inc
add
cwtl
and
push
data16
insl
outsb
pop
mov
and
push
push
sbbb
sbb
std
inc
cs
push
and
imul
and
sub
daa
jl
sbb
nop
jae,pt
jne
add
pop
aam
out
in
shlb
jae
sub
lock
push
sub
test
scas
add
insb
arpl
cmp
mov
rolb
jnp
data16
stc
cltd
loopne
movsl
add
xor
push
cmpsb
mov
cmp
push
stos
add
push
sub
push
dec
in
pushf
push
add
sbb
pop
fsubs
cld
push
add
lock
ljmp
and
enter
out
add
or
xchg
add
filds
clc
or
add
and
fldcw
jg
inc
jnp
add
or
mov
bound
nop
jns
std
lea
testb
jno
dec
xor
pop
inc
lods
add
movb
popa
cmpl
xchg
movsb
push
mov
jae
push
cwtl
sarl
xchg
addl
insb
fwait
rcrb
adc
lods
jno
lds
gs
sahf
dec
cmp
filds
add
mul
roll
loopne
cmp
mov
or
jl
jo
or
aad
nop
hlt
or
add
mov
cmp
xchg
add
push
call
insl
add
cwtl
test
pop
and
mov
cmpsl
out
and
cld
aaa
fwait
pop
int3
loopne
test
clc
add
pop
iret
and
loopne
in
ud2
subl
xor
inc
sbb
std
push
sti
sahf
lods
or
xor
ja
sub
or
test
fmuls
mov
stos
add
add
push
data16
xchg
ljmp
out
adc
push
sub
mov
adc
mov
mov
mov
jno
jb
add
outsb
cmp
add
jmp
insb
iret
dec
popf
notb
or
sbb
icebp
mov
or
cwtl
aad
add
insl
lds
add
push
mov
out
rolb
sbbl
bound
cmp
dec
jno
push
pop
cmp
add
add
arpl
icebp
pop
add
mov
movsb
hlt
jg
sbb
sub
jnp
add
fmuls
jmp
push
pop
ud2
pop
imul
std
sub
mov
shrb
adc
adc
adc
cmpsb
cmp
add
sbb
pop
lahf
inc
adc
loopne
pusha
icebp
stc
push
pop
int3
ljmp
push
lahf
setl
dec
test
add
mov
inc
or
inc
popa
add
leave
xor
and
neg
or
scas
inc
fstps
mov
xor
nop
filds
or
add
pop
int
push
adc
mov
iret
sub
xchg
cli
pop
cmp
inc
sub
ss
add
or
add
out
pop
sbb
add
cltd
adc
cmp
in
adc
test
ret
loopne
mov
xor
add
adcl
int
push
out
or
daa
out
lret
orl
es
ret
test
mov
popa
je
and
or
mov
ds
sbb
lods
or
pop
int
sbb
xlat
fimuls
adc
pop
jl
add
outsl
fidivrl
push
mov
mov
cmp
cmc
aas
xchg
call
push
xlat
add
pop
add
push
nop
inc
rcl
adc
pusha
xor
cmp
mov
add
imul
add
ja
dec
jle
and
cmp
ror
lahf
cmp
cmp
popa
pcmpeqb
add
push
jecxz
test
mov
dec
add
jne
dec
fadds
movsb
fstpt
push
loopne
jge
aas
fiaddl
or
add
mov
inc
sbb
stos
and
pop
pop
inc
xchg
add
push
repz
test
inc
mov
and
add
sti
shll
iret
pop
dec
jg
aaa
mov
lods
bound
add
add
nop
pusha
inc
add
into
cwtl
ret
ja
mov
jg
lret
inc
cmpb
add
mov
mov
pushf
add
push
scas
jnp
mov
push
int3
out
inc
fwait
popa
add
loopne
inc
add
sbb
inc
inc
sarl
lock
dec
xchg
push
addl
add
mov
add
cltd
loopne
in
lods
hlt
hlt
in
pusha
sbb
or
and
cmp
lds
add
mov
cmp
test
in
lods
add
jmp
mov
fs
adcb
push
pusha
sbb
sbb
push
mov
inc
mov
mov
ljmp
addb
push
inc
sbb
sarl
dec
dec
add
cli
hlt
addb
xchg
sub
push
loop
aas
fwait
aad
stos
mov
mov
xor
adc
add
jo
jns
rcll
adc
pop
push
imul
fsubrl
push
cwtl
cli
add
adcb
test
clc
fs
add
and
add
daa
repz
push
jo
addr16
jo
dec
cmp
cwtl
rcr
dec
jne
pop
add
imul
in
sub
add
jae
push
test
jo
add
aam
adc
add
aas
aad
test
cmp
lock
jle
mov
or
mov
sub
inc
inc
je
sbb
mulb
add
bound
add
imull
adc
mov
add
rcr
sub
cmp
lcall
and
test
arpl
mov
cli
pause
add
or
push
sbb
into
loopne
das
or
fnstsw
jb
cwtl
sbb
sti
and
cmp
pop
mov
xchg
in
mov
jge
mov
pop
push
lret
inc
hlt
jbe
add
jne
sub
mov
or
mov
sbb
xor
daa
sub
inc
adc
jmp
nop
and
inc
cmpsl
xor
xchg
test
adc
mov
clc
loope
cld
arpl
pop
leave
xchg
jg
mov
push
jbe
in
sbb
pusha
into
pop
rol
pop
cmp
add
mov
pusha
sub
mov
or
fwait
sbbb
and
push
and
popl
mov
gs
xchg
in
and
popf
add
dec
sbb
push
into
cmp
call
pushw
add
out
aas
movsl
mov
adc
add
repnz
aaa
lock
cwtl
add
pop
cmp
mov
push
mov
and
xorb
and
dec
pop
add
enter
add
addl
ds
mov
popa
stc
fisubl
or
add
jo
aam
cmp
out
add
xor
idivl
mov
add
lahf
cmp
add
es
mov
jne
add
jnp
and
xlat
lea
or
sub
add
adcb
pop
dec
jo
pop
sbb
mov
lahf
dec
jl
xchg
arpl
and
pop
add
push
pop
orb
mov
shlb
inc
xor
mov
lret
pop
mov
or
or
loopne
pop
mov
pushf
lds
fsubp
xor
movsl
xchg
add
jnp
iret
dec
sar
add
xchg
in
cmp
cwtl
testl
push
popf
or
cmp
adc
movb
divl
jno
lods
sub
ljmp
into
dec
std
add
adc
es
setne
ljmp
add
test
and
push
dec
mov
sbb
dec
outsb
lock
or
mov
add
adc
mov
cltd
sbb
mov
pushf
xlat
faddl
push
jl
hlt
mov
dec
cmpsl
cli
fld
add
pop
mov
mov
mov
push
mov
test
pop
dec
xchg
sbb
sahf
test
andps
filds
lret
dec
ret
jmp
add
inc
push
ss
add
adc
jb
sbb
mov
sub
sbbb
pop
ret
pusha
in
popl
mov
cmp
les
aad
dec
cmpsb
jecxz
stos
or
daa
or
jge
and
sbb
add
loop
outsb
xchg
pop
lcall
or
popa
and
sbb
jmp
addb
mov
dec
mov
adc
xchg
mov
xchg
xchg
nop
add
pusha
lahf
icebp
cmp
cmp
jge
add
xor
loope
add
pop
fistps
jns
adc
cmp
out
lock
xchg
mov
sbb
xchg
faddl
test
xor
push
mov
push
dec
test
adc
ljmp
xchg
adc
pushf
fwait
add
and
pop
gs
and
aam
xlat
add
mov
adcb
dec
data16
cmp
hlt
in
ffreep
mov
scas
xorl
push
out
adc
cld
add
int
hlt
sub
add
jns
lea
sbb
xor
xlat
mov
push
pop
cmp
sub
daa
or
mov
push
mov
in
filds
lods
shll
pushf
in
in
add
icebp
mov
xchg
sbb
adc
nop
jg
jbe
and
jmp
mov
int
add
cmp
push
popf
icebp
in
movl
mov
daa
lret
xchg
jo
pop
cmp
sbb
pop
pop
in
iret
scas
push
shrb
stos
sbb
fwait
test
cmpsl
or
jge
sub
lods
pusha
sti
cmp
mov
les
pushf
and
sbbb
gs
mov
add
sbb
or
addl
into
jbe
mov
in
mov
mov
pop
ret
jbe
mov
mov
jge
dec
sahf
cmp
sub
jg
mov
dec
mov
subb
call
ds
sbbb
icebp
cmp
adc
cld
leave
pop
pop
cmp
orb
fimuls
or
bound
add
fadds
pop
mov
sbb
lods
cltd
or
jecxz
movsl
loope
dec
adc
stos
push
jo
roll
pop
jmp
pop
out
bound
jg
aas
jl
add
xor
lds
cmpsb
lock
mov
ret
sbb
dec
sbb
pop
lahf
jnp
mov
add
push
cmp
ljmp
jle
cmp
add
addr16
or
rorl
rcrb
mov
pop
lcall
fucomp
cmp
ja
cmp
aaa
jo
cmp
cmp
lds
dec
or
ds
sti
test
pop
adc
jno
sub
add
cwtl
loop
enter
mov
push
nop
enter
fidivrs
jne
stc
and
or
and
xchg
mov
dec
stos
lea
push
mov
inc
loopne
es
push
or
adc
aam
mov
sbb
pusha
push
mov
imul
or
lret
loopne
mov
dec
bound
dec
add
xor
xchg
clc
movsl
jae
lcall
push
pop
xchg
pop
inc
sub
gs
mov
ljmp
scas
inc
dec
cmp
xchg
pop
adc
add
cltd
dec
jg,pt
add
xlat
pop
lods
push
dec
push
pop
xchg
mov
xor
loopne
mov
pop
lret
add
push
add
sub
dec
xchg
xor
push
and
jmp
js
mov
leave
push
dec
mov
and
hlt
sbb
adc
add
and
aaa
pop
mov
or
push
pop
and
aam
or
sbb
aas
faddl
mov
add
sub
cld
mov
jb
in
inc
adc
and
fsubrl
add
dec
xchg
test
loopne
mov
xchg
sbb
xchg
mov
adc
jmp
push
pop
add
mov
add
outsb
mov
stos
cmp
xor
movsb
mov
ss
sti
xchg
test
fsubl
mov
dec
or
xor
cmpsl
jae
inc
lods
jnp
cltd
mov
jmp
cmpsb
fnstsw
push
xor
xor
out
clc
sub
sahf
add
hlt
mov
sub
scas
adc
sub
add
jle
ret
inc
add
addr16
dec
xor
clc
and
jae
pop
hlt
push
dec
fnsave
pop
loop
pop
push
pusha
shll
shlb
mov
lcall
adc
sbbb
movsb
in
push
xor
arpl
mov
dec
pushf
ja
lods
jae
pop
push
cmp
jbe
sbb
frstor
pop
push
sysexit
and
add
pushf
cmovo
add
mov
add
aam
mov
inc
add
ficoml
or
mov
in
mov
push
lret
add
jns
sbb
mov
test
loopne
sub
mov
mov
dec
add
inc
test
jl
add
xchg
test
adc
add
dec
jo
cmp
ret
add
hlt
lock
pop
into
sti
iret
sbb
call
xchg
add
fcmovnb
test
add
cld
stc
dec
leave
mov
adc
cwtl
in
sbbb
call
sub
inc
addb
lret
stos
sbb
mov
dec
sti
and
lds
mov
xchg
pop
rcrb
mov
imul
fisubrs
icebp
sbb
add
pop
ret
jl
fwait
mov
mov
in
aas
enter
ja
add
mov
cmpsl
add
dec
mov
aas
inc
test
in
mov
add
xor
inc
mov
add
daa
js
hlt
popf
nop
rolb
xchg
cli
pop
jle
std
push
or
dec
xchg
add
cmpsl
mov
jnp
stc
add
fsubrs
lcall
lret
clc
fisubs
add
mov
push
scas
sbb
shl
pop
adc
pop
push
and
in
xor
loop
pop
cwtl
add
insl
dec
sub
bound
or
and
sbb
mov
xor
mov
mov
mov
notb
bt
es
jecxz
outsb
into
sbb
sbb
dec
adc
les
inc
lods
push
dec
cmp
add
mov
sti
hlt
add
pop
and
in
stc
dec
push
gs
mov
orl
pusha
jne
or
pop
lods
adc
sub
and
lret
call
leave
sub
test
mov
lods
mov
xorl
xor
fmul
dec
or
adc
pop
dec
push
push
roll
dec
cmpsb
sub
push
stos
movsb
test
sar
cmp
in
out
cwtl
push
mov
xor
sbb
int
sti
add
iret
mov
push
ret
cltd
push
icebp
sub
jb
fldcw
add
ljmp
cmp
decb
fisttpll
fs
test
iret
add
sbb
xchg
pop
pop
mov
data16
popf
cmp
sbb
add
push
inc
test
les
pop
popa
jl
sbb
add
sub
inc
mov
push
adc
add
mov
in
insb
movsb
xor
pusha
adc
add
sahf
repz
ficoml
fisubs
jne
arpl
mov
sub
nop
ljmp
jecxz
test
ret
cmp
into
adcb
xchg
scas
shll
out
or
inc
into
add
stos
add
xor
dec
xor
mov
sbb
jmp
loopne
dec
jg
add
mov
repz
sbb
sahf
lds
int3
scas
add
pop
fstpl
push
inc
xorl
mov
and
test
stc
subb
scas
push
sub
int
fisubrs
inc
shl
push
sub
xchg
mov
andb
mov
inc
or
add
mov
push
pop
pop
repnz
jno
jnp
ret
and
dec
mulb
cmp
je
out
cwtl
hlt
pop
sub
push
setbe
mov
cli
aad
lret
test
sbb
dec
call
adc
sub
popa
cwtl
or
push
cmp
movsb
sti
lret
rolb
add
pop
cmc
pop
stos
xorb
cs
filds
xor
mov
mov
test
inc
cs
dec
or
and
pusha
pushf
and
imul
sub
jg
xlat
mov
push
add
repz
clc
mov
push
mov
adc
and
mov
mov
push
adc
and
dec
insl
add
jmp
adc
lret
xor
clc
inc
xor
or
lods
cmc
popa
dec
inc
fwait
dec
add
mov
sub
sbb
ret
mov
aaa
add
cmp
cmpsb
pop
ret
mov
mov
cmp
inc
adcb
adc
stos
xor
push
cmp
pusha
and
shll
sbbb
pusha
sbb
adc
and
mov
rolb
sub
push
add
popl
std
nop
xor
icebp
iret
or
add
in
aas
lret
mov
jle
add
fsubrl
add
in
out
add
xchg
push
iret
jae
add
mul
xchg
shlb
add
jl
add
scas
test
or
inc
push
fcomps
sub
clc
add
cmc
cmp
inc
filds
sbb
gs
add
dec
js
or
rcll
xor
hlt
les
mov
lret
cmp
push
aas
mov
pusha
insl
add
mov
mov
das
cld
jp
cmp
pop
imul
sti
lret
mov
bound
es
mov
pop
pusha
add
out
stos
mov
add
imul
pop
push
add
dec
sti
adc
add
in
adc
mov
add
lret
cmp
mov
loop,pn
xor
lock
inc
add
pushf
and
fistpl
inc
add
xor
push
pusha
xor
jnp
sbb
or
or
scas
mov
js
xor
mov
int
lret
xor
sti
mov
add
sub
lret
iret
pop
daa
cltd
aas
fbstp
sub
lea
adc
mov
jmp
mov
add
out
mov
jl
add
xor
lods
mov
mov
out
xor
mov
add
or
mov
mov
iret
aad
mov
lahf
or
jge
inc
ret
call
rcl
es
nop
dec
add
into
aaa
mov
add
repz
shrl
fcom
inc
mov
xor
sti
jns
sahf
rcr
push
mov
popf
xchg
or
adc
icebp
or
test
movsb
pop
fwait
sub
std
cwtl
enter
pop
call
mov
add
rolb
and
inc
mov
add
scas
inc
je
sbb
add
arpl
mov
stc
add
mov
dec
add
sub
add
imul
push
mov
div
add
pop
imul
xor
adcl
jne
sub
lea
sub
pop
push
add
sarl
lods
sub
push
data16
pushf
or
daa
dec
cmpl
pop
inc
mov
dec
in
jb
or
mov
xchg
repz
cmp
mov
jle
jbe
insb
insl
sub
out
roll
fwait
jl
in
or
push
cmp
lds
pop
out
inc
negb
fdiv
cmpsb
out
mov
shrl
or
es
jno
pop
subl
add
stos
lods
mov
shlb
jno
add
mov
mov
sub
push
bound
add
xor
test
jns
cltd
lret
dec
mov
add
fs
cmp
and
mov
add
lea
outsl
adc
dec
xchg
mov
popa
jne
pop
add
cmp
call
add
ja
pop
adc
lods
push
mov
cmpl
push
push
lea
or
clc
shrb
add
cmp
ficoml
add
cmc
lcall
imul
or
out
popf
push
add
add
mov
jo
push
pop
pop
inc
add
dec
mov
sub
sti
pop
pop
inc
jp
mov
mov
mov
sub
scas
cmp
add
ret
xor
fstp
insl
gs
mov
sbb
ds
lods
mov
inc
mov
mov
mov
add
jo
add
add
sbb
js
sbb
sti
push
into
xor
mov
cwtl
push
mov
sbb
adc
sbb
outsl
fnstenv
push
add
xchg
push
mov
sarb
add
xchg
inc
js
pushf
add
jmp
xor
cmpsb
xchg
sahf
inc
test
mov
jne
repz
aad
es
dec
add
pop
adc
lods
pop
ss
inc
pusha
add
ret
or
xchg
ds
cmp
fcmovnb
sub
int3
neg
mov
data16
mov
jne
mov
cli
xchg
out
inc
add
sti
pop
push
pop
xor
stos
jb
nop
push
add
dec
jmp
sti
pop
les
cmc
or
leave
loop
call
jg
dec
add
xor
icebp
std
push
jnp
aam
pusha
push
inc
ljmp
and
mov
movsb
lock
xor
xchg
or
das
ret
push
push
nop
sbb
add
cmc
movsb
xlat
dec
add
xchg
fld
pop
jp
add
or
daa
add
push
mov
bound
repz
test
pop
adc
dec
arpl
push
xchg
in
in
mov
outsb
andl
leave
add
filds
ja
jbe
sbb
push
lods
sbb
add
mov
ljmp
add
cwtl
shrb
pop
pop
sbb
add
ds
aaa
cld
inc
cmp
pop
pop
data16
test
mov
and
fdivs
sahf
je
adc
outsl
xor
mov
add
testb
add
lock
push
lahf
push
add
lret
and
sbb
rep
fcoml
add
test
cmp
lahf
int
add
loopne
call
xor
hlt
in
or
push
ret
test
sti
scas
xorl
lods
adc
stos
xchg
add
xchg
sub
mov
adc
xor
call
sub
ss
push
roll
inc
lock
cmp
add
enter
mov
push
mov
mov
add
push
sub
jbe
xchg
test
shl
outsl
adc
test
nop
push
cmpsb
dec
pop
out
mov
add
xchg
jmp
shl
pusha
xor
cmp
pop
lock
in
mov
pop
or
orl
insb
add
loopne
adc
pushl
mov
repz
adcb
jg
out
push
add
add
add
repnz
add
shll
push
inc
mov
inc
call
in
pushf
xor
aam
and
nop
adc
je
adc
push
sbb
mov
add
xchg
adc
dec
mov
mov
add
cmp
cs
and
stos
and
add
push
imul
add
iret
add
lds
cmp
pop
inc
jne
in
xor
cmp
lret
cmp
les
or
leave
add
scas
cmp
in
movsb
popl
jb
and
jbe
xor
push
roll
adc
test
es
adc
aaa
mov
aad
lock
dec
cmp
xchg
js
out
rcll
arpl
add
mov
ret
or
hlt
dec
mov
mov
add
les
loop
pop
hlt
add
test
mov
mov
jns
std
xor
add
sub
clc
push
add
stos
pusha
mov
outsb
fadds
pop
xor
fnstcw
mov
dec
clc
cvtps2pi
jecxz
cmpsb
pop
fwait
and
add
shll
mov
add
mov
ds
idivl
dec
call
loopne
add
or
cmp
mov
dec
mov
addr16
popf
cmp
or
fwait
mov
aad
add
jg
lret
in
cmp
fcomp
gs
std
rolb
aad
mov
loopne
add
cmpsl
push
mov
mov
add
mov
arpl
push
das
xchg
ds
add
cmp
xor
sarb
sbb
dec
fstpt
jge
push
lret
xchg
cmp
rcl
nop
shlb
sbb
adc
push
inc
push
hlt
cmp
lods
lds
pop
and
add
jl
mov
cs
incb
inc
add
mov
stos
sahf
add
pop
mov
ficoms
fadds
aam
loope
test
mov
insl
jae
mulb
ret
dec
addr16
fsub
dec
cmpsb
add
in
cld
inc
addb
push
mov
or
das
jle
add
test
decl
shll
mov
add
lret
popl
push
add
cmpsl
lret
adcb
or
and
jbe
imul
aas
push
add
out
or
sub
inc
inc
mov
mov
add
scas
sub
loop
mov
mov
mov
outsb
out
mov
mov
hlt
xchg
cwtl
popa
ds
sbb
and
fisttpll
loop
hlt
flds
aaa
addr16
pop
pusha
cs
add
bound
mov
xorl
sub
sub
mov
jns
cli
in
inc
mov
test
sbb
flds
push
inc
inc
xorb
fnstsw
outsl
aas
cmp
jns
js
fsubp
add
push
add
mov
in
cmp
enter
ror
movsl
icebp
mov
jne
push
adc
and
jmp
sub
mov
jmp
xor
fdivrs
adc
mov
adc
loopne
add
jmp
sbb
std
scas
add
pop
add
add
in
ljmp
inc
inc
add
xchg
or
add
mov
cmp
inc
mov
mov
push
push
mov
mov
shlb
loopne
dec
pop
add
insl
enter
add
pop
mov
add
cmp
mov
dec
loopne
adc
inc
mov
xor
add
sbb
out
aaa
popa
in
mov
and
inc
test
sub
add
dec
addl
aam
icebp
rorb
cmp
sub
fiaddl
ret
or
outsl
das
cmp
jl
je
push
scas
sbb
add
sub
xchg
iret
test
fwait
cmp
aaa
insl
das
jae
fsts
andb
add
mov
fdivr
push
sub
daa
adc
stos
mov
add
or
ljmp
xchg
lea
fbstp
in
imul
inc
add
cmc
push
mov
inc
cmpsl
jle
add
or
adc
lret
in
in
aas
ljmp
test
push
loopne
cmp
lods
popf
testb
push
pop
out
imul
adc
xlat
mov
and
mov
or
cli
xchg
lret
punpckhwd
lret
and
mov
mov
xchg
sub
test
sub
icebp
inc
cmpb
inc
xchg
xchg
or
cmp
mov
mov
repz
int
dec
int3
adc
inc
mov
sub
aam
pop
insl
mov
pop
sbb
inc
or
das
and
and
insb
xchg
inc
xor
sub
cmpsb
call
pop
adc
and
inc
insl
adc
test
into
or
lods
jne
ljmp
pushf
jl
inc
mov
stos
or
out
add
pushf
inc
enter
ficoml
data16
cli
add
lret
xchg
paddq
in
adc
mov
jp
jbe
jecxz
movsl
or
jno
scas
addr16
nop
inc
bnd
jle
inc
cmp
add
jp
ja
mov
jno
pop
fwait
inc
loop
sbb
cmp
pop
push
mov
pop
pop
int3
lcall
xor
inc
pop
add
bound
lods
xchg
add
shrb
mov
mov
cmp
xchg
pop
or
xlat
mov
pminsw
in
lods
add
jg
movb
daa
lds
into
mov
jns
enter
call
shll
cmpsb
outsl
fwait
pusha
mov
mov
addb
mov
cmpl
clc
lods
dec
add
pushf
lods
mov
fldl
sub
sahf
push
test
and
test
add
data16
test
shll
cmp
jge
push
xor
add
jno
and
movups
push
fcom
jae
daa
adc
out
popf
loop
add
push
add
push
mov
lock
xchg
cmp
sbb
clc
add
inc
sub
lock
or
lea
jmp
test
push
jnp
push
add
aaa
dec
jmp
rol
sub
dec
repz
pop
adc
mov
push
sbb
outsl
pushf
cmp
andb
mov
add
adc
add
and
mov
fmuls
cli
xchg
and
jno
dec
cwtl
stos
test
sub
add
jmp
je
fs
push
daa
jecxz
js
cwtl
add
shl
inc
inc
mov
add
mov
in
insb
pusha
push
adc
xor
cltd
jne
add
mov
out
push
push
and
sub
lret
inc
pop
cmpsl
add
push
push
pop
in
add
jl
and
rorl
shlb
cmp
sbb
test
fcomps
mov
mull
jge,pt
xchg
enter
inc
das
outsb
repnz
mov
jne
pop
int
add
pop
mov
pop
cli
push
add
jnp
pusha
cli
data16
mov
and
adc
inc
mov
add
cmp
add
mov
jge
adc
pop
inc
ret
add
push
add
jg
sub
stos
ja
cmp
adc
cmp
lahf
je
adcb
cmpb
addr16
or
jl
call
pop
les
mov
pushf
cmc
push
add
pop
or
dec
dec
data16
inc
mov
push
adc
sbb
add
fcmovnb
fcoml
or
add
fiaddl
add
xor
add
loop
add
mov
mov
ljmp
dec
sub
hlt
sbb
jae
mov
popf
xchg
fmuls
movb
adc
ret
add
ja
orb
ds
mov
add
cmpsb
sahf
inc
ds
scas
jae
sub
jmp
gs
lahf
lcall
lret
movsb
jnp
in
cmp
adc
inc
cmp
adc
mov
dec
iret
sahf
enter
enter
and
cmp
sbb
jns
mov
sbb
cmc
sbb
insb
lea
call
jne
jecxz
and
cwtl
cld
jo
leave
add
jne
sub
fadds
outsb
addb
shll
cmp
lods
mov
push
jmp
adcb
ret
dec
fcompl
add
fldt
and
push
jb
daa
jg
cmpsb
jns
stc
or
outsb
jbe
js
fwait
add
arpl
add
ds
and
fcoms
ljmp
jae
imul
jmp
lods
lock
int3
pop
pop
push
clc
add
mov
sarb
pop
jnp
jmp
sbb
jg
mov
cli
dec
mov
add
ljmp
xorl
add
xchg
sub
add
out
fsubrl
or
arpl
insl
aam
cmp
or
sbb
mov
cmp
imul
sarl
pop
mov
sbb
out
cmp
popa
stc
dec
mov
add
xlat
repz
loopne
inc
add
shl
je
stc
inc
mov
mov
sbb
les
movsb
add
add
push
ja
jp
xchg
fldenv
cmpsl
cld
push
mov
add
inc
add
sahf
scas
call
movsb
add
push
out
push
fcmovne
lock
add
pop
jno
cmp
or
ret
jge
push
jae,pt
add
mov
outsl
push
pushf
jo
test
push
adc
mov
call
aad
xor
add
ljmp
dec
hlt
xor
push
repnz
cmp
sbb
fldcw
les
mov
jne
aad
xor
inc
add
push
adc
xor
push
pop
inc
clc
int
pushf
das
and
nop
add
data16
outsb
mov
jmp
jle
xchg
mov
pop
pusha
pop
cwtl
adc
outsb
cmc
pop
in
xlat
outsl
hlt
test
fdivrs
movsl
and
adc
shlb
cmpb
and
mov
push
pop
incl
pop
cmp
shll
dec
ficoms
pop
sti
loop
pop
leave
add
imul
sub
mov
dec
xchg
add
inc
add
mov
insl
std
lods
movl
adc
cli
enter
sbb
jge
mov
bound
lds
nop
mov
add
cmpsl
add
mov
stos
mov
out
pop
inc
outsb
xor
fsubrl
cli
push
add
cmp
dec
add
out
and
fsubrs
jmp
mov
scas
in
roll
std
or
mov
sub
daa
add
and
mov
push
ror
icebp
pusha
xchg
orl
push
cmp
inc
mov
add
ds
or
in
mov
mov
stos
lcall
lret
sbb
pop
mov
jecxz
mov
lea
adc
imul
add
xchg
add
sbb
jp
iret
add
mov
mov
fcompl
sub
inc
maxps
scas
and
outsl
mov
dec
mov
imull
arpl
repnz
jg
cli
ret
lods
adc
daa
lret
cmpl
jg
add
add
clc
dec
cmpb
dec
mov
mov
adc
adc
xchg
int3
jno
insb
or
push
shrb
jle
mov
add
xor
call
adc
cwtl
sarb
add
mov
xchg
cmpsb
dec
cwtl
mov
sbb
and
push
pop
shrb
lret
dec
and
add
mov
aam
mov
mov
hlt
cmpl
sbb
sub
daa
push
lcall
xlat
and
rorb
mov
sub
add
cmp
mov
enter
in
subb
call
das
mov
or
loop
add
or
sub
imul
into
fiaddl
in
mov
inc
test
repz
adc
mov
out
imulb
jle
jg
mov
rolb
or
sub
ficompl
dec
xor
pop
inc
mov
and
pop
push
ret
add
inc
jns
add
cs
xchg
sbb
mov
les
into
add
sahf
sbb
cmp
fnstcw
es
mov
cmp
aam
in
add
inc
push
pusha
movsl
test
or
rolb
mov
add
in
sub
popa
sub
cmp
adc
xlat
test
add
vminss
callw
insb
jp
pop
sahf
mov
imull
cmp
inc
jmp
iret
shlb
add
mov
cli
outsl
add
mov
fstpt
push
ds
and
fildll
enter
popf
add
push
mov
fwait
xchg
jp
add
mov
cmp
and
sbb
arpl
test
es
inc
lock
jb
inc
and
addr16
add
mov
adc
dec
or
xchg
mov
cs
mov
pushf
jbe
add
push
xor
dec
mov
repz
lods
mov
push
mov
mov
mov
and
and
add
lret
add
and
push
mov
inc
sbb
inc
jae
sbb
xchg
movsl
xor
shlb
out
add
jnp
icebp
enter
pop
jns
add
pop
cmpsl
xor
add
mov
in
aad
fabs
sti
jnp
dec
cltd
add
inc
addr16
test
add
testl
push
xchg
adc
jo
or
lcall
cmp
xor
bound
dec
sbb
inc
lock
and
out
addb
test
imul
sub
scas
and
add
xorb
lock
and
adc
adcb
push
fimuls
add
lret
xor
inc
or
into
pusha
movsb
lods
ja
dec
cmp
mov
xorb
add
or
inc
loope
lods
cmc
or
add
jle
inc
sub
xor
js
mov
pop
push
adc
adcb
mov
in
add
jle
fnstenv
pusha
enter
jg
add
and
cli
xchg
enter
or
jl
add
inc
sbb
icebp
inc
ja
push
cwtl
enter
add
sti
adc
inc
cmpsb
and
cltd
addb
aad
mov
pop
add
cmp
leave
add
fwait
icebp
xor
lods
inc
mov
enter
sbb
fwait
pop
scas
mov
jmp
aad
cmp
jae
mov
push
mov
mov
jge
add
xor
xor
filds
push
xor
cmpb
add
cmp
pusha
xor
add
imulb
jmp
movsb
clc
add
sub
insb
mov
add
lcall
ljmp
insb
int
dec
cs
add
stos
push
adc
add
cltd
sub
sbb
clc
ss
pop
test
lcall
aas
data16
insb
fsts
push
add
cmp
idiv
punpcklwd
rclb
lret
adc
inc
scas
and
add
test
repz
sbb
xchg
data16
insb
add
stos
and
lea
add
into
cli
js
xchg
movsb
sbb
in
xchg
pop
test
add
mov
jno
jbe
xor
cwtl
subb
jg
add
ret
sub
push
rorb
sbb
lret
cmp
jo
mov
je
and
les
pop
test
or
mov
nop
and
xor
cmp
add
push
pusha
divps
jg
and
test
pop
enter
js
div
xchg
sahf
mov
sub
or
lock
dec
add
push
inc
jge
lahf
jmp
mov
test
mov
inc
mov
mov
dec
ds
mov
dec
in
lret
push
xor
adc
xchg
xor
mov
mov
add
mov
out
xorb
nop
cmp
ds
in
add
push
in
inc
je
mov
fistpl
pop
scas
bound
fcom
xor
icebp
add
jge
dec
add
mull
mov
and
add
xchg
add
sub
clc
fldenv
add
js
xor
inc
addb
subb
inc
cmp
jae
push
mov
cmc
jnp
aad
nop
mov
add
pop
jae
add
or
sbb
mull
rolb
add
jnp
stc
data16
scas
insb
xchg
scas
push
add
push
add
adc
mov
add
add
jle
jne
mov
adc
ss
fiaddl
mov
xchg
in
xchg
cmp
adc
nopl
mov
cmp
adc
dec
outsl
scas
sub
out
das
in
fisubrl
add
and
bound
add
mov
push
add
sub
cmp
mov
clc
mov
pop
test
cmp
sbb
mov
cmp
jbe
adc
adc
sbb
or
or
ficomps
push
fsubs
clc
add
lcall
sahf
sbb
ror
jne
ja
add
cmc
inc
jle
mov
out
sti
push
xchg
jg
iret
xor
add
jae
js
sbb
push
xchg
fmull
in
pop
mov
outsb
or
xor
mov
enter
adcl
mov
les
stos
ret
add
popa
mov
loope
cld
add
andb
mov
sbb
mov
add
jmp
xor
add
stos
in
mov
orb
cld
pop
fcoms
and
ja
shl
jb
cld
pop
push
and
add
and
dec
fldl
pop
mov
cmpb
inc
and
sub
inc
cld
add
aaa
movsl
ror
dec
sti
cltd
and
loop
cmpsb
sub
inc
pushf
mov
inc
daa
cs
sahf
fwait
rorb
lcall
mov
add
testl
popa
lds
mov
sar
inc
pop
cmp
jmp
add
mov
mov
sub
clc
or
pop
inc
mov
add
gs
push
je
add
dec
jg
pop
icebp
xor
pop
sbb
sbb
add
shl
jo
in
mov
dec
out
mov
sbb
fwait
add
inc
or
add
icebp
lea
mov
push
divb
pop
pop
sbb
or
and
and
mov
jge
arpl
push
out
mov
add
xchg
sbb
cmp
dec
mull
adc
out
pushf
mov
cmc
xorb
shll
out
jle
lea
or
jnp
push
int
and
loopne
cmp
orb
mov
sub
adc
pop
xchg
inc
ja
mov
mov
cmp
pop
leave
int3
ss
fimuls
shll
or
sti
cwtl
or
int
ds
test
rol
lahf
mov
pop
jns
cmp
test
fwait
loopne
push
iret
xchg
mov
adc
cltd
lahf
pusha
sub
adc
outsb
mov
mov
lea
fimuls
push
out
add
push
movsb
movsb
cmp
mov
int
and
leave
pushf
test
xor
test
aaa
add
push
lds
nop
fwait
add
orl
mov
pop
jmp
push
ret
lods
add
add
pushf
cmc
sub
mov
xchg
loopne
cmp
sarl
push
mov
lea
cwtl
sbb
mov
push
iret
pusha
inc
std
rcrb
test
cltd
push
pop
adc
sbbl
cwtl
mov
jp
push
cli
adc
sub
dec
ret
loop
fnsave
out
jmp
cld
subb
sbb
jl
inc
lods
pop
out
add
add
inc
shrl
mov
in
add
mov
mov
shlb
sub
test
push
fimull
dec
add
sahf
scas
pop
fisttpll
add
lods
inc
pop
pop
shrl
jp
mov
xchg
mov
jbe
push
dec
into
inc
enter
jecxz
cmp
out
pop
jo
push
push
mov
call
cmpb
aam
fs
sub
mov
mov
mov
stc
ss
fiaddl
loope
xor
mov
jp
test
fsubrs
push
xor
insb
ret
add
loope
mov
imul
xor
loop
jno
out
outsl
pusha
mov
and
loopne
dec
faddl
ss
add
add
cld
int3
nop
pop
mov
dec
nop
cmp
add
cli
add
sarl
inc
out
rcll
xlat
cs
mov
mov
sbb
add
stc
jne
add
or
in
xorb
mov
and
rcrb
xor
add
mov
mov
stos
pop
xchg
imul
enter
push
mov
and
popf
sarl
repz
subb
inc
add
es
js
sti
mov
pop
sub
pop
inc
shrb
stc
pop
cmp
adc
data16
lds
rcrb
pop
rcrb
jne
in
add
out
and
inc
movsl
call
push
mov
jnp
in
push
add
push
adc
stc
add
or
dec
shrl
insb
test
and
jle
jp
cmp
push
add
and
push
std
jno
and
jle
dec
into
pop
add
insl
and
push
mov
dec
setb
pop
add
cwtl
xchg
out
sub
xchg
jnp
xor
mov
push
xchg
cmp
inc
stos
mov
arpl
dec
aas
jecxz
xor
dec
int
or
and
fistps
cwtl
jmp
cltd
lock
cmp
ds
jmp
jns
fs
sahf
rorb
mov
or
sbb
sub
jne
or
les
mov
dec
sti
xchg
sub
pop
push
aam
in
fmull
roll
sbb
into
push
xchg
add
inc
test
mov
jb
pusha
xchg
stos
rol
or
or
sarb
adc
dec
loop,pt
or
shlb
and
sbb
xchg
pop
xor
shll
add
mov
sarb
lea
xor
call
add
mov
cmp
push
enter
mov
push
dec
adc
addb
cmpsl
into
inc
xchg
loop
add
sub
loope
imul
int
jecxz
sbb
pop
push
insl
sub
add
add
fwait
push
mov
cmc
mov
push
les
push
addl
repz
cwtl
cs
mov
sbb
int3
and
mov
lods
scas
sbb
repz
insb
popf
add
fstpt
mov
cmpsb
jmp
outsl
shlb
push
xor
mov
adc
add
movsb
cmp
add
jp
xchg
stos
push
ja
add
sub
jg
xchg
mov
mov
cmc
sbb
data16
out
xchg
aam
sbb
xlat
test
dec
sbb
xchg
js
shl
cmpl
mov
popf
mov
sbb
inc
adc
js
pop
loopne
xchg
loopne
push
test
inc
test
fwait
mov
icebp
pop
jl
movl
inc
in
mov
mov
mov
sub
jne
dec
sahf
add
and
out
insl
jp
or
es
mov
sbb
dec
push
pop
lock
pop
sbb
mov
mov
jb
cmp
aaa
andb
insb
adc
add
mov
pop
rolb
push
out
push
mov
mov
lock
inc
sub
jecxz
sub
vmmcall
mov
cmp
jnp
cmc
mov
dec
fiadds
add
add
fistps
or
jb
outsl
clc
stc
out
out
shl
xor
mov
sbb
push
push
test
add
xchg
mov
mov
test
and
add
push
rorb
xchg
addr16
hlt
aad
mov
rcr
cmpsl
inc
dec
add
mov
add
jg
adc
insb
cmc
add
xchg
pusha
in
call
roll
aam
fs
mov
cwtl
adc
xchg
add
mov
jne
add
mov
inc
add
xor
mov
inc
cwtl
bound
inc
add
or
sbb
pop
pop
mov
and
imul
mov
cltd
adc
add
mov
xor
jb
add
es
notl
xchg
cwtl
into
rclb
testl
or
ljmp
mov
mov
movsb
dec
xchg
add
mov
jo
jbe
loopne
pop
jb
sbb
xchg
std
loope
dec
into
mov
int3
cmp
ja
cmp
js,pn
pusha
loopne
pop
or
and
insb
push
sahf
dec
sbb
add
xchg
pushl
shll
sub
and
lahf
push
aam
lds
cmpsl
mov
pop
adc
fs
xchg
inc
movsl
shl
cmp
inc
cmpsl
and
dec
addr16
add
daa
sarb
mov
fisubs
sbb
popf
fstps
js
enter
jo
add
out
popa
xchg
imul
iret
push
nop/reserved
push
in
adc
pop
mov
add
mov
stos
ds
pop
fdivrs
fcmovnb
enter
add
sub
lods
lahf
jmp
add
lcall
daa
cld
mov
in
adc
lock
inc
ljmp
mov
mov
lcall
aam
add
jae
add
xor
mov
sub
enter
pop
or
mov
cmp
orb
mov
fwait
adc
cwtl
enter
inc
xchg
arpl
and
cmp
adc
mov
stos
bound
je
test
push
inc
xchg
out
test
or
add
add
add
repnz
push
aad
jmp
pushf
les
add
push
out
or
imul
shlb
xlat
sahf
out
pop
push
jecxz
rclb
xor
icebp
mov
jnp
enter
repz
jbe
subl
ljmp
adc
jl
dec
push
notl
inc
fs
sbb
idivb
cmp
inc
sub
mov
loopne
cwtl
movsb
sub
cmp
andl
fcomps
aaa
pop
lea
test
or
in
add
notl
cli
add
in
rolb
jbe
aad
cwtl
fwait
add
leave
inc
or
mov
push
push
imul
rclb
add
shll
add
push
mov
adc
fcompl
aas
pop
stos
add
popa
rcl
mov
mov
pop
mov
cmp
test
js
andl
xor
push
cmp
fistps
movsl
ja
push
mov
test
xor
mov
push
call
xor
faddl
cmp
fdivs
add
cmc
add
aaa
pop
xor
sbb
cmp
jno
xchg
jo
or
fstps
lahf
add
jnp
fadds
xor
xor
xchg
mov
mov
ret
adc
lcall
add
dec
sti
arpl
and
mov
xchg
xorl
add
stc
mov
sbb
mov
adc
push
in
dec
xor
adc
hlt
pusha
scas
add
sbb
ret
mov
pushf
mov
and
divb
or
or
pop
inc
adc
cmc
jns
add
adc
nop
sbb
or
test
ljmp
adc
sbb
fisubrs
pusha
mov
movsb
rcrb
pusha
je
int3
cmc
sbb
mov
inc
push
and
add
push
es
push
and
jle
shrb
roll
dec
leave
xor
xor
and
adc
push
add
pop
mov
xor
xor
mov
test
shlb
jns
inc
loopew
push
add
icebp
idivb
mov
push
das
adc
lahf
and
and
cld
pop
jno
pop
adc
xor
push
mov
js
push
jg
js
repnz
add
mov
add
xor
cltd
or
mov
add
pop
sbb
outsl
jg,pt
push
add
inc
sub
daa
push
or
loopne
shlb
pushf
or
push
out
add
mov
push
out
fs
sbb
pop
dec
aad
loopne
add
enter
fs
jg
cmp
xchg
add
rcrb
into
push
dec
xchg
mov
clc
add
jo
sahf
hlt
cmp
add
popf
addb
jb
add
std
aas
inc
popa
int
in
add
add
add
xchg
ss
nop
mov
adc
add
sbb
jmp
mov
sub
lcall
mov
cmp
out
add
jg
add
das
mov
pop
or
adc
xor
insb
adc
mov
movsl
add
sub
push
in
adc
push
jb
push
notb
add
mov
mov
add
add
sbb
loop
mov
lods
xchg
mov
lea
jecxz
int3
repnz
push
cmpsl
pop
or
or
or
call
mov
dec
jae
add
in
fcoml
orb
xchg
fs
cmp
out
and
add
jmp
int
popa
sarb
mov
and
scas
sbb
loopne
rolb
add
cvtpi2ps
push
mov
flds
and
mov
and
bound
push
cmpb
ficompl
mov
sti
adc
jae
inc
xor
add
mov
fs
lock
ss
dec
lret
dec
inc
test
loopne
add
mov
mov
aad
mov
mov
orb
je
or
mov
jle
fnstsw
add
lods
add
add
cmp
add
dec
nop
and
std
and
add
xchg
xor
cs
arpl
push
xor
sahf
and
pushf
lret
jne
push
shlb
push
es
mov
mov
add
gs
cmp
xor
mov
sub
cmp
adc
inc
mov
int3
inc
lcall
add
push
iret
adc
jl
xor
popl
sub
add
and
scas
insb
inc
cmp
mov
inc
sbb
addl
iret
add
mov
sbbl
movsb
addb
cmpsl
fcompl
inc
adcb
inc
test
outsl
insl
add
pop
push
ret
mov
add
lea
popa
mov
mov
inc
lds
in
mov
out
xchg
out
std
lods
out
xlat
add
push
xchg
jl
add
lahf
test
imull
addl
stos
insl
pop
in
dec
mov
sbb
cmp
pop
imul
les
call
add
aas
outsb
mov
cmp
clc
xlat
test
mov
jb
testb
mov
mov
rclb
push
mov
push
add
xchg
mov
in
movsl
nop
mov
es
push
lods
ret
imul
addr16
mov
outsl
jle
cld
nop
push
jne
pop
adc
pop
iret
addb
call
fs
movsb
jg
add
ljmp
lea
xlat
inc
stc
movsl
or
in
stos
xchg
jl
loop
mov
xchg
ljmp
jno
sti
jne
pop
adc
xor
dec
xor
add
fiadds
sbb
lds
movsl
ljmp
les
jl
add
pop
mov
dec
dec
inc
pop
pop
or
inc
cwtl
sarb
sub
inc
pop
mov
and
test
js
test
mov
push
dec
pop
inc
sbb
and
and
repnz
and
and
adc
mov
or
add
test
mov
inc
les
inc
out
sbbl
fcmovbe
add
out
int3
repz
mov
and
add
xchg
xor
pop
test
cmp
test
xlat
repz
inc
xor
inc
inc
mov
mov
pushf
sub
test
inc
cmc
arpl
add
insb
push
call
fsubp
cmp
pushf
mov
loope
mov
pop
nop
cli
sub
outsl
mov
je,pn
mov
stc
pop
sub
xor
inc
mov
mov
addl
cmpsl
mov
sbb
lods
clc
or
dec
xchg
cltd
cmp
inc
stos
and
sub
lret
inc
enter
aas
dec
lds
and
mov
add
jl
mov
xor
test
fisubrl
mov
add
xchg
in
jbe
in
adc
call
gs
push
cmp
dec
nop
xchg
pop
lahf
in
pop
or
ljmp
jb
add
sub
inc
sahf
add
dec
dec
fistps
push
jl
std
jb
or
jae
js
cmp
add
pop
push
mov
pop
pop
movsl
mov
pusha
jo
or
bound
pop
loope
rcrl
and
pop
aas
shrb
out
and
dec
out
mov
jg
out
xlat
data16
pop
cmp
aas
add
shlb
and
and
mov
push
clc
or
bound
add
arpl
imull
push
pop
sbb
mov
shrl
and
sarb
jo
inc
data16
jmp
cld
js
sbb
pop
pop
xchg
rolb
stos
ds
add
subb
test
mov
call
and
pusha
xchg
cwtl
add
and
mov
pusha
and
mov
inc
adc
xchg
sub
stos
add
into
adc
das
xchg
dec
add
and
ret
xor
xor
mov
sub
mov
int3
enter
mov
pop
inc
cltd
push
add
popf
hlt
sbb
or
pop
int3
pusha
scas
xor
jo
cltd
lahf
add
inc
bound
cmovbe
adc
jg
js
jp
outsl
fldl
push
jge
addl
loopne
cmp
pop
add
xchg
mov
dec
push
jno
cli
mov
xor
sbb
add
sahf
push
jle
mov
xchg
adc
pop
add
js,pt
fdivl
jg
mov
cmp
pusha
add
add
and
call
inc
and
iret
mov
out
pusha
xchg
outsl
or
cmp
ljmp
sarl
out
mov
xchg
fisubs
push
outsl
push
add
add
cli
jnp
mov
xchg
add
sub
and
jns
rcr
div
scas
sbb
in
cmp
call
lods
lods
cmp
jle
sbb
pop
and
mov
pop
add
mov
dec
add
shl
push
mov
add
and
sbb
or
sbb
icebp
jl
pop
aaa
jne
leave
test
push
xorb
or
mov
and
jo
add
fsubl
mov
push
adc
scas
divb
and
clc
xor
mov
mov
push
pop
mov
fisttps
push
sub
inc
int3
mov
or
mulb
js
loope
int
mov
add
lods
xchg
lds
pop
dec
adc
add
and
sbb
scas
dec
addb
jmp
mov
adc
shl
movsb
imul
mov
cmp
pop
ret
ss
push
add
pop
push
aaa
add
or
or
nop
cwtl
je
adc
add
lcall
test
cmp
mov
push
pushf
aam
mov
sub
add
roll
popa
inc
inc
push
out
rolb
mov
inc
add
nop
filds
call
add
rol
ret
push
pop
addb
loopne
or
and
in
icebp
xchg
mov
mov
fcomps
mov
mov
in
lods
or
je
pop
test
mov
pop
cwtl
xchg
jnp
and
pop
mov
mov
push
mov
stos
xchg
ljmp
add
push
loope
mov
fldenv
cmp
js
xchg
adc
add
rolb
push
mov
aad
add
jne
in
outsb
and
mov
mov
add
int3
mov
add
cmpsl
jbe
pop
jo
in
cmpl
jmp
adc
add
sarl
pop
add
mov
dec
cmp
lret
push
outsb
xor
mov
xchg
orb
sub
add
lahf
jle
mov
shll
push
ja
sbb
stos
add
outsl
dec
cmpb
nop
or
pop
sbb
andb
xchg
mov
aam
add
insb
push
addr16
rorl
add
cmp
xlat
xor
js
push
sub
add
stos
movsl
iret
ljmp
outsl
sbbb
and
adc
push
sbb
pop
icebp
cwtl
sbb
xor
push
cld
cmpsb
mov
lcall
stos
inc
pop
sarl
mov
dec
arpl
pusha
cmpsl
mov
dec
xacquire
pop
mov
mov
out
cmp
in
xchg
repz
andb
jo
fists
push
cwtl
add
sarb
add
add
ret
add
xor
stc
add
dec
sbb
push
sub
sub
add
push
add
add
rdtsc
outsb
aas
xor
loopne
mov
push
loop
shlb
add
outsl
sub
pusha
cmpsl
int3
mov
notb
mov
mov
add
or
sbb
shrb
or
int
fs
sub
lods
sbb
fadds
cmp
mov
adc
add
hlt
ja
imul
xchg
movsb
xchg
cltd
jle
pop
data16
and
rol
sbb
cmp
loopne
mov
add
aad
and
fdivl
add
add
push
sbb
mov
adc
or
clc
adc
jb
int3
fdivrp
add
pop
psadbw
dec
jle
and
mov
cmpsl
idivl
popa
cmc
in
push
add
add
xchg
andb
add
push
inc
xchg
add
into
pop
add
adc
rorl
sbbl
jmp
add
out
stc
xchg
call
push
call
and
lds
aam
sar
ret
push
xor
loope
sbb
xor
cmp
je
xchg
mov
nop
fwait
sahf
or
jne
push
call
in
bound
add
loop
movhps
out
fsubrs
push
and
add
add
dec
or
cli
jp
adc
movsl
int3
sub
es
jle
add
jmp
orb
and
mov
dec
mov
lds
imul
nop
or
jle
jge
aad
loopne
in
adc
add
xchg
stos
movl
and
dec
cmp
mov
add
icebp
dec
add
dec
shlb
jg
cltd
es
xor
sbb
inc
jb
add
push
arpl
movsl
enter
in
rorb
mov
call
imul
add
jo
xchg
sahf
add
faddp
inc
mov
and
add
pop
lahf
add
outsl
std
lock
js
jo
loopne
add
stc
frstor
jns
lahf
add
lcall
add
aaa
push
and
adc
add
push
jnp
divb
xchg
popl
cwtl
add
lds
xor
mov
add
ret
jnp
out
push
sub
push
das
ja
add
outsb
mov
out
jl
add
and
inc
aaa
in
xchg
fcmovb
xor
mov
or
popa
pop
jnp
push
jns
dec
inc
cmpsb
add
lcall
fdivl
push
lods
push
das
add
mov
sub
es
mov
add
shlb
pop
ror
lods
add
enter
sarb
les
mov
out
jge
cmovl
jge
scas
push
idivb
clc
add
cmpsl
orb
add
cld
sbb
cmp
dec
xchg
sub
push
cmp
inc
pop
in
mov
pop
dec
loope
mov
cmp
insl
in
dec
lret
mov
mov
xor
sub
out
jb
divl
add
test
les
adc
sub
lret
pop
scas
add
dec
push
dec
inc
cmp
pop
pushf
imul
adc
mov
mov
xor
outsl
pop
cli
adc
in
jno
push
dec
inc
ficompl
pop
nop
out
push
ljmp
and
int
scas
sbb
loope
fnstenv
xchg
add
jmp
fs
push
adc
cmp
or
rolb
fidivrl
cmpsl
pop
mov
dec
add
mov
call
out
dec
inc
in
cmpsl
addl
pop
sub
mul
loopne
add
clc
orl
inc
inc
or
jns
adc
jg
ljmp
movsl
xchg
cmpsb
add
sub
fsubs
lods
popf
add
in
sub
xor
icebp
mov
cmpsb
push
cmc
or
add
orb
jecxz
mov
inc
add
rol
rcrl
xor
pusha
mov
inc
fiaddl
mov
mov
mov
in
into
loopne
add
dec
fnstcw
add
mov
or
nop
call
xchg
sbb
xorb
fnstsw
add
xchg
xchg
add
pop
inc
push
cmpsl
push
clc
add
or
popf
into
mov
fsubrp
pusha
add
jns
lock
jbe
test
das
mov
rolb
add
xchg
fists
fstps
jo
add
jae
cmp
jo
jns
add
ret
loopne
inc
sub
sbb
jg
fidivs
nop
fs
repnz
push
or
add
add
pop
dec
jns
repnz
pop
pinsrw
mov
add
outsb
cmc
push
mov
emms
out
sub
add
imul
enter
pop
add
mov
movsb
sub
rorl
add
fsub
sbb
mov
add
sbb
push
or
adc
dec
test
or
insl
outsb
pushf
bound
in
flds
iret
mov
and
jbe
aad
and
add
aas
aam
xchg
mov
aaa
jmp
sbb
add
ficompl
hlt
pop
les
mov
js
in
mov
xor
cmp
or
sbb
sub
sbb
add
imul
call
dec
pop
pop
inc
cwtl
lds
int3
mov
mov
pop
push
icebp
out
xchg
jo
les
sub
shll
insl
add
jge
out
xor
out
lds
nop
and
subb
add
imul
fiadds
mov
es
add
add
sub
sub
and
mov
dec
adc
push
mov
add
inc
shrl
and
lock
mov
and
insb
cmp
gs
pop
outsl
pusha
clc
shlb
xor
dec
add
mov
pusha
jmp
pop
mov
fcmovb
lea
pusha
mulb
or
sti
loopne
dec
add
stc
cmp
aaa
in
hlt
aas
xchg
test
out
bound
jnp
add
adc
andb
loopne
sub
dec
imul
jmp
sbb
dec
outsl
add
fcmove
rcrl
inc
popf
mov
das
jo
xcrypt-ecb
cmpsl
cli
mov
jg
inc
or
cmp
xor
icebp
js
pop
pop
clc
xor
pop
cmp
add
dec
push
dec
push
pop
jo
add
cli
sbb
incb
mov
adc
rolb
dec
adc
lock
pop
fwait
hlt
in
push
pusha
add
pop
std
testb
cld
imul
sub
cmp
add
addr16
popl
mov
sbb
sbb
mov
int
mov
jns
imul
aam
aam
xor
pushf
add
int3
fldenv
mov
mov
xchg
sub
jge
or
adc
push
out
push
mov
mov
push
lret
add
adcl
arpl
xorl
xchg
pusha
and
add
jb
movb
push
push
inc
push
cltd
mov
pushf
inc
outsl
sub
add
idiv
xchg
add
ficomps
es
or
lcall
lock
std
jmp
movsl
push
jg
push
add
mov
lods
lods
inc
cmp
cmpsl
cmp
cmp
or
sbb
add
add
fnstenv
out
movsl
mov
fsubl
jne
cmp
shlb
xor
int3
push
jle
hlt
rorl
jne
jae
add
imul
add
xchg
pop
mov
sar
fwait
add
jo
xlat
je
add
cld
nop
sti
repz
or
mov
adcl
lods
sti
mov
and
push
lds
insl
sub
add
adc
jg
sbb
xchg
clc
cmp
cmp
sbb
fidivl
roll
movsl
push
in
lret
pop
je
push
fistpll
pop
nop
andb
jecxz
fidivs
push
and
gs
test
mov
add
shlb
xor
test
pop
push
add
dec
push
sub
sub
pusha
hlt
loopne
add
lock
sbb
and
push
adc
xor
jge
adc
test
jp
push
ror
out
pusha
and
and
add
adc
adc
or
dec
dec
aam
push
jo
lcall
add
adc
pop
sbb
jp
loopne
adcb
cmpsb
mov
in
repz
and
pop
in
and
mov
test
sahf
pop
jecxz
pop
cli
fildl
mov
or
orl
mov
xchg
xchg
repz
xor
mov
pop
aam
inc
mov
int
popa
lods
cmp
add
push
sbbl
shll
fdivl
jo
out
sbb
jg
pop
ljmp
push
jmp
pop
enter
push
enter
sub
push
out
out
cltd
add
push
fsubrl
mov
jp
das
xor
adc
mov
mov
sub
test
roll
enter
adcb
add
cmp
loopne
add
fs
das
stc
dec
xchg
stos
mov
dec
push
mov
or
jge
ss
mov
hlt
aaa
int
and
js
mov
mov
lret
inc
repnz
jmp
lcall
mov
fadd
or
fcompl
pop
lret
jle
xchg
sbb
insb
pop
cwtl
int3
xlat
add
sar
mov
mov
and
cld
sbb
push
adc
shl
leave
push
adc
or
fldl
loopne
in
pop
stos
cmp
jle
ds
ljmp
call
dec
or
and
sahf
xchg
push
jge
or
or
push
add
loopne
add
fadds
add
into
pushf
js
shrb
mov
inc
or
outsl
out
ret
sub
das
vpcomuw
jge
dec
loopne
jbe
inc
add
adc
sub
cmpsl
xchg
add
inc
sub
or
ja
or
push
inc
cmp
mov
push
sahf
add
lds
or
fdivr
shrb
cli
and
icebp
and
subb
les
in
pop
pop
loop
and
adc
add
xor
sbb
ss
add
and
addr16
push
fwait
sub
popa
sti
lahf
jns
mov
add
out
imul
pop
test
pop
or
cwtl
dec
mov
aas
jae
mov
xor
or
pop
sbb
inc
adcb
push
push
mov
in
out
adc
loopnew
push
movsl
xor
lds
scas
les
pusha
inc
fwait
xchg
mov
add
cwtl
pop
add
pop
jl
inc
cwtl
out
add
es
sbb
pop
out
imul
pop
adcb
hlt
lds
sbb
jp
xor
mov
add
sti
enter
jno
ret
xchg
dec
push
jmp
add
or
shll
test
aad
leave
jbe
movsb
rorb
jecxz
lret
rolb
dec
mov
cmp
loop
dec
xchg
pop
pop
in
adcl
rorb
mov
addl
in
adc
mov
bound
aad
cli
jp
cltd
cmc
add
imul
add
js
roll
sbb
jne
dec
aaa
jg
test
push
movsl
lcall
mov
dec
aam
lods
add
jge
xor
mov
and
popa
fsubrp
adc
jmp
or
lahf
add
mov
xchg
pop
add
shrb
pop
in
fdivrp
pop
push
inc
popf
mov
add
outsl
inc
mov
cmp
rcll
xor
pop
add
jnp
pop
mov
addl
xchg
xchg
add
pop
mov
leave
clc
jns
outsb
pop
scas
push
inc
sub
rol
sbb
dec
and
cs
add
std
inc
pop
rcrl
sbb
push
rcll
leave
ret
fstp
mov
add
cmp
int3
js,pn
add
or
das
mov
pop
insl
adc
xchg
out
inc
scas
mov
cmp
daa
xchg
and
adc
adc
xchg
dec
cmpsl
mov
cs
adc
add
addr16
xor
push
scas
iret
and
add
cwtl
add
dec
sub
stos
sub
test
lock
hlt
cs
push
addl
or
inc
jg
push
fmull
push
pop
add
jnp
adc
and
mov
add
push
sub
roll
in
in
mov
adc
add
leave
mov
jae
nop
lods
add
sbb
repnz
mov
pop
push
add
into
xor
out
mov
add
fisubrs
xchg
aam
pop
sti
jnp
ljmp
mov
nop
jae
xchg
add
out
adc
mov
push
add
dec
les
stos
mov
stos
jle
inc
ljmp
mov
mov
nop
adc
mov
loopne
js
jnp
xor
addl
cmp
flds
lock
and
enter
enter
fwait
test
into
adc
sbb
pusha
call
cmpb
dec
mov
cmp
je
cmp
data16
mov
xchg
enter
cwtl
push
js
xchg
or
inc
jbe
lcall
xchg
mov
xchg
cmpsb
sub
popf
push
add
pshufw
adc
sub
mov
inc
test
or
data16
fs
add
inc
push
pop
mov
add
dec
fdivrl
sahf
and
popa
adc
add
add
mov
add
fstps
stos
pop
pusha
mov
fidivl
xlat
enter
ficomps
or
je
lret
cmc
and
shlb
pusha
fcomps
xchg
fistps
inc
cmp
test
pusha
dec
jmp
popf
sti
std
iret
movsl
sbb
or
mov
ret
mov
and
int
jl
mov
add
mov
mov
subb
cmp
push
adc
xchg
out
add
pop
ss
or
jae
dec
jno
leave
into
push
out
adc
dec
shl
cmpsl
loop
xor
fcomi
cmpsb
or
out
mov
mov
cmp
mov
lahf
pop
outsb
add
sub
stos
fsubr
add
mov
mov
add
idivl
cmp
pop
mov
add
dec
add
fdivrl
or
or
test
mov
push
roll
or
test
cmp
sbb
mov
insb
dec
pop
in
add
cmp
mov
mov
out
adc
xchg
cli
sub
ret
and
scas
and
clc
das
shl
ljmp
ret
cli
xchg
lea
pmulhuw
movsb
ss
jo
sbb
and
sarb
push
add
dec
orb
add
popf
xorb
outsb
add
ja
cwtl
add
jae
dec
mov
test
xlat
adc
xchg
add
insl
fisubs
add
cltd
push
loop
in
sub
pop
and
pusha
mov
add
fldt
sti
mov
push
fwait
mov
lods
cmc
push
jns
add
sti
or
shlb
lods
jg
adc
rolb
test
out
mov
incb
mulb
and
aam
scas
add
bnd
popa
orb
outsl
enter
clc
outsb
ljmp
push
rorb
sub
xor
pop
adc
loop
aam
xchg
imul
cli
decl
daa
add
lahf
out
xorb
inc
test
mov
shll
fsubrl
imul
push
clc
push
add
loop
rorl
mov
shll
jle
mov
out
dec
or
add
cmp
jae
clc
mov
aam
cld
cmp
pop
repz
sbb
xor
addr16
xchg
jne
iret
adc
add
out
push
cli
ret
pop
add
cmc
and
dec
jle
in
push
cmp
sbb
pop
les
dec
mov
sbb
sbb
cwtl
and
add
push
inc
fnstcw
int3
iret
inc
add
sub
imul
ja
fwait
mov
test
cmp
lret
lds
xchg
lods
pop
mov
xchg
dec
cmp
sbb
and
decl
loop
out
mov
int3
inc
test
pop
lock
cmpsb
add
sti
pop
xchg
nop
push
xchg
ret
adc
xchg
sub
xchg
mov
ror
add
iret
pop
mov
add
inc
mov
fstps
mov
cwtl
rcll
movl
movsb
jecxz
shlb
out
repnz
fldt
in
cwtl
add
mov
push
das
lahf
sbb
mov
mov
loope
int3
jmp
sub
lahf
in
jbe
xchg
add
cmp
jl
ret
xor
or
jo
push
cmpb
std
scas
out
add
addl
push
insb
mov
cli
xchg
jne
push
popf
mov
pop
lock
xor
out
repz
movsb
dec
add
dec
mov
pop
imul
push
cmpps
rorb
std
mov
xchg
xorb
push
dec
pop
inc
add
sub
ror
orb
dec
call
adc
inc
and
loopne
fadds
xlat
shlb
pop
cli
movsl
add
rcrl
xor
add
les
int3
jns
pusha
pop
sbb
adc
dec
push
rcrb
mov
push
jmp
adc
leave
add
cmp
fimuls
jmp
lea
adc
push
pop
jns
cmp
mov
dec
shll
pop
idivb
faddp
test
cmp
insl
adc
xorb
roll
push
mov
sub
popfw
push
dec
inc
xor
inc
xchg
or
mov
add
mov
pop
jl
out
fisttpll
stc
mov
jne
mov
push
cs
iret
sbb
inc
clc
mov
jmp
jno
ret
and
mov
push
adc
push
out
hlt
pusha
jecxz
call
xor
and
push
bound
cli
pop
add
outsl
pop
inc
adc
addr16
mov
mov
test
subb
cli
aas
popa
pop
sub
adc
dec
add
cmpsb
insl
dec
std
aaa
rorl
add
jb
repz
add
pop
out
pop
mov
dec
add
imul
in
outsl
push
test
pop
out
mov
icebp
add
jmp
push
mov
addb
jp
insb
or
out
jg
and
jns
and
xchg
rcpps
xchg
fcmovnb
dec
bound
pop
add
sti
fcompl
sbbb
adc
stos
or
add
arpl
stos
mov
aaa
sbb
mov
cmpl
rcrb
shlb
fcmovne
inc
pusha
call
sahf
inc
inc
push
mov
add
or
add
es
xor
push
add
in
push
sbb
push
test
fsubrs
psubw
push
sub
jb
adc
add
outsb
loop
les
pop
movl
dec
fwait
xchg
stos
add
jnp
out
cmp
ljmp
add
push
push
mov
mov
dec
dec
adc
adc
pop
lret
out
lahf
mov
loopne
shlb
add
mov
sbb
sub
and
daa
xchg
ffreep
les
inc
clc
rorl
jg
add
xchg
mov
mov
mov
rorb
movsb
push
inc
push
pop
enter
jmp
jae
pop
cmovns
jmp
xchg
push
mov
bound
add
inc
cmp
push
mov
push
call
icebp
cmpb
or
xchg
add
jne
xor
add
mov
ss
xor
or
adc
cmpl
cltd
loopne
retw
and
sub
xchg
sub
jl
add
pop
mov
inc
pop
jne
push
mov
fdivp
daa
sbb
pusha
ljmp
cs
ret
xchg
xor
cmp
inc
and
xor
jb
cmp
inc
test
dec
mov
sbb
nop
xchg
add
mov
add
lods
mov
and
pop
add
sbbl
xor
cmp
add
ja
mov
mov
outsb
lcall
add
js
cmp
push
repnz
and
mov
out
decb
movsb
testl
addr16
mov
xchg
jl
add
jmp
outsb
add
sub
repnz
mov
movsb
cs
lods
inc
test
pop
or
movl
pop
push
in
lods
mov
into
push
popa
add
sbb
mov
shll
cwtl
sbb
sbb
mov
cltd
cmpsl
fsts
or
dec
sbb
mov
cmp
push
popa
jne
ds
pusha
mov
add
cwtl
xor
cmp
add
into
pop
sbb
ret
pop
rclb
add
movsb
push
push
fadd
add
and
mov
inc
jp
sahf
lahf
shlb
rolb
mov
mov
inc
adc
pusha
sbb
inc
inc
mov
cmp
sub
inc
popa
adc
xor
lds
leave
nopl
mov
nop
pop
push
xchg
testb
dec
jp
jnp
pushf
jae
or
and
push
jae
jg
addr16
mov
mov
push
xor
add
sti
push
add
dec
fisttps
pop
mov
or
fbld
mov
adc
mov
mov
icebp
test
pop
mov
add
inc
mov
or
nop
dec
cmp
out
stos
and
scas
fstpt
insb
add
and
add
pop
stos
adc
inc
lea
add
xor
shlb
sub
ljmp
iret
jl
push
and
cwtl
inc
and
ror
or
arpl
movl
in
sbb
or
aas
sbb
ret
and
fsubrs
inc
add
lock
add
loop
push
int
xor
add
in
push
shrb
mov
leave
add
cmpsl
jle
inc
aas
pop
sub
iret
push
mov
enter
aas
mov
mov
cltd
pop
add
fidivl
mov
sbb
sbb
xor
add
testb
icebp
push
and
pop
cs
push
into
cmp
push
inc
movsl
mov
push
xchg
mov
mov
hlt
rcr
scas
mov
sbb
lret
push
ljmp
in
movsl
add
push
dec
or
inc
fidivl
hlt
mov
shlb
xor
sahf
sti
mov
push
das
add
roll
adc
sbb
push
adc
push
xlat
dec
xchg
loope
insl
ret
lahf
sbb
sub
cld
adc
aas
xor
add
fpatan
cmpsb
mov
stos
or
test
add
jl
adc
imul
sarb
inc
xchg
pop
mov
test
loopne
pusha
nop
sub
jno
mov
lahf
clc
aam
and
mov
std
mov
in
xor
fadds
sti
or
push
add
dec
mov
add
add
push
sbb
jecxz
in
scas
pop
jmp
mov
js
cmpsl
mov
imull
and
xchg
pushf
movswl
ljmp
pop
sbb
add
shlb
and
out
or
sahf
mov
outsb
cs
or
xchg
add
js
filds
mov
into
mov
js
aas
and
fneni(8087
shll
xchg
fstpl
add
popf
imul
add
pop
es
lret
das
cmp
dec
add
rorl
sbb
jnp
add
xchg
xor
rorl
icebp
mov
inc
dec
fidivl
out
hlt
jb
cmp
pop
sbb
add
in
bound
ljmp
cmpb
data16
fcompl
mov
dec
clc
inc
add
xor
cli
xchg
xor
sbb
pop
push
sarl
xlat
iret
jo
pop
cmp
mov
aas
add
int
test
sub
add
insb
cwtl
fistpll
and
lds
add
mov
fwait
rorl
add
jl
sub
push
rcll
add
cmc
push
out
mov
sub
pushf
add
mov
shlb
fildl
xchg
xor
jne
add
or
nop
scas
xchg
lahf
jp
or
and
outsl
xor
ret
add
pusha
mov
aad
cli
stc
mov
adc
and
cmp
mov
sbb
dec
popf
cmp
jg
add
mov
push
xchg
pop
dec
jo
add
pop
pop
cmp
int
add
mov
mov
add
jo
sub
pushf
jmp
shll
xchg
add
das
stos
ja
or
loope
mov
jle
fstpt
mov
jne
dec
adc
add
dec
pop
or
push
mov
repnz
frstor
add
sti
js
ds
mov
add
mov
jecxz
cmp
cli
dec
mov
insb
pop
sub
cmpsb
outsb
push
pop
add
repz
mov
add
mov
dec
or
repz
sti
inc
arpl
xor
xchg
stos
testl
call
add
aad
arpl
xchg
lea
add
aad
cmpsl
or
mov
hlt
ror
inc
xchg
add
aaa
fmuls
adc
mov
adc
sub
add
xchg
lods
jae
add
pop
cwtl
xor
stos
data16
test
xor
or
push
adc
sub
mov
leave
add
in
or
sahf
jnp
inc
pop
pop
popl
negb
mov
sbb
and
nop
popa
xorb
lcall
int3
push
xor
dec
hlt
ficomps
stos
push
ss
cmp
mulb
sub
xchg
int
sub
add
jg
dec
aaa
mov
add
aas
mov
or
add
hlt
add
adc
push
out
and
add
xchg
mov
mov
fs
and
cwtl
les
jne
jb
scas
push
lock
cmp
push
push
ret
fdivr
add
aad
xlat
xchg
add
xchg
push
push
mov
in
sub
cs
pop
mov
lds
add
or
icebp
add
mov
shlb
divl
gs
jg
push
insb
js
test
xchg
outsb
rcrb
ds
fwait
ja
sbb
in
dec
mov
cwtl
mov
inc
cmp
add
add
lods
int3
push
loop
xchg
mov
add
pop
imul
jmp
or
add
repz
mov
add
cld
dec
lret
inc
jle
jp
push
lret
fdivs
fstl
mov
push
bound
sar
push
sbb
enter
adc
push
imul
test
out
sub
add
js
jl
and
xlat
ror
clc
nop
pusha
add
add
jbe
mov
add
popf
enter
xor
jb
pop
inc
mov
notl
add
leave
dec
into
aaa
lcall
sbb
pusha
loop
fldt
and
add
dec
jge
mov
les
arpl
insb
add
nop
ret
nop
adc
jae
cmp
add
cs
or
sub
inc
pusha
je
add
lahf
leave
jl
arpl
fdivrl
outsl
lret
pop
mov
xchg
pusha
add
dec
into
mov
add
gs
sbb
data16
add
mov
cld
or
push
jl
xchg
test
mov
in
mov
mov
rclb
jle
pop
outsl
das
sub
add
ja
add
or
jl
fsubs
mov
mov
cmp
jae
inc
imul
pop
mov
int3
dec
jns
cmp
sub
jo
mov
out
lea
cmc
push
add
aaa
pusha
icebp
add
mov
in
arpl
add
mov
xchg
add
lods
jmp
or
fsts
js
push
iret
mov
mov
jl
or
jl
xor
add
add
lahf
and
int3
add
cltd
mov
xor
cmp
mov
push
les
dec
mov
or
xor
cs
sub
xchg
add
jnp
mov
mov
xlat
ljmp
push
add
dec
push
pop
jl
sbbb
add
and
jmp
add
pop
test
aad
add
dec
mov
add
lret
mov
repnz
addb
enter
push
jge
xchg
sti
dec
cltd
add
and
sbb
fldt
test
gs
add
fdivl
in
out
je
sbbb
jo
jg
in
add
rclb
in
adc
mov
iret
aas
leave
sti
add
dec
sbb
mov
sarl
ret
xchg
je
iret
in
cld
and
aas
mov
xor
leave
jbe
jno
clc
or
xchg
xor
filds
xorb
popf
pop
xor
add
inc
in
es
ret
lods
add
pop
mov
rolb
add
ret
lahf
jnp
sbb
xor
mov
test
mov
jp
fucomi
rol
adc
mov
jecxz
adc
lahf
test
xor
dec
add
ror
jnp
imul
adc
mov
pop
push
loop
adcl
and
add
xchg
or
or
pop
cmp
pop
popa
sub
das
pop
jle
add
ror
fldl
mov
sbb
daa
fwait
push
and
jg
cmp
stos
jmp
push
das
add
fs
or
int
es
test
dec
mov
dec
hlt
bound
add
and
icebp
cmp
into
out
and
cwtl
push
pop
enter
ret
dec
sti
stos
pop
xchg
adc
sub
dec
ja
nop
xchg
add
mov
inc
ds
insb
and
movsb
cmpsb
xchg
sbb
mov
scas
and
push
lds
cmp
sub
rorl
scas
cmpb
std
add
pop
xorl
in
jns
add
and
and
mov
scas
inc
or
add
inc
pop
test
cmp
cwtl
cmpsl
scas
add
addr16
sti
sbb
push
adc
outsl
cmovs
int3
cmp
jl
mov
std
add
xchg
les
jne
add
mov
loopne
lea
andl
in
repnz
pusha
cmp
and
add
mov
cmp
add
mov
rol
imul
adc
pop
mov
cmc
mov
lea
lock
nop
push
in
add
in
loope
dec
and
leave
lods
mov
add
imul
adc
loop
pushf
or
stos
cltd
adc
sbb
push
adc
pop
sarb
movsl
inc
adc
andb
lret
pmulhuw
andb
inc
popa
subb
clc
dec
mov
adc
push
cmpsb
push
std
add
jb
sbb
scas
add
jno
test
mov
inc
inc
fdivrs
xchg
addb
leave
sahf
adc
nopl
andl
xor
sub
ret
mov
push
in
ljmp
inc
leave
add
rorl
or
ret
adc
stc
ss
add
sbb
rcrl
stos
aam
push
loopne
sbb
lods
enter
xor
ja
push
and
push
add
pop
stos
leave
bound
inc
jge
push
cmc
add
push
sti
lcall
leave
and
sbb
inc
and
jno
add
or
cltd
add
movb
mov
icebp
sbb
data16
add
mov
dec
pop
pop
pop
cmp
subb
cli
add
xorb
out
aas
xchg
jle
push
lea
sar
inc
mov
push
in
in
pop
cs
inc
cwtl
leave
in
xor
dec
cmp
cli
cmpsb
add
lds
shlb
mov
sub
in
lret
test
add
popf
orl
sub
mov
or
mov
dec
fists
in
rorb
add
adc
ds
pop
pop
add
out
mov
or
inc
shlb
sbb
scas
stos
inc
add
out
adc
xlat
sbb
inc
pop
cmpsb
jnp
orl
daa
push
push
dec
cli
jne
jge
mov
and
cmp
test
jb
lods
sub
addr16
adc
add
daa
xchg
push
fs
and
add
push
jmp
lret
rorb
and
jb
cmp
mov
das
push
leave
clc
in
adc
mov
adc
add
xchg
flds
in
or
add
movsl
push
xchg
mov
push
xchg
or
mov
and
pushf
pop
xchg
fadds
movsb
pop
xchg
stc
mov
xchg
aad
inc
pusha
and
inc
sbb
fs
std
pusha
adc
mov
dec
or
adc
push
and
dec
xchg
not
add
or
or
dec
nop
in
xchg
sub
and
aas
fs
xlat
pusha
lret
dec
inc
and
adc
cmp
orb
adc
or
push
subb
sbb
dec
jno
inc
sbb
adc
push
cs
addb
fucomp
mov
test
xchg
enter
jmp
xor
fistps
adc
jae
les
mov
mov
mov
add
push
cmp
fmull
adc
cmpsl
fs
add
sbb
mov
scas
jl
and
addr16
jns
jnp
or
mov
dec
add
inc
or
cmovae
push
bound
pop
push
inc
add
add
ret
cli
test
outsb
push
ds
xor
sbb
or
cmpsl
sbb
push
push
cld
mov
fnstcw
pusha
inc
and
test
mov
gs
cmp
nop
sub
test
or
lock
and
mov
inc
hlt
pop
inc
loop
jb
pusha
icebp
and
and
jmp
mov
fimull
loop
inc
dec
adc
mov
inc
lea
subl
mov
push
leave
adc
mov
pop
test
inc
cmp
and
mov
add
and
cli
mov
test
push
push
jp
add
sub
std
add
mov
pop
inc
cmc
call
mov
push
into
add
stc
je
adc
and
loope
push
mov
mov
pop
and
fwait
jl
ljmp
adc
das
add
std
idiv
lret
ror
sbb
push
mov
imul
push
xor
cmc
xchg
push
cs
loopne
mov
jbe
jno
pop
pop
pop
and
sub
nop
mov
mov
xchg
mov
test
in
dec
cwtl
movsl
adc
add
xchg
pop
arpl
cmp
in
or
orb
push
pop
sti
cmp
jnp
test
adcb
ficomps
dec
cmp
mov
mulb
jne
add
cmpsb
jp
int3
and
arpl
pop
or
sahf
loopne
mov
cmp
sbb
rcrb
add
and
mov
adc
mov
pop
cmp
decl
int
add
jo
mov
add
xor
and
scas
fwait
add
adcb
mov
cmp
int3
aas
add
push
xor
lret
mov
filds
test
fidivrs
in
pop
add
cwtl
ret
cmp
gs
and
mov
int
in
outsb
add
aaa
cmp
scas
loop
loopne
jae
and
and
add
cltd
inc
and
sbb
cmpsb
sahf
loopne
dec
adc
add
fwait
add
inc
pop
xchg
in
mov
insl
pop
stc
nop
adc
loope
add
jecxz
arpl
in
pop
dec
mov
push
add
or
xor
rcrl
cmp
mov
loopne
popa
add
repnz
dec
pop
lea
movsl
adc
inc
lock
addb
mov
sub
jge
lahf
outsl
std
add
and
mov
aaa
dec
pop
imulb
out
add
cwtl
pop
push
jno
add
aam
aam
pop
mov
push
and
addl
dec
int3
stc
cmp
nop
lods
jg
cmpsl
bound
testb
sbb
pop
add
lret
add
jns
rorb
rcrl
cmp
add
pop
movsb
fsubr
in
insl
into
adc
adc
hlt
dec
jmp
jne
or
jge
jo
add
mov
lock
enter
sbb
inc
dec
cmp
jge
je
dec
leave
movb
push
cmp
clc
das
add
cmc
xchg
inc
or
mov
sbb
nop
loope
rcrl
xor
mov
adc
cmp
add
dec
mov
imull
sbb
lods
nop
sahf
add
mov
mov
jne
add
pop
push
pop
cli
stos
je
into
cmp
inc
xchg
or
and
dec
fwait
addb
add
xor
jmp
cmc
sub
addr16
add
or
add
stos
adc
loopne
incb
add
ret
cld
lret
outsb
mov
insl
sbb
pop
ja
mov
xacquire
dec
add
orl
and
inc
cmp
push
mov
and
push
je
nop
leave
repnz
mov
mov
sarb
lods
push
clc
add
pop
sbb
jae
insb
imul
in
mov
xor
push
sbb
mov
sbbl
inc
in
mov
fbstp
and
inc
xchg
add
mov
adcb
add
sbb
xor
add
ficoml
dec
in
add
push
into
int
pushf
adc
lcall
scas
dec
push
syscall
pusha
xchg
push
add
arpl
cmp
pop
add
fsubl
scas
cmp
loop
ds
mov
jmp
cmp
ficomps
arpl
lock
dec
repz
scas
xor
xchg
mov
sahf
mov
pop
lret
insb
inc
mov
jmp
sbb
cmpl
aas
and
jge
out
jb
add
mov
pop
lods
pop
cltd
add
addl
rorl
mov
adc
je
add
mov
ret
outsl
mov
loopne
cmp
mov
mov
mov
dec
add
les
adc
sub
xor
inc
lock
dec
push
push
movsb
inc
sbb
add
dec
cmc
sahf
dec
and
sub
in
mov
xorb
inc
mov
dec
dec
cli
push
cld
jmp
ror
test
aam
dec
and
insb
mov
fadds
in
lea
daa
mov
pop
cld
call
adc
sbb
lcall
in
sub
xchg
imulb
outsl
push
xlat
test
add
mov
cmpsb
inc
adc
mov
mov
fdivrs
lods
or
xor
and
push
lcall
stc
push
pusha
add
ss
and
add
pop
roll
popf
out
stos
aas
outsb
ficompl
mov
jne
lret
jno
xchg
add
sbb
test
hlt
or
cmp
addb
les
fidivl
or
adc
add
cmp
inc
add
inc
iret
sub
movsb
and
pop
mov
ss
xorb
xor
add
imul
adc
lret
testb
jns
pusha
cmp
sub
and
xchg
outsl
sub
testb
fidivl
pop
pop
push
cmp
icebp
add
push
adc
sub
xchg
xor
fstp
rep
sahf
add
dec
out
ret
or
add
sbb
hlt
xchg
add
mov
sbb
mov
dec
bound
repnz
cli
adc
and
pop
sub
push
and
adc
sub
add
call
ret
xchg
in
xor
ljmp
jg
in
and
lea
push
add
xchg
xlat
xchg
inc
je
add
mov
fcmovnb
add
xchg
add
mov
and
xchg
cli
adc
inc
pop
add
mov
idiv
inc
add
outsl
das
jo
jo
pop
xchg
pop
sub
outsb
jne
add
pop
cltd
inc
jbe
pusha
pop
add
push
bound
neg
dec
outsl
aas
movsl
test
shll
add
pop
sbb
add
mov
xor
and
dec
mov
cmp
lds
add
xor
shlb
call
pop
lret
fwait
jae
addb
jno
inc
enter
pushl
or
add
movb
mov
or
sub
dec
and
cmp
add
jg
push
mov
mov
sahf
add
xchg
in
push
out
add
icebp
mov
fildll
js
fs
je
or
jno
cmp
add
adc
xchg
add
arpl
loope
cwtl
or
push
pusha
clc
ja
insl
sub
into
inc
sub
rcr
les
xor
lds
sbb
fldt
add
jo
call
pop
shll
shll
add
cwtl
sbbb
inc
add
cmp
push
out
adc
push
dec
add
test
jp
add
push
pusha
push
sbb
sub
test
jno
mov
int
addb
add
adc
mov
adc
push
inc
dec
mov
orb
out
jbe
jmp
add
add
fdivs
mov
stos
add
aas
out
pop
jge
fmull
push
fdivs
lea
sub
adc
xchg
in
mov
cmp
sub
cmp
outsb
and
add
dec
in
add
jnp
data16
add
insl
lret
xor
push
ficomps
sub
subb
fsts
adc
add
repz
cmp
sub
sbb
in
ss
push
add
cmp
cmp
jne
in
setb
in
lcall
add
scas
scas
adc
mov
mov
movb
aam
inc
adc
out
mov
add
add
mov
cmp
cmp
fsts
pop
jb
add
nop
and
add
jge
or
lahf
add
out
or
pop
roll
pop
bnd
push
xorb
imul
gs
or
pop
in
pop
pop
inc
or
pop
dec
add
dec
out
test
das
mov
jns
mov
mov
dec
sarb
mov
xchg
ret
jl
int3
fs
es
pop
add
and
scas
into
add
or
sub
mov
out
aaa
inc
rol
in
subl
movsb
push
push
cmp
adc
mov
loopne
pop
and
idivb
fs
stos
dec
or
aas
lret
and
fstl
pcmpgtb
xor
inc
add
sar
shll
add
pop
push
sbb
pop
lods
dec
inc
stos
aaa
shrb
add
call
shlb
fisttpl
fnstcw
int
xchg
xchg
movsl
out
scas
xchg
les
scas
xchg
xlat
pop
test
mov
insl
cmp
out
inc
mov
add
int3
cmp
push
shl
jl
ljmp
jge
jle
hlt
and
pop
sbb
cmc
test
mov
or
lret
cmp
pop
popa
stos
imul
and
mov
xchg
push
cmp
add
je
out
cmp
add
scas
mov
xchg
loopne
sahf
or
mov
inc
push
add
push
jmp
in
mov
add
repz
lods
leave
xorl
xor
dec
pop
rolb
jne
jo
or
das
in
jge
jecxz
and
mov
push
pop
mov
push
and
fs
rcll
sbb
cwtl
inc
add
sub
xor
add
dec
nop
xor
popa
decb
sarb
ljmp
lods
iret
out
dec
lock
into
les
scas
add
mov
vmwrite
adc
add
or
add
lret
adc
add
sbb
shlb
ret
pop
loopne
pop
or
push
scas
dec
mov
mov
jno
add
mov
sarb
inc
out
push
fwait
sbb
or
push
mov
jp
inc
pop
lock
xlat
std
out
pop
cmp
pop
or
or
mov
fisubl
sbb
add
enter
test
stc
xchg
push
add
in
std
sub
xchg
dec
sub
pop
cmc
or
roll
lods
arpl
stc
fiadds
addb
push
add
and
rcl
mov
std
aas
test
push
sub
or
mov
add
data16
addl
add
cld
stos
ds
mov
jbe
shlb
in
call
negb
adc
int
les
std
push
fstl
sub
rolb
cmp
outsl
xor
clc
mov
sub
ss
lock
testb
bound
aas
mov
and
insb
add
inc
dec
stos
hlt
mov
add
add
test
inc
add
lret
push
and
fstpl
and
int
pop
add
pop
imul
and
pop
mov
add
cmpb
add
lret
hlt
or
arpl
sarb
pop
adc
pop
fidivs
add
cld
pop
sub
xchg
adc
mov
addb
cmp
jmp
cli
push
aas
push
out
xchg
or
ss
add
mov
add
push
or
mov
rol
or
imul
mov
shlb
shl
je
lret
xor
xchg
adc
subb
popa
and
or
add
pop
fs
xchg
and
inc
xchg
xor
dec
sub
adc
fwait
movsb
add
xchg
cmp
jns
cmpxchg
nop
and
mov
push
add
sbb
mov
lock
sbb
or
mov
and
inc
pop
cli
bound
xchg
mov
stos
pop
push
adc
mov
mov
jbe
jge
clc
ds
add
lret
out
push
pop
jne
add
lahf
push
popa
push
add
add
mov
faddl
push
and
in
add
icebp
arpl
add
add
cmpsb
add
sub
inc
sub
int3
testl
ljmp
out
mov
addb
stc
and
cwtl
sbb
cmpsb
pop
aad
fidivl
jns
call
fcmovnb
cs
xor
add
pop
loopne
lret
fidivs
push
fs
add
in
leave
sbb
add
inc
ret
faddl
cmp
test
cs
mov
add
add
jbe
add
mov
mov
xchg
ljmp
adc
rcll
inc
push
or
pop
sbbb
push
xor
ja
in
mov
rolb
fs
mov
lea
jne
mov
testb
ds
mov
fsubr
clc
lcall
jge
mov
push
stos
push
rorb
gs
pop
call
add
shll
filds
mov
fstl
popa
aas
xor
sub
pop
mov
dec
cmpsb
cmc
add
xchg
mov
dec
call
xchg
loope
fcomp
movsl
lds
add
pop
add
pop
or
jae
aam
divl
sbb
add
call
shlb
add
fwait
iret
aad
mov
add
sub
add
femms
push
repnz
and
stos
lods
add
or
jle
dec
mov
fmull
mov
ss
adc
lds
push
dec
in
outsl
daa
xor
xor
jb
loope
das
dec
add
iret
mov
rolb
add
mov
lock
jnp
or
repnz
add
jmp
roll
movsl
add
mov
add
mov
add
xchg
sbb
adc
aam
rolb
stc
jo
sub
out
jg
push
hlt
data16
out
ret
ret
je
clc
insl
cpuid
add
aad
push
or
fnstsw
daa
add
clc
out
loop
imul
cmc
push
pop
ds
dec
add
xchg
sbb
jge
fistpll
push
jp
call
and
or
add
hlt
lock
adc
orl
sbb
inc
bound
imul
add
adc
lock
aam
xchg
sarl
aas
cld
pop
inc
push
and
in
shll
mov
add
negb
out
jl
jb
or
push
dec
add
sbb
scas
lock
in
aad
lods
ja
orl
movsb
mov
pop
push
out
stc
sbb
enter
ficomps
add
jle
push
stos
mov
add
ljmp
mov
add
pop
mov
test
push
jo
icebp
cs
push
inc
inc
xchg
loopne
int
addb
jl
mov
insb
push
aad
scas
gs
pop
xchg
call
mov
push
addb
push
mov
and
add
adc
cmpsb
leave
mov
inc
sbb
jbe
add
add
popa
jle
pop
jns
and
adc
add
mov
aad
jns
xchg
add
jmp
inc
arpl
sub
add
sbb
inc
xchg
sub
push
add
mov
call
push
scas
xchg
aas
and
daa
inc
imulb
add
stos
lock
adc
pop
addl
lahf
xchg
xchg
jo
sbb
mov
push
sub
rolb
dec
add
adc
subb
les
aam
add
cmp
rcrl
popa
cmpsl
pop
pusha
loope
lock
nop
je
push
mov
fsubp
insb
loopne
or
lret
add
movsl
bound
fwait
js
inc
add
shl
jbe
jmp
inc
xor
jae
loope
test
addr16
jo
ja
and
inc
call
adc
sahf
stos
jo
jo
mov
sub
adc
add
mov
leave
push
add
das
xchg
and
adcb
jmp
dec
sub
nop
mov
or
dec
bound
push
jbe
xchg
add
pop
cmp
jnp
cs
cmp
and
popf
add
cwtl
fidivrl
xchg
add
outsb
mov
cmp
fildl
push
iret
mov
push
stos
fs
and
push
dec
and
mov
lds
enter
stos
sarb
int
ret
sub
jmp
mov
and
jge
and
inc
dec
gs
outsl
test
add
mov
sbb
push
test
insb
cmp
mov
inc
js
mov
nop
imul
xor
adc
hlt
mov
add
popa
pushf
mov
lcall
adc
and
or
mov
xor
out
add
call
cmpl
xchg
sahf
test
sbb
and
sub
xor
add
xchg
orb
push
and
or
es
pop
xor
clc
mov
cmp
fdivrs
and
jne
sub
lods
orb
xor
repnz
xor
mov
add
scas
cmp
jecxz
cmp
mov
testl
adc
jmp
push
cmpsb
cmp
or
mov
inc
ret
popl
xor
and
cmp
jmp
clc
cmpsl
and
rorl
push
fs
les
or
lock
stc
cmp
lret
add
mov
fldl
bound
mov
and
mov
loope
clc
add
cs
add
and
add
inc
or
pop
in
aam
fnstcw
push
adc
add
pop
lret
test
clc
adc
lods
cmp
or
xor
das
add
push
mov
xchg
mov
adc
sub
add
mov
cmpsb
fisttpl
add
orb
pop
lcall
sbbb
jns
add
arpl
jp
push
mov
adc
push
add
inc
sbb
add
ss
jg
xor
sbb
push
add
mull
imul
sbb
mov
or
bound
add
and
shlb
or
fdivl
enter
lret
pop
mov
test
outsb
pusha
or
call
faddl
and
add
insb
inc
in
add
fcomi
xchg
out
push
push
movsl
mov
pop
xchg
and
push
push
orb
mov
lock
mov
cli
cmp
fstpl
add
stc
sbb
mov
sub
in
push
shlb
xchg
hlt
or
cmp
add
cld
jno
xchg
jae
pusha
push
mov
push
repnz
cwtl
jnp
adc
and
enter
pop
xchg
xor
shlb
bound
add
or
lock
pop
push
pop
clc
adc
pushf
add
add
pusha
pop
aad
gs
or
add
pop
add
int
add
scas
cmc
pop
push
jno
dec
add
push
push
add
mov
call
add
mov
lds
push
stos
insb
shlb
dec
out
cmpb
mov
adc
add
push
popf
testl
mov
sbb
push
pusha
sbb
lods
call
in
rorb
aaa
cmp
sbb
push
shlb
lea
sub
push
dec
ljmp
lcall
mov
je
add
bnd
cltd
int3
add
rolb
and
inc
aam
pop
jmp
xor
rcr
out
jp
or
jne
xchg
push
pop
idiv
adc
in
mov
pop
xchg
scas
cmpsl
or
scas
adc
push
fs
ret
mov
add
cmc
jp
mov
cmp
sti
cld
adc
add
push
incb
out
loopne
add
mov
push
ret
sahf
leave
mov
je
lods
sbb
mov
shlb
addb
mov
mov
mov
xchg
push
add
xchg
cmp
add
jl
mov
fists
xchg
dec
xchg
test
cmp
fadds
movhps
in
mov
popf
cmpsb
mov
daa
pop
xchg
insl
test
dec
xlat
orb
mov
add
cmc
es
pusha
mov
mov
xchg
sbb
jle
ret
out
out
imul
add
mov
push
nop
add
xor
clc
dec
fwait
inc
xor
xchg
loop
into
push
sbb
push
xor
jnp
call
sahf
lock
cmc
add
stc
pop
xorb
mov
loope
inc
in
sbb
pop
test
and
inc
adc
pushf
add
sub
or
cli
jmp
rorb
jge
scas
loopne
roll
push
popa
cmp
add
adc
icebp
push
xchg
add
sti
pusha
jnp
add
bound
jecxz
mov
or
push
stos
xchg
dec
add
add
cmc
jnp
jnp
scas
add
cmpsb
jmp
iret
sub
xchg
adc
bound
stos
sub
lds
pop
lock
xlat
mov
inc
mov
xor
xor
stos
mov
jnp
pushf
ret
fmuls
pop
push
cltd
lret
mov
push
addr16
jl
sub
mov
dec
pusha
ja
repnz
mov
pop
cmp
push
int3
xor
cmp
ss
pushf
push
add
add
dec
sub
push
or
xchg
jl
jae
add
lahf
mov
inc
dec
inc
cmp
orl
cmp
xchg
mov
rcrb
add
fidivrs
jae
ja
data16
sub
pusha
push
adc
iret
out
adc
mov
test
and
push
je
jns
popa
rcr
movsb
add
and
hlt
jge
lahf
xor
mov
ljmp
and
lret
jnp
dec
scas
les
cli
xlat
inc
pop
pop
mov
jmp
hlt
sub
adc
outsl
mov
pop
dec
or
inc
js
sbbb
and
lods
push
idiv
jnp
mov
add
pop
cmc
push
pop
mov
or
add
xchg
call
in
inc
jge
xchg
or
mov
cmpb
fs
movsl
xorb
cmp
dec
pusha
repnz
aam
push
sbb
rcr
xor
div
add
loope
popa
inc
lock
xchg
hlt
pop
rclb
ret
add
push
cmp
lret
movntq
test
and
pop
lahf
sbb
add
aas
mov
dec
and
xor
xchg
out
stc
xchg
jl
mov
cmp
pop
pop
or
jne
imul
push
xorl
rcl
xchg
scas
fistpll
add
aaa
lods
xlat
test
in
xchg
jne
xchg
sbb
clc
into
and
cld
pop
cmpsb
add
jb
push
pop
add
mov
rolb
jbe
cli
mov
xchg
bound
xchg
int3
xor
pusha
jns
add
cli
mov
addb
and
mov
dec
fsubrp
repnz
sub
dec
lods
popf
or
or
fs
fisttps
mov
pop
lahf
and
nop
mov
repz
and
jo
add
or
push
addl
ret
mov
pop
jmp
popa
pop
js
jo
popa
inc
xchg
loopne
lea
mov
or
xchg
adcb
inc
add
cld
mov
jns
imull
rcll
sarb
add
dec
jmp
cmc
addr16
out
mov
jb
ficoms
in
inc
mov
add
arpl
pop
add
iret
fiadds
jnp
gs
mov
pop
rolb
imul
mov
adc
jg
rcrb
je
pop
adc
inc
aam
andl
pusha
jb
adc
adc
ljmp
add
jmp
lret
add
addb
and
mov
or
dec
fistl
andb
mov
mov
jns
in
add
push
add
sbb
xor
pop
dec
xchg
push
cvtps2pi
jl
sbb
cmpsl
adc
inc
push
nop
or
mov
jle
push
push
jns
sub
subb
stos
jle
add
gs
mov
push
mov
pusha
out
add
idivb
das
jmp
sub
sub
lock
aam
stos
repz
fcmovu
shr
ja
les
punpckhbw
enter
enter
rolb
aam
mov
mov
sbb
adc
xchg
xchg
sub
dec
rolb
mov
gs
jle
or
jl
sbb
in
add
add
dec
xor
sub
dec
sub
nop
jno
dec
pop
sub
xchg
jae
shl
sbb
adc
cs
js
adc
and
repnz
jg
pop
mov
add
xor
lods
test
mov
cmp
mov
mov
pop
mov
mov
mov
movswl
dec
dec
and
xchg
push
dec
xlat
add
les
std
mov
fsub
sub
cs
nop
add
outsl
in
adc
cmp
mov
out
inc
fs
sub
lcall
jl
sbb
lds
cltd
nop
inc
aad
xchg
mov
adc
ror
push
adc
add
pop
dec
push
or
xor
mov
inc
fwait
mov
stc
jae
add
and
or
nop
std
push
icebp
or
mov
push
outsl
lock
jle
or
add
mov
mov
cmp
pop
push
cmp
aam
xchg
stos
jmp
out
jo
mov
loop
and
mov
jns
lret
arpl
out
add
sub
push
icebp
inc
dec
or
add
pop
jg
adc
push
jo
insl
addr16
not
add
pushf
int3
stos
lods
sub
push
add
ret
add
add
push
mov
push
in
sub
pusha
jnp
inc
loope
lea
xorb
iret
leave
dec
cmpb
das
pop
add
jmp
in
imul
add
push
or
inc
shlb
push
add
aas
adc
mov
xor
xor
adc
stos
add
aaa
test
aas
jno
sbb
sahf
jb
cmp
xlat
or
add
aas
push
add
fcmove
or
xchg
leave
popa
add
add
in
fs
ljmp
js
inc
mov
pop
jae
sbb
push
cwtl
enter
int3
xlat
ja
pop
xchg
pop
inc
rclb
adc
xchg
jge
add
shll
std
or
call
imul
xchg
xchg
std
inc
mov
mov
pushf
sub
outsb
loope
add
cmpsl
xor
add
out
xchg
mov
xchg
movsb
sbb
add
arpl
jnp
xor
lcall
in
enter
rcrb
add
jg
jns
inc
push
cmp
or
cwtl
mov
jl
or
jno
clc
mov
pop
lds
cld
arpl
jmp
add
enter
xchg
faddp
addr16
mov
out
add
mov
add
push
or
xor
lret
push
and
outsl
lea
jl
cmp
sbb
out
xchg
cld
add
cs
xchg
cmp
lret
or
cmc
add
cmovns
push
sub
adc
sub
cmc
leave
or
adc
pusha
inc
out
mov
jb
daa
cli
mov
addb
test
aam
and
dec
outsb
dec
add
and
cwtl
inc
push
cmp
pop
xor
loopne
dec
imul
test
clc
push
mov
addb
test
int3
add
cmc
dec
testl
test
imul
mov
push
mov
sbb
data16
add
fcmovne
adc
xchg
mov
cmp
add
adc
enter
adc
add
sub
add
jg
xchg
in
inc
sti
cwtl
xor
aas
mov
cmpsb
iret
mov
aad
xor
push
add
pop
aam
add
inc
es
imul
dec
sbb
pop
push
cld
ds
pop
mov
dec
cmpl
lock
adc
jbe
sub
mov
mov
sbb
shrb
push
xchg
pop
cwtl
push
push
test
cmpsb
jle
aam
lldt
sub
mov
fdivs
add
popf
movsb
add
lcall
stos
pop
inc
add
mov
outsl
gs
cmp
clc
hlt
fs
add
es
flds
stc
and
add
mov
jle
adc
push
sub
lahf
in
inc
ljmp
sbb
mov
or
dec
dec
lods
jb
add
mov
sub
lahf
test
in
test
adc
out
ja
addr16
mov
add
sti
mov
cmp
jl
push
loopne
test
pop
xor
sbb
dec
loop
mov
adc
cmovno
jbe
movsw
aas
mov
inc
pop
push
lock
es
fnstsw
jb
mov
inc
rolb
fldenv
pop
test
es
inc
scas
push
and
sarb
mov
arpl
pop
outsl
inc
add
call
sbb
dec
cmp
stc
xor
mov
add
xorb
out
int
rolb
add
iret
and
add
loope
incb
out
aam
loop
sbb
orb
mov
scas
pop
iret
sub
xor
js
mov
dec
and
cli
mov
incl
mov
dec
adc
xor
push
sbb
and
call
pop
lret
add
lds
xchg
sahf
push
adc
and
dec
dec
lcall
add
add
leave
adc
fwait
sbb
iret
push
xchg
rclb
je
xchg
adc
mov
clc
push
add
push
mov
sub
insb
mov
clc
movsl
pop
aad
or
pop
subl
jo
gs
push
or
push
and
or
rorl
push
insb
inc
insb
clc
movl
fisubrl
and
cmp
dec
scas
sub
lock
xchg
jge
dec
addb
loop
push
fcomps
and
stc
add
imul
add
pusha
xchg
ds
cmpb
or
pop
mov
cmc
sar
add
jl
mov
xlat
adc
pop
es
push
cmp
push
and
add
push
push
mov
hlt
jne
sti
ljmp
sub
inc
add
xor
sbbb
push
adc
mov
or
push
cmp
add
xor
pop
lods
push
cmp
movsl
add
sbb
fwait
andl
pop
movsb
add
popa
inc
lret
dec
push
mov
mov
movsl
mov
imul
cltd
mov
fcomps
stos
je
subb
add
outsl
add
imul
lds
cmp
out
dec
in
jbe
push
sbb
cld
repnz
xchg
js
add
or
push
or
xchg
aas
fcmovnb
add
inc
cld
add
cmp
inc
mov
cmp
fimuls
mov
push
push
not
or
stos
fdivp
and
inc
jae
mov
out
fisubs
aam
stos
add
dec
dec
les
aas
cmp
fdiv
leave
jo
inc
out
faddl
xor
or
push
push
adc
sub
lcall
push
push
cmp
pop
cwtl
adc
cmp
rolb
jbe
dec
fisttpll
jp
cmp
je
push
add
les
cltd
add
push
or
add
enter
out
push
add
push
xor
add
je
dec
test
adc
sti
or
sub
jl
lahf
and
and
add
jns
stos
push
repz
add
fdivl
adc
stos
outsl
jbe
fcomps
push
idivb
push
and
add
pushf
je
dec
pop
and
repnz
js
out
fwait
pusha
iret
or
jns
mov
cli
and
paddq
sbb
mov
sti
daa
cmp
faddl
ljmp
fwait
add
adc
iret
push
xchg
outsb
jle
aaa
jmp
loop
add
sti
jae
add
add
jge
or
xor
rcr
adc
imul
lret
js
aad
les
add
add
add
push
add
call
add
mov
cmp
lea
in
sub
sbb
add
fdivrs
int
jae
jl
inc
add
cld
lods
add
int
insb
or
sbbl
and
lret
xchg
lds
fsubr
jnp,pt
cmp
add
fimull
pusha
push
std
test
bound
adc
add
leave
xor
push
inc
pop
mov
add
jne
jp
incl
mov
sbb
cltd
stos
mov
inc
and
scas
in
push
testb
add
mov
fstpt
and
mov
mov
push
add
pop
xchg
sbb
add
adc
add
outsb
ja
fmuls
add
lret
aad
add
push
test
sbb
dec
cmpb
test
inc
sub
push
push
adc
push
dec
mov
sub
add
das
xor
xchg
pop
adc
add
daa
lcall
add
sub
xor
cld
daa
sbb
xchg
push
and
popf
inc
adc
fadds
push
adc
push
clc
scas
add
das
mov
jae
pusha
add
mov
pop
imull
call
lods
loopne
xor
test
and
dec
cmp
push
push
mov
js
stc
repz
fsubrs
popf
mov
lret
adcb
daa
pop
jl
lods
inc
inc
xchg
pop
or
std
lret
ljmp
pop
or
sbb
mov
dec
cs
lahf
lock
adc
add
repnz
sub
or
and
or
inc
insb
adcl
mov
jno
packsswb
andb
out
imul
mov
test
add
sti
and
xchg
imul
hlt
pop
add
cmp
int3
and
or
or
sbb
mov
xor
add
imul
sbbb
cmp
andb
jb
insb
jae
outsl
push
dec
sbb
push
cmp
add
cs
ss
sub
cmc
or
jle
jae
insb
add
mov
js
and
int3
mov
jns
pop
or
fcoml
out
add
insl
sbb
hlt
incl
loopne
outsl
jo
jp
add
pop
push
jbe
add
daa
push
mov
cmp
inc
aaa
std
call
int3
ss
mov
cmpsl
sti
adc
into
push
add
xor
mov
add
hlt
adc
sar
mov
add
mov
add
aam
push
lcall
xor
pushf
enter
mov
or
fildl
es
jp,pn
inc
add
mov
and
fnstsw
mov
dec
adc
scas
add
sub
xchg
mov
pop
pop
mov
clc
ss
xlat
pop
pop
int3
adc
pop
dec
fidivl
xchg
andb
adc
cmp
test
movsl
iret
je
mov
lcall
pop
add
pop
push
addb
into
add
pusha
aas
adc
inc
iret
arpl
repz
push
aas
push
stos
sub
test
push
es
gs
fwait
ret
faddl
push
jge
or
xor
jle
cmpsl
mov
add
jmp
sbb
and
pop
cmpsb
bnd
add
loop
sti
aad
pop
cwtl
pop
hlt
cli
add
pop
jae
bound
mov
dec
enter
mov
cld
sub
fdivrl
pop
push
addb
js
jbe
cltd
push
cmp
xchg
dec
testb
hlt
dec
or
adc
fimuls
hlt
mov
xor
stc
scas
sbb
pop
mov
push
push
clc
jl
push
mov
call
jne
out
sub
add
push
pusha
jae
in
sub
mov
fstpt
inc
mov
ljmp
pusha
ss
popa
test
out
stos
shl
jl
call
out
push
add
call
dec
adc
jge
push
int3
add
bound
push
sub
scas
adc
ja
inc
or
out
pop
iret
loopne
mov
jno
dec
sbb
mov
jp
lods
mov
pop
adc
dec
adc
inc
sbb
jno
xor
mov
pop
push
sbbl
arpl
adc
adc
jge
push
xchg
xchg
dec
clc
jecxz
sti
in
adc
add
add
sub
popa
and
hlt
adc
loopne
cmp
or
ret
sbb
pop
adc
xchg
add
rcr
mov
add
stos
imul
add
addr16
push
mov
les
add
and
jmp
push
lods
sbb
mov
add
or
mov
mov
test
jge
fs
vprotw
shlb
enter
loopne
call
int
fcoml
pop
inc
leave
jae
je
jmp
dec
push
add
sti
jp
mov
mov
call
add
imul
int
enter
je
pop
inc
mov
inc
add
loope
arpl
pop
popl
jbe
lea
or
cmp
mov
mov
sbb
or
addl
pop
mov
outsl
mov
add
xor
add
mov
jb
add
cmc
sbb
inc
or
inc
adc
push
adc
pop
test
add
roll
js
scas
aaa
mov
adc
xchg
test
jo
mov
pop
mov
add
cld
data16
sbb
sub
xor
mov
xor
ficoms
push
mov
and
add
jns
jl
rcl
iret
sbb
jg
jg
nop
inc
js
push
xchg
or
ja
pop
mov
inc
mov
cmp
ss
jne
rolb
adc
xchg
xor
sbbl
push
mov
ret
fwait
adc
lret
push
shlb
and
ja
sti
add
add
dec
cmp
divl
shrl
mov
sti
lret
pop
dec
mov
pop
lods
inc
ds
mov
ja
or
push
fcoms
sbb
add
add
sti
cmpb
test
faddl
dec
pop
lcall
mov
ret
xlat
mov
in
ret
rcrb
or
pop
jle
lret
jo
mov
adc
lds
mov
incb
mov
or
stc
sbb
pandn
test
jp
in
cmc
das
add
sbbl
or
sbb
add
inc
push
movsb
add
and
fcompl
lret
push
jbe
add
in
add
xorl
dec
mov
jnp
pop
dec
sbb
push
mov
jo
jle
and
sarb
dec
and
cmpl
pop
sub
leave
add
dec
movsl
jno
mov
sti
and
rolb
jns
aas
ja
je
and
inc
cld
add
adc
cwtl
fnstenv
dec
or
sub
jns
push
add
push
add
sub
add
sbb
mov
xchg
mov
fdiv
add
das
shr
jb
adc
test
add
jmp
std
lret
xor
jo
decl
xor
add
setno
sarl
xor
pop
or
or
mov
push
movsl
unpckhps
insl
shll
sbb
sub
mov
push
mov
cmp
insl
jecxz
add
jns
push
popa
add
jmp
push
xchg
mov
imul
js
xchg
test
dec
add
bound
cmp
adc
mov
or
jge
filds
xor
push
sub
jb
sahf
hlt
mov
add
daa
in
lret
push
adc
jp
cli
jl
andb
fsts
xor
lock
ja
add
mov
ljmp
or
sbb
push
shlb
jnp
loopne
lods
mov
jp
ja
mov
pusha
or
repnz
test
cmc
int3
add
sub
mov
sbb
sub
sahf
enter
or
mov
das
sbb
cmp
mov
jae
push
pop
arpl
test
push
add
add
daa
push
pop
aas
aam
int3
add
loopne
sbb
add
adc
cld
jmp
out
mov
jp
imul
adc
enter
fucomp
add
mov
xchg
shrl
sbb
ret
icebp
add
inc
xchg
cmp
cmp
xlat
xor
mov
xor
fs
add
inc
pop
sete
and
js
add
orb
dec
scas
jne
inc
fcoml
shll
xor
add
fstps
sbb
std
mov
add
fnstcw
jnp
in
aam
sbb
mov
mov
or
mov
mov
push
lret
popa
scas
mov
in
subb
lods
or
adc
movntps
add
add
call
fld
clc
in
dec
out
sbb
mov
add
mov
std
mov
rclb
cmp
add
pushl
mov
repnz
mov
arpl
js
mov
mov
stos
insl
dec
pusha
lock
add
sbb
jo
cld
pop
xchg
jbe
push
jbe
or
mov
out
dec
add
inc
cmp
add
xor
out
test
lret
pop
ror
dec
sbb
add
inc
push
mov
ror
and
pop
xchg
sub
iret
rol
pop
in
add
insl
pop
push
data16
test
cmp
cmpsb
sbb
out
sbb
leave
push
stos
nop
sbb
mov
jno
fmull
inc
mov
enter
push
movsb
jmp
or
pusha
enter
mov
sub
out
pop
js
xor
adc
fsubs
add
and
dec
or
loopne
or
xor
jmp
pop
shlb
xchg
sbb
push
adc
adc
notl
pop
mov
vmwrite
stos
inc
push
lret
add
or
jg
insb
pusha
add
jle
pusha
jns
fwait
loopne
aaa
add
dec
xor
push
xchg
push
das
mov
aam
cwtl
xchg
pop
aas
cld
add
mov
in
fmuls
lahf
and
add
pop
inc
mov
enter
mov
cmp
jae
add
adcb
inc
int3
sbb
sbb
mov
rolb
push
loop
rcrl
arpl
insl
flds
adc
clc
pop
jns
rcrb
pop
lret
inc
mov
xor
adcb
outsl
inc
pop
add
or
mov
xchg
in
fstpl
bound
loopne
mov
ret
lahf
dec
int3
adc
inc
jne
jl
and
fwait
adcl
sbb
xor
add
push
pause
jno
adc
fcoms
fildll
jns
add
mov
sub
repz
jb
js
sub
or
add
adc
daa
mov
cmp
pop
fstpl
add
leave
dec
ljmp
test
and
lock
stos
jmp
fucomp
or
jb
cmp
out
in
loopne
pop
mov
add
mov
aam
imul
or
ljmp
sbb
add
add
addb
adc
mov
stos
and
addb
aas
sahf
xor
ret
gs
pop
lahf
pop
mov
mov
inc
add
sbb
mov
dec
jns
push
enter
cmpsb
xor
mulb
mov
jecxz
subb
or
mov
add
sbb
add
lcall
add
cmp
icebp
push
xchg
arpl
add
mov
cli
mov
pop
push
inc
or
adc
enter
add
push
inc
lcall
cmpsl
cmp
dec
pop
pop
mov
loopne
test
outsb
negb
adc
test
mov
xor
add
xor
fcmovnb
adc
repz
inc
add
ss
cli
xor
cmp
test
add
es
cld
test
in
cwtl
push
cmp
rorl
mov
loopne
hlt
ret
pop
mov
push
add
ficompl
inc
lcall
pusha
mov
enter
pushf
add
jp
pop
cli
sbb
in
and
add
mov
out
xor
test
loope
pop
idivb
add
ror
stos
jecxz
lock
packuswb
and
add
add
or
add
inc
fwait
in
inc
xchg
js
jle
add
jae
inc
or
mov
fisttpl
ds
mov
fistl
loopne
or
ljmp
xchg
mov
mov
arpl
jl
push
inc
adc
lock
jns
and
jo
stos
mov
cmpsb
mov
pop
in
adc
setle
xchg
add
lea
in
cmpsb
sbb
dec
in
sub
mov
lea
mov
nop
addb
add
xor
add
adc
test
sub
adc
daa
add
push
lods
int
dec
shll
cwtl
or
mov
or
xchg
movsb
add
mov
inc
pop
cmp
xchg
push
sti
movsl
pop
or
cmc
sub
sbb
mov
inc
push
xchg
fidivrl
add
mov
add
or
roll
mov
and
jb
add
ffreep
add
lea
pop
xchg
aad
enter
popf
cmp
push
mov
mov
and
test
out
xchg
add
jne
pop
mov
in
dec
dec
jbe
cmpb
lds
cmp
and
add
push
mov
mov
add
or
in
loope
fwait
add
insb
and
ret
push
add
pop
adc
mov
hlt
jg
add
outsb
and
pop
xlat
arpl
mov
jmp
mov
add
aad
adc
cmp
pop
int3
gs
pop
add
xchg
dec
jae
imul
lock
in
add
mov
in
push
add
push
out
xchg
cmc
mov
dec
lahf
popf
or
call
into
xchg
lods
lock
jbe
or
insl
xor
pusha
push
mov
pop
decl
xor
or
dec
popf
rcrb
pop
movsb
fldt
xor
lods
sub
jns
and
test
gs
add
adc
cmpsl
std
xchg
pop
out
or
push
push
notl
add
stos
jge
mov
out
sbb
or
test
daa
sub
mov
mov
add
mov
aas
scas
insb
and
incl
arpl
pushf
mov
rclb
mov
xor
popa
pop
xor
lods
dec
movsb
cwtl
aam
push
aas
or
rcl
lock
mov
mov
nop
in
or
pxor
push
cmp
jecxz
es
xchg
mov
dec
and
ja
repnz
adcl
arpl
mov
xor
or
mov
aas
mov
mov
inc
rclb
or
add
push
mov
add
mov
mov
sbb
xor
jp
or
mov
push
mov
repnz
cmp
lahf
inc
cmp
add
sub
pop
fsub
fcoml
xor
test
stos
push
call
cmpsb
js
call
aam
icebp
dec
addr16
or
mov
repnz
mov
pop
daa
push
add
out
dec
movsl
cmp
test
or
pop
hlt
xor
jl
adc
inc
mov
incl
in
leave
je
sarl
pop
jbe
or
scas
sbb
mov
fdivrl
out
jnp
mov
adc
nop
daa
lods
and
adc
les
pop
mov
pushf
test
std
lret
add
inc
out
sub
testb
push
xchg
pop
xlat
add
mov
xchg
data16
dec
aad
mov
and
shl
sub
popa
xchg
test
and
into
mov
xorb
in
mov
sub
push
bound
imul
leave
add
cmpsb
repnz
sahf
mov
lahf
xor
add
hlt
aam
lods
aaa
sbb
jne
inc
add
pop
pushf
cmp
push
hlt
mov
jbe
out
inc
push
xchg
aas
clc
lock
push
cli
add
add
xchg
add
pop
add
dec
out
outsl
jmp
jb
bsf
adc
lret
fmul
addb
mov
loopne
dec
pop
pop
push
es
cmpb
in
leave
fidivl
push
cmc
mov
and
imul
xchg
add
sar
mov
sub
push
std
xchg
push
fdivrl
xor
rcrb
add
xor
loop
jge
xchg
mov
lods
out
add
mov
pushf
cmp
sbb
xor
sbb
adc
add
mov
cmpl
add
add
or
enter
lahf
xchg
push
dec
mov
lock
pop
in
outsb
adc
add
dec
xor
jae
enter
aam
jle
adcb
inc
not
inc
pop
ret
sbb
add
xor
add
cs
xor
dec
add
enter
aam
mov
mov
cmp
in
sub
pop
test
testb
push
testl
mov
or
and
add
push
sub
incb
testb
sbb
lods
mov
dec
push
sub
cmc
aas
out
in
or
ss
xchg
pop
sbb
push
mov
icebp
add
movb
xchg
inc
xchg
ljmp
cmp
push
pop
mov
push
testb
ljmp
adc
cmpsb
movl
xchg
add
les
aas
flds
negl
or
roll
inc
int3
mov
mov
push
fwait
jl
sahf
dec
xchg
add
and
and
sbb
lods
fcoml
out
jp
js
pop
adc
adc
push
pop
mov
push
or
add
test
das
sbb
cli
jo
add
test
pop
pop
bound
pop
dec
jno
add
cmp
sbb
add
lea
or
add
sbb
loope
mov
mov
int
jo
cmpsb
cmc
arpl
add
mov
lret
popa
inc
shlb
fimull
leave
arpl
in
xor
movsl
pop
add
adc
arpl
pop
test
lahf
dec
adc
fs
movsl
sbb
dec
add
xchg
paddusw
add
rclb
add
stos
pop
ja
and
inc
push
out
cmp
push
inc
out
nop
mov
dec
stos
xchg
dec
lds
dec
push
xchg
push
repnz
setno
sub
jge
pushf
in
movsb
mov
add
push
mov
and
ret
in
ffree
setb
push
fwait
sbb
popa
nop
fmul
pop
add
addb
cmp
stc
movsl
dec
pop
movsb
push
pusha
pop
or
adc
add
jl
cmpsl
jge
pop
cld
jb
adc
or
add
repz
insl
aam
push
ljmp
add
push
in
loopne
add
lret
cmpsb
xchg
dec
clc
add
adc
sbb
cltd
mov
arpl
push
mov
mov
data16
push
popa
jb
cmp
xor
xorl
lods
or
push
subl
add
push
adc
adc
add
or
inc
mov
in
cmp
pop
mov
das
ljmp
xchg
pop
cld
dec
orb
mov
xchg
rolb
gs
jns
addr16
pop
dec
and
pop
pop
das
and
add
jns
inc
fsubs
mov
adc
fistl
data16
jl
add
adc
leave
cmp
mov
adc
mov
scas
in
outsl
or
popl
add
enter
test
pop
push
test
test
mov
loope
or
inc
or
and
test
xor
cmp
cmp
out
ret
push
xchg
mov
pop
fsts
notl
out
pop
lods
xchg
push
popl
add
aad
fdivrs
xchg
ss
inc
loope
ja
stc
les
incb
jge
rolb
mov
insl
fldenv
faddl
loop
mov
push
mov
hlt
pop
inc
xchg
mov
popa
iret
add
int
cwtl
push
sti
nop
int3
add
rcrb
fsubs
fstl
subl
sbb
add
cmpsl
pop
loopne
push
jae
je
int
inc
inc
sbb
aas
jl
xchg
inc
pop
pop
add
cmp
inc
inc
mov
sub
add
fisubl
loope
leave
pop
or
xchg
jecxz
call
sbb
cmc
ret
aaa
dec
pop
push
jno
dec
xchg
pusha
lock
int
subl
push
cmp
test
adc
xchg
xor
add
jmp
int
mov
add
movsl
push
adc
iret
push
push
sbb
icebp
add
fiadds
nop
push
mov
xchg
mov
cmp
add
addb
cmp
pop
xor
push
add
add
add
and
sub
das
cld
jne
out
aam
mov
das
loopne
mov
ss
sub
or
outsl
inc
xor
pop
xor
leave
xor
sbb
stos
xor
sub
test
add
dec
rorl
sub
add
add
adc
pop
test
outsl
pusha
xor
inc
add
scas
imul
inc
sahf
popf
xchg
das
add
repnz
xor
out
inc
inc
mov
sbb
sub
sub
mov
add
ja
fimuls
lock
repz
sbbl
loopne
jmp
cmp
addl
mov
push
mov
inc
imulb
iret
mov
mov
sub
std
ljmp
movsb
loop
cmp
repz
sbb
pop
movsb
and
cmp
push
lea
mov
adc
in
fadd
push
inc
inc
add
and
fdivrl
out
icebp
and
sbb
add
inc
mov
jae
mov
jnp
cmp
add
ss
pop
outsb
mov
pop
idivl
inc
clc
sbb
out
and
dec
pop
add
pop
sbb
nop
ljmp
jbe
loopne
pop
int3
or
call
loopne
out
js
or
daa
xor
inc
pop
adc
add
sub
sub
add
mov
pop
mov
xor
push
pop
rcrl
data16
rcrl
pop
add
adc
out
addb
cmp
loopne
mov
lods
imul
cmp
pop
movl
inc
push
mov
push
fnstsw
subl
shrl
xlat
or
jbe
test
or
sub
leave
js
jno
jo
add
pop
xchg
inc
cmp
dec
mov
arpl
in
aas
cmp
pop
inc
pop
pop
pop
jmp
fsub
mov
leave
cmp
xchg
gs
rolb
dec
call
sbb
mov
push
inc
je
sub
cltd
cmp
pop
addb
fwait
das
and
jp
add
fadd
lret
xchg
ja
cltd
push
sub
inc
cmp
dec
orb
testb
add
mov
or
imul
test
cmp
faddl
arpl
add
cmp
ret
inc
and
les
icebp
xchg
adc
adc
in
jb
movsl
add
sbbb
jo
out
rclb
jecxz
or
hlt
roll
loope
in
fadd
sahf
outsb
dec
xchg
inc
push
inc
std
nop
adc
test
aam
xor
pop
pcmpgtd
lods
add
add
pop
pop
add
pop
dec
cli
push
dec
mov
mov
inc
sub
pop
add
cmovb
mov
aad
and
push
repnz
addr16
xlat
xchg
fiaddl
mov
stc
fsubrs
and
insb
push
and
and
inc
stc
jb
dec
dec
loope
jne
int3
xor
add
ret
add
popf
add
in
incb
pop
adc
mov
add
out
je
jecxz
lret
rolb
add
fadds
push
sub
pop
or
dec
cld
xchg
sbb
xchg
jg
lcall
fdivrs
fstl
jl
test
adc
loope
dec
enter
cld
je
jno
adc
insl
iret
pop
mov
pop
jle
adc
jp
js
add
adc
aad
inc
mov
pop
pop
cmpsl
xchg
cld
mov
jecxz
lcall
lods
fildl
pop
insb
add
data16
test
in
lea
add
mov
push
dec
ljmp
popa
out
add
sub
das
cmpsb
jmp
enter
call
addl
cli
js
sub
xchg
leave
sub
dec
mov
fsubr
test
cmp
or
mov
cmp
cmpsb
ja
push
add
outsl
gs
mov
cmp
adcb
mov
subb
add
cmp
push
sub
jmp
add
push
clc
or
test
add
mov
sahf
mov
jnp
lods
repz
push
sarl
jmp
push
popf
clc
push
jae
add
or
add
sbb
lret
mov
pop
dec
test
addr16
or
pop
aam
cld
shlb
ret
mov
push
les
or
fistps
in
xchg
rol
jb
add
idiv
inc
mov
dec
les
ficompl
cmp
out
cmpsl
sbb
jle
mov
lds
jl
addl
cmp
add
inc
sub
pop
fsincos
punpckhwd
push
in
inc
ret
adc
and
sbb
sahf
cmpsb
pop
pop
inc
sub
xchg
add
ss
repnz
dec
out
pusha
jmp
add
dec
jnp
xchg
cmc
add
mov
shr
scas
nop
add
sti
cmp
jl
dec
mov
add
andb
and
or
shll
or
add
push
stc
clc
add
sarl
jae
mov
push
jbe
lret
jo
or
iret
in
mov
add
mov
ljmp
out
int3
push
push
mov
les
lcall
dec
je
adc
or
inc
mov
and
add
test
or
test
in
dec
mov
add
mov
cmpsb
fdivrl
in
mov
mov
inc
lods
jge
adc
repnz
add
popa
xor
aad
cmpsb
adcb
movsb
loop
adc
lods
mov
ljmp
adc
scas
out
or
arpl
mov
ror
dec
and
jo
mov
pusha
add
mov
mov
push
clc
add
mov
out
out
cmp
pop
fcoml
cmp
add
jne
insl
xchg
sbb
out
arpl
shlb
dec
pop
and
add
sarb
fcmovnb
nop
xchg
mov
add
insl
push
pop
mov
test
push
outsb
aaa
add
or
add
loopne
push
add
dec
out
pop
call
xchg
mov
imul
mov
jo
fildl
cmp
out
push
adc
pop
cli
xchg
dec
js
pop
mov
mov
mull
std
pop
cmp
add
dec
push
xchg
movsb
test
add
cmp
xchg
movsl
jnp
add
xor
xchg
or
lds
pop
mov
enter
lcall
sti
dec
dec
add
loopne
sub
cld
push
jns
pushf
mov
adc
mov
clc
in
and
repz
mov
pop
leave
in
test
rorl
sub
add
es
nop
add
push
push
adc
andl
bound
xchg
lret
add
jecxz
dec
nop
pop
adc
loopne
add
cmp
push
mov
orl
imul
mov
popa
mov
daa
in
cltd
mov
test
cld
push
pusha
sub
mov
jno
inc
or
lods
pop
cmp
nop
pop
cmpxchg
dec
mov
add
fldcw
mov
repnz
mov
pop
subb
add
les
dec
popf
lods
jno
imul
adc
bound
aaa
xor
cmp
jp
pop
sub
pop
adc
cmp
cmp
push
sbb
cmpsl
outsl
ret
popa
ror
leave
cmp
add
aam
pop
inc
std
jl
and
stos
jns
out
loopne
es
insb
add
sub
into
push
inc
enter
cwtl
mov
pop
sub
nop
aaa
dec
aam
adc
add
and
pop
add
sbb
sbb
add
js
and
adc
or
mov
mov
lahf
push
loop
sub
add
sub
and
fisttps
cmc
add
in
mov
dec
pop
int
shlb
push
xchg
movsb
outsl
push
mov
pop
cwtl
xchg
int
add
cs
push
inc
js
sbbb
mul
or
jae
add
andb
aas
movsb
inc
cmp
jne
clc
adc
jge
cmp
imul
adc
loopne
sub
sbb
pop
mov
adc
adc
movsb
enter
outsl
iret
xlat
sub
mov
int3
push
imul
add
pop
pop
xor
cltd
int3
and
push
sub
bnd
jae
outsb
lods
add
xlat
ret
sti
sahf
loope
mov
jg
add
dec
leave
lahf
int
add
aaa
in
loope
cmpsb
cmp
insl
sbb
sub
push
fstpt
adc
inc
sbb
jmp
xchg
in
cli
jnp
in
scas
mov
sub
std
sub
fmulp
add
in
lret
pop
je
sbb
xchg
jb
aas
fcomp
sahf
add
sub
add
push
stos
dec
xlat
pop
add
cmp
xor
clc
movsb
rcl
gs
mov
fnstenv
dec
fwait
push
mov
adc
fstl
add
jl
push
sbbb
fwait
mov
sub
mov
sbb
insb
ror
cmp
roll
push
adc
adc
or
je
pop
gs
pop
push
pop
push
sub
or
inc
ret
sub
lds
sbb
dec
and
and
in
loopne
add
mov
ret
jne
scas
xchg
cmp
pop
es
dec
enter
sub
and
bswap
sub
ja
pop
movsb
ja
dec
jo
lods
and
test
mov
add
jnp
in
and
lahf
rclb
pop
add
push
fimull
push
mov
lret
mov
lcall
sbb
pop
jnp
or
and
and
add
cli
sbb
mov
adc
xchg
ret
dec
and
pop
mov
mov
push
idivb
addr16
jb
in
imul
enter
idivl
rorl
xor
insl
inc
jmp
clc
xchg
lods
add
int3
jo
sbb
stc
adc
and
in
cmpb
xlat
cmp
mov
adc
cld
shlb
jp
jae
add
or
mov
push
and
ss
arpl
push
aad
push
mov
scas
jg
add
in
adc
inc
pop
lret
mov
jl
cmp
addb
xchg
xorl
out
sub
add
sti
xorl
ja
add
pushf
push
and
adcb
lock
subl
rorb
dec
cmp
add
jno
adc
add
mov
sbb
add
daa
mov
mov
and
shrb
pop
pop
jp
cmp
inc
sub
push
add
push
or
inc
lea
add
dec
dec
xchg
push
hlt
mov
or
xorb
mov
jno
push
adc
push
and
fdivrp
push
lea
inc
ljmp
add
sub
imul
jecxz
sub
jg
sahf
mov
in
insb
add
lock
sti
add
push
jmp
jl
sub
testb
sbb
adc
jo
lcall
dec
add
in
jb
push
hlt
out
push
sbb
add
and
ljmp
add
mov
add
mov
mov
nop
push
mov
pusha
leave
jge
jmp
into
lret
out
mov
call
mov
or
sbb
add
dec
inc
outsl
xchg
scas
in
add
mov
xor
add
adc
push
add
rolb
jp
popl
and
add
push
dec
aam
push
arpl
xlat
fbld
inc
iret
adc
aam
repz
jns
testb
add
pop
push
push
inc
in
ss
sub
lods
fcmovnbe
or
andl
in
jbe
adc
and
sti
pop
dec
shll
mov
lea
inc
push
inc
arpl
or
sub
jae
in
sbb
add
xchg
mov
xchg
out
adc
loope
test
inc
add
lods
push
mov
add
sahf
jo
push
cmp
adc
sbb
dec
sub
push
ds
nop
sbb
daa
in
mov
mov
pop
cs
push
push
xchg
adc
push
fdivrl
mov
add
je
sub
push
and
shrl
inc
clc
adc
pop
js
mov
mov
add
jg
scas
nop
mov
adc
mov
jns
push
mov
cmp
addb
mov
mov
pop
lods
call
inc
jno
and
mov
sub
add
ljmp
jb
or
and
cmp
jne
notb
and
mov
sbb
arpl
inc
jmp
adc
jo
inc
bound
pop
mov
pop
data16
or
cld
cmp
and
ljmp
pop
dec
xor
outsl
lds
add
popf
clc
imul
mov
imul
inc
adc
sub
daa
cmc
fcoms
pop
into
adc
out
scas
pop
pop
pop
shlb
lods
cmp
and
scas
cmp
jl
ja
mov
in
mov
sub
leave
cmp
call
movsb
push
pop
push
mov
cmp
or
test
cmp
addb
in
lods
cmp
xor
push
jo
rolb
add
inc
stc
std
dec
call
dec
pop
inc
imul
dec
xchg
mov
arpl
sbb
mov
cmc
adc
add
jge
es
jo
fadds
cmp
sub
add
sub
push
ret
pop
jns
popa
add
test
add
sub
jbe
or
ds
sbb
ret
clc
roll
test
cmp
dec
out
push
test
call
outsl
andb
nop
add
jg
jne
inc
movsb
es
xchg
sbb
iret
sbb
mov
jl
add
ds
addl
or
sub
add
nop
and
jae
cmp
mov
mov
aam
cmp
or
repz
pop
lock
mov
xor
cmp
pop
cld
add
scas
ljmp
shrl
cmp
add
cmpsl
rorb
scas
std
ds
mov
xchg
loop
aas
cmpsl
adc
lock
xor
add
push
pop
pop
fsubl
sbb
sub
jle
shlb
adc
cli
scas
repnz
fnstsw
xchg
pop
jb
sbbl
add
and
push
sbb
or
xchg
sub
xchg
add
push
mov
into
pop
mov
shll
or
mov
jne
sbb
mov
mov
jge
lock
pop
inc
in
fucom
add
inc
lret
pop
into
jo
adc
pop
add
loope
inc
out
or
loopne
jecxz
mov
imul
or
mov
adcb
push
sub
ret
scas
jnp
xchg
add
sub
insb
lods
xor
add
popf
ret
xor
push
cmp
mov
jnp
imul
and
add
cli
dec
incl
loopne
add
loop
nop
popf
mov
test
adc
lock
xor
test
and
pop
rcl
stc
ret
push
jae
mov
push
fistps
icebp
xchg
fxch
sub
sarl
cli
cld
neg
rcrb
in
aaa
dec
popf
out
subb
add
mov
pop
add
std
andl
mov
sbb
ret
jecxz
cwtl
pop
jbe
je
add
roll
cmp
push
imul
out
fs
jge
subl
and
mov
iret
jg
hlt
in
mov
adc
cli
mov
cltd
sub
rep
lahf
add
xchg
into
sti
add
push
in
aam
insb
loope
aas
or
sahf
pusha
lods
push
add
test
fwait
mov
push
sbb
or
push
mov
in
push
inc
inc
daa
pusha
loopne
ret
jl
xchg
hlt
xchg
lods
add
dec
or
add
scas
fisttps
push
fnstenv
xlat
nop
out
and
mov
add
push
or
add
andnps
xchg
mov
sbb
fwait
xor
es
les
add
pop
inc
xchg
popa
jl
mov
les
add
pop
ja
add
mov
mov
xor
cltd
add
sahf
sbb
sub
or
sub
pop
orl
add
out
sti
pop
cmpsl
call
push
sub
mov
and
xchg
add
push
cs
imul
sub
mov
push
add
lds
rolb
mov
fildl
outsb
and
insl
rolb
pop
cmp
inc
sbb
add
xchg
or
mov
add
out
into
adc
cs
std
jp
add
fbld
sub
jno
mov
pop
int
and
sbb
out
push
in
push
sbb
and
add
xorb
call
pmuludq
push
pop
mov
in
orb
sub
push
pop
xchg
push
sbb
popa
lods
jg
jbe
inc
and
pop
lret
orl
call
xorb
rcrb
and
sbb
test
dec
mov
outsl
mov
ficompl
sahf
roll
xchg
stos
jb
or
push
jns
test
add
stc
dec
lahf
enter
jg
add
aam
and
push
lret
mov
cmp
jbe
fadds
lock
sbb
sbb
cmpl
inc
faddl
jne
repnz
push
aas
call
out
adc
test
lahf
mov
mov
add
in
mov
cwtl
inc
clc
add
lret
add
or
add
dec
lds
data16
outsl
cmc
mov
out
sbb
sbb
adc
sarb
xor
mov
and
cmpsb
popa
cmovno
adc
mov
nop
mov
sub
cmpb
adc
loope
fsubrl
mov
lret
inc
hlt
out
ret
add
aad
popf
aas
push
and
sbb
adc
xor
cmc
ss
loop
add
xchg
bound
add
js
addr16
lret
sarl
xchg
xchg
stos
dec
jg
sbb
inc
mov
iret
xor
cmpsb
int
sub
inc
sub
test
cmc
lret
loopne
data16
lock
mov
ja
jl
xor
pushf
dec
aam
pop
sbb
dec
out
and
faddl
add
mov
dec
add
jno
mov
daa
or
fistl
add
stos
cmp
inc
push
test
pop
push
rclb
mov
test
std
pusha
xor
dec
mov
bound
jge
lods
and
in
cmp
push
out
movsb
xchg
pop
inc
daa
and
arpl
pop
dec
push
aam
xchg
roll
xlat
sti
repnz
mov
and
inc
mulb
pop
outsb
pushf
inc
shll
fsubp
inc
xor
xchg
test
xchg
ds
in
dec
lahf
in
or
jl
adc
mov
cmpsb
je
mov
inc
or
cmp
add
ss
jbe
arpl
mov
sub
jno
cmp
cmpsb
nop
dec
add
repz
sahf
lds
shlb
and
mov
clc
jb
cld
push
mov
imul
or
mov
add
das
push
popf
add
push
incb
or
mov
repnz
sub
sbb
add
addr16
es
xor
repz
pop
fsubs
push
xchg
lahf
dec
in
cmp
lret
add
dec
daa
dec
lcall
xchg
add
push
cltd
jb
movsb
lret
add
push
sbb
les
in
add
and
repz
pop
add
aam
sti
inc
das
push
in
add
push
push
les
rolb
nop
cmp
test
push
and
pop
sti
mov
jp
gs
loopne
hlt
ljmp
test
add
mov
jo
out
lock
pop
cmpsb
adc
mov
cmp
dec
and
push
add
pusha
jge
push
xchg
je
aas
int3
nop
pop
xorl
lcall
gs
sub
testl
dec
test
mov
mov
mov
mov
rcrl
inc
sbb
lcall
add
push
stc
adc
adc
add
outsb
outsl
cmpsb
fistps
seto
mov
add
in
pop
push
xchg
gs
push
pusha
pop
es
leave
mov
inc
aad
or
sbb
adcb
out
adc
addb
movq
pusha
mov
loope
pop
add
mov
mov
clc
arpl
ja
add
lahf
packuswb
cmp
fstpt
jmp
shr
ljmp
xchg
jns
bound
addr16
in
jne
sub
iret
aad
jmp
or
aaa
xor
mov
xchg
je
rclb
add
iret
cltd
add
out
loop
popa
inc
add
push
or
add
addb
es
mov
loopne
or
sbb
lds
add
js
pop
sbb
mov
xchg
and
cmp
add
or
sbb
add
pop
jecxz
rclb
add
jb
out
lock
int3
jp
and
mov
sub
jae
push
add
out
fidivrl
sub
xor
xchg
mov
sarb
xchg
add
cmpsl
iret
push
adc
adc
adc
and
jns
add
sub
into
out
outsb
inc
or
mov
movsl
mov
ret
inc
nop
mov
dec
and
repnz
add
jbe
push
int
cmp
or
adc
sub
cld
inc
pushf
lret
or
dec
mov
loop
rol
pusha
add
dec
mov
cld
aad
add
cmpsb
jmp
insb
inc
and
sbbl
add
movl
dec
add
adc
add
inc
fisttpll
xchg
call
xchg
ljmp
cmp
sub
pop
repz
lcall
pop
out
jl
shrl
inc
jae
cld
lret
xlat
add
repz
adc
mov
call
mov
mov
xor
mov
pop
ja,pt
pop
lcall
loope
pusha
inc
sbb
mov
cmp
adc
and
xorl
ret
movsb
dec
loope
and
fnsave
xor
sub
pop
ds
aad
inc
out
adc
mov
mov
dec
jae
test
sbb
cs
stc
les
cwtl
fmuls
push
js
jnp
out
dec
cmp
test
out
mul
into
es
cld
inc
or
mov
sbb
add
dec
ja
pop
negb
js
or
and
push
out
push
es
add
clc
push
add
hlt
stc
decl
jl
cwtl
mov
jns
add
jp
or
lcall
aaa
sub
clc
shl
push
ja
js
pushf
add
cmp
pop
call
adc
aad
inc
and
loope
aas
pop
mov
sbb
pusha
add
out
pop
mov
movsb
add
lcall
lcall
sub
icebp
add
mull
cmp
sbb
loopne
adc
sti
mov
add
add
insl
loopne
xchg
sbb
or
aam
cmp
push
or
daa
fstl
rolb
popa
lret
mov
mov
or
and
insl
add
imul
inc
inc
fisubs
and
mov
xchg
cmpsl
sub
js
ret
add
xor
mov
xorb
enter
aas
mov
je
dec
mov
js
jo
loopne
das
sbb
push
add
mov
test
arpl
int
inc
jns
loopne
push
pop
pop
pop
mov
add
fbstp
mov
dec
inc
add
aas
xor
pop
jge
add
cli
fadds
push
loopne
js
xor
add
sub
push
jne
adc
fs
aad
mov
mov
gs
adc
aaa
rorl
inc
dec
pop
je
adc
loope
cmp
add
pushf
mov
fldt
stos
add
lret
mov
and
adc
clc
xchg
add
in
xor
mov
add
repnz
sub
mov
jle
dec
inc
mov
push
add
push
into
testl
cld
fldl
mov
cmp
add
push
cmc
add
pop
add
loopne
and
call
sbbb
fiaddl
mov
scas
adc
mov
inc
mov
nopl
fwait
iret
jecxz
loopne
loop
cmp
add
sbb
in
negl
push
inc
sbb
mov
sbb
bnd
mov
xchg
insl
xor
jb
nop
loop
je
push
inc
roll
clc
push
in
call
xorb
popf
xor
out
push
sqrtps
mov
fdivrp
pop
pop
pop
xchg
add
jbe
push
xor
jge
dec
xor
add
sub
and
push
loope
out
add
aas
js
dec
mov
es
outsl
add
dec
sbbb
lods
sbb
inc
js
movsb
divb
and
pusha
mov
mov
xor
test
jne
or
fwait
sarl
pop
xorb
fisttpll
inc
loopne
ret
add
push
out
js
push
mov
test
push
xchg
cmp
pop
cs
outsl
xor
out
pop
testb
sub
js
fcoml
add
jbe
xlat
cwtl
push
cmp
movsb
daa
enter
fsts
addl
in
xor
mov
orb
push
call
xchg
ds
adc
gs
cwtl
and
jns
inc
es
add
xor
or
notl
cmc
mov
jns
xlat
add
js
jg
shr
mov
ja
and
jmp
cwtl
xor
cmp
add
push
pop
pop
xor
into
jnp
xor
push
das
stc
mov
add
outsl
xchg
idivb
sub
dec
in
ds
and
jge
mov
fsubl
hlt
cld
out
xor
test
les
pop
loopne
out
sub
and
add
imul
icebp
or
adc
push
xlat
mov
mov
loop
stos
sbb
ficomps
mov
add
rclb
sbb
out
add
repnz
lods
add
stos
lock
add
xchg
sahf
or
rcrl
cmpsb
inc
rorb
add
sbb
mov
add
test
sbb
add
mov
mov
inc
pop
stos
sub
dec
add
cmp
cmp
in
add
mov
dec
push
or
mov
add
cwtl
outsl
aas
in
cmp
jmp
popf
ljmp
aad
rolb
inc
add
cmp
out
mov
add
cmp
push
pop
jb
add
sub
xor
add
popf
cmp
xor
sbbl
in
jg
or
xchg
or
cmp
sbb
test
and
cmp
es
lret
sub
add
xchg
and
sub
imul
adc
mov
fcoms
aaa
add
ljmp
add
repz
dec
mov
adc
push
loope
add
scas
xlat
push
clc
in
mov
xor
dec
lret
out
inc
into
xchg
hlt
jp
add
es
ljmp
stos
cmp
cmp
sub
sbb
lea
std
dec
push
int3
aas
pusha
addb
xor
clc
addb
xchg
xchg
mov
out
enter
jp
arpl
mov
lds
mov
addr16
push
fnsave
andb
sub
fidivl
pusha
adc
jg
add
jae
cld
push
ret
cmpsb
lock
jns
in
add
or
adc
dec
adc
jno
add
cmpb
xor
mov
push
in
push
pop
mov
loopne
jmp
das
xorb
lcall
xchg
lds
sbb
out
xchg
lea
jae
and
xchg
sbb
push
mov
dec
ss
add
jmp
xchg
cmp
adc
movsb
or
pushf
mov
add
stos
dec
add
mov
loopne
call
adc
fiaddl
shlb
in
aaa
insl
dec
inc
sub
movsl
jge
daa
out
flds
and
push
inc
lock
add
nop
xor
aaa
cs
out
mov
jmp
mov
add
loopne
aaa
lret
dec
repnz
add
mov
call
sahf
idivl
mov
fsubl
sbb
mov
shlb
jbe
shlb
addr16
movb
roll
lock
das
mov
or
psrad
or
pop
pop
adc
jge
add
jmp
push
xchg
and
cmpsl
sbb
dec
mov
dec
pop
xchg
pop
insl
das
pop
mov
mov
lret
fidivrs
add
cmp
in
add
out
scas
mov
xchg
imul
pusha
loope
sbb
lds
add
cmp
imul
mov
push
add
aad
movsl
pusha
mov
loop
adc
mov
mov
jecxz
lods
and
mov
mov
add
test
pop
call
push
add
add
int3
scas
inc
mov
bound
dec
mov
adc
pop
mov
xor
mov
xor
mov
xchg
in
test
std
aad
sbb
add
pop
inc
xor
pusha
or
inc
jbe
add
addb
jb
imul
mov
sahf
test
call
pop
subl
add
jp
or
add
js
or
aaa
jecxz
test
push
andb
push
lods
mov
test
lret
and
sbb
subb
pop
add
mov
mov
and
ret
dec
repnz
cmp
fcomps
xchg
and
push
inc
add
jge
xchg
inc
adc
arpl
add
add
je
shrb
ret
leave
jno
push
or
fimull
push
sbb
or
inc
in
enter
sub
scas
addr16
jno
xchg
mov
pusha
mov
roll
jmp
sub
nop
sbb
mov
rcrb
add
xor
in
add
fisubs
lea
adc
ret
add
mov
inc
repz
add
cmpsl
push
sbb
in
xor
xchg
pop
outsl
sbb
rorb
popa
movsb
adc
push
je
fstpt
stos
sahf
add
fdivl
xorb
cmpsb
cli
add
pusha
rcrb
ljmp
fnstsw
adc
lds
out
add
jle
cwtl
or
mov
leave
xor
add
test
pop
mov
push
push
fwait
ret
dec
and
mov
aas
push
add
jecxz
cwtl
insl
push
jbe
scas
mov
cltd
and
mov
frstor
stos
cmp
sbb
rcrb
add
lret
mov
js
rcrl
adc
pusha
push
adc
outsl
outsl
loopne
push
sbb
xor
jae
mov
inc
int
cmp
pop
xchg
loopne
xchg
push
push
add
lahf
jo
cmpsb
xchg
inc
loopne
cmp
mov
ljmp
imul
cmp
outsl
and
push
scas
pop
mov
ret
out
add
sahf
jge
add
mov
or
mov
mov
rorl
adcb
add
or
sub
inc
loop
lahf
popf
ds
push
mov
jne
insl
xor
add
enter
and
mov
push
add
sub
xchg
add
out
jne
and
add
ret
push
aaa
stos
cmp
sbb
lods
add
fcomip
les
js
pop
rolb
adc
lds
fwait
mov
add
dec
enter
jge
dec
mov
xchg
cld
xor
add
adc
add
pushf
jmp
and
rol
jg
inc
pop
icebp
jge
daa
rolb
push
add
xchg
fistpll
push
lods
mov
inc
pusha
test
ljmp
add
ds
jge
push
lahf
inc
cmp
sahf
sub
mov
xor
mov
sub
jbe
mov
push
adc
push
cld
mov
fimuls
add
je
pop
inc
sub
leave
add
inc
out
lods
daa
push
cmp
pop
in
push
sahf
stos
push
pop
mov
push
push
rolb
dec
aad
fcomip
jle
cltd
push
ja
add
adc
xchg
cmp
mov
or
or
inc
mov
inc
add
sub
pop
pusha
adc
out
insb
popf
adc
enter
arpl
add
aam
rolb
xchg
in
sub
mov
je
imul
push
fs
loopne
add
mov
mov
jg
add
push
and
xchg
out
sub
sahf
mov
roll
jmp
ja
add
mov
stos
add
and
ljmp
repnz
adc
shll
nop
cmp
mov
and
push
movsb
inc
or
rorb
add
imul
imul
ljmp
pop
incl
push
xor
mov
rorb
xchg
lahf
inc
add
sti
pop
loope
cwtl
inc
das
test
pushf
jl
and
dec
sub
push
iret
loopne
fs
ja
cmp
add
dec
mov
pop
add
enter
fs
mov
push
ljmp
push
iret
push
je
clc
mov
cltd
enter
pusha
xchg
ss
inc
aam
in
xchg
add
insl
mov
and
xchg
mov
xchg
call
js
incl
lods
add
mov
stos
mov
add
mov
shlb
sub
and
xchg
scas
arpl
stos
push
push
leave
jo
jl
scas
and
add
pop
movsb
lea
xor
jle
pushf
fsts
and
mov
leave
iret
jge
aad
sub
and
sbb
inc
xchg
and
inc
push
mov
scas
fxch
lds
and
pushf
add
sub
cmp
leave
scas
popa
add
pop
push
cmp
out
pop
enter
add
fsubrs
call
sbb
push
xchg
sub
je
add
jmp
scas
iret
and
arpl
mov
subl
incb
xorb
mov
mov
xlat
clc
and
pop
xor
pop
fstpl
inc
sbb
or
or
add
fidivl
sub
rol
scas
das
add
test
shlb
add
sahf
add
ret
pop
std
xor
jnp
adc
or
insb
test
cmp
xchg
add
mov
popf
and
fsubrl
xor
out
fidivrl
outsb
jmp
pop
sub
cwtl
sbb
add
pop
mov
mov
movb
mov
or
or
out
sahf
mov
popl
dec
sub
sbb
pusha
ret
push
mov
test
mov
stc
cmp
inc
inc
mov
repnz
push
hlt
js
ss
sub
xor
pop
sti
push
or
aaa
add
jo
jns
xchg
into
int3
sbb
std
push
pop
loopne
add
jnp
ficompl
cmp
pop
mov
aad
lds
cli
xor
sub
add
sub
loop
mov
jp
push
mov
mov
jmp
mov
add
sbb
imul
and
sub
rcll
std
popa
add
jns
xchg
jo
js
jae
cmpsl
xor
lock
or
rorb
sbb
sub
or
jl
add
insb
inc
xchg
repz
lahf
push
xor
roll
push
and
xor
add
cmp
jne
iret
cmp
test
sub
pop
gs
dec
and
add
xchg
mov
mov
sbb
add
pop
inc
mov
mov
pop
cmp
cmp
scas
mov
mov
xor
adc
xchg
andl
shl
add
mov
ret
push
lahf
mov
fwait
inc
jp
sbb
add
pop
xor
sub
jmp
xchg
jg
cmp
mov
add
or
mov
and
clc
test
inc
mov
add
fldlg2
divl
sub
gs
subb
sbb
ja
shr
call
insl
jae
sbb
insb
lock
je
andl
add
daa
aas
xchg
mov
sbb
cmp
and
cmp
mov
xor
push
in
hlt
mov
push
data16
mov
jno
xchg
mov
jns
xchg
ss
xchg
add
xchg
cmp
loopne
fisttps
and
xor
xchg
ljmp
dec
pushf
js
cmp
sbb
jg
lret
pop
andb
push
scas
arpl
mov
frstor
sub
mov
add
test
xor
adc
add
into
xor
loopne
mov
lods
xchg
sbbb
or
aad
cmp
es
sub
lahf
sub
xchg
decb
adc
shrb
jo
sbb
add
adc
loop
repz
test
mov
je
add
scas
movsl
addr16
pop
jno
adc
pop
cmp
push
mov
xchg
pop
pop
jmp
push
sbb
mov
ret
inc
push
cmpsl
out
inc
xchg
and
js
cmpsl
add
sub
movsl
xchg
fsts
pop
pop
push
std
mov
loopne
jnp
add
or
and
fmul
add
ret
cmp
repnz
or
mov
push
xchg
loop
xor
sarb
sbb
inc
sub
add
inc
pop
outsb
fs
mov
jge
adc
mov
pop
jo
dec
pop
push
adc
sbb
subb
pushf
mov
adcb
jl
push
or
xchg
add
push
outsb
popa
add
sub
imul
push
les
add
mov
push
loop
lods
pusha
dec
leave
imul
fs
sbb
mov
xor
loop
std
adc
ret
adc
call
es
sub
push
ja
add
scas
pop
neg
dec
movsb
mov
pop
jo
andb
mov
add
sahf
push
sti
mov
jno
loop
add
push
int
push
and
or
and
add
cwtl
scas
mov
sar
inc
adc
xchg
nop
inc
cwtl
push
addl
and
sub
inc
push
aas
add
mov
push
test
mov
mov
sti
push
testb
call
mov
xor
pop
sub
and
mov
outsl
nop
cmp
mov
dec
mov
fdivs
nop
cmp
and
or
push
push
xchg
add
aam
mov
pop
sub
in
mov
add
test
stos
add
dec
std
lret
sub
cmp
fcmovnbe
dec
es
orb
icebp
rclb
jmp
pop
cmp
fdivl
rcr
pop
cld
xchg
out
mov
fsubrl
sub
out
adc
sbb
xor
or
inc
push
fnsave
mov
out
ficompl
popa
add
jge,pn
psllw
leave
adc
insb
push
in
mov
pusha
pop
aaa
inc
fcomi
mov
les
iret
jne
mov
leave
inc
mov
adc
pop
adc
out
xchg
pusha
pop
or
cld
mov
push
dec
jl
sbbb
loope
movl
add
outsb
prefetcht1
lds
iret
add
add
ret
fcmovnb
cmpb
mov
dec
jmp
inc
xchg
mov
movsl
push
nop
in
lcall
jnp
and
ret
xor
enter
push
mov
jb
mov
adc
rcrb
add
and
out
sbb
ljmp
xchg
pop
ret
cmp
roll
ds
ss
jb
sti
add
in
ret
rolb
subl
jmp
mov
cmpsl
cltd
push
sub
adcb
inc
pop
adcb
inc
mov
imul
dec
and
outsl
out
cltd
das
jmp
jo
idiv
rolb
pop
push
popa
pushf
movsb
cltd
in
loopne
add
mov
fsubr
or
inc
loopne
movsl
subb
dec
mov
mov
cmp
dec
jno
bound
jl
sub
lret
or
ss
push
in
mov
stc
or
ljmp
or
inc
mov
xor
cwtl
mov
outsb
jnp
pop
xor
dec
dec
movsb
je
rclb
fucomip
push
and
dec
into
call
push
arpl
orl
xchg
xchg
sbb
xchg
and
add
mov
sbb
xor
mov
or
push
ret
xchg
mov
mov
mov
mov
pop
loopne
and
adc
test
lret
daa
cmp
jnp
and
hlt
and
leave
les
lret
mov
xchg
cmp
addr16
ds
push
add
dec
loopne
inc
mov
pushf
scas
adc
xchg
fidivs
add
out
shl
mov
jle
sbb
nop
and
pop
addr16
xor
ja
in
sub
std
sbb
sub
mov
adc
repnz
loopne
pusha
outsl
imul
mov
push
jle
daa
sub
stos
sbb
out
pop
xchg
mov
xchg
add
in
lret
nop
mov
ficomps
incb
sub
jle
ret
scas
xor
dec
in
mov
sbb
sub
aas
sti
jecxz
and
and
shl
sbb
icebp
fldenv
add
stos
lods
jne
pop
add
and
pop
pusha
fdivs
outsl
dec
mov
xor
add
test
ljmp
xlat
inc
imul
mov
into
pop
nop
or
push
jo
test
xchg
add
shll
inc
add
arpl
movsl
xor
sub
js
ja
lock
push
add
adc
add
fs
aas
rcll
imul
cs
add
xorl
sub
movsb
pop
imul
aas
push
jp
lds
cmp
jl
pushf
pusha
pop
xchg
into
jno
mov
sbb
scas
jbe
std
and
insl
push
sar
push
add
iret
cs
inc
jl
sub
jge
push
sbb
xchg
loopne
test
loope
adc
out
pop
mov
xor
shlb
nop
inc
and
adc
push
leave
sahf
or
cli
out
add
ja
or
and
xchg
sub
xor
xchg
sbbb
test
aam
push
loope
cwtl
js
jo
mov
insb
je
test
and
fs
inc
scas
jo
inc
adc
pop
cmpsb
and
sub
dec
call
cmp
test
push
jne
adc
mov
mov
mov
add
fs
mov
add
js
inc
or
loope
mov
loop
push
test
xor
add
mov
idiv
addb
fmull
pop
insb
jg
xchg
push
repz
adcl
pusha
pop
push
icebp
jmp
push
popa
xor
call
andl
clc
pop
repz
clc
mov
adc
add
add
imul
and
dec
add
aaa
loope
pop
jnp
mov
lods
xchg
aad
mov
xchg
dec
jge
sahf
add
cmp
idivl
add
scas
add
push
pop
push
add
adc
sar
cmp
loopne,pt
in
xor
inc
xchg
mov
adc
or
bound
js
mul
movsb
inc
mov
or
lcall
mov
insl
int3
jb
movsb
mov
or
nop
inc
add
sub
ficomps
test
loopne
int
test
cltd
or
push
add
adc
daa
adcb
ss
xchg
inc
into
pusha
lods
add
add
out
cwtl
fistpll
adc
push
mov
rclb
pop
in
loopne
push
jle
pop
and
scas
jo
mov
push
and
sarl
pushf
stos
jno
or
jmp
andb
cmp
pop
xor
adc
or
roll
and
sahf
inc
jmp
jg
popa
fiaddl
pop
hlt
pusha
jecxz
movsb
and
or
sbb
or
pop
pop
adc
xchg
or
cmc
push
dec
jl
adc
outsl
cmp
inc
adc
lret
jne
divb
mov
lods
insl
xchg
push
lret
cmp
jg
add
pop
mov
loope
movsb
pop
nop
push
pushf
lods
rcrb
mov
ljmp
push
outsb
sbb
add
sub
mov
xchg
shr
int3
in
mov
call
fimuls
and
push
es
adc
add
cltd
es
sbb
mov
add
sub
mov
dec
xchg
or
xchg
and
decl
and
adc
mov
or
mov
xchg
imul
inc
aaa
outsb
out
movsl
xor
push
das
jne
test
mov
sbb
es
popf
in
jmp
mov
add
adc
movsb
xchg
hlt
add
or
js
inc
adcb
shlb
popf
test
mov
add
jle
repnz
pop
mov
insb
mov
cmpb
insl
ss
add
cltd
shlb
test
into
dec
push
mov
icebp
inc
and
mov
adc
imul
sbb
leave
inc
rol
sub
addl
std
notl
mov
mov
sbb
outsl
loop
mov
jg
mov
dec
xlat
loop
jo
mov
addb
push
push
push
das
lods
imul
mov
in
dec
push
push
in
and
das
pusha
dec
js
adc
enter
int3
in
faddl
outsl
dec
add
jae
lret
sub
add
or
mov
dec
dec
and
movsl
lret
push
pop
insl
fs
xchg
pusha
cli
jecxz
std
stc
gs
lret
lahf
ds
ds
xchg
addr16
test
mov
or
ja
in
push
addr16
mov
mov
jg
daa
or
out
pusha
or
in
outsb
int3
inc
pop
inc
fldz
pusha
sahf
adc
adc
add
and
rolb
mov
inc
out
dec
jmp
cs
sub
add
mov
pop
fdivrs
and
out
push
nop
lahf
adc
outsb
add
subb
dec
xchg
adc
and
adcb
leave
or
pusha
pushf
cmp
and
pop
lds
xchg
call
lret
dec
xchg
jg
out
sahf
shl
popa
dec
inc
mov
cmpsl
push
addl
ret
stc
push
dec
add
js
xor
xchg
xor
rcrl
adc
repz
sbbb
scas
lods
std
sub
cwtl
and
or
pop
pusha
bound
pop
xchg
addr16
add
fbld
je
add
sbb
push
adc
add
out
xchg
out
nop
sbb
js
push
into
cmp
roll
call
testb
dec
dec
and
dec
fbld
and
xor
imul
sub
push
mov
fildl
pop
pop
adc
pushf
popa
pusha
sbb
test
addr16
mov
data16
imul
or
jo
xor
call
fnstenv
cmc
lock
scas
inc
adc
cmp
add
loopne
push
sbb
xor
add
lea
lods
clc
aam
or
loop
mov
test
xchg
in
mov
cltd
cmp
pop
test
adc
popf
push
sahf
xor
imul
std
add
sub
inc
add
mov
dec
mov
and
add
jns
mov
adc
pop
cli
daa
xor
push
in
cmp
inc
pop
cmpsl
int3
rorl
fsts
mov
or
in
xor
test
xor
add
xor
rcrb
stos
incl
enter
add
xlat
xor
je
cld
inc
sbb
nop
cld
dec
adc
int3
lahf
mov
nop
inc
dec
cmp
xchg
or
subb
inc
fimuls
outsl
cmp
adc
or
xor
xchg
dec
jo
adc
js
add
dec
mov
not
cltd
cld
jo
call
or
sub
adc
inc
outsb
pop
leave
adc
adc
stos
xchg
aad
nop
ret
push
xor
pop
ss
and
dec
add
mov
xorl
lds
sbb
shr
rcll
sbb
fdivs
sbb
push
andb
jmp
mov
ds
add
adc
push
jg
mov
mov
push
add
adc
add
push
jae
lds
cmp
js
cltd
mov
mov
mov
fdivl
push
sarb
gs
and
add
leave
add
push
sarb
imul
sbb
push
push
loopne
mov
dec
or
mov
xchg
adc
jle
pop
mov
lret
cld
scas
in
add
int
insl
mov
mov
adc
add
mov
rclb
push
lock
add
pop
and
inc
fcoms
dec
repnz
andb
sub
dec
scas
or
fwait
sub
mov
int3
fs
jg
sarb
outsb
or
jo
pop
pop
and
out
cmp
xchg
mov
cmp
jnp
fsubs
mov
mov
ljmp
jle
rclb
xor
pop
cwtl
repnz
dec
add
lret
lea
stos
push
pusha
add
xchg
loopne
lahf
push
movsb
mov
fmuls
or
in
inc
pop
ljmp
mov
add
pop
xor
call
and
inc
enter
jp
aaa
aaa
xchg
call
subb
or
lahf
subps
add
hlt
sub
mov
subl
pusha
and
dec
cmpsl
es
pusha
movb
pop
cmp
add
lods
adc
adc
inc
add
scas
push
rclb
test
push
je
addl
fwait
pop
adc
add
push
addb
push
or
mov
lret
push
lea
dec
rolb
jbe
and
push
les
pop
mov
idivb
jns
add
lret
mov
fsubs
sbb
addl
aaa
add
jg
or
add
adc
sbb
sub
push
add
mov
xchg
fsubs
lea
add
xor
xor
jp
test
sahf
push
int3
cmp
add
adc
jg
lcall
mov
arpl
pushf
insb
adc
test
mov
movq
jmp
adc
cmc
lods
xor
inc
es
sbb
xchg
pop
rol
pop
mov
xchg
dec
pop
mov
xor
ret
push
popf
mov
popl
or
sbb
cmp
mov
mov
test
repnz
jp
xchg
adc
dec
pop
in
push
push
aas
test
insb
lea
xchg
aad
shll
mov
xchg
jl
xchg
test
shl
into
js
pop
flds
inc
or
mov
or
add
nop
test
bound
sbb
and
mov
push
fistl
and
addr16
inc
andl
lock
dec
sbb
pop
or
dec
add
pop
es
pop
xorl
add
xchg
push
shlb
add
adc
cmp
sub
std
sbb
inc
hlt
push
loop
add
mov
push
and
xchg
add
mov
mov
nop
inc
mov
mov
sbb
pop
sbb
jnp
psubsw
fadd
hlt
mov
sub
movsb
stc
and
adc
sti
push
fwait
inc
mov
pop
mov
pop
and
gs
dec
sbbl
inc
push
lea
scas
inc
mov
xchg
inc
sar
inc
or
and
pop
adc
cmp
inc
and
je
ror
xor
int
cmp
pop
adc
mov
pop
add
push
addb
xor
gs
push
outsb
jg
add
xchg
lds
pop
cli
sbbb
imul
dec
jnp
es
and
pop
jno
xchg
daa
mov
push
lods
xchg
iret
and
faddl
jae
popa
rolb
and
mov
loop
dec
rclb
push
sub
adc
push
xchg
sub
and
pop
sbbb
stc
add
leave
mov
add
push
cmp
xor
loopne
int3
push
mov
into
scas
lods
add
aad
adc
mov
mov
jns
or
sar
mov
xchg
scas
scas
sub
cs
add
arpl
int3
popf
mov
aas
mov
sbb
imulb
add
mov
in
and
loopne
dec
add
jae
xchg
fdivrp
out
push
push
inc
xor
negl
in
psubw
sbb
data16
cmpsb
aam
xchg
jne
aaa
loopne
cld
out
xchg
lods
insl
push
push
add
jo
adc
cmpsb
test
ret
aam
stos
sub
aaa
pop
mov
lea
out
mov
pop
xchg
add
test
add
out
sub
jno
js
pop
int
sub
mull
test
push
jo
mov
fwait
mov
pop
sarl
push
imul
sbb
fmull
icebp
dec
inc
mov
xchg
popa
mov
xor
push
std
push
pop
push
pop
shrb
xor
xor
pop
cmp
or
add
jg
cmc
mov
mov
or
cwtl
mov
push
insl
jl
push
xchg
out
xor
in
pop
mov
nop
enter
fsubrs
or
mov
pop
push
jo
lret
jo
test
cmp
dec
decl
mov
das
add
faddl
add
testb
and
dec
jg
sub
dec
cld
dec
sbb
add
add
outsl
scas
sub
lock
mov
jmp
push
test
push
push
fdivl
jg
nop
in
mov
icebp
mov
add
sub
sbb
cmp
and
add
fisttps
lods
mov
pusha
sbb
sbb
sub
fisttps
stos
inc
jl
or
nop
or
xchg
sbb
add
cs
xlat
add
test
xor
and
sbb
push
imul
mov
pushf
push
mov
pushf
pop
adc
mov
cltd
adc
hlt
jae
mov
adc
mov
pop
fistl
roll
adc
test
or
decl
sub
adc
add
fldt
xchg
fisubrs
arpl
add
xchg
in
adc
xor
or
adc
scas
dec
sub
or
mov
lcall
push
stos
add
add
cs
test
call
add
sub
sbb
cli
mov
jmp
push
push
add
add
lds
mov
add
xorl
daa
inc
xchg
add
insb
dec
mov
adc
int3
stos
addl
fidivrs
filds
adc
std
iret
adcb
cmp
push
out
lret
into
fcomps
loope
loopne
and
fs
nop
fidivrs
and
divl
fmul
add
or
aam
adc
test
jae
das
rol
jo
cmp
lock
xchg
call
test
ss
pusha
pop
push
xchg
pop
nop
xor
jne
js
mov
addb
out
je
mov
xor
mov
xor
pusha
nop
andb
jb
mov
cmp
pusha
dec
test
jbe
xor
jg
dec
and
aad
pop
mov
fldenv
inc
fstpl
jae
es
mov
or
pop
jge
add
mov
sarl
rolb
aaa
jnp
leave
pusha
push
cmp
add
and
mov
add
mov
repnz
js
loop
sbb
nop
mov
int3
pushf
loope
add
testl
inc
add
loopne
out
jp
push
repnz
addr16
mov
inc
call
mov
cmp
leave
cmp
aaa
mov
mov
adc
in
add
add
inc
mov
arpl
sub
mov
dec
dec
test
or
adc
xor
jne
dec
sbb
stos
sub
inc
dec
cmpsl
faddl
xchg
cmp
add
jl
push
dec
fidivrl
add
or
cld
mov
aam
cmp
dec
mov
call
mov
add
inc
lods
dec
jo
pop
inc
shlb
test
jns
cs
adc
jb
aas
adcb
dec
cld
inc
pusha
xor
pop
jp
pop
jnp
aam
in
add
xor
pusha
sub
cmpsb
pop
out
adcb
mov
push
or
pop
lock
cwtl
cli
into
out
in
jb
add
shlb
mov
les
fwait
xchg
add
or
cmpb
or
neg
pop
adc
dec
cld
leave
sbb
sbb
push
and
mov
adc
push
cmp
in
and
lock
xor
sub
das
int3
add
mov
gs
adc
and
filds
les
stc
pop
int3
jno
push
sahf
je
jg
and
add
scas
mov
mov
push
dec
clc
adc
ret
clc
add
mov
or
add
icebp
dec
cmpsb
imul
test
or
jo
subb
and
cmp
mov
add
cld
push
icebp
cmp
mov
aaa
popf
jg
pop
aad
fisttps
mov
std
sub
sub
xchg
adc
or
mov
dec
pop
sti
lock
orb
jp
add
loopne
add
sub
shlb
or
sahf
add
xchg
pushf
rcll
fisubrl
and
aam
out
dec
sahf
push
xchg
rolb
add
mov
pop
push
xchg
test
movsb
or
pop
jle
or
mov
adc
aam
or
jle
add
aas
mov
sti
sub
pop
xor
mov
cmpsb
mov
add
jne
xchg
add
addr16
in
repnz
sbb
popa
jg
rcll
lods
sbb
push
mov
xor
mov
mov
mov
into
pop
sarb
movsb
imul
sbb
mov
ret
add
mov
fiadds
pop
into
lods
xchg
scas
add
in
hlt
lea
jle
and
dec
lods
and
or
add
xchg
sub
jno
lcall
arpl
test
inc
lock
clc
gs
scas
jl
sub
jle
mov
sbb
out
and
xchg
lcall
xor
les
mov
in
ucomiss
lahf
subb
and
les
add
iret
imul
sub
add
dec
mov
sub
push
push
int3
sub
cmp
in
std
in
mov
and
push
dec
cmp
mov
inc
and
fs
sbb
jge
push
rcl
lods
inc
nop
mov
jl
add
jne
in
inc
jnp
push
mov
ffree
mov
and
adc
mov
stc
scas
xor
sub
inc
inc
insl
push
dec
pop
test
lahf
ror
subb
push
sahf
fdivrl
mov
dec
stos
pop
pop
dec
inc
test
rcr
xor
add
push
xchg
mov
faddl
test
negb
cmp
or
into
add
or
loopne
ja
int3
dec
inc
adc
lods
mov
pop
mov
int
dec
ds
fimuls
mov
mov
or
add
xor
icebp
sahf
xor
push
adc
jle,pn
xor
ret
ficompl
loopnew
or
cmp
add
jmp
lock
dec
inc
and
xor
sbb
sub
add
lahf
adc
xchg
push
cli
add
pusha
jns
sub
rclb
push
hlt
rorb
cmc
dec
xchg
push
push
nop
adc
cwtl
push
pop
mov
adc
add
or
das
fists
rolb
xor
test
jno
inc
popa
lds
mov
inc
std
inc
add
jb
inc
add
cmp
lcall
repnz
scas
xor
dec
mov
dec
adcb
mov
add
std
and
dec
sbb
or
mov
sbb
add
mov
cmp
inc
aaa
add
or
ret
lock
add
mov
cltd
and
inc
or
jne
aas
lea
test
ss
addb
fwait
into
pop
cs
leave
test
mov
xchg
pop
mov
stc
mov
fbstp
adc
adc
adc
mov
push
adc
aam
jge
and
and
xchg
pop
add
xchg
data16
push
rolb
push
test
cmc
jnp
jb
push
pop
enter
mov
push
mov
pop
add
inc
decb
inc
inc
mov
nop
add
les
add
push
outsb
add
or
push
pop
xchg
addr16
xor
sub
xor
add
in
mov
dec
pop
pop
inc
xor
adc
popf
inc
dec
push
cld
cltd
cmp
mov
mov
xor
mov
cmpb
mov
adc
fdivrs
add
mov
xor
add
mov
add
cmp
sarb
cmp
std
and
fdivrs
insb
pop
daa
xor
xchg
or
enter
sub
cmp
and
push
mov
das
lea
mov
cmp
sub
lods
data16
and
and
or
jge
leave
add
lock
fisttpll
adc
push
jno
dec
sub
add
nop
mov
push
sbb
jl
inc
cli
push
add
insl
or
add
divl
sub
andb
cmp
sbb
hlt
or
dec
or
hlt
stos
andb
je
cmp
sub
adc
out
dec
add
sbbb
xchg
loope
mov
adc
add
pop
pop
gs
mov
add
fistpll
addr16
push
leave
push
sti
add
add
icebp
xchg
nop
add
lods
inc
popl
lahf
mov
jne
pop
dec
ret
mov
clc
xchg
mov
pushf
cmp
stos
xchg
sti
cwtl
add
sub
jae
pop
xor
push
sbb
enter
lods
inc
add
dec
aam
jbe
xor
push
and
mov
inc
loopne
jns
frstor
mov
mov
jno
sbb
sbbb
dec
add
mov
aas
gs
sahf
jmp
pushf
add
ja
add
push
fiaddl
cs
pop
and
and
arpl
inc
add
addr16
jb
mov
fistl
adcb
cmp
push
test
mov
nop
das
loope
adc
mul
adc
add
scas
lcall
out
add
sbb
cld
add
add
dec
and
nop
gs
jns
add
lret
ret
test
adc
out
xor
stos
lret
add
call
loope
sub
xchg
nop
dec
shrl
mov
xchg
jg
add
stc
sahf
gs
mov
cld
js
add
addr16
mov
aaa
nop
adc
and
xor
inc
push
xchg
add
scas
sarl
lea
pop
outsl
sbb
cmpps
jl
mov
push
jae
or
fnstenv
adcl
sub
lea
add
pushf
add
push
dec
add
out
out
inc
imul
mov
in
or
xchg
push
mov
fwait
pop
shlb
iret
or
push
andb
pop
rolb
je
add
lock
jb
sbb
xor
sub
sub
daa
lcall
dec
push
fwait
or
jle
sti
cwtl
js
jbe
mov
cmp
leave
in
adc
addr16
dec
push
adc
outsb
mov
call
sub
add
add
cmp
inc
lock
add
stos
fcomp
jl
add
scas
add
fadds
mov
cmp
pusha
scas
cltd
xchg
xor
imul
daa
add
dec
arpl
aas
mov
mov
mov
and
mov
sbb
push
xchg
sbb
xchg
dec
mov
xor
loop
pop
clc
inc
scas
pusha
inc
pop
xchg
mov
pop
sub
daa
inc
or
add
scas
inc
or
sub
or
mov
add
adcb
add
xchg
jle
enter
cmp
jg
jmp
sub
mov
mov
pusha
test
fcmovnbe
xor
push
test
xor
add
mov
add
adc
nop
fwait
pop
pusha
test
imul
push
nop
int3
and
xchg
or
rol
mov
sbb
nop
enter
scas
inc
aam
out
ljmp
aaa
fwait
mov
jb,pt
xchg
addr16
clc
fmuls
aam
sbb
xchg
cld
fadds
push
push
out
call
xorb
xchg
push
cmp
fwait
add
jb
xchg
add
add
pop
mov
push
add
lods
inc
lods
decl
and
mov
adc
adc
movl
lahf
push
aas
push
jae
adc
mov
insb
push
mov
mov
es
sub
andb
mov
cmp
jl
mov
mov
test
repnz
mov
push
clc
add
int3
sub
push
les
and
pushf
bound
andb
jge
mov
divb
add
jbe
xchg
repnz
jo
sbb
ja
mov
mov
aas
lock
pop
sub
xchg
add
test
add
mov
jge
mov
cmp
adc
test
pusha
push
mov
insb
sti
stos
adc
es
imul
cmpb
test
inc
xor
or
mov
rolb
cmp
push
mov
dec
mov
lods
dec
outsb
nop
pop
add
xor
pop
mov
push
jp
call
mov
mov
mov
push
std
cld
loop
sbb
fdiv
pop
daa
mov
loopne
fistps
in
adc
adc
xor
loopne
cmc
pusha
js
push
add
rcrl
aas
cmp
add
test
or
mov
push
js
in
pop
xlat
inc
xchg
test
mov
jbe
add
and
test
inc
sti
or
mov
add
add
or
pop
dec
xor
jb
add
mov
int3
jne
push
shl
jnp
sahf
rorb
addr16
sbb
dec
or
mov
add
cmpb
push
stc
xchg
hlt
sti
insb
aas
ds
pop
dec
dec
mov
xor
xorl
pop
sub
add
in
mov
or
sub
add
xlat
mov
test
xor
loopne
test
xchg
cmp
mov
sbb
inc
fistpll
pop
push
mov
add
je
mov
je
insb
mov
mov
sub
add
ret
fsubrs
or
push
ret
push
ja
cwtl
add
mov
sub
pop
pusha
mov
les
popf
cmp
repz
mov
xor
imul
bound
and
xchg
cmp
jne
lcall
inc
add
jecxz
dec
pop
xchg
loopne
adc
bound
jae
add
mov
mov
inc
pop
add
add
pop
add
stc
cmp
jbe
add
loope
mov
hlt
lods
mov
jnp
shr
add
push
jle
cmp
push
int3
mov
adc
xchg
jmp
test
ds
jnp
testb
mov
mov
daa
or
cwtl
jae
xor
xorb
push
sahf
imull
jg
xor
or
add
pop
or
stos
nop
mov
mov
xor
dec
js
sub
xchg
adc
or
pop
lock
enter
rcrb
xchg
faddl
sbb
jecxz
dec
stos
pusha
inc
push
dec
xchg
add
pop
movsb
push
push
xor
daa
icebp
dec
fs
adc
roll
scas
add
iret
inc
cmp
adc
pop
and
push
xor
cmpsb
cltd
inc
or
or
inc
add
dec
cmc
lods
xor
icebp
pop
push
and
jge
call
push
push
add
and
int3
inc
push
sbb
fs
inc
jp
dec
xchg
lcall
add
mov
add
aas
mov
mov
add
inc
xor
adcb
test
iret
clc
sub
aaa
pop
rcrl
ret
leave
in
mov
stos
push
adc
or
and
add
pop
nop
js
add
push
inc
ss
out
mov
adc
mov
cmp
orl
loopne
cmp
adc
adc
push
add
add
sbb
ja
push
xchg
adc
iret
pop
add
mov
sub
addb
add
bound
dec
sbb
mov
and
pop
ret
xor
and
jns
cwtl
xchg
addb
imul
add
pop
or
push
pop
subl
dec
inc
adc
scas
por
into
sub
sbb
dec
clc
sbbb
data16
push
add
sub
push
sub
pop
orb
lea
cmp
mov
sbb
sbb
push
in
and
jo
cli
fwait
push
pop
add
sub
in
adc
lods
popa
inc
sub
in
aad
int3
fsubs
std
popf
add
inc
sub
out
imul
in
popa
xchg
add
xor
adc
or
mov
or
sbb
cld
jnp
push
lods
add
mov
cld
mov
mov
pop
mov
push
into
test
jb
mov
mov
rcr
push
lods
call
or
mov
pop
dec
add
aas
sub
lock
or
and
scas
push
nop
pop
aad
andb
sarb
add
push
inc
cmp
mov
nop
jle
sarb
push
xchg
xor
and
fstp
xchg
jmp
mov
or
decl
xchg
pop
inc
adcb
rolb
mov
sbb
add
test
and
loop
cld
inc
sub
inc
ljmp
cmc
pop
mov
mov
push
insb
icebp
aaa
pop
inc
mov
mov
push
cwtl
or
add
test
mov
idivb
xor
jno
dec
aaa
dec
call
movsb
movsb
adc
inc
jb
add
xor
subl
or
mov
add
mov
add
cmc
sub
repnz
add
fcoms
add
inc
add
bnd
or
out
les
arpl
mov
cmp
cmp
enter
dec
sbb
lods
fnstcw
push
shrb
test
lods
out
inc
xchg
pop
cmp
add
add
outsb
imul
add
daa
imul
xor
push
ret
pop
loop
sarb
xchg
sbb
push
inc
lods
dec
mov
jno
fcoml
mov
nop
js
addl
pushf
pop
int3
ss
xchg
add
lret
add
sti
jns
adc
loopne
cld
and
xchg
mov
xchg
cmp
mov
or
cltd
out
lock
add
or
lods
fs
call
fmull
adc
adc
and
aas
pusha
cmp
notl
mov
movsb
add
add
inc
dec
cmpsb
fsubl
push
add
mov
movsb
adc
or
sub
lods
es
leave
add
push
aad
mov
loopne
ljmp
cwtl
add
aas
mov
add
hlt
dec
mov
adc
mov
test
fldcw
loope
jns
rcll
ljmp
sarl
adc
xchg
and
mov
push
inc
xchg
cmp
xor
ret
xchg
add
sbb
lods
and
rcl
or
mov
pop
sbb
push
imul
mov
sub
nop
add
jp
addb
sub
addb
cmp
push
pushf
cmp
add
lea
add
fisubrs
pop
fcmove
and
add
mov
loopne
lock
add
loop
pop
ja
xor
stos
sbb
mov
add
into
add
fidivs
add
shr
ds
fdivr
js
add
je
test
stos
or
insb
rclb
out
xchg
pop
imul
popa
dec
dec
mov
mov
jne
push
fbstp
lret
into
insb
or
mov
jge
jns
jo
xor
jo
pop
lock
add
push
push
inc
addr16
bound
and
call
mov
incb
push
mov
in
add
xor
pop
fists
sbb
inc
xor
add
loop
jnp
jle
dec
shlb
rorl
sbb
and
mov
daa
icebp
dec
gs
pop
ret
lret
push
shll
jnp
add
jp
test
sbb
add
xor
sbb
mov
dec
add
test
push
ss
rorb
mov
cld
hlt
push
and
xchg
into
dec
cmpsb
jle
push
stc
popl
bound
outsb
xor
pop
ss
mov
sub
call
lods
xchg
sub
addb
cmpb
sar
jl
pop
or
inc
lods
in
inc
lcall
cs
pop
pop
into
loopne
nop
mov
add
add
testb
jno
push
mov
loop
ss
and
popa
jmp
pusha
addr16
sub
insb
add
imul
mov
mov
mov
mov
enter
icebp
dec
pop
mov
cwtl
clc
addl
loope
add
movsl
dec
sti
fwait
push
roll
or
or
test
adc
cltd
and
add
imul
jno
or
inc
negl
xchg
add
dec
dec
int3
cwtl
subb
fisubrs
movsb
es
verw
movsb
aas
add
popf
add
lahf
loopne
xchg
or
les
add
inc
cwtl
jnp
mov
push
mov
push
sbb
test
cwtl
pusha
pop
inc
cmc
lods
ret
inc
js
lret
mov
jns
out
fmull
daa
pop
in
inc
arpl
add
out
sbb
iret
movsl
xor
jae
sub
and
xchg
aaa
add
xchg
int3
loopne
ja
sub
dec
add
frstor
orb
sub
and
xchg
jmp
xlat
push
dec
pop
mov
dec
mov
jns
sbb
inc
sbb
jp
inc
out
mov
ljmp
adc
js
loope
mov
inc
pop
nop
or
ficompl
pop
xchg
js
mov
cmp
cld
icebp
push
adc
mov
bound
add
sub
jecxz
je
ljmp
and
dec
es
dec
mov
adc
or
sbb
xchg
add
pusha
test
rolb
icebp
push
jb
shr
jb
cld
bnd
push
fsubrp
cmp
mov
and
xor
inc
mov
mov
mov
cmp
das
jecxz
icebp
jnp
jo
lods
mov
leave
xor
cmpsl
cmp
sti
push
sub
sub
add
mov
push
mov
inc
data16
xchg
sbb
xor
sub
mov
imul
and
enter
lods
aad
pushf
jmp
xchg
push
xor
jo
testb
popl
or
adc
in
ret
fs
or
arpl
mov
jne
jb
in
mov
ss
data16
mov
in
je
mov
jl
adc
bound
add
sahf
mov
loope
jo
adc
push
ret
scas
invd
cmp
je
cmp
mov
adc
icebp
dec
and
add
std
and
pop
push
lock
pop
inc
negb
pop
aam
lock
pop
mov
iret
or
fs
sub
ret
xchg
add
inc
sbb
mov
sub
add
mov
sub
xor
out
aam
adc
sbb
lods
push
insb
orl
fs
nop
lock
test
dec
clc
push
push
inc
pop
mov
mov
adc
cs
push
js
add
lods
in
xchg
mov
sub
adc
mov
add
sbb
or
aam
sub
pop
pop
fmull
and
or
add
push
sub
repnz
test
fistl
inc
clc
pop
mov
div
sbb
add
dec
iret
cmpsb
or
jl
push
sbb
or
movb
add
insb
adc
pop
inc
or
jmp
add
push
xchg
je
ret
shrb
rorb
add
orl
add
jge
rcll
mov
mov
or
enter
mov
test
insb
adc
imul
ds
mov
inc
or
sbb
je
adcl
add
xor
jmp
add
jbe
fistl
js
cmp
cmpsb
in
add
push
mov
add
xchg
call
mov
inc
pop
xor
push
add
sbb
mov
push
pop
add
sahf
addb
and
pop
xor
nop
jo
push
loopne
push
outsl
xor
lods
std
enter
mov
jmp
adc
sahf
dec
insl
or
nop
out
xor
sub
lods
lock
adcl
data16
xchg
div
ss
into
mov
add
cmp
sub
out
jge
or
dec
xlat
jno
xor
add
mov
int
data16
jmp
inc
aam
ds
add
or
pop
push
adc
in
lret
aaa
andl
lcall
int3
jae
test
add
mov
xor
mov
pushf
xchg
cmp
fadd
xchg
jle
arpl
cltd
lcall
or
mov
mov
les
andl
xlat
movsb
adc
call
gs
push
lods
adc
stos
push
fidivl
pop
bound
mov
js
lock
test
xchg
clc
mov
push
or
lret
jo
dec
ljmp
cmpsl
cmp
mov
and
mov
adc
ret
js
pop
mov
mov
enter
cmp
push
in
stos
or
adc
adc
nop
add
xor
dec
enter
addl
add
and
add
push
test
inc
add
jbe
jecxz
jb
lock
loope
add
out
cli
add
cmp
imul
mov
dec
xchg
adc
mov
push
lret
xor
cld
outsl
sahf
repnz
je
test
add
push
add
dec
imul
negl
pop
mov
adc
out
lock
push
insb
add
les
dec
ret
mov
out
xchg
cmp
movsl
div
xor
gs
aam
call
arpl
sbb
scas
and
rorb
fisttps
adc
shll
xchg
push
cld
jo
push
das
and
in
push
sbb
mov
cs
loopne
imulb
imul
and
sub
scas
and
inc
inc
or
jg
mov
subb
ss
adc
les
ret
mov
fcmovnb
das
adc
add
jecxz
test
xor
lds
jno
sbb
imul
loope
cmp
mov
add
mov
add
aam
in
sub
test
mov
popf
lods
push
addb
sub
add
pop
jo
add
stc
adc
outsl
inc
cld
xor
add
jae
fwait
add
add
fsubr
ret
jle
js
add
jae
add
mov
mov
adc
adc
cwtl
lock
cmp
pop
int
loop
les
jo
adc
cwtl
loopne
or
dec
xor
jecxz
inc
jb
sub
adc
adc
sub
and
cld
cmp
xor
cmpl
enter
clc
push
jno
inc
test
xor
mov
and
sbb
fldl
push
inc
push
xor
jecxz
xlat
mov
add
dec
sub
jle
adc
cltd
into
out
dec
repnz
dec
js
test
jae
daa
pause
sub
add
push
fisubl
loop
pop
sbb
scas
xchg
mov
jo
enter
push
aas
lret
jmp
sbb
iret
add
or
xor
add
hlt
fcoml
jg
sti
mov
add
bound
xor
popa
popf
stos
sbb
pop
mov
mov
and
ljmp
dec
je
fisttps
call
pushf
inc
sar
add
nop
push
mov
add
adc
add
pop
jo
imul
loop
fimull
sahf
test
dec
popf
add
mov
das
jbe
cmp
addr16
mov
in
sub
mov
jnp
dec
xor
mov
push
fsubl
shl
lock
test
cmc
pop
xchg
lock
jne
add
inc
push
sbb
add
notl
add
adc
dec
mov
fwait
add
mov
stos
rorl
sub
in
jne
enter
add
sarb
call
pop
push
mov
ds
jl
and
inc
inc
mov
add
mov
dec
xor
scas
or
cli
pop
scas
nop
int3
mov
add
jecxz
outsl
add
adc
or
sbb
mov
jnp
mov
scas
and
loop
pop
xchg
shlb
or
jmp
adc
sbb
repz
movq
mov
call
dec
add
fwait
mov
push
push
pop
cld
fiadds
jmp
adc
insb
add
test
push
add
cwtl
dec
pop
xchg
mov
add
push
jne
or
push
sbb
fxtract
inc
stos
shrb
fwait
add
sbb
and
inc
add
add
mov
fcomps
dec
ret
pusha
test
daa
pop
test
icebp
decb
add
inc
ficoms
inc
and
xchg
lock
aad
roll
dec
nop
js
sub
inc
clc
sub
scas
stc
rorb
test
jnp
push
repnz
cmp
mov
movsl
les
mov
add
scas
pop
xchg
movsb
jae
and
fwait
inc
lock
pop
movsb
pusha
into
notl
lods
sub
test
xor
cmp
pusha
add
mov
inc
adc
popl
clc
jmp
clc
push
inc
call
add
xchg
mov
mov
jecxz
push
pushf
dec
sub
fdiv
fwait
and
pushl
pop
fmuls
test
mov
in
ret
xchg
adc
sbb
or
pushf
mov
add
push
lods
aam
cmp
testl
cmp
sbb
jmp
je
sbb
cmp
xor
sub
push
adc
adc
loop
dec
je
mov
orb
les
data16
nop
push
jo
dec
addl
mov
jb
nop
cmp
int3
dec
add
fildll
bound
mov
dec
popf
jae
xor
jle
add
and
jo
or
cmpl
lret
pop
cmp
mov
push
cmp
punpckhbw
push
mov
xchg
sbb
test
cltd
ss
pusha
add
xor
movsb
loope
das
movsl
outsb
xor
rcll
add
inc
push
mov
call
xlat
jno
gs
fdivrs
js
push
sub
call
sub
push
arpl
push
call
push
add
mov
aas
cmp
cmpb
ficoms
dec
jne
add
out
and
xchg
add
aas
sbb
and
xor
push
cbtw
les
xchg
adcb
add
aaa
cmpsb
add
cmp
xor
fdivrp
dec
shrl
test
and
jl
lcall
lods
sbb
fldt
push
or
insb
bound
sub
jmp
or
jns
sbb
mov
aad
popa
sub
mov
or
iret
sbb
pusha
mov
in
in
add
shlb
rcrl
xchg
xor
mov
push
lods
xchg
mov
daa
rcr
ljmp
fdivs
gs
xor
or
push
rorb
sbb
and
pushf
jle
jmp
mov
test
mov
cwtl
enter
push
cmc
xchg
jae
or
and
stos
push
mov
and
sbb
mov
add
lret
add
mov
mov
dec
adc
sub
gs
and
mov
das
add
push
cltd
sub
adc
lahf
fsubrp
and
pusha
leave
fidivrl
aas
add
push
mov
popa
outsb
add
nop
inc
mov
pop
psubb
sbb
int
cmp
lahf
mov
mov
sbb
mulb
gs
sbb
xchg
fisubrs
adc
inc
mov
sbb
jns
fucom
jne
pop
jo
leave
xchg
punpcklbw
xor
repnz
xor
adc
cmp
or
lcall
or
dec
cmp
cwtl
xorl
js
cmp
popa
repnz
adc
test
shll
out
testl
sub
dec
xor
pusha
jmp
add
xchg
xchg
cmc
mov
and
add
push
add
jmp
dec
mov
push
sahf
out
movsl
add
mov
hlt
subb
jge
mov
and
lods
xchg
or
mov
mov
pushf
inc
xchg
or
adc
cmpsb
push
aaa
mov
and
xchg
call
dec
jns
out
mov
ss
pushf
ret
or
aaa
push
subb
mov
ficoms
fdivr
push
xchg
das
dec
push
and
arpl
inc
and
mov
xor
xor
enter
fisttpl
sti
adcb
and
push
or
pushf
inc
mov
mov
stos
ret
adc
scas
int3
mov
xchg
xor
jns
or
lcall
pop
mov
sbb
xchg
or
xchg
xchg
popa
notl
sbb
mov
jecxz
into
cmp
cltd
inc
xchg
aam
dec
add
out
dec
xchg
push
orb
or
or
test
stos
and
and
mov
mov
xor
mov
add
mov
pop
dec
out
es
xor
mov
pushf
adc
mov
and
aaa
sub
fsubs
xchg
push
jo
and
aaa
shrl
loope
popa
jnp
shlb
rcr
add
push
repnz
xchg
mov
iret
mov
cmc
inc
dec
in
jns
sub
fcmovu
jnp
movsb
aaa
push
inc
xchg
or
and
mov
hlt
nop
sbb
mov
nop
add
xchg
fcoms
add
test
and
inc
jno
inc
jl
cs
cld
iret
sbb
mov
dec
or
add
mov
adc
das
js
push
inc
lds
je
cmp
pushf
mov
add
mov
lods
mov
out
and
mov
scas
sbb
or
insb
bound
add
pop
or
cmp
mov
add
and
les
pusha
mov
insl
sbb
mov
dec
rolb
xchg
scas
addb
das
or
mov
push
or
outsb
mov
pop
add
inc
loop
or
and
test
mov
dec
cmp
lret
stos
popa
lds
jbe
push
in
xor
dec
test
adc
sub
out
call
lahf
push
jns
sub
mov
cs
xchg
jns
and
jp
mov
push
pop
in
into
mov
mov
inc
fldl
hlt
push
pop
push
data16
add
add
mov
push
push
adc
fnstsw
mov
cld
pop
add
out
inc
sbb
cmp
enter
mov
dec
pop
push
movsb
pop
push
andl
lahf
mov
sbb
in
lds
xor
jne
das
movsb
push
mov
ret
push
mov
pop
xchg
hlt
lea
xchg
stos
inc
push
cmp
imul
or
out
xchg
fsubl
and
clc
sub
scas
repnz
add
fwait
mov
push
mov
jbe
add
jecxz
pop
test
inc
aaa
mov
add
xor
shlb
inc
cmp
push
lock
aaa
cmp
xchg
loope
lods
repz
and
push
pop
aaa
mov
and
mov
hlt
push
stc
or
fs
push
mov
cwtl
mov
sbb
pop
mov
mov
jo
pushf
add
or
daa
imul
fdivrl
cli
push
add
icebp
xor
ljmp
subl
xchg
jl
jns
xor
out
xchg
out
test
das
pop
orb
adc
mov
pusha
add
and
icebp
int3
inc
jl
add
xchg
xchg
subl
lock
stos
adc
test
outsl
xchg
enter
xlat
or
arpl
es
push
xchg
cmc
xchg
pop
lret
and
inc
aaa
adc
jnp
mov
cmc
imul
pop
std
add
fistl
movsb
mov
add
mov
jge
mov
push
rcr
nop
mov
arpl
stc
imul
inc
add
das
shll
shlb
rorb
xchg
movsl
enter
dec
mov
cmc
dec
test
xchg
out
mov
das
inc
scas
aam
aaa
xchg
cld
imul
lahf
sub
mov
in
or
push
sbb
std
sidtl
push
sub
mov
aaa
push
push
int
add
jnp
xor
ja
test
pusha
sbb
lea
mov
mov
add
loop
xor
mov
ret
add
inc
andl
or
adc
pop
add
pop
mov
stc
call
sarl
popa
rolb
testl
lret
int3
subb
and
out
decb
jns
jmp
mov
add
bound
or
arpl
or
mov
inc
aam
or
or
jecxz
or
add
outsl
push
bound
sub
scas
fadd
sub
lcall
das
jns
or
fcoml
mov
add
or
or
sub
pop
leave
cmpsb
cmp
movb
addr16
inc
sub
mov
sbb
addr16
mov
out
popa
shlb
mov
sbb
imul
sbb
das
inc
mov
and
fstps
inc
mov
repnz
hlt
add
adc
jecxz
orb
push
pop
inc
xchg
sbb
les
inc
add
je
arpl
xlat
mov
sbb
popa
fwait
ret
dec
mov
push
lret
outsl
and
cltd
pop
sub
mov
cmp
push
iret
cli
pop
repz
or
mov
dec
enter
int3
sbb
repz
push
fdivrs
sarl
mov
xchg
nop
test
insl
add
dec
inc
in
cmp
cltd
mov
scas
stos
sarb
add
cmp
add
xlat
data16
adc
mov
pop
dec
mov
mov
and
test
add
adc
inc
push
mov
outsl
jge
adc
adc
pop
lea
mov
pop
adc
jp
ds
icebp
lidtl
add
push
or
rclb
shl
push
or
sub
je
adc
out
repz
add
jbe
jo
sub
pop
cmp
out
push
scas
push
pop
push
and
adc
add
sub
lcall
mov
idivl
pmaxsw
pop
mov
cmpb
int
jns
adc
mov
add
das
sbb
mov
add
xchg
js
or
push
cmp
sti
add
xchg
sub
push
push
add
call
fiaddl
iret
mov
push
out
in
punpckhbw
iretw
nop
mov
jl
sbb
in
cld
mov
int3
or
mul
clc
xchg
pusha
out
push
fistl
leave
add
cmc
or
ret
dec
test
push
cld
inc
jge
inc
loope
sbb
mov
pop
pop
cmp
aaa
sahf
pop
xchg
xor
xchg
testl
fmul
sahf
cld
mov
outsl
add
fisttpll
or
cmc
cmovbe
mov
mov
mov
lock
mov
movsb
cmp
pop
push
pop
pop
inc
jge
cmp
push
stos
lea
adc
add
sub
push
loopne
mull
pop
inc
jmp
iret
xor
push
xchg
in
xlat
fisttps
inc
cltd
pop
out
mov
dec
push
pop
jo
mov
ja
add
lods
enter
adc
negb
or
out
cli
test
inc
mov
movsb
mov
mov
sbb
lret
outsl
mov
xchg
sub
cmpb
ljmp
cmp
lock
xor
sub
int3
cmp
icebp
rolb
mov
or
ret
sub
or
out
push
pop
push
sub
add
mov
jbe
cmc
pop
cmp
insb
jno
mov
enter
out
sbb
pop
sub
ltr
or
adc
pusha
cmp
mov
xor
lahf
xchg
mov
dec
notb
adcb
push
push
and
test
jecxz
int3
gs
xor
cwtl
movsb
jae
add
fwait
lods
ljmp
push
add
and
sbb
cltd
cmp
or
sbb
pusha
icebp
movntps
sbb
jecxz
cmp
scas
and
xchg
mov
or
add
sarb
cwtl
out
add
mov
adcb
inc
xchg
fsubs
or
jbe
shrb
jge
sub
xlat
cld
inc
dec
popl
lds
inc
adc
andb
lahf
jge
mov
cwtl
cmpb
mov
mov
repz
push
sbb
jns
and
xor
mov
aad
sbb
add
push
in
xchg
mov
mov
ds
dec
hlt
dec
add
nop
out
jmp
adc
cmpl
and
pop
loop
jle
aaa
iret
xchg
flds
xchg
lds
call
repnz
frstor
cld
push
or
pusha
iret
mov
pop
jge
sub
sarb
add
add
pop
mov
neg
dec
inc
out
push
add
lahf
pop
jle
cmova
aas
cmp
int
and
add
mov
test
out
lock
cmp
or
xor
adc
xchg
add
add
jmp
insb
add
out
sbb
push
inc
test
sbb
les
sbb
and
add
mov
sbb
sbb
cmp
push
ret
push
adc
in
pop
inc
xchg
mov
mov
mov
push
mov
ficomps
rolb
adc
nop
cmp
mov
icebp
nop
dec
popf
daa
cmp
mov
ds
test
sbb
rolb
fldl
xor
inc
in
lock
call
xor
loopne
mov
cmp
cs
push
mov
adc
inc
call
add
mov
int3
pop
pop
mov
lock
adc
aas
outsb
xor
inc
addl
and
leave
iret
mov
insl
cmp
addr16
les
sub
adc
sbb
sub
pop
and
decl
sbb
inc
adc
les
faddl
or
sub
pop
sub
mov
xchg
add
pop
inc
fcomi
cmpsl
dec
lock
push
xlat
xor
adc
pop
push
cmpsl
pop
push
inc
adc
out
clc
loope
and
sub
stos
pusha
dec
or
roll
or
test
inc
jmp
dec
call
test
fistl
out
add
inc
sbb
adc
lods
pop
sbb
or
pop
dec
and
sbb
addl
cmp
and
wbinvd
cmp
push
rcrb
push
cltd
popf
mov
lock
or
test
dec
sbb
insb
icebp
cmp
push
pop
sub
cmp
push
cwtl
adc
rolb
and
add
lahf
ja
subl
add
mov
add
enter
mov
add
aaa
sti
cmc
adc
jl
and
testb
mov
faddp
push
mov
test
pop
fsubs
sbb
mov
popa
push
xor
add
add
and
popa
clc
rclb
cwtl
aad
cmp
movsb
iret
rclb
dec
gs
call
js
add
nop
lods
or
xor
jne
pusha
dec
hlt
pusha
or
stos
add
dec
mov
les
sbb
inc
and
lahf
jmp
add
or
and
dec
push
ljmp
jg
cmp
sbb
pushf
out
sahf
jle
dec
fs
mov
imul
mov
mov
addr16
in
ds
inc
pushf
pop
iret
clc
orb
mov
clc
push
pop
popa
lea
sti
jae
pop
in
inc
cmpb
push
dec
iret
xchg
inc
or
flds
int3
add
fwait
lcall
repz
shlb
fstp
dec
clc
js,pt
add
xor
dec
test
mov
test
lea
add
repnz
lret
add
mov
test
jnp
es
adc
pusha
mov
dec
add
adc
insl
mov
add
ret
and
and
add
scas
jg
addr16
rolb
add
push
or
sbb
jmp
add
add
outsb
cltd
adc
xchg
mov
push
push
inc
pop
cmp
or
stc
sbb
jno
sub
adc
add
sbb
mov
push
scas
add
dec
jbe
xor
test
inc
outsb
inc
out
add
pop
add
jmp
fildl
jl
xchg
jecxz
or
and
jae
hlt
xor
or
jp
or
push
shll
popf
loope
cmp
sub
mov
dec
clc
xchg
push
mov
enter
lods
add
in
xchg
sbb
and
add
mov
and
inc
je
test
fmull
jnp
sub
adc
xchg
and
stc
loope
and
pop
or
mov
sub
cmp
xor
add
add
in
dec
sbb
das
js
ficoml
inc
dec
or
inc
dec
cmp
cmpb
inc
inc
filds
jle
leave
in
adc
add
push
cmp
xor
imul
or
mov
and
test
push
in
pusha
push
sbb
fsubrs
sbb
add
pushf
push
pusha
xchg
sbb
jg
push
jmp
pop
outsl
leave
push
or
or
and
es
sub
mov
and
pop
adc
sti
jge
push
pop
sarl
cmp
incb
pushf
pop
add
push
lret
inc
add
cmpsl
je
pop
dec
inc
in
add
push
aaa
push
adc
jle
push
push
mov
pop
imul
ja
filds
mov
loope
inc
fcoml
int
jnp
sbb
add
dec
outsl
push
ror
icebp
imul
pop
xor
cmpsb
lcall
loopne
cmp
or
add
xchg
imul
sub
add
pop
jecxz
das
xor
lods
or
sbb
add
xchg
sbb
push
cld
jp
push
je
jmp
ret
sbbb
mov
push
stos
rorb
inc
xchg
mov
pop
adc
cmp
mov
repz
cmp
pop
cmp
mov
stc
sbb
test
sub
out
dec
add
pop
data16
mov
cmp
lea
pop
mov
and
sub
leave
ds
cmc
setb
jecxz
add
pop
add
sbb
inc
adc
jnp
cmp
dec
add
lds
imul
iret
and
xchg
sub
xor
and
enter
cmp
in
fnstenv
shl
pop
sbb
mov
out
pusha
adc
xor
je
fwait
jns
push
xchg
adc
or
and
pop
sub
loopne
out
insb
and
or
imul
testl
xor
add
adc
sbbl
arpl
adc
sub
test
mov
pop
add
mov
jecxz
jns
push
xchg
leave
lret
mov
aad
xor
insl
lcall
sub
fists
imul
shlb
cmp
add
adc
push
mov
push
add
hlt
push
xchg
imul
popl
cmpsl
frstor
das
call
add
jl
fbld
fs
add
or
add
stos
adc
mov
cli
icebp
jmp
cmpsl
sbb
adc
xor
pop
inc
inc
inc
fwait
mov
adc
xor
push
or
ljmp
shrb
jp
mov
lods
and
pop
inc
jmp
aad
add
or
sub
mov
outsl
adc
xchg
aas
add
and
xor
mov
punpckhbw
push
test
jne
inc
das
push
or
pusha
mov
test
ficoml
js
lods
xorb
ret
in
lret
jo
mov
je
int3
jmp
lods
adc
add
insb
sub
movsb
add
pusha
push
es
stos
cmp
sub
jns
mov
in
mov
adc
shrl
push
add
stc
popa
iret
decb
mov
fbld
xor
dec
adc
mov
mov
inc
mov
pushl
test
lock
mov
xchg
mov
adc
pop
adc
adc
pop
mov
mov
test
mov
inc
jae
cmp
push
jecxz
insb
test
mov
mov
fbstp
push
fld
jp
fwait
iret
jb
fiaddl
fdivrs
mov
add
int3
mov
inc
push
ja
inc
push
adc
pop
jle
jns
shr
mov
inc
aad
add
test
mov
add
sub
scas
aas
xor
pop
add
cltd
xor
pushf
add
push
pop
mulb
jb
add
std
in
add
lods
dec
leave
push
mov
sub
mov
push
pop
jg
aam
jp
xor
jo
add
mov
jle
sbb
pusha
xchg
nop
cmp
das
xchg
int3
setb
xor
lods
ret
scas
mov
mov
cwtl
push
adc
dec
clc
jne
cwtl
in
in
nop
add
out
and
cld
sub
mov
icebp
cmc
inc
lret
imul
mov
out
and
push
mov
orb
mov
sbb
outsb
ss
push
ljmp
jo
flds
jno
dec
push
add
ja
aam
add
pop
dec
dec
jle
fnsave
mov
cs
je
sub
and
iret
je
mov
mov
cmp
ja
xor
scas
mov
imul
dec
add
stos
int3
cmpsb
cmp
cmp
push
inc
mov
adc
loope
test
and
push
addb
cmpsl
aas
inc
ss
jle
add
push
cmp
or
es
loop
sub
jno
cmp
or
jbe
stos
cld
mov
xor
dec
les
and
push
mov
into
add
pushf
jmp
stos
out
fsts
add
inc
pop
xor
mov
cld
mov
pop
lcall
es
cs
add
pop
test
add
add
push
mov
leave
jbe
addr16
pop
push
add
mov
push
lcall
scas
rcrl
out
and
ds
cmp
nop
gs
mov
add
xor
pop
scas
jnp
mov
lds
loopne
iret
aam
add
pop
fisubl
sbb
sbb
and
loopne
add
mov
jbe
jo
cmp
call
inc
test
jno
xchg
mov
dec
nop
add
and
rolb
imul
dec
pusha
dec
fiaddl
mov
jno
adc
push
sbb
sbb
and
into
inc
jns
rdmsr
or
test
ljmp
or
loopne
push
sarl
pop
lret
mov
movsb
pop
stos
xor
add
push
adc
xor
hlt
insl
add
inc
sbb
push
add
in
out
out
hlt
jl
pushf
mov
add
mov
mov
imul
adc
outsb
inc
push
mull
sub
movl
aaa
iret
add
in
sbbb
stc
jno
add
mov
rolb
test
add
adc
pop
inc
mov
decb
mov
adcb
cmp
sbb
scas
daa
loopne
mov
push
leave
xchg
pop
lcall
add
outsb
mov
call
xchg
push
push
dec
or
push
faddl
mov
inc
fldl
pop
push
insl
std
shll
push
add
mov
inc
sbb
mov
daa
dec
and
pop
add
ficompl
pop
mov
shrb
leave
lods
sbb
xor
adc
push
ja
nop
lret
popa
push
add
xchg
sub
data16
jle
add
ljmp
and
leave
jmp
in
add
das
dec
movsl
dec
sahf
jmp
cwtl
push
push
jg
mov
xor
pop
iret
out
or
mov
test
rorb
mov
and
std
sarb
sahf
sbb
sub
lds
pop
aam
pop
fstpt
loopne
sbb
dec
mov
and
sti
mov
inc
aad
mov
add
jb
lcall
and
jo
sbbb
mov
out
imul
fstl
cmp
addr16
call
addb
loope
adc
mov
sub
fimuls
out
fistps
ja
and
jbe
aaa
fmull
jecxz
movsl
cwtl
mov
popa
lds
xor
sbb
into
out
and
add
mov
call
aam
fisubrl
insb
mov
add
xchg
in
clc
int3
push
rolb
pushl
mov
movsl
ret
mov
xorb
insb
push
cmp
imul
mov
jbe
push
sbb
test
andl
out
jbe
jle
mov
or
jno
repnz
lahf
test
ljmp
js
pop
sub
lock
add
push
repz
add
mov
sub
push
cmp
addr16
xor
and
sahf
dec
imul
jbe
mov
cmp
add
jae
lods
mov
jg
add
adcl
add
ja
xchg
ds
addr16
adc
sbb
push
ja
mov
add
dec
mov
or
dec
ljmp
mov
xorl
dec
or
mov
mov
nop
push
fsubrl
daa
pop
jg
mov
add
rcrb
sahf
add
in
imul
stos
add
jp
sub
out
stc
add
mov
in
xchg
pop
ss
mov
add
aad
out
dec
xor
insb
outsl
scas
rol
daa
jns
sub
pop
sub
and
rcr
add
aad
mov
push
rolb
sub
aaa
jo
pop
mov
ds
popa
adc
cld
in
sub
add
push
pop
mov
inc
test
sbb
pushf
sbb
shr
add
dec
hlt
sbbb
and
rcr
in
std
adc
hlt
scas
xchg
inc
or
mov
add
add
jbe
jl
sbb
fcmovnb
add
dec
adc
add
cli
sti
xor
js
push
add
imul
sub
adc
add
dec
sbb
pop
ret
cmp
lods
or
das
cmp
add
cmp
push
jle
push
xchg
seto
loopne
test
xor
add
movsb
leave
pop
in
and
enter
jecxz
sbb
add
rcrb
sbb
pop
sarl
addps
push
sub
insb
fs
imul
or
insl
push
fcompl
mov
lock
xor
mov
fisubrs
cmp
cmp
daa
cli
pusha
mov
add
lcall
add
pop
sbb
hlt
loop
dec
add
dec
lcall
call
ds
addb
rcr
mov
add
cwtl
mov
ljmp
sbb
pushaw
add
add
mov
aad
add
lcall
sub
mov
mov
push
pop
mov
les
jle
loopne
push
pop
and
data16
pop
fisubs
aam
fadd
sti
push
into
and
jmp
insb
mov
cmpsb
sub
outsl
and
fcomp
pushf
or
xchg
push
add
dec
pop
stc
dec
test
sub
lea
pop
sbb
repz
adc
mov
cmc
add
cmp
pop
cld
add
lret
fisubrs
push
sbbl
add
pop
cmp
pop
jae
gs
ret
sbb
add
or
dec
movsb
dec
psubsb
cmc
xor
gs
add
incb
aas
xchg
sub
das
dec
scas
bnd
sub
add
sbb
add
xlat
pop
mov
push
mov
pop
pusha
lock
mov
inc
jns
pop
in
add
fildll
flds
xchg
repz
out
adc
aaa
cmp
push
xlat
vpunpckhdq
xor
sti
mov
add
sub
jnp
lock
jp
cmpsb
enter
sbb
add
xchg
test
add
mov
add
pop
sahf
add
cmpsb
sbb
push
push
lcall
add
cmp
cmpsl
out
test
sbb
jl
xor
or
pop
mov
mov
hlt
inc
adc
add
aaa
cmp
subb
sbb
in
add
imul
jl
mov
add
test
ret
aaa
jp
and
xor
clc
jo
mov
xchg
cmpb
push
add
and
lock
and
shlb
add
and
push
daa
mov
cs
add
xchg
pushf
stc
lds
scas
insl
add
xor
aam
or
add
clc
out
addr16
add
shl
sbb
jae
or
push
push
push
popa
xor
sar
rcrb
xchg
movhps
das
cmpsb
cmp
mov
mov
mov
xor
push
lret
cmp
jnp
psubusw
nop
add
divb
mov
cs
out
pop
pushf
jecxz
or
sbbb
ds
push
and
push
add
xchg
jle
cltd
das
push
xor
sbb
test
mov
cmp
mov
push
daa
js
loopne
test
fisttps
add
jge
jg
popa
add
cli
adc
jno
mov
aam
adc
add
push
mov
sub
jno
pop
xlat
pop
add
add
jp
mov
mov
cmpb
nop
jle
jl
sbb
dec
or
imul
lods
test
loopne
scas
xchg
mov
mov
push
movsl
pop
add
mov
push
add
or
aaa
fisttps
cmp
loopne
add
jnp
rolb
cmpsl
jne
aam
cmp
adc
roll
mov
outsl
call
scas
mov
jno
adc
inc
mov
cmpsb
fadds
sub
test
mov
push
cmp
call
das
scas
mov
ud1
or
and
adc
mov
test
fmull
mov
bound
sahf
mov
shll
clc
inc
loopne
cmp
jns,pn
lods
add
xor
rolb
add
lret
mov
out
lds
andb
ljmp
xor
push
out
data16
scas
adc
xor
jo
jnp
jne
adc
jns
cmp
popa
sbb
insl
push
sbb
sahf
mov
push
xor
mov
cmpsb
es
lods
fs
das
xor
in
gs
add
or
and
jp
jae
add
in
lahf
out
lock
rorl
dec
idivl
out
es
pusha
insb
push
sbb
cmp
rorl
xchg
lcall
mov
ljmp
in
or
test
in
push
add
push
lock
sbb
sub
lock
and
popa
cwtl
add
dec
add
adc
es
pop
or
inc
inc
les
add
scas
in
sub
movsl
imul
rcrb
add
mov
pop
mov
xchg
scas
jle
inc
pop
mov
int3
sbb
lods
pusha
pop
icebp
loopne
xor
addb
push
repnz
jae
dec
or
and
push
rcll
mov
jle
cmp
jae
inc
scas
and
sbb
ljmp
push
or
jo
lcall
sub
clc
mov
and
add
insb
push
inc
push
add
pop
mov
fisubl
inc
fadds
nop
jge
push
cld
jle
sti
nop
and
mov
loopne
cmp
xchg
add
fs
fcompl
add
mov
push
es
mov
cld
inc
add
pop
xor
add
fnstcw
rcrl
aam
mov
fsubp
fdivrs
adc
mov
ret
adc
pop
pop
enter
lret
jmp
rorb
test
sub
adc
add
jne
popf
mov
icebp
add
cld
gs
sub
jns
or
push
jge
sub
jp
cld
add
loop
sbb
sbbb
xor
mov
stos
or
add
sub
jns
mov
adcb
sub
jno
push
add
je
fs
mov
mov
mov
mov
sbb
jnp
add
sub
xorb
pop
sbb
add
sarl
add
iret
push
add
mov
add
pop
cmpsb
idiv
mov
add
push
inc
scas
std
dec
add
hlt
jo
lods
mov
cs
dec
add
cmpsb
inc
push
sub
aas
push
sahf
or
sub
fmull
or
enter
pusha
outsl
mov
leave
add
jmp
jo
les
pop
pop
push
jl
arpl
nopw
add
jae
lock
ja
dec
sbb
aaa
fldcw
add
jle
mov
xchg
add
fnstsw
or
cs
push
and
rol
out
push
pop
push
jp
jge
add
jo
mov
lea
cmp
dec
imul
or
sbb
dec
movsb
cmp
cmpsb
test
or
call
mov
pop
xlat
pusha
rorb
ljmp
sub
fldt
cmp
xchg
call
jp
push
add
cs
hlt
cmc
mov
mov
mov
pop
repz
xchg
hlt
xchg
xor
cwtl
push
pusha
mov
push
pusha
fistl
sysret
cmp
dec
jb
add
xor
add
stos
in
xor
xabort
jl
or
jge
dec
cmpb
xor
cld
jmp
sbb
mov
cmc
ret
sar
push
leave
cmp
cwtl
add
or
xor
push
fistl
jmp
xchg
add
or
loopne
rcrl
add
fldt
mov
mov
cmp
mov
add
lods
shrb
dec
aam
jbe
cmp
invlpg
in
popf
dec
sbb
sub
es
xor
pushf
rclb
scas
xor
pop
push
cltd
push
test
loop
cmp
shlb
mov
scas
aam
or
cmp
in
sub
lods
pushf
lcall
dec
add
and
sbb
stos
ret
mov
js
or
test
cltd
jmp
cwtl
cmpsb
add
mov
inc
add
xor
shr
and
int
mov
out
pushf
jg
rorl
out
xchg
add
cmp
icebp
flds
pop
test
test
jge
insl
stos
add
and
incb
push
jns
pop
dec
push
add
or
inc
add
inc
lods
std
push
addr16
add
dec
test
call
and
jns
sub
out
sub
cmpb
and
xor
mov
add
push
aam
sub
rcll
insb
sub
push
inc
je
jno
xor
cmp
adc
lods
and
mov
test
push
add
in
rcl
sub
mov
add
pop
push
fistps
leave
add
aad
push
adc
aas
and
and
push
push
mov
lock
js
ss
sbb
fidivs
shr
sub
jo
mov
push
add
lods
add
inc
or
in
mov
add
jb
push
jmp
or
cmp
movsb
sbbb
add
daa
xlat
xor
sbb
leave
mov
arpl
add
sbb
aam
enter
sbb
and
mov
aad
sbb
add
adc
add
cwtl
mov
aaa
cmp
call
cmp
pusha
fsubs
add
push
fucomp
rorb
jo
cli
dec
rorb
pushf
jae
int
mov
jnp
cmc
xchg
sti
scas
mov
rcrl
lahf
pusha
lcall
mov
cli
inc
lods
shll
push
push
xchg
add
cmc
repz
sbb
out
loopne
push
lods
movsl
inc
sub
jnp
lds
movsb
sub
mov
add
sub
push
pusha
push
fimull
insb
add
dec
in
xchg
mov
xchg
and
mov
rolb
mov
ss
push
sbb
xor
jp
jo
fistpl
imul
orb
jae
mov
enter
mov
outsl
and
mov
add
xchg
cmpsl
lcall
inc
loopne
xchg
cmp
xchg
mov
ficomps
addl
push
xchg
or
aas
testb
rcrl
lock
sbbl
faddl
mov
sbb
xor
clc
jmp
xor
in
es
rolb
shrb
add
clc
cmpsb
imul
jl
mov
or
in
push
jne
cmp
std
push
pushf
out
nop
dec
repnz
fmuls
or
pop
adc
mov
sbb
iret
sub
stc
push
mov
pop
lods
inc
jns
xlat
push
ret
pop
int3
sti
jecxz
pop
scas
add
xor
lea
dec
out
mov
rcl
pushl
push
dec
xor
push
xchg
imul
imul
mov
aas
pop
adc
dec
add
adc
cmp
loopne
add
mov
test
pop
fsubs
rep
imul
jo
scas
enter
xor
js
sbb
rorb
and
in
push
xchg
ret
cmp
dec
je
cmpsl
mov
ss
or
hlt
and
xorl
mov
out
pop
mov
pusha
add
jmp
xor
and
or
add
fwait
ds
sti
push
jo
add
xchg
out
xor
add
dec
iret
in
cmpsb
fistl
sub
dec
add
mov
mov
ds
xchg
push
push
pop
and
xchg
mov
imul
cmp
je
add
mov
imul
jmp
enter
push
inc
leave
push
xor
dec
xor
xor
pop
add
in
pop
bound
clc
xchg
add
mov
cwtl
pop
mov
cmpsl
in
sbb
outsb
pop
mov
push
jecxz
inc
testl
jmp
fs
shll
inc
rorb
fstp
ljmp
pop
adcb
imul
adc
shl
inc
pop
fiaddl
out
cli
fs
data16
call
pop
je
in
mov
mov
cmc
mov
add
jbe
in
add
mov
xchg
sub
push
mov
enter
sub
mov
iret
scas
cli
add
enter
shll
push
lock
add
or
push
data16
repz
or
punpckhdq
and
call
loopne
std
jb
add
xchg
mov
push
nop
and
sub
inc
cmp
jae
jo
inc
or
push
push
inc
int3
mov
xchg
jp
mov
or
pusha
mov
mov
enter
orb
rsqrtps
xor
xlat
pusha
insb
out
data16
icebp
and
jb
add
icebp
inc
ljmp
cmpsb
xchg
pusha
les
adc
pushf
ljmp
scas
dec
mov
sub
add
das
hlt
push
cmp
and
cld
dec
push
add
mov
jne
or
mov
sub
inc
div
movsb
lock
add
lock
add
orb
push
dec
loopne
sub
push
pusha
mov
mov
test
jbe
test
push
push
addb
cmp
dec
push
sbb
or
cmp
inc
inc
pop
mov
out
inc
jb
mov
mov
sbb
dec
out
fs
fistpll
fdivrl
cmp
xchg
push
add
mov
cs
jno
mov
pop
pusha
jnp
addr16
popa
fcos
xlat
ror
sbb
scas
stc
mov
lret
loopne
lcallw
mov
and
jmp
push
xor
jecxz
jg
and
add
pop
push
enter
sbb
inc
mov
sbb
pusha
je
jne
js
lret
incb
and
sbb
call
paddusb
xchg
ja
xor
or
pop
add
fsts
push
rcr
arpl
sbb
and
or
nopl
mov
scas
dec
js
loopne
xor
or
push
xchg
pusha
pop
stos
gs
mov
add
mov
ret
lea
or
ficoms
xor
out
pop
cmpsb
rcl
filds
adc
inc
testb
mov
mov
mull
inc
dec
push
mov
push
jne
repz
jle
inc
dec
iret
add
arpl
jo
or
add
and
cld
inc
test
xlat
pop
and
fdivl
mov
jo
add
or
andb
add
xchg
jne
stos
add
mov
out
clc
or
xchg
dec
push
jle
push
imul
mov
aad
lds
add
test
mov
xchg
fdivrl
ljmp
jb
inc
enter
pop
cmp
mov
cli
mov
cmp
inc
mov
add
fldl
jl
pop
or
add
jbe
repnz
fists
push
addb
push
pushw
sbb
outsb
in
in
cmp
aam
add
mov
pop
rolb
lock
jne
pminub
orl
xchg
add
sarb
xor
mov
cmp
pop
jo
cmpb
sub
cmp
lret
xor
add
jae
dec
mov
jb
add
jmp
outsb
andl
lods
xchg
adc
pop
sbb
mov
sbb
fldl
add
jge
jae
adc
fcomps
add
lds
cld
fcomip
add
push
mov
mov
popa
fdivr
int
imul
push
adc
daa
out
movl
iret
mov
lods
ret
mov
add
inc
add
fld
push
jnp
jge
cmp
push
add
fiadds
and
int3
push
xchg
add
dec
pop
xchg
mov
movsb
notb
mov
sbb
push
sbb
add
push
shlb
and
push
add
cmp
jl
inc
adc
test
stos
lods
jo
shrl
cmp
add
ret
add
adc
jns
vcvtpd2psx
out
add
fwait
adc
lret
sbb
sti
xlat
ja
xor
movsb
jbe
push
pop
rcll
std
push
jbe
lods
pusha
mov
nop
adc
fnstcw
xorb
into
adc
femms
sti
sub
loopne
dec
xchg
inc
leave
add
sahf
dec
aam
push
add
pop
and
ret
add
or
into
aas
repnz
add
jmp
aaa
lcall
add
pop
pop
push
ret
andb
add
jecxz
dec
add
add
pop
scas
mov
and
fbstp
fistl
pop
add
les
cwtl
dec
lods
sub
inc
jne
ret
imul
add
dec
push
jns
and
sub
stos
data16
inc
sub
jnp
lds
setns
inc
dec
adc
add
jl
addb
inc
mov
xchg
and
call
call
add
jmp
pop
push
pop
jmp
xor
mov
in
add
jno
inc
scas
inc
stc
and
aaa
in
sahf
cli
mov
mov
push
adc
dec
cltd
or
dec
pusha
ljmp
dec
fldenv
pop
cmp
adc
scas
dec
mov
cmc
imul
ds
xorb
out
pop
adc
dec
xchg
and
shrl
dec
movsl
inc
aaa
push
cmp
pop
sarb
mov
push
dec
sbb
out
sbb
ljmp
mov
xlat
scas
rol
arpl
int
or
out
dec
xorb
shll
pop
lret
pop
repnz
test
sub
add
rcrl
and
inc
add
push
mov
jg
fisttpll
fdivrp
repz
cltd
add
jb
xor
jge
stc
pop
aas
sbb
add
and
or
out
fiadds
pop
cmpsl
pop
pop
mov
push
xor
sub
in
and
lret
mov
xchg
and
hlt
ljmp
xchg
dec
cmpb
or
gs
mov
fs
shrl
nop
push
dec
xchg
push
rorb
bound
mov
pop
push
dec
lret
jne
rorl
and
mov
jbe
or
jge
add
rorl
mov
outsl
inc
lods
inc
cwtl
cmp
int3
pop
xorb
mov
adc
fwait
push
fsubp
inc
in
add
xchg
clc
pop
mov
pusha
rorl
push
pop
adc
xchg
fmul
sbb
dec
pusha
pop
in
flds
call
push
xchg
rolb
mov
mov
push
loopne
mov
mov
sbb
cmp
sbb
push
dec
adc
roll
inc
rolb
adc
ret
dec
jo
cmpsl
lods
or
add
xchg
inc
fidivs
popf
dec
test
insl
incb
xchg
push
popa
mov
adc
mov
loopne
pop
mov
sbb
fmul
jg
sbb
jb
aad
orb
sti
dec
pop
or
and
lods
mov
les
call
icebp
rcll
das
idivb
in
add
or
ds
dec
test
push
or
lock
in
scas
adc
pop
add
push
pop
mov
mov
andl
sarb
adc
add
push
sbb
add
jl
jecxz
insl
add
loop
loopne
xchg
mov
jecxz
std
pop
pushf
daa
movsb
add
pop
dec
and
test
xor
push
adc
jle
sbb
popa
xchg
xor
inc
lcall
pop
movsb
negl
test
pop
and
mov
pusha
mov
and
and
jecxz
fcompl
pusha
cmp
xor
mov
mov
out
pop
mov
add
inc
pop
lods
imull
sarl
addr16
aam
jmp
pop
mov
scas
xchg
inc
js
pusha
test
jbe
std
adc
and
cmp
pop
xlat
push
and
nop
xorl
inc
dec
and
add
popf
or
pop
dec
add
mov
popa
or
sbb
and
out
xchg
adc
fs
iret
jle
aad
xchg
dec
mov
inc
add
mov
jecxz
pop
adc
and
lahf
xor
xor
roll
out
push
mov
loop
mov
pop
lret
cltd
inc
push
lods
popa
inc
mov
iret
jmp
add
xor
and
lret
mov
fwait
fs
outsl
pop
mov
jno
and
das
pop
sub
call
jecxz
rcll
add
clc
rcl
inc
or
mov
cmp
fwait
pandn
adc
cmp
addl
insl
popf
dec
jmp
mov
xchg
les
add
add
inc
lods
mov
lods
pop
xchg
xorl
mov
mov
mov
add
xor
fildl
gs
mov
inc
adc
push
lret
aaa
add
int
outsb
fs
imul
fistpll
cmp
xchg
xorb
add
in
mov
cmpsb
mov
fwait
sub
in
test
jle
add
sbb
cwtl
lret
pop
andl
rcrl
imul
dec
loopne
add
jp
lods
jne
insb
adc
scas
cmpsb
popl
jo
push
aas
mov
js
jmp
fldcw
fxch
add
dec
xchg
mov
rorb
imul
push
adc
and
inc
enter
mov
cmp
pop
xchg
add
jg
mov
push
popa
mov
xor
push
push
movsb
xor
inc
add
add
sti
pop
and
hlt
pop
jb
add
in
roll
mov
cli
test
and
push
inc
ret
mov
cltd
icebp
scas
js
ja
add
jne
outsl
sbb
add
pop
mov
sbbl
sarl
sbb
jmp
bound
mov
movl
push
jle
test
mov
or
into
dec
mov
movsb
xor
test
xor
or
roll
mov
and
jmp
xorb
into
nop
or
fs
mov
enter
data16
inc
lock
add
outsb
in
xor
or
jl
dec
xchg
fisubs
jl
push
imul
inc
iret
mov
add
push
cmpsl
subl
push
or
bound
mov
shrb
push
mov
sub
imul
jge
push
int
dec
add
loopne
push
xchg
pop
inc
pop
repnz
mov
pop
mov
jl
cmp
xchg
xchg
and
sub
jl
loopne
je,pt
mov
xor
xchg
pop
out
mov
xchg
nop
cmpb
in
mov
jo
mov
and
inc
pop
enter
pop
shrl
xchg
daa
shlb
cmp
mov
pop
movsb
dec
xor
int
in
mov
outsl
mov
fdivl
adc
or
dec
pop
push
in
call
jb
and
or
mov
mov
mov
sbb
pop
lock
fs
add
int
lret
jge
mov
in
popa
les
pop
pop
ss
sub
lahf
xchg
ret
arpl
mov
rcrb
fwait
loopne
mov
repnz
pop
cli
ror
pushf
sub
inc
int
in
sub
test
adc
add
jecxz
cmp
insb
nop
mov
orb
cmpsl
mov
or
cltd
cld
movups
or
inc
mov
jge
call
outsb
sbbb
mov
pop
in
pop
loopne
repnz
sub
mov
sbb
mov
add
xlat
lret
push
testl
aad
inc
enter
sub
mov
int
jne
rol
sarl
cltd
xor
xlat
call
sbb
add
gs
mov
jo
sahf
bound
xchg
xchg
push
rorb
pop
jnp
rcl
filds
mov
push
imul
jne
aam
cmp
pop
lret
sub
mov
cmp
add
sbb
xor
mov
sbb
mov
lret
or
mov
in
lock
pop
push
mov
mov
xchg
add
push
sbb
add
sub
mov
stos
cwtl
inc
mov
adc
test
inc
push
push
scas
js
adc
mov
aaa
xlat
sbb
int3
cmpsb
das
add
jmp
sbb
out
sbbl
andb
dec
adc
xorl
fnstsw
fcmovnb
or
bound
popa
insb
lahf
add
mov
sub
in
test
add
test
jmp
and
pop
mov
push
mov
pushf
add
in
daa
outsl
mov
and
call
pop
sub
and
aam
loop
inc
push
cmp
or
adc
shlb
jno
and
aas
int
popa
repnz
out
clc
cmpsb
psubsw
les
mov
dec
repz
adc
int3
cld
mov
gs
and
int3
add
shrb
call
sbb
mov
xchg
or
lds
cwtl
and
add
leave
arpl
cmp
loop
add
test
sbb
add
call
add
stc
xchg
enter
sbb
sti
cmp
adc
add
pop
xor
inc
or
call
in
aas
fsub
sub
push
ret
testl
jns
adc
iret
sbb
or
sbb
push
stos
cmp
leave
and
cmp
shll
fldl
push
dec
sub
sbb
and
pop
xor
or
sub
pop
sbb
xlat
add
lcall
ret
lea
mov
popf
inc
adc
pop
lds
add
aam
cwtl
sub
xlat
incl
add
mov
arpl
sub
mov
loopne
inc
push
enter
dec
ljmp
and
or
or
add
mov
or
or
loop
adc
adc
incb
mov
std
call
and
or
and
test
mov
dec
adc
rolb
and
popf
or
ljmp
lock
xor
jnp
xorb
fistpl
rcrb
push
icebp
add
lcall
add
push
fisubs
data16
push
cmp
mov
push
stos
adc
enter
repnz
and
inc
outsl
add
test
or
pusha
bnd
inc
iret
cmp
push
ja
out
inc
xchg
add
scas
int
adc
add
jns
mov
add
aam
stos
mov
add
int
insb
in
inc
adc
jno
add
punpcklbw
scas
mov
rcll
fildl
add
add
add
sbb
push
das
lret
movsl
js
cmp
lea
add
add
pop
mov
sub
pop
loop
cs
push
test
aaa
lret
mov
adcb
ret
enter
push
icebp
add
into
mov
cltd
pop
mov
faddl
pusha
sti
cmpsb
xor
mov
and
mov
sbb
hlt
popf
xor
jno
add
inc
sahf
mov
jecxz
imul
sarb
or
sbb
pop
insl
sbb
or
dec
repnz
adc
into
out
mov
sbb
mov
into
add
jns
push
movsb
loope
push
jge
mov
mov
popf
and
add
xor
xchg
fidivl
push
jne
inc
jae
lcall
push
mov
out
xchg
mov
dec
cli
pop
das
int
cmp
mov
adc
mov
add
rcr
mov
addl
dec
into
mov
add
push
in
aad
add
push
xchg
add
sub
mov
jge
mov
vcvttsd2si
pop
and
sub
jns
push
cld
popa
sub
int3
nop
clc
mov
add
adc
loopne
mov
jne
jecxz
imul
mov
adc
add
insl
test
das
cmp
adc
sbb
je
mov
add
mov
mov
loopne
out
mov
fdivrl
ljmp
sbb
repz
imulb
sbb
lds
add
imul
jmp
pop
and
sarl
xchg
cmpb
and
add
or
ret
cmc
scas
rcrb
pop
xchg
lret
add
pop
mov
cmp
add
mov
lahf
cs
and
pop
dec
stos
pop
leave
adc
arpl
and
dec
adc
pop
lock
out
add
insb
enter
add
inc
cltd
jno
out
aam
pop
jl
sub
jo
rorl
stos
xor
pusha
movsb
push
jo
ret
fstps
push
adc
lock
or
mov
in
xor
aam
jp
ret
add
shlb
inc
repnz
sahf
pop
dec
repz
nop
sbb
adcl
orb
std
xchg
add
test
pop
call
xor
pusha
lret
sbb
ret
jo
add
xchg
stc
push
inc
fcmovnu
loopne
dec
or
push
pusha
adcb
aas
cmp
sub
movsbl
cld
lcall
adc
pop
jo
std
cmp
add
jecxz
into
jg
xor
adc
lcall
pushf
and
dec
jecxz
aam
shrl
xchg
sbb
test
imul
and
and
add
inc
xchg
leave
pop
movsb
jmp
js
mov
adc
mov
inc
ljmp
iret
das
mov
in
push
rcrl
push
add
aas
cmp
js
add
pop
fcomi
lahf
add
test
or
mov
push
add
push
mov
pop
test
stos
mov
movl
mov
push
add
imull
push
add
pop
and
push
sub
faddl
xor
in
leave
xor
dec
add
cli
std
sub
inc
add
dec
lock
mov
sub
jbe
out
lcall
cmp
scas
fcmove
in
mov
xor
movsl
mov
mov
cmp
xchg
nop
shll
add
cmp
xchg
sbb
lahf
popa
test
mov
add
xchg
inc
xor
fcom
in
sbb
orb
fwait
imul
adc
adc
clc
sub
scas
or
mov
mov
or
pop
inc
mov
or
cmp
adc
je
ret
push
pop
push
nop
pop
push
ss
in
es
call
cmp
mov
xlat
loopne
cmp
mov
mov
add
popf
imul
mov
xchg
add
mov
int
xlat
jno
sbb
int3
clc
mov
xchg
add
lea
flds
stos
jg
hlt
mov
fstl
imul
iret
and
mov
inc
adc
sarl
lock
mov
xor
test
bound
fiaddl
pop
push
insl
int
dec
cli
jb
mov
fmull
or
pusha
imull
sbb
push
movl
sub
rorb
jp
mov
mov
and
dec
inc
filds
les
xchg
add
and
pop
out
cmpsb
or
push
and
leave
add
insl
outsl
stos
shlb
add
es
add
loop
mov
test
pusha
scas
push
sub
fldl
in
inc
push
por
ret
pop
dec
outsl
test
fcompl
dec
add
add
data16
add
lods
shrb
rep
add
mov
adc
pushf
add
fildll
add
pop
aam
call
das
sub
icebp
push
push
rolb
sbb
cwtl
das
mov
es
add
mov
dec
cmp
pop
add
and
test
aas
sbb
push
mov
or
adc
into
mov
push
test
add
and
femms
sar
jo
movsb
mov
add
mov
mov
std
or
sbb
xorl
out
aad
push
fldenv
lret
add
jo
ja
sub
inc
add
xor
pusha
push
repnz
sbb
jne
push
nop
mov
jo
rolb
sub
sbbb
inc
fs
add
adc
loopne
add
lea
and
pop
add
mov
and
lods
movl
shlb
pop
cmpl
dec
mov
mov
iret
orb
jge
mov
mov
iret
call
fidivs
ljmp
into
dec
stos
mov
add
xchg
inc
jp
sbbb
mov
pop
xorl
fldcw
pop
cmp
pop
repnz
xorl
add
jns
cmp
dec
add
xchg
inc
or
pop
mov
add
sbb
jnp
push
ss
fwait
add
and
incl
inc
cmp
add
adc
push
add
mov
clc
mov
pop
jp
fnsave
test
outsb
test
add
scas
inc
in
mov
pop
leave
inc
clc
add
mov
cmp
inc
add
in
mov
sbb
jmp
popa
scas
lock
push
lahf
dec
cmp
jl
mov
cmp
mov
fs
hlt
mov
imul
sbb
call
jle
notl
rol
insb
insl
rorb
add
dec
jecxz
and
mov
or
daa
add
mov
inc
out
arpl
sub
loopne
add
je
sbb
add
inc
sti
push
add
outsl
fstpt
mov
add
mov
lret
add
pop
push
xor
cmp
jbe
cmp
add
inc
adc
pushf
shlb
out
sbb
push
cmp
out
dec
rolb
inc
inc
sbb
mov
insb
lock
hlt
jle
jbe
add
lcall
sbb
fiadds
scas
pop
dec
filds
loopne
fisttpll
call
sbb
jns
sub
cld
rorb
cmpsl
hlt
cmp
cmpsb
jl
nop
into
sub
in
mov
adc
stos
mov
in
add
add
pop
shl
incb
dec
pushf
mov
cs
stos
jbe
and
add
pop
mov
out
xor
push
add
cmp
loopne
ret
hlt
iret
cmp
out
adc
icebp
mov
dec
lods
mov
add
lock
test
sub
add
fiaddl
or
jnp
pop
lea
int3
rorl
ret
xorb
mov
pusha
mov
sub
sub
movsb
or
dec
inc
aam
pop
dec
fstl
ljmp
data16
xor
jg
enter
or
mov
push
mov
pop
call
add
rolb
cmp
push
and
mov
sbb
push
pop
js
dec
push
push
lret
or
and
cmp
xchg
jo
jne
cmp
dec
adc
ljmp
shl
incl
cmp
xchg
es
cmp
fcomps
add
insb
sti
jo
jne
rcrl
mov
and
adc
out
aas
arpl
nop
loopne
stos
cmp
stos
ud2
bound
insl
inc
clc
mov
arpl
mov
pop
test
movsb
mov
xchg
je
in
add
mov
scas
lahf
js
adc
jmp
mov
aad
jg
lods
lock
test
lea
out
jo
iret
mov
out
mov
cli
and
and
jnp
scas
lods
jbe
jae
test
xor
xchg
sahf
daa
inc
lea
pop
cmp
mov
inc
shrb
imul
inc
xchg
fcomps
or
cs
add
cltd
jle
pop
sub
mov
inc
mov
mov
and
xchg
xor
mov
bound
dec
repnz
add
sub
inc
sbb
clc
add
xchg
ss
fsub
xor
jne
sbb
fistpl
loopne
popf
fwait
jne
cld
loope
cmp
or
xlat
adc
flds
xor
aaa
inc
add
loope
mov
xchg
subb
test
mov
mov
pop
add
das
sub
and
jbe
orb
repnz
mov
dec
bnd
jno
iret
xchg
shrl
mov
cmp
and
insb
out
pop
dec
sbb
test
bnd
pusha
sbb
cwtl
cmp
xor
fmulp
dec
cmpsb
add
xchg
sahf
mov
pop
xor
nop
sbb
push
aam
sub
out
aaa
sti
and
jmp
adc
jmp
add
cwtl
fs
dec
or
add
jmp
dec
lret
js
add
scas
adc
push
pop
pop
inc
jge
jge
or
sub
test
aam
xchg
mov
jmp
sub
mov
and
mul
dec
mov
sbb
cwtl
or
mov
std
repnz
mov
ret
sbb
xchg
sub
push
out
fmull
pop
add
sub
or
xchg
imul
adc
in
add
sub
hlt
pop
dec
out
or
test
jmp
lret
add
push
daa
das
stos
leave
push
jl
dec
lcall
sbb
lock
lahf
and
lea
cltd
xor
jb
xchg
roll
sub
cmp
into
jne
add
test
add
lahf
inc
adc
jg
xchg
mov
add
mov
les
and
cld
add
mov
cwtl
add
pop
add
mov
xor
fwait
xlat
push
add
popf
aas
faddl
data16
fadds
cmp
stos
mov
lods
sbb
popa
fs
ret
xchg
inc
push
sbb
sbb
in
xor
mov
loop
test
adc
add
ret
pop
cmpsb
dec
lret
call
psubusw
test
insl
out
add
shl
pop
mov
sbb
sbb
sub
pop
ss
movsb
insl
push
enter
cmp
add
xorl
xorb
add
inc
fwait
push
aam
ss
rclb
inc
add
push
add
push
loop
xchg
jle
dec
bound
jb
sub
xor
pop
lahf
cmp
insl
into
dec
gs
mov
rorb
xchg
inc
push
aaa
add
testl
xor
test
adc
xchg
test
aas
xchg
adc
rcl
add
jae
frstor
push
fcoms
adcb
add
fldl
add
and
sub
loope
jmp
mov
push
cmp
mov
pop
or
pop
xor
cwtl
add
mov
push
aaa
add
hlt
mov
add
jns
jmp
pop
dec
or
xchg
pop
sbb
stos
and
jle
inc
add
and
jbe
mov
xlat
push
rcrl
xchg
sbb
add
test
dec
inc
popf
cli
and
sbb
lea
pop
xchg
ss
hlt
pop
mov
mov
add
sbb
jno
jl
mov
and
subl
xor
icebp
push
jns
addr16
repnz
xor
loopne
fildll
adc
call
andb
add
dec
jo
mov
dec
add
push
aas
mov
mov
xor
mov
popa
add
or
add
inc
das
mov
add
and
cld
adc
adc
add
or
jmp
xor
not
add
sbb
push
add
mov
ret
add
xor
pop
movsb
hlt
lret
inc
repnz
inc
add
aas
stos
lcall
pop
or
arpl
into
add
adc
ljmp
inc
or
jns
add
shll
push
lea
sahf
movsb
add
fcoms
loope
jne
adc
mov
pop
lret
repz
dec
or
add
dec
outsb
adc
add
daa
push
jns
and
lods
dec
add
jbe
push
push
mov
popf
test
jno
add
lahf
xor
aam
and
adc
aad
in
lods
cltd
jp
push
sbb
sub
fsts
add
dec
cli
jmp
mov
dec
test
add
cwtl
adc
pop
add
jle
dec
pop
mov
or
or
lret
sub
xor
adc
add
mov
and
sub
add
or
js
in
xchg
dec
mov
add
movsb
leave
cli
loopne
mov
ret
loopne
add
mov
mov
pop
hlt
iret
mov
dec
fwait
cmp
xchg
jne
jmp
adc
push
flds
mov
dec
add
or
repnz
movsl
dec
lock
divb
add
in
movsb
daa
fcoms
aad
push
call
mov
adc
stos
cld
jae
adc
pop
andb
and
cmp
pop
add
cmp
arpl
add
mov
cs
add
int3
je
mov
int3
add
enter
push
and
arpl
aas
mov
int
jo
sub
movb
scas
mov
sub
jb
pop
icebp
dec
lods
push
adc
in
enter
scas
inc
add
add
in
test
mov
cmp
add
roll
mov
mov
dec
cmpb
cmp
mov
loopne
inc
dec
push
add
dec
xchg
push
mov
inc
pop
add
push
inc
jnp
sub
pop
or
inc
lods
xchg
addl
cmc
dec
pop
cmp
repz
pop
fiadds
dec
push
xor
movsb
push
dec
add
ja
mov
xchg
addr16
add
lret
in
jmp
dec
adc
out
push
bswap
dec
lods
sub
inc
jmp
xchg
stos
les
adc
movl
add
cwtl
jbe
into
jecxz
hlt
sub
mov
dec
xacquire
mov
mov
imul
lock
mov
std
mov
stc
push
mov
sbb
js
add
xchg
out
add
js
bound
shlb
insl
sti
fs
jnp
pop
xchg
add
add
repnz
pop
adc
fmull
aam
push
sbb
and
or
outsb
ds
je
daa
aas
add
push
mov
xor
adc
std
stos
test
xor
data16
push
dec
cmpsb
pop
add
mov
or
mov
sub
cwtl
mov
fisubl
mov
cmc
cli
test
mov
je,pt
add
dec
aad
arpl
add
pop
repnz
gs
stos
push
push
hlt
cmovl
inc
inc
test
arpl
movsb
lods
cwtl
lock
testb
pop
mov
and
and
mov
sub
hlt
add
xchg
push
mov
lcall
cmc
addb
xchg
cmp
or
sub
les
enter
push
scas
sbb
stos
addr16
sub
les
mov
add
mov
stos
add
xchg
aam
or
lret
mov
orb
cmp
add
test
xchg
sub
dec
sbb
call
mov
xchg
sbb
rol
and
jno
stos
mov
int
cmp
movsl
call
jg
dec
push
mov
cmc
pop
cmp
adc
out
cltd
loop
pop
pop
in
dec
out
push
push
push
test
orl
divl
add
or
and
mov
fdivrl
sub
xor
or
incb
lcall
pusha
adc
push
imul
fldcw
add
or
outsb
into
sub
lret
fs
xchg
sahf
add
jnp
test
pop
and
mov
or
sbb
push
js
add
sbb
mov
and
prefetcht0
mov
stc
icebp
push
or
les
push
es
adc
push
or
inc
cmp
xor
add
cmc
dec
shll
aam
int
add
push
add
pop
dec
sbb
xchg
mov
dec
xchg
dec
stos
add
dec
cmpsl
inc
es
ja
dec
inc
cmpsb
shl
push
pusha
mov
jno
lods
gs
add
sub
mov
fadds
jecxz
clc
lcall
inc
in
test
lods
fwait
fs
and
dec
add
int
pop
dec
cmp
dec
pop
push
movsb
bound
mov
pop
test
pop
dec
push
popf
xor
jg
gs
add
lahf
add
fwait
xchg
lock
cs
cmp
jg
arpl
xchg
cmp
das
rorb
rcrl
int3
ss
add
xor
fldt
stos
test
add
sub
add
sbbb
add
mov
lret
add
jl
in
es
jg
add
arpl
xchg
add
xchg
jb
mov
je
or
int3
int
arpl
add
subl
pusha
push
mov
rolb
into
add
movsb
or
add
test
push
les
push
stos
push
add
mov
sbb
jb
mov
test
sti
ret
pop
cmpsl
mov
cmp
in
cmp
pop
add
xor
cmp
mov
aam
cld
test
out
adc
sub
int3
add
out
les
mov
cld
add
outsl
in
add
add
jl
lods
xchg
jno
dec
mov
jg
imul
add
aaa
add
fs
jp
or
pop
and
xchg
push
jno
dec
mov
pop
sbb
xchg
ret
scas
and
les
add
mov
and
cltd
out
adcb
sbb
cmpsb
add
pop
mov
inc
adc
jnp
add
mov
mov
dec
add
mov
pop
add
insb
xor
inc
sub
loope
push
adc
jnp
add
jno
push
out
sbb
dec
mov
add
in
mov
mov
out
cmp
add
sub
add
call
adc
sbb
jae
add
sbb
sbb
mov
sarl
push
test
rorb
jbe
fidivrl
cmpsl
lea
sbb
push
add
sbb
add
and
xor
ljmp
and
pushw
test
push
xchg
cmpsl
mov
outsb
mov
xchg
int3
add
sahf
roll
repnz
enter
clc
sub
rcrb
push
xor
setp
cmp
test
scas
data16
sbbl
dec
adc
ret
lret
inc
repnz
jno
add
jge
jnp
push
imul
push
stc
gs
outsl
je
aaa
in
push
cmp
dec
pop
and
or
cld
sub
orl
pushf
xor
dec
xchg
dec
pop
out
jle
inc
pop
lds
add
cmc
mov
jne
adc
jae
movsl
pop
or
and
fildll
or
sub
add
fiaddl
out
stos
test
adc
xorb
add
ret
rcr
daa
or
sub
aaa
mov
push
mov
add
cltd
sbb
xor
adc
addb
adc
add
mov
and
jle
inc
pop
jo
lret
xor
jp
nop
es
sub
mov
xchg
popw
add
dec
fwait
mov
ljmp
add
repz
add
xchg
pop
enter
bound
mov
sbb
out
adc
sbb
pop
pop
push
push
inc
andb
fcoms
xchg
dec
inc
xor
ds
sub
loopne
js
add
and
call
mov
mov
cmpsl
decl
inc
add
push
xchg
js
sbb
unpcklps
repnz
mul
xchg
sub
push
xchg
push
sbb
enter
push
fcomip
test
pop
cwtl
add
xlat
cmc
aam
sub
js
inc
sub
in
test
add
std
fwait
pop
pushf
mov
mov
jmp
mov
jb
jl
jl
or
loop
sbb
xor
add
or
dec
test
test
add
cmp
sbb
cmpsb
dec
les
dec
add
mov
jg
jecxz
jo
xor
add
pop
mov
sbb
add
sbb
roll
push
stos
lret
add
or
cmp
js
lret
pusha
sub
add
in
outsl
jge
add
pop
rcl
divl
add
sub
inc
add
ss
inc
test
idiv
add
into
cmp
cltd
out
inc
add
add
sub
mov
xchg
dec
jo
push
mov
and
out
sub
xor
loopne
mov
int
or
or
test
sub
add
lock
pusha
test
mov
xlat
mov
mov
or
fs
adc
or
test
popf
aas
hlt
addb
adc
dec
jns
pushf
sub
xchg
ficoms
roll
adc
fadds
inc
pshufw
xor
loope
inc
mov
push
and
cmpsb
mov
adcl
push
add
lret
add
jecxz
pop
mul
and
sub
fbld
xchg
xor
mov
daa
pusha
sbb
or
icebp
out
mov
add
xchg
cmp
mov
xchg
in
xchg
bound
js
jbe
sub
and
ret
add
enter
sbb
or
add
shll
clc
lods
outsb
pop
mov
iret
or
or
pop
inc
sub
xchg
pop
pop
pusha
inc
mov
je
and
mov
aas
adc
hlt
je
push
lock
mov
sub
jo
stc
imul
mov
sub
sti
mov
mov
int3
add
or
rep
fildl
mov
test
iret
adc
out
dec
ret
mov
pusha
mov
mov
jbe
xor
ja
add
int
loopne
imul
pop
fiaddl
and
push
cmp
test
in
stos
sbb
jno
add
cli
adc
add
outsb
shrb
sbb
stc
cmc
mov
gs
ret
sub
stos
add
jo
out
jbe
dec
push
mov
aas
add
jnp
add
mov
out
inc
sbb
cmpsb
add
dec
dec
push
add
mov
mov
ret
mov
ja
sub
mov
sbb
rcll
push
call
enter
or
cs
xchg
das
test
ss
out
fistpl
repnz
orl
adc
test
aaa
cmp
adc
in
movsb
movsl
cmc
jge
in
ds
repz
xor
movsb
cmp
mov
mov
xchg
scas
and
jl
std
repz
int
sub
mov
mov
inc
pop
dec
or
push
pusha
cmp
addr16
xchg
dec
add
push
int3
pop
mov
mov
pop
xchg
pop
ja
xchg
pop
cmp
mov
js
pop
incl
mov
cmpsb
xor
hlt
pmullw
cld
jae
mov
pusha
cmc
dec
and
test
cmp
add
out
mov
add
add
cli
pushf
xchg
add
mov
fcom
cmp
adc
jnp
xorl
cmp
lea
adc
and
pop
popa
je
pusha
inc
sbb
aad
jmp
and
adc
into
dec
out
cmp
and
cld
clc
jns
arpl
pop
add
cmp
pusha
pop
add
adc
addb
fcoms
dec
mov
adc
pop
out
daa
rolb
add
repnz
push
jmp
add
iret
sbbl
dec
add
das
xor
stos
mov
sarb
fmull
add
adc
lods
add
mov
mov
and
push
lret
mov
pop
xchg
add
mov
add
lcall
xchg
test
imul
loopne
pop
pop
loopne
mov
scas
adc
cmp
adc
mov
movsl
add
or
inc
cld
popf
rcrb
fs
scas
sbb
jp,pt
pop
push
rol
sub
xor
cs
pop
push
add
pop
sahf
and
add
inc
outsb
dec
insb
jle
xor
scas
aad
cmp
sub
add
push
xchg
mov
xorl
gs
clc
call
xchg
mov
dec
mov
xchg
jne
dec
add
jbe
insb
nop
rcl
mov
dec
cmp
decl
mov
adc
xor
add
aad
dec
add
aaa
scas
ret
addl
pop
js
sti
pop
mov
das
add
in
cmp
cmp
xorl
adc
aas
xor
subb
mov
mov
roll
and
xor
cmp
outsl
xorb
dec
or
sarb
add
lahf
xchg
xor
push
or
ljmp
dec
jo
and
leave
orl
sbb
push
add
test
inc
mov
push
inc
jp
loope
cltd
or
add
and
xor
arpl
clc
mov
leave
jo
add
push
push
add
and
test
lods
cmpsl
in
cmpb
adc
popa
ljmp
push
sbb
jo
test
sub
add
inc
sbb
incb
icebp
addb
or
loopne
aaa
in
test
xchg
mov
loop
cltd
outsl
idivb
jno
add
gs
dec
lea
xchg
arpl
xchg
je
repnz
call
cmp
cmpsl
jecxz
out
add
clc
xlat
into
jmp
add
fildl
mov
mov
out
daa
adc
adc
cmovge
sti
loopne
jle
dec
jb
arpl
mov
add
aam
test
nop
push
add
fildll
or
mov
sar
mov
shlb
add
mov
mov
aaa
lods
add
push
clc
push
nop
nop
jo
jns
hlt
test
or
jns
push
mov
test
pusha
int
mov
cmp
cmp
sbb
mov
sbbb
sub
addr16
rorb
add
add
sti
xchg
incl
jp
mov
rolb
mov
push
fiaddl
inc
ret
push
sub
and
fimuls
pusha
push
loopne
addb
scas
sbb
push
push
mov
insl
subb
add
inc
cmp
xor
nop
int
insb
xchg
test
int
clc
rcl
inc
mov
cmc
fs
aam
call
xchg
xchg
fcomip
push
mov
cmp
cmp
mov
test
out
fiaddl
jecxz
inc
xor
test
adc
movsl
mov
sub
mov
adc
rol
test
cli
rolb
lea
int3
fsubrp
mov
dec
mov
insb
and
mov
adc
mov
aad
xchg
dec
add
jmp
popf
add
mov
cmp
sub
mov
int3
lret
cld
xor
aas
dec
pop
jo
fnstcw
mov
jmp
adc
mov
std
add
mov
add
sub
pop
sub
add
dec
or
test
ficoml
and
rorb
pop
and
pop
pusha
add
pop
lea
pop
or
push
cmp
add
ljmp
xchg
cmp
mov
es
pop
mov
jg
mov
in
jge
mov
push
jle
xchg
inc
mov
imul
xchg
movsb
add
ret
idivl
add
lahf
fwait
repz
mov
cmp
inc
sub
inc
mov
mov
or
jae
add
sub
push
je
add
pusha
ds
add
sub
inc
inc
mov
xchg
mov
adc
dec
jno
xor
and
call
push
push
lods
movsl
add
xor
mov
add
cmpsl
sub
in
std
inc
mov
dec
mov
push
das
mov
in
mov
movsl
add
mov
mov
repnz
idivl
xor
scas
xchg
scas
xor
push
and
inc
stos
xor
call
lcall
fcomp
out
fstl
jg
rolb
test
cmp
icebp
jmp
loopne
sbb
dec
cld
xchg
fldl2t
out
add
and
inc
or
test
movsb
pop
pusha
push
divb
je
jge
add
mov
adc
push
add
push
cmpsl
push
xchg
cwtl
sbb
pushl
mov
out
popa
fmuls
xchg
add
pop
mov
pop
stos
mov
outsb
mov
addb
sbb
pop
outsl
adc
add
adc
test
pusha
loopne
test
add
sbb
iret
and
add
push
fmull
cmp
cmp
xchg
repnz
add
sbb
cld
or
mov
and
or
idivb
rcl
and
add
mov
mov
mov
add
out
and
push
addb
shlb
dec
scas
add
sbb
jne
addl
popfw
mov
add
cmc
das
lahf
ss
add
ja
scas
outsl
xchg
orb
jle
add
mov
je
lret
sbb
popf
repz
insb
add
test
xchg
scas
sbb
mov
pop
add
sub
std
add
pop
xchg
xor
cmovle
ficompl
loope
cmp
popf
lea
xor
mov
popf
mov
xchg
add
cmc
xchg
shr
in
stos
test
in
cld
add
stos
add
push
stos
pop
sub
outsb
rolb
movsl
xchg
and
aam
or
inc
dec
repz
addl
jmp
push
repnz
inc
push
inc
cmp
add
arpl
sbb
daa
add
push
inc
xchg
out
movsl
xchg
lahf
sub
scas
or
mov
xor
mov
inc
cwtl
rorl
cld
or
pop
add
imul
add
mov
fstpl
dec
shrb
or
enter
out
outsb
add
xbegin
dec
add
mov
in
and
mov
gs
fcoms
fiaddl
sub
and
sbb
inc
jae
sbb
xchg
mov
xor
sub
or
jno
xchg
fisubl
jae
pop
fdivp
mov
pop
out
idiv
xchg
add
push
jbe
scas
mov
addb
fs
jb
mov
mov
push
test
sahf
mov
mov
jp
aam
jmp
aas
stos
in
mov
sahf
push
push
test
shrb
call
add
push
xorl
cmp
push
xchg
imul
mov
cmpsb
faddl
js
sub
loopne
xor
sub
cmpsl
insl
in
fs
mov
cmp
push
xchg
aam
xchg
jo
lahf
mov
fldl
sub
add
mov
or
jecxz
jns
sbb
paddusb
dec
mov
mov
imul
gs
xor
add
cmc
sti
add
test
and
mov
cmp
loopne
icebp
iret
movsb
xor
enter
or
push
mov
pop
int3
mov
lcall
leave
mov
in
jp
shl
sbb
mov
insl
add
fnstsw
xchg
jp
imul
hlt
ret
fwait
repz
add
xor
mov
xor
fmuls
add
push
call
pop
inc
pop
les
mov
sub
mov
add
or
aad
xor
aam
jnp
call
daa
sub
dec
sti
or
jecxz
mov
sub
mov
daa
pop
inc
imul
and
loopne
add
push
mov
rcrb
xor
nop
loope
xor
test
pop
insb
add
mov
xchg
jne
cltd
add
bound
or
sysret
mov
fsubs
sbb
or
adcl
or
add
dec
loopne
adc
in
xchg
out
imul
pop
int
lcall
stos
cmpsb
test
jae
jmp
orl
cltd
data16
jmp
rolb
xor
cmpsl
cwtl
mov
jo,pn
in
int3
jne
loop
xor
aad
dec
mov
movsl
dec
pushf
mov
mov
add
cmpsl
xor
sahf
mov
mov
and
orl
mov
xor
dec
mov
mov
jmp
jle
cltd
outsl
dec
test
dec
mov
add
stc
fstpt
and
pop
roll
lret
sub
or
inc
sbb
inc
pop
enter
mov
pop
jnp
test
out
add
sub
adcl
mov
mov
pop
adc
mov
add
lea
add
inc
fwait
popf
int3
mov
push
scas
call
jg
add
sub
mov
add
mov
jns
mov
jmp
test
mov
nop
arpl
fsubs
jne
cwtl
add
inc
jg
xchg
sub
jns
mov
jg
add
lods
cmpsl
movsb
mov
test
jge
cld
lcall
sbb
pop
push
or
insl
andb
dec
add
add
sub
fsubs
mov
jge
rcr
jecxz
jle
dec
mov
inc
add
mov
add
push
jp
add
xchg
push
adc
xlat
dec
add
cmp
add
enter
out
faddl
js
jle
and
je
push
jmp
inc
or
mov
pop
sub
inc
lock
nop
hlt
das
je
mov
mov
nop
and
adc
test
test
call
jns
ret
and
inc
lds
cmpsb
pop
pop
nop
pop
jle
ret
mov
sub
lods
hlt
orb
cmovns
call
fisttpll
fcmovu
mov
fcomp
cmpsl
loopne
hlt
and
dec
add
addr16
xchg
in
pop
call
push
jmp
pop
in
push
or
adc
xlat
jl
scas
and
pop
dec
xchg
cmp
add
rcl
push
insl
add
orb
sbb
roll
dec
ret
loopne
sbb
add
test
ja
add
dec
jns
fwait
jb
ret
addr16
das
or
mov
and
popa
add
mov
jo
add
insl
daa
xor
cs
addr16
mov
aas
cmp
subb
mov
mov
pop
lods
ss
ret
push
pusha
inc
cmp
mov
adc
pop
add
push
int3
inc
fdiv
and
mov
cmp
or
into
push
sbb
mov
and
gs
mov
adc
sub
cmp
cmp
pushf
add
push
repnz
dec
test
push
add
sahf
add
push
std
add
xchg
push
sub
adc
subb
fldl
pusha
pop
mov
jb
xor
daa
sub
or
add
xchg
fcom
inc
sub
in
pop
push
pop
xor
xchg
adcl
lock
pop
insl
pop
jl
add
lea
add
push
xchg
pushf
add
in
rcr
popf
push
add
xchg
int
ljmp
xor
js
shlb
fcmovu
cmc
add
imul
or
sub
mov
push
jg
ss
ds
or
scas
and
pop
inc
sbb
mov
rorl
pop
lret
lret
adc
sbb
pop
push
mov
mov
add
jle
leave
ds
loop
inc
dec
or
and
cmc
nop
cs
imul
sbb
popa
xchg
andl
inc
loope
inc
outsl
jns
jo
rolb
cmp
sbb
dec
ja
mov
adc
pop
xor
cmpsb
add
lock
sub
xchg
xor
jbe
aaa
cwtl
repz
mov
and
aaa
rclb
sbb
mov
push
xchg
outsl
out
jae
aaa
add
movsb
push
sbb
push
popf
in
mov
fcomp
cltd
in
add
in
dec
pop
sbb
std
sbb
aad
push
cli
filds
sahf
movsb
jo
push
lret
loop
add
ss
sub
mov
pop
inc
xor
jmp
jl,pn
mov
add
mov
leave
xor
inc
add
call
xchg
scas
add
into
inc
xchg
in
pop
add
bound
or
jp
cmp
imul
sti
leave
ret
xchg
daa
aaa
and
lahf
xchg
out
rol
pop
loopne
cmp
cmpsb
sbb
pop
jnp
gs
sub
and
mov
mov
and
xor
jns
jl
and
push
sub
add
leave
bound
push
or
fdivrs
or
inc
add
inc
sbb
popa
or
mov
push
int3
jb
sbb
jmp
popa
or
jne
and
jecxz
or
and
or
push
xor
push
cs
add
xor
fisttps
xor
test
sbb
xchg
or
push
adc
scas
add
dec
sub
lods
test
add
push
out
sub
mov
cmp
sarb
clc
int3
call
enter
rorb
movsb
jecxz
mov
add
xchg
jns
cwtl
fwait
cmp
pop
mov
pop
jmp
mov
repz
jno
sbb
sbb
scas
ret
push
fcomps
nop
add
xchg
out
or
lret
pop
mov
ja
sbb
imul
add
bswap
in
jo
push
sbb
xchg
add
lcall
mov
lods
and
jge
mov
push
mov
mov
popa
cwtl
call
jb
add
lock
pusha
sbb
or
movsl
js
cmp
mov
xchg
rolb
mov
sbb
mov
mov
add
mov
add
push
stos
sbbl
jl
add
test
mov
dec
fucom
dec
insl
sbb
sbb
jmp
pop
sarb
jl
or
ret
dec
and
sbb
inc
bound
pop
rclb
negl
je,pt
imul
adc
sub
daa
repnz
mov
mov
fwait
hlt
dec
add
adc
daa
sbb
ja
mov
hlt
dec
pop
xor
stos
stos
xchg
lcall
sub
outsb
js
inc
mov
dec
cmpsl
pop
lahf
orl
rclb
adc
sbb
mov
stos
pusha
lods
mov
add
jnp
pop
add
push
int
or
pop
sahf
add
nop
in
fdivl
shll
jbe
jmp
jle
add
xchg
mov
sub
jl
pop
adc
je
repnz
push
push
filds
push
jb
adcb
cmp
pop
and
and
inc
fwait
adc
rcrb
add
push
repz
xchg
icebp
inc
mov
jb
pusha
dec
mov
pop
mov
sub
push
sub
pop
jne
sub
add
addr16
test
gs
add
test
cmp
lcall
clc
add
ss
fadd
pushf
add
dec
xchg
aam
es
push
ret
lods
rorl
sub
add
push
fdivrs
jmp
scas
inc
fucom
pusha
mov
fwait
sbb
subl
sub
add
xchg
ss
sub
cltd
pop
je
lods
or
lods
jle
sbb
mov
cmp
mov
push
xchg
and
movl
jno
test
push
loopne
mov
jecxz
pop
add
lds
and
add
dec
sub
xchg
ret
dec
mov
iret
repnz
adc
les
mov
loope
dec
sbb
lock
mov
sub
mov
lock
lods
mov
mov
sub
add
test
cltd
and
call
or
and
pusha
sbb
sbb
out
lock
inc
ret
and
lock
or
nop
mov
or
into
je
or
xchg
mov
dec
movsl
add
cmp
and
ljmp
adc
cmp
or
push
pop
lock
sti
mov
dec
xchg
fdivrs
dec
pop
test
sbb
or
add
xchg
inc
push
call
dec
sbb
cltd
addr16
cmp
or
mov
ja
inc
xor
mov
mov
mov
xor
push
arpl
ret
aas
in
jle
push
pop
mov
das
mov
lods
test
cmp
xor
imul
mov
cmp
add
jecxz
idiv
pop
or
stc
into
test
adc
rcl
cmp
scas
add
fwait
add
cmp
sub
les
sbb
inc
test
jbe
add
jb
movsb
add
xor
xor
sub
fcompl
push
js
jns
pop
insb
stos
jno
arpl
sbb
mov
mov
or
and
adcb
bswap
and
movsb
cmpb
cmp
aaa
mov
iret
sbb
scas
adc
outsb
into
mov
jne
aas
clc
mov
mov
and
inc
sub
jmp
add
jo
fdivs
xor
push
xchg
dec
enter
stc
cmp
pop
jl
cmp
movsl
mov
add
pop
or
sarb
and
add
pop
inc
repnz
push
fst
xorb
sub
pushf
ficomps
stos
fisubl
add
sbb
push
xchg
mov
in
pop
push
clc
push
bound
jae
rcll
add
sbb
divb
inc
push
xchg
mov
add
xchg
int3
mov
add
xchg
add
pop
in
out
aad
jmp
mov
loop
xlat
scas
gs
or
push
add
pop
or
sub
jmp
lods
loop
sub
xor
xchg
ret
daa
pop
dec
mov
shl
pop
xlat
sbb
cwtl
fcmovb
lea
mov
pop
negb
pop
scas
fmull
add
add
repz
mov
push
cmp
pop
and
ret
xchg
ss
out
dec
add
in
adc
add
ja
das
add
xchg
cs
xor
mov
add
arpl
cmc
pop
add
fcomps
cmpsl
sbb
insl
mov
add
stos
aaa
add
scas
ret
xchg
std
add
xlat
repnz
push
cmpl
sbb
jecxz
stc
lret
jmp
sarl
sub
push
hlt
pop
sbb
scas
pushf
add
cmp
push
repz
lcall
enter
fdivl
add
clc
int3
mov
fs
mov
add
enter
cmpb
xchg
ret
loopne
mov
test
sbb
call
push
sbbb
cltd
mov
jmp
addr16
pop
in
cmp
adc
clc
add
imul
xchg
pop
ds
xchg
js
out
sub
xchg
cmpsl
pop
paddusw
add
fucomi
jo
stos
inc
out
fwait
jl
call
push
cmp
stos
mov
xchg
cmp
sbb
loope
roll
xor
and
dec
andb
roll
pop
ss
xchg
adc
adc
or
pop
loop
add
or
sbbb
sbb
outsl
flds
pop
stos
jge
fcompl
out
sbb
dec
aam
mov
sub
rcl
loope
movsb
pminub
pop
add
enter
mov
xchg
sub
and
add
sub
aad
jbe
nop
sub
enter
mov
or
leave
or
stc
mov
call
xor
call
adc
xor
or
push
inc
jno
and
test
pop
stos
pop
add
into
enter
inc
mov
cltd
pop
add
imull
add
bound
loopne
sub
add
cmp
lret
xchg
mov
pushf
xchg
loopne
data16
into
jo
and
add
scas
nop
xor
js
nop
sahf
outsb
add
std
ss
xchg
pop
push
iret
inc
add
cli
jbe
mov
push
pop
imul
push
mov
sub
sldt
insl
xorb
dec
lods
mov
add
in
add
leave
add
mov
cmp
hlt
sbb
and
add
nop
int
cld
add
mov
outsb
mov
add
fs
mov
xor
sub
imul
mov
js
repnz
insb
dec
insl
cmp
mov
or
adc
add
sarl
enter
cmovns
mov
shl
sub
std
cwtl
or
js
jbe
cmp
das
and
and
iret
and
nop
pop
cmpsl
xchg
mov
leave
pop
movsb
and
jo
subb
imul
in
int3
dec
mov
cmpsl
inc
dec
xchg
dec
lods
pusha
mov
addl
xlat
stos
mov
add
ja
ret
or
mov
enter
iret
push
mov
sbb
pop
xchg
mov
mov
hlt
and
pop
add
lret
mov
loopne
adc
add
icebp
popf
nop
jle
mov
jecxz
push
mov
sub
ja
push
push
mov
inc
mov
cmpsb
ret
sti
pop
cmpsl
repnz
mov
pop
pop
pop
in
stos
cld
mov
add
test
scas
add
pop
xchg
roll
inc
add
mov
pop
pop
rclb
mov
jnp
xchg
rcrb
dec
aas
arpl
xor
push
data16
hlt
jo
stos
loope
cmp
sub
outsb
xorb
cmp
into
add
sub
js
add
gs
or
jne
push
sbb
pop
loop
in
xchg
sbb
adc
add
stc
iret
xlat
inc
clc
cmp
aad
lods
jp
add
jecxz
and
stos
jge
clc
je
out
add
push
mov
add
lds
pop
dec
addb
adc
out
lret
in
mov
add
popa
test
loopne
add
jne
movsb
add
adc
mov
mov
mov
add
or
rcrl
xor
jne
es
outsb
jl
jno
cmp
popa
loopnew
test
cmp
push
imul
adc
in
data16
add
and
mov
ret
cmp
add
fstpl
movsl
jl
add
cltd
xor
ds
and
sahf
imul
mov
insb
rcrl
add
insl
sbb
negl
jg
test
fldenv
mov
ret
mov
idivb
bound
mov
cmc
outsl
popf
dec
cltd
ds
dec
mov
lcall
cmp
loopne
push
mov
das
fneni(8087
dec
sub
pop
add
xchg
loop
ljmp
jbe
data16
out
out
mov
sub
push
lods
repnz
xchg
test
iret
add
pusha
out
jnp
xchg
stc
nop
sub
jg
js
add
imul
add
repz
or
faddl
je
or
pop
test
loope,pt
sbb
inc
sbb
push
ja
sahf
mov
pop
dec
sbb
sub
ds
add
inc
jae
add
lds
add
push
add
adc
es
lods
incb
ljmp
mov
insb
add
mov
out
mov
movsl
pop
jbe
mov
sub
add
jmp
js
dec
subl
add
jbe
jge
push
xchg
js
pop
jmp
movsl
incb
xchg
sbb
xor
repnz
sbb
clc
jg
add
mov
and
sub
call
push
pop
mov
stc
out
cmp
insl
clc
frstor
int
lock
popa
pop
imul
pop
adc
mov
mov
daa
insl
jecxz
pusha
negb
and
dec
ja
pop
fldl
js
jne
mov
cmp
cld
sbb
cmp
iret
push
sbb
push
shl
xorb
sbb
mov
fprem1
sbb
xchg
fidivs
insl
stos
inc
add
nop
into
popa
out
add
shlb
sbb
and
rcrl
add
sub
push
fcmovu
mov
cwtl
push
or
add
rorb
cmpsl
cld
cmp
lock
sbb
push
push
imull
xchg
aad
sub
jno
std
adcb
pusha
iret
mov
adc
xor
sahf
cs
addr16
mulb
shlb
cltd
or
out
sahf
mov
add
mov
lock
sub
push
add
mov
dec
dec
je
add
fwait
mov
cmovg
mov
cltd
int
push
rorb
sbb
pavgw
xchg
push
fiadds
std
fwait
sub
jp
shr
lods
ss
push
dec
adc
add
insb
lock
call
add
clc
push
test
pop
lret
mov
sbbl
pop
cmp
sahf
lock
add
cwtl
fcmovnu
in
push
jns
add
pop
scas
push
pop
movsl
in
sub
in
clc
push
jmp
add
jne
mov
int3
add
pop
ja
into
sbb
aad
jl,pn
incb
mov
adc
inc
mov
fwait
add
mov
pop
sub
cli
sbb
adc
packsswb
movsl
addl
add
fmuls
cmp
adc
je
lock
add
std
testl
mov
loope
xchg
fstpl
adc
adc
push
out
mov
mov
cmc
push
xor
or
aaa
cld
fcmovne
das
pop
pop
fiadds
sar
dec
faddl
mov
iret
jecxz
xor
dec
and
ljmp
push
inc
cmp
cltd
fistpll
insb
push
mov
jl
jge
dec
add
xchg
out
jo
repnz
adc
in
cmp
shlb
add
inc
test
push
enter
xchg
dec
add
sbb
xchg
and
sbb
lcall
int3
cmc
adc
imul
mov
push
shll
mov
into
in
repz
push
or
push
pop
cmpl
rorb
test
pop
dec
push
inc
fwait
add
add
push
jmp
popf
mov
sub
add
xor
and
es
sbb
jge
lea
jno
jnp
cli
or
in
pushf
std
mov
lea
push
ret
cmp
push
mov
push
out
add
mov
js
jo
add
or
in
push
push
pop
xor
mov
loope
imul
sbb
fcomip
inc
add
xchg
pop
mov
mov
xchg
sub
mov
mov
lock
dec
call
xchg
xor
xchg
out
ret
call
add
lretw
add
xchg
insb
in
test
mov
mov
pop
movsl
out
faddl
test
jae
mov
popl
pop
enter
mov
jo
sbb
pop
lea
add
int3
int
add
aaa
lret
and
push
pop
in
cld
subl
mov
add
or
dec
pusha
xor
xchg
enter
push
add
iret
cmc
test
es
adcb
std
pusha
test
bnd
cmp
mov
cld
push
roll
out
int3
sbb
jb
mov
add
cmp
xchg
fidivs
sub
arpl
adc
enter
movsb
push
dec
cwtl
popf
cmpsb
inc
fwait
push
sub
lret
sbb
sbb
pop
xchg
or
dec
loopne
sbb
jno
xchg
ljmp
leave
inc
arpl
inc
add
dec
fldt
fidivl
add
leave
cld
jl
sub
add
xlat
lret
stc
ds
test
push
sbb
mov
rcrb
and
lods
xchg
testl
cmp
call
cmp
nop
insb
test
pushf
lahf
jle
sub
inc
pop
test
sub
les
std
shll
dec
add
cmpsl
movl
and
mov
addr16
add
sub
int3
fs
nop
stc
add
xor
imul
nop
push
mov
add
sbb
fstps
imul
add
adc
lret
and
fs
mov
cmp
mov
icebp
leave
jbe
jg
xorb
ss
add
add
mov
fisttps
test
in
das
fsubr
adc
add
repz
add
sbbl
add
in
cmpsb
in
outsl
add
jmp
imul
daa
mov
mov
popa
int
aaa
dec
addb
ss
dec
scas
add
push
or
mov
or
bound
add
jp
fiaddl
and
cmp
mov
mov
add
sbb
push
sub
cld
icebp
add
mov
pop
xor
cld
call
and
addb
dec
fsubr
push
add
cs
repnz
add
inc
add
push
pop
out
mov
sbb
mov
rclb
push
mov
mov
xor
std
outsb
jbe,pn
cmp
in
add
scas
loope
call
jl
mov
xor
pop
jne
add
inc
xchg
pop
shrb
test
add
xchg
or
dec
and
inc
loope
clc
aaa
mov
enter
js
add
jno
xor
mov
stos
mov
lods
or
imul
jg
adc
mov
add
add
repz
sbbb
sbb
mov
add
sub
or
add
fisttpl
xchg
into
and
gs
loope
sub
jmp
jae
rolb
outsl
mov
sbb
and
or
xchg
in
and
loop
gs
add
mov
xchg
push
add
ljmp
cmp
roll
inc
sub
inc
das
fcompl
xchg
sbb
add
aas
scas
andb
jge
dec
movsl
les
jbe
push
pop
stc
pop
or
ss
add
sub
add
icebp
xor
mov
xor
cs
add
mov
les
jae
clc
sbb
ja
jp
sbb
pop
pushf
push
gs
es
rolb
aaa
pop
cmpl
mov
int
int3
loope
add
sub
xchg
xchg
shlb
incl
stc
pusha
add
lret
pusha
rolb
loopne
pop
mov
xchg
sbb
inc
or
add
sbbl
xchg
mov
imull
pop
pop
lea
push
cwtl
sub
nop
scas
add
pushf
mov
jmp
add
cmp
sub
mov
lock
add
push
adc
les
sub
jg
stos
ss
dec
add
dec
ret
xor
add
xor
dec
repnz
adc
mov
add
inc
iret
ljmp
add
sbb
clc
pop
xlat
add
mov
push
adc
fmull
jp
cmp
das
add
fimull
ds
add
rcr
daa
popl
fucomi
out
loope
pop
out
pop
fisubl
pop
out
loopne
or
jl
add
xchg
ljmp
in
lcall
or
movsb
clc
lock
cmp
and
add
adc
or
sbbl
sbb
lds
or
fiaddl
js
ret
sbb
inc
sub
lcall
in
mov
stc
jp
mov
add
repz
dec
sub
pop
xchg
adc
in
sahf
add
dec
xor
push
xor
faddl
rolb
inc
repz
add
pop
data16
sbb
fistps
push
adc
test
stos
xchg
adc
sub
and
cmpsb
aam
lods
lds
jle
inc
add
pop
stos
popf
in
cmpsl
and
push
in
arpl
in
in
pop
add
inc
testb
sbb
insl
xor
sub
pop
rolb
and
les
hlt
jbe
ja
add
cmp
add
test
or
out
fs
inc
je
xchg
loop
pusha
lcall
dec
adc
insl
aad
and
jne
jle
adc
orb
xchg
or
adcl
insl
call
mov
cmp
sbb
jb
loop
pop
xor
cmpb
lods
or
add
push
mov
fildl
test
add
lret
mov
lcall
xor
clc
add
test
loopne
sbb
adc
in
inc
jmp
pop
dec
jle
inc
jo
add
loopne
push
cmp
roll
pop
jmp
mov
xor
add
mov
xchg
add
and
add
lods
inc
push
jle
loopne
jb
add
push
nop
les
shlb
cmp
add
pusha
and
insl
nop
push
add
or
and
nop
adc
jg
sbb
or
add
cmp
xchg
sbb
xor
jns
jle
add
lcall
inc
jmp
rcll
mov
push
adc
sub
mov
cltd
fbstp
das
push
unpckhps
ret
lds
pop
sahf
dec
adc
add
push
mov
aad
sub
mov
out
pop
test
shlb
idivb
in
xchg
push
push
gs
xchg
push
lahf
sbb
mov
pop
gs
rolb
aam
xor
lret
add
scas
and
add
test
push
add
pop
cmpsb
int3
rorw
xchg
xchg
call
xor
loopne
pop
adcb
ljmp
mov
jo
roll
cmp
es
mov
insb
xlat
pop
call
inc
adc
ljmp
out
adc
stos
add
sub
sub
and
mov
push
add
inc
in
addb
lock
xchg
jp
jge
add
inc
xchg
mov
ja
jnp
add
pop
cmp
pop
int3
lock
ret
mov
shrb
bndstx
and
add
jbe
add
jns
dec
jecxz
pop
mov
loop
std
push
dec
jle
inc
les
add
jnp
fisubl
dec
in
add
mov
push
mov
sahf
mov
add
leave
mov
cwtl
cmp
lods
cs
cmova
addr16
data16
jo
rorl
or
dec
clc
jl
add
test
sub
aam
movsb
pop
lret
jecxz
pop
add
int
loope
cmp
pusha
lods
fwait
ss
xchg
sti
faddl
dec
add
pop
insb
cmp
fs
dec
scas
xchg
int3
xor
pop
wrmsr
test
outsl
cmp
aad
stos
mov
pop
mov
add
ret
add
cli
mov
mov
xchg
dec
add
and
adc
mov
adcl
lods
jp
add
lret
xchg
loop
add
movb
sbb
cmp
and
pop
cmp
mov
mov
add
hlt
add
cmp
fs
pop
add
inc
sbb
les
dec
add
std
out
cmpl
imul
imull
sub
sarb
sub
adc
xchg
and
insl
dec
xor
inc
cmp
sbb
jb
sbb
out
out
inc
cmpsl
mov
jge
rolb
imul
push
push
mov
sub
incb
pop
lret
lods
pop
push
les
cmc
pop
dec
push
cmp
sub
add
xor
sbb
mov
jb
cwtl
mov
xchg
xchg
mov
xorb
push
mov
adc
mov
fimull
inc
es
imul
lret
ja
pop
cmpsb
jg
or
mov
and
flds
jne
je
ds
mov
xchg
push
sbb
arpl
aad
xor
add
test
push
xor
push
mov
pop
add
sbb
add
xchg
dec
and
mov
mov
rorb
add
jne
add
ss
nop
aam
rcrl
adcl
pop
andl
add
popa
in
mov
fs
inc
test
inc
fsubrl
inc
dec
sbb
adcb
stc
pusha
mov
push
sub
nop
xor
adc
sbb
js
int
aaa
into
xchg
xlat
data16
mov
pop
sub
arpl
sub
cmpsb
roll
push
cwtl
ret
rolb
mov
jo
adcb
inc
mov
lock
jecxz
daa
lahf
push
js
aas
add
fidivs
pop
and
mov
mov
rorb
iret
stos
lret
arpl
or
insl
adc
pop
mov
js
pop
mov
pusha
test
lahf
ret
sbb
std
cmpsb
mov
loopne
lods
sub
faddl
xor
lcall
add
jno
mov
jo
loope
xchg
adc
in
mov
and
adcb
push
les
mov
xor
xchg
ds
mov
fistps
incb
sub
clc
mov
xchg
or
xchg
js
jae
xor
ss
xchg
aas
mov
or
scas
sbb
minps
push
add
test
and
mov
xchg
aad
add
cli
out
cs
mov
into
push
and
out
loopne
rcr
pop
pop
clc
adc
mov
pop
jnp
repz
add
in
adc
push
test
xor
sbb
add
xlat
mov
jl
shrb
lods
mov
imul
pop
mov
mov
push
lret
add
add
mov
stos
add
sub
imul
xchg
roll
mulb
leave
mov
add
dec
cmc
mov
mov
sub
pusha
sbb
clc
cmp
jg
std
dec
in
iret
pop
es
cmp
aad
pushf
into
cmp
rcl
je
clc
sbb
add
pusha
std
jp
stc
add
pop
or
lret
out
mov
dec
pop
cmp
push
dec
lock
mov
test
addr16
imul
sbb
cmc
inc
add
in
xchg
add
imul
loop
clc
out
test
jl
in
push
sub
les
std
gs
clc
scas
sbb
push
mov
jg
fldcw
pop
xor
clc
adc
mov
and
cmpsb
stc
movsl
jb
lret
mov
dec
pop
enter
mov
add
push
cs
pop
mov
adc
push
jp
push
fildl
adc
in
es
add
push
je
add
test
lds
cmp
sbb
push
icebp
mov
imul
sub
fisttps
pop
mov
cmp
into
test
or
jg
xor
pop
sub
mov
push
xchg
pop
mov
mov
rcrb
outsl
xor
cmp
imul
sub
pop
js
and
pusha
addr16
xchg
ret
adc
test
or
fildl
push
mov
push
push
fwait
dec
cmp
mov
ljmp
pop
add
mov
mov
pop
jle
pop
sub
add
mov
inc
push
sbb
sbb
inc
ja
and
insb
pop
cmp
mov
pushf
js
arpl
mov
daa
add
push
aad
into
addl
sub
and
mov
jne
jl
in
addr16
in
add
in
mov
mov
pushf
mov
es
push
jno
cmp
icebp
mov
lcall
sbb
add
xchg
push
mov
add
cmp
dec
mov
inc
inc
jno
cltd
or
mov
add
xchg
es
into
jo
paddd
mov
dec
mov
test
mov
inc
je
addr16
leave
jle
fisttpll
jnp
xlat
mov
xchg
jmp
lret
push
jge
push
xor
add
push
mov
shl
push
add
int
js
pop
add
cmp
and
push
outsl
loope
mov
or
add
add
shll
jns
cltd
subb
add
sub
mov
and
cmp
nop
out
leave
sub
jno
rclb
xlat
jb
pop
mov
je
cli
cmp
imul
jecxz
mov
sub
jp
xchg
cmpsb
and
rorb
inc
fistpl
mov
sub
jb
aam
rolb
in
fs
jp
xchg
dec
sbb
or
lods
and
les
iret
inc
sbb
mov
add
mov
imul
test
pop
daa
aam
sbb
and
push
shll
add
sub
sub
and
add
xchg
push
stos
xor
popa
adcb
jno
jo
pop
shrb
add
xor
mov
adc
int
xor
or
popl
in
gs
shrl
lds
fisttpl
push
repnz
int3
movsl
lds
and
cld
and
sub
loopne
fucomi
add
pop
ja
add
lret
jl
inc
test
mov
fadd
lcall
mov
dec
movl
xor
dec
cmpsb
out
pop
cmp
scas
add
insb
xchg
setae
mov
in
outsl
aas
cwtl
add
stos
mov
sbb
mov
enter
lret
ds
add
ret
sub
add
jno
nop
push
andl
add
rolb
add
aaa
shrb
jmp
pop
insb
mov
ja
inc
xor
mov
jge
clc
mov
add
push
mov
test
out
out
jmp
xlat
mov
stos
loope
sti
inc
sub
pop
movsl
add
xchg
adc
sbb
mull
in
sbb
int3
lret
dec
xor
arpl
rclb
fimuls
jl
mov
jno
lahf
mov
inc
in
stos
jp
and
add
ds
xor
arpl
sub
ljmp
fiadds
inc
cwtl
scas
scas
ret
int3
icebp
inc
loopne
mov
mov
repnz
sbb
cmp
hlt
orl
lods
sbb
add
pop
mov
add
or
int3
xor
rep
insl
sar
push
add
sub
adc
dec
sahf
fidivs
jbe
or
and
ret
mull
lods
loop
cmpxchg
in
or
in
sub
add
add
jge
add
add
ficoms
cli
nop/reserved
or
push
or
and
adc
fidivrs
adc
hlt
adc
pusha
add
mov
fldl
push
mov
je
cld
mov
mov
fidivrs
movsb
mov
mov
jno
notl
cmp
xor
and
jmp
aaa
ret
in
pop
icebp
pop
aam
call
fsts
nop
adc
int3
lock
and
lcall
out
sbb
outsl
out
aas
jp
sub
ljmp
add
mov
in
cs
ja
out
fwait
pusha
lock
int3
mov
sub
xchg
or
adc
ljmp
imul
add
test
or
or
mov
popa
out
sub
ret
test
cmp
dec
cwtl
jnp
xchg
in
inc
jns
lds
pusha
lock
dec
jg
in
mov
jl
in
mov
pop
cmp
push
dec
cmp
xor
fistpll
sbb
imul
pop
insb
add
sub
int3
jne
jae
cmp
lret
mov
aad
dec
xor
roll
inc
call
xor
and
scas
lds
int3
cmp
popl
mov
xor
clc
inc
mov
das
and
nop
xor
adc
imul
dec
outsb
adc
test
sbbl
fwait
sbb
loopne
mov
cmp
out
push
inc
cld
leave
jg
sub
je
add
fimull
test
movsb
addb
bound
and
xchg
repz
push
js
xor
je
std
mov
add
mov
lahf
rcrb
hlt
mov
mov
lock
cmpl
daa
add
jg
add
xor
or
mov
dec
sbb
mull
cmp
add
pop
push
inc
push
in
or
loopne
or
es
xchg
rclb
dec
pop
outsl
and
add
mov
pop
mov
mov
push
add
rcr
pop
mov
imul
add
and
test
inc
cmp
push
add
cmp
sbb
notb
mov
icebp
dec
jl
push
mov
cld
mov
cwtl
js
add
pop
sarb
fwait
add
push
cld
test
jno,pt
cwtl
add
addr16
jns
or
sbb
cmp
ret
sti
aam
xorb
dec
adc
mov
cvtpi2ps
mov
nop
andb
mov
xor
movsl
mov
add
xor
inc
fldenv
mov
add
sbbb
push
adc
mov
andl
idivl
mov
sbb
xchg
fsubrs
mov
mov
loop
nopl
and
cmp
xchg
das
sbb
enter
arpl
add
push
mov
or
shll
adc
push
pop
push
loop
stos
add
lcall
sbb
push
in
int3
mov
nop
add
shlb
data16
xlat
pop
add
xor
pusha
in
out
clc
out
pop
add
add
mov
out
push
sbb
int3
sub
bound
xlat
mov
dec
stc
in
jmp
jge
add
sbb
out
enter
add
dec
fildl
push
xor
iret
mov
pop
in
roll
sub
push
fldt
lahf
dec
dec
sub
fists
add
add
shrd
outsl
ror
fs
push
fwait
jae
add
dec
push
cmp
push
mov
jge
lret
push
add
aad
fcmovnu
mov
adc
in
movsl
clts
jo,pn
push
xlat
les
in
rclb
loope
ds
mov
scas
jge
test
test
dec
sub
and
mov
rcrl
add
shl
mov
push
repz
or
mov
xor
fdivl
mov
inc
dec
fwait
cmp
cmp
or
pusha
mov
or
pushf
xor
sbb
dec
jns
rorb
shll
test
arpl
jo
data16
jmp
xchg
movsb
cmp
push
iret
cmp
xchg
shll
cli
pushf
icebp
aam
cmp
ds
insl
test
outsl
xor
and
pushf
aam
pop
pop
ds
cmpl
test
dec
fistl
stc
pop
or
lret
xchg
sub
mov
push
xchg
sbb
scas
or
add
test
add
out
mov
ret
movsl
inc
add
jae
jp
es
in
cmp
adc
adc
add
push
addr16
pop
mov
xor
or
out
cli
mov
sub
lcall
cmpsb
mov
pop
fsubrp
sbb
add
cwtl
add
out
lods
pop
cld
cmpsl
shrb
mov
dec
pop
jg
dec
jle
push
daa
shl
bound
je
jl
xor
add
cmp
icebp
add
mov
gs
popl
lahf
into
xor
repnz
jmp
add
mov
add
popa
sbb
adc
movsb
fildl
enter
test
cmc
add
cmp
xchg
clc
push
add
lods
jg
or
mov
jecxz
out
xchg
ss
aam
xadd
xor
leave
sbbl
jmp
xchg
and
js
dec
inc
or
and
outsl
retw
cwtl
xor
xchg
pop
cmc
shll
sbb
push
sub
xchg
mov
test
add
inc
sbb
sbb
sub
jae,pn
xor
xchg
push
add
cmp
mov
lock
xor
pop
jle
lds
adcb
push
and
aaa
add
es
adc
ret
jae
add
icebp
xchg
js
rcrl
shrb
sbb
lds
mov
lret
inc
test
pop
push
movsb
jl
jns
clc
daa
or
sbb
sbb
int
jo
test
push
jge
sbb
gs
inc
xchg
mov
adc
jmp
and
xor
addl
and
push
xchg
jae
pop
insb
inc
rorb
insl
movsb
cmp
test
ret
shl
nop
jbe
lods
xlat
call
data16
out
loope
or
sub
cmp
jmp
sbb
mov
inc
shl
aas
push
cmp
stos
sbb
pop
add
xlat
push
test
sbb
stos
cmp
jne
pop
fnstsw
add
fstpl
add
out
test
fsubl
xorl
fmuls
add
icebp
ss
outsb
mov
test
jno
cli
mov
test
add
lea
in
adc
leave
fsubl
mov
sbb
pushf
v4fnmaddss
repnz
sahf
stos
add
add
mov
nop
cmpsb
add
test
or
sub
lea
mov
or
push
push
sub
jmp
lock
adcb
and
in
add
inc
gs
mov
mov
movsl
ret
fcomip
pop
mov
in
jecxz
cmp
and
push
out
sub
adcb
and
sbb
sbb
out
sbb
dec
adc
adc
movl
xchg
out
divl
std
sub
fdiv
scas
add
pop
pop
lods
shll
addb
lahf
js
push
shl
daa
pushf
pop
add
mov
or
add
jne
nop
bnd
jle
mov
cmc
push
push
jge
mov
add
push
pop
jnp
or
add
fisttps
nop
add
xchg
push
sbb
add
int3
xchg
mov
outsb
cmp
cmc
lds
mov
enter
sbb
adc
push
add
xchg
push
ja
add
add
insb
jbe
scas
cmp
add
mov
push
xchg
add
outsl
lods
add
loopne
adc
xor
add
lock
sbb
inc
in
movsl
cmc
sar
imul
add
adc
aaa
mov
lods
mov
push
add
sub
xchg
and
in
pop
push
fnstcw
add
out
mov
ss
cmp
add
lods
jne
add
mov
add
lods
sar
inc
add
cmp
adc
sbb
mov
insb
not
push
hlt
lahf
sub
or
xor
pop
add
jmp
cmp
je
loopne
lahf
pop
test
adc
add
mov
pusha
movsb
xchg
add
repnz
iret
add
ror
push
jle
cmpxchg
push
data16
lods
ljmp
mov
shrl
sub
jl
add
aam
jbe
loope
jo
jnp
xchg
ss
and
mov
xchg
test
icebp
fcmovb
rolb
add
or
push
pusha
and
sub
xor
adc
push
imul
jo
inc
loope
push
xchg
add
jae
jbe
ds
add
cmp
ljmp
daa
push
test
cmpsb
fadd
mov
sarl
fistpll
lds
ds
aam
add
dec
push
test
xchg
jo
rcrb
mov
add
orb
leave
jno
add
es
out
data16
or
push
mov
inc
js
inc
pop
add
mov
or
xorl
jnp
add
mov
dec
cmp
mov
and
mov
add
and
jle
shl
sub
ljmp
jb
fsubl
cld
push
cwtl
and
add
cmp
add
sbb
inc
add
daa
push
out
fiadds
fwait
dec
inc
xchg
sub
insb
mov
cmp
shl
je
add
push
xor
xor
in
in
int3
loopne
mov
add
outsb
xchg
pop
in
xor
dec
pop
add
adc
push
sbb
inc
cmp
test
mov
adc
mov
wrmsr
es
test
fistpll
mov
cmp
int3
out
addr16
pop
jo
pusha
ja
lahf
add
adc
push
add
pop
popf
movsb
popw
pop
inc
out
or
add
push
test
cld
in
scas
pop
std
int
mov
outsb
ret
add
js
loop
lods
dec
xchg
lock
add
jo
ljmp
inc
sub
pop
test
xor
add
sbb
or
xor
add
test
lods
jmp
test
imul
add
inc
mov
movsb
and
sub
into
cs
shll
push
bound
add
sub
lods
mov
push
lcall
stc
mov
pop
pusha
or
mov
add
pop
aad
jl
adc
add
xchg
mov
std
or
stc
sub
in
push
ret
lret
mov
enter
xchg
andl
les
inc
pop
mov
fistps
out
lea
add
decl
mov
les
push
add
lds
add
add
or
sbb
cmc
orl
or
pushf
xorb
push
xchg
dec
repnz
cmp
punpckhwd
jno
mov
cld
add
insl
int
rorl
ret
jecxz
cmp
repnz
sbb
shrb
lock
mov
jb
shll
mov
sbb
lods
add
lea
add
cmc
push
lret
imul
test
data16
lods
mov
sub
xlat
loopne
loop
xchg
rcrl
mov
jl
sub
scas
pop
lods
test
sarb
psrld
test
inc
xchg
je
ret
leave
xchg
fdivs
cmp
mov
lock
mov
mov
cwtl
rolb
pusha
cmp
or
ljmp
loopne
mov
dec
push
cmp
loop
fs
call
test
nop
addb
sbb
jecxz
add
push
imul
sub
dec
add
popf
cmpsl
dec
jl
shrb
xchg
ds
nopl
cmc
sahf
popf
out
add
pop
js
jno
mov
clc
cld
mov
aaa
add
cltd
pop
adc
pushf
sub
nop
or
stc
jmp
mov
arpl
add
jl
jg
push
fidivrs
mov
div
adc
inc
cld
mov
jne
sahf
add
sti
xor
fstpl
addl
pop
add
xor
fistl
add
fs
push
dec
sub
and
lods
and
cmc
add
xchg
shl
jae
out
add
lahf
ja
bound
cld
sbb
ds
mov
mov
ficomps
and
jnp
loope
pop
cmp
mov
xchg
addl
dec
adc
add
jle
loopne
in
push
push
jb
fs
mov
or
jmp
xor
mov
add
dec
pop
jmp
add
sub
inc
jbe
mov
pop
clc
addps
fiadds
mov
ds
pop
pop
shrl
test
fmul
mov
in
sub
aad
loop
jp
add
lock
xchg
lcall
jb
add
ret
add
inc
sbb
hlt
inc
xchg
enter
mov
dec
nop
cli
adc
jo
adc
xor
adc
lods
stc
add
aam
add
pusha
and
mov
or
pop
push
add
pop
stc
es
sarb
xchg
add
inc
cmp
jne
lods
add
pop
adc
montmul
cmpsb
inc
in
js
mov
inc
punpcklbw
std
push
mov
imul
popa
xchg
add
dec
add
add
add
jmp
mov
adc
jb
cmp
dec
sbb
mov
or
stos
cmp
add
pop
jno
add
xor
mov
lods
ret
lret
add
or
or
inc
mov
push
cwtl
ret
sbb
out
mov
loopne
inc
mov
mov
xor
sbb
or
cmp
jmp
push
cmpsl
pop
and
scas
inc
push
push
sbb
imul
fildl
add
movsb
mov
add
std
cli
inc
sub
mov
pop
imulb
mov
pop
xor
add
dec
add
add
sti
in
je
add
jp
xchg
add
cmpsl
and
imul
loop
test
sub
xchg
inc
jno
dec
jo
into
arpl
add
mov
es
add
add
cs
movsb
sti
jl
xor
inc
cmp
pop
mov
jo
cltd
sti
add
in
test
lock
add
adc
add
out
jmp
jp
mov
adc
jmp
add
add
adcb
add
adc
cli
cmp
sub
add
std
jecxz
loopne
jmp
rclb
jmp
add
pop
push
hlt
add
add
enter
enter
data16
mov
daa
out
stos
add
out
sbb
addl
mov
adc
insl
add
add
test
mov
mov
cmpsl
int3
or
push
imul
jge
hlt
enter
cmp
gs
jne
adc
cltd
pop
xor
xchg
add
rclb
aas
inc
aad
mov
pop
invd
and
add
adc
popa
pop
lock
add
cs
cwtl
mov
rcl
leave
jns
add
aam
iret
sub
into
int3
sbb
lea
filds
mov
add
shll
add
add
xchg
loope
repz
fldenv
add
pop
mov
jmp
call
data16
imul
xchg
add
lock
arpl
mov
inc
add
or
or
push
rorb
test
fbld
push
str
dec
ret
faddl
aaa
and
in
aam
add
stos
xchg
notb
push
jecxz
xchg
movsb
loope
dec
loop
add
fdivs
mov
movsl
add
leave
mov
push
inc
repnz
aam
push
mov
sub
pushf
add
jge
popa
xchg
js
mov
mov
pop
cmp
sbb
adc
divl
adc
adc
mov
sbb
in
stc
xchg
out
shlb
pop
popf
mov
jns
push
shlb
ret
mov
lahf
lea
push
jg
jmp
pop
and
aas
sub
pop
push
movsb
mov
push
aam
add
std
mov
bound
pop
ljmp
orb
test
mov
scas
daa
jne
sub
pop
mov
arpl
xchg
mov
dec
add
jmp
push
loope
mov
and
add
popa
cmpsb
add
add
mov
pop
ljmp
fs
inc
add
sub
call
leave
mov
bound
in
push
clc
sbb
lret
and
es
fdivrs
rcrb
add
dec
push
bound
and
add
adc
pop
or
rcr
and
adc
sub
pop
xlat
add
gs
jae
or
jl
shlb
adc
pop
jno
add
fbld
cmp
add
cmc
xchg
sbb
movsl
sbb
add
test
cltd
int
mov
mov
les
adc
lahf
xchg
jmp
lods
push
shr
mov
add
xor
add
cmp
pop
movl
push
insb
jbe
xchg
add
add
dec
adc
aas
es
lret
mov
fwait
cmp
mov
sbb
mov
aas
sti
loopne
js
pop
mov
loop
mov
cmpsb
push
ljmp
dec
ficoml
add
mov
mov
inc
pop
fadds
xchg
lcall
add
arpl
jg
mov
popa
fiaddl
cmpsb
dec
xor
sub
sbb
sbb
popa
orb
pushf
rolb
test
call
jmp
mov
cwtl
push
dec
add
cltd
sti
mov
mov
or
push
lcall
add
cltd
mov
adc
adc
test
cmpsb
fwait
inc
shl
lret
shl
jno
jge
add
pop
aaa
push
lock
jmp
inc
nop
push
adc
add
or
sub
jecxz
andl
xor
add
cwtl
iret
sbb
fcmovb
ret
jl
test
xchg
or
call
mov
push
call
es
sub
andl
imul
pop
mull
sti
shrb
add
out
clc
xlat
sbb
add
adc
cmp
jb
movsl
pop
les
mov
fistpl
gs
pop
and
stos
ljmp
mov
push
sub
xor
adc
cwtl
in
lods
movsb
jo
xchg
sbb
cmp
dec
push
add
push
cld
push
orb
out
push
jg
jmp
cmp
int
scas
push
pop
jl
add
jge
dec
add
inc
test
dec
and
add
int
clc
add
mov
mov
add
in
add
dec
and
jne
lds
mov
pop
iret
jl
mov
insb
jmp
or
movsl
pusha
jp
leave
aam
add
fistps
ljmp
cwtl
pop
add
dec
mov
sub
ret
stos
jnp
int3
ljmp
fidivrl
out
mov
sub
add
subb
or
dec
add
out
movsl
mov
mov
adc
jbe
and
or
mov
sub
std
pop
movsb
xor
pop
jl
cltd
in
mov
negl
in
decl
out
and
icebp
mov
xor
lods
jnp
pop
jb
jno
mov
pop
add
add
fildl
adc
pop
test
mov
or
push
and
add
add
mov
add
mov
jne
push
imul
sarl
stos
xor
stos
das
push
add
cmp
rcl
jae
add
je
sub
mov
pop
add
aas
jle
or
std
lcall
and
fiaddl
pop
jle
ret
sub
dec
jp
adc
dec
icebp
inc
add
mov
lods
add
add
cmpl
aaa
mov
xchg
cmp
cmp
dec
mov
add
repnz
lock
lods
push
repz
and
pop
xor
stos
add
out
addb
jb
cmp
add
mov
adc
pop
mov
dec
dec
ret
insb
loopne
or
mov
imul
insb
dec
cmpb
filds
rol
sub
add
aaa
test
jmp
sbb
adc
jp
cmpb
pop
sarb
hlt
cmc
add
dec
lahf
cwtl
add
xorb
mov
repnz
add
jecxz
int3
or
mov
pop
call
dec
mov
fsubrl
bound
and
mov
dec
and
pop
add
cmp
sbb
in
add
sbb
inc
popl
sub
add
mov
mov
shll
cmpsb
and
mov
jbe
out
outsb
add
out
andb
jb
add
lcall
pop
dec
jns
orb
sub
loope
lock
mov
sti
jp
cwtl
jae
out
ficomps
test
dec
and
je
out
lock
mov
mov
rcl
test
outsl
nop
pop
add
dec
add
testl
aam
in
fiaddl
iret
xchg
rcrl
add
nop
leave
ficoms
add
ret
add
inc
mov
aaa
and
sarb
in
or
cwtl
sbb
add
stos
rcrb
rorb
mov
pop
arpl
add
sub
cmp
repz
ds
adc
mov
inc
es
add
in
xchg
push
and
adc
add
add
cmpsl
pop
aad
lea
inc
sub
mov
ret
movsl
subb
push
shll
jnp
out
dec
aas
push
mov
sub
inc
cmp
jecxz
cmp
faddl
out
mov
mov
push
nop
xchg
out
push
xchg
add
cltd
add
add
inc
or
je
pop
faddl
push
nop
push
pop
push
add
sbb
cwtl
arpl
push
cld
in
pop
repz
fwait
jp
out
jecxz
stc
rorl
es
add
mov
xchg
jmp
xchg
ja
mov
insl
mov
dec
hlt
ficoml
pop
add
inc
sbb
add
rclb
data16
adc
add
pop
pop
cmp
ret
inc
push
add
cmp
iret
lret
idiv
add
cmp
xor
xchg
xchg
iret
inc
ss
pop
in
ret
push
jmp
dec
add
icebp
mov
mov
add
sub
rorb
shrb
pop
sub
mov
daa
cld
psubw
push
xchg
xor
sub
push
sti
lods
ret
add
fmull
push
jl
add
je
clc
dec
push
or
repz
cmpsl
ss
push
jg
fwait
test
cli
rolb
nop
and
cmp
enter
lcall
cwtl
push
lret
rcrl
in
and
icebp
int3
dec
aas
imul
push
push
addr16
inc
insb
mov
dec
call
xor
popf
add
xchg
lcall
xchg
dec
xor
add
scas
add
scas
xchg
lahf
or
and
jo
or
add
cli
jno
dec
adc
xchg
adc
inc
dec
or
fwait
shl
cmp
mov
mov
sti
sbbb
xchg
sub
and
sbb
or
shlb
leave
add
mov
sbb
lods
and
lods
mov
pop
gs
nop
popa
pop
dec
jbe
rorb
add
outsb
out
add
sti
and
push
sbb
clc
insl
in
jne
or
fiaddl
adc
dec
mov
pop
jnp
add
out
sbb
lret
mov
or
fs
or
popa
loope
jne
repz
repnz
fbld
incb
inc
inc
jo,pt
mov
rolb
add
push
adc
cmpl
movsb
ja
jmp
fwait
mov
call
add
wrmsr
sub
insl
pop
add
ret
xchg
dec
mov
rcrb
lcall
sbb
inc
add
xor
and
aas
add
jge
sub
or
mov
pop
or
fs
or
sub
pop
push
add
loopne
test
jno
and
and
hlt
cwtl
push
test
mov
lds
add
add
jns
pushl
push
roll
mov
insw
orb
outsb
jns
sub
repz
or
loopne
inc
xor
mov
das
aas
cmp
add
mov
pop
cmp
pop
mov
add
dec
pop
insb
cmp
repz
inc
js
lods
add
push
testb
or
popa
ret
insb
pop
in
add
and
cmp
lods
cwtl
jl
xchg
mov
js
adc
mov
add
and
dec
jecxz
add
xchg
mov
jo
inc
add
cmpsl
hlt
add
jbe
incl
insl
es
js
dec
inc
in
push
mov
jl
cmp
addr16
and
loopne
loope
dec
add
ficomps
pop
stos
leave
roll
lahf
mov
inc
js
std
xorb
cmpsl
xor
lock
lds
mov
incl
dec
in
add
cs
dec
roll
in
dec
jge
lcall
pop
movsb
dec
sbb
sub
add
inc
lods
and
ss
fbld
xchg
pop
pop
outsb
push
popa
and
loop
pop
fwait
pusha
js
push
sub
xlat
jb
or
scas
xchg
mov
ds
add
pop
mov
mov
ret
test
scas
xor
mov
add
fnsave
cmp
es
mov
imul
push
mov
loope
leave
bound
push
mov
dec
sbb
push
inc
xchg
or
call
popf
and
gs
loop
es
add
lcall
jle
cs
xchg
orl
shlb
add
inc
mov
icebp
bound
rorb
sbb
pop
pop
pushf
add
shlb
jg
pop
btc
dec
das
inc
mov
push
fwait
add
aas
or
xchg
add
dec
fdivr
inc
sbb
std
fs
and
aam
inc
in
add
xchg
fnstcw
rcll
fldl
rorb
xor
or
loop
jge
repz
xor
faddp
mov
sub
jle
dec
push
add
sub
sbb
adc
xor
nop
pop
je
sbb
add
push
movsb
adc
cmp
stos
push
mov
inc
pop
int3
xor
out
sbb
add
sbb
repnz
push
cmc
out
loopne
add
sub
pop
sti
sub
les
in
sbb
lret
mov
mov
and
outsl
or
add
add
add
stc
sbb
mov
sub
data16
adcb
jp
add
or
xor
enter
loopne
int3
adc
pop
sbb
lahf
push
mov
jb
adc
outsb
add
cmc
les
add
sarb
push
add
or
lock
dec
fisttps
imul
sbb
mov
andb
enter
sahf
cld
pop
add
scas
and
jno
add
daa
jno
push
jae
add
dec
loopne
add
mov
push
inc
mov
jnp
mov
add
hlt
iret
shl
add
add
stos
mulb
add
or
stos
sbb
rcrb
jge
bsr
xor
pop
dec
xor
or
sub
mov
pop
and
sarb
adc
cmp
ja
ret
dec
lret
mov
daa
pushf
mov
lcall
dec
and
or
cmp
or
add
test
loopne
int3
push
and
cmp
gs
out
push
dec
std
mov
ja
cmc
dec
shlb
mov
sti
dec
inc
add
stos
loop
add
push
cld
xchg
lahf
inc
add
or
mov
push
leave
xchg
mov
add
int3
jle
mov
jmp
and
xchg
pop
sub
jl
lea
insb
outsb
lcall
adc
icebp
leave
frstor
xchg
shlb
scas
add
push
int3
leave
cmpsl
jnp
mov
cmpsb
subl
nop
pushf
icebp
divl
add
push
mov
sbb
add
jae
xchg
scas
push
add
add
fndisi(8087
jecxz
cwtl
add
or
fwait
pushf
inc
dec
addb
inc
rcl
and
sbb
inc
and
cmpsl
cld
inc
dec
fsin
popf
mov
cmp
cmp
js
pop
faddl
sbb
je
dec
movsl
mov
lock
jp
or
or
cmp
fldenv
sti
cmc
repnz
std
repz
adc
add
ficoms
add
call
insb
push
mov
lock
aaa
enter
ret
fmull
push
xchg
add
pusha
mov
inc
and
mov
add
and
inc
fs
xlat
add
mov
popf
add
pop
shlb
sbb
filds
sbb
add
fisubrl
ficoms
mov
stc
sbb
pushf
or
js
xchg
movsl
int3
push
mov
in
shll
aas
inc
add
push
aaa
jle
insb
mov
add
sbb
int3
add
inc
cmpl
inc
idivb
test
inc
sahf
and
adc
test
mov
es
xor
daa
ljmp
mov
jne
pop
cli
adc
mov
add
enter
wrmsr
dec
or
xchg
add
cmp
shl
arpl
fidivrl
test
xlat
aam
push
add
xor
sub
test
mov
pop
mov
sub
push
xor
or
gs
testb
rorl
arpl
pop
outsb
mov
rcrb
clc
ljmp
add
mov
imul
sub
xor
cmp
cltd
imul
jnp
mov
mov
mov
sbbb
lods
pop
jne
mov
std
daa
fwait
ret
orb
pminub
out
jns
lds
xor
call
filds
pop
jbe
sub
mov
add
adc
push
push
xor
cs
iret
xor
movsb
fsubl
add
adcb
repnz
pop
push
lcall
lahf
bound
insb
in
xchg
add
push
sbb
lret
jl
fmull
push
jae
fwait
push
into
add
and
add
adcl
add
sbb
popa
js
call
or
aaa
and
pushf
bound
pop
insb
xchg
ret
sbb
mov
lock
fldl
das
inc
sub
aas
fdivl
add
mov
cwtl
aam
push
add
clc
rcrb
or
fwait
sbb
push
dec
test
jle
nop
add
pop
mov
icebp
cmp
inc
dec
xchg
jbe
decl
inc
mov
add
cld
sub
test
cli
daa
add
jo
lahf
mov
imul
testl
sub
or
cmp
lret
and
sarl
add
jno
mov
xchg
add
or
pop
aas
enter
and
minps
pop
adc
dec
mov
jg
fstpt
add
or
cli
inc
inc
lds
in
push
jge
pop
add
mov
xchg
xchg
add
in
jle
fwait
inc
enter
xchg
negb
mov
fiadds
std
or
or
inc
add
pop
das
inc
lock
push
cmpsb
in
push
in
loopne
call
in
sub
inc
arpl
aam
out
add
cld
hlt
cmp
je
add
dec
stos
and
mov
orl
fnstsw
add
add
jae
cmpsb
mov
add
imulb
cmp
mov
test
jp
inc
ss
mov
shll
fistpl
decl
mov
adc
test
sbb
add
add
pop
imul
mov
lods
les
pusha
bound
mov
clc
aad
cmp
je
dec
mov
rorl
cmp
xor
inc
add
pop
lock
push
pushf
in
add
pop
jl
sahf
es
cld
movsl
push
inc
push
add
lds
inc
int3
outsl
inc
mov
out
mov
add
arpl
add
inc
int
stos
shlb
daa
add
inc
jne
and
jg
add
insl
sbb
add
inc
pop
xchg
adc
lods
dec
push
add
lcall
clc
and
mov
add
mov
movsb
gs
dec
cmp
add
add
add
cmpsl
jno
push
mov
jecxz
jbe
cmp
push
add
dec
js
pop
or
push
sbb
outsl
adc
leave
add
push
in
jnp
sbb
dec
xor
mov
mov
xor
inc
pop
sbb
popf
mov
cmpsb
testb
pop
jp
xchg
icebp
mov
jl
add
inc
mov
sub
sub
add
je
aad
lods
stos
xchg
add
es
push
orb
add
gs
push
mov
push
push
in
insb
popf
sahf
cmc
mov
sbb
jg
add
addr16
cld
add
pop
imul
cmp
sbb
cmpsl
mov
push
xor
sub
pop
loopne
cmpb
push
xor
mov
pop
roll
add
cld
sbb
adc
repnz
adc
mov
add
scas
adc
lods
test
or
rep
add
adc
sub
testb
data16
mov
out
pop
into
stos
fstps
add
pop
push
cmc
pusha
jnp
add
enter
nop
movl
jp
addl
in
cmpsb
dec
sbbb
subb
and
imul
mov
lds
ror
into
cmp
out
or
and
push
cld
pop
add
cmp
cmpsb
jns
sub
mov
sbb
je
adc
outsl
hlt
out
add
aas
sub
mov
mov
outsl
adc
enter
cmpsl
jns
ljmp
xchg
aad
xchg
fs
scas
fsubs
add
push
lods
into
cmp
cs
push
add
and
xchg
dec
iret
int
and
mov
pop
push
jl
out
push
bnd
add
pushf
dec
mov
or
dec
sbb
lods
repz
mov
push
mov
or
mov
xor
stos
jae
adc
push
pop
add
ret
pusha
mov
inc
cs
loopne
mov
repz
ret
xor
outsb
mov
call
add
xchg
mov
call
inc
and
add
and
add
andb
and
pop
leave
mov
or
fwait
movsb
pop
and
push
mov
cmpb
sbb
cld
and
push
pushf
stos
add
cwtl
int3
in
ret
mov
jnp
inc
push
add
sbb
push
bnd
pop
mov
inc
adc
clc
adc
out
loopne
cmpb
sub
test
add
mov
out
inc
outsb
adc
dec
dec
scas
inc
xorb
sbb
inc
ljmp
shl
push
mov
dec
test
mov
aad
lcall
out
outsb
and
jo
inc
adcl
add
fcmovnbe
mov
push
add
int
pop
in
fwait
cli
test
inc
fadds
lea
fwait
or
das
add
adc
add
xchg
fisttpll
add
je
jp
xchg
nopl
rolb
lds
pop
cmp
pop
xor
int
mov
cld
mov
jl
adc
inc
jns
sub
mov
imull
add
sub
add
out
mov
push
jbe
add
mov
xchg
jo
add
cmp
ficoml
or
test
cmc
push
loop
aas
enter
or
movl
mov
sbb
add
pop
repnz
in
std
inc
or
jo
pop
add
push
outsb
push
add
in
cwtl
inc
fisttpll
and
gs
mov
pushf
inc
inc
pusha
mov
mulb
push
add
adc
xor
sbb
cmp
xchg
mov
jb
inc
jmp
inc
push
movsl
sti
rol
pop
cmpsl
in
fadds
mov
cmp
add
test
xchg
adc
or
pop
inc
dec
ret
popl
icebp
repz
enter
push
push
imul
ss
sbb
cmpsb
adc
testb
sbb
inc
orb
sbb
lahf
sbb
and
mov
add
js
xlat
fldl
dec
pop
popf
jae
jmp
clc
dec
dec
movsb
lret
loopne
daa
inc
push
add
movsl
add
xor
and
or
push
pop
add
movsb
sti
lcall
jbe
push
add
xchg
stos
jmp
fidivrl
incb
ja
fwait
lea
test
fisttps
push
add
call
popf
inc
cmc
xor
adc
push
inc
pop
jo
or
lret
dec
xor
iret
sbb
mov
pushf
cld
mov
inc
sub
jmp
add
mov
test
pop
leave
jo
pop
lds
dec
and
ficompl
iret
jns
lcall
push
mov
xchg
and
sub
jmp
fstl
mov
or
fidivl
imul
lock
adc
jmp
xor
out
add
xchg
lret
jb
dec
mov
lock
jne
or
inc
clc
add
mov
adc
es
sbb
lods
xchg
push
or
push
push
addl
shlb
mov
testl
inc
add
in
inc
push
add
push
pushf
pop
dec
lods
xor
mov
and
mov
add
daa
mov
fnsave
cmc
in
xlat
add
pop
addb
dec
add
jns
fsubl
or
lahf
icebp
xchg
add
stos
push
lods
cmp
out
inc
xorb
pmulhw
add
icebp
mov
adc
adc
mov
push
dec
orl
ret
gs
pop
sahf
pop
out
aaa
push
dec
mov
negb
out
test
mov
push
mov
pusha
lock
lcall
clc
add
cmp
cmovge
movsb
sbbb
outsb
jnp
inc
push
sbb
jmp
add
dec
sar
ret
loopne
ret
imul
add
adc
push
icebp
pop
jns
daa
iret
test
or
and
jl
adc
stos
jbe
xorl
mov
testl
out
test
sub
inc
int3
in
cld
adc
add
filds
sub
loop
add
or
pop
add
ljmp
movb
scas
divb
jne
in
adc
add
jge
sti
loop
inc
sbb
dec
dec
out
inc
push
push
daa
out
rolb
sub
sbb
arpl
push
mull
ljmp
cld
in
test
std
nop
inc
clc
pop
sbb
daa
das
push
add
mov
add
repnz
add
aad
ss
pop
adc
adcb
mov
cmp
shlb
adc
xchg
mov
sbb
cmp
add
adc
push
add
das
xchg
add
mov
inc
outsl
scas
loopne
sub
or
adc
inc
adc
hlt
add
pop
mov
push
filds
xchg
add
add
clc
inc
repz
mov
push
adc
mov
outsb
repnz
pop
out
add
adc
add
jbe
std
pusha
rolb
addps
adc
jmp
mov
or
pop
mov
push
xchg
mov
outsb
cmpb
add
add
xchg
scas
and
cld
movsb
mov
add
xchg
or
xchg
mov
push
rorb
ljmp
sbb
add
sarl
mov
xchg
fsubrl
in
cs
xlat
dec
sbb
add
cmp
push
inc
or
fmul
mov
pop
mov
shl
dec
push
or
jp
cwtl
xchg
gs
int
add
leave
movsb
pusha
mov
add
scas
fcomp
pop
aaa
arpl
mov
jg
push
roll
pop
xor
add
ret
sarl
xchg
push
stc
or
sbbb
or
add
or
and
insl
add
sti
pop
rcl
js
add
and
nop
call
adc
mov
dec
pop
pop
je
and
add
xchg
add
pop
xchg
adc
and
jns
adc
lods
fsubrs
add
outsb
add
push
inc
adc
cld
ja
pop
push
jecxz
stos
pushl
jg
cltd
dec
call
pop
xchg
fcom
add
sbb
test
enter
and
test
mov
out
rclb
mov
dec
fld
adcb
insb
arpl
xor
sub
call
inc
push
and
repnz
lock
xchg
dec
leave
add
stos
mov
jge
push
add
add
ja
inc
scas
or
int
cmp
pusha
testl
clc
andb
in
or
add
pusha
int
ja
es
push
pop
repz
andl
insl
jne,pt
add
add
fadds
inc
outsb
out
xor
filds
inc
lret
mov
jb
and
sbb
push
add
jl
cwtl
sub
test
and
mov
insl
mov
cmp
mov
mov
inc
sbbl
xchg
decb
lock
and
test
popa
add
test
push
loopne,pn
jae
xor
pop
jg
fcmovnu
jne
sbb
aaa
subb
xor
cmp
jbe
jnp
aad
out
je
pop
in
pop
add
pop
xor
and
sbb
add
rolb
int3
add
movsb
jns
leave
adcl
pop
add
arpl
cmpw
mov
popf
popf
jns
xchg
hlt
add
sbb
inc
dec
ja
add
lret
push
add
jns
add
push
adc
imul
dec
subb
add
mov
stos
nop
pop
pop
or
mov
rclb
frstor
dec
lea
insl
dec
test
pop
pop
add
mov
sub
stc
fs
pop
lods
pop
aam
test
add
ja
and
pusha
cli
xchg
xchg
dec
jg
notl
pop
sarl
and
and
inc
and
mov
call
fistl
popl
add
adc
test
sar
adc
es
jl
xlat
xor
subl
add
xchg
xchg
pop
sub
mov
xchg
jb
ret
ljmp
jle
xor
or
and
dec
enter
int
stos
test
sarl
aad
mov
sbb
and
sbb
scas
xchg
inc
xor
inc
fwait
sbb
mov
cld
mov
mov
cmp
lahf
add
and
popa
adc
add
outsb
mov
shll
ret
cmp
cmc
add
test
test
call
add
mov
adc
ja
outsb
fbld
ljmp
inc
clc
xor
push
xchg
das
inc
and
fidivrs
fldl
jnp
sbb
into
sbbb
cmp
xor
inc
testb
lock
clc
inc
clc
lret
pop
das
rcl
inc
add
xchg
stos
cltd
or
cmp
jl
lock
pop
or
adc
sub
xor
cmp
outsl
push
addb
inc
cwtl
lahf
jb
adc
arpl
xor
orb
shll
add
push
lock
sbb
jae
jl
je
push
cmc
insl
repnz
jmp
mov
pop
xlat
push
add
xor
mov
rorb
add
pop
ficompl
lret
jbe
mov
add
in
inc
call
pop
jno
testl
xlat
fisubrl
sub
loope
cmp
jo
loopne
shlb
pavgw
mov
ljmp
ds
scas
xchg
int3
add
dec
jmp
add
mov
and
pusha
lods
aas
cmp
adc
ja
mov
sub
dec
es
into
xchg
add
rorb
nop
outsb
push
adc
xchg
iret
and
lret
shll
inc
push
or
inc
jnp
hlt
ss
mov
shlb
xor
inc
or
int3
pop
mov
les
mov
xchg
mov
add
loop
sub
add
sbb
add
push
sub
fcmovb
add
aas
enter
add
and
add
fwait
mov
mov
xchg
test
jns
cli
sbb
cmp
dec
add
push
fwait
mov
jne
loopne
bound
mov
movsb
pusha
xchg
sbb
fcmovu
add
sub
cmp
mov
mov
call
xorb
sub
lret
lock
xchg
into
push
mov
js
inc
jns
cmpsl
xor
mov
dec
mov
and
add
xor
inc
bound
adc
push
ja
call
xlat
add
scas
pop
jb
loopne,pt
pushl
bound
insb
jg
adc
pop
add
xor
push
dec
or
scas
jae
mov
in
sub
cltd
lock
sbb
push
xor
pop
push
add
mov
ret
mov
mov
lods
lea
mov
push
push
add
xchg
in
shr
add
jbe
add
aas
jbe
loope
pop
pop
or
jno
subb
bound
add
xchg
data16
out
rclb
jnp
pop
and
mov
cmp
inc
xorb
lods
add
cs
xor
cli
test
aam
pop
add
push
and
adc
enter
leave
mov
jmp
pop
cwtl
fwait
pop
xchg
sub
pop
je
pushf
xor
add
mov
sub
sbb
pusha
test
jle
jb
mov
add
inc
sarb
mov
xchg
lahf
inc
xchg
dec
inc
cmpsb
or
pusha
je
aad
inc
in
jbe
lds
xchg
add
mov
or
mov
sub
popa
sub
std
add
add
adc
scas
push
and
or
cmp
dec
subl
pop
inc
inc
pop
pusha
inc
adc
sbb
outsb
push
add
push
lea
jne
cmp
ss
shl
add
dec
add
mov
xchg
pop
scas
lea
adcb
mov
aas
jg
fisttps
in
inc
out
sti
icebp
inc
pop
xor
mov
mov
add
mov
hlt
cwtl
int
jg
fsubs
fbstp
repnz
out
mov
jp
jae
adc
inc
cltd
ljmp
or
mov
add
and
lods
jb,pt
orb
cmp
or
push
inc
mov
add
inc
in
imul
inc
cld
jp
sub
cld
and
sbb
add
nop
lret
dec
in
adc
xchg
add
pop
movsl
jo
dec
cmp
push
ja
sub
sarb
add
cs
xlat
mov
into
loop
or
popa
or
rcl
add
and
imul
dec
cli
int
add
xor
fdiv
pop
call
stos
cmp
push
pop
pop
pop
ljmp
mov
filds
and
dec
jge
or
pop
loope
or
rcll
test
shlb
push
dec
add
inc
imul
sub
cmp
dec
orl
into
hlt
rcrb
pop
sbb
pop
cld
dec
pop
add
js
jno
mov
xchg
mov
enter
add
and
fsts
xchg
lea
leave
jne
pop
int
aad
jg
out
add
clc
seta
jecxz
rclb
mov
lret
rcl
jns
call
aad
push
lea
and
add
in
pop
sub
pop
imul
hlt
mov
cmc
aam
cmp
jno
xchg
jns
inc
cld
push
add
rorb
jnp
into
sbb
jge
lock
subl
fisttpl
pop
inc
inc
push
jg
mov
pop
negb
add
jno
test
ret
add
xchg
lods
sub
fistpll
xor
pop
fldl2e
add
add
cltd
lcall
add
dec
loope
pop
mov
js
inc
cmovs
movsb
imul
stc
lods
push
clc
xchg
sub
jo
or
sbb
mulb
dec
test
daa
adcb
movsb
sbb
pop
dec
mov
pop
cmp
out
inc
ror
cmp
in
add
jle
lods
mov
sbb
add
sar
push
push
pop
xor
scas
push
std
adc
dec
mov
and
cmp
add
into
hlt
mov
addr16
fstps
cmp
in
orb
pop
push
sbb
or
ret
ja
pusha
es
and
mov
add
stos
mov
mov
sbb
cmp
fidivl
fdivrs
testl
js
icebp
jmp
adc
jno
add
mov
and
je
sub
sahf
mov
push
pop
jb
fnstcw
lods
int
or
dec
pop
rclb
test
or
lahf
push
cmp
lret
or
nop
push
cmp
add
mov
in
cmc
and
xchg
add
push
dec
cmp
frstpm(287
setl
les
negl
pusha
mov
mov
fdivl
into
gs
cmpsl
scas
inc
or
cmpsb
mov
cmp
push
inc
loopne
add
inc
mov
stc
loope
mov
or
out
lea
push
mov
mov
pop
test
nop
add
add
stos
cmc
es
repz
or
mov
xor
lahf
dec
xchg
mov
leave
inc
push
inc
pop
xor
pop
add
or
xchg
xchg
clc
adc
push
add
and
rolb
fdivl
dec
mov
aam
or
sahf
flds
inc
clc
lahf
add
data16
cmp
jl
xorb
xchg
les
sbb
je
pop
andb
xchg
xchg
add
sbb
inc
add
pop
pop
out
add
test
sub
mov
push
mov
idivl
leave
cmpsb
inc
sub
stos
xchg
pop
adc
gs
arpl
add
sarb
and
rcll
jg
add
jnp
and
cmp
mov
mov
int3
pop
xorb
or
in
xor
mov
ret
icebp
fstp
fdivrp
mov
push
std
leave
in
xor
and
mov
sbb
nop
xchg
test
mov
cmp
arpl
flds
push
push
sbb
xor
sbb
decl
jae
cmpsl
xchg
es
dec
add
lock
scas
add
sbb
out
leave
call
ljmp
cmp
and
jmp
shll
sub
lock
movsb
lock
in
pop
lret
jl
inc
les
test
add
inc
hlt
dec
rcll
cld
rorb
push
sarl
push
jmp
lret
mov
jne
mov
rcrl
push
adc
adc
icebp
and
std
add
int
out
jl
add
xchg
aaa
popf
dec
je
pop
add
loopne
fwait
add
cmp
push
in
call
ficompl
mov
fwait
pusha
sarb
das
mov
jle
add
pop
cmpsb
mov
xor
call
mov
add
xchg
pop
pop
xor
mov
stos
add
dec
sub
std
add
add
cli
and
js
movsl
add
decb
addr16
jl
add
lret
add
lcall
popf
adc
pop
rclb
add
lock
inc
cltd
pusha
shr
mov
addl
add
push
adc
mov
add
shlb
xchg
jns
sub
mov
test
inc
jnp
daa
gs
fdivrs
sahf
pop
sbb
push
cmp
mov
or
xor
add
mov
pushf
inc
add
pop
in
lods
fsubr
adc
sbb
dec
add
data16
stos
add
or
mov
mov
adc
cltd
add
add
mov
call
jecxz
push
add
sbb
test
xor
pusha
stos
fsub
mov
add
jle
mov
aad
and
add
mov
in
add
cmpsl
inc
lds
add
xchg
jmp
sub
mov
testl
mov
ds
jge
into
sbb
sub
push
xor
fcom
add
mov
lock
push
filds
ss
pop
ja
jmp
cmp
mov
add
add
xor
dec
aaa
cmp
test
add
lret
stos
push
push
or
xchg
sub
inc
mov
jne
add
or
xor
test
add
fs
or
adcb
bound
arpl
mov
sub
push
add
gs
pop
call
sbb
out
aad
mov
loope
insl
faddl
or
push
pop
cmp
fcmovb
sub
int
xor
or
aam
cwtl
jmp
mov
jno
and
ja
and
sub
popa
cld
inc
mov
bound
loopne
inc
inc
sbb
jg
and
in
mov
in
jne
jne
ret
nop
and
jo
adc
rclb
in
out
add
not
loopne
mov
sub
jns
inc
test
mov
or
xor
in
inc
and
pop
leave
adc
add
adc
mov
push
in
and
xchg
out
mov
mov
aam
mov
or
das
add
adc
push
push
sub
mov
cmp
loop
pop
arpl
rcrb
icebp
adcl
push
add
jl
mov
mov
inc
stos
add
push
into
data16
in
jmp
jg
rorb
mov
mov
aaa
add
or
iret
mov
and
fisubrs
mov
lcall
fdivrl
sbb
mov
popa
mov
cld
cltd
imul
inc
pusha
test
jo
sbb
or
lods
out
xor
fmuls
pop
fcomi
int3
pop
or
mov
lret
lea
push
rolb
shl
pusha
movsb
loope
movsl
jae
add
orb
adc
mov
popf
adc
cli
sbb
cltd
adc
add
mov
cmp
xchg
test
add
scas
lock
fsubrs
inc
aaa
push
lods
cmp
add
mov
dec
jle
cmp
jle
fimull
pusha
pop
xchg
dec
sbb
push
pop
xor
outsb
xchg
add
loop
add
and
mov
jl
flds
sub
jo
in
rcll
mov
mov
mov
xor
xor
mov
sbbb
cs
add
into
push
jp
iret
mov
adc
mov
sbb
inc
or
fs
jg
nop
jge
add
adc
call
dec
push
jmp
addb
pop
addr16
mov
mov
orb
push
or
pop
in
sbb
mov
add
xchg
setge
inc
pop
test
xor
pop
dec
mov
pop
shrb
sbb
je
pop
mov
arpl
adc
mov
sbb
popa
xchg
xchg
pop
lds
loope
sub
out
inc
xchg
sbb
lods
rolb
test
filds
lds
push
sbb
mov
jmp
pop
lret
adc
mov
push
clc
lds
js
dec
sbb
sub
adc
xchg
mov
pusha
push
cwtl
mov
shll
jns
and
pop
adc
lods
popa
data16
or
fstpl
sbb
jnp
or
push
ljmp
mov
aaa
and
movsb
and
push
add
xor
dec
add
push
cmp
imul
out
add
mov
test
repnz
push
sub
testl
outsl
ja
arpl
js
icebp
repnz
stos
add
rorb
or
aas
loopne
addl
shll
clc
adc
fs
imulb
lock
xchg
or
pop
stos
push
pop
add
sub
xorb
cmp
jae
xchg
xchg
inc
add
out
gs
sti
arpl
rol
js
addr16
jno
test
pop
add
fidivs
mov
xlat
cmp
xchg
pop
sbb
arpl
aaa
fiadds
and
push
pop
jecxz
push
into
add
mov
stos
adc
mov
inc
push
sbb
popa
sti
lret
mov
inc
shlb
or
inc
push
mov
and
into
sbb
cld
pushf
inc
pop
mov
or
aas
push
lret
lock
add
sbbb
add
arpl
cltd
mov
dec
and
and
loopne
add
and
mov
push
rcr
gs
cli
jns
dec
lret
cmp
mov
or
out
andb
xor
test
sub
cwtl
push
icebp
adc
dec
jecxz
adc
jmp
inc
repnz
adc
sbb
or
mov
lea
push
and
imul
sub
bound
add
adc
jns
jae
add
xchg
or
outsb
add
push
adc
pop
fisttpl
or
mov
shl
shrb
lcall
dec
pop
and
pop
loopne
in
jae
add
push
aam
jae
add
mov
inc
cwtl
push
lds
mov
repnz
sub
push
testb
sub
add
nop
rolb
add
jo
inc
inc
mov
add
xor
jmp
fcompl
in
ljmp
fidivs
mov
sbb
imul
pop
cmpsl
sub
xor
pop
mov
sbb
xor
rcrb
cmc
add
push
loope
loop
sub
dec
push
mov
mov
pop
subb
mov
mov
mov
add
and
cld
jle
mov
add
mov
outsb
repz
push
push
mov
jnp
jb
mov
mov
andb
daa
gs
add
ja
shl
test
aam
xor
push
das
nop
outsb
pop
and
and
scas
popa
pop
arpl
fwait
pop
cmp
loopne
mov
push
popf
add
jl
and
aad
leave
mov
sbb
enter
es
cld
fwait
add
add
xchg
pop
repz
idivb
and
add
ljmp
inc
cmp
iret
clc
repz
loope
mov
or
add
sahf
jp
testb
sbb
add
test
cmp
cmc
jl
adc
ret
jne
add
sbb
xchg
xor
or
push
mov
sub
daa
push
mov
fldl
rcrb
rclb
movsl
push
sbbl
in
fs
cmp
loopne
rcl
inc
cmc
add
sahf
jge
insb
push
mov
shll
xacquire
dec
mov
ficompl
add
push
rcrl
jno,pt
cmpb
in
mov
add
sbb
sarb
fiaddl
scas
insb
lret
push
adc
stos
inc
pop
fidivs
add
psubsb
cltd
add
mov
jno
out
cwtl
add
arpl
imul
scas
rorb
cmp
push
xor
add
mov
jmp
ret
leave
jo
mov
fstpl
notb
rclb
cmpsl
push
daa
push
or
loopne
jle
shll
call
jne
lcall
xor
mov
fdivrl
ljmp
arpl
sbb
xorb
lea
test
sub
dec
sbb
addb
xchg
push
add
sti
xor
int
inc
imul
add
lods
lret
stc
push
jb
dec
out
pop
xor
xchg
xchg
dec
sar
mov
mov
lock
sbb
adc
inc
pop
rorl
out
incb
pop
add
lock
dec
mov
or
xchg
adc
or
sbb
add
fs
mov
imul
mov
jl
add
ficoml
push
add
pop
pop
ja
add
scas
cmp
xchg
and
movsl
jl
test
xor
jo
add
out
add
scas
sahf
fwait
push
lret
fsub
cmp
das
lahf
add
call
pop
pop
adc
mov
test
das
add
mov
insl
push
pop
out
clc
lcall
pop
ret
testl
lds
fisubrs
add
js
and
scas
add
outsl
loop
and
jno
adcb
add
mov
push
aaa
xchg
push
mov
cmpsb
push
adc
xchg
push
lret
push
int
xchg
jb
je
add
jae
lcall
xor
add
mov
test
jl
dec
push
inc
push
inc
cld
sarl
shrl
push
add
push
push
pop
add
cmovo
pop
clc
mov
sbb
popa
adc
jo
cmpsl
int3
loope
add
add
sbb
cmp
xchg
add
ret
or
or
ret
inc
mov
pop
add
mov
into
aad
inc
in
popa
lcall
and
aam
fcoms
sbb
mov
stc
ja
pop
xor
add
call
mov
xchg
add
imul
ret
xor
popa
cmp
mov
jno
sbb
aaa
xlat
or
fildl
lret
jae
adc
js
stos
dec
inc
xor
pop
fstpl
andb
add
sub
ja
repnz
mov
sbb
push
add
sub
sarb
adc
test
jmp
add
sub
add
add
test
in
fstps
push
sbb
pop
dec
movsl
and
pop
push
unpckhps
nop
stos
subb
test
dec
cmp
sbb
sbb
cmp
push
jno
ljmp
clc
lock
adc
add
in
mov
add
cmpsb
popa
xor
insl
add
fcom
call
pop
or
push
stc
pusha
pop
or
add
ret
xor
call
pop
push
cmc
push
xchg
xchg
jge
add
mov
pop
fcomps
pop
dec
and
cmp
addb
mov
sub
shll
pop
add
es
push
sub
flds
mov
xchg
rolb
aaa
and
lcall
notl
imul
adc
xchg
fnstcw
pop
lods
or
fcompl
add
popa
sbb
xchg
cmc
shlb
or
stc
ret
test
xor
mov
or
imul
bound
pop
jmp
mov
shlb
cmp
js
repnz
mov
fdivrp
int3
jl
add
jmp
sbb
subb
mov
cmp
inc
sbb
das
inc
leave
sub
jle
xadd
inc
in
data16
ror
mov
add
lret
lods
jo
add
fadds
cmpsl
loope
add
int
mov
sbb
in
loopne
xor
sub
insl
or
push
and
ror
jp
dec
jns
xchg
pop
aad
add
jne
mov
sti
add
cmc
push
testl
add
cmpsb
dec
cmpsl
pop
insl
pop
adc
pushf
cld
fs
mov
add
gs
test
inc
sub
iret
mov
scas
inc
in
cli
lcall
jle
je
jge
push
push
and
pusha
mov
add
push
jae
and
sbb
jbe
pop
addl
mov
mov
jns
sub
lds
xor
jo
in
movsl
ja
add
pop
add
xor
cmpsb
pop
inc
add
pusha
lock
xchg
add
cmp
xchg
xor
lods
leave
lcall
dec
sbb
insl
cltd
shlb
jbe
dec
adc
int3
aam
cs
inc
add
das
sbb
xchg
or
aad
push
lcall
cmc
data16
out
xor
add
xchg
cli
jge
mov
jns
fucomip
cmpb
sub
popf
add
pushl
pop
es
fcmovbe
outsb
fwait
cmc
in
or
add
cs
das
sbbl
fisubrl
sti
sahf
ljmp
clc
push
ffreep
mov
cli
cs
add
xchg
push
cld
add
adc
enter
jbe
hlt
repnz
jle
cmpsl
lea
sub
add
add
flds
les
xlat
cmp
cli
fistpll
cmp
mov
add
push
cwtl
jp
mov
roll
jnp
pop
adcb
fsubp
rolb
jmp
jle
xor
psrlq
out
sub
mov
aad
xchg
cwtl
inc
jb
or
push
addr16
and
loopne
add
pop
out
xchg
clc
fdivrs
ret
addr16
mov
insl
jns
xchg
subl
fnsave
dec
sub
sahf
inc
and
add
scas
fildl
adc
jns
or
outsb
cli
push
mov
jae
adc
mov
inc
add
mov
dec
cs
test
push
pushaw
jecxz
shlb
inc
mov
mov
insb
mov
lea
in
jbe
orb
push
sbb
pushf
inc
lcall
stc
loopne
or
dec
add
cmp
pop
decl
fdivs
add
test
push
xchg
pop
dec
inc
mov
mov
je
xchg
mov
add
add
jns
add
pop
adcb
out
xor
das
lds
into
fldcw
dec
hlt
pop
jl
fs
mov
sbb
add
fisubl
out
add
push
push
insb
ljmp
repz
lods
mulb
out
xor
ficomps
fmull
and
xchg
xchg
loop
push
jmp
rcrb
inc
sbb
rclb
add
or
mov
cmp
fwait
mov
add
loop
push
in
pop
pop
xchg
cmp
ret
pop
popf
jmp
xlat
jne
add
jns
or
stos
rcr
or
add
insl
clc
mov
cmpsb
cs
dec
inc
fucomip
rolb
add
inc
cmp
je
enterw
and
daa
inc
xchg
insl
repnz
add
jae
jbe
aas
or
add
add
sub
or
bound
imul
xchg
js
mov
sub
push
and
add
push
mov
adc
push
sbb
adc
mov
jbe
and
xchg
and
loope
adc
inc
jns
sbb
and
dec
xor
cltd
fwait
lea
cmp
jns
mov
adc
or
and
sahf
sbb
xor
call
dec
adc
mov
push
sarb
adc
pop
xor
push
push
and
add
mov
adc
popa
adc
dec
dec
adc
mov
xchg
adc
and
sub
ret
inc
lret
sahf
add
pop
test
adc
inc
adc
and
dec
dec
mov
pop
sbb
sub
sbb
xchg
xchg
popa
adc
adc
xchg
inc
mov
xor
call
out
adc
test
push
mov
int3
adc
push
enter
imul
aam
and
nop
push
mov
adc
mov
push
jo
mov
and
test
xor
inc
xchg
outsl
loopne
inc
inc
or
adc
inc
sbb
jno
popa
push
adc
and
nop
or
adc
pop
dec
ds
adc
sbb
pop
adc
cld
sbb
mov
lret
jbe
imul
mov
sbb
test
leave
inc
jno
fstps
mov
mov
mov
or
enter
sub
mov
cld
pop
cmpsl
xor
jne
or
jno
jno
xchg
cltd
sub
inc
adc
mov
add
push
test
fsubr
jb
ret
popf
sbb
or
sbb
mov
add
adc
xor
or
int3
xchg
in
sub
adc
stos
clc
insb
inc
mov
xchg
or
in
cmp
loop
test
or
push
dec
dec
mov
popf
xor
pushf
sbb
xchg
adc
fcompl
cld
inc
test
insb
pop
fwait
sbb
rolb
vmovaps
mov
pusha
push
adc
fdivrs
dec
fld
fs
adc
icebp
mov
push
adc
add
nop
test
push
push
pop
and
hlt
xchg
push
adc
loope
outsb
push
adc
push
push
fs
aam
sbb
push
add
push
push
adc
jl
test
bound
mov
jge
test
push
les
xor
push
xor
enter
stos
jo
in
fldt
jo
out
and
xchg
repz
rolb
and
xor
mov
add
test
inc
mov
fldl
mov
cmp
and
js
fbld
adc
inc
iret
shl
sub
mov
cmp
test
shlb
cmp
les
fsubl
clc
movsl
jo
mov
mov
sub
push
mov
sub
pusha
xchg
push
xor
sbb
and
daa
sub
mov
fiaddl
movsb
jl
xchg
mov
adc
mov
and
loop
cmpsl
cmp
pusha
ret
ss
jl
jl
addr16
or
shll
icebp
cmp
clc
test
fidivrs
jno
ds
cmp
cmp
push
jns
sbb
and
sbb
fsubrs
aaa
and
fsubrl
sbb
icebp
xor
arpl
push
inc
inc
sti
sbb
mov
jg
inc
fmul
push
icebp
adc
test
cmp
fnstsw
insl
push
cmp
sub
sub
js
jle
imul
inc
lahf
lret
sub
xchg
int
or
or
cld
adc
fmuls
add
push
movsb
les
or
test
sub
jg
xchg
ljmp
andl
dec
les
xor
lcall
mov
lock
pusha
xchg
push
scas
and
mov
andb
shlb
test
jo
dec
je
lock
push
push
jo
jmp
push
popa
mov
pop
je
push
scas
mov
add
fcomip
xor
pop
add
jnp
jmp
inc
lock
lods
xor
pushf
or
int
subb
jbe
sbb
lahf
push
jecxz
addr16
bound
movsb
or
std
add
lcall
cmpsl
pusha
sub
bound
xlat
mov
call
xchg
je
cmpb
jae
xor
mov
inc
sub
add
repz
cmpl
shll
loopne
outsb
scas
fs
aaa
repz
add
add
mov
inc
add
xchg
cmp
andl
cmp
jg
testb
call
and
pop
fidivrs
mov
mov
xor
jp
hlt
shll
gs
stos
add
dec
mov
or
call
lea
aad
lods
das
cmc
pop
pop
mov
mov
inc
inc
push
jmp
les
sub
adc
sbb
sub
cmpb
into
pop
addb
mov
mov
cld
ret
add
lret
jne
sub
add
lods
ss
mov
push
les
cmp
xor
xchg
sar
add
imul
pop
hlt
cmp
cmp
xor
push
xor
inc
add
out
jle
or
push
push
xchg
or
pop
in
add
add
loopne
imul
lods
popf
xor
and
test
gs
sub
sub
inc
jge
add
mov
xlat
scas
repnz
adcl
xor
jp
scas
add
sbb
jle
or
pop
xor
add
nop
lods
adc
inc
sbb
mov
daa
sbbl
repnz
push
rolb
add
dec
xchg
cmp
mov
cmpl
in
add
enter
pusha
mov
not
mov
dec
push
mov
adcl
popa
loope
add
leave
xchg
push
sahf
and
or
mov
in
loopne
xlat
sbb
push
push
loop
and
pop
lea
jmp
jo
and
jp
jnp
add
mov
fiadds
adc
shl
pop
jl
mov
pop
outsb
mov
add
mov
mulb
hlt
js
jae
add
xchg
clc
nop
adc
or
aaa
fsts
pop
add
call
daa
push
jge
or
adc
loopne
inc
sub
adc
jge
mov
push
mov
out
shr
es
jmp
mov
test
push
push
adc
add
in
fwait
mov
adc
add
jns
mov
pop
hlt
adc
pop
jbe
inc
fcmovnu
jb
push
add
icebp
push
aad
xor
push
test
jle
jb
inc
in
add
or
enter
mov
mov
inc
push
add
mov
and
add
in
sbb
jp
jmp
test
inc
mov
jge
popa
adc
mov
sbb
push
cmp
and
sbb
mov
cmp
add
pop
inc
xchg
loope
cmp
fbld
ret
into
adc
jl
lods
ficompl
test
imul
adc
lods
mov
addb
sub
and
mov
lock
aaa
mov
mov
sub
push
cmp
pop
mov
xor
jns
orb
cltd
sbb
cmp
ret
shlb
lock
shl
fptan
je
push
icebp
lods
stos
into
or
clc
movsb
add
leave
xchg
xor
imul
sub
movsb
and
dec
inc
ds
rcll
jl
mov
insb
mov
fs
loop
xchg
adc
and
bound
mov
scas
orb
sbb
inc
adc
cmp
shrl
cmp
loope
jmp
jno
cmp
test
adc
sub
add
or
cltd
push
adc
mov
les
leave
and
enter
rorb
mov
add
push
dec
ds
xchg
lret
jo
mov
cmp
out
clc
nop
add
out
or
test
idivb
andb
arpl
gs
adc
loopne
sbb
jns
pop
nop
enter
nop
pop
add
imull
pop
dec
push
addb
insb
inc
lret
and
mov
push
add
es
out
sbb
xchg
push
test
inc
rcrl
ret
bound
add
out
mov
adc
cmp
xchg
xchg
stos
negl
mov
inc
inc
cmpl
jge
add
shl
jp
dec
enter
shlb
cmp
xchg
jae
push
xor
jb
fsts
mov
xchg
inc
jge
fildl
dec
mov
cltd
hlt
lock
jo
test
pmaxsw
xor
jmp
loop
mov
in
test
sarl
fstpl
xor
popa
adc
and
ss
or
and
or
pop
pop
popa
add
cwtl
cli
xchg
sub
cmp
jns
mov
mov
es
add
mov
movsl
dec
lods
cmp
adc
ja
adc
fs
mov
jmp
mov
lds
dec
outsb
ds
push
bound
fcmovnbe
jge
xchg
test
and
adc
movsl
and
jp
aam
xchg
mov
sbb
cs
je
xor
arpl
lcall
pop
dec
movsb
xchg
out
jae
and
or
cld
movsl
mov
jb
add
sub
clc
mov
scas
add
cmpsl
push
push
mov
xor
jle
jae
shrl
int3
stos
mov
repz
push
adc
push
mov
test
fdivs
mov
pop
jmp
add
aas
ret
rcr
lret
adc
repnz
testb
shll
xchg
push
in
rolb
mov
adc
push
xor
mov
scas
fcom
mov
and
scas
xchg
pcmpeqd
outsl
pop
push
add
fimuls
clc
inc
push
xor
dec
xor
dec
icebp
sbb
cmp
je
pusha
addr16
insl
cld
inc
call
inc
dec
xchg
test
or
xchg
cmp
mov
aad
pop
xor
lea
push
add
into
faddl
dec
dec
inc
enter
aas
mov
call
data16
sbb
pop
cld
je
push
push
mov
aas
les
fadds
dec
xor
movsb
popa
xor
cmpb
sbb
push
inc
mov
push
movsl
push
pop
orl
cmpsl
lock
and
dec
lods
push
add
scas
sarl
subl
addb
xlat
repz
enter
push
push
push
shl
mov
pusha
lock
mov
push
mov
ja
enter
pusha
out
push
test
mov
mov
dec
pop
xor
adc
or
int3
fmull
ret
push
mov
nop
in
mov
sub
nop
loopne
rorl
push
imul
xor
sub
mov
and
push
xor
lock
dec
and
adc
shlb
stos
mov
aam
hlt
shlb
sbb
das
lcall
add
repz
shrl
rorb
mov
cmp
xchg
sub
insb
pusha
es
cmpsb
inc
pop
jg
jp
jno
pop
pop
call
pusha
xchg
cs
jne
add
sti
out
aam
pop
mov
loope
or
movsl
inc
aas
jl
cmp
sub
xchg
or
insb
dec
bound
aaa
mov
pop
push
lea
rolb
lods
inc
add
pop
dec
add
test
les
mov
or
sbb
or
add
loope
js
or
fisubrl
lds
and
cs
scas
mov
loopne
ret
outsl
push
xor
das
xor
xor
lcall
jo
aaa
push
sub
fdivr
adc
adc
push
ljmp
push
js
dec
lods
cmp
mov
xor
divb
mov
je
inc
add
cwtl
add
outsl
shlb
mov
nop
cwtl
movl
and
and
notl
dec
pusha
shl
cmp
dec
cmp
dec
lock
adc
push
push
adc
dec
or
testb
and
and
and
add
mov
and
shlb
or
push
pop
add
add
pop
nop
ss
adc
or
aas
pop
inc
bound
push
mov
cmp
or
mov
dec
lock
test
push
lock
in
sbb
addr16
lock
and
push
arpl
test
cwtl
roll
rorb
test
jl
cmp
test
sub
ds
mov
ds
jmp
lods
dec
or
ret
adc
mov
mov
pop
cmp
xchg
sbb
xor
and
xchg
inc
adc
cmp
out
mov
pop
add
and
jl
or
sub
fdivs
dec
loop
shll
mov
add
dec
sub
mov
pop
movb
mov
jl
mov
add
hlt
movntps
add
dec
sbb
xor
sbb
push
add
push
add
push
sub
mov
js
add
push
rcll
pushf
pusha
add
mov
add
and
or
sahf
xor
mov
loopne
jno
cmp
pusha
push
je
jle
xor
js
pusha
pusha
call
xor
push
insb
pusha
and
adc
dec
lock
pop
jl
sbbb
lahf
push
adc
mov
lock
pop
mov
inc
loopne
aas
jmp
inc
dec
rcrl
rorb
push
popl
cmp
lahf
mov
xor
clc
lds
jo
inc
test
popl
xor
dec
ds
adc
loopne
jno
shl
dec
setg
loopne
jp
test
cmpsl
dec
cmpsl
fsubl
cmp
mov
xchg
into
andl
mov
jg
and
aas
pop
lcall
dec
cmpsl
push
or
add
rorl
push
pop
fucomip
jnp
enter
ret
sub
adc
jbe
adc
loopne
outsl
sub
orl
cmp
inc
mov
sub
and
jns
stos
and
rolb
pusha
xor
pop
add
push
add
sub
push
or
arpl
sub
pusha
add
cld
stos
movsl
int
cmp
bound
xor
xchg
adcl
ja
mov
sub
cli
xor
push
aaa
dec
enter
adc
or
clc
mov
inc
sbb
xor
fsubs
xor
lahf
jo
sub
fcoms
pusha
fiadds
sub
inc
pusha
outsl
das
xor
mov
rorb
ret
aaa
xlat
dec
mov
fcomps
cld
sbb
inc
rclb
add
push
shlb
mov
jg
xor
push
pop
pusha
add
adc
mov
dec
xor
inc
xor
push
pop
pusha
push
xor
sub
pop
pusha
pusha
imul
pop
insb
pusha
unpckhps
ja
nop
adc
cmc
out
sub
rolb
and
dec
xchg
and
push
add
rcr
mov
xchg
mov
push
lcall
sbb
pusha
cld
adc
adc
pop
lock
popa
cmp
pusha
fcom
mov
push
inc
cmp
jp
imul
clc
cmc
pop
add
and
hlt
mov
add
or
adc
add
push
hlt
jle
dec
pop
clc
push
xor
pop
sbb
and
sar
ret
sub
xor
and
rorb
and
cmp
pop
pusha
push
xor
or
sub
movsl
cmpl
roll
pop
push
pusha
fsub
mov
imul
inc
or
jmp
sbb
mov
js
jl
adc
ret
fcomps
aaa
sub
fidivs
cmp
pusha
or
xchg
lahf
mov
and
and
pop
loopne
pop
add
add
cmp
pusha
ret
jp
lock
mov
ljmp
shrl
js
and
jmp
adc
fmuls
jne
push
bound
add
cmp
popa
push
lock
dec
jae
mov
xor
popa
pop
jae
loopne
cmp
in
les
mov
jge
mov
mov
sbb
and
and
dec
adc
pop
popl
inc
imull
push
pop
js
cmp
dec
and
cmp
inc
in
bound
popa
cwtl
dec
mov
add
cmp
clc
inc
adc
mov
out
mov
stc
adc
rol
cwtl
jb
cmp
idivb
imul
mov
xchg
insl
xchg
shlb
jl
pusha
cld
lods
sub
mov
mov
lock
add
push
mov
sbb
popl
push
add
xchg
aas
pop
cmc
mov
xor
fnop
mov
andl
sub
add
mov
pusha
add
jbe
lahf
fidivrs
xor
rorl
add
adc
test
inc
pusha
rcr
adc
and
mov
inc
mov
inc
scas
rolb
xor
rol
sbb
mov
add
add
xchg
jo
add
add
ds
and
adc
and
nop
rclb
mov
cmpb
test
add
pop
decl
ljmp
lahf
popf
pop
push
cmp
ret
jmp
mov
mov
add
pushf
xor
mov
push
movsl
xorl
or
add
inc
addb
stc
test
add
mov
cmp
pop
loop
pop
xchg
test
xchg
inc
pusha
inc
lea
or
inc
inc
xchg
mov
mov
inc
lcall
pop
js
cmp
adc
pushf
inc
loopne
test
int3
push
shlb
pusha
movsl
cmpsl
adc
inc
or
lea
shlb
adc
xor
nop
sbb
add
sub
pusha
inc
test
pop
cld
xor
iret
add
mov
test
mov
scas
fidivl
mov
jl
sbb
mov
sbb
sbb
cmp
popa
jp
popl
sub
add
scas
scas
xor
mov
xchg
xchg
xor
ljmp
xchg
stc
mov
popl
aam
or
and
pop
mov
add
test
xchg
sarb
xlat
add
fwait
dec
in
add
lea
cmp
xchg
push
add
lret
dec
lahf
mov
adc
push
xchg
loopne
mov
pusha
cmc
cs
sbb
inc
cli
enter
lock
dec
incl
scas
dec
add
push
sub
xor
inc
add
jp
xchg
cld
sbb
or
and
sbb
popa
sub
shr
mov
fcompl
repz
shll
mov
in
shlb
cwtl
ret
std
js
mov
add
and
and
add
add
sbb
jnp
and
sahf
and
rorl
jge
or
add
imul
popa
inc
rcrl
ds
mov
sbb
clc
in
cmp
dec
cmp
pop
xor
cmpl
scas
sbb
mov
add
mov
xchg
sbb
out
fsubs
xchg
fsubrl
or
push
pop
mov
xchg
int3
inc
xor
pop
add
push
out
jnp
add
sbb
dec
arpl
pop
xor
addl
mov
add
jns
insb
cwtl
add
or
add
add
jae
add
mov
nop
pop
rorl
nop
addr16
xor
jne,pt
jle
mov
cmpsb
xchg
icebp
push
pop
xor
xchg
icebp
cld
sbb
pop
mov
pushf
or
sti
popf
add
sbb
cmc
and
ss
ds
sbb
sub
sbb
xchg
add
dec
push
mov
jno
add
dec
pop
jecxz,pn
mov
cld
sti
mov
fcmovu
ds
adc
push
nop
outsb
xor
pop
add
push
incl
sub
call
and
loopne
clc
cmp
jl
adc
jecxz
adc
std
outsl
adc
mov
inc
lret
xor
js
je
mov
sbb
sub
add
sbb
clc
pop
and
xchg
xlat
push
adc
jb
movsb
adc
sti
aam
push
sbb
and
add
fstpl
push
shl
mov
adc
adc
push
stos
outsb
cmp
adc
dec
je
popa
push
xor
jbe
ss
es
or
mov
pusha
cmovnp
lahf
loopne
outsb
popa
loopne
jg
cld
out
add
pusha
pop
add
lret
mov
testb
ds
dec
inc
out
fcmovnbe
adc
arpl
loope
les
mov
pusha
pusha
fadds
stc
adc
lock
and
repz
outsl
out
lahf
insb
scas
popa
mov
pusha
roll
outsb
outsl
ds
adc
jbe
loopne
sub
jbe
subb
out
aam
incb
push
jno
push
push
rcrl
icebp
popa
and
jbe
pusha
mov
mov
cmpl
outsb
xchg
push
lock
mov
inc
push
punpcklbw
ret
mov
outsb
insl
or
sbb
cmp
jl
shrb
sub
out
push
es
icebp
rolb
int3
sub
fisubs
jl
sbb
push
mov
fcmovnb
or
xor
inc
rol
lea
fisubs
adc
call
lock
mov
and
ret
adc
push
and
fists
scas
call
fcmove
and
in
mov
inc
test
in
push
cmpsb
xchg
inc
out
punpcklbw
rcrl
jne
add
cmc
push
push
cmp
punpcklbw
orl
cmc
shl
je
and
mov
imul
popl
mov
mov
inc
stos
popa
and
imul
mov
add
push
fisttpll
mov
imul
xchg
clc
aad
aas
lahf
add
xchg
lahf
jl
xor
subl
adc
mov
cmp
mov
mov
adc
xchg
cltd
and
lret
fchs
sub
lret
jmp
xor
fisubrs
sbb
xchg
xchg
dec
aad
pusha
orl
cs
mov
into
pop
bound
pusha
add
cld
pop
fadd
add
aad
xchg
or
fcmove
or
clc
bsf
cmpsb
imul
fcompl
mov
lods
pusha
adcl
cmp
xchg
out
xchg
clc
add
push
shll
inc
aaa
ret
popa
shll
cs
arpl
pusha
mov
les
mov
add
inc
sub
xchg
and
jl
or
aad
sbb
in
call
sar
pop
sbb
or
adc
lock
mov
pop
add
inc
cmp
iret
and
jl
or
rclb
xchg
shl
shrl
and
inc
rclb
xadd
mov
jl
or
and
xchg
fcomip
cmpsb
mov
inc
ffreep
fcompl
jl
call
inc
xor
jecxz
push
loope
push
pop
ds
shrl
into
add
add
xchg
jl
sbb
cmpsb
lods
pusha
and
adc
shlb
fstpl
add
and
jl
adc
add
hlt
pop
adc
mov
and
inc
std
xchg
popl
std
adc
roll
dec
mov
frstor
lds
mov
xor
lods
push
xor
add
pop
add
push
mov
leave
rolb
mov
add
xor
sub
add
fdivrs
cwtl
add
cmp
xor
add
out
fcomi
or
pop
das
xor
inc
cmpsl
sarl
orb
cmc
enter
xor
insl
sbb
jmp
aam
out
sbbb
call
call
jl
or
jp
in
adc
cmp
icebp
lahf
xor
loopne
pop
sbbb
fbstp
aad
lock
mov
pop
sbb
xchg
adc
out
lock
cltd
xor
sbb
cli
leave
mov
sub
inc
pop
inc
cmp
jae
loopne
add
jne
push
pop
cmpl
jmp
mov
inc
cmpsb
loopne
xchg
push
out
pop
sbb
pop
popa
jns
or
sub
lahf
loopne
or
popa
pop
xor
sbb
das
dec
cli
inc
je
dec
sbb
add
cmpsb
outsb
dec
lcall
mov
pop
stc
and
push
lock
fstpt
mov
les
jge
shll
xchg
enter
pop
sbb
mov
or
lods
dec
adcl
add
pop
sbb
lahf
push
lcall
jne
jnp
adc
mov
cmp
js
jb
xor
xor
cld
cmpb
pushf
sti
inc
or
testb
adc
std
dec
inc
or
fxam
xor
jmp
sbb
or
inc
and
repz
sub
pusha
add
cmp
sub
stos
mov
outsl
adc
or
jae
pop
leave
xchg
push
shrb
push
xor
xor
add
les
sub
aaa
addl
mov
push
xor
sbb
push
lret
cmpsb
add
inc
cmc
jl
sahf
sub
in
dec
xor
movsl
add
sbb
mov
mov
cs
iret
in
fisubrs
mov
fcmovb
cmp
lahf
add
add
shl
push
jmp
mov
je
push
popa
mov
subb
sub
daa
into
add
jae
loopne
test
nop
mov
add
jp
pop
sbb
xchg
or
cmpb
outsl
jnp
int3
add
push
jo
add
sar
inc
dec
cld
test
add
mov
or
push
inc
data16
push
and
fcom
mov
and
iret
mov
pop
mov
shll
cmc
arpl
scas
or
lock
jmp
inc
sbb
add
mov
sbb
aas
clc
and
orb
inc
push
ds
lock
add
in
sub
xchg
stos
cmpl
mov
shrl
stos
sbb
add
cmp
call
movsb
sbb
push
add
mov
sbb
add
ja
jo
cmp
jbe
fcoms
add
mov
clc
jae
sti
xor
dec
and
adc
add
fcomps
dec
insb
lock
jge
adc
jle
add
test
daa
xchg
loop
lock
jae
pop
dec
stos
cmp
mov
popf
call
pop
adc
dec
loop
ja
pop
aam
adc
lahf
pop
xlat
insl
clc
push
cld
add
rcrl
inc
add
jae
add
rcrl
lahf
dec
fdivs
pop
sbb
jns
jge
cmp
mov
push
jb
in
inc
js
mov
add
pushf
loopne
jo
pop
sti
cmp
pop
je
das
fnstsw
jbe
scas
iret
out
adc
sbbl
mov
pop
dec
lcall
mov
mov
rcrb
and
jae
lods
xchg
xor
inc
fucom
lcall
add
xlat
jno
xor
das
iret
popf
enter
add
mov
loop
mov
popf
cmp
pushl
add
daa
cmp
in
clc
les
dec
cmpsb
dec
jmp
cmc
adcb
jmp
ret
xor
sub
inc
mov
sbb
sbbl
rorl
or
cmp
xor
add
pop
and
xlat
lock
or
xchg
add
cli
js
dec
fadd
add
and
cltd
add
pop
pop
sub
lret
mov
add
pusha
inc
sahf
getsec
push
push
or
sub
iret
gs
jp
xlat
add
movsb
lret
enter
fcoms
push
mov
add
lock
xchg
xchg
stos
and
mov
repnz
testl
cmpsb
jbe
packssdw
dec
sbb
adc
add
pop
in
adc
dec
mov
iret
sbb
call
pop
sub
sbb
add
pusha
jmp
push
loope
mov
or
xorl
popf
mov
inc
call
add
jecxz
dec
mov
add
adc
repnz
cmp
dec
and
add
jnp
ret
stos
pop
inc
jo
in
sbb
sahf
loop
mov
out
jle
ss
xchg
pusha
loope
push
cmp
and
inc
jg
out
push
sti
add
jo
mov
aaa
and
mov
inc
mov
pop
lret
xor
lds
xor
and
add
mov
mov
cwtl
pop
lcall
loop
fstpl
push
cli
jge
mov
or
imul
pop
clc
jb
fdivrs
sti
fistl
clc
cmp
add
xor
or
pop
add
daa
inc
int
scas
es
add
loop
add
push
add
mov
popf
ret
mov
movsb
pop
shl
dec
aad
mov
push
add
roll
call
gs
mov
mov
xchg
leave
es
hlt
lods
xchg
sub
or
pop
add
aas
cmpsl
or
add
adc
cld
insl
sarl
rcr
add
sub
or
xor
add
test
cli
add
filds
cld
adc
add
mov
sti
nop
dec
stc
inc
cld
mov
add
push
sarb
repz
imul
dec
inc
pop
popf
sbb
cmpsb
cld
inc
and
sub
jbe
cmc
stos
pusha
adc
xlat
in
push
fldcw
mov
cmpsl
ja
test
addb
sbb
ss
outsl
jl
out
andb
or
xor
dec
add
iret
and
jl
shl
test
and
mov
push
xor
pop
sub
es
xchg
add
mov
fisttpl
jo
add
iret
subl
test
aam
cs
into
je
adc
xlat
movsb
mov
stc
inc
add
and
loopne
addb
lahf
cmpsl
mov
cli
in
and
and
cli
pusha
das
mov
dec
sub
pop
jno
xchg
inc
xor
adc
jle
and
xor
and
leave
mov
pop
mov
mov
lods
aas
out
push
pop
int3
jo
jns
pop
xchg
add
es
add
test
sbb
sub
loopne
cmpl
inc
sub
xor
xchg
inc
aaa
pop
lret
aam
push
cltd
and
cmp
sub
je
fs
inc
add
push
mov
insb
add
inc
stos
sahf
mov
inc
enter
add
iret
push
shl
lock
add
int3
imul
enter
out
int3
add
mov
out
nop
or
mov
call
outsl
add
cmp
xchg
mov
lods
leave
sbb
arpl
jmp
inc
add
iret
loop
ret
inc
repz
cmpsb
dec
xorl
mov
out
mov
imul
dec
and
add
inc
enter
add
jge
mov
add
mov
movsb
dec
rcrl
xchg
orb
jo
jle
jmp
in
add
add
setno
fdivr
or
shlb
jo
lgs
in
xor
add
jmp
xor
sbb
fildl
hlt
xor
adc
or
shrl
sbb
pop
and
sbb
jno
jne
sub
jl
sahf
decb
das
popa
mov
add
pop
dec
push
lcall
sti
pushf
call
add
fcomps
in
jl
ret
pop
sarb
sbb
mov
xlat
mov
pop
cli
mov
ret
shrl
push
sub
mov
push
adc
leave
add
loopne
pop
push
mov
add
inc
and
inc
cmpsb
lock
dec
jle
jecxz
aas
jg
push
sub
cmc
rclb
jo
mov
inc
lcall
loopne
cmp
mov
imul
push
fidivs
pusha
aam
pop
mov
cmp
pushf
xchg
fistps
mov
add
xchg
fisubs
xor
add
add
add
add
mov
lret
mov
xchg
dec
rol
xor
add
dec
adc
mov
lock
add
push
fcmovnb
add
aad
fildll
pop
in
add
repnz
dec
jb
cld
inc
push
andb
push
push
inc
data16
jecxz
test
add
scas
inc
adc
jmp
mov
jp
jl
mov
cs
popa
adc
cltd
aaa
sub
push
stos
add
and
pop
enter
cli
in
jp
divb
call
sbb
push
call
mov
dec
insb
add
cmp
cmp
scas
loopne
fcoml
adc
adc
push
hlt
leave
mov
dec
pop
xor
les
push
sarb
cmp
mov
pusha
cmp
test
insl
push
add
int
aad
mov
push
stos
add
cmc
add
add
fmul
popf
push
adc
lods
cwtl
jmp
jp
cld
stos
out
ret
add
and
xor
sbb
add
in
pop
sub
popa
pop
cli
dec
mov
and
jecxz
stc
cmp
fbld
or
mov
push
inc
hlt
pop
xor
lcall
mov
test
aam
adc
dec
sbb
xchg
push
add
popf
ds
pusha
add
push
cmp
mov
lahf
xlat
xor
scas
or
aad
es
jge
jns
aas
push
mov
add
scas
test
mov
aas
xor
cmpb
faddl
fldt
pop
ret
cmp
add
outsl
loop
iret
jp
test
stos
roll
ja
cli
pop
lock
xorb
int3
or
add
stos
jecxz
movsb
adc
popa
stc
out
inc
xchg
inc
mov
jnp
mov
add
push
jb
fs
sbb
lods
cmpb
out
add
xchg
jbe
es
loope
xchg
mov
das
in
mov
cmpsb
push
xor
dec
push
loopne
fs
jo
sbb
or
xorb
xchg
fidivrs
data16
cmp
insl
sarb
das
aam
lea
out
lcall
pop
jae
xchg
test
push
jl
sbb
ss
stos
adc
jmp
push
cmp
mov
adc
dec
mov
xor
jmp
imul
inc
icebp
fiadds
test
add
stos
add
loop
je
daa
into
out
movsb
ljmp
loopne
outsl
pop
sbb
sbb
insb
mov
or
mov
shll
pop
imul
cmpsb
lods
add
int3
sub
pop
add
adc
mov
add
push
in
insl
add
not
sub
mov
adc
in
jns
xor
and
mov
sbb
movsb
jmp
and
loope
vmaxps
add
ret
repz
clc
inc
scas
ja
rolb
popf
sahf
rcrl
sbb
bound
mov
ljmp
arpl
or
xlat
cmp
add
cmp
inc
pop
test
in
enter
rcrl
imul
arpl
enter
data16
nop
sub
mov
inc
xchg
push
dec
push
stos
dec
lds
shl
xor
stos
and
and
jno
add
push
push
and
push
and
dec
outsb
cmp
dec
push
shlb
push
xor
mov
cmc
int3
subl
stc
sti
add
cmp
les
xchg
cmp
and
pop
aam
fiaddl
or
rcrb
test
rorl
sahf
filds
jle
xchg
mov
cmpsb
test
jno
pushf
and
mov
add
xchg
test
lds
mov
cli
push
lods
mov
mov
sbb
and
mov
mov
jge
mov
fistps
and
scas
add
movsl
sub
loopne
jne
sub
jl
lods
and
nop
inc
dec
cmp
cmp
sbb
pop
mov
or
cmpsl
jno
xchg
push
ss
add
out
out
push
cmp
idivb
leave
mov
xor
or
mov
aam
or
push
push
cmp
jns
stos
mov
shrl
or
fdivp
orb
add
repnz
ret
fwait
mov
loopne
sub
mov
and
nop
fs
mov
jbe
cwtl
dec
dec
icebp
mov
in
and
push
cmp
lret
add
out
mov
adcl
fsubl
pusha
lods
adc
pop
xchg
dec
cmp
jo
aaa
insb
cmp
add
enter
xchg
mov
mov
push
cmp
addb
arpl
xchg
insl
or
xchg
inc
imul
or
inc
pop
adc
dec
cwtl
push
hlt
inc
in
rclb
and
or
mov
in
imul
and
mov
add
sbb
mov
add
pop
cs
push
test
add
in
out
pop
xchg
push
mov
je
int
or
addb
sub
mov
add
arpl
mov
repnz
mov
xor
sub
sub
push
xchg
and
add
cmc
outsl
push
mov
lods
outsb
mov
adc
fs
jb
arpl
jle
push
ja
inc
les
inc
lods
sbbb
cwtl
push
xchg
imul
dec
push
hlt
pop
mov
add
jns
inc
fistpl
sbb
mov
and
push
push
enter
sar
movsb
jg
or
cltd
pop
mov
clc
mov
xchg
add
ljmp
push
mov
rolb
andb
cmp
and
int
lods
pop
add
cmc
mov
mov
push
clc
dec
aaa
jbe
mov
int3
out
leave
add
jnp
es
nop
mov
pushf
inc
or
mov
inc
in
sbb
fiadds
repnz
call
mov
mov
mul
int3
jmp
push
in
mov
cli
fwait
dec
imul
sub
push
je
jae
pop
sbb
inc
arpl
jmp
cmp
sbbb
xor
in
mov
pop
stc
in
test
enter
jle
and
push
insb
pop
and
xor
mov
jne
add
xchg
mov
add
test
rol
sub
xchg
imul
fldl
mov
cld
push
and
inc
out
mov
cmp
push
loop
das
xlat
add
aas
push
adc
out
add
cs
mov
add
mov
sub
insb
fs
arpl
shll
outsb
loop
fcoml
iret
out
outsl
mov
mov
mov
call
filds
pop
loopne
dec
lret
sbb
sbb
and
dec
xchg
cmp
pop
sbb
sahf
mov
int3
add
and
add
pop
ja
mov
mov
sub
inc
mov
push
adc
mov
inc
mov
mov
shl
xor
ja
mov
mov
sahf
mov
adc
add
loopne
adc
sbb
stc
cmpsl
xchg
add
cmpsb
inc
pop
fnstenv
sti
jno
adcb
xchg
popf
xchg
push
jmp
sub
mov
nop
add
xchg
jno
insl
mov
sub
and
sbb
mov
sarl
add
jne
add
cmpsb
out
nop
sbb
mov
subb
xchg
pop
imul
xlat
push
jo
xchg
mov
jbe
or
mov
add
add
cmp
sbbl
mov
pusha
mov
jg
sub
les
sbb
add
mov
pop
fsts
in
pop
fisubrl
mov
xchg
add
aam
loopne
in
clc
or
pop
sub
and
or
mov
or
pop
mov
popa
gs
ja
sub
je
adc
mov
clc
rcrb
es
daa
int
das
sti
sbb
mov
inc
mov
cmpl
xor
subl
les
and
mov
lret
jmp
je
sbb
mov
sub
ja
adc
dec
or
cs
inc
add
or
adc
xor
fadd
jmp
add
xchg
mov
leave
xchg
mov
dec
push
int
mov
push
inc
or
cmp
cmp
sbb
sti
int3
cs
pop
inc
lods
add
repnz
mov
push
cmpsb
imul
in
mov
in
pop
mov
mov
adc
sub
adc
nop
sbb
mov
fidivrs
icebp
xchg
fidivrs
ret
fnstsw
out
push
add
jmp
arpl
jb
pop
je
inc
lock
ret
and
jae
lahf
sbb
pusha
and
fs
and
pop
sbb
or
pushf
jbe
in
mov
jns
add
jmp
cmp
cmp
add
inc
sub
jge
jb
push
lock
sbb
addb
idivb
fdivp
lods
push
int
mov
dec
xorl
es
add
outsb
cltd
fistl
mov
in
add
out
loopne
ret
add
iret
xor
test
shlb
add
and
notb
in
sbb
nop
inc
xor
test
inc
and
cmp
xchg
and
cli
lret
add
add
mov
xor
or
push
xchg
mov
mov
leave
inc
adc
rcll
jae
pop
xor
aas
dec
jo
iret
rclb
lds
add
push
add
or
and
sub
and
lds
sbb
sbb
mov
push
es
xchg
sub
and
ficoml
or
jle
roll
mov
mov
in
test
test
cmp
or
sbb
loop
nop
lods
mov
shlb
mov
shlb
insb
pop
fwait
cmp
mov
add
cltd
call
push
out
sbbl
add
and
leave
and
mov
and
les
xor
rol
jne
sbb
cmp
sarb
stos
xor
cmp
and
push
sub
xchg
lea
mov
addb
test
xor
dec
idivb
hlt
mov
pusha
mov
rcll
and
test
sub
inc
jae
mov
sub
loope
cmp
and
cmpsl
mov
sub
cmp
inc
xor
das
add
cmp
mov
push
sub
int3
inc
jae
sub
data16
sarb
into
inc
mov
mov
add
mov
fisubs
add
adc
or
add
add
movsb
cmp
outsl
and
cmpsl
cmp
enter
subb
adc
add
clc
inc
enter
cli
and
sbb
mov
cld
push
test
je
mov
test
rorl
mov
ja
xchg
inc
push
add
dec
add
and
inc
or
add
xchg
pop
adc
popl
mov
lock
sahf
imul
das
into
dec
inc
cmp
push
lods
outsb
push
repnz
sbb
push
lret
scas
or
push
pop
jl
cmc
sbb
test
icebp
aad
push
sbb
or
add
cvtpi2ps
repz
push
gs
test
fiadds
or
test
push
inc
or
adcb
jl
cmp
xchg
or
xor
cld
mov
fisubrs
mov
cmp
mov
inc
cmc
inc
outsl
push
mov
data16
mov
adc
mov
sbb
pop
mov
push
xchg
sub
mov
loopne
ja
out
sub
mov
fs
test
jg
dec
dec
sbb
leave
dec
adc
push
fildll
popf
fs
mov
out
and
sub
adc
add
add
cmp
add
sti
icebp
hlt
adc
clc
mov
lcall
addr16
xchg
rclw
push
mov
xor
mov
stos
add
andb
fistpll
add
jnp
loope
lock
cmc
inc
pushf
flds
loope
mov
push
pop
cmc
mov
xorb
stc
add
or
js
icebp
xchg
mov
popa
inc
add
icebp
mov
add
hlt
pusha
flds
jbe
add
lods
roll
test
in
cmp
add
pusha
xor
imul
and
add
pop
fwait
lea
mov
or
inc
repnz
mov
pusha
call
sbb
adc
outsl
mov
and
inc
add
scas
fnstcw
jne
mov
pushf
stos
cmp
push
arpl
xor
inc
ja
sbb
sbb
ljmp
dec
mov
shlb
cld
jb
jp
sub
inc
add
lods
jp
pop
loopne
or
mov
test
jns
sbb
pop
jg
fisubl
add
popa
add
xor
lret
adc
fmul
imul
lock
movsl
xchg
push
add
iret
out
sarb
flds
rorl
in
mov
insb
add
pop
int3
in
rolb
addb
xlat
add
pop
icebp
shlb
jl
shll
xor
mov
mov
addb
cli
push
or
mov
jp
inc
rorb
mov
in
sbb
xchg
xchg
cmp
jns
fwait
xor
mov
rolb
fists
add
cmp
movsb
out
xor
dec
in
mov
xchg
into
sbb
or
dec
sbb
cmp
sub
push
fcmovnb
rolb
lret
add
push
pop
clc
pmullw
bound
pop
mov
lahf
add
jbe
xchg
lds
dec
imul
pusha
and
inc
roll
pop
or
and
mov
in
std
jp
movsb
mov
inc
jecxz
hlt
push
into
add
clc
ret
scas
or
pop
addr16
pop
dec
call
mov
mov
add
in
mov
repnz
sti
sub
push
dec
aam
int3
leave
add
iret
xor
mov
sbb
add
inc
adc
cld
sub
mov
add
jmp
jnp
je
mov
rol
inc
cmp
dec
push
add
hlt
idivl
jns
add
enter
roll
or
sbb
nop
cli
mov
faddl
mov
repnz
mov
scas
bound
movswl
lcall
fcoms
push
out
pop
cmp
imul
mov
je
xchg
add
lahf
out
add
pop
jns
ret
and
dec
pop
les
add
cld
jae
xchg
int
add
fbld
mov
sbb
pop
mull
push
out
xor
sbb
xchg
pop
mov
ljmp
setbe
adc
mov
sti
aas
dec
aaa
mov
dec
push
dec
repnz
out
mov
out
and
sbb
mov
cmp
mulb
loope
sarb
mov
stc
add
and
mov
jle
and
push
xchg
orl
aaa
adc
in
add
cmp
iret
popa
mov
xchg
mov
jge
mov
mov
xor
push
les
ljmp
test
jg
sub
outsb
imul
aad
mov
add
mov
cltd
adc
ljmp
add
dec
inc
call
add
jbe
and
scas
add
jge
lcall
mov
aam
outsl
mov
cwtl
insl
mov
push
mov
fimull
jle
xor
add
xor
adc
stos
rorb
or
pop
add
pop
cltd
mov
fsub
mov
in
dec
adc
push
add
inc
stos
scas
pushf
and
loop
movsb
call
xchg
in
mov
sub
adc
xchg
xchg
in
xor
mov
sub
cmp
adc
or
lods
sub
or
xor
rolb
adc
je
cmp
push
lahf
mov
inc
xchg
test
test
sbb
loope
mov
or
ljmp
mov
out
cmp
sbb
lahf
pop
add
mov
xchg
and
sbb
add
mov
add
sub
pusha
xor
jge
mov
xor
add
and
shr
cmp
add
inc
jnp
sub
adc
ja
jae
cmpb
repnz
out
movsl
popa
sbbb
in
and
jecxz
adc
test
pop
jo
jnp
or
add
lea
jns
lock
add
mov
test
mov
std
stc
popa
jnp
add
push
pop
in
int
sbb
frndint
notb
popf
xchg
dec
add
cmp
std
rolb
fistpl
pop
lret
stc
lods
cmp
dec
pop
lds
cmc
andb
dec
test
push
mov
aas
inc
xchg
add
mov
push
add
mov
sbb
sbb
cmp
jb
dec
insl
sub
pop
mov
jge
add
loope
xchg
fs
filds
inc
inc
mov
stos
push
into
dec
sbb
es
or
cmp
inc
and
add
mov
cld
push
add
call
sbb
add
sahf
mov
xor
leave
push
lods
das
push
add
imul
sbb
cmp
or
rorb
loopne
call
sahf
mov
std
cmovl
pop
add
adc
stos
sbb
jl
clc
sahf
stos
jg
daa
shlb
movsl
ljmp
dec
cwtl
cmp
cld
mov
fwait
and
sbb
int3
ret
jl
pop
fists
dec
push
les
add
cmp
in
dec
out
out
int
sbb
lods
mov
or
adc
fstpl
add
inc
xchg
sarl
fstpl
lret
mov
push
add
mov
lea
push
loopne
mov
dec
cmpsl
roll
push
dec
cmc
rcrb
push
mov
mov
pushf
mov
outsl
mov
xor
jbe
add
outsb
aaa
sub
int
cmp
dec
xor
rorb
hlt
sub
hlt
cmpsl
mov
les
je
loopne
jp
incb
clc
sahf
cli
jae
inc
jbe
jne
add
dec
data16
aad
adc
loopne
rorl
sbb
lea
add
add
sbb
pop
ja
add
adc
xor
ret
jp
xorb
jl
add
lea
push
add
xor
jbe
sbb
add
cwtl
ffreep
and
xchg
mov
jo
add
cwtl
mov
adc
inc
flds
ret
test
addb
sbbb
in
js
xchg
sbb
movsb
pop
ja
stc
stos
add
lods
adc
fistpll
push
add
push
movsl
jge
xchg
popa
xor
jle
nop
add
or
pusha
call
or
jo
add
test
inc
mov
pop
add
cmpsb
pusha
jne
sub
pushf
inc
aas
adc
test
pop
aaa
add
fcoml
fists
push
sub
adc
add
inc
xchg
dec
mov
push
paddsb
push
call
mull
sub
jl
and
icebp
cld
mov
jg
inc
insl
adc
lds
test
mov
idivb
or
ret
cmp
cmp
add
and
cmc
dec
cmp
push
xor
cmp
add
pop
mov
mov
jae
inc
ret
orb
xor
enter
loopne
iret
cmpsl
dec
add
sub
pop
loope
in
pusha
xchg
mov
push
leave
adc
inc
add
or
xchg
stos
dec
push
jmp
xchg
dec
sti
fwait
mov
adc
aam
mov
add
xor
pop
mov
jge
js
add
fstpl
ret
xchg
pop
add
sub
mov
add
mov
add
ffreep
add
fsubrl
or
pop
jns
fdivrp
add
cld
sbb
stos
fidivl
sbbl
rcr
outsb
cmpsb
add
inc
sub
iret
xchg
insb
adc
dec
popf
sub
and
rcrl
xor
xchg
xlat
int
inc
cmp
fwait
xorb
add
test
stos
add
fucomi
mov
jo,pn
mov
pushf
dec
test
out
negl
or
movsb
ljmp
popa
and
xchg
mov
fdivrs
subb
jne
add
xchg
mov
sbbb
in
out
outsb
sub
push
rolb
or
push
cmp
pop
fwait
sbbb
lea
push
mov
pop
push
add
pop
pop
ffree
test
pop
aas
movsl
repnz
ja
cmp
add
adcl
jmp
push
je
into
shll
popl
push
fidivl
mov
jp
mov
mov
ljmp
cwtl
pop
stc
mov
mov
daa
cmp
add
dec
mov
xor
xchg
fnstcw
pop
sbb
adc
push
loope
add
xchg
and
popa
mov
add
pop
pop
out
add
inc
xor
inc
add
ss
scas
add
and
cld
aad
add
mov
mov
movsl
sbb
jmp
add
mov
int3
daa
dec
fwait
add
jmp
ret
iret
dec
inc
add
fcmovu
and
inc
pusha
inc
cmp
aam
sub
add
add
cmp
mov
dec
add
jl
jmp
xor
add
xchg
and
stos
jge
aas
in
mov
aas
mov
push
loope
add
pop
out
cld
inc
aad
mov
xchg
mov
fbld
mov
leave
repnz
js
push
test
popa
push
jl
sbb
aad
push
mov
fmuls
dec
and
insl
test
xor
inc
popf
jl
jg
out
ret
aaa
mov
or
pop
cmp
lcall
fiaddl
and
jecxz
pop
sub
pop
lcall
lods
sub
movsl
xchg
repnz
add
and
cmp
hlt
stos
push
wbinvd
jb
ja
or
xor
add
mov
movsb
add
or
xchg
repnz
test
sarb
inc
mov
jns
test
push
loop
fdivp
fwait
add
push
xor
cmp
dec
arpl
inc
cmp
in
das
clc
outsl
jle
inc
js
ja
jmp
mov
outsl
push
and
loopne
cmp
add
and
add
pop
das
or
dec
adc
repnz
add
shrb
mov
stc
add
cmp
stos
add
loopne
push
mov
inc
inc
and
stos
testb
mov
int3
shll
add
xchg
movsl
cs
fiaddl
in
insb
call
sarb
and
je
adc
sti
and
xor
or
add
cmc
push
or
inc
add
add
movsb
dec
cmp
mov
into
mov
lods
cwtl
bound
aad
dec
sahf
inc
andb
jno
inc
stos
rcrl
lock
add
inc
cmp
shl
shrb
mov
mov
mov
add
mov
xchg
mov
nop
xor
xchg
push
stc
mov
pop
xchg
sti
dec
addr16
xorl
sbb
inc
adc
mov
mov
sub
flds
cmp
or
cwtl
xor
out
mov
lock
pop
xor
xor
jnp
cmpl
lock
xor
mov
add
dec
cmpsl
xchg
add
into
fcomps
int
imul
jnp
nop
fsubr
xor
sub
inc
out
sbb
movsb
push
movsb
add
sub
stc
push
xor
mov
pop
iret
mov
rcrl
insl
roll
ss
or
adc
xor
or
or
test
gs
or
loope
sbb
cli
test
and
leave
or
xor
rolb
lods
or
aaa
lret
test
outsb
mov
or
and
push
jg
mov
dec
or
push
lret
stos
mov
fisttps
pop
popa
enter
adcb
mov
dec
sub
lahf
shl
and
sbb
mov
or
mov
sbb
frstor
daa
ds
dec
popa
cmp
sbb
sub
pop
and
mov
and
pop
xchg
pusha
push
loopne
ror
push
outsb
scas
ds
push
add
jmp
xor
hlt
or
mov
addl
movsl
rolb
push
dec
pop
or
add
push
fbstp
in
subb
ficomps
add
popf
hlt
push
adc
add
stos
pop
mov
outsl
mov
jae
add
jae
inc
lods
clc
arpl
xor
xor
adc
inc
add
xor
jp
adc
enter
dec
lock
in
add
mov
neg
pop
aam
add
and
and
dec
push
and
lret
into
dec
cmp
fildl
aas
pop
shrb
pop
mov
inc
aas
sbb
adc
addb
add
dec
sub
aas
addr16
rcrl
or
xor
inc
add
stc
sub
fcomps
adc
icebp
fisubrs
mov
adc
je
xchg
push
and
aam
push
insl
pop
dec
inc
mov
or
movsl
xchg
dec
adc
out
sub
and
dec
adc
out
test
daa
sbbl
fdivl
shlb
ds
in
pop
jg
sbb
and
xchg
xchg
pop
or
sub
pop
movsl
scas
dec
and
jle
stc
mov
sub
sbb
push
lock
int3
adcl
jae
shlb
sub
add
or
or
push
cmp
or
cmp
and
imul
inc
or
adc
cmp
xor
in
outsl
test
enter
arpl
hlt
shrb
pop
cwtl
mov
pop
jo
or
call
movsb
inc
nop
pop
jb
xor
outsl
xchg
and
adc
push
lock
xor
loop
adc
xor
test
outsb
sbb
scas
jns
fs
enter
fimuls
xchg
add
mov
xchg
or
stc
xor
adc
pop
mov
xor
dec
cltd
add
pushf
cmp
or
into
nop
add
in
inc
push
pusha
les
and
inc
add
push
lods
sbb
shrb
sbb
arpl
jmp
dec
in
nop
enter
push
nop
sbbl
add
sub
jnp
lock
fwait
shll
add
inc
sub
fs
add
and
mov
xchg
jle
sti
jp
push
xor
iret
sarb
or
add
xor
lret
mov
cmpsl
sbb
call
popa
mov
and
xlat
js
sub
mov
add
adc
outsl
add
jns
mov
xchg
movsb
or
ljmp
cmp
dec
loopnew
pusha
fsubp
add
fstps
stc
sub
and
jo
mulb
add
addr16
xor
pop
fldenv
sub
dec
pop
jno
add
xor
xor
je
sub
adc
dec
add
sahf
test
test
lea
dec
and
cmp
outsl
pushf
push
leave
ftst
sbb
sbb
fwait
call
add
inc
or
movaps
add
es
dec
test
adc
lcall
pop
aad
cmp
add
jae
jno
ljmp
repz
leave
add
add
data16
div
jns
add
xor
cmp
cmp
inc
jge
add
ficoms
cmp
and
fiaddl
test
shr
sub
frstor
sbb
xor
cmp
jne
ret
push
push
es
int3
shrl
jo
ds
je
add
lock
sbb
insl
mov
sbb
add
add
loope
das
cmp
push
scas
incl
in
pop
inc
inc
movsl
fdivs
fidivs
add
test
pop
hlt
mov
mov
dec
stos
outsl
add
cmpsb
xchg
fsubl
loopne
test
xchg
mov
add
mov
pusha
jb
add
xor
jl
push
aaa
push
add
loopne
adc
aas
add
xorl
inc
pop
cmpb
ja
sub
pusha
adc
subb
pop
stc
loopne
xchg
push
popaw
outsb
sbb
insl
or
cwtl
add
loopne
in
add
xor
push
adc
or
and
add
movsl
sahf
pop
xchg
xor
aad
push
dec
inc
pop
pop
dec
xchg
js
add
adcl
cmp
sbb
push
mov
fmull
xchg
dec
inc
adc
adc
lcall
jb
mov
nop
cmp
sbb
scas
cmp
mov
and
dec
push
mov
fnsave
adc
pop
cltd
jle
jp
add
insb
inc
adc
sahf
pusha
add
cmp
adc
add
pop
or
jp
xor
ret
inc
xor
movsl
gs
jmp
add
testb
hlt
pop
mov
popf
xor
pushf
shlb
dec
add
add
call
mov
add
stos
pop
je
or
cmp
mov
jnp
sbbl
fs
add
popa
decl
mov
fisttps
shrb
jmp
xor
lcall
xchg
mov
pusha
adc
add
pop
lods
xlat
pop
cmp
add
push
shlb
test
or
add
scas
jge
jbe
imul
jmp
pop
add
jp
mov
fs
ficoml
aas
cmpsl
or
mov
cmpl
call
xor
mov
movsb
test
loopne
adc
imul
testb
sbb
jmp
rol
inc
test
test
xchg
add
push
iret
lret
adc
push
add
inc
aaa
cmp
add
aam
cld
push
push
lcall
xchg
or
ret
lahf
inc
mov
cwtl
dec
into
add
mov
jp
rolb
scas
xor
add
and
xor
sub
jae
cmpb
dec
add
sub
xor
add
xor
enter
sbb
pop
dec
push
push
mov
repz
rcrb
pop
mov
loopne
loope
add
imul
xchg
je
mov
inc
loope
rorl
insl
out
je
pop
xor
add
or
pop
paddb
cmpsl
inc
adc
fbld
cli
mov
subb
push
xor
sti
rcrb
mov
and
inc
sub
clc
push
cmpsb
dec
push
add
sbbb
inc
add
daa
pop
out
or
sub
add
imul
mov
call
inc
cmpsl
shll
fisttps
loop
sub
cld
add
mov
jbe
call
mov
imul
movsl
pop
sub
add
aam
mov
cli
repnz
mov
inc
jae
sbbl
mov
leave
push
push
dec
sbb
outsl
push
cltd
mov
jne
add
enter
jbe
dec
add
fadds
mov
popa
sbbb
jnp
xchg
lock
add
jl
inc
add
call
jbe
adc
mov
ljmp
ret
repnz
xchg
frstor
in
adc
jo
scas
pop
call
add
outsl
jge
xchg
lods
add
shr
lret
jecxz
data16
shrb
outsb
jnp
roll
dec
or
add
jno
jo
sahf
add
cli
fsubs
cmpl
hlt
daa
mov
data16
mov
paddw
pushf
fnstsw
cmp
scas
mov
icebp
mov
jp
mov
xchg
adc
repnz
pop
sub
jmp
sbb
jmp
hlt
clc
sbb
push
lock
les
pop
push
js
mov
sbb
inc
pushf
add
dec
add
nop
cld
aas
adc
push
sbb
stos
adc
int3
pop
repz
out
or
pop
sbb
mov
sbb
in
add
fcmovb
push
pop
xor
mov
lea
daa
popa
sub
fldl
xchg
ja
jbe
xor
mov
xlat
mov
jae
dec
pop
sti
or
push
xchg
add
add
movsl
sbb
pop
add
outsl
xor
lret
sub
push
rolb
mov
adc
lcall
stc
addl
iret
aad
ja
aam
add
in
rcr
add
daa
clc
and
mov
mov
add
call
and
sbb
pop
inc
push
or
pop
dec
sbb
mov
add
or
adc
pop
in
scas
add
push
cld
inc
push
lcall
and
test
fs
and
mov
cmp
shlb
sbb
fiaddl
and
xchg
xchg
rcrb
imul
mov
stos
pop
mov
mov
fidivrl
faddl
pop
loop
push
adc
js
push
xor
xor
mov
fstl
cld
xor
enter
cmp
add
arpl
movsb
add
aam
fildl
out
outsl
imul
dec
test
push
jge
add
ja
mov
jmp
mov
sti
or
adc
lods
mov
mov
or
aad
adc
dec
repnz
mov
cs
push
bound
dec
sub
inc
add
dec
or
sbb
pop
mov
out
add
mov
scas
push
add
xor
inc
out
push
out
add
roll
push
xor
xchg
dec
xchg
sub
arpl
jne
in
push
hlt
xchg
mov
orb
inc
int
jb
js
pop
add
jle
and
add
xor
fidivrl
mov
adc
push
mov
rcll
cmp
pop
add
or
sbb
mov
clc
shl
sub
ja
adc
jae
outsl
imul
or
xchg
mov
mov
dec
pop
xchg
add
hlt
mov
add
adc
dec
fcoms
add
and
add
mov
adc
dec
icebp
add
aam
push
jno
filds
dec
jge
in
add
aad
mov
push
loope
pop
in
int
lds
pop
xchg
out
push
xlat
int3
jo
jb
jl
and
je
es
cmc
aam
cmp
popa
loope
out
outsb
add
nop
mov
add
pop
call
rolb
test
push
loope
add
lret
sbb
jmp
adc
inc
test
insl
pop
dec
popa
cmp
and
loope
push
jnp
and
xor
add
adc
cmp
xor
and
pop
push
jne
and
add
jno
adc
xor
fldcw
cld
sbb
icebp
mov
xor
sbb
mov
adc
jns
test
add
lret
cmc
sub
movsl
leave
fidivrs
cld
int
sti
mov
lret
add
sub
pop
add
or
mov
lcall
and
mov
fs
es
mov
or
nop
xor
mov
add
dec
inc
popa
jo
out
cmp
adc
inc
test
shlb
iret
cmc
adcl
mov
les
lds
int3
inc
fs
xlat
and
jo
adc
dec
or
mov
add
cmp
mov
and
xor
sub
lea
xor
add
dec
repnz
cmp
sti
insl
inc
mov
pop
loop
push
xor
push
mov
dec
aas
adc
popf
repz
fildl
ffree
leave
jp
movsb
inc
fsubrs
in
rolb
and
flds
not
shll
cmp
mov
sbb
xchg
aaa
insl
adc
inc
add
pop
scas
jne
lret
lret
adc
add
cmp
sub
jmp
incl
lret
push
cmpsl
adc
and
add
add
int3
pop
mov
mov
sti
fcomi
fisubl
or
sarb
insl
fs
sbb
mov
add
aaa
rcrl
jbe
sub
inc
sbb
sbb
andl
mov
xchg
fnstcw
sbb
sbbb
arpl
shll
or
cmp
fmulp
push
add
movsb
popa
cmp
fwait
pop
sub
sbb
loop
mov
inc
pop
js
xchg
push
mov
mov
shlb
stos
push
lahf
dec
inc
and
aas
push
adc
leave
pop
pushf
cwtl
mov
mov
inc
xchg
pop
iret
add
ss
mov
scas
adc
jo
mov
std
icebp
or
sbb
cmp
mov
lea
insb
in
mov
mov
bound
rcll
mov
sbb
mov
in
jg
mov
mov
in
xor
repz
push
lahf
test
adc
mov
adc
lds
sub
sub
add
lea
outsl
add
or
cmp
add
mov
sub
wbinvd
or
add
add
jne
push
push
xlat
add
std
in
add
or
mov
ljmp
mov
testb
mov
push
rcr
int3
sbb
add
mov
rcrb
or
mov
aaa
xlat
inc
xor
cmp
or
jp
jne
in
pop
inc
cmp
mov
imul
add
sbb
inc
jl
mov
int3
dec
rolb
insl
popa
arpl
mov
add
imul
push
or
add
movsl
icebp
push
inc
or
test
mov
out
or
lods
dec
movsl
add
push
mov
in
je
jmp
aam
adc
pop
sbb
xchg
cmp
cwtl
add
je
bound
sbb
movsb
push
pop
sub
fisubs
mov
das
nop
lock
lods
bound
mov
enter
inc
clts
add
cmc
test
push
loop
loopne
add
mov
jmp
dec
sbb
sbb
cmp
mov
mov
jmp
gs
add
sbb
xchg
adc
sub
add
lahf
shl
call
push
fidivrs
rorb
xorb
push
cmp
ja
push
add
clc
pop
add
out
and
xor
icebp
push
cmp
sbb
sbb
outsl
inc
adc
out
add
aas
add
insb
daa
xchg
fildll
icebp
inc
jge
add
jle
popf
sub
dec
add
push
sub
dec
ja
aam
mov
dec
in
add
insb
fldl
mov
and
lcall
inc
add
mov
dec
inc
lret
jno
cltd
xchg
adc
jb
sbb
call
sbb
sbb
ljmp
xchg
lahf
cmc
in
aad
add
pop
movsl
shl
lock
add
sub
add
jl
popa
ss
add
jne
test
cmp
add
cmpsl
sbb
stc
inc
pop
push
cmpsb
adc
in
mov
or
test
test
and
jecxz
or
pop
out
add
popa
inc
roll
xchg
add
fidivrs
mov
movsl
fadds
xor
push
fnsave
mov
mov
std
push
add
mov
cmp
aas
and
adc
mov
xor
inc
add
and
insb
jae
add
inc
ja
pop
mov
add
stos
ret
ret
aam
pop
aad
adc
dec
popa
jg
or
rcl
add
int3
imul
testb
mov
add
in
enter
add
and
cwtl
push
push
out
adc
add
inc
add
mov
pop
mov
dec
pop
xor
jne
arpl
xchg
das
les
je
pusha
adcb
test
pop
inc
mov
add
xor
fwait
icebp
lock
les
mov
push
js
mov
add
jmp
xlat
nop
mov
scas
adc
jmp
repz
jl
push
or
adc
add
push
or
mov
fdiv
push
fldl
inc
insl
inc
mov
addb
test
mov
add
jg
lods
add
fistpll
flds
daa
inc
dec
and
shll
jb
cmp
rcrl
fmull
fstl
rolb
adcl
push
pushf
add
leave
aam
shl
cmc
call
ret
mov
lcall
inc
add
ja
add
out
ret
insl
add
mov
xorb
sbb
or
aaa
jnp
xchg
rcrb
push
test
xorb
clc
les
out
fists
pushf
pop
sahf
les
inc
test
pop
lahf
inc
fs
fnsave
push
cmp
jne
aam
push
dec
add
jge
mov
and
add
cmc
jg
inc
mov
aad
and
mov
daa
mov
or
fdivrs
rclb
jg
push
jp
roll
test
sbb
adc
scas
shl
or
js
add
dec
sbb
add
lods
insl
sub
jg
sub
movb
push
add
mov
in
push
lods
mov
in
xchg
shll
xor
add
popf
adc
or
xor
les
dec
cwtl
adc
nop
push
lods
xor
nop
clc
push
and
sub
les
cwtl
sahf
cwtl
repnz
fdivl
negb
pop
mov
sarb
scas
decl
push
jl
mov
jae
push
jge
add
cmp
add
je
outsl
movsb
ds
add
jbe
sub
add
xor
dec
cmc
pop
add
mov
xchg
jne
nop
add
bound
jb
add
and
add
cltd
arpl
into
mov
int3
mov
gs
repz
int
call
sub
inc
cmp
xlat
xchg
call
popf
and
cli
xor
pop
cmpsb
lds
sub
rcrl
loopne
sbb
sbb
sbb
nop
pop
shr
cs
mov
sahf
fnsave
jle
in
lea
pop
scas
loopne
sbb
ljmp
in
jge
icebp
stos
push
add
mov
enter
push
xchg
push
jb
rcrl
or
lods
jo
cli
stc
add
es
mov
nopl
add
or
mov
xchg
loop
inc
ds
cmp
xchg
mov
jge
jbe
dec
stc
xchg
sub
push
loope
insl
mov
add
lahf
cmp
shr
mov
jns
pusha
aas
mov
subb
test
push
jecxz
add
dec
adc
popa
push
xor
repz
sub
shrl
pusha
add
mov
in
add
xchg
sub
enter
loope
mov
or
test
sub
lds
cli
fdivrl
inc
or
add
mov
cmp
mov
leave
iret
test
dec
aam
mov
pop
or
mov
loop
fdiv
scas
add
and
xor
pop
sub
add
add
xor
aaa
cmp
es
cld
dec
xor
divl
add
out
into
aam
cmp
adc
xor
or
subb
test
cmovs
out
mov
stos
adcb
movsb
jno
add
pop
mov
push
add
add
pop
lds
repnz
or
int
cmp
sub
inc
add
jne
ljmp
add
stos
xchg
call
mov
cld
mov
xchg
sub
movsl
xor
mov
ror
loop
mov
out
mov
add
jl
fmuls
xor
or
inc
dec
push
in
repnz
fmull
add
cmp
mov
sbb
psubusb
add
adc
scas
cmpb
add
and
xor
pushf
in
and
add
pop
cmpsb
neg
test
int3
cltd
in
pop
incb
and
add
cmc
sahf
add
movsb
std
addb
push
nop
pop
cltd
scas
add
mov
pop
sub
add
xchg
cmpsl
bound
jnp
and
dec
jle
add
aad
inc
inc
cmp
stos
add
andl
testl
push
lds
enter
fiadds
add
stos
adc
push
mov
dec
out
cmp
sahf
pop
test
lret
insl
add
leave
icebp
out
and
aaa
cs
pop
testb
xchg
jmp
cmp
add
cmpsl
fwait
mov
jae
loope
ret
dec
fistpl
insb
hlt
ja
add
ret
mov
adc
mov
icebp
cmc
add
scas
ja
mov
sbb
stc
sbb
aas
arpl
push
and
call
aad
cmpb
icebp
sarb
lds
nop
adc
std
add
xchg
in
sub
popl
or
mov
dec
add
add
xchg
ret
mov
lds
and
sub
and
mov
mov
add
inc
ljmp
jne
xchg
clc
test
or
cmpsb
add
mov
add
push
nopl
cmp
dec
outsl
cmp
push
sbb
mov
push
mov
xorb
cmpsl
out
pop
in
daa
pop
push
fs
push
push
xor
jmp
mov
mov
hlt
andl
jo
add
cmp
add
mov
push
shl
xchg
add
push
and
int3
pop
flds
das
ffree
push
mov
fistpl
rdtsc
bound
jo
sub
mov
inc
in
out
mov
lds
or
mov
cmpsb
jg
and
sbb
cltd
fisubl
mov
or
jo
push
sub
nop
ja
mov
in
add
xorps
filds
lds
pushf
ss
add
or
jno
xchg
cld
mov
rol
movsb
adc
cmp
add
inc
cmp
lods
add
test
jge
scas
js
or
shr
fcoml
sub
sub
sbb
data16
or
mov
inc
add
add
test
bound
fdivs
jp
jnp
ficoml
and
xor
test
pop
cmpsb
repz
lock
nop
mov
test
push
sub
xorl
std
ja
add
pop
test
sti
popf
add
push
push
test
aas
ljmp
insl
add
mov
inc
sbb
pop
add
popf
nop
xchg
add
jle
call
inc
jp
cmp
add
jecxz
subb
xlat
je
xor
fcomps
dec
add
imul
fabs
rolb
xchg
jp
dec
jno
mov
inc
out
les
pop
add
in
and
jo
sbbb
xor
in
ds
add
push
int3
aad
cmp
pop
pop
fadd
bound
adcb
iret
push
in
ja
push
cmp
mov
mov
int
dec
push
mov
daa
das
out
dec
bound
cmp
mov
daa
leave
add
lods
xor
fdivrl
std
into
inc
push
push
jbe
push
fiaddl
mov
stos
imul
mov
pop
cwtl
add
sbb
mov
test
inc
inc
push
mov
imul
lret
xchg
fdivs
sub
mov
or
add
cmp
add
xor
cmp
cmp
pop
fstpt
add
pop
and
add
ds
jl
out
lods
pop
pcmpgtb
out
add
inc
icebp
add
mov
jbe
dec
dec
xchg
xor
notb
xchg
add
xchg
stos
jl
jle
and
pushf
sub
orl
xchg
sahf
inc
out
xlat
daa
push
ret
lahf
sarb
fxtract
add
aam
or
lods
jl
adc
andl
cmp
push
push
sub
sbb
add
jo
stos
add
cmp
mov
repnz
push
add
fdivp
fstl
ret
nop
shrl
mov
push
rcrl
std
imul
lock
cmc
add
pop
sub
je
verr
scas
xchg
xchg
mov
push
call
rcr
xchg
add
sub
call
xchg
and
pusha
sti
xor
rcl
dec
add
negl
add
inc
sbb
add
jbe
movsb
shll
call
es
pusha
les
lea
inc
stos
dec
jnp
cmp
add
or
sbb
jns
jge
cmp
pop
add
push
notb
fsubs
dec
cmp
enter
mov
mov
dec
ja
mov
cwtl
in
ljmp
and
into
fadd
jge
or
cmp
or
gs
insl
cmp
add
dec
nop
add
pop
inc
add
jmp
lock
loop
cmp
push
add
cltd
sub
movsb
push
add
mov
dec
cmp
xchg
subb
addl
orb
outsb
cli
mov
into
mov
and
sti
or
pop
ret
sbb
in
enter
add
push
in
push
dec
shr
test
fstpt
fiadds
or
mov
dec
subb
sahf
pusha
int3
jp
or
clc
xor
jl
cmpsl
popf
push
into
mov
std
leave
and
imul
lret
jmp
xchg
adc
mov
or
insl
pushf
add
movsl
addb
sti
add
mov
add
xlat
test
pop
mov
jo
mov
or
push
cwtl
inc
jne
loop
add
ficomps
ja
add
iret
sbb
adc
add
jmp
pushf
push
loope
js
dec
sbb
add
insl
fnstsw
in
xchg
add
jne
add
cmpsb
jecxz
add
xlat
sbb
jg
add
sub
stc
jne
aam
cwtl
add
lods
out
nop
lahf
dec
addl
and
dec
jg
cwtl
xor
add
mov
inc
or
and
cmp
mov
loope
and
pop
mov
xor
in
mov
into
jb
enter
call
ljmp
mov
push
sbb
ret
into
iret
mov
lds
and
push
lods
and
call
add
push
cld
gs
cltd
cmpb
loopne
sbbb
push
fidivrl
add
push
stos
push
adc
or
dec
or
sbb
enter
xlat
add
pop
jae
add
fadd
xchg
ja
pop
jle
add
push
jae
or
mov
cmpb
es
shrl
leave
or
insb
lock
call
rorb
add
jb
mov
xor
movsb
mov
mov
lods
add
out
clc
dec
pop
js
sbb
jge
add
and
mov
adc
sbb
xorl
mov
iret
mov
aas
gs
jl
jns
jge
adc
jo
pop
dec
mov
ret
xchg
pop
shlb
and
lock
ss
add
cmp
dec
neg
mov
mov
jo
sbb
add
mov
pop
pop
add
xor
sub
push
fs
cmpsb
lods
rcrb
sbb
mov
xor
add
add
insb
add
push
mov
cmpsl
fwait
mov
mov
fdivrs
je
sub
jle
hlt
inc
add
loopne
mov
sti
cmp
lret
mov
sarl
mov
cld
add
cmpsb
cmp
cmp
mov
sub
pop
pop
rorl
fs
lea
shlb
xchg
loope
sub
lret
xlat
jp
add
mov
sarb
int
sbb
cmp
addl
sbb
int3
xorb
mov
fmul
fwait
roll
mov
test
dec
shll
out
xchg
ret
cmc
add
les
jnp
aas
sub
xchg
std
jecxz
mov
loopne
add
test
fldl2t
stos
scas
inc
xchg
loop
test
xor
add
divl
xchg
sbb
cmpsl
imul
mov
inc
fildl
fistpll
les
int3
add
or
lret
orb
rclb
push
lock
stos
adc
out
xchg
std
jns
pop
add
test
adcb
out
inc
out
ret
inc
fcomps
push
add
test
sub
sbb
xor
inc
inc
clc
add
xlat
orb
xchg
jl
int3
inc
xchg
lock
dec
lock
daa
leave
cmp
dec
scas
enter
adc
sub
xor
popf
mov
cwtl
xchg
or
inc
mov
cmp
push
add
scas
cmp
stos
jbe
jle
xchg
jge
jp
js
sub
sub
pop
leave
push
mov
inc
add
fisttpl
sbb
cmpsb
loop
jo
cmp
sbbb
pop
push
cmp
jne
inc
in
cli
addb
pop
shrb
sbb
jae
imul
mov
and
in
push
add
pop
sbbb
add
negb
shlb
out
shll
inc
dec
mov
mov
imul
inc
push
push
jle
adc
push
pop
xchg
add
dec
cmp
shll
enter
test
scas
and
movsb
xchg
mov
mov
lods
cmp
xchg
add
cld
lods
bound
mov
loopne
pusha
inc
maskmovq
testl
jge
mov
add
shll
inc
add
cmp
rol
incb
adc
negb
out
cwtl
mov
stos
xchg
shr
ds
cmc
add
pop
fiadds
adc
add
push
movups
mov
xchg
sbb
pop
je
mov
jbe
lahf
sub
pop
add
cld
test
pop
xchg
or
popf
sbb
push
jnp
int3
ret
aad
push
outsb
fidivrs
mov
xchg
gs
and
xchg
int
dec
scas
adc
fidivs
mov
and
cld
sbb
call
xchg
mov
cmp
aam
ds
inc
roll
push
jg
fstpl
cltd
jnp
sub
cmc
faddl
mov
sbb
inc
std
les
xor
xchg
cld
lret
aam
fwait
loope
lods
subb
push
sahf
jo
or
addl
in
lret
gs
pusha
dec
xchg
sbb
push
outsl
push
fdivr
mov
outsb
in
aas
movsb
xlat
cmp
pop
jae
adc
ret
xorb
int
pushf
iret
fbstp
int
fucom
xor
mov
test
push
add
mov
jecxz
addw
add
dec
xchg
add
jge
pop
lods
push
mov
sub
pop
mov
mov
mov
or
aaa
lock
sti
add
add
push
shlb
js,pt
cwtl
fdivl
xor
lcall
dec
lds
adc
push
ret
sub
and
ljmp
add
push
jo
push
mov
scas
and
aas
das
mov
xchg
mov
outsl
ror
mov
push
pushf
es
testl
xchg
ss
push
or
add
dec
jne
xchg
mov
fistl
add
mov
sar
adc
das
jg
sbb
add
sub
add
leave
push
mov
cli
xchg
inc
or
les
mov
sbb
nop
mov
loopne
add
movsl
adc
or
xchg
add
inc
stc
lods
mov
movsb
pop
aam
inc
and
insl
ror
ja
add
shlb
shll
push
xor
xchg
in
sub
push
loope
push
repnz
bound
push
add
aaa
fiaddl
shrb
mov
pop
pop
out
or
add
jo
clc
and
gs
dec
push
sub
sub
out
jae
pop
notl
adc
jmp
mov
test
push
lock
add
add
push
push
dec
mov
push
lods
add
pop
cmc
mov
and
sbb
mov
inc
add
in
mov
imul
xchg
mov
std
dec
pop
xor
push
push
mov
mov
aaa
cwtl
addb
xchg
jg
pop
test
mov
cld
sbb
jmp
pop
movsl
cmp
loopne
mov
adc
add
pusha
xlat
add
aad
add
imul
test
nop
push
inc
nop
jle
stos
bswap
lcall
aas
xor
pusha
lahf
cmp
mov
mov
shll
inc
mov
adcl
test
aas
andb
add
pop
and
xchg
aad
jne
cmpsb
pop
adc
mov
sar
imul
xchg
adc
aam
and
gs
aam
testb
cltd
js
lock
out
xor
sub
shll
add
popf
mov
js
xchg
mov
pop
out
add
and
daa
cmp
add
or
jne
add
movsl
and
cmpsl
inc
icebp
cli
les
insb
rolb
adc
ljmp
and
adc
sete
sbb
sbb
or
and
mov
les
push
pop
jp
std
push
mov
in
scas
jbe,pn
xor
jns
add
fs
jl
push
call
add
xchg
lret
jl
in
mov
in
and
addr16
bound
les
lret
insb
sub
push
add
fistps
sahf
or
xor
mov
sub
lock
add
mov
xchg
push
fsts
add
jl
inc
mov
adc
add
test
movsb
add
push
sbb
mov
ja
ret
add
sub
jnp
std
lods
add
test
mov
adc
popf
mov
jns
add
jb
push
mov
call
add
cmc
aas
test
rorl
in
popa
fmull
adc
xchg
nopl
sbb
lret
jge
in
mov
add
add
fdivs
sub
fwait
pop
cmp
adc
add
aam
inc
pop
fisttpl
popf
pushf
push
popa
mov
xorb
loop
xor
mov
adc
jne
mov
dec
pop
fisttpl
push
ljmp
jp
ds
inc
inc
sbb
loop
sbb
and
inc
mov
cmp
inc
gs
rcrl
ja
mov
sbb
or
dec
roll
std
and
push
add
and
push
add
dec
imul
mov
out
aaa
mulb
loop
or
mov
scas
in
inc
movsb
je
xchg
imul
subb
in
mov
hlt
lret
pop
sbb
xorb
fs
sub
or
stos
sbb
mov
or
pop
dec
ds
push
cli
push
add
push
xchg
pop
add
lods
mov
push
rcrb
jns
sti
shlb
xchg
lods
pop
inc
aad
mov
out
or
xchg
sbb
mov
mov
cmp
add
cltd
jmp
mov
ret
mov
mov
mov
loopne
fldcw
popa
or
imul
scas
in
mov
sub
add
jle
and
sbb
mov
shlb
loopne
flds
xchg
call
cli
adc
dec
int
jae
movsb
idiv
loopne
scas
add
and
insb
je
and
sbb
out
xor
add
xchg
jmp
add
into
gs
inc
mov
mov
add
call
into
pop
xchg
pop
push
pusha
repz
xchg
xchg
loop
jmp
add
lret
jne
xor
xchg
rorl
xchg
pop
ret
shr
sbb
add
add
or
cmp
fwait
sbb
arpl
mov
xchg
and
and
out
push
repnz
mov
sub
sahf
fnstsw
mov
add
in
daa
jecxz
pop
add
clc
es
sub
and
pop
lock
aas
mov
rolb
dec
fisttps
push
fnstenv
sub
in
jecxz
xor
sbb
inc
pop
and
fadds
xchg
sub
pop
cmp
add
std
pop
xchg
clc
pop
es
sub
add
push
decl
test
xorb
movsl
mov
push
into
addb
jns
cmp
fdivrs
or
jno
jae
out
mov
mov
lods
add
ret
lret
addl
add
inc
aaa
std
stos
mov
fxch
dec
adc
lret
jle
sub
or
jb
mov
pop
or
push
ret
faddl
add
jnp
sub
xchg
xor
andb
adc
sbb
add
cli
insl
jnp
dec
adcb
bswap
aaa
sub
rol
test
outsl
or
dec
sbb
mov
sub
lods
scas
inc
xor
add
pop
call
cmpl
push
and
sub
loopne
repz
pop
sbb
push
and
push
add
or
cmpsl
add
inc
gs
jmp
push
push
in
outsb
push
pop
popf
xor
add
mov
lahf
add
xchg
dec
add
adc
pop
add
pop
out
popa
add
cmp
in
mov
pop
cli
push
and
pusha
aad
mov
js
hlt
adc
clc
movsl
inc
xor
sub
xor
in
adc
hlt
push
movzbl
mov
scas
repnz
fsubl
or
add
mov
lds
cmp
add
sbb
xchg
xchg
and
stc
jp
nop
add
sahf
incb
loopne
push
cwtl
popa
push
pop
lret
inc
fstpl
test
aad
mov
nop
mov
shld
and
inc
sbb
lahf
mov
jmp
pusha
in
mov
jl
jnp
repz
sub
or
fists
iret
call
add
stos
mov
pop
or
subb
cli
repnz
cmp
adc
add
or
add
test
popa
jmp
lahf
add
mov
xchg
jl
cmp
add
pop
jb
dec
movsb
push
daa
enter
cld
xorb
add
pop
xchg
add
jg
sub
add
pushf
cmp
jns
rclb
mov
xchg
nop
mov
or
movsb
push
jbe
jle
cmp
push
add
cmpl
fbstp
cltd
pop
mov
mov
mov
lahf
lea
add
in
push
and
push
ljmp
dec
mov
stos
cmp
movsb
fdivl
push
push
and
adc
sub
add
and
out
test
or
pop
aam
push
add
rcrb
inc
jae
xchg
push
add
out
jno
add
inc
and
mov
or
jl
mov
roll
outsb
test
ds
adc
mov
stc
fmul
mov
insb
push
stos
adcl
bound
ljmp
test
add
mov
subl
rcrl
js
push
outsl
in
sbb
cmp
movb
xor
push
ss
push
sbb
mov
add
mov
lock
pushf
add
sbb
std
dec
es
push
movsl
nop
sbb
dec
or
cmpsl
mov
pop
fidivl
test
sahf
rcr
rorl
rolb
out
and
mov
push
sbb
sub
mov
cmp
iret
add
sbb
ja
or
iret
daa
loope
enter
jp
add
and
pushf
jle
out
lret
loop
add
xchg
mov
mov
lcall
mov
imul
push
jle
mov
add
pop
inc
int3
add
dec
xchg
inc
int3
dec
pop
add
and
mov
or
mov
testl
or
sub
mov
push
movsb
pushf
mov
jg
cltd
add
lock
and
sub
std
add
sub
mov
pop
out
int
inc
inc
lods
add
add
jle
sbb
fstl
cmp
push
pop
pop
adc
enter
ja
or
adc
inc
cwtl
out
add
popa
es
xchg
xadd
add
aam
ja
into
sahf
daa
pop
push
push
gs
lcall
stos
ret
inc
jle
xchg
adc
pop
mov
jbe
xchg
add
es
dec
adc
push
sub
pop
jmp
add
fucomip
push
jns
fldcw
pop
fsubrs
dec
cld
xchg
cmp
xchg
stc
xchg
dec
pop
aas
jno
or
aam
sbb
fidivl
decb
add
push
leave
pop
jne
mov
lds
add
mov
or
loopne
add
nop
adc
inc
mov
dec
inc
jb
mov
jnp
loopne
out
mov
and
les
jmp
mov
movl
mov
push
inc
adc
sbb
xchg
push
jg
add
xor
and
push
jae
mov
inc
std
add
mov
movsb
add
mov
ljmp
ljmp
jmp
inc
xchg
iret
out
cli
inc
leave
in
bound
xorl
lret
add
dec
pop
adcb
in
sbb
jle
add
pop
cmp
in
es
dec
cmp
popa
add
arpl
sub
push
mov
add
stos
mov
fiaddl
lds
adcl
adc
pop
push
mov
mov
rorl
les
shrb
sbb
dec
add
or
shlb
insb
mov
outsl
loopne
pop
ja
xchg
dec
fwait
and
aad
add
je
js
bound
push
pop
cwtl
test
icebp
pop
or
repnz
cmp
insl
push
xor
inc
add
movsl
repz
adc
mov
jecxz
jge
xor
cmp
bound
test
mov
pusha
dec
lret
add
aam
add
mov
mov
fwait
add
dec
call
lcall
sbb
pop
add
adc
jne
inc
mov
or
xchg
xor
jns
sbb
pop
add
mov
adc
addb
sarl
je
add
push
add
fdivl
jno
pop
pop
xchg
loope
aas
add
xchg
ret
pop
add
cmpsb
sub
pop
add
rorb
inc
into
pop
pop
lret
es
clc
mov
add
aas
movsl
fisttpl
jnp
xchg
andl
cwtl
repz
sub
pusha
or
mov
xchg
add
jo
mov
fs
jno
jecxz
add
negl
out
mov
clc
inc
cmp
mov
loopne
push
cmp
in
adc
inc
add
lods
popf
lock
call
sbb
out
and
int3
dec
pop
scas
rcr
scas
stos
add
pop
mov
imul
push
push
bound
insb
mov
adc
loopne
mov
inc
adcl
cmp
cmpl
push
cmp
rcrb
sbb
dec
mov
fimuls
inc
sbb
inc
out
das
mov
rolb
xchg
aas
inc
jp
add
test
adc
ret
add
cmpsb
loope
inc
addb
outsb
inc
and
jns
jecxz
add
fsubs
push
and
dec
push
add
lahf
dec
insl
aam
inc
nop
jl
push
pop
lret
sub
mov
jp
popa
jle
add
or
in
pusha
std
adc
fidivs
mov
movsb
mov
add
scas
pop
or
arpl
add
andb
into
fidivl
sub
insb
add
roll
clc
xor
adc
mov
pop
dec
and
adc
cmpsl
push
push
pop
pop
or
clc
mov
adc
lahf
loop
mov
cwtl
xchg
rcrb
call
lods
daa
pop
pusha
pusha
js
add
pop
mov
cmc
add
push
xchg
fsubr
sbb
sub
adc
jle
hlt
lds
cmc
inc
pushf
fcmovb
aas
aas
adc
add
sarl
call
push
jb
ficompl
repnz
sti
pop
ja
inc
sub
int3
mov
jnp
add
sbb
push
sbb
push
or
mov
sbb
cwtl
xor
popf
add
mov
dec
cli
mov
push
add
in
inc
pop
call
jbe
lock
xor
inc
pusha
jmp
add
ss
pop
shl
outsb
sub
cld
mov
xor
ret
add
jl
hlt
les
sti
int3
jo
inc
inc
sahf
aas
add
movsb
rorb
mov
cmp
aaa
sbb
pop
add
adcb
rclb
xor
push
in
jbe
pushf
adc
adc
or
xchg
imul
cmpsb
add
or
imull
jo
xor
sub
cli
cmp
sbb
shrb
dec
jno
add
pushf
stos
in
xchg
pop
or
add
mov
aam
cmpsb
xor
fucomip
clc
repz
loop
out
repnz
add
push
gs
sbb
add
dec
mov
enter
or
jge
shlb
push
cmp
jl
fnstcw
into
jb
data16
je
xchg
fists
rcrl
addr16
dec
mov
fcomi
jle
pusha
je
in
lcall
dec
adc
sub
cld
add
pop
pop
mov
mov
je
cmp
adc
sbb
sbb
out
pop
insb
rcr
lods
pusha
dec
adc
sub
xor
or
inc
arpl
mov
dec
cmp
outsl
adcb
int
aaa
add
cmp
mov
fidivl
cs
jge
lods
cmpsb
popl
stos
add
mov
jecxz
pusha
cwtl
push
ja
add
mov
pop
jo
roll
out
jg
dec
test
movsb
jb
add
fisttpll
push
adc
pop
dec
adc
nop
mov
pop
mov
mov
lcall
lods
add
add
shl
xor
stos
inc
shr
jns
arpl
and
mov
cmp
add
inc
in
lds
mov
ret
dec
mov
out
hlt
in
sbb
cmp
add
repnz
and
mov
nop
dec
jp
add
shll
pop
push
pop
and
int3
pushf
add
imul
insb
outsl
adc
out
or
test
mov
xlat
cmp
jbe
and
add
xchg
xchg
sarb
lcall
sbbb
and
iret
sarb
xchg
cmovle
rorl
repz
xchg
sub
lret
mov
add
inc
outsl
sahf
rorb
dec
addr16
jge
clc
xchg
add
cltd
in
add
add
fistpl
push
lahf
sbb
js
adc
in
les
sti
mov
dec
test
cmp
scas
inc
xor
pop
loopne
int
orb
outsb
je
lock
inc
cmp
cld
inc
jle
add
inc
pusha
iret
cs
ja
jnp
add
shlb
add
add
icebp
or
adc
test
imul
cli
sahf
rcrb
nop
push
in
sub
add
adc
pop
sbb
push
loopne
es
lock
mov
push
jno
mov
cli
mov
dec
aaa
mov
mov
sbb
adc
or
rorb
fnsave
sbb
xor
lods
mov
imul
mov
fwait
add
stos
and
add
sub
sub
movb
outsb
push
or
sub
adc
pop
dec
out
lret
jp
jbe
add
inc
jecxz
in
add
pop
cmp
ja
inc
xor
aaa
mov
lcall
addr16
add
imul
and
pushaw
mov
mov
ret
cli
cmpb
addr16
testl
loopne
sbb
cmpsb
lods
into
add
cld
dec
insl
add
cmp
add
inc
addr16
lcall
cmp
sbbb
push
fildl
inc
xor
or
add
hlt
pushf
pop
popf
and
cmp
int3
add
add
push
add
cli
insb
enter
add
push
push
dec
inc
mov
cmpb
pop
dec
add
in
test
dec
clc
aas
and
or
xlat
lds
add
inc
sbb
push
fiadds
cmpsl
rcrl
sub
frstor
add
fbld
add
test
jge
jb
loop
add
cli
fwait
and
fs
loopne
add
mov
stos
into
cmp
or
loopne
or
mov
xor
mov
cwtl
add
jmp
or
mov
and
addl
jne
bound
imul
jge
fstps
insl
sbb
sub
mov
popa
into
nop
add
xor
add
or
or
dec
cmp
adc
test
cmpl
fs
aad
movsb
mov
add
add
push
insb
sub
aam
out
fldl
loope
mov
testb
jbe
mov
dec
orb
dec
add
and
mov
adc
inc
jno
fcmovne
push
inc
or
sarb
jbe
pop
pusha
add
dec
shlb
cld
les
pop
adc
add
pop
push
aam
add
jo
repz
sbb
loopne
or
mov
add
dec
xlat
xor
dec
add
enter
pushf
out
add
adc
lock
in
add
sub
arpl
rolb
mov
pop
add
int
or
add
idiv
xor
out
orb
leave
mov
sub
adc
push
mov
addr16
in
rcrb
mov
sbb
pop
loope
int
insb
mov
sub
pusha
sbb
outsl
add
sub
push
pop
mov
icebp
out
cmpsb
call
mov
jmp
out
xor
in
fs
xor
cmpsb
mov
mov
dec
pop
push
lock
es
popa
in
pushf
mov
in
lds
js
add
rol
mov
xchg
or
push
xchg
pop
lcall
add
mov
xchg
dec
test
pop
fs
xchg
fdivl
sar
add
jmp
mov
cmp
repz
mov
cmp
in
loope
push
push
ja
test
push
movsl
arpl
cs
lods
sub
aas
add
dec
fisubs
mov
adc
test
pop
or
in
jge
jae
inc
or
add
mov
jne
in
jl
js
sbb
jg
adc
pushf
pop
ficoml
addl
mov
lds
rclb
push
cltd
xchg
jl
je
mov
xorl
das
in
shlb
movsl
dec
jbe
lock
mov
das
icebp
cltd
xchg
nop
lret
sub
rcrb
cs
pop
or
inc
sub
fdivl
dec
lret
jle
fimull
and
mov
movsl
jne
cmc
add
push
es
enter
pop
pop
add
cs
xstore-rng
cmpsl
add
add
mov
mov
inc
lcall
push
mov
fxch
xchg
loopne
cmc
scas
xor
xchg
xor
xchg
hlt
in
mov
push
mov
repz
cmp
hlt
fldl
adcb
add
cmc
insb
mov
add
xchg
sbb
mov
and
lods
loope
in
mov
jae
ficoms
sub
pushf
js
std
andl
jl
add
mov
inc
xchg
gs
or
jae
inc
out
or
scas
ret
sbb
jecxz
adcl
and
cld
shlb
mov
in
movsl
fwait
not
popf
add
or
daa
adc
loopne,pt
or
scas
sbb
mov
push
mov
sub
dec
pop
dec
pop
push
mov
push
cmp
pusha
or
fcmove
imul
jb
nop
daa
popa
cs
add
lock
out
push
dec
fsubs
cmpsl
and
ret
or
enter
jnp
add
rolb
lods
push
sub
adc
push
push
pop
inc
push
and
imul
movsl
mov
push
mov
ret
clc
and
rolb
push
sbb
cmc
testb
xor
fisubl
adc
adc
lea
sbb
pusha
call
loope
aaa
mov
mov
push
test
xchg
clc
or
pop
stc
xchg
or
out
pop
rorb
add
icebp
adcb
es
inc
add
xchg
jb
movsl
mov
xchg
pusha
cs
movsb
stc
pop
test
int
test
pop
or
mov
inc
adc
int3
cli
addl
ret
out
subl
loopne
int
ss
lods
jecxz
stos
cltd
mov
inc
pop
scas
icebp
hlt
sbb
cld
cmp
add
cmp
sbb
ret
in
les
xorb
sbbl
pop
arpl
mov
adc
dec
dec
mov
out
int
in
ror
push
cmp
cmc
loop
push
jnp
mov
pop
pusha
jae
fdivrl
add
sub
pop
inc
dec
pusha
sub
and
mov
xchg
push
fdivr
push
popa
add
push
inc
aas
mov
or
ja
adc
enter
ljmp
arpl
mov
xor
es
cmp
inc
add
aaa
or
adc
sub
lret
jl
xchg
cmp
lods
out
bound
adc
pop
add
xor
in
add
mov
ret
rorb
jbe
add
mov
or
outsb
lods
add
cmp
scas
cmp
jb
stos
imul
add
mov
shll
pop
add
negb
jle
and
iret
or
inc
inc
jg
out
xchg
add
add
cwtl
dec
adc
clc
outsl
mov
sbb
push
icebp
call
inc
xchg
add
sub
js
lods
add
incb
bndstx
pop
aaa
pop
jae
ffree
test
xchg
push
adc
sarb
in
pop
push
mov
or
add
js
gs
add
lock
sbb
adc
push
mov
mov
xor
inc
das
pop
loop
loopne
mov
jnp
xor
inc
push
jl
mov
pop
push
in
inc
aaa
lods
and
js
sbb
pusha
pop
push
ficomps
lea
xor
xlat
pusha
and
push
lret
pop
jbe
cs
mov
add
fisubl
xchg
scas
pushf
xor
jle
call
insb
push
push
std
or
stc
cwtl
xor
add
pop
mov
mov
adc
cmpsl
fisubrs
cltd
out
lock
daa
lahf
and
add
inc
mov
popf
xchg
test
insl
add
sub
jne
add
or
nop
xor
pop
or
enter
ljmp
add
ret
shrl
mov
das
add
mov
and
mov
lahf
pop
xchg
and
ret
aas
test
xor
mov
xor
out
xchg
andb
mov
inc
xor
enter
and
add
in
scas
aam
pop
sub
inc
mov
test
fisttpll
mov
scas
les
int3
jg
imul
mov
xorb
dec
push
pop
jbe
test
mov
lds
std
xchg
add
scas
push
je
add
leave
sbb
aam
sbb
jno
mov
lods
jg
inc
ds
add
pop
sbb
imul
bound
in
faddl
dec
insb
sub
ds
lret
rol
mov
adc
add
std
jne
add
mov
cwtl
or
xlat
lds
orl
add
mov
hlt
movsb
andb
xchg
popf
cmpb
mov
lea
repnz
mov
cmp
enter
add
xor
mov
ds
xchg
lcall
mov
lahf
das
popa
jnp
xchg
data16
test
adc
jns
rol
adc
dec
jmp
push
add
xchg
rolb
jnp
in
pop
shrl
pop
or
add
je
cmp
mov
pusha
pop
fdivrs
imul
imul
adcb
sub
xorb
push
sub
fiaddl
sbb
and
dec
scas
push
push
xor
jl
pop
cli
call
dec
fmull
xchg
loope
js
cwtl
cmp
das
andl
mov
repnz
add
push
mov
add
jno
mov
add
dec
icebp
cli
cmp
add
mov
add
in
and
or
xchg
sub
iret
clc
add
mov
jo
nop
cmp
sbb
scas
fcmove
les
lret
fstl
aas
cli
hlt
xor
or
popf
mov
jmp
adc
out
pusha
or
enter
cli
test
push
sub
clc
jns
sub
clc
sbb
add
sti
pop
mov
in
xchg
and
aad
jo
popl
xlat
add
jle
jmp
mov
cli
mov
stos
add
rcrb
in
add
es
jg
fwait
pop
pop
or
adc
jo
add
sbb
mov
out
outsb
push
sub
lret
fbld
fadd
inc
fnsaves
fcomp
add
hlt
sub
and
inc
add
jo
fidivs
add
rcrb
shll
loopne
add
mov
cmc
movsl
inc
dec
mov
ljmp
inc
add
or
add
cwtl
inc
lods
add
add
xor
cmpl
sub
fsubr
xor
sbb
testb
loop
mov
pop
dec
add
mov
mov
je
add
cmpb
push
stos
es
es
lea
mov
or
add
push
jecxz
addl
dec
push
clc
mov
std
or
in
insl
mov
lods
orl
mov
fnsave
pop
xchg
pop
and
inc
jnp
mov
xchg
pop
xchg
mov
pmulhuw
ss
lds
out
add
cmp
aaa
xor
add
push
lock
push
push
scas
push
shlb
in
inc
xor
orl
push
mov
ljmp
xor
mov
or
push
loope
add
pop
and
push
and
xor
clc
add
push
imul
and
fnstcw
ja
inc
mov
mov
shlb
add
out
movsb
add
sarb
sub
fstpl
idivb
addb
std
push
les
loopne
add
xchg
pop
push
and
add
cmp
and
decl
mov
inc
add
push
jo
sbb
cwtl
or
xor
add
daa
je
pop
xor
aad
cmp
add
filds
rcl
lcall
ja
mov
rol
stos
test
cltd
mov
call
or
xchg
pop
fs
and
cmp
aad
cmc
cmp
add
call
sbb
xchg
into
inc
jo
mov
mov
push
stos
aad
test
loope
outsl
push
lock
and
push
sarb
push
xchg
add
sub
sub
add
hlt
ja
es
iret
xchg
jo
lahf
out
adc
xchg
sahf
add
or
rol
mov
add
or
jg
mov
sub
mov
or
xor
adc
sub
loop
and
jnp
jns
faddl
cs
add
hlt
enter
scas
add
dec
repnz
scas
pop
mov
mov
cmpb
fdivs
out
and
fiadds
sbb
add
jno
shl
cld
mov
cmp
or
and
lods
bound
loopne
dec
lret
sbb
add
inc
add
cmp
push
dec
mov
clc
imul
jno
jne
push
lret
xor
repnz
add
mov
test
sub
in
mov
push
push
cmp
insb
orl
lods
pop
add
lods
xchg
inc
push
arpl
scas
pusha
jge
aaa
sbb
out
shlb
add
or
movsl
pop
cmp
fidivl
popa
xchg
pop
and
int3
xor
inc
ret
mov
lret
and
jmp
push
fidivrs
repz
fs
mov
dec
cmp
leave
jb
les
les
int
pop
mov
mov
sub
sbb
jne
mov
mov
push
inc
and
push
lds
rorb
or
shl
inc
gs
cmp
rorl
xchg
jg,pt
insb
xor
testl
pop
add
cmpsb
xlat
inc
mov
sub
pop
shlb
sbb
call
stc
mov
add
jne
mov
into
sahf
push
movsb
mov
sarl
xor
fs
imul
push
mov
xchg
push
add
mov
fwait
aam
jae
add
xor
pop
inc
fnstenv
mov
cmp
ret
inc
sub
pusha
shl
xchg
test
push
add
mov
xchg
pop
bound
mov
mov
and
loop
dec
inc
cmp
pop
subl
call
jae
and
xlat
dec
pop
cmp
add
iret
data16
or
push
pop
pop
mov
sbb
xor
mov
sub
loope
adc
and
test
sub
shll
dec
and
push
enter
mov
inc
inc
cli
ret
push
or
lcall
cmp
xor
or
seta
cmp
add
popl
test
lcall
fisubs
stc
fsubs
sub
xchg
add
pop
cs
fwait
dec
cmp
arpl
leave
out
xlat
push
sbb
and
add
in
or
fldenv
insl
cs
or
push
rclb
test
adc
arpl
cmp
push
and
mov
xchg
cs
xchg
add
pop
mov
cmpsl
mov
pop
inc
jecxz
pop
or
pop
cmp
dec
int3
push
iret
jg
std
add
pop
out
and
mov
sub
adc
xor
outsb
mov
xchg
repnz
rclb
fsubrl
pop
push
pusha
add
push
mov
cmc
jo
dec
add
dec
in
stos
add
imul
dec
pusha
in
jo
lods
fcmovnu
inc
push
pop
sbb
pushf
add
sub
popa
sub
jl
jg
add
or
sub
add
mov
test
sbb
lcall
jle
rcll
lcall
loopne
inc
test
lahf
sbb
mov
xchg
fcmovne
test
out
add
loope
popa
add
inc
out
stos
lcall
arpl
mov
inc
or
jo
mov
xchg
mov
push
rcll
sub
ljmp
bound
xchg
lock
sbb
mov
pusha
sbb
jl
aad
jo
mov
push
js
test
jns
repnz
add
in
adc
xor
add
pop
outsb
ret
push
call
mov
pause
inc
test
sbb
lock
popa
cltd
mov
pop
sbb
gs
xor
and
jg
fcoms
dec
sbb
pushf
cmp
add
loope
jne
inc
ret
or
or
jp
add
dec
fwait
sub
sti
in
xchg
add
or
cltd
xor
rorb
push
mov
xor
aas
aam
fdivrl
int
les
lret
daa
dec
dec
cmc
jle
dec
fwait
sub
xchg
ret
cmp
pop
pop
test
mov
fstps
hlt
or
xor
pop
enter
dec
roll
xchg
xor
sbb
shl
mov
mov
insb
orb
xchg
shll
push
mov
pop
dec
enter
mov
std
cmp
jge
loope
cmp
add
lods
sbb
xchg
jge
adc
push
adcb
mov
sbb
movsb
inc
ret
ja
scas
add
mov
and
jno
or
ljmp
je
in
xor
xor
push
lret
or
jge
popa
jo
lock
add
pop
rolb
xchg
xor
shlb
add
sub
roll
push
add
or
imul
xchg
das
data16
mov
cmp
mov
cmp
sarb
test
cltd
stc
dec
cmpsl
clc
mov
xor
iret
pop
adc
test
sub
mov
xchg
mov
cmp
rcl
push
out
cmp
add
inc
push
in
jge
fdivl
in
sub
push
mov
ss
xchg
add
mov
mov
adc
xor
out
push
fadds
or
std
rcrl
adc
mov
pushf
lods
int3
jns
or
test
jo
lahf
cmp
aas
adc
loopne
or
add
test
add
loop
add
cmpl
xchg
jg
mov
dec
adc
mov
in
sti
cli
inc
adc
test
mov
jl
jbe
lods
inc
cmc
xor
in
pop
mov
loop
xchg
imul
dec
jb
sbb
imul
jnp
mov
nop
in
and
cmpsl
cli
or
jl
push
scas
xchg
jb
call
sbb
hlt
add
arpl
xor
add
shlb
mov
rcrb
out
fs
jo
add
sbbl
stos
mov
xorb
pop
jecxz
shl
into
sahf
and
shrb
sub
nop
loope
adc
jo
sub
mov
outsb
sbb
xchg
les
add
clc
cmp
mov
dec
rolb
mov
sbb
dec
xchg
addb
sbb
xor
and
and
lahf
mov
adc
pop
test
add
jno
aad
or
add
js
sarb
xor
push
inc
outsb
daa
sahf
mov
adc
add
test
xor
scas
jl
imul
outsb
xchg
rcrl
fidivrs
leave
inc
rolb
mov
push
xchg
cmp
mov
cmp
inc
clc
add
movsb
cmp
push
rol
jno
pop
add
jnp
lea
cli
into
push
mov
mov
mov
inc
jae
hlt
adc
mov
int
ret
loopne
inc
mov
add
aad
pop
mov
or
mov
and
or
sub
sbb
push
daa
sbb
xlat
dec
add
flds
rorl
add
movswl
sbb
out
cmpsb
add
add
cmp
cwtl
inc
fcomps
out
adc
cmc
pusha
hlt
aas
dec
adc
fsts
mov
add
mov
adcb
add
sti
or
shr
test
test
les
roll
lods
movsb
pop
lods
cld
movb
fcomps
in
test
push
sub
mov
push
mov
repz
adc
fadd
into
xor
and
jns
xor
lods
adc
pop
imul
inc
enter
cmp
jb
pusha
jle
cmpsl
mov
test
bound
sbb
hlt
or
adc
es
loope
gs
je
inc
push
adc
les
mov
mov
and
sbb
add
xor
mov
fstl
add
out
xor
or
add
sub
xor
in
jno
ss
or
xor
aam
inc
push
int
add
out
ds
leave
pop
test
xor
add
cmp
sbb
mov
xchg
cwtl
jmp
pushf
pusha
mov
pushf
fidivrl
mov
mov
test
into
or
and
fcompl
dec
pop
stc
ficoml
cmp
insl
push
sbb
or
dec
arpl
pop
lock
fistl
pop
icebp
inc
cmp
imul
movl
dec
add
movsb
or
add
inc
cmpl
mov
pop
sbb
cmp
sbb
popa
xorb
daa
addr16
mov
adc
push
or
inc
and
mov
orl
jae
aam
and
repnz
ja
cs
xchg
add
pushf
lock
fadds
mov
sub
fadds
jns
imul
sub
adcb
addr16
cmp
cmp
push
cmpsl
hlt
ja
fdiv
jo
add
cli
lea
jge
push
or
mov
fxtract
lcall
xchg
scas
cltd
mov
pop
dec
mov
jmp
add
push
adc
dec
icebp
dec
adcb
outsb
jecxz
jb
insl
and
loopne
add
xchg
push
test
or
test
nop
mov
add
scas
inc
test
dec
or
pusha
xchg
andb
inc
adc
xor
shll
mov
outsb
add
sub
cmp
mov
jns
mov
rorb
rcrl
sub
or
test
mov
cwtl
xchg
push
cmpsb
fcmovnu
andl
mov
leave
popf
inc
hlt
mov
cmp
test
rorl
add
sbb
scas
add
jno
pusha
or
push
mov
andb
xchg
ja
adc
lret
adc
dec
add
mov
mov
dec
and
xor
push
bt
and
mov
and
mov
call
fwait
addl
dec
std
xor
or
vhsubpd
sbb
mov
mov
inc
xor
hlt
out
push
pop
jl
orb
or
pop
ret
sub
cli
jl
in
cmp
or
xor
je
into
mov
ss
repnz
cmp
cmp
pop
adcl
out
jle
add
outsl
jns
and
daa
loope
lods
cld
js
adc
rcrb
xorl
loop
sbb
or
xor
push
dec
pushf
mov
xchg
dec
sbb
gs
and
dec
add
in
mov
jle
js
add
cmp
loope
xor
pushf
adc
repnz
pushf
cmp
dec
mov
notl
add
push
or
add
mov
cltd
aad
orb
push
data16
test
stos
or
xchg
adc
cmp
mov
sbb
cmp
cmpsb
andl
jo
jmp
fisubrl
cld
xor
addr16
mov
push
rcrl
add
lret
out
xor
dec
lods
clc
enter
test
mov
cmpsl
setae
shrb
xchg
mov
cli
and
pop
add
faddl
push
jns
and
pop
hlt
shll
dec
ret
xchg
sbb
xor
lea
icebp
adc
mov
enter
push
xchg
add
jge
mov
jb
add
xchg
xchg
addr16
shlb
hlt
push
cmp
dec
in
mov
fcmovnu
add
inc
pop
add
fstpl
sbbl
sti
jecxz
cmpsb
sub
push
orb
and
or
adc
aam
and
lret
cmpsl
in
or
add
cmp
mov
dec
or
push
test
add
test
or
ret
inc
cmp
mov
mov
push
push
mov
int3
cmp
addl
push
mov
add
dec
cs
pop
sub
test
cmp
add
icebp
push
cld
cltd
nop
call
ror
out
int
push
std
and
and
stc
sub
push
push
and
add
lea
pop
divl
je
mov
xchg
mov
out
xor
test
inc
xor
add
fdivr
pop
add
xchg
inc
xlat
sub
add
inc
jnp
lahf
ljmp
int3
cltd
es
stos
cwtl
pop
rclb
in
dec
inc
add
ret
xchg
test
mov
fs
mov
mov
std
xor
in
jp
lcall
ds
sbbb
and
add
outsb
mov
sar
loop
pop
jo
and
ds
push
shll
xchg
pop
xor
and
cmp
cld
xchg
loop
and
xchg
add
insl
or
xchg
dec
or
mov
dec
push
add
inc
roll
cld
stc
negl
and
sub
fadd
fdivrs
dec
icebp
add
add
imul
cmpsl
add
lret
test
daa
inc
add
push
push
cmpsl
xchg
xor
lods
stos
andb
pop
cmp
add
xchg
cmpsb
loop
dec
and
inc
mov
imul
jno
add
xchg
int3
push
lret
test
jns
in
sbb
jnp
pop
lds
pop
fcompl
cs
and
lods
mov
lea
in
and
int
jl
pop
jns
add
push
sti
aaa
rclb
cvtdq2ps
je
xor
rclb
sti
clc
mov
insl
loop
add
es
adc
sarb
pop
and
sub
xchg
das
out
adcw
jne
jno
adc
aaa
daa
add
cmpb
jnp
and
inc
sub
add
daa
cld
cmp
add
and
mov
adc
lock
aad
add
add
inc
cmpb
add
xchg
cmp
xchg
cltd
inc
scas
aam
in
fcomps
jmp
cmp
rcrl
sti
xchg
lea
aas
adc
adc
lret
add
xor
int3
add
hlt
inc
lret
dec
pop
rolb
push
cwtl
lods
xchg
add
roll
pop
xchg
xor
mov
cmp
pop
lea
push
cmp
movsl
sarb
jns
push
sbb
enter
cmp
es
lahf
jl
and
je
adc
outsl
shl
jmp
es
gs
arpl
int
imul
subb
mov
inc
js
jnp
sub
nop
lds
add
movsl
dec
and
insb
daa
pop
mov
fiaddl
sahf
shlb
js
push
xchg
pop
pop
dec
pop
push
aaa
test
stos
jne
dec
fimull
and
cltd
or
adc
ror
push
loopne
cmp
dec
cmp
mov
movsb
inc
in
loope
jae
or
push
movups
out
sbb
inc
push
cmp
mov
sbb
inc
fwait
adc
xchg
mov
mov
cmp
push
movsb
dec
mov
jp
mov
cmpl
adc
fidivs
mov
and
or
clc
jo
add
stos
xchg
sub
sub
out
idivl
lea
or
insb
pop
nop
fs
and
xor
cs
dec
jecxz
jg
mov
test
sbb
add
cmp
fsubp
mov
pop
insb
adc
inc
or
ds
inc
pushf
out
cmp
rclb
mov
adc
insb
push
and
fs
mov
mov
movsl
repnz
push
ficomps
add
lahf
test
icebp
mov
pop
fdivrl
aas
xchg
fucom
xchg
sbb
sbb
imul
cld
stos
xchg
cli
cmp
ja
add
mov
ljmp
and
inc
mov
outsb
cwtl
clc
in
mov
pop
mov
inc
aas
cmp
xchg
lret
cmp
adcl
inc
xchg
daa
adc
push
testl
dec
in
cld
test
xchg
daa
jmp
jg
mov
mov
ja
fimuls
jns
or
jne
push
popf
xchg
adc
xchg
rol
ret
pop
or
pop
arpl
int3
add
icebp
scas
outsb
push
jbe
cs
add
les
lods
fcmovb
and
or
inc
cld
adc
int3
adc
pmulhuw
shll
sub
cs
test
popl
push
xchg
adc
sub
sbb
andl
cmc
clc
add
fwait
cmp
imul
push
mov
pop
and
scas
int3
or
dec
mov
mov
mov
rcrl
xor
jmp
arpl
xchg
dec
mov
jle,pn
js
ss
int3
add
rcll
pop
out
pop
nop
lret
xor
out
mov
roll
dec
arpl
inc
mov
inc
aas
addl
pop
mov
push
sbb
test
xor
and
in
mov
sub
hlt
icebp
jo
add
pop
sar
add
add
imul
or
rcr
add
js
push
cmp
jb
add
subl
mov
xchg
add
and
popa
stos
fdivrs
add
xchg
cmp
adc
mov
sbb
cs
adc
push
ret
add
cmp
insb
add
xchg
xor
jp
cmp
pop
lods
or
or
cltd
cmp
push
add
push
sbb
rcll
xor
pusha
insb
das
jmp
jle
mov
addb
jl
push
loopne
mov
mov
mov
mov
push
jb
sti
add
mov
mov
or
cli
xor
arpl
mov
jae
push
pusha
lret
pop
fs
xchg
mov
cmp
sbb
es
or
insl
and
add
out
mov
lods
mov
dec
and
enter
andb
mov
mov
lea
and
sbb
sbb
inc
push
fadds
add
shrl
popf
je
add
aad
lret
mov
ljmp
lock
add
shll
mov
ret
mov
adc
sub
xchg
jbe
push
ret
and
jb
jg
push
sub
mov
shl
dec
adc
pop
xor
mov
and
or
enter
mov
and
mov
ss
adc
inc
fildll
testl
roll
push
out
loope
and
jle
andl
mov
and
mov
jge
add
std
pop
jb
push
push
fs
add
sub
mov
adc
fsub
rorl
jl
xor
push
xchg
xchg
sub
xchg
or
test
mov
push
pop
inc
xor
and
adc
fcoml
mov
aam
out
add
pop
subb
sbbl
xchg
imul
call
pop
inc
fxch
add
scas
stos
cmpsb
jp
rclb
adc
xlat
mov
sbb
mov
iret
je
jmp
add
addr16
sub
xor
mov
dec
and
xchg
jp
loopne
in
ret
push
adc
pop
std
inc
cld
ss
enter
and
inc
sbb
stc
xchg
neg
mov
add
push
add
jo
xchg
pop
fmull
and
gs
sbb
mov
mov
fldln2
sub
out
and
mov
dec
xor
xchg
test
xchg
jnp
lret
jle
std
adc
call
pop
mov
xlat
adc
dec
ss
pop
movsl
loop
xchg
pop
xor
adcb
mov
add
xlat
repz
or
cld
dec
daa
fadds
mov
in
cld
jmp
pop
mov
lds
jge
xor
pop
in
inc
mov
icebp
sbb
push
ret
iret
push
push
dec
xor
clc
inc
popa
clc
jecxz
leave
stc
pop
push
xor
sbb
push
insl
dec
mov
loopne
or
push
pusha
packsswb
fwait
jp
mov
xor
and
and
into
imul
push
push
nop
loopne
incb
jo
mov
in
xchg
pop
mov
sub
cmc
arpl
fisttps
mov
sbb
roll
mov
fdivl
mov
mov
shlb
loope
ljmp
cmp
sbb
data16
adc
stc
jno
test
lret
and
das
push
push
dec
shrl
test
into
lock
arpl
cmp
idivb
sar
cltd
in
ret
jmp
mov
xorb
push
mov
adc
pop
shl
data16
xchg
jecxz
pop
push
pop
mov
xor
les
popa
jo
dec
sub
pushf
data16
pop
nop
add
lods
add
cmp
adc
ss
dec
stc
sbb
bnd
adc
cmpb
mov
lea
rclb
push
sub
sbb
sbb
scas
dec
es
or
jne
out
dec
add
inc
lcall
xchg
dec
inc
enter
scas
imul
ror
mov
cmp
add
pop
mov
sbb
fsubl
mov
adc
cmp
bound
sbb
inc
pop
scas
or
pop
mov
rcl
fucom
and
adc
xlat
jmp
leave
scas
push
pusha
sub
mov
lods
mov
lock
dec
add
pop
pop
test
xor
adc
aas
rol
fstl
jl
outsb
or
movsb
mov
aas
enter
inc
xlat
cmpsb
pusha
xchg
test
pop
cs
lock
arpl
xchg
push
ret
std
push
cmp
and
push
inc
loopne
add
hlt
imul
add
popf
add
adc
push
push
int3
sub
mov
mov
pop
in
call
cmpsb
inc
push
or
xchg
imull
cmc
inc
push
movsb
rcll
or
icebp
and
push
enter
jo
dec
mov
ret
in
orb
fmuls
sbb
sbb
lock
push
lock
mov
pusha
fs
outsb
mov
xchg
ret
jb
pop
xchg
in
adc
adc
and
popa
jnp
sbb
dec
shlb
xor
mov
mov
jae
cmc
add
lcall
xchg
and
sti
xorb
xor
cmp
cld
cs
shlb
jg
add
push
mov
mov
pop
ds
andb
xchg
aam
jmp
fwait
dec
or
add
movsb
mov
xchg
cwtl
aas
add
mov
pop
sahf
pop
xchg
cmp
inc
pop
jecxz
inc
inc
mov
mov
test
pop
scas
enter
cwtl
xor
dec
stc
inc
mov
inc
xchg
popf
movsb
add
xchg
stc
add
testb
and
mov
rcl
rclb
jo
aam
sub
dec
mov
push
imul
adcl
jle
push
inc
insb
dec
add
cld
push
xor
xlat
adc
pop
orb
call
sbbb
sti
adcb
notb
or
jl
jecxz
pop
push
push
add
xchg
xchg
in
mov
dec
jge
icebp
int3
adc
jle
mov
xchg
xlat
lret
or
xor
pop
shrl
ds
hlt
sarb
fs
mov
xor
add
nop
les
fs
repz
adc
pop
adc
nop
xchg
pop
mov
mov
mov
xchg
add
push
jb
dec
std
xchg
loop
repnz
mov
iret
dec
add
popf
cs
pusha
mov
xchg
add
jmp
cld
imulb
inc
lock
and
cltd
shr
je
add
mov
adc
xchg
pop
xchg
dec
sub
movsb
mov
fsubs
jmp
stos
out
notl
adc
dec
loope
pusha
and
iret
aas
testb
lock
nop
and
pop
adc
jbe
and
jp
pop
xchg
lods
nop
mov
clc
xorl
inc
cld
jae
jl
add
cmp
lret
inc
daa
dec
inc
push
xchg
pushf
or
mov
mov
dec
xchg
daa
push
sarb
jno
mov
fistpl
nop
movsb
sbb
add
xor
pop
mov
stos
add
ja
es
sub
popf
and
adcb
and
or
push
pop
push
imul
mov
jo
addr16
or
sub
testl
addr16
add
sahf
sub
xorb
pop
or
rolb
mov
sarb
pop
lea
nop
add
or
sbb
call
or
mov
pop
inc
dec
mov
mov
cltd
add
or
jg
push
cwtl
sar
add
add
testl
jno
aas
pop
adc
push
nop
xchg
inc
xchg
in
or
fdivl
xchg
pop
add
pop
popf
movsl
or
jno
sbb
add
mov
mov
mov
bound
or
dec
outsl
jo
adc
xor
bt
add
pop
lods
pop
jl
pop
mov
mov
push
outsl
rolb
pop
enter
aas
xor
xor
notb
mov
or
xchg
test
adc
jl
sahf
adc
ja
ds
cmp
test
jne
cmc
mov
nop
bound
movsl
push
push
xor
loopne
add
push
mov
les
popf
pop
adc
fcomps
imulb
dec
fadd
movq
cmp
lock
add
lods
and
cmc
inc
push
inc
loopne
jno
orb
sahf
stos
shlb
es
jae
jo
or
push
lahf
pop
sahf
cmp
mov
mov
ret
pop
pusha
loope
or
mov
pop
add
and
in
lea
add
sbb
adc
shrb
inc
sti
xor
cltd
xchg
inc
das
lock
push
mov
das
xchg
xor
or
aas
dec
inc
pop
inc
jp
and
out
mov
jns
in
inc
adcl
push
outsl
filds
and
mov
mov
mov
and
adc
nop
xchg
dec
xor
and
sub
mov
and
xchg
add
cwtl
nop
shlb
mov
xor
or
and
les
jne
push
sub
mull
imul
mov
ja
dec
stc
nop
js
push
clc
cwtl
pop
jg
loopne
add
int
pop
pushf
sbb
xchg
jl
push
or
sub
insb
lock
jnp
fdivrs
adc
adc
and
test
sub
inc
sbb
sbb
scas
lret
push
es
mov
enter
inc
and
adc
mov
jb
sbb
data16
pop
pop
inc
mov
cs
xchg
cltd
pop
cmp
andb
and
push
mov
aam
push
or
lods
mov
cmp
ljmp
cmpsl
fidivs
subb
adc
adc
dec
mov
sbb
add
into
cmp
pusha
out
xchg
sahf
sub
lea
es
adc
cwtl
int
incb
fprem
dec
or
xor
adc
lds
lcall
lods
addl
in
jl
in
inc
xor
test
mov
jecxz
mov
cs
or
dec
pop
jle
pushf
sub
cmpb
mov
rolb
std
lods
sbb
int
push
cmp
es
arpl
dec
out
mov
adc
pop
pop
out
das
aad
stc
mov
loope
adc
add
mov
dec
add
mov
subb
adc
arpl
lods
and
mov
jns
lret
mov
adc
fisubl
mov
gs
cld
lldt
push
mov
xchg
mov
and
fcmovnu
sahf
jecxz
test
pop
add
pop
sti
push
add
iret
orl
xchg
mov
mov
mov
sti
pop
jno
aad
add
inc
cmp
add
daa
cmp
add
nop
aam
mov
punpcklbw
fdivr
dec
lock
test
into
lock
das
xchg
xchg
pushf
add
xchg
jp
insb
pop
jne
das
cmp
sti
adc
pop
in
adc
sub
mov
lods
call
mov
add
mov
inc
mov
sbbb
cmp
lss
mov
fdivl
sbb
push
mov
test
in
jp
and
lret
lret
or
lock
pop
jge
ds
je
add
mov
pusha
insb
mov
xchg
and
jns
cwtl
lahf
sub
imul
xchg
push
fs
fwait
xor
sbb
insb
aas
and
add
sbb
mov
and
sarl
add
jnp
mov
inc
mov
cmp
add
fwait
or
xchg
xor
xor
jge
push
out
ds
sub
add
xchg
sahf
je
fbld
gs
jnp
jmp
xchg
or
ja
es
loope
test
ret
inc
dec
inc
mov
mov
push
shll
jns
mov
test
sar
inc
jmp
add
into
mov
mov
adc
dec
sub
fidivrs
mov
cmp
inc
cmp
pop
mov
xchg
inc
test
imul
hlt
mov
or
enter
mov
call
rolb
cmp
movsl
cltd
xor
jle
inc
sub
lds
pop
lock
add
inc
xchg
pop
cwtl
lret
pushf
test
fwait
inc
inc
ds
and
lock
jnp
in
sbb
adc
mov
lahf
add
jne
pop
jnp
sub
in
adc
ds
mov
fcoms
xor
mov
pop
jns
lods
and
jb
ret
xor
and
pop
mul
add
xor
jl
mov
shl
jae
lds
jnp
ret
in
and
sub
jae
and
jbe
pop
dec
in
xchg
add
sub
inc
ljmp
outsl
pop
cmp
xchg
enter
mov
xchg
cwtl
movsb
and
add
add
enter
out
addl
cld
jecxz
test
cmp
pop
add
arpl
mov
fs
or
inc
pop
out
stc
pushf
cmp
test
xchg
dec
enter
jecxz
add
clc
add
test
xchg
cs
push
mov
xlat
xor
and
icebp
or
inc
mov
push
pusha
xchg
xchg
insb
add
push
mov
inc
addb
loope
xor
mov
xor
sbb
les
test
scas
into
xchg
and
add
fistps
and
rolb
xchg
adc
mov
pop
mov
add
loopne
inc
lea
lods
and
stos
cmpsl
jns
add
lcall
test
xor
test
add
lret
mov
xchg
in
add
push
or
xor
add
not
add
dec
mov
or
and
or
test
test
mov
test
sbb
movsl
push
call
cs
or
xchg
dec
push
xchg
add
inc
daa
sbb
ror
dec
push
mov
xor
mov
jecxz
and
mov
and
xchg
int3
shlb
or
sbbb
bound
das
cltd
mov
les
fdivrs
cmp
mov
popa
out
lods
fwait
mov
orl
xchg
es
adc
mov
jnp
add
iret
sbb
add
mov
jbe
push
inc
insb
and
mov
jne
loop
dec
lock
sbb
and
mov
idivb
outsb
xchg
jo
mov
out
je
mov
xor
jmp
dec
xor
push
cwtl
nop
dec
or
ret
seta
das
bound
cmp
or
push
mov
ljmp
lret
dec
stc
roll
mov
fsubs
leave
push
icebp
out
mov
cwtl
xlat
sahf
add
imul
shlb
arpl
sbb
sbb
movsl
mov
stc
inc
jecxz
or
pop
pop
xor
xor
cmp
jo
loopne
movsl
add
inc
arpl
jp
xchg
pop
dec
cs
leave
cmp
mov
aad
subb
ret
jb
out
or
fstl
orb
roll
xor
sub
subb
ja
dec
arpl
pusha
call
fwait
cmp
inc
push
rcl
addr16
sbb
xor
jb
ds
mov
add
cltd
addr16
sti
loop
pop
insl
fs
test
add
push
in
repz
js
cs
movsb
pop
jb
add
gs
shlb
jg
pop
and
ds
ret
arpl
mov
shrl
pop
push
pop
lea
sbb
or
shlb
sbb
mov
fnstsw
mov
jl
pusha
lret
sti
jno
add
pop
fldcw
xchg
lods
adc
push
in
je
mov
mov
cmp
jb
pop
xor
mov
mov
test
hlt
jl
add
xchg
dec
pop
mov
int3
pushf
xor
or
scas
repnz
aaa
mov
fwait
pushf
les
xlat
xchg
sbb
pop
jbe
push
mov
pop
add
mov
cwtl
mov
pop
bound
test
add
jo
shll
jmp
or
cs
insb
push
sbb
call
cltd
pop
xchg
sub
add
nop
es
aas
pop
add
sbb
xor
lret
add
pop
test
addr16
test
inc
hlt
movsb
sbb
in
dec
adc
or
and
add
lock
sub
cli
shlb
rorb
icebp
or
add
cwtl
or
dec
add
jne
aam
es
test
das
xorb
loop
pop
and
jle
adc
xor
jg
dec
sbb
pop
xor
enter
add
cmp
push
push
or
xchg
push
dec
in
mov
mov
pop
jae
mov
and
testb
ret
add
cmp
xchg
mov
mov
in
xor
add
inc
mov
mov
adc
mov
and
icebp
jecxz
mov
pop
mov
sbb
dec
mov
cs
adc
es
sub
mov
or
adc
shll
pop
inc
xor
and
add
jp
das
movsb
push
and
addb
adc
jns
add
aam
dec
xchg
in
into
loop
pop
inc
leave
add
push
jne
mov
adc
iret
das
xchg
sub
cmpl
shr
mov
pop
or
lret
add
mov
or
and
mov
les
xchg
xchg
jle
inc
or
popa
fs
or
mov
xor
std
sub
mov
dec
cs
sbb
push
push
pop
adc
add
andb
cs
mov
xchg
xor
mov
orl
scas
fcomp
add
fiadds
test
into
pop
mov
out
adc
icebp
and
cmp
enter
jge
pushl
or
into
xchg
and
or
and
adc
jl
mov
cmp
push
pop
inc
cmpsl
loope
stc
js
jns
xchg
add
hlt
vpshufhw
and
and
jmp
add
imul
xor
js
dec
xchg
push
rclb
mov
add
stc
xchg
sarl
xor
or
xchg
sbb
sbb
jp
sub
add
or
hlt
int
cli
jecxz
pushf
or
test
pop
leave
pop
add
fnstcw
sub
fcmovb
mov
dec
lods
inc
sub
xchg
xchg
push
xchg
inc
cltd
push
pandn
out
fimuls
sbb
in
xchg
rcrb
pop
loop
dec
push
inc
push
mov
inc
pop
sti
and
inc
into
adc
add
fists
dec
test
mov
or
rorb
faddl
icebp
adcb
fmull
outsb
push
es
inc
cmpsl
popa
xchg
ljmp
mov
mov
push
jmp
add
xor
cmp
lret
mov
sahf
aad
or
out
mov
add
lahf
fsubs
fisttpl
mov
pop
mov
js
push
add
push
sub
add
es
out
hlt
aaa
sub
jns
sub
xor
xorb
pop
adc
add
and
fmuls
push
cmp
lock
loopne
pop
cmpsb
mov
lods
cmpsl
bnd
pop
dec
jnp
xor
mov
add
popa
mov
add
insl
push
daa
add
inc
ljmp
pop
cmp
mov
and
cmpsl
aam
pop
add
lds
or
pop
fs
fwait
aas
jo
add
hlt
mov
pop
movsb
std
dec
mov
mov
lods
xchg
add
rol
aaa
ret
dec
gs
adc
dec
sub
call
sub
push
in
cmp
inc
jl
insl
clc
mov
pop
lock
push
rclb
in
mov
pop
push
or
xchg
clc
sbb
mov
xchg
pop
add
inc
lock
mov
or
pop
dec
push
test
out
sub
outsb
add
mov
js
bound
movl
jae
adc
pop
pop
sub
faddl
ret
pop
lret
aam
jbe
mov
nop
imul
pusha
inc
xchg
ja
lds
push
cmpb
rolb
mov
pop
adc
mov
sti
mov
cwtl
jne
jo
loop
add
loope
mov
imul
add
push
int3
arpl
sub
push
xor
push
gs
xor
orb
mov
mov
repnz
xor
push
outsb
pushf
inc
sbb
lock
sub
cmp
add
jae
test
inc
nop
add
dec
mov
adc
pop
pop
push
test
fadds
add
ss
cmp
loop
lret
push
dec
add
mov
sub
xor
push
inc
shrb
pop
dec
mov
mov
add
addr16
xchg
pop
push
gs
repnz
mov
jl
inc
stos
shlb
adc
add
sarb
test
int3
std
pop
add
aaa
jmp
mov
pusha
dec
add
push
sub
xlat
xchg
sbb
cmp
hlt
dec
nop
fdivr
push
jle
inc
pop
rorl
add
lret
add
cs
xchg
or
xor
add
add
cmpl
stos
mov
mov
add
mov
cli
or
daa
inc
sarl
cs
inc
int3
cmpsl
xor
outsb
jecxz
mov
lret
adc
add
mov
sbb
test
decb
adc
test
fs
leave
or
mov
nop
adc
add
jb
cmp
loopne
dec
or
pop
push
and
xchg
pop
cmp
mov
outsb
add
mov
xorl
out
mov
add
in
xchg
rolb
les
int
add
pop
scas
add
mov
push
je
xor
or
pop
xor
jno
dec
pop
stos
lret
loopne
mov
or
lret
mov
repz
mov
inc
cs
cmpb
js
push
sbb
in
jp
add
cmp
jl
mov
dec
mov
add
xchg
fcoms
sbb
add
and
fs
mov
cmpl
jne
push
loopne
xor
or
and
and
push
add
mov
fsubrl
and
mov
iret
mov
mov
ljmp
sbb
jno
pop
and
inc
or
pop
or
out
dec
popf
mov
ljmp
icebp
inc
inc
nop
jl
add
jne
popf
clc
add
cmp
not
mov
mov
stc
add
lcall
mov
ds
jne
cmp
stos
push
or
pop
mov
pop
stc
jns
dec
sbb
fildll
call
pop
sti
test
shll
pop
popa
loop
mov
and
add
stc
orb
stos
lods
adc
cmp
push
cmp
push
cmpb
mov
movsb
add
pop
and
sbb
cmpsb
jne
les
mov
xor
data16
sbb
add
shll
bnd
jecxz
insl
filds
enter
cli
push
dec
add
sub
aam
add
lods
and
es
lret
nop
xchg
adc
shlb
inc
add
mov
clc
orb
lock
jle
mov
push
shlb
aaa
adc
mov
jecxz
mov
mov
lret
cmpsb
mov
cmp
lret
xor
or
jb
arpl
sbb
mov
jno
sbb
adc
pop
mov
addb
inc
mov
sub
es
loope
cwtl
in
mov
fldcw
dec
cli
add
fmul
add
in
and
std
jno
flds
add
lcall
xlat
sti
out
add
fcmovb
cmp
add
inc
xor
into
sbb
aas
add
add
mov
mov
mov
out
shll
push
push
lahf
hlt
sbb
test
clc
mov
jp
mov
aaa
add
clc
jecxz
out
cld
push
mov
adc
sub
fs
mov
outsb
add
mov
sub
add
fsubrl
inc
pusha
push
push
push
mov
leave
add
fwait
les
cmp
add
mov
fsub
sbb
add
movsl
mov
sbb
cmc
popa
pop
sub
and
icebp
pop
inc
cs
xor
or
mov
and
dec
jp
ret
imul
pop
in
incb
mov
jb
nop
out
ljmp
jno
into
cld
push
pop
daa
sub
mov
scas
add
pop
cld
andb
js
add
shrb
insb
call
pop
cmpb
mov
xchg
dec
pop
sbb
mov
push
out
and
jo
adc
divl
add
mov
addr16
popa
or
jl
orb
in
add
cltd
mov
or
xor
lea
and
movups
add
fmulp
mov
xchg
add
out
cs
bound
or
sbb
in
add
mov
jo
popf
sub
out
rolb
ljmp
jb
dec
mov
push
into
and
inc
fs
mov
fimuls
push
in
xchg
enter
mov
lcall
clc
dec
clc
pop
pop
je
mov
imul
mov
test
addb
add
fstpl
leave
cmp
fmul
xchg
jp
pop
pop
jg
or
lods
rolb
xchg
pop
xchg
mov
andb
jns
iret
jl
fwait
add
xchg
repnz
sbbb
loop
insb
inc
fcoms
pop
push
push
pushf
push
mov
cwtl
add
lds
das
add
mov
inc
jno
es
sahf
mov
pop
cltd
mov
push
mov
lds
dec
mov
adc
mov
pushf
scas
sbb
dec
inc
push
std
mov
test
sbb
mov
stos
fldenv
pop
dec
pusha
lods
out
mov
pop
inc
loopne
pop
cwtl
loop
dec
sbb
sub
lcall
dec
das
add
push
movsb
fnstenv
xchg
pop
jbe
jecxz
mov
mov
pop
or
enter
inc
mov
sbb
fwait
ljmp
xchg
jbe
cmp
das
sub
les
pop
jp
int
repz
inc
dec
inc
lret
xchg
or
test
lds
bnd
ret
push
cld
popa
adc
mov
mov
jb
fcoml
add
out
pop
int3
mov
add
adc
push
rclb
xor
xorb
scas
xchg
loop
add
rcrl
fistpll
adc
xor
inc
add
aaa
push
pop
add
cmp
push
xchg
adc
incb
or
fadd
sub
ror
mov
je
mov
cmp
movsl
enter
xor
mov
cmc
cld
nop
add
jo
pop
pop
into
movzbl
rcll
mov
and
xchg
sahf
fwait
or
pop
sarb
enter
add
stos
xchg
aad
add
inc
cltd
dec
fisubs
xor
call
cli
pop
add
inc
xchg
cmc
add
xorl
add
dec
and
cld
mov
add
aas
or
cltd
nop
bound
sub
add
mov
add
lds
fstpl
aad
pop
cltd
fmuls
cmp
hlt
add
push
mov
jle
add
add
mov
imul
jb
inc
scas
shl
add
iret
cltd
sub
leave
enter
or
jae
jl
lcall
sub
pop
in
icebp
xchg
call
arpl
xor
push
jb
fs
rcrb
sbb
pusha
mov
cmp
mov
cmp
add
test
dec
mov
pusha
dec
arpl
sub
into
or
mov
in
adc
mov
popa
icebp
aam
std
stc
ds
pusha
in
mov
jae
add
popa
push
arpl
and
std
incl
cwtl
loop
sbb
xchg
add
movsl
or
call
adc
push
or
add
std
adc
into
cmp
mov
mov
cld
stc
cltd
jo
add
pushf
push
jmp
or
aam
in
and
jp
cmp
or
cmp
pop
add
lret
mov
cmp
mov
add
loope
ret
aaa
call
mov
add
rorl
sub
pop
jo
add
push
andb
ss
cld
es
sbb
add
js
aad
aam
dec
rclb
fadds
inc
arpl
push
pop
add
inc
cltd
mov
jg
into
jae
and
mov
lea
mov
pop
shlb
cmp
das
pop
icebp
mov
fwait
mov
jle
dec
fmulp
loopne
inc
inc
xor
std
or
dec
cmp
add
lods
int
mov
push
daa
push
mov
mov
add
ret
or
in
mov
mov
pushf
mov
sahf
jp
fsubrs
add
test
or
loopne
mov
int3
js
cmp
out
add
into
add
sti
push
subb
cmpsb
pop
pusha
mov
js
aas
sub
add
sub
add
insb
ljmp
cmp
mov
mov
loop
lret
inc
jl
add
xor
addr16
testb
xchg
fdivl
cmp
jmp
pushf
dec
in
mov
icebp
lds
sbb
add
scas
cmpsl
mov
add
sub
xchg
push
xor
stos
xor
aam
cmp
push
sbb
jns
jo
mov
sbb
inc
mov
sub
arpl
xchg
mov
mov
lods
mov
je
cmc
out
push
shll
das
add
outsl
sub
cltd
push
add
aam
or
add
sbb
out
add
in
mov
dec
adc
insb
cmp
insb
sbb
sbb
fisubs
addb
or
cs
xor
jne
dec
enter
popl
test
in
mov
sbb
es
push
fsubrl
addb
sbb
xchg
leave
add
mov
cmpb
mov
jge
push
cmp
addb
xchg
sub
xchg
lds
cmc
mov
add
and
jbe
fs
jecxz
pop
push
mov
xchg
mov
dec
cmp
mov
and
inc
pop
inc
pop
add
loop
int3
jnp
lahf
int3
cld
add
int3
lock
add
cli
fistps
adcl
adc
adc
dec
xchg
jne
adc
and
push
adc
push
and
popl
mov
jp
sub
insl
sub
or
dec
cwtl
push
sarl
clc
mov
popf
add
mov
mov
jno
xchg
arpl
rcll
adc
cs
shlb
and
pop
pop
cmpl
and
je
cwtl
inc
xor
hlt
dec
cmp
mov
sub
pop
fbld
add
xchg
pop
inc
call
movsb
js
xchg
add
xlat
dec
ss
adc
pop
mov
adc
cs
add
pop
repnz
bound
xchg
call
and
addb
mov
fiadds
xchg
test
xor
xchg
movsl
and
in
mov
test
mov
jnp
add
inc
pusha
bound
add
add
sbb
mov
addr16
mov
jmp
add
mov
xchg
scas
shlb
pop
in
mov
adc
leave
mov
add
lcall
testb
fs
loopne
shl
inc
mov
push
fisubs
mul
mov
inc
jmp
add
cwtl
xor
and
xchg
shl
inc
push
and
inc
add
fildll
xchg
pop
mov
aaa
push
cmp
xor
sti
adc
mov
xchg
push
repz
cmp
pop
add
divl
cs
loopne
sbb
add
add
lret
nop
jno
fstl
les
sub
adc
in
xchg
dec
imul
mov
pop
xor
mov
test
adc
pop
cmp
fimull
ret
rorl
add
mov
sbb
call
jmp
cmc
or
pop
pushf
ret
dec
jo
inc
call
orb
inc
into
lods
or
add
test
adcl
mov
adc
fwait
and
push
adc
dec
mov
xor
call
jnp
mov
rorb
mov
mov
pusha
push
and
ret
cli
out
jecxz
inc
ds
add
sub
imul
add
sbb
cmp
add
xor
cmpb
mov
add
stos
mov
sar
gs
mov
sub
pop
std
nop
sub
dec
shl
dec
add
stos
js
add
push
mov
sbb
adc
adc
pop
loope
cmp
enter
pop
or
mov
jb
jp
lret
mov
adc
or
cwtl
xor
sahf
or
ret
mov
xorb
cmp
call
repz
inc
adc
or
cld
sbb
or
lret
xchg
loope
and
cmp
jp
loopne
sbb
adc
mov
jge
or
pop
cmpsb
push
inc
xlat
es
popa
or
add
push
jl
leave
and
aam
xchg
xchg
add
jge
fists
in
add
in
insb
add
ja
cld
cmp
pop
mov
jb
mov
pop
test
add
inc
adc
add
and
xchg
mov
mov
xchg
js
add
xor
call
in
into
add
fadd
add
ja
or
bound
adc
inc
jns
lds
inc
add
icebp
ljmp
xchg
and
inc
in
cmp
shl
out
lahf
inc
pop
sub
add
add
inc
ror
int
add
lods
pop
stos
sbb
or
cltd
mov
out
dec
xchg
add
xchg
mov
test
or
clc
and
add
xchg
add
sahf
mov
mov
lcall
add
out
dec
es
int3
loop
add
mov
aaa
test
adc
fidivrs
adcl
das
lods
enter
add
adcl
scas
xchg
lret
in
or
sub
rcr
and
dec
pop
xor
test
or
inc
inc
jmp
sub
adc
enter
ss
movsl
rol
pusha
mov
jecxz
dec
shl
fs
lcall
inc
rclb
repnz
add
xchg
cmc
popa
xchg
push
push
xchg
xor
addr16
iret
push
add
mov
in
jo
pop
ret
jg
fidivrs
cwtl
or
roll
dec
into
aad
jo
mov
daa
jns
lret
pusha
test
pop
push
and
xchg
push
aaa
loopne
and
sub
jo
sub
inc
js
jle
and
xchg
xchg
movsl
rolb
push
add
jbe
ds
xor
addb
daa
pop
cmp
lods
popf
in
pop
stc
add
in
xchg
pushf
jge
mov
and
sbb
mov
pop
inc
inc
mov
out
jecxz
and
push
loope
test
lea
sarb
push
add
test
test
dec
xchg
cmp
test
shl
jecxz
daa
xchg
adc
bound
xchg
aam
pop
lcall
mov
dec
mov
push
push
shll
pop
push
adc
call
daa
shrb
in
and
mov
xchg
and
mov
and
cmp
outsl
sub
movsb
scas
adc
mov
stos
mov
add
and
out
pop
sbb
xor
popa
iret
add
mov
inc
leave
dec
cmp
popf
adc
mov
dec
pop
mov
or
in
sub
push
pop
cs
sbb
fwait
cltd
pop
mov
loop
dec
push
push
xchg
repnz
jle
test
add
add
nop
insb
xchg
or
leave
out
popl
pusha
lret
popa
dec
sbb
or
xor
pushf
lods
into
popf
xchg
sub
les
jbe
push
out
notl
add
or
mov
das
shl
mov
xor
mov
cmp
shrb
sub
inc
push
cmp
inc
sbb
das
cltd
js
adc
xchg
cmpsb
jne
mov
fnstcw
inc
rclb
pmullw
pop
pop
mov
pop
and
dec
sbb
push
or
mov
xchg
subl
mov
sbb
add
jge
pop
xlat
inc
pop
add
loopne
sbb
add
das
loope
fs
or
add
lahf
push
or
fistpll
push
arpl
cmp
cmp
push
dec
inc
inc
sbbb
int3
mov
pop
rsqrtps
mov
arpl
stos
sbb
je,pt
shll
push
in
add
inc
xor
dec
add
xor
les
stc
adc
sbb
push
and
fisubs
lret
xchg
jmp
sub
in
cmp
or
data16
or
icebp
popa
hlt
pop
cmp
cmp
inc
fucom
add
push
in
xor
sub
add
push
je
pop
pop
divl
fstpl
nop
fs
rclb
movups
sbb
dec
nop
cltd
xchg
dec
pusha
push
subb
xchg
rclb
or
pop
add
stc
pusha
xor
pusha
dec
fmuls
push
add
stos
sbb
jne,pt
jo
add
push
mov
add
fists
add
and
loopne
rcrb
in
outsw
or
inc
nop
and
test
iret
lahf
jmp
sub
sti
popa
push
js
nop
lret
jecxz
inc
xor
add
mov
mov
test
or
cmp
xchg
ret
sti
addr16
insb
addr16
mov
test
pop
dec
mov
cmpsl
jne
aad
test
scas
insb
add
insl
sub
dec
shlb
ljmp
jno
test
orb
cmpsb
or
ljmp
inc
andb
pop
push
icebp
adc
or
es
push
xor
mov
add
dec
ret
pushf
repz
sub
dec
xor
ret
dec
popl
and
add
adc
cmpsb
pop
enter
enter
lcall
mov
pop
sbb
sub
leave
nop
fadds
push
mov
inc
and
mov
dec
sbb
mov
and
mov
mov
xchg
mov
add
dec
std
scas
sub
adc
or
add
sub
and
jo
add
mov
pusha
imul
xor
ja
testb
lods
add
dec
add
rcrl
inc
mov
push
dec
xchg
and
imul
cmpb
shlb
xchg
mov
insb
lock
cltd
add
push
and
sub
and
call
sti
add
add
add
cmp
addl
cli
addr16
sub
xor
sbb
js
movb
fdivs
mov
mov
adc
add
add
into
sarb
pop
sub
mov
jae
andl
movl
test
inc
xor
daa
mov
cmp
and
or
push
sbb
clc
jbe
mov
test
and
stos
and
sbb
es
popa
xchg
mov
xchg
pop
and
aam
jmp
mov
xor
pop
fldcw
inc
popa
and
lahf
cld
jbe
out
shlb
icebp
test
int3
jge
sub
xchg
shll
lods
jbe
push
bound
jl
fs
jle
aam
leave
cmp
jle
mov
sar
or
insb
imul
xor
mov
pusha
lock
call
movsl
repz
or
ds
adc
outsl
dec
dec
adc
lret
xchg
mov
and
movb
xchg
cmpsl
or
add
pop
mov
mov
and
stos
mov
std
pop
inc
mov
inc
sbb
popa
incl
loopne
jbe
add
push
sub
mov
mov
add
outsb
jecxz
daa
imul
jno
and
xchg
xchg
adcb
add
int
or
scas
mov
sub
jl
mov
xchg
sub
inc
push
add
aaa
sub
xchg
sbb
call
scas
add
and
pop
jne
cltd
orb
inc
aas
or
enter
push
mov
inc
inc
sbbb
mov
inc
and
out
pop
push
rcrb
mov
and
add
lods
and
pusha
adc
shrb
in
sbb
and
pop
sub
and
push
enter
das
add
ret
sti
inc
xor
sbb
in
adc
clc
mov
xor
mov
hlt
push
jns
mov
loopne
push
inc
pop
dec
test
leave
popaw
pushf
pusha
nop
adc
mov
lods
clc
dec
push
xchg
jl
mov
add
xor
jp
pop
dec
loopne
aad
push
addr16
mov
inc
adcl
mov
movsb
mov
xchg
pop
enter
sub
std
lahf
pop
sarl
and
xchg
insb
sub
lcall
inc
enter
call
ret
mov
add
test
loopne
add
add
in
adc
cmp
xchg
pop
daa
je
pusha
cmp
mov
shl
ret
dec
xor
lock
hlt
shll
mov
xor
cmp
jecxz
sbb
or
dec
pop
inc
jl
push
in
les
adc
dec
inc
mov
inc
imul
cli
aaa
push
movl
mov
faddl
ret
ret
mov
push
mov
pop
pop
int3
and
add
inc
rcr
xchg
imul
or
add
nop
add
lahf
fwait
outsl
filds
or
mov
pop
sub
in
pop
lahf
sbb
cmp
inc
sarb
sbb
lods
out
sub
cmp
int3
and
push
add
cmpsb
and
inc
adc
add
cwtl
mov
push
xchg
dec
ja
mov
sub
jle
add
in
xchg
sarb
jp
cmp
subl
dec
inc
shr
dec
jle
mov
add
fsubrs
jne
ds
jl
stc
xchg
pushf
sbb
hlt
out
daa
add
and
xchg
and
mov
es
or
aas
mov
sahf
jo
cmp
in
add
test
jo
adc
adc
mov
inc
movsb
lods
pop
add
rcll
inc
insl
testl
mov
loop
dec
movsb
mov
adc
pop
pushf
add
clc
or
mov
sub
and
add
dec
repz
clc
in
aas
sbb
adc
push
mov
add
loop
add
pop
push
mov
jns
dec
jno
ret
cli
add
jb
pop
bound
mov
popa
aam
les
repz
xor
inc
mov
sub
ret
cltd
mov
inc
hlt
add
cwtl
adc
add
pop
push
repz
mov
push
psubusw
jge
roll
inc
inc
xor
adc
cmp
gs
sti
sysret
adc
mov
jo
mov
int
dec
or
or
loope
ret
aad
add
aas
add
mov
jl
jl
ficoms
add
pop
orb
jl
sub
sbb
clc
add
xor
sub
and
pop
xor
add
add
dec
movsb
mov
iret
fsubl
ficomps
inc
xchg
sub
xor
mov
pop
pop
mov
push
shl
mov
add
popa
dec
push
ljmp
xor
or
loope
xchg
add
mov
subb
rorl
push
push
in
or
pushf
xchg
lcall
mulb
dec
pusha
mov
add
addb
popf
js
aad
icebp
adc
fsubr
xor
ja
cmpb
outsl
or
fadds
and
xchg
xchg
rclb
push
cmpsl
das
add
daa
jno
adc
sub
and
jo
sarb
aas
mov
push
pushf
sbb
jno
adc
call
es
testl
loopne
mov
fdivl
inc
add
lods
stc
cli
adc
mov
dec
mov
sub
jae
pop
mov
adc
enter
clc
clc
addl
in
sub
fcmove
shlb
sbb
xchg
adc
shll
dec
xor
sbb
cmp
sub
mov
xor
or
movsl
pop
pop
jo
adc
or
inc
sbb
add
repnz
cld
pop
nop
or
xor
pop
adc
cwtl
pop
add
sbb
clc
leave
rol
insb
push
mov
out
or
sub
add
scas
jp
sti
les
add
cmp
xchg
sub
stos
movsl
in
push
dec
xchg
enter
adc
mov
hlt
dec
add
mov
lock
push
add
imul
outsb
insl
jp
add
xor
dec
nop
loop
fxch
fbld
push
cwtl
xlat
in
add
iret
adc
sub
add
jmp
pop
xor
call
sbb
sub
in
push
imul
pop
jmp
jl
and
sub
mov
add
sub
jb
add
push
lods
add
and
add
jo
enter
jns
popa
loope
lret
xlat
dec
andb
jno
jp
fidivl
repnz
sbb
mov
out
dec
fdiv
gs
movsl
pop
add
in
pop
pusha
lldt
inc
xor
es
or
hlt
ret
pushf
pop
jno
fsubrp
dec
dec
add
pop
or
sbbl
push
andb
add
mov
jns
add
add
push
pop
in
les
hlt
inc
stc
jne
pop
int
scas
push
sbbb
pop
je
addb
adc
sahf
iret
push
add
sarl
add
mov
xor
mov
fldt
xchg
popf
mov
mov
pushl
dec
lahf
xchg
repnz
leave
add
cmp
inc
test
adc
mov
adc
mov
mov
cmp
cmc
cs
add
xchg
popa
jbe
pop
xor
adc
aam
mov
cltd
add
dec
faddl
xor
mov
sahf
push
mov
call
jno
cmc
jmp
into
sar
mov
arpl
adc
faddl
add
cmc
cmp
push
add
pop
pop
sub
or
mov
pop
dec
push
mov
insl
add
mov
outsl
dec
test
nop
je
push
push
leave
mov
add
and
xor
mov
pusha
sub
inc
pop
jbe
push
jecxz
ret
into
hlt
inc
addl
sub
andl
test
push
decl
mov
xor
pusha
loop
clc
pop
cmp
or
sub
icebp
test
aad
xor
dec
cmp
test
and
ficompl
lcall
arpl
pop
imul
sub
dec
insb
insl
add
loop
add
xchg
pop
mov
sbb
push
or
push
add
in
loop
sbb
sub
cmp
shrb
inc
and
add
sbb
aad
adc
add
cwtl
fisttpl
lret
cmpl
in
out
int3
test
inc
imul
sbb
mov
cmp
mov
add
push
mov
jmp
fidivs
rolb
add
lock
cltd
les
cwtl
add
cli
cmpsb
mov
mov
add
ljmp
and
cwtl
rcrb
dec
leave
les
dec
sub
push
jmp
ficomps
outsl
into
xchg
add
mov
daa
scas
add
dec
lret
sbbb
inc
mov
mov
lock
add
stos
sbb
and
insl
inc
inc
inc
notb
rclb
mov
cmpsb
jbe
stc
mov
push
cmp
inc
inc
xchg
sub
sbb
mov
add
pop
mov
mov
mov
lcall
mov
add
xlat
shll
add
dec
out
pushf
inc
and
outsl
inc
dec
jne
sbb
push
mov
cmpsl
aas
sbb
sub
add
dec
in
sahf
lahf
add
and
jecxz
iret
adcl
js
adcl
pop
dec
fists
inc
mull
dec
addb
out
mov
aam
and
test
addr16
cli
jle
sbb
testb
les
add
sbb
and
cmp
andl
add
xor
mov
sbb
movsb
push
adc
mov
fidivs
out
mov
mov
mov
mov
arpl
adc
lahf
out
scas
aas
loopne
mov
sbb
add
sub
call
cvtps2pd
and
and
sbb
dec
adc
xchg
iret
jge
enter
fildl
jmp
push
rcrb
cmpsb
or
orb
push
pop
test
into
arpl
add
mov
add
dec
push
ficoms
push
mov
xchg
mov
not
cwtl
inc
sarb
mov
ret
je
jl
push
pop
sbb
adc
add
incb
std
std
arpl
lret
insb
xor
push
add
add
adc
sub
mov
inc
sbb
sbb
in
push
mov
xchg
pop
stc
outsb
xor
cmp
and
add
addr16
and
push
dec
pop
and
jae
add
adc
sub
pop
xor
push
add
pop
mov
inc
inc
inc
and
add
fdivl
addb
cmp
pop
mov
stos
int
add
popa
loop
mov
cmp
cmp
jne
paddb
out
jle
inc
rcrb
xor
aaa
icebp
in
popa
push
sbb
fnstenv
mov
repnz
xor
cltd
and
arpl
rolb
aaa
loop
mov
mov
test
fdivrl
push
sbb
je
call
dec
adc
xchg
lea
fnstcw
iret
push
addr16
out
mov
push
out
xchg
xor
loopne
fnstenv
jge
and
test
dec
sti
rcr
icebp
imul
sbb
xlat
fadd
add
push
or
pusha
add
add
cmp
dec
test
push
js
xchg
mov
rcrb
pusha
cmp
mov
int3
test
out
add
sub
mov
push
mov
inc
or
int3
adcb
pop
push
int3
cwtl
inc
sti
stc
and
cmp
mov
push
xchg
fmul
cmp
pop
pop
gs
mov
dec
pop
add
popa
enter
out
es
int3
sub
mov
or
fdivrs
jg
pop
mov
rclb
adc
add
dec
loopne
cmp
out
push
loopne
pop
scas
push
clc
imul
cld
in
movb
add
dec
cli
lea
imul
sti
shlb
adcl
ret
aas
mov
pop
inc
inc
sarb
rcll
sub
addb
xor
xchg
add
cmp
push
add
pop
mov
push
pop
repnz
jg
sarb
lods
sbb
sbb
adcb
mov
mov
mov
mov
pop
cmp
sbb
mov
inc
mov
jge
mov
xor
cmp
leave
or
ficomps
add
mov
mov
jle
ret
add
or
cwtl
xchg
sbb
lret
arpl
mov
xchg
mov
cwtl
sbb
mov
cwtl
push
addl
jbe
and
inc
pop
mov
cli
and
mov
jp
push
add
daa
out
pop
or
js
xchg
xchg
or
xchg
flds
mov
and
and
pop
aaa
mov
sub
mov
mov
mov
and
jmp
outsb
mov
push
test
rep
adc
cwtl
pop
popa
add
pop
int
test
test
jl
fucom
jo
inc
sub
sbb
dec
fs
adc
xchg
adc
cmp
repz
rcl
cmpsl
testb
inc
add
mov
sbb
add
xchg
or
addb
jge
sub
add
les
decl
int3
les
mov
mov
mov
inc
aam
fsts
cmpsl
inc
int3
xchg
add
push
std
outsb
mov
in
mov
xor
mov
pushf
inc
xorb
mov
add
loope
adc
or
in
push
in
ret
or
ljmp
hlt
and
pop
dec
sbb
xchg
xor
in
std
add
insb
gs
ret
or
into
mov
rorb
in
cmp
add
add
cmp
add
js
push
pushf
or
xor
jecxz
ret
sub
add
xor
out
int3
add
jge
mov
addb
ja
addb
push
or
enter
xchg
shlb
mov
pop
mov
add
mov
dec
nop
aad
insl
bswap
movsb
lea
xchg
shrb
add
ja
or
jle
iret
stc
sbbb
cmpb
outsb
adc
sti
gs
inc
mov
adcb
sarl
sbb
xchg
fsqrt
and
or
dec
ret
and
adc
push
jg
cmp
jne
add
pusha
mov
add
sub
and
fisubrl
cmp
call
and
fst
add
cmp
xor
mov
adc
inc
lods
inc
add
cmp
and
lcall
push
cli
dec
ficoms
imul
jbe
in
lods
sbbb
cmp
iret
jb
jno
jo
add
cmp
sub
bound
enter
mov
movsl
dec
pop
scas
mov
cld
rorb
add
sub
mov
mov
mov
xorl
jge
xchg
push
xchg
add
add
sub
subb
mov
mov
flds
xor
push
and
aaa
pop
pop
jae
push
ret
dec
jne
sbb
xchg
mov
push
insb
je
hlt
push
xchg
mov
mov
add
fnstcw
ds
adc
enter
sbbb
push
sub
sub
mov
aas
aaa
filds
pusha
pusha
fidivrs
jbe
aas
cs
inc
push
jmp
add
aad
jge
faddl
and
xor
aas
rcr
add
inc
nop
mov
stos
xorl
add
lsl
jne
add
mov
add
outsb
sub
stos
icebp
cmp
and
inc
pusha
push
orl
xor
pop
lret
cltd
mov
data16
adcb
cwtl
push
ja
loopne
scas
pop
or
add
sub
repz
jl
fmuls
stos
movsb
clc
adc
and
xor
sti
cmp
xchg
mov
enter
andl
and
mov
jmp
or
adcb
add
test
shlb
mov
ret
shlb
cs
ljmp
and
je
aaa
orl
pusha
xor
inc
or
inc
xchg
icebp
cmp
add
add
lods
mov
dec
popf
add
sahf
and
scas
pop
mov
mov
cs
add
push
or
pop
jns
ret
add
xor
jge
push
inc
mov
imul
jge
add
inc
jbe
pop
into
ljmp
scas
push
sti
sbbb
xchg
cltd
dec
mov
scas
mov
mov
jnp,pn
in
mov
pop
lahf
dec
and
outsb
cli
add
fnstsw
push
add
int
insb
repnz
fs
and
aad
mov
xor
jge
xor
cld
add
push
add
inc
nopl
orb
insb
aaa
stc
or
adc
xor
out
cmpsb
out
aam
mov
or
xchg
jle
add
inc
or
arpl
sbb
adc
test
xchg
xchg
add
add
cmp
mov
sbb
dec
pop
lea
push
std
mov
xor
cmp
je
es
jge
fildll
sbb
negb
mov
lds
cmpl
push
mov
je
cs
andb
lea
aas
jp
sub
arpl
pop
xchg
and
fldl
adc
dec
test
jl
cmp
loopne
stos
or
mov
pusha
cmpsb
or
bound
lcall
lods
adc
arpl
pop
mov
mov
cli
cmp
cmpsl
cmp
inc
sub
shll
rolb
and
cmc
and
cmp
lock
and
add
jae
mov
test
cmp
or
dec
inc
sti
in
push
loop
shlb
and
or
int3
mov
add
aaa
jae
add
mov
dec
xchg
pop
fisttps
sub
mov
jge
add
mov
xor
push
ljmp
lret
xor
adc
testl
shlb
hlt
inc
test
addr16
inc
cli
pop
mov
mov
in
push
cltd
mov
cmp
push
or
sbb
mov
add
xlat
xchg
sub
clc
add
aas
pop
add
nop
pusha
mov
jbe
fdivl
or
ret
push
mov
add
pop
mov
outsl
jne
add
dec
mov
dec
or
mov
out
mov
addr16
scas
cmp
addb
jge
dec
hlt
int
jns
add
popf
mov
into
pop
sub
add
jl
and
mov
jge
add
int
ret
repz
scas
adc
ja
mov
add
mov
mov
mov
rol
leave
push
dec
jno
add
inc
jo
pusha
push
mov
mov
cmpb
jbe
mov
sahf
aam
call
jle
bswap
fisttps
add
mov
adc
orb
lds
mov
add
fisttpl
adc
jg
fmul
rorl
jno
pop
xor
or
sti
out
xchg
sbb
inc
mov
scas
icebp
inc
lock
aam
in
fs
push
xlat
or
cmp
cld
push
int3
pop
shl
inc
mov
inc
notl
and
push
add
cmp
out
data16
mov
pushf
and
adc
imul
int
sbb
les
popf
push
test
and
in
add
dec
mov
adc
add
adc
mov
movq
repnz
jne
rcrb
and
cli
mov
les
add
sbb
add
pop
mov
in
mov
add
shr
jns
pop
add
flds
popa
lcall
cs
and
pusha
icebp
mov
dec
cmp
jl
shl
and
dec
pop
clc
lea
test
pop
into
sbb
cmpsl
int
ret
ljmp
push
and
add
test
movsl
aaa
pusha
fmul
and
fldcw
ljmp
pushf
dec
jle
and
test
into
and
cwtl
dec
sub
jecxz
adc
aaa
cmp
add
mov
pushf
arpl
add
mov
idivl
test
enter
inc
pop
rorl
push
and
sbb
pusha
lcall
jg
add
pushf
loopne
add
dec
mov
ret
incb
mov
sub
jne
dec
mov
push
cmp
cmp
add
icebp
cmpsl
cmp
fcomps
rcrl
mov
sahf
fadds
loopne
or
les
loop
xlat
xor
aad
std
add
pop
adc
jp
push
lock
add
aaa
adc
mov
mov
incl
nop
mov
rcrl
imul
or
mov
push
add
fnstcw
xchg
add
divb
and
in
aaa
or
or
add
pop
aas
pop
pop
push
xchg
sti
rcrb
imul
add
mov
xchg
mov
leave
test
mov
sub
push
out
cs
inc
add
mov
inc
or
cwtl
mov
cmc
cs
cs
test
shl
aam
test
aam
cmp
inc
repnz
or
xor
fwait
add
mov
repz
mov
hlt
pop
repnz
pop
inc
jo
push
pop
call
cmp
mov
out
push
mov
test
push
sub
add
out
and
sub
dec
rcrl
stos
pop
outsb
cmp
xchg
mov
add
mov
push
inc
pusha
clc
ja
jecxz
cmp
ds
and
xlat
cmp
movsl
add
inc
enter
cli
shl
test
outsb
clc
lcall
notb
nop
xor
rclb
pop
loopne
popf
cmpb
add
test
jno
insl
fiaddl
in
mov
add
and
adc
rcrb
jbe
push
cld
push
add
inc
xchg
addl
inc
sbb
add
add
jecxz
dec
loope
aas
adc
cli
movaps
jmp
adc
loope
js
cmp
jo
cltd
pop
dec
inc
inc
adc
jmp
ljmp
scas
pop
jae
inc
and
fsubs
pop
mov
add
fstpl
dec
mov
insl
xchg
dec
xchg
cmp
mov
lods
mov
push
mov
cmp
mov
inc
pushf
mov
stos
push
test
inc
in
inc
leave
jne
imul
jl
jge
add
mov
sbb
or
iret
leave
je
jecxz
rclb
xor
imul
movsb
loop
mov
dec
jno
inc
in
sbb
loop
push
mov
xchg
inc
aad
adc
sbb
sub
mov
ja
leave
aaa
or
jbe
mov
sarb
push
xor
sbb
and
push
dec
sub
mov
jmp
fdivrs
into
sahf
xchg
mov
pop
xchg
js
add
cmp
fstps
add
imul
xchg
lahf
mov
cld
loopne
push
xlat
hlt
pop
adc
push
dec
sub
jg
cwtl
inc
sbb
xlat
cmp
add
cmp
xor
cmp
mov
mov
repnz
shrb
cwtl
push
pushl
std
inc
adc
clc
or
xor
xchg
cmpsl
add
aam
mov
enter
cwtl
adc
cld
mov
incb
or
and
add
jo
sti
dec
mov
xor
dec
mov
je
push
subb
mov
sub
cmp
add
ret
out
mov
cmp
stos
sub
ljmp
dec
inc
push
cmp
and
sbb
enter
aas
pop
jle
add
ljmp
fxch
dec
scas
outsb
or
stc
cmp
rclb
imul
out
hlt
inc
dec
xlat
add
out
int
cwtl
test
add
jg
dec
fcoms
rcrb
je
xchg
mov
inc
cmp
add
add
pop
jge
pop
sbb
shlb
add
cs
pop
loope
cmpsl
sbb
add
or
pop
aam
adc
call
pop
mov
lods
inc
gs
add
aaa
push
inc
dec
roll
orl
push
aam
pop
test
fs
lret
sti
mov
sbb
xor
out
cli
pop
data16
mov
mov
or
lahf
imul
push
mov
arpl
add
cmp
mov
sbb
push
fdivl
cmc
or
in
xchg
mov
or
cmp
sub
add
scas
push
mov
push
mov
mov
ret
mov
pop
gs
push
add
stc
roll
sbb
lods
mov
add
sbb
or
pop
in
sub
in
mov
push
jb
les
and
ret
aas
fistps
add
push
add
and
and
adc
pusha
aaa
push
pusha
pusha
roll
and
sub
dec
add
out
shrb
jmp
mov
sarl
add
cmp
repnz
into
add
xor
popf
jb
jp
push
in
xlat
xor
inc
lock
lahf
pop
mov
xor
inc
sbb
jl
mov
daa
mov
jno
js
mov
aaa
test
push
add
pop
movsb
push
in
enter
rcrb
test
stc
mov
aas
and
mov
pop
dec
xchg
xor
adc
lods
sbb
sub
icebp
jmp
push
mov
mov
clc
lcall
xchg
subb
mov
push
aas
push
daa
cs
repnz
in
roll
mov
scas
cmp
stos
popf
pop
in
mov
cmp
aas
loope
or
xor
loopne
add
add
jge
jne
add
fwait
sub
dec
add
xor
sub
push
pop
subb
and
cmp
sbb
js
or
fidivrs
cmpsl
sub
sub
out
or
mov
loopne
xorb
jg
cli
out
adc
sahf
lds
int
xlat
movsb
lock
pop
push
jns
je
pop
add
or
lods
mov
add
mov
xchg
cmp
cltd
xor
arpl
adc
cvttps2pi
xor
in
inc
sbb
mov
mov
enter
mov
aaa
test
call
shll
scas
add
mov
test
pusha
into
stos
sysret
push
sub
sbb
in
call
add
and
cli
mov
inc
test
in
or
jne
sbb
mov
xlat
dec
or
sbb
mov
stos
xchg
jmp
push
cli
bound
fwait
lcall
pop
push
add
int
or
pop
je
inc
push
adc
pop
and
call
fsubr
mov
add
xchg
add
lock
xchg
sub
ret
jbe
pop
mov
mov
and
xor
inc
add
dec
xor
xorb
dec
fdivl
mov
ret
add
lock
add
sbb
cmp
dec
cwtl
pusha
cmp
jne
add
clc
cmpsb
rcl
ficompl
add
xor
mov
fs
cmp
cmp
icebp
add
call
xlat
movsl
adc
orl
push
push
inc
add
inc
fwait
sub
aas
mov
cmp
mov
push
incl
add
out
enter
dec
in
leave
fmull
mov
xor
jmp
add
add
stos
rcrb
add
fdivl
add
mov
lods
inc
adc
jne
or
insl
les
call
loopne
sbb
mov
dec
mov
inc
or
lods
outsl
jns
movsb
and
and
clc
inc
loope
xchg
add
call
test
mov
add
sub
mov
dec
test
inc
jbe
ficoms
outsb
push
cs
je
jp
addl
int3
in
test
fcompl
fxch
mov
push
sub
fdivr
pusha
push
shl
push
sbbb
sub
and
into
inc
lds
iret
in
add
loopne
pop
jo
add
xchg
inc
jle
adc
add
push
mov
in
roll
xchg
inc
ds
pop
js
je
add
jle
loopne
xchg
inc
cmp
sbbl
cmpsl
int
scas
xchg
mov
inc
jge
add
ret
mov
addb
pop
inc
hlt
fldl
int
cwtl
xor
cs
add
xor
and
sub
cmp
pop
xor
add
ss
inc
add
jne
dec
jge
sahf
adc
xor
icebp
mov
cmp
jbe
xchg
sbb
test
icebp
jle
cmp
movsb
popa
xor
or
jmp
lods
push
mov
pop
push
cwtl
ds
mov
cmpsb
and
je
ljmp
sbb
mov
sahf
add
ljmp
add
mov
adc
movsb
and
add
clc
pop
ficoml
pop
call
cmc
and
sti
adc
push
add
jbe
rcrl
push
add
shlb
add
or
mov
or
add
mov
sbb
je
mov
sub
iret
mov
sbb
fmuls
push
loopne
pop
mov
aad
add
sub
int
movsb
fcompl
push
fstpt
lret
mov
sbb
xchg
mov
leave
iret
or
xor
or
adc
into
es
inc
test
pusha
and
imul
pop
add
inc
jb
add
xor
rolb
cld
xchg
add
pop
repnz
ljmp
fisubs
jns
xchg
xor
sub
das
stc
test
movsb
adc
inc
insb
nop
cmp
jge
test
inc
mov
dec
sub
ficoml
mov
ret
daa
lea
jo
orb
test
and
aam
jbe
in
mov
xlat
jae
loope
push
mov
aam
repz
dec
out
das
jmp
nop
mov
pop
imul
fs
cmp
adcb
xchg
in
call
dec
inc
jmp
sbb
or
and
ljmp
movsb
add
adc
lock
movsb
hlt
inc
pop
out
fistpl
mull
jg
cmp
or
push
jns
mov
adcb
jo
orb
adc
into
popa
test
mov
nop
enter
xor
roll
add
pop
icebp
ffreep
adc
and
and
push
mov
sub
aad
ror
sub
in
inc
mov
pop
aaa
sbb
pop
mov
and
or
hlt
sbb
add
pop
inc
in
in
xorb
cs
push
or
aaa
push
push
mov
enter
pop
out
std
cmpsb
movsb
in
jnp
or
shrl
into
and
rcrl
and
add
pop
and
into
xchg
or
dec
pusha
in
adc
lahf
push
dec
add
andb
add
pop
sarb
cmp
pop
mov
pop
lahf
dec
out
mov
push
push
add
clc
fnstcw
inc
sbb
pop
push
stc
pop
dec
out
repz
inc
xor
addr16
aaa
sub
clc
dec
inc
in
repz
adc
jne
and
ja
or
mov
pop
rorb
insl
sbb
andb
fs
add
int3
and
out
fucomp
adc
cmc
sarl
inc
dec
xchg
insb
addb
call
mov
or
or
mov
add
jns
xor
sub
inc
insl
or
pop
dec
pop
add
in
sbb
adc
dec
es
cmp
loopne
jmp
cs
inc
inc
add
mov
adc
lret
adc
js
xchg
fldl
lcall
or
mov
or
add
bound
and
lret
mov
insb
inc
outsb
adc
outsl
or
mov
mov
fidivrl
iret
or
mov
daa
jo
sbb
lret
xchg
dec
fstl
lock
movsb
adc
push
shrb
fadds
add
out
mov
lock
into
cmp
push
add
mov
jbe
sahf
dec
add
adc
test
cmp
add
hlt
push
leave
push
sbb
add
repnz
daa
add
inc
sub
add
adc
fstps
loope
and
in
or
enter
xchg
or
push
iret
outsl
cmp
mov
inc
dec
into
loop
or
out
inc
cmpl
add
cmp
lcall
pusha
pop
dec
rcll
add
pop
test
outsb
cmp
mov
and
lahf
add
or
mov
mov
repz
or
sub
add
add
arpl
es
int
cmp
icebp
lahf
mull
inc
pop
push
in
or
cltd
dec
and
test
add
or
in
inc
or
shll
push
fcompl
xor
fs
push
gs
jns
jo
mov
stos
mov
fsts
or
or
push
js
dec
mov
enter
sbb
ljmp
sbb
movsb
call
xor
mov
add
stos
flds
inc
dec
mov
pop
in
lods
clc
icebp
jns
add
inc
aam
out
sbb
iret
jne
orl
xor
xlat
daa
push
cmp
add
loopne
ficoms
and
fisttps
mov
or
dec
cli
aas
and
je
add
adc
lea
lahf
sbbl
add
inc
int3
pop
mov
mov
lock
gs
pop
add
hlt
and
fs
inc
or
hlt
cmp
or
jge
xor
cmp
add
repnz
test
or
insb
lea
loop
and
add
pop
push
and
imul
mov
add
subb
rcr
in
shll
mov
push
and
enter
mov
adcb
lock
pop
call
jo
xchg
in
and
popa
push
inc
leave
add
repnz
mov
in
sbb
adc
lods
pushw
xchg
es
jns
add
adc
jo
xorb
mov
loop
push
cmp
jo
sbb
stc
add
mov
or
bts
into
imul
stos
sub
nop
or
and
pop
inc
and
sbb
push
mov
call
or
aas
push
and
pop
call
popf
out
pop
adc
add
call
aad
out
inc
outsb
mov
mov
xchg
outsl
inc
and
xchg
add
insb
movsb
outsl
add
out
pushf
insl
and
jecxz
cwtl
add
push
or
shl
test
cld
mov
add
add
js
and
and
add
sub
fisttps
mov
fwait
sbb
stos
pop
fadds
dec
mov
lcall
push
xor
add
loop
das
fs
sub
cmc
adc
fimull
cs
xchg
out
and
xchg
xchg
fwait
leave
inc
mov
in
add
sbb
push
ret
ss
add
loopne
inc
into
mov
and
je
dec
pushf
inc
lea
add
popf
in
inc
les
and
inc
cmp
cmp
or
and
adc
pop
xor
and
outsl
adcl
fadds
or
push
dec
mov
into
lahf
iret
in
add
or
pusha
sbb
mov
movsl
cmp
call
fcompl
mov
xchg
mov
fidivl
not
add
gs
cwtl
ljmp
dec
test
or
mov
leave
or
les
mov
sarb
fucom
orl
and
leave
add
fs
in
sub
mov
fs
cs
add
imul
inc
jbe
call
shrl
sub
inc
add
xchg
cmp
cmpsb
dec
cwtl
cmpsl
test
add
stos
into
imul
add
inc
getsec
divb
ds
xor
lcall
mov
add
sub
loop
rolb
xchg
lret
add
pusha
fs
adc
mov
jecxz
inc
push
xchg
adc
push
pop
les
pop
lahf
pop
xchg
insl
add
push
mov
adc
mov
orb
test
mov
in
lret
out
add
inc
ret
into
dec
shr
jmp
jl
sbb
add
mov
sub
cmpsl
lcall
jg
sahf
outsb
rcll
scas
ds
jp
popa
hlt
int
ds
jo
xor
mov
pop
es
and
enter
outsb
add
pop
mov
inc
loope
fs
sub
pop
push
push
rorl
push
inc
dec
push
sbb
test
pop
or
add
pop
sbb
dec
dec
mov
and
and
sub
movsb
in
mov
pushf
fs
js
fs
jbe
lret
inc
subb
sub
and
popa
test
movsb
ds
adc
mov
mov
and
dec
stc
jge
and
pop
dec
shlb
mov
lock
hlt
and
mov
sub
cmpsb
cwtl
jns
test
xor
or
gs
jo
dec
lods
testb
mov
loope
push
jle
in
push
dec
and
pop
sar
call
in
popf
leave
stos
or
xlat
addr16
or
inc
cmpsb
jb
cmp
js
xor
xchg
lcall
int3
mov
stc
insl
fadd
in
adc
sbb
or
adc
sahf
add
ret
add
cmp
sub
dec
call
adc
js
adc
xor
sub
repnz
push
pop
cltd
jge
enter
rcrl
lahf
dec
test
push
pop
arpl
test
in
mov
pop
insb
xchg
pop
or
dec
shr
mov
jb
popf
out
bswap
jo
movsl
loopne
push
inc
fwait
or
push
pop
dec
enter
add
inc
stc
int3
inc
lods
xorb
movsl
insl
add
es
push
sbb
push
jno
andl
sbb
jmp
mov
sub
add
pop
bound
mov
lcall
bound
inc
adc
push
cs
and
loopne
xor
jecxz
rolb
xchg
enter
or
adc
in
movsb
pop
sub
cmpsl
pop
ret
rolb
aad
shll
xchg
aaa
sub
and
dec
sbb
fxch
jns
test
mov
fadds
pop
faddl
fisubl
jmp
in
jle
mov
adc
push
jecxz
add
mov
push
add
out
xor
add
dec
ret
inc
adcb
pop
inc
xorl
xchg
push
inc
out
jle
add
inc
inc
sbb
pop
outsb
int3
enter
push
shlb
cwtl
cmpsl
jo
adc
push
inc
jmp
dec
movsl
inc
cmp
in
or
fs
pusha
sub
xlat
stos
push
addr16
fisubrl
inc
test
sbb
adc
insl
in
test
add
cmp
cwtl
test
sbb
jp
add
sti
mov
dec
xchg
lods
push
adc
iret
xchg
adc
mov
in
je
add
push
xchg
lcall
push
push
and
andb
ljmp
and
js
in
je
pushf
pushf
andb
out
jnp
add
or
jns
mov
xchg
and
push
and
in
xor
add
add
sbb
inc
dec
popa
push
and
and
js
add
inc
adc
int3
cmpsl
and
hlt
push
sahf
cld
and
dec
or
aas
in
add
jl
inc
lods
mov
mov
push
mov
scas
bound
sarb
jae
les
leave
add
into
mov
pop
lods
xor
stos
es
fiadds
into
fadd
testb
ja
adc
cmp
dec
xor
mov
rclb
add
cli
lock
test
lahf
xor
in
addr16
sbb
xchg
mov
xor
mov
add
inc
inc
mov
cwtl
adc
clc
inc
adc
es
clc
inc
arpl
in
dec
and
lods
cmc
popa
add
pop
cld
pop
mov
lret
das
stc
ficoms
add
test
bound
sub
ds
test
or
loop
cmp
xchg
int
ds
mov
stc
out
and
fmull
push
jl
call
jb
jno
lock
sbb
pop
adc
sbb
sub
sub
jle
or
xor
jns
orl
rcrb
daa
jne
add
sbbb
into
pushf
enter
insb
daa
nop
lock
add
sbb
pop
pop
sub
add
pop
loop
adc
int
shl
pop
jb
add
inc
mov
push
in
lock
lret
faddp
pop
in
pop
out
and
adc
rcl
inc
add
mov
xchg
sbb
lock
pop
or
dec
clc
sbb
cmp
mov
inc
fldt
cmpsb
int
into
and
pushf
dec
push
or
mov
cltd
rolb
mov
mov
hlt
sub
popa
lcall
or
and
or
addb
and
incb
or
hlt
adc
inc
in
hlt
nop
addb
inc
add
stc
inc
insb
adc
fimuls
jmp
lock
or
lods
dec
icebp
inc
dec
sahf
add
lret
inc
rcll
aad
add
xchg
in
hlt
loopne
inc
push
int3
xchg
pop
or
inc
ret
mov
mov
dec
add
mov
fnstsw
jb
add
mov
scas
or
add
into
sbb
popa
movsl
in
add
jo
xor
out
sub
lret
jmp
dec
dec
lcall
jmp
and
adc
les
inc
sbb
call
and
push
mov
sbb
inc
cwtl
mov
sub
mov
loopne
jmp
mov
sub
femms
inc
add
mov
fstpt
dec
leave
and
xchg
add
out
test
call
das
xor
pusha
add
cmpsb
loopne
inc
pop
cmp
push
lcall
add
inc
push
popf
xchg
sub
iret
sub
fdivrl
and
dec
add
fwait
mov
inc
push
adc
mov
cs
add
adc
cmp
adc
xor
cmp
xor
repnz
test
mov
les
and
xchg
pop
adc
xorb
je
add
jl
in
add
sub
test
mov
and
shrb
cmp
inc
dec
push
orb
ficoms
scas
lods
icebp
sahf
and
pop
leave
mov
arpl
jns
dec
hlt
and
pop
add
jmp
cs
daa
pop
and
sbb
lahf
push
fstps
rolb
adc
ret
movsl
enter
cltd
pop
pop
add
add
jmp
adc
lods
dec
mov
hlt
hlt
add
sub
xchg
push
cmpsb
shlb
nop
push
or
repnz
and
mov
dec
orb
xor
lods
test
test
add
push
popa
adc
cmp
lahf
sahf
setbe
dec
dec
sub
adc
push
mov
inc
test
pop
xchg
int
pusha
inc
cmp
mov
xchg
mov
mov
mov
js
mov
or
fcmove
inc
xor
add
clc
rorl
sub
jmp
jns
seta
js
xchg
or
addb
and
insb
es
jae
dec
out
in
xchg
adc
or
xor
or
add
dec
cmpsl
test
add
cmpsb
in
pop
lea
dec
push
mov
dec
pusha
jl
pop
pop
inc
sbb
xchg
bound
and
test
add
sub
loopne
es
fdivs
jle
add
movsb
push
and
in
add
cwtl
in
cmp
out
mov
xchg
jp
cmp
insb
dec
xchg
test
popf
xor
clc
cmpsb
inc
inc
pop
pop
push
mov
in
cltd
popf
and
ss
jmp
add
sub
in
dec
inc
dec
jo
add
sub
sbb
in
add
leave
mov
xchg
bound
mov
ja
and
leave
add
popf
adc
pop
rorl
pop
pop
add
loop
enter
mov
mov
sbb
out
ds
fs
call
push
add
adc
xchg
dec
add
ficoms
mov
rcll
inc
movsb
add
inc
fisubs
inc
cwtl
test
int
mov
xchg
movsl
mov
sub
or
stc
sub
dec
clc
fldl
outsb
push
fiadds
adc
enter
lock
test
adc
aas
xchg
into
jb
sub
pop
or
inc
inc
cltd
insb
push
or
mov
jmp
sub
repnz
orb
hlt
jo
mov
and
xor
add
ret
cmp
or
stc
adc
dec
mov
inc
inc
add
aas
insb
repz
or
push
push
mov
mov
test
stos
inc
ja
stos
dec
pop
subb
insl
je
dec
sub
or
dec
sbb
dec
jo
push
fidivrs
adc
js
hlt
add
mov
jnp
pop
lock
into
popf
loope
push
add
aas
hlt
bound
dec
icebp
sub
dec
aad
test
cmp
adc
test
shl
push
add
sahf
pop
bound
pop
ljmp
sub
mov
add
push
loopne
pop
push
xor
popa
sbb
xchg
add
fsub
and
and
jne
rolb
add
stos
cmp
inc
iret
jae
mov
push
stos
push
or
js
inc
cwtl
jbe
sarl
add
or
fwait
sub
adc
orb
inc
mov
push
pusha
and
inc
into
dec
adc
outsb
dec
mov
lea
xchg
flds
jns
push
les
sub
add
sti
movsl
ds
int
pop
xchg
dec
add
ljmp
mov
call
outsb
push
dec
ljmp
lock
xchg
nop
add
test
dec
loopne
adc
cmp
inc
adc
aam
mov
or
mov
pop
loop
push
aas
addl
lods
enter
add
push
add
out
add
sub
mov
test
push
cwtl
addb
inc
es
aaa
jmp
leave
mov
les
ficompl
test
test
add
jbe
lret
adc
mov
adc
dec
mov
mov
loop
inc
bound
add
add
pusha
and
mov
or
sub
pushf
pop
repz
sbb
lock
or
add
dec
mov
sbb
xor
add
out
xchg
je
add
ljmp
and
xor
or
add
mov
and
mov
sbb
mov
loop
sub
push
daa
pop
dec
nop
fsubl
and
mov
shr
add
xchg
leave
movsb
ficoml
fistpll
xor
sar
imul
or
pop
mov
add
or
sub
xchg
add
lret
mov
sub
mov
dec
subl
int3
mov
push
sub
outsb
sub
sub
xchg
xchg
les
loopne
iret
adc
lret
icebp
add
lods
dec
test
or
pushl
popa
je
sbb
hlt
and
cmp
xchg
in
dec
and
mov
sub
dec
jl
sub
sub
aam
out
add
mov
cmp
add
das
inc
rcr
add
cmp
shll
lret
mov
mov
repz
repnz
pop
push
cmp
int3
add
into
mov
loopne
sbb
add
test
push
sbb
push
lret
jno
xlat
pop
inc
mov
inc
and
int3
in
lcall
pop
popa
lods
dec
cmp
daa
cmp
jno
test
insb
dec
fmuls
imul
pusha
shrb
add
cwtl
inc
add
outsl
pop
les
and
data16
xor
fcomps
lods
ds
das
inc
call
jp
icebp
jl
test
xor
sbb
mov
and
cmp
pop
pop
mov
xor
xchg
clc
and
out
add
cld
das
fwait
ja
rcrl
leave
mov
imull
cmp
aam
pusha
add
cmp
cmp
sbb
pop
mov
cmp
adc
out
xorb
adc
or
pusha
cmc
test
sti
push
cmp
pop
imul
ffree
dec
and
imul
shlb
dec
js
jo
dec
mov
adc
mov
je
mov
adc
xor
push
faddl
loopne
xlat
pop
xor
js
push
int3
add
mov
ret
ret
cld
xchg
mov
cmp
inc
jge
add
insb
xchg
xor
push
xchg
hlt
sub
xor
in
cmp
arpl
rorl
mov
add
out
and
clc
in
int3
inc
imul
pop
mov
xchg
pop
mov
add
or
jne
clc
add
lcall
adc
test
cmpb
xchg
jle
pusha
sub
push
ss
mov
add
jbe
xchg
and
sbbl
jne
or
inc
into
call
shll
inc
shrl
je
jmp
xchg
push
add
cmp
pop
lock
or
and
inc
notb
leave
int
jnp
xchg
je
add
pop
mov
add
repz
sahf
cld
push
pop
fsubrl
testl
icebp
fiadds
orb
daa
sbb
sub
inc
inc
test
add
pop
lods
adc
pop
cmpsl
add
cmp
jl
lret
sub
and
add
mov
xchg
addr16
incb
in
inc
movsb
dec
cld
or
pusha
adc
sbb
and
adc
mov
pusha
mov
sbbb
fst
into
pop
push
mov
addb
lcall
int3
add
insl
mov
pop
mov
inc
or
mov
fsubrl
xor
pop
push
sub
out
inc
mov
sub
mov
or
cmc
mov
inc
scas
loop
mov
mov
mov
push
or
in
inc
inc
dec
lock
cwtl
and
aas
call
xor
fsts
pop
and
add
jb
add
sbb
dec
cmp
cmpb
xchg
cwtl
mov
mov
add
jmp
xchg
mov
mov
cmp
dec
ss
je
mov
xchg
in
jb
add
mov
mov
je
sub
cld
dec
adc
ds
cmp
adc
cmp
and
xlat
clc
add
loope
andb
lds
mov
jecxz
inc
jg
mov
mov
loop
lods
jecxz
inc
dec
sub
cs
sub
aaa
mov
push
adc
jns
je
call
inc
mov
daa
pop
fs
sub
push
daa
fwait
mov
mov
add
push
add
pop
inc
mov
pop
ja
adc
pop
dec
testb
daa
std
add
xchg
pop
jo
xchg
mov
and
cmp
and
mov
mov
pusha
add
push
int
cmp
in
sbb
dec
pop
sub
lods
ja
loopne
and
jbe
pop
or
mov
fst
pop
js
inc
add
push
mov
inc
cwtl
test
les
cld
cmp
rclb
jbe
lods
fldl
dec
push
lock
add
insl
cmpsl
popf
shlb
adc
inc
dec
push
cs
push
or
aas
ficomps
push
push
fstps
mov
into
sub
push
fldcw
cltd
and
or
hlt
add
adc
mov
inc
daa
in
inc
push
add
xor
xor
mov
negb
insl
adc
mov
cltd
call
nop
icebp
xor
stos
add
pusha
shrl
scas
mov
add
inc
inc
pop
dec
xchg
jp
or
or
aas
lods
ret
pop
call
stos
push
mov
mov
fldt
pop
cmpb
or
pop
popa
sbb
es
xchg
pop
fcomps
or
mov
cmp
in
pop
cli
dec
cmp
lahf
orb
in
icebp
and
int
outsb
add
adc
jecxz
sbb
add
testl
aas
int
or
mov
jbe
in
pop
imul
mov
and
loope
cwtl
lea
mov
mov
add
gs
shlb
in
dec
pop
adc
or
es
and
or
mov
fadd
ret
pop
push
cmp
add
and
or
int
sub
fimuls
and
jns
mov
mov
stc
add
mov
aas
movb
add
add
lods
idivb
xor
inc
nop
ficomps
mov
stc
out
jns
data16
inc
lret
and
jb
fiadds
xchg
rorb
adc
cmpsl
cmp
sub
xchg
into
jno
and
aas
int3
mov
jne
and
push
call
scas
js
add
push
mov
int
std
mov
icebp
cmp
repnz
loope
lock
pop
jl
adc
ret
cwtl
test
mov
sbb
rorb
pop
sub
add
icebp
xor
dec
inc
mov
or
xchg
add
cmp
mov
adc
adc
rclb
in
loope
xor
faddl
sbb
jg
push
jg
int3
leave
les
gs
jo
jmp
js
or
inc
and
add
inc
repz
push
stc
fdivrl
pop
sub
sbb
pusha
sbbb
jo
call
mov
and
or
push
in
xlat
mov
dec
inc
repz
mov
add
adc
lock
add
mov
in
dec
mov
loop
loope
jb
jo
cs
pop
addr16
inc
jl
inc
or
add
into
js
push
lods
and
add
daa
call
iret
in
mov
add
sub
mov
push
lahf
in
xor
or
add
add
gs
out
imull
out
ja
call
push
addr16
cmp
enter
add
sub
push
rcrb
movsb
in
xchg
and
sarl
lds
adc
test
out
dec
in
lods
and
push
xchg
arpl
sarb
shlb
out
add
adc
add
mov
xchg
jge
add
push
mov
das
int3
dec
subb
dec
jecxz
shrb
cmp
je
lahf
cmp
scas
lods
das
into
jb
test
fsub
dec
test
test
nop
dec
xor
and
jno
inc
xlat
outsl
sbb
xor
pop
cli
jle
add
mov
cmp
sbb
dec
insl
mov
add
in
lcall
mov
xor
and
pop
lret
add
popl
and
dec
in
xor
dec
loop
scas
sub
enter
hlt
and
arpl
popf
in
sbb
dec
add
cmp
sbb
or
jo
out
insb
push
sub
iret
and
shll
scas
insl
jle
add
outsl
jb
mov
repnz
mov
test
dec
pop
test
fsub
bound
in
in
clc
jbe
pop
js
sti
ds
lret
sbb
rol
loop
cmp
mov
repz
notb
jge
add
push
fwait
sti
aam
ds
stos
orb
test
aam
and
jp
sbb
pop
push
pop
les
add
movsl
xchg
test
mov
cmc
adc
subb
jb
jmp
movsl
jae
inc
test
test
push
jno
repnz
push
icebp
fcoms
push
add
mov
addr16
inc
push
stos
cmp
sub
hlt
cmpsb
jne
mov
lock
das
and
aad
loopne
jbe
dec
scas
mov
scas
dec
or
jne
scas
push
lock
cld
test
int3
inc
cmpsb
and
call
mov
fadd
addl
ds
cmp
lods
inc
rorb
jno
inc
mov
dec
adc
loope
int3
pop
xchg
rep
cmp
and
xor
js
add
int3
mov
or
inc
mov
inc
in
adc
inc
adcb
test
add
inc
leave
test
les
adc
hlt
daa
inc
mov
push
or
insl
in
mov
lock
lock
push
clc
jmp
adc
xor
enter
or
push
mov
sub
cltd
jns
dec
sub
mov
push
xchg
pushf
sbb
leave
into
cltd
loopne
dec
push
xor
stc
xchg
xor
cli
pushf
sbb
dec
jbe
mov
mov
shrl
into
sbb
aad
shll
sub
insb
jo
inc
jns
rcrb
test
cmp
addl
and
into
call
movsl
inc
sbb
mov
rorb
dec
inc
cwtl
push
aad
pop
lods
and
in
out
add
shll
add
adc
outsl
loop
dec
lods
divl
xchg
daa
lcall
add
outsb
push
orb
push
inc
and
and
jg
gs
push
cld
ret
xchg
mov
sbb
xor
lahf
lds
enter
jno
sahf
and
or
mov
jns
dec
lret
sub
das
xor
cmp
push
sbb
int
add
mov
stos
xor
add
lret
dec
dec
or
or
add
hlt
in
mov
push
gs
mov
ss
xchg
xor
lret
inc
fistpll
into
xor
cmpsl
sub
or
pop
inc
outsb
adc
addl
loope
cltd
insl
cld
xor
dec
dec
addb
and
popa
sub
leave
cld
or
lcall
je
in
repz
push
mov
pop
pop
call
test
lods
into
imul
notl
xor
lock
jae
sbb
xor
or
in
or
sbb
addb
push
and
add
into
pop
dec
test
lcall
andl
inc
popf
inc
lods
or
or
sub
enter
in
cld
push
jns
std
dec
imul
shrb
add
insb
arpl
xchg
xor
dec
mov
adc
fwait
pushf
push
or
sub
adc
test
add
rclb
mov
out
rcrb
cmp
lret
lods
push
push
and
and
mov
sub
dec
pusha
mov
shrl
add
sbb
push
icebp
or
xor
stc
mov
adc
ret
sub
insl
int
sub
jo
ficoml
enter
adc
insb
xchg
stos
add
pusha
add
sub
pop
jbe
enter
outsl
outsl
aad
in
xor
cmp
lret
insb
fnsave
add
xor
xor
add
pop
and
leave
stos
sbb
inc
pop
icebp
or
orb
push
xchg
lahf
add
xchg
mov
cld
mov
mov
adc
xchg
xlat
add
dec
mov
push
or
xchg
add
in
xchg
mov
andb
sub
fadds
adc
sbb
lcall
stc
add
pop
jo
in
pushf
dec
cmp
rcr
loope
and
sub
inc
movd
cld
shl
leave
in
add
pop
fwait
cmc
adc
rcl
adc
and
fidivrl
cmp
out
movsb
jo
sbbb
daa
dec
add
int
mov
and
mov
mov
add
mov
sub
add
ret
movsb
and
popa
call
lock
gs
leave
pop
adc
add
mov
push
mov
ret
add
pop
or
xchg
add
push
xchg
fs
shlb
imul
enter
aam
repz
outsb
negb
stc
and
movsb
mov
gs
add
ja
pop
inc
mov
jl
cmp
pop
loopne
push
add
call
sbb
jbe
adc
and
inc
jo
adc
adc
add
es
jo
call
fidivrs
push
out
loop
mov
loop
add
add
pop
sti
lahf
ret
jo
mov
inc
pop
aas
add
lods
in
dec
or
push
arpl
add
push
loop
jo
add
divb
fisubrs
inc
sub
add
lcall
adc
and
jmp
mov
push
fadds
leave
rol
cmc
repnz
lods
dec
push
mov
pop
dec
scas
dec
loope
insb
inc
pop
pushf
hlt
lods
add
pop
loop
iret
fs
jns
dec
das
fadd
fisubl
daa
call
aaa
std
in
mov
add
fisubs
pop
loopne
jl
pop
into
lods
addb
push
mov
mov
icebp
add
fcoms
jnp
test
imul
and
pushf
pusha
xor
das
jge
movsb
adc
dec
jmp
pushf
mov
mov
js
xchg
xor
enter
iret
les
adc
xchg
rcrl
jae
enter
mov
add
cmp
ss
repnz
add
sbb
inc
lods
push
stos
sub
cmp
dec
sub
into
and
inc
or
mov
in
in
push
add
add
xlat
and
add
mov
sub
and
dec
in
aas
add
sbb
lea
inc
and
fnstsw
leavew
mov
aaa
dec
pop
add
xchg
scas
loopne
mov
add
push
xlat
or
out
les
das
adc
out
hlt
mov
inc
stos
ror
push
adc
pop
daa
ds
inc
outsb
and
push
xchg
leave
add
mov
nop
enter
push
jecxz
mov
cmpl
leave
add
mov
popl
pusha
add
imul
xchg
mov
push
loope
and
test
jbe
out
test
in
ss
xchg
lock
mov
nop
add
scas
or
cwtl
mov
pop
pop
int3
hlt
mov
jle
and
dec
fstps
std
in
incb
lock
dec
into
and
in
mov
add
fs
mov
mov
pop
shl
push
std
in
pop
pop
movsb
rorb
movsb
jae
aas
into
cmp
add
lods
push
jle
add
or
cmc
or
or
xor
rolb
sbb
lds
adc
add
jmp
add
mov
dec
xor
add
iret
cmpsl
cmc
sahf
clc
bound
pushf
push
ja
leave
sbb
sbb
mov
js
fisubs
or
xor
push
icebp
fistl
cld
ljmp
add
lea
inc
or
mov
mov
iret
sbb
mov
les
call
test
and
cltd
in
inc
jg
add
sbb
inc
add
mov
aaa
adc
inc
lret
adc
insb
nop
loop
add
popa
sub
jp
loope
arpl
lret
push
adc
enter
and
xchg
xlat
mov
add
sub
cmpsl
jl
inc
pop
add
int3
sbbb
pop
jbe
rol
mov
ja
mov
daa
xor
or
movsl
pop
rolb
sub
insl
add
pop
cld
push
and
enter
and
add
mov
add
push
push
loopne
pop
or
cmpsb
and
clc
xorb
mov
cmp
and
sbb
push
xchg
and
add
xor
jl
push
mov
js
in
push
rolb
xchg
mov
mov
xchg
inc
push
aas
sbb
inc
repz
int
xor
in
mov
imul
sbb
outsb
mov
sub
sub
jo
dec
xchg
jnp
or
lods
test
sar
push
adc
add
rcll
add
lret
inc
int3
xchg
ds
nop
fisubs
lods
fwait
add
push
bnd
in
scas
in
cmp
cs
xchg
mov
xchg
mov
or
fmulp
add
jne
nop
cmp
adc
lret
leave
lods
rol
mov
xchg
jbe
xchg
les
bound
sti
adc
insl
sbb
mov
daa
mov
push
fdivrp
ja
outsb
fmuls
lret
mov
add
and
inc
add
and
scas
jne
mov
imul
inc
dec
add
popf
mov
mov
test
cli
and
rorl
push
call
fxch
stos
or
ret
push
inc
add
cwtl
add
repnz
pop
pop
or
add
loope
cld
add
js
push
or
pop
mov
imul
or
add
dec
jne
add
push
pop
loopne
mov
add
jae
fistpl
cmp
push
xchg
add
or
xchg
lods
or
sub
into
scas
pop
pop
inc
lahf
mov
sbbb
addl
adc
jmp
ficoms
test
pop
or
adc
dec
add
inc
repnz
push
mov
outsb
sub
bound
or
cli
rolb
icebp
aad
push
sti
fstpt
pop
xor
in
cmpsb
clc
pusha
add
hlt
mov
adc
lock
mov
mov
shlb
lods
fcmove
getsec
iret
cmp
or
shrl
testl
jne
cmp
inc
sub
add
cld
lea
pusha
jmp
xlat
add
xor
cmpsl
iret
mov
sbb
aad
fwait
scas
push
xor
and
sbb
dec
sbb
aaa
jno
and
mov
or
push
add
jmp
imul
daa
aad
add
lret
test
popl
mov
jge
or
mov
push
push
out
scas
xchg
mov
xchg
sub
mov
mov
clc
sub
das
in
inc
add
xor
jne
in
add
iret
sbb
sub
add
sub
jo
sbb
dec
cmp
inc
rcr
xor
pop
jbe
fldl
push
loopne
sarl
jle
add
ja
mov
cltd
out
add
mov
add
add
jns
jo
movsb
arpl
cmp
jle
adc
mov
stos
out
test
cmp
sbb
loopne
or
add
ds
aad
add
push
xchg
adc
push
add
call
icebp
stos
add
stos
mov
pop
add
xor
hlt
adc
aaa
invlpg
out
and
pusha
mov
enter
xchg
cmp
dec
test
sahf
dec
add
inc
je
cmp
shlb
add
mov
jle
add
dec
and
add
xchg
out
sti
push
ret
jge
sbb
mov
mov
mov
pushf
out
rcrb
loope
adc
add
fistpl
mov
add
push
testb
iret
cmp
push
pop
or
stc
jo
add
lods
loop
mov
iret
add
push
sbbl
cs
inc
test
xchg
pop
cmovge
xchg
push
out
pop
lods
popf
sbb
xchg
push
popf
mov
cmpsb
cmp
aaa
pop
rorb
fwait
add
mov
cld
imul
push
fs
insb
inc
pop
fiaddl
push
jle
test
xor
add
jp
popa
cwtl
clc
test
call
mov
loope
lea
xlat
add
ret
dec
add
jl
mov
add
and
nop
test
mov
fsts
adc
and
inc
cmp
push
imul
lcall
dec
sbb
fadd
adc
cltd
dec
test
push
test
add
pop
mov
add
mov
pop
in
lahf
loopne
loope
pop
xor
data16
ror
in
clc
shll
add
jmp
or
rcrb
lods
add
mov
addb
ds
mov
sub
inc
xchg
out
jns
add
inc
jl
insl
jne
mov
mov
fdecstp
dec
notl
mov
or
mov
xchg
fwait
jge
add
xchg
push
or
fcom
xor
insl
mov
and
cmc
enter
fisttps
add
xor
out
mov
mov
js
sarb
push
jb
into
in
and
loopne
pusha
pusha
lods
imul
xchg
add
inc
test
ss
adc
inc
pushf
stos
or
xchg
or
pop
roll
cmc
mov
xor
lahf
dec
popl
ja
or
cmpsb
inc
add
data16
xchg
mov
add
rcrb
and
push
enter
adc
scas
mov
mov
rolb
lds
push
lock
hlt
and
adcb
dec
add
cmp
lods
mov
mov
add
rcr
mov
sahf
out
adc
sbbl
and
imul
cld
data16
and
adc
lods
mov
and
add
outsb
stos
cwtl
adc
mov
push
adc
rolb
fwait
xorl
xchg
adc
cs
or
insb
fldenv
mov
enter
hlt
add
dec
pop
cld
sub
cmp
je
and
inc
out
jns
add
mov
jb
add
dec
and
or
cmp
add
cwtl
dec
sub
in
jmp
jle
add
mul
std
hlt
pop
test
notl
xor
inc
add
sbb
xchg
add
pusha
cltd
inc
adc
xor
loopne
push
les
mov
push
add
int
jns
mov
nop
mov
add
lock
scas
insl
inc
add
in
dec
ja
dec
cmp
imul
outsb
sbb
pop
fcmovnbe
jecxz
adc
fs
popa
lods
cmp
dec
pop
movsb
add
imul
fildl
aad
scas
leave
hlt
xor
movsb
cmpsl
jecxz
lods
test
adc
inc
jg
enter
add
aas
mov
inc
push
mov
add
mov
xor
mov
outsl
push
pop
push
ficoms
aas
xor
mov
addl
test
movsl
stos
rcll
add
add
push
sbb
lds
mov
lcall
xor
add
or
loopne
jno
and
sub
cs
add
mov
int3
lahf
cmp
lock
add
test
movsl
sarl
inc
inc
jae
xor
or
jo
sub
push
jae
jg
mov
push
mov
loope
push
outsl
pop
and
sub
addr16
out
add
imul
lds
into
adc
or
testl
stos
sahf
ds
fwait
sti
out
loopne
cmp
inc
arpl
jo
shll
lods
movsl
add
mov
outsb
jne
loopne
inc
add
movsb
pop
or
sarb
xor
sub
rcll
mov
out
cmc
add
out
pop
add
or
stos
or
test
jae
xor
mov
mov
add
fsts
adc
pushf
fucomi
add
lods
add
fsubs
repz
xchg
dec
rclb
out
in
pusha
shrb
pop
aaa
outsb
jo
data16
std
mov
jmp
jl
xor
add
sub
ljmp
lods
jns
xor
mov
andb
push
sarl
xchg
cmp
add
mov
ret
add
inc
lret
push
mov
add
data16
rol
stos
cld
dec
jno
add
adc
testl
xchg
sbb
cmpsl
shll
lods
fcoml
mov
adcb
push
fmull
jno
outsb
es
sti
mov
pop
stc
push
pop
push
out
inc
push
das
lods
add
pop
inc
push
pop
test
sbb
add
mov
push
lods
dec
xor
mov
dec
int
jns
sti
in
add
out
sar
loopne
call
mov
ja
jno
cmp
lods
cmpsb
mov
iret
jbe
outsb
sbb
mov
mov
sbb
xor
sub
mov
adc
mov
loopne
and
sbb
xchg
cmpsl
jne
icebp
pop
pop
and
nop
add
test
pusha
xchg
add
add
mov
mov
cld
xchg
add
and
jecxz
inc
xor
add
mov
rolb
or
pop
sbbb
add
xchg
xchg
cmp
leave
mov
testb
pop
lret
shlb
cmpsl
call
mov
xchg
in
faddl
xlat
adc
shl
jbe
dec
jge
sbb
pop
mov
push
jo
out
popf
push
add
xchg
and
ret
add
lods
bnd
gs
sub
sbb
inc
mov
repz
jge
xor
inc
sub
js
or
loopne
and
outsb
push
mov
lock
rep
adc
lret
mov
roll
xor
jg
sahf
add
ss
add
int
push
dec
iret
xchg
cli
sub
and
cmp
add
inc
xor
cwtl
add
xchg
xor
add
add
stos
aad
mov
iret
mov
mov
pushf
sub
pop
repz
je
lods
jge
movsl
pushf
pusha
rcrb
add
jmp
lret
addr16
adc
insl
add
sbb
mov
mov
aam
and
cmpsl
sub
cmc
lock
push
arpl
and
pop
mov
faddl
and
loope
fdiv
add
xor
es
clc
xchg
push
ret
movsb
or
push
jb
jmp
lahf
rorb
add
mov
sbb
or
lahf
fiaddl
inc
jne
add
cmpsb
cmp
add
sahf
roll
push
in
xchg
icebp
add
jmp
jb
fwait
push
sbb
or
lcall
push
sbb
cltd
enter
push
aas
je
pop
cmp
ljmp
fwait
mov
dec
fsubrs
and
jl
jl
xor
jae
test
dec
cmp
outsb
jno
aas
pop
andb
cmp
jae
cmp
ljmp
xor
add
push
shlb
sbb
pop
jb
cmpsb
pop
out
and
pushf
jno
in
mov
pop
hlt
add
jmp
push
shll
mov
jmp
pop
and
and
jmp
lock
mov
add
jno
aas
dec
pusha
subb
int3
or
xchg
add
jg
xchg
outsb
shlb
xchg
xorb
mov
rolb
jecxz
sbb
add
sub
push
push
aad
add
pusha
pop
popa
lcall
dec
add
sahf
cld
pop
aam
jo
sbb
cmp
cmc
loope
mov
dec
test
lds
add
fldt
cmpl
or
rcl
add
push
sahf
out
das
xchg
jp
cmc
jo
add
push
xor
in
inc
into
adc
fcoms
outsl
lahf
add
hlt
cmp
inc
xchg
enter
aas
and
xchg
sbb
dec
and
add
std
xchg
dec
sbb
xchg
xchg
pop
ds
dec
aad
in
add
cmp
or
push
out
adc
icebp
sub
out
outsb
and
or
shlb
aam
push
and
mov
and
mov
and
jl
dec
or
test
adc
and
pop
pushw
xchg
outsl
xor
cld
pop
gs
sbb
idivb
pusha
sarb
mov
insl
mov
pop
add
insb
xchg
mov
push
mov
movsl
or
jae
add
push
fnsave
je
enter
inc
loopne
sbb
xor
repz
out
stc
push
add
push
mov
add
dec
add
push
lcall
mov
mov
pop
clc
add
clc
cmpsb
int3
insl
push
push
ret
inc
or
add
test
pop
les
add
xor
add
and
push
mov
lret
xchg
rclb
loopne
add
and
add
pop
dec
push
cli
in
pop
sub
inc
pop
sub
cltd
push
inc
daa
add
stos
fildll
adc
add
xchg
mov
call
jl
data16
or
pop
push
mov
pop
push
mov
fnstenv
pop
xor
add
or
lds
mov
jge
stos
fwait
pop
xor
push
mov
movl
mov
push
cli
es
scas
sbb
cwtl
sbb
jmp
paddd
mull
sub
aad
jg
out
or
mov
add
aaa
mov
add
inc
out
fs
leave
in
mov
std
pop
add
sbb
nop
mov
in
dec
jmp
cmc
clc
and
sub
repnz
fcoml
push
lret
in
andb
push
xor
xchg
xor
and
add
adc
test
inc
nop
jns
mov
in
in
sub
sub
jl
subl
lahf
fadds
jne
test
pushf
lret
leave
pop
pusha
nop
inc
inc
sub
adc
xrelease
push
jmp
rcl
outsb
inc
jge
in
mov
mov
push
in
push
lods
mul
dec
popa
add
mov
adc
mov
add
push
mov
sub
in
mov
rorl
pop
cld
add
xorb
lret
psubsb
add
xchg
or
cmpsb
cltd
lcall
jmp
movsb
mov
inc
inc
test
jns
add
push
xor
adc
pop
sbb
jne
sub
js
and
jmp
gs
xor
cmp
pusha
rcrl
add
aaa
rclb
cmpsl
jae
dec
enter
add
mov
jl
push
out
cmp
mov
pop
xchg
iret
notl
add
scas
pop
mov
mov
icebp
dec
mov
rcrl
add
in
push
inc
outsl
add
and
js
mov
jo
stos
inc
mov
mulb
lret
nop
loopne
add
xchg
das
pop
inc
pextrw
test
add
iret
mov
adc
jg
clc
push
add
test
mov
addr16
xchg
and
adc
mov
sub
scas
xor
test
push
jne
cmp
clc
or
add
mov
cmc
aad
mov
and
cmp
cmp
addl
popf
add
insb
lcall
movsb
add
imulb
sbb
out
add
push
or
sbb
rcrb
filds
fwait
xchg
push
push
jbe
or
sub
pop
sbb
mov
add
sbb
xor
add
dec
sub
in
fldz
xor
mov
nop
loopne
cmp
mov
fdivs
add
pop
dec
pop
mov
jmp
ljmp
add
sbb
loopne
push
iret
aas
addr16
fnstenv
loop
mov
add
sbb
adc
push
jb
jnp
add
inc
test
xor
rcl
cltd
iret
add
fiadds
fdivs
pop
pop
out
jecxz
mov
add
xchg
insl
sahf
sub
adc
shl
dec
scas
fiadds
and
es
pop
push
addr16
jb
pop
aaa
xlat
xor
push
inc
mov
cmpsl
xor
cmp
loopne
aaa
lahf
daa
pop
xlat
jae
add
cltd
out
dec
ja
pop
mov
add
cwtl
mov
add
push
push
push
xchg
add
adc
pslld
add
xor
add
dec
aad
cmp
adc
movhps
faddp
xor
add
pop
mov
add
cmp
jge
push
add
fsubrp
fimull
jo
iret
lock
xchg
mov
mov
lahf
add
push
fdivl
dec
lret
xor
xchg
cwtl
inc
aas
call
nop
les
sahf
cs
dec
sbb
sti
rcrb
out
popa
loopne
add
or
add
int3
sbb
mov
outsl
mov
push
add
cmpsb
out
push
in
pop
call
aas
pop
mov
sub
pop
sbb
les
mov
mov
out
adc
inc
int
shlb
push
pop
loop
repnz
xor
inc
movl
js
dec
dec
ss
and
int3
jb
jle
or
scas
pop
loopne
and
movsb
add
test
mov
cmc
jns
add
lret
shlb
push
dec
mov
and
or
rorb
xchg
nop
jmp
cmp
outsb
loopne
pop
arpl
cmp
cmp
dec
jne
pop
in
push
enter
push
inc
leave
lock
lea
sub
adc
mov
std
icebp
in
pop
and
outsb
loop
lods
fmul
or
cltd
repz
adc
dec
adc
mov
cmpsl
push
lret
inc
ret
add
dec
shlb
hlt
jg
sbb
mov
or
movsb
aad
ja
adc
cmpl
inc
das
shrb
push
hlt
push
or
mov
addr16
inc
or
jg,pn
add
lret
jmp
mov
mov
jb
adc
aam
ds
add
fldenv
xor
cmp
pop
cmp
fldl
cwtl
or
pop
sub
inc
sarl
into
cmp
out
lock
add
push
daa
and
repz
mov
sahf
pop
push
subb
add
ljmp
je
arpl
sub
mov
mov
movl
sub
sahf
dec
cmp
repz
call
mov
in
addb
jbe
testl
mov
sub
mov
mov
fcomp
xor
roll
fidivrs
sbb
std
gs
cmp
add
mov
lcall
fsubl
mov
adc
fcomp
leave
mov
in
xchg
clc
xchg
mov
and
loop
pop
aad
icebp
push
jmp
stos
pop
lcall
cmpb
addr16
jne
push
mov
or
mov
incb
jae
in
rcrl
test
mov
xor
xor
jmp
pop
xchg
aas
or
mov
add
test
adc
pop
roll
pop
or
mov
jecxz
hlt
push
or
xor
popa
jge
gs
add
and
dec
cltd
inc
and
mov
push
add
inc
pop
call
add
clc
nop
adc
dec
fwait
cli
xchg
push
pop
cmpsl
or
in
lods
negb
xor
add
enter
fs
ret
dec
bnd
add
es
jge
call
and
insb
lods
xor
mov
fisubs
cmp
ja
icebp
test
jb
stos
cmp
lcall
sarb
fsubr
add
ja
rorl
jp
pushf
aad
jo
mov
in
cmpsl
add
mov
fcmovnu
sbb
xchg
xor
cwtl
pop
cmc
in
push
mov
and
lahf
cmp
sti
pop
into
pop
add
jmp
and
add
add
jg
mov
cmp
sub
push
jle
xchg
pop
jge
ret
mov
out
dec
add
inc
push
mov
inc
movsb
dec
les
push
xor
inc
jb
mov
leave
dec
popf
cmpb
dec
pop
adcb
fwait
mov
imul
or
push
loopne
dec
sub
hlt
mov
std
dec
test
xchg
addl
cli
mov
push
rcrb
loop
xchg
nop
nop
xchg
shrb
and
pop
or
imul
lods
adc
xor
in
add
jae
xlat
fdivrs
add
dec
or
std
pushf
ss
call
pop
shll
mov
or
mov
add
fstpt
adc
xor
dec
pop
in
cmp
cmp
jp
invd
mov
fmull
adc
pop
xchg
ss
add
add
nop
dec
js
incb
bound
inc
movsl
xchg
je
mov
ljmp
rcr
mov
jg
add
mov
mov
jge
nopl
inc
push
xchg
push
push
cmc
ds
mov
adc
add
push
stc
add
ljmp
out
xchg
mulb
movups
fs
sbb
ret
loopne
jb
pop
pop
call
and
fstpl
add
out
aad
jns
mov
insb
add
adc
add
in
sarb
add
jg
xor
mov
es
adc
aam
into
add
test
mov
xor
andb
lea
mov
in
std
jo
mov
add
mov
add
sbbl
jle
movsb
aam
jae
call
sti
or
add
xorb
popf
iret
mov
jp
sbb
cltd
stos
add
lahf
ds
aad
fdiv
sbb
mov
add
xor
mov
push
xchg
mov
inc
adcb
rolb
in
hlt
jl
mov
pop
sub
rorl
push
out
nop
mov
sub
cltd
xorb
add
push
adc
out
and
leave
mov
pop
arpl
sahf
addb
and
jnp
and
add
out
xchg
loopne
mov
adc
fisttpll
jg
push
orb
in
shl
inc
in
filds
dec
call
add
push
and
or
ja
leave
and
mov
add
sbb
cmpsl
adcb
dec
push
movsl
pop
xchg
or
inc
jle
dec
add
aaa
fnstsw
add
xor
add
adc
dec
push
or
push
call
sub
pop
adc
push
add
cmpsl
cmp
les
cltd
jmp
sub
adc
lret
mov
aam
inc
int
loop
xor
repz
sbb
inc
dec
sarb
add
stos
inc
push
push
sbb
incl
sbb
and
sarl
xchg
or
lds
add
lea
pop
daa
std
jge
add
enter
dec
movsb
mov
lcall
jmp
add
arpl
divb
jg
es
insl
adc
add
jle
icebp
into
inc
cmpsb
pop
sub
add
orb
sub
mov
dec
aas
jnp
add
and
or
or
sbb
add
lods
jae
and
pop
stc
cmpsl
sub
lret
call
add
add
and
ja
imul
and
adc
nop
mov
rep
dec
add
das
and
xchg
cmp
int3
loope
inc
jnp
dec
mov
adc
ret
or
insb
push
xchg
add
fst
popf
fisubrl
scas
mov
pop
jecxz
in
outsl
addb
unpcklps
das
in
cld
dec
dec
add
stc
xor
mov
add
test
and
push
imul
and
jp
add
mov
jmp
lds
adc
add
icebp
xchg
insl
push
add
out
cmp
outsl
xor
ficoml
rcl
add
add
nop
jmp
pop
mov
jb
hlt
test
bound
jae
jecxz
ds
pop
cli
xor
loope
shl
sub
sub
shl
add
test
mov
or
push
vpshad
mov
scas
stc
js
xchg
vmovapd
sbb
loopne
pop
mov
mov
push
iret
roll
pushl
and
es
into
or
fwait
mov
pushf
xor
add
cmp
sbb
add
sub
and
xorl
clc
xorb
sbb
ret
int
adc
lods
mov
pop
add
inc
mov
xor
push
out
add
testb
in
mov
lock
pop
imul
adc
dec
jp
repnz
fcom
insb
push
adc
popf
sbb
nop
jae
mov
jl
fildll
lock
mov
jns
addr16
mov
pop
das
pop
rclb
mov
push
add
clc
add
icebp
xor
jecxz
pop
pop
ds
sbb
push
jnp
shl
psubq
test
imull
test
ljmp
add
jo
sbb
xchg
add
push
sub
scas
xor
rcl
push
adc
fnstcw
jns
pop
js
call
adc
sbb
push
inc
add
jns
lahf
loop
or
cld
icebp
pop
sbb
push
adc
dec
xorb
xchg
dec
pop
sahf
xor
loopne
call
pop
sub
fldz
movsb
das
test
pusha
xchg
mov
repz
xchg
outsl
mov
cmpsl
add
push
xor
movsl
and
insb
dec
cmp
jno
xchg
pop
jle
test
xchg
adc
xor
mov
fmul
shl
or
repz
sub
fcmove
mov
add
hlt
cmpsl
sarb
mov
push
mov
add
pop
xorb
imul
cli
pop
mov
jne
imul
jae
test
add
xlat
andb
add
fstp
or
out
add
addr16
mov
push
or
or
cmp
sbb
mov
and
inc
pop
inc
xor
dec
pushf
shl
push
xor
cs
pop
xorb
in
mov
push
les
clc
xchg
js
out
sbb
mov
cmp
dec
loope
or
jg
sbb
pop
mov
daa
add
sahf
dec
dec
mov
sub
add
xchg
pushf
xchg
dec
add
aas
jno
pop
into
int
inc
mov
cmc
add
les
popa
cmp
dec
out
add
scas
enter
and
xor
push
push
cmp
in
aas
adc
nop
and
adc
cmpb
or
mov
jle
jo
scas
pop
test
jns
and
mov
sbb
imul
push
pop
jp
mov
pusha
jmp
loopne
hlt
mov
add
iret
mov
insl
roll
stos
and
xor
jne
mov
ljmp
mov
mov
push
xlat
xor
xor
neg
subb
mov
cmp
dec
scas
fsubrs
loop
mov
fwait
mov
gs
xchg
push
jb
out
hlt
dec
dec
imul
int
jmp
dec
xchg
inc
mov
add
ljmp
xchg
mov
stc
repz
std
add
add
int
adc
push
xorb
outsl
mov
cmc
mov
add
mov
pop
sti
ljmp
mov
xchg
mov
lock
loope
mov
ret
add
mov
add
pop
push
shrd
sbb
inc
pop
xchg
jp
dec
clc
movsb
add
mov
mov
lret
add
shll
sbb
ret
cmp
xor
xchg
sub
inc
call
adc
add
push
mov
push
xchg
xchg
arpl
fprem
xchg
pusha
lahf
add
mov
inc
cld
stos
add
mov
jge
andb
add
add
adc
shl
mov
inc
xorb
add
test
xchg
add
xchg
fs
enter
adc
sbb
movsl
mov
cmp
add
jb
jnp
pop
sti
pushf
jmp
push
nop
add
loop
ja
sub
add
fiadds
cmpsl
enter
xchg
test
shl
and
add
fwait
mov
xchg
dec
jl
clc
or
or
add
pop
jno
xor
mov
jb
cmp
sbb
pop
mov
out
xchg
cmovne
fiadds
paddsw
add
lock
pop
nop
repz
push
cmp
and
je
adc
add
fwait
or
test
add
cld
inc
inc
cmp
ss
add
leave
subl
aaa
add
cld
mov
or
ror
sbb
mov
add
out
andb
pop
lahf
adc
notl
pop
mov
shlb
popf
sbb
dec
aam
and
inc
mov
test
loopne
and
add
cmc
cmp
sub
sbb
and
mov
arpl
mov
in
gs
sarb
rolb
push
pop
mov
xchg
add
push
jp
xchg
pop
dec
data16
mov
mov
fiaddl
jl
sbb
shrl
pop
push
iret
mov
arpl
mov
jle
mov
cmp
add
shrb
add
and
cltd
rorl
mov
call
push
iret
inc
stc
xchg
or
push
movsl
adc
jne
hlt
shlb
ror
ret
dec
xchg
xlat
lcall
cmp
pop
pop
and
add
dec
pop
ud1
cmpb
push
dec
sbb
xor
mov
pop
add
lret
movsb
or
adc
loopne
mov
imul
push
std
pop
outsl
sub
add
xor
jle
sbb
add
inc
jecxz
adc
xor
in
adc
dec
adcb
mov
cmc
js
inc
cmp
jge
pop
lods
add
adcl
mov
adc
imul
test
ljmp
add
aaa
cltd
sub
jb
pop
jne
sbb
bound
push
out
js
into
jecxz
add
xchg
inc
movw
jmp
mov
add
fsubr
jbe
push
addr16
lret
pop
adcb
lods
sub
outsb
lds
lods
xchg
jecxz
add
dec
pusha
lret
dec
push
cmpsb
pop
or
data16
and
xor
cs
incb
cs
sbb
add
sub
add
push
outsb
dec
loopne
pop
loope
scas
fdivr
push
aas
xor
pop
cmp
inc
xchg
push
sub
or
push
aaa
mov
std
inc
lret
xor
add
and
add
or
je
xlat
int3
xor
fnsave
and
mov
push
cmp
notb
mov
or
push
in
fdivrs
test
cmpsb
mov
add
fsubrp
das
push
mov
imul
in
icebp
pop
add
dec
arpl
fwait
inc
mul
xchg
cmpsl
paddw
mov
sti
pop
outsl
mov
stos
adc
inc
add
xchg
ljmp
jbe
xor
push
add
lahf
decb
dec
jne
pusha
mov
add
cmp
lret
fidivs
add
push
imul
mov
jge
daa
dec
or
adc
mov
lahf
pusha
or
mov
push
jl
cmp
inc
cmpsb
xchg
pop
xchg
pop
sbb
inc
push
dec
add
loope
mov
or
sub
sbb
aad
add
cmp
and
out
or
bound
std
adc
mov
add
mov
cmpsl
or
push
push
jecxz
lods
les
sub
cmp
xchg
rorb
rorb
sbb
xorb
filds
cmp
or
das
xchg
movsl
ds
shll
fadds
xchg
aas
adc
mov
pop
jnp
add
push
movsl
js
call
lock
pop
ret
fwait
test
rorl
ljmp
adc
cmp
hlt
gs
mov
xchg
inc
mov
push
addr16
dec
xor
add
xchg
movsb
jge
sbb
inc
xchg
or
mov
or
cmc
outsb
leave
int3
inc
xchg
pop
or
sub
mov
and
aad
xchg
out
rolb
icebp
and
xchg
data16
in
imul
pop
pop
inc
in
dec
pop
adc
add
xchg
loopne
push
cmp
mulb
js
add
fwait
arpl
mov
xor
dec
jo
cmp
sbbb
nop
xlat
jne
in
clc
arpl
sub
mov
ret
mov
aam
in
ss
mov
in
and
rcll
adc
mov
and
push
add
loopne
sbb
sbb
stc
scas
pop
add
mov
or
dec
in
pop
sbb
movsb
loop
xchg
cmp
sahf
add
in
pop
or
in
lock
scas
scas
and
add
xchg
mov
push
add
add
lahf
out
je
jb
add
leave
mov
inc
push
push
jae
cmp
cwtl
fsts
rclb
cld
push
xor
mov
adc
test
scas
pop
cltd
inc
pop
dec
cmp
call
cwtl
pop
xchg
add
addl
and
mov
add
jg
push
pop
pusha
dec
adc
outsl
cmp
and
add
loopne
jmp
ret
jbe
arpl
lods
xchg
adc
adc
mov
push
and
call
arpl
pop
jmp
fsubrs
in
es
ret
or
dec
cwtl
cmp
dec
fdivp
arpl
pop
std
inc
dec
mov
cmc
jle
jmp
es
mov
jecxz
mov
stc
stos
add
imul
dec
lret
add
mov
mov
mov
insl
adc
cmpsl
cmp
pop
rorl
mov
loopne
lahf
xchg
pop
sub
sbb
sub
sub
add
mov
dec
lea
repnz
hlt
sbb
add
andb
loop
push
pop
ljmp
xchg
pop
mov
sbb
lods
cltd
sar
mov
push
jae
add
cmp
call
int3
adc
add
jbe
add
or
test
fdiv
adc
fnstsw
mov
mov
jge
adc
add
xor
jne
add
faddl
or
lret
jno
add
or
jl
mov
pusha
test
enter
cli
jne
xchg
ds
filds
push
add
jecxz
jno
add
lds
add
fisttps
add
mov
loope
je
ljmp
jge
pop
int3
test
push
stc
orl
pop
mov
dec
pop
mov
add
add
out
addr16
out
invd
cmp
lea
daa
pop
xorb
lcall
jae
push
dec
in
shrd
scas
mov
repnz
clc
inc
fcoml
jae
into
pop
add
inc
sub
jl
cmpb
add
jne
in
cli
movsl
in
aam
ret
daa
faddp
jns
add
sbb
mov
in
popf
mov
cmp
add
fdiv
and
divl
nop
sbb
xchg
addr16
or
fcoms
adc
xor
xchg
ret
sbb
rclb
negl
in
push
sbb
mov
insb
jecxz
pop
fwait
int
sub
sbb
and
fsts
mov
pop
addr16
jge
ficomps
or
pushf
nop
xchg
gs
cli
sub
sahf
add
mov
pop
sahf
lcall
lahf
sbb
popa
push
test
jnp
xor
scas
inc
add
mov
filds
lcall
dec
insl
or
in
cmp
jp
add
xchg
mov
out
lods
popa
fdivs
leave
add
jmp
pop
sub
push
pop
mov
add
add
mov
push
mov
aaa
add
dec
jecxz
add
es
xchg
xchg
enter
add
sub
sti
adc
out
fs
clc
lods
fiaddl
push
repnz
or
or
xchg
add
xchg
jmp
into
adc
pop
add
scas
mov
push
pop
pop
mov
or
sub
aam
cwtl
add
mov
xor
out
les
lcall
lds
xor
fnstsw
adc
jmp
sbb
imul
add
dec
adc
mov
std
inc
outsb
sbb
jge
insl
add
in
add
inc
scas
jb
daa
adc
or
cltd
push
sbb
xchg
dec
inc
imull
dec
add
pop
js
fistps
xlat
push
jnp
xor
enter
adc
adc
fiadds
rorl
cmc
add
xchg
jl
stos
arpl
jmp
adc
lds
ja
xchg
xor
dec
add
rorl
jnp
lahf
add
adc
out
dec
inc
mov
cmp
cltd
push
das
inc
cli
gs
lods
ret
push
out
jnp
xchg
add
je
adc
cwtl
iret
loop
ret
in
cwtl
jmp
test
mov
push
lds
cmp
mov
cmp
gs
fsubrp
icebp
rolb
add
push
fwait
std
add
lods
xchg
add
add
insb
sub
jmp
jb
pop
lcall
pop
inc
lea
push
nop
mov
add
or
flds
push
ss
in
xlat
ds
nop
repnz
adc
in
fmul
bound
mov
movsb
and
sub
pop
insl
insb
lea
inc
xor
jno
add
xchg
push
inc
xor
stos
cli
mov
inc
mov
imul
icebp
js
insb
mov
add
xor
sti
add
push
and
pop
add
pop
int
add
in
xor
pusha
pushf
push
ret
fimuls
stc
out
imulb
mov
pushf
mov
push
mov
mov
dec
cli
cmpsl
xchg
lahf
add
ljmp
popa
sub
mov
cld
add
sub
sbb
sbb
in
sarb
or
add
sbb
or
orl
mov
fmull
mov
add
call
fidivrs
ljmp
lret
cs
or
shrl
pop
call
pop
xchg
push
pop
inc
cmp
mov
adc
negl
mov
or
xchg
std
lock
out
add
ret
adcl
test
rolb
pop
add
add
or
jmp
cmp
adc
inc
dec
pusha
sub
add
popf
ss
int
xor
mov
outsb
add
mov
je
popa
add
dec
add
mov
xor
or
jne
mov
fcompl
push
and
outsl
inc
adc
test
adc
xchg
jge
jg
jl
rolb
mov
mov
or
stc
loopne
das
adc
cltd
pusha
dec
xor
push
faddl
ficompl
xchg
test
ljmp
mov
std
add
xchg
or
mov
scas
or
fs
xchg
add
adc
or
dec
mov
sub
push
sarb
add
jo,pt
mov
sbb
pop
jge
ss
jp
loop
jne
jge
dec
pop
stos
out
in
and
pushf
jb
mov
sub
enter
xchg
rorb
mov
scas
insl
sti
fimull
pop
addb
xor
mov
jg
pusha
sbb
addl
add
lods
jne
mov
cmp
add
adc
push
roll
clc
add
adc
les
fisttps
mov
inc
sbb
xor
add
sub
lds
js
int3
sbb
pop
mov
rcrl
mov
add
sub
add
mov
fsubrl
sbb
out
mov
add
fistpl
add
and
add
test
add
leave
inc
lock
jl
or
fwait
inc
call
xor
dec
mov
repz
sarb
inc
xor
pushf
adc
or
cmp
sbb
rolb
or
mov
pop
call
decl
jl
arpl
mov
test
ret
cmp
mov
iret
jmp
add
mov
xchg
add
jl
jmp
dec
mulb
add
outsb
push
jg
mov
fstps
mov
into
shll
test
dec
jp
das
push
outsb
or
sbb
xchg
adc
rolb
stos
jae
shll
push
add
enter
jmp
not
out
jae
add
lods
test
pushf
out
add
int3
lret
int
add
das
or
dec
lods
aad
and
fsts
or
lods
add
pop
xchg
bound
pusha
jo
pop
mov
sti
sbb
jne
and
adc
rorl
rolb
mov
jl
add
sub
in
das
insl
xor
mov
ss
push
xor
loop
add
out
add
test
sub
arpl
mov
jmp
mov
addr16
aad
sbbb
mov
addl
shlb
stc
sub
test
out
iret
sbb
add
in
or
inc
fs
je
test
xor
mov
bound
fildl
cltd
mov
dec
scas
xor
jge
xchg
loopne
loopne
inc
sub
sbbb
outsb
cmpsb
mov
into
xor
rsqrtps
add
and
aam
jmp
push
sbb
cwtl
push
sbb
lea
xor
sbbb
inc
inc
bound
cld
clc
outsb
add
xchg
dec
popa
sub
addb
xchg
loope
add
jmp
sti
movsb
sbb
cli
call
push
add
hlt
adc
jmp
jg
or
add
xchg
add
adc
lods
pop
in
xchg
stc
ja
call
jmp
push
xorl
mov
cmpsl
pop
popa
int3
xchg
out
add
jnp
inc
add
shrb
adc
add
mov
nop
sub
sub
add
sub
divl
add
gs
inc
mov
mov
nop
inc
daa
cli
rcrb
add
aad
dec
push
add
inc
inc
nop
je
add
frstor
push
pop
jne
add
inc
pop
xchg
cmc
xchg
add
or
jbe
pop
nop
adcb
xor
add
jg
sbb
sahf
jnp
pop
jp
in
add
call
loopne
sti
push
fwait
and
jg
mov
rorl
sbb
and
int3
sbb
cmc
out
inc
xor
je
cmp
gs
push
cld
shrl
and
addb
xor
cmp
push
cmp
mov
addb
enter
push
sub
adc
mov
ficompl
ret
xor
pop
pop
xorb
pop
add
ss
inc
add
cs
cmp
add
xchg
and
lods
adc
or
add
mov
jl
and
ficompl
ror
mov
xor
imul
fstpt
push
push
jne
xchg
adc
mov
sbb
scas
add
shlb
popa
sbb
test
cmp
lcall
into
pop
aas
movsb
sub
adc
fs
out
shll
cs
ret
jbe
lock
test
int3
aad
adc
or
mov
or
mov
sbb
add
xor
lods
and
add
dec
lret
add
add
test
loope
flds
insb
xchg
add
or
out
insl
mov
push
mov
js
add
sahf
add
jae
in
fcomi
or
cli
rclb
int3
xorl
cmp
or
adc
xchg
inc
nop
sub
add
insb
inc
cmpsl
aam
pop
push
mov
fmuls
sub
gs
shlb
pop
adcb
add
xchg
inc
cmp
pushl
sbb
in
push
sahf
sub
cld
pop
xchg
cwtl
out
or
insl
push
cltd
mov
cmpsb
int3
fisubl
in
cmp
push
mov
gs
call
sbb
jge
inc
add
sub
fsubrl
push
sub
jmp
movsl
aas
add
mov
adcl
data16
dec
cmp
cmp
jmp
pop
adcb
add
push
and
incl
jge
add
push
loopne,pn
xchg
js
add
dec
loopne
xchg
xchg
pop
mov
cmpsb
mov
jnp
and
sbb
leave
pop
idivl
test
shlb
and
dec
nop
add
in
push
xor
cmpsl
js
addb
and
pop
shl
addb
sbb
pop
cmpb
cli
stos
adcl
push
cwtl
shlb
rcrl
inc
jns
add
dec
and
in
pusha
fwait
jecxz
mov
clc
inc
cmp
ja
add
jge
loop
pop
stc
or
dec
sbb
push
icebp
mov
add
cwtl
lahf
mov
cmc
inc
lsl
xchg
shlb
jl
jge
jnp
push
dec
add
adc
test
js
mov
inc
pop
pop
and
xor
xorb
cwtl
ljmp
cmp
insl
sbb
mov
fs
lock
add
inc
mov
push
sub
icebp
pop
xor
popf
fdivrl
cmp
sbb
xor
jb
loopne
xor
jge
js
sub
add
dec
das
ljmp
sbb
loopne
xchg
add
movsb
scas
popf
add
add
mov
xchg
push
jb
and
or
lods
icebp
das
add
inc
les
add
push
xor
sbb
jns
jb
in
outsb
jl
pop
mov
adc
gs
sbbb
aas
or
or
and
jb
add
outsl
xchg
or
pop
and
aas
fdivs
sarl
lea
and
xchg
js
cmp
add
enter
xor
push
neg
sti
scas
xor
jb
roll
or
mov
cmp
int
fisttps
enter
outsb
add
and
and
add
pop
sahf
xor
shlb
ja
test
or
jle
nop
mov
dec
nop
add
and
xor
add
ror
sarl
cmp
pop
push
xchg
cmovbe
jp
inc
das
sarb
add
mov
adc
out
sbb
add
add
int3
popa
mov
inc
sbb
xor
jmp
pop
mov
or
in
add
push
jg
dec
addb
test
inc
adc
pop
or
add
ja
fimuls
mov
inc
fistps
in
adc
xor
and
or
add
pop
jle
push
add
or
push
and
imul
shll
jns
hlt
lret
inc
addl
add
cmpsl
ss
clc
sahf
cmp
or
addl
add
mov
cmp
nop
push
sbb
sub
out
pop
icebp
sub
push
inc
decl
mov
in
or
push
arpl
inc
jno
dec
mov
pop
pushl
jne
subl
test
or
in
inc
int3
mov
jb
pop
and
aaa
mov
fwait
aas
inc
cmp
push
mov
sbb
push
rorb
sbb
es
fwait
cmp
test
mov
sub
jae
mov
faddl
mov
or
push
mov
rolb
mov
insl
sbb
mov
cmp
fiaddl
sub
inc
push
xor
dec
xchg
leave
cmp
icebp
dec
mov
pop
push
add
pop
pop
pop
sbb
shrb
and
mov
push
sub
add
jecxz
incb
ljmp
ret
leave
pop
sub
xor
test
sub
inc
ja
jns
pop
lret
insb
rolb
inc
sarl
popa
or
xchg
test
sub
add
into
fldcw
out
mov
pop
test
mov
inc
int3
aas
cmpb
fwait
repz
push
addr16
clc
adc
sbbb
or
out
mov
add
mov
dec
xchg
in
mov
mov
in
ss
cwtl
dec
add
mov
dec
aam
add
jle
ds
mov
mov
add
jne
dec
sub
mov
ffree
mov
cli
nop
je
ret
and
data16
and
xor
aad
insb
mov
dec
cwtl
and
jmp
xchg
adc
jo
jmp
out
cmp
xor
test
mov
or
pop
in
xor
je
jnp
push
pusha
fsts
loopne
sbb
jno
std
nop
loop
inc
mov
fisttps
mov
push
push
push
iret
inc
mov
jne
xor
fistpl
inc
mov
adcl
cmpb
pusha
mov
leave
test
inc
and
cmp
or
aas
mov
jp
rorl
mov
clc
cmovb
inc
aam
sub
test
aad
jl
in
imul
sbb
jo
sbb
add
daa
hlt
shlb
dec
lcall
ss
pop
mov
sahf
sbb
add
adc
push
add
sub
cli
adc
frstor
mov
test
cmp
imul
push
je
inc
cmp
add
push
inc
add
nop
sub
or
pop
inc
xor
or
jge
fldenv
sub
scas
and
pop
addr16
es
repnz
jmp
or
mov
cltd
test
add
jp
xchg
sbb
mov
mov
pop
cmp
test
in
cmp
push
loop
mov
mov
or
mov
cli
push
shr
outsb
mov
push
sub
push
cwtl
add
pusha
repnz
movsb
or
mov
lret
test
js
inc
andb
lcall
test
fs
shll
add
cmp
cmp
lcall
xor
repnz
icebp
leave
call
mov
sbb
jle
mov
pop
or
fisttpll
or
and
or
cwtl
push
dec
mov
fwait
scas
sub
mov
xchg
pshufw
fisttpl
push
sbb
push
sub
xor
inc
jns
adc
pop
mov
aas
orl
cs
push
adc
push
inc
mov
and
mov
mov
jge
and
mov
mov
add
pop
mov
repz
dec
add
adc
rol
push
ret
and
loopne
jg
add
push
inc
imulb
mov
or
cmp
in
and
bound
pop
lret
dec
rcrl
mov
and
dec
and
fidivrl
fisttpll
jecxz
dec
mov
or
and
int3
ds
shrb
clc
js
cmp
lmsw
movsb
push
adc
int3
or
popf
fsubl
cmpsw
je
dec
push
pop
mov
rolb
movsb
lret
and
hlt
inc
inc
test
sbb
adc
add
inc
xor
cltd
sbb
add
shll
loopne
and
sbb
ja
jae
es
add
push
loopne
push
and
js
lahf
push
bound
mov
sbb
rcl
push
outsb
or
push
rcrb
mov
pop
loopne
mov
addb
out
adc
push
fildll
inc
or
leave
ja
sbb
mov
lea
push
mov
mov
push
insb
fidivrl
add
mov
rol
sub
addl
dec
push
sbbb
inc
cmp
cli
or
cmovne
loop
push
inc
nop
or
out
push
adcl
mov
stos
rorb
and
xchg
rolb
sahf
push
inc
cld
ret
inc
js
jmp
inc
mov
add
or
addb
or
inc
stos
adc
fs
loopne
jns
pop
popf
sub
gs
pop
das
mov
shrl
add
and
xchg
leave
fstpl
mov
arpl
push
dec
mov
sbb
cmp
inc
or
fcompl
dec
add
sbb
mov
hlt
add
in
xchg
cwtl
nop
xor
mov
inc
pop
inc
xchg
and
or
or
pop
pop
or
or
add
addr16
mulb
imul
push
and
mov
in
dec
add
mov
add
xchg
addr16
xchg
in
add
and
sub
or
jo
aas
fadds
xorb
mov
in
bound
jns
add
shlb
sti
mov
adc
mov
ds
pop
dec
ja
dec
add
pop
dec
dec
and
faddl
mov
xor
mov
xor
jns
add
sub
fcmovnb
xchg
aaa
in
hlt
pop
dec
outsl
or
imul
mov
fbstp
dec
push
push
aas
inc
lock
adc
cmp
fsub
cmp
pop
inc
adc
cmpsl
sub
cmp
dec
movsb
xchg
mov
mov
sbb
add
fwait
cwtl
iret
int3
add
cmp
push
mov
movsb
ret
mov
jle
repnz
dec
or
push
mov
repz
adc
cmp
mov
and
mov
mov
push
xchg
jo
arpl
add
adc
fistps
mov
jp
sub
inc
jnp
pop
fwait
xchg
call
arpl
cmp
shll
add
int3
std
xor
jne
jns
bound
xor
ja
mov
and
fcmovne
lret
or
mov
cmp
pushf
jmp
push
pusha
jg
xchg
test
lahf
cmp
cmpsb
in
sbb
cmc
add
leave
inc
adc
inc
sbb
std
jno
jno
sbb
add
cmp
cltd
fnstsw
mov
js
mov
inc
popf
nop
sahf
sub
dec
lahf
inc
fsubl
enter
dec
jmp
popa
adc
pusha
xor
cmp
sbb
cmp
ret
inc
dec
jg
ljmp
sar
sbb
ret
add
aam
icebp
jbe,pt
ja
add
rorl
mov
mov
ja
data16
jl
into
arpl
sbb
flds
sub
lods
xchg
leave
sbb
mov
fnstenv
add
xchg
mov
mov
je
push
jle
xchg
out
ljmp
pop
adc
test
pusha
pop
pop
pop
or
popf
pop
mov
je
add
arpl
add
xlat
ljmp
shlb
loope
fsubs
test
add
xchg
mov
xchg
or
loope
push
cmp
xcrypt-ctr
cmpsl
push
dec
ja
pop
mov
insb
pop
pop
dec
cltd
inc
dec
jp
xorb
test
fcompl
imul
cmpsb
xchg
adc
add
sbb
inc
icebp
xor
lea
add
in
pop
cmpsl
in
fldlg2
mov
and
inc
mov
icebp
cmp
push
mov
xchg
scas
cmpsl
xorb
cwtl
mov
xchg
add
fs
add
xchg
std
test
mov
js
jp
add
shrl
add
jmp
push
popa
nop
pop
testl
mov
or
mov
sub
push
ret
clc
fld
fdivr
sub
add
mov
cmp
dec
stc
sub
enter
inc
hlt
xchg
xchg
roll
or
cmpsl
xchg
push
adc
mov
pop
adc
cmp
add
cmp
aad
xchg
les
push
pop
lret
enter
jo
xchg
mov
js
push
jmp
push
mov
or
add
frstor
adc
or
xor
insl
mov
mov
pop
inc
test
lds
rol
repz
sbb
dec
out
add
xchg
and
in
cmpxchg
xor
cmc
mov
and
sbb
cmpsl
mov
out
ljmp
or
cltd
jo
xchg
mov
int
fimull
ja
add
lahf
cltd
add
mov
popa
add
add
mov
pop
sbb
ret
fstpt
push
aaa
mov
outsl
add
mov
push
ds
xorb
and
pop
jl
lods
xchg
push
mov
ret
sbb
fmull
cwtl
inc
sbb
xchg
add
mov
jecxz
sahf
icebp
add
movsb
clc
in
inc
xchg
or
pop
fnstcw
add
fucomp
jo
lea
dec
repnz
in
aaa
or
mov
add
cmc
and
testl
push
sub
jg
in
movl
subb
cmp
call
adcb
push
shlb
lret
jno
cmp
jge
sbb
add
cmpsl
mov
imul
pop
dec
in
jae
dec
xchg
aad
mov
pop
sar
xchg
leave
movsb
jo
les
aas
inc
and
loopne
aad
int3
jae
packuswb
cmc
pusha
repnz
and
xchg
xor
inc
out
lret
inc
inc
lea
sbb
fbstp
hlt
mov
adc
sub
cld
fbld
inc
add
cmc
mov
add
idivb
push
add
imul
gs
adc
add
dec
adc
mov
mov
jae
add
inc
jle
xlat
hlt
sbbb
or
call
test
fxch
sub
and
fbstp
add
cld
mov
cmp
scas
push
mov
movl
out
mov
mov
js
stos
mov
add
fs
lea
clc
lcall
cli
xor
cltd
add
inc
pcmpgtw
mov
loopne
xlat
mov
add
xchg
inc
cmp
pusha
jg
mov
sub
repnz
lahf
adc
sarb
stos
jne
or
dec
testb
pop
or
dec
mov
pop
call
push
movsb
inc
popa
shr
add
in
jle
sbbb
add
ret
lret
and
call
scas
std
lahf
sbb
pop
push
cltd
das
sub
mov
mov
mov
or
loop
into
add
lret
out
add
pop
cmp
sbb
xchg
incb
or
call
imul
push
add
dec
outsb
push
jp
mov
cli
adc
xlat
or
rcr
xchg
add
les
loop
push
cmp
sar
icebp
jecxz
mov
and
test
es
dec
adc
push
ret
mov
add
pop
push
add
test
xchg
lods
push
push
divl
dec
iret
lds
inc
fistl
add
rorl
dec
pop
dec
ljmp
fs
repnz
call
inc
addr16
out
lea
xchg
stos
aam
add
mov
jp
add
inc
shr
push
and
ret
or
pop
xor
stos
or
in
pop
pop
sub
add
adc
cli
pop
std
rcll
and
imul
lahf
pop
js
mov
add
out
mov
mov
and
cmpb
adc
clc
repz
jecxz
inc
popa
sbb
sub
jl
dec
inc
mov
pop
xchg
jecxz
fdivr
jne
pop
movsl
daa
andnps
xchg
popl
and
pop
adc
inc
test
sbb
cli
es
out
dec
add
stc
stos
cmp
pop
mov
xor
cmpsb
pop
add
imul
mov
pop
pusha
sub
pop
in
stos
mov
xchg
cs
gs
adcl
mov
mov
ja
add
mov
adc
fadds
jbe
loop
push
adc
mov
std
out
popa
jnp
rolb
inc
xchg
adc
push
push
jne
test
mov
jmp
and
or
cmpsb
xchg
add
sub
pop
fmuls
jns
adc
inc
jns
add
rcll
call
lods
mov
mov
jecxz
lret
push
and
add
or
sub
cmpsb
adc
shrb
sbb
add
fsubs
mov
push
add
imul
in
push
loope
mov
repnz
jge
add
cmpsl
lahf
sbb
fildll
or
push
imul
scas
daa
xchg
fcmovnbe
rol
xchg
add
cld
adc
fisubl
jns
ljmp
jp
pop
sbb
dec
xor
push
cmp
push
push
mov
mov
cli
xchg
inc
add
adc
xor
test
mov
sub
jno
xchg
inc
pop
in
add
sbb
out
mov
xor
or
fiaddl
xchg
sbb
mov
add
lods
test
add
xchg
adc
out
les
sbb
ljmp
icebp
adc
pop
pop
mov
ss
sbb
aad
push
pop
dec
push
push
push
or
dec
add
ret
pop
fs
in
mov
ficompl
cmp
add
lds
mov
add
cs
add
int
insb
mov
int
cmpsl
push
sbb
add
push
jge
push
icebp
push
loop
jns
lods
jp
cmp
int3
shll
or
jg
add
call
cld
add
shl
jbe
adc
fninit
add
lret
test
pusha
cltd
push
aaa
test
adc
pop
jmp
push
cmp
insb
pop
sub
in
mov
xchg
ljmp
lcall
and
sbb
pop
dec
gs
cmpsl
cmp
xor
sbb
push
jae
sahf
sub
pop
sub
xchg
mov
mov
aaa
add
mov
jg
dec
in
add
shrb
out
notl
mov
fdivr
lret
rcrb
xchg
xor
add
mov
loopne
out
inc
push
fistpll
or
cmp
add
test
and
sarb
jg
movsb
imul
and
fsubrl
in
sbb
repnz
jnp
lea
sarb
inc
add
ret
cmp
pushf
add
fincstp
repz
loop
movd
pop
push
shl
scas
dec
mov
popf
fwait
jmp
push
hlt
xchg
arpl
sub
repz
das
xlat
sbb
cmp
and
sbb
les
cmp
movsb
frstor
adc
sub
fs
lods
out
add
jge
es
xor
push
icebp
stos
aas
loopne
sub
repz
pop
jle
add
stos
adc
lds
mov
cmp
push
add
dec
sub
lret
push
push
out
push
add
and
testl
sub
push
neg
cmpsl
out
sbb
inc
pop
fbstp
std
data16
add
out
push
jmp
push
mov
push
lock
add
or
xor
add
add
jle
jl
xchg
jp
loop,pn
jns
sub
lock
push
and
mov
mov
rcll
add
sub
outsb
sub
add
adc
jbe
xor
call
inc
and
fstpl
cmpsl
dec
pop
add
cli
repz
cld
xor
push
add
inc
mov
out
add
rorb
sub
cmc
pusha
xchg
call
add
xor
cmp
mov
cmp
push
inc
add
inc
dec
sti
jb
sbb
outsl
mov
adc
add
push
cmp
stos
jmp
jns
add
andl
cli
jl
repz
test
insl
outsl
cwtl
inc
inc
cmp
fwait
jl
adc
hlt
int
adc
nop
xchg
loopne
test
mov
jne
add
mov
jno
rcll
pop
jmp
jbe
or
and
sbb
xchg
fs
scas
push
mov
dec
mov
outsb
cmp
ret
and
jmp
das
add
fdivrl
add
and
aad
or
cmp
add
popa
in
sub
roll
add
jg
fwait
dec
pop
xor
xchg
pop
xor
cmpsb
icebp
cs
adc
pop
pusha
test
pop
shrl
je
xor
daa
sub
add
xchg
add
fsubl
push
add
fs
les
add
xor
icebp
push
call
repnz
xchg
das
nop
mov
and
push
sub
in
mov
and
xlat
mov
mov
out
mov
add
cltd
mov
xchg
inc
ja
xchg
pop
pop
mov
nop
jae
pop
mov
mov
cmp
fimull
add
shrl
hlt
push
movsb
dec
bound
or
xchg
or
and
cmp
lods
rcr
and
jl
pop
and
jle
pop
push
xsha1
cmpsb
mov
icebp
mov
xor
nop
and
or
adc
add
adc
stos
or
inc
xchg
jo
sbbb
cmpsb
popa
mov
add
push
and
push
mov
pusha
and
add
lods
ds
mov
cmp
hlt
sete
add
xor
add
mov
dec
jge
xchg
or
inc
adc
fidivl
mov
out
add
push
or
xchg
test
dec
and
jl
cwtl
xor
or
sub
add
daa
add
pop
rorb
mov
je
into
add
ret
cmp
sub
cmc
or
out
or
in
pop
fistpl
push
int3
cmpsl
jns
mov
and
pop
xor
adc
sub
sub
in
jbe
xchg
cmp
imul
jns
sbb
int
in
rcrl
shll
pop
mov
mov
sbb
dec
and
jge
and
test
add
push
cs
jbe
imul
add
js
rcll
loopne
test
mov
sbb
jb
push
sub
dec
pusha
xchg
js
sub
lea
adc
mov
scas
jns
cmc
jo
js
adcb
into
fmull
xchg
dec
or
jge
fiadds
mov
push
push
insl
mov
and
les
mov
scas
add
cmpsb
push
sub
test
jb
out
pushf
fldl
push
push
fadd
sti
lret
loopne
sbbl
lods
dec
xchg
adc
aas
jl
rclb
setle
add
mov
insl
hlt
arpl
push
rorb
js
cmpb
pop
outsb
aas
add
stos
lods
sbb
xchg
add
and
add
xlat
stc
in
das
loop
and
out
rclb
nop
xorb
ja
add
ss
leave
add
xchg
inc
sbb
sbb
das
xlat
push
sbb
int3
sub
sahf
add
icebp
lret
jne
pusha
push
rolb
inc
je
inc
inc
lods
popf
push
jp
ljmp
movaps
xor
inc
pop
lret
idiv
add
dec
inc
adc
mov
shrb
test
add
fdivl
or
xor
and
nop
cmp
addr16
lock
shrb
das
and
xorb
jecxz
mov
jo
pop
mov
jns
ljmp
data16
stos
in
mov
sahf
scas
push
clc
mov
jne
pushf
and
test
add
fwait
sub
enter
add
inc
mov
iret
inc
insl
add
fadd
out
push
and
movsl
loop
inc
fistpll
les
push
adc
cmp
adc
and
in
lods
xor
nop
jle
les
add
jb
push
loopne
dec
movb
cmp
gs
pop
add
jp
mov
and
dec
psllq
cmp
add
daa
iret
repnz
addl
test
test
aas
mov
pop
and
push
sub
sbb
xchg
jb
fsub
xor
add
ljmp
mov
push
sub
lret
nop
mov
ret
movb
lcall
insb
jne
push
cs
shl
mov
dec
pop
add
pushf
loope
fwait
add
repnz
movsb
gs
rcr
sahf
adc
jns
sbbb
inc
movsb
pop
mov
add
aad
repnz
pushf
mov
pop
jle
cs
add
push
mov
loope
inc
push
enter
dec
js
sub
cmp
mov
xchg
out
shlb
mov
adcb
sbb
test
and
std
jmp
test
adc
clc
push
mov
notb
pop
adc
ret
mov
std
xchg
dec
les
pop
add
pop
cmpsl
enter
sub
inc
ss
xor
jge
add
push
xchg
xchg
test
pop
pop
cmp
test
pop
dec
push
add
pop
jmp
xorl
mov
lret
stos
in
aam
pop
sub
mov
aad
inc
and
sub
sbb
jl
xlat
insl
fdivrs
mov
sub
pop
or
imul
filds
xor
pop
pop
sbb
push
subb
or
mov
scas
cld
push
add
aam
jbe
mov
mov
mov
loope
mov
add
repz
mov
pop
out
cs
push
nop
mov
lods
ret
inc
mov
push
andl
inc
pop
sbb
mov
adc
jmp
xchg
lods
xor
cmc
xchg
pop
mov
out
xor
std
aas
mov
cld
sbb
dec
add
rolb
add
in
je
cltd
xchg
gs
dec
hlt
movsl
adc
loopne
and
add
adcl
xor
xor
clc
add
xor
add
jge
cmp
sub
jo
or
push
subb
cmc
clc
or
fwait
mov
popa
add
mov
cmpb
mov
cmp
add
enter
mov
jmp
adc
add
ja
add
push
lea
xor
int
xchg
xor
and
add
das
fldcw
mov
inc
mov
js
add
add
jb
or
mov
es
sahf
push
test
cmp
xchg
out
loopne
pop
sbb
out
jns
pop
aas
mov
or
lods
lods
daa
adc
fiadds
jo
leave
dec
pop
mov
and
test
xor
push
ret
add
jle
jb
or
cmovl
ret
xchg
jl
add
enter
jae
jge
pminsw
xor
mov
mov
mov
ja
in
hlt
fadds
mov
pop
inc
fcoml
add
cmpb
fisttps
inc
push
xchg
or
lods
imul
ss
mov
dec
lret
xor
inc
add
fiaddl
pop
sub
and
jge
shrb
mov
hlt
adc
sbb
imul
cli
lcall
loopne
mov
movl
test
push
call
xlat
aaa
sub
adcl
sub
add
into
scas
filds
out
dec
mov
lret
sbb
cs
lock
push
test
shrb
and
cmp
in
lcall
or
or
push
pop
add
jae
shrb
add
mov
add
mov
add
imul
fbld
arpl
stos
xchg
test
xor
fisubs
fadds
imul
jae
add
in
xor
mov
sub
mov
inc
xchg
add
imul
add
test
or
arpl
lret
sub
add
int3
enter
xchg
inc
cmp
mov
fnstsw
cli
mov
lock
add
and
sub
mov
inc
mov
subl
push
imul
out
mov
lcall
lret
insb
testb
adc
add
aad
addr16
negb
aam
scas
pop
lret
jecxz
in
shlb
mov
dec
xlat
mov
xlat
add
xchg
jle
add
ror
lfs
ds
jne
pop
lret
mov
adc
loopne
clc
repnz
negb
jg
lods
pop
sbb
stc
loop
pop
out
addb
jo
repnz
fiaddl
and
clc
gs
cmp
add
or
dec
cmpsb
loopne
int
add
and
sub
jbe
jp
or
or
add
mov
xor
cmp
jne
nop
inc
or
sbb
bnd
cmp
std
vmread
jecxz
ret
lret
cmp
cmp
aam
repz
nop
xor
inc
jne
sub
cwtl
add
mov
mov
fistl
add
lods
xchg
sti
xchg
cmp
gs
aam
fsubl
xchg
cmp
xor
fnsave
inc
adc
xor
push
xor
add
rcrb
popf
loop
mul
dec
out
lcall
into
das
mov
data16
cmp
stc
mov
scas
push
add
and
mov
cltd
popa
pop
lock
xor
into
shrd
repnz
and
lahf
in
popa
dec
pop
pushf
and
aaa
iret
add
and
mov
jb
xlat
add
cli
shl
divb
cmc
cmpsb
ficoms
data16
and
add
pop
jle
xor
push
add
mov
jb
je
push
cwtl
shll
pop
gs
xchg
adc
mov
int
mov
cmp
iret
inc
sub
and
add
ljmp
mov
les
add
mov
in
xor
cmc
es
bound
mov
push
cmp
fdivl
mov
add
and
fadds
cmpsl
push
clc
add
adc
or
mov
and
or
sbb
xlat
jo
out
or
adc
stc
xchg
push
js
xor
cmp
rolb
lahf
jns
popf
jle
or
out
mov
ss
dec
xor
ljmp
mov
cmp
enter
test
add
out
hlt
gs
sbb
mov
fwait
movsb
pusha
xchg
je
fimull
push
cltd
pop
cmpsl
pushf
aam
mov
ret
add
je
out
dec
add
jp
and
insl
push
cmp
xor
and
add
add
cltd
pop
enter
test
jno
jnp
and
arpl
testl
fildl
movsb
add
xchg
inc
sub
pop
add
fnstenv
push
sahf
or
sub
fmuls
or
or
jo
leave
test
enter
mov
popf
xchg
adc
stc
lods
add
cmp
cltd
mov
std
xchg
cmp
fwait
add
and
pop
popf
cwtl
inc
enter
imul
int3
sbb
ja
xor
pop
out
out
xchg
add
lods
sbb
leave
inc
cmp
or
lea
cld
sbb
es
and
movsl
roll
pushf
enter
inc
mov
out
mov
jge
add
pop
loop,pt
or
or
mov
dec
popa
add
fsubrs
jo
clc
jecxz
adc
sbb
pusha
xor
cmpsb
add
rclb
popa
cld
lahf
jns
add
fs
in
add
push
sub
clc
pand
cmp
in
mov
andl
outsb
xor
movl
add
movb
mov
shl
call
sbb
stc
pop
pmulhuw
xlat
and
and
lahf
mov
outsl
idivl
dec
lds
push
add
or
add
sub
pop
mov
adc
mov
xchg
add
push
add
jno
aam
ret
cmp
fisttpll
pop
out
into
leave
shl
push
mov
inc
das
add
gs
add
jmp
stos
xor
sub
mov
or
inc
xchg
cmp
sbb
dec
ret
aad
dec
jmp
jge
mov
in
xchg
dec
adc
cld
aam
cmp
outsl
call
sbb
in
xchg
mov
pop
fdivrl
shrb
lods
push
lcall
mov
pop
cmp
nop
pop
inc
push
bnd
jl
and
inc
or
movsb
and
dec
pusha
fwait
cmp
sbb
push
dec
add
xchg
xchg
arpl
addr16
in
mov
aaa
inc
dec
jno
add
jge
ja
xchg
push
js
add
push
xor
add
dec
sub
mov
mov
jmp
jecxz
in
test
test
xchg
cmp
xor
xlat
lret
jbe
cs
jno
andb
stos
xchg
out
int
add
xchg
xorb
stos
pop
out
and
hlt
xchg
jl
das
and
cs
dec
loopne
lods
or
in
or
and
add
gs
movsl
jnp
decl
nop
pop
xor
ja
adc
add
xor
movsl
add
pop
xor
dec
loop
inc
jo
xor
addr16
adc
mov
in
push
rcl
pusha
ja
xor
shl
add
and
mov
cmp
push
movsb
js
lea
loop
pop
mov
test
lea
jg
popf
shlb
data16
fbld
test
lret
shlb
pushl
je
jg
xor
jge
jb
cwtl
push
push
adc
sub
add
lock
fwait
cs
insb
add
mov
add
cltd
inc
jns
cmpsb
add
jecxz
push
inc
arpl
das
jg
jae
adc
add
call
fwait
add
icebp
push
inc
adc
jno
add
add
push
mov
cmpsl
addl
add
pop
in
cs
je
int3
cmp
pop
les
test
inc
push
sub
aad
andl
jl
in
mov
fistl
sub
rclb
dec
ret
loopne
sti
mov
inc
out
popa
push
xor
or
aas
push
jo
es
mov
xorl
inc
mov
push
mov
xlat
aad
fidivs
fs
mov
sub
jle
xor
add
loope
ficoms
pusha
xchg
mov
daa
jnp
xor
jmp
int
lea
jns
sub
xor
and
popf
lea
in
xor
shlb
xorb
repnz
and
mov
jle
add
das
fdivs
test
dec
jae
xlat
mov
mov
cmp
in
mov
out
add
cmp
cmpsb
push
jne
int
mov
cmp
add
popl
pop
add
inc
inc
push
or
popa
jecxz
stos
lds
jl
lock
dec
sub
and
push
rcll
lock
inc
sbb
add
sub
sub
add
dec
repnz
or
sbb
pop
add
call
jb
jmp
and
sbb
cwtl
cmp
cmpsb
add
jl
jbe
mov
cmp
bound
rclb
pop
jmp
adc
xchg
pushf
or
xchg
xor
mov
mov
ret
sbb
bound
add
popf
and
push
mov
inc
repnz
clc
adc
add
sti
mov
jp
xchg
pusha
xchg
repnz
lahf
add
mov
in
adc
add
sub
insb
cmpsl
sbb
dec
movsl
mov
lahf
cmp
add
clc
cli
pop
ja
xchg
out
cmp
sub
jbe
ss
push
loop
aas
sti
movl
add
xor
lock
mov
jae
add
or
push
xor
call
roll
or
mov
nopl
xlat
rcrb
sbb
adc
test
rcl
jb
test
or
add
jne
add
xor
arpl
mov
xchg
cmc
aaa
add
arpl
cmpsb
push
sub
push
jecxz
mov
fcomp
jg
jmp
xchg
js
or
push
cmc
scas
xor
subb
ret
pushf
add
mov
or
je
mov
push
adc
xor
cmpsb
sub
out
test
idivl
call
add
fdivrs
xorl
sbb
rorb
push
sbb
jl
dec
mov
xlat
mov
ror
jmp
in
adcb
pop
add
adc
push
xor
inc
add
xchg
sub
pop
shlb
mov
cmp
or
test
sbb
xor
lods
cmp
and
jbe
mov
sbb
cmp
or
push
in
inc
or
add
adc
mov
jbe
out
jp
rcrb
lds
xchg
adc
push
push
rorb
jge
sub
int3
inc
push
es
test
je
stos
sbb
push
push
jae
dec
gs
and
add
nop
mov
add
in
jl
and
cltd
enter
cmpsl
xor
and
adc
and
add
and
into
add
add
stos
pop
pop
neg
add
pusha
inc
callw
sarb
add
jp
sbb
push
dec
lahf
repnz
or
neg
xchg
adcl
add
lods
loop
sub
pop
add
push
mov
jecxz
inc
imul
pop
jl
xchg
dec
mov
test
std
fs
inc
add
cmp
lock
scas
loope
push
sbb
jno
bound
sbb
xor
adc
or
icebp
pop
sbb
mov
bt
adc
sti
loop
add
cmp
mov
and
pop
xchg
add
cmp
scas
incl
jge
cld
test
mov
lods
std
shll
das
push
add
rclb
sub
and
or
mov
cmp
imul
fsts
adc
ja
push
jle
jge
out
arpl
xor
addb
cmpl
ljmp
inc
xchg
lods
sbb
movsl
xchg
enter
add
push
roll
lea
inc
divl
add
enter
xor
push
mov
push
in
mov
xchg
sbb
add
or
int
cmp
je
cmpsb
pop
inc
rcrb
push
pusha
mov
roll
cmp
mov
out
andb
lret
lea
fwait
sub
mov
adc
sub
cld
sub
bnd
add
pushf
dec
insb
or
jle
add
cmp
xchg
sbb
mov
cmc
cmp
or
les
addl
ret
lock
das
or
add
pop
stos
add
lcall
add
shlb
pop
inc
cld
rorb
out
add
mov
cmpsb
je
adcb
add
lock
adc
xchg
push
cmp
pop
in
add
call
dec
sbb
cmp
ljmp
mov
pop
add
xchg
add
andl
jle
outsl
les
ret
test
in
adc
ss
sbb
lds
sbb
inc
or
add
test
mov
ds
inc
imul
dec
ret
sbb
inc
mov
test
call
pop
add
aaa
ja
shrb
aas
jg
unpcklps
xchg
push
dec
push
sbb
xchg
sub
jno
add
push
pop
inc
mov
jo
add
or
cmpl
xchg
push
std
lods
cmp
sarl
ret
pop
add
inc
pusha
adc
and
test
sub
and
movsb
ja
lret
mov
push
jl
mov
ficoms
sbb
popf
and
push
fucomi
out
add
pop
aad
xor
push
loope
faddp
outsb
pusha
scas
movsb
and
clc
fistpll
xor
jns
pop
mov
loopne
jae
push
lock
rdpmc
lds
dec
add
mov
jmp
ret
bound
xchg
nop
xchg
and
std
imul
aaa
rolb
and
and
xchg
fimull
int3
add
pop
mov
inc
shr
andl
inc
sub
dec
cmp
das
sar
xchg
add
ja
sub
or
push
lods
jl
add
xor
loopne
add
stos
shl
js
sub
sub
popa
jecxz
loope
aam
es
out
aas
or
hlt
jmp
add
dec
js
cmp
add
or
fadds
inc
mov
sti
add
test
xor
adc
xchg
and
in
xor
pop
add
out
push
or
in
jmp
clc
and
lret
fistpll
jecxz
xor
pusha
mov
ret
sub
hlt
cwtl
jge
cltd
pop
sub
xchg
push
mov
or
sub
jge
insb
push
mov
lret
aaa
adcb
add
pop
cmc
outsl
xchg
lret
adc
popa
repz
frstor
shl
sub
push
rclb
cmp
lret
add
outsl
je
sbb
pop
addb
mov
pop
dec
and
lock
andb
lea
xor
cltd
gs
xchg
popf
or
pop
jge
arpl
jbe
sub
stos
mov
mov
and
push
push
js
push
push
sub
jecxz
add
mov
fcomps
imul
mov
sub
xor
divb
cmp
jp
mov
push
jl
dec
add
shll
jae
add
xchg
mov
xor
js
push
aam
dec
xor
mov
add
adc
lock
add
inc
jo
cs
rolb
add
jnp
js
pop
cmpsl
das
outsb
dec
adc
dec
pop
push
inc
aam
push
popf
add
scas
movsl
movmskps
add
in
mov
addl
pop
sbbb
add
xlat
mov
in
call
ror
and
je
xchg
add
ljmp
mov
jg
add
mov
or
xorb
push
add
divb
lea
mov
loopne
stc
loope
inc
xor
out
sub
jbe
hlt
xor
jmp
clc
popf
lods
stc
pop
loopne
sub
les
out
jge
sub
ja
add
cmp
scas
lods
push
jg
into
cwtl
mov
jnp
cwtl
test
adc
push
int3
fdivrl
enter
loopne
ss
jnp
pop
mov
mov
or
loopne
fildl
addr16
add
mov
xchg
jb
inc
add
ljmp
add
aas
scas
test
fldcw
push
sbb
in
jge
jne
test
add
inc
jo
add
adc
and
or
sti
push
mov
mov
ds
sub
jb
add
js
leave
rolb
sti
lock
xchg
sbb
mov
sbb
xor
add
sahf
adc
rolb
jmp
sbb
rolb
add
push
es
fldt
cmp
loopne
push
sub
or
dec
xchg
and
mov
insl
mov
hlt
lods
out
das
mov
dec
loopne
add
fsubs
or
sti
outsl
mov
or
mov
mov
dec
or
sbb
pop
xchg
clc
add
dec
add
or
or
add
leave
jmp
cmpsb
add
shrl
add
icebp
lock
push
mov
pop
addl
lock
test
outsb
enter
ficompl
pop
cmp
test
adc
es
sub
and
add
dec
xlat
jmp
pusha
or
orb
adc
cmp
xor
dec
add
ret
insb
xor
sbb
jecxz
push
loop
sbb
movsb
aam
dec
pusha
adc
shrb
outsl
in
pop
or
fdivrl
aaa
ret
add
lods
pop
sbb
adc
dec
add
adc
adc
xchg
xchg
add
cld
hlt
pop
inc
inc
je
add
pop
stos
scas
mov
dec
add
add
mov
jmp
push
xchg
mov
sbb
shll
xchg
add
jns
leave
lods
sbb
mov
jle
xor
push
xor
call
mov
add
cmp
loop
sbb
add
lret
jle
add
fidivrs
in
or
jp
xchg
push
add
rolb
xor
xor
and
mov
lods
add
cmpsl
sub
inc
xchg
mov
and
jmp
lds
aam
rolb
fucomip
add
inc
pop
cltd
pop
add
lahf
popf
add
or
push
sahf
add
dec
pop
mov
mov
imul
scas
int
add
pushw
add
fidivrl
add
mov
cwtl
xor
dec
rorl
pop
mov
push
fnstsw
add
jg
mov
add
or
cs
mov
hlt
loop
add
in
mov
ljmp
and
dec
addl
add
jecxz
cmp
dec
pop
arpl
dec
int
shrb
sbb
pop
mov
sub
inc
xor
popa
xor
movsb
cltd
cmp
add
pop
dec
clc
ljmp
push
dec
or
jge
push
in
mov
sarb
pop
pop
sub
push
sbb
sbb
or
mov
addl
cmp
fwait
add
je
pop
fisubs
mov
out
xlat
cmp
inc
mov
or
fsub
jb
xor
add
adc
xor
and
add
add
mov
out
in
inc
push
cmc
mov
jo
push
jmp
adc
add
cli
ret
pmaxub
test
in
xchg
sbb
pusha
cmp
or
pushf
mov
sbb
jmp
add
fldlg2
xchg
scas
xor
aas
sub
mov
fmuls
mov
push
adc
pop
add
dec
dec
inc
push
push
mov
and
sbb
add
or
repnz
add
mov
out
xchg
sub
add
xchg
fs
lds
push
popa
mov
cmp
jb
jp
mov
push
out
inc
test
xor
in
out
sbb
add
pop
jnp
pushf
sbb
and
add
inc
mov
jns
mov
cwtl
xchg
pusha
push
popa
or
sub
jno
push
and
sbb
lea
jb
scas
packssdw
lret
cmp
cmp
neg
cmpsb
ret
int3
add
inc
out
lods
test
fdivs
dec
nop
decb
xor
mov
dec
addr16
dec
fsubl
inc
aad
pop
repz
das
add
dec
in
mov
popa
add
and
pop
stos
scas
or
sbb
ljmp
add
push
jo
call
add
maskmovq
jp
fildll
aad
subb
test
mov
jl
aad
jmp
add
push
roll
jbe
xchg
jle
push
imul
adc
fdivs
insb
mov
and
add
sub
push
or
jmp
inc
adc
sub
insl
jb
shlb
add
popf
cmpsl
pushf
adc
and
cmp
int3
scas
inc
add
incb
sbb
test
shlb
add
jle
outsl
or
sbb
lods
rcrl
psubq
dec
push
repnz
stos
sub
add
stos
push
fwait
push
mov
inc
mov
sbb
dec
sub
rcll
sahf
mov
mov
mov
mov
les
fdivs
pop
scas
pop
add
dec
mov
dec
and
adc
add
and
adc
mov
fsubl
loop
xchg
and
jmp
or
shlb
in
cs
insl
imul
and
mov
loop
or
and
idivb
and
xchg
pop
mov
push
or
nop
push
cmp
fistl
aam
and
std
das
ret
dec
mov
adc
outsl
cmp
push
add
out
add
popl
lock
xchg
ror
sbb
add
mov
mov
jo
lods
jo
inc
ret
xchg
mov
cmp
out
mov
inc
cmp
in
push
pop
aad
push
idivb
and
or
or
repz
out
iret
repnz
push
loope
nop
cmpsb
lock
out
add
sub
sub
sbb
jae
add
add
xor
gs
mov
in
cld
add
cmp
and
fdivrs
pusha
subl
add
pop
and
sbb
or
adc
add
nop
jp
fldt
cltd
sbb
sub
scas
pusha
fdivs
cmp
push
add
jb
rol
imul
xchg
mov
push
fistpl
and
es
sbb
loop,pn
add
shl
orl
jecxz
mov
testl
ret
popa
jp
add
fsubrs
xor
aaa
rclb
mov
popa
or
add
sbb
add
aad
mov
and
jo
xchg
call
out
cmp
push
sub
push
sub
sbb
xor
xchg
jae
sub
aad
dec
aad
mov
nop
adc
add
add
pushf
sub
test
adc
add
fimuls
mov
adc
pop
insl
xor
pop
mov
out
lea
iret
add
add
mov
xchg
out
into
or
lcall
jge
popa
adc
dec
xlat
or
pop
in
fsub
jecxz
fldcw
cs
into
xor
dec
push
and
push
xlat
loopne
fcoml
add
out
jo
adc
xor
lret
pushf
sti
std
add
jb
aam
hlt
imul
test
test
mov
sti
pop
daa
stos
imulb
sub
push
cld
pop
ds
cmp
xor
testb
hlt
and
add
in
xor
out
dec
dec
mov
add
stos
js
push
or
cmp
aam
fiadds
pushf
call
jno
fwait
xchg
aas
push
clc
push
dec
mov
aam
and
imul
dec
sub
sarb
xchg
nop
lahf
jno
insl
fisubs
imul
cmp
cmp
scas
scas
jl
orl
pop
inc
shlb
adc
dec
test
fs
aam
lcall
sub
inc
xorl
imul
xlat
push
lock
in
xchg
andb
jl
fisubrl
cmc
push
out
fsub
or
out
je
jp
xchg
dec
xor
add
xchg
nop
jne
or
js
add
aad
mov
pop
xchg
test
in
aam
pop
ficompl
jle
sub
add
fmull
ljmp
mov
mov
mov
outsb
cmp
add
inc
pushf
ljmp
mov
ss
pop
loop
or
test
daa
push
faddl
in
add
pushf
aas
mov
pop
jmp
int3
lock
cmp
out
add
cmc
and
add
aas
aad
add
push
pushf
scas
add
mov
and
loopne
je
push
xchg
cmc
lock
call
int3
out
or
xor
lahf
jmp
add
outsl
jb
or
dec
mov
inc
loop
jge
sub
add
sbb
test
cld
cmpsb
inc
cmp
lods
adc
xchg
jmp
push
mov
lcall
add
ficomps
xorl
shr
cmp
mov
mov
lock
adc
add
dec
and
imul
pop
insb
test
push
cmp
jno
adcb
xchg
xor
in
jnp
add
and
or
jnp
pop
and
jno
aam
hlt
mov
jge
out
out
add
xor
mov
add
lret
fs
add
lods
inc
pusha
test
mov
dec
mov
loop
jg
shr
jl
out
inc
out
popa
ss
add
jns
dec
stc
jae
push
lods
flds
jecxz
xlat
pop
cwtl
and
lahf
out
mov
test
lcall
cmp
iret
xor
mov
cmp
outsb
cmp
pop
add
push
adc
int3
xlat
xchg
add
out
mov
add
pop
rclb
nop
enter
sub
xor
cmp
loop
jecxz
inc
cli
mov
add
lea
mov
sub
add
fistpl
xor
xchg
lahf
and
fcomps
inc
popf
push
loopne
pop
add
scas
je
pop
xchg
rol
fimuls
aad
je
sub
popa
pop
cmp
push
in
rolb
sub
fwait
stos
stc
mov
or
cmp
lods
andl
mov
stc
xchg
rcrl
data16
hlt
and
mov
push
adc
xchg
je
lret
dec
loope
and
sbbl
lahf
and
or
add
test
aas
mov
mov
imul
pop
xchg
add
add
mov
and
adc
sbb
lods
xor
and
jne
or
xchg
add
leave
and
sahf
adc
fildl
pop
and
add
or
loop
adcb
adc
pusha
add
loope
adc
add
xchg
pop
rclb
sahf
nop
sahf
test
mov
pop
adc
es
test
in
push
xor
lea
clc
aas
mov
cmp
mov
adc
mov
mov
and
xchg
adc
pop
test
xchg
add
inc
fidivrs
add
and
cmp
clc
or
fisttps
test
test
push
inc
pop
fimuls
loopne
pop
adc
jae
jb
fadds
scas
xchg
cmc
adc
sub
in
aad
ds
and
xchg
std
mov
dec
adc
inc
pop
ret
push
js
mov
jb
clc
adc
push
sub
cmpb
inc
ret
gs
sbb
jns
test
rolb
les
ficoms
add
cmp
sbb
sar
in
fsub
add
mov
fisubrl
or
movsb
ljmp
divb
addb
sbb
jge
xlat
pop
mov
je
outsl
cltd
push
filds
xchg
cmpsl
jp
mov
sub
out
push
aad
and
push
hlt
push
rcrb
xlat
mov
aad
cltd
adc
or
int
data16
add
ljmp
out
loop
cmp
test
repz
shl
add
ja
test
add
xor
gs
push
outsb
inc
pop
jp
stc
add
fmuls
das
rcrb
pushf
cmpsb
mov
insl
pop
sub
rclb
adc
mov
fsts
and
sbb
push
and
push
lea
movsl
add
lods
stc
inc
xor
std
test
ljmp
nop
icebp
inc
adc
adcl
addb
cs
imul
pop
aad
andb
dec
adcb
fistpl
in
adc
xchg
ror
icebp
mov
aam
sub
dec
cs
dec
addr16
push
stos
pop
ret
in
sub
adc
xor
and
rolb
popa
cs
addl
mov
jae
or
cmpsb
mov
xor
cld
xchg
or
push
ret
out
pushf
add
push
xorb
jecxz
ret
pop
cmp
aam
xchg
add
orb
push
inc
sub
push
cltd
hlt
inc
xor
ja
out
and
or
stc
fs
xchg
add
xor
push
repz
enter
mov
divb
pop
pop
xor
jecxz
or
or
cwtl
sbb
push
faddl
notb
push
pop
scas
cmovne
dec
xchg
mov
cmp
mov
out
mov
push
fiadds
dec
sbb
stos
and
add
adc
clc
jl
jne
xor
jge
fisttps
into
dec
aas
sbb
fidivrl
sahf
add
mov
lahf
xchg
sub
adc
les
push
xor
mov
sub
mov
addr16
mov
pop
enter
sarb
dec
iret
hlt
test
push
jo
or
fidivrs
sbb
sti
xor
rcrl
popa
push
movsb
rolb
in
dec
xchg
stc
adc
push
clc
xchg
add
mov
xchg
dec
and
add
push
mov
cmp
add
pop
xchg
popl
test
dec
insb
cld
in
outsb
push
add
data16
add
cli
faddl
add
rclb
iret
xlat
icebp
jbe
add
stc
jmp
addr16
cmp
stc
dec
enter
loop
movsb
lret
mov
or
adc
mov
addb
dec
inc
jno
or
jns
lahf
add
mov
cmp
add
cmc
sbb
pusha
enter
lods
add
xchg
clc
rol
pop
fsubrs
orl
sbb
push
xor
adc
stos
or
pop
xor
jnp
inc
add
sbb
fildl
push
mov
test
dec
mov
shlb
xlat
out
insl
add
insb
lahf
xor
jp
adc
clc
imul
cld
sbb
push
pop
pop
or
int3
mov
sarb
enter
cwtl
ficoml
pop
leave
push
add
aaa
or
add
add
nop
sbb
sub
cmc
push
ret
xchg
ss
mov
adc
jp
mov
psubb
cmp
jno
aam
cmp
shlb
mov
shll
sub
test
xor
test
in
inc
add
out
std
aad
in
or
xor
sbb
leave
cmp
push
aaa
add
lcall
mov
cs
and
dec
pushf
inc
addr16
dec
mov
mov
fdivrs
stc
dec
inc
addb
xor
dec
in
loopne
js
push
mov
rcll
mov
add
xor
cld
iret
add
inc
nop
adc
in
adc
inc
insb
or
mov
sub
in
mov
stos
clc
leave
imul
stos
stc
dec
mov
xor
or
fisubrs
shlb
lret
pop
jmp
fsts
mov
push
sahf
mov
add
mov
into
dec
dec
dec
dec
mov
out
sbb
movsl
iret
adc
sbb
dec
push
popa
imul
xor
jo
push
cmp
icebp
bound
je
sbb
xor
cltd
and
or
outsl
inc
or
add
das
fwait
and
add
lcall
leave
jge
push
arpl
xchg
push
and
ja
sahf
imul
mov
mulb
push
aaa
fwait
lods
andl
insb
loope
inc
scas
sarb
movsl
sub
test
push
push
or
rcll
outsl
jns
xchg
jge
pop
lock
xor
fsubs
xchg
mov
pushf
dec
nop
cmp
dec
cmp
inc
sarb
push
push
lea
pop
mov
inc
xor
ljmp
xor
pusha
xchg
add
inc
sub
mov
adc
sbb
jnp
add
ds
cmc
xor
mov
test
cmc
add
out
pop
rcll
add
xlat
fstl
rolb
jge
lock
xchg
add
fisubs
insb
sbb
divb
sub
imul
mov
pop
aam
or
cmc
mov
and
cmpsb
lret
pushf
mov
xchg
xchg
mov
or
lret
lods
dec
dec
testb
in
clc
inc
ret
sub
add
rolb
pop
push
out
stc
xor
sbb
xchg
in
mov
icebp
xchg
pop
push
or
adc
in
rcrl
sbbb
add
fdivs
mov
mov
mull
sbb
xchg
pop
inc
lcall
jo
shlb
test
pop
jns
add
lahf
push
add
dec
mov
cmc
add
lret
out
xchg
pop
dec
shl
cltd
push
add
xor
add
leave
mov
push
push
push
pop
and
add
hlt
or
xor
bound
mov
dec
push
iret
stc
mov
ss
push
xor
cld
add
xor
fwait
imul
pushf
inc
mov
sbb
inc
fidivs
or
mov
add
mov
pop
add
stc
popf
mov
xchg
sbbb
das
not
mov
pop
mov
jnp
sbb
out
add
inc
roll
outsl
dec
sbb
insb
add
xchg
inc
push
xchg
imul
dec
pusha
loopne
jns
je
in
and
adc
pop
adc
and
push
push
sub
in
or
push
and
pop
stc
mov
ret
sbb
loopne
les
mov
mov
roll
xlat
push
lcall
mov
cmpsb
jl
rorb
lahf
rcll
add
bound
addl
cwtl
xchg
inc
push
or
push
jl
cmp
cld
cmpsb
cmp
add
movsl
add
loopne
andb
xor
adc
mov
int3
cmp
xor
add
push
xchg
aad
loop
dec
xchg
cmp
and
sti
and
daa
xor
iret
lahf
mov
xchg
adc
add
in
and
call
sbb
inc
add
cmp
ret
xchg
inc
sub
sub
data16
imul
and
jl
mov
sub
iret
add
mov
mov
out
cmc
in
add
or
pushf
ss
xor
pop
sbb
lahf
test
sarl
jp
cmc
inc
or
repz
adc
add
out
loop
mov
mov
xchg
je
hlt
movsl
dec
or
shrl
cmp
stos
xor
push
sbb
add
lcall
xchg
test
and
jno
add
push
sbbb
ljmp
lods
add
mov
add
iret
insb
add
loop
jle
add
stos
or
add
das
sbb
adc
leave
sub
or
sbb
or
pop
push
nop
and
mov
adc
jbe
cmp
fwait
vmwrite
push
or
jae
adc
not
add
pop
adc
jg
fmul
add
inc
fstpt
mov
inc
jbe
in
mov
in
jne
add
add
test
nop
adc
mov
je
fisttpl
int3
xchg
or
mov
dec
lahf
mov
or
xchg
adc
add
test
shlb
mov
cwtl
push
or
push
dec
and
call
sub
pop
dec
pop
cltd
subb
mov
add
adc
pushf
pop
cmp
push
aas
mov
push
push
clc
add
push
lock
xchg
xchg
addr16
stc
and
push
xor
jb
rclw
mov
fists
and
xor
out
cmp
inc
or
mov
xor
and
arpl
sub
aam
or
jle
mov
jp
cmp
sbb
and
bound
push
cld
clc
js
adc
jl
xor
iret
std
mov
lock
ja
cwtl
stos
cmpl
xor
out
cltd
adcb
je
xchg
ljmp
inc
loopne
sti
push
sbbb
jns
jno
iret
mov
popf
mov
jl
roll
mov
dec
sub
rcll
int
sbbb
bound
add
movsl
jbe
addb
jnp
push
adc
add
add
ss
add
jbe
iret
bound
pop
mov
inc
addl
cld
into
push
scas
jo
xchg
jl
add
imul
pop
or
mov
ljmp
cwtl
mov
mov
dec
ds
or
fwait
loopne
addr16
push
lods
cmpsb
or
sbb
push
divb
loop
iret
andl
dec
inc
inc
cwtl
add
xchg
dec
adc
mov
call
or
movsl
iret
loope
or
mov
jo
cmp
add
cmpsl
jg
shl
and
add
popf
aas
in
fnstsw
sbb
mov
or
inc
lock
loop
imul
popf
test
enter
mov
xchg
push
jge
sub
mov
dec
out
push
in
sbb
push
add
lods
jge
shll
int
pop
jno
clc
aas
popa
mov
sub
adc
int3
jo
push
add
test
movsb
imul
sbb
xorb
mov
in
ds
push
sbb
adc
adc
xchg
sub
cmp
pop
clc
insl
leave
sbb
or
cmp
mov
or
pop
pop
mov
add
mov
mov
ds
jg
push
or
inc
sub
jno
inc
verr
xchg
std
scas
pop
subl
sti
pop
mov
adc
push
clc
mov
mov
pop
shlb
dec
ds
pop
add
aam
inc
int3
clc
push
or
inc
hlt
xor
cwtl
dec
inc
push
jle
jp
add
sbb
xorb
repnz
testl
mov
fcompl
scas
cmpl
leave
push
xor
mov
sub
mov
mov
fwait
and
das
mov
push
cmc
sar
adc
rclb
push
fbstp
icebp
add
stc
xor
xchg
push
jl
iret
dec
jge
xor
das
sbb
adc
cmp
xchg
fnstsw
inc
xlat
cmp
xchg
pop
stos
pop
mov
add
mov
cmpsb
sbb
in
scas
cli
aaa
add
arpl
inc
fsubrs
movsb
add
popf
pop
xchg
out
andb
je
sbb
jnp
or
addl
add
mov
jnp
cmc
xor
lds
push
pop
nop
rolb
push
jg
movsl
mov
sbb
in
nop
add
add
add
cmc
scas
imul
add
push
in
push
xchg
shlb
movsb
scas
dec
push
mov
or
aam
nop
inc
jle
adc
test
inc
enter
imul
jecxz
lahf
int3
dec
or
mov
push
mov
push
test
loopne
cs
push
lcall
cwtl
sub
aam
sbb
ljmp
int
insl
add
mov
inc
jl
and
cs
into
sbb
sbb
adc
inc
or
or
add
mov
pop
pushf
pop
add
cmp
cmp
xor
repnz
sub
pusha
push
cmp
repz
add
and
fs
xorl
add
or
shlb
test
push
and
imul
and
sbb
jge
sbb
in
movb
lods
sub
mov
aad
mov
ljmpw
add
mov
mov
pop
cmp
pop
mov
pop
filds
sbb
add
orb
pushf
dec
inc
sbb
loopne
loop
adc
add
das
stc
mov
mov
rcrb
add
add
inc
pusha
add
or
jb
aad
or
add
jge
mov
int3
roll
push
aas
mov
fs
test
iret
push
push
and
loope
mov
iret
push
jmp
push
cmp
sbb
nop
hlt
test
xchg
cmp
mov
add
roll
and
or
push
pop
imul
subl
test
xchg
jl
inc
dec
aad
push
xchg
lock
inc
and
adc
push
add
jecxz
sbb
es
popf
int3
lods
xor
dec
and
sbb
or
aam
push
dec
addr16
push
je
aad
cmpsl
js
push
sub
movsl
cltd
outsb
stc
loop
push
sbb
fs
sbb
fldenv
fwait
out
icebp
dec
xchg
xchg
mov
cld
dec
outsb
add
cmpsl
loopne
mov
sub
mov
mov
fcoms
aad
dec
xchg
cmp
shrl
iret
sti
inc
pusha
sbb
in
add
mov
in
les
mov
das
sbb
inc
push
mov
enter
lcall
outsb
or
pop
sbb
dec
addr16
lahf
add
dec
outsl
shlb
sbb
vunpcklps
xlat
out
lock
push
outsl
aam
hlt
xor
add
das
cmp
mov
mov
adc
add
aam
ret
into
outsb
addb
popa
arpl
pop
add
call
sub
ret
mov
cmp
fdecstp
test
aad
add
cmpb
popf
test
leave
add
pop
push
add
jo
outsl
or
dec
xor
and
push
sbb
jmp
subb
repnz
movsb
rcrl
ds
mov
and
icebp
jbe
mov
xor
jp
push
jl
lret
icebp
js
or
sbb
mov
into
je
sub
mov
lret
bound
nop
sub
push
lock
or
pop
mov
lds
pop
pop
js
cmp
sar
add
icebp
jmp
addr16
sbb
loopne
push
mov
mov
hlt
jmp
jle
and
call
add
dec
inc
in
xchg
orb
mov
sbb
ss
xorb
mov
stc
movsb
enter
nop
sbb
adc
in
dec
ds
jbe
jns
jno
lret
aas
js
sar
inc
add
sbb
jmp
mov
andb
add
dec
add
je
jne
push
xchg
push
repz
adc
or
push
and
mov
outsb
movnti
mov
xchg
jg
loopne
dec
je
sub
sbb
add
pushf
insb
cmp
aam
sahf
or
or
mov
jle
cmp
sarl
in
add
test
pop
jge
outsb
pop
cmp
sub
inc
cmpsb
cli
push
inc
mov
push
add
imul
jmp
xchg
mov
mov
dec
adcb
xchg
mov
push
jmp
pusha
test
fwait
sub
pop
push
cmpsb
scas
mov
call
daa
sub
enter
add
mov
mov
xor
leave
std
mov
in
dec
push
xchg
xor
ja
sbb
sbb
xchg
mov
inc
push
ret
add
cltd
cmp
jne
ret
leave
jae
sbbl
cmp
fisubs
mov
dec
rol
addr16
cmp
dec
cmpsl
sub
dec
sarb
mov
int3
in
scas
lret
subb
or
ret
sbb
or
mov
push
cmp
jbe
mov
pop
pop
sbb
jl
int3
or
dec
sub
add
mov
and
lock
or
push
fs
adc
negb
ss
push
cmc
movsb
jb
int
fucomip
call
mov
add
mov
and
jno
aas
add
ret
fmulp
sub
rolb
xchg
cmp
pop
fildll
add
call
dec
adc
jno
mov
xor
orl
add
loope
test
and
jo
repz
les
cli
jae
cmp
or
add
rorl
xchg
sbb
je
lret
add
mov
add
movsl
fmulp
mov
xchg
movsb
jb
mov
adc
lods
and
pop
or
test
int
movsl
sbbb
and
mov
pusha
mov
andnps
into
jge
add
out
int
mov
mov
pop
push
push
mov
adc
add
repnz
dec
cmp
jmp
clc
shlb
push
insb
or
fs
mov
mov
das
jg
add
movsb
in
mov
hlt
cwtl
fsubrs
icebp
lock
adc
xchg
pusha
add
fs
add
lods
or
add
cwtl
movsb
jbe
xchg
movsb
jae
lldt
dec
push
loop
mov
add
xor
cld
mov
pop
lods
sub
adc
mulb
aad
or
sub
adc
adc
push
xchg
pop
rolb
fs
fmul
mov
ret
out
or
or
xor
aas
test
add
and
push
cld
lods
cmc
orb
xchg
or
add
inc
dec
mov
mov
paddb
sbb
xchg
mov
xor
inc
scas
rol
sbb
gs
jnp
xchg
rcl
push
or
lods
fiadds
xchg
enter
sbb
inc
add
add
or
cld
pusha
lret
or
xor
stos
pushf
jg
in
outsb
rolb
out
jmp
sti
sbb
add
jbe
mov
in
mov
push
jo
fistl
stos
mov
testl
xor
popl
enter
movb
in
movsl
adc
lods
pinsrw
or
insb
sahf
jmp
and
in
mov
insl
jp
xchg
ret
shlb
dec
and
cmpsl
shll
fsubrl
mov
or
add
push
movsl
int3
rorl
push
test
mov
mov
pop
sar
aaa
loopne
and
sbb
pop
cmp
add
inc
movsl
inc
or
dec
jo
aas
add
cmpsl
fiadds
call
add
mov
or
out
rorb
sbb
inc
shrb
dec
std
push
add
fwait
movsl
outsb
mov
pop
xor
call
pop
or
push
inc
and
sarb
jecxz
rolb
lock
fidivrl
int
in
mov
jle
mov
and
mov
mov
imul
sbb
pop
repnz
inc
jae
xlat
cmp
pop
push
fs
or
lahf
mov
mov
pop
outsb
xor
dec
pop
pop
jns
push
movsl
xor
fstps
add
sahf
lcall
mov
xor
mov
pop
jb
push
ret
add
adc
mov
pop
mov
cmpb
sub
loopne
sub
push
and
popf
fistpl
sarl
mov
push
rcr
leave
fucomp
xor
stos
sbb
in
or
dec
and
mov
aas
jg
pop
and
add
lods
jl
popa
mov
out
and
or
pop
fsubp
pop
andl
xchg
adc
jb
addb
popa
aam
fisttpl
pop
cmp
push
adcl
adc
adc
push
sbb
rol
or
add
cmp
mov
imul
test
sub
mov
cltd
ds
fiaddl
test
push
lret
bound
imul
push
out
daa
sbb
pusha
inc
fwait
jno
and
fcompl
dec
or
push
mov
add
in
adc
sbb
roll
repnz
cmp
inc
push
xor
test
lock
sub
mov
call
stc
xor
inc
push
in
add
add
shll
cmp
xchg
ds
sub
push
js
mov
into
shlb
adc
test
mov
movswl
arpl
lock
movsb
xchg
nop
mov
xlat
cs
imul
in
clc
inc
rolb
mov
jle
shlb
mov
or
cmp
ljmp
bound
call
hlt
add
popf
sarb
pop
xor
and
push
xor
jle
loopne
sbb
popa
mov
jp
mov
shlb
mov
add
inc
xor
inc
dec
stos
dec
xor
rorb
ret
or
jo
mov
xchg
movsb
ja
or
mov
xchg
push
in
jnp
mov
movsb
fdivp
sub
pop
and
mov
mov
cli
mov
adc
cmp
bound
push
push
cmpsb
xchg
pusha
add
pushf
cmpb
cs
cmp
mov
push
or
test
inc
xor
or
clc
jle
mov
add
subb
pop
lret
jmp
xchg
test
shrl
loope
sub
inc
pushf
xchg
push
and
fisttps
hlt
xchg
popa
add
dec
icebp
gs
xorl
sbb
cs
popa
lock
mov
mov
cmpb
fsubr
mov
xor
dec
mov
xor
mov
push
xor
inc
lods
clc
add
imul
int
das
pop
fnsave
inc
clc
ljmp
adcl
ret
sbb
fwait
mov
jno
and
les
cli
ds
repnz
sbb
fiaddl
test
inc
cmp
dec
mov
or
add
insb
xchg
cld
rcrb
fidivl
push
test
add
rep
inc
pop
pop
push
add
ret
sarl
out
xor
hlt
pop
sub
sbb
xlat
lods
rclb
roll
jmp
xchg
cmp
adc
movsb
or
mov
add
insb
aas
or
test
je
push
add
inc
stc
mov
test
pop
je
inc
mov
xor
and
lock
or
push
add
call
or
cmp
int
call
mov
lret
in
call
adc
mov
sub
mov
es
add
jb
jmp
loopne
movsl
add
mov
push
insb
sub
lods
loopne
xor
or
dec
add
insb
decl
ds
in
cmpb
pusha
call
xchg
data16
pop
sub
pop
aam
enter
add
jno
aas
stc
adc
repnz
bound
arpl
fs
cmpsl
pop
push
mov
out
lret
pushf
push
xor
fdivrs
add
and
mov
fildl
mov
jnp
clc
clc
push
push
fs
jns
aam
add
xchg
mov
mov
pop
jge
mov
dec
xor
add
push
xchg
fsubrp
cmpsl
fdivs
dec
js
mov
sbbb
ss
add
or
out
stos
lcall
push
mov
cmp
loop
mov
adc
ljmp
bound
out
mov
aas
jge
xchg
cwtl
push
jle,pn
push
or
push
mov
fidivrl
jmp
jg
add
mov
movsl
into
cli
xchg
je
mov
popa
xchg
xchg
js
and
enter
rclb
cmpsl
adc
js
add
jns
sti
cmc
dec
sarb
fidivs
push
roll
andb
fcompl
and
test
and
xlat
aaa
pop
jge
sub
or
push
rclb
in
mov
cs
pop
pop
add
cwtl
pop
cmp
push
mov
in
nop
rolb
xchg
movb
insl
js
outsb
add
fstl
mov
divb
inc
pushf
addr16
cmpsl
rcrb
mov
cwtl
sbb
add
dec
shl
pop
movq
jg
or
les
xchg
cmc
je
sahf
or
push
test
dec
rcrb
push
call
xor
scas
mov
imul
adc
jp
test
lock
jp
add
inc
jb
cwtl
mov
jp
mov
into
add
lea
adc
aas
jle
shl
bound
push
call
add
dec
cmp
sarb
shrl
repnz
jno
add
jge
mov
push
lea
mov
pop
js
mov
rol
jecxz
je
jl
add
jge
bound
cmp
mov
mov
lock
jns
add
stc
push
or
and
pop
push
sbb
dec
lods
sub
js
pop
xchg
rcrb
jne
rcrb
rcrl
push
ficoms
stc
add
push
es
cmp
xchg
das
pop
and
add
mov
gs
pusha
fdivr
jge,pt
lods
push
addb
push
sub
mov
push
xchg
in
rorl
in
xor
movsb
jge
inc
fsubs
sti
loopne
pop
cmpsb
add
jmp
das
stos
and
fmuls
xor
cld
mov
call
push
adc
push
lds
push
lret
push
mov
push
jl
pop
clc
pusha
es
adc
shll
nopl
fsubs
cli
out
xchg
jns
cmp
mov
pusha
or
mul
sbb
js
inc
aad
addr16
gs
sub
rcrl
sub
mov
ret
fisttpll
rol
fadds
rolb
sbb
adc
jge
daa
and
dec
lret
cs
jne
inc
mov
out
inc
imul
dec
mov
mov
xor
shll
and
int3
xor
pushf
rclb
jp
pop
lea
pusha
sub
push
dec
jns
popa
mov
cmp
sti
and
push
xor
mov
adc
jecxz
out
loope
xorb
inc
mov
dec
or
adc
in
repnz
push
and
mov
sub
pusha
daa
lfs
int
jg
sahf
roll
cltd
daa
roll
adc
push
jb
daa
jp
testb
push
call
push
xchg
mov
add
data16
push
out
pop
xchg
add
test
dec
mov
adc
jmp
sub
addb
push
sarl
in
or
adc
leave
sbb
mov
lods
cmpb
sub
pop
and
mov
sub
faddl
in
add
jecxz
dec
cs
int3
mov
lahf
push
repnz
fdivrl
lahf
inc
inc
int
cmp
ret
insb
in
into
rol
jo
push
fst
xor
andb
popa
dec
sbb
cld
fisubrl
out
shrb
mov
xchg
int3
pop
imul
mov
mov
fildl
push
pop
or
adc
shl
xchg
inc
rolb
mov
push
jge
aam
faddp
or
pop
add
mov
imul
add
cmp
hlt
xorb
test
ljmp
push
ret
mov
out
or
and
fwait
jg
pop
add
clc
sbb
sbb
and
test
xchg
mov
cmp
xchg
jge
cmp
popf
xchg
enter
fwait
jl
sarb
mov
and
fildl
or
into
sub
cmpsl
cld
mov
sub
icebp
dec
hlt
xor
and
andb
cwtl
loop
cmpsl
loop
leave
pop
mov
push
sbbl
cmp
movsl
nop
xchg
jl
mov
jl
inc
push
aam
cmc
loopne
jle
mov
loope
fidivl
insl
out
test
ret
shl
in
jae
stos
jo
psubw
movsb
mov
bound
dec
hlt
sub
pop
dec
fcmovne
and
loopne
xor
jg
cmc
cltd
cmp
rcl
es
testb
pushf
inc
mov
and
jmp
out
int
fiaddl
jl
or
ljmp
pop
mov
dec
cmp
js
mov
pushf
add
hlt
icebp
cmc
push
or
dec
std
add
out
adc
add
push
aas
pop
or
movsb
and
or
andl
add
iret
xchg
and
mov
adc
push
out
repnz
loop
add
add
mov
mov
lods
ret
loopne
fimull
add
mov
cs
fs
xchg
sub
mov
lcall
cltd
loope
add
mov
mov
jle
mov
or
stos
add
push
nop
and
xorl
xchg
lahf
push
in
fsin
loopne
out
and
and
or
dec
pusha
xchg
mov
in
and
push
mov
dec
mov
test
xchg
push
xor
mov
xchg
mov
add
loopne
mov
addb
stos
pop
sbb
pop
in
jbe
ror
jp
push
into
xchg
imul
aaa
in
add
ret
inc
cwtl
mov
push
pop
inc
and
adc
sbb
lea
cwtl
inc
cmp
out
add
sub
and
stc
jmp
loope
insl
popf
dec
in
int
orb
xchg
sbb
dec
jbe
adc
add
fwait
lret
mov
lea
mov
xor
test
test
sbb
addr16
pusha
insl
std
sub
sbb
scas
mov
in
insb
test
and
push
and
or
cld
aaa
add
lret
pop
xchg
ret
inc
add
jl
push
ljmp
sub
add
jmp
fistl
test
add
ds
ljmp
and
ret
inc
sub
jno
add
cmp
sbb
dec
add
bound
xlat
add
add
mov
push
lock
add
jmp
mov
push
movsb
jae
pusha
xchg
and
cs
or
les
add
fldcw
push
out
xchg
es
cmp
xor
mov
orb
add
daa
and
jo
xchg
mov
add
cmp
sbb
scas
pop
inc
mov
push
nop
add
aam
and
sbb
ror
jge
daa
addl
fstpt
push
dec
pop
mov
fnstcw
ret
je
nop
cld
adc
mov
test
mov
sbb
xchg
aam
hlt
inc
add
or
xorb
mov
add
mov
jno
inc
push
pop
jne
cld
rol
add
test
mov
inc
pusha
inc
imul
sahf
pushf
add
addb
jae
cs
push
sarl
add
push
test
das
mov
decl
cld
push
popa
sarb
je
jge
and
pusha
pop
cmp
mov
in
int
repnz
jmp
es
fistps
and
cmpb
movsl
cmc
mov
loop
pushf
add
aas
push
aad
and
xchg
aam
adc
fsts
insb
inc
mov
cmp
aaa
push
fidivs
pand
lcall
or
cmp
js
repz
push
jo
push
mov
out
jns
xchg
aas
add
je
or
add
cmc
inc
and
jp
testb
into
fnsave
sub
adc
aaa
add
xlat
push
bound
push
cmp
movsl
mov
leave
push
push
leave
push
lahf
dec
loopne
mov
add
jbe
pop
xchg
pop
xlat
fnsave
mov
adc
push
or
addb
mov
inc
or
rcrl
mov
jb
cwtl
call
cmpsl
rorl
lret
add
popa
movsl
or
mov
pop
imul
jbe
clc
inc
add
mov
cwtl
sahf
rorb
cmovl
mov
push
stos
orl
mov
lret
pop
dec
cmp
sbb
adc
sbb
ja
add
arpl
dec
ret
mov
je
subb
add
and
fdivs
fs
or
icebp
stos
subb
jle
sub
add
ljmp
xchg
jmp
loopne
jge
add
mov
cmp
xor
adc
push
gs
ss
lds
mov
mov
in
inc
je
and
cs
aad
adc
enter
pop
mov
push
mov
loopne
ret
cld
push
add
fucomp
call
sbb
xchg
mov
popf
jno
pusha
out
or
add
mov
jnp
sub
imul
rcr
mov
adc
out
dec
xchg
loopne
dec
ja
xor
add
sub
dec
push
or
push
pop
into
call
cmp
rolb
fcoml
xrelease
scas
add
jae
add
aas
xchg
cs
es
rcr
mov
test
fsts
loop
imul
push
icebp
sub
in
fisubrl
inc
push
lods
mov
xchg
test
test
xchg
repnz
test
sub
inc
cli
sbb
add
mov
fsubl
sahf
adc
add
dec
in
std
idivb
mov
sahf
imul
jg
clc
imul
push
sub
rolb
test
cmp
popa
js
inc
jo
cmc
xchg
sub
cmp
int
mov
lods
pop
push
imul
add
inc
loop
adc
add
in
int3
mov
add
sbbb
xchg
cmp
gs
xchg
xchg
fdivs
fidivs
pop
xchg
mov
jle
cwtl
inc
bound
outsl
or
xchg
add
test
loope
and
lods
hlt
and
cmpb
bound
sbb
test
mov
dec
fs
pushf
movsb
xchg
lds
mov
cwtl
dec
cmc
popf
xchg
jo
call
dec
xlat
mov
repnz
xchg
mov
movsl
roll
or
jle
and
dec
ret
inc
mov
into
stc
rorb
movsb
cmpsl
pushf
lock
shrb
adc
hlt
pop
cmc
inc
sub
movsb
add
push
daa
add
idivb
mov
mov
lcall
hlt
push
movsb
loopne
add
mov
cltd
mov
pop
movsb
lret
ret
repnz
mov
xchg
in
or
pop
loopne
inc
iret
dec
dec
sbb
or
cmp
mov
dec
adc
andb
pusha
mov
xchg
andb
mov
repnz
inc
mov
xor
js
pop
jge
xchg
es
sbb
fcomps
xor
lea
fldenv
ret
sub
adc
mov
pop
add
rolb
jo
repnz
test
idivl
xor
rorb
bound
sub
cmc
pop
xchg
add
scas
mov
fldt
inc
or
sarl
add
xchg
int3
outsb
adc
rorb
pop
pop
ficompl
cmp
mov
mov
mov
rcll
loope
mov
outsb
adc
lahf
jl
pop
ja
mov
mov
mov
pop
lahf
add
cwtl
movsb
inc
sbb
cmp
cmpb
leave
outsb
int
imul
fucomi
xlat
sub
aas
and
xchg
les
add
xchg
sbb
test
and
ja
sub
stos
cmp
mov
aaa
pmaxsw
jmp
mov
scas
jb
mov
adc
faddl
and
int3
jb
daa
pmulhuw
rcrl
cli
xor
cmp
add
orl
mov
fdivl
or
imul
push
clc
pop
icebp
loop
movsb
or
xor
mov
cmp
daa
xchg
vmread
mov
bound
jcxz
popf
clc
orb
sub
iret
stos
xchg
xchg
jo
jle
jno
faddl
mov
xlat
cmp
lock
push
adc
add
sub
sahf
movaps
sbb
mov
or
aad
stos
or
nop
add
pop
lret
fstpl
and
jle
push
out
les
andb
jl
pop
shll
es
push
pop
sub
inc
add
add
dec
aas
jnp
lods
add
movsb
xlat
pop
fmuls
cld
cmpsb
pop
les
push
and
push
ljmp
sti
cld
sbb
dec
mov
dec
aam
pop
mov
mov
scas
xlat
fcmovbe
adc
jge
add
sub
mov
lds
add
push
jne
mov
std
cmpsl
lock
sbb
in
popa
add
mov
shlb
mov
subb
xchg
or
jb
fcompp
mov
jns
fwait
add
pusha
pop
sbb
xor
jae
pop
push
lock
xorb
out
or
xchg
push
sbb
fimuls
push
movsl
dec
shlb
and
adc
add
and
jae
push
jge
lea
fnstsw
xor
enter
sbb
cltd
je
roll
xor
fldl
call
cmp
mov
sbb
sub
jp
push
mov
mov
sbb
call
pop
and
ja
pop
jl
and
xchg
shrl
xchg
sbb
jno
cmp
lcall
imul
stos
mov
xor
pop
dec
adc
repz
jo
pop
sbb
cmp
ficoms
add
xchg
cmp
jge
je
pusha
fsubs
movsb
sub
pop
cld
insl
test
add
data16
xchg
faddl
mov
pop
cmpsb
pop
dec
shrb
cmp
pusha
dec
cmp
mov
sahf
rcll
mov
pop
xchg
push
mov
lcall
xchg
mov
pop
dec
gs
inc
sub
add
loopne
lds
adc
out
scas
add
cmp
mov
cmpsl
xor
mov
and
add
push
out
mov
add
aad
rcll
mov
data16
sbb
cmp
es
add
push
xor
cmp
mov
add
add
add
cwtl
xchg
lds
xor
add
jae
push
push
adc
pop
pop
or
enter
stos
xchg
adc
push
pop
dec
lods
cld
test
add
add
cmp
push
xor
mov
or
and
aaa
int3
add
orb
fsubs
push
in
push
cmp
nop
mov
cmp
add
fcmovb
inc
mov
leave
fistpl
cmp
sbb
xor
mov
in
jle
pop
cwtl
in
das
or
dec
lock
pop
pop
fldl
test
fwait
jno
sbb
mov
rolb
fcmove
adc
jp
shll
cmp
push
shll
popa
repz
mov
fdivrl
pusha
cmpsl
lret
add
jns
fistpll
push
add
dec
cmp
push
repz
xor
pop
jl
add
sub
add
rolb
xchg
xor
push
in
pop
push
nop
jl
je
inc
sub
sti
xor
add
lret
rcrl
add
mov
aas
popa
imul
ljmp
inc
inc
xchg
adc
add
fs
cmc
or
add
insl
xor
or
add
push
sti
pop
jge
xchg
ret
mov
cmp
or
add
mov
in
mov
jg
xor
clc
pop
les
xchg
lea
daa
in
ds
add
int3
fs
das
add
add
mov
xor
push
cmc
cli
lock
cld
cmp
ds
insl
add
jge
mov
sub
jp
pop
lock
jne
sahf
mov
js
inc
aaa
stc
movsb
sbbb
stc
jne
push
or
push
cmpsl
jno
or
cmp
dec
mov
cld
xacquire
lea
sbb
xchg
sub
or
dec
shll
ds
adc
push
sub
popf
xor
lock
add
fmull
pusha
leave
data16
popf
mov
xor
mov
add
xlat
enter
xor
and
leave
shlb
add
push
mov
inc
negl
xor
inc
mov
outsl
inc
sti
daa
repz
out
in
shrb
inc
mov
xor
out
iret
add
notl
add
enter
inc
fs
pop
push
and
hlt
fmuls
fstpt
loope
mov
xor
lcall
jae
push
lds
std
imul
xchg
pop
adc
push
aam
mov
ja
test
shlb
insl
push
add
pop
sub
insb
fs
push
add
mov
pusha
int3
jno
push
fstl
pusha
shrl
cmc
jno
lods
adc
lods
and
sbb
adc
mov
mov
sub
sub
int3
add
std
mov
add
add
push
dec
add
dec
