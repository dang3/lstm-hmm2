or
cwtl
xor
xchg
xchg
or
cmp
pop
jnp
cmp
fwait
and
repz
push
push
shl
sub
cmp
pop
cmpsl
addl
sbb
ret
lahf
mov
rolb
pop
rep
sub
ret
in
pop
xchg
pop
mov
orb
inc
mov
popf
dec
dec
out
in
mov
xchg
sub
out
push
mov
out
jle
xchg
inc
push
test
xchg
js
mov
cmp
aam
in
movsl
ret
jp
jne
xor
out
pop
push
mov
mov
push
rol
lods
xchg
and
mov
jp
test
jne
push
sub
push
mov
movsl
es
pop
repz
mov
adc
daa
push
xchg
sub
mov
sbb
mov
mov
lret
insl
aaa
loope
cwtl
and
iret
sbb
ja
lods
inc
sub
pop
adc
cld
inc
sarl
hlt
adc
test
imul
leave
pushf
inc
mov
or
bound
lret
dec
mov
stos
hlt
insb
inc
xchg
jp
add
push
hlt
push
pmulhuw
icebp
aad
dec
loope
mov
int
adc
push
jmp
mov
in
pop
xchg
iret
lea
xchg
mov
jo
mov
jle
push
iret
xchg
popf
stc
sub
mov
iret
or
dec
out
xchg
cmpl
dec
fimull
xor
cmpsl
test
inc
in
mov
out
xchg
cmpsb
aaa
nop
loopne
test
test
push
in
adc
adc
repnz
pop
inc
mov
insb
in
ret
filds
adcl
add
mov
push
imul
cltd
xchg
mov
sub
pop
aad
cld
ja
sub
sbb
or
xor
lcall
movsl
ds
lock
repz
inc
jp
mov
fnsave
jae
pop
movsb
jecxz
mov
and
loopne
cmp
loop
pop
mov
ret
xor
out
dec
mov
jns
icebp
aad
stos
popf
out
sbb
pop
stc
xchg
jmp
mull
mov
xlat
in
rol
std
insl
mov
lret
ficoms
mov
xchg
inc
adc
and
dec
push
clc
int
adc
cmp
push
fildl
cmc
int
in
lock
arpl
push
js
mov
addr16
scas
jmp
dec
ja
iret
nop
cmp
mov
and
mov
idiv
sbb
cltd
cmp
jmp
es
mov
and
jle
cmp
cld
xchg
jae
test
mov
mov
dec
insl
inc
lods
imull
test
ja
in
scas
in
shll
jmp
sti
adc
popf
xchg
mov
out
inc
cmp
in
stc
push
fwait
enter
cmc
lcall
mov
popa
xchg
popa
es
nop
movsl
sbb
mov
jp
repnz
pop
xor
add
sti
jecxz
lea
mov
subl
fdivrs
stc
dec
add
nop
daa
sbb
push
or
cmp
jge
add
xchg
outsb
cmp
xchg
sbb
xchg
push
lcall
cmpsb
mov
mov
cld
push
xlat
std
sub
cmc
jo
fimull
mov
shlb
sub
rorb
mov
stos
mov
fnsave
add
sub
inc
inc
xchg
jnp
out
mov
je
arpl
lahf
adc
jg
pushf
dec
mov
rcrl
outsb
loop
imul
insb
rcr
xchg
shll
fisubrl
je
xor
add
lds
popf
inc
out
pop
mov
int3
in
add
leave
sahf
outsl
in
mov
enter
iret
sub
stc
or
mov
jb
xor
cmp
popa
mov
mov
js
lods
jbe
mov
xchg
jp
dec
inc
xchg
adc
push
fsubrs
ja
rcrl
out
mov
ror
rorb
call
test
lods
rcrl
movsb
movsb
sbb
sti
je
or
jae
aad
nop
xchg
push
cmc
fdivs
shrb
jl
mov
cwtl
jp
mov
cld
mov
fimull
push
in
push
mov
push
testl
and
pop
and
mov
nop
fbld
loope
in
test
add
rorb
inc
jnp
pop
inc
mov
in
mov
imul
cmpb
mov
mov
xchg
jp
xor
lret
pop
insl
mov
pop
subl
jmp
mov
inc
fidivl
lods
push
mov
popa
push
or
or
fsub
movsb
push
punpcklwd
or
pop
push
sbb
jo
jg
std
sti
paddsb
inc
ja
loop
jg
leave
add
ss
xor
lods
arpl
inc
xor
movmskps
xchg
repnz
test
mov
scas
mov
imul
or
mov
in
repnz
std
insl
enter
scas
cmc
mov
xchg
dec
push
mov
sbb
outsb
add
scas
sti
add
jne
fadd
loop
imul
in
shrl
inc
xor
add
std
loop
addr16
xor
clc
mov
or
jge
sbb
test
mov
jno
dec
movsb
insl
xchg
inc
test
jl
jl
fwait
repz
call
clc
push
xor
call
out
mov
jno
stos
stos
shl
pusha
out
sub
test
push
jne
popf
jecxz
das
sbb
push
push
jb
stos
mov
js
add
jle
jnp
xchg
out
and
push
in
inc
into
pop
push
leave
mov
pop
xchg
insl
mov
shll
cmp
xchg
sub
add
xlat
les
ret
sbb
je
cmpsl
mov
in
xchg
popf
push
fwait
mov
sub
mov
inc
push
xchg
pop
push
in
and
and
cmpsb
stos
sub
mov
jmp
ret
mov
mov
inc
ret
and
pop
sbb
jle
shl
sahf
enter
mov
cli
daa
loope
arpl
xchg
adc
rcrb
mov
pop
and
call
lods
dec
xchg
stos
or
std
hlt
sub
pushf
mov
sarl
aam
stos
imul
jmp
aaa
xchg
mov
jmp
inc
cli
shrl
sbb
roll
out
cld
aaa
jg
pushf
insb
inc
sti
cwtl
push
fnstcw
xchg
cmpsl
arpl
insb
loope
ret
fucomi
mov
lds
mov
push
cli
std
sbbl
mov
xchg
outsl
xor
test
and
ror
pop
in
out
inc
jg
xchg
fbld
mov
movsl
dec
jmp
cmp
call
jo
outsl
mov
mov
add
lahf
xchg
stc
aas
sub
dec
cli
scas
out
fildl
clc
cmp
negl
daa
out
dec
pop
psllw
xlat
xlat
nop
mov
movsb
aas
test
scas
and
cltd
repnz
insb
dec
sub
mov
leave
es
xchg
pop
lods
mov
pop
mov
sub
jge
cld
and
mov
sbb
scas
fstps
pusha
mov
inc
mov
ret
jecxz
sarb
ss
fdivrl
sbb
xchg
dec
in
dec
icebp
add
leave
rcrb
sub
xchg
fdivrp
fldt
stos
out
mov
or
stos
ds
sti
inc
pop
cltd
mov
mov
dec
lret
and
rolb
test
iret
scas
push
pusha
xchg
add
xchg
repnz
push
push
mov
mov
imul
adc
pop
pop
shlb
or
je
ret
mov
cmp
mov
out
or
add
jno
xchg
cmp
clc
sub
xchg
mov
iret
loope
jge
jno
push
push
adc
inc
mov
adc
and
loop
std
sbb
xorb
insl
loope
bnd
inc
lret
xchg
lahf
pop
stos
mov
mov
fsubr
addr16
out
lret
pop
add
push
or
and
sarl
mov
push
enter
in
es
mov
decl
in
mov
int3
mov
js
lock
std
movsb
repnz
xor
sahf
mov
mov
cmpsb
ss
push
std
or
or
loop
adc
mov
popf
inc
out
imul
inc
mov
stc
adc
mov
shl
clc
test
jb
or
mov
mov
aaa
sahf
sti
js
xor
je
aad
cld
sbb
mov
leave
movl
jmp
mov
adc
dec
pop
adc
cmpsb
sahf
mov
lahf
xchg
into
bound
stc
xchg
ja
xor
xchg
and
mov
fnsave
pusha
sti
xchg
js
lea
cld
sbb
mov
popf
mov
imul
pop
out
xchg
mov
sub
dec
add
aas
orl
xor
jg
cmp
push
push
jno
xor
iret
out
stc
xor
mov
dec
test
mov
stos
psubd
sbb
lret
pushf
arpl
mov
xor
cld
xchg
mov
ja
xchg
adc
sbb
jmp
fsubrs
jge
jle
stos
jnp
mov
inc
out
cmpsb
mov
lds
addl
mov
pop
push
jbe
xchg
pop
int3
clc
xor
int
push
repnz
jle
pop
adc
adc
loope
in
jmp
mov
mov
ret
xor
test
pop
scas
lods
mov
cld
setp
iret
and
push
popf
jo
lcall
jl
xchg
cmp
leave
pop
ds
mov
jns
aad
jne
out
pop
cli
mov
mov
dec
cmp
inc
negl
das
push
xchg
inc
adc
adc
xorl
pop
cmp
mov
mov
jmp
and
int
movsl
xchg
in
sub
sti
push
xorl
pop
sub
jns
pop
and
leave
jmp
inc
out
pop
out
mov
mov
and
flds
shl
push
lods
ss
mov
sbb
xor
pop
push
cmc
cli
lahf
movsb
jle
rcr
mov
or
bound
sub
mov
f2xm1
popf
pushf
leave
enter
fdivr
dec
mov
jl
xor
rcrb
jl
inc
ljmp
shrb
aad
rcr
pusha
rcl
and
cmp
popf
xor
jmp
mov
mov
mov
lret
out
subb
jmp
imul
stos
imulb
jno
jge
xlat
in
popa
lahf
mov
lea
adc
sar
xchg
frstor
fcoml
pop
sbb
mov
subl
dec
xor
mov
popa
inc
nop
cli
outsb
cmp
lds
or
ljmp
lahf
repz
fidivl
mov
loopne
in
mov
fdiv
mov
mov
movsl
iret
mov
sahf
cltd
fstp
lods
jb
lods
lahf
xchg
cli
imul
test
xorb
mov
add
js
mov
jle
push
cmc
pop
outsb
xor
divb
loope
and
adc
sahf
mov
and
and
mov
daa
push
push
xchg
out
sbbb
dec
and
aam
xorb
push
in
and
cmc
xor
lcall
popa
test
lahf
in
outsb
mov
popa
aaa
inc
push
sbb
outsl
mov
mov
push
jne
dec
jnp
mov
xchg
fldt
int3
decl
gs
lock
movsl
pop
test
cli
mov
cmpsl
inc
movsl
xbegin
dec
int
dec
ja
imul
mov
clc
fsubp
gs
jns
dec
cmp
test
and
not
iret
xchg
fisttps
dec
cmpl
xchg
mov
jnp
sub
lock
ret
std
paddsw
fbstp
icebp
roll
xchg
ds
add
and
mov
pushf
test
push
int3
hlt
movsw
cld
jg
inc
add
push
test
fldcw
lea
jno
fildll
mov
mov
push
jecxz
mov
mov
and
mov
jno
out
bound
clc
jbe
xchg
mov
jp
rcl
imul
add
push
sbb
lods
and
dec
dec
mov
sub
mov
cltd
add
or
inc
mov
mov
xchg
xchg
mov
and
movsl
cltd
fdiv
dec
aad
mov
pop
jecxz
out
cmpsl
jno,pn
movsb
mov
or
push
mov
pop
repz
rcrl
xor
das
fucom
jns
enter
xor
xor
stos
fnsave
xchg
lcall
add
sbb
xchg
imul
cld
test
iret
push
stos
out
cli
scas
mov
push
scas
sbb
repz
movsb
mov
imul
mov
jae
cmpl
push
cmp
mov
adc
push
insl
adc
out
add
mov
lods
mov
jg
inc
dec
sub
mov
push
sub
jo
jl
dec
sbb
jne
cmpsw
pop
daa
and
test
fwait
div
mov
das
fdivs
in
fdivl
mov
push
adc
lods
mov
sbb
dec
mov
mov
inc
testl
gs
imul
nop
stos
jbe
inc
add
fld
in
les
sbb
lods
dec
xorl
popf
addr16
jne
xor
hlt
sub
dec
sahf
mov
mov
mov
cmp
clc
fnstsw
xchg
rcrb
or
rcr
push
cli
ror
imul
cwtl
iret
dec
mov
imul
mov
push
loop
shlb
lret
rcl
aas
lcall
loopne
addl
enter
rcr
mov
rcr
pop
adc
test
mov
push
mov
call
test
xchg
pop
out
pop
xchg
sbb
scas
inc
test
rcrb
ss
mov
out
out
ret
xchg
scas
faddl
mov
mov
ret
jmp
mov
addr16
lcall
fincstp
movsb
and
lahf
and
mov
mov
jg
adc
test
cld
mov
sahf
push
jp
movsb
mov
pusha
sar
repz
dec
jnp
in
loope
fstl
mov
imul
inc
jb
jg
aas
fwait
mov
inc
sub
inc
imul
xor
add
stc
jne
outsl
mov
out
lea
mov
adc
mov
repnz
mov
push
mov
dec
cmp
mov
mov
rorb
lret
push
push
iret
call
adc
iret
rcrl
xor
out
mov
fidivrs
push
push
push
mov
push
mov
add
call
lcall
jmp
aam
roll
ljmp
add
pushf
fildl
nop
dec
and
jnp
xchg
cmp
sub
cmpsb
arpl
loope
adc
popa
adc
dec
dec
dec
in
mov
xlat
or
fstpl
ret
imul
jo
leave
outsb
icebp
incb
push
xor
lods
jbe
pop
aad
fnstenv
sub
lods
into
sbb
mov
sbb
sbb
nop
push
dec
clc
lret
or
out
sbb
jae
leave
push
fidivrs
movsb
sub
jmp
sbb
scas
or
loop
incl
fisttpll
mov
sbb
adc
fabs
sbb
leave
mov
mov
jge
pop
scas
ret
mov
popa
mov
sbbl
popf
fpatan
inc
test
adc
xor
movsb
xchg
jnp
jp,pn
jb
sub
lock
sbb
das
mov
mov
cmpsb
push
mov
pop
movsl
rclb
sbb
in
add
aaa
push
mov
cld
dec
nop
xchg
adc
movsl
daa
dec
inc
movl
rolb
cwtl
out
adc
add
mov
adcb
pop
adc
ds
aam
mov
pop
jno
rol
mov
into
cvttps2pi
pop
jle
test
mov
or
xor
xor
jl
adc
push
lods
dec
pop
jae
adc
int
loopne
test
pop
out
mov
cmp
insb
notb
test
push
jmp
shr
aaa
je
and
pop
dec
mov
xchg
imul
dec
js
sbb
imul
arpl
pop
pop
loopne
sbb
dec
adc
push
mov
movsb
scas
test
or
popf
sub
xchg
pop
fwait
in
rcrb
and
incb
clc
cmp
sub
sub
mov
clc
push
cs
test
inc
xor
or
sub
push
les
dec
pop
sub
push
jb
rcr
imul
cmp
pushf
jl
pop
dec
jns
push
enter
xor
adc
dec
sbb
adc
enter
popf
cld
sbb
mov
insb
pop
test
fidivrs
push
jp
pop
cmp
imul
pop
cwtl
cmp
cmp
sbb
cmp
sub
xor
ret
inc
cmp
and
push
sub
cmc
pop
js
mov
mov
sub
push
subb
cld
sub
into
aad
rcrb
sbb
push
sbb
xchg
call
ret
orl
scas
push
dec
mov
lods
movsb
mov
ret
bound
lock
push
cltd
sub
dec
mov
scas
push
cmc
rclb
insl
sub
dec
test
fimuls
ja
sbb
arpl
pushf
sub
repz
nop
scas
lock
ljmp
add
outsb
jo
jns
dec
or
push
test
sahf
add
jecxz,pt
lea
pop
or
js
aam
sub
add
add
into
mov
inc
out
frstor
pop
add
mov
cmp
in
shll
ljmp
ljmp
lret
mov
pusha
push
test
in
cmp
push
std
add
callw
fldcw
lods
cs
jae
out
xor
addr16
not
aam
mov
sbb
lea
jae
mov
mov
arpl
mov
dec
jmp
clc
mov
and
std
push
mov
mov
adc
adc
std
scas
ja
out
sub
rorb
or
cmp
add
add
outsl
sbb
ret
mov
imul
sbb
std
xchg
ds
idivl
test
sub
mov
scas
xchg
pop
hlt
mov
repz
inc
pop
loope
test
xchg
popf
inc
ror
dec
js
mov
addr16
stos
xchg
push
dec
lahf
int
add
jl
cltd
test
or
xor
lea
int3
shrl
sub
insb
sbb
popf
test
pop
jbe
loope
add
pop
sarl
push
jle
out
pushf
lahf
and
inc
jg
mov
hlt
rol
sbb
jp
adc
mov
aas
jmp
inc
iret
fcoms
in
xchg
dec
mov
rorl
scas
mov
mov
test
push
sub
cmp
sahf
movsb
mov
xchg
ret
xchg
cs
arpl
into
push
lcall
sbb
call
and
sub
xor
mov
cwtl
add
dec
std
sub
std
shll
mov
clc
cmp
push
push
addb
jmp
fprem1
dec
cmp
mov
sahf
push
iret
lret
push
lods
or
nop
inc
xchg
rcrl
imul
data16
pop
lahf
hlt
pop
insb
inc
nop
mull
sub
rolb
push
cmp
lods
xorb
and
repnz
pop
fiaddl
cli
inc
pop
and
sbb
push
mov
mov
or
ss
push
and
shrb
ret
mov
push
imul
addb
es
aaa
repnz
dec
loop
stos
repnz
add
mov
inc
xchg
in
xchg
mov
mov
and
sub
shrb
jle
adc
sahf
inc
out
mov
cmpsl
cs
jp
aad
adc
dec
fstl
inc
scas
sbb
fs
jle
pop
faddl
push
movsl
movsb
cmp
xlat
hlt
test
out
add
and
sbb
hlt
sub
ret
sub
lods
jl
sbb
pop
in
pusha
test
mov
ficomps
in
push
in
adc
ljmp
test
cmp
mov
fsqrt
push
aad
fsubrl
xchg
jns
hlt
jge
push
sub
shrb
or
jns
adc
xchg
sbb
add
sub
hlt
or
inc
in
mov
insb
inc
push
adcb
sub
shll
stos
inc
fiaddl
lahf
cmp
sbb
mov
and
jle
sahf
adc
pop
leave
xor
fistps
adc
jns
mov
mov
es
pusha
mov
popf
jb
xchg
shlb
xor
into
shrb
scas
xor
cmp
dec
sarb
fsubl
stos
and
cs
and
std
add
loop
inc
push
fbld
loope
int3
ficompl
loop
ljmp
lds
or
cmpsl
add
mov
pop
or
rclb
cmpsb
add
sbb
roll
and
aas
dec
xchg
insl
lahf
movsl
or
lods
test
in
mov
push
mov
mov
dec
pop
dec
fiadds
add
popa
mov
adc
clc
jp
inc
fpatan
bound
cld
cmpsl
stos
pusha
enter
call
movsl
jmp
ljmp
dec
xchg
sub
int3
xor
fldcw
and
pop
aas
pop
or
dec
in
cmp
daa
adc
mov
mov
imull
mov
fadds
dec
ret
faddl
push
aam
mov
outsb
sbb
add
jns
push
xchg
adc
les
and
fstp
cli
jmp
push
and
sub
mov
subb
mov
jmp
cmp
push
inc
jns
push
mov
dec
je
add
sub
cmp
mov
cmp
popf
sbb
das
mov
and
jecxz
orb
outsb
sub
mov
cmp
jecxz
enter
pop
push
cltd
jp
mov
sub
aam
shrb
push
adc
add
popa
in
adc
mov
cmp
jle
jo
lcall
mov
jp
aas
sbb
enter
xchg
cs
xor
sahf
inc
push
es
repnz
sub
and
add
push
inc
insl
jmp
mov
inc
jmp
cmp
add
enter
pop
mov
popf
aad
cmp
pop
mov
pop
push
xchg
adc
test
lea
es
adc
mov
pop
lods
aas
cmpb
fcmovnbe
cwtl
jo
add
cmp
cltd
sti
imul
adc
popa
adc
jae
mov
insl
jmp
mov
rolw
sahf
cs
std
inc
jbe
push
bound
ja
ss
mov
rcrb
dec
bound
mov
adcl
cltd
mov
lock
cld
jmp
push
add
gs
pop
jns
scas
sub
mov
rorl
out
pop
adc
push
lock
xchg
add
in
cmp
ljmp
mov
pop
add
cmp
inc
leave
sbb
or
mov
dec
lahf
out
fldcw
pushl
pop
mov
in
mov
lock
add
repnz
ljmp
movsb
xor
out
push
mov
stc
in
mov
in
jle
adc
orb
int
daa
ds
stc
cli
sbb
cmc
inc
lock
mov
xchg
jg
ret
sub
sub
jp
cmpsb
or
mov
mov
push
sbb
aam
jbe
nopl
sbb
rcrl
cmpsb
pop
movsb
jns
pushf
xchg
lcall
dec
loope
mov
mov
or
pusha
lock
jo
repz
mov
imulb
add
push
movsb
stos
pushf
fcmove
cltd
inc
xchg
sub
jmp
es
pop
mov
in
xchg
sbb
mov
rep
add
dec
rcrb
ja
xor
test
dec
lds
pop
pop
movsb
sub
or
ret
mov
adc
push
and
xchg
xchg
lods
sub
jl
or
xchg
jo
aas
ja
inc
sub
cmp
lahf
cli
xchg
fdivl
jae
push
imul
adc
jle
sub
mov
scas
test
pop
or
add
stos
xchg
pop
arpl
cltd
jl
lock
hlt
fdivp
mov
js
cld
cmp
mov
popa
aas
and
lahf
or
or
lods
movsb
das
lahf
cli
insb
push
sub
int3
mov
mov
or
cmp
xorb
push
rorl
sbb
notb
mov
lret
adc
push
cmp
cs
pop
pop
or
sbb
inc
add
and
lods
mov
and
aam
lock
outsl
aam
ljmp
in
das
test
in
outsb
mov
sub
cmc
push
repnz
cmp
cmp
push
sub
push
push
push
cmp
mov
cmp
div
cmp
sub
test
sub
jp
dec
pop
mov
cmp
jge
push
push
mov
test
xchg
int3
arpl
or
popf
jge
jnp
sub
outsl
mov
addb
xor
std
lods
repz
sbb
cmp
inc
jae
shrl
push
cmp
mov
mov
int
push
bound
push
repnz
pop
mov
mov
flds
xchg
push
repnz
lods
pop
bound
test
mov
mov
push
out
mov
aas
adc
loop
xchg
mov
ficoms
int3
pop
pop
flds
icebp
push
shr
or
dec
mov
lret
lcall
add
fcompl
mov
push
fmull
loop
mov
daa
aaa
mov
arpl
lods
test
int3
pop
test
pop
daa
sarb
xor
mov
std
arpl
xor
mov
and
sub
pop
xchg
lock
push
jmp
scas
scas
sti
push
mov
movsb
or
push
cs
dec
xchg
shlb
mov
push
and
mov
inc
in
mov
imul
rcrb
loop
dec
inc
int3
shll
mov
shr
pusha
or
hlt
lods
jp
je
cli
cmpb
xor
cltd
ret
adc
push
xor
push
dec
push
mov
xchg
iret
cmp
push
imul
dec
movsb
mov
sbb
or
imul
scas
xchg
int
jnp
pop
xor
xor
fsubp
xor
inc
in
fcmovnbe
jno
jle
shrl
pop
mov
mov
sbb
inc
pop
lds
and
movsl
mov
aaa
adc
and
add
push
aaa
ljmp
addr16
xor
jle
sub
jecxz
mov
xor
mov
jno
cmp
mov
insl
ret
aad
and
ficomps
fsubrs
stos
popf
xchg
mov
sbb
bound
sti
jge
call
je
fwait
cmp
jb
pushf
ss
es
addr16
jl
cs
push
and
mov
dec
jp
pop
xor
outsb
lret
gs
xchg
pop
jns
mov
cmp
sbb
xor
dec
ljmp
inc
movsb
lods
leave
cmpsl
xchg
sub
cwtl
fiaddl
or
xchg
sub
cltd
add
mov
inc
xchg
lahf
adc
mov
adc
arpl
dec
out
mov
and
lods
push
xchg
push
cmp
lods
push
fidivrl
testb
jg
dec
push
inc
rol
movsl
jne
sub
popf
lret
cmpsl
cli
mov
ljmp
loopne
and
push
test
lds
sar
and
rclb
mov
pop
aaa
mov
outsb
cmp
adc
adc
andb
pop
lcall
out
mov
test
stos
div
movsl
pop
jnp
mov
xor
pop
mov
mov
outsl
pop
xchg
jne
push
mov
test
xor
enter
or
subl
test
popf
out
cmpsl
roll
mov
out
xchg
cmpsl
stos
jmp
sbb
xor
sbb
xchg
sbb
stos
lret
shr
pop
jae
cmp
ljmp
xchg
ljmp
mov
mov
jne
mov
push
jae
sub
jmp
dec
out
popa
cltd
xor
test
dec
cmp
jp
es
jo
add
adc
in
and
mov
popa
test
mov
aam
aaa
subb
adc
rep
mov
cmp
scas
xor
push
rcrl
enter
push
xchg
repnz
mov
les
rolb
mov
adc
js
xchg
mov
mov
mov
xor
mov
push
cwtl
and
adc
inc
pop
mov
mov
dec
and
dec
rorb
add
sbb
mov
and
dec
adc
pusha
ret
daa
cli
adc
enter
les
out
and
xor
int3
sbb
test
jle
cwtl
cmp
xorb
cmp
ret
dec
sbb
push
test
mov
push
shrb
int3
fdivrs
outsl
or
sub
arpl
push
push
xchg
mov
mov
dec
or
push
test
cmpsb
dec
lods
mov
dec
mov
out
cmc
and
or
mov
and
hlt
cmpsb
in
in
add
in
mov
sbb
test
sbbb
sbb
dec
mov
push
lahf
inc
jo
mov
xchg
lods
cwtl
xchg
hlt
pop
mov
scas
rclb
les
inc
ss
jg
push
cld
adc
jb
pop
lcall
mov
push
aaa
push
aam
daa
ss
pop
cs
or
push
add
ret
or
das
pop
pop
inc
push
push
jno
data16
mov
in
lret
pop
pop
pop
dec
xchg
lret
cli
mov
mov
loope
lahf
addb
cmp
cmp
test
movsl
adc
adc
adc
xchg
push
sub
jb
shlb
mov
pop
fcos
xchg
xor
mov
psrlq
les
xchg
shll
sbb
and
push
push
add
rclb
je
adc
imul
je
repnz
sub
cmp
xchg
sub
dec
aaa
lods
out
imul
pushf
bound
mov
enter
mov
sub
cli
pop
adc
mov
mov
xchg
dec
out
shlb
popf
icebp
xchg
add
rorb
popf
fs
cli
push
xchg
hlt
fldcw
dec
xchg
xchg
pop
out
xchg
and
xchg
xchg
enter
adc
movsl
lods
insb
and
out
jbe
cltd
cld
xrelease
cld
xrelease
je
inc
je
cld
jecxz
call
adc
mov
sub
xor
in
adc
push
daa
dec
imul
pusha
mov
mov
data16
ss
sub
dec
movsl
popl
push
movsl
dec
add
loopne
add
fstpt
jecxz
das
push
fsubs
cmp
cmp
inc
fadd
xlat
or
movsb
hlt
aam
sti
sub
adcl
pop
pop
insb
movsb
cs
imul
jl
loop
mov
mov
insl
insb
dec
push
push
test
adc
lret
mov
add
push
mov
lret
repnz
je
js
add
pop
xchg
int3
mov
sti
inc
mov
in
mov
dec
push
add
ja
jno
or
mov
aad
or
xchg
add
mov
mov
test
add
cwtl
out
sbb
add
stos
in
mov
add
test
dec
dec
sub
arpl
pop
xor
mov
daa
jl
mov
cli
hlt
adc
cld
adcb
bound
movsl
jae
push
nop
jle
xchg
mov
pop
rcrb
sub
sbb
test
gs
pop
inc
add
mov
call
adc
and
lds
or
ja
popa
ss
arpl
mov
sub
dec
jae
out
insb
aas
push
lds
mov
sub
daa
push
in
mov
fcom
jp
lret
adc
add
xchg
repnz
sarb
out
mov
insb
mov
pop
cmpsl
sub
stc
xor
push
sub
andb
adc
and
or
stc
sbb
imul
cwtl
ljmp
sahf
dec
pop
cmp
mov
adc
movsb
or
imul
or
sti
adc
mov
lds
lcall
mov
push
lock
shr
xor
lahf
ss
pop
and
pusha
sbb
xchg
inc
mov
mov
push
add
or
push
test
jle
movsl
or
insb
sbb
jns
mov
xor
imul
fs
or
or
mov
ficoms
lds
jg
xorb
aas
push
inc
mov
shl
loopne
add
push
add
mov
stos
cld
cmpsb
les
int3
les
loop
xor
add
push
outsl
push
mov
push
jmp
jge
xchg
xchg
and
sbb
mov
and
in
xor
mov
stc
lcall
or
jne
mov
jecxz
inc
push
imul
cmp
jbe
loope
mov
nop
and
repz
sahf
and
in
mov
add
sbb
xchg
sbb
lods
xchg
add
in
cmpsl
in
hlt
imul
pop
cmp
push
ds
xor
into
fsub
or
mov
cwtl
jecxz
push
fidivrs
cmp
xor
fisubl
or
cmpsl
test
cmpsl
dec
lea
or
movsb
lret
lods
stos
xchg
xchg
or
mov
fs
mov
xchg
mov
popf
pop
add
aaa
lcall
loope
mov
lea
mov
mov
cltd
repnz
dec
pop
mov
std
mov
pop
std
clc
mov
mov
clc
push
rcll
loop
in
xchg
mov
call
push
pop
or
xorl
cmpsb
nop
fstpt
push
adc
sbb
pushf
push
push
loopne
shl
fidivl
xor
ds
pop
mov
mov
cmp
push
fstpt
js
dec
pop
ja
cmp
cmp
mov
cmp
xchg
xchg
jge
xchg
fidivs
mov
and
mov
mov
mov
ds
sub
pop
sub
mov
mov
nop
pushf
js
roll
scas
test
or
jae
insl
imul
jo
les
or
push
push
xchg
fwait
or
mov
xchg
rcll
adc
or
xchg
lret
rcl
cs
aas
ljmp
push
int3
repz
rolb
push
mov
sub
outsb
movb
cltd
push
cs
scas
lods
cmp
hlt
push
lret
xor
idivb
lahf
pop
outsl
jl
cmpsl
and
push
sub
out
fcoms
call
mov
mov
and
call
or
loopne
mov
push
xor
fidivrl
neg
add
xchg
mov
lods
push
stc
out
fs
repnz
mov
mov
jecxz
jb
jb
inc
or
dec
xor
ljmp
rcrb
aam
push
or
adc
mov
add
in
cmp
xchg
movsb
pop
push
es
mov
gs
and
push
stc
je
cli
insl
mov
mov
cmp
push
jmp
aaa
sbb
ljmp
xor
fsubrs
jne
xchg
and
sti
sbb
ljmp
and
or
adc
jp
nop
adc
cmp
xchg
push
shlb
imul
xchg
fwait
dec
cmp
dec
xchg
cmp
push
ficoml
pop
ret
out
pop
add
inc
and
sub
xchg
in
sub
mov
sub
lahf
ds
ds
pop
push
push
stos
adc
inc
test
dec
push
jno
cmp
or
push
mov
mov
daa
adc
sub
xor
pop
int3
aam
shl
or
pop
adc
pop
dec
or
sub
mov
enter
pop
rcrb
or
and
mov
into
xor
pop
push
ds
rcrl
or
mov
in
mov
inc
dec
inc
jae
pop
pop
add
sti
int3
sub
rol
ljmp
repnz
adc
add
ja
std
sbb
inc
cld
test
test
lret
int
push
mov
push
inc
dec
or
sub
and
and
in
push
mov
cmpsl
sbb
cltd
xchg
rclb
fisubrl
int3
sub
decl
add
cmp
gs
sub
out
call
mov
ss
xchg
dec
mov
mov
das
mov
bound
xor
cwtl
mov
int3
aam
pusha
xchg
xchg
int
xchg
sub
pop
jo
js
in
cmp
push
and
push
test
mov
or
out
aaa
sub
mov
pop
jo
pop
inc
jnp
int
dec
inc
rcrl
push
out
addr16
movsb
push
enter
into
lret
shll
sbb
pop
inc
adc
in
clc
popf
mov
push
into
sbb
push
popa
adc
repz
stc
sub
add
dec
ljmp
push
cmpsl
jge
addr16
out
xchg
lcall
pop
mov
push
test
out
xchg
repnz
mov
inc
cmc
xor
xchg
addb
cmp
cmp
insl
fs
mov
xlat
push
sub
mov
data16
push
pop
and
insl
mov
lods
pop
inc
cwtl
das
jl
dec
push
mov
push
push
push
sub
adc
insl
aam
jnp
xor
or
aaa
test
jl,pt
xchg
cmp
scas
idivl
in
lcall
cmp
hlt
and
and
call
fstl
repz
xor
push
jno
jl
sub
test
je
xor
ds
movsl
xchg
dec
imul
xchg
les
inc
sbb
fldenv
movsl
cmp
ds
xchg
jnp
mov
pushf
mov
jbe
mov
adc
push
fdivs
loope
std
inc
popf
mov
mov
ljmp
outsl
mov
xor
mov
or
sbb
iret
sbb
lea
pop
sbb
or
sbb
push
arpl
out
or
sarl
cmp
xor
adcl
jae
adc
and
xchg
pop
xchg
in
mov
push
outsl
sub
or
dec
xor
in
cmp
je
jae
cli
ss
iret
cltd
mov
in
dec
scas
cmpsl
cmp
aaa
out
or
stos
cmp
lcall
shlb
dec
flds
adc
cmp
mov
push
and
inc
gs
sbb
adc
repnz
dec
inc
sarb
out
fs
jns
mov
out
lea
aad
xchg
xor
mov
push
sahf
sub
jae
add
mov
das
mov
mov
sub
mov
mov
and
mov
inc
stos
jecxz
mov
mov
mov
hlt
or
cwtl
xor
xor
xor
xor
pop
arpl
popa
cmp
mov
js
xchg
and
or
sub
xchg
popa
push
push
pop
loop
mov
mov
dec
cltd
sub
in
pop
lods
cmp
cltd
call
pop
cmp
test
mov
xchg
into
aaa
push
xchg
push
push
inc
dec
push
mov
cltd
inc
cmp
mov
pop
jae
loop
rorl
out
jo
rcll
push
andl
sbb
dec
sub
lock
addr16
in
sub
sarl
adc
mov
mov
pop
es
mov
std
xchg
jb
nop
loope
mov
adc
andps
pop
scas
sub
mov
jbe
sbb
test
lahf
or
cmp
cltd
loop
add
insl
and
or
push
jae
pop
ljmp
sar
sbb
pop
test
pop
xor
push
push
jmp
nop
mov
std
inc
loop
pop
aaa
ds
mov
pop
sbb
sahf
xchg
dec
add
sar
sub
repnz
addr16
cli
xchg
mov
xor
notl
sbb
sarb
mov
loop
xor
jb
fistps
xchg
or
stos
and
out
fcoms
xor
data16
mov
sbb
imul
imul
lods
push
inc
push
fstps
popa
rcrb
add
popf
ret
loope
int3
push
pop
adc
push
dec
enter
ss
jae
repz
jmp
mov
jg
aas
rcll
mov
in
mov
leave
cli
cmp
int
pop
inc
push
hlt
imul
jae
push
cli
aam
out
decb
jo
fistps
xor
inc
shll
sbb
mov
aad
icebp
sbb
sub
dec
cli
xchg
mov
movsb
sub
sub
cli
xor
xchg
test
mov
pslld
jno
xor
mov
mov
call
push
ss
fs
xchg
std
pop
or
into
xlat
jmp
scas
mov
les
sbbl
push
std
sub
cwtl
popf
add
ds
pop
repz
push
mov
inc
dec
push
mov
fwait
push
sbb
xor
andb
jbe
ss
shrb
imul
js
ljmp
mov
pop
jb,pn
out
aaa
pop
or
mov
addl
mov
cld
push
or
jmp
mov
jp
arpl
into
jmp
xchg
cs
outsb
cmp
or
pop
inc
inc
into
cmpb
pop
loop
push
or
inc
sub
lods
xchg
pop
jl
push
cld
stc
imul
jo
in
ret
pop
jg
mov
orb
adc
lret
pop
jns
xchg
jo
lret
or
jge
int3
fsub
inc
pop
shlb
xor
in
xor
pop
or
enter
rclb
mov
stos
push
mov
or
fidivs
dec
fs
mov
gs
jp
out
out
pop
push
sbb
data16
sahf
adc
or
and
mov
int3
in
sbb
adc
js
or
jecxz
and
mov
mov
lock
mov
mov
in
or
cmpsb
xchg
mov
ret
jo
pop
dec
push
mov
mov
mov
inc
jge
aas
popf
push
daa
fbstp
jl
cs
or
fwait
shlb
das
adc
leave
adc
sti
stc
shl
xor
fldcw
mull
out
push
dec
add
jno
mov
sbb
lret
jg
xchg
mov
cwtl
mov
adc
sbb
movsb
xor
aam
push
or
xor
pop
jno
ds
jmp
cmp
or
rolb
mov
push
repz
cmpsl
test
jp
insl
adc
dec
rcll
xlat
mov
adc
aas
mov
push
adc
and
xor
push
pop
movsb
leave
mov
mov
dec
insb
mov
add
ret
ja
jle
inc
xchg
dec
xor
cmpsb
ret
and
inc
push
and
xchg
sbb
cltd
xchg
inc
mov
push
pop
add
ljmp
sbb
cmp
add
shlb
mov
ja
test
add
xchg
stc
std
cld
xchg
adc
int3
rcrl
jmp
aad
jle
mov
ds
nop
mov
stos
lds
je
cmpsl
sub
and
aam
mov
pop
insl
cmp
push
push
sub
icebp
pop
inc
or
dec
sub
movsl
mov
test
jno
push
xor
into
inc
int3
insl
dec
push
mov
roll
iret
lock
dec
pop
pop
aas
lcall
fcompl
lds
mov
imul
scas
test
cli
cmc
loop
cs
data16
enter
jnp
adc
iret
es
mov
aas
dec
sub
push
clc
mov
bound
outsb
mov
sbb
mov
popa
loop
hlt
cli
lret
lock
xorl
shll
mov
rcr
mov
dec
ds
ror
repnz
into
cmpsl
sub
imul
adc
xor
jne
and
sub
mov
mov
decb
test
mov
pusha
enter
std
mov
pop
adc
xchg
jge
cmp
movsl
cli
or
and
sub
test
and
and
hlt
sub
loopne
testl
adc
cmc
ss
rcrl
mov
push
or
mov
inc
leave
jecxz
pop
pop
adc
jbe
jmp
aam
jle
aas
xor
dec
in
push
xchg
je
mov
or
pop
pop
aad
andl
outsl
mov
subb
mov
fbstp
ds
and
sti
cs
mov
cld
xlat
aas
jge
clc
out
xor
pop
scas
or
or
pop
or
push
add
push
mov
inc
mov
mov
or
loop
fiadds
call
mov
stos
adc
movntq
in
xchg
mov
sarl
mov
cmp
js
mov
mov
add
subl
jmp
shlw
jmp
shrl
movsb
les
icebp
insl
inc
push
hlt
sub
xor
hlt
mov
mov
cld
cmp
cmpsb
sbb
movsb
mov
pushf
inc
add
lock
inc
lahf
push
mov
aad
add
nop
loope
push
cmp
push
cs
and
dec
xchg
xchg
cld
pop
mov
fcom
mov
in
lock
add
jge
mov
aaa
sub
sub
cmp
mov
fistpll
dec
mov
dec
sbb
jecxz
push
push
cmp
sub
lret
and
les
ss
clc
mov
js
mov
push
or
cmpl
pop
icebp
jle
imul
add
xchg
pop
jne
and
xlat
pop
mov
cmp
xor
in
test
shrb
cs
call
xor
les
pop
xchg
mov
stc
push
fidivs
cmpsl
xchg
or
sbb
stos
ficoml
or
jecxz
cmpsb
mov
sub
cmp
les
lcall
jnp
pop
xchg
loop
adc
inc
insl
mov
outsb
sbb
fs
mov
cli
test
out
repnz
loop
adc
mov
mov
shll
mov
sbb
sub
cmp
in
cmp
movsb
psubsb
xor
dec
sub
or
rorl
mov
mov
cwtl
mov
mov
xor
or
aam
enter
cmp
xchg
mov
lcall
mov
fcompl
jp
cld
mov
mov
inc
test
jecxz
test
or
push
loop
in
inc
dec
ljmp
call
mov
inc
lock
into
je
sub
frstor
mov
xor
in
ljmp
mov
pop
sub
push
push
mov
xor
stos
fisubrl
and
fnstenv
ror
mov
pusha
in
jne
or
sub
in
adc
aas
add
inc
bound
dec
sub
shlb
jge
inc
in
leave
inc
and
jae
shr
inc
js
fcoms
jl
sub
in
adc
aas
inc
rolb
dec
adc
mov
adc
mov
or
lret
ds
push
and
add
jecxz
add
xchg
adc
roll
xchg
pop
pushl
xchg
push
or
mov
push
mov
repz
aaa
sahf
push
rcrl
stos
setp
mov
rcrb
ror
popf
pop
scas
inc
sub
add
pop
in
pushf
cld
das
bound
cmpsl
mov
cmpsl
or
ljmp
and
adc
nop
pop
jae
jno
ret
das
call
cmpsb
int3
int
inc
sub
jg
out
push
and
sbb
cmp
pop
cmpsl
xchg
daa
xor
xchg
or
test
push
call
push
xchg
and
push
xor
xchg
rclb
cmpsb
xchg
ja
pop
and
std
push
leave
fimuls
mov
cmp
mov
pop
int3
lret
lret
not
cmp
andb
mov
push
add
push
out
dec
mov
cmp
jg
lods
push
fldt
push
sbb
in
fdivl
xor
pop
loop
pop
jl
dec
jne
xor
pop
pop
xor
or
cmp
shlb
xor
ficompl
and
or
fidivrl
mov
pop
fsubrl
cmp
mov
sub
sbb
test
cltd
xchg
xor
cmp
dec
push
mov
outsl
mov
ds
in
insb
pop
jecxz
xlat
jb
hlt
xchg
fsub
in
mov
pop
xchg
xor
xchg
nop
in
in
and
lcall
mov
cwtl
sub
shll
ret
xor
addr16
shl
in
pop
pop
int
repnz
add
add
scas
inc
sbb
mov
pop
mov
aam
shlb
sub
pop
and
pop
adc
dec
addl
mov
sbb
outsb
adc
push
stos
and
mov
repnz
inc
je
ljmp
outsb
int3
lret
sbb
fucom
sbb
jge
aad
psraw
test
int3
fdivs
lcall
sbb
pop
xchg
dec
xchg
imul
fdivrs
jbe
hlt
dec
insl
jp
mov
push
es
test
xor
fsts
loopne
cmpsl
mov
mov
ds
mov
cmpsl
sti
data16
rorb
or
es
mov
jl
mov
jl
fdiv
lret
int3
movsb
xor
add
dec
xor
and
in
sbb
adc
jo
xchg
aam
sbb
cwtl
insb
push
addr16
js
sub
mov
dec
mov
aad
in
fs
xchg
inc
jb
loope
pop
sub
ret
int3
mov
loopne
ret
ljmp
test
push
add
fldl
daa
pop
add
push
sub
jmp
sub
lods
cli
lods
inc
sarb
dec
jne
mov
arpl
in
sub
push
pushf
mov
cmpsl
sub
aad
xlat
nop
push
lea
arpl
xor
cmp
es
or
xor
jle
dec
rolb
or
inc
aam
mov
enter
lret
jp
fxch
jle
add
cltd
pop
adc
push
xor
xor
outsl
mov
out
xchg
dec
adc
pop
int3
mov
lcall
push
ljmp
push
mov
mov
out
xchg
push
mov
pop
sub
push
daa
sub
mov
push
aam
push
add
ss
orb
test
cmp
sub
cwtl
and
flds
aam
fists
orl
jg
push
test
in
sbb
enter
jmp
or
lock
dec
imulb
sbb
mov
mov
dec
repz
repz
int
fdivrs
ja
ds
or
inc
push
add
cli
sbb
push
addr16
pop
insb
inc
fldenv
fisttpll
in
aas
fs
bound
aas
adc
repnz
inc
ds
clc
mov
push
adcb
test
call
dec
adc
push
mov
lret
and
stc
je
pop
shlb
inc
cwtl
adc
cmp
mov
dec
mov
mov
repz
mov
inc
subl
push
stos
lea
mov
xor
into
aam
cltd
mov
repz
xchg
pop
shlb
push
icebp
aaa
in
loopne
add
xor
lret
in
cld
xchg
movsb
pop
mov
inc
je
pop
lcall
hlt
out
lahf
or
imul
lcall
mov
mov
add
xor
cltd
popa
pop
fwait
xor
imul
jmp
movlhps
mov
mov
ljmp
inc
jae
js
push
mov
std
cmpb
dec
cmp
push
xchg
mov
sbb
xchg
mov
jl
push
clc
push
or
and
mov
mov
test
mov
sbb
cmp
sub
and
add
mov
orl
in
loopne
stos
ret
and
repnz
in
xor
mov
data16
inc
outsb
mov
mov
sbb
cld
ljmp
call
mov
xor
fucom
movb
in
inc
xor
rclb
lahf
xchg
dec
pop
jecxz
dec
mov
jne
insl
pop
sbb
ror
jae
sbb
es
popa
hlt
dec
or
mov
or
mov
pop
xchg
cld
cmp
or
inc
cmp
cltd
cmp
mov
test
jmp
pop
cmp
push
mov
popf
xor
dec
ss
test
sbb
lahf
cld
or
jecxz
or
mov
popa
stc
pop
ljmp
cmpsl
imul
imul
aam
bound
cmp
xchg
xlat
pop
or
sbb
mov
test
inc
imul
lea
add
fsubrl
jo
inc
pop
shrb
dec
and
scas
ret
jno
js
cmc
rorb
rcrb
dec
adc
or
mov
mov
pop
jg
decl
cmpsl
incl
lock
add
dec
sbb
in
inc
push
ja
movsl
jecxz
pop
pop
pop
pusha
and
dec
cli
and
mov
mov
inc
icebp
pop
or
cli
sub
jmp
or
mov
jne
out
mov
testl
sbb
inc
or
loopne
mov
mov
xchg
hlt
jmp
in
adc
andb
pop
pop
pop
movb
ljmp
jne
cmpsb
cmp
std
or
xchg
cli
mov
sub
and
ds
loopne
mov
jmp
jb
out
ds
shr
hlt
pusha
sub
mov
lret
mov
pop
fcomps
sub
push
mov
aas
lahf
mov
mov
xchg
fwait
mov
loop
fadd
pop
sbb
inc
dec
dec
push
bound
fs
pop
enter
push
fbstp
ljmp
or
push
in
jl
adc
sbb
scas
imul
inc
lret
lcall
fwait
cltd
hlt
enter
fisttps
iret
pushf
sbb
sbb
pusha
mov
ljmp
add
leave
sub
jecxz
pop
jge
mov
jp
loop
ja
repnz
inc
in
inc
lea
xor
inc
push
test
pop
fmull
ret
sbb
and
pop
andl
mov
fs
mov
add
mov
loopne
movsb
int3
xchg
test
mov
ja
adc
adc
in
mov
jo
mov
iret
dec
cmp
mov
pop
mov
shll
mov
mov
dec
test
mov
notl
lock
aam
ffreep
mov
mov
jg
outsb
aam
push
add
clc
jbe
rorl
push
sub
jle
cmp
or
out
lea
mov
push
aaa
hlt
inc
pop
mov
cmp
pop
stc
stos
mov
mov
pop
insl
js
adc
or
jmp
or
out
jmp
xchg
xchg
ror
pushf
les
rorl
add
pop
inc
jbe,pn
cmp
lds
lods
aas
push
aaa
jmp
in
das
scas
pop
sbb
pop
lock
dec
xchg
push
mov
mov
daa
sarl
out
xchg
dec
push
mov
push
xor
mov
cmp
cli
sub
sub
mov
sub
mov
jg
and
cmp
mov
xor
pushf
or
stc
stos
push
add
inc
insb
stos
jns
les
nop
loop
xchg
adc
movsl
cmp
cmpsb
hlt
scas
out
mov
das
mov
insb
addr16
sub
pusha
loop
sub
xchg
stos
mov
int
xor
mov
in
aam
mov
pop
fwait
or
add
gs
mov
movsl
shr
sbb
jne
mov
lods
sahf
inc
mov
mov
repnz
sub
loope
pop
subb
ficompl
pop
rol
push
mov
ss
and
out
add
push
mov
adc
add
xor
adc
push
inc
jo
ror
repnz
lock
push
ret
mov
stc
cs
push
and
aas
push
lods
in
or
xchg
movsb
shr
imulb
mov
pop
mov
loope
or
and
movsb
mov
jl
adc
xor
adcb
sub
push
into
inc
dec
mov
or
or
xchg
int3
sub
push
mov
mov
loope
jns
rcll
lds
sub
cmp
pop
lds
mov
out
fstl
inc
lods
dec
or
cmpsl
rep
popa
push
fldl
sub
pop
adc
xor
popa
add
push
mov
xchg
sbb
aaa
rorl
adc
das
ja
pop
cmp
push
or
sub
movsb
xorl
stos
cltd
out
jns
cld
jb
jae
roll
jp
mov
hlt
dec
mov
stos
aaa
and
jae
lea
rorb
or
subb
add
sub
lods
jo
sub
call
insb
sahf
js
sub
or
sub
push
iret
mov
movsl
es
push
mov
nop
cmp
mov
dec
call
into
out
std
push
lods
sbb
dec
mov
mov
in
dec
xor
jmp
xor
test
sub
scas
adc
fdiv
lock
fcomi
add
jno
ret
stc
adc
adc
and
xchg
cs
xor
dec
lds
clc
mov
cltd
mov
xchg
and
mov
notb
xchg
out
aam
int3
sbb
cmpsl
or
pop
sub
add
data16
in
les
pop
sub
int3
cmp
loope
jae
sub
sti
xchg
adcl
pop
scas
aas
cmp
xchg
scas
or
xchg
push
mov
mov
push
adc
inc
data16
in
dec
in
test
inc
ud2
popa
sbb
xor
lret
addl
cmp
or
ds
das
loopne
pop
jbe
shlb
push
dec
sti
cltd
mov
clc
dec
pslld
push
dec
cwtl
xor
adc
popf
dec
mov
inc
hlt
xor
pop
or
out
inc
loop
ja
xchg
jg
test
je
pop
xchg
mov
add
aas
ret
inc
les
pop
daa
pop
sub
mov
rcrl
mov
outsb
lret
pop
lret
push
into
mov
into
xlat
push
pop
jbe
call
inc
lock
push
jno
push
jbe
scas
in
mov
push
cli
pop
pushf
aam
xchg
hlt
inc
lret
clc
int3
pop
shrb
push
jbe
push
sbb
mov
add
and
sbb
lock
aam
popf
cmp
fmull
xor
push
lods
jp
fsubs
sti
scas
rol
mov
cmp
int3
mov
icebp
push
scas
jecxz
push
mov
js
or
mov
enter
push
or
adc
scas
mov
int3
movl
stc
lds
mov
jb
sub
xchg
or
inc
das
mov
adc
xor
mov
das
xchg
pop
clc
adc
xchg
ljmp
mov
rcrl
scas
movsb
lret
cltd
hlt
push
mov
and
mov
jnp
dec
movsl
rcrb
cmpsl
sbb
xor
sbb
and
dec
jne
addb
sub
mov
imul
shrb
and
pop
and
mov
push
dec
pop
stos
jne
adcb
icebp
dec
pop
fdivrp
push
in
dec
mov
dec
jb
hlt
hlt
gs
lcall
push
mov
out
sti
push
or
xlat
movsb
repz
pushf
push
cltd
pop
cmp
add
test
inc
data16
xlat
test
mov
neg
lret
ret
sbb
dec
clc
fadd
xor
shlb
rcrl
mov
ds
sub
inc
push
test
and
dec
lcall
inc
clc
xchg
lock
call
dec
sahf
das
sbb
loopne
push
sahf
xchg
imul
daa
adc
repnz
pop
xchg
xchg
mov
fists
mov
push
adc
jns
pcmpgtb
fsubrl
aaa
jg
pop
movsb
imul
jl
lret
jo
int
xchg
iret
adc
xchg
pop
pop
push
xchg
dec
mov
sbb
cmpsb
cmc
cmpsb
or
fs
test
out
xchg
sbb
sbb
pusha
push
xor
lods
dec
les
push
dec
psllw
mov
jo
negb
pop
sahf
jmp
mov
xor
xchg
sbb
movsl
push
pop
xchg
add
movsb
popa
stos
mov
jae
push
cmp
movsb
clc
cmp
dec
add
std
adc
mov
shrb
mov
add
sub
cld
rcll
lods
movsb
mov
inc
dec
arpl
icebp
cmp
inc
dec
mov
aas
gs
mov
or
sub
cmp
fwait
push
into
mov
bound
push
cli
ljmp
mov
and
dec
adc
sub
sub
sub
shll
inc
sbb
mov
popa
jo
mov
mov
add
xchg
and
sbb
jo
popl
sbb
or
mov
mov
xchg
aad
es
rclb
in
cmp
mov
jmp
mov
or
pop
mov
enter
js
and
test
adc
aam
dec
nop
sub
sarb
hlt
xor
xor
mov
mov
jbe
test
in
icebp
push
cmc
push
lock
and
pusha
sbb
aaa
adc
mov
inc
ja
test
mov
inc
inc
in
mov
xchg
data16
xchg
aad
sbbl
in
pop
fwait
test
xchg
repz
fs
pop
jbe
aas
sbb
fists
push
fwait
mov
mov
jl
es
movsl
mov
int
cli
xchg
sub
jle
es
mov
aas
popf
mov
pop
out
mov
in
dec
cmp
push
pop
ljmp
sub
pop
push
adc
mov
aaa
xchg
movsl
int
loop
push
in
lock
push
daa
aaa
mov
fistl
cltd
mov
jnp
pushf
add
ds
mov
dec
jge
ret
daa
mov
in
hlt
push
dec
mov
cld
xor
lcall
vmwrite
cmp
xor
xchg
or
push
add
repnz
pop
or
jno
out
push
xchg
pop
lods
mov
inc
xor
shlb
sbb
push
push
jp
ds
ret
mov
repz
pop
test
fisubrs
pop
xor
jae
mov
inc
or
lret
cmpsl
les
mov
mov
test
aam
adc
sti
mov
sbb
pushf
jb
push
in
es
fisubrs
aaa
sub
push
push
jnp
shlb
jbe
mov
fdivl
mov
fstpl
push
inc
jecxz
sub
cs
jmp
push
pop
test
fisubrl
inc
jecxz
stos
mov
sahf
lcall
mov
in
cmp
insl
push
pop
and
subl
sarl
movsl
sarb
mov
andb
xor
pop
xor
lods
std
dec
mov
fwait
test
mov
xor
fsts
bound
cmp
cld
or
cmp
pop
dec
adc
insb
cmpsl
sub
xchg
shll
add
jle
test
mov
cli
xor
lcall
sbb
mov
cwtl
rcrl
roll
sub
repnz
lret
loope
sbb
incl
mov
sub
xor
mov
aam
mov
cwtl
xorb
add
popa
loop
mov
jno
cmp
inc
movsl
jle
lea
mov
inc
dec
adc
cmp
fimuls
mov
bound
in
push
push
add
insb
rcrl
mov
pop
je
push
in
dec
xorb
test
pop
jb
dec
mov
cmp
mov
inc
sub
push
mov
lcall
stos
mov
dec
ret
cltd
shrb
xlat
pushf
or
mov
not
shr
sub
pushw
enter
dec
xchg
test
mov
movsb
sub
incl
mov
les
aam
aas
mov
mov
clc
or
into
das
lea
lock
out
push
clc
mov
ror
in
hlt
dec
jecxz
test
js
fsubp
or
iret
add
adc
pop
mov
lret
popa
stos
inc
cmp
cwtl
out
pop
push
hlt
pop
sbb
std
bound
rcll
call
mov
jmp
sbbl
test
inc
je
imul
out
xor
rol
mov
inc
mov
add
ja
push
out
mov
filds
jge,pn
inc
fisubrl
push
cmp
pop
cmp
sbb
ds
dec
jbe
adc
dec
and
cmp
lcall
out
pusha
pop
xchg
or
push
je
fdivrl
insb
xchg
dec
mov
cbtw
adc
mov
cmp
mov
dec
fs
lock
or
mov
jmp
mov
out
in
jmp
mov
jno
incb
movsl
sti
push
mov
in
jmp
fdivr
shr
hlt
sti
cmp
sbb
ret
push
fsubrl
pop
sbb
xchg
sbb
sbb
jl
enter
cmp
leave
xchg
shl
cmp
in
mov
dec
mov
addr16
mov
mov
fucomp
dec
dec
into
jae
mov
cmpsl
inc
xor
push
inc
imul
repz
addr16
xor
mov
or
insb
cmp
mov
mov
xor
ljmp
pop
pop
mov
mov
adc
push
sub
bound
inc
int3
cmp
jmp
outsl
shrl
add
push
repz
dec
popf
cmp
ja
lcall
popf
or
fimull
scas
je
ret
xor
push
sub
adc
inc
sbb
jmp
mov
mov
mov
xchg
cmc
es
xor
cmpsb
add
and
gs
in
cmp
aad
out
dec
jmp
test
gs
push
andl
aam
js
repz
ja
add
inc
faddl
adc
fcoml
cmp
xchg
push
sub
cmp
sub
stos
add
ljmp
out
cmp
mov
enter
outsl
arpl
inc
pop
repnz
fsubrl
fsub
adc
cmp
jne
cld
xchg
sbb
clc
dec
and
in
or
dec
mov
add
leave
pop
mov
notb
out
mov
xor
mov
dec
aaa
cltd
mov
pusha
add
mov
repnz
fstp
and
mov
mulb
bound
mov
adc
js
out
jbe
inc
inc
pop
addr16
imul
push
xlat
mov
xchg
mov
mov
add
xor
sub
xchg
sti
mov
mov
imul
fnstenv
pop
push
int3
sub
push
js
iret
dec
xchg
cmc
inc
out
mov
pop
mov
repnz
ret
sar
inc
repnz
pushf
push
ret
cmp
cltd
mov
loopne
dec
mov
iret
cmp
adcl
ret
insb
inc
outsb
in
lcall
pop
cmp
vcvtps2dq
mov
pop
pushf
sub
outsb
jmp
mov
nop
and
push
aas
outsl
push
xchg
jno
cld
mov
rcrl
fwait
hlt
ds
and
jb
adc
inc
lret
jle
ss
subb
jge
dec
jge
in
mov
repz
inc
push
push
xlat
or
mov
sub
in
lret
loop
int3
out
daa
push
and
test
dec
rcll
in
jb
cmp
lret
xchg
push
test
fcoms
sarb
sbb
push
mov
adc
aaa
cltd
out
std
popf
mov
push
pop
fistpll
test
mov
or
xlat
data16
mov
push
pop
dec
mov
mov
in
or
sub
mov
sub
out
sbb
pop
lret
cmp
sbb
or
or
xlat
dec
into
scas
xchg
je
cmp
ss
push
jo
pop
cmc
inc
cld
add
lcall
jae
out
jno
push
push
xor
test
loope
ja
push
aam
jne
in
jb
xchg
inc
or
push
addl
push
ljmp
pop
imull
xchg
out
je
jmp
jmp
adc
or
jmp
into
cmc
loop
push
out
dec
fsubrs
inc
cmpsb
xor
stos
lods
fs
mov
fs
fidivl
cmpsl
mov
cmp
pop
mov
fistpll
pop
push
stos
push
inc
xchg
sti
jl
mov
add
cmp
imul
in
jbe
out
cmp
cmp
mov
mov
or
xchg
xchg
fiaddl
stos
mov
popf
dec
dec
in
dec
cltd
xchg
mov
mov
dec
inc
aaa
es
lahf
clc
aas
je
or
pop
dec
pushf
inc
gs
orl
loop
cli
sbbb
mov
mov
jmp
xor
or
call
loopne
pop
mov
jmp
cmc
sub
or
in
mov
sbb
dec
inc
sub
mov
lock
dec
pop
mov
ret
addb
push
outsb
mov
jle
sub
push
or
mov
push
movsb
ret
mov
pop
adc
jle
fucomip
lods
imul
repz
mov
push
cld
adc
out
das
fs
and
hlt
popf
or
clc
popf
or
dec
cmp
push
inc
pop
idiv
push
ficoms
rorb
out
scas
inc
jp
psllw
and
sbb
xorl
push
sbb
add
out
cmp
jbe
pop
inc
jg
adc
or
mov
mov
mov
sub
push
sarl
test
pop
imul
int
and
push
out
insl
jb
rorb
xchg
call
sub
gs
dec
rcr
repnz
stos
mov
pop
aam
cwtl
inc
dec
dec
aad
jb
xchg
cltd
mov
or
dec
pop
adcl
mov
in
rcl
push
loop
aam
push
shl
inc
sahf
mov
push
das
xchg
mov
cwtl
cmp
inc
enter
mov
cs
fsubs
and
inc
lea
cmp
jecxz
mov
int
cmpsl
cmpsl
inc
mov
call
out
shr
push
and
dec
arpl
or
adc
xchg
xchg
sub
ficomps
adc
repz
cltd
pop
cmc
inc
lods
mov
imul
lods
cmp
xor
test
pop
pop
int3
dec
subl
push
mov
and
unpcklps
mov
push
testb
ret
mov
jle
xlat
adcb
movsb
or
adc
xchg
mov
xchg
loop
mov
aad
in
adc
imul
movsb
js
aam
xchg
movups
push
shrb
aam
push
adc
inc
pop
sub
sub
frstor
sub
mov
dec
xor
loope
xchg
lcall
inc
xlat
divl
in
and
pusha
mov
aam
cmp
xchg
or
je
mov
mov
mov
imul
mov
adc
leave
loope
dec
sti
dec
fwait
push
jns
imul
jns
ljmp
sarb
and
es
cmpsl
fwait
add
lcall
mov
xchg
lret
add
int
inc
sbb
push
jge
cmpsl
je
xlat
aad
aas
mov
push
jne
and
gs
xor
sbb
lds
or
es
sbb
das
in
mov
leave
cmp
pop
jle
in
xchg
cwtl
cmc
test
sti
jl
aad
mov
dec
sub
int
push
hlt
mov
subb
mov
in
sbb
cmpsb
sub
test
jmp
inc
cmp
lods
out
in
lods
jecxz
lret
mov
mov
mov
pop
pop
mov
mov
sbb
xchg
add
push
icebp
add
push
cwtl
lcall
adc
mov
mull
jge
add
mov
xor
roll
add
mov
mov
inc
stc
cltd
xorl
mov
addr16
fldcw
inc
nop
mov
sub
jo
loop
repnz
test
shl
dec
mov
pusha
cmc
sbbl
call
mov
loop
data16
add
mov
cmpsb
in
es
inc
sub
pop
jg
sti
jb
pop
mov
stc
lret
xchg
jmp
sbb
ds
pop
xor
hlt
sbb
popa
cli
bound
push
inc
mov
mov
dec
xor
iret
rcll
hlt
sub
lahf
mov
jge
mov
jbe
mov
fidivrs
rolb
lock
in
ja
xchg
movb
cltd
pop
pop
rcl
push
in
push
pop
inc
add
sub
out
push
ljmp
pop
mov
and
pop
mov
push
daa
or
aas
push
rcrb
dec
mov
hlt
fiadds
inc
in
in
insl
xchg
jle
mov
or
addl
roll
pop
adc
popl
lret
fwait
mov
js
xchg
dec
mov
add
sbb
popf
filds
rcll
ficomps
pop
popa
ja
cli
adc
cmp
inc
insl
ficoms
mov
pop
mov
inc
cld
or
iret
sub
jmp
imul
push
out
ret
cli
in
inc
pop
or
sti
sbb
lret
mov
cmp
or
add
bound
adc
add
sbb
jae
pop
lahf
pop
lods
xor
imul
cld
or
jae
mov
pop
pop
stos
sti
cmc
add
mov
jmp
xor
sub
aad
mov
fwait
sub
mull
adc
xor
ret
and
std
push
out
xor
mov
push
pop
pop
aaa
imul
out
dec
out
jp
push
inc
loop
call
cmp
fcoms
add
jg
push
xchg
jno
roll
push
pop
insb
iret
lret
pop
cld
daa
jp
cld
pop
jmp
jmp
sbb
imul
mull
inc
sbb
jg
and
mov
or
adc
sarb
adc
sub
aas
clc
jmp
push
arpl
xchg
inc
dec
or
clc
stos
in
repnz
hlt
mov
hlt
xchg
mov
jnp
inc
lock
xor
mov
or
or
mov
xchg
push
pop
mov
popf
adc
lea
popl
jecxz
enter
pop
loopne
fwait
dec
popf
cmpsl
mov
test
js
xchg
cmp
mov
rolb
inc
std
out
mov
pusha
mov
xchg
inc
aam
movsl
pop
call
mov
mov
test
test
insb
sarb
pop
cmp
mov
in
pop
lea
mov
pop
mov
test
rcrb
or
mov
cmp
push
fsts
xchg
sahf
jmp
jnp
fld
or
mov
cmp
mov
mov
cld
push
adc
cmp
ret
mov
dec
xor
inc
fnsave
pop
lods
mov
lods
lds
inc
addr16
cmp
dec
mov
ret
xchg
je
js
repnz
data16
inc
nop
push
repz
lds
mov
cmp
iret
ss
push
mov
mov
pop
pop
fistl
mov
add
cmp
dec
push
mov
sahf
insb
popl
mov
mov
test
xor
shl
xchg
pop
adc
xchg
mov
fsubs
mov
sbb
push
aas
jne
pop
gs
int3
aam
cmpl
xor
insl
dec
push
push
mov
mov
dec
jp
icebp
jmp
or
pop
pop
xchg
pop
nop
push
adc
mov
cld
in
push
ss
inc
stos
mov
sbb
insb
in
lock
dec
ja
inc
push
adc
sbb
add
mov
ds
es
xor
leave
push
stos
mov
inc
jl
aam
stos
jp
mov
adcl
pop
xchg
xchg
sub
and
jp
imul
rol
aad
iret
mov
push
jno
dec
push
add
addr16
loop
out
xor
xchg
and
push
ljmp
pop
mov
inc
pop
in
adc
mov
int3
xor
dec
cld
das
ss
add
sbb
mov
ds
xchg
add
push
xor
inc
addl
mov
dec
testb
or
mov
adc
pop
in
pop
cmc
dec
mov
cmp
stos
sbb
pop
cmp
mov
add
les
cmp
xchg
std
mov
mov
jae
sbb
stos
mov
adc
bound
scas
ds
and
inc
xchg
mov
push
cwtl
sbb
dec
and
mov
push
jbe
clc
mov
sub
ds
xor
mov
idivb
sti
sub
add
mov
pop
mov
cmp
dec
push
shlb
cmp
add
push
xchg
popa
pop
xor
or
push
dec
mov
incb
daa
cs
cld
int3
imul
cmp
jp
inc
lea
jecxz
not
mov
stos
cld
pop
adc
int3
dec
iret
dec
rcrl
out
sub
push
push
adc
or
daa
test
sub
in
pop
sahf
lret
mov
adc
ror
and
mov
mull
xor
lahf
mov
dec
xor
mov
cli
in
or
sub
pushf
fucomip
inc
outsb
xor
jmp
mov
add
iret
jmp
mov
pop
sub
stos
aad
lods
or
pop
sbb
cmpsb
aad
add
iret
in
or
cmp
test
jnp
cs
jp
clc
stos
push
test
jl
sbbl
sub
pusha
dec
insb
push
and
push
hlt
mov
dec
dec
in
aad
cli
xchg
in
ljmp
pop
stos
popf
and
xchg
inc
pop
adc
cmpsl
dec
rorb
adc
xor
loopne
mov
fisubl
xor
mov
xor
adc
mov
rcl
sub
xor
push
pop
aam
ss
or
inc
es
jo
push
mov
dec
loop
pop
push
movsb
xchg
sub
cmp
jle
jo
lret
test
sar
movsl
jnp
add
fsubp
inc
pop
and
or
jne
xchg
cltd
sbb
mov
pop
adc
icebp
sub
ljmp
mov
push
push
test
and
push
add
mov
fwait
outsl
in
sub
cltd
mov
imul
gs
movd
cmp
sub
adc
mov
out
mov
stos
mov
push
scas
inc
pop
sub
rorl
cmp
shr
lret
cmp
xlat
mov
fwait
lods
outsb
mov
cmpsb
shl
ljmp
inc
call
sbb
call
mov
cmc
fistpll
dec
cld
in
in
inc
ret
test
jl
lret
inc
adc
out
sbb
jne
sbb
xor
xor
repz
sbbb
xchg
insl
xchg
mov
pop
push
ret
mov
push
enter
stc
or
shlb
aaa
jge
sub
mov
inc
add
sti
xor
sub
mov
xchg
push
or
push
inc
mov
pop
cld
mov
mov
adc
cmp
jmp
jno
fisubrl
mov
mov
cmpsl
adc
xchg
add
gs
xor
ret
or
push
or
cmp
dec
fisubl
inc
cmp
out
std
or
mov
mov
movsb
mov
cmp
sarl
pop
in
dec
enter
xor
aas
ljmp
mov
sarb
test
loopne
and
and
shrl
pop
mov
das
outsl
inc
in
push
mov
sahf
lock
mov
lods
sbb
mov
cmpsb
cwtl
adc
or
js
jns
push
mov
ficompl
push
mov
outsb
jne
movsb
pop
in
in
repnz
cmp
jle
insl
es
mov
fistpl
dec
sar
mov
sahf
mov
in
or
or
and
repnz
mov
push
mov
test
pop
jmp
add
cmp
pop
mov
sbb
mov
in
pop
jo
mov
jg
cmpsl
push
hlt
pop
inc
aas
mov
sub
mov
sbbl
repz
mov
adc
adc
rorl
ret
movsb
mov
pop
sub
xor
addl
adc
xchg
mov
outsl
into
jnp
mov
xor
call
push
aam
out
int3
idivb
scas
ds
cmpsl
jp
pop
pop
js
pop
push
adc
mov
and
sub
jmp
xor
js
push
pusha
stos
adc
mov
adc
mov
mov
fwait
pop
enter
aam
dec
popa
sarb
jg
adc
das
mov
sub
inc
mov
cmp
cmp
adc
ret
mov
xchg
fwait
call
int3
sbb
jno
stos
fidivl
pop
xchg
pop
mov
add
int3
movsb
jg
mov
rclb
and
lea
or
pushf
pop
add
and
test
out
test
lock
jo
cmp
fildll
and
cmpsl
shll
stos
xor
sub
loope
aaa
test
imul
ret
push
loopne
sarb
cmpsl
cli
pop
or
je
popf
test
lahf
mov
outsl
and
enter
and
mov
dec
outsl
pushf
or
lret
ret
and
fistl
cltd
inc
dec
mov
pop
dec
data16
pop
pop
mov
cmp
adc
mov
in
mov
sbb
movsl
push
xor
jp
pushf
mov
loope
cld
lds
mov
icebp
or
lahf
inc
and
inc
ret
sub
cwtl
in
dec
sbb
pop
addr16
mov
mov
xchg
pop
ljmp
dec
inc
cmp
mov
lods
insl
pop
cmp
pop
or
cltd
in
subb
or
stos
mov
arpl
sti
sbb
dec
pop
or
out
add
sbb
pushf
jle
inc
fsubrp
cmp
lods
push
cld
sbb
mov
sbb
cmc
es
cmc
adc
lea
mov
fbld
mov
cmpsl
push
push
push
cmc
mov
scas
lods
xchg
dec
push
std
lret
inc
pop
cmp
ret
movl
jb
in
inc
repnz
sub
mov
adc
xor
push
sbb
sahf
cmp
jbe
mov
repnz
test
mov
sbb
and
xchg
sub
push
or
mov
adcb
adc
scas
cmp
imul
adc
fsub
add
adc
pop
insl
push
test
mov
xor
gs
sbb
out
and
iret
gs
loope
mov
mov
or
lcall
xor
in
lret
in
int3
aas
jp
cmp
jb
es
lret
lea
lret
cltd
inc
push
movsb
pop
mov
and
les
call
inc
pop
mov
movsb
lock
bnd
bound
xor
sbb
push
into
mov
out
pop
pop
scas
in
push
out
ds
dec
mov
imul
dec
adc
dec
mov
jle
pop
pop
add
sub
loop
jmp
imul
bswap
push
fs
sti
push
pushf
sbb
mov
ss
cmp
ljmp
cmp
lock
mov
xor
pop
call
xchg
rcr
xchg
sub
cmp
jbe
cltd
test
or
pop
rcrb
test
adc
or
push
pop
and
pop
pop
in
push
pusha
xchg
aaa
jb
in
sbb
popa
stos
mov
popl
mov
sbb
mov
sbb
test
icebp
xchg
jecxz
mulb
adc
inc
xchg
out
xorb
jne
cld
mov
add
fwait
add
xlat
in
dec
or
clc
incb
jp
add
dec
fistpl
mov
pop
xchg
push
jle
out
dec
xchg
loope
push
pop
jmp
movsb
lcall
and
fwait
xchg
inc
sti
push
sub
and
xor
fidivrl
push
cmp
cli
pop
int
ret
orb
mov
std
pop
pop
int
repnz
xchg
or
aam
dec
push
adc
lods
fidivl
sbb
bound
pop
sbb
repz
pop
sub
xor
push
xor
push
arpl
les
xchg
lcall
das
add
data16
and
in
inc
dec
shl
xchg
mov
mov
sub
dec
jecxz
xchg
mov
jmp
inc
fmull
repnz
js
jmp
int3
cli
lods
inc
xlat
dec
mov
add
jle
sbbb
movsb
bound
mov
and
popf
je
pop
push
fadd
fs
orb
dec
in
pop
pop
int
imull
push
add
es
jb
stos
loope
xchg
movsl
sarl
ljmp
pop
adc
xor
into
mov
mov
dec
mov
dec
add
mov
jbe
adc
aad
mov
adc
push
out
out
push
test
addl
sub
movsb
hlt
ret
dec
or
xor
add
inc
dec
lret
mov
add
ret
mov
cmp
mov
rclb
pop
in
in
leave
popa
icebp
pop
push
repz
cltd
rcl
sub
lea
leave
movsb
inc
aad
popl
inc
dec
enter
les
sub
inc
aas
sbb
add
ljmp
sbb
mov
rcr
mov
test
js
cld
sbb
imull
in
insb
cmp
call
mov
xchg
nop
test
mov
jnp
inc
add
pop
fmull
aaa
dec
dec
in
aas
sub
cmp
outsl
jle
call
out
cmc
sbb
xor
jmp
fs
dec
jmp
or
xor
cli
dec
push
xor
pushf
or
in
push
mov
daa
sub
out
ss
ss
sub
dec
push
int3
in
loopne
loope
xorl
xchg
pop
add
mov
push
mov
enter
movsb
fs
rorb
stc
dec
lods
in
ds
out
xchg
cmp
jne
xchg
shlb
sbb
fsubrs
mov
dec
jle
enter
ja
pop
pop
fiaddl
push
xchg
push
cmc
jle
push
dec
push
push
das
mov
inc
mov
mov
adc
adc
fs
lret
std
les
test
sbb
add
pushf
std
pop
mov
mov
ss
roll
xor
mov
addr16
mov
cmpsl
pop
je
les
rcrl
pop
jns
iret
adc
xchg
and
push
popa
lahf
lock
stos
pop
sub
lcall
aad
test
cmp
mov
adc
add
leave
ljmp
pop
jbe
push
mov
pop
mov
inc
loop
mulb
sbb
push
fwait
inc
mov
repz
inc
enter
outsb
loop
adcl
mov
ss
fisubl
or
push
test
aas
pop
push
out
push
fdivr
dec
jae
add
mov
cltd
cmp
add
lods
mov
ret
dec
mov
inc
xor
jge
pop
and
testb
aaa
popf
mov
movsl
ficoml
enter
andl
adc
popa
add
repz
cmp
mov
dec
rclb
sub
scas
xorl
mov
push
pop
jno
xchg
and
int
sub
cltd
pop
fsubrs
mov
or
add
shlb
fcomps
sub
pushf
fistpll
xor
cmp
fstl
lret
or
out
cvtdq2ps
xchg
mov
mov
pop
adc
pop
xchg
push
insb
push
sti
inc
inc
sbb
fidivs
sub
lds
int3
fs
sbb
pop
test
test
jo
dec
icebp
das
push
rcrl
sbb
aas
rorl
adc
ljmp
jmp
jns
icebp
movsb
mov
xchg
push
fisttpl
jno
jl
mov
inc
out
mov
ficompl
daa
inc
mov
imul
out
sub
mov
cmp
leave
out
jmp
repnz
push
pop
int3
push
lods
insl
cmp
adc
or
jae
mov
nop
cmp
incl
jns
cmpsl
mov
rclb
pop
sbb
xchg
inc
jne
frstor
fsubrp
jl
or
daa
jo
inc
aas
cmpsl
or
cli
inc
outsb
push
or
fsubrl
lret
ror
ds
or
sbb
in
sbb
or
ljmp
xchg
inc
push
push
jmp
aad
je
enter
mov
adc
cmp
scas
lret
inc
idiv
insb
xlat
mov
loope
sub
out
dec
xchg
mov
pop
popf
das
rclb
cmp
jge
ljmp
fidivl
int3
push
or
jo
cmp
cmp
cwtl
repnz
loopne
in
mov
or
fstpl
es
mov
xor
pop
rcrb
mov
loopne
push
shlb
pop
push
out
dec
mov
pop
add
sub
addb
scas
inc
jo
rorl
out
pushf
movsl
push
imulb
stos
adc
pop
fldl
add
cs
enter
cmp
call
mov
jo
daa
inc
mov
fcomps
cltd
popf
push
lock
lret
push
rolb
ss
inc
xchg
and
and
lahf
cmp
sub
jb
popa
inc
sub
pop
dec
mov
inc
mov
subl
test
enter
divl
arpl
xchg
inc
and
movsl
jp
pusha
sbb
sub
jecxz
mov
in
or
cmpsb
dec
xor
out
pop
gs
int
cmp
js
arpl
pop
push
icebp
mov
pop
fisubrl
fcoms
call
xchg
sub
inc
mov
aad
xchg
fcoml
hlt
daa
dec
dec
leave
test
test
repnz
dec
js
mov
and
aas
or
cmp
add
push
daa
xchg
sbb
pushf
out
shrb
js
enter
out
sti
outsb
pop
dec
add
sbb
pop
sbb
sub
push
or
in
add
pushf
add
lods
sbb
xchg
clc
cmpsl
lea
fnsave
add
imul
scas
cmp
pop
cld
dec
pop
xchg
adc
loop
clc
fcoms
mov
xchg
lea
rcll
aam
add
cli
sub
xor
or
cmc
test
pop
rcl
dec
test
dec
and
dec
fistps
xor
pusha
cmp
inc
pop
add
rol
inc
push
lea
das
aaa
arpl
jle
push
lods
sti
jne
adc
mov
leave
add
or
aas
loopne
pop
rclb
add
cmp
cmp
test
adc
dec
loope
and
mov
rclb
cmp
lock
addb
ldmxcsr
shrl
mov
fs
mov
ret
and
sub
loopne
inc
add
lahf
push
jns
mov
dec
loopne
ret
cltd
xor
mov
gs
fsubrl
imul
sbb
xorl
inc
in
cltd
int3
sub
in
lret
cld
ret
sbb
in
push
loope
pop
mov
mov
jmp
movsl
xlat
cld
fcomp
sbbb
scas
or
cmpsb
cmp
enter
orb
push
ja
call
pop
daa
push
pop
mov
sub
mov
xchg
dec
sar
add
cld
or
sbb
fdivl
ss
jmp
dec
call
cmp
cmp
imul
dec
adc
sbb
in
lahf
add
in
inc
dec
cmc
push
sub
mov
nop
jno
out
into
lret
addb
add
in
mov
xchg
mov
add
jb
push
std
adc
xor
lea
stos
mov
mov
lds
outsb
aas
jecxz
mov
adcl
or
cli
mov
mov
test
push
out
or
xor
dec
cmp
loope
jp
xchg
add
loope
lcall
cmpsb
pop
cli
scas
mov
fidivs
out
fmuls
icebp
dec
jmp
pop
dec
inc
mov
test
or
ret
std
xchg
adc
cmp
fcmovnb
orl
and
mov
sub
and
dec
push
sahf
dec
add
iret
dec
dec
in
ret
mov
pop
lock
sub
in
pop
pop
jb
pushf
fisubrs
mov
push
push
lds
and
cmp
ds
rcrl
adc
jmp
hlt
xchg
jecxz
jne
movsb
and
jl
and
sti
decb
lcall
mov
cmc
sub
pop
jle
push
rcr
mov
out
std
out
scas
push
pop
cmp
cltd
inc
nop
shll
je,pt
shlb
aad
aad
adc
pop
mov
mov
jp
xchg
xchg
mov
cld
std
fimull
mov
pop
data16
xor
sbb
cli
dec
pushf
push
ret
dec
mov
test
loopne
pushf
lret
lret
mov
sbb
adc
pushf
push
ja
fs
mov
ja
popf
enter
push
js
hlt
arpl
popa
jae
bound
add
push
ja
outsb
iret
or
jo
stos
fs
xor
stos
insb
or
cmp
sbb
inc
or
inc
jg
pop
and
xchg
cmpsb
rcrl
movsl
mov
stos
mov
and
push
ljmp
inc
repnz
stos
les
lock
xchg
out
mov
shll
push
or
mov
xor
enter
fcomi
cmpsb
mov
add
jge
cmpsb
scas
jne
int
mov
movsl
in
jns
mov
pop
pop
hlt
rcrl
mov
pop
jmp
mov
fcmovb
dec
mov
das
fmull
and
dec
repnz
xor
push
or
xchg
lcall
jmp
pop
ret
repnz
hlt
inc
ljmp
stc
xchg
daa
mov
sub
flds
lahf
push
int3
gs
mov
push
test
pop
ds
aad
cmp
sarb
jle
dec
scas
shlb
jp
movsl
adc
mov
fsubs
aad
sarl
loopne
jecxz
xchg
push
cmc
cli
subl
sub
insl
sub
mov
xchg
daa
addr16
mov
stos
xchg
push
out
fcmove
jp
cltd
sub
subb
sub
call
push
jge
jno
push
stc
pop
stos
in
xlat
ljmp
aam
stc
add
jae
lcall
pop
push
stos
ret
xchg
ds
xchg
sub
and
push
in
pop
lret
mov
outsb
jl
mov
stc
mov
addl
pop
ret
popa
xor
or
std
lret
inc
sub
sub
push
xor
out
add
adc
cmp
pop
or
test
add
cmp
out
mov
mov
clc
pop
outsl
mov
add
sti
loope
icebp
xchg
sahf
xchg
pop
sub
rolb
push
insb
into
sub
jbe
pop
pop
btsl
sbb
xor
mov
and
shr
mov
jnp
cmpsb
jno
jge
inc
lods
and
mov
nop
dec
pop
adc
pop
push
clc
and
fisttps
mov
push
jo
dec
xor
mov
sarb
decl
cwtl
imul
jo
mov
cwtl
mov
arpl
push
loop
sbb
jmp
cwtl
into
pop
add
mov
mov
pop
cmc
mov
pushf
push
pop
fcmovnbe
mov
mov
mov
push
pop
scas
loop
shlb
jl
xor
add
popf
push
movsl
out
pushf
lds
mov
in
imul
popl
pusha
addl
icebp
mov
lret
aam
and
cmp
xor
fwait
cwtl
aam
pusha
mov
xor
sbb
cmpsb
rcr
mov
pop
loope
popf
andl
decl
push
inc
in
add
sbb
out
sub
test
push
inc
clc
out
or
xchg
fsubl
fld
cmpsl
pop
iret
mov
push
ret
ds
inc
add
fistl
cmp
cltd
orl
enter
fisttps
or
push
inc
mov
stos
xlat
cltd
push
and
mov
xchg
sub
jno
bts
aam
stc
or
inc
push
push
mov
mov
mov
cmc
mov
ljmp
pop
mov
add
pop
pop
cmp
add
add
and
sbb
movsb
mov
mov
testb
inc
cwtl
xor
pop
cmp
jecxz
cwtl
pop
insl
arpl
bound
jo
jb
mov
adc
inc
sbb
sub
inc
fisubrl
jle
sub
dec
dec
mov
test
scas
xchg
xor
insb
aad
shlb
ret
jbe
lods
xchg
mov
movl
dec
inc
mov
sbb
add
hlt
jle
inc
add
cmc
xor
adc
push
pop
mov
add
jmp
sahf
cpuid
sub
pop
mov
xlat
adc
sahf
xchg
mov
repnz
cmpl
cmp
pop
rcll
test
xor
xchg
add
add
mov
js
sbb
xor
imul
xchg
jo
lret
nop
ja
movsl
push
sbb
add
push
movsl
aad
push
ret
fists
jae
push
inc
scas
fwait
stos
sbb
inc
dec
jmp
sub
test
mov
xchg
fmul
test
cmp
out
cmpsl
mov
adc
mov
sbb
subl
dec
stc
pushf
imul
les
fldcw
push
mov
fwait
cmp
adc
adc
push
sti
outsb
fs
cmp
imul
dec
mov
xor
inc
or
xchg
test
cs
jecxz
pop
outsl
mov
mov
pop
adc
jg
xor
loop
hlt
cmp
fs
stc
sbb
sub
sub
adc
loop
xchg
push
in
jb
out
sub
out
lods
hlt
mov
mov
cs
push
es
jp
cltd
adc
dec
in
cwtl
jge
cmp
pop
lret
add
xchg
add
sbb
hlt
and
sub
adc
in
loop
ss
mov
loopne
dec
xor
pop
xor
jmp
aad
dec
xchg
or
mov
or
sub
sbb
enter
mov
inc
mov
lahf
or
pop
cmp
popf
pop
jae
pop
rcll
sub
aad
pop
or
stc
dec
pop
adc
mov
pop
xor
mulb
mov
ja
xchg
xchg
cmc
divl
and
adc
imul
xor
das
fwait
outsb
inc
lahf
mov
sbb
xor
xchg
ss
mull
and
addr16
inc
mov
sub
add
imull
pop
mov
js
pop
inc
xlat
lea
out
jb
pop
mov
pop
sub
cmpsl
dec
stc
inc
out
sub
sub
pusha
cmpsl
rcrb
adc
pusha
dec
js
int
inc
or
test
pusha
or
dec
adc
out
cmp
xlat
inc
les
scas
cmp
cmp
lcall
loope
mov
xor
mov
xor
mov
sub
test
push
add
adc
cmp
jg
pop
loope
xchg
pop
arpl
dec
les
pop
ret
jl
adc
inc
pushf
pushf
cld
out
test
pop
lret
push
outsb
sbb
enter
in
divb
mov
mov
jmp
jg
sbb
imul
testl
hlt
jne
mov
mov
fdivl
outsl
push
imul
cld
push
push
mov
xchg
ss
aaa
and
jnp
jnp
dec
std
pop
das
sar
add
cmc
ret
inc
xor
into
jae
jge
movsb
jl
or
pop
dec
jp
repnz
mov
jae
sub
sarl
pusha
outsl
xchg
lods
fidivrl
xorb
mov
cltd
test
mov
push
mov
dec
fsubl
stc
mov
add
ss
clc
fwait
subb
add
cmc
inc
in
pop
in
sbb
andb
dec
gs
xor
push
test
insb
fadds
subb
mov
aam
lahf
out
or
pop
mov
aas
adc
test
cltd
jecxz
xchg
inc
popa
addr16
xchg
cmpsb
and
fdivr
ss
cmp
ja
push
data16
pusha
pop
dec
inc
movsl
es
pop
jb
cmp
addr16
xor
pop
pop
add
add
imul
mov
mov
add
iret
cmp
cmp
and
adc
bnd
adc
dec
xchg
mov
popa
stos
mov
push
cwtl
add
or
fiadds
mov
mov
mov
or
cwtl
shlb
mov
divb
insb
cmp
pop
out
test
jns
ss
jmp
xchg
pop
xchg
and
test
fiaddl
cwtl
cmp
sahf
mov
jmp
cld
jecxz,pn
gs
in
push
popa
cmp
jecxz
addb
mov
xor
pop
push
pop
daa
inc
pusha
mov
xchg
loopne
fistl
jmp
xlat
out
rcll
xchg
adc
push
int3
je
push
int3
popa
push
adc
sub
dec
mov
fadds
xchg
and
inc
and
sub
pop
inc
aas
fdivl
rclb
ret
mov
lods
push
pop
pop
shll
jne
adc
out
out
ss
cmpsl
mov
lea
clc
nop
arpl
nop
dec
mov
cmp
movsb
daa
and
cmp
test
loope
rcrb
dec
add
pop
dec
push
push
bound
sbb
out
dec
sub
mov
movsbl
jmp
mov
in
mov
push
mov
lods
jg
sbb
jne
xor
in
pop
inc
test
xor
add
and
jo
add
cmp
sub
or
mov
shlb
test
jge
nop
scas
cmpsb
aad
add
adc
cld
and
dec
pop
out
fisttpll
gs
adc
push
stos
adc
push
adc
ja
out
in
xchg
int
inc
add
bound
movsl
fs
add
xchg
sti
jecxz
xor
add
or
jle
sbbl
sub
push
ljmp
ljmp
stos
sub
cmp
xchg
ljmp
popa
xor
dec
sarb
pop
sbb
lret
adc
add
je
jmp
pop
test
les
pusha
repnz
sbb
inc
mov
xchg
jmp
cmp
add
out
repz
popf
sub
rcr
jge
outsl
cmpsb
dec
cmp
xchg
aam
mov
mov
sub
pop
das
into
xchg
hlt
mov
xor
mov
sub
cmpsb
divl
das
jge
pop
fcoms
mov
add
mov
push
add
sub
push
aad
inc
pxor
push
movsl
lds
dec
inc
lret
xor
push
xchg
jl
sbb
mov
testb
insb
adcl
lcall
es
pop
push
sub
xchg
call
out
into
ss
pushf
testl
loope
test
aaa
add
lcall
add
aam
add
jle
jg
fdivrl
in
std
rorl
dec
js
push
sub
test
fsubs
jg
sbb
dec
adc
mov
and
and
movsb
rcll
roll
roll
mov
decl
pop
adc
dec
xchg
mov
in
inc
lea
stc
ljmp
lea
inc
ss
xchg
and
aaa
aad
inc
bound
pop
test
outsb
lret
and
scas
cmc
pop
mov
jno
sbb
mov
sub
nop
or
mov
jg
adc
pushf
and
mov
mov
stos
cwtl
lahf
jns
or
inc
mov
clc
fwait
neg
cmp
push
out
in
inc
jb
sbb
enter
frstor
sbb
or
jo
cwtl
in
sub
test
cmp
cli
test
je
daa
xlat
inc
cmp
push
jmp
adcl
pop
daa
push
mov
mov
out
ljmp
sbb
out
jbe
cmp
out
jae
arpl
das
or
cli
jle
push
in
fsubrs
add
sub
push
stc
outsl
js
lret
ret
insb
lods
ret
xchg
lea
imul
jb
mov
jae
loopne
dec
xor
enter
fisttpl
or
mov
cmp
out
xlat
cld
lcall
call
rdtsc
push
clc
pop
aam
les
add
ds
arpl
popl
fisttps
sbb
push
call
cmpsb
jle
jge
fsub
jnp
xchg
mov
mov
or
aas
xor
sub
int3
decb
add
addr16
in
and
test
push
cld
adc
ficoms
pusha
xlat
jae
mov
es
into
sbb
pop
inc
jp
mov
add
movsb
repz
cmpsl
sbb
aam
and
mov
fdivrl
mov
hlt
repz
jl
or
mov
push
dec
sbb
fwait
lcall
cmpsl
jg
inc
mov
jnp
cmp
jg
dec
in
dec
mov
mov
data16
mulb
mov
sahf
out
hlt
xchg
xchg
dec
mov
in
lock
cmp
sbb
push
roll
cmp
sbb
sub
xor
pop
xchg
sbb
lods
and
add
int3
push
das
outsl
test
imul
push
fbld
xor
add
cs
xchg
pop
push
out
push
cmp
xor
cmpsl
ss
out
push
mov
setae
inc
push
roll
cwtl
bnd
scas
adcb
loopne
fidivrs
jge
lods
cmpsb
fmuls
and
sti
sbb
dec
add
jle
jb
sarl
bound
nop
jmp
mul
fdivrl
icebp
repnz
dec
and
push
andl
shl
xorb
jecxz
or
jo
xor
dec
push
inc
xchg
pminub
cmp
jp
ds
shlb
and
int
and
leave
lods
sub
mov
push
in
pop
jmp
adc
cmc
pop
push
xor
mov
pop
pop
pop
enter
hlt
ljmp
mov
xchg
jmp
pop
mov
lea
ja
pop
adc
mov
add
or
lods
out
xchg
sbb
and
xor
aam
mov
xchg
std
fisttps
or
dec
ret
stos
jl
ret
sbb
sti
jecxz
jl
pop
mov
fucomip
jb
cmp
ss
mov
push
push
mov
lods
jg
ret
xor
add
inc
popl
and
mov
push
jmp
dec
fmuls
pop
pop
pushf
cltd
fwait
adc
std
movb
jbe
mov
sub
outsb
adcl
cmpl
lcall
mov
lods
stos
cmp
js
rorl
test
lods
adc
adc
mov
pop
in
or
fisubrs
icebp
cmp
mov
jg
in
and
jle
lahf
sbb
ret
xchg
data16
mov
adc
fnstsw
test
enter
jg
xor
popf
cs
testb
ret
jp
pop
pop
push
adc
icebp
cwtl
das
push
les
jl
daa
fdivrl
dec
mov
es
add
lcall
dec
mov
xchg
inc
loopne
fstpl
in
pop
push
lcall
adc
dec
repz
sbb
mov
sub
pop
js
push
push
hlt
sbb
loopne
sub
pusha
cmp
pop
jne
je
inc
fistl
sbb
cvtpd2ps
or
push
xchg
jecxz
dec
jnp
mov
xor
fs
xchg
scas
sub
mov
sub
data16
fcomip
cli
int3
test
mov
cltd
int3
insl
outsb
addr16
subl
jmp
dec
dec
push
insb
mov
ss
in
sub
adc
hlt
push
add
enter
sub
std
pop
sub
dec
shlb
lcall
das
popf
pushf
pop
xchg
fldt
scas
cld
sub
mov
mov
int
test
jle
dec
and
gs
jp
xor
ret
jmp
cmp
mov
movsl
mov
add
ss
push
fbld
mov
or
sbb
insb
inc
pop
xor
mov
add
xchg
jns
adc
idivl
test
cmp
dec
andb
sti
jge
inc
aaa
cmp
sub
inc
add
or
adc
ja
push
rcr
enter
sub
adc
xchg
xchg
cmp
test
mov
pushf
xchg
fiaddl
cmp
jge
pop
data16
cltd
fcompl
mov
push
popa
in
adc
clc
ja
arpl
jl
jne
stos
test
fs
sbb
out
push
or
lret
adc
push
pop
and
popf
outsl
call
dec
dec
pop
sub
loop
adc
sbb
sahf
rorb
lcall
cmp
in
sbb
mov
sar
std
out
push
int
pop
push
jge
sub
inc
pop
xor
push
lahf
xor
pop
ss
cld
sarl
stos
jg
daa
clc
bound
xchg
stos
mov
sarl
dec
shll
sub
lods
mov
addr16
fcom
cmp
mov
lea
fdivrl
pop
jnp
sub
mov
stos
cmp
mov
fldenv
or
push
mov
and
into
data16
enter
xor
lea
add
mov
mov
pop
dec
push
out
inc
dec
push
cmpsl
pop
mov
or
mov
add
pop
add
xor
cli
or
test
fwait
loope
push
repnz
xor
mov
loop
push
cli
ja
xor
clc
insb
fucomip
dec
mov
cwtl
sub
aad
stos
sub
in
pop
mov
inc
sub
xchg
loopne
out
test
sub
lods
jmp
push
xlat
add
mov
ja
adc
inc
int3
jb
stos
insb
lret
jl
out
into
push
xchg
mov
and
push
fcoml
push
std
xor
lahf
stos
out
dec
mov
ds
fdivs
xchg
fwait
bnd
pop
mov
xor
pop
pop
out
push
minps
iret
mov
test
out
mov
push
les
sub
cmp
inc
inc
dec
cmp
mov
push
mov
or
mov
cmp
pusha
pop
gs
and
or
xchg
addl
movsb
pop
sarl
sbb
sarb
jbe
pop
xchg
mov
dec
sbbl
imul
lods
enter
push
mov
mov
int3
movsl
test
cmp
xor
pop
inc
test
testl
scas
xor
and
xchg
or
fsubl
int
enter
or
fs
hlt
push
cld
jg
lock
inc
mov
push
pop
inc
cmp
subb
xor
cmpsb
hlt
clc
add
ret
cmp
jecxz
add
out
xor
mov
call
xchg
fimull
xchg
mov
xor
stos
ffreep
inc
xchg
loop
mov
pop
inc
cmc
les
test
dec
movsb
loopne
fbstp
xchg
xchg
push
imul
mov
mov
sub
push
fmull
jno
jno
push
cli
pop
and
xchg
fistps
push
xchg
sub
mov
scas
shl
shl
and
shrl
aam
test
push
or
inc
mov
mov
jnp
mov
call
cmp
sub
icebp
dec
or
mov
sub
mov
outsl
lods
inc
push
orl
jmp
dec
push
popf
pusha
cmc
cmpsb
and
popf
or
add
xor
xchg
inc
das
mov
mov
mov
das
xchg
pushf
fimull
add
sub
iret
inc
jle
mov
fwait
lods
insb
repnz
jle
push
lret
or
push
jmp
repnz
dec
mov
stos
pusha
xchg
push
ja
fwait
cli
rcrl
and
lcall
ljmp
mov
xorps
xchg
shr
lock
shrb
in
xchg
xchg
xor
push
sub
test
enter
pop
ds
ret
xor
sarl
dec
stc
scas
xlat
decl
ret
je
xchg
cli
cmp
mov
pop
scas
iret
sbb
inc
pop
cs
inc
out
adc
shl
jle
mov
movsb
aas
arpl
jmp
sahf
hlt
sahf
mov
stos
std
rcrl
xor
lods
aam
test
ficompl
adc
insl
loope
mov
sub
test
dec
lahf
mov
daa
pop
push
jae
dec
lcall
jle
mov
outsb
cmp
cmp
outsl
mov
mov
fcompl
adc
jl
rcll
push
jnp
sbb
shll
pop
cmp
cmp
add
ljmp
add
xlat
mov
mov
hlt
dec
icebp
les
pop
pop
dec
fsubrp
sub
and
leave
mov
pop
mov
push
and
out
jmp
inc
test
les
iret
mov
or
push
lcall
test
ljmp
mov
jne
adc
in
mov
and
repz
mov
pop
pop
test
les
call
pop
movsl
sub
sub
mov
cli
enter
clc
xchg
add
repnz
mov
or
jb
movsl
sub
mov
dec
ret
cmp
dec
sarb
mov
xor
cmpsl
lahf
repnz
call
int3
test
dec
out
lods
inc
std
dec
push
dec
mov
adc
fldt
jne
rcr
stos
out
shll
sahf
xchg
cli
adc
pop
mov
jge
imul
cmp
test
mov
test
insl
push
add
jbe
xchg
sbb
inc
xor
xor
daa
pop
or
sbb
mov
mov
repz
adc
pop
adc
dec
ss
xor
cli
sahf
std
imul
fsubrl
cmpsl
loopne,pt
daa
inc
or
xchg
sarl
push
notb
push
cmp
sahf
mov
movsb
adc
test
xor
dec
hlt
mov
push
in
push
test
in
mov
std
push
pop
push
fwait
orb
std
sub
or
push
popa
cmpsb
std
add
pop
test
adc
and
lods
xchg
ret
int3
cmc
addb
xor
outsl
into
mov
mov
rcl
lea
ds
xchg
fimull
in
mov
sarb
jge
adc
add
push
cmp
insb
loop
insb
js
and
fcmovb
int3
fimull
xchg
das
cmp
jle
pop
test
push
push
dec
push
xor
inc
pushf
xor
dec
jmp
adc
pop
into
cld
call
cwtl
hlt
add
adc
mov
fs
adc
xlat
lret
dec
and
shll
mov
jo
mov
jl
mov
xor
test
dec
das
adc
pop
dec
xchg
insb
xor
xchg
sbb
fmull
xchg
push
aas
in
int
push
aas
shl
xor
lret
sub
fidivl
or
adc
mov
into
mov
jmp
mov
outsb
xchg
rclb
mov
and
jns
mov
mov
mov
icebp
jae
push
aad
mov
xchg
lods
adc
daa
cmp
inc
add
or
pop
or
movsl
pop
add
lcall
test
pop
and
cmpsb
lea
imul
adc
add
cwtl
lock
jbe
std
sbb
inc
sbb
mov
mov
dec
sbb
pusha
in
push
or
aas
fisttps
cltd
ss
mov
mov
in
xchg
jmp
cltd
fs
out
lock
sbb
mov
cld
push
mov
cmp
or
jbe
sub
cs
adc
add
sub
push
push
or
lds
sarl
pop
add
push
mov
mov
and
xchg
sub
jbe
mov
jae
jle
inc
xchg
clc
or
xor
or
data16
sub
pushf
push
enter
dec
adc
push
jo
adc
movsb
xchg
ffreep
push
sbb
dec
add
pop
aad
and
xchg
xchg
clc
sarl
lea
mov
lods
fmull
push
cmc
or
xor
pop
add
scas
es
repz
xor
sbbl
mov
insb
push
cmpsb
je
pop
sbb
mov
mov
lods
sbb
testl
std
xor
inc
fiadds
xchg
jns
daa
imul
push
pop
sub
xchg
rolb
popf
incl
sub
adc
cmp
push
push
cmp
repnz
cmp
sbb
adc
pop
sub
mov
sahf
xchg
into
or
lret
jg
aas
or
call
cmp
push
ljmp
add
cmp
mov
ds
loop
imul
data16
mov
js
enter
mov
dec
mov
clc
imul
out
sub
fnstsw
cli
imul
xor
xor
lret
adc
stos
out
mov
cltd
and
mov
mov
xor
ret
insb
out
leave
mov
xchg
aas
add
mov
int
sti
test
pop
push
aaa
and
adc
rcrb
scas
add
jl
andl
xchg
bound
je
popf
mov
mov
mov
jle
test
stos
es
imul
mull
dec
sbbl
iret
sti
sbbb
in
sub
sbb
sbb
xchg
pop
hlt
adc
sbb
adc
aam
cwtl
pop
rolb
popf
add
pop
repnz
sub
or
into
pop
subb
nopl
ret
lcall
outsb
test
push
stos
in
mov
jp
xchg
push
pop
xorb
pop
idivl
pop
out
sub
push
mov
loopne
mov
inc
dec
les
sub
std
add
ljmp
lahf
into
mov
movsb
pop
pushf
daa
dec
out
movsl
cmp
sbb
add
push
pop
das
cmp
cmp
adc
and
mov
push
pop
cwtl
rorb
add
mov
jbe
lods
push
mov
xor
xchg
adcb
sbb
loope
ljmp
lahf
jmp
mov
jl
xchg
insb
cmpsb
xchg
pop
pop
push
push
dec
shrb
iret
aas
add
in
cld
jle
jecxz
hlt
xor
aad
mov
ret
insb
fistpll
push
imul
mov
push
addr16
lret
xor
aas
test
mov
pop
mov
push
mov
push
push
aaa
xchg
pusha
popa
xor
or
mov
aas
cmp
imul
xchg
jnp
in
inc
dec
and
dec
cltd
jl
mov
mov
sarb
addr16
jnp
mov
fidivs
cmp
outsl
add
jo
shrl
and
pop
jo
test
popf
rorb
or
dec
aaa
inc
cmp
mov
adc
movsl
inc
jmp
aas
test
mov
lods
pop
lea
sti
add
orl
sbb
cmp
test
fnstcw
push
pushf
test
inc
xchg
add
stc
dec
mov
lock
cmp
mov
je
rcrb
or
jle
mov
shrl
lock
mov
inc
jle
pop
test
and
popl
and
cltd
push
loop
push
pop
pop
cmp
enter
push
sbb
lret
and
fdivs
repz
pop
loope
imul
xor
sti
pop
push
pop
fstpt
bound
inc
mov
ficomps
popf
in
nop
jmp
mov
loop
pop
sbbb
xchg
jmp
xor
jg
roll
sarb
xchg
inc
pop
rolb
pushf
mov
pop
loopne
xor
fldenv
call
jne
ret
dec
dec
mov
daa
adc
dec
sbb
adc
popf
loopne
mov
mov
lcall
mov
xor
add
pop
adc
ja
cmpsl
or
sar
adc
jecxz
negb
enter
mov
shll
jnp
fwait
push
daa
mov
and
push
rcr
shrb
xor
xchg
mov
dec
mov
shlb
repz
lods
xchg
aam
push
sti
mull
push
fadd
mov
pop
fcmovb
cmp
out
mov
out
cs
add
insl
in
les
pop
xchg
xor
insb
ja
flds
dec
mov
mov
jae
inc
jnp
push
dec
sti
xor
daa
dec
sub
mov
adc
test
dec
adc
imul
outsl
push
inc
lret
aam
fwait
push
adc
rclb
push
mov
aad
sbb
sbb
in
rcll
arpl
xchg
das
fdivrl
sahf
jle
adc
dec
xor
test
mov
aas
arpl
jg
pop
test
jle
adc
rcrb
hlt
jp
shrl
xor
xor
push
sbb
mov
mov
xor
aas
hlt
jno
mov
sub
inc
push
push
mov
int3
sbb
jg
lock
sub
fidivl
pop
xor
iret
mov
xor
movb
outsb
ror
jmp
xor
sub
mov
out
mov
mov
fwait
add
jne
mov
xchg
mov
dec
outsb
lahf
repnz
imull
imul
ret
cmp
pop
aaa
dec
mov
adc
and
inc
xor
push
rdtsc
adc
mov
add
ja
cmpsb
sbb
mov
mov
or
addb
neg
fcomip
push
inc
or
enter
in
popa
adc
pushf
jbe
push
in
call
push
rcrl
xchg
cmp
sub
pushf
and
loope
mov
in
fxtract
in
inc
test
push
push
inc
push
cld
pusha
pop
sbb
jo
add
xchg
mov
push
push
jp
popa
out
sbb
push
loopne
cmp
xchg
pop
cmp
andb
pusha
das
bound
test
push
lahf
xor
loope
cld
xor
nop
mov
xchg
scas
add
push
aad
dec
cltd
mov
icebp
xchg
repz
clc
andb
fidivs
enter
pop
fimull
sub
nop
or
jae
cwtl
movb
mov
outsb
and
mov
push
pusha
outsl
xor
add
in
outsl
mov
lea
imul
xchg
orl
leave
sbbb
sarl
xchg
push
fidivs
ds
imul
mov
inc
ds
xor
mov
xlat
call
insb
mov
negb
cltd
sti
cmpb
xor
pop
dec
sub
shll
xor
push
and
lret
stc
inc
push
std
xor
ret
dec
cli
jge
out
divb
jo
cwtl
addr16
inc
dec
ss
out
mov
inc
xor
dec
sub
jo
test
add
push
cmp
lea
adc
shll
pop
sbb
rcll
inc
lahf
pop
js
xor
push
xor
inc
lret
xchg
fimuls
dec
aam
stos
push
sahf
sub
cli
cmp
pusha
sbb
rcl
jge
rcr
loopne
inc
cmp
push
aas
mov
pop
xchg
push
adcb
adc
leave
xlat
cmp
cmc
mov
inc
lret
mov
mov
addb
in
adc
sahf
aad
fdivp
fidivrs
int3
aam
insl
dec
mov
pop
decb
cmp
xor
das
enter
clc
jo
pop
jecxz
pop
cli
mov
or
pusha
test
fsqrt
aaa
std
insb
cmp
mov
pop
push
imul
pop
pushf
mov
push
das
cmpsb
xor
hlt
xor
ret
in
fstp
mov
xchg
pop
sub
mov
push
mov
out
out
pop
or
adc
or
daa
insb
adc
shlb
test
outsb
in
fisttpl
mov
dec
xchg
cwtl
aad
push
xchg
sub
in
add
jl
mov
jg
cwtl
pop
mov
adcb
sar
mov
aam
dec
roll
pusha
enter
stos
in
daa
lcall
call
inc
jg
shl
mov
inc
jb
push
xchg
int3
sbb
ficompl
push
sub
mov
sub
daa
and
pushf
add
das
ss
in
or
mov
mov
jg
cmp
push
sbb
in
paddsw
cmp
mov
xor
dec
pop
push
jae
cwtl
insb
lahf
hlt
mov
sub
sub
xchg
add
loop
fmul
imul
mov
lds
add
mov
rcrl
cli
fwait
sub
pop
mov
fxch
push
in
add
test
or
int
inc
je
jae
push
push
and
cld
ret
hlt
ret
xchg
add
shll
push
jge
dec
addr16
mov
gs
inc
xchg
inc
mov
outsl
adc
mov
fadd
sub
in
ljmp
adc
mov
sub
pop
cmpsb
les
push
movsl
inc
mov
call
or
mov
dec
cmpb
pushf
mov
xchg
pop
sbb
aam
lahf
flds
cmc
cltd
movsl
lcall
stc
mov
add
fbstp
and
mov
hlt
lret
aam
push
hlt
je
xchg
outsl
bound
jl
push
cmp
pop
scas
movb
arpl
sub
dec
sub
das
inc
cmp
jg
into
jmp
sbb
lea
out
es
xor
push
cli
add
push
push
aaa
cmpsl
and
push
aas
popa
bound
js
add
in
ja
fdiv
pop
imul
outsl
dec
rcll
xchg
jmp
cli
in
loop
sub
mov
setns
jge
lcall
ss
mov
and
das
fistl
xchg
fadds
and
adc
loope
mov
not
and
andl
cmp
jge
or
sub
shl
hlt
daa
dec
cmp
pop
inc
imul
movsl
mov
mov
mov
jo
cmp
xchg
int3
call
insl
popa
inc
popa
push
pusha
sbb
sub
xor
mov
pop
int3
push
adc
mov
mov
sub
es
mov
sbb
movsl
push
jne
rol
sub
mov
cs
mov
and
cmpsl
ljmp
pop
test
cld
clc
mov
or
pop
sarb
or
mov
scas
movsb
insb
les
cmp
cmp
scas
shlb
xor
or
das
insl
mov
int3
adc
xor
fidivs
push
push
in
mov
mov
and
sarl
push
and
mov
and
insl
cmp
adc
cli
dec
adc
adc
popf
push
fdivrl
or
and
jo
clc
test
xor
mov
jo
xchg
mov
push
movsb
inc
lods
mov
lcall
push
jno
int3
dec
test
cmp
fcmovbe
adc
enter
cs
mov
inc
sub
jl
adcb
mov
lods
add
sub
fstps
xor
repnz
in
rolb
add
aam
xor
mov
sbb
mov
push
lahf
lock
pop
xlat
sub
or
xchg
movsl
sbb
sub
sub
in
xchg
cli
mov
adc
shlb
mov
pop
out
push
lods
lea
addb
cmp
rorl
daa
cmp
xchg
add
outsl
dec
mov
movsl
popa
test
pop
subl
push
push
sbb
or
pop
outsb
fistps
adc
mov
andl
es
je
jge
jnp
push
pop
mov
push
push
in
cwtl
xchg
and
add
add
cmp
pop
jo
mov
inc
adc
jae
add
fcoms
mov
jmp
mov
inc
es
fnsave
inc
add
mov
cmp
push
loop
icebp
sbb
arpl
adc
leave
inc
fisubrs
fiadds
orb
lods
insb
lea
mov
sub
adc
or
cmp
das
mov
pop
push
push
pop
push
adc
enter
push
xor
int3
jne
imulb
inc
inc
out
jno
adc
cmp
roll
jne
movsl
sub
jmp
enter
jae
and
cmp
bound
sahf
shrl
int3
mov
cltd
xor
icebp
jecxz
clc
cmp
jns
loope
int3
mov
mov
cmp
pop
ret
adc
scas
dec
enter
das
int
cmp
in
mov
in
adc
pushf
scas
in
fsubrs
pop
jecxz
stos
pop
mov
jl
cmp
mov
enter
call
aaa
and
pop
cmp
or
icebp
ret
cld
ss
cs
fisubl
fnstenv
cltd
dec
test
loope
and
push
mov
inc
push
daa
push
sub
pop
cld
lcall
push
test
enter
loope
roll
sub
leave
mov
mov
jge
shlb
or
pop
dec
cs
cmp
out
loopne
mov
lret
in
insl
sub
leave
jle
jp
pop
sub
jge
push
mov
sub
jp
leave
int3
outsl
pusha
int3
pop
ret
call
movsb
leave
xor
or
mov
imul
dec
jbe
jecxz
and
or
ljmp
and
pushf
xorl
daa
lock
inc
inc
cmpl
addr16
les
es
sarl
cmp
subl
dec
jnp
add
rcl
jbe
cmp
enter
or
sub
pop
ljmp
mov
add
xchg
out
pop
cli
xorb
push
lods
xchg
in
bnd
aas
inc
push
pop
ds
or
mov
mov
shrb
enter
jae
pop
xchg
mov
mov
xor
sbb
push
mov
pushl
jae
repnz
loop
cmp
jmp
icebp
ret
mov
dec
push
idivb
jmp
mov
lock
ljmp
inc
mov
inc
arpl
pop
push
jecxz
in
enter
mov
enter
xor
jns
ret
in
or
enter
pop
popf
and
repnz
jns
mov
nop
xchg
cld
js
pop
or
jo
pop
repnz
sbbb
les
add
sbb
xor
push
fisubrl
lock
mov
movsl
imul
iret
pusha
xor
lcall
pop
ret
fwait
out
sahf
and
xchg
cmp
sub
int3
xchg
push
xor
cmp
in
mov
dec
and
aas
call
cs
movsb
into
push
xchg
push
dec
cmc
cmc
in
push
aam
pop
insb
sub
pop
mov
dec
out
sahf
jle
xor
pop
cmpsl
cmpsl
mov
add
push
push
test
repnz
ret
scas
lcall
ja
lock
mov
outsb
jae
jl
xor
cs
cmpsb
aam
aam
mov
mov
pop
add
popf
push
sub
cwtl
int3
ss
in
xor
sub
xlat
cltd
dec
pushf
nop
dec
aas
cmp
shl
xor
xchg
out
sub
push
ret
cli
lock
inc
add
jg
pop
cmp
test
xor
enter
arpl
cwtl
mov
push
mov
es
adc
dec
and
test
mov
cmp
adc
fistps
mov
pop
ret
cmc
xor
cmp
cmp
pop
cli
xchg
int3
adc
mov
outsl
cmp
pop
pop
aaa
sbb
cmp
pop
lret
inc
xchg
pushf
call
mov
jecxz
insl
fsts
fcoms
dec
sub
sbb
popf
shlb
cli
les
inc
in
enter
daa
push
pushf
xchg
add
mulb
data16
mov
pop
hlt
rolb
fidivrl
hlt
mov
pop
mov
ficomps
push
inc
push
cmp
or
ja
fmull
inc
cli
lcall
notl
mov
push
fisubrs
mov
mov
add
pusha
mov
aad
call
adcb
push
rcrb
outsb
xchg
xchg
mov
cltd
push
cmpsl
loop
xor
ds
ds
or
outsl
data16
loop
add
xor
push
inc
gs
lret
ret
push
shrl
jno
sbb
mov
push
mov
repnz
icebp
ljmp
dec
hlt
leave
mov
icebp
dec
xor
test
std
add
sbb
lea
lods
mov
rcll
nop
es
cmp
shll
je
cli
jmp
sbb
adc
pop
cmc
jnp
inc
div
ret
adc
arpl
mov
in
push
push
cmp
das
push
and
xchg
out
add
mov
stc
sub
int3
mov
sbb
aad
shlb
test
jmp
mov
pop
mov
stos
shr
or
jo
or
ficoms
add
ja
movsb
pop
out
jo
add
or
inc
sbb
lock
mov
cs
ss
scas
cmp
cmp
cmp
fwait
xor
aas
je
enter
jbe
pop
and
outsb
push
pop
sub
cmp
cwtl
push
cli
insl
ljmp
xor
out
pop
xchg
pop
push
insb
and
daa
in
movsb
mov
int3
call
cld
mov
xorb
pop
mov
adc
jne
dec
inc
repz
and
icebp
inc
cmp
bound
jle
adc
leave
push
add
adc
out
insb
int3
sub
shl
rolb
outsl
cmp
xlat
mov
fs
mov
int
or
jp
rcrl
out
les
dec
xor
outsb
outsl
adc
add
out
addb
neg
stos
xchg
dec
fcmovnbe
fadds
bound
jge
int
xchg
xchg
xor
sub
imul
cmp
xor
pop
cli
insb
dec
push
dec
add
push
out
movsl
mov
mov
leave
hlt
or
mov
sub
imul
jl
push
push
outsl
imul
aam
lcall
dec
jne
into
sbb
je
sub
icebp
add
mov
cld
sub
insl
les
xor
or
mov
cld
out
sbb
cmp
jg
jnp
push
insl
subl
jnp
jns
clc
xchg
iret
push
ja
sbb
nop
cmp
out
xor
rcll
sti
fcmovnu
jge
cli
cmp
fnsetpm(287
pop
push
lcall
push
or
or
add
orb
mov
cmp
push
insb
popa
and
call
inc
rcr
int3
into
xchg
roll
js
sahf
unpcklps
mov
xor
push
faddl
into
and
xor
es
push
sbb
and
pushl
push
dec
inc
pop
lahf
loopne
push
xlat
adc
sub
iret
test
sarl
in
pop
and
xorb
and
jo
cmpsl
sbb
clc
insb
mov
sahf
into
sbb
xchg
dec
pop
gs
int3
add
mov
pop
fadds
shl
dec
xlat
fbld
loope
scas
in
orb
xchg
and
mov
nop
adc
cmpsb
inc
mov
adc
fmuls
sbb
sub
or
fsts
leave
push
mov
sbb
mov
push
aam
or
daa
push
dec
sub
and
sub
pop
in
aam
mov
call
aas
dec
xor
scas
jg
sti
mov
dec
xchg
call
cmp
inc
inc
negl
sub
jge
xchg
outsb
and
sub
sub
mov
push
fisubrl
mov
loope
mov
lds
mov
iret
inc
lods
leave
inc
je
sbb
xchg
aad
inc
mov
das
jnp
mov
std
fwait
xchg
jne
dec
mov
xchg
and
fcoms
mov
call
das
scas
inc
aad
aas
cmp
in
mov
adc
xor
loopne
push
sbbb
cmpsb
ljmp
pop
imul
add
pushf
aad
das
iret
in
outsl
mov
inc
aam
push
xor
push
insb
cwtl
and
ret
cmp
add
insl
mov
push
add
shll
jns
and
outsb
pop
repnz
sti
outsl
mov
scas
mov
inc
mov
cwtl
loopne
mov
add
stos
sarl
add
std
cmp
pop
hlt
lods
into
lods
sub
xor
mov
jge
cltd
rorb
fsubrl
push
cltd
xor
cmc
negl
lods
dec
aas
mov
fs
sub
les
jp
stos
sub
mov
stos
xchg
lcall
xchg
jno
xor
sub
adc
push
test
jle
xchg
loope
xchg
and
xchg
cmpsb
sbb
nop
sbb
andb
clc
enter
xchg
xor
xor
ret
dec
ds
je
mov
and
cmpsl
fsubrl
fistpl
fldt
adc
pop
jg
and
and
xchg
sub
clc
fstps
in
or
push
out
ljmp
rorb
repnz
aas
mov
addr16
add
in
jo
jno
or
daa
call
sbb
mov
movsb
push
cmp
out
jl
jl
mov
lods
mov
or
push
xor
lods
cmpb
push
xor
data16
fcmovne
add
mov
xchg
daa
jbe
fdivs
mov
inc
mov
loop
mov
add
das
daa
push
movsl
cld
insb
mulb
and
jns
add
std
bound
insb
hlt
ljmp
xor
sbbb
arpl
rol
jbe
mov
bnd
jmp
ret
aaa
es
addr16
rcl
mov
xor
pop
adc
mov
pushf
push
mov
adc
outsb
xor
pop
ljmp
inc
pop
fadds
dec
jge
mov
and
lret
adc
fisttpll
popf
or
loopne
mov
out
jbe
cmp
mov
fs
enter
out
stc
test
pop
mov
mov
mov
aam
sub
pop
push
decl
dec
gs
adc
mov
jae
ljmp
orb
repnz
call
and
fs
pop
sahf
xchg
push
sti
mov
xchg
add
add
mov
dec
test
insb
repnz
jle
or
add
je
inc
ja
or
sub
in
pop
jmp
cli
outsl
add
lods
xchg
add
pusha
out
inc
sub
hlt
pop
sub
pop
imul
mov
iret
fcmovu
out
jmp
cmp
into
jp
faddl
fstl
clc
imul
dec
mov
shl
or
sbb
in
sbb
mov
imul
xor
sti
aam
stc
sub
sbb
push
mov
add
subw
cmp
sub
add
mov
jmp
bound
mov
icebp
mov
or
incl
dec
and
syscall
dec
sbb
loope
cld
sub
push
mov
push
push
jecxz
ret
cmp
pop
insb
push
out
or
fsubr
aaa
shl
cs
imul
adc
lret
hlt
fimull
dec
pop
cmpsb
inc
cmp
rorb
mov
sub
inc
bound
call
jl
outsl
xor
movsb
arpl
mov
inc
xlat
out
mov
pop
dec
inc
ds
add
xor
jns
jge
pop
push
sbb
das
ja
add
or
outsl
pusha
xor
sub
gs
adc
stc
js
das
jge
xchg
repz
sbb
or
in
ret
scas
add
dec
movups
mov
out
pop
fistl
ficoms
or
inc
imul
les
stos
push
decl
pushf
sub
or
pop
xchg
cs
mov
inc
xchg
add
pop
push
test
std
cld
inc
lea
mov
lret
sbbb
lods
sub
add
xchg
xchg
rclb
or
push
mov
int
cli
push
mov
dec
scas
lds
jecxz
test
mov
push
mov
and
in
call
test
lea
push
mov
hlt
cli
rcrl
sub
ds
mov
jg
jae
lods
cmc
mov
or
inc
ret
mov
pop
pop
or
xor
std
cmpsl
test
jl
sbb
ljmp
sbb
inc
and
sub
cmp
repz
inc
lods
rcll
xchg
shlb
adc
mov
ljmp
test
mov
sub
sub
popf
inc
movsl
sub
cmpsl
adc
stos
insb
bswap
inc
lcall
sbb
sub
xlat
imul
imul
mov
dec
cmp
inc
pop
sub
cmpsl
add
push
adc
jne
jg
add
sub
mov
sub
clc
imul
and
out
mov
insb
inc
sahf
or
xchg
cli
popa
cmc
cs
sub
inc
mov
imul
data16
cmp
xor
je
cmpsl
pop
inc
lods
out
cmp
xchg
lcall
das
js
arpl
xor
jno
testb
mov
lret
sub
cltd
imul
adc
and
repz
in
stos
ret
sub
or
add
add
bound
inc
jno
cmc
cmp
mov
ret
sub
push
or
dec
into
subl
pop
popa
xchg
jno
mov
mov
mov
and
scas
push
inc
repz
mov
mov
inc
jle
and
adc
push
pop
push
sbb
pusha
movsl
xor
adc
shrb
xchg
inc
cmp
hlt
ret
jae
inc
hlt
pop
push
idiv
cld
pop
jae
lcall
mov
mov
dec
test
jge
jbe
insl
fcompl
push
js
mov
iret
ljmp
mov
pop
jae
xor
xchg
xorl
jmp
lock
jbe
fwait
xor
adc
pop
adc
das
pop
sub
pusha
fisubrs
lds
fildl
shl
test
cwtl
xor
pop
sahf
lret
int
adc
mov
test
or
iret
mov
int3
cld
or
push
jo
imul
jns
xchg
cli
mov
in
shll
inc
xor
lcall
cmp
out
pop
cli
imul
mov
pushf
jb
sub
push
fwait
and
push
xor
jp
sbb
add
imul
pop
popa
mov
push
lret
pop
js
jg
stos
out
pop
push
out
and
cmp
sar
push
in
or
test
pop
imul
inc
int3
test
or
cmc
cld
ret
pop
xor
xor
pusha
jp
pop
js
push
mov
mov
mov
mov
pushf
stos
sar
inc
sub
jle
test
out
push
ds
xchg
cmc
inc
pushf
idivb
test
and
cmp
aad
aas
ljmp
ja
stos
dec
cltd
cmp
addr16
cmpsl
fiadds
cmp
mov
je
test
push
into
subl
xchg
sahf
lea
pop
rorb
jp
add
test
fisubs
fimull
add
adc
push
ljmp
and
subb
ljmp
xchg
arpl
sahf
cmpsb
xor
cmpsl
mov
push
aad
mov
inc
into
sbb
in
or
inc
in
jle
sub
push
shlb
inc
ljmp
sub
push
pusha
jp
cli
fcoml
jmp
mov
inc
sbb
aas
and
in
inc
mov
cmpsb
and
pop
dec
loopne
mov
ss
adcb
dec
mov
data16
pop
cltd
gs
push
js
imul
hlt
xor
shrb
xchg
push
jb
push
aas
pop
sub
or
orl
rcrl
andb
test
addb
cmp
or
xchg
ds
adc
cmp
sbb
stos
mov
pop
into
imul
adc
xor
repz
push
outsb
xor
adc
mov
adc
out
adc
js
ret
hlt
out
mov
aam
jne,pt
jg
add
mov
pusha
test
aas
fcompl
pop
das
outsl
xchg
out
jnp
push
insb
test
lret
push
fiaddl
mov
mov
and
add
sbb
dec
repnz
adc
adc
addr16
ret
mov
rclb
cwtl
inc
pop
in
adc
and
imul
pusha
mov
sahf
jbe
push
inc
pop
outsl
pushf
test
cmp
mov
and
test
negl
adc
imul
sub
clc
pop
pop
loope
sahf
icebp
hlt
inc
ret
jp
scas
sub
scas
adc
std
sub
inc
cmpsb
orb
dec
ja
lea
enter
lock
add
sbbb
dec
daa
sub
adc
pop
enter
pop
je
mov
pop
mov
mov
mov
or
inc
mov
and
inc
cs
xchg
fcmovb
stos
faddl
imull
loopne
imul
std
sbb
fidivl
imul
push
mov
mov
or
mov
arpl
adc
lcall
cmp
add
add
int3
jae
cld
adc
movsl
in
out
mov
or
inc
mov
and
jne
push
dec
fwait
leave
movsl
ret
mov
inc
xchg
or
push
cmpsb
ljmp
cmp
cmpsb
outsb
ss
push
push
fwait
into
in
adc
sub
lahf
xor
bound
scas
and
insb
mov
in
nop
loope
das
adc
jns
pop
ljmp
jl
fs
in
xor
cmp
cmp
enter
pop
aad
out
xlat
cmpsb
mov
test
ret
jge
mov
mov
mov
xlat
roll
inc
mov
outsl
ss
xor
xor
inc
call
xchg
stos
push
hlt
adc
rol
pop
mov
mov
push
jae
pushf
sbb
out
add
dec
and
fiaddl
push
jne
sub
out
add
std
sahf
or
aam
fsubs
mov
mov
rorl
stos
outsb
jns
test
sub
rcrb
dec
jcxz
scas
repz
jl
mov
lcall
ss
push
ret
xor
sbb
push
adc
shl
cmp
sarl
push
fpatan
iret
jbe
sub
adc
sbb
insb
cmp
jmp
adc
cwtl
jmp
ret
enter
add
addb
test
shl
bound
es
and
mov
movsl
out
add
push
pop
add
stc
xchg
sbb
dec
adc
out
push
or
add
lods
in
test
in
xchg
stos
aas
and
push
dec
inc
hlt
xchg
cmpsl
cli
sbb
or
addl
test
repnz
cmp
or
dec
and
adc
sub
pop
insl
cmpsb
pop
adc
shl
mov
out
out
push
out
and
mov
mov
xchg
mov
sahf
xor
aad
repz
je
pop
jbe
push
lods
fs
xor
push
adc
inc
xchg
repnz
inc
fstpl
sbb
lods
icebp
std
jbe
in
pop
xor
test
add
dec
int3
sub
data16
movsl
repnz
in
dec
xorb
push
pop
test
daa
push
pop
adc
dec
sbb
test
stc
mov
and
mov
stos
ret
xor
fisttps
movl
jl
cmc
and
mov
test
push
clc
ds
pop
mov
pop
outsl
pop
and
jno
lea
jnp
lds
int3
lds
shlb
into
aas
fistpll
xchg
cmp
in
cmpsl
pop
aad
cmc
cmc
mov
jp
sub
adcl
nop
mov
jo
arpl
inc
pop
repz
fbld
lret
test
aad
dec
or
push
gs
mov
pop
daa
bound
idivl
push
call
mov
cli
sbb
mov
jo
push
cltd
loopne
scas
cli
sbb
and
sbb
hlt
xor
insl
fisubrl
and
and
loop
adcl
fnstenv
xchg
imul
cltd
add
cmp
push
sbb
jg
pop
mov
push
add
push
jle
jb
out
xchg
out
adc
js
adcl
mov
jmp
sbb
mov
iret
stos
fucomi
push
insb
pushf
lds
int
fimull
loope
mov
sahf
cmp
je
incb
xorl
int
arpl
loop
mov
inc
sub
test
ljmp
push
shlb
leave
jl
push
call
xchg
insb
popf
hlt
push
enter
sti
pop
cmpsb
lods
lret
adc
jge
popa
adc
shrl
adc
dec
inc
mov
sub
mull
mov
dec
cwtl
fisubs
cmp
mov
cltd
and
inc
xor
sbb
in
mov
inc
xor
inc
jmp
fs
loopne
scas
dec
jb
inc
addr16
dec
out
cli
clc
lods
pop
dec
adc
lcall
lods
loope
or
je
cli
xor
data16
xchg
mov
mov
jo
scas
and
push
push
xlat
and
and
dec
subl
ja
ja
popf
and
xor
popa
jo
subl
ljmp
inc
aad
iret
mov
call
mov
mov
cmp
idivl
push
scas
adc
xor
mov
push
and
mov
xchg
fidivrs
adcl
test
sub
pop
pop
bound
xchg
jle
ds
xor
sub
jne
add
sub
jne
xchg
cli
scas
arpl
cltd
sub
lcall
data16
xor
and
xchg
jl
aam
fidivl
loop
jbe
mov
out
mov
loopne
dec
xchg
aaa
and
or
ljmp
andb
popa
daa
decb
popf
mov
negl
outsb
mull
xchg
xor
ja
adcl
mov
ss
sbb
out
iret
cli
movsb
xchg
shl
mov
fldenv
push
test
movsl
and
stc
addr16
mov
mov
cmc
mov
sub
call
adc
das
test
or
repnz
repnz
mov
pop
cli
mov
scas
sub
pop
adcb
pop
push
push
and
xchg
inc
fsubrl
push
aas
sbb
jl
xor
int
gs
rcll
mov
incl
lret
popa
sbb
xchg
xor
sarl
iret
stos
cld
sbb
sbb
lods
mov
push
mov
xlat
push
pusha
enter
dec
xor
enter
inc
aas
dec
pop
jb
adc
out
push
xadd
jae
pop
sub
mov
lds
aad
outsb
ds
cmp
cmpsb
mov
sub
subl
and
or
push
mov
int3
cltd
xchg
xorl
add
xchg
push
or
push
push
push
adc
dec
cmpsb
pop
xor
xchg
int3
add
popl
add
aaa
cmp
pop
lretw
and
mov
cmp
sbb
hlt
mov
ds
sub
inc
pop
rolb
pop
shrb
das
in
xor
push
movsl
mov
hlt
lret
add
push
push
xchg
mov
in
out
mov
psubw
and
mov
pop
mov
xor
je
jb
cmp
testl
in
jae
adc
ljmp
add
inc
pop
mov
sub
jmp
push
roll
sarl
fstps
jge
sub
ja
lock
stos
fsts
cmp
imul
fcompl
and
into
mov
mov
scas
add
call
mov
imul
sbbl
jp
mov
loope
fucomip
xchg
jmp
mov
xor
lock
or
insb
insl
and
stc
popa
sub
dec
or
sub
in
cmp
ja
and
pushf
addr16
fdivrp
and
cmpsb
fbld
out
inc
rorb
subl
aas
xor
or
mov
iret
in
mov
mov
pushf
aaa
xor
test
jp
adcl
pop
lods
adc
dec
dec
in
mov
cld
adc
fs
gs
xchg
into
stos
sub
sbb
test
dec
sbbb
mov
mov
ds
inc
outsb
and
sub
pusha
outsl
pusha
jl
rclb
lret
sub
jns
repnz
push
rcrb
jne
sbb
and
mov
jo
xor
in
cmp
xchg
xor
xchg
jl
imul
add
pushf
add
test
or
lret
mov
andl
xchg
js
mov
out
sub
imul
and
imul
push
inc
movsb
data16
data16
mov
rcrb
mov
sub
xor
idiv
lcall
lret
xor
enter
lods
pause
add
insb
dec
arpl
addb
push
and
pop
test
push
rcll
adc
jl
add
in
and
jae
arpl
dec
int
sub
pop
cli
bound
adc
pop
dec
movsl
addr16
push
imul
mov
dec
mov
andb
push
js
test
test
mov
add
test
fs
in
movsb
mov
mov
lret
fistl
or
imul
dec
in
out
or
mov
pop
inc
dec
fsubr
jae
mov
dec
cld
aam
sub
sti
pop
or
mov
in
xchg
roll
lretw
test
test
xchg
insl
test
sub
inc
test
mov
lcall
nop
test
sub
inc
jne
mov
push
pop
test
loop
dec
cmpsl
test
or
clc
repnz
adc
pop
adc
mov
adc
sbbl
sub
not
pop
cmp
movsl
lret
dec
lds
popa
sbb
dec
jne
sbb
mov
inc
mov
and
add
or
add
lea
push
adc
mov
daa
xchg
and
xor
data16
add
mov
pop
add
aas
jle
xor
mov
lret
mov
repnz
notl
pusha
mov
xor
mov
mov
test
out
mov
mov
mov
cmp
arpl
adc
mov
ret
es
cmp
ljmp
inc
mov
mov
cld
sarb
and
fisttps
sbbb
push
ret
pusha
imul
out
cmpsl
test
inc
push
inc
pop
sbb
aas
mov
ffreep
pop
dec
jmp
jb
arpl
xchg
xchg
sub
push
std
bswap
es
ja
cmp
sub
shrl
jbe
xlat
add
hlt
pop
pop
insb
in
jl
inc
incl
lahf
in
push
int
adc
in
add
jbe
dec
push
in
int
andb
xchg
push
push
stos
rcr
mov
stos
cmp
push
cmc
fimull
jp
shrb
adc
and
or
test
mov
repz
add
cld
repz
shll
sub
and
mov
clc
sbb
mov
mov
and
and
test
mov
add
push
in
xchg
push
pop
cmpsl
xlat
test
movsb
lods
dec
sub
int
test
push
sub
mov
leave
push
das
or
pop
das
xchg
test
push
clc
cmp
jl
mov
xchg
push
lret
test
in
sbb
dec
cs
xchg
hlt
aam
adc
mov
push
push
lcall
sahf
adc
mov
push
in
add
mov
dec
inc
push
mov
push
fwait
xchg
mov
aad
dec
lcall
sbb
dec
repz
imul
pop
lahf
enter
push
or
sbb
pop
push
flds
pop
mov
pushf
mov
stc
inc
lds
fidivrs
iret
inc
lds
mov
mov
add
xchg
in
sbb
in
xor
popf
push
es
out
and
daa
test
cwtl
add
push
xchg
nop
add
sub
sub
push
hlt
mov
in
jns
loopne
js
inc
sub
add
call
orb
pop
addb
cmp
or
add
sbb
push
pop
xchg
ja
sarl
sub
jnp
push
and
cmp
cltd
fcoml
sar
cmc
dec
movsl
lcall
mov
popa
jo
lds
mov
cmp
shl
test
pop
mov
pop
and
pop
imul
cltd
std
insl
pcmpgtd
lds
shrl
movb
sahf
inc
mov
test
jl
mov
mov
or
sbb
mov
inc
inc
pop
adc
hlt
push
fsubrp
lock
outsb
cmp
pop
and
adc
fwait
dec
in
cmp
push
ret
xchg
sub
fnstcw
call
hlt
js
movl
mov
jo
int
pop
rcll
adc
imul
fadds
push
inc
outsb
adc
push
sub
fidivrs
in
mov
mov
ficomps
aas
xchg
push
ds
loopne
scas
pop
js
int3
mov
lret
xchg
sub
addb
lods
xchg
mov
ret
sub
adc
insb
dec
or
clc
lret
aad
pop
sub
inc
dec
sbb
sub
inc
dec
sub
mov
repnz
sbb
cmp
pop
das
js
inc
cmp
cmp
outsb
pushf
pop
pop
hlt
fadd
cld
fcmovb
cmpsl
mov
sbb
pop
aam
pop
dec
les
pop
mov
cwtl
in
adc
int3
sahf
inc
pop
imul
xchg
pushf
subl
dec
jg
mov
adc
cwtl
shlb
xor
cmp
shrl
cmc
mov
xor
dec
ja
das
sti
jge
lret
mov
cmp
or
call
rclb
adc
ss
in
arpl
out
push
lock
adc
mov
sbb
or
dec
scas
lods
mov
outsb
aad
jb
outsb
loopne
jb
out
xor
mov
jle
mov
and
fdivs
mov
push
pop
pop
cs
mov
int
cltd
aam
fs
arpl
push
inc
fldl
aas
int3
stc
mulb
xchg
add
test
jb
push
sar
push
outsb
add
or
stos
cmp
scas
cmp
sub
and
lea
bnd
sarl
in
pop
in
in
xchg
mov
test
mov
jo
cmpsl
cmpsb
or
fs
subl
mov
add
adc
adc
scas
repnz
xlat
imul
jno
jo
dec
inc
aas
xor
sbbb
leave
in
inc
jmp
rolb
out
adc
add
mulb
aam
sbb
out
xor
mov
int3
lea
mov
jnp
lds
inc
insl
lock
imulb
or
test
inc
adc
roll
aaa
loope
mov
or
xchg
inc
insl
in
adc
fcoml
sub
loope
push
lret
xor
push
pop
std
jnp
push
scas
gs
mov
aam
rcr
lods
insl
pusha
push
outsl
inc
xor
mov
movsb
ret
dec
int
xor
cmp
xor
xchg
bound
repnz
push
xchg
pop
rolb
inc
pop
jg
pop
jno
aam
mov
dec
jle
out
xchg
loope
inc
jge
pop
and
addb
test
leave
mov
or
pop
jge
xlat
mov
rorb
pop
mov
rorb
lret
sub
hlt
int3
test
mov
ret
imul
loope
xor
outsb
in
push
jb
repz
ja
and
mov
mov
ret
insl
sbb
jp
mov
inc
xor
adc
inc
jg
cmpsl
xchg
mov
outsb
enter
cmp
mov
and
lahf
cmp
mov
push
ds
ss
sub
test
ret
ss
adc
and
xor
xchg
xchg
dec
sub
out
outsl
je
jle
fdiv
inc
jp
adc
jo
stos
dec
imul
inc
int3
dec
cmp
test
or
xor
xchg
pop
gs
test
adc
pop
psubq
cli
aaa
repz
xor
gs
xchg
out
adc
adc
test
lock
repz
inc
sub
fists
pop
fsubrs
push
cltd
mov
mov
jb
sub
sub
fisubl
dec
add
pop
gs
or
dec
mov
or
ljmp
mov
lcall
stos
scas
inc
fucomi
sub
inc
mov
rcl
mov
in
cld
addl
jnp
mov
imul
inc
in
fisubrs
stc
out
cs
add
xchg
mov
adc
mov
cmp
or
fcmovnb
sub
js
int3
out
or
mov
lret
out
incb
outsl
push
jns
sbb
shlb
fcmovne
fcmove
fidivrl
jae
jp
ret
int3
cmp
pop
out
ret
or
shrb
jb
xor
das
xor
or
adc
dec
daa
dec
dec
insb
fwait
lock
mov
paddsw
lret
push
cmp
pop
test
cmp
add
push
pop
cmpsl
sub
orl
pop
pop
sbb
rcrl
in
mov
inc
sbb
pop
lcall
leave
add
push
es
repz
xchg
out
pop
adc
repz
mov
pop
clc
xchg
push
rorl
insl
into
and
call
push
add
in
stos
ficoml
or
roll
jecxz
add
jmp
xor
testl
rcrl
inc
or
cltd
pop
adc
inc
aad
push
mov
xchg
pop
jge
enter
sub
sub
dec
jbe
add
pop
sbb
and
ljmp
in
test
lcall
sbb
incb
add
adc
faddl
inc
adc
sub
bound
shl
xchg
pop
sub
dec
cmp
stos
in
popf
in
and
loopne
sahf
movsb
cmp
and
inc
iret
mov
aam
pushf
cmp
mov
shlb
loopne
scas
jp
fs
daa
out
cli
xchg
inc
lret
xchg
out
out
lcall
mov
pop
sbb
test
lret
or
xchg
into
lods
xchg
movsl
lea
insb
add
shlb
out
mov
test
dec
aas
sub
push
add
fnstsw
push
xchg
icebp
lcall
test
pop
in
lret
inc
stos
jmp
int3
movsb
lret
mov
lret
push
cmp
adc
popa
xor
push
adc
add
adc
mov
pop
cmp
mov
mov
xor
pop
cmp
ss
add
pop
pop
adc
aad
sbb
adc
push
mov
aad
xor
in
mov
dec
out
and
push
pop
mov
cmp
mov
dec
jns
es
and
xchg
pop
and
aas
out
loopew
xchg
jnp
or
add
add
jp
nop
or
mov
inc
inc
dec
mov
in
out
inc
rcll
push
addr16
jp
dec
ret
push
fistl
jo
cmp
daa
jmp
push
enter
sbb
jp
scas
fisttpl
add
pop
dec
cmpl
cmp
sbb
add
pusha
xchg
shll
mov
cmp
pop
cmp
adc
test
adc
mov
sti
sbb
ds
mov
xchg
dec
inc
jnp
std
and
jmp
clc
int3
int3
or
sub
mov
mov
dec
xchg
cmpsl
mov
rcll
inc
adc
jp
cwtl
ss
ljmp
mov
mov
daa
ja
ret
aas
inc
mov
scas
in
int
add
lret
rclb
test
add
pop
jo
xchg
inc
aam
adc
xor
mov
mov
sub
and
push
jle
or
shrb
lret
fwait
dec
ficoml
negb
xor
adc
out
mov
and
out
outsb
mov
test
arpl
loope
frstor
mov
jo
sbb
pop
mov
in
enter
sub
push
and
imul
mov
add
dec
out
push
fdivl
mov
pop
pop
adc
xor
push
imul
stos
call
in
jmp
push
pushf
cltd
dec
sahf
stos
adc
adc
aam
scas
mov
in
push
dec
test
clc
fsubrl
mov
test
jae
out
outsl
adc
insl
mov
inc
inc
leave
xor
push
mov
pop
dec
jl
jecxz
stos
jne
adc
dec
clc
lret
andb
push
gs
mov
adc
lods
aaa
scas
js
fldenv
shll
mov
mov
inc
mov
cli
dec
xchg
xchg
and
add
dec
inc
dec
cmp
jbe
dec
push
adc
xchg
lock
sbb
sub
add
add
sub
pop
data16
jl
jb
cli
mov
lds
pushf
dec
sbb
dec
inc
clc
xor
pop
movsl
js
add
sbb
inc
bound
push
clc
cmpl
sub
pushf
lods
and
and
fwait
jno
push
shll
sub
cmp
dec
lret
and
mov
outsb
mov
xor
fadd
push
push
enter
or
aam
push
aas
or
daa
jle
test
dec
nop
cmp
test
aam
mov
lcall
lods
scas
or
mov
dec
out
neg
add
push
stos
subl
jmp
loope
addb
movb
push
das
inc
orb
pop
test
fcmovnb
add
xor
dec
ja
bound
notb
sub
hlt
push
icebp
in
adc
outsl
movsb
add
add
sbb
dec
mov
loopne
lret
cmp
popf
cmp
cmp
in
dec
mov
mov
mov
pop
insl
add
icebp
or
ljmp
bound
test
gs
les
aas
fsubr
or
in
dec
add
cli
push
lea
fmuls
fsubrl
sbb
sub
or
repz
sbb
pop
push
mov
repnz
pop
cmpl
mov
pop
mov
pop
pop
jmp
push
sbb
xor
movsb
push
push
pop
pop
insb
cmp
inc
fstpt
jecxz
xor
xchg
inc
aas
xor
imul
lods
imul
sbb
mov
ret
ja
xor
sbb
xchg
lods
dec
and
fstpt
popa
aad
inc
and
das
gs
jl
xor
js
xchg
stc
in
push
jo
mov
mov
ja
and
mov
mov
out
or
sbb
sbb
xor
xchg
int3
jle
lcall
into
jle
dec
jo
xchg
dec
js,pt
fsubrs
dec
xor
inc
out
adc
loopne
push
mov
dec
sbb
push
rolb
vpmaxsw
mov
pushl
adc
jl
dec
insl
lds
sarb
lds
cmp
pop
cld
imul
mov
lret
jno
lds
sub
cmp
cmpsl
cli
orl
mov
fsts
xor
xor
adcb
fucomip
jne
xor
and
sarb
and
out
iret
ret
sub
cmp
pop
stc
orl
bound
pop
inc
fdivr
cmp
sub
adc
pop
mov
add
dec
jne
jnp
dec
clc
int
fisubl
push
xor
mov
and
jmp
fstpt
push
fsubr
popa
aam
dec
jbe
and
stos
mov
loopne
xlat
dec
in
push
lss
or
outsb
cli
cmp
pop
push
or
jmp
adc
clc
in
and
mov
stos
cltd
xor
push
pop
out
cmpb
lods
cltd
push
mov
mov
push
test
stc
xchg
int3
or
pop
in
rcrl
popa
or
push
dec
jae
cmpsl
mov
pop
jmp
cmp
nop
lret
aaa
je
mov
lret
jecxz
pop
mov
jno
scas
mov
and
xor
add
cmpl
jp
stos
sub
insl
mov
addl
mov
lret
jp
xchg
mov
add
jnp
loope
push
xor
dec
pslld
notl
mov
ret
push
dec
movsb
mov
push
clc
stos
daa
lea
dec
mov
repnz
xlat
cmc
movsl
cmpsb
dec
push
orb
cmp
jae
popf
inc
in
fcomp
shr
pop
mov
jge
xor
add
movsl
push
outsl
cmpsb
fcomps
mov
repnz
push
mov
jae
lods
es
cmp
es
push
jno
addr16
loope
aam
push
jl
cwtl
bound
scas
dec
je
mov
mov
adc
bnd
daa
repnz
and
insb
pop
jo
in
repnz
loope
ja
ds
sub
jns
push
sub
mov
add
jmp
jnp
push
outsb
mov
mov
mov
push
cmp
fwait
das
sub
or
loop
sub
shlb
jge
cmp
hlt
lods
adc
in
cwtl
sub
sbb
movsb
test
fucomip
ror
and
push
inc
test
sti
sahf
mov
mov
pop
pusha
xlat
dec
add
mov
add
outsl
sub
dec
mov
mov
cmp
icebp
xor
add
sbb
sbb
add
pop
sub
mov
jno
das
shll
in
xchg
insb
std
adc
or
mov
ret
adcl
mov
sub
dec
andb
pop
cmpsl
les
cmp
sbb
sub
inc
in
add
in
test
sbb
jecxz
sbb
or
shl
lret
jle
pop
mov
xchg
int
inc
scas
movl
mov
mov
lods
int
lcall
aam
gs
lret
push
xchg
sbb
std
sub
cmp
das
out
xor
cmpsl
and
in
jmp
mov
insl
xchg
push
fisubl
pop
mov
mov
fneni(8087
nop
push
outsb
enter
mov
and
out
inc
or
mov
dec
push
shl
cmp
dec
jbe
aam
and
daa
in
stos
sub
sub
sub
mov
pop
and
outsl
or
lock
xchg
call
sbb
aam
nop
imul
fs
sub
lret
or
inc
fs
out
popf
hlt
inc
fidivrs
insb
or
jo
icebp
xor
or
lods
mov
fwait
in
xor
jmp
scas
pop
xor
xor
pop
bound
mov
xor
mov
dec
shll
push
icebp
mov
ljmp
cli
int
mov
push
or
cmc
sbb
push
xchg
test
ret
decb
mov
pusha
sub
scas
cwtl
loop
mov
push
lods
or
icebp
sbb
test
adc
pop
testb
or
xor
rcrb
push
adc
fsubrl
mul
mov
in
ret
sub
flds
jle
sub
cltd
jae
js
ss
sti
pop
sarb
cmp
fadd
cwtl
mov
pop
mov
cld
mov
xor
xchg
cmpsb
mov
shrl
icebp
cmp
es
xor
mov
push
push
push
add
imul
clc
iret
imul
and
or
or
sub
and
aaa
push
fisubrl
popf
adc
inc
fnsave
bt
cld
mul
mov
repnz
jecxz
inc
sahf
aas
daa
jle
mov
and
pop
mov
dec
orb
add
xchg
xchg
add
int3
mov
in
xor
ja
add
rorb
xlat
in
out
xchg
jl
std
cmp
shlb
loop
push
je
dec
sub
jbe
cmp
div
pushf
fdivr
cmpb
outsl
push
or
push
rcll
in
ret
ljmp
xlat
cli
loop
mov
sbb
insb
pop
xchg
mov
or
repnz
sub
mov
cs
aam
fdivl
shlb
es
rcl
in
sub
or
add
ds
dec
jo
adc
mov
std
and
cld
repz
xchg
pop
push
sbb
or
fistps
fcomps
push
jno
xchg
fidivrl
sbb
dec
rcrl
push
push
out
data16
inc
aaa
jo
ja
xchg
add
push
hlt
xchg
or
push
insb
cltd
aam
inc
lock
dec
jbe
mov
roll
pop
sub
push
fs
dec
mov
icebp
sbb
mov
loopne
pusha
andl
pop
ss
loope
js
pop
mov
mov
mov
cmpsb
push
sarb
rcrb
push
xchg
add
out
nop
xchg
mov
lock
into
or
add
loope
push
jl
rcl
pop
pusha
add
pop
test
notl
add
flds
andl
xor
rcl
push
loop
mov
inc
aad
ljmp
push
jecxz
mov
pop
imul
pop
push
mov
sbbb
lock
push
mov
cmpsb
dec
mul
insb
adc
outsl
inc
jmp
and
push
icebp
mov
pop
rolb
mov
inc
mov
cld
cmp
cmpsb
andb
jb
jp
push
mov
or
push
or
fwait
int3
mov
lds
push
xor
fdivrl
add
in
stos
or
icebp
cmp
dec
mov
xchg
inc
shll
dec
orb
aam
or
xchg
rolb
add
loopne
mov
negl
jne
push
in
adc
nop
into
in
sub
cmp
ret
push
ret
hlt
adc
fs
les
ds
fmull
in
cmpsl
adc
dec
bnd
repz
push
push
fwait
jnp
movsb
push
cmpsb
rep
cld
push
mov
data16
mov
cmp
out
orl
mulb
cmp
aas
or
jbe
mov
dec
dec
mov
int
mov
sub
out
cmpsl
decb
pop
addr16
lea
and
cs
ret
scas
int3
mov
sahf
jbe
cmp
pop
inc
mov
test
sahf
cmpl
xor
ret
ds
out
divb
jb
pop
repnz
mov
repnz
mov
pop
sbb
mov
adc
xchg
add
subb
mov
pop
adcb
scas
popf
enter
std
jnp
ficoml
bound
push
aam
imul
mov
push
cwtl
out
inc
or
stos
xchg
mov
bound
arpl
inc
cmp
sub
sahf
fidivs
mov
pop
jbe
sbb
popa
aas
out
lret
sbb
adc
and
adc
xchg
xchg
or
add
aas
adc
push
frstor
jo
lods
out
add
push
add
mov
cmpsb
idivb
lea
stc
push
adc
mov
loopne
xor
and
xor
rclb
out
insb
push
or
data16
fisttpl
mov
mov
icebp
jl
enter
cmp
mov
sub
mov
popf
adc
mov
cli
mov
mov
mov
es
bound
mov
ljmp
inc
popa
stos
cmpsl
daa
fidivrl
js
daa
pop
fldcw
cld
es
add
push
in
push
push
das
fisubs
xchg
mov
ds
insl
adc
mov
std
and
cld
repz
or
xchg
int3
in
inc
mov
dec
mov
popa
xchg
loop
pop
xchg
ljmp
xor
sub
stos
cmp
mov
int3
test
inc
sub
ljmp
nop
jmp
rolb
sbb
insl
pop
pop
fnsave
inc
ret
or
pop
dec
sub
dec
inc
sub
jbe
xchg
xchg
xor
enter
aas
scas
out
jb
xlat
pop
add
dec
outsl
arpl
mov
data16
cmc
jmp
in
jecxz
scas
xor
inc
arpl
cs
call
inc
rorl
test
pusha
xchg
and
repnz
add
test
movsl
pushf
xchg
loop
and
sbb
and
subl
jno
rcll
xchg
icebp
mov
aas
pop
fcompl
inc
cmp
fdivrp
ljmp
or
addr16
push
mov
loop
and
xchg
shlb
std
xchg
sbbb
push
stos
lcall
mov
jb
adc
push
lcall
pop
ret
inc
outsl
inc
push
pop
xchg
cwtl
xor
push
or
insb
mov
pop
cmp
js
and
sahf
imull
adc
mov
std
aam
adc
ret
mov
push
and
cli
mov
loop
stos
into
lcall
or
push
dec
jl
jg
rcr
lods
inc
mov
mov
lcall
sub
push
popa
mov
sbb
and
cmpl
pop
and
xchg
sbb
dec
subl
test
add
xchg
xchg
cmp
es
mov
add
test
mov
mov
xchg
sbb
mov
mov
fistpll
addr16
loopne
idiv
fs
pop
and
pop
add
mov
sbbl
mov
inc
cmp
das
outsl
sub
fstps
enter
cmp
dec
xor
clc
dec
dec
adc
test
lcall
and
dec
mov
and
data16
xchg
xchg
mov
sarb
fmuls
test
jae
out
cmp
pop
mov
pop
andb
outsb
or
mov
rcrl
jp
addr16
fsubr
cmp
add
mov
add
dec
scas
ficoml
adcb
fimuls
jns
pop
shrl
mov
pop
pushf
mov
in
jno
adc
inc
cmp
mov
in
or
repz
repnz
ja
sti
fnstcw
or
fmull
pop
mov
mov
daa
in
inc
xor
xor
fistl
cmp
fcomps
stc
aad
push
fisubrl
add
push
hlt
sub
out
add
mov
cld
cmpsb
lcall
jp
je
xchg
fsubr
sbb
cmp
scas
fldcw
and
sub
stos
and
bound
das
and
or
lret
adc
push
ljmp
or
jne
aaa
pop
nop
das
or
popf
xchg
sarl
add
xchg
add
out
ret
in
movsb
or
mov
mov
sti
in
sub
aam
dec
mov
hlt
pop
adc
imull
inc
out
mov
rorl
ret
in
in
push
mov
and
xchg
xor
lds
fstp
xor
push
jp
jbe
dec
xchg
test
cmp
mov
xlat
adcb
adc
pop
fbstp
movsb
repz
jns
lahf
jge
movsb
rorl
inc
dec
in
addr16
inc
push
aaa
adc
adc
jp
test
loop
clc
shl
and
ja
add
mov
dec
xor
push
cld
xchg
cmp
imull
jp
mov
into
inc
jg
fstps
test
dec
in
jl
stc
and
mov
push
pop
out
lods
cmp
sbb
stos
sbb
out
sbb
jcxz
ror
stos
mov
and
into
pop
ret
mov
or
add
sub
jb
imull
and
push
pop
sub
add
inc
cmc
mov
xchg
repz
jp
pop
fimull
xchg
jecxz
inc
pop
inc
popf
lock
mov
pushf
lods
cmp
int3
pop
fimuls
roll
das
lods
lock
adc
sbb
mov
in
insb
push
sbb
sti
fdiv
mov
rcll
int3
cmpsb
int3
mov
lods
pop
jg
dec
dec
mov
mov
jl
mov
in
lods
mov
mov
int3
mov
out
aam
and
out
push
testl
sub
mov
inc
icebp
mov
test
xor
dec
ja
bt
les
fsubs
jmp
subl
sbb
daa
mov
out
lea
xor
mov
push
push
push
mov
out
pop
popa
and
jno
out
sbb
shl
or
mov
push
out
shll
pop
sbb
out
ret
mov
sub
cmp
adc
iret
sbbl
push
cmpsl
inc
mov
jo
push
pusha
imul
mov
lcall
inc
lods
sahf
in
out
jmp
cld
mov
mov
jecxz
fcmovnu
push
sarl
mov
into
inc
ds
ret
pop
pop
in
rcll
xor
in
test
cwtl
sahf
push
loopne
push
push
push
sbb
mov
xor
mov
clc
push
xor
cmp
je
pop
xchg
ja
sub
sbb
mov
and
divl
popa
jb
push
lahf
xchg
stos
test
dec
popf
rol
pop
fiaddl
adcb
nop
fisubl
les
leave
test
jo
repz
fdivrl
push
adc
jl
mov
xorl
inc
jbe
add
push
test
cld
sahf
sbb
xor
pop
inc
mov
push
add
mov
inc
xchg
ret
dec
mov
mov
push
mov
lock
lahf
into
int
andl
xor
sub
jg
test
push
mov
fucomi
movsl
and
pushf
sbb
sbb
mov
sub
sahf
ret
sarb
or
clc
mov
test
flds
and
ficompl
out
pop
jge,pt
jno
push
pop
repnz
xor
add
add
inc
insb
mov
push
jmp
sbb
cli
addl
dec
cld
xchg
jae
mov
sbb
and
pop
cmp
in
lods
cli
out
iret
jo
aad
pop
mov
or
icebp
shll
push
out
pop
fucom
sub
sub
daa
sbb
rclb
std
popa
mov
data16
js
jmp
les
es
popa
rclb
lret
mov
out
or
and
jb
fmul
pop
into
movsl
cmp
mov
enter
jns
sbb
aad
mov
pop
test
jmp
cmp
mov
cmp
adc
mov
out
outsb
orb
clc
imull
addr16
addr16
insb
mov
mov
pushf
rcrl
imul
je
pusha
dec
dec
lea
aas
xor
pop
push
sub
scas
ffreep
jl
mov
jmp
incl
lods
pop
or
shrl
pop
sub
mov
sbb
mov
xchg
pop
loop
cmp
scas
push
lds
ds
out
stc
xorb
les
pop
xor
jl
pushf
sbbl
call
push
mov
mov
sbb
mov
sti
cltd
rolb
mov
shrl
adc
add
negl
and
subl
or
es
lods
or
insb
add
xor
test
sbb
repnz
imul
xor
dec
adc
cmpsl
dec
dec
mov
jb
push
jp
shrl
cwtl
idiv
movsl
mov
push
and
test
cmpsb
jbe
sbbl
cld
enter
push
mov
fadd
pop
inc
dec
sub
icebp
addr16
mov
addl
mov
ficompl
cltd
bound
aaa
out
in
jle
jnp
push
cwtl
rcl
xchg
mov
repz
movsb
scas
imul
or
inc
jbe
xchg
mov
bound
mov
dec
jg
aad
cmpsl
and
push
jae
sbb
test
mov
cli
leave
mov
shlb
testb
pop
imul
lret
pop
pop
inc
lock
popa
call
push
aaa
mov
popf
jle
stc
inc
pop
jo
jne
jg,pn
adc
in
push
add
or
xor
or
fsubrs
jge
pop
pop
push
adc
cmc
jl
and
vpsadbw
mov
mov
mov
gs
pushf
sbb
orb
mov
add
sub
lods
jg
popa
jge
mov
les
jnp
fisubrs
pop
lcall
int3
add
or
sub
addb
mov
sub
push
push
decl
or
jne
push
jb
daa
loop
pusha
or
loopne
push
jge
int3
insb
stos
xchg
adc
jmp
and
daa
sbb
push
add
daa
xchg
or
and
insl
movsb
nop
jo
adc
sti
test
or
imul
orb
jmp
divl
sbb
testb
jmp
mov
adc
pop
pop
dec
mov
stos
pop
shl
call
cltd
clc
push
je
mov
lods
lahf
xchg
test
jne
sbb
loop
int
je
jmp
imul
in
mov
sub
or
cmp
sti
jnp
mov
pop
mov
inc
mov
xlat
or
sti
jle
jp
mov
pop
push
rol
push
aas
gs
lcall
cmp
or
pop
push
pusha
popf
test
fisubl
imul
xor
dec
lods
stc
xchg
mov
fstps
ss
adc
or
cld
mov
xor
mov
xor
inc
fcomps
fcmovb
cmp
mov
xorb
call
sub
dec
push
cmpsl
pushf
adc
adc
xchg
or
sbbb
pop
mov
inc
xor
es
call
sbb
outsl
push
sbb
movsl
sarb
xor
cmp
stc
mov
mov
add
add
in
sub
xor
xchg
push
ss
rolb
and
repnz
add
xor
pop
scas
and
mov
mov
mov
mov
sub
push
adc
inc
xor
mov
enter
je
push
adc
jle
rcr
adc
jl
clc
lock
push
pop
aam
rorl
fsubrs
inc
push
dec
mov
pop
inc
mov
cmpsl
cmp
clc
sbb
repnz
arpl
mov
jae
gs
mov
out
add
call
arpl
lods
sub
rorb
mov
push
cld
test
or
jl
jp
mov
xor
cmpsl
addb
es
mov
cmp
mov
jp
and
in
or
mov
in
test
dec
jp,pt
xchg
mov
mov
dec
jl
aad
in
pop
dec
sub
jecxz
cmpsl
jns
bound
sub
in
enter
ja
and
lret
jg
lods
mov
mov
xchg
in
mov
movsl
in
mov
out
repnz
and
mov
pop
lahf
push
loope
adc
rclb
loope
pushf
xchg
in
in
xor
jp
aam
push
ljmp
ret
ficomps
push
add
insl
fs
hlt
pusha
push
pop
fcoml
loop
loopne
out
dec
mov
adc
mov
filds
or
fidivs
ret
dec
aaa
rclb
dec
rolb
and
mov
xchg
scas
mov
sub
add
cmp
xor
shr
or
or
ret
cmp
inc
mov
sub
sub
ss
xchg
data16
xor
stos
xor
divb
pop
lret
test
cs
cmp
movsl
repnz
sbb
add
addb
mov
shll
and
mov
ljmp
jecxz
push
mov
shr
add
out
ljmp
adc
mov
push
mov
jmp
pop
ja
or
sbb
jnp
into
in
ds
mov
and
jbe
jb
out
lret
ret
iret
push
dec
pop
lret
push
mov
lods
lock
fxch
adc
mov
lea
adc
xor
push
push
out
dec
sarb
sahf
push
mov
cmpsb
in
jge
jg
mov
cmc
rcll
push
sub
jbe
mov
and
dec
push
lods
inc
mov
cs
call
ret
hlt
dec
stos
or
adc
out
ret
loop
sahf
int
jmp
incl
cmp
jo
cmpsb
leave
cli
xchg
xchg
mov
mov
into
bound
adc
outsl
in
dec
push
push
inc
push
dec
cs
imul
es
sub
mov
add
ljmp
mov
int
xor
dec
stc
jne
xor
test
push
into
loop
adc
mov
inc
add
lcall
popf
xor
pushf
movsb
orl
xor
pop
hlt
sub
pushf
adc
das
aaa
movsb
dec
repnz
mov
xor
jb
pop
pop
sahf
jmp
mov
sbb
xchg
hlt
imul
aaa
add
jb
cli
mov
mov
loope
pushf
xchg
cmp
mov
data16
ret
xor
inc
ds
mov
sub
or
aaa
lret
jae
popa
es
int3
fisubrs
cmp
push
out
int3
adc
es
movsl
lret
xchg
adc
fists
sub
add
fisttpll
mov
mov
mov
xor
mov
and
jecxz
jmp
mov
flds
pop
sbb
sub
push
in
outsb
mov
loope
rorl
add
and
add
dec
mov
inc
or
and
movsl
cmpsl
lods
xchg
orb
pop
mov
lods
rsm
xorb
mov
aam
add
test
faddl
add
punpcklwd
repz
das
dec
aaa
lock
aam
push
mov
adc
test
and
xchg
in
xchg
lcall
dec
add
xchg
sbb
test
sub
cmp
mov
repnz
pushf
add
jle
int
enter
xchg
cmp
popa
orb
cmp
les
rcl
sbbl
rclb
ret
mov
mov
mov
pop
push
push
push
mov
xchg
in
mov
mov
iret
inc
xor
xchg
pop
sbb
adc
pop
dec
and
mov
mov
jmp
imul
lods
dec
xor
sahf
add
mov
mov
add
sarl
xchg
and
dec
je
pop
loopne
jno
cmp
push
push
push
push
outsb
aas
arpl
push
repnz
mov
inc
loope
pusha
adc
sub
mov
sub
mov
jmp
enter
or
fcoml
inc
mov
mov
adcl
jmp
jo
aas
les
scas
mov
adc
aad
mov
mov
dec
add
imul
js
mov
fwait
pop
outsb
xchg
push
sbb
test
jns
leave
inc
aam
cld
test
pop
fistps
bound
shlb
lds
out
mov
inc
sub
jle
jae
jmp
or
lahf
movsb
sbb
into
jl
adc
mov
mov
sti
jmp
dec
sahf
sub
and
movsb
sbb
jns
push
cmpsl
call
test
rorb
adc
push
sbb
outsl
jmp
jb
insl
in
movl
lods
out
adc
loope
cmc
mov
insb
adc
cmp
lods
imul
push
adc
lds
int3
lods
test
add
sub
in
out
adc
cmp
push
push
cmp
and
adc
insb
xchg
jl
and
jbe
pop
mov
sub
mov
push
mov
dec
push
insb
mov
fmuls
jl
jno
ss
mov
sub
in
mov
push
loope
xorl
es
push
loope
jmp
loopne
jle
cmp
dec
data16
test
lods
in
pop
xchg
add
jb
repnz
dec
aam
rcl
and
cmp
xchg
ficompl
push
pop
ds
xchg
aaa
mov
test
nop
cmp
push
hlt
je
cmp
imul
aas
fcom
mov
jp
fsubrl
fidivrl
jecxz
jnp
xchg
inc
insb
push
jo
aas
push
push
sti
loop
jg
inc
test
mov
dec
push
fwait
sub
cmp
jno
xor
push
fildl
ss
faddl
mov
jmp
sbb
mov
int
ja
pop
cmp
leave
cmp
pop
test
dec
xchg
lret
lods
push
jmp
sub
rclb
cmp
mov
mov
mov
jae
out
pop
or
add
imul
xor
pop
nop
roll
lds
pop
cli
xor
hlt
in
pop
fs
ljmp
sub
fcoml
jecxz
xchg
add
and
mov
pop
in
mov
mov
mov
push
jmp
rcll
xchg
test
xor
clc
jb
push
subb
jecxz
scas
imul
xor
es
push
loopne
leave
xchg
dec
xor
mov
push
popa
gs
xor
lcall
sbb
xor
push
mov
adc
adc
jns
leave
lock
jp
jl
mov
jo
mov
lret
shlb
add
lahf
add
notl
out
loope
pushf
pushf
pop
cmp
je
not
addr16
mov
ljmp
cmc
jmp
mov
out
lods
cli
ror
aas
sub
enter
xor
test
ret
cld
mov
addr16
pop
int
cmp
add
jb
repz
mov
repz
pop
push
adc
ja
out
in
imul
fs
jb
loope
mov
xchg
lcall
jge
inc
mov
das
outsl
pop
jnp
sarb
mov
jge
pusha
adc
xchg
jb
push
pop
jecxz
mov
push
mov
xchg
mov
lods
pop
into
sub
fdivrs
cmp
pop
add
mov
fwait
in
push
push
inc
adc
shlb
jb
mov
adc
xchg
dec
adcl
arpl
les
loopne
movsl
ficoml
push
int
jne
add
sarl
cs
cli
xor
sub
mov
int3
push
mov
std
mov
add
out
rorl
movsl
adc
adc
xor
loopne
cwtl
dec
mov
inc
mov
dec
mov
mov
aam
stos
add
test
rclb
lods
adc
ja
cs
mov
ficoml
out
cmp
movsb
jae
ret
aaa
bound
mov
inc
or
fs
rolb
adc
imul
out
push
dec
cld
mov
push
lret
pop
pop
or
push
mov
mov
inc
xchg
mov
rorl
mov
dec
cwtl
mov
dec
mov
adc
mov
lcall
fcmove
pop
mov
xchg
iret
add
sub
push
mov
jb
and
rcrl
jns
stos
push
mov
pop
rolb
push
xor
fwait
jmp
jne
mov
pusha
aas
or
mov
ss
xor
jecxz
clc
aad
jno
inc
call
clc
int
cmpsl
imul
int
push
cmp
mov
xchg
sbb
jbe
fiadds
dec
mov
inc
xchg
incl
xchg
push
mov
test
inc
test
push
aam
pop
and
and
xor
xor
xchg
push
in
mov
rorl
pop
es
negl
outsb
int3
lahf
mov
out
cld
sub
xor
dec
add
std
sbb
imul
push
and
je
add
add
repz
or
adc
sub
sub
out
cmpsl
mov
in
push
cmpsl
push
and
int
push
adcb
test
inc
jo
data16
mov
xor
fs
push
sbb
pop
push
movsb
pop
pushf
aam
subb
inc
inc
jb
mov
test
mov
or
adc
adc
push
rolb
cmp
aaa
scas
outsl
jno
xchg
daa
clc
insb
loope
add
xorb
add
or
push
dec
dec
sti
std
fst
inc
lea
xorb
lods
in
or
xchg
push
mov
mov
pop
push
pushf
int
mov
or
mov
pusha
or
orl
into
fldt
sbb
cltd
repnz
repz
dec
repz
xchg
inc
int3
pop
push
sbb
mov
addl
inc
jmp
cmpsl
or
cmp
mov
mov
pop
arpl
sbb
bound
movsb
mov
inc
xor
ficompl
mov
mov
leave
shll
gs
inc
and
adc
cmp
lcall
pop
mov
sbb
jae
xor
mov
outsl
inc
stos
dec
jle
lds
or
stos
pop
cmovne
bound
cmpsl
dec
insb
jb
fidivrs
int
mov
icebp
mov
loope
jl
mov
mov
out
pop
data16
arpl
je
scas
cmp
push
xchg
pop
aas
fwait
sub
sub
or
enter
insb
cltd
cs
push
pop
jmp
movsl
xor
clc
mov
fsubrl
movsb
arpl
mov
jne
cmpb
jmp
and
add
xor
and
scas
mov
shlb
inc
sub
jne
sbb
pop
aas
clc
jge
in
jmpw
popf
push
stos
push
cmp
cmp
rclb
fucomi
add
clc
ds
mov
dec
in
lods
adc
pop
mov
call
aam
mov
xchg
fnstsw
push
das
sbb
out
cmpsl
or
xor
call
mov
cmp
adc
in
rcr
push
lock
pop
add
cs
mull
call
lea
and
push
popf
or
xchg
stc
ljmp
jl
mov
xchg
imul
and
lret
in
jmp
xchg
cmpl
and
sahf
push
pop
adc
and
mov
pop
loopne
test
or
jmp
lcall
push
ret
sbb
flds
cmpl
cmpsb
xor
jecxz
jb
xchg
sub
scas
pop
jmp
mov
cmpsl
popf
sub
cmp
lods
cmp
into
push
pop
add
inc
push
ret
xchg
pop
bound
sbb
or
scas
icebp
movsb
outsb
adc
inc
in
in
add
jnp
ret
and
cwtl
lret
in
adc
rcr
xchg
push
pop
xchg
push
popa
js
jns
test
add
xchg
adc
iret
push
bound
sbb
daa
fistps
push
cmp
cld
test
pushf
xchg
dec
jg
adc
sub
cld
lcall
insb
test
mov
incl
push
mov
mov
inc
xchg
pop
add
shlb
pop
mov
mov
int3
adcb
mov
cmpsb
adc
sahf
xchg
mov
add
add
cwtl
pop
bound
inc
dec
push
negb
ljmp
ret
or
scas
test
minps
dec
loopne
dec
sub
fwait
sub
and
pop
mov
icebp
lahf
ds
into
addr16
mov
mov
out
enter
pop
push
int3
insb
xor
add
decb
outsl
cwtl
push
cmpsl
mov
lahf
jo
or
fidivl
dec
cmp
out
pop
mov
dec
add
sar
lahf
xchg
int3
mov
mov
mov
and
mov
pop
jmp
pop
sar
loopne
xchg
ficoml
loopne
scas
mov
jo
out
nop
int3
jl
daa
cli
scas
add
hlt
test
imul
lds
mov
ljmp
mov
xor
in
pusha
int3
push
xchg
cmp
push
cld
mov
sbb
sbb
cltd
push
pop
out
hlt
es
xchg
sub
or
das
pop
push
cmp
xchg
fisubl
adcb
mov
clc
and
scas
cmp
add
pop
bound
jl
add
test
fmull
dec
mov
in
jl
sahf
mull
sbb
cmpsl
loopne
xor
cli
push
push
xchg
clc
test
sbb
pop
mov
sbb
dec
jmp
dec
mov
addl
sub
mov
int3
mov
aas
sbb
je
dec
clc
cmp
adc
movsb
sub
les
adc
mov
cmp
push
mov
mov
mov
xor
ljmp
mov
int3
mov
dec
ret
mov
mov
xlat
push
dec
or
call
rcrb
mov
sbb
inc
mov
hlt
cs
popf
lahf
lcall
ljmp
push
insb
jecxz
movsl
jecxz
jmp
test
je
hlt
pop
jmp
fstl
jmp
sbb
mov
mov
cmp
adc
test
in
inc
xchg
mov
sti
stos
testb
in
cs
shld
add
ret
fldenv
sbb
cli
ret
fs
stos
loope
jbe
xlat
sbb
je
sub
inc
pop
imul
repnz
insb
and
je
imul
xor
jl
fisttpl
rol
imul
lahf
xor
jns
fistl
lret
add
into
daa
and
pushf
inc
pop
dec
pop
push
lods
adc
aas
out
icebp
pop
rclb
xor
mov
xchg
dec
jmp
cmc
mov
incb
dec
push
in
or
aaa
sti
inc
or
jg
loopne
aaa
add
insl
cmp
psrad
inc
jle
jmp
cmp
add
ret
cwtl
sbb
cmp
mov
adc
mov
mov
push
shlb
cli
lea
fldt
push
loopne
add
test
stos
sub
icebp
adc
lock
roll
cwtl
pop
jp
cmpsb
push
arpl
mov
int3
imul
cltd
dec
mov
mov
aas
dec
pop
js
pop
mov
mov
push
das
inc
lret
xchg
mov
fbstp
ljmp
pop
adc
loop
xor
fsub
inc
xchg
ret
insb
ror
cmp
adc
in
lcall
clc
call
mov
cmpb
stc
addb
mov
push
cmp
rcrb
rcll
sbbl
test
dec
test
cwtl
pop
and
inc
dec
pushf
mov
adc
icebp
mov
daa
push
mov
loopne
test
imul
inc
mov
clc
mov
dec
lea
divps
ficoml
inc
das
scas
mov
xchg
xlat
cwtl
pop
xor
xorb
enter
and
cmp
out
xor
xor
add
movsl
pusha
aas
push
push
aam
sahf
scas
mov
imul
enter
aas
fninit
nop
movsl
jmp
enter
imul
mov
clc
int3
mov
das
iret
testl
ds
lret
sub
sub
cmpb
hlt
inc
in
into
aas
stos
ljmp
popa
rorl
push
adc
lahf
pop
mov
test
xchg
xor
mov
pop
xor
mov
pop
int
push
mov
repnz
cmp
aam
repnz
push
and
andb
lahf
add
fnstenv
into
jo
pop
lods
pop
xor
sbb
jle
dec
mov
xor
cmpb
aaa
cmpsb
xlat
adc
cs
cmpsl
inc
jl
gs
sbb
mov
gs
add
mov
dec
push
push
push
scas
mov
sbb
jle
mov
mov
mov
sbb
mov
test
dec
jmp
cmpb
fwait
cwtl
push
rcll
fcmovb
nop
lret
xchg
adc
dec
cmp
ljmp
cmp
scas
js
les
ret
xor
sbb
repnz
or
test
add
shlb
pop
in
sub
inc
sbb
inc
dec
pop
jb
rclb
adc
inc
gs
xor
adc
adc
lcall
dec
sub
hlt
add
mov
jmp
push
push
sub
adc
int
cmp
mov
pop
dec
pop
cli
imul
notb
cmc
xor
mov
mov
xchg
ss
ljmp
cltd
scas
inc
imul
aas
enter
negb
sarl
cmc
rcrl
push
cs
int3
jge
mov
ja
int
loop
imulb
push
sbb
or
int3
mov
sbb
adc
leave
pop
sbb
imul
push
jo
sbb
paddq
data16
dec
mov
pop
sahf
mov
stc
xchg
js
xchg
push
push
ret
dec
lock
ljmp
adc
push
or
push
and
jbe
jmp
cs
jae
push
sti
cmp
inc
sbb
xlat
cmp
or
push
xchg
add
outsl
mov
aas
inc
aam
adc
mov
push
cwtl
movb
cmp
cmp
cmp
popf
mov
pusha
push
or
push
rcrl
scas
mov
ficompl
sub
sub
pop
je
push
stc
jl
insb
es
and
ds
pmulhw
and
add
mov
rcr
mov
sbb
xchg
or
js
popa
std
out
sarb
aam
scas
cltd
push
test
hlt
sti
cmp
pushf
mov
cld
loopne
dec
xor
mov
enter
fimuls
loope
jae
add
cwtl
push
popf
or
mov
nop
cmp
xchg
dec
mov
push
push
sbb
ret
push
xchg
insb
inc
push
sbb
dec
jle
cmpsl
push
ljmp
add
out
dec
mov
fimull
pushf
stos
imul
insl
jmp
filds
xor
cmc
sub
mov
push
pop
and
xchg
lret
lret
pop
std
push
fisubl
out
jp
orb
and
inc
and
gs
mov
repz
pushl
push
lret
out
es
out
test
cmp
jb
dec
add
int
pop
sbb
add
add
cmp
pop
out
dec
int3
pop
xor
pop
pop
mov
lret
and
aas
inc
cmp
xchg
dec
shrb
pop
mov
repz
cwtl
leave
sub
jo
mov
andb
xor
mov
rorl
loop
mov
mov
jmp
stos
or
pop
insl
ljmp
mov
popf
in
push
mov
adc
out
jp
loop
mov
lods
loopne,pt
ja
and
jp
jmp
gs
repnz
and
or
inc
in
xchg
hlt
push
xlat
iret
sub
dec
pushf
sarb
icebp
cmpsl
xor
in
push
inc
bound
mov
js
mov
and
sbb
mov
and
adc
push
test
mov
or
push
jmp
nop
jle
cwtl
insb
jbe
mov
int3
into
and
mov
lock
test
mov
lods
dec
push
loope
testb
jb
inc
inc
popa
push
hlt
sub
cmp
mov
xor
cmp
in
and
xlat
cmpsb
in
push
rorb
das
aaa
movsb
xchg
pop
rcrl
mov
scas
add
cmp
inc
ss
mov
xchg
ljmp
xchg
add
lods
iret
in
push
sbb
aas
pop
and
ds
jnp
adc
cs
lods
or
js
paddsw
push
push
gs
dec
test
mov
fs
inc
jle
mov
arpl
jae
addb
ret
lcall
push
jb
pop
mov
mov
flds
sarl
pop
mov
pop
loop
xchg
insb
bound
push
cmp
ds
sti
fmull
mov
add
daa
jle
aaa
dec
and
loopne
mov
fisttpll
cltd
push
ret
dec
outsb
popf
xor
lds
insl
xchg
dec
dec
loope
pop
or
xchg
pusha
and
jae
sbb
push
rcll
fs
repnz
jae
dec
icebp
loopne
movsb
je
sub
xchg
inc
adc
stos
lock
push
or
add
or
les
jne
mov
or
aam
out
ret
add
leave
mov
and
mov
add
insb
push
sub
stos
dec
and
ljmp
push
xor
jmp
mov
jae
adc
and
push
fcoml
sahf
addl
xchg
adc
leave
sbb
ret
mulb
lret
jnp
fwait
push
pushf
cmp
mov
call
aas
mov
mov
movsl
push
add
xor
xchg
lahf
jmp
call
xchg
movsb
mov
adc
push
sub
ljmp
sub
pop
xlat
dec
pop
push
out
dec
push
fs
mov
dec
lea
out
inc
push
pop
fwait
roll
mov
pop
inc
add
aaa
dec
int3
add
and
sub
rcll
cmp
out
add
adc
xchg
sub
fnstenv
sub
jnp
movsb
mov
mov
fnstcw
out
rcll
mov
loop
inc
in
ds
out
lea
add
push
das
jg
shrl
pop
icebp
jne
addr16
fldl
pusha
mov
mov
sbb
sbb
xor
pop
xchg
pop
cmp
addr16
adc
nop
jae
push
jle
icebp
xor
add
pop
data16
in
in
cwtl
or
adc
push
rcrl
inc
cmp
adc
stos
dec
popa
mov
jl
sub
hlt
sub
je
sbb
pushf
sahf
lret
ja
notl
sub
loopne
dec
andl
pop
jnp
inc
cmp
push
sbb
pop
mov
and
pop
inc
sbb
mov
shll
or
idivl
adc
xor
jnp
ret
outsb
data16
lret
cmp
inc
cmc
mov
dec
enter
es
call
cmp
decb
and
fnstcw
or
add
fwait
adcl
add
xchg
rcrl
imul
xchg
repnz
fsubl
out
pop
or
and
or
outsb
dec
hlt
inc
loope
ds
or
pop
xchg
cltd
xor
jp
in
aam
fsubr
lds
ret
inc
xchg
xor
jnp
icebp
or
fwait
push
and
mov
ss
out
bound
insb
pop
fisttpll
mov
into
adcb
arpl
jae
fstl
sbb
cmpsl
mov
loop
cmc
push
addl
adc
mov
jo
inc
in
stos
sbb
cmp
icebp
sahf
les
jb
add
cmp
mov
fstps
sti
lret
jae
jmp
inc
scas
orb
adc
pop
lea
lock
gs
test
mov
sti
sti
jle
fisubl
nop
and
inc
cmp
sub
xor
dec
fwait
mov
mov
xchg
sarb
fdivp
shll
sbb
sbb
inc
pop
inc
sbb
add
std
cld
xchg
hlt
mov
sbb
int3
xchg
push
mov
jbe
cmpps
sbb
mov
mov
shl
ret
mov
pop
adc
repnz
xchg
push
sbb
cmc
add
jl
rclb
mov
cmpsl
aam
or
movsl
sbb
mov
shll
push
dec
or
call
lcall
es
or
call
push
and
xchg
lock
dec
insl
pop
and
adc
das
and
outsl
ret
dec
sub
fistl
inc
mov
inc
pop
jmp
adc
lods
cmpsl
and
jnp
push
adc
in
jb
leave
movsl
sub
lahf
mov
xchg
scas
inc
stos
int
aam
call
testl
test
inc
cmc
cmp
jb
mov
mov
lock
inc
xor
repz
mov
push
lahf
mov
jmp
jge
mov
test
das
addr16
jno
and
outsl
shlb
mov
pop
mov
pusha
adcb
lock
leave
push
jnp
mov
jbe
xchg
pushf
push
mov
cwtl
jbe
cmp
cmpsb
das
add
jecxz
dec
sub
js
fwait
inc
push
popf
sub
jo
pushf
pusha
cmp
pop
mov
xchg
pop
lret
push
xorl
test
sbb
add
mov
or
xor
and
shl
or
adc
xor
mov
out
mov
xor
scas
pusha
ljmp
stc
cmp
dec
popf
or
mov
loop
popa
stos
movsb
adc
ljmp
shrb
xchg
and
inc
insb
xchg
inc
adc
inc
sbb
roll
lret
pop
fidivl
fiaddl
pusha
adc
mov
add
push
sub
out
pop
loop
das
test
jo
mov
pop
bswap
mov
loopne
fisubl
push
lock
int
cmp
xchg
pop
rcl
test
loop
arpl
inc
sbb
ror
dec
stc
jno
enter
sti
call
lods
mov
mov
ds
sbb
add
imul
xchg
fwait
out
xchg
push
shll
xchg
int3
lea
inc
sbb
mov
and
mov
pop
jle
mov
jmp
xor
call
test
push
imul
or
sbb
pop
fstpl
inc
mov
adc
jnp
out
xor
ljmp
and
sti
movsb
add
in
xlat
pusha
sub
xchg
cmp
cld
cmp
sbb
loop
inc
in
repz
test
xor
adc
lcall
xchg
add
test
scas
mov
jl
pop
mov
pop
out
push
repz
add
call
mov
ret
inc
or
sbb
repnz
test
mov
jmp
pop
daa
out
int3
mov
idivl
int
sub
lods
jg,pn
push
into
cld
daa
cmp
and
int
jle
mov
cmp
jmp
and
cmp
mov
enter
pop
movsb
sti
lods
cmp
jecxz
fsubl
pop
movsl
aam
enter
cmp
adcb
inc
adc
sub
lea
lods
das
sub
lods
mov
test
mov
out
stc
xor
mov
iret
push
pusha
adc
pop
mov
imul
xchg
movl
mov
add
or
iret
movsl
in
int3
loop
shlb
push
iret
push
sbb
sbb
icebp
jno
and
insb
stos
push
xchg
testb
xlat
vcvtsi2sdl
mov
movsl
pop
xor
cltd
in
inc
xchg
in
shr
sbb
cli
pushf
scas
ljmp
jg
sub
inc
add
push
shlb
imul
mov
jecxz
ficompl
sbbl
mov
ficoms
aaa
inc
sbbb
fisubs
imul
push
push
pushw
shrb
push
jg
dec
mov
in
rolb
stos
xlat
in
pop
jbe
orb
mov
mov
call
sub
mov
pop
or
dec
and
cmp
xchg
push
lcall
repnz
sub
jl
jnp
hlt
mov
pop
mov
add
and
lods
jnp
xchg
push
in
cmp
stos
das
sub
or
xorl
inc
jno
ret
push
enter
lods
mov
push
xor
cwtl
repnz
into
inc
xor
mov
xchg
push
xor
mov
sarl
enter
and
mov
in
pusha
push
test
out
insb
sbb
negl
xchg
gs
pop
testl
or
into
mov
es
and
mov
add
lret
insb
inc
mov
std
aam
pop
int
es
leave
push
mov
cli
fwait
jne
dec
xor
ret
xchg
loop
lret
fwait
jne
dec
xor
negl
sbb
sub
xchg
sub
adc
xchg
pop
cmp
push
jge
push
insb
sbb
sub
les
push
sbb
inc
mov
sbb
inc
lret
sbbl
xchg
scas
ja
dec
fdivrs
leave
mov
push
add
mov
sub
icebp
mov
lock
imulb
push
adc
inc
sbb
or
dec
cltd
and
addr16
sbb
sbb
inc
cmc
jmp
adc
andl
push
loope
jbe
mov
fiaddl
adc
sbb
ljmp
aas
out
shl
fsubl
jmp
pop
push
int
idivb
subl
cli
data16
inc
loop
imul
outsl
cld
arpl
sub
in
es
xor
fisubs
icebp
shrl
shlb
mov
rcrl
cmp
in
imul
iret
and
inc
pop
das
mov
pop
jle
xchg
xchg
and
adc
ret
loope
and
movsb
js
jmpw
adc
loopne
mov
jp
pop
add
push
or
sahf
fwait
sbb
jnp
jno
lret
push
ds
ss
push
or
xchg
xchg
aam
ja
out
adc
mov
mov
add
adc
rcll
cli
mov
push
pop
std
jnp
mov
pop
mov
mov
adc
repnz
ja
js
sub
fidivs
add
sbb
sbb
ss
xchg
inc
jo
push
mov
cmpsb
push
mov
test
pusha
xor
pop
aas
fiadds
orb
jmp
out
scas
mov
or
jmp
imul
mov
fwait
jmp
jmp
xchg
xchg
int
mov
adc
pop
cmp
cmp
movsb
je
and
jne
orl
ret
stos
xchg
aam
push
lods
xchg
jecxz
jae
test
call
sarb
lahf
pushf
int
and
int
cwtl
movsb
pusha
addb
pop
cmp
dec
imul
push
inc
inc
pop
shlb
dec
sub
rolb
hlt
cmp
fs
jecxz
sub
cmp
ret
sbb
test
push
add
gs
xor
mov
push
inc
cltd
and
pop
or
or
pop
sub
or
jg
popf
xor
cli
out
cmp
rcr
pop
push
xor
hlt
in
test
mov
stos
mov
les
incl
and
mov
out
xor
cmpsb
jle
das
mov
cltd
sub
push
sub
stos
mov
sub
mov
ljmp
jb
test
sub
jnp
cmpsb
push
jmp
movsl
fbstp
cltd
test
cmp
arpl
pop
and
xor
jbe
or
add
lret
dec
ljmp
clc
cltd
std
sbb
popa
jmp
dec
jo
dec
mov
repnz
dec
mov
scas
hlt
daa
es
cli
lcall
dec
mov
aaa
adc
and
ficompl
and
mov
lock
push
and
xchg
mov
testl
push
enter
add
cmp
mov
pushf
jbe
lea
cmpsl
inc
or
pop
test
pop
daa
push
fisttpll
lea
sub
sti
adc
inc
mov
cmpsl
xor
insl
rolb
je
jge
adc
push
inc
sub
call
lahf
inc
adc
push
je
jnp
dec
cmp
cmpsl
sub
fwait
outsb
mov
hlt
fsubrl
cld
xchg
notb
or
pop
gs
sub
scas
mov
mov
inc
fisttpll
cmp
sub
int3
push
dec
ljmp
aas
pop
fisubrl
xchg
std
pop
cmp
clc
fwait
icebp
repnz
mov
andl
push
jl
data16
sub
ret
icebp
cmpsb
pop
into
xor
je
sbbl
pop
pushf
test
pop
cli
sbb
cmpb
mov
repnz
xor
cs
dec
hlt
ss
or
out
loopne
in
daa
xchg
dec
scas
xchg
daa
mov
xchg
scas
dec
push
mov
neg
mov
imul
mov
mov
push
cmp
movsb
rcl
sbb
fcomps
and
pop
xor
adc
add
pop
lods
jo
jns
in
xchg
loop
push
inc
ljmp
push
hlt
or
filds
lds
in
in
adc
imul
test
stc
pop
cmp
jp
xor
cmp
lcall
sti
in
mov
or
xchg
subl
add
mov
push
mov
xchg
lock
push
mov
xchg
push
bound
sti
dec
popf
xchg
push
pop
fdivrl
mov
ret
push
and
sub
in
fldenv
aaa
out
adc
or
addr16
cmp
cld
push
cmp
pushf
xlat
repnz
fdivp
mov
inc
or
imul
mov
mov
flds
cmp
and
rcrb
pop
add
mov
cmp
pop
js
hlt
in
sbb
ss
xor
push
imul
movsb
or
inc
idivb
out
les
addb
xchg
stc
mov
mov
pop
dec
int3
daa
roll
jl
lcall
dec
add
js
jecxz
in
out
cmpsb
movsb
sub
pop
inc
mov
inc
inc
movsl
xchg
sbb
sub
fsubr
xchg
jmp
in
das
sbb
imul
add
jg
rcll
cmpsl
icebp
cmp
clc
mov
lock
rcl
mov
loopne
popf
ss
push
cs
fisubl
inc
jl
and
in
or
hlt
cmp
push
js
std
xchg
and
mov
ret
gs
sub
sbb
fcmovb
pop
addb
xor
call
out
stc
mov
add
and
and
add
les
pop
flds
insb
or
out
adc
inc
in
fwait
jg
sti
test
push
mov
jg
xchg
dec
nop
test
cmpsl
dec
aaa
xor
jp
stos
orb
pop
mov
jb
lods
mov
mov
lods
sub
adc
mov
ljmp
mov
stos
mov
lret
pop
aas
scas
scas
insb
sahf
sub
in
fcomi
mov
sbb
xchg
hlt
sbb
add
dec
add
fisttpl
mov
cmp
cld
push
loope
pop
das
arpl
hlt
add
in
cmp
int3
xchg
xchg
lret
sub
adc
or
mov
lret
lcall
cli
sbb
cmpsl
jecxz
rcrl
mov
decb
ficomps
cwtl
das
sub
push
enter
cmp
loop
arpl
insb
xchg
fwait
pop
inc
xlat
jmp
mov
addr16
insb
cmp
enter
mov
and
sbb
pop
pop
push
repnz
pusha
rolb
pop
xor
lods
xor
bnd
sub
popa
das
cmp
fiadds
imul
cld
push
rorb
cltd
xchg
sub
or
shll
movsb
jmp
adc
xchg
pop
insl
dec
call
js
or
mov
and
xchg
or
inc
inc
fimull
push
xor
dec
cmp
cmp
clc
mov
ret
xchg
pop
lcall
push
movsb
jne
std
aas
and
inc
jb
sub
scas
push
sub
sbb
lcall
pop
jmp
subl
mov
jns
sub
or
mov
loop,pn
cwtl
mov
ss
call
push
lds
movsb
in
or
cs
mov
ss
rcrb
fcoms
lds
js
dec
push
mov
imul
mov
in
pop
mov
adc
pop
xor
inc
xchg
push
jae
mov
aam
sar
test
xchg
inc
mov
or
and
mov
inc
mov
inc
cmpsb
push
pop
test
xor
ret
push
adc
test
pop
xchg
jo
leave
sbb
mov
fwait
and
movsb
pop
mov
pop
inc
pop
test
xor
in
xlat
or
movsb
and
mov
cs
fadd
mov
aaa
shlb
inc
into
mov
or
and
out
jmp
test
xlat
js
push
or
mov
mov
aas
imul
arpl
scas
xor
cmp
popa
scas
sub
fistl
and
add
cwtl
movsb
int3
movsb
rorl
dec
inc
jge
into
dec
adc
cli
std
xor
sbb
mov
cmp
icebp
out
sahf
jmp
xchg
stos
push
mov
shr
mov
or
lock
cmp
mov
xchg
xchg
cmp
jmp
sahf
xlat
lret
adc
out
movsb
enter
lret
rcl
xchg
dec
es
jo
push
dec
aas
jnp
shl
insb
call
adcb
jp
ret
cmp
dec
pop
sub
adc
pop
jbe
ret
cmp
sub
sbb
pop
or
loopne
mov
adc
push
into
xor
stos
test
and
jb
std
dec
xchg
add
sub
inc
cld
inc
iret
shll
sub
mov
movzbl
cwtl
push
mov
aaa
popa
jmp
sti
cmp
orl
hlt
stos
xchg
add
faddl
sub
jl
js
sbb
inc
sub
xchg
xor
enter
xchg
dec
sub
mov
inc
fwait
jmp
mov
cmp
xchg
in
fmul
je
iret
inc
pop
lods
cs
sub
jbe
aas
fwait
adc
push
pop
outsl
pop
xor
lret
push
dec
fisttps
mov
sti
add
out
mov
outsb
xor
push
aad
pop
jae
cli
dec
adc
arpl
push
stc
push
loopne
jl
cwtl
lcall
pop
pop
and
or
mov
call
adc
hlt
adc
xor
clc
jnp
push
int
jp
adc
cmp
ds
mov
repnz
mov
or
xor
xor
mov
xchg
adc
lret
jle
xchg
cld
jmp
lods
mov
push
xlat
pop
out
ds
sarb
jnp
lahf
dec
mov
push
test
adc
repnz
cld
mov
xchg
cmp
jle
jne
je
push
ljmp
std
mov
aas
xor
cmp
add
imul
pop
adc
stos
mov
mov
out
dec
adc
fadd
dec
xor
int3
test
jnp
repz
xchg
test
inc
inc
repnz
xchg
or
or
pusha
adc
or
jnp
jno
bound
mov
pusha
mov
xchg
je
pop
ljmp
sub
mov
int
fimuls
and
and
cmp
adc
or
add
xchg
imul
pusha
add
imul
sub
jmp
inc
mov
xlat
pop
sbb
mov
sub
outsb
stos
in
mov
sub
xor
inc
repnz
sti
jb
or
xchg
rolb
add
sub
xchg
sub
cmp
aam
pop
xor
out
mov
hlt
or
fisubrl
push
mov
cmp
inc
and
cmp
cltd
je
fxam
cmpsb
push
cmp
mov
in
in
cmp
movsb
popa
jmp
sub
call
pop
push
pop
push
or
xchg
fisubrs
test
cmp
sbb
adc
push
test
lea
mov
cmc
ds
mov
mov
cltd
sub
mov
push
mov
sub
hlt
mov
addr16
adcb
xchg
or
inc
dec
sub
mov
je
cmp
mov
addb
imul
fdivr
sbbb
add
cmp
rclb
test
push
jb
xchg
push
xor
dec
dec
ret
aas
jns
aaa
sbb
pop
inc
daa
sub
dec
cmp
jmp
push
xlat
cmp
dec
fldcw
sub
out
push
mov
lret
adc
in
xchg
aas
and
adc
or
sbb
call
fwait
cmc
inc
pop
add
sbb
push
fs
adc
mov
inc
lret
pop
pop
inc
movsb
aad
sbb
xor
xor
dec
mov
sbb
jnp
jl
mov
bound
notl
sti
pop
int
shll
ss
loope
pop
cmc
add
das
lcall
int
loope
jge
mov
dec
enter
in
je
adc
add
enter
mov
scas
or
pop
and
inc
pop
dec
lcall
mov
mov
jbe
in
or
push
rcrl
js
dec
push
movsb
mov
fwait
sub
xchg
popa
push
mov
push
in
dec
stos
je
je
leave
arpl
ds
mov
lock
fstpl
mov
in
popf
xor
ss
movsb
sub
out
mul
loop
mov
decb
cld
add
fmul
pop
repnz
imul
or
push
jo
add
sub
inc
ds
fstps
cmp
add
icebp
jecxz
imul
out
push
sub
shl
lcall
push
jae
jb
mov
add
shlb
adc
fnsave
das
sbb
stos
xor
into
ljmp
bound
je
pop
pushf
test
mov
out
dec
es
pop
jbe
adc
add
mov
add
mov
and
andb
shlb
mov
cmp
lods
imul
lock
pusha
mov
push
ds
mov
sarl
cld
and
repz
das
sub
aas
cmc
and
mov
xchg
call
sbb
jp
jge
cmpsb
rorb
loop
add
pop
sub
push
ficoms
mov
loope
aam
pop
fildl
sbb
cmp
mov
sub
fbstp
adc
push
pop
divl
mov
add
enter
loope
dec
repnz
inc
mov
fadds
imul
test
lds
or
mov
aad
enter
pop
fildl
dec
jecxz
fs
daa
mov
mov
fstpt
test
lock
rorb
ret
sbb
adc
std
dec
in
les
das
jl
inc
stc
sbb
test
test
daa
jb
lods
mov
lret
jg
cmp
cmpsb
arpl
lock
aas
fstpl
or
stc
and
inc
push
les
loope
repz
rol
push
jne
ret
xchg
push
adc
sbb
mov
push
sbb
std
jge
mov
xor
pusha
insl
cmp
aam
fmull
or
mov
cmpsl
mov
sbb
pop
xor
es
adcb
or
dec
cld
mov
add
scas
jmp
sub
pushf
mull
popf
stos
nop
or
repz
nop
mov
add
adc
rcll
adc
and
sbb
dec
adc
jecxz
lods
stc
frstor
sbb
mov
jmp
push
adcl
hlt
push
pop
inc
lock
repnz
test
flds
pop
inc
mov
xor
stc
pop
ja
cmp
mov
movsl
int3
arpl
loopne
inc
or
adc
push
scas
sti
and
push
or
inc
xchg
shrb
mov
test
pop
imul
fistpl
pop
lock
fisubl
jg
pop
insb
sub
in
mov
mov
cwtl
leave
xor
or
in
and
cmp
push
jp
push
lock
mov
or
push
sbb
xor
enter
and
pop
jne
test
dec
xchg
fcom
adc
add
in
sbb
push
jl
sbb
sahf
rcr
fcmovu
rcrl
inc
xchg
addr16
xorl
rorb
fistps
push
and
mov
lret
mov
add
psrad
pop
pop
cmc
add
dec
sbb
clc
aam
adc
cld
xchg
cld
mov
movsb
xor
je
icebp
std
les
stos
ret
jbe
mov
fdivrl
addb
mov
in
les
and
movsl
addb
push
sub
arpl
push
mov
sarb
sar
mov
or
stc
lret
push
ja
xor
fistpl
pusha
sbb
loop
or
push
out
aad
cwtl
mov
mov
cmc
hlt
ljmp
mov
cmp
sbb
sub
mov
call
inc
mov
loope
sbb
add
jae
out
xor
sub
mov
xchg
sbb
pushf
jmp
outsl
jo
xor
xor
and
sti
out
jnp
push
lock
aas
jbe
shrb
mov
pop
shrb
repnz
daa
iret
adc
bound
xor
leave
and
mov
cmp
test
aam
push
and
cmp
sti
xchg
jl
cmp
in
jne
inc
jle
js
lahf
in
out
pop
loop
cltd
push
enter
adc
push
xor
rcl
mov
push
mov
subl
jae
pop
pop
pop
mulb
dec
sbb
mov
pop
bound
or
repz
sahf
aas
ds
lret
cmp
inc
jns
iret
lret
mov
shll
ja
inc
outsl
lcall
pop
mov
fistl
or
xor
xlat
les
or
rcrb
xor
cmc
cltd
das
lock
jo
sub
add
and
das
cli
insb
in
mov
xor
or
loope
lods
push
sub
test
cltd
pop
push
sub
rorl
movsl
call
lods
rorb
in
pop
xor
push
sbbl
clc
push
push
fwait
decl
outsb
retw
mov
pop
jp
xchg
aaa
jne
ret
lcall
test
or
insl
inc
arpl
push
and
subl
orb
mov
addl
cmp
mov
jb
sbb
xchg
xchg
lock
add
inc
and
out
sub
rclb
xor
imul
bound
jo
movsb
inc
ror
lret
xor
jg
or
repnz
jg
inc
sub
inc
xor
and
push
push
arpl
jne
cwtl
out
cmc
cmp
pop
cmp
ss
rclb
sbb
pop
xor
jge
outsb
jp
std
sub
adc
pop
repz
and
jge
push
lods
stos
sub
sbb
adc
push
jbe
jb
jns,pt
imul
xor
sub
js
pushf
lcall
lret
xor
fwait
xlat
push
push
jo
repz
rorb
inc
leave
mov
sbb
dec
adc
mov
or
add
les
cmp
int3
add
in
sbb
roll
jl
add
js
mov
inc
jbe
mov
xchg
loop
sbb
jle
push
repnz
les
lea
cltd
mov
es
sahf
out
cmp
xor
xlat
stos
inc
lret
or
leave
lcall
fucomp
cmp
nop
int3
or
jmp
insb
shlb
dec
mov
and
test
movsb
in
pop
jge
insb
imul
adc
inc
jne
sbb
push
push
scas
pop
cld
ljmp
push
push
lds
sub
xor
popa
aas
xchg
rclb
and
stos
lahf
and
pop
pop
pop
in
cwtl
into
call
dec
mov
dec
and
ja
mov
sub
test
push
xchg
loopne
push
add
js
gs
sub
mov
jg
std
pop
call
addl
dec
stos
add
hlt
in
out
or
in
and
stos
mov
xor
pop
xchg
in
in
mov
lret
addl
mov
jp
and
pop
ror
sub
inc
clc
or
pop
mov
mov
jmp
jns
xchg
sub
aad
lahf
and
jmp
add
adc
push
add
shll
hlt
imul
repnz
sbb
sub
jmp
aad
mov
cmp
inc
pop
mov
in
adc
cwtl
mov
mov
fucomp
inc
inc
rcrl
lock
ljmp
inc
aad
sub
add
push
and
push
mov
mov
cltd
dec
or
stos
out
mov
cmpsl
iret
sti
lret
movsl
dec
out
loopne
test
mov
mov
nop
mov
data16
dec
cmp
mov
jnp
ficoml
repnz
je
or
mov
aad
mov
enter
das
and
subb
sbb
sub
lcall
add
lods
cmp
stos
cwtl
dec
mov
push
out
test
lds
mov
cwtl
cmpsb
orl
es
bnd
mov
fwait
jecxz
stos
pop
in
mov
add
ds
aaa
fldl
fs
pop
xor
rolb
and
fists
pop
pop
das
jno
es
mov
push
fstl
js,pt
pop
sub
fmull
subps
cmpsb
jle
ss
sub
push
fcmovnb
jo
and
jp
orl
call
or
xchg
sub
mov
lock
insl
adc
cmp
sbbl
mov
pop
pop
xchg
mov
movsl
lds
add
movsl
mov
lahf
push
inc
sbb
push
inc
std
push
adc
rclb
mov
rorb
and
rorb
cmpsl
in
test
xor
pause
enter
xlat
lds
mov
ljmp
frstor
ss
pop
sub
jmp
popf
pop
mov
pop
and
or
mov
push
aad
pop
cmp
test
outsb
and
subb
mov
scas
and
sub
mov
sbb
inc
repnz
jb
jl
pop
inc
es
pop
mov
fdiv
test
cwtl
aas
ljmp
bound
cwtl
inc
into
adc
dec
and
sbb
in
clc
jmp
jl
aaa
rcr
daa
repnz
nop
fisttpl
mov
cmp
mov
ret
mov
pop
jmp
std
andl
mov
mov
mov
dec
add
sub
and
pop
js
dec
xor
cmpsb
mov
xchg
sahf
pop
mov
out
xor
xor
subb
push
divl
cmp
test
xchg
imul
jp
sub
pop
cmp
mov
repnz
cmpsl
mov
hlt
ds
pop
sub
jmp
mov
mov
cmp
cmp
mov
pop
and
aam
mov
lret
sar
test
lret
sub
testl
in
pushf
cmpsl
hlt
notl
out
sbb
mov
mov
mov
stos
pop
pop
xor
mov
xor
scas
test
inc
jecxz
aad
or
mov
cld
out
and
mov
aam
pop
pop
push
push
and
mov
xor
in
or
pop
std
in
fcmovb
xchg
add
nop
push
push
movsl
sub
cld
mov
out
nop
or
ds
aam
jns
adcb
cmp
inc
addr16
add
ljmp
mov
inc
push
xchg
cmp
add
push
add
inc
jb
addr16
jg
pop
nop
iret
jle
cltd
inc
shlb
push
sahf
sarb
pushf
dec
pop
mov
push
sti
cmp
jbe
loopne
xchg
popf
lret
inc
scas
xor
int
call
inc
icebp
xlat
mov
cwtl
or
mov
in
fdiv
mov
fldt
mov
loope
roll
jg
movsl
or
sahf
ret
cwtl
fisubl
pop
push
jg
xor
jno
hlt
xor
data16
sub
mov
sbb
ljmp
mov
sahf
push
jle
sahf
sub
mov
inc
in
in
movsb
push
inc
push
push
mov
nop
sbb
iret
sub
jne
and
inc
add
xor
aaa
cmp
cmp
loop
fldenv
push
hlt
int
mov
or
or
jg
push
outsb
jmp
pmulhw
aas
sbb
mov
inc
aas
fisttps
or
sub
pop
pop
push
int3
sbb
lock
shrl
mov
mov
int3
imul
jo
cmp
scas
cltd
pop
sub
popa
and
sti
pop
ret
pop
loope
call
xchg
pop
outsb
loopne
shl
push
xchg
xorb
mov
outsl
or
pop
push
sbb
cmp
mov
pop
pop
sbb
popl
xor
cld
pop
fisttps
loopne
push
test
ret
repz
sub
jo
fdivr
adc
cs
inc
jne
minps
xor
insl
mov
dec
sbb
sti
shlb
mov
sbbl
roll
repnz
stos
xor
pop
aaa
test
imulb
and
mov
and
mov
sub
jge
cld
stos
enter
mov
fs
and
jnp
pop
imul
and
cmp
pop
xor
aad
xchg
adcb
jae
sub
pushf
in
into
sbb
pop
test
pop
sub
mov
push
in
fs
aaa
jp
jg
fdiv
data16
pop
dec
and
cmpsl
sbb
mov
mov
cmpsl
xor
push
lods
outsb
sub
lcall
pop
pop
push
callw
cwtl
mov
adc
xchg
das
mov
outsl
xor
mov
dec
or
insb
mov
pushf
aas
fdivrl
ror
scas
dec
shll
pop
add
xchg
mov
pusha
insb
xchg
push
cmp
and
out
xor
es
sbb
in
xchg
adcb
or
sbb
mov
push
je
mov
jmp
pop
mov
les
mov
fld
fstpt
popf
xorb
mov
sub
mov
jno
add
divl
enter
and
inc
adc
mov
pop
cmp
and
sub
cmpsl
lahf
sar
fmull
pop
mov
jmp
mov
movsl
je
jle
sub
sub
test
cmpsl
iret
pop
jmp
les
mov
and
mov
mov
xchg
add
sbb
lret
nop
sbb
outsl
pushf
adc
sarl
out
cmp
pop
into
cmp
aam
xor
cmp
cwtl
inc
popf
adc
adc
pop
lret
push
stc
pop
sub
cmp
xorb
mov
mov
fnstsw
adc
data16
inc
or
adc
data16
mov
xor
and
push
out
xorb
sub
outsb
add
pop
and
mov
ljmp
mov
inc
push
adc
rol
out
or
lods
icebp
mov
cmp
sarb
adc
testl
sbb
in
data16
mov
xchg
lcall
inc
in
push
pusha
insl
shlb
push
inc
sahf
mov
sbb
fcomps
je
pushf
add
push
in
xchg
mov
mov
lds
mov
sbb
mov
in
jle
pop
xor
xchg
orl
in
or
pop
ss
adc
inc
lret
pop
sbb
bound
inc
jb
pop
mov
cmp
dec
push
imul
sub
lea
iret
lds
clc
imul
out
jmp
mov
sub
mov
aas
or
lods
or
fidivs
sub
push
cmp
rolb
outsb
or
add
loopne
outsl
mov
scas
out
ret
hlt
xor
addl
in
jo
mov
jl
cmp
cmp
lods
ficoms
repz
ja
mov
pop
jbe
popa
xor
rol
ret
gs
loopne
dec
fists
das
mov
push
fdivs
mov
shr
repz
pusha
inc
inc
xor
fsubrl
add
ret
dec
sbb
mov
sub
pop
cld
mov
fcom
fs
mov
add
in
lock
pop
sbb
adc
ljmp
pop
ljmp
orl
pop
repz
mov
pop
mov
iret
or
movsb
cmpsl
mov
push
andl
push
xchg
fs
pushf
jle
cld
iret
ret
out
cmp
aas
popa
sub
add
mov
cmc
pop
fcoms
fwait
xchg
in
add
daa
fdivr
ss
or
push
push
pushf
mov
mov
or
loope
addb
sahf
mov
addb
mov
sub
loop
or
push
push
pop
sbb
sub
xor
lock
es
leave
jo
stos
jbe
dec
notb
jmp
inc
jb
loope
psadbw
xchg
stc
or
adc
enter
cmp
adc
loope
addb
icebp
mov
loopne,pt
jb
add
loop
add
lcall
inc
negl
mov
gs
push
cmp
add
add
iret
jl
xchg
mov
cmp
movsb
js
dec
pop
adc
mov
test
jp
mov
mov
lcall
xor
dec
dec
fildll
jle
loop
icebp
jle
pushf
out
or
lea
das
enter
lret
or
inc
sub
jmp
push
push
xor
je
sbb
int3
mov
ja
test
movsb
daa
push
pop
fs
sub
add
sbb
test
xchg
je
ss
pop
lock
inc
xchg
aaa
and
daa
push
loop
insl
mov
je
fldenv
adc
arpl
icebp
cmpl
daa
pop
out
out
mov
mov
cmpsl
cld
adc
xchg
mov
mov
fmuls
das
out
jge
or
addr16
rclb
popa
cld
adc
pop
call
mov
sbb
sbb
cmp
les
mov
mov
inc
ret
xor
dec
ljmp
fbld
and
std
repnz
ret
pop
sub
add
outsb
sub
lcall
inc
jno
jo
sub
pop
inc
aam
or
arpl
ret
icebp
pop
out
cmp
or
adc
push
testl
ror
add
add
mov
cwtl
adc
xor
mov
ret
pushf
in
sbb
pop
push
out
jge
inc
jmp
or
lea
orl
pop
arpl
pop
int
and
cmp
cmp
lea
notb
jmp
les
iret
ret
push
mov
popa
fsubl
fs
movsl
cmp
in
cmpsl
add
xor
fnstcw
rclb
xchg
scas
pop
xor
cmpsb
scas
or
dec
cmp
push
negl
fwait
mov
pushf
mov
fcompl
cld
push
sarl
aas
mov
bound
pop
notb
cmp
adc
pusha
in
bound
cmp
jl
int3
push
mov
xchg
xchg
imul
jle
mov
fsubr
add
cld
pusha
mov
loopne
dec
xchg
and
subb
fsub
sbb
test
ret
mov
daa
push
xor
sub
lods
adc
es
inc
int
lods
leave
in
sub
mov
push
cmp
push
push
sahf
xchg
test
test
push
mov
pop
popf
es
and
jle
pop
push
cmp
mov
scas
ss
mov
das
jo
shlb
ds
shrb
cmc
aas
or
push
jmp
call
repnz
adc
push
sbb
mov
dec
ret
test
and
sub
add
addr16
or
sbb
xor
or
mov
rcr
jnp
or
ret
aam
jg
notb
aam
xchg
add
ljmp
cmpsl
ret
adcb
pop
jcxz
or
adc
sub
inc
and
pop
fs
add
dec
push
enter
test
testl
aas
cli
xchg
fs
and
sbb
pushf
lds
out
and
sbb
mov
in
mov
shl
push
sbb
and
repnz
jl
scas
enter
scas
decl
mov
ds
nop
arpl
pushf
pushf
cld
pop
pop
dec
lea
lea
inc
pop
repnz
rolb
push
jbe
bound
or
movsl
ss
loop
addr16
rclb
cmp
mov
mov
arpl
jb
xchg
sarl
insb
cld
repz
sbb
push
insl
mov
xchg
dec
push
xorb
iret
sub
pop
pushf
jno
pop
lret
push
and
and
inc
loopne
lea
dec
and
add
push
fistpl
push
xchg
add
xor
add
or
movsb
mov
aaa
xor
mov
push
push
loop
jg
in
out
dec
inc
push
test
fdivr
aam
mov
jl
addl
push
fs
add
push
insl
ret
popl
lods
lds
xor
push
cmp
xchg
xchg
inc
pop
sbb
dec
xchg
xchg
adc
xor
repnz
dec
mov
xor
cmpsb
cmpsl
imul
sbb
add
mov
mov
jg
das
add
dec
mov
es
mov
jmp
add
pop
ja
pusha
lods
jge
xor
std
mov
push
daa
push
mov
cmp
jmp
rcrl
mov
xchg
lea
jo
dec
jbe
jmp
scas
lea
clts
pop
test
aad
pop
in
dec
mov
fists
pop
add
jno
inc
inc
pop
adc
fldl
stos
outsb
nop
cwtl
cmp
or
mov
outsl
push
jmp
bound
nop
movsb
shlb
add
mov
popa
and
dec
fstpt
push
or
xor
std
mov
test
and
gs
in
ljmp
out
fistps
ficoml
and
mov
adc
and
popf
sbb
frstor
and
mov
jmp
push
loope
mov
ljmp
roll
filds
inc
test
fnstcw
punpckhwd
imul
fidivl
jmp
sbb
cmpsb
pop
in
fnstenv
dec
sub
int
sbb
mov
pop
sub
lret
inc
mov
pop
rclb
xchg
mov
jne
sbb
adc
mov
sbb
or
add
stos
mov
jp
in
clc
xchg
jl
mov
dec
adc
int
ror
adc
inc
or
mov
aam
dec
pop
aaa
out
out
pop
cmc
fsubrs
sbb
fwait
std
jae
addl
mov
shrl
faddl
or
or
jg
data16
andb
or
inc
dec
shrb
add
rcl
xchg
jmp
aas
add
das
andl
jecxz
cmp
nop
orb
arpl
int
lds
lock
aam
aad
inc
pop
adc
dec
mov
mov
sub
xchg
sahf
cmpsl
jp
lea
jl
hlt
inc
shrb
xrelease
insb
push
cli
adc
ret
leave
imul
ret
pop
adc
sub
loop
loopne
push
imul
cmp
out
leave
das
pop
movsb
rcll
pop
mov
jae
jb
add
repnz
mov
out
and
test
out
loopne
push
mov
xor
adc
lret
sbb
loopne
aam
nop
cli
jle
pop
mov
pop
jecxz
jns
lds
pop
jle
ret
ror
xchg
stos
outsb
jne
aaa
cmp
nop
inc
dec
stos
stos
lea
aam
jge
in
push
adc
add
or
mov
mov
pushf
sbb
mov
jno
cmp
repz
push
push
jnp
popa
adc
push
push
ljmp
jle
out
and
insb
push
mov
xor
push
xor
nop
cmp
in
das
cmp
por
out
scas
ljmp
push
pop
adc
dec
test
dec
mov
call
ds
bound
cmp
push
push
clc
mov
int3
xchg
jns
push
lds
mov
mov
jbe
aas
add
insl
push
cmp
mov
push
jb
mov
adc
pop
imul
cmp
push
sub
mov
pop
jbe
mov
mov
mov
jae
call
or
outsb
or
shll
sbb
sbb
mov
mov
pop
add
pop
mov
push
fsubrl
push
filds
mov
lds
ret
aaa
mov
les
push
mov
mov
ret
ss
outsl
sub
repz
imul
mov
fsubl
mov
inc
cmpsb
push
adc
in
inc
enter
arpl
push
cmp
lods
fdivl
cmp
cmp
in
test
push
in
fcomip
out
pop
enter
je
in
hlt
sbb
shrl
sbb
cmp
mov
push
cli
lret
push
push
mov
mov
sahf
stos
jmp
adc
inc
push
std
xor
call
into
mov
or
push
push
mov
pop
insb
mov
clc
fldl
dec
jp
call
lret
fwait
and
shll
out
iret
cmpsb
push
lods
icebp
cltd
jae
dec
jae,pt
push
jl,pn
test
shlb
adc
sbbb
pusha
cmpsb
clc
jmp
adc
mov
sub
push
bound
aam
dec
cmp
lock
push
in
insl
fs
subb
shll
mov
mov
push
pop
or
cmp
cmp
push
xorl
mov
lea
insb
jecxz
sub
add
lds
nop
popa
mov
and
mov
add
aad
pusha
adc
sbbb
filds
mov
pop
jne
mov
push
xchg
in
out
aas
rep
addb
dec
lea
imul
pop
sbb
jae
dec
or
cmp
nop
int
test
adcl
xchg
cmpsl
xchg
iret
pop
movsl
loope
mov
add
xchg
mov
or
cmp
aaa
pop
inc
xor
sti
mov
pushw
mov
sbb
sub
or
adc
in
inc
add
cltd
push
neg
mov
and
fistpll
lds
xlat
test
mov
outsl
pop
sbb
stos
mov
imul
push
adc
cltd
out
or
outsl
ret
stos
xchg
pop
cmp
movsl
fadds
sarb
xor
inc
dec
adc
cmp
fisttpll
push
cwtl
call
stos
cltd
xor
push
add
push
dec
mov
arpl
lock
stos
add
test
jae
test
leave
adc
fildll
xor
mov
sbb
cmp
fimull
push
lds
int3
clc
lock
or
mov
loope
sbb
aam
in
out
je
in
movsb
jecxz
jno
fmull
adc
push
push
push
in
sbb
ret
or
push
outsb
ljmp
and
push
dec
mov
dec
mov
into
push
sbb
in
arpl
and
add
push
loopne
imul
adc
inc
mov
out
imul
cmp
mov
dec
aad
ret
ja
jns
xchg
loop
push
loopne
adc
lret
inc
shrb
int
jg
jno
mov
negb
lock
clc
push
int
jmp
inc
lret
bound
push
mov
mov
adc
pop
mov
bound
xor
xchg
int3
pop
inc
mov
sub
xor
ds
fs
jae
out
cmp
pop
push
std
mov
xchg
test
mov
pop
dec
push
push
movsb
push
mov
dec
jmp
out
jns
stos
or
mov
pop
and
fisubl
leave
cs
ret
jno
jg
fiaddl
xchg
sub
xchg
ficomps
cmp
out
pop
adc
addr16
cwtl
sbb
lea
into
lock
cmp
pop
xchg
out
mov
add
movsb
pop
pop
push
jmp
adc
adc
jo
adc
mov
cli
add
jg
xchg
mov
and
bound
roll
sub
ljmp
and
push
loop
je
jp
inc
outsl
sub
jb
cmp
adc
test
inc
cli
sbb
mov
lock
mov
xchg
inc
ljmp
lahf
push
xlat
pusha
pop
fcompl
mov
mov
ret
xor
push
loopne
dec
push
scas
pop
sub
and
push
push
outsb
pop
xor
jg
shlb
and
jecxz
lods
adc
ljmp
enter
insl
es
into
dec
add
mov
mov
cmp
inc
mov
push
add
cmp
outsl
mov
lahf
shl
icebp
xchg
mov
pop
jbe
pop
movsb
adc
pop
mov
pop
sbb
bound
pop
mov
sbb
jmp
data16
xchg
push
addr16
mov
xchg
adcl
out
sbb
mov
rorb
mov
add
dec
pop
sbb
dec
inc
leave
mov
test
and
sub
cmp
sbb
pop
sbb
and
sbb
lock
cmpb
outsb
xor
cmp
mov
mov
xor
aad
out
pop
sbb
orb
inc
jne
cmpsb
add
sbb
mov
adc
sub
pop
mov
cmp
outsb
mov
sbb
and
pop
inc
xor
cmpsb
loopne
jge
inc
ret
sub
inc
inc
aaa
mov
jle
push
addl
addr16
adc
sbb
je
cld
fsub
sti
mov
test
pop
add
jb
and
xchg
cmp
or
adc
sub
push
cs
aas
sbb
cmp
mov
push
push
pop
cwtl
rorb
cmp
out
cmp
dec
mov
mov
jg
xor
jae
add
add
into
test
out
enter
cmpl
cwtl
xor
sbb
andl
sub
ja
add
fiaddl
fdivp
movsb
jl
jg
add
mov
add
and
int
lods
add
aam
popa
push
cmp
ja
inc
sub
dec
or
sbb
cltd
jne
stos
rorl
mov
and
inc
and
jp
sub
cmp
mov
pusha
clc
and
jae
or
mov
push
fisubrs
repz
cmp
rcrb
insb
or
adc
mov
cmpsb
aas
popa
cmp
dec
mov
cmc
xor
insl
jb
test
xor
outsl
cwtl
faddp
sub
push
mov
cwtl
cltd
mov
sbb
aas
add
leave
and
push
ret
cmpsl
xlat
push
sbb
pop
push
adc
fidivs
lods
ljmp
scas
out
cmp
test
mov
ljmp
push
int3
iret
jno
repnz
fldcw
popa
fildll
inc
sub
and
ja
or
mov
in
imul
or
jae
or
and
dec
ficomps
xlat
mov
sarb
fldenv
and
cwtl
xlat
cmc
and
fnstcw
add
adc
in
mov
push
pop
repnz
das
xchg
pop
pop
dec
js
jno
lret
add
cmp
sub
mov
sbb
iret
es
rclb
fwait
pop
je
inc
shrl
sub
mov
lods
adc
mov
jo
lret
out
push
mov
pop
lret
repz
arpl
sarl
movsb
push
test
xchg
loop
mov
in
cmc
push
pop
loopne
xor
add
sti
scas
xor
cmc
sub
inc
aam
xchg
movsb
repz
imul
rorl
rol
sbb
sbb
fstpl
jmp
insl
lret
add
hlt
repnz
shll
dec
adc
orl
nop
lcall
xor
sbb
in
inc
cld
inc
cli
sbb
ficompl
lahf
xor
cwtl
cmp
enter
mov
scas
les
push
adc
stos
rol
cs
popa
push
add
xor
aas
fs
cmp
les
ret
pop
dec
sti
cmp
pop
fyl2xp1
xchg
dec
add
cli
ljmp
push
pop
jmp
fisttps
cmpb
add
cli
fistpll
pop
movb
sahf
add
test
dec
mov
out
data16
cmp
push
icebp
mov
adc
scas
mov
and
sbbb
mov
push
dec
mov
sub
idivl
cmpsl
or
or
sarl
scas
push
jne
outsb
ffree
daa
loop
sbb
std
xor
loop
loopne
loope
jg
jl
repnz
xorb
orb
cmp
ss
xor
add
mov
and
movsl
pop
add
or
daa
jp
pop
ret
int
cmpsb
outsl
cmc
pop
and
stos
ja
dec
push
sbb
pop
cmp
jp,pt
or
cmp
mov
ljmp
sub
push
pop
orb
stos
test
sbb
adc
add
pop
sub
ficoms
imull
cmc
and
or
xor
pop
mov
ret
fidivl
call
pminub
subl
ja
xchg
push
mov
sub
add
into
push
and
xchg
inc
jnp
lock
cmp
dec
pop
fcomp
inc
push
bound
mov
xlat
aas
push
inc
jmp
inc
gs
xchg
fimuls
mov
cmp
adc
pop
rcrb
js
add
std
xchg
or
dec
jbe
inc
fsub
mov
icebp
insl
sbbb
fs
adc
dec
ficomps
jmp
enter
push
imul
xor
fisubrs
ss
mov
mov
cmp
cltd
or
mov
inc
fsubl
movsl
xor
push
incb
jl
pop
ret
dec
adc
pop
cld
das
lret
pop
xchg
std
in
lret
lret
mov
pop
mov
test
dec
in
push
int
ret
add
fstpt
jae
dec
push
push
jne
jae
enter
push
out
loopne
xor
jl
push
aas
aaa
push
sub
or
pop
and
ss
inc
sti
loop
ljmp
sbb
and
js
mov
test
mov
mov
daa
push
sti
and
or
mov
add
sub
push
inc
mov
cmp
push
push
and
into
stos
dec
xchg
cmpl
add
shll
aam
push
adc
fisttps
divl
ja
hlt
xor
xchg
inc
lret
sar
jb
jbe
xchg
js
sbb
xor
xchg
in
jns
jle
xor
pop
mov
xchg
push
cld
xchg
aas
mov
fdivr
test
ret
enter
fbld
xlat
xor
ja
ljmp
mov
sbb
subl
mov
ss
aam
push
lcall
out
push
mov
inc
imul
fsubr
xchg
loope
cltd
pusha
in
jecxz
xlat
inc
nop
testl
push
xchg
jle
dec
shr
out
ds
fbstp
and
add
inc
pop
or
inc
or
cmc
or
jle
mov
aas
stc
lea
sbbl
sbb
in
sbb
notb
pop
inc
mov
lods
xchg
in
adc
lret
aad
aam
cmpsb
pop
fcom
add
mov
xchg
add
imul
repz
cmpsb
negl
divl
js
mov
jle
sub
clc
out
sbb
out
xor
lods
adcb
in
lret
cld
int3
pop
sub
jmp
imul
lods
pop
or
sbb
insl
aaa
pop
hlt
mov
aam
mov
ja
hlt
inc
repnz
stc
jp
shll
xchg
add
outsl
pop
mov
inc
sub
sbb
mov
and
inc
fmuls
jl
arpl
pop
mov
divl
jl
in
cltd
add
mov
mov
out
fidivrl
ljmp
and
subl
cmp
lret
cmpsb
insl
hlt
jg
dec
jne
sub
add
cmp
lds
mov
pop
mov
xchg
je
mov
xorl
pop
push
sbb
jle
int3
dec
or
mov
test
cmc
dec
das
sbb
adc
xchg
pop
fsubs
pop
push
arpl
sahf
ss
loopne
pop
lret
xchg
movsl
dec
dec
inc
xor
data16
add
sahf
pusha
xchg
mov
imul
and
mov
push
mov
jl
fsts
data16
ret
and
push
bound
pop
mov
jle
push
push
lds
add
pop
stos
dec
sbb
lret
jo
leave
mov
cmc
scas
push
pop
popf
std
andb
out
lock
andl
jae
ret
clc
repnz
xor
shll
loop
jl
jnp
mov
or
jl
das
das
outsl
lret
pusha
or
adc
inc
push
and
pop
cmp
jecxz
mov
mov
jmp
dec
cmp
cmp
mov
int
das
dec
pop
push
in
jmp
xchg
pop
inc
pop
dec
push
sbb
stc
inc
and
inc
xchg
push
inc
fwait
inc
rolb
outsb
and
pop
jmp
clc
mov
iret
daa
adc
ret
testb
lods
dec
and
fstl
nop
push
hlt
adc
ljmp
repz
or
push
xchg
push
inc
and
dec
sub
push
xor
push
ss
or
cmp
les
les
push
mov
das
in
stos
in
enter
jmp
dec
xchg
adc
xchg
mov
sbb
xor
pushf
lods
je
mov
arpl
mov
aas
out
cmp
es
pop
sbb
cmp
test
div
push
pushf
push
ja
push
in
sub
scas
xchg
mov
adc
inc
mov
cwtl
mov
sahf
sbb
fsubl
mov
mov
or
int3
add
test
sarb
in
pop
mov
stos
loope
pop
cwtl
or
mov
mov
inc
and
es
repnz
xchg
mov
roll
dec
jg
addr16
lods
jmp
mov
je
fcmovnbe
mov
push
mov
push
fistpll
sbb
out
or
pop
push
iret
sub
add
dec
xchg
xchg
out
ficoms
push
sub
xchg
jmp
inc
jo
and
push
xor
or
cmp
and
sbbb
sub
sub
mov
clc
add
jle
out
shrb
mov
inc
xor
fucomi
pop
xchg
cld
loopne
sti
mov
lods
pop
mov
lcall
inc
pop
lods
adc
test
icebp
adc
jmp
arpl
pop
jno
loope
xchg
enter
les
je
fdiv
mov
pop
sub
imul
enter
push
pop
repnz
int
scas
xor
dec
into
pop
push
pop
outsb
and
inc
ds
cmpsl
add
push
cmp
loop
call
jmp
sbb
lret
and
dec
cmp
test
andl
xchg
shl
inc
sub
out
bnd
pop
mov
xchg
cmp
addr16
stc
mov
xor
xlat
inc
sbb
xchg
xor
movsb
inc
push
dec
test
popf
pop
sbb
fldl
aas
outsl
push
sarb
dec
inc
sahf
add
jno
fwait
dec
iret
fistps
movsl
imul
sbb
add
ret
sub
push
xor
shll
lock
push
rcll
jmp
pop
lods
or
cmp
pop
mov
xor
sub
rcrl
lods
pop
adc
test
insb
fwait
mov
dec
lahf
mov
and
xor
cmp
or
cltd
push
sahf
in
in
fdivrs
sub
outsb
xor
mov
lret
nop
lods
in
lret
cwtl
aad
outsl
and
pop
push
adcl
jae
or
mov
test
ljmp
lcall
fcompl
mov
out
inc
popf
arpl
xchg
add
arpl
imul
inc
push
gs
repnz
aaa
ror
or
mov
xlat
in
cmp
in
and
xchg
or
test
testl
jbe
cmp
ret
adcl
xchg
add
cmp
cmp
imul
loop
cmpsb
cmpsl
rcrl
push
sub
stc
mov
and
pusha
sahf
xchg
sub
or
andb
pop
push
insl
pop
mov
movsl
std
into
mov
and
loope
mov
fwait
out
lea
xor
loope
add
and
fcoms
inc
mov
cli
fs
sub
and
cmc
add
adc
pop
popf
sbb
jg
and
fistps
mov
subb
shl
lds
andl
loopne
xchg
pop
adc
es
rclb
movsl
shll
sbb
fucomip
cmovne
mov
push
sbb
fisubs
jnp
add
ds
insb
ficomps
pop
scas
sub
enter
and
mov
enter
je
add
xchg
fucomi
inc
xor
aas
lret
xor
loop
decb
ds
jg,pn
iret
fwait
out
pop
xchg
add
jns
outsl
pop
fwait
mov
repz
std
addr16
xchg
sahf
jmp
mov
cmp
xlat
into
add
jmp
inc
gs
cwtl
fists
clc
out
fistpll
xlat
dec
dec
xorl
xchg
pop
or
pop
je
mov
cld
lock
sahf
xor
inc
hlt
jo
ret
cmp
mov
imul
movsb
stos
icebp
jo
fwait
aam
xor
mov
in
insl
xor
popa
es
mov
push
fwait
das
xchg
paddusw
pop
roll
mov
cmpsb
mov
xchg
dec
cmp
push
xor
lock
xchg
and
test
mov
jge
push
inc
test
fwait
jne
lods
pop
jp
popa
in
je
mov
sub
adc
je
mov
adc
inc
ljmp
jecxz
mov
popf
je
cmp
push
add
cmp
ret
fdivr
jnp
xchg
mov
mov
jbe
mov
in
adc
stc
xor
addr16
ds
pop
xchg
jnp
push
addr16
addr16
fmul
movsb
jg
mov
les
jg
dec
fldl
ret
and
or
jnp
xchg
pop
adc
fmuls
icebp
pop
jo
das
gs
dec
or
adc
repnz
mov
xchg
push
test
pop
add
cmp
sbb
lods
das
push
mov
mov
jno
faddl
shrb
inc
mov
xchg
les
cmp
hlt
popl
or
test
outsb
xchg
jno
inc
jle
ret
lahf
aam
mov
gs
mov
shlb
sbb
inc
hlt
sbb
and
inc
popf
push
dec
iret
dec
pop
std
mov
xchg
sub
incb
imulb
dec
fidivrl
mov
mov
pop
adc
loop
and
push
dec
call
or
pop
push
pushf
xor
mov
xor
mov
xor
xchg
adc
pop
mov
mov
or
lods
dec
xor
call
sub
cmp
or
cmp
stc
mov
adc
out
sbb
and
lret
mov
cmpsl
dec
popa
push
xchg
ret
inc
int3
loopne
cmp
enter
xor
pushf
daa
add
xor
mul
cli
das
adc
add
lea
inc
hlt
aam
insb
adc
cmp
push
sbb
frstor
xchg
sbb
cmpsb
jmp
enter
add
push
fidivl
ljmp
mov
xchg
ret
pusha
jg
pop
divl
fildl
out
sbbl
test
orb
aad
mov
aas
push
jmp
cmc
cli
cmp
cs
enter
mov
xchg
cmc
out
pop
call
push
mov
cmpsl
mov
add
push
addr16
pop
fistl
add
cwtl
dec
imul
jg
pop
js
aad
or
mov
mov
mov
jl
pushf
mov
pusha
or
mov
lods
push
add
test
cmp
lret
shll
fsub
pop
pop
out
insl
jae
rclb
out
mov
xor
in
mov
push
push
lds
sarl
movsb
and
mov
leave
mov
mov
sub
or
pop
xchg
enter
sbb
stos
sbb
cwtl
dec
aam
out
or
push
lret
roll
cltd
pop
ja
aam
pop
fstpt
aas
imul
mov
loopne
xchg
adc
jmp
rdpmc
pop
call
push
or
adcl
loop
sub
mov
cmc
jle
cmp
push
out
scas
cltd
mov
mov
sbb
repnz
push
shr
insl
pop
getsec
jge
lahf
outsl
js
mov
in
fnstcw
mov
ja
mov
add
in
or
cld
push
push
mov
inc
lods
sbb
call
sbb
aas
in
nop
mov
out
out
stos
cmpsb
adc
arpl
fdivrs
aad
adc
pop
push
mov
nop
dec
mov
cmpsl
mov
pop
bnd
enter
push
add
pop
aam
js
add
fildl
cmpsb
std
mov
lcall
push
loop
fcomip
pop
repnz
dec
cmpsl
call
arpl
sahf
popa
sbb
jmp
mov
bound
xchg
ljmp
cmp
imul
enter
add
mov
push
ret
and
pop
aas
and
loope
dec
je
mov
ss
sbb
xor
enter
lods
movsl
mov
fadds
testb
ds
ds
xor
dec
inc
dec
loopne
clc
dec
push
push
mov
loope
mov
pusha
sub
daa
sbb
mov
pusha
push
out
hlt
ds
xchg
fistpll
or
dec
cmp
pop
sbb
inc
repnz
adc
add
inc
jg
movsb
xchg
icebp
aaa
jo
xchg
movsb
das
adc
mov
push
xchg
mov
int
sbb
inc
xlat
sbb
or
cmp
dec
and
inc
mov
xchg
out
and
xor
cmp
mov
scas
sbb
jp
push
mov
sar
mov
mov
dec
and
push
pop
mov
mov
dec
adc
icebp
mov
cmp
scas
into
and
mov
leave
leave
negb
fisubrs
xlat
insl
jno
sub
aaa
movsl
daa
cmp
aas
xchg
ljmp
and
inc
mov
and
cmp
fisubs
imul
ret
push
dec
pop
sbb
test
sub
fsts
inc
mov
or
sub
jp
or
adc
call
cmpb
pop
sbb
popa
test
aam
movsb
jne
in
jle
cltd
adcb
negl
add
andl
jb
das
fsubrs
cmp
lock
or
or
inc
or
roll
add
cmp
fdivl
sub
pop
jp
mov
and
mov
or
sub
pop
pop
sub
mov
and
mov
mov
pop
xchg
inc
aam
les
push
push
cmpsb
sar
arpl
mov
xor
sbb
inc
lahf
adc
push
jae
inc
outsl
cmp
lods
mov
nop
add
xchg
ret
xchg
mov
jp
cmpsb
pusha
ja
pushf
push
xchg
and
add
cmpsb
fs
idivb
inc
dec
int3
cmp
xchg
or
mov
fildl
test
inc
arpl
pushl
pop
insl
inc
pop
out
mov
lods
les
test
xchg
aam
shll
cwtl
aam
stc
mov
or
ss
adc
daa
test
pop
arpl
out
pop
fisubrs
outsl
push
decb
leave
shll
inc
sub
fdivrl
fistpl
cltd
adc
test
mov
loopne
imul
push
xchg
and
pop
inc
loopne
movb
and
inc
js
lea
test
jno
dec
ret
clc
and
xchg
mov
call
inc
bound
lock
inc
dec
movsl
or
jmp
fidivl
or
push
dec
sbb
mov
frstor
pop
push
es
dec
push
mov
add
and
cwtl
pop
mov
adc
xchg
fwait
jne
adc
ss
pop
std
test
out
jmp
adc
dec
les
in
and
xchg
adc
mov
subl
call
fdivl
cmpsl
inc
movsl
lods
pop
fdivrs
shr
jno
push
fmuls
ret
popf
or
push
andb
pop
in
jmp
pop
xbegin
repnz
or
cmp
xlat
pop
test
cmp
lahf
inc
lods
insl
pop
mov
in
repnz
add
hlt
lods
inc
push
leave
sbb
in
aaa
nop
jmp
in
in
icebp
cmpsb
xor
hlt
mov
into
dec
inc
dec
jbe
sbb
test
push
dec
jmp
cmp
push
test
shrb
pop
or
insb
push
inc
fwait
lret
loop
pop
test
scas
xor
xlat
orl
jmp
out
in
in
dec
lds
rol
sar
popf
xchg
xor
pop
mov
mov
mov
ss
cmp
pop
inc
add
adc
rcrl
mov
fisubrs
and
push
cs
xor
xor
arpl
push
loop
out
repz
pop
test
ret
push
push
mov
mov
pop
pop
cmpsl
pop
adc
mov
or
adc
mov
push
cmpsb
adc
ss
and
dec
movsb
sar
sub
cmpsl
dec
xorb
int
mov
xor
dec
dec
lods
xor
loopne
dec
mov
pminsw
outsb
pop
lret
dec
inc
sub
fwait
push
mov
in
imul
and
popf
dec
mov
cmpsb
ljmp
lcall
cmpsl
hlt
bound
mulb
scas
cld
cld
pushf
idivb
enter
aas
push
cli
fistpl
sbb
mov
dec
scas
or
push
cli
fdivp
andb
call
or
loope
jl
mov
jmp
or
cmp
sub
lds
popa
push
or
cmp
pop
xchg
adcl
mov
jl
pop
rorb
mov
mov
mov
sbb
xchg
repnz
jmp
adc
pushf
xor
faddl
cwtl
adc
js
leave
push
loop
adc
sub
adc
pop
out
xchg
out
or
cltd
pop
ss
adc
inc
jne
rcr
inc
scas
mov
data16
loop
pusha
xchg
in
aaa
orl
orb
jmp
pop
adc
hlt
shll
adcb
insb
mov
popa
stos
mov
sub
sub
repnz
in
xchg
jle
dec
ficoml
pusha
push
fisubrl
pop
and
adc
pushf
xchg
xor
mov
xchg
jl
mov
pop
hlt
aas
stos
cli
jae
aas
push
pushf
aam
stos
push
and
loopne
pop
xor
sbb
push
sahf
lret
mov
cmp
pop
inc
cmp
xchg
xor
push
cli
out
or
repz
adc
mov
fsubp
and
addr16
iret
mov
fimull
stos
xchg
add
xor
aam
mov
in
stos
cli
push
cmp
out
xchg
jp
pop
add
insl
imul
mov
or
jae
aam
xchg
les
mov
cmp
xor
fnsave
fsubr
adc
mov
hlt
inc
sti
mov
aas
xor
and
in
movsl
inc
call
std
fwait
push
pop
fs
jecxz
jl
push
inc
adc
sub
sub
add
test
test
push
shr
aas
mov
inc
xor
jmp
push
push
int
xor
jp
inc
push
rorb
rolb
in
or
jae
pop
push
repnz
sarl
jno
mov
mov
jb
lock
fisttpll
std
test
ret
jnp
mov
aas
xchg
xor
or
adc
repz
ja
cld
cmp
add
int
aaa
or
xor
test
sub
and
jl
lcall
push
je
and
mov
lret
popf
pop
out
push
jo
cmpsb
xchg
repnz
sub
test
mov
lahf
stos
outsl
mov
pop
push
sar
lret
push
mov
dec
adc
shll
lods
insl
pop
clc
pop
fistps
sub
cmpsl
mov
add
push
mov
adc
push
mov
imul
add
movsb
mov
out
xlat
pusha
push
sub
std
and
mov
loope
addb
adc
cltd
pop
dec
aaa
sarl
push
inc
jbe
xlat
fstpl
add
cwtl
jge
add
add
push
xor
jmp
aad
pop
xchg
xor
pop
pop
push
inc
pop
cmc
dec
cmp
in
loopne
inc
pusha
fistps
mov
hlt
dec
lret
in
repnz
add
dec
call
loop
test
cmp
cwtl
icebp
mov
sub
lretw
sub
pusha
fildl
mov
adc
out
aad
test
jnp
jecxz
inc
aas
shll
push
movl
pop
push
andb
pushf
xchg
das
push
add
xor
call
inc
sub
daa
enter
test
cmp
jl
clc
mov
cld
cld
dec
mov
mov
pop
xchg
jmp
ljmp
adc
les
aam
and
in
xor
stc
pusha
in
lock
xchg
jnp
aaa
mov
sbb
xor
scas
lea
int
int3
bound
cmp
pop
xchg
int
icebp
insb
add
jg
dec
inc
jns
xor
pusha
ds
int
push
mov
sub
lahf
inc
scas
push
mov
inc
push
lret
sub
std
popa
loope
pop
lcall
repz
mov
sbb
icebp
xor
aaa
push
iret
out
or
popa
imul
mov
loopne
cmpsb
lcall
scas
dec
movsb
repnz
iret
aam
inc
pop
pop
mov
call
movsb
adc
lock
jne
imul
loopne
inc
stos
ss
mov
stos
push
push
add
xchg
scas
inc
bound
aam
jne
dec
call
dec
add
dec
outsl
mov
adc
mov
jnp
push
popf
push
sti
mov
adc
push
addr16
shlb
cmp
push
and
xor
nop
sub
out
pop
in
cmpsb
push
daa
cmpsb
leave
cmc
sarb
mov
aad
jne
jp
or
data16
test
cmp
adc
imul
add
fisttpll
xchg
pop
popf
pop
rolb
pop
mov
and
pop
xor
or
das
cmp
imul
outsl
hlt
cs
pop
lret
and
mov
fs
ds
imull
ret
push
lcall
sti
mov
mov
mov
adc
jne
cwtl
cmp
cs
add
clc
inc
cmpsb
lock
aam
lret
repz
push
pop
mov
inc
pop
dec
mov
inc
pop
mov
xchg
mov
inc
mov
movsb
mov
fwait
fwait
into
inc
movsb
jae
mov
stos
add
mov
aad
int3
call
imul
clc
pop
repz
xchg
ret
cmp
mov
aam
pop
lahf
call
sub
js
iret
roll
mov
dec
cmp
xor
test
enter
xor
mov
andl
imul
repnz
xor
sarl
cmp
test
pop
mov
es
mov
ret
and
xchg
jge
popa
push
call
bound
dec
jmp
xor
jnp
mov
stos
aaa
mov
pop
movsl
fidivl
sub
sub
push
adc
sarl
push
inc
mov
push
adc
mov
loope
xor
xlat
mov
jmp
les
fistpll
jg
fdivp
aaa
clc
imul
push
jmpw
cld
pop
pop
ffree
hlt
mov
sub
pop
nop
pop
loop
movsb
sbb
andb
dec
inc
add
daa
dec
fadd
shlb
cmc
lock
push
aad
lock
mov
outsb
mov
sub
into
xor
ja
xlat
nop
jmp
cmp
adc
div
xlat
adc
lret
sbb
cs
jnp
clc
daa
sbb
stc
leave
cs
sub
mov
mov
repz
adcl
xor
in
and
int3
sbb
pop
add
punpckhwd
xchg
fsubrl
inc
repnz
fcmovnbe
lds
adc
popa
loopne
insl
cmp
addl
gs
mov
das
add
pushf
mov
pushf
push
cmpsl
sbb
pop
lret
out
ds
cwtl
adc
mov
je
fisubrs
popa
dec
js
cmovs
cwtl
push
sub
dec
sti
and
in
aaa
scas
js
pop
mov
cmp
jb
xor
inc
je
lods
or
add
ja
inc
js
daa
dec
xor
movb
mov
ds
add
push
or
xchg
cmp
mov
test
in
mov
jae
ljmp
and
movsb
ljmp
xor
add
push
ficoms
pop
and
mov
cmp
in
dec
xchg
shlb
jnp
and
jl
hlt
pop
outsl
dec
lret
mov
das
sub
mov
inc
js
std
xchg
ret
lds
jae
push
add
lock
dec
xchg
call
sarb
dec
cmc
sub
xchg
mov
and
cmp
cmpsl
push
pop
jmp
jmp
push
loop
addb
pop
faddl
adc
std
outsl
add
lea
cmp
add
adc
adc
lods
negb
cmc
mov
hlt
clc
rorl
pusha
imul
inc
cli
mov
in
repnz
xor
jnp
push
sub
leave
mov
fbld
imul
dec
aaa
rclb
xchg
adc
jge
xor
test
cmp
inc
aas
int
std
xor
pushf
sahf
pop
out
or
mov
push
nop
cld
cmc
emms
call
bound
dec
and
clc
sahf
xchg
repz
sti
ljmp
addb
pop
shlb
pop
pop
aas
pop
scas
lea
push
ds
xchg
and
ss
ljmp
stos
fcmovb
lahf
es
sbb
cmpsl
add
dec
insl
je
loope
dec
js
dec
xor
js
sub
inc
push
mov
push
add
cmpl
inc
adc
lcall
xchg
repnz
and
ret
cmp
push
cmp
ret
sti
or
sbb
mov
imul
pop
repz
popa
push
pusha
out
ret
pushf
or
adc
mov
jmp
xchg
stc
out
mov
rcrb
lcall
fbstp
sar
aam
fldenv
icebp
daa
iret
inc
inc
xchg
mov
sarb
inc
loop
mov
jne
xchg
xlat
pop
sub
sub
push
lods
mov
xlat
repnz
lods
loop
lahf
sbb
pop
sub
dec
std
aaa
hlt
rclb
sbb
pop
jl
push
pop
enter
clc
dec
je
pop
test
stos
jo
nop
repz
push
fs
xchg
push
cwtl
lock
mov
xchg
hlt
shrl
xchg
pop
xor
sbb
mov
or
ficoms
jecxz
xor
cmp
nop
mov
dec
ja
lret
orb
dec
insb
scas
pushf
jle
lret
cmpsb
xchg
sbbb
dec
aas
cwtl
mov
gs
mov
push
mov
sbb
rcr
cltd
push
dec
xchg
jbe
mov
mov
loope
lds
fisubrl
xchg
es
or
jle
push
ds
mov
out
sbb
lahf
pop
cli
push
cmpb
ret
insl
push
dec
rorb
call
adc
scas
sbb
push
fists
cwtl
subb
mov
scas
sbb
fimull
mov
jge
stc
das
js
xchg
mov
mov
pop
bts
adc
stos
xchg
push
sub
out
push
popa
andb
int3
aad
cmpsb
mov
adc
sub
xor
pcmpgtd
xor
fdivrl
in
xchg
lods
das
mov
pop
and
mov
les
lret
pop
in
rolb
lea
xchg
cmc
icebp
addr16
insb
lods
cli
lods
mov
mov
push
mov
cwtl
add
orl
xor
mov
ret
cmp
insb
test
and
jg
lahf
es
mov
push
stc
sarl
xchg
ficoms
das
in
add
movl
cli
repnz
addr16
test
mov
add
mov
int3
shl
cmp
aas
dec
out
mov
pop
stos
bound
sbb
mov
mov
pusha
jmp
jg
inc
rclb
das
pop
and
dec
lods
aad
adc
mov
adcl
sbb
stc
lods
loope
cmpsl
jns
arpl
push
sahf
leave
push
das
and
lds
stc
aaa
xchg
cwtl
ret
out
mov
int3
pop
xchg
out
scas
mov
pop
sub
rcll
or
mov
add
je
rcll
mov
push
jl
xor
icebp
test
hlt
clc
and
push
jmp
fcmovb
xor
fbstp
push
call
add
stc
out
fdivrp
aas
adc
cmpsl
and
xlat
sbb
mov
lds
insb
imul
stos
sub
xchg
and
cld
rcrl
cmp
mov
pusha
sbb
fdivrp
lds
xchg
and
xchg
outsb
stos
mov
jb
sbb
pop
arpl
and
or
gs
jb
fidivrl
shll
add
sub
shll
adc
mov
xchg
mov
sahf
aas
dec
push
aas
adc
xchg
popf
pushf
andl
pop
xchg
pop
sub
cwtl
jl
and
pop
out
xchg
mov
lret
adc
xor
lods
mov
cld
iret
in
xchg
cmp
add
adc
push
mov
jmp
xchg
out
loope
testb
add
in
cmp
add
add
or
ljmp
lcall
jnp
outsb
push
push
cli
cs
mov
ror
mov
arpl
sbb
cmpsb
mov
fucom
loopne
dec
inc
xlat
test
pop
push
call
out
mov
xor
and
dec
xchg
cmp
repz
dec
jl
push
sub
sbb
frstor
rcr
jecxz
imul
xor
mov
cmp
xor
aas
mov
nop
cmp
and
imul
sahf
popf
sbb
cmpsb
lea
dec
es
jo
cmpsb
clc
add
int3
push
ja
in
jg
xchg
ja
in
xchg
xchg
mov
sahf
pop
mov
jno
outsl
and
dec
les
shr
dec
jp
cmpsb
lds
mov
outsl
test
in
sbb
and
out
aam
xchg
ja
mov
fucom
lcall
lea
or
das
cwtl
pop
pop
or
mov
lea
jl
call
aam
xchg
or
jl
aas
push
icebp
add
scas
sub
popf
iret
and
mov
in
cmp
mov
or
or
xchg
ljmp
fsub
scas
xchg
mov
xchg
mov
int
cmp
lret
sub
inc
cmpsb
mov
std
insb
enter
insb
out
test
and
xchg
daa
inc
xor
loope
loopne
mov
ja
lea
dec
jne
inc
rclb
es
loopne
cmpsl
loop
dec
xchg
daa
jne
adc
inc
xchg
cmp
int
xchg
loopne
loopne
push
pop
mov
sbb
mov
das
scas
imul
scas
sbb
mov
in
dec
mov
leave
fsubrs
xchg
xor
fisttpll
fwait
mov
xchg
movsl
rorl
js
mov
add
cmp
dec
inc
mov
sahf
xchg
lods
int3
pushf
mov
lock
add
mov
iret
test
and
mov
push
xchg
mulb
fbld
rolb
sub
les
jecxz
cmpb
iret
adc
pushf
sbb
xchg
xchg
jmp
jp
lret
xor
cmp
xor
mov
shld
push
inc
lea
jne
add
cmp
pop
sub
cmp
cwtl
fcomps
pushf
insb
and
cmpsl
int3
arpl
in
xchg
outsl
pop
xchg
cmp
jp
jns
cli
loop
aam
lret
rorb
loope
shll
xor
outsb
aas
pop
test
js
mov
cmpsb
test
popa
pop
mov
xor
dec
addb
xchg
lock
push
loope
xlat
jmp
sub
fwait
cmpsb
data16
sti
std
add
pop
call
call
mov
call
fdivrs
pusha
mov
jle
cmp
lcall
jnp
ja
lock
punpckhdq
ror
loope
pop
push
push
rorl
inc
dec
in
js
cmpsl
inc
rcll
push
sbb
cmp
stc
inc
jno
test
mov
jnp
cltd
sbb
shlb
push
sub
cmpsb
adc
push
outsl
test
sub
out
sub
and
icebp
icebp
inc
fdivrs
sbb
jb
mov
mov
jb
cltd
xor
test
hlt
pop
adc
jnp,pn
sbb
stos
daa
cmp
movsl
cwtl
dec
push
into
mov
push
clc
into
ss
ss
cmpb
cmp
lods
pop
cmpsb
pop
jnp
loope
pop
lds
xchg
bnd
rcrl
or
std
enter
fisttpll
shlb
je
lods
adc
cmp
pop
insb
dec
in
push
out
adc
jbe
sbb
into
call
mov
mov
pop
add
push
jp
in
xor
mov
sbb
adc
cmp
lea
lea
sub
add
push
iret
jnp
cmpsl
jne
xchg
adc
sti
loope
push
mov
xlat
aaa
xor
inc
inc
rorl
pop
xchg
shr
mov
jo
mov
pop
ljmp
in
add
mov
mov
cmp
and
sar
pop
xor
cmp
fsubrl
add
pop
dec
jbe
test
fcomps
mov
fldl
dec
inc
scas
sub
sub
cmp
cld
mov
push
andb
jb
xchg
pop
push
adc
pop
fcomip
xor
shrl
jb
xlat
int3
sbb
fwait
add
jg
movsb
imul
jle
sub
xchg
ljmp
lea
xor
lea
xchg
add
cmp
inc
je
xor
sbb
dec
jmp
into
stos
cmpsb
ljmp
mov
mov
aaa
js
in
call
lock
xchg
test
testl
ds
adc
insl
hlt
sub
out
dec
mov
or
adcb
mov
pop
inc
jl
or
lock
hlt
mov
push
movsb
in
stc
lods
mov
push
jl
negb
pop
icebp
mov
pop
outsl
push
jb
add
lock
arpl
jle
imul
sahf
das
lods
add
push
and
in
push
mov
cmp
out
daa
dec
cmp
add
test
das
mov
jl
in
mov
adc
stos
scas
jns
push
or
sub
mov
aam
mov
mov
adc
pop
arpl
mov
ljmp
pusha
call
push
jecxz
mov
or
cmp
sbb
dec
scas
cmp
dec
leave
cmpsb
and
push
sbb
sbb
mov
stc
pop
mov
xchg
fimull
mov
out
fsub
scas
mov
fldcw
out
movsl
add
pop
div
sahf
xor
pushf
xor
popf
ret
ret
sbb
jg
mov
xchg
clc
je
or
insb
jae
jno
cmpsl
cmp
adc
fs
add
jle
mov
push
out
dec
loop
sbb
je
cmc
addr16
mov
insb
adc
push
xchg
or
push
pop
push
jb
out
xchg
mov
fsubrl
dec
test
fldl
add
mov
addb
stos
or
dec
mov
pop
dec
es
dec
les
repnz
nop
leave
addr16
stos
loop
imul
xor
xlat
test
in
dec
or
dec
icebp
push
leave
test
sbb
xor
adc
jb
sub
add
sub
dec
fwait
leave
loopne
jmp
xor
xor
repz
je
mov
aad
in
jg
scas
adcl
push
mov
rclb
push
cmc
mov
jno
data16
fwait
inc
jg
int3
xor
sub
shll
and
mov
xlat
sub
mov
mov
adc
loope
fcomip
aas
enter
fsubr
mov
jl
das
das
stos
repz
inc
jmp
pop
out
loopne
sbbb
sbb
pop
jae
dec
push
cmp
nop
mov
xor
bound
pop
mov
adcb
and
loop
xor
adc
and
lahf
xchg
cmp
lret
xor
mov
xor
push
iret
fdivs
cmc
fcompl
lahf
lock
cmpsl
push
cmc
dec
mov
fisubrs
mov
sub
subb
or
int
cs
outsb
mov
repz
push
add
ret
mov
cmp
ficoml
test
arpl
inc
and
in
stc
mov
ret
pusha
daa
int
psubsb
xchg
xchg
loope
sbb
fadds
mov
cmp
push
mov
test
sub
inc
jle
movsl
mov
out
loopne
shr
cmp
xchg
mov
mov
scas
out
dec
pop
aas
sub
fisubrl
sbbb
mov
cs
cltd
es
stc
sub
stc
sub
imul
sub
mov
loop
dec
ret
popa
cmp
inc
ja
inc
sub
xor
mov
jecxz
es
xor
cmp
adc
in
rclb
shrb
sbb
xor
fdivl
rcrl
out
xchg
or
xor
mov
push
mov
cltd
fsubrl
fcomps
lods
xor
mov
lds
movsb
sbbb
pop
push
ds
rolb
shrl
jns
popf
jbe
or
pop
clc
push
adc
inc
sbb
pop
in
les
sub
repz
cmp
cwtl
mov
pop
xlat
in
in
sub
xchg
int3
std
orb
dec
cli
js
mov
lds
cwtl
xor
pop
pop
lock
pop
jle
mov
sbb
adc
andl
dec
and
hlt
mov
mov
push
jo
xchg
icebp
mov
int3
adc
lahf
nop
push
and
jo
jnp
dec
or
push
js
pop
xchg
add
jge
fmul
inc
das
cmp
lret
inc
cmpl
movsl
call
clc
roll
shll
xor
aas
popf
addr16
cs
in
jle
icebp
lods
cltd
add
cwtl
fwait
jmp
test
fbstp
pop
imul
fidivrl
pop
mov
jbe
fdivs
push
sub
pop
pop
push
cmpsb
xor
dec
popa
jle
pop
test
push
pop
push
sbb
dec
in
inc
clc
rcll
shll
out
shrb
dec
xor
lcall
into
rorl
lock
push
repz
dec
xor
fists
in
ds
xchg
loope
cs
test
rclb
repnz
and
sbb
adc
add
and
sahf
sub
test
and
in
or
movsb
sarl
pusha
ds
mull
xchg
xchg
xchg
or
adc
int
enter
ja
in
and
xchg
xchg
fwait
xchg
cmp
addr16
arpl
xor
adc
cmpsb
js
and
xor
sub
push
cwtl
xor
outsb
bound
insl
gs
cmp
pop
adc
add
hlt
mov
inc
in
int3
addr16
add
jl
aaa
and
or
test
jae
mov
je
mov
mov
mov
stos
sbb
aam
mov
ret
shlb
adc
push
imul
sub
add
xchg
mov
xchg
and
sub
xor
cwtl
dec
les
movsb
adc
adc
fcompl
sbbb
fisttpl
nop
cmp
pushf
call
and
fdivrl
fcmovnbe
push
out
mov
xchg
ficomps
or
insb
jl
int
jecxz
dec
pushf
aad
add
mov
adcl
mov
or
int3
iret
inc
xchg
cmp
mov
lods
xor
fwait
cmp
or
add
fsubrp
ss
lods
std
and
fwait
mov
dec
ret
adcl
mov
xchg
push
je
aas
mov
fwait
subb
repnz
adc
sub
mov
dec
mov
daa
push
sbb
cltd
mov
pop
test
ljmp
mov
les
dec
mov
leave
pandn
scas
rclb
pop
cwtl
cmc
int3
repz
popa
scas
sub
iret
outsl
and
cmp
sub
xor
aam
and
out
inc
lock
mov
sbbl
and
ljmp
jnp
adc
push
orl
pop
in
cmp
jl
mov
xor
movsb
push
cmpsb
sub
push
push
mov
dec
jge
xor
arpl
or
out
mov
aas
mov
repz
out
cmp
insl
jb
out
iret
and
push
movsl
jns
xor
sub
mov
add
in
ds
scas
cmp
and
xchg
lods
mov
push
pop
fistps
dec
sub
sub
out
jns
pop
xor
out
mov
xor
clc
mov
dec
xchg
test
push
hlt
addr16
sub
xchg
leave
pop
cwtl
push
and
sub
leave
lret
addb
dec
dec
push
push
hlt
or
arpl
leave
jmp
push
mov
movb
shr
sbb
xor
dec
lock
push
jno
push
mov
std
cmc
mov
cmp
cmp
jnp
add
cmp
mov
aas
or
mov
inc
lcall
cmpsb
pushl
adc
and
cmpsb
mov
ds
aas
mov
cmp
pusha
stos
jmp
mov
xchg
in
adc
sti
pop
pop
adc
inc
sub
stos
mov
mov
xchg
mov
inc
mov
fcmovu
lea
test
and
inc
dec
dec
sub
loop
push
jecxz
in
jl
subl
xlat
sub
lret
rorl
cmpsl
fsts
xor
test
lret
lods
xor
mov
stos
clc
pusha
cmp
popf
popf
xchg
push
jb
dec
ljmp
push
inc
push
adc
or
adcb
loop
add
loopne
and
aam
out
cmp
sub
cmpsb
das
xchg
ljmp
lcall
xor
xor
add
je
rcl
pop
lcall
or
inc
fnsave
mov
sarb
xchg
mov
fidivl
mov
mov
pop
dec
aaa
sarl
cmp
ljmp
ss
mov
rcrl
ret
addb
repz
and
shll
lret
pusha
xchg
inc
sti
push
enter
jp
ja
push
sbb
mov
xor
pusha
insb
out
inc
shrb
cmc
cmp
stos
fmull
mov
fsubl
xchg
push
sti
push
sub
movsl
jle
aam
vdivps
pop
pushf
adc
or
inc
xor
xchg
dec
test
pushf
lret
ficoms
je
mov
rclb
pop
lar
pop
pop
mov
add
addr16
lea
push
push
or
pushf
pop
inc
add
pop
mov
mov
fs
insl
in
jl
std
imul
hlt
pop
or
xor
sub
xlat
or
mov
mov
mov
test
jg
mov
inc
cmp
mov
lods
test
sub
lods
mov
adc
push
je
push
inc
pop
mov
movsl
xor
cmp
dec
push
mov
pop
jg
add
adc
mov
and
divl
mov
test
xor
std
test
out
push
push
cmpl
xlat
mov
inc
mov
xchg
inc
repnz
adc
out
xor
cs
dec
and
sbb
scas
clc
int
lock
adc
stc
jno
cmc
movsl
xor
js
cmp
jnp
and
jb
jge
add
adc
das
bswap
inc
gs
xor
adc
dec
lea
das
mov
out
mov
out
and
lock
inc
jg
push
mov
xchg
sub
push
rorl
outsl
popf
scas
in
jmp
dec
repnz
mov
pop
ljmp
push
jg
stos
movsl
and
int3
cmp
mov
leave
sarb
ss
mov
xchg
jp
sbb
ret
jbe
cld
int
xor
fmuls
jle
std
add
inc
push
addps
in
adc
mov
mov
sbb
xchg
jle
loopnew
push
fldt
fidivs
xchg
shl
clc
sub
lods
inc
pop
es
pop
addb
jp
push
mov
jge
sbb
loopne
aas
daa
fstp
imul
cld
jl
aaa
jge
je
in
shrb
push
and
jne
inc
fcomps
iret
add
aas
and
lahf
and
mov
mov
movsl
mov
inc
push
xchg
ficomps
mov
sub
mov
push
and
xchg
lcall
sub
inc
aad
gs
or
dec
xchg
sub
mov
mov
mov
mov
xchg
pop
push
pop
inc
call
or
mov
test
mov
call
add
loopne
jnp
fimuls
mov
xchg
jmp
xor
pop
dec
sub
sub
fistpl
fidivrs
je
push
jb
pop
adc
sbb
mov
imul
xor
cmpsl
dec
and
ljmp
lret
test
cmp
into
inc
jbe
es
aam
xchg
push
filds
jbe
cmp
nop
fildl
cmpsl
sbb
dec
pop
mov
psubd
adc
fs
inc
fcos
inc
pop
mov
fisttps
roll
mov
ds
dec
jo
out
and
out
xchg
scas
insl
out
or
daa
lcall
xchg
stos
xchg
call
push
and
rolb
adc
adcl
mov
sub
fwait
pop
inc
sub
fcom
or
cmp
xlat
mov
bound
cmp
out
data16
inc
insb
popl
pop
xlat
pop
test
lock
push
test
gs
push
mov
sub
pop
sub
lock
sub
xorl
stos
fidivl
testl
dec
sbb
das
inc
lret
inc
out
push
xchg
adc
cwtl
popf
mov
sahf
stc
scas
popa
dec
inc
std
je
mov
pop
iret
mov
mov
mov
cld
pop
divb
cltd
shll
sarb
imul
bnd
shll
mov
pop
inc
xchg
mov
mov
xlat
jb
insb
test
aam
aas
inc
mov
pop
cmp
std
mov
jae
xchg
stos
addr16
sbb
fdivr
push
testb
sbb
aas
cmpsb
sub
andb
in
mov
js
adcl
orb
lea
ret
pop
and
popa
test
push
lods
push
inc
mov
sbb
cmp
xchg
ljmp
call
repnz
mov
pop
lods
sbb
mov
pusha
test
or
fldenv
adc
imul
jbe
xor
inc
inc
xchg
push
pop
and
mov
pop
xchg
add
xor
pusha
push
icebp
andb
sub
sub
dec
mov
add
ret
cmp
in
add
ljmp
stos
xchg
call
inc
mov
ss
imul
in
xchg
repz
xor
ret
cmpsl
mov
xchg
mov
aad
inc
bound
sbb
lret
or
leave
push
addr16
adc
pop
scas
sbb
jl,pt
pop
in
cwtl
test
stos
popf
mul
mov
jne
jb
aad
movsl
xchg
mov
mov
outsb
in
push
xor
aaa
sub
xor
inc
push
rolb
in
movsl
and
dec
ret
adcl
lcall
cld
push
jnp
pop
cli
sbb
or
shr
sub
sbb
insl
or
mov
mov
std
xlat
push
outsl
dec
fistpll
and
je
xor
out
lds
dec
inc
dec
mov
gs
lds
and
arpl
fstpt
jmp
ret
cmp
push
mov
xor
cmp
testb
clc
inc
jmp
sub
cmp
insl
fsubr
int3
jnp
enter
push
loope
mov
test
lret
inc
pop
mov
pop
stos
imul
push
jge
inc
xchg
loop
outsb
pop
gs
adcl
mov
xchg
jg
cmp
mov
iret
hlt
dec
or
in
jo
xchg
clc
push
push
test
push
ds
subl
xorl
in
rcr
in
pop
ficoms
insb
mov
ja
mov
jo
mov
sbb
pop
ss
add
xor
shlb
push
mov
xor
cwtl
jp
jb,pt
test
enter
dec
sbb
enter
std
xchg
dec
push
fs
or
cmpsb
sub
dec
mov
int3
stos
stos
mov
mov
rcl
or
outsb
xor
mov
push
jmp
sbb
ja
or
mov
pop
popa
popa
outsl
movsb
add
cwtl
cmp
in
push
pusha
lret
dec
iret
movsb
or
jo
jae
xchg
mov
xchg
push
insb
je
adc
fistps
dec
inc
imul
mov
insl
add
mov
xor
outsl
xor
jne
jo
and
ret
pop
shll
loop
rcrb
cmp
ljmp
dec
les
inc
enter
or
cwtl
in
test
addr16
fwait
sub
sar
dec
dec
mov
or
pushf
push
mov
xchg
pusha
and
cmc
lahf
sub
push
aad
push
les
inc
cmp
hlt
lret
sub
jae
inc
popa
lods
push
stos
lods
fisubrs
inc
dec
loop
ret
or
xor
lea
xchg
add
sahf
out
mov
mov
sbb
lea
shlb
adc
xchg
jo
loopne
sub
mov
or
dec
in
xlat
shlb
jmp
lods
pop
stos
add
dec
mov
in
xchg
repz
sub
inc
aas
push
cmp
xchg
ficompl
or
ljmp
sub
jbe,pn
mov
mov
lcall
inc
or
adc
cwtl
sub
jmp
insb
mov
and
jae
mov
sub
test
inc
dec
add
cmp
push
add
push
mov
xor
daa
mov
in
pop
jb
outsb
out
and
rclb
mov
into
or
ret
imul
imul
ljmp
sti
and
mov
jns
pop
mov
inc
pop
fisttpl
shll
data16
lods
jno
fsubrl
or
dec
mov
loop
jl
pop
pop
xchg
mov
jge
xor
cmp
test
es
mov
mov
mov
lcall
cmpsl
add
pop
ljmp
out
add
xor
ss
cmpsl
nop
add
mov
clc
loop
mov
in
addb
sub
mov
xchg
inc
cwtl
or
and
divl
mov
jle
jb
and
push
mov
clc
call
addr16
pop
stos
cmp
outsl
jb
mov
push
out
rcll
mov
jno
push
sub
ret
ret
ss
lods
iret
stos
enter
jae
iret
clc
xor
stos
pop
enter
lods
mov
push
cmp
sbb
push
andb
in
out
dec
pop
adc
das
jle
inc
sbb
jmp
sti
sub
lea
outsl
nop
push
xor
mov
out
rcr
sbb
inc
out
sbb
mov
adc
adc
xor
mov
add
dec
loope
shlb
push
jp
in
cwtl
fcoms
addl
dec
lahf
jae
push
pop
lods
imul
cltd
leave
out
cli
aam
mov
lea
xchg
push
xchg
and
mov
xor
mov
addr16
into
fdivl
or
and
stos
cld
out
cmp
lock
cli
fsubl
addr16
mov
addb
in
rolb
fiaddl
mov
ljmp
sbb
mov
dec
push
push
sarb
mov
jo
adc
mov
loope
scas
adc
dec
mov
fldt
adc
pop
loope
jbe
sub
pop
aaa
insb
push
data16
xchg
and
or
inc
sub
int
rcrb
mov
int3
pop
nop
test
add
sub
xchg
and
xor
jecxz
mov
add
shrl
ffreep
xor
inc
cld
lret
mov
stc
aas
sbbl
mov
adc
daa
in
in
test
jne
sub
ljmp
stos
cmpsb
pop
ds
mov
mov
xchg
sub
lahf
xor
mov
sub
mov
pop
shll
ljmp
cmp
jnp
cmpsb
xor
pop
jne
add
mov
dec
loop
adc
push
movsl
lods
mov
mov
mov
mov
sbb
push
jp
cli
roll
test
push
jge
xor
sarl
addl
in
fisubrs
mov
rcr
cld
cs
mov
push
dec
cmp
push
test
mov
xor
pop
hlt
je
inc
jo
loopne
mov
lea
sub
mov
mov
pop
jle
fwait
sub
sub
lret
sti
push
cmp
outsb
stc
or
jo
scas
lock
fistpll
add
xor
mov
movsb
shlb
lock
jne
fbld
xor
popf
scas
dec
out
dec
inc
out
daa
in
test
imul
mov
fwait
iret
xor
mov
rclb
dec
fsts
xchg
outsb
pusha
jne
pop
js
cmp
push
and
gs
dec
bound
cltd
filds
ret
out
push
rcll
mov
jl
ret
movsb
xchg
or
iret
xor
ds
adc
pop
or
pop
or
or
test
dec
rolb
adc
neg
push
mov
sbb
cmpsl
enter
ficompl
jnp
lcall
pop
movsb
pop
adc
fcom
mov
hlt
sub
sbb
repz
sbb
adc
fildl
dec
lcall
mov
mov
adc
cmc
mov
mov
icebp
in
loope
fs
lods
movsl
push
and
and
inc
imul
cmp
loopne
xor
nop
aaa
jl
jo
js
fildll
cmpsl
cmp
lods
pop
out
pop
and
repz
lret
mov
inc
les
sbb
add
mov
push
cltd
outsb
adc
xchg
sbb
insl
paddsb
mov
cmpsl
mov
adc
jne
lds
xchg
cmpsl
cmp
popf
pop
movsl
sub
cmpb
jle
dec
imul
rcrl
pop
push
mov
negb
lcall
call
mov
push
fsubl
fdivrs
push
fstpl
add
scas
dec
popf
in
lret
jle
or
dec
mov
adc
test
outsb
pop
cmp
lea
sbb
clc
mov
xor
pop
mov
inc
sbb
jg,pt
jecxz
push
mov
jge
cmpsb
add
mov
push
enter
adc
jb
pop
adc
sbb
test
insb
imul
or
sub
aas
or
rorb
fistl
mov
lret
xchg
sbb
add
push
mov
adc
inc
jl
sub
push
lds
add
inc
popf
mov
pop
jo
mov
pop
icebp
jns
stc
insb
push
mov
jns
push
es
rol
sbb
mov
mov
xor
testl
dec
and
mov
xor
xchg
or
sbb
xchg
sbb
ja
push
dec
adc
lahf
int3
xor
shrl
cmp
arpl
incb
lret
stos
push
xchg
dec
out
push
mov
movsb
cwtl
pop
xor
jecxz
in
rcll
or
movsb
decb
push
xchg
jle
cli
pushl
pop
mov
push
dec
sub
fiadds
daa
pop
imul
sbb
cmpl
jle
sbb
xor
lret
int3
bnd
scas
adc
push
jne
mov
ret
fdivrl
sub
lods
call
test
pop
and
and
xchg
testl
mov
adc
stos
bound
pop
pop
inc
pusha
push
lret
addr16
in
adc
in
es
daa
in
lcall
cmpsb
and
iret
mov
push
add
adc
lock
add
cmp
push
mov
je
call
mov
xorb
and
xor
out
ds
in
sbb
pop
je
cld
xlat
cmp
jmp
mov
ljmp
sub
hlt
cmp
bnd
push
cmp
push
sbbl
pusha
or
mov
xchg
in
ret
or
push
and
out
ret
pop
ja
inc
jp
pop
aas
dec
ret
mov
icebp
aaa
xor
lods
iret
call
or
mov
ja
xorb
rolb
fnsetpm(287
mov
aam
nop
push
adc
xchg
addb
xor
mov
dec
pop
fwait
movl
pop
pop
pop
pop
xchg
aaa
imul
jbe
es
pop
inc
mov
test
popf
mov
jmp
pop
jno
stc
add
cwtl
mov
mov
dec
inc
cli
mov
cs
mov
pop
cli
popf
mov
pop
or
lds
push
loopne
stos
ja
sub
fucomp
or
cmpsl
cld
push
ljmp
push
mov
shlb
mov
js
cmc
cmp
ficoms
xchg
xchg
mov
pop
fcoms
loop
xchg
dec
adc
testb
js
xchg
andl
arpl
cmpl
lea
pushf
jne
cld
mov
sbb
fwait
jb
roll
adc
adc
mov
push
lret
out
in
push
fimull
inc
lcall
enter
xchg
or
rclb
adc
rep
jo
dec
js
jnp
movsb
pusha
mov
insb
fwait
mov
hlt
dec
or
test
insb
push
flds
rorb
insb
cwtl
mov
push
jp
into
leave
dec
sti
in
sti
shll
dec
cwtl
fldcw
int3
lods
inc
in
mov
xor
in
lcall
cwtl
mov
out
pop
movsb
cwtl
into
cmp
xchg
aaa
pop
jno
outsb
hlt
pop
push
cli
roll
repnz
stos
imul
adc
jmp
scas
aas
rorl
dec
and
dec
jae
xchg
push
pusha
icebp
adc
pop
arpl
sbb
pop
mov
leave
arpl
enter
and
push
test
repnz
cli
sbbl
loop
out
outsl
mov
shll
pop
jg
aas
leave
popf
add
sub
add
xchg
jb
pop
jo
lods
stos
xor
mov
dec
lret
and
mov
adc
mov
push
mov
inc
mov
cld
mov
into
xor
adcl
cmpb
push
add
sub
xchg
fldenv
sar
fisubrl
in
jmp
in
sbb
mov
dec
mov
sarb
test
ret
fs
sti
sbb
jno
movsb
xor
xchg
add
insb
xchg
rolb
lret
arpl
push
push
push
push
cwtl
mov
outsl
dec
jb
aam
adc
shrl
mov
pop
mov
pop
push
cmp
or
dec
xor
cld
mov
xchg
stos
and
pushf
sbbl
add
jnp
xchg
scas
sarl
insb
adc
push
popa
aas
ljmp
cmp
and
out
lock
xchg
mov
jecxz
jb
sub
cmp
add
inc
popa
push
mov
data16
cmp
push
ror
fsubp
ret
mov
rorb
cmp
mov
int
ljmp
clc
jmp
out
cli
lods
add
dec
cs
lcall
dec
notl
jle
mov
inc
inc
ss
pop
ret
movsb
push
sub
shlb
or
push
xchg
scas
addr16
pop
pop
xchg
int3
stos
xchg
inc
int3
sub
and
mov
mov
stc
sbb
mov
mov
cmc
cld
jb
nop
sub
jae
iret
sub
out
rcrl
and
mov
lods
push
icebp
outsl
sahf
cmpl
in
push
xchg
testb
dec
shrl
mov
or
das
lahf
jge
shll
mov
nop
fs
and
jl
imul
or
or
sub
mov
outsl
mov
dec
xor
mov
pop
push
xor
mov
callw
je
rorl
dec
dec
es
ss
cwtl
cmp
mov
jp
addl
jl
fistps
imul
and
leave
sub
push
cs
or
sbb
fistpll
adc
push
push
sub
inc
unpcklps
pushl
stc
cwtl
add
rorb
push
in
mov
std
xchg
in
pminub
stos
in
loop
stos
xor
aam
nop
repnz
push
stos
mov
imul
in
mov
std
decb
pushf
aad
push
jle
cmp
mov
push
cmpsl
mov
xchg
sarb
jae
xor
ret
jno
in
int3
mov
fldl
lods
pop
push
ret
dec
out
lret
jae
mov
mov
inc
in
adc
ret
lds
ficoml
nop
xchg
push
jbe
nop
add
std
pop
cli
mov
pop
adc
jbe
xor
jnp
inc
pushf
lods
jl
imul
aas
mov
scas
push
xor
rorb
jae
and
lods
subb
jmp
out
js
sub
dec
aaa
push
inc
sub
jo
pop
imul
sbb
or
in
enter
sub
add
cld
mov
cmp
sub
adc
push
mov
sub
xchg
sub
cld
push
aaa
fcomps
outsl
push
test
test
dec
inc
add
es
rcrb
xchg
mov
ret
push
xchg
jbe
push
mov
jmp
add
addr16
repz
rcr
xchg
fiaddl
out
pop
loope
push
lcall
or
add
and
pop
lds
mov
mov
mov
and
pop
call
call
sti
loopne
jecxz
xor
inc
fidivrl
cmp
loopne
fistps
imul
cli
scas
push
lcall
lcall
aaa
lcall
push
mov
fcomp
iret
adc
pop
xor
adcb
ret
sbb
sbb
push
mov
add
pop
and
inc
xor
adc
sti
jb
faddl
call
or
in
xchg
inc
add
xorl
stos
shl
xchg
fwait
lahf
pop
ret
or
pop
scas
aas
push
pop
mov
cmpsl
addr16
dec
sbb
mov
push
pop
in
dec
jp
cmp
fisttps
je
mov
out
arpl
in
mov
lock
sbb
stos
imul
das
cltd
loopne
das
fwait
cmc
and
mov
add
pop
jmp
fwait
or
cmpsb
mov
out
in
mov
inc
pop
je
adc
add
sbb
lods
pop
mov
imul
pop
data16
inc
repnz
rcll
cwtl
add
test
aad
jp
xor
and
test
std
inc
setne
and
push
out
out
dec
clc
mov
push
jnp,pn
push
add
lea
icebp
inc
test
mov
cmp
lods
lcall
mov
xorb
sub
pusha
and
js
dec
xchg
adc
sbb
mov
cld
xor
mov
addb
mov
test
pop
sti
dec
mov
imul
jne
divb
icebp
push
push
hlt
lcall
adc
xor
add
stos
xor
jecxz
sbb
pop
cmp
aaa
ret
and
add
sarb
sbb
or
push
shlb
jbe
cwtl
xlat
add
adc
in
inc
xchg
std
mov
mov
cmp
jno
mov
pop
fimull
imul
pop
or
jecxz
in
movsb
in
jb
or
rcl
xor
sarb
pop
adc
adc
or
cwtl
pop
mov
outsl
dec
cwtl
xchg
cmp
push
sbb
sbb
push
mov
mov
test
es
push
leave
push
jo
lds
roll
sarb
dec
gs
int3
testb
andl
sarl
std
xchg
int3
les
jecxz
lahf
jns
mov
les
inc
ds
pop
mov
ror
cmp
sarl
loop
jecxz
mov
fsubrs
xor
xchg
mov
and
outsb
imul
cmpsl
pop
add
push
js
dec
dec
repnz
cmpsl
addb
lods
lea
jl
outsl
xchg
push
inc
mov
leave
adc
and
mov
lods
mov
ret
pop
imul
or
notb
mov
sub
idiv
jecxz
mov
bound
dec
das
mov
stos
sub
add
and
or
and
mov
mov
jb
inc
aam
xchg
pop
push
inc
push
mov
in
jae
cmp
cmp
pop
xchg
xor
lahf
lea
inc
push
fmuls
ss
fstps
clc
aam
std
and
sbb
mov
fimull
popf
cmp
orb
cmp
les
jo
push
int
pop
frstor
aad
jecxz
imull
sub
mov
xor
int3
or
fisubrl
sub
add
sarb
adc
pushf
test
xor
ret
sub
mov
push
cltd
sub
jmp
enter
add
fcoml
push
and
sbb
add
push
mov
xor
fs
outsl
adc
pop
sub
data16
je
and
push
dec
ss
ret
xchg
sbb
adc
xlat
cltd
cmpb
inc
dec
adc
mov
repnz
sub
dec
xchg
sub
mov
es
xchg
int3
dec
std
or
mov
sub
jl
popf
lret
xor
mov
in
rcll
in
das
mov
mov
sbb
adc
in
cmp
int
aas
cmc
into
add
lret
lret
jp
movsl
push
insb
ds
pop
scas
aas
push
aas
movsb
repnz
xor
and
ds
mov
popf
rcl
jecxz,pt
test
jae
in
or
outsl
stos
stos
or
add
aaa
fisttps
ja
xor
mov
stos
mov
xor
mov
adc
sbb
sbb
mov
or
lock
aas
mov
inc
mov
rcll
add
cmpsl
les
out
int3
push
fadd
xchg
cmp
sub
es
push
dec
sti
or
ljmp
lahf
popa
jne
cmp
fcompl
inc
jmp
cs
and
sbb
je
insb
pushf
ret
mov
clc
xorb
das
mov
push
jb
sub
das
sti
push
jp
push
arpl
mov
mov
fldt
jae
pop
mov
std
push
sub
aaa
xor
pop
jbe
jnp
xor
testb
lret
inc
mov
imul
pushf
sbb
jo
mov
popa
out
orl
shll
mov
mov
adc
adc
std
and
mov
shll
ds
lock
or
sbb
cmpsl
xlat
inc
outsl
cmpsl
jg
mov
cmp
push
js
fsubs
inc
incl
adc
lcall
cmpsb
adc
popf
or
add
mov
inc
sub
cmp
popf
das
add
div
mov
cmp
and
mov
and
jl
cwtl
pop
sarb
sub
lods
rcll
sub
arpl
jb
js
fwait
mov
jae
pop
ret
aas
pop
push
nop
inc
adc
inc
mov
jmp
pop
arpl
daa
inc
mov
xchg
pop
cld
mov
push
aaa
call
insl
loop
loop
out
jae
clc
and
inc
xor
mov
sti
in
data16
and
pop
popa
adc
pop
mov
mov
xor
arpl
clc
sub
xor
add
sub
addl
xor
ljmp
sub
imul
je
cmpsb
jb
jg
fwait
sarb
aas
mov
sub
popa
jg
jle
dec
xor
pushf
fsubrp
fdivs
aad
add
xor
mov
ss
subb
jg
dec
rcr
js
jnp
mov
or
aas
ds
sub
loop
sub
fcmovne
lods
add
rcll
aaa
sbb
xchg
nop
nop
jns
or
shlb
test
sbb
xor
loope
add
outsl
pop
jno
push
rorl
mov
imul
mov
lahf
aad
inc
mov
aam
in
insb
aas
xchg
arpl
pushf
mov
ret
fs
dec
sub
xor
mov
lret
mov
xchg
adc
incl
jg
sbb
iret
sbb
inc
xor
and
sbb
or
inc
pop
mov
cmpb
pop
cmpsb
aam
in
or
mov
or
insl
hlt
xchg
jp
out
sub
outsb
cmpsb
mov
adc
scas
mov
mov
cmp
stos
inc
pop
sub
push
or
mov
sbb
cmpsl
int3
pop
adc
jl
xchg
outsb
aas
xlat
leave
add
out
lods
mov
jb
repnz
dec
xor
push
cs
cmp
pop
jge
call
sub
test
in
popf
push
mov
sub
fsubl
ficomps
test
loop
jmp
pop
push
and
pop
pop
shl
hlt
sti
outsl
push
test
jle
xchg
mov
mov
fistpl
push
mov
mov
test
daa
clc
pop
cmpl
cmp
aaa
inc
ret
inc
mov
add
push
dec
sub
mov
mov
adc
sub
adcb
mov
lds
jb
lret
lock
mov
inc
dec
mov
ret
and
inc
fstl
daa
ret
cmp
sub
mov
hlt
and
mov
sub
xchg
dec
fwait
xchg
rcll
or
lret
lods
dec
cwtl
or
in
clc
cmp
mov
cli
in
and
adc
addr16
xor
sub
and
test
sbbl
xchg
dec
mov
mov
and
cmp
inc
mov
pop
inc
cltd
lods
dec
xchg
push
cmp
lods
push
mov
jae
call
push
or
dec
mov
arpl
and
jmp
xchg
cmpsb
add
pop
cmc
ja
mov
in
mov
andl
shlb
test
xchg
and
test
push
inc
add
push
mov
call
sub
cs
call
cmc
gs
scas
adcl
testl
insb
xor
mov
xor
pop
movsb
ret
mov
dec
pop
cli
or
jmp
push
je
or
or
push
mov
ffree
xchg
iret
mov
mov
fsubrs
mov
adc
adcl
ret
aad
xor
clc
xchg
inc
daa
pop
aad
jnp
je
int
dec
imul
jbe
or
cmp
mov
mov
fs
enter
cmp
repnz
pop
mov
pop
dec
lcall
jmp
cmpsb
shll
fincstp
pop
push
fistps
jle
inc
or
outsl
lret
push
enter
jo
out
push
push
popl
dec
xchg
out
and
insl
or
rol
mov
jecxz
cmp
mov
das
cmp
pmulhuw
nop
cmp
add
sbb
mov
stos
mov
cmpsb
icebp
mov
dec
fmuls
mov
push
lods
daa
mov
dec
sti
sub
jo
cmp
pop
jbe
xchg
pop
inc
lahf
daa
cli
sahf
outsl
xchg
push
repnz
lahf
pusha
jmp
movsl
xchg
shl
mov
scas
fsubrs
jmp
inc
test
cmp
mov
shll
push
test
icebp
ds
xlat
and
xchg
sti
lcallw
push
mov
clc
dec
sbb
sarb
add
sahf
mov
fdivrl
insl
outsb
addr16
sub
mov
nop
adc
jl
mov
jmp
insl
orl
cmp
or
cmp
mov
scas
add
jb
popf
int
imul
inc
cmpsl
mov
dec
mov
aaa
mov
rcrb
dec
pop
daa
jb
dec
lret
js
sbbb
xchg
xor
inc
push
xchg
popa
sub
imul
icebp
cmp
mov
or
insl
lahf
test
inc
int
data16
vsubps
pusha
adc
push
cmpsl
aaa
pop
sbb
ds
test
insb
xor
sbb
adc
pop
cli
ret
push
lods
and
pop
inc
cmc
inc
xchg
repnz
cmc
xor
xor
rol
jl
fcomip
pop
push
push
pop
dec
fwait
xor
push
icebp
shrl
lea
sub
rorb
es
mov
js
jno
rorl
ret
mov
imul
xor
dec
mov
test
sub
and
and
movsl
shlb
adc
jge
inc
ret
repnz
add
mov
mov
xchg
mov
mov
pop
xor
xchg
fildl
rcll
aam
push
add
sbb
sub
sub
sbb
jle
dec
cltd
adc
hlt
pop
adc
fists
lret
jp
jbe
in
dec
ds
ror
popf
dec
adc
sbb
xlat
mov
mov
cmp
loop
lods
xchg
and
shl
pop
mov
jp
dec
mov
aam
pop
mov
sub
lret
and
aad
sub
popa
jl
mov
xchg
inc
pop
mov
lds
and
or
mov
cmp
add
push
push
repnz
fmul
cmp
or
rcl
sub
shll
fs
fdivr
std
out
nop
mov
sub
ficoml
dec
roll
adc
or
filds
or
in
jae
lods
data16
hlt
fstpl
loopne
dec
mov
sahf
push
inc
aam
cltd
xchg
mov
movsb
cwtl
cwtl
scas
mov
mov
repnz
sbb
fidivs
inc
out
xchg
sbb
add
test
mov
je
sub
sbb
imul
in
loopne
sahf
xor
mov
mov
inc
insl
cmp
mov
icebp
je
inc
pop
outsb
lock
cld
mov
mov
cmp
and
ret
sbb
adc
or
push
inc
adc
out
and
mov
test
jne
inc
sub
inc
inc
in
mov
outsb
insl
loop
repz
aam
mov
push
pop
fistpll
xor
rclb
call
clc
int
lret
sub
or
mov
scas
divb
jae
sub
add
lds
in
xlat
sub
in
sub
pop
leave
int3
jbe
daa
leave
add
gs
iret
adc
int
jmp
jo
imul
inc
xor
mov
data16
fistpl
test
dec
adc
test
inc
callw
mov
out
int3
xchg
pop
fucom
push
aas
jno
inc
or
xorb
mov
cwtl
in
sbb
pop
cmp
inc
or
aad
fisttpll
dec
ljmp
inc
arpl
dec
mov
stos
hlt
repz
mov
adc
xor
jnp
sub
hlt
insb
lods
cmc
or
lds
cmp
mov
shrl
and
das
stc
aad
mov
inc
lock
push
dec
xor
mov
inc
mov
mov
aas
dec
lret
gs
test
jb
das
cmp
cltd
or
pop
or
loope
or
lret
jmp
cmp
xorl
cwtl
adc
iret
out
fmull
cmpsb
in
xor
pop
or
jb
cmc
jae
pop
dec
jno
lods
pop
mov
inc
xorb
subl
popf
mov
or
pop
dec
xchg
or
mov
pop
dec
push
adc
addr16
lods
orl
addr16
adc
addr16
inc
js
out
mov
sub
fwait
add
jno
adc
jl
add
pop
cmp
ret
popf
adc
add
jg
or
cmp
pop
cmp
dec
fcoml
cmp
cmp
scas
inc
and
pop
cmp
iret
add
and
xlat
lret
lcall
pop
sbb
cld
pop
test
pop
stos
pusha
mov
notl
dec
stos
negb
push
test
data16
cmpl
xchg
gs
xchg
adc
out
push
xor
jmp
mov
or
sbb
out
jl
data16
inc
and
cmpsb
rorb
or
loop
in
incl
add
shrb
mov
sahf
repnz
cmp
mov
sti
push
cmpsb
test
adc
lds
jnp
xchg
imul
dec
test
mov
out
sahf
setae
mov
ljmp
fcmovnb
sub
jmp
rcrl
bound
in
dec
out
cld
dec
in
cmp
cmp
cmp
orl
add
jmp
add
and
pop
cmp
scas
pop
mov
das
dec
inc
fistpll
adc
in
sbb
cmp
fwait
pop
les
cwtl
lcall
orb
jg
mov
shl
sub
push
pop
pop
fs
test
mov
pop
sbbl
in
lock
xor
mov
adc
cmp
out
int
testl
in
jne
push
in
out
jle
xor
jmp
clc
sub
dec
pop
jecxz
cmp
push
subb
fwait
rcl
cmp
push
jnp
mov
and
ret
xor
xchg
inc
into
aas
dec
mov
lock
xor
mov
adc
mov
adc
jmp
leave
dec
pushf
sub
mov
inc
dec
xchg
jp
add
loopne
subb
add
or
fldenv
mov
mov
xor
xchg
mov
es
rcl
in
aas
movsb
rcrl
mov
test
pop
xchg
idivb
and
mov
enter
cmp
pop
mov
sti
ljmp
xor
mov
sbbl
decl
push
adc
movsl
pop
xor
in
lret
arpl
fucomi
xchg
xchg
ror
dec
xor
and
shlb
xchg
cltd
mov
negb
cltd
into
daa
cmpsl
rclb
lret
in
sbbl
pop
mov
stos
or
in
data16
sbb
popa
ret
cmp
mov
fld
ficoml
add
cmp
pop
cmp
mov
dec
stos
adc
mov
iret
sub
inc
lods
sbb
cmpsl
cmpb
int
test
dec
xor
subb
mov
aam
inc
sbb
popa
xchg
cs
dec
push
aas
fisttpl
insl
decl
dec
movsl
mov
xorb
fidivrl
pop
push
lock
push
nop
leave
sub
push
pop
sbb
inc
dec
jno
jne,pn
out
loope
adc
inc
pop
fcomps
cld
fnstenv
testb
scas
jnp
dec
adc
push
rclb
mov
xchg
pop
jg
pop
jge
in
xor
ja
mov
adc
inc
out
outsb
cwtl
idivb
mov
sbb
rol
arpl
cmp
mov
sbb
jmp
adc
loopne
jnp
cld
mov
movl
out
ja
dec
mov
in
out
sbb
adc
xchg
aam
test
mov
stc
lret
xor
sti
cwtl
insb
ret
xor
xlat
mov
cld
sti
scas
add
pop
ss
fldl
mov
pop
jnp
jmp
and
cmp
iret
mov
adc
add
shrl
addr16
lea
insl
sahf
fwait
fwait
rorl
push
test
stos
ficomps
imul
lea
pushl
icebp
fwait
dec
adc
push
add
xchg
pop
lods
and
sbb
pop
loop
movsl
popf
fwait
stos
jne
push
frstor
push
mov
ljmpw
add
xchg
cltd
arpl
xchg
sub
push
outsb
push
mov
push
testb
popa
lcall
jp
stos
dec
sbb
jmp
nop
rcrl
mov
popa
mov
ljmp
push
iret
xchg
cmp
mov
je
pop
pop
mov
div
fnsave
push
inc
mov
iret
push
dec
cmp
mov
iret
jno
mov
and
std
pushf
pop
js
or
js
add
pop
dec
rorb
das
or
sarb
mov
push
decl
aaa
sbb
pop
sub
push
stc
lea
sbb
cmp
orl
arpl
sbbb
sub
jns
iret
sub
cmpsl
test
jmp
sub
mov
fsts
cmc
stos
pand
push
cmp
dec
dec
out
fistps
cli
mov
andl
movb
fstps
mov
or
das
adc
jb
es
loop
push
lea
leave
lea
push
dec
test
jp
arpl
mov
xchg
in
in
scas
fmuls
pop
int3
in
and
jae
pop
add
repz
jg
rolb
push
add
in
adc
inc
mov
adc
aas
dec
repnz
add
mov
test
cmp
cmpsl
xchg
outsl
je
add
je
sub
pop
clc
subb
lret
mov
xor
mov
dec
inc
hlt
mov
push
insb
jg
ds
movsw
xchg
call
lret
mov
addl
xor
sub
and
cmp
push
and
pop
loop
mov
lahf
add
dec
mov
inc
cs
push
sbb
cmpsb
fs
ds
jbe
aas
cltd
xor
icebp
adcb
enter
out
out
mov
mov
or
cmp
dec
ja
mov
jbe
int3
rorl
jg
push
mov
mov
mov
xchg
xchg
xchg
xor
mov
xor
jnp
mov
cli
xorl
mov
cmc
fwait
adc
shlb
les
and
out
add
in
ds
inc
jnp
mov
jle
in
clc
jae
test
repnz
mov
jl
xlat
mov
jp
xor
pushf
inc
ror
pop
cmp
hlt
xchg
shrl
sub
sti
loop
pop
mov
xchg
push
adc
dec
sbb
dec
pop
push
cmp
push
add
pop
push
sub
js
push
inc
and
sarl
pop
int3
cmp
mov
mov
xor
and
xchg
je
push
clc
js
cmc
push
out
dec
xchg
push
imul
repz
push
sub
dec
pusha
ds
pop
scas
rcrl
pop
sahf
add
mov
je
xor
fdivs
cwtl
dec
je
or
and
jl
in
ret
scas
mov
lock
ds
jno
mov
cwtl
into
xor
mov
xchg
jecxz
inc
lods
add
adc
pop
mov
rcll
cmpsl
aas
push
outsl
dec
call
ss
ljmp
adc
sbb
sti
dec
dec
dec
jmp
xchg
cmp
movsb
push
jo
mov
jo
xchg
popa
iret
das
bound
cmpsb
sahf
aas
and
dec
leave
dec
lcall
sbb
cld
scas
cmpsb
add
xchg
cmp
cwtl
mov
and
jmp
and
addr16
inc
int3
popf
ret
movl
inc
mov
repnz
xchg
xor
pop
sub
inc
cmp
jp
mov
or
lock
fildll
push
fbld
pop
out
repnz
fbld
aaa
jnp
loope
mov
cmp
jo
inc
and
nop
lret
inc
push
outsl
jbe
insb
sub
inc
jnp
jmp
mov
mov
push
daa
addl
rolb
repnz
out
js
mov
push
or
push
xchg
in
cmp
subb
mov
fldl
negl
mov
loop
aam
sbb
mov
in
in
ror
mov
pop
ljmp
daa
dec
mov
insb
in
add
mov
mov
mov
fnsave
aad
stos
int
fisttpll
cmp
mul
mov
jp
sub
pop
inc
xor
inc
fsubs
add
fmul
mov
mov
lcall
or
ret
insb
test
push
xchg
frstpm(287
ds
push
clc
xor
adc
jl
or
mov
icebp
or
inc
ret
and
test
cmp
pop
add
in
fdivrs
hlt
fcompl
inc
or
xor
inc
fisttpl
or
xchg
test
jecxz
test
test
mov
sahf
xchg
mov
xchg
lcall
arpl
pusha
mov
mov
ds
insb
sbbb
fwait
mov
fwait
mov
xchg
ret
test
test
ds
cs
lods
sbb
pop
mov
cli
push
aam
xchg
js
jp
pop
sbb
mov
pop
in
push
fwait
push
mov
mov
sub
xchg
icebp
push
inc
push
cmpsl
pop
loopne
stos
and
mov
call
dec
mov
faddl
ret
loopne
pusha
data16
rcll
fidivs
mov
add
or
add
push
cmp
or
xchg
pop
out
mov
cld
xlat
es
in
push
sub
inc
bound
push
lods
lahf
pop
mov
jb
adc
ret
lds
mov
mov
jg
clc
pop
dec
pop
pop
adc
adc
mov
pop
fsubr
inc
cwtl
cwtl
lds
mov
push
out
ljmp
xor
inc
adc
and
jge
add
sub
inc
push
mov
call
iret
sub
xchg
jo
pop
test
or
jne
cmp
mov
mov
std
or
movsb
rcrb
add
jl
push
lret
leave
icebp
fildl
cwtl
and
cmp
jno
ret
sbb
movsb
push
cs
stc
mov
push
xchg
pop
sub
inc
test
add
in
ljmp
inc
cld
dec
repnz
mov
sub
inc
repnz
sbb
cmp
xor
add
cmpsl
out
pop
in
cmp
mov
mul
mov
mov
cmp
rol
inc
xchg
xchg
add
xchg
xor
ret
fyl2x
xlat
adc
add
mov
pop
pop
xor
and
out
outsl
nop
pop
out
cmp
adc
cmpb
into
or
lahf
addl
outsb
int
dec
in
cmpl
push
fsubrp
fnsave
les
js
dec
hlt
jle
ja
daa
xchg
jmp
cmpsb
jecxz
dec
aam
movsl
add
mov
adcl
cmpsl
mov
sti
cld
sub
cmp
test
adc
retw
dec
push
jb
xor
sbb
pushf
mov
push
int3
imul
out
pop
mov
pop
sbb
aad
pushf
push
push
lods
cli
out
aas
pop
bound
movsb
cmp
sub
dec
iret
mov
push
mov
lock
pop
ss
sarb
daa
or
push
xchg
or
xor
clc
hlt
xchg
pop
xchg
fsubr
in
cli
outsl
stos
ss
stos
mov
inc
lret
gs
inc
loope
popf
and
repz
pusha
and
and
mov
ret
lods
and
cs
pop
aam
add
xor
and
adc
push
data16
adc
addr16
call
xor
aad
xor
rep
pop
inc
mov
loopne
add
cmp
cmp
inc
mov
inc
scas
sbb
andl
push
mov
inc
mov
mov
mov
pop
rorb
mov
aam
xor
hlt
sub
or
xchg
pop
mov
loop
sbb
xchg
adc
jnp
adc
adc
stos
add
dec
pop
test
dec
add
or
je
sti
jmp
sbb
movsl
mov
add
fcomps
and
xor
xor
pop
mov
cmp
nop
fidivl
ss
jmp
mov
mov
pushf
dec
mov
push
adc
lret
mov
clc
sbbb
cmp
repz
dec
fidivrl
sub
and
sti
cmpsl
or
mov
push
jnp
repnz
mov
push
adc
pushf
dec
mov
adc
inc
inc
inc
mov
icebp
inc
cld
jb
in
in
mov
cmpsb
sbb
add
cli
cmp
or
jb
lea
and
push
mov
or
fcompl
mov
mov
push
jo
jle
aam
fsubrl
mov
sbb
push
out
js
sbb
fisubl
mov
cmp
pop
hlt
xchg
out
ljmp
adc
sub
xor
dec
push
rcrl
lds
push
mov
cmp
cmp
sub
subl
jb
leave
xor
jge
loopne
and
cli
adc
cwtl
push
sarb
test
gs
push
cmp
sub
es
jecxz
dec
movsl
clc
int3
cmp
inc
adc
dec
lahf
cmpsl
mov
push
call
ret
rcl
nop
mov
cmp
adc
adc
xchg
in
sti
nop
xor
ss
xor
xchg
xor
lods
sub
sbb
sub
scas
mov
movsl
out
shl
jmp
adc
dec
lods
out
mov
test
out
in
icebp
lcall
push
sti
insl
outsl
mov
jg
lea
add
mov
test
jb
jmp
jnp
sub
ret
sub
arpl
xchg
push
add
in
sahf
jge
fdiv
inc
imul
add
mov
ds
jmp
rorl
sti
jne
push
sub
xchg
push
loopne
test
cmp
fwait
pop
in
enter
mov
in
ljmp
dec
inc
adc
inc
xor
mov
push
adc
cmp
sbb
adc
inc
mov
test
push
sbb
testl
scas
add
fimull
in
outsb
stos
push
and
fiaddl
shl
cmp
push
popf
mov
cmp
mov
fistpl
push
and
pop
lods
cmpl
repz
mov
insl
push
shlb
aas
or
aaa
xchg
mov
jno
jecxz
mov
mov
lret
push
in
aaa
pop
mov
outsb
dec
pop
mov
cmp
push
dec
outsl
add
or
lds
int3
addb
adc
sbb
insb
jmp
iret
cmp
and
mov
repnz
jl
add
je
in
adc
fs
aad
shr
idivl
cmpl
cld
pop
or
xchg
aaa
mov
push
out
adc
fsubs
push
inc
std
xor
lret
stos
jl
or
adc
iret
sbb
popf
mov
mov
imul
test
sarb
bswap
sbb
jle
dec
mov
add
mov
mov
test
pushf
bound
xchg
mov
mov
push
movsl
mov
adc
mov
cmp
dec
shlb
test
add
sbb
lcall
cmp
xchg
xor
push
in
inc
mov
xor
sub
pop
fildl
inc
adc
xchg
cmpsb
mov
jo
orb
inc
test
fsts
fsubs
loopne
adcl
inc
ret
mov
aam
dec
fistl
lret
xchg
or
dec
sahf
icebp
aad
mov
imul
xchg
lcall
adc
lcall
es
pop
call
or
ljmp
mov
test
jmp
xchg
mov
cld
mov
or
into
movsb
mov
dec
inc
mov
insb
cmp
cmp
xchg
lods
dec
cli
iret
pop
js
subb
xchg
pop
addb
xor
imul
inc
add
out
push
lods
cmc
cli
ficoml
pop
fistps
cmp
mov
int3
jo
insl
pop
sti
pop
jo
fiaddl
notl
pop
sti
cs
subl
je
mov
push
scas
cwtl
shll
and
push
xor
xchg
push
mov
mov
adc
rcr
xchg
adc
push
sbb
inc
mov
movsb
lahf
mov
leave
sbb
pushf
push
je
sbb
dec
sub
test
enter
cmpl
mov
pop
sub
pop
aaa
xlat
lret
lods
pop
xchg
jns
dec
int
pusha
rolb
shl
inc
popf
or
jbe
movsl
mov
ret
insl
int3
shr
xchg
orb
fsubr
jge
sub
dec
sub
mov
dec
jb
jge
xchg
fistpl
xor
dec
xchg
add
cmp
push
shll
dec
inc
bound
lea
addr16
xlat
and
dec
ret
lock
jle
aaa
leave
lcall
cmp
inc
dec
xchg
pop
xlat
xor
lahf
shrl
dec
push
vpminsw
cmp
sub
and
movsl
sub
mov
nop
std
jecxz
fwait
call
push
lea
mov
rcrb
add
shll
lds
add
int3
xchg
mov
daa
mov
mov
popf
mov
jbe
and
mov
ljmp
cs
sub
add
and
dec
xchg
jo
push
mov
repnz
push
sbb
and
repnz
dec
inc
sbb
call
aas
shrl
push
icebp
test
in
mov
dec
push
sbb
push
mov
pop
dec
dec
leave
sub
sbb
cmp
add
out
dec
push
add
xchg
es
jl
sub
add
mov
nop
lea
je
push
jnp
cmp
out
pushl
fcomps
lahf
push
sub
cmp
jbe
or
data16
push
cmp
cmp
rolb
xor
fcoms
mov
insl
push
pop
lock
push
sub
dec
jg
dec
rcrl
xlat
or
mov
cs
fidivrl
sub
int3
jl
inc
sub
fisubrl
xchg
ds
in
dec
in
int3
cld
add
out
adc
in
sub
inc
xchg
pop
repz
xchg
xchg
lahf
cmp
dec
xor
adc
ds
add
push
shl
mov
loopne
xchg
push
stos
mov
aam
xchg
sbb
aas
inc
pop
mov
dec
cmp
cmp
mov
int3
scas
pop
mov
popa
loope
cld
rorl
pop
inc
les
les
insb
push
mov
cmp
add
notl
fcomps
ret
adcl
hlt
bound
push
or
cld
jge
cld
push
or
push
stos
jl
cmp
bound
push
out
fmull
dec
idivb
lcall
mov
movsl
xlat
mov
xor
xor
xchg
fucom
mov
ret
adc
outsb
add
fsubrl
inc
jae
mov
sub
or
jecxz
ds
pop
jbe
mov
add
cmpsl
lds
mov
cwtl
int3
mov
pop
repnz
insb
mov
adc
cmp
dec
lods
or
push
mov
or
jnp
mov
sti
sbb
clc
sub
add
mov
test
sub
loope
and
push
mov
adc
inc
in
aad
repnz
shl
movsl
cmpsb
pop
mov
mov
xchg
mov
lock
test
xchg
mov
inc
sti
into
repz
mov
fildll
nop
cltd
cmpsb
aas
lret
addl
mov
cwtl
sbb
inc
inc
sarb
rol
sub
mov
or
add
faddl
adc
insb
jmp
test
push
aaa
adc
out
xchg
repnz
push
je
dec
push
in
jge
rolb
or
mov
or
jl
xchg
sub
outsb
jmp
mov
mov
insb
lods
cmp
mov
mov
push
xchg
adcl
adc
test
sub
leave
jne
mov
pop
nop
shlb
mov
rorb
mov
jo
sbbl
jp
or
lods
repz
stos
dec
les
xchg
jge
xchg
mov
jne
sbb
lret
pop
dec
loope
fisttps
mov
mov
add
xchg
cmp
test
out
push
pop
loope
cmpsb
push
sahf
pop
addb
fcoml
out
xchg
aas
add
fidivrl
pushf
push
sbb
mov
xchg
add
rclb
dec
push
scas
sti
or
sbb
lahf
repz
loope
mov
imul
push
scas
pop
test
mov
mov
mov
in
rcl
ret
je
nop
or
mov
mov
or
jl
or
add
inc
cmp
jns
scas
mov
dec
mov
ds
je
imul
shlb
mov
xor
pusha
movsb
cs
pop
add
ja
add
cmp
pop
rolb
sub
aas
push
add
sbb
dec
cmp
push
xchg
mov
fs
jge
adcb
out
xchg
and
ficoms
jne
testb
inc
aaa
rcl
push
and
popl
or
popf
mov
push
mov
fistl
das
push
aaa
in
shll
mov
sub
xor
loope
les
xor
sbb
adc
cmp
popa
sub
in
mov
aas
xchg
jnp
pushf
outsl
aas
mov
pop
sbb
out
shrb
ret
xchg
aaa
mov
sbb
mov
les
sub
cmpsl
fcoms
mov
cmp
test
pop
daa
mov
push
sarl
lods
xor
lcall
mov
sar
dec
xchg
adc
int
cs
jne
inc
mov
fcomps
ljmp
xor
mov
jnp
cwtl
mov
sub
push
repnz
enter
in
das
mov
jecxz
in
test
cmpsb
adc
repnz
mov
gs
xchg
mov
jp
ds
lcall
fmuls
and
rol
push
rol
dec
or
and
jmp
imull
insb
cmp
sbb
hlt
and
repz
js
std
stos
dec
sbb
dec
dec
pop
push
dec
dec
sbb
cmpsl
fldt
int3
into
loop
fdivr
sbb
clc
dec
mov
es
jmp
jnp
pop
dec
test
pop
adc
xor
movl
dec
jnp
dec
popf
jp
imul
insb
daa
addr16
mov
jnp
dec
andb
and
or
push
popa
mov
add
loopne
inc
or
sarl
or
inc
dec
jo
jne
sbb
xchg
mov
stos
dec
lods
dec
inc
sbb
xchg
xor
jg
or
or
cmp
sub
out
add
in
test
push
mov
mov
mov
test
sahf
mov
repnz
iret
add
pusha
aam
mov
sbb
cmp
pusha
xor
inc
pop
loop
mov
leave
xor
lods
xor
enter
cli
mov
cld
iret
inc
pop
fiadds
inc
lret
xor
loop
data16
mov
stos
push
cld
xor
xor
test
add
cmp
push
dec
mov
or
jns
cmp
outsb
cmp
add
ss
mov
pop
and
test
or
bound
sub
std
test
ret
ficoml
call
push
cmpsb
xchg
rolb
das
test
or
mov
xor
aas
jl
mov
pop
pop
leave
and
loop
cmpsl
dec
mov
lods
stos
popf
xlat
rcrl
inc
dec
incb
sub
out
sub
jnp
adc
aad
cmp
pop
adc
pop
pop
jns
jecxz
out
movsl
mov
rcll
test
pushf
shl
mov
pop
pop
rclb
mov
scas
incb
popf
pop
or
in
adc
pop
jno
cld
pop
dec
push
cld
into
das
pop
mov
and
add
leave
adc
daa
dec
mov
add
sbb
test
notb
stc
or
add
mov
mov
push
aas
mov
loop
push
push
sub
testl
hlt
or
push
and
sbb
xor
lock
cmp
cmpb
sub
lahf
cs
pushf
out
cmp
scas
xor
out
scas
inc
icebp
push
inc
sub
mov
test
movsb
pop
test
jp
stos
mov
stc
jnp
ja
pop
fdivrp
push
adc
jecxz
jl
stos
rolb
or
ds
sarl
lahf
test
pop
mov
jne
mov
jae
add
mov
push
rcl
cmp
sbbb
add
or
inc
cmp
or
loop
inc
aaa
call
lods
dec
or
or
mov
add
fmuls
or
movsl
int3
or
adc
push
loope
pop
cmp
cmp
lahf
leave
fists
into
sub
and
iret
mov
jmp
mov
xchg
addr16
outsl
jmp
dec
adc
add
xlat
sbb
movaps
push
sahf
xor
cmp
and
inc
add
lock
and
jne
push
pop
call
xlat
xchg
mov
mov
ret
lahf
xchg
hlt
cmp
lret
in
fdivl
scas
fisttps
repz
mov
jl
stos
lods
int3
push
or
mov
jg
pop
add
push
aaa
push
jmp
jmp
mov
xlat
pushf
enter
jb
cmpb
test
or
pop
jae
inc
push
es
jle
inc
daa
push
loopne
test
cmc
mov
mov
xchg
xchg
xchg
aaa
cmc
mov
out
push
jb
mov
out
lret
pop
cltd
je
xor
ljmp
jae
lods
pop
pop
fiaddl
jle
add
sbb
pop
in
cmp
int
mov
ds
mov
dec
cld
aas
or
push
pop
mov
mov
in
fidivl
adc
lret
into
mov
ret
jae
xchg
dec
xchg
outsb
aaa
sub
mov
cmp
cmp
cmpsb
loopne
sbb
rcrb
loopne
dec
and
sbb
gs
enter
ss
ss
push
sub
fsubl
ljmp
xchg
dec
xor
int
rorb
jl
fsubrs
push
mov
jge
xchg
xchg
mov
jl
xchg
add
repz
push
mov
aaa
ss
les
jb
add
xor
sub
test
and
inc
cs
xchg
mov
movsb
add
out
add
pop
push
xchg
add
add
nop
sbb
xor
xor
dec
cmc
jecxz
push
negb
jb
pop
xor
in
inc
pop
mov
mov
push
xor
loopne
jge
jb
rcr
pushf
dec
push
in
push
test
subl
clc
mov
int
roll
xchg
je
push
mov
icebp
jle
adc
xchg
push
insb
cwtl
ja
add
shll
sub
notb
cltd
not
gs
and
pop
decl
loopne
lea
movsb
cmp
repnz
leave
mov
inc
test
mov
xchg
jns
and
mov
addr16
inc
mov
insb
or
mov
rcrl
add
stos
push
ret
leave
test
clc
cmc
mov
cmp
movsb
adc
jmp
movsl
sbb
jbe
mov
fistps
leave
mov
xchg
cwtl
shll
lock
push
call
jp
mov
push
adc
pusha
pop
mov
xlat
test
mov
scas
fdivs
xor
in
inc
ja
xchg
mov
fwait
lods
insb
jmp
mov
mov
cmp
in
dec
sub
mov
inc
mov
ljmp
mov
mov
xchg
mov
jmp
negl
and
push
lret
and
and
dec
lret
test
dec
out
out
xchg
xor
push
stos
lahf
jp
jmp
leave
mov
mov
add
outsl
push
ja
pop
aad
mov
fimull
inc
pop
lods
int
mov
mov
scas
push
jo
cmp
in
cmc
cli
mov
pop
add
cmpsl
inc
movsl
cmc
sub
jbe
sub
mov
push
jne
insb
mov
pop
dec
ljmp
xor
jmp
dec
int
cmp
test
outsb
mov
adc
js
sub
xchg
mov
cmp
xor
xor
aam
inc
lock
push
jno
push
fmul
lcall
mov
push
fsubp
nop
sarb
jg
pop
cmpl
cmp
jmp
adc
mov
das
std
adc
js
adc
push
lahf
jno
divb
cld
es
pop
xchg
mov
cmpsl
dec
and
in
aam
lds
push
aam
mov
scas
cmp
xchg
inc
mov
into
lea
outsb
pop
sub
cmp
sub
idivb
jecxz
pop
idiv
push
pusha
sbb
mov
sbb
mov
inc
shlb
xor
push
or
mov
pushf
cmpsl
mov
int
call
cmp
cmp
push
cmc
xor
inc
or
dec
adc
out
lods
repz
jbe
push
loope
sarb
inc
cmp
inc
enter
or
ret
sti
mov
repz
dec
repnz
loop
shrb
mov
aas
int3
cli
push
lds
mov
outsb
in
xchg
adc
xlat
es
in
dec
out
jp
lods
pop
or
add
push
loopne
push
sbb
dec
mov
and
adcl
test
pop
aaa
sbb
push
mov
push
or
inc
sub
out
mov
jmp
add
mov
arpl
outsl
js
data16
push
leave
cmp
into
or
shlb
mov
pop
into
jmp
push
add
sub
imul
inc
adcl
mov
mov
sbb
pushl
lret
push
repnz
mov
fwait
cmp
or
fsubrs
push
shlb
jmp
dec
ficompl
stos
aad
mov
test
sub
fs
mov
out
mov
loope
ret
sub
pop
nop
ljmp
push
outsb
jg
sbb
push
inc
adc
jmp
mov
movsb
sub
lahf
lahf
and
push
jb
shll
jecxz
popa
mov
ret
add
mov
dec
scas
push
insb
mov
pop
in
push
ss
lock
fs
lds
loope
loope
aam
cmc
mov
and
add
clc
or
add
xchg
movsl
lods
pop
test
sbb
in
xchg
jae
xchg
xchg
std
rorl
es
sub
jno
and
push
out
adc
lret
push
dec
ret
and
inc
aam
pop
pushl
lahf
pop
sbb
rcrl
pop
lahf
sbb
daa
add
cmp
repnz
mov
cld
fcoms
mov
loop
sbb
cmpb
aad
pop
jp
hlt
or
ret
cmpsl
cwtl
push
mov
push
loop
jae
fs
filds
mov
mov
insl
dec
pop
faddl
lock
or
adc
mov
test
xchg
jmp
mov
mov
popf
icebp
jp
xor
push
xchg
test
mov
adc
ss
mov
push
and
xchg
test
cmc
call
fsubr
xchg
mov
push
movsl
in
adc
cmp
push
dec
cmc
popf
sub
push
sub
cmp
and
sbb
shl
add
sbbb
repnz
je
inc
push
out
repz
xchg
mov
test
clc
ret
in
aas
sub
mov
add
mov
gs
sbb
rol
add
mov
or
mov
push
inc
sbb
sbb
dec
aam
adc
hlt
xor
nop
mov
bound
mov
push
sbb
cmpxchg
and
test
pushf
mov
inc
pop
adcl
push
add
call
xchg
es
mov
xchg
xor
clc
push
outsl
rcll
sbb
and
or
add
push
pusha
lcall
xor
push
push
dec
outsl
cmpsl
mov
add
pop
cmp
dec
mov
mov
xchg
dec
push
jae
cwtl
xchg
fcompl
jne
test
inc
pop
out
scas
mov
rcrl
insl
repnz
pop
lret
mov
ss
sub
inc
mov
lock
xchg
aas
lds
mov
fwait
push
shlb
cmp
mov
notb
jnp
mov
push
popf
xor
and
xor
cmp
cmc
ljmp
sub
das
fucom
outsl
or
sbb
sub
aas
shl
xor
or
pop
sbb
fs
jmp
test
mov
in
es
addr16
mov
jmp
xchg
imul
inc
in
mov
enter
sbb
or
popf
mov
shll
sti
sub
or
lods
into
ja
into
inc
int
dec
mov
xchg
les
bound
push
roll
in
shrl
xchg
lret
test
mov
shl
and
jb
xchg
fwait
ret
scas
ret
das
ja
and
jbe
mov
and
jmp
mov
aas
cli
mov
movsl
mov
nop
repnz
repz
inc
xchg
shlb
sbb
jp
mov
shl
sbb
ljmp
mov
dec
push
das
cmp
imul
push
sub
xchg
scas
mov
lods
fwait
test
js
lea
push
aad
cmp
stc
cmp
mov
and
scas
lret
daa
dec
test
imul
je
ss
nop
push
dec
mov
int3
xor
xor
lock
ds
push
ljmp
sub
bound
push
mov
out
adc
clc
xor
cmpsl
cmp
push
jb
dec
enter
dec
sub
decb
fnsave
xor
sub
xor
sbbl
out
daa
jb
push
test
add
mov
bnd
in
lcall
pop
sbb
pop
loopne
mov
add
ljmp
pop
dec
sub
jle
sbb
lahf
js
movsl
fstl
jecxz
xchg
cmpsb
or
jecxz
sub
pop
js
add
mov
shrb
aas
mov
lods
and
jo
repz
fs
mov
int3
sbb
cmc
pop
pop
repz
popa
push
mov
adc
ret
xchg
dec
lock
inc
jne
fbstp
out
dec
repnz
jno
sarb
jge
popa
mov
adc
or
sub
std
cmp
jnp
and
xlat
push
xchg
rorb
cwtl
add
outsl
hlt
daa
out
jmp
and
xchg
cmpsl
cs
sub
push
fs
jl
ret
jns
or
inc
std
or
stc
inc
dec
adcl
mov
cmp
mov
pop
lds
mov
or
fdivrl
xor
sub
and
sbb
in
inc
call
mov
jb
daa
pop
movsl
jp
mov
mov
shrl
and
or
jp
push
or
inc
ds
into
mov
movsl
lcall
mov
jbe
call
jno
sbb
pop
cmp
and
fcoms
mov
sub
and
mov
mov
push
dec
jns
sub
aam
push
icebp
dec
push
and
pop
pop
jb
clc
xor
in
repz
cmp
pop
add
idivl
jb
outsl
adc
in
push
lcall
in
inc
pop
push
adc
sbb
add
out
cmp
xor
dec
and
dec
cmp
xchg
pushf
add
and
stos
es
fcom
mov
push
mov
push
pop
sti
jo
mov
jae
and
rcl
push
aaa
ss
add
xor
movsl
stos
mulb
lea
pop
adc
andl
mov
pop
outsl
mov
sbb
repnz
cld
mov
mov
aas
pop
cli
sub
cmpsb
es
arpl
out
loopne
out
sub
pop
cwtl
adc
cwtl
xor
sbb
push
int
jge
sub
mov
mov
sub
testb
cs
adc
mov
int
lods
cmp
aam
mov
in
and
adc
sbb
push
pop
scas
pop
mov
into
fstpl
push
arpl
cmc
popa
jbe
mov
icebp
jae
outsl
insb
xor
jle
clc
cmp
and
sub
in
cli
shll
loop
scas
int3
sub
inc
and
mov
jno
mov
or
push
das
jp
pop
pusha
fdivl
sub
mov
mov
pop
push
cld
outsl
xchg
cmc
std
xorb
addr16
cwtl
test
push
adc
sub
xchg
sbb
sbb
push
lock
iret
ljmp
cmp
add
lods
push
imul
call
cmp
das
jnp
movsb
pop
add
inc
pop
fcoms
push
pushf
outsb
insb
out
inc
stos
jae
shl
cltd
xchg
rorb
scas
mov
inc
in
sbb
imul
fdivrl
pop
out
jb
push
mov
arpl
dec
mov
lret
mov
insb
shrl
adc
out
mov
cmp
stos
fs
and
sub
xchg
mov
sar
cmp
subb
lock
jne
sbb
mov
push
fcmovnb
mov
pop
sahf
or
repz
imul
scas
nop
ljmp
sarl
xchg
cltd
pusha
lcall
add
adc
sub
lret
xchg
data16
loopne
repz
cmpsl
mov
jl
bound
xor
jmp
add
lahf
ss
push
jmp
ljmp
cltd
push
dec
jecxz
jecxz
dec
cmp
sbbb
ss
push
ret
cmp
je
dec
inc
mov
add
dec
or
push
mov
nop
xchg
faddl
faddl
mov
push
ja
adcb
ficoml
xor
dec
jp
mov
xor
addb
mov
mov
pop
rol
out
fcmovne
loopne
cmpsb
jmp
dec
stos
loope
dec
dec
mov
lret
scas
imul
sahf
or
shll
repnz
push
cld
sub
out
jmp
das
insb
xor
iret
imul
lret
pop
dec
or
sub
inc
aam
hlt
les
iret
sub
jmp
sbb
aam
lods
test
aaa
jb
and
mov
jge
je
xor
cmc
mov
loop
mov
jl
and
jl
popa
jp
clc
adc
inc
repz
jp
push
mov
sbb
add
cmp
imul
das
and
sbb
push
dec
rcr
push
jo
xchg
jp
pop
sub
mov
subb
dec
hlt
dec
aas
into
add
rclb
flds
sbb
sbb
nop
xchg
sub
push
jno
cli
adc
rcrb
ss
cmp
rclb
sub
mov
repz
push
push
add
push
daa
adc
xor
cmpsb
cltd
call
mov
mull
dec
xlat
test
mov
neg
jb
lock
ds
mov
rcrb
jns
icebp
je
cmc
gs
sub
pushw
mov
xchg
jg
in
les
daa
jle
adcl
ljmp
addl
jecxz
les
jnp
in
and
and
lea
add
mov
data16
mov
dec
xchg
mov
cmp
mov
jle
lods
lock
loope
pop
cmp
mov
mov
jno
cmp
sbbb
inc
jae
in
leave
xor
push
rorb
cltd
cwtl
adc
aaa
cmp
mov
push
sub
aas
and
insb
adc
jo
adc
cmp
addl
movsl
mov
pop
xor
and
inc
in
xor
lods
push
xor
pop
sbbl
sub
pushf
hlt
push
mov
sub
jle
pop
mov
jnp
push
das
sar
push
fcmovnbe
out
sbb
cmc
add
inc
push
push
xchg
pop
pushf
mov
mov
sub
les
push
jge
mov
ss
aaa
aaa
adc
js
xchg
faddl
int3
scas
sub
mov
in
dec
call
int
mov
test
loopne
mov
and
pop
dec
mov
test
gs
push
out
sub
mov
pop
fsubrl
arpl
aad
mov
call
fs
je
pop
es
mov
or
and
and
es
jp
ljmp
mov
cmp
adc
push
shrb
mov
push
sahf
in
lods
scas
cmp
xor
and
xlat
xor
mov
push
sbb
jbe
test
pop
test
hlt
in
call
pop
inc
cmp
outsl
ret
mov
pop
or
inc
dec
movb
push
out
sub
in
pop
mov
roll
xchg
push
dec
or
or
cltd
stc
sahf
pop
add
jp
xor
pop
push
jo
ret
in
adcb
les
adc
test
adc
push
cmp
add
lds
mov
pop
loopne
lea
jg
imul
sahf
cmp
in
out
xchg
out
insb
lods
and
xchg
rorb
insb
mov
nop
addb
das
mov
std
inc
sub
mov
jo
mov
lea
mov
jbe
pop
sub
or
jle
fwait
pop
push
push
lock
je
mov
lret
cmp
xchg
js
fdivs
mov
loopne
jecxz
nop
fcmovu
les
xor
addl
cmpsb
popa
into
fisubl
enter
lahf
fiaddl
xchg
jmp
cltd
and
out
mov
dec
fs
mov
orl
stc
xchg
out
xorb
sbb
lods
inc
fcompl
in
xchg
cmp
xchg
mov
popa
xchg
pop
mov
or
push
andl
push
dec
in
cmp
fcompl
and
mov
adc
ss
lahf
inc
fnstcw
shll
mov
into
xchg
shlb
pop
mov
fs
js
loop
sub
daa
adc
add
pop
mov
cmp
push
out
pop
push
aam
rcrl
pusha
dec
xlat
mov
fmuls
sbb
sbb
mov
mov
filds
sbb
je
mov
push
mov
ret
sub
lret
lcall
iret
sub
outsl
sub
pushf
arpl
cwtl
scas
jecxz
pop
popa
shlb
and
mov
jecxz
fisttpl
repz
xor
out
roll
stos
repnz
jp
mov
int
shlb
cmp
or
sub
rorb
sti
lods
mov
jl
push
jae
mov
push
inc
sub
mov
mov
loopne
mov
in
ret
lods
sub
xor
sub
xor
mov
aam
mov
jmp
jno
jp
dec
shr
aas
ljmp
mov
pop
and
aas
adcb
xchg
xor
dec
xchg
push
push
loopne
nop
in
cmp
sub
fwait
add
pop
dec
cmp
sbb
adc
cltd
hlt
xorb
cmpsl
sbb
and
lcall
fstl
mov
es
dec
mov
mov
xchg
add
sbb
call
fsubs
loopne
div
and
mov
pop
hlt
push
sub
push
cmp
cli
cmp
cmp
xchg
mov
mov
jl
pusha
fdivs
sub
notl
test
dec
repz
jo
jmp
jo
jae
test
xor
mov
lret
mov
call
lcall
inc
aad
aaa
sti
mov
mov
aad
push
xor
add
pusha
je
mov
or
push
cs
adc
sub
arpl
mov
ret
rcll
hlt
xchg
pushf
inc
mov
inc
pop
ja
addr16
fmuls
outsb
sbb
hlt
rorb
stos
adc
xchg
cmpb
js
cmpsl
mov
daa
jp
xchg
sbb
das
sub
sbb
push
mov
in
mov
xchg
or
gs
notb
out
mov
fwait
adc
jg
push
mov
les
sarb
in
or
mov
add
push
loopne
popa
sahf
jmp
pushf
fldl
mov
push
jbe
les
inc
or
fwait
mov
ret
sub
out
arpl
jl
mov
cs
jl
cwtl
repz
in
xor
rdmsr
cs
ret
cs
in
cmpsb
sbb
xor
sub
daa
pop
pop
pop
ss
jns
jl
in
outsb
jmp
insb
push
hlt
in
sbb
inc
push
adc
mov
jle
pop
mov
shrb
xor
pusha
movsb
adc
out
icebp
mov
es
sbb
push
ljmp
in
shlb
xchg
cs
cmp
insl
xor
mov
in
sbbl
leave
jg
rolb
add
jl
jp
mov
outsb
pop
pop
jae
xchg
pop
inc
dec
sub
inc
add
mov
mov
data16
aaa
jo
loopne
lret
and
mov
adc
jae
idivb
adc
or
jne
xchg
cmp
lret
int3
xor
dec
pop
xor
mov
pushf
sbb
enter
fcmovnbe
aaa
inc
xor
xchg
outsl
sbb
cmp
add
dec
cmp
lahf
jecxz
lcall
mov
sbb
into
out
ljmp
mov
cs
lcall
test
dec
jmp
add
inc
ja
dec
mov
dec
sub
mov
outsb
jecxz
cmc
mov
cs
inc
mov
fistpl
pop
mov
sub
repz
je
sbb
jp
xchg
ficoml
mov
lcall
jb,pt
fildll
or
mov
lret
rol
jno
lret
in
popf
mov
push
sub
rcrl
cli
ss
or
jl
jmp
ljmp
mov
pop
int3
or
arpl
sbb
std
jns
mov
cmpsb
jbe
push
into
and
xchg
lods
and
dec
adc
cmpb
pop
bound
shlb
je
mov
jne
movsb
aas
inc
push
enter
mov
pop
leave
adc
mov
movsl
cmp
nop
cmp
xchg
and
popa
push
jl
pop
ret
pushf
ss
cmp
add
add
fwait
mov
sbb
pop
pop
xlat
sbb
sub
shll
pshufw
es
sub
bound
dec
cltd
enter
pushl
pop
shll
push
push
cmpsl
add
aad
xor
pop
in
sub
enter
incb
xor
adc
or
or
mov
xchg
mov
mov
ficoml
out
clc
sub
ja
sbb
lds
cmp
cs
cs
aaa
hlt
add
jbe
loop
loope
mov
int3
test
mov
mov
ss
mov
mov
jmp
sub
andb
arpl
or
mov
adc
inc
les
hlt
jl
mov
mov
add
mov
mov
dec
or
pop
xchg
push
cs
sti
xor
cmp
scas
pushf
cld
in
fidivrl
xchg
and
push
or
and
sbb
shll
movsb
ret
rcrb
xchg
test
les
xor
push
aas
push
ret
jmp
rcll
dec
adcl
mov
mov
push
jmp
pop
adc
rol
adc
jge
or
xchg
mov
adc
sub
js
arpl
test
mov
or
in
ds
stos
hlt
add
and
adc
dec
push
stos
int3
es
push
roll
add
mov
inc
mov
ds
cld
imul
sarb
ja
inc
sub
xor
popa
iret
pop
das
adc
mov
jp
push
fisttpl
stos
cmp
jnp
and
movsl
lock
adc
shl
and
jno
inc
mov
inc
or
adc
mov
cmpsl
adc
push
or
es
mov
popf
cwtl
fistpl
sahf
outsb
add
push
adc
pop
in
outsl
adc
pop
add
pushf
push
mov
push
mov
test
sub
mov
pop
mov
jns
xacquire
ret
pop
out
xor
push
mov
pushf
test
xlat
pop
movsl
add
cld
mov
pop
lea
mov
cld
inc
in
lea
pop
xchg
mov
inc
mov
pop
movsb
ljmp
mov
xchg
mov
cld
mov
push
pop
ja
mov
dec
cmp
fistpl
cmp
stos
mov
les
ret
sub
aad
fs
or
fs
mov
cmp
data16
push
mov
inc
lods
call
movsl
xchg
and
cmpsl
pop
and
sub
int3
push
movsl
adc
sub
out
push
cmp
jge
mov
dec
sbb
xor
inc
add
cmp
imul
shrl
lahf
andb
pop
int
or
loope
sbb
mov
xor
inc
mov
cmp
daa
cmp
fnsave
fcoms
adc
jno
lods
pop
les
aad
daa
ljmp
add
mov
sbb
jno
jmp
les
ds
sbb
rorl
sahf
lods
mov
mov
xchg
mov
adc
push
lret
mov
aas
pop
subl
xchg
adc
push
add
pop
cmpsl
rclb
stc
mov
sub
xor
mov
pop
mov
dec
int3
fistpl
push
xchg
hlt
jns
inc
lds
rcrl
jecxz
sbb
push
xchg
imull
andl
shr
or
cmpsb
mov
lcall
imul
pop
jl
lock
pop
loop
dec
mov
inc
adc
sub
aas
arpl
xor
mov
and
shl
test
mov
fidivl
fnstenv
sahf
mov
pop
cmp
sub
lods
fwait
stos
xor
lods
mov
add
push
xlat
or
mov
mov
mov
ret
mov
xor
jne
or
jge
out
mov
inc
push
adc
test
jo
jmp
mov
xor
imul
sbb
or
sarb
push
sub
clc
mov
cmp
jle
and
int
mov
jmp
cmp
sahf
or
popf
out
les
cld
insl
into
xchg
mov
loop
jp
add
mov
lret
out
pop
mov
dec
hlt
imul
das
leave
in
mov
in
push
popf
xchg
jo
mov
aaa
je
loop
out
clc
pop
rclb
jb
push
imul
stc
xor
stos
cmpsl
xchg
pop
in
movsb
test
sub
add
and
ret
and
sbb
mov
cwtl
sbb
mov
mov
in
mov
mov
mov
lret
sub
jb
daa
add
add
mov
mov
and
mov
das
daa
out
lea
jbe
adc
imul
lods
mov
outsl
cmp
aas
mov
pop
sub
push
xchg
xchg
cmp
pop
xor
data16
ret
pop
pop
xlat
insl
lods
xchg
jmp
and
add
gs
in
fninit
ret
adc
adc
add
fwait
jb
ljmp
push
data16
cmovne
pop
aad
jb
addr16
stos
scas
fstl
in
mov
into
adc
jae
loop
test
push
js
aas
xor
cmpsb
mov
jnp
jns
imulb
xchg
mov
sti
out
test
mov
xchg
add
mov
mov
js
je
adc
cli
cs
cltd
je
jge
lahf
out
and
mov
cs
pop
scas
inc
pop
pop
push
aam
lods
fwait
xchg
ja
push
rolb
imul
popaw
sbb
sti
fidivrl
inc
fdivrl
int3
js
movsb
in
push
or
pop
nop
fisubl
sub
clc
mov
sbb
jp
hlt
or
mov
lods
xor
repnz
mov
adc
pop
loope
pop
xor
ds
push
lds
icebp
cmp
sbb
inc
mov
pop
and
fs
xlat
cmp
or
fsub
addr16
shlb
cmp
into
push
dec
movsb
xor
cmp
arpl
ret
inc
cmp
adc
mov
mov
cmp
mov
insb
pop
inc
inc
icebp
inc
sbb
pop
ret
add
push
push
or
pop
fadds
inc
pop
in
in
inc
xor
mov
arpl
pop
pop
jae
iret
push
in
mov
sbb
test
pop
addb
pop
push
shll
inc
pop
loopne
push
fdiv
arpl
bound
rcrl
outsl
jecxz
sub
mov
fldenv
lret
push
mov
and
dec
loopne
in
rorl
filds
stos
sbb
lock
fisttpll
popa
fnstcw
mov
addr16
xor
les
add
ficompl
mov
mov
mov
sub
es
mov
fwait
leave
inc
lret
dec
movsl
shrl
popf
pop
sti
clc
add
into
cmp
dec
shrb
xchg
lock
mov
dec
jb
shl
insb
push
dec
cwtl
aam
inc
imul
push
add
stc
cmp
push
adc
or
pop
es
test
out
mov
das
jns
cmpsl
sbb
add
jb
xor
shrb
inc
out
das
push
pushf
pop
adc
data16
enter
cmp
pop
scas
leave
out
call
lea
cld
clc
js
sub
fisubs
jne
mov
cmc
outsl
in
sbb
push
pop
ljmp
rcll
inc
adc
fldenv
dec
in
js
dec
xlat
jnp
sub
outsl
jae
outsl
es
pop
lods
xchg
lahf
sbb
cmpsl
out
mov
and
dec
dec
xor
jae
pushf
jg
pop
jl
cmpb
mov
jo
out
or
std
loope
fwait
stos
xchg
cmp
cmp
cmp
pop
subb
sbb
aaa
lds
inc
xchg
mov
cs
out
xchg
push
lahf
lock
pop
xlat
sub
fcmovne
xor
into
imull
out
pop
jno
sub
mov
mov
popa
testb
test
sti
bound
pop
sbb
bound
rcrl
push
push
addl
and
dec
push
les
leave
adc
addl
jecxz
xchg
mov
push
xchg
mov
test
aas
sub
cli
insl
and
xor
lcall
push
ret
cmp
inc
mov
orl
xor
rolb
in
dec
movl
push
sub
mov
inc
scas
jb
jl
mov
xchg
push
mov
push
add
popf
mov
add
mov
jnp
cli
outsl
or
inc
mov
xchg
imul
sub
xor
push
addb
mov
test
and
loopne
pop
xchg
pusha
outsb
in
fwait
data16
je
pop
sbb
je
push
inc
ja
mov
push
jne
add
subb
or
mov
add
cld
test
push
enter
movsb
xor
lea
mov
jb
insb
int3
mov
icebp
and
mov
bound
sbb
mov
sbb
or
in
pop
lods
movsl
mov
mov
sbb
add
sbb
jg
clc
mov
and
xchg
lods
or
subb
test
dec
mov
clc
bound
sub
xor
xchg
pop
mov
jne
loope
sub
aas
rcrl
cli
mov
cmp
cli
test
lods
push
xchg
add
xchg
mov
dec
cmp
mov
rclb
outsb
test
out
or
sahf
insb
stos
aaa
sarl
enter
pop
mov
inc
dec
mov
pop
push
or
js
mov
dec
adc
sub
in
pop
mov
xor
lret
mov
mov
das
mov
lret
xor
in
mov
dec
out
dec
and
loop
sub
or
lahf
xorl
xchg
jns
shll
push
dec
cltd
orl
mov
mov
imul
mov
mov
add
add
std
xor
repz
jmp
repnz
push
pop
rolb
xor
aaa
or
xchg
pop
pop
ja
dec
sub
fnstsw
xchg
add
lret
clc
pop
push
push
enter
jbe
dec
mov
add
repnz
in
jecxz
cmp
pop
cmp
mov
xchg
or
sub
mov
xchg
sbbl
imulb
fisubl
mov
ret
push
pop
xchg
fisubrl
and
sub
aam
mov
cmp
pop
and
adc
sarb
cmp
in
push
je
jge
xchg
mov
sbb
pop
xchg
or
addr16
popl
mov
enter
cmpsb
mov
add
jecxz
add
pop
popa
lcallw
sub
mov
push
arpl
xchg
into
dec
or
or
inc
or
rcr
shr
fdivl
cli
das
jge
or
nop
mov
push
pusha
push
push
cmp
pop
adc
mov
test
adc
aaa
scas
fistpll
in
dec
sti
xchg
cmovae
movsl
mov
pop
jno
sub
mov
mov
sbb
mov
jb
cmp
movsb
push
and
dec
xor
sub
sub
int3
push
adc
daa
popf
jo
lret
adc
xchg
std
lret
sbb
mov
xor
loopne
xchg
and
imul
imul
cmp
mov
insl
ja
xor
ljmp
into
or
das
xchg
xor
mov
xor
mov
or
loop
sub
pushf
fsubs
xor
sbb
psadbw
add
shll
rol
push
fs
cmp
mov
cmp
daa
ja
in
xchg
fistpl
insb
sahf
fiadds
ds
fs
lret
js
lret
lods
ljmp
pop
pop
test
imul
stc
cmp
movq
mov
in
leave
les
pop
dec
adc
mov
lea
jmp
je,pt
mov
sub
cld
or
cwtl
hlt
pop
in
adc
aaa
and
std
test
popf
sub
mov
repnz
clc
cmp
out
aas
cli
mov
movsb
cli
pop
mov
inc
dec
cmpsb
mov
mov
les
cmp
rcl
mov
fidivrs
jae
dec
pusha
dec
mov
sahf
xor
aad
repz
je
cli
fs
popa
leave
pop
sub
mov
or
loopne
loop
mov
xchg
mov
addb
push
push
fdivrs
sub
mov
mov
mov
mov
xchg
hlt
mov
mov
ds
insl
adc
mov
std
and
cld
repz
jecxz
mov
inc
insl
pop
dec
dec
hlt
or
and
out
daa
call
jge
or
add
cmp
or
sahf
stos
mov
dec
push
subb
dec
test
dec
dec
inc
arpl
sub
push
rolb
sub
add
inc
xchg
aaa
mov
mov
mov
push
mov
cmp
dec
xor
mov
stos
fmull
mov
jge
decl
and
pop
mov
lcall
ret
jp
ljmp
sbb
mov
dec
lahf
mull
mov
mov
js
inc
dec
xlat
test
mov
std
sti
popa
int3
sub
mov
push
addb
in
out
jp
iret
cmpsl
fiadds
pop
dec
jb
cmp
mov
test
xchg
jge
imul
inc
or
jmp
cmp
and
dec
hlt
pop
sub
in
cmpb
mov
jle
jmp
test
les
in
dec
or
jp
mov
xor
sub
pop
inc
imul
pop
mov
sub
bound
stos
dec
push
and
jmp
mulb
pop
mov
sub
in
pop
mov
jle
inc
cs
xor
push
addl
mov
movsb
mov
add
xor
fildl
loope
mov
xor
mov
cltd
sub
xchg
loopne
add
les
sbbl
es
gs
xchg
and
add
dec
inc
dec
out
push
mov
andb
pop
cmpsl
les
aam
enter
sub
pop
mov
xor
mov
inc
out
pop
mov
pop
scas
or
push
sub
repz
adc
fst
pop
cli
pop
pushf
gs
jg
xchg
add
push
push
divb
pop
arpl
jl
mov
jne
sub
int
movsb
sbb
loopne
out
pop
roll
xchg
push
mov
js
pusha
cwtl
test
inc
bnd
lret
fmull
mov
testb
or
out
add
mov
insl
test
mov
xchg
aas
std
mov
out
mov
icebp
xchg
push
pop
mov
sbb
cld
pop
loopne
push
or
pop
lret
outsl
aad
sti
es
adc
and
hlt
mov
sub
mov
sti
movsl
pop
les
jg
push
loope
mov
inc
or
xchg
push
das
push
into
ss
mov
mov
mov
insb
sub
push
xchg
pop
cld
dec
cmp
or
fsubr
dec
add
clc
loop
out
sbb
cmc
dec
or
rol
jne
in
xor
xor
fistps
push
scas
mov
xchg
xchg
sub
mov
xor
pop
sbb
pushf
ret
dec
and
push
mov
nop
pushf
push
add
shr
test
cmp
pop
mov
pop
jle
mov
mov
push
push
add
imul
in
pop
shlb
and
shll
inc
js
jns
imul
fdivr
test
test
mov
adc
sarb
jp
sbb
cmp
sbb
adc
repz
mov
loope
mov
es
jp
dec
cmpb
mov
cmp
push
in
xor
or
ds
insl
adc
adc
icebp
lcall
cmpsl
call
loopne
pop
out
xchg
adc
inc
popa
stos
loopne
push
dec
shll
fists
push
jle
adc
jno
push
sbb
jo
leave
rcl
or
mov
shll
sbb
clc
imul
shl
push
ds
and
in
xchg
fsubrl
inc
inc
lcall
nop
aam
mov
mov
jae
sub
shrb
inc
push
sub
movsb
mov
mov
popa
stos
mov
cmp
push
in
fldcw
cmc
or
and
mov
fwait
mov
adc
mov
in
rorb
xor
adc
sbb
ds
pop
fisubl
inc
sub
mov
mov
pop
jnp
icebp
mov
inc
sub
adc
in
popf
xor
shrl
cltd
add
scas
pop
cmp
or
mov
or
shlb
add
rcll
std
das
add
push
push
mov
mov
jo
das
xchg
mov
nop
lcall
dec
inc
inc
push
loop
jge
mov
mov
and
cmp
dec
xchg
push
mov
sbb
cld
sbb
fcomps
push
loopne
in
cwtl
cmp
inc
popl
out
clc
stos
aas
mov
inc
mov
xor
dec
mov
cmc
sub
pop
mov
insb
fdivrs
cmpsl
dec
inc
out
sbb
enter
leave
sub
sbb
sub
in
jmp
jne
imul
insl
or
mov
dec
cmp
shll
xor
mov
xor
pop
dec
mov
sub
pop
scas
jmp
fidivrl
mov
sub
and
call
jb
clc
add
icebp
arpl
push
leave
das
cwtl
sbb
out
pushf
js
pushf
popf
inc
int3
rcrb
inc
int3
pop
mov
imul
mov
ljmp
jp
or
pusha
test
cmp
fdivl
mov
stc
add
jl
mov
jbe
adc
ljmp
and
xor
lods
dec
btrl
movsb
sub
push
mov
popf
sahf
jnp
hlt
rorb
pop
cmpsl
and
mov
sbb
pop
mov
or
not
dec
adc
popf
sub
cmp
jmp
and
sub
cli
push
fisttpll
mov
sbb
mov
imul
cwtl
loopne
call
in
xchg
outsl
popa
xor
stos
idiv
xlat
mov
or
lahf
mov
insb
inc
jecxz
mov
mov
insb
inc
cli
and
js
push
lds
jcxz
push
sub
adc
add
gs
sub
cmc
ret
xchg
sbb
jmp
inc
sbb
in
das
xor
iret
sub
dec
dec
popf
mov
mov
loopne
shl
adc
push
push
loope
xor
out
sub
mov
enter
mov
je
xor
mov
dec
cmpsb
lock
pop
mov
dec
adc
popf
scas
ret
add
inc
sub
lahf
and
mov
mov
ljmp
fisttpl
inc
pop
mov
and
mov
cld
adc
sbb
dec
pop
pop
cs
xor
and
adc
push
pop
pop
mov
arpl
push
mov
jae
in
rorb
leave
mov
lods
pusha
mov
test
cli
ret
mov
lea
out
mov
test
out
mov
mov
sbb
stos
pop
fs
cmp
movsb
mov
movsb
cltd
push
pop
dec
pop
adc
xor
push
xchg
inc
pop
insb
sub
push
test
cld
push
loop
repnz
xor
stos
into
mov
dec
cmp
into
movsb
stc
fistl
lock
enter
repz
mov
or
pop
fbstp
ljmp
dec
fdiv
xchg
in
cs
pushw
jl
mov
push
mov
add
in
cmpsb
fidivrl
mov
sbbl
andl
mov
imulb
rorl
pop
js
add
mov
cmp
jge
dec
xor
insl
sub
xchg
sub
cmp
test
cmp
jge
mov
std
xchg
jl
dec
push
mov
xor
and
repnz
push
add
movsb
xchg
ds
dec
ror
cmp
xor
dec
or
xor
sbb
sub
lea
add
jno
xor
or
mov
jmp
sahf
cli
lock
adc
pop
cmp
sbb
push
pop
insb
jo
sub
and
icebp
popf
pop
pop
cmp
cs
ret
fistpl
test
add
leave
add
cmp
movsl
xchg
repz
in
dec
ret
dec
jmp
loopne
shrb
fcoms
push
aaa
repnz
in
ljmp
xor
test
ja
pop
in
push
fcomps
imul
xor
push
adc
shlb
add
mov
lea
ss
mov
loopne
pop
xor
push
cmp
pop
iret
mov
xor
xchg
mov
out
filds
frstor
sub
dec
mov
jae
inc
or
push
cmp
sub
jb
lock
mov
repz
aad
xchg
jmp
xor
addl
jl,pn
nop
pop
mov
divb
stc
sarb
push
test
inc
sub
cltd
shrl
sub
mov
cmp
mov
in
test
scas
lds
and
sub
fdiv
dec
pop
dec
mov
adc
movsb
fcomp
je
jg
in
outsb
lods
inc
inc
ds
mov
sub
aas
out
sar
mov
aas
sbb
popf
push
jle
loop
dec
or
pop
out
clc
hlt
xchg
adc
push
pop
pop
push
scas
inc
xor
lret
mov
and
int
sub
cwtl
adc
adc
dec
lock
outsb
jae
xchg
cmp
jle
shrl
jg
cli
data16
cmpsl
stc
xor
adc
xor
pop
mov
sbb
rolb
push
or
dec
shlb
pop
add
xor
sub
lea
rolb
dec
or
aaa
insl
mov
in
inc
pop
repnz
or
add
sub
xchg
movsb
push
push
xchg
cli
pop
cmp
jg
aam
push
xor
call
add
xchg
sti
mov
push
or
mov
sbb
imul
jbe
sub
popl
mov
out
adc
pop
pop
cmp
sbb
mov
mov
mov
push
jp
test
jae
adcl
inc
add
mov
pop
jno
cmp
cmc
out
cmp
jae
pop
mov
pop
inc
cmc
mov
jp
and
mov
int3
aad
add
mov
jl
test
sub
pushf
repz
icebp
fwait
and
aam
in
inc
push
scas
push
mov
jo
adc
ret
cmp
rcll
inc
js
rcll
and
mov
leave
mov
call
mov
dec
dec
xor
mov
rcrb
shr
lcall
enter
pop
jns
ss
into
data16
xor
ret
aas
hlt
lods
add
or
mov
jl
leave
xor
stos
sbb
mov
jno
cmp
mov
das
mov
iretw
adc
fcompl
test
xor
rol
filds
add
adc
pop
xor
mov
jne
fsubrs
add
fcmovbe
rclb
pushl
mov
jno
fs
lahf
push
outsb
loope
cli
lcall
mov
mov
cmpsl
sbbl
or
fcompl
jecxz
push
test
orl
sahf
fwait
in
mov
outsl
sahf
les
mov
adc
cmp
xchg
fstpt
addb
xor
xor
and
data16
push
in
fdivrs
sub
xchg
mov
jle
mov
adc
push
jmp
ljmp
add
add
xor
inc
mov
jecxz
mov
repnz
idiv
mov
dec
or
ds
push
pusha
pusha
insl
mov
cltd
lods
imul
pop
dec
mov
ret
sub
roll
adc
jmp
fistpl
in
inc
pop
rorb
inc
addr16
cwtl
insl
mov
stos
jo
xchg
mov
fcmovb
ja
in
sub
les
push
mov
xchg
push
in
or
lret
aas
ret
ret
xor
mov
sarl
sbb
xchg
ds
jo
call
jbe
shrb
enter
nop
dec
rcrb
ror
inc
aas
gs
clc
notb
push
in
cs
sahf
mov
push
lods
cmpsb
cltd
mov
mov
fistl
mov
sahf
arpl
movsb
in
aad
mov
outsb
add
nop
push
stos
dec
es
mov
jp,pn
mov
shll
jo
cmp
jmp
test
leave
aad
out
sub
mov
sahf
ret
add
fidivrl
pop
pop
mov
sub
fidivl
imul
imul
cltd
popa
xchg
adcb
jb
test
daa
xor
rcll
cs
mov
ficoml
adc
sub
les
fstl
test
push
jnp
das
jmp
lds
push
mov
dec
mov
pop
cmpb
test
mov
cwtl
rcl
push
cwtl
rcr
pop
add
in
repnz
in
xchg
rol
xchg
movl
pop
jl
out
pop
adc
pop
mov
jl
hlt
xlat
sbb
sar
pop
cltd
xchg
xchg
je
pop
lea
hlt
aam
jle
push
or
cwtl
mov
call
hlt
shll
jle
jle
ds
cmp
or
ss
lock
mov
mov
rorb
mov
rorb
push
stc
pop
test
mov
cwtl
ret
push
popl
pop
cmp
movntps
test
push
push
cmp
push
or
nop
lahf
data16
shlb
mov
add
or
jnp
xchg
cmp
les
int3
lods
jbe
pop
inc
repz
jle
dec
mov
imul
out
iret
or
inc
push
lret
cwtl
decb
test
popf
shl
xchg
sbb
cmp
mov
jmp
stos
mov
push
js
inc
push
and
fldl
mov
test
xor
mov
shrb
add
lods
mov
pushf
addl
pop
or
cmp
daa
adc
xor
jmp
icebp
xchg
pop
call
movsl
mov
sarb
sbb
je
loope
push
rorb
aad
add
or
mov
adc
dec
mov
in
in
push
inc
es
sbb
xchg
adc
adc
fsubrl
addr16
or
sub
test
jbe
fistpl
pusha
xor
inc
add
dec
into
out
jmp
loop
add
shll
mov
int3
cmpsl
and
adc
push
clc
or
cld
jg
fsts
mov
add
test
cld
dec
sahf
leave
das
sbb
inc
adc
popa
inc
orb
loop
jb
lods
adc
loopne
out
es
sarb
push
mov
xor
cmp
andb
pop
insb
jg
push
push
xor
ret
test
mov
aas
sbb
ss
fldt
jecxz
mov
pusha
jmp
sub
mov
loope
add
and
imul
aam
cmp
clc
push
in
lods
push
dec
jo
pop
aad
xchg
jb
out
int3
mov
lods
out
adc
aas
dec
in
mov
int3
je
leave
fbld
fistpll
fwait
inc
jecxz
loope
repnz
mov
scas
ds
push
cbtw
dec
mov
mov
out
out
jge
sti
outsb
sbbb
pop
mov
jp
inc
jno
dec
jp
adcl
jge
repnz
call
push
mov
ds
hlt
push
push
hlt
mov
jno
push
add
add
and
out
sarl
lea
xchg
lahf
pop
sub
and
mov
inc
and
call
in
in
jo
sarb
imul
pop
lret
decb
in
xor
mov
or
fs
scas
xor
xor
add
cs
push
jae
fsubrl
xchg
jae
mov
rcll
sbb
and
les
pop
cltd
test
in
jae
mov
sub
add
add
adc
mov
ja
xchg
and
and
cwtl
cmp
cltd
mov
pushf
rorb
mov
das
and
mov
mov
pop
sub
repnz
mul
mov
inc
push
ds
mov
jle
pusha
pop
es
inc
clc
das
lcall
xor
push
hlt
sbbl
rcll
dec
out
cmpsb
sahf
sub
gs
and
in
cmp
cmp
les
int3
sbb
lods
cltd
cmp
adc
aas
scas
int3
xor
mov
pop
mov
repz
sar
es
inc
pop
mov
cmp
outsb
mov
fcomp
pop
ret
xor
push
adc
mov
pop
adc
jbe
cmp
add
lods
cmpl
sub
and
mov
mov
rorb
pusha
sbb
cmc
and
sbb
data16
adc
dec
pusha
cmp
cltd
xchg
sbb
push
sub
inc
pop
jbe
add
lret
mov
sahf
sub
adc
cltd
scas
cmp
jo
jno
jb
cmp
inc
fdivs
divb
mov
je
enter
add
xchg
push
cmp
ss
pusha
loop
arpl
fwait
pusha
jno
fs
mov
sub
mov
push
js
cli
and
mov
mov
jp
cltd
adc
pusha
mov
xchg
sub
fistpll
mov
hlt
cwtl
push
hlt
mov
jbe
push
inc
jno
dec
mov
shr
cs
pop
and
pop
jbe
shr
pop
fsubrs
in
mov
mov
xlat
xchg
subb
mov
rol
and
jl
aam
cmpsl
fs
mov
jne
mov
xor
mov
dec
lret
in
cld
nop/reserved
dec
jmp
ficompl
xchg
xchg
pop
jns
mov
cli
mov
aam
pop
push
cwtl
movsl
rcrb
mov
xchg
pop
jle
cld
add
jp
add
sub
mov
aam
dec
call
mov
fs
in
xchg
aas
push
cmp
cs
mov
jmp
mov
shr
dec
lret
jp
movsb
adc
sub
es
call
lods
sub
mov
push
mov
cmp
int3
movsl
cltd
mov
ljmp
nop
push
test
or
repz
and
jg
adc
fmuls
mov
pushf
push
pop
cmp
mov
jp
pop
test
mov
lods
lret
jp
add
je,pt
push
pusha
gs
in
insb
bound
in
je
cli
fnsave
shlb
ret
xor
adc
cli
jb
push
push
sub
or
push
mov
and
imul
dec
loopne
sub
push
ret
or
and
imul
dec
aas
idiv
inc
pop
out
ss
ret
or
cltd
repnz
sub
inc
shll
pcmpgtb
pop
mov
or
sub
fsubl
pop
fsubs
call
mov
ljmp
push
xchg
jae
addr16
imul
js
es
sarl
inc
sub
fdivrs
mov
xchg
jo
mov
push
cwtl
xor
cmp
orb
xorl
popf
rorb
and
mov
aam
dec
mov
cmpsl
mov
push
mov
pop
nop
add
psubq
xor
push
jbe
adc
ds
ret
xor
aam
andl
bound
pop
mov
ljmp
mov
arpl
popf
pop
arpl
pushf
insb
jmp
pop
jae
fiadds
cmp
mov
pusha
arpl
fwait
aam
pop
pop
dec
and
icebp
in
mov
push
sub
les
ljmp
rcr
sbb
mov
mov
cwtl
aas
cmpsb
adc
aas
mov
lret
jp
into
xor
lcall
mov
ljmp
push
popa
stos
mov
pop
dec
pop
push
insb
mov
push
sbb
jp
pushf
clc
add
jb
mov
shll
pop
sbb
in
pop
pusha
add
mov
dec
mov
aas
out
cmp
ds
cmp
adc
or
cwtl
movsl
arpl
les
lock
add
mov
pop
dec
pop
cmp
xor
es
jp
pushf
enter
pop
shlb
sub
adc
cs
or
xlat
pop
jo
push
pop
mov
sub
aas
jle
sbb
movsb
cmp
sbb
mov
nop
xor
lds
push
daa
adc
push
outsb
xchg
in
sub
xor
cli
in
ret
xor
xchg
pop
xorb
pop
mov
hlt
and
call
pop
mov
cmpsl
mov
idiv
dec
hlt
sbbl
scas
int3
push
push
mov
adc
push
mov
adc
add
cmpsl
mov
jg
fsubrs
ja
mov
pusha
adc
ds
xor
les
and
pushf
adc
movsb
adc
jo
adc
or
sub
outsl
jg
adc
adcl
sub
or
ljmp
lock
sahf
mov
pop
arpl
pushf
mov
mov
mov
in
or
push
adc
mov
cmp
in
sub
xor
sub
pop
out
cmp
sub
loopne
cwtl
push
cmp
pushf
insb
jmp
mov
pop
scas
fdivr
cli
sahf
xchg
lret
pop
outsb
es
jp
cltd
mov
sahf
pushf
mov
cwtl
shrl
je
inc
or
hlt
test
hlt
rorb
xchg
pusha
push
in
lods
push
call
or
pop
lret
dec
mov
cmp
out
sahf
and
push
js
pushw
inc
mov
lock
pop
jle
cli
pop
xchg
inc
pop
push
cltd
mov
ficomps
cwtl
rcrl
push
jo
xchg
push
repnz
call
punpckhdq
ds
push
jae
addr16
imul
clc
push
es
push
movsb
inc
xor
fdivrs
mov
cltd
lock
scas
jl
cmp
lcall
mov
in
mov
cmp
adc
adc
mov
push
mov
pop
push
loopne
push
ljmp
adc
ds
xor
in
orl
test
cmp
pop
mov
ljmp
mov
lods
lods
add
fwait
jns
mov
test
jmp
sub
adc
imul
fsubrs
into
bound
add
inc
sub
inc
fcoms
or
mov
cmp
ljmp
pop
inc
push
ret
mov
mov
out
xor
insb
cmp
ret
mov
jns
imul
xor
hlt
imul
pop
xor
and
out
dec
and
cmp
test
cmp
jp
cmp
ficompl
pushf
ljmp
daa
dec
mov
pusha
int
sbb
in
adc
sub
clc
in
pop
xorl
push
in
sub
cld
mov
fucomp
rolb
pop
orb
mov
mov
pop
mov
std
jbe
xor
loope
or
in
cltd
pop
popf
cmpsb
out
lcall
out
inc
clc
mov
scas
test
fstpl
sub
add
mov
ret
loope
into
dec
mov
sarl
outsl
mov
sbb
out
sbb
lcall
test
shrb
cltd
mov
jmp
int3
cli
sub
fimull
into
sar
or
mov
iret
mov
data16
jno
data16
jp
cltd
adc
fdivrp
femms
sbb
cltd
lods
imul
or
jle
cmp
fnstsw
or
rorb
or
cli
data16
data16
out
adc
mov
int
rcr
gs
xchg
mov
jg
call
loope
insb
xchg
cwtl
jge
push
pop
daa
jl
es
mov
data16
inc
or
add
adc
adc
cmp
iret
cs
loop
cs
jle
or
mov
int3
mov
dec
push
mov
mov
xor
pusha
mov
fsts
or
mov
mov
pop
dec
xor
dec
sarl
aas
or
push
sub
shr
pop
and
inc
inc
jo
sahf
dec
and
push
xchg
cwtl
mov
ja
and
mov
cltd
push
dec
add
stos
shll
sub
int3
xchg
scas
test
push
jbe
push
in
mov
in
cwtl
xchg
ja
mov
mov
sub
rolb
mov
push
enterw
bound
in
adc
inc
adc
add
out
and
pop
sbb
ret
insb
jmp
mov
xchg
in
and
into
push
mov
lods
push
in
cwtl
aas
xchg
adc
aas
out
ds
ret
xor
inc
and
hlt
test
aam
aas
jmp
inc
pop
jne
cs
bound
xchg
adc
jmp
insb
shll
stos
mov
dec
or
jmpw
jmp
dec
or
xor
cld
repz
add
push
sbb
jno
data16
cltd
adc
mov
int
sarl
pop
xchg
mov
jg
call
loope
insb
xchg
cwtl
jge
xchg
fmull
mov
or
add
nop
cmpsl
std
jle
mov
pop
fs
adc
and
cmp
fnstsw
or
sbb
mov
mov
mov
inc
jp
cltd
adc
mov
int
rcll
pop
xchg
mov
xchg
ret
inc
call
in
fwait
and
das
xor
cmpb
out
xchg
data16
adc
pushf
jle
nop
lods
je
jecxz
sar
push
jmp
shrl
test
ret
jns
pop
out
es
ret
cld
stos
popa
adc
es
mov
mov
rorb
in
jle
mov
mov
mov
daa
push
sbb
mov
push
jo
adc
sub
or
data16
insb
out
push
bound
jecxz
sar
push
out
dec
ret
adcl
mov
sar
push
xchg
jae
xchg
sbb
sahf
sbb
sub
mov
je
pop
cs
lds
or
movsb
in
pop
pop
int
repnz
lock
mov
es
cmpsb
loop
arpl
pushf
mov
repz
jecxz
sar
push
mov
ret
adcl
mov
cs
jle
out
xor
roll
sub
mov
mov
rcrl
mov
shl
mov
dec
xlat
test
mov
not
les
sub
sub
and
fdivs
add
fmull
jo,pt
adc
mov
and
in
pop
subl
mov
cs
jle
out
xor
stos
mov
jl
pop
jae
mov
mov
pop
pusha
jb
cmp
insl
push
dec
out
push
mov
fmull
ljmp
dec
aaa
into
ja
or
mov
dec
addb
and
in
pop
hlt
sub
repnz
lock
pusha
sbb
frstor
adc
in
bound
cltd
stos
out
push
ja
mov
nop
rcll
cs
pop
inc
add
cmpsl
mov
sbb
ljmp
ljmp
sti
loop
hlt
test
push
xchg
push
inc
jbe
xlat
jmp
movsl
aas
add
mov
jle
xor
shrl
out
sub
pop
xorb
dec
or
stos
loopne
in
fsubrl
lea
add
sbb
ds
hlt
add
rcll
test
jmp
inc
fmull
bnd
loope
cmpsl
int3
cli
int3
mov
and
mov
hlt
mov
dec
movsb
mov
push
rclb
aas
fs
jno
jno
addr16
loope
aam
push
das
sub
rol
push
ljmp
cmp
cmp
xor
in
sub
and
sahf
cmp
pop
pop
jg
jl
cld
out
addr16
fwait
sub
xor
push
inc
push
outsb
pop
lret
cmp
pop
cwtl
adc
jl
sub
lahf
lea
sbb
xchg
scas
insb
movsb
mov
add
es
cli
or
movsl
sarl
push
fsubs
shlb
mov
sbb
add
add
xor
pop
insb
sub
jl
inc
push
outsb
pop
xchg
fdivr
cmp
pop
js
mov
push
adc
sub
jno
pop
xchg
add
dec
or
xor
cld
repz
ret
mov
ljmp
mov
xor
fs
jle
fnstenv
or
add
add
push
push
xor
sub
push
push
inc
push
outsb
pop
mov
es
jp
cltd
mov
jle
dec
add
add
testb
and
xchg
mov
xadd
cmpsl
int3
cli
inc
mov
push
adc
mov
hlt
sub
hlt
push
dec
rorb
aas
hlt
test
pop
sub
cmovg
cmp
aam
ret
js
popa
adc
cmpsb
push
je
dec
mov
je
les
pop
in
push
jo
jbe
or
push
ss
cmpsl
test
mov
movsl
call
inc
dec
jbe
xorb
pushf
in
mov
mov
dec
pop
pop
in
in
mov
cmp
jne
orl
les
repnz
jle
cld
pop
mov
clc
cwtl
jge
pop
jo
adc
in
push
jo
push
popa
or
push
xor
in
cmpsl
test
mov
jle
call
cmp
repnz
daa
add
cld
pop
cs
in
shlb
add
fsubrp
mull
out
and
push
in
loopne
jae
mov
enter
ret
or
cwtl
jge
out
addb
dec
ds
add
shlb
or
add
lock
mov
mov
popa
adc
or
cmp
fnstsw
or
adc
mov
xor
rorl
xor
xor
fs
cwtl
xchg
ret
cmc
movsl
cmpsb
dec
push
orb
cmp
xor
popf
inc
add
stc
xchg
test
xor
out
jb
jg
sub
cwtl
fdivr
out
mov
xchg
adc
sbbb
lcall
inc
inc
lahf
gs
les
and
dec
dec
js,pt
sbb
lds
adcl
sub
jo
sub
bound
decl
cli
dec
ret
adcl
mov
cs
jle
out
xor
popa
stos
mov
sub
or
sub
adc
pusha
add
mov
mull
dec
xlat
test
mov
out
dec
pop
lods
stos
jno
or
add
shll
add
mov
inc
xor
ljmp
ljmp
sti
loop
test
push
add
inc
jbe
xlat
stc
pop
cmp
cwtl
movsl
aas
add
fdiv
mov
inc
ret
jae
stos
mov
out
sub
pop
xorb
mov
ret
dec
mov
in
dec
push
add
and
jle
mov
sbb
ljmp
ljmp
sti
loop
mov
fcoml
inc
jbe
xlat
lcall
add
aas
sub
pop
aam
in
repnz
jmp
pop
in
push
jo
inc
popa
or
push
or
in
cmpsl
test
mov
movsl
fistps
sub
dec
pushf
pushf
add
jbe
mov
mov
fs
andb
loopne
gs
xchg
mov
mov
les
jo
or
add
rcrl
cwtl
jge
xchg
cwtl
rcrl
addb
mov
dec
sysexit
ja,pn
mov
mov
jle
sub
jno
pop
push
cltd
adc
sahf
pushf
mov
push
arpl
cs
lds
or
and
std
pop
pop
int
repnz
or
mov
es
dec
pop
xor
mov
xor
stos
mov
xor
pop
xor
jl
add
stc
cs
xor
fcompl
add
push
test
insb
cmp
in
sub
mov
push
dec
jecxz
dec
addb
outsl
mov
pop
dec
xor
dec
dec
movsb
cmpsl
sbb
cmp
sbbl
aam
rcrb
clc
dec
adc
cs
pop
dec
sysenter
jbe
cmc
movsl
cmpsb
dec
push
orb
cmp
mov
cs
ficoml
loopne
jle
dec
adc
mov
jmp
call
cmp
sbb
add
and
sbb
hlt
in
pop
pop
int
hlt
sbb
dec
add
dec
idivb
loope
int3
cld
repz
xor
push
data16
add
mov
les
xor
fnstenv
or
add
or
sub
xor
sub
or
push
outsb
pop
out
fdivr
cli
into
and
fs
les
lock
ror
pop
push
movl
sbb
jg
inc
adc
sub
and
jle
inc
inc
jns
ret
add
push
popa
pop
fwait
pop
fs
and
cmp
lret
imul
js
ss
rcrb
movsl
inc
push
and
jo
cmpsl
or
inc
addb
test
sbb
pushf
aas
push
ljmp
sbb
fsubl
mov
jecxz
mov
mov
mov
adc
fisttpll
cmp
fxch
push
add
mov
push
mov
fdivrp
mov
push
adc
or
pop
pop
jg
divb
sub
addr16
dec
loope
mov
jae
push
shrb
test
jo
push
inc
loop
arpl
pushf
nop
cld
repz
lds
cltd
lods
imul
jnp
mov
fsubs
cltd
adc
lret
das
shll
mov
dec
mov
cmp
pop
adc
fsubrl
sub
call
sub
das
imul
add
dec
in
mov
pushf
ret
xor
movsb
and
and
pop
dec
cld
test
aam
aas
adc
lock
out
imul
loopne
jp
cmc
mov
inc
shr
into
lret
clc
call
daa
inc
sub
sahf
aad
and
fistl
sub
cs
jle
adc
sub
pop
adcl
sub
mov
outsb
sub
pusha
daa
inc
mov
and
fwait
jno
push
scas
mov
cmpsb
mov
std
in
into
out
sub
dec
pslld
dec
in
xchg
mov
sub
mov
adc
cmp
std
push
outsb
pop
xor
jl
push
imul
xor
fcompl
add
push
hlt
sbb
cmp
je
sub
add
push
dec
jecxz
dec
addb
dec
lods
mov
cmpsb
mov
std
into
out
sub
dec
pminsw
sub
pop
imul
fnstenv
or
mov
push
push
cmc
inc
mov
add
jmp
mov
pop
out
sarb
ljmp
lock
xor
push
ret
test
sub
lea
jno
push
dec
or
ret
adcl
mov
cs
jno
loope
ds
xor
mov
xor
cmpsl
mov
mov
imul
aas
and
inc
sbb
xchg
stos
in
movsb
mov
add
es
loop
mov
movsl
sarl
push
and
test
stos
mov
call
stos
mov
out
pop
xorb
dec
sahf
jecxz
loopne
in
jo
push
lea
add
mov
hlt
mov
jne
inc
shrl
jmp
inc
fmull
bnd
loope
cmpsl
int3
cli
pusha
mov
mov
cmp
sahf
cmp
jo
cli
mov
je
pop
out
pushfw
lds
or
test
std
pop
pop
int
hlt
adc
dec
add
dec
cmpsb
jle
fwait
sbbb
mov
in
mov
and
inc
jo
sahf
out
test
imul
sti
test
shll
xor
es
sbb
in
sub
das
mov
addr16
aad
fwait
mov
nop
enter
enter
pushf
cmp
cwtl
bound
aam
sahf
movsl
sbb
lcall
fmull
pop
adc
cmc
xor
mov
data16
dec
cmpsl
inc
imul
popa
mov
lret
mov
ds
subl
pop
push
mov
pop
xchg
pushf
cmp
fsubr
outsl
sub
cmp
push
loopne
pushw
call
pushf
pop
cld
pop
jp
cli
pop
xchg
pop
pop
sub
mov
cltd
mov
jbe
mov
mov
or
push
jo
ret
movb
sub
jbe
mov
les
and
pop
push
sarl
dec
dec
jmp
adc
add
sahf
rorl
mov
enter
sbb
mov
push
jg
bound
andl
repz
mov
or
xchg
dec
ljmp
mov
out
push
jne
insl
pop
dec
xchg
int
jo
addr16
dec
loope
pop
or
out
nop
push
jmp
int3
mov
call
or
cmpsl
inc
outsb
mov
jb
sbb
ja
test
push
pushf
inc
dec
or
es
xor
fdivs
jmp
push
xor
rorb
shlb
cld
mov
es
lret
mov
test
into
in
and
pop
bound
les
decl
sbb
sbb
gs
int3
lahf
add
mov
and
icebp
aas
mov
in
mov
incb
data16
cwtl
repz
fcmovb
add
nop
mov
sub
or
sbb
sub
push
and
fcompl
dec
push
stc
stc
adc
cmp
dec
test
and
jbe
in
in
mov
inc
repnz
ret
add
xor
pop
int3
aam
ret
cmp
add
test
or
rol
jmp
adc
cmc
cmpb
jecxz
cmp
pop
aam
xchg
sub
inc
outsl
cmp
outsl
js
lds
dec
or
arpl
arpl
jl
in
add
cs
xchg
popa
sub
into
xchg
cld
cwtl
icebp
lds
aad
jbe
xorl
lods
mov
xor
dec
cwtl
xchg
sbb
mov
lea
push
in
int
subb
cmp
sbb
ret
xchg
mov
jo
fisubs
pop
scas
xor
lret
xor
cmpsl
pop
dec
lds
cmp
fs
pop
push
pop
pop
sbb
mov
das
ret
mov
jl
dec
cmc
out
insb
pop
pop
mov
and
adc
stos
addl
ja
jae
js
ficoml
push
sub
lods
pop
inc
mov
jle
test
leave
push
lds
mov
out
addps
call
cs
fiaddl
sbb
lds
aam
sti
ds
mov
push
out
and
fstpl
frstor
cmpsl
pop
dec
lds
cmp
xor
sbb
aad
pop
sbb
mov
das
mov
aad
dec
mov
ret
xor
je
call
mov
dec
lret
ljmp
nop
push
sub
mov
push
jae
rorb
mov
and
and
test
cmp
bound
cmpb
or
cwtl
lds
mov
sar
pop
pop
fdivr
push
sahf
je
fldcw
mov
call
cltd
push
dec
xchg
shl
mov
js
pop
out
or
dec
add
mov
bound
or
ljmpw
popa
clc
movsb
pop
inc
and
ret
cmpsb
inc
jbe
xor
xor
int3
es
pop
ret
jge
sbb
sbb
mov
jbe
add
rcrl
cs
out
add
mov
jmp
adc
push
enter
test
cld
push
mov
nop
shll
or
test
jmp
sbb
add
adc
dec
mov
jp
xor
add
call
sbb
mov
xchg
mov
push
nop
std
mov
add
aaa
imul
mov
dec
call
adc
call
adc
lret
xor
test
subb
push
idivl
rcrl
insl
sub
mov
push
sub
dec
push
mov
loop
cmp
rcll
mov
addr16
fiadds
aaa
pusha
sub
adcl
dec
push
inc
adc
sbb
add
outsb
pop
sbb
inc
cmp
lods
and
ljmp
fidivrs
imul
outsb
dec
ss
fmuls
fidivs
adc
cwtl
xchg
mov
xchg
outsb
lret
fcoml
loope
xchg
jl
jecxz
jecxz
sbb
les
pop
inc
lea
mov
in
scas
sti
push
call
clc
xchg
push
shll
shlb
leave
xor
sub
pop
sub
sbb
dec
in
mov
hlt
inc
mov
sbb
jecxz
clc
and
dec
rcrb
insl
jmp
dec
loop
inc
xor
mov
lcall
in
movsl
cwtl
hlt
loopne
enter
push
and
sbb
jl
adc
fimuls
std
ret
sti
out
je
fdiv
fsubrs
adc
dec
xor
push
fmuls
fucomi
mov
repnz
sub
lcall
dec
cwtl
add
loop
push
push
out
repnz
jno
test
jl
test
push
or
adc
add
bound
ljmp
sbb
cwtl
or
idivl
test
push
xchg
mov
mov
pop
sbb
pusha
lcall
fs
pop
sar
xor
xor
sub
add
cmpsb
mov
fsubrs
push
mov
mov
push
mov
fldl
pop
iret
xchg
cs
cmp
scas
fsubrl
aaa
cmpsl
push
dec
pop
cmovg
and
out
mov
mov
ja
pop
pop
sahf
fsts
cs
mull
das
int3
cwtl
jb
mov
and
fs
xor
add
mov
xchg
sti
inc
sub
pusha
div
dec
pop
inc
loopne
jecxz
dec
inc
cmpsl
add
rorb
mov
outsl
inc
mov
imul
sub
mov
sub
pusha
mov
mov
movmskps
test
inc
pop
jo
inc
rorb
dec
arpl
inc
dec
push
adc
test
sar
mov
ds
ret
xor
sub
pushf
pop
roll
pop
and
cmpsl
cbtw
cmp
int3
es
cmp
push
das
movb
jae
mov
push
xchg
test
out
and
push
stos
clc
sub
cmp
pusha
insl
pop
fs
inc
sbb
fisubs
popa
outsl
movsb
add
cwtl
xor
push
or
mov
add
mov
out
xlat
push
mov
stos
aam
icebp
data16
cmc
test
mov
or
and
les
sbb
sahf
call
inc
pop
push
mov
push
jno
fmull
adc
push
insl
sti
out
in
and
dec
jne
icebp
mov
mov
mov
ja
das
jb
data16
in
test
in
mov
and
stos
pop
push
ret
subb
movsb
pop
mov
lret
jp
rol
cmpsl
mov
mov
jno
pop
lock
push
mov
mov
fidivrs
dec
adc
pusha
push
mov
js
mov
and
insl
push
pop
xorb
insb
clc
push
cld
push
cmp
cmp
mov
fnsave
shrb
fistpl
xchg
xchg
and
add
dec
or
lock
sbb
jo
jle
dec
xchg
data16
cltd
mov
ss
or
and
movsb
inc
out
pusha
dec
insl
or
mov
in
adc
inc
popf
movsl
js
jl
lock
sub
xchg
outsb
out
lock
pop
nop
cmp
lret
or
das
les
les
xchg
lods
dec
add
push
pop
stc
pop
or
movsl
pop
mov
adcb
repnz
add
inc
sub
push
dec
xchg
loopne
lahf
add
mov
mov
ja
scas
mov
mov
lods
mov
jl
and
dec
lods
mov
js
sub
or
pushl
rcll
and
and
out
sbb
sti
pop
jl
mov
push
cmp
inc
outsl
mov
mov
jl
mov
pop
add
mov
or
out
add
cltd
nop
or
insb
mov
pop
hlt
icebp
testl
out
test
pop
mov
push
jo
adc
cltd
or
sbb
pushf
add
je
or
mov
fcomps
sub
mov
mov
mov
mov
inc
imul
lods
adc
adc
ret
cld
cmc
in
ss
repnz
add
inc
inc
cltd
jne
outsl
not
jae
insb
frstor
loop
push
mov
scas
insb
inc
jo
popf
divl
inc
push
ret
mov
jle
lods
add
push
xchg
push
pop
je
test
cli
dec
mov
dec
dec
repnz
dec
mov
lret
xchg
mov
rol
cwtl
mov
jns
aaa
mov
test
into
in
inc
xchg
pop
test
add
bound
ljmp
lods
je
pop
jns
xchg
jno
addr16
jecxz
mov
inc
push
cwtl
cmp
sbb
xor
sar
cwtl
cmp
ret
dec
mov
mov
lahf
fidivrl
adc
cmp
int3
aaa
dec
hlt
popf
jecxz
cmpsw
xor
cmp
ds
and
loop
push
pusha
in
aas
outsb
lock
in
jno
pop
imul
cwtl
cli
xchg
xor
fdivrs
pushf
stos
xchg
sub
cmpsb
adc
inc
push
pop
insb
jmp
sbbb
sbb
cs
xchg
mov
sbb
dec
fwait
ret
mov
inc
push
push
fs
ret
sbbb
sbb
cmpsb
in
loopne
jae
cmp
xor
faddl
or
dec
xor
in
cmpsb
cmp
fcoml
and
cmp
pop
xor
mov
xchg
pusha
mov
cltd
push
ja
mov
push
rclb
jl
cld
pop
popa
les
jg
hlt
pop
inc
sbb
movsl
gs
pushf
ret
push
lds
insl
pop
mov
ja
popa
in
cmp
push
mov
jbe
data16
movsb
cmp
mov
add
lret
jmp
popa
pop
cmp
add
outsb
mov
sysexit
in
aas
push
in
and
xor
cmp
outsl
jno
mov
fsubrl
aaa
cmpsl
push
jb
adc
push
les
sub
fwait
aad
add
push
jb
jge
pop
sbb
les
dec
cmp
fadd
std
cmp
fsubrl
dec
mov
inc
aam
mov
or
add
loopne
les
ljmp
cmpsl
add
sbb
bnd
xchg
mov
stos
push
pop
in
mov
and
lcall
xor
fmuls
mov
push
xor
jae
aam
push
xchg
mov
add
cmpsb
and
jecxz
xor
pop
sbbb
out
das
add
je
aad
ss
sub
clc
fsubrl
cmp
sbb
push
adcl
xor
xor
sub
mov
cwtl
jae
sub
dec
sub
test
bound
lods
sub
jmp
mov
pop
pushl
mov
leave
sbb
pop
mov
inc
jno
or
shll
xor
int3
sar
enter
int3
ja
jmp
sub
push
mov
xchg
scas
in
and
insl
push
pop
adcb
push
fxch
enter
xchg
dec
aad
jb
ja
add
mov
in
sub
daa
into
test
xor
jb
lds
ljmp
popa
popa
outsl
movsb
add
cwtl
mov
pusha
lret
les
or
cmp
movl
lret
dec
mov
ss
into
mov
fdivr
mov
popa
adc
lret
loop
cs
fnstsw
or
inc
or
mov
jo
push
mov
data16
pop
pop
mov
fnstenv
or
add
add
test
les
or
dec
pminsw
popf
pop
arpl
pushf
sub
repz
sub
pop
nop
pop
fistps
cltd
mull
icebp
xchg
leave
sarb
in
in
push
add
and
ds
hlt
xor
rol
cmpsb
or
inc
cwtl
sbb
enter
in
add
pop
or
push
into
pop
or
and
inc
mov
mov
scas
ljmp
mov
fidivrs
add
iret
lret
adc
call
enter
jecxz
jmp
mov
or
push
or
in
out
xchg
je
dec
mov
mov
mov
into
int
arpl
int3
mov
popa
rolb
jb
cmp
push
sbb
pusha
and
jmp
xchg
les
adcb
dec
add
mov
out
jmp
lahf
les
inc
rcll
jg
arpl
mov
sub
mov
inc
sarl
les
nop
das
push
ficoml
xor
fcoml
stc
or
daa
push
pop
xchg
aad
mov
sti
adc
fistpl
jp
inc
adc
xchg
lock
inc
lods
inc
cwtl
cs
dec
push
ds
lods
and
dec
adc
je
loopne
cmpsb
or
jno
nop
imul
mov
popw
data16
cwtl
mov
sbbl
inc
fcompl
xchg
in
les
cmp
cmp
in
sahf
aam
cmp
sub
jecxz
xor
getsec
js
dec
pop
sbb
adc
sbbb
test
mov
addr16
mov
jo
add
into
je
test
cld
dec
jbe
jp
je
xchg
pusha
inc
sti
popa
adc
jne
cmp
cmp
aam
mov
fldl
xor
fsubs
pop
jl
push
mov
push
adc
iret
add
jecxz
and
clc
fsubrs
rolb
mov
cmp
inc
sahf
insl
pop
cmc
or
jp
push
pop
mov
and
cmp
stos
sub
cmpsl
mov
mov
gs
pop
pop
and
xchg
lcall
xor
popa
shrl
dec
mov
pushf
test
mov
lods
cwtl
shll
and
cmpsl
jmp
push
mov
push
sti
sbbb
stos
dec
enter
xlat
sti
mov
sbb
icebp
dec
xchg
mov
enter
xchg
xor
push
testb
adcb
mov
jbe
push
mov
test
fcoms
push
mov
and
pop
inc
clc
mov
cld
lock
xor
cmp
lds
aaa
mov
cmp
mov
push
lock
in
jb
call
sub
or
mov
push
cld
pop
cmp
jl
lods
push
mov
xor
dec
in
pushf
jmp
cmp
loopne
or
mov
sahf
test
push
lods
pop
ret
data16
in
lods
xor
add
int3
jb
lock
or
mov
adc
aas
rcrl
das
es
mov
xchg
add
rorb
std
fisttpl
in
xlat
sti
je
inc
out
sti
in
in
cli
or
push
aad
mov
mov
leave
addr16
cmp
scas
test
lret
fadds
ds
ret
pop
into
or
lds
sub
sarl
hlt
add
jnp
fucom
sub
hlt
mov
lock
mov
movsb
cld
jecxz
pusha
mov
sbb
pop
sarb
adc
movsl
add
decl
mov
lret
clc
or
lret
andl
dec
movsl
movb
dec
add
pop
test
mov
jl
rol
int3
jbe
fnstsw
pop
popl
mov
adc
fimull
push
pop
loopne
xchg
imul
dec
pop
xor
and
mov
mov
mov
sbb
cmp
shlb
hlt
ss
sbbl
call
fadds
pop
movsb
or
pop
ss
xor
call
dec
in
pop
inc
cmpsb
jnp
bound
mov
mov
dec
cmp
xor
ret
ja
xorb
shlb
pop
imul
and
sbb
rol
add
ljmp
test
inc
in
xchg
sbbb
push
rcrl
std
cmpsb
sbb
cmp
daa
mov
mov
repnz
adc
dec
push
pop
mov
cwtl
call
pushf
cld
cld
dec
inc
jne
aas
xchg
aas
adc
rcrl
jl
and
fs
add
test
jl
dec
repz
dec
divl
aam
lods
xor
cmp
sbb
fisttpl
xchg
dec
mov
js
mov
push
js
sahf
sub
cmp
andl
push
sbb
mov
js
dec
xchg
jo
inc
call
je
js
jb
push
in
je
cmc
orb
xor
lcall
nop
xchg
clc
push
testl
mov
aam
xchg
outsb
int3
movsb
addr16
jo
pop
push
pop
dec
lock
inc
and
mov
iret
cmp
hlt
test
adcb
lcall
scas
les
cmc
ret
mov
push
sub
fwait
sub
pop
xchg
inc
lea
inc
cmp
jmp
test
das
ljmp
jg
xchg
in
shlb
jnp
mov
pop
xor
cmp
or
push
int3
push
js
xor
add
hlt
push
and
fwait
mov
and
movsb
fwait
mov
push
mov
lahf
pop
mov
mov
test
dec
adc
mov
aas
lahf
and
in
shll
jg
lret
fsub
test
fwait
inc
out
fdiv
or
mov
and
in
in
mov
lret
inc
mov
adc
cmp
inc
test
jle
out
or
pop
and
mov
adc
dec
scas
inc
in
jp
sub
cmp
sbbb
subl
pop
and
mov
mov
xchg
pop
jmp
mov
mov
std
jmp
inc
rcl
cmp
pop
mov
push
or
lods
add
lcall
mov
pop
push
loopne,pt
repnz
divb
cmp
dec
dec
ljmp
fsubl
sbb
sub
jmp
mov
xor
fistpl
push
add
mov
mov
es
pushf
sbb
inc
insb
icebp
sti
bnd
push
cmp
mov
jae
ficoml
jae
mov
xchg
outsb
mov
jo
stos
loop
jmp
outsl
pushf
xlat
fstpt
push
mov
in
add
dec
add
out
jns
push
push
ljmp
push
jb
hlt
pushf
ret
cmpsl
dec
iret
icebp
in
sub
outsl
mov
cmp
rclb
lret
push
stc
jb
push
pop
pop
lahf
pop
ror
les
lods
inc
pop
pop
lea
mov
ficompl
mov
pushf
insl
jg
sub
xchg
dec
mov
mov
sbb
out
stos
mov
push
imul
inc
sub
jnp
inc
stc
add
mov
dec
daa
pop
pop
scas
int3
push
and
fwait
stos
inc
sbb
cmp
jl
movsl
mov
sbb
or
into
jge
leave
cs
pop
mov
test
rclb
add
daa
ja
xor
push
roll
dec
add
lods
clc
add
mov
inc
lret
mov
adc
mov
mov
popf
xor
and
stos
movsb
push
out
cmp
iret
rcrb
fistpl
or
test
adc
dec
add
jb
mov
mov
testl
xor
xor
xor
push
hlt
ds
scas
aad
dec
push
sahf
mov
cld
pop
in
push
sbbl
sub
stc
adc
test
dec
cmc
fisttpl
or
adcb
add
push
or
sub
sub
in
cs
subb
sbb
fistpll
cmp
dec
hlt
push
out
cmp
iret
rcrb
hlt
mov
jne
jg
ret
push
stc
add
out
mov
push
mov
push
aam
nop
cmp
lret
cmpl
int
inc
sub
arpl
or
cli
mov
js
int3
pop
sub
jecxz
mov
ret
sbb
adc
jg
xor
pushf
jecxz
mul
cmp
into
push
cmpsb
push
popa
sti
repnz
jb
in
enter
sbb
jmp
dec
call
sub
pop
cs
or
cmc
aaa
adc
pushf
rorb
and
jle
dec
push
out
sub
out
lret
fiaddl
sub
js
cli
and
ret
pop
lds
sub
stc
sbb
into
sub
sbb
sbb
push
pop
gs
sbb
sub
sub
adc
cmp
and
fcmovu
adc
cli
sbb
pop
pop
jo
es
sub
ret
ss
push
xchg
es
out
stc
dec
jbe
pop
or
js
push
shlb
vucomiss
and
cmp
sbb
iret
mov
push
shlb
mov
adc
mov
push
sub
cmpsb
movsb
push
jo
mov
dec
or
movsb
lret
sahf
xchg
inc
mov
mov
pop
out
jb
dec
cmp
in
out
test
mov
push
cmp
leave
cmp
jbe
dec
cwtl
sub
outsl
ret
xchg
dec
cld
test
pop
jl
in
bound
call
mov
jno
pop
negb
add
sub
xchg
lcall
out
push
pushaw
outsl
in
ds
les
lods
pushf
xor
cld
test
iret
add
pop
sarb
and
lahf
push
sub
cmpsl
and
pop
push
or
fcom
mov
fwait
or
ja
dec
xchg
sub
adc
push
incl
inc
repnz
xor
cmp
repnz
mov
andl
inc
out
xchg
dec
loopne
sbb
xchg
dec
cmpsb
lret
cmpsl
in
and
stos
icebp
test
xor
and
test
jae
mov
aad
inc
push
sbb
xor
mov
aad
in
je
push
mov
mov
scas
out
push
pop
push
insb
pop
xor
bound
mov
shlb
pop
dec
sarb
cwtl
jge
repnz
inc
frstor
adc
add
fs
or
je
sub
mov
mov
popa
loope
jb
stos
mov
mov
rcrl
push
jle
add
xlat
test
mov
not
fisttps
mov
iret
das
popa
jb
add
enter
mov
data16
mov
cwtl
sub
fcomps
adc
pop
cmpb
mov
out
cli
and
inc
and
sub
mov
xlat
test
and
aam
std
xchg
mov
ss
and
mov
outsl
test
in
xlat
jo
add
fcoml
xorb
nop
and
add
add
pop
mov
les
std
mov
inc
adc
jl
sbb
js
mov
shl
pop
aaa
aam
push
mov
imul
sub
mov
lds
loop
xor
dec
sub
inc
pop
xor
fucomp
pop
jb
shl
push
mov
sbb
mov
dec
add
cli
and
xchg
sbb
es
clc
pop
scas
sbb
xor
or
jg
ja
jbe
inc
jg
mov
xor
xor
shlb
movsb
int3
mov
lret
adc
inc
sub
es
mov
loop
pop
pop
lret
hlt
in
push
jb
push
shlb
lods
aam
pop
jb
xor
jno
stos
inc
cmp
scas
decb
mov
int3
repnz
inc
popl
cwtl
adcl
daa
mov
and
cwtl
fs
jmp
icebp
enter
sbb
fdivl
adc
repnz
lea
mov
sub
mov
adc
mov
rcrl
ficoms
cmp
les
mov
pusha
daa
push
push
cmp
aam
stos
mov
cmpsb
stos
sbb
cld
pop
xchg
jo
mov
adc
mov
mov
pop
xchg
pop
or
in
mov
mov
xor
loop
xor
lock
mov
mov
jo
xor
mov
push
xchg
xor
imul
xchg
or
pop
fwait
mov
and
push
inc
mov
sti
out
faddl
add
dec
jb
call
inc
mov
in
pop
xor
test
xor
lret
inc
mov
adc
pop
cwtl
and
cwtl
decl
scas
adcb
les
add
push
insb
xor
push
mov
xor
lcall
mov
pop
sub
int3
mov
cmpsl
inc
push
aam
push
mov
aas
inc
es
push
fistpll
mov
icebp
ds
leave
movsb
int3
cmp
inc
pop
shlb
mov
pushf
jg
adc
cli
push
xor
xchg
pop
or
cltd
cwtl
pop
scas
insl
cmp
dec
mov
pushf
mov
lock
hlt
lret
jp
sbb
pop
ja
xchg
pusha
aas
bound
add
mov
or
outsb
cmc
scas
sub
mov
adc
ljmp
sub
je
sub
lret
push
nop
cmpsl
and
push
push
adc
and
cmc
popf
pop
arpl
jmp
add
outsl
mov
das
and
xchg
in
push
in
push
sbb
dec
ror
ljmp
lea
ss
pop
and
ljmp
mov
movsl
add
cmp
data16
test
stos
test
add
push
in
sub
mov
cmpsl
rsqrtps
fcoms
adc
fistpll
or
inc
jb
test
cmpsl
mov
add
sbb
mov
adc
sbb
int3
in
mov
sub
sbb
jno
pop
cmp
lret
imul
sbb
nop
or
cmp
and
xor
dec
xor
lcall
in
pop
ss
ret
or
cltd
repnz
loop
imul
inc
cmp
inc
les
dec
sarl
movsb
das
adc
sbb
stos
mov
cmpsb
dec
pop
cli
mov
mov
sbb
jp
pushf
or
jb
jno
rcl
pop
aam
in
pop
faddl
aam
mov
insb
dec
sbb
dec
mov
movsb
in
js
stos
adc
aas
mov
lret
lcall
mov
lcall
mov
ljmp
mov
stos
mov
movsb
dec
pop
mov
cld
repz
mov
fisttpl
inc
push
pushf
cltd
sbb
iret
mov
mov
movsb
mov
jle
call
inc
pushf
jbe
push
push
jbe
push
in
inc
shlb
or
stos
shrb
test
adc
sub
fmull
les
pusha
rcrl
cmp
mov
cld
arpl
fwait
aam
pop
ret
movsl
rcrb
mov
outsb
push
andb
add
jp
adcl
jge
mov
call
dec
mov
jns
ds
lods
fsubrl
cmp
out
mov
mov
cmp
jae
mov
jg
mov
insb
mov
push
dec
cmp
lock
push
or
mov
sbb
push
add
add
fnstenv
inc
mov
mov
inc
pop
cmp
in
jl
push
call
xchg
cmpsl
pushw
pushf
mov
sub
pop
push
fdivr
shll
jno
mov
in
inc
pushf
mov
or
mov
xchg
aas
add
lret
jp
cld
mov
ja
xchg
insb
in
xor
mov
in
mov
aas
shrl
inc
lret
clc
repnz
dec
mov
mov
bound
ret
fnsave
loopne
mov
jb
fistpl
inc
cwtl
imul
ljmp
lcall
ss
mov
adc
jl
cld
cmc
sub
xor
cmp
xchg
and
mov
js
xchg
mov
sub
add
pop
xor
iret
sbb
cmp
jl
and
jbe
repz
clc
sar
lcall
jno
data16
out
adc
pop
mov
cwtl
arpl
add
mov
or
push
sub
mov
dec
hlt
int3
dec
sbb
pop
ja
mov
in
out
and
pusha
aas
lcall
xchg
scas
sub
mov
adc
ljmp
mov
push
dec
mov
lret
arpl
popf
je
push
es
mov
pop
xchg
sub
xor
xchg
mov
jecxz
xor
inc
jno
scas
inc
dec
mov
sub
add
or
repnz
push
xor
mov
and
clc
fistpll
sahf
mov
sub
fcomps
in
call
ret
xor
sbb
icebp
out
mov
mov
sbb
mov
ljmp
pop
add
and
pop
push
adc
sarb
cld
repz
data16
dec
mov
push
jbe
nop
jno
cbtw
jo
sbb
jo
xchg
jo
push
insb
cltd
sbb
mov
cwtl
rcrb
mov
jle
cmp
es
add
jbe
push
push
jbe
push
in
add
ds
mov
jg
adc
sub
nop
dec
pminsw
and
into
sub
xchg
divb
cld
out
mov
pop
add
mov
adc
or
push
mov
jle
clc
pop
fadds
inc
add
push
push
jbe
push
in
rol
xor
js
shrb
mov
adc
sub
mov
dec
dec
rcrl
cmp
idivl
pop
jl
in
mov
gs
imul
jle
mov
sub
push
or
fstpl
push
jns
shlb
mov
out
flds
es
inc
sub
jb
jmp
outsl
lret
ficompl
and
add
sub
push
fstpl
test
push
add
mov
lock
mov
sub
xchg
fwait
out
lcall
mov
repnz
sbbl
scas
je
push
xor
lcall
fsub
out
push
mov
cmp
es
sub
mov
dec
lods
add
adc
xor
pop
loop
push
repnz
pop
mov
out
push
add
fidivrs
into
cld
sub
pop
pop
or
lods
jbe
push
push
jbe
shl
pop
adc
mov
add
icebp
int3
push
jmp
pop
cmp
rorl
arpl
adc
cmp
sti
lea
inc
andb
sub
or
iret
sbb
lds
mov
lods
movsb
loope
lds
mov
pop
mov
pop
mov
cltd
mov
repnz
dec
adc
mov
ljmp
subl
leave
aas
inc
repz
iret
jge
aas
outsl
pop
test
popf
scas
cmpb
rcr
adcl
add
mov
jmp
es
fcoms
xlat
orb
in
sub
adc
icebp
xchg
icebp
and
stc
xor
dec
jl
fucom
gs
lea
xor
adc
sahf
jae
jo
push
push
xchg
mov
mov
incb
jecxz
inc
les
iret
hlt
mov
insb
jae
lfs
test
icebp
pop
dec
inc
mov
or
cmp
push
inc
lea
mov
jmp
inc
fmull
repnz
mov
jmp
scas
sub
inc
int
int3
mov
das
cs
mov
aas
dec
adc
mov
fsubrl
movsl
ds
mov
mov
outsb
hlt
dec
lock
int
aam
idivl
lock
inc
insl
mov
pop
insb
jg
sub
dec
dec
sbb
test
rcll
ffree
or
dec
mov
icebp
bound
ret
xlat
ss
mov
dec
jb
out
nop
in
mov
negl
adc
add
sub
das
sbb
movsb
sti
add
jbe
xor
test
pop
mov
and
mov
out
js
push
nop
cmp
add
das
adcl
sbb
inc
adc
pop
aam
lcall
aam
in
sub
pop
addb
shll
inc
aaa
mov
rorb
xor
push
sub
int3
out
orb
and
mov
cwtl
add
movsl
aas
add
mov
lret
jp
nop
mov
dec
jbe
in
mov
in
adc
cli
test
dec
loop
int3
ljmp
sbb
cmp
sub
lret
push
pop
pop
adc
test
or
repz
data16
es
subb
fwait
sbb
cmc
mov
xchg
scas
lahf
mov
je
in
xor
into
pop
dec
in
shll
mov
push
ja
jb
or
cmp
push
cli
rolb
das
les
into
test
add
rcrb
sbb
push
scas
cmpsb
fdivrs
jle
out
in
adc
inc
add
xor
mov
dec
push
and
dec
mov
pop
fidivrl
call
movsl
xor
push
jae
out
inc
out
mov
test
int3
lret
mov
pop
ficomps
or
test
add
xchg
lea
cli
jae
in
popl
fwait
sti
add
pop
push
mov
cmp
sub
ret
in
adc
enter
rorl
dec
out
imul
xchg
adc
xchg
mull
mov
pop
push
cltd
and
push
dec
jg
add
cmp
push
testl
lock
lret
sti
iret
out
pop
mov
mov
jmp
fcompl
mov
inc
sub
in
sbb
xor
into
cmp
push
xchg
or
scas
and
mov
sbb
aas
xor
cli
xchg
inc
pop
jo
mov
int
in
lods
loopne
pop
loop
jl
pop
xor
pop
adc
mov
add
inc
cmp
sub
aam
repnz
sbb
sbb
aam
bound
sub
pop
xorb
call
enter
jno
pop
imul
insb
xchg
push
pop
ljmp
sbb
cwtl
test
mov
popa
add
lods
or
push
icebp
inc
xor
xor
test
jge
mov
fdiv
cmp
cltd
cld
andb
sti
pop
push
cmpsl
inc
jb
adc
pop
push
jo
jne
push
movsl
fcomps
cmp
mov
std
and
dec
sub
test
cmpsb
loop
pop
mov
fldl
mov
imul
push
or
test
mov
insb
filds
test
push
mov
adc
mov
rclb
sar
aas
lods
sbbb
mov
leave
mov
mov
fldcw
lds
test
mov
or
xchg
dec
shrb
pop
mov
cwtl
ss
xchg
clc
adc
ret
sub
dec
arpl
fcom
pushf
int3
mov
push
push
jle
nop
sub
ljmp
mov
sub
xchg
mov
ss
sub
lock
push
or
std
push
bound
xor
not
mov
add
sub
icebp
add
dec
sti
push
mov
xchg
data16
pushf
mov
pop
xchg
aaa
mov
mov
ret
cmpsb
cmp
xchg
mov
in
push
int3
in
call
int
out
test
jb
int
mov
dec
outsl
outsb
xchg
sub
lahf
push
sub
mov
pop
sub
mov
mov
push
dec
inc
mov
pop
enter
aam
js
aas
pop
or
add
iret
stos
lret
sbb
add
fbld
adc
dec
pop
push
out
bound
in
pushf
jo
sub
sub
dec
dec
bound
mov
mov
and
lahf
adc
or
mov
adc
xlat
es
cltd
shl
shl
add
fcomps
mov
jbe
push
jnp
add
data16
in
int3
in
pop
xchg
mov
loope
aam
push
repz
push
bound
mov
shll
repz
fbstp
shlb
pop
xchg
test
bound
lods
call
cld
pop
mov
fdiv
test
bound
int
xorb
or
or
pop
lods
mov
les
inc
leave
mov
lods
inc
jae
mov
or
pop
push
mov
rcrb
and
in
push
jo
iret
int
loope
test
aaa
add
lcall
es
shlb
sub
inc
mov
popa
fisubrl
cmp
push
shrb
jge
inc
pop
xchg
sub
daa
inc
mov
and
fwait
jno
push
sub
std
and
out
sub
dec
pslld
dec
dec
sbb
ss
sub
mov
adc
cmp
add
pop
xor
jns
es
je
iret
setno
lahf
push
mov
cld
pop
es
pop
popl
cmc
mov
cmp
popf
je
fcomps
adc
add
test
sbb
in
imul
fimull
pminsw
dec
hlt
jnp
sub
xor
lret
mov
or
and
dec
xor
pushl
std
xchg
push
push
in
repnz
push
inc
or
inc
cmp
jnp
pop
loopne
sub
mov
jl
add
pop
sbb
push
lds
lcall
clc
adc
js
pop
out
pop
dec
fisubs
or
mov
aaa
add
insb
cmpsb
xor
int3
or
test
call
repnz
insl
push
cs
lea
or
adc
cwtl
mov
cmp
adcb
aas
out
outsb
in
lret
in
mov
adc
push
adc
daa
sbb
fsubrl
shlb
adc
aas
es
inc
fucomp
int
xchg
call
pusha
adc
loopne
es
sbb
mov
orl
ret
lock
bound
xchg
lret
xchg
mov
mov
push
fdivrl
add
testb
or
mov
or
pop
imul
mov
cld
pop
adc
mov
push
in
pop
aas
cwtl
aas
pop
dec
jns
ss
pop
push
adc
push
push
or
sarb
hlt
add
xor
scas
or
dec
fsub
jge
insb
mov
sbb
xor
lods
push
das
or
je
popa
imul
push
aas
mov
pop
push
icebp
xor
pop
out
insl
jns
fidivl
aas
shrb
pop
aad
add
jnp
mov
mov
data16
daa
xchg
push
inc
lret
cs
in
sbb
test
test
sbb
xor
test
lret
jo
mov
and
cmp
cmpsl
mov
incb
stc
lods
dec
movsb
je
je
pop
nop
adc
or
jl
stos
cltd
adc
outsb
mov
mov
sbb
pop
orb
cmpsl
add
movsb
dec
popf
cmp
sub
xchg
or
mov
inc
cmpsl
sub
or
iret
xor
out
enter
pop
ljmp
int3
mov
dec
add
add
sub
mov
mov
mov
setb
push
dec
adc
xor
sarb
jb
adc
cbtw
jo
xor
jbe
sti
lret
mov
jecxz
mov
cwtl
sbb
sub
mov
inc
sub
in
ret
fsubl
inc
lock
cmpsl
dec
roll
pop
jae
mov
rclb
out
pop
push
jbe
int3
js,pt
data16
cwtl
mov
popf
mov
fidivl
xchg
push
out
sub
test
mov
sub
ret
sub
push
jbe
push
in
in
push
add
sbb
push
sub
push
scas
lret
or
xchg
pop
dec
lahf
adc
jg
mov
xor
dec
fcoml
dec
cmp
movsl
enter
mov
mov
in
xor
es
and
sarb
enter
pop
shrb
inc
pop
xchg
pop
into
pushf
rolb
into
repz
lcall
lock
xchg
push
nop/reserved
adc
mov
inc
mov
jmp
and
test
repz
xor
mov
iret
fisttps
inc
xchg
jp
jp
lock
loop
and
cmp
fadds
stc
leave
and
enter
cltd
pop
and
lock
loopne
bound
sub
push
daa
push
mov
ds
call
push
mov
jl
mov
jmp
mov
out
test
sbb
add
movsl
shrl
xor
movsl
mov
dec
push
mov
mov
or
lods
cmp
fnstcw
sbb
sti
cmpsl
mov
sub
and
or
cmc
nop
push
sahf
loop,pn
cld
loop
into
js
cmc
les
adc
and
idivb
icebp
inc
or
xor
pop
loope
xchg
pop
arpl
dec
fisubl
jle
or
xor
mov
push
jo
pushw
js
mov
and
mov
adc
xor
jo
jle
test
stos
nop
cmp
loope
insb
jle
push
fmuls
jle
das
stos
inc
data16
in
add
push
in
or
mov
jl
out
lds
or
jmp
mov
and
and
into
push
mov
negb
in
push
aas
sahf
adc
aas
xchg
ds
ret
xor
adc
xchg
lds
sub
inc
inc
loope
aam
aas
cli
imul
cs
and
jo
push
cmc
loop
arpl
popf
pop
arpl
pushf
insb
cld
repz
xchg
into
sti
shrb
mulb
jb
adc
xlat
es
pop
iret
enter
or
scas
movsl
lds
ds
xor
mov
mov
and
sbb
cmp
int
mov
sbb
sahf
dec
pop
fcomps
sbb
in
rorl
out
or
xchg
push
and
jle
fs
test
sbb
push
mov
inc
push
stos
mov
adc
jnp
xor
test
leave
test
int3
dec
mov
rol
mov
push
popa
mov
into
push
fwait
loop
out
mov
shrb
pushf
leave
lock
adc
lods
sub
sub
jecxz
insb
inc
ffreep
xor
sbbl
shll
in
sbb
inc
dec
push
mov
mov
and
cmp
lock
sti
jbe
stos
je
daa
xchg
sub
adc
adcl
sub
lock
imul
pop
cwtl
or
sbb
mov
cltd
push
mov
insb
jbe
add
in
ret
imul
sub
push
xchg
pop
mov
push
xor
iret
cld
imul
inc
aaa
push
mov
xor
loopne
fidivrl
loop
stos
in
jle
pop
imul
hlt
inc
scas
test
lret
inc
in
mov
adc
repnz
push
jmp
xadd
jo
repz
cld
sub
adc
mov
or
es
inc
ljmp
gs
ds
jp
dec
addr16
lret
adc
lock
mov
fists
push
into
je
loope
aas
popa
dec
adc
inc
pushf
sub
push
enter
cmc
mov
outsb
lahf
cmp
cltd
pop
pusha
iret
das
ds
enter
pop
xor
insl
mov
jecxz
sub
and
fwait
jno
push
fnsave
std
clc
jmp
inc
jbe
adc
shr
fidivrs
repnz
jle
xor
pop
mov
sub
pop
mov
popf
out
jp
orl
in
aaa
or
into
mov
rcrl
mov
ss
pop
lret
xor
jmp
daa
inc
mov
and
fwait
jno
push
fdivl
mov
jle
cmp
into
rcrl
or
mov
mov
add
jp
cltd
adc
mov
int
rcll
pop
xchg
mov
rcr
ffreep
inc
call
in
fwait
and
arpl
xor
subb
sbb
mulb
sub
xchg
push
nop
adc
imul
fildll
out
push
jo
cmpsb
pop
pop
pop
rolb
dec
jnp
test
add
cmpsl
mov
lret
push
cltd
pop
arpl
sbb
dec
mov
sub
dec
jno
jno
or
add
add
addr16
xor
sub
adc
dec
push
outsb
pop
cli
fdivr
cmp
pop
aam
mov
adc
dec
loopne
cmp
inc
shrl
jmp
inc
fmull
in
jno
cmp
out
xor
lcall
sbb
in
js
lcall
push
sbbb
adc
push
mov
mov
pop
dec
xor
dec
dec
xor
nop
insb
dec
fs
mov
sub
mov
adc
cmp
std
push
outsb
pop
mov
cltd
shll
sarb
imul
ss
adc
add
xorl
ret
xor
pop
cmpsb
shrb
dec
or
or
jmp
xchg
cmp
in
and
into
push
mov
loopne
in
mov
aas
mov
ljmp
dec
sysexit
scas
ja
mov
mov
sub
aam
rorl
out
push
data16
push
in
mov
push
in
mov
lcall
cmp
xor
mov
adc
pop
nop
cmp
loop
pushf
test
push
cld
push
inc
ja
push
je
cwtl
sarl
sub
repnz
jmp
adc
xchg
frstors
adc
sub
in
inc
rorl
push
mov
les
dec
ljmp
pop
mull
adc
add
dec
or
xor
cld
repz
inc
cmp
in
cmp
into
xor
fs
adc
jno
or
add
add
xlat
inc
xor
sub
loopne
inc
push
outsb
pop
ss
cmp
pop
and
mov
push
mov
sub
lahf
call
dec
cmp
movsb
mov
add
es
or
movsl
sarl
push
test
adc
stos
mov
sbb
pop
bnd
fmuls
mov
ja
xor
fsubrl
pop
mov
xor
inc
adc
xor
aam
dec
roll
fdivrs
data16
xor
push
jmp
push
cmp
mov
daa
push
push
cmpsl
cmpsl
cmpsb
mov
std
and
out
sub
dec
pminsw
cmpsl
pushw
lods
cmpsl
push
adc
xor
xor
mov
arpl
hlt
mov
stos
lcall
stos
jno
dec
ljmp
dec
or
jae
mov
mov
out
mov
mov
dec
pop
pop
in
inc
je
pop
xchg
mov
into
fistpll
ret
inc
les
pop
sbb
in
imul
data16
lret
jp
pushf
jo
and
movsb
cltd
add
int
dec
pop
push
or
xchg
mov
fidivrl
add
dec
cmpb
xorb
mov
jae
mov
xchg
or
aam
inc
lock
push
jno
push
popl
int3
scas
call
loope
insb
xchg
jge
adc
adc
pop
mov
dec
jo
or
add
lods
movsl
mov
mov
popa
adc
jae
cmp
fnstsw
or
push
repnz
movsb
dec
hlt
lods
dec
rorb
aas
push
ss
sub
cmovg
enter
adc
jl
pop
andl
pusha
sub
push
ss
sub
cmp
inc
mov
and
fwait
jno
push
ret
cmpsb
mov
std
cwtl
into
out
sub
dec
pslld
adc
mov
lret
clc
call
adc
inc
sub
sahf
aad
and
fistl
sub
loopne,pn
jle
adc
push
rcrl
not
push
lret
pop
lret
adc
jmp
daa
inc
mov
and
fwait
jno
push
shlb
lock
out
sub
dec
pslld
dec
call
sub
mov
adc
pop
push
lahf
push
jae
cwtl
xchg
xor
outsl
ja
and
mov
cltd
push
dec
add
stos
shll
sub
rcll
mov
int3
mov
les
mov
mov
mov
daa
push
push
mov
data16
mov
std
enter
push
dec
pminsw
cmpsl
pushw
cld
mov
sbb
jo
call
stos
mov
addr16
loope
aam
push
imul
scas
dec
dec
dec
enter
gs
jno
or
mov
hlt
add
nop
cmp
bound
sub
xor
add
adc
lds
inc
test
aam
aas
pop
jne
pop
jne
cs
or
imulb
xchg
adc
lock
stos
mov
dec
or
jmpw
jmp
jge
aaa
into
outsb
mov
pop
adc
ds
or
ljmp
jmp
or
iret
daa
inc
sub
sahf
aad
and
fistl
sub
cs
jle
adc
mov
icebp
lcall
sub
mov
ss
or
jmpw
jmp
dec
or
xor
cld
repz
add
push
mov
pop
mov
mov
fistpl
xchg
cmp
xor
pop
movups
stc
push
dec
jae
cmpsl
test
mov
dec
movsl
sarl
sbb
sahf
sub
mov
push
rclb
aas
sub
stos
sub
cmovg
cmp
aam
ret
push
mov
mov
mov
ds
hlt
fs
jbe
jo
cmp
js
lods
adc
and
dec
pslld
jbe
jmp
int3
cli
test
inc
push
jo
dec
adc
mov
hlt
les
hlt
int3
dec
clc
mov
push
lock
aas
or
jb
inc
dec
adc
cmp
aam
ret
inc
stos
popa
adc
es
je
dec
mov
insb
mov
test
test
xchg
jne
jae
mov
mov
daa
push
sbb
mov
push
in
adc
cs
clc
adc
sub
nop
out
inc
fstpl
mov
pop
sbb
cltd
shll
sarb
cltd
mov
ds
sub
add
xchg
push
cmp
cli
mov
je
pop
push
pop
lds
or
or
std
pop
pop
int
repnz
cltd
or
mov
es
inc
push
loop
arpl
sbb
repz
sub
pop
lods
pop
fistps
daa
jb
mov
mov
jno
pop
sub
inc
pop
cld
sub
and
push
jb
push
sarb
lcall
mov
dec
or
insb
jmp
test
push
cltd
inc
out
fwait
rorl
in
jb
jle
dec
insb
mov
adc
jmp
sub
mov
ss
je
inc
jne
jae
mov
mov
daa
push
sbb
mov
push
js
adc
roll
jo
je
hlt
jl
je
sbb
pop
aas
cwtl
test
out
inc
pop
or
pop
adc
insb
ss
adc
rol
pop
mov
ds
dec
arpl
popf
je
pop
data16
fs
orb
lods
in
pop
pop
int
repnz
xchg
or
mov
es
inc
push
and
arpl
popf
pop
arpl
pushf
mov
add
adc
subb
movsb
pop
add
popf
out
jp
xlat
jle
mov
mov
jno
pop
mov
adc
inc
cmp
and
out
sub
pop
mov
pop
call
fwait
addb
mov
out
dec
pop
cwtl
stos
jno
or
add
mov
cld
pop
add
xor
das
in
repnz
jb
loopne
pop
jbe
rolb
xchg
pop
cli
lahf
fsubl
mov
hlt
pop
pop
shlb
inc
jae
pop
mov
mov
fwait
cmpb
push
push
hlt
mov
ja
cmpsl
test
mov
movsl
call
je
jbe
add
push
push
ja
mov
cld
push
inc
jo
scas
dec
cmp
push
subb
dec
inc
cli
test
aam
insl
sbb
addl
roll
push
jecxz
bound
arpl
test
dec
mov
jl
fidivs
jae
xchg
adcb
cmc
and
fistl
sub
cs
ss
adc
sub
pop
cmpl
sub
sub
mov
ss
aas
fdivr
bnd
subb
movsb
pop
mov
popf
out
jp
push
mov
mov
decl
push
jae
xchg
mov
sahf
test
int3
arpl
jle
or
fs
orb
or
std
pop
pop
int
repnz
sub
mov
inc
push
test
sbb
popf
pop
arpl
cld
repz
sub
pop
mov
lret
jp
dec
cmpsl
mov
mov
jno
pop
shrl
in
ds
lcall
mov
loopne
mov
cmpsb
push
popa
pusha
adc
jno
lds
sub
cmp
pop
aas
xlat
inc
clc
icebp
popa
cld
or
mov
and
mov
and
je
pop
in
push
jo
mulb
stc
push
pop
jae
cmpsl
test
mov
jle
call
rorb
dec
fisubs
cli
mov
pop
cwtl
rcr
or
addb
sub
push
popa
pusha
adc
pop
xchg
jp
mov
mov
fs
lcall
mov
dec
sub
mov
cwtl
rcll
sbb
in
repnz
sbb
frstor
adc
fs
lcall
les
mov
pop
faddl
mov
mov
aam
nop
shrl
mov
pop
das
enter
nop
pusha
cwtl
xor
adc
mov
stos
sbb
xchg
dec
nop
cltd
ja
push
scas
inc
ss
mov
add
lcall
aam
xchg
push
mov
lahf
xchg
add
push
fcomi
rsqrtps
scas
xchg
push
and
xor
or
fs
push
push
int3
pop
mov
jae
fnstenv
jno
aad
add
cmp
sub
stc
pop
js
adc
cwtl
xor
repz
jmp
sub
insb
pop
xor
ss
xor
cmp
push
lock
xchg
and
push
scas
call
popf
cmpsb
arpl
hlt
mov
add
jp
test
push
data16
or
pop
inc
fdivr
push
pop
pop
sub
add
cmpb
push
push
hlt
mov
lcall
enter
cmp
out
pop
cli
xor
pushf
mov
lret
clc
incl
mov
adc
cli
test
aam
aas
push
push
inc
pop
jne
cs
shrl
pop
mov
jmp
add
movsl
aas
add
adc
shrl
out
sub
pop
cmpb
dec
push
xchg
jae
clc
ret
xor
stos
jno
mov
cltd
adc
mov
int
sarl
gs
xchg
mov
loopne
aas
ret
inc
les
into
outsl
movsb
pop
subb
imul
loopne
dec
cltd
mov
inc
pushf
faddl
add
dec
pop
push
mov
jno
sub
daa
shr
int3
cli
aam
inc
push
jo
cmp
int3
sub
mov
sub
mov
adc
cmp
pop
pop
mov
pop
xor
jl
push
imul
sub
fcoml
adc
jle
ljmp
popa
stc
pop
ljmp
inc
data16
adc
push
incb
xchg
jnp
pop
leave
push
stc
cs
jno
testl
mov
xchg
push
push
jbe
push
in
and
mov
xchg
ja
mov
mov
sub
jl
rorl
test
or
ja
mov
push
jle
lods
dec
sbb
mull
out
and
push
in
or
cmp
pop
in
dec
adc
les
hlt
pop
ljmp
sbb
cmp
lock
aam
dec
jbe
push
pop
mov
fs
orb
mov
int
repnz
or
movsb
movsb
xor
inc
shrb
xor
adcl
sub
add
sub
bound
jecxz
sar
push
mov
in
insb
adcl
mov
jno
pop
mov
adc
inc
xor
cld
pop
mov
pop
shrb
mov
fwait
sbbb
hlt
mov
lcall
stos
jno
or
add
mov
pop
mov
ljmp
in
push
movups
das
jmp
popf
out
jp
and
cmpsl
mov
mov
stc
adcl
int3
pop
stos
test
push
jbe
imul
test
stc
stos
sub
mov
pop
pusha
arpl
push
ret
inc
jg
stos
loopne
idivl
push
fisubl
inc
sub
mov
add
lock
xchg
inc
sub
jge
add
cwtl
in
dec
jmp
shlb
sbb
xchg
mov
mov
loopne
jg
mov
idivb
pop
loopne
andl
mov
mov
aam
call
movsb
rcll
rcrl
cld
rorb
cs
nop
xchg
shrl
test
lock
adc
lods
cld
mov
hlt
test
add
add
ret
fcomps
xor
xchg
push
mov
sbb
xor
leave
sub
jno
add
fistl
push
ds
in
repnz
jge
cmc
pop
and
mov
sub
subl
jmp
cmp
adc
and
ljmp
dec
jle
gs
aaa
jle
inc
loopne
aam
inc
call
jl
shlb
loop
out
push
fcoms
adc
mov
push
pop
lahf
sarl
mov
cmp
test
sub
popf
sub
and
sub
loop
ljmp
cmp
cmp
inc
mov
mov
sub
push
std
cmp
adcb
inc
dec
jp
mov
ret
in
xchg
add
std
fidivs
cwtl
addl
in
adc
insl
push
pop
sbb
subl
xlat
jne
jno
cmp
cmc
pop
fucom
xlat
inc
xor
and
pop
xchg
mov
jg
fdivrl
mov
sub
xchg
push
aad
lea
sti
add
imul
sbb
xchg
mov
divb
lret
sbb
cmp
ljmp
lea
pop
or
cmp
lods
mov
mov
and
inc
jp
and
pop
adc
lahf
dec
pop
xchg
in
icebp
sbb
xchg
movsb
enter
hlt
mov
mov
popf
push
inc
mov
jns
scas
iret
mov
mov
sbb
inc
dec
sub
jl
das
outsb
push
imul
sbb
pop
fmull
call
pushf
inc
test
aad
outsl
sub
xor
je
adc
mull
inc
and
adc
push
repz
cmp
mov
movsl
shll
jmp
sub
shll
lods
test
add
push
ja
mov
shrb
sbb
imul
mov
push
fs
cmpsb
ror
fwait
add
add
mov
nop
les
sbb
lret
cmp
cmp
mov
stos
orl
dec
mov
movsl
pop
sub
loope
jge
mov
lahf
repnz
rolb
popa
push
xorb
das
mov
and
rcll
jmp
xchg
scas
pop
fdivl
lods
push
sti
xchg
ret
sub
mov
add
mov
sarl
rcll
cmp
mov
mov
cmp
mov
ret
ret
mov
movsl
dec
xor
icebp
out
xor
mov
addr16
jnp
sarl
jp
add
icebp
xchg
push
lcall
ja
dec
daa
and
loope
xor
inc
push
shlb
pop
pop
jns
sub
jae
outsb
lahf
push
cltd
mov
fdiv
push
jae
out
jg
out
pop
rol
paddsw
ret
das
je
jmp
xlat
cmp
pop
mov
mov
jecxz
mov
push
inc
int3
cmp
fcmovbe
sti
push
stos
inc
aaa
xchg
rorb
cmp
out
popf
jp
sahf
aam
xchg
mov
jbe
pop
lahf
fldenv
je
mov
dec
push
iret
rclb
test
lahf
or
out
jmp
sbb
jmp
and
sub
aad
mulb
lret
gs
dec
adc
jmp
dec
mov
and
dec
mov
or
jno
or
pop
aaa
mov
and
fwait
add
sub
mov
sub
roll
test
jae
pop
cmp
scas
insb
aas
shl
xchg
aad
xor
jae
iret
mov
push
scas
push
push
ja
mov
cmp
mov
jns
cltd
out
aas
xchg
jnp
add
aam
lods
sub
jl
fldt
test
lds
sbbb
mov
xor
cmpsl
int3
cmp
insb
cld
fadds
mov
lcall
or
xchg
sbb
cld
jb
mov
cmp
hlt
add
push
dec
cmp
out
inc
push
scas
sub
fdivrl
jo
sahf
lahf
jns
repnz
movsl
pop
mov
push
inc
mov
js
or
mov
push
call
jp
mov
andl
mov
mov
cld
xchg
test
sti
inc
push
stos
adc
mov
mov
gs
mov
jae
dec
shll
jecxz
mov
das
pop
js
jg
pop
les
dec
rorb
nop
call
imul
icebp
xchg
rorl
es
sub
nop
lahf
inc
stos
mov
and
dec
setno
sti
sub
fsubl
pusha
pusha
ds
or
adc
push
jle
ja
das
inc
xchg
jns
test
mov
adc
or
jo
or
dec
xchg
cmp
add
int3
pop
xor
rorl
and
or
jmp
neg
dec
insb
or
dec
inc
sub
fdivrs
mov
mov
rcrl
rcrl
mov
cmpsl
xor
sarl
jp
mov
xchg
pop
fsubrs
inc
mov
xor
or
testb
cltd
push
sarb
icebp
fwait
cld
outsl
push
and
sbb
jge
mov
enter
or
pop
repz
ljmp
jg
push
lock
push
sbb
in
add
nop
lods
sub
cmp
fucompp
fwait
aam
push
call
push
lods
mov
pop
xchg
jne
pminub
push
mov
xchg
mov
lcall
jmp
pop
or
and
pushf
gs
arpl
cmp
mov
into
xor
or
mov
xchg
pop
cltd
jg
addr16
stos
shlb
out
or
cmpsl
fisubs
pop
xchg
dec
inc
pop
jb
pushf
dec
xchg
and
sbb
pop
cmp
or
mov
sahf
sbb
jle
je
push
jge
aam
mov
cmpsl
stc
mov
rcrb
sub
jp
je
rol
mov
cltd
hlt
jl
jg
jne
dec
icebp
dec
repz
pop
clc
imul
push
rcrl
xor
or
and
dec
pop
mul
dec
jnp
jmp
loope
adc
mov
iret
mov
inc
movsl
dec
inc
insl
icebp
aam
sub
mov
xor
push
push
fdivrs
loopne
push
cli
test
mov
add
adc
mov
xchg
pop
jl
enter
enter
aam
int3
movsl
aad
out
dec
imulb
scas
arpl
pop
mov
dec
and
dec
xor
dec
or
in
push
mov
push
popf
inc
out
mov
dec
pusha
inc
adc
aam
mov
aaa
jb
mov
pop
adc
test
push
fmull
mov
adc
loope
roll
daa
les
dec
mov
cmpsb
aas
sbb
nop
lds
dec
push
mov
pop
xchg
jmp
popa
cwtl
faddl
repnz
cwtl
mov
push
mov
cltd
inc
push
fsubrs
jb
xor
pop
sbb
hlt
pop
jp
mov
lods
jbe
mov
or
loop
cmc
ret
test
push
fsubrs
jnp
inc
pusha
clc
or
mov
xchg
sub
xchg
inc
rcrb
repnz
dec
jbe
subb
pop
out
jmp
xchg
xchg
fcomps
out
cmp
testb
pop
popa
push
out
jns
cmc
sub
mov
sub
mov
sarb
aam
inc
or
and
out
inc
xchg
and
sbb
idivb
lret
and
enter
and
js
cmp
ficompl
push
mov
loop
mov
ja
lods
fisubl
cmp
jb
mov
pop
jbe
mov
mov
pop
or
push
cmp
lods
jg
xlat
pushf
loopne
jp
in
mov
jp
mov
jbe
lods
cmpsb
cltd
subl
lret
rolb
push
fdiv
sarb
mov
dec
and
in
jp
inc
jmp
sbb
xor
add
lods
xor
xchg
in
xchg
pusha
scas
mov
mov
cmp
xchg
shlb
sub
xchg
xchg
test
adc
fcoml
push
mov
mov
pushf
popf
push
add
mov
mov
cmpsb
mov
out
xor
pop
pusha
pop
sbb
arpl
cwtl
xchg
cmpsl
ss
cmp
cmpb
xchg
pop
push
mov
cmp
mov
insb
jo
xchg
mov
add
mov
cld
imul
cmp
mov
xchg
fmulp
dec
mov
pop
int
pop
dec
sub
sbb
xor
ljmp
sbb
pop
push
nop
andb
repz
xchg
pop
xor
pop
nop
inc
movsb
mov
cmp
push
lock
ljmp
roll
jns
mov
subb
lcall
xlat
imul
lds
mov
cmc
dec
test
sub
ljmp
mov
dec
jg
jnp
xorl
fcoml
xor
push
pop
inc
xlat
or
push
xchg
lahf
mov
popf
mov
pushf
fs
xchg
daa
jp
cltd
adc
movq
xchg
pop
and
and
aam
stos
lea
pop
bound
dec
aad
mov
sbb
inc
ret
inc
sub
jl
add
rcrl
mov
lds
add
xor
jo
test
stos
stos
andb
mov
inc
mov
xchg
dec
dec
adc
adc
andl
in
and
fs
incb
test
pop
lock
dec
les
jbe
mov
lock
mov
insb
jae
add
dec
jmp
mov
mov
mov
pop
push
jle
xor
pushf
inc
jns
jae
jg
jnp
jmp
hlt
pop
shlb
xor
sub
lock
xor
nop
cli
cmp
shll
dec
int
mov
arpl
sub
jecxz
inc
or
mov
lods
pop
dec
mov
or
fcompl
sub
pop
mov
xchg
mov
in
gs
mov
pushf
dec
dec
dec
gs
insb
adc
inc
flds
mov
push
rolb
push
call
imul
jb
xor
dec
imulb
sbb
enter
std
sbb
sbb
push
inc
sti
loop
dec
mov
cwtl
mov
jmp
mov
mov
test
test
cwtl
aad
or
and
into
test
js
test
adc
aad
sub
mov
mov
push
gs
push
mov
aad
jne
lahf
and
add
push
stos
pop
xor
and
outsb
lahf
or
push
mulb
push
mov
adc
pop
mov
imul
or
out
dec
jb
push
or
fs
xor
dec
and
enter
mov
inc
pop
int3
xor
rorl
and
adc
jbe
push
cltd
xor
bound
in
push
call
xlat
push
push
xchg
cmpsl
xlat
js,pn
add
inc
ret
vmread
sbb
into
add
or
lcall
roll
xchg
pusha
cmp
shr
and
sub
hlt
pop
xor
mov
cmpsl
ror
adc
lret
fwait
add
or
sub
insb
repnz
nop
mov
dec
std
pop
dec
xchg
fsubl
xchg
lret
or
mov
pop
dec
inc
mov
outsb
dec
xor
jmp
in
ret
cmp
std
scas
hlt
lahf
jmp
inc
adc
adc
sub
cmpsb
push
add
int3
mov
mov
pop
mov
inc
arpl
mov
push
sub
jp
cmp
shl
mov
push
pop
cmp
jp
in
jge
bound
mov
dec
or
jmp
js
sub
lods
sub
pop
setbe
mov
xor
cmpsb
out
and
mov
test
imul
adc
daa
aam
out
xor
jnp
pop
push
fsubs
xchg
scas
int
mov
mov
ret
jl
rol
loopne
pop
or
sahf
adc
inc
stc
mov
ljmp
or
xchg
mov
push
outsb
mov
call
cmp
add
push
and
lret
insl
in
adc
mov
add
sub
push
enter
sbb
fsubl
ret
sub
nop
movsb
and
mov
call
push
mov
movsb
pushf
cmp
sbb
std
jae
mov
int
add
rcr
pop
xor
cmp
lds
and
jmp
popf
jne
andb
jo
lea
and
scas
mov
mov
push
stc
cmpl
popf
je
andb
and
je
repnz
cmp
out
xor
mov
inc
add
jmp
hlt
aad
mov
daa
ss
inc
shrb
testb
shrb
aaa
mov
jne
pop
xchg
push
mov
inc
int3
fcmove
in
mov
scas
mov
mov
sub
bound
dec
cwtl
mov
mov
jns
fs
xor
test
popf
jno
insb
dec
rol
sahf
insl
mov
cmp
aam
add
xchg
outsl
sub
into
ret
xor
pcmpgtd
mov
adc
stos
lock
cld
add
es
cmpsl
in
stos
xor
test
nop
push
lea
mov
cmpsl
adc
in
lahf
jno
insb
insb
sub
jmp
pop
inc
int
adc
push
in
and
fs
and
cltd
adc
sbb
out
jo
into
mov
not
and
jle
insb
sti
pop
std
pop
aad
jne
mov
lret
in
add
mov
lahf
dec
pop
inc
xor
cmp
in
push
rcr
rcr
lods
dec
lret
xlat
icebp
add
jg
in
dec
leave
nop
je
repz
adc
repz
pop
lret
sbb
pushf
insb
rcrl
xchg
jbe
ficoml
xor
ja
ljmp
cmp
pop
push
cld
pavgw
outsl
mov
xlat
pop
push
loop
inc
idiv
outsl
adc
fcoml
in
pusha
mov
stc
mov
jge
int3
and
in
mull
out
out
or
mov
inc
push
pop
mov
pop
sub
push
adc
xor
push
xchg
movsb
pop
fmul
sbb
mov
shll
jecxz
and
mov
pop
pop
fdivl
pop
sbb
lahf
sti
sub
sub
mov
ljmp
jae
leave
jb
jmp
fists
dec
sub
cwtl
sti
or
addr16
rcl
leave
inc
loope
ds
jo
inc
loopne
aam
inc
add
ss
sar
data16
fisttpll
and
and
dec
les
sbb
addb
cmpsl
lea
andl
movsl
jb
push
ret
inc
jl
mov
movzwl
push
loope
push
cmpb
cmpsl
adcb
lret
mov
adc
push
mov
push
pop
cli
mov
bound
into
push
pop
mov
pop
mov
fs
pop
xchg
test
nop
lds
rcrb
fnstenv
xchg
daa
xchg
dec
sarl
jg
or
inc
je
jl
jl
out
leave
sub
pusha
add
ret
stos
inc
stos
icebp
ret
mul
mov
cmc
jle
and
insl
ds
and
cmp
sahf
push
shlb
lret
ret
mov
stos
sbb
mov
xchg
in
test
movsb
bt
push
lock
push
addl
push
mov
jge
mov
inc
push
cmp
xor
lahf
push
add
mov
test
roll
ret
cli
mov
fucomp
int3
nop
jge
cmc
inc
dec
sarl
in
push
inc
out
push
xchg
nop
in
int3
adcl
mov
fnstsw
call
scas
dec
pop
xor
mov
imul
dec
fucomip
sub
shlb
cmpsb
test
ds
jns
mov
add
sahf
xor
imul
sub
mov
cli
push
mov
dec
fwait
sub
hlt
cmc
bound
cmp
cmp
mov
sub
cmp
imul
nop
aam
pop
sub
mov
cli
lds
test
cmp
bound
repnz
cld
push
mov
adc
das
rolb
jae
dec
popa
sti
iret
cld
pop
sub
push
push
and
push
inc
cmp
push
xchg
mov
or
in
jl
ljmp
push
push
mov
pop
in
rolb
pop
hlt
xchg
fcmovbe
adc
int
fiadds
pop
lahf
xchg
push
in
stc
shll
push
test
jl
hlt
stos
sub
bound
stc
stc
cmp
ds
add
pop
lock
push
cmp
repnz
cld
mov
out
fimuls
cmp
mov
mov
pop
mov
icebp
int
jnp
lods
push
adc
aaa
mov
std
out
xor
inc
mov
mov
mov
push
add
gs
dec
pop
cld
loopne
mov
test
inc
adc
int3
pop
adc
lret
les
cs
ljmp
lock
cld
and
fsubrp
cmp
cmp
cmpsl
xor
dec
mul
cmpsl
pop
mov
daa
inc
and
sbb
ret
mov
sahf
inc
cwtl
sub
frstor
fists
xor
and
fistps
xor
dec
xchg
pop
xor
dec
imul
dec
mov
hlt
mov
test
mov
es
fs
test
bound
dec
xor
arpl
out
or
jb
lea
sub
lret
loopne
adc
xlat
fwait
xor
cmp
cmpsl
ds
iret
or
jb
and
jno
cmp
mov
ret
xor
dec
mov
adc
les
dec
xchg
sbb
sub
cs
in
add
mov
and
sbb
aas
ds
idivb
pop
pop
in
out
xchg
xor
add
adc
jo
dec
decb
popa
xchg
cld
sarl
xlat
in
adc
sbb
adc
adc
mov
aas
push
dec
shlb
cld
dec
das
inc
rclb
adc
cli
fstp
mov
test
ds
in
jns
mov
push
lcall
add
bnd
cltd
shufps
fcmovu
push
push
xchg
popfw
xchg
jl
lahf
fcoml
jae
ds
push
jecxz
mov
cmp
mov
jmp
fisubl
xor
es
sub
fnsave
rcrb
rorb
mov
sub
fisubrl
int
pusha
push
fisttpl
leave
mov
push
push
adc
xor
jae
adc
icebp
push
add
hlt
jl
test
dec
cmpsb
mov
push
aad
pop
xor
clc
inc
xor
icebp
pop
mov
cmp
inc
cs
movsb
into
or
inc
into
xor
shl
jno
ljmp
lds
jbe
jnp
movsl
stos
xchg
je
fldpi
dec
in
dec
daa
addl
fstl
and
push
dec
adc
sbb
hlt
aas
push
into
dec
sub
mov
imul
sub
mov
jno
sub
push
sub
jne
loop
sub
sbb
and
jae
dec
mov
bound
and
pushf
in
mov
aaa
inc
cmp
repnz
sti
push
push
nop
out
scas
popa
mov
das
popa
and
insl
and
scas
and
in
pop
mov
push
ret
icebp
and
xor
sar
sbb
cli
inc
pop
fimuls
xor
js
in
stos
or
mov
dec
sti
je
jo
popa
pop
mov
add
or
les
mov
sub
pop
cmp
out
test
idivl
dec
or
ds
das
inc
xlat
push
aaa
push
push
jnp
lock
inc
jbe
into
pop
push
pop
add
sbb
idivb
lds
mov
mov
xor
xor
and
xchg
mov
cmp
roll
xor
pop
addb
adcl
mov
fiadds
je
addb
pop
or
scas
icebp
xchg
push
mov
mov
scas
insl
mov
mov
rorl
aaa
leave
into
aas
lcall
fimuls
sbb
dec
imul
mov
adc
ret
dec
pop
or
movsb
mov
hlt
lods
arpl
dec
test
cwtl
push
into
cli
repnz
loopne
cs
cld
mov
in
mov
mov
std
mov
mov
sbb
cld
dec
dec
cmpsb
in
jo
sahf
cld
mov
mov
jmp
adc
in
shlb
loop
mov
cmp
out
adc
faddl
in
ljmp
test
and
into
je
iret
fisubrs
add
shl
pop
je
cmpsb
or
ret
lods
loop
or
mov
sub
outsl
jb
or
or
cld
pop
pop
repnz
js
and
dec
jo
ss
push
ds
cmc
call
add
int
clc
xchg
pop
enter
push
mov
sub
loope
jb
jl
cltd
inc
cli
lretw
bound
mov
das
adc
das
cltd
push
add
inc
xchg
in
out
mov
icebp
lcall
aad
push
inc
cmp
or
dec
mov
xor
hlt
fistl
cld
dec
arpl
fisubs
xor
pusha
decb
mov
push
lahf
das
adc
cltd
mov
pop
fcmove
inc
repnz
push
test
cld
sbb
jl
xchg
dec
adc
xchg
cld
jge
test
adc
shll
lds
clc
cmpb
mov
sub
loop
aam
xor
ss
stos
sbb
mov
mov
and
inc
jmp
jmp
call
cwtl
xchg
ljmp
mov
sub
ss
iret
movsl
out
repnz
sub
mov
es
inc
dec
popa
mov
stos
add
jno
cmpsb
adc
hlt
int3
jb
add
repnz
leave
fdivrs
push
std
lret
mov
push
jbe
jmp
mov
fmull
sub
mov
inc
push
push
out
in
mov
mov
push
push
leave
inc
jmp
ss
jp
outsl
push
rol
xchg
pop
test
push
hlt
fs
xchg
cmc
pop
and
pop
lods
stos
jmp
sbb
xchg
push
adc
xchg
dec
popa
in
adc
mov
idiv
rol
pop
or
loopne
or
cmpsl
orb
mov
inc
push
or
cwtl
lds
push
loope
repnz
jnp
mov
mov
dec
lcall
mov
xchg
dec
and
les
pushf
std
mov
xor
dec
ljmp
ret
xorl
mov
adc
push
fldenv
subl
mov
pushf
and
mov
addb
or
xor
rcrb
aam
xchg
or
fisttpll
cld
sub
and
aad
test
cmp
or
bound
pcmpgtd
push
enter
cmp
inc
jb
adc
jnp
ret
add
fsubrp
lods
out
push
inc
or
adc
stos
fdivl
mov
mov
pop
insb
sub
jp
sub
ret
inc
push
xchg
decl
inc
sbb
sti
test
fsubrs
notl
jl
in
sahf
sub
pop
inc
ljmp
cltd
daa
imul
lret
pushf
sub
dec
sbb
movsb
lods
jns
pop
pop
inc
pusha
jle
mov
aam
std
jecxz
adc
dec
rclb
in
rcrl
jp
int
push
xor
das
add
gs
cmp
inc
iret
jmp
outsl
jle
dec
daa
cmp
mov
hlt
pop
dec
in
cmp
push
adcl
lret
popf
lret
inc
mov
pop
push
orl
pop
cmp
xlat
and
xorb
cmpsl
xchg
fwait
pop
hlt
lods
data16
add
or
nop
fwait
cmp
mov
pop
popf
jl
loop
aam
cmp
dec
mov
push
mov
push
mov
push
mov
push
lahf
loop
jle
mov
cmp
pop
adc
lds
lcall
popf
pop
mov
xorb
push
jl
mov
cmp
in
cmp
xor
fdivs
cmp
add
push
pop
jmp
xchg
rcrb
fcoms
pop
xor
out
xor
cmp
sub
mov
sahf
in
and
xor
ds
xor
cmpsb
xor
negb
lods
and
cmp
dec
iret
mov
cmc
xchg
pop
sub
jno
sbb
pushl
fs
sbbl
movsb
roll
rclb
sub
mov
pop
xor
sbb
test
cmp
lcall
jecxz
stos
aad
jg
mov
cmp
add
add
sub
pop
jge
xchg
pop
movsl
mov
xchg
test
fnstcw
sahf
mov
fnstenv
xchg
push
and
test
xlat
fcomip
xchg
das
xor
lods
xor
cmp
or
xchg
add
cmpsb
push
inc
mov
das
mov
inc
xor
aam
es
mov
fcmovb
data16
xchg
frndint
notl
mov
js
lea
inc
ficoml
sti
inc
xchg
xchg
ficoms
mov
dec
clc
jo
or
movl
xor
andb
pushf
repz
ss
pop
sbb
cs
ret
jp
xor
hlt
hlt
jne
aas
add
scas
push
push
push
ret
add
aaa
addr16
repnz
inc
out
adc
cmp
int3
inc
cmp
repnz
pop
cmp
insb
dec
jl
dec
sub
pop
lahf
test
pop
ds
xor
test
pop
leave
mov
dec
mul
push
dec
pminsw
dec
psllq
push
lcall
std
xchg
pop
sub
lods
lea
not
add
icebp
ds
xchg
and
xorb
fdivl
dec
mov
js
or
sub
repnz
adc
int3
jae
xor
jmp
outsb
int
and
int
into
sub
sub
fnstsw
xchg
in
insb
push
pop
xor
pop
test
pop
ss
cmp
es
ss
dec
jg
in
loopne
push
negb
cmp
insb
lds
lea
or
out
jp
mov
rolb
shl
bound
in
sti
imul
rolb
add
dec
mov
jle
mov
pop
dec
ljmp
sub
sub
xlat
into
add
sbb
movsl
mov
loop
clc
ss
lock
hlt
xor
lea
roll
sbb
lcall
jl
xchg
add
sub
insb
repnz
inc
xor
pop
outsl
jecxz
in
xchg
iret
sbb
ljmp
pop
xlat
enter
and
pop
outsl
xlat
and
clc
dec
mov
pushf
fs
cmc
inc
inc
insl
ja
je
ret
test
pushf
es
cwtl
stos
movsb
push
pop
mov
mov
push
push
xor
cmpsb
jmp
loopne
push
hlt
mov
xchg
xchg
add
push
push
sub
repnz
lds
jne
pushf
xor
lahf
jl
inc
xor
imul
dec
insl
jmp
jmp
pushf
je
mov
add
and
push
fucomi
pusha
jle
xor
into
adc
aas
mov
test
bound
pop
loope
xor
cld
scas
dec
fiadds
je
sub
bound
enter
cmp
lret
movsl
seto
sbb
sarb
dec
jbe
pop
lcall
bound
test
sahf
push
add
mov
xchg
pushf
mov
and
sub
xchg
xchg
jg
push
mov
add
dec
jp
fcmovb
adc
arpl
dec
fistl
and
ret
push
pushf
enter
and
cmc
xor
jb
in
cmpsb
or
fadd
push
sbb
jl
imul
jb
stc
sub
filds
mov
inc
idivb
fistpl
in
aaa
jae
arpl
jnp
sub
movsl
sbb
sar
ss
sub
jne
or
int3
jge
pop
push
xor
push
scas
push
fadds
hlt
jge
repnz
adc
pop
decl
js,pt
dec
push
bound
xorb
mov
rcrb
js
and
ds
mov
sub
xlat
outsb
push
pusha
lss
adc
fdivl
push
and
push
cmpb
aas
xchg
fdivrs
lcall
pslld
add
aaa
inc
sub
mov
insb
dec
xor
adc
imul
sbb
aam
pop
or
mov
test
mov
outsb
aaa
push
ljmp
mov
aaa
or
dec
mov
arpl
pushf
xchg
cld
push
jp
mov
cmc
je
adc
lret
push
or
mov
sub
sbb
push
stos
bound
cmp
add
and
mov
or
add
jp
fstl
movl
dec
push
inc
mov
inc
jl
lahf
dec
rcr
or
call
pusha
xchg
mov
dec
and
data16
fisttpl
fdivs
fnsave
test
in
mov
mov
xor
loopne
ret
or
insb
and
dec
imul
adc
push
jns
clc
stos
push
jl
lahf
dec
xor
mov
lret
jp
hlt
xchg
adc
inc
ret
adc
cwtl
rorl
mov
cli
inc
mov
pop
addr16
lahf
dec
or
pop
hlt
inc
push
testl
psubusw
loopne
push
mov
xchg
mov
push
imul
mov
xor
and
mov
mov
ds
mov
clc
das
jp
repz
push
jp
cli
call
hlt
inc
pop
lock
dec
xchg
insl
lods
lea
insb
pop
fisttpll
gs
mov
sub
cmp
out
pop
mov
xchg
xorl
xor
cmp
jmp
mov
loop
arpl
cmpsl
cs
aad
xor
mov
pop
push
dec
xchg
or
add
adc
ret
mov
scas
in
fwait
and
adc
or
add
adc
sub
rolb
push
int3
pop
inc
mov
inc
mulb
xor
adc
rcrb
and
sub
cwtl
push
push
cwtl
cmp
or
mov
add
daa
sbb
mov
xchg
pusha
adc
fsubrs
cmpsl
cmpb
cld
or
loopne
ds
mov
mov
cld
pop
mov
sub
add
xor
movsb
fdiv
minps
adc
mov
enter
sub
in
outsb
mov
mov
shl
subb
ss
daa
or
ljmp
push
xchg
lcall
imul
test
mov
cmp
out
sbb
in
sbb
lret
movsl
ss
mov
outsb
stos
pop
fcomps
mov
jmp
sbb
outsl
insl
sbb
arpl
inc
cmp
into
lods
scas
aad
pop
cmpsb
subb
xor
sbb
stos
lock
dec
mov
xchg
inc
xor
incl
pusha
in
outsl
test
push
cld
testb
sbb
cmp
dec
dec
fistl
mov
hlt
sbb
cld
and
sub
push
clc
push
push
xorb
cmpsl
push
mov
mov
sub
pop
and
leave
fisubrs
xchg
mov
lock
into
shll
nop
test
ja
push
push
daa
or
xchg
pop
jle
cwtl
push
lcall
push
mov
outsb
sbb
xchg
push
adc
xchg
jp
aam
xchg
insl
jl
ret
xor
sar
mov
adc
sbb
adc
into
call
xchg
jp
jno
inc
dec
push
mov
insb
inc
out
xor
aas
jp
xchg
cmp
int3
test
mov
fcmovb
je
xlat
aam
shr
xchg
pop
ljmp
or
ja
pop
int3
rcrb
sbb
pop
test
std
rorl
faddp
sub
add
xor
pop
pop
dec
dec
aam
cmp
mov
shlb
inc
cmp
xchg
xchg
pop
into
xchg
sti
filds
mov
inc
push
lcall
inc
push
mov
push
pop
and
jbe
cmp
lods
jmp
cmpl
or
hlt
xor
mov
negb
loopne
adc
xor
sub
sub
and
leave
lds
inc
aaa
cmp
xor
sub
jle
ret
pop
repnz
sbb
mov
pusha
mov
xor
mov
test
mov
jl
les
mov
sbb
mov
cltd
dec
dec
add
rorb
out
pop
jle
cltd
outsl
mov
jmp
jae
sbb
hlt
or
outsb
das
mov
inc
icebp
mov
adc
stos
test
jo
je
shrl
jnp
mov
jnp
shrl
in
and
outsl
push
add
test
mov
dec
cmpsb
stos
xorb
jmp
sbb
add
push
jne
pusha
xlat
xor
pop
cmp
bnd
dec
inc
sbb
cwtl
push
sbb
xchg
add
add
cltd
frstor
arpl
rcrl
test
scas
pop
rcr
sbb
or
xchg
pusha
adc
jno
shl
aad
pop
add
call
enter
push
fisubs
cwtl
and
and
inc
enter
scas
and
xor
add
add
cld
in
sbb
xchg
shlb
into
and
pop
add
adc
test
sbb
and
and
pop
or
pop
cmpsl
inc
jo
sub
jne
sbb
pop
cmp
dec
mov
xchg
call
adc
jl
xchg
xchg
mov
jmp
inc
in
mov
negl
xchg
adc
insb
adc
mov
data16
inc
jbe
arpl
cmp
in
les
mov
movsb
rcr
mov
push
lahf
adc
test
ret
jp
xor
push
jnp
jecxz
mov
imul
mov
xchg
pop
add
push
jb
aam
push
mov
push
dec
fbstp
jbe
xor
mov
mov
lds
mov
popa
xor
pop
push
loop
mov
scas
arpl
lock
test
inc
rcll
mov
scas
and
sub
sbb
sahf
mov
cmc
leave
outsl
sbb
mov
test
fxch
sahf
out
push
push
shlb
dec
test
mov
test
pop
test
bound
sub
pop
test
push
pop
xchg
aam
sub
repnz
push
cmp
int3
cld
lcall
push
ds
cwtl
dec
test
iret
fsubl
pop
cmp
scas
cmp
mov
ja
cld
cli
mov
push
mov
and
pop
adc
pop
adc
cmp
mov
lods
pusha
mov
out
jne
ret
cmp
movsb
dec
pushf
dec
lock
xor
in
sbb
sbb
inc
int3
lods
and
scas
addr16
adc
mov
js
ror
rcrl
cmp
ss
xchg
and
mov
les
pushf
imul
stos
cmpsl
jmp
cld
dec
dec
inc
pop
mov
test
jp
dec
push
mov
xchg
and
fwait
cld
mov
jecxz
icebp
xor
arpl
repnz
cli
jb
dec
movsb
sbb
rcll
mov
jns
xchg
pop
cmp
inc
adc
mov
cmc
fbstp
not
negb
fcomi
push
jp
mov
cmp
xchg
dec
fimull
pop
cmc
sahf
in
cmp
xor
nop
mov
or
hlt
outsb
mov
in
adc
pop
mov
ret
ret
sahf
mov
cwtl
pop
xor
xorb
cmp
mov
ja
hlt
push
adc
cmp
imul
aaa
repz
into
xlat
pop
fstl
adc
mov
sarb
mov
dec
test
jl
ljmp
rolb
fisttpll
cmp
inc
adc
cmp
sbbl
ljmp
mov
mov
jmp
sbb
dec
loope
imul
push
xchg
ljmp
sub
fwait
or
pusha
push
push
inc
test
leave
mov
sub
mov
xor
outsb
adc
dec
lcall
mov
xchg
aad
shlb
in
pop
dec
jnp
movsl
mov
adcl
fadds
roll
movsb
aas
fsubrs
adc
mov
lock
movsl
mov
mov
movsl
jns
mov
ja
and
insb
iret
jl
jecxz
mov
and
gs
lret
mov
in
je
push
dec
shrb
arpl
in
xor
in
or
loop
gs
xchg
sub
push
xchg
sub
fs
sub
shlb
scas
in
xor
fdivrp
ja
mov
or
shlb
cmc
cmp
push
add
jae
and
sysexit
js
out
add
mov
xor
xor
ret
sub
rcrl
pop
mov
mov
adc
xor
inc
lea
lock
jb
imul
cmp
pop
fcomi
loopne
imul
xorl
sbb
add
add
and
ljmp
test
mov
push
in
lcall
xor
xchg
lea
popa
sbb
scas
adcb
push
sarl
sbb
hlt
push
cmpsl
addr16
push
outsl
xchg
and
pop
stos
loope
adc
mov
test
cmp
mov
scas
je
push
in
loopne
inc
jge
in
push
addr16
sub
cltd
xorl
pushf
adc
sub
xor
cmp
mov
mov
cmpb
dec
mov
and
leave
add
or
in
call
pminub
sbb
incb
mov
and
and
imul
ds
aas
cmp
push
xchg
cmp
das
and
cmp
mov
mov
push
repz
pop
xor
ljmp
subl
ljmp
ds
mov
mov
pushf
setp
jp
clc
dec
adc
mov
cmp
xlat
cld
adc
into
ss
lods
xor
xchg
aam
nop
sub
lcall
jmp
mov
sbb
test
data16
push
fdivrs
les
mov
jbe
pop
dec
outsb
xchg
mov
push
rcl
hlt
pop
orb
jp
cltd
adc
popl
movsl
shlb
sbb
mov
pop
sbb
hlt
push
adc
lods
dec
adc
push
in
mov
ljmp
je
jl
mov
cld
pop
repnz
movsl
jno
xchg
popf
lods
addl
js
cmpl
je
mov
pop
mov
cmp
out
push
dec
pminsw
cwtl
arpl
arpl
cwtl
negb
mov
mov
sbbl
lret
and
das
popa
dec
in
lcall
testl
xor
inc
mov
pop
in
test
or
enter
mov
dec
cwtl
fcoms
push
cmpsl
fistpll
cmp
mov
idivb
fmuls
dec
cmpsl
test
push
dec
cmp
mov
or
dec
pop
lea
mov
lahf
nop
stos
fstps
test
dec
lcall
fisubrl
aas
xor
push
outsl
imul
and
add
sub
inc
jnp
aam
dec
dec
rolb
add
fsubrs
dec
scas
rcrl
lahf
ljmp
adc
popa
dec
jmp
fwait
out
mov
xchg
mov
lahf
mov
shrl
xchg
xchg
aad
idiv
and
lds
int3
mov
loope
ret
pop
jmp
jb
aad
xor
ffreep
rcrl
lret
stos
movb
or
xchg
arpl
mov
and
cmp
in
icebp
adc
mov
gs
dec
mov
cmpl
and
je
mov
add
cmp
mov
pop
jnp
aas
mov
or
insl
lea
cmp
adc
jecxz
mov
add
cmpb
xchg
cmpb
aam
outsb
mov
pop
aaa
shlb
mov
cmp
dec
jg
repz
lcall
subl
in
outsb
xchg
mov
clc
lret
outsb
mov
adc
sub
nop
aam
xchg
faddl
push
sbb
mov
xchg
in
fiaddl
idivl
and
repz
jmp
fcoms
int3
and
mov
pop
push
int3
into
add
cmp
in
clc
fwait
imul
test
add
and
push
jg
shll
xor
outsl
aam
xor
add
cli
xor
sub
icebp
mov
hlt
jb
shl
push
enter
mov
sub
jg
sub
addr16
loope
xchg
pop
sub
and
test
data16
test
js
fs
jmp
mov
pop
xchg
inc
sub
fwait
out
inc
rcrb
lcall
and
scas
test
mov
xchg
adc
mov
pop
into
jno
pop
mov
sbb
jb
jmp
lds
bsr
sub
enter
or
into
call
mov
bound
rcll
hlt
mov
jl
les
popf
or
mov
adc
push
in
movsb
bound
cmc
mov
cmovae
cmp
xorb
cld
ss
adc
in
cmp
sbb
daa
jle
repnz
inc
les
inc
rcrl
inc
lretw
icebp
ds
xchg
ret
adc
sub
and
dec
push
mov
test
data16
stc
dec
push
mov
pop
sbb
cltd
adc
mov
daa
sti
lock
mov
sub
shrb
mov
cmp
fisubrl
cmp
mov
imul
push
pop
cmc
sub
push
xor
sub
xor
cmp
sub
jle
xor
dec
push
cmp
add
fisttpll
adc
nop
jmp
fisubs
insl
mov
mov
das
jecxz
mov
shlb
pop
addr16
inc
call
jno
leave
daa
cli
sub
scas
lret
add
sub
dec
xchg
jmp
sub
dec
xor
mov
xchg
sub
adc
add
fists
mov
test
mov
dec
dec
loopne
sti
lock
aam
ret
mov
cwtl
aam
sub
sbb
fbstp
push
pop
mov
pushf
hlt
pop
cs
aaa
pushf
mov
daa
inc
mov
dec
rol
lahf
mov
mov
loope
dec
mov
sub
mov
shrb
into
adc
xor
adc
test
imul
mov
inc
sub
enter
shrl
adc
xchg
or
sub
sub
pop
out
mov
or
add
shrl
das
daa
rcl
sti
mov
sahf
shlb
sbb
lods
mov
add
add
push
mov
aaa
fstpt
out
sarb
dec
push
aam
mov
inc
mov
sub
mov
push
xor
or
pushw
mov
cmp
in
enter
pop
lcall
test
outsb
jnp
inc
sub
cmpsl
mov
ljmp
ret
pop
notb
pmulhuw
jo
lcall
insl
out
xchg
cli
mov
ljmp
ror
imul
mov
xchg
cmpsl
lret
jmp
inc
xor
inc
xor
add
inc
jg
cld
popa
ret
inc
adc
js
inc
lret
cmp
mov
fadd
and
pop
sub
insb
mov
xchg
aaa
xor
xchg
aas
pop
ds
bound
ja
sbb
cmp
xchg
out
mov
ljmp
sbb
mov
adc
aam
insb
jnp
cmp
inc
add
xchg
sub
xchg
repnz
xor
or
adc
sub
jl
movsb
rcrl
ljmp
sub
or
iret
ljmp
int3
pop
pop
popf
pop
xchg
mov
pusha
dec
mov
sub
mov
xchg
cmp
call
cwtl
ds
mov
inc
lret
inc
jne
testb
xchg
stos
inc
xchg
loopne
dec
mov
leave
mov
addl
xor
jle
out
pop
cmp
fdivrs
jb
into
sub
push
mov
mov
jecxz
mov
push
sbb
mov
xor
lock
cltd
dec
icebp
adcb
aas
xchg
aam
mov
jl
sub
push
adc
fdivrs
in
mov
in
aas
mov
push
jp
sbb
jp
jo
scas
movsl
inc
mov
dec
cli
push
shrb
mov
mov
jmp
mov
lds
and
pop
mov
movsb
sarb
push
scas
push
aas
iret
adc
dec
pushf
sub
pop
pop
mov
add
int3
jp
nop
and
imul
xor
sub
push
rcll
imul
stos
fidivrl
or
mov
mov
xor
cvtpi2ps
pop
cmp
pop
imul
xchg
and
stos
mov
imul
test
sbb
imul
test
xchg
xchg
cld
daa
xor
imul
or
sti
shr
jno
cmp
leave
add
aaa
in
mov
adc
jns
xchg
mov
adc
mov
shr
in
shlb
sub
xor
scas
jnp
in
inc
or
dec
cmp
scas
cmp
adc
in
mov
repz
lcall
sbb
or
sahf
adc
stos
pop
jle
push
dec
cld
sub
lret
cld
lea
xchg
popa
dec
pop
inc
jl
xor
aas
out
clc
cmc
je
iret
out
push
movsb
mov
lods
lahf
shrb
dec
sbb
pop
sub
sbb
in
in
cli
test
negl
andl
lret
jge
push
mov
andl
rclb
mov
int3
push
push
xchg
std
inc
xchg
orl
mov
pop
jnp
xor
jbe
cs
jmp
call
lret
pop
pop
sti
fmuls
mov
mov
sti
es
out
cmp
or
sub
adc
or
movsl
cli
push
fs
loopne
lods
lds
pushl
fdivrl
inc
fsubr
jns
fcomps
fsts
mov
push
cmpsl
mov
dec
jb
rcrl
test
pop
fdivs
inc
adc
popa
ljmp
rolb
bound
fadds
jae
ljmp
mov
scas
je
lret
jbe
mov
lahf
shr
subb
test
gs
daa
in
cmp
loop
sub
push
clc
pusha
pop
repz
dec
adc
and
mov
orb
mov
sub
and
mov
mov
xchg
rorl
mov
xchg
jl
bound
or
mov
pusha
sbb
sub
mov
inc
arpl
sbbl
mov
push
pop
lods
sbb
or
jp
mov
inc
jae
and
adc
add
cmp
jnp
adc
sbb
dec
mov
pop
arpl
dec
add
les
dec
add
pop
movsb
dec
mov
pop
pop
fsub
add
clc
sbb
jmp
adcb
rcrl
repnz
dec
ds
stos
push
mov
popa
lret
test
mov
fmuls
imul
rol
and
add
fidivrl
jmp
cwtl
enter
pushf
dec
xchg
adc
enter
popa
stos
ret
pushf
dec
and
fdiv
into
out
inc
xlat
and
push
xor
cmpsl
cs
inc
adcl
dec
mov
jae
inc
inc
inc
insb
notl
pop
aam
xor
repnz
inc
sbb
or
add
clc
gs
sub
dec
movsl
aad
inc
cmp
mov
mov
or
shrb
aaa
cmpsl
ret
sub
pop
jae
fimuls
or
and
or
jg
sub
mov
inc
leave
cwtl
push
add
sub
pop
stc
andl
outsl
jb
push
in
mov
inc
cmp
push
in
xchg
test
or
ja
ljmp
mov
fs
cmp
pushf
enter
lret
movsl
or
and
out
sub
dec
jbe
out
out
xor
fwait
sti
mov
andb
cmc
dec
dec
pop
inc
xlat
push
in
mov
or
inc
and
push
adc
xorps
cwtl
orb
call
or
insl
sub
bound
dec
jnp
cmpb
arpl
pop
push
hlt
inc
shrb
pushf
cmp
jecxz
cmc
xchg
aaa
test
bound
out
mov
imul
sarl
and
adc
mov
stc
push
jbe
movsb
push
jp
mov
push
dec
mov
dec
lgs
and
bound
cmp
sub
sbb
inc
xchg
test
lcall
fnstcw
mov
popf
cmpsb
hlt
je
lock
push
jno
push
adc
scas
call
cmp
mov
test
jle
pusha
add
ds
xchg
push
xlat
pop
adc
sub
mov
mov
ja
and
mov
cld
sub
pop
push
stos
dec
ficoml
arpl
lret
movzwl
in
repnz
xchg
iret
fidivrs
fsub
and
mov
jl
adc
xor
adc
outsl
xchg
fsub
or
xor
cmp
cmp
add
push
adc
fisubrs
out
add
inc
shlb
repz
out
jecxz
and
push
mov
ret
lret
mov
andl
popaw
rolb
fwait
jo
test
mov
cwtl
pop
cmpb
stos
int3
jl
dec
jmp
add
outsb
lahf
in
jle
fwait
dec
mov
insl
or
rcr
add
push
dec
adc
es
pop
xchg
cmp
daa
jb
or
mov
rcrl
test
incl
xchg
fwait
sub
sbb
out
xchg
xor
fdivp
fmuls
in
inc
fdivrs
into
push
dec
cld
bound
mov
cmp
adc
xor
enter
inc
iret
rcrb
adc
aam
ljmp
add
jle
pusha
outsb
lds
push
push
test
xor
pop
je
pop
leave
addb
pop
mov
int3
push
sbbl
outsl
in
lods
mov
cmp
or
jle
cmp
xchg
roll
inc
fcompl
test
fimuls
jmp
cmp
sahf
dec
jbe
push
in
out
cmp
add
xchg
cmp
sbb
push
inc
mov
and
lret
push
dec
call
sbb
sbbb
cld
lret
stc
mov
test
or
xchg
mov
cltd
call
sarb
xlat
clc
ljmp
jmp
addb
jbe
jbe
push
push
cwtl
jbe
fnstsw
mov
xor
mov
insb
arpl
pushf
outsb
cld
pop
push
mov
stos
hlt
mov
inc
dec
sub
cmpsl
stos
out
scas
cwtl
sub
pop
in
jno
fmull
lea
in
cmp
int
out
push
cltd
push
sub
xchg
scas
icebp
ret
sti
int3
xchg
push
inc
add
sub
icebp
jg
push
mov
lock
mov
test
test
ds
jb,pt
js
outsl
call
xor
inc
call
insl
push
cmp
mov
pop
pop
jb
mov
pop
lret
pop
stos
add
pop
jo
adc
mov
xor
popa
adc
add
mov
xor
js
sti
out
fsub
or
and
test
sub
out
adc
aas
imul
ret
in
test
push
lea
pushf
mov
pop
or
sbb
inc
fisttpll
dec
ljmp
inc
popa
fdivrl
call
sub
cmp
jle
cmp
mov
incl
cmp
dec
or
add
imul
mov
es
pop
mov
hlt
mov
mov
cli
iret
icebp
aad
das
mov
xor
retw
into
fdiv
pop
sbb
or
and
mov
es
xchg
xchg
lret
idivb
cmpsl
mov
out
inc
sub
nop
lods
jge
add
sub
data16
fwait
xchg
xor
sub
sub
lret
adc
add
pop
pop
dec
ds
lahf
xor
and
mov
jecxz
jbe
loop
mov
dec
mov
inc
inc
push
mov
xchg
mov
sti
and
mov
call
popf
cmp
mov
cmpsb
cmp
dec
into
inc
pushf
jmp
xchg
mov
pop
in
hlt
or
loopne
jo
mov
es
push
in
pop
mov
idivl
cmp
les
popa
pop
ds
cld
pop
xor
xor
xor
mov
pop
mov
dec
sti
dec
pusha
push
mov
push
fsubs
inc
cld
pop
scas
xchg
mov
push
fistpll
repz
stc
add
cmovno
inc
dec
sbbl
aam
bound
xchg
pop
into
dec
fisttpll
push
dec
jns
add
insb
lahf
insl
pop
push
cmpsl
and
inc
insb
sub
mov
jmp
bound
sub
inc
mov
popl
jae,pn
mov
cmp
stc
adc
or
rcl
jp
mov
or
inc
sub
ljmp
jae
add
outsl
filds
cli
sbb
mov
mov
xor
xchg
or
dec
mov
push
mov
cmp
int3
mov
add
arpl
mov
decl
loop
scas
aas
out
test
xchg
or
out
lds
xor
mov
in
sbb
push
fisubs
inc
xchg
insb
pop
jae
mov
mov
mov
sbb
lcall
adc
dec
repz
jbe
pop
fwait
aad
jbe
aam
inc
add
sti
shrl
dec
sub
adc
mov
cmp
mov
cmp
mov
xchg
lock
inc
lret
in
punpckhwd
push
repz
mov
hlt
lods
dec
sub
sbb
in
out
or
popa
stos
not
and
rorb
shrb
jg
push
shlb
xchg
dec
mov
xchg
xchg
pop
cmc
cwtl
mov
mov
mov
sub
mov
test
out
loope
jl
cmp
out
push
dec
or
cmp
out
lds
lret
jb
into
jns
testb
icebp
dec
xchg
sub
decl
shrb
pop
or
push
and
je
dec
in
mov
addl
xlat
push
xlat
insb
dec
in
adc
sti
ds
dec
sbb
mov
adc
sub
dec
lods
shlb
adc
popa
testl
pop
mov
popa
pop
dec
jne
mov
aam
cmp
jl
pop
ljmp
push
repnz
mov
outsl
outsl
movsb
bound
addl
xor
clc
mov
push
outsl
cld
sbb
fadds
sub
jns
adc
sub
cwtl
inc
cmp
sub
repz
mov
xor
pop
stos
subl
call
pop
inc
pusha
in
xchg
je
inc
mov
inc
jbe
xlat
dec
or
test
jle
sub
les
xchg
xchg
gs
xlat
fcoms
dec
mov
repz
in
aam
icebp
in
scas
cli
xor
adc
test
pusha
or
dec
adc
inc
cmp
xchg
shrb
data16
xchg
cs
cmp
enter
sub
dec
mov
push
in
cmp
loope
xchg
push
sub
jne
decl
xchg
pop
adc
out
rcr
cmp
sarl
dec
push
pop
dec
push
dec
fidivrl
fldlg2
scas
stc
xor
dec
ret
outsl
sub
and
cmp
bound
call
sarb
cwtl
jge
lock
adc
rcll
mov
js
mov
cmp
xchg
mov
mov
lahf
hlt
mov
lahf
push
jne
mov
sbb
xor
bound
loopne
inc
negb
inc
pop
or
lods
push
mov
cmp
push
bnd
push
jo
inc
jbe
add
aas
js
pop
or
mov
sarl
popa
stos
loop
push
pop
and
in
pop
pop
cmp
pop
mov
cmc
cltd
sbb
sbb
mov
hlt
adcb
pop
jo
push
mov
pop
decb
mov
xor
mov
call
jmp
enter
adc
test
scas
ss
jo
or
movsl
push
rorl
xor
dec
and
jle
mov
test
mov
xor
inc
jmp
dec
jp
mov
push
xchg
sbbl
pushf
cltd
hlt
or
mov
and
pop
pop
jl
out
adc
test
mov
xchg
inc
push
cli
movq
xchg
adc
mov
out
jl
vpmacsdd
xchg
pushf
dec
pop
xchg
mov
pop
xor
test
and
push
or
mov
or
fstpt
insb
fists
movsl
add
add
adc
cmpsb
or
mov
lret
mov
mov
ja
out
ljmp
cmpsb
or
test
sub
mov
negl
fs
xchg
jnp
insb
cld
mov
mov
pusha
out
jmp
jb
inc
pusha
lcall
push
bound
xchg
mov
aas
push
jnp
pusha
pop
fsubl
mov
or
fs
out
call
mov
and
shrb
hlt
sbb
or
cwtl
inc
push
mov
dec
push
mov
cwtl
je
add
aam
enter
aam
or
adc
push
adc
jo
dec
in
jae
xchg
cwtl
sub
in
mov
call
jp
lock
xor
outsb
out
sar
and
xchg
in
cwtl
loopne
pop
scas
cmp
shlb
cmpsb
ss
fidivl
or
mov
add
dec
into
out
cwtl
sar
das
sbb
fs
les
and
xchg
fs
inc
dec
stos
sar
lods
mov
and
ret
leave
fs
into
push
in
mov
pop
data16
insb
mov
push
dec
xchg
pop
icebp
pop
cmp
sbb
movsb
pushf
inc
aas
mov
jge
lods
pop
movsl
loopne
inc
xor
and
pop
out
test
cmp
adc
nop
ds
pop
lret
cmpsb
decb
lahf
xchg
xchg
cmpsl
adc
mov
scas
in
lret
enter
sbb
xchg
iret
aaa
decl
and
sbb
out
cmp
movsb
cmc
lds
mov
xor
mov
loop
adc
shrb
imul
mov
mov
fisttps
mov
in
rcrl
insb
xor
or
rol
add
mov
cmp
stos
mov
xor
in
pop
sub
pop
pusha
hlt
mov
pop
in
mov
cmc
add
inc
pop
mov
cltd
popa
lods
mov
out
stos
int
dec
ja
into
aaa
incb
test
sbb
jle
jnp
mov
test
xchg
jge
cmp
adc
jmp
sbb
test
dec
pop
test
lods
xchg
ds
jge
iret
shlb
add
mov
lcall
addr16
enter
je
movsl
pop
and
nop
push
sub
jl
push
cmp
cmp
out
push
iret
js
xor
aad
nop
lock
xor
in
repnz
inc
push
cld
aam
sbb
fsts
lahf
mov
scas
ss
pop
jo
mov
repnz
fsubrl
pushf
dec
inc
outsl
loop
mov
xlat
mov
movb
xchg
jae
jecxz
push
mov
pushf
addr16
mov
sbb
cmp
mov
cld
pop
imul
jns
mov
sub
imul
adc
inc
pop
adc
xchg
aam
pop
shlb
xor
add
loope
push
cltd
lret
movsl
mov
incl
mov
jmp
xor
sbbl
xchg
xchg
push
mov
and
and
fisubrs
dec
or
sub
jb
ljmp
sub
and
mov
imul
in
sbb
xor
sub
mov
pushf
dec
outsl
dec
jae
test
hlt
xchg
xor
ret
imul
dec
xchg
mov
mov
movsl
das
pop
xor
iret
dec
inc
daa
repz
or
das
dec
aas
test
inc
inc
cmp
jb
or
lahf
fcmovnb
rcl
mov
cltd
loopne
xor
hlt
xchg
and
dec
xchg
xor
or
addl
xor
cs
test
xchg
sbb
icebp
and
fs
inc
stos
sbb
inc
arpl
pop
inc
cltd
inc
jle
loop
xchg
sbb
sahf
cmp
inc
pop
mov
cmp
mov
dec
and
cltd
popa
sbb
rcl
clc
fldenv
repz
jle
lods
dec
jbe
mov
push
push
pusha
add
out
or
or
mov
hlt
data16
out
push
imul
fs
xchg
and
push
push
pusha
cmc
movsl
test
or
jmp
dec
mov
or
jae
mov
lds
add
mov
xor
adc
movsb
push
sbb
fdivrl
sbb
sbb
enter
mov
hlt
test
hlt
aam
jbe
xor
mov
shlb
sahf
leave
add
cmpsb
icebp
lds
testl
mov
adc
push
adc
jl
and
nop
mov
pop
push
loopne
out
and
aaa
daa
in
push
movsb
mov
cs
mov
ds
mov
pop
sub
pop
push
add
aam
dec
mov
sub
scas
ljmp
cmpsb
dec
mov
inc
gs
sbb
mov
mov
in
lcall
inc
in
mov
xor
jl
pushl
dec
ret
sbb
imul
push
mov
mov
out
out
or
jp
xorl
dec
clc
in
insb
aas
xor
lret
dec
sub
mov
outsl
pop
inc
movsl
clc
or
addb
xchg
xchg
mov
hlt
out
mov
loopne
sbb
out
xchg
subl
rcll
push
out
lock
test
ljmp
sub
rcrb
inc
add
jp
xor
jnp
movsb
or
repz
cmc
daa
push
and
mov
cltd
push
dec
pop
stc
cmp
stos
cltd
sub
cmpl
xchg
loope
inc
out
addr16
xchg
jp
inc
dec
xchg
flds
aas
or
in
add
mov
mov
xor
pop
xlat
add
mov
jbe
mov
mov
outsl
dec
or
sbb
lock
and
pushf
mov
push
push
xor
push
cmp
xchg
cwtl
push
jmp
call
add
pop
test
nop
rclb
imul
cli
mov
pop
sbb
hlt
xstore-rng
cmpsl
shll
or
mov
ds
sub
mov
cmpl
loopne
loop
mov
cmp
ret
pop
out
mov
shrl
jo
pop
out
clc
mov
push
out
and
scas
cmpsl
dec
xchg
pop
in
jecxz
js
adc
cmp
out
cmc
cmp
jmp
pop
add
inc
or
lock
push
jno
push
pop
int
call
push
xchg
gs
inc
cmpsl
enter
mov
fnstsw
pop
and
ret
fsubrp
in
testl
insl
cmp
clc
aaa
ss
outsl
ja
and
mov
mov
jmp
or
xchg
cmc
jns
shll
in
jae
pusha
lods
inc
cmp
orl
push
leave
ret
push
dec
test
sbb
ds
cmp
mov
notl
mov
mov
adc
and
dec
pslld
loope
cmpsl
fdivrp
xor
mov
dec
xor
jnp
sub
pop
in
mov
inc
or
andl
mov
cmc
or
jbe
jnp
cmp
es
push
jno
addr16
loope
aam
push
fsubr
cmpsb
bound
scas
dec
jb
push
or
lock
jge
xchg
movsl
adc
cltd
lahf
aaa
jnp
mov
ds
mov
mov
movsb
lock
cmpsl
out
pop
aas
push
cmp
cmpsb
and
xor
fdivrs
pop
int
shlb
pushf
mov
pop
sub
movsb
pop
mov
adc
aas
adc
imul
mov
push
jns
or
or
xorl
fneni(8087
and
adc
loopne
pushf
out
out
lods
jo
dec
sbb
add
imul
out
aad
dec
push
icebp
cmp
push
inc
inc
add
test
jns
dec
fldln2
int3
sbb
jg
fs
in
popa
mov
and
xor
lret
mov
ret
mov
cs
movups
outsb
mov
mov
out
mov
test
xchg
cld
pop
push
or
mov
std
ret
pusha
xchg
add
add
mov
lret
cld
incl
dec
insb
test
decl
stos
lahf
push
xchg
rcrl
aaa
jb
fs
stc
inc
imul
or
jg
sub
loopne
data16
shll
popa
dec
mov
push
xor
ret
push
mov
adc
pop
pop
xchg
mov
mov
popf
sub
bnd
shrl
data16
push
mov
mov
stos
aad
jo
shll
add
lahf
xor
bound
jge
lock
push
mov
js
push
out
jl
mov
adc
pop
push
nop
ja
push
jl
aas
ss
stos
fwait
inc
idivb
fiaddl
push
aas
pushf
js
sahf
fidivs
mov
ffree
dec
aad
pusha
inc
hlt
ficoml
inc
out
jno
into
mov
pusha
xchg
mov
clc
mov
fbstp
sarb
push
lock
loop
pushf
inc
push
sbbb
adc
push
pop
dec
jmp
pop
push
pop
jge
sub
mov
sub
pop
mov
push
xchg
rol
mov
dec
ret
xchg
jae
clc
xchg
std
arpl
fimull
mov
inc
xlat
xchg
imul
pop
xchg
mov
mov
filds
in
aas
and
loope
mov
fwait
mov
pop
and
push
lock
imul
subl
dec
outsb
int3
out
movsb
pop
ret
cmp
push
in
cwtl
movsb
inc
popa
mov
ret
xchg
xchg
addr16
mov
test
mov
dec
add
xchg
movsb
dec
in
nop
xor
ficoms
xor
and
inc
out
pop
mov
and
bound
dec
push
mov
pop
xchg
add
pushf
jnp
push
adc
test
or
sbb
ret
test
jo
sub
xchg
pop
ljmp
cld
sbb
xor
shll
pushf
lret
jl
and
dec
in
scas
jg
pop
nop
xor
mov
dec
mov
fnstsw
outsb
sub
jecxz
test
test
data16
outsb
add
push
xchg
cmc
push
in
dec
xor
shlb
leave
repnz
fidivl
xchg
xchg
add
iret
rolb
lock
addr16
add
xor
movsb
pusha
push
int3
div
add
push
cmp
pushf
add
jg
cmp
mov
inc
ljmp
lock
cmc
int3
rclb
dec
test
cmp
add
cmp
int3
and
jp
mov
ja
neg
xor
push
into
dec
sub
popa
sub
jecxz
ja
pop
pop
data16
enter
call
pop
ret
or
fidivs
push
dec
fidivrs
mov
adc
icebp
or
xor
lds
enter
mov
jg
repz
sbb
mov
mov
or
enter
mov
inc
lret
pop
jge
shr
or
aad
push
out
adc
lret
inc
pushf
loope
cld
int
aad
jnp
jl
dec
negl
mov
dec
pop
mov
popf
out
daa
mov
pop
fwait
scas
push
jne
mov
fs
push
xchg
ss
xor
cli
orl
mov
les
cmpsb
sti
movsb
mov
addr16
mov
xorb
scas
dec
cltd
sbb
std
mov
and
mov
in
fs
sbb
addr16
daa
cmpsb
jge
sub
ljmp
int3
cmc
jnp
inc
fsubr
sbb
adc
push
mov
orl
adc
movsb
xchg
dec
sub
adc
jbe,pn
std
mov
adc
mov
ffree
insl
enter
sti
xchg
pop
inc
pusha
lods
xchg
mov
mov
loope
outsl
subl
sbb
iret
sbb
test
popw
imul
bound
or
adc
cld
jle
aas
adc
adc
pop
rcll
xchg
hlt
clc
mov
push
cmpsl
push
stos
loope
aaa
insb
cs
repnz
loop
shll
add
subl
cmpsb
bound
sub
into
lock
imul
fdivrl
mov
fsubrl
in
incl
add
sub
les
and
in
imul
mov
loop
xor
enter
push
jl,pn
jl
mov
icebp
sub
mov
xor
pop
sub
scas
jmp
mov
add
inc
push
nop
lock
sbb
xor
add
push
adc
xor
and
add
inc
dec
test
sbb
pusha
insb
daa
imul
mov
mov
mov
fnstcw
cli
adc
jle
clc
test
xor
xor
mov
mov
inc
and
or
xor
dec
in
fsts
adc
lahf
call
fs
xchg
or
add
mov
hlt
jo
shll
in
xor
pushf
push
jl
add
jae
ljmp
add
sub
mov
push
mov
or
jo
outsl
int3
cmp
rorb
jp
adc
sub
fldenv
add
mov
ret
fsubs
fstpl
sub
sbb
jp
out
fsts
movsb
or
mov
std
dec
xchg
leave
dec
inc
insb
sbb
jno
icebp
cwtl
fdivrl
addb
dec
jae
dec
ja
xchg
addl
xchg
mov
jl
mov
push
sbb
and
testb
mov
insb
xchg
sbb
loope
outsb
fmuls
xchg
cmp
test
lret
in
iret
fnstenv
test
cmpl
daa
clc
pushf
xchg
or
mov
or
fsubr
xor
ds
xor
mov
popf
mov
shl
sub
aam
push
fs
inc
lods
andb
jg
dec
fnsave
add
insb
bound
roll
and
mov
and
in
loopne
mov
bswap
movsl
shrl
popf
push
add
mov
movsb
xchg
les
idivl
dec
jb
shlb
test
sub
in
cld
dec
jbe
or
lahf
sarb
data16
pop
xchg
sbb
mov
sbb
jo
cmp
push
mov
imul
out
push
pop
es
and
outsb
sahf
jns
out
mov
imul
ljmp
mov
mov
xchg
adc
mov
sub
adc
push
stc
arpl
sub
popf
cmp
pop
mov
inc
push
sbb
enter
lret
int3
stos
sub
in
lcall
mov
repz
xchg
xchg
sub
fidivl
lcall
and
and
xor
and
dec
dec
aam
ret
sbb
xlat
inc
push
bound
fidivrs
and
jecxz
cmp
xchg
enter
orb
push
call
test
adc
mov
inc
dec
mov
pop
cmp
jnp
ret
push
fidivl
xchg
lahf
fwait
mov
ds
add
xlat
adc
popa
loope
pop
fisubl
jmp
in
cmp
jle
enter
mov
in
mov
out
lahf
out
mov
inc
cmc
fnstcw
pop
add
add
add
sti
outsl
cmp
movsl
int3
mov
jno
loop
aad
test
pop
sub
cli
mov
pusha
mov
ds
mov
aas
cwtl
cld
ret
push
mov
mov
push
pop
mov
push
dec
arpl
xchg
push
addl
xor
dec
push
add
xchg
add
jecxz
imul
fdivs
xor
aam
mov
pop
inc
cmc
sbb
or
sbb
xchg
iret
test
fxrstor
lods
xchg
adcl
mov
stc
lcall
or
xchg
mov
in
mov
dec
in
lea
push
xchg
cmp
shl
je
sbb
dec
xor
leave
cmp
cmp
jb
pop
es
push
sti
sbb
xchg
iret
jg
sub
push
or
sub
in
mov
push
test
mov
mov
stc
sub
push
pushf
inc
in
loopne
mov
or
fstl
rorl
or
mov
xlat
xor
in
test
inc
cmp
repnz
ljmp
repz
iret
aam
xor
pop
push
adc
cld
mov
adc
dec
or
dec
cmp
mov
sub
fadds
pushf
mov
or
pop
fstpl
inc
loope
es
dec
ret
mov
pop
insl
sub
push
sub
cmp
sbb
nop
test
rcll
xchg
ret
mov
sbb
stc
repz
mov
movsl
lret
push
cmpsl
xchg
adc
cmpsl
push
xlat
xlat
iret
add
sbb
loopne
ljmp
xorl
cmpsb
jl
sbb
out
clc
subl
adc
inc
inc
sub
cli
mov
jle
and
xchg
lods
cmp
rolb
dec
push
hlt
sub
adc
cmp
xchg
out
shrb
lahf
std
aad
sahf
pop
add
aad
xor
push
sub
ds
sbb
mov
sbb
inc
inc
repnz
sub
jp
inc
sbb
iret
or
push
lret
addr16
cld
fbld
test
xchg
add
ljmp
mov
fcompl
dec
add
hlt
mov
test
sbb
loop
shl
addb
add
popa
test
loope
cld
movsl
push
addb
cmp
mull
adc
dec
or
mov
loop
sbb
dec
dec
cmpsb
cmp
dec
in
jbe
shl
sbb
lds
lods
cmp
nop
mov
loope
popa
xchg
adc
imul
xchg
sub
xor
dec
pop
mov
movsl
inc
jo
push
mov
hlt
aas
ss
stos
push
mov
ljmp
lea
movsb
dec
inc
ss
push
fistl
and
insl
pop
imulb
push
icebp
inc
ret
test
mov
push
in
ja
scas
es
jmp
je
int
je
jp
mov
and
lea
pcmpeqd
mov
mov
jg
mov
push
leave
add
cmpsl
sbb
xlat
push
push
mov
test
pop
popa
xchg
outsb
je
mov
pop
cmp
lods
pop
rorl
xlat
mov
jns
mov
sbb
ss
mov
or
push
mov
mov
int3
rorb
imul
mov
cmp
imul
dec
loopne
inc
xchg
mov
adc
xlat
lds
dec
xor
jl
inc
out
xor
test
xor
pop
and
cmc
jle
mov
faddl
dec
rol
repz
out
cmp
fwait
out
cmp
int
or
mov
push
aas
hlt
notb
jb
sbb
lods
daa
das
xchg
add
adc
pop
in
xchg
js
dec
push
mov
idiv
add
gs
aad
fs
orb
mov
int
repnz
aam
dec
insb
repz
pop
imul
aas
mov
mov
mov
nop
xlat
mov
out
pop
or
jmp
pop
sbb
fists
add
in
fidivrs
xchg
stos
std
rorb
xor
loop
jle
cmpsl
jle
movsb
push
xchg
mov
xor
jb
int3
xor
cmpsl
mov
loopne
imul
add
cmpl
jecxz
add
mov
cmp
outsl
mov
and
or
out
xor
mov
out
mov
andb
jl
and
lahf
mov
inc
in
jmp
lock
xchg
pop
pop
sub
and
push
and
push
mov
xchg
inc
js
xchg
xchg
cmpsb
xchg
jp
std
add
lahf
push
push
js
push
mov
inc
cmpb
pop
or
jnp
inc
pop
mov
mov
xchg
or
jbe
rcrb
mov
lock
imul
das
ja
mov
pop
xor
incl
repnz
int3
jmp
sti
aam
test
sbb
jl
and
mov
push
insb
imul
inc
mov
bnd
pop
test
mov
ds
adc
je
clc
push
push
mov
seta
scas
mov
sub
addl
ljmp
sar
scas
insb
push
loop
add
and
cmp
mov
fcomps
data16
push
push
pop
xlat
sbb
adc
and
sub
fidivs
rcr
pop
fcoml
out
jno
xchg
mov
cli
cmpsl
push
and
sti
into
popf
mov
xor
test
pusha
xchg
jge
inc
mov
sahf
adc
mov
xor
dec
pop
cmp
jp
pushf
push
sti
inc
xchg
cmp
and
and
mov
lret
xor
or
aas
aam
dec
pushf
xchg
scas
mov
loope
lea
ja
push
in
pushf
cmpl
lock
insb
adc
adc
cmp
push
sub
test
inc
xor
test
jmp
sbb
ror
xchg
jmp
fs
jl
cwtl
push
xorl
cwtl
insl
mov
fsubp
adc
push
aam
inc
adc
jmp
cmp
adc
push
shlb
sub
nop
scas
dec
pop
lea
lods
sub
outsl
cmp
cwtl
add
add
mov
insb
and
jle
xchg
sub
inc
sbbb
mulb
jle
shlb
int
add
dec
sub
gs
dec
or
xchg
mov
push
mov
jne
cmpsb
dec
psubq
das
or
mov
push
pop
xchg
or
add
dec
cli
adc
and
pop
and
dec
dec
xchg
sahf
add
xor
mov
cmpsb
out
dec
cwtl
cmp
push
push
rcrb
add
jp
and
jle
xchg
lea
mov
push
xor
xor
cmp
dec
mov
cld
jb
inc
mov
cmp
push
repz
aam
insl
cmpsb
stos
pop
push
push
pop
test
rorl
leave
lds
inc
repz
in
push
bnd
dec
mov
enter
cmp
jo
jg
scas
out
int
and
insb
inc
je
cmpsb
lret
mov
dec
je
fimull
dec
add
imul
insl
push
mov
mov
jnp
and
mov
sti
sbb
adcb
adc
mov
dec
ljmp
int
subl
push
adc
add
sahf
test
jge
int3
xchg
inc
mov
mov
dec
aaa
jnp,pt
mov
inc
arpl
not
rcrl
xor
inc
push
sub
pop
sahf
pop
jnp
mov
cmp
sbb
adc
out
pop
jmp
dec
inc
sbb
pop
xchg
xor
hlt
dec
xchg
loop
cmp
ljmp
jae
mov
dec
add
popf
xor
stos
aas
jge
cmp
cmpsl
mov
xor
jbe
pop
pmullw
mov
xchg
ret
or
ficomps
adc
cwtl
xchg
scas
push
pop
in
in
sub
mov
fidivrs
push
pushf
sbb
adc
mov
push
shrl
jp
outsl
mov
mov
mov
sub
mov
adc
pop
mov
inc
cwtl
pop
push
and
lock
ret
xor
lret
dec
push
dec
aam
xchg
cmpsl
repnz
push
pushf
fsubr
jge
xor
rcll
ljmp
lock
mov
jge
mov
pop
pushf
adc
push
popa
xchg
xchg
jg
sub
inc
fadd
mov
iret
mov
rorl
aam
je
cmpsl
sbbb
notl
ret
enter
xor
jl
cs
jo
dec
mov
and
movsb
push
ret
call
dec
cmc
iret
adc
fs
jg
or
push
call
into
adc
fmuls
movsl
imul
pop
inc
insb
xchg
jo
sbb
int3
push
push
mov
leave
pop
movsb
or
add
mov
sahf
loopne
pop
mov
mov
jl
in
dec
push
xchg
or
sbb
in
fsubrp
scas
mov
push
ret
mov
sbb
sub
push
loop
mov
loope
sbbl
add
sbb
xchg
push
add
cld
mov
stc
adc
into
daa
sbb
out
xchg
sti
call
jg
sar
aas
imul
pop
subb
or
pop
xorb
xor
cltd
push
and
cwtl
out
les
xchg
mov
cmp
pop
dec
mov
xor
ds
xor
push
sahf
and
out
in
jge
or
xchg
sti
enter
ucomiss
jmp
lahf
push
test
mov
in
cmp
mov
jecxz
or
xchg
pop
aam
pop
sarl
fwait
mov
inc
repz
mov
rclb
add
dec
pushf
adc
mov
clc
or
push
das
pop
or
mov
decl
sti
and
lds
imul
fistpl
testb
pop
jg
sbb
aad
aad
mov
mov
sbb
nop
xor
aam
inc
idiv
stc
jg
decb
adcb
fcmovnu
xchg
xor
xor
icebp
cmpsl
xchg
addb
jae
cmpsb
aad
mov
sub
and
sub
decb
pop
push
sbb
lds
push
mov
xor
adc
cld
push
jecxz
test
jg
xor
jb
add
addr16
sub
mov
fdiv
push
mov
negl
push
pop
mov
bound
inc
in
push
in
push
lods
lea
imul
mov
mov
testl
dec
and
ljmp
movsb
shlb
std
movsl
mov
xor
add
orb
sbb
jbe
imul
lea
push
call
inc
mov
push
push
sub
add
imull
outsb
mov
pop
hlt
ja,pt
orb
into
xor
jmp
jge
aaa
outsb
mov
pop
aaa
sub
push
ss
push
lret
clc
incb
std
push
dec
jecxz
dec
addb
jb
cltd
pop
dec
xor
ficomps
or
mov
ret
data16
jno
data16
push
cltd
adc
mov
int
ret
inc
inc
lock
pop
jno
push
and
les
inc
or
test
dec
push
sub
outsb
out
jle
cwtl
shll
fwait
xorb
push
and
sub
dec
xor
mov
dec
or
out
inc
ret
push
loop
cld
push
inc
jbe
adc
shr
pop
mov
mov
adc
data16
cmp
ljmp
in
mov
xor
pusha
mov
jb
cld
fsubp
push
adc
test
xchg
sub
mov
aam
xor
cmpsb
pop
lcall
loopne
int
dec
or
or
lock
inc
orb
or
push
imul
pop
je
aaa
or
pop
das
cmp
mov
cmp
mov
mov
inc
add
test
call
sub
add
fmul
std
mov
adc
push
mov
outsb
push
mov
outsl
popa
mov
aas
mov
mov
sub
cmp
mov
jg
push
aad
pop
sbb
and
cmp
lret
mov
mov
inc
ds
jnp
ss
xor
push
pop
mov
push
iret
dec
js
xorl
xchg
aad
mov
mov
cmpsb
lea
xchg
shll
push
data16
sub
nop
lcall
push
movsl
mov
push
dec
ds
xchg
scas
shlb
jbe
dec
add
popf
ja
push
mov
in
dec
push
sub
ljmp
in
mov
ret
push
in
js
adc
or
dec
jnp
xorb
test
mov
cwtl
sub
call
shrl
mov
xor
xchg
cmc
pop
mov
lret
pushf
les
mov
pop
scas
aas
push
scas
dec
push
sbbl
push
xlat
push
lcall
inc
lods
cmpsl
jp
fisubrl
and
cmp
push
mov
lods
xor
mov
fsubl
gs
hlt
inc
mov
adc
or
stos
mov
add
and
rcl
dec
add
es
in
ret
push
mov
mov
aad
adc
mov
add
out
dec
add
adc
pop
aad
mov
popf
out
pop
hlt
pop
sbb
movsl
ret
cli
sub
mov
adc
imul
and
inc
stc
push
lds
inc
insl
test
divl
dec
sub
mov
cmp
aam
jo
sub
daa
repz
mov
lahf
cld
sub
inc
push
mov
ds
add
ret
in
lahf
lea
pop
cmpsl
mov
rcl
scas
in
or
outsb
in
xchg
inc
cld
pop
cmp
xchg
ja
mov
or
inc
sub
jo
push
inc
dec
movsl
mov
push
add
sbb
dec
adc
adc
xlat
xor
mov
addl
scas
inc
jle
cmpsl
xor
movsl
out
sub
add
inc
dec
lret
xchg
xor
mov
add
add
xor
xor
push
mov
jmp
cmpl
jo
mov
cmp
xor
sub
and
into
jecxz
and
sub
sahf
xchg
cmp
popa
ja
mov
lahf
mov
push
and
mov
movsl
fcomp
mov
stc
in
xchg
mov
inc
dec
sbb
or
xchg
push
pop
adc
cwtl
and
pushf
repnz
gs
cmp
fiadds
lods
js
pushf
loopne
push
jb
aam
mov
aam
cmp
jne
cmp
inc
scas
in
mov
mov
or
fcoml
cmp
cmp
mov
jmp
sbb
aam
idiv
adc
adc
sbb
sbbl
adc
push
movsl
loope
mov
jl
call
int3
jg
pop
mov
jmp
xorl
jbe
addb
bound
lods
mov
adc
mov
push
push
pop
sbb
and
cmp
add
mov
test
and
jnp
and
loope
sbb
fs
cli
call
repz
add
pop
jno
movups
push
mov
add
dec
ja
test
cwtl
push
add
cmp
ds
hlt
inc
dec
jbe
clc
outsl
and
mov
xor
pop
ja
test
mov
in
call
pop
jmp
shrl
sbb
mov
ss
loopne
jbe
sub
scas
jge
dec
pop
fisttps
pop
mov
or
add
pusha
imul
and
mov
jge
mov
xor
loopne
in
call
push
add
mov
ds
hlt
xor
jbe
test
dec
xchg
out
xchg
jb
adc
aad
fisttpll
dec
mov
dec
push
test
mov
adc
mov
cli
cld
sub
push
out
aam
jge
iret
fwait
addb
loop
mov
js
lock
shrb
outsl
aam
fisubl
add
pop
pop
int
hlt
and
dec
or
xor
out
mov
ret
xor
mov
call
in
sbb
fs
icebp
xchg
or
fmull
xor
jmp
inc
fucom
in
cmp
insl
push
pop
subb
scas
call
push
pop
cli
aaa
rorl
int
rolb
adc
jae
pop
cmpsb
xchg
pusha
cltd
lods
insl
in
add
popf
cmpsb
arpl
hlt
mov
out
dec
sbb
shll
sbb
push
push
loop
arpl
ss
add
les
xor
pop
mov
data16
and
mov
cwtl
imul
add
sub
mov
mov
in
jl
adc
test
into
daa
sbb
inc
mov
dec
add
cmp
add
in
in
pop
das
int3
sub
sub
insb
xor
mov
add
cwtl
pop
fisttpl
xor
sub
xchg
and
pop
stos
or
dec
sub
rcrl
dec
mov
xor
cmp
adc
cmp
ja
sbb
push
stos
cmpsl
int
sti
pop
js
inc
add
mov
stos
cmpb
inc
test
adc
inc
les
add
xor
loopne
cmpsl
aaa
jl
lea
jb
insl
push
lods
mov
pusha
and
hlt
jecxz
push
and
arpl
testl
pop
cmp
cmpl
enter
cmp
repnz
mov
aaa
adc
aas
cmp
push
xchg
sahf
gs
sub
arpl
outsb
ljmp
xchg
and
push
mov
shll
std
jmp
pop
mov
nop
insl
mov
dec
dec
fs
jp
insb
pop
cwtl
loopne
push
jge
addb
cs
and
xor
adc
mov
scas
xlat
arpl
popf
fisubl
mov
cwtl
daa
iret
and
jl
ljmp
fdiv
cld
scas
add
push
mov
mov
scas
pop
pop
push
stos
push
mov
ljmp
popf
mov
nop
daa
xor
cmp
data16
push
cltd
fsub
je
inc
jmp
hlt
and
les
push
scas
call
mov
jl
in
xchg
lcall
mov
test
mov
xchg
daa
sahf
iret
in
sbb
jno
add
mov
movsl
pop
in
sub
mov
fs
push
mov
loop
cmp
cmp
push
xchg
ret
mov
les
jl
ss
inc
addr16
pop
mov
xchg
xor
lret
fsubrs
mov
jge
pop
lock
mov
xchg
fdivl
js
fcmovbe
push
fidivrl
popf
mov
cltd
push
enter
mov
repnz
pushf
push
or
mov
cmp
arpl
pop
popl
xor
stos
pushf
scas
add
mov
mov
cmc
jno
enter
std
inc
xchg
or
xchg
ja
push
mov
jle
mov
shl
lock
inc
sub
out
icebp
add
mov
hlt
and
mov
andb
sub
and
mov
stos
movsb
mov
sub
xor
jno
dec
or
add
xchg
stc
daa
sbb
cmp
sub
push
fcom
jmp
xor
pop
adc
add
sub
xor
es
or
in
or
pusha
aad
xchg
sub
neg
cs
adc
in
mov
push
aad
pusha
adc
or
inc
jg
pusha
inc
push
push
aaa
xchg
or
sbb
int
sarb
or
test
mov
adc
movsl
and
and
js
cli
cli
mov
in
push
addl
cmp
inc
fisttpll
dec
ljmp
inc
arpl
mov
pop
and
fisttpll
lds
idiv
test
aaa
sbb
outsl
inc
mov
in
call
int
and
pushf
dec
or
popa
pop
and
cwtl
mov
les
test
es
inc
lcall
jle
dec
sbb
or
aam
push
dec
pop
add
mov
adc
xlat
sahf
mov
pop
addr16
pop
outsl
test
inc
inc
inc
in
sub
add
inc
jmp
lahf
in
cmp
ss
mov
xchg
repz
loop
enter
fs
in
test
icebp
ljmp
push
adc
sbb
pop
xor
mov
pushf
outsb
cmp
push
icebp
jmp
hlt
sti
cld
movl
inc
xor
sub
dec
jg
sub
mov
pusha
and
cmp
aas
mov
jge
data16
sub
rcr
sbb
xchg
inc
sub
inc
pop
call
jge
popa
loop
mov
int
dec
add
xorb
xor
mov
mov
scas
adc
ja
pushf
jbe
sarb
mov
daa
clc
fmuls
jmp
adc
test
repz
lds
and
sahf
mov
jmp
or
nop
add
mov
and
mov
insl
mov
sub
loop
cmp
scas
imul
cmp
dec
and
mov
into
into
jge
rorb
sub
lea
stos
rcll
cmp
mov
imul
xor
jecxz
and
push
sub
mov
sbb
loope
cmp
enter
js
arpl
jo
dec
mov
add
imul
pop
pusha
cmp
fidivs
adc
sbb
jne
or
cmc
cmp
sub
sbb
xchg
inc
cmp
test
add
cmp
sub
xchg
bnd
je
addr16
push
mov
or
adc
cmp
insb
ret
mov
std
cmpb
adc
mov
jl
in
add
cmp
or
es
imul
mov
fidivs
mov
test
sub
mov
mov
ja
and
mov
cltd
push
dec
xchg
dec
dec
pop
lret
clc
int3
lods
inc
test
bound
xchg
sbb
jbe
adc
lret
adc
cltd
lods
imul
cmp
mov
pusha
xor
pop
andl
xchg
pop
dec
sbb
stos
ds
push
addr16
inc
or
sub
pop
rcrb
aam
push
push
push
jnp
movsb
sti
stos
mov
inc
inc
sti
dec
xlat
std
jecxz
or
add
lods
inc
jg
adc
dec
out
lods
pop
bound
pop
push
aam
dec
adc
mov
rcr
inc
div
outsl
jne
dec
outsb
jno
xor
xor
cmp
mov
inc
jl
inc
fadd
mov
sbb
add
or
sub
fsubl
push
sub
cmp
lret
add
daa
mov
mov
pop
out
fs
and
mul
mov
rorl
jns
jno
adc
push
mov
rol
or
js
out
fs
pop
push
into
pop
xor
movl
mov
pop
mov
jmp
cmp
ds
push
lods
dec
insl
ja
lahf
rcl
mov
fsubr
and
in
scas
mov
bound
or
daa
rcl
mov
cmp
call
into
clc
dec
shl
bound
popf
je
mov
repz
mov
fldcw
inc
loopne
xor
rcrl
test
inc
or
daa
or
lods
sub
inc
mov
pop
lcall
les
call
outsl
lods
mov
rclb
sar
pop
sub
rcrb
inc
adc
xchg
mov
das
xor
loop
and
sub
lcall
ljmp
mov
insl
cs
mov
inc
xchg
jnp
pop
inc
cli
test
or
mov
add
dec
mov
jg
mov
ja
ret
pop
fcoms
dec
pop
mov
out
in
lea
or
mov
inc
scas
mov
mov
roll
sbb
mov
int3
aas
aaa
sbb
cmp
push
xor
lods
in
out
and
mov
xchg
adc
cmp
aaa
adc
std
je
mov
stos
xchg
xor
enter
fcompl
jle
sbb
repz
cmp
jmp
daa
adc
lds
shlb
jl
push
ret
test
jmp
movsl
in
adc
pop
mov
aam
lcall
aas
mov
pop
outsl
cltd
ret
sbb
pusha
fs
sbbl
sub
adc
out
hlt
mov
dec
test
jmp
jmp
mov
les
sbb
add
jmp
add
enter
cltd
roll
mov
test
lret
cld
or
aaa
scas
imul
aam
lods
int
xchg
dec
cmp
jle
xorb
dec
mov
adc
test
add
xchg
pop
inc
and
inc
ret
lret
mov
das
popa
std
mov
mov
sub
lods
mov
cltd
nopl
sbb
mov
test
sub
inc
gs
and
in
jecxz
pop
inc
cmp
pushf
sbb
ss
dec
or
push
adc
xor
xor
cmp
cmp
cmp
mov
mov
pop
mov
ficompl
cld
push
xchg
jo
outsb
in
je
bound
jl
sbbb
push
loop
outsl
mov
test
loop
mov
and
push
mov
aam
les
lret
sub
cmp
jno
xor
test
lods
mov
pop
add
hlt
inc
shlb
inc
js
fcomi
cmpsl
nop
repz
mov
jmp
ficoms
fwait
cs
pushf
cmp
faddl
orb
cmp
leave
jno
xor
sbb
push
jg
jne
movsl
insl
das
je
ret
sub
icebp
add
push
shl
mov
inc
aas
cwtl
push
mov
shrb
xchg
hlt
lods
divb
lock
add
fcom
xorl
in
mov
shll
les
jge
fidivrl
fcoml
or
cmp
sti
jne
jg
push
mov
cltd
cmp
test
daa
mov
xchg
mov
pop
or
xor
mov
jno
dec
sbb
xchg
andb
sub
aam
fdiv
fs
adc
fidivrl
outsb
lods
push
lock
push
adc
mov
mov
addb
lret
popa
xor
sbb
outsb
xor
push
hlt
push
test
test
movsl
pop
cmpsb
add
stc
xor
adc
lahf
imull
mov
mov
dec
cmp
dec
aas
cmpb
xor
pop
lods
mov
mov
hlt
rorb
rcl
add
cmp
test
lea
sahf
push
xchg
popf
popf
int
gs
sar
jl
je
int3
mov
loopne
mov
pop
push
pop
mov
and
dec
jmp
xchg
push
popa
bound
xor
dec
add
adc
in
mov
gs
push
xor
pop
test
pop
pushf
lcall
in
es
ljmp
mov
fs
repz
push
dec
jge
inc
jl
scas
xchg
mov
outsb
leave
fstl
cmp
push
insb
pop
cld
and
or
rorl
mov
adcl
aas
mov
dec
push
cmp
jmp
lret
adc
stos
sub
or
pop
inc
fs
jg
insb
adc
xor
sub
pushf
int
mov
sub
cmp
xchg
jmp
and
mov
dec
push
cmp
mov
sbb
movsl
in
xchg
inc
inc
fsts
mov
mov
out
std
arpl
mov
xor
mov
push
test
mov
xchg
test
or
std
and
pop
gs
fstpl
and
mov
cmp
fwait
leave
adc
push
mov
in
in
pusha
ja
push
pop
imul
or
and
push
pop
push
jb
in
mov
and
cmp
test
lock
filds
pusha
lahf
call
pop
ja
mov
sbb
ss
test
mov
jns
mov
mov
mov
aaa
adc
add
popa
sbb
inc
adc
loop
mov
into
sti
lea
call
push
jo
xchg
sbb
xchg
inc
inc
push
icebp
std
out
jmp
fistpl
imul
sub
push
dec
pop
and
jnp
jo
inc
ds
das
cwtl
repz
or
add
add
inc
mov
pop
je
rcrl
daa
cmpl
insb
jne
adc
jmp
cmp
mov
lock
cmp
mov
int3
movb
lahf
fisubs
pushf
pop
aam
repz
pop
cmpsl
lds
inc
pop
adc
pop
in
push
mov
and
xor
enter
cmp
and
and
cltd
add
xchg
scas
ljmp
sub
mov
cli
mov
mov
xchg
mov
jne
dec
lret
loop
cmp
fs
add
jp
xchg
and
adc
inc
push
adc
and
mov
movsb
out
push
aas
ds
scas
jb
sub
adc
sub
xchg
and
es
xor
hlt
clc
adc
push
push
push
in
inc
test
xchg
sbb
out
fimuls
je
add
imul
cmp
popa
je
pop
cltd
sub
mov
push
sbb
push
mov
cmp
inc
es
jmp
inc
hlt
test
xchg
insb
sarb
ss
enter
lcall
movsb
add
and
mov
fisttpl
andb
out
les
xchg
pop
shlb
pusha
lods
mov
pusha
adc
lds
dec
repnz
fiadds
fld
sti
mov
push
cwtl
inc
mov
adc
cwtl
addr16
push
cld
xchg
pop
inc
loop
push
repnz
dec
xchg
cmpsl
out
fcmovbe
and
arpl
fdivs
iret
pop
data16
pop
adc
xor
push
pop
mov
outsb
jmp
mov
flds
xor
aas
out
dec
mov
rorb
xor
aam
or
aam
orl
cmp
mov
ds
movsl
inc
dec
loopne
loop
test
movsb
pop
cmpsl
push
xor
mov
mov
xor
lcall
mov
lock
jb
scas
sub
mov
push
mov
es
jp
cltd
mov
push
mov
mov
das
mov
int
push
mov
test
ljmp
mov
adc
sub
sub
loope
jbe
push
push
jbe
push
in
hlt
shlb
mov
mov
mov
stos
mov
cld
pop
add
mov
in
inc
adc
or
inc
pop
movsl
add
sub
cwtl
loopne
mov
adc
sub
mov
pminsw
sbb
sub
std
xchg
shr
lods
pushf
mov
out
mov
pop
jo,pn
mov
pop
in
insb
out
notl
in
ds
icebp
ljmp
xchg
sbb
lcall
mov
es
lcall
sub
mov
add
idiv
mov
dec
ud2
mov
xor
cmp
loop
orl
jl
xchg
cltd
ja
push
cmpsl
in
sbb
scas
jmp
cmp
loopne
adc
les
cmp
int3
popa
stos
cmpsl
push
inc
mov
hlt
cld
pop
cli
fdivr
fcmovne
sbbb
pop
mov
out
sub
data16
adcl
jge
mov
repnz
add
adc
cmp
mov
jb
push
inc
jno
out
lcall
je
and
pop
cmc
add
jl
decl
sbbl
scas
mov
pop
outsl
sahf
mov
push
out
xor
jg
movsb
cs
inc
aas
or
ljmp
mov
mov
loope
sbb
pop
xor
lock
addb
frstor
push
pop
sub
mov
push
sub
pushf
cld
repz
es
xchg
loop
push
scas
data16
xchg
jp
adcl
jge
mov
call
in
pop
cld
cs
pop
les
pusha
int
hlt
je
aam
sbb
dec
dec
xor
int3
push
push
jbe
push
in
test
xor
mov
dec
shrb
fistpll
adc
sahf
sub
mov
adc
mov
rcrl
cmp
mov
test
fwait
aam
pop
mov
pop
hlt
add
pushf
pop
add
outsb
movsl
add
sub
cwtl
orb
dec
or
dec
dec
adc
sub
fs
in
jo
push
adc
pop
test
xchg
mov
sub
mov
adc
mov
rcrl
cmp
pop
fcoml
test
or
repz
sub
test
cmp
sbb
jl
pushw
inc
mov
hlt
cld
pop
cmp
sti
into
sbbl
fmuls
sub
pop
lret
and
cmp
mov
fs
pop
mov
ja
mov
push
jecxz
and
sub
lcall
in
mov
cmp
out
mov
xor
movsl
or
dec
fmuls
adc
pop
mov
fdivl
jl
call
sbbl
rorb
fidivrs
in
fimull
adc
jecxz
mov
xor
les
jl
mov
mov
scas
sarb
mov
cld
pop
adc
cld
pop
push
or
shlb
loop
adc
nop
mov
cwtl
rcrl
roll
mov
hlt
test
jbe
in
mov
push
in
sbb
in
cwtl
bound
in
mov
dec
lret
clc
repnz
push
iret
das
jbe
sub
int3
in
sub
aam
mov
push
add
push
dec
clc
mov
jecxz
pop
arpl
mov
mov
mov
mov
push
pop
mov
mov
mov
or
mov
sub
mov
and
jp
add
xchg
ja
xchg
in
jle
pusha
aas
push
ds
push
cmc
scas
sub
mov
adc
ljmp
fs
js
lret
arpl
popf
je
push
cs
push
dec
mov
pop
mov
data16
pop
jbe
mov
outsb
add
data16
data16
adcl
jge
mov
repnz
mov
in
in
fwait
aam
pop
fimull
adc
icebp
in
lods
mov
mov
jae
mov
push
shrl
ljmp
pusha
mov
xchg
andb
lods
add
pop
mov
int3
pop
xchg
xlat
adc
sub
mov
sahf
adc
out
mov
cmp
int3
cmp
add
and
ds
mov
and
pusha
aas
ss
aas
scas
in
pop
xchg
add
mov
sbb
mov
in
sarb
adc
cmp
push
int3
test
and
cwtl
daa
rcr
les
int
data16
ret
inc
mov
adc
xchg
mov
lcall
cwtl
cmc
cltd
xchg
iret
sub
push
push
jg
cltd
jl
pop
push
or
jmp
dec
mov
movsl
inc
pop
out
sbb
dec
add
adc
fbld
sbb
ss
dec
or
cmp
mov
push
dec
repnz
sub
jnp
mov
sub
ja
inc
xchg
int3
jns
mov
push
cmp
fistps
mov
lahf
imul
ja
movsb
test
movsb
mov
mov
subb
cmp
jp
pop
and
adc
jb
lret
in
pop
popa
aas
ret
incl
call
push
cmc
mov
clc
das
xchg
in
dec
sti
sub
cmp
mov
sub
hlt
daa
dec
mov
out
sbb
jg
je
mov
std
mov
add
xchg
sub
stos
jns
das
cwtl
icebp
daa
cmpb
in
lea
idivl
sbb
push
rcrb
or
nop
sbb
cli
and
js
inc
cmp
mov
fsubrs
dec
xor
jo
int
ret
orb
fdivl
jno
dec
adc
mov
iret
nop
cmp
loop
add
inc
push
push
fs
inc
jbe
adc
shr
sbb
js
clc
jmp
daa
inc
sub
sahf
aad
and
fistl
sub
cs
jle
adc
mov
js
or
sub
loopne
mov
jmp
daa
inc
mov
and
fwait
jno
push
inc
mov
cmpsb
mov
std
pop
into
out
sub
dec
pslld
popf
dec
push
sub
mov
sub
mov
adc
cmp
pop
adc
cmp
outsb
pop
cmpsb
xor
jl
lock
mov
nop
adc
pop
mov
mov
call
jle
nop
lahf
mov
stos
mov
jecxz
add
xchg
jno
testl
shlb
xor
push
add
dec
lods
xchg
xchg
jge
pop
xorb
cmpsb
push
jo
dec
popa
or
push
mov
jo
cli
push
les
mov
cmp
cwtl
adc
sub
lock
push
les
sar
push
jp
ret
adcl
mov
cs
jle
out
xor
mov
sub
insb
in
sub
je
push
rcrl
fs
mull
dec
xlat
test
mov
not
les
sub
sub
cltd
and
xchg
mov
les
aam
mov
cmp
mov
adc
or
jmpw
jmp
inc
shl
aam
dec
in
inc
push
sub
and
mov
mov
ljmp
mov
mov
ds
xchg
and
add
dec
or
xor
cld
repz
ret
mov
ljmp
adc
xor
fs
mov
or
add
or
hlt
xor
push
popa
xchg
cmpb
mov
pusha
xor
pop
mov
cmp
push
outsl
nop
xor
rclb
stos
cli
out
xchg
inc
xchg
das
call
xor
loope
mov
ja
je
sub
mov
inc
push
adc
hlt
arpl
popf
pop
arpl
enter
je
pop
ret
subb
movsb
pop
jl
fistps
icebp
mull
out
jo
jno
pop
cli
cltd
adc
inc
push
pushf
fs
pop
loop
decl
mov
insl
mov
fwait
adc
cmpsb
arpl
hlt
mov
inc
lea
adc
fcmovu
into
outsl
movsb
pop
sbb
in
imul
data16
jb
mov
dec
pushf
je
and
push
cltd
add
dec
pop
push
adc
xchg
mov
ficompl
add
dec
xchg
fwait
cmpb
mov
pop
mov
mov
dec
pop
pop
in
in
pop
xorb
test
orl
les
repnz
jle
push
xchg
push
pop
adc
dec
cwtl
jge
pop
shlb
in
push
jo
mov
cmc
scas
sub
mov
jo
cli
push
and
mov
or
mov
adc
sub
fsub
sub
bound
jecxz
sar
and
cltd
shll
int
cli
stc
cs
pop
jle
fcompl
js
into
push
inc
imul
adc
loopne
dec
sub
mov
push
dec
jecxz
mov
inc
inc
lahf
mov
cltd
pop
dec
xor
dec
dec
ds
cmpsl
sbb
adcb
adc
sub
hlt
out
push
bound
stc
mov
decl
dec
ret
adcl
mov
cs
jle
out
xor
stos
mov
sub
xlat
nop
cmp
sub
cld
ret
xor
hlt
and
call
in
xlat
clc
shl
dec
addb
adc
xor
dec
push
mov
bswap
mov
dec
mul
mov
add
pop
inc
jg
test
je
pop
xchg
mov
ret
mov
ret
dec
or
stos
loopne
in
fsubrl
in
xchg
xor
sbb
pop
lret
ds
aaa
jbe
cmp
dec
or
jmpw
jmp
jge
aaa
into
outsb
mov
pop
loop
ds
loop
ljmp
inc
adc
inc
sub
mov
test
gs
push
sub
rcl
add
xor
inc
mov
popa
fisubrl
cmp
push
jb
push
shrb
jge
inc
fadd
mov
adc
or
jmpw
jmp
or
lock
into
outsb
mov
pop
add
shr
lcall
adc
inc
sub
aad
and
fistl
sub
je,pn
jle
adc
fadd
pop
add
pop
sub
pusha
sub
mov
ss
sub
xor
inc
mov
jmp
sarl
or
outsb
mov
cmp
cmpsl
pushw
xor
movsb
popa
stos
mov
sbb
cltd
lods
imul
cmp
mov
pop
add
in
imul
cltd
mov
stos
pushf
pop
add
add
dec
pop
push
cmp
xchg
mov
fidivrl
pop
dec
add
dec
mov
test
cli
cmpsb
pushf
test
je
mov
mov
mov
les
pop
in
in
inc
xorb
test
orl
les
repnz
jle
xor
mov
mov
jge
pop
xor
in
push
jo
pop
popa
or
push
fidivl
cmpsl
test
mov
movsl
call
jl
jbe
shlb
dec
mov
nop
cwtl
shll
adcb
pusha
adc
pop
xchg
jp
and
mov
fs
into
lcall
lock
dec
push
mov
xchg
pop
adc
mov
je
pop
in
push
jo
bound
stc
push
mov
jo
cli
push
loopne
adc
or
cld
adc
sub
pushf
out
push
bound
jecxz
sar
push
push
dec
ret
adcl
mov
cs
jle
out
xor
popa
stos
mov
sub
mov
mov
rcrl
mov
shl
mov
dec
xlat
test
mov
not
les
sub
sub
and
mov
sbb
pop
mov
rcrl
push
bound
stc
mov
decl
es
ret
adcl
mov
cs
jle
out
xor
popa
stos
mov
mov
jb
or
push
out
xchg
pop
xor
pop
xchg
int
inc
cwtl
pop
fnstcw
test
gs
push
jecxz
sub
add
push
add
jle
out
or
mov
pusha
sub
vhaddps
sub
push
mov
inc
dec
or
jmpw
jmp
dec
or
into
xor
popa
stos
mov
fdivr
repz
hlt
cld
pop
fdivr
push
ds
adc
insl
mov
fwait
lods
insl
in
pop
pop
int
repnz
or
mov
or
push
loop,pt
arpl
arpl
cld
repz
sub
pop
sbb
popf
out
jp
shr
mov
mov
jo
pop
sahf
cltd
adc
inc
adc
lods
cld
out
aam
pop
xchg
call
fdivrp
or
shl
mov
dec
xlat
test
mov
not
les
sub
sub
and
cmp
movsb
ljmp
mov
mov
mov
movsl
add
mov
cs
jle
out
xor
push
add
sub
add
nop
rcrl
xor
shl
mov
dec
xlat
test
mov
not
les
sub
sub
popf
je
mov
mov
data16
inc
or
add
xchg
movsl
mov
mov
popa
adc
adc
loop
test
inc
push
push
rclb
jbe
xlat
sbbb
insb
movsl
aas
add
adc
shrl
out
sub
pop
addb
mov
ret
dec
jle
stos
loopne
in
nop
push
add
int3
ds
hlt
pop
dec
jbe
mov
cmp
js
test
jmp
inc
fmull
in
mov
cmp
loop
addb
inc
jbe
xlat
sbbb
dec
movsl
aas
add
jle
xor
call
mov
inc
frstor
adc
fs
push
cltd
lods
out
cmp
les
xor
cs
pop
hlt
add
mov
mov
adc
mov
push
jo
xchg
cmc
aam
mov
mov
rcrl
push
cmp
clc
sub
subb
into
ss
sub
xchg
daa
inc
mov
and
fwait
jno
iretw
jno
pop
es
or
movsl
rorl
imul
add
push
test
ret
sub
add
jbe
jmp
adc
sub
in
and
shll
xor
xor
pop
mov
add
cmpsl
mov
sbb
ljmp
ljmp
sti
loop
sbb
inc
push
push
jl
inc
jbe
xlat
test
add
je
jle
loopne
call
stos
mov
out
pop
orb
dec
loop
stos
loopne
in
add
push
lea
add
mov
jp
pushf
jl
and
hlt
cltd
sbb
cmp
addr16
test
daa
jle
xchg
adc
xchg
nop
cmp
loop
je
inc
push
cmp
cltd
adc
inc
or
adcl
sub
inc
std
push
dec
jecxz
fs
dec
addb
dec
pop
mov
cmpsb
mov
std
pusha
into
out
sub
dec
pminsw
pop
arpl
cld
repz
jmp
ret
inc
rclb
test
scas
jl
ret
mov
xchg
sarl
xchg
mov
popa
nop
movsb
push
cmp
inc
sub
fadds
aaa
cld
test
push
js
pusha
inc
inc
outsl
imul
sub
mov
ja
push
cmpsl
inc
pop
ss
je
stos
jbe
cwtl
cwtl
mov
and
inc
push
sub
xchg
movsb
push
andb
out
mov
adc
dec
adc
or
cmp
adc
pop
jge
mov
std
sbb
out
loop
aam
inc
pop
ficomps
adc
mov
movsl
mov
mov
popa
adc
lods
in
loop
cs
mov
jo
mov
mov
add
clc
dec
int
cmp
dec
dec
adc
jmp
sarl
or
dec
dec
ljmp
pop
mov
into
hlt
pop
dec
jbe
lock
in
xor
pop
mov
mov
ja
and
mov
cltd
push
dec
add
outsb
xchg
cld
adc
xchg
loope
je
xor
mov
popa
stos
mov
sbb
cltd
lods
imul
into
pushf
xor
sub
in
ss
jno
mov
jae
and
in
inc
adc
aas
lret
ret
xor
add
cli
and
pop
dec
mov
fwait
aam
pop
add
dec
fsubrs
inc
push
sub
mov
fadd
pop
mov
ljmp
aam
mov
and
add
dec
or
xor
cld
repz
fs
xchg
xchg
shl
adc
pop
add
rcrl
sahf
adc
push
dec
jecxz
fnstsw
push
dec
push
mov
mov
seto
loop
xor
jg
mov
xor
xchg
jle
add
jp
cltd
mov
lcall
cltd
add
inc
pop
xchg
mov
ficoml
add
dec
idivb
fwait
or
mov
pop
jno
pushaw
jp
cltd
adc
mov
int
rcr
push
xor
das
push
fistpll
ret
inc
into
outsl
movsb
pop
pusha
sub
pop
movsb
aam
dec
sub
dec
dec
xor
test
les
out
sarb
adc
add
cltd
fs
sbb
fidivrl
cmpsb
add
in
inc
and
sarb
clc
fldenv
jmp
js
sub
jl
in
adc
add
ja
std
loope
inc
cmp
into
rcrl
mov
sbb
dec
xchg
mov
adc
jmp
in
mov
xchg
push
test
fwait
xchg
stos
bound
in
mov
fucomi
sbb
repz
sbbb
js
inc
xchg
sub
bsf
aas
xor
cltd
in
lea
push
jno
push
jae
scas
in
mov
and
pop
mov
pop
inc
sarl
inc
nop
roll
mov
mov
lret
xchg
xor
pmaddwd
imul
push
inc
mov
fwait
ret
mov
popf
in
mov
stc
mov
repnz
insl
pop
test
cltd
mov
call
pop
cmp
gs
and
jne
cmp
add
stc
and
xor
mov
jb
paddq
cli
push
add
fldl
xchg
pop
cmp
xorb
jecxz
aaa
repnz
testb
mov
push
xor
cmpsb
mov
lret
in
ljmp
jle
dec
ja
push
jecxz
fisttps
dec
mov
xchg
insb
out
lret
mov
scas
cmp
repz
cltd
pop
pop
add
sahf
sbb
dec
jmp
xor
cmp
bnd
repz
xchg
sub
mov
dec
jle
pop
inc
or
adc
inc
jae
loope
cmp
mov
mov
mov
cs
add
es
mov
adc
fsubs
clc
fmul
les
pop
leave
sub
shrl
mov
ja
dec
pushf
add
add
xchg
mov
in
add
popf
xchg
ror
adc
loopne
pushf
cmp
add
insl
in
inc
push
add
or
push
add
mov
add
jno
lods
test
cltd
fildl
fcompl
mov
jnp
jl
and
aas
jmp
loop
outsl
sbb
lret
scas
pop
cld
test
fwait
sarb
sub
sub
sbb
and
mov
outsb
add
outsb
mov
ds
call
out
or
xlat
pop
push
bound
dec
leave
push
cmp
adc
xchg
xorb
ja
lcall
shr
fnstsw
pushf
cmp
jnp
mov
pop
mov
lds
inc
cmc
pop
mov
les
push
mov
out
jg
jl
jnp
add
dec
jp
cmp
sub
enter
lret
decb
dec
icebp
cmp
call
lea
inc
xchg
inc
sub
mov
cltd
mov
mov
repz
mov
ja
les
dec
call
imul
mov
xlat
repnz
jb
hlt
adc
decb
xor
data16
loop
sbb
sub
sub
inc
xor
pushf
add
cmp
jp
mov
popf
or
xchg
test
xchg
inc
fmuls
lods
xchg
nop
xchg
ds
jae
push
lcall
mov
pop
sub
jge
test
inc
push
aas
pop
push
xchg
pop
jae
popa
push
sub
xor
and
adc
hlt
aad
mov
enter
subl
push
cmp
nop
xchg
imul
push
sahf
push
or
sub
add
and
mov
fsub
mov
jb
cmp
sbb
cmp
lds
arpl
stos
or
arpl
cmp
add
mov
inc
sub
mov
cmc
cltd
inc
sub
sti
ljmp
mov
mov
mov
pop
fs
adc
push
sbb
gs
push
stc
ljmp
or
add
lods
mov
int3
ret
mov
sub
addl
out
pop
xor
hlt
dec
fstps
add
mov
jge
idivl
ss
cld
pop
pop
loop
inc
test
out
call
aaa
bound
fists
shlb
sbbl
pop
stos
in
int
rorb
repz
fldt
shlb
mov
sub
orb
int3
pop
jno
or
mov
and
gs
pop
shr
add
jne
cld
push
mov
dec
jo
and
fwait
push
subb
call
test
stc
mov
xchg
xlat
lret
xor
sub
cmpsl
mov
xchg
aam
sti
mov
push
in
push
push
mov
cmc
xor
bound
into
jb
cmpb
xor
test
lret
sbb
roll
in
idivb
sbb
sbbl
adcl
fidivrl
popa
out
iret
lret
loopne
addr16
push
push
lds
popa
into
hlt
subl
ss
mov
inc
mov
jl
es
cltd
pop
cmp
jnp
inc
bound
enter
or
out
mov
jmp
xor
pop
ret
repnz
or
pop
pop
out
jnp
bound
orb
xor
jno
cmc
ds
cltd
cld
dec
xor
pop
mov
data16
in
fnsave
sub
sarb
cwtl
mov
cs
das
push
leave
les
mov
inc
xchg
test
enter
aaa
ds
and
loop
ljmp
into
pop
sub
int3
pop
addb
lea
xchg
imul
sar
cmpsb
daa
jle
mov
xor
aas
fisubl
in
pop
mov
cmp
or
daa
mov
loope
cmp
in
jno
cmp
inc
sub
cmc
cmp
or
lea
jmp
sbb
fwait
ljmp
xor
mov
dec
jle
mov
int3
add
imul
inc
cmp
inc
xchg
xor
adc
pop
push
pop
psllw
push
dec
dec
lea
jg
xchg
mov
fildl
pop
pop
cmpsl
push
jmp
add
out
test
sub
xchg
int3
xchg
mov
loopne
js
xchg
mov
lcall
test
push
loopne
imul
lock
inc
xor
cmc
popa
pop
add
mov
je
push
repnz
xchg
idivb
sub
cli
mov
mov
jp
or
addr16
mov
out
call
test
push
adc
aas
push
cld
cmp
add
push
negb
pushf
inc
mov
stc
sbbl
pop
cmp
js
add
push
push
bound
add
xchg
xchg
lret
sti
rcrl
push
mov
fisubs
push
xchg
cvtps2pd
jecxz
jp
adc
push
mov
jl
ljmp
mov
test
imul
in
jge
mov
inc
push
jo
cmpsb
dec
ret
and
out
mov
xchg
scas
inc
push
repz
pop
scas
push
cmpsb
mov
dec
fists
mov
push
sbb
aad
push
xchg
pop
insb
adc
xor
ret
pop
pop
into
xchg
mov
xchg
sbb
loopne
movsb
or
push
mov
jmp
sbb
outsl
jmp
jbe
imul
pop
mov
inc
hlt
loop
hlt
enter
mov
daa
xchg
cli
les
push
sub
mov
sub
inc
sub
shrl
sbb
aam
loop
inc
mov
xchg
push
push
leave
imul
mov
stos
dec
xchg
addr16
aaa
mov
mov
pop
fisttpll
lcall
inc
aas
push
sub
aad
std
lret
ljmp
xor
mov
outsl
inc
aaa
push
call
push
mov
repnz
jp
dec
aas
stos
pop
xor
sub
adc
add
jns
push
lods
mov
test
dec
jbe
ljmp
aam
filds
in
xor
aam
push
add
stc
sti
add
cmp
add
insb
scas
adc
out
inc
adc
ja
fnsave
ds
xor
je
lea
lds
xlat
push
stos
out
mov
jge
fcoms
fildll
push
cmp
sub
mov
mov
pusha
jl
call
push
cmp
orb
xchg
adc
sahf
sub
aad
jg
stos
mov
sbb
scas
cltd
xor
cmp
xor
ret
hlt
jge
mov
imul
cwtl
loope
decl
pop
and
lret
adc
inc
cmp
mov
sbbb
decl
push
cmp
push
imul
test
mov
pop
sbb
dec
push
shlb
mov
dec
test
adc
mov
pop
pop
sub
addr16
lea
fdivr
hlt
out
xlat
xorb
push
mov
dec
jo
pop
lret
or
cmpsb
out
push
inc
orb
lcall
je
in
mov
cmp
mov
sahf
out
push
lods
pop
aad
pushf
mov
int
push
jl
movsb
js
icebp
in
add
cmp
ficoms
stos
mov
xchg
mov
les
xor
ficoml
cmp
adc
push
push
daa
lds
in
loopne
or
and
fwait
pop
lods
movsl
fdivrp
push
out
or
sbb
fwait
fwait
cli
inc
lea
sbb
js
sub
cmpb
dec
out
rcll
es
out
push
adc
mov
movsb
out
xor
inc
call
stc
mov
dec
cmp
in
pop
repz
dec
inc
pop
mov
popf
cmpsl
stos
cmp
push
jle
inc
mov
xorb
andps
jge
sub
cmp
sahf
mov
movsl
pop
pop
dec
jo
jne
pop
insl
dec
lret
movsl
jmp
sbb
int
fs
or
xchg
inc
jo
push
or
lods
push
cwtl
jno
pop
cmpsb
pop
daa
in
adc
divw
xchg
jp
mov
cmpb
aas
outsl
mov
decl
adc
stos
push
xchg
stos
pop
cmpsb
pusha
push
mov
mov
inc
rorb
sbb
cld
push
inc
cwtl
out
mov
insb
lahf
loopne
jno
add
inc
rorl
js
push
push
outsb
mov
dec
jecxz
jmp
sub
cmp
jns
lods
inc
dec
xlat
jmp
fdivr
xor
jle
xchg
jo
out
loope
iret
call
xor
mov
js
jg
repnz
sbb
outsl
gs
lret
adc
rcr
lods
scas
in
and
xor
insb
lcall
sahf
sti
mov
rcr
mov
xor
mov
test
xchg
lods
loop
inc
xchg
mov
mov
sub
stos
mov
push
cmp
fimull
jne
push
loop
mov
xor
pop
fimull
aaa
sahf
cmp
mov
pop
sbb
orb
aad
cmpl
dec
dec
pop
std
dec
pop
xor
pop
fldenv
or
push
out
mov
xor
aaa
out
rcl
cmp
filds
pop
iret
sbb
cmpsl
jmp
stc
cmpsl
sub
mov
imul
loopne
sbb
push
nop
xchg
sbb
and
mov
sub
sub
icebp
push
call
rolb
mov
jb
rorb
rolb
mov
out
rcl
push
mov
mov
int3
mov
lret
dec
adc
pusha
int3
nop
sub
shrb
lods
lret
popa
mov
jle
inc
fdivrp
add
test
cmp
scas
daa
dec
inc
sti
testl
test
movsl
inc
dec
push
xchg
mov
adc
push
mov
push
pusha
cmp
hlt
mov
inc
push
adc
aad
push
lea
sub
inc
cwtl
sahf
pop
push
push
popf
out
mov
mov
push
es
adc
dec
pushf
clc
hlt
jecxz
push
arpl
mov
sub
or
and
adc
inc
mov
sbb
insl
adc
push
shlb
fnstsw
testl
mov
cli
nop
sarl
es
shrb
ljmp
jmp
sbb
jo,pt
push
outsl
shlb
psubq
into
in
arpl
adc
cwtl
cmp
inc
sbb
xor
nop
or
cli
xchg
ljmp
mov
jp
cmp
js
pop
inc
fiaddl
aaa
scas
mov
push
ss
in
in
push
sbb
fadd
into
jmp
or
jno
repnz
rorl
xor
mov
jg
aaa
xchg
roll
movsb
jo
push
xchg
sbb
xor
inc
mov
xor
push
lret
lcall
into
cltd
add
mov
in
xchg
xor
push
mov
repnz
aam
sbb
cmp
fsubr
adc
sbb
into
mov
outsl
pop
popf
xchg
into
popf
mov
sbb
adc
xchg
je
mov
inc
sub
sbb
insb
rolb
xchg
adc
push
nop
popl
mov
push
mov
insb
dec
pop
sbbb
jecxz
ss
insb
sbb
sub
rsqrtps
fstps
xbegin
mov
stos
xorl
push
push
lret
pop
mov
imul
or
pop
lcall
es
add
fcomip
dec
sahf
mov
and
dec
sub
jbe
sbb
inc
les
shrb
orl
lods
es
mov
fwait
ja
icebp
cwtl
or
fiaddl
adc
jns
stc
mov
inc
fistl
ljmp
sub
xchg
popa
cmp
repz
pop
mov
fdivrl
push
cmp
mov
ljmp
push
das
xor
push
xchg
dec
clc
mov
rcll
cmp
pop
in
xchg
mov
sub
adc
xchg
mov
ds
cwtl
je
and
push
jle
mov
push
and
or
or
js
es
jns
jp
mov
push
je
cmpsb
sub
jl
pop
js
test
push
ljmp
mov
mov
sbb
and
adc
xor
sti
aaa
adc
scas
aaa
mov
mov
int3
dec
insl
and
ds
and
mov
and
or
inc
jbe
inc
fwait
jns
cmpb
mov
cwtl
int
rol
loopne
sub
hlt
push
leave
xchg
cmc
pop
mov
cmp
aad
pop
inc
stc
xor
aaa
aam
popf
push
adc
push
and
and
sti
xorb
jg
mov
cs
fsubs
inc
in
pop
in
lahf
push
fs
sbb
pushf
int3
xchg
mov
xlat
and
loope
rorl
movl
stos
cmp
mov
dec
pop
subb
push
mov
outsl
in
mov
xchg
mov
mov
aaa
add
cmpsb
fwait
pop
rol
add
test
arpl
pop
movsb
pop
push
aad
popf
cmp
sbb
orl
push
rolb
iret
lods
rcrb
mov
lods
push
notb
jl
mov
push
jle
inc
sub
mov
mov
add
or
mov
dec
repz
insl
add
jns
cmp
hlt
inc
hlt
mov
cmpsb
dec
outsb
cmc
inc
test
mov
add
xor
and
cmp
push
shr
cwtl
hlt
scas
fisubrl
adc
pusha
insb
sar
sub
ret
cmp
mov
cltd
lods
imul
mov
imul
lods
mov
mov
das
jae
mov
cmp
les
sub
cmpsl
pop
pop
jp
add
mov
fdivr
jnp
in
jecxz
loop
ljmp
cmpsb
test
les
mov
cmp
mov
jo
ficompl
aad
add
xor
rcl
jae
cmpb
ds
adc
aas
cmp
sahf
push
push
mov
cld
pushf
mov
insb
gs
mov
xor
mov
pusha
scas
sub
adc
lret
mov
cmp
xchg
inc
sub
mov
push
xorb
mov
ljmp
aaa
push
cmp
mov
js
mov
movsl
cs
pop
jae
push
push
sub
sub
push
out
mov
daa
fmuls
popf
lods
push
mov
xlat
lods
mov
mov
lcall
sub
adc
int
arpl
cmp
lret
shlb
inc
sbb
ss
inc
xor
or
clc
mov
sahf
in
hlt
sub
mov
or
mov
inc
int
pushf
je
mov
mov
inc
inc
inc
aas
xchg
jl,pt
ljmp
mov
ficoms
cmp
push
insb
lods
pop
jnp
pushf
add
int3
clc
or
jmp
inc
fdivrl
mov
les
push
cmp
push
jp
sbb
in
push
inc
push
sbb
push
cli
loopne
adc
lret
lods
aad
push
out
int
mov
mov
andb
mov
aad
pop
xchg
int3
jp
and
imul
cmpsl
lock
jae
negl
inc
cmp
jne
jbe
fmull
cmp
mov
cld
mov
pop
ds
shrl
dec
lret
push
pop
xor
repnz
std
or
xor
add
inc
cmpl
cwtl
add
retw
sub
call
pop
jle
xchg
pop
xlat
stos
lds
add
dec
ds
sub
inc
adc
cmpsb
call
mov
lea
fdivrp
lea
mov
aam
test
loopne
cmp
mov
xrelease
out
and
mov
cmp
ljmp
pop
pop
in
mov
ds
add
adc
sbb
ljmp
fs
push
in
mov
pop
test
lds
pop
stc
inc
jle
fsts
js
push
cmp
ret
or
pop
sub
out
push
pushf
pop
aad
lds
mov
sub
stos
xor
jno
insb
call
aas
out
mov
cmp
scas
or
leave
push
test
lret
add
sti
arpl
push
mov
out
push
and
fdivs
xor
push
pop
icebp
sahf
dec
cmp
repnz
and
and
dec
push
addr16
mov
ficoml
fldcw
xchg
pusha
mov
popa
mov
fsubs
xchg
mul
aaa
dec
fsubl
mov
ret
mov
push
fs
xlat
pop
icebp
jecxz
mov
lret
call
xchg
xor
icebp
cmp
arpl
xchg
sub
push
cmp
add
mov
pop
movsl
and
test
or
mov
sbb
shrb
call
imulb
push
outsb
cmp
and
mov
mov
call
jns
mov
xchg
or
fwait
xchg
jnp
mov
pop
fs
xchg
sbb
push
mov
xchg
mov
dec
mov
pop
mov
mov
dec
cmp
xorl
aad
lret
lcall
push
inc
cmpsb
fsubrs
mov
out
push
out
das
in
ret
jg
popf
pop
xor
sbb
sbbl
and
aad
iret
lds
arpl
cmpb
lock
jecxz
push
mov
lret
jns
mov
mov
sbb
cmp
xchg
xchg
lock
out
int3
jl
mov
insb
ror
bound
cld
sbb
cld
int
push
inc
and
movsl
fmuls
xchg
testb
loopw
shl
adc
add
js
in
inc
sbb
push
test
fsts
xchg
add
inc
imul
mov
data16
inc
call
pushf
inc
sub
arpl
xchg
aas
mov
aad
repnz
push
add
or
push
out
setbe
push
sub
pushf
test
sub
xchg
mov
xorb
int3
sbb
dec
imul
stc
add
inc
pop
xor
push
inc
jbe
fsubs
push
fcoms
xor
ret
imul
sbb
xchg
std
sbb
in
cltd
jg
test
ds
int3
xlat
pop
add
loopne
mov
push
jmp
rcll
push
jbe
imul
test
sahf
jo
in
lods
dec
cwtl
add
jmp
lcall
mov
sub
loopne
in
push
mov
das
add
pop
mov
orl
test
cmpl
gs
cmpsl
adc
inc
out
cmpsl
enter
int3
jae
or
into
test
dec
and
push
pop
inc
lret
test
mov
mov
daa
and
bound
push
mov
pop
leave
mov
add
and
mov
cmpsb
les
add
add
cs
mov
pop
inc
fmul
dec
adc
fmuls
mov
std
xor
lea
jmp
mov
cltd
aam
ret
mov
or
cli
lock
push
jl
mov
inc
adc
lods
fsts
cltd
jne
dec
mov
stos
stos
adc
rclb
push
ficoms
popa
daa
leave
mov
mov
jne,pn
outsb
adc
inc
lret
orb
aaa
xchg
mov
pop
jge
add
fdivl
je
jae
pop
out
fwait
pop
shrb
sbb
sbb
sbb
pop
setl
loope
or
push
cmp
add
int
das
sti
pop
pop
ret
fildll
cmpsb
push
adc
cli
lock
xchg
sbb
mov
cmp
sbb
shl
xchg
mov
xor
loop
mov
shr
cltd
add
cmpsl
mov
cwtl
push
ljmp
sbb
mov
jo
lcall
xchg
pop
add
cli
dec
pop
fs
jecxz
cmp
pop
inc
add
test
mov
mov
adc
in
sahf
inc
and
dec
out
out
mov
loop
lahf
imul
shlb
std
ret
xor
cmp
fwait
out
mov
inc
fimull
push
mov
jns
mov
cmp
es
mov
insb
enter
sub
out
aas
test
xchg
mov
cmp
mov
or
sub
aas
mov
fisubrl
xor
scas
movsb
cmp
mov
es
mov
stos
xor
test
mov
cmp
inc
fists
ret
pop
addb
ljmp
mov
xor
cmpsl
lea
sbb
cmp
call
sbb
push
jb
mov
mov
in
jmp
cli
lcall
adc
mov
pop
add
fistpll
mov
inc
mull
sub
cld
and
inc
pop
stos
mov
idivl
xchg
popa
mov
ret
hlt
ss
jmp
pop
cmp
imul
cmp
add
pop
pop
bound
cmp
or
lcall
cmp
aam
std
mov
pop
insl
pop
cmpsl
push
and
cmc
lods
mov
inc
cmp
push
inc
push
subb
pop
cld
test
and
mov
inc
jne
lahf
sarb
inc
or
dec
pusha
and
dec
or
outsb
loop
pop
xorl
ss
sub
les
push
int3
int
add
test
jp
add
shrb
jno
testl
jl
pop
xchg
jnp
dec
hlt
inc
jns
dec
pushf
xor
cmpsl
aaa
out
std
sbb
add
lcall
dec
adc
push
out
shll
jnp
ds
add
or
xor
mov
cmp
sub
out
test
sub
mov
gs
jl
cmpsl
pop
push
mov
aad
cmpsl
push
sarl
out
lahf
fadds
sub
pop
fsincos
sahf
sub
xor
ljmp
lods
les
ret
repz
test
lahf
xor
cmpsl
es
mov
mov
push
mov
sub
pop
mov
iret
xorl
iret
or
es
lods
bound
in
sbb
jecxz
fdivrs
sub
stos
inc
dec
lcall
test
sbb
sub
iret
pop
push
ds
xor
leave
add
push
ret
movsl
add
xchg
gs
cmpsl
or
in
xor
je
dec
dec
in
lahf
sub
jge
repnz
add
jne
stos
fdivs
rolb
jle
jp
lcall
mov
xchg
xor
mov
pop
notb
filds
mov
sub
xor
add
jae
lret
and
adc
int
stos
sbb
pop
das
adc
sbb
loopne
in
add
pop
push
movsb
jns
lahf
in
xor
jg
clc
jae
push
jns
ds
sub
sbb
dec
pop
les
daa
data16
push
cmpsl
xchg
ja
inc
sarb
push
push
shll
push
in
cmpsl
jge
and
and
pop
js
cli
into
mov
sbb
xchg
mov
mov
sub
stc
leave
mov
outsl
xchg
loope
mov
add
push
cmpsb
mov
and
int3
cmc
lods
add
aad
jmp
adc
pusha
or
mov
or
hlt
sbb
cmp
fs
cs
mov
mov
cmp
sub
sub
pusha
das
mov
sbb
jp
cmp
ret
mov
add
iret
pop
jmp
lret
pop
scas
mov
in
hlt
push
dec
mov
js
mov
cmp
sbb
inc
inc
jmp
in
inc
insb
out
cmp
iret
add
out
cmp
cmpsl
bound
test
inc
mov
bound
mov
sbbb
push
pop
push
enter
mov
cltd
shrl
fadd
sub
dec
in
sahf
sahf
jbe
fistpll
std
fwait
and
fistpll
cmp
push
jbe
in
mov
lret
xor
fisubl
enter
adc
mov
aad
lret
outsb
ret
add
roll
js
imul
sub
aas
jb
mov
out
xchg
jmp
dec
insb
lds
sarb
ds
mov
mov
cmc
test
add
fdivl
push
shrb
xchg
pop
or
mov
push
jns
rcrb
gs
ret
shl
sub
add
add
int
sub
mov
jmp
loopne
enter
shl
and
cmp
lock
fsub
sub
rclb
jl
and
pop
dec
aas
fmuls
js
cmp
mov
es
pop
ja
pop
inc
pusha
es
mov
test
adc
inc
add
sahf
jbe
ds
or
mov
sub
fcomip
xor
mov
or
lahf
pop
sbb
movsb
cwtl
push
dec
das
cltd
cmp
xor
mov
fstl
sub
adc
dec
or
cmp
mov
pop
out
stos
aas
inc
ss
inc
inc
stos
jno
aam
mov
stos
cmovbe
pop
mov
dec
iret
cmpsb
cmp
enter
shl
jnp
aam
insb
mov
rclb
mov
dec
jge
cwtl
dec
nop
mov
or
adc
mov
insl
dec
pop
stos
rcll
test
cmpsl
push
lcall
hlt
outsl
pop
js
fs
out
xor
dec
fsubrl
push
xchg
pop
push
lods
xchg
decb
adc
bound
dec
inc
xchg
mov
adc
sbb
inc
pusha
movsl
xor
out
cmc
repnz
sub
in
lret
sbb
dec
jl
sub
mov
mulb
pop
negl
sub
push
adcb
cs
mov
movsb
hlt
mov
mov
test
mov
andb
aas
dec
gs
pusha
out
cmp
movsb
xchg
push
and
sub
out
mov
mov
jl
jle
or
inc
shl
xchg
cwtl
je
repz
sbb
push
scas
lahf
xchg
inc
sub
scas
adcl
scas
mov
addr16
mov
inc
out
insl
sbb
jbe
call
test
punpckhwd
adc
sbbb
pusha
cmpsb
out
push
adc
dec
pop
ljmp
pop
pop
sti
inc
mov
mov
mov
cmp
adc
mov
scas
fstl
mov
imul
xlat
cmc
jp
xchg
or
cli
mov
repz
mov
popa
jmp
insb
pop
imul
fs
cmp
sbb
xchg
pop
aad
or
mov
cld
xor
adc
pop
outsb
fldln2
es
aad
inc
or
das
ret
mov
mov
les
and
mov
icebp
clc
mov
cmp
sub
adc
inc
xor
push
jmp
pop
outsl
aam
test
xor
insb
mov
jl
in
iret
and
push
dec
xchg
shlb
and
dec
adc
xchg
mov
xor
mov
lret
lahf
sbb
nop
cmp
sub
adc
dec
cmp
lret
adc
imul
pop
scas
js
dec
adc
ror
push
daa
xchg
sbb
and
sub
sbb
fisubrl
imul
je
cs
xchg
push
adc
mov
into
cmpsl
outsl
cmpl
xchg
mov
mov
mov
lcall
add
mov
loope
sbb
mov
mov
movsb
xchg
sti
mov
mov
mov
xchg
dec
and
adc
lret
jmp
aas
insl
or
mov
scas
cltd
add
enter
in
push
leave
in
xor
fildl
xchg
push
int
sarl
mov
mov
mov
in
push
aas
stos
sbb
out
pop
adc
mov
sbb
push
iret
jbe
fcmovu
and
cltd
pop
jae
lret
adc
mov
shlb
ss
movsb
das
mov
pop
jne
lock
pop
subl
inc
sub
dec
fs
jo
or
mov
jmp
je
lds
roll
mov
inc
adc
icebp
dec
fs
faddl
daa
mov
ljmp
sbb
es
not
inc
fucomp
sub
adc
sub
sbb
outsb
cmpsb
aas
je
jmp
mov
andl
add
pop
pop
push
dec
xor
in
jmp
push
pushf
mov
in
scas
xchg
sub
pop
push
sbb
push
aas
dec
jge
call
mov
test
xchg
lds
nop
popa
mov
sti
cltd
dec
or
enter
xor
jg
negb
sbb
aad
xor
or
add
loop
pusha
fildll
test
mov
minps
push
push
jg
popf
xchg
or
je
mov
add
test
inc
cmpsb
dec
repz
imul
lods
loope
mov
mov
dec
xor
fadd
mov
push
mov
dec
or
add
dec
in
pop
pop
int
repnz
popf
or
add
das
cmp
xchg
push
xlat
cmp
and
aam
std
xchg
cs
int3
lods
jle
xchg
pop
jp
xorl
decl
outsl
ja
and
cmpsl
lcall
mov
cmp
and
out
jg
sub
and
dec
mov
xorb
cmpl
in
lock
mov
sahf
mov
aam
pop
ds
aam
fmull
pop
push
mov
xchg
or
lods
push
cltd
mov
ret
push
dec
mov
adc
subl
jnp
fmuls
mov
popf
out
jp
lea
mov
mov
add
jmp
ret
cmc
pop
sbb
outsl
cmpsl
pop
out
cmc
outsl
mov
not
fiaddl
test
jnp
jno
inc
mov
cmp
shrl
test
ret
jns
pop
adc
imul
sub
das
push
cmp
inc
mov
fs
sub
xchg
icebp
pusha
js
pop
and
in
rclb
mov
jnp
sub
cld
out
dec
daa
jb
cmc
lcall
mov
inc
cltd
or
add
push
add
cltd
adc
repnz
jmp
repnz
and
insb
xor
cmc
sub
pop
les
inc
inc
add
pop
je
fadds
lods
inc
jno
push
call
scas
cmpsb
clc
mov
fdiv
mov
ljmp
inc
fucom
hlt
test
jbe
loopne
nop
mov
sarl
imul
xor
lods
sahf
adc
aam
aas
push
inc
inc
pop
jne
sub
or
push
xchg
test
stos
xchg
sub
fsubrl
and
dec
mov
mov
and
mov
xchg
adc
mov
pop
mov
insl
dec
xlat
test
mov
not
fmull
or
cmpsb
dec
repz
pop
add
mov
ret
push
dec
mov
jnp
sub
cld
repz
and
jb
loopne
pop
jbe
rolb
xchg
pop
stc
or
jo
or
jae
aam
inc
jb
or
cltd
adcl
addl
mov
ljmp
aam
fs
inc
xor
jl
inc
imul
sub
or
and
aam
xchg
arpl
xor
and
aam
std
xchg
mov
ss
sub
inc
adc
cld
test
lea
out
sub
pop
jmp
xchg
bound
popa
push
jne
ljmp
divb
data16
aaa
sbb
sub
push
adc
xor
nop
shrl
std
xchg
xchg
push
cmp
pop
sub
ret
insb
jmp
repnz
in
and
mov
mov
iret
das
jnp
in
sbb
enter
xchg
push
pop
shl
add
cld
jecxz
add
rorb
pop
xchg
jp
cmp
adc
popa
mov
dec
aam
sub
push
mov
ds
mov
cmpsl
or
cmpl
and
sub
push
add
aas
cmp
daa
jle
test
in
and
fiadds
inc
ss
xor
jecxz
aaa
sbb
sub
push
pushf
mov
pop
mov
out
cmc
jno
cmp
stc
scas
ds
loope
test
aaa
add
nop
pmaxub
and
sbb
fisubl
or
clc
push
sub
and
aas
int
test
mov
popa
stos
mov
jge
cld
pop
cmp
inc
enter
sar
mov
jge
movsl
adc
mov
push
xor
jnp
adc
push
arpl
je
pop
jle
nop
jne
imul
pusha
test
aam
aas
gs
inc
pop
jne
sub
or
test
sub
xchg
decb
and
sbb
and
jnp
xorb
nop
mov
ret
inc
pop
adc
in
fcoms
mov
add
sub
pop
xorb
mov
out
add
ljmp
inc
or
aaa
sbb
sub
mov
xor
outsb
pop
sbb
xchg
and
xchg
aas
mov
pop
adc
push
and
mov
cltd
push
dec
pop
repz
and
cmp
stos
cltd
sub
adcl
xchg
loope
nop
cld
repz
in
add
mov
jmpw
jmp
jge
add
mov
push
mov
xchg
enter
xchg
mov
xor
sbb
shr
out
cmc
pop
jl
into
cmp
inc
xchg
movsb
cltd
lods
imul
pop
pusha
mov
jmp
lea
jbe
dec
repz
pop
xchg
cmc
ret
push
nop
out
sbb
cmc
rcll
aas
sub
psubw
pop
xchg
fidivrl
push
cltd
add
cmpsb
arpl
hlt
mov
dec
je
mov
lret
hlt
mov
pcmpgtd
aaa
sbb
sub
adc
push
and
pop
adc
fs
clc
adc
sub
nop
sahf
aad
and
fistl
sub
sub
jbe
cmp
push
repnz
out
mov
dec
dec
sti
mov
mov
repnz
hlt
xor
jecxz
jnp
lods
or
jmpw
jmp
jge
add
mov
cltd
iret
das
jnp
flds
cmp
enter
xchg
push
pusha
data16
jo
or
or
les
sub
frstor
cs
or
push
push
jae
cmpsl
xchg
stos
sbb
xchg
cmpsl
jmp
push
jnp
sub
enter
daa
cmc
pop
mov
dec
mov
jo
sub
xchg
xchg
adcb
dec
mov
add
call
push
into
punpckhdq
test
sub
inc
dec
cmpl
enter
xchg
push
outsb
iret
push
jmp
out
xchg
jecxz
dec
jnp
sbb
or
jo
pop
fs
adc
push
in
loop
sub
or
fcomps
and
mov
mov
jnp
mov
out
push
aaa
loope
mov
mov
dec
mov
std
mov
adcl
mov
sub
inc
xor
aaa
xlat
out
xchg
in
mov
mov
jnp
mov
xchg
stos
mov
mov
rcrl
push
sbbb
mov
fwait
sub
xor
or
out
push
mov
dec
stos
mov
mov
lods
cltd
push
cmc
fistps
cmc
pop
xor
and
pushl
jnp
push
ret
xor
push
adc
test
sub
jo
xchg
dec
push
xor
push
sub
push
iret
ds
inc
push
and
fwait
mov
fistpl
filds
sti
cld
inc
mov
rclb
xchg
mov
ficoml
pop
dec
or
or
js
mov
push
sub
cmp
xchg
dec
inc
sbb
sub
fucom
hlt
jo
jbe
bound
push
mov
std
mov
ret
adcl
mov
sub
inc
orb
aas
cmp
xchg
dec
jp
cmc
sub
fucom
hlt
pop
dec
jbe
inc
jo
jp
or
testb
xchg
xlat
test
jmp
inc
fmull
repnz
loope
cmpsl
fdivrp
xor
mov
jae
push
std
clc
lods
pop
cltd
out
divb
push
push
nop
cmpsl
sub
lcall
mov
mov
addr16
mov
movsb
mov
add
xor
iret
inc
outsl
mov
cmpsl
je
mul
add
dec
or
out
or
shll
xor
pop
dec
mov
cmp
in
insb
adcl
mov
sub
inc
orb
inc
and
sbb
sub
fucom
hlt
adc
shll
xor
pop
dec
in
inc
inc
fdivl
adc
call
sbb
aam
aas
fisubrl
inc
bound
mov
dec
pop
xchg
mov
dec
and
xor
sbb
xchg
out
pop
clc
popa
movsl
iret
adc
rcrb
pop
inc
or
repnz
rcr
and
jmp
inc
fmull
ljmp
cmp
mov
cltd
iret
sub
pop
outsb
dec
repnz
sub
fucom
mov
movsb
fistpll
add
mov
in
xchg
xchg
imul
jmp
fs
pushf
pushl
pop
popa
aas
push
in
dec
pop
and
and
push
movsl
adc
daa
cmp
or
jecxz
ljmp
xchg
mov
out
gs
pop
xchg
mov
jmp
adc
pop
aad
scas
cmovne
push
sbb
popa
or
call
jae,pn
cmp
fistpl
mov
xor
es
inc
xchg
cmpsb
push
pop
orl
ljmp
inc
xchg
mov
les
sub
add
push
mov
mov
sub
cmc
sub
sub
sbb
sub
xchg
push
push
and
popf
inc
pop
jmp
xchg
mov
xchg
or
xchg
iret
lock
push
jno
push
jbe
mov
inc
std
sub
jmp
dec
scas
jecxz
mov
sahf
and
ds
test
add
movsb
ret
adc
lock
push
xchg
cmp
push
sbb
or
cmpsl
mov
aaa
out
aam
aad
and
jne
sub
or
jl
sub
mov
js
cmp
cltd
sub
popa
push
in
mov
lret
jle
clc
mov
add
jle
pushf
fwait
aam
inc
cld
pop
xchg
mov
fcmove
and
dec
or
stos
addb
jge
xchg
dec
xlat
sbb
call
jle
xchg
mov
mov
push
mov
rcrl
push
outsb
pop
addb
mov
fwait
sub
xor
or
kmovw
jp
jle
rclb
xchg
loope
and
repz
dec
mov
xchg
dec
sarb
fmuls
jae
mov
pop
jb
dec
mov
jg
push
cmpsl
inc
ss
aaa
ss
sub
sub
mov
nop
cmc
or
push
mov
movb
in
aam
cmp
cmpsb
outsb
mov
hlt
bound
imul
mov
xchg
cmp
push
adc
in
add
test
sub
xchg
adc
pusha
mov
cmp
jg
pop
shlb
cmp
mov
push
push
cmc
inc
jmp
cltd
pop
sahf
jne
stc
in
in
pop
sub
mov
outsb
sub
adc
and
rolb
movsl
loop
icebp
xchg
and
push
jle
lcall
inc
pop
inc
shl
aas
lret
stc
push
es
cmpsl
xchg
stos
sub
and
bound
mov
and
dec
in
add
test
cli
xor
and
clc
sub
test
aas
push
dec
or
xchg
sub
outsb
jmp
cmp
arpl
insb
inc
insb
shr
pop
fdivl
dec
in
int
jno
outsb
inc
mov
jno
loope
jl
shlb
test
xchg
xchg
clc
lock
mov
int3
add
xchg
jg
repz
xor
inc
push
cmc
lcallw
sbb
mov
iret
mov
jmp
aam
pop
mov
fwait
pop
xchg
rorl
push
fsubrp
xchg
add
sub
pop
mov
xor
stos
mov
pusha
movsl
shlb
jno
push
repnz
sub
popf
je
test
mov
adc
xor
and
out
fcomps
push
je
pop
xchg
mov
mov
call
ja
mov
push
sub
mov
nop
push
loop
scas
cltd
adc
movsb
push
sub
inc
leave
arpl
push
aas
stos
dec
mov
adc
adc
popa
mov
dec
les
pop
mov
mov
es
movsb
jne
inc
lods
cmpsl
push
xor
out
sub
enter
adcb
sub
jl
mov
mov
sahf
shrb
cld
aas
inc
cmp
xchg
sub
or
dec
cmp
xlat
aam
sbb
or
push
sub
inc
rcrl
int3
out
pop
loopne
test
nop
fistpll
mov
mov
popa
adc
cmp
cmp
dec
or
or
push
pop
sub
faddl
mov
push
adc
cwtl
sbb
mov
xor
sub
pushf
lahf
hlt
shl
dec
addb
pop
cltd
pop
dec
aaa
gs
jl
sbb
push
xchg
dec
dec
js
arpl
cmp
outsl
cmpsl
pop
out
imulb
in
jge
imul
mov
pop
clc
shl
push
xor
aas
or
daa
jle
test
add
add
ds
jnp
test
cltd
sub
cmovg
jmp
js
clc
xchg
scas
pop
cmpsl
mov
pop
ds
stc
sub
xor
or
dec
test
div
push
sub
and
sub
sti
xor
xor
inc
insl
mov
outsb
xor
divb
in
data16
sub
in
adc
aas
lret
bound
mov
fidivrs
loop
out
in
cltd
fcomip
scas
push
pop
neg
decl
out
or
sbb
adc
jl
in
sbb
frstor
adc
in
out
sbb
fsubrp
mov
addl
lcall
test
dec
pusha
mov
push
adc
stc
popa
je
cli
cmp
fs
xchg
xor
jp
cltd
mov
aaa
stc
push
jecxz
or
sahf
cmpsl
aas
mov
inc
fldt
in
cltd
fcomip
scas
insl
pop
or
in
repnz
pop
fwait
lahf
jl
sbb
or
iret
dec
lock
leave
push
xchg
dec
push
lea
sbb
mov
mov
dec
jnp
xchg
lock
cmp
sbb
jp
mov
push
sub
repnz
push
int3
xchg
ret
and
xchg
outsb
push
subl
jns
int
jp
aaa
inc
and
sub
xor
xchg
int
outsb
loop
xchg
pusha
fwait
lock
mov
sbbb
xchg
jmp
in
sbb
iret
cmpb
jbe
mov
ret
js
lret
jne
adc
mov
xchg
cli
mov
ret
mov
fdivl
xchg
mov
or
mov
movsl
xchg
cmp
das
pushf
mov
sahf
movsl
sbb
xlat
push
cmp
clc
pop
lret
xor
outsb
dec
insl
adc
xor
xor
xchg
inc
arpl
js
push
call
nop
out
jne
lret
pop
insb
std
mov
xchg
bnd
mov
inc
hlt
aam
pusha
daa
orl
xlat
insb
push
scas
stc
cmpsl
gs
mov
insb
test
pop
sar
ret
mov
stos
xor
insl
adc
mov
stos
sub
shll
inc
filds
lods
ret
inc
in
mov
sub
jnp
pop
aas
jle
mov
scas
loopne
and
jns
rorb
or
test
ret
pop
inc
jl
je
mov
test
imul
cli
lcall
adc
sub
or
cmpsl
mov
iret
lock
bound
clc
nop
jge
inc
and
imul
xor
jge
push
dec
adc
adc
test
sub
clc
pop
in
cmp
int3
xchg
cmp
cwtl
std
das
dec
or
out
xor
repnz
js
fwait
jge
jmp
insb
fxch
es
add
sbb
mov
pop
sub
sub
aam
dec
xor
mov
andb
pop
inc
xchg
add
add
inc
push
or
mov
jp
pop
mov
ljmp
call
cmp
mov
add
push
mov
fistpl
xchg
or
mov
jo
ficompl
unpckhps
insl
ljmp
je
jb
enter
push
rorl
add
push
xchg
pop
test
mov
dec
mov
xorl
clc
dec
jae
mov
stc
ja
out
out
xor
rcrb
in
inc
jmp
shrd
pop
jno
call
or
cbtw
neg
push
mov
or
mov
out
nop
test
mov
mov
nop
addr16
shl
sub
sub
inc
shrl
scas
call
or
data16
jg
adc
imul
jmp
push
test
cmp
jb
xor
daa
pop
pop
loop
xor
xor
jmp
and
cwtl
sub
sub
cmp
pop
lcall
xchg
mov
mov
ret
xlat
fidivs
push
cmc
test
sbb
sub
sub
movsl
push
mov
ret
inc
pop
mov
dec
sub
cmc
sbb
cs
push
lock
dec
xlat
test
mov
neg
push
adc
faddp
mov
out
cmc
andl
xchg
loope
add
daa
lcall
pop
or
sub
mov
push
xor
mov
data16
push
add
lcall
mov
sbb
sub
xchg
loopne
flds
lock
ja
js
int3
or
cmp
sub
cltd
shl
sbb
jl
pop
imul
das
ja
ffreep
hlt
and
push
and
test
stos
adc
rolb
or
add
mov
or
jmp
mov
jae
test
fcomip
fistl
rolb
loope
imull
mov
add
cmpsl
je
cmc
fcomip
hlt
dec
negb
loope
cmp
xchg
xor
shrb
je
dec
jnp
adc
rol
mov
jecxz
add
xchg
sarl
cmpsl
mov
add
addr16
hlt
push
mov
ds
xor
bound
loope
xchg
push
cld
xchg
aas
loop
xor
mov
jl
xchg
xchg
xchg
and
add
push
test
rclb
xchg
lcall
inc
test
cltd
sub
cmovg
or
sbb
hlt
cld
mov
sub
cmc
loope
jo
mov
pusha
adc
and
dec
pslld
mov
and
pop
mov
xchg
push
jnp
cmp
fldenv
pushf
push
add
add
cmc
stc
sub
lahf
dec
addb
stos
cltd
pop
dec
or
inc
add
lret
and
cltd
shl
sbb
sti
push
xchg
enter
xchg
popa
push
in
mov
mov
pop
xchg
cltd
add
arpl
hlt
mov
lcall
mov
nop
cmpsl
jp
fidivl
rorb
sub
je
pop
sbb
cltd
add
cwtl
clc
test
lea
out
sub
pop
cmpb
fistps
aaa
xor
and
mov
ds
sub
and
dec
mov
cmpb
adc
movsb
pop
add
js
int3
or
cmp
xor
pop
push
cltd
shll
sarb
imul
push
pop
into
or
sub
sub
inc
imul
hlt
lods
loope
mov
push
inc
jo
inc
ljmp
jnp
in
dec
sarl
mov
jecxz
add
xchg
rcrb
push
xchg
push
cmp
rclb
xchg
or
dec
je
int3
pop
jns
or
scas
cltd
sub
cmovg
mov
mov
sub
cmc
loope
jo
xlat
rclb
jmp
inc
fmull
repnz
loope
cmpsb
cmp
ficomps
test
jne
shl
mov
sbb
cs
sub
xchg
loopne
adc
les
rsm
pop
or
pop
xlat
sub
mov
add
call
push
into
sbb
loope
cmp
push
cmp
jnp
jnp
jnp
cmp
fldenv
push
mov
adc
push
pop
pop
inc
test
std
sub
push
lock
aas
into
dec
and
jle
test
adc
popa
xchg
into
fcmovnb
fidivrs
cltd
scas
cmc
push
enter
xor
bound
adc
jp
push
test
cmp
push
mov
jmp
jge
mov
je
cmc
fcmovne
hlt
dec
xchg
sbb
sub
dec
jbe
or
aas
push
lods
cltd
inc
xor
add
movsb
in
pop
pop
int
repnz
or
inc
outsb
mov
cmpsl
std
xchg
aas
sub
fs
cld
pop
mov
jmp
push
es
sbb
mov
mov
ljmp
inc
arpl
inc
add
lret
xor
cltd
shl
sbb
sbb
cmpsb
xchg
enter
xchg
popa
push
in
dec
push
in
adc
jecxz
push
aas
scas
dec
inc
daa
jle
test
das
nop
cmp
scas
repz
fdivl
and
add
enter
xchg
push
pusha
data16
inc
or
or
add
mov
or
inc
sub
enter
and
fwait
jno
push
mov
inc
add
lcall
push
mov
cltd
sub
xchg
loopne
dec
ja
test
sbb
pop
or
cltd
sub
std
pop
pop
int
repnz
ret
or
inc
outsb
mov
cmpsl
std
xchg
pshufw
loopne
fisttps
add
test
mov
pushf
lret
ret
adc
inc
sub
mov
push
dec
mov
daa
push
sbb
sub
lods
fisubs
push
dec
jnp
scas
jo
cmp
outsl
cmpsl
pop
out
cmc
outsl
mov
pop
sbb
hlt
dec
movsb
dec
sub
cmc
sbb
cs
push
data16
dec
xlat
test
mov
neg
push
adc
faddp
mov
out
cmc
adcl
xchg
loope
add
repz
les
std
xchg
xchg
es
cmp
ja
and
mov
cltd
push
inc
orb
xchg
mov
popf
pop
mov
sub
or
inc
mov
rol
in
cltd
xor
call
xor
mov
push
push
cmc
inc
lea
or
addr16
sbb
xcrypt-ofb
cmpsl
jmp
out
lea
adc
lock
out
cmc
outsl
dec
imul
pop
mov
sbb
mov
imulb
ljmp
inc
bound
sub
mov
cli
and
jnp
add
pop
fmul
outsl
cmpsl
pop
out
cmc
outsl
mov
pop
mov
movsb
dec
sub
cmc
sbb
cs
out
data16
xlat
test
mov
neg
out
adc
faddp
mov
adc
repnz
sahf
loopne
and
or
pop
aas
mov
fucomi
xlat
ja
adc
cltd
ret
inc
repnz
in
insb
sbb
outsb
mov
jae
cmpsl
mov
and
mov
sub
inc
repnz
in
pop
and
cld
pop
mov
decl
jb
inc
add
ret
std
aaa
jnp
push
xor
sbbb
fwait
aam
aas
fucomp
inc
pop
jb
daa
jno
test
inc
lcall
jnp
ret
xor
bound
popl
shlb
mov
imul
push
test
je
inc
lock
push
jno
push
in
iret
bound
outsb
sub
sbb
cli
inc
sbb
and
fwait
mov
fistpl
xchg
mul
jo
xchg
dec
xlat
mov
fmull
repnz
jmp
dec
cmp
ficomps
stos
cld
cwtl
cltd
xchg
push
js
cmp
fldenv
pushf
nop
add
addb
loopne
aas
decw
ja
and
mov
cltd
push
inc
orb
xchg
pusha
fistps
out
inc
add
fwait
orb
int
aaa
js
hlt
xor
and
loope
aam
aas
jge
inc
pop
jb
daa
jno
test
add
mov
lods
cltd
push
neg
pop
mov
jle
shll
adc
xchg
cld
ss
jmpw
jmp
jge
mov
je
notb
hlt
dec
es
sub
fucom
stc
jnp
lahf
fincstp
sub
js
les
adc
rolb
loop
xchg
push
adc
rclb
xchg
shr
dec
or
popa
xor
and
xchg
out
pop
in
stos
pushf
add
lret
rolb
sub
push
clc
cmp
mov
cmp
ret
shrl
test
ret
jns
pop
mov
imul
xor
push
adc
js
dec
dec
sti
mov
inc
ret
add
xlat
rcr
out
ja
rolb
push
jno
push
mov
decl
mov
jb
in
ss
pusha
popf
je
cmp
fildl
mov
ljmp
shl
dec
addb
ret
adc
ja
aam
sbb
and
mov
bound
pusha
je
popf
or
push
push
je
cmpsb
in
lcall
lcall
xor
pop
orb
shll
int
repnz
xor
inc
outsb
mov
cmpsl
std
xchg
pfcmpeq
cmp
fisttps
add
test
mov
mov
or
sahf
lea
in
insb
adcl
mov
imul
in
xchg
sub
bound
dec
shl
fwait
add
pop
adc
lret
stc
cmp
add
sarb
jo
aam
stos
sbb
jnp
rcrl
movsl
negl
jno
shlb
pusha
nop
xlat
movsb
pop
fs
mov
je
or
daa
or
nop
nop
xlat
je
aam
xchg
mov
je
or
aam
je
jmp
fldenv
je
or
les
jmp
jo
pushw
push
inc
cmp
inc
in
movsl
fwait
inc
das
mov
xchg
inc
subl
call
jg
scas
mov
mov
movsl
lds
scas
add
jg
mov
add
arpl
sub
iret
sub
ss
cmp
out
movsb
das
call
xchg
sub
sbb
xchg
jno
aam
add
inc
inc
pandn
clc
jecxz
sub
pop
sbb
jb
inc
aam
sbb
pop
rcrb
xlat
fldl
pop
push
int
scas
and
dec
xchg
jne
mov
int3
out
inc
push
jb
in
sbb
inc
lods
cmpsl
push
daa
sti
les
xchg
dec
cli
movsb
pop
mov
aad
mul
inc
jo
mov
mov
jle
test
rcll
stos
cmp
test
mulb
test
inc
sub
inc
in
add
cmpsl
mov
negb
clc
pop
fwait
aad
add
ss
enter
push
std
enter
jmp
movsb
pop
lods
xor
adcl
movsl
jge
pop
js
push
push
lret
imul
cld
nop
sbb
inc
lcall
orb
push
pop
inc
je
mov
movsl
int3
mov
pop
push
scas
lahf
cmp
call
mov
pop
inc
shlb
fs
stc
pop
cmpsb
test
or
out
mov
sub
insb
test
xlat
jns
adc
sti
cwtl
arpl
ret
shlb
ficoml
jae
or
popf
mov
aam
cwtl
rorb
into
mov
and
xor
out
cmc
jb
outsl
push
adc
addr16
fwait
sub
call
jnp
orb
adc
cmp
fldenv
pushf
in
and
nop
test
pop
in
outsl
or
gs
xchg
mov
inc
fistpll
ret
sarl
out
xchg
cmp
and
sti
mov
mov
repnz
fidivl
adc
dec
sahf
mov
fwait
aam
aas
add
inc
pop
jb
cmpsl
mov
ljmp
xlat
mov
lods
notb
xchg
insl
push
sti
xor
cmp
rolb
cmpsb
xor
in
cltd
clc
pop
jno
dec
adc
mov
jge
jnp
andb
pop
cmpsl
les
inc
ficomps
sub
inc
in
push
sbb
shlb
loopne
sub
xchg
xchg
repnz
cmp
or
jmp
inc
cmp
mov
inc
orb
dec
dec
cmpsb
xchg
aam
sbb
sub
xchg
loope
sar
repz
push
jl
cmc
rcl
fsubs
jl
jae
mov
orl
ljmp
and
fcmovnu
sbb
jno
lcall
and
insb
popa
sub
add
cmp
loopne
fbld
aas
aam
ds
sub
cmovg
cmc
repnz
je
push
or
scas
mov
inc
shrl
xor
cld
dec
adc
fndisi(8087
and
cld
pop
mov
inc
shrb
jnp
push
dec
mov
fistps
xor
cmpsl
mov
xchg
and
dec
mov
add
enter
push
cmc
outsb
mov
adc
and
lods
negl
inc
cmc
push
sub
fsubrl
sbb
push
js
data16
inc
push
sbb
orb
cmpsl
je
cmc
sahf
mov
cmc
sub
dec
jbe
les
add
cwtl
les
mov
add
sub
pop
subb
jo
scas
sub
sbb
sub
inc
sbb
xchg
nop
push
and
popf
dec
sub
xchg
fs
jecxz
mov
data16
loope
jo
xlat
test
jmp
inc
fmull
bnd
loope
cmpsb
bound
adc
cwtl
mov
iret
das
jnp
insb
add
or
add
data16
jo
or
ret
cmpsb
add
push
pop
xchg
xchg
je
inc
lock
push
jno
push
dec
sbb
out
mov
cmpsl
std
xchg
psubusw
dec
in
add
test
sub
mov
fidivl
mov
xor
jl
int3
imul
xchg
fs
repz
fwait
lods
jge
xchg
cmpsl
cmp
sub
call
or
mov
test
cmp
jb
loope
xchg
stc
pop
js
dec
sub
outsb
sub
mov
mov
jne
sub
inc
mov
ror
jns
fbld
jnp
cmp
es
sub
cmovg
cmp
and
out
or
enter
ss
xchg
andl
jl
and
jnp
test
sbb
adc
xor
cmp
aaa
mov
adc
out
mov
cwtl
mov
push
and
dec
adc
sub
xlat
or
shl
sub
jecxz
flds
loope
mov
push
inc
jo
dec
jge
jne
data16
jnp
js
xchg
mov
adc
dec
mov
daa
push
sbb
mov
mov
or
dec
cmp
fldenv
pushf
fs
fldl
int
in
outsl
mov
gs
xchg
mov
jo
aas
ret
sarl
ljmp
pop
mov
xor
sbb
sub
cwtl
adc
xor
or
add
cwtl
sub
mov
lea
out
sub
pop
subb
mov
dec
jo
scas
sub
sbb
sub
inc
sbb
xchg
mov
dec
jnp
fwait
mov
fistpl
xchg
cwtl
daa
jecxz
aaa
jnp
mov
mov
sahf
enter
loope
aam
aas
mov
cmpsl
mov
dec
and
jnp
pop
add
je
lods
in
cltd
fcomip
scas
insl
pop
clc
sub
repnz
adc
jo
sub
sbb
jb
xchg
insl
dec
xlat
test
mov
dec
or
jnp
clc
mov
fdiv
mov
arpl
jne
xchg
loopne
push
ja
test
rorb
pop
or
push
ds
sub
and
fwait
jno
jb
je
lea
in
jo
dec
andb
pop
cmpsl
les
xchg
ficomps
sub
inc
in
add
cmpsl
mov
push
sbb
mov
xchg
xchg
and
add
mov
into
or
or
ret
inc
imul
fsubrs
push
jbe
push
inc
jo
fidivrl
jne
data16
jnp
sarb
dec
mov
daa
push
sbb
mov
mov
mov
jnp
cmp
add
js
fisttpl
sub
jnp
rol
dec
lcall
push
push
jmp
adc
in
or
pop
sub
jnp
orb
cmc
sub
and
xchg
fcmovnb
inc
add
repz
inc
xor
add
enter
pop
int
hlt
sbb
dec
cmc
and
mov
fnstcw
push
std
adc
dec
ljmp
ret
shlb
sub
sbb
cs
loop
add
dec
xlat
test
mov
neg
loop
add
lret
sbb
cmp
xchg
xchg
enter
xchg
popa
or
je
cmc
lret
movsb
fdivl
inc
jo
aam
inc
or
xchg
mov
ficoml
fistps
dec
cmc
jo
xchg
cmp
mov
cmpl
std
pusha
lods
pop
cltd
out
cmc
aaa
push
push
cmp
xor
out
cmc
jb
outsl
push
mov
push
add
add
jmp
mov
movsb
pop
mov
adc
repnz
pop
daa
mov
cld
xchg
xorl
push
movsb
test
std
xchg
xchg
stos
cli
cmp
push
insb
jmp
jno
insl
in
and
inc
orb
xchg
pop
xchg
sub
dec
dec
sti
mov
mov
fnstenv
inc
test
aam
inc
rclb
mov
ficoml
pop
dec
cmc
test
xchg
cmp
jbe
dec
les
inc
dec
ds
std
cwtl
lods
pop
cltd
out
divb
push
push
lock
sub
and
inc
ss
jb
outsl
and
data16
xlat
test
mov
neg
jp
add
lret
loopne
cltd
shl
sbb
sub
xchg
popa
push
in
cld
push
cmp
ja
loopne
aas
adc
clc
adc
push
and
mov
cltd
insb
pushf
jge
lahf
jbe
cmp
push
xchg
mov
mov
dec
dec
sti
mov
mov
fnstenv
inc
loopne
aam
inc
mov
jno
sub
out
sahf
in
loope
adc
xchg
clc
push
je
int3
adc
test
cltd
sub
cmovg
test
in
xor
push
push
xchg
add
adc
std
pop
pop
int
repnz
add
je
push
lods
dec
scas
mov
inc
je
cmp
jmp
enter
sub
push
mov
jbe
push
loopne
cld
aam
xchg
out
mov
out
aad
add
cmpsb
xor
add
in
pop
bound
push
dec
js
rcrb
enter
xchg
popa
arpl
pop
test
out
jmp
adc
cmp
sub
adc
mov
rcrb
mov
mov
xchg
hlt
in
xchg
xor
jne
jne
inc
in
sbb
pop
int3
mov
bound
loope
lcall
fwait
subb
xchg
push
sbb
fwait
dec
jo
in
mov
mov
cwtl
aaa
mov
ljmp
jecxz
movb
mov
imul
loopne
stos
cwtl
orb
or
fdivrl
push
fadds
sub
pop
mov
push
fdivrs
add
pop
in
out
stc
mov
iret
push
ror
loop
sbb
data16
fs
xchg
jbe
mov
sub
pop
js
mov
add
push
dec
mov
into
adc
mov
test
add
sbb
or
xchg
inc
enter
mov
add
or
xchg
out
roll
cmp
mov
test
and
shlb
cld
mov
cmp
mov
imul
dec
mov
lcall
xchg
aam
loopne
idivb
pusha
addb
cmpsb
jnp
jl
out
and
les
dec
fidivrs
or
mov
notb
ja
dec
stos
xor
in
pusha
nop
adc
test
and
or
mov
std
xor
stos
jne
out
cmp
dec
lret
pop
je
lret
dec
mov
lds
imul
fbstp
or
add
sbb
pop
call
inc
mov
xchg
xor
call
mov
stos
sbb
es
sub
mov
xchg
in
add
in
push
cmpsl
cmp
ret
and
cmp
cld
dec
repz
lock
sarb
dec
cli
pop
subb
gs
bnd
inc
xchg
mov
stc
push
lock
in
cld
or
push
es
xor
inc
movsl
lret
fimuls
add
fimuls
add
repnz
popf
inc
rcl
pop
mov
mov
out
adc
jle
pop
inc
stos
pop
aaa
mov
jecxz
push
sti
jmp
fwait
push
dec
pop
dec
shlb
xchg
adc
ja
test
mov
int
cmp
or
popf
cli
pop
mov
ror
xor
push
xor
pop
out
lea
mov
pusha
xor
pop
fldenv
jns
dec
decb
push
rorl
fisttps
sub
lods
push
pop
cmp
dec
adc
dec
jl
xchg
dec
mov
insb
cmp
jl
adc
jns
mov
xchg
not
mov
repz
aam
loop
cs
jl
jg
mov
pop
fs
and
movsl
xchg
std
test
fadd
jo
inc
pop
test
hlt
or
arpl
lods
ds
lods
sub
push
sarb
sub
daa
movsb
sahf
lock
and
adc
xchg
ja
insb
dec
mov
mov
sbb
xchg
sub
imul
mov
add
rclb
pop
sub
jae
mov
roll
pop
sbb
addb
rclb
cltd
sub
jo
xchg
mov
add
cli
out
push
jle
add
js
sti
push
stc
mov
daa
mov
xchg
sub
iret
mov
jmp
xchg
lock
mov
lock
in
mov
lahf
shrb
mov
cmp
push
psubb
sbb
sbb
pop
outsl
mov
cmp
adc
xchg
dec
mov
ret
je
test
frstor
test
add
jge
nop
inc
add
movsl
in
dec
pop
push
jmp
mov
adc
enter
in
ret
lret
popl
into
cwtl
pop
in
add
in
sub
xor
mov
scas
or
sbb
loopne
imul
dec
ret
call
data16
dec
shl
loopne
in
sub
adc
push
fs
mov
xchg
xchg
jo
sbb
fidivrs
sahf
repz
mov
outsl
out
mov
jo
sub
call
mov
add
out
adc
aad
out
in
shll
nop
or
inc
dec
mov
lods
adc
push
push
adc
out
push
imul
ret
xchg
cmp
mov
cltd
lea
or
fsubp
hlt
mov
sbb
pushf
roll
mov
push
sahf
rorb
rolb
xchg
cmpsb
cltd
sub
addl
cld
sub
mul
ss
pop
out
xchg
cmp
incb
in
das
out
inc
xor
sbbl
add
cli
or
lods
inc
cmc
fcoml
inc
mov
mov
int
jne
std
xchg
or
xlat
arpl
ret
repz
mov
xchg
adcb
cltd
mov
sub
mov
sti
add
je
lock
andl
dec
push
sbb
sbb
cltd
mov
mov
mov
out
dec
je
rcrl
adc
push
push
xchg
shll
inc
cs
mov
aad
or
jecxz
push
pop
xorb
inc
add
or
ret
mov
and
xchg
inc
bound
setne
push
and
int3
mov
mov
cmc
adc
repnz
jo
jp
aas
sub
or
mov
ror
sti
addr16
jbe
sarl
lret
mov
cli
mov
in
lret
xchg
sahf
and
xchg
pop
jg
mov
mov
pop
ds
sbb
cli
push
mov
mov
mov
fwait
dec
rolb
xchg
dec
fcompl
jp
mov
movsb
pop
and
jl
std
mov
mov
test
jmp
sbb
rclb
dec
rcrb
sbb
xor
push
cmp
xor
pop
push
pushf
or
out
pop
clc
scas
mov
pop
ss
pushf
xlat
hlt
mov
dec
lock
sub
fcoml
in
mov
pushf
mov
dec
xchg
insb
pop
loope
aaa
mov
shr
cmc
adc
jae
pop
sbb
repz
jmp
or
mov
in
push
add
mov
xor
orb
adc
mov
adc
call
add
out
data16
and
xor
mov
data16
push
daa
sbb
xchg
cmpsl
shlb
in
bound
adcl
mov
mov
dec
pop
pop
iret
dec
pop
stos
mov
lcall
pusha
and
cmp
enter
es
lcall
add
hlt
xchg
dec
sbb
cmp
cmpsb
das
mov
xchg
jbe
sub
mov
arpl
into
jne
testb
cld
sbb
aas
mov
js
mov
cmpsl
ds
ret
cmp
inc
cmpsb
dec
mov
iret
sub
adc
and
cmp
bound
dec
movsl
cmpsl
lahf
add
mov
test
inc
push
sbb
adc
mov
daa
inc
gs
aam
fldenv
nop
fmulp
push
mov
adc
andb
and
test
ret
fstps
test
scas
ret
push
test
sbb
pusha
adc
ror
bound
push
ljmp
pop
sub
pop
add
dec
inc
fmuls
mov
mov
mov
hlt
hlt
mov
in
in
fnstenv
lods
test
hlt
mov
sbb
add
push
add
inc
push
ljmp
dec
jb
push
cmc
cmp
pop
fsubs
js
cmp
cmp
test
ds
mov
lret
xor
jl
adc
adc
or
add
pusha
iret
xchg
mov
cmp
hlt
add
test
add
ljmp
add
cmpsl
adc
cwtl
loopne
cwtl
jl
ret
mov
or
inc
jae
ret
cmp
cs
pop
jp
and
mov
xor
sub
xchg
xchg
stos
dec
xchg
orl
sub
lock
or
loopne
sbb
popa
icebp
jno
mov
dec
ds
sti
out
fwait
xchg
movsl
adc
or
int
dec
ljmp
shll
mov
dec
jle
cmp
inc
sub
aas
fldcw
das
cmp
cmp
rol
add
fistpll
hlt
mov
shrb
loop
or
das
cmp
hlt
out
sti
xor
fiaddl
in
shl
push
es
xor
cltd
pop
dec
mov
iret
sbb
mov
inc
pop
pushf
call
aaa
dec
dec
addr16
fisubrl
into
andb
negl
cmp
std
mov
pop
idivb
push
push
jge
imul
fsubs
pusha
imulb
add
xchg
cld
jno
fnstsw
pop
add
test
movsb
jo
cmp
mov
xchg
roll
sub
xor
lock
mov
sub
ja
jle
cmp
daa
cmp
or
clc
jge
dec
xor
nop
roll
inc
pop
inc
dec
sub
mov
popa
mov
fldenv
in
jg
sub
testl
sarl
out
adc
push
and
aam
jmp
incl
xor
fs
xchg
lock
sub
sub
mov
cmp
cltd
in
fwait
push
or
or
cmp
mov
jecxz
mov
xor
push
and
fcoml
lret
outsb
lahf
adc
in
in
or
push
cmp
push
adc
cmp
xchg
clc
aas
adc
mov
sub
xchg
pushw
fsubr
stos
inc
popl
cs
adc
push
lahf
inc
mov
and
repz
xor
xor
mov
push
inc
dec
mov
mov
es
scas
movsl
in
pop
jns
sbb
and
loop
jae
aas
xor
fadd
aam
ss
aam
jle
inc
scas
jge
sub
icebp
sbb
out
lret
xchg
push
das
cwtl
mov
cmp
pop
and
xor
in
sahf
sub
shrl
cmpsb
dec
xchg
mov
xchg
xor
pop
sub
adc
dec
mov
nop
nop
adc
and
ja
insl
push
rcrl
xor
das
gs
pop
mov
sub
mov
push
push
rolb
lock
push
out
outsl
icebp
fisttps
ss
or
pop
dec
fistps
cmp
shlb
jnp
or
mov
push
mov
push
cmp
loope
pop
sbb
push
inc
pop
out
xor
andb
cmp
jnp
movsl
sub
xor
cli
and
xor
cli
jge
movsb
adc
mov
shl
cmp
pop
pushf
mov
mov
test
daa
test
xchg
cmpb
xchg
out
pop
jns
and
mov
js
repz
push
aad
pop
inc
ret
aas
cmpsb
mov
adc
add
jne
and
pop
xchg
and
jno
lret
les
xchg
add
xor
scas
mov
mov
xchg
les
into
adc
js
cmp
mov
bound
jb
and
mov
jns
and
mov
fldt
mov
dec
jb
jmp
test
mov
loopnew
rcrl
in
sbb
fisubrl
insl
adc
jg
jmp
push
add
jecxz
test
imul
xchg
inc
insb
scas
xor
adc
popa
test
out
jne
movsb
lret
add
xor
pushf
push
outsl
insb
push
lds
stos
gs
loope
mov
sti
addl
gs
stc
outsl
inc
pop
and
push
clc
mov
stc
dec
adcl
mov
inc
or
and
sbb
mov
ret
out
rcr
roll
sbb
fdiv
adc
shll
loopne
imul
stc
pushf
mov
xchg
fimuls
cmp
pusha
daa
sub
stos
mov
negl
add
mov
pop
dec
xchg
and
imul
mov
cltd
xlat
xchg
out
or
xor
fmull
cmp
test
push
push
call
test
jmp
push
push
pop
xchg
das
mov
push
aam
xchg
jne
push
lcall
xchg
repnz
icebp
push
in
daa
and
stos
into
in
fldcw
daa
xor
push
sarl
fs
repnz
bound
inc
nop
mov
bound
xlat
repnz
mov
cmp
xchg
inc
or
outsb
dec
sub
jo
and
dec
dec
les
sub
adc
or
jle
and
mov
fsubs
mov
pop
dec
sub
inc
cmc
mov
sbbl
ss
fsubs
divl
popa
jge
push
and
pop
loopne
lcall
pop
mov
and
ds
cmp
adc
inc
ss
imul
and
xchg
mov
insl
or
pushf
and
cs
enter
push
aas
mov
enter
jmp
movsb
add
aad
jo
adc
push
mov
ret
pop
jecxz
scas
sub
sbbb
ret
pop
jmp
jno
ret
dec
sar
ds
test
daa
inc
mov
lock
push
scas
pushw
cmp
jae
push
iret
add
adc
push
push
xchg
fs
push
subb
stos
test
mov
test
jecxz
sbb
in
push
add
sub
pop
and
dec
sub
xor
xchg
add
dec
add
in
fimull
push
in
ds
cwtl
in
adc
inc
dec
imul
cs
dec
dec
das
mov
shlb
sbb
pop
es
push
aaa
cmpb
testb
into
es
mov
shrl
in
sbb
xchg
dec
and
cmpsl
aad
push
stos
pushaw
push
and
jl
jnp
jno
ficoms
xchg
sbb
dec
in
movsl
rcrb
mov
xor
popf
or
adc
mov
movsb
mov
cltd
lods
inc
insb
sub
into
pushl
divl
or
rcrl
adc
cmp
push
cmpb
pop
pushl
mov
push
fs
cmpsl
or
loopne
dec
mov
add
mov
hlt
xor
jo
orl
or
insb
inc
cltd
mulb
jmp
sbb
dec
push
add
scas
dec
push
xchg
dec
cmp
mov
aam
bound
or
scas
or
je
and
adc
inc
or
pop
int3
inc
lea
jbe
test
cmp
add
dec
sub
push
mov
out
lods
pop
repz
aas
adc
gs
adc
mull
insb
xor
mov
mov
rclb
or
fildll
sub
nop
cwtl
movsl
jecxz
fstl
ljmp
test
push
lahf
ja
gs
mov
xchg
jno
push
xor
sbb
imul
add
xlat
fcmovu
mov
mov
inc
cltd
cli
scas
cmpsl
pop
jle
mov
push
jo
cs
xchg
js
jp
dec
sbb
push
push
cld
or
in
das
ret
add
inc
int3
dec
orb
stos
jno
and
sub
inc
aam
loopne
mov
jns
out
fcoml
js
cmp
mov
push
arpl
cmc
xchg
js
in
push
dec
imulb
test
out
fsubrs
inc
xor
movsb
adc
adcl
inc
rclb
mov
fisubrl
cwtl
pop
xchg
dec
mov
pop
mov
lret
lods
mov
insb
add
sbb
mov
ds
xor
aad
ficomps
stos
mov
sbb
test
mov
or
add
sbbb
repnz
adc
mov
mov
mov
xchg
mov
cmpsb
cmp
outsl
xchg
cmpb
push
add
push
dec
loop
or
je
stc
shr
test
out
sbb
imul
fsubs
pop
mov
xchg
fnsave
sub
pop
pusha
aam
data16
mov
test
pop
xchg
pusha
push
data16
adc
mov
repnz
rcl
push
dec
sbb
mov
pop
xor
pop
add
insb
pop
adc
mov
xor
dec
sahf
adc
xchg
mov
ds
clc
movsb
push
add
mov
fisttpl
inc
xor
rcll
mov
mov
jg
jne
xchg
aad
or
out
mov
fldcw
cli
cld
movsl
xor
inc
and
xchg
sbb
push
sbbb
jo
aad
mov
jge
insl
add
insb
pusha
mov
jbe
stc
xchg
xor
pop
cld
fidivrl
mov
fildl
jp
mov
cmp
icebp
inc
test
xor
adc
imul
push
inc
jp
mov
push
aad
jae
dec
mull
repnz
movzwl
out
jl
mov
out
cltd
sub
lahf
or
subb
orb
xchg
jb
mov
xlat
inc
arpl
movsb
pop
out
test
imul
outsb
mov
push
mov
lret
xchg
flds
cmp
pop
xor
repnz
mov
inc
push
pusha
and
or
cmc
ljmp
sub
push
add
sub
lods
ja
mov
aaa
shrl
sti
or
sub
daa
cmp
adc
daa
ljmp
arpl
add
jne
mov
jmp
or
lods
jno
push
int3
inc
fwait
shrl
jne
pop
xor
aaa
or
cmp
xor
add
js
ret
pop
push
icebp
fwait
add
jl
test
xor
hlt
lods
push
clc
sahf
std
stos
outsb
insb
fwait
scas
in
pop
adc
ja
mov
xor
cmpsb
inc
or
mov
xlat
mov
xchg
push
push
xorb
add
addb
shll
add
lcall
insb
add
and
shl
add
out
addb
jp
xchg
rorb
int3
mov
lea
addl
dec
xor
lds
jae
nop
fmull
mov
in
jecxz
xchg
xchg
dec
or
aaa
sbb
sub
adc
popa
xor
gs
push
fsubrs
ja
in
cs
stos
out
xor
or
es
movsl
int3
xor
sbbl
mov
adc
outsl
push
fnsave
nop
fstpl
dec
dec
out
data16
aaa
bound
push
pushf
imul
cs
sub
xorb
inc
out
ja
pushf
fcomps
sbb
mov
add
js
cli
mov
rorl
daa
mov
pop
fs
test
fwait
pop
and
jns
pop
dec
jns
mov
mov
sub
aam
sub
js
dec
hlt
out
jno
xchg
sbb
jl
fadd
in
loope
push
jns
int3
cmp
pop
ret
push
push
outsb
out
inc
test
sti
lods
and
aam
and
push
enter
inc
jecxz
jne
inc
mov
cmpsl
test
pop
insb
xor
std
imul
xor
xchg
fnsave
jg
shrl
xlat
lret
push
push
mov
jbe
mov
test
xor
push
sub
ds
inc
mov
clc
push
push
ficoms
dec
push
mov
cmpsl
xchg
mov
mov
sbb
push
mov
dec
jecxz
ret
and
mov
mov
int3
test
xchg
jmp
add
push
filds
add
out
mov
adc
aad
mov
xor
xchg
popf
push
jecxz
sti
scas
enter
sbb
int3
in
mov
dec
add
sub
and
fcomps
int
sar
popf
ja
clc
nop
cs
neg
adc
das
xchg
inc
xchg
ss
jo
jb
adc
iret
pop
in
fistl
cs
dec
repz
mov
je
loope
mov
insb
les
jb
hlt
es
mov
das
test
aam
mov
sbb
cmp
les
sub
push
adc
ds
shlb
es
mov
scas
out
call
mov
adc
clc
xchg
add
pop
add
cmpsb
jns
rcrb
fnsave
mov
scas
repnz
mov
add
cmp
das
push
repnz
lcall
cltd
adc
sbb
xchg
pop
movsl
inc
gs
mov
mov
das
push
test
cli
cld
xchg
subps
or
xor
pop
addr16
fidivrs
cmpb
mov
ds
adc
cmp
stc
fistpll
xchg
push
push
aad
and
mov
repz
std
fdivl
jnp
cmpsb
out
cmpl
fstpt
test
jl
push
cmp
lea
hlt
pop
xor
push
pop
dec
testl
adc
loop
stos
shll
mov
icebp
pop
mov
stc
pop
mov
fistpll
xor
and
hlt
and
cli
lea
shr
push
xor
es
or
nop
ljmp
lret
mov
pop
insl
pop
sbb
fbld
fstps
mov
je
jecxz
adc
shll
push
push
cmp
pop
sbb
add
mov
outsb
mov
fadd
mov
test
push
sub
mov
pop
in
xchg
inc
pop
and
pop
add
in
xchg
mov
leave
inc
fidivrs
rolb
cwtl
or
sbb
sub
dec
push
aas
cmpsb
jg
adc
sub
jo
aam
sbb
lea
pushf
bound
aaa
and
pop
cli
es
cwtl
mov
pop
jecxz
jg
out
mov
imul
adc
fnsave
lock
xor
adc
fnsave
loope
mov
gs
sbb
bound
mov
inc
xorl
addr16
mov
inc
stc
push
xchg
mov
add
int3
aaa
mov
cwtl
in
xchg
and
insb
push
aas
xor
aam
mov
xor
mov
test
mov
sub
pop
inc
outsb
scas
shlb
ss
mov
sbbb
jp
rol
and
sub
jecxz
push
and
insb
mov
push
fwait
jnp
xchg
fs
adc
sbb
push
xchg
std
push
mov
or
ss
shlb
or
imul
push
push
adc
fsubrs
push
mov
xchg
add
mov
xchg
mov
ljmp
pop
push
sub
mov
jns
push
mov
inc
sub
cmpl
mov
lea
xchg
sarl
std
xor
dec
mov
movsl
push
loopne
cmp
loopne
xchg
mov
out
sub
pop
fstl
jle
rcll
jl
mov
rolb
in
mov
fisubrs
jns
push
loope
push
push
aas
push
ret
jno
das
aaa
push
jge
cli
sub
mov
sbb
pop
jae
xor
sbb
inc
dec
aas
inc
enter
daa
inc
lods
jge
je
or
ret
jle
pop
lea
or
rcrl
pop
mov
aad
into
scas
insb
movsb
mov
add
mov
iret
mov
push
jae
js
xchg
imul
pushf
jmp
loop
rorb
inc
addr16
movsl
iret
loopne
jle
stos
aaa
push
mov
rcrl
addr16
pop
mov
push
push
hlt
or
pop
pop
adc
sbb
ljmp
xchg
sbb
std
inc
add
jmp
fs
mov
push
ljmp
aaa
add
lcall
imul
xchg
pushf
xchg
xchg
fmuls
enter
sbb
mov
test
mov
pop
adc
mov
jbe
fistpl
pop
and
dec
or
mov
xor
xlat
js
inc
sub
dec
sub
repnz
dec
inc
xchg
pop
scas
es
nop
stc
lahf
int3
jmp
jmp
and
sti
pop
cmpl
jmp
pop
aas
or
lret
sbb
inc
loope
adc
mov
lds
fwait
push
ljmp
inc
pop
sbb
mov
mov
xchg
add
movsl
add
fptan
gs
add
aam
jecxz
repz
mov
cmc
fs
dec
mov
or
fs
mov
data16
sar
add
xchg
stos
dec
call
pop
cwtl
inc
fnsave
cmp
sub
xchg
sub
pop
jne
sbb
jnp
push
cmpsl
pushf
add
rcrl
ja
xor
mov
insl
sub
inc
orb
scas
je
ret
sub
addb
idiv
fildll
adc
movsl
call
les
xor
leave
aaa
icebp
mov
pop
lahf
mov
leave
shld
xor
std
stc
rcrl
repz
ljmp
cs
jbe
int
inc
mov
inc
mov
cltd
das
mov
test
cmp
movsb
bound
add
pop
int3
fwait
dec
js
adc
pop
movsl
push
push
pop
and
and
push
pop
stos
andl
fldenv
xor
or
xchg
nop
dec
mov
sbb
jg
je
and
imul
les
push
mov
xchg
cmp
xor
mov
push
imulb
cmp
pusha
fmuls
jmp
pusha
or
mov
or
pop
cmp
xlat
call
pop
adc
push
pushl
ret
imul
loope
adc
cld
outsb
xor
cmp
loopne
aaa
mov
adc
lods
loop
cmc
fistl
les
movsb
iret
push
ret
mov
ljmp
pop
push
popa
addr16
lock
dec
dec
sub
icebp
or
jle
fstp
pop
xor
pop
push
jl
lods
ds
push
cmp
push
clc
fcoml
cmpsl
inc
sub
sub
cmp
out
xorb
mov
mov
pop
bound
mov
outsb
aas
fdivrs
mov
ficoml
mov
enter
lods
push
mov
mov
inc
xor
fwait
insl
cmc
into
jg
inc
orl
fisubrl
xchg
xchg
cmp
ret
xor
inc
into
push
invd
add
pop
rol
mov
cmp
ds
ss
cmp
cld
sbb
addr16
mov
cli
or
test
lock
dec
test
int3
or
jg
bound
push
sub
push
mov
lret
inc
cmp
pushf
sub
push
sub
jmp
sbb
jl
pop
repnz
dec
in
enter
mov
repz
mov
fadd
sub
xor
mov
xchg
cltd
inc
movsl
hlt
sbb
lret
call
jge
es
ret
lods
ja
adc
in
lea
xor
std
add
xor
sbbb
dec
jg
inc
sub
push
imull
inc
jp
ljmp
pusha
push
dec
push
fwait
or
dec
aad
adc
inc
aaa
fsub
das
aad
test
shlb
popa
and
fcoml
fsubs
mov
mov
xchg
call
mov
in
cmp
int
mov
pop
aas
sub
and
or
adc
cld
jne
test
out
mov
and
xchg
repnz
test
jb
insl
push
loop
sub
inc
pop
in
push
inc
push
popa
pop
es
inc
je
clc
adc
cmpsl
mov
mov
ret
adc
iret
or
test
adc
shl
pop
fists
out
adc
cltd
nop
or
xchg
or
sbb
int
int
out
and
les
jmp
stos
push
repnz
sub
add
jo
inc
mov
cmpsl
mov
push
out
andl
dec
sbbl
mov
aad
mov
xor
xor
mov
xor
enter
push
lcall
jne
fs
xor
mov
mov
aas
mov
dec
ret
xor
test
cmp
push
adc
movsb
ljmp
mov
cmp
in
push
loop
sub
insb
repz
cld
out
pop
pop
and
add
das
out
xor
fcompl
cld
dec
cmp
sbb
test
xchg
repz
loopne
shlb
lret
jp
aam
jmp
enter
in
mov
arpl
addr16
imulb
mov
jl
rcrb
test
add
adc
cmp
out
ljmp
dec
hlt
pop
dec
data16
out
icebp
mov
push
aam
loop
fwait
daa
push
sbb
sarl
ljmp
pop
repnz
loope
aam
int3
ljmp
cld
add
imulb
xchg
adc
dec
lcall
mov
push
jg
sub
adc
lock
jb
sub
fwait
sub
mov
and
add
cli
pusha
jl
sub
lock
mov
ja
xchg
fsubr
mov
aas
add
push
push
cmc
scas
sub
mov
adc
inc
fstl
jbe
sub
sbb
sub
fs
adc
mov
and
sar
mov
mov
fadd
pop
mov
ljmp
sbb
stos
mov
imul
adc
pop
repnz
pop
lret
jo
data16
imul
xlat
test
fsubr
sub
pop
ds
mul
mov
inc
push
ds
cmpsl
shr
sub
cwtl
insb
mov
psrld
cmp
repnz
push
mov
int3
xchg
sti
mov
xchg
or
test
sbb
inc
mov
pop
and
imul
add
fldcw
inc
mov
mov
sub
fidivrs
mov
cwtl
push
jne
sub
loop
mov
mov
or
jnp
or
fcomps
xor
pop
adc
mov
pop
adc
jbe
push
in
add
xor
lock
ljmp
mov
jl
adc
adcl
sub
sbb
pminsw
pop
mov
std
xchg
in
stos
adc
pop
cld
out
inc
cld
pop
xchg
mov
push
cltd
sbb
iret
mov
mov
mov
jle
cld
pop
adc
dec
int3
mov
aam
xorb
in
mov
mov
mov
or
push
mov
sub
mov
adc
mov
rcrl
cmp
mov
test
fwait
aam
pop
mov
pop
call
pop
pop
pushf
pop
add
pop
movsl
add
sub
cwtl
mov
aam
dec
or
dec
dec
adc
jo
fs
in
jo
dec
adc
loop
sbb
adc
aas
ljmp
sub
mov
xor
dec
pusha
aas
jp
or
mov
adc
data16
scas
sub
mov
adc
outsb
dec
icebp
sbb
add
inc
adc
in
sbb
in
and
push
sub
lret
sub
lock
cmp
pushf
add
movsl
aas
add
mov
lret
jp
push
mov
les
dec
pusha
aas
push
ds
mov
rcrb
push
hlt
mov
push
mov
mov
cwtl
mov
cmp
jg
or
adc
push
xor
int3
or
cmp
sub
std
sbb
sbb
or
mov
orl
and
mov
cmp
adc
std
aam
dec
mov
cmpsl
mov
sbb
pop
xchg
das
insl
or
push
pushf
inc
mov
dec
pop
fisttps
in
in
sahf
aaa
jnp
pop
in
loopne
or
push
push
cld
stc
dec
xor
dec
faddl
movb
pop
mov
mov
repnz
jb
and
adc
cwtl
bound
loop
dec
repnz
outsb
cmpsl
sub
js
sbb
and
call
test
pop
lret
mov
cmp
sahf
in
lods
lcall
cmpsl
pushw
and
fsubrl
xchg
cld
pop
out
fdivr
cli
adc
fwait
mov
data16
inc
pushf
push
pop
xchg
mov
mov
mov
adc
mov
adc
jp
add
mov
fsubr
inc
inc
pusha
aas
adcb
aas
mov
sub
lcall
adc
mov
adc
add
mov
pop
mov
ljmp
sub
jg
push
adc
sub
sub
ljmp
cld
fistpll
sahf
mov
pop
arpl
jmp
push
jae
addr16
or
inc
adc
push
sub
dec
in
sub
push
mov
adc
aam
es
loop
inc
lock
js
pop
rcl
cld
aas
sub
push
daa
push
adc
sub
lock
or
aam
cmp
int3
cmp
pop
subl
or
cltd
pop
jbe
in
push
lock
fcomps
in
push
test
in
nop
xchg
cmpsl
out
or
inc
call
mov
pop
data16
testl
mov
push
xchg
mov
and
pop
push
cli
mov
es
jp
cltd
mov
push
clc
or
sbbb
insb
inc
cmp
inc
repnz
hlt
pop
dec
hlt
inc
dec
mov
in
call
and
lret
pop
lret
or
cmp
lods
sarl
pushw
aam
add
fs
pop
cmp
cli
bound
int3
jp
cltd
mov
stos
pushf
enter
inc
cwtl
rcll
or
push
sub
mov
inc
in
add
pop
fiadds
arpl
int
int3
in
call
push
jae
pop
cwtl
addr16
ss
int3
xor
mov
cmpsb
dec
pop
xchg
inc
pop
stos
test
repnz
adcb
ja
xor
lock
jp
enter
and
push
in
jg
stc
cmp
xor
shrl
jg
mov
addr16
sarb
movsl
mov
pop
gs
cltd
mov
inc
data16
inc
pushf
adc
loop
mov
lods
add
rclb
mov
cmp
cmp
and
imul
push
cmp
inc
xchg
cmc
ret
xor
adc
pusha
push
push
fnclex
aad
or
mov
cmp
faddl
jl
adc
fistl
cmpsl
es
repnz
mov
xchg
fsubrp
dec
pop
mov
xor
iret
jo
aaa
movsb
dec
je
pushf
es
sub
mov
push
mov
cmp
pusha
push
repnz
xor
rcrl
cld
repz
fs
enter
movsb
pusha
sub
pop
xchg
js
or
jle
test
rorb
fnstenv
incl
xorb
repz
adcl
outsb
cld
roll
movsl
pop
xor
cltd
rclb
in
and
push
sub
cmpsb
jmp
daa
enter
aas
test
cmpsb
pop
sbb
dec
negb
mov
leave
pushf
data16
fs
fdivrs
xor
test
mov
cmpsl
pushf
xchg
dec
and
mov
xlat
ja
add
and
sub
mov
sahf
dec
add
aas
mov
pushf
aam
mov
jno
pop
ror
mov
in
and
mov
pop
sub
adc
mov
push
pop
sub
pop
and
or
stos
xchg
adc
xor
mov
inc
pop
xchg
in
mov
mov
xlat
gs
dec
cwtl
ret
cld
pop
stos
mov
pushf
inc
or
push
xor
jae
xchg
push
out
inc
dec
test
inc
cmpsb
jb
sub
adc
inc
inc
sbb
mov
mov
sti
sbb
hlt
les
call
cmp
sub
data16
xor
lods
jge,pt
cmp
fimuls
rorl
dec
jecxz
inc
loop
call
inc
ret
shll
cmc
movsb
sub
loope
xor
es
xor
dec
cli
test
or
fs
mov
ret
int
jl
jmp
in
and
das
js
pusha
into
stc
dec
pop
jno
cld
adc
cmp
cld
dec
fcmovne
xchg
fwait
xchg
outsb
lcall
push
adc
pop
mov
xor
fs
js
mov
fmuls
jecxz
xchg
loop
daa
inc
pop
cwtl
mov
mov
sub
jp
push
loopne
push
ds
mov
data16
cs
add
mov
orb
out
sbb
jg
push
std
sub
lret
ss
fcom
adc
pop
jnp
and
push
inc
lahf
in
mov
aaa
cwtl
sbb
leave
data16
pop
xor
sub
push
in
cs
mov
jecxz
xchg
sbb
pop
add
lcall
xor
mov
pop
stos
test
cs
lcall
xchg
je
loope
jne
or
sarb
imul
or
idivb
test
jo
test
out
push
mull
mov
fs
mov
and
les
pop
adc
add
add
mov
xor
movsb
mov
adc
addr16
adc
test
ds
push
dec
test
in
xor
fisubrs
pop
stos
in
cmp
ficoml
push
pop
mov
call
rcr
and
jecxz
repz
or
xor
push
or
das
dec
sti
call
cmp
ds
cmp
inc
repz
stos
kandw
xchg
inc
and
mov
xlat
add
sbb
dec
inc
pushf
inc
sub
outsl
loope
xchg
outsl
push
cmpsl
in
pop
or
cli
cs
popf
or
jl
pop
testb
ljmp
jp
jge
stc
adc
adc
or
sub
fcomps
xlat
fsub
stos
ret
dec
pusha
add
loopne
or
jne,pn
jae
test
jp
or
xor
sti
jl
dec
or
mov
mov
call
es
test
xchg
repz
mov
push
add
fcompl
cmp
pop
push
pushf
xchg
push
xchg
movsb
pop
xor
test
data16
rorb
jo
push
loopne
cld
xor
in
xor
ljmp
aad
mov
repnz
nop
ret
imul
popa
lea
pop
xchg
or
iret
and
mov
xrelease
push
mov
insb
xchg
mov
cmp
add
mov
inc
adc
sahf
dec
dec
loopne
movsb
xor
push
call
cmp
das
add
sub
add
ljmp
nop
loopne
sbb
fdivrs
sub
sti
and
cltd
xchg
movups
pop
dec
les
xorl
subl
aad
mov
gs
mov
mov
mov
mov
pop
sub
inc
arpl
push
loope
enter
add
pop
cwtl
movsb
jnp
int3
cli
int3
cld
add
shl
mov
leave
jecxz
sar
dec
insb
int3
push
and
mov
hlt
push
pushf
push
in
jecxz
jmp
pop
push
in
sbb
mov
cmp
addr16
mov
enter
jbe
adc
ret
cmp
mov
or
xchg
iret
rol
ljmp
insl
add
mov
xor
popa
cwtd
cld
orl
cmp
push
mov
mov
lret
insl
push
fstps
and
inc
mov
cmp
movsb
mov
xchg
cli
lods
push
or
cmp
imul
fld
bswap
loop
mov
mov
lods
nop
cmp
out
loopne
xchg
insl
and
push
lret
sbbb
lods
cltd
outsl
pop
adcb
pop
roll
push
mov
aaa
and
call
pop
sbb
and
mov
mov
mov
outsb
in
pushf
nop
hlt
out
pushf
cld
jl
aad
or
repz
cmp
and
mov
sbb
jp
xor
xlat
and
add
push
hlt
cmp
jbe
mov
xchg
adc
out
add
sahf
lods
arpl
rorb
jle
cltd
fdivr
push
lcall
xchg
cmp
xor
fsubrs
loop
sub
in
or
stos
and
jle
cmp
push
out
movsl
mov
lahf
inc
movsl
dec
cmp
sub
add
std
fcoml
fidivs
cmpsb
cmpl
cmpsl
test
cmpsl
insb
or
scas
loopne
lods
lcall
inc
sbb
lahf
es
loopne
jb
push
scas
lods
shlb
mov
add
test
push
aaa
xchg
inc
cmp
mov
out
int
loope
es
sub
inc
jnp
cmp
jo
xor
sub
pop
fcmove
pop
mov
shrb
repnz
lock
dec
cs
imul
pop
xor
mov
es
stos
xor
test
movl
sub
clc
xor
mov
jg
pop
movsb
or
into
mov
xor
and
cmp
adc
push
imul
xor
pop
stos
mov
mov
fwait
cwtl
in
inc
dec
push
mov
mov
lods
mov
cmpsl
clc
insb
jb
in
aas
ret
pavgw
mov
hlt
mov
dec
inc
mov
push
or
mov
lds
push
jb
es
in
iret
inc
pop
add
and
ror
xchg
mov
dec
push
hlt
adc
dec
push
pop
xchg
mov
negb
call
rcrb
fs
add
sub
jl
push
clc
and
mov
nop
negw
pop
xorl
push
adc
mov
mov
stos
adc
jo
jp
repz
jl
cli
out
aam
aad
add
cmp
ds
add
xor
and
loope
adc
fsubrs
push
repz
fnstcw
cld
out
sub
pop
ljmp
mov
ljmp
ljmp
sti
loope
js
jmp
jle
das
adc
in
in
push
in
in
aas
xchg
faddl
sbb
jmp
dec
cmp
mov
into
push
mov
scas
push
in
pop
aas
adc
aas
ss
ret
xor
mov
addl
push
jge
push
sbb
pop
out
cmpl
xchg
dec
pop
sbb
or
aad
or
mov
shlb
mov
mov
and
testl
push
shlb
mov
sbb
mov
xor
push
xor
inc
clc
ds
inc
or
mov
cwtl
cmp
cmp
sbbb
and
fiadds
push
jp
fdivr
and
lock
push
ret
xor
loope
aaa
dec
and
aad
pop
sub
mov
or
test
lcall
rcll
inc
cmpsb
subl
cmp
push
jo
inc
dec
lcall
enter
js
mov
push
push
push
popf
insb
sahf
mov
adc
mov
fcomps
shll
xchg
test
xor
outsl
sub
int3
mov
iret
adc
mov
add
push
imul
mov
repnz
or
pop
pusha
ja
cmc
push
hlt
lods
cmp
shll
lds
adc
stc
push
and
cmpsl
test
mov
movsl
call
jl
jbe
iret
daa
dec
mov
push
cwtl
shll
adcb
push
popa
pusha
adc
pop
xchg
jp
cmp
les
lcall
lock
dec
scas
test
fcoml
push
jbe
push
in
mov
mov
xor
or
ljmp
loop
jmpw
jmp
dec
or
xor
subb
int3
loopne
test
ljmp
adc
decl
or
dec
loop
add
pop
push
xchg
xchg
and
add
dec
or
xor
cld
repz
push
cmp
sbb
xor
xor
test
or
inc
dec
adc
cmp
aam
ret
or
ret
xor
mov
je
dec
or
dec
dec
adc
add
les
mov
mov
mov
daa
push
sbb
sbb
pop
lods
mov
into
das
lea
les
cli
mov
sub
cltd
addl
jecxz
jno
fmull
adc
push
in
cmp
and
sbb
sub
cmc
push
pusha
xor
pop
add
repnz
mov
adcl
add
scas
into
xor
fs
stos
jno
jno
or
add
add
push
add
pop
insb
sub
and
push
outsb
pop
neg
cld
pop
sub
cltd
mov
stos
pushf
adc
and
adc
dec
pop
push
je
xchg
mov
or
jmp
int3
cli
or
inc
push
jo
loop
cmp
sbb
jl
hlt
fs
mov
push
clc
mov
mov
mov
out
sub
pop
addb
mov
ret
dec
xchg
jecxz
loopne
in
je
push
fisubl
mov
pop
mov
insb
jo
or
add
inc
movsl
mov
mov
popa
adc
cmp
cmp
fnstsw
or
mov
cwtl
mov
mov
xchg
jp
cltd
adc
mov
int
roll
shlb
jbe
fistpll
ret
inc
les
sub
in
imul
dec
jp
cltd
mov
push
inc
add
add
and
xchg
mov
fcmove
ds
dec
add
dec
push
jle
fwait
subb
jecxz
cli
pop
pushf
call
pop
pop
mov
mov
dec
pop
pop
in
in
lods
xorb
test
pop
jb
dec
ret
jl
popa
adc
ds
dec
mov
adc
loopne
jbe
xchg
adc
fs
mov
push
dec
jecxz
cwtl
shl
dec
addb
xchg
les
xchg
into
dec
dec
ds
cmpsl
sbb
rcll
adcl
sub
in
out
push
bound
stc
mov
decl
outsb
dec
ret
adcl
mov
cs
jle
out
xor
popa
stos
mov
sub
clc
scas
push
mov
pop
hlt
pop
mov
mov
lds
adc
stc
push
xor
cmpsl
test
mov
jle
loope
mov
push
dec
cmpsl
adc
lret
loopne
inc
sub
lahf
lea
jno
sbb
xchg
scas
insb
movsb
mov
add
es
xor
stos
loope
aam
sarl
push
jl
pushw
inc
mov
and
cli
sbb
cltd
lods
imul
mov
les
fmul
outsl
movsb
pop
movsb
sub
pop
mov
call
xlat
push
jecxz
leave
data16
xor
add
faddp
xor
push
mov
mov
and
or
jmp
jecxz
inc
out
into
out
clc
repz
mov
jbe
push
push
jbe
push
in
and
adc
cwtl
xchg
ja
mov
mov
sub
js
rorl
pop
loop
jo
in
push
aas
cli
adc
pusha
add
sbb
or
pushf
cmpb
in
and
into
push
mov
push
push
in
add
mov
cmp
mov
jl
xor
jb
loope
popa
pusha
sbb
frstor
adc
in
loop
sbb
cltd
stos
out
movsb
ja
mov
xor
sarl
pop
xor
mov
inc
and
adc
xor
fs
jle
test
xor
addl
rorl
sub
insb
les
xchg
ljmp
mull
mov
movsl
add
pop
cli
lahf
sub
mov
hlt
pop
scas
mov
stos
jae
pop
ljmp
mov
lods
push
jno
push
xchg
test
insb
loope
insb
xchg
fmuls
pop
mov
lods
jo
or
add
inc
movsl
mov
mov
popa
adc
or
cmp
fnstsw
or
je
cwtl
mov
xor
add
jp
cltd
adc
mov
int
ret
dec
inc
lock
push
jno
push
jbe
scas
call
loope
insb
xchg
mov
adc
cld
pop
push
test
sbb
repnz
jb
loopne
pop
jbe
rorb
push
xchg
pop
cli
lahf
cwtl
cmpsl
jle
dec
adc
hlt
pop
push
lock
rcr
decl
stos
pop
loopne
insl
mov
fwait
cmpb
cmpsb
arpl
hlt
mov
ja
cmpsl
test
mov
jle
call
xor
hlt
xor
push
in
fsubs
inc
jbe
push
inc
jo
pop
dec
shlb
cwtl
xchg
or
outsl
ja
and
mov
cltd
push
dec
add
stos
shll
ret
xor
xchg
dec
je
dec
lods
mov
mov
sbb
les
out
push
cmp
daa
push
sbb
xor
add
sti
out
sarb
mov
mov
cmp
add
lea
inc
sbb
shrl
test
ret
jns
jp
mov
dec
sbb
and
jle
dec
out
pop
adc
ds
ret
rcr
ds
jle
in
call
stos
mov
out
sub
pop
add
xorl
in
adc
push
lea
dec
add
mov
ds
hlt
fmuls
shll
js
or
jmp
inc
fmull
ljmp
shlb
into
outsb
mov
cmp
cmpsl
pushw
je
lods
popa
stos
mov
sbb
lds
cltd
lods
imul
xchg
xor
sub
aam
push
xchg
xchg
insl
sahf
or
lods
popa
cli
mov
je
pop
cmp
lds
or
mov
std
pop
pop
int
divl
push
add
es
mov
stos
loope
pop
movsl
sarl
push
or
pushw
adc
test
mov
sbb
cltd
lods
imul
xor
mov
ds
sub
sar
push
scas
jae
orb
adc
fsubs
sub
daa
inc
mov
and
fwait
jno
push
mov
data16
mov
std
mov
out
sub
dec
pslld
dec
lods
sub
mov
sub
mov
adc
cmp
mov
pop
dec
xor
jl
add
stc
cs
dec
jle
fcompl
dec
adc
pop
adc
cld
pushf
insb
cld
out
xchg
cld
pop
jle
decl
cli
pop
mov
insl
mov
fwait
addb
push
push
hlt
mov
ja
cmpsl
test
mov
movsl
call
pop
dec
jbe
and
daa
outsb
mov
mov
rcll
adc
les
mov
xchg
jp
xchg
mov
push
popa
mov
fs
into
lcall
nop
mov
dec
ret
iret
mov
cwtl
rorl
shll
sub
repnz
inc
popa
pusha
sbb
frstor
adc
cs
push
cltd
stos
out
xor
les
or
cs
pop
hlt
add
mov
sbb
ljmp
ljmp
sti
loop
rolb
push
inc
jbe
xlat
negl
add
mov
mov
lock
stos
mov
jecxz
pop
xor
xorb
dec
push
cli
sbb
xor
xchg
or
mov
and
dec
nop
cmp
sbb
xor
stos
fdiv
pop
stos
data16
fs
orb
clc
jno,pn
dec
adc
mov
sbb
dec
ret
loop
lock
repz
xor
push
lret
jno
data16
negb
pop
mov
jg
test
je
pop
xchg
mov
stos
fistpll
ret
inc
rcr
outsl
movsb
pop
je
in
imul
data16
and
or
add
pusha
pop
xchg
mov
ficompl
dec
add
neg
jle
or
test
cwtl
mov
and
mov
push
movsb
mov
inc
std
movsl
mov
xor
mov
arpl
hlt
mov
out
dec
pop
mov
ljmp
dec
fs
mov
sub
mov
push
in
or
sbb
pop
or
or
lea
out
sub
pop
add
xorl
in
push
push
add
inc
hlt
cwtl
dec
jbe
and
mov
std
push
outsb
pop
mov
sbb
jnp
cltd
stos
dec
add
dec
scas
jle
fwait
adcb
mov
ja
mov
jbe
push
inc
jo
or
jae
cwtl
xchg
iret
adc
push
and
cmp
aam
ret
fs
fs
cmpl
dec
dec
mov
les
mov
mov
mov
daa
push
adc
and
stos
cmpsl
int3
cli
pushf
mov
jb
cmp
pop
enter
mov
dec
hlt
mov
push
movsb
pop
aas
pusha
test
sub
cmovg
cmp
aam
ret
pop
stos
popa
adc
es
jg
push
dec
cmp
dec
dec
add
sub
test
pop
in
push
jo
adc
stc
push
sbb
in
cmpsl
test
mov
jle
call
and
jbe
lds
daa
push
mov
push
cwtl
sarl
fwait
xor
and
push
popa
pusha
adc
pop
xchg
jp
xor
les
lcall
mov
test
fdivrs
push
adc
aas
stos
ds
xor
adc
pop
and
pop
dec
mov
inc
inc
loope
aam
pop
or
not
les
sub
sub
and
mov
mov
ljmp
inc
lock
iret
mov
popa
stos
out
gs
add
dec
les
jl
fwait
cld
push
jl
repnz
inc
sbb
push
mov
push
mov
inc
push
cmpsl
cmp
mov
and
sbb
push
mov
inc
ss
jns
and
cmp
pop
xchg
in
shl
sub
ljmp
inc
dec
push
xchg
sub
sbbl
lock
and
stos
cmp
pop
and
and
push
sub
call
cltd
jno
dec
xor
mov
mov
pop
jecxz
sub
addr16
mov
dec
aad
ret
int3
shll
pop
ds
adc
jno
movsl
xlat
mov
cmp
push
pusha
pusha
insl
movsb
pop
dec
pop
fistps
xor
mov
out
jo
jno
pop
cli
cltd
adc
inc
push
pushf
mov
pop
loop
decl
mov
insl
mov
fwait
adc
cmpsb
arpl
hlt
mov
ret
lcall
stos
mov
inc
push
jno
lods
arpl
mov
push
cli
stos
ret
subb
movsb
pop
adc
fistps
push
sub
out
or
fwait
pop
sbbb
cwtl
shrl
rcll
and
fs
pusha
sbb
frstor
adc
sub
cmp
rorl
sbb
data16
in
test
push
in
mov
cmpsb
adc
mov
pop
sbb
jmp
inc
cmp
jne
dec
into
push
mov
ja
in
mov
aas
dec
ds
and
lds
sysexit
scas
ja
mov
mov
sub
aam
rorl
mov
in
mov
in
nop
aas
dec
adc
addb
je
ret
insb
jmp
movsb
xchg
xchg
dec
adc
les
repnz
jle
gs
fcoml
push
nop
cwtl
jge
pop
in
and
in
push
jo
popaw
or
push
ljmp
bound
call
push
dec
jbe
in
daa
push
call
cwtl
shrl
or
andb
cmpsb
push
popa
pusha
adc
pop
xchg
jp
rclb
bound
stos
shll
sub
lret
push
sub
mov
mov
rcrl
mov
call
and
and
orb
mov
daa
push
sbb
cli
push
test
mov
mov
jle
jg
aam
xor
rclb
jg
test
je
pop
xchg
mov
pop
fistpll
ret
inc
les
fmul
outsl
movsb
pop
lods
sub
imul
les
cltd
mov
xor
add
add
das
in
pop
movb
aaa
jnp
pop
shll
cs
push
dec
loope
jle
loope
jne
aas
sbb
mov
cmpsl
adc
call
dec
cmp
rolb
dec
pop
xchg
mov
out
pop
dec
add
dec
into
jle
loope
hlt
cld
repz
iret
cmp
push
aam
ljmp
jle
inc
mov
sub
xor
stos
mov
out
sub
pop
sub
xorl
in
or
push
in
lret
xchg
loop
and
pop
lret
out
mov
ss
and
pop
mov
xchg
test
and
out
inc
push
sub
pop
push
aad
nop
sub
ljmp
xor
add
sbb
jnp
test
jmp
in
push
leave
lods
sub
fs
jmp
mov
sahf
mulb
lcall
fwait
mov
lods
xor
mov
adc
inc
mov
lret
or
movsl
dec
insl
add
fldcw
jg
rorb
adc
sub
xor
cmpb
orl
flds
orb
lea
xlat
int
cmpsl
aad
xchg
icebp
mov
ljmp
leave
xor
imul
ds
cmp
mov
cmpsl
pop
add
jnp
pop
mov
xchg
rclb
imul
sub
arpl
mov
sub
jb
jmp
out
repnz
ds
aas
jge
enter
leave
sbb
mov
scas
jo
ljmp
dec
and
add
les
cmpl
lods
movsb
movsl
mov
lcall
inc
xchg
loopne
pop
mov
mov
add
dec
pop
push
lock
sbb
dec
test
enter
addr16
dec
cmp
push
push
xor
xor
mov
mov
xor
bound
out
enter
data16
loopne
jae
or
loop
cltd
fsubrl
imul
fwait
gs
loop
mov
dec
jecxz
fs
bound
jg
clc
ret
adc
test
ret
and
dec
les
lahf
add
daa
rolb
xor
adc
inc
ret
arpl
cwtl
imul
cmp
fsubl
mov
inc
cmc
cmpb
inc
mov
aad
or
popf
out
jp
inc
fisubs
sub
push
push
insb
push
inc
fdiv
jbe
jmp
movsl
aam
inc
dec
add
ds
lret
lret
shll
mov
in
jae
icebp
mov
pusha
arpl
mov
cli
pusha
xor
fpatan
aas
push
mov
in
xlat
sbb
mov
adcl
stos
lcall
jb
sub
pop
pushf
mov
mov
arpl
inc
pusha
adc
sbb
je
pop
call
push
cmpl
inc
mov
push
push
enter
cmp
adc
cs
adc
into
cmp
aad
out
lret
and
push
mov
pop
sbb
test
sbb
test
mov
sbb
inc
fbld
in
clc
cld
mov
int3
jbe
stos
xchg
sbb
cltd
clc
dec
stc
fidivrs
scas
loop
inc
push
shrl
sub
mov
pop
dec
sub
inc
sub
xchg
or
inc
or
pushf
fsubrl
mov
sub
das
push
sbb
stos
push
push
mov
pusha
mov
insb
aas
adc
dec
and
adc
jae
xor
pop
shlb
shrb
call
mov
jg
lcall
mov
and
scas
pop
inc
or
and
xor
sub
push
hlt
xchg
mov
cld
xor
pop
addr16
jle
shrl
nop
fidivrl
dec
xchg
mov
push
mov
or
or
stc
add
xor
xchg
cmp
mov
int3
sub
mov
rcr
push
jnp
loop
cmpsl
pop
popf
and
or
cmp
xor
xor
xorb
mov
cmc
cmpsl
mov
sub
outsl
sbb
push
arpl
pushf
or
cmpsl
aas
out
cmpb
xor
push
pop
lods
icebp
popa
xlat
sub
mov
jae
out
imul
popf
mov
fsubs
cmp
adc
adc
sub
fistpll
inc
pop
cmp
leave
inc
rcll
mov
jbe
or
mov
mov
sti
sahf
in
stos
add
add
lods
rorb
dec
loop
loopne
out
adc
cmpsl
inc
rcrb
sub
jecxz
cwtl
push
into
mov
mov
add
xchg
adc
sub
movsb
data16
test
ljmp
notb
ds
mov
test
push
mov
mov
shl
mov
int3
inc
or
int3
jo
sbb
aad
shlb
test
jmp
pop
sub
outsl
je
mov
test
dec
xchg
and
out
push
stos
call
cli
or
jmp
jl
pusha
int
cmp
lods
pop
sti
sub
jbe
in
or
scas
int
lret
jae
mov
push
dec
cmp
adc
or
out
loop
dec
or
jno
loop
xor
aaa
and
xor
jb
rcrb
movsl
lea
xor
adc
and
jmp
aam
inc
in
pop
adc
daa
xchg
cld
mov
mov
inc
les
sbb
cmpsl
sbb
cltd
sbb
ret
jl
insb
adc
call
and
dec
pop
addr16
mov
inc
leave
jmp
insl
add
mov
xchg
sbb
jl
xlat
js
jge
pop
inc
dec
sub
jo
inc
adc
je
cmp
loope
or
cmpsl
mov
dec
loopne
mov
es
pop
adc
push
dec
or
ret
fmull
push
pop
push
leave
call
daa
jns
daa
clc
das
xor
pop
insl
mov
jp
mov
call
es
test
adc
xchg
loopne
mov
xor
jle
loop
pusha
fisubrl
inc
jbe
iret
nop
aaa
pushf
stos
cltd
push
fidivrl
fldenv
sub
inc
adcl
lcall
jecxz
jg
pop
pushf
cli
mov
push
in
mov
sub
stos
out
outsl
sbb
or
cli
inc
pop
shll
clc
sarl
scas
inc
data16
push
jl
hlt
enter
mov
cmp
movsl
bound
mov
jl
cmc
jbe
sub
push
ss
bound
xor
xchg
jb
xor
and
test
lahf
push
add
pushf
dec
popa
pop
pop
adc
movsb
adc
ret
fists
fwait
mov
inc
push
xor
xchg
pop
imul
lock
ds
adc
and
int3
inc
mov
cmp
mov
stc
shrb
cmp
push
fs
jle
xchg
inc
jb
push
xchg
out
dec
inc
push
lock
filds
xchg
adc
cli
mov
cmpsb
push
repz
repnz
stos
xchg
inc
mov
push
push
addr16
das
lret
xchg
push
sub
fsubr
sbb
cmp
dec
repnz
dec
loop
pushf
andl
pop
push
sarl
or
mov
sbb
jmp
xchg
dec
pop
test
adc
and
mov
mov
fldl
or
pop
sub
xchg
aaa
mov
lahf
aam
mov
mov
cmp
cmp
stos
andl
aad
ss
adc
jecxz
addr16
pop
cltd
dec
pop
clc
or
call
sahf
ja
in
into
in
nop
mov
xchg
rol
sub
mov
jecxz
or
push
xor
and
pop
pop
sbb
inc
popa
shrb
testl
into
mov
mov
int3
rclb
mov
shll
mov
das
adc
xchg
mov
cmpb
push
imul
inc
xchg
pop
adc
push
icebp
dec
adcl
jg
push
mov
inc
test
clc
or
fld
push
mov
mov
cmp
gs
subl
push
xchg
jns
xchg
and
add
fisubrs
inc
fistps
pop
or
cmp
and
add
add
movsb
add
mov
inc
inc
in
cld
xorl
in
cmp
xchg
mov
sbb
stos
mov
mov
jge
and
lea
es
stc
ret
outsb
pop
cli
fdivr
push
out
or
mov
pop
push
mov
inc
push
jg
xchg
pop
aam
into
cmp
std
push
or
and
jmp
push
sub
mov
in
mov
mov
sbb
push
ret
mov
out
jns
ss
js
test
push
jmp
insb
mov
and
in
sub
jne
dec
mov
loop
loope
bnd
mov
sub
out
std
cmp
xchg
xchg
aas
mov
xchg
dec
jl
ret
sbb
mov
cli
mov
dec
repnz
xor
cmp
je
fs
dec
sub
je
imul
into
jmp
subl
mov
pop
into
jo
push
aad
mov
adc
mov
mov
or
movl
lcall
mov
cli
mov
ljmp
xor
stos
and
mov
mov
ds
shll
mov
mov
bound
hlt
arpl
cmpsl
adc
lock
adc
add
adc
add
int3
notb
jmp
jmp
shlb
into
mov
xchg
lret
xchg
imulb
inc
aaa
cli
jmp
fcompl
xor
pop
sbb
fcoms
and
mov
das
sbb
bound
lea
out
enter
int3
or
pop
xchg
lea
cli
mov
xchg
daa
mov
xchg
push
and
rorb
lea
orl
dec
cld
mov
mov
orl
aam
pop
pop
and
add
leave
xchg
and
mul
adc
es
aam
les
das
cmpsl
dec
test
pop
inc
pop
pop
popa
lret
push
fwait
and
pop
inc
pop
and
scas
inc
mov
testb
mov
bound
mov
cmp
insb
push
xor
pop
lahf
mov
or
pop
pop
push
sbbb
mov
adc
ljmp
mov
mov
lcall
dec
and
repnz
aam
pop
test
in
lret
in
int
and
aaa
movsl
mov
push
test
in
and
cmp
mov
push
sbb
stos
cwtl
mov
fwait
push
mov
fisttpl
cmpsl
nop
movsb
pop
mov
repnz
jb
adc
fists
or
push
xor
imul
rcrl
xchg
lcall
hlt
dec
loope
jecxz
xor
mov
aam
pop
adc
mov
out
movsb
sub
pop
sbb
mov
add
jp
xchg
test
in
je
in
pop
xor
mov
pop
mov
mulps
xor
mov
and
icebp
xchg
gs
adc
movsb
cmpsl
stos
mov
add
adc
ds
add
jecxz
add
test
inc
test
js
out
or
and
lahf
cmp
nop
jmp
or
vminsd
xchg
adc
lahf
jns
gs
inc
inc
sub
fs
stos
jbe
ja
std
in
adc
mov
lods
movsb
mov
je
xchg
out
jle
shll
int3
loopne
inc
sub
cmp
repnz
sbb
sbb
cli
pop
ljmp
dec
adc
pop
test
frstor
imul
testb
push
mov
add
jmp
sbb
je
les
or
jo
mov
push
sub
inc
daa
out
or
inc
jecxz
dec
inc
adcl
cmp
push
cmp
inc
sub
nop
repz
cli
fisubl
loope
adc
repz
pop
mov
mov
sub
xor
add
sub
pop
popf
xchg
push
leave
lock
aas
fcmovu
adc
sbb
repz
nop
inc
in
adc
test
push
inc
xchg
imul
movsl
fisubrs
fs
jo
call
imul
add
mov
inc
cmp
or
dec
push
sub
shl
jl
aad
adc
shld
shlb
pop
imul
sub
ss
adc
insb
pop
and
or
in
jb
mov
aas
cmpsb
insb
and
out
bound
test
sahf
xorl
sub
cmpsb
or
cwtl
ror
and
dec
sarl
xor
inc
sahf
ret
cmp
lret
call
push
fwait
test
rorb
pusha
stos
add
inc
lock
iret
mov
ss
mov
xlat
jbe
mov
dec
or
cli
mov
pop
dec
dec
dec
in
pusha
insb
fxch
add
adc
call
loopne
jae
xor
aad
pop
cwtl
movsl
bound
sub
cmp
mov
js
rclb
enter
sub
cli
out
sbb
pop
xor
test
daa
dec
ss
mov
lahf
push
leave
rclb
mov
leave
push
loop
pushf
push
ror
out
sub
fldcw
imul
bound
mov
sbbl
sub
in
je
fdivrl
data16
push
push
mov
in
mov
stc
add
mov
imul
add
in
mov
cmp
sbb
mov
in
cmpsl
push
out
add
loope
setge
call
ljmp
sub
int3
js
lret
jo
sbb
add
and
mov
call
sar
lock
stos
aas
pop
out
sub
jle
adc
push
xchg
dec
dec
adc
inc
jle
xchg
aas
test
xor
dec
or
jmp
mov
mov
mov
xchg
into
shll
bound
hlt
sar
and
outsl
lahf
loop
cld
shll
mov
mov
mov
rcr
cmp
int
stos
push
out
les
rorl
gs
jp
cmp
and
sbb
dec
adc
push
rorl
cmc
xor
dec
mov
xor
dec
jecxz
xchg
push
inc
fwait
xchg
pushf
jle
mov
add
pop
test
cld
ds
push
push
ja
xlat
xor
adc
mov
out
cs
or
cmp
ljmp
pop
push
mov
push
add
lahf
xchg
out
and
push
add
dec
neg
xor
mov
pusha
popa
aad
lahf
sbb
inc
adc
sbb
push
popa
les
pop
jno
jae
pushf
movsl
ja
pop
cmc
aad
push
icebp
mov
xchg
hlt
mov
dec
mov
mov
push
and
fwait
clc
xorb
jno
ljmp
ljmp
mov
jnp
bound
pushl
mov
cli
jp
enter
cld
or
fidivs
jmp
shll
mov
jo
out
repnz
inc
daa
cmp
pop
imul
jl
les
push
jle
jne
enter
lock
lea
xor
sub
mov
sub
outsb
sarb
dec
add
call
mov
inc
repnz
cmp
or
lcall
rorl
dec
movsl
in
pop
and
out
sub
inc
loope
addr16
filds
xchg
cmpsb
xchg
push
or
sub
fs
dec
lcall
dec
jmp
and
or
and
negb
add
lock
mov
dec
jge
imul
cltd
mov
mov
sub
mov
popa
sub
dec
fsubl
cmp
cmp
mov
cmp
adc
dec
pop
or
int
pop
or
xchg
xchg
push
or
push
mov
adc
fildl
inc
sub
lods
push
pop
outsb
icebp
rorl
dec
pop
and
pop
xchg
test
rcrb
cmp
push
push
mov
ret
add
leave
cmp
jb
sub
sahf
inc
mov
push
dec
fs
cmpsb
jno
js
fildll
scas
mov
shr
adc
lock
xor
mov
sub
stos
popa
sarb
les
cmp
xchg
push
cmp
lds
pop
test
mov
dec
ds
lea
movsb
or
movl
sbb
and
lcall
enter
or
out
xor
in
sbb
aaa
lahf
fsubrl
js
sbb
decb
rclb
filds
imul
repz
push
add
xchg
xor
adc
cmp
adc
jmp
arpl
mov
adc
xchg
bnd
cs
ljmp
push
sbb
xor
or
push
mov
loop
mov
jl
sub
xor
xor
sbb
inc
push
jmp
shrb
fnsave
pop
or
cmpsl
xor
jbe
jp,pn
xchg
mov
mov
insb
cmp
sbb
fcoms
cmp
jns
testl
jnp
iret
int
sti
xor
xchg
sbbb
les
pop
cmp
cmpsb
lret
stc
popl
cmp
mov
ljmp
push
loop
add
mov
popf
adc
std
push
out
aam
std
adc
pop
dec
not
pop
inc
or
push
pop
push
sbb
add
sub
and
sbb
inc
popa
in
addb
pop
fdivrl
xchg
sub
sub
dec
mov
adc
scas
sub
fsubrs
lds
setp
int3
inc
xor
jle
repnz
ljmp
popf
scas
pop
inc
std
add
movsl
in
cld
shlb
fwait
out
bound
mov
leave
sbb
xchg
popa
jne
mov
pop
dec
test
imul
inc
inc
mov
mul
leave
mov
cltd
lcall
inc
mov
add
mov
das
shrb
ret
jne
jecxz
or
cmpsb
call
je
add
mov
shrl
and
fsubl
aad
in
les
xchg
pop
push
adc
mov
insl
clc
xchg
dec
cs
hlt
dec
int3
loope
out
pushf
mov
jmp
pop
adc
cmp
lret
xor
cmp
mov
outsb
orl
and
xchg
cld
les
in
or
fwait
ret
movl
arpl
inc
mov
stc
cs
and
je
pop
cmp
in
dec
cmp
sahf
mov
lahf
rcl
adc
mov
outsl
test
and
cmp
push
cmpsb
adc
stc
lock
mov
adc
pusha
ret
test
xlat
push
or
lcall
pop
dec
inc
rcl
in
fisubrs
loopne
rcrl
xor
and
scas
and
fisttpl
and
das
xor
ds
sub
adc
xor
lret
loop
out
out
mov
cmp
dec
pmulhuw
out
pop
cld
inc
jp
test
mov
xchg
xchg
dec
mov
cltd
sbb
aam
cmp
adc
loop
hlt
or
jbe
jp
mov
inc
adc
mov
cs
sahf
es
push
dec
cmp
pop
lods
mov
testl
and
popf
jmp
lock
sahf
outsb
adc
inc
data16
mov
addb
lods
outsb
xchg
cmp
pusha
push
cmp
mov
xorl
push
fs
mov
pusha
pusha
dec
mov
fcoms
mov
movsb
xor
push
xor
add
pop
dec
cmc
mov
xor
pop
rcrl
int
stos
cmpsb
xchg
pop
mov
mov
add
inc
mov
ds
cld
fidivl
fcmovbe
cmp
or
in
in
daa
daa
fstpl
rolb
mov
or
adc
push
outsl
andb
call
mov
push
shrb
xchg
in
call
sti
push
fsubrs
movsb
push
fwait
mov
insl
mov
test
jo
lock
mov
mov
add
jecxz
jno
pop
das
add
jmp
cld
mov
out
loop
add
mov
xor
mov
push
cwtl
pop
bound
comiss
add
pop
cmp
sub
gs
adc
sub
sbb
add
xchg
jae
sub
xchg
jle
lods
inc
cmpsb
or
mov
cltd
das
push
inc
pop
xor
xchg
and
in
inc
das
rcrl
test
pop
andl
in
lock
add
bound
push
inc
shlb
sbb
scas
xchg
addr16
jb
call
adc
dec
pushf
js
cmpsl
addl
jmp
and
xor
test
xor
test
pushf
rcll
incl
mov
aaa
bound
dec
jecxz
mov
add
aas
div
xchg
jl
popf
sbb
push
cld
mov
movsl
pop
adc
jle
mov
pop
mov
mov
mov
ror
push
add
mov
cli
cld
test
jl
sub
pushf
scas
mov
cs
movsl
xor
mov
pop
cmc
cmpsl
dec
jbe
mov
mov
push
inc
pop
movsb
cmp
dec
or
imul
xor
cmp
xor
and
add
call
es
icebp
adc
jns
cmpsl
cltd
adc
enter
mov
cmp
call
jge
mov
mov
add
shrl
popa
lds
adc
xchg
xorb
into
mov
ret
jo
sbbb
in
or
push
pop
xor
mov
jb
pop
and
inc
data16
out
pop
mov
xor
fimuls
xchg
shl
pushf
bswap
or
mov
push
bound
inc
dec
lcall
mov
cmpl
pop
sbb
rcll
cwtl
lods
fadds
addr16
xchg
mov
xor
mov
sbb
cli
adc
dec
enter
js
aaa
test
xor
in
dec
xchg
xchg
movsb
je
or
dec
sub
jge
fidivl
cmpsl
imul
push
repz
adc
aas
mov
test
ljmp
mov
adc
xor
sti
mov
sbb
lock
pop
jbe
loopne
mov
xor
mov
jne
mov
dec
hlt
or
outsb
roll
xor
adc
push
jle
push
fcomp
mov
ljmp
rclb
sub
test
stc
push
frstor
cmp
aam
mov
adc
mov
loopne
jg
sbb
dec
pop
test
sub
aaa
inc
adc
inc
and
hlt
addl
lea
jbe
mov
xchg
cmp
mov
xor
mov
jns
insb
and
aam
sti
dec
and
xchg
cmp
pusha
lret
cmp
xor
test
clc
call
jne
das
add
cli
pop
push
and
jb
aas
or
mov
mov
add
sub
sbb
lea
cmp
pop
hlt
mov
sbb
enter
add
dec
pop
push
push
push
movsb
aas
lock
repz
loopne
ret
xor
aas
pop
aam
ss
sub
push
cmc
vunpckhps
mov
out
inc
lret
cmp
xchg
mov
fisttps
mov
subl
idivl
hlt
mov
pop
addl
jge
jae
mov
inc
xchg
push
ds
lods
ffree
push
dec
sub
aas
or
pushf
aas
jns
js
imull
jmp
stos
push
pop
inc
mull
loope
scas
cmp
gs
xor
pop
fisttpll
xor
mov
clc
sub
mov
mov
fidivrs
test
jle,pt
inc
sub
fadd
sahf
test
dec
movsl
jno
sbb
cmp
subl
neg
dec
dec
jno
push
adc
mov
xchg
movsl
lret
or
cli
jl
rorl
mov
cmc
shl
sahf
xor
jge
imul
iret
or
push
adc
mov
mov
pop
hlt
ret
shll
xor
adc
push
sub
push
addr16
or
pop
sbb
in
mov
push
in
movsl
lret
das
aas
dec
pop
mov
add
cwtl
and
in
daa
popa
out
mov
iret
push
push
sahf
push
dec
sub
lds
xchg
bound
sbb
into
jp
mov
dec
add
sarl
jl
sti
aam
dec
leave
enter
jp
test
aas
mov
pop
adc
mov
aas
adc
dec
stc
mov
sbb
imul
aad
jns
sahf
and
sbb
je
xchg
aam
cmp
lea
mov
jbe
pop
ret
std
bound
pop
sbbb
jmp
cmp
js
xchg
mov
cmp
aam
pushf
xchg
and
fdivr
mov
mov
push
sbb
jg
jmp
or
not
add
rcrb
mov
pushf
inc
pop
fdivrl
out
daa
sub
push
test
dec
lahf
shll
outsl
xchg
cltd
add
cltd
leave
popf
pop
sbb
pop
jae
mov
mov
jmp
sbb
adc
les
sub
aad
outsb
jle
rdpmc
movsl
mov
popf
or
lret
sti
or
in
or
jb
lret
cmp
cmpsb
xchg
mov
in
mov
lds
push
jl
inc
lods
inc
sbb
xchg
sub
add
push
push
add
sub
lret
ja
add
out
test
add
out
mov
lock
push
data16
pop
mov
mov
xchg
imul
stos
or
mov
push
punpckhwd
sbb
adc
popa
xorb
je
dec
jo
and
sub
sub
jmp
hlt
in
pop
xchg
mov
xchg
dec
pop
pop
mov
cld
xor
out
jns
in
cwtl
das
fdivs
int3
imul
insb
fidivrs
push
push
mov
and
hlt
push
dec
addb
filds
or
sbb
movsl
in
addr16
mov
in
and
pop
or
test
fisttps
shll
fadd
nop
lret
in
fisubl
adc
insl
and
jae
clc
ficoml
xlat
mov
sbb
icebp
mov
loope
or
loope
mov
sub
aad
xor
mov
or
mov
jle
add
dec
std
mov
xchg
jmp
add
pop
loop
sbb
sbb
mov
mov
loop
je
ds
and
ret
mov
jae
mov
cmpl
addr16
popa
ljmp
arpl
lods
mov
ljmp
outsb
ljmp
push
xchg
sbbb
fnstsw
xchg
fcomi
mov
push
cmpsb
mov
in
adc
cmp
cmp
andb
shlb
fs
adc
push
push
jo
outsb
mov
jle
nop
test
jg
loopne
cmpsl
movsb
sbb
sbb
sub
neg
aas
int3
scas
add
pop
stos
and
aas
xchg
lahf
cmp
dec
insl
movsb
jmp
mov
sahf
mov
adc
fbstp
inc
dec
push
xor
sti
testb
pop
dec
pop
loopne
outsb
scas
cli
dec
dec
cmp
inc
daa
sub
daa
shr
mov
jge
xor
sub
lea
mov
xor
mov
iret
cltd
push
jnp
ds
push
dec
mov
cmpsl
call
pop
mov
or
cmp
sti
jg
lret
lret
popl
add
mov
nop
inc
mov
dec
sbb
adc
xchg
cmp
sarb
mov
out
jp
sarl
xchg
call
dec
dec
insb
daa
in
sbb
xchg
push
aam
pop
cs
dec
sub
movsb
sub
fsubp
and
cmp
aam
int
and
rclb
push
adc
psubusb
dec
mov
xchg
push
xchg
scas
push
pop
in
mov
stos
jbe
out
fistpl
xchg
fs
mov
les
mov
loopne
mov
fcmovb
xchg
roll
lods
mov
push
les
mov
lods
std
mov
fildl
pop
imul
flds
mov
jae
pusha
hlt
int3
sub
and
jnp
mov
sub
adc
ret
popf
mov
or
dec
in
sub
adc
iret
sbb
cld
adc
pushf
in
mov
cmpsl
hlt
ljmp
jnp
cmp
adc
adc
xchg
push
imul
pop
sub
xchg
frstor
mov
lods
adc
lcall
inc
push
fidivrs
xor
cmp
jb
sbb
jecxz
mov
pop
inc
jae
pop
cli
and
sti
stos
sarl
jmp
ss
popf
int
lret
inc
mov
sub
inc
ss
push
icebp
repnz
sbb
jge
je
sbb
shl
xor
ja
ljmp
and
mov
adc
les
adc
xchg
jmp
inc
or
insb
scas
aam
icebp
out
shlb
pop
cmp
push
sbb
addr16
dec
test
mov
jmp
loope
addl
repnz
add
adc
fbstp
jo
ljmp
inc
cmp
je
fsts
movsb
mov
mov
fcmovne
ret
push
sub
or
jg
shrl
push
fst
popa
insb
xor
mov
sub
enter
pop
shll
or
jne
sub
hlt
mov
loope
js
ret
jl
cmp
outsb
cmp
enter
and
and
lods
je
fimull
jmp
iret
mov
add
movsb
popf
adc
inc
repz
xchg
push
inc
imul
aas
mov
in
sbb
outsb
addr16
mov
das
dec
stc
fmuls
xchg
ds
rorl
xlat
push
sbb
pop
add
jo
lcall
adc
cmp
mov
scas
adc
iret
inc
pop
xchg
or
sbb
add
push
cmp
xor
or
inc
mov
xchg
ds
sbb
push
js
adc
movsl
arpl
sbb
cli
lods
add
or
cmp
ret
cld
repz
pop
cmp
mov
push
out
stc
inc
fimuls
in
outsl
add
add
clc
shlb
cld
loope
jle
out
adcl
dec
lcall
mov
ds
insl
push
adc
pop
decl
and
and
pop
test
sarb
inc
sub
movsb
movsb
ret
fnstenv
lock
xor
clc
icebp
fisttpll
mov
movsl
iret
mov
mov
mov
xor
or
pushf
popa
xor
mov
sbb
or
push
fildl
in
or
adc
xchg
add
adc
movsb
sbb
lea
adc
scas
sub
mov
sub
bound
repnz
insb
cmp
ljmp
adc
mov
or
and
ss
iret
adc
inc
aad
fidivs
ja
test
ljmp
fsubrs
or
cmc
outsl
cmc
cmp
sub
pop
pop
cmp
add
lret
rclb
ja
imul
sub
ja
fldl2t
lret
inc
arpl
jg
clc
aad
cmc
push
mov
sti
push
je
sub
rcrl
mov
lds
and
dec
jns
adc
xchg
ljmp
or
adc
scas
xchg
adc
incl
pop
mov
cmc
ljmp
cmp
test
fldt
cmpsb
mov
sub
cmovbe
inc
or
xchg
outsb
cmp
loope
popf
jge
repnz
xchg
cmc
cmp
xlat
and
fimull
xchg
lcall
pop
aaa
adc
sbb
pop
in
enter
xorb
and
dec
in
cmpb
enter
rcl
dec
push
mov
cmp
popf
in
inc
adc
pop
rcrl
out
mov
inc
sbb
int3
mov
push
test
mov
pushf
ficoml
dec
cmp
aas
xchg
jne
pop
xchg
add
pop
lret
mov
mov
fsubs
cli
and
mov
je
jp
gs
ds
int3
push
adc
adc
leave
sbb
sarb
dec
add
dec
sub
fsubrs
roll
rcr
repnz
jle
push
andb
rcll
sahf
and
xor
inc
cmpsl
fstpt
leave
aam
jae
inc
cmpsb
or
xchg
sub
mov
sbb
mov
daa
int3
ljmp
ljmp
cmp
push
mov
pop
ljmp
std
int3
pop
out
inc
mov
mov
shrl
es
add
jo
roll
pop
scas
ret
orb
popf
mov
idivl
or
das
jl
stos
scas
mov
xorb
out
pushf
fisubl
cs
jns
adc
mov
sub
jmp
shrb
sub
sbb
pop
push
loop
in
sbb
popf
inc
int
fdiv
popa
mov
jo
sbb
push
subl
mov
into
sbb
aam
mov
lret
xchg
fiaddl
inc
pop
jmp
inc
cmpl
pop
pop
es
jbe
adc
insb
fcmovb
push
lahf
mov
cmpb
insb
jbe
mov
pop
inc
push
inc
cld
pop
addr16
in
jno
push
insb
cmp
mov
mov
xchg
es
inc
pop
cmp
add
test
inc
mov
push
cmp
xchg
fs
movsb
jne
pop
loopne
lods
push
xchg
daa
ss
dec
add
in
out
ss
sbb
cmp
xlat
jg
insl
mov
nop
test
ret
push
mov
push
repz
ret
mov
jp
inc
mov
or
popa
mov
cmp
push
nop
sbbl
lret
jb
pop
clc
jno
and
das
in
xchg
xor
dec
clc
movsl
insb
mov
scas
jl,pt
mov
push
enter
fmul
cmp
loopne,pn
pop
jb
mov
out
add
in
sti
aam
rclb
pop
or
call
insb
fs
jp
push
mov
mov
stc
ret
sbb
in
add
pop
icebp
mov
or
shlb
mov
insl
hlt
inc
orb
in
jb
test
adc
ret
imul
es
aad
inc
lods
mov
mov
and
in
jno
add
xor
cmp
and
mov
adc
ret
lahf
sahf
mov
push
jmp
dec
maxps
lcall
loop
fsubs
leave
jl
adc
mov
test
inc
dec
orb
lcall
jge
repnz
adc
xor
sti
lock
adc
and
xchg
sahf
dec
mov
rcll
fcomi
pop
ret
negb
es
shrl
or
push
sub
cmpsl
add
mov
or
mov
push
test
shlb
jnp
inc
int
dec
fwait
lea
adc
xchg
dec
cs
xor
mov
in
jl
mov
fwait
lock
push
lods
pop
jge
out
pop
insb
in
scas
and
shlb
sub
aam
fdiv
mov
out
es
mov
mov
jmp
xchg
xchg
jmp
sub
shrl
inc
loop
aad
in
loope
mov
call
inc
iret
mov
fs
jp
push
or
leave
jl
mov
inc
mov
xchg
fdivl
dec
fisubrl
in
cmp
pop
mov
jg
pop
cltd
push
mov
jge
inc
test
xchg
sbb
pop
or
xchg
xor
adc
cltd
push
xor
xchg
jmp
mov
cld
sbb
inc
push
and
pop
cmp
xchg
sbb
iret
rorb
pushf
test
hlt
lret
andl
cld
outsb
clc
pop
sub
popa
adc
mov
inc
shlb
arpl
mov
add
sahf
ret
int3
test
dec
push
ret
dec
scas
mov
cmc
or
dec
mov
mov
mov
mov
mov
or
rorb
movsb
xchg
sub
jb
xchg
es
adc
jmp
ss
negb
hlt
dec
mov
and
mov
fistps
je
inc
rorb
adc
add
pop
fidivl
std
mov
mov
jmp
add
pop
int3
xchg
xor
aas
cld
pop
inc
xor
jns
imul
cld
inc
mov
addr16
je
jecxz
shlb
pop
xor
push
nop
sub
sub
push
pop
jmp
sub
jl
pop
jns
daa
enter
sahf
push
sahf
stos
inc
and
clc
stos
rorl
stos
inc
ljmp
imul
scas
icebp
push
ja
sti
popa
repnz
jmp
xchg
jl
movsl
addl
inc
pusha
cmp
xor
nop
cwtl
in
xchg
adc
cmp
pusha
aad
push
std
insl
xchg
mov
push
xchg
cld
lret
shrl
fprem1
cmp
test
mov
xor
mov
int3
sub
rorl
push
mov
in
sbb
icebp
cmp
aas
in
push
add
push
enter
or
inc
out
pop
xor
leave
test
ja
pop
mov
test
aad
rclb
pop
shrl
dec
ret
das
inc
pop
out
aaa
cmp
ss
add
cmp
loopne
neg
aam
xor
push
sub
push
mov
fcmovb
push
or
push
mov
sti
pushf
in
xor
xor
inc
pop
adc
pop
movsb
sti
stc
int
xlat
mov
int
xor
loope
pop
test
mov
loope
add
mov
in
inc
xchg
testb
mov
or
xchg
lds
cwtl
les
sti
xchg
jg
adc
push
inc
mov
ret
movsb
rcr
add
dec
insb
add
inc
fnsave
lea
dec
mov
out
jmp
xchg
mov
sub
cmp
sub
sbb
jmp
orl
mov
mov
or
mov
xchg
rcrb
push
mov
lcall
fs
outsl
sbb
or
adc
push
in
push
dec
je
add
add
mov
xor
int3
mov
cmpsl
mov
pop
cmovae
mov
mov
shrl
cmpsl
pop
movsl
mov
push
lock
test
ret
sahf
fistpl
jno
mov
ds
jnp
imul
push
jns
fs
jae
mov
not
arpl
in
adc
mov
cmp
xchg
arpl
icebp
mov
or
lea
mov
outsl
cmpsl
or
fcom
inc
imulb
push
in
push
xor
cmc
lods
jo
xchg
push
inc
sarl
ljmp
and
filds
ljmp
stos
sbb
mov
jns
mov
jl
xchg
xchg
and
sbbl
call
cmp
pop
add
aaa
aas
leave
popf
lcall
sbb
xlat
sbb
inc
cmp
push
push
out
mov
push
dec
enter
xchg
mov
loope
xchg
repnz
add
jecxz
cmc
repnz
inc
sti
mov
icebp
cltd
inc
mov
in
fwait
mov
xchg
mov
jae
popa
hlt
jge
test
out
roll
pop
sti
mov
aas
cmp
adc
orb
iret
mov
xor
pop
mov
pop
mov
out
mov
shrl
push
out
cld
arpl
and
mov
cmp
jae
push
xor
test
mov
add
jg
mov
pop
ror
enter
fwait
in
outsl
mov
stos
clc
ret
xchg
push
int3
loop
xchg
fdivs
pop
mov
dec
adc
push
cmpsb
in
jne
add
int3
scas
jle
sub
orb
jae
xchg
cmp
xor
sub
pop
xchg
sub
outsb
jmp
mov
mov
cmp
jmp
inc
mov
and
inc
int
sar
pop
stos
sar
pop
mov
shrb
inc
es
lds
or
shl
pop
pop
int
repnz
or
mov
es
inc
push
int3
loop
arpl
sar
repz
scas
pushf
iret
sub
dec
popf
xor
outsb
fwait
pop
mov
push
sbb
je
ja
mov
or
sub
loopne
ljmp
sbb
int3
das
sbb
ljmp
jae
mov
sbb
js
lds
jge
jnp
test
and
std
mov
sarb
aad
out
lods
xchg
mov
es
push
pop
cld
out
pop
lcall
inc
sub
lcall
mov
and
sbb
cltd
je
pop
ror
mov
and
dec
in
in
and
outsb
fsubrs
in
ret
xchg
add
or
jl
add
dec
mov
inc
mov
or
push
xchg
and
push
jl
push
fs
add
and
fdivs
pusha
out
mov
repnz
pop
sub
add
pop
dec
divl
sub
pusha
leave
jo
dec
mov
hlt
je,pn
adc
leave
repz
add
insl
jno
lcall
push
push
xor
ja
call
adc
adcb
push
inc
insb
mov
cmpb
fwait
mov
jecxz
in
out
sub
pop
cmpb
mov
mov
insb
pop
cwtl
icebp
int3
inc
lea
cmc
mov
push
pop
jno
mov
mov
mov
nop
lret
out
fstps
popa
int3
mov
insb
clc
movsb
fsub
call
adc
jae
add
pushf
imul
pop
fs
scas
dec
push
lea
out
scas
adc
int3
movsl
add
test
scas
add
mov
push
cwtl
lahf
cmp
mov
rolb
inc
ret
lcall
xchg
dec
dec
push
notb
xchg
sbb
cmpsl
xchg
fmuls
adc
jnp
sbb
iret
shlb
sub
fwait
adc
lds
test
scas
pop
or
cmpsb
fs
lods
dec
and
fnsave
ljmp
mov
sub
add
movsl
filds
cli
sub
cwtl
subb
dec
and
cmp
insb
inc
cltd
adc
jmp
push
push
cmp
add
lock
notl
xor
mov
or
lcall
jae
movsb
sbb
or
push
call
into
inc
inc
push
cmp
xor
pop
pop
dec
mov
mov
dec
xor
mov
jg
pushf
xchg
gs
mov
jb
mov
fs
xor
into
cmp
dec
pop
addr16
add
fnstcw
mov
jbe
rolb
pop
jmp
pop
mov
shrl
subl
xor
mov
pop
in
push
mov
aaa
iret
lahf
repz
push
pop
repz
mov
rolb
pusha
es
adc
mov
and
icebp
push
sub
mov
out
ficompl
inc
loopne
insb
mov
movsb
test
stos
cwtl
fimuls
out
lods
aas
mov
xorb
or
xor
pushf
push
inc
jb
outsb
sbb
pop
add
lds
pusha
cmpsl
jmp
mov
xor
push
mov
popa
aad
mov
dec
push
je
xor
and
movsl
rcr
pop
in
sahf
xor
or
adc
mov
enter
mov
movsl
mov
or
mov
mov
rolb
js
shrb
or
sarb
xlat
add
xor
dec
fimull
pop
and
jbe
dec
cld
xchg
dec
cmp
lahf
and
dec
fldl2e
and
shl
mov
repnz
daa
push
mov
pop
enter
fs
adc
push
mov
xor
push
and
int
jecxz
dec
mov
mov
test
pop
jb
popa
cmpsl
mov
sti
cld
sub
add
test
sub
imul
data16
pusha
xchg
pop
cltd
adc
ret
xor
push
push
jb
cmp
aad
pop
cmp
inc
ret
inc
test
bound
sub
pop
shr
scas
in
aas
testb
jl
out
mov
sti
lock
adc
and
fiadds
maxps
lret
xor
lret
lods
in
cmp
sbb
ja
sti
imul
adc
mov
pushf
movsb
add
test
fldl
int
in
mov
mov
jle
lock
pop
int
jle
sub
adc
mov
and
fidivl
pop
push
sbb
pop
shll
pop
rcr
cmp
mov
and
mov
ljmp
leave
dec
jo
into
nop
test
inc
rcrl
pop
sahf
nop
and
mov
mov
seto
into
in
je
mulb
ljmp
pop
int
outsb
mov
test
loope
clc
popa
adc
ss
sbb
enter
fdivs
sbb
pop
test
or
mov
int
cmp
shr
dec
bound
iret
add
xchg
inc
xor
lods
or
loop
xor
push
pusha
push
aam
xorl
jo
mov
ljmp
orb
adc
in
in
jle
cs
repnz
sbb
xchg
push
pop
out
jb
shlb
in
mov
xchg
pop
inc
lcall
pop
ret
or
lds
orb
xchg
cs
and
mov
mov
mov
xchg
dec
push
jle
mov
dec
lcall
cmp
add
sub
mov
inc
jae
mov
movsbl
pop
mov
sbbb
fsts
sbb
dec
sbb
pop
or
sub
add
inc
lcall
sub
xchg
dec
pop
repnz
inc
cld
adc
mov
adc
lret
ljmp
cltd
mov
jnp
ljmp
mov
xchg
mov
cmp
mov
mov
push
loope
fdivr
mov
leave
insb
data16
jl
pop
ljmp
ljmp
shlb
or
or
jne
sbb
push
popf
jmp
jnp
mov
mov
cld
sub
mov
push
rcr
mov
loope
mov
inc
push
sub
js
stos
pop
imul
mov
pushf
lret
sbb
jle
das
flds
xchg
add
test
in
adc
fcomip
fistpl
in
loop
scas
call
adc
in
cld
sbb
hlt
lahf
adc
mov
leave
adc
pop
dec
dec
pop
inc
mov
sbb
and
mov
aam
stos
xor
nop
popa
cwtl
xor
push
in
sbb
pop
loopne
adc
jne
xchg
test
roll
mov
mov
addr16
lahf
ret
xchg
mov
jl
cld
idiv
data16
push
sbb
xlat
mov
ljmp
fdivrl
js
cmp
shlb
and
mov
sbbb
push
sub
pusha
xlat
jg
push
lret
or
fs
add
enter
dec
lcall
and
enter
sub
int3
je
push
xchg
in
xor
mov
or
aam
xlat
xor
xorb
cmp
pushf
adc
adc
fsubrl
in
cmp
or
jge
add
sub
stos
mov
enter
push
xor
sub
jp
mov
movsl
sahf
cmp
cmpsl
and
adc
sti
bound
aam
sbb
ds
adc
mov
or
inc
out
icebp
or
pop
jmp
dec
dec
pop
lret
adc
cmp
xor
ss
aam
and
repnz
pop
mov
mov
jno
leave
adc
mov
sub
mov
js
std
enter
xor
xor
add
aaa
cmp
cltd
repnz
rclb
dec
sub
mov
movsb
fadds
pop
sub
mov
rclb
js
cmpsb
xchg
out
lods
shlb
les
mov
push
rcr
inc
cmp
call
jl
js
jge
jnp
call
hlt
loop
cmp
push
push
mov
add
mov
mov
stos
mov
repnz
hlt
sbb
jne
sbb
mov
mov
hlt
test
roll
lods
nop
adc
roll
xor
fwait
int3
hlt
lock
sub
out
mov
fs
xchg
pop
mov
scas
insb
inc
xchg
aam
mov
and
jns
nop
mov
push
lret
pop
scas
jne
xchg
je
filds
push
pop
jo
insb
insb
cmp
inc
dec
adc
lea
mov
mov
jae
pop
mov
fsub
std
lcall
add
jge
movsb
das
xchg
jl
shlb
fucomip
dec
movaps
aas
stos
pop
scas
pushf
add
sahf
movsb
pop
adc
mov
sbb
mov
repnz
mov
pop
rolb
xor
mov
cld
mov
jbe
and
arpl
push
shr
mov
inc
jno
push
jb
sbb
push
mov
movsb
js
fld
lcall
rcl
sarl
hlt
cmp
ss
and
std
lcall
repz
and
dec
iret
inc
aam
cmp
ljmp
jnp
cs
add
ret
and
push
scas
into
in
cld
lret
push
cli
lods
adc
dec
adc
push
mov
popf
cmpsb
stc
jno
movsb
fists
push
int3
daa
insb
fnstenv
shrl
outsl
dec
sub
jmp
xor
add
jge
push
lea
pop
orl
xchg
data16
sub
xchg
fdiv
shll
fdivrs
mov
push
pop
jmp
mov
popa
stos
cmpsl
mov
mov
xchg
dec
imul
insl
xor
sbb
shlb
stc
icebp
rolb
cmc
lea
xchg
push
cs
xor
cmpsb
push
jo
orb
std
insb
in
cld
jae
loope
and
push
cmp
adc
mov
sbb
sti
lock
mov
adc
mov
and
ficomps
pop
in
push
hlt
adc
filds
loopne
scas
dec
cwtl
lahf
inc
mov
outsl
lahf
jno
jecxz
xchg
adc
in
sub
mov
in
pop
lods
mov
mov
call
xor
mov
clc
adc
inc
adc
stos
push
nop
lods
outsl
cltd
add
dec
or
imul
jle
dec
jmp
ja
pop
sti
add
paddusb
jb
mov
pop
adc
pop
pop
scas
cli
xor
cmp
mov
movsb
dec
repz
mov
cmpsl
mov
ds
fdivrp
push
cmp
cmp
mov
sub
add
mov
pushf
out
sahf
mov
sbb
push
sbb
and
jmp
sar
pop
push
fdivr
in
cmp
es
in
jb
sub
pop
mov
pop
pop
aas
sti
lcall
add
insb
mov
popf
inc
pushf
rclb
and
fmull
inc
imul
or
out
or
cmpsb
scas
call
add
cmp
cmp
mov
push
mov
inc
arpl
sbb
sub
insb
pop
fadds
cwtl
mov
leave
sbb
push
in
rcl
es
shrb
push
xchg
fisubrs
imul
hlt
xchg
cltd
mov
fcmovnu
dec
les
and
sub
pop
rorl
cwtl
dec
push
lock
push
and
scas
adc
test
lods
into
push
rorl
popf
movsl
lret
pop
out
cmp
test
inc
out
bound
mov
dec
loope
push
jge
cmpsl
pop
add
outsl
cmpsl
rcll
push
loop
dec
push
inc
outsb
rorb
fimuls
ret
sub
lock
mov
data16
std
into
int3
sti
inc
cmp
in
mov
jbe
int3
shrb
outsl
int
cld
pop
fcomps
sbb
add
lock
cmp
cmpsl
mov
repz
js
jmp
loopne
adc
jo
add
ss
in
inc
cmc
aam
int
sub
or
scas
dec
fsubrs
or
push
aaa
fbstp
loop
int3
repz
xor
cli
xchg
inc
bound
lods
adc
fs
mov
bsr
sub
sbb
and
lds
test
lods
and
dec
adc
lods
cli
xchg
sahf
lahf
or
dec
cmp
push
daa
add
rolb
hlt
xchg
xchg
out
or
fcom
jg
out
dec
mov
mov
cmp
fidivl
out
add
push
daa
ss
ss
jbe
sbb
lret
add
imul
adc
xchg
daa
dec
cmp
shrl
es
jl
jno
xor
xlat
cld
pop
jle
push
jo
xor
mov
pop
pushf
xor
pop
ds
cmp
mov
stos
lret
dec
jl
nop
imul
clc
data16
push
loopne
push
in
adc
cmp
pop
icebp
jo
pop
mov
cmp
aam
je
repz
sub
dec
add
js
daa
xlat
aad
jno
push
mov
test
out
mov
cltd
idiv
xor
sahf
dec
aam
or
pop
mov
loopne
mov
mov
dec
pushf
sub
bound
ss
ss
fbld
jnp
int
lock
xchg
mov
push
cmp
ret
jbe
fisubl
in
in
adc
and
jnp
mov
mov
outsb
cltd
adc
push
in
cltd
iret
test
movsb
mov
cld
add
sub
pop
data16
aam
sti
mov
pop
pop
cmp
and
xchg
sbb
mov
pop
mov
in
push
jae
xchg
aaa
xor
add
ret
dec
test
pop
roll
pop
or
push
cld
pop
xor
cld
inc
cmpsb
add
imul
nop
dec
mov
sbb
imul
add
sub
sbb
cmpsb
push
jbe
shlb
mov
fisubl
es
jl
jne
cmpb
les
fmull
hlt
xchg
xor
mov
fs
sub
in
pop
adc
arpl
js
outsb
mov
movsb
dec
sbb
sahf
nop
xchg
mov
cmp
cmpsb
xchg
dec
and
pop
xchg
loopne
cld
push
xor
push
bound
cmp
inc
sti
cmp
mov
jo
jb
outsl
cmp
dec
dec
add
xorl
mov
jle
lods
jl
or
movsb
mov
xchg
mov
jne
push
in
jl
cmp
push
adcl
sub
cmpsb
dec
push
add
xor
rol
mov
sbb
stos
push
inc
xor
mov
ret
stos
xchg
add
lock
fdivl
mov
pushf
adc
adc
sub
jnp
pop
dec
and
and
mov
mov
stos
adc
push
inc
dec
lret
inc
sub
rcrb
test
testb
pop
or
addr16
mov
call
addr16
xor
jecxz
in
push
jp
jp
shll
das
inc
stos
inc
pop
mov
test
mov
aaa
inc
and
lret
sbb
jmp
or
adc
mov
mov
cwtl
repnz
mov
jcxz,pn
mov
or
xlat
lret
movsb
ror
movsb
sbb
jo
lret
ljmp
push
enter
cmp
pop
mov
arpl
insl
pop
push
test
sub
jg
or
xchg
cmp
pop
bnd
push
sbb
jg
add
and
sub
pusha
imul
xchg
cmp
mov
cmpb
push
mov
xlat
dec
addr16
xchg
jae
pop
jbe
pusha
jecxz
mov
or
lret
mov
rcrl
add
xorl
lret
cmp
mov
xor
push
pop
adc
push
test
jle
popf
mov
jmp
dec
or
ds
lcall
pop
adc
std
sub
mov
xor
or
pop
ss
pop
loope
inc
add
dec
push
push
lcall
or
cld
test
mov
xor
loopne
mov
icebp
ljmp
xchg
add
mov
dec
fidivs
hlt
jbe
adc
fsubrl
enter
xor
and
std
and
scas
or
insb
sbb
mov
cmp
fcoms
cmp
jle
test
dec
jbe
insl
cmpsl
mov
adc
sub
scas
and
aaa
ret
xchg
mov
mov
int
lods
or
xor
ds
or
test
inc
jbe
shrl
mov
scas
imul
fisttps
fwait
aad
add
cmp
hlt
ss
sub
cmp
push
push
xor
xchg
jmp
sub
push
das
outsb
fcoms
dec
cs
mov
std
mov
pop
into
in
fiadds
shl
mov
mov
add
xor
rcl
pop
cmpsl
xchg
fsubrl
aam
jle
ss
sub
aas
inc
cmp
push
adc
movsb
ret
xor
adc
mov
lds
les
aam
aas
push
jb
pop
jne
cs
or
ss
xchg
adc
ds
shll
stos
mov
dec
or
jmpw
jmp
jge
aaa
into
outsb
mov
pop
fs
shr
mov
pushl
nop
adc
daa
inc
sub
jo
xchg
cmc
jo
nop
ss
adc
inc
push
adc
jle
xchg
mov
cld
pop
push
sar
pop
scas
es
sub
inc
push
cltd
cld
xchg
mov
xor
std
stos
mulb
mov
clc
inc
and
leave
test
add
addr16
jno
dec
shrl
repnz
repnz
call
xor
imul
cltd
je
shrb
cs
mov
hlt
sahf
or
jp
pop
pop
and
mov
enter
sahf
inc
outsl
cmpsb
fcomps
pop
pusha
dec
leave
and
mov
addb
test
pusha
or
inc
sbb
mov
sub
cwtl
cmp
insl
int3
cltd
mov
adc
push
push
mov
cmc
nop
dec
sti
pop
mov
sub
les
dec
mov
mov
aaa
inc
stos
mov
pop
bound
xchg
test
pop
mov
dec
in
cmp
or
and
mov
incl
mov
push
mov
stos
test
adc
push
jmp
ljmp
xchg
cli
cli
lahf
dec
cmpsl
jle
dec
into
mov
hlt
pop
lret
mov
addr16
pushf
shll
sbb
jmp
inc
fmull
repnz
dec
loope
cmpsl
int3
cli
adc
fbstp
aaa
cli
jle
pop
adcl
pushf
sub
mov
ss
pop
dec
or
jmpw
jmp
jge
dec
into
push
mov
xchg
push
in
js
outsb
adc
aas
data16
xor
cld
and
and
pop
dec
adc
inc
inc
loope
aam
aas
stc
dec
inc
pop
jne
or
jle
subb
adc
jmp
in
shll
stos
mov
es
insl
push
js
cmc
es
sub
push
add
xor
repnz
mov
mov
outsb
fldl
mov
cmp
adc
test
cs
inc
dec
xchg
push
decl
ds
adc
sbb
in
push
orb
push
rcll
pop
popa
xor
lret
add
inc
sbb
inc
mov
in
cmp
repz
pop
xor
xor
cmpl
mov
push
push
mov
mov
rcll
ds
xchg
or
add
aam
dec
repnz
popf
mov
sbb
sub
lcall
pop
imul
xor
aam
dec
int3
test
in
aas
inc
ljmp
mov
ds
mov
mov
test
lods
pop
xor
xor
in
hlt
lret
sbb
push
xchg
es
push
jp
cmp
xchg
stos
xchg
cmp
adc
fildll
add
xor
js
push
xchg
ljmp
outsl
int3
push
aam
pop
pop
mov
lret
stos
inc
int3
mov
cmp
ret
cmc
int
sbb
lock
xor
fmuls
mov
mov
inc
pop
and
dec
repz
add
adc
out
cmpsb
sub
aam
cmp
jo
sub
inc
sbb
sub
aas
xchg
push
push
add
jns
mov
sub
call
test
nop
scas
les
in
and
lea
imul
jp
push
dec
ret
xchg
mov
or
push
jl
xor
jecxz
dec
dec
jnp
mov
test
mov
addb
push
daa
call
lods
xchg
pushf
pop
dec
insb
jb
jge
filds
fisubl
pusha
imul
outsl
movsb
push
mov
addr16
inc
or
daa
cmp
subb
sbb
nop
xor
ja
adc
shll
lods
jnp
mov
jmp
fs
fcoms
fs
jbe
mov
loope
ret
xor
nop
ds
lock
add
pop
fsubl
inc
inc
xor
jle
pop
lds
push
call
push
inc
jae
cmpsl
test
xchg
imul
into
cmp
dec
hlt
cld
dec
cwtl
mov
push
dec
pop
aas
sbb
adc
inc
dec
adc
nop
ss
adc
and
pop
mov
mov
int3
test
and
stos
jp
xchg
or
aam
inc
lock
push
jno
push
repz
call
loope
insb
xchg
cwtl
jge
test
fmuls
loop
aam
inc
or
add
xchg
mov
fs
lods
icebp
scas
in
mov
and
int3
or
mov
or
das
test
adc
movsb
cmpsl
adc
xchg
jae
aad
pop
xchg
pop
stc
jns
and
push
outsl
cmpsl
fbld
int3
jbe
insl
fdivr
xor
movsb
lock
add
ja
mov
mov
add
or
or
xor
jnp
sbbb
add
add
fdivl
push
loopne
and
jbe
mov
les
stc
fmull
mov
xlat
loope
in
pop
popa
mov
adc
mov
mov
push
sbb
inc
push
inc
jns
xchg
mov
jge
icebp
dec
dec
push
das
addl
xor
sub
imul
sub
pop
xchg
mov
xor
dec
cs
enter
jno
pop
mov
add
add
or
andb
stos
cmp
mov
xchg
push
xchg
jbe
and
mov
jl
cld
pop
push
adc
clc
sbb
clc
movsl
mov
cmp
sub
pop
jle
shl
rcr
pop
out
mov
mov
xchg
xor
ss
mov
cmpsb
test
pop
push
lock
pop
sub
les
inc
popa
mov
and
int
jae
inc
jnp
js
push
mov
aas
lock
mov
in
movzbl
mov
pop
test
rol
pusha
inc
outsb
jle
and
xor
popa
dec
int3
dec
mov
lahf
lds
cmp
out
or
fcmove
mov
roll
inc
pop
mov
pop
pop
or
rcll
cmp
dec
into
mov
je
mov
out
dec
dec
sub
shll
mov
stc
cmp
sar
std
inc
fildll
or
mull
in
push
aas
mov
push
lahf
lcall
js
pop
int3
int
push
mov
leave
cltd
add
jp
xchg
dec
xchg
nop
cmpsb
pop
cmp
or
imull
aas
mov
push
bound
xchg
add
insb
mov
jp
dec
icebp
imulb
pop
cmp
and
push
xor
push
jmp
or
sar
repnz
cmp
cltd
loopne
mov
fcoml
ljmp
lret
shrb
inc
mov
sbb
xchg
add
test
mov
xchg
or
loopne
cld
bound
into
in
jge
int
cmp
dec
movsb
xor
insb
dec
mov
lods
jns
in
rcll
call
lock
cmp
lret
inc
gs
pop
into
rcrl
add
jo
sub
sbb
into
adc
aam
inc
or
pushf
loopne
jl
and
push
or
dec
inc
cmp
daa
sbb
fwait
loopne
dec
movsb
ljmp
rcrb
jae
jo
dec
push
clc
jb
mov
add
cmp
inc
movsl
or
jle
cltd
mov
aam
int3
push
arpl
jb
mov
cmpsl
in
jb
das
addb
inc
cmpb
cmp
outsl
aaa
lret
dec
lahf
xchg
inc
stos
jmp
repnz
and
sub
rcr
or
push
cmc
xchg
xor
popf
push
ss
adc
mov
xchg
lea
data16
cmp
ret
xlat
popf
jae
push
sarb
sub
or
repnz
div
sti
jo
int3
hlt
pop
testb
rclb
ljmp
les
lock
dec
mov
add
mov
mov
mov
inc
xor
dec
fs
stos
xor
out
sbb
jp
pop
add
cltd
js
or
dec
movsb
lock
add
cmp
mov
les
add
cmp
sbb
push
imul
mov
cmp
mov
mov
repz
rcl
mov
cltd
pop
push
jp
loopne
subl
vmptrld
clc
dec
and
pop
xor
outsb
decl
stos
pop
out
or
or
sub
pop
dec
pop
rolb
mov
and
sub
jmp
int3
dec
pusha
iret
aas
shll
xchg
cmc
xorb
jbe
sar
adc
xor
dec
xor
jae
dec
fsubs
and
pop
mov
lods
inc
mov
ds
das
pop
neg
in
push
adc
rclb
mov
decb
jp
mov
pop
and
stc
push
and
pop
popf
lret
cmp
ret
mov
shrl
int3
data16
push
inc
add
sbb
or
adc
outsb
mov
js
daa
testl
mov
outsl
sbb
sbb
cmp
fildl
hlt
aad
cmp
mov
cmp
pop
mov
test
out
mov
sbb
mov
jnp
cmp
je
fadds
mov
inc
mov
les
and
and
sti
pop
xchg
js
insb
lds
or
sbb
sub
dec
dec
adc
popf
or
lcall
or
xchg
jge
pop
out
push
push
mov
or
ja
jns
pop
mov
out
xchg
xor
sub
aam
xchg
mov
jl
div
test
push
cwtl
rcl
pushf
pop
cmpsl
je
cwtl
or
jmp
cmpsl
scas
inc
inc
add
aam
pop
std
xchg
loop
or
dec
push
sub
cmp
aad
out
add
dec
sub
int
sub
stc
addl
rcll
jmp
mov
test
xchg
das
test
movsb
push
decb
imul
lret
and
pop
repz
repnz
jle
mov
add
xor
push
dec
lock
out
or
or
sarb
js
orl
push
loopne
push
and
push
jmp
imul
out
and
and
sbb
in
imul
repz
sub
neg
dec
aad
ficoms
fbstp
and
stc
jo
push
or
jne
xor
sbb
dec
mov
and
aas
fimull
adc
xchg
xchg
sarb
rclb
mov
pop
adc
loopne
pop
loopne
xchg
pop
sub
ret
repz
notb
mov
mov
sti
aas
fbstp
jge
movsl
dec
xchg
adc
lret
filds
push
and
and
cmp
fwait
inc
jmp
mov
imulb
in
in
push
pusha
insl
cmpsb
loopne
push
jp
xlat
mov
js
dec
jl
es
jg
adc
sti
es
jge
pop
cmovl
out
adc
cwtl
pop
cmp
out
mov
cmp
and
xor
mov
call
scas
sbb
repz
repz
inc
loope
add
orb
adc
xchg
xchg
scas
cmp
sub
jecxz
push
repz
push
sbb
inc
adcl
mov
outsl
in
xlat
imull
cli
mov
iret
cs
push
movsl
jg
mov
out
sahf
jae
push
jb
ret
lret
cld
shrb
cli
mov
push
inc
pushf
mov
sahf
aaa
fisttpll
mov
push
pop
stos
clc
cwtl
les
jl
mov
cwtl
xor
add
outsl
xor
es
pop
ret
cmp
cs
loop
pushf
cmp
inc
xchg
bnd
mov
stc
sub
inc
data16
roll
adc
fisttpll
das
mov
imul
add
out
out
movsb
rclb
mov
pop
mov
pop
pop
pusha
jle
mov
loop
xor
aaa
xchg
lret
cmpsl
cmp
mov
cwtl
dec
jbe
xchg
push
pop
out
jl
mov
sub
das
cwtl
cltd
cmpb
inc
pop
mov
cltd
das
or
subl
subl
addr16
cmp
stos
mov
ss
sub
fsubl
push
push
fdivrs
inc
jp
cltd
adc
pusha
or
cwtl
jmp
adc
mov
ror
shl
cmp
push
push
dec
cmc
add
sub
inc
outsb
setp
aas
scas
inc
ljmp
vpmacssww
dec
xchg
das
pshufw
mov
push
repnz
test
addl
or
je
lahf
sbb
cmpsb
daa
jle
cmp
out
push
and
jmp
dec
decl
dec
andb
jle
fsubs
movsb
enter
jge
jecxz
in
in
push
adc
jp
adcl
dec
pop
mov
insl
fisubs
sub
in
sbb
outsb
loope
xor
adcb
and
fcompl
sub
into
xor
insb
pop
sbb
mov
sbb
daa
push
mov
cmpsl
mov
test
cmpsl
mov
jo
je
jmp
hlt
cmp
arpl
fisttpl
dec
cmpsl
cmp
insb
dec
and
ljmp
and
push
inc
sti
mov
jmp
or
mov
adc
gs
ljmp
mov
push
test
add
mov
rcrl
and
mov
repz
outsb
push
and
mov
pop
jno
mov
mov
mov
pop
xlat
xchg
mov
add
ljmp
enter
es
cltd
pop
cld
jmp
clc
adc
nop
lds
xchg
xor
fdivrs
cwtl
adc
dec
jle
mov
sub
cmp
daa
cmp
adc
pop
push
das
sti
pusha
mov
outsb
sbb
push
int3
mov
fwait
ja
push
jns
sub
xchg
cmp
stos
jmp
adc
push
push
movsb
inc
push
cwtl
mov
imul
push
mov
mov
outsl
aad
cmp
inc
and
shl
lods
mov
pop
out
sbb
sub
cmp
xor
lds
movsb
cmp
test
ret
mov
das
xchg
mov
jno
notl
sbb
xchg
shll
pop
sbb
sbb
mov
xor
in
rcl
mov
lea
cmpsb
xor
mov
fstps
or
cwtl
and
mov
cld
addr16
sbb
mov
xor
aad
push
and
push
lock
lods
mov
jo
lds
push
pop
sbb
imul
jle
mov
sahf
pop
or
call
gs
inc
cmpsl
xchg
out
jecxz
sub
or
sub
and
and
mov
sub
sbb
adc
adcb
inc
jl
repz
mov
ud0
jno
mov
in
sub
sbb
jl
or
or
in
loopne
xor
cltd
stos
dec
stc
out
lock
aaa
or
push
ret
jno
das
aaa
xor
jge
cltd
cmovnp
jae
inc
mov
es
jmp
leave
outsb
cmpl
insb
xor
out
in
cltd
mov
pop
das
jecxz
or
mov
sti
jl
call
jae
pusha
pop
jmp
insb
dec
test
mov
pop
xchg
fists
pop
popa
cmp
sahf
xor
fmuls
inc
pop
cltd
in
data16
loop
inc
in
mov
sti
arpl
scas
shrb
imul
fdivrs
cmc
inc
mov
push
mov
imul
cwtl
packsswb
sahf
lock
iret
in
ret
pop
mov
adc
mov
xchg
icebp
mov
inc
call
and
rol
adc
push
mov
push
push
int3
ror
daa
js
data16
adc
push
pop
pop
aad
call
adc
or
not
stos
xlat
js
jns
lahf
cmp
sub
mov
jmp
xor
cmp
push
xchg
pop
pop
cmpl
push
push
sub
mov
xor
pop
xor
mov
mov
xor
cld
mov
push
sub
movsb
jae
hlt
push
xorl
xchg
or
pop
stos
sarl
shl
and
xor
inc
in
cld
push
into
mul
mov
out
adc
add
and
sbb
push
lods
sub
nop
lahf
jmp
jecxz
nop
cmp
jmp
pop
outsl
cltd
sbb
cmp
pop
push
push
imul
push
xchg
xchg
pop
sbb
push
fs
enter
mov
adc
xchg
lock
mov
push
inc
in
push
icebp
jecxz,pt
fistpll
xchg
ljmp
dec
push
add
imul
inc
nop
or
rol
addl
inc
insb
inc
xchg
dec
fidivs
sti
sub
mov
mov
lods
inc
jge
iret
sahf
mov
add
movsb
pop
les
or
pop
cmp
mov
ret
test
mov
dec
jecxz
fucomip
addb
loope
cmovnp
mov
mov
and
rcrb
fsubr
cwtl
loope
ja
sub
loop
outsb
inc
mov
mov
iret
mov
in
out
push
loope
scas
and
xorb
and
cmp
jne
dec
pop
daa
shlb
test
sub
cmp
inc
jns
mov
test
jg
and
movsl
jmp
mov
jg,pt
daa
xor
mov
lahf
hlt
add
jmp
mov
ds
daa
mov
push
push
aas
dec
cmp
ljmp
mov
fnsave
shl
xchg
jmp
mov
pop
sbb
sub
dec
lahf
in
int3
pop
sub
mov
pop
push
add
push
out
mov
xchg
cltd
push
adc
xchg
nop
push
jecxz
mov
mov
cmpb
incb
sbb
mov
ds
mov
outsb
cmp
ret
cmp
into
cmp
adc
call
xor
adc
sub
jbe
adc
fsubr
test
jg
push
shlb
mov
push
sbb
loopne
inc
xor
leave
hlt
dec
pop
inc
sbb
push
ds
lahf
jne
stos
repnz
jne
xor
testl
aas
loope
xchg
nop
adc
xchg
xchg
repz
push
out
out
rorl
mov
sbb
xchg
lock
inc
add
or
call
sub
int
push
ret
jl
aaa
cmpsl
xchg
dec
test
stos
add
imul
cmp
jge
test
test
in
mov
sbb
pop
repnz
pop
rorl
mov
pop
fnstenv
jg
rorl
pop
mov
test
dec
sti
dec
push
sub
push
fisttpl
inc
jmp
inc
inc
stos
jno
cltd
xchg
jl
in
out
pop
add
loopne
icebp
mov
ds
outsb
lods
inc
jp
repnz
inc
loopne
leave
push
mov
icebp
cmp
fsubs
or
xor
bound
stos
or
notl
lock
es
idiv
imul
xor
sarb
ds
pop
adc
and
sub
mov
or
jb
jae
add
mov
hlt
push
jae
fsubrs
out
pushf
xchg
adc
std
jl
mov
mov
push
and
lret
out
ret
push
les
fidivrs
inc
mov
sbb
adc
jl
xor
daa
pop
popf
test
insb
push
xor
jb
mov
fisubrl
cltd
xchg
mov
int
aas
lock
dec
mov
push
js
popa
xchg
les
aas
out
pop
lods
sbb
pusha
mov
cli
mov
cmp
pop
inc
shll
xor
inc
and
sarl
cli
xchg
dec
lahf
ds
mov
xchg
dec
sti
dec
add
js
lds
aad
push
insb
insl
jl,pt
mov
push
cmp
rcl
daa
icebp
mov
lock
sti
ja
pop
orl
je
fidivs
xor
push
ljmp
out
xchg
sbb
hlt
fsubl
push
pop
sbb
shlb
stos
push
push
cwtl
rcl
mov
jecxz
arpl
loopne
sub
fstl
aaa
bound
xor
xchg
xchg
imul
aam
cmp
call
jmp
add
or
push
push
imul
or
mov
out
loope
fmuls
jp
mov
dec
fistps
loope
mov
jb
add
scas
dec
push
cld
pop
jae
add
cmp
xor
filds
cmp
shrl
imul
sub
outsb
loopne
data16
mov
mov
inc
scas
adc
mov
push
imul
fmuls
jle
aas
dec
stos
mov
test
rcrl
dec
or
lret
fsts
scas
in
pop
mov
xchg
mov
jle
test
mov
aam
aaa
push
ja
adc
std
test
ret
jns
push
clc
xor
inc
cmc
dec
aam
mov
cmp
imul
les
sbb
sub
sti
int3
daa
das
xor
mov
frstor
jb
add
sbb
out
jl
in
and
mov
jl
xor
dec
in
orl
test
iret
xlat
xor
push
insb
push
fdiv
arpl
pop
inc
adc
in
cmpsl
jecxz
push
jmp
adc
pop
mov
cli
in
cmpb
jnp
add
jb
test
pop
sbb
fcoml
movsl
and
popf
lds
xor
andb
ja
dec
movsb
mov
pop
mov
data16
repnz
jb
xor
ja
cltd
jge
data16
loop
enter
push
jge
sub
mov
aaa
mov
adc
cli
mov
ret
inc
dec
dec
adcl
shl
xchg
clc
push
loope
out
jl
push
lods
push
push
testl
dec
fs
jo
or
mov
inc
cld
outsl
ror
push
jg
or
mov
sahf
aas
sbb
pop
mov
lcall
cltd
mov
fnstenv
inc
into
jl
fsub
jl
jnp
mov
push
or
or
int3
repnz
mov
adc
mov
adc
sub
inc
inc
ljmp
adc
and
std
xor
jnp
fmuls
mov
jno
addr16
ficoms
or
xchg
sbb
mov
inc
push
adc
xor
jnp
lds
sub
ja
ja
outsb
mov
cmp
mov
daa
pop
dec
xchg
push
push
dec
repnz
mov
push
or
sbb
sahf
movsb
pop
adc
scas
jmp
or
cmp
pop
mov
sbb
push
mov
adc
icebp
add
lcall
mov
cmp
dec
pop
add
mov
popa
or
movsb
clc
flds
pop
mov
mull
sbbb
pusha
mov
stos
in
aaa
insl
shlb
inc
push
mov
in
and
es
push
mov
xchg
out
jne
loope
adcl
imul
push
cli
cmp
inc
adc
xlat
pop
mov
jge
test
sub
or
sbb
lret
aad
scas
jl
outsl
cmpsl
pop
or
das
insl
xor
mov
cmp
jmpw
jmp
jg
sarl
mov
mov
push
dec
dec
ret
flds
push
ror
das
or
sub
inc
pop
loope
ss
sbb
adc
out
arpl
and
dec
shll
pop
mov
mov
jmp
scas
add
jl
in
orl
out
pop
faddl
sub
pop
jle
pushf
pop
stos
push
cmpsb
repnz
jl
dec
cmp
xor
pxor
in
pop
cmp
cmp
xor
out
ret
xor
scas
mov
xor
cwtl
dec
je
mov
jae
std
stos
outsb
push
pop
push
pusha
js
mov
in
inc
push
vmovddup
push
hlt
aam
shlb
loopne
test
xchg
jmp
sbb
xchg
and
sbb
mov
sub
and
pop
pusha
mov
shrl
test
cmp
out
jo
int
mov
fs
mov
dec
test
inc
aad
xor
test
add
arpl
fdivrs
mov
mov
xchg
hlt
test
adc
jle
rcr
adc
addr16
inc
mov
push
cmpl
aas
loope
test
je
mov
bound
xchg
aaa
or
sbb
sub
test
fwait
jne
pop
sub
ja
in
sub
cld
sti
push
add
scas
dec
stos
jmp
or
in
mov
dec
xchg
test
xchg
popa
cld
in
lret
out
rolb
pushf
pop
or
pusha
pop
cmp
xchg
stos
add
adc
push
xchg
ja
les
lret
addl
pop
int3
insb
push
xlat
xchg
stc
jle
pop
mov
std
pop
pop
inc
scas
inc
cmpsb
ja
ret
xchg
scas
xchg
mov
pop
push
xchg
aas
xchg
ret
sbb
test
jne
mov
jnp
cmpsl
jnp
push
sahf
cmp
pop
sbb
jg
push
mov
mov
inc
pusha
mov
adc
or
inc
repz
add
mov
das
xchg
pop
xor
pop
jne
xor
push
sub
add
mov
mov
mov
pop
in
add
add
scas
sbb
add
pop
dec
sub
dec
xlat
mov
and
pop
call
xorl
icebp
push
and
in
das
test
mov
movsl
push
fs
outsb
pop
cmp
cmpl
pextrw
pop
mov
inc
xchg
and
dec
jl
lock
pop
movsb
mov
sub
sahf
sub
jae
pushf
xor
je
dec
mov
mov
mov
cmp
enter
psllw
or
es
cmpsb
push
inc
int3
scas
popf
call
fstps
inc
mov
jnp
enter
or
enter
cmc
sbb
xchg
shl
dec
cmp
cmc
movb
std
in
loopne
mov
mov
fcmove
into
ficompl
xchg
in
fstpt
cmp
jns
cmpsb
push
sbb
sub
or
sub
and
mov
jae
sbb
mov
jecxz
mov
push
cmp
imul
push
adc
mov
mov
out
mov
jecxz
mov
bound
sub
aad
cmp
ret
gs
fidivrl
dec
cwtl
add
jno,pn
xchg
incb
daa
ds
mov
lods
sub
ret
ja
dec
std
jmp
jmp
mov
js
cmp
popa
loop
adc
cld
inc
dec
rorl
bound
xchg
push
add
lret
and
and
mov
in
div
jne
adc
add
dec
leave
jnp
cli
xor
orl
mov
cltd
pop
jbe
dec
inc
aam
mov
jns
mov
adcb
sbb
ds
pop
ss
rcr
fsub
mov
pop
mov
mov
add
bound
jmp
jl
sbb
lods
pop
mul
stos
shrb
popa
push
call
stos
lock
sbb
inc
subb
loopne
mov
loopne
daa
cmc
icebp
cmp
aas
xchg
pop
dec
push
adc
mov
and
mov
mov
dec
ficoml
lock
loopne
aad
and
jecxz
dec
mov
pushf
test
roll
addb
add
or
jg
push
xor
or
cmc
inc
in
mov
shrl
js
inc
aad
push
icebp
clc
gs
or
mov
mov
and
mov
ja
pop
scas
xor
ret
cmp
xor
in
pop
rcr
xchg
or
jmp
not
jl
and
test
xchg
cmp
cmp
ds
mov
data16
dec
ret
dec
addb
push
jno
push
in
jmp
and
and
mov
aaa
pusha
pop
dec
push
jbe
cld
cmp
loopne
js
fdivrs
and
cmpb
cld
sbb
pop
add
cmp
jo
dec
pop
cmp
shlb
rorb
fsubrs
je
movsb
cld
pop
out
fs
ret
push
outsl
jp
orl
sahf
gs
lock
cld
add
fisttps
movsb
pop
add
cmpsl
jnp
cmp
lret
lret
std
pusha
jge
rol
pop
or
call
fadd
loopne
in
int3
cs
cwtl
out
loopne
jno
push
stc
sub
inc
jmp
mov
mov
dec
stc
out
pop
pop
jnp
insl
push
add
jbe
mov
xchg
cli
push
xchg
ja
negb
adc
push
outsb
lret
pop
jp
int
jbe
ret
inc
pop
jno
xchg
add
pushf
bound
cmpsl
jo
sbb
and
cmp
shl
sbb
sti
add
arpl
mov
sub
jl
popa
scas
and
sub
push
xchg
push
scas
fcomi
incl
ljmp
or
int3
and
out
call
popa
jge
xchg
sub
jge
adc
in
dec
dec
jnp
mov
std
cmp
cld
push
xor
mov
mov
pop
mov
mov
jo
adc
mov
adc
mov
adc
push
push
and
out
lret
cmp
std
xor
fwait
xchg
mov
popf
cmp
pushf
sahf
das
test
mov
clc
sub
data16
shll
stos
lods
xlat
gs
push
sub
cld
cmp
aas
sub
cltd
pop
ret
or
loopne
jnp
push
pop
lods
cmp
inc
mov
mov
add
call
sub
push
or
mov
cmp
pusha
cmpsb
or
sahf
test
pop
adc
inc
dec
cli
xchg
cmp
push
call
fdiv
ret
push
pusha
mov
test
xchg
les
mov
pop
mov
in
jle
xchg
in
lods
mov
shrb
xlat
int3
or
mov
or
movsl
pusha
pop
xor
cwtl
mov
sarl
sbb
lods
add
jg
sarl
in
jbe
jno
or
adc
pop
loopne
mov
adc
fmuls
lahf
push
or
mov
out
adc
in
in
aad
mov
sub
pop
das
pusha
adc
jbe
mov
js
mov
scas
dec
dec
es
fsubrs
je
or
jmpw
jp
mov
or
cmc
fsincos
push
xor
shl
iret
in
jmp
rclb
ficomps
mov
dec
and
lods
or
xor
fwait
cld
insl
roll
push
and
xor
outsl
ljmp
cmp
scas
test
cmp
loope
mov
mov
fsubp
fistl
test
sub
test
test
or
shll
and
push
cld
xor
loope
push
xchg
aad
and
icebp
xchg
imul
or
adc
mov
mov
push
das
mov
add
sbb
lds
or
and
jne
gs
in
ds
out
sub
mov
ret
mov
aam
inc
adc
fistps
pop
push
fcompl
js
or
xchg
shrb
dec
add
sti
hlt
cmpsl
pusha
nop
push
repz
mov
ja
inc
xchg
mov
add
loopne
nop
nop
and
sbbb
cld
pop
push
sub
add
xor
testb
sarb
pop
lcall
cmp
push
mov
sbb
jl
mov
push
sub
outsb
lret
inc
mov
je
nop
cmp
jecxz
mov
dec
shrb
sub
lret
lahf
fwait
cld
dec
rcr
sub
or
pop
jb
pop
cld
xor
dec
in
insb
sti
orl
rcl
jmp
push
sub
adc
or
adc
xlat
clc
push
sub
inc
outsb
mov
pop
imul
fsubrs
push
das
test
add
cmp
leave
mov
ds
sub
jo
lods
inc
fmuls
lea
pushf
mov
xchg
dec
adc
xlat
push
fwait
pop
repnz
jne
test
and
pop
dec
cli
cmpsl
je
andb
jne
mov
adc
sbb
inc
jno
mov
fs
sub
and
jmp
sub
std
mov
pop
jb
fsubrl
sub
andl
sbb
pusha
int3
cmc
lret
insb
enter
jecxz
rol
jno
sub
cwtl
xlat
lods
stos
clc
rcr
mov
and
ret
add
xchg
movsl
adc
repnz
jge
stos
push
lock
mov
inc
add
jmp
aam
rclb
jmp
aaa
adc
sub
jl
push
scas
cld
inc
push
cmp
jg
jge
jmp
mov
arpl
dec
loope
leave
jl
jl
inc
cmc
mov
mov
sub
out
lock
lea
and
jge
add
sbb
lcall
and
or
ret
and
mov
mov
dec
stos
rolb
lcall
cmp
fsubr
jb
in
xchg
lcall
push
jbe
jg
aad
stos
or
stc
cmpsl
or
push
inc
notl
rol
repnz
je
or
mov
inc
sub
xor
out
xchg
rcrb
xchg
push
stos
xchg
dec
aas
mov
add
dec
jb
adc
ss
data16
push
sti
xchg
pop
cmc
pop
dec
sub
mov
mov
sbb
adc
test
insl
jo
pop
cmp
bound
adc
add
in
lods
push
cmp
cmpsl
dec
lock
and
fwait
je
les
pop
enter
into
dec
lock
mov
push
xor
ljmp
adc
fwait
inc
mov
sbb
insl
loope
lahf
sahf
pushf
fsub
xor
mov
mov
mov
fldt
fnstcw
lea
sbb
or
mov
add
xor
dec
int3
cmpsb
out
xor
pop
mov
icebp
in
rcll
sub
adc
pop
jo
jecxz
jmp
fs
sti
or
imul
xor
insb
xchg
lcall
push
aas
jmp
push
out
xor
lcall
fcmove
outsb
std
add
dec
mov
xor
cmpsl
lods
dec
xchg
add
jecxz
mov
shll
mov
cmp
mov
jae
pop
adc
js
and
inc
mov
addl
or
insb
xor
repnz
xor
mov
shlb
push
sub
cmp
lods
hlt
cld
jp
outsb
out
aas
test
cld
adc
shl
int3
ficoml
inc
inc
sbb
xchg
inc
adc
jp
cmp
mov
enter
shl
or
sbb
test
pop
ret
fists
sub
dec
mov
imul
leave
or
mov
sbb
pop
mov
jo
addr16
insb
adc
popf
mov
ljmp
in
data16
mov
andb
and
iret
jo
imul
sar
pop
shll
sbb
add
stos
cltd
xchg
and
fdivrs
inc
xor
push
loopne
sbb
sbb
jp
fcomps
xor
push
add
cs
and
mov
aas
fisubl
mov
lds
inc
call
cmpsb
mov
xor
add
je
daa
push
lret
mov
jg
sbb
or
ljmp
mov
cmc
cmp
adc
cmp
aaa
sbb
sahf
add
xor
orl
lcall
out
ja
lock
int
and
xchg
fisttpl
cmpb
push
aam
xchg
insl
faddp
cld
testb
sub
in
loope
out
xor
xor
cmp
insl
dec
mov
call
jg
push
aaa
push
mov
jmp
sbb
ljmp
out
or
ljmp
cmp
int
xchg
data16
mov
add
jl
loop
xchg
test
push
pop
mov
dec
loopne
aad
jb
push
int3
dec
in
loope
mov
push
scas
js
xor
mov
push
dec
stos
push
dec
mov
xchg
lret
into
jl
push
xchg
adc
mov
lret
mov
mov
and
lods
and
mov
xchg
test
movsb
push
cs
jne
cmp
outsb
pop
push
jns
aad
hlt
out
push
inc
inc
adc
cmp
aam
das
imul
mulb
sbb
jb
mov
stc
aas
and
pushf
mov
cmc
ds
mov
sub
mov
pop
cmp
stos
rcll
inc
pop
sub
mov
jecxz
lods
enter
pop
sbbl
pop
mov
aaa
or
mov
das
aam
sub
dec
cltd
push
das
icebp
and
push
int3
mov
rcrl
sub
jcxz,pt
and
sbb
mov
lods
sub
repz
subl
pop
push
push
mov
mov
movsb
lds
cwtl
push
fsubl
pusha
cmp
cmpb
mov
scas
push
pop
cld
scas
ja
in
out
mov
bswap
mov
and
fcmovnu
mov
inc
cmp
cmpb
cltd
rcrl
cmp
sbb
cmp
sub
adc
out
mov
sbb
test
out
adc
in
repz
inc
int
data16
dec
test
push
gs
cltd
orl
sti
andb
mov
cmp
adc
out
addr16
mov
sub
mov
and
imul
push
sbb
lds
clc
xor
sub
xchg
dec
mov
jae
push
inc
mov
dec
jl
sti
rol
or
xor
stc
cmp
push
mov
sbb
xor
dec
out
lods
in
int3
and
mov
cmp
ss
dec
pushf
push
cmp
xchg
in
pop
push
std
push
cmp
inc
lea
jle
lds
hlt
xlat
pop
pop
out
je
pop
ret
mov
xchg
in
clc
les
inc
fsincos
mov
out
cs
out
push
mov
cwtl
sub
push
dec
xor
nop
ljmp
mov
mov
mov
loop
dec
and
push
call
push
sahf
clc
in
pop
pop
clc
jae
movsl
sbb
cmp
xor
rorb
stos
jo
data16
nop
sub
mov
outsb
and
push
pop
clc
sbb
pop
push
outsb
js
push
mov
jne
data16
cmp
or
ljmp
rolb
fcmovnb
in
inc
sbb
into
in
jl
jl
jae
inc
jp
test
cmp
mov
faddl
scas
pop
test
out
and
jb
mov
inc
pop
les
and
inc
push
fwait
jb
jp
mov
jl
fmull
dec
jns
xchg
xchg
xor
mov
pop
ds
rol
or
fbld
shr
inc
mov
jmp
inc
lahf
inc
out
sti
adc
mov
jne
xchg
repnz
data16
mov
push
lcall
and
nop
and
test
push
aas
lcall
int
cmpsl
into
mov
aad
mov
fidivl
pop
pop
sub
fs
stc
aas
es
xor
outsb
xchg
sub
ret
sub
int3
in
lock
ret
aaa
lret
rclb
rcll
add
cwtl
fcoms
mov
xchg
test
test
gs
jmp
stc
scas
add
mov
sarb
repnz
out
jp
xchg
fstpt
cmp
mov
lcall
cmp
rcr
inc
jo
pop
int
jne
jne
inc
mov
fcomps
js
xlat
adc
inc
add
cltd
adc
add
ljmp
dec
hlt
inc
fwait
jp
cwtl
jle
rcl
pop
mov
or
xchg
sahf
xchg
pop
ja
jl
adc
and
xor
fisttps
enter
test
lds
ds
dec
jnp
xchg
mov
popf
or
les
xchg
or
or
pop
cld
test
cld
das
mov
cmp
int
pop
pop
jb
int3
xor
in
pop
insl
dec
test
in
adc
popa
or
stc
sbb
ret
rorl
xlat
push
out
movsb
jnp
enter
aaa
pop
push
fidivrl
stos
hlt
sbb
lods
movsl
add
rcrb
es
les
fwait
xchg
add
aad
int3
xorb
cmovae
sbb
insl
ret
inc
sub
mov
in
adc
jo
icebp
add
lcall
lret
out
out
mov
test
insb
cmp
movsl
and
addb
fcmovnb
pushf
mov
lock
dec
mov
gs
imul
cmp
fwait
out
loopne
jb
xor
or
out
sub
inc
or
incb
aas
test
ljmp
sbb
add
cmp
shl
dec
addb
lea
adc
mov
xchg
push
mov
clc
fnstenv
dec
jbe
sarl
lock
mov
adc
xor
lret
dec
lods
testb
adcl
and
arpl
mov
movsl
push
jo
and
jmp
sub
clc
lahf
cli
int
push
stos
and
jmp
fdiv
in
inc
daa
jo
loop
add
jo
aad
aas
shrb
dec
enter
xor
aad
cmp
cli
lret
push
sbb
pop
cwtl
setne
data16
scas
in
js
mov
jo
out
cmp
xlat
and
xchg
inc
mov
mov
stc
xchg
mov
sub
imul
push
fcmovu
popf
jnp
push
sub
inc
or
xchg
dec
dec
jecxz
cmpb
je
mov
sbb
lcall
data16
adc
int3
push
shr
in
xor
decl
sub
hlt
mov
insb
xor
inc
or
fcmovbe
or
loop,pt
fiaddl
jecxz
xorb
rorl
cmp
cmp
mov
loopne
jle
mov
add
sub
movsb
in
je
enter
and
lret
addl
outsb
negl
pop
sti
daa
test
and
or
ret
arpl
mov
dec
jnp
mov
aad
lcall
inc
add
xchg
push
mov
dec
jo
push
subl
adc
pop
sti
sbb
cmpsb
or
add
out
dec
xor
subl
popa
movsb
lret
push
stos
push
hlt
lcall
sbb
je
adc
mov
outsl
das
loopne
inc
lcall
pop
js
jl
aaa
je
fadd
inc
add
pop
lods
and
sub
enterw
xor
or
mov
sbb
pop
pop
hlt
sbb
xor
sbb
bound
push
adc
jg
push
in
xor
adc
out
std
dec
scas
mov
push
loop
fcom
adc
dec
hlt
dec
dec
jle
shl
outsl
jae
js
sub
cltd
sarl
bound
das
mov
lahf
cmp
pop
cmp
jg
inc
dec
fs
sbb
scas
and
loope
mov
jecxz
cmc
fdivs
outsb
fistpl
loop
mov
jge
int3
lods
or
and
and
imul
ljmp
fsts
mov
add
xchg
mov
fnsave
xchg
jecxz
lcall
popa
jmp
in
mov
ficomps
faddp
in
sub
sbb
rorl
sub
les
mov
lock
sub
add
shr
push
in
rcrb
aas
lret
push
mov
cs
jp
icebp
orl
rolb
mov
stos
push
jbe
and
pop
test
dec
push
dec
dec
mov
pop
es
xor
sti
data16
mov
cmc
mov
add
in
lahf
rolb
leave
lea
cld
clc
js
sub
ja
ss
cmp
lcall
push
sarl
or
xchg
adc
inc
insb
add
dec
in
aam
rcl
dec
repz
in
xchg
orl
test
aas
enter
xlat
ljmp
ss
mov
dec
push
popf
xchg
bound
repnz
mov
dec
int3
mov
xor
inc
push
add
lea
jl
dec
js
sub
movsw
out
in
ljmp
sbb
repz
js
fldt
xchg
cmp
push
out
dec
lcall
sbb
add
jb,pt
movsl
lods
xchg
xchg
jmp
out
int3
adc
imul
push
std
leave
add
out
mov
add
out
xor
out
scas
lcall
add
add
mov
movsl
int3
leave
sbb
dec
add
push
jb
repnz
pop
push
sahf
pop
lret
cmp
andl
in
dec
mov
fnstenv
insl
jmp
inc
lret
mov
mov
ret
jecxz
lret
addr16
int
jnp
hlt
dec
pop
pop
popf
mov
shl
jecxz
push
cmp
or
shl
mov
or
or
int3
dec
test
adc
mov
jbe
push
mov
mov
sarl
cmp
push
xor
clc
xchg
mov
adc
orb
cmpsl
adc
ficompl
imul
lahf
mov
enter
mov
adc
fadd
pop
mov
mov
imull
mov
pop
repnz
sbb
push
mov
icebp
sbb
mov
bound
jb
ret
sbb
fnsave
out
mov
sarb
xchg
mov
sbb
dec
pop
sub
mov
xor
test
aaa
notl
jmp
fstl
dec
dec
pushf
xor
es
scas
es
test
insb
xor
arpl
push
mov
clc
push
movsb
repnz
ljmp
or
adc
xchg
ret
push
inc
add
push
inc
mov
and
jno
into
aaa
mov
mov
fwait
dec
cmp
dec
fiaddl
pop
imul
sbb
cmp
ret
mov
out
in
in
lret
test
fadd
mov
daa
and
adc
cmpb
xor
add
out
xchg
push
not
xchg
shrl
das
xorl
cs
loope
arpl
aad
bound
mov
fnsave
imul
push
aas
dec
sbb
movsb
shll
push
ljmp
xchg
mov
sbb
or
push
pop
mov
repz
int3
popa
push
fstpl
mov
adc
mov
test
cmc
xor
pop
sbb
push
in
mov
push
in
adc
imul
jl,pn
fadds
ret
mov
cltd
push
or
int3
xorl
mov
pop
mov
jmp
pop
and
add
std
sbb
xchg
adc
fistpll
aam
add
add
sub
cmp
lds
pop
add
movsl
and
mov
sbb
mov
pop
pop
cmp
mov
dec
faddl
bound
pop
out
in
dec
mov
sbb
xchg
mov
pop
jmp
imul
sub
cltd
test
sub
outsb
mov
in
jbe
popa
pusha
adc
inc
jmp
jo
loop
jmp
mov
ljmp
mov
add
test
xor
pushf
aam
mov
push
cmp
ret
scas
fst
stos
mov
loopne
out
sub
dec
xchg
or
xor
push
pop
mov
fwait
aad
xor
lret
adc
fdivrl
es
ja
cli
and
or
aas
adc
xchg
stos
fistpl
mov
or
xchg
mov
push
daa
inc
jecxz
jns
add
call
jl
mov
jne
cmp
pop
aad
rol
inc
push
aam
rcr
lret
lea
inc
cmp
dec
cmc
xchg
mov
ret
in
out
lods
push
inc
inc
lods
jmp
mov
sbb
es
jbe
enter
xchg
mov
pop
mov
lret
sbb
pushf
xchg
add
roll
pop
xchg
mov
fcmovbe
fistps
dec
or
or
lock
inc
dec
clc
push
cmc
aad
inc
lods
cmpsl
push
xor
out
sbb
cmc
rcrl
ds
ret
xor
cld
adc
sub
pushf
sahf
aad
and
fisttpl
or
out
int3
mov
xchg
push
jnp
cmp
fldenv
inc
sbb
adc
push
pop
xor
cmp
lcall
xchg
loopne
lods
imul
and
mov
aaa
stc
push
call
xor
cld
rolb
mov
aam
push
cltd
mov
ret
push
dec
mov
sbb
adc
gs
jnp
int3
dec
rcrl
cmpsl
mov
lret
jp
cwtl
jecxz
mov
mov
subb
negl
push
jnp
xchg
jb
mov
rorb
int
test
sar
popa
adc
xchg
nop
cmc
shll
ds
mov
xor
cmp
in
test
pusha
or
dec
adc
or
pop
aas
xlat
push
icebp
xchg
pop
mov
cld
mov
ret
lock
xchg
mov
jle
roll
push
inc
jo
idiv
cmp
int3
or
jmp
jb
arpl
and
ss
cltd
scas
cmc
push
gs
insb
out
enter
xchg
and
mov
pop
push
xchg
rclb
add
lret
inc
pop
pusha
rcl
aas
ljmp
das
push
shlb
cmpsl
xchg
or
lods
add
shrd
add
test
lcall
dec
mov
mov
outsl
push
xchg
addr16
fwait
sub
xor
or
add
mov
dec
lret
pop
xor
mov
lods
in
cltd
fcomip
scas
insl
pop
cmp
in
bnd
hlt
jbe
push
inc
jo
mov
test
ret
insb
jmp
mov
pusha
in
and
cmpb
push
call
lcall
sub
inc
in
add
je
sbb
cli
ret
pop
push
or
add
insb
in
pop
pop
int
cmpsb
add
pop
xor
iret
inc
xorl
ds
sub
and
dec
mov
cmpb
adc
movsb
pop
add
mov
dec
xlat
mov
fmull
repnz
jmp
fdivrp
and
xchg
jb
dec
je
int3
sbb
test
cltd
sub
cmovg
call
andb
rcrl
data16
mov
jmp
inc
fmull
repnz
jmp
jmp
fdivrp
and
mov
sbbl
push
add
or
add
data16
jo
or
or
mov
nop
sub
fcoms
sbb
pop
sub
xorl
orl
cltd
push
cmc
fistps
test
jle
sub
in
push
aas
ss
push
bound
jmp
rorl
inc
dec
out
sbb
inc
orb
xchg
xor
dec
out
inc
add
ja
daa
ljmp
sbb
cs
adc
xchg
and
mov
cltd
push
dec
pop
push
loopne
or
and
sbb
push
insl
ficoms
lods
cmpsl
jnp
cmc
dec
dec
out
push
mov
jbe
and
cmp
mov
cmc
jno
cmp
std
ret
icebp
dec
ret
test
mov
stos
jae
je
sub
add
and
mov
push
mov
sbb
sub
xchg
loope
mov
add
xorb
jle
jo
ljmp
cmovg
cmp
fisttpll
icebp
jo
cmpb
imul
aam
sbb
sub
xchg
loope
aam
repz
add
shrl
stc
push
test
in
cmpsl
xchg
stos
sub
and
inc
lcall
add
test
subb
adc
sub
in
mov
stos
mov
mov
popf
out
jp
rcll
stc
mov
push
mov
dec
lret
inc
cvtps2pd
out
cmc
outsl
mov
pop
mov
and
sub
decl
pushf
mov
ja
and
mov
jb
dec
mov
inc
and
mov
fisttps
add
test
push
sub
test
mov
xor
mov
lods
imul
add
aaa
stc
push
dec
lcall
repz
in
mov
lods
cltd
push
cmc
fistps
jle
roll
push
inc
jo
jbe
cmp
pop
dec
or
jmp
mov
mov
loop
add
stos
cltd
sub
adc
or
bound
xchg
loope
pop
cld
repz
loopne
cs
outsb
or
add
push
in
pop
pop
int
repnz
je
sub
inc
call
mov
fdiv
out
ret
push
sbb
sub
dec
jbe
cld
jo
ficoml
mov
jle
mov
sub
cmovg
cmp
fisttpll
jae
jnp
mov
sub
cmp
or
bound
xchg
loope
or
repz
add
roll
aas
cmp
stc
push
mov
sub
or
in
inc
sub
inc
pop
movsb
aad
inc
lods
cmpsl
push
xor
out
sub
movsb
out
push
xor
arpl
mov
mov
add
adc
fcomip
fisttpl
and
pop
and
mov
fcomps
adc
and
cltd
bound
and
ret
adc
aaa
xchg
inc
popf
je
push
into
push
and
add
popf
cmpsb
arpl
hlt
mov
je
imul
bnd
cltd
adc
repnz
daa
loopne
and
ds
xor
push
push
mov
xchg
xchg
and
add
dec
inc
dec
scas
push
and
add
les
sbb
sbb
sub
inc
in
add
add
in
je
adc
mov
inc
loope
aam
aas
arpl
sub
or
mov
sbb
scas
xchg
fs
and
fwait
mov
xchg
rorl
push
aas
mov
pop
daa
jle
test
fwait
nop
cmp
test
clc
push
je
int3
test
lods
scas
cltd
sub
cmovg
sub
fdivrl
fdivr
push
pusha
push
inc
cltd
add
hlt
mov
lcall
fwait
imul
sbb
cmc
mov
inc
mov
cltd
sub
xchg
loopne
fs
test
test
imul
cmpb
pop
ds
sub
xor
mov
dec
cmp
push
mov
add
enter
push
imulb
cwtl
adc
mov
je
cmpb
jle
xchg
cltd
sub
std
pop
pop
int
repnz
or
sbb
pop
xchg
xchg
test
out
inc
add
dec
movb
roll
xor
test
jo
push
xlat
clc
adc
and
dec
pslld
xchg
jmp
fdivrp
and
mov
push
fistpl
std
in
lods
pop
cltd
out
divb
push
push
mov
nop
orb
xor
xchg
push
xlat
loopne
jmp
inc
fmull
bnd
loope
cmpsl
fdivrp
and
xor
push
ficompl
std
aam
pop
cltd
out
divb
push
push
mov
sub
fdivr
pop
test
jle
popf
cmpsb
arpl
hlt
mov
imul
push
fwait
repnz
movsb
lea
mov
inc
cmpsl
jns
imul
jbe
xor
or
les
mov
mov
xor
cmp
in
test
pusha
or
dec
sbb
adc
dec
aad
and
cld
outsb
sub
mov
lahf
aaa
js
mov
cmp
and
sub
add
xor
mov
push
js
sbb
ror
mov
jecxz
add
xchg
mov
pop
stc
or
sar
or
hlt
sub
adcb
andb
dec
mov
loop
cmp
push
push
pusha
roll
xchg
jp
clc
ljmp
cmpsl
push
push
inc
repnz
loope
aaa
int
call
scas
ficoml
dec
movsl
clc
jecxz
shlb
lret
dec
into
iret
sub
iret
lcall
sub
pop
pop
aad
insb
daa
inc
inc
inc
loope
aam
aas
push
mov
loopne
in
pop
mov
and
sbb
cmp
sahf
add
movsb
popa
cli
mov
je
pop
repnz
or
lret
lcall
test
je
inc
lock
push
jno
push
push
add
nop
rorb
mov
mov
nop
ret
pushf
enter
xchg
mov
clc
decl
pop
popa
push
dec
fwait
sbb
loop
xchg
std
and
fwait
jno
push
add
jmp
xor
sub
faddl
test
pushf
hlt
mov
pusha
cld
repz
pop
cli
adc
xchg
adc
lods
push
dec
fdivs
movl
je
aam
jl
push
lcall
xchg
scas
insb
movsb
mov
add
xor
movsl
je
jbe
dec
push
arpl
jb
enter
iret
mov
clc
ljmp
int3
inc
mov
or
in
mov
cmp
xor
orl
cmp
push
mov
es
inc
lods
cmpsl
push
xor
out
sub
cwtl
out
imul
jle
cmpsl
cs
adc
add
and
std
pop
pop
int
hlt
adc
dec
or
stos
sub
inc
das
pushf
jp
add
sub
or
dec
mov
xor
movsl
ret
test
mov
add
sub
pop
jmp
fs
or
add
and
mov
mov
jle
mov
shrb
and
xchg
adc
dec
sub
lods
adc
and
fwait
jno
push
push
mov
cmpsb
mov
push
mov
dec
pop
xchg
stos
xchg
nop
pop
fnstsw
jecxz
sbb
out
adc
xlat
add
call
stc
pop
jbe
inc
or
repnz
rcr
sub
xchg
sub
outsb
jmp
mov
mov
aaa
stc
imul
inc
xlat
cltd
adc
repnz
mov
lret
and
insb
pop
js
in
repnz
popa
add
mov
sbb
repnz
jl
sar
push
xor
add
data16
mov
int3
mov
xchg
push
jle
cmp
fldenv
fwait
test
inc
jge
pop
inc
test
jle
cmp
push
mov
das
add
pop
daa
lret
lds
sub
and
dec
js
push
les
xchg
push
movsl
cli
sahf
fwait
xor
mov
jle
pushf
test
cmp
das
xor
stos
inc
sub
fistl
fistpll
lret
out
loope
cmp
push
outsl
movsl
les
rorl
fmuls
rcrb
jp
xchg
shll
adc
cld
sub
cmp
jg
mov
mov
jl
orb
mov
sar
push
mov
pop
pop
pop
cmpsb
mov
dec
xor
cwtl
xor
addr16
fwait
sub
jno
outsl
shlb
push
cwtl
ss
xor
add
test
adcb
stc
fucomip
cmp
pusha
cld
repz
aam
fistps
lock
mov
mov
fmulp
or
jl
sub
inc
imul
movsb
lods
loope
mov
push
inc
jo
xor
jg
push
push
mov
xor
push
jbe
cwtl
add
add
int
xor
or
test
pusha
and
jnp
mov
loop
out
in
cltd
fcomip
scas
insl
pop
in
sub
out
je
jb
jle
loopne
ljmp
cmovg
cmp
fisttpll
jno
rolb
aaa
cmc
imul
sub
inc
mov
lret
les
mov
rorb
sub
xor
push
cmp
dec
sub
or
pop
iret
jne
inc
lods
cmpsl
push
xor
out
sub
mov
bound
cmpsl
cs
ds
add
add
std
pop
pop
int
repnz
sub
inc
mov
je
cmc
cltd
jle
dec
cs
sub
dec
jbe
int3
jne
adc
repnz
or
cmc
jmp
inc
pop
imul
jb
rolb
sub
inc
orb
cmc
loop
test
sub
mov
in
and
xor
bound
lock
in
and
cmp
adc
orl
cmp
int3
or
fsubs
jnp
or
aam
inc
insb
pop
xchg
mov
fcmove
sbbl
dec
movsb
xchg
or
push
mov
fiaddl
push
dec
dec
jl
and
cld
pop
xchg
fdivr
push
sbbb
sahf
jae
dec
sahf
movsb
repnz
movsb
je
pop
xchg
mov
xor
aas
ret
push
icebp
lds
cmpb
hlt
adc
aaa
sbb
sub
mov
into
xor
adc
rclb
fs
iret
mov
xchg
fsubrs
test
sti
inc
sub
push
outsl
out
and
add
xor
or
and
and
push
xlat
hlt
xchg
sub
xchg
dec
xchg
xchg
or
pop
aad
cld
push
in
imul
add
xor
pop
mov
cmpsl
sbb
ret
data16
lock
es
cmp
mov
das
clc
mov
cmp
pop
outsl
inc
xchg
out
clc
xchg
adc
pusha
and
cwtl
pop
pop
popa
push
sti
jl
xchg
push
rcrb
jo
int3
jg
sar
aad
adcl
fildll
lea
add
mov
xor
test
inc
fs
es
push
and
sub
or
add
cmpsb
dec
jo
adc
mov
std
and
cld
repz
sar
xchg
sbb
or
fistps
fsubrs
push
jno
mov
dec
rcrl
push
dec
out
data16
ljmp
mov
lds
push
mov
lea
push
inc
dec
cmpsb
aas
mov
mov
ljmp
add
loopne
dec
jno
stos
fiaddl
in
adc
cli
ror
mov
hlt
xor
inc
mov
shll
mov
je
pop
in
pop
jo
pop
dec
popa
and
inc
fmull
iret
xor
jecxz
addr16
fs
scas
mov
pop
stos
mov
daa
adc
ljmp
push
test
jmp
jb
mov
sbb
lret
pushf
dec
cmc
fidivrs
ret
in
adc
enter
in
stc
adc
cld
mov
xchg
sti
cmpsl
loopne
ss
push
incb
adc
xor
inc
dec
sti
imul
iret
das
jnp
dec
pop
bound
add
loope
xchg
into
xchg
dec
push
in
cmpsl
fdivr
shll
loop
pop
jae
inc
cmp
test
loope
or
out
adc
inc
or
movsl
sub
adcb
xor
bound
sub
cmp
and
sti
mov
ret
pop
ss
adc
stos
lret
clc
cli
cmp
xorl
lods
loope
cmpsb
or
mov
mov
sbb
mov
cltd
mov
pop
jno
adc
dec
repnz
ret
test
jnp
push
aam
in
enter
or
mov
sar
mov
es
fistpll
ret
jne
hlt
adc
push
cld
clc
cmc
xchg
dec
inc
pop
outsb
cmp
bound
adc
ret
fcomi
sahf
movsb
pop
les
in
nop
loope
hlt
imul
push
shl
pop
fs
adc
in
push
xchg
pop
repz
mov
push
cmc
mov
xchg
mov
sbb
sub
fnstenv
add
fs
inc
pop
jl
in
fdivrs
sbb
loop
mov
mov
nop
push
xchg
push
int3
aam
jmp
repz
outsb
xor
repnz
std
or
push
dec
mov
pop
pop
jnp
outsb
pop
push
add
adc
movsb
repz
lock
push
jno
push
xor
scas
call
add
pop
fisubrs
cmc
shr
xchg
aaa
lcall
loop
add
fwait
andb
arpl
outsl
or
adc
xchg
and
add
push
mov
push
outsb
xor
adc
mov
fldenv
lcall
adc
shrb
jo,pt
dec
jnp
cmc
and
fistl
sub
scas
test
outsb
add
imul
cltd
mov
es
in
loopne
mov
les
or
or
repz
lock
pop
jno
push
out
and
mov
lods
mov
fisubrs
cmc
adc
xchg
aaa
inc
sbb
sub
sub
movsb
add
mov
cltd
push
les
or
dec
lcall
in
mov
ret
xchg
addr16
push
push
jnp
divb
inc
lods
cmpsl
push
xor
out
sub
vpmulhuw
sub
xchg
adc
pop
cs
bound
sti
out
ret
adcl
mov
mov
xlat
fisttpll
sub
aaa
loopne
xchg
rorb
andb
dec
mov
jge
fsubp
jge
xlat
sub
and
inc
mov
xchg
sbb
mov
pop
fs
adc
push
cmp
jmp
stc
pop
outsb
mov
adc
out
cmc
aaa
push
adc
ret
fcomi
push
or
inc
push
mov
movb
in
rep
dec
or
xor
inc
fsts
popa
xchg
xor
les
mov
or
lcall
cmpsl
xchg
ja
in
xchg
mov
ret
dec
cmpsl
push
fdivr
push
loopne
rorb
rcrb
inc
xor
pop
inc
sub
movsl
addr16
mov
jl
jnp
cmp
lods
pop
cltd
bound
push
pusha
dec
std
ret
push
cmc
fistl
xlat
sub
cld
xlat
add
mov
dec
xor
jno
sub
xchg
dec
in
repz
cmp
sbb
dec
sbb
and
mov
mov
push
aaa
mov
cltd
aas
je
mov
cmc
rol
xchg
cli
repz
sub
inc
xchg
add
sub
pop
adc
xorl
shrb
cmp
and
dec
mov
xorb
pop
mov
aaa
movsb
dec
cltd
push
sbb
inc
xor
sbb
sti
out
ret
adcl
mov
js
xlat
fisttpll
mov
xchg
inc
popa
mov
mov
jnp
mov
sub
pop
xor
mov
pusha
mov
sbb
mov
sub
sbb
jnp
cltd
shll
sarb
imul
jmp
adcb
pusha
fcoml
and
dec
mov
jge
fidivs
or
add
rcrl
jae
mov
pop
jb
sub
xlat
and
in
push
es
andb
dec
mov
jge
fidivs
cmpsl
jg
adc
push
cmp
movsb
fs
icebp
loope
addb
rcrl
adc
pop
shl
sub
loopne
and
insb
xor
std
or
scas
mov
lods
sub
ja
test
mov
outsl
ja
and
mov
cltd
push
push
orb
cmc
sbb
inc
fldt
inc
add
push
enter
cmp
jle
in
ljmp
jmp
inc
fmull
repnz
loope
cmpsb
push
mov
nop
mov
mov
enter
out
cmc
outsl
mov
lret
cmp
sub
cmp
jbe
in
call
sub
dec
adc
xorl
or
cmp
and
sti
mov
ret
pop
cmp
push
aaa
xor
cltd
repnz
jle
mov
ljmp
jmp
inc
fmull
repnz
pop
loope
cmpsb
cmp
mov
mov
jnp
mov
dec
pop
enter
xchg
dec
insb
lcall
pop
sub
inc
sbbb
pop
sub
dec
inc
jnp
cmpsb
jae
push
push
cmc
inc
mov
jne
in
or
push
push
mov
out
enter
cmc
das
push
decb
and
and
cmc
hlt
daa
add
inc
sub
and
lcall
sub
xor
lret
addr16
mov
or
jnp
pop
out
enter
push
cmc
outsb
mov
jae
mov
scas
int
dec
mov
mov
mov
mov
or
bound
insb
jmp
mov
mov
dec
andb
add
sahf
push
hlt
dec
xchg
sbb
sub
into
jae
daa
lret
cltd
das
adc
je
cmc
andb
jnp
or
push
jnp
in
cmpsl
mov
xor
outsb
ret
insl
imul
dec
jnp
fwait
mov
and
ja
test
mov
outsl
ja
and
mov
cltd
push
push
orb
cmc
hlt
push
inc
sub
sbb
sub
inc
in
xor
push
pop
enter
adc
push
cmp
icebp
loope
addb
outsb
leave
mov
cmpsb
push
stos
inc
add
lods
mov
xor
cwtl
out
sti
pop
xchg
enter
xchg
popa
push
cmp
mov
cltd
push
int3
cmpsl
cs
inc
or
dec
lcall
in
mov
ret
xchg
bound
push
push
jnp
enter
enter
xchg
and
out
and
xor
mov
add
scas
insb
movsb
mov
loope
push
test
outsb
stc
pop
push
adc
subb
pusha
dec
std
fcomps
and
push
test
es
jo
push
clc
fwait
aam
aam
lods
stc
xchg
gs
xchg
mov
iret
fistpll
ret
jne
hlt
adc
xor
andl
or
bound
xchg
loope
test
add
pop
cmc
dec
push
push
jnp
loopne
sbb
mov
mov
jmp
jge
dec
sbbb
rclb
mov
cld
mov
sbb
sub
xchg
loopne
stc
pop
bound
lret
dec
mov
loopne
xchg
dec
out
push
imulb
mov
ret
xchg
fwait
gs
push
rolb
adc
dec
push
int
mov
mov
out
not
je
mov
stc
jbe
push
in
fidivrl
mov
pusha
jae
test
fcomip
fistl
inc
jl
xorl
lock
xlat
out
sub
adc
xchg
inc
aaa
sbb
sub
mov
inc
clc
shlb
js
nop
push
repnz
jo,pt
dec
js
cmc
and
fistl
sub
out
lds
test
bound
imul
or
push
jbe
push
inc
jo
mov
aam
mov
ljmp
fmull
repnz
cmpsl
fdivrp
xor
sahf
sub
ss
pop
add
cmp
jae
lahf
aaa
js
arpl
popf
je
pop
scas
cmp
pop
xor
jg
inc
xchg
and
add
dec
inc
dec
mov
or
je
notb
sbb
sub
fucom
hlt
orb
pusha
jo
or
push
push
mov
or
bound
insb
jmp
fdivrs
shr
mov
loop
adc
stos
cltd
sub
add
or
bound
xchg
loope
push
movsb
pop
cmp
mov
rclb
xchg
mov
fcmove
ja
dec
or
or
js
sub
mov
mov
js
mov
dec
shrb
jmp
xchg
mov
scas
in
sar
pop
ds
ret
xor
out
xchg
je
dec
jbe
inc
push
lods
xchg
ja
loopne
xor
or
mov
mov
call
bound
jno
push
popl
sub
std
mov
fidivs
int3
in
negb
loopne
pop
push
mov
out
test
lea
aas
sub
fcoms
jmp
and
dec
pslld
dec
loope
cmpsb
push
cmp
mov
mov
enter
out
imulb
push
test
xor
jecxz
xchg
fisubrl
faddl
addr16
fwait
sub
xor
or
fmuls
jg
lods
xchg
jge,pt
int3
mov
sub
out
and
test
mov
dec
fwait
sbb
jnp
or
les
dec
mov
out
lds
xlat
mov
mov
neg
add
pop
aad
push
xchg
or
xor
fistpl
sub
pop
test
cmpsl
push
test
cmp
and
add
inc
mov
gs
fcoms
sub
cmpsb
dec
push
orb
cmp
je
in
repz
pop
inc
or
cmp
arpl
dec
sbb
and
mov
mov
clc
xor
jo
scas
lock
lcall
add
scas
insb
movsb
mov
add
adc
dec
ret
nop
or
fcoml
hlt
cmp
and
dec
in
add
test
ljmp
in
adc
sti
cld
inc
jl
aam
inc
sbb
xchg
mov
fcmove
dec
pop
dec
or
or
movsb
pop
sub
mov
mov
jle
mov
outsb
pop
xor
jb
sub
fimull
mov
lock
push
jno
push
xor
scas
call
iret
dec
lret
repnz
mov
inc
push
mov
jle
mov
mov
xchg
xor
dec
push
scas
and
adc
push
add
add
mov
lock
test
xchg
jbe
and
sub
out
jnp
mov
rcl
add
out
push
jmp
stc
ss
out
add
stc
pop
pop
mov
jle
xor
imul
xchg
push
and
or
push
mov
or
push
or
mov
ljmp
mov
sub
rcl
push
push
jae
mov
cmp
mov
popa
stos
mov
or
and
hlt
inc
add
mov
shll
adc
push
adc
cmp
call
or
test
push
jle
test
jge
cmp
jno,pt
dec
andb
add
fneni(8087
enter
push
mov
stc
lds
loope
mov
adc
add
sub
xchg
ret
insb
jmp
or
repnz
and
dec
andb
add
fcomi
add
stos
test
dec
out
inc
add
push
lds
mov
cltd
aas
pop
lret
mov
je
aam
movsb
stc
xchg
gs
loope
aam
push
sbb
xchg
bound
mov
int
add
mov
xor
or
push
sub
xchg
loope
mov
std
in
test
hlt
roll
and
jmp
xor
dec
dec
mov
daa
push
sbb
jle
sahf
jo
hlt
or
push
push
mov
add
enter
push
cmc
outsb
mov
jae
mov
mov
mov
mov
mov
or
bound
insb
jmp
dec
cmp
in
and
dec
andb
add
dec
xor
dec
xchg
sbb
sub
into
jae
cmpsl
inc
imul
das
adc
je
cmc
andb
jnp
or
push
inc
jae
cmpsl
mov
xor
outsb
ret
fmuls
xchg
pusha
push
and
fwait
mov
adc
sub
mov
mov
push
add
add
and
pop
insb
or
in
jmp
pop
push
repz
pop
or
mov
ret
push
dec
and
cmc
dec
jp
cltd
adc
xchg
fsubs
in
mov
test
fistpll
ret
push
in
fmuls
jnp
data16
enter
push
cmc
outsb
mov
adc
xor
mov
push
aas
inc
ljmp
outsl
ja
and
mov
cltd
push
dec
pop
rorl
aas
cmp
cltd
scas
cmc
push
scas
loope
jb
enter
xchg
and
xchg
movsl
shlb
les
cltd
cmp
out
ds
mov
dec
ret
adcl
mov
sub
dec
andb
pop
cmpsl
les
in
sbb
sub
inc
in
add
cmpsl
mov
add
int
mov
mov
lock
hlt
shl
add
testb
ja
clc
out
cwtl
pop
push
xlat
mov
lock
xor
scas
mov
mov
pop
mov
dec
sbb
imul
call
sbb
dec
mov
mov
loope
ret
push
jmp
insb
mov
aas
fsubl
dec
mov
cmp
cli
popa
sbb
mov
inc
xchg
sub
popa
in
loope
pop
mov
fucomip
push
xlat
push
mov
loopne
out
sti
insl
lods
cmc
popf
icebp
cmpsb
push
pop
dec
loop
fnsave
mov
jbe
in
sbb
mov
add
ss
xor
aas
or
pop
das
rorl
add
dec
int
jmp
jp
dec
arpl
jnp
sarl
out
jne
dec
stos
mov
jo
and
cli
mov
adc
jl
nop
xchg
or
les
push
lods
adc
inc
adc
outsb
inc
dec
cmp
clc
sub
fwait
cs
hlt
dec
insb
xor
cmp
aaa
lds
push
hlt
stos
fdivs
sub
xchg
jge
int3
in
xlat
into
push
push
idivl
xchg
imul
cmpsl
arpl
push
popl
popa
mov
leave
adc
mov
insl
fidivs
into
sub
enter
add
out
sbb
jb
pushf
mov
dec
scas
loope
sub
aam
and
add
cld
cmp
mov
aam
sti
cmp
mov
jp
add
xchg
icebp
add
aad
sub
ret
in
ds
or
xchg
dec
in
dec
jl
fwait
pop
jnp
push
and
dec
rcll
lcall
mov
sbb
out
add
dec
sbb
ja
cmp
adc
js
mulb
sub
dec
aam
arpl
xor
cld
sbb
lods
and
ret
lock
fnstsw
push
mov
cltd
mov
out
loope
movntps
xchg
es
lcall
or
push
les
cmpsl
fisubl
xchg
ret
push
mov
mov
imul
or
jle
sub
cli
lcall
rolb
add
pop
insb
loop
in
int3
stos
push
lods
cmp
cmpsb
hlt
nop
mov
cmp
push
jmp
mov
out
mov
pop
jg
mov
mov
popf
cli
addl
aas
in
loopne
lret
in
dec
and
addr16
add
mov
pusha
fwait
xchg
fst
test
mov
andb
dec
sub
clc
add
jl
std
push
and
push
mov
add
xlat
lods
cmp
jns
loop
pop
push
jle
imul
sub
cmp
sahf
sub
add
scas
movsb
push
je
xchg
pop
adc
in
lea
jne
aas
fwait
scas
incl
jle
lods
sbb
fisubl
mov
in
movsl
aas
gs
inc
daa
sub
sarb
mov
jo
icebp
mov
xchg
mov
push
lock
dec
pop
xchg
popa
sub
test
insl
xchg
daa
ss
xor
enter
push
push
int3
pop
sub
test
lcall
dec
test
arpl
jnp
jmp
xchg
rcll
mov
cmp
mov
jp
movsl
mov
add
mov
mov
pop
addr16
ss
data16
mov
inc
das
pop
lret
mov
sub
mov
mov
push
ss
mov
xchg
vpcmpeqd
je
cmp
loop
xor
int3
add
xor
pop
push
or
cltd
aam
sbbl
icebp
into
or
push
adc
xchg
ret
lock
repz
push
pushf
cltd
mov
fidivrs
and
jnp
ror
imul
test
fdivr
push
xor
mov
mov
or
xor
sti
push
pop
lret
push
pop
push
dec
add
inc
push
pushf
jbe
xor
mov
cmp
pop
add
ds
mov
stos
inc
sub
mov
mov
push
add
test
dec
mov
inc
rcrb
and
aam
repnz
aam
dec
lcall
aam
xor
or
aas
push
andb
or
dec
inc
pop
xchg
push
mov
inc
jmp
outsb
dec
sbb
mov
xor
fnsave
scas
xor
loop
je
lret
aaa
lahf
jmp
lret
lods
sub
push
pushf
add
jno
subb
pop
push
xor
outsl
mov
mov
rorb
es
repnz
or
jl
pop
jp
orl
shrb
shlb
xchg
mov
outsl
pusha
in
sti
xor
daa
sub
and
xchg
lahf
adc
jmp
pop
ljmp
inc
mov
scas
imul
movsb
bound
test
jg
pop
jb
loopne
mov
push
js
sub
into
lret
aaa
cs
push
lea
ljmp
cmp
nop
push
ljmp
fsub
or
xchg
aam
loop
or
sbb
pop
outsl
lods
and
mov
adc
loope
cmpsb
insb
mov
xchg
xchg
cs
dec
dec
dec
imul
enter
mov
mov
clc
pop
jbe
cmpb
push
stos
xchg
push
outsl
aad
cli
add
ds
adc
add
ja
or
je
and
cltd
mov
lods
sbb
dec
jecxz
jp
mov
je
decl
cmp
mov
pop
adc
push
dec
sbb
push
sub
sbb
pushf
dec
sbb
pop
movsl
mov
shrl
xchg
sub
pop
xchg
inc
arpl
icebp
in
mov
sbb
and
sti
out
xchg
mov
xchg
sub
gs
adc
in
sub
lcall
xlat
inc
inc
jp
mov
mov
sub
lahf
cwtl
jbe
fadds
jb
fnstsw
mov
enter
std
scas
inc
push
xchg
push
jno
sbb
mov
push
or
push
xor
cltd
push
cs
add
lods
adc
cld
cmp
imul
sub
aam
pop
sub
das
or
icebp
loop
popa
loopne
cmc
pop
push
push
es
mul
fisubrl
repz
je
cs
fwait
inc
stc
stos
sub
or
movsw
shrb
out
pushf
mov
cmpsl
inc
insb
lds
fcompl
aam
lcall
in
in
repz
xchg
and
in
jg
sub
ucomiss
test
out
xchg
out
inc
jmp
int3
or
mov
jb
out
jmp
lea
in
pusha
pop
andb
les
push
add
jmp
test
lds
mov
dec
iret
mov
loop
pop
adc
cld
pop
lcall
jo
adc
iret
andb
cwtl
shlb
mov
jle
in
movsb
xchg
inc
mov
push
push
jbe
push
inc
jno
push
inc
jbe
push
inc
jno
sbb
ret
xchg
sbb
shr
or
xor
push
outsl
add
popa
xchg
xor
arpl
xchg
jmp
push
adc
movsb
fmuls
call
mov
insb
mov
fs
in
or
pop
adc
push
xchg
sbb
shr
repnz
jp
sahf
sub
mov
xor
and
ds
or
dec
in
cmpsb
fnsave
jo
cmpsb
mov
pop
mov
pshufw
pop
push
mov
pop
mov
hlt
cmc
subb
bound
int
hlt
dec
push
lock
in
cwtl
sbb
popa
and
out
inc
mov
ljmp
xchg
enter
jp
fnstcw
pushf
mov
mov
jbe
sub
xchg
scas
inc
mov
ljmp
push
daa
xor
and
xchg
fiadds
fcoms
cmp
data16
fsubl
repz
jle
dec
fdivrl
mov
add
dec
fwait
clc
repnz
cltd
insb
hlt
mov
push
mov
icebp
xor
lcall
rcll
pop
aaa
xchg
mov
sub
loop
fcomps
pop
mov
mov
pop
rorl
push
repnz
cmp
sbb
cs
xor
pop
mov
cmp
fs
pop
hlt
adc
movsb
mov
jnp
pop
dec
sbb
dec
adc
shl
add
cltd
js
push
dec
mov
dec
push
sub
adc
sub
dec
shrb
pop
movsb
xlat
nop
cs
and
jl
mov
enter
cmp
orl
mov
fisubs
pop
adc
rcrb
cli
sub
movsb
push
std
stos
out
push
mov
mov
adc
or
call
fs
dec
push
into
inc
jne
outsl
and
insb
mov
in
mov
pusha
adc
ds
xor
adcb
lock
jbe
test
pop
adcb
in
in
icebp
lods
pushl
cmp
sub
daa
or
jecxz
fidivrs
in
lock
in
nop
bound
in
cwtl
aas
xchg
sub
jb
push
test
out
mov
bound
pop
mov
ljmp
mov
arpl
popf
pop
arpl
pushf
cmp
rorl
xchg
popf
pop
add
dec
jp
cltd
mov
mov
cltd
adc
cltd
adc
in
cmp
stos
push
mov
push
sbb
jp
pushf
mov
inc
icebp
lret
mov
mov
shll
aam
mov
hlt
js
jbe
cld
adc
or
jl
adc
push
jbe
push
in
movsb
shlb
js
dec
shrb
push
jg
adc
sahf
sub
mov
adc
mov
rcrl
cmp
mov
int3
arpl
fwait
aam
out
pop
cld
repz
pushaw
cmp
testl
add
jp
adcl
jge
mov
call
sub
push
cmpsl
jg
and
mov
push
mov
jle
and
es
popl
jbe
shr
push
cwtl
in
sbb
pop
add
xchg
and
andb
stos
mov
xor
mov
sub
mov
out
fsubs
lret
mov
dec
mov
sub
ljmp
mov
jl
mov
cmp
jl
cmp
lcall
mov
ljmp
push
adc
sub
std
xchg
jecxz
stos
pop
cmp
in
push
jb
push
sarb
fwait
lods
aam
pop
bound
jno
sbb
cmpsl
lea
inc
dec
aam
cmp
sub
loopne
cld
fldenv
jl
sbb
and
jmp
les
iret
ljmp
mov
fstpl
mov
mov
es
jbe
push
push
jbe
push
in
adc
xor
mov
mov
add
or
stos
mov
sub
mov
adc
mov
rcrl
adc
mov
adc
pop
adc
mov
sbb
sbb
mov
add
mov
andb
or
mov
pop
mov
or
mov
dec
call
adc
js
mov
pop
mov
ljmp
mov
arpl
arpl
jmp
mov
mov
push
pop
cli
mov
dec
fwait
sub
pushf
nop
ret
adc
pop
mov
pminsw
mov
sub
mov
adc
mov
aas
cmp
push
pop
mov
jp
pushf
mov
mov
or
je
inc
xchg
xor
enter
push
add
mov
jl
lret
fidivrs
mov
xor
lcall
push
cli
fdivrs
sub
xchg
pop
mov
lret
pop
fst
es
sbb
xchg
pop
cmp
push
test
jbe
cmp
nop
adc
movsb
adc
iret
push
imul
sbb
out
jl
add
mov
adc
aas
adc
test
push
into
xor
lcall
mov
ljmp
and
mov
aaa
dec
pop
sbb
cwtl
mov
sbb
jp
pushf
call
out
es
in
jl
jmp
cmp
jbe
push
push
jbe
push
in
loopne
xor
test
shrb
or
fsubrs
mov
sub
mov
adc
mov
rcrl
mov
and
adc
inc
lock
int3
lods
adc
push
dec
push
lea
adc
lea
test
fsubrp
mov
sti
inc
sub
lahf
pop
lods
loop
xor
pop
icebp
mov
mov
aam
in
inc
jns
xor
push
out
rcr
call
sub
mov
shlb
xchg
pop
and
pop
xorl
cli
jmp
sbb
xchg
and
pop
movsb
rcr
lds
adc
out
inc
and
loopne
lcall
dec
lret
int
insb
mov
sbb
cmp
loop
dec
jo
xchg
xchg
cmp
pop
jo
mov
loopne
cli
cltd
adc
push
mov
pop
out
fidivs
dec
enter
fldenv
in
pushf
cld
push
scas
aam
mov
cld
jb
jle
xor
es
inc
lods
jbe
lods
lahf
inc
fnsave
pop
pop
cltd
jo
inc
adc
sbb
int
test
push
adc
dec
mov
sbb
pop
and
xchg
stos
inc
imul
push
pop
mov
mov
or
inc
setl
inc
mov
movsb
fldenv
mov
cmpsb
in
sbb
add
clc
or
inc
inc
fisttpll
cmpsl
mov
pusha
ret
inc
cmpsl
or
sbb
inc
mov
stc
pop
push
cld
in
mov
jmp
ss
repz
lahf
sub
and
out
mov
pop
call
shll
jo
pop
or
pop
fstpl
movsb
mov
jl
in
cmp
sti
leavew
xor
adc
std
jbe
xorl
dec
sub
fisttps
push
mov
js
rcrl
mov
xor
pushf
xor
inc
mov
pop
push
add
push
hlt
js
pop
mov
pop
push
in
scas
aas
fdivrl
scas
mov
shlb
mov
sub
xlat
mov
ljmp
pushf
mov
daa
inc
cmpsb
mov
inc
add
sub
pop
mov
out
adc
pop
jne
dec
mov
mov
push
outsb
test
leave
inc
xchg
call
sbbb
gs
sahf
push
movsb
arpl
dec
xchg
push
jle
pusha
or
imul
inc
mov
cs
xchg
rol
jp
cmp
outsl
mull
stos
fstpt
mov
mov
test
cmpsl
dec
rolb
pop
insl
or
jecxz
popfw
nop
movsl
xchg
int3
mov
mov
adc
aad
imul
enter
inc
mov
xchg
fistl
mov
inc
rclb
sub
sbb
sub
jns
arpl
addr16
ret
jae
dec
incl
mov
loope
ljmp
mov
mov
nop
mov
out
adc
add
shrb
sub
aad
jo
repnz
push
jb
imul
cmp
jmp
dec
mov
cmp
inc
sbb
xchg
repz
mov
loopne
je
xor
jb
sti
je
push
dec
xchg
sahf
out
outsl
in
mov
mov
adc
add
push
and
nop
dec
push
xchg
or
pop
sahf
lock
psubd
imul
pushf
push
cmpsb
sti
mov
jno
dec
pop
jp
fsubrl
add
push
fs
cli
rcll
cltd
push
inc
push
scas
or
mov
stc
cmp
scas
jne
ja
aad
jo
repnz
outsb
sub
std
jl
mov
test
test
push
popa
ficoml
mov
and
xchg
loop
and
scas
shlb
gs
fiadds
add
pop
pop
or
fs
push
fidivrl
push
mov
mov
sbb
sub
into
push
stc
adc
rclb
sahf
mov
movsl
movsb
scas
xchg
out
or
sub
mov
test
or
inc
dec
xor
lds
adc
pop
out
mov
in
popa
into
adc
ljmp
sub
mov
mov
pop
jae
mov
push
mov
pop
jns
xchg
lret
mov
pop
mov
cld
lcall
lret
gs
andb
fistpll
repz
loopne
enter
push
cmp
mov
push
sbb
mov
insb
jo
push
adc
add
fcoml
pop
sub
mov
rcrl
in
mov
mull
mov
dec
mov
or
loop
hlt
pop
popl
mov
jae
pop
ret
lret
add
cmp
stos
mov
dec
or
inc
adcb
xchg
inc
int3
xor
jl
mov
cmp
add
test
xor
dec
xchg
fimuls
into
fistl
shl
aas
cmpsl
mov
cmp
xchg
sbb
pop
ds
daa
jmp
jo
pop
cmp
xor
std
aad
sbb
in
repnz
sub
xor
lock
adcl
pop
dec
in
mov
int3
or
jge
shlb
mov
call
decb
cmp
push
ds
inc
inc
adc
lock
lods
adc
and
lock
sub
mov
sub
mov
out
test
movsl
incl
mov
nop
std
mov
jecxz
xor
mov
dec
in
adc
xchg
fs
sub
add
push
nop
test
and
aas
cs
dec
cmpsb
mov
push
roll
mov
loope
popa
cwtl
lret
mov
das
dec
jne
sub
dec
sub
stos
push
and
das
push
adc
pop
push
bound
jle
mov
mov
xor
repz
ds
or
xor
mov
shll
dec
inc
add
in
xchg
shlb
add
and
xor
test
pop
adc
std
mov
popl
in
sub
lahf
out
inc
in
add
mov
test
mov
adc
inc
data16
jl
les
push
les
inc
repnz
dec
imul
mov
popa
inc
mov
xchg
dec
mov
loope
test
pop
daa
xor
rcrb
leave
std
cltd
and
xor
inc
xlat
dec
je
mov
sti
movsb
xchg
add
mov
std
and
fwait
jno
insb
pushl
fimull
scas
jge
fsubs
sbb
ss
ret
push
fisubrl
sub
jbe
mov
hlt
hlt
pop
xchg
sar
or
jmp
jns
pop
scas
in
loope
test
or
ficoml
loop
sbb
inc
jbe
xlat
negb
add
movsl
cmp
stos
push
or
cmpsb
imul
mov
fsubr
sbb
and
test
ret
in
shll
hlt
inc
sub
and
xchg
inc
xor
mov
add
mov
pop
mov
stos
inc
push
or
sub
mov
rorl
adc
sub
cmp
frstor
stos
jl
into
sub
xor
pop
stos
adc
jne
fs
mov
jp
cltd
adc
inc
sub
push
jne
pop
cld
lods
out
sarl
sbb
add
hlt
mov
int
imul
mov
jnp
pusha
bound
pushf
pop
repnz
mov
and
mov
cmpsb
jecxz
dec
enter
popa
adc
adc
mov
test
sub
rorb
mov
movsl
neg
dec
and
into
ss
sub
sbb
push
or
mov
sar
mov
jge
aaa
movsl
bound
sarb
ja
mov
fstp
adc
mov
dec
sahf
or
inc
jmpw
std
and
fwait
jno
push
scas
mov
cmpsb
mov
in
sub
cwtl
out
pop
outsb
idivl
clc
push
movsb
nop
ss
sahf
cmp
inc
jmpw
std
and
fwait
jno
push
scas
mov
cmpsb
mov
in
sub
mov
sub
stos
sbb
sbb
or
jns
pushf
inc
test
ds
stc
sub
cmpsb
sub
mov
add
sub
pop
mov
les
mov
mov
ds
das
jle
data16
sbb
pop
scas
iret
fldl
int3
or
xor
xchg
mov
shll
popf
cmpsb
arpl
hlt
mov
lcall
filds
adcl
rcll
cwtl
mov
sbb
ficoms
mov
in
ret
movsb
loope
cmp
js
in
lret
jns
lds
sub
mov
imul
cltd
test
jge
imul
mov
adc
popf
adc
inc
sub
cmc
and
fistl
sub
js,pn
shl
fdivrl
cwtl
jge
sub
adc
jp
pop
mov
adc
sahf
lea
dec
out
or
stos
in
movsb
mov
loop
cs
fnstsw
or
rorb
rorb
repnz
push
dec
hlt
pop
dec
sbb
aas
clc
test
xchg
sub
or
sub
aam
ret
mov
jo
xor
mov
dec
xchg
mov
pushf
mov
add
jae
mov
mov
daa
push
sbb
das
mov
push
add
adc
ficoml
or
xor
in
mov
xor
inc
jo
loop
fdivs
cwtl
xchg
test
lret
les
bound
stos
shll
sub
int3
push
test
push
jbe
push
in
inc
push
push
mov
mov
daa
push
sbb
mov
dec
inc
adc
stos
jbe
into
adc
add
inc
mov
test
int3
aaa
jle
dec
adc
cmp
aam
stc
jo
rol
pop
les
xchg
bound
push
je
lcall
ficoms
fs
insl
dec
xlat
test
mov
out
dec
pop
inc
xor
ss
adc
jmp
and
mov
sub
outsb
shrb
test
in
jle
and
add
dec
or
loopne
in
add
pushf
inc
adc
mov
hlt
les
hlt
int3
dec
xchg
mov
push
fcoml
or
pop
cmp
in
push
inc
aad
and
fistl
sub
mov
les
jle
ds
fsub
pop
ljmp
cwtl
jge
pop
int3
je
pop
in
push
jo
xor
stc
push
or
xor
pop
es
or
movsl
sarl
push
adc
pushw
sbb
sbb
stos
mov
sbb
cltd
lods
imul
dec
aam
mov
ds
sub
out
ret
xor
sbbb
mov
sbb
mov
cmpsb
push
popa
pusha
adc
jno
lds
sub
cmp
fldcw
pop
aas
xlat
inc
clc
icebp
in
push
push
into
ret
adc
sub
pop
test
inc
cmpsl
sub
sbb
xchg
scas
insb
movsb
mov
add
es
repnz
movsl
sarl
push
and
pushw
sub
fsubs
mov
sbb
cltd
lods
imul
fst
mov
pusha
inc
sar
push
ljmp
sbb
insb
arpl
data16
fs
orb
mov
int
repnz
sub
mov
inc
jb
imul
push
int3
mov
pusha
fs
jb
fnstenv
or
add
add
jge
xor
sub
pop
push
inc
push
outsb
pop
mov
cld
cmp
pop
inc
adc
xor
sub
imul
inc
mov
and
fwait
jno
leavew
jno
pop
es
mov
popl
ficompl
pushf
addb
mov
mov
dec
pop
pop
in
in
mov
test
orl
les
repnz
jle
out
loope
lods
pop
sbb
test
jge
pop
jl
cmp
in
push
jo
dec
popa
or
push
in
jae
cmpsl
test
mov
movsl
call
dec
dec
jbe
outsb
or
jb
loopne
imul
mov
mov
xchg
jp
pop
push
adc
popa
mov
fs
lcall
in
mov
dec
push
jecxz
test
rorl
in
in
repnz
push
pop
in
push
jo
push
popa
or
push
loop
in
cmpsl
test
mov
jle
call
and
repnz
or
sbb
enter
mov
pop
xlat
movl
add
sub
pop
sub
xorl
fsub
add
rorl
push
xlat
xor
sarl
inc
jae
pop
mov
sub
aam
inc
lock
push
jno
push
in
jmp
sti
cmp
ja
mov
pop
nop
rcrl
inc
cs
pop
dec
add
cmpsl
mov
sbb
ljmp
ljmp
sti
loope
cmp
jb
or
cmp
pop
jno
or
mov
push
sbb
mov
movsl
rorb
dec
nop
dec
sub
xlat
and
pop
inc
shl
dec
cmp
in
adc
aas
mov
les
sti
ret
out
lock
mov
pop
fs
pop
insb
add
cmpsl
mov
sbb
ljmp
ljmp
mov
fs
lcall
je
sbb
out
mov
cwtl
shll
insb
sub
repnz
jmp
adc
xchg
out
frstor
adc
in
xor
fs
movsl
call
test
jbe
out
add
xchg
mov
push
fwait
sbbb
push
popa
pusha
adc
pop
xchg
jp
fsts
bound
stos
shll
sub
lret
mov
cmp
sub
cmp
mov
pop
sbb
sub
shl
mov
dec
xlat
test
mov
not
les
sub
sub
popf
je
call
xchg
les
pushf
ljmp
insb
mull
mov
movsl
add
dec
or
xor
cld
repz
sahf
cmp
aam
xadd
add
mov
mull
loope
loop
xor
imul
cmp
enter
push
ljmp
sub
lret
clc
std
out
jb
lds
les
aam
aas
repz
inc
pop
jne
cs
or
aaa
jbe
into
das
shrb
bound
in
cwtl
aas
jp
cmp
sbb
ljmp
ljmp
dec
jg
stos
ret
xor
test
clc
lret
push
xchg
adc
mov
push
sub
pushf
std
push
dec
jecxz
xlat
std
and
fwait
jno
push
dec
mov
cmpsb
mov
std
hlt
into
out
sub
dec
pslld
xchg
dec
in
sub
mov
sub
mov
adc
cmp
mov
pop
push
xor
jl
ljmp
stc
cs
or
fcompl
or
push
outsb
jge
xor
call
adc
fcompl
jecxz
rcl
loope
addb
pop
dec
cltd
pop
dec
xor
dec
dec
lods
cmpsl
sbb
xchg
xchg
les
cmp
adcl
sub
movsb
out
push
and
jl
xlat
cwtl
xchg
fcmovnb
add
call
push
into
addr16
loope
cmp
xchg
in
std
in
fidivs
push
scas
popf
push
imul
pop
imull
and
adcb
xchg
lds
addb
popa
adc
in
setae
lahf
inc
cmpsl
jle
out
pop
hlt
adc
pop
adc
js
in
pop
in
sub
pop
adc
sbb
mov
mov
mov
mov
daa
push
push
xchg
std
adc
out
sub
dec
nop
mov
or
lret
ret
sub
decl
mov
adc
mov
fwait
aam
aas
jns
inc
pop
jne
sbb
jle
ss
sub
aas
sahf
ds
mov
sbb
lcall
insb
dec
or
jmpw
jmp
jge
aaa
into
outsb
mov
pop
xor
shr
loop
pop
sub
ljmp
iret
daa
inc
sub
aad
and
fistl
sub
xor
jle
adc
test
pop
adc
jo
pop
lret
mov
sub
or
inc
mov
and
fwait
jno
push
inc
mov
cmpsb
mov
std
inc
into
out
sub
dec
pextrw
mov
mov
ljmp
decl
iret
daa
inc
sub
sahf
aad
and
fisttpl
sub
lods
push
inc
push
outsb
pop
inc
fdivr
pop
push
movsb
jp
cltd
mov
mov
mov
cltd
add
lcall
adc
clc
inc
fistpl
inc
clc
cli
test
test
jne
or
sub
mov
inc
dec
insl
jg
mov
lock
call
mov
pushf
ljmp
adc
sub
adc
xchg
lcall
inc
xor
ds
xchg
cwtl
roll
adc
jl
add
adc
fisttps
out
push
jo
cmp
xchg
inc
add
sub
sbb
daa
bound
xor
push
testl
sbb
bound
jb
push
inc
jo
add
cmp
cwtl
xchg
adc
inc
dec
adc
sub
scas
adc
iret
sbb
stos
hlt
fmull
mov
push
mov
js
mov
push
sub
cmovg
cmp
aam
fidivl
sub
push
insb
xor
pop
mov
pop
or
jg
test
je
pop
xchg
mov
jnp
aas
ret
inc
les
out
push
lcall
lods
jg
adc
inc
pushw
or
adc
stos
mov
mov
aas
in
pusha
jae
test
fcomip
fisttpl
cmp
pop
and
inc
dec
ljmp
cmp
push
loope
jg
test
popl
push
in
sub
mov
mov
mov
daa
push
sbb
hlt
mov
push
inc
inc
adc
fidivrl
or
xchg
ja
mov
addr16
aas
mov
ss
sub
cmovg
cmp
aam
ret
les
ret
xor
inc
or
aam
dec
dec
fmull
in
or
inc
jne
jae
mov
inc
fmull
repnz
mul
jmp
int3
cli
jl
inc
push
jo
xchg
adc
movsb
jg
je
aas
add
jle
sbb
call
stos
mov
out
sub
pop
add
xorl
in
fs
add
cld
hlt
mov
sarl
js
pop
adc
and
dec
pminsw
les
cmp
sub
mov
cwtl
push
in
pushw
in
mov
mov
sarl
and
inc
sub
das
cmp
test
mov
bound
cmp
cmp
mov
popa
sbb
cmp
jmp
hlt
insb
sbbb
cmp
or
jo
hlt
pop
dec
rcrb
rcrl
mov
xor
cmp
adc
ljmp
mov
jg,pt
dec
loope
or
mov
jno
inc
jge
jnp
mov
xchg
fsubrs
jle
inc
or
divl
bound
cltd
mov
daa
insb
outsl
pushf
jecxz
jbe
rcll
lods
sbb
xchg
repnz
mov
daa
jmp
int
dec
fisttps
push
add
sub
adc
jg
sub
idivl
out
mov
repz
pop
inc
xor
jle
jo
cli
mov
mov
jmp
imul
mov
mov
pop
clc
popf
sti
call
hlt
or
js
jl
loopne
in
add
roll
add
jecxz
xlat
push
cs
push
loope
inc
test
out
iret
push
nop
inc
aam
inc
mov
je
shll
jl
xchg
jno
lret
and
jo
imul
orl
jle
nop
test
sbb
adc
push
mov
icebp
mov
mov
jns
and
inc
xor
or
cmp
gs
insb
adc
sub
xchg
arpl
jp
add
inc
inc
inc
cltd
js
xchg
dec
fmull
in
ja
ja
call
add
dec
jp
xorl
fs
enter
out
clc
pushf
in
xchg
fmuls
xor
add
jb
sub
and
jne
jns
mov
test
lock
pushf
push
daa
xchg
call
shrb
dec
add
jbe
add
sarb
rcl
jle
fcomps
shlb
fbstp
mov
inc
daa
push
adc
or
or
int
shl
inc
stc
mov
aad
adc
xchg
ror
dec
or
or
inc
push
pop
inc
dec
icebp
cli
loope
mov
xchg
and
push
xchg
inc
cld
sbb
sbb
cmpsl
pop
scas
aad
test
sbb
push
dec
fildll
jne
or
clc
sbb
jecxz
mov
jns
mov
xchg
test
rcl
xor
int
imul
repz
ds
fs
cmp
mov
pop
fsubp
mov
out
cmp
xchg
inc
subb
roll
jl
jnp
inc
dec
hlt
lea
and
dec
xchg
int3
popf
dec
test
nop
xchg
ja
lahf
sub
and
push
enter
push
sub
fsubrl
pushf
arpl
enter
xchg
xor
test
jl
cmp
adc
jge
iret
scas
and
add
arpl
scas
aas
or
std
sbb
aad
cmp
push
fcompl
add
jns
mov
push
cwtl
fldl
mov
cmp
das
sub
fwait
inc
rcl
add
sub
in
imul
adc
xor
int3
stc
fdivl
add
movsb
mov
les
jl
lds
jb
xor
mov
dec
repnz
mov
cmp
dec
mov
add
mov
pushf
dec
push
in
jg
shlb
jl
xor
dec
sub
lret
jno
cltd
xchg
into
adc
adc
in
insb
jns
sub
movsl
jl
addr16
shlb
xor
pusha
insb
or
xchg
cmp
cs
out
lock
pop
inc
mov
cld
sub
sahf
in
and
movsb
iret
call
cmp
cmpb
clc
adc
mov
jg
arpl
mov
xor
sbb
loopne
ret
or
and
mov
out
in
sub
adc
sub
push
mov
dec
je
mov
in
inc
push
xchg
popa
sbb
into
jnp
leave
insb
mov
and
push
scas
pop
inc
mov
add
pop
jl
aam
pop
cmp
mov
mov
fdiv
jae
jmp
int3
iret
dec
cltd
sub
lcall
cmpsl
cld
cmp
xchg
pop
dec
jmp
cs
sub
mov
push
xor
mov
inc
sub
lahf
fisubl
daa
lods
cli
mov
mov
dec
dec
jecxz
sar
out
xor
iret
sub
jo
in
movsb
push
xchg
cmp
sbb
iret
xchg
fbstp
ret
repnz
cmp
jnp
js
jbe
int
dec
bound
adc
and
loope
push
popf
fnstsw
pop
dec
xlat
cmp
xchg
enter
mov
push
dec
sub
add
and
jb
insb
das
addr16
das
mov
xor
lock
enter
dec
inc
adc
inc
add
add
je
fdivr
push
sahf
mov
ljmp
sbb
pop
cwtl
data16
mov
mov
pop
xor
fs
dec
pop
push
outsb
cmpl
jbe
inc
dec
fisttps
out
pushf
out
push
cmp
mov
mov
fcoml
inc
adc
jb
xor
imul
loopne
repz
add
xchg
dec
leave
sbb
jne
push
or
mov
imul
ljmp
mov
sub
int3
sub
jo
fs
rolb
jge
outsl
sbb
lcall
aaa
jae
les
push
sub
out
sar
xchg
cmpsl
rcrb
xchg
add
pushf
push
xchg
adc
xchg
lahf
repnz
pop
arpl
addr16
push
xchg
xchg
cmpsb
pop
call
xor
xchg
push
add
pop
fcoms
adc
movsl
js
ficoms
cltd
bound
out
ljmp
inc
jmp
add
fimull
cltd
jnp
sub
xchg
cmpsb
out
out
int
dec
jae
inc
std
lahf
int3
adc
cmpsl
es
test
mov
out
bound
addr16
jb
loop
nop
adc
jecxz
pop
leave
mov
cmp
sub
outsb
lock
js
cltd
sahf
push
or
jle
inc
xlat
pop
mov
mov
imul
push
sbb
lahf
insb
xor
movsb
sbbl
stos
leave
inc
xchg
mov
call
mov
cmpsl
mov
pop
xchg
xor
fcomps
add
and
dec
dec
sbb
mov
inc
and
pop
call
jmp
dec
add
cwtl
push
xor
ds
mov
cmp
xchg
cmp
rolb
in
nop
mov
movsb
hlt
loope
sbb
cld
pop
fistpl
pusha
cs
xchg
sbb
and
add
add
adc
pop
ficompl
mov
jmp
lods
or
push
jb
jge
cmp
mov
mov
jae
mov
outsl
adc
mov
jns
push
sbb
scas
pop
xchg
test
dec
push
in
hlt
push
fucomi
mov
lret
js
xchg
cmpsl
jmp
test
mov
mov
sbb
in
adc
dec
jle
mov
inc
gs
inc
push
pusha
jle
cmpsl
inc
mov
dec
rorb
shl
mov
aaa
push
sub
ss
icebp
xchg
mov
mov
arpl
cmp
repz
lock
xchg
jge
sahf
jge
mov
and
mov
insl
dec
xchg
xchg
xor
dec
push
mov
lea
inc
ja
jb
xor
dec
enter
cmpb
mov
jae
and
loop
push
add
adcb
pop
jns
dec
mov
mov
subl
shrl
jge
fimull
fstpl
pop
movsb
mov
test
and
adc
cmp
sbb
xchg
shlb
imul
hlt
rep
add
movsl
xor
and
sbb
lods
push
adc
pop
das
pop
mov
movsb
dec
dec
mov
out
cmp
inc
add
int3
inc
add
adc
pop
cmp
cltd
fimuls
aas
cmp
cmp
mov
repnz
pop
cmovl
insb
inc
and
and
sarl
int
jge
inc
fsubr
jo
mov
test
loopne
pop
and
jae
clc
test
xchg
pop
ror
inc
or
cld
mov
or
insl
shrb
pop
rcrb
movsl
and
mov
jne
in
xor
ljmp
mov
stos
fdivl
mov
mov
jge
rolb
mov
outsl
jne
inc
arpl
sub
or
test
or
lret
ss
lds
xor
sbb
pop
fs
or
xchg
popa
in
add
pop
pop
or
pusha
jae
pop
daa
add
mov
test
mov
out
scas
mov
push
mov
dec
clc
insl
xchg
movsb
push
dec
lock
inc
or
mov
rcrb
dec
xchg
lock
adcb
add
nop
mov
shr
ds
jae
iret
lea
shrb
pop
rcl
jl
pop
repnz
mov
xchg
push
xlat
add
or
in
fiaddl
or
jle
out
cmp
call
call
and
dec
add
sub
sub
call
mov
mov
in
push
add
pop
adc
xor
jmp
sbb
iret
in
ret
jmp
insl
call
lcall
dec
les
sub
ss
sub
ss
sub
pop
push
mov
sub
jae
daa
loop
aad
mov
and
dec
cmc
sub
int3
push
test
test
dec
std
daa
addr16
push
pop
adc
inc
fcmovu
mov
mov
cmp
push
aaa
enter
dec
xchg
push
popf
dec
adc
out
adc
sbb
mov
xor
xchg
int
or
mov
mov
movsb
and
sbb
cmp
ret
out
mov
lods
repz
xor
add
mov
fisttpll
arpl
xor
and
cmp
pop
lea
bound
sti
inc
mov
jmp
mov
cwtl
inc
clc
push
pop
cmp
xor
imul
xchg
xchg
rcrb
pop
adc
dec
push
xor
pop
movsl
inc
sub
and
test
add
cmp
test
jl
lods
xor
push
movsb
inc
stos
jge
std
xchg
sbb
enter
sarb
mov
pusha
or
cld
es
mov
sbb
cmp
notl
xchg
dec
mov
ret
or
mov
xchg
aas
push
aas
out
inc
adcb
pusha
mov
lds
rcll
adc
stc
loope
push
xchg
cli
repnz
add
sub
lahf
loopne
xor
xor
rcrb
mov
dec
fs
xchg
insb
int3
add
lcall
xorb
notl
test
outsl
mov
or
lds
push
sub
mov
sub
psllq
hlt
mov
popf
xor
push
mov
lods
daa
or
scas
sbb
test
dec
or
and
mov
sub
cmp
subb
jmp
or
push
pop
fstpt
mov
in
dec
add
push
or
loopne
rorb
jno
aam
pop
jmp
xor
data16
arpl
sti
add
orl
out
ret
jo
call
dec
sub
je
mov
repnz
je
jg
xor
jl
pop
dec
jb
out
push
shlb
pop
repnz
aad
sub
lock
mov
ret
fwait
sbb
cmp
dec
sub
mov
jo
test
arpl
cltd
in
jg
xchg
mov
dec
adc
orb
in
inc
sti
es
addr16
xor
adc
xor
clc
fiadds
adc
push
lea
mov
pop
jmp
jecxz
and
cmp
sbb
cmp
cmp
inc
xchg
cmp
jo
push
sub
xchg
or
fldenv
mov
jl
sub
mov
cld
test
vmwrite
loope
mov
sbb
sbb
aam
movsl
mov
inc
mov
cmpb
inc
js
in
pop
and
cmp
icebp
mov
xchg
addr16
stos
mov
sub
fcoms
jno
sahf
popf
adc
jno
xchg
es
out
xor
pop
push
jg
inc
jbe
jo
or
aad
mov
mov
loopne
dec
cmp
xchg
in
mov
jl
cld
ret
sub
xchg
scas
xchg
hlt
sbb
inc
xlat
mov
and
inc
mov
lock
inc
fstps
or
in
sub
jmp
mov
add
xorb
sbb
mov
push
movl
std
mov
add
sub
mov
cs
decl
ds
xor
xchg
aas
mov
push
push
jge
sub
shl
push
nop
cltd
add
mov
gs
adc
xor
or
scas
mov
ljmp
xor
clc
push
mov
stc
call
cmpsl
adc
pop
cmc
or
nop
mov
in
ret
cld
pop
sbb
imul
xor
in
std
mov
dec
mov
dec
xchg
or
sbb
mov
addb
pop
filds
ja
call
jno
push
inc
and
sub
dec
sub
cmp
cmp
inc
pop
test
cmp
lods
test
xor
stos
add
and
jb
ucomiss
ds
dec
fisubrl
xchg
xchg
dec
lret
mov
cltd
cld
inc
cmpsb
inc
cmp
mov
pop
ljmp
dec
push
sub
mov
cld
mov
roll
ret
dec
leave
iret
ficoml
cmp
inc
or
lcall
mov
dec
fstps
andl
push
mov
mov
insb
jp
psubsw
faddl
inc
loope
mov
adc
aam
std
icebp
pop
mov
mov
adc
pop
mov
dec
push
sbb
lret
pop
inc
dec
adc
sbb
jl
out
neg
shlb
mov
mov
add
mov
mov
pushf
pop
lock
subl
jle
and
add
shl
cmc
push
in
xchg
test
pusha
inc
loope
fistl
stos
jnp
push
dec
push
push
inc
cs
xchg
lret
inc
mov
inc
dec
mov
jl
loope
stos
inc
jmp
out
popf
stc
pop
pusha
xchg
xor
mov
sub
mov
push
mov
push
test
imul
sbb
xchg
sbb
shll
mov
mov
push
enter
testl
es
mov
loope
imul
test
and
adc
loop
inc
and
xor
bound
rorl
ja
jns
xchg
inc
ret
ljmp
ja
xchg
push
xor
iret
pop
xchg
insl
test
nop
mov
xchg
push
xor
sahf
dec
in
pop
loop
or
cmp
mov
jno
add
or
sbb
push
add
mov
xor
cwtl
xchg
pop
shlb
lods
int3
add
aas
inc
lods
jle
mov
jp
cmpsl
int
mov
xchg
lcall
call
shr
mov
insb
rorl
jge,pn
xor
sub
cmp
mov
dec
xor
test
pop
ljmp
push
adc
push
lds
fwait
aam
jle
mov
and
xchg
int3
dec
and
lds
cltd
rol
push
cs
outsl
adc
in
aas
pop
push
xor
dec
push
push
mov
or
arpl
and
rclb
cmp
loop
mov
adc
call
mov
lcall
test
mov
cmp
out
mov
sub
push
cltd
jb
sub
fs
xchg
sbb
shlb
jbe
in
push
sbb
dec
cld
add
mov
mov
addr16
adc
rclb
push
cli
mov
adc
push
xor
mov
popf
lods
adc
cmp
cmp
push
xorl
jp
cmpsb
mov
inc
sbb
pop
in
ret
pop
in
push
and
std
in
pop
sub
arpl
mov
out
in
dec
popa
cmp
and
lock
inc
in
mov
fiaddl
ds
push
cmp
xchg
dec
pop
loopne
les
cli
sub
js
in
dec
pop
addl
sbb
daa
lcall
cmpsb
daa
fwait
rorb
testb
cmpsb
in
sbb
add
and
cmpb
adc
inc
inc
add
mov
push
sbbl
shl
add
shrl
aaa
aaa
dec
es
inc
sub
insb
or
dec
test
ljmp
stos
xchg
sbbb
or
cld
mov
lods
inc
pop
or
xchg
sbb
xor
or
push
and
push
rcr
int3
mov
adc
stos
gs
or
fadds
pop
in
push
jge
pop
mov
lcall
push
ficompl
sub
mov
sbb
cli
repnz
lods
and
push
in
test
int3
sti
icebp
ljmp
ljmp
inc
jbe
cmpl
push
xor
lea
cld
jl
dec
add
cmpsb
dec
jl
xchg
adc
sbb
popf
es
das
pop
mov
outsl
scas
xor
xor
adc
pop
or
add
lea
dec
push
test
in
fnsave
cmp
push
out
lds
fwait
aaa
push
xor
xchg
lds
aas
xchg
push
enter
mov
inc
call
fsubrl
jl
movsb
inc
sub
loopne
cmp
adc
mov
pop
xor
inc
push
nop
icebp
cmp
lahf
jne
xor
icebp
ds
inc
push
mov
fcmovnbe
int3
sbb
hlt
adc
lea
jp
cmp
jb
in
cmp
cwtl
sub
push
and
mov
pop
xchg
scas
xor
arpl
popf
pop
arpl
pushf
or
mov
jae,pt
outsl
mov
push
icebp
pop
jl
cs
jns
sbb
mov
jnp
andl
push
aas
mov
std
mov
mov
sub
mov
rcrb
stc
cmp
test
loope
dec
mov
lods
mov
cli
push
int3
xchg
push
rol
xchg
int3
mov
inc
scas
sbb
int
sub
xchg
inc
out
mov
stos
sbb
mov
clc
insb
test
and
test
jnp
lea
test
out
adc
xchg
xchg
mov
repnz
dec
inc
mov
cmpsl
adc
mov
test
je
subl
fs
fcomps
dec
lret
lds
push
pop
inc
mov
cmp
jle
push
mov
xchg
ljmp
data16
dec
mov
mov
dec
mov
sub
pop
jp
stos
inc
jnp
aam
loopne
mov
rolb
cmp
pop
pushf
mov
xlat
push
pop
pop
inc
stos
cmp
adc
cld
push
adc
jle
dec
jl
push
xchg
mov
mov
call
bound
sub
xchg
clc
pop
shlb
xchg
sbb
inc
lods
xchg
push
mov
xchg
xchg
aaa
and
cmpsl
sbb
pusha
pop
push
push
jb
imul
inc
pop
adc
nop
int3
scas
jle
dec
lods
test
pop
cmc
aaa
rcrb
push
xchg
push
cmp
cmp
sub
and
xor
scas
mov
mov
push
jp
mov
jge
xchg
dec
adc
imul
cwtl
inc
xor
add
call
mov
pop
loopne
in
or
repnz
mov
mov
inc
add
pslld
stc
push
mov
das
add
xor
inc
or
nop
jl
in
dec
ret
enter
sti
sahf
mov
mov
adc
ss
pushf
out
ljmp
and
rolb
mov
and
rclb
xor
push
popf
enter
incl
addr16
lret
push
sub
or
cld
mov
iret
out
mov
lea
ljmp
sub
mov
cmp
shrl
test
inc
inc
adc
decb
ret
and
mov
insl
pusha
fwait
loopne
push
hlt
out
lahf
push
xorb
mov
insl
jae
push
lcall
jo
pop
sbb
mov
insb
fsub
lods
adc
repnz
or
dec
imul
in
mov
dec
sub
sarb
mov
or
xor
push
dec
push
mov
sub
xchg
or
mov
into
xchg
xor
popa
loope
xor
enter
xacquire
mov
scas
das
mov
mov
cwtl
outsb
pop
mov
cmp
sbb
cmp
inc
dec
cmpb
nop
ret
aam
push
mov
cld
sub
je
rorl
adc
fs
xor
fistps
dec
cwtl
xchg
daa
pushf
push
xor
xchg
pushf
xor
xchg
push
mov
je
mov
ret
adc
shr
push
mov
lahf
xor
mov
repz
mov
lods
dec
xorb
xor
add
cmpsb
push
mov
and
repnz
xchg
repnz
ljmp
lods
pop
cli
es
jno
or
add
mov
mov
in
mov
clc
lds
mov
xchg
lret
rorl
sub
mov
jle
mov
mov
mov
popf
pop
inc
bound
sub
pop
sbb
out
test
stos
iret
daa
cmc
cmp
jae
shll
in
js
cmp
adc
xchg
or
aad
arpl
cmp
aad
cmp
and
test
mov
push
clc
cltd
mov
out
inc
or
mov
leave
and
jle
jg
jno
pop
pmullw
dec
jmp
jb
shr
aaa
scas
add
push
nop
add
cwtl
cmp
mov
adc
push
cmp
repnz
in
movsb
bound
adcb
and
call
scas
int3
sub
orl
push
push
ja
mov
mov
and
mov
adc
push
mov
cmp
jmp
daa
inc
mov
pop
dec
push
mov
mov
in
push
pusha
lret
les
cmp
and
push
xlat
inc
xchg
push
popf
inc
push
cs
mov
push
dec
sub
adc
jmp
int
es
hlt
testb
imul
jl
mov
lods
and
mov
push
or
pop
xchg
stos
loopne
in
call
pop
xor
or
sbb
shrl
stos
mov
fimull
push
out
sbbb
rcrl
mov
lcall
arpl
and
mov
push
mov
cmc
pop
nop
lret
mov
or
mov
cmp
in
enter
cld
dec
aam
push
and
pop
fists
cmc
in
pop
inc
std
cwtl
pop
sbbl
jo
dec
ljmp
mov
pop
jmp
pop
cmp
or
stc
decb
adc
mov
test
mov
sbb
loope
xchg
xor
mov
decb
das
add
fwait
and
xchg
and
int3
daa
inc
mov
cmp
call
into
in
insb
mov
jp
orl
sarb
adc
dec
dec
sbb
movsl
push
sub
and
inc
les
xchg
dec
pop
jmp
stos
rorl
in
enter
fwait
inc
inc
mov
dec
add
sub
mov
insl
add
or
repz
lcall
mov
les
mov
push
fsubl
and
jns
mov
sub
fwait
adc
xchg
cmp
stc
mov
cld
test
jo
in
lods
xchg
jmp
mov
sub
mov
fcomp
into
and
fs
es
cmc
adc
es
jp
pushf
pop
pop
stos
mov
xchg
cmp
outsb
fwait
push
cld
push
cld
sbb
incb
cmp
mov
test
pop
or
nop
sub
movsl
fisubl
lea
hlt
fs
jo
xchg
fsubs
jo
lock
nop
rcll
enter
sbb
shlb
mov
fdivl
dec
mov
sub
inc
adc
cmp
outsb
add
xlat
mov
jl
scas
sbb
inc
lods
scas
dec
add
popl
pop
repnz
cmp
xlat
mov
in
jne
nop
xchg
sbb
xchg
imulb
push
inc
cld
repz
xchg
cld
int
adc
sti
mov
cmp
inc
int
inc
cmp
mov
mov
xlat
cmpsb
cmp
rclb
pop
cmp
test
je
into
pop
rcr
insb
int3
inc
push
inc
mov
jecxz
adc
popa
sbb
insb
hlt
adc
popf
push
xchg
mov
fs
scas
and
ficompl
mov
int3
sbbl
mov
loop
adc
mov
xor
loope
and
xor
xchg
call
icebp
jl
push
jl
jno
xor
push
lcall
xchg
ss
jbe
loop
daa
or
lds
mov
xor
mov
xchg
xlat
add
jno
dec
sub
mov
mov
inc
dec
out
jno
xor
je
inc
je
andl
dec
inc
cld
std
or
jp
mov
xchg
fildl
mov
and
setg
mov
fbld
dec
adc
mov
push
push
subl
repnz
cld
stos
dec
rolb
repnz
push
mov
daa
or
cmpsl
dec
cmp
sbb
inc
inc
scas
push
push
mov
sarl
inc
jge
jmp
repz
fwait
hlt
pop
lds
out
sbb
sbb
int3
dec
fistpll
rclb
nop
or
pop
push
xchg
mov
pop
es
xlat
ja
cmc
mov
dec
sahf
push
stc
mov
xor
cmpsl
dec
push
push
dec
iret
dec
adc
jae
cmpsb
pop
test
push
add
push
xchg
hlt
cld
dec
jns
cli
call
pop
es
adc
push
andl
clc
xor
jmp
aam
cmp
mov
jb
hlt
cmp
cmpsb
lock
xlat
ret
push
xchg
dec
xor
leave
mov
in
cs
inc
and
cmp
xor
int3
aaa
int3
dec
or
mov
decb
xor
xchg
std
insb
pop
jle
in
fmulp
add
call
push
mov
and
or
adc
cmp
scas
jmp
xorl
cmp
fimuls
cld
insb
out
jl
xchg
mov
int
lcall
xchg
add
cwtl
mov
sub
mov
lret
cmc
stc
push
pop
add
mov
pop
xlat
push
pop
mov
adcl
jae
mov
adc
daa
enter
insb
pop
sti
mov
sub
shlb
sub
jmp
pop
movups
push
les
push
push
dec
inc
lcall
jmp
aad
pusha
push
mov
mov
dec
aam
dec
xor
in
enter
push
xchg
mov
mov
xchg
mov
and
pop
sbb
jmp
sarb
sub
and
mov
std
inc
int3
out
aas
jno
sbb
sbb
addr16
std
sti
aad
dec
imull
pop
and
cmp
ret
sub
pusha
xlat
in
pop
aam
rep
lcall
inc
data16
pop
cltd
adc
pop
mov
jmp
dec
insl
push
jbe
or
bound
mov
cwtl
pop
aaa
enter
aas
jb
sub
into
sub
fnstsw
or
cmp
jl
sbb
clc
pop
shrb
mov
pop
mov
fucom
cmpsl
mov
sub
mov
jp
test
or
insl
push
cmp
jg
lock
xlat
jmp
jbe
xchg
aas
push
cltd
jno
push
clc
push
sbbl
jo
dec
pop
xor
lcall
nop
dec
iret
idivl
push
inc
ret
push
in
aaa
jmp
sub
jnp
in
in
lret
int
call
jp
xor
lcall
sbb
sub
sbb
push
add
das
in
mov
std
push
xchg
jnp
pop
out
cmpsl
mov
sti
stc
cs
jnp
xor
jb
mov
inc
xchg
cmp
jecxz
shl
mov
popa
stc
pop
ljmp
inc
push
inc
mov
sbb
fs
hlt
aas
jb
mov
aas
lea
fnstsw
nop
and
call
leave
inc
daa
lcall
mov
sbb
pop
aaa
cmp
popa
sbbb
inc
add
cmp
jbe
push
lea
fnsave
cmp
jl
jecxz
stos
mov
mov
adc
push
pusha
les
je
or
sub
inc
movsb
cld
and
repnz
hlt
dec
ficompl
xchg
orb
fwait
add
frstor
mov
mov
pop
and
cmpsb
and
fst
mov
mov
cmp
dec
inc
ja
inc
popf
or
inc
js
lcall
mov
dec
mov
mov
repz
adc
ret
cmp
sbb
jno
movups
aad
add
cmp
xor
rorb
push
mov
test
push
out
fadd
cmp
dec
loop
or
aad
fwait
lods
sarl
pop
shr
push
lret
clc
pushf
inc
adc
mov
aas
es
int3
adc
lods
aaa
push
dec
add
jecxz
mov
loopne
inc
in
int3
es
ds
mov
je
lcall
cmpsl
mov
jb
iret
in
dec
cmp
dec
pushl
rorb
jmp
and
xchg
je
mov
test
jne
sub
mov
outsl
sub
loop
or
aas
jbe
pop
mov
sbb
pop
inc
cmp
mov
sub
das
mov
cmpsb
mov
push
dec
pop
stos
jb
pushf
cld
repz
call
scas
mov
pop
xor
push
sbb
mov
push
int3
sbb
ljmp
ljmp
xchg
inc
pushl
inc
inc
sub
inc
sbb
les
ljmp
sub
sbb
dec
je
cmpsb
je
je
pop
into
mov
popf
mov
inc
mov
ret
popf
pop
inc
mov
insl
lcall
mov
adc
orl
rolb
hlt
push
fsubrl
mov
outsb
add
fwait
xchg
inc
aam
lea
add
cli
jmp
push
xor
mov
push
cmp
mov
and
or
inc
stos
nop
bnd
nop
in
jl
or
adc
lret
pop
add
leave
insl
mov
test
cmp
lcall
sbb
fbstp
mov
cmp
xchg
dec
pop
stos
jb
or
int
fdivrl
jecxz
mov
fadds
ds
repnz
rolb
addr16
lcall
int3
or
rorl
shrb
push
aaa
adc
ljmp
stc
pop
add
loop
pop
cs
xchg
ja
lock
shll
add
sar
lea
mov
and
push
insl
xchg
inc
and
fsubrl
push
in
xor
icebp
call
mov
mov
fidivl
sbb
fdivl
mov
rcl
incb
stos
subb
cwtl
call
ss
mov
cmp
fsub
cmpsl
mov
ljmp
outsb
loop
repz
mov
rolb
cld
psllq
es
inc
cmp
int3
ss
and
sbb
and
push
je
int3
jg
fistl
das
xchg
and
out
ja
sub
call
cmp
adc
call
lret
scas
jle
in
inc
inc
cmpsb
int3
inc
aad
dec
mov
mov
popf
mov
fidivl
xchg
out
out
sub
test
lcall
ljmp
popa
popa
outsl
movsb
add
pusha
fdivl
push
cli
jl
fwait
mov
jo
repz
inc
je
pop
xchg
inc
dec
sahf
mov
sarb
jne
mov
sbb
dec
clc
mov
es
ss
jmp
sub
mov
fdiv
inc
inc
add
jne
mov
add
loop
cmp
mov
inc
sbb
aad
imulb
movsl
and
add
fmul
pop
cmp
filds
enter
inc
xor
or
pop
cmp
xchg
into
sbb
xor
push
mov
cld
call
ds
mov
adc
scas
shrb
push
jns
fadds
inc
ret
cmp
mov
xchg
jl
sub
pushf
in
pop
mov
ljmp
inc
lret
test
aas
cmpsb
lret
push
jge
testb
cli
inc
xchg
xchg
and
add
dec
xor
jo
mov
std
mov
add
aas
mov
sub
popa
xor
xor
and
dec
xchg
adc
sub
mov
add
cwtl
inc
iret
lods
xchg
cld
outsb
jae
sahf
cmp
jle
cwtl
je
imul
sub
dec
scas
leave
aas
push
loope
imul
push
sbb
lret
int
mov
cwtl
faddl
loope
test
cli
daa
nop
add
mov
jmp
sub
fcoml
cmpb
or
pushf
xor
push
call
push
xor
out
rcr
xchg
adc
pop
adc
rclb
nop
sbb
dec
or
test
sbb
add
int3
ret
xor
mov
mov
jp
mov
sub
les
mov
mov
jmp
daa
inc
mov
xor
pop
loope
xchg
pop
arpl
dec
les
lock
iret
inc
out
adc
out
pmulhuw
pop
mov
in
mov
or
mov
sbb
outsb
or
adc
mov
push
xor
cs
ret
inc
xor
daa
mov
hlt
loop
push
loope
pushf
dec
mov
pusha
addb
push
filds
and
pop
cwtl
mov
out
in
pop
jg
xor
pop
mov
repnz
pop
es
lcall
in
rclb
mov
outsl
mov
jecxz
mov
sahf
jnp
jp
insb
cli
add
fildl
rcrl
loope
test
sbb
pusha
fists
cmp
loop
repz
jle
mov
ret
jbe
loop
pop
loop
sbb
mov
push
shlb
mov
cmp
cltd
cld
add
or
sbb
pop
fbstp
fmuls
mov
pusha
push
pop
subl
lcall
les
jmp
loop
incl
bound
dec
cwtl
lds
cmp
mov
lds
nop
dec
dec
shl
fwait
dec
fbstp
aad
jg
dec
xchg
dec
test
or
int3
ss
pop
ds
sbb
fistpll
pop
sub
call
cmc
les
mov
movsb
por
roll
mov
push
push
jne
sub
mov
adc
pusha
adc
xchg
add
mov
mov
adc
pushl
mov
int
adc
lods
xor
pop
mov
inc
ds
int3
dec
add
dec
cmpsb
lret
pop
movsb
mov
mov
pop
dec
mov
xchg
rorl
fsubrs
int
dec
pop
push
cld
pop
xchg
mov
ficoml
pop
dec
in
mov
imul
leave
push
mov
movl
inc
push
mov
jb
test
push
mov
push
pop
push
mov
dec
lahf
lret
sub
push
cld
repz
push
outsb
add
or
xor
scas
cmp
push
rorb
push
mov
mov
xorb
lcall
xor
test
push
test
and
sahf
xchg
lea
stos
hlt
cmp
xor
pop
jo
sub
pop
mov
and
ret
mov
fcomi
sbb
call
adc
insb
xor
jle
in
pop
mov
popa
insl
pusha
insl
cmpsb
stc
pop
inc
push
pop
loope
xor
dec
sbb
pusha
push
pop
mov
lahf
pop
pop
loopne
stc
pop
adc
xchg
jge
stos
push
ds
fwait
and
sbb
cmp
mov
dec
mov
dec
mov
insb
test
popa
insl
mov
mov
sub
out
gs
loope
aam
push
aam
lods
bound
scas
dec
push
cld
xor
into
inc
sub
mov
iret
inc
push
mov
pusha
sub
pop
mov
ljmp
mov
repnz
xchg
repnz
cmp
jae
mov
les
fistpl
push
popf
je
int3
in
push
mov
push
mov
hlt
pop
mov
in
push
mul
cs
das
stos
ss
enter
push
jl
xor
pop
mov
bnd
lock
and
push
adcl
mov
test
pushf
sub
dec
loop
mov
pop
mov
out
das
mov
pop
idivb
dec
movsl
aad
test
jg
jae
adc
cwtl
test
push
dec
xadd
push
in
clc
push
adc
adc
fxam
sbb
sbb
daa
mov
adc
mov
imul
adc
add
faddl
mov
mov
mov
push
ret
fstpt
ret
sbb
jmp
ret
push
sub
fcmovnu
insl
inc
pusha
je
push
lret
jl
mov
in
or
jl
pop
aad
cld
add
test
and
cmp
imul
adc
mov
in
int3
mov
xchg
xchg
mul
push
cmp
repnz
xor
cmpsb
stc
pop
stos
xchg
jmp
int3
inc
popf
dec
cmp
mov
and
mov
mov
outsb
iret
push
push
and
call
add
jmp
push
pop
mov
pusha
mov
mov
ds
sub
lds
xor
aam
pminsw
sub
push
add
push
dec
or
mov
dec
popf
jl
mov
cld
adc
pushf
xor
loopne
das
sbb
mov
out
cld
popf
je
pop
cwtl
cmp
pop
dec
pushf
xchg
pop
sub
pop
call
push
pop
dec
rcll
xchg
imul
xchg
frstor
adc
cmpsl
bound
mov
jge
fsubrs
aad
and
shr
imul
popf
je
cmp
test
cmp
and
jo
movsb
xor
nop
dec
nopl
mov
loope
inc
add
jno
jno
push
push
mov
push
push
cmc
inc
pop
ret
sahf
jo
jmp
jmp
aaa
sbb
mov
aad
mov
inc
fs
add
mov
xor
jl
lods
mov
sar
loopne
jmp
fldl
add
icebp
dec
push
test
mov
aad
mov
sub
cmc
adc
mov
into
das
push
and
push
in
nop
bound
in
cwtl
aas
adcb
push
inc
lret
aam
mov
stos
gs
xchg
mov
rcr
ret
inc
les
outsl
mov
stos
les
mov
cs
pop
in
add
inc
and
add
aaa
mov
push
and
cmpsl
sub
dec
lods
cwtl
xor
xchg
aam
ss
adc
lock
stos
mov
ds
out
fadds
ret
adcl
mov
fsts
repz
testl
fistl
mov
cmp
enter
pop
xchg
test
jecxz
add
xchg
push
shlb
cltd
jne
sbb
xchg
sub
scas
sbb
loope
call
pop
stos
or
aaa
jb
rcrl
imul
add
add
push
mov
jge
ljmp
xchg
mov
mov
or
push
popa
stos
mov
cltd
mov
push
popf
cmpsb
arpl
hlt
mov
lcall
out
insb
pop
mov
jl
es
nop
pushf
movsb
stc
shlb
sub
lahf
loope
jo
xchg
movsl
pop
fistps
addr16
mov
sbb
ret
pop
nop
sarl
xor
jo
push
xchg
loop
arpl
push
insb
cwtl
or
xor
add
adc
int
hlt
sbb
dec
in
cmc
in
subb
in
pop
mov
lahf
sahf
mov
sbbb
aam
inc
and
adc
adc
cmp
xor
daa
in
cld
fs
fmuls
cmp
movsb
xchg
jecxz
test
pop
nop
push
pop
lods
loopne
xchg
mov
cmp
jle
lea
xor
insl
push
pop
addb
pop
iret
cmc
xor
fstl
hlt
pop
into
mov
in
pushf
in
sti
inc
popf
je
pop
push
dec
pop
stc
add
sti
lods
mov
paddsb
out
pop
adc
fimull
push
adc
inc
sbb
popf
or
sbb
jb
hlt
jle
cmpsl
adc
cld
or
sub
adc
inc
mov
adc
iret
sbb
inc
and
std
outsl
js
mov
out
pop
and
lods
sub
insl
les
sub
jae
fsubs
jmp
cmpb
mov
pop
push
cs
xor
adc
sbb
nop
xchg
mov
cmp
stos
jg
ret
push
call
inc
mov
std
push
sub
in
push
xchg
out
cltd
adcb
jg
xor
xor
mov
in
insl
sub
adc
xchg
out
cltd
adcb
cmp
xor
cmp
mov
mov
sub
mov
xchg
sbb
in
cmp
leave
push
or
daa
cmpsb
mov
andl
and
sbb
fdiv
cs
jecxz
mov
jecxz
lds
pop
ret
das
sub
int
das
call
les
jge
and
add
pop
int3
shll
inc
ljmp
xor
xchg
cmpsl
mov
sub
push
xor
push
pushf
fldt
jg
adc
jne
cld
jae
test
cmp
jo
stos
jp
call
ljmp
stos
inc
inc
mov
rcl
jge
mov
movsb
scas
jmp
mov
loop
xchg
int3
mov
inc
loope
ret
sub
stos
lea
bound
std
insb
dec
fstl
push
mov
inc
mov
shrl
or
les
int3
or
cltd
jg
xchg
test
push
adc
mov
pushf
mov
and
repz
in
push
sar
leave
daa
rcrl
mov
pushf
pushf
insl
mov
inc
inc
xor
mov
mov
scas
pop
iret
fistpl
xor
mov
test
mov
adc
sub
adc
mov
mov
cmp
fstps
pop
xchg
stc
stos
mov
cmp
ds
jmp
push
push
jmp
mov
sahf
enter
adc
icebp
stos
rcrl
fisttpl
lock
cmp
jb
jb
and
mov
cmp
ds
add
bnd
jle
mov
out
enter
xchg
and
sbb
push
and
fisttpll
sbb
stos
push
negb
scas
in
faddl
xor
inc
daa
fstl
mov
rorl
imul
add
shll
pusha
pop
pop
sbb
push
movsb
mov
jl
sub
xor
sar
dec
mov
push
mov
addb
cmp
dec
stos
stos
push
add
mov
push
imul
pop
movsb
push
enter
pop
lea
lahf
aas
xor
or
jg
lds
mov
arpl
bound
movsb
push
popa
ret
inc
or
fcmovne
mov
xor
inc
sbb
std
jne
xor
in
xchg
push
xor
repnz
sub
and
neg
sbb
cmp
ds
jae
pop
dec
ret
cmp
sub
leave
mov
mov
imul
jmp
mov
xchg
or
aas
dec
ss
andl
arpl
sub
das
add
insl
or
repnz
pop
adc
mov
outsb
add
ret
hlt
pop
pop
xchg
jns
pushf
push
mov
inc
push
lcall
and
stos
insb
insb
outsb
arpl
fmull
and
lock
pop
and
popf
pop
clc
xchg
sbb
mov
fwait
in
lret
fildll
scas
in
shrb
lret
call
dec
push
in
jg
push
dec
mov
jb
iret
inc
xchg
add
cmp
repnz
mov
dec
sub
lock
js
ret
mov
hlt
cmpsb
mov
mov
push
fnstcw
sbb
xchg
cmpsl
test
add
dec
add
cmpsl
push
mov
push
and
in
and
ret
mov
inc
out
aam
cs
xchg
icebp
hlt
in
sbb
xchg
sub
outsb
jmp
mov
mov
sbb
outsl
jecxz
ljmp
imul
jbe
or
sbbl
cld
push
call
push
fdivrl
nop
push
inc
and
mov
and
icebp
sbb
or
jecxz
mov
add
test
push
bound
push
mov
jl
mov
mov
inc
jne
jne
push
cmp
add
shrl
std
or
push
jle
fcomps
inc
inc
cmp
out
mov
mov
and
aam
or
rcrb
insl
dec
fbstp
jne
cmp
xchg
pop
or
mov
sbb
jo
cmp
pop
pop
addr16
ret
out
pop
sbb
repz
cld
aas
sbb
xor
mov
stos
not
mov
cmp
std
mov
mov
notb
cmpsl
mov
aas
push
out
push
pop
sbbb
lret
sub
mov
out
and
sub
and
cmp
test
ret
arpl
aad
and
fildl
jne
sub
notb
adc
jmp
dec
addr16
in
cmc
dec
push
mov
mov
cmp
nop
jbe
jmp
jg
xor
sbb
xchg
sbb
movsb
dec
lods
inc
imul
or
sahf
popf
dec
leave
push
jo
jmp
call
dec
dec
and
add
orl
or
stos
xchg
jb
pop
call
sbb
xchg
xchg
jae
cmp
and
outsb
call
mov
sub
cltd
adc
popa
add
fsubrs
sbb
loope
xor
cmpsl
inc
shl
add
sub
jno
dec
pop
outsb
or
jle
mov
mov
sbb
out
mov
jle
sub
pop
hlt
hlt
pop
mov
inc
pop
pushf
dec
sti
je
out
or
imul
mov
fidivl
pop
es
mov
xor
es
lret
and
jne
pop
add
cmpsb
sub
fwait
popf
into
pusha
in
rcrb
loop
cmp
insl
fmulp
pop
mov
fstl
outsb
adc
fisubs
xor
and
and
push
sub
mov
sbb
sub
push
in
mov
lods
scas
aam
add
and
popf
pop
imul
shrb
mov
sub
push
or
ljmp
sub
ret
and
cli
fsubrs
popf
push
ss
out
bound
cmp
in
out
aas
test
push
orl
sbb
cmp
ss
and
loop
mov
sbb
adc
lret
daa
add
imul
push
lock
and
xor
cld
in
ficomps
dec
incl
aad
sub
repnz
adc
testb
inc
ds
sbb
jno
cltd
stos
sbb
pop
popa
ds
xchg
dec
pusha
dec
adc
repnz
xor
pop
clc
pop
cmp
popa
adc
stos
mov
movb
cmp
pop
pop
add
jp
sub
subb
enter
lds
adc
cmc
adc
mov
or
inc
jl
adc
lods
rclb
pop
scas
mov
cwtl
dec
sub
xchg
rorb
cmp
mov
test
gs
in
mov
mov
add
pop
addl
mov
lret
outsl
mov
shlb
movsb
xchg
fsubp
ret
negb
push
mov
adc
cmp
adc
jb
inc
stos
xlat
pop
or
mov
pop
sbb
sbb
cltd
adc
fidivs
aam
dec
imul
out
cwtl
lret
rorb
mov
push
movsl
repnz
adc
mov
dec
pop
aam
dec
lcall
add
xor
repnz
add
mov
int3
stos
clc
into
das
jl
das
int
pusha
aas
das
scas
fcmovne
and
loopne
jmp
mov
jae
icebp
pusha
cld
sbb
adc
pop
hlt
out
sarl
sub
xor
lds
popf
fsubrs
lock
aas
mov
ds
add
mov
jbe
scas
mov
test
jg
and
sub
cmp
dec
push
fsts
shr
in
pop
lds
inc
adc
xorl
push
jbe
pop
or
fisubrl
pushf
rol
adc
xor
inc
ret
cltd
in
mov
cs
jge
cs
and
mov
dec
jb
mov
xor
in
cmp
imul
aam
or
adc
add
call
and
sub
ret
stos
ss
loope
push
pop
stos
cltd
or
add
inc
push
xchg
test
mov
and
and
push
cwtl
xor
cld
cs
jl
adc
pop
sbb
mov
sub
orb
mov
or
pop
sbb
mov
push
in
pop
andb
jecxz
jmp
popf
pop
sahf
aad
mov
insb
std
mov
std
push
add
push
dec
sahf
sarl
lahf
mov
mov
dec
mov
pop
test
or
push
mov
push
xchg
jmp
mov
mov
inc
loopne
lret
je
aas
adc
xchg
int3
inc
pop
imul
lcall
mov
outsl
call
push
jns
sbb
repnz
pop
rorb
add
nop
std
sub
mov
add
int3
push
inc
cmp
test
mov
std
jnp
cmpb
daa
repnz
xchg
xor
rclb
dec
inc
sub
or
mov
call
and
rcll
pushf
inc
add
ss
push
and
cli
cltd
push
push
js
aaa
dec
roll
and
jg
cmp
xchg
sahf
shl
mov
jnp,pt
fidivrl
adc
cmp
es
ret
mov
or
in
sbbb
cmp
sub
fistps
adc
xchg
or
and
stos
insl
fbld
out
sahf
pushf
mov
push
inc
dec
xchg
add
push
movsl
sub
std
sub
mov
enter
jnp
and
xchg
mov
lods
sti
gs
or
stos
cmc
sbb
push
push
mov
push
call
xchg
jae,pn
cli
addr16
mov
add
fnstsw
int3
push
xchg
lods
adc
or
adc
loopne
xor
sarb
lods
aas
fists
and
in
mov
jns
pusha
adc
sysexit
xlat
jb
test
gs
mov
insb
xor
xor
sub
ljmp
aam
imul
xchg
push
jb
add
cli
aas
in
aad
ljmp
sahf
fidivrl
xchg
pop
ret
scas
call
sub
movsl
dec
mov
cmp
repz
in
xlat
int
test
daa
xchg
push
test
push
dec
inc
push
adc
dec
int3
sub
lods
dec
sbb
push
hlt
jge
repnz
xchg
sub
inc
mov
or
pop
adc
push
or
add
cmp
out
pop
hlt
nop
imul
sti
push
dec
inc
xor
add
shll
mov
popa
shll
sub
into
mov
dec
mov
xlat
add
in
push
rorl
aas
popa
dec
add
xchg
mov
subb
rcll
mov
bound
pusha
mov
inc
mov
jp
mov
mov
inc
fs
sub
mov
ja
mov
or
push
sbb
pop
and
inc
mov
jle
in
out
mov
pop
jl
mov
push
pop
out
mov
mov
popa
pop
and
and
pusha
mov
mov
subb
pop
push
popa
int3
sbb
test
xchg
hlt
mov
fs
daa
add
cli
sub
adc
and
fs
pop
or
xor
repnz
and
or
in
xchg
iret
sub
ret
inc
adc
dec
out
ret
push
ds
or
inc
and
shll
xor
aaa
push
add
sub
ljmp
cmpsl
loop
inc
jle
in
outsb
fcomps
icebp
addl
hlt
cmp
and
loop
ficompl
sbb
je
sbb
aas
or
and
mov
mov
pop
rcr
jecxz
mov
xchg
test
add
insb
jecxz
cmp
out
sahf
aaa
or
out
add
hlt
jp
mov
mov
call
aam
pop
loope
push
aam
mov
sbb
jl
call
mov
add
and
vmread
out
dec
rorb
mov
ret
nop
jg
sbb
fdivs
mov
xor
lahf
iret
xchg
das
stos
sahf
sahf
sbb
rolb
test
popa
dec
sbb
add
mov
je
mov
out
xchg
sub
int
sub
cmp
aad
push
icebp
pop
mov
loope
lahf
movsb
mov
aad
mov
mov
rcl
insb
test
pop
mov
shll
jmp
shll
xchg
pop
popf
xor
pop
stos
movsl
popf
adc
push
out
mov
push
fwait
nop
adc
loope
popf
lea
inc
test
ret
pop
scas
cmp
mov
pop
cmp
add
jl
fimull
or
adc
in
jb
push
jl
lcall
pop
out
and
cmp
repnz
sbb
mov
xchg
xorb
sbb
mov
sbb
fxch
pushf
push
std
inc
cwtl
sbbl
imul
cs
xchg
cmc
mov
bound
fisubl
push
xor
es
test
jo
cmp
leave
adc
sub
je
mov
xchg
gs
sub
pushf
xor
adc
add
lcall
fsubrs
ret
inc
popf
lret
repnz
incb
mov
imul
push
je
cmpsb
cmp
cmp
mov
fildll
xlat
pop
test
pop
mov
or
ljmp
pop
and
loop
sub
sub
lea
pop
jp
mov
xor
stos
rcrb
pop
jg
mov
in
into
xchg
jne
addr16
and
das
sbb
sub
mov
jecxz
scas
mov
out
rorl
mov
cltd
fdivs
dec
data16
orl
adc
ret
sbb
clc
dec
xor
mov
sbb
pop
lods
lret
pop
jae
nop
movb
hlt
jge
inc
into
test
mov
jmp
or
fs
add
ds
scas
lahf
fs
aas
loope
test
inc
gs
jae
mov
in
mov
pop
mov
lods
out
jecxz
rolb
dec
mov
int
lret
sub
push
iret
gs
in
out
push
adc
insl
and
rol
xor
fldl
push
pop
xor
dec
xlat
lret
icebp
addr16
inc
xor
sub
sbb
adc
loope
leave
push
aas
bound
adc
out
jle
mov
push
mov
sub
push
fsts
inc
mov
jb
push
sbb
mov
leave
dec
sub
test
das
mov
aas
ds
push
inc
xor
pop
push
ret
shl
pop
push
jmp
out
inc
fcompl
mov
jns
ret
idivl
sbb
fisubrl
or
arpl
es
cmp
aad
stos
pop
inc
jp
das
cmp
ficompl
rolb
cli
popf
pop
sub
cmp
pop
pop
adc
mov
scas
in
jnp
cmp
sub
inc
out
jmp
mov
sti
ja
xor
adc
loop
mov
push
nop
lahf
cmp
mov
pop
or
enter
jo
adc
pusha
repnz
sbb
mov
add
nopl
jg
dec
sub
push
jnp
push
insb
dec
xchg
enter
add
adc
out
sbb
jbe
mov
push
repz
outsl
pushf
inc
les
out
ret
stos
mov
ret
scas
sti
outsb
adc
mov
sbb
ret
lahf
fists
xchg
scas
popf
dec
push
fidivrl
cli
push
cmpsl
cmp
add
in
pop
mov
sbb
push
jnp
push
inc
imul
and
repnz
jecxz
movsl
inc
and
ljmp
mov
inc
add
xor
push
insl
test
fstps
and
or
incl
adcl
inc
sbb
stos
push
pusha
ss
jge
and
rorb
xchg
xlat
inc
jmp
fwait
ret
insb
xor
inc
inc
std
xor
call
xchg
cs
inc
or
mov
enter
jp
inc
in
xchg
mov
dec
mov
inc
repz
outsb
dec
gs
xlat
dec
push
pop
and
adc
adc
fimull
inc
sbb
xchg
mov
pushf
sbb
sar
jl
push
dec
pop
lcall
mov
sub
data16
out
mov
sbb
aaa
fildl
je
cmp
and
mov
sub
aam
xor
push
cmp
call
push
jns
repnz
mov
movsb
pop
push
insb
pop
pop
sbb
push
mov
popa
fsts
sbb
mov
inc
and
cmp
push
cmpsl
mov
inc
cmp
mov
rcrb
sahf
add
mov
pop
int3
push
adc
fisubrl
xchg
mov
xchg
sbb
mov
sub
mov
das
dec
sbb
les
dec
call
cmp
mov
and
lahf
and
test
sub
sub
fcom
jmp
xchg
ss
or
pop
out
xor
sub
adcb
xor
ret
pop
repz
cltd
nop
loope
scas
or
adc
pushf
jns
mov
aad
adc
add
filds
popa
int3
clc
negb
cld
inc
or
jecxz
push
push
test
push
sarb
lock
mov
stos
inc
addl
jns
xchg
arpl
fwait
or
mov
pusha
les
loop
sub
dec
movsb
push
cmpsb
cli
test
pop
xchg
adcl
in
movsl
jle
inc
push
sbb
sub
out
es
mov
xor
jmp
mov
roll
inc
daa
outsb
cmc
inc
enter
dec
cmpsb
pop
aad
push
mov
iret
mov
int3
repnz
mov
or
mov
popf
pop
mov
jnp
xchg
sub
pop
push
ret
sub
adc
cwtl
fs
into
je
iret
dec
xor
cmc
pop
stos
ss
stos
cmc
gs
add
aaa
je
cmc
dec
int
sub
ljmp
cli
xchg
dec
mov
ret
sbb
cmp
cmp
flds
xchg
pusha
cs
add
aam
in
xchg
push
xchg
pop
movsb
pusha
outsl
icebp
bound
aam
and
sub
flds
pop
pop
add
pop
mov
mov
out
mov
mov
and
lahf
mulb
cmp
or
cmp
lods
jle
imul
xor
out
ja
int3
test
repnz
adc
movsb
adcb
jle
aas
inc
mov
mov
insl
xor
test
and
pushf
mov
sub
cld
mov
cmp
aaa
repnz
ljmp
das
xor
xor
dec
hlt
sbbl
dec
dec
mov
jg
f2xm1
fwait
or
in
mov
nop
bound
in
cwtl
aas
outsb
shrl
jb
subb
lock
lock
sub
in
sub
int3
mov
adc
nop
cmpsl
and
lcall
aam
pop
arpl
pushf
cmp
mov
fs
and
ds
out
cmpb
aas
push
ds
shll
scas
sub
mov
test
cwtl
roll
mov
mov
hlt
add
mov
jl
cmp
lcall
mov
ljmp
adc
mov
cmp
out
pop
fcmove
fdivrl
xor
cmp
stos
or
hlt
lods
idivb
rclb
lds
pop
les
out
sub
in
push
insb
lcall
test
movl
inc
push
mov
std
das
push
fsub
es
mov
mov
sbb
sub
xor
sub
ret
adc
mov
pop
into
data16
add
repnz
je
shll
add
enter
jbe
adc
je
dec
sti
push
add
pusha
xlat
xor
outsb
fsubr
cmp
sub
add
ret
int3
mov
cmp
lahf
xor
sar
add
lods
or
ds
add
jl
mov
cmp
bound
xor
iret
js
cmp
cmc
sbb
std
xchg
mov
stos
adc
mov
add
ror
push
test
push
mov
adc
sub
cmp
lcall
xchg
sub
add
adc
aas
xchg
or
out
mov
pop
pop
ljmp
fwait
sub
adcb
mov
pop
ds
pop
cmpsb
adc
mov
lcall
scas
or
mov
das
fdivrl
ds
pop
stos
and
push
sbb
dec
sbb
push
fsubl
iret
mov
xor
cmpsl
pushw
pop
mov
in
cld
pop
inc
fdivr
sti
cli
adcb
adc
lahf
rcrb
arpl
sub
xlat
mov
xor
sarb
pushf
add
pop
in
sub
mov
dec
mov
inc
xorl
mov
pop
cmc
cmp
jg
cld
rcll
xlat
dec
cmp
aas
pop
dec
mov
test
sbb
sbbb
sub
pxor
fcomps
pop
jbe
adc
ds
xor
inc
adc
mov
adc
cwtl
adc
sub
pop
mov
ljmp
mov
push
les
or
jl
pop
xor
cli
dec
xchg
pusha
pop
or
aam
pop
cltd
mov
push
pushf
rorb
mov
or
push
inc
inc
fwait
xor
lods
hlt
xchg
dec
hlt
pushf
dec
mov
push
push
ja
xchg
sub
xor
in
repnz
xor
mov
sbb
lret
daa
lock
inc
dec
pop
ficomps
sub
sbb
in
cwtl
in
pop
mov
sbb
jmp
test
mov
xor
mov
rorb
adc
insb
and
ret
movsb
dec
lods
xchg
call
xchg
les
xor
repnz
mov
or
cmc
scas
mov
lcall
adc
xor
out
adc
mov
sbb
loop
lods
mov
ds
jle
push
sar
push
or
add
sar
pop
sbb
cld
aam
movsb
lret
sbb
hlt
sbb
mov
sets
movsb
movsb
mov
sarl
mov
adc
data16
ljmp
push
mov
sub
jmp
mov
lea
add
cli
adc
push
rcrb
in
push
mov
lcall
jmp
aas
pop
addr16
push
or
out
cmp
jl
movsb
inc
xor
adc
pop
cmp
sub
xchg
nop
push
xchg
cmpsl
pushw
pushf
mov
mov
xchg
adc
or
push
pop
push
adc
sarb
fs
repz
inc
data16
nop
jno
cbtw
jp
adcl
jge
mov
call
je
mov
add
mov
jl
in
shlb
bound
lods
xor
lock
insb
arpl
fwait
aam
pop
push
icebp
ret
and
xchg
jp
cwtl
das
fisttpll
adc
loopne
inc
arpl
push
cld
repz
data16
testl
add
jp
adcl
jge
repnz
call
and
add
ds
hlt
cmp
mov
or
mov
movsb
in
in
lcall
test
ss
xor
lcall
loop
cmp
pop
add
into
sub
push
or
test
les
mov
aam
out
adc
repz
push
dec
test
cmp
push
dec
ljmp
call
movsb
sub
out
xchg
xchg
push
jl
insb
inc
cmp
in
dec
fsubr
sarl
and
dec
in
insb
jmp
shrb
cmp
getsec
add
popl
sbb
pop
icebp
lock
mov
popf
push
repnz
nop
push
test
int3
mov
push
mul
hlt
mov
xor
les
jl
mov
mov
cmpsl
jmp
xor
fs
movsl
push
dec
fs
loop
mov
or
cmpsl
mov
or
fidivrs
mov
cwtl
push
xor
les
sub
fs
pop
sub
sbb
mov
cld
xor
les
pop
ljmp
sbb
adc
mov
mov
and
pop
inc
adc
or
or
dec
mull
sbb
cmp
add
and
pop
je
mov
push
cmp
inc
es
mov
pop
bound
inc
push
xor
insb
arpl
aam
imul
mov
sub
push
ds
push
inc
mov
hlt
push
inc
cmpsl
pop
jb
hlt
pushf
xor
push
mov
popf
inc
push
xchg
jbe
pop
mov
insb
fistps
popf
test
in
or
pop
es
mov
jl
add
jb
lods
stc
push
inc
repz
aad
aas
adc
xor
sti
xor
cwtl
shrb
sbb
dec
or
push
add
add
or
cld
stc
clc
leave
and
mov
jle
rclb
mov
jo
into
inc
jne
fs
call
hlt
int3
jb
lret
jp
shl
cltd
test
clc
lock
push
insb
xor
adcb
sbb
pop
shll
sub
lods
dec
mov
dec
and
push
adc
sbb
inc
jmp
rolb
jmp
js
jge
les
pusha
jmp
fdivr
fisttpll
xor
xor
les
add
jecxz
adcb
mov
add
sti
imul
mov
push
imul
xchg
loopne
sub
test
iret
icebp
cwtl
ret
not
les
xor
inc
jno
sub
mov
cmpb
lock
cmpsl
cmpsl
imul
jo
lret
jnp
iret
int3
ds
out
gs
in
ja
dec
pop
xor
cmp
dec
adc
pop
mov
hlt
int3
inc
inc
adc
sub
pop
and
ret
mul
mov
sbb
pop
push
fdivr
sti
lcall
and
mov
shlb
out
fwait
sub
das
mov
stc
cmc
ret
add
repz
das
js
sarl
addb
mov
mov
fisubs
add
cmpsl
int3
add
lcall
cli
hlt
ja
mov
sbb
and
int
and
push
loope
mov
or
inc
lock
sbb
sbb
mov
inc
cmp
sbb
js
lret
ljmp
xor
fcoml
xchg
adc
scas
popl
sbb
pusha
dec
roll
dec
ret
gs
adcb
jns
dec
sti
xor
lds
shlb
or
leave
xchg
stos
jno
insl
shlb
or
mov
mov
mov
ss
andl
repz
and
icebp
clc
jmp
in
mov
lahf
pop
sub
inc
pop
jmp
mov
fisttpl
cli
test
dec
pushf
loopne
lret
stos
dec
scas
fs
mov
aam
mov
push
cmc
mov
push
roll
jae
and
inc
pop
fistpll
gs
push
sub
sahf
aaa
enter
jge
xchg
insb
test
enter
stos
push
out
scas
and
adc
dec
les
je
rorb
add
jbe
fstpl
mov
cmp
cmpsl
aam
fs
push
mov
ds
div
test
pusha
mov
loopne
lods
ja
test
mov
daa
jle
xchg
lahf
roll
inc
arpl
mov
push
fisttps
xorb
xchg
lahf
pop
mov
xchg
mov
mov
pusha
mov
adc
xor
add
jbe
jp
fisubrl
aad
jecxz
cli
push
or
mov
in
inc
and
sbb
rclb
push
dec
loop
push
sub
xchg
mov
and
mov
je
cmp
imul
popa
xchg
lea
mov
das
pop
mov
mov
sub
aam
pop
lds
jp
mov
aad
repnz
movsb
add
ljmp
xchg
rcr
pop
inc
ljmp
mov
mov
popa
lods
mov
pop
orl
xlat
loopne
aad
dec
test
push
clc
xor
cmp
lods
cmpsl
and
fisubrl
add
xor
mov
call
cmpsl
xchg
or
mov
js
cmp
mov
ljmp
fimull
mov
mov
fiadds
xchg
lret
call
popf
shlb
push
loopne
xchg
lahf
dec
sub
cmp
mov
sub
lcall
xchg
sub
nop
adc
mov
aas
repnz
aas
lret
rcl
aas
rorb
adc
fs
subb
mov
repnz
pop
fsub
mov
dec
push
mov
cwtl
rcr
push
cwtl
rol
and
ljmp
popa
pusha
sbb
cmp
stos
dec
push
je
xor
push
iret
xchg
mov
sub
cmp
push
or
jp
adc
out
mov
xchg
in
push
inc
sub
mov
cmp
sub
shl
orl
adc
hlt
fidivs
adc
or
xor
xchg
or
adc
and
shl
sub
mov
or
negb
mov
sarl
imul
pop
pop
or
and
cmpsl
icebp
or
out
push
inc
and
dec
push
push
hlt
mov
imul
daa
mov
add
pop
cmpl
lods
sub
hlt
dec
es
or
cmp
and
cmp
mov
adc
lcall
ror
outsl
push
stos
shrb
loopne
ja
xchg
loop,pn
lods
sub
sbb
cmp
lods
add
inc
jo
cli
ds
sub
cmovg
test
dec
sub
clc
int3
xor
adc
dec
xchg
mov
and
lock
push
sub
adc
adc
mov
sbb
cld
divb
sub
outsb
and
out
adc
es
adc
fmull
jge
or
sub
xor
cmp
repz
outsb
sub
mov
sti
sti
jno
inc
mov
in
add
lods
popf
cmpsb
arpl
push
hlt
mov
pop
sahf
xchg
jo
jge
jg
repz
add
jge
pop
xor
sti
mov
xorb
test
or
lahf
hlt
sbb
sub
inc
int3
data16
cmp
test
sbbb
stos
aam
push
inc
dec
ret
adcl
mov
mov
dec
into
jle
add
push
jbe
push
adc
and
dec
xchg
mov
int
mov
loop
inc
loopne
sub
add
stos
movsl
sarl
push
hlt
cmpsl
pushw
cld
mov
je
mov
dec
daa
or
popf
cmpsb
arpl
hlt
mov
je
sub
mov
dec
mov
ret
cld
mov
cwtl
rcll
rcrl
sub
repnz
ljmp
into
jle
test
sub
nop
push
cli
dec
popf
xchg
data16
into
push
mov
lock
clc
adc
xchg
adc
push
xchg
dec
xchg
in
jle
and
add
dec
or
loope
clc
ja
clc
into
jle
inc
fdiv
pop
or
lock
jge
add
jmp
and
dec
pminsw
les
test
out
outsl
push
jecxz
les
ds
mov
fcom
shrb
add
jle
and
add
dec
cmovp
xchg
mov
cmp
das
outsl
data16
push
ja
mov
les
or
push
inc
aad
and
fistl
sub
cs
popa
lret
push
movsl
test
cmp
jge
mov
clc
jle
pop
lret
out
mov
push
and
into
ljmp
stc
sub
xor
push
iret
xor
clc
popf
xchg
jle
add
fsubrl
inc
je
and
add
or
push
ljmp
push
rorb
rcll
inc
push
repnz
mov
stos
int3
cmp
mov
out
sub
pop
in
cmp
pusha
lods
in
add
cld
test
movl
or
addr16
mov
movsb
mov
mov
pop
mov
movsb
fs
xchg
stos
xlat
cmp
mov
mov
mov
push
fs
jle
lret
test
frstor
mov
pop
adc
push
movsl
mov
pop
sbb
mov
adc
dec
jo
inc
cmp
mov
inc
inc
loope
aam
aas
scas
out
inc
pop
jne
cs
daa
das
movl
xchg
inc
adc
sub
fsub
sub
fs
mov
xchg
out
jp
adc
cmpsl
mov
mov
in
rolb
in
imul
lods
jp
cltd
mov
mov
in
push
shrb
dec
cmc
cmp
rcr
add
sbb
cmp
pop
es
dec
inc
cwtl
dec
out
or
fnstsw
push
hlt
pop
jb
mov
rorl
push
imul
imul
fwait
aam
pop
ds
aam
dec
mov
add
fildll
pushf
stos
addl
add
ljmp
pop
sub
or
test
not
les
push
addl
fwait
into
add
stos
cmp
fwait
mov
adc
aas
jb
in
ret
xor
mov
mov
stos
insl
dec
xlat
test
mov
dec
xor
fiaddl
mov
mov
les
in
dec
dec
in
mov
mov
sarb
push
aam
inc
xchg
mov
fimull
add
push
pop
push
movsl
test
int3
divl
scas
into
push
mov
lock
clc
adc
pop
fxch
xor
mov
into
or
mov
daa
push
sbb
mov
pop
pop
mov
fistl
add
mov
add
outsb
dec
sbb
mov
cmp
pusha
arpl
mov
fucomip
xor
cmp
sqrtps
mov
icebp
leave
fcom
and
loopne
inc
or
adc
and
dec
iret
mov
fs
lods
xchg
cmp
push
loope
jle
push
mov
or
clc
call
push
inc
in
aam
pop
add
addr16
fwait
sub
or
sbb
add
mov
sub
adc
aas
movsb
lods
jle
movsl
mov
jb
loopne
pop
jbe
mov
lcall
cwtl
mov
mov
lods
add
cltd
adc
mov
je
pop
xchg
mov
push
xor
mov
pop
sbb
adc
je
pop
arpl
cld
repz
inc
ret
pushf
stos
xorb
test
orl
lock
jns
add
rorl
add
push
mov
test
les
cmpsb
addr16
xchg
adc
sub
movsl
or
shlb
in
imul
cltd
mov
xchg
pushf
movsb
add
xor
je
into
jmp
inc
fmull
repnz
jmp
dec
loope
and
movsl
mov
pop
mov
cld
pop
orb
fs
dec
add
stos
stc
sub
xor
inc
dec
adc
popa
mov
jns
or
add
stos
jo
push
fs
arpl
sub
repz
inc
ret
sub
xorb
test
orl
lock
mov
mov
mov
push
and
pushw
sub
cmp
stos
mov
lret
out
addr16
loopne
gs
xchg
mov
dec
fistpll
ret
inc
aad
cmpsb
mov
or
sbb
add
xor
sti
cmp
jno
push
in
aam
sbb
daa
mov
dec
cmp
jp
xchg
cwtl
shll
sarl
sub
repnz
sti
or
ds
sub
xor
test
or
rorb
repnz
push
add
mov
lock
das
push
ja
mov
mov
or
aas
and
lret
sub
test
into
idiv
or
lret
dec
inc
jl
inc
jo
jp
xchg
dec
dec
cmp
pusha
sbb
jg
std
fisttps
pop
stc
jmp
jb
popa
stos
mov
fsubr
inc
push
cmp
pop
sbb
dec
sub
in
pop
pop
int
test
and
xchg
es
inc
pusha
and
dec
dec
cmp
stos
mov
stc
pop
mov
mov
mov
into
dec
mov
add
add
mov
add
popf
je
dec
or
mov
and
cmp
jle
dec
adc
cmp
aam
lods
xorb
ds
cmc
aaa
mov
push
jns
cmpsb
shr
mov
enter
stos
mov
add
jle
and
add
dec
or
out
dec
out
or
fnstsw
push
pop
lods
hlt
pop
push
mov
in
mov
mov
xor
shlb
mov
mov
inc
aad
and
fistl
sub
cs
inc
or
sub
inc
fdivr
cmp
pop
hlt
adc
les
cmp
add
dec
inc
into
jle
test
into
nop
cmp
loope
cwtl
push
jb
or
loope
aaa
into
dec
mov
adc
pop
jbe
push
push
jbe
push
in
mov
mov
inc
mov
push
xor
inc
mov
cmpsb
mov
xchg
test
add
stos
repz
arpl
push
sub
fs
sub
insb
mov
rcrl
dec
out
sub
cmpsb
arpl
hlt
mov
ja
cmpsl
test
xchg
sbb
push
mov
cmp
add
mov
sub
mov
adc
cmp
enter
lods
imul
ljmp
inc
mov
add
in
imul
data16
mov
rolb
xor
sbb
jmp
inc
fmull
repnz
loope
cmpsl
int3
cli
enter
daa
addb
pop
sub
adc
aas
mov
fistl
fdiv
pop
mov
lds
or
dec
adc
mov
jge
and
pop
ficoml
ret
xor
sbbb
mov
sbb
xor
lea
iret
pop
lock
jmp
lret
in
and
into
push
mov
adc
pop
adc
aas
push
ds
xor
inc
and
nop
gs
xchg
push
cmpsl
inc
js,pn
mov
lock
ds
xchg
movsb
xchg
dec
scas
lds
sub
pop
outsl
and
pop
lcall
or
jo
addr16
in
movswl
testb
cmp
ret
xchg
mov
jmp
int3
push
lods
loopne
dec
ret
sbb
push
xchg
xor
sbb
xor
cli
std
jo
pop
lods
das
out
inc
stos
test
jmp
inc
fmull
mov
lret
in
movsl
sbb
dec
xchg
test
ja
test
adc
loope
pop
and
xor
lods
scas
push
movsl
mov
fwait
shr
mov
fucomip
sub
pop
or
dec
outsl
mov
adc
dec
mov
movl
or
mov
aas
sub
xor
test
cmc
fwait
nop
pop
imul
shrl
fwait
clc
or
or
mov
push
and
stos
insl
mov
xchg
dec
cmc
fwait
daa
sbbb
sub
ljmp
add
push
out
aas
int
push
lret
lea
cmp
xchg
xchg
mov
xchg
lret
jp
stos
mov
dec
les
sbb
ret
xor
fistpll
pop
lret
data16
or
fisttps
cmp
in
fidivrs
xchg
scas
insb
movsb
mov
add
es
outsb
xor
push
or
mov
imul
cbtw
jp
cltd
adc
mov
mov
out
sub
pop
cmpb
mov
ret
in
xor
xchg
out
mov
jle
adc
push
add
add
ds
push
shrb
dec
or
loopne
sub
xor
pop
jae
push
popa
mov
fs
lcall
mov
xorl
cwtl
shrl
mov
in
push
int
call
mov
loope
addb
push
jb
pop
dec
xor
dec
dec
mov
adcb
sub
mov
push
adc
mov
loope
inc
jno
into
rcrl
pop
outsl
pushf
iret
inc
lds
jnp
lods
jl
ret
inc
outsl
sbb
loopne
dec
popa
add
les
test
pop
push
adc
push
inc
rclb
rcr
test
loopnew
pop
cmpsl
push
bound
adc
icebp
sbb
nop
vmwrite
stc
push
push
push
mov
adc
out
lea
jecxz
in
jg
pop
outsb
cmp
lcall
dec
cmp
pop
cli
jae
mov
jle
xor
adc
int
movsl
dec
xchg
decl
mov
push
les
sbb
in
cmp
loop
inc
pop
insb
out
lahf
shl
icebp
xchg
ficoms
jbe
push
pop
push
test
ljmp
cmp
popa
imul
mov
out
mov
jecxz
inc
or
mov
div
xchg
daa
popa
shrb
lock
or
cmp
lods
mov
clc
pop
jb
mov
subb
sbb
pusha
cmp
pop
push
out
jg
sbb
shll
and
jmp
iret
mov
and
xchg
jo
fmull
or
push
xchg
add
adc
insb
mov
mov
frndint
fdivrl
sbb
cmp
stos
scas
dec
lahf
mov
and
sub
mov
push
loopne
dec
xchg
dec
lds
pmulhuw
pop
inc
cmpsb
int
movsb
stos
negl
pop
outsb
repnz
and
inc
pushf
fisttpll
test
pushw
test
pop
push
lock
mov
or
test
adcl
loop
jl
lret
pop
sti
jmp
mov
ljmp
mov
aas
fwait
bnd
sub
push
lds
shrl
or
add
add
fisubrs
dec
gs
cltd
or
pminsw
jecxz
cmp
mov
pop
aad
pop
adc
or
mov
enter
div
xchg
shll
push
push
fcomi
aad
cmpsl
inc
repz
repz
add
adc
mov
das
aas
fmul
or
rcr
testb
ljmp
add
shll
mov
push
or
repz
sub
mov
loop
sub
int
pop
movsl
mov
scas
mov
btr
fistps
cmp
push
outsl
jg
add
hlt
xchg
test
jb
ljmp
ret
xor
jp
sbb
xor
stos
inc
mov
cwtl
jmp
fwait
je
jp
insb
and
imul
test
or
pop
cmp
add
incb
loop
cmp
imul
jb
imull
popf
xchg
cmp
and
ret
mov
mov
jg
xlat
add
movsl
mov
cmp
pop
std
cs
adc
push
icebp
test
clc
xchg
aas
dec
and
xchg
or
ds
ja
inc
pop
outsb
mov
in
subb
ds
stc
mov
mov
clc
lcall
ss
aad
sub
sub
cmpb
stc
cli
test
bound
les
mov
cmp
mov
cmp
scas
in
pop
in
nop
das
enter
xchg
or
subb
inc
mov
or
loopne
xor
push
out
add
xchg
inc
js
decb
cmp
mov
fistpll
fwait
mov
or
mov
fdivs
test
les
sub
dec
jl
adc
xchg
sub
sbb
inc
jbe
daa
hlt
inc
cmp
rcrb
push
jno
dec
add
adc
ja
testl
sahf
mov
test
xor
add
mov
ret
sub
cmpsl
rcl
adc
mov
lods
pop
jp
pop
adc
adc
arpl
pop
out
outsl
sub
aad
pop
in
fisubl
pop
inc
jecxz
std
das
mov
aas
dec
bnd
out
ljmp
jns
mov
cwtl
test
aas
sbb
aas
sub
jb
dec
sar
xor
ret
fucomi
push
push
ljmp
lods
aad
aad
push
test
mov
mov
dec
mov
sarb
fiaddl
cs
sub
lahf
push
mov
les
out
ljmp
or
push
jmp
xchg
hlt
in
xor
cmp
or
xor
xchg
test
add
ror
pop
inc
mov
adc
call
push
jg
xor
inc
push
xor
dec
push
xchg
or
xchg
mulb
shlb
xor
sbb
pop
xchg
data16
xor
push
je
dec
jbe
mov
les
aad
jge
jmp
sbb
mov
lcall
testl
push
push
mov
ds
shll
mov
sub
and
fdivrs
mov
and
mov
or
test
insb
jmp
adcl
mov
fistpl
push
mov
sbb
pop
inc
mov
push
or
les
repnz
push
push
adc
cmp
sub
mov
inc
mov
repz
enter
cmpl
icebp
mov
lock
jmp
sub
sbb
lcall
and
dec
sti
push
add
push
sub
adc
leave
cmp
fldcw
and
sub
not
aas
pop
or
repz
mov
push
movd
out
push
sub
mov
jle
lock
xchg
cli
cld
add
push
xlat
call
xchg
push
lret
repz
xchg
shlb
jae
fmul
adc
inc
mov
fstps
mov
mov
stc
andl
outsl
push
xchg
add
push
sub
cmp
pop
lock
cltd
inc
stos
sub
or
mov
shr
cmp
adc
jae
pop
push
loop
cs
xchg
add
mov
dec
aad
test
mov
fcoms
cwtl
xor
pop
rorb
inc
sub
or
sub
aam
add
fcmovne
cmp
scas
adc
xorl
xor
push
add
insb
mov
loopne
mov
aas
cltd
testl
daa
lds
jmp
shlb
fucomp
outsl
lcall
arpl
repnz
ret
push
mov
mov
push
jp
xor
push
xor
xchg
xchg
mov
push
negl
loope
out
xchg
xchg
and
cwtl
or
pop
cmp
xchg
sub
test
fidivrl
fisubl
cmp
jmp
push
adc
adcb
fidivrl
adc
xor
xchg
test
cmp
adc
cmp
mov
push
jmp
fisubrs
adc
mov
mov
mov
push
xor
ds
mov
in
out
sub
xor
push
sti
addr16
arpl
lea
rorl
pop
call
jp
sub
dec
xchg
and
scas
test
jecxz
jb
shr
or
mov
fadd
iret
pushf
test
inc
inc
cs
pop
or
sbb
ret
push
popf
ljmp
inc
cmp
cmp
loopne
dec
push
sub
add
mov
popf
jge
loope
inc
and
inc
rclb
add
add
loope
dec
nop
or
dec
jecxz
mov
lods
cltd
mov
pop
xchg
addb
sti
dec
test
xlat
cmpsb
xor
gs
subb
mov
ljmp
mov
test
ds
push
jl
mov
jno
in
xor
cli
xor
stos
fisubrl
cmpsl
mov
mov
js
mov
shll
in
fstl
cmp
mov
sub
xchg
hlt
sub
ret
push
dec
mov
pop
cli
sub
sub
cmp
dec
cmc
jp
xchg
pop
push
ljmp
icebp
pop
and
sahf
or
cmp
or
mov
xlat
cld
mov
push
jo
jle
xchg
lds
push
inc
push
jge
and
pushf
adc
sbb
je
xchg
mul
nop
aad
sub
pop
aad
push
pusha
jb
mov
inc
push
mov
in
mov
stos
adc
jo
add
setb
aas
scas
mov
sbbb
cmpsb
jo
xchg
pop
push
sub
mov
dec
sahf
stos
in
xchg
and
jecxz
add
mov
jmp
dec
fcmovu
and
push
hlt
or
mov
mov
push
push
push
cmp
in
mov
data16
mov
add
pop
jecxz
mov
call
out
pop
imul
or
hlt
movsb
add
hlt
cmp
xor
push
xchg
inc
jecxz
xor
inc
call
hlt
test
fs
jns
fdivr
or
decb
mov
out
in
jb
arpl
xor
pop
in
xor
xor
xchg
sbb
mov
or
jo
push
in
adc
jle
dec
cmp
loope
out
sbb
bound
and
push
pop
mov
test
fsubrs
jo
lret
popa
add
es
xor
push
in
sub
push
sbb
pop
xchg
xchg
cmp
gs
xchg
jne
rorb
jns
cmpb
sbb
mov
sub
sub
mov
xchg
stos
sbbl
pushf
xchg
sti
cmc
icebp
inc
push
aam
testb
jle
cld
hlt
je
test
outsl
or
push
inc
mov
mov
call
pop
shl
mov
fsubrs
jnp
jge
inc
ljmp
cmp
jecxz
inc
fnsave
hlt
cmovl
adc
dec
ja
cmp
lret
jns
xor
xor
pop
mov
test
cli
xor
out
outsb
mov
les
lds
fadd
movsl
fsubs
testb
jnp
or
cmpsb
push
xcrypt-cfb
cmpsl
in
popl
pop
nop
outsb
in
push
insl
sub
inc
sbb
xchg
js
nop
icebp
mov
icebp
nop
pop
cmp
adc
fldcw
out
jno
stos
daa
or
adc
or
cmp
icebp
lret
icebp
ljmp
pop
dec
jae
insb
pop
nop
pop
lds
or
or
jb
mov
add
shrl
or
cmp
xor
push
xchg
lock
adc
fs
cmp
shll
movsb
inc
clc
movb
leave
xlat
dec
mov
lock
add
stmxcsr
xor
dec
lret
xor
loope
leave
cmc
sbb
ret
push
xor
int
pop
jl
rolb
inc
aas
sub
adc
dec
test
imul
out
cmp
cltd
ret
mov
fdivrl
pop
cmp
add
fcmovu
mov
jns
and
fmul
les
mov
repnz
cld
xchg
cmp
mov
repnz
out
repz
jnp
mov
or
stc
jbe
or
mov
out
cmpsb
stos
ret
and
jns
hlt
cmp
ret
and
popf
stc
push
ret
xchg
scas
cwtl
out
ja
ret
loopne
mov
jbe
mov
xor
movsl
test
loop
mov
or
inc
xor
out
inc
mov
arpl
loope
nop
repz
jge
lea
cli
insl
hlt
jg
outsb
sbb
hlt
xchg
call
dec
and
push
sbb
push
pushf
xor
push
sub
lahf
clc
xchg
stos
fcoms
sub
ds
mov
xchg
insl
fiadds
das
xchg
lock
in
sub
adc
scas
pop
push
sub
xor
scas
jmp
or
jp
mov
xorb
fisubrs
addb
mov
iret
ja
aam
out
inc
mov
es
xor
and
mov
cmp
pop
enter
xchg
lods
xor
loopne
aam
lods
sbb
iret
or
mov
mov
inc
in
push
cmp
mov
pushf
jl
push
sbb
dec
or
cmp
or
sarl
jne
ret
loope
bnd
cmpsl
cmp
cmp
cmp
inc
imul
push
clc
xchg
shll
enter
rcll
shlb
mov
js
mov
in
sbb
add
sub
fldcw
xchg
outsb
pop
ret
cmpsb
ret
pop
addr16
jge
mov
mov
ret
jb
lock
cmpsb
je
inc
in
cmp
ljmp
sarl
sub
push
inc
jae
mov
cmpl
sub
in
pop
sti
addr16
ret
shll
stos
and
inc
lahf
sahf
mov
dec
mov
push
and
mov
aas
push
out
push
cmp
outsl
push
hlt
jmp
bound
aas
cltd
or
lods
imul
mov
cmp
and
sbb
fdivr
push
cli
or
pop
mov
pop
push
push
sub
cmp
in
and
out
ss
dec
movsb
or
into
das
rclb
pop
arpl
insb
ljmp
cmpsb
mov
jecxz
lods
push
xor
rcll
inc
ss
out
push
mov
cwtl
out
roll
push
out
fistpll
and
jecxz
pop
xor
pop
add
mov
mov
inc
imul
push
ret
sbb
lods
cmp
xor
inc
pop
adc
pushf
xchg
mov
or
xchg
xor
outsl
sti
gs
outsl
shrl
push
adc
pusha
lods
add
jmp
adc
jo
cmp
std
add
jl
mov
jecxz
aam
gs
lahf
push
movsb
outsb
jle
xchg
cwtl
cmpsb
xchg
nop
pop
stos
inc
cld
mov
imul
iret
test
mov
mov
lahf
ljmp
ds
jo
fldenv
inc
mov
clc
lock
xchg
lock
stos
adc
xchg
dec
mov
inc
ret
xchg
out
dec
or
pop
adc
mov
ficomps
cmpsl
mov
cmp
hlt
mov
mov
outsl
sub
xchg
mov
pop
push
repz
dec
inc
insl
or
pusha
mov
cmp
stos
or
mov
pop
mov
mov
and
adc
jmp
add
jl
mov
dec
inc
xchg
push
jp
push
adc
push
push
stc
sbb
inc
and
jmp
sub
push
les
pop
arpl
mov
or
xchg
jmp
loope
mov
in
mov
fists
mov
popf
or
ljmp
xchg
cltd
adc
in
xlat
add
gs
jmp
arpl
mov
jo
icebp
pop
js
adc
pop
sbb
ss
jl
in
sub
adc
adc
add
jmp
fists
sbb
insl
xlat
shr
ds
or
pop
insl
sbb
jnp
xchg
mov
add
loopne
sahf
mov
xor
mov
xlat
or
mov
xchg
mov
xchg
insl
or
and
xor
cmp
jns
jo
cmpl
push
lret
rcll
ja
sbb
imul
js
cmp
and
iret
fdiv
ljmp
and
cmp
orl
stc
push
inc
jae
and
into
subl
or
pop
rcrl
test
rorl
add
fdivl
cld
cmp
lret
lretw
push
cld
call
mov
lock
fistps
pusha
sub
je
les
lret
cmp
pop
daa
xor
push
adc
inc
dec
aam
les
mov
sbb
adcb
xor
ja
sbb
inc
or
enter
jmp
lock
in
hlt
jo
cmp
ja
sub
cmp
test
subl
into
mov
inc
ret
cld
or
arpl
loopne
lret
stos
sub
cmpsl
dec
hlt
int
mov
mov
bound
ror
add
inc
pop
push
sbb
jne
aas
mov
push
hlt
loopne
adc
dec
mov
imul
fstpt
pop
sahf
dec
add
aad
sbb
sbb
and
and
fbstp
mov
xlat
mov
cmp
int
push
popa
or
jle
push
out
dec
stos
mov
setb
add
push
out
adcl
add
add
je
push
shr
xor
or
cmp
rclb
stc
jbe
ljmp
push
inc
sub
cmp
scas
mov
mov
ds
cmp
push
inc
dec
int
push
lods
inc
in
sahf
out
push
in
xor
lret
mov
pop
bound
adc
stos
xor
inc
cmp
out
mov
mov
adc
addb
in
fdiv
and
shlb
cltd
dec
ja
mov
adc
push
push
and
lods
mov
popf
notl
push
push
inc
int
mov
cmpb
inc
dec
xor
ljmp
mov
push
lahf
add
fdivrl
push
outsl
stc
mov
cmp
mov
je
pop
inc
int3
push
add
daa
add
xlat
inc
dec
ss
lock
jnp
clc
add
lret
pop
inc
in
sub
or
inc
shrl
mov
mov
cmp
idivb
push
mov
lahf
inc
adc
das
cli
adc
sub
test
jb
jl
insb
sub
mov
push
adc
scas
xor
ja
cmp
ss
xor
shll
and
lods
fistps
sbb
xlat
test
pop
movsb
xor
bound
dec
inc
mov
fimuls
movsl
pop
int3
pop
pop
mov
jg,pt
xchg
xchg
data16
push
lock
ret
pop
insb
pop
dec
xor
add
adcl
adc
mov
add
jno
inc
test
test
dec
test
inc
outsb
ret
lock
dec
fidivrl
mov
xor
lods
mov
xchg
divl
xor
dec
cmp
loopne
dec
js
add
aaa
out
mov
mov
shr
js
sub
fists
push
mov
cmp
mov
cmp
repnz
inc
daa
outsl
dec
rcr
add
and
xchg
xchg
daa
cmp
in
test
sbb
push
xchg
icebp
in
ret
imull
cmpsl
pop
xor
pop
cmc
xor
lock
movsl
bound
inc
dec
test
in
mov
add
repz
and
mov
xchg
dec
fsubrl
rcrl
adc
push
push
jb
test
testb
cmp
pop
inc
ja
xchg
dec
in
in
add
and
pop
aam
pop
movl
shlb
popf
xchg
push
cmp
insl
ret
jno
imul
or
shl
push
data16
cmp
pop
add
pop
dec
fadds
cmc
adc
stos
out
pop
mov
or
mov
bound
sbb
clc
in
jns
iret
out
inc
pop
leave
or
out
jo
clc
addl
shrd
in
rclb
sbb
mov
and
adc
adc
adc
jo
repz
icebp
cli
cmp
pop
imul
and
push
push
fdiv
mov
xor
adc
aad
icebp
test
lea
cmp
jl
xlat
pop
or
aas
jne
mov
je
cmp
faddl
lcall
outsb
shr
ljmp
jno
jp
leave
cmpb
enter
daa
inc
fldenv
mov
cmp
mov
fwait
cmp
shl
mov
loope
pop
jl
fcomi
xchg
mov
bound
dec
inc
push
or
lahf
insb
in
sub
push
pop
insb
cmpsb
xchg
dec
push
mov
and
jle
ja
cwtl
in
adcl
push
and
adc
leave
decl
stos
mov
icebp
mov
push
pop
das
xchg
sub
pop
test
mov
or
and
sahf
inc
and
fnstsw
aam
or
xor
loope
mov
or
mov
xorb
pop
inc
or
mov
jg
outsl
jge
jecxz
inc
push
and
enter
icebp
movsb
hlt
ret
cld
out
lret
dec
xchg
sarl
xor
xchg
jp
aam
inc
fadds
aas
in
jp
cmpsb
leave
imul
jo
orb
insb
push
lret
cmp
loop
xchg
daa
mov
cld
aas
inc
jmp
pusha
repz
in
xor
dec
dec
jecxz
in
mov
or
cld
push
leave
int3
push
pushf
cwtl
stos
cmp
addr16
cmc
lock
xorb
test
xchg
xorb
test
pop
jb
dec
ret
inc
ret
xor
mov
push
cmp
jbe
popa
dec
mov
ret
push
pop
mov
dec
mov
dec
mov
xor
push
orb
cmpsl
arpl
jp
adc
lret
fsubrs
test
add
and
mov
xorl
mov
pop
scas
adc
jp
sbb
in
inc
adc
in
andb
popf
or
sahf
xchg
sub
ss
cs
xor
outsl
jnp
inc
lods
daa
inc
xchg
inc
jmp
arpl
or
push
mov
int
fsubr
mov
cmpsb
test
dec
ljmp
mov
mov
jl
push
adc
sub
and
mov
or
push
cmp
or
mov
add
aaa
dec
andl
aam
push
fdivl
xor
mov
push
sbb
jbe
aas
pop
clc
sarl
enter
test
cmc
ljmp
ljmp
inc
test
lret
jge
movsl
scas
bound
shlb
subl
xchg
pop
fldl
and
cmp
popa
mov
dec
iret
test
xor
and
or
orb
movsl
clc
push
repnz
imul
aam
mov
inc
pushf
cmp
sbb
fnstsw
inc
fnsave
leave
jl
inc
pop
add
push
orl
mov
hlt
or
mov
pusha
mov
aam
push
clc
mov
jbe
and
sub
pop
pusha
dec
rol
outsb
or
add
jle
cltd
cli
bound
fnsave
push
and
cmp
inc
mov
stos
pop
sub
sbb
add
pop
ret
repz
clc
push
das
ret
pop
jmp
and
xchg
cwtl
lret
inc
out
in
cmc
push
xchg
xchg
or
xchg
fstpl
mov
fwait
in
outsb
jno
push
add
add
dec
mov
mov
insb
icebp
and
insl
and
cmp
jns
and
repz
out
cmp
xor
or
loop
lcall
jmp
sarl
cs
inc
data16
inc
push
ret
outsb
in
lcall
shrb
cmp
gs
xchg
mov
aaa
fistpll
sarb
jb
xchg
sub
int3
dec
shrl
ffreep
clc
push
dec
add
test
movsb
and
xor
jb
lret
pusha
mov
repnz
and
sahf
jecxz
es
aad
cmc
cmpsb
inc
jns
lahf
sbb
inc
inc
in
lods
jae
pushw
mov
mov
insb
mov
add
lock
fstps
lcall
and
add
xor
add
push
mov
loope
movsl
mov
dec
push
mov
pop
mov
out
stos
xor
push
lock
into
mov
adc
push
ret
or
or
lret
ja
push
cld
fisttpll
repz
cmp
hlt
or
mov
xor
xchg
xlat
test
bound
jb
shr
add
loope
jb
insb
jns
cs
enter
xchg
xchg
and
sbb
int3
xor
setp
and
push
mov
and
mov
dec
int3
mov
dec
insb
and
inc
mov
add
and
hlt
cmpsl
add
ja
or
xchg
nop
add
loopne
adc
xchg
movsb
add
cmpsb
cmpsl
daa
or
iret
push
ja
loop
add
aad
jecxz
stc
and
arpl
lret
aad
xlat
xor
or
daa
inc
stc
cltd
xchg
mov
inc
fdivp
xor
mov
and
dec
pop
jmp
xchg
pop
in
sti
das
mov
inc
mov
orb
push
add
mov
or
cmp
mov
icebp
pop
dec
setg
cmpsl
loop
cmp
sub
and
loopne
add
dec
mov
or
cmp
stos
cmpsb
arpl
sti
out
insb
push
sbb
jo
xchg
pop
je
push
rcrb
jno
iret
xor
sub
xor
inc
add
mov
pop
sbb
adc
out
dec
adc
sbb
jb
ljmp
sub
out
xor
lahf
pop
cmpl
or
sbb
fcoml
lods
mov
es
mov
adc
ds
push
sub
and
stos
mov
xchg
dec
sbbl
imul
cmp
sti
jne
push
insl
adc
dec
shll
mov
loope
and
popa
les
mov
add
mov
jno
test
push
ficomps
outsb
cwtl
or
xor
push
movsl
xor
sarb
gs
adc
cmp
push
movsl
mov
xor
fisubrl
mov
pop
xchg
mov
push
out
mov
jmp
and
cmpsb
or
sbbl
movsl
pop
jnp
inc
iret
subl
out
mov
daa
jno
inc
out
dec
iret
xor
insb
xor
pop
lret
stos
jae
fs
mov
jle
adc
aam
repnz
aas
int3
jg
mov
sub
pop
dec
leave
les
cmpsb
lret
push
jno
sub
xor
adc
jo
les
mov
popf
nop
rcr
in
aad
shlb
push
loop
fs
rcrb
hlt
mov
lcall
ja
mov
nop
shrb
push
cld
movsb
cmp
cmp
and
incl
or
mov
pop
lret
adc
ljmp
xorb
movsl
dec
sbb
jmp
inc
fmull
repnz
jmp
adc
push
sbb
sub
pop
mov
cmp
or
jp
pop
and
mov
jno
ret
sub
push
test
cmp
add
add
adc
lcall
xor
leave
jmp
inc
inc
sbb
sbb
int3
and
mov
insb
sti
adc
mov
sbb
dec
push
mov
lods
addr16
xchg
xor
es
out
pop
out
or
out
aam
cmpsl
sti
mov
dec
clc
add
stos
out
imul
arpl
inc
push
inc
push
mov
dec
test
lcall
push
mov
cwtl
mov
insl
sub
outsl
push
imul
push
adc
sub
lret
ficoml
inc
mov
push
popa
mov
inc
lods
mov
xor
je
lods
stos
js
and
ret
cltd
add
ds
divl
mov
jb
fs
arpl
push
pop
mov
jne
in
fnstsw
xchg
lret
mov
mov
outsb
push
aas
movsb
push
and
loopne
push
jg
loop
sub
call
jb
mov
jbe
cmp
out
insb
stc
out
cs
movsb
push
mov
es
stc
cmp
repz
clc
inc
les
mov
mov
inc
push
cmc
cmp
scas
stos
lock
aad
in
mov
jl
call
mov
push
stos
test
jo
xchg
add
fdiv
int
rorb
repz
lcall
mov
lock
movsb
negb
cmpsb
adc
cli
in
mov
int
mov
loope
repnz
inc
or
pop
jns
das
inc
fwait
pop
test
sbb
cwtl
mov
xchg
mov
or
dec
sub
xchg
fildll
xchg
cmp
cltd
jne
aas
std
inc
push
outsl
mov
shl
in
cmp
jg
mov
mov
in
adc
aas
and
sub
std
and
out
cmp
dec
nop
sbb
aam
mov
xor
out
addr16
fwait
sub
xor
add
adc
or
je
push
adc
inc
push
test
les
xchg
xchg
std
cmp
ret
inc
nop
lock
scas
test
movsl
sbb
inc
xchg
push
mov
mov
adc
mov
mov
or
xchg
jmp
or
jmp
jge
mov
fidivrl
cmp
pop
push
xorl
pop
xor
out
lds
cld
and
hlt
push
sahf
lret
stc
push
subl
fildl
into
bound
pop
sub
ds
cmp
sub
in
mov
aas
cmp
lods
inc
and
gs
cmc
ret
push
ljmp
sbbl
pop
dec
push
hlt
repnz
dec
loopne
out
rcl
pop
dec
jbe
in
mov
push
sbb
icebp
inc
fcmovnbe
stos
inc
cmpsb
or
xor
xor
call
sahf
and
rclb
enter
test
xchg
push
sbb
or
mov
inc
jo
jp
jno
pop
jb
repz
push
lcall
mov
or
mul
pop
faddl
push
loop
sub
add
pop
and
push
push
xorl
popf
jle
cmp
stos
fcoml
inc
jg
ljmp
mov
add
sub
lret
in
sub
out
push
clc
xor
insb
sbb
cmpsb
andb
mov
pop
xor
and
inc
push
sub
xor
sbb
int3
pop
dec
inc
lcall
sub
movsb
push
xchg
xchg
ljmp
movsb
ficomps
fxch
mov
testb
dec
adcl
pop
mov
into
jnp
inc
ret
adc
push
add
pop
jns
add
add
enter
clc
mov
les
aad
pop
insb
sbb
cmp
sub
iret
test
dec
jno
shlb
test
rcl
inc
or
aam
imul
test
pop
subl
cmp
jecxz
mov
outsl
mov
pop
pop
pop
mov
js
lods
and
xchg
pop
subl
cli
push
dec
inc
xchg
push
loopne
repz
jns
adc
lods
mov
mov
pop
mov
ret
fcomip
test
mov
repz
lock
pusha
aad
dec
mov
xchg
mov
js
xlat
mov
cmpsl
pop
lcall
ds
lcall
ljmp
mov
push
outsl
aad
add
ljmp
mov
rorb
and
jo
adc
push
cmpb
pop
sar
pushf
push
xor
rcrb
fbld
push
cmp
fcmovnu
inc
inc
mov
in
jnp
push
out
in
loop
mov
packsswb
sub
jp
js
bound
pop
lods
mov
inc
psrad
push
sub
aaa
cltd
scas
and
inc
fnstsw
lds
movsl
test
xor
fmull
js
adc
jecxz
mov
and
add
lcall
mov
mov
or
js
lods
lods
out
js
push
adc
repz
es
push
xchg
les
jecxz
jo
lret
loopne
addb
pop
add
ret
mov
jo
jg
push
mov
or
push
hlt
pusha
fiaddl
cli
add
sub
push
lea
push
imul
push
inc
cmp
out
loop
pusha
in
loop
mov
sub
or
push
arpl
mov
xlat
cmp
inc
mov
and
jle
sub
xor
jae
outsb
in
dec
xlat
scas
jae
movsb
xor
inc
ret
mov
adc
test
insb
lods
test
push
pop
mov
push
push
cmc
inc
mov
shll
in
ds
pop
adc
sub
mov
jl
les
mov
ds
push
clc
cld
adc
inc
mov
pop
mov
ds
inc
dec
xchg
mov
pop
pusha
es
daa
cmp
xchg
mov
pop
ret
dec
jp
pushf
movsb
jns
mov
jecxz
dec
push
clc
test
add
cli
jo
sub
pop
dec
mov
and
dec
aas
ret
and
out
scas
in
push
mov
sahf
call
sbbb
sahf
shll
aam
lds
push
mov
pop
mov
pop
add
push
je
mov
xchg
pusha
shll
std
pop
pop
int
cmc
sbb
pop
cmp
mov
cld
aam
push
loop
call
rcll
and
rol
shr
cwtl
int3
sti
je
enter
mov
mov
lret
lahf
xchg
nop
mov
add
sub
and
sbb
pushf
jns
scas
aad
and
cmp
sti
xchg
jmp
clc
popa
fidivs
dec
add
xor
enter
aam
and
rol
addr16
shll
jl
lahf
inc
and
mov
push
push
aam
into
stc
lahf
fwait
fs
adc
jbe
out
cltd
sub
popa
mov
aas
mov
outsl
gs
pop
jge
gs
inc
and
mov
and
jnp
icebp
mov
mov
pop
test
push
hlt
sbb
andb
imul
mov
adc
cmp
mov
imull
xchg
iret
enter
and
mov
xor
adc
inc
fs
in
ss
mov
out
jp
insl
je
imul
popa
and
jp
fcmovne
push
cmp
loop
pop
sar
push
push
aam
sub
popf
mov
adc
fidivrs
mov
pop
fdivr
aam
adc
lods
ret
in
jnp
sbbb
xchg
lods
xor
test
add
mov
loope
fldl
fdivl
xchg
cmp
adc
xchg
dec
in
es
aaa
test
inc
call
mov
jns
loop
pop
pop
push
xchg
movb
pop
test
call
dec
ficoml
lret
scas
or
and
ja
das
out
jmp
sbb
inc
rcrl
js
mov
jmp
rcrl
add
int3
testb
subb
mov
xchg
subb
mov
sbb
aaa
sub
insb
jno
fidivrl
pop
jle
and
xor
inc
arpl
dec
push
sub
ljmp
xchg
call
dec
pop
mov
adc
clc
mov
shrl
jle
push
gs
mov
push
jecxz
test
call
push
add
dec
outsb
mov
pop
dec
jge
lds
mov
mov
movsb
vmwrite
or
lea
dec
xchg
outsl
sbb
jno
in
jbe
dec
lea
and
insl
lahf
call
jbe
fistpll
inc
or
xchg
and
orl
mov
or
test
imul
js
jae
xchg
xchg
add
push
into
hlt
fdivl
mov
and
sub
js
ret
dec
mov
mov
call
out
ret
dec
add
icebp
mov
or
or
cs
jns
add
jns
pop
jns
or
out
ljmp
jge
idiv
xchg
cmp
pop
add
lock
push
add
outsl
in
in
cltd
mov
ja
lret
lock
cmp
push
or
push
mov
jns
loopne
das
mov
mov
sub
mov
mov
lds
fistps
dec
adcb
je
cwtl
dec
cmp
stos
jp
xchg
lcall
adc
stos
jno
ss
xor
sbb
push
xchg
mov
or
push
cmp
imul
arpl
dec
mov
add
dec
lock
jnp
stos
stos
jl
lods
jle
loope
fwait
pop
imul
mov
jnp
or
push
popl
mov
cmp
icebp
insl
or
je
xchg
nop
fs
xor
push
lds
pop
je
pop
int3
and
xor
imull
ja
pop
ret
jne
or
cli
shlb
xchg
popf
mov
hlt
mov
or
rorb
clc
or
les
mov
ljmp
hlt
out
sti
jge
xchg
sub
mov
in
lcall
push
in
call
nop
testl
sub
push
push
rorb
ret
addb
xchg
mov
jecxz
jle
imul
stos
in
into
xchg
test
hlt
popf
insb
lret
les
divb
mov
adc
jge
fdiv
adc
cmp
xchg
mull
adc
xchg
mov
sbb
cmpsl
jmp
imul
jle
cmpsl
add
jae
scas
cld
xor
in
pop
aad
rorl
xorl
mov
mov
hlt
xor
jbe
dec
int
sub
add
pop
dec
mov
pop
mov
mov
push
push
std
mov
mov
pop
cltd
xor
je
push
and
jne
pusha
ficompl
dec
pop
lcall
xchg
rcll
popa
sbb
add
add
pop
xor
ja
adc
cmp
xchg
stos
rcl
inc
dec
std
or
push
rolb
lock
pop
pop
sub
incl
or
jno
ds
mov
clc
mov
inc
xchg
pop
push
stos
fwait
mov
clc
and
in
fistpll
inc
inc
or
sbb
push
pop
leave
cld
pop
je
pushf
icebp
leave
push
push
fistps
bound
or
outsl
push
dec
rcr
dec
push
addr16
insb
popa
add
fs
ljmp
or
aad
jns
cmpsb
dec
pop
aad
aam
ljmp
shrl
repnz
dec
in
fistpll
mov
inc
cmpb
subl
iret
mov
outsl
orb
add
jae
lods
dec
iret
fwait
pusha
xchg
push
insl
aas
xchg
hlt
mov
xor
mov
mov
push
cmp
dec
xchg
addb
sbb
ljmp
out
rolb
aad
fists
stc
pop
push
pop
fsts
aad
imul
push
push
stc
bnd
dec
sbb
outsl
test
xchg
dec
or
outsb
mov
pop
ret
arpl
mov
sti
push
add
pop
mov
aas
push
and
sub
int3
std
xor
in
mov
sar
jmp
and
pop
mov
test
sbb
mov
out
dec
xchg
mov
mov
cmp
out
arpl
in
mov
cltd
mov
mov
fisttps
inc
pop
add
dec
pop
movsb
dec
inc
std
cmp
stos
inc
scas
or
xor
mov
subb
inc
push
push
adc
xorl
pushf
rcr
lods
insl
xor
fmull
adc
push
fdivs
and
sbb
push
cli
jmp
or
out
in
imul
loope
inc
lret
cmp
xorl
cld
sbb
movb
mov
nop
mov
pushf
daa
push
insl
aad
dec
adc
scas
stos
mov
inc
fdivl
mov
mov
inc
sub
popf
lcall
rolb
mov
test
les
lret
push
and
ret
push
adc
inc
sub
enter
stos
pushf
stos
push
mov
rorb
mov
mov
pop
adc
bound
mov
jecxz
jle
push
sub
sbb
popa
rcll
iret
dec
shrb
adc
in
repnz
icebp
push
cmp
dec
push
and
pop
or
pop
lcall
mov
dec
sub
mov
pop
aad
sub
and
push
xchg
orl
cmpsb
add
pop
cmpsl
pop
add
jo
test
mov
sbb
das
test
in
les
pop
mov
mov
stos
cltd
mov
aad
or
pushf
dec
cmp
sub
or
xor
xchg
jmp
add
dec
insb
sbb
movsl
mov
or
int
mov
or
int3
xchg
les
pop
dec
lahf
mov
divb
fld
call
hlt
in
and
incl
xchg
les
cmp
push
loop
or
jl
mov
stos
orb
jl
js
push
ljmp
xor
test
pop
adc
push
cmp
cmp
bound
rorl
mov
or
pop
dec
jo
fucomip
out
int
sbb
iret
and
loopne
aaa
ss
fdivs
movsl
fsubrl
data16
adc
rclb
mov
dec
inc
scas
xor
scas
jle
cmp
lret
dec
add
adc
loopne
faddl
cs
movsl
mov
movsl
imul
mov
inc
xchg
das
sub
push
jecxz
mov
lret
inc
nop
jmp
lea
lahf
cmp
loop
push
sbb
inc
pop
sub
mov
repnz
push
pop
pusha
mov
insb
dec
in
inc
daa
jo
ljmp
add
or
jg
fimuls
mov
push
xchg
mov
mov
mov
lcall
add
push
pop
push
aas
xor
loope
mov
adc
es
not
outsb
mov
mov
or
mov
in
mov
add
xor
sub
in
ja
ret
outsb
inc
push
push
push
push
xchg
xlat
push
xor
div
xchg
insb
lcall
mov
dec
subb
outsb
addl
jle
cmp
xor
sti
adc
xchg
pop
imul
sub
cmpb
mov
jg
test
push
ss
xor
inc
lods
scas
adc
xor
push
pop
lea
movsl
jecxz
adcb
sub
mov
and
mov
cltd
and
xchg
addl
ja
and
or
clc
ss
pop
xor
inc
pop
dec
lods
outsl
mov
mov
sub
xchg
xchg
and
xchg
xchg
cmp
ljmp
cld
push
cmp
stos
cmp
adc
dec
mov
pop
sub
dec
xorl
imul
ds
sbb
rclb
cmp
out
cmp
nop
inc
jae
shrl
xchg
pop
push
mov
dec
push
ds
inc
pop
jmp
pop
cmp
ljmp
enter
cmp
jo
push
ficoms
xor
xchg
dec
add
repz
and
cmpsb
jg
mov
mov
ds
notb
inc
cmp
jl
push
repz
adc
mov
mov
jge
sarb
xlat
ja
mov
scas
mov
insb
stos
pop
inc
mov
cmc
fs
lock
jl
sub
mov
pop
fcoms
out
mov
fsubrl
lcall
push
std
xor
sbb
pop
repnz
inc
sbb
mov
xchg
push
mov
xchg
loopne
aas
xor
pop
stos
dec
mov
repnz
jo
lock
jp
sub
mov
dec
mov
push
sbb
dec
dec
bound
push
mov
mov
js
pop
cmp
xchg
out
call
adc
iret
sub
cwtl
enter
mov
pushf
fdivl
mov
pop
push
outsl
sbb
out
addb
or
pop
pop
rcrb
bnd
aas
pushf
jae
pop
repz
or
aas
adc
push
insl
leave
sbb
hlt
pop
cmpsl
incl
jmp
out
or
addr16
ss
sub
mov
pop
cmp
sub
inc
sub
enter
ficompl
enter
or
cld
shl
xchg
push
scas
scas
cmp
sub
cld
lret
imul
pop
xlat
push
mov
movsb
call
fistpll
lods
sbb
cs
test
push
cmp
mov
pop
out
mov
mov
cmp
out
rep
cmp
aas
ja
mov
or
and
or
sbbl
mov
add
daa
int
inc
push
roll
loope
inc
scas
inc
add
xor
andb
sbb
leave
test
mov
cltd
mov
pop
adc
dec
es
mov
js
notb
cmpsb
out
xor
mov
mov
int3
icebp
sti
xchg
jp
dec
rcll
mov
test
push
jl
clc
ja
pop
jmp
adc
and
cmc
jb
pop
pushf
adc
inc
je
xchg
rorb
xor
out
aam
inc
test
xor
loopne
xchg
xchg
jp
gs
add
and
sub
push
in
or
mov
sahf
push
mov
xchg
mov
fstcw
mov
fwait
inc
mov
test
sub
icebp
call
sbb
cmp
sbb
sbb
xchg
or
leave
stos
test
adcb
fldpi
inc
cmp
out
or
sbb
sub
mov
and
mov
push
pop
in
cs
dec
jo
scas
ret
push
leave
test
sbb
es
jbe
loopnew
inc
jne
sbb
ss
std
in
stos
sbb
xor
add
in
lods
lods
lock
adc
fsts
add
test
add
jge
pop
pusha
xchg
xlat
jno
lret
adc
adc
dec
enter
mov
repnz
movsl
xchg
xor
pusha
add
or
adc
mov
bound
fisttpl
sub
je
repz
lds
jae
xchg
mov
push
inc
sub
mov
es
and
xchg
or
and
ret
cltd
cs
test
xor
insl
testb
push
dec
pushf
or
mov
dec
push
push
dec
pop
and
mov
or
cs
adc
xchg
sbb
into
sub
leave
push
fcmovnu
rolb
mov
xor
inc
sub
or
mov
adc
cmp
imul
inc
adc
dec
rolb
cmc
arpl
dec
loop
mov
push
push
lock
pop
inc
stos
test
les
mov
rcrl
pop
fs
out
nop
mov
dec
rclb
sahf
jmp
fs
dec
fcomps
popf
jge
mov
cmp
sbb
cmp
out
or
xor
and
add
mov
ficomps
jae
test
cmp
dec
aas
inc
hlt
test
mov
or
imul
lcall
inc
push
pop
adc
popf
sub
dec
mov
rorl
cmp
ljmp
mov
mov
xchg
mov
out
xchg
push
mov
dec
cmpsb
sbb
aam
fimuls
movntq
mov
aas
ja
mov
ss
sbb
jb
lock
addr16
mov
mov
or
test
cs
cmpsl
mov
or
sbb
add
inc
dec
mov
leave
hlt
inc
push
xchg
addr16
frstor
xlat
or
fs
mov
fs
rolb
repnz
mov
popf
aam
push
pop
push
inc
jnp
pop
popa
sbb
in
je
insl
xchg
jg
aam
sbb
ret
test
out
lcall
push
mov
sbb
out
rolb
cmp
xchg
inc
jge
cld
cmpl
out
cmpsl
and
pop
xchg
out
or
in
js
pop
push
je
adc
pop
and
mov
pushf
leave
or
mov
loope
sti
jae
mov
xor
mov
xchg
iret
outsl
lret
jle
push
and
pop
jge
stc
stos
popa
test
jno
push
cmpsb
xor
cmpsb
shll
std
inc
mov
or
inc
fidivrs
out
sub
ss
xchg
mov
jl
and
popf
sub
mov
imul
testb
outsb
and
aam
pop
mov
mov
mov
mov
inc
xchg
lahf
push
stos
lcall
mov
int
mov
shrl
mulb
push
ljmp
outsl
push
addr16
inc
ss
loope
and
test
push
lahf
clc
gs
sbb
imul
icebp
xor
xchg
pop
sbb
in
sub
call
pop
mov
ss
add
mov
cmp
pop
adc
roll
das
ljmp
pusha
cwtl
xor
pop
leave
xor
ret
mov
mov
in
mov
test
fsubrs
addl
pop
repz
inc
bound
sub
pop
es
cmp
add
outsb
aaa
stos
jne
jecxz
sti
sub
jno
push
mov
mov
aad
aad
inc
dec
sarb
clc
sub
roll
jnp
out
in
insb
mov
mov
mov
outsb
je
sbb
insb
popa
cmp
mov
shll
mov
and
insb
adc
pop
cmc
dec
mov
push
jo
cmp
aad
add
xlat
cmp
leave
decl
je
xchg
rcl
xor
out
loop
mov
lahf
iret
and
test
mov
mov
pop
into
call
mov
clc
mov
int3
mov
mov
push
fs
outsl
les
add
lock
jo
int3
lods
sub
lcall
sub
call
add
pop
and
sub
dec
add
aad
pop
pop
adc
scas
cmpsl
aam
fwait
inc
iret
adc
push
pushf
push
sub
aas
add
and
hlt
mov
and
pusha
arpl
dec
sbb
nop
mov
scas
in
andps
and
add
in
and
cld
cmp
inc
push
sbb
xor
cmpsb
push
outsl
int3
jo
mov
and
jb
in
clc
mov
mov
adc
lret
out
xorb
insb
adcl
lahf
jns
sahf
push
lcall
int
cmp
cmp
mov
xchg
in
push
inc
jge
out
adc
dec
subb
push
and
sti
xchg
mov
les
insb
and
inc
inc
pop
pop
in
dec
pop
call
cltd
jno
dec
xor
loope
xor
sub
dec
pop
or
mov
ret
ja
int3
cmp
cltd
mov
push
pushf
mov
cmpsl
push
insb
inc
loopne
jle
add
ja
mov
mov
sub
mov
mov
ret
sbb
repnz
fadds
inc
lea
add
cwtl
ds
hlt
jl
jbe
xchg
jne
jle
stos
test
jmp
inc
fmull
repnz
jmp
int3
cli
mov
lret
pushf
jo
push
mov
dec
arpl
popf
pop
arpl
popf
je
stos
mov
in
nop
push
ss
call
mov
ljmp
jmp
in
push
mov
add
and
mov
push
shrb
les
mov
sub
test
call
xorb
sub
jl
rcrb
mov
mov
xchg
pop
mov
enter
hlt
movsl
mov
out
pop
and
cmpsb
xchg
inc
cs
adc
cmc
mov
in
jecxz
jb
mov
lahf
es
nop
int3
fadds
je
out
add
adc
cmp
push
nop
mov
xchg
daa
sub
test
mov
pusha
pop
or
jmp
dec
mov
rorb
aam
xor
cmp
ret
shl
xor
add
je
xor
ss
into
movsl
sbb
insb
and
cmp
lea
dec
shrl
pop
sbbb
pop
mov
xor
dec
xchg
not
jae
xchg
or
jno
pop
inc
add
mov
mov
add
lock
cld
mov
ror
fimull
adc
or
or
idivl
and
xchg
sarb
sub
movsb
fsubrs
add
movsl
aas
add
xchg
shll
ljmp
lods
cmc
lcall
dec
cmp
subl
test
cli
and
ret
aad
mov
je
in
loopne
in
xchg
pop
lret
ret
cmp
jmp
shll
stos
mov
std
mov
into
call
pushf
test
and
iret
inc
mov
std
sub
popf
shrb
insl
call
out
lahf
dec
push
cmp
ficompl
andl
push
lret
sub
pusha
or
add
mov
cld
pop
ret
pop
fimull
xor
adc
add
push
pusha
pusha
imul
add
repz
and
push
xchg
data16
pusha
rorb
hlt
fs
cmp
jno
push
mov
adc
or
mov
cmpsl
mov
xchg
push
mov
mov
lock
mov
xchg
xchg
lret
mov
fcmovnbe
rorl
lods
loop
je
shrl
sub
pop
adc
mov
roll
stos
mov
mov
fadd
fdivrs
dec
fcoml
cli
lcall
cmp
push
shll
mov
icebp
sub
push
and
jne
js
mov
dec
sub
idivb
and
nop
out
daa
xor
fs
mov
imulb
jnp
in
jmp
xchg
dec
movsl
daa
and
lcall
xlat
pusha
pusha
mov
pop
fwait
pushf
sbb
and
mov
sbb
int
sub
mov
ja
enter
push
jb
pop
xchg
push
and
xchg
in
xor
push
mov
fldl
push
cmpsb
or
mov
nop
jb
push
fsubrp
push
jae
mov
xchg
add
mov
notl
test
mov
sub
in
je
and
jl
in
jge
cltd
push
fstpl
scas
dec
in
dec
sub
hlt
addr16
sub
addl
js
ss
pushf
adc
fcomi
aad
push
ljmp
insb
adc
xchg
sbb
loopne
cmpsl
fcomps
fstpt
scas
hlt
enter
pop
movsl
mov
adc
loope
sarl
cmc
repz
cld
dec
sbb
inc
pop
or
sub
lock
gs
sub
xchg
xchg
jg
cld
std
dec
rorl
sbb
mov
xor
pushf
fdivr
pop
call
jp
loope
mov
repnz
and
xchg
daa
in
fstl
fildl
mov
in
icebp
notl
divb
push
rol
add
ljmp
repnz
mov
test
or
inc
and
or
fisttps
or
or
enter
daa
mov
and
sbb
mov
and
dec
sub
enter
stos
test
les
aas
push
jecxz
subb
mov
push
cld
cltd
xlat
bound
jnp
jmp
xor
cli
pop
jae
in
jns
ret
push
push
inc
xor
fdivl
xchg
faddl
imul
int3
addr16
loop
inc
shll
les
ds
or
sub
adc
leave
xor
mov
mov
jb
cld
sub
fdivr
mov
dec
xor
dec
sub
mov
inc
sub
push
and
scas
sub
xchg
add
das
xor
push
lock
loop
je
call
push
mov
or
xor
mov
adc
sbb
lcall
fistps
xlat
movsb
fdiv
mov
nop
js
inc
leave
xor
aam
cld
js
test
xchg
sahf
adc
xor
push
xor
test
lahf
dec
mov
test
cmpsb
jp
adc
mov
sbb
cs
ficompl
pusha
cltd
mov
loop
xchg
dec
lret
mov
xchg
int3
shll
stc
andb
sub
test
fimull
and
xor
leave
dec
ljmp
sbb
and
push
test
mov
cmp
ja
dec
addl
push
std
lret
arpl
xchg
rolb
add
push
decb
out
call
and
popf
or
add
pop
push
mov
test
sbbl
mov
int3
iret
xor
mov
adc
jl
xchg
aas
adcl
out
pop
shrl
aas
jo
dec
jp
mul
inc
repz
dec
jne
push
and
mov
adc
lea
iret
adc
bound
aas
fmuls
ret
xor
pop
enter
mov
cltd
xchg
xor
jmp
sub
mov
jmp
pusha
or
xlat
in
mov
mov
xor
cmp
pusha
sbb
jo
and
fnstsw
int3
adc
mov
pop
pop
xlat
in
bound
inc
ret
call
in
out
mov
mov
leave
in
mov
enter
sbb
or
popf
mov
ja
ret
mov
cmp
mov
test
movsb
adc
or
lret
je
mov
sbb
push
adc
add
or
je
sbb
test
ds
outsb
mov
fcmovu
aam
mov
mov
adc
and
inc
cmpsl
mov
inc
loopne
bound
stos
xor
adc
test
push
add
xchg
sub
pop
jmp
xor
insl
or
fnstcw
push
loope
xor
adc
daa
adc
xor
stos
fisttpl
ljmp
out
aam
sbb
push
hlt
mov
iret
pop
lods
push
lret
test
pop
and
int3
or
push
lds
jo
or
jb
mov
roll
in
or
sbb
fcmovbe
fimull
adc
nop
jno
ja
sbb
mov
lahf
and
aas
add
in
ds
jns
push
pop
sub
ljmp
movsb
add
enter
mov
lods
or
adc
fimull
xlat
mov
xlat
out
xor
push
in
inc
addr16
inc
push
add
or
sub
sbb
out
icebp
cld
mov
mov
dec
sub
loope
fs
add
sbb
out
adc
mov
sub
cmpsb
and
mov
cmp
in
sub
loop
cld
std
test
push
call
mov
or
mov
xor
je
pop
rcll
in
push
rolb
fisttpl
xchg
or
mov
rorl
arpl
mov
in
cwtl
ja
add
add
ret
ja
add
lcall
and
test
or
pop
dec
out
mov
add
dec
aas
pop
popa
mov
lock
xor
jmp
cwtl
pop
jns
pop
dec
push
mov
sub
loopne
int
ss
sub
jl
loope
out
ret
add
shrb
dec
fsubrs
lret
pop
adc
scas
adc
or
inc
stc
dec
aam
stc
mov
pop
fists
psubd
out
push
aaa
fnsave
pop
loop
cmp
sbb
xchg
and
mov
bound
mov
xor
add
adc
or
imul
adc
arpl
fcompl
cltd
and
adcb
xchg
enter
test
adcb
add
or
and
enter
int3
dec
leave
mov
pop
out
frstor
les
nop
imul
mov
imul
hlt
add
es
add
mov
cmp
jp
xchg
mov
out
mov
hlt
sub
hlt
push
dec
hlt
in
jmp
in
sbb
and
mov
out
jle
push
dec
dec
ds
sub
fwait
ret
scas
outsb
sub
call
mov
rcrl
rorb
test
xorb
mov
xor
or
mov
push
movsb
adc
dec
mov
out
cmp
fdivl
cmpsl
mov
stos
dec
or
in
in
add
cmp
cmp
and
mov
cld
cmp
dec
mov
mov
jno
mov
cmp
outsb
test
or
outsl
fs
out
pop
inc
add
pop
pop
outsb
jl
xor
repz
cmpsb
les
mov
aam
adc
or
pop
icebp
loop
xchg
inc
dec
sbbb
jae
in
dec
aas
shrb
fisttpll
lds
fiaddl
pop
in
out
push
jp
mov
in
repnz
pop
mov
repnz
stc
fisubl
ret
xor
mov
pushf
or
imul
mov
ja
cltd
nop
cwtl
enter
dec
push
inc
js
fimull
dec
rcr
mov
cmp
mov
in
call
mov
pushf
xor
push
push
pop
jne
cmp
lahf
nop
loopne
ficoml
pusha
adc
sub
sbbl
test
inc
adc
mov
lds
fisubl
add
sbb
test
cmpsl
cwtl
loope
or
jns
lret
mov
scas
outsl
ds
cmpsb
sbb
xchg
push
xor
aas
div
fcomps
xchg
jp
dec
sub
pushf
mov
push
mov
int3
les
push
jmp
xchg
mov
mov
push
bound
mov
fists
ss
sti
insb
popa
inc
push
pop
test
sarb
mov
add
sub
stos
or
mov
xchg
in
sub
lahf
and
xchg
jge
xorl
and
sbb
fs
cmp
and
sti
and
test
xor
aaa
outsl
into
sti
pop
or
stos
jb
fnstenv
imul
sbb
cltd
jne
outsl
xchg
cld
cltd
xchg
in
cltd
movsb
js
cmp
adc
push
push
mov
mov
cld
pop
mov
fsubs
mov
adc
in
xchg
repnz
fstp
add
or
lcall
pop
subb
imul
xor
testl
je
or
sbb
xchg
jo
dec
mov
insb
mov
mov
mov
lods
push
push
or
mov
add
mov
test
fnstenv
das
push
mov
push
cmp
cld
repz
pop
fdivrl
rcll
test
lods
sbb
mov
cmp
push
lahf
loope
mov
loop
mov
es
mov
xchg
mov
jl
es
push
mov
add
test
inc
data16
cmp
das
sbb
fisubl
mov
stc
jmp
popa
mov
les
adcb
inc
mov
xchg
and
cmpsl
pop
push
cltd
push
negl
push
cmp
and
sahf
orb
sbb
jb
roll
lahf
add
push
lea
decl
mov
adc
xlat
cmp
fpatan
mov
imul
lods
adc
test
jl
jbe
sahf
enter
in
push
pop
les
push
pop
xor
and
lock
fsubs
jae
cmp
testb
clc
mov
stc
adc
pop
and
cld
jle
test
mov
mov
mov
xor
pop
cmp
mov
cmp
mov
sbb
push
lods
mov
jge
mov
cmp
lcall
ret
aaa
scas
inc
rcrb
xlat
mov
in
clc
movsl
xlat
push
sub
add
addl
fwait
aad
add
ss
pop
pop
xor
bound
shlb
or
iret
pop
aad
sub
mov
push
jo
and
sub
pop
jae
frstor
test
pop
jb
rorb
push
out
dec
pushf
push
mov
imul
xchg
jp
cltd
mov
inc
xchg
jo
or
dec
jmp
jle
add
ja
mov
mov
pop
dec
xor
ret
out
xor
nop
xor
dec
cld
out
jo
push
push
add
xchg
fdivrl
pop
int
mov
fs
test
shrl
std
pop
pop
int
repnz
mov
es
push
dec
loop
arpl
popf
pop
arpl
pushf
cmp
repz
adc
xor
push
aas
xor
rcll
insb
dec
push
pusha
push
pminsw
or
pop
adc
jmp
push
fsubs
mov
mov
mov
mov
cmp
cmp
dec
shrb
dec
mov
icebp
test
mov
or
cmpsb
adc
sbb
data16
int
xlat
cmpsb
adc
mov
call
xchg
pop
push
jmp
cmp
and
fbld
mov
adc
enter
xchg
repnz
mov
xor
fmuls
mov
sub
xchg
and
or
or
xor
shl
dec
and
or
frstor
pop
mov
mov
sarl
cmp
jne
fisubrl
lcall
lret
dec
ja
adc
out
enter
adc
cltd
int3
pop
and
int
sbb
lds
pop
fdivl
fmuls
mov
xlat
aas
xor
fsubrl
je
ja
push
je
dec
jbe
nop
daa
daa
loop
jl
les
sbb
pop
pusha
outsl
push
outsb
pop
xchg
cmp
js
fbld
inc
inc
inc
loope
aam
aas
mov
inc
pop
jne
cs
xchg
loopne
mov
mov
adc
cltd
test
and
and
pop
dec
or
aam
aas
stc
pop
inc
pop
jne
cs
xchg
loopne
fiaddl
mov
jle
pop
iret
pusha
andl
inc
pop
mov
ljmp
xor
mov
mov
xchg
and
add
pop
cli
lahf
xor
test
imul
jbe
push
push
jbe
push
cmp
sub
mov
dec
sbb
cs
sub
and
icebp
xchg
dec
dec
mov
sub
mov
mov
dec
loope
mov
jecxz
inc
cmpsl
gs
fsubrl
aad
cltd
sub
mov
inc
push
mov
scas
and
dec
scas
sub
sub
into
adc
cltd
push
enter
leave
data16
mov
cmpsl
dec
cld
popa
pop
sub
push
in
pushf
bswap
ljmp
jbe
dec
mov
jae
clc
dec
cmp
xchg
mov
mov
inc
mov
loop
adc
xor
int3
int
dec
pop
icebp
cmpsb
push
pop
aaa
inc
rcrb
ret
jae
stos
pop
lahf
je
xchg
xchg
xchg
out
xor
test
cwtl
dec
cmp
push
push
je
adc
pop
sbbb
das
loope
or
dec
or
push
push
mov
xchg
sbb
jmp
inc
std
mov
jno,pt
and
pop
pop
mov
in
dec
sbb
test
daa
jle
test
and
cli
hlt
js
jl
mov
pop
fimull
sahf
ljmp
int3
sub
in
out
stos
jecxz
sar
push
push
dec
ret
adcl
mov
cs
jle
out
xor
popa
stos
mov
sub
pusha
in
sub
push
sbb
add
shl
mov
dec
xlat
test
mov
not
les
sub
sub
and
mov
mov
ljmp
sub
pop
fbld
insl
push
out
jo
push
imul
fcomps
mov
std
cld
and
xor
shll
repnz
or
dec
divb
cwtl
jmp
xchg
pop
jo
inc
dec
ret
sbb
cs
mov
adc
mov
mov
aas
ss
and
fucomip
dec
movaps
mov
es
mov
sub
jo
sbb
dec
jl
xlat
adc
int
outsb
mov
push
xlat
js
adc
cwtl
jbe
sub
out
mov
fcompl
lret
les
inc
xchg
ret
int3
test
aas
pop
es
fidivrl
fadd
mov
mov
push
fcmovb
clc
int3
sbb
in
add
xchg
sub
outsb
jmp
mov
mov
sarb
xor
jge
test
jo
jmp
xor
cmpsl
mov
pusha
mov
int3
pop
mov
fisttpl
xchg
cmpsl
out
adc
mov
movsb
xor
pop
sqrtps
mov
pop
rorl
dec
sub
xchg
cmp
xorb
push
mov
mov
bound
xchg
adc
enter
jae
divl
inc
into
jle
test
and
pop
push
jb
stos
notl
dec
into
clc
int3
sbb
test
push
jbe
push
in
dec
push
imul
or
jno
push
mov
les
inc
xchg
stos
or
push
push
push
jno
pop
jp
cltd
adc
mov
rolb
aad
sbb
push
lahf
sar
call
out
pushf
out
lods
aas
jbe
cmp
xor
insb
inc
orl
test
scas
in
mov
clc
push
call
sti
aas
push
push
inc
stos
lret
dec
lock
je
pushf
add
push
call
sub
orl
sub
insl
cwtl
sub
jb
cmp
and
mov
cltd
jae
jo
mov
mov
test
jl
ljmp
rcll
mov
mov
int3
cmp
mov
mov
cwtl
rol
dec
push
call
and
test
mov
sbb
cmp
push
int
pop
out
and
push
clc
push
call
cltd
jno
dec
xor
mov
push
ljmp
leave
and
stos
out
push
xchg
lret
mov
xor
popf
je
push
cmpsb
sbb
test
jmp
inc
fmull
repnz
sub
jmp
int3
cli
loopne
fisttps
inc
cmpsl
stc
xorb
xor
cmp
mov
rcrl
lret
push
movsl
mov
mov
popa
adc
jle
pop
jne
cs
andl
xchg
decl
sub
mov
sub
mov
adc
cmp
pop
inc
mov
push
sub
in
adc
aas
jl
inc
bound
std
xor
push
fistpl
and
insb
pop
call
jle
sub
out
data16
add
or
lds
sub
fiadds
cmp
inc
inc
fildl
mov
icebp
jp
test
mov
test
sbb
fwait
aad
add
push
jb
xlat
adc
jl
xor
or
fstpt
sti
cmp
mov
xlat
std
xlat
jp
fmull
or
cmp
pop
xchg
leave
loop
test
sub
jg
add
cmp
fistps
call
sbb
pop
xchg
sahf
loopne
lods
mov
inc
jb
sar
pop
xlat
or
fs
cmp
mov
addr16
lahf
nop
sbb
and
adc
ret
xlat
xor
pop
movups
jecxz
jno
fmull
adc
and
mov
out
fwait
repnz
xlat
inc
das
dec
pop
or
mov
and
test
repnz
cmp
cwtl
imul
cmp
mov
dec
push
mov
mov
xor
mov
cmp
jmp
test
inc
ljmp
stc
test
ret
mov
cmpsb
adc
enter
cltd
jno
or
mov
mov
jmp
in
cmpsl
test
mov
popl
sarl
push
pop
cmpsl
data16
mov
mov
imul
xchg
adc
in
cmp
sbb
out
adc
push
enter
inc
in
test
scas
and
jle
adc
xchg
adc
call
mov
pop
mov
push
pop
mov
push
pop
jb
pop
sub
clc
shrl
mov
aaa
push
mov
sub
cltd
lods
push
cmp
mov
jo
sub
ds
xor
mov
push
pop
inc
test
in
pushf
div
and
cwtl
cld
adcb
cld
cmp
pop
sub
and
jno
jecxz
call
cmp
aas
xlat
mov
imul
je
or
add
mov
push
leave
jg
fdivs
mov
nop
outsl
mov
xchg
iret
sbb
sub
add
cmpb
mov
cmp
shll
inc
repz
es
pop
outsl
aaa
in
push
pop
cmp
pop
out
mov
clc
fiaddl
movsb
xor
or
filds
push
lods
or
mulps
dec
jl
jecxz
in
inc
shrb
and
jle
rorb
add
xchg
jmp
lret
lea
mov
mov
mov
dec
jecxz
sar
cmp
jmp
cmp
pop
sbb
sub
insl
aaa
lcall
or
sub
sarb
std
stos
bound
pushf
popl
mov
xchg
clc
or
fcompl
inc
fnstsw
daa
pop
sub
xor
jg
adc
fs
out
push
popl
xor
fwait
pop
cmp
das
outsl
xor
xchg
xchg
xchg
rcrl
xchg
dec
push
jno
mov
adc
mov
push
jb
jge
jo
fistps
dec
adc
jmp
outsb
pop
cmp
lret
pop
clc
cmpsl
fwait
push
in
dec
imul
sahf
inc
nop
add
xor
mov
xchg
jbe
push
in
testl
mov
les
test
jl
xchg
lods
insl
imul
cld
test
dec
pop
jb
fnstenv
punpcklbw
aad
add
cmpsb
xchg
addl
cmp
dec
repz
add
jb
out
mov
sub
cld
mov
rcrl
lcall
je
pop
xchg
mov
xor
jmp
mov
and
in
outsl
fucomi
ja
and
dec
fsubl
inc
or
stc
and
xchg
sub
xor
pop
push
aad
mov
je
add
push
inc
jbe
shrb
pop
imul
test
jbe
cmp
push
dec
mov
daa
push
sbb
or
aas
mov
das
cmc
xlat
es
jb
xchg
lret
dec
inc
lock
inc
jo
push
mov
mov
fisttpl
rcrl
cwtl
jge
repnz
hlt
pop
dec
ret
push
dec
loopne
sbb
push
in
mov
push
cmpsb
jae
mov
push
pop
or
pop
add
jno
jmpw
cmp
ss
mov
jb
and
repz
sub
test
call
sub
lahf
call
fisubrl
ljmp
xchg
xchg
cmp
ss
mov
lret
push
push
das
xchg
fisubs
sbb
jbe
out
sbb
xlat
jbe
xchg
sbb
sbb
ds
xchg
das
in
repnz
xchg
addr16
push
xchg
push
add
mov
sbb
rolb
fwait
ds
ret
xor
enter
int3
mov
insl
mov
fwait
adcb
cmpsb
arpl
hlt
mov
sub
dec
pop
adc
push
insl
and
push
out
movsl
sarb
mov
xorb
push
add
rcrl
and
and
mull
insb
jmp
test
wrmsr
jecxz
in
je
sub
jb
jle
dec
cmpsl
push
mov
sar
pop
push
and
outsb
mov
xchg
das
in
bnd
jb
loopne
pop
jbe
sar
push
xchg
pop
cli
lahf
jl
jle
dec
mov
hlt
pop
cli
cld
mov
out
fistpl
cld
icebp
lcall
rorl
adc
add
out
sub
cltd
xchg
mov
add
mov
pusha
mov
xor
aas
out
dec
mov
mov
pop
pop
add
push
adc
idivb
cmp
inc
adc
sbb
jge
fcomps
add
cmpsb
mov
sbb
add
cmpsb
mov
push
adc
pushf
andb
dec
cmp
mov
imul
ljmp
mov
negb
dec
pop
sbb
mov
xorb
shr
jb
push
in
xchg
push
xor
adcb
mov
popf
jl
in
stc
stos
push
andb
imul
les
js
push
push
xchg
sub
outsb
jmp
mov
mov
sbb
cmp
mov
add
aas
cmpsl
mov
lahf
or
pop
arpl
inc
adc
aas
or
call
lds
push
int
pusha
or
dec
push
jb
subl
mov
cli
pop
mov
sub
mov
aaa
bound
xchg
adc
mov
addr16
stos
pusha
sbb
frstor
adc
cs
dec
cltd
stos
out
je
les
dec
pop
dec
cs
pop
push
add
aam
inc
movsb
jmp
lds
sub
cmovg
cmp
aam
ret
inc
stos
popa
outsl
mov
cwtl
jge
pop
pop
xchg
jno
xchg
sub
loopne,pt
sub
mov
xchg
xchg
hlt
sarb
lods
clc
xor
sub
decb
cmpsl
in
lcall
fmul
mov
cmp
andb
iret
mov
mov
call
cmp
and
xchg
dec
sar
pop
adc
call
mov
cwtl
loopne
and
aas
jbe
in
ss
fcoms
out
jmp
fcoml
pop
in
pusha
push
jb
repz
and
jbe
xlat
xchg
or
add
aas
stc
xchg
je
adc
fsubl
subb
jno
pop
scas
lahf
movsb
repz
cmp
std
push
dec
jecxz
dec
addb
jnp
cltd
pop
dec
push
cmpsb
or
add
int
cmp
out
leave
adc
scas
cltd
and
xchg
sarb
out
xlat
mov
js
idivb
xor
push
mov
mov
mulb
jge
insl
jmp
out
clc
repz
mov
test
mov
mov
push
inc
jo
push
sbb
or
jle
xchg
das
shl
pop
lret
shll
sarb
cltd
mov
ds
sub
sar
push
bnd
mov
or
pop
mov
shlb
orb
jle
xchg
sub
movsl
mov
lods
inc
jno
push
popl
insb
fsub
into
insb
xchg
jge
xchg
pop
cltd
popl
mov
jae
movsl
shlb
fcompl
das
dec
mov
sub
pop
xchg
dec
fisttpll
movsb
adc
mov
sahf
cmp
movsb
sub
dec
cmp
pop
es
dec
pop
adc
push
int
inc
cmp
shr
mov
stos
mov
je
cmp
or
xchg
mov
aas
cmpsb
mov
adc
inc
inc
and
pop
sub
sbb
test
sub
mov
rcll
out
lcall
cmp
in
xchg
inc
push
adc
mov
push
ds
les
mov
pop
aam
dec
inc
loope
cltd
pop
push
and
lea
cmp
std
push
dec
jecxz
mov
or
shrb
jp
popa
jmp
bound
pop
dec
rol
in
jge
insb
jmp
in
lcall
cli
mov
je
cmp
imull
orl
pop
xchg
mov
fidivl
dec
add
push
inc
loopne
bnd
movsb
adc
scas
or
in
mov
aas
jb
pushf
ret
xor
sbb
ja
imul
inc
mov
and
fwait
jno
push
js
data16
mov
std
xchg
into
out
sub
dec
pslld
test
sub
mov
sub
mov
adc
cmp
add
std
and
fwait
jno
insb
jle
xor
ljmp
sbb
pop
stos
pushf
mov
mov
nop
out
jae
leave
jmp
adc
subb
es
jp
cltd
mov
sarl
cwtl
cs
in
xor
mov
fimull
xchg
xchg
sub
pop
pop
lock
xor
outsl
loop
popa
stos
mov
jmp
shrb
stc
loopne
pop
mov
fmull
push
movsb
pop
mov
push
adc
les
pop
or
cld
mov
xchg
arpl
pop
in
sub
mov
adc
fistpll
cmp
push
pop
shlb
lcall
jb
out
ja
add
adc
xor
jg
pop
loope
xchg
pop
arpl
aas
loopne,pn
push
push
int
or
sbb
push
out
in
rorb
adc
lret
dec
fisttps
adc
aam
js
mov
into
in
xor
insl
push
pop
or
subl
pop
push
cli
testb
repz
cmp
test
loope
ds
clc
mov
lds
or
les
test
pop
jb
dec
ret
fsubrs
ret
xor
fstpt
mov
adc
sub
nop
std
push
dec
jecxz
jl
loope
addb
cli
jb
pop
dec
xor
dec
dec
adc
xchg
jo
push
sub
or
sub
push
sub
andl
loopne
clc
cmp
jno
aas
mov
decb
cmpsl
push
jb
adc
rorl
push
cmpsl
xchg
scas
mov
jno
addr16
jecxz
add
mov
cmp
and
shll
daa
cmp
mov
xor
into
adc
inc
and
pop
sub
xor
gs
nop
add
test
pop
push
ud2
test
lahf
clc
mov
aas
ret
fnsave
sbb
ds
fimull
mov
inc
insb
push
mov
mov
loop
push
push
xor
stos
mov
ljmp
lea
out
sub
pop
cmpb
xorl
mov
or
or
adc
jbe
imul
bnd
jge
testb
cli
jbe
xchg
and
add
dec
or
enter
fcompl
ret
mov
mov
call
sbb
inc
lret
jle
xchg
das
in
repnz
jecxz
add
xchg
and
lds
xchg
pop
cli
lahf
loopne
jle
dec
push
mov
pop
push
sbb
adc
pop
es
xor
aam
inc
lock
push
jno
push
jbe
scas
call
loope
cmp
in
cwtl
jge
pop
pop
mov
pop
movsb
push
in
shrb
cmp
xor
fadds
mov
je
pop
sarb
mov
cmovg
mov
enter
mov
mov
daa
inc
sbb
in
cmp
sahf
sub
xchg
ds
enter
inc
test
in
lcall
cmp
fsubrl
popf
clc
push
sbb
je
inc
and
dec
cmp
inc
lods
sub
cltd
rclb
sub
in
inc
ljmp
lahf
and
dec
int
mov
dec
xchg
push
pop
test
cmp
andl
inc
pop
imul
adc
push
movsl
loope
sub
sbb
movups
das
jmp
lds
push
mov
out
push
loope
idivb
repz
cmp
dec
pop
sub
sbb
mov
les
in
mov
repz
lock
decl
and
pop
adc
das
xor
pop
loope
xchg
cmp
xlat
inc
fadd
outsl
movsb
pop
push
mov
or
cltd
mov
cmpsb
pushf
add
and
jl
inc
sub
shl
mov
xchg
sub
push
dec
mov
daa
push
push
mov
std
jl
out
sub
dec
pminsw
popf
pop
arpl
pushf
movsb
cld
repz
lds
add
add
in
loope
pop
insb
sub
push
pop
mov
cld
cmp
pop
mov
mov
push
cmp
ror
cmp
jl
hlt
sub
push
lcall
pop
push
mov
rcr
cmpsl
data16
test
push
sub
bound
rorb
lds
in
xchg
add
mov
or
scas
cli
sub
fidivl
mov
cmpsb
out
fdivs
mov
nop
mov
cwtl
mov
adc
mulb
shlb
fs
jbe
js
rcrb
mov
inc
cmp
sub
fwait
jb
aad
dec
data16
outsb
repnz
jne
sbb
dec
sub
or
jbe
test
adc
cmp
clc
sbb
sbb
cld
dec
lods
inc
aaa
mov
leave
cs
enter
jp
or
pop
push
divb
mov
repz
or
aaa
stc
mov
inc
mov
lcall
dec
bound
jl
cmpsl
cltd
rcrb
or
mov
push
pop
xchg
sbb
icebp
popa
or
push
mov
hlt
loope
mov
dec
jecxz
sar
and
roll
adc
xorl
int
xchg
in
stc
mov
aas
or
les
cmp
inc
data16
fdiv
jmp
cmc
pop
popa
mov
ja
inc
dec
adc
cmp
aam
stc
sub
inc
jmp
jae
xchg
lret
nop
mov
sub
xchg
popf
je
push
xchg
xor
push
jle
ret
insb
jmp
arpl
dec
or
dec
out
and
cmp
aas
add
jle
cwtl
mov
movsl
mov
inc
inc
loope
aam
pop
add
dec
aam
add
add
push
add
mov
ds
hlt
sbb
jbe
cmp
jl
cld
repz
or
cltd
xchg
jp
cltd
mov
mov
cs
ss
pop
out
sub
pop
mov
jbe
and
arpl
pop
dec
dec
mov
pop
pop
test
mov
push
rorl
mov
pop
mov
sarl
pop
xor
in
push
arpl
ds
inc
dec
mov
mov
pusha
and
iret
pop
enter
sahf
jl,pn
hlt
fisubs
enter
mov
mov
mov
test
lock
xchg
test
dec
test
push
xchg
shrb
das
loope
or
lahf
add
sbb
hlt
popa
sub
jge
fcomps
push
mov
je
or
cmp
mov
jge
cmp
lret
jp
lods
sub
js
sahf
nop
inc
dec
sbb
lret
das
cmp
sti
cmp
xor
outsb
cmpsl
shl
out
pop
mov
sub
sbb
int3
and
fistpl
cmpsb
xor
lret
xlat
movsb
lret
out
std
push
jmp
sarb
loope
cmp
scas
enter
and
scas
adc
repnz
adc
shlb
lds
adc
mov
aaa
add
lcall
adc
rcrb
push
xchg
or
mov
popa
stos
mov
cmp
in
mov
fwait
sub
sub
adc
test
not
les
sub
mov
mov
xchg
xor
sbb
lcall
cld
repz
pop
inc
pop
xchg
int
inc
sahf
sub
inc
inc
loope
aam
ljmp
mov
and
aas
mov
xchg
cmpsl
mov
push
data16
add
jp
cltd
adc
loope
cmp
sbb
xchg
daa
jle
mov
xchg
nop
cmp
loop
mov
inc
bound
push
inc
jbe
xlat
test
add
movsl
aas
add
mov
jle
adc
les
jno
push
dec
or
mov
mov
sub
clc
inc
roll
sbb
dec
cli
jle
cmp
je
les
inc
cld
repz
call
mov
cmp
lret
cmpsb
andb
mov
push
mov
bound
dec
push
dec
hlt
mov
cld
stc
sub
das
fwait
test
aas
adc
or
or
cli
sbb
mov
cmpsb
cmp
hlt
repnz
sub
dec
and
push
or
xor
mov
lea
and
or
jno
jb
cwtl
mov
fld
sahf
dec
cmc
std
lds
cmc
daa
rdmsr
es
cwtl
mov
push
mov
sbb
lahf
xor
mov
dec
jo
cmp
adc
cmpl
add
ja
mov
mov
mov
lods
movsl
fcompl
mov
test
ljmp
cmpsb
cmp
fidivs
mov
daa
out
adc
movl
popa
outsl
movsb
add
cwtl
repz
les
orl
dec
fisubl
mov
dec
push
ds
cld
dec
jbe
je
mov
fs
orb
lock
pop
pop
int
lcall
cs
fnstsw
or
enter
cmp
jl
pushf
dec
hlt
test
mov
push
hlt
pop
aas
pusha
test
cli
sub
cmovg
cmp
aam
ret
fsubrs
ret
xor
cwtl
je,pn
dec
cmp
dec
dec
add
aam
les
mov
mov
mov
daa
push
sbb
popf
mov
push
sbb
adc
shll
mov
mov
jle
xchg
leave
repz
sbb
pusha
push
inc
cmp
cld
dec
mov
sub
cs
cmp
lahf
dec
decb
mov
sub
repz
or
dec
xor
dec
pop
dec
fwait
aad
add
push
jb
xlat
mov
jl
js
jge
jnp
in
mov
mov
push
ds
gs
dec
mov
in
dec
ja
ret
cmp
cmp
mov
cmp
cltd
mov
cmp
daa
pop
mov
enter
repnz
dec
lret
fiaddl
or
mov
mov
repnz
fs
outsb
mov
push
cli
outsb
hlt
cwtl
loope
hlt
loope
in
jle
xchg
out
popa
fistps
out
lds
sha256msg1
mov
test
gs
push
sahf
sub
mov
pop
je
andb
pop
clc
add
movsl
aas
add
mov
jle
movsb
leave
repz
mov
mull
loope
addb
dec
pop
cltd
pop
dec
xor
dec
dec
ds
sbb
sub
mov
sub
mov
adc
push
push
notl
or
shlb
subb
test
mov
dec
xor
out
push
dec
pslld
dec
hlt
sub
shrb
clc
jmp
adc
inc
sub
push
jo
xchg
shlb
mov
jle
adc
xor
pop
sub
test
pop
lret
ss
ss
sub
clc
daa
inc
mov
and
fwait
jno
data16
pop
es
or
movsl
rorl
xchg
add
and
inc
xor
mov
cmp
clc
xor
sbb
xor
mov
adc
mov
sbb
jno
dec
xor
or
das
dec
popf
test
shrb
outsl
cli
mov
ret
or
mov
mov
mov
cwtl
and
pushf
cmc
daa
adc
leave
shlb
mov
dec
jl
xchg
addr16
mov
and
cmpsb
enter
cmp
and
pop
loop
jbe
ror
pop
mov
sbb
cli
clc
popa
repnz
repnz
cld
xor
hlt
mov
loope
xlat
adc
and
nop
outsl
push
inc
cmp
rcrl
andb
clc
jmp
adc
adc
in
and
jl
xchg
mov
int
sbb
mov
js
mov
cmp
arpl
jl
lea
shrb
orl
jecxz
jno
fmull
adc
push
pop
mov
or
xor
push
fldt
out
push
cwtl
in
or
pop
mov
decl
stos
xchg
dec
in
in
xor
pop
mov
dec
addb
popf
or
cmp
dec
push
mov
cmove
xor
hlt
cmp
mov
popa
stos
mov
jno
jno
or
add
add
pop
adc
inc
sub
sub
and
fdivs
in
ljmp
push
cmp
push
pusha
pusha
insl
mov
add
add
xorb
insb
sub
mov
inc
push
xchg
into
das
in
data16
push
push
cmp
cwtl
jo
repz
dec
shrl
arpl
in
enter
rolb
dec
clc
bound
jg
adc
lea
daa
repz
repz
mov
pushf
mov
iret
or
in
sarl
push
ja
test
mov
dec
shll
and
daa
aas
sbb
mov
push
clc
adc
jmp
cld
xchg
adc
das
inc
test
mov
cmpsl
pop
lods
dec
xor
ds
push
cmc
dec
inc
mov
pop
repnz
lret
jmp
adc
push
mov
xchg
or
push
adc
hlt
and
adc
cmp
popa
mov
popf
mov
cld
or
push
cmpb
jmp
xchg
scas
addr16
movsl
jge
clc
pop
jno
or
and
mov
addr16
cmp
shr
addr16
int
test
cs
out
idivl
sub
mov
pop
mov
push
cld
and
mov
xor
mov
arpl
hlt
mov
lcallw
pop
add
push
insl
fs
cmp
insb
pop
lods
add
mov
jle
mov
clc
je
dec
or
data16
mov
jmp
push
dec
or
pushl
mov
shrb
xchg
les
insb
pop
or
sar
pop
sahf
nop
xor
data16
pop
aas
add
js
mov
in
sub
insl
push
pop
in
in
bound
scas
dec
pop
cld
stos
jno
or
add
mov
cld
pop
xchg
sar
pop
out
sbb
shlb
xor
out
ret
or
outsl
pushf
add
mov
pop
lret
dec
rcll
bound
adc
dec
out
pop
clc
mov
cwtl
or
jge
repz
lret
mov
mov
pop
pop
mov
rorl
repnz
sub
daa
mov
cmpsl
test
jecxz
mov
sub
je
repnz
sahf
sub
pushf
push
movsb
adc
testb
dec
test
add
out
adc
iret
adc
dec
and
inc
dec
aam
minps
add
aas
cmp
mov
repnz
cld
sbb
aad
popa
or
push
lock
loope
xchg
pop
pop
pop
inc
mov
aas
mov
adc
fcomip
fistl
sbb
nop
adc
mov
xor
mov
mov
cli
aas
out
pusha
jo
mov
lret
mov
and
popf
shll
adc
lcall
test
mov
mov
in
je
sub
jno
xchg
int
addr16
and
dec
movsl
aas
add
jle
adc
jle
aam
shl
mov
dec
xlat
test
mov
not
les
sub
sub
cmpsl
sbb
inc
sub
int3
out
push
bound
push
dec
dec
ret
adcl
mov
cs
jle
out
xor
stos
mov
sub
fsubr
sub
and
inc
rcrl
popf
hlt
inc
dec
jbe
push
push
push
outsb
sbb
movsl
aas
popa
pop
jbe
push
push
jo
push
inc
ja
test
inc
popa
pop
ds
jne
sub
mov
cwtl
push
inc
arpl
mov
lcall
push
aad
imul
out
popf
je
dec
cwtl
mov
jo
add
test
and
addb
jno
arpl
adc
sbb
sti
mov
data16
jp
pushf
fiadds
movsb
cwtl
decl
push
dec
flds
mov
push
es
pop
add
loop
adc
cmp
push
add
es
pop
dec
mov
fwait
aam
aas
test
outsb
pop
ds
sbb
cmp
lret
aad
jg
addr16
mov
cmp
bound
stc
addr16
xchg
das
in
repnz
xchg
jno
popl
xchg
pop
cli
sahf
movsb
pop
jecxz
cmp
fidivs
push
int3
jns
pop
push
ds
dec
or
mov
fwait
cwtl
in
inc
dec
push
mov
mov
adc
pop
aas
xlat
inc
clc
lock
cmp
pop
cmp
and
push
cltd
mov
push
pushf
and
add
int
dec
pop
push
js
xchg
mov
ficompl
mov
dec
add
dec
bnd
fwait
add
mov
cli
pushf
hlt
add
out
mov
popf
mov
les
mull
or
inc
sub
shrl
cmp
mov
shrb
cmpsb
xchg
stc
sbb
movsb
jecxz
xor
pop
addl
sub
mov
fwait
xchg
inc
pop
dec
adc
outsl
dec
mov
push
ret
or
aaa
mov
cwtl
push
pop
div
mov
mov
and
cmp
mov
mov
icebp
lds
fstps
in
lock
cld
cmp
shr
pop
cmpl
lret
and
hlt
cmp
shll
imul
xchg
push
fucompp
lret
mov
adc
dec
push
mov
insb
jge
add
mov
xchg
mov
push
pop
cmpb
subl
int
sub
cmp
dec
aad
test
xchg
ljmp
xchg
stos
shrb
bnd
jecxz
lcall
sub
sub
adc
xchg
xor
dec
mov
std
je
dec
jbe
ja
daa
pop
mov
jbe
push
in
lods
push
leave
jne
iret
daa
inc
mov
into
jmp
inc
fmull
repnz
cli
movsb
mov
dec
adc
mov
hlt
hlt
dec
hlt
cld
dec
cld
mov
push
inc
pop
adc
shl
lret
frstor
adc
fs
jp
stos
test
ja
mov
cmpsb
nop
rcrl
cs
add
add
das
dec
mov
stc
dec
mov
lret
push
pop
mov
push
pop
adc
pop
sub
stc
sarl
nop
dec
fs
out
popf
leave
and
gs
xchg
push
test
push
fcoml
decl
add
jp
push
sub
sub
jg
repnz
push
ss
mov
mov
pop
mov
jbe
int
xchg
imul
paddusb
cmp
lcall
insb
pop
cwtl
push
cmp
stos
and
push
lods
xchg
fstpt
shlb
pop
scas
dec
cmp
cmpsb
sbb
das
mov
loop
push
loopew
iret
pop
push
pusha
inc
iret
aaa
shrl
lods
rolb
aaa
jnp
pop
add
mov
xor
mov
add
or
sbb
pusha
jno
std
push
dec
nop
cmp
scas
adc
lcall
mov
out
sub
ret
roll
push
loope
cmp
xchg
test
sub
or
jbe
mov
ret
ja
xor
lock
mov
mov
adc
inc
fidivrs
xchg
scas
insb
movsb
mov
add
es
testb
loope
sbb
pushf
pop
add
cli
mov
mov
dec
pop
pop
in
in
or
xor
test
pop
jb
dec
ret
fsubrl
ret
xor
inc
je
dec
or
test
les
js
xor
decb
hlt
insb
jecxz
dec
lcall
xchg
pusha
test
cmpsb
mov
mov
lcall
in
sarb
rorb
mov
mov
out
or
test
pop
mov
push
inc
jmp
cmp
or
adc
jbe
outsl
cmpsb
push
repz
sub
cwtl
xor
inc
insl
test
sarl
hlt
mov
xchg
jno
xchg
int
sub
mov
popl
lret
pusha
mov
fcoms
mov
cld
test
sbb
mov
out
xor
push
dec
rcrl
jne
ss
in
sub
insl
push
pop
xorb
subl
idivl
nop
leave
dec
jno
pop
lret
pop
lret
pop
mov
ss
incb
inc
movsl
mov
mov
popa
adc
insb
push
xchg
pop
cli
sahf
int3
pop
loopne
ret
xor
fwait
stc
je
dec
in
mov
hlt
mov
les
dec
jecxz
sar
push
jb
ret
adcl
mov
cs
jle
out
xor
cmpsl
sub
bound
xchg
adc
xor
aam
push
dec
jecxz
popl
inc
lahf
push
cltd
pop
dec
xor
dec
dec
ds
cmpsl
sbb
jno
clc
adc
adcl
sub
nop
out
push
xchg
jle
nop
int3
in
add
push
ds
shll
adcl
cmp
pop
and
test
mov
popa
stos
not
mov
add
sub
icebp
add
cmpsb
add
push
lock
es
cli
and
test
sbb
mov
shrl
cmc
into
fs
loop
cmp
sub
cmpsb
stos
pop
in
les
popf
dec
movsb
les
test
mov
ret
jne
call
ja
mov
pop
ret
aas
mov
movsl
inc
pop
jmp
inc
in
movsl
push
out
mull
xor
cmp
sub
adc
insl
jnp
ds
loopne
mov
notb
cmc
push
sbb
outsb
scas
and
mov
jge
xor
jae
xchg
fildl
ret
bound
aas
subb
and
addr16
xor
inc
and
shlb
dec
aad
add
cli
test
lods
mov
cwtl
lock
push
aam
das
clc
jecxz
lret
lds
divb
mov
aam
je
aad
int
enter
dec
data16
mov
enter
inc
lods
bswap
jno
sub
cli
pop
sahf
inc
sub
std
add
sarb
cmpsb
or
inc
mov
mov
xor
fdivrs
pop
aad
or
or
nop
sbb
push
mov
dec
lret
pop
in
in
scas
aas
dec
pop
jle
pop
or
fs
hlt
mov
mov
sahf
das
enter
ret
mov
xor
xchg
pop
pop
jne
insb
lret
ds
cwtl
les
push
loopne
testl
into
mov
dec
aam
xor
hlt
pop
nop
mov
xor
movsb
in
in
je
sub
aam
jle
stos
movsb
pop
sub
clc
cmp
stos
inc
fdivp
gs
in
cmpsl
xor
xchg
inc
imul
inc
cli
xchg
mov
pop
mov
movsb
pop
icebp
aaa
ljmp
rclb
test
in
inc
mov
aad
push
push
or
lcall
stc
mov
movaps
push
push
je
imul
or
ja
mull
outsb
xchg
inc
or
inc
mov
push
ficoms
mov
fld1
sbb
pusha
cwtl
pusha
ds
lret
sub
xchg
mov
xchg
test
or
and
lcall
insb
je
dec
inc
aam
les
insb
int
and
mov
xchg
jp
sahf
mov
xor
xor
mov
jl
imul
sarl
outsb
jae
xchg
std
fsts
inc
fiaddl
adc
mov
pop
ret
xor
fstl
mov
test
push
cld
andb
mov
movsl
orb
mov
jmp
adc
pop
xchg
cwtl
sahf
outsl
jg
fimuls
arpl
push
rcrl
mov
xor
dec
inc
xchg
dec
fmuls
or
push
cmpb
adc
ss
in
aas
xchg
fisubrl
sub
add
add
dec
dec
out
pop
scas
mov
push
loopne
push
push
xchg
lret
inc
stos
xchg
mov
add
arpl
push
mov
lret
mov
xlat
lcall
adc
push
dec
mov
xor
ja
std
nop
jp
or
cli
jg
shl
pusha
mov
xchg
shrb
jmp
inc
mov
inc
jo
inc
mov
imul
fidivs
xlat
mov
adc
jns
insb
push
dec
jno
jbe
add
mov
mull
data16
sub
cmp
movsl
pop
in
mov
andb
add
rcrl
sahf
bound
lret
clc
aad
cmp
imul
cmp
cmp
mov
xchg
mov
pop
loope
in
inc
xlat
insb
loopne
jge
inc
pusha
adc
or
loop
js
jl
jns
insb
je
in
imul
roll
imul
loop
sub
js
mov
or
pop
js
dec
dec
pop
dec
inc
lea
xchg
xchg
add
into
sub
sahf
movsl
xchg
fisttpll
jl
pop
mov
inc
fxch
loopne
and
enter
pop
jle
lock
cmc
push
inc
aas
ficomps
das
icebp
and
push
mov
test
scas
cld
jg
or
movsl
mov
inc
sub
out
mov
addr16
mov
and
mov
enter
fisubs
sub
xlat
sub
pop
cmpl
add
add
imul
test
je
ficompl
push
not
adc
mov
adc
push
mov
enter
dec
mov
mov
les
dec
jecxz
shl
pop
subl
cltd
push
outsb
test
pusha
call
sbb
loopne
cmpsb
std
cmp
gs
push
xor
lock
jae
add
push
arpl
adc
dec
jno
out
xchg
xlat
js
rorl
cld
pop
aas
sbb
lea
int
cltd
hlt
loopne
in
xchg
jne
pop
add
bound
dec
push
dec
sarl
test
sub
mov
sbb
xchg
dec
inc
inc
aaa
xor
orl
fistpl
xchg
mov
imul
or
shl
push
sub
xchg
stos
outsb
push
mov
jnp
xchg
sti
ret
and
test
pop
mov
icebp
adcb
negl
mov
pop
sbb
mov
mov
cmp
dec
inc
shr
cmc
in
sbb
outsb
ja
ljmp
test
data16
cmp
mov
sub
ret
jecxz
adc
repnz
xlat
cmc
movsl
cmpsb
dec
push
orb
es
add
push
in
xchg
push
jmp
cmpsl
mov
push
push
xchg
and
xor
jg
fdiv
aas
xchg
out
jb
aam
out
inc
mov
jg
std
push
roll
lods
push
mov
out
dec
mov
sahf
int3
dec
or
mov
fmulp
or
sub
mov
popf
out
push
outsb
mov
inc
jno
stc
faddl
ljmp
aas
xor
xchg
lds
xchg
mov
sbb
pop
fisubrs
addr16
push
cwtl
push
stos
shrb
xchg
sub
inc
xchg
lds
stos
or
mov
out
cmp
pop
or
mov
cmc
daa
pop
arpl
or
pop
sub
popf
dec
xchg
mov
cmp
mov
jae
xor
mov
arpl
mov
rorb
call
stos
mov
inc
jo
ss
je
mov
jl
mov
je
dec
arpl
push
inc
or
into
in
mov
jmp
mov
and
out
jp
sahf
movsb
sub
lahf
mov
shr
insb
bndldx
dec
stc
insb
dec
loope
push
sub
fidivl
ljmp
xchg
enter
fdivrl
call
bound
xchg
sub
mov
int
jge
push
xor
add
and
jmp
sbbb
push
jne
jle
xchg
mov
aas
ja
leave
sbb
adcl
stc
push
lret
lret
movsb
faddl
push
mov
xor
mov
pop
ret
and
lods
mov
nop
sub
dec
jg
pop
xchg
js
ljmp
inc
jne
or
mov
lds
popf
test
lods
inc
enter
aas
sbb
aaa
fs
xchg
adc
jmp
out
mov
ret
dec
out
dec
xchg
test
leave
and
stos
xor
aas
rolb
jnp
sbb
or
dec
insl
dec
xchg
xchg
dec
out
xchg
popa
pop
ret
pop
add
push
hlt
mov
scas
lcall
xchg
adc
mov
mov
and
lods
push
sti
push
lds
in
hlt
lret
xor
push
ljmp
leave
js
pop
xorl
cmc
sbb
outsb
popa
sbb
ror
outsb
xchg
or
mov
in
or
nop
sub
dec
fsubl
sbb
orb
cmp
xorb
bound
rorl
sbb
xchg
aad
xor
inc
movsb
jo
xchg
hlt
or
and
jge
pusha
cmp
into
dec
bound
loop
insb
xor
aam
add
inc
jl
aad
loop
fs
andl
in
aas
mov
inc
dec
sbb
iret
leave
int3
ja
mov
and
xchg
pushf
nop
lds
or
mov
imul
jne
icebp
test
in
xor
and
sahf
mov
jns
jmp
inc
cmp
mov
bound
fcmovnbe
insb
sub
sbb
inc
pop
outsb
movsl
aam
lods
pop
rcrb
rcl
sbb
cmp
add
arpl
sbb
mov
cmpsl
sub
insb
or
cwtl
inc
and
in
mov
mov
inc
fincstp
inc
inc
icebp
mov
cwtl
cmp
ja
push
insb
jmp
adc
xor
mov
mov
jne
mov
ret
addb
push
fildl
xchg
lret
push
inc
inc
adc
test
pop
mov
fdivrp
lahf
or
call
ficomps
out
imul
call
hlt
cwtl
dec
test
insb
xchg
movsb
pop
push
xor
sahf
aaa
mov
clc
loope
out
test
cwtl
pusha
push
jle
push
stc
out
hlt
inc
dec
ret
adcl
stc
or
fdivrl
pop
adc
push
mov
insb
outsb
mov
adc
mov
cld
add
cmp
pushf
les
sub
nop
inc
int
cli
call
mov
std
and
clc
in
jle
xchg
xor
sub
xchg
adc
adc
test
std
in
dec
xorl
add
cmpsl
mov
int3
mov
sub
adc
sub
pop
or
mov
add
cltd
push
and
sub
pop
mov
xor
js
mov
je
add
filds
inc
roll
cmpsl
jmp
sub
or
or
or
bound
lods
push
push
sbb
jg
les
push
inc
cmp
pop
mov
jae
mov
out
push
pop
aas
dec
or
add
push
push
scas
shrl
jl
sub
int
jmp
in
xor
hlt
loope
sbb
and
leave
add
insl
daa
jb
iret
fisubl
aam
lret
clc
xchg
xor
pop
fs
ret
or
pcmpeqb
xlat
pop
sbb
push
stos
xchg
mov
loopne
into
mov
xor
arpl
cmp
push
or
jg
xor
sub
scas
add
push
jbe
xchg
adc
in
jns
stos
pop
nop
aaa
call
xchg
jae
repz
aam
inc
hlt
icebp
inc
mov
insb
sbb
imul
std
les
arpl
jno
mov
loopne
les
inc
sahf
in
cmp
xchg
gs
cmp
dec
mov
scas
pop
jb
xchg
daa
xchg
sbb
mov
inc
jmp
ss
jbe
arpl
push
fistl
cmc
push
dec
mov
mov
add
xchg
push
sarl
movsb
adc
sub
mov
push
fcomps
lds
or
xchg
mov
das
xchg
test
xchg
jb
mov
mov
mov
fldcw
mov
test
sarb
push
sbb
arpl
mov
push
cmp
nop
pop
adc
imul
nop
ficoms
enter
inc
pop
push
rorl
mov
jg
mov
ret
xchg
jnp
pop
sti
sbb
mov
cmp
cmp
fpatan
sbb
js
inc
sub
and
push
aam
adcl
push
ja
mov
or
leave
pop
and
push
call
mull
outsl
push
addr16
inc
ss
and
and
sub
pop
pusha
aaa
pop
ja
pop
addl
sbb
inc
mov
ss
enter
stos
in
push
jo
inc
popa
or
push
dec
jae
cmpsl
test
mov
movsl
call
je
jbe
shr
daa
jbe
and
imul
hlt
leave
pop
inc
sub
aam
lods
mov
pop
aam
adc
repnz
data16
fs
sub
mov
rcrl
cmp
mov
loopne
dec
ret
sub
jbe
lods
dec
push
mov
fs
insl
pop
data16
cwtl
aaa
outsl
les
add
sub
cltd
adc
int3
mov
pop
push
xor
gs
call
mov
cmpsb
inc
pop
inc
fcomps
jns
jecxz
sub
mov
sbb
add
cmp
mov
cmpw
push
jmp
cld
loop
mov
sbb
frstor
adc
in
lcall
sub
jge
add
ret
cmp
pop
inc
push
dec
sahf
mov
test
mov
je
xor
in
icebp
inc
mov
fsubrs
adc
push
rorl
cmp
test
lods
sub
repz
sbb
aas
mov
push
lcall
xchg
add
repnz
mov
jmp
xor
adc
fcomip
fisttpl
add
and
sbb
dec
fiaddl
mov
adc
jmp
cmp
jo
pop
lret
into
mov
ss
and
xchg
jne
daa
dec
xor
sub
and
sbb
pop
in
sub
gs
sub
dec
mov
sahf
cmp
movsb
sub
daa
fs
cmp
insl
push
enter
rorb
mov
les
das
outsl
lret
fyl2x
push
into
dec
mov
push
addr16
cmp
mov
sbb
cmpsb
in
jl
jb
add
loope
jl
fidivl
fidivl
fbld
arpl
leave
sub
mov
adc
pop
mov
std
insb
popf
stc
mov
cmp
insl
sub
mov
add
pop
xor
fwait
inc
cmp
cmc
and
sti
out
add
or
aad
outsl
vunpckhpd
xchg
sub
in
cmp
push
mov
lcall
push
jg
fdiv
inc
scas
aas
pusha
lods
enter
test
jge
fisttpl
xor
js
add
mov
fcmovnbe
xor
xor
jbe
sbb
pop
cmp
clc
hlt
test
cmc
fldl
mov
jbe
sub
aad
sub
nop
in
imul
push
and
pop
fucomp
hlt
ret
rclb
sub
insb
mov
mov
pop
js
mov
push
in
addr16
jnp
adc
sbb
and
add
inc
cmp
xchg
ret
push
scas
testl
aaa
push
stos
jns
xchg
mov
sti
dec
sub
hlt
call
sbb
outsl
jne
pushf
dec
call
xchg
mov
mov
dec
xor
ljmp
out
adc
adc
lret
pop
mov
mov
imul
jp
fs
xchg
xor
mov
mov
ret
jmp
inc
pop
subb
and
icebp
add
push
les
adc
mov
int
dec
adc
nop
xor
mov
xor
mov
call
mov
cli
aas
jp
and
sbb
shll
xchg
push
add
mov
loop
xlat
xor
xor
pushf
negb
dec
xchg
and
in
aam
push
cmp
lret
fsubl
or
mov
popa
fs
add
add
popf
je
hlt
or
push
dec
test
xor
adc
sbb
fdivs
hlt
pop
push
xor
push
iret
fstpl
push
push
mov
fnsave
jge
bound
adc
rcrl
daa
jge
inc
mov
push
adc
je
dec
ficoml
js
push
jmp
or
sti
repz
int3
iret
pop
popa
cld
inc
rcll
jmp
movsl
inc
fstps
shrb
data16
jae
cmp
popa
sbb
cmp
test
inc
push
insb
cmc
jge
push
push
dec
fdivl
inc
pop
mov
cltd
shlb
imul
aad
pop
or
adc
mov
aad
clc
cmp
adc
orl
hlt
out
stc
aad
push
call
jbe
push
lea
cltd
push
mov
jmp
push
jb
add
sarb
int
push
int3
prefetch
inc
jb
pop
test
pop
xlat
rolb
adc
aas
push
clc
mov
dec
or
dec
jne
dec
cmpsl
xchg
inc
pop
sub
dec
push
clc
pop
in
test
int3
dec
jl
add
cld
and
add
sarl
mov
jbe
mov
and
lods
test
test
cmpsb
cmp
mov
pop
ds
loope
sub
mov
rol
loope
jbe
sub
xchg
mov
and
es
jo
cmovl
repnz
adc
mov
xorb
or
adc
dec
sbb
insb
pushf
pusha
mov
mov
in
jae
pop
daa
and
nop
push
fisttps
push
movb
mov
add
sub
call
adc
push
sub
test
or
mov
outsb
xor
cld
cmpsb
stos
jge
sbb
sub
popa
stos
mov
sub
pop
pop
xchg
adc
xor
fcomi
mov
cwtl
test
mov
push
cmp
and
data16
inc
or
stc
mov
and
int3
jmp
stos
fcmovu
or
jne
dec
adc
add
pop
gs
test
aam
aas
cmp
inc
pop
sub
cmc
push
jle
fistl
addr16
popf
je
push
push
or
mov
pop
gs
push
jne
add
add
bound
xorl
mov
imul
fs
cmp
iret
stc
pop
es
and
bound
mov
fsubrl
mov
aaa
mov
loopne
pop
ja
adc
and
mov
repz
push
mov
lea
cmpsl
enter
push
aas
push
je
xor
push
mov
sub
cmpsl
loop
ret
jl
hlt
lds
into
adc
push
sbb
adc
fwait
cmp
aam
or
adc
ja
jns
fs
sahf
xchg
and
call
ja
jne
dec
mov
xor
lock
outsb
loope
aam
aas
fcoms
pop
jno
add
sub
jge
dec
aad
sub
mov
pop
bound
sub
jns
sub
dec
cmp
lcall
ljmp
cmpl
in
clc
test
mov
jmp
insb
out
add
ss
adc
repnz
jne
inc
movsb
mov
mov
ja
and
mov
mov
popa
stos
mov
sub
pop
pop
les
xor
in
das
cmp
out
mov
cwtl
mov
andl
mov
je
cmpsb
dec
mov
aam
and
add
popf
je
pop
testb
pushf
jo
or
or
mov
les
xchg
mov
jle
mov
cmp
out
and
xchg
sub
shrl
not
inc
andb
mov
mov
aam
jge
in
iret
pop
fdivr
aaa
push
inc
jmp
cmp
je
and
cmp
jle
cmp
movsb
sub
cwtl
cld
cmp
inc
fs
fldt
stos
bound
mov
aad
jmp
mov
ficompl
aas
shll
addr16
retw
lock
xchg
bound
pop
outsl
xor
call
je
rorb
out
push
sbb
push
fisttpl
jmp
inc
jmp
ret
jns
call
lcall
sbb
rol
test
jo
mov
sbb
loopne
mov
jnp
call
aam
leave
sub
insl
fcmove
out
jp
les
mov
xor
inc
pop
lods
int
in
mov
rcrb
sub
inc
mov
pop
or
mov
repnz
stos
arpl
aas
jmp
cmpsb
pop
or
mov
sub
mov
adc
mov
lahf
cli
push
cmp
inc
imul
adc
cmpsb
call
mov
sub
mov
dec
sub
push
sub
dec
inc
dec
jp
adc
test
das
fistl
add
and
adcl
cmp
jge
rorb
mov
imul
cltd
jae
ret
sbb
enter
fwait
mov
int3
push
arpl
int
mov
imul
xor
jge
shll
out
fwait
mov
mov
jo
fdivrl
inc
push
add
ljmp
jmp
ljmp
int3
jno
mov
fwait
mov
and
data16
dec
jo
hlt
pop
adc
pop
adc
pop
sahf
mov
mov
test
aas
pop
hlt
sbb
xchg
add
jb
cmp
int
or
sbbb
pushf
sub
or
sbbb
bound
jo
lret
cwtl
in
loopne
hlt
cmp
and
sub
test
adc
aas
adc
add
mov
repnz
adc
je
addr16
scas
aaa
mov
add
mov
xchg
mov
pushf
pop
inc
adc
test
test
pop
scas
push
cmc
js
rcl
decl
sahf
jae
pop
out
push
pop
in
jo
pushf
xlat
popa
outsl
push
movsl
and
adc
pop
jb
movsl
adc
fs
mov
movl
mov
cmp
in
sahf
rolb
stos
das
arpl
mov
xor
clc
mov
lea
cltd
pop
sub
mov
add
cltd
scas
in
fistl
mov
cltd
or
fwait
add
pop
clc
push
xor
inc
xlat
add
imul
cltd
inc
loope
xchg
add
fwait
loope
fs
stos
adc
mov
jmp
inc
fcoml
inc
jo
mov
lock
popa
repnz
cmc
cmpsl
pushl
inc
xchg
cmpsb
xor
daa
mov
cmp
mov
popa
stos
mov
sub
pop
pop
dec
adc
xor
scas
daa
sbb
daa
outsl
fidivrl
push
mov
fistpll
scas
cs
push
cltd
xor
lock
pop
ja
push
mov
addl
push
mov
add
sub
test
repnz
jbe
jb
adc
aad
pushw
sub
xchg
add
in
mov
push
xor
xchg
es
mov
mov
mov
in
je
jbe
jno
mov
stc
cwtl
cmp
loopne
adc
in
rcrb
mov
cltd
sbb
insl
fdivs
ret
mov
mov
test
mov
mov
nop
roll
jbe
sub
xor
popa
lock
sbb
mov
sub
or
inc
mov
enter
popa
sarb
ret
call
out
scas
or
pop
insl
je
sub
jge
push
mov
in
sub
rcrb
inc
xor
pop
inc
mov
cmp
out
xchg
add
bound
or
mov
adc
repnz
les
scas
sar
jl
call
int
xchg
repnz
cmc
movsl
cmpsb
inc
pop
xchg
pop
repnz
jmp
xchg
fmulp
mov
or
outsl
push
test
dec
rcrl
rcrl
mov
sarl
andb
in
adc
fldl
sub
sbb
pop
std
aas
xchg
sub
add
gs
sub
mov
jge
sbb
dec
les
repnz
in
xchg
mov
cld
xor
sub
xchg
pop
jne
mov
mov
cld
test
mov
mov
out
adc
xor
mov
jmp
sbb
mov
sub
mov
stos
orl
nop
cmp
scas
shrb
sub
push
sub
xchg
or
jmp
repz
mov
nop
aam
jmp
shlb
xor
lahf
mov
shrb
or
pop
dec
and
mov
mov
fwait
sub
push
adc
out
dec
mov
stos
xor
dec
and
jl
lods
lds
xor
jle
in
mov
imul
jecxz
mov
hlt
mov
dec
cld
shl
stos
call
lahf
cmc
popf
clc
sbb
out
ret
and
mov
icebp
mov
repnz
call
hlt
fwait
lods
insl
cmpsl
push
jnp
js
movsb
shrb
loopne
bound
mov
push
pop
mov
sub
cmp
sbb
mov
add
pop
sbb
and
add
xlat
jmp
dec
es
dec
sti
mov
push
cmpsl
loop
dec
pop
pop
mov
shlb
cwtl
lock
ja
test
test
pop
fs
cwtl
push
cmp
popf
xchg
leave
xchg
in
xor
jl
dec
inc
aad
jae
mov
in
push
inc
loope
mov
leave
or
cmp
sbb
jnp
xor
nop
scas
clc
das
fbld
cltd
ss
xor
test
mov
mov
shrb
jbe
subb
movsb
pop
mov
fistps
xchg
mov
mov
jno
pop
and
inc
mov
pushf
dec
cld
pop
sub
decl
cmpsb
xchg
cmp
xor
cmp
xchg
sub
outsb
jmp
mov
mov
cmp
jmp
out
rorl
inc
xchg
test
frstor
add
rcll
mov
subl
sbb
frstor
adc
fs
into
cltd
stos
out
jno
dec
xor
push
push
in
sbb
mov
cmp
xchg
sbb
xor
lods
and
lds
jo
inc
inc
loope
aam
aas
cwtl
aaa
inc
pop
jne
je,pn
jle
ss
xchg
adc
jmp
mov
mov
mov
hlt
insl
stc
scas
into
xor
jmp
xor
jl
ss
xchg
jnp
inc
add
psubusw
mov
hlt
nop
dec
hlt
cwtl
dec
mov
in
push
into
mov
lds
or
aam
pop
cmp
not
les
sub
sub
popf
je
xchg
jno
mov
and
cmp
sub
std
mov
pop
out
mov
movsb
add
fwait
cmpb
in
pushf
je
sbb
xor
and
push
dec
repnz
push
and
inc
jmp
cmp
je
daa
mov
jbe
push
in
mov
pop
lret
inc
sub
mov
push
push
hlt
in
jns
ret
mov
enter
add
push
sbb
bound
ret
jns
adc
out
int3
pushf
push
sbb
push
pushf
dec
sbb
movl
je
adc
ss
xor
repnz
mov
add
or
xor
pop
sub
subl
fcom
and
in
or
jmp
test
pop
sahf
mov
leave
in
test
add
in
dec
add
popf
ds
jns
add
adc
push
push
xchg
push
lock
or
jnp
mov
fs
push
mov
aad
leave
inc
es
pop
jbe
push
jmp
fsubrs
push
and
in
fdiv
sub
and
adc
pop
es
adcb
aaa
push
call
mov
add
iret
fldt
adc
mov
cwtl
pop
fcmovnb
adc
sub
pop
jmp
jb
das
cmpsb
cmovs
icebp
repnz
jno
mov
shrb
or
cmp
xor
push
rorl
aas
repz
mov
cmp
popa
in
dec
mov
movsb
dec
push
mov
adc
dec
mov
icebp
adc
xor
mov
cmp
popa
add
adc
fdivrl
mov
cmp
cmp
mov
cmp
mov
bound
ss
cmp
cmp
push
inc
ss
sub
or
and
mov
pusha
mov
les
js
push
mov
rorl
push
dec
rclb
xchg
test
movsl
xchg
lahf
fsub
stc
xor
outsl
push
push
gs
roll
and
and
pop
ja
adc
jl
pop
inc
ss
cmp
cmp
pop
inc
ss
cwtl
imul
stos
mov
sub
mov
and
inc
movsl
mov
test
inc
ss
fs
fs
rcll
adc
dec
fistl
mov
mov
jnp
addl
test
add
mov
lds
pop
sahf
iret
leave
xlat
filds
or
shrb
stos
jae
pop
sahf
lahf
fwait
and
push
mov
ss
sbb
jg
test
je
pop
xchg
mov
test
aas
ret
mov
push
add
mov
jo
inc
mov
mov
mov
lret
bound
xchg
rcrl
sbb
and
xchg
adc
clc
cs
aad
and
pop
mov
jle
cmp
mov
lods
jo
push
jns
jl
out
movsb
movsl
ficompl
int3
sub
or
push
push
jae
test
addr16
stc
sbb
mov
or
pop
ds
mov
aad
ds
adc
pop
xor
add
lds
clc
mov
cmp
call
test
push
mov
mov
xchg
push
sub
cmp
ficoms
cmp
pop
lock
cmpsb
pop
call
popa
addl
adc
aas
adc
stc
push
sbb
aas
hlt
cld
sbb
data16
adc
add
test
dec
pop
shll
data16
dec
xlat
test
mov
jmp
mov
std
or
jge
inc
std
mov
insb
mov
outsb
orb
sbb
sub
jmp
ja
push
cmp
lods
js
pop
mov
inc
fiadds
ljmp
xchg
test
adc
pop
jb
sub
or
out
jns
push
sub
mov
push
lret
push
sub
fdivrs
xchg
mov
invd
adc
mov
scas
dec
dec
and
js
fisubrs
mov
xchg
je
add
lea
jne
mov
pushf
xor
outsb
test
lds
push
add
cwtl
add
sbb
and
mov
mov
nop
cmp
and
mov
lds
adc
push
cwtl
ja
test
cld
aas
mov
dec
mov
mov
imul
xchg
sbb
dec
stos
mov
xchg
jmp
xor
mov
mov
mov
dec
subb
sbb
stc
or
pop
pop
xor
pop
inc
cltd
adc
aam
test
loope
ja
mov
and
mov
cmp
mov
or
popf
test
loopne
mov
mov
mov
cwtl
xor
push
loopne
xchg
insb
shrb
jle
shll
xor
arpl
enter
repz
pop
xchg
lcall
mov
js
or
mov
cmpsb
jmp
jp
cmp
ljmp
mov
addl
shll
jne
add
addb
jo
cmp
pop
mov
movsl
inc
pop
push
xor
dec
jle
fidivs
dec
movsb
pushf
popf
in
pusha
xor
daa
mov
inc
mov
xchg
dec
sub
lea
rcll
int3
mov
rcll
test
add
pop
push
bound
test
mov
stos
into
lock
mov
pop
pop
pop
push
push
inc
or
cmp
mov
les
push
ret
repz
jg
dec
jb
inc
mov
ss
inc
lock
jo
mov
test
sub
push
enter
aad
aas
jecxz
pusha
andl
pop
movsb
mov
push
pop
out
inc
jg
mov
jmp
sub
int
xchg
or
and
mov
and
adcl
loop
mov
cmp
cmc
cmp
loope
mov
fcomps
imul
leave
ss
in
inc
and
mov
adc
mov
in
and
mov
aas
cld
cmpsl
sub
mov
mov
mov
sub
mov
dec
es
xor
sub
or
cmp
adc
sti
sbb
xchg
sub
push
cmc
xchg
push
or
in
adc
aas
sbb
mov
sbb
daa
in
and
addl
mov
aad
cmp
mov
dec
mov
test
fcomi
push
rcrl
bound
rcr
ljmp
pop
cli
and
pop
inc
or
fsubrs
adc
lods
ret
rolb
inc
or
out
mov
sbb
or
shlb
and
dec
adc
mov
xchg
dec
sub
idivb
sbb
add
push
test
gs
into
in
jg
xchg
fidivl
mov
sub
mov
insb
inc
std
cmp
jnp
outsb
ja
or
push
pop
or
pop
loope
cmp
and
orl
aaa
xor
dec
lcall
mov
icebp
cmp
mov
rorl
std
ja
fisubrs
or
sub
or
xchg
rcr
sahf
add
repz
outsb
mov
dec
push
or
jg
sbb
mov
mov
mov
cmp
fdivr
pop
jne
push
ja
inc
dec
mov
hlt
xor
leave
cmp
xor
mov
jmp
outsl
inc
xchg
inc
sub
cmpsb
pop
aaa
and
dec
aas
jmp
and
fiadds
popf
cmp
setg
mov
dec
or
outsb
mov
aaa
bound
or
insb
jbe
loope
and
sub
js
mov
dec
mov
jns
in
dec
ss
flds
xchg
fdivl
aam
mov
icebp
stos
xchg
movsb
pop
or
sahf
les
cmp
pop
push
je
add
dec
lea
shl
xchg
notl
iret
sub
sar
call
mov
movsl
jp
iret
or
adc
add
mov
xchg
out
fwait
nop
sub
ds
icebp
fcoml
enter
inc
pushf
inc
pop
jnp
inc
fcmovu
lea
aas
push
push
cmp
sti
in
mov
and
push
add
xor
cs
nop
add
jmp
xor
jb
insb
push
dec
ss
add
repz
xlat
jp
inc
or
sbbb
repz
mov
not
addl
xchg
sub
pop
sub
mov
inc
and
push
cmc
imulb
fadd
into
jmp
xor
fisubrs
push
sbb
mov
push
hlt
shl
inc
add
popa
stc
pop
xlat
in
dec
mov
inc
inc
aam
lret
and
pop
dec
xlat
jo
hlt
mov
mov
shlb
xchg
pushw
add
lods
pop
mov
lret
out
shlb
adc
ror
cmp
icebp
aas
ja
in
mov
jle
cwtl
push
push
out
ret
adc
or
into
call
adc
xchg
push
lret
and
movsl
in
sub
mov
or
pop
fcomi
xchg
push
add
pop
inc
cwtl
mov
or
pop
cld
adc
shlb
jb
cmpsl
sarb
mov
lret
fiaddl
aad
ljmp
push
std
pop
sub
sub
leave
ja
xlat
fcmovnu
lret
daa
adc
and
xchg
fisttpl
repz
lret
out
ljmp
push
sbbl
imul
mov
lds
xor
dec
cmp
push
loop
in
je
xchg
mov
rcrl
das
inc
cmc
ds
adc
cmp
insb
cmp
jmp
cltd
fdivrs
add
ret
cmpsl
pop
add
inc
test
aam
cmp
xorl
cmp
in
or
adc
push
xor
sub
cwtl
mov
pop
adc
cmp
jg
pop
loope
xchg
mov
rcrb
push
adc
xchg
jo
in
sub
or
cmp
pushl
push
orb
insb
adcl
bound
cld
repz
loope
fs
xchg
mov
stos
insb
pop
mov
or
int
ds
ljmp
or
push
data16
sub
aas
mov
sbbl
pop
inc
into
mov
or
jno
push
dec
mov
cmpsb
mov
mov
cmpsl
jle
jl
stos
inc
rcrb
cld
pop
pop
fdivr
in
addr16
sub
enter
and
inc
or
cld
pop
stos
shl
pop
dec
pushf
inc
add
dec
mov
ss
stos
pop
shll
repz
mov
sub
add
and
sbb
ret
out
out
adc
pop
and
mov
ljmp
in
lock
aad
aaa
fisttpll
adc
popa
cltd
xchg
aaa
sbb
push
div
dec
pop
lock
xor
inc
cmpsl
add
cmp
or
pop
and
xchg
mov
inc
cwtl
cwtl
test
into
mov
rorb
lock
xchg
mov
popf
or
push
sub
jne
mov
mov
fidivrl
rorb
les
movsb
std
aam
dec
bound
test
cwtl
xchg
adc
xchg
das
in
repnz
jecxz
add
xchg
mov
push
pop
push
xchg
push
add
subl
jmp
loop
arpl
popf
pop
arpl
pushf
xor
repz
test
or
inc
dec
adc
cmp
aam
ret
or
ret
xor
xchg
pop
je
dec
hlt
mov
cld
mov
les
dec
jecxz
sar
push
es
ret
adcl
stc
cs
and
fcompl
adc
pop
xchg
imul
mov
fcmovbe
out
pop
jo
mov
fiaddl
into
lret
jno
lds
sub
cmp
popa
inc
orl
ds
popf
or
inc
subb
stos
sets
mov
jg
adc
xor
mov
push
mov
aas
inc
mov
jl
test
and
cmp
mov
cwtl
cmp
out
push
jbe
cld
pop
xor
ret
inc
cmp
int3
mov
jl
xor
xchg
adc
sub
jb
sti
or
ret
fdivs
jo
sarb
sbb
cwtl
add
mov
pop
mov
shrl
cld
jg
outsb
adc
sub
cmpsb
insb
add
sbb
xchg
cmpsl
inc
add
mov
lcall
lea
test
sub
pop
sarb
mov
cmp
js
insb
pop
adc
push
jmp
ljmp
xchg
hlt
adc
jl
sub
mov
mov
xlat
mov
rol
mov
mov
mov
call
stos
mov
addr16
loope
aam
push
mov
and
mov
dec
pop
andb
and
outsl
adc
inc
pop
mov
ljmp
jge
cmp
int
rcll
shlb
push
inc
fistpll
ret
inc
fildl
mov
lret
or
pop
jnp
ds
aas
push
ds
xor
fsubl
mov
fs
insl
dec
xlat
test
mov
not
les
je
jns
out
jl
ret
xor
iret
mov
bound
xchg
adc
sbb
add
mov
sarl
push
add
cwtl
cmp
vunpcklpd
nop
push
shr
cmp
std
jle
imul
pop
in
sub
or
push
sbb
sahf
in
sub
fbld
mov
mov
dec
xor
push
int3
bound
or
cmp
pushf
sbb
mov
add
sub
aad
and
sub
pop
inc
fistpll
mov
cmp
push
add
inc
pop
mov
int3
xchg
test
mov
pop
fsubrl
pop
or
adc
inc
loope
xlat
push
popa
adc
fdivs
scas
shl
and
and
orb
mov
daa
push
adc
cmpsb
lcall
mov
sahf
roll
sbb
or
or
pop
mov
cmpsb
adc
faddl
push
ret
movntps
or
mov
movl
mov
jge
inc
adc
ja
lods
mov
dec
movsb
test
les
xchg
adc
aas
ljmp
dec
inc
or
sub
add
cwtl
call
mov
mov
or
add
es
shlb
stos
shrl
into
adc
outsl
insl
ficoml
insb
mov
pop
cli
popf
sub
mov
stos
xchg
xlat
and
sbb
or
jmp
pop
cmp
and
into
push
int3
mov
jl
push
jbe
push
in
sbb
mov
mov
shrb
inc
lahf
mov
xor
int
mov
into
clc
int3
push
or
push
jbe
push
in
add
adc
push
ret
xor
push
scas
inc
lahf
out
or
dec
int3
out
lret
adc
sub
insb
rcll
outsl
repz
pop
xlat
frstor
adc
cltd
pop
push
lahf
xlat
out
lea
shll
xor
adc
adc
sub
in
adc
in
lock
mov
pop
mov
sub
insb
cld
out
xchg
cld
pop
mov
decl
cmpsb
xchg
lret
cmp
js
pusha
pop
adc
push
jmp
ljmp
xchg
cli
cli
lahf
cmp
mov
hlt
pop
mov
push
movsl
rcr
decl
push
xchg
imul
dec
daa
jle
test
repnz
cmp
loop
dec
test
push
and
inc
jbe
xlat
mov
movsl
aas
add
enter
pop
push
cli
and
in
inc
mov
add
pop
loopne
mov
push
cmpsb
pop
add
mov
pusha
mov
dec
je
lcall
inc
in
jmp
adc
pushl
jo
dec
xchg
mov
repnz
daa
jbe
pop
jbe
mov
push
fwait
mov
mov
mov
cmp
jp
inc
dec
mov
sub
call
out
icebp
mov
es
mov
call
dec
jmp
enter
sbb
movsb
cmp
mov
popa
push
in
xchg
in
xor
push
loope
das
push
xchg
cwtl
aad
fs
jle
in
pop
fs
adc
shl
loop
cs
sti
adc
daa
push
and
push
jle
insb
push
mov
sub
lret
sbb
iret
data16
xchg
das
in
repnz
jb
loopne
pop
jbe
rol
push
xchg
pop
cli
cwtl
mov
sti
xchg
adc
jle
xor
outsb
mov
fcompl
xlat
pushf
add
sbb
ret
insb
jmp
movsb
cmp
and
dec
fisubs
or
mov
mov
xchg
jno
pushfw
jp
cltd
adc
mov
int
rcll
gs
xchg
mov
jbe
aas
ret
inc
les
pop
imul
push
mov
xchg
sbb
fidivrs
out
xlat
mov
sub
cmp
inc
shrl
add
sub
andb
ljmp
dec
ds
inc
dec
pop
out
pop
loopne
xchg
mov
movsl
add
mov
xchg
fwait
in
adc
testb
mov
hlt
jecxz
lock
or
lea
sbbb
dec
xor
cmp
cmp
imul
sub
cmp
in
cmpsl
and
push
insb
jg
add
cmp
pop
fcmove
mov
pop
mov
xchg
inc
aaa
lret
mov
mov
fists
and
xor
xchg
xor
movsl
es
shr
push
pop
fisubrs
loope
inc
and
push
pop
pop
je
jns
mov
aad
push
inc
sbb
inc
xchg
lea
cmp
lahf
push
xadd
xor
push
sbb
xchg
shll
pop
inc
out
ffreep
repnz
cli
and
enter
pop
dec
call
xchg
loopne
mov
and
push
jae
push
push
hlt
xor
cld
imul
push
jns
addb
in
cmc
add
xor
pop
addl
bound
pop
mov
out
xchg
add
aad
xchg
sbb
inc
lods
xchg
add
fwait
xchg
in
imul
dec
jp
mov
mov
addl
sub
hlt
loopne
addr16
ret
xchg
frstor
mov
ret
pop
fcom
pop
clc
jnp
cltd
shll
pop
daa
pop
mov
js
pop
cltd
adc
mov
lods
subb
fs
adc
adc
mov
test
scas
and
rcrl
les
push
clc
sub
add
movsl
ja
mov
mov
sub
lock
pushf
jp
es
jp
jb
mov
mov
mov
mov
xor
dec
dec
imul
pop
aad
dec
fnstcw
aaa
popf
mov
inc
inc
push
popf
mov
rorw
push
adc
mov
lock
int3
ja
les
movsb
scas
sti
outsb
and
add
andl
mov
sub
out
add
lcall
ja
jg
inc
leave
xchg
mov
dec
loopne
jns
dec
idivb
xchg
mov
mov
test
sbb
fcoml
dec
add
xchg
in
int3
or
popf
xor
nop
xchg
adc
mov
ret
cmp
mov
or
or
jnp,pn
add
test
cmp
mov
adc
movsb
mov
lods
ljmp
iret
fnstenv
sub
mov
es
int3
xlat
ss
stos
dec
fildll
out
jb
sbb
or
sub
out
mov
mov
pusha
push
push
test
or
inc
xchg
imul
cmpsl
mov
leave
pushf
and
cmpsb
xchg
rcl
push
cmp
push
lcall
test
dec
dec
adc
push
stos
lret
cmp
lret
fisubrs
cmp
stos
jnp
push
in
or
sahf
cmp
push
mov
mov
xlat
mov
popf
in
push
pop
loope
jae
push
mov
push
ror
or
xchg
sub
mov
loop
mov
popf
mov
outsb
lcall
mov
push
jb
cwtl
js
lret
and
push
and
fcoms
std
jnp
inc
sbb
or
jg
inc
into
in
fdivrs
cmp
adc
jnp
or
ror
lock
adc
push
jmp
shl
push
push
cmpsb
lret
xlat
mov
xchg
jp
sbbl
adc
and
dec
outsb
mov
fisttpl
jg
stos
lret
sbb
xchg
mov
cmp
push
ret
cmpsb
mov
and
mov
mov
lock
jmp
vcvtsd2ss
out
or
mov
sahf
xchg
stos
stos
out
loop
fwait
or
inc
cmp
jno
pusha
sub
mov
xchg
fstpt
test
cmc
dec
adc
subb
mov
mov
lea
sbb
cmp
dec
and
insl
fcomps
xchg
into
sbb
ljmp
aam
stos
imul
sarl
andl
jmp
push
pop
xlat
mul
sahf
cmp
les
xchg
push
aaa
sub
sbb
aaa
push
aaa
out
lods
xchg
xchg
xor
jo
xchg
mov
in
push
pop
mulb
aas
insl
push
scas
loop
popf
mov
cmp
add
mov
popf
cld
orl
ljmp
mov
mov
add
rclb
insb
pop
adc
lret
inc
adc
pop
or
das
rcll
cmp
xchg
jmp
sub
inc
jl
xor
pop
sbb
clc
andb
fmuls
ds
fldenv
cld
adc
ds
push
cmp
int3
rcl
js
mov
test
mov
lret
popf
mov
hlt
or
adc
and
pop
add
inc
push
ss
mov
jmp
pop
shrl
cmp
cmp
add
or
test
mov
mov
cmp
sub
mov
pop
stc
dec
ja
jg
in
adc
repnz
xchg
push
jns
sub
int3
aas
inc
jecxz
loopne
imul
cmp
test
jo
pop
xor
ss
out
mov
xor
pop
out
xchg
cmp
adc
ljmp
cs
lcall
pop
sub
out
arpl
pop
mov
jmp
cmp
imul
mov
sbb
test
data16
fcoml
adc
jbe
jge
enter
xchg
ja
and
fs
mov
jne
xchg
inc
dec
shlb
jae
repz
repz
mov
mov
sbb
rorb
daa
dec
inc
pusha
inc
ret
push
sahf
cld
dec
mov
lahf
insb
jmp
and
sbb
xchg
je
aad
sbb
fwait
mov
inc
mov
clc
into
shrl
xchg
push
nop
out
clc
sar
mov
cld
dec
sbbl
sbb
sub
arpl
push
sub
and
sbb
int3
iret
incb
in
mov
xchg
jp
test
dec
jno
rolb
sub
mov
jmp
jno
mov
ss
into
mov
fwait
dec
xchg
hlt
xor
jo
jp
ss
push
not
or
cmp
mov
and
inc
fmul
jl
stos
fmuls
insl
xor
ficoml
mov
adc
mov
dec
out
orb
cli
data16
mov
ja
add
and
add
inc
dec
leave
je
jle
in
xchg
cmp
nop
mov
outsb
fsubrs
xor
flds
enter
inc
negb
iret
add
stos
in
loopne
repz
pop
adc
adc
rcrl
add
cld
jno
mov
mov
aaa
xor
mov
test
pop
insb
dec
stc
mov
hlt
cmp
dec
cmp
push
das
mov
lcall
push
leave
rcl
inc
pop
jmp
or
cwtl
in
icebp
shlb
call
sub
sbb
or
pushf
mov
xor
pop
xor
cmp
inc
cmp
ds
adc
lret
into
fsubrl
lods
xchg
shlb
stos
inc
cwtl
int3
sub
and
add
or
inc
daa
cli
add
sbb
and
test
shl
insl
and
add
dec
dec
adc
out
mov
andl
inc
lcall
or
sarb
outsl
adc
pushf
xchg
insb
push
ss
inc
adc
add
sahf
jnp
cmp
jmp
pop
sub
sub
dec
int3
and
cld
gs
in
add
data16
pushf
mov
sahf
sti
insb
sbb
cmpsb
and
cmc
cltd
mov
in
cmp
jo
aam
jne
dec
cmp
inc
out
inc
int
test
mov
lea
mov
jp,pt
add
fldenv
xchg
popf
ret
push
sti
mov
and
in
aad
hlt
imul
dec
pop
adc
addr16
int3
stos
lahf
ljmp
fs
xlat
aam
outsl
aam
out
push
test
fisubrl
sti
fisttpl
ja
or
pusha
lcall
cmp
jmp
xlat
in
data16
push
pop
pop
pop
fisubrl
ret
test
add
leave
aad
sub
push
or
divl
inc
insb
cltd
add
mov
insb
mov
mov
fdiv
cmp
or
addr16
jo
push
xchg
or
jo
or
xor
jbe
out
or
test
adc
mov
aad
dec
test
sbb
pop
faddl
test
add
imul
or
mov
xchg
push
push
mov
test
jmp
jo
push
out
js
push
inc
jo
mov
fsubp
sbb
or
push
sbb
fnsave
popa
loop
dec
cltd
loope
shrl
popa
or
sub
pop
and
dec
fnstenv
or
jnp
cmpsb
jmp
xchg
jne
pop
mov
test
mov
or
test
mov
push
mov
inc
or
inc
test
sub
adc
movsl
cmc
cld
xchg
dec
adc
push
mov
add
or
or
stos
add
xchg
and
call
dec
jmp
cmp
sub
push
jp
sub
push
in
mov
jg
xchg
mov
hlt
dec
aam
xor
in
mov
aas
lods
or
add
mov
insl
in
mov
pop
aad
js
mov
ret
outsl
push
movsb
pop
subb
jmp
mov
mov
mov
aam
pop
or
inc
rcrb
mov
arpl
dec
sahf
stc
lcall
out
popa
pop
jae
mov
adc
cmp
lcall
jo
popa
sub
pop
adc
in
pushw
in
mov
cmp
pop
jb
subb
mov
cmc
sub
cwtl
adc
or
addl
mov
mov
jb
inc
out
sbb
subb
adc
jmp
and
lock
xlat
movsb
pop
pop
inc
jo
or
dec
cmp
fwait
ret
das
call
jno
hlt
cmp
inc
jmp
xor
sub
xchg
or
xor
in
mov
jne
mov
xchg
movsl
pusha
cmp
in
push
pusha
xchg
push
pop
cmpsb
pop
adc
in
inc
push
andl
or
hlt
sub
loope
jae
pop
sub
aam
jo
xor
mov
inc
jl
das
sbb
out
adc
and
sti
cwtl
inc
shr
jb
mov
mov
adc
push
les
aam
jp
pop
cmpsl
mov
dec
cwtl
repnz
add
lock
add
in
cmp
adc
xor
push
xchg
addr16
pop
jne
addr16
inc
push
cld
sbb
push
shrl
aas
xchg
adc
pop
xchg
div
add
mov
out
lret
jo
mov
lret
sahf
mov
sub
fnstcw
mov
xorb
add
push
cmp
jno
cld
adc
rcl
pusha
cltd
lcall
add
xor
add
mov
out
mov
mov
aam
pop
or
loop
adc
mov
andb
cmp
sbbl
test
ret
bound
test
mov
pop
mov
push
xor
sbb
dec
inc
fs
pop
lret
jno
cmpsb
outsb
lcall
fistl
data16
cli
cmpsb
and
sub
inc
cmp
mov
in
insl
test
in
pushf
movsl
hlt
pop
scas
push
push
movsb
push
mov
ja
xchg
dec
cltd
or
je
add
ficoml
pop
or
jp
fistl
adc
jmp
sahf
push
dec
call
cmpsb
pusha
fnstsw
sub
js
fwait
sub
push
bound
xchg
fucom
stc
sahf
adc
aaa
mov
adc
stos
aaa
pop
xor
fdivp
mov
movsb
adcb
and
pop
dec
sbb
lret
fadds
shll
in
imulb
cmpsl
imul
rcrb
jnp
dec
in
ljmp
dec
lea
xor
sub
dec
outsb
cmpsl
orb
out
rcrb
pop
inc
push
in
xor
leave
xor
sub
jl
ljmp
dec
jae
into
xchg
cs
inc
inc
sub
ret
mov
mov
and
adc
inc
mov
stos
ds
lret
subb
push
jnp
and
sarb
mov
inc
inc
test
insl
mov
sub
xchg
pop
inc
loop
fimuls
pop
popa
mov
hlt
xorb
shll
push
mov
aam
dec
dec
sti
lods
jl
mov
ds
xor
push
movsl
aas
fimull
adc
push
shll
shl
mov
or
fdivr
jl
mov
je
cmpsl
popa
cmpsb
test
mov
rorb
pop
sbb
cmpsl
imul
cmc
inc
test
xor
pop
daa
adc
test
shrb
or
sub
sbb
sbb
jecxz
les
jmp
rcrb
add
pop
add
stc
dec
jmp
jb
rcrb
outsl
jecxz
iret
fistpl
sub
adc
repz
test
bound
cmp
mov
ja
movsb
subl
sbb
pop
addr16
inc
gs
pop
movsl
or
nop
stos
outsb
jbe
mov
sbb
mov
jno
pop
sub
xor
rclb
mov
fdiv
sbb
loope,pn
mov
lds
loop
out
outsb
mov
xchg
add
cs
in
pop
loop
or
loope
xchg
icebp
mov
sbb
sub
div
jl
pop
shrb
insb
popa
and
arpl
insb
jl
addb
fstpt
add
dec
mov
js
lcall
shl
addr16
sbb
sub
xor
xchg
cmpsb
out
sbb
mov
cmp
dec
push
shll
xor
fadds
jbe
xor
test
or
xchg
dec
cmp
movsb
int
es
pushf
or
cld
addl
aam
and
or
mov
stos
lock
lret
cmpsl
mov
and
xchg
and
or
xorl
mov
cmp
pop
adc
cltd
cmp
push
push
mov
sbb
mov
xchg
mov
mov
bound
adcl
sub
sub
ljmp
fistpll
sahf
mov
pop
arpl
pushf
xchg
jmp
push
jae
addr16
fs
insb
out
push
nop
push
pop
out
enter
dec
mov
jge
ss
push
jae
aad
mov
pop
add
subl
pop
xor
mov
rcrl
aas
daa
mov
push
sarb
cmpsl
mov
pop
dec
add
test
push
lcall
pop
ja
iret
ljmp
cmc
scas
pop
movb
or
lahf
push
into
int3
push
mov
dec
lret
ljmp
and
out
sbb
pop
dec
mov
insb
mov
fs
in
or
push
cmp
pop
mov
push
mov
push
lods
push
xchg
inc
out
cmp
cmpsl
sub
std
sub
andb
fs
cmp
sar
pop
push
jo
push
shlb
lock
push
mov
stos
adc
pop
xchg
jnp
push
imulb
lahf
add
mov
stos
pop
aaa
ret
lods
int
je
iret
fists
rorl
ljmp
xlat
aas
jl
out
sub
outsb
and
iret
jecxz
inc
push
inc
lods
call
mov
jb
mov
movsl
push
test
adc
push
jp
jg
adc
mov
mov
outsb
mov
inc
lods
push
mov
cld
pop
cmp
mov
inc
mov
test
pushf
dec
add
call
cmp
or
lret
or
mov
test
ljmp
push
in
add
push
shrl
ljmp
hlt
dec
mov
into
and
mov
add
mov
inc
push
orb
int
push
pusha
aad
xchg
adc
aam
push
jae
in
xor
mov
dec
sbbl
fisttps
or
cmp
xor
fildll
cmp
mov
lcall
and
dec
mov
insl
jmp
cmp
movsl
mov
mov
in
jbe
push
ret
js
pushf
pop
pop
push
dec
push
adc
inc
rcrb
push
filds
out
xor
mov
sti
push
pop
movsb
lods
sub
xchg
xchg
lods
add
les
das
cmp
inc
shll
cs
sahf
xchg
outsb
data16
cmp
push
lock
adc
adc
xchg
ja
sar
sub
inc
cmp
push
cmp
xor
subb
cmpsb
cmpb
sbb
sub
repnz
xorb
icebp
into
or
loopne
aas
stos
fdivr
fisubrl
cwtl
pop
mov
xchg
sbb
jmp
jp
jg
push
std
pop
movsl
insb
imul
mov
enter
mov
rcll
and
xchg
push
dec
sahf
and
xor
fiaddl
push
popl
movsl
cmp
sub
xchg
push
push
sbb
push
scas
clc
push
add
lds
clc
js
or
mov
mov
dec
hlt
insb
dec
inc
xchg
fcoml
in
and
push
and
shrb
int3
sbb
scas
push
xchg
ja
jl
push
testb
dec
cmc
ret
or
mov
test
mov
dec
dec
roll
mov
pop
dec
mov
mov
call
inc
scas
sbb
pop
inc
mov
add
pop
push
cmp
xchg
ds
into
sbb
mov
mov
dec
in
dec
dec
in
mov
jno
push
in
mov
loop
cmp
clc
fdivrl
pop
mov
ret
add
inc
es
inc
mov
or
lds
rcrb
mov
add
add
lahf
enter
cld
repz
push
gs
and
lods
cmp
mov
scas
in
push
mov
cmpsl
out
xor
inc
adc
or
jg
cmp
add
cmp
pop
in
mov
sbb
pop
xchg
fs
inc
outsl
cld
add
push
jl
lock
and
mov
inc
andb
mov
mov
add
cmpsb
dec
cmp
xchg
adc
mov
add
hlt
mov
xor
in
andb
mov
mov
lret
clc
repnz
adc
mov
sub
cld
mov
adc
and
and
mov
xor
push
cld
pop
inc
mov
jp
cltd
adc
test
cwtl
jge
mov
fwait
sub
jl
mov
enter
mov
les
ds
ret
xor
mov
adcl
adc
pop
mov
ljmp
mov
cmp
int3
mov
jle
clc
shrb
movsb
iret
incb
pop
clc
mov
mov
adc
add
or
lret
das
outsb
sbb
fdivrl
and
xor
dec
mov
mov
push
leave
xorb
cmp
inc
je
xchg
mov
scas
cmpsb
sbb
mov
sbb
or
cld
fwait
add
cwtl
enter
andb
pushf
je
dec
nop
xchg
lock
hlt
lods
sbb
dec
lds
push
data16
repnz
roll
mov
pop
aam
dec
jbe
inc
jne
jbe
fadds
nop
cmp
int3
cmp
add
sbb
push
and
call
mov
orl
xor
shlb
movsb
int3
mov
ja
stos
mov
mov
in
cmp
cli
dec
jl
sub
xchg
pop
sub
cltd
fwait
add
xor
xchg
mov
push
mov
scas
in
cmp
pavgb
out
push
mov
ret
adc
es
mov
push
fstpt
adc
cwtl
add
cld
rorl
push
adc
int3
movsb
aas
pop
mov
int3
mov
ss
int3
and
inc
imul
aad
fs
mov
es
jne
jae
xor
shrb
jp
enter
xchg
pop
mov
jno
lret
adc
pop
add
pop
mov
int3
jbe
adc
in
add
adc
pop
mov
lret
sub
mov
adc
mov
rcrl
cmp
mov
in
arpl
aam
pop
rorb
jo
mov
push
dec
inc
mov
push
cwtl
in
sbb
pop
mov
xchg
and
ds
and
mov
mov
loop
pop
cmp
cs
mov
cmpsb
dec
xor
xchg
adc
mov
push
out
call
es
fistpll
mov
repnz
mov
add
mov
lds
and
aas
add
and
jp
pushf
mov
les
lcall
push
in
mov
pop
shrl
lret
clc
lock
push
mov
inc
sub
hlt
in
sub
cld
mov
adc
shlb
cld
sub
je
repz
je
int3
pushf
dec
jmp
jb
mov
xchg
pop
pop
mov
nop
fwait
sub
pop
cmpsl
mov
push
cltd
fsubr
mov
loopne
adc
aas
mov
fnstsw
adc
lret
pop
lret
adc
cmp
lods
mov
push
add
pushw
or
cmp
mov
push
inc
pop
xchg
sub
jno
mov
pushf
js
mov
jg
fcomps
add
data16
adcl
jge
mov
repnz
movsl
aas
add
mov
lret
jp
hlt
adc
into
cld
adc
or
jb
inc
mov
dec
mov
dec
pushf
in
adcl
sbb
ljmp
inc
and
xor
cli
cmp
sub
add
clc
int
clc
or
shll
inc
cwtl
adc
pop
in
pop
lods
bound
sbb
orl
add
pop
inc
shll
pop
iret
in
sub
pop
ss
out
repnz
test
cmpsl
mov
inc
roll
add
xor
call
dec
lcall
cmp
sub
add
shr
xchg
dec
aam
lret
arpl
popf
je
mov
and
mov
pop
mov
je
inc
pushf
mov
lcall
daa
mov
inc
movsl
aas
add
lret
jp
cld
mov
nop
out
or
shll
scas
sub
mov
adc
ljmp
sub
aam
sub
fdivl
insb
push
sub
push
and
pushf
cld
pop
stos
sar
repz
nop
jmp
stos
jae
or
lods
or
pop
mov
mov
pop
cmp
pusha
cmpsl
mov
mov
fcom
mov
enter
aas
cmpb
ret
xor
into
and
call
jo
pop
lret
dec
mov
cmp
out
cwtl
push
xchg
mov
jae
mov
ljmp
mov
adc
xchg
adc
pop
mov
ljmp
pop
and
cmpsl
pushw
loopne
es
cli
iret
mov
loop
pop
in
hlt
cld
out
cld
cld
pop
push
jo
mov
data16
jo
adc
cltd
sbb
xor
shlb
mov
jle
adc
es
and
ja
sbb
adc
jl
sub
xchg
imul
fldt
mov
faddl
cmp
out
or
jg
xchg
lcall
pop
mov
mov
mov
aas
push
sbb
mov
addr16
cmp
jle
and
es
inc
adc
push
push
jbe
push
in
rol
ds
fcmovbe
lock
jo
add
into
shl
pop
push
adcl
sub
push
adc
pop
inc
push
rcr
xchg
adc
test
pop
dec
into
mov
cs
repnz
incl
mov
mov
decl
clc
push
jl
adc
mov
cmp
je
dec
fdivrl
mulb
push
pop
int3
out
ss
pop
outsl
push
imul
or
jp
cltd
mov
push
pushf
adc
mov
or
je
inc
out
xchg
repnz
hlt
xchg
dec
hlt
pushf
dec
pusha
xchg
sub
in
add
dec
loopne
lret
call
push
sub
pop
sub
mov
cmp
out
mov
add
movsb
ljmp
mov
popa
stos
cmpsl
and
lahf
mov
arpl
mov
mov
mov
test
test
pushf
pop
in
cmp
aas
and
dec
jne
inc
rcll
dec
insb
dec
sub
cmp
push
pop
mov
sbb
xor
lock
adc
push
push
aam
mov
push
stc
clc
and
jno
out
mov
hlt
cmp
pop
lret
sub
pushf
insb
mov
mov
inc
movsl
rcrb
pop
in
scas
int3
mov
inc
pop
mov
mov
fadds
in
mov
and
sub
lret
dec
movsb
shll
imul
aam
aas
and
push
dec
ud2
adc
iret
imul
push
rcrb
in
push
mov
lcall
cmp
mov
pushf
jl
in
imul
jb
push
jmp
ja
push
cmpsl
in
xchg
and
mov
loope
pop
pop
imul
lock
xlat
clc
mov
movsb
pop
jp
arpl
inc
dec
hlt
jb
pop
jmp
dec
loopne
or
in
mov
cmovg
cwtl
testb
mov
in
cwtl
test
mov
add
dec
cli
testb
hlt
push
push
cwtl
push
in
adc
ja
adc
and
push
mov
push
nop
mov
hlt
mov
js
mov
inc
adc
jecxz
push
mov
loopne
xchg
out
and
add
sub
cmp
push
lahf
xorl
xchg
int3
hlt
stc
ljmp
fwait
inc
aad
fildll
xchg
add
inc
out
jecxz
cwtl
cwtl
inc
xchg
insl
jbe
add
divl
fimuls
inc
aad
jae
mov
in
push
inc
loope
mov
leave
or
imul
pushl
ds
gs
les
ljmp
sub
cmp
adc
outsl
push
pop
mov
add
lds
adc
cmp
cli
mov
out
dec
loopne
mov
mov
mov
mov
sti
inc
inc
loopne
xor
outsl
push
rcrl
sub
mov
mov
addr16
movsl
cltd
jle
cs
in
push
mov
push
mov
and
jo
clc
roll
sqrtps
aaa
lods
mov
adc
fiaddl
push
pop
jo
scas
das
rclb
xchg
add
mov
xchg
cs
and
insl
push
pop
sbbb
subl
int
pop
leave
cmp
xchg
int3
lock
shrb
pop
je
nop
push
lcall
xchg
les
or
push
stc
push
mov
pop
or
add
mov
test
pop
jb
shrb
mov
sbb
add
test
dec
fdivr
cmp
pop
hlt
adc
inc
cmpsl
sub
test
cmp
xor
sbb
jle
test
pop
nop
cmp
loop
sbb
push
inc
jbe
xlat
pop
pop
je
in
aas
add
mov
jle
cwtl
mov
xchg
scas
shl
and
and
insb
push
dec
mov
daa
push
sbb
pop
mov
push
pusha
inc
adc
cwtl
mov
mov
jg
js
xor
in
dec
push
aam
rorl
jmp
sahf
sti
sub
loopne
push
and
pop
mov
jnp
push
pop
call
adc
cmp
sub
or
es
andl
add
fcompl
and
pusha
pusha
insl
cmpsb
stos
pop
pop
enterw
adc
inc
call
shrl
mov
cmp
setbe
adc
dec
sbb
repnz
mov
cwtl
xor
add
push
nop
cmpsb
pop
or
xchg
mov
pop
jns
das
dec
arpl
pop
mov
sbb
into
inc
mov
cli
mov
aad
jmp
sub
xchg
out
xchg
fisubl
inc
ljmp
inc
dec
cmp
cmpsl
mov
cld
adc
or
lods
sub
pop
stc
sbb
sbb
jb
cmp
xor
xchg
and
mov
sub
adc
cmp
dec
bound
mov
pop
jnp
std
in
jbe
jmp
leave
es
das
fucom
outsl
or
push
xlat
add
nop
std
push
mov
out
jge
pusha
dec
popa
sti
mov
add
sbbb
aas
cmpb
shr
jl
in
fbld
and
pop
sbb
jmp
mov
mov
jne
dec
push
mov
loopne
in
pushf
aas
mov
cmp
mov
cwtl
ret
xor
sub
inc
or
sub
add
scas
in
in
pop
pop
int
repnz
je
sub
mov
inc
push
out
pop
arpl
popf
pop
arpl
pushf
push
cld
repz
sub
pop
in
fistps
xchg
aas
ret
inc
les
fmul
outsl
movsb
pop
pushf
sub
pop
mov
and
mov
pusha
mov
les
in
cwtl
jge
dec
fwait
push
dec
lar
repnz
dec
ret
push
dec
test
cmpsb
dec
cltd
add
popf
cmpsb
dec
pop
dec
dec
inc
movsl
repnz
sbbb
and
aam
pop
adc
mov
jae
test
cltd
test
in
mov
dec
in
push
rcrb
add
mov
xchg
hlt
sub
imul
push
mov
inc
repnz
jo
pop
mov
sbb
imul
faddl
jle
shl
jne
jns
cmp
push
icebp
popf
add
push
ret
call
and
int3
xlat
clc
in
icebp
movsl
or
inc
test
pop
mov
xor
shrb
sub
jae
hlt
scas
cld
sbb
xchg
dec
or
insb
jmp
test
push
sub
out
fwait
rorl
in
jb
xchg
outsl
cmpsl
mov
add
push
lret
jbe
mov
and
cmpsl
sub
xchg
jmp
daa
inc
mov
lods
imul
lea
mov
ds
sub
sar
push
bnd
xchg
adc
sahf
jo
dec
popa
cli
mov
je
inc
cmpsb
adc
pusha
adc
mov
inc
sub
insb
inc
rorl
inc
sub
push
in
test
push
in
mov
xchg
adc
inc
add
sbb
jmp
popf
cmp
in
and
into
push
mov
cltd
push
in
insb
aas
push
adc
aas
stos
ds
mov
ret
test
jp
push
inc
xchg
mov
test
dec
mov
nop
loope
das
push
xchg
sbb
dec
pop
cwtl
pop
jo
and
clc
and
es
cmpb
dec
push
mov
les
push
mov
daa
jl
push
adc
jp
lahf
add
mov
nop
cmpsb
or
ret
add
adcl
and
in
mov
sub
and
xchg
mov
scas
cltd
cmp
mulb
jbe
jg
pop
stos
adc
sbb
mov
ss
jge
or
inc
push
mov
inc
add
xlat
enter
adc
inc
mov
xchg
jp
ret
subb
movsb
pop
enter
out
jp
mov
ds
xor
jecxz
xchg
or
jo
les
mov
int3
cwtl
rorl
fwait
subb
nop
pop
or
pop
jb
cltd
shll
sarb
imul
jle
inc
adc
push
mov
aam
bound
xchg
adc
cmp
gs
subb
movsb
pop
loopne
fistps
outsl
dec
cmpsl
mov
mov
jno
pop
push
cltd
adc
inc
fisubl
cmp
popf
je
pop
ss
lds
or
and
std
pop
pop
int
repnz
movsl
or
mov
es
dec
push
mov
cld
cwtl
shll
fwait
sbbb
nop
pop
or
pop
adc
aas
adc
pop
adc
js
cld
pop
sub
jmp
push
shlb
mov
fs
xor
sarb
dec
movsb
pushf
and
adc
adc
mov
cmpsl
shrb
int3
lret
movsb
or
ret
cmpsb
in
mov
rorb
or
mov
push
sub
sub
mov
sub
sub
aas
pop
xchg
or
xor
in
cli
inc
pop
or
mov
loop
aam
push
mov
movsb
mov
mov
rolb
inc
shl
movsb
jecxz
jno
fmull
adc
push
int3
jbe
and
sbb
dec
lret
enter
js
mov
adc
hlt
insl
repnz
push
lret
jbe
mov
and
mov
and
jl
ja
xchg
das
in
bnd
jb
loopne
pop
jbe
push
push
popa
mov
fs
lcall
insb
mov
dec
mov
cli
adc
aas
repnz
xor
or
and
push
dec
pop
pop
inc
in
test
into
lods
imul
cltd
dec
mov
sbb
sar
push
sahf
jae
xchg
fs
sahf
adc
hlt
popa
cli
mov
je
pop
xchg
data16
fs
orb
mov
int
bnd
or
mov
jmp
dec
mov
xchg
push
in
pop
aas
ficoml
cmp
sarb
pop
ret
xor
insb
dec
sbb
lock
push
jl
add
ss
mov
add
clc
ljmp
add
bound
stc
dec
pop
mov
mov
sub
and
and
mov
orb
dec
fldt
mov
in
mov
insb
push
add
fimull
adc
pop
pop
xchg
dec
push
loop
dec
pop
stos
push
imul
lods
xchg
xchg
loop
int3
mov
jl
cmp
stos
mov
dec
pop
inc
inc
cmp
sbb
insb
aas
dec
mov
bnd
push
push
stc
nop
mov
sub
xor
and
mov
adc
mov
xchg
dec
jbe
add
sbb
add
es
jb
or
mov
dec
int
mov
pop
push
mov
mov
xchg
jmp
daa
inc
mov
and
fwait
jno
push
clc
mov
cmpsb
mov
std
test
out
sub
dec
pslld
dec
cld
sub
mov
sub
mov
adc
es
sub
add
andb
cmpsb
arpl
hlt
mov
out
dec
pop
and
jno
or
add
mov
pop
mov
cld
pop
mov
pushf
addr16
mov
xchg
das
in
repnz
jb
loopne
pop
jbe
rorb
xchg
pop
cli
lahf
mov
xor
hlt
pop
ds
insb
mov
cmp
pop
or
es
sub
mov
push
fsubl
mov
mov
jae
pop
push
pushf
mov
jno
dec
xor
std
int3
cmp
cld
icebp
dec
mov
adc
jmp
xchg
or
and
inc
fs
xlat
std
fldt
clc
popa
mov
pushf
in
test
ret
and
std
ret
lds
shlb
mov
xchg
xor
lods
and
cltd
shlb
sub
loopne
nop
xchg
daa
or
fs
aad
jl
ss
jl
jl
mov
imul
dec
fs
pop
mov
stos
in
pushf
test
pushf
push
pusha
or
repnz
xchg
imul
xchg
shlb
das
loope
or
dec
adc
xchg
cmp
xlat
inc
jmp
das
jbe
mov
inc
sub
jecxz
xchg
inc
push
cs
popf
dec
mov
shl
xor
lea
test
jmp
inc
fmull
repnz
jl
jmp
int3
cli
jl
dec
push
jo
xchg
adc
je
bound
jo
dec
mov
mov
fwait
test
xchg
jp
fists
bound
stos
shll
sub
int3
lock
push
jbe
push
in
pop
push
push
fs
in
push
jo
mov
or
push
cld
pop
into
pop
jb
dec
ret
subb
xor
mov
int3
mov
aam
pushf
ja
test
sub
add
nop
mov
test
jp
ljmp
sub
shr
xor
mov
cmp
push
andl
jae
xchg
aam
pop
sub
or
sahf
aad
mov
sub
mov
nop
pushf
sahf
cmp
pop
sbb
gs
aaa
mov
jge
ljmp
je
mov
arpl
dec
es
fidivl
xor
mov
cmp
sbb
cwtl
movsl
sub
dec
jp
test
dec
std
das
inc
adc
int
push
faddl
aad
repz
pop
push
add
add
adc
cmp
pop
es
rclb
outsl
push
sub
sahf
sub
pop
fistps
andb
hlt
jmp
adc
pusha
imul
push
int
loopne
jae
sbb
push
xor
cld
sub
cwtl
out
imul
test
cmp
js
clc
adc
and
dec
xlat
jno
cmp
loop
hlt
test
cmp
cltd
adc
inc
mov
push
test
in
call
and
mull
push
xchg
xchg
and
add
dec
or
xor
popa
stos
mov
sub
mov
sub
mov
sbb
mull
dec
xlat
test
mov
not
les
sub
sub
and
mov
mov
ljmp
ror
pop
cmc
cmpsl
mov
adc
mov
pop
cmc
mov
mov
das
pop
xor
rorb
rcrl
dec
sub
popa
repz
out
aaa
in
push
jnp
inc
cmpsb
ja
pop
pop
push
movsl
lock
les
jl
in
xchg
lea
and
lahf
inc
int
fmuls
pop
pop
outsb
mov
out
pop
imul
sub
jl
push
xor
sub
aas
push
jo
orb
dec
xchg
push
xor
in
cwtl
movsb
ljmp
pop
mov
pop
fistpll
cmp
movsl
adc
jmp
mov
and
pop
out
dec
xchg
mov
sbb
push
pop
in
popl
call
cltd
jno
dec
xor
call
dec
xchg
sbb
movsl
and
andb
pop
jmp
loope
icebp
inc
or
xor
pop
loope
xchg
pop
arpl
dec
les
repnz
jle
lods
shll
insb
push
in
pusha
push
cmp
xlat
into
das
call
inc
lock
push
jno
push
in
out
sbb
aaa
jo
inc
push
movsl
sarl
push
je
pushw
jl
cwtl
popa
stos
mov
jno
jno
or
add
add
repz
xor
sub
inc
push
inc
push
outsb
pop
stos
fdivr
cmp
pop
hlt
adc
fsubl
rclb
or
mov
adc
inc
fnsave
dec
ljmp
mov
cltd
jno
push
in
mov
fdecstp
pop
xchg
adc
xor
aam
movsb
sub
cmpsl
in
bound
mov
adc
ljmp
inc
dec
call
rorl
push
stos
mov
leave
into
fistl
fldcw
jp
aam
dec
in
arpl
stos
out
xchg
xchg
push
out
xchg
mov
dec
test
add
push
sbbl
inc
cwtl
cmp
bound
sub
inc
fcoms
ds
out
push
jne
inc
insb
inc
inc
xlat
roll
jb
call
out
xlat
mov
or
shrb
jecxz
popa
jmp
pop
jmp
push
jge
aas
out
jmp
inc
xor
dec
hlt
pusha
dec
mov
lods
push
test
inc
sub
jo
xchg
ja
xor
orb
or
add
lea
fcomps
or
repz
xchg
das
call
inc
lock
push
jno
push
inc
test
pop
add
jno
or
add
mov
pop
cmpsb
sar
pop
mov
es
mov
repnz
jecxz
add
xchg
sbb
push
or
hlt
fildll
inc
jmp
fistl
in
popf
push
push
ds
in
push
dec
or
loopne
std
fstps
mov
test
or
pushf
lods
fistps
stos
push
mov
loopne
into
fcmovbe
aaa
cmpsl
pop
imul
imull
mov
in
jl
cmpsb
jmp
and
sub
not
addb
xchg
xchg
imul
repz
lea
shll
pop
pop
mov
or
enter
mov
or
fdivl
sub
sub
dec
fs
faddl
pop
out
ror
out
lret
lds
mov
out
sub
cmp
sbbb
not
and
adc
dec
and
adc
test
mov
dec
push
sub
in
gs
mov
mov
mov
scas
lahf
dec
mov
adc
adc
push
stos
mov
gs
dec
shrl
push
cwtl
inc
mov
xlat
mov
adcl
mov
push
cmp
xor
movsb
jge
mov
mov
mov
xor
cmp
fnstcw
sbb
mov
cmc
mov
dec
push
in
mov
mov
mov
push
or
and
fmuls
cmp
mov
test
gs
push
push
sub
add
stos
in
fdivrl
cmp
sub
cmp
push
aam
ja
mov
cmp
mov
cmpsb
cmp
outsl
cmp
lock
cmpsb
outsb
mov
jmp
fs
mov
nop
ja
mov
push
fbstp
pop
mov
mov
or
or
das
in
repnz
jb
loopne
pop
jbe
shrb
push
xchg
pop
cli
lahf
shlb
mov
hlt
pop
inc
fsubs
inc
jae
pop
inc
xchg
lock
das
call
inc
lock
push
jno
push
sbb
les
insb
xchg
and
jno
mov
xchg
jo
or
add
push
movsl
mov
mov
popa
adc
adc
loop
mov
push
inc
jbe
adc
shr
push
stos
ret
xor
mov
jp
lds
cwtl
test
aam
out
mov
push
pushf
inc
adc
fisubl
or
inc
jbe
push
inc
jo
push
dec
mov
adc
cmp
outsl
ja
and
mov
jb
dec
ret
xor
ret
xor
mov
cld
ds
hlt
or
jbe
cmp
dec
jl
cld
repz
lock
clc
arpl
and
test
loope
sub
xor
loope
mov
jo
or
push
into
loopne
push
cs
ret
lahf
sbbb
fdecstp
aas
into
loopne
add
dec
cmp
sbb
stc
xor
insl
ja
nop
mov
inc
mov
es
in
iret
ret
aaa
sub
dec
push
jnp
bound
mov
cmp
push
ficoml
lret
inc
pop
arpl
cmp
mov
push
test
cmp
test
dec
inc
mull
push
ljmp
add
imul
mov
repnz
arpl
adc
push
aaa
mov
push
aad
dec
es
sub
adcb
xchg
pop
int3
inc
bts
rclb
insl
or
push
imul
popa
push
jl
mov
cld
cmp
sbb
sbb
xchg
xchg
sub
adcb
mov
mov
pop
fidivs
lds
adc
mov
aaa
add
lcall
es
repnz
ret
jb
jo
cmpsl
mov
add
push
xor
cli
cli
jbe
mov
lea
pushf
jb
sbb
dec
fdivl
push
dec
jecxz
dec
addb
clc
xchg
cltd
pop
dec
xor
dec
dec
ds
sbb
and
adcl
sub
sbb
sub
into
adc
repnz
pop
fs
adc
and
cmp
fnstsw
or
mov
mov
data16
jp
cltd
adc
mov
int
shll
xor
pop
nop
fistpll
ret
inc
les
pop
cmp
in
imul
cltd
mov
push
pushf
push
add
add
testb
sub
xchg
mov
daa
pop
dec
add
dec
mov
nop
cmpsl
mov
stos
pushf
test
push
mov
mov
dec
pop
pop
in
in
mov
test
orl
les
repnz
jle
lods
sarl
push
push
jbe
push
in
test
adc
cwtl
xchg
ja
mov
mov
pop
dec
xor
dec
dec
ds
cmpsl
sbb
dec
sub
lock
push
bound
jecxz
sar
push
jp
ret
adcl
mov
cs
jle
out
xor
mov
sub
shr
sub
fdivs
cwtl
add
std
push
dec
jecxz
cld
shl
dec
addb
dec
xchg
cltd
pop
dec
xor
dec
dec
ds
cmpsl
sbb
scas
sub
mov
sub
bound
decl
add
in
insb
adcl
mov
cs
jle
out
xor
stos
mov
mov
adc
pop
adc
sub
or
push
dec
jecxz
aam
loope
addb
outsb
mov
std
ror
out
sub
dec
pslld
dec
enter
sahf
sub
mov
adc
cmp
pop
test
stos
std
push
outsb
pop
sub
cltd
shl
sbb
jp
cltd
inc
ret
pop
pop
idivb
lcall
xor
mov
shl
in
jl
or
mov
out
xchg
lds
pop
divb
fmuls
mov
in
pop
xor
fsubrl
dec
or
ss
sub
xchg
shl
pop
pusha
cs
pop
push
subb
js
push
popa
pusha
adc
pop
xchg
jp
mov
mov
fs
push
fdivs
dec
cli
aam
or
mov
or
pop
es
out
std
sbb
in
cmp
cmp
jno
aas
mov
mov
xchg
sti
push
aaa
scas
cltd
cmp
pusha
add
rorl
push
cmpsb
test
sahf
in
sbb
insl
push
dec
sbb
arpl
mov
mov
jecxz
mov
clc
filds
and
cwtl
pusha
int3
and
cmp
pop
mov
mov
sub
or
lods
arpl
scas
mov
enter
mov
xchg
ljmp
aam
xchg
aam
and
daa
fisubl
test
mov
sarb
xlat
mov
jbe
dec
and
xchg
ljmp
push
mov
cmp
mov
imul
ds
repnz
pop
int
nop
bswap
sbbb
lock
mov
lcall
out
or
sbb
lret
jae
jmp
adc
rcrl
mov
das
lcall
imul
pop
outsl
mov
ljmp
shrb
mov
je
inc
adc
cmpsl
aam
adc
adc
fwait
scas
push
pop
dec
insb
xchg
jo
cwtl
lcall
xorb
mov
push
dec
pop
stos
mov
ds
or
outsb
lcall
jae
nop
das
int3
mov
movsb
in
orb
mov
or
xor
jle
jno
pop
cmp
dec
pop
sub
cmp
ds
push
test
in
hlt
cmp
pop
xor
jg
adc
outsl
dec
sahf
mov
lcall
jae
pusha
das
rolb
push
bsf
dec
mov
sub
fs
jno
pop
dec
lahf
dec
xor
xor
in
inc
push
imul
pop
popa
sbb
orb
xlat
mov
inc
mov
in
cmp
pop
xor
jg
mov
popf
je
in
xchg
push
repnz
pop
lcall
add
cs
add
cmp
ret
jae
inc
das
sub
mov
mov
movsl
std
aam
dec
outsb
mov
inc
imul
jo
pop
push
push
xor
mov
test
lcall
jae
shrb
andb
fbstp
lcall
in
icebp
cmpsb
sub
jg
fwait
stc
cli
jbe
and
jbe
xlat
xchg
ljmp
mov
push
mov
push
stos
and
push
cmp
aam
lret
jae
mov
loopne
in
nop
jl
push
dec
jbe
mov
sub
and
lret
cltd
pop
or
dec
pop
cmp
push
push
jbe
imul
push
nop
outsl
push
fs
sub
mov
scas
pop
test
push
das
int
inc
test
js
pop
xchg
sub
outsb
jmp
mov
pop
arpl
cmpps
sub
in
cmp
jae
mov
addl
bound
shrb
lcall
ja
dec
fidivrs
dec
sbb
shl
aas
push
enter
roll
ja
xor
dec
pop
mov
loope
push
or
enter
mov
push
int3
cmpsl
sub
xchg
jecxz
rolb
dec
adc
xorl
shl
popf
loop
cmp
in
cld
cs
xor
rcll
rcrl
mov
lcall
inc
inc
lahf
jge
cltd
pop
dec
xor
dec
dec
ds
cmpsl
sbb
xchg
test
cmp
adcl
sub
in
sub
bound
jecxz
sar
push
push
dec
ret
adcl
mov
cs
jle
out
xor
popa
stos
mov
sub
test
sub
mov
test
pushf
mov
mull
dec
xlat
test
mov
out
dec
pop
xor
add
rorl
pop
xchg
cs
pop
pushf
add
mov
sbb
ljmp
ljmp
sti
loop
rolb
push
inc
jbe
xlat
cli
pop
lods
add
add
jle
cmp
shrl
jecxz
pop
subb
jae
ret
iret
lret
clc
cmp
pop
push
lcall
cmpsl
popa
ljmp
fdiv
pop
cmpsb
data16
fs
orb
clc
sbb
dec
adc
mov
jge
aaa
into
outsb
mov
pop
sbb
ds
dec
shr
inc
lret
clc
mov
iret
daa
inc
sub
cmc
and
fistl
sub
jo,pn
jle
adc
cli
sub
out
mov
pop
lret
loop
into
ss
sub
sub
inc
mov
and
fwait
jno
data16
add
daa
dec
inc
xor
cld
repz
or
push
xchg
inc
jno
dec
jp
cltd
adc
mov
int
shll
xor
std
mov
les
pop
or
in
imul
data16
cltd
mov
mov
pusha
add
add
cmp
xchg
mov
roll
in
loop
cs
jle
or
orb
push
mov
pushw
cltd
adc
mov
int
rcrl
xor
pop
mov
aas
ret
inc
les
pop
and
in
inc
or
mov
mov
or
add
fsubl
jecxz
add
xchg
imul
cli
lahf
aam
jle
dec
inc
mov
hlt
pop
inc
popl
mov
dec
jae
pop
ss
sbb
aam
inc
lock
push
jno
push
cmp
insb
les
into
insb
xchg
fwait
addb
ds
hlt
inc
dec
jbe
sbb
sbb
ljmp
ljmp
dec
jne
dec
into
push
mov
inc
push
in
cmpb
adc
aas
ret
ret
xor
cmp
mov
cmp
xor
stos
mov
out
sub
pop
orb
mov
ret
dec
push
jecxz
loopne
in
lock
add
mov
ds
hlt
cmp
jbe
clc
jne
in
mov
mov
mov
ja
and
cmpsl
fcmovbe
cmp
aam
ret
xor
popa
outsl
mov
cwtl
jge
pop
pop
into
fsubs
scas
sbb
aas
ds
fadds
sbb
ret
insb
jmp
test
mov
jne
dec
into
push
mov
inc
push
in
les
cmp
cmp
xor
rol
ljmp
dec
lock
test
gs
push
cmp
sub
add
push
ljmp
cmp
aam
mov
arpl
je
mov
add
xorl
cltd
add
int
dec
pop
push
dec
fidivrs
xchg
scas
insb
movsb
mov
loop
cs
fnstsw
or
hlt
or
sarb
bnd
and
hlt
sub
jl
sbb
pop
aas
mov
sub
cmovg
cmp
aam
ret
les
ret
xor
sahf
inc
je
dec
in
dec
dec
in
mov
ja
test
pop
jb
mov
mov
inc
fmull
repnz
jmp
int3
cli
jl
inc
push
jo
xchg
adc
mov
hlt
inc
dec
hlt
dec
dec
adc
sbb
pop
aas
test
js
mov
xchg
inc
dec
adc
cmp
aam
ret
mov
fs
xor
jle
je
dec
les
mov
test
mov
jae
mov
mov
daa
push
sbb
mov
push
xor
mov
fcmovb
lret
mov
mov
push
inc
jo
inc
dec
dec
jae
cwtl
xchg
nop
mov
ja
and
mov
stc
cs
stos
jle
fcompl
push
sub
pushf
xchg
cld
out
pushf
cld
pop
pop
fdivr
push
jbe
pop
sub
add
andb
push
push
hlt
mov
lret
lcall
stos
jno
or
add
mov
pop
mov
mov
xorb
in
repnz
jecxz
add
xchg
leave
rcrb
push
xchg
pop
cli
lahf
cld
cmpsl
jle
dec
jle
mov
jmp
pushf
mov
decl
push
pop
js
insl
mov
fwait
sbbb
push
push
hlt
mov
out
dec
pop
push
stos
jno
or
add
mov
cld
pop
lcall
movsl
shlb
in
loopw
add
das
in
repnz
jecxz
add
xchg
imul
cli
lahf
xchg
cmpsl
jle
dec
push
mov
inc
mov
cld
pop
push
fdivr
push
ss
sbb
insl
mov
fwait
xorb
mov
lcall
stos
jno
or
add
roll
pop
je
in
pop
jl
add
mov
cmpsb
push
popa
pusha
adc
pop
xchg
jp
in
adc
push
dec
add
stos
shll
sub
int3
jge
sbb
mov
dec
mov
sbb
lahf
mov
pop
dec
or
sbb
jg
pop
loope
xchg
pop
arpl
dec
dec
std
jle
push
pusha
xor
pop
cmpl
push
pushl
pop
push
shlb
jo
or
add
mull
out
and
push
in
and
jae
mov
fistpll
ret
inc
hlt
fmul
outsl
push
inc
js
je
cmp
and
jl
in
xor
ror
lcall
mov
mov
xchg
jp
jge
adc
popa
mov
fs
lcall
insb
mov
dec
push
mov
cwtl
roll
cwtl
rorl
fs
repnz
sbb
frstor
adc
in
ret
bound
cltd
stos
out
mov
adc
test
in
pop
mov
mov
inc
pushf
sbb
ljmp
ljmp
dec
jne
dec
into
push
mov
adc
mov
xchg
dec
mov
xor
fnstenv
or
add
add
jmp
sub
push
push
inc
push
outsb
pop
cmpsb
fdivr
cmp
pop
push
adc
and
lea
dec
stos
mov
movsb
mov
add
es
push
or
movsl
sarl
push
hlt
cmpsl
pushw
cld
mov
cwtl
std
popl
xchg
lds
cltd
lods
imul
or
mov
push
inc
je
pop
dec
fdivr
cmp
dec
xadd
jl
clc
dec
fsubrs
fistpl
xchg
xchg
and
add
bound
stos
shll
sub
int3
jne,pn
pop
jbe
push
push
jbe
push
in
mov
mov
xchg
ja
mov
mov
pop
dec
xor
dec
dec
ds
cmpsl
push
mov
stos
sar
pop
mov
es
addr16
add
das
in
repnz
jecxz
add
xchg
cltd
shr
push
xchg
pop
cli
lahf
mov
mov
hlt
pop
push
push
mov
or
pop
xchg
push
mov
lods
push
jno
push
lods
pop
stos
call
loope
insb
xchg
cwtl
jge
mov
mov
data16
jo
or
add
lods
movsl
mov
mov
popa
adc
call
mov
rcll
cwtl
mov
push
xchg
int3
ds
popa
ljmp
jae
mov
pop
or
insl
mov
fwait
test
dec
adc
mov
jge
insb
jb
in
and
insb
or
cwtl
lret
ljmp
insb
mov
rcrl
jl
shl
mov
dec
xlat
test
mov
not
les
sub
sub
cmpsl
negb
stos
mov
sar
cmc
pushf
cld
repz
lds
cltd
stos
jmp
mov
aas
ret
inc
into
outsl
movsb
pop
pusha
sub
imul
cltd
mov
ret
add
sahf
es
fs
orb
lods
in
pop
pop
int
repnz
cmp
mov
es
inc
push
outsl
loop
arpl
arpl
cld
repz
jmp
je
inc
lock
push
jno
push
jp
into
jge
aaa
into
outsl
push
or
mov
dec
cmp
mov
cwtl
push
sbb
push
mov
enter
push
dec
jecxz
push
shl
dec
addb
jge
cltd
pop
dec
xor
dec
dec
ds
sbb
xchg
inc
adc
sub
and
sub
bound
jecxz
sar
push
push
dec
ret
adcl
mov
cs
jle
out
xor
stos
mov
sub
test
sub
mov
test
pushf
mov
mull
dec
xlat
test
mov
out
dec
pop
jo
jno
or
add
rorl
xchg
cs
pop
pushf
add
aam
inc
in
sbb
loope
stc
sub
xor
lea
push
popa
mov
fs
into
lcall
call
in
mov
cwtl
rcll
jge
test
je
pop
in
push
jo
push
or
push
loopne
in
cmpsl
test
mov
jle
call
sub
jbe
lcall
imul
mov
cmpsb
push
popa
pusha
adc
pop
xchg
jp
insl
push
adc
popa
mov
fs
orb
loopne
shll
sarl
sub
repnz
insb
popa
pusha
sbb
frstor
adc
in
xor
fs
ds
stos
out
add
les
sbb
cs
pop
faddl
sbb
mov
sbb
ljmp
ljmp
dec
jne
dec
into
push
inc
mov
pop
push
popl
in
sub
sub
loopne
push
add
push
rol
movsb
jecxz
jno
fmull
adc
push
pop
in
and
sbb
dec
movb
dec
out
pop
ljmp
ljmp
decl
daa
inc
sub
aad
and
fistl
sub
jl,pn
jle
adc
rol
subl
sub
push
ss
sub
sbb
inc
mov
and
fwait
jno
push
dec
mov
cmpsb
mov
std
add
out
sub
dec
pslld
jmp
jl
lcall
sub
in
adc
inc
sub
sahf
aad
and
fistl
sub
cs
jle
adc
mov
add
add
shll
stos
mov
dec
or
jmpw
jmp
jge
aaa
into
outsb
mov
cmp
cmpsl
pushw
jl
test
mov
jno
jno
or
add
add
mov
call
loope
insb
xchg
mov
inc
mov
jno
mov
mov
pop
sahf
lea
jno
sbb
xchg
scas
insb
movsb
mov
add
es
pop
or
movsl
sarl
push
push
cmpsl
pushw
pop
mov
clc
lock
jne
mov
inc
inc
mov
inc
mov
pop
test
mov
adc
and
xchg
sbbl
adc
cmc
pop
test
dec
push
mov
lock
roll
fdivl
xchg
inc
shlb
xchg
cld
xchg
dec
fdivs
movb
cmp
add
pop
cld
loope
and
sub
test
bound
xorb
cwtl
ficoml
sub
cmpsb
sub
in
and
out
out
outsb
cltd
and
popa
rcrb
mov
mov
andb
les
add
lds
sbb
loopne
sbb
popa
int3
sub
shll
cmc
jl
lods
or
or
jbe
add
xchg
popa
dec
xchg
out
xor
cmp
push
xlat
hlt
add
push
icebp
dec
iret
xchg
shrl
fs
xor
loope
and
dec
lds
addb
sti
aas
add
out
jge
xor
ret
cmp
sbb
xchg
xchg
loopne
mov
das
bound
shlb
or
subl
add
cwtl
or
inc
dec
push
mov
mov
push
mov
loop
aam
dec
push
push
mov
inc
jbe
jno
int3
cwtl
sarl
pop
lods
sub
icebp
or
add
inc
jno
jno
or
add
add
or
xor
sub
rclb
outsb
aas
ret
adc
jg
paddsb
pop
mov
in
mov
or
rorl
int
shl
fwait
sub
sub
adc
push
inc
scas
shl
je
dec
sub
cld
push
push
into
ret
adc
jmp
or
mov
adc
lret
mov
idiv
sub
xchg
lret
out
add
mov
pop
push
mov
fcmovbe
aaa
push
nop
xor
push
pop
je
mov
xchg
aam
pop
sub
or
sub
gs
mov
cs
sub
jns
jbe
fs
fmuls
pop
pop
outsb
mov
mov
jbe
out
js
insb
outsb
mov
je
sub
adc
lods
xor
inc
insl
test
lret
cmp
je
sbb
or
es
hlt
pop
push
data16
inc
fmull
inc
xchg
out
xor
jle
test
dec
and
pop
dec
pshufb
mov
test
gs
push
leave
sub
mov
pop
mov
and
mov
movsl
aas
add
jle
clc
rcl
aam
shl
mov
mov
push
push
cmc
inc
mov
mov
jmp
int3
cli
dec
mov
mov
ljmp
pop
mov
adc
es
insl
mov
fwait
subb
arpl
hlt
mov
aaa
into
bound
stos
shll
sub
int3
adcb
fs
push
push
jbe
push
in
lods
push
mov
sub
ja
mov
mov
sub
rolb
mov
pop
cmpsl
data16
push
in
dec
bound
in
push
aas
jb
cmp
jle
adc
push
or
roll
cs
ja
test
in
push
inc
jo
ss
in
outsb
mov
add
lret
adc
jl
mov
je
in
clc
push
data16
hlt
je
popa
add
mov
hlt
and
mov
in
xchg
xchg
add
lock
lahf
call
xchg
ljmp
aas
stos
loopne,pt
pop
push
cmp
mov
push
in
hlt
push
leave
xchg
push
je
adc
das
push
and
jecxz
fsubrl
insl
mov
fwait
lods
insl
in
pop
pop
int
repnz
push
or
aam
dec
insb
repz
jge
jl
inc
movsb
mov
hlt
add
hlt
or
mov
push
pop
fisubl
adc
lods
sahf
aad
and
fistl
sub
mov
mov
rcrl
outsl
fcmovbe
shl
cli
cli
jbe
mov
data16
pushf
clc
cmpsl
sti
cwtl
pusha
aad
push
shrl
xchg
sub
outsb
jmp
mov
mov
cmp
jmp
inc
mov
xor
xchg
jle
gs
sarb
cltd
mov
push
pushf
and
and
sbb
add
testb
inc
pop
xchg
mov
ret
add
out
loop
js,pn
jle
or
int3
or
mov
insl
mov
data16
data16
cltd
adc
mov
rorb
pushf
push
mov
shll
mov
scas
sub
add
stos
inc
mov
popa
sbb
push
mov
rorb
rcrl
dec
cmpsb
in
add
and
or
adc
jecxz
mov
js
les
mov
outsl
jne
daa
cmp
sahf
xchg
mov
test
fcomi
xchg
or
adc
andl
cmpsb
in
push
sti
lods
pop
ljmp
mov
movsl
inc
mov
push
popa
popa
xor
adc
outsb
out
iret
xor
pop
jno
pop
out
adcb
loop
xor
call
les
call
cli
iret
jb
arpl
dec
push
add
sbb
cs
inc
test
jno
pop
xchg
sub
outsb
jmp
mov
mov
sbb
cs
mov
cwtl
dec
pushf
sti
mov
dec
andb
sub
les
xorl
mov
popa
addr16
ja,pn
pop
adc
filds
fwait
aad
add
cmpsb
rcrl
add
cli
mov
dec
rorl
cmp
les
cld
ljmp
add
inc
shrl
jmp
inc
fmull
repnz
std
loope
cmpsl
int3
cli
test
inc
push
jo
dec
adc
mov
hlt
in
hlt
in
dec
clc
mov
push
fcoms
adc
dec
fbstp
push
dec
or
mov
mov
sub
lock
inc
cmpsl
mov
cwtd
mov
add
jp
cltd
adc
mov
mov
sub
push
mov
ljmp
push
popa
dec
push
mov
xchg
jbe
or
mov
hlt
xorb
in
add
sub
cwtl
mov
pop
sbb
mov
je
aaa
mov
jge
add
sub
mov
mov
xor
loopne
ss
fcoms
das
call
pop
inc
or
fs
mov
shrb
inc
jbe
xlat
xlat
pop
or
mov
sub
mov
insl
jno
pop
cmpsb
lahf
loopne
push
insl
push
jmp
shl
mov
dec
xlat
test
mov
neg
mov
int
mov
bnd
and
cltd
pop
arpl
bound
mov
mov
dec
mov
test
gs
push
clc
sub
cmpsl
push
adc
int3
dec
and
out
or
mov
dec
bound
das
sub
push
subl
test
into
sub
cmovg
cmp
aam
ret
hlt
stos
popa
adc
add
je
dec
or
jb
inc
rorl
cmp
js
adc
jmp
inc
fmull
out
jno
mov
test
push
insb
push
inc
jbe
xlat
mov
pusha
add
pop
fs
repz
rcrl
sbb
std
jl
hlt
pushf
fsubs
clc
arpl
sub
and
dec
je
in
in
mov
mov
ds
adc
pop
cmc
pop
movsl
push
sub
movsl
add
mov
xchg
xchg
in
paddb
mov
dec
fidivl
aam
add
lea
sbbb
dec
xor
out
mov
jbe
out
clc
jno
int3
dec
cmp
call
ret
lods
cmpsb
test
fcom
push
icebp
xchg
outsb
mov
mov
mov
cmp
fildl
adc
aas
lcall
faddl
test
dec
stos
sbb
sub
dec
imul
jno
pop
bound
insl
push
outsb
lods
mov
mov
mov
push
push
cmc
inc
sbb
cltd
pop
sahf
jne
inc
cmp
sbb
test
cmp
in
mov
aas
jp
mov
xor
sbb
rcl
les
es
dec
xlat
test
mov
not
les
sub
sub
popf
je
mov
movsb
mov
pop
mov
cmc
bound
daa
inc
mov
into
jmp
inc
fmull
repnz
out
jmp
int3
cli
cwtl
mov
jle
cmp
outsb
mov
add
jle
sbb
shrl
out
sub
pop
xorb
mov
ret
dec
outsb
jecxz
loopne
in
subb
mov
add
mov
ds
hlt
sub
jbe
mov
hlt
add
cwtl
pop
rcrb
pushf
test
add
aas
fistps
mov
jle
cmp
popa
or
xchg
mov
cmp
aad
inc
aam
mov
push
cmpsb
pushf
loopne
cmp
frstor
hlt
add
test
sbb
mov
cmp
and
mov
sub
lods
cmp
inc
arpl
add
fdivs
xor
aad
dec
inc
pusha
in
sub
sub
scas
adc
adc
pop
insb
sub
or
enter
inc
pop
mov
aaa
jg
ror
outsl
push
stos
les
imul
fwait
rorl
in
adc
shrl
into
adc
pop
insl
ficoml
lret
jbe
mov
and
mov
pop
fsubrl
insl
mov
fwait
test
mov
xor
mov
mov
fs
lcall
inc
mov
dec
cs
sbb
roll
push
cwtl
rorl
pop
jl
in
icebp
enter
mov
adc
into
addr16
fwait
sub
xor
sub
adc
push
outsb
pop
out
cld
mov
cmp
les
cmp
pusha
dec
clc
lods
sub
mov
add
in
insb
adcl
mov
cs
jle
out
xor
add
sub
cwtl
mov
rcrl
xchg
cmc
mov
push
movsb
xor
or
pop
mov
cld
mov
aaa
setns
pusha
sti
sub
mov
ljmp
mov
jmp
adc
jo
loope
das
dec
subb
movsb
repnz
mov
mov
push
fwait
mov
mov
mov
mov
pushf
pusha
dec
sbb
inc
aaa
sub
and
cld
dec
bound
mov
cmp
cli
into
add
pop
jbe
loopne
subb
xchg
popl
pushf
cmpsb
cwtl
inc
mov
and
lret
je
cmpsb
pop
pop
sbb
test
scas
aam
paddsw
movsl
loope
pop
sti
or
inc
stos
mov
stc
sbb
outsl
daa
xor
dec
call
fsubrl
jge
js
pushf
jge
jl
into
xorb
je
or
mov
popa
stos
mov
lea
dec
fbstp
push
dec
or
mov
mov
sub
clc
dec
rorl
and
les
int3
ljmp
add
mov
adc
xor
mov
jle
test
in
and
into
push
mov
aaa
push
in
cmpb
adc
aas
ret
ret
xor
cmp
mov
cmp
xor
stos
mov
out
sub
pop
orb
mov
ret
dec
push
jecxz
loopne
in
lock
add
mov
ds
hlt
cmp
jbe
clc
outsb
mov
and
jl
lcall
sbb
sub
aaa
setns
out
push
dec
xchg
xor
test
sbb
pop
mov
div
and
cmpsl
mov
sub
loop
popa
stos
mov
movsb
sub
cmpsl
in
popa
out
and
cwtl
rclb
pop
dec
popa
shrb
sub
add
scas
ljmp
or
mov
pop
sarl
push
push
jb
push
pop
test
xor
incl
mov
cwtl
xor
mov
lods
sbb
mov
and
loope
mov
inc
dec
movsb
inc
subb
push
inc
dec
clc
sub
in
adc
aas
push
inc
bound
and
loopne
mov
inc
jno
or
mov
dec
or
scas
push
in
jbe
cmp
add
push
adc
pop
call
xor
pop
in
std
sbb
push
dec
mov
daa
push
sbb
xchg
mov
push
jo
adc
ficoml
or
cwtl
ja
mov
jo
xchg
add
and
into
jecxz
add
xchg
xor
scas
push
xchg
pop
cli
xchg
mov
fwait
pop
xchg
cltd
adc
inc
sahf
sbb
mov
mov
je
pop
mov
je
fs
orb
movsb
in
pop
pop
int
not
jb
add
es
xchg
stos
loope
mov
push
or
mov
stos
mov
sti
pop
dec
test
push
push
test
aas
inc
cmp
pop
insb
loope
fidivl
push
mov
cltd
mov
pusha
stos
and
test
add
cmp
stc
cwtl
cmp
inc
dec
push
test
sbb
shrl
fcoml
ret
xchg
pop
push
scas
fs
ret
cld
adc
popa
adc
repnz
push
cmp
shll
fs
in
ljmp
inc
fldcw
mov
sbb
repnz
dec
mov
pushf
test
add
and
push
popa
jmp
push
jmp
aad
cmpsb
call
stos
mov
out
sub
pop
cmpb
dec
dec
lea
popa
and
sbb
cwtl
sub
mov
sub
mov
adc
xor
mov
call
popf
cmpsb
arpl
hlt
mov
jbe
imul
mov
mov
pop
popl
adcb
shll
stos
mov
out
sub
pop
mov
dec
or
xor
cld
repz
add
push
sbb
jno
data16
dec
push
mov
int
sarl
pop
xchg
mov
adc
aas
ret
inc
les
fmul
outsl
movsb
pop
test
in
imul
data16
cltd
mov
pop
pushf
fadds
add
cmp
jb
arpl
es
jp
cltd
mov
insb
cltd
loop
inc
or
pop
push
mov
int
repnz
je
scas
in
or
jg
hlt
cwtl
mov
fs
rol
xor
xor
cmp
pop
popa
in
cmp
shll
test
adc
bound
cmp
jns
fs
gs
sub
popa
fnop
or
pop
sbb
sbb
cmp
aam
lcall
or
in
lret
arpl
ljmp
and
sbb
sbb
xchg
xchg
in
sub
in
xor
cmp
inc
stos
mov
sti
adcl
jnp
pop
mov
sti
stc
cs
pop
add
mov
jo
fcoms
and
jl
test
sub
leave
sahf
add
subl
test
inc
mov
lods
imul
in
mov
pusha
dec
roll
adc
inc
aas
xchg
les
ds
add
js
inc
or
xor
std
push
dec
mov
std
je
push
dec
mov
daa
push
sbb
lcall
adc
adc
shrb
add
hlt
or
mov
push
js
aas
in
test
mov
inc
dec
adc
cmp
aam
ret
mov
ret
xor
jb
je
dec
orb
ja
test
or
add
dec
mov
and
loope
in
scas
sbb
cpuid
fadds
movb
and
add
bound
stc
dec
pop
stos
fcomp
xchg
subb
fdivr
mov
orb
mov
cs
mov
in
mov
pop
insb
pop
mov
ss
or
ret
add
sub
jmp
jp
jl
lea
jo
push
xchg
mov
shlb
loopne
adc
cmpsb
test
adc
cmp
out
push
hlt
sub
jb
and
mov
adc
cmp
xlat
add
addb
outsl
push
fs
lcall
push
mov
inc
mov
jmp
sarl
or
out
cmp
cli
cwtd
adc
inc
in
pushf
movsb
cld
out
lods
cld
pop
outsb
fdivr
push
mov
subb
mov
xchg
jp
jo
adc
popa
mov
fs
lcall
pushf
mov
dec
gs
mov
cwtl
rcl
push
cwtl
rcr
pop
xchg
sub
icebp
sub
outsl
sub
inc
jno
jno
or
add
add
inc
xorb
insb
sub
call
pop
push
fdivr
cmp
pop
les
mov
lahf
fcomi
mov
xor
add
pop
cli
lahf
mov
jle
dec
cmp
pop
test
hlt
movsl
aas
add
mov
jle
enter
mov
fwait
es
jno
data16
jno
inc
cmp
cli
insb
mov
rolb
push
add
insb
gs
insb
jmp
xor
fwait
push
in
dec
xchg
repz
dec
adc
in
mov
outsb
mov
pop
xor
ret
pop
into
xchg
dec
pop
mov
lret
mov
dec
mov
sub
jl
hlt
fisubs
enter
mov
xchg
push
insl
mov
cmp
mov
sbb
xchg
mov
adc
mov
sub
inc
push
in
insb
cmpsb
lcall
jae
lods
das
mov
loopnew
cmpsb
mov
pusha
sbb
les
dec
ret
mov
aas
shlb
sub
jno
xchg
outsl
cmpsl
mov
add
push
xor
cli
cli
jbe
mov
lea
pop
daa
pop
cwtl
xchg
jmp
daa
mov
lods
imul
mov
les
pop
adc
in
imul
mov
scas
pushf
push
cmpsl
push
dec
push
jae
cwtl
xchg
mov
shl
dec
addb
popl
cltd
pop
dec
xor
dec
dec
cmp
xchg
pop
adc
sub
mov
std
push
outsb
pop
mov
sbb
jl
mov
cli
stc
cs
cmpsb
jle
fcompl
pushf
adc
push
test
adc
adc
sbb
add
cmp
int3
sbb
mov
cmc
insb
dec
cltd
inc
dec
mov
mov
ljmp
fs
xor
outsb
push
inc
sub
enter
ljmp
adc
or
jmp
cmp
jecxz
jbe
dec
repz
enter
dec
inc
jle
cmp
or
inc
mov
push
aaa
ja
lret
mov
pop
ds
pop
mov
push
pop
pop
scas
jge
cmp
mov
push
mov
aaa
push
jne
hlt
pop
bound
clc
jl
add
clc
cmp
cmp
jno
dec
add
daa
inc
sub
sahf
aad
and
fistl
sub
cs
fadd
mov
add
mov
pop
add
cld
pop
sbb
sbb
xor
cwtl
in
push
popa
pusha
adc
pop
xchg
jp
dec
add
push
popa
mov
fs
lcall
mov
mov
cwtl
shrl
cwtl
rcll
sub
repnz
sbb
push
inc
aad
and
fistl
sub
cs
mov
rcrl
mov
cmp
mov
pop
lret
es
ss
sub
les
inc
mov
and
fwait
jno
push
cmp
std
into
out
sub
dec
movnti
aam
dec
roll
mov
ret
xor
insb
push
mov
xor
pop
mov
or
cmp
pop
push
in
in
scas
call
push
andl
ljmp
mov
aas
or
sub
in
xchg
add
mov
pop
outsl
lret
or
out
mov
sbb
add
in
imul
in
xchg
dec
xor
dec
je
call
ret
lods
cmpsb
fsubl
fcom
or
xchg
outsb
mov
mov
imul
mov
mov
pop
rcl
dec
inc
adc
minps
xchg
rcrb
dec
cs
int
adc
push
roll
adc
push
shll
adc
sbb
and
inc
stos
mov
in
xchg
ret
xchg
jnp
pop
jb
cmpsl
mov
sti
stc
cmp
mov
adc
xchg
push
int
lods
aas
lcall
dec
add
insb
jo
or
dec
add
cmp
dec
shl
mov
dec
xlat
test
mov
not
les
sub
sub
pop
mov
jno
mov
pop
jo
or
stc
push
aas
int3
test
mov
xor
jno
pop
es
mov
xchg
dec
adc
dec
push
in
dec
push
cs
in
prefetcht2
scas
jae
pop
jbe
fcoml
aam
inc
lock
push
jno
push
popf
cmp
les
into
insb
xchg
pop
inc
mov
jno,pt
mov
data16
inc
or
dec
add
adc
and
lret
inc
mov
dec
adc
fs
dec
les
cmpsl
mov
outsl
push
les
hlt
cmp
dec
or
std
push
bound
cmpsl
mov
adc
sub
mov
lock
push
lock
les
cmpsl
mov
dec
int3
or
in
cwtl
rorl
je
dec
inc
shll
loopne
push
mov
cltd
shl
and
arpl
xchg
cli
lcall
pushf
mov
arpl
adc
cld
xor
popl
dec
je
dec
test
shll
outsb
xchg
xchg
lds
cltd
lods
imul
loope
mov
xchg
out
xchg
cmpsb
sarl
les
cmp
add
in
pop
or
xor
bound
push
or
in
insb
adcl
mov
cs
ja
out
xor
stos
mov
sub
adc
sub
sbb
add
pop
sbb
in
fsubrl
mov
out
sub
pop
orb
dec
and
stos
loopne
in
les
lea
sub
pop
fs
pop
insb
sbb
push
push
dec
or
sbb
cwtl
xchg
in
push
test
pusha
or
dec
adc
push
cmp
xlat
inc
les
jb
cmp
les
clc
pop
cli
rolb
dec
out
imul
jmp
into
std
fstps
mov
pop
or
es
mov
hlt
dec
cltd
mov
mov
xchg
neg
shlb
in
cltd
pop
pusha
clc
sub
mov
cmpsb
jmp
fisubrl
lcall
push
les
dec
xchg
repz
dec
adc
lock
mov
aas
add
aam
dec
push
push
xor
push
cmpsl
inc
jb
adc
dec
fs
jmp
xchg
xchg
repnz
lods
cld
dec
ljmp
or
cmpsl
mov
outsb
and
jp
jg
add
ljmp
push
push
ljmp
mov
xchg
cmpl
les
mov
or
fdiv
jo
in
push
jo
xchg
int
loope
test
aaa
add
lcall
es
cmpb
mov
mov
dec
popa
dec
mov
cwtl
rorl
cwtl
shll
cmp
in
repnz
sbb
mov
jno
sub
icebp
fwait
pop
dec
add
dec
mov
test
cli
cmpsb
pushf
lods
add
mov
mov
xchg
add
push
dec
mov
daa
push
pop
scas
cmpsl
jle
ret
sub
sar
push
push
jae
mov
or
pop
push
mov
mov
jge
pop
cmp
in
push
jo
pop
popa
or
push
lcall
inc
jle
fwait
cmpb
pop
mov
add
dec
mov
inc
mov
rcrl
or
pushf
dec
cld
repz
je
push
jle
cwtl
jno
or
dec
push
mov
popf
cmpsb
dec
pop
dec
mov
movsl
repnz
jg
std
orb
faddl
mov
xor
cwtl
push
cltd
test
add
pop
bound
cwtl
or
and
pushf
andl
pusha
sub
je
fs
and
push
outsb
mov
mov
addb
imul
mov
lods
mov
adc
add
mov
sbb
add
aam
mov
jno
fadd
sarl
xchg
or
pusha
pusha
insl
mov
jecxz
xor
push
push
mov
mov
in
push
pusha
rorl
jg
imul
sbb
xchg
push
stc
loop
popa
stos
cmpsl
push
test
dec
out
popa
into
call
stos
mov
out
sub
pop
orb
mov
ret
dec
es
loopne
in
enter
lods
clc
add
mov
ds
hlt
adc
jbe
pop
or
std
push
outsb
aas
fsts
fcomip
fistl
cmpsb
popf
xor
dec
sarb
or
cltd
jne
aas
mov
push
outsl
cmpsb
clc
cwtl
imul
dec
sbb
cwtl
mov
nop
shll
stos
mov
out
sub
pop
subb
dec
into
jecxz
loopne
in
and
inc
lcall
in
pop
hlt
add
cmpsl
mov
and
rorb
mov
mov
pop
std
jno
cwtl
iret
push
add
cmpsb
dec
out
sub
cmpsl
dec
pop
out
lcall
ss
or
int3
cmpsb
and
mov
adc
inc
xor
incb
adc
jmp
xchg
or
rcll
pop
inc
ljmp
cltd
into
cmp
movsl
jg
xchg
es
movsb
xor
sub
dec
or
movsb
push
pop
xchg
ror
out
lret
les
add
in
sub
cmp
or
aaa
jb
fucomi
les
ror
push
mov
into
dec
mov
rcll
mov
mov
mov
fsubl
mov
mov
xor
fidivl
mov
pop
cld
cmp
mov
jmp
cld
int3
movsb
and
push
rcl
test
scas
sarb
sub
push
out
push
and
xor
je
rcrb
icebp
dec
iret
xchg
shrl
pop
xor
les
push
inc
dec
test
mov
cs
dec
les
cli
test
jge
cwtl
pop
fsubp
add
iret
icebp
pusha
sub
cmpsl
cmp
shr
xor
cmp
outsb
or
pop
shll
inc
push
imul
pop
and
cli
pop
fsubr
rorl
pushf
movsb
cmp
inc
in
cli
fadd
in
sbb
pop
pop
fdivr
shufps
lcall
sub
mov
jmp
jge
aaa
into
outsl
push
or
mov
dec
inc
jg
mov
and
nop
sbb
mov
rcrl
dec
mov
mull
dec
xlat
test
mov
dec
xor
dec
dec
ds
cmpsl
push
mov
pop
cld
pop
into
sar
pop
es
mov
stc
cltd
push
data16
xchg
stos
dec
outsb
mov
movsb
mov
popa
sbb
inc
mov
es
jo
jae
lock
sub
push
cmpsl
pushw
pop
mov
test
dec
jns
adc
push
sub
xor
ret
mov
sbb
pop
sub
mov
movsl
subl
jnp
fwait
pop
fildl
xchg
in
xor
jecxz
shlb
push
dec
push
mov
xor
flds
enter
ja
pop
adc
fs
imul
cmpsb
pop
pop
stos
rolb
insl
ss
xor
or
xchg
and
insl
testb
pop
push
shlb
dec
cmpsb
jl
inc
sbb
test
inc
inc
loope
aam
aas
jmp
fsubrl
lods
or
ss
push
push
in
jl
fsub
movsl
xlat
sbbb
and
out
and
pop
adc
or
jg
pop
loope
xchg
pop
arpl
dec
popa
cld
or
push
pop
push
xchg
add
ret
xor
mov
sar
push
into
dec
ret
adcl
mov
jno
pop
negb
sahf
jl
andb
mov
popf
je
pop
push
jo
xchg
pop
push
xor
or
les
test
orl
dec
mov
mov
inc
rorl
dec
pop
pushaw
push
in
bound
in
insb
aas
ljmp
or
cmpsb
cmp
jo
xorb
repnz
ret
pop
xor
lcall
rcrl
test
lahf
dec
dec
lea
pop
push
mov
or
inc
mov
push
imul
mov
cmp
push
mov
and
mov
or
mov
lea
add
jp
cltd
adc
frstor
add
out
movsl
dec
push
add
push
cmp
mov
cs
mov
test
cli
cmpsb
pushf
movsb
add
mov
pop
inc
in
push
sbb
push
scas
dec
ret
adcl
ds
sub
sar
push
push
jae
mov
or
pop
push
mov
mov
jge
pop
cwtl
je
pop
in
push
jo
pop
popa
or
push
insl
jae
cmpsl
test
mov
movsl
call
jl
jbe
dec
mov
dec
mov
mov
cmpb
clc
test
lds
xor
dec
stc
sub
xor
mov
adc
pusha
xchg
sbb
out
inc
pop
dec
scas
jno
or
add
lea
lock
pop
arpl
pushf
pop
cld
repz
xor
cwtl
pushf
add
pop
xchg
mov
pop
mov
sub
mov
or
inc
sub
xchg
xchg
loope
inc
movsl
jg
int3
daa
icebp
outsl
dec
and
dec
and
js
jge
testb
cli
adc
add
dec
sbb
mov
cld
mov
out
xchg
dec
pslld
dec
in
das
std
jae
mov
mov
add
cmpsb
divb
and
pop
dec
subb
cld
aas
and
pop
jne
test
ja
out
sahf
cmpsl
mov
repnz
or
mov
popa
stos
mov
push
dec
jg
divb
inc
into
jle
test
adc
popa
mov
fs
into
call
mov
jae
xchg
push
sahf
mov
bound
ja
test
sub
jne
jae
mov
adcl
adc
mov
cmp
jmp
cli
ret
stos
dec
orps
xor
sbbb
mov
sbb
sbb
mov
shlb
ret
dec
adc
cmp
jb
dec
ret
lock
popa
outsl
mov
cwtl
jge
insb
pop
outsl
sbb
cs
xor
xchg
repnz
jmp
les
fwait
repnz
add
sub
add
je
lret
shrb
xchg
loope
adc
sets
sub
mov
inc
push
pop
or
cli
std
push
dec
sub
dec
wrmsr
aam
dec
push
push
xor
push
cmpsl
inc
jb
adc
pop
sub
loope
jp
mov
std
add
outsb
mov
cmp
xlat
repnz
xchg
scas
xchg
cld
stos
inc
rolb
sub
lods
cmp
mov
mov
imul
insb
mov
inc
shlb
inc
cwtl
jge
sti
mov
push
pusha
adc
mov
les
dec
dec
data16
lahf
nop
push
faddl
insl
mov
and
xchg
inc
out
mov
mov
movl
jno
sub
aas
mov
int
sub
shrb
mov
aas
stos
std
les
ja
mov
or
andl
stos
mov
out
sub
pop
adcb
dec
push
popf
or
dec
fsubl
xchg
mov
mov
ja
pop
pop
mov
lahf
in
mov
stos
jecxz
sar
push
inc
dec
ret
adcl
mov
cs
jle
out
xor
stos
mov
sub
xor
sub
cmp
dec
rcrl
or
shl
mov
dec
xlat
test
mov
not
les
sub
sub
popf
je
push
adc
mov
pop
mov
ljmp
lods
hlt
mov
xchg
testb
bound
stos
jmp
rorl
and
mov
inc
rorl
or
les
lods
ljmp
pop
inc
ficompl
jle
loope
fimuls
lret
popa
in
jno
in
outsl
push
mov
ja
jb
nop
data16
std
push
in
mov
adc
lret
movsl
loope
popa
lock
adc
sbb
outsl
pop
dec
inc
mov
ljmp
jno
addr16
loope
aam
push
test
mov
pushf
ret
fstp
dec
fxch
mov
mov
into
das
mov
in
lock
in
clc
aas
cmp
cmpsb
rsqrtps
xchg
lds
cltd
lods
imul
push
inc
mov
lods
dec
sar
push
jae,pn
xchg
xchg
sub
pop
insb
sbb
mov
cmc
and
sbb
mov
adc
into
test
dec
jle
adc
push
insb
mov
adc
sti
insl
push
mov
cli
cli
jbe
mov
lea
mov
dec
int
dec
pop
push
inc
pop
xchg
mov
and
jmp
int3
cli
and
notb
sbb
mov
sub
mov
adc
cmp
lods
adc
scas
clc
push
aaa
cli
jle
outsl
ja
and
mov
mov
lock
add
dec
out
add
mov
out
pushf
mov
pop
ljmp
and
in
or
or
repnz
repnz
xchg
es
fdivrp
aas
cmp
push
pop
mov
and
cmp
jmp
ficompl
pop
lret
lock
ret
xchg
push
mov
pop
popa
movsb
mov
loope
and
aaa
jo
mov
loopne
xchg
ret
xchg
jnp
pop
add
cli
sti
xchg
sub
movsl
mov
jmp
sub
imul
pusha
jnp
cltd
rcl
mov
movsl
push
aam
dec
jbe
call
call
pop
adc
or
jg
pop
loope
xchg
pop
arpl
dec
les
hlt
pop
mov
and
sub
cmp
call
jbe
clc
outsl
ss
in
xchg
add
push
pusha
pusha
insl
mov
cltd
lods
imul
pop
dec
mov
and
roll
adc
in
cmp
cmp
aam
dec
jbe
enter
std
in
xor
pop
mov
mov
ja
and
mov
stc
cs
inc
jle
loope
in
test
push
call
ret
xor
and
ds
jno
pop
jbe
xchg
and
add
dec
or
xor
cld
repz
jnp
xchg
jmp
cmp
pop
rcrl
sti
lods
imul
idiv
lods
mov
xlat
xchg
outsb
sub
js
mov
mov
and
stc
pop
sub
adc
aaa
sub
fisubs
andb
cmpsb
push
add
xchg
xchg
inc
icebp
dec
mov
dec
adc
pop
testb
inc
pop
sbb
cmp
mov
dec
mov
sub
pop
ss
bound
mov
aad
incb
cld
leave
mov
cmp
dec
or
inc
ret
in
mov
and
inc
jb
lds
loopne
mov
aaa
xchg
and
xor
ss
lods
clc
push
ret
pop
scas
test
repnz
sbb
mov
mov
dec
leave
mov
cmp
std
xchg
fisubs
mov
pop
and
ss
inc
xor
push
es
fcomps
mov
and
fisttpll
adc
and
dec
pslld
loope
mov
xchg
xchg
mov
into
dec
jg
fcmovbe
fstpl
shll
sahf
cmp
inc
gs
stos
shr
cmp
xor
push
shr
inc
stos
jno
dec
adc
mov
sbb
dec
fiaddl
sub
sbbl
pop
add
mov
and
jge
pop
fdivrs
int
dec
pop
push
inc
pop
xchg
mov
fisubl
dec
add
dec
idivb
fwait
or
mov
cltd
mov
add
jp
cltd
adc
mov
add
mov
stc
clc
cmc
scas
das
push
dec
jae
cmpsl
test
mov
jle
cmpsb
push
popl
pop
aam
push
sarb
repnz
jle
clc
mov
pusha
sbb
frstor
adc
cs
sahf
cltd
stos
out
movsb
ja
mov
pop
inc
cs
pop
dec
add
push
xchg
cmp
xor
xor
movsl
mov
arpl
hlt
mov
fwait
lcall
cwtl
jno
dec
ljmp
dec
pop
das
lcall
movsbl
enter
stos
jecxz
sar
push
mov
adcl
mov
cs
jle
out
xor
pop
scas
pusha
mov
stos
jae
pop
push
xchg
pop
xchg
das
call
inc
lock
push
jno
push
in
in
bound
cltd
stos
out
pusha
ja
mov
in
nop
shll
cs
pop
cmp
js
mov
sbb
ljmp
ljmp
sti
loop
movsb
test
push
les
inc
jbe
xlat
aas
pop
clc
add
cld
jle
test
call
stos
mov
outsb
mov
cwtl
bound
cltd
stos
out
pop
ja
mov
pop
aam
in
pop
faddl
push
cmpsl
mov
jl
mov
mov
popa
adc
inc
in
loop
cs
fnstsw
or
sub
cwtl
mov
jmp
jno
data16
sbb
pop
cld
jg
test
je
pop
xchg
mov
repnz
ret
inc
les
into
outsl
movsb
pop
subb
imul
loopne
jp
mov
jb
faddl
add
dec
pop
push
mov
jno
sub
ss
int3
cli
aam
inc
push
jo
cmp
int3
sub
mov
sub
mov
adc
cmp
sub
ljmp
cltd
shll
sarb
imul
sub
fcoml
or
jle
stc
or
and
stc
pop
ljmp
inc
data16
add
push
loop
xchg
ret
xchg
jnp
pop
fdivrs
mov
sti
stc
cs
jno
testl
rolb
mov
mov
in
insb
xor
jae
mov
mov
daa
push
sbb
jns
sahf
jo
cli
push
jl
adc
ficoml
add
in
mov
push
mov
mov
loop
inc
pop
unpckhps
push
enter
jb
dec
ret
shrb
ret
xor
sub
ds
hlt
lods
dec
jbe
cwtl
jne
shr
inc
or
ret
insb
jmp
sbb
out
cmp
aam
jle
loope
ds
ret
xor
fnstsw
push
jbe
imul
int
dec
pop
push
add
xchg
mov
rclb
fsubp
cmp
fnstsw
or
mov
mov
jecxz
mov
data16
cltd
adc
mov
int
rcrl
shlb
lods
hlt
fistpll
ret
inc
les
and
in
imul
inc
jp
cltd
mov
repnz
mov
cltd
add
int
dec
pop
push
fcoml
xchg
mov
fidivl
add
dec
pop
jle
fwait
andb
mov
add
inc
cltd
adc
mov
int
shll
pop
xchg
mov
ljmp
fmul
outsl
movsb
pop
clc
sub
imul
cwtl
jp
cltd
mov
xchg
pushf
xchg
add
add
hlt
pop
xchg
mov
fcmovbe
pop
pop
dec
add
dec
data16
fwait
sbbb
sbb
loopne
mov
in
mov
aas
push
dec
pop
jae
cwtl
xchg
sub
lret
popa
cli
stc
cs
adc
fcompl
and
push
sub
insb
sbb
pop
adc
sub
sub
push
dec
jecxz
dec
addb
pushf
call
les
in
dec
dec
test
xchg
fcoml
stos
sub
mov
bound
mov
decl
ds
ret
adcl
mov
cs
jle
out
xor
popa
stos
mov
sub
aam
sub
fdivl
call
lds
movsb
test
aam
aas
xchg
pop
inc
fdivs
cs
in
test
push
jae
ss
xor
inc
jle
and
popl
push
in
sub
jb
mov
mov
add
call
push
into
cmovno
arpl
lahf
dec
cmpsl
jle
dec
into
mov
hlt
pop
lret
mov
divb
push
mov
mov
fwait
or
cmpsb
arpl
hlt
mov
ja
cmpsl
test
mov
jle
call
les
hlt
cmp
push
in
andb
mov
loop
cmp
out
and
pop
sbb
or
jmp
pop
cmp
in
and
shll
sub
int3
popf
mov
push
push
jbe
push
in
je
adc
cwtl
xchg
ja
mov
mov
sub
or
mov
or
ja
mov
add
inc
jo
xchg
jae
cwtl
xchg
mov
lret
xchg
bound
stos
shll
sub
int3
jge
test
push
jbe
push
in
dec
push
push
mov
mov
daa
push
sbb
mov
push
and
mov
fcmovb
add
fmuls
sbb
fmull
cmp
pop
xchg
int
inc
xchg
scas
ja
mov
mov
pop
dec
xor
dec
push
mov
aas
aaa
ljmp
mov
mov
dec
mov
cmpsl
jge
jg
test
je
pop
xchg
mov
loopne
aas
ret
inc
les
into
outsl
movsb
pop
cld
sub
imul
xchg
jp
cltd
mov
ret
add
add
int
dec
pop
push
call
jno
sub
inc
push
pop
dec
add
dec
bound
fwait
adcb
sbb
cli
push
adc
push
mov
mov
dec
pop
pop
in
in
clc
xorb
test
orl
les
repnz
jle
or
fsubr
pop
ljmp
cwtl
jge
pop
call
cmpsb
push
jo
push
popa
or
push
push
jae
cmpsl
test
mov
jle
call
or
repnz
shll
xor
js
roll
or
subb
cmpsb
dec
pop
pop
in
in
rolb
cmp
cmp
orl
les
repnz
jle
test
push
push
jbe
push
in
shrb
in
in
mov
xchg
in
roll
punpckhdq
loop
cmp
cld
push
out
into
ja
imul
mov
mov
bound
inc
sub
adc
xor
sub
jle
test
adc
cli
and
inc
push
push
inc
push
inc
jbe
xlat
add
movsl
aas
add
test
call
stos
mov
out
sub
pop
sbbb
dec
cli
jecxz
loopne
in
or
push
lea
add
mov
ds
hlt
rorb
shr
cltd
cmpl
mov
popa
adc
sub
cmp
fnstsw
or
lods
or
mov
iret
mov
data16
lcall
cld
jg
test
je
pop
xchg
mov
cwtl
fistpll
ret
inc
les
add
in
imul
pusha
jp
cltd
mov
jb
pop
add
add
dec
pop
push
cmp
xchg
mov
ss
int3
cli
push
mov
mov
ljmp
bound
cmp
sub
ljmp
cltd
shll
sarb
jbe
and
jle
adc
push
int
push
lret
pop
lret
pop
mov
ss
sub
mov
inc
mov
and
fwait
jno
push
sahf
mov
cmpsb
mov
std
lods
into
out
sub
dec
paddq
pop
xor
mov
push
les
fdivs
sbb
xchg
scas
insb
movsb
mov
add
es
jb
stos
loope
xchg
movsl
sarl
ljmp
pop
adc
xor
mull
dec
xlat
test
mov
not
les
sub
sub
popf
je
dec
and
cmp
and
cmp
in
cmp
push
pusha
pusha
insl
mov
cltd
lods
imul
test
aas
ret
inc
les
into
outsl
push
inc
mov
out
xor
xchg
push
shrb
out
and
pop
sbb
ret
insb
jmp
sub
xchg
in
and
into
push
mov
lods
push
in
aam
lret
aas
ret
ret
xor
lods
and
and
pop
dec
test
inc
inc
loope
aam
aas
inc
and
fsubrl
lods
or
ss
push
push
in
sbb
shl
movsl
xlat
pushf
ja
test
pop
std
push
dec
jecxz
in
cmp
push
mov
mov
seto
idiv
inc
test
ficoml
test
test
mov
arpl
outsb
push
data16
pusha
adc
push
mov
mov
sub
inc
inc
rorl
std
adc
push
in
jo
push
in
js
adc
push
pop
sbb
or
jmp
loop
xchg
in
and
into
push
mov
adc
shr
add
aam
into
xor
fs
mov
fnstenv
or
add
add
subb
lahf
insb
les
cwtl
jge
negl
jo
mov
data16
jo
or
add
pushf
movsl
mov
mov
popa
adc
es
loop
cs
jle
or
mov
cwtl
mov
les
add
jp
cltd
adc
mov
int
roll
shlb
inc
xchg
fistpll
ret
inc
les
sub
in
imul
dec
jp
cltd
mov
push
pushf
inc
add
mov
test
fs
orb
xchg
in
pop
pop
int
repnz
sub
mov
inc
push
cmpsb
loop
arpl
popf
pop
arpl
pushf
fs
repz
sub
pop
enter
out
jp
inc
add
cli
out
int3
inc
jno
pop
dec
cltd
adc
inc
les
cld
pop
jbe
decl
negb
jp
adc
shlb
xchg
mov
jl
xchg
dec
movsl
js
fwait
mov
pushf
add
push
popa
jmp
push
lock
adc
cld
xor
out
daa
rcr
loopne
cmc
push
ja
into
mov
fsubl
scas
xorl
jge
push
aaa
ds
sbb
repnz
mov
adc
adc
xadd
xchg
repnz
cmp
adc
and
and
out
roll
repnz
addb
bound
mov
dec
fxch
mov
mov
pop
test
and
adc
arpl
sub
repz
repnz
nop
jge
jae
xchg
hlt
adc
and
dec
or
add
dec
dec
ljmp
mov
pop
mov
or
add
insb
movsl
mov
mov
popa
adc
cmp
cmp
mov
or
mov
ds
pop
lret
cmp
jmp
daa
inc
mov
and
fwait
jno
push
mov
cmpsb
mov
in
sub
mov
jp
cltd
mov
inc
lahf
cmp
cltd
jne
insb
mov
cmp
dec
or
add
jmp
popa
popa
outsl
movsb
add
cwtl
repnz
les
sar
stos
pop
ficoml
ret
xor
sbbb
mov
sbb
cmpsl
sub
lahf
lea
dec
into
mov
movsb
mov
loop
cs
fnstsw
or
enter
xor
jl
push
dec
hlt
pop
dec
jo
sbb
pop
aas
clc
test
cli
sub
cmovg
cmp
aam
ret
fsubrs
ret
xor
xchg
pop
jg
mov
fidivs
jbe
js
cmp
js
jl
jmp
inc
fmull
repnz
loope
cmpsl
int3
cli
js
inc
push
jo
sahf
adc
mov
hlt
xor
hlt
cmp
or
aas
fsubrs
subb
dec
adc
cmp
aam
ret
mov
popa
adc
es
je
dec
mov
dec
dec
mov
test
mov
jae
stos
test
jmp
inc
fmull
bnd
loope
cmpsl
int3
cli
push
mov
cmpsb
adc
mov
movsl
aas
add
and
jle
cwtl
mov
fsts
or
mov
mov
pop
dec
xor
dec
push
mov
aas
cmp
ljmp
pop
mov
mov
dec
pop
pop
in
in
lods
xorb
test
orl
les
repnz
mov
pop
cli
mov
pushf
cwtl
jge
pop
mov
dec
pop
push
cld
pop
xchg
mov
fimull
dec
add
dec
jle
add
mov
pushfw
and
bound
mov
dec
pop
pop
in
in
test
cmp
push
xchg
xchg
cwtl
jle
add
fdivr
pop
fisubl
hlt
cwtl
jge
push
aaa
inc
jmp
jg
mov
jecxz
add
xchg
pop
cli
cwtl
mov
sti
mov
ss
mov
sub
fidivrs
in
stos
in
push
cwtl
in
pop
or
decl
sbb
dec
and
pop
dec
mov
fwait
aam
aas
fidivl
cs
sub
mov
dec
adc
test
sub
or
in
in
enter
mov
inc
data16
mov
std
into
out
sub
dec
pslld
sbbl
rcrb
clc
dec
or
push
lds
sysenter
jbe
cmc
movsl
cmpsb
dec
push
orb
cmp
or
cs
ficoml
push
int3
inc
and
or
out
mov
add
jle
sbb
shrl
out
sub
pop
adcb
mul
stos
loopne
in
sbb
lea
add
mov
ds
hlt
les
sarl
test
out
inc
pop
dec
pslld
loope
cmpsl
int3
cli
or
out
adc
mov
hlt
or
hlt
xor
sbb
mov
test
leave
inc
fwait
xchg
xor
xchg
sub
push
dec
mov
daa
push
sbb
mov
sub
sahf
rolb
jmp
out
pop
pop
lds
insb
cwtl
outsl
aam
cltd
push
cs
idivb
sub
adc
fs
lods
imul
mov
aas
ret
push
shll
jge
lcall
lods
insl
pop
insb
roll
mov
pop
je
push
in
push
xorb
test
orl
roll
sub
in
imul
jo
mov
xchg
cld
repz
add
mov
mov
ret
sub
sub
cld
pop
pop
fdivr
cmp
pop
mov
fnsave
sub
bound
pop
inc
xor
jl
push
imul
dec
adc
rcrl
ds
mov
mov
dec
call
mov
movsl
sbb
ljmp
je
jmp
xchg
add
sarb
push
sahf
stos
movsb
push
inc
xchg
repz
roll
jmp
nop
cmpsb
sub
movsb
das
rcrl
test
fsubrs
andb
jnp
add
jns
push
mov
push
shl
and
dec
scas
sub
mov
ljmp
inc
gs
js
push
ret
sti
rorl
cmp
int
pop
xchg
mov
fsubp
xchg
mov
cmp
aas
jb
xor
pop
jmp
inc
cmpsb
int
or
call
in
jbe
movsb
cmp
call
repnz
movsb
add
outsb
scas
mov
lcall
pop
mov
shlb
in
mov
inc
gs
mov
add
mov
cwtl
int3
lret
repz
scas
and
in
inc
insb
int3
sbb
sub
jg
fs
cmpsl
in
jb
in
popf
sub
popa
and
nop
mov
das
popa
mov
cmp
outsl
movsb
mov
cwtl
cli
pop
fdivr
and
daa
jae
fs
cmp
mov
call
push
mov
adc
cmpsb
daa
clc
nop
add
imul
push
mov
mov
cmpb
into
das
imul
stos
xchg
mov
daa
enter
cmp
insb
fmull
aas
das
in
inc
add
mov
sbb
fwait
xor
pop
jg
dec
sub
pop
sar
hlt
xchg
push
cmp
mov
mov
fdivrl
cmp
pop
cmp
scas
ljmp
dec
pop
enter
in
in
pop
jecxz
dec
or
inc
cmp
ss
movsb
sub
push
js
or
icebp
into
addb
notb
call
add
jge
lock
test
mov
outsb
add
mov
testl
fwait
mov
xor
ljmp
andb
rolb
mov
jbe
xor
cli
push
rcr
call
sub
mov
outsb
iret
dec
adc
add
cltd
enter
int3
in
aas
mov
movsb
cmp
or
mov
or
dec
mov
cli
add
movsb
cmp
dec
and
sbb
jno
popl
movsl
rcrb
leave
and
pop
cmp
ss
dec
mov
or
push
mov
shrb
jge
mov
push
and
jmp
xor
out
lret
mov
xchg
dec
inc
sub
repz
data16
sub
testl
xchg
xor
push
hlt
sbbl
cmpsl
mov
push
xchg
cmp
jns
fs
pop
xor
cltd
rclb
lock
xor
inc
pop
cmp
fs
mov
je
sub
aam
pop
dec
popl
pop
dec
add
fnsave
mov
cltd
pop
push
int3
lock
xor
inc
push
push
test
push
daa
rorl
pop
pop
daa
shlb
sarl
cmp
jno
jb
les
sbb
fstl
pop
cld
ljmp
ljmp
inc
cmp
mov
enter
and
fisubrl
push
dec
andl
dec
inc
roll
out
insl
jb
js
dec
mov
mov
pop
fcompl
clc
mov
mov
adc
sub
std
test
aaa
fcmovnbe
adc
sbb
and
push
jbe
push
in
nop
shlb
js
data16
cmp
mov
mov
cmp
cmpb
test
push
into
xor
cltd
jb
sub
ljmp
mov
adc
sub
pop
cmp
mov
and
pushw
sub
cmp
pushf
cld
pop
add
push
loopne
xchg
data16
add
jp
adcl
jge
pop
iret
xchg
adc
and
pushf
mov
pop
movsl
add
sub
mov
cmp
sbb
cs
mov
inc
jae
mov
in
enter
out
jb
dec
mov
lret
sbb
clc
into
lret
fildll
lret
pop
lret
loopne
ja
fldcw
in
dec
pushf
test
aas
loop
mov
fisubrs
and
rol
cmp
push
jecxz
jo
dec
sub
inc
push
jae
and
pop
sbb
adc
sub
es
add
in
and
mov
sub
mov
into
dec
mov
test
sub
push
cmpl
jl
cltd
into
cmp
jbe
jo
cmpsl
mov
and
int
aam
jb
hlt
adc
hlt
sbb
push
push
in
or
dec
dec
and
imul
sahf
cmpsl
aam
cld
ret
and
mov
adc
cmpl
sub
int3
add
lahf
mov
push
fisubrs
cmp
fs
sub
sbb
lcall
pop
sbb
insl
dec
cmpb
xchg
pxor
jmp
sub
mov
insb
mov
mov
and
lock
push
js
mov
mov
cmp
test
pop
pop
mov
in
dec
xor
dec
mov
dec
pop
pusha
aas
mov
ds
hlt
cwtl
push
hlt
mov
sub
inc
jno
adc
imul
pop
mov
xor
movsl
fiadds
clc
idivb
stos
pop
xor
pop
dec
mov
and
mov
mov
push
sub
ljmp
or
lods
and
push
lret
cmpsl
pop
jae
movsb
idivb
insb
mov
push
pusha
xchg
add
mov
je
dec
rolb
ds
pop
xchg
mov
mov
push
inc
mov
js
mov
sarb
subb
or
and
and
lods
xor
inc
inc
das
insl
pop
jbe
xor
iret
mov
enter
jmp
les
and
jle
adc
sbb
pop
insl
pop
shll
or
xchg
lods
inc
stos
lret
ja
mov
or
cmp
add
inc
outsb
repz
test
cmc
scas
das
xor
jb
push
inc
jno
add
dec
lods
adc
loopne
mov
or
jl
cltd
cltd
cld
xor
sub
xchg
std
sbb
add
lahf
push
gs
mull
mov
pop
outsb
es
mov
movsl
mov
mov
in
xor
push
in
xchg
in
dec
movsb
pop
dec
mov
enter
inc
outsb
dec
cmc
or
and
insb
fcoms
nop
push
mov
pop
push
sbb
ss
es
cltd
fcompl
pop
mov
ficoml
popf
imul
sub
mov
and
fldcw
movsb
sarb
jmp
xchg
scas
push
pop
in
xchg
push
test
and
pop
rorl
dec
sub
inc
out
lods
outsb
enter
jmp
jge
int3
mov
aad
int
pop
call
cld
repz
pop
dec
xor
cs
sub
push
cmp
sbb
jnp
sub
fidivs
loop
lcall
or
mov
jecxz
sbb
pop
pop
mov
lcall
inc
cmp
insb
and
in
test
cmp
mov
ljmp
xchg
jp
fbstp
mov
fwait
data16
jle
pop
mov
jbe
push
in
dec
aas
push
dec
and
cli
sti
sbb
sbbl
cmp
mov
push
mov
fwait
push
pop
mov
inc
sbb
adc
cwtl
xlat
adc
andb
mov
ret
adc
call
stos
mov
sub
xor
xchg
add
scas
shl
pop
push
xor
jl
pop
imul
pop
cmp
jge
xor
loop
mov
jno
out
sbb
jp
jge
nop
xor
rcrl
popf
xlat
es
add
pop
mov
repnz
adc
ret
xor
pop
sub
lret
add
lret
jno
or
add
add
or
lret
lods
cmp
call
jo
xchg
int3
mov
call
cmp
or
lock
rcl
ret
xchg
fscale
sahf
es
ds
mov
and
pop
neg
testb
fwait
mov
les
dec
fldenv
test
pop
jb
rclb
out
data16
cs
lods
jnp
or
or
jmp
andl
push
data16
sub
adc
mov
cmp
sbb
sbb
mov
mov
push
push
or
adc
rorl
and
cwtl
mov
mov
ds
jbe
cmp
pop
mov
mov
cmp
inc
push
in
add
les
bound
inc
or
mov
mov
xchg
insb
ret
leave
enter
lahf
fsubs
inc
lods
sbb
das
sub
les
jne
xor
cmp
aam
out
ds
mov
ljmp
pop
mov
fistl
ljmp
mov
stos
aas
cmp
adc
jecxz
jb
pop
xchg
cs
cld
lods
std
sbb
addr16
outsl
cmp
in
and
test
mov
fiaddl
pop
jle
jecxz
xor
push
dec
cli
jo
jge
insb
inc
aad
rorl
loope
loop
cmpsb
aas
adc
mov
stos
lods
jnp
xchg
inc
push
pushf
dec
out
mov
pop
fimull
popf
nop
in
mov
div
pushf
and
iret
dec
sub
adcb
jae
mov
adc
aad
test
das
mov
hlt
sub
push
jb
test
add
pop
int3
adc
pop
loopne
mov
cs
pop
xor
or
hlt
test
jle
loopne
adc
xchg
dec
pop
xchg
pop
outsl
loop
and
in
xchg
dec
push
pop
cmp
cmp
mov
xchg
cmp
outsb
addr16
add
and
int
fnstsw
lret
mov
dec
cltd
push
adc
cmpsl
lods
lea
cld
incb
push
test
mov
test
test
jle
cmp
stos
fstpt
sbb
in
mov
mov
dec
aam
dec
dec
jbe
pusha
push
hlt
mov
push
inc
jno
adc
pop
pop
mov
enter
xor
lahf
mov
enter
sub
inc
int3
mov
sub
push
cli
js
jmp
hlt
ficompl
test
pushf
cmc
pusha
xor
pop
jnp
push
push
gs
cmp
push
stc
cltd
jl,pn
pop
mov
mov
jbe
cwtl
adc
mov
pop
mov
ljmp
mov
popa
stos
pop
int3
jne
cwtl
mov
shlb
test
sbb
aam
cmp
cmp
cmp
mov
adc
lea
pop
mov
mov
xor
pop
ss
push
shl
cwtl
sbb
mov
das
pop
xchg
push
or
faddl
ss
push
inc
cmpsb
mov
mov
bound
pop
in
add
cmpsl
mov
xor
cwtl
pushf
mov
inc
xlat
hlt
sub
sub
add
xor
xchg
movsb
bound
cmp
lods
push
fldenv
popa
mov
mov
push
sub
sbb
mov
sub
loope
push
xor
lock
inc
lds
push
and
jne
xchg
mov
repnz
pop
add
pop
mov
lods
fsubp
loopne
je
adc
clc
pop
xlat
add
mov
xchg
hlt
cmp
jle
mov
jp
xchg
mov
les
loop
aas
or
jl
cs
rolb
inc
jmp
pop
mov
add
sub
add
and
in
ss
ficompl
repz
jno
lret
adc
fcoms
add
cld
xchg
xchg
inc
pop
clc
leave
cli
mov
xor
xor
adc
xchg
push
pop
sub
adc
cs
lds
test
sbbb
mov
push
test
or
repz
es
lods
loope
push
and
cmp
cs
leave
rcr
aam
inc
ficoml
fists
xor
dec
movsb
mov
jno
push
pop
jbe
push
inc
jno
jb
add
mov
mov
add
dec
add
xor
push
mov
pop
dec
and
jl
sub
lcall
lods
push
push
xchg
inc
aad
out
mov
stc
std
push
and
sbbb
jl
inc
aas
dec
fsubr
jno
inc
xor
call
ret
out
cld
mov
dec
movsb
outsl
adc
or
jne
fisubrs
jle
hlt
push
xor
in
inc
aaa
inc
mov
adc
outsl
movsb
add
cwtl
jns
mov
cmp
aas
movsb
cmp
jne
jmp
mov
and
sbb
adc
pop
jns
xor
mov
sub
pop
mov
stos
data16
in
add
sub
xor
stos
mov
addr16
loope
aam
push
mov
lds
jb
ja
dec
cmpsl
sbb
out
xchg
and
ljmp
inc
out
imul
pop
in
in
sbb
jae
mov
orl
xlat
fmul
jge
pop
jo
in
imul
adc
jae
mov
data16
inc
or
add
cld
movsl
mov
mov
popa
adc
in
cmp
fnstsw
or
aam
cwtl
rclb
repnz
hlt
dec
hlt
cld
dec
sbb
sbb
sbb
je
insb
fcoms
cmp
jl
hlt
mov
int3
xchg
and
jge
movsb
std
xlat
xchg
mov
inc
and
mov
xchg
out
stc
dec
pop
sbb
xchg
test
push
and
out
aaa
jg
shlb
inc
lret
push
loope
fisttpl
sbbl
adc
icebp
dec
test
push
xchg
mov
inc
jbe
mov
mov
jl
out
aas
cmp
setbe
adc
dec
sbb
enter
test
std
out
dec
dec
sub
dec
sub
test
out
icebp
mov
mov
shrl
xor
std
push
fwait
xor
gs
push
adc
xlat
mov
jne
mov
mov
loopne
fnstcw
lods
fcomps
mov
cld
jmp
xorl
fwait
call
aaa
bound
cmpsl
loop
push
cltd
push
push
xchg
in
insb
out
push
mov
nop
push
mov
decb
arpl
adc
mov
ret
inc
packuswb
inc
adc
fbld
pop
call
roll
mov
mov
dec
aad
fxtract
insb
in
xchg
in
xchg
rol
sbb
inc
push
push
lret
xor
leave
fwait
xchg
ja
cltd
sub
sbb
add
lods
mov
adcl
lods
mov
jo
sbb
inc
inc
mov
pop
jl
push
sub
outsl
inc
fdivrp
jl
pop
adc
and
out
int
add
jo
enter
shl
je
hlt
mov
clc
push
inc
jno
loop
cli
dec
pop
mov
enter
ja
pop
dec
push
and
mov
cld
sbb
mov
pop
mov
pop
mov
sbb
inc
adc
fs
push
aam
mov
sub
sahf
shrl
sarb
out
loopne,pt
cwtl
in
jp
pushf
xor
fdivl
mov
mov
mov
int
pop
or
das
mov
mov
test
jb
jmp
shll
inc
mov
cwtl
inc
lcall
aam
ds
shl
addl
dec
xchg
mov
dec
cwtl
mov
jg
fcoms
push
mov
inc
and
sub
jb
push
sub
sbbb
xchg
shll
sarl
fnsave
data16
xor
js
pop
stos
into
dec
xor
inc
in
xor
adc
in
fdivr
cmpb
xor
xchg
pop
in
cltd
fldt
aam
hlt
adc
dec
adc
dec
outsb
ss
int3
push
xor
nop
cwtl
shrb
hlt
adc
hlt
cmp
jp
lods
popa
mov
cmp
and
cld
cs
pop
les
cmp
mov
je
mov
dec
sub
inc
xor
push
push
jbe
push
in
loopne
xor
mov
shrb
xor
push
push
shr
stos
lret
jp
inc
adc
sub
sbbb
test
pushf
les
test
lods
daa
push
push
xor
adc
mov
repz
jmp
pushf
mov
aas
in
inc
xor
or
fwait
mov
repz
fsubp
ds
fs
cltd
rclb
movsb
cmp
mov
shl
push
iret
cmp
icebp
ja
pop
dec
dec
pop
jp
pushf
and
cmp
inc
pop
loopne
mov
mov
fistpl
divb
and
sbb
icebp
arpl
inc
outsb
jmp
mov
sbb
pop
in
dec
mov
idivb
xchg
mov
push
je
inc
arpl
lea
mov
pop
fcomps
cld
jp
orb
sub
pop
mov
leave
sub
aas
jbe
mov
xor
sub
pop
mov
push
fs
insb
pop
jb
sub
cmp
mov
push
xchg
sub
mov
xchg
cmp
sahf
mov
mov
mov
adc
pushf
cmp
fs
jl
mov
pop
xor
shrb
adc
es
cmp
in
push
cwtl
lds
sub
mov
jmp
sahf
mov
cmp
aam
dec
bound
int3
push
or
or
xor
and
ret
sbb
xor
aas
cmpsb
js,pt
mov
add
mov
mov
adc
outsb
jl
sbb
add
mov
and
fadd
pop
mov
ljmp
insb
popa
stos
mov
stos
rcrb
cld
pop
pop
jo
mov
data16
jo
adc
ja
sub
dec
movsl
add
sub
cwtl
or
shl
fwait
mov
or
pushf
in
cld
out
adc
pop
mov
adc
xchg
jle
stos
mov
lret
jg
adc
in
cmp
cli
sarb
xor
xchg
pop
mov
cltd
mov
insl
xor
lret
movb
xor
jl
movsb
inc
sub
fdivrs
test
jl
xor
lret
ret
sub
adc
pop
mov
pop
xchg
fmul
hlt
dec
cmp
int3
xchg
add
sahf
int3
lods
mov
inc
sbb
push
pushf
cmpsl
pushw
in
cmp
jmp
push
cld
pop
push
fdivr
cli
jb
sbbl
loopne
bound
fmull
mov
or
push
pop
inc
repz
mov
mov
dec
movsl
aas
add
lret
jp
les
ds
out
stos
lret
pusha
aas
and
test
mov
mov
cs
scas
sub
mov
sub
lock
in
xor
push
adc
lcall
pop
mov
in
mov
or
hlt
or
sbb
lret
mov
in
xor
in
sub
lcall
out
jne
xor
sub
push
jle
push
adc
pop
bound
loop
dec
repnz
outsb
fs
dec
js
xchg
fmuls
pop
cmpsb
cmp
int3
jbe
push
push
jbe
push
in
adc
xor
jo
cli
shrb
mov
call
adc
add
loop
pop
mov
ljmp
int3
pop
xchg
push
fstp
mov
or
mov
adc
xchg
cmc
scas
sub
mov
adc
ljmp
mov
ljmp
hlt
arpl
popf
je
and
mov
clc
mov
cld
cmc
pushf
mov
mov
mov
cli
adcb
jp
cltd
mov
sub
imul
cld
in
shrl
cmp
out
sahf
cmp
mov
sbb
or
sub
add
and
pushf
inc
xor
mov
sub
mov
nop
ja
shll
sbb
add
call
jbe
in
mov
fcoml
in
pop
xchg
add
mov
and
aam
sbb
inc
dec
dec
jle
in
lods
aas
adc
cmp
push
test
cmp
subb
into
xor
lcall
mov
ljmp
dec
popa
stos
mov
int
pop
jle
cwtl
mov
jp
sarb
pushf
mov
jb
sbb
rcrl
cs
pop
aam
push
int
hlt
fs
in
sbb
dec
les
in
cld
aas
push
adc
aas
stos
ds
test
push
mov
xor
lcall
mov
ljmp
cmp
stos
mov
int3
stos
sbbb
pop
or
mov
push
cmp
sub
jae
dec
arpl
add
mov
cmp
addr16
aas
push
addr16
cmp
pushf
js
je
add
and
pop
mov
push
int3
cmp
mov
or
sti
sub
cmp
adc
inc
add
cltd
sub
imul
push
lret
push
ret
test
aas
pop
add
push
and
push
addl
ss
cmp
and
lods
cmpl
sub
and
fbld
mov
pop
ss
mov
js
mov
add
cmpsb
sbb
mov
pop
scas
rcrb
and
push
jno
mov
pop
cmc
add
jg
cld
xlat
adc
call
pop
ret
xor
dec
adc
mov
pop
orl
xor
add
mov
cmpsb
dec
pop
xchg
xchg
inc
push
mov
mov
iret
xchg
mov
cld
pop
sbb
lock
cltd
adc
jl
aam
insb
cwtl
shrl
cwtl
rcll
mov
hlt
mov
jbe
in
cwtl
fisubl
adc
in
mov
in
nop
aas
mov
sub
jp
pop
sub
lock
push
mov
cmp
in
sub
les
je
sub
push
ja
pushf
cld
pop
inc
sar
pop
pop
popl
data16
stos
cltd
adc
cmp
dec
clc
mov
cwtl
rcll
and
pusha
dec
jbe
in
fcomp
lods
adc
push
in
dec
bound
in
push
aas
inc
shrl
mov
repnz
adc
mov
adc
pusha
adc
pop
mov
ljmp
sub
sti
jg
adc
sub
lock
pminsw
inc
adc
sub
fistpll
sahf
lock
cmp
mov
adc
mov
rcrl
jg
adc
pop
loop
ljmp
mov
adc
sub
cmp
and
pop
int3
adc
xchg
mov
cmp
repz
data16
pop
out
or
sahf
frstor
shrl
mov
pop
lea
sub
mov
inc
dec
adc
xchg
mov
out
mov
push
cli
adc
xor
push
adc
ja,pt
call
out
movsl
call
xorb
push
mov
jl
mov
shll
push
or
stos
in
insl
sbb
xor
out
stos
cmp
add
hlt
in
inc
adc
and
inc
push
dec
xor
cmp
mov
sarl
pop
mov
dec
adc
add
stc
jns
rclb
mov
or
pop
cwtl
rcll
pop
gs
mov
dec
xchg
push
mov
cmp
jmp
add
jmp
pop
mov
jns
or
sbb
pop
inc
xor
push
test
push
mov
hlt
shrl
mov
fs
mov
mov
xchg
aam
jbe
dec
pop
xor
int3
xchg
add
cwtl
mov
js
or
js
mov
mov
das
lret
in
int3
pop
push
inc
xor
add
sbb
jbe
pop
mov
pop
adc
inc
push
or
mov
cmp
adc
fisttpl
sub
mov
adc
movsb
call
jns
hlt
aam
cld
mov
test
jae
and
cmpsb
add
pop
mov
sub
repnz
lret
cmp
js
frstor
or
icebp
mov
jbe
mov
dec
add
dec
lods
pop
popf
sbbb
fs
fistps
cmp
and
mov
push
lea
adc
aam
int3
mov
jne
add
jne
hlt
push
shlb
imul
mov
xor
call
adc
jg
or
mov
push
call
test
push
xchg
shll
dec
cwtl
push
test
dec
xor
pop
ret
xchg
pop
imull
xchg
dec
stos
das
fsubrs
ljmp
mov
dec
fistps
dec
test
mov
popl
inc
pop
xchg
mov
shll
sbb
or
or
or
into
testb
sarl
sbb
adc
sbb
mov
js
adcl
push
xor
xchg
cmc
jp
jbe
jp
push
daa
loopne
call
jnp
es
outsb
jo
dec
cmp
pop
test
scas
xor
xchg
shlb
and
dec
xor
add
mov
imul
iret
and
imul
push
jb
adc
lret
out
insl
aam
lret
fwait
mov
movsb
sub
xor
int3
jge
imul
movsb
cmpsl
test
mov
imul
js
jb
movsb
push
andb
lahf
sbb
int3
dec
pop
sbb
mov
dec
mov
les
fsubrl
or
fsubr
xchg
scas
shl
and
and
std
call
push
into
movd
in
paddq
jl
cmp
xor
adc
es
aas
cld
fisttps
stos
add
loop
and
daa
in
in
cmp
mov
or
hlt
or
push
mov
jae
mov
push
pusha
dec
and
xchg
inc
sub
mov
fdivrs
test
xor
jno
or
mov
push
push
cmc
inc
std
bound
cli
pop
push
dec
ret
daa
xor
stos
fdivr
cmp
adc
hlt
bound
cld
cwtl
in
lock
repz
xchg
dec
jnp
cld
xchg
mov
test
lret
int3
and
daa
jb
sub
outsb
inc
mov
subw
cli
ss
dec
loopne
xchg
enter
xlat
cmp
pushf
pop
push
scas
jne
xchg
repnz
aaa
in
cltd
pop
pusha
xchg
test
sar
lcall
cli
cli
jno
addr16
jecxz
jnp
adc
xchg
in
cmc
pop
mov
mov
lahf
xor
ret
jns
pop
jbe
ja
or
fs
ret
lods
ljmp
xchg
cmc
repnz
xchg
sub
std
jl
mov
mov
insl
test
lret
or
dec
dec
xchg
lods
stos
pop
cmp
dec
mov
cld
test
ss
cmp
lds
adc
mov
aaa
add
lcall
and
in
fwait
jp
sbb
pop
xchg
dec
aad
mov
cmpxchg
aas
bnd
cmp
mov
lods
or
adc
jno
push
dec
or
movsl
cmpsb
dec
push
orb
cmp
cmp
mov
adc
test
mov
shrb
mov
ss
cmp
stos
subl
into
aam
pop
clc
cmpsb
push
jo
mov
cmc
scas
das
jae
cmpsl
test
lea
xchg
cld
repz
adc
push
push
data16
add
jp
cltd
adc
mov
int
ret
inc
inc
lock
pop
jno
push
in
in
sbb
cltd
stos
out
js
les
jl
or
in
pop
adc
jo
mov
sbb
ljmp
ljmp
sti
loop
pushf
test
push
cld
push
inc
jbe
xlat
xchg
add
hlt
jle
mov
xor
stos
mov
out
sub
pop
adcb
dec
stos
loopne
in
test
lea
add
ds
hlt
sub
ret
xor
sbb
ljmp
ljmp
sti
loop
hlt
test
push
xchg
push
inc
jbe
xlat
test
add
add
pop
hlt
mov
int
shll
gs
xchg
mov
sbb
aas
ret
inc
les
into
outsl
movsb
pop
mov
movsl
data16
cltd
mov
pop
pushf
aam
and
sub
dec
pop
push
mov
xchg
mov
aas
shr
int3
cli
int3
mov
and
les
mov
sub
mov
adc
cmp
mov
out
sub
in
adc
aas
outsl
test
bound
cmc
push
jecxz
jle
loop
shrb
insb
mov
hlt
mov
jg
insb
jmp
adc
xchg
ret
outsb
mov
jnp
sbb
cltd
stos
out
hlt
ja
mov
clc
cwtl
imul
mov
mov
xchg
jp
faddl
xchg
into
das
insb
repnz
cmpsb
fmull
pop
add
add
jge
pop
or
xor
in
push
jo
pop
xchg
mov
lods
pop
dec
add
dec
xchg
jle
fwait
subb
sahf
data16
data16
lcall
mov
jg
test
je
pop
xchg
mov
shll
stos
loopne
in
fs
mov
enter
shrb
mov
mov
xchg
mov
and
fwait
jno
push
sbb
data16
mov
std
push
into
out
sub
dec
pslld
mov
out
jae
mov
sub
inc
jo
push
dec
xor
push
subb
push
inc
and
jo
xchg
dec
mov
cs
jle
loopne
push
test
push
mov
xor
cwtl
pusha
cld
repz
sub
pop
aam
fistps
xor
out
enter
pop
inc
cltd
adc
inc
rcrb
pop
dec
fdivr
push
jb
adc
insl
mov
fwait
orb
arpl
hlt
mov
jne
imul
xchg
add
lea
insb
popf
pop
arpl
cld
repz
sub
pop
in
pop
fistps
push
sahf
cmpsl
mov
mov
jo
pop
push
adc
xchg
cwtl
shrl
pushf
sub
in
je
pop
in
push
jo
push
popa
or
push
mov
jo
cli
push
xchg
inc
adc
ficompl
or
movsb
jbe
push
inc
jo
add
jae
cwtl
xchg
xor
outsl
ja
and
mov
cltd
push
dec
add
stos
shll
sub
leave
cmpsb
xchg
je
dec
cmp
dec
dec
add
add
les
mov
mov
mov
daa
push
sbb
cwtl
mov
push
lods
inc
adc
fidivrl
dec
hlt
test
cmpsl
mov
and
shl
mov
mov
push
push
cmc
inc
jne
cltd
pop
sahf
jne
cli
or
in
and
test
insb
adc
dec
sub
or
xor
fbstp
pop
sbb
or
jmp
icebp
cmp
and
into
push
mov
es
in
sbb
inc
adc
aas
pop
ds
xor
sub
dec
and
pop
dec
je
inc
inc
loope
aam
pop
aas
shl
aam
dec
or
inc
push
sub
arpl
jb
pop
mov
add
or
add
inc
movsl
mov
mov
popa
adc
mov
cs
jle
or
mov
inc
mov
xchg
jp
cltd
adc
mov
int
sarl
xor
mov
fistpll
ret
inc
les
pop
add
in
imul
pop
jp
cltd
mov
push
pop
add
add
xor
xchg
mov
fimull
add
dec
mov
cwtl
cmpsl
mov
mov
pushf
lock
scas
mov
mov
dec
pop
pop
in
in
inc
xorb
test
orl
les
repnz
jle
inc
push
fdivl
or
pop
cmp
add
in
push
jo
inc
popa
or
push
mov
jo
cli
push
int3
inc
adc
cmp
mov
adc
sub
clc
out
push
bound
stc
mov
decl
jb
ret
adcl
mov
cs
jle
out
xor
mov
sub
rclb
mov
xor
mov
subl
popl
inc
lahf
movsl
push
cltd
pop
dec
xor
dec
push
mov
subps
pushf
hlt
cld
dec
mul
mov
push
cltd
adc
mov
int
shll
pop
xchg
mov
or
les
fmul
outsl
movsb
pop
mov
in
imul
data16
repnz
mov
lret
add
add
int
dec
pop
push
mov
jno
sub
out
mov
cs
xor
fwait
addb
mov
cmp
pop
mov
mov
dec
bound
in
in
enter
mov
orl
les
repnz
jle
mov
shrl
data16
xor
mov
jmp
daa
inc
mov
mov
xchg
sub
outsb
jmp
mov
adc
mov
sar
stos
pop
push
xor
xor
mov
ds
hlt
lock
jbe
cmp
cmp
js
and
jmp
inc
fmull
repnz
mov
jmp
int3
cli
sbb
inc
push
jo
repnz
mov
hlt
mov
hlt
mov
je
sbb
pop
aas
push
test
out
inc
pop
or
xchg
cmp
aam
ret
fsubrl
ret
xor
push
shll
sub
dec
dec
xor
test
les
stos
test
jmp
inc
fmull
repnz
cli
je
inc
push
jo
lcall
or
insb
dec
hlt
xchg
dec
or
sbb
ror
repnz
pop
pop
in
in
xorb
test
orl
les
repnz
jle
push
pop
fcompl
inc
mov
push
cwtl
jge
pop
dec
je
pop
in
push
jo
mov
cmc
scas
sub
mov
jo
cli
push
sub
mov
or
inc
adc
adcl
sub
and
sub
bound
mov
decl
push
dec
ret
adcl
mov
cs
jle
out
xor
stos
mov
mov
adc
nop
adc
xchg
adc
fcompl
jecxz
dec
addb
mov
cltd
pop
dec
xor
dec
dec
les
xchg
pushf
adc
sub
cld
out
push
bound
jecxz
sar
and
xor
jl
mov
cli
stc
cs
jp
pop
adc
push
mov
call
adc
xchg
adc
mov
dec
jecxz
popl
inc
inc
lahf
adc
xor
dec
dec
ds
cmpsl
sbb
xchg
hlt
adc
sub
xchg
out
push
bound
jecxz
sar
push
push
dec
ret
adcl
mov
jno
pop
push
cltd
adc
xchg
cwtl
rcrl
cwtl
roll
mov
jmp
adc
xchg
xor
cmpsb
outsb
mov
pop
bound
cltd
stos
out
add
les
sbb
shll
pop
mov
enterw
mov
pop
shll
jno
fs
enter
loopne
pop
jbe
rorb
lahf
movsb
cmpsl
js
out
push
call
aam
fnstsw
loop
and
imul
adcl
mov
mov
dec
pop
pop
inc
in
in
dec
inc
jo
fmuls
mov
sub
fsubrl
dec
mov
in
sub
lea
add
mov
ds
jle
mov
sbb
ljmp
ljmp
sti
loop
sbb
push
inc
jbe
xlat
jns
cwtl
rcr
push
cwtl
jge
or
jge
pop
in
je
pop
clc
cmpsb
push
jo
loop
or
push
mov
cmpsl
test
mov
jle
mov
add
sbb
aam
sbb
inc
jo
adc
jae
cwtl
xchg
mov
and
mov
stc
cs
adc
mov
lods
add
ret
xor
jo
mov
stos
mov
dec
or
or
jmp
pop
cmp
jne
dec
into
push
mov
iret
push
in
push
aas
mov
cmp
mov
push
ret
xor
fsubs
mov
sub
aam
aas
push
mov
fsubrl
sub
jle
ss
sub
aas
stos
ds
shll
stos
mov
out
and
pop
sbb
jmp
mov
mov
jne
dec
into
push
mov
int
in
lods
aas
push
adc
aas
stos
ds
xor
cmp
ljmp
aam
cmp
cwtl
inc
jle
push
dec
dec
sarb
jl
js
xchg
or
xchg
cmpsl
push
push
test
mov
es
cwtl
fisubs
push
pop
loop
mov
or
xchg
push
ss
jo
xchg
xchg
cmp
ss
mov
int3
lods
jmp
cmp
mov
bound
inc
pop
outsb
mov
popa
int3
pop
add
out
sub
xchg
and
mov
mov
outsl
push
cmp
jo
mov
decb
cmp
inc
sub
mov
mov
dec
movsb
inc
ret
int3
int3
sbb
cmp
outsb
sub
lcallw
pop
pop
in
push
je
pop
xchg
mov
xorl
ds
ret
xor
stos
jno
data16
sbb
pop
add
jg
test
je
pop
xchg
mov
xor
aas
ret
inc
les
push
lcall
cmp
bnd
pop
sub
push
add
or
mov
sbb
cltd
lods
imul
fstpt
cli
xor
cmp
int3
sub
jle
sub
mov
adc
cmp
xchg
mov
pop
xor
jl
xchg
stc
cmp
mov
loop
call
dec
shrb
aad
aam
dec
push
je
adc
pop
mov
mull
mov
push
push
cmc
inc
pop
xor
cli
pop
dec
dec
ret
aam
dec
jbe
in
daa
into
mov
mov
shl
or
orb
adc
pop
xchg
jp
iret
adc
push
dec
add
stos
shll
sub
lret
cli
sub
cld
in
sub
les
pushf
add
mov
mull
dec
xlat
test
mov
not
les
sub
sub
popa
mov
jl
bound
adcl
sub
sbb
sub
bound
mov
decl
sahf
dec
ret
adcl
mov
cs
jle
out
xor
mov
pushf
in
sub
in
mov
pop
sbb
mov
mull
dec
xlat
test
mov
not
les
sub
sub
and
xor
and
xor
cld
mov
jmp
jbe
jg
cli
pop
lahf
xchg
and
mov
jno
push
xchg
sbb
loop
push
push
out
and
or
aam
cmp
adc
dec
mov
sub
cmpsl
lods
push
or
sub
pusha
mov
mov
and
push
xchg
cmp
push
mov
inc
xchg
stos
int3
inc
adc
inc
ja
jne
pop
xchg
and
and
js
divb
sub
addr16
dec
loope
mov
dec
ja
rolb
imul
push
repz
je
push
int3
repnz
dec
rolb
into
xchg
push
mov
xchg
scas
shl
and
and
int3
push
dec
mov
daa
push
sbb
cli
push
rolb
xchg
dec
shrb
xor
adcl
sub
cld
out
push
bound
jecxz
sar
and
xor
jns
ss
hlt
ss
adc
pop
rcrl
popf
lret
pop
lret
outsb
mov
add
jmp
daa
xchg
mov
and
fwait
jno
push
cs
cmpsb
mov
std
cld
into
out
sub
dec
pslld
jbe
hlt
das
shr
jae
mov
xchg
push
inc
jo
xor
movsb
push
subb
push
inc
mov
jo
xchg
mov
xor
mov
jle
loopne
xor
mov
pop
dec
cs
inc
push
rorb
fwait
cmc
iret
lret
imul
xchg
mov
sub
aas
ret
inc
les
lods
push
cs
imul
or
repnz
fistpll
mov
add
test
xchg
into
pop
fistps
pop
lods
cmpsl
mov
mov
mov
cmp
mov
mov
dec
rolb
mov
pop
sahf
cmp
mov
in
sbbl
icebp
sbbb
ret
inc
sub
fwait
aad
add
arpl
mov
test
xchg
dec
and
push
inc
int3
cli
std
test
push
jbe
push
in
and
mov
mov
push
xor
and
lds
push
in
mov
jle
mov
cli
pushf
lock
out
mov
cmc
pop
cmp
lea
out
sub
pop
sti
negb
test
mov
dec
pop
shlb
jo
cmp
into
das
mov
data16
in
andb
mov
xchg
adc
or
push
inc
aad
and
fistl
sub
cs
out
shlb
in
imul
push
jp
pushf
fs
cmp
mov
into
jle
test
test
cli
pop
inc
fcoms
inc
int
or
icebp
mov
ljmp
test
xor
mov
push
push
hlt
mov
test
imul
push
mov
sar
pop
push
mov
fs
fildll
ret
insb
stos
xorb
test
orl
les
imul
mov
adc
dec
adc
xchg
adc
insb
xchg
arpl
add
fidivrs
xchg
scas
insb
movsb
mov
add
es
dec
js
in
sbb
cmp
mov
test
hlt
mov
mov
push
int3
pop
add
daa
inc
inc
inc
loope
aam
aas
adcl
lret
out
es
pop
fmul
jge
mov
pop
mov
cld
pop
orb
fs
pop
mov
sub
test
orl
les
mov
xchg
insb
sbb
js
push
sub
ret
cmc
push
add
insb
movsb
mov
loop
xorb
jb
out
cmp
cmpsl
pushw
insb
mov
sub
mov
ds
stos
lock
push
jno
push
stc
fisubrl
add
push
jnp
xchg
pusha
dec
data16
push
in
adc
in
sbb
cs
or
movsb
inc
xor
jl
imul
repz
imul
pop
popa
mov
mov
pop
dec
nop
setnp
in
fisttpl
and
xor
add
or
sub
fiadds
inc
dec
popf
out
jl
ret
jne
fsubrl
pushf
addr16
jmp
jg
mov
ret
xchg
jp
sbb
push
lock
movsl
insb
and
aad
and
fxch
push
inc
sbb
pop
hlt
pop
notb
les
mov
out
repz
or
scas
ja
push
xchg
icebp
into
adc
out
jb
fsqrt
repz
out
stos
les
fcompl
cs
pop
hlt
add
cmpsl
mov
or
std
stos
xorb
test
orl
les
jecxz
xchg
jle
into
push
fmull
bound
xchg
adc
cld
xchg
ret
aad
add
fidivrs
xchg
scas
insb
movsb
mov
dec
or
loopne
hlt
test
fs
xlat
pop
pop
add
cmp
aas
add
cmp
jle
jl
xor
into
ja
mov
mov
data16
mov
push
push
dec
jmp
cmpsl
mov
mov
in
mov
sub
inc
jo
loop
lods
testl
mov
lods
push
jno
push
in
mov
and
inc
or
jecxz
push
imul
push
in
test
jae
cmp
push
rclb
cmp
or
push
sub
cmc
and
fistl
sub
sub
inc
in
rolb
mov
movsb
mov
xlat
cld
pop
loop
cld
repz
shl
push
jno
push
adc
scas
call
xor
jp
jecxz
or
lock
hlt
lods
jb
jle
cmp
xor
movsl
push
dec
mov
daa
push
push
mov
rol
pop
dec
loopne
dec
push
or
shlb
cwtl
hlt
mov
jg
mov
repnz
fldcw
xchg
and
dec
pslld
pop
loope
cmpsl
fdivr
lock
adc
xchg
or
repz
popa
cmp
xor
sub
cmp
sub
and
add
xor
shlb
clc
pop
aad
out
xchg
add
out
xchg
fdivr
addl
push
xlat
xor
cs
cmp
das
out
mov
push
ljmp
pop
xchg
int3
shl
fnstcw
std
push
push
fdivp
pop
xchg
push
jbe
in
rcrl
cmp
mov
cld
out
mov
jmp
inc
mov
repnz
shlb
call
or
aam
in
cvtpi2ps
adc
cmp
push
and
fs
mov
mov
mov
ja
lds
adc
sbb
pushf
test
sbb
and
lds
mov
lods
dec
pop
cs
iret
add
arpl
pop
adc
jmp
mov
inc
movsl
push
lock
mov
nop
pop
jno
ret
xlat
xchg
aaa
rol
stos
push
pop
push
in
inc
jbe
jmp
lock
add
sbb
cmp
decb
xchg
pop
push
pop
bound
scas
ss
popf
pushf
shll
dec
js
cwtl
adc
repnz
sub
in
xchg
mov
outsb
scas
pop
clc
fists
in
sub
bound
dec
bnd
clc
mov
adc
sub
gs
mov
mov
das
adc
popa
pusha
xlat
daa
rolb
hlt
cmc
xor
test
push
inc
sbb
push
xchg
and
test
dec
pop
cmp
add
sbb
cltd
jl
xor
xor
and
test
les
mov
cmp
dec
sub
sti
jl
sub
xor
xchg
jae
inc
sti
xor
shlb
sub
xchg
ss
rol
popa
mov
rcl
ds
popa
mov
push
ret
mov
adc
mov
sub
fcoms
and
insb
pop
and
sub
mov
movsb
dec
cmp
aas
adc
jb
jmp
aas
mov
cmp
scas
mov
out
int3
ljmp
scas
push
jbe
jb
arpl
pop
jae
push
lea
mov
mov
lods
cmp
push
subl
cmc
jb
sub
pop
pop
adc
in
in
mov
loope
int
rcrl
push
cmp
rolb
add
inc
sub
push
rcrb
mov
mov
negb
in
js
rorb
rcr
cmp
mov
cmp
fnstcw
lock
mov
jo
call
nop
mov
out
adc
inc
mov
lret
outsb
movsb
mov
in
mov
xor
mov
clc
insb
cwtl
rcll
rcrl
mov
hlt
mov
jbe
in
pusha
xor
clc
adc
test
mov
inc
repnz
jns
pop
mov
cli
decb
repnz
sub
xchg
inc
enter
fisubrs
xchg
mov
sub
movsl
and
mov
lock
aam
hlt
sub
cmp
add
mov
sub
scas
popf
lret
call
push
jo
xchg
sbb
arpl
inc
xor
insb
in
push
cmp
out
push
mov
jns
xor
pop
call
js
mov
fimull
mov
mov
dec
test
cli
mov
jo
cld
cwtl
inc
cwtl
jge
sbb
loop
cmp
dec
inc
cmp
test
stc
jmp
or
cmp
pop
pop
cs
shll
std
sbb
loope
sub
pop
insb
sti
imul
ss
test
lea
push
js
mov
mov
fs
stos
mov
sub
fs
mov
jl
repz
xchg
mov
popa
xchg
fldcw
lods
insl
in
dec
pushf
stos
xchg
hlt
int3
dec
rorb
dec
add
mov
cwtl
rol
pushf
add
adc
cld
adc
mov
mov
in
sub
call
xchg
adc
nop
adc
lret
pop
ljmp
sub
pop
test
xchg
ret
pop
loopne
in
pop
in
in
imul
jo
mov
xlat
cld
lods
out
clc
push
mov
test
hlt
pop
mov
xchg
pop
sbb
das
jb
pop
mov
je
mov
lea
addl
fs
mov
fadd
fidivs
stc
push
jbe
mov
or
push
cmp
cmpsl
negb
sbb
enter
xchg
adc
int
or
mov
sbb
fmull
and
cwtl
push
cmpsl
in
les
bound
in
jl
scas
decl
sub
mov
int3
xor
cmp
test
adc
cmp
pushf
xor
dec
mov
add
jo
sbb
fdivs
movsl
andb
test
adc
daa
xor
inc
inc
fld
pushf
jmp
fcmovne
sbbb
fnstenv
mov
mov
push
mov
subl
repz
xchg
dec
and
sahf
mov
iret
sub
orl
les
rolb
jmp
xchg
cmc
pop
dec
adc
cltd
mov
sbbb
rcr
or
je
inc
ja
jb
pusha
hlt
movsb
dec
hlt
lods
dec
xchg
sbb
in
jl
adc
jb
aas
xchg
adc
aas
sahf
shrl
loop
jo
clc
repnz
push
add
jbe
sub
je
sub
jl
mov
ljmp
mov
cmp
pop
or
push
loop
mov
push
arpl
mov
int
lret
ds
dec
xchg
and
inc
data16
loop
inc
mov
hlt
movsb
pop
or
pop
bound
nop
arpl
pop
cmp
and
lock
jmp
push
lods
cmpsb
mov
jmp
pop
test
hlt
mov
dec
jo
sbb
or
lock
ret
and
pushf
enter
mov
xchg
cmc
test
jl
hlt
jmp
push
mov
pop
push
fdivr
cli
pop
xchg
sub
dec
es
mov
imul
pop
xchg
pop
mov
inc
pop
es
movl
push
cwtl
les
push
int3
je
mov
jle
jmp
add
aam
xchg
or
fnstenv
inc
aaa
and
mov
xchg
movsl
rcrb
mov
mov
add
movsw
add
jge
repnz
call
push
mov
ds
hlt
push
push
hlt
mov
jbe
push
inc
jno
push
sbb
adc
aas
sarb
hlt
test
sbb
cwtl
push
dec
lcall
mov
enter
int
repnz
femms
mov
mov
sub
cmp
mov
inc
push
xor
pop
sbb
sub
jge
mov
mov
mov
mov
aam
or
out
cmp
jl
movsb
adc
repnz
pop
mov
insl
xor
pop
mov
arpl
push
sti
clc
jl
adc
sub
std
daa
roll
xor
cmp
pop
cmp
in
sub
push
push
lcall
pop
mov
in
mov
or
push
rolb
dec
push
ret
add
repnz
mov
mov
sahf
mov
divb
and
xorl
repnz
sub
jp
out
fdivrl
sbb
stos
cmpl
data16
push
repnz
add
jp
adcl
jge
mov
call
fdivs
sub
fcoml
mov
scas
in
cli
sbb
adc
aas
mov
jl
cmp
pop
sub
inc
cmp
dec
dec
pop
sahf
pusha
mov
lcall
add
jb
popf
sub
mov
pop
sbb
mov
mov
lods
dec
add
sbb
jle
xchg
stc
inc
mov
mov
insb
mov
aas
mov
mov
add
push
sub
mov
sub
mov
adc
mov
and
loope
and
pop
hlt
adc
and
push
adc
pop
push
std
xchg
leave
dec
stos
fcompl
cld
pop
pop
jo
mov
data16
inc
push
aam
sbb
rolb
rcr
cmp
mov
add
jb
fwait
sub
je
mov
xor
xor
pop
clc
xlat
adc
sub
inc
aad
cwtl
push
xchg
mov
sbb
xchg
loope
cltd
push
out
je
aas
push
inc
cmp
outsl
mov
and
icebp
dec
std
xor
movsb
movsl
and
sub
loopne
imul
in
xchg
xchg
mov
adc
enter
mov
cld
sub
mov
sub
mov
adc
fimuls
int3
mov
lea
repnz
sub
mov
push
dec
or
shll
in
shll
cmc
rorl
or
lock
mov
cs
mov
cld
clc
or
pop
pop
sar
pop
push
aam
shlb
cmp
movsb
or
arpl
inc
jae
push
sbb
sub
test
mov
inc
add
push
jno
inc
dec
mov
cmp
aam
lcall
fwait
inc
notl
fdivp
ds
fs
adc
sub
int3
and
aas
pop
dec
dec
mov
mov
xchg
imul
and
cmpsl
pop
jae
dec
ret
cltd
or
in
xchg
fcmovb
inc
adc
repz
fs
test
sbb
xchg
sarb
insl
cmp
push
mov
jl
pop
je
in
or
ror
pop
push
add
cmpsl
mov
add
pusha
out
jno
mov
push
mov
mov
cld
repz
cwtl
orb
dec
push
mov
pop
mov
cmp
lcall
ret
jg
insb
sub
negl
pop
addb
inc
push
and
or
xchg
jp
xchg
pop
cmp
push
jbe
cmp
pop
adc
cltd
cmp
or
in
les
xor
xchg
sub
cmp
or
adcl
pop
sbb
cli
jo
jge
insb
mov
testl
pop
sub
in
lock
in
clc
aas
scas
shrl
adc
inc
sub
lock
push
testl
push
movsl
aas
add
lret
jp
in
mov
in
inc
seto
mov
push
pop
jg
pop
adc
cld
xor
xor
lods
aaa
movsb
int3
push
jb
mov
jle
adc
es
inc
jo
les
push
jbe
push
in
mov
jbe
stos
mov
js
cwtl
adc
adcl
sub
lock
pminsw
pop
inc
adc
sub
stos
call
add
cmp
add
pushf
xor
add
fs
mov
push
xor
jecxz
mov
cld
adc
cmpl
pushf
mov
or
je
inc
or
inc
pause
out
in
mov
push
cltd
xchg
lock
cmp
repz
cwtl
rorb
dec
adc
xchg
lcall
in
pop
sbb
xor
fwait
je
inc
push
inc
repnz
add
pop
mov
addb
mov
mov
fdivs
int3
jb
lret
jp
insb
add
stos
sbb
xchg
adcb
inc
lods
insl
pop
dec
rclb
incl
cld
push
int3
xor
pop
jb
fs
int3
mov
out
jmp
sub
pop
ficompl
lds
pop
mov
orb
inc
aam
jg
inc
ret
push
cltd
dec
mov
dec
jmp
cltd
pushf
popf
push
je
out
sub
dec
pop
filds
xchg
into
cmp
sbb
dec
in
sub
stos
inc
mov
push
iret
mov
ficoms
and
add
pushf
es
out
xchg
adc
xchg
mov
repnz
jl
cld
pop
cli
cmp
push
cmpsl
in
or
scas
out
mov
popa
dec
stos
dec
loop
outsb
loope
sbb
push
mov
lret
jp
mov
mov
add
icebp
int3
sub
fisttpll
cmp
pop
lret
rclb
lods
sub
mov
inc
jno
out
dec
jmp
jecxz
rolb
adc
bound
in
push
mov
xchg
into
xchg
lods
data16
and
std
xor
xorb
cli
pushw
mov
lret
scas
mov
jge
xor
aas
fs
scas
push
xor
dec
pop
jp
pushf
push
or
movsb
lds
dec
jo
adc
xor
cmpsl
in
dec
outsl
rclb
adc
xchg
pop
sub
mov
inc
andl
out
xchg
ss
jmp
cs
xor
aad
js
test
sbb
or
cmp
cmp
mov
movsl
rorl
mov
rclb
test
dec
xchg
xchg
mov
jg
jns
and
xchg
push
pop
dec
push
xor
das
divb
icebp
adc
gs
in
pop
add
cmp
mov
fsts
pop
jp
pop
sub
mov
xor
repnz
jp
cld
and
inc
sub
pop
punpcklbw
jl
lcall
dec
sbb
inc
sub
ftst
subl
mov
movsb
mov
inc
pushf
ficomps
cmp
icebp
dec
push
ss
cmp
mov
imul
xor
pop
js
jge
aam
adc
and
std
dec
pusha
in
adc
loopne
jb
inc
idivb
sub
jo
mov
mov
inc
cld
cmpb
daa
cmc
in
fildll
adc
addb
push
shrb
push
cmpsl
inc
and
mov
xorl
insb
fdivrp
dec
sbb
xchg
aam
dec
loope
mov
cltd
inc
push
xchg
loope
jo
sbb
imul
xchg
jp
cwtl
adc
decl
mov
out
lds
out
movsl
aas
stos
sar
out
je
lock
xor
mov
paddusb
in
sub
push
pop
xchg
xlat
xorl
mov
clc
shrb
insl
decb
lds
pop
xchg
sbb
adc
inc
pop
add
add
jns
js
lahf
cmp
jne
mov
mov
movsl
cmp
mov
sbbl
mov
inc
andb
mov
out
fmuls
pop
and
adc
inc
jecxz
push
lea
dec
xchg
xchg
ret
out
lods
cmp
sahf
mov
ficoml
xor
push
test
dec
fcoml
xlat
pop
and
jno
out
aam
lret
mov
dec
out
jp
cltd
mov
or
adc
cltd
adc
and
cwtl
jge
ret
jo
ja
stc
cmpsl
pop
inc
pop
rclb
aam
aam
pop
mov
cs
cmp
push
or
pop
sub
cld
pop
and
enter
adc
xor
pop
sar
jl
sub
sub
pop
sub
repnz
push
aaa
sbb
stc
lret
shrb
push
xor
sbb
dec
sarl
pop
lods
sbb
add
jae,pn
gs
test
push
and
icebp
mov
sub
rcrl
jne
or
inc
out
jg
call
ja
xorl
dec
mov
mov
inc
mov
mov
addl
or
inc
adc
stc
mov
xchg
nop
mov
inc
sti
nop
outsl
jp
les
and
xchg
and
es
adc
or
int3
inc
dec
iret
mov
test
icebp
mov
ja
mov
repnz
mov
jp
pop
outsl
xor
dec
mov
mov
pop
mov
sti
into
sub
sub
cmpsl
pop
add
mov
add
mov
in
add
push
aaa
add
es
das
fucom
outsl
or
push
out
addr16
in
dec
les
jae
shl
fldt
into
aas
mov
jo
xor
mov
sbb
mov
mov
fcomi
sub
mov
test
jmp
inc
fmull
repnz
int3
cli
adc
out
cmp
loopne
mov
hlt
les
hlt
int3
dec
pusha
mov
push
inc
sbb
stos
pop
xorb
inc
or
insl
dec
xlat
test
mov
not
les
sub
sub
and
adc
mov
je,pt
lods
mull
xchg
add
pop
cli
lahf
or
jle
dec
mov
pop
add
movsb
movsl
aas
add
fs
or
xor
stos
mov
out
sub
pop
sbbb
mov
ret
dec
mov
in
push
push
add
mov
hlt
pushf
dec
jbe
movsb
outsl
std
loopne
fcomps
sub
es
xchg
fmuls
jae
stos
bswap
test
ret
add
adc
push
hlt
into
mov
and
in
mov
sub
mov
lret
cmpsl
cmpsl
xlat
sub
mov
lock
xlat
lcall
aas
das
pop
sti
cs
imul
sarl
pop
xchg
inc
rcrl
pop
enter
pop
add
cmpsl
mov
dec
sbb
mov
xor
sbb
xor
sbb
cld
mov
jbe
insl
test
lret
xor
inc
or
sbb
sub
ficoms
push
popf
push
push
cld
inc
ret
pushf
and
popf
das
dec
aad
sti
mov
push
xor
add
inc
stos
mov
inc
hlt
xor
mov
mov
mov
cmpb
enter
hlt
das
and
push
jbe
sbb
mov
leave
les
add
pop
cwtl
adc
rorb
mov
sti
push
adc
shlb
sarl
mov
xor
push
pop
and
loope
xchg
pop
arpl
movd
lods
cmc
adc
call
imul
cltd
mov
outsb
pushf
cld
add
push
lock
dec
dec
adc
jmp
rcll
mov
jne
dec
push
mov
test
push
adc
aas
scas
ds
shll
xchg
jno
sbb
push
mov
movsb
mov
add
es
or
stos
loope
fsubl
pop
or
call
mov
je
dec
sbb
cltd
lods
imul
aaa
adc
daa
test
cmp
das
mov
data16
push
in
movsb
aas
sub
mov
out
and
pop
adc
and
jg
pop
loope
xchg
pop
arpl
dec
les
push
out
dec
inc
push
pmulhuw
mov
clc
pusha
xor
orb
sbb
js
inc
or
testl
push
push
and
loope
sub
mov
dec
js
jp
mov
test
sbb
xchg
movups
push
mov
cli
repz
sub
data16
sub
push
or
sbb
push
fst
cs
out
mov
cmpsl
jle
in
mov
int3
aaa
dec
pusha
popf
cmp
ljmp
aaa
out
shlb
jb
das
or
mov
xchg
test
movsb
mov
repnz
cld
and
cwtl
or
cmpsl
rorl
sahf
lods
lods
cli
cld
cmp
xor
idivb
fs
sub
cwtl
outsb
cmp
fcmovb
xor
push
in
in
xor
pop
andb
pusha
or
dec
adc
cmc
cmp
push
xlat
in
dec
or
sbbb
add
roll
push
mov
shrb
adcl
push
jb
push
inc
jo
cmp
cld
sbb
xchg
lds
pop
into
jo
fmuls
mov
or
xor
fsubrl
cmp
ja
out
orb
stos
daa
mov
sar
bound
sub
sub
sub
lods
dec
mov
ja
add
sbbb
mov
repz
stos
jno
or
add
mov
outsl
shrb
adcl
sub
fsub
sub
xchg
add
bswap
mov
ja
and
stc
cs
pop
jle
fcompl
js
into
pop
or
int3
pushf
sbb
pop
in
sub
mov
jo
pop
sbb
add
mov
or
std
pop
sbb
not
les
sub
sub
popf
je
ljmp
cs
jle
cwtl
roll
add
mov
and
arpl
popf
jnp
pop
bound
inc
sub
frndint
xchg
pusha
xorb
add
cltd
push
cmp
mov
mov
daa
inc
sbb
dec
or
cmp
inc
xor
fcoms
ret
pop
push
xchg
dec
push
loope
jo
leave
bnd
aas
push
adc
pop
add
mov
test
fcoms
push
leave
aam
aaa
jns
cmp
sbb
fsubrs
rorb
mov
push
mov
fwait
psrld
mov
rcrb
mov
loope
push
xchg
fimuls
cmp
pop
mov
pop
xor
jl
cmp
decb
or
call
imul
in
imul
cs
mov
cwtl
ror
xchg
scas
shl
and
and
movsb
or
mov
daa
push
sbb
cli
imul
xor
out
jb
xlat
adc
push
push
adc
in
sub
js
in
push
jbe
insb
jae
push
dec
jecxz
mov
or
shrb
mov
cli
sub
into
adc
lret
jno
data16
jp
cltd
adc
mov
int
ror
gs
xchg
mov
mov
aas
ret
inc
rcr
outsl
movsb
pop
je
in
imul
or
sahf
cltd
mov
xchg
pushf
or
add
int
dec
pop
push
pusha
pop
xchg
mov
ficompl
add
neg
jle
or
test
cwtl
mov
cmp
jno
data16
sahf
cltd
adc
cmp
lcall
xor
sub
test
daa
gs
cmp
cwtl
sbb
lcall
fs
or
and
addr16
dec
jecxz
mov
pop
dec
les
mov
mov
xor
cld
pop
mov
mov
test
fcmovne
pushf
mov
mov
mov
jb
jge
inc
sub
pop
mov
mov
sub
in
and
sub
mov
orb
cli
mov
out
shll
inc
aam
inc
adcl
or
jmp
adc
aam
dec
out
mov
sub
push
imul
jno
outsb
enter
bound
xchg
lds
pop
leave
jo
fmuls
mov
fiadds
xor
pop
outsb
je
out
inc
pop
lret
xchg
cmp
push
ljmp
push
xor
adc
das
call
and
addr16
dec
loope
mov
out
imul
dec
dec
ds
cmpsl
sbb
rcll
adcl
sub
lock
insl
test
movsl
mov
lods
push
jno
push
adc
les
into
insb
xchg
pop
rorb
pop
mov
xorb
rolb
jl
mov
mov
popa
adc
adc
loop
clc
test
push
nop
push
inc
jbe
adc
shr
inc
lret
clc
inc
adc
inc
sub
jo
xchg
sbb
xor
xorb
test
xor
pop
adcl
rol
stos
mov
fdivs
or
enter
dec
cwtl
xchg
cld
sub
cmp
cmovg
fucom
sub
mov
cld
in
cs
add
adc
xchg
mov
mov
data16
or
mov
mov
pushf
jbe
je
mull
mov
clc
adcl
push
xor
mov
pop
in
xchg
sub
dec
add
scas
cltd
fdiv
jns
aas
fs
scas
xchg
loop
and
add
fcmove
negb
mov
stc
aas
push
es
mov
fimuls
pop
fcomp
notl
jecxz
sbb
clc
mov
push
int3
xor
movsb
push
subb
push
inc
js
sub
in
adc
aas
fidivs
xor
stos
jnp
xchg
xor
push
outsb
sbb
lds
xchg
adc
mov
aaa
pop
arpl
push
je
or
mov
stos
ljmp
testb
insb
shl
movsb
jecxz
jno
fmull
adc
push
xor
or
xor
add
clc
int3
in
push
test
cmpsl
mov
push
pop
imul
stos
cmp
js
je
jmp
inc
fmull
repnz
or
jmp
int3
cli
jo
inc
push
jo
xchg
mov
bnd
les
mov
mov
dec
pop
pop
in
in
pusha
xorb
test
orl
les
repnz
jle
sub
fcoml
in
out
add
pop
mov
data16
fs
orb
cwtl
in
pop
pop
int
repnz
sub
mov
inc
push
push
loop
lahf
pushf
daa
cli
mov
hlt
xor
mov
push
and
sub
sbb
mov
push
add
jmp
sub
mov
dec
pop
mov
cltd
mov
pusha
stos
and
js
les
cmp
stc
cltd
pop
cwtl
sbb
dec
push
test
mov
shrl
dec
shl
imul
pushf
jo
or
sbbb
dec
xor
cmp
stos
cltd
xor
arpl
outsb
mov
repnz
fisttpll
sub
lahf
nop
push
data16
sbb
shlb
inc
and
fwait
and
jl
jns
xchg
sub
shl
ds
out
mov
and
sti
jl
jecxz
sbb
mov
or
and
jae
pop
das
dec
cwtl
loopnew
cmpsb
push
mov
sbb
frstor
adc
bound
sub
jge
sub
ret
cmp
sbb
xchg
hlt
adc
shlb
shll
fwait
addb
hlt
aaa
ja
pop
adc
fs
add
add
xor
xor
sub
call
pop
push
fdivr
cmp
pop
int3
adc
mov
jecxz
mov
inc
jne
jae
mov
mov
daa
push
sbb
mov
push
mov
adc
decl
test
mov
jbe
push
inc
jo
sbb
jae
cwtl
xchg
adc
lret
fcoms
bound
stos
shlb
cmp
sbbl
pop
sub
cmp
cwtl
lods
cld
out
mov
jae
and
loopne
les
push
lret
movsl
add
mov
test
pop
jb
push
push
mov
cmp
jmp
out
rorl
inc
mov
testb
dec
insb
mov
je
hlt
ja
test
shlb
test
xor
cld
mov
mov
dec
pop
out
cwtl
jne
das
arpl
pop
rorl
cwtl
adc
fstpl
and
insl
cmpsb
xor
or
push
fwait
mov
aam
cmp
out
xor
push
rorb
jns
hlt
cwtl
js
and
inc
adc
pop
mov
bound
push
lret
cmp
ds
xlat
push
pop
add
cmp
pop
xor
cld
aas
xor
shlb
popa
mov
sub
call
dec
lcall
jae
test
int3
push
rclb
pop
push
add
cmc
movsb
jecxz
jno
fmull
adc
outsl
rolb
push
out
data16
pop
xor
mov
scas
dec
push
ljmp
pop
push
xor
cmp
inc
cwtl
movsl
mov
lret
movsl
add
mov
test
pop
jb
rolb
push
out
jnp
sar
rcrl
into
pop
xor
and
cwtl
arpl
in
cmp
js
mov
fmull
repnz
cmp
jmp
int3
cli
mov
aas
pop
adc
pop
aam
inc
movsl
aas
add
enter
fs
lods
shll
stos
mov
out
sub
pop
cmpb
mov
ret
dec
dec
jecxz
loopne
in
mov
inc
add
sar
mov
hlt
dec
dec
jbe
movsb
jne
push
shrl
jle
test
cmp
nop
test
push
call
xlat
notl
cmc
push
dec
ss
fdivs
mov
test
xor
cld
adc
addl
sub
in
sub
mov
test
sbb
test
jns
mov
cmp
not
mov
add
sub
icebp
add
dec
mov
and
cld
aas
stos
ds
xlat
fcoms
push
push
pop
or
sahf
push
and
and
pushf
add
mov
sub
pop
outsb
out
mov
cmp
lods
cld
and
neg
jno
jg
ljmp
imull
cli
or
rcrb
push
sarb
loop
cmpsb
das
pop
xor
jae
cwtl
xchg
sub
cmovg
cmp
cmp
adc
xchg
dec
push
in
icebp
nop
cmp
cmpsb
enter
repz
xchg
mov
icebp
adc
xchg
das
call
and
push
mov
mov
mov
lods
mov
jmp
mov
pop
out
sarb
ljmp
lock
xor
add
inc
aaa
jle
pop
unpckhps
push
lret
sub
dec
ret
enter
mov
das
jp
rorb
dec
dec
mov
in
nop
ret
xor
stos
test
out
inc
pop
dec
pminsw
fdivl
into
outsb
mov
cmp
cmpsl
pushw
pushf
mov
push
out
insb
sti
js
test
cmp
loop
cwtl
inc
enter
ljmp
aas
mov
rcll
cmpsl
stc
ljmp
and
sub
and
sub
in
xchg
add
mov
lret
sti
cs
sub
pusha
pusha
push
push
mov
cmp
dec
xchg
pop
mov
shll
cmp
or
pop
cwtl
push
cwtl
add
sbb
aas
cmpsb
cwtl
out
xor
and
out
outsb
pushf
and
mov
js
les
xchg
imul
mov
repz
cwtl
js
mov
aad
cli
and
mul
inc
push
push
roll
xlat
insl
add
push
std
inc
ss
push
pusha
pusha
insl
mov
pop
lret
fmuls
mov
push
and
inc
pop
and
add
xor
insb
cmp
jge
bound
sub
test
or
mov
popa
stos
mov
lea
fbstp
push
dec
or
mov
mov
sub
int3
dec
rorl
add
les
in
or
push
in
adc
jbe
cmp
into
jle
mov
mov
popa
adc
adc
cmp
fnstsw
or
inc
or
mov
sbb
add
jp
cltd
adc
lods
std
pmaxub
xchg
lds
cltd
lods
imul
fldcw
mov
ds
sub
inc
xlat
decl
push
jae
xchg
movsb
int3
sahf
pushf
mov
loopne
nop
popf
je
out
test
jmp
sbb
push
dec
pminsw
lea
cli
mov
je
aas
cli
lods
inc
fstpl
or
std
push
out
das
sub
out
sbb
adc
sub
aas
cmp
repnz
es
outsl
and
pop
test
sbb
mov
xlat
mov
or
pop
mov
push
push
andb
jl
out
cmp
popl
ja
sahf
cmp
pushf
cld
cmp
sbb
pop
xchg
xchg
sbb
xchg
cmc
cmc
movsl
cmpsb
dec
push
orb
cmp
sub
inc
andb
jge
and
mov
and
insb
pop
fsubrl
sar
pop
stos
nop
sub
data16
jmp
mov
in
incb
adcl
jnp
pop
sub
cmpsl
mov
sti
stc
cs
lret
fcompl
enter
mov
repnz
adc
push
adc
sub
gs
subb
movsb
push
je
popa
or
push
adc
cs
jle
call
fmull
repnz
daa
out
mov
pusha
cwtl
rcl
or
addb
adc
pop
xchg
jp
sub
adc
popa
mov
fs
lcall
adc
mov
cwtl
sarl
cwtl
jge
pop
and
aas
outsl
or
jl
and
lcall
pop
push
mov
rcr
aaa
cmpsl
data16
test
push
sub
fs
cmpsb
mov
aas
mov
adc
mov
and
je
insl
dec
ljmp
add
fimull
adc
mov
ret
adc
sbb
aaa
dec
and
cmp
call
scas
shlb
jb
or
and
mov
aas
pop
lods
and
out
sbb
xchg
pop
rolb
mov
dec
adc
mov
cltd
add
xchg
sub
push
imul
jno
pop
push
lahf
or
lea
push
push
std
mov
jecxz
mov
loope
addb
adc
xor
ds
int3
and
and
nop
cmpsl
pushw
cwtl
mov
inc
out
into
call
stos
mov
out
sub
pop
cwtl
out
cmp
cs
loope
insb
xchg
lods
insl
pop
loopne
in
pop
call
xchg
jbe
lds
in
test
aam
dec
add
xchg
pop
cli
lahf
loopne
jle
dec
push
mov
in
pushf
inc
cld
out
dec
cld
pop
adc
decl
sbb
insl
mov
fwait
andb
cmpsb
arpl
hlt
mov
lcall
stos
jno
or
add
mov
pop
dec
sar
pop
inc
in
shlb
loopne
add
sub
lret
mov
ljmp
or
pop
sbb
jmp
push
aam
shlb
sarb
xchg
rcrb
sbb
or
jg
lock
insb
hlt
pop
cs
or
fs
ret
lods
sub
fnsave
fistpll
in
push
pop
mov
faddp
cmp
in
movb
in
sbb
sbb
pop
jl
imul
imul
test
dec
hlt
ljmp
or
data16
outsb
ficoml
rorb
movsb
in
rorb
js
std
shl
xor
loope
mov
cmp
xchg
add
scas
shl
aas
ret
pusha
jae
test
fcomip
fistl
imul
cmp
les
repz
cmp
dec
inc
or
xchg
sbb
and
subl
inc
push
fisubl
adc
jo
sub
in
adc
aas
inc
jecxz
bound
cltd
mov
jo
push
insl
loop
popa
cld
fdivrl
pop
pusha
mov
push
inc
sbb
dec
fdivl
inc
dec
inc
xor
jl
loop
cli
stc
cs
xchg
jle
fcompl
lods
adc
push
mov
rclb
bound
xchg
adc
les
jecxz
insb
shl
dec
addb
or
pop
dec
xor
dec
dec
add
xchg
pusha
adc
sub
cmp
sub
fcmovb
jmp
mov
fstps
sbb
push
sbb
bnd
orb
mov
cli
mov
jmp
mov
cltd
pop
push
pusha
sti
sub
mov
ljmp
mov
and
adc
pop
push
loope
das
dec
subb
dec
fisttps
sarl
stos
or
ret
add
inc
adcl
and
mov
loope
enter
cmp
dec
sbb
insb
pop
int3
std
in
ljmp
repz
sbb
add
mov
push
test
cld
cmp
jl
subb
outsl
push
fs
xchg
or
daa
inc
mov
and
fwait
jno
push
push
mov
cmpsb
pop
sahf
es
je
dec
cwtl
xchg
sbb
mov
add
jle
insb
push
mov
sbb
sub
call
add
add
fbstp
lds
adc
stc
push
in
in
cmpsl
test
mov
movsl
call
push
dec
jbe
incb
daa
push
jl
imul
inc
add
pop
adc
add
pop
cli
lahf
nop
cmpsl
jle
dec
sbb
pop
mov
fsubs
mov
jle
aam
call
stos
mov
out
sub
pop
subb
dec
or
stos
loopne
in
fsubrl
lea
js
ds
hlt
add
shll
add
repz
mov
imul
es
mov
insb
pushf
les
sarl
rorb
sbb
jmp
inc
lret
mov
mov
aas
add
cmp
pop
dec
mov
inc
xcrypt-ecb
cmpsl
mov
mov
adc
adc
repnz
pop
in
pop
dec
inc
cmpsl
add
cmp
or
aas
repnz
pop
pop
or
in
mov
mull
pop
inc
sbb
sbb
cwtl
mov
or
ret
je
loope
dec
xchg
out
sub
mov
aas
repnz
adc
fcomip
fistl
or
xor
adc
shlb
repz
jmp
cmp
leave
push
psubusb
pop
mov
in
mov
or
fisubl
iret
daa
inc
sub
sub
in
adc
aas
clc
inc
bound
ja
call
test
jbe
dec
jle
xchg
mov
inc
cwtl
shll
inc
fistpll
adc
jle
and
add
dec
or
xor
cld
repz
push
jge
mov
cmp
sub
xor
mov
pop
sbb
add
shl
mov
dec
xlat
test
mov
not
les
sub
sub
popf
je
sbb
mov
les
mov
sub
movsb
aaa
aas
cwtl
sub
bnd
out
movsb
xor
scas
ds
or
aaa
mov
rcr
aaa
cmpsl
data16
test
push
sub
adc
ficompl
sbb
mov
sub
xrelease
rcrb
pop
sbb
je
aaa
mov
jge
jmp
lret
inc
cmpsb
in
add
dec
es
jno
mov
pop
xor
jmp
jl
cmp
adc
fcmove
xchg
insl
notl
rcll
mov
inc
xor
cmp
push
sbbl
pop
mov
xor
pusha
add
sub
xor
mov
and
test
outsl
aaa
insb
loope
or
jno
test
mov
and
or
xchg
ja
mov
mov
sub
call
mov
sarl
orb
mov
adc
xor
jbe
xor
call
popf
cmpsb
arpl
hlt
mov
out
dec
pop
sub
jno
or
add
mov
pop
push
sar
pop
push
in
movsl
shlb
add
daa
inc
mov
into
jmp
inc
fmull
bnd
loope
cmpsl
int3
cli
in
inc
push
jo
or
mov
hlt
push
dec
hlt
pop
dec
mov
pop
aas
pushf
test
sub
cmovg
mov
jle
adc
sbb
pop
mov
lods
mov
dec
arpl
mov
into
sub
mov
sbb
or
cmp
xor
and
sar
dec
fidivs
out
mov
ror
movsb
jecxz
xor
pop
add
cmpsb
movb
xchg
in
fbld
pop
shlb
into
dec
sbb
sub
xor
inc
push
cltd
stos
xchg
imul
sub
cmp
in
int3
frstor
cmp
pause
or
pop
pop
push
add
add
jmp
mov
aaa
sub
jb
sub
stos
aas
rcrb
jbe
ds
lods
in
cld
cmp
adc
xor
mov
loopew
xchg
and
cwtl
xchg
cmp
ficoml
loopne
mov
sbb
test
pusha
or
dec
adc
and
pop
aas
xlat
inc
shr
lahf
and
push
jae
and
outsb
pop
jecxz
xchg
inc
push
cs
popf
dec
mov
lods
hlt
xor
out
aam
or
shlb
mov
mov
popa
adc
hlt
in
loop
cs
ja
or
mov
repnz
in
hlt
in
dec
add
jnp
out
daa
inc
mov
into
lods
imul
mov
aas
ret
inc
les
inc
cmp
je
fwait
cwtl
and
xor
in
xor
lcall
mov
mov
xchg
jp
sahf
jnp
push
popa
mov
fs
into
lcall
and
mov
cwtl
roll
cwtl
rorl
fsubrs
in
repz
or
push
jp
shl
mov
pusha
sbb
or
sub
ljmp
imul
or
xchg
mov
xor
pushfw
jo
or
sbbb
dec
xor
cmp
stos
cltd
xor
arpl
pushf
inc
std
mov
sub
pop
push
lock
dec
call
adc
lret
fs
cmp
sub
loopne
xor
aad
out
jl
jno
pushf
push
add
js
xchg
loopne
or
mov
cmp
lret
pusha
push
pop
pop
in
lds
or
push
in
pop
pop
int
mull
adc
pop
es
push
aas
sti
mov
mov
dec
out
mov
cwtl
rorl
pop
xchg
sub
repz
or
jecxz
in
shl
dec
addb
cltd
jg
pop
dec
xor
dec
dec
andb
loopne
xchg
adcl
sub
mov
lods
jnp
mov
adc
xor
fsubs
jle
test
lock
cmp
loop
aam
inc
push
push
mov
inc
jbe
xlat
mov
movsl
aas
add
mov
jle
push
lahf
mov
int
rcll
gs
xchg
mov
jge
aas
ret
inc
les
into
outsl
movsb
push
icebp
xor
pop
sbb
repnz
jae
pop
out
inc
sbb
fbld
sti
es
xchg
fcomps
xor
clc
sbb
mov
inc
pop
cld
shlb
xor
sbbb
add
je,pt
cwtl
out
mov
sub
sub
repnz
les
mov
sub
sub
mov
adc
les
jge
cmpsb
ficompl
fcoms
pop
xor
sbb
pusha
mov
xor
inc
insl
test
lret
cmp
fs
push
mov
push
pop
mov
xchg
mov
sbb
rcrb
out
and
sbb
pusha
xchg
xchg
sub
pusha
adc
cmp
js
js
adc
push
jmp
ljmp
sub
cli
call
or
pop
or
mov
mov
hlt
mov
outsb
mov
insl
mov
fwait
test
xchg
jp
je
adc
popa
mov
fs
lcall
cmp
mov
cwtl
sarl
shll
sub
icebp
add
jnp
and
or
out
addr16
fwait
sub
xor
sub
dec
push
inc
push
outsb
pop
mov
mov
and
adc
into
dec
xor
pop
dec
jecxz
sar
push
push
dec
ret
adcl
mov
jno
pop
pop
cltd
adc
xchg
cwtl
roll
and
or
lock
jo
lock
data16
xchg
mov
jbe
fistpl
pushf
xchg
add
dec
in
jle
inc
clc
sbbb
call
xchg
mov
jmp
push
push
xor
push
cmpsl
inc
push
mov
mov
xchg
pop
push
pushf
test
push
cld
cwtl
mov
es
and
mov
repz
fidivrs
loopne
in
hlt
aas
adc
aam
nop
mov
repnz
mov
jbe
xlat
push
add
xor
addb
jl
ss
subb
movsb
pop
xchg
pop
fistps
or
mov
mov
jno
xor
cmp
les
xor
cs
pop
mov
aam
fdivrs
std
push
outsb
pop
xor
jnp
cltd
mov
dec
xor
fwait
addb
mov
mov
ja
mov
jbe
push
inc
jo
push
add
shlb
enter
test
mov
not
les
sub
sub
xchg
cmp
adc
hlt
bound
cld
cwtl
in
in
repz
xchg
lock
inc
sub
push
test
gs
push
in
sub
add
add
dec
jno
or
mov
pusha
mov
rorl
fistpl
or
cld
lret
sbb
divl
cmp
push
ret
or
jl
shll
out
mov
shrb
cmpsb
xchg
fbstp
movsb
jecxz
xor
pop
subb
cmpsb
out
cs
xchg
in
fbld
mov
stos
push
mov
or
xor
cmp
cmp
imul
dec
lahf
repnz
sub
push
xor
sub
aas
push
sbb
orb
lret
xchg
pop
int3
and
int3
into
stos
sbb
or
mov
out
xchg
mov
bound
rcrb
jmp
mov
push
push
test
sbb
mull
out
and
push
rcrb
inc
xor
pop
inc
sub
fs
mov
inc
pop
nop
rorl
pop
xor
sahf
fildll
cmc
mov
xchg
mov
mov
or
fs
mov
cwtl
ja
mov
nop
rcrl
dec
add
sub
hlt
es
fs
and
or
jno
push
insl
mov
cmpsb
mov
std
mov
fmull
repnz
sub
mov
sub
mov
adc
cmp
xor
jg
mov
xlat
test
mov
not
les
sub
sub
dec
shrb
mov
je
enter
popa
stos
mov
xlat
cwtl
adc
or
adc
mov
push
adc
fs
jp
push
andl
sub
sub
fldcw
daa
jle
xchg
mov
pop
cld
outsb
mov
jns
insb
or
sub
nop
shrl
or
test
pop
cld
loope
and
sub
fists
and
mov
xlat
out
mov
and
xchg
push
cmp
icebp
mov
insb
dec
sub
xchg
cmp
movsb
nop
mov
xor
jb
inc
adc
push
add
mov
cmpsb
popf
dec
dec
sub
mov
push
add
sbb
ret
insb
jmp
mov
popa
in
and
lahf
outsb
imul
test
popa
cli
mov
je
push
mov
shrl
jmp
inc
fmull
repnz
out
loope
cmpsl
int3
cli
enter
jo
cs
cmpsl
mov
add
adc
pop
xchg
in
addr16
stos
pusha
sbb
int
icebp
dec
ret
test
mov
xlat
jae
je
sub
sub
stos
push
outsl
cmpsl
mov
popa
sub
or
push
jb
push
in
sub
mov
xchg
ja
mov
mov
pop
dec
xor
dec
dec
js,pt
sbb
xchg
sub
jo
sub
ud2
in
int3
or
fdivrs
out
ljmp
or
insb
aaa
cmpsl
ds
out
aad
ss
add
nop
lcall
sbb
inc
sub
gs
test
mov
pushf
inc
cmp
repz
aaa
xchg
fs
mov
lea
mov
js
push
inc
cmpsb
mov
push
sub
mov
clc
scas
ljmp
and
push
dec
pop
lds
mov
sub
mov
or
in
test
inc
int3
xor
test
add
mov
inc
add
movsl
mov
addr16
dec
loope
mov
jg
imul
adc
xor
test
mov
push
mov
xchg
jp
cltd
adc
xchg
mov
dec
and
movsl
add
pop
cli
lahf
and
ja
dec
push
mov
hlt
pop
push
cwtl
mov
pop
jae
pop
or
cmp
js
mov
jle
test
xchg
nop
cmp
loop
lods
test
push
int3
push
inc
jbe
xlat
test
add
add
jle
mov
call
stos
mov
out
sub
pop
adcb
jb
stos
loopne
in
xchg
push
sub
in
pop
and
pop
cmpsl
mov
jb
popa
stos
mov
data16
jae
iret
push
test
shrl
or
cwtl
in
pop
outsb
xchg
clc
cltd
lods
push
jl
shll
or
jg
test
push
jae
pop
sbb
fcomi
add
or
add
cwtl
inc
cltd
sbb
mov
pop
loopne
or
mov
add
fsts
fmuls
lods
in
xor
dec
dec
mov
push
add
mov
pop
xorb
mov
add
iret
mov
fcoml
jno
jno
or
add
add
lock
not
les
sub
lds
rcrl
cwtl
mov
dec
mov
jae
movsl
rorl
fistpl
sub
sbb
int3
push
icebp
dec
ret
test
mov
lods
jae
je
sub
jb
ja
popa
jno
or
jmp
sub
mov
push
jb
push
shrb
jge
inc
test
push
mov
rclb
inc
popa
or
push
lods
jae
cmpsl
test
mov
jle
call
hlt
dec
jbe
test
daa
mulb
in
cwtl
addr16
shll
in
in
adc
jae
mov
orl
les
repnz
popa
data16
cltd
mov
push
pushf
add
and
pusha
xchg
ret
or
fs
sbb
sbb
mov
mov
jl
test
xchg
sbbl
adc
loop
mov
cmpsb
jo
lret
jno
int
inc
cmp
jl
xor
sub
lea
fs
test
mov
dec
mov
jae
int3
cwtl
cmp
ficompl
ret
mov
jmp
outsb
pop
and
je
xchg
inc
pop
ret
sbb
push
mov
xor
pop
subl
xor
and
pop
hlt
push
cli
inc
pop
roll
mov
loop
aam
push
jno
call
mov
ret
fdivs
lds
adc
mov
aaa
add
lcall
es
scas
aas
sti
stos
mov
push
and
inc
jbe
xlat
xchg
pop
fsubrs
rdmsr
and
nop
or
rcrl
mov
push
xchg
iret
adc
push
ret
pop
jb
dec
ret
mov
ret
xor
daa
cmp
cmpsl
jg
jo
mov
mov
sbb
xchg
scas
insb
movsb
mov
loop
cs
fnstsw
or
dec
or
rolb
repnz
hlt
dec
hlt
cld
dec
hlt
mov
push
clc
mov
cmp
xor
stos
mov
out
sub
pop
andb
xorl
in
test
lea
push
ds
hlt
sub
rcll
sub
repz
test
push
and
push
push
sub
fcoms
fnsave
cmpsl
addr16
outsl
loop
mov
inc
jo
sbb
call
push
movsl
fimull
cltd
adc
popa
sub
jl
add
sub
icebp
add
dec
mov
and
fistpll
or
in
xlat
rclb
xchg
jmp
aam
cmp
das
sti
shlb
bound
xchg
or
inc
xor
xchg
les
pushf
imul
mov
fs
lahf
inc
cmp
ss
out
xor
adc
and
jb
and
fmuls
movsb
test
aam
aas
and
cs
std
xor
sub
pop
outsb
mov
inc
daa
ficoms
lret
jbe
mov
call
cmp
xor
and
pop
adc
pop
xor
pop
loope
xchg
pop
arpl
dec
les
repnz
jle
out
fsubl
pop
cmpsb
mov
sbb
jge
push
movsb
inc
xlat
fs
sbb
stos
insl
dec
xlat
test
mov
not
les
sub
sub
push
and
push
mov
ljmp
mov
adc
adc
jmp
sarl
or
push
mov
ficompl
in
js
xchg
cmp
sahf
adc
and
push
adc
or
outsl
mov
add
mov
sub
xchg
cwtl
pop
clc
mov
cwtl
fs
jge
loop
cli
lcall
mov
pop
pop
sti
andl
lea
mov
push
cmp
sbb
mov
jge
sbbl
and
sub
loope
jp
nop
dec
sub
rorb
mov
cmp
sbb
xchg
stos
fs
into
sub
out
aad
push
push
mov
mov
adc
pop
push
jb
popf
push
testl
in
mov
push
push
test
jge
push
aaa
and
xor
xor
out
and
std
roll
roll
shlb
ljmp
test
push
jbe
push
in
test
adc
or
xchg
das
call
inc
lock
push
jno
push
dec
or
call
loope
insb
xchg
push
cwtl
mov
pop
mov
xchg
jo
or
stc
inc
aas
mov
ss
inc
dec
adc
cmp
aam
ret
pop
stos
popa
adc
es
cld
mov
les
in
push
pop
jne
jae
mov
mov
daa
push
sbb
mov
push
pushf
inc
adc
fcmovbe
insb
or
fs
push
inc
jo
stos
xchg
fisttps
add
mov
push
aam
cwtl
xor
pop
push
shl
pop
or
pop
mov
pop
nop
je
inc
lock
push
ja
movsl
repnz
jg
std
andb
mov
inc
or
sbbb
dec
xor
mov
cmpsl
inc
push
mov
mov
hlt
pop
ret
mov
aas
ret
xchg
jle
stos
pop
in
lahf
push
movsb
inc
iret
xchg
add
mov
cs
repz
cmp
frstor
push
and
sbb
sbb
in
xor
inc
add
sub
inc
stos
mov
cld
adcl
jnp
pop
mov
cs
das
pop
add
addb
fcoms
and
jl
test
sub
leave
sahf
add
test
ja
xor
xor
sbb
gs
xchg
mov
push
fistpll
ret
inc
int3
fadd
outsl
push
inc
jo
je
pop
pop
and
je
adc
xorl
push
mov
mov
adc
insb
fidivrs
xchg
scas
insb
movsb
mov
pop
cli
lahf
pusha
cmpsl
jle
dec
ljmp
sbb
add
sbb
jle
xchg
mov
in
shll
stos
mov
out
sub
pop
adcb
mov
ret
dec
lcall
push
add
mov
mov
jbe
xor
mov
sbb
push
ss
sub
cmp
jmp
in
xor
xor
xchg
sbbl
adc
loop
cmp
dec
pop
xor
jno
int
inc
cmp
jl
xor
in
xor
push
test
ss
dec
push
push
xor
push
cmpsl
inc
jb
adc
pop
sub
arpl
pop
cwtl
mov
push
lea
fsubrl
nop
or
pop
and
and
inc
mov
stos
and
bound
lods
jb
in
mov
repnz
lret
push
fsubp
les
adc
add
jo
adc
shrl
pop
daa
popf
mov
ljmp
jno
addr16
loope
aam
push
xor
pop
bound
scas
dec
pop
jo
add
ljmp
dec
pushf
sub
mov
sub
mov
adc
pop
push
fwait
xlat
or
shl
mov
loope
addb
cmpb
pop
dec
xor
dec
dec
ds
inc
xchg
mov
ljmp
loopne
sub
lret
and
cmp
repnz
popa
adc
mov
cmp
fnstsw
or
sub
cwtl
mov
scas
mov
data16
data16
cltd
adc
mov
int
sarl
gs
xchg
mov
aas
fistpll
ret
inc
les
into
outsl
movsb
pop
subb
imul
data16
lret
jp
pushf
faddl
ret
or
mov
fwait
es
ds
insb
add
add
mov
jle
adc
cmpsb
insb
cltd
sub
in
jle
aam
sbbb
call
imul
cmp
mov
stos
aam
fs
mov
in
push
sub
shlb
pop
movsl
shlb
leave
xor
sub
pop
sub
sbb
lods
mov
icebp
mov
pop
mov
inc
sbb
bnd
and
push
push
xchg
imull
in
inc
aad
xchg
cltd
popa
into
aas
jae
data16
in
pop
bnd
cmpsb
in
adcl
test
ja
mov
loope
clc
pop
jp
int3
mov
movsb
push
subb
push
inc
inc
ljmp
in
adc
aas
pop
mov
les
cli
mulb
sti
loopne
andb
xchg
or
mov
stos
cmp
in
jbe
cmp
add
push
adc
call
inc
test
out
mov
jno
push
xor
std
or
out
sub
dec
pslld
inc
dec
add
mov
sub
mov
adc
es
pop
push
sub
add
test
xor
or
mov
fs
lcall
adc
sbb
inc
mov
cwtl
rcrl
pop
or
in
repnz
mov
pusha
sbb
popa
or
push
xorl
mov
call
mov
hlt
sbb
push
in
pop
bound
in
fs
mov
loope
fstpt
inc
test
xor
mov
loope
fidivl
pop
mov
cltd
mov
pusha
stos
and
nop
ja
add
cmp
stc
cwtl
cmp
inc
dec
push
test
xor
test
mov
push
out
nop
shll
fwait
test
pop
cld
loope
and
dec
std
fisttps
sbb
int3
popf
je
pop
dec
lea
mov
dec
cmp
lret
call
imul
icebp
cmp
xor
xchg
data16
pop
es
stc
rcr
scas
daa
bound
mov
push
adc
mov
and
jecxz
sar
push
jb
ret
adcl
mov
xlat
jle
sti
jecxz
sbbb
in
imul
mov
cltd
mov
sbb
mov
or
jmpw
jmp
jge
dec
xbegin
mov
adc
sub
pop
out
cmp
mov
rcrl
lret
inc
movsl
mov
mov
popa
adc
jle
pop
jne
mov
jle
add
xchg
adc
jmp
mov
mov
nop
or
stos
mov
dec
or
jmpw
jmp
jge
aaa
into
outsb
mov
pop
int
ds
jb
ljmp
inc
aaa
xor
pushf
in
addb
fs
sarb
adc
xorl
fsts
lods
in
cmp
push
mov
andb
jl
xor
lahf
dec
fisttpl
repnz
in
push
addr16
xor
push
cmpsl
inc
jb
adc
pop
sub
or
lret
cmpsl
pop
cwtl
sbb
into
lea
inc
sub
nop
or
pop
xor
and
inc
or
cld
in
cld
cmp
fcmovne
adc
sbb
popf
pop
or
cmp
pop
cmpsb
loope
shlb
test
xchg
fsubp
xor
sub
pushl
mov
loope
clc
pop
xor
sub
movsb
push
subb
push
inc
je
sub
in
adc
pushw
sub
mov
cwtl
sti
add
and
jno
or
mov
lahf
sub
in
jbe
cmp
add
push
xchg
adc
lock
dec
jne
jae
mov
mov
daa
push
sbb
cmpsb
mov
push
sbb
adc
fimull
or
loopne
in
mov
jbe
push
inc
jo
ljmp
mov
inc
frstor
adc
test
mov
pusha
movsl
sarl
sbb
es
pop
cmp
sbb
pop
aas
fsubrl
mov
dec
adc
cmp
aam
ret
test
ret
xor
add
je
dec
mov
dec
dec
mov
test
pusha
aaa
xor
and
shlb
push
ds
add
clc
bound
xor
or
pop
ljmp
cmpsl
cmpsl
fildll
xchg
cmp
push
dec
adc
xor
and
fisubl
dec
jbe
jl
aam
sub
sub
inc
mov
rorl
cld
repnz
xor
jle
pushf
xchg
dec
pop
lock
int
aad
cmp
mov
in
cld
cmp
fcmove
mov
jmp
cwtl
xchg
mov
nop
mov
xor
lcall
add
mov
xchg
sar
sbb
hlt
mov
jo
bound
stc
push
and
dec
add
push
outsb
das
movsl
lock
incl
std
push
in
cld
aas
mov
cmp
cmpb
ret
xor
mov
xor
mov
fwait
andb
cmpsb
arpl
hlt
mov
out
dec
pop
and
imul
mov
sub
jb
call
xchg
lret
clc
jmp
into
dec
pop
pop
in
in
loopne
jae
mov
orl
les
repnz
jge
aam
ljmp
cwtl
jge
pop
hlt
je
pop
in
push
jo
es
or
push
mov
jo
cli
push
lods
inc
adc
xor
mov
sub
mov
ja
inc
mov
out
in
adc
cmpsb
pop
fwait
push
inc
rorl
faddp
pop
mov
addl
fisttpl
rcrl
dec
cmpsb
in
sub
xor
cwtl
sub
addr16
dec
jecxz
mov
and
les
mov
shlb
daa
cmp
lret
in
test
fisttpl
pushf
or
lcall
mov
jl
or
ret
and
test
jno
mov
mov
and
add
mov
push
popf
inc
adc
test
repnz
add
push
adc
popf
cmp
fisubl
push
les
pushl
mov
pop
outsl
push
push
punpcklbw
rcr
add
mov
xchg
inc
jno
addr16
loope
aam
push
enter
imul
and
out
imull
cli
call
mov
cmpsb
push
repz
or
negl
fistps
lods
mov
dec
les
repnz
jle
mov
push
push
jbe
push
in
pop
push
inc
nop
mull
mov
stos
lock
push
jno
push
stc
and
call
loope
insb
xchg
jge
mov
dec
mov
pop
mov
wrmsr
or
sbb
xchg
scas
insb
movsb
mov
add
es
stos
or
movsl
sarl
push
sub
pusha
popa
stos
mov
xlat
mov
dec
mov
adc
mov
jno
push
pusha
data16
jo
movups
cwtl
dec
std
mov
ret
lahf
neg
fwait
es
jo
xor
lret
popa
stos
mov
in
out
mov
cmpsl
jl
mov
hlt
cwtl
mov
jb
test
adcb
mov
enter
fdiv
pop
repnz
bound
pop
lret
sbb
cli
adc
cwtl
adc
pop
das
je
loop
or
cmp
jno
cmpsl
add
daa
inc
sub
jo
xchg
pop
push
cs
add
or
add
loop
arpl
cmp
repz
xchg
dec
or
jmpw
jmp
jge
aaa
outsb
mov
pop
shll
fcom
add
ljmp
jmp
inc
data16
ret
orb
add
std
pop
pop
int
repnz
mov
es
gs
popf
pop
arpl
pushf
adc
repz
sub
push
clc
sbb
outsl
daa
push
mov
push
mov
pop
sbb
inc
dec
test
popa
xchg
xor
sbbl
pop
imul
int3
test
lds
push
aas
inc
cmpsl
ds
dec
in
jo
test
arpl
xchg
sbbl
adc
loop
pop
dec
pop
xor
jno
int
inc
cmp
push
mov
jl
xor
sub
inc
cmp
test
mov
pop
cld
loope
and
imul
mov
jae
int3
cwtl
cmp
popf
fbld
ret
mov
jmp
outsb
pop
and
je
xchg
inc
and
add
enter
aad
mov
xor
ja
out
cwtl
outsl
cmpsb
cld
fdivrp
data16
stos
dec
jb
js
xor
mov
and
in
je
dec
out
push
jne
insb
inc
loopne
cli
inc
loope
int3
rol
lea
fbstp
push
dec
or
movsl
cmpsb
dec
push
orb
cmp
mov
cs
xchg
mov
or
sub
bound
fs
sti
pop
test
adc
xchg
mov
jno
pop
mov
xchg
and
add
dec
or
xor
cld
repz
les
inc
dec
cwtl
adc
xor
add
jne
mov
dec
adc
xorl
in
inc
push
push
lret
pop
lret
push
mov
sbb
repnz
jge
testb
icebp
and
in
pop
subl
mov
jno
fnstenv
and
inc
int3
les
dec
test
mov
xor
sub
adc
pop
je
nop
cmp
aaa
cmpsl
addr16
outsl
push
imul
je
pop
cmp
or
std
push
bound
sub
out
adc
das
cmp
or
mov
push
in
aaa
les
cmpsl
mov
dec
int3
or
rcrb
sub
je
mov
cwtl
sub
andb
shrd
sbb
pop
pop
sub
push
mov
ret
mov
sahf
cmp
decl
push
scas
and
push
jmp
fwait
clc
cmpsb
call
stos
mov
out
sub
pop
and
xorl
push
test
xchg
fcoml
mov
sub
mov
test
add
sub
pop
mov
fistps
mov
cli
push
mov
adc
fiaddl
push
or
mov
jo
lret
jp
sti
movsl
mov
test
movsl
add
push
dec
or
lds
pop
ret
pop
pusha
xor
pop
orl
adc
xor
xchg
popa
xor
cli
dec
or
cwtl
xchg
clc
adc
loopne
aad
adc
scas
cmp
xlat
inc
cld
fmul
outsl
movsb
pop
inc
sub
add
and
loop
sbb
inc
or
aaa
fisttpll
lahf
jl
bnd
jl
out
mov
ss
bound
fists
dec
in
loope
sub
mov
dec
push
lcall
pop
sti
jo
fmuls
sarl
push
bound
pusha
cmp
repz
or
data16
cwtl
dec
or
jl
mov
sub
cs
out
mov
or
mov
arpl
xor
pop
dec
pop
xchg
cwtl
icebp
lds
shlb
push
cmc
pop
lods
dec
pop
cmp
jl
push
inc
fadd
sub
sti
in
add
popf
es
pushl
das
add
push
cwtl
enter
clc
adc
jnp
xor
pushf
ror
cs
pushf
inc
sbb
lds
andb
imul
in
xchg
add
in
and
dec
je
negl
mov
fistl
mov
inc
arpl
or
rcrb
dec
daa
dec
inc
inc
loope
aam
aas
pop
jle
pop
jne
cs
ja
ss
sub
aas
stos
ds
shll
stos
mov
pop
sbb
cltd
lods
imul
add
mov
ds
mov
je
pop
pop
fdivr
cmp
dec
xadd
pusha
ljmp
nop
mull
dec
xchg
xchg
and
add
dec
or
xor
cld
repz
repnz
fmuls
ljmp
je
mov
mov
push
pop
pop
call
lods
mov
cmp
xor
nop
sub
mov
in
dec
adc
xor
and
in
adcl
stos
mov
lcall
sub
in
sub
pop
ds
adc
and
mov
repnz
jle
mov
in
mov
movsb
cmpsb
mov
inc
enter
mov
out
mov
mov
jbe
xlat
inc
pop
mov
pop
imul
xlat
repz
pop
repz
fnstcw
xchg
mov
mov
dec
xlat
test
mov
not
les
xchg
out
push
mov
cwtl
mov
testl
and
fldenv
dec
mov
fwait
aam
aas
clc
jo
pop
jne
movsb
or
ss
in
adc
cmpsb
and
xchg
cmp
mov
les
in
loopne
fsubrp
or
mov
int
and
in
push
jo
fcmovb
int
loope
test
aaa
add
xchg
sub
xorl
jle
cwtl
jge
rcrl
ds
hlt
hlt
dec
jbe
add
cmp
js
sbb
jmp
inc
fmull
repnz
dec
loope
cmpsl
int3
cli
sbb
adc
movsl
mov
add
jle
movsb
ret
or
imul
pop
sbbb
mov
jl
test
and
arpl
xchg
sub
mov
cwtl
cmp
out
loop
fidivrl
sbb
adcl
add
push
xor
cli
fcomps
jnp
lds
std
pop
fsub
xchg
jl
mov
pop
mov
lcall
sub
mov
inc
hlt
cwtl
sub
or
mov
mov
sub
fnstenv
and
or
fdivrs
mov
adc
sbb
rcrl
les
cld
push
into
cli
mov
adc
push
mov
adc
push
out
lcall
dec
movups
das
jmp
lds
push
mov
dec
mov
sub
ror
add
dec
cwtl
jge
fstps
popl
cli
xor
xchg
stos
shrb
jb
int3
insl
mov
fwait
subb
arpl
hlt
mov
lahf
lcall
mov
add
mov
sar
pop
testb
mov
into
imul
mov
into
jmp
inc
fmull
repnz
je
jmp
int3
cli
movsb
mov
dec
adc
mov
hlt
lock
hlt
clc
dec
cld
mov
push
adc
aas
cmp
js
mov
bound
pop
sbbb
dec
jp
stos
loopne
in
mov
lea
add
ds
hlt
push
dec
jbe
mov
mov
and
add
data16
push
lahf
add
pop
inc
push
adc
and
ss
nop
cmpsl
sub
or
xor
lock
fidivl
push
aas
push
adc
add
aad
cli
push
cltd
adc
loope
bound
xor
sub
cmp
pop
data16
inc
mov
or
pop
xor
test
or
sub
mov
inc
in
cmp
andb
add
mov
dec
sahf
daa
xchg
jno
cwtl
add
mov
xor
jmp
das
push
std
subl
filds
int
inc
test
je
pop
xchg
sub
outsb
jmp
mov
mov
cmp
call
or
mov
sbb
bswap
rcrl
cs
mov
fbld
mov
xchg
das
in
out
in
lds
push
mov
jae
mov
cmp
rcll
mov
stos
fdivr
cmp
mov
les
mov
inc
dec
les
pop
or
jg
test
xor
jmp
inc
fmull
ret
nop
cmp
loop
sbb
inc
push
push
jl
inc
jbe
xlat
ds
jo
mov
aas
add
hlt
mov
js
xor
stos
mov
out
pop
cmp
xorl
in
add
push
lea
lea
aam
adc
ds
hlt
test
jbe
push
push
mov
sbb
or
add
sub
jle
outsb
adc
gs
jo
test
cmp
jg
cwtl
insb
adc
loop
sbb
dec
pop
xor
jno
int
inc
cmp
mov
jl
xor
sub
insl
cmp
and
mov
pop
cld
loopne
push
cs
jge
out
xchg
es
cmpsb
adcb
xor
sbb
sub
inc
insl
test
lret
loop
sbb
cmp
mov
mov
icebp
jbe
mov
fsts
inc
cli
sbb
in
lret
cli
sub
push
les
pushf
and
aas
jbe
popf
call
stos
push
repnz
pop
push
loop
test
test
out
dec
push
cs
scas
shl
and
and
in
add
call
push
into
sbb
in
lret
fdivs
ljmp
je
dec
cwtl
mov
loopne
fs
test
shlb
xor
sbb
inc
mov
movsb
mov
add
es
inc
or
movsl
sarl
push
call
mov
adc
lret
je
pop
in
push
jo
jb
or
push
xor
cs
jle
inc
adc
pop
xor
call
pushf
jo
pop
fdivr
push
fidivrl
mull
xlat
test
mov
not
les
sub
sub
push
and
pushf
mov
les
pusha
ljmp
xor
stos
adc
cmp
ljmp
mov
push
arpl
cli
mov
jmpw
cld
aas
cmp
mov
repnz
shrl
cmp
pop
pop
mov
or
enter
mov
or
bound
or
lods
pushf
sub
push
cs
fisubl
int3
les
lret
jb
es
int3
mov
call
mov
sub
mov
cwtl
add
enter
add
mov
add
outsl
push
push
bts
int
dec
xor
in
cmp
rcrb
inc
xor
pop
inc
sub
out
cld
push
lock
cmpsb
ljmp
xor
fwait
pushf
popf
and
call
mov
insl
mov
dec
pop
push
inc
aaa
ja
dec
adc
cmp
aam
ret
hlt
mov
ret
xor
xchg
test
lods
les
adc
jge
push
add
xlat
loopne
out
and
pop
sbb
stos
insl
dec
xlat
test
mov
not
les
sub
sub
bound
mov
les
xor
fs
xor
and
mov
xchg
xchg
xchg
and
add
dec
or
xor
cld
repz
movsl
cmp
mov
ljmp
xchg
sub
subl
dec
rolb
push
add
push
gs
pop
add
xchg
cwtl
pop
clc
mov
cwtl
pop
cwtl
jge
loop
pop
lcall
mov
pop
pop
lret
lock
push
jl
xor
loopne
push
clc
das
lahf
sub
fmuls
pop
pop
outsb
mov
out
pop
imul
sub
push
xor
sub
aas
push
and
orb
jne
pop
xchg
aas
pop
pop
mov
lret
int
or
or
mov
aam
sahf
cmp
adc
loope
mov
in
in
sub
cwtl
xchg
fnstenv
aas
or
imul
jl
mov
xchg
push
data16
fisubl
push
adc
rcrb
out
jnp
xlat
inc
mov
inc
mov
cmpsl
iret
xor
jl
stc
imul
dec
mov
ss
filds
fsubs
mov
out
sub
pop
orb
dec
jb
mov
push
sub
in
pop
push
aad
mov
mov
sbb
xchg
scas
insb
movsb
mov
add
es
outsb
or
movsl
sarl
push
jo
pushw
js
sub
stos
mov
sbb
cltd
lods
imul
pop
insb
mov
xchg
inc
sar
push
push
jae
mov
or
pop
into
mov
in
jge
pop
test
pminsw
pusha
cld
pop
ss
jo
xlat
or
pop
lcall
cwtl
jge
pop
mov
movsb
mov
vphsubbw
ja
mov
cmp
nop
rcll
or
test
jmp
and
lea
sbb
out
gs
mov
sub
fisttpl
outsb
scas
fwait
sbbb
adc
push
jb
and
inc
push
iret
and
mov
or
lahf
xor
sub
push
in
or
and
lea
das
push
std
sbbl
test
enter
sbb
addr16
test
imul
mov
mov
cmp
call
or
imul
mov
cmp
jbe
imul
dec
jae
cwtl
xchg
shlb
inc
lahf
ss
pop
dec
xor
dec
dec
ds
mov
sar
pop
mov
and
daa
inc
mov
into
jle
test
in
and
into
push
mov
mov
in
je
mov
jo,pt
xor
adc
andb
pop
dec
or
aam
aas
jl
inc
pop
jne
test
stos
mov
dec
pop
data16
inc
ja
mov
cmp
cmp
rol
es
xchg
fdivs
enter
jo
sub
inc
xor
fbstp
rcl
aaa
cmpsl
pop
imul
imull
mov
in
jo
cmpsb
jmp
and
sub
not
xor
dec
xchg
xchg
imul
lock
or
rorl
and
pop
mov
or
cwtl
inc
pop
inc
xchg
je
mov
int3
addr16
rcl
or
pop
js
shlb
js
cmp
jmp
or
clc
mov
and
rcrb
push
jmp
sbb
add
ljmp
lcall
jae
in
das
cld
movsl
loopnew
cmpsb
push
lea
popa
pusha
sbb
frstor
adc
in
bound
and
loopne
subb
pslld
push
mov
sub
mov
adc
xor
or
jg
test
je
pop
xchg
mov
cltd
scas
call
loope
insb
xchg
mov
push
sar
pop
outsb
cld
movsl
shlb
xchg
shll
or
sub
pop
adcb
dec
push
jecxz
loopne
in
lock
add
mov
ds
hlt
cmp
jbe
fs
dec
shrl
jmp
inc
fmull
in
icebp
nop
cmp
loop
loopne
inc
push
push
mov
xlat
sbb
add
aas
add
mov
jle
mov
je
mov
sbb
popf
pop
inc
push
and
jno
or
dec
jp
call
es
xor
adc
rcrl
jbe
push
lea
mov
filds
rol
mov
jge
xor
pop
mov
cld
mov
aad
sub
cmp
push
cld
mov
mov
scas
sub
popa
cmp
fistps
mov
mov
sub
mov
mov
es
pop
sar
imul
jno
fstpl
lret
mov
sub
dec
stc
push
mov
pop
or
add
mov
xchg
adc
pop
jae
inc
xorb
decb
in
jno
or
mov
lret
or
sub
addl
rol
shrl
mov
jmp
jge
dec
outsl
pop
mov
jle
sbb
fdivrl
shlb
pop
sahf
fdivr
or
xchg
scas
mov
adc
xor
jo
inc
inc
inc
loope
aam
aas
mulb
inc
pop
jne
or
jle
subb
adc
jmp
pop
dec
scas
in
pop
mov
mov
mov
sbb
ljmp
ljmp
dec
jne
dec
into
push
mov
adc
test
mov
pop
cwtl
adc
xor
mov
mov
aas
cmp
add
or
testl
xor
xchg
cwtl
pop
clc
mov
cwtl
mov
pminub
repnz
cmc
movsl
inc
pop
xchg
pop
lock
pop
jae
and
adc
in
inc
mov
ss
or
ret
add
inc
xor
inc
mov
fnstcw
xchg
pushf
adc
cmp
mov
repnz
dec
add
cs
call
outsb
and
fs
xor
iret
inc
or
cltd
mov
mov
das
ds
loopne
xchg
or
and
movsb
adc
adc
push
cmpsb
in
int3
dec
xchg
ss
test
outsl
gs
or
fisubrl
mov
add
je
mov
mov
mov
je
seto
bound
sub
pop
xor
mov
icebp
popa
pshufw
xor
ss
xor
dec
dec
icebp
inc
in
orl
push
pop
mov
jmp
out
jmp
jo
popa
inc
je
pushf
into
mov
dec
inc
shll
call
push
jge
aas
stos
movsl
jmp
inc
xor
addb
out
pop
popa
stos
loope
push
sbb
mov
dec
pop
pop
in
and
sub
sub
adc
adc
aam
push
rcrl
and
sbb
ret
cli
add
jno
cmp
sub
incl
or
call
inc
lock
push
jno
push
in
lds
fs
ss
stos
out
or
les
ds
stos
mov
dec
or
jmpw
jmp
jge
aaa
into
outsb
mov
pop
loop
adc
cmp
xchg
es
fidivs
mov
add
jecxz
fwait
cwtl
daa
mov
jo
fmuls
mov
roll
jecxz
cmp
push
fists
push
insb
mov
adc
shrl
pop
pusha
mov
mov
out
sub
ret
jae
mov
push
mov
cli
int3
fisubl
inc
cmc
push
add
icebp
or
mov
xchg
mov
push
shrb
sahf
xor
sub
es
enter
flds
push
in
mov
icebp
outsb
dec
popa
and
push
lds
xchg
adc
shlb
xchg
sbb
push
outsb
inc
mov
in
lea
sahf
mov
aad
adc
int
push
leave
mov
test
pop
lret
out
mov
ss
pop
cmpsb
iret
cmpsb
mov
xchg
das
in
out
loope
lds
push
mov
push
mov
sbb
ja
adc
lods
rcrl
adc
cwtl
arpl
xchg
mov
es
add
ja
mov
mov
pop
dec
xor
dec
dec
add
xchg
pusha
adc
adcl
sub
cmp
sub
bound
jecxz
sar
push
mov
ret
adcl
mov
cs
jle
out
xor
add
sub
enter
pop
sbb
mov
push
cmpsb
mov
dec
xlat
test
mov
negl
push
lret
mov
dec
mov
pop
push
in
mov
aas
push
ds
xor
adcb
into
mov
mov
jo
nop
add
cmpsb
iret
xor
fimull
xchg
add
xor
test
cs
aam
cs
jle
lea
aas
fdivrp
inc
mov
repnz
aam
mov
sub
or
mov
xor
mov
popa
xchg
jg
clc
cli
int
cld
sbb
out
hlt
pop
jle
xor
jg
nop
ret
xor
lock
lds
or
pop
in
pop
pop
int
repnz
or
mov
and
loopne
sub
sarb
sbb
clc
pop
imull
mov
inc
jae
pop
or
inc
xor
daa
inc
sub
jo
xchg
xor
nop
ss
adc
and
pop
orl
sub
int3
sub
mov
cmp
jmp
daa
inc
mov
and
fwait
jno
push
xorb
loopne
out
sub
out
pop
sub
adc
cmp
ss
xor
shlb
and
and
sub
jo
xchg
xchg
xor
scas
notb
inc
adc
ret
mov
hlt
xor
hlt
cmp
mov
push
push
sarb
cmpsb
inc
scas
mov
cmp
div
cmpb
cmp
shrb
add
mov
bnd
pop
out
rcrb
in
sub
sahf
push
incb
flds
stos
mov
xchg
iret
jb
and
pop
dec
loopne
lock
push
test
gs
push
push
sub
mov
pop
lock
addb
xchg
lret
add
cmpsl
mov
mov
sahf
cmp
inc
data16
shl
mov
repnz
shrl
test
ret
jns
pop
imul
stc
pop
js
dec
ret
shlb
xor
xchg
push
je
dec
inc
mov
dec
mov
ja
test
adc
push
xchg
das
call
stos
insl
dec
xlat
test
mov
not
les
into
dec
dec
xor
fimuls
sub
mov
sub
mov
adc
cmp
mov
pop
lcall
jl
xor
cs
xchg
fcompl
mov
xor
add
bound
xchg
adc
movsb
sahf
js
mov
pop
push
rol
testb
aaa
jle
dec
adc
cmp
ret
es
mov
std
pop
lret
push
dec
pslld
dec
push
sub
mov
sub
mov
adc
ds
adcb
dec
testl
sub
lahf
punpckldq
mov
pop
pop
fwait
movsb
jne
xor
pop
pop
ret
out
xor
pop
and
push
adc
push
jmp
data16
cmpsb
call
stos
mov
out
sub
pop
subb
xorl
fs
xchg
clc
int3
push
test
push
jbe
push
in
test
adc
lea
sbb
xchg
scas
insb
movsb
mov
add
es
dec
or
movsl
sarl
push
xor
inc
popa
stos
mov
js
into
push
xchg
inc
mov
ja
and
mov
cltd
push
dec
add
stos
shll
sub
int3
dec
test
push
jbe
push
in
subb
mov
push
cwtl
xchg
ja
mov
mov
sub
pushf
inc
rorl
cld
cli
xchg
push
in
mov
push
in
mov
xchg
dec
xlat
dec
add
sbb
ret
insb
jmp
loope
mov
jne
dec
into
push
mov
adc
or
and
ljmp
inc
push
lds
mov
mov
lcall
sub
into
popa
insl
aam
rcl
aaa
in
cltd
pop
pusha
clc
sub
mov
in
xorb
insl
jl
fisubrs
lcall
pop
cmp
dec
xchg
inc
scas
xor
mov
and
push
rcr
xor
xor
cmp
pop
popa
in
cmp
shll
rcrb
mov
xor
sub
sub
xchg
dec
dec
std
in
sub
adc
hlt
test
lret
xor
adc
or
jb
fldcw
mov
iret
sub
and
call
call
dec
xor
mov
cmpsl
fimull
xchg
int3
xor
js
mov
enter
lock
repnz
cmp
andb
or
sub
jmp
idivl
cmp
fiaddl
push
mov
das
sar
sbbb
jne
aad
xchg
xor
and
negb
in
pop
xchg
dec
sub
sbb
mov
mov
or
xor
cmpsl
mov
push
mov
cld
jecxz
sti
xlat
in
mov
call
mov
sbb
jl
mov
aaa
test
or
sub
shr
cwtl
imul
pop
shll
lret
cmovae
fs
orb
mov
pop
xchg
lock
sahf
jae
pop
sub
movsl
mov
hlt
pop
push
adc
push
jo
xchg
pop
or
push
movsl
aas
add
jle
push
addb
add
jmp
lret
dec
fsubrl
and
mov
mov
bound
dec
lock
add
bound
stc
dec
pop
mov
hlt
out
add
arpl
inc
mov
pop
ss
aas
cmp
mov
call
mov
push
xor
in
mov
cwtl
test
dec
add
jbe
mov
cwtl
dec
jo
xchg
dec
push
icebp
adc
xchg
out
aas
mov
pop
repnz
push
pop
rorb
mov
ss
inc
ret
cltd
aas
adc
icebp
cmp
sti
cmp
les
fcom
test
sub
sbb
decl
loope
sub
stos
enter
xchg
movsl
loope
pusha
or
adc
inc
imul
testl
dec
adc
das
in
mov
enter
data16
push
test
inc
mov
inc
int3
pushf
fdivrs
dec
in
sub
jo
in
movsb
push
mov
adc
icebp
inc
or
cld
into
mov
push
dec
pminsw
popf
pop
arpl
inc
cld
repz
test
xorl
hlt
dec
iret
ds
into
xchg
mov
sub
loopne
sub
popa
adc
add
push
pusha
pusha
insl
mov
inc
mov
outsl
and
cwtl
out
pop
push
shr
lcall
mov
push
xor
mov
pop
sbb
cld
aas
loop
and
bound
addl
cmp
aaa
setns
mov
pop
push
cltd
adc
mov
pop
mov
sub
dec
mov
roll
sub
dec
in
sub
aas
xor
mov
ds
mov
or
es
mov
mov
xchg
rcrl
imul
dec
pushf
dec
adc
sub
xchg
sbb
or
sub
push
push
jmp
test
add
into
cwtl
sbb
xchg
xchg
int3
sbb
jle
lret
aam
dec
or
sub
jne
inc
cmpsb
ja
loop
mov
push
test
test
mov
dec
lcall
sbb
or
and
imul
insl
push
push
shll
add
push
dec
loope
or
int
and
insb
or
cwtl
test
mov
lcall
xchg
les
mov
mov
sub
sub
or
clc
add
mov
mov
inc
push
inc
jo
jp
add
push
add
das
call
jo
divb
xchg
adc
pop
aas
ds
cli
shrb
dec
int
iret
cmp
sub
push
outsb
jecxz
js
add
and
pusha
mov
les
aam
pop
out
jae
sbb
xchg
sti
es
fdivrs
aas
push
outsb
sbb
fs
jmp
mov
jo
test
xchg
sbbl
adc
loop
or
dec
outsl
repnz
insb
insb
xchg
sub
push
and
mov
push
pop
int3
add
push
nop
sub
out
out
fcoms
mov
fs
ret
lods
mov
dec
dec
xchg
pop
sbb
cmp
ss
popa
push
mov
pop
dec
pop
mov
sbbb
add
and
imulb
dec
or
add
mov
les
lock
add
into
pop
outsb
add
dec
cmpsb
sub
mov
add
xorl
ficoml
jp
fld
jnp
sub
das
in
hlt
pop
dec
data16
jl
icebp
inc
rorb
push
sbb
sbbl
in
cmc
and
fsub
movsl
add
mov
test
inc
jb
rcrb
sub
push
out
jge
pusha
dec
xor
mov
xchg
icebp
and
aam
push
les
pop
ljmp
and
clc
test
cld
xchg
add
push
xor
loop
push
out
dec
adc
mov
jge
aaa
outsb
mov
pop
lock
jle
ljmp
in
xor
inc
mov
stos
std
push
dec
mov
push
xor
jmp
inc
fmull
repnz
cli
nop
mov
adc
mov
jo
hlt
js
loopne
sbb
pop
aas
mov
ss
inc
dec
adc
cmp
aam
ret
sub
ret
xor
pop
jl
and
fdiv
and
jbe
les
jp
in
add
xorb
fs
in
push
cmp
xor
add
adcl
js
mov
xchg
mov
push
je
dec
jbe
add
mov
cmpsl
or
lcall
add
les
push
shrb
push
jl
mov
mov
ss
data16
add
fdivl
cwtl
or
push
cli
inc
outsl
in
ficompl
cmp
arpl
mov
cmpsl
add
faddl
dec
xchg
pop
test
test
stc
jo
test
mov
mov
pop
jno
dec
jge
and
adc
inc
test
fisubl
shr
test
insb
sub
push
inc
jmp
inc
xor
jb
mov
xchg
test
aaa
add
lcall
dec
pop
rcrb
sub
scas
ror
jg
and
cltd
mov
mov
or
aad
mov
dec
jecxz
lcall
sub
sub
adc
pop
cmpsb
scas
shl
je
dec
sbb
or
mov
fnstenv
fcoms
xor
test
loop
inc
dec
adc
cmp
aam
ret
shrb
ret
xor
sbb
test
add
dec
dec
or
lods
ja
test
inc
xchg
jne
jae
mov
mov
daa
push
sbb
mov
insl
adc
xchg
cmpsl
jno
je
lret
subb
adc
sub
sbb
mov
pop
sbb
inc
rcrb
jno
push
dec
or
mov
mov
pop
dec
xor
dec
push
mov
nop
mov
repnz
or
mov
popa
stos
mov
adc
into
pop
cwtl
xchg
cwtl
mov
ja
and
mov
aas
ret
inc
les
and
in
imul
inc
jl
out
imul
popf
je
pop
jp
xor
push
mov
pop
or
mov
popa
adc
ljmp
fnstsw
loop
fs
stos
movsl
imul
arpl
arpl
test
dec
mov
mov
pop
dec
xor
jl
jmp
cs
dec
jle
fcompl
dec
adc
push
rorl
insb
jb
sbb
bound
xchg
adc
and
je
push
dec
jecxz
nop
shl
dec
addb
and
cltd
pop
dec
xor
dec
dec
ds
cmpsl
sbb
xchg
test
loop
adcl
sub
in
sub
in
mov
cmp
mov
cmpsb
cmc
cmp
ja
add
sub
pop
mov
les
pop
lret
dec
adc
push
nop
cmpsl
push
xchg
in
add
cmp
ret
mov
xchg
dec
sub
stc
sub
call
adc
rcll
in
sub
test
mov
cwtl
shl
pushf
pop
ret
add
add
popf
cmpsb
jecxz
dec
mov
pop
fs
adc
out
in
loop
sub
mov
hlt
pop
and
sti
mov
fidivl
jmpw
std
daa
push
xor
pop
mov
cmpsb
mov
sub
or
cwtl
in
outsl
scas
loopne
ds
shlb
xlat
js
jmp
inc
fldl
loope
or
dec
sbb
adc
dec
ret
in
mov
ja
mov
jo
lret
addr16
out
js
push
inc
jo
cli
dec
push
adc
sub
cmovg
cmp
fimuls
rol
push
in
adc
lea
add
insl
pop
or
fmull
adc
cmp
pop
je
push
in
add
jae
mov
orl
rcr
movsl
imul
js
mov
mov
jo
mov
mov
in
mov
ret
sub
sub
cld
pop
sbb
pop
das
es
mov
mov
xor
or
xchg
cs
or
push
mov
and
cmc
push
push
mov
fldenv
or
xor
adc
mov
inc
adc
test
out
and
pop
sbb
jmp
dec
cmp
and
into
push
mov
arpl
in
mov
aas
inc
ds
and
lds
sysexit
scas
ja
mov
mov
sub
aam
rorl
mov
or
mov
mov
push
inc
jo
pop
dec
mov
cwtl
xchg
je
outsl
ja
and
cmpsl
stos
xor
pop
jb
dec
ret
dec
stos
popa
adc
or
inc
dec
in
dec
dec
in
mov
test
mov
test
jmp
inc
fmull
repnz
fsub
jmp
int3
cli
mov
outsb
adc
mov
hlt
and
hlt
sub
cwtl
mov
push
hlt
pop
aas
call
adc
inc
dec
adc
nop
ss
adc
and
pop
mov
mov
cmp
stos
cmpsl
sub
lahf
fdivs
sbb
xchg
scas
insb
movsb
mov
add
es
or
stos
loope
fsubl
dec
dec
ljmp
add
pop
sbb
loop
push
dec
jecxz
rcl
loope
addb
mov
xor
dec
dec
xor
cmp
mov
cmp
and
rol
ljmp
das
call
cmp
daa
adc
test
shrb
dec
mov
jmp
int
pushf
xor
add
repz
mov
xor
bound
mov
lods
cld
mull
mov
adcl
mov
cs
jle
out
xor
popa
stos
mov
sub
inc
in
sub
dec
mov
rcrl
jl
shl
mov
dec
xlat
test
mov
out
dec
pop
les
add
rcr
pop
je
in
pop
jl
shlb
add
fsubl
push
jecxz
add
xchg
sahf
sar
push
xchg
pop
cli
lahf
sbb
mov
hlt
pop
sahf
popl
mov
lcall
xchg
das
call
inc
lock
push
jno
push
call
loope
insb
xchg
mov
pusha
mov
pop
jo
or
add
mov
fdivrs
pop
fs
adc
jmp
cmp
fnstsw
or
test
mov
jge
cmpsb
pushaw
jno
pushw
cltd
adc
mov
int
rcll
shlb
or
aas
ret
inc
les
fsubrs
in
imul
mov
jp
pushf
mov
and
jo
add
aam
xchg
mov
fcmovbe
std
pop
dec
add
dec
inc
jle
fwait
cmpb
pop
fadd
mov
les
inc
jo
mov
jae
cwtl
xchg
dec
mov
ja
and
mov
stc
cs
jb
inc
adc
push
das
jnp
sub
mov
pop
lret
data16
ss
inc
mov
and
fwait
jno
pusha
lcall
push
aaa
into
outsb
mov
or
push
in
cld
aas
dec
adc
aas
inc
ds
ret
xor
inc
and
lds
nop
test
aam
aas
mov
fsubrl
xchg
or
ss
sub
aas
add
nop
shll
stos
mov
dec
or
jmpw
jmp
in
and
into
push
mov
sbb
in
aam
push
cmp
bound
rol
xor
mov
add
ja
mov
mov
sub
lods
inc
rorl
shll
ja
mov
pop
rcl
or
mov
add
xchg
lds
pop
out
jo
fmuls
mov
mov
les
push
cld
stos
xchg
ficompl
movsl
rorb
test
lret
clc
incl
iret
daa
inc
sub
aad
and
fildl
jne
cs
or
imulb
xchg
adc
jbe
repnz
mov
fcom
inc
stos
mov
out
and
pop
sbb
or
jmp
outsb
cmp
and
into
push
mov
adc
fidivs
jbe
xor
psrld
inc
or
ret
insb
jmp
mov
mov
jne
dec
into
outsl
pop
mov
jle
pop
popa
data16
fucompp
imul
xchg
jmp
daa
inc
mov
and
fwait
jno
push
inc
mov
cmpsb
mov
std
fs
out
sub
dec
pslld
dec
pop
sub
mov
sub
mov
adc
cmp
push
outsb
pop
mov
sbb
jp
cltd
mov
ds
sub
sar
push
cmpsb
jae
mov
or
pop
cli
mov
inc
cwtl
jge
push
mov
insl
mov
fwait
adcb
mov
and
pop
push
mov
push
mov
pop
ljmp
movsl
shlb
and
mov
xchg
das
in
repnz
loopne
pop
jbe
ror
push
xchg
pop
cli
lahf
int3
cmpsl
jle
dec
dec
mov
hlt
pop
dec
jo
rorl
fistpl
xchg
push
mov
lods
push
jno
push
pop
jp
call
loope
insb
xchg
pop
lcall
mov
or
add
mov
loopne
pop
fs
adc
leave
in
loop
cs
jle
or
sub
mov
outsl
mov
push
jno
pop
jp
cltd
adc
mov
int
shll
pop
xchg
mov
js
aas
ret
inc
les
fmul
outsl
movsb
pop
mov
in
pop
scas
aam
dec
and
dec
dec
sub
xor
les
mov
mov
mov
daa
push
push
mov
std
fmul
out
sub
dec
pslld
pop
mov
sub
mov
adc
cmp
jl
ljmp
cltd
shll
sarb
imul
jle,pn
fcompl
adc
into
push
jg
outsl
xlat
jb
push
push
mov
inc
mov
into
insb
stos
mov
cld
dec
or
add
jg
pop
loope
xchg
pop
arpl
dec
les
add
dec
inc
push
sub
in
pop
cld
add
cmpsl
mov
sbb
ljmp
ljmp
mov
fs
lcall
jl
sbb
xorl
pop
je
in
repnz
jmp
pop
in
push
jo
out
stos
stc
clc
cmc
scas
das
ror
in
cmpsl
test
mov
jle
call
rorb
repnz
push
ljmp
cwtl
shrl
mov
mov
xor
ficoml
bound
stos
shll
sub
lret
xchg
cmp
mov
add
es
dec
xlat
test
mov
not
les
sub
sub
popf
je
incl
add
pop
mov
ljmp
test
xlat
and
pop
dec
or
ret
adcl
stc
cs
cmpsb
js
fcompl
pushf
adc
inc
mov
adc
lods
pop
xchg
adc
xor
int
inc
test
daa
jle
test
call
mov
cli
pop
cltd
adc
inc
aam
in
pop
in
sub
pop
adc
lods
push
ret
add
ja
mov
mov
mov
push
rolb
xchg
dec
shrb
mov
ja
mov
jbe
push
inc
jo
sub
jae
cwtl
xchg
sub
cmovg
hlt
ss
adc
pop
rcrl
ds
mov
int3
arpl
popf
je
aas
fidivl
dec
jecxz
popl
inc
inc
lahf
hlt
ja
pop
dec
xor
dec
dec
ds
cmpsl
sbb
xchg
hlt
adc
sub
xchg
out
push
bound
push
push
dec
ret
adcl
mov
cs
jle
out
xor
popa
stos
mov
sub
adc
sub
sbb
or
pop
sbb
add
shl
mov
dec
xlat
test
mov
not
les
sub
sub
and
test
mov
pop
mov
ljmp
mov
mov
cs
xchg
and
add
dec
or
xor
add
dec
sbb
mov
cld
out
mov
jae
and
jo
aam
nop
mov
cmpsl
sbb
push
jno
inc
stos
pusha
shll
fisubl
stos
mov
jb
xchg
mov
cmp
dec
jo
add
enter
mov
and
fisttps
sbb
cld
sub
es
xchg
mov
aad
outsb
sbb
mov
inc
ret
repnz
das
cmp
aam
into
jae
xchg
pushf
mov
jl
adc
and
and
call
push
fwait
push
mov
insl
sbb
out
pushf
js
or
mov
sbb
popa
jo
push
jb
shr
push
lcall
inc
add
scas
mov
push
popa
pusha
push
or
jo
jo
dec
xor
subl
or
add
mov
cld
repz
je
insb
pushf
test
repz
sub
add
mov
ret
sub
inc
sar
push
lcall
or
lods
arpl
pushw
ret
orb
mov
std
pop
pop
int
repnz
mov
mov
inc
push
cmp
mov
popf
pop
arpl
cmp
lcall
sub
pop
xor
fistps
pusha
loope
mov
mov
jno
pop
mov
mov
pushf
test
out
mov
pop
stos
fdivr
push
dec
pop
dec
sub
add
subb
arpl
hlt
mov
or
pop
insb
stos
jno
or
add
shll
cs
pop
sub
js
mov
sbb
ljmp
ljmp
dec
jne
dec
into
push
mov
cmp
in
pushf
aas
pop
adc
aas
push
ds
ret
xor
andb
and
pop
dec
sysexit
mov
mov
mov
mov
push
hlt
inc
adc
fimull
or
mov
mov
push
inc
jo
sbb
jae
cwtl
xchg
push
mov
ja
and
mov
cltd
push
dec
add
stos
shll
sub
int3
push
ds
push
jbe
push
in
lock
bound
push
ja
mov
mov
sub
mov
mov
lea
push
in
andb
mov
ss
add
inc
xor
jno
and
movsl
jg
sub
xchg
pop
pop
cmp
pop
mov
pop
mov
jns
xchg
pop
hlt
iret
sub
pop
mov
xor
cltd
sub
lock
ret
jo
call
jo
das
daa
cmc
in
jecxz
and
push
notl
push
mov
mov
jg
mov
es
sbb
jmp
jo
outsl
inc
jmp
mov
cli
mov
and
mov
mov
xor
xchg
add
inc
jp
add
lahf
inc
lret
mov
cmpsb
call
addb
int
and
shrb
dec
hlt
xchg
andl
fs
fiaddl
movsb
movsb
xchg
icebp
aaa
js
stos
movsb
inc
sub
cmc
into
stc
push
pop
jae
pushf
lahf
sub
xor
divb
inc
pushf
jo
lahf
sahf
mov
andb
hlt
fdivl
jle
fs
lods
popa
inc
pop
dec
je
xchg
mov
repnz
test
ljmp
xor
div
push
fldenv
hlt
test
clc
call
lahf
mov
mov
jb
int
hlt
xchg
jb
jle
add
adc
pop
ret
mov
xchg
adcl
aam
mov
call
jge
insb
lret
cmp
xchg
push
out
push
shlb
es
push
cmpsl
push
xor
jb
inc
fisubs
jp
xchg
cltd
ja
push
cmpsl
in
cld
and
stos
sub
sbb
inc
pop
dec
xor
popa
cli
mov
subb
cmp
hlt
rclb
aas
inc
push
fs
loope
fstpl
sbb
cmp
sub
mov
nop
xor
cmpsb
call
xor
mov
mov
jbe
xor
mov
test
loop
in
dec
icebp
or
lcall
sub
and
jp
scas
dec
push
pop
mov
push
push
repnz
addl
sub
lea
sbb
mov
call
ljmp
imul
les
cmpsl
pop
jae
ljmp
cmp
dec
lock
loope
insb
popf
add
xchg
sbb
and
les
scas
loopne
push
call
in
pop
repnz
mov
add
jmp
and
imul
xchg
addb
ljmp
ja
push
sub
or
inc
mov
or
adc
xchg
add
sub
pop
in
sub
sarl
push
pop
aam
dec
jbe
xor
xor
sub
fsubrs
shll
pop
mov
int3
pop
insb
xlat
adc
sub
mov
lahf
inc
mov
mov
es
or
repnz
sub
mov
in
sbbl
cmp
les
inc
dec
mov
mov
dec
and
pop
pop
out
adc
push
incl
sub
aam
mov
pusha
sbb
lds
mov
cmp
pop
xor
es
push
adc
idivb
or
sub
jp
flds
fsubrl
mov
es
insb
mov
pop
lcall
pop
mov
enter
ja
test
ds
test
mov
cmp
pop
lods
rorl
adcb
push
jl
hlt
and
lea
sub
push
sbb
pushf
cld
pop
ret
pop
fimull
xor
cltd
adc
movsb
mov
lods
fdivrs
cmp
push
cmc
scas
jl
mov
ljmp
fs
jge
cmc
xor
int3
xor
jl
les
test
cmp
mov
sbb
dec
dec
repnz
pcmpeqd
mov
mov
call
xchg
mov
fs
in
lock
jp
cmp
pop
mov
adc
mov
sub
mov
adc
mov
rcrl
cmp
mov
inc
arpl
jp
clc
movsl
rorb
loopne
int3
add
sbb
pop
lret
sbb
cmp
lods
cwtl
fwait
add
cmp
int3
dec
xor
lret
arpl
pop
ljmp
sar
pop
stos
fdivs
inc
jp
cltd
adc
xor
insl
xchg
je
aas
cmp
dec
shll
scas
sub
mov
adc
ljmp
adc
cmp
adc
andb
int
int3
inc
jne
das
lods
fistpl
push
adc
inc
divb
ja
pop
adc
in
or
mov
push
loopne
sbb
xor
fisubl
into
sub
jl
push
data16
fsubl
jl
sub
xchg
pop
je
cltd
sbb
insl
cmp
sbb
sbb
push
jl
pushw
inc
mov
hlt
cld
pop
out
xchg
mov
jp
cltd
mov
ficompl
cwtl
rcl
or
je
inc
mov
add
movsl
aas
sbb
add
popf
je
mov
jo
and
xor
mov
lret
push
fdivl
aas
mov
in
fs
xor
in
add
in
stos
es
inc
mov
pop
push
shr
jne
mov
call
xchg
mov
lock
mov
mov
xor
mov
sub
mov
adc
mov
rcrl
cmp
mov
inc
arpl
fwait
aam
pop
jp
mov
add
pushf
cwtl
add
pop
movsl
add
sub
mov
mov
xchg
cmpb
in
pop
aam
jo
mov
fs
les
dec
rclb
movsb
in
pushf
aas
push
adc
aas
stos
ds
test
jle
into
xor
lcall
mov
ljmp
pop
popa
stos
mov
cmpsl
dec
pop
outsb
pop
mov
push
sarb
pushf
cld
add
sbb
jb
adc
jo
shlb
movsb
mov
jle
push
shl
in
cwtl
or
pop
xchg
mov
call
add
cmpsl
mov
mov
mov
mov
dec
insb
mov
je
or
push
in
adc
xor
sbb
in
movsl
pop
iret
mov
and
add
mov
jle
fs
movsb
adc
push
push
jbe
push
in
shlb
xor
jno
cmp
lcall
push
sub
rcrb
adcl
jae
aam
xor
cltd
jne
xor
lcall
pop
fistpll
xor
iret
cmp
movsb
adc
mov
imul
fcomps
fs
int3
pop
inc
xlat
adc
sub
mov
mov
jns
mov
pop
in
sub
xchg
mov
adc
je
es
pop
push
or
fdivr
pop
adc
cld
pop
push
or
data16
adc
je
mov
rcrl
roll
mov
hlt
lods
dec
jbe
inc
jne
xchg
mov
ja
mov
adc
ds
ret
xor
adcb
inc
outsb
mov
bound
pop
mov
ljmp
mov
arpl
popf
pop
arpl
mov
mov
mov
mov
push
pop
mov
pushf
dec
or
push
cwtl
rcrl
xchg
mov
dec
hlt
mov
and
pop
jbe
push
in
mov
out
cli
mov
push
pop
cmc
scas
sub
mov
adc
repnz
cmc
fisubrs
xchg
shr
ljmp
adc
xchg
adc
daa
mov
pop
aas
loop
cmp
cli
ds
test
jb
into
xor
mov
cmp
inc
pop
jl
in
pop
inc
add
hlt
hlt
dec
call
ljmp
aas
ret
aas
fidivrl
test
push
into
xor
jg
adc
sub
pop
adc
ds
cmpsl
and
mov
push
clc
and
push
sub
mov
in
rorb
cmpsl
cmp
and
pop
aas
mov
push
jbe
jns
mov
or
sbb
cltd
nop
or
ss
pop
movsl
rorb
mov
imul
pushw
xchg
mov
and
pop
cmp
cli
pop
xchg
mov
jp
cltd
mov
push
enter
sbbb
je
sti
adcb
movb
int
pop
jbe
lods
in
and
xchg
loope
or
leave
sar
cmp
pop
or
ret
shl
scas
adc
push
lahf
leave
jle
mov
jp
loop
and
repz
jnp
inc
hlt
mov
mov
cld
inc
aaa
mov
xchg
inc
pop
cmpsl
mov
dec
dec
sahf
dec
mov
rcll
sbb
into
movsl
pop
aas
test
imul
je
xor
pop
hlt
xchg
test
pop
ds
test
sbb
add
cmc
hlt
inc
fstpt
sub
fs
je
movsl
adc
pop
pop
leave
mov
push
leave
mov
inc
mov
inc
mov
pop
fdivl
add
xchg
xchg
test
or
inc
cwtl
aad
sub
add
out
inc
lods
xchg
sbb
push
add
arpl
inc
out
sub
and
sarb
insb
test
imul
inc
rcll
cmp
in
fnsave
fmuls
stc
mov
mov
adc
rcll
add
rclb
push
repnz
andnps
push
jb
icebp
inc
movl
add
push
mov
cli
mov
dec
repz
mov
mov
aas
jb
les
cmp
inc
data16
lret
cwtl
dec
scas
imul
xorl
aas
mov
adcb
lcall
jp
mov
add
add
adc
nop
lcall
out
mov
movsb
mov
ds
push
rclb
test
aad
lea
cmp
jae
dec
and
in
inc
pop
or
sahf
mull
rcrb
mov
ljmp
pushf
mov
dec
and
aas
add
mov
pop
xor
mov
lahf
inc
xorl
sbb
adc
cmpsl
xchg
cmp
cmpl
fs
cmp
cmp
cltd
cmp
pop
adc
jecxz
in
or
movsb
aam
sar
arpl
inc
es
pop
sbb
test
pop
jmp
sarl
sti
sub
cmp
jb
xorl
es
jnp
cwtl
rcll
es
cmc
sub
add
in
jl
aad
jmp
adc
dec
mov
out
ret
shll
lret
gs
dec
mov
ds
mov
pop
dec
adc
push
mov
lahf
push
jg
imul
inc
data16
mov
data16
mov
pop
cwtl
jge
mov
call
add
sbb
lahf
cld
push
jl
sti
push
push
xchg
fmulp
ds
test
outsl
movsb
fwait
and
lods
push
mov
sub
push
adc
mov
rcrl
test
xchg
mov
jl
sahf
test
jne
jne
sbb
mov
cmp
dec
jbe
mov
inc
fiadds
and
jge
les
xor
hlt
add
mov
inc
push
ror
dec
jbe
fcomp
gs
loopne
cmp
and
fsubs
loopne
pop
sbb
sbb
mov
fsub
or
pop
push
fmul
lea
in
sub
cltd
inc
repnz
sub
pop
xor
rcrl
lret
jbe
incb
push
xchg
outsb
rorb
lock
fidivl
call
fistpl
js
gs
js
dec
cltd
iret
ret
fwait
dec
cmpsb
push
mov
sbb
or
out
clc
sub
fsubrl
inc
adc
cld
mov
xchg
mov
cmp
in
decl
add
mov
jae
cld
rcr
and
mov
jg
in
xchg
aas
ljmp
add
mov
xchg
jl
mov
inc
adc
adc
nop
xchg
ret
sti
sti
pop
inc
push
mov
jo
cltd
out
call
int3
pop
pop
andb
inc
ja
enter
sub
je
pop
lret
pushf
in
xchg
mov
add
sub
ficomps
and
loop
xlat
xchg
fistps
das
popa
loop
adc
mov
sub
addr16
cld
pop
fwait
dec
push
sbbb
in
mov
je
pop
push
mov
popf
mov
push
xor
notl
sbb
cmp
cmp
sub
mov
dec
test
aaa
sbb
into
inc
fisttps
mov
push
mov
add
inc
movsl
jg
mov
leave
jne
push
mov
fnstcw
lods
push
xor
push
and
push
push
imul
pop
insl
inc
xchg
clc
loope
cli
lods
dec
mov
sahf
mov
jmp
repnz
hlt
sub
add
dec
or
rcrl
mov
jae
lahf
mov
push
xchg
cmp
mov
adc
bound
xchg
movsl
movd
mov
and
fs
subb
imul
pop
fadds
inc
mov
mov
mov
xchg
adc
hlt
push
adc
mov
xor
pop
ljmp
lret
cs
jle
cmp
push
xchg
pop
pop
jne
les
mov
push
sub
push
xchg
dec
lods
fstpt
dec
add
les
jge
add
mov
cwtl
mov
xor
pushf
sub
mov
notl
sbb
mov
add
push
xor
mov
js
push
inc
sub
fisubrl
pop
adc
jne
sub
aas
xor
insl
ds
mov
ds
or
das
pop
pushf
jne
and
shrl
mov
jo
mov
enter
loope
insb
repnz
sub
adc
cmp
insb
daa
adc
out
lds
in
pop
push
and
lods
nop
jle
les
jg
testb
leave
mov
aas
loop
mov
jge
test
adc
mov
rcrl
mov
je
push
xor
mov
fisttpl
sub
adc
sbb
std
fdivs
movsl
ds
mov
xchg
xchg
adc
data16
jns
dec
pop
mov
xor
mov
repz
out
or
cwtl
mov
ljmp
mov
aam
fwait
imul
mov
xor
decl
mov
fwait
pop
mov
jae
xor
jns
inc
fcomps
dec
jbe
xchg
bound
xor
lock
mov
lahf
mov
jg
testb
leave
fs
stos
adc
fimull
jb
faddl
jns
dec
mov
push
aam
pusha
popa
stos
mov
mov
cwtl
and
mov
enter
cld
mov
sarl
jmp
pop
xor
push
add
je
int3
popf
push
outsb
pop
dec
fdivr
imul
je
pop
movsl
inc
jbe
push
inc
jo
dec
mov
xor
call
cmp
dec
in
mov
xchg
lret
or
dec
sbb
cmpsb
popf
jl
pop
adc
xchg
mov
pop
popa
loop
pop
cld
repz
mov
mov
pop
cmp
roll
sub
repnz
push
daa
pop
mov
mov
imul
adc
mov
int
shrl
push
adcb
pop
push
xchg
hlt
push
push
xchg
push
push
jo
push
adc
push
mov
cs
jmp
in
xor
pop
sbb
mov
std
or
mov
lea
or
mov
adc
or
clc
jge
jno
and
sbb
lds
or
push
xchg
mov
shlb
pop
sbb
or
sub
ficompl
mov
fmuls
xor
mov
adc
mov
mov
sbb
cwtl
xchg
aad
jne
xor
pop
fidivrl
pop
jo
sub
sti
out
popf
inc
sar
sub
imul
repnz
jae
mov
bswap
and
xor
leave
mov
call
inc
call
stos
mov
call
cmp
sub
dec
pslld
je
adc
ja
cs
aad
sarb
cltd
adc
mov
lcall
xor
mov
popl
ror
push
push
into
mov
add
and
movsb
stos
pop
dec
es
adc
out
and
xchg
das
push
jmp
ljmp
sub
or
in
jge
lods
pop
ret
xor
out
stc
je
icebp
sbb
jp
sub
adc
adc
je
pop
sub
cmp
push
cltd
bound
add
aas
mov
sub
mov
mov
cmpsb
in
insb
push
sub
in
movl
mov
jge
cmp
int
cmp
shrb
aad
aad
xorl
xor
or
dec
push
leave
arpl
mov
mov
mov
dec
adc
addl
daa
inc
sub
aad
and
fistl
sub
decl
push
jnp
xlat
push
mov
stos
mov
aas
jge
insl
dec
lcall
cltd
adc
cmc
call
add
mov
repnz
jo
insb
hlt
stos
dec
subps
in
jmp
int
dec
pop
push
les
xchg
mov
fcmovb
xchg
pop
dec
in
adc
insl
push
add
cmc
inc
pop
sbb
sahf
xchg
cmc
cld
pop
jp
decl
cli
es
pop
ja
pop
lods
dec
cmp
xor
loopne
lods
arpl
push
cmp
pop
pop
adc
aaa
jbe
cmp
std
push
dec
cmc
lcall
inc
inc
fwait
jno
xor
dec
add
mov
cld
mov
cmp
sub
sbb
jge
hlt
cmp
jne
cli
sbb
add
adc
repnz
xchg
cmp
or
cmp
pushf
push
pop
pop
data16
jo
or
dec
insb
ret
subb
movsb
pop
test
popf
out
jp
subb
fdivrs
mov
or
mov
xchg
mov
cmpl
fdivp
sub
push
inc
pop
jnp
movsb
mov
or
mov
xor
mov
adc
sub
pop
rorl
loope
mov
mov
push
ja
mov
test
popf
add
dec
xor
jne
xor
or
push
lock
jp
or
mov
cmp
sub
sbb
ss
add
mov
inc
f2xm1
dec
push
cmc
push
mov
jnp
repz
mov
sbb
cwtl
xchg
hlt
das
test
pusha
or
dec
adc
inc
cmp
xor
mov
sbb
jns
adc
xchg
ret
scas
in
lret
cmp
test
ucomiss
push
loopne
xchg
sbb
shlb
push
in
rorl
cwtl
jnp
push
cmpsl
es
call
stos
mov
outsb
mov
mov
ss
sub
jge
lods
pop
ret
xor
divb
sbb
jp
sub
xchg
arpl
popl
mov
jno
adc
shr
pop
jl
mov
mov
add
and
aam
push
dec
jecxz
pusha
shl
dec
addb
push
ficompl
or
add
int
cmp
mov
xor
xchg
sbb
aam
test
in
cmp
cmp
xchg
lahf
xor
cbtw
jp
cltd
outsb
enter
repz
idiv
pop
outsl
dec
cmovp
xchg
lds
cltd
lods
imul
push
mov
fdivr
int
fcompl
pop
hlt
push
pop
test
push
sub
mov
lock
je
out
mov
push
adc
pop
xor
in
les
mov
daa
jg
enter
dec
rcr
ret
bound
in
push
jo
dec
popa
or
push
outsl
jae
cmpsl
mov
ret
jge
lea
push
add
sbb
push
enter
pop
dec
pushf
aas
jnp
push
jmp
aaa
sahf
fmull
dec
lahf
fmulp
mov
sbb
insb
negl
ret
subb
movsb
add
mov
ret
repnz
cli
int
pushf
sbb
pop
hlt
push
push
test
pop
aas
push
lock
xor
cmpb
sbbl
jne
sti
test
mov
in
mov
xchg
call
ffree
dec
lea
pusha
sbb
frstor
adc
in
mov
ss
jge
or
ret
xor
int
je
icebp
sbb
jp
sub
and
mov
je
pop
sbb
ljmp
pop
ljmp
inc
cmpsl
add
in
and
test
inc
mov
daa
push
xor
shll
cmp
fcomi
sbbl
adc
and
in
sub
xchg
in
mov
std
dec
mov
pushf
sbb
mull
in
dec
sub
movsl
dec
mov
jns
aas
pop
aad
aam
inc
insb
jo
xor
or
loope
dec
push
inc
jbe
sbb
mov
movsb
mov
ljmp
xchg
dec
aam
sub
lahf
loopne
rorl
iret
int
les
outsb
in
push
xchg
jns
movsl
mov
in
arpl
inc
fs
pop
lds
lea
fstpt
aaa
testb
adc
mov
cmp
add
cli
or
lret
pop
xchg
scas
cwtl
shll
xchg
repnz
rorb
mov
xor
das
lea
lods
pop
fcompl
xchg
cmp
lods
add
xchg
lret
pop
xor
imul
push
xchg
adc
bound
sub
pop
ljmp
test
movsl
inc
mov
pusha
xchg
inc
pop
mull
nop
add
inc
shll
js
les
or
dec
mov
inc
cs
stos
aas
int3
mov
pop
push
daa
jg
lods
jle
clc
sbb
mov
and
ror
fstps
jp
xchg
inc
aam
mov
sbb
mov
jno
push
lea
or
adc
or
sub
cmp
push
bound
sub
out
sbb
std
dec
xchg
pop
adc
sub
pop
jno
push
xor
mov
xlat
cltd
adc
inc
test
js
pushf
dec
xor
jle
sub
sub
test
pop
cmpsb
xchg
stos
sub
xchg
popa
mov
mov
and
insb
repnz
mov
mov
hlt
movsb
push
add
push
ja
mov
jno
xchg
lret
es
fs
ljmp
insb
adc
xor
arpl
loope
xchg
jl
insw
push
pop
jae
and
mov
sub
fbld
mov
mov
mov
pop
sub
les
push
test
dec
cld
pop
dec
lea
xor
fists
mov
push
push
sarb
xor
push
sub
dec
aam
lock
inc
jbe
adc
mov
adc
push
pop
sbb
mov
xchg
push
in
cmpsl
sub
xor
aam
popl
pop
and
adc
xor
in
imul
mov
sbb
ljmp
and
pop
push
nop
stos
je
aam
aam
sub
sbb
mov
gs
into
xchg
cmpl
pushf
or
pop
sbb
addl
cmp
in
fbstp
sbb
cmp
mov
sar
cmp
sub
in
add
sub
bound
cmp
dec
mov
push
add
cmp
shlb
aas
pop
xchg
sbb
sub
js
adc
cs
lret
sbb
xchg
cmp
insl
xchg
mov
and
sbb
je
fcompl
pop
aas
sbb
out
ret
mov
pop
or
lods
push
mov
js
push
test
and
in
pushf
mov
repnz
push
out
xor
shl
cltd
mov
out
stc
dec
pop
sub
stc
test
pop
adc
dec
mov
jb
xchg
sahf
push
xchg
mov
js
outsl
sub
pop
es
scas
xchg
or
icebp
xor
cmpsl
sbbb
pop
mov
dec
sbb
les
lds
bound
and
pop
fadds
add
jp
test
out
xchg
and
mov
iret
icebp
inc
xor
mov
push
fdivl
pop
mov
outsb
dec
pushf
cli
fs
jg
arpl
adc
xor
xchg
out
dec
fcomps
sahf
test
cld
jbe
loope
sub
rolb
sti
movsl
add
mov
test
pop
jb
sarb
out
push
push
in
lret
rcr
int
inc
inc
adc
rolb
sbb
mov
aaa
and
sub
dec
adc
sbb
dec
jmp
rsm
stc
xchg
add
adc
sti
adc
test
inc
sbb
stos
jle
push
aam
inc
mov
jo
sub
dec
and
imul
sub
pop
cwtl
sbb
fwait
push
js
inc
sub
cmpsb
cmp
xor
in
adc
fs
jp
xchg
movsl
movsl
ja
adc
div
add
icebp
inc
and
and
xchg
mov
in
dec
test
orl
pop
push
cld
inc
and
test
xchg
pop
into
faddl
jnp
pushf
ret
cmc
and
cwtl
xchg
or
push
js
mov
cltd
jl
es
clc
fadd
pop
push
orl
faddl
or
aaa
jecxz
mov
cmp
cmpsb
adc
pushf
mov
rol
test
xchg
pushf
fcmovnbe
cmp
jl
jp
js
pop
sbbl
fstpl
divb
fwait
test
movsb
cltd
push
sbb
mov
add
out
and
test
cltd
ljmp
cli
jecxz
mov
dec
cmc
xchg
dec
dec
dec
xchg
mov
rcr
jle
jo
sbb
pop
jbe
lock
mov
jl
mov
mov
popf
mov
fidivl
xchg
jp
sub
in
sub
repz
fcmove
xlat
enter
icebp
and
shl
mov
or
pusha
xor
test
xlat
aam
clc
mov
xchg
mov
das
bound
xor
push
dec
std
cli
addr16
adc
cld
out
aam
pop
push
fdivr
push
dec
into
and
pop
push
pop
ds
aas
imul
sub
xchg
ljmp
jp
xchg
cwtl
sar
mov
sub
jg
ljmp
sbb
add
xchg
test
sbb
xchg
paddw
jg
xor
iret
xchg
and
mov
add
cmp
stos
fdivr
pop
lcall
jp
lahf
cmp
jne
cmp
mov
dec
xlat
xchg
loopne
sbb
movsl
adc
lds
cmpsb
lods
mov
or
inc
mov
or
nop
xchg
push
into
jmp
push
ret
cmp
mov
sub
pop
repz
mov
ss
cmp
mov
mov
int3
lret
lcall
cmc
pusha
shrb
call
stos
mov
addr16
loope
aam
push
iret
in
movsb
bound
mov
ret
cmc
xor
jae
xlat
sbb
mulb
pop
rolb
mov
arpl
int
jb
sbb
aam
pusha
cltd
cwtl
in
lock
call
or
push
in
int3
and
test
jno
jge
add
sub
push
in
push
xchg
lods
jmp
rol
mov
mov
dec
pop
shl
push
clc
idivl
xchg
rcrb
test
mov
loope
sub
dec
sbb
mov
and
insb
fcomp
mov
les
call
inc
pop
shrb
clc
jbe
jl
in
dec
xchg
inc
shrb
xchg
mov
inc
shrb
repnz
and
in
movsb
push
jbe
iret
xchg
pop
mov
push
cld
mov
pushf
cld
pop
jp
cwtl
movd
nop
jl
bound
sahf
sbb
or
fs
dec
pop
push
call
jno
sub
jl
pop
dec
in
mov
out
jge
push
cltd
movsl
ret
addr16
cmpl
mov
or
insb
inc
arpl
rcrb
sub
frndint
repz
aam
out
popf
je
jmp
std
out
or
call
fs
and
and
xorb
test
xor
icebp
mov
xor
mov
mov
xchg
mov
mov
and
push
push
jge
in
inc
lcall
xchg
cmp
rcr
push
dec
sub
mov
adc
pop
sarl
push
ds
loopne
cwtl
je
or
fwait
or
loope
mov
adc
lahf
xor
ljmp
dec
bnd
sub
jbe
cwtl
adc
and
and
cmp
jb
adc
js
pop
out
cli
xchg
shrb
mov
fs
mov
jno
sub
jp
ret
subb
movsl
pop
dec
pop
fistps
arpl
mov
add
xor
jae
xlat
sbb
out
rorb
push
jb
sbb
ja
test
pop
fwait
add
pop
hlt
push
movb
sub
pop
dec
cs
mov
jle
cmpsl
mov
add
mov
roll
xor
icebp
mov
pop
or
adc
lock
push
jmp
push
sbb
enter
sbb
rcr
adc
sub
popa
dec
call
fsubl
inc
leave
sbb
cwtl
xchg
sbb
cmp
out
cmp
jle
xchg
adc
lods
adc
xchg
pop
in
fwait
or
test
dec
popf
jl
mov
out
adc
mov
mov
inc
ds
clc
dec
add
dec
fcmovb
pop
inc
cwtl
mov
xchg
jp
pushf
nop
pop
jb
xchg
xchg
roll
inc
push
pop
stos
mov
in
popw
xor
mov
xchg
xchg
and
add
dec
loopne
xchg
aaa
repz
test
jae
mov
arpl
or
ss
mov
mov
test
ja
test
adc
push
add
out
and
push
shll
push
fdivr
mov
fwait
aam
aaa
add
call
ljmp
fldenv
xor
jp
pushf
addb
push
jo
ret
test
popf
pop
ret
popa
stos
icebp
in
push
mov
xchg
jno
mov
in
sub
cmpsb
rcrb
xor
test
sbb
add
sub
adc
pop
inc
mov
into
jae
mov
cmp
ja
mov
pop
mov
lcall
adc
sbb
adc
sub
add
or
or
sti
fs
mov
div
cwtl
mov
into
test
div
std
rcrb
adc
movl
popa
outsl
movsb
add
cwtl
mov
pusha
fcmovbe
loop
mov
scas
xor
fcompl
push
add
fs
in
add
cmpsl
data16
dec
adc
jbe
js
mov
repnz
jg
dec
lcall
enter
ja
xchg
dec
add
clc
xchg
rcrb
subb
jle
dec
cmpsl
cmpb
out
jle
cmp
push
pushf
sub
mov
fadd
js
add
inc
sub
cmp
sbbl
pop
jo
data16
inc
repz
or
adc
sub
or
je
pop
dec
inc
and
mov
and
sub
fs
repz
ss
inc
mov
jae
mov
lock
mov
jns
insb
and
lods
test
sbb
ss
dec
cltd
adc
lret
out
clc
sub
cmc
mov
push
in
cwtl
aas
cli
ds
lret
mov
sbbb
mov
cltd
je
push
jl
movsb
bnd
pop
pop
in
in
mov
cmp
orl
cli
call
out
loopne
jae
xlat
sbb
in
mov
insb
shl
push
lcall
inc
add
sub
cmp
int3
cmp
comiss
hlt
movsb
in
sub
inc
ja
xchg
cld
mov
push
hlt
test
out
inc
bound
fistpl
insl
mov
in
or
fwait
mov
jnp
dec
popa
rcrb
and
movsl
push
sbb
dec
pop
rcll
push
xchg
jno
mov
je
stc
sub
jle
cld
xchg
xor
insb
pop
sub
jle
mov
sub
inc
out
or
or
sarb
scas
insl
adc
jb
mov
sti
mov
sub
sub
inc
jbe
sti
mov
das
add
aad
aas
movsl
int3
add
pop
ret
cltd
fstps
ja
add
cmc
push
out
and
mov
add
mov
inc
lods
dec
xor
lea
scas
cltd
cmp
pusha
roll
mov
xlat
add
stc
mov
mov
or
lds
mov
loopne
jmp
dec
shrl
dec
shrb
inc
push
jecxz
jbe
pop
iret
iret
data16
fildll
sbbl
xchg
cld
popa
ret
jl
add
lods
add
int3
add
decb
test
inc
enter
mov
push
xchg
push
mov
mov
mov
sbb
movl
sar
cmpsl
mov
push
adc
push
or
in
dec
aas
daa
loop
xor
rcrb
loopne
jmp
test
add
cwtl
sub
pop
arpl
in
mov
jl
repz
pop
mov
jp
rol
and
mov
sbb
sbb
fs
sub
outsb
sub
sbb
cwtl
imul
sub
mov
roll
mov
test
mov
mov
mov
jno
sbb
xchg
scas
insb
movsb
mov
add
es
mov
stos
loope
pop
movsl
sarl
adc
test
adc
xor
cmp
jno
or
add
add
or
pop
insb
sub
dec
push
inc
push
outsb
pop
mov
or
and
adc
and
sub
lahf
shlb
xchg
dec
push
mov
movsb
mov
add
es
push
or
movsl
sarl
sbb
sahf
sub
mov
adc
cmp
pop
adc
fsubrl
fwait
sub
call
loope
outsl
push
sahf
les
dec
cld
pop
ret
fisubrl
cmp
out
push
hlt
dec
jecxz
sar
and
xor
jl
pop
imul
jp
pop
adc
push
pop
fsubrl
sbb
bound
xchg
adc
add
je
push
dec
jecxz
popl
inc
inc
lahf
lods
in
cltd
pop
dec
xor
dec
dec
ds
cmpsl
sbb
xor
adcl
sub
xchg
out
push
aam
in
mov
decl
push
dec
ret
adcl
mov
cs
jle
dec
xor
popa
stos
mov
sub
sbb
sub
fs
rcrl
es
mov
fwait
aam
aas
out
inc
pop
jne
cs
jle
cmp
xchg
adc
jmp
push
and
stos
mov
dec
or
jmpw
jmp
jge
aaa
into
outsb
mov
or
rcrb
cmc
pop
loopne
pop
jno
loopne
subl
pop
je
test
in
push
jo
int
loope
test
aaa
add
xchg
pop
shl
lret
dec
xchg
test
cld
cmc
pushf
sub
sub
hlt
adc
xor
fs
stos
jno
jno
or
add
add
stc
outsl
xor
sub
sbb
push
outsb
pop
fdivr
cmp
pop
insb
adc
push
lahf
lea
dec
loop
add
sub
test
dec
or
xor
cld
repz
mov
int3
dec
lods
adc
xor
jno
or
add
add
sbb
pop
insb
sub
jo
inc
push
outsb
pop
xchg
cld
cmp
pop
dec
adc
add
lea
dec
mov
movsb
mov
add
es
mov
stos
loope
pop
movsl
sarl
push
in
cmpsl
pushw
hlt
mov
xchg
std
lds
cltd
lods
imul
mov
les
and
in
pop
mov
xchg
dec
pushf
mov
in
push
mov
sbb
jae
mov
mov
daa
push
sbb
imul
rolb
mov
fidivl
enter
in
mov
int3
push
inc
jo
dec
dec
loopne
push
xchg
jo
outsl
ja
and
mov
cltd
push
dec
add
stos
shll
sub
int3
dec
mov
dec
ja
mov
test
in
nop
cmp
jae
mov
mov
daa
push
sbb
adc
cli
push
call
shrb
mov
in
mov
in
inc
jo
pop
aas
shrb
sub
cmovg
cmp
aam
ret
sub
popa
adc
es
and
pop
xlat
cmpsl
mov
sub
pop
xchg
jb
cmp
jecxz
xchg
call
fmull
ljmp
xor
into
outsl
push
or
in
fsubrl
push
jbe
imul
pop
in
push
jo
ds
or
push
and
dec
add
dec
cmp
fwait
sbbb
mov
and
pop
mov
mov
dec
pop
pop
in
in
rolb
int3
lods
cwtl
xorl
dec
les
xor
scas
in
mov
pop
and
xor
mov
les
in
adc
or
mov
lds
pop
int
xchg
dec
push
mov
cmp
addl
sub
sbb
push
in
js
push
in
add
notb
inc
adc
adc
xor
sbb
jle
test
adc
adc
inc
push
push
je
inc
jbe
xlat
sbb
add
insb
jle
inc
mov
pusha
shll
stos
mov
out
sub
pop
sub
xorl
test
les
ds
shll
stos
mov
dec
or
jmpw
jmp
dec
or
xor
cld
repz
sub
sub
mov
into
xor
fs
stos
jno
jno
or
add
add
stc
adc
pop
insb
sub
pop
push
inc
push
outsb
pop
mov
push
ljmp
xchg
push
sub
lea
dec
mov
insb
movsb
mov
dec
or
xor
cld
repz
mov
int3
dec
insb
adc
xor
jno
or
or
jge
sbb
not
les
sub
sub
popf
je
push
and
int3
mov
les
je
rorb
xor
inc
mull
dec
xchg
xchg
and
add
dec
or
xor
cld
repz
ljmp
dec
xadd
add
mov
mull
dec
xlat
test
mov
out
dec
pop
pop
stos
jno
or
add
rcll
cs
or
shrl
or
andb
push
popa
pusha
adc
pop
xchg
jp
lea
les
lcall
xchg
jle
cli
sub
in
pop
add
call
les
in
push
jo
push
popa
or
push
daa
jae
cmpsl
test
mov
orb
mov
pusha
jae
movsl
rorl
fistpl
xchg
rclb
fistps
push
hlt
mov
out
dec
pop
sbb
add
lea
popf
pop
arpl
popl
sub
push
int3
sbb
outsl
daa
push
mov
sbb
cs
sbb
push
mov
jge
push
sub
add
pop
scas
sar
pop
sub
xchg
pop
xor
pop
xchg
int
inc
sahf
dec
test
aam
pop
daa
fincstp
aam
dec
and
inc
push
mov
lret
xor
sbb
ret
adc
push
jb
push
inc
jo
or
jae
cwtl
xchg
shlb
mov
cltd
push
dec
add
stos
shll
sub
int3
mov
push
push
jbe
push
in
add
adc
cwtl
xchg
push
dec
mov
daa
push
sbb
add
cli
push
sbb
mov
ficoml
adc
les
push
inc
jo
sub
jae
cwtl
xchg
mov
and
mov
cltd
push
dec
add
stos
shlb
fs
int3
outsb
movsb
test
push
jbe
push
in
pop
push
loope
popa
pusha
sbb
frstor
adc
in
in
bound
cltd
stos
out
test
mov
stos
mov
cwtl
cld
pop
adc
pop
lcall
mov
das
in
repnz
jb
loopne
pop
jbe
sarb
push
xchg
pop
cli
lahf
and
jle
dec
push
mov
pop
faddl
mov
sar
jle
je
call
stos
mov
out
sub
pop
mov
les
fsubrl
enter
ss
sub
aas
dec
ds
shll
stos
mov
dec
or
jmpw
jmp
jge
aaa
into
outsb
mov
pop
lret
mov
aas
stos
ds
xor
jo
pop
and
pop
dec
in
test
aam
lock
addl
rorl
mov
cbtw
push
in
test
push
in
mov
adc
mov
pop
sbb
or
jmp
test
mov
jne
dec
into
push
mov
pop
push
in
call
aas
dec
ds
xor
push
xor
adc
xor
loopne
ja
mov
mov
sub
mov
mov
lahf
cmp
add
pop
shlb
ss
stos
mov
out
sub
pop
jmp
cmp
repnz
stos
mov
test
pushf
push
push
jbe
push
inc
and
aam
lock
sbb
mov
adc
push
out
in
and
dec
jle
and
jecxz
stos
and
insb
or
cwtl
dec
cmp
test
test
pop
xor
aas
loopne
js
mov
into
sub
cmovg
cmp
aam
mov
pop
stos
mov
jae
xchg
mov
or
cli
mov
je
pop
jp
rol
fs
orb
in
pop
pop
int
repnz
or
sbb
mov
lahf
dec
into
loop
into
das
xchg
jecxz
pusha
push
in
enter
sarb
ljmp
add
sbb
insb
jmp
ret
cmp
jb
and
into
shll
hlt
pop
lcall
movsb
pop
mov
fs
xor
movsl
mov
arpl
hlt
mov
ja
cmpsl
test
xchg
mov
shld
add
je
mov
ret
sbb
test
fistpl
xchg
xchg
and
add
dec
or
xor
cld
repz
pop
cmp
jl
nop
adc
xor
pop
ljmp
xchg
loop
sbb
inc
sti
inc
and
inc
sub
jns
and
jnp
into
imul
sub
mov
push
aaa
mov
and
push
mov
and
sti
mov
in
decb
and
negb
in
jbe
mov
and
jmp
gs
loope
test
xchg
sub
outsb
jmp
repnz
cmp
roll
add
pop
rcrl
test
mov
cmpsl
test
scas
mov
fistpll
out
rcrb
adc
mov
stc
outsl
arpl
mov
and
dec
pslld
or
jmp
int3
cli
cwtl
leave
fadds
stos
movsl
sarl
ljmp
pop
adc
xor
movups
add
pop
pop
stos
insl
dec
xlat
test
mov
not
les
push
sub
jecxz
les
mov
cld
pop
sub
and
pop
inc
ret
and
test
pop
jb
dec
sti
and
lret
push
shrl
inc
jae
mov
or
pop
ret
pop
ficompl
popf
je
pop
cli
jns
xchg
in
pop
loopne
inc
pop
fs
adc
or
cmp
aas
out
add
std
fmul
out
pop
in
fidivrl
aam
repnz
lret
sub
incl
adc
add
pop
sbb
or
cmpsl
pop
aaa
shl
aam
dec
enter
pop
outsl
jecxz,pn
les
mov
adc
out
cmp
aam
sar
push
outsb
aas
shl
adc
fcomip
fistl
mov
hlt
rorl
push
lret
mov
jne
aas
cmp
dec
outsl
cmpsb
js
imul
lcall
sub
pop
inc
pop
lcall
arpl
cmpsl
xchg
sub
jno
pop
negb
inc
shlb
movsb
arpl
je
pop
mov
ret
orb
in
pop
pop
int
repnz
or
mov
or
enterw
pop
cwtl
imul
mov
push
popa
pusha
adc
pop
xchg
jp
out
bound
stos
shll
sub
int3
clc
dec
test
push
jbe
push
in
insb
push
jp
adc
je
cmp
mov
jmp
jge
aaa
into
outsl
or
add
sbb
shll
out
inc
xchg
push
mov
xchg
adc
je
daa
inc
mov
and
fwait
jno
push
mov
std
push
into
out
sub
dec
pslld
dec
dec
sub
mov
sub
mov
adc
cmp
pop
mov
pop
stos
xor
jns
push
xor
fdivs
jle
adc
insb
rcrl
sub
pop
lret
pop
lret
clc
shrb
stos
arpl
pop
inc
or
cwtl
ret
js
xorb
test
orl
rorl
dec
mov
pop
les
insb
movsl
aas
cmpsb
hlt
push
pop
jbe
push
dec
cs
add
pusha
stc
jb
cld
push
xor
jp
cltd
mov
pop
sub
jle
xchg
jmp
sub
inc
out
mov
outsl
aam
or
sbb
mov
or
add
fldt
shl
push
jno
push
mov
scas
call
and
das
fcoml
cwtl
or
pushfw
push
out
add
mov
js
mov
push
mov
add
movsl
ja
mov
mov
sub
mov
aam
ja
cmp
jo
push
inc
loop
arpl
ss
sbb
xor
into
xor
mov
ss
int
repnz
rorl
movsl
or
cmc
addr16
push
mov
adc
shrb
mov
int3
ret
xor
xor
adc
dec
std
enter
mov
daa
push
push
in
data16
mov
inc
inc
adc
adc
and
xor
sarb
lcall
fldt
movsl
cmp
inc
pusha
in
cmpsl
or
jne
jge
ja
dec
shll
rorl
aam
test
and
adc
mov
cwtl
dec
sbb
push
or
in
gs
out
jmp
mov
push
int
rcrl
inc
and
push
xchg
loopne
daa
mov
mov
out
pop
aad
mov
ds
imul
pop
es
mov
add
adc
cmp
cmp
roll
jge
xorl
mov
inc
or
sub
negb
into
test
movsb
add
sub
cmp
cltd
jne
xor
jle
pop
adc
adc
loopne
cld
stos
jns
das
pop
in
mov
jl
adc
xchg
cwtl
sbb
mov
mov
mov
jmp
stos
repz
stos
mov
cwtl
sub
in
dec
add
adc
mov
mov
mov
push
adc
int3
sbb
adc
mov
mov
xor
lea
test
cli
and
mov
lret
pop
into
dec
imul
jle
imul
push
stc
enter
cmp
adc
inc
decb
xor
fs
test
es
cli
jmp
push
mov
and
push
mov
and
fcompl
pushf
fs
dec
cmp
xchg
stos
push
pusha
mov
fdivrs
out
ds
or
dec
cmp
mov
sbb
inc
mov
push
rcrb
mov
scas
and
fcompl
jmp
inc
mov
cwtl
mov
mov
inc
mull
aaa
mov
sub
int3
iret
ja
sbb
ljmp
out
fs
xchg
subl
movsl
inc
add
pop
cs
mov
lock
sbb
dec
cmpsl
imul
sbb
cld
insb
push
imul
mov
mov
dec
adc
in
ds
cmc
mov
adc
push
push
cmp
cwtl
lahf
inc
xchg
and
sarl
lret
add
jecxz
push
shll
int3
push
sahf
cmp
cwtl
inc
sub
leave
or
xor
mov
add
rcrb
push
les
inc
sbb
inc
mov
adcl
sub
cmp
and
aas
xor
into
or
sub
pop
aas
lret
and
in
pop
xor
mov
add
jb
lret
add
int3
or
rolb
add
in
mov
mov
and
mov
or
fisubs
pop
jne
int3
adc
sub
nop
xor
pop
mov
js
dec
addl
xchg
push
das
xor
cli
xor
dec
aaa
xchg
nop
les
and
int
inc
aam
fwait
pop
xchg
cmc
and
cmp
mov
loop
jb
clc
nop
lahf
add
in
xchg
outsb
and
pushf
push
ljmp
sub
scas
or
or
rorb
adc
pusha
popa
stos
mov
cmp
push
xchg
mov
addr16
inc
bound
out
dec
mov
testl
jp
and
xor
jle
ret
movsl
or
test
mov
pop
hlt
dec
or
mov
in
mov
mov
hlt
sub
push
lods
sbb
in
ljmp
jae
mov
add
fsubl
and
mov
clc
adc
ds
ret
xor
into
and
leave
xchg
add
or
in
mov
gs
and
test
jbe
jle
jl
mov
rcl
add
xor
xchg
jle
leave
jp
push
aam
jmp
add
in
xchg
cmp
outsl
sbb
aaa
setb
cmp
adc
adc
xchg
pop
clc
inc
mov
call
mov
mov
idivl
rorl
sub
push
ret
sub
fidivrl
ret
jbe
jns
mov
sbbb
cmp
mov
lock
cmp
push
sub
nop
rorb
inc
or
inc
repz
int3
stos
inc
dec
sub
insb
push
pop
pop
outsl
adc
push
pusha
mov
int3
test
xchg
and
push
pop
mov
outsl
subl
mov
xor
sti
and
sub
pop
jno
pushf
cmp
push
push
jp
or
push
push
int3
das
gs
pusha
imul
sahf
js
pop
mov
jmp
loopne
add
dec
push
adc
loopne
stc
call
imul
bound
sub
jge
ret
test
or
mov
push
sub
pop
addl
inc
sub
mov
ss
scas
test
ljmp
mov
xor
xor
test
loopne
push
lea
jae
or
xor
or
jbe
les
mov
stos
test
jb
outsb
pop
ds
push
cmp
mov
or
pop
mov
mov
mov
pop
fs
inc
lea
aam
es
rcll
les
add
inc
mov
sub
dec
into
sbb
push
lcall
test
push
aaa
jmp
cltd
or
dec
or
es
shrb
test
insl
jle
cmpsb
xor
cs
mov
sub
rcrb
rcll
ret
andl
jl
cmp
mov
mov
mov
cmp
cmp
stc
pop
inc
cmc
ja
push
push
mov
push
jne
cmp
and
add
push
js
cvtdq2ps
scas
cmc
jg
outsb
in
lret
incb
das
mov
add
dec
ds
gs
mov
push
sbb
sub
bound
jecxz
aad
sub
test
jl,pn
fmull
orb
sbb
insb
movsl
adc
or
jb
mov
dec
nop
ds
hlt
or
shlb
rol
in
add
mov
xchg
mov
pop
lock
inc
stos
xchg
loop
nop
sub
xchg
mov
ss
aam
ret
test
sub
and
dec
ds
mov
sbb
mov
fwait
xor
je
dec
jbe
lods
xor
mov
cmpsl
or
inc
cmpsb
in
insb
dec
jae
cmp
pop
jecxz
mov
push
scas
sub
jbe
mov
and
pop
dec
test
xchg
dec
mov
dec
xchg
sub
mov
cld
mov
or
lods
xchg
stc
shlb
sub
aam
aas
je
int
cmp
dec
mov
lock
rcll
inc
push
out
dec
cld
bound
fs
push
bound
mov
bound
sbb
sbb
les
pop
pop
insb
cld
pushf
daa
pop
xor
int
subb
dec
and
subl
push
popf
dec
xchg
inc
into
fisubrs
in
push
inc
icebp
aas
xor
aaa
mov
cwtl
xchg
mov
cmp
cmp
outsb
mov
pop
inc
sti
jae
loopne
sbb
in
addl
imul
stos
enter
xchg
scas
insb
movsb
mov
add
daa
dec
scas
sub
hlt
pop
fs
rorb
pmaxsw
mov
hlt
or
hlt
xor
clc
mov
push
hlt
or
or
les
xchg
scas
insb
movsb
mov
add
es
jle
cmp
jmp
push
call
imul
mov
ds
hlt
pop
dec
jbe
push
jne
sbb
ljmp
ljmp
dec
jg
stos
ret
xor
cld
sub
lret
adc
xchg
adc
adcb
sub
hlt
loopne
call
and
je
or
nop
lock
jge
mov
test
pop
sub
add
mov
cltd
lods
lcall
fisttpll
out
pop
push
inc
sbb
jne
or
sbb
jnp
push
mov
sub
mov
mov
push
inc
push
jnp
inc
pop
xor
out
jbe
inc
out
test
sbb
arpl
imul
sbb
call
roll
int3
jp
orl
pop
lock
dec
int3
test
sbb
test
enter
jbe
adc
ja
test
ror
lock
sub
pop
orb
fsubr
dec
out
mov
sarb
lcall
add
daa
fimull
test
sub
out
and
sub
out
jns
pop
mov
fmuls
pop
aas
xchg
lock
sub
stos
ficompl
pop
and
imul
call
or
into
jo
jl
xor
jl
in
imul
out
enter
shll
cmp
fsubs
xchg
ss
cmp
fcoml
xor
push
cmp
ljmp
and
bnd
call
hlt
fildl
mov
sbb
fidivs
stc
jbe
jl
xchg
mov
ja
loop
inc
push
popf
je
icebp
sarb
mov
paddsb
fadds
shr
pop
and
push
dec
arpl
insb
jbe
hlt
test
es
sbb
ret
dec
popa
aad
dec
setg
dec
dec
push
mov
test
add
inc
into
pop
pop
cld
data16
mov
repz
fcomip
cmp
jo
sub
mov
mov
inc
adc
push
orb
sarl
lods
push
dec
sti
mov
fwait
pop
jno
pop
inc
mov
pop
fwait
cli
lds
pop
ja
out
movsl
pop
xor
mov
leave
test
sbb
push
sub
cltd
in
int
inc
cmpsl
xor
sub
dec
adc
pop
pushf
sahf
sub
jecxz
and
jbe
cld
insb
adc
es
les
mov
cmp
add
sar
adc
insl
std
mov
dec
int3
das
jl
aam
lods
testb
test
rclb
mov
xorb
xor
fiaddl
xorl
stos
add
insb
jp
push
in
jno
into
push
mov
push
and
cltd
cmp
filds
mov
xor
jns
pusha
lret
shrb
add
jns
mov
ljmp
fs
and
mov
xor
dec
pop
inc
imul
pop
jo
ss
xchg
outsl
lcall
xor
or
xchg
subb
mov
push
xchg
cltd
out
inc
cmp
aam
loop
notb
lret
jmp
push
pop
outsl
sbb
imul
cmc
inc
ss
mov
or
je
inc
aam
sbb
xor
fs
sub
dec
into
mov
jnp
pop
mov
sub
sub
mov
sub
or
lahf
push
pop
sbb
ds
mov
lds
data16
clc
imul
dec
mov
outsb
fwait
popa
sbb
add
loop
ljmp
or
loopne
in
xchg
fidivl
xchg
add
fists
mov
mov
fldenv
inc
sub
cmp
mov
ljmp
mov
lock
loopne
jb
inc
idiv
repnz
addr16
add
jle
subl
sub
sub
cmp
and
inc
xchg
outsl
adc
fistl
clc
dec
rolb
push
std
dec
inc
cmp
and
loop
enter
std
in
push
xchg
test
pop
lea
enter
rcl
pop
fsubrl
in
pop
and
or
mov
xchg
dec
mov
pop
dec
das
dec
mov
mov
das
mov
xchg
jae
repz
sbb
cld
jnp
imul
addr16
xor
incl
add
arpl
inc
mov
stc
adc
insl
cmpsl
add
mov
xchg
xorl
fsubs
mov
xor
mov
data16
jp
xorl
jns
xor
mov
cld
out
outsb
addl
mov
xor
sub
fs
subl
push
fwait
xor
jp
xor
push
xor
sbb
nop
mov
popa
pop
and
mov
mov
cli
lret
or
popa
dec
popa
mov
pop
inc
mov
inc
dec
mov
and
mov
cmc
jecxz
push
jg
mov
mov
xor
nop
ss
sub
sub
xor
aam
dec
inc
add
adc
jns
or
sarb
xor
mov
or
adc
sbb
sbb
mov
icebp
pusha
imul
orl
adc
das
sbb
lahf
and
loopne
repnz
inc
stc
jmp
lods
int
inc
test
out
repz
test
into
iret
mov
icebp
icebp
pop
imul
bound
aaa
xor
adc
je
leave
xor
sub
and
out
in
dec
jmp
mov
in
cmp
inc
cld
jbe
pop
aad
or
dec
in
rcrb
or
clc
sub
sbbl
notb
lds
idiv
cmpsl
xchg
add
jl
inc
and
pop
push
leave
jo
test
pop
outsl
xor
and
adc
xor
repz
popf
push
outsb
pop
out
cld
cmp
pop
cmp
xchg
std
into
adc
mov
in
cmp
jno
push
inc
pop
ret
sbb
or
test
shrl
jnp
xchg
data16
jno
data16
adc
sbb
lcallw
lret
jmp
nop
mov
cmpsl
inc
lods
test
jle
dec
andl
jp
pushf
fs
or
or
rorb
xor
cld
dec
xchg
loope
add
pop
adc
int3
dec
pushf
cli
pop
testb
xor
sahf
iret
mov
xlat
daa
push
pop
or
push
cmc
ret
xchg
and
stos
scas
mov
inc
push
push
pusha
sub
hlt
pushf
movsl
xchg
insl
xchg
mov
sub
ficompl
sbbl
pop
xor
sub
fimuls
jbe
cltd
clc
push
ljmp
cmp
hlt
dec
and
inc
pop
out
cltd
int
aas
in
dec
inc
ficomps
mov
push
push
or
iret
xor
xchg
and
loopne
mov
sti
dec
shll
dec
iret
leave
movsl
test
xor
sub
fs
dec
sub
cmpb
out
push
inc
les
and
out
xor
sarl
lret
pop
inc
aad
aas
aaa
rorl
hlt
adc
mov
or
outsb
or
pop
sub
mov
lret
in
inc
dec
xor
push
sub
add
popa
repnz
std
xor
scas
sub
mov
sub
mov
rcrl
loopne
pop
xchg
pop
push
xchg
in
sbb
pop
xor
add
jae
xchg
sub
cmp
cmp
jno
pop
cltd
adc
loope
bound
ret
sub
je
pusha
and
add
cld
test
add
push
rorb
imulb
sub
rorl
dec
cld
cli
adc
movsl
jp
cmp
jmp
push
shl
push
add
sbb
cwtl
mov
cs
enter
pop
sbb
mov
mov
aam
xchg
and
xchg
cmp
ljmp
xor
or
or
ss
mov
sbb
push
pop
call
test
jecxz
mov
sub
push
pusha
data16
or
pop
sub
xlat
adc
inc
sbb
es
sub
inc
jo
sub
test
adc
xor
ljmp
inc
imul
les
into
add
cmpsb
cmp
xchg
call
pop
sub
cmpsl
repnz
mov
ljmp
xor
xor
insl
xorl
push
xchg
paddb
xchg
gs
xchg
int3
pop
loop
push
loopne
repz
push
lds
int
dec
pusha
pop
les
push
out
mov
adc
pop
stc
fisttpll
mov
jge
movsb
ds
push
jmp
adc
push
div
repnz
in
ret
push
lahf
subl
test
lret
fwait
arpl
dec
dec
popa
sub
mov
aas
outsl
jp
xor
das
imul
ss
xor
xor
in
push
cwtl
lret
adc
dec
push
mov
mov
seto
loop
xor
pop
insl
jo
int3
push
add
fadd
pop
mov
ljmp
jle
mov
inc
frstor
adc
in
pop
bound
or
ljmp
jo
xchg
mov
repnz
sub
mov
xor
scas
into
pop
fs
jne
stos
push
stos
in
movsb
mov
add
daa
dec
ljmp
mov
adc
shr
fcmove
jl
clc
jmp
aam
rcrb
and
pop
adc
cmp
sbb
cli
push
pushf
je
sbb
dec
fiadds
xchg
add
sub
inc
pop
test
cmp
fisubs
pop
cmpsl
arpl
sub
mov
test
cs
aam
sbb
pop
push
or
add
dec
xchg
outsl
inc
sub
jmp
das
xchg
dec
ret
test
mov
leave
xor
mov
sbb
and
into
test
pop
loop
xor
mov
adc
mov
cmc
add
mov
and
loope
xchg
add
in
and
sub
fdivr
cmp
inc
pop
sar
pop
cwtl
sbb
scas
xchg
push
dec
sub
andb
mov
push
push
hlt
mov
sbb
sbb
gs
ja
mov
pop
movsb
add
aad
inc
movsl
mov
frstor
adc
or
out
jno
inc
xlat
movsb
adc
stc
or
in
mov
sub
jmp
push
sub
int3
bound
mov
jmp
jg
nop
jo
push
or
pop
outsb
in
lcall
jl
jmp
sbb
adc
sahf
mov
cld
aaa
scas
outsb
movsl
xchg
insl
jo
jo
imul
addr16
adc
scas
les
jbe
loope
in
mov
out
or
inc
lock
inc
call
cwtl
shrl
shlb
in
push
packuswb
xor
push
cli
mov
shl
inc
add
xor
popf
shl
popa
dec
mov
mov
loopne
adc
sbb
fxam
das
pop
nop
dec
mov
mov
lock
inc
shrl
fs
xor
fldcw
and
sbb
shr
shll
call
jb
pop
pushf
daa
inc
dec
outsb
jmp
xchg
test
fisttps
jo
rcl
cmpsl
dec
std
or
add
and
jg
lock
movsb
rclb
pop
cmp
cmp
nop
enter
out
jb
or
sbb
shl
xchg
ss
push
xor
cmpl
mov
pop
cld
lcall
imul
mov
mov
mov
rcrl
cmp
mov
push
mov
jno
jo
mov
adcl
or
ret
sbb
xor
pop
cltd
loop
cmc
mov
dec
hlt
sbbl
scas
cmp
push
pop
mov
call
jp
pushf
in
mov
or
je
inc
xlat
shl
inc
gs
mov
fsubr
mul
push
dec
aas
fnstsw
inc
xchg
xor
mov
cmp
out
stc
int
lret
icebp
aam
enter
push
in
aam
cmp
xor
and
call
mov
jo
mov
sbb
orb
push
inc
inc
xor
push
jb
mov
sbb
daa
movsl
pop
int3
and
xor
int
adc
cmpsl
call
cmp
scas
shl
lods
xchg
dec
pop
pop
je
push
lret
lea
push
dec
mov
mov
pop
ret
xlat
cmp
pop
ss
ret
or
cltd
repnz
out
dec
cwtl
hlt
adc
lahf
stc
mov
inc
ret
sub
pop
mov
xor
fisubl
add
lret
loopne
push
xchg
sbb
daa
sbb
mov
ja
mov
jbe
adc
ds
xor
in
andl
adc
cmp
loop
pop
mov
ljmp
mov
bound
push
jb
adc
cmc
js
mov
cmp
cs
adc
loope
fidivrl
out
pop
cmc
or
jl
call
sbbl
cmpsl
mov
pop
data16
std
push
js
stos
or
xor
pop
in
sub
mov
mov
add
cmpsb
inc
add
adcl
jg
in
cmp
cltd
mov
adc
cwtl
roll
push
jl
sub
add
in
hlt
cwtl
push
hlt
mov
bound
add
pop
les
scas
out
mov
mov
into
pop
and
out
fs
add
mov
inc
dec
pop
nop
push
stos
out
or
lret
mov
and
xchg
mov
sub
or
insb
sbb
xchg
shlb
loop
ret
divb
outsl
xchg
push
enter
pop
data16
into
mov
pop
enter
hlt
mov
cmp
lret
fisttpl
push
mov
inc
sbb
lcall
pop
lods
sarl
je
cmpl
aas
cmp
inc
pop
mov
and
or
inc
mov
aas
mov
push
pop
jbe
shr
push
cwtl
les
in
adc
mov
out
ss
and
mov
push
cld
aas
sbb
inc
pop
mov
and
or
xchg
scas
and
xor
mov
pusha
std
jb
shr
and
fstl
or
sub
mov
cmp
pop
icebp
stos
mov
bound
pop
mov
ljmp
xchg
inc
pop
sbb
push
les
or
jmp
jl
pop
ds
cli
jle
loope
mov
pop
mov
int3
inc
inc
pushf
mov
mov
sbb
or
and
inc
jno
dec
jp
xorl
fcoms
cld
loope
jb
ret
sub
repnz
loopne
dec
inc
push
ds
in
cmp
jle
adcb
outsb
inc
clc
sub
fdivrl
clc
sbbl
scas
lock
push
jp
and
sahf
hlt
iret
aam
andl
xor
iret
sbb
lods
aam
repnz
sub
repnz
mov
push
daa
or
sub
fs
sub
insb
mov
adc
push
mov
insb
mov
les
int3
ljmp
aam
into
sub
fistpll
fs
loopne
inc
inc
lods
mov
les
pop
xchg
cmp
arpl
push
inc
sahf
and
xchg
adc
and
data16
adc
aas
sarb
insb
test
xorb
or
lcall
mov
enter
int
repnz
movzbl
mov
loop
pop
cmp
add
push
add
add
ljmp
sbb
cmp
add
and
inc
sbb
call
fs
adc
push
mov
popl
sbb
mov
mov
pushf
clc
pop
push
mov
mov
add
add
lret
jp
in
mov
les
rclb
int3
push
in
nop
bound
in
cwtl
aas
dec
shrl
jb
mov
rclb
jbe
cmp
in
sub
int3
mov
adc
jecxz
push
jmp
movsl
shl
hlt
hlt
fs
hlt
insb
dec
call
push
in
mov
dec
test
mov
add
sub
dec
sub
mov
cmp
lods
sub
sbb
xor
pushw
cmp
and
mov
pop
sbb
fimull
xchg
sbb
mov
pop
mov
pushf
push
or
add
cwtl
shll
mov
hlt
or
jbe
in
shll
aas
fdivs
hlt
fmull
xchg
insb
push
in
int3
push
mov
ja
sbbb
ds
hlt
adc
mov
out
jle
inc
xor
aas
pop
pop
int
and
pushf
in
adcl
sub
mov
jmp
xor
out
dec
pop
pop
inc
mov
popf
xor
cli
cmp
sub
xchg
pop
pop
cwtl
xchg
sub
je
cmp
rolb
incb
pop
pop
cltd
pop
fstl
sbb
lret
adc
cltd
push
jne
aaa
popf
sub
pop
inc
shll
sbb
roll
loope
int3
mov
mov
test
mov
movsb
in
or
or
in
add
jmp
call
xor
pop
fidivrl
add
cltd
mov
adc
cwtl
shrl
scas
aad
aas
add
add
lret
jp
in
mov
mov
adc
aas
cmpb
shll
scas
sub
push
xchg
js
mov
xor
arpl
pushf
mov
mov
mov
mov
push
pop
pop
mov
dec
fwait
sub
pushf
cmpsl
mov
scas
stos
hlt
xchg
dec
hlt
pushf
dec
and
pop
jbe
push
in
mov
and
call
push
sub
pop
sub
mov
cmp
out
sahf
subb
add
pushw
or
jl
jmp
mov
cli
ds
lahf
pop
xchg
mov
jp
pushf
pushf
or
js
rorl
push
adc
test
adcl
fiadds
int3
pop
pop
cmp
sub
cmp
mov
sub
mov
adc
push
xchg
adc
adc
ljmp
sub
lret
arpl
dec
lret
jge
mov
sbb
xor
pop
lret
push
mov
cmp
arpl
sbb
adc
inc
call
jl
xchg
cltd
jbe
pop
sbb
or
not
adc
mov
cwtl
mov
ds
fcom
jl
movsb
inc
sub
fdivrs
mov
mov
mov
adc
xor
and
test
jg
sbb
adc
sbb
pop
adc
sbb
cmp
orb
shll
cwtl
shrl
pop
int3
or
dec
sbb
mov
push
int3
mov
in
repnz
in
idivl
hlt
fwait
inc
and
jle
jg
leave
jg
fstpt
cwtl
jg
lock
fidivrs
div
mov
dec
ud2
rcrb
mov
test
adcl
je
in
or
fwait
and
jl
fistpll
cmpsb
pop
out
push
and
fsubl
les
xor
in
add
jle
push
mov
in
mov
or
cmc
push
inc
fwait
insb
sub
xchg
clc
fisttpll
pop
dec
pushf
jae
je
push
xor
aam
mov
jmp
dec
jl
inc
mov
cwtl
jbe
mov
push
pop
push
xchg
xor
fcompl
xchg
ljmp
adcl
and
ret
add
or
repnz
mov
ds
hlt
mov
jbe
push
inc
jno
ds
sub
sbb
lret
pop
lret
mov
adc
cmp
sub
adc
push
xor
pop
inc
push
mov
in
out
mov
repnz
imul
mov
jle
push
rcl
pusha
pushf
xchg
cmp
loopne
mov
gs
cmpsl
mov
mov
mov
sub
xchg
lahf
mov
adc
icebp
mov
pop
adc
mov
dec
mov
push
sbb
popa
and
push
xchg
mov
sahf
loope
mov
jns
sub
mov
sub
push
lret
or
pop
jb
or
testb
pop
aam
jmp
hlt
ficomps
loop
fbld
cmp
pop
cmp
push
cmp
pop
shr
mov
sub
rol
ljmp
cmpsb
leave
adc
sub
movsl
dec
inc
aam
mov
mov
mov
or
fmul
dec
add
push
out
in
notl
adc
sub
mov
popf
out
sub
pop
pop
loopne
mov
ds
repnz
fldenv
pop
mov
xor
sti
pop
jnp
jl
enter
loop
mov
jbe
test
mov
lds
dec
sub
jno
call
nop
add
inc
repnz
insl
mov
and
addb
inc
inc
cmp
in
mov
aas
or
pushf
test
jb
into
xor
mov
mov
adc
jnp
aaa
xor
vphaddubd
add
imul
xchg
mov
pop
pop
ljmp
arpl
pop
arpl
dec
mov
xlat
jecxz
movsl
in
or
mov
push
sarb
pushf
cld
add
jb
jb
loope
mov
xor
fcmovnu
inc
orb
xchg
cmp
popa
and
fldt
mov
fwait
add
mov
out
pop
movsl
aam
xchg
call
in
cs
lret
pop
adc
ja
cmpsb
sbb
add
in
jno
lock
push
mov
cwtl
pop
js,pn
dec
dec
aaa
out
bound
jl
in
imul
pop
test
mov
sub
js
inc
or
fmul
push
add
outsl
ret
subb
sbb
sarl
insb
sbb
js
mov
movsl
mov
and
jl
insb
sbb
into
out
cli
cmp
xchg
out
xor
push
add
cwtl
aam
ljmp
inc
fsubs
inc
jns
and
pop
lock
loope
loopne
ret
aam
aas
lcall
adc
mov
push
inc
ret
sbb
fnstsw
addr16
iret
test
or
jmp
ds
andb
bnd
push
outsb
xor
xor
lahf
aas
xor
mov
xchg
repz
jmp
sub
push
notl
lahf
xchg
or
mov
fs
push
das
imul
aaa
adc
push
inc
adc
inc
fs
enter
dec
xor
dec
dec
cmp
adc
push
in
pop
popa
push
inc
jno
mov
test
pop
mov
insb
les
cs
mov
scas
lods
out
sbb
lret
in
xor
xchg
call
pop
roll
and
shlb
push
cmp
ret
xor
push
xor
fs
xchg
adc
push
roll
mov
das
fmul
sarl
dec
adc
xchg
int3
rolb
hlt
jae
xor
daa
cmpsb
fdivrl
cmp
adc
dec
leave
xchg
test
cmpsl
sub
xchg
mov
mov
pushw
jmp
sub
cmc
mov
and
mov
lahf
inc
data16
mov
pop
mov
push
mov
rol
mov
out
push
pusha
pusha
insl
mov
pop
iret
jo
fmuls
mov
popf
xchg
test
fsubrl
inc
mov
mov
outsb
sbb
mov
cmc
js
jp
das
sub
sbb
jl
andl
sbb
std
push
outsb
pop
xor
jl
mov
cs
cli
ja
fcompl
fcoms
push
gs
adc
mov
out
sub
into
orl
mov
popa
adc
mov
cs
jle
or
lods
or
mov
mov
jno
cbtw
jp
cltd
adc
mov
int
sarl
shlb
add
les
add
in
imul
pusha
jp
cltd
mov
inc
pushf
pop
add
outsl
nop
cmc
pop
push
fs
inc
sub
hlt
aad
repz
mov
cmp
push
xor
push
jb
iret
sbb
cmp
pop
pop
xor
rcll
cmpsl
stc
ljmp
xor
sub
icebp
lea
pop
nop
add
xchg
pop
movsb
mov
cmp
push
push
jge
imul
mov
and
mov
lock
and
pop
sar
sub
add
aam
repnz
pop
sub
std
jl
mov
jne
pop
bound
int3
fwait
sbb
cmc
or
cs
push
mov
xor
inc
shl
mov
std
adcl
add
fstl
ret
push
mov
data16
inc
sbb
leave
or
pop
mov
aaa
sti
movsl
sub
mov
or
cwtl
inc
out
cmp
inc
xchg
inc
mov
cmp
cmp
addb
cmp
cmp
int3
ss
mov
and
add
xchg
jl
mov
fwait
sub
or
pop
jo
cmp
in
pushf
dec
repz
add
cmp
scas
in
pop
mov
aam
fmuls
mov
decl
dec
ret
adcl
mov
cs
ja
out
xor
stos
mov
sub
rclb
cld
ret
xor
xor
imul
sub
and
fwait
jno
push
add
std
hlt
into
out
sub
dec
pminsw
popf
pop
arpl
lcall
adc
cmp
int3
in
mov
shl
push
xchg
aam
dec
push
mov
push
xchg
mov
ss
in
add
shl
cwtl
mov
pop
popa
pusha
push
vphsubwd
ss
sub
lcall
push
rorb
adcl
or
cs
ss
aam
inc
int3
pop
enter
lock
into
pop
add
push
jb
xor
fildl
jp
rorl
jno
ja
push
sub
mov
push
jg
jg
adc
pop
push
adc
insl
mov
cltd
outsb
aaa
push
and
aad
or
repnz
mov
lock
or
ja
outsb
mov
cmpsb
ds
outsb
inc
push
rcrb
int3
addr16
fdivl
add
lods
cmp
pop
xor
scas
shlb
sbb
push
sbb
shl
mov
ljmp
shrl
jne
mov
push
push
xor
jno
add
xor
adc
sub
add
shlb
fucomp
test
pop
mov
mulb
push
arpl
push
xor
jle
sub
and
cmp
fucomp
aas
subb
faddl
dec
and
jecxz
shr
xor
outsl
mov
shrl
xor
cmp
or
je
jmp
and
jno
jb
push
insb
in
incl
stos
xor
jno
or
xor
mov
popa
outsl
js
push
mov
inc
jno
lret
fistpl
stos
cmc
pushl
and
or
push
xlat
idiv
inc
mov
mov
sub
lcall
dec
cli
mov
jo
and
loop
adc
dec
rclb
mov
daa
adc
mov
mov
push
enter
imul
or
andl
dec
add
fisttpl
adc
pop
dec
xchg
dec
pop
mov
pop
and
es
cmpsb
dec
adc
in
cwtl
aas
mov
xchg
sub
aas
push
cld
mov
push
jno
rcrb
sti
std
sarb
sub
movsb
and
mov
push
lock
mov
adc
pop
sbb
subb
xor
test
call
rcrl
mov
rorb
mov
rclb
test
jmp
or
jecxz
and
and
push
rcrb
inc
xor
pop
inc
inc
jecxz
mov
add
sti
mov
aam
and
cwtl
mov
les
js
pushf
dec
in
iret
mov
cmpsb
push
popa
pusha
adc
pop
xchg
jp
inc
ds
popa
mov
fs
lcall
mov
mov
cwtl
shll
cwtl
shrl
subb
icebp
xchg
push
outsl
cmp
dec
or
jmpw
jmp
jge
aaa
into
outsb
mov
pop
arpl
aam
scas
shr
cmpsb
lret
clc
jmp
adc
inc
sub
push
jo
xchg
int3
mov
lods
ss
adc
adc
pop
and
push
shll
pop
jo
rclb
insb
cmp
sbb
pop
dec
sbbb
loopne
pop
dec
cltd
mov
sub
shlb
xchg
aam
outsl
dec
hlt
cwtl
sub
cli
sub
rcrb
adc
ljmp
dec
mov
sub
sti
sbb
dec
xchg
pop
hlt
mov
mov
int3
cmp
or
jg
mov
aas
in
mov
sub
jo
xchg
adc
dec
add
scas
cltd
xchg
imul
sub
jae
and
lcall
xchg
jp
cld
sub
mov
testl
inc
and
xor
sbb
mov
inc
mov
inc
jp
ret
subb
movsb
push
leave
sbb
outsl
daa
push
mov
xorb
pop
and
je
out
inc
xchg
icebp
dec
xchg
out
mov
fsubrl
loopne
mov
mov
jo
push
sbb
aas
cwtl
pushf
cmpsb
push
popa
pusha
adc
jno
lds
sub
cmp
xor
enter
or
repz
ret
xor
mov
bound
xchg
adc
int
stos
call
push
push
jno
push
in
in
sbb
out
ljmp
bound
mov
les
pop
ljmp
dec
mull
scas
xchg
xchg
and
add
dec
or
xor
cld
repz
jb
shll
ljmp
movsb
push
push
add
sub
lret
orb
lret
pop
pop
cmp
mov
les
ljmp
mov
mov
daa
inc
sbb
dec
or
repnz
lcall
aaa
xor
fbld
add
lret
outsb
sub
mov
push
push
in
jbe
jmp
pusha
sbb
stos
cmpsb
jp
jbe
aaa
js
cmp
inc
xor
fstpl
int3
cld
aad
dec
push
mov
mov
push
sahf
mov
fdivl
xor
test
jno
inc
test
enter
sbb
ss
inc
test
inc
xchg
sub
outsb
jmp
mov
mov
cmp
call
subl
in
cli
movb
sub
add
filds
loopne
shll
push
push
mov
add
sub
pop
addb
fadd
dec
or
mov
push
rorl
dec
cs
pop
push
add
cmpsl
mov
mov
adc
mov
aad
and
fistl
sub
cs
jle
loopne
sbb
les
adc
cs
or
fisttpll
mov
xchg
das
in
pop
enter
std
push
xchg
jnp
pop
adc
mov
pop
sbb
push
mov
jge
push
jne
add
push
scas
sar
pop
ds
sub
out
data16
add
xchg
repnz
sbb
dec
mov
cwtl
ret
lock
or
inc
aaa
cmpsl
ds
mov
shrb
cmpsl
sbb
enter
mov
xchg
push
in
dec
cld
incb
sbb
sbb
es
mov
lods
mov
setbe
dec
lcall
es
cmpsb
rclb
pop
xor
sbb
sbb
inc
insl
test
lret
cmp
fs
repnz
je
mov
or
mov
cmp
xorl
adc
cmpsb
cmp
ljmpw
pop
cmp
and
dec
notl
cmp
std
push
dec
jecxz
mov
or
shrb
cs
jmp
int3
cli
insb
lea
mov
adcb
clc
in
push
clc
test
jno
xor
cmpsl
mov
bound
or
push
push
hlt
mov
out
dec
pop
mov
add
mov
pop
lcall
addb
into
dec
int
into
xor
mov
in
mov
jne
dec
into
cmp
inc
adc
sub
push
in
mov
aas
ljmp
and
and
pop
dec
sysexit
scas
ja
mov
mov
pop
dec
xor
xchg
hlt
adc
fcompl
pushf
or
dec
mov
jle
xor
ds
cmpsb
xor
enter
push
shll
adcl
cmp
out
jb
xchg
ljmp
out
sub
lods
fisttps
mov
in
test
mov
sub
cmpsl
je
mov
pop
cwtl
cld
mov
sub
pop
sub
add
jle
jbe
cmpsb
lock
dec
jbe
xlat
aaa
pop
and
gs
pop
mov
add
js
jae
data16
dec
mov
testl
out
es
std
push
dec
jecxz
dec
addb
pop
and
cmp
sub
push
outsb
xor
xor
cwtl
mov
xchg
mov
xchg
jno
pushfw
jp
cltd
adc
mov
dec
jecxz
sar
push
ds
ret
adcl
cmpsl
test
mov
ja
call
sbb
hlt
add
push
in
movsb
bound
in
lods
aas
cs
mov
testb
movsb
fidivrs
xchg
test
and
loope
es
in
cmp
xchg
stos
mov
xchg
add
push
jb
push
push
mov
push
mov
into
insb
mov
adc
adc
outsl
movsb
add
cwtl
jb
es
push
pusha
lret
les
lcall
inc
mov
dec
sarl
and
rcrl
repz
or
jp
inc
fdivrs
fdivrl
nop
cmpsl
dec
sbb
xor
xchg
sub
ds
push
stos
mov
fimuls
inc
adc
push
aas
push
xchg
or
cli
push
out
pop
inc
sbb
xchg
jl
mov
fisttps
xor
sub
sub
push
adcb
adc
ret
cmpsb
mov
or
or
xchg
rcll
xchg
repnz
sub
test
addr16
fisubs
push
fs
lret
cwtl
cld
pop
stos
mov
add
pushf
es
test
lcall
jno
into
sbb
jne
ss
and
insl
push
pop
subb
subl
int3
push
xchg
mov
stos
fisubl
or
mov
in
mov
xor
inc
jo
dec
mov
xchg
lds
mov
jno
sub
dec
push
dec
add
dec
mov
nop
cmpsl
mov
stos
data16
add
jp
cltd
adc
jae
mov
mov
daa
push
sbb
cli
push
rolb
mov
fimull
and
in
mov
int3
push
inc
jo
push
mov
cwtl
xchg
jo
outsl
ja
and
mov
cltd
push
dec
add
stos
shll
sub
int3
adc
test
push
jbe
push
in
xchg
push
xor
data16
inc
ror
pop
call
inc
pop
jbe
push
push
jo
push
in
test
mov
adcb
and
pop
sbbb
pop
dec
lahf
int3
adc
jmp
cmp
jecxz
sbb
mov
hlt
sub
mov
call
sub
lahf
call
clc
movsl
ljmp
ficoml
fcomp
loope
mov
push
lea
outsl
movsb
mov
sub
arpl
xchg
aas
ja
loopew
xchg
or
cwtl
push
cmp
fcmovbe
jo
jo
loope
mov
mov
mov
ja
and
mov
cltd
push
dec
add
dec
lahf
mov
fistl
mov
mov
in
sbbl
xor
jg
test
je
pop
xchg
mov
aas
ret
inc
les
outsl
movsb
push
lret
pop
sbb
bnd
xor
into
popa
xor
or
test
stos
mov
insb
jmp
test
push
arpl
out
fwait
rorl
clc
add
push
ret
xchg
xlat
pop
sahf
inc
mov
loopne
ret
sub
lods
adc
movups
das
jmp
popf
out
jp
mov
les
hlt
pop
fdivr
pop
pop
adc
cltd
mov
loop,pn
push
cli
xchg
mov
xchg
ds
push
test
jb
and
add
add
fnstcw
mov
pop
das
dec
add
ds
out
mov
sub
sub
pop
fbstp
mov
mov
loop
pop
ljmp
sub
cs
out
mov
cmpsl
jle
in
xchg
jge
int3
dec
add
pop
add
cmpsb
mov
add
and
out
outsb
pushf
and
in
lods
lods
cmpsb
dec
gs
inc
leave
xchg
add
mov
cs
mov
cmp
mov
ss
push
sbb
adc
stos
push
push
dec
enter
popa
pusha
adc
rcrb
inc
xor
pop
inc
sub
dec
cmp
aam
dec
jbe
adc
dec
cwtl
imul
xor
sbb
gs
xchg
mov
bound
ja
push
dec
mov
sarl
push
cmp
pushw
add
js
stos
mov
movsb
pop
into
push
xchg
jl
outsl
ja
and
mov
cltd
push
dec
add
stos
shll
sub
int3
cwtl
loopne
dec
jbe
push
push
jbe
push
in
cwtl
push
ljmp
pop
push
dec
mov
daa
push
sbb
pop
mov
push
hlt
inc
adc
xchg
data16
mov
loopne
inc
jo
pop
xchg
fisttps
push
fisttpl
shrl
pop
and
jmp
ja
test
nop
push
inc
jo
dec
ds
in
sbb
pop
loope
fucomip
adc
jl
mov
les
in
in
adc
data16
cmpsl
je
mov
hlt
or
push
in
inc
xchg
ds
xor
inc
xchg
cmpsb
pop
pop
dec
xchg
ljmp
daa
aas
mov
xor
out
cli
stos
pop
inc
sbb
lea
lock
and
mov
and
mov
xchg
dec
and
movsb
mov
add
es
cs
sti
mov
mov
dec
clc
push
cmp
cmc
jp
dec
adc
cmp
mov
jbe
stos
call
popa
pusha
sbb
lret
int
loope
test
aaa
add
lcall
es
fisubl
mov
ja
dec
adc
mov
jmp
inc
cld
out
dec
cld
pop
into
fdivr
or
xchg
scas
enter
shll
and
inc
inc
inc
loope
aam
aas
mov
pop
jne
js,pn
jle
repnz
aas
movsb
shll
stos
mov
dec
or
repz
jmp
jge
aaa
into
outsb
mov
pop
inc
pop
ds
pop
shr
push
lret
clc
call
aaa
xor
and
push
lock
mov
jl
test
xchg
sub
mov
cwtl
cmp
out
loop
sub
dec
xor
pop
xchg
sub
push
inc
sub
push
lea
sbb
jno
pop
inc
mov
out
mov
bound
push
lock
dec
xor
call
ret
lods
cmpsb
cwtl
arpl
fcom
push
icebp
xchg
outsb
mov
subl
ljmp
aaa
fmull
mov
dec
sahf
adc
mov
cmc
out
jp
lahf
dec
cld
mov
loopne
xor
pop
cmp
movsb
mov
mov
mov
push
xchg
xchg
pop
test
pusha
or
dec
adc
test
pop
aas
xlat
inc
les
popa
das
jbe
mov
xchg
data16
push
ja
mov
aam
inc
jo
lret
mov
std
push
outsb
pop
inc
xor
jl
jae
cli
stc
cs
inc
ja
fcompl
jo
into
push
hlt
stc
insb
dec
mov
adc
fcoms
jbe
xchg
adc
int
bnd
push
stos
lock
push
jno
push
ds
mov
les
lcall
hlt
mov
dec
mov
in
mov
or
cmp
add
mov
xor
add
adc
lds
loopne
inc
inc
loope
aam
pop
add
dec
subb
push
sub
adc
mov
sbb
adcl
mov
adc
aas
adc
or
jbe
shl
lret
cld
and
xor
xlat
or
add
xchg
fimuls
ja
test
xor
or
push
dec
push
fcompl
loopne
cmp
dec
mov
setbe
dec
push
sub
mov
adc
dec
les
lahf
enter
pop
outsb
push
in
mov
inc
fs
aas
out
shll
lret
pushf
cli
cld
std
pop
xchg
sbb
pop
mov
or
mov
or
rcll
flds
ljmp
mov
inc
cmpsb
jae
push
push
cmc
inc
pop
cltd
pop
sahf
jne
cli
or
mov
cmp
add
scas
dec
pushf
test
pop
sub
mov
fldenv
cmc
mov
xchg
into
frstor
adc
in
mov
sti
lret
out
enter
sub
nop
ror
pop
push
sub
or
xchg
into
add
pop
cli
xchg
xchg
and
add
dec
or
xor
cld
repz
jns
xchg
mov
ljmp
aam
into
xor
fidivs
jno
or
add
add
sub
pop
insb
sub
js
inc
dec
outsb
pop
sahf
fdivr
cmp
pop
clc
adc
or
ds
aaa
or
jl
jg
fldcw
pop
pushf
movl
pop
mov
cltd
mov
pusha
stos
and
mov
add
cmp
stc
cwtl
cmp
inc
dec
push
test
sti
xchg
psrld
cs
add
fnstenv
lea
xor
inc
ljmp
cltd
into
cmp
lods
inc
xchg
addb
sub
xchg
mov
jmp
dec
fadds
push
nop
stos
pop
or
sbbl
cmp
push
add
mov
add
sbb
mov
cmp
cmpsb
inc
sub
pop
xlat
mov
stos
sub
ds
fcoml
imul
inc
jae
cwtl
xchg
fs
ja
and
mov
cltd
push
dec
add
popa
imul
cmp
pop
insb
adc
les
or
cmp
xor
pushf
daa
jle
test
adc
popa
mov
fs
lcall
lock
dec
ds
xchg
pop
mov
mov
push
mov
xlat
pusha
add
sbb
jmp
lods
cmp
in
and
pop
fidivrl
in
in
imul
cld
jp
cltd
mov
mov
cltd
add
nop
pop
xchg
mov
fcmovb
dec
pop
dec
add
dec
sbb
fwait
cmpb
mov
add
jno
data16
push
cltd
adc
scas
out
mov
push
in
mov
xor
jb
push
in
mov
pop
ljmp
outsb
mov
adc
pop
inc
xchg
mov
lea
jae
int3
adc
jl
mov
out
push
in
les
mov
sub
cmpsl
je
mov
pop
cwtl
cmp
testl
mov
sub
pop
and
pop
scas
inc
dec
gs
add
hlt
mov
fmull
jg
leave
push
push
xlat
push
pop
lock
movsl
push
popf
daa
hlt
pop
jle
test
inc
loop
and
cmp
jno
addl
inc
sub
in
adc
aas
xchg
inc
inc
loop
les
cli
into
and
inc
jno
or
mov
jmp
push
in
jbe
cmp
add
push
adc
out
call
call
test
adc
push
dec
mov
daa
push
sbb
mov
push
je
adc
fcmovu
cmp
insb
mov
in
mov
pusha
push
inc
jo
lcall
mov
inc
dec
ret
adcl
mov
jno
pop
xchg
cltd
adc
xchg
inc
push
cwtl
rorl
adc
in
repnz
js
pusha
sbb
frstor
adc
bound
cltd
stos
out
mov
les
mov
shrb
pop
enter
mov
jb
rolb
pushf
or
rorl
mov
and
les
sti
pop
push
mov
test
lret
inc
or
mov
push
aam
sub
aam
bound
pop
xchg
sub
repz
shlb
push
insb
aam
aam
data16
cmpsl
je
in
xchg
mov
repnz
push
pop
xchg
push
in
lock
inc
lret
pop
lahf
lods
adc
call
pop
sbb
repnz
fstpt
loopne
dec
ljmp
test
es
je
adc
push
or
push
xchg
shl
pusha
pusha
insl
mov
jecxz
je
and
fwait
jno
push
divb
out
popa
dec
mov
xor
dec
or
mov
in
jle
xor
sbb
ljmp
xor
enter
movsl
mov
lods
push
jno
push
fldl
dec
pop
pop
mov
loopne
pslld
or
sub
negl
pop
push
cltd
adc
jae
mov
mov
daa
push
sbb
jp
sahf
jo
cli
push
nop
inc
adc
fisubrl
add
in
mov
mov
inc
jo
push
call
adc
xor
lret
pop
bound
stos
shll
sub
int3
je
test
push
jbe
push
in
aam
adc
shlb
push
push
mov
push
push
mov
mov
cli
push
sub
fld
outsl
insb
pop
mov
repnz
xor
rcll
std
fidivrs
pop
neg
xchg
adc
dec
dec
fldenv
xor
jge
fdivrs
seto
push
mov
jbe
mov
jnp
or
mov
add
mov
shl
add
xchg
sub
sub
and
or
sub
insl
out
rcrl
jp
lahf
pushf
cwtl
mov
cmp
sub
aad
xchg
or
pop
xor
push
add
outsl
dec
sahf
or
mov
into
jae
cwtl
xchg
int3
sbb
das
loope
or
dec
adc
mov
pop
aas
xlat
inc
shr
das
or
inc
sub
jecxz
xchg
inc
push
cs
popf
dec
mov
fdiv
xor
mov
ja
add
push
dec
mov
daa
push
sbb
mov
push
mov
xchg
adc
mov
hlt
test
hlt
rorb
mov
push
push
jno
test
ljmp
cltd
shll
sarb
imul
xchg
fcompl
mov
fsubrl
or
bound
xchg
adc
hlt
sahf
inc
std
push
dec
jecxz
pop
shl
dec
addb
rolb
mov
jo
rorw
mov
and
cmpsb
mov
push
mov
sbb
or
add
sub
adc
outsb
and
gs
xor
inc
mov
or
pop
ljmp
cmpsl
cmpsl
fildll
mov
add
fbstp
push
in
es
pop
fdiv
icebp
mov
enter
aam
mov
ss
adc
dec
mov
dec
jo
int3
bound
or
decl
jbe
movsb
fimull
pushf
pop
mov
dec
addr16
and
xlat
mov
ds
enter
mov
in
xchg
setae
mov
jmp
ss
sub
insb
dec
cmp
or
mov
insl
push
adc
mov
mov
dec
xlat
test
mov
not
les
xchg
out
push
mov
mov
outsb
pushf
test
je
mov
push
mov
mov
jno
pop
push
xchg
xchg
and
add
dec
or
xor
cld
repz
sbb
push
sbb
jno
inc
jp
cltd
adc
test
jmp
inc
fmull
out
mov
pop
insb
sub
in
inc
push
outsb
pop
or
cld
cmp
pop
pushf
adc
mov
lahf
lea
inc
sbb
xchg
scas
insb
movsb
mov
add
es
cmp
int3
sub
int3
scas
mov
sbb
cmp
push
jbe
push
in
les
mov
sbb
mov
cmp
icebp
movsb
mov
icebp
mov
or
add
aam
cmp
push
in
xor
adc
fs
jmp
fwait
and
dec
cmp
push
dec
fcmovnu
push
sbb
flds
into
dec
sbb
cmp
push
cltd
stos
xchg
imul
sub
lcall
dec
cwtl
adc
testb
imul
pop
insb
pop
jl
pusha
mov
movsb
cmp
fwait
lret
cs
repz
cmp
bound
aaa
and
sbb
sbb
mov
stos
push
push
cmpxchg
int
dec
pop
pop
in
rcrb
inc
xor
pop
inc
sub
add
out
ror
xor
aam
push
dec
psrad
dec
jl
inc
std
sub
popf
shrl
mov
js
mov
xchg
mov
dec
adc
movsl
add
dec
or
xor
cld
repz
jg
mov
mov
ljmp
and
int
pop
int
dec
pop
push
add
jle
dec
adc
cmp
aam
ret
mov
ret
xor
pop
mov
orb
dec
dec
call
test
loopne
jbe
mov
mov
mov
daa
push
adc
adc
jmp
int3
cli
dec
mov
scas
adc
mov
hlt
inc
dec
hlt
dec
dec
fmuls
or
cmp
out
loopne
xor
loopne
add
cwtl
shll
fwait
scas
insl
pop
enter
movsb
hlt
xor
int3
pop
xchg
mov
cltd
int3
in
movsb
push
push
lea
add
mov
bound
push
fisubrl
xchg
add
in
nop
aas
or
mov
lahf
nop
push
data16
jnp
sub
cmpl
jno
mov
xor
pushf
in
dec
cmp
ja
cmp
test
inc
aas
les
pop
add
push
jns
hlt
loope
mov
inc
adc
testl
fnstenv
dec
cmp
xor
movsl
mov
arpl
hlt
mov
push
add
es
push
aas
stos
mov
push
pushf
push
inc
jbe
xlat
sbb
sbb
xor
popa
sub
xor
jns
cmp
cmp
xor
in
daa
jle
test
adc
call
adcb
jbe
xlat
sbb
add
movsl
aas
add
mov
jle
je
fistps
pop
fld
subb
mov
mov
jno
sub
enter
dec
add
dec
jle,pt
loope
add
repz
out
scas
mov
les
fsts
or
jge
pop
fs
pop
in
push
jo
cs
or
push
mov
jo
cli
push
movsb
inc
adc
jo
es
rclb
mov
pop
sahf
cmp
mov
in
sbbl
cli
lcall
mov
imul
add
add
in
sbb
orl
dec
mov
movsb
sub
stos
mov
cltd
icebp
mov
hlt
sbb
inc
xor
xchg
sub
fidivs
les
call
out
mov
jge
fdivs
add
dec
mov
and
sbbl
cwtl
or
add
sbb
aas
cmpsb
shr
push
out
outsb
pushf
and
cmp
add
push
in
cmp
inc
mov
jle
andb
sarb
cld
test
sbb
je
dec
jae
mov
xorl
popa
xor
xchg
lds
pop
lock
fmuls
mov
inc
pop
xor
fsubrl
adc
sub
out
or
adc
inc
jp
dec
jne
push
add
push
and
push
rcrl
adc
addr16
fwait
sub
call
loope
insb
xchg
mov
mov
ds
hlt
orb
fs
pop
shrb
or
test
std
pop
pop
int
repnz
or
mov
es
jo
push
mov
popf
pop
arpl
xchg
cld
repz
sub
pop
fcomps
popf
out
jp
into
sbb
out
faddl
fwait
pop
pop
cltd
adc
inc
aam
fdivr
out
sar
inc
fdivr
or
xor
xchg
inc
shrb
mov
ljmp
mov
out
sar
pop
jbe
decl
push
pop
addr16
add
sbb
xchg
cwtl
jge
movsb
das
mov
pop
pop
or
nop
aam
dec
push
push
xor
push
cmpsl
inc
push
mov
and
lock
pop
pop
push
pushf
test
push
cld
cwtl
mov
xchg
aad
jns
or
add
xchg
jo
pop
push
mov
sub
lock
bound
mov
jecxz
jb
xor
roll
mov
push
and
fs
outsl
mov
sub
dec
push
mov
cmovp
inc
or
xor
pop
loope
xchg
cmp
aas
xlat
inc
les
jmp
das
jbe
mov
jnp
data16
cwtl
bound
in
mov
xor
fs
cltd
lods
imul
ret
add
cli
sub
jae
xchg
push
adc
popa
cli
mov
je
inc
cmp
and
push
popa
pusha
adc
pop
xchg
jp
push
mov
popa
mov
fs
into
lcall
movsb
mov
dec
or
fistpll
bound
jae
and
rolb
test
sub
adcl
jnp
pop
arpl
cmpsl
mov
sti
stc
cs
jno
testl
fildl
repnz
dec
shll
stos
mov
jl
rolb
test
in
aad
sbb
inc
ret
and
fdivrl
mov
pop
das
dec
add
ds
mov
out
mov
sub
sub
les
jge
ret
out
cmp
or
mov
mov
movsl
aas
fimull
adc
ljmp
lcall
pusha
dec
xor
js
sub
adc
cld
jl
stos
lods
mov
adc
inc
sbb
insb
dec
sbb
in
dec
test
rorl
add
repnz
lods
out
mov
stos
int3
loopne
cmp
insb
lret
add
test
and
insb
jl
push
inc
nop
lahf
addr16
lods
adc
cmp
sbb
sbb
and
xchg
repz
movsl
cmpsb
dec
push
orb
cmp
add
cs
mov
movsl
repnz
pusha
adc
enter
jbe
push
push
jbe
push
in
pop
push
mov
jg
test
xor
jmp
inc
fmull
repnz
loope
cmpsl
int3
cli
push
mov
cmpsb
adc
mov
hlt
xor
hlt
cmp
mov
push
adc
jb
dec
fdivs
outsb
and
dec
ret
adcl
mov
cs
jle
out
xor
mov
sub
nop
in
sub
cwtl
mov
rcrl
call
shlb
lods
insl
dec
xlat
test
mov
out
dec
pop
jl
jno
or
add
shll
cs
pop
call
aam
mov
xchg
jp
cltd
mov
roll
cs
in
add
mov
mov
mov
into
xor
adc
rorb
bound
mov
jle
in
adcl
or
adc
mov
outsb
mov
mov
sarl
nop
sbb
lock
push
es
inc
js
fisubl
xorl
pop
cs
mov
jns
imul
xlat
scas
std
cmpsb
jle
fstps
loop
xor
sbb
mov
push
movsb
rolb
push
sbb
call
or
push
test
fcomps
hlt
aam
mov
xchg
or
cs
shlb
sub
inc
cmp
adc
mov
sub
or
push
test
mov
cmp
or
push
fadd
popf
sub
and
repz
pusha
lret
lret
mov
loope
mov
or
cmpb
add
stos
mov
psrad
aas
xchg
ds
jge
add
aam
and
int3
adc
in
xor
rorb
lcall
icebp
leave
pop
sbb
ljmp
cltd
shll
sarb
imul
sub
adc
pop
repnz
and
bound
les
jbe
sahf
add
adcl
push
icebp
int3
push
test
xchg
iret
aaa
inc
stos
rcr
dec
mov
aaa
add
xchg
and
hlt
ret
dec
mov
mov
jle
test
lock
shl
push
cwtl
jnp
imul
pop
push
sub
fs
orb
enter
pop
int
repnz
or
mov
es
inc
jb
push
pop
les
inc
cmpsl
pushw
dec
mov
and
shrb
mov
inc
or
cmp
xchg
and
add
rorl
xchg
pop
rorl
enter
inc
push
sub
fcomp
and
sbb
in
ljmp
std
cmpsl
mov
cmp
and
outsb
and
jp
es
inc
iret
nop
shll
into
daa
xchg
repnz
xor
stos
sub
sti
mov
and
movsl
fs
cld
cmp
lcall
fstpt
cmpsb
test
jb
jp
mov
and
test
jl
fs
mov
test
js
outsb
pop
into
enter
sti
dec
in
pop
clc
jmp
add
out
jp
and
les
mov
cs
pop
faddl
andb
adc
xor
pop
adc
fists
fwait
aad
add
cmpsb
ret
pop
xor
cli
mov
dec
rorl
ds
les
lods
ljmp
xchg
push
sub
shrl
jmp
inc
fmull
repnz
xor
jmp
int3
cli
mov
aas
pop
adc
mov
hlt
xchg
dec
hlt
pushf
dec
enter
push
shll
pop
in
in
test
jae
mov
orl
les
repnz
jle
rol
fcompl
mov
cwtl
cwtl
jge
pop
inc
je
or
or
xchg
test
push
jo
jle
or
push
or
movsl
cmpsb
sub
cmpsl
jp
dec
mov
hlt
pop
mov
decl
cli
xchg
sub
and
and
sub
scas
out
pop
cwtl
test
out
inc
and
mov
sub
and
insb
movsb
jno
pop
or
insl
push
inc
adc
mov
dec
xlat
test
mov
neg
add
mov
cmp
ljmp
cmp
test
cmpsb
inc
jne
jae
mov
mov
daa
push
sbb
cli
push
mov
shrb
mov
mov
push
inc
jo
lcall
xchg
das
in
repnz
jecxz
add
xchg
repz
lahf
mov
sub
hlt
cmp
ret
jecxz
sar
sub
shr
push
int3
pushf
dec
cmc
dec
inc
data16
fs
orb
ret
jmp
adc
xchg
fsubs
in
and
dec
je
sub
dec
jle
dec
insb
mov
adc
sub
lret
pop
lret
into
mov
ss
pusha
lret
sbb
into
pop
fistps
adc
bound
jb
stos
and
movsl
call
int3
dec
jbe
shrb
daa
mov
cwtl
cwtl
rol
or
adcl
pop
std
rorb
loope
pop
adc
pop
mov
mov
mov
fidivl
fcoml
jb
push
push
popa
and
outsl
pop
mov
fsubs
lea
xor
repnz
pusha
insl
mov
jecxz
test
jae
push
mov
mov
seto
repnz
sbb
out
lods
sahf
call
lahf
add
nop
cmp
repnz
pop
or
in
icebp
aam
jb
mov
mov
push
mov
mov
seto
loop
test
cmp
cltd
adc
inc
cmp
push
mov
adc
cld
xor
add
das
jmp
or
push
add
cmpsl
test
mov
dec
movsl
rcr
cmp
inc
ljmp
jle
hlt
mov
cmp
xor
stos
mov
out
sub
pop
cmpb
dec
push
jecxz
loopne
in
mov
inc
add
push
ds
hlt
fs
jbe
push
jne
in
cmp
xor
ret
push
enter
xorl
pop
inc
aad
lcall
test
dec
sub
les
push
xor
cwtl
dec
cld
repz
xor
call
mov
ret
cmp
lcall
lgdtl
jbe
xlat
stc
pop
add
test
push
flds
pop
test
fistps
pushf
adc
in
sahf
aad
and
jb
outsb
pop
outsb
stc
sbb
push
adc
push
dec
and
inc
push
adc
jbe
imul
pop
insb
movsl
mov
push
dec
ret
adcl
mov
cs
ja
out
xor
popa
stos
mov
sub
fs
sub
insb
mov
rcrl
fidivl
in
add
dec
or
std
pop
pop
int
repnz
or
mov
fdivs
push
inc
loop
arpl
add
repz
sub
pop
test
fistps
imul
sub
jno
pop
cs
adc
mov
into
pop
mov
mov
sbb
mov
jbe
lods
movsl
mov
cld
movsl
add
mov
test
pop
jae
daa
cmpsl
mov
sti
stc
cs
sbb
push
mov
jge
imul
les
in
js
ret
xchg
lret
or
cs
xchg
int3
or
ficompl
dec
mov
rorb
lret
add
clc
ljmp
rcll
cmpsl
stc
ljmp
les
cmp
inc
adc
mov
vucomiss
inc
sub
xchg
inc
fimuls
mov
xlat
add
or
inc
insl
xchg
out
add
mov
cmpsb
dec
mov
icebp
and
mov
lods
lods
xchg
dec
sbb
aam
out
icebp
mov
mov
leave
or
andb
outsl
es
and
inc
cmp
dec
mov
cmp
add
mov
test
pop
fnstsw
rolb
outsb
adc
fbstp
clc
test
mov
lcall
call
mov
mov
out
cld
xchg
pop
push
out
xor
xchg
aas
mov
jns
push
mov
cwtl
and
int
inc
test
jb
pop
xchg
sub
outsb
jmp
mov
mov
sbb
xor
mov
fistpll
mov
cli
jmp
sbb
std
push
mov
dec
gs
mov
cmp
jo
call
shl
and
sub
ja
mov
mov
sub
sub
roll
movsl
sarl
in
xor
push
movl
jle
add
push
jmp
daa
inc
mov
and
fwait
jno
fs
aas
ret
inc
les
outsl
movsb
pop
shrb
in
pop
mov
fs
cwtl
mov
loopne
js
les
mov
mov
mov
daa
push
sbb
cli
push
rolb
xchg
dec
shrb
mov
in
mov
cld
push
inc
jo
stos
dec
movsb
push
cld
movsl
mov
test
stc
sub
xor
movsl
mov
addr16
sub
mov
inc
push
jge
pop
arpl
popf
pop
arpl
pushf
push
cld
repz
sarb
hlt
jb
or
pop
inc
sahf
sbb
cmp
pop
cwtl
cld
adc
hlt
jle
stc
mov
cmp
jb
bound
and
pop
pop
xor
cwtl
mov
js
in
push
shrb
xor
out
push
pusha
pusha
insl
mov
pop
cld
jo
fmuls
mov
jbe
xor
lock
add
jp
jge
cmp
xchg
jge
and
in
idiv
xor
xchg
or
stos
mov
push
ret
subb
movsb
pop
mov
lret
jp
pop
cmpsl
mov
mov
jno
fnstenv
push
ds
or
pop
bound
ja
test
nop
and
das
inc
inc
rolb
lods
pop
xchg
mov
add
jmp
int3
cli
les
sub
inc
pop
pushl
jecxz
in
jbe
cmp
add
push
push
pushf
xor
push
inc
mov
stos
mov
lcall
lds
push
mov
sub
cs
mov
mov
ljmp
and
out
adc
push
mov
rcrl
mov
orl
in
imul
inc
inc
inc
loope
aam
aas
mov
adc
lret
enter
lcall
jl
sbb
mov
push
es
out
add
pop
cli
fdivr
in
dec
cmpb
push
or
push
loop
adc
sub
in
push
xchg
or
pushf
cli
cmp
shll
flds
cmp
sahf
pop
push
dec
stc
push
mov
pop
or
jmp
test
pop
jb
rclb
out
push
dec
jecxz
sub
addr16
pop
sbb
stc
mov
cwtl
mov
das
and
nop
push
pop
mov
rcrl
ret
das
int
inc
test
jno
pop
xchg
sub
outsb
jmp
mov
mov
cmp
out
add
fwait
pop
mov
inc
cmp
cld
pop
mov
decl
sub
lds
xor
aam
push
pop
insl
dec
add
dec
mov
cwtl
cmpsl
mov
mov
pushf
fs
scas
mov
jne
inc
sbb
cltd
lods
imul
mov
fadds
decl
push
jae
xchg
movsb
les
cli
mov
je
pop
lret
lds
or
js
std
pop
pop
int
repnz
sub
mov
inc
push
imul
arpl
popf
pop
arpl
dec
cld
repz
jno
cmp
pop
ljmp
jne
dec
cmp
push
andl
jae
xchg
aam
sub
leave
adc
decl
lds
pop
cmp
mov
push
pushf
das
ds
clc
nop
rol
or
mov
cltd
fstpt
mov
xchg
shr
dec
lahf
mull
mov
xor
jl
in
cwtl
ret
dec
mov
test
lock
dec
sub
bound
adc
xlat
adc
mov
es
or
in
pop
test
mov
or
xchg
jmp
push
adc
mov
shll
sti
decb
lea
mov
sub
cmc
mov
pop
insl
ret
pop
dec
push
bound
mov
mov
loop
sub
push
imul
mov
pop
lds
lds
push
cmp
mov
aaa
add
cltd
gs
ret
and
in
xchg
aam
fxch
push
mov
jg
mov
sub
xchg
adc
ja
adcl
mov
test
test
je
pop
xchg
mov
pop
loopne
pop
inc
sub
shrb
call
cmp
loope
cmp
cmc
orl
mov
xor
mov
and
adc
inc
stos
lds
or
dec
adc
mov
jge
outsl
lret
fadds
jbe
xlat
ficomps
add
add
jle
and
call
stos
mov
out
sub
pop
add
xorl
push
ja
mov
or
cs
pop
les
fsubs
in
stos
shl
ja
inc
test
adc
and
inc
jle
mov
dec
es
out
or
movsl
rorl
test
je
mov
xchg
mov
inc
sar
mov
jb
ret
and
xchg
xor
and
dec
sub
pop
cmp
enter
fcomps
mov
les
test
scas
cld
mov
mov
mov
stos
mov
incb
xchg
jnp
pop
xlat
filds
xorl
negl
fdivr
cmp
push
cld
cmp
xor
aam
dec
jbe
inc
or
xor
jecxz
sar
push
mov
jne
out
jns
pop
mov
imul
ret
cwtl
mov
cwtl
jge
imul
inc
xchg
add
xor
xchg
stos
shrb
sub
es
pop
push
fcoms
xchg
mov
out
dec
add
dec
push
jle
fwait
andb
sbb
add
dec
cltd
pop
arpl
lock
cmp
subb
movsb
pop
int3
pop
fistps
pop
fsubs
out
rolb
pop
dec
cltd
adc
xchg
rorl
fistpl
xchg
mov
jge
test
je
pop
xchg
mov
jae
nop
movsb
ja
divb
mov
sbb
in
fsubs
in
loopne
outsb
adc
sbb
aas
push
sbb
iret
dec
add
mov
jp,pn
pushf
adc
push
hlt
hlt
aas
xchg
cli
mov
add
int3
lahf
shrb
dec
lds
insb
popf
sub
ret
das
call
inc
lock
push
jno
push
push
push
scas
call
in
dec
repz
xchg
jle
or
fsub
push
mov
out
mov
push
or
xchg
adc
adc
push
hlt
cs
dec
or
fdivr
sub
xor
jle
adc
popa
mov
fs
lcall
mov
sbb
jmp
rcrb
shl
pop
test
in
call
inc
xor
daa
inc
sub
jo
add
inc
pop
jne
mov
sub
xchg
adc
pop
fadd
jecxz
les
jbe
sahf
add
daa
push
mov
inc
aas
add
pop
jno
addr16
loope
aam
push
xor
sub
add
push
dec
inc
or
stos
xchg
add
mov
sub
mov
adc
cmp
aad
xchg
sub
push
inc
aaa
jle
dec
adc
cmp
movsb
xchg
and
jp
or
int3
or
mov
jg
data16
data16
jae
pop
ljmp
sbb
pop
sub
cmpsb
cmp
loop
sbb
les
repnz
dec
test
mov
sub
cltd
sarl
in
xchg
cmp
and
imul
jno
fsubl
aaa
pop
add
jg
fldl
mov
push
push
cmc
inc
jnp
jle
in
enter
cli
lods
xor
mov
pop
push
ljmp
pushl
pop
jb
xor
pop
pop
in
rcrb
inc
xor
pop
inc
sub
fs
dec
push
outsb
pop
mov
cld
cmp
pop
pushf
adc
cmp
sub
xchg
mov
inc
jne
jae
mov
mov
daa
push
push
mov
data16
mov
std
push
into
out
sub
dec
pminsw
popf
pop
arpl
pushf
nop
cld
repz
sub
pop
and
fistps
out
cmpsl
mov
mov
jno
pop
push
cltd
adc
inc
rcrb
cld
repz
je
pop
stos
jno
mov
mov
and
or
jno
pusha
mov
or
and
jp
fwait
xorb
or
pop
mov
mov
jp
cltd
adc
mov
rcrb
data16
jae
les
sub
inc
adc
add
jno
cmp
scas
inc
sub
jb
or
adc
cmpsb
cli
xor
enter
lcall
xchg
add
push
int
dec
xor
in
in
mov
cmp
pop
inc
orl
adc
addb
sbb
xchg
mov
cwtl
mov
sub
mov
jae
pop
dec
pusha
cmpsb
xchg
push
mov
mov
mov
daa
push
sbb
cli
push
xchg
dec
adc
cmp
in
bound
in
cmpb
adc
inc
dec
cmp
mov
mov
popa
adc
icebp
in
loop
cs
rorl
cwtl
mov
ja
ds
shlb
jae
pop
push
loopne
das
call
inc
lock
push
jno
push
cmpsb
inc
scas
call
loope
insb
xchg
cwtl
jge
mov
pushf
fdivr
pop
xor
cld
pop
or
cmp
test
shr
adc
insl
push
pop
addb
imul
jle
push
outsb
mov
jne
jl
mov
mov
adc
aas
test
shrb
cmpsb
push
scas
mov
dec
add
pop
push
mov
test
lret
rorb
sbb
or
std
push
push
enter
clc
mov
jns
int3
xor
sbb
mov
pop
add
cmpsl
mov
and
sbb
insl
movsb
sahf
add
cmpsb
aam
call
cbtw
cmp
aam
ss
nop
mov
das
lret
xchg
faddl
add
xchg
adc
push
mov
jo
mov
xor
in
sub
repz
xchg
lcall
imul
xchg
fisttpl
xor
xchg
sbb
mov
mov
flds
aas
imul
insb
test
loope
insb
dec
mov
xchg
push
data16
movsb
jecxz
jno
fmull
adc
push
addr16
in
pop
insb
dec
lea
enter
xchg
dec
aad
jb
out
xor
popa
cli
mov
sahf
sub
stos
fcmovu
cmpsl
push
shufps
icebp
inc
or
jmp
rcl
cmp
and
dec
je
mov
cmp
mov
data16
adcl
bound
mov
repz
test
push
sub
cmovg
cmp
aam
ret
insb
stos
popa
adc
es
je
dec
adc
js
les
mov
mov
mov
daa
push
sbb
mov
push
rolb
xchg
dec
shrb
mov
ja
mov
jbe
push
inc
jo
ljmp
jecxz
rcl
inc
stos
xorb
test
pop
rol
jo
negb
dec
mov
pop
in
add
movsl
aas
add
mov
jle
adc
imul
adc
sub
outsl
push
cld
jbe
nop
sub
cwtl
mov
or
pushf
jge
adc
inc
pop
popf
gs
loop
inc
cld
cmp
jno
push
add
jg
inc
popa
lock
daa
adc
test
shrb
jg
popa
jmp
jbe
sub
jge
aas
cmc
movsl
sarl
push
lock
pushw
clc
mov
mov
ret
popa
pusha
sbb
frstor
adc
fs
xor
ja
mov
pop
xor
in
pop
cmp
sbb
and
sbb
xchg
scas
insb
movsb
mov
add
es
or
movsl
sarl
adc
or
adc
in
mov
mov
jle
fmuls
xor
test
shrb
jl
popa
jmp
int3
cli
xor
clc
fwait
and
push
pminsw
dec
lock
xor
cmpsb
jno
jno
or
add
add
mov
call
loope
insb
xchg
cwtl
jge
stc
pop
orb
mov
or
xor
bnd
out
cwtl
jo
push
rcll
loop
ljmp
rolb
shrl
aaa
cmpsl
dec
pop
out
lcall
or
cmpsb
and
xchg
loope
xchg
into
adc
push
xor
pop
adc
dec
mov
adc
pop
xor
lea
adc
ljmp
cltd
into
cmp
lods
inc
in
add
sub
mov
cmpsl
jmp
dec
add
mov
or
rcrb
push
pop
inc
adc
dec
stos
rclb
bound
mov
icebp
or
pop
mov
push
push
push
sub
pop
dec
cmp
add
push
aaa
and
xchg
push
lcall
xchg
jmp
xchg
out
xor
mov
xchg
xchg
xorl
adc
add
inc
cmp
cmp
xlat
je
or
pop
push
xor
outsb
imul
jae
xchg
add
popa
cli
mov
je
push
sbb
pop
shll
ret
mov
mov
dec
scas
mov
or
mov
data16
loopne
add
jp
cltd
adc
fucom
aam
push
mov
push
add
pop
adc
mov
pusha
or
add
mov
pop
sbb
cld
pop
adc
shlb
mov
xchg
das
call
mov
shll
test
mov
xchg
jbe
subb
lret
jb
into
sub
push
inc
arpl
pop
test
xor
test
push
jno
jae
mov
sub
in
out
jb
cwtl
in
adcl
push
push
cld
and
add
jg
call
mov
sbb
and
add
mov
xorl
mov
mov
mov
mov
xchg
fists
mov
enter
cmp
mov
repnz
iret
jg
add
sub
icebp
cs
sti
mov
pop
pop
dec
es
inc
fcoms
aas
aam
mov
sbb
sbb
mov
insb
pop
aad
stos
jg
push
adc
pop
clc
dec
in
testb
imul
andb
mov
pop
xor
pop
movups
out
pusha
clc
or
or
inc
mov
in
sub
jo
in
fsubrs
cmpsb
adc
into
lea
fbstp
push
inc
pop
rcrb
sub
pop
addl
sub
and
and
out
scas
loopne
mov
fcmove
push
test
les
mov
arpl
call
mov
mov
arpl
int
je
inc
mov
xor
pop
popa
enter
adc
loope
popa
xor
or
mov
inc
repnz
or
mov
add
rolb
test
insb
push
add
in
aam
lret
add
pop
cmp
cli
push
sub
mov
inc
xor
xor
push
sub
sbb
mov
or
mov
mov
fdivl
adc
push
pop
and
mov
loopne
cld
add
add
push
fs
lcall
ljmp
push
popw
aam
dec
mov
xchg
fs
jmp
jl
insb
sub
xor
dec
cmp
ja
das
in
and
lock
js
aas
inc
test
mov
cmpb
push
push
add
mov
insb
fists
inc
sub
js
add
std
and
mov
mov
push
orb
mov
shlb
add
xor
jmp
push
adc
mov
pop
daa
andb
out
mov
repz
test
and
mov
and
decl
mov
fisttpl
and
adc
pushf
push
add
call
push
dec
jecxz
sub
mov
mov
hlt
pop
mov
jo
scas
jae
pop
jp
add
shlb
and
push
push
fcoms
inc
jbe
xlat
mov
add
sar
jle
in
addb
mov
out
dec
loope
sub
sub
enter
stos
mov
jo
jl
xor
xchg
dec
sbb
repnz
cli
cmc
movsl
cmpsb
inc
pop
xchg
pop
mov
cli
sub
js
push
lock
imul
ja
frstor
xchg
pop
mov
cli
cwtl
aam
data16
cmpsl
cli
jl
mov
dec
call
mov
mov
jg
pusha
movd
xchg
mov
pop
push
push
scas
pushf
imul
jb
roll
mov
inc
sbb
jo
jp
or
test
mov
fnsave
jecxz
in
xor
lods
pop
jmp
xchg
mov
mov
xchg
popf
lds
sub
fsubl
mov
iret
jle
rcrl
shl
push
outsb
push
xchg
out
es
loop
popa
ljmp
bnd
jb
loopne
pop
jb
rcl
push
xchg
repnz
sub
inc
out
lods
add
push
repz
mov
cltd
mov
pushfw
loopne
and
rorb
mov
lds
inc
push
leave
xchg
je
push
mov
mov
sub
mov
ds
das
stos
andb
in
xchg
bound
in
pushf
aas
es
orb
movsl
mov
mov
popa
adc
xlat
in
loop
mov
rcll
cwtl
mov
push
xchg
fstpt
shlb
cmp
fidivs
xchg
fisubl
mull
daa
adc
test
shlb
mov
nop
cmp
loop
xor
cld
push
out
into
popa
push
imul
mov
fmuls
jmp
jno
pop
fisttps
test
push
js
sbb
add
les
pop
dec
mov
sub
dec
cmpsb
sar
fidivl
pop
je
cwtl
fxtract
adc
rdpmc
jg
adc
fs
pop
gs
and
dec
cmp
outsb
cmc
ret
cmp
cmp
cmpsb
fdiv
in
pop
stos
push
dec
jmp
setbe
dec
sbb
repnz
sub
pop
in
pop
cwtl
je
xchg
lea
sbb
pause
or
pop
stos
jno
inc
add
mov
test
dec
ss
int3
jge
nop
mov
lea
rcrb
or
int3
int
jecxz
inc
and
out
pop
cld
test
rcl
in
and
xchg
add
ja
js
rclb
ljmp
dec
sbb
pop
cwtl
dec
xor
push
jmp
arpl
testb
mov
push
jl
bound
insl
js
movsb
pcmpeqb
cmp
cmpsl
add
fidivrl
lret
sarl
out
mov
faddl
sbb
and
cwtl
jmp
cmpsb
fcoml
iret
sub
cmc
sarl
sbb
add
jecxz
mov
dec
push
and
sub
xchg
sbb
cmp
and
leave
adc
aaa
rolb
pop
addl
inc
adc
insl
iret
stos
xor
and
jecxz
add
mov
loopne
cmp
enter
mov
les
enter
lods
sub
imul
js
rorl
dec
test
cld
cmp
rcl
call
outsl
push
arpl
adc
or
mov
ds
mov
lcall
ja
and
test
push
dec
jecxz
jo
imul
shrl
mov
seto
repnz
mov
xchg
cld
repz
or
int3
shl
rcrl
repnz
jle
add
cmp
dec
mov
mov
jp
inc
dec
adc
cmp
aam
fstpl
mov
mov
mov
pop
push
sar
pop
stos
popl
fsincos
nop
sub
dec
or
jmpw
jmp
jge
aaa
into
outsb
mov
add
push
in
lock
mov
ds
ret
xor
inc
and
mov
aam
outsb
mov
cli
mov
testb
mov
ss
pop
add
xor
mov
dec
pop
pop
in
in
aam
jae
mov
orl
les
repnz
jle
jb
enterw
mov
lcall
cltd
add
int
dec
pop
push
movsb
pop
xchg
mov
fcmovu
lods
pop
es
add
cmp
js
jle
pop
adc
mov
push
push
js
in
sub
fs
in
push
dec
push
das
dec
int3
jmp
int3
je
stos
aad
ret
cld
ljmp
xchg
mov
aaa
cmpsl
pop
imul
imull
mov
in
xorb
mov
shrl
not
xlat
ja
test
cs
xchg
mov
pop
sarl
movsl
aad
mov
cli
mov
cmpsb
dec
repz
push
cli
and
sub
inc
mov
or
sub
dec
mov
mov
test
lret
xor
pusha
aad
inc
pop
hlt
aas
push
shr
jbe
lea
fcoml
add
mov
daa
jne
jge
xchg
push
mov
sub
pop
sbb
xchg
lcall
sbb
sbbb
push
push
pusha
jmp
andb
cmp
jae
les
aaa
xor
xchg
popa
pusha
sbb
ficoml
dec
ret
test
mov
mov
sub
jno
xchg
sahf
xlat
xchg
pop
cmp
adc
cmp
jle
test
dec
add
shlb
jecxz
add
xchg
hlt
shlb
lahf
xor
ja
dec
cmpsb
mov
hlt
pop
mov
fmull
cmp
mov
mov
cltd
shll
shlb
cmpsl
xor
sub
fdivs
jle
adc
insb
rcrl
cmp
shll
stos
mov
dec
or
jmpw
jmp
jge
aaa
into
outsb
mov
pop
gs
mov
push
lret
clc
xor
mov
mov
jb
inc
dec
adc
cmp
aam
ret
inc
stos
popa
adc
xor
je
dec
loopne
dec
dec
jbe
pop
dec
jbe
hlt
jne
jbe
stos
test
jmp
inc
fmull
ljmp
push
aaa
into
outsb
mov
cmp
cmpsl
pushw
clc
mov
lock
jne
lock
rclb
adc
cli
ljmp
push
pusha
data16
inc
lldt
adc
mov
dec
ret
lahf
push
or
xor
add
add
mov
in
out
mov
cmpsl
jge
sti
lcall
nop
jne
enter
les
es
xchg
rcll
imul
or
and
cmp
test
pop
sar
pop
pop
test
sbb
fcoml
mov
or
mov
sti
fcomp
sbb
fistpl
ret
lret
dec
mov
inc
std
outsb
adc
or
inc
pop
popa
mov
jg
xor
pop
aad
pop
fcmove
push
sbb
inc
outsb
mov
fcompl
xchg
cmpsl
enter
xchg
inc
xchg
xchg
fidivrs
lods
es
je
ja
jno
or
fldt
rcrb
dec
int3
mov
push
out
popa
adc
pop
in
push
xrelease
sub
insb
sbb
adc
or
in
inc
je
sar
repz
loop
sub
dec
push
notb
adc
nop
pop
pop
lcall
inc
push
mov
std
aad
repnz
out
cmp
scas
add
jno
fildll
rorb
inc
shlb
push
lret
je
js
lea
and
inc
jb
xlat
or
add
sub
mov
loope
mov
repnz
shrl
test
ret
jns
pop
fidivrl
pop
insb
shlb
push
int
je
jae
xchg
sub
push
je
ret
cmpsl
mov
xchg
cmp
popf
jl
jmp
inc
pusha
push
popl
call
cltd
jno
dec
xor
shl
je
inc
out
dec
dec
sbb
xchg
js
cli
sub
adc
sub
pop
addr16
dec
inc
shrl
jmp
inc
fmull
repnz
loope
cmpsl
int3
cli
insb
mov
adcb
add
hlt
dec
hlt
cld
dec
add
sbb
pop
aas
cmp
mov
inc
dec
adc
cmp
aam
ret
mov
ret
xor
dec
fbstp
push
mov
pop
mov
mov
inc
xor
lock
cmp
aaa
ljmp
aaa
mov
and
stc
pop
sub
sub
test
lret
fsub
movsl
add
mov
xchg
outsl
in
push
sbb
inc
sub
mov
fisttpll
or
in
sub
sub
push
adcb
shlb
cmpsb
dec
jbe
xor
or
or
mov
ss
faddp
jecxz
shl
cmp
movups
das
jmp
popf
out
jp
pop
mov
cmp
jle
or
xor
iret
frstor
dec
add
mov
in
sub
into
pop
in
mull
out
and
push
in
test
cmp
in
orl
les
pop
cmc
dec
dec
rol
sbb
mov
add
push
mov
pop
in
stos
sbb
push
sbb
in
insb
adcl
mov
cs
jle
out
xor
stos
mov
sub
fsubr
sub
and
xor
pop
sbb
xor
shl
mov
dec
xlat
test
mov
not
les
sub
sub
pop
and
mov
pushf
les
test
test
movsb
lods
mov
mov
and
add
dec
or
dec
dec
mov
ds
es
shll
or
sub
dec
mov
and
or
arpl
mov
loope
into
call
cld
fbstp
push
dec
or
pop
std
call
push
into
ja
loope
cmp
xchg
scas
add
sub
or
pusha
movsb
mov
add
mov
lock
xor
insb
movsb
and
stos
mov
lret
and
add
pop
cli
lahf
js
jle
dec
repnz
pop
jo
inc
movsl
aas
add
jle
xchg
pop
popa
pusha
sbb
addr16
mov
popa
gs
cltd
stos
out
shlb
mov
nop
rcl
pop
in
in
pop
in
add
inc
pushf
sbb
ljmp
ljmp
sti
loop
je
inc
push
push
adc
inc
jbe
xlat
pop
or
and
aas
add
or
jle
adc
call
stos
mov
out
sub
pop
addb
dec
mov
stos
loopne
in
pop
push
add
mov
orb
mov
cmp
js
push
adc
and
dec
pslld
loope
cmpsl
int3
cli
dec
mov
mov
fs
hlt
add
hlt
or
and
sbb
pop
adc
push
mov
add
sub
pop
and
xorl
in
mov
push
in
les
push
in
enter
cmp
sbb
shl
pop
inc
xor
jp
cltd
mov
ds
sub
inc
roll
adc
jmp
xor
ds
add
cwtl
jo
or
add
cld
movsl
mov
jecxz
add
xchg
not
mov
xchg
pop
cli
lahf
hlt
cmpsl
jle
dec
mov
hlt
pop
bound
sub
dec
xchg
sbb
aam
inc
lock
push
jno
push
popl
scas
call
loope
insb
xchg
cwtl
jge
push
pop
inc
hlt
mov
jno
mov
data16
or
add
fsubl
mov
cmp
cltd
mov
cmp
fnstsw
or
xor
mov
lods
mov
data16
data16
cltd
adc
mov
int
rorl
pop
xchg
mov
cmp
les
fmul
outsl
movsb
pop
mov
in
add
mov
enterw
lock
mov
fsubs
adc
adc
loop
rolb
fisttps
cwtl
xor
add
dec
push
dec
nop
cmp
xorb
aas
stos
fdiv
pop
or
lds
or
dec
adc
mov
jge
insb
jb
in
aas
ret
movd
inc
hlt
test
hlt
mov
mov
push
mov
aas
dec
test
imulb
inc
dec
adc
cmp
aam
ret
int3
stos
popa
adc
es
int
les
mov
sub
fdivs
test
rcl
jne
jae
mov
mov
daa
push
sbb
mov
cli
push
pusha
inc
adc
ficompl
fs
mov
push
inc
jo
fidivrl
popa
pusha
adc
pop
xchg
jp
adc
adc
popa
mov
fs
lcall
or
mov
cwtl
shll
sarl
sub
repnz
jmp
adc
xchg
mov
cmpsb
outsb
mov
addl
rorl
ds
les
dec
ljmp
pop
mull
cmpsb
xchg
xchg
and
add
dec
or
xor
cld
repz
push
cmp
in
push
fs
adc
jno
or
add
add
mov
cli
mov
inc
push
outsb
pop
pop
fdivr
cmp
pop
and
mov
push
int3
cmpsl
sub
call
dec
dec
mov
movsb
mov
add
es
dec
or
movsl
sarl
push
test
inc
popa
stos
mov
sbb
cltd
lods
imul
addr16
cli
sub
inc
sar
push
bound
xchg
ja
loopne
add
cli
mov
je
pop
mov
sbb
xchg
scas
insb
movsb
mov
add
es
adc
stos
loope
hlt
movsl
rorl
mov
add
jp
cltd
adc
mov
xchg
iret
aaa
inc
stos
add
cmpsb
outsb
mov
addl
roll
sbb
mov
pop
cltd
pop
arpl
fcoms
dec
mov
mov
pop
xor
jl
fwait
imul
cmp
fcompl
sbb
push
jo
insb
and
sub
sub
jl
push
dec
jecxz
pop
shl
dec
inc
inc
inc
lahf
inc
sub
adc
aam
xchg
add
push
jae
and
mov
test
mov
repnz
xor
mov
stos
jp
or
adc
or
jg
pop
loope
xchg
cmp
xlat
inc
cld
fmul
outsl
movsb
pop
inc
sub
imul
and
cltd
mov
loop
sbb
and
sbbb
pop
push
jl
xchg
mov
fcmove
cwtl
pop
dec
add
dec
jle
fwait
add
mov
out
jo
add
jp
cltd
adc
mov
int
rcl
gs
xchg
mov
shll
stos
out
test
les
ds
shll
stos
mov
dec
or
jmpw
jmp
in
and
into
push
mov
stc
push
in
fs
mov
ds
ret
xor
shlb
mov
cmp
aam
aas
pop
sahf
inc
pop
jne
cs
jle
ss
jmp
inc
shll
stos
mov
dec
or
jmpw
jmp
jge
aaa
into
outsb
mov
pop
adc
mov
push
shrb
mov
test
xor
stos
mov
jbe
xchg
adc
in
dec
bound
cltd
stos
out
js
les
jl
les
in
or
shll
fwait
xor
cld
cmpsb
push
popa
pusha
adc
pop
xchg
jp
ret
adc
push
dec
add
stos
shll
ret
xor
aam
jle
nop
adc
cwtl
adc
xchg
adc
les
jecxz
mov
loope
addb
repz
adc
loopne
xadd
xor
cld
ret
xor
add
adc
lds
sysexit
ja,pn
mov
mov
sub
nop
inc
rorl
pop
dec
data16
in
lock
in
clc
aas
add
call
pop
sbb
or
jmp
xchg
and
and
into
push
mov
repz
in
fdivrs
or
cmp
add
aam
xor
pusha
and
and
pop
dec
mov
inc
inc
loope
aam
aas
jmp
fsubrl
test
jle
and
xchg
adc
jmp
rol
mov
fcom
sub
stos
mov
out
and
pop
push
xchg
mov
loope
xor
pop
and
subl
pop
stos
mov
rorb
xor
aas
and
sub
stos
fdiv
pop
stos
push
pop
stc
push
mov
pop
or
fs
adc
adc
and
inc
push
cmp
cltd
adc
inc
js
in
pop
in
sub
pop
adc
sbb
mov
xchg
ja
mov
mov
sub
je
rorl
dec
inc
data16
push
in
and
in
sub
out
adc
sbb
or
push
and
mov
cltd
push
dec
add
stos
shll
sub
int3
push
imull
push
jbe
push
in
jo
adc
cwtl
xchg
ja
mov
mov
sub
or
rorl
out
inc
data16
in
add
in
or
mov
cmp
out
and
pop
sbb
jmp
idivl
fucomi
and
into
push
mov
cmc
test
push
jbe
push
in
dec
push
sbbb
and
mov
mov
pop
dec
xor
dec
dec
fsubs
insb
cld
pop
mov
cld
pop
orb
addr16
add
das
in
repnz
jb
loopne
pop
jbe
shrb
xchg
pop
cli
lahf
enter
dec
inc
mov
inc
rcrb
pop
dec
fdivr
push
cmp
insl
mov
fwait
orb
arpl
hlt
mov
lcall
stos
jno
or
add
lea
and
pop
arpl
pop
cld
repz
pop
std
push
dec
jecxz
pop
lods
imul
cmp
mov
ds
sub
inc
sar
push
push
fistl
mov
insb
arpl
mov
int
dec
pop
push
nop
fidivrs
xchg
scas
insb
movsb
mov
add
es
sbb
stos
loope
in
movsl
sarl
push
les
xor
mov
sbb
cltd
lods
imul
pop
push
mov
mov
xor
mov
aam
jp
mov
jb
rcrb
je
pop
in
push
jo
es
or
push
mov
jo
cli
push
lods
inc
adc
ficoml
or
hlt
pop
dec
pop
loop
mov
pop
adc
jno
fwait
aad
add
cmpsb
popf
pop
push
rolb
cld
dec
ret
xlat
in
push
dec
lret
sub
aam
dec
roll
es
jp
cltd
adc
mov
int
shl
gs
xchg
mov
aaa
inc
nop
cmp
loop
and
push
inc
jbe
xlat
pop
pop
jl
xor
aas
add
jo
jle
add
call
stos
mov
out
sub
pop
subb
dec
out
stos
loopne
push
ja
mov
mov
cs
pop
mov
aam
inc
loopne
push
popa
pusha
adc
pop
xchg
jp
sub
mov
fs
lcall
adc
mov
cwtl
imul
pop
and
cld
cmp
xchg
adc
dec
lods
addr16
jno
dec
cmp
sbbb
inc
sbb
inc
inc
sbb
out
insl
inc
fs
fdivrl
add
or
stos
push
mov
push
mov
dec
cmp
inc
aas
mov
mov
mov
lods
xchg
sub
and
inc
push
stos
push
cmp
nop
popa
ljmp
aas
in
ljmp
jecxz
mov
insb
dec
push
mov
mov
sub
in
movsl
mov
xorb
repz
sub
jne
mov
dec
gs
mov
cmp
in
and
jno
mov
adcl
cmp
xor
scas
cmp
cltd
adc
insb
fdivrl
sub
mov
adc
cmp
pop
cmp
ljmp
cltd
shll
shlb
addr16
enter
out
pop
jl
iret
sbb
shl
stos
hlt
cmp
les
aas
fsubrs
jbe
inc
dec
adc
cmp
aam
fimull
push
push
imul
data16
cltd
adc
mov
movsl
mov
lods
push
jno
push
sub
insb
les
push
das
imul
add
out
into
dec
sub
into
xor
cmp
xor
movsl
mov
arpl
hlt
mov
ja
cmpsl
test
mov
jle
loope
in
movsl
rorl
xor
pop
arpl
in
dec
mov
mov
pop
or
cltd
shll
sarb
imul
ss
fcompl
or
into
push
dec
subb
adc
sub
cmp
xchg
adc
sub
jl
inc
mov
and
fwait
jno
push
lret
mov
cmpsb
mov
std
enter
push
dec
pslld
imul
cli
shr
repnz
cmp
sbbl
cli
sub
movsl
mov
addr16
dec
loope
mov
scas
lcall
mov
xchg
ficompl
movsl
sarb
mov
sbb
dec
jle
push
andl
je
pop
xchg
mov
leave
fistpll
ret
inc
hlt
fmul
outsl
movsb
pop
js
in
imul
sbb
cltd
mov
xchg
pushf
adc
and
and
xchg
nop
mov
inc
add
mov
rcrb
test
fadd
sub
jl
inc
imul
xchg
push
jmp
push
push
imul
mov
xchg
or
xorb
call
lods
or
sbb
test
sbb
pusha
mov
cltd
adc
xor
push
dec
jecxz
xchg
add
adc
and
repnz
enter
out
jo
pop
pop
test
push
repz
jmp
sub
insb
mov
push
push
push
es
add
pop
push
lcall
jb
or
ret
insb
jmp
push
cmp
in
and
ret
xor
fs
int3
cwtl
cltd
test
sbb
mov
add
mov
mov
mov
inc
fmull
repnz
jmp
int3
cli
push
mov
mov
sub
hlt
mov
mov
push
adc
aas
dec
test
scas
sub
cmovg
cmp
aam
ret
xchg
stos
popa
adc
es
je
dec
and
dec
dec
sub
pusha
ja
test
pusha
push
jne
jae
mov
mov
daa
push
sbb
mov
push
enter
xchg
inc
shrb
hlt
fs
hlt
insb
dec
les
test
loope
or
leave
inc
fwait
xchg
xor
sbb
popf
out
aaa
mov
popf
pop
mov
cld
cs
lea
add
aaa
jle
test
jae
dec
cli
sbb
cwtl
adcl
movsl
lods
insl
in
add
arpl
hlt
mov
lcall
shll
xorb
cmpsb
popf
loop
arpl
push
insb
cwtl
sub
into
xor
xchg
xor
insl
dec
xlat
test
mov
not
shr
sub
pushw
mov
xchg
call
sub
stos
in
clc
jmp
outsb
ja
push
test
aam
aas
repz
pop
jne
sub
xor
data16
out
pusha
clc
mov
hlt
pop
ds
stc
sub
cmpsb
sub
mov
add
sub
pop
mov
les
mov
lods
or
into
sub
mov
mov
mov
cmp
sbbl
cli
push
push
cmp
movsb
pop
dec
adc
mov
xlat
xchg
hlt
mov
sbb
popl
jl
mov
push
test
xchg
lods
jbe
push
jg
movsb
jns
xchg
repz
xor
push
out
scas
loopne
frstor
fsubrs
divl
xor
mov
data16
add
or
int
idivb
daa
sub
push
shll
aaa
out
dec
fidivl
pushf
add
repnz
insb
ss
mov
ret
dec
pop
repz
fcmove
aas
adc
push
add
hlt
inc
and
addr16
xchg
push
pushf
push
xor
sbb
fcmove
int
clc
or
in
sub
jbe
xor
lret
incb
sahf
and
insb
adc
inc
pop
jge
cli
andb
pop
mov
fs
mov
add
clc
lock
mov
je
mov
sbb
mov
dec
sbb
je
mov
jmp
cmp
nop
xchg
inc
xchg
pushf
mov
and
int3
push
adc
cmpsb
mov
mov
into
int
adc
sub
add
mov
adc
bound
push
xchg
aad
xchg
pop
cld
mov
jae
pusha
jo
xchg
adc
mov
mov
or
xchg
out
in
mov
push
in
xlat
xor
bound
mov
pop
cmp
cltd
rclb
inc
cmp
mov
push
cmc
test
xor
and
lds
adcl
loope,pt
jne
or
mov
or
je
inc
addr16
je
sub
test
xchg
pop
and
xor
sbb
cmpsl
xchg
loopne
aad
sahf
aam
jne
les
std
jl
xor
cltd
scas
cmp
movsb
pop
and
push
repz
cwtl
les
mov
dec
cmp
add
mov
cmp
out
sahf
hlt
lods
mov
sbb
insb
cmpsl
pushw
je
je
jmp
cld
pop
jbe
cli
push
cld
pop
jne
cwtl
jp
cltd
mov
lret
or
and
push
and
repz
pop
call
add
mov
lret
jp
push
mov
les
dec
pusha
aas
push
cmp
mov
rcrb
push
hlt
mov
adc
mov
sbb
push
add
add
sub
mov
xchg
in
push
mov
movb
ja
push
push
or
cmp
loopne
icebp
xor
mov
cmpsl
repnz
fcmove
fwait
lock
outsl
clc
shll
les
or
cmp
or
sub
add
popf
imul
out
mov
cmp
test
push
pushf
and
notb
ds
mov
push
push
mov
add
pop
ds
mov
pop
test
sbb
hlt
mov
jno
push
in
int3
mov
jl
outsb
xchg
adc
cs
fmull
mov
fwait
mov
movb
ret
das
inc
xor
cmp
inc
fs
and
adcb
mov
addr16
add
dec
fwait
sub
ror
clc
incl
cmpsl
cmovno
shrb
pop
repnz
jg
and
sbb
jmp
in
pop
xor
and
movsb
dec
repz
mov
sub
mov
paddd
sub
ss
orl
jl
xchg
cltd
ja
push
cmpsl
in
adc
lcall
adc
in
cmp
push
cli
loopne
loop
sub
xchg
pop
test
insl
cmp
mov
sbb
push
add
jp
adcl
jge
mov
call
mov
mov
hlt
movsb
push
hlt
mov
push
inc
jno
stos
mov
sbb
shr
jp
xor
nop
adc
add
sbb
in
flds
adcl
sub
cmp
pminsw
pop
adcb
je
xchg
push
dec
stos
xor
jl
out
fs
pop
cmpsb
jo
mov
dec
jo
adc
pop
scas
pushf
mov
add
and
mov
in
test
jae
mov
ljmp
mov
adc
xchg
adc
jge
push
pop
mov
int3
mov
jo
repz
data16
rolb
push
dec
pushw
data16
jbe
nop
pop
lcall
mov
adcl
xchg
mov
sub
mov
adc
mov
rcrl
xchg
jl
push
pop
fcoml
loopne
inc
arpl
cld
repz
push
jge
cmp
sbb
push
jl
pushw
inc
mov
hlt
cld
pop
push
fdivr
fcmovne
sbbb
pop
orl
fnsave
iret
ljmp
int3
pop
mov
mov
mov
adc
push
or
pop
jmp
adc
pop
or
fsubrs
and
jae
mov
jl
mov
rcrb
clc
repnz
pop
xchg
jbe
sub
xlat
nop
cmp
iret
cmp
xchg
xor
stos
sbb
xchg
xchg
lods
insl
push
xlat
xor
sbb
dec
mov
mov
in
sbbl
inc
roll
dec
cwtl
sub
out
loop
mov
cmpsl
mov
dec
stos
cmpl
data16
and
sti
push
dec
test
dec
jp
and
mov
mov
inc
bound
mov
in
inc
adc
sti
pop
cld
cs
les
int3
sbb
cmpl
sub
and
mov
jo
sub
les
cs
pop
aam
fmul
mov
fs
insb
mov
push
aas
jp
ret
mulb
cmp
stos
add
xchg
mov
xor
lcall
mov
ljmp
movsb
popa
stos
mov
inc
dec
pop
xchg
pusha
mov
pushf
fs
jb
nop
sub
mov
or
in
pop
adc
mov
mov
movsb
dec
cmp
sbb
cmp
movsb
in
push
aas
xchg
adc
aas
ljmp
sub
mov
xor
sub
mov
loop
adcl
sub
and
ljmp
in
jl
lods
jbe
sub
jl
sub
inc
mov
adc
shlb
int3
mov
loop
pop
aam
cld
cld
out
in
pop
inc
jo
mov
data16
inc
adc
mov
movsb
mov
shlb
ds
dec
cmc
scas
sub
pop
clc
mov
push
aas
ljmp
push
and
in
add
in
andl
loope
cmpsl
jl
cmp
lcall
mov
loopne
mov
cmp
test
cltd
test
scas
je
cmp
je
pop
repnz
cmp
or
push
movsl
add
sub
cwtl
xor
lea
pushf
mov
in
and
fs
in
cmpb
adc
pop
test
bound
in
ljmp
pop
bound
sbbl
cli
mov
aam
pop
dec
aam
rorb
mov
mov
data16
add
jp
adcl
jge
mov
jmp
mov
rcll
pop
fsubrl
in
pop
and
adc
es
xchg
dec
pop
les
cmp
pop
dec
aas
sar
push
dec
nop
cmp
mov
lock
mov
adc
pop
andl
ja
xor
cld
sub
mov
and
stos
fdivr
fimull
xchg
add
sub
dec
mov
popa
sti
jo
add
fnstenv
inc
mov
adc
cltd
sbb
scas
inc
pop
cmp
fs
mov
aam
je
aam
pop
ljmp
add
pop
loop
cld
repz
cld
pop
out
jo
mov
data16
adc
pop
std
sub
clc
test
pop
repnz
pop
lret
jno
data16
cltd
adc
hlt
sbb
push
fdivl
cmp
mov
movsb
mov
jle
je
iret
repz
lcall
rol
inc
lgs
movzbl
mov
bound
and
test
jl
xor
shlb
mov
cltd
push
cmp
pop
movsb
add
pop
or
xorl
loopne
test
xchg
inc
movswl
push
mov
adc
push
repnz
cmp
push
add
jp
adcl
jge
mov
call
pusha
mov
ds
hlt
fs
hlt
mov
push
inc
jno
stos
xor
or
or
dec
sub
or
pop
mov
pop
dec
xorl
mov
shll
push
fs
leave
push
repnz
repnz
cmp
icebp
dec
push
dec
lcall
push
jle
les
es
loop
inc
jbe
shr
push
cwtl
les
mov
cmpsl
pop
imul
jmp
lock
loope
shl
repnz
or
repnz
push
sub
push
dec
mov
xchg
cld
bound
pop
adc
jo
push
sbb
jp
pushf
lock
jb
test
mov
sbb
insb
mov
jle
cmp
jnp
pop
mov
call
adc
adc
std
cs
in
sbb
jp
pushf
in
shlb
mov
test
lret
bound
ljmp
or
pop
ss
mov
pop
mov
add
hlt
mov
jno
cmp
aam
dec
test
and
sub
inc
mov
pop
orl
je
enter
cwtl
pop
rorb
loopne
mov
adcl
mov
int3
aam
cmp
jecxz
lods
mov
sarb
xor
cwtl
repnz
push
out
fdivrp
jb
shr
push
mov
insb
sub
mov
insb
int3
clc
xor
mov
xor
in
aas
arpl
andl
fmuls
dec
jl
sub
xchg
pop
sub
cltd
and
fstp
jl
push
es
sbbl
fmull
les
sar
mov
in
aas
lods
xor
popa
mov
inc
push
push
dec
pop
testb
xchg
push
push
mov
pusha
or
movsl
enter
lahf
rcr
sbb
push
shll
inc
pop
mov
data16
cmpsl
inc
imul
rorb
dec
ljmp
loope
jbe
push
in
cmpb
lret
jp
add
and
pop
lea
inc
sahf
movsl
add
je
push
in
sbb
pop
imul
jo
mov
popa
stc
pop
ljmp
inc
mov
ja
xchg
ljmp
push
mov
and
cmp
pop
lock
pushf
in
pusha
pop
cmpsl
push
xor
adc
inc
cmp
push
and
in
mov
xchg
mov
bound
repz
mov
in
fcoms
jo
in
cmp
push
cltd
cmp
int3
mov
inc
dec
pushf
and
mov
je
mov
sub
mov
cmpsl
pushw
lods
mov
sbb
pop
push
fdivr
fidivrl
dec
xchg
cmp
xor
pop
arpl
mov
ljmp
ret
xor
inc
adc
sbb
jno
pushf
test
sti
jno
inc
inc
mov
cmc
xchg
in
addr16
pop
fsubp
xchg
ret
insb
xchg
cld
pop
push
faddl
aas
insb
inc
ret
test
inc
sub
inc
sub
jo
jp
mov
mov
sub
std
inc
dec
fmull
lahf
push
add
dec
mov
bound
jl
dec
je
and
xor
push
mov
mov
out
int3
int3
sahf
enter
jno
sub
pushf
xchg
imul
jo
jb
jmp
inc
cmp
fisttpl
push
repnz
push
push
xor
sub
lret
sub
shll
xor
sub
xchg
xchg
into
inc
lods
rcll
test
xchg
inc
xchg
pop
les
popl
ret
mov
ret
cld
cwtl
adcl
push
push
mov
xchg
int3
push
or
dec
adc
xlat
mov
mov
xchg
arpl
xor
pop
jl
jg
call
inc
roll
loop
pop
jno
lahf
cltd
xchg
sub
mov
pcmpgtd
mov
imul
cmp
mov
in
aam
mov
dec
dec
mov
pop
add
lods
rcrb
test
pop
sub
fsts
mov
jp
jne
xchg
push
jp
movsb
push
jnp
mov
cmp
push
lods
fisubrs
add
and
adc
gs
mov
hlt
pop
push
sbb
lea
mov
adc
mov
adc
scas
add
inc
shll
adc
xor
adcb
mov
pop
leave
or
dec
sub
sub
mov
push
jl
pop
mov
stos
pushf
hlt
js
fcompl
out
jae
arpl
notb
push
push
push
lret
pop
lret
sbb
cmp
popa
add
adc
adc
bound
xor
mov
dec
sub
xor
mov
pushf
inc
pop
cmc
mulb
mov
es
jne
mov
lret
dec
xor
dec
sub
test
ljmp
adc
out
mov
add
int
je
ss
shll
scas
sub
mov
adc
push
popa
sti
notl
mov
rcrb
enter
jl
loopne
mov
pop
mov
pop
push
clc
cwtl
sub
int
ret
shrb
and
mov
fcom
cwtl
rcll
test
mov
hlt
sbb
jbe
in
lock
and
push
inc
and
mov
jb
xor
imul
fbld
dec
pop
cmp
jmp
fisttpll
into
adc
test
adcl
xor
inc
dec
cmp
test
adc
sub
fucomp
xorb
int
mov
cwtl
xchg
cmpb
clc
cmp
mov
lds
pushf
aam
xchg
call
sub
js
sub
mov
nop
xrelease
push
push
iret
es
test
sbb
ds
push
fildll
pop
and
push
jb
xchg
sbb
frstor
and
fdivrs
mov
inc
adc
or
lock
jle
sub
in
pop
push
in
sub
movsl
insb
lahf
loope
and
adc
addr16
and
pusha
insl
pop
cmp
pop
push
add
testb
pop
cmp
fidivrs
enter
lret
fcmovnu
jbe
mov
sarl
out
and
jmp
andl
stos
mov
and
or
std
pop
and
popa
dec
fidivrl
sbb
push
jo
outsb
adc
jne
dec
repnz
cld
lcall
pop
and
add
loopne
enter
mov
mov
add
std
pop
inc
fwait
add
aam
xor
xchg
repnz
push
pop
xor
jp
dec
and
jg
mov
xchg
sub
fcoml
insl
push
popa
imul
pop
enter
das
lahf
sub
push
scas
dec
lahf
lock
fcoms
loopne
inc
movl
sub
insl
add
aam
mov
call
test
das
jl
mov
dec
xor
adc
pop
cmp
mov
adc
repnz
lock
mov
scas
or
sub
hlt
mov
test
std
inc
adc
sub
cmp
aam
out
add
jl
jge
addr16
xor
js
xchg
loop
inc
mov
dec
aaa
roll
sahf
fwait
cmp
adc
pop
cmp
dec
jecxz
jle
leave
sbb
fidivrs
inc
and
cmpps
cmp
xchg
sti
jno
addb
push
add
xchg
push
lret
out
pop
mov
jl
mov
pop
popa
push
ja
pusha
push
mov
jp
fwait
daa
sub
flds
cmp
pop
pushf
ret
pop
call
lods
pop
lcall
xlat
fwait
jg
outsb
jbe
push
xchg
es
jl
loope
ds
call
fucomp
jne
mov
push
push
pop
je
dec
mov
adc
call
jl
lods
mov
hlt
and
mov
nop
cmp
cmpb
addr16
filds
incl
dec
push
mov
inc
xchg
hlt
arpl
sub
xchg
pop
jl
loop
dec
add
xor
icebp
daa
mov
pop
pop
adc
xor
lea
add
mov
movb
cltd
sbb
icebp
lahf
loop
cwtl
cld
pop
jmp
aas
adc
aam
xlat
cmp
cmp
cmp
or
adc
aad
cld
sub
inc
call
mov
test
icebp
or
mov
add
out
sti
lods
ret
int
mov
dec
mov
fadd
clc
repz
imul
aad
xor
sub
cmpb
ret
and
insb
cld
jecxz
push
int3
faddl
pop
xchg
jne
jp
dec
xor
sbb
in
inc
ds
loope
insb
xchg
jl
sub
sbb
mov
dec
icebp
ss
pop
fs
push
shrl
adc
and
cmpl
sub
cmpb
dec
pop
hlt
sub
testb
adc
jo
fcompl
je
into
push
jge
insb
jbe
sub
bound
xchg
adc
fdivs
mov
aam
cmp
push
xchg
hlt
js
in
mov
mov
into
and
jb
jbe
icebp
xchg
jl
cld
sbb
xchg
test
cmp
imul
xchg
adc
pusha
test
andb
push
dec
dec
add
aas
cmp
mov
test
dec
cmpsl
dec
dec
andb
dec
lods
stos
popl
fnstsw
pushf
add
cmp
sub
in
stos
pop
adc
lock
push
pusha
ret
cld
dec
shrb
cmpsl
sub
fwait
mov
outsl
xor
out
adc
ret
mov
sub
pop
mov
sub
test
mov
pop
xor
cmp
sbb
inc
dec
lods
and
dec
cmpsb
fwait
mov
inc
dec
stos
jmp
sub
lea
mov
aam
dec
hlt
jo
add
sar
xor
xor
sbb
fwait
mov
test
mov
pop
jae
sub
ss
mov
pop
xor
cmp
pop
jl
mov
mov
mov
mov
je
insl
lods
sub
lcall
in
aaa
ljmp
xlat
sbb
loopne
pop
adc
mov
aaa
dec
lods
sbb
xchg
rcll
loop
das
ret
push
lock
mov
or
jb
loopw,pt
imul
sbb
test
aam
pop
mov
inc
mov
jno
enter
or
andb
sbb
xor
jmp
pop
xchg
jo
enter
aaa
sub
xorb
lea
mov
imul
lods
das
lret
pop
xchg
scas
jae
pop
push
sub
cs
orb
mov
mov
call
fsubrs
popf
dec
mov
mov
mov
cwtl
sub
data16
mov
shrl
add
mov
add
fwait
push
out
mov
aam
add
or
scas
cmp
mov
sub
jno
or
mov
cmp
inc
mov
jmp
pop
clc
fcom
sbbl
mov
das
push
inc
cmp
in
sbb
cmpb
fcmovb
add
xor
loopne
push
popa
pusha
sbb
jo,pt
mov
ss
sub
aaa
out
pop
dec
aaa
mov
jo
out
sub
ds
cmpsb
cmp
cli
in
mov
mov
mov
idivb
mov
out
and
orl
popa
loop
lods
cld
repz
sub
jae
or
jle
in
pusha
shll
push
mov
xchg
sub
cmp
movsb
fidivl
adc
or
sub
mov
mov
jle
xchg
cwtl
xchg
in
jne
test
add
je
mov
inc
jne
cli
sbb
push
cwtl
rorl
sbb
pop
xchg
cmpsb
pop
push
or
cmp
mov
sub
or
sub
add
shrb
fsubrs
mov
sub
inc
jbe
xlat
loope
and
cs
fwait
cmp
sub
sbb
int
mov
icebp
lahf
lea
test
mov
in
ja
movsl
mov
mov
loop
pop
sub
dec
dec
xor
cmp
dec
lods
xor
cs
movsl
data16
inc
cltd
adc
mov
lcall
cmp
loope
in
sbb
pop
dec
repz
mov
mov
or
lods
aas
imul
mov
add
sahf
inc
inc
rorl
cwtl
cmp
andb
xchg
jb
stos
rcr
mov
pop
je
in
int3
cld
jle
into
sub
lahf
adc
adc
cmp
les
adc
cmp
ljmp
data16
jl
xlat
push
bound
bound
sub
sbb
lods
mov
mov
xchg
cmpsb
sbb
hlt
ds
test
xchg
mov
int3
cmp
push
test
dec
aas
or
push
adc
shll
sub
sub
push
cmp
out
stos
and
pop
rcll
test
jnp
mov
or
lcall
fstps
fisubrl
mov
test
call
js
outsl
xor
and
stos
cli
jbe
mov
shrl
inc
mov
aas
push
add
bound
push
sbb
sub
pop
sbb
sub
jae
push
call
imul
lods
or
aaa
rcl
pop
add
lock
xchg
xor
lods
js
and
les
fcomps
jl
dec
push
movsl
aas
fimull
adc
push
jmp
dec
xchg
pop
sbb
push
shlb
cmpsb
xor
sub
fdivl
mov
bound
inc
insl
test
lret
cmp
pop
sub
ljmp
push
add
test
jnp
decl
movd
nop
adc
pop
cwtl
push
xor
add
inc
in
ds
mov
push
mov
mov
and
out
mulb
sub
in
sub
jmp
cmp
les
jmpw
cld
aas
pushf
or
cli
cmpsl
mov
sbb
daa
xchg
cmp
inc
mov
aam
pop
inc
test
insb
xor
mov
ljmp
push
xor
sub
add
cltd
mov
cmp
pop
daa
sbb
fadds
sub
lods
sbb
icebp
inc
sahf
lcall
xchg
jg
jmp
push
sbbb
out
xchg
dec
xor
loop
clc
add
mov
idiv
repnz
pushl
pop
mov
inc
mov
pushf
adc
icebp
inc
sub
mov
xor
push
clc
mov
sub
icebp
add
dec
mov
and
mov
xchg
test
clc
mov
lea
push
mov
mov
aam
mov
and
idivb
sub
sahf
mov
leave
and
cmp
pop
jl
adc
dec
jno
cli
lret
jb
sahf
fs
ljmp
mov
adc
jb
ljmp
or
rcrl
cmp
subl
mov
lcall
sub
jle
js
mov
xor
ds
jb
dec
adc
pushf
repnz
push
jge
pop
inc
out
pop
add
mov
mov
ficoml
loop
jle
mov
sbb
xchg
push
icebp
add
mov
sub
adc
inc
int3
jl
sub
and
aad
inc
mov
sub
pop
push
sub
movsb
jb
adc
inc
or
mov
jle
pushf
adc
sub
andl
fwait
pop
jl
xor
xor
adc
in
stos
pop
inc
movsb
inc
sub
mov
stos
out
xor
pop
mov
sbb
je
xchg
orb
ja
sbb
adc
mov
mov
and
pop
mov
in
jbe
arpl
sbb
jle
ret
aad
aam
mov
cmp
ret
fwait
leave
pop
sub
mov
aas
and
mov
insl
inc
or
shrl
sub
mov
lahf
rorl
movsl
inc
mov
nop
sub
fcoms
mov
je
mov
pushf
jmp
xchg
stc
hlt
sbb
mov
jge
pop
xor
cmpsl
inc
mov
movsl
mov
sub
push
roll
mov
je
xor
iret
mov
pop
pushf
jb
adc
rcrb
shrb
mov
addr16
aas
loop
shr
imul
inc
mov
sahf
sbb
daa
or
mov
ss
push
xor
adc
lods
fisubrl
stos
mov
mov
sti
insl
or
xchg
outsb
popf
mov
mov
icebp
jmp
xlat
mov
jmp
and
shll
movsb
jne
xchg
call
xor
push
out
sbb
repz
lods
std
mov
sub
aam
push
test
jecxz
jne
in
andb
dec
pop
push
push
or
lret
fld
imul
dec
in
push
es
aam
insl
call
inc
or
imulb
xlat
jmp
mov
fistpl
movsl
mov
inc
fiaddl
iret
ds
rcll
ds
mov
add
inc
pop
xchg
jecxz
imul
les
sarl
lock
pop
shll
orb
mov
cmpsl
inc
and
mov
or
dec
pop
cmp
sbb
sub
or
jnp
mov
cld
inc
fcompl
mov
lock
out
pop
pop
jo
cmpsb
mov
pop
sti
mov
sahf
jb
ss
xchg
fldt
lret
cmp
xor
les
aam
js
lret
insb
pop
inc
mov
adc
bound
xor
jae
push
faddl
or
aas
jo
pop
jmp
adc
jo
push
fidivrs
and
inc
in
insl
lret
xchg
dec
imul
sub
out
adc
pop
dec
sub
xchg
mov
mov
and
mov
test
leave
xchg
out
fdivp
fcoms
cmp
ss
push
decb
pushf
pop
addl
inc
push
cmpsb
mov
xlat
imul
dec
cmp
mov
push
or
mov
fs
aas
and
add
mov
dec
or
cli
je
cld
ds
test
mov
nop
xor
push
adc
bound
mov
mov
loopne
sbb
cli
xchg
imul
pop
cmpsl
call
std
inc
and
hlt
dec
or
cld
movsl
in
aam
pop
std
and
mov
movsb
repz
mov
sub
fists
in
lret
aad
mov
ljmp
data16
test
push
sub
cwtl
jbe
imul
or
imul
jmp
imul
jne
adc
fadds
sub
adc
xor
fwait
xorb
int
addl
pushf
faddl
sarl
mov
ds
mov
xor
rcrb
pop
addr16
and
pop
loop
add
fdivrl
dec
xor
mov
cmp
in
mov
aad
std
pop
jle
imul
pop
lods
pop
push
dec
test
inc
mov
scas
je
sub
xchg
std
xor
push
jo
std
shll
mov
les
inc
jecxz
sbb
aas
dec
andl
cmpsb
pusha
pop
sub
fstl
out
pop
cmp
pop
ds
fcmovu
std
pop
jo
pusha
lods
out
and
sub
rolb
lds
and
inc
cmp
ret
sbb
es
xor
inc
popl
dec
mov
sub
inc
push
ret
shlb
in
repz
sub
test
adcl
and
add
and
in
sub
insl
push
pop
scas
and
mov
mov
xchg
inc
sbb
repnz
out
dec
or
mov
lret
popa
push
les
or
jbe
cmp
pop
ja
repnz
pop
out
sub
ljmp
mov
sbb
dec
ljmp
mov
sar
sub
cwtl
addr16
lock
push
sahf
mov
aaa
add
mov
fiadds
mov
inc
dec
bound
jp
pop
adc
mov
dec
dec
push
fwait
mov
pop
lcall
cwtl
fdivr
addl
cmpsb
je
in
sub
lock
jle
shl
pushf
push
adc
sub
imul
and
loop
push
pop
jnp
aas
cmpsl
pop
push
jno
addr16
shl
pop
fcoml
fiaddl
int3
and
in
mov
mov
push
es
sahf
lcall
int3
adc
inc
or
ljmp
outsb
mov
adc
cmp
mov
sahf
xor
fidivrs
lods
pop
mov
dec
mov
shll
cmp
sub
inc
pop
mov
or
enter
mov
ja
bound
in
push
ss
insb
cld
pop
stos
lea
clc
js
push
adcb
pop
jle
lret
mov
mulb
and
cmpsb
fwait
cmp
sarl
add
sub
shlb
in
bound
xchg
rolb
push
aam
adc
aas
test
jge
out
mov
and
sahf
pusha
mov
pop
jnp
sbb
lods
xchg
xor
enter
cmpsb
call
iret
lock
pop
nop
push
loopne
dec
dec
cs
inc
adc
aas
inc
mov
das
std
cwtl
and
loope
push
push
xor
rorb
sub
xor
test
es
cld
xlat
adcl
clc
mov
jmp
lock
icebp
adc
hlt
mov
mov
pop
adc
and
aam
int3
and
bound
in
fistpll
mov
repnz
push
mov
sahf
jae
xor
sub
std
xchg
mov
stos
cwtl
pushf
and
out
je
pushf
fwait
aam
pop
push
hlt
movsl
rorb
mov
lds
lret
aad
dec
jmp
mov
and
addb
rcr
add
aas
mov
fidivrl
movsb
jmp
pop
out
out
mov
xor
cmpsl
in
adc
enter
mov
es
mov
hlt
pop
into
loopne
adcl
add
push
fisubs
les
or
mov
adc
aas
xor
aam
xor
aas
lcall
rorb
enter
dec
pop
inc
je
int3
cli
mov
out
lods
cmp
into
aad
data16
pop
testl
mov
pop
push
fmul
rorb
imul
xchg
and
xor
sub
call
jmp
mov
xor
insb
and
adc
daa
insb
sub
in
dec
dec
test
cwtl
call
notl
cld
cmp
faddl
sbb
or
lock
and
push
cmp
xchg
pop
cmp
in
sub
ss
xor
cli
in
imulb
sub
xchg
pop
sbbb
insl
cmp
pop
cmp
push
fiadds
std
sbb
jp
xor
jo
bound
fs
and
jo
cmpsb
mov
inc
mov
lea
pop
and
push
aaa
sub
test
mov
mov
enter
pushw
add
ljmp
fs
push
adc
int3
cld
pop
testb
or
jl
add
xchg
inc
add
ret
xlat
mov
ret
sbb
sub
insl
sti
aad
loop
inc
lods
rorl
dec
add
aad
stos
movsb
jg
adc
mov
lret
sbb
sbb
jno
jnp
mov
repnz
mov
pop
push
adc
out
dec
fwait
jle
fldpi
or
xor
adcb
sbb
pop
xor
scas
pop
jnp
mov
adc
fadd
jbe
xchg
inc
pop
fdivrs
clc
sbb
fwait
sbb
test
and
xchg
cmpsb
lcall
pop
addb
repnz
and
and
int
dec
mov
fadds
out
push
mov
insl
push
xchg
jg
cld
cwtl
or
scas
ja
push
xchg
icebp
into
adc
out
jb
push
mov
aas
fcoms
fistpll
insb
dec
pop
clc
int3
stos
je
pusha
jbe
push
push
jbe
push
in
mov
adc
cmpsl
adc
sbb
push
mov
push
mov
leave
jl
dec
lcall
int3
inc
int3
lods
test
cmc
push
mov
jo
dec
mov
fcomi
lcall
and
mov
inc
adc
std
out
clc
mov
divb
sarb
mov
test
aaa
lcall
push
cld
add
dec
pop
mov
fldt
nop
cmpsl
jle
inc
adcb
call
xor
fldenv
mov
add
sarl
pop
and
jo
adc
jmp
data16
jne
xor
testl
jp
jbe
icebp
sbb
adc
jno
addr16
jecxz
pop
pop
pop
cmp
mov
loope
aaa
fcom
test
and
test
sbb
jbe
mov
into
dec
pop
imul
mov
ljmp
cmpsb
inc
cmp
repnz
mov
xor
fcmovnu
faddl
hlt
mov
or
loopne
mov
cmp
arpl
out
call
or
mov
dec
sub
divl
cs
and
xor
incb
movsb
dec
sub
xor
fldl
push
pop
lcall
movsl
aas
add
dec
xorb
push
push
aam
dec
jbe
in
dec
fcompl
dec
call
mov
cmpsl
sbb
adc
mov
and
enter
jae
scas
cmpsl
dec
clc
fisttpll
addr16
mov
mov
fmull
cvtpi2ps
mov
sub
cmp
imul
int
gs
popf
push
inc
sbb
jmp
cmp
lock
xchg
mov
mov
push
pushf
adc
fisttpl
sti
jl
xor
pop
sub
sbb
out
mov
dec
pop
xchg
push
mov
jno
or
frstor
push
dec
fwait
aas
dec
cli
jl
jp
jo
js
mov
mov
sub
das
loop
in
jbe
lods
push
push
sti
and
dec
xor
pop
neg
mul
mov
cld
ljmp
dec
out
stos
pop
cwtl
adc
int3
cli
jo
adc
or
mov
sahf
xchg
call
xchg
mov
mov
xchg
adc
dec
outsl
repnz
aam
mov
stos
push
outsl
xor
cmp
adcb
pop
mov
subl
push
dec
into
jmp
rcll
jg
cmp
inc
lock
adc
inc
dec
and
pop
mov
add
push
bound
insl
mov
test
sub
stos
pop
inc
aas
nop
xorb
pop
sbb
rolb
xchg
fucom
in
leave
inc
jo
sahf
out
jge
or
in
jecxz
pop
flds
nop
cmp
jp
push
pop
data16
call
push
mov
iret
or
int3
ret
je
adc
fcomps
and
insl
mov
jb
sub
in
jne
and
js
into
xchg
sbb
jle
pop
and
jl
nopl
ja
lock
mov
pop
xor
jne
in
movsl
push
mov
cmp
xchg
push
push
or
iret
push
cwtl
jge
xchg
xor
pop
sub
jmp
loopne
imul
in
rorl
xchg
jbe
pushw
pop
movsb
scas
out
fidivrl
je
lods
pusha
inc
mov
mov
xor
cmp
subl
pushf
sbb
inc
mov
inc
ret
cmp
into
xchg
cmp
mov
pop
lret
call
mov
movsb
mov
pusha
loop
pop
and
enter
in
xchg
push
out
add
jmp
int
insb
adc
cwtl
xchg
jl
test
pusha
or
dec
adc
xor
pop
aas
mov
int
les
decb
jb
arpl
dec
cld
repz
lock
call
cmp
shl
notb
sub
iret
movsb
sub
dec
push
in
sub
jmp
xor
mov
push
test
data16
xchg
sub
fcoml
std
lds
xchg
sbb
aas
cmp
jae
je
fdivr
mov
sahf
aaa
jnp
pop
mov
mov
stos
cmpsb
ss
adc
sbb
inc
popf
in
jecxz
pop
xchg
jg
sub
in
repnz
loope
push
test
loop
sahf
pop
mov
xor
rcll
mov
xor
jns
ds
jnp
or
cmp
shlb
inc
mov
mov
out
push
mov
mov
cmpsl
sbb
and
pusha
rcll
mov
inc
js
mov
subl
and
negb
xchg
aam
in
gs
adc
fcomps
xor
or
in
jl
in
adc
lcall
push
push
pusha
xor
and
loopne
sbb
sub
cltd
in
in
add
js
cmp
int3
imul
adc
inc
in
and
adc
jne
addr16
fwait
stos
push
js
int
inc
sub
push
cmp
adcb
or
stos
fdivr
icebp
dec
mov
push
adc
cltd
inc
aas
mov
mov
insb
sbb
scas
into
cmp
fs
sbb
fcomps
aaa
aam
adc
sbb
mov
xchg
lods
das
daa
int
ljmp
int3
adc
inc
add
mov
pop
inc
pop
ret
loope
outsb
subb
dec
adc
mov
ljmp
adc
mov
push
push
filds
test
sbbb
stc
pop
out
push
mov
cmp
xchg
adc
imul
mov
stos
mov
lret
test
fcoms
rcrb
in
xchg
jl
add
inc
addr16
push
fstpl
aad
xor
xor
repz
or
xor
push
loope
add
cmpsl
leave
mov
out
mov
sub
xchg
fistpl
fs
mov
stos
cltd
cmp
aam
cmpsl
fxch
jmp
sbb
ret
cld
daa
mov
sbb
xor
push
xor
mov
in
mov
les
lahf
mov
dec
lahf
js
mov
sbb
loop
cmp
adc
push
int3
xor
push
out
lret
fs
movsb
ret
xor
sbb
je
jbe
call
xor
inc
push
dec
mov
jae
and
gs
ds
mov
xchg
movsl
ret
mov
mov
push
dec
dec
in
mov
jbe
push
add
roll
mov
test
push
xchg
repnz
add
and
fmuls
ds
test
aam
aas
lcall
pushf
or
aam
hlt
movsl
sarl
push
sbb
pushw
mov
enter
sbb
push
loop
jnp
adc
mov
pop
mov
dec
dec
push
mov
push
mov
pop
jne
jnp
pop
cli
mov
and
movsb
jle
fsubrl
adc
flds
mov
rol
subb
jne
in
testl
mov
lock
add
out
lds
pop
mov
adc
aaa
imul
jnp
sub
dec
xor
jb
insl
pop
iret
pusha
xchg
or
sub
nop
fidivrs
dec
mov
sbb
shrl
mulb
in
aam
aad
adc
stos
push
or
sbb
jmp
sub
dec
sbb
sarb
add
cs
testb
pop
adc
stc
fsubrs
ret
adc
jae
mov
xor
add
cmp
mov
out
mov
and
jmp
and
fsts
ds
jle
sahf
dec
mov
xor
lret
sbb
cmp
jmp
test
fists
cwtl
fidivl
and
int
dec
das
hlt
cld
pop
sub
lahf
dec
push
fsubrs
xor
jae
and
and
jecxz
out
mov
cmpsl
dec
push
sbb
sub
mov
inc
jl
jp
roll
dec
jmp
shrb
dec
xor
int3
pop
sqrtps
or
mov
dec
repz
repnz
xlat
mov
mov
lcall
dec
xor
or
dec
jo
insl
mov
fwait
cwtl
hlt
and
loope
std
scas
das
outsl
pop
daa
pop
ds
enter
js
jno
jns
int3
test
xchg
xchg
adc
cmpl
test
push
stos
in
movsb
inc
inc
push
test
push
cld
in
movsb
jbe
sbb
sti
cmc
pop
cli
push
xchg
or
icebp
sbb
in
xor
lods
scas
cwtl
mov
les
jno
sub
xor
mov
push
sub
mov
scas
pop
mov
ljmp
and
addb
inc
inc
out
imul
xor
cmp
fldpi
addr16
les
jge
add
clc
in
ret
push
movsb
daa
cmp
fisubl
mov
cmpsb
dec
mov
cld
dec
xor
cmpsb
mov
add
mov
or
pop
jb
roll
sbb
inc
decb
jmp
sbb
mov
ljmp
adc
neg
mov
mov
aaa
mov
adc
push
cmp
out
lods
mov
add
push
xchg
jbe
xor
sub
push
aam
push
sub
fnstcw
testb
cli
mov
movsl
add
mov
fldt
xchg
loope
and
adc
mov
pop
inc
sar
pop
pop
mov
mov
ljmp
in
sub
push
iret
adc
push
out
cmp
aam
ret
fs
popa
adc
ds
mov
bound
xchg
adc
xor
xor
push
dec
jecxz
mov
inc
inc
pushf
loop
je
sub
mov
inc
push
adc
inc
arpl
popf
pop
arpl
pushf
inc
cld
repz
repz
jmp
fs
iret
movsb
nop
mov
and
jns
cmpsb
pop
lods
rcrb
sub
ljmp
xchg
scas
js
out
jne
mov
clc
pop
mov
popa
push
xor
mov
jbe
pop
adc
loop
adc
sahf
sbb
or
cmp
mov
sub
stc
cmp
nop
sub
sti
leave
hlt
jl
cmp
adc
sub
pop
adc
mov
push
nop
lcall
push
adc
sbb
in
jmp
into
push
fildl
mov
arpl
test
xor
mov
jl
test
pop
mov
xchg
js
pop
push
cmp
xlat
fistl
mov
mov
mov
cmp
out
sub
and
mov
mov
push
fdivr
aas
shll
mov
shl
sub
jmp
sarl
or
ss
cli
sbb
inc
mov
in
fadds
pushf
mov
dec
jle,pt
mov
mov
popa
adc
lret
loop
cs
jle
or
or
mov
jo
xor
jno
data16
inc
jae
pop
fcmovbe
pop
jno,pn
jno
or
add
add
or
sub
int3
push
inc
push
outsb
pop
and
cld
incb
or
push
data16
and
addr16
test
inc
xchg
sub
outsb
jmp
mov
mov
cmp
jmp
inc
dec
sbb
xchg
jle
dec
test
xor
jnp
mov
mov
clc
mov
cli
dec
and
push
xchg
cld
mov
ja
and
mov
stc
cs
adc
hlt
rcrl
js,pt
adc
dec
iret
ljmp
mov
aad
aaa
mov
dec
mov
rolb
ret
ljmp
jecxz
mov
mov
inc
push
data16
cmpsl
mov
leave
push
xchg
pop
xor
sub
cmpsb
shld
mov
xchg
sub
and
push
push
cmpsb
push
movsl
loop
arpl
bound
sub
cwtl
lret
andl
movl
popa
outsl
movsb
add
enter
repnz
jge
test
pop
clc
int3
xchg
or
push
xor
arpl
mov
xor
sub
cmp
ljmp
lea
out
sub
pop
andb
mov
ret
dec
xchg
stos
loopne
in
push
mov
cmp
mov
hlt
mov
jbe
bound
sbb
ljmp
ljmp
sti
loop
pop
test
push
xor
inc
jbe
xlat
mov
movsl
aas
add
mov
jle
xor
call
stos
mov
out
sub
pop
add
xorl
in
inc
push
shrl
mov
add
aam
inc
pop
loopne
mov
in
sub
push
iret
adc
pop
pop
adc
aam
jle
hlt
test
add
inc
xor
scas
in
inc
pop
rorb
mov
jmp
stos
imul
mov
aad
push
in
lret
pushf
push
hlt
outsl
mov
leave
shll
aam
inc
mov
pop
mov
clc
in
push
fildl
pushf
and
shl
mov
std
out
lock
dec
cmp
in
xor
cmp
fcmovbe
inc
fisttps
mov
cmp
call
xchg
and
pop
aas
mov
pop
stos
inc
dec
xor
add
mov
fwait
test
cmpsl
lods
loop
lcall
dec
or
pop
pop
jb
xchg
shll
xchg
push
fiadds
jae
jne
or
scas
xchg
ljmp
cmpsb
add
iret
aaa
inc
stos
fisubl
push
icebp
dec
ret
test
mov
shlb
lds
fsubs
push
fcmovne
pop
in
shrb
scas
sub
fsubrs
adcl
push
jb
push
inc
jo
dec
in
push
out
mull
out
and
push
in
hlt
xorb
test
orl
les
cltd
mov
jae
xchg
mov
mov
pushf
mov
or
inc
xchg
in
cmpsb
sbb
push
or
in
insb
adcl
mov
jno
pop
xor
aam
rcll
pop
mov
in
repnz
mov
sbb
frstor
adc
adc
fs
and
ja
mov
nop
jge
push
cwtl
imul
aas
xchg
call
push
cmpsb
sar
and
test
xchg
fdiv
lahf
push
shl
int3
push
fdivp
incb
xchg
imul
mov
das
arpl
xchg
sbb
dec
pop
cwtl
sub
inc
fadds
mov
or
sti
orb
xor
push
dec
fldcw
fcomi
repz
mov
fbld
mov
mov
in
mov
enter
shrb
out
adc
dec
push
xor
lret
pop
int3
lock
shl
push
cmp
shr
add
rorl
xor
xor
std
outsb
push
das
pop
add
into
cltd
aas
add
cmpsb
rclb
std
add
repnz
lea
cmpsb
addr16
call
fstps
ret
stos
aad
hlt
push
fcomps
xor
ds
add
adc
push
cld
sbbl
jno
push
and
into
adc
ljmp
push
push
les
cmp
inc
dec
inc
jbe
cmp
lods
pop
xchg
iret
aaa
inc
stos
ficoml
ret
test
mov
je
imul
pop
adc
les
mov
add
xorb
mov
call
nop
ficoml
iret
daa
inc
sub
leave
sub
in
adc
aas
pop
fiaddl
les
sti
mov
ja
mov
pusha
nop
rorl
pushf
add
add
jle
mov
mov
xor
imul
jle
sub
sbb
mov
inc
cwtl
rcll
rcrl
sub
repnz
jmp
adc
xchg
push
frstor
adc
jae
cmpsl
test
mov
movsl
call
pusha
dec
jbe
mov
pop
pushf
nop
add
inc
mov
push
mov
pushf
or
fsubrl
imul
or
out
mov
dec
insb
pushf
pushf
add
out
fdivr
jb
xchg
sub
fwait
pop
loope
xchg
add
ss
jg
mov
repz
sub
mov
les
lcall
mov
lcall
ficoml
lahf
call
test
fcom
push
fiaddl
cmp
iret
mov
add
aad
add
pop
ljmp
lret
stc
aaa
push
mov
jns
clc
inc
push
out
mov
jns
lock
xor
pop
mov
std
jle
jecxz
pop
subb
or
jb
data16
or
add
fs
xchg
jns
cld
repz
je
pop
mov
pop
rolb
xor
mov
sbb
divl
mov
shl
mov
out
push
pusha
pusha
insl
mov
pop
leave
jo
fmuls
mov
loop
inc
pop
and
aaa
add
jp
jge
adc
repnz
jb
pop
shl
push
fnsave
inc
pop
scas
in
cmp
cmpsl
mov
jnp
in
enter
subb
push
inc
test
mov
test
gs
push
in
sub
xchg
lret
lret
sbb
lahf
xchg
fcomps
adc
cmp
rorb
ds
cmpsl
sub
mov
jle
add
ja
mov
mov
sub
js
rorl
mov
in
shlb
in
fdivrs
cli
adc
call
pop
sbb
or
pushf
cmpsb
cmp
and
into
push
mov
xor
in
add
or
cmp
add
jl
xor
nop
and
and
pop
dec
sbb
inc
inc
icebp
fwait
aam
hlt
out
sub
adc
mov
andb
in
lock
in
clc
aas
adcb
add
sbb
insb
jmp
push
cld
out
cmp
fimull
cltd
popa
out
jle
xchg
sar
pop
bound
lock
add
pop
hlt
sarl
dec
je
mov
pop
fcom
rorl
xchg
adc
sarb
sbbb
push
clc
lcall
mulb
sub
sub
xchg
movsb
in
or
pop
loop
xor
mov
cmp
sti
sub
pop
mov
cld
aas
sar
dec
outsl
cmpsb
inc
cwtl
jge
ds
mov
adc
mov
adcb
pusha
or
inc
sbb
loopne
loope
mov
in
cmp
mov
mov
popf
inc
mov
xlat
mov
lea
xchg
in
sub
adc
xor
lods
daa
jle
test
jmp
cmp
loop
test
push
or
mov
pop
xchg
adc
clc
cmpsl
sub
sbb
xchg
scas
insb
movsb
mov
add
es
jle
stos
loope
nop
movsl
sarl
push
aam
pushw
fsubl
adc
popl
xchg
lds
cltd
lods
imul
js
mov
in
sar
push
push
jae
xchg
movl
arpl
fcmovbe
mov
jecxz
lock
dec
addb
int3
add
mov
es
dec
push
mov
cwtl
cwtl
shll
fwait
xor
xchg
lock
pop
jo
sub
icebp
data16
cwtl
jge
insb
pop
mov
pop
popa
and
lods
lds
mov
mov
push
lods
mov
inc
cld
sub
icebp
sub
aam
push
and
fcoml
mov
fldl2t
and
cs
xor
cmp
call
aad
testb
cli
es
xchg
and
add
dec
jo
mov
mov
out
pop
dec
psllw
movsl
std
jg
push
mov
gs
ds
xor
ret
mov
inc
mov
add
xor
rcl
bound
xor
cmp
shll
out
xchg
cmpsl
jl
xchg
dec
into
psubb
pop
mov
ljmp
aad
sarl
and
pop
fistps
add
cli
loopne
fcomps
rcll
into
clc
leave
ja
je
dec
sub
dec
dec
xor
shlb
in
jo
cs
jmp
rcll
mov
jbe
xor
fnstsw
push
int
hlt
pop
out
mov
mov
jae
pop
mov
push
sbb
or
push
mov
jo
cli
dec
sbb
inc
mov
sbb
xlat
dec
lcall
cwtl
sarl
in
fcmovb
push
pusha
imul
jno
push
sbb
std
fs
out
inc
data16
inc
jbe
arpl
out
push
xchg
push
mov
xchg
adc
xchg
enter
stos
pusha
sbb
frstor
adc
js
sbb
cltd
stos
out
cwtl
ja
mov
nop
rcrl
xchg
add
inc
test
ljmp
ljmp
sti
loop
mov
fcoml
inc
jbe
outsl
mov
cwtl
rorl
cwtl
shll
aam
in
repnz
jmp
pop
in
push
jo
inc
popa
or
push
mov
mov
movsl
call
jo
jbe
rorl
dec
mov
rcrb
addb
dec
popa
pusha
adc
pop
xchg
jp
and
adc
popa
mov
fs
into
lcall
hlt
mov
dec
push
lods
mov
cwtl
mov
ds
pop
mov
fistpl
xchg
xor
xor
pop
movups
stc
push
mov
jo
cli
push
in
adc
cwtl
shlb
repnz
hlt
cld
dec
mul
mov
push
cltd
adc
mov
int
shll
pop
xchg
mov
adc
aas
ret
inc
les
fmul
outsl
movsb
pop
mov
in
imul
data16
repnz
mov
lret
add
les
mov
adc
cmpsl
push
xchg
pop
cli
lahf
mov
mov
sahf
mov
fsubl
mov
je
pop
cmp
lds
or
sbb
std
pop
pop
int
repnz
or
mov
shlb
jne
loope
and
xchg
sub
pop
imul
fnstenv
or
mov
push
push
cmc
inc
adc
cltd
pop
sahf
jne
cli
pop
push
dec
ret
xlat
clc
adcb
jb
test
shr
lcall
popw
mov
mov
lret
pop
unpckhps
pop
adc
js
jle
adc
int3
rcrl
jo,pt
mov
mov
je
out
lahf
lea
inc
sbb
xchg
stos
in
movsb
mov
add
es
loop
stos
loope
popl
pop
aam
sub
pushw
xor
test
stos
mov
sbb
cltd
lods
imul
rolb
sub
inc
sar
push
lcall
or
xchg
arpl
data16
fs
orb
mov
std
pop
pop
int
repnz
shrb
push
es
jo
push
and
mov
popf
pop
arpl
pushf
cmp
lcall
sub
pop
xor
fistps
pusha
xchg
out
sub
fwait
pop
mov
imul
dec
cld
out
je
pop
stos
fdivr
push
mov
insl
mov
fwait
subb
arpl
hlt
mov
insb
lcall
stos
jno
or
add
shll
cs
pop
hlt
add
mov
sbb
ljmp
ljmp
dec
jne
dec
into
push
mov
ficompl
in
pushf
aas
adc
cmp
push
cwtl
ret
xor
inc
and
and
pop
dec
sysexit
mov
mov
mov
mov
push
hlt
inc
adc
fimull
or
mov
in
mov
loopne
inc
jo
pop
dec
loopne
push
xchg
push
mov
ja
and
mov
cltd
push
dec
add
stos
shll
sub
lock
hlt
sub
mov
sub
mov
adc
cmp
dec
or
sub
push
jo
xchg
sahf
mov
mov
jle
adc
xor
pop
adc
enter
shrb
mov
ss
jmp
daa
xchg
mov
and
fwait
jno
push
or
data16
mov
std
aam
out
sub
dec
pslld
dec
int3
das
shr
jae
mov
lods
push
inc
jo
push
xor
push
subb
push
inc
mov
push
jo
mov
jno
insb
sub
rclb
xchg
lret
jae
and
in
out
in
pop
ret
push
ficoml
push
imul
fnstenv
wrmsr
jnp
aad
add
cmpsb
test
addl
or
cld
ja
mov
nop
shl
pop
jl
in
pop
inc
sub
or
xorb
cmpsb
push
popa
pusha
adc
pop
xchg
jp
test
orl
les
bnd
jle
iret
push
data16
cltd
mov
inc
data16
inc
or
add
aam
jge
jle
insb
mov
popa
adc
mov
cmp
fnstsw
or
mov
pop
xchg
js
rorl
fistpl
xchg
jo
das
call
inc
lock
push
jno
push
adc
scas
call
stos
jo
or
add
mov
adc
mov
repz
jecxz
sar
and
cltd
shll
sarb
cltd
mov
ds
sub
inc
sar
push
mov
fisttpl
mov
mov
mov
pop
inc
je
pop
in
push
jo
cmpsb
popa
or
push
mov
in
cmpsl
test
mov
nop
dec
jbe
push
mov
stos
mov
push
cwtl
shrl
fwait
add
and
push
popa
pusha
adc
pop
xchg
jp
movsb
push
adc
popa
mov
fs
lcall
aam
sbb
pop
mov
cwtl
shrl
rcll
fs
adc
xchg
dec
frstor
adc
fs
dec
cltd
stos
out
dec
ja
mov
pop
int3
cs
pop
aam
inc
cmpsl
mov
sbb
ljmp
ljmp
sti
loop
mov
push
inc
jbe
xlat
pop
loopne
dec
movsl
aas
add
jle
add
call
stos
mov
out
sub
pop
and
xorl
in
hlt
push
sbb
mov
pop
lret
push
mov
ss
inc
mov
and
fwait
jno
data16
add
es
push
or
movsl
sarl
push
pushf
cmpsl
pushw
in
or
stos
mov
sbb
cltd
lods
imul
lock
mov
ds
sub
jae
xchg
dec
fs
lods
mov
and
mov
pop
data16
fs
orb
adc
std
pop
fmulp
mov
nop
pop
or
xchg
push
xlat
xchg
in
and
insb
or
cwtl
cmpl
lcall
xchg
add
rcrl
adc
adc
outsl
movsb
add
cwtl
mov
pusha
lret
les
lcall
inc
mov
dec
popa
inc
mov
cwtl
rcrl
cwtl
roll
js
in
repnz
jmp
adc
xchg
repnz
adc
in
pop
bound
cltd
stos
out
les
mov
lods
nop
rcr
push
xor
sub
jo
or
add
or
add
sub
xor
aam
bound
stos
popa
outsl
mov
cwtl
jge
in
subb
add
je
inc
or
add
hlt
movsl
mov
mov
popa
adc
mov
cmp
fnstsw
or
mov
lods
mov
data16
cltd
adc
mov
int
rorl
shlb
pop
cmp
les
cwtl
jge
cmpsl
iret
mov
pop
cli
dec
movsl
shlb
shlb
mov
xchg
das
in
repnz
jb
loopne
pop
jbe
rorb
and
mov
hlt
pop
push
js
rorl
fistpl
xchg
jo
das
call
popf
cmpsb
arpl
int3
mov
push
lcall
stos
jno
or
add
mov
adc
pop
lcall
fs
mull
dec
xchg
xchg
and
add
pop
cli
lahf
clc
cmpsl
jle
dec
jb
mov
lock
hlt
jle
inc
mov
push
shll
stos
mov
out
sub
pop
andb
xorl
in
test
lea
sub
ds
hlt
sub
rol
cmp
js
clc
adc
and
dec
pslld
mov
cli
hlt
mov
sbb
mov
hlt
insb
dec
hlt
xchg
dec
mov
aas
mov
js
mov
push
sub
cmovg
xorl
in
fsubrl
lea
add
int3
ds
hlt
add
shll
js
rclb
jmp
inc
fmull
repnz
mov
cli
int3
mov
and
mov
hlt
dec
dec
hlt
je
movsb
mov
push
add
or
sbb
pop
or
ret
xchg
jnp
pop
dec
mov
clc
cs
jno
testl
clc
dec
and
bound
nop
cwtl
in
clc
repz
xchg
push
cmp
fs
orb
cld
stos
xorb
test
call
lock
popa
adc
ds
mov
bound
xchg
adc
xchg
sahf
xchg
std
push
dec
jecxz
adc
loope
addb
mov
les
adc
dec
dec
ds
dec
xchg
or
add
adcl
sub
pusha
out
push
bound
jecxz
sar
and
xor
jl
test
stc
cs
xchg
jle
fcompl
lods
adc
push
fwait
mov
adc
loopne
lcall
iret
daa
inc
mov
and
fwait
jno
push
sub
std
push
add
repnz
pusha
sub
mov
sub
mov
adc
cmp
pop
adc
cmp
outsb
pop
mov
cltd
shll
sarb
imul
mov
test
push
sti
mov
pop
adc
jbe
push
in
dec
push
pusha
pusha
insl
mov
jecxz
nop
std
and
fwait
jno
data16
jno
pop
es
stos
or
adc
fists
insb
ljmp
mov
lock
and
pop
dec
aam
inc
inc
loope
aam
data16
addl
rorl
gs
data16
sbb
in
and
dec
adc
cmpsb
push
jp
jl
lahf
inc
outsb
and
cltd
fs
add
sbb
adc
or
mov
in
inc
cmp
mov
inc
sub
fadds
aaa
cld
push
push
js
mov
icebp
rorb
mov
push
inc
xchg
lret
and
into
clc
sbb
cwtl
aas
add
pushf
sub
mov
sub
lcall
insl
mov
jecxz
pop
cmp
push
mov
mov
xlat
mov
inc
loopne
or
repz
pop
dec
psllw
ja
int3
mov
fs
push
cltd
adc
push
in
rol
ss
pop
adc
cltd
shll
sarb
imul
push
mov
loop
and
stos
repnz
inc
mov
add
mov
inc
jo
sub
test
push
sub
cmovg
cmp
aam
fidivl
sub
push
insb
xor
jecxz
mov
jg
sbb
test
divb
lock
push
jno
push
in
into
bound
or
enter
fwait
cmp
rcll
rcrl
cli
std
push
dec
jecxz
mov
or
shrb
sub
popa
jmp
int3
cli
cmp
test
mov
xor
cwtl
hlt
cld
sub
bound
ljmp
ljmp
sti
loop
and
inc
push
push
inc
push
inc
jbe
xlat
dec
add
rcr
add
sub
bnd
pop
clc
cmpsb
push
jo
popa
or
push
xchg
jae
cmpsl
test
mov
jle
mov
repnz
js
imul
dec
pop
pop
in
inc
je
pop
xchg
mov
and
aas
ret
inc
les
pop
sbb
in
imul
je
sbbb
jo
or
add
add
das
in
repnz
jb
loopne
pop
jbe
rclb
lahf
or
jle
dec
mov
pop
add
mov
cmp
in
repnz
dec
pop
in
push
jo
mov
or
push
mov
jo
cli
push
xor
mov
unpckhps
sub
pushf
dec
hlt
test
mov
push
and
xor
push
dec
ljmp
inc
cli
test
cli
mov
inc
roll
sbb
cli
push
popf
mov
fsubr
mov
clc
pushl
iret
daa
inc
sub
sahf
aad
and
fistl
sub
cs
adc
jl
pop
orl
mov
mov
out
or
scas
push
jl
js
hlt
jne
xor
or
xchg
popf
jecxz
dec
or
ss
into
out
jno
lds
sub
aad
inc
and
scas
stos
mov
jg
fsubr
movsl
inc
cmp
cmp
jge
pop
pop
jns
mov
outsl
in
pop
cltd
inc
into
fwait
bound
push
pop
hlt
pop
jae
fwait
je
hlt
and
dec
pslld
loope
loop
add
jne
in
cmpsl
jo
std
cld
movsl
out
pop
inc
js
clc
ljmp
push
jle
cld
sbb
shr
sar
mov
dec
pop
dec
push
lock
loop
call
addb
sbb
xor
les
call
push
insb
jmp
inc
cmp
in
and
mov
cmpsl
adc
inc
mov
mov
shlb
sub
xchg
movsl
pop
fistps
cmp
mov
pop
and
xor
jo
sbb
sbb
mov
fdivl
inc
mov
ret
cmc
mov
imul
push
adcb
jo
jb
lea
out
dec
fldenv
ror
push
loop
mov
inc
fs
sub
xchg
repz
mov
lods
fld1
fists
std
and
jecxz
and
xchg
xor
dec
xlat
in
push
lea
int
jl
adcl
ficoml
pop
inc
mov
int3
pop
aad
fcomp
cmpb
test
ret
fstps
out
add
mov
dec
adc
xchg
jmp
jae
inc
jecxz
inc
orb
mov
push
sbbl
add
ja
inc
mov
dec
fcomi
push
push
sbb
adc
mov
leave
pop
ss
scas
push
sub
sub
leave
mov
add
enter
mov
pop
int3
push
daa
push
adc
pop
add
pop
push
add
mov
aad
fs
sti
call
mov
dec
pop
es
mov
cs
add
test
ds
mov
daa
dec
push
icebp
bound
xor
iret
rorb
pop
mov
out
push
sbb
cmp
push
sub
jbe
jmp
jno
adc
mov
and
int3
xor
mov
xor
or
lahf
mov
sub
rcl
and
sub
pop
ret
dec
pop
inc
mov
into
push
cmp
out
mov
and
movsb
cld
out
in
mov
lcall
jo
adc
es
aad
je
insb
or
cld
rcll
jp
aas
aam
aam
push
xchg
adc
js
movsl
or
cmp
orl
push
or
push
inc
rcr
mov
lret
jp
push
adc
mov
add
cmp
aam
lret
insb
pop
ljmp
pop
pop
mov
jnp
cmp
lods
insb
jmp
test
xchg
data16
inc
mov
shlb
cltd
je
or
cmp
in
test
lcall
sub
lock
push
sub
dec
pusha
mov
push
xor
cwtl
cwtl
shlb
ljmp
sbb
insl
pop
sub
push
adc
aam
enter
sar
pop
bound
mov
cltd
adc
pop
mov
push
or
icebp
add
ljmp
cwtl
and
mov
je
mov
pop
and
mov
ljmp
xchg
and
mov
je
push
push
pop
scas
mov
mov
rorl
sarb
pushf
mov
and
pop
mov
xorl
aas
add
int3
lret
jp
lods
mov
les
cmp
pop
fdivrl
xchg
dec
enter
pmulhuw
inc
xchg
pop
dec
inc
xchg
stos
out
xchg
mov
stos
adc
lret
push
add
ljmp
aaa
je
dec
lods
pop
test
rcrb
cmp
mov
sub
bnd
stos
add
push
lcall
sub
adc
mov
and
hlt
mov
dec
mov
push
mov
and
test
pop
out
insl
adc
pop
mov
lret
adc
dec
shl
ss
js
sbb
out
cmp
push
sub
xor
mov
aas
in
aam
xor
sub
cld
xor
jmp
mov
sub
cld
aas
shr
push
dec
lar
sub
pop
cld
movsl
xchg
adc
test
es
jnp
inc
pop
mov
lea
mov
pop
je
pop
rcr
stos
xlat
push
mov
push
mov
push
adc
dec
cmp
das
mov
imul
rorb
push
call
rcr
popa
fldcw
mov
mov
outsl
pop
sub
mov
ja
movl
jnp
imul
cmp
jle
aad
lcall
ret
nop
in
mov
dec
jp
ftst
adc
lret
push
and
xor
push
mov
ds
hlt
sub
mov
jbe
push
inc
jno
call
pop
mov
ret
and
call
lret
or
aam
xor
mov
hlt
and
sub
mov
mov
enter
fwait
pop
jl
lods
pusha
fwait
xchg
pop
push
scas
js
pop
push
jae
jns
cmp
call
pop
lcall
adc
xor
mov
shll
jnp
lods
jp
ljmp
cmp
pop
adc
nop
cmp
lods
pushf
cmp
mov
xor
fwait
sub
or
mov
push
ja
pop
shl
nop
mov
jae
sbb
test
fdivl
aam
cmp
pop
mov
push
mov
add
dec
jo
stos
jbe
mov
pop
fiaddl
xlat
sub
pop
pop
cmpsb
push
lods
jno
ds
cwtl
je
cmp
mov
push
test
stc
mov
daa
ss
pop
popf
jne
sarl
aam
pusha
daa
jb
xchg
int3
pop
shl
sub
adc
fsubs
aas
sbb
lods
jo
adc
mov
dec
orb
in
add
mov
int3
iret
xchg
and
fsubs
ds
hlt
adc
rorb
out
or
lcall
push
bound
into
xchg
lret
xor
dec
jl
fldl
je
cmp
in
jo
aas
shr
jae
and
jmp
test
push
sub
inc
adc
jnp
loope
test
and
aad
push
and
jl,pn
ret
int
jno
jne
call
ja
js
orb
mov
xchg
and
mov
push
dec
jmp
ret
scas
cmp
add
int3
out
inc
adc
fwait
inc
or
inc
test
sbb
adc
mov
std
dec
pxor
repz
loopne
dec
mov
pop
mov
hlt
fcompl
fisubrs
add
xchg
xlat
jmp
xor
out
test
push
dec
pusha
adc
and
jecxz
mov
lret
test
leave
push
mov
rcll
adc
fidivrs
push
sbb
outsb
mov
cmp
cmpsl
pushw
in
les
mov
push
xor
or
lahf
mov
jl
jg
in
cvtdq2ps
sub
and
clc
jbe
inc
dec
or
or
xchg
adc
rcl
xchg
pop
ljmp
cmp
ds
lods
lds
push
xorl
cmc
outsb
lods
sti
fs
js
mov
insb
cwtl
ds
mov
mov
test
scas
cmp
shl
xor
js
jno
sbb
sahf
push
mov
scas
outsl
sub
cmp
mov
div
mov
shll
cmp
cmpsl
push
adc
jb
xor
add
les
scas
push
push
bound
in
mov
cmp
jmp
ds
dec
xchg
and
jns
clc
cltd
in
jnp
pop
pop
xchg
mov
jae
xorb
and
in
inc
jl
mov
xchg
mov
movsb
fldcw
inc
mov
cli
fsubrl
lcall
je
nop
add
pop
out
push
imul
jecxz
jmp
dec
jnp
lcall
mov
int3
pop
je
mov
arpl
call
test
stos
inc
jb
jp
aas
xchg
mov
xchg
pop
rclb
cmp
jg
push
js
jg
adc
push
repz
cltd
roll
and
test
xchg
fs
mov
ljmp
stos
loopne
lods
mov
mov
adc
jmp
mov
lret
leave
adc
mov
das
adc
and
pop
rcr
fdivrl
xor
xchg
cwtl
sbb
fsubs
adc
inc
daa
jns
mov
push
jge
out
popf
xchg
pushf
orl
mov
jge
mov
aam
mov
sahf
pop
xchg
cmp
mov
icebp
and
and
dec
out
jmp
push
cld
sub
cmpsb
cltd
repz
or
inc
jl
lock
sahf
imul
jl
aad
cwtl
push
div
dec
pop
inc
xchg
cs
sti
dec
pop
mov
test
mov
push
sbb
sbb
cmp
xlat
idiv
and
and
mov
add
cmp
dec
repz
sbb
into
pop
hlt
aad
and
jns
or
repnz
sub
adc
js
adc
inc
je
stos
ret
cmp
cmp
testl
adcb
aad
sbb
adc
jbe
push
sbb
xor
pushf
movsb
or
test
lock
movsl
dec
or
hlt
xchg
int
cwtl
outsl
inc
lods
add
ljmp
ret
orb
inc
cmp
dec
adc
jmp
cmpsl
movsb
loope
mov
xor
mov
xor
push
sbb
test
xchg
in
cmp
push
rolb
rcll
sbbl
xor
movsb
loope
mov
cmc
mov
stc
push
inc
mov
mov
pop
repz
sbb
das
es
aam
add
das
ret
mov
repz
dec
enter
sub
mov
mov
ja
inc
mov
pop
pop
shr
dec
enter
mov
and
adc
inc
shll
sbb
cld
mov
loop
push
adc
scas
xchg
test
or
mov
mov
repz
movsb
lods
jmp
xchg
int
inc
cwtl
adc
lock
push
test
gs
push
dec
sub
pop
jns
add
cmpsl
adc
js
hlt
nop
rorl
fsubrs
in
pop
and
add
mulb
pop
fildll
call
inc
lock
push
jno
push
xor
scas
call
loope
insb
xchg
cwtl
jge
ret
fwait
adcb
sub
ds
hlt
adc
jbe
cmp
ss
mov
mov
cwtl
in
and
sub
out
jns
pop
or
cs
sbb
push
mov
jge
imul
mov
je
fs
pop
imul
dec
dec
test
aam
aas
js
inc
fdivs
cs
or
ss
adc
repnz
idivb
insb
shll
stos
mov
ret
xchg
shlb
fmull
std
fstps
je
xchg
es
inc
mov
jge
std
xlat
push
mov
push
mov
js
int3
cmc
xchg
push
jbe
fistpl
push
push
mov
test
add
fbld
add
shll
fdivs
sub
out
cld
aam
aas
xor
cli
fcomps
enter
mov
cmp
sarl
xchg
or
int3
cmpb
stc
bound
sub
movsb
pusha
test
insb
or
pop
test
or
adc
jmp
outsb
pop
and
mov
pop
pop
nop
cmpsl
out
pop
mov
icebp
aam
ds
xorb
int3
int
mov
sub
addr16
mov
dec
fldcw
pop
leave
mov
ds
xchg
add
pop
mov
jno
imul
add
push
sub
add
adc
xor
arpl
lahf
push
shl
sbb
push
mov
mov
enter
cmpsl
sub
popf
divl
fnsave
fcompl
xor
xchg
fs
push
mov
push
pushf
inc
das
push
mov
cwtl
mov
mov
pop
xchg
push
cmpl
mov
sub
and
push
cmp
jb
mov
push
fnsave
seto
xchg
rcrl
pop
mov
iret
das
fcmovne
push
enter
pop
jnp
out
stc
add
out
sub
in
mov
or
xor
stos
adc
pop
je
cmc
addr16
fwait
sub
xor
sub
pushf
mov
add
mov
mov
mov
dec
dec
mov
test
push
aam
pop
mov
adc
dec
in
loop
cs
punpcklbw
push
inc
je
or
and
in
xor
pop
mov
ljmp
xchg
xchg
xor
pop
fistps
arpl
mov
mov
fldt
dec
mov
push
in
in
aas
sbb
cmp
adc
call
and
xor
or
aaa
pop
jb
not
les
cld
cmpsl
dec
mov
adc
or
in
add
xor
in
mov
stos
lock
push
jno
push
in
out
sbb
addl
je
int3
clc
mov
push
jbe
push
in
shrb
test
jnp
push
mov
call
cmc
and
fildl
jge
les
fsubrl
pop
mov
fidivl
scas
test
into
inc
cmp
cmp
in
push
jb
push
shrb
jge
inc
cld
fwait
cld
lods
lea
push
imul
mov
cld
push
push
cld
pushf
pushf
imul
push
inc
adc
cwtl
pusha
outsb
mov
out
or
addl
cmp
iret
mul
into
les
fs
out
repnz
cwtl
or
scas
ja
push
xchg
icebp
xor
je
add
fwait
adc
mov
adc
or
out
jo
bound
xchg
adc
pop
in
fs
js
dec
add
inc
mov
test
jle
cmp
out
aaa
push
mov
or
xorb
ljmp
sub
mov
cld
sti
lcall
fs
xor
scas
call
xor
gs
aaa
cmpb
mov
add
mov
popf
je
pop
add
push
adc
xchg
mov
or
jmp
int
add
push
sbb
jge
repnz
jg
pop
mov
or
add
pushf
inc
into
jle
test
adc
popa
mov
arpl
inc
push
cwtl
stos
or
xorb
ljmp
dec
inc
sbb
std
mov
jae
dec
test
fistpll
xchg
cmp
aas
aam
jb
enter
adc
movsl
test
add
add
outsb
out
fimuls
shll
scas
add
ficoms
movsb
mov
add
xor
hlt
cmp
xchg
fs
movsl
jle
inc
or
xchg
pop
ljmp
jo
or
add
xchg
shl
push
jno
push
in
into
bound
in
lods
mov
sub
sbbl
iret
ljmp
int3
add
daa
scas
out
pushf
sub
in
insb
adcl
mov
sub
xchg
and
movsl
jge
stos
pop
or
cld
stos
jno
call
sti
loop
shll
mov
sub
cmpsb
outsb
mov
mov
sub
lods
mov
sub
or
fmul
sub
add
popf
ds
push
subl
pop
les
sahf
push
mov
cmp
ljmp
data16
loopne
popf
nop
mov
push
pop
leave
inc
adc
jp
dec
fs
movsl
addb
js
test
jb
repnz
std
xchg
cwtl
xlat
btc
scas
ds
mov
xor
std
dec
sbb
test
or
xchg
fisubrs
fcoms
jle
mov
loope
push
inc
dec
in
fs
lods
mov
or
nop
push
xchg
push
dec
sbb
shr
sbb
subl
loope
lahf
cmp
sbb
mov
push
fdivs
xor
aaa
adc
mulb
fwait
std
and
clc
rclb
ljmp
cmp
pop
mov
mov
mov
dec
xchg
dec
es
pop
mull
sbb
push
inc
decb
inc
mov
mov
add
inc
inc
mov
or
inc
jno
ds
dec
out
pop
test
fisubl
cmp
shrb
aas
inc
sub
roll
fisubrl
xchg
xlat
pop
popa
cmp
dec
mov
pop
pop
xlat
mov
sarl
out
cmp
or
shlb
jbe
cmc
cs
fsubrp
mov
sbb
shl
adcb
or
dec
sbb
pop
loopne
mov
mov
mov
and
dec
dec
xorl
cld
mov
sub
insb
stc
push
pop
mov
jne
xor
roll
adc
pusha
bound
mov
cmp
mov
jle
ret
mov
lahf
jge
xchg
inc
sub
leave
jns
lret
jle
sub
aam
cmpsb
mov
dec
lea
ds
push
dec
ljmp
repnz
notl
aas
jno
hlt
dec
xchg
sbbb
push
push
xchg
mov
sbb
cmp
mov
and
inc
pop
std
lods
mov
and
js
mov
cmp
cmp
mov
ss
inc
mov
xor
push
sub
aas
outsl
test
push
out
repz
mov
ljmp
fld
mov
sub
mov
cmp
xor
and
adc
mov
pop
or
mov
repnz
mov
xor
cltd
cltd
mov
jecxz
sbb
or
jl
fcoms
pushf
sbb
jns
or
adc
adc
scas
cld
clc
cmp
dec
ljmp
or
insb
mov
sar
repz
data16
addr16
pushl
int3
test
xor
nop
fcompl
mov
mov
rcrl
cmp
cmp
iret
ljmp
mov
into
cmp
cmpsl
les
bnd
push
push
sbb
mov
cld
sbb
sub
insb
mov
in
adc
lds
je
ja
push
adc
out
test
sub
cmpsl
bound
cmp
cmp
mov
sub
mov
mov
ret
rorl
push
mov
and
lds
rcll
mov
jo
add
jbe
adc
lds
hlt
cmp
bnd
push
aad
lret
scas
lea
sub
addr16
mov
jg
sub
ja
xchg
cmp
movsl
imul
cmp
mov
add
dec
sub
push
outsl
fsubp
incl
fistpl
mov
mov
insl
mov
mov
and
xchg
inc
mov
pop
lods
xlat
add
jg
sbb
mov
ljmp
cwtl
adc
sub
and
mov
xchg
cld
repz
sub
cmpsb
in
clc
dec
jl
or
xor
mov
arpl
cmp
inc
pop
fidivs
pop
or
or
mov
and
repz
stos
push
imul
cmc
aam
aad
adc
repnz
or
dec
sbb
mov
aam
pop
arpl
popf
je
jmp
je
rcrb
pop
sub
sahf
adc
pop
jnp
bound
push
push
cli
ficoml
leave
push
mov
xchg
shlb
js
push
rorl
clc
add
sub
mov
dec
mov
pop
adc
sub
or
adc
add
imul
push
lcall
testb
mov
xor
out
faddl
pop
dec
cmpsl
pop
imul
testb
xchg
xchg
add
xlat
fmulp
mov
dec
int3
pop
add
push
cs
cltd
pop
jns
xor
mov
filds
ja
lock
stos
inc
pop
insl
xchg
mov
cwtl
push
clc
test
dec
call
add
cmp
inc
sub
test
stc
fadds
stc
dec
test
cmc
popl
jecxz
jno
inc
xchg
adc
rolb
sub
cmpsb
or
stos
les
and
dec
or
jmp
das
push
jmp
loopne
rolb
inc
shlb
dec
jo
add
add
imul
jo
int
lock
aaa
sub
and
pop
xchg
sub
outsb
jmp
mov
mov
push
cmp
sub
xor
mov
xor
in
cmp
cmp
outsb
and
into
add
or
xorb
test
fistpll
ret
inc
les
xor
aas
fdivs
mov
les
je
lods
dec
nop
lods
mull
cs
xchg
and
add
pop
cli
lahf
movsb
cmpsl
jle
dec
push
stos
test
mov
arpl
and
dec
inc
in
sbb
mov
xchg
int
repnz
or
dec
loope
mov
cmpsb
loopne
clc
jmp
dec
mov
sub
mov
cld
pop
push
sar
lret
push
mov
add
fcmovb
jp
rol
mov
test
fistpll
xchg
mov
push
addr16
ficoml
mov
mov
pop
adc
shll
xor
mov
repz
movsb
mov
add
xor
hlt
cmp
jb
add
es
ljmp
movsl
shrb
xor
test
mov
addb
in
add
xchg
movsl
jle
out
mov
push
fldcw
and
sub
aaa
cld
jne
inc
movsl
jle
test
adc
pop
pop
cli
sbbb
sub
cltd
jb
dec
sarl
xchg
cmpsb
loopne
gs
xchg
mov
pushf
fistpll
ret
push
rcrl
sub
mov
sti
cwtl
in
jbe
mov
pop
out
aad
mov
xchg
xchg
add
filds
lcall
adc
dec
cld
push
lret
dec
jg
cmp
lahf
nop
sbb
out
jne
jp
dec
repnz
add
rol
les
and
push
in
or
icebp
ljmp
xor
in
sarl
sbb
hlt
push
inc
xor
mov
test
mov
mov
negb
mov
pushl
ljmp
sbb
negl
pop
mov
sub
cmpsl
clc
test
shlb
pusha
sub
lock
leave
data16
shll
enter
pop
push
cltd
test
mov
mov
cmp
scas
or
repnz
xchg
mov
pop
jge
mov
call
inc
add
add
test
jge
sbb
pop
mov
xchg
mov
and
loopne
cmp
cs
enter
scas
or
jl
and
xlat
notl
or
dec
lea
inc
push
movsl
add
je
push
les
jecxz
cmp
cli
cmp
in
mov
jl
dec
ficompl
andb
insb
movsl
mov
jl
in
cwtl
fwait
lahf
push
add
inc
int3
xor
dec
dec
pop
je
test
mov
movsb
movsl
rorb
mov
repz
pop
or
mov
cmpsl
movsl
cli
mov
sub
mov
sub
mov
pop
inc
addr16
mov
add
cs
lock
adc
and
dec
lsl
lahf
mov
repz
pushf
aam
out
fdivr
pop
outsb
jo
mov
data16
mov
fdivrl
xchg
rcrl
call
pop
insl
in
cmp
mov
xchg
and
clc
or
in
hlt
push
ljmp
push
and
in
sub
mov
add
insb
aad
pop
jge
inc
in
adcl
fmul
sub
in
push
mov
push
les
ss
push
inc
bts
mov
iret
or
mov
and
pop
sub
inc
icebp
jge
aad
cmp
mov
dec
inc
call
pop
push
ror
cmp
or
dec
mov
mov
pop
jno
gs
mov
aas
fcomip
fistl
mov
cmp
mov
cltd
or
call
fadds
in
int
or
fimull
or
loopne
test
loop
ss
xor
push
and
pop
xor
adc
mov
jp
add
sbb
mov
mov
stc
xor
mov
push
hlt
dec
mov
in
shrb
xor
push
mov
add
lahf
push
in
add
and
addr16
adc
orl
scas
cmpsl
sbb
xor
fs
movsl
cmp
cmpsb
cmp
cmp
pop
loop
xchg
jp
push
inc
dec
leave
dec
ja
leave
stc
or
mov
mov
inc
bound
loop
or
imul
data16
shrb
enter
adc
data16
dec
pop
mov
push
stos
inc
push
lds
dec
fstl
ljmp
loopne
cld
sbb
cmp
cltd
mov
sbb
pop
std
lods
mov
fs
dec
je
adc
sub
std
xchg
imul
les
in
cmp
xchg
mov
jp
mov
add
cwtl
hlt
sbb
sub
jp
in
push
movsb
fnstsw
inc
int
fidivl
xchg
pop
pop
in
xor
int3
sub
dec
xor
out
mov
clc
pop
mov
fadds
cld
ja
bswap
out
adc
mov
hlt
pop
lret
pop
sub
clc
push
scas
push
push
cs
mov
call
div
add
adc
hlt
test
outsb
pushl
insb
jle
cmpsb
loope
out
lret
add
ljmp
dec
icebp
jg
negb
fstps
inc
lods
imull
idivb
xchg
lahf
fwait
adc
fdivrs
js
nop
and
fcompl
into
nop
xor
pop
xor
jp
and
dec
lcall
adc
mov
cmp
insb
ljmp
xor
lods
add
shlb
fcomps
mov
xchg
adc
cld
out
in
xchg
inc
fistpl
mov
xor
sub
xchg
int3
sbb
xchg
push
in
lcall
insb
cmp
lret
cmp
ds
cmp
jmp
scas
add
inc
aas
imul
pop
pusha
or
test
mov
mov
cltd
pop
lahf
inc
mov
mov
icebp
aam
or
cmp
pop
sahf
push
frstor
cmp
pop
add
or
and
or
aam
xchg
mov
or
imul
jmp
rcll
idivb
add
ret
mov
addl
fwait
pop
mov
inc
cmp
cld
pop
mov
decl
out
lret
shrl
or
add
sbb
cmpsb
lret
pop
lret
mov
sub
mov
fbstp
out
mov
lods
aam
inc
add
cmpsl
push
in
mov
cmpsb
sub
std
mov
or
inc
add
mov
ror
je
pop
cli
xlat
or
push
imul
clc
sahf
cmp
or
jae
je
adc
pop
mov
cltd
mov
pusha
stos
sarb
add
addb
rcll
inc
arpl
xchg
push
dec
cmp
out
sbb
fsubs
inc
adc
stos
adc
push
les
xchg
mov
push
jnp
ss
sbb
sub
pushf
add
fstl
adc
pop
and
xchg
mov
ret
addr16
lret
test
sbbb
jmp
pop
sub
pop
unpcklps
dec
adcl
int3
lds
mov
sub
out
in
add
decl
aas
outsb
ds
fcmovu
pop
push
or
mov
mov
inc
mov
xlat
addl
xorl
mov
les
push
add
push
movsl
call
push
dec
jbe
push
ss
push
mov
push
cwtl
shrl
fwait
subb
sbb
std
fadds
push
mov
sbb
xchg
adc
data16
in
pop
bound
in
fs
add
je
out
and
pop
xor
loop
pop
mov
outsb
or
adc
ss
insb
add
xor
mov
dec
pop
pop
in
mov
push
dec
dec
ds
push
mov
sar
pop
out
loopne
xchg
and
mov
cmpxchg
mov
int3
in
mov
roll
xor
adc
or
cmp
push
mov
rcrb
or
adc
rorl
out
xlat
xchg
xor
ret
bound
mov
pop
clc
popa
stos
pushf
jb
mov
cmp
push
lods
pop
inc
cmp
and
mov
movsb
or
inc
pop
js
lcall
divb
std
loop
mov
mov
stos
les
or
test
cmp
repz
mov
out
sbb
ds
jl
stc
es
dec
mov
pop
repnz
inc
dec
mov
cltd
xchg
in
jo
mov
aam
cld
cmp
push
adc
lcall
nop
xchg
jecxz
inc
mov
arpl
and
mov
test
fadds
push
ss
push
stos
test
out
pusha
lret
push
mov
adc
mov
ret
mov
call
xchg
outsb
mov
pop
fidivrl
js
jb
ljmp
dec
insl
call
pop
jecxz
push
cmp
lds
aam
dec
out
mov
das
nop
sarl
aam
mov
mov
xchg
movsl
mov
or
and
in
pusha
popa
adc
ds
mov
bound
xchg
adc
clc
in
or
xor
je
push
stc
or
cmp
push
imul
test
xchg
enter
loopne
sub
movsb
adc
sub
enter
pop
cmp
sbbl
mov
outsl
movsl
mov
les
sub
inc
pushf
test
pop
pop
inc
inc
cmpsl
cmp
dec
jmp
jae
pop
scas
or
rol
fcomip
outsl
das
mov
mov
dec
and
in
adc
cwtl
clc
xor
test
add
into
fisubrl
icebp
mov
xor
je
dec
add
mov
xchg
addb
shlb
lahf
bound
lea
push
cmp
mov
jecxz
icebp
fwait
std
imul
shlb
test
pop
jb
rorb
int3
pop
in
out
xlat
mov
adc
sub
les
bound
xchg
adc
test
inc
in
mov
insl
movsb
fs
xor
loope
and
mov
ret
in
ja
or
sub
inc
rcr
add
ss
hlt
add
pop
dec
in
jae
push
dec
jecxz
lock
dec
addb
lds
jmp
pop
push
cltd
adc
data16
jp
cltd
adc
mov
int
rorl
gs
xchg
mov
mov
les
into
insb
xchg
cwtl
jge
xchg
rorb
push
data16
jo
or
dec
sub
or
jno
adc
adc
xchg
jns
and
aaa
sub
mov
cmp
rcr
xchg
add
cmp
jb
in
pop
mov
and
dec
cmp
cld
pop
sub
push
loop
adc
push
movsb
fs
roll
jp
ret
add
hlt
sub
or
loop
inc
add
and
fists
xor
xor
popa
inc
xor
or
or
mov
imul
in
dec
loop
or
ror
gs
xchg
mov
mov
aas
ret
mov
adc
outsb
fsubs
mov
es
orl
add
das
xor
jbe
push
cmp
xor
movsl
mov
dec
push
mov
mov
not
or
les
mov
outsl
sbbl
cli
sub
adc
sub
lods
mov
mov
adc
xor
jo
jle
test
in
and
mov
jle
or
in
pop
adc
dec
inc
mov
dec
mov
ret
xor
stos
test
jmp
inc
fmull
repnz
loope
cmpsl
int3
cli
pop
mov
mov
lock
hlt
in
hlt
in
dec
sub
adc
and
and
sub
dec
mov
daa
push
sbb
cmp
push
and
pop
scas
into
push
nop
and
popf
push
fistpll
test
aad
fmul
jge
pop
mov
inc
ja
movsb
push
cltd
out
inc
or
jecxz
aam
mov
ds
pop
mov
mov
in
pop
jbe
loopne
xchg
pop
add
push
ret
and
lods
sbbb
repnz
jns
lds
lods
push
subb
push
jnp
addb
or
test
inc
sub
cmovg
cmp
aam
ret
jo
popa
add
les
xchg
pushf
adc
sub
cld
out
push
cmp
mov
dec
xlat
test
mov
mov
shrl
insl
sub
sbb
mov
scas
jns
andl
loopne
push
data16
add
sub
pop
xorb
mov
ljmp
cmp
movsl
dec
pslld
lret
sub
mov
push
xchg
sub
add
movsl
ja
mov
mov
sub
mov
push
push
cwtl
push
or
repz
test
ljmp
sub
loopne
jo
mov
pusha
sbb
je
xchg
and
dec
pop
dec
ds
inc
aad
xchg
movsl
sub
pop
cmpsb
aam
dec
loope
sub
fnstcw
es
out
sbb
mov
adc
push
hlt
mov
in
cmpsl
xchg
and
in
sbbl
cmp
hlt
adc
adc
test
xor
adc
enter
lods
ret
pop
adc
mov
mov
inc
sahf
in
or
arpl
lahf
add
mov
push
arpl
adc
and
and
cmp
mov
outsl
aam
push
shll
add
pop
pushf
daa
mov
xchg
push
clc
sbbl
inc
ret
faddl
addr16
pushf
pushf
or
inc
and
int
cld
rolb
pop
or
aas
xchg
imul
lods
push
inc
fcoml
xchg
adc
ficomps
test
add
jo
gs
lods
ret
adc
in
cld
mov
and
mov
push
imul
inc
in
sar
dec
add
lcall
rolb
int3
push
pop
test
jno
ret
repnz
push
mov
mov
out
and
loopne
enter
fsubrs
mov
icebp
lret
push
in
xor
sub
in
sbb
dec
cld
stc
cmp
jecxz
in
adc
add
mov
cmp
or
mov
and
xor
ljmp
or
ret
das
push
in
jo
adc
in
rclb
sub
test
fstpt
subl
and
and
inc
sbb
mov
je
push
movsb
popa
mov
addb
mov
hlt
cmp
adc
lret
push
mov
test
adc
and
cmpsl
xor
jb
inc
cli
dec
mov
or
xor
ret
sbb
cmc
sub
cs
inc
xor
aam
mov
xor
into
sub
ret
xor
je
adc
mov
or
cmp
and
mov
sbb
mov
pushf
aaa
les
mov
mov
enter
cs
out
inc
sbb
xchg
outsb
and
movsl
testb
mov
sbb
and
adc
sub
clc
xchg
mov
push
and
nop
sub
xor
clc
pop
scas
cli
and
cmp
sub
lods
cltd
cmp
lcall
bound
call
or
out
xchg
jecxz
and
mov
js
cltd
lods
adc
xchg
insb
sub
cmp
cmpsl
in
sbb
or
and
fdivrs
test
loopne
test
jae
aam
cmc
sub
lahf
cmp
jb
pop
push
mov
aam
pop
cmp
mov
outsl
mov
jmp
arpl
fwait
aam
in
pushf
lods
cld
repz
xchg
cmpsw
push
decl
cmp
std
push
clc
test
sti
mov
sub
push
call
test
in
aam
ret
xchg
int3
dec
cmovns
cltd
adc
leave
mov
fsts
aas
aas
adc
scas
loope
jo
xor
imul
xchg
clc
adc
mov
addl
shlb
arpl
loopne
sub
in
xchg
mov
dec
pop
jle
into
and
ds
jp
push
xlat
cmpsb
push
in
fbstp
pop
aad
mov
fmull
cmpps
cmpsl
mov
dec
dec
ds
add
pop
pop
push
xlat
pusha
cwtl
out
decb
loope
cmp
sti
and
push
mov
fdivp
or
sbb
lods
xadd
cmp
dec
jle
xlat
add
in
ret
in
cmp
rclb
pop
xlat
sar
sub
sub
les
xlat
mov
lock
fcomi
out
pop
cmpsb
mov
mov
push
mov
push
mov
or
xor
inc
jb
sar
ja
scas
xchg
popf
hlt
xlat
repz
push
mov
aaa
imul
push
sarl
jbe
xor
inc
push
stc
push
cmpsl
cmp
shrl
pop
test
xchg
js
insb
ja
mov
mov
fs
in
add
pop
adc
inc
mov
in
mov
jns
aaa
mov
repnz
mov
push
push
rclb
pop
call
mov
mov
cld
pop
orb
add
cltd
adc
dec
inc
bound
icebp
and
push
cltd
repnz
scas
stc
or
jp
dec
test
inc
mov
shll
out
sbb
xlat
cwtl
movsl
rcrb
data16
cmovo
pop
inc
mov
popf
in
stc
les
mov
dec
ss
andl
inc
lock
hlt
jmp
loopne
ret
repz
rorl
mov
push
mov
inc
pusha
push
push
cmp
hlt
mov
cmp
xchg
cmp
imul
leave
push
jg
mov
shll
arpl
fcmovnbe
sahf
push
int3
xlat
and
test
test
pop
inc
fistpll
mov
stc
out
in
pop
fimull
push
sete
mov
push
roll
xor
sub
pop
test
popa
jp
leave
or
or
inc
insl
pop
bnd
sbb
pushf
clc
add
adc
pop
nop
sub
mov
test
out
lock
xchg
pop
lret
pop
sarb
inc
in
push
xor
xchg
das
xor
js
or
aam
dec
push
cmp
stc
or
cltd
or
pop
and
adcl
fcmove
into
add
lea
dec
ljmp
lock
cmc
ret
pop
mov
fistl
inc
mov
sbbb
lock
rolb
and
pop
cmp
pushf
shrb
inc
adc
in
push
add
dec
fs
jle
mov
loopne
aam
mov
or
mov
push
mov
or
pop
gs
call
sbb
cmp
in
jb
mov
adc
or
jp
pushf
enter
lds
dec
ja
call
repnz
sub
lds
dec
push
das
fdivrs
mov
add
pop
mov
test
xchg
subb
mulps
rcll
mov
call
stos
sub
ret
test
insb
xchg
cmp
mov
mov
push
sub
jo
push
mov
aaa
mov
mov
mov
out
add
ljmp
and
lods
add
xor
nop
cmp
jp
int
jne
scas
and
loop
sub
cmpsl
test
ret
hlt
mov
xchg
mov
mov
notb
lock
out
mov
jbe
jno
sub
cmpsb
das
fwait
adc
arpl
add
stc
shll
pop
jo
aaa
pop
push
pop
xchg
shl
test
arpl
testl
fsubl
out
cmp
or
popa
dec
lock
or
shrl
pop
cmpl
mov
sub
das
inc
and
or
aas
xchg
mov
lock
push
sbb
mov
stos
sbb
ljmp
outsl
push
stos
incb
aam
mov
aas
imul
out
cli
mov
aaa
sub
stc
push
pop
xchg
add
loope
mov
pop
cmp
hlt
jmp
mov
es
lret
dec
ret
roll
and
mov
jecxz
insb
insl
push
aas
fwait
jb
dec
dec
push
push
inc
leave
jg
nop
test
rcl
das
stos
push
mov
arpl
inc
push
pop
inc
sub
divb
mov
data16
push
xor
cmp
mov
out
out
jo
jmp
mov
pop
shrb
shrb
adcl
fxch
ss
xchg
adc
cwtl
xor
in
lock
push
inc
test
in
data16
sub
jmp
and
mov
repz
mov
push
test
mov
lds
xor
lods
fwait
mov
rcl
adc
sarl
pop
push
aas
xchg
dec
pop
push
inc
push
repnz
lds
les
inc
hlt
add
mov
movsb
enter
xor
jb
xchg
dec
cmp
add
mov
out
adc
xchg
mov
mov
js
dec
test
aas
fisubl
sub
hlt
push
aam
mov
call
mov
jp
aas
outsb
adc
sbb
mov
es
push
xchg
dec
stos
lret
cmpsb
out
adc
mov
dec
jae
ficoml
dec
iret
jo
xor
fcomip
cmpsb
dec
mov
xorb
loope
out
dec
in
or
out
scas
pop
sub
sbb
sbb
cmp
in
push
aaa
mov
int
pop
out
fiaddl
and
ja
push
popa
stos
dec
ljmp
push
add
rcll
mov
pop
pop
cmp
cmpsb
ret
jno
dec
addr16
movsl
jl
popa
xor
push
cli
mov
inc
xor
repz
xor
lcall
loopne
pop
pop
outsb
mov
out
pop
imul
dec
cmp
mov
les
cmpsl
ret
push
push
test
mov
in
add
leave
mov
jg
push
jle
bound
aas
cld
nop
cmp
jno
call
scas
fistps
cld
or
ret
mov
pop
inc
mov
push
inc
add
jne
std
jmp
lods
popf
je
addl
push
into
addb
xchg
cs
pop
pop
cmp
dec
sarb
dec
pop
inc
jb
or
dec
jecxz
mov
xor
les
jge
ret
out
into
and
inc
dec
lea
mov
pop
xor
pop
ret
pop
mov
pop
and
es
cmpsb
lock
inc
hlt
mov
cmc
lock
jmp
int3
mov
fnstsw
lods
sub
roll
mov
outsb
in
cli
push
ret
fdivrl
int3
fwait
aas
stos
cld
mov
insb
pop
xchg
insb
fstpt
sub
mov
push
mov
pushf
mov
ss
idivb
jl
sarb
into
add
xchg
test
cmp
sub
repnz
hlt
enter
xchg
mov
dec
int3
in
add
sbb
bound
stc
jns
test
mov
bound
push
push
pushf
add
sahf
mov
fmuls
mov
insb
js
cmp
xchg
rorl
sarl
arpl
xor
pop
les
xor
in
or
cld
dec
pop
rclb
add
enter
scas
or
xchg
pop
sbb
sbb
sub
pusha
orb
call
dec
jle
mov
fadd
movsb
jmp
mov
mov
mov
bound
popa
movsb
imul
or
mov
xor
dec
sub
test
mov
cmpl
xchg
pop
ret
testb
movsb
mov
test
adc
out
cwtl
ret
stc
mov
jb
fsubr
mov
dec
mov
jle
cmp
mov
inc
cmp
push
stc
push
ja
sub
test
ret
sub
xchg
addl
jmp
ja
push
scas
in
mov
mov
data16
xor
js
jg
mov
push
shlb
out
pop
sbb
daa
or
xchg
jp
xchg
dec
sub
pop
mov
pop
mov
pushf
inc
pop
jb
mov
lods
cwtl
cmp
cmp
inc
and
mov
je
and
xchg
dec
aaa
jnp
jge
clc
mov
inc
bound
aas
outsb
jmp
mov
sti
mov
push
hlt
sbb
and
rcrl
fsubrs
in
adc
cmc
scas
sub
mov
pop
mov
add
mov
hlt
sub
nop
adc
lret
adc
mov
fcompl
mov
leave
cmp
push
addr16
or
adc
out
mov
fdivl
iret
jg
lcall
cmp
push
sbb
mov
ljmp
mov
shl
icebp
dec
or
fcoml
jno
lds
sub
cmp
rolb
mov
cmp
adc
int
mov
cmc
js
mov
or
sbb
cmp
outsb
push
test
mov
mov
sub
inc
push
sub
call
dec
xor
pop
movsl
mov
xchg
inc
mov
adc
inc
aam
xchg
sbb
sbb
enter
pop
sbb
and
mov
and
or
ret
sbb
imul
inc
sub
jo
addr16
dec
loope
pop
or
insl
into
add
out
fwait
push
xor
int
push
das
js
push
xchg
jmp
test
mov
arpl
int
je
adc
push
and
add
es
loope
jmp
hlt
cmp
sub
inc
inc
xchg
add
enter
xadd
int3
mov
repz
pop
adc
dec
popf
mov
lahf
mov
loope
sub
ret
dec
imul
add
stos
cli
xchg
dec
add
pop
shlb
rolb
out
mov
movsl
cwtl
and
or
int3
scas
sbb
dec
add
and
movsb
das
sahf
shlb
pushf
stc
popf
add
je
add
bound
or
daa
add
test
pop
cmp
aaa
mov
fsub
out
push
stc
call
fcomps
vsqrtss
add
scas
mov
add
mov
sub
mov
aaa
daa
shlb
push
xor
mov
jmp
mov
clc
cmpl
out
cs
adc
dec
cmc
repnz
mov
fisubrl
jg
xorb
adc
push
mov
movb
mov
iret
in
xchg
add
arpl
pop
jo
add
lret
add
bound
cmp
jg
loope
cmp
cmp
push
push
xor
pusha
adc
cltd
cmp
loopne
aas
scas
mov
pushf
fbstp
dec
inc
mov
add
int3
js
lret
pop
inc
popf
cmpsb
adc
cmp
pop
push
outsl
insb
jl
xor
push
xchg
push
or
inc
notl
jnp
jg
mov
clc
sub
inc
sbb
mov
fs
pop
mov
dec
mov
push
bound
pop
movsl
test
adc
inc
repnz
dec
sbb
rcrl
ljmp
or
dec
loopne
sub
pop
mov
xchg
xchg
aam
mov
fildll
pop
idiv
enter
int3
adc
rclb
jbe
or
push
jne
xchg
and
fldt
adc
sub
cld
lret
movl
divl
popf
pop
dec
aas
xor
cld
push
adc
lret
sti
outsl
sbb
inc
out
pop
loop
in
and
mov
xor
out
out
mov
call
call
jb
and
fists
or
addr16
stos
mov
jecxz
add
xchg
loopne
lret
pop
push
cmp
data16
or
call
push
loopne
js
scas
in
inc
rorb
cld
outsl
mov
sbb
ljmp
aas
cmp
shr
push
cs
cmpsl
in
rcll
dec
mov
adc
mov
sub
ret
xor
cld
out
or
loopne
push
std
lods
mov
pusha
pop
fadd
cmp
push
call
jo
sub
pop
or
mov
fiaddl
add
int
inc
jo
sub
in
xchg
test
add
shlb
and
adc
xchg
mov
cmp
fbld
fmul
cmp
int3
shrl
push
clc
mov
into
dec
cli
rorb
outsb
mov
cmp
dec
iret
ds
test
mov
sub
ds
scas
xor
out
dec
stos
or
and
jns
adc
scas
shl
aas
sub
adc
jae
add
push
dec
iret
xor
mov
pop
pop
push
adc
lcall
or
test
jmp
fiaddl
imul
mov
dec
data16
call
xchg
leave
clc
aam
and
push
inc
sbb
mov
cld
push
mov
push
inc
xchg
lods
cmpl
ds
in
and
add
push
loopne
and
mov
inc
jb
pop
pop
dec
popf
popa
ljmp
aam
fcoms
xlat
in
sbb
xor
push
call
in
pusha
aas
mov
sahf
cmp
push
popf
mov
add
pop
stos
ret
cmc
inc
subl
push
push
aas
popf
dec
lahf
add
call
cmp
or
xchg
lods
add
sub
mov
sbb
adc
sub
cmpsl
mov
sbb
xchg
rcll
popf
mov
cmp
pushf
add
cmpsb
or
stos
push
add
sub
adc
mov
enter
lock
std
mov
sub
pop
sub
movsl
fdiv
dec
push
mov
sbb
push
loopne
test
sbb
dec
fsubrl
fisubs
mov
cmpb
sub
push
sbb
lds
aaa
cld
popa
cld
or
popf
push
xorb
incb
roll
adc
ds
out
adc
inc
mov
pop
xchg
lds
divl
icebp
inc
movl
jb
push
mov
cli
stc
cmp
mov
shr
std
fdiv
out
push
xchg
repnz
nop
add
cmp
sub
jle
test
cmp
loop
jnp
xor
mov
test
sarb
xor
movsl
mov
inc
rcll
pop
repz
xor
rcll
cmp
mov
outsb
fiaddl
lock
sbb
pushf
cltd
decl
imul
imull
mov
loopne
pop
xchg
add
in
or
popf
in
mov
movsb
xor
dec
pop
or
cmp
ret
out
fnstenv
dec
stos
rdpmc
sub
loop
loopne
pop
test
ja
sahf
pop
pop
jmp
test
push
int3
dec
mov
test
ljmp
mov
cwtl
imul
inc
jmp
mov
dec
test
sub
ret
pop
out
dec
adc
inc
pusha
adc
cmp
and
insb
shl
or
popf
jno
sub
mov
pusha
adc
add
push
pop
push
add
jp
test
in
jl
sbb
ja
jecxz
push
sub
roll
push
add
roll
mov
je
adc
push
loope
daa
adc
nop
decl
das
call
xor
addr16
dec
loope
mov
adc
les
push
dec
mov
xchg
fimull
add
mov
pop
xchg
js
pop
push
adc
or
test
repnz
mov
lcall
incb
mov
dec
pop
adc
or
dec
dec
pop
mov
mov
xor
jmp
add
sbb
gs
mov
mov
out
aas
or
int
jg
mov
cs
sub
mov
jmp
fnstenv
xchg
mov
mov
pop
cld
xor
pop
pop
sbb
bound
and
bound
add
jp
sub
in
dec
je
push
mov
sub
in
jl
icebp
mov
cmpsl
dec
jae
jnp
repz
ja
bound
shrl
jmp
sbb
mov
sub
push
sbb
mov
add
ja
mov
mov
mov
lret
sub
out
fdivl
jo
jns
jno
gs
aam
into
sarb
pop
out
push
out
push
cmp
cs
jmp
jmp
dec
cld
sub
jmp
sysenter
pop
jnp
sbb
ss
lock
add
sub
cmpsl
adc
pop
aad
in
adc
scas
sbb
loopne
jnp
sub
sbb
or
andb
cwtl
sub
mov
jecxz
mov
loope
addb
xchg
push
pop
dec
xor
call
dec
int3
jl
ret
xor
cmpsl
add
jo
mov
mov
test
xchg
dec
dec
xchg
jge
xchg
es
jmp
hlt
fmuls
in
rcl
push
or
nop
insl
pop
pop
clc
int
faddl
stc
rcll
sub
or
ror
vrsqrtss
cwtl
faddl
dec
xchg
je
std
addr16
stos
xchg
jle
shlb
in
cltd
pop
pusha
xchg
test
popa
stos
mov
out
std
jb
xor
addr16
dec
jecxz
mov
adc
je
leave
mov
mov
xor
ljmp
sbb
ja
or
pop
pop
mov
or
enter
sbb
orb
push
sub
fwait
dec
std
hlt
and
sub
dec
xchg
pop
sub
pop
push
dec
jbe
sbb
cwtl
push
ss
pushf
js
inc
mov
push
mov
fidivs
sub
lds
xor
jg
pop
loope
xchg
cmpsl
dec
lcall
mov
cmp
push
int
cmpb
mov
lods
pop
cli
or
pop
mov
in
ss
lock
xor
add
dec
or
repnz
bound
and
and
mov
cld
pop
not
cld
pop
into
es
inc
ljmp
mov
mov
ja
and
cmpsl
lcall
into
adc
xchg
mov
fcoms
pop
jge
in
insb
push
adc
sbb
cmp
les
push
mov
pop
or
add
mov
test
pop
jb
push
push
mov
cmp
jmp
fldcw
in
imul
call
cmp
hlt
rcrl
std
mov
lcall
or
fbld
fwait
lock
fsubs
lret
sub
ret
mov
lret
and
and
ss
sbb
mov
cmpsl
imul
stos
sub
nop
loopne
mov
sahf
or
movsl
jb
out
push
dec
or
adc
cmp
xor
and
lcall
or
sahf
cmp
xor
inc
es
rcr
jo,pn
les
add
push
lods
out
push
dec
shl
into
dec
jg
and
cwtl
xchg
cmp
push
mov
pop
xor
jne
jae
mov
mov
daa
push
sbb
mov
push
pusha
add
mov
xor
daa
lret
pop
rorb
rcl
cld
pop
mov
sub
jnp
mov
pop
int
shll
shlb
leave
into
dec
lea
cmpsl
les
or
sub
mov
cmpsl
pushw
and
hlt
std
pop
sbb
cltd
lods
imul
popf
out
mov
cmp
decl
mov
fistl
mov
pusha
arpl
data16
lds
or
cwtl
in
pop
pop
int
bnd
or
mov
es
jo
push
xor
xchg
arpl
popf
pop
arpl
pushf
push
add
jle
subb
movsb
pop
fcompl
popf
out
jp
cmp
mov
jno
pop
pop
cltd
adc
inc
enter
out
inc
cld
pop
inc
fdivr
push
lcall
setb
je
push
incb
pushf
jo
repz
sub
imul
sbb
pop
adc
xchg
adc
in
push
ficoml
dec
fsubrl
sub
push
push
jb
push
inc
jbe
roll
sub
jb
lea
out
sub
pop
scas
sbb
bound
cwtl
call
test
dec
test
mov
in
mov
mov
xor
pusha
dec
sub
cs
xchg
xchg
push
add
mov
ffree
pop
test
outsl
cmp
repz
das
cmp
xchg
pop
push
xor
incl
dec
out
pop
lahf
loopne
push
and
mov
push
inc
push
xchg
mov
push
adc
pusha
scas
pushf
stc
add
in
cli
clc
dec
mov
cmpl
shll
fadd
mov
int
movsb
and
sbb
rol
js
call
or
sbb
pop
xor
cmpsl
ss
mov
loope
ficompl
cmp
mov
mov
inc
xor
into
cmp
pop
add
pop
xor
btl
cmp
xchg
push
data16
out
jecxz
jno
fmull
adc
push
cli
stos
in
pop
sbb
lea
enter
xchg
dec
aad
push
addr16
jno
push
in
adc
shll
xchg
sub
xchg
js
xor
pop
movups
stc
push
stos
jae
cmpsl
test
mov
cltd
popa
data16
push
xor
shrl
adcl
or
or
and
xor
daa
inc
sub
push
jo
mov
cli
rclb
outsb
in
fldt
xchg
les
in
pop
adcl
sub
push
adc
mov
test
or
fcmovu
in
icebp
dec
ret
test
mov
test
sub
push
cmpsl
jle
jl
fwait
inc
inc
pushf
adc
pop
in
sub
test
in
and
mov
js
repnz
push
stos
jne
cmp
nop
cltd
repnz
mov
sbb
aaa
inc
pop
jo
rcll
cmpsl
in
pop
out
cmp
sub
jp
dec
xor
fmuls
adc
push
push
lret
hlt
aam
or
adc
mov
xchg
mov
ljmp
pusha
fbld
mov
mov
mov
push
es
lods
dec
sub
je
mov
fs
fidivl
out
out
fcmovnb
shll
and
jo
in
aam
inc
aas
loopne
repz
sbb
xor
bound
in
pop
mov
test
xchg
cld
adc
pushf
out
push
test
pop
out
adc
out
adc
incl
mov
mov
mov
pop
xorb
rolb
ret
inc
arpl
mov
mov
cwtl
jge
pop
xor
fs
push
sub
cltd
adc
mov
mov
hlt
fcoms
push
call
inc
ficompl
ficoml
mov
int3
int
out
add
sub
mov
shrl
push
dec
fisttps
gs
push
xchg
sub
pop
or
repz
mov
out
aas
xchg
jbe
rol
pushf
cmp
insb
push
js
and
fwait
mov
add
in
sub
mov
outsl
push
cmp
in
xchg
add
push
dec
sub
dec
in
xchg
dec
ja
into
push
dec
dec
insb
jbe
enter
jbe
push
in
cwtl
push
dec
icebp
les
pop
fistps
fcompl
cli
loopne
fcoms
adc
dec
into
clc
shll
ds
hlt
push
dec
jbe
in
cltd
mov
push
inc
into
jle
test
pushf
nop
cmp
jecxz
cld
inc
fcoms
inc
mov
or
sub
and
mov
ljmp
hlt
add
leave
loop
dec
push
jle
std
pop
pop
int
repnz
jne
je
sub
loopne
loop
addb
fcmovb
xchg
or
push
jbe
push
inc
jo
cli
inc
xchg
jl
fcoms
aad
and
fisttpl
sub
aam
fcomps
bnd
add
push
es
pop
lret
and
ror
aam
sub
dec
jae
aas
or
insb
mov
xchg
dec
sub
add
ljmp
cwtl
jae
stc
cmpsb
push
aas
movsb
cmpsl
add
jnp
addb
fs
mov
rcrl
jmp
lods
fbstp
push
mov
outsb
sbb
xchg
and
push
pop
pop
inc
in
xor
lcall
ljmp
imul
xor
push
push
data16
dec
ds
loope
mov
sub
inc
andb
cwtl
in
out
inc
xor
and
adcb
pop
aam
stc
ja
pop
cmc
xchg
stos
sbb
xor
push
movsl
cld
test
decb
add
mov
inc
xchg
jmp
sbb
hlt
jbe
xlat
int
inc
add
cmpsl
mov
inc
jmp
int
and
gs
xchg
mov
adc
shrb
jae
adc
sub
cli
dec
push
jg
or
testl
imul
cli
aaa
out
cli
std
pop
inc
pusha
fidivrs
xchg
scas
insb
movsb
mov
loop
cs
loope
aaa
into
dec
mov
daa
push
in
js
in
push
cwtl
in
pop
sahf
fdivr
push
mov
adc
inc
xchg
mov
sarb
out
loop
or
std
push
shrl
ljmp
incl
fiadds
jecxz
loope
dec
inc
mov
pop
stos
sub
pop
cmp
mov
pop
mov
push
test
dec
add
xor
xchg
inc
ja
push
test
jno
mov
pop
jb
stos
add
bound
sub
fcomp
jecxz
fs
mov
jg
and
pop
addb
rcll
ss
inc
aas
push
add
out
or
push
inc
jo
dec
inc
sub
movsl
ja
mov
mov
sub
enter
iret
sbb
inc
push
fnclex
jo
adc
ss
sbb
je
into
xor
jecxz
add
ficoms
movsb
mov
loop
sub
cmp
inc
aaa
movsl
dec
mov
adc
sub
add
mov
sbb
mov
ss
xlat
inc
inc
jo
in
sub
cltd
shll
sarb
imul
outsb
in
rcll
in
imul
data16
jp
mov
mov
lock
cmp
stos
xor
fucomp
add
push
or
sbb
in
int
xor
dec
mov
fsubrl
sbb
lahf
ja
clc
mov
insl
inc
shrb
jo
dec
sub
loopne
sub
stc
outsl
dec
push
push
stos
pop
and
mov
test
enter
arpl
int3
ja
or
ror
inc
push
jnp
mov
sbb
sbb
mov
repz
sbbl
add
adc
push
aas
test
out
lock
jmp
dec
mov
cmp
xchg
lcall
mov
icebp
sbb
outsb
shrl
test
stos
lods
sti
cmp
mov
enter
loopne
inc
in
push
popa
clc
xor
add
fwait
nop
hlt
dec
mov
in
add
idivl
out
xor
roll
lock
aaa
sarl
adcb
mov
cmp
inc
push
mov
call
andb
call
fcom
sub
jno
data16
ss
fwait
add
xor
sti
xchg
mov
dec
mov
imul
and
cs
mov
sub
loopne
sbb
cmp
cmp
aam
push
hlt
mov
ds
inc
and
jb
jge
test
and
mov
call
cmp
adc
mov
jecxz
push
sbbb
cltd
add
int
jmp
cmp
and
cmp
ret
pop
dec
sahf
inc
mov
sub
ds
out
or
popa
lcall
jo
ja
ds
int3
insb
repz
shll
in
lock
sbb
mov
dec
je
sti
loope
jne
and
in
or
cmp
adc
stos
dec
incb
xchg
sysexit
stos
sbb
sub
out
loop
and
xor
movsb
xor
das
in
aad
loope
in
inc
sub
and
mov
mov
pusha
imul
adc
idiv
mov
cmp
pop
push
jnp
popa
repz
and
xor
or
jb
mov
sub
jae
mov
leave
add
push
call
adcb
fdivs
push
addb
add
icebp
push
in
sub
pop
je
icebp
stos
loopne
clc
and
and
push
push
lods
aas
xchg
ds
shll
scas
sub
mov
je
mov
cld
dec
mov
push
cmpsl
push
dec
push
xor
dec
cwtl
xor
pusha
jo
lret
movsb
add
inc
push
mov
push
xor
rclb
jmp
sub
and
jmp
andb
sbb
push
sarb
or
lret
sub
icebp
movsb
cmp
cwtl
je
adc
movsb
dec
ljmp
dec
xor
movsl
ljmp
adc
inc
loop
pop
imul
mov
aas
mov
sub
stos
movl
dec
shll
mov
xchg
mov
aad
test
jle
xlat
jmp
dec
and
xchg
mov
test
int3
mov
rcrl
dec
push
xor
adc
roll
in
incb
mov
movsb
cmp
test
push
call
bound
inc
fwait
sub
xchg
xchg
ret
stos
mov
mov
pop
mov
push
hlt
icebp
iret
dec
and
call
mov
lock
data16
jp
adcl
jge
repnz
call
shrl
fcomps
push
mov
add
test
cmp
addr16
push
jle
jae
mov
repnz
shlb
lods
movsl
les
push
mov
movsl
or
jne
push
test
dec
js
lea
pop
out
add
inc
ss
ss
js
js
xchg
ror
rcrb
dec
pop
into
test
cmpsb
mov
sub
jmp
call
push
int3
jecxz
add
inc
push
pcmpeqb
clc
pop
loopne
mov
or
sbb
push
mov
loopne
fwait
dec
cmp
adc
xchg
sub
push
lods
mov
pop
arpl
cmc
ret
xchg
rorb
mov
movsb
add
ret
adc
clc
fildl
xor
fisubrs
inc
add
push
mov
mov
icebp
mov
nop
push
xor
mov
sub
dec
jno
mov
shr
sahf
xchg
ffree
push
xchg
inc
cmp
rorl
pop
movsb
mov
mov
lods
xchg
xor
mov
xchg
adc
inc
cmpsl
sbb
arpl
cmp
leave
mov
mov
and
dec
pop
nop
xchg
arpl
shlb
ficoms
sahf
arpl
inc
inc
push
loop
pop
dec
mov
sub
jle
xchg
dec
outsb
jmp
outsl
inc
xchg
inc
sub
push
add
imul
pop
pusha
and
push
icebp
test
inc
popa
in
xor
in
push
popa
loopne
repnz
mov
es
push
lock
jae
dec
xor
cmp
jnp
dec
push
jo
sbb
fcmovne
pop
ds
daa
sar
std
rcrb
imul
ljmp
sub
sub
clc
sub
sbb
test
pop
xchg
rol
inc
cmpsb
not
fisubs
adc
js
cld
icebp
inc
iret
cmp
jmp
movsl
sub
and
adc
add
mov
test
out
aaa
sahf
push
add
dec
sbb
cmp
cmp
fnstenv
or
add
add
fs
pop
outsl
andb
xor
jne
jne
push
sbb
pop
ds
or
jno
movsl
xlat
mov
pop
sbb
xor
mov
call
push
das
rcr
push
outsl
push
cmp
inc
mov
insl
rorl
dec
sub
cmpsl
push
mov
or
pop
inc
data16
lcall
add
add
cmp
dec
or
jmpw
jmp
mov
cs
jle
out
xor
cltd
jb
cmp
dec
cli
rcll
sbb
push
xchg
sbb
sbb
or
jmp
push
cmp
in
and
test
add
push
int
test
out
js
shrb
pop
pop
adcl
jns
push
adc
sti
jns
fstp
mov
ja
pushf
fimuls
jle
sbb
lcall
inc
cld
xor
in
add
jae
mov
inc
xor
sub
cli
outsl
pop
or
lods
mov
fmull
push
sbbb
adc
xchg
in
ds
cmc
inc
fdivr
sbb
jnp
orb
test
and
dec
fnop
xor
xchg
mov
test
mov
adc
cmp
push
push
cwtl
ss
xchg
sub
ret
sub
pushf
arpl
rorb
aam
mov
mov
or
lret
pop
ret
sbb
xchg
inc
sub
std
jb
fisubs
loopne
pop
sbb
lcall
roll
inc
push
inc
push
jae
pop
pop
jp
pop
repnz
cmpsl
jmp
dec
push
lcall
push
add
lcall
sub
lock
push
jbe
rolb
sbb
jae
mov
repnz
aam
mov
xorl
pushf
sub
mov
adc
dec
daa
lds
add
push
test
data16
pusha
adc
rcrb
inc
xor
pop
inc
andb
xor
aam
xchg
das
fstpt
lock
out
into
inc
push
mov
dec
daa
mov
ljmp
push
inc
dec
adc
cmp
dec
lods
sub
inc
cs
dec
fs
fistps
dec
jns
insb
push
mov
adc
add
fdivrs
jae
je
fldt
inc
xchg
aam
lds
shl
mov
cmpsb
outsb
mov
push
bound
sbb
in
push
lea
add
into
dec
or
xor
fs
xchg
stos
mov
scas
insb
movsb
mov
add
es
ds
mov
into
mov
ds
cmc
fwait
and
into
ljmp
into
push
dec
mov
daa
push
sbb
mov
movsb
rorl
cmp
aad
int
sbb
mov
test
data16
lds
adc
push
jle
bound
jmp
mov
shrb
sub
adc
cmpsl
lds
aad
jmp
aam
fcmovu
ds
paddsb
jno
aaa
push
inc
in
xor
jecxz
add
xchg
call
pop
cli
cltd
jl
push
std
mov
adc
jle
stc
dec
fcoml
add
pop
sbb
xchg
out
stos
mov
mov
insl
cmp
rcrl
stc
xchg
ret
cltd
jmp
mov
imul
jge
sub
xchg
push
out
adc
cmpsl
push
adc
mov
adc
test
xchg
addr16
fwait
sub
shl
aam
inc
cmpsl
pop
enter
xchg
ja
mov
aas
lcall
xchg
stos
mov
cmpsl
mov
or
dec
ret
adcl
scas
test
stc
movb
test
mov
cli
roll
js
test
rolb
inc
xor
clc
mov
sub
cmpsb
outsb
mov
addl
adc
cmpsb
or
repz
inc
cmp
outsb
add
jge
sti
xchg
xchg
shll
clc
mov
sub
cmpsb
outsb
mov
dec
bound
out
and
movsl
out
pop
xor
mov
lcall
push
shrl
adc
and
mov
cltd
push
dec
cltd
jl
mull
jno
cmp
fisttpl
stc
pop
fcmovnb
in
xchg
cmp
ret
inc
in
push
jbe
mov
or
lea
out
sub
pop
mov
les
sub
rolb
inc
orl
test
in
or
imul
call
hlt
push
cmp
pop
mov
cmp
cmp
inc
jbe
test
fnstenv
inc
xchg
int3
push
ljmp
add
cmp
sbb
call
jo
jg
or
add
std
je
inc
iret
pop
mov
adcb
icebp
cli
pop
pushf
or
sub
test
push
xor
or
cmp
inc
inc
icebp
mov
test
and
xchg
add
or
insb
xor
scas
dec
ss
xchg
lods
mov
sbb
aaa
xor
iret
cmp
and
pusha
jne
dec
loopne
int3
xlat
xorl
lea
in
sub
and
jne
push
insl
clc
sub
sub
out
lret
push
shl
xchg
inc
daa
push
xor
adcl
popf
push
jo
lds
fs
data16
mov
or
cmp
sub
inc
mov
push
push
inc
jo
test
in
sub
pop
out
cmp
pop
sub
into
sub
xchg
cli
nop
and
iret
shr
stc
clc
cmpsb
leave
fwait
push
nop
dec
aam
mov
inc
out
cmpsl
lret
ds
enter
cmp
ds
loopne
pop
pop
ds
into
cmp
in
rsm
pop
pushf
daa
push
dec
xor
and
pusha
lret
shrb
push
repz
cwtl
call
fcomi
aas
inc
aam
inc
sbb
jp
mov
cmp
pop
pop
sub
pop
aad
call
pusha
inc
cmpsl
xchg
int3
shll
lods
mov
movsl
pusha
pushf
ret
push
sbbl
pop
or
aas
add
push
cmpb
sbb
xchg
mov
int
and
xchg
mov
mov
imul
mov
notl
dec
stos
sub
test
push
je
jnp
mov
adc
movsl
cmp
or
adc
jbe
push
in
int3
shlb
mov
cld
push
mov
sahf
stos
gs
push
repz
aad
je
pop
repnz
mov
das
adc
xchg
dec
jbe
mov
add
out
movsb
xor
add
push
call
es
ss
popa
inc
fcomip
imul
inc
addr16
push
insb
fs
mov
nop
sub
cmpsb
ficomps
in
inc
adc
push
stos
fs
fs
std
adc
scas
in
ss
fldln2
test
lret
imul
aam
mov
pop
cmp
aas
and
inc
adc
ja
mov
and
aas
mov
push
adc
add
imul
into
push
jae
out
stc
xchg
out
or
aaa
inc
xlat
addr16
mov
push
dec
jae
das
push
lods
rcl
inc
add
adc
and
movsl
or
jne
enter
les
js
hlt
push
ret
add
push
enter
into
dec
adc
ror
cmp
or
test
aam
shr
dec
mov
inc
sub
adc
or
clc
ljmp
mov
ljmp
lods
mov
mov
sti
inc
and
cmp
pop
out
push
lret
inc
inc
sub
xchg
out
test
jbe
enter
lods
lock
cli
sub
adc
shlb
or
inc
dec
rol
inc
imul
cld
mulb
inc
clc
adc
outsl
jp
xlat
adc
cli
or
loope
les
add
sahf
add
sub
test
pop
mov
fisttpl
stos
mov
outsl
pusha
jp
pop
je
fdivrs
sbb
add
and
sub
push
push
mov
mov
pop
ret
mov
and
mov
pop
data16
xchg
adc
inc
push
mov
add
fcoms
xchg
mov
fsubrl
add
pop
repz
ss
inc
shr
xor
lods
ret
xor
pop
daa
cli
inc
mov
push
xor
fisttpll
popl
mov
add
push
adc
mov
hlt
insb
dec
adc
int
dec
ret
mov
adc
mov
popf
cmpsb
arpl
hlt
mov
mov
ljmp
and
pop
daa
movsb
pop
in
mov
aad
scas
rcr
sub
repz
jo
pop
aad
add
call
push
sub
ljmp
jmp
cmpsb
jnp
inc
mov
imul
repz
add
shr
sbb
dec
aaa
loop
lea
dec
add
cmp
xlat
sbbl
inc
pop
jne
popa
repnz
int
cmp
jbe
mov
jb
xchg
aad
imulb
mov
jmp
inc
sub
push
pusha
leave
loope
iret
dec
ds
push
aam
adc
add
loope
add
and
mov
xlat
xor
loope
jb
outsb
or
inc
push
lods
cmp
mov
pop
cwtl
movsb
dec
cmc
add
arpl
mov
push
mov
loop
into
mov
cmp
sbb
xchg
jmp
movb
mov
shlb
mov
adcb
fs
and
outsl
repz
cmp
js
dec
or
nop
dec
in
sarb
js
lahf
aas
cli
aad
aaa
adc
jno
mov
cmpsl
push
mov
mov
shll
lret
push
cltd
adc
mov
test
xor
test
pop
jb
mov
sti
xor
enter
repnz
pushf
add
das
test
or
inc
and
mov
jmp
add
xor
je
mov
and
aas
dec
scas
push
shll
sti
hlt
xor
dec
int3
mov
and
add
popa
test
ret
dec
ds
adc
gs
ret
xchg
push
pop
push
mov
xor
dec
inc
add
fmuls
pusha
and
imul
xorb
mov
aas
nop
mov
xor
jo
test
movb
and
aas
fs
cs
cli
ljmp
int
cmpsl
xor
jecxz
shl
pop
adc
pop
xchg
aam
dec
out
insb
ja
mov
daa
pop
mov
lock
into
fs
xor
push
sub
mov
push
hlt
sub
cmpb
aam
dec
jbe
mov
daa
dec
mov
sbbb
and
clc
mov
jge
or
js
hlt
sbb
out
xor
mov
sub
in
in
sub
hlt
out
xchg
adc
xor
jnp
ds
mov
mov
cmp
cmpsl
jne
dec
pop
push
pop
aaa
cltd
aad
orl
jg
push
xor
jg
vmulps
cmpsl
lock
loopne
mov
pop
jle
scas
out
test
push
cld
push
adc
sar
aas
xchg
jnp
notb
cmp
inc
nop
xor
push
je
das
outsb
and
loopne
sub
shll
pusha
mov
aas
mov
mov
mov
out
daa
xor
idivb
outsb
ljmp
in
stos
mov
loopne
add
or
xchg
std
pop
xor
nop
xor
mov
mov
in
ds
pushf
int3
and
test
ds
sbb
fwait
cmc
xchg
loope
dec
adc
rolb
mov
jae
bnd
jge
testb
pusha
mov
scas
inc
imul
hlt
pop
xor
test
sub
aaa
cmp
pop
dec
enter
sub
test
sub
lret
mov
pop
int
dec
pop
adc
addr16
dec
adc
ljmp
stos
sbb
mov
dec
mov
xor
jge
inc
inc
test
cmp
xor
pop
enter
rolb
loopne
dec
mov
adc
xor
addl
shlb
cmp
cltd
adc
mov
les
adc
out
jg
fisubl
jmp
dec
mov
cli
into
cltd
adc
xchg
cwtl
outsl
jl
cli
movsl
inc
leave
jb
inc
jae
and
dec
ret
cmovnp
test
push
popa
or
add
mov
cld
mov
jl
test
out
popa
je
pushl
aaa
cwtl
sbb
std
jle
je
fs
ljmp
repnz
lods
jp
aad
mov
cmp
jl
roll
mov
push
aas
xchg
lods
push
repnz
push
daa
shlb
pusha
idivb
lret
ljmp
sub
mov
cmp
push
sbb
jbe
aam
sbb
jb
jo
loop
xchg
loopne
movsb
testl
out
stos
xor
mov
repnz
jle
pop
add
aaa
sbb
add
loope
mov
inc
sub
lahf
jecxz
xchg
and
cs
jg
stos
push
sub
xor
fidivrl
dec
or
cmp
and
adc
test
movsl
sarl
push
add
pushw
or
pushf
popa
stos
mov
lods
pop
scas
push
xchg
movsl
cmpsl
jne
sub
dec
dec
ds
sbb
mov
adc
sub
fs
push
mov
insl
push
inc
pop
xor
subl
adc
mov
hlt
aam
hlt
fmull
imul
shrl
pushf
lret
dec
sub
loop
pop
or
pop
sarb
cld
mov
les
ljmp
cwtl
fs
sahf
aad
lcall
adc
sub
pop
sbb
fadds
inc
faddl
into
inc
aad
xor
jmp
cmp
sbb
ret
mov
adc
cld
cmp
cmc
int3
movsb
sbb
dec
cwtl
xor
or
or
mov
imul
jns
jb
or
fistps
ljmp
sbb
dec
xor
xchg
mov
in
mov
imul
inc
and
out
pusha
loope
xchg
dec
cmp
mov
sub
jmp
pop
notl
cwtl
roll
rcl
mov
gs
loopnew
lahf
test
ss
fnstcw
and
cmpsb
dec
jo
add
movsb
jecxz
jno
fmull
adc
push
divb
and
sbb
or
cmp
sub
les
xchg
and
mov
xchg
cwtl
rorl
fwait
andb
pop
jo
cli
insl
mov
fwait
addb
cmpsb
arpl
hlt
mov
mov
dec
pop
add
push
insl
and
aas
es
mov
hlt
dec
dec
hlt
jo
mov
sub
sahf
sar
push
dec
negl
dec
inc
inc
inc
lahf
repz
cltd
pusha
dec
xor
inc
lea
push
dec
psrad
dec
xor
aam
dec
roll
es
fisubl
ret
xor
shr
scas
cwtl
xchg
add
fprem1
movsl
cmpsb
dec
push
orb
cmp
dec
mov
cs
ret
fwait
xor
mov
lret
add
mulb
inc
lcall
push
in
xor
enter
ss
bound
ljmp
lea
outsl
fxch
in
test
dec
xchg
xor
call
cmpsb
mov
adcl
lea
sbb
jae
jl
out
xorl
push
lods
xchg
xchg
adc
dec
insl
ss
mov
xchg
lcall
sub
lcall
mov
and
aas
mov
aaa
nopl
mov
add
es
jl
jns
ret
mov
cmp
pop
mov
and
push
or
imul
adc
adc
in
hlt
add
in
push
jo
mov
int
loope
test
aaa
add
lcall
rcrb
repz
add
inc
and
and
enter
mov
sub
je
mov
daa
or
push
jno
push
mov
outsl
les
and
stos
fidivrl
or
in
mov
fcoms
inc
jo
ljmp
inc
ret
insb
stos
xorb
test
orl
lock
enter
in
pop
xor
out
add
cmp
jl
pop
sbb
rcr
add
sbb
fwait
push
add
daa
dec
jmp
dec
and
push
mov
inc
shrb
mov
in
mov
push
inc
jo
mov
incb
inc
or
rclb
fwait
test
cmpsb
mov
push
pop
dec
mov
mov
les
andb
cwtl
xchg
xchg
jmp
stos
xorl
fimull
pop
or
aaa
outsl
les
add
insl
jae
daa
adc
jbe
push
in
in
xchg
add
les
push
sub
mov
push
push
fwait
scas
ja
push
jo
pop
mov
adc
ffree
repnz
aaa
daa
mov
out
cmp
jb
and
adc
es
jmp
jb
out
test
ja
mov
mov
sbb
pop
xchg
int
inc
sahf
mov
fwait
aam
aas
decb
jno
cmp
jge
jg
cld
iret
ds
and
jmp
sbb
xchg
mov
das
call
xchg
sbb
cmp
insb
enter
loope
in
dec
int3
mov
leave
sbb
and
mov
jae
push
dec
jecxz
lock
sbb
jmp
insb
clc
pop
pop
aad
movsl
in
dec
cld
lea
xor
push
dec
nop
addb
shll
stos
mov
out
sub
pop
orb
mov
ret
out
jo
or
cmp
pop
loopne
mov
push
push
mov
std
repz
or
lods
aam
sub
add
sub
fs
rcrl
std
out
lcall
stos
mov
sub
adc
xlat
sub
pusha
adc
clc
icebp
jne
cs
xchg
adcl
loope
sub
mov
lock
adc
jo
addr16
mov
xchg
out
or
lds
mov
cmp
aad
cs
sub
jmp
add
mov
pop
test
mov
call
cmp
orl
adc
push
dec
mov
mov
repnz
out
daa
mov
icebp
popa
or
push
rcl
hlt
loope
mov
dec
jecxz
sar
push
mov
jne
out
jns
push
cltd
mov
lods
pop
mov
int
xchg
jne
mov
push
sbbb
cli
mov
sahf
sub
stos
fidivrl
lret
push
xor
push
outsb
pop
push
xor
jl
inc
imul
push
out
push
inc
dec
adc
les
aam
test
out
mov
pop
inc
fdivr
or
xchg
into
or
adc
xor
test
jle
test
adc
popa
mov
push
push
sub
js
mov
repnz
clc
push
in
pusha
bound
in
push
lcall
xchg
in
or
lea
out
sub
pop
add
xorl
jmp
sub
adc
or
sub
mov
sub
mov
adc
aas
inc
mov
inc
test
out
cld
sub
mov
and
xor
into
xor
push
push
push
sub
xchg
ja
mov
add
and
fadds
shrb
jecxz
stc
and
add
lret
cmpsb
or
lcall
arpl
ds
outsl
xchg
inc
stos
inc
lcall
andb
cld
aas
xchg
ds
test
cld
cmp
xor
xor
mov
repnz
inc
mov
push
sub
stos
test
jmp
inc
fmull
repnz
outsb
sub
inc
int
movsb
mov
filds
mov
les
in
test
shr
or
mov
add
or
xor
pusha
or
dec
adc
mov
pop
aas
xlat
inc
in
popa
sbb
repz
mov
test
mov
jbe
push
inc
jo
mov
add
mov
mull
jecxz
add
xchg
xchg
push
popa
mov
fs
lcall
jl
sbb
xor
adc
rorl
cwtl
shll
mov
inc
call
ljmp
sub
pop
addb
mov
ret
dec
loop
stos
loopne
in
add
push
lea
ds
hlt
test
jbe
xchg
push
lcall
push
pushf
add
sub
push
pop
inc
dec
pop
hlt
fnstenv
mov
lcall
dec
inc
sub
ds
ret
xor
mov
cmpsb
cmp
outsb
and
mov
adc
lock
jne
cs
xchg
adcl
sahf
mov
adc
pusha
fucomip
dec
movaps
adc
sub
je
inc
pop
jns
jne
sub
xor
sbb
push
cmp
jp
fidivl
jmp
repz
into
outsb
pop
lcall
lahf
xchg
inc
mov
ljmp
mov
sbb
mov
repnz
shr
jb
xlat
scas
add
xchg
daa
mov
aas
stos
in
pusha
jae
test
fcomip
fildl
iret
inc
bound
jnp
xor
insb
jmp
sub
aas
std
fisttps
fucomp
out
sub
adc
push
sub
movsl
aas
sub
pop
hlt
xchg
frstor
jmp
enter
std
pop
pop
int
bnd
or
into
adc
shlb
xchg
adc
es
mov
hlt
dec
dec
jbe
push
or
sub
lods
imul
cmp
ret
fs
xor
into
out
pop
adc
ds
xor
cmp
or
mov
xor
lock
push
stos
insl
dec
xlat
test
mov
not
les
mov
fldenv
cli
cmc
sub
clc
int3
and
push
push
jbe
push
in
hlt
push
adc
lock
push
pop
mov
push
pop
mov
push
pop
add
pop
sub
inc
outsl
insb
pop
subb
repnz
loopne
add
xor
std
jle
or
add
jae
std
lcall
cmc
nop
jg
mov
shll
popa
stos
aaa
sub
add
mov
rcrl
xlat
call
repnz
push
adc
jb
pop
and
ja
xchg
xorb
inc
sbb
xor
sub
sub
divl
push
call
dec
adc
sub
pushf
adc
sbb
call
lds
in
xor
pusha
or
dec
adc
cmpb
aas
sbb
call
sbb
aas
xchg
shlb
mov
sbb
push
data16
push
lcall
inc
push
push
mov
push
push
cmc
inc
sub
cltd
pop
sahf
jne
cli
pop
inc
pop
icebp
icebp
cld
test
je
pop
cmp
cmp
les
fsubr
jo
inc
sbb
xchg
jne
jae
rclb
mov
jno
sub
xor
jmp
int3
cli
or
inc
push
jo
loop
cmp
push
ljmp
divb
cmp
mov
pop
xchg
xor
jl
push
imul
xchg
jle
fcompl
mov
shrb
and
bound
xchg
adc
aam
lcall
call
dec
repnz
setp
pusha
jo
lea
sbbl
dec
mov
cwtl
out
lcall
mull
out
sub
adc
test
add
dec
mov
daa
cmp
mov
xor
into
adc
sarb
pop
sub
xor
gs
nop
add
test
mov
jnp
lcall
arpl
data16
in
pusha
aas
mov
push
fimull
cmp
pop
mov
or
in
inc
comiss
dec
dec
lcall
jp
ret
subb
movsb
pop
aam
fistps
in
cmpsl
mov
subb
adc
jmp
xor
scas
clc
add
fcomps
sets
sub
sub
shl
mov
and
cwtl
ljmp
lahf
aas
mov
cmpsl
les
int
jl
shrb
gs
lds
popa
into
cmp
js
stc
pop
notl
lods
mov
loope
insb
xchg
in
pop
push
test
sub
adc
popl
xchg
cltd
lods
imul
arpl
mov
xchg
inc
sar
push
push
jae
xchg
repnz
cli
mov
je
push
dec
xchg
aas
or
mov
inc
adc
cld
xor
test
sub
enter
jmp
mov
mov
sbb
scas
add
sub
xor
int3
or
sbbb
jb
int
ja
push
cwtl
cltd
scas
and
xchg
cmp
dec
add
mov
arpl
adc
dec
inc
jb
sub
aas
mov
sub
cwtl
dec
cmp
xchg
jns
push
inc
mov
mov
mov
lcall
add
push
push
test
in
cmp
cmp
pop
cmpsb
in
dec
and
scas
shl
and
and
std
call
push
into
sbb
and
cli
lock
hlt
pop
out
aas
imul
dec
push
dec
nop
cmp
push
cmp
and
mov
decb
xchg
lds
fmuls
mov
inc
sbb
inc
pop
and
loopne
jl
and
jle
iret
and
jp
cltd
mov
outsb
pushf
add
and
loopne
and
xchg
jae
cwtl
popf
adc
or
jno
shlw
pop
es
xchg
or
movsl
rorl
mov
lcall
rorb
in
in
insb
xorb
test
orl
les
repnz
jle
lock
mov
pop
cwtl
jge
pop
movsb
lea
out
cmp
jl
and
lcall
int
jae
bound
decb
mov
ds
sub
repz
fcmove
push
sub
movsl
add
mov
xchg
or
hlt
aam
call
sbb
inc
jmp
lods
xor
ss
inc
fucomip
dec
movaps
mov
sbb
cmpsb
in
insb
adc
arpl
es
inc
lahf
xor
mov
mull
push
sbb
push
imul
pop
dec
fmuls
xor
outsb
pop
and
pop
xchg
pop
sbb
pop
sub
mov
and
and
out
mov
mov
popa
pminub
inc
or
ret
insb
jmp
sub
xchg
in
and
adc
int
popl
adc
les
sarl
pop
hlt
mov
push
je
enter
add
popa
bound
cli
lods
imul
sti
sbb
adc
fstps
popa
cmc
push
dec
xbegin
push
jbe
push
push
jbe
shr
pop
cwtl
sub
repnz
imul
loopne
gs
xchg
mov
xchg
fistpll
ret
inc
les
test
aam
jle
into
push
mov
insb
push
mov
pop
adc
jbe
push
in
call
ljmp
stos
shl
dec
addb
jg
cltd
pop
dec
xor
adc
mov
clc
int3
adc
mov
dec
test
jmp
ss
rcrb
rcrl
int3
mov
shrl
adcl
sbb
cmp
adc
sbbb
adc
mov
shrb
mov
mov
cmc
cmpsl
xor
inc
push
into
out
cmp
mov
lock
adc
cmp
popa
in
mov
mov
adc
push
js
pushf
dec
dec
cmp
addr16
test
xlat
hlt
dec
popa
fnop
or
add
pop
pop
das
or
cld
adc
and
and
xchg
fistpll
pop
cwtl
idiv
out
cmpb
or
mov
lods
push
inc
cmp
mov
or
mov
cmc
xchg
xor
mov
mov
mov
push
push
cmc
inc
jbe
cltd
pop
sahf
jne
mov
sbb
sub
pop
cmp
jae
outsl
cmpsb
fs
rcl
adcl
push
jb
cmp
push
pushf
sub
cmp
or
jmp
lds
push
mov
add
cs
mul
lods
add
dec
loopne
jle
dec
xlat
data16
sahf
cltd
mov
xchg
pushf
je
and
mov
jae
push
dec
jecxz
jo
loope
addb
int
je
sub
mov
inc
data16
mov
or
shll
cmpsb
dec
pop
pop
in
in
pop
xorb
test
orl
les
repnz
jle
ljmp
mov
mulb
pop
in
sub
sub
jl
xchg
xchg
mov
sub
and
andb
aas
test
adc
adc
dec
rcrl
push
sbb
dec
adc
xchg
sub
push
add
ljmp
mov
and
clc
pushl
test
mov
out
pushf
je
dec
rorb
ds
mov
dec
and
clc
cmp
fmull
mov
fs
fildll
add
insb
jle
push
adc
sub
dec
addb
mov
cmpl
pop
popa
sbb
mov
xchg
add
dec
pop
push
hlt
pop
xchg
mov
ficompl
xor
dec
in
test
les
cli
bound
jmp
xor
test
cmpsl
cmp
mov
les
jl
in
mov
sub
fsubl
mov
xchg
jp
fwait
adcb
mov
addr16
test
push
lock
mov
rcrl
cmp
sbb
mov
pop
lret
push
mov
sub
enter
subb
movsb
pop
mov
popf
out
jp
lcall
sub
or
xchg
mov
sahf
mov
mov
je
aas
fcmove
mov
jecxz
aam
loope
addb
jnp
cltd
pop
dec
xor
dec
dec
ds
sbb
xchg
enter
adcl
sub
mov
fiaddl
jbe
adc
stc
jb
push
push
mov
sub
sub
pop
out
sub
push
mov
jbe
xchg
or
int3
cmpsb
and
push
int
loope
xchg
into
adc
jecxz
movb
xchg
in
clc
mov
movsb
pop
or
lea
adcb
push
cmp
mov
and
cwtl
sbb
add
shrl
popf
push
js
mov
cld
jg
outsb
sbb
jg
loope
mov
fwait
rcrb
sub
mov
scas
cmp
xchg
data16
leave
lret
jbe
rolb
jbe
mov
sub
push
or
push
pop
xor
xorb
fsts
jae
push
and
mov
mov
dec
lcall
sub
xor
xor
out
out
inc
ljmp
push
and
fadd
scas
in
pop
addb
ds
and
xchg
push
jne
jae
mov
add
call
push
into
jge
loope
cmp
mov
jmp
sub
sbb
xchg
push
adc
sub
add
sub
lods
sbb
xchg
das
call
inc
into
jle
test
in
and
into
push
mov
adc
sub
dec
test
aaa
add
into
and
cmpsb
jle
std
pop
pop
int
repnz
sub
cmc
arpl
lock
stos
fisubl
or
pop
ja
mov
fcoms
inc
jo
stos
mov
mov
sub
arpl
dec
adc
in
mov
xor
cmp
pop
mov
adc
test
inc
sub
mov
mov
cld
cmp
cmpsl
mov
sbb
fldenv
pushf
adc
sub
push
jno
mov
sbb
cld
mov
fstpl
inc
sub
pushf
or
push
data16
fidivrl
mov
ret
and
cs
sub
cmp
subl
rol
sbbl
mov
cmp
push
shlb
mov
xor
jg
or
in
icebp
cmpsb
sbb
jg
cltd
fdivl
out
xor
mov
arpl
hlt
mov
lcall
cld
add
int
cmp
imul
pop
add
mov
jns
ds
cmpsl
sub
mov
out
in
xor
pop
mov
mov
ja
and
mov
cltd
push
dec
add
dec
outsl
dec
push
cmpsl
dec
xor
dec
push
push
jbe
push
in
fsubrl
mov
mull
xor
add
dec
or
xor
shrb
clc
int3
pop
dec
test
push
jbe
shr
pop
lods
sub
repnz
jmp
adc
xchg
frstor
adc
fs
sub
sub
jge
push
shll
pop
adc
enter
pop
cmp
data16
or
cmp
hlt
mov
imul
cmp
mov
pop
bound
decl
fcomp
xchg
addb
shrl
mov
orb
or
mov
ljmp
sbb
sarb
sub
inc
push
repnz
adcb
push
cmp
mov
and
cwtl
or
add
shrl
popf
push
push
jg
outsb
sbb
jae
loope
mov
fwait
rcrb
sub
mov
mov
sub
add
repnz
hlt
xor
sub
pop
adc
pop
fdivs
mov
iret
mov
shl
xchg
cmp
mov
mov
mov
push
push
cmc
inc
outsb
mov
pop
sahf
jne
mov
sbb
xor
cltd
dec
insb
das
mov
mov
or
mov
mov
mov
sub
insl
push
pop
add
subl
xchg
aam
ja
into
push
repnz
insb
mov
adc
insb
adc
hlt
iret
mov
cmp
xor
push
fstpt
push
jno
push
in
lds
fs
cmpsb
cltd
stos
out
pushf
ja
mov
jo
scas
je,pt
mov
jl
stos
shrb
dec
or
jmpw
jmp
jge
sbb
ret
sar
jle
loop
fdivl
pop
out
lods
cwtl
jge
pop
fs
es
inc
fdivr
pop
mov
mov
repnz
hlt
test
ret
push
dec
clc
mov
push
adc
into
pop
xor
dec
inc
lock
push
jbe
xlat
pop
mov
jg
std
addb
and
nop
mov
cmp
xor
mov
cwtl
test
ds
cld
adc
cmp
mov
repnz
or
and
fstpl
xchg
sahf
int3
cmc
adc
and
push
in
mov
adc
int3
movsl
shll
es
je
adc
push
lea
and
push
inc
icebp
popa
pop
push
pop
cmp
imul
inc
mov
and
fwait
jno
push
mov
data16
pop
jb
in
je
dec
call
pop
pop
divl
cs
pop
cld
add
mov
bound
mov
decl
ss
ret
adcl
mov
xlat
xor
pop
mov
in
imul
data16
cltd
mov
inc
pushf
int3
add
and
jae
cwtl
xchg
sbb
outsl
ja
and
mov
cltd
push
dec
add
stos
shll
sub
int3
push
inc
test
sub
cwtl
insb
cld
sub
cmp
js
loopne
xchg
sub
outsb
jmp
mov
mov
cmp
jmp
out
rorl
inc
mov
ljmp
hlt
pop
mov
les
pushf
ljmp
sub
inc
cmp
jl
daa
or
sbb
pop
negb
xor
stos
sub
jl
pop
pop
sub
mov
leave
decl
je
xchg
rolb
xlat
sub
je
cmc
movsl
cmpsb
inc
pop
xchg
pop
mov
sbb
sub
mov
xlat
call
into
dec
sbb
mov
cmp
mov
sbb
cwtl
jl
xor
js
fistps
dec
sbb
jmp
outsb
pop
cmp
and
pop
mov
xor
mov
sub
mov
adc
imul
pop
mov
loope
jbe
xlat
repz
mov
or
push
mov
sub
sbb
push
jb
cld
cmp
dec
pop
jno,pt
jno
punpckhbw
aad
add
cmpsb
push
and
addl
sub
cmp
sbb
and
les
jmp
jns
cmpsl
cmp
mov
les
add
cmp
xchg
xor
andb
push
dec
lret
jno
lds
sub
cmp
adc
ds
ss
jno
cld
rcrl
nop
rcrl
addb
cmpsl
mov
mov
adc
and
aad
and
fisttpl
loop
cs
jle
or
insb
or
rolb
repnz
cmp
hlt
and
mov
push
mov
aas
test
inc
sub
cmovg
cmp
aam
ret
jl
popa
adc
cmpb
dec
cwtl
mov
loopne
dec
ja
test
shlb
sar
fiaddl
mov
mov
frstor
hlt
pop
dec
jbe
in
lcall
int
repnz
and
push
or
jg
enter
cmp
push
mov
aas
cmpsb
sub
push
loope
and
bnd
xchg
push
in
enter
hlt
jl
lahf
in
adc
call
or
xchg
mov
add
in
pop
and
faddl
stos
xchg
aaa
notb
call
outsl
push
fs
sub
push
adc
cli
in
mull
out
and
push
in
loopne
jae
mov
orl
cli
in
mov
cli
int
mov
aad
sbb
cltd
in
aam
loop
in
pinsrw
jae
pop
cli
int
pushf
loopne
cmp
out
and
test
dec
mov
daa
push
sbb
das
mov
pop
lods
fadd
fs
pop
movsl
sarl
out
jl
jno
mov
push
dec
mov
stos
ljmp
testb
pop
rorb
mov
adc
imul
in
and
dec
jle
add
and
xchg
les
clc
pop
ret
push
fisubrl
cmp
push
popa
adc
add
push
pusha
pusha
insl
mov
cltd
lods
imul
or
mov
inc
inc
roll
adc
jmp
cmp
mov
rcrb
dec
jbe
mov
mov
ret
test
imul
mov
sub
add
sub
insb
vmulps
cmpsl
in
pop
out
cmp
sub
mov
pop
add
aad
add
push
jb
xlat
push
mov
roll
mov
xchg
lea
lahf
adc
fmuls
push
pop
inc
test
mov
leave
inc
mov
insb
cmp
aad
mov
push
mov
dec
loopne
jg
adc
decl
cmpl
pop
pop
inc
xchg
dec
pop
cwtl
xchg
xor
mov
scas
sbb
in
jne
mov
jno
fstpl
lret
pusha
or
dec
cmp
jb
sarl
testb
cld
mov
insb
jmp
test
push
mov
out
fwait
repnz
dec
push
push
xor
aas
adc
mov
jbe
push
push
ja
je
dec
add
adc
cmp
dec
or
sub
outsl
movsb
add
cwtl
fsts
enter
and
jno
lods
shrl
mov
adc
cs
pop
cmp
pusha
cmpsl
mov
cmp
aam
inc
inc
loope
aam
aas
xlat
ljmp
pop
mov
into
cmpb
sbb
rorb
jbe
push
inc
jo
jp
jl
dec
cwtl
xchg
dec
mov
ja
and
mov
stc
cs
jb
inc
adc
push
sub
imul
lret
data16
ss
clc
push
rclb
and
push
jne
push
inc
sub
xchg
mov
sbb
cmp
sub
ret
bound
push
shrb
pop
stc
or
aaa
outsl
les
add
sub
cltd
adc
in
loopne
push
ds
or
jmp
sbb
mov
mov
and
and
shlb
mov
xchg
adc
cmp
mov
repnz
mov
repnz
jp
pop
dec
inc
adc
stos
push
push
sub
repnz
dec
pop
pop
in
in
rolb
cmp
in
ds
repnz
int
lods
sbb
and
aas
push
cmp
bound
rol
ljmp
insl
mov
fwait
cwtl
call
mov
mov
pop
cmp
jmp
mov
scas
pop
out
sarb
mov
orb
xor
pop
mov
mov
xchg
das
in
lock
inc
frstor
adc
cmp
fs
into
cltd
stos
out
hlt
ja
mov
pop
les
in
pop
int3
add
cmpsl
mov
push
mov
xchg
das
in
bnd
jb
loopne
pop
jbe
shr
push
xchg
pop
cli
lahf
je
jle
dec
out
mov
pop
loop
mov
rorl
fistpl
cld
icebp
pushf
sbb
sub
test
push
push
arpl
or
push
jb
adc
sub
sahf
sub
sub
std
push
icebp
dec
movl
mov
dec
mov
adc
jmp
xchg
or
sub
or
inc
jmp
cmp
or
cmpb
inc
or
inc
cmp
sbb
dec
cmp
xlat
pop
sarb
xor
lods
fdivr
xchg
add
insb
mov
sub
push
in
bound
icebp
rcll
fwait
jp
xor
and
rorl
shlb
and
shrb
pop
out
inc
adc
mov
adc
das
jmp
lds
push
mov
filds
push
xorl
int
and
aas
xchg
dec
aad
pop
jns
mov
mov
push
fsubl
or
mov
out
sub
dec
mov
daa
out
insl
fidivrs
pop
aam
rorl
into
cmp
test
jo
into
xor
testb
les
xchg
mov
fcmovbe
out
dec
add
dec
jbe
add
mov
mov
ja
mov
jbe
push
inc
jo
mov
cwtl
xchg
pop
mov
ja
and
mov
stc
cs
bound
fcompl
push
adc
push
cs
adc
hlt
adc
sub
pushf
add
mov
push
sbb
cmp
in
sub
sub
xor
in
mov
add
loope
std
push
add
lds
push
in
fdecstp
outsl
shrb
pop
leave
enter
xor
loopne
push
pop
inc
test
in
pushf
dec
mov
adc
sub
dec
mov
xchg
cmp
das
repz
or
loopne
or
mov
dec
mov
push
pop
mov
arpl
arpl
adc
int3
cmp
sbb
mov
loope
xlat
js
jecxz
mov
jg
sbb
sub
dec
cmc
push
rclb
and
dec
pslld
jmp
inc
int3
repz
add
pop
mov
loopne
pop
xchg
in
imul
aad
and
pushf
clc
cmpsl
not
sub
je
lcall
cld
jmp
adc
push
das
and
and
dec
je
and
mov
aam
ja
into
push
dec
add
or
bound
xchg
adc
push
enter
stos
pusha
sbb
frstor
adc
bound
cltd
stos
out
les
mov
jl
in
pop
inc
add
cmpsl
mov
sbb
ljmp
ljmp
sti
out
xor
lcall
sbb
mov
add
ficompl
mov
fsubrs
adc
je
jnp
sub
sub
std
insb
cltd
mov
xchg
testb
jb
inc
call
dec
je
call
pop
xor
mov
jno
dec
xor
dec
jne
cs
xchg
in
pushf
imul
sbb
sbb
mov
sub
cmp
outsl
mov
add
mov
mov
dec
sub
sbb
dec
dec
cmpsb
xlat
inc
sub
jo
or
cmpsl
xchg
movsb
outsb
mov
sti
pushf
cld
sbb
addr16
mov
jb
push
in
and
push
into
sar
mov
mov
cmp
scas
push
jb
xlat
dec
add
faddl
imul
cmp
xor
movsl
mov
dec
push
mov
mov
mov
mov
popa
imul
out
jge
aas
jmp
jmp
inc
xchg
cmpsl
mov
hlt
pusha
dec
hlt
push
push
push
fcmovb
push
pushf
mov
adc
rcrb
fistl
sub
les
loop
cld
rorl
mov
jnp
rorl
cs
pop
sub
inc
cmpsl
mov
and
mov
jp
inc
dec
adc
xorl
in
mov
in
xchg
outsb
lret
pop
lret
push
into
ss
sub
or
inc
mov
and
fwait
jno
in
add
es
adc
stos
loope
hlt
movsl
rcll
ljmp
cmp
xor
push
pop
adc
sub
lret
mov
ljmp
xor
pop
pop
sar
and
fsubl
mov
fs
xor
cltd
jno
push
inc
in
push
popa
stos
not
mov
add
into
cmp
mov
jno
sahf
cmpsl
mov
cmp
mov
loopne,pn
pop
sub
imul
repz
rolb
inc
inc
adc
les
scas
mov
pop
int
mov
pop
mov
sub
push
add
adcb
jmp
lock
dec
or
xchg
add
push
shl
movsb
jecxz
jno
fmull
adc
push
ss
in
sbb
or
clc
xor
cld
insb
and
aas
mov
insb
pop
xchg
cs
pop
adc
ret
fiaddl
stos
test
adc
push
jmp
ljmp
xchg
cli
cli
sahf
jl
loop
adc
dec
pslld
pushf
dec
adc
mov
sub
mov
adc
es
pop
cwtl
sub
add
test
stos
stc
sub
xor
mov
adc
popa
mov
fs
lcall
mov
dec
and
inc
push
cwtl
rorl
sub
repnz
jl
pusha
sbb
frstor
adc
fs
lcall
les
mov
test
shll
hlt
pushf
pop
mov
mov
push
mov
call
pop
cmp
sub
out
pushf
in
pop
jo
lea
mov
jo
and
repz
adc
dec
nop
adc
or
lret
rorb
daa
jl
adc
add
cltd
mov
cmp
mov
jecxz
mov
pop
push
leave
repnz
arpl
add
push
xchg
dec
test
clc
fisubrl
push
nopl
fadd
scas
in
sbb
mov
enter
jbe
sbb
pop
push
fldt
sahf
mov
jnp
test
cmp
adc
lahf
imull
push
std
add
inc
test
push
push
or
mov
aaa
push
dec
or
test
sub
xor
pop
jnp
push
popa
lcall
sbb
mov
or
aad
jno
cltd
ds
fcmovb
jecxz
mul
mov
jb
adc
xchg
mov
dec
sysexit
mov
mov
mov
sub
hlt
push
pusha
lret
cld
aam
dec
jbe
jo
bound
jbe
shr
pop
loopne
in
icebp
test
sbb
mov
or
jmpw
jmp
jge
aaa
into
outsb
mov
cmp
sarb
lock
cmp
push
outsb
pop
push
xor
jp
cltd
mov
ds
sub
fdivr
cmp
pop
or
mov
mov
sbb
frstor
dec
frstor
scas
cmp
adc
xchg
shrb
shl
out
pop
div
ljmp
jg
sub
movsl
push
jg
movsb
push
aad
imul
dec
adc
push
and
pop
sub
mov
fidivl
gs
loopne
in
fimull
test
clc
mov
pop
adc
inc
xchg
call
call
int3
mov
dec
cli
inc
jecxz
mov
fdiv
dec
loop
inc
inc
inc
or
push
dec
mov
sbb
movsb
das
jmp
push
mov
mov
and
popa
lods
fisubs
in
push
scas
insl
push
adc
adc
roll
das
cwtl
sbb
adc
push
repz
out
jmp
sbb
insb
ret
test
sub
bound
jo
cwtl
les
mov
or
stc
hlt
jecxz
stc
movl
push
cltd
sbb
arpl
dec
les
repnz
jle
movb
mov
and
add
shl
mov
mov
mov
repnz
adc
mov
mov
or
in
adc
adcb
add
sbb
insb
jmp
movsl
cmp
and
into
push
mov
or
repnz
aas
lret
ret
xor
pusha
dec
sbb
lock
push
jl
push
decl
inc
es
decb
sub
ret
bound
loopne
dec
mov
or
pop
ljmp
cmpsl
repz
mov
ficomps
int3
roll
ret
sbb
fiadds
pop
mov
push
in
xchg
mov
dec
mov
pop
mov
sbb
aam
sbb
outsb
mov
in
jno
lods
mov
mov
jmp
sbb
mov
in
lret
mov
push
repz
push
dec
push
cli
sahf
xchg
push
insb
mov
sbb
and
xor
or
mov
mov
aad
fwait
jno
add
jecxz
xchg
pop
repnz
inc
mov
mov
cmpl
call
out
cmp
inc
xchg
sbb
sbb
and
test
mov
xor
sbb
imul
inc
enter
xor
ljmp
mov
sub
and
out
sahf
in
inc
cmp
sbb
adc
iret
ljmp
lods
push
dec
lsl
xor
mov
ljmp
fsubrl
dec
ud2
test
or
je
ss
jl
add
lret
push
dec
lsl
sbb
xchg
ss
dec
cwtl
sbb
lret
jle
cmpsl
and
lahf
mov
mov
in
sti
mov
cmpsb
pop
loop
and
addl
scas
xchg
int3
imul
mov
pop
aaa
sbb
dec
mov
ljmp
pop
ret
das
dec
cmp
sbb
fcmovu
mov
lcall
ljmp
aam
mov
lods
ret
inc
mov
cmpsb
push
jo
shl
int
loope
test
aaa
add
lcall
daa
dec
pop
test
inc
ficomps
push
adc
mov
popa
or
sub
addl
mov
mov
jle
test
adc
popa
mov
fs
lcall
js
sbb
mov
push
cwtl
shrl
jo
in
repnz
aas
jmp
paddusw
xchg
les
rclb
push
inc
aad
and
fisttpl
sub
or
inc
push
outsb
pop
loop
cld
pop
or
add
scas
cltd
mov
cmpsb
pushf
add
add
push
sbb
xchg
mov
fisubrl
pop
dec
add
dec
xchg
jle
fwait
andb
cli
lcall
pop
xchg
add
rclb
pop
xacquire
mov
dec
mov
push
sbb
add
mov
pusha
mov
dec
je
pushl
aaa
cwtl
out
mov
and
shll
loop
imul
xchg
cmp
das
outsl
sub
cmpsb
rcrl
jl
push
jno
mov
sbb
sub
cmc
jbe
jo
inc
pop
cwtl
inc
push
jns
inc
clc
push
sbb
out
and
and
out
outsb
pushf
cmp
and
dec
or
or
dec
cmp
jo
stos
mov
mov
dec
gs
nop
xchg
data16
mov
lea
in
push
dec
pop
or
cwtl
sbb
or
and
popa
outsl
movsb
add
cwtl
inc
cmp
push
pusha
add
lods
mov
int
int3
sbb
lea
test
ds
hlt
je
jbe
test
sub
mull
jbe
xchg
and
add
dec
or
xor
cld
repz
cwtl
cmp
xchg
in
sub
pushf
mov
rcrl
test
pop
movsl
mov
jecxz
add
xchg
psrld
push
xchg
pop
cli
lahf
loopne
jle
dec
push
mov
pop
push
popl
mov
jae
pop
pop
xchg
cwtl
xchg
das
call
inc
lock
push
jno
push
sbb
call
loope
insb
xchg
cwtl
jge
sub
mov
call
mov
in
inc
or
dec
cli
ja
adc
fcoml
ss
sub
sarb
mov
cmovg
mov
hlt
mov
xor
insb
in
sbb
xrelease
mov
mov
rcrl
gs
dec
mov
in
shrb
sahf
in
sbb
into
and
cs
dec
and
xlat
cmp
mov
dec
sbb
cli
pop
in
sarb
inc
mov
mov
sbb
xlat
mov
xchg
push
cmc
mov
aas
loop
dec
dec
in
outsl
sahf
stos
push
andb
push
sbb
dec
jb
sbb
ss
inc
test
mov
jno
lds
sub
cmp
sub
adc
mov
lret
dec
xchg
out
mov
outsb
mov
pop
inc
add
movsl
xlat
mov
or
es
inc
pop
xchg
int
inc
cwtl
jo
mov
test
gs
push
in
sub
mov
ja
jg
fmuls
hlt
ss
insb
push
in
sub
push
in
xor
out
adc
loopne
jno,pn
jno
or
into
jecxz
add
xchg
in
roll
xchg
pop
cli
lahf
sbb
lods
adc
push
inc
push
insb
sahf
mov
adc
les
in
jo
adc
cwtl
xchg
ja
mov
mov
sub
or
rorl
test
data16
int3
push
scas
in
pop
mov
mov
je
mov
dec
xchg
mov
mov
and
xchg
mov
push
sub
mov
dec
je
xchg
aad
cmp
mov
rorl
cwtl
dec
movsl
ret
push
hlt
dec
dec
cli
int3
dec
inc
xchg
sub
push
jmp
jl
dec
je
out
push
int3
mov
lahf
in
jl
push
int3
inc
outsl
jp
push
sub
lods
adc
push
jo
pushf
dec
rol
ljmp
mov
push
pop
and
enter
mov
and
mov
or
jge
les
jo
shll
mov
cltd
pop
mov
mov
lea
cld
xchg
jmp
daa
inc
mov
and
fwait
jno
push
gs
cmpsb
pop
mov
pushf
je
dec
cwtl
xchg
jmp
test
jle
pop
push
mov
sbb
sub
adc
les
pop
lcall
add
add
add
xor
sub
mov
push
outsb
pop
outsb
fdivr
cmp
pop
mov
push
cwtl
cmpsl
sub
add
rclb
inc
popa
or
push
stos
jae
cmpsl
test
mov
jle
mov
stc
movsb
ror
je
dec
sbb
dec
dec
mov
les
mov
mov
mov
daa
push
push
mov
std
loopne
out
sub
dec
pminsw
pushw
je
add
mov
push
nop
dec
cmp
adc
cltd
and
cltd
mov
rcrl
xor
in
in
add
cmpsl
mov
mov
rolb
test
adc
dec
push
mov
or
daa
cmp
sub
mov
mov
cwtl
xor
pushf
sbb
mov
mull
mov
cld
mov
and
dec
inc
mov
cld
cwtl
icebp
lds
fnstenv
sub
mov
cmp
negl
mov
pop
imul
pop
pop
daa
pop
mov
rcrb
out
icebp
popa
or
push
sub
mov
dec
jecxz
sar
push
repnz
shrl
test
ret
jns
pop
cmp
imul
sbb
mov
addr16
test
mov
adc
aas
rcr
hlt
push
pop
adcl
test
adc
push
jmp
ljmp
xchg
cli
cli
xchg
mov
fwait
pop
xchg
cltd
adc
inc
sahf
sbb
jo
cli
mov
je
inc
dec
xor
fsubs
mov
mov
mov
mov
push
or
mov
ficoml
add
push
jo
jp
dec
jae
cwtl
xchg
mov
lret
jns
bound
stos
shll
sub
leave
outsb
xchg
and
sbb
rcll
pushf
rorb
test
hlt
add
sub
jb
outsb
and
gs
test
dec
pmaddwd
das
jo
lea
mov
jo
and
repz
adc
dec
nop
cli
mov
or
xchg
shlb
jp
and
lods
movsl
shlb
fucomip
dec
movaps
cmp
cli
or
les
inc
fdivr
mov
les
fucomi
daa
movsb
xchg
cs
mov
cli
lods
xchg
pop
mov
sbbb
lock
mov
and
push
or
mov
push
stos
mov
mov
mov
ja
add
sbb
jmp
mov
mov
mov
out
addr16
or
loopne
add
out
or
pop
push
decl
and
mov
mov
mov
daa
push
sbb
mov
push
pushf
dec
adc
fcmove
xchg
or
cmp
mov
inc
jo
sub
pushf
mov
mull
dec
xlat
test
mov
popa
mov
fs
lcall
test
in
fdivrl
sbb
cmp
adc
fadd
xor
xor
call
stos
mov
out
sub
pop
andb
xorl
stos
loopne
in
int3
push
add
in
ds
hlt
adc
shl
cmc
pop
es
dec
shrl
inc
xchg
mov
int3
mov
enter
pop
aas
movsl
incl
std
lods
mov
lcall
mov
pop
pop
mov
mov
dec
rorl
idivb
je
dec
jnp
xor
andb
cli
lock
sbb
xlat
aas
cmpsb
hlt
rcrb
add
lock
repnz
imulb
out
je
int3
adc
mov
inc
insl
test
sarl
leave
shlb
mov
fs
cli
hlt
cli
push
sub
loop
jb
xor
xchg
cmpsl
jae
push
arpl
into
aas
sub
xchg
or
cwtl
daa
cmp
jo
movl
gs
loope
fisttpl
bound
mov
dec
fxch
mov
mov
lock
xchg
daa
out
xchg
out
adc
xor
cmpsl
mov
cli
imul
addr16
cwtl
adc
mov
test
gs
push
lcall
mov
mov
inc
daa
andb
cwtl
shll
inc
test
add
pop
mov
add
dec
or
xor
cld
repz
mov
ljmp
test
aaa
add
sbb
cwtl
in
pop
pop
int
repnz
je
sub
mov
out
pop
jle
adc
aas
adc
push
loop,pn
fdivr
jle
and
les
sbb
fdivl
mov
loop
pop
in
in
mov
mov
xorl
jno
fdivl
sbb
cmp
push
dec
adc
bound
xchg
pop
dec
sahf
or
int
add
mov
bound
movsl
fcmovu
adc
mov
lock
loope
call
sbb
mov
push
aad
lcall
adcl
shll
dec
cli
out
add
fcmovb
sbb
orl
in
inc
pusha
inc
out
popf
xor
or
push
push
push
lock
bound
dec
fisttpll
icebp
ret
mov
pushl
lret
cmc
inc
andl
push
popa
or
pushl
aam
inc
sub
cltd
pop
sahf
and
and
nop
push
shlb
mov
push
cmp
lret
pop
insl
mov
js
cmpsb
push
repz
in
imul
lahf
mov
lgdtl
sub
mov
inc
xchg
mov
push
adc
mov
in
pushf
int3
sti
mov
push
lahf
movsb
ss
mov
out
sub
pop
cmpb
mov
jmp
cmp
cmp
test
jp
fisubrl
aam
xchg
fdivl
jle
xchg
mov
rorb
movsl
or
mov
daa
push
sbb
cmpl
pop
lret
jmp
push
pop
sarb
jmp
mov
loopne
push
lcall
clc
sbbl
cli
or
sub
lret
adc
test
push
adc
push
fnstsw
dec
ret
mov
pusha
and
sub
dec
stos
test
and
mov
or
enter
in
ror
jp
mov
repnz
insb
jmp
sub
out
cmp
xchg
in
adc
pop
adc
push
fmull
mov
cmpsb
or
or
add
pushf
in
pop
fidivs
loopne
pop
jbe
shlb
xor
sub
mov
insl
sahf
sbb
xchg
jne
pop
pushf
push
dec
clc
mov
jbe
dec
lea
fidivl
mov
mov
sub
inc
xchg
lret
or
add
xchg
es
xor
call
or
pop
mov
in
pop
fidivs
loopne
pop
jbe
shlb
ds
and
mov
pop
mov
in
sti
sub
dec
cmpsl
outsl
xor
psubb
lock
lods
mov
cmp
mov
mov
xchg
out
data16
jns
mov
dec
mov
jl
push
ret
push
cmp
or
add
ds
aas
loop,pt
fucomp
call
insl
fnsetpm(287
lahf
jae
cwtl
ljmp
pop
ljmp
fistpl
add
cwtl
ljmp
sbb
xor
xchg
push
mov
in
dec
xor
clc
cmp
pop
fs
ds
pusha
xchg
xor
jae
pop
repnz
vunpckhpd
lahf
mov
mov
push
lock
add
inc
mov
fs
mov
arpl
inc
repnz
test
xor
loope
sub
cli
mov
movsb
repnz
cwtl
orl
mov
jmp
mov
stos
fdivr
cli
xchg
xchg
into
pop
mov
fwait
pop
mov
mov
jmp
sarl
mov
mov
mov
aam
cmc
jb
inc
or
adc
daa
pusha
lret
inc
cmp
insl
sub
lret
rcrl
mov
test
jb
sbb
insl
xor
es
pop
dec
push
dec
sub
andb
sbb
pop
roll
mov
or
mov
pushf
fadd
call
rolb
sub
stos
enter
cmp
shrl
mov
push
jle
cmpsl
mov
push
sub
push
xor
call
in
fs
push
jbe
push
inc
jno
push
sbb
loopne
mov
ljmp
adcl
and
xchg
add
lahf
mov
clc
mov
leave
int
jmp
add
cli
jbe
ficompl
es
jns
out
mov
ljmp
cld
mov
push
xchg
call
rclb
ds
repnz
int
out
stos
sbb
sub
cwtl
in
out
cmp
jl
movsb
inc
sub
fdivrs
mov
jl
cmp
lcall
mov
ljmp
push
adc
sub
std
xchg
mov
or
cli
cwtl
mov
xor
out
aam
and
sbb
test
dec
sbb
mov
fcompl
aad
cmc
sub
js
ret
dec
cmp
sahf
lret
pop
fs
sub
dec
loope
push
popf
and
adc
jbe
ret
inc
rcll
mov
xchg
push
inc
mov
sub
mov
mov
and
mov
mov
cmp
pop
sbb
and
jb
mov
mov
sub
cmp
pushf
stc
or
mov
in
cmpsl
jo
mov
js
popa
sbb
jb
jmp
sub
cwtl
mov
popf
in
inc
inc
scas
mov
add
bound
insl
sub
inc
pmullw
add
mov
shlb
cmc
dec
out
pop
jno
xchg
ds
insb
test
cmpsl
dec
pop
je
in
aas
fiaddl
lea
inc
or
jo
add
and
adc
inc
js
nop
int3
lret
cld
cmp
dec
pop
imul
inc
push
mov
divps
rcr
cmp
mov
pop
sbb
xchg
lea
xchg
popa
das
enter
lods
enter
mov
popf
aaa
cltd
xlat
inc
add
add
mov
add
add
mov
incl
ret
mov
inc
icebp
xor
outsl
cmpsb
pop
pop
aam
push
mov
loope
fiaddl
out
jb
and
std
adc
out
test
sbb
xchg
push
ret
movsl
cltd
cmpb
add
dec
jl
jl
std
dec
push
lods
ds
mov
sub
jmp
jb
sub
lods
stos
leave
fnstenv
xchg
pop
hlt
sbb
subb
mov
call
aam
dec
out
fdivs
mov
nop
ret
kaddw
and
inc
addr16
mov
rcrb
add
pop
xchg
mov
sub
aam
repz
std
jl
orl
sbb
mov
add
andb
jecxz
jp
or
jg
and
mov
stos
pushf
push
xchg
rclb
je
sbb
addr16
pop
mov
xor
dec
pop
mov
mull
push
pop
lds
mov
mov
fs
subb
rclb
fs
pop
fdivs
mov
dec
dec
inc
mov
mov
jne
mov
cmp
push
lods
popl
push
xor
adc
fs
mov
dec
ret
xor
lret
call
xchg
mov
push
cld
repz
mov
fwait
jae
or
jle
sub
dec
fsubr
and
fcomps
loopne
insb
into
cmp
fs
mov
sub
sub
jo
in
mov
and
enter
scas
jge
push
add
int
iret
daa
inc
scas
cmp
lcall
jo
push
ret
loop
in
decl
arpl
or
or
fsubrl
xchg
mov
hlt
cmp
test
call
push
sub
adc
adc
adc
loope
ret
xor
test
mov
xor
pushf
ss
cmp
es
fisubrl
scas
cmpb
aas
mov
stos
sbb
cmp
pushf
sub
cmp
cmpsl
test
xor
jno
dec
into
xchg
jp
xchg
cwtl
outsl
movsb
pop
subb
imul
loopne
lret
loope
rorl
ss
aad
imul
push
cmp
and
push
cli
mov
mov
test
lods
inc
sbb
stos
cwtl
xor
jno
repz
negl
ret
subb
mov
or
lds
aam
shl
add
cmp
cmp
cmpsl
sub
mov
pop
in
cwtl
jl
mov
loope
sahf
sub
mov
and
pop
shl
cmpsl
mov
mov
negl
ret
subb
mov
enter
mov
in
or
cltd
jne
aas
test
dec
in
jmp
jbe
and
dec
or
inc
fisubl
in
lods
cmpb
iret
mov
fsubrl
stos
sbb
mov
mov
xor
mov
jl
test
adc
cmp
dec
push
sbb
adc
push
adc
push
in
incl
push
jnp
mov
fsubl
leave
add
inc
lcall
punpckhwd
sahf
fmuls
mov
aam
repz
std
jl
cwtl
dec
add
or
movsl
mov
repnz
daa
xchg
mov
in
stos
mov
adc
dec
int
pop
mov
push
bound
cmp
mov
jb
das
ds
mov
sbb
pusha
aas
repnz
fidivrl
pop
xor
xchg
pop
cmp
dec
bswap
sbb
sbb
add
fwait
orb
jbe
fistpl
and
add
mov
jae
xor
aas
xor
loope
dec
test
lcall
cmp
push
out
arpl
mov
popf
mov
es
sahf
and
inc
push
sub
add
fwait
sahf
and
push
lahf
repnz
imul
decl
jae
mov
das
dec
cmpsb
stos
lcall
ja
mov
in
shlb
nop
and
dec
mov
pop
cmp
sub
aad
mov
cld
pop
dec
lods
push
loop
xlat
dec
stos
mov
enter
mov
xor
pop
ds
xor
aaa
xchg
pusha
pop
clc
andl
movsb
sub
lret
push
mov
jb
mov
adc
mov
movsl
sbb
aas
or
sub
mov
sub
mov
and
std
jge
shlb
shrb
ja
mov
bound
and
fldt
je
dec
jbe
sti
loop
mov
xchg
ds
add
or
stos
push
add
adc
mov
sub
inc
add
sar
mov
in
cmp
lods
cs
lret
cmp
cmp
sbb
mov
dec
jne
pop
mov
aas
daa
stos
sub
inc
mov
push
pop
xor
aas
and
loopne
call
adc
mov
and
lock
clc
cmp
in
icebp
sbb
dec
aad
insb
sti
inc
andl
hlt
inc
sti
scas
or
pop
cmp
inc
push
xchg
dec
xchg
mov
lods
add
mov
and
mov
mov
insb
clc
in
push
sbb
lock
mov
and
dec
repz
insl
adc
adc
push
cmpsl
sub
sub
cmp
add
push
cwtl
mov
inc
pop
imul
push
mov
add
lods
cmpsl
sub
arpl
push
sarl
mull
out
add
add
lret
shll
push
sub
call
mov
decb
loope
xorb
xor
pop
out
in
sub
movsl
mov
sub
mov
jo
pop
sbb
jg
push
call
xchg
add
jno
mov
dec
sbb
fcomps
lret
out
lret
add
xor
or
sti
jg
out
xchg
call
int3
xor
fisubrl
xlat
jle
or
jno
xor
mov
mov
or
pop
repz
cmpsl
pop
cwtl
inc
cltd
rclb
jb
mov
mov
in
std
mov
adc
sarb
inc
shlb
sbb
cmpsl
pop
and
fucomip
dec
movaps
test
stos
shll
es
sbb
repnz
or
imul
add
xlat
ljmp
outsb
mov
cld
cmpb
out
in
negb
rolb
bound
cmp
sub
gs
loope
xchg
lods
mov
mov
add
push
js
repz
xor
xchg
rcrb
inc
out
adcb
and
in
push
mov
ret
addb
loop
cld
movsb
xchg
ja
push
dec
jecxz
mov
or
shrb
es
jmp
int3
cli
and
xor
loope
and
es
cld
pop
or
cld
pop
add
loopne
mov
and
adc
and
dec
pmaxsw
cmc
adc
push
roll
shl
sub
mov
stos
push
sbb
add
subl
roll
inc
mov
fadds
add
test
add
movsl
and
and
mov
int
out
mov
push
pop
inc
shr
ds
shll
sbb
inc
test
xor
xor
add
xor
jl
std
cmp
cmc
cmp
sahf
and
or
lds
imul
dec
stc
stc
mov
add
ret
inc
adc
lods
or
test
leave
sub
cmp
hlt
cwtl
loope
mov
cld
lcall
pop
mov
aas
dec
scas
nop
sub
shll
mov
das
xor
in
test
sub
xchg
adc
lea
ret
test
jl
push
mov
push
dec
push
dec
mov
push
inc
cmp
pop
xchg
lret
test
jg
sub
shrb
movsb
mov
popf
push
cmc
pop
jno
or
mov
cmp
xor
bound
mov
jmp
or
subb
test
mov
adcl
fs
adc
cld
xor
push
jge
inc
jmp
and
xor
mov
add
fnsave
loopne
pop
jbe
mov
aam
lcall
cwtl
orl
cld
repz
lock
mov
jno
sub
in
outsb
pop
dec
or
dec
ds
or
mov
mov
jmp
adc
xchg
loop
jo
mov
pusha
sbb
jp
cltd
mov
xor
sbbb
nop
add
jecxz
in
popf
in
jp
adcl
xchg
pushf
push
adc
jo
jns
and
adc
cmp
hlt
jmp
out
lods
inc
mov
call
cmp
lods
sbb
fcmovb
stos
mov
ja
fcmovbe
jmp
lcall
subl
fxch
in
addr16
inc
xlat
aad
mov
pop
fmull
lea
movsl
xlat
xchg
stos
mov
clc
xor
push
inc
popf
cmp
adc
mov
and
arpl
ds
jmp
incl
sub
xchg
mov
xor
fs
push
xor
gs
jecxz
mov
cli
xchg
sbb
mov
sbb
std
ljmp
inc
or
repnz
das
jne
sub
gs
ss
les
out
jmp
cwtl
jmp
outsb
lcall
jb
adc
std
xchg
xchg
xlat
push
pop
sub
loope
mov
stos
mov
imul
popl
and
jle
in
test
repnz
pop
jb
ja
mov
shll
mov
aam
pop
and
andl
pop
xchg
sbb
cmp
repnz
sbb
jg
mov
fidivl
xchg
mov
fildl
and
dec
por
push
jle
inc
adcl
cmp
xchg
les
test
test
mov
xchg
inc
cmp
xchg
sub
aam
adc
es
jge
push
shlb
cmp
mov
sub
hlt
fstpt
cs
push
out
inc
adc
xchg
shrb
adc
repz
fs
push
call
inc
mov
mov
rol
mov
push
ja
lods
mov
jecxz
insl
push
test
jo
push
daa
lods
in
int
lods
imul
push
mov
pushf
xor
cmpsb
sbb
sbbl
pop
lea
imul
mov
jle
test
mov
fdivrs
sub
stos
or
jp
push
sbb
mov
xor
mov
and
pop
jo
or
sub
add
test
nop
test
sub
or
lret
mov
in
mov
es
mov
lds
stc
enter
push
addr16
add
test
xor
mov
jb
rclb
test
outsl
jnp
xchg
pop
jno
push
mov
sub
add
fisubrl
xor
fstl
pop
sahf
loope
fucomip
or
dec
dec
push
mov
mov
cmpsl
mov
push
inc
mov
cmp
pop
xchg
mov
sub
push
cmc
lahf
fcomip
push
sub
lods
ss
sahf
add
cmp
push
aam
lret
mov
mov
push
cmpsl
push
mov
push
aad
inc
jge
push
into
or
xor
mov
jb
and
jae
or
aam
sub
push
sbb
shrl
push
jbe
push
in
pop
shlb
lock
mov
or
xchg
or
std
out
pop
ret
arpl
jns
jle
movsl
adc
mov
push
popa
dec
cmc
in
pusha
lods
idivl
lret
sbb
into
js
cmp
lret
push
pop
inc
and
dec
xchg
adc
and
and
stos
xorl
lret
clc
lock
push
aaa
scas
daa
mov
sarb
in
mov
nop
fstps
mov
enter
push
call
and
ljmp
fs
push
outsl
jne
xchg
mov
incb
imul
aad
add
cs
mov
cmpb
mov
sahf
and
daa
insb
lret
ret
testl
add
sbb
repnz
mov
pop
adc
xlat
dec
fmul
xchg
push
aam
sbbb
fs
lret
ja
mov
scas
xchg
enter
test
and
xchg
das
dec
or
cmc
xor
les
aas
jle
mov
ret
sarl
sbb
ss
aas
xchg
dec
subb
mov
mov
aas
mov
and
dec
shll
mov
xchg
push
cwtl
jge
fidivrs
repnz
pop
mov
ds
hlt
push
push
hlt
mov
xchg
dec
mov
ret
xor
notl
dec
adc
sbb
cmc
shrl
mov
sbb
mov
inc
xchg
cmp
pushf
cmpsl
pop
test
fcomip
adc
or
out
sub
pop
inc
sar
pop
pop
clc
jno
data16
push
cltd
adc
inc
mov
cwtl
jge
pushl
jae
cmp
enter
sbb
cmp
in
sub
cld
mov
adc
mov
jg
mov
scas
test
lea
lret
or
dec
fs
sub
push
fwait
clc
fcmovu
out
jp
cltd
mov
push
loopne
mov
or
je
inc
dec
jg
pop
xchg
sub
fincstp
push
inc
fwait
call
cltd
fcom
or
ljmp
insl
call
andb
stc
daa
dec
or
xlat
sub
add
shlb
lcall
adc
mov
push
add
loope
fildl
mov
push
and
loopne
movsb
sub
mov
test
rolb
call
fucomi
lods
test
mov
cmp
mov
xor
push
mov
lock
jle
or
or
add
cs
mov
pop
leave
fldcw
add
jge
inc
pop
imul
or
xchg
mov
sbb
xor
fcoms
pusha
pusha
push
pop
mov
xchg
add
add
mov
pop
aas
out
mov
push
mov
push
cmpsb
cld
pop
dec
data16
and
and
mov
dec
jmp
jnp
pop
cmp
mov
cmp
xor
call
ja
ss
xchg
or
dec
dec
mov
push
enter
jb
loope
xchg
pop
arpl
aas
xchg
sbb
repz
jo
jg
and
lret
cld
fadds
in
mov
mov
dec
sbb
push
rclb
mov
loopne
call
adcb
jns
lcall
xchg
test
and
ds
mov
xor
inc
fs
imul
into
pop
shll
xchg
lahf
adc
movsl
add
dec
pop
dec
lcall
movsl
jge
lahf
pop
sbb
push
xchg
and
imul
shrl
test
mov
dec
aaa
shll
lret
leave
push
xor
mov
data16
mov
xchg
adc
stos
xchg
fistps
jbe
cmpsl
mov
mov
filds
scas
cltd
shll
hlt
daa
stos
mov
test
push
xor
mov
mov
xchg
cltd
pop
pop
mov
xlat
adc
fiadds
nop
and
mov
and
push
arpl
xchg
cmp
jle
mov
test
pop
dec
xchg
js
xlat
sub
in
mov
divl
push
xchg
hlt
xor
xor
push
aas
adc
jmp
xor
aas
popl
cwtl
dec
stc
mov
sub
dec
out
pop
in
or
sub
stc
cmpl
cmc
inc
std
data16
jae
push
fisubs
test
inc
cmpsl
mov
arpl
mov
add
out
pop
cld
add
inc
addl
push
lods
cmp
in
push
mov
cltd
ds
and
mov
pop
and
add
mov
xchg
insl
or
repnz
sbb
mov
xor
add
out
sahf
pushl
fldcw
icebp
push
arpl
xchg
push
adc
outsb
pop
int
inc
in
out
xchg
mov
into
xlat
aam
push
mov
add
xchg
push
dec
mulb
in
xchg
shl
cmp
in
cld
mov
jp
sti
push
sti
push
sbb
lods
or
mov
xchg
sbb
loop
sub
dec
jb
aad
dec
jno
lea
xor
loope
mov
loop
sbb
popf
enter
stos
mov
test
out
loope
cmp
addr16
aad
aad
and
and
or
pop
int3
and
outsl
push
out
je
xchg
mov
sbb
cmpb
jl
cmp
sbb
outsb
cmp
out
pop
stc
pop
mov
cli
ss
xor
aam
mov
jb
lock
cmp
out
sub
adc
loopne
scas
shl
je
jmp
sub
pusha
cmpsl
push
xchg
mov
lahf
add
jge
pop
nop
xor
ss
mov
fcos
mov
jge
aaa
movsl
jp
jo
dec
mov
mov
in
insb
add
aam
or
sub
les
sahf
aad
pop
mov
cltd
shll
sarb
imul
mov
rcrl
out
mov
or
icebp
adc
mov
or
inc
mov
jmp
test
les
xor
jnp
inc
push
repnz
in
mov
shll
adc
pop
xor
aas
dec
cmp
mov
add
adc
mov
jle
mov
rcll
push
push
orb
dec
repz
test
xor
leave
div
or
xchg
lds
xchg
mov
pop
jo
add
mov
loopne
dec
pop
cwtl
lods
repz
or
xor
jo
enter
pop
mov
test
insl
and
shr
inc
aad
push
mov
loopne
mov
pop
mov
mov
outsl
cltd
out
inc
idivb
mov
adc
jmp
cli
scas
dec
sub
hlt
cmc
push
mov
orl
cld
dec
sub
aas
aad
icebp
lcall
popa
lds
insl
jo
fstps
and
icebp
push
and
cld
jg
mov
push
xchg
lahf
jmp
push
fidivrl
scas
mov
subl
movsb
js
ret
dec
aam
data16
push
jp
sub
outsl
cmpsl
mov
add
xor
mov
dec
movsb
fdivr
fildl
xchg
cmpsb
sub
cs
add
hlt
daa
inc
sub
mov
mov
xor
mov
movsb
pop
pushf
cltd
push
inc
inc
je
test
xor
push
jo
jmp
pcmpeqd
xchg
lds
sub
pushf
fwait
andb
repnz
daa
add
pushf
cwtl
shll
or
test
lret
cwtl
xchg
jge
ljmp
or
repz
loop
lea
add
xor
fnstenv
push
out
xchg
push
push
jo
es
enter
sahf
sub
mov
adc
aas
add
inc
ja
cmp
aas
jns
decb
shrb
push
ret
lea
fwait
int
jecxz
mov
pusha
mov
popa
mov
daa
ljmp
in
fwait
sub
rolb
xor
jns
inc
xor
xor
imull
sarb
push
lahf
sbb
aad
je
dec
test
loop
pop
scas
jbe
inc
xor
fbld
mov
ljmp
mov
fs
das
cmc
jge
push
inc
mov
xchg
movsb
jp,pn
jge
jge
pop
repz
sbb
xchg
xlat
in
mov
mov
cli
or
shlb
adc
idivl
or
loopne
and
xchg
jmp
ds
out
nop
aas
and
addl
pushf
push
scas
jb
push
lcall
rolb
add
shll
sbb
cld
leave
popa
add
mov
sbbl
add
lahf
rolb
out
lcall
ljmp
xchg
and
pop
pusha
pushf
shr
aas
sub
fst
jl
jge
push
or
add
cltd
mov
pop
int3
int
stos
mov
fistpll
test
aaa
fwait
sub
sub
adc
push
scas
shl
je
dec
insb
sub
jmp
add
ret
mov
sti
lock
add
ja
dec
jb
push
into
cli
gs
jmp
sarl
or
std
push
fistl
cmpsl
adc
sbb
sub
hlt
mov
pushf
lods
imul
cmp
xor
sub
inc
push
and
jle
mov
push
pushf
rolb
push
mov
lods
repnz
adc
mov
icebp
shr
in
pop
dec
add
xor
mov
into
clc
int3
and
push
push
jbe
push
in
movsb
push
mov
je
dec
xchg
cmp
dec
jbe
mov
outsb
sbb
je
cltd
sub
test
pop
sub
jae
loope
mov
int
sub
ja
or
out
adc
cmpsl
xlat
dec
mov
dec
sahf
sub
adc
shl
and
test
dec
mov
pop
mov
sbb
in
sbb
data16
daa
inc
hlt
cwtl
cld
cmp
in
fistps
dec
cwtl
jmp
jnp
pop
cmp
xor
pop
cwtl
movsl
in
lods
mov
mov
dec
addl
xchg
xlat
push
mov
xlat
push
repz
mov
mov
push
mov
and
in
push
out
ds
inc
lret
movsl
sub
shr
repnz
repnz
es
ljmp
jmp
test
je
dec
add
mov
and
ret
subb
movsb
pop
test
popf
out
jp
or
mov
xorb
mov
mov
add
aam
mov
mov
popf
je
cmp
repnz
ja
lock
inc
test
daa
jle
test
xchg
cmp
loop
enter
mov
jl
or
mov
lock
sub
ss
mov
fistpl
insb
jmp
test
cvttps2pi
cs
sbb
push
mov
stos
fdivr
pop
cmp
cmp
shlb
sub
or
pusha
cmpsb
push
popa
pusha
adc
pop
xchg
jp
imul
adc
popa
mov
fs
lcall
js
sbb
aaa
mov
cwtl
shrl
pop
jo
in
repnz
jmp
adc
xchg
cli
frstor
adc
bound
cltd
stos
out
fdivl
mov
nop
rcl
pop
push
add
cmpsl
mov
stc
and
dec
cmp
adc
pop
mov
pop
mov
cmp
lea
cwtl
pop
clc
mov
cwtl
jo
jge
repz
sbbb
push
mov
pop
pop
out
mov
or
or
inc
stc
inc
movsb
pop
mov
push
adc
ja
mov
icebp
add
cmpsb
mov
pushf
push
adc
add
shll
loopne
jmp
dec
xor
xchg
add
stos
shll
icebp
idivb
xor
das
inc
pop
test
pop
rol
sbb
aaa
mov
ret
sub
inc
fstl
lods
push
mov
add
pop
mov
jecxz
jle
test
scas
pop
cwtl
push
xor
push
in
pop
jp
push
xchg
ja
loope
xchg
push
mov
lods
hlt
push
push
jp
cmc
sbb
sbb
leave
addr16
loop
test
pop
jb
rclb
push
outsb
imull
cmp
push
pop
aaa
cmpsl
mov
andb
bound
lods
adc
xor
hlt
pop
xor
jg
test
ss
sub
sub
adc
mov
je
dec
movsb
push
out
lods
or
cmpsl
mov
jbe
dec
jno
push
jp
cltd
adc
ffree
dec
jne
jae
mov
inc
fmull
repnz
jmp
int3
cli
nop
push
fcoml
mov
test
cmp
in
sub
les
jl
aam
shl
mov
dec
xlat
test
mov
not
les
out
test
adc
mov
push
pushf
test
je
mov
sbb
mov
dec
pop
pop
in
in
in
xorb
test
pop
jb
dec
mov
ss
in
inc
je
mov
push
jno
mov
or
inc
lret
sub
lret
subb
xorb
test
mov
rclb
outsb
sub
test
sub
pop
push
add
pushf
std
cmp
iret
or
aas
repz
loope
jo
fs
dec
movaps
lcall
cs
push
jecxz
mov
and
dec
dec
mov
in
imul
inc
and
ret
mov
into
jle
insl
pop
mov
and
sbb
aas
push
es
lock
sub
sbb
mov
sub
adc
sahf
jno
pop
fsubrp
push
fwait
and
mov
call
dec
jecxz
xchg
sbb
adc
and
sub
push
push
xchg
bnd
enter
adc
es
imul
push
cmp
mov
mov
loop
inc
adc
in
jnp
dec
cld
jae
cwtl
xchg
shlb
loope
or
dec
adc
cmpb
aas
xlat
inc
les
outsl
nop
push
call
sbb
hlt
pop
xchg
mov
in
mov
je
xor
or
mov
lcall
fs
xchg
fwait
scas
call
loope
insb
xchg
jge
mov
mov
jno
mov
pushaw
jo
sahf
fdivl
sbb
xchg
scas
insb
movsb
mov
add
es
mov
stos
loope
push
movsl
sarl
push
mov
pushw
mov
mov
sbb
cltd
lods
imul
push
pop
mov
and
decl
stos
jae
xchg
jmp
xor
mov
je
pop
repnz
pop
add
xchg
xchg
lret
xlat
test
aas
andb
push
inc
adc
sbb
imul
cmc
and
outsl
sub
int3
mov
rcr
adc
out
and
dec
loope
pusha
jae
movsl
mov
iret
ror
dec
enter
jno
cmp
test
cwtl
movsl
shlb
fucomip
dec
movaps
adc
and
hlt
dec
hlt
mov
bound
pcmpgtd
mov
push
stos
cmp
aam
cmpsb
das
stos
mov
rcrl
mov
lret
cmc
mov
imul
mov
adc
lahf
bound
xlat
dec
add
shlb
and
mov
push
push
test
mov
out
iret
notl
enter
sub
xor
insb
sahf
adc
popa
mov
jl
out
insl
test
nop
sub
jl
xchg
sbb
xchg
mov
out
cmp
shrl
es
hlt
icebp
enter
pop
aas
xchg
pop
fistps
ja
cmpsl
mov
mov
aam
dec
aam
loopne
dec
je
inc
and
cmp
mov
ljmp
add
mov
jle
add
sub
pop
mov
rcrb
mov
pop
ljmp
ds
repnz
adc
cmp
cld
mov
pop
sub
cltd
shl
sbb
jl
sub
cmp
cs
jg
movsb
in
fcmovne
pop
adc
jle
loopne
jno
fdivl
in
sub
or
mov
out
sub
test
push
xchg
lock
pop
lds
js
shlb
lea
add
add
add
cltd
or
ficompl
sub
sub
sbb
test
test
rclb
or
lea
out
imul
pop
inc
test
mov
in
jno
or
jl
add
out
inc
insl
test
sarl
leave
pop
fs
shr
lret
arpl
pop
iret
adc
add
cltd
cld
movsl
jo
cs
subl
sub
add
jbe
xlat
mov
mov
out
inc
dec
mov
pop
stc
sahf
loope
mov
outsl
push
cmp
mov
add
pushf
adc
cmp
fstl
pop
pop
jge
pop
adc
cli
mov
je
push
bound
mov
dec
aad
and
fistl
sub
cmp
out
fdivl
cwtl
jge
movsb
pop
sub
push
mov
pop
mov
or
stc
and
push
test
cmpsb
or
jno
push
xchg
mov
cmpsb
mov
fimull
ret
into
ror
add
pushf
dec
add
push
mov
mov
dec
pop
pop
in
in
mov
test
orl
les
repnz
jle
pusha
fsubrl
mov
pop
mov
dec
pminsw
sub
dec
sar
out
es
jp
cltd
mov
insb
pushf
cwtl
add
inc
mov
int
repnz
and
inc
or
jg
test
mov
loope
bound
pop
xchg
mov
test
popa
ja
cs
pop
into
repnz
push
push
mov
adc
sub
lock
cwtl
cmp
pop
jo
shrl
cmpsb
in
mov
lahf
fidivl
or
or
je
dec
add
subb
mov
or
mov
cmc
xchg
ds
dec
inc
lea
lock
push
jno
push
insb
mov
adc
cmp
inc
lahf
jge
sub
push
cwtl
shll
mov
into
or
cld
push
xchg
ja
mov
mov
sub
mov
in
roll
cwtl
mov
rorb
data16
adc
mov
lds
mov
fwait
aam
pop
sub
not
les
sub
sub
sub
and
insb
pop
in
cs
pop
jp
xor
out
data16
pop
aas
mov
ss
xor
insl
push
pop
andb
subl
pop
stos
mov
outsb
or
das
into
mov
mov
fwait
subl
jp
mov
sbb
fcmovbe
mov
adc
mov
mov
daa
fmuls
in
es
cmp
adc
push
pop
or
push
fwait
mov
push
mov
pushf
xchg
xchg
out
outsl
add
in
xlat
sub
test
adc
popf
lahf
inc
hlt
repnz
sbb
add
sbb
lret
test
jp
adc
aas
mov
lret
andl
push
adc
aas
outsl
xchg
sub
les
in
cmp
mov
test
mov
test
pop
add
mov
push
jno
push
in
mov
adc
add
jge
mov
cwtl
out
lock
out
clc
adcl
sub
sahf
add
jne
ss
dec
adc
cmp
aam
pop
jno
dec
cmpsl
inc
mov
push
dec
out
hlt
pop
scas
xor
rcl
cld
pop
stos
fdivr
or
lret
adc
xor
mov
adc
add
mov
cli
pop
cltd
adc
inc
aam
adc
pop
in
sub
test
in
lods
push
ss
xchg
ja
mov
mov
sub
rcr
out
fdivrl
cwtl
jge
add
rorl
pop
mov
cbtw
jo
or
pop
adc
xchg
sub
int3
and
es
inc
cmpsl
mov
sbbb
scas
cltd
xor
push
mov
or
and
in
test
mov
inc
arpl
mov
jecxz
mov
jae
pop
push
xchg
mov
aas
cmpsb
and
push
loop
clc
pop
push
lock
cmpb
inc
fsubr
inc
out
icebp
xchg
in
push
cmp
jp
lahf
mov
mov
adcb
fisttpll
pop
cmp
pop
sahf
xlat
inc
je
sub
test
lahf
aam
fs
pusha
nop
mov
cmp
lcall
pop
mov
cwtl
mov
cwtl
out
jmp
mov
mov
scas
insb
movsb
mov
add
daa
dec
mov
sbb
xlat
ds
stos
sbb
jl
fmull
xor
xchg
shrb
xchg
mov
xchg
das
in
repnz
jecxz
add
xchg
jbe
aaa
push
xchg
pop
cli
sahf
mov
sbb
into
push
divl
adc
inc
mov
xchg
mov
into
insb
xor
mov
jle
testb
rcr
movsl
add
mov
test
pop
jb
push
push
mov
cmp
jmp
out
rorl
inc
mov
ljmp
xor
mov
jno
mov
data16
inc
or
repnz
xchg
das
in
repnz
jecxz
add
xchg
xchg
shlb
push
xchg
pop
cli
lahf
js
jle
dec
pop
cltd
adc
inc
jo
cld
out
int3
cld
pop
cli
fdivr
pop
shl
cmp
dec
xchg
rclb
pop
mov
mov
cmp
push
rclb
imull
cmpb
popa
mov
ljmp
xchg
out
mov
adc
loope
add
xchg
imul
rorl
fsubrl
sub
push
jno
mov
sbb
or
test
inc
mov
cwtl
pop
ret
das
fs
sbb
movsl
movsl
int3
xchg
mov
push
jo
or
cmpsl
and
cmp
cmp
sbb
add
in
and
es
push
fistps
es
pop
mov
push
ss
xorb
and
arpl
mov
xor
cmpsb
in
pop
pop
int
repnz
fildl
push
aas
add
cmpsb
call
imul
cltd
mov
dec
pushf
inc
add
shrl
rorb
and
jecxz
add
xchg
xlat
xor
mov
mov
jno
pop
push
cltd
adc
inc
rcrb
arpl
popf
je
pop
xchg
lds
and
pop
inc
shl
enter
outsb
mov
frstor
fs
inc
cltd
stos
out
jo
les
je
fsubrs
in
pop
and
dec
cmpsl
mov
sbb
ljmp
ljmp
sti
loop
xchg
test
push
hlt
push
inc
jbe
xlat
cli
pop
call
add
fdivrs
das
mov
cld
fwait
sub
pushf
cwtl
add
add
fistps
pushf
jle
sub
dec
jne
push
popa
or
scas
in
lock
push
lea
mov
bound
movsl
fcmovu
sti
fmull
mov
fdivs
das
fsubs
in
fimull
dec
lahf
xor
sbb
outsl
in
cmpsl
arpl
inc
jo
call
pop
xchg
insb
xor
mov
out
cs
pushf
loop
push
mov
dec
pop
push
mov
cli
sahf
sarb
js
pusha
add
sub
test
out
add
pushf
in
sbb
into
mov
pop
adc
inc
pop
aad
inc
cld
nop
dec
and
fdivs
ret
cmpsl
add
pop
dec
mov
and
xor
and
xorl
out
in
rclb
dec
mov
or
loop
push
test
and
shl
or
loope
fildll
mov
mov
mov
lods
lcall
and
jmp
adc
fsubs
in
and
test
xchg
and
ja
push
rolb
insb
xor
dec
dec
loopne
inc
mov
mov
dec
pop
pop
in
cmp
mov
jmp
loope
add
ror
add
xchg
fadds
sbbb
cmp
xor
stos
mov
lods
push
pop
mov
push
cmp
aad
test
adc
mov
mov
scas
push
setnp
inc
into
jp
lds
rdpmc
arpl
scas
addps
aam
jp
cmp
fists
fdivl
call
cmp
fwait
bound
jno
or
inc
ja
push
fidivrl
sbb
scas
bound
push
mov
cs
fwait
repz
test
mov
cmove
dec
daa
lcall
cmp
adc
lds
push
or
mov
fwait
and
testl
mov
push
pop
xchg
xor
push
adc
mov
dec
adc
test
ret
dec
into
mov
ds
sub
mov
shl
imul
push
pop
lods
lock
outsl
mov
aad
dec
push
mov
sub
xchg
xor
mov
insb
movsb
mov
add
daa
dec
mov
sbb
int3
imul
push
icebp
shrb
das
pop
mov
inc
push
mov
push
in
mov
dec
push
popa
pusha
adc
push
mov
add
and
jno
mov
shrb
insb
out
xchg
fadds
and
add
inc
shrl
dec
fstpt
cmp
add
out
aas
int
push
lret
lea
mov
cmp
inc
out
jb
pop
pop
push
ret
jle
test
jge
testb
imul
push
cmpsb
lret
shlb
aad
test
push
dec
les
and
add
jno
and
out
inc
push
mov
rcrl
das
icebp
add
ret
arpl
mov
ret
xchg
push
les
inc
je
add
and
mov
shll
sahf
imul
inc
jae
inc
dec
and
xchg
lds
xchg
lds
cmpsb
in
das
in
jle
jo
push
xor
mov
pop
pop
fiaddl
mov
jmp
mov
push
rcrl
lret
mov
cmp
xor
cmp
and
sub
xlat
in
sub
movsb
sub
stos
sub
mov
pusha
lcall
in
icebp
cmpsb
mov
jg
cltd
fstps
cmp
jbe
call
in
xlat
fnstsw
push
dec
push
mov
mov
seto
mov
xor
mov
cmp
xor
mov
xor
jno
add
and
xor
or
or
jg
test
xor
outsl
sub
adc
xor
les
sub
sub
arpl
mov
mov
or
stc
inc
cmp
daa
inc
mov
and
shlb
add
es
loop
stos
loope
popl
pop
aam
adc
pushw
sbb
test
stos
mov
sbb
cltd
lods
imul
mov
xor
sub
je
inc
push
outsb
pop
lcall
or
adc
or
sub
mov
std
negb
hlt
cwtl
out
mov
test
push
mov
cmp
xor
cmp
mov
xchg
xor
cmpsb
xchg
fdivs
shl
movsb
jecxz
xor
pop
cmpl
sub
mov
fsub
jno
dec
fdivrl
clc
pop
adc
mov
and
add
fnstenv
test
fsubs
leave
jnp
insb
xor
call
add
cwtl
aas
das
and
test
mov
or
mov
mov
out
xor
lods
xor
cmp
xor
mov
and
push
push
inc
mov
cltd
out
push
push
xchg
in
inc
imul
push
lods
mov
cmpsb
mov
cmp
lock
jo
nop
dec
push
ljmp
inc
push
clc
cmpsl
sub
adc
xor
cwtl
daa
jle
test
sub
cli
xchg
test
push
hlt
push
inc
jbe
xlat
int
call
add
in
jle
test
jmp
daa
inc
mov
and
fwait
jno
push
mov
std
or
sub
dec
pslld
repnz
clc
sub
mov
sub
mov
adc
cmp
push
outsb
pop
sbb
cltd
shll
sarb
imul
push
mov
into
sarl
mov
pop
nop
shll
pop
fsubrs
in
pop
and
xor
mov
and
popa
stos
mov
data16
cltd
mov
roll
pop
in
cs
in
add
mov
bound
movsl
mov
and
mov
cmp
hlt
repz
je
dec
outsl
movsl
cmp
enter
jns
add
das
cmpsb
in
das
aaa
out
and
and
dec
ficompl
xor
dec
add
mov
xchg
fsub
jno
adc
jb
stos
xor
mov
repnz
mov
pop
lds
cld
pop
sbb
add
mov
ds
outsb
lcall
jae
hlt
dec
cmpsb
cmp
dec
push
xchg
loope
jo
addr16
ret
ljmp
call
enter
xchg
xor
sarb
stos
dec
stc
cli
arpl
inc
out
jo
xchg
push
push
mov
push
popa
pusha
adc
push
mov
mov
sub
push
loop
into
sub
mov
les
xor
fs
sysexit
das
lret
cmp
repnz
pop
fs
adc
adc
loop
js
inc
push
push
adc
inc
jbe
xlat
pop
adc
cmp
aas
add
or
jle
adc
call
stos
mov
out
sub
pop
addb
mov
ret
dec
mov
stos
loopne
in
pusha
push
add
mov
hlt
mov
shll
ret
test
push
mov
out
xor
les
out
test
lea
mov
aam
inc
daa
fdivs
in
es
nop
cmp
push
mov
xchg
mov
mov
inc
daa
fldz
sbb
adc
popa
sbb
pushf
or
popl
out
enter
sub
adc
repnz
int3
push
call
test
sub
adc
adc
out
and
inc
and
push
xor
sbb
data16
fbld
sahf
decl
repz
pop
lods
rolb
mov
add
xlat
fs
loope
fdiv
mov
jbe
jb
jae
mov
cmp
in
rcrl
and
xchg
add
mov
bt
add
jg
mov
xor
mov
adc
dec
push
popa
pusha
adc
pop
xchg
jp
mov
adc
popa
mov
fs
lcall
in
sbb
in
cld
cwtl
rol
push
cwtl
ror
pop
pushf
sub
icebp
les
pop
sub
inc
jno
jno
or
add
add
push
shll
pop
insb
sub
lock
inc
push
outsb
pop
push
fdivr
cmp
pop
lock
andb
cmp
inc
sbb
xchg
scas
insb
movsb
mov
add
es
ss
je
fcoms
dec
mov
push
ficoms
cmp
ds
xor
cmpb
lahf
add
push
mov
shrb
adcl
adc
cmp
adc
xchg
sub
test
sbb
push
les
lds
inc
stos
lcall
mov
out
pop
mov
mov
mov
in
jge
loopne
daa
push
pop
sahf
jnp
add
xlat
roll
test
inc
arpl
leave
jnp
hlt
xor
call
scas
pop
test
add
in
xchg
mov
push
call
pop
stc
add
push
int
pusha
add
pop
imul
pushaw
iret
mov
shl
push
stos
push
iret
out
adcb
inc
add
pop
jo
addr16
dec
loope
pop
or
outsb
fldl
sub
mov
les
es
addr16
add
or
loop
stos
test
in
in
inc
add
fwait
sbb
dec
jl
lahf
pop
mov
neg
ja
xchg
scas
insb
movsb
mov
add
es
xchg
or
movsl
rorl
push
add
lcall
in
sbbb
or
ret
adcl
mov
fdivr
push
mov
xchg
sbb
sahf
add
adc
pop
mov
sub
imul
mov
and
fwait
jno
jb
push
jge
aaa
into
outsb
mov
pop
in
ds
lcall
sub
jmp
or
das
popf
mov
push
jl
dec
push
cld
dec
stos
sub
ret
bound
adc
mov
add
std
sti
and
mov
aas
cli
lcall
dec
ret
addb
loopne
mov
fldenv
mov
sub
fildll
nop
add
push
or
or
hlt
xchg
dec
push
fdivrs
lea
clc
push
dec
pop
mov
sbb
or
push
pop
jo
enter
mov
repnz
pop
stos
dec
adc
stos
push
push
adc
and
call
ja
and
mov
cltd
push
dec
xor
js
inc
pop
push
hlt
jne
cmpsb
lcall
adc
aas
outsb
ds
ret
xor
jo
sbb
repnz
pop
pop
rolb
mov
orl
les
repnz
jle
and
mov
call
add
xlat
movsb
add
sbb
or
jmp
mov
push
in
and
push
fidivrl
mov
call
cltd
mov
dec
pushf
aam
and
push
cltd
add
testb
mov
xchg
mov
sti
pop
dec
add
dec
es
fwait
sbbb
sbb
add
cs
lods
add
sub
inc
lahf
sub
subl
pop
pushf
loope
jbe
sar
pop
pushf
cs
jno
stc
ds
cmpsl
popa
jmp
jno
xor
xor
mov
or
shrb
mov
daa
jl
adc
add
lahf
aam
mov
sarl
into
xor
stc
and
and
lahf
shll
push
xchg
sbb
shrb
mov
jo
jmp
shll
push
mov
sbb
cmp
fs
mov
enter
adc
mov
cmp
stc
cmp
mov
repnz
dec
fsubs
inc
sub
loop
fdivrs
push
adc
mov
dec
roll
stos
aas
add
aas
xchg
push
test
loop
shll
mov
jno
pusha
cmc
dec
mov
sahf
sbb
adc
sbb
js
fidivrl
dec
mov
sbb
jge
add
cli
cmp
subb
movsb
push
adc
popa
or
push
pushl
cmpsl
test
mov
mov
push
add
in
pop
mov
mov
mov
out
lds
cmp
movsl
add
pop
cli
lahf
cmp
jle
dec
mov
test
fsubs
cmpsb
jae
pop
sbb
add
sbbb
mov
lcall
stos
jno
or
add
mov
pop
add
cld
pop
sbb
loopne
adc
mov
clc
int3
xor
test
mov
cmpsl
mov
cmpb
scas
cltd
xor
push
mov
cmp
movsb
stc
sub
das
push
std
gs
dec
adc
xor
cwtl
xchg
cli
jb
adc
loope
bound
or
in
dec
inc
push
mov
mov
leave
inc
mov
nop
daa
adc
push
xlat
in
pop
in
sub
pop
cmpsb
push
add
push
lcall
lods
xchg
and
push
in
cmpb
adc
prefetch
or
xchg
inc
cwtl
mov
add
dec
mov
test
shll
cltd
cld
test
dec
mov
pushf
sti
push
and
pop
xchg
mov
inc
fistpll
ret
inc
les
enter
popa
mov
lods
pop
xchg
sbb
jl
sbb
adc
xor
pop
adc
or
dec
adc
xor
call
adc
int3
nop
cmp
loop
in
dec
push
push
test
inc
jbe
xlat
lods
pop
mov
add
mov
jle
inc
mov
sbb
push
inc
aad
and
fistl
sub
cs
popa
adc
rcrl
les
sbb
jo
in
pop
js
adc
dec
sbb
ljmp
ljmp
sti
jecxz
cmp
insb
pmaxsw
xor
scas
cmp
jle
jnp
fnsave
mov
popa
stc
pop
loopne
rcr
pop
out
xlat
mov
andl
mov
test
jp
sti
inc
andb
adc
sub
fisttpll
in
add
daa
push
or
sub
addr16
dec
jecxz
mov
sbb
test
lret
push
cmc
rorb
lahf
vmulps
fildll
nop
add
push
push
dec
cmp
sbb
xor
shlb
mov
rcrb
mov
jecxz
lahf
pop
mov
call
xchg
jmp
adc
sub
icebp
ds
fimull
jbe
xlat
test
dec
lcall
mov
inc
inc
or
xchg
xor
mov
hlt
movsb
push
test
out
and
adc
push
cmc
out
dec
fs
xchg
mov
stos
sbb
pop
pop
cltd
jno
mov
fs
or
dec
adc
dec
add
sbb
or
sub
aam
dec
pop
sub
sub
and
xor
pushf
ljmp
pop
pop
cmp
jg
test
xor
jmp
inc
fmull
ljmp
pushf
aaa
into
outsb
mov
cmp
cmpsl
pushw
cmp
push
std
popl
xchg
mov
ret
sub
inc
sar
push
pop
jae
xchg
je
sahf
enter
cli
mov
je
push
dec
xchg
sti
aas
dec
adc
enter
mov
cld
jbe
lods
adc
test
jb
xchg
adc
inc
ljmp
sar
cmp
cmpsl
mov
sbb
xor
dec
mov
pop
mov
adc
scas
bound
cmp
movsl
sub
js
push
adc
ficoml
int3
clc
push
xlat
in
push
add
pop
add
loopne
cld
jp
cmp
sbb
push
mov
and
call
xchg
xchg
mov
sub
scas
jp
mov
push
gs
dec
aad
push
cmpsb
or
jmp
push
cmp
and
movb
ljmp
xchg
loopne
push
sub
mov
sbb
mov
dec
pop
pop
in
in
fadds
cmp
lods
jg
dec
adc
les
sub
and
test
sub
pop
mov
ljmp
pop
pop
lock
jg
rcll
gs
xchg
mov
jle
aas
ret
inc
les
into
outsl
movsb
push
shll
pop
cmpl
pop
push
jle
xor
or
dec
movsb
jae
cwtl
xchg
in
test
pusha
or
dec
adc
sbb
pop
aas
xlat
inc
clc
icebp
popa
cld
or
xchg
idivl
popa
cli
mov
je
push
sub
fcomps
cli
dec
sub
sub
mov
adc
jecxz
sub
cmp
add
fcmove
into
sub
das
push
stc
push
mov
or
xor
fistpl
js
mov
push
test
mov
in
jl
shl
fildll
aaa
mov
sbb
inc
out
sbb
js
cwtl
or
add
mov
xor
movsb
dec
dec
xchg
xlat
inc
adc
rorb
cmp
repnz
and
pop
les
adc
icebp
insl
mov
add
lret
movsl
fs
push
mov
shll
inc
rolb
pop
in
mov
ret
push
out
xor
lret
adc
jecxz
dec
pop
aad
add
mov
dec
dec
shll
sub
in
pop
cmpsl
mov
int
aaa
ljmp
mov
jg
dec
loop
in
in
rorl
push
cmc
in
imul
das
add
pop
pop
pop
adc
aas
adc
ljmp
jmp
add
dec
iret
popf
pop
pop
loopne
jg
rcrb
inc
xorb
and
adc
and
icebp
cli
sub
rcrb
ja
cmp
or
stos
push
imul
mov
push
add
popa
xor
stos
ds
lret
jae
sub
insl
lcall
in
faddl
inc
inc
fs
dec
jmp
dec
adc
sti
pusha
cs
bound
dec
cli
adc
xchg
lahf
ret
movsb
xor
test
fistl
jne
in
aas
call
cmpsb
hlt
cmp
in
inc
addr16
enter
lcall
aad
inc
repz
test
sbb
adc
push
push
jge
jns
sub
dec
or
or
rcll
cvtps2pd
and
repnz
mov
call
cmc
sub
cmp
xchg
iret
fadds
jmp
xlat
jmp
dec
push
rcrb
pusha
fbld
mov
shrl
adc
inc
sti
cmpsl
sub
sbb
aas
stos
test
pop
add
sub
popa
fidivl
inc
inc
jecxz
sub
sbb
aaa
xor
popa
inc
into
push
loopne
sub
shrb
or
dec
aas
mov
add
cmp
hlt
adc
xchg
pop
movsl
int
stc
js
sub
mov
outsl
hlt
push
mov
lock
dec
add
jbe
sbb
fildll
sub
sbb
mov
fs
push
out
xchg
push
mov
lock
mov
pop
dec
jnp
cmp
ret
xor
dec
rcll
push
or
and
inc
test
fcomi
mov
adc
sub
mull
adc
call
ljmp
inc
int
push
add
popf
cmc
adc
repz
test
pop
pop
loop
sub
loopne
sbb
imul
xchg
xor
pusha
roll
mov
push
jo
in
cmp
add
adcl
js
ret
test
aad
inc
cltd
push
scas
mov
sbb
ficoml
lret
mov
or
dec
icebp
testb
cmp
xchg
push
mov
clc
push
mov
cwtl
das
dec
xchg
xchg
push
loopne
imul
mov
inc
fidivrs
adc
sub
ja
mov
pop
adc
and
stc
repz
mov
cmp
lret
push
mov
push
addr16
or
bound
mov
fsub
aas
in
pop
mov
pop
push
mov
xorb
inc
lahf
fimuls
pop
cmpsl
cs
jnp
out
mov
xchg
mov
aam
inc
push
cmp
mov
mov
cmpsl
mov
inc
mov
xchg
push
jl
xchg
je
and
xchg
dec
dec
xchg
xchg
add
push
test
pop
aas
dec
adc
aas
dec
adc
mov
hlt
test
mov
mov
push
dec
mov
jl
cmp
and
arpl
popf
pop
arpl
popf
je
movsb
lcall
pop
repnz
cld
repz
add
mov
dec
in
sub
outsb
adc
aas
push
cmp
dec
mov
mov
adc
stos
mov
push
dec
mov
jl
mov
in
push
nop
cmpsl
pushw
xchg
cmpsl
sbb
xchg
in
adc
in
add
mov
test
push
in
leave
xor
call
cmp
xor
and
xor
and
xchg
ret
mov
mov
inc
pop
rcr
pop
mov
pop
ss
jo
fiadds
into
lretw
jb
xor
cmp
push
outsb
loope
out
stos
inc
stos
xchg
out
cmc
ja
push
inc
mov
ret
or
xchg
rcrl
nop
in
jne
loopne
push
stc
inc
scas
jp
jmp
outsl
cli
xchg
ret
movhlps
ds
popl
jb
add
add
pop
dec
cltd
xor
cltd
xor
jnp
cmp
xchg
push
xchg
jb
push
out
shrb
xor
pop
and
popf
jge
inc
out
xor
sbb
push
inc
mov
or
add
insl
test
push
mov
mov
or
sbb
cltd
pop
call
int
mov
add
fcmove
and
push
out
sbb
stos
adc
fmull
movsb
das
adc
pop
dec
stc
lods
test
sub
movsl
xchg
outsb
xlat
rclb
data16
mov
mov
mov
pusha
fwait
mov
xor
xchg
es
push
test
or
dec
push
andb
rcrl
ret
xor
es
push
fs
inc
jns
loope
in
adc
lret
enter
inc
repz
xchg
dec
sahf
cwtl
repnz
in
fiaddl
int3
cmp
hlt
test
movsb
xor
dec
sub
sbb
dec
jo
xchg
orb
jl
shrl
fstp
push
pop
sarl
cmp
pushf
ds
pushf
outsb
and
xor
and
ret
in
inc
dec
bound
xchg
rcrb
arpl
xchg
fwait
inc
stos
out
mov
popa
sbb
sub
pop
loop
push
jbe
aam
jmp
mov
jnp
int
and
cli
fmull
aam
call
push
cltd
sahf
test
cli
fwait
jnp
les
ret
movsb
xlat
mov
push
xchg
add
add
std
cwtl
inc
mov
hlt
ja
or
adc
sub
add
cmp
mov
and
sbb
aas
in
mov
xor
gs
inc
jl
mov
or
filds
mov
cmpsb
iret
hlt
int3
jb
fisttps
int
fdivrs
insl
stc
pop
sbb
ficoms
lret
das
cltd
xor
inc
add
aaa
pop
jg
push
push
test
xchg
movsl
std
std
aas
xor
pop
mov
popf
pop
xchg
push
clc
outsl
dec
popa
push
sahf
in
rolb
jae
cmp
mov
mov
mov
add
xlat
sub
aad
inc
sub
push
dec
cmpsl
xchg
dec
repnz
iret
popa
shl
fbstp
sbb
sub
cmp
outsl
push
addr16
ss
pop
out
pop
and
pop
mov
inc
push
int
enter
push
xor
push
test
add
xchg
mov
int
stos
aam
xlat
out
jecxz
jg
mov
lods
fdivrs
adc
jle
cld
fadd
adc
ds
mov
push
pushf
push
dec
and
shrl
rcrl
addb
test
mov
in
icebp
sar
cwtl
test
dec
mov
add
popf
push
roll
adc
int3
sub
xorb
addr16
das
insl
pop
call
hlt
sbb
pop
xchg
mov
addr16
in
int3
cmpsl
mov
jle
loopne
sbb
movsl
incl
sub
movlps
or
fs
adc
das
sbb
cmp
cli
xchg
dec
mov
into
mov
data16
lret
push
lds
cmp
cmp
xor
into
push
das
fldpi
fists
fucom
sub
and
repz
cmp
xor
popa
stos
mov
jl
push
js
cmp
pop
ds
cli
mov
iret
ds
sub
xor
popf
cmpsb
out
pop
fs
pushf
jbe
push
push
jbe
push
inc
jbe
xlat
xchg
push
push
inc
fsub
cmp
xor
dec
add
scas
in
les
sysenter
sbb
jmp
test
dec
sbb
mov
stos
frstor
subl
lret
mov
xchg
decb
orb
mov
pop
lret
mov
divb
pop
mov
pop
sbb
fdivrs
pop
sbb
jb
xor
les
insb
dec
pushf
daa
out
loope
test
push
int3
jae
cmpsb
xlat
stos
mov
push
pusha
or
add
sub
add
mov
pop
and
cmp
mov
jge
xchg
jmp
cmpsl
mov
lcall
and
iret
or
ret
mov
push
sub
stos
arpl
dec
pusha
cmpsl
inc
push
dec
daa
dec
lock
into
pop
icebp
fisubs
mov
scas
not
xchg
dec
es
subl
mov
aaa
test
xchg
call
inc
fistl
movsb
aas
mov
sahf
and
stos
aad
pop
xlat
shlb
js
outsl
in
xor
rorl
inc
lfs
andl
popf
push
test
movsb
insb
jo
lods
int3
jbe
adc
sbb
repz
mov
test
lods
mov
test
lods
fisttpl
jns
add
mov
jl
or
add
pusha
mov
ljmp
mov
ficompl
inc
xchg
daa
push
push
je
or
insb
sbbb
rorl
inc
jno
pusha
scas
shll
in
popa
add
insb
dec
jp
cltd
lea
les
dec
icebp
xorb
cwtl
sbb
mov
inc
adc
cmp
loop
mov
pusha
add
addl
test
adcl
mov
cmp
cmp
lods
push
sub
pop
jb
mov
ds
jecxz
popf
ds
negb
std
mov
popf
dec
or
sub
pop
in
fisubrl
es
daa
data16
sbb
push
out
add
or
add
jmp
fsub
and
dec
pop
outsl
sub
push
mov
pop
stc
xchg
pmaxub
mov
xchg
or
subb
sbb
dec
or
dec
bound
sub
mov
sbb
xchg
ljmp
icebp
es
mov
pop
jo
movsl
shl
pop
xchg
xor
adc
jb
sbb
jae
sub
inc
mov
or
inc
pop
xchg
sar
negl
pushf
sub
inc
jbe
xlat
sahf
pop
lock
sub
mov
lock
pop
adc
or
int3
cmp
inc
jo
add
pop
shll
iret
xor
jb
js
aam
cmp
sbb
push
sbb
mov
pop
jo
cld
pop
xchg
movsl
adc
cwtl
js
lea
pop
jge
ret
fidivrl
pusha
nop
dec
js
lret
dec
hlt
addr16
xor
movsb
cmp
add
xchg
mov
insb
mov
aaa
int3
arpl
imul
pushf
cmp
je
dec
jbe
jle
lods
movsb
adc
push
in
ss
and
dec
sarl
movsb
hlt
add
sbb
pop
scas
iret
mov
inc
push
mov
in
adc
add
xor
ret
incb
pop
pusha
addr16
int3
ljmp
movsl
roll
cmp
adc
ljmp
fwait
or
push
fcomps
inc
cmp
ss
lahf
fnstsw
cli
inc
sarb
ljmp
ret
inc
xor
xor
repz
mov
imul
mov
dec
and
and
pop
mov
cmp
aam
mov
lods
faddl
push
xorb
mov
fcoms
sub
cwtl
call
popl
test
and
mov
aas
push
jmp
inc
ss
and
pop
adc
repnz
test
or
mov
insb
pop
push
jo
fstpt
clts
lock
lcall
dec
sarb
or
dec
mov
adc
loop
imul
mov
orb
xchg
repz
mov
push
mov
sub
mov
pop
mov
out
sub
lcall
in
xchg
fidivl
lret
or
and
daa
icebp
inc
sbb
aaa
jg
ror
outsl
push
stos
sarb
sahf
pop
or
jnp
add
rolb
mov
ja
imul
sbb
lret
pop
frstor
inc
ja
test
cmp
pop
les
shll
les
push
lea
fstpl
cli
rolb
in
cmp
pop
scas
xchg
cmp
mov
les
in
adc
fsubrp
or
mov
repnz
movsl
cmp
mov
stos
adc
out
out
xor
jns
bound
adc
and
mov
imul
imul
enter
inc
xchg
in
add
mov
or
xlat
stos
sbb
shrb
cmp
repz
nop
stos
ret
cmp
dec
es
sub
xor
fistpl
test
mov
mov
push
pop
xchg
movb
scas
outsb
mov
jae
dec
xchg
pop
shrl
rclb
xchg
lds
sarl
jl
es
and
xlat
jb
sbb
ficoml
jns
lret
and
mov
sub
add
shll
sub
lcall
mov
jo
jo
outsl
xor
aam
imul
shrb
fwait
test
dec
je
sub
ret
out
xor
leave
or
jmp
aam
dec
leave
mov
imul
sub
clc
xchg
movb
lcall
aam
mov
dec
out
rolb
push
jo
or
cmpsl
shlb
fiadds
cmp
xlat
mov
cmp
loop
pop
int
es
movsb
dec
jecxz
sar
push
xchg
jmp
test
ret
jnp
lcall
pusha
lcall
sub
cltd
repnz
inc
daa
xchg
jo
sarl
jle
inc
fdivrs
out
xor
adc
cmp
mov
fs
daa
xor
sub
and
inc
sub
mov
fadds
lds
mov
cli
pop
rolb
fwait
sbbb
sbb
mov
push
push
mov
pop
nop
rcrl
jmp
and
push
push
push
push
jp
pushf
and
push
mov
add
cmp
mov
call
fmul
xor
xor
mov
push
xor
pop
in
jo
push
jecxz
fsub
jecxz
mov
inc
pushf
mov
cmp
pop
inc
or
das
in
add
lock
shlb
lds
mov
call
ljmp
and
mov
or
mov
xchg
push
cmp
scas
cmp
imul
sub
or
movsl
cltd
cltd
jp
mov
insb
xchg
mov
cmp
bound
mov
jecxz
or
inc
mov
aaa
adc
add
inc
movsb
inc
testb
cmp
sarl
movsl
dec
loopne
loopne
xchg
sub
xor
push
mov
add
cmp
sti
arpl
mov
xor
lds
dec
mov
divl
loopne
cld
mov
test
inc
jb
adc
pop
push
jo
jne
in
fcomps
pushf
mov
add
and
push
sbb
pop
bound
loop
pop
xor
das
push
clc
push
sbb
sbb
sbb
gs
jo
aas
push
mov
dec
xchg
cmpsl
fucom
lcall
dec
sub
push
mov
jecxz
lods
cmp
cmp
inc
rolb
jae
mov
inc
lcall
push
mov
add
frstor
push
lret
push
in
fdivs
mov
push
ret
dec
or
or
mov
mov
fnstsw
sbb
bound
lret
sti
xchg
and
mov
sbb
popf
ja
and
pop
push
push
xchg
sub
mov
aaa
aam
pop
jl
xchg
rorl
cmp
cwtl
data16
sar
imul
pusha
adc
mov
sti
cli
repz
xchg
mov
or
mov
dec
loop
int
fstpt
push
fwait
movsl
mov
mov
leave
repnz
cmp
test
cmpsl
xor
jmp
imul
jp
test
inc
xchg
sub
sbb
inc
push
repz
pop
imul
mov
mov
loope
push
inc
pcmpgtb
sub
mov
mov
lea
dec
jp
push
pop
pop
and
xchg
jbe
mov
sub
mov
or
pop
inc
movsb
pop
loopne
js
in
mov
data16
jp
mov
mov
mov
inc
int3
mov
popf
inc
sub
dec
scas
adc
xor
mov
lods
fmul
xorl
sahf
push
adc
adc
sub
lret
pop
andl
sub
sahf
mov
or
mov
ljmp
sbb
rclb
pop
jb
or
mov
jmp
mov
cmp
xchg
scas
mov
dec
mov
testl
dec
cmp
sub
cltd
imul
fsubl
std
mov
jl
enter
cmp
pop
enter
out
sbb
in
cltd
pusha
mov
vmread
in
or
or
inc
test
cld
insb
or
mov
loop
popf
mov
data16
dec
jp
es
sahf
mov
inc
inc
adc
cmp
sub
mov
xor
pop
mov
pop
lret
jbe
sub
pop
cmp
in
lahf
push
add
and
sbb
mov
push
mov
bsr
insb
pusha
adcl
xor
sub
mov
pushf
out
pushf
testb
sub
push
sbb
inc
cmpsb
sub
inc
movsl
shrb
mov
stos
mov
mov
sarb
dec
daa
stos
rolb
xchg
jb
xor
adc
mov
xor
sub
mov
mov
data16
sub
sbb
cltd
adc
xchg
xchg
or
shrb
cmp
pop
jl
lret
imul
call
fdivl
shll
fwait
cwtl
adc
jp
cltd
adc
mov
cmp
inc
jo
pushf
sahf
int3
pusha
aas
data16
insb
mov
add
mov
je
pushf
cwtl
outsl
movsb
pop
cld
cmp
ret
movsl
mov
hlt
inc
dec
jbe
jb
lock
push
xor
call
mov
pushf
mov
xlat
pop
pop
call
add
push
sub
addr16
data16
lcall
cltd
adc
sub
int3
mov
insb
inc
repnz
or
sub
adc
cld
in
fucomi
jns
push
sub
test
mov
daa
and
inc
dec
push
dec
xor
add
lahf
xchg
and
xor
or
popf
clc
std
int
loop
jg
sbb
inc
cmp
cld
leave
arpl
fwait
lods
or
pop
nop
cmp
out
pop
imul
lock
movsl
int3
mov
mov
push
jp
xor
mov
xor
adc
inc
js
pop
xor
dec
xchg
test
push
rolb
mov
iret
mov
jge
cmp
jg
pop
loope
xchg
ret
orl
inc
add
in
fnstsw
dec
sub
fcoml
je
outsl
pop
xor
test
push
xor
fstps
mov
sbb
ljmp
cmc
and
fistl
sub
cs
fisubrs
jecxz
push
pop
inc
push
pusha
and
cmpl
mov
pop
sub
jno
pop
fwait
aad
add
cmpsb
ficompl
les
cmp
push
into
pop
push
pop
jo
es
ficoml
pop
aam
sub
adc
dec
imul
inc
pusha
sbb
cld
in
pop
pop
int
repnz
pop
or
mov
and
inc
out
pop
incl
ret
rcr
bnd
jle
fmull
shrl
out
sub
pop
subb
mov
ret
out
out
dec
aaa
stos
push
inc
xchg
or
repnz
enter
xchg
sbbl
xchg
jecxz
add
and
inc
or
test
xor
xchg
inc
sbb
gs
or
adc
insl
and
fwait
inc
movsb
mov
sahf
icebp
les
jo
or
jbe
jno
cwtl
cmpsb
loopne
pop
fwait
mov
addr16
out
and
lods
pop
xchg
pop
push
arpl
cld
mov
inc
loop
fmull
dec
lods
mov
loope
inc
mov
mov
adc
push
imul
jle
and
fsubl
mov
cmpsb
push
fs
push
inc
shlb
mov
sbb
pushf
jo
js
push
cs
ljmp
iret
sub
in
or
adc
jp
popf
inc
stos
pop
mov
fsubr
sbb
dec
stos
les
jbe
jl
inc
outsb
out
xor
ss
inc
movsl
xchg
pusha
mov
jl
sti
push
jb
dec
pusha
push
xor
mov
dec
shll
pop
aaa
xor
add
cmc
xchg
imul
cltd
sub
addr16
dec
jecxz
mov
dec
mov
xchg
sub
inc
call
fimull
adc
sbb
mov
nop
and
cmc
out
mov
daa
xchg
pop
aad
add
sbb
out
cmpsl
outsb
subl
jne
dec
xchg
push
and
mov
sub
orl
cmc
add
cmpsb
mov
push
aad
into
scas
add
std
push
outsb
push
pop
xchg
popf
cmpsb
stc
stc
outsb
mov
shl
xor
mov
cltd
xchg
xchg
mov
aad
cmp
int
jmp
inc
pop
pop
rcrb
pop
dec
fdivr
push
add
add
mov
out
mov
dec
pop
leave
es
neg
adc
ja
and
push
fimuls
ret
out
aam
mov
rorl
das
pop
icebp
lds
push
dec
or
push
popl
sub
lret
cld
cmpb
mov
jle
aas
insb
jbe
je
adc
lahf
bound
xchg
icebp
fisubl
dec
pushf
push
jge
std
sub
mov
mov
inc
cli
sbb
sti
adcb
jae
insl
xchg
hlt
les
cmp
adc
lret
fwait
test
inc
loope
pop
or
jle
cmp
rolb
nop
gs
mov
jbe
shll
setae
fwait
aas
jae
xor
pop
notl
imul
imul
inc
dec
inc
aam
les
roll
mov
fstpt
leave
stos
mov
roll
mov
jno
inc
pop
lds
icebp
out
push
xor
sub
and
ljmp
mov
in
xchg
push
rcll
xchg
xchg
out
jecxz
mov
xor
or
clc
addr16
out
cmp
mov
lcall
mov
pop
scas
mov
into
xchg
jg
dec
outsw
dec
mov
push
adc
cmp
leave
xor
mov
or
or
push
pop
nop
sbb
stc
loop
or
mov
or
dec
dec
fs
xchg
loopne
les
aaa
push
adc
mov
and
and
xchg
sbb
or
jmp
loope
cltd
mov
imul
in
add
out
aas
xchg
int3
repz
sahf
in
in
or
fwait
jge
jb
or
pop
lret
jns
jns
push
or
xor
pop
or
sar
cmp
xchg
xor
pop
pop
lret
lahf
xor
cwtl
push
hlt
jge
push
aad
in
lea
in
pop
or
je
xor
ret
push
cmp
icebp
dec
lock
push
test
gs
insb
xor
xchg
pop
xchg
fcoms
lock
pop
ds
ja
jno
inc
push
push
in
int3
and
push
fiaddl
fdiv
cmp
mov
imul
lods
xchg
xor
mov
jl
rcll
jno
arpl
push
mov
cs
pop
loope
xlat
pop
cmp
icebp
enter
cmp
es
lock
je
gs
cmp
and
outsb
mov
in
in
push
mov
xchg
sub
mov
sbbb
call
xchg
mov
jle
cmpsb
mov
jp
inc
lock
ss
gs
cmp
xchg
adc
xchg
leave
pop
movsl
cld
fdivl
mov
addl
xor
push
in
nop
pop
lret
mov
movsb
leave
pop
rorb
adc
shrl
push
push
adc
push
inc
jbe
or
int
lods
sti
mov
jle
call
jmp
dec
xchg
adc
sub
cli
mov
ljmp
shl
inc
push
jns
xor
cwtl
or
out
clc
fwait
ss
xchg
sub
mov
repnz
dec
mov
ret
shrl
fildll
sbb
inc
pop
adc
mov
dec
mov
dec
cmc
dec
ficomps
subl
push
xor
adc
add
js
adc
ljmp
push
jns
in
cmp
sahf
pop
out
shlb
push
sti
xor
dec
je
mov
roll
push
push
repnz
add
and
out
and
cwtl
add
ret
dec
lock
out
lods
cwtl
mov
inc
dec
dec
sbb
shlb
hlt
repz
sbb
push
pop
xchg
mov
aad
mov
xchg
orl
push
icebp
mov
pop
pop
sbbb
jb
mov
mov
inc
cwtl
clc
insb
xlat
mov
rcrb
sbb
ds
push
out
mov
mov
cmpb
pop
xchg
mov
and
sub
adc
mov
inc
xor
xchg
cmc
dec
int
pushf
testl
mov
and
lods
add
test
movaps
mov
mov
add
add
add
adc
pop
out
insb
mov
xchg
xorl
subb
add
loope
loop
or
jecxz
mov
xchg
sbb
dec
es
xchg
insl
das
sbb
leave
xchg
mov
push
mov
push
sbb
out
andb
insb
push
cltd
pop
scas
jno
in
test
test
jp
jae
mov
jmp
jp
stc
rclb
xor
push
adc
sarb
jb
stos
into
cld
mov
xorb
divl
je
lods
add
mulps
inc
adc
lcall
cmc
xchg
lods
dec
sbb
cld
xor
jb
repnz
mov
pop
cli
xchg
ffree
mov
xor
mov
addl
mov
sti
fwait
test
sub
dec
push
insb
aas
fsubp
mov
cmpsl
das
push
outsl
movsl
cli
movsl
arpl
push
cwtl
add
ficomps
push
mov
inc
lock
ficomps
mov
mov
movsb
push
pushf
es
gs
push
lret
gs
pop
pop
outsl
and
sub
jo
xchg
lods
xor
sub
out
movl
shll
fwait
xorb
pop
push
in
or
popf
jbe
mov
enter
dec
jne
ficomps
jle
mov
lock
ficomps
mov
mov
movsb
push
sahf
cmp
stos
rorb
int3
ret
orl
fnsave
mov
dec
dec
js
adc
pop
idivb
das
in
stc
jp
cltd
adc
xchg
xchg
or
sub
adc
pushf
mov
cld
pop
outsb
data16
push
hlt
cwtl
jge
push
jo
lock
add
or
sbb
decl
aaa
cmpsl
incb
test
ret
push
mov
push
in
in
ds
sub
mov
cmp
sbb
cs
jae
jb
mov
shll
repnz
mov
aad
out
and
pusha
jns
mov
test
xor
lea
imul
lock
pop
xor
push
cmp
push
in
inc
loopne
cmpsl
push
xchg
ret
mov
aas
or
cmp
rcrl
or
xchg
sbb
out
xchg
sbb
lcall
xchg
dec
repnz
pushf
xchg
shl
dec
or
jl
or
jecxz
mov
jns
mov
dec
pop
add
jg
inc
es
pusha
or
rcrb
push
imul
popa
push
adc
mov
pop
enter
ds
cltd
xchg
mov
push
jecxz
dec
andb
mov
mov
mov
daa
popf
pop
popa
cli
mov
xchg
xchg
lahf
out
xor
pop
test
push
pop
aaa
mov
in
cltd
test
stos
push
xchg
adcl
roll
loope
ljmp
aad
jo
cmp
pop
stos
movsb
ds
lcall
fucomi
popa
cmp
jae
xor
xchg
dec
ret
insb
jno
mov
mov
sub
mov
xor
inc
xchg
or
cmpsb
cmp
mov
pop
xchg
mov
jnp
lods
incl
rorl
ja
dec
stos
jl
jns
sbb
cmp
mov
sti
test
in
mov
lret
jmp
jg
xchg
das
or
test
cmp
xor
sbb
pop
outsb
mov
xor
ss
ljmp
mov
clc
pop
push
sbb
imul
and
inc
inc
orb
sbb
icebp
dec
leave
jb
insb
inc
sbb
fsts
mov
gs
loop
enter
repnz
shlb
add
jae
push
aad
hlt
push
inc
adc
inc
addb
ret
icebp
sarl
ds
jne
testb
mov
icebp
aas
xor
int3
push
lock
push
or
lods
sbb
icebp
jp
mov
lock
cmpsb
dec
push
xchg
cld
addl
ret
push
jno
cmp
push
jnp
sbb
adc
inc
pop
mov
leave
inc
or
aam
jno
dec
xor
es
test
lahf
push
inc
adc
loop
je
cmpsl
je
cmpsl
or
lock
leave
ja
push
mov
in
int3
in
aad
loope
mov
ret
mov
lock
fxch
push
or
mov
push
pop
cli
add
and
mov
pushf
mov
add
test
test
incb
fstl
fcmovnu
scas
xchg
cmpsl
lret
in
xor
cltd
iret
ss
sub
dec
cmpsb
push
jno
addr16
jecxz
sbb
and
out
push
outsb
mov
push
mov
inc
gs
adc
xchg
and
fistpll
fwait
mov
or
mov
add
xchg
jl
aaa
ja
pop
out
fs
int
rcrb
push
xchg
cli
adcb
pop
leave
cmpl
pop
inc
movsb
mov
sbb
cmc
jb
xlat
dec
mov
out
sahf
in
add
mov
out
xor
mov
jno
xchg
mov
inc
sarb
add
dec
or
js
xor
cmpsl
mov
rorb
lea
movsl
jmp
and
outsb
int3
popl
fildl
je
mov
add
lods
push
mov
cwtl
outsb
xchg
xchg
shrb
jno
inc
xchg
and
nop
loop
mov
and
cmp
stc
stos
cmp
xor
clc
pop
push
pushf
hlt
add
add
cmp
nop
sahf
subb
cmp
dec
dec
sahf
test
and
cmp
dec
mov
pop
push
jle
aam
outsb
xchg
dec
out
es
imul
pushf
and
scas
xchg
fistps
cmp
int
test
and
cmpps
mov
scas
mov
pusha
inc
dec
in
ja
jne
jnp
jne
js
jne
jns
jne
jle
jne
jg
jne
jl
jno
outsl
sbbl
or
mov
popf
or
test
or
lods
popf
or
mov
or
mov
or
mov
push
andl
popf
inc
mov
sar
pop
xchg
mov
les
jmp
mov
jge
dec
mov
cmp
stos
cld
mov
xorl
test
xchg
pop
pop
xor
or
jne
xor
push
icebp
dec
fcmovnbe
sub
push
lret
jmp
mov
sbb
pop
kmovw
rorb
xlat
sub
xchg
or
pop
jno
mov
sub
loop
cld
adc
adc
inc
ret
push
dec
push
lds
shrb
aam
and
and
cltd
scas
shl
dec
ret
cmp
lock
inc
js
jbe,pn
cmp
pop
push
xor
mov
pop
in
mov
xchg
lcall
movsb
jecxz
hlt
enter
das
and
insb
cmc
je
or
rcrl
xchg
les
js
mov
call
aaa
inc
repz
aas
pop
mov
jle
aas
lret
insl
pop
cmpsb
sbb
nop
mov
and
mov
inc
inc
shlb
pop
sbb
xchg
negb
roll
js
jecxz
mov
mov
add
mov
add
mov
les
jo
xchg
scas
movsb
sub
mov
decl
int
in
daa
pop
sub
sub
testb
push
sub
add
fcompl
and
mov
lods
xchg
mov
mov
mov
mov
movsb
sub
jle
cmp
cmp
in
cld
push
mov
daa
ret
xchg
jge
and
mov
in
sub
fiadds
cld
repz
inc
jo
in
cli
and
repz
ja
imul
inc
nop
lret
in
fwait
pop
jno
pcmpeqd
ret
rcll
in
mov
xchg
pop
or
add
lcall
lds
fiaddl
push
and
lahf
stos
ret
in
and
icebp
lock
cmc
xchg
shlb
sub
sarb
sub
scas
xor
add
add
mov
pop
call
pusha
cmc
or
popf
mov
cmpsb
es
jbe
or
sub
push
les
mov
xor
jo
xor
mov
addr16
add
iret
pop
mov
xor
es
call
cwtl
fimull
push
cmp
lcall
mulb
aam
add
sbb
neg
dec
lods
mov
cmpsl
popf
and
call
pop
lahf
shr
sahf
lcall
xchg
mov
mov
mov
mov
xchg
cmp
xchg
and
mov
rclb
xor
xorb
outsb
in
jne
sbb
add
repnz
leave
fdivrl
roll
out
mov
addr16
test
dec
and
push
or
out
mov
int3
push
repnz
cmp
stos
mov
dec
push
out
test
into
xor
jb
and
out
pop
sbb
fisttps
xchg
fs
pop
andb
or
in
ja
mov
es
setp
pop
ss
pusha
or
orl
inc
push
xor
push
lret
xorb
add
xor
rclb
ja
xchg
inc
cmc
push
pop
adc
rorb
dec
shll
or
repnz
push
imul
xchg
add
les
push
call
notl
sub
fmull
and
mov
or
icebp
push
test
adc
and
push
repnz
cmp
mov
popa
hlt
ljmp
pop
nop
nop
xor
enter
loope
pushf
add
sbbl
lock
or
mov
sbb
push
adc
cmp
dec
pop
jle
cmpsb
insb
test
push
push
inc
jecxz
shrb
and
cli
bound
pop
call
mov
test
clc
sub
in
gs
mov
mov
mov
out
mov
test
and
ss
xchg
xor
inc
xorl
xchg
nop
sbb
xchg
cmpsl
sub
mov
int3
sub
jns
add
cs
push
in
mov
mov
push
and
pop
je
aam
cmc
sub
fimull
std
fmul
dec
xor
push
add
aaa
in
cli
out
mov
push
fdivl
adc
cmp
xchg
sbb
xchg
rclb
jae
dec
xchg
insb
jp
inc
mov
inc
fs
cmp
sub
mov
pop
xchg
movsb
xor
shlb
mov
outsl
rcll
imul
jp
cli
xchg
mov
xchg
dec
adc
sar
aas
adc
popa
jno
sub
inc
jae
notb
sbb
ja
push
mov
inc
clc
mov
inc
aad
aaa
enter
cmc
rcll
sbb
cmp
arpl
push
xchg
in
std
xorb
jb
dec
jnp
mov
dec
mov
inc
jp
stc
fisubs
addr16
loop
jg
xor
in
push
mov
add
cwtl
jns
inc
jp
mov
clc
jns
cwtl
sub
jmp
xor
inc
push
in
push
dec
pop
inc
pusha
arpl
xchg
xchg
push
aam
dec
ljmp
daa
push
xrelease
pop
push
dec
mov
ss
pop
popa
cli
cmpsb
cltd
cltd
xor
fildll
push
mov
loope
es
cmp
add
lret
sub
cmp
gs
adc
and
and
inc
cmpsb
xor
or
mov
pop
aam
mov
xor
add
add
or
inc
je
sub
sti
nop
cmpsl
jl
and
lcall
stos
jae
pop
insb
inc
push
inc
mov
hlt
cmp
jle
lahf
lret
push
push
mov
lea
loop
je
imul
push
push
mov
or
sbb
mov
push
mov
test
jbe
jb
lock
pusha
push
mov
je
hlt
call
pop
stc
mov
mov
cmp
inc
imul
sub
ficoms
fisttpl
int3
out
sub
mov
cmc
pop
test
inc
sub
adc
push
mov
les
xchg
mov
sbb
xchg
push
add
sbb
sub
repnz
jle
faddl
ds
adc
jae
aas
add
push
loopne
movsb
cmpsl
push
cld
fistpl
enter
popf
dec
iret
push
and
xchg
mov
add
push
dec
inc
aaa
ljmp
je
loope
notb
imul
jmp
cltd
mov
adc
lea
jmp
push
dec
lock
inc
decl
jbe
mov
mov
mov
popf
xorb
adcl
mov
ljmp
hlt
mov
dec
mov
push
xchg
jbe
jl
lcall
std
cli
mov
int
sarl
xchg
jl
int
sbb
shl
sub
sub
inc
mulb
call
bound
inc
jmp
icebp
push
pop
aad
movsb
sub
or
lods
mov
popa
aaa
movsl
inc
pusha
push
loope
cli
push
mov
ja
dec
push
cld
shll
and
hlt
js
hlt
push
inc
pusha
cmp
mov
aad
sahf
rcrb
xchg
inc
dec
jle
cmp
repz
xor
das
shlb
mov
sub
nop
mov
arpl
jno
mov
mov
rolb
push
nop
cwtl
pushf
add
aaa
push
mov
outsb
lea
xor
fistpl
jl
imul
sbb
xchg
mov
pop
xchg
add
inc
add
and
mov
lds
into
mov
lret
mov
push
jo
int3
mov
outsb
adc
adc
imul
mov
fldenv
repnz
push
stos
ret
mov
xor
add
ds
sbb
loope
mov
out
movsb
xor
int
fistpll
insb
loope
push
movsl
cmp
insb
mov
dec
out
insb
fldl
lods
mov
mov
pusha
adc
jp
out
xor
dec
out
or
es
sub
adc
xchg
loope,pt
jmp
loopne
dec
adc
dec
inc
ja
add
and
add
sahf
and
sub
and
repz
and
enter
push
aas
pop
jne
popa
jne
push
bound
popa
stos
cmpsl
jp
insb
xor
movsb
cmc
lret
rolb
insl
fcom
lcall
sub
add
out
test
push
sbb
mov
mov
aaa
xor
cmp
fidivs
pop
arpl
push
jbe
jae
fisttpll
xor
fwait
or
cli
shrl
push
repz
dec
pop
xchg
mov
in
mov
or
pop
sti
sti
sbb
clc
adc
push
test
imul
push
inc
mov
push
hlt
jmp
outsb
mov
popf
cmpsb
out
cld
xorb
adc
loope
mov
xlat
push
mov
faddl
je
inc
lock
fiaddl
adc
push
outsb
in
pop
in
loope
jae
and
push
fstpt
push
sbb
fs
les
fdivl
xchg
mov
loop
or
jle
dec
add
aam
js
cli
out
pop
mov
outsb
push
ss
push
sub
pop
loope
daa
inc
inc
imul
mov
xchg
xor
or
shrb
iret
bnd
aas
in
addb
setns
xchg
inc
xchg
mov
pop
jecxz
push
push
stc
cmpsb
xchg
inc
decb
push
xor
xchg
lods
pop
push
and
cmp
shlb
mov
aad
stos
xor
inc
ja
xlat
enter
xchg
je
inc
push
mov
mov
xor
mov
adc
mov
sub
cmpsb
mov
sbb
cltd
xchg
rorl
inc
stos
scas
xor
lods
jnp
jg
fucomip
and
int3
cltd
sub
jb
push
pusha
jno
fimull
scas
sub
fcoms
pushf
loopne
push
jb
mov
loope
testb
addb
adc
mov
dec
or
cs
pop
outsl
xor
in
cmpsb
fistps
pop
fisubrl
test
dec
movups
cltd
mov
xor
inc
in
in
and
in
jge
xorb
pop
sub
pushf
popf
dec
movsl
fistl
push
xorl
sub
xor
insb
jo
cmpsl
das
call
popa
xchg
dec
std
mov
clc
cld
daa
sti
sti
push
ret
cmp
dec
xadd
jo
cld
jle
xchg
and
scas
and
nop
and
jae
fwait
jb
jae
cmp
xor
mov
sub
mov
sub
nop
mov
rcrl
loopne
shl
mov
mov
dec
pop
cltd
adc
xor
ds
or
xchg
test
imul
mull
or
and
test
lock
push
lret
pop
lret
add
sub
loope
mov
mov
aad
in
jne
mov
das
loopne
out
sbb
fsubs
xchg
mov
inc
outsb
leave
jge
xlat
sbb
daa
outsl
jns
stos
fsubl
inc
shll
roll
xchg
jg
fdiv
push
mov
cmp
or
ss
inc
mov
sbb
inc
dec
sbb
imulb
popf
inc
xor
call
lcall
or
jns
pushl
inc
jns
add
add
add
int
inc
cmp
mov
xor
fidivrs
mov
outsl
popf
cltd
in
outsl
std
fimuls
fcmovb
xor
pop
sub
dec
outsb
cmp
aad
cmp
sub
jae
xchg
aas
cli
fsubl
insb
xchg
inc
ds
inc
sub
shll
scas
jl
mov
sub
push
mov
and
add
shll
and
push
xchg
loope
jo
sbb
xchg
lcall
xor
sahf
sbb
rorb
out
mov
shll
jo
rclb
xchg
iret
mov
mov
shll
test
pop
jb
rolb
out
dec
or
mov
imul
data16
dec
mov
push
cs
rcrl
mov
xlat
bound
test
std
pop
pop
int
bnd
or
addr16
cmp
inc
mov
imulb
adc
or
fistps
ss
mov
je
add
inc
jbe
xlat
xor
jg
mov
sbb
aaa
jle
loop
repz
ja
mov
mov
loope
mov
test
ja
pop
stos
sub
dec
and
xchg
cmp
leave
lds
ljmp
cmpsl
mov
add
bound
jle
pop
sub
cmp
sbb
insl
pop
shrb
in
incb
pop
divl
pusha
adc
pop
hlt
jne
cs
xchg
fwait
xchg
les
lods
outsl
mov
shr
or
mov
push
sbb
jg
js
andl
jbe
xlat
ljmp
jb
adc
mov
outsl
xchg
jl
stos
xor
add
outsl
mov
jo
int3
or
pop
gs
cs
cwtl
adc
mov
fs
mov
cmp
pushf
test
push
sub
aas
mov
cltd
ljmp
push
stc
call
pusha
xchg
aas
mov
rcrb
mov
pusha
adc
pop
xchg
jp
pop
ljmp
cld
arpl
cmpsl
mov
push
pushf
mov
je
mov
fistl
stos
mov
adc
insl
jne
pop
dec
cwtl
xchg
cmp
lret
lea
bound
mov
sub
int3
adc
push
push
jbe
push
cmp
push
inc
fisttps
shl
mov
dec
xlat
test
mov
not
les
mov
in
shrb
in
rclb
lret
and
jmp
daa
inc
mov
and
fwait
jno
data16
pop
es
sub
cmp
daa
fldcw
sbb
jle
mov
mov
mov
imul
fnstenv
wrmsr
pop
fwait
aad
add
cmpsb
pop
popa
rolb
dec
xor
mov
mov
add
hlt
ja
test
add
jecxz
push
lock
testl
push
rclb
loope
scas
in
and
mov
mov
insl
push
pop
repz
sahf
mov
fimuls
adc
sar
cmp
jl
fldl
aaa
adc
outsl
and
push
insl
ret
sarb
mov
xlat
push
rorl
inc
add
movsb
aad
stc
out
xchg
les
adc
adc
or
fnsave
stc
lods
fstpl
repnz
mov
ret
out
in
lcall
call
inc
mov
nop
adc
adc
addb
ret
cltd
mov
in
int
and
xchg
xor
inc
add
push
in
insb
cmp
inc
repz
sub
xchg
adc
pop
sbb
leave
movsb
mov
cmp
cmc
movsl
cmpsb
dec
push
orb
cmp
inc
in
call
push
repz
jnp
or
or
mov
adc
call
adc
sub
call
stos
mov
addr16
loope
aam
push
jle
xchg
mov
dec
push
nop
cmp
stos
jecxz
les
push
pop
int3
add
aad
mov
mov
adc
repnz
cmpsb
mov
cmp
aam
jle
out
xor
stos
mov
sub
xchg
in
sub
pushf
mov
rcrl
in
mov
mull
dec
xlat
test
mov
not
les
adc
mov
fcmovnb
jne
lahf
stos
popa
cmp
push
push
cwtl
rcrl
sub
repnz
popa
pusha
sbb
frstor
adc
in
test
fs
bound
ja
mov
nop
rcll
cs
pop
cld
add
cmpsl
mov
and
ret
pusha
mov
cmc
lds
lock
cmpsb
fcompl
push
cmp
pop
cmp
lock
ss
push
incl
ja
mov
add
and
mov
outsb
dec
fisttpll
adc
mov
sti
and
pushf
add
push
cmp
dec
mov
pop
test
adcb
push
fwait
dec
pop
inc
call
sub
adcl
jl
push
ret
cs
popa
mov
cmp
test
test
cmp
push
cmpsb
mov
or
shrb
mov
and
jo
loope
mov
shr
and
sub
out
jns
pop
in
push
imul
xlat
or
pop
ficoml
and
adc
cmp
jo
and
and
ret
insb
inc
gs
jne,pt
jae
mov
add
call
push
into
dec
push
in
lret
inc
test
loop
or
mov
int3
dec
test
cmpsl
mov
ds
imul
outsb
inc
ds
sub
cli
xor
mov
dec
or
in
push
stc
jmp
mov
into
add
enter
popa
and
sbb
adc
xor
fs
fidivs
jno
or
add
add
ljmp
js
inc
dec
outsb
pop
sahf
fdivr
cmp
pop
clc
adc
or
sub
aam
testb
cli
adcb
cwtl
mov
and
dec
or
xor
pusha
sub
int3
dec
mov
mov
push
push
jbe
shr
pop
cmp
in
repnz
xor
std
sub
mov
pop
addb
in
out
in
sbb
fxch
sbb
cmpsb
sti
adc
scas
cltd
cmp
pusha
add
rorl
push
cmpsb
test
xor
push
push
pop
and
and
jl
neg
xchg
adc
in
cmp
fdivl
sbb
mov
cwtl
mov
pushf
sbbl
loope
inc
cmpsb
in
mov
lods
sub
pop
dec
dec
inc
popf
mov
jmp
cli
outsb
mov
cmp
inc
cmp
cwtl
jg
xchg
mov
outsb
and
or
js
xlat
mov
cmp
sub
aas
mov
aas
or
mov
xlat
xchg
mov
add
shl
scas
leave
pop
out
es
aam
scas
sbb
out
stos
je
jecxz
lcall
addr16
dec
loope
mov
clc
imul
sub
cmpsb
inc
pop
jbe
xor
cmp
bound
bound
inc
pop
mov
rcrl
mov
mov
mov
dec
or
mov
mov
sub
cwtl
dec
shrl
adc
xchg
push
in
js
push
in
add
sbb
mov
mov
jle
mov
cmp
cwtl
sub
cs
cmp
cmpsb
aaa
dec
ja
popf
loop
xlat
pop
pop
test
pushf
movsl
aas
add
xor
shrl
out
sub
pop
xor
xorl
in
shrb
lea
scas
add
mov
ds
hlt
sbb
jbe
nop
jne
lcall
adc
and
dec
pminsw
les
into
outsb
mov
or
shlb
in
push
adc
xor
mov
pop
in
mov
addr16
shl
ret
sub
mov
imul
lock
repz
pop
shlb
xor
adc
fs
das
xchg
popl
jb
mov
pop
repnz
lea
cld
imul
push
pop
inc
test
mov
in
jno
or
or
sahf
add
mov
inc
insl
test
sarl
call
xor
dec
mov
daa
sub
push
adc
xchg
xchg
test
jmp
gs
xchg
mov
mov
and
into
cmpsl
fldenv
popf
rcrl
imul
mov
adc
push
bound
roll
adc
hlt
add
loopne
pusha
nop
out
pop
dec
push
push
jae
push
out
jp
dec
mov
fimull
cmp
int3
jmp
cmp
clc
and
mov
mov
pop
nop
aad
inc
xchg
shll
mov
in
mov
pop
call
inc
mov
fcmove
in
dec
add
lea
add
repz
popa
mov
pusha
and
add
mov
jge
out
movsl
inc
push
in
test
scas
pop
push
push
icebp
mov
jno
int3
mov
jge
test
repnz
lock
xchg
cmp
or
adc
cmp
sbb
in
imul
ja
sub
dec
jne
ds
dec
gs
das
cmpsb
rcrb
icebp
insb
in
sub
pop
andb
or
js
mov
xchg
cli
pop
xchg
das
mov
jne
push
lods
jbe
andl
sbb
or
call
cmpl
adc
jnp
arpl
jo
or
movsl
iret
jecxz
sbb
mov
outsb
movsl
test
adc
lods
sub
pushf
pop
lds
ret
push
sub
cmp
xchg
orl
mov
cmp
lret
scas
mov
add
nop
fdivp
test
push
aaa
xchg
aad
lret
fmull
lods
jbe
adc
dec
pop
inc
push
scas
sbb
sub
cld
jl
sub
hlt
in
sub
fisttpl
adc
and
sbb
push
insb
cs
jl
mov
sbb
pop
icebp
mov
add
sbb
sbb
pop
cwtl
push
mov
add
int3
or
adc
cmp
add
mov
pushf
pop
test
fistl
scas
movl
lock
cmp
in
xchg
add
xchg
lock
mov
call
xor
pop
outsl
xchg
push
push
test
and
cmp
hlt
sqrtps
repnz
mov
mov
xchg
sub
stos
jns
das
orb
push
shr
sub
das
rcr
es
inc
push
jl
int3
in
dec
mov
cmp
and
fwait
mov
adcl
mov
sub
mov
pop
sub
cmp
xchg
push
cmpsl
scas
insl
or
subb
mov
gs
in
push
xorb
test
pop
jb
dec
ret
cwtl
shll
mov
mov
in
inc
add
mov
and
xchg
je
lods
insl
in
add
cmpsb
arpl
hlt
mov
lcall
shll
mov
or
es
pop
lahf
insb
das
inc
bound
xchg
js
push
inc
or
aaa
idivb
int
jnp
push
ds
mov
jp
jge
or
movsb
hlt
mov
ret
dec
adc
mov
push
adc
jbe
popa
mov
loopne
mov
popa
sarl
mov
fcmovnb
das
in
imul
pop
xchg
xchg
fisubs
scas
adc
fsubl
cmp
imul
mov
test
mov
mov
mov
adc
push
pusha
cmp
mov
fdiv
js
in
in
pop
sbb
rol
sub
mov
mov
jg
and
and
xor
aaa
dec
nop
jp
clc
sub
cli
es
push
call
imul
jne
shll
dec
frstor
adc
lret
adc
jo
jns
cmc
inc
pop
mov
inc
lea
sub
mov
test
cltd
xor
add
je
inc
and
aaa
out
sbb
or
int
stos
repz
dec
or
push
jl
aas
dec
or
push
xlat
sub
mov
jne
pop
js
xchg
in
loop
stos
cs
cmc
call
sub
jnp
pop
pop
fsubr
cmc
fdivrs
xchg
inc
adc
lcall
adc
xlat
bound
sub
add
push
add
int3
loopne
mov
lahf
jae
lcall
fstl
les
enter
fcoms
mov
pop
popa
pop
or
inc
clc
les
stos
adc
dec
mov
loope
cli
leave
dec
and
dec
cmp
repnz
jb
xlat
mov
xchg
jle
xchg
out
xor
add
mov
mov
push
pusha
aas
mov
pop
fcomp
mov
int3
sbb
sahf
fmull
loope
and
xorb
mov
hlt
add
cmp
cmp
jno
xor
mov
cli
jne
in
push
xchg
adc
outsb
jno
std
mov
test
jnp
leave
mov
sub
push
and
loop
inc
lods
push
cwtl
stos
imul
cmp
fnstcw
sub
xorl
cmp
adc
out
test
test
mov
sub
mov
inc
sub
test
sub
and
xor
dec
lret
pusha
cmp
fstpl
sub
ficoms
stos
xor
or
jecxz
push
dec
cmpxchg
pop
in
mov
test
cmp
pop
inc
dec
dec
outsl
mov
pop
pop
cmp
mov
xor
jecxz
les
xchg
sub
push
push
int
aas
repnz
mov
dec
pop
adc
lcall
xchg
mov
push
sahf
push
mov
je
pop
andb
pop
ret
subb
and
jnp
pop
pusha
das
insb
jmp
paddusb
adc
mov
add
xor
jecxz
pop
les
adc
or
or
bound
test
xor
scas
fbstp
push
dec
popl
pop
loop
popa
loope
inc
sub
pop
popa
es
jns
out
mov
ljmp
insb
fs
sbb
nop
loop
sbb
ds
mov
adc
rcrl
pop
push
mov
sub
adc
jge
lret
dec
xor
cwtl
xchg
shl
mov
and
call
xor
push
pushf
sub
push
test
lahf
ret
les
or
loop
and
loopne
stos
sti
push
cmp
cwtl
cltd
add
aaa
push
jmp
daa
xchg
mov
test
aad
fisttpll
inc
data16
rcrl
pop
sub
andb
rol
xor
stos
mov
call
dec
clc
jg
add
shrb
cmp
jp
mov
fwait
imul
adc
xchg
sbbb
mov
dec
jecxz
shl
pop
dec
or
or
test
fiaddl
loopne
stos
push
add
pcmpeqb
push
mov
or
mov
das
mov
gs
jle
inc
mov
lret
shrl
jb
outsb
pop
ds
push
cmp
mov
or
pop
adc
add
mov
lret
cmp
outsb
add
xchg
ret
or
push
push
subb
cmp
mov
pop
sub
push
mov
ret
xor
sbb
jo
insl
pop
xchg
mov
mov
mov
and
aam
inc
push
mov
rorl
lea
and
xchg
aaa
aam
es
xchg
xchg
pop
enter
int3
cld
pop
lret
push
repnz
mov
mov
cmpsb
in
cmpsl
push
xchg
mov
repnz
ret
adc
ds
and
sti
movl
insb
xor
mov
xor
call
jbe
mov
shrl
in
setnp
adc
je
lods
in
inc
sub
mov
inc
std
jns
jbe
in
sbbb
loop
add
cmpsb
stos
dec
cmp
dec
mov
arpl
hlt
mov
fstl
test
les
js
mov
xchg
rclb
fwait
out
out
rol
pop
mov
mov
hlt
insb
add
call
pop
scas
ret
test
pop
pusha
shll
hlt
gs
cmp
and
std
fwait
or
pusha
sub
aas
fcoml
fdivs
mov
dec
xchg
into
cmp
xchg
jecxz
add
sbb
cmpsl
sub
add
stc
bound
xchg
and
fnsave
pop
je
jb
movsl
outsl
dec
loope
push
xchg
add
add
push
pop
sbbb
movb
mov
inc
data16
stos
movl
push
jb
in
cmp
aam
add
pop
sub
inc
ret
cmc
pushf
sbb
add
rolb
xchg
add
outsl
xor
cmpsl
mov
mov
and
inc
xchg
cmp
lcall
icebp
adcl
xchg
aad
into
neg
xchg
jne
popf
dec
cmpb
sub
clc
add
dec
cmp
cmp
imul
test
mov
fadds
out
sbb
lahf
es
lock
xchg
inc
and
inc
stc
add
scas
int
loopne
pop
outsb
popa
roll
adc
or
cbtw
push
adc
push
and
aam
sbb
lods
loopne
repz
sub
shlb
out
rcr
es
pop
loopne
aad
xor
rep
ss
std
mov
jmp
mov
mov
cld
leave
add
jne
push
mov
rcr
jns
fisubrl
xor
xchg
cltd
popa
roll
cltd
jge
inc
and
cmp
mov
push
jo
std
sub
add
xlat
cmp
inc
mov
shrl
xor
cs
push
mov
dec
cmp
mov
sbb
xor
push
inc
push
ljmp
xchg
adc
jl
clc
lock
push
into
shll
mov
or
fnstsw
cmp
fists
lods
or
cwtl
push
je
aad
adc
lods
jle
push
add
jbe
mov
ja
push
ds
sti
jne
xor
xor
movsl
test
cmp
pusha
test
push
aam
fadds
jle
lock
and
push
mov
pop
es
mov
sbbb
cwtl
mov
xchg
out
jbe
dec
adc
xchg
sbb
mov
dec
adc
pushf
pop
mov
cmpsb
sub
in
xor
ss
pop
sbb
jmp
jp
ficomps
fcmove
in
pusha
or
dec
adc
sub
es
lahf
movsl
add
inc
add
aas
cmpl
out
sbb
addr16
nop
sub
pop
push
data16
sub
mov
mov
sbbb
addw
js
shrl
out
jae
or
int
xorb
sub
shll
fistpll
mov
mov
mov
in
sbb
mov
push
cmp
loop
push
mov
push
inc
mov
and
loope
jge
add
or
xchg
out
cwtl
std
jns
fs
xchg
add
out
enter
dec
inc
filds
add
lock
sbb
lahf
cli
pushf
lret
xor
pop
mov
out
cmpsl
jl
add
es
insb
push
and
push
jo
dec
divb
xlat
outsl
loopne
sbbl
lea
or
lea
andl
mov
jmp
push
ljmp
xor
popa
shll
cmp
inc
je
pop
lret
mov
ljmp
jo
xor
ss
inc
filds
aam
lret
jg
lea
adc
pushf
in
mov
adc
adc
dec
cmp
lea
ffree
push
pop
cmp
mov
gs
movsl
jmp
inc
rcrl
cwtl
fnstenv
jb
inc
mov
hlt
jmp
jp
ret
jns
sbb
inc
jge
scas
push
scas
xorl
orl
xchg
shlb
push
mov
outsb
cwtl
test
pop
outsb
fildl
imul
inc
outsb
fisubl
mov
popa
into
mov
ljmp
aas
mov
xchg
aad
push
stos
in
pop
pop
lret
cmp
outsl
or
push
popf
add
in
lahf
es
xor
push
push
rolb
test
sub
xor
xchg
mov
outsl
jo
mov
mov
mov
sti
and
jl
fstl
and
jecxz
les
adc
mov
aaa
add
lcall
in
aad
aad
mov
sub
shl
fs
inc
bound
mov
push
test
cmp
or
dec
adc
mov
jge
ds
xor
push
jns
sub
add
insb
push
dec
jno
push
dec
xor
lds
or
mov
aas
fmuls
push
or
mov
es
dec
jo
inc
call
or
addr16
loope
aam
push
icebp
in
leave
bound
scas
dec
pop
clc
fisttpll
fmull
jg
pop
nop
fcmovnb
inc
push
jae
jae
and
ficoms
push
jmp
ret
mov
push
mov
jmp
iret
mov
mov
data16
or
mov
clc
sub
out
jmp
adc
js
jb
cmp
jno
inc
lods
ret
pop
cmp
push
mov
inc
fbld
ret
sbb
pushl
fdivp
jmp
mov
cmp
shrl
jg
add
cmp
add
sub
ss
outsb
in
iret
int3
shlb
icebp
inc
adc
outsb
push
mov
xchg
lret
test
jg
clc
ficoml
xchg
lret
popf
stc
pop
push
outsb
jmp
sbb
sbb
add
xor
imul
outsb
mov
or
shrb
mov
mov
rolb
jl
cwtl
inc
sbb
outsb
orl
push
je
xchg
in
scas
out
cwtl
les
push
xchg
rcr
jge
ss
js
int
loopne
orl
xchg
jb
pop
mov
inc
mov
add
or
int3
fwait
lods
aam
and
xchg
les
add
inc
pop
pushf
cmpsb
lods
xor
out
lea
insl
sub
roll
pop
cltd
jne
xor
xchg
add
shr
icebp
loope
push
mov
and
mov
les
xor
sbb
ja
call
add
jbe
cmp
inc
add
jno
or
mov
movsb
fcomi
loop
xor
sub
cwtl
push
inc
les
pusha
sub
rclb
pop
les
enter
jp
je
adcl
mov
inc
sub
fdivrp
push
mov
dec
out
mov
mov
out
hlt
ss
cmpb
ss
inc
cmpsl
mov
insb
roll
jecxz
push
dec
dec
fdivl
add
jnp
pop
in
out
sub
cmpsl
data16
xor
xor
mov
pushf
push
add
push
sub
lods
push
xor
xchg
inc
mov
mov
pop
fimull
cmpsb
mov
scas
clc
xor
xchg
cmp
mov
push
jmp
push
clc
xor
jp
mov
push
sti
cmp
adc
out
pop
cli
add
or
fisubrl
dec
add
jns
jns
mov
and
mov
mov
xchg
test
shlb
jae
pop
dec
add
popa
mov
push
inc
inc
inc
int
ret
xor
mov
cmpsl
add
loopne
aad
cmp
xchg
pushl
or
add
add
add
scas
faddl
add
pop
pop
xchg
and
or
iret
jns
ret
fs
ds
movsb
sub
es
or
icebp
lea
xchg
mov
out
arpl
insb
imul
add
cwtl
mov
test
mov
scas
inc
mov
stos
loop
addr16
pop
pusha
mov
hlt
mov
test
jge
cmp
test
test
scas
gs
out
inc
stos
inc
and
sbb
adc
push
jmp
in
movsl
push
and
pusha
lods
sbb
into
and
dec
mov
aas
xor
xchg
dec
xchg
out
or
push
shl
test
gs
pop
mov
dec
or
in
rol
pop
dec
xchg
jae
push
lahf
mov
outsb
mov
rcrl
pusha
jae
cwtl
adc
inc
mov
ljmp
sbb
jb
and
sbb
out
add
cmp
bnd
adcl
sub
pop
xor
xchg
inc
shrb
fwait
cltd
shlb
mov
mov
sbb
adc
or
pop
adc
dec
sub
pushf
sbb
sti
dec
mov
jmp
xor
and
push
lods
add
sub
push
push
and
dec
sub
push
jb
das
adc
adc
aas
and
aas
dec
sbbl
or
in
or
and
insb
pop
mov
jb
rclb
jle
xor
mov
and
inc
cld
sar
aaa
dec
sbb
mov
and
movsl
pop
inc
jmp
add
movsl
aas
sbb
pop
adcw
and
adc
xlat
sub
push
enter
ds
stc
nop
sub
push
in
cltd
sub
jb
push
int3
sbb
xor
dec
pop
pushf
add
jbe
cmp
hlt
adc
movsb
dec
mov
xchg
xor
pop
mov
repnz
cmp
in
cmp
out
jb
pop
ss
ret
or
push
cld
je
addl
pop
mov
pop
mov
faddl
pushf
addb
mov
mov
pusha
rol
out
hlt
icebp
rclb
cmovno
jp
push
test
cltd
adc
mov
cwtl
out
cld
out
pusha
cmp
icebp
xchg
es
ss
mov
pop
mov
pop
je
sub
inc
ja
mov
in
sub
jbe
loope
jmp
mov
mov
jmp
addr16
dec
cs
aam
push
cmp
sub
mov
jle
pop
and
out
and
sub
lcall
mov
test
mov
call
movsl
or
and
nop
dec
adc
rolb
out
mov
mov
pop
push
insb
ds
xchg
repnz
pop
cltd
adcb
mov
ljmp
imul
push
inc
xchg
or
cli
outsb
cmpsl
add
movsb
jne
push
test
sub
call
mov
xchg
add
pop
cli
pop
ja
push
mov
gs
in
insb
cli
movsl
inc
push
push
fisubrs
pop
mov
add
dec
call
cmpsb
imul
les
ja
push
xor
icebp
xchg
cli
stc
add
add
dec
adc
aam
dec
jbe
sbb
addr16
xor
je
mov
ljmp
mov
repz
addr16
dec
jb
shlb
lock
fsubrl
xor
mov
nop
pushf
push
add
comiss
dec
and
or
push
in
jae
icebp
pusha
insl
adc
push
ret
push
add
repnz
sbb
shlb
out
add
hlt
lds
xlat
sub
push
fnsave
sub
xchg
out
sbb
das
stos
sub
in
mov
sti
ds
push
mov
lods
cwtl
mov
scas
adc
xchg
iret
sub
jne
nop
ret
rcl
ja
mov
xor
std
or
out
shrb
adc
clc
xchg
ret
not
lahf
adc
jns
stc
fldenv
jle
bnd
dec
movsb
popf
jp
in
sbb
test
dec
icebp
sub
shr
sbb
pusha
rcll
sbb
out
inc
out
das
sbb
jnp
fistpll
mov
adcb
jns
rolb
push
enter
int
data16
lods
or
neg
mov
and
pop
scas
lods
cmp
testb
pusha
adc
cmp
and
sbbl
lods
mov
movsl
mull
jecxz
mov
jge
jno
pushf
jo
sti
fisubl
dec
sub
or
fs
subb
sbb
insb
adc
ljmp
xchg
cmp
cmp
rcrl
lret
pop
das
inc
sub
aaa
adc
enter
push
aaa
das
fcoml
adc
into
add
fstpl
out
fistl
jl
popf
testl
aaa
mov
and
or
sbb
lahf
xlat
jl
xchg
add
rcrb
or
loopne
int3
addr16
jmp
lds
mov
mov
fdivp
mov
fcompl
adcb
mov
mov
bound
xchg
adc
loop
cmp
mull
int
idivl
xchg
jge
ds
out
popl
rcr
cld
pop
mov
sub
dec
test
fmuls
push
popa
pusha
sbb
mov
sub
popf
je
ljmp
pop
mov
or
add
mov
and
out
cmp
in
test
adc
es
pusha
je
dec
xor
dec
dec
cmp
dec
ja
test
or
mov
loop
sub
cltd
sti
push
out
xchg
cltd
mov
or
mov
sbb
fisubrs
hlt
fsubs
pop
cmpsl
subl
mov
adc
aam
sub
or
mov
ds
push
scas
addl
push
jle
movsl
xchg
mov
xchg
enter
shlb
sub
testb
js
mov
xor
dec
dec
loopne,pt
adc
call
mov
sub
mov
adc
cmp
jl
jecxz
shl
pop
xor
ret
aas
inc
ljmp
dec
mov
adc
and
les
ljmp
mov
test
push
adc
or
cld
push
pop
and
jl
jae
push
popa
push
and
and
mov
sbb
pop
bound
in
pusha
or
add
mov
cld
pop
push
cld
pop
bound
pop
dec
sub
xchg
add
xchg
push
lods
mov
adc
pop
aaa
lret
push
xchg
or
jne
sub
mov
push
sub
ljmp
pop
mov
ljmp
mov
push
or
out
add
clc
push
mov
push
dec
jecxz
sub
dec
sti
jecxz
inc
lods
add
push
sbb
cmp
shlb
lcall
mov
push
cmp
sti
out
add
aad
push
mov
test
orl
ds
cmpsl
sbb
sub
js
sub
sub
sti
out
pushf
dec
imul
pushf
cmpsb
cmp
jl
unpcklps
push
xchg
add
jne
sbb
jo
push
sub
bound
in
sub
insb
out
push
sub
sbb
loop
cmp
inc
pop
loopne
mov
sub
pop
fcomip
sbb
adc
push
subb
mov
jl
call
xchg
es
inc
lea
pop
add
movsl
sarl
sbb
sahf
sub
mov
push
in
push
inc
and
rclb
lds
aaa
xchg
ret
jno
dec
aaa
push
test
cmp
rclb
je
dec
mov
mov
push
mov
xor
pop
lret
mov
into
adc
imul
shrb
inc
pop
cli
lahf
mov
xchg
stos
dec
xchg
out
bound
xor
dec
fcoml
lods
mov
sub
xor
loope
and
inc
cmp
jp
xchg
stos
pusha
in
aaa
stos
or
pop
fwait
cld
sbb
mov
cmp
pop
jmp
cmpsl
mov
fistl
pop
addr16
aas
addr16
fwait
sub
push
int3
xor
sub
mov
fsts
pop
add
mov
mov
bound
xchg
adc
or
jl
cwtl
mov
adc
mov
dec
lcall
jl
dec
inc
loop
je
repz
mov
dec
jecxz
sar
and
xor
jl
icebp
imul
jp
or
xor
jnp
add
ljmp
mov
sub
jb
in
mov
ja
and
mov
cltd
push
dec
or
xor
scas
and
mov
jo
rorl
fistpl
insb
push
popl
lcall
enter
sub
je
ja
xchg
das
scas
mov
push
das
adc
loopne
in
in
push
dec
pushf
popa
pusha
sbb
frstor
adc
push
ss
jge
or
push
lahf
fdivl
mov
xchg
ja
mov
aas
ret
cmp
mov
test
pop
fs
adc
mul
cmp
fnsave
or
adc
mov
je
rorl
pop
movsb
xor
inc
push
sub
xor
mov
pop
mov
fs
cmp
mov
mov
pop
fcoml
and
inc
mov
xchg
das
in
decb
adcl
jnp
pop
cli
lret
cmpsl
mov
sti
vprotd
jge
lock
xor
mov
pop
cs
inc
int3
rcl
cld
repz
jecxz
inc
insb
popa
pusha
sbb
loop
icebp
dec
ret
test
mov
hlt
jae
je
sub
mov
inc
push
push
loop
arpl
popf
pop
arpl
pushf
fdivr
repz
sbb
mov
inc
fldl
mov
shrb
seta
push
jp
pop
mull
xchg
xchg
movsb
and
add
dec
mov
shll
frstor
fwait
cmc
scas
mov
dec
gs
mov
cmp
pop
dec
aas
xor
mov
decl
mov
in
insb
adcl
mov
cs
ja
out
xor
jo
mov
cmp
in
sub
cld
mov
rcrl
int3
movsb
dec
mov
repnz
mov
outsl
out
loopne
sti
inc
hlt
loope
push
movsl
shrb
js
cmp
mov
scas
xchg
xchg
and
add
dec
call
jge
push
sub
pushf
xor
out
cmp
pop
pop
fdivr
or
adc
stos
test
jmp
inc
fmull
repnz
loope
cmpsl
int3
cli
lods
mov
inc
adc
mov
hlt
and
hlt
sub
les
mov
ds
in
test
aas
fsubrs
mov
mov
pop
adc
adc
test
cmpsb
push
popa
pusha
adc
pop
xchg
jp
cmp
push
popa
xchg
and
mov
int3
int
mov
mov
insl
push
je
dec
ds
hlt
push
dec
jbe
jl
aas
xor
jecxz
sar
push
push
dec
ret
adcl
mov
cs
ja
out
xor
popa
stos
mov
sub
mov
sub
mov
sbb
movsb
loopne
fisttps
xchg
mov
cmp
or
mov
xlat
fdivr
inc
rorl
xchg
add
xchg
adc
ret
pusha
insl
mov
jecxz
or
and
fwait
jno
push
jl
data16
cmp
inc
int
mov
shrb
fucomp
rorb
lret
aas
paddb
es
pop
bound
lcall
sub
mov
jmp
jge
aaa
outsb
mov
cmp
fidivl
dec
jno
xor
pop
mov
mov
push
orb
sub
push
pop
movups
ja
bound
cmp
inc
pop
loopew
xchg
xor
xchg
adc
push
push
scas
loop
pusha
pusha
insl
mov
jecxz
cld
cmp
push
mov
mov
or
out
addr16
shll
jge
hlt
frstor
adcb
out
fdivr
pop
repnz
or
repnz
adc
push
jmp
ljmp
xchg
cli
cli
lahf
je
ja
dec
out
mov
pop
loop
adc
out
jae
pop
xor
js
dec
dec
add
jo
jo
lcall
in
sbb
andb
mov
jp
ret
subb
movsb
pop
adc
popf
out
jp
aaa
cmpsl
mov
cmpb
fisttpll
mov
add
pushw
cltd
mov
inc
data16
or
mov
xchg
not
pusha
sub
pusha
sbb
jo
xor
cmp
test
mull
jle
outsl
fcoml
mov
push
cwtl
jge
push
pop
fsubl
inc
jbe
aas
je
dec
popf
pop
movsb
pop
xor
xor
out
insb
sar
mov
dec
pop
mov
or
add
add
clc
xor
mov
int
fdivl
jae
sbb
xchg
fs
cld
pop
stos
sar
pop
mov
sub
or
shl
mov
daa
adc
test
shrb
jne
popa
jmp
enter
fsts
das
pop
jo
jo
push
pop
loop
arpl
dec
cld
repz
hlt
xorl
mov
push
cmc
push
dec
push
loopne
push
add
popf
je
cmp
std
push
dec
jecxz
mov
loope
addb
xchg
je
pop
dec
push
inc
or
add
int
push
aaa
je
dec
dec
in
jmp
dec
out
les
cmp
inc
data16
sar
mov
std
pop
pop
dec
pushf
test
aam
aas
push
fildl
fsubrl
nop
or
sbb
xchg
adc
data16
in
mov
push
in
mov
xchg
xchg
fisubs
push
or
push
inc
push
dec
cmp
lret
cmp
js
adc
out
jb
xlat
test
orl
xor
or
iret
daa
inc
sub
jo
xchg
add
xor
push
jnp,pt
aam
or
adc
incl
in
test
push
les
pop
ljmp
repnz
dec
pop
pop
in
in
les
cmp
xchg
imul
insb
hlt
pop
add
rcrl
rcl
pop
repnz
pushl
pop
push
jb
sbb
dec
data16
jno
mov
ss
jge
xor
or
int3
jmp
push
movsl
add
lret
popf
fists
cmpsb
adc
int3
or
pop
xor
aaa
jp
push
lds
mov
pop
loop
mov
mov
in
push
mov
push
mov
add
das
in
hlt
inc
add
lds
push
mov
loope
inc
pop
and
mov
fistpll
enter
stos
sub
in
loopne
push
in
call
xchg
mov
sbb
negl
push
jo
cmpsb
out
loope
addl
mov
mov
push
in
lock
in
clc
aas
ljmp
pop
decb
stos
or
add
cmp
popa
lea
sub
ljmp
cwtl
mov
sbb
jmp
les
insl
in
and
mov
std
push
dec
lret
vpmacssdd
sub
mov
ss
aaa
push
iret
xor
repnz
jb
loopne
pop
jbe
rcr
push
xchg
pop
cli
lahf
cmp
ja
dec
mov
movsb
pop
xor
add
aas
add
sub
jle
cld
mov
adc
xor
pop
adc
mov
shl
cmp
je
cmc
add
rclb
test
push
pushf
dec
mov
adc
jge
testb
cli
push
xchg
xchg
and
add
dec
sub
insb
cld
mov
std
mov
out
imul
jb
rol
ljmp
jmp
or
sbb
shl
pop
inc
xor
jl
shrb
stc
cs
dec
ja
fcompl
je
into
push
repz
insb
jbe
xor
bound
xchg
adc
sub
out
out
mov
mov
fstps
out
jp
lahf
adc
and
jmp
fs
repnz
jle
mov
mov
insb
xor
pop
movups
stc
push
shll
cmpsl
cmpsb
or
push
dec
insb
repz
loope
and
sub
push
data16
data16
cltd
adc
popf
push
mov
out
sub
ja
mov
mov
sub
xchg
dec
rorl
xchg
andb
in
adc
in
sbb
push
adc
mov
fsub
cmc
xor
inc
cmc
cld
aas
push
jbe
adc
mov
pusha
lcall
outsb
test
jae
cmp
add
mov
xchg
mov
fidivl
pop
dec
in
push
sti
es
fnsave
cld
scas
xor
mov
cwtl
imul
out
mov
pop
shr
adc
cmp
daa
push
sbb
cmpsl
int3
cli
cmp
movsl
mov
dec
adc
dec
cmpsb
push
xor
sbbb
mov
sbb
mov
push
adc
push
push
or
pop
aam
dec
dec
lcall
icebp
pusha
pop
sub
xor
pop
shlb
pushf
mov
aas
lret
pusha
jae
test
fcomip
fistl
push
aad
xorl
int3
fdivrl
xchg
cli
pushf
inc
add
cli
mov
jmp
lods
push
push
or
fldcw
inc
gs
loope
xchg
lods
mov
cmpsb
mov
mov
hlt
adc
out
jg
rorb
clc
int3
mov
test
push
jbe
push
in
jl
adc
dec
fstps
bound
push
push
fsubrl
dec
sub
sbb
mov
int
lea
xchg
data16
fs
orb
mov
int
repnz
pop
int3
aam
dec
insb
repz
mov
mov
data16
jp
cltd
adc
popf
pop
mov
out
sub
ja
mov
mov
sub
xor
mov
adc
sub
insb
jbe
push
inc
jo
xchg
push
fdivl
test
lahf
mov
sbb
xchg
xchg
scas
sub
lods
jb
xchg
ja
mov
mov
sub
fcomps
or
sub
in
push
jp
cmp
rcrb
es
scas
lock
ds
jl
or
ficoml
fisubrl
pusha
scas
lcall
cmpsl
mov
out
adc
shl
pop
push
test
ret
inc
inc
mov
hlt
pop
inc
inc
jg
mov
pop
sti
and
aam
popf
je
pop
mov
dec
jmp
frstor
cs
aas
xchg
push
jl,pt
dec
rorb
mov
mov
out
or
mov
pop
mov
cmp
lret
push
xor
imul
jo
jg
mov
sbb
dec
imulb
mov
xor
push
movb
fidivl
add
data16
les
fwait
stos
adc
dec
sbb
jns
das
dec
pop
push
cmp
inc
and
mov
pop
xchg
jmp
push
ret
push
lret
adc
adc
dec
push
movsl
xchg
int3
stos
push
lea
xchg
mov
jecxz
in
push
mov
loopne
out
repz
sub
pop
and
negb
sub
adc
xor
push
lahf
dec
sbb
inc
hlt
sub
aaa
stc
cltd
arpl
dec
mov
or
insb
jbe
pop
ds
sub
sub
or
cmp
jmp
or
clc
push
add
fdivr
or
fs
ret
lods
ds
push
pop
xor
mov
clc
or
gs
cld
dec
cmp
pop
test
push
das
mov
pusha
aas
ljmp
ficompl
pop
icebp
repz
test
or
push
bound
inc
adc
outsl
push
xchg
icebp
into
adc
out
jb
xor
cs
lret
pop
fcoms
shrb
ret
push
mov
std
jp
xor
mov
adc
adc
repz
and
pop
in
fimull
int
sbb
dec
loopne,pt
mov
lret
popf
cmp
lods
cltd
repz
aam
test
insb
sub
scas
rol
mov
outsl
push
fdivrl
pop
sub
roll
ds
push
pusha
pusha
insl
mov
mov
mov
adc
push
mov
or
xchg
and
jge
mov
out
xor
movsl
jnp
pop
mov
mov
jmp
xor
aam
shrl
jmp
inc
fmull
les
pushf
nop
cmp
loop
or
dec
push
push
insb
push
inc
jbe
xlat
pushf
pop
pusha
add
add
jle
pushf
mov
shl
mov
dec
xlat
test
mov
not
les
sub
sub
popf
je
fsubrs
dec
les
je
or
mov
fistpl
xchg
xchg
and
add
dec
or
xor
cld
repz
mov
ljmp
mov
xor
pop
push
fnstenv
or
add
add
outsl
cltd
xor
sub
push
push
inc
push
outsb
pop
cmpsb
fdivr
data16
cmp
sub
pop
mov
ljmp
mov
pop
stos
xor
jl
cmpsb
imul
push
jle
fcompl
insb
adc
pop
sbb
rcrb
cld
pop
pop
fdivr
push
sar
or
lods
insl
dec
xlat
test
mov
out
dec
pop
jl
jno
or
add
mov
xor
cld
pop
or
sub
mov
xchg
das
in
repnz
jecxz
add
xchg
call
movsl
push
xchg
pop
cli
lahf
lock
jle
dec
jp
mov
pop
data16
rorb
repnz
rclb
push
inc
lock
push
jno
push
pop
jo
imul
cld
add
mov
aas
shr
inc
pop
mov
ljmp
aam
mov
rcr
mov
cmp
inc
mov
sbb
push
insl
cmp
mov
fidivrs
push
cld
bnd
dec
push
or
mov
adcl
jl
shl
icebp
mov
sub
sub
mov
sbb
adcl
mov
mov
or
push
mov
mov
xor
ret
mov
je
test
mov
jae
sbb
in
jb
test
in
std
adc
pushf
shrl
xchg
pop
cmp
movsb
mov
add
xor
jge
lock
and
mov
xlat
xchg
pop
mov
mov
xchg
sahf
xchg
mov
cmp
fildl
xchg
jnp
pop
lcall
cs
sbb
or
jecxz
hlt
das
out
jp
push
popa
xor
push
fs
nop
sub
out
data16
cmp
ljmp
fwait
jno
push
or
and
int
cmc
jnp
cltd
stos
jbe
fdivrs
cwtl
imul
mov
cmpsb
push
popa
pusha
adc
pop
xchg
jp
sub
adc
popa
mov
fs
lcall
push
push
mov
cwtl
roll
rorl
sub
repnz
push
or
sub
out
fnstenv
mov
mov
pop
mov
sbb
jae
scas
xchg
jecxz
les
mov
pop
mov
es
repnz
pop
or
popf
out
jp
int
cmpsl
mov
mov
shrl
and
rol
es
fdivs
je
sahf
mov
orb
dec
pop
xchg
mov
stc
sub
xor
outsb
or
shll
pop
cli
or
xchg
mov
sarl
sbb
lret
mov
mov
dec
pop
xlat
inc
push
sub
cmc
and
fistl
sub
sub
in
shlb
pop
push
lret
insb
mov
lods
insl
pop
pop
shll
fwait
subl
dec
stos
data16
gs
mov
lods
and
jle
sub
lcall
jge
roll
push
xchg
cmc
cs
mov
cmpsb
loopne
sbb
mov
and
test
and
mov
mov
adc
push
lret
les
gs
dec
ret
adc
pop
push
and
aam
push
mov
or
mov
in
pop
push
push
inc
sti
mov
push
cmp
mov
es
add
aad
xchg
jecxz
pusha
pop
dec
out
and
cmp
and
jo
mov
adc
icebp
stc
mov
jo
and
adc
add
testl
add
pop
jg
mov
ffree
ficoms
cld
mov
and
cmp
ret
mov
daa
jb
pop
ja
and
cmp
push
aad
sahf
xor
and
adc
repnz
adc
stc
xchg
mov
rcll
push
add
mov
aad
fs
std
push
push
mov
pop
loopne
incl
mov
and
xor
jne
fcomp
sbbl
pusha
popa
mov
jg
mov
jne
repnz
ret
outsl
sub
mov
enter
bound
sub
in
jl
xor
or
test
lods
xchg
cmp
mov
mov
popa
mov
sbb
mov
mov
jmp
push
pop
sahf
mov
xchg
sub
mov
sub
mov
adc
mov
rcrl
cmp
mov
in
aad
enter
repnz
push
cld
lret
test
and
movsb
ljmp
in
pop
lods
add
int
hlt
sbb
pushf
mov
push
aas
or
mov
hlt
dec
xchg
scas
push
nop
cltd
lds
lcall
inc
push
adc
mov
daa
adc
or
aad
stos
out
dec
pop
add
cmp
cmp
cld
pop
adc
rclb
cld
xor
mov
mov
or
cmp
add
cmpsb
fcoml
dec
lret
lock
cmpsl
mov
add
shlb
push
shr
decb
sarb
popf
push
mov
aam
in
mov
jbe
adc
or
or
in
aas
pop
push
xor
inc
or
jnp
je
mov
lahf
pushf
fidivs
movsl
push
xchg
xchg
lods
rcrb
aad
clc
inc
ss
push
jmp
sbb
xchg
mov
gs
imul
out
imul
les
sub
mov
ss
cwtl
or
jg
mov
push
cmpsl
cmp
push
inc
pop
mov
push
cltd
adcb
es
shll
lods
and
in
loope
mov
std
sbb
cmp
mov
jle
aam
popa
pop
fwait
pop
sti
mov
mov
cmovbe
mov
xchg
ss
cmp
mov
push
sbb
iret
mov
mov
nop
jge
mov
sbb
bound
mov
fldl
hlt
popf
adcb
jp
cmp
jnp
les
and
jo,pt
mov
test
test
xchg
das
in
std
jl
es
das
fucom
outsl
or
jns
fistl
cli
inc
or
add
fcmovnbe
out
mov
sbb
jmp
fs
jmp
jmp
cld
mov
mov
xchg
add
subl
push
push
std
mov
dec
fsubs
ds
mov
bnd
ja
xor
fisubrl
xor
idiv
dec
dec
sbb
pusha
pop
pop
push
int3
jmp
mov
neg
mov
int
or
jnp
gs
jge
into
in
adc
add
iret
mov
fmuls
ss
cwtl
mov
jmp
sahf
dec
cmp
out
movsl
je
xor
insb
dec
hlt
xchg
dec
cmp
sbb
mov
mov
inc
inc
sahf
pop
scas
orb
sub
shrl
movsb
and
aam
mov
aam
xor
mov
cmc
inc
dec
cmc
das
sbb
push
int3
mov
sub
inc
push
xor
add
lret
xlat
leave
ret
cmpsl
lret
sbb
fs
and
ret
pop
int
test
fs
mov
clc
jg
jmp
gs
xchg
mov
jge
mov
push
inc
and
in
and
or
cmpsb
rorb
jl
sub
dec
call
pop
out
cmp
push
inc
unpckhps
sarl
fsincos
or
push
pop
cmc
in
sbb
ret
int3
and
and
push
jo
cmp
orps
mov
inc
lret
adcl
xchg
and
pop
push
ret
cmp
in
test
cmpsb
sbbl
push
mov
gs
sub
mov
sub
mov
adc
mov
rcrl
aas
sbb
jl
add
lds
cmp
pop
mov
pop
ljmp
adc
clc
adc
pop
mov
call
push
ljmp
outsl
add
add
pusha
loope
mov
cmpsb
push
mov
xchg
sbb
fucomip
divl
xor
jp
fld
scas
subl
dec
popw
cmc
sub
cmp
out
fiaddl
xchg
std
sbbl
aad
rolb
inc
pop
xchg
pop
inc
jecxz
adc
fistl
and
lock
or
test
sahf
push
rcrl
loopne
pop
cs
clc
adc
mov
xor
and
loop
test
xchg
pop
mov
jle
sbb
mov
popa
mov
cmpsl
lahf
not
add
cmpb
push
stos
add
xchg
push
subb
into
mov
test
mov
and
mov
inc
ret
inc
cmp
xchg
cmpsl
and
pop
dec
xchg
mov
int3
out
cwtl
pusha
jmpw
mov
dec
push
aad
js
std
ss
fsub
xor
push
sub
lock
imul
jg
in
sub
push
test
lcall
lcall
adc
dec
adc
and
lds
mov
push
outsb
push
fmul
mov
mov
dec
mov
ds
xor
inc
pop
ss
push
xor
flds
aam
and
lds
insb
xlat
ljmp
xchg
jne
cs
imul
nop
arpl
nop
mov
fadds
fsubrs
aam
jo
cmpl
rcr
xor
xchg
xor
pop
cmp
subb
pushl
addr16
push
dec
popl
data16
jne
xor
scas
or
push
ret
xchg
lds
sbb
mov
fsub
push
mov
xor
imul
jle
inc
sub
pop
rol
adc
ss
mov
mull
pusha
out
xor
dec
or
mov
adc
push
cltd
pop
inc
imul
and
outsl
in
cmc
mov
stos
insl
enter
mov
imul
int3
add
xchg
xor
xor
das
fnstenv
test
aas
jo
adc
in
inc
dec
cmp
insb
lds
jecxz
sti
push
and
out
ficoms
es
lret
sbb
and
cmc
push
pusha
sub
pop
mov
stos
lcall
mov
cmp
imul
sub
mov
inc
xchg
cmp
and
and
jne
jno
inc
mov
clc
mov
or
mov
jle
movsl
sbb
stos
test
repnz
cmp
mov
and
pushf
aas
arpl
pusha
adc
stos
in
popa
mov
ja
sub
mov
imul
das
loop
cli
aas
hlt
aaa
cltd
and
pop
push
xor
imul
sbb
mov
cli
or
arpl
mov
test
loop
cs
jecxz
and
xor
out
sbb
repnz
sub
out
loopne
int
mov
fidivs
push
jp
sbb
mov
push
repz
add
jmp
jecxz
jp
repnz
xor
mov
fistpll
test
cmp
outsl
sub
adc
divb
loop
push
loopne
push
sbb
push
mov
in
aam
mov
addr16
and
and
sbb
mov
sub
jl
sbb
sar
push
imul
and
sub
out
jns
pop
ja
imul
arpl
mull
jb
jo
ja
adc
aas
cli
adc
sbb
out
cmp
ret
sub
pop
insb
pop
fistps
push
mov
pusha
inc
sar
push
ljmp
sbb
cld
arpl
data16
fs
orb
mov
int
repnz
sub
mov
inc
push
push
popf
pop
arpl
test
popf
out
movsb
pop
adc
and
and
add
dec
mov
daa
push
sbb
cmpsl
int3
cli
pop
cmpsl
mov
cltd
adc
inc
xor
cmp
ret
test
pop
ret
pop
dec
jno
jno
or
add
add
cwtl
imul
imul
mov
ds
dec
popa
cli
mov
je
pop
lret
and
mov
pop
push
xor
jl
cwtl
imul
pop
out
pop
ret
or
sub
inc
fdivr
cmp
pop
pop
adc
int3
cmpsl
sub
xorb
xchg
dec
dec
mov
movsb
mov
dec
push
dec
aas
push
movsl
xor
stos
fisubl
sub
in
mov
push
inc
jo
ljmp
adc
inc
mov
ja
and
mov
cltd
push
dec
pop
pop
cmp
and
bound
pop
subl
sub
mov
ss
cwtl
fidivrs
xchg
scas
insb
movsb
mov
add
daa
dec
mov
cmp
into
sub
ja
mov
mov
inc
jo
mov
aas
mov
movsl
add
jne
sbb
xchg
inc
jne
dec
fprem
lret
ss
push
iret
popa
loop
xor
xor
xor
pop
sub
daa
test
ja
mov
mov
sub
mov
adc
shl
jb
mov
aad
push
mov
fsubl
je
inc
lock
jecxz
jnp
ret
or
xorl
dec
shll
ret
stos
rorl
fnsave
mov
ja
mov
cmpsl
rcll
sub
mov
xorb
cmp
adc
test
fcomip
fistl
repz
xor
dec
lds
jmp
out
inc
sub
xchg
fimull
mov
mov
les
int3
shrl
test
mov
out
dec
adc
cmp
mov
inc
jbe
adc
xchg
mov
push
cs
push
pop
mov
pop
outsl
or
inc
pusha
fldt
xor
mov
inc
cltd
inc
add
and
out
fstpt
cs
enter
movsb
aas
sub
add
sti
es
cltd
lret
xchg
jl
les
adc
add
pop
cmpsb
cli
cld
lfs
pop
sub
push
int
xchg
dec
push
dec
sub
push
pop
addb
outsl
dec
js
sub
mov
pop
fmull
call
ficoml
call
xchg
popf
mov
add
xchg
neg
add
adc
inc
sub
cmp
mov
jl
and
dec
mov
xchg
jno
loopne
movsl
cmp
jo
adc
addr16
push
data16
inc
mov
cwtl
add
inc
aam
cli
inc
test
loope
pop
pop
pop
outsl
sub
lods
xor
sub
insl
dec
inc
push
rcl
push
fcompl
lods
jp
dec
into
fdivrl
pop
lock
sbb
icebp
lds
out
ret
xchg
fidivl
aad
das
clc
push
ret
mov
add
mov
push
shlb
sub
add
jmp
ret
xchg
dec
cmpsl
lock
sub
fbstp
cmpsb
shrb
ljmp
test
jg
stos
test
xor
xor
mov
jl
cmpsl
push
sti
push
stc
xchg
rorb
cld
push
or
gs
dec
cmp
cmp
sub
sub
inc
dec
mov
out
pusha
pusha
adc
clc
and
pop
sub
scas
mov
adcl
xchg
enter
xchg
inc
lret
pop
lcall
lcall
fcoms
sub
in
loop
stos
shlb
cmpb
jl
jmp
fnstsw
mov
or
jle
sub
cmpb
mov
scas
sub
or
jmp
xchg
mov
shlb
jmp
push
nop
mov
lods
out
xor
into
fsubs
pop
push
imul
mov
jae
clc
test
test
xor
movsb
sub
repnz
pop
lcall
insb
inc
dec
mov
mov
rcrl
dec
pop
imul
out
addl
insb
pop
jo
jp
sub
pop
cwtl
js
sbb
pop
orb
push
fs
mov
lret
jp
in
roll
filds
inc
add
sub
pushf
xchg
cmp
sti
xor
add
shll
and
aas
push
shrl
add
cwtl
cmp
cmp
stc
pop
xlat
loopne
ljmp
push
mov
inc
data16
testl
xlat
aam
ljmp
pop
shrl
jae
push
adc
jecxz
fs
sbb
or
or
push
sbb
fs
push
mov
pop
sub
adc
ljmp
sbb
adc
cld
push
push
and
xorb
xor
dec
push
mov
jnp
fsubrp
insl
jp
mov
aam
in
ror
cmovno
ret
mov
call
clc
push
inc
jmp
lret
inc
sbb
pop
push
inc
enter
repnz
jo
mov
data16
inc
xchg
sbb
call
sbbl
mov
leave
shrb
fstpt
cmp
mov
xchg
sbb
adc
adcb
loopne
push
incb
mov
nop
ss
jb
push
mov
idivl
inc
shrb
xor
cmp
sbb
call
lahf
lock
inc
lock
aas
sbb
mov
dec
loopne
lret
mov
and
sub
or
filds
mov
mov
or
pop
mov
pop
subb
mov
mov
addr16
dec
adc
add
ficomps
cs
dec
idivl
xorl
out
in
call
mov
js
loope
jmp
mov
lods
push
sbb
push
mov
cld
imul
in
mov
inc
or
pushf
in
xchg
jo
jl
inc
imulb
sbb
add
mov
mov
or
ljmp
icebp
mov
dec
lcall
add
lsl
xlat
daa
fisttpll
xchg
sub
gs
jnp
mov
mov
add
int3
sub
xor
inc
add
sub
faddl
xor
push
daa
xor
mov
repz
jne
mov
je
push
sub
mov
mov
xchg
mov
inc
dec
fcmovnu
cld
int
pop
and
mov
or
dec
and
cmp
shr
dec
int
jecxz
xchg
movsb
cmp
or
mov
mov
mov
arpl
or
cltd
pop
jns
and
cmp
mov
and
push
mov
sbb
mov
sti
inc
mov
test
fistl
in
and
xor
or
sub
inc
xor
aas
xchg
xor
push
jb
lahf
repz
jno
mov
rolb
sbb
lods
scas
ds
jge
push
jno
in
into
cmp
daa
jle
in
sub
fsts
hlt
and
in
mov
xchg
push
xor
xchg
lock
cwtl
jne
dec
add
repnz
and
sub
in
ja
test
xchg
xchg
jecxz
cli
ljmp
cmp
or
ss
adcl
xchg
call
add
lret
imul
es
mov
cmp
insl
inc
dec
js
stos
mov
test
and
push
insl
pop
fstpt
repnz
out
popl
test
inc
in
ljmp
loopne
sbb
stos
ljmp
pop
sub
daa
addps
test
addr16
out
pop
and
pusha
cmp
xchg
outsl
shll
das
mov
sbb
fistpl
jg
lea
mov
out
push
idivl
adc
shll
cwtl
mov
jmp
aad
sbb
cmp
or
negb
stc
and
aam
dec
sub
xchg
xor
dec
inc
and
xor
pop
subl
push
xchg
out
negb
mov
push
xchg
cmpsl
pop
sarl
out
xor
stc
cwtl
xchg
pop
bound
into
aaa
scas
xchg
pop
add
mov
dec
adc
adc
pusha
mov
adc
add
jns
in
movsb
xor
xchg
aam
mov
ret
or
movswl
xchg
cmc
xor
sub
clc
mov
jl
cld
xor
cltd
mov
jbe
dec
mov
rolb
fcom
sub
je
and
mov
sub
mov
loope
in
jge
and
bnd
aas
push
xchg
mov
add
out
pop
mov
add
add
mov
aam
fisttpl
mov
mov
daa
inc
pop
push
mov
and
or
es
call
ret
mov
or
ljmp
pop
je
loope
int3
testl
popa
lret
lods
jae
shrb
inc
fidivs
mov
scas
xor
xor
inc
or
push
lods
add
cld
sbb
jl
inc
mov
pop
jecxz
adc
in
and
test
push
mov
push
movsb
cld
fmull
das
in
pop
cmp
jmp
lcall
push
cmp
add
bnd
fcoml
shl
mov
ret
dec
nop
mov
lret
mov
xor
jp
xchg
jb
add
or
stc
pop
jp
ret
nop
roll
pushf
mov
mov
pop
iret
jne
lods
dec
mov
incb
cli
out
xchg
xor
in
push
insl
dec
fiaddl
test
dec
fcoml
jl
adcb
mov
repz
loop
xor
sub
adcl
bound
pusha
cmpsl
repz
shrl
divl
shl
push
test
sar
cmp
stc
test
stos
xchg
and
aam
pop
js
jb
icebp
inc
movsl
loope
inc
and
push
jns
lret
jbe
out
mov
or
mov
cmp
xor
cltd
add
into
loope
popa
addr16
into
jle
test
inc
nop
cmp
in
aad
in
mov
mov
int3
outsb
fwait
test
shrl
inc
into
xchg
cld
xor
inc
cmp
fiadds
je
pop
xchg
mov
enter
cmp
clc
int3
push
lcall
inc
ret
xor
sbb
inc
xorb
mov
jmp
jg
mov
inc
push
lcall
lds
jnp
stos
insb
pop
or
xorb
test
orl
dec
pop
mov
cltd
push
in
pushf
shll
stos
jp
sbb
dec
outsb
lods
mov
mov
pop
jge
rolb
jp
in
popa
mov
mov
int
imul
fmul
jl
rolb
imul
aas
das
aaa
push
out
loopne
sti
pop
cmp
mov
mov
or
push
in
ja
cmp
data16
int
jecxz
insb
lcall
xchg
mov
outsl
mov
outsb
xchg
cmp
shl
test
aas
fmuls
push
or
mov
es
dec
mov
fiadds
sub
inc
pop
cmpsl
pop
cmp
pop
push
lcall
adc
push
test
insl
or
insb
push
daa
outsb
fcomip
xor
shlb
imulb
dec
sbb
xor
adc
out
outsl
les
loop
je
jmp
push
cwtl
cld
shlb
rorl
adc
add
dec
or
dec
in
jo
std
adc
out
pop
add
xchg
mov
push
sub
mov
outsl
ja
and
mov
cltd
push
dec
adc
fidivs
popa
stos
mov
sub
or
rcrl
fs
mov
in
insb
adcl
int
mov
add
mov
jo
or
subb
pop
fidivs
lock
push
jno
push
sahf
scas
in
sarb
pop
adc
jle
pop
and
xor
adc
popa
stos
mov
or
inc
fmuls
fcoml
lods
fnstenv
hlt
lods
push
xor
mov
aad
insb
inc
pusha
sahf
icebp
inc
cs
cmp
imul
shll
adc
mov
dec
test
mov
adc
shlb
jb
xchg
shr
mov
inc
outsl
in
in
push
add
int3
inc
movsb
orb
pop
aad
sbb
inc
sub
rclb
mov
push
jl
outsb
jb
dec
push
sub
inc
adc
mov
pop
lock
mov
inc
push
cld
add
xchg
pop
sbb
pop
fistpl
stos
jmp
sub
out
pop
testl
lea
pop
out
add
mov
mov
mov
push
in
dec
inc
push
aaa
lcall
push
lea
aaa
sbb
mov
lahf
fiaddl
pop
cmc
in
ror
xchg
mov
lret
mov
mov
push
es
cmpsb
mov
jo
pop
stos
add
inc
dec
xchg
out
jne
repnz
and
dec
lcall
lret
dec
test
push
fcmovne
push
pmulhw
mov
shll
and
fnstsw
sub
xchg
notb
incl
cmpsl
jmp
out
out
sti
inc
lret
test
enter
into
cmp
test
cmp
dec
adc
popf
adc
xor
jno
pop
push
nop
ljmp
jle
and
or
call
sbbl
dec
jg
ja
lcall
mov
pop
imul
inc
pop
mov
adc
push
add
dec
mov
cmp
inc
xor
faddl
dec
mov
mov
cmp
psubw
mov
adc
lcall
cmp
xor
mov
add
cltd
mov
adc
aam
pop
stos
mov
rorb
bound
in
add
ljmp
pop
pop
movsb
bound
bound
insb
test
pop
inc
lock
dec
sbb
jp
pushf
mov
jo
int3
push
incl
lods
dec
clc
andl
in
xchg
orl
and
iret
pusha
pop
xor
neg
cmc
ds
fadds
cmpsl
pushw
mov
pushf
or
pop
fdivr
ficompl
dec
and
outsb
cltd
loop
add
ljmp
and
inc
pop
jl
inc
mov
cwtl
popf
jo
imul
push
aam
call
repnz
aas
and
push
inc
mov
xor
and
mov
loopne
xor
cmp
xchg
or
in
cmp
bound
ljmp
insb
in
mov
shll
pushl
lock
and
mov
out
cltd
lret
into
ficomps
pop
jle
mov
adc
lret
cwtl
imul
pop
adc
cmp
ja
jg
sub
adc
push
shlb
push
dec
std
sbb
add
cs
mov
push
stos
shlb
push
ror
lcall
push
jecxz
popf
cmpsl
push
movsb
fs
pop
shrl
inc
in
out
aaa
hlt
jmp
popf
mov
hlt
sub
mov
loope
aas
xlat
loopne
and
or
sbb
jne
ret
jnp
mov
jge
sub
fildl
pop
sbb
or
dec
cwtl
and
sbb
dec
dec
jp
addb
subl
adc
inc
mov
lcall
cltd
jae
dec
pop
pop
cld
sub
mov
insb
mov
dec
cmpsl
test
inc
enter
or
sbb
or
adc
jmp
lret
out
daa
sub
fs
sub
adc
imul
stos
ficompl
sub
ljmp
fldl
push
mov
in
bsf
sub
inc
jl
ljmp
in
inc
ficompl
inc
push
xor
push
mov
leave
or
ds
dec
je
add
jle
xchg
adc
pop
mov
hlt
shrl
jecxz
gs
cmp
cld
mov
xlat
push
adc
test
jnp
cli
jg
mov
jnp
mov
add
mov
outsl
aad
inc
xlat
negl
out
mov
jo
mov
ret
jp
pushf
and
out
scas
xchg
push
mov
inc
jo
cmpsl
jp
rolb
enter
adc
jp
push
sub
jno
cmpsl
ja
cmp
aam
iret
inc
pop
inc
es
dec
dec
sub
das
sbb
in
test
dec
je
cmp
dec
inc
mov
bound
cmp
mov
ss
shll
iret
ds
mov
push
mov
fisttpl
push
jo
mov
cmp
jg
pop
leave
in
rorb
mov
push
xor
sub
rorb
int3
adc
xchg
jge
test
out
sbb
or
int
mov
notl
sub
sub
cld
in
sub
les
je
sbb
shlb
int3
hlt
push
inc
je
arpl
dec
das
inc
mov
out
push
movsb
shll
sbb
lea
push
test
orb
cmp
test
stos
sti
iret
pop
call
pop
pop
pop
push
aaa
popa
int3
pop
push
cmp
rcl
sub
inc
cmp
movsb
sbb
mov
mov
mov
repz
bound
stc
fidivrs
shlb
pop
xor
ljmp
adc
test
mov
cli
aad
divl
shll
sub
push
push
outsb
outsb
fs
pop
dec
icebp
lret
in
aas
xor
pop
cmp
sub
data16
repz
cmp
out
and
pop
xchg
jo
mov
addr16
lret
fistps
in
data16
inc
std
push
or
sub
add
jns
sbb
outsl
cmp
dec
xor
xor
pop
fstps
and
movsl
cli
xchg
std
sarl
ret
shl
jl
aam
dec
adc
call
ret
push
mov
in
push
stc
xor
pop
push
div
inc
clc
pop
repz
mov
mov
or
add
push
sbb
loope
mov
icebp
xor
adc
ja
cmp
mov
ss
jb
nopl
daa
push
mov
das
pop
dec
imul
enter
lods
sbbl
mov
pop
lret
or
aaa
jns
cmpsl
mov
cmpsl
push
das
in
mov
jne
cwtl
enter
aaa
pusha
in
nop
arpl
mov
dec
clc
and
pushl
popa
out
aas
ret
fxch
lret
pop
sub
enter
pop
or
add
push
push
int3
xor
lahf
cmp
or
and
in
xchg
jle
xor
fnstenv
xor
clc
dec
roll
data16
fs
dec
mov
xchg
sub
js
test
mov
leave
cmpsl
inc
mov
lods
call
xchg
rorb
repnz
jg
std
cmp
dec
push
fiaddl
add
ret
in
mov
iret
inc
sbb
pop
adc
dec
sub
rcl
cltd
sub
in
xchg
lods
fisttpl
outsb
scas
cltd
dec
mov
inc
jno
lret
mov
push
call
jo
xchg
data16
sahf
mov
pop
imul
in
out
out
int
aad
enter
pop
dec
dec
sub
push
jmp
sub
inc
ret
xorl
dec
lods
fdivs
pop
data16
mov
movsl
add
mov
test
pop
es
and
out
cmp
call
cs
lret
ss
subb
das
dec
nop
cmp
aaa
call
stos
movsb
stos
lahf
mov
ret
xchg
jnp
pop
dec
arpl
test
adc
add
fdivl
or
and
xor
ret
subb
movsb
pop
nop
pop
fistps
mov
xor
lret
ror
cmp
pushf
add
out
or
pop
push
fdivr
push
out
pop
call
fwait
xorb
mov
lcall
stos
jno
or
add
mov
cld
pop
or
cld
pop
add
nop
aam
loopne
fcomp
jle
pushf
jg
test
je
pop
xchg
mov
jecxz
aas
ret
inc
les
arpl
jmp
pop
mov
cs
pop
pushf
dec
test
cltd
add
dec
pop
push
pop
shr
movsb
jecxz
jno
fmull
adc
push
xchg
push
in
sbb
mov
jmp
fistl
out
popf
dec
imul
push
outsl
nop
and
inc
jle
xor
push
lods
loope
cmp
jno
insl
in
in
sarb
pop
fs
adc
push
in
in
lods
mov
addr16
sub
mov
mov
ret
cli
sub
pop
aaa
adc
or
add
dec
clc
mov
fadd
mov
cwtl
pop
xlat
mov
push
dec
mov
push
les
mov
mov
dec
xchg
xchg
dec
movb
push
push
shlb
call
sub
xor
dec
dec
jb
cmp
stos
faddl
push
mov
push
jo
adc
and
pop
dec
rdpmc
inc
leave
dec
scas
sets
out
fistpll
xchg
scas
pop
cltd
adc
movsb
fisubrl
outsl
adc
xchg
icebp
imul
jp
and
cmp
aad
in
loope
mov
and
orl
cld
outsb
imul
addr16
lods
imul
mov
shr
vphaddwq
imul
mov
pusha
xor
dec
inc
popf
shrl
lock
shrb
lret
cmpsb
jecxz
xchg
mov
jnp
shlb
test
orl
lret
push
sub
cmp
pop
pop
mov
repz
dec
mov
jbe
stos
mov
aas
jno
jle
dec
pop
rol
mov
pop
cmp
push
mov
push
adc
mov
popf
push
mov
int3
jmp
ss
ja
or
lret
jecxz
cmc
dec
out
pop
in
sbb
xchg
cs
inc
fs
stc
mov
jns
and
mov
sub
push
jns
add
mov
cmp
adc
inc
fidivl
push
sahf
jmp
xor
xchg
sbb
jnp
mov
ficomps
cmp
cld
pop
dec
insb
or
daa
jp
push
xchg
sahf
cmpsb
inc
clc
xor
and
jne
cmp
dec
add
jg
sub
lret
sub
inc
lock
fidivs
ja
mov
inc
adc
xor
jl
pop
loope
int3
or
sbb
fsubl
pusha
ret
bound
popf
stc
aas
std
sbb
andl
xor
lahf
repz
push
and
jmp
ret
stos
pop
inc
insb
add
sbb
outsl
jmp
cmp
mov
adc
test
push
mov
push
repnz
cmp
fcmovu
mov
pop
outsb
arpl
cmp
sub
add
adc
sub
xchg
lea
mov
mov
loopne
xor
xor
xor
andl
add
mov
fistpll
cld
add
js
inc
daa
imul
cld
cmp
push
push
adc
shrl
je
arpl
adc
sbb
std
ficoml
xchg
pop
xchg
dec
daa
sub
sbb
ds
movsb
loop
mov
test
popf
push
repz
push
pop
lods
mov
in
mov
jae
sahf
cmp
jg
and
and
sub
xorb
movsb
and
pop
stc
push
pop
mov
mov
rcrl
test
add
fisubs
push
rcrb
mov
xor
push
test
aaa
jne
test
jns
sti
cli
pop
aam
dec
out
mov
in
xchg
mov
cmp
inc
xor
xchg
aaa
and
xor
and
leave
jo
fs
push
sub
mov
push
loopne
mov
mov
or
addb
lea
repnz
call
sub
mov
cwtl
mov
shrb
pop
sarb
pop
sbb
cltd
pop
mov
frstor
sar
adc
fs
out
rcl
xor
fsubrl
bound
std
movsb
and
push
bound
decl
stc
xchg
hlt
test
mov
clc
mov
dec
loop
mov
cwtl
cs
inc
out
std
xchg
test
sub
fildl
mov
pop
inc
cmpsl
gs
adc
movsl
loope
out
movsl
mov
movsl
daa
call
shlb
sub
mov
lea
sbb
lahf
xchg
aad
mov
stc
ror
fstpl
or
xchg
stc
in
fcomps
call
cmp
mov
sub
jl
add
fs
xor
out
jecxz
popa
insb
pop
sahf
loop
cmp
mov
inc
xlat
push
xor
xchg
xor
pop
repz
push
jne
push
xor
call
js
cmpsb
xchg
mov
filds
in
and
data16
nop
mov
pop
sahf
adc
iret
es
in
jmp
pop
or
mov
sbb
stos
or
inc
test
mov
add
pop
rcrl
popa
sub
mov
push
data16
cltd
mov
fwait
popf
and
jle
mov
stos
fs
lds
dec
or
inc
dec
testb
mov
in
add
movsl
mov
ljmp
pop
rolb
out
sbb
popf
je
dec
cs
aas
fimull
adc
push
xchg
flds
fs
cmp
push
roll
call
aaa
sub
xor
hlt
popa
pop
aaa
shlb
sub
pop
and
mov
popa
es
ds
in
subw
div
push
and
sbb
test
inc
out
lahf
clc
cmp
mov
ljmp
stc
pop
cwtl
loope
testb
lock
loopne
or
xor
adc
mov
nop
mov
push
out
ss
fcmove
mov
and
imull
sbb
mov
mov
les
pop
xor
ds
cmpsb
in
push
adc
fwait
hlt
pushf
loop
dec
ja
push
loope
aad
int3
fs
add
xlat
shl
enter
xor
and
gs
xchg
mov
stc
push
daa
rclb
gs
pop
scas
int
mov
inc
sbb
das
mov
loope
ja
stc
pop
fcmovnb
mov
or
sbb
nop
mov
jnp
xor
push
insl
loope
push
mov
rorb
mov
xorl
insb
lock
mov
bound
lds
jbe
shll
shr
add
xchg
cmp
test
ljmp
pushf
sub
pop
outsb
lea
iret
outsb
movsl
pop
xchg
xor
ret
je,pn
adc
push
stos
xlat
fidivrl
pushl
cmp
mov
repnz
add
loop
xchg
ret
clc
cmp
test
mov
or
fbstp
leave
mov
mov
push
dec
in
aaa
pop
xchg
mov
jmp
add
ds
sub
ja
sbb
add
sbb
movsl
lds
out
test
cmp
lahf
in
mov
adc
std
xchg
sti
and
ret
cltd
push
in
aas
dec
mov
add
xchg
stos
jae
push
scas
pop
mov
int3
adc
mov
jmp
adc
dec
les
dec
pop
mov
pop
and
mov
mov
fcomi
pop
mov
enter
aaa
xor
mov
add
xor
xor
xchg
js
or
aad
mov
fldl
bnd
out
cmp
lds
add
jmpw
jmp
jp
cmp
pop
adc
dec
into
sub
push
xchg
jp
dec
inc
dec
jg
push
int3
cmp
cmp
sub
cmp
je
in
and
cmpsl
inc
or
andl
cmp
leave
cmpsl
and
jns
and
out
jp
cltd
mov
pop
mov
pop
sahf
mov
test
inc
jbe
mov
mov
cld
lret
ret
leave
sbb
dec
arpl
or
jae
pop
or
mov
rclb
pop
jo
fiaddl
or
mov
cmp
and
aam
call
hlt
mov
add
lds
stos
add
enter
push
jns
xor
push
bound
iret
sub
nop
mov
lret
mov
sub
or
adc
sbb
push
cs
sbb
add
xchg
dec
in
mov
xor
pop
xor
cwtl
mov
xchg
inc
xchg
dec
and
pop
incl
mov
stc
dec
or
mov
add
fidivs
push
mov
mov
ds
fstpl
mov
loop
push
cmp
pushf
push
or
nop
push
adc
hlt
push
mov
dec
loop
cmp
cltd
xchg
stos
sub
das
sbb
xchg
add
push
cmpsb
jmp
push
xor
sbb
stos
cmp
and
faddl
inc
xchg
adc
in
out
repz
mov
in
mov
fcmovb
insl
inc
lcall
stos
sub
mov
lods
mov
paddd
divl
sub
sbb
lds
mov
aaa
ret
int
test
mov
andb
ret
jo
mov
pop
pop
rolb
mov
dec
mov
xchg
xorl
loopne
inc
lret
xlat
rolb
jns
add
clc
push
hlt
inc
mov
roll
insl
xor
xor
jne
ljmp
mov
je
jle
pusha
lea
push
cmp
or
hlt
jae
xor
cmp
inc
xor
in
pop
pop
and
xor
movsb
mov
sub
push
in
adc
sti
mov
inc
and
push
sti
pop
les
pop
fwait
mov
sbbb
imul
popa
mov
lea
adc
jge
sub
bnd
pop
sbb
popl
hlt
mov
and
scas
stos
out
lret
fadds
je
dec
jbe
and
les
in
add
push
pop
ret
in
push
jo
cmc
loope
mov
pusha
xchg
aam
or
push
adc
add
sbb
push
jmp
dec
fiaddl
xchg
sub
cld
sub
inc
lret
push
sub
mov
cmc
or
in
addr16
daa
mov
sub
and
das
dec
cmp
push
roll
xor
pop
push
dec
test
pop
cmp
imul
or
in
int3
and
sahf
out
sbb
inc
pop
movsl
mov
cwtl
xchg
sbb
test
pusha
or
dec
push
ds
scas
call
xchg
dec
decl
dec
xchg
fstps
xchg
daa
xor
fs
in
jbe
sbb
sub
adc
mov
rorb
push
gs
fisttpll
ljmp
aas
or
mov
pop
inc
sbb
and
addb
cltd
outsl
clc
int
frstor
cld
repz
outsb
daa
fnstcw
ljmp
cmp
cmpsl
test
mov
inc
jb
adc
jae
aas
cmpsb
cmp
adc
in
sahf
sub
sbb
sbb
mov
ret
nop
sub
mov
imul
cmc
lcall
cmp
jnp
jp
hlt
addr16
dec
int
test
rorb
in
jle
pop
push
inc
adc
jb
mov
jno
lock
pop
xor
cmp
mov
in
loop
dec
push
xchg
cld
repnz
jl
out
push
mov
fucomp
cmp
aad
mov
xchg
mov
cld
adc
movsb
jno
cmpsl
lods
add
cwtl
mov
pop
or
cmc
lods
xchg
sub
cltd
imul
jge
cmp
stos
out
int3
iret
inc
inc
loope
fistps
rclb
push
js
cltd
pusha
dec
adc
push
sub
lret
pushf
mov
cmpb
sub
sub
loope
pop
in
inc
cmp
cli
lret
je
inc
outsb
jmp
push
fldenv
xchg
and
fimuls
push
cs
push
mov
xchg
dec
icebp
mull
xchg
inc
test
adc
lods
push
cmp
sahf
xchg
shl
pop
shrl
ror
leave
out
adc
hlt
test
lret
repz
inc
movsl
outsb
rcll
addb
cmp
jp
inc
mov
insb
inc
push
int
cmp
sub
flds
loopne
int
mov
push
ret
mov
aad
adc
rol
lret
jp
divl
push
cltd
xor
hlt
mov
out
adc
sti
mov
mov
cmp
insl
push
rolb
xchg
xchg
cwtl
in
neg
pop
jae
inc
mov
mov
rcrl
xor
ss
cmp
cmp
cmp
out
mov
sub
xor
jbe
adc
jo
cmpsb
xchg
cmp
sub
fstpt
and
popf
ljmp
lock
adc
movsb
mov
mov
ja
and
mov
mov
cld
repz
jecxz
push
inc
mov
in
inc
xor
std
mov
inc
jle
std
pop
pop
int
hlt
add
dec
add
cmp
add
push
xor
mov
xchg
subb
mov
push
dec
les
xor
push
addr16
lock
lea
out
sub
pop
sbbb
mov
mov
inc
lock
test
je
lds
cmp
xchg
mov
jl
add
inc
push
loop
and
dec
sub
frstor
mov
ret
push
cwtl
dec
fildl
sub
adc
xor
daa
sbb
rol
in
aam
sub
adc
adc
cmp
aam
mov
cmp
push
add
push
sar
test
test
xchg
frndint
les
or
mov
cmovg
push
stos
fsubrl
and
inc
loopne
lods
pop
or
aad
xor
stos
pusha
fdivrl
sar
mov
jge
push
cmc
stc
inc
sbbl
cmpsl
movsb
push
pop
sub
addr16
ljmp
idivb
les
xchg
mov
outsl
ja
and
mov
mov
cltd
fists
sub
xchg
sub
adc
test
jns
and
push
mov
or
mov
cwtl
fildll
mov
mov
or
and
push
decl
call
mov
leave
mov
dec
bound
sar
adc
xor
fwait
push
test
or
test
out
add
cmp
xchg
push
push
mov
pop
and
mov
jg
lea
loop
sahf
aad
jbe
cmpsl
cmpsl
push
cmp
jl
inc
mov
push
mov
pop
sahf
push
and
icebp
mov
add
add
xchg
shlb
std
add
xchg
jl
dec
or
xchg
jo
sub
stos
cmpsb
inc
jmp
in
adc
sbb
adcl
jl
xchg
mov
sbb
or
imull
pop
cs
pop
rcrb
negl
mov
cmpsl
mov
and
popa
adc
enter
pop
dec
mov
add
ficoml
adcb
jg
push
cmp
pop
loopne
fld
pop
arpl
push
in
fucom
std
loopne
mov
sub
addr16
cmp
push
push
mov
cmp
ffree
mov
mov
add
test
jo
in
in
pop
shll
lcall
xor
in
pop
ret
shll
mov
repnz
addr16
jno
mov
inc
bsf
lahf
xchg
shrb
les
aad
popf
mov
and
aad
adc
aam
pop
incb
xor
mov
fcomps
adc
inc
mov
cmp
je
shr
xor
or
ret
in
arpl
xor
fists
mov
mov
or
jmp
xlat
cmp
clc
stc
mov
clc
movsl
nop
dec
cld
in
data16
aaa
sbb
sub
cwtl
xchg
jo
inc
fcoms
test
lock
bswap
jne
js
nop
xor
sub
call
mov
sub
sti
cmp
push
mov
es
jne
inc
lods
cmpsl
push
xor
out
sub
cwtl
and
std
xor
xchg
xchg
or
inc
pushf
cmpsl
cs
adc
add
and
std
pop
pop
int
repnz
or
add
dec
andb
push
outsl
push
xchg
mov
sbb
in
jecxz
loopne
iret
or
fiaddl
mov
xor
fwait
aam
push
aas
or
daa
jle
test
in
and
xchg
and
xchg
and
add
fucom
hlt
sbb
rcll
paddw
and
mov
outsl
jno
mov
inc
arpl
fistpl
jae
es
jle
out
mov
insl
cld
enter
pop
xor
lret
sbb
fisttps
mov
scas
cs
pusha
fidivrl
jmp
int
subl
je
push
mov
cwtl
lret
gs
lock
cmp
jg
and
bound
mov
or
sbb
xchg
leave
les
je
mov
movsb
push
xor
xchg
imul
incl
jnp
or
mov
dec
test
adc
mov
mov
mov
inc
xchg
fisttps
push
pushf
mov
xor
and
adc
xlat
adc
or
xchg
imulb
out
ljmp
sub
iret
outsb
or
mov
inc
mov
jmp
lahf
lahf
aas
mov
jnp
and
pop
mov
lds
inc
cmpb
mov
daa
lods
repnz
push
mov
stos
cmpsb
pop
iret
push
stos
sbb
inc
call
out
test
push
inc
sub
mov
stos
rclb
roll
inc
data16
jns
inc
shll
sub
int
push
push
sbb
sub
mov
push
mov
stos
mov
dec
pop
pusha
loope
sub
xchg
cmp
add
imul
lahf
insl
mov
in
in
jne
jo
inc
jp
call
lock
mov
rorb
sbb
lea
jmp
js
cmp
nop
fildl
bound
xchg
mov
hlt
test
and
sbb
ss
sub
adc
lds
jg
sub
aad
cmpsl
pop
imul
cmpsl
xor
clc
dec
sbb
or
jmp
into
std
pusha
fdivr
push
xchg
or
aad
in
inc
mov
idiv
cmpsb
stc
out
lret
mov
rcrb
mov
arpl
push
push
lret
push
stc
sti
or
and
xor
cwtl
sbb
mov
aas
mov
mov
in
sbb
dec
ljmp
movl
mov
xchg
cmp
iret
inc
push
xchg
and
sub
push
cld
dec
inc
push
xor
mov
cli
mov
ffree
fs
lds
jp
inc
or
int3
data16
cmp
mov
aas
popa
xchg
mov
or
adc
stos
arpl
leave
mov
cmp
mov
shll
push
push
push
scas
push
aas
xchg
mov
xor
mov
sbb
adc
outsb
sarl
aam
xor
lods
in
leave
cmp
jmp
jbe
mov
jl
jmp
aam
xchg
xchg
adc
loopne
fiaddl
sub
dec
or
inc
in
sbbl
jbe
inc
xor
fdivrs
pushf
fiadds
das
aam
int3
and
sahf
in
pop
and
div
and
faddl
sub
cmp
xchg
out
jmp
sub
inc
sarb
jg
sub
sbb
inc
or
adc
push
adc
imull
sub
push
cmpsl
clc
sub
pop
dec
sar
pop
inc
clc
jno
data16
push
cltd
adc
movsb
mov
cwtl
shll
shrl
mov
hlt
cmp
jbe
in
pusha
fidivrl
pop
adc
mov
pushf
sbb
jo
imul
ret
xor
push
adc
mov
adc
pop
adc
sub
pop
mov
ljmp
mov
arpl
sbb
mov
jae,pn
outsl
pop
mov
ret
cltd
mov
xchg
lahf
cmp
lcall
pop
adc
mov
sub
mov
push
shll
pop
test
ljmp
aad
mov
sbb
jp
xorb
rol
push
in
pop
push
std
fs
sub
cmpsl
inc
ja
dec
int3
imulb
fwait
sub
cld
or
rcrb
and
test
and
lret
inc
pop
and
lock
dec
hlt
pop
inc
sbb
repnz
aam
or
jmp
inc
mov
xor
test
mov
jl
movsl
fiaddl
hlt
stos
mov
rorl
es
pop
mov
add
pop
outsl
xor
sub
sub
sti
lahf
sub
xchg
stos
aas
cmp
addb
ret
cld
sub
movsl
mov
mov
and
sbb
aas
cmp
xchg
mov
bound
sub
je
sti
push
fcmove
xorl
push
inc
jno
or
pop
sbb
adc
aas
xchg
ds
test
mov
into
xor
lcall
mov
ljmp
test
mov
jmp
cld
out
int3
cld
pop
mov
popl
pop
xor
mov
arpl
arpl
jmp
lds
cmp
loopne
mov
les
in
ljmp
js
stos
mov
cmpsl
ret
in
test
xor
mov
cmpsl
mov
les
inc
mov
inc
cmp
jbe
rcrb
push
jbe
cmp
cwtl
adc
cltd
cmp
popf
shl
ja
rcll
jo
sbb
cmp
or
in
pop
push
sbb
jl
jmp
insl
mov
cmp
pop
outsb
lock
push
sarb
pushf
cld
add
jb
cmp
shrl
in
in
pop
in
add
int
hlt
pop
nop
cmpsl
mov
xchg
cwtl
je
lcall
mov
ljmp
xor
mov
out
dec
pop
or
test
ss
jp
pushf
fadds
jb
cmp
roll
pop
aam
in
pop
faddl
add
mov
insb
dec
test
sbb
dec
imul
enter
cmp
mov
lret
push
sub
in
sarl
pop
adc
push
bound
pop
cwtl
addr16
pop
adc
push
jae
and
pop
xchg
jb
cmp
iret
in
ss
adcl
mov
dec
adc
inc
inc
ret
cmp
sbb
add
inc
ds
addr16
inc
sbbl
sub
sub
rolb
mov
cmp
pushf
add
cmp
lods
loop
sbb
orl
and
mov
les
fmuls
mov
jl
fdivl
push
push
jbe
push
inc
jno
inc
repnz
hlt
dec
hlt
cld
dec
sbb
in
js
adc
dec
cmp
cltd
mov
and
inc
inc
cltd
and
cltd
adc
les
mov
xor
andb
bound
sub
add
aad
or
pusha
sub
push
push
clc
mov
aas
cmp
inc
pop
mov
cmp
jae
push
inc
mov
jo,pt
lock
aas
mov
ds
repnz
mov
add
xchg
cmp
pop
pusha
add
pushf
lock
stos
movsl
add
pop
stc
xor
bound
fsubl
pop
arpl
fwait
aam
pop
bound
inc
add
pushf
nop
add
inc
movsl
add
sbb
cmp
fs
xchg
jns
stos
les
jl
clc
fwait
aam
pop
inc
cwtl
movsl
rorb
mov
xor
pushf
mov
je
mov
cwtl
shrl
sub
mov
mov
dec
and
dec
dec
sub
push
jno
push
in
dec
aas
push
cmp
push
pop
mov
ljmp
mov
clc
adc
mov
rcrl
cmp
mov
mov
cld
pop
orb
add
pushf
jo
je
js
or
pop
mov
mov
dec
xchg
ds
hlt
add
mov
jbe
push
inc
jno
xor
movsb
in
int3
aas
cli
adc
aas
repnz
ljmp
in
sub
lock
ja
mov
jbe
shl
loopne
in
jge
mov
mov
push
jl
lock
cmpsb
xor
aam
dec
roll
cmp
sub
cmp
cmp
inc
add
mov
pop
mov
cmp
hlt
lods
add
and
aaa
add
nop
and
cmc
inc
add
rcrl
cmp
pop
cs
add
xor
xor
fidivs
outsl
lcall
cmp
sub
pop
pop
push
sub
or
push
sti
aaa
mov
out
pop
push
jg
sub
add
mov
ds
hlt
aam
hlt
mov
sbb
inc
jno
mov
mov
ljmp
mov
adc
xchg
add
les
push
pop
inc
adc
or
inc
arpl
pushf
mov
repz
es
adc
testl
add
jp
adcl
jge
mov
jmp
sbbb
in
pop
faddl
test
mov
insb
dec
sub
xor
loope
rcll
lods
sub
dec
jmp
mov
xchg
push
fucomp
movsb
in
mov
shl
pop
push
cmp
insb
push
dec
lcall
xor
imul
movsb
in
mov
addr16
shlb
jmp
push
repz
data16
inc
clc
testl
mov
je
hlt
mov
aas
cmp
movsb
in
cwtl
ds
fs
icebp
or
testl
cmp
cmp
cltd
gs
xor
bound
loopne
dec
push
int3
mov
dec
mov
push
xchg
lock
xchg
daa
sbb
pop
int3
fs
adc
xor
mov
pop
call
pop
in
outsl
sub
cs
bound
fisttps
shrl
outsl
data16
imulb
push
pop
jge
nop
or
pop
xor
loop
mov
add
insb
pop
ja
push
pop
jl
sar
lahf
mov
inc
pushf
xlat
sti
jo
in
out
lds
mov
cmp
and
jg
sub
icebp
xchg
mov
jmp
add
push
mov
gs
mov
adc
jmp
inc
xchg
and
and
jbe
pop
cli
test
jno
jmp
push
inc
pop
push
data16
adc
pop
hlt
push
jl
hlt
xchg
mov
aas
and
lea
in
pop
dec
loop
andl
xor
xchg
mov
dec
jo
repnz
mov
pop
in
js
shrl
repz
loop
popa
jmp
sbb
pop
fiadds
std
loop
push
push
ja
add
cmp
out
arpl
inc
sub
fdivrs
dec
loope
xorl
xchg
cld
arpl
fs
lret
mov
mov
int3
test
ds
pop
mov
aas
mov
xchg
daa
jo
jne
jns
pop
das
mov
or
fucomi
jl
or
test
das
pop
into
lods
and
sbb
leave
inc
arpl
pop
push
shlb
push
out
addr16
push
addr16
push
pusha
pop
mov
roll
repz
ljmp
sbb
push
sbb
int3
mov
pop
out
stos
sarb
subb
add
xor
jg
xor
push
outsb
sarb
cmp
cwtl
adc
jne
call
jle
mov
pop
test
or
mov
dec
movsl
loop
and
dec
and
icebp
dec
leave
cli
rcl
inc
push
outsb
and
cmpsb
inc
mov
orl
and
cwtl
loope
add
add
into
xor
popa
dec
mov
mov
cmp
xchg
or
addl
dec
les
sub
pop
dec
adc
sbb
in
push
jl
or
sbb
pop
pop
outsb
mov
in
adc
xchg
xchg
inc
xchg
repnz
dec
mov
das
dec
sub
fadd
fisubs
fmuls
out
jecxz
add
in
dec
mov
call
push
or
lock
dec
push
in
test
insb
filds
push
pop
stos
js
cmpsl
pop
negl
imul
dec
mov
push
cmp
icebp
das
dec
sbb
lds
xchg
sar
pusha
ret
dec
pop
mov
add
les
lret
sti
mov
cmp
mov
add
dec
or
mov
ret
xchg
shlb
cmp
es
pop
ret
cmp
and
mov
xchg
pop
stos
loope
jne
fstl
xorb
roll
push
sub
cmpsl
xor
into
xor
cmpsb
sbb
leave
outsb
sub
xor
lods
icebp
mov
fsubs
mov
mov
cs
int3
push
sbb
and
add
push
jne
xor
sti
andb
push
adc
jecxz
movl
test
pop
aas
push
enter
int3
xchg
cld
pop
push
pop
sti
add
adc
ret
daa
int
mov
mov
cmp
insl
jnp
nop
lods
bound
cmp
ret
jo
adc
imul
insl
push
push
jmp
xor
sub
add
xor
lahf
movsb
push
dec
icebp
cltd
lcall
je
jno
sub
cmp
movsl
aas
xor
sub
jge
xchg
jp
lret
test
xchg
inc
ret
lret
and
movsb
pop
lock
insb
repnz
jle
dec
cltd
fmull
lret
cwtl
jge
pop
mov
push
imul
ljmp
pop
loopne
insb
repnz
jle
sahf
shrl
insb
push
push
jbe
push
in
clc
push
ljmp
xlat
lret
fcompl
and
stos
mov
sub
sbb
sub
fs
rcrl
lods
clc
cmp
mov
inc
daa
sbb
in
add
inc
xchg
xchg
lcall
pop
adc
jle
sbb
xlat
xor
mov
fildl
cmp
inc
pop
das
daa
divl
push
or
xlat
mov
pop
push
into
aas
sub
jl
xor
adc
rorb
lret
movsl
out
data16
insb
lods
pop
add
sbb
sahf
aad
push
ss
mov
outsl
push
cmp
jp
add
sbbb
cld
mov
mov
iret
jo
popa
push
adc
cmpsb
scas
mov
push
push
sbb
icebp
sub
jb
mov
loope
push
shlb
imulb
mov
outsl
or
mov
pop
and
je
incl
jmp
jg
pop
loope
xchg
pop
arpl
dec
rorl
pop
fisttps
inc
mov
lcall
inc
cmpsl
sub
xchg
jo
xchg
movsl
pop
fistps
mulb
jle
fucomip
aam
pop
xchg
movsl
sub
imul
lahf
fldl
cli
mov
ss
push
and
nop
push
in
out
cmp
pushf
loop
aas
dec
jecxz
out
pusha
sub
xchg
int3
mov
jne
pop
mov
dec
add
rolb
lods
imul
mov
aas
ret
push
shll
and
mov
jo
xchg
inc
addr16
out
dec
or
inc
jo
mov
jg
push
push
aad
and
fistl
push
inc
loop
xor
ret
xor
mov
movsl
jae
push
out
mov
decl
stos
pop
sar
adc
inc
xchg
mov
fisubrl
add
and
xchg
dec
mov
xlat
mov
movsl
aas
add
jle
aam
sbb
and
ja
mov
mov
sub
and
mov
dec
pslld
dec
mov
jp
sahf
sub
mov
adc
cmp
inc
inc
push
sub
or
jmp
and
call
xor
cmp
push
orl
push
sahf
sub
mov
adc
cmp
inc
inc
push
enter
shl
dec
addb
rolb
addb
js
mov
adc
shr
adc
test
clc
incl
movsb
mov
dec
addb
push
jb
cmpsb
mov
mov
push
fsubrs
push
jnp
hlt
pop
push
loopne
rorl
fistl
pop
xchg
xchg
sub
in
addb
popa
adc
shl
loop
cs
pop
add
sub
test
lea
test
or
mov
lahf
icebp
rolb
xchg
into
pop
fistps
add
cmpsl
mov
mov
mov
xchg
nop
jno
data16
movsb
push
test
fadds
adc
fwait
jp
adc
push
imul
loope
iret
or
call
and
pusha
lret
or
stc
stos
inc
dec
push
mov
mov
adc
roll
add
dec
and
iret
pop
rorl
pminsw
popf
pop
arpl
cld
repz
xor
mov
loope
xchg
into
sbb
adc
fs
lods
xchg
and
mov
stos
in
mov
cwtl
jge
mov
cwtl
jge
pop
inc
je
pop
in
push
jo
pop
xchg
mov
fimull
pop
dec
add
dec
out
jle
fwait
adc
mov
xchg
pushf
add
xchg
mov
mov
dec
pop
pop
in
in
je
jae
mov
orl
les
repnz
jle
add
lcall
cwtl
jge
pop
fs
pop
in
push
jo
mov
stc
push
cmpsl
test
mov
mov
repnz
mov
mov
or
andb
adc
pop
xchg
jp
xor
push
popa
mov
fs
into
lcall
and
in
inc
aas
mov
ds
and
fsubrl
aam
pop
or
not
les
sub
sub
popf
je
xchg
mov
cmp
mov
les
pushf
ljmp
insb
mull
dec
xchg
xchg
and
add
dec
or
xor
cld
repz
jne
cmp
inc
adc
xor
jno
or
add
add
and
xor
sub
mov
push
outsb
pop
fdivr
cmp
pop
je
mov
push
in
sub
lahf
lea
dec
push
mov
movsb
mov
add
es
adc
stos
loope
hlt
movsl
sarl
push
hlt
cmpsl
pushw
cld
mov
je
bound
xchg
lds
cltd
lods
imul
inc
loopne
mov
ds
sub
insl
mov
pop
into
pop
or
in
pushw
in
mov
inc
std
adc
xchg
lds
cltd
lods
imul
mov
aas
ret
inc
les
into
outsl
movsb
and
cmp
aam
push
pushf
imul
mov
addl
mov
jmp
loope
add
ror
or
xchg
adc
push
and
into
xor
lds
fnstcw
test
gs
push
loop
sub
add
movsl
call
lock
jbe
xchg
pop
daa
lret
add
mulb
movsl
std
jg
test
je
pop
xchg
mov
arpl
aas
ret
inc
rcr
outsl
movsb
pop
je
in
imul
jno
mov
data16
or
add
or
add
sub
xor
adc
push
popa
mov
jae
into
das
push
hlt
pop
xchg
fdivr
cmp
push
in
cmp
cmp
aam
dec
jbe
adc
cmp
js
jo
jmp
inc
fmull
ljmp
mov
cmp
sub
mov
mov
inc
cmpsl
pushw
dec
mov
in
dec
sbb
mov
pop
mov
cltd
shll
sarb
imul
mov
adcb
push
push
insb
mov
mov
adc
hlt
sahf
insb
std
push
dec
jecxz
dec
addb
mov
xor
leave
shrl
into
clc
int3
mov
test
push
jbe
push
in
mov
in
xchg
cwtl
xchg
push
dec
mov
daa
out
xor
mov
and
cld
stos
lods
into
jle
add
lcall
cwtl
jge
pop
fs
pop
in
push
jo
dec
popa
or
push
dec
pop
dec
add
mov
jne
out
cld
inc
jae
xchg
sti
sbbb
mov
jmp
dec
nop
ds
xlat
cwtl
xchg
inc
popa
or
push
aad
in
cmpsl
test
mov
cmpsl
or
jmp
jle
jp
xchg
cwtl
rorl
add
pushf
popa
pusha
sbb
frstor
adc
sub
loopne
ret
pop
sbb
test
dec
xchg
mov
xchg
push
cwtl
rcrl
mov
js
mov
push
sub
cmovg
cmp
aam
das
pop
pop
cmp
sub
ss
mov
xor
pop
mov
mov
dec
pop
pop
in
in
rolb
cmp
inc
sbb
icebp
orb
stos
jo
pusha
push
das
pop
adc
les
adc
stos
mov
sbb
pop
fdivs
fmuls
mov
adc
xor
fsubrl
pop
mov
fidivl
scas
test
sbb
fwait
dec
into
mov
xchg
dec
inc
test
lods
jle
xchg
das
call
aas
mov
jle
loop
inc
bound
xchg
add
adc
not
sbb
test
dec
push
movsl
mov
cwtl
rcll
rcrl
sub
repnz
jmp
adc
xchg
frstor
adc
sub
loopne
loope
testb
dec
test
cmp
adc
add
xor
andb
and
pop
dec
sysenter
mov
mov
mov
sub
loopne
loope
mov
inc
sbb
movsb
mov
cwtl
shll
cwtl
sarl
adc
in
repnz
jmp
adc
xchg
xchg
cmpsb
outsb
mov
jnp
sbb
in
xor
add
jle
pop
stos
push
inc
add
pop
popa
cli
mov
je
pop
or
jno
sbb
xchg
scas
insb
movsb
mov
dec
cmovp
xor
xor
jle
adc
push
ja
mov
sub
inc
jo
cmp
outsl
shl
sub
inc
xor
jl
lods
imul
push
xor
fadds
stos
ror
lahf
mov
repnz
or
mov
popa
stos
mov
test
pop
daa
inc
mov
enter
fwait
sub
xor
sub
test
lds
lods
mov
test
out
cmp
cmpsl
pushw
dec
mov
in
dec
push
test
hlt
pop
cbtw
clc
or
lea
out
sub
pop
mov
les
fldt
loope
sti
push
mov
xchg
mov
xlat
sahf
add
ror
pop
call
jmp
adc
xchg
frstor
adc
ja
sbb
in
das
inc
into
fbld
in
jle
pop
inc
push
inc
cwtl
pushf
aam
out
fdivr
pop
adc
decl
cli
pop
les
inc
popa
or
push
mov
cs
cmpsl
sti
arpl
jmp
jo
mov
movsb
popa
cli
mov
je
pop
ljmp
or
xor
std
pop
pop
int
cmpsb
jne
add
daa
dec
out
inc
cmp
and
rcrl
inc
ds
pop
lret
cmp
fucomip
aad
stos
push
jb
hlt
cmpsb
push
orb
jle
dec
sahf
nop
cmp
in
test
push
jecxz
les
mov
pop
cwtl
jp
repz
xchg
pusha
adc
inc
sub
in
adc
pop
xor
addl
insb
je
in
and
test
into
add
cld
out
mov
xchg
adc
test
dec
into
jle
std
pop
pop
int
repnz
jae
je
sub
inc
push
inc
aam
jle
into
pop
dec
imul
lret
pop
lret
mov
ss
sub
cld
mov
inc
dec
inc
loop
fimull
xor
adc
inc
pusha
dec
ficoml
clc
cmp
fprem
iret
pop
lds
cld
outsl
push
lods
aam
sub
hlt
push
mov
or
push
mov
loop
pop
or
mov
mov
mov
lods
aam
mov
cltd
cmpsl
sar
cld
imull
outsb
and
dec
add
xlat
stos
subb
inc
lldt
mov
test
js
das
inc
fwait
sahf
jno
outsl
call
or
shr
aas
inc
push
out
and
popl
mov
cs
std
mov
movsl
in
test
nop
aas
cmp
outsl
or
rcll
out
inc
enter
mov
outsl
mov
shl
vzeroupper
int
adc
stos
out
inc
shrl
aad
das
pop
mov
mov
xchg
fxch
fcmovbe
inc
outsl
jg
xchg
rclb
fistl
dec
cmp
cmp
and
push
test
push
pop
out
mov
loope
ja
wrmsr
mov
cs
cmpsl
cmpsb
imul
loope
jno
stos
add
xor
cltd
and
or
dec
call
mov
sbbb
out
sub
pop
sbbb
mov
rorb
or
inc
jmp
mov
cmpsl
mov
dec
pushf
mov
je
mov
or
and
int3
dec
pop
pop
in
in
pushf
xorb
test
orl
les
lods
lods
jle
stos
stos
cmpsl
sub
sub
test
data16
or
jne
add
fidivrs
xchg
scas
insb
movsb
mov
add
es
outsb
jl
hlt
bound
stos
ficoml
inc
ja
mov
push
inc
jo
cmp
jae
cwtl
xchg
and
lret
imul
cltd
push
dec
or
inc
out
and
shrl
add
mov
sub
mov
inc
frstor
adc
sub
mov
mov
inc
jbe
adc
shr
adc
shrb
clc
xor
mov
mov
sub
cmovg
cmp
aam
stc
sbb
imul
mov
popa
push
popa
cli
mov
sub
push
push
in
mov
pop
sub
cli
dec
sbb
adc
in
out
pop
fs
and
loope
sub
lret
outsb
pop
mov
in
repnz
xor
test
call
lds
jmp
push
shr
aam
cltd
lahf
popf
pop
test
push
lods
or
inc
je
imul
or
aaa
sarb
adc
loopne
xor
pop
faddl
mov
popf
pop
sti
pop
and
mov
in
cmp
and
addr16
mov
rclb
inc
and
fisubrs
push
data16
push
cmc
xlat
mov
pop
enter
arpl
inc
add
fdiv
mov
addr16
aad
sbb
mov
shll
inc
add
xchg
push
cmp
lcall
rcll
jge
jae
mov
lahf
aaa
xor
xchg
call
gs
orb
push
rcll
xor
cmp
scas
dec
daa
dec
mov
test
sub
cwtl
sbb
in
mov
out
mov
mov
movsb
ficoml
enter
or
jp
lods
test
dec
cmp
in
adc
sub
pusha
outsb
push
rcrl
mov
xchg
loope
fimull
test
fistps
mov
pop
inc
mov
xor
call
or
mov
xchg
sbb
sahf
dec
stos
mov
popa
imul
jmp
pop
cld
push
icebp
mov
lods
mov
and
xchg
pop
test
inc
cwtl
clc
decl
jae
sub
mov
jp
outsb
push
test
pop
cmpsb
cltd
add
dec
mov
add
inc
pop
mov
fiadds
pop
xchg
cmp
aad
inc
and
movsl
outsb
stos
xlat
enter
add
enter
sahf
pop
inc
add
inc
popf
mov
or
adc
push
inc
aam
mov
out
ljmp
ss
adc
jae
rcll
fistpll
inc
pop
inc
bound
cmpb
inc
icebp
jg
dec
xor
mov
cmp
pop
movsb
mov
mov
push
mov
in
add
rorl
shl
loope
adc
mov
ja
dec
inc
test
repz
adc
mov
dec
ror
xchg
and
mov
cld
or
dec
mov
and
lea
js
pop
inc
mov
sub
std
out
leave
mov
popf
or
icebp
js
jns
inc
sub
or
call
int3
xchg
aad
pop
pusha
sub
lahf
pusha
sub
and
inc
mov
add
js
outsb
mov
lcall
pop
dec
mov
pop
push
sarb
aaa
shll
dec
cmp
inc
or
xchg
stc
push
lds
int3
test
pop
leave
add
mov
or
add
push
mov
mov
cmp
data16
push
sbb
cs
cs
push
inc
inc
push
arpl
jge
mov
sbb
inc
mov
push
inc
imul
imul
es
jp
sbb
cld
stos
adc
sub
jp
or
mov
jo
jne
popf
lahf
stc
ficomps
shll
imul
xor
pusha
aaa
addl
jmp
cld
jecxz
sub
inc
aas
ss
mov
mov
cld
jecxz
mov
xor
sarl
movsb
scas
js
jb
mov
push
jns
pop
out
sbb
push
inc
xchg
jge,pt
cli
mov
clc
push
cmp
repnz
push
test
les
sub
dec
jl
adc
xchg
sub
sbb
pop
cmp
inc
or
rclb
jnp
sub
icebp
cmp
sarb
sub
dec
pushl
lahf
jne
ds
dec
in
ret
dec
stos
in
mov
hlt
fcompl
mov
js
stos
mov
lahf
jge
push
rcll
jecxz
add
xchg
movsl
mov
inc
inc
jp
rcrb
popf
sbb
dec
inc
fwait
xchg
inc
sarl
int3
jne
adc
inc
xchg
jnp
movsb
mov
mov
xlat
inc
mov
xchg
pusha
mov
add
or
xor
mov
cltd
mov
cmpsl
jmp
ret
out
aas
ret
fwait
adc
xor
bound
xchg
jge
repz
cmp
dec
ret
bt
idiv
mov
sbb
lret
jmp
jno
push
mov
adc
or
mov
adc
jns
adc
shll
mov
or
in
mov
out
xor
mov
jge
or
push
jmp
add
push
shr
lods
cmp
mov
out
cmpsl
movsb
mov
jnp
ficomps
jp
jnp
mov
ja
iret
daa
inc
xchg
jp
inc
enter
sbb
stos
ret
sub
lods
jo
lcall
or
jl
bound
inc
dec
jecxz
dec
cmp
pop
lods
add
popf
je
mov
xlat
cltd
pop
cmp
in
repnz
jle
jmp
test
cwtl
pop
mov
repnz
pop
xor
hlt
sbbb
mov
movsl
inc
mov
pushf
enter
outsl
and
popl
rclb
mov
mov
mov
add
sub
arpl
cmpsl
xchg
in
fdivl
fimull
jmp
sub
sub
leave
cmp
xor
sub
mov
aam
je
dec
jg
xchg
and
sub
cmpsb
fsubl
int3
cmpb
jmp
jno
push
jle
movsb
sub
mov
es
in
test
xor
cmp
adc
dec
xchg
adc
push
xor
xor
inc
dec
xchg
fmulp
nop
aad
and
cmp
xor
inc
or
pop
sub
into
sbb
mov
xchg
mov
jmp
cmp
inc
cmpsb
ja
pop
pop
cmp
dec
cld
mov
jl
jge
inc
mov
sbb
hlt
and
cmp
fidivrl
data16
hlt
jge
adc
mov
dec
mov
cmovne
call
sub
cmp
lret
test
push
xorl
pop
mov
daa
jmp
xchg
inc
bound
mov
push
xchg
aas
push
adc
cmp
lret
jo
subl
jne
sar
test
inc
inc
xchg
adc
gs
push
pushf
imul
lcall
test
dec
adc
imul
adc
pop
icebp
mov
inc
sub
mov
add
jbe
mov
jae
cmp
mov
sti
outsb
mov
mov
inc
jmp
jl
lret
pop
mov
sti
inc
mov
mov
push
pop
mov
js
shlb
sbb
dec
cli
add
inc
add
bound
and
test
pusha
in
push
das
mov
cmpsb
xor
enter
add
jo
fs
sbb
cwtl
pcmpeqd
in
inc
hlt
dec
mov
ljmp
out
popf
mov
pop
xchg
sahf
addr16
sub
push
jbe
adc
inc
clc
ja
or
out
or
test
mov
call
fcoms
adc
daa
and
shrl
lods
or
ds
xchg
sbb
sbb
arpl
aaa
push
inc
add
in
sub
add
dec
imul
mov
mov
mov
push
repz
inc
cltd
jmp
jno
push
insl
push
in
and
cmpsb
inc
push
sub
popf
movsb
inc
cmpsb
lods
xor
imul
inc
out
dec
sarb
xchg
arpl
pop
sub
mov
popf
and
shr
je
sub
and
aaa
jb
cs
xchg
mov
xchg
lea
inc
mov
mov
mov
xor
push
add
int
push
lods
icebp
xchg
lods
fldcw
mov
mov
or
and
jp
clc
movsb
push
mov
outsb
mov
cld
sbb
adc
outsl
xlat
pushf
and
lret
and
mov
pop
cmpsl
mov
adc
inc
int3
popa
loopne
cmp
loopne
push
cld
cmp
sbb
pop
inc
cmp
leave
bound
stos
imul
nop
dec
xor
jno
aas
push
ljmp
outsb
mov
int3
les
out
dec
add
call
jae
xchg
cmp
daa
or
mov
in
sbb
bound
or
int
mov
push
and
pop
int3
bound
in
cld
nop
cmp
jecxz
repz
pop
icebp
subl
adc
mov
out
xchg
call
lea
mov
xor
ljmp
inc
adc
sbb
sbb
cmp
lea
pop
imul
popa
lret
aas
add
cmp
xchg
inc
mov
insb
ror
pop
hlt
jp
inc
mov
push
sbb
inc
js
xchg
adc
cmp
ds
mov
add
movsb
and
xchg
xchg
sub
xor
sub
mov
fcmovbe
mov
jmp
daa
ficompl
mov
sub
adc
inc
push
push
cmpsl
pop
add
or
in
loop
inc
mov
sbb
adc
xchg
add
out
test
cmpsl
mov
mov
rclb
sbb
push
xor
sbb
test
icebp
subb
push
adc
in
loopne
mov
js
dec
outsl
xor
or
sbb
xchg
jo
jns
jmp
repnz
pop
mov
xchg
inc
into
int3
pop
adc
stos
xchg
and
inc
movsl
mov
adc
in
int3
xchg
and
xchg
scas
pop
testb
pop
jbe
push
in
xchg
push
test
jle
cs
insb
roll
je
pop
xchg
in
test
subb
xor
outsb
mov
cwtl
mov
fiaddl
mov
or
mov
pop
hlt
lds
lcall
stos
push
test
dec
sti
sbb
push
jnp
add
jg
js
pop
xchg
imul
in
pop
mov
out
sbb
mov
sbb
push
and
repz
cmp
push
pushf
mov
sub
xchg
xor
andl
xlat
test
adc
xchg
sbb
jl
movsb
jae
pop
fs
jb
push
loopne
mov
cs
sub
lods
cmp
sbbl
cli
stos
cltd
loop
shr
inc
push
jbe
and
in
or
xor
stos
lret
push
lcall
call
push
adc
pop
mov
adc
movsl
ret
outsl
fdivrs
inc
push
stos
jnp
fdivrl
mov
pusha
loop
test
ss
lock
aam
xor
popf
setne
add
xchg
push
pusha
call
mov
cwtl
imul
insl
shrl
dec
scas
adc
fistps
push
in
pop
test
icebp
sub
dec
loop
inc
out
dec
cltd
mov
or
cmp
sbb
fs
out
xor
mov
rcrb
call
xchg
into
cmp
sub
mov
ds
inc
xchg
mov
jecxz
stos
sahf
pop
lock
add
loop,pn
lret
fdivl
push
adc
pusha
push
pop
test
call
je
mul
pop
sub
es
mov
arpl
fistpll
add
test
jmp
inc
cwtl
xor
test
dec
cmp
xchg
mov
pop
pop
cmpsl
cmp
ds
cmp
lea
sub
jge
int
dec
adc
rcll
das
xchg
inc
enter
loopne
xchg
jo
or
xchg
in
dec
roll
pop
test
sahf
dec
cli
push
mov
fst
and
into
dec
jge
add
mov
mov
test
xlat
mov
test
jp
push
ret
mov
cltd
fistps
jmp
add
xchg
sub
inc
movsl
hlt
mov
xchg
sbb
mov
and
loopne
pop
fpatan
adc
mov
mov
aas
push
cmp
push
push
rcr
roll
mov
add
mov
pop
xchg
inc
xor
cmp
inc
or
pushf
dec
repz
and
bound
mov
aaa
movsb
jecxz
pop
and
mov
cmc
xor
inc
hlt
jp
fimuls
mov
or
add
std
fmull
xchg
inc
and
inc
insl
rorl
rcrb
pop
sbb
pop
cwtl
bound
lods
arpl
sub
enter
cmp
jl
pushw
testl
sbb
dec
mov
lds
jge
xchg
or
bound
jnp
dec
jg
xor
imul
ret
mov
dec
mov
xor
mov
xor
mov
adc
test
movsb
mov
pop
outsl
outsl
adc
pop
sbb
orb
in
leave
xchg
mov
adc
pop
mov
in
inc
or
cld
adc
aad
mov
mov
inc
mov
ja
cmova
cltd
sub
add
push
push
out
sub
out
lds
dec
scas
and
ficoml
out
jge
lods
mov
ss
jecxz
inc
lock
add
inc
in
sub
push
adc
aas
add
mov
hlt
hlt
fs
cld
leave
cmove
mov
ret
and
aad
xchg
sbb
inc
lods
xchg
inc
mov
nop
add
fwait
xchg
cmpsb
sub
pop
sbb
test
pop
jmp
adc
xchg
rcll
aam
and
cmp
test
ret
sub
mov
cmpsl
adc
cmpsb
clc
int3
scas
cld
test
cmp
cmp
mov
push
in
fsubr
add
lahf
test
es
fsubs
mov
je
and
mov
pop
das
add
lahf
xchg
decl
pop
inc
jmp
add
xlat
fs
sahf
pop
xchg
pop
addl
sbb
xor
ret
jl
int3
cmp
or
dec
lods
jg
in
inc
push
icebp
and
inc
adc
fists
fcomps
inc
out
ds
lea
add
inc
pop
test
jb
adc
push
adc
or
push
jb
rcrl
mov
lds
mov
outsb
fsubs
mov
jle
loopne
xor
fcoms
mov
pop
mov
mov
xor
push
mov
dec
push
sub
dec
pop
xchg
cmpsl
fucomp
in
mov
out
sub
mov
ret
lret
push
or
jp
xlat
or
push
mov
lret
daa
ja
jae
pop
out
inc
imul
dec
test
pop
push
fscale
and
cmpsb
sub
insl
inc
ss
data16
push
push
loope
outsl
cli
pop
insb
push
and
push
test
ret
fnsave
sub
movsb
cmp
loope
test
cmp
fwait
shl
inc
inc
cltd
jbe
std
mov
mov
xchg
or
add
mov
test
jns
in
mov
out
adc
push
lock
enter
jmp
push
dec
mov
call
pop
dec
jmp
lret
into
addr16
mov
into
loop
lock
adc
ret
xchg
sbb
or
imul
fsubrs
sub
out
cmp
push
inc
js
adcb
test
mov
pop
aam
or
xchg
mov
enter
imul
cmp
mov
pop
lcall
adc
loope
dec
das
dec
xor
xchg
fstl
mov
aas
loopne
or
imul
int3
dec
cmp
or
ljmp
jg
jae
pushf
inc
negb
pusha
push
mov
xor
mov
adc
sbb
ds
fstl
mov
mov
aas
and
nop
xchg
and
stos
lds
fidivl
mov
cmpb
pop
and
ja
cmc
negb
das
sarb
inc
test
xchg
sub
pop
and
call
push
and
jae
sbb
cwtl
xchg
xor
xor
out
mov
or
js
adc
mov
dec
or
lea
mov
gs
andl
jnp
xchg
fs
mov
mov
cmc
pop
hlt
push
repz
test
cmp
xor
jae
push
push
fsubrs
inc
in
xchg
mov
testb
cwtl
dec
pop
adcb
and
addr16
push
mov
cmp
xchg
push
mov
decl
sub
jge
mov
sbb
icebp
mov
fwait
nop
dec
dec
ss
add
cld
push
dec
fnstsw
call
cmp
xchg
loope
sbb
dec
repnz
ret
andb
add
adcb
sbbl
or
movsl
pushf
lret
adc
xchg
add
cltd
hlt
push
rcrb
mov
shr
adc
pop
jmp
inc
out
enter
rcr
xchg
mov
shlb
mov
add
daa
or
imul
aaa
je
push
les
mov
pop
dec
outsb
out
fwait
and
pusha
test
out
add
xor
jno
mov
push
inc
add
out
inc
jl
and
scas
cli
daa
push
mov
bound
push
pop
add
fldenv
add
mov
xchg
inc
roll
lahf
sar
out
clc
push
sub
popf
push
pop
fcomps
cli
addr16
xor
pop
fs
inc
mov
hlt
mov
lret
mov
pop
fimull
xchg
dec
sbb
fstps
inc
jb
mov
test
test
and
xor
mov
inc
sub
stc
lahf
xlat
sub
aas
mov
rcrl
jge
dec
loop
xor
lret
lret
jp
sub
push
jnp
pop
mov
es
pushf
adc
mov
mov
xchg
add
sbb
mov
add
adc
cmp
mov
scas
call
out
push
push
adc
cltd
int3
mov
mov
xlat
fs
sbb
mov
imul
cmp
jbe
int3
mov
cld
pop
mov
mov
cmc
mov
mov
mulb
les
jmp
mov
sub
cwtl
mov
lahf
addr16
cmpsb
push
hlt
dec
sbb
and
mov
mov
dec
sub
int3
adc
dec
cmp
aas
in
fbstp
fnstenv
sub
add
inc
scas
fists
sbb
es
nop
dec
xchg
arpl
fnstenv
pushf
mov
les
mov
mov
xor
mov
jg
fwait
pop
and
call
fsub
xchg
push
inc
popa
mov
outsl
cmp
push
inc
call
pop
mov
sub
cmp
jecxz
fisttpl
xchg
insl
jg,pn
jne
or
test
jnp
sbb
in
push
jg
jl
and
sbb
jl
lods
popa
ljmp
dec
mov
xchg
ljmp
popl
xchg
cmp
cmp
das
and
sub
or
sub
mov
mov
cs
and
ljmp
dec
sub
cmp
jb
ds
loopne
les
js
and
clc
rolb
jle
in
cmpb
call
data16
andl
pusha
inc
int
adc
xchg
cld
dec
jl
call
or
flds
mov
and
adc
fadds
jecxz
jge
or
jne
nop
into
aas
out
ds
lcall
fisttpll
adc
add
popf
rclb
sbb
mov
and
adc
inc
adc
jl
shlb
xchg
stos
repnz
inc
push
incl
push
outsl
aas
mov
and
data16
xchg
dec
test
jle
xor
addr16
cmp
and
popa
push
mov
cmp
sub
mov
test
xlat
jle
lahf
idivb
data16
cmp
sbb
outsb
mov
loop
push
jno
xor
rol
ds
or
jno
jp
leave
cmpb
enter
sub
cmc
fists
jp
mov
cmp
xor
fbld
mov
addr16
cmpsb
pop
fnstenv
xor
mov
mov
dec
in
inc
cmpsb
test
dec
out
fcoms
jne
push
cltd
mov
mov
cld
je
shrb
xchg
jns
cs
jp
push
mov
push
xor
xchg
sbb
and
arpl
or
mov
fisttpl
jp
adc
lea
lods
xchg
cmpsb
call
lcall
mov
lret
cmp
mov
aam
or
xor
sbb
push
rorl
rorl
pop
inc
or
mov
jg
outsl
movsl
leave
call
push
std
lods
xchg
lcall
movsl
sub
push
imul
sbb
hlt
inc
aam
and
outsb
ljmp
push
scas
jno
sbb
cld
lcall
addb
ds
pop
sbb
and
mov
xor
cmp
je
dec
push
or
add
ficomps
or
dec
loope
mov
scas
or
sar
cmpsb
in
sub
pop
pusha
push
ret
push
ljmp
push
push
xchg
imul
dec
or
pop
lock
fistps
daa
inc
cmpsl
mov
mov
jno
mov
cwtl
mov
ljmp
in
mov
aas
aam
jb
and
mov
sub
dec
mov
mov
sub
sub
enter
sub
xchg
movsl
push
cmp
sub
cmp
jl
adc
loop
test
mov
daa
push
leave
in
xchg
out
jle
test
mov
out
popf
movsl
lods
pushf
pushf
add
cmp
repz
xor
pop
loope
xor
push
aas
cmp
mov
mov
dec
xor
ret
in
dec
daa
add
jle
xor
imul
add
lea
int3
dec
movsl
mov
pslld
inc
push
daa
mov
adc
aam
mov
add
ja
push
js
sub
and
push
lea
push
in
or
inc
mov
mov
dec
xchg
fucomp
aam
call
ja
mov
xor
out
fldt
or
movsl
adc
mov
in
rclb
cmp
mov
sub
ja
xchg
cmpl
mov
aad
or
sar
fcmovne
addl
bound
mov
xchg
lret
icebp
cmp
inc
cs
jnp
sbb
add
je
jecxz
dec
cmp
jmp
lcall
jo
fs
sub
push
mov
add
addl
pop
mov
or
mov
mov
std
fiaddl
pop
xor
inc
neg
jns
je
add
sarl
lods
mov
ficoms
pop
add
jp
push
xchg
pop
jle
xor
daa
cmp
add
cmc
ds
xor
hlt
stos
aad
or
std
test
mov
mov
mov
into
ficomps
push
out
outsb
mov
insb
inc
cmp
test
adc
rclb
dec
cld
cmp
aam
fistps
cmp
mov
aam
inc
int3
push
inc
jbe
xlat
sub
fadd
dec
cmp
sub
movsb
mov
faddp
clc
pop
xchg
mov
fcmove
jb
lds
into
sub
sub
mov
fistpl
adc
outsb
adc
fxch
std
rcrl
adc
stos
mov
loope
and
in
sarl
loop
add
in
sbb
xchg
xchg
mov
jle
mov
xchg
mov
ss
pushf
jl
in
mov
sbbl
sbb
jmp
xchg
cmc
sbb
icebp
insl
jl
fsubl
aas
jnp
addr16
mov
loopne
loop
inc
xchg
adc
inc
mov
movsb
int3
int3
fwait
mov
in
repz
imul
xchg
mov
fs
sti
ljmp
lret
mov
or
imul
pop
mov
mov
cmp
push
in
mov
and
outsb
add
sbb
or
and
insb
mov
xor
hlt
mov
in
inc
mov
mov
hlt
xor
dec
sbbl
mov
and
fldl
xor
jns
xor
inc
adc
pop
mov
fcomps
mov
cmp
dec
nop
dec
stos
clc
cmpsl
dec
or
xchg
stos
fistps
sub
cmpsl
adc
sbb
sub
sbb
adc
pusha
mov
adc
jb
and
popa
int3
sbb
aas
xor
xchg
xchg
fmuls
lods
cmp
incl
cmpsl
add
mov
dec
data16
mov
jnp
xchg
ret
mov
mov
cld
int3
popf
adc
add
sub
shll
xor
mov
jmp
cmp
pushf
xchg
sbb
loopne
dec
hlt
sub
mov
push
popf
or
pop
xchg
adc
mov
xchg
popa
pop
jg
xchg
sbb
adc
jp
mov
ljmp
cmpsb
pop
jbe
jle
pop
mov
stos
inc
mov
int
jne
mov
xchg
cld
das
adcb
jmp
and
cs
push
mov
addr16
mov
push
xchg
dec
ret
xor
fsubrp
xchg
das
mov
nop
mov
call
sbb
popa
out
jp
loop
cmpl
add
test
mov
xchg
scas
je
in
jae
dec
add
mov
pop
imul
xchg
jne
popa
push
lea
loop
call
aas
mov
add
fs
insb
pushf
rorl
mov
xor
lret
stos
and
js
test
inc
push
movsb
jns
mov
scas
mov
xchg
adc
pop
pop
push
mulb
icebp
mov
mov
test
dec
repnz
cmc
movsl
xchg
mov
iret
dec
addl
gs
dec
pop
imul
ja
inc
test
and
inc
xchg
cmp
shlb
std
xchg
out
orl
mov
das
jle
in
dec
add
pop
out
xor
mov
shlb
lahf
in
inc
jno
dec
mov
mov
lea
cmp
mov
test
adc
ds
repz
aad
int3
add
sbb
test
stc
clc
movsb
jg
cmp
ret
shl
test
sbb
ret
arpl
subb
and
addr16
inc
incb
add
mov
push
mov
lock
or
inc
sbb
mov
cmpsb
and
mov
sahf
aad
and
fisttpl
scas
fsubr
jo
les
push
push
or
out
mov
dec
or
sub
lret
aas
out
popa
or
push
dec
jae
test
ljmp
cmp
add
faddl
add
ret
ret
rcrb
inc
adc
and
inc
push
rclb
repz
ljmp
lret
pushf
out
mov
pop
cmp
mov
loopne
movsl
cmp
les
sbb
mov
pushf
out
fs
push
mov
jae
clc
addb
xchg
mov
cmp
loope
bound
fcoms
mov
dec
mov
mov
in
jp
xchg
fwait
hlt
mov
jmpw
jmp
jg
mov
mov
pusha
outsb
in
lcall
inc
mov
popl
add
cwtl
test
dec
cmp
bnd
add
mov
pop
xor
rolb
repnz
jae
cmp
pop
dec
adc
push
inc
jmp
jle
mov
inc
mov
jae
push
push
push
jp
movzwl
pop
cmp
pushf
add
loop
mov
push
dec
jbe
js
mov
out
sub
pop
cmp
xorl
push
ret
and
mov
dec
mov
enter
push
and
in
sub
nop
xlat
sahf
mov
outsb
dec
bound
ficomps
adc
xor
rorb
or
shl
dec
mov
and
aas
or
out
add
loopne
jle
in
lods
ljmp
stos
mov
cld
jbe
sbb
mov
xchg
jo
and
mov
nop
xlat
popa
pop
cmc
pop
add
sbb
adcb
enter
mov
dec
imul
das
lods
insl
push
add
adc
and
es
notb
and
cmp
ret
pop
inc
push
inc
dec
aam
sahf
dec
aad
inc
push
icebp
out
push
icebp
add
push
pop
or
movsb
mov
repz
les
loop
xchg
xlat
mov
sub
sar
xor
sahf
sarb
repz
ror
sarl
xchg
jmp
stos
lcall
adc
int3
mov
dec
sbb
mov
scas
es
loope
aaa
xchg
jne
push
in
or
into
and
pop
fistps
inc
js
mov
aam
inc
in
mov
js
dec
and
rcrl
xor
mov
addl
les
push
lcall
out
jnp
mov
icebp
xor
lcall
xchg
adc
imul
or
mov
push
jae
fidivs
xlat
jo
fmuls
mov
loop
rolb
es
outsl
jb
or
aam
xlat
decl
cmpsb
jae
pop
mul
cs
mov
mov
mov
sub
and
sub
or
mov
adc
pop
push
jmp
inc
fmull
bnd
loope
mov
fs
enter
dec
or
pop
jmp
test
mov
adc
repnz
mov
movsb
or
mov
mov
jns
in
cmpsl
fwait
arpl
jns
cli
push
dec
and
sbb
push
jmp
in
jmp
jg
push
add
push
mov
sar
add
out
xchg
fcmovu
ljmp
xor
cmp
popf
fwait
jo
lret
sbbl
sub
or
lock
lret
movsl
sarl
inc
mov
xchg
adc
jmp
gs
adc
add
adc
cmc
cmp
int3
hlt
mov
mov
jl
les
push
iret
mov
in
pushf
push
xor
push
push
xlat
loop
and
mov
loopne
mov
ds
push
cmp
adc
push
out
xor
repz
xchg
xlat
fistpl
push
adc
cmp
sub
out
insb
cmp
into
jbe
pop
sbbl
or
sbb
dec
sbb
and
add
test
lods
stc
subl
sti
pop
xor
fstps
xor
mov
sbbb
cltd
xor
movsb
lahf
addr16
inc
mov
adc
dec
stos
sub
scas
mov
stos
pop
mov
scas
and
sub
mov
mov
lods
daa
lods
mov
xchg
cmpsb
cwtl
or
xchg
lret
shrb
adc
dec
nop
add
imulb
stc
cmc
jge
repz
cwtl
mov
pop
ds
int
jmp
stos
addr16
or
pop
dec
add
jns
cmp
pop
outsl
scas
add
xchg
sub
or
inc
lcall
push
push
mov
sbb
add
cmp
jnp
mov
dec
pushl
push
cs
sub
mov
add
sub
jl
xor
mov
xchg
aaa
and
iret
movsl
pop
pop
incb
aaa
mov
mov
xor
add
fldt
adc
sub
popa
fstp
cmp
lods
pop
pop
mov
hlt
call
push
jo
mov
and
jmp
repz
ljmp
cli
testl
jp
inc
and
xor
mov
mov
dec
cmp
adc
push
in
lock
jbe
in
xchg
aaa
inc
sub
pushf
int3
mov
pop
inc
fwait
jmp
or
bnd
loop
in
adc
add
xchg
inc
xchg
dec
xchg
sub
sub
push
subl
adcb
dec
pusha
xchg
pop
mov
imull
xchg
mov
mov
and
sbb
cmp
or
ja
fs
fwait
jo
dec
int
jp
and
mov
cmpsl
push
dec
push
in
or
cmpsl
add
aas
lods
movsl
out
fildl
imul
adc
pop
or
ret
jle
push
outsl
push
push
xchg
enter
sub
inc
andb
repnz
mov
cmp
and
add
pop
sub
mov
int3
sbb
iret
incb
mov
in
mov
inc
ljmp
scas
aaa
fld
loopne
imul
and
out
shlb
inc
pop
add
std
xor
xchg
inc
mov
shlb
pop
arpl
sbb
shll
rorb
insb
dec
jge
lahf
loopne
andl
pop
js
cmpsl
xchg
dec
xor
push
push
roll
pop
aam
leave
adcl
fidivrl
popf
adc
pusha
popf
push
pusha
pop
pop
insl
repz
dec
jo
mov
in
je
testl
cmp
cmpb
sbbl
cli
movsb
pop
jl
mov
test
rorl
loope
test
xor
push
shll
arpl
mov
dec
mov
or
rolb
or
in
cmpsb
xchg
xor
mov
mov
cmpsb
sub
call
enter
add
mov
bound
nop
mov
inc
cld
mov
xor
cmp
and
shll
addl
aaa
test
mov
sbb
sub
stos
jge
ds
aaa
inc
into
dec
push
idivl
add
pop
clc
pop
fnstcw
lret
ret
aam
jge
mov
lods
push
out
sbb
add
add
data16
movsb
mov
pop
pop
sahf
in
test
aam
aas
ficoml
pop
cmp
mov
fistl
mov
cli
sub
and
jmp
rcr
add
movsb
mov
inc
or
jge
imul
clc
sub
dec
scas
jmp
jp
pop
shl
cmp
xchg
stos
cmp
test
pusha
mov
scas
int3
push
stos
push
sub
bound
jg
clc
pop
adc
adc
xchg
shl
jg
and
adc
push
xor
shrl
cld
sbb
add
mov
push
pop
cmp
sbb
sub
out
mov
icebp
push
push
js
mov
mov
mov
mov
imul
mov
sahf
lock
xchg
push
rorb
cmp
pop
mov
scas
testl
push
inc
in
aaa
movsb
or
in
or
jle
cld
ds
jecxz
jns
push
sub
repz
dec
dec
sub
add
push
or
push
rcll
jmp
ret
jecxz
mov
cmc
into
inc
lret
sbb
push
push
xor
vmwrite
inc
aad
shl
lret
dec
jns
inc
in
mov
push
adc
push
pop
sbb
xor
aaa
inc
imul
push
jo
jl
ss
in
or
inc
rorb
cwtl
adc
shlb
mov
cs
sbb
push
mov
add
fidivs
lea
add
or
out
or
test
sbbl
add
movsl
divl
int
mov
pop
arpl
std
mov
call
add
inc
rcrb
shll
movsb
jl
test
aam
je
inc
rcll
xor
ja
jp
int3
cld
daa
bound
ss
inc
cmp
daa
or
fnstenv
xchg
test
cmp
je
cmc
mov
sbb
and
pop
lods
push
rclb
insb
les
je
dec
repz
sub
in
pushf
cmp
cmp
pop
dec
dec
push
jbe
stos
in
lcall
insb
sti
cmp
movsb
sub
pmulhw
aam
repz
or
push
adc
jmp
int3
xchg
xchg
jnp
int3
fisubl
pop
inc
xor
inc
mov
push
dec
mov
scas
clc
movb
and
push
or
adc
jae
push
pop
andl
sar
in
adc
or
mov
sub
push
inc
xchg
cmc
cmpsl
adc
repnz
mov
adc
dec
loop
rorb
loope
push
xchg
test
decl
mov
aad
inc
aam
and
ljmp
dec
addl
ret
add
xchg
xchg
pop
mull
push
jae
lods
testb
pop
call
ss
cmovp
cmp
mov
fldl
inc
pushf
jno
paddusb
imul
fsubrs
jne
or
mov
icebp
fs
add
loope
jne
jge
aad
insb
lods
popa
loopne
test
lds
jecxz
loop
aas
mov
je
test
test
gs
mov
inc
push
pop
adc
pop
out
mov
mov
pop
xchg
mov
das
lods
insl
push
je
setno
jns
cmp
and
es
or
les
mov
mov
aaa
sub
insb
aaa
sbb
js
fsub
out
xor
mov
dec
xchg
int
mov
mov
and
inc
iret
inc
push
push
dec
sbb
mov
mov
mov
add
push
jle
xchg
popa
fcmovnbe
xor
mov
xchg
add
mov
stos
inc
cwtl
std
adc
xchg
inc
xor
xchg
aam
lods
popf
jge
lds
cmp
ljmp
and
mov
imul
jmp
adc
add
mov
dec
sub
sti
dec
mov
xlat
inc
ljmp
data16
mov
push
bound
dec
mov
or
xchg
and
fs
shrb
dec
in
lods
mov
pop
push
xchg
test
mov
cmp
xor
jo
lock
jg
jle
cmpsl
ljmp
cmp
or
lret
add
les
mov
movb
ret
cmpsl
sahf
aam
leave
inc
test
daa
repnz
ret
mov
cmp
ja
sub
dec
cmpb
mov
lea
cmp
sar
jns
ret
inc
loop
pop
inc
pop
leave
loopne
add
inc
sahf
pop
pop
xlat
fwait
ja
daa
pop
pop
pop
lds
addb
scas
out
dec
cmp
or
or
in
shl
mov
or
scas
loope
lods
push
push
mov
dec
xlat
pushf
das
xchg
imul
lock
cwtl
gs
loope
jae
and
push
xor
mov
xchg
inc
pop
xchg
scas
or
cmp
lods
mov
loop
dec
or
pop
fldl
mov
jb
stc
xor
mov
aad
xor
scas
xchg
xor
push
enter
pop
jbe
xor
outsl
mov
or
std
or
out
aas
dec
sub
cli
lret
mov
movsl
fcomp
scas
sahf
into
sbbb
popa
bound
mov
mov
sub
iret
or
add
and
aas
stos
test
pusha
pop
inc
cmp
add
mov
clc
mov
pop
hlt
rolb
mov
int
test
dec
insl
js
hlt
pop
adc
sub
outsl
or
push
xor
call
ds
lahf
jmp
outsl
pop
cmpsb
shll
movsb
repnz
pop
xchg
test
testb
jge
and
adc
aad
push
flds
or
mov
daa
xchg
cmp
std
pop
mov
cmpsl
pop
aaa
xchg
sti
dec
ds
push
jo
mov
cwtl
sub
icebp
scas
int3
test
ds
ret
cmp
push
ret
push
cmp
cwtl
push
cli
add
jle
addr16
or
mov
lahf
loop
scas
pushf
int
adcl
mov
rolb
adc
xor
dec
jecxz
adc
or
xchg
je
ret
mov
xor
test
call
ljmp
cld
cmp
mov
jo
pop
sub
fisttpl
imul
push
aam
lea
out
jmp
add
pop
and
gs
jg
mov
add
jns
push
mov
icebp
movsbl
mov
xor
aas
and
pop
mov
imul
sarb
or
cmp
jmp
add
jecxz
data16
and
mov
lret
lcall
sti
mov
jmp
sub
and
sbb
inc
and
jns
xor
ja
cmp
pop
daa
add
sbb
sbbl
jb
or
mov
fiadds
dec
hlt
mov
sub
das
aas
mov
cmc
scas
das
cwtl
cmp
test
push
and
jmp
dec
mov
sub
mov
xor
and
jne
mov
arpl
cld
mov
inc
push
xchg
repnz
mov
in
sbb
iret
call
movsl
push
sub
ret
or
or
sbb
pushf
fldenv
adc
push
push
hlt
fistpll
stos
push
out
loopne
in
jge
cltd
pop
jns
gs
in
cmpsb
repz
imul
sarb
xor
inc
inc
lods
push
jmp
cmpsb
mov
loop
pop
adc
aad
std
mov
ja
sub
push
stos
test
inc
data16
sbbb
pusha
mov
mov
stc
xchg
out
inc
pop
mov
subl
add
xor
sub
in
ja
test
js
enter
adc
fisubrl
cmp
jno
push
inc
into
mov
xor
dec
nop
and
mov
pop
fdivl
cmpsb
pop
into
mov
dec
xchg
mov
push
pusha
es
pop
fldcw
mov
push
lret
aas
cld
fimull
or
sbb
and
lock
inc
jns
xor
ljmp
and
sarl
stos
add
pop
lahf
pop
add
outsb
mov
sub
addb
push
fnstsw
jno
inc
adc
sub
push
cltd
push
xchg
je
adc
mov
pushf
jnp
cli
ljmp
dec
dec
cld
subb
sub
test
add
popa
stos
dec
pusha
or
ficoms
popf
addl
cmp
icebp
popf
push
loopne
pop
dec
mov
pop
sbb
stc
adc
ds
and
je
aam
push
or
and
pop
xchg
cli
stc
pop
and
pop
and
aad
mov
repnz
inc
lock
push
dec
cmp
or
mov
in
push
mov
es
je
clc
sub
cmp
addb
rorl
icebp
in
ret
mov
hlt
push
into
cmp
jge
jnp
ljmp
sbb
add
xchg
popf
dec
pushf
or
sub
aas
pop
adc
popa
cwtl
gs
xor
ja
call
push
imul
mov
or
test
jmp
test
xor
mov
pop
dec
mov
add
cwtl
jmp
pop
sbbb
mov
sahf
shrb
push
or
notb
xor
jne
sbb
cmpb
push
insb
jle
cwtl
add
cmp
int3
inc
add
mov
cmp
jmp
fadds
sbb
jg
mov
dec
orl
dec
jl
mov
addr16
adc
adc
sbb
cld
add
xchg
sub
adc
fs
ret
jno
pop
pusha
outsb
sub
add
in
xchg
inc
xchg
sbb
movsl
jo
call
push
or
jmp
jl
je
mov
loope
test
sbb
addr16
xchg
adc
andb
or
imulb
push
outsb
push
fcmove
orb
add
lcall
and
arpl
mov
add
fnstsw
mov
cli
sbbb
rcrw
adc
popf
ret
popf
sub
pop
inc
jae
into
add
negl
cmc
inc
sub
lods
push
loopne
xor
mov
cmc
xchg
or
fisubrl
push
sbb
ss
mov
cld
mov
cmp
sbb
dec
aaa
ret
sbb
jge
push
mov
adc
lds
push
les
mov
pusha
jmp
div
testl
shll
pushf
imulb
fwait
pop
mov
rorl
loop
pop
icebp
es
out
push
cli
pop
mov
shll
popa
jbe
mov
fnstcw
ss
cmc
cs
dec
out
push
sub
pusha
inc
loope
push
pop
add
das
pusha
sbb
mov
jno
mov
lret
xchg
je
jle
test
jecxz
xor
fdivrs
push
dec
push
or
cmp
add
inc
adc
ret
hlt
ss
cmp
movups
sub
xchg
mov
in
loope
stos
sbb
or
xlat
inc
fsubrs
xor
test
ss
jne
jo
call
cmpl
or
loope
cmpl
ror
sub
sahf
xchg
test
aas
mov
mov
aaa
andl
sub
nop
jo
cmp
fiaddl
inc
push
mov
fmulp
lcall
dec
orl
sub
pop
lods
ds
pusha
push
mov
lea
dec
cmp
mov
lock
cmp
addl
adc
loopne
clc
iret
popf
jo
hlt
popf
lret
fisttps
pop
icebp
iret
sub
sbb
cmc
mov
mov
les
push
repnz
lea
pop
sub
int
or
adc
dec
mov
das
std
stos
mov
cmp
push
sub
cltd
xchg
hlt
cmp
pop
push
mov
call
mov
ret
mov
das
aam
pop
push
push
loopne
xchg
or
mov
mov
mov
mov
int3
sub
ljmp
or
mov
fsubl
or
fists
movsl
or
cmpsb
xchg
mov
cltd
outsl
cmp
or
mov
jnp
scas
fxam
out
cmpsl
sbb
xchg
push
bound
dec
nop
out
les
pop
cld
lds
cmp
adc
cmp
inc
cmp
cmpsb
adc
jno
call
jns
lret
jno
clc
adc
fs
xchg
les
out
mov
lcall
loopne
aas
ljmp
mov
in
jp
push
sub
pop
mov
mov
push
fs
jl
pop
aad
cmp
pop
xchg
pop
lcall
test
fmuls
sub
xchg
ja
stos
loop
lods
ljmp
int3
dec
fwait
insb
bound
imul
enter
xchg
sbb
cmpsb
in
inc
rcl
cltd
add
ds
daa
out
dec
cmp
xlat
inc
inc
out
adc
sub
loopne
call
mov
popf
fnsave
cwtl
outsl
pop
xor
fdivrs
mov
adc
sbb
sbb
pop
dec
daa
xchg
and
push
or
scas
dec
jmp
mov
inc
mov
pop
fbstp
rclb
int3
fcomi
dec
mov
repz
ret
sub
in
popa
inc
sub
mov
into
sbb
jo
inc
mov
jle
aam
inc
xor
mov
enter
aad
sbb
mov
sub
add
out
dec
cmpsb
lock
or
pusha
cmpsb
loop
aaa
mov
lock
int
xchg
cmp
in
outsb
sbb
pop
jbe
jl
adc
icebp
mov
fcom
and
xchg
push
sbb
clc
imul
add
dec
cmp
sub
ret
int
rolb
add
add
in
sub
or
decb
into
fwait
sbb
clc
fcmovnb
scas
inc
subb
shl
daa
jo
inc
jb
popa
stos
loopne
mov
mov
cwtd
and
sub
rcl
ret
jp
fnsetpm(287
xor
xor
pop
mov
pop
adc
sub
sub
sbb
or
mov
push
push
fcomps
mov
ret
add
push
pop
pop
dec
sbb
and
add
insl
fadd
in
push
cmp
decl
cmpb
cltd
jo
mov
lds
cltd
inc
lock
mov
xchg
mov
ret
pop
loopne
repnz
push
push
js
push
and
push
mov
xor
and
dec
and
into
aad
pop
imul
lds
sub
cmpl
cmpsl
pop
ret
xor
gs
mov
in
stos
mov
pusha
out
les
imul
enter
out
mov
out
jne
lret
dec
inc
bound
mov
cwtl
repnz
fsubrl
and
lods
es
stos
scas
cmp
daa
js
mov
into
adc
sbb
dec
mov
mov
mov
inc
adc
pop
xchg
fsubl
orl
mov
pop
cmp
rcrb
jle
xor
ret
xchg
cmc
mov
cmp
data16
cmp
sub
mov
adc
in
mov
push
xor
mov
xchg
xor
test
sub
adc
cmp
aad
call
repnz
mov
push
cld
and
pop
test
and
inc
repnz
add
sbb
cmp
push
dec
femms
movsb
and
shlb
in
pusha
stos
movsl
cld
arpl
or
aaa
pushf
mov
xchg
xchg
add
movl
fdivrl
push
xlat
push
mov
cmc
xchg
lds
or
jg
pop
jbe
sahf
bound
mov
dec
cli
pop
xchg
mov
and
ja
out
add
stos
and
lcall
jl
popa
fstpt
stos
lods
xchg
sub
fidivl
out
jnp
arpl
es
mov
xchg
sub
or
aam
pop
mov
sbb
cmp
pop
test
add
push
adc
cwtl
mov
repnz
shl
push
add
cmp
lcall
add
ja
jno
mov
out
dec
xchg
nop
pop
das
dec
stos
mov
mov
rol
into
mov
push
pop
in
lret
xor
into
gs
lret
ret
daa
mov
lods
xor
and
push
xchg
lock
pop
add
subl
in
jg
or
lock
nop
sub
js
xchg
sbb
inc
push
push
cmp
cmovle
stos
and
movsb
movsl
mov
and
jp
jecxz
lcall
nop
inc
fnstsw
ficoms
jl
dec
adc
xchg
mov
lret
sub
mov
jl
xchg
pop
xor
fmuls
inc
movsb
and
rolb
sub
shrl
mov
xchg
sar
xchg
into
xchg
or
xor
test
shrb
sbb
inc
mov
sbb
inc
xor
push
sbb
fisubs
inc
ds
mov
jp
xor
push
xorb
adc
popa
stos
push
adc
test
xlat
rcl
pop
data16
pop
sbb
and
push
jmp
lret
adc
das
rcr
dec
cmp
lret
aam
sbb
mov
mov
movsl
repnz
jmp
mov
je
ja
pop
push
mov
push
sbbb
xor
sub
in
inc
xchg
mov
repz
sub
xor
mov
pop
mov
movl
aas
stos
lods
xchg
mov
adc
sub
mov
xor
push
cmp
int3
xlat
xchg
dec
pop
fcompl
pop
cmpsl
and
pop
clc
mov
pop
rclb
ss
int3
pop
push
fcmovnu
pushf
mov
int3
or
das
repnz
je
ret
mov
add
mov
mov
and
jbe
lock
sbb
pusha
in
mov
jmp
rcl
push
aas
call
and
imulb
sub
negl
jne
pop
pop
mov
int3
ret
inc
movsl
add
je
push
hlt
sbb
sbb
scas
inc
pop
and
or
sub
mov
push
pop
add
loop
cmp
jl
mov
cmp
lea
lret
cmp
stos
adc
mov
mov
mov
jnp
out
sbb
cltd
nop
or
push
xchg
sbbl
lea
fmuls
push
sarb
notl
shl
cmp
icebp
shll
in
or
shll
add
popw
insb
fmul
pusha
dec
mov
call
mov
mov
pop
orl
repnz
in
adc
imul
cld
xor
mov
hlt
movsl
aas
add
mov
lret
jp
dec
mov
cmp
rcrl
and
in
in
mov
jbe
adc
ds
dec
pop
cmpsb
stos
stos
inc
pusha
jbe
shr
push
cwtl
in
sbb
pop
pop
jo
xchg
and
ds
dec
lret
lods
lret
push
inc
push
pop
mov
pop
mov
cmp
repnz
mov
in
or
sbb
xor
xlat
nop
cmp
int3
cmp
pop
subl
sub
inc
stos
sbb
int
addb
in
pop
pushf
add
mov
sub
in
mov
push
aas
lcall
loopne
push
cmp
push
icebp
push
sub
mov
rcrl
cmp
mov
dec
arpl
jb
lock
rcrb
mov
int3
pop
push
pushf
mov
pop
add
pop
subb
cwtl
and
lea
aam
dec
aam
dec
dec
fmull
in
mov
in
pop
mov
repz
aam
stos
mov
sub
mov
adc
mov
rcrl
data16
push
pop
test
mov
popf
push
popa
stos
mov
es
pop
shrl
cmp
push
jb
push
sarb
fwait
lods
aam
pop
adcb
xchg
push
repnz
movsb
xor
movsb
movsl
xor
cli
js
sub
xchg
pop
sbb
pop
popa
sbb
mov
bnd
jle
pop
adc
ja
xor
hlt
sub
jp
add
ss
loopne
inc
sbb
adc
jo
mov
rcrb
mov
leave
pop
out
and
loop
add
sub
lea
mov
pop
push
cs
pop
pop
add
dec
sbb
sbb
cld
pushf
add
dec
or
in
lret
add
jo
mov
fistl
cmpsl
and
lret
dec
sub
rcrb
in
push
mov
push
scas
pop
xchg
xor
in
aas
lods
addr16
cmp
pop
arpl
js
je
pushf
es
mov
subl
sub
sub
push
push
pushf
mov
jo
jmp
popl
mov
pushf
mov
add
jne
sub
insb
pop
hlt
cs
pop
cld
add
mov
dec
dec
aam
sbb
inc
xor
push
push
jbe
push
inc
jno
push
inc
jbe
push
inc
jno
stos
pop
mov
pop
shr
push
lret
jp
mov
adc
das
and
pop
xchg
adc
hlt
mov
pop
cld
repz
mov
push
bound
jno
pop
jp
adcl
jge
mov
call
sub
or
sub
hlt
mov
push
xlat
mov
lcall
test
add
cwtl
adc
lcall
mov
ljmp
or
mov
pop
dec
pop
xor
sbb
add
jo
adc
cltd
sbb
ret
mov
sub
add
mov
jle
les
fidivs
pop
imul
add
push
xor
dec
push
mov
push
int
out
pop
sub
xor
mov
fidivrs
pop
loop
lods
mov
push
mov
aad
shrl
test
mov
int3
or
mov
scas
cli
ss
iret
inc
dec
rorl
test
mov
lret
mov
sbb
rclb
mov
iret
sbb
cmp
aam
xchg
xor
sub
std
movsl
xor
adc
push
pushf
fdivr
repz
data16
andb
out
popl
mov
sbb
jp
pushf
jl
and
pop
add
push
inc
iret
xchg
mov
cwtl
cwtl
shlb
mov
jle
xor
xor
pop
dec
mov
push
int3
add
jne
test
pushf
mov
je
mov
cwtl
shrl
sub
cwtl
aam
aam
pop
cmp
pop
jg
test
addl
cmp
pop
mov
dec
or
mov
inc
in
ret
call
cmp
cmp
in
or
mov
pop
testb
lret
mov
push
decl
adcb
pop
ss
mov
or
sub
fs
xchg
mov
shlb
js
inc
adc
pop
sbb
ljmp
aaa
or
mov
insb
fimull
adc
sub
pop
sbb
pop
out
jge
inc
sbb
or
or
cmc
add
inc
and
pop
adc
pop
test
mov
aaa
les
pop
dec
jmp
lock
pop
jne
mov
inc
out
fwait
lods
aam
push
sub
inc
loope
aad
push
jp
dec
sti
push
decl
call
cmp
cmp
enter
pop
push
nop
inc
pusha
insl
xchg
mov
inc
and
popf
xchg
ret
cwtl
into
cmp
icebp
inc
lods
imul
or
popa
cmp
ret
cmpb
add
mov
popa
sub
push
sti
pop
arpl
adc
mov
push
adc
or
scas
ja
push
xchg
icebp
into
adc
mov
jge
mov
rolb
iret
push
add
stc
pop
fucom
mov
lret
xor
push
mov
inc
loopne
shlb
fmuls
mov
or
add
bound
dec
fcompl
fcomp
out
pop
out
aam
into
and
xor
push
xorb
test
lods
imul
push
rorl
pop
lods
shlb
inc
jecxz,pn
les
push
shlb
cmp
mov
add
out
int
shl
and
sub
out
jns
pop
adc
int
or
data16
fisubrl
xchg
les
clc
test
fcom
dec
or
ret
pop
lcall
mov
jno
sub
push
in
pop
dec
or
or
jecxz
mov
imul
xlat
ficomps
add
cwtl
jge
pop
add
jns
fsts
inc
movsl
jle
test
adc
popa
mov
sub
cmp
rcrl
or
out
sub
mov
adc
inc
fs
imul
dec
adc
sbb
jecxz
inc
sub
push
sub
lcall
mov
sub
stos
jge
jno
xchg
pop
fistps
jmp
mov
jno
test
mov
push
add
pop
sub
mov
andb
imul
dec
push
popf
xor
inc
push
mov
cmp
pushf
pop
mov
daa
mov
pop
bound
jle
les
cmp
ja
mov
mov
sub
fcomp
and
mov
outsb
in
dec
mov
dec
mov
loope
sbb
pop
lea
mov
icebp
out
fnstenv
inc
into
jle
test
fsts
test
mov
jle
into
push
out
add
aad
rolb
mov
or
fldcw
lods
imul
mov
les
push
sub
jecxz
les
ds
ds
xor
out
lock
inc
xor
jl
out
cli
stc
add
push
inc
or
sub
jo
ljmp
xchg
cmp
push
adc
out
lock
sbb
jl
in
cli
stc
add
jecxz
inc
or
mov
je
cs
add
test
xor
xor
repz
mov
jns
fldl2t
or
jmp
inc
fmull
repnz
int
lahf
push
jb
sbb
add
clc
shlb
add
jbe
jle
mov
rcll
stc
jle
outsl
ja
and
mov
cltd
push
dec
pop
adc
or
pusha
mov
pop
cmp
pop
pushl
pop
push
and
mov
icebp
lahf
cmc
bound
rcr
in
gs
loope
aam
push
and
sub
add
lds
push
clc
test
mov
or
mov
scas
lock
jge
pop
inc
jnp
lahf
fldl2t
hlt
xor
jmp
inc
fmull
repnz
int3
cli
sbb
fcoml
add
loop
add
ljmp
sub
mov
popa
sub
loope
inc
das
test
stos
jmp
jge
dec
in
and
fstpt
mov
xorl
in
add
cli
adc
aas
bnd
xor
add
ljmp
shl
dec
add
lahf
pop
dec
cltd
pop
dec
xor
xchg
mov
mov
mov
push
cmpsl
pushw
insb
mov
movsb
std
mov
cmp
lock
push
jno
push
call
ss
gs
mov
jbe
into
jge
mov
jo
imul
mov
in
push
adc
inc
xchg
mov
fcmovbe
pop
dec
add
and
imul
adc
shr
add
pop
mov
pusha
push
stc
out
fadds
ret
adcl
mov
mov
mov
sub
imul
cltd
mov
mov
lods
add
aas
icebp
out
fnstenv
inc
into
jle
test
ret
nop
cmp
loope
movsb
push
jb
sbb
push
cmp
stos
clc
xchg
cvtps2pd
dec
mov
inc
adc
adc
into
push
dec
mov
daa
push
sbb
cmpsl
int3
cli
nop
data16
add
loope
aaa
into
dec
mov
fsubrl
push
jbe
push
in
test
mov
mov
and
fwait
jno
push
inc
mov
cmpsb
mov
xchg
cld
push
into
adc
adc
stos
repz
fidivrs
les
ljmp
inc
mov
push
jle
cmpsb
arpl
hlt
mov
es
ss
inc
dec
mov
mov
or
pop
mov
lods
mov
imul
pop
mov
les
fildll
mov
dec
out
imul
inc
push
mov
sar
pop
bound
lock
mov
xorb
test
orl
les
out
lods
call
and
push
ds
cmpsb
mov
pusha
push
dec
xor
and
lds
inc
stos
fs
mov
into
call
cltd
jno
dec
xor
inc
fbstp
pop
inc
sub
sub
jnp
mov
into
push
sahf
jbe
into
mov
adc
call
adc
add
leave
jne
add
jle
xchg
scas
insb
movsb
mov
add
es
repnz
xor
jo
jle
add
pushf
add
out
or
pop
out
decl
sub
in
push
adc
mov
jno
sub
repz
dec
add
and
loope
mov
inc
inc
jbe
xlat
mov
push
cwtl
rcrl
sbb
in
push
into
xchg
add
push
add
inc
popa
or
push
mov
jo
cli
fs
andl
mov
xlat
mov
mov
ss
inc
add
jle
and
add
dec
or
loope
jmp
imul
xor
cld
pop
mov
pop
xchg
in
push
adc
xchg
mov
fiaddl
pop
dec
add
and
imul
cmpsb
pop
and
les
fdivr
jle
mov
add
cmp
loop
inc
bound
add
and
mov
dec
pslld
fwait
dec
lods
sub
mov
sub
mov
adc
cmp
add
into
addr16
fwait
sub
xor
sub
mov
fnstenv
loope
and
sbb
dec
cld
jecxz
pop
arpl
inc
cld
repz
addr16
stos
gs
xchg
mov
jns
aas
ret
inc
les
push
sub
jecxz
les
ds
shll
stos
mov
push
stc
out
cwtl
inc
dec
ret
adcl
mov
mov
hlt
into
sub
imul
cltd
mov
mov
in
add
aas
icebp
out
fnstenv
inc
into
jle
test
notb
in
jb
sbb
xor
into
clc
int3
stos
or
push
jbe
push
in
fsubrs
mov
mov
and
fwait
jno
push
jg
data16
mov
xchg
rclb
adc
or
or
adc
xor
out
imul
hlt
mov
out
dec
pop
call
mov
jo
int3
push
outsb
xchg
outsl
daa
jmp
and
leave
in
or
ret
jle
mov
imul
loop
inc
scas
aas
ret
int
in
je
sub
mov
fnstsw
push
sarb
nop
mov
divb
pop
push
add
push
add
inc
popa
or
push
mov
jo
cli
inc
jo
adc
loope
aaa
into
dec
mov
adc
fsubr
in
fcoml
xor
mov
out
jle
cmpsb
arpl
hlt
mov
lcall
add
fnstsw
push
jo
hlt
pop
xchg
lock
sahf
jae
pop
or
push
adc
popa
or
push
ret
jae
cmpsl
test
addl
push
xlat
mov
movsl
aas
add
add
jle
mov
adc
cmp
push
mov
mov
sub
cmp
andl
or
in
push
aas
cmp
cmp
xor
dec
ret
xor
shlb
xchg
arpl
aaa
mov
push
and
mov
cltd
push
dec
or
xchg
mov
ss
adc
jmp
cmp
in
enter
cmp
jne
mov
sub
into
addr16
fwait
sub
pop
cmpsl
cs
fstl
inc
jle
mov
mov
cmp
imul
and
inc
dec
mov
gs
xchg
mov
jo
aas
ret
inc
les
cld
gs
mov
jbe
push
data16
jle
and
roll
add
cmc
bound
call
cmovg
cmp
aam
in
mov
cwtl
loopne
jle
das
pop
mov
in
in
adc
in
sbb
push
adc
out
lock
sbb
jl
imul
push
pusha
push
fcomip
push
inc
je
add
in
adc
sub
mov
sub
gs
mov
sub
lods
imul
addr16
mov
test
xchg
jb
loope
and
adc
mov
pop
lcall
movsl
shlb
pusha
fs
mov
xorb
test
orl
dec
les
outsl
and
stos
les
in
pusha
bound
in
push
xchg
mov
lock
jle
in
adc
pop
or
addl
in
fnstenv
mov
nop
mov
stos
popa
fisubrl
cmp
push
jb
push
shrb
jge
inc
and
mov
data16
jecxz
out
pusha
mov
lret
mov
scas
cld
adc
mov
lret
jns
and
dec
push
dec
adc
adc
sub
mov
mov
in
or
mov
inc
add
push
popa
lock
sar
mov
jl
push
ret
and
int3
into
mov
add
les
inc
pop
add
into
stos
into
int3
les
mov
dec
jecxz
xlat
add
xchg
sub
stos
jnp
inc
dec
fcmovbe
loope
int3
aad
lea
fcmovne
and
cmp
roll
push
jl
js
or
and
sbb
add
imul
jmp
loope
add
mov
into
ljmp
fwait
push
je
push
dec
or
xchg
loope
xchg
sub
jmp
aas
xchg
scas
push
xchg
adc
movsb
xchg
jo
push
popa
js
icebp
fists
in
push
pop
add
cmp
shr
aas
subl
iret
add
mov
jg
mov
out
push
ljmp
and
stos
jecxz
cmp
jb
shr
test
nop
mov
iret
pop
mov
push
lods
or
mov
hlt
cwtl
inc
or
or
cmp
sbb
and
mulb
sub
add
mov
mov
insl
mov
pop
test
insb
cmp
push
test
and
movsl
inc
fsub
sub
loop
add
pop
loop
inc
sbb
aas
ja
push
and
rcrb
xor
xchg
test
fwait
and
into
ljmp
and
stos
and
shlb
shr
test
loop
sbb
adc
lret
dec
and
in
jns
andl
arpl
add
in
shr
mull
outsl
inc
jno
push
iret
sub
pop
out
loope
ds
jnp
xchg
pushw
mov
xchg
dec
jno
int3
gs
andb
mov
inc
lock
js
mov
inc
and
pop
dec
aas
lahf
imul
mov
pop
inc
repnz
hlt
sub
hlt
in
push
fadd
int
inc
lea
fsubrs
jmp
dec
sub
lret
fdivrs
cmp
mov
dec
jbe
fsqrt
aas
and
push
dec
jle
arpl
les
push
aad
mov
cli
rorb
sub
adc
cltd
fidivl
lds
cwtl
shl
ret
xor
push
aad
sbb
mov
adc
mov
mov
sbb
jle
add
lods
sahf
sub
das
daa
lock
orb
lahf
mov
inc
jl
mov
add
cmp
fwait
sahf
pusha
add
jno
mov
test
call
jbe
dec
es
xor
pop
dec
jo
sahf
mov
pop
inc
movsb
shlb
out
pusha
jecxz
aas
es
or
adcb
ljmp
xchg
cld
pop
scas
data16
inc
lret
ret
dec
fists
sub
push
mov
bound
cmpl
or
xchg
pop
inc
in
adc
mov
scas
add
fisttps
xchg
pop
lods
lods
push
cltd
sub
inc
js
cwtl
mov
subl
scas
daa
lret
les
push
notl
mov
cmp
mov
mov
bound
les
adc
jmp
out
inc
jbe
jne
in
pop
sub
gs
ret
je
stos
dec
pop
popf
pop
repnz
movsb
mov
cld
lea
push
mov
mov
rcrb
inc
add
mov
xor
jmp
jle
cltd
mov
cmp
jmp
test
jo
inc
fbld
or
and
out
data16
js
push
outsl
in
mov
sbb
loope
clc
int
xor
jg
pop
addl
js
out
xchg
in
sub
movd
das
xlat
jae
sub
out
jns
in
aas
roll
jecxz
mov
push
and
loopne
mov
jmp
jmp
cmpsl
lock
pop
fmuls
fisubs
sti
mov
test
jg
stos
test
aad
out
popf
fisubl
jno
sbb
repnz
inc
pop
aad
cli
jbe
icebp
in
hlt
and
add
and
push
cmp
adc
dec
jecxz
sub
mov
pushf
pop
adc
add
or
cmc
ret
iret
movsl
iret
gs
cmp
xchg
push
imulb
xor
lcall
push
xchg
in
inc
cmpsl
sti
outsl
lods
call
add
popa
sub
loope
add
xor
insl
scas
loop
and
xor
stos
or
stos
add
dec
aaa
es
xchg
dec
mov
lods
jno
mov
sti
imul
stos
movsb
mov
lahf
xor
or
ret
cmp
rorl
sahf
lea
jl
pop
popf
repz
movsl
ficoms
hlt
ret
push
lahf
pusha
sarb
call
insb
cltd
and
xor
xor
lods
rorb
ficoms
cmp
jle
push
adc
pusha
lds
push
dec
nop
pop
xlat
out
not
and
outsb
xor
cmp
push
insl
and
pop
loopne
in
mov
add
sub
xor
dec
xchg
out
xchg
aaa
outsl
mov
stos
in
cltd
movsl
add
repz
adc
les
adc
mov
mov
jb
and
xchg
test
adc
inc
negb
repz
sub
pop
stos
push
loopne
orl
test
daa
fwait
add
bound
outsl
imul
sarl
cmpsl
pop
je
jae
xchg
sub
dec
pop
pop
sub
push
cld
xchg
js
stos
cmc
and
inc
inc
test
adc
push
call
stos
cmpsl
xor
test
loope
xchg
push
mov
xchg
in
jp
movsl
insb
cmp
shr
out
sub
ja
dec
fistps
mov
jb,pt
shr
shll
aas
lcall
mov
cmpsb
subl
je
push
mov
clc
push
mov
repz
xor
mov
js
mov
inc
mov
mov
mov
int3
aad
shl
cmpsl
xchg
std
lock
or
repnz
xlat
ss
pop
je
or
ds
aas
std
xlat
push
or
xchg
rorl
fnstcw
enter
and
in
mov
add
ljmp
stos
shl
pop
sbb
mov
inc
mov
mov
out
jne
loop
pop
jp
daa
enter
scas
mov
int3
dec
xchg
js
int3
fcom
adc
mov
jnp
in
in
pop
sbb
push
jno
xor
aad
mov
dec
adc
sbb
push
or
fsts
aad
out
loop
add
add
jae,pn
rolb
add
adc
sub
xor
mov
repz
mov
outsl
dec
lea
and
filds
or
jnp
xchg
hlt
adc
mov
cmp
btl
lret
push
lahf
test
out
sub
xchg
std
addr16
push
cmp
dec
in
int3
pop
fwait
nop
data16
lods
mov
adcl
sub
cmp
and
outsb
cwtl
daa
push
jns
lds
aad
lods
scas
xchg
mov
cli
stos
inc
xchg
je
inc
mov
cmp
rcll
mov
pop
mov
xchg
xchg
hlt
test
jae
movsl
fistpl
xchg
mov
mov
mov
out
insl
repz
push
and
mov
sub
jp
lds
gs
xchg
and
sarb
jp
leave
lret
call
repnz
jl
in
les
movsl
shr
lret
int3
push
inc
mov
ds
xor
add
jno
pop
pop
sti
jnp
push
subb
je
ds
dec
insl
push
push
jle
and
pushl
aam
adc
leave
ror
inc
sbb
mov
pusha
jno
ret
andb
or
cmpsb
push
clc
dec
hlt
xor
movsl
mov
aaa
lea
enter
and
or
call
es
and
mov
cmp
add
mov
mov
mov
hlt
unpcklps
ret
adc
push
adc
sbb
movsl
push
cmp
xor
sub
sarb
arpl
add
ljmp
lock
pop
inc
jmp
das
shrb
in
fdivl
jmp
adc
add
and
ret
lea
cmp
cmp
lcall
hlt
add
aas
flds
push
push
imulb
xor
out
gs
mov
cmp
inc
mov
sbb
or
inc
inc
aas
xchg
subb
xchg
shlb
das
pop
rcrl
cmp
push
xchg
stos
jg
stos
test
loope,pt
sbb
arpl
lods
into
push
push
aam
xor
pop
sbb
enter
stos
and
ljmp
ret
outsb
lret
je
movsl
lods
cmp
loopne
dec
mov
mov
aam
icebp
adc
gs
pop
sbb
nop
add
repz
loop
mov
insb
xor
call
jae
in
loope
pop
adc
add
jo
call
lea
outsb
mull
or
mov
inc
jg
aad
aaa
movsl
iret
cmp
sub
ljmp
and
les
cs
mov
push
mov
popf
add
pop
xor
push
or
push
leave
sahf
jmp
pushf
sub
jb
sbb
inc
mov
push
cmp
in
pop
ss
testl
repnz
out
cmp
repnz
lret
fs
mov
cmp
imul
in
push
scas
dec
or
dec
sub
dec
and
and
dec
xor
decb
repz
in
sub
mov
in
mov
push
pop
fwait
shll
xchg
js
jns
pop
cmpsb
imul
pop
aad
repz
mov
repz
int3
mov
sub
les
into
xchg
arpl
inc
xchg
sti
insb
sub
inc
je
insb
in
or
adc
lea
xchg
pop
pop
push
cwtl
mov
pop
fisubrl
fidivrl
inc
fiaddl
or
fidivs
adc
mov
inc
movsb
mov
xchg
inc
stc
add
adc
xor
dec
repnz
je
dec
jbe
mov
lcall
popf
inc
mov
xchg
cltd
jb
adc
push
outsl
and
ror
cli
jno
pop
add
inc
inc
dec
test
or
mov
int
pushf
popf
adc
or
mov
sti
es
fists
lahf
hlt
or
into
es
mov
test
inc
hlt
jns
imul
fcmovnbe
aas
addb
xchg
enter
ficomps
jmp
push
cld
jnp,pn
pop
pop
scas
add
mov
sbb
fmul
sahf
mov
xchg
mov
sub
cwtl
mov
mov
je
mov
addb
xchg
push
rcrl
dec
dec
mov
rcrl
adc
out
push
cmp
adc
mov
sti
out
mov
shrl
imul
adc
xchg
cmp
out
cmp
push
addl
cwtl
add
movsb
pop
cld
mov
cmp
enter
ret
imul
test
rorl
addb
or
je
faddl
in
cmp
rcll
adc
push
pop
mov
xchg
xchg
enter
stos
clc
ss
out
sbb
xchg
movsl
shlb
insb
daa
push
mov
sub
aam
imul
mov
xchg
cmp
jle
cs
adc
lock
inc
cmp
cmc
fs
dec
repz
inc
repnz
vpmacssdql
shll
cld
xchg
xchg
rorb
push
gs
loopew
scas
dec
scas
adc
aam
das
push
push
fs
test
adc
add
sbb
ljmp
pop
jge
cwtl
push
push
jecxz
rcrb
and
xchg
adc
daa
mov
xchg
sub
inc
and
rol
adc
mov
insl
pop
arpl
pop
dec
cltd
mov
sub
dec
stos
testl
or
add
xor
mov
push
sub
mov
jecxz
inc
mov
cs
jmp
fistpll
sarl
in
dec
push
shl
push
xchg
pop
sahf
push
popa
and
inc
xor
mov
das
mov
mov
aam
adc
sbb
sub
leave
mov
test
enter
push
push
xchg
fbstp
je
cmp
les
push
and
mov
in
dec
loop
cmp
shrb
sbb
push
push
xlat
mov
in
insl
mov
xchg
pop
sbb
cmp
adcl
loop
dec
orl
imul
std
push
leave
jl
push
inc
cld
std
mov
fisubs
mov
inc
mov
cli
pop
dec
cmp
adc
sub
out
xchg
popa
sub
ret
jno
pop
mov
mov
mov
add
popl
jae
sbb
add
cld
and
and
in
mov
ficoms
loop
add
cs
hlt
in
fildll
in
fs
push
cwtl
mov
sbb
pusha
std
shlb
jl
jno
dec
adc
sahf
pushf
rclb
pop
sub
xor
movsb
pushf
cmp
jae
mov
lret
aam
fbstp
push
inc
out
push
icebp
mov
es
mov
faddp
sub
mov
push
xor
inc
mov
imul
mov
das
or
push
cmp
mov
cmp
mov
cmp
add
cmp
scas
mov
shll
mov
out
or
xchg
mov
pop
inc
movsl
fsubrl
mov
call
xchg
je
dec
in
scas
ds
jb
cmp
insb
cmc
cld
or
insb
test
or
sub
jl
or
int
lret
dec
xor
lods
popf
xchg
jp
push
pop
lds
pop
std
test
lcall
out
outsl
sub
ljmp
xorb
push
fistps
sbb
sbb
push
mov
out
dec
pop
aad
fistps
and
test
mov
dec
cmp
lcall
pop
aad
mov
or
jne
push
mov
pop
pop
mov
test
xor
pop
sbb
rcll
xor
repnz
or
stos
es
ja
fldenv
dec
shrb
mov
jo
pop
sti
dec
daa
mov
mov
dec
ret
fstpl
adc
mov
xchg
and
les
rcll
lcall
pop
psadbw
mov
faddl
adc
push
add
and
inc
mov
dec
jl
xor
mov
js
insb
aad
ds
lods
lcall
mov
lods
fmuls
mov
jmp
xchg
mov
aas
push
in
xor
cmp
movsb
in
xor
movsb
sub
mov
xchg
adc
andl
mov
adc
pop
add
inc
rorb
fistpll
fwait
aaa
icebp
out
subl
pop
rcrb
loopne
jne
sub
add
xchg
inc
fldl
mov
lcall
sub
fisttpl
xchg
xchg
cld
loope
sahf
cmc
xor
ret
mov
out
into
mov
push
jecxz
ljmp
cmp
rorb
push
inc
mov
add
pop
fistps
rorl
adc
mov
sub
dec
mov
dec
enter
xor
sarl
inc
sub
daa
push
adc
mov
jmp
xchg
sbb
sahf
ret
fisubrl
adc
cld
add
push
mov
ficoml
bound
add
pop
mov
not
shl
in
outsl
pop
add
in
push
mov
ljmp
pop
mov
rorl
jae
movsl
pop
fistps
loopne
dec
adc
sarl
xor
adc
mov
cmpsb
or
scas
iret
iret
js
or
mov
pushaw
fs
jecxz
sti
scas
xchg
shl
push
jno
push
call
std
mov
lods
insl
pop
dec
pusha
and
pushf
push
inc
sub
and
cltd
jno
cmp
sbb
mov
xor
mov
imul
std
test
rclb
or
mov
cmp
pop
movsb
push
xor
xchg
call
in
aam
insb
lcall
mov
mov
inc
mov
int3
cli
je
and
xor
sbb
test
jno
xor
cmp
push
pop
xchg
jb
ds
js
repz
mov
test
icebp
ljmp
sbb
dec
mov
mov
loop
or
outsl
inc
les
and
xlat
mov
dec
mov
lret
push
in
mov
clc
jmp
jmp
sarl
cs
push
jns
rclb
jg
adc
fsubl
hlt
test
les
push
popa
or
push
jae
test
call
int3
sar
dec
inc
adc
mov
sub
pop
xor
cltd
shll
sarb
imul
cmp
hlt
pop
xor
pop
and
mov
adc
adc
pop
cltd
xor
adc
mov
mov
dec
rcr
sahf
out
xlat
loopne
mov
cmp
loope
loope
mov
jge
gs
mov
sub
sub
test
aam
adc
or
dec
mov
cld
sbb
mov
sbbl
shl
push
cmp
cli
pushf
insb
and
cltd
add
jno
insb
call
adc
push
pop
fs
lcall
call
jbe
pop
pop
in
call
test
rcr
xchg
nop
dec
mov
in
lods
pop
dec
ret
xchg
push
sbb
lret
jle
test
mov
adc
insb
dec
or
call
cmp
adc
lea
push
xchg
imul
std
mov
and
cld
outsl
mov
frstor
mov
gs
adc
ljmp
mov
mov
sub
bnd
mov
pop
pop
jge
loope
adc
and
mov
adc
mov
xchg
loop
pop
je
cmp
dec
out
cmp
out
insb
and
and
lods
sub
ljmp
fcmovnb
add
push
mov
pop
mov
push
mov
mov
loope
aam
aas
jl
inc
pop
jne
sub
xlat
subb
inc
jno
lock
shrb
data16
add
sub
pop
orb
in
pop
push
adc
push
cmpsb
movsb
insb
push
mov
sub
pop
adc
cmp
ret
mov
imul
out
daa
push
sbb
mov
and
xchg
popf
je
jb
and
mov
iret
mov
sub
and
fistl
cmp
adc
inc
mov
jae,pt
pop
pop
xorl
in
rolb
aas
and
mov
ret
bound
push
inc
jo
dec
rorb
pop
adc
and
pop
sub
in
cmp
ja
imul
pop
ss
dec
or
cmpsl
mov
ret
outsl
ja
and
mov
cltd
push
dec
cltd
lock
imul
repnz
dec
dec
sbb
lcall
ret
xor
cmpb
mov
xor
jmp
fdivr
adc
subl
xchg
adc
sub
movsl
jle
xchg
rcll
ficoms
movsb
mov
dec
pop
dec
xchg
call
sahf
mov
inc
cmp
push
out
push
clc
mov
test
and
cmpsb
arpl
hlt
mov
out
dec
adc
cmp
imul
je
pusha
pop
stos
test
pop
jo
or
push
xor
sbb
lret
and
rorb
ds
andl
dec
push
rcrb
sti
out
roll
inc
jmp
cmp
and
jg
loope
jne
in
in
mov
rcrb
js
ret
loopne
in
fsubrs
pop
ljmp
cmp
inc
lds
jg
pop
rcl
shl
ret
or
push
dec
mov
fwait
cwtl
jb
xor
and
out
jno
push
rolb
xchg
push
scas
jae
mov
push
mov
pop
sbbb
cs
sub
test
fidivs
adc
incl
push
adc
push
jb
cmpsl
arpl
mov
cli
and
mov
pop
aaa
cli
cld
fucom
push
mov
add
xor
and
jecxz
jmp
sbb
notb
ffreep
into
pop
add
mov
scas
inc
xor
int3
inc
enter
out
idiv
scas
insl
out
mov
mov
or
adc
daa
cltd
and
stc
mov
adc
lahf
shll
and
aam
loopne
cmpb
xor
imul
pop
bound
cmp
movsl
mov
es
das
xchg
mov
xor
or
pop
enter
mov
out
fs
cli
jae
cli
daa
insb
ds
xor
mov
test
push
sbb
cltd
mov
bound
in
dec
sti
mov
lret
mov
popf
jmp
push
int3
xchg
mov
je
add
leave
cmp
out
shrb
mov
push
jnp
sub
lcall
mov
mov
mov
imul
rorb
sub
pushfw
or
ficoml
dec
jb
test
test
nop
loopne
push
pop
xchg
sarb
enter
data16
push
pushf
jb
shrb
xchg
aas
jns
cli
jne
ss
repnz
cmpsl
jp
mov
xchg
cmc
fstl
jg
xlat
inc
fwait
aaa
lds
push
in
pop
xor
ret
or
movsb
pop
enter
adc
cltd
cmpsl
mov
repnz
mov
mov
arpl
push
pop
in
hlt
jmp
bound
imul
aam
cmc
mov
fisttpll
packuswb
retw
cltd
nop
or
add
inc
push
divb
add
mov
dec
dec
push
xchg
push
cmpsl
pop
inc
mov
mov
lea
mov
ret
xor
shrl
lock
scas
ss
pusha
scas
xorb
lret
jae
sub
cmp
inc
adc
add
ret
xor
test
adc
xchg
jl
dec
dec
scas
mov
push
mov
int
stos
xchg
sub
aad
ficoms
push
or
insl
mov
and
mov
rorb
add
mov
aaa
into
int3
hlt
mov
rorb
rcrl
pop
dec
shlb
cmpsl
push
cmp
cmp
mov
scas
les
fwait
movsb
mov
xchg
shl
hlt
and
rcl
pop
add
or
xchg
fwait
xchg
xor
lods
push
cmp
jns
jo
repz
mov
loop
movsl
aas
fimull
cmpsl
dec
push
test
adc
aaa
dec
sbb
std
ret
rcrl
add
xchg
loopne
or
pop
rorl
ss
xor
dec
test
mov
inc
faddl
pop
xchg
aaa
mov
js
sub
mov
inc
xor
mov
and
testl
push
gs
add
and
mov
out
pop
jnp
aas
das
pop
mov
xchg
jnp
xorl
mov
adc
sti
ljmp
xchg
jmp
push
inc
jne
cld
repz
repnz
mov
add
imul
and
pushf
es
scas
out
sub
mov
lahf
push
add
pop
cmp
loopne
in
jmp
jmp
xor
pop
pop
in
mov
mov
push
arpl
popf
je
pop
mov
mov
bound
out
movl
sahf
pop
es
add
les
sub
es
mov
das
mov
fucomip
loop
and
aam
dec
push
inc
jne
cld
repz
repnz
js
add
pop
dec
xor
add
push
xchg
jb
es
cld
pop
repz
ds
aas
jp
mov
mov
cmp
bound
test
outsb
sub
hlt
bound
mov
cld
aas
pop
xchg
push
fdivrl
jo
hlt
pushf
lea
pop
sbb
gs
and
sbb
xchg
cmp
es
push
out
mov
enter
mov
add
mov
pop
sbbb
fs
mov
shr
or
pushf
leave
loop
jge
xchg
sbb
mov
rclb
xchg
loope
shrb
imul
jno
push
fcmovnu
mov
int3
dec
out
mov
test
les
and
mov
ret
cmpsl
mov
es
popa
pop
shlb
mov
fwait
inc
dec
jmp
mov
fs
and
test
jb
int
jg
fwait
hlt
jae
and
or
pop
mov
xchg
jbe
pop
in
fistl
loope
out
mov
enter
inc
movsb
pop
add
js
or
fs
insb
add
loop
mov
jns
xchg
subb
jecxz
test
and
xor
in
nop
in
jp
pop
pop
cmp
push
stos
sub
aam
dec
push
ret
inc
fcompl
in
push
xchg
shufps
cmc
cltd
shrb
mov
and
lret
xchg
cmp
ljmp
jp
mov
rcrb
adc
ljmp
dec
dec
push
sbbb
mov
inc
sub
subl
inc
shll
cmp
jbe
pop
mov
jmp
and
insb
outsl
cmp
dec
adc
and
out
fisttps
lea
ljmp
and
mov
push
arpl
inc
fsts
movsb
imulb
adc
sti
ja
add
cwtl
clc
cmp
enter
movsl
lock
test
jl
lea
mov
ss
int3
pop
jo
adc
sub
mov
and
outsl
cmp
push
int3
mov
xchg
fistps
sbbl
cmpsl
sub
pop
out
xchg
push
push
lcall
mov
push
mov
clc
aas
icebp
dec
push
sbb
jl
mov
add
enter
sub
sbbb
les
adc
ret
or
mov
pusha
push
jnp
clc
adc
sbb
ror
dec
adc
movsb
push
or
lea
sbb
sub
mov
mov
leave
mov
fs
in
push
xor
stc
push
ja
xchg
jp
in
push
inc
cmp
int3
in
pop
push
lahf
mov
arpl
pop
arpl
test
mov
cmpsb
jae
outsl
mov
or
rcr
in
cmp
push
jb
adc
mov
inc
adc
lahf
cmp
bound
popl
shrl
cmp
out
sahf
aam
dec
cmp
sbb
mov
mov
sbb
lret
imul
je
push
dec
pop
cmp
mov
jmp
sbb
cmp
add
mov
je
lret
cmp
jbe
xchg
adc
pop
and
push
xor
pop
leave
in
aam
push
hlt
mov
cmp
roll
je
inc
pushf
arpl
call
hlt
sub
xchg
cwtl
push
in
test
push
and
inc
push
jae
rcrb
sbb
test
shrb
movsb
mov
jle
test
xor
lock
clc
mov
fs
in
pushf
push
jp
arpl
or
add
sbb
push
add
mov
push
sbb
jp
pushf
loopne
and
or
sbb
fdivrl
pop
adc
aas
push
fsubrs
ds
xor
popa
pusha
bound
in
inc
bound
in
dec
aas
shrl
cmpsb
lret
clc
lock
push
xlat
mov
les
mov
mov
pop
cmp
mov
cltd
mov
push
pop
fnsave
cmp
xchg
push
push
adc
mov
xchg
adc
jbe
pop
dec
fnstsw
cs
cld
incl
mov
cmpsb
dec
inc
xlat
xchg
adc
push
xlat
mov
lret
aas
out
adc
push
out
sbb
xchg
dec
pop
out
or
scas
int3
hlt
xor
pop
aas
mov
movsb
in
adc
push
inc
jbe
push
in
adc
xor
sbb
out
stos
mov
pop
ljmp
mov
adc
mov
rcrl
cmp
mov
push
push
sbb
inc
arpl
mov
mov
pop
testw
les
sbb
ljmp
adc
push
and
inc
pusha
aas
mov
aam
fistpll
mov
repnz
mov
ss
dec
cmp
pop
xor
jl
pop
mov
in
jg
push
pop
cmpsl
push
xor
sub
mov
adcb
or
xchg
cmpsb
lret
pop
lret
mov
sub
and
sub
aam
xchg
push
loopne
pushw
call
pushf
pop
cld
mov
mov
loopne
jle
mov
pop
lret
pop
lret
pop
mov
cmp
out
mov
lret
sbb
dec
jo
lret
arpl
popf
je
movsl
shrl
lret
clc
dec
cld
pop
pop
sar
pop
push
cwtl
jno
mov
cltd
adc
in
faddl
popl
dec
mov
sarb
lcall
lret
xchg
in
dec
cmp
push
pop
xor
in
pop
cmp
push
int
hlt
mov
mov
push
aaa
cli
int3
push
enter
pushf
push
in
bound
in
insb
aas
push
shrl
xchg
lock
lock
scas
mov
bound
pop
mov
ljmp
mov
arpl
pop
arpl
or
mov
xor
mov
inc
or
pop
mov
rcrb
add
cmpsl
mov
iret
js
lods
mov
ja
mov
jbe
adc
adc
and
loop
push
mov
push
inc
popa
cmp
leave
xor
fidivs
outsl
pop
mov
xor
adc
pop
in
pop
ss
sub
dec
mov
es
pop
sbb
aad
dec
cld
in
jl
aam
cmp
ss
fdivl
cmpsl
in
or
ss
stos
inc
ja
scas
jg
dec
data16
ljmp
in
mov
add
push
sub
pop
push
cmp
push
shr
push
lret
jp
cld
adc
test
dec
repnz
insb
fisttpl
sahf
sub
mov
adc
mov
rcrl
cmp
mov
dec
arpl
aam
pop
jbe
insb
movsl
rcrb
mov
test
jno
data16
jp
adcl
jge
cmpsl
mov
mov
mov
imul
aam
movsl
in
mov
or
mov
pushf
dec
add
and
dec
add
repnz
jae
movsb
mov
and
mov
and
push
push
cmp
xchg
jl
inc
inc
cmp
sar
pop
xchg
insb
jp
cltd
adc
aam
push
dec
lods
cwtl
shll
pop
int3
mov
hlt
jo
jbe
in
jo
movsb
jae
les
in
add
push
in
or
jbe
sub
out
cwtl
sub
lock
cmp
jo
sub
js
inc
adc
call
mov
pop
cld
push
into
adc
xchg
movb
loopne
sti
jo
jae
push
inc
push
pop
les
jb
aas
push
ds
mov
cmp
adc
scas
sub
mov
adc
ljmp
and
mov
es
pop
mov
mov
add
call
cltd
sbb
aam
cltd
pop
arpl
cmp
testb
nop
and
movsl
xchg
xor
in
fistpll
mov
repnz
insb
or
das
addr16
mov
cmp
jo
jmp
jg
outsb
push
mov
push
vucomisd
das
xchg
xor
push
or
or
jl
loopnew
push
imul
insb
xor
enter
jae
inc
ljmp
jnp
setns
out
mov
cmp
and
outsb
sub
xchg
adc
push
fidivl
into
xchg
inc
iret
mov
and
xchg
push
mov
lret
stos
nop
cwtl
mov
push
mov
xchg
popf
ret
jne
push
sub
lret
fstpt
push
out
jne
sub
inc
inc
icebp
popf
dec
in
pop
mov
sub
pextrw
and
xchg
lods
push
popf
push
pop
shll
fists
pop
ljmp
stc
pop
inc
in
push
insl
scas
test
sbb
fidivl
and
loope
xchg
in
adc
lods
cmp
loopne
subl
es
fs
orb
hlt
in
pop
pop
int
repnz
mov
dec
mov
xor
mov
int3
ja
mov
nop
rol
pop
mov
in
pop
mov
aam
inc
test
adc
xor
or
dec
xchg
xchg
adc
dec
nop
cmp
loop
or
push
inc
jbe
xlat
daa
pop
add
movsl
aas
add
mov
jle
mov
lea
fbstp
push
dec
or
mov
dec
mov
push
adc
popa
into
pop
movsb
adc
push
fcomip
insb
xchg
jbe
imul
pop
in
push
jo
mov
stc
push
dec
jae
cmpsl
test
mov
mov
repnz
icebp
daa
mov
and
imul
sub
mov
xchg
das
in
repnz
jb
loopne
pop
jbe
push
push
popa
mov
fs
into
lcall
sub
sbb
test
inc
aas
adc
aas
idivb
inc
ret
xor
and
out
lds
fsubrs
aam
aas
pusha
dec
inc
pop
jne
fmull
jle
ss
sub
aas
pop
ds
mov
or
inc
shrb
dec
or
jmpw
jmp
jge
aaa
into
outsb
mov
mov
sahf
adc
aas
xchg
ds
ret
xor
add
xchg
lds
sysexit
mov
mov
mov
sub
hlt
inc
rorl
xchg
cmp
push
in
bound
in
insb
aas
outsb
adc
pop
add
sbb
jmp
into
cmp
in
and
into
push
mov
mov
in
hlt
aas
mov
ds
xor
pusha
and
mov
aam
pop
and
not
les
sub
sub
lcall
mov
or
add
push
fdivrs
adc
push
adc
cmp
fnstsw
or
add
cwtl
mov
in
mov
data16
add
jp
cltd
adc
mov
int
rcll
gs
xchg
mov
std
fistpll
ret
inc
les
into
outsl
movsb
inc
pop
rcr
xchg
push
push
jmp
pop
shrb
pop
inc
aad
pop
inc
and
aam
call
stos
mov
dec
ret
test
mov
dec
jae
je
sub
sub
stos
aas
ret
jno
inc
dec
hlt
dec
dec
inc
mov
push
les
aas
mov
imulb
inc
dec
adc
cmp
aam
ret
int3
stos
popa
adc
sbb
mov
call
test
nop
push
jne
jae
mov
mov
daa
push
sbb
mov
push
pusha
inc
adc
and
jl
push
sub
sbb
sub
bound
dec
jecxz
sar
push
sahf
dec
ret
adcl
mov
jno
pop
xchg
inc
or
xor
out
cmp
pop
mov
decl
sbb
insl
mov
fwait
xorb
mov
lcall
stos
jno
or
add
mov
cld
pop
ss
push
movsl
shlb
loopne
es
xchg
das
in
repnz
jb
loopne
pop
jbe
rolb
xchg
pop
cli
lahf
sub
jle
dec
scas
mov
hlt
pop
stos
pop
mov
push
jae
pop
cmp
lds
adc
stc
push
inc
pop
dec
add
dec
pop
jle
loope
fs
repz
fistpll
clc
outsb
push
movsb
or
test
mov
mov
int
shll
pop
xchg
mov
neg
aas
ret
inc
les
outsl
movsb
pop
clc
sub
imul
cwtl
jp
cltd
mov
pushf
xchg
add
ret
es
fs
orb
inc
in
pop
pop
int
hlt
push
dec
dec
add
push
cmp
loop
jle
in
dec
pminsw
popf
pop
arpl
push
cld
repz
sub
pop
cwtl
pop
fistps
out
or
mov
ds
sub
jae
xchg
jno
sahf
xchg
mov
fsubs
popf
je
pop
cli
data16
and
orb
cmp
std
pop
pop
int
repnz
nop
or
mov
es
inc
jo
xchg
push
adc
or
stos
mov
sbb
cltd
lods
imul
push
mov
mov
sar
push
es
xchg
xchg
xor
popa
cli
mov
je
pop
lcall
or
adc
std
pop
fmulp
mov
into
mov
ficoml
mov
inc
sub
test
loopne
cmp
mov
push
xchg
lea
stc
std
jp
ret
pop
cmp
bound
or
shlb
jno
lea
cmpsl
cld
aaa
into
outsb
mov
fistl
and
cmpsb
jl
xchg
mov
negb
ret
sub
pop
daa
inc
mov
into
jmp
inc
fmull
repnz
loopew
cmpsl
int3
cli
adc
inc
push
jo
sub
mov
fsubs
push
aaa
stos
jle
enter
jecxz
in
and
sub
pop
aad
test
and
mov
pop
enter
cmp
push
aam
dec
pushf
jae
cwtl
xchg
adc
aaa
adc
mov
dec
cmp
scas
sub
cmp
mov
xchg
in
push
jo
sub
push
jmpw
outsl
push
lret
call
and
pop
xor
ret
subb
movsb
xor
shll
xlat
jmp
loope
push
ret
or
cwtl
arpl
push
aaa
push
sahf
mov
push
dec
jecxz
in
and
sub
in
out
cmpsb
in
pop
aad
test
and
sti
pop
xor
pop
enter
cmp
push
xchg
inc
dec
fdivl
cwtl
xchg
adc
aaa
adc
mov
or
scas
sub
mov
leave
or
into
je
pop
in
push
jo
sub
push
es
lret
call
and
pop
xor
mov
icebp
mov
push
jns
cmp
and
sub
inc
inc
jg
xchg
push
loopne
scas
daa
adc
loope
xor
iret
daa
inc
sub
xchg
dec
call
add
call
sbb
cld
out
add
les
fstpt
xchg
stos
lock
push
jno
push
in
fisubrl
fs
es
stos
out
sbb
les
ds
mov
sbb
sub
stos
mov
dec
or
xor
jg
pop
loope
xchg
pop
arpl
dec
les
push
out
dec
inc
push
pmulhuw
and
dec
in
rol
loopne,pt
les
mull
ret
ret
insb
jmp
outsb
cmp
out
mov
jne
dec
into
push
mov
mov
enter
push
jbe
push
in
sbb
mov
xchg
ja
mov
mov
sub
je
rorl
xchg
add
push
in
bound
in
insb
aas
out
adc
pop
add
or
push
and
mov
cltd
push
dec
add
stos
shll
sub
int3
sub
push
push
jbe
push
in
jo
adc
cwtl
xchg
ja
mov
mov
pop
dec
xor
dec
dec
add
mov
pop
scas
sar
pop
cmpsb
pop
movsl
shlb
push
addr16
mov
xchg
das
in
repnz
jb
loopne
pop
jbe
rclb
pop
cli
lahf
xor
mov
hlt
pop
cmpsb
mov
rorl
fistpl
xchg
lods
xchg
das
call
inc
lock
push
jno
push
call
loope
insb
xchg
cmp
pop
mov
mov
inc
or
add
dec
movsl
mov
mov
popa
adc
sub
cmp
fnstsw
or
jl
cwtl
mov
rorb
add
jp
cltd
adc
xchg
mov
aam
inc
lock
push
jno
push
call
loope
insb
xchg
and
sar
pop
data16
repz
pop
std
push
dec
jecxz
pop
lods
imul
push
push
mov
loopne
sar
push
push
fisttpl
push
mov
clc
add
ss
in
jae
cwtl
xchg
and
lret
loope
je
sub
mov
sarl
push
andb
popa
stos
mov
sbb
cltd
lods
imul
lock
pop
insb
sub
mov
inc
sub
and
mov
sub
mov
sub
bound
dec
jecxz
sar
and
cltd
shll
sarb
imul
and
fcompl
adc
dec
add
into
and
les
cmp
imul
das
call
cmp
adc
test
shrb
popf
mov
jmp
int
mov
cld
add
fwait
and
and
sub
cwtl
loopne
push
jg
sub
xor
shlb
and
pop
dec
inc
test
aam
repnz
xchg
add
inc
rorl
fistps
data16
in
and
push
in
sub
adc
inc
js
adc
xor
adc
jle
test
in
and
into
push
mov
adc
shr
jo
aam
into
xor
fs
out
fnstenv
or
add
add
loopne
xor
sub
js
inc
push
outsb
pop
sahf
fdivr
cmp
pop
rclb
or
mov
inc
pop
data16
mov
inc
ja
pushf
xor
mov
jl
ret
lret
cmpsl
cmpsb
xchg
xchg
shrb
lods
repnz
cmp
inc
push
cmpsl
pushf
loopne
or
into
sub
cmp
mov
add
cmp
lods
and
mov
sub
push
push
xchg
push
and
imul
push
push
xchg
mov
fdivr
pop
sbb
int3
arpl
lds
cmp
push
icebp
dec
push
test
mov
mov
add
mov
or
and
int
xor
shrb
out
cmp
dec
ficoms
push
cmp
enter
into
xchg
push
popl
stc
aaa
push
scas
call
popf
cmpsb
arpl
hlt
mov
add
jp
test
adc
sbb
cmp
push
jb
push
inc
jo
lcall
inc
in
fs
lods
imul
inc
sbb
xor
cmpsl
scas
cmp
cltd
adc
das
fsubl
mov
adc
cmp
enter
push
outsb
pop
jbe
cltd
shll
sarb
cltd
mov
ds
xor
cmpsl
scas
cmp
cltd
adc
das
fld
aam
shr
test
sub
call
mov
adc
in
sahf
aad
and
fistl
sub
loopne,pn
scas
adc
iret
sbb
sahf
cwtl
cmc
cltd
stos
hlt
fmuls
mov
push
and
aas
jl
clc
jne
ss
sub
cmovg
xorl
in
in
push
sarl
adc
in
pop
sbb
xor
or
ljmp
ljmp
sti
loop
faddl
push
inc
jbe
xlat
push
pop
mov
mov
aas
add
fadd
mov
pop
shll
stos
mov
out
sub
pop
add
xorl
in
les
lea
xor
in
pop
cmp
call
ljmp
sar
push
shl
and
sub
out
jns
pop
cs
mov
cmp
inc
dec
ljmp
mov
out
nop
dec
roll
es
jp
cltd
adc
mov
int
shl
gs
xchg
mov
mov
aas
ret
inc
hlt
fmul
outsl
movsb
pop
js
in
imul
data16
cltd
mov
push
pushf
adc
and
lock
in
sbb
push
leave
xchg
jne
xchg
scas
xchg
sbb
test
xor
aaa
aas
add
ret
test
jmp
stc
pusha
or
in
inc
movsl
jmp
push
or
adc
cs
cmc
into
adc
inc
cwtl
out
or
xchg
shlb
mov
cmp
dec
aad
push
cmpsl
mov
add
sbb
push
enter
jb
jmp
adc
movsl
pushf
inc
enter
cmp
stos
xor
add
pop
shrl
lea
jl
aas
fwait
lods
push
popl
push
andb
cmp
and
and
sub
test
pop
sbb
daa
sbb
push
mov
stos
cli
leave
add
cmp
pop
bound
dec
xchg
cmp
es
decb
iret
ljmp
xchg
and
add
dec
or
hlt
xor
test
fs
xlat
jmp
popa
in
pusha
lret
xor
lret
push
jmp
and
dec
pslld
add
jmp
int3
cli
push
enter
in
test
pop
pop
cwtl
push
les
pushf
popa
stos
mov
mov
stos
lock
push
jno
push
lea
xchg
and
xchg
sbb
pop
out
data16
in
nop
bound
in
cwtl
aas
pop
adc
lahf
mov
push
aam
jle
dec
adc
enter
nop
imul
mov
jo
in
dec
dec
in
mov
test
and
jbe
jl
cltd
cld
and
and
sub
dec
xchg
pop
fcomi
test
mov
aad
shll
mov
gs
mov
pop
mov
icebp
dec
push
insb
roll
inc
arpl
mov
dec
shrl
pop
jno
shrl
and
sbb
in
mov
lods
dec
mov
pop
fucomi
jb
mov
and
imul
ds
pop
data16
mov
je
out
xchg
cmp
mov
aam
test
pop
xchg
lahf
cmp
jmp
xor
lret
dec
pop
pop
aad
inc
ss
mov
sbb
or
insl
adc
jmp
adc
or
in
pushf
or
pop
les
and
mov
dec
popf
dec
add
call
push
ds
fcompl
ljmp
es
fcoms
jmp
dec
pminsw
inc
xlat
push
test
dec
mov
inc
aam
rorl
dec
push
fnstenv
adc
cmovg
ss
jl
pop
repz
mov
jo,pt
add
bound
mov
xlat
filds
int
das
push
mov
jecxz
sub
fsqrt
cmc
or
xchg
push
pop
xchg
jecxz
cmpsb
mov
out
into
movsb
fs
pop
mov
or
sbb
sti
scas
cli
pop
sahf
mov
xor
dec
inc
push
aad
gs
pop
lcall
adc
add
sub
cmp
jae
push
jmp
fsubrs
gs
jl
subb
ficoms
mov
ret
push
pop
aam
xchg
nop
xchg
mov
or
imul
shll
cmp
cmp
push
cmp
jge
sub
jae
jns
test
pop
roll
cmp
insb
mov
les
inc
mov
dec
inc
aaa
lds
push
sub
inc
jmp
inc
aas
in
dec
dec
xorb
arpl
negb
push
ds
mov
out
in
int
mov
dec
xor
push
push
dec
adc
lahf
pop
hlt
repnz
out
and
add
dec
xchg
inc
sbb
ficompl
jmp
andb
sbb
adc
aaa
call
pusha
jp
cltd
mov
scas
outsb
sub
lds
icebp
mov
xor
mov
and
cmp
in
mov
cmpsb
push
xor
pusha
imul
aaa
adc
jb
or
fdiv
xchg
inc
jne
decb
cwtl
shrl
imul
mov
inc
int
mov
dec
inc
lods
and
outsl
pop
mov
es
sub
mov
mov
xor
adc
xor
cs
sahf
orl
xor
or
xchg
cmp
scas
ja
lock
inc
add
push
sub
pop
dec
fidivl
cld
mov
leave
icebp
stos
push
dec
bound
push
out
dec
pop
jp
mov
setns
loope
hlt
or
and
mov
mov
das
pop
addl
rolb
push
jge
mov
push
jmp
inc
ret
imul
pop
push
out
fsub
push
dec
pop
sti
xlat
mov
push
dec
mov
mov
in
jnp
push
adc
int3
push
pop
jbe
jl
dec
sub
cmpsl
addb
mov
adc
js
mov
lea
push
inc
jg
push
lahf
aam
fldt
dec
idivb
and
inc
push
in
and
scas
mov
lret
addr16
pop
jo
aam
cli
xor
cmc
push
and
cmp
mov
sbb
inc
adc
push
and
movsb
cmp
ds
loop
jmp
cmp
fistps
movsl
pop
rcl
insb
fsubs
outsb
inc
mov
jbe
pop
subb
dec
stos
xchg
test
neg
out
push
iret
ja
cmp
jg
sub
mov
dec
dec
mov
je
add
xchg
pusha
scas
mov
dec
in
or
jae
ds
lcall
push
xchg
ljmp
inc
sub
xor
push
mov
xor
test
pop
xchg
mov
das
sub
jbe
and
push
mov
fdivl
jmp
cltd
dec
inc
dec
imul
jp
or
je
es
call
cmp
inc
dec
lds
enter
sti
adc
xor
or
dec
cmpsl
adc
shrb
out
pop
rcrb
int
repnz
fisttpll
rcrl
std
adcb
add
inc
adc
mov
movsb
jo
adcb
cmp
mov
dec
out
mov
clc
outsl
xor
cmp
adc
add
sub
sbb
sbb
xchg
pop
repnz
hlt
push
mov
outsl
xchg
sub
dec
test
aad
fstpt
add
mov
cmpsb
popf
jno
lock
mov
and
pop
cmp
inc
cmpsb
ja
pop
pop
jp
movsl
push
aam
cld
sti
outsb
mov
aam
rol
sub
fwait
es
mov
pop
andb
clc
and
outsb
mov
cmp
dec
movsb
cmp
int3
xor
cmp
sbb
into
lcall
fnstcw
daa
xchg
add
mov
mov
pop
stos
test
and
push
scas
or
and
out
inc
movsl
jecxz
and
dec
loopne
jmp
ja
mov
sar
mov
lods
sub
leave
xor
fldenv
and
sub
not
outsb
fimull
mov
xlat
lds
cmp
adc
jle
icebp
push
out
dec
mov
outsb
mov
and
pop
das
loopne
xchg
mov
pop
scas
xor
and
insb
push
mov
fimull
adcb
in
xchg
lret
mov
out
adc
das
push
lock
aaa
roll
fcomps
repnz
xlat
dec
and
ja
sarb
in
js
adcl
pop
leave
fmull
pop
xor
cmp
call
sbb
repz
sti
cmp
push
pop
sbb
lea
cli
jge
aas
fiaddl
insb
cmpsb
mov
push
inc
jle
or
lea
ljmp
adc
cmp
repnz
cld
sbb
push
test
addr16
loope
mov
jbe
xor
mov
jl
popa
int3
adc
nop
xor
loopne
cmp
loope
ja
push
and
stos
ficoml
dec
fsubr
jae
ret
sbb
fwait
sub
xor
test
sub
xchg
sub
sti
mov
push
pop
push
test
xchg
cmpsl
add
mov
subl
push
mov
inc
mov
mov
cmpsb
popf
sti
mov
out
movsl
mov
add
lahf
or
xor
pop
je
pop
or
imul
in
or
js
mov
dec
mov
sub
call
jae
data16
rcrl
push
xchg
je
hlt
ss
and
inc
adc
pop
rcll
xor
mulb
call
cmp
cmp
lods
lods
mov
inc
mov
mov
cmp
xor
and
mov
jae
cli
jns
push
aaa
fldenv
shll
mov
cli
out
lret
out
xchg
inc
sub
das
pop
lret
push
fsincos
mov
cmp
add
cli
dec
mov
daa
jecxz
xchg
add
fdivrs
mov
mov
cmp
mov
or
inc
js
xchg
out
jb
jp,pt
repz
push
pop
out
push
aam
xchg
pop
int3
mov
mov
xor
ffree
aad
sbb
stos
ret
xchg
pop
pop
mov
mov
cmp
insb
popf
mov
movsb
adc
aad
in
xor
add
fbstp
push
or
and
outsb
mov
imul
enter
cmpsl
ret
pop
pop
jmp
sub
aad
inc
int
mov
ret
shll
pop
int3
lods
fdivrs
inc
aam
mov
incl
mov
int
test
shlb
jp
push
jle
mov
inc
scas
shlb
add
pop
sub
sub
inc
sub
push
sbb
jno
or
inc
pop
shrl
into
sbb
ret
bound
cmp
ljmp
idiv
xchg
repnz
and
shrl
push
lret
cli
mov
pop
das
mov
push
orb
shlb
sub
out
push
adc
xchg
in
hlt
pop
outsb
loope
enter
iretw
and
sub
stc
stos
shrl
sub
cltd
ljmp
push
jmp
aaa
xor
cmc
cld
mov
adc
and
pop
orb
and
and
add
je
ret
pop
decb
out
mov
mov
dec
ljmp
lock
test
mov
inc
mov
cmpsl
addr16
movsl
in
mov
sbb
xchg
repnz
sub
mov
loopne
push
popa
dec
adc
fadds
mov
jbe
pop
push
pushf
mov
adc
xchg
jge
mov
into
push
inc
shrb
fimuls
daa
sbb
daa
mov
mov
and
push
xchg
ret
aaa
stos
lods
fs
sbb
push
stos
in
aas
add
or
loop
xchg
in
faddp
inc
xchg
dec
fidivs
sarl
in
sahf
jae
sbb
stos
mov
lret
xchg
pop
cmp
pushf
cmp
jbe
xor
gs
and
cwtl
dec
or
clc
add
sbb
fldt
and
loop
cmp
rcll
je
cmpsl
and
cmc
sarl
xor
and
ret
adc
call
jo
dec
jmp
sbb
cmp
insl
xor
add
repz
invd
xor
push
xorb
lea
add
aaa
shll
in
insl
inc
jle
xorl
cmp
dec
lods
inc
stc
inc
js
lahf
out
push
xchg
push
test
push
dec
xchg
mov
inc
dec
xchg
mov
rol
push
and
jl
daa
xchg
jmp
cmp
dec
cmpsb
xor
jecxz
popf
or
adc
mov
lods
test
inc
push
adc
fs
xor
xor
pop
test
jae
into
mov
mov
sub
ss
add
add
in
xor
cmp
fldl
orl
inc
inc
xorl
add
dec
xchg
dec
jp
inc
xchg
pusha
mov
outsl
cmc
out
push
or
adc
push
jb
xlat
pop
lods
cmp
shrl
jae
lcall
pop
stos
popa
loop
lcall
sti
es
adc
aas
jo
test
mov
in
js
ljmp
lcall
fs
sub
loop
mov
pop
mov
aas
ljmp
xor
movsb
popf
div
popf
lret
shl
fldl2t
adc
aam
push
shlb
sbb
jae
mov
jae
mov
push
sbb
mov
mov
test
rcr
lods
jo
sahf
push
das
inc
or
bound
dec
pop
xchg
cld
insl
repnz
dec
or
call
in
scas
es
push
mov
int
jae
mov
cmp
sub
mov
shlb
or
sbb
pushf
cmp
not
mov
test
bound
xchg
xor
shlb
dec
divl
pop
icebp
lret
fldenv
sbb
jo
test
xchg
or
imul
cmp
dec
testb
enter
mov
pop
xchg
cmp
lcall
stos
xor
add
loop
and
fisubl
push
xchg
loopne
xchg
or
push
mov
jns
or
das
mov
icebp
adcl
lods
imul
repz
addr16
mov
cmp
mov
xchg
mov
js
and
fcmovu
dec
jb
fstps
hlt
decl
ja
jge
xor
outsl
dec
xchg
pushf
out
lret
xchg
outsb
adc
and
or
fs
pop
popf
push
repnz
cmpsl
cmp
pop
out
outsb
adc
test
in
sub
adc
in
mov
cltd
sahf
out
into
das
jl
mov
fisubrs
cmp
and
sbb
push
inc
bnd
shll
xchg
xor
jnp
cli
in
addr16
jl
dec
mov
inc
push
xchg
push
outsb
std
push
addr16
pushf
xchg
jnp
pop
cli
pop
sti
sti
mov
rclb
fildl
jb
mov
jnp
sub
fcoml
popf
push
in
loope
ljmp
ljmp
js
pop
nop
sub
adc
nop
mov
inc
mov
adc
dec
incl
ds
lret
dec
jno
data16
fstp
test
sub
dec
hlt
stc
mov
dec
inc
cmp
loopne
inc
dec
sub
js
push
pusha
push
mov
rclb
xchg
push
cmova
cltd
iret
scas
mov
cld
fiaddl
repnz
mov
in
or
inc
les
pop
inc
outsb
xor
enter
adc
sub
push
jno
mov
stc
ss
inc
push
insb
mov
adc
and
lods
pop
sub
es
imull
roll
jmp
fstl
fists
pop
and
fistpl
ljmp
and
xchg
enter
pusha
test
jge
repz
cld
or
xchg
call
pop
lock
cmp
in
or
mov
pop
add
push
sbb
lea
mov
es
sub
into
mov
aam
cmpsl
inc
jle
adc
inc
add
insb
add
insb
insl
insl
cmpsb
push
pop
sub
mov
stos
cmpsl
rorb
or
out
or
and
mov
cwtl
or
mov
iret
mov
xor
cmc
xchg
xor
cli
and
xchg
sbb
es
jp
dec
inc
inc
xchg
jmp
cmc
lcall
lret
inc
cmp
cmp
out
loop
stc
sub
mov
push
sbb
test
in
push
ja
cmp
aaa
add
mov
mov
test
sarl
mov
pop
push
xorl
in
ret
or
fisubrs
adc
pop
shl
sub
sub
xor
shr
mov
stc
mov
and
lret
pop
or
jg
ret
and
pop
in
imul
mov
mov
inc
imul
inc
orl
rcll
xor
sbb
xchg
xlat
xor
add
add
dec
mov
cltd
cli
je
inc
pop
insl
stos
xchg
and
ljmp
mov
inc
test
int
cmpl
aas
add
cwtl
cld
pop
cwtl
aas
xor
xor
cmpsb
mov
ss
dec
aaa
lcall
cmp
cmp
push
or
cmp
sub
aad
xchg
pop
ds
sub
mov
jae
xor
bound
or
pop
fidivs
loopne
pop
jbe
js
int
cmp
xor
mov
ja
scas
clc
loopne
cmc
pop
xor
rcll
in
adc
xchg
inc
pop
adc
add
mov
pop
and
dec
push
push
mov
movsb
pop
sbb
movsb
xor
dec
fistl
inc
push
push
pop
stos
popa
mov
sbb
mov
add
mov
xchg
imul
pushf
xlat
jmp
gs
adc
ljmp
mov
ret
fcmovne
sub
test
cmp
mov
aad
inc
inc
push
mov
andl
mov
or
int
pop
loop
pop
imul
jl
push
fsubr
mov
cmp
mov
mov
or
popfw
popf
frstor
jecxz
ret
xchg
cld
xchg
pop
cltd
enter
daa
stos
dec
in
es
and
xor
jbe
inc
sbb
hlt
or
outsl
test
iret
jno
jle
fidivrl
mov
movsb
rol
mov
xchg
fs
dec
cwtl
mov
outsl
add
ss
fcoms
aas
in
into
fistpl
push
cmp
ret
fcompl
orb
shlb
loopne
pop
and
lods
adc
repnz
jle
icebp
dec
xchg
adc
in
sbb
insl
addr16
mov
rcll
inc
sub
cli
movsb
mov
xor
jae
movl
dec
jmp
pop
pop
add
push
sub
and
cmp
stos
aas
ret
mov
jns
jle
into
fdiv
sbb
cmp
adc
xchg
test
aam
xor
addl
sarb
jbe
jae
cmpsb
xchg
cmp
fptan
mov
cltd
lcall
mov
cmp
push
sub
xchg
xor
dec
out
jbe
stos
sub
inc
popf
call
mov
sbb
add
dec
pushf
or
fsub
sbb
into
ss
pushf
sbb
pop
push
inc
icebp
jecxz
rcl
xchg
call
or
aad
aas
mov
mov
mov
iret
add
and
pop
outsb
adc
lods
hlt
sbb
mov
dec
xchg
in
inc
gs
push
inc
frstor
pmulhw
adc
data16
xlat
push
and
lahf
fsts
mov
mov
xor
adc
and
cmc
scas
cmpsb
jecxz
xchg
xlat
inc
xchg
jp
and
xor
ss
or
push
pop
add
les
in
mov
frstor
push
fdivrl
mov
lret
faddp
cld
roll
cmp
and
pop
out
packssdw
notb
cs
lock
fmull
aas
loop,pn
jns
mov
bound
xchg
adc
aam
adc
ret
arpl
cmp
popf
sbb
dec
xlat
and
and
dec
sbb
push
jno
push
mov
loopne
inc
jecxz
ffree
lods
enter
rolb
popf
cltd
pop
out
lds
ljmp
stos
ror
push
arpl
shl
cmp
cmp
mov
inc
xchg
shl
icebp
pop
xchg
cmp
sti
ret
mov
movsb
rolb
mov
adc
xor
ret
shlb
fdivs
add
stos
sub
lock
fists
pop
xchg
pop
aam
push
mov
loop
loopne
rorl
fidivrl
pop
adc
pop
or
inc
mov
rcrl
and
leave
dec
xchg
pop
sbb
addr16
sbb
cmp
testb
jg
mov
dec
or
cmc
pop
lock
add
cmp
add
imul
mov
cmp
loopne
or
lret
inc
stc
outsb
dec
add
inc
ljmp
popl
mov
adc
xchg
into
fs
cmpsl
mov
lcall
dec
xlat
xor
push
push
sub
cmpsl
into
das
adc
sub
loope
lock
repnz
pop
insl
idiv
xor
fcoms
inc
lods
imul
lret
xor
mov
push
int3
xchg
mov
lea
fisubrl
xor
xchg
in
in
mov
mov
dec
fisubrl
inc
cwtl
and
or
lds
daa
ret
mov
lock
addb
in
cmp
cli
dec
pop
adcb
and
xor
add
cmp
ljmp
daa
jecxz
sub
or
add
add
fs
xchg
imul
cwtl
stos
stc
sahf
sub
inc
ja
movsbl
ret
add
jae
xchg
inc
call
jp
int3
das
out
ss
into
lods
sub
mov
cmpsl
or
daa
sbb
cmpsl
sub
repnz
subl
ret
inc
testb
ljmp
fcoml
sub
or
add
push
fidivrs
pop
add
push
faddl
cmp
add
cmp
popa
dec
pop
mov
pop
add
push
and
mov
mov
test
adc
xchg
ret
inc
aad
daa
mov
sub
pavgb
fdivr
lahf
jb
xchg
mov
adcl
xor
adc
mov
push
cmp
cwtl
mov
ret
xlat
xor
fisttpll
push
push
mov
add
sub
lods
jmp
dec
call
dec
xor
jnp
add
sub
mov
fisubrl
sub
sbb
leave
popf
mov
sbb
add
cli
movsb
pop
inc
mov
stc
cwtl
andb
pusha
imul
aam
dec
jo
arpl
loope
and
in
mov
add
aaa
repz
push
js
cs
pop
add
jo
lret
dec
jbe
mov
xor
mov
pushf
jmp
fisubs
or
stc
sbb
ss
jns
test
sub
push
and
push
mov
mov
add
sub
in
cld
cmp
jnp
mov
ret
push
mov
adc
test
jecxz
push
call
and
adcl
push
sub
mov
mov
bswap
cmp
mov
pop
imul
adc
push
data16
or
pop
or
out
arpl
lods
repnz
mov
pop
dec
pop
ficomps
lock
push
jno
push
aaa
dec
scas
call
ja
int
jnp
lahf
add
xchg
cltd
cmp
add
and
push
iret
call
rcl
push
decl
or
push
mov
mov
cwtl
mov
sub
out
mov
sbb
nop
mov
jmp
mov
push
jbe
fdivr
cmp
imul
ljmp
sbb
pushf
bound
dec
roll
lcall
sub
sub
mov
push
sbb
push
mov
mov
sub
addr16
inc
aad
adc
adc
cmc
add
sub
lahf
rorb
push
ficompl
inc
mov
push
out
out
repnz
aam
movsl
cmpsb
dec
push
orb
cmp
sarb
cltd
mov
out
sbb
outsb
pop
repnz
jae
mov
pop
inc
out
adc
add
jg
hlt
rol
outsl
push
cmp
sarl
insb
xchg
movsl
cmpsl
dec
int3
mov
pop
cs
incl
repnz
inc
inc
pop
ljmp
in
adc
inc
cli
mov
cwtl
shlb
jmp
jle
std
dec
mov
lods
in
cmp
aam
outsb
mov
or
es
ds
icebp
lret
outsb
mov
inc
sub
mov
and
jl
daa
adc
test
int
test
and
in
insb
hlt
lods
dec
cmp
mov
inc
fistl
xor
out
add
mov
push
xchg
ds
fdiv
add
xor
in
mov
dec
mull
sub
in
push
mov
jno
or
cwtl
mov
and
shr
lret
and
push
in
insb
lahf
daa
inc
mov
push
xor
movsl
aas
xchg
sub
ficoml
icebp
xor
inc
jno
sub
shrb
inc
ret
test
mov
and
inc
pop
and
stos
mov
movsb
mov
add
js
shrl
mov
inc
out
cmp
nop
mov
xchg
movsb
mov
jge
enter
loopne
fidivl
lea
jbe
int3
mov
cld
cmp
out
int
jo
cmovp
ds
jno
cmp
jge
clc
mov
stos
into
fcmovne
inc
push
hlt
lods
or
cmp
adc
push
sub
dec
test
pop
testb
mov
adc
push
hlt
loope
xor
adc
mov
add
idivb
cmp
daa
inc
mov
mov
xchg
and
and
pushl
push
and
and
aam
outsl
in
jl
sub
add
aad
ror
pop
stos
pop
jl
sbb
imul
jae
sbb
cmp
stos
es
pop
sub
sbb
push
push
jno
imul
pop
sub
inc
frstor
inc
mov
mov
mov
fistpl
in
jns
xor
pop
mov
daa
add
into
mov
adc
xchg
shll
mov
jmp
push
lcall
into
movsb
test
lock
ja
xchg
imul
sub
push
cmp
dec
xor
or
cmp
push
xchg
cmp
popw
call
push
and
insb
inc
and
and
sub
pop
mov
loopne
mov
int
fnstcw
jg
pop
jo
lock
jp
enter
and
mov
loopne
adc
adc
adc
fnstenv
sti
in
sbb
popa
loop
cmp
push
xor
mov
scas
xor
int
inc
adc
sbb
xchg
loop
and
out
movsb
mov
pop
stos
push
fists
xor
dec
jp
pop
mov
rcrl
lahf
test
mov
mov
ret
sbb
add
jbe
lods
dec
div
dec
and
and
add
loop
and
les
loop
xchg
cmp
pop
cmp
sbb
mov
cmp
stos
stc
add
mov
ljmp
out
xchg
xchg
hlt
test
mov
xor
cmp
xor
inc
in
and
loopne
arpl
jmp
fdivp
ja
dec
test
mov
mov
das
pushf
enter
in
push
cmc
pop
push
pop
sahf
test
jge
mov
stos
fldt
aaa
ss
fcomps
fdivr
push
pop
call
xor
pop
and
pop
int3
ret
popa
mov
jle
lock
sbb
imul
addl
xchg
push
frstor
push
jp
cld
lods
lods
push
pushf
mov
xor
pop
mov
cmp
sub
inc
and
loope
ficoms
int3
test
iret
cmp
subb
imul
ret
dec
or
mov
push
pop
sub
mov
test
xchg
mov
sub
cli
mov
and
pushf
mov
jb
jae
jbe
aas
loop
cld
lds
push
stc
push
fdivs
inc
xor
iret
sub
cwtl
hlt
push
adc
cmp
mov
jp
mov
push
jle
cmp
sbb
into
es
add
mov
mov
lods
push
dec
cs
jmp
ja
test
movsl
lcall
dec
mov
add
inc
inc
xchg
cmpsl
sub
add
cltd
lea
xlat
inc
jnp
jb
or
sbb
cld
add
jno
aad
mov
xchg
sarb
push
mov
jbe
xchg
pop
xchg
aas
fisubl
push
out
lret
jge
xchg
lret
cld
mov
mov
lock
jg
iret
fwait
mov
pusha
sbb
lret
or
and
out
push
sbb
xor
xor
cmp
cmp
xchg
cmp
jg
inc
imul
fmul
es
pop
repnz
shlb
cltd
cltd
inc
mov
inc
mov
and
fcmove
fidivl
mov
xchg
inc
das
xchg
je
jle
cmp
sub
xchg
xchg
add
pop
sbb
sar
pop
mov
in
and
inc
mov
fdivp
mov
xchg
nop
imul
call
mov
and
dec
mov
pop
ret
lds
and
or
test
repnz
cmpsl
push
and
test
pop
insb
mov
mov
lods
negl
push
nop
ss
pop
imul
xor
cltd
lods
je
push
pop
testl
orl
dec
ds
int
xchg
rcrb
adcb
inc
jno
cwtl
out
jl
mov
stos
fdiv
pop
ss
lret
push
push
hlt
cmp
int
inc
lcall
jmp
popa
popa
outsl
movsb
add
cwtl
cmp
push
pusha
lret
sbb
mov
pop
int
adc
or
in
mov
scas
sub
je
push
ss
movsl
rcll
pop
fidivs
les
push
popa
mov
and
movsl
lods
out
sbb
fs
sub
xor
jg
xchg
cltd
shll
mov
lcall
fsubs
pop
int
repnz
push
or
mov
jo
sarl
sbb
push
xorb
pushf
rorl
loopne
jno
or
mov
cmpsb
outsb
mov
adc
pop
mov
mov
add
jge
sub
add
scas
movsl
xor
pop
cld
jg
pop
loope
push
push
and
mov
adc
cltd
mov
xor
mov
cmp
in
mov
xchg
imul
mov
inc
aaa
mov
aaa
jns
mov
cmpsl
aam
jl
shlb
adc
and
icebp
mov
dec
mov
out
ja
paddq
jae
mov
push
je
hlt
movsl
add
adc
inc
aaa
jns
push
push
enter
dec
repnz
cmp
int3
mov
sub
add
call
mov
stos
mov
je
mov
xor
out
into
sbb
jbe
mov
lods
iret
jno
sti
data16
cmpsl
ja
lcall
mov
jp
xor
int3
xchg
inc
loope
cmpsl
adc
jae
mov
jae
mov
push
dec
ja
lahf
cmp
ljmp
cwtl
addr16
mov
dec
and
int
dec
pop
insb
cmp
sbb
cmpsl
jl
xchg
int
inc
jbe
je
bswap
cmp
enter
ret
loopne
addl
jmp
addr16
out
jbe
mov
push
nop
or
fdiv
icebp
popf
xchg
stos
imul
out
dec
bound
inc
jne
push
mov
add
cmp
xor
and
in
dec
sbb
jmp
iret
neg
mov
xchg
mov
lcall
movsl
mov
cltd
xor
add
push
testl
jae
gs
mov
enter
pop
lock
mov
push
adc
adc
cmpsl
xor
dec
dec
cmpsl
adc
add
and
inc
sahf
dec
fimuls
dec
aad
iret
xlat
jo
fstpl
clc
or
ret
inc
scas
adc
mov
jmp
cmp
push
cmc
inc
enter
out
lret
js
pop
hlt
dec
adc
bound
jl
mov
rclb
lods
sub
sarb
fcomi
mov
xor
call
out
dec
test
mov
unpckhps
add
lret
sub
fwait
sub
add
inc
cmpsl
adc
mov
sbb
gs
inc
adc
cmp
jmp
mov
inc
dec
sbb
push
lret
adc
or
dec
cld
mov
cmp
cld
mov
fcomps
sub
push
pushf
popa
xor
xchg
les
subl
pop
mov
xor
js
mov
adc
xor
popa
jbe
push
dec
int
jnp
sub
push
cmc
inc
rclb
cmpsb
pop
out
push
subb
lds
in
int
ds
add
mov
into
push
daa
int
push
int3
pop
in
jp
in
lods
lret
leave
mov
sti
mov
mov
xlat
inc
xchg
pop
inc
out
test
mov
pop
and
push
and
mov
pop
pusha
cmc
mov
sub
bound
cltd
mov
add
popf
add
lods
popa
lods
test
push
jae
pusha
pop
fmuls
or
or
imul
test
stos
lods
push
repnz
js
loopne
ret
jmp
test
test
push
dec
fsin
enter
decl
in
or
scas
insl
pop
adc
push
add
push
cmp
mov
test
push
insl
dec
xlat
test
mov
decl
mov
imul
inc
dec
pop
xchg
jge
push
mov
dec
in
mov
test
orl
push
xlat
mov
dec
mov
cmp
in
mov
icebp
ljmp
sub
shlb
test
pop
fistps
xchg
mov
stc
cli
dec
movsb
add
je
cwtl
mov
dec
lods
movsb
mov
movsl
out
jb
shl
lods
pop
mov
lahf
daa
push
inc
inc
loope
aam
aas
inc
fiadds
dec
in
dec
aad
adc
jle
fidivl
loop
out
add
ss
adc
clc
cmp
jae
dec
xor
and
push
das
jo
jne
sub
out
sbb
xlat
xchg
xchg
hlt
sub
add
call
test
fidivrl
gs
inc
cmpsb
sub
cli
lea
xchg
hlt
jns
inc
pop
or
sbb
sub
mov
fcmovb
stos
movsb
inc
fdivl
jecxz
push
mov
addr16
mov
push
xchg
rcr
je
and
ja
daa
xchg
dec
les
inc
xchg
roll
push
dec
jmp
fmul
inc
iret
mov
call
add
mov
int3
push
cld
sub
mov
sti
pop
outsb
xchg
sub
fwait
int3
adc
sub
pushf
test
cmp
cmpsb
ja
dec
cltd
insb
sbb
lods
lea
pop
push
lods
pop
push
mov
in
int
jle
mov
xchg
or
sbb
pop
js
jmp
push
addr16
add
pop
in
ss
test
xchg
sbb
push
cld
insb
rorl
sbb
dec
in
jo
cmp
add
mov
shrb
ds
je
stos
mov
ds
jge
mov
pop
push
in
les
add
ror
iret
inc
push
mov
jae
in
cmpsl
jns
fldcw
jo
outsl
imull
jbe
imul
mov
andl
pop
sub
ss
cmp
fisttps
push
inc
outsb
fs
jno
sarb
cwtl
fwait
xchg
int3
jae
out
xor
xor
sub
mov
into
sbb
adc
push
std
push
push
xchg
add
mov
pop
push
inc
lods
cmp
ror
push
nop
pop
push
mov
cmpb
aam
aam
add
lret
dec
inc
push
cltd
movsl
call
mov
out
mull
loopne
loopne
jmp
ljmp
ret
jp
les
nop
enter
shr
pop
ja
adc
sub
sub
cmp
mov
dec
xor
lea
mov
repz
gs
shr
pushf
sub
pop
sbb
les
ret
xchg
addb
dec
je
test
bound
mov
mov
leave
out
adcb
or
jp
adcl
dec
jbe
adc
cmp
in
inc
push
mov
pop
mov
sbb
jmp
inc
cli
mov
test
push
mov
test
mov
call
inc
shll
cwtl
shll
shrl
mov
hlt
or
int3
in
pusha
ficoml
in
inc
bound
in
dec
aas
shrl
mov
lock
inc
add
xor
jl
into
int3
sti
mov
enter
mov
es
sar
fmul
or
movsl
sti
mov
into
inc
or
push
enter
jb,pn
jo
push
popf
sbb
negb
add
enter
les
sbb
add
popl
fucomp
cmp
sub
cmp
test
rclb
sub
test
fcmovb
sub
fdivp
xor
fisubrs
jmp
xabort
dec
mov
push
xor
pop
xor
xor
xchg
inc
jl
in
mov
dec
xchg
mov
loop
mov
int3
lea
test
dec
or
xchg
sti
aam
fcomp
xlat
pop
pop
pop
xor
insb
xchg
fcompl
inc
out
jl
jnp
and
pushf
std
jp
rclb
icebp
lret
scas
inc
push
fnstcw
pop
xor
and
jl
mov
cld
pop
mov
cld
pop
and
mov
pop
pop
lret
loopne
repnz
std
cmp
push
adc
inc
jno
xchg
std
xchg
call
sbb
outsb
mov
mov
sub
mov
lds
aad
mov
imul
cli
call
xor
fstpt
repnz
mov
in
fisttps
in
incl
ret
and
dec
dec
sbb
cmpsl
pushw
pop
movsb
push
int
pop
in
cmp
data16
adc
or
fwait
ljmp
push
add
movsb
mov
hlt
mov
cmpsl
mov
xchg
outsb
adc
sbb
add
fmuls
or
add
xchg
test
and
stos
stos
clc
out
in
or
scas
adc
push
sub
in
pop
lret
mov
dec
subl
imul
fwait
cmp
pop
jl
pop
inc
pop
mov
mov
fbld
movsl
insb
std
jp
rclb
icebp
lret
scas
inc
dec
stos
xlat
dec
adc
test
mov
push
repnz
cmp
push
adc
subl
sbb
add
fmuls
mov
xor
mov
fistpll
ds
in
fwait
addr16
iret
sbb
sbb
jmp
sbb
pop
mov
bound
dec
stc
imul
and
jge
sbb
dec
lea
xchg
adc
popa
sbb
cmp
outsb
push
ror
mov
jae
cmp
enter
pop
and
mov
movsb
mov
or
in
pop
mov
ffree
sub
inc
pop
xlat
imul
in
inc
cmpsb
sub
sub
lods
jl
cmc
fucomi
sbbb
fldenv
shlb
jl
enter
fsub
lcall
test
add
xor
mov
fwait
cmp
dec
push
mov
mov
mov
lods
adc
or
leave
pop
je
bound
and
cwtd
insb
in
jne
mov
cwtl
add
dec
xchg
xor
lcall
scas
cmpl
sub
jmp
sbb
cmp
les
nop
xchg
sub
insb
cmc
sti
jp
sbb
movsl
xchg
jne
mov
push
sbb
cmpsl
jmp
mov
or
xor
cmc
fwait
cmp
add
aaa
sbb
adc
je
int
lea
scas
sub
cvtps2pd
lret
loopne
repnz
cmp
dec
adc
inc
jno
xchg
std
xchg
ljmp
xchg
test
cmovs
and
insb
rorb
fsubs
fisttps
jb
jle
adc
insb
cmp
ffreep
outsl
ret
lea
in
dec
push
mov
xor
sub
adc
mov
les
cld
sarl
inc
xor
fdivrs
dec
fists
push
scas
test
dec
repnz
outsl
ljmp
sub
push
mov
sub
int
dec
int3
lret
out
add
add
and
insb
cmp
xor
sbb
dec
sub
mov
add
cmpl
inc
pop
mov
and
or
fcompl
and
pop
lcall
and
in
push
cwtl
les
fs
cmp
xchg
std
nop
pop
test
iret
pop
cmpsb
pop
mov
mov
sub
adc
jo
rcrb
mov
outsl
pop
xchg
pop
andb
add
in
mov
decb
aam
dec
hlt
mov
cld
mov
cwtl
aas
mov
cmp
pop
mov
jns
ljmp
inc
mov
adc
mov
rcrl
cmp
mov
insb
arpl
fwait
aam
pop
push
popl
rcrb
xor
test
pop
push
inc
jg
pushf
fsubrl
mov
in
jb
test
mov
dec
pop
pop
mov
sub
hlt
mov
enter
mov
imul
lock
mov
xchg
xchg
jmp
dec
mov
cmp
sbb
inc
leave
sbb
xchg
or
cmpsl
aas
mov
jmp
out
mov
cmp
inc
pushf
cmp
jp
imul
or
popa
or
icebp
mov
xchg
xchg
insb
cltd
xchg
cmp
pop
adc
mov
cs
repnz
inc
pop
out
cmp
push
jmp
test
push
pop
div
dec
loopne
imul
out
imul
repnz
lock
cmpsl
pop
cmp
inc
addb
inc
iret
enter
pop
pop
add
out
mov
lcall
sbbl
lret
mov
lods
dec
shlb
aam
fcoml
lock
jo
in
lret
scas
cmp
gs
out
lcall
sub
push
sub
mov
mov
shlb
data16
cmp
enter
fs
in
int3
and
scas
mov
xchg
aam
mov
call
adc
les
mov
push
movsb
loop
insb
pop
loop
sbb
cs
repz
xchg
cli
mov
out
shrb
inc
fs
mov
xchg
mov
mov
xchg
adc
in
scas
inc
clc
nop
and
movsb
rcrb
test
jp
or
mov
cmp
fadds
out
int
xor
idivb
dec
pop
lock
jp
or
xor
mov
xchg
rcrb
xor
pop
lret
inc
inc
pushf
and
xlat
enter
jbe
pop
out
cs
cld
mov
sbb
rorl
stos
push
dec
mov
add
adc
addl
cmc
add
push
mov
bswap
test
jnp
repz
mov
stc
sbb
divb
xor
pusha
lret
roll
shrl
xchg
aas
lea
aaa
int3
scas
and
fistpl
jnp
ret
loop,pn
xchg
adcl
addr16
cmp
jl
mov
pop
shrl
adc
mov
ljmp
imul
mov
adc
es
push
gs
jnp
adc
cld
mov
int3
nop
mov
iret
lock
out
jae
in
int
xlat
adc
int
jo
mov
ret
mov
xchg
inc
mov
push
push
fnstsw
mov
mov
fcmovnbe
lahf
fwait
scas
rolb
fwait
movsb
jl
xor
rorl
leave
mov
fisubrl
mov
dec
out
dec
sbb
into
pop
cmp
cmp
ret
stos
and
arpl
add
hlt
cwtl
mov
mov
adc
cld
mov
cmp
mov
sbb
stc
or
js
inc
loopne
rcrb
pop
adc
call
push
cmp
call
cmc
cltd
mov
push
rcr
push
cli
lods
dec
add
lret
pop
xor
mov
mov
cmp
movsl
sbb
jecxz
and
ja
std
in
jp
inc
aaa
dec
aaa
into
mov
pop
decl
mov
mov
xor
fiadds
jnp
fadd
adcb
fnstcw
sub
mov
pop
adc
test
mov
enter
mov
hlt
sbb
mull
fdivs
data16
aas
outsb
dec
lock
pusha
mov
mov
insl
imul
mov
mov
pushf
xor
add
in
inc
fdivs
ss
xor
mov
cmp
mov
data16
rolb
decb
fimull
cmp
lahf
nop
data16
lock
sarb
mov
js
mov
leave
add
push
inc
arpl
mov
fs
push
shl
xchg
and
cmpsb
call
push
pushf
loopne
push
jp
xor
shlb
push
fldenv
sub
and
dec
dec
mov
cmp
lds
cmc
dec
leave
pop
cli
jp,pn
dec
xor
xchg
cmp
sub
sub
push
dec
sahf
outsl
notl
inc
dec
push
cwtl
mov
sti
popf
xor
rol
push
roll
push
in
lods
js
and
pop
mov
gs
sbb
decb
fiadds
outsb
pop
into
pop
aas
jmp
repz
xchg
repnz
mov
mov
jp
sti
mov
in
dec
icebp
push
sahf
dec
xchg
rorl
cltd
aas
pusha
cmp
loop
sub
fsubs
pop
cmc
decl
js
xor
dec
or
sbb
adc
or
xchg
add
dec
pop
popa
jl
mov
shlb
stc
jo
add
push
hlt
flds
into
dec
mov
in
pop
push
jne
test
shrl
das
insl
dec
ljmp
push
jmp
roll
adc
rorl
jo
xchg
dec
cwtl
js
dec
fsubrs
push
mov
mov
add
loop
jbe
or
addb
cmpsl
xor
adc
repz
les
sub
add
mov
pusha
adc
add
loope
in
loopne
sahf
xchg
jge
add
fldenv
cmpsb
clc
cmp
or
xor
xor
adc
stc
stos
lcall
pop
stc
pop
dec
jl
movsb
aas
sbb
imull
aad
lcall
push
push
ucomiss
sti
test
mov
mov
pop
popa
popa
insl
movsb
add
adcb
adc
xchg
sub
into
movsl
test
or
repz
xor
mov
in
jae
je
js
mov
sahf
cmp
jg
mov
and
pop
jo
ds
sbb
push
add
jl
pop
cmp
les
mov
aas
lret
jne
cmp
push
into
add
jns
cmp
pop
out
inc
fmull
mov
loopne
cmp
je
repz
sub
xchg
insb
adc
sub
movsb
adc
loope
jp
movsl
cmp
adc
lahf
imul
ds
sbb
pop
mov
jae
fisttpl
enter
lahf
clc
or
push
cmp
adc
test
adc
cld
cwtl
sti
and
mov
es
jb
xor
push
es
pop
rcrl
std
jb
in
cld
mov
mov
gs
stos
jo
cmp
xchg
add
leave
and
xchg
pop
jnp
inc
cmp
sub
jp
ret
das
xchg
pop
mov
add
lea
add
daa
inc
sub
aad
and
fistl
sub
xlat
push
mov
stos
mov
sub
and
sub
sub
rcrl
fildl
add
cmpsl
fistps
scas
mov
lcall
inc
cmp
addr16
stos
lcall
aad
inc
pop
mov
arpl
ljmp
int
imul
sub
mov
jmp
jae
call
pop
movups
sbb
pop
int3
out
cmpsb
outsb
mov
pop
imul
xchg
movsb
push
and
stos
les
mov
mov
call
xchg
pop
ljmp
sbb
in
movl
jmp
sarl
xor
and
into
push
mov
int
in
mov
xor
cmp
or
test
xor
add
cmp
lds
in
inc
inc
loope
aam
aas
filds
cs
or
adc
xchg
adc
push
pop
sbb
mov
push
xchg
cmpsl
sub
shlb
xchg
dec
push
mov
movsb
mov
loop
cs
cmp
cmp
xor
int3
add
into
sub
cmp
arpl
into
ja
pop
adc
fs
add
add
icebp
mov
cli
aam
inc
push
xchg
into
das
dec
jae
test
in
sub
shlb
lcall
iret
ss
movsb
and
xchg
cmpsl
test
and
mov
movsl
enter
dec
and
test
fcompl
dec
mov
mov
movsb
mov
iret
sub
lods
in
and
aas
lret
imul
add
sub
mov
push
push
call
pop
fnstenv
sbb
jecxz
sar
push
shl
and
sub
out
jnp
inc
loope
repz
arpl
dec
fstp
mov
and
sarb
mov
add
mov
ret
xor
xor
pop
fmuls
ret
leave
cmpsb
mov
out
adc
dec
aas
lock
lcall
rolb
push
mov
lock
dec
icebp
cwtl
cli
cmp
aas
notb
mov
and
lods
push
inc
sub
xchg
lods
int
fisttpll
mov
fmuls
inc
pop
xchg
cld
out
jmp
test
inc
das
xchg
or
insb
fcomps
roll
mov
or
imul
js
bound
inc
jno
pop
xor
shlb
inc
pusha
sbb
lock
and
out
cmpsb
enter
test
and
xchg
rcrb
leave
lods
ja
es
dec
jle
dec
rorl
xchg
iret
aaa
inc
stos
int
pusha
fistpll
push
in
cmp
roll
and
xor
sub
pop
stos
insb
cwtl
hlt
push
jle
dec
dec
or
mov
and
jmp
loope
sub
add
in
sbb
pusha
lret
or
lds
mov
movsb
sbb
mov
cld
je
stos
pop
les
inc
leave
int3
mov
xchg
cmp
push
gs
aam
dec
iret
add
inc
icebp
gs
adcb
stos
popa
push
pusha
and
mov
cld
or
out
add
xlat
jecxz
call
pop
lret
out
inc
sub
stc
add
test
add
xor
imul
hlt
cwtl
bound
clc
mov
push
xor
call
mov
loope
jns
imul
aad
loop
lret
or
fstps
insb
shll
pop
mov
push
mov
sbb
fdivl
mov
aaa
stos
xlat
inc
imul
xor
or
xchg
mov
fwait
sub
clc
and
push
les
inc
int3
loope
mov
cmpsb
dec
add
mov
sbb
jb
dec
mov
or
stos
push
inc
out
testl
aaa
stc
outsl
ret
popf
insb
rclb
and
lcall
jno
stos
in
and
jns
insl
or
jle
pushf
cmpsb
push
popa
pusha
adc
out
mov
and
mov
loope
sahf
ret
dec
into
pop
sbb
dec
lods
adc
bound
movsb
stos
add
jae
mov
jle
lods
sbb
add
sbb
xchg
mov
xchg
lea
fcompl
out
loope
xor
iret
daa
inc
sub
fsubrl
out
fistpll
xchg
scas
pop
cltd
adc
movsb
fcmovbe
std
fwait
xchg
fsubrs
imul
push
dec
jecxz
sar
push
orb
insb
adcl
mov
jno
pop
mov
pop
cwtl
imul
pop
and
push
ds
inc
test
daa
jle
test
scas
nop
cmp
loop
push
test
cmp
cltd
adc
inc
sub
in
pop
in
sub
clc
in
inc
into
out
push
cld
dec
jecxz
sar
push
stos
dec
ret
adcl
mov
cs
jle
out
xor
mov
sub
inc
in
sub
dec
mov
rcrl
jl
shl
mov
dec
xlat
test
mov
not
les
sub
sub
popf
je
pop
jg
cmp
mov
les
int3
ljmp
fdiv
mov
jb
xchg
and
add
mov
cs
jle
out
xor
mov
sub
fs
sub
insb
mov
rcrl
sbb
shl
mov
dec
xlat
test
mov
not
les
sub
sub
lcall
mov
or
add
mov
fcoms
adc
aas
or
cmp
loop
in
test
push
mov
inc
jbe
xlat
inc
pop
addb
movsl
aas
add
xchg
mov
sbb
frstor
adc
inc
bound
cltd
stos
out
add
mov
nop
roll
xor
in
pop
cmp
sbb
sub
adc
xor
enter
test
push
nop
cmp
loop
les
push
inc
jbe
xlat
inc
push
fisubl
inc
jno
in
ljmp
jg
testb
rcr
movsl
add
mov
test
pop
jb
shrb
out
jnp
ficoml
lds
inc
jle
dec
pusha
xor
pop
test
in
mov
push
in
mov
addb
popa
pusha
adc
pop
xchg
jp
and
adc
popa
mov
imul
cmp
adc
xor
push
in
adc
dec
adc
aas
inc
ds
xor
and
jb
lds
push
fwait
aam
pop
cmp
not
les
sub
sub
jmp
and
insl
sub
in
sub
cld
mov
rcrl
in
mov
mull
dec
xlat
movsb
or
sbbb
aam
dec
je
inc
push
sub
and
or
pop
ljmp
sub
mov
mov
add
dec
or
xor
cld
repz
xchg
cmp
xchg
dec
adcb
movsb
fs
add
jno
or
add
add
push
push
xor
sub
dec
push
inc
push
outsb
pop
mov
pop
ljmp
cmp
and
sub
fdivs
sbb
xchg
scas
insb
movsb
mov
add
es
push
or
movsl
sarl
push
mov
pushw
mov
mov
jno
jno
or
add
add
cmpsb
cs
fwait
repnz
cltd
test
push
in
rcll
mov
enter
stos
mov
sbb
shl
out
aad
and
fistl
sub
cs
ss
loopne
pop
ja
mov
nop
rcrl
xlat
sar
sub
loopne
sub
cld
dec
jecxz
sar
push
push
ret
adcl
mov
cs
jle
out
xor
push
xlat
pop
inc
nop
push
std
stos
bound
in
sub
sbb
sbb
sbb
or
jmp
xchg
shr
and
into
push
mov
in
push
in
loopne
cli
adc
aas
repnz
xor
nop
and
and
pop
dec
mov
fwait
aam
call
add
rorl
stc
push
data16
in
add
in
or
and
js
out
and
pop
sbb
or
jmp
out
pop
bound
stos
shll
dec
sbbl
pop
sub
cld
int3
mov
or
call
inc
outsb
mov
and
mov
xchg
cmp
jo
lds
shrl
test
ret
jns
pop
or
cs
sbb
jecxz
jle
cwtl
jge
repz
insb
and
mov
mov
or
add
mov
js
pop
fs
adc
addr16
loop
jl,pn
jle
or
rorb
ja
mov
push
jno
pop
jp
cltd
adc
mov
int
rcr
gs
xchg
mov
fistpll
ret
inc
rcr
into
outsl
movsb
pop
fs
imul
data16
stos
cltd
mov
mov
xchg
cltd
sub
movsl
mov
mov
popa
adc
gs
loop
cs
in
rcrb
dec
pslld
dec
push
sub
mov
adc
pop
push
into
push
jae
cwtl
xchg
mov
outsl
ja
and
mov
cltd
push
dec
add
stos
shll
sub
int3
xor
test
push
jbe
push
in
push
push
jb
xchg
ja
mov
mov
pop
dec
xor
dec
dec
and
xchg
cld
pop
jp
cld
pop
jb
mov
bound
das
in
repnz
jb
loopne
pop
jbe
sarb
xchg
pop
cli
lahf
shlb
mov
hlt
pop
inc
popl
mov
fistpl
xchg
clc
xchg
das
call
inc
lock
push
jno
push
mov
scas
call
loope
insb
xchg
push
cwtl
mov
jno
mov
xchg
jo
or
add
cmp
mov
mov
popa
adc
jns
cmp
fnstsw
or
pop
or
mov
decl
add
jp
cltd
adc
mov
int
shrl
gs
xchg
mov
enter
inc
les
into
outsl
movsb
pop
nop
sub
imul
lock
cltd
mov
xor
cltd
das
push
fmuls
adc
aas
sub
cmp
loop
in
inc
push
push
test
inc
jbe
adc
adc
aas
and
fadd
xor
inc
and
pusha
pusha
insl
mov
jecxz
add
and
fwait
jno
push
iret
mov
cmpsb
mov
std
ror
out
push
data16
inc
jbe
xlat
sub
sbb
cmp
add
mov
adc
xor
ret
jno
or
add
or
inc
xor
dec
les
mov
pavgb
lcall
xchg
add
jmp
daa
inc
mov
dec
dec
push
mov
mov
seto
loop
sub
push
inc
jbe
xlat
das
pop
inc
add
movsl
aas
add
mov
jle
hlt
mov
or
xor
stos
mov
out
sub
pop
jmp
test
sbb
cltd
stos
out
les
mov
cli
nop
rcr
pop
fs
pop
insb
sub
or
adcb
or
sub
add
ret
shrb
cmp
sub
orl
fcmovu
enter
sbb
in
imul
js
lcall
jo
or
pop
ss
push
ss
dec
pop
or
dec
xchg
stos
loope
xlat
cld
repz
cmp
push
mov
jno
pushw
cltd
adc
mov
int
rorl
shlb
mov
fistpll
ret
inc
les
into
and
push
cwtl
jge
popf
pop
adc
cld
pop
mov
dec
movsl
shlb
shlb
mov
xchg
das
in
in
pop
fistps
fmuls
mov
mov
jno
pop
stos
cltd
adc
and
cli
mov
je
pop
sub
jno
sbb
and
push
cwtl
mov
movsb
and
dec
or
xor
cld
repz
test
ljmp
jo
into
xor
and
mov
adc
les
jo
xchg
divb
clc
ss
adc
dec
rcrl
cmc
jle
mov
sub
mov
ss
cld
daa
inc
mov
and
fwait
jno
data16
jno
pop
es
bound
stos
loope
popl
push
nop
add
push
mov
mov
dec
pop
pop
in
in
clc
xorb
test
orl
les
repnz
jle
jmp
push
mov
bound
pop
fs
ss
test
lods
adc
inc
test
sbb
movsl
sar
jl
xchg
and
sbb
mov
sub
cmp
xorl
push
lods
xchg
push
sub
repz
aam
or
mov
aas
ss
mov
lods
xchg
aas
insb
ret
sbb
mov
mov
ja
mov
pusha
or
inc
mov
adc
outsl
movsb
add
popf
inc
lea
xor
int
test
jae
mov
shrl
rolb
adc
adc
in
ja
push
dec
jecxz
adc
daa
push
xor
push
loope
and
in
cmp
loopne
mov
pusha
jp
shrl
pop
and
pop
jl
ljmp
adc
fcomip
fistl
testb
mov
ret
dec
ret
loopne
in
and
push
inc
lock
shl
pop
les
in
pop
int3
add
cmpsl
mov
sbb
ljmp
ljmp
dec
jne
dec
into
push
mov
adc
fsubr
hlt
dec
fcoml
xor
jno
or
add
add
cwtl
ja
pop
insb
sub
fildll
inc
push
sub
popf
je
jmp
mov
les
pop
ljmp
sub
mov
lcall
cwtl
mov
pushf
and
dec
or
xor
cld
repz
imul
pushf
pop
mov
into
xor
add
jno
or
add
add
pop
jno
not
les
sub
sub
popf
je
or
and
xor
xor
pop
mov
ljmp
or
mov
mov
movsl
add
dec
or
xor
cld
repz
leave
cmp
mov
insb
adc
xor
mov
mull
loope
loop
xor
cmp
cltd
pop
dec
xor
dec
dec
ds
test
popf
pop
arpl
lock
test
divb
lock
push
jno
push
in
in
bound
cltd
stos
loope
cbtw
jo
push
loop
bound
adcl
push
jb
push
inc
jo
or
jg
pop
das
add
ds
and
cmpsb
mov
gs
lret
add
mov
icebp
push
rorl
movsb
xchg
add
test
adc
test
cltd
aas
sbb
jbe
xor
mov
add
je
pop
jo
cmp
inc
data16
push
mov
inc
lds
mov
test
pop
mov
orl
push
pop
repnz
jge
imul
dec
adc
or
dec
daa
movsl
in
fdivl
or
lods
pop
and
cwtl
add
pop
enter
stos
mov
push
xor
in
xchg
or
pop
jns
in
sub
aad
pop
mov
mov
push
les
mov
incl
add
mov
sub
mov
jge
jp
inc
mov
pop
cwtl
das
push
dec
mov
or
in
jg
inc
into
in
aas
js
or
shll
aas
mov
bound
add
popa
mov
leave
or
xchg
lcall
pop
jg
sub
cltd
cltd
xchg
jb
pop
call
gs
jge
fimull
pop
insb
push
subb
nop
bound
aad
into
sub
or
inc
rorl
cltd
rcr
mov
pusha
test
sub
mov
pushf
xchg
lahf
pop
ds
js
xchg
dec
pop
inc
xlat
adc
insl
mov
cmp
scas
aas
mov
fld1
pop
pusha
out
pop
notl
repnz
in
scas
mov
dec
cmp
jo
or
push
push
push
sahf
lret
dec
out
ret
mov
dec
outsb
cli
jl
mov
sbb
xor
movsl
mov
add
cwtl
addl
push
jae
add
rcrb
and
push
cmc
jg
ljmp
dec
test
adcl
out
cld
repz
imul
imul
push
cmp
xor
pop
pop
out
jmp
cld
repz
sub
lahf
sahf
mov
hlt
xchg
clc
sub
pushl
lods
mov
and
lock
mov
jns
icebp
ljmp
aas
loop
or
test
sbb
in
lods
and
scas
or
xor
pushf
cmp
cmp
outsl
movsb
add
cwtl
sarb
imul
push
fimull
out
inc
xor
shll
nop
in
xor
cmp
or
addb
mov
popa
or
push
mov
jo
ljmp
rclb
lods
and
andl
roll
mov
movsl
and
inc
xchg
jb
pop
cmp
lret
mov
ret
out
mov
inc
push
pop
pop
jno
scas
dec
add
dec
sbb
loopne
call
je
pop
cmpsb
xchg
xchg
andl
xor
mov
orl
aam
ljmp
jne
xlat
inc
jge
hlt
test
cltd
add
sub
imul
or
mov
xor
ljmp
sub
inc
sbb
cmp
push
mov
mov
pop
or
loop
mov
jl
xor
add
pop
fdivrl
sbb
and
add
xchg
adc
int
xacquire
dec
xchg
xorl
dec
xorl
xchg
or
jp
hlt
sub
hlt
xchg
jmp
fistps
lcall
push
cmpsb
lea
insb
lret
mov
dec
pop
js
xchg
mov
mov
ja
jae
sbb
loop
jae
lret
popf
frstor
xchg
lea
pop
pusha
add
pop
in
ja
cld
pusha
mov
and
fdivr
femms
adc
pop
pop
push
add
cwtl
or
mov
fisttps
scas
mov
xchg
xlat
pop
mov
in
mov
mov
shll
test
inc
dec
adc
cmp
push
bound
mov
sub
sbb
xor
sub
jmp
sarl
cs
jb
xchg
jo
jno
mov
xor
stos
mov
shlb
mov
movsl
sahf
cwtl
roll
or
push
test
sub
fsubr
cld
movsl
test
test
inc
push
fdiv
push
js
mov
or
repz
in
je
dec
jbe
in
push
add
mov
xchg
and
rorb
pop
fs
adc
pop
in
loop
sub
jle
nop
xor
in
or
pop
mov
in
pusha
roll
mov
mov
jno
sub
dec
pop
pop
dec
or
inc
or
mov
xor
repnz
jle
adc
movsl
sahf
mov
hlt
jno
je
int3
jcxz
dec
lock
xor
fs
and
cld
cmp
aaa
sub
andl
jecxz
jno
fmull
adc
push
push
in
xlat
pop
cmp
jle
cmpsl
xor
xor
out
dec
int3
outsb
dec
scas
leave
sbb
jno
sahf
xor
scas
mov
fwait
sahf
dec
add
sub
dec
sbbl
repz
insb
es
sbb
pusha
imul
gs
sti
ficoms
and
push
inc
bnd
push
hlt
jae
rcll
adc
add
dec
pop
jmp
pop
or
dec
pop
lea
cld
cmpsl
pop
jge
add
mov
xlat
push
inc
add
stc
inc
pop
pop
cli
mov
stos
in
outsb
movsb
jo
scas
lahf
inc
and
stos
out
shlb
pusha
iret
aam
xchg
cmp
insl
or
add
or
orb
sahf
in
les
aaa
mov
nop
popf
jge
inc
sub
xchg
test
pop
fiadds
rorb
jp
in
jmp
inc
ljmp
adc
mov
cld
xor
sub
daa
add
or
in
pushf
fxrstor
sub
push
icebp
pop
xor
or
leave
push
lods
push
jp
sub
inc
addl
popa
pop
insb
int
shrl
leave
sbb
dec
not
mov
aaa
adc
jg
fiaddl
test
fwait
test
jb
test
mov
test
sbb
adc
jl
js
add
out
loop
in
gs
and
sahf
sub
mov
pushf
dec
adc
int3
jo
xchg
push
mov
pop
andb
mov
mov
and
jle
dec
push
cmp
lea
add
lret
shr
and
loope
mov
or
mov
inc
in
mov
nop
xor
sub
leave
adcb
jb
cmp
arpl
std
cmp
cld
icebp
lods
inc
loop
sbb
repnz
pusha
push
ret
xchg
std
inc
pop
mov
cli
dec
int
sub
push
mov
fdivrl
xor
push
pop
jb
add
adc
push
not
cwtl
cld
pop
insl
jl
test
cld
cltd
xchg
ret
andl
cmpsb
les
jae
cmp
frstor
repnz
aad
push
mov
rorb
cmpsb
loope
movsb
or
xor
loopne
movsl
and
jmp
out
push
insl
insb
imul
aas
shr
mov
fisubrs
jg
xchg
enter
push
sbb
pop
hlt
sbbl
pop
push
popl
nop
push
cli
cwtl
add
pop
push
dec
xchg
inc
push
sub
pushf
pop
jmp
xchg
push
sub
jg
pop
mov
pop
cmp
pop
push
shr
bound
arpl
push
fdivrl
xchg
push
push
sub
in
repnz
mov
mov
mov
daa
inc
adc
push
cld
adc
and
pushf
sbbl
test
aas
xor
arpl
push
xchg
in
cwtl
sub
out
sbb
cmp
push
adc
das
divl
adc
or
pop
mov
lea
cs
inc
and
nop
frstor
adc
aaa
cmp
mov
jg
cmpsl
je
jnp
adcl
cmp
jmp
xchg
in
and
xor
inc
mov
mov
jp
pop
iret
int3
jmp
popf
roll
jnp
xchg
into
mov
adc
dec
repnz
sub
lahf
enter
test
or
push
testb
dec
test
fs
jmp
sarl
inc
jne
jae
fwait
cli
jo
fwait
jne
andl
les
sahf
int3
mov
enter
aam
jp
xchg
pop
out
mov
aam
and
push
shr
cmp
cmpsb
push
stos
push
mov
hlt
arpl
push
lcall
cmpsl
sti
jl
imul
mov
or
pop
or
mov
or
pop
orb
test
mov
movsl
inc
out
mov
lahf
nop
adc
cmp
mov
jnp
xchg
cmpsb
clc
rcl
jno
imul
imul
xchg
sub
cmp
aad
ret
cli
sub
data16
fidivrs
jg
sub
test
sbb
inc
mov
pop
icebp
addr16
jle
lahf
stc
fwait
mov
loope
cs
clc
mov
cmp
imul
xchg
fdivrs
scas
sete
inc
jmp
xor
das
mov
mov
pop
loop
js
jl
cmpsl
push
xor
push
mov
out
dec
pop
cli
sub
inc
outsl
clc
adc
and
je
popf
inc
leave
movsb
mov
hlt
mov
or
leave
shlb
jl
aaa
mov
mov
dec
push
mov
pop
mov
cmp
mov
pop
gs
pop
das
cs
jae
mov
mov
mov
add
mov
mov
push
push
ds
out
or
jg
movsb
das
adc
sbb
pushf
popa
cmp
pop
xor
stc
sub
nop
push
shll
pop
mov
int3
pop
and
adc
sub
inc
aad
sahf
and
push
nop
cmpsl
pushw
cwtl
mov
sub
pop
pop
fdivr
ficompl
sti
pop
adc
lods
jp
cltd
mov
pushfw
test
mov
or
je
inc
jge
sub
hlt
inc
dec
hlt
dec
dec
jbe
jp
jbe
dec
dec
jbe
in
xchg
ficompl
adc
fsubrl
inc
sub
mov
jecxz
and
push
or
jmp
sbb
xor
insl
addr16
mov
jnp
jl
outsb
cli
or
sub
in
xor
mov
je
or
xchg
je
adc
sbb
movsl
jg
cmpsb
or
loopne
je
jmp
push
decl
mov
pop
add
mov
mov
movsl
add
je
push
push
sbb
sub
movl
and
insb
int
repnz
push
mov
mov
sbb
pop
mov
in
orl
xor
in
cmpsl
pop
jae
sub
xor
in
hlt
fidivrl
adc
scas
in
push
cwtl
icebp
in
fmuls
mov
inc
jno
push
xor
outsb
call
xor
push
hlt
sbbl
cmpsl
sbb
push
mov
les
jle
mov
jbe
rcrb
and
lods
cmp
adc
ss
mov
aam
dec
push
je
xchg
lret
arpl
int
int3
xor
push
fxtract
sub
jno
push
les
dec
adc
mov
and
jge
gs
enter
pop
aas
lret
and
ss
cmpsb
int3
sbb
mov
jb
bnd
outsb
jo
sbb
inc
xlat
test
pop
adcb
mov
fdivr
repz
data16
mov
testl
add
jp
adcl
jge
mov
call
test
mov
shrb
adc
jle
add
daa
pop
xchg
and
cmp
rol
pop
mov
ljmp
mov
push
cld
push
es
pop
mov
sbb
mov
sarb
pushf
pop
add
jb
repnz
mov
cs
pop
dec
add
dec
xor
sbb
inc
jae
movsb
mov
sub
sub
sub
pminsw
nop
adc
sub
std
xchg
jb
stos
and
adc
pop
in
sub
test
in
mov
pop
aam
dec
jbe
in
xchg
fcmovu
and
rclb
aam
scas
in
push
mov
cmpsl
out
cmp
cmpsl
mov
inc
rcll
xor
test
mov
cmp
jg
jo
adc
sbb
je
cmp
mov
call
dec
mov
ds
hlt
dec
push
hlt
mov
jbe
push
inc
jno
push
adc
outsb
shr
data16
shrb
add
sub
in
pminsw
pop
sub
sub
std
xchg
and
stos
pushf
pushf
jo
out
js
pop
push
jo
mov
lock
adc
clc
cmp
pop
pop
sar
pop
push
vprotb
push
cltd
adc
lock
popa
fdivl
cmp
mov
dec
cwtl
rorb
movsb
mov
jle
jo
int3
repz
pop
lcall
rorl
sarb
lcall
sbb
add
pop
and
pop
mov
mov
push
mov
popf
adcl
mov
jle
and
jl
rorb
jl
fidivrs
out
rorb
mov
in
pop
imul
fists
out
dec
roll
sub
sub
jge
pop
cld
mov
in
and
add
sbb
repnz
sub
jp
enter
mov
xchg
mov
inc
sub
testl
add
jp
adcl
jge
mov
call
fdivs
pop
hlt
fcoml
mov
ja
jp
cmpb
jmp
loopne
les
sbb
ljmp
adc
js
adc
call
aam
fistpll
mov
icebp
jo,pt
movsb
xchg
hlt
mov
mov
mov
dec
adc
mov
push
cld
sbb
test
push
lcall
and
mov
clc
mov
pop
push
sar
pop
push
pop
jno
addr16
popa
ret
sbb
and
cmp
test
in
mov
cmpsb
shrl
lretw
clc
lock
scas
sub
lock
sub
clc
mov
adc
fsubs
push
mov
insb
cld
pop
dec
sar
pop
inc
mov
shlb
pop
cltd
adc
loopne
fdivrl
mov
fildl
push
insb
test
ret
movsb
lds
mov
sti
into
sbbb
pop
mov
pop
aam
sub
int3
pushf
adc
cmpl
sub
inc
int3
mov
int3
push
sbb
push
xchg
mov
push
or
cltd
in
roll
pop
outsl
out
mov
mov
jp
out
in
mov
cmp
mov
rcrl
cmp
cmpsl
inc
adc
pushf
mov
and
repz
data16
or
push
cwtl
jae
sub
mov
stc
pop
add
jmp
loope
jne
bound
fadds
iret
jo
repnz
xor
xor
xor
mov
aaa
cltd
xchg
cmp
pop
inc
add
pushf
and
je
sub
movsl
add
pop
int
cmp
pusha
std
xchg
scas
xor
sbb
push
jae
adc
push
and
bound
cltd
adc
mov
movsb
out
or
pusha
gs
fcmovb
lcall
pop
pop
fiadds
mov
mov
xchg
pop
cmp
fs
mov
aam
ss
int3
cmp
sub
lea
stc
ja
insb
push
int3
cmp
add
pop
into
fisubs
in
je
and
mov
pop
jmp
movb
jl
aaa
aaa
cmp
cltd
mov
add
in
mov
mov
mov
aaa
lret
sub
repnz
mov
add
aas
add
push
mov
ja
xchg
aam
adc
pusha
aas
out
ds
shll
scas
sub
mov
adc
push
popa
int
add
lods
ljmp
mov
arpl
push
pop
int
clc
fmuls
mov
sarb
mov
inc
int3
pop
or
adc
sub
lret
sub
repnz
adc
pop
test
cmpsl
enter
push
mov
ljmp
jno
ret
sarl
sbb
jl
dec
movsl
lods
ret
inc
pop
mov
in
pop
or
push
xchg
mov
fwait
sub
push
daa
lcall
mov
shrb
inc
mov
mov
mov
fwait
loopne
scas
mov
test
sbb
jns
data16
push
andl
pop
clc
jg
test
push
in
stos
jg
and
int
jecxz
insb
lcall
xchg
mov
jb
in
pop
movsl
mov
push
or
loop
pop
aas
fmuls
push
or
mov
fwait
ret
outsb
in
das
cs
xor
jno
or
out
inc
jb
xor
xchg
push
jmp
subl
int
fistpl
push
in
xorb
adc
mov
aad
in
loope
mov
and
fistps
fwait
push
nop
inc
into
stos
inc
push
lds
cltd
in
imul
pop
fcompl
mov
notl
jle
les
adc
dec
or
ret
pusha
stos
int
or
mov
adc
int3
pop
mov
fiadds
dec
sbb
xchg
cmp
aaa
mov
or
fs
rolb
stos
out
cmpsb
cmp
aad
int
and
xor
dec
inc
mov
in
push
mov
inc
aam
lret
fucomip
push
push
sub
ljmp
cwtl
xor
test
push
mov
lock
aam
lret
fucomip
push
push
sub
imul
aas
xchg
scas
push
xchg
adc
inc
cli
inc
jno
xor
push
lahf
nop
lods
jle
hlt
mov
push
ror
mov
iret
out
out
cmp
sqrtps
test
call
iret
or
sbb
mov
mov
iret
out
xchg
ljmp
push
movsb
sub
call
iret
or
sbb
mov
int3
shrb
add
and
jno
lret
into
mov
xchg
adc
push
adc
stos
inc
push
lds
cltd
in
aad
pop
outsl
pop
pop
aad
add
mov
sbb
xor
jns
ss
lods
or
fldt
fldcw
out
mov
sbb
and
jno
push
int
stos
nop
ds
adc
dec
and
inc
xor
or
pop
out
imul
sbb
push
outsl
push
mov
xchg
mov
sbb
shrl
aam
dec
adc
stos
push
clc
sub
sbb
inc
ljmp
xorl
out
mov
xchg
mov
add
icebp
push
push
ficompl
cmp
cmc
fbstp
aas
add
push
lods
or
cvtps2pd
inc
clc
in
mov
hlt
mov
push
rorb
add
cmp
sqrtps
test
arpl
xor
rolb
inc
aad
add
push
bndldx
sub
pop
inc
push
test
daa
in
hlt
pop
aas
mov
cwtl
arpl
push
aaa
mov
jne
mov
sbbl
cmp
pop
movsb
push
test
daa
jle
pop
jnp
outsb
bound
inc
jno
scas
jle
imul
imul
or
pop
movsb
push
test
daa
jl
pushl
pop
push
in
pop
cmp
jp
mov
mov
into
stos
pusha
sbb
pop
aad
test
adc
mov
mov
xor
outsl
dec
loope
push
sub
ljmp
int
jmp
xchg
adc
push
js
inc
jno
jle
add
jne
mov
and
jmp
and
xor
test
xchg
sub
fwait
and
into
ljmp
add
in
ljmp
aad
test
enter
sbb
jo
mulb
js
add
jle
leave
shll
in
clc
movhps
test
out
aas
mov
stos
leave
cmp
pop
sarb
mov
xchg
into
jns
sub
into
cmp
push
in
pop
scas
fs
lcall
push
mov
pushf
lcall
jae
andb
xor
test
sbb
cs
lret
xor
sbb
mov
icebp
sbb
bound
xor
inc
or
pop
dec
aam
out
out
pushf
lods
pop
jmp
xor
test
vmovss
inc
arpl
sbb
rclb
popf
fsubp
es
nop
loopne
xchg
dec
dec
sar
adc
out
pop
and
pop
aad
inc
loope
movsl
clc
in
sbb
scas
jmp
sbb
loope
push
sub
ljmp
out
push
jmp
xchg
adc
movsb
xchg
mov
push
popa
mov
push
inc
loopne
xchg
dec
pop
sar
adc
dec
pop
sub
lods
pop
aad
inc
loope
movsl
clc
add
sbb
dec
jmp
sbb
loope
push
sub
ljmp
jmp
xchg
adc
movsb
xchg
xchg
pop
push
popa
pushf
xor
je
inc
loopne
xchg
dec
pop
sar
adc
das
pop
cs
mov
and
jnp
clc
movsb
std
sbb
outsb
jmp
sbb
loope
push
sub
ljmp
out
push
jmp
xchg
adc
movsb
xchg
hlt
pop
push
popa
cld
xor
push
push
inc
loopne
xchg
dec
pop
sar
adc
pop
sub
pop
aad
inc
loope
movsl
clc
lcall
dec
and
jmp
sbb
loope
push
sub
ljmp
ret
jmp
xchg
adc
movsb
xchg
aam
push
popa
faddl
inc
loopne
xchg
dec
pop
sar
adc
outsl
pop
sub
pop
aad
inc
loope
movsl
clc
fs
sbb
cs
sbb
loope
push
sub
ljmp
shr
and
sub
xor
loopne
cmc
fwait
aad
enter
into
fs
rol
aas
in
and
cmp
call
lret
lea
test
mov
mov
rol
aas
in
and
and
xchg
and
imul
fucom
insl
iret
or
call
lret
or
lds
lret
ds
push
loope
in
dec
inc
je
and
push
leave
push
push
jle
mov
jne
xor
sub
into
loop
test
pop
aaa
push
xchg
movsb
addps
sub
idivl
adcb
inc
lods
dec
dec
lock
bound
fstpt
sbb
xchg
aas
int
push
lret
lea
test
mov
mov
rol
aas
in
and
xor
cmp
jmp
loope
iret
or
push
sbb
ror
cmpsb
fsubp
and
mov
sbb
rcrl
xchg
cmpsb
call
sbb
fnstcw
pop
nop
cmp
leave
cwtl
mov
push
test
movsb
sbb
mov
daa
sar
mov
into
out
push
call
fwait
push
jle
test
icebp
leave
mov
mov
jno
das
out
sbb
sub
mov
aas
push
outsl
push
mov
xchg
sahf
jo
scas
and
inc
int3
std
add
inc
add
ljmp
cmpsb
jns
and
imul
jmp
loope
iret
or
sbb
jle
sbb
pusha
lret
or
lds
lret
aaa
stos
push
loope
in
dec
cmp
and
push
leave
call
mov
mov
jne
xor
daa
nop
push
xor
into
loop
sub
aaa
push
xchg
or
sub
pop
enter
cmp
push
xor
lods
dec
dec
lock
bound
fstpt
fcompl
add
push
call
lret
lea
test
mov
mov
rol
aas
in
and
sub
push
and
jle
jmp
loope
mulb
push
ror
mov
in
or
addr16
rorl
push
push
fsubrl
xchg
dec
scas
lods
jl
ret
jne
shlb
test
mov
aas
hlt
cvtdq2ps
cmpsl
int3
jae
jp
inc
repz
and
in
pop
or
jo
cld
dec
sub
dec
mov
inc
xor
int3
pop
ss
mov
and
enter
and
xor
lret
clc
int3
stos
bound
or
data16
inc
in
mov
loope
xchg
scas
pop
int3
lods
xor
scas
insl
pop
clc
fyl2xp1
mov
cwtl
mov
xchg
loopne
adc
add
push
pop
mov
mov
hlt
and
test
rclb
nop
xor
jno
lock
dec
xlat
test
gs
lcall
dec
addb
mov
sub
out
ds
outsb
shr
lretw
clc
call
daa
inc
sub
push
jo
mov
jno
insb
sub
fdivs
nop
jno
mov
jae
pmaxsw
aam
shr
push
lret
clc
incl
daa
inc
sub
jo
xchg
arpl
xor
mov
pop
adc
iret
sbb
cwtl
pop
lds
mov
jg
nop
jmp
adc
addb
mov
aaa
add
lcall
es
fisubl
enter
dec
adc
mov
jmp
add
out
or
pop
into
fdivr
push
push
pop
int3
sub
add
xor
cmpsb
arpl
hlt
mov
sub
sarl
or
aam
jle
into
dec
mov
les
pop
lret
cli
mov
ss
inc
aad
add
jle
xchg
stos
in
movsb
mov
add
daa
dec
mov
and
rcrl
add
mov
xor
fistpll
mov
add
jl
inc
or
add
lods
inc
into
jle
xchg
adc
in
and
shl
jp
inc
lcall
aas
xchg
and
mov
sub
add
mov
sub
in
mov
stos
jmp
sarl
or
fldt
mov
sbb
mov
js
orb
lock
sub
in
mov
sar
mov
jge
mov
or
pushf
stos
push
add
mov
hlt
xchg
dec
jbe
shrb
stos
xor
mov
sub
push
cmpsl
pop
clc
cmc
mov
sub
stos
lret
ret
xorl
inc
nop
fisttpll
imul
fistpll
push
mov
sbb
out
stc
aas
sbb
adc
das
daa
lock
sahf
mov
mov
jae
cwtl
lods
sbb
mov
insl
mov
shl
lahf
xorl
jg
nop
fcoml
aas
or
scas
ja
push
xchg
icebp
into
adc
mov
dec
mov
dec
aad
rcrb
test
test
jae
add
stc
push
repz
add
rcll
xchg
scas
das
outsl
jae
cmp
dec
dec
dec
mov
clc
xchg
xchg
mov
ljmp
ret
xor
je
cmp
or
jmp
sahf
cmp
and
inc
cmp
shrb
mov
loopne
jle
add
push
xor
jmp
inc
fmull
out
xor
orl
cltd
shll
jb
push
pushf
pusha
adc
jae
pop
mov
pop
in
subb
fs
adc
adc
mov
andl
push
cltd
shll
push
test
out
push
clc
mov
and
jnp
xor
cmpsl
jge
jns
add
addr16
dec
icebp
testb
int
gs
mov
or
imul
or
pushf
in
bound
cmp
lock
add
bound
mov
and
lock
pusha
js
xor
or
xor
inc
push
mov
xor
mov
jl
ds
enter
loopne
xchg
inc
fidivl
add
add
popf
rcrb
add
lahf
xchg
inc
sbb
enter
jae
mov
mov
bound
sub
fists
es
cmp
je
dec
pop
es
mov
test
cmpsb
mov
rclb
mov
mov
push
inc
out
and
cmpsl
push
into
rcl
jno
xor
jl
ljmp
mov
shrb
dec
hlt
xor
or
push
push
daa
xor
into
shll
imul
in
inc
xlat
lcall
sar
push
add
xor
push
cs
xor
mov
mov
sub
mov
out
ds
mov
jp
adc
or
mov
popa
and
incb
fucomp
icebp
stc
dec
push
and
sub
scas
into
xchg
sbb
sub
fisttps
inc
gs
cwtl
cmp
loopne
mov
ficoml
sbb
test
inc
fisttps
mov
and
shl
pop
fmul
and
inc
or
or
sub
in
xor
push
jns
addr16
enterw
nop
jmp
and
shl
adc
inc
subb
fcoms
test
adc
fistpll
test
inc
sub
pushf
popa
push
addr16
mov
adcl
insl
jge
out
cmp
into
addr16
das
xor
dec
inc
aaa
imul
push
out
sub
lret
shr
stc
into
and
mov
mov
pop
pushf
and
adc
inc
and
pop
shlb
repnz
insl
or
out
lock
lret
jb
mov
mov
ror
jno
and
aad
mov
daa
mov
fs
push
push
inc
xor
les
lods
inc
and
mov
inc
jl
mov
cltd
sbb
push
lcall
sti
xchg
pop
adc
push
jmp
ljmp
xchg
jb
cmp
in
cmp
repz
call
mov
scas
stc
stos
movsl
mov
jb
loopne
pop
jbe
mov
into
out
or
add
or
cwtl
ret
cmp
je
mov
xchg
jae
adc
xorb
stos
test
fsubl
xchg
and
subb
cmp
lcall
mov
int
jle
ljmp
inc
call
mov
push
aas
xchg
xor
imul
inc
lahf
xor
lret
inc
cwtl
inc
cmp
pop
and
outsl
cld
pop
icebp
cmpsb
lea
dec
jle
fs
xlat
adc
pop
cmc
test
jl
fmull
pop
fdiv
fnstsw
es
pop
hlt
add
inc
adc
outsl
test
or
mov
xor
sbb
jl
cmc
mov
dec
shll
insb
cmp
mov
inc
fwait
jns
push
push
mov
fwait
aam
aas
ror
inc
pop
bound
dec
jl
into
push
xchg
push
pop
mov
stos
lcall
dec
add
loopne
mov
hlt
add
adc
sbb
outsl
pop
pushf
bound
push
jge
xchg
jmp
adc
cs
out
cmp
adc
push
adc
pop
jno
js
loopne
xor
mov
rolb
add
mov
test
inc
mov
mov
in
dec
xchg
repnz
mov
jg
mov
add
push
je
jle
dec
fstpt
push
jne
xchg
ss
xor
insb
mov
sub
xorl
mov
mulb
add
jge
subl
xor
jp
mov
and
aam
inc
or
std
call
push
into
psrld
loope
aas
popa
ja
dec
into
push
rorb
es
dec
sahf
pop
filds
sbb
rol
pop
in
inc
xchg
sub
cmpsb
or
lahf
xchg
rorb
pop
ds
xor
mov
mov
dec
xchg
mov
push
mov
add
enter
push
out
outsb
mov
adc
push
pop
cmp
test
jns
lret
or
add
jbe
fnsave
cmpsl
or
insb
into
or
dec
dec
mov
sub
push
mov
out
mov
dec
or
fisubs
lret
and
movsb
iret
test
mov
int
push
test
js
int3
cltd
mov
int3
sub
ljmp
adcl
and
dec
mov
cmp
xor
int3
fs
fs
rol
ljmp
pop
ja
shll
repnz
outsl
sbb
rorl
sbb
ret
test
mov
cmpsl
mov
xor
fdivr
mov
lcall
jo
mov
mov
test
mov
pop
cld
popf
ret
dec
pop
mov
jg
and
mov
je
push
cmpsb
pop
xchg
jae
popl
movsl
rorl
cmpb
adc
push
hlt
cwtl
rcrl
roll
mov
hlt
cmp
into
in
lods
fidivrl
in
cwtl
bound
in
mov
dec
lret
clc
repnz
push
and
inc
and
icebp
aas
mov
sub
inc
xor
mov
or
mov
arpl
pusha
dec
sub
shll
addr16
cld
scas
jns
mov
les
aas
ds
push
std
les
xlat
imul
dec
xchg
js
enter
lret
jp
or
sub
fbstp
aas
xor
std
mov
push
sbb
or
les
xlat
adc
mov
nop
cmp
sbb
jbe
inc
adc
lret
lret
shlb
xor
cmp
dec
push
mov
mov
aas
add
inc
dec
fsubl
jl
movsb
inc
sub
fsubrs
xchg
out
cld
fstpt
into
aam
data16
data16
notl
cmpsl
mov
movsl
out
inc
ret
sub
loope
mov
or
jl
pushf
cmp
ja
adc
fcomip
or
adc
xor
fcoml
sbbl
adc
mov
pop
mov
ljmp
mov
arpl
popf
pop
arpl
pushf
test
mov
xchg
jae
data16
cli
std
push
lods
test
cli
mov
aam
pop
stos
insb
movsl
rcrb
repnz
in
fmuls
mov
mov
mov
xchg
xor
pop
aaa
test
pusha
sti
sbb
lods
subps
pop
sub
out
add
pop
push
lcall
repz
jo
cld
jbe
dec
pop
mov
jo
cmpsb
sbb
jp
pushf
dec
jmp
in
jl
rol
adc
push
in
js
push
in
add
stos
shrl
ljmp
or
rorb
mov
data16
inc
pushf
adc
pop
mov
mov
add
movsl
aas
add
mov
lret
jp
inc
mov
les
dec
ds
mov
xor
jbe
scas
sub
mov
adc
push
sub
test
sar
aas
sub
push
daa
push
adc
sub
lock
push
push
pcmpeqd
pop
lods
xlat
nop
cmp
cmp
pop
loopne
mov
add
jb
push
sub
sub
xlat
xor
or
sbb
mov
push
add
and
mov
loope
ret
xor
in
test
add
cwtl
dec
out
cmp
mov
ljmp
inc
mov
fmuls
dec
imul
jbe
push
in
aam
xor
nop
cmp
stos
cmpsb
ss
mov
jg
adc
adcl
sub
lods
dec
pminsw
pop
adc
dec
mov
fwait
mov
pop
mov
cmp
mov
mov
jnp
or
mov
sub
push
cmp
in
pop
ss
int3
xor
ljmp
and
mov
movsl
fisubl
lret
lds
pop
inc
cmp
outsl
popl
mov
movsb
sarl
or
sbb
mov
aaa
push
mov
push
push
les
mov
cmpsl
sarb
push
push
outsl
clc
cld
pop
adc
pop
lcall
jp
cltd
adc
test
inc
loopne
add
shrl
fwait
sub
test
fwait
je
inc
fcmovbe
fdivp
sbb
fmull
hlt
les
xchg
je
in
jo
adc
call
sbb
pop
lret
cmpb
add
sub
insl
sbb
push
mov
in
pop
mov
cli
push
xchg
cltd
pop
jecxz
push
jp
cltd
mov
sub
imul
cld
in
aam
cmp
out
sahf
enter
insb
sbb
sub
or
and
add
and
xchg
inc
xor
mov
clc
pop
es
insb
inc
push
push
cwtl
les
fcoml
mov
pop
jo
adc
pop
mov
cld
pop
sbb
lock
cltd
adc
sub
cwtl
shrl
cwtl
rcll
mov
hlt
dec
dec
jbe
in
in
ret
fdivr
mov
mov
adc
adc
fsubl
and
lret
pop
lret
bound
and
sub
ficoms
shl
push
push
test
add
jp
adcl
jge
pop
xchg
mov
es
jp
cltd
mov
stos
pushf
lock
inc
cwtl
sarl
or
jne
push
jl
out
cmp
cmp
sub
pop
arpl
xor
mov
or
addr16
sbb
mov
pushf
pop
add
xor
pop
mov
in
popf
xchg
xor
or
ds
hlt
sbb
mov
xchg
add
xchg
shr
ljmp
adc
in
ss
call
in
ss
loop
mov
sbb
sbb
mov
les
je
adc
cmp
std
xchg
sub
stos
dec
fsubrl
cmp
xor
xchg
rcrl
cld
repnz
or
push
and
loop
dec
mov
push
fidivl
adc
adc
sbb
cmp
sub
lcall
adc
cmc
pop
push
insb
mov
fmuls
clc
repnz
push
leave
add
sub
lods
adc
jbe
jns
add
sub
popl
movsl
rcrb
mov
add
popf
fdivrs
fsubr
js
jp
loopne
andl
pusha
aas
lcall
xchg
add
dec
or
sbb
dec
js
movsb
in
fs
adc
cmp
push
pusha
test
mov
into
xor
lcall
mov
ljmp
test
mov
aam
pop
cmpsb
cwtl
mov
mov
pushf
inc
add
jb
add
rcll
aam
push
dec
fmull
lcall
rolb
insb
movsl
aas
fwait
push
inc
leave
or
cmp
addl
jle
gs
cld
sub
push
sarl
ret
cmp
ljmp
sub
jb
ljmp
jno
and
jne
jae
cmp
jg
aam
outsb
test
js
arpl
popf
push
sbb
mov
test
decb
cwtl
mov
push
test
pop
dec
movsb
push
cmp
div
xchg
sbb
sub
adc
cmp
cmp
add
mov
pop
out
push
and
mov
jmp
pop
int3
fadd
add
call
push
into
sbb
js
mov
lcall
shlb
mov
push
in
jge
mov
loop
or
outsl
xor
adc
mov
in
push
xchg
scas
shl
out
sub
in
adc
aas
fildll
cs
jp
cli
dec
lahf
aad
ss
pop
lret
bound
cmp
in
aaa
test
call
or
sub
add
adcb
push
push
hlt
mov
ja
cmpsl
test
mov
jle
call
sub
jbe
and
push
fnstsw
outsb
notb
ss
test
jp
xchg
lds
cltd
lods
imul
icebp
xchg
mov
mov
decl
push
jae
xchg
dec
lcall
mov
je
pop
xchg
lds
or
or
std
pop
pop
int
repnz
jnp
je
sub
mov
jmp
stos
xor
int3
cwtl
shrl
mov
cld
lea
adc
cmp
dec
jecxz
sar
push
cs
ret
adcl
stc
cs
sub
fcoml
xor
bound
ss
in
xor
inc
ficomps
pushf
jle
sub
in
push
jo
int
loope
test
aaa
add
lcall
es
and
stos
and
into
lods
loop
aas
into
ds
mov
loopne
imul
pop
stos
xor
iret
daa
inc
sub
aad
and
fisttpl
sub
sbb
push
outsb
pop
fdivr
pop
or
adc
cltd
mov
cmp
cltd
add
insb
pop
xchg
mov
fisubrl
pop
dec
add
dec
out
jle
fwait
adc
mov
xchg
lahf
cmp
pop
arpl
pop
mov
pop
stc
push
mov
pop
or
mov
popa
adc
mov
cs
jle
loop
mov
xchg
sub
bound
ja
test
mov
lret
jae
mov
mov
daa
push
sbb
pushf
mov
push
cmp
mov
ficompl
ja
mov
jbe
push
inc
jo
push
dec
adc
cwtl
xchg
cwtl
mov
ja
and
mov
cltd
push
dec
add
stos
shll
sub
int3
and
push
jbe
push
in
mov
in
ljmp
fdivl
mov
mov
pop
dec
xor
dec
aam
push
mov
js
inc
xchg
push
mov
int3
popf
je
pop
ss
fs
orb
jo
std
pop
pop
int
repnz
shrb
push
cmp
xlat
xchg
pop
cld
add
lock
jle
test
call
stos
mov
out
sub
pop
xorb
mov
ret
dec
data16
loopne
in
mov
mov
rcll
cmp
in
pop
add
push
cmpsl
mov
test
cwtl
mov
popa
adc
cmpsb
in
loop
cs
fnstsw
or
cmpsb
data16
sub
dec
dec
xor
push
stos
push
fstpt
mov
dec
inc
jae
cwtl
xchg
cmp
outsl
ja
and
mov
cltd
push
dec
add
stos
shll
sub
int3
push
daa
test
push
jbe
push
in
fsubrs
mov
xchg
ja
mov
mov
mov
push
mov
adc
dec
add
sbb
mov
or
mov
add
dec
nop
lret
aam
lds
shl
movsb
inc
fucom
addr16
mov
popf
add
add
popa
push
fidivrl
lcall
imulb
cmpsl
jle
sbb
outsl
or
scas
sub
dec
pop
push
dec
inc
cmp
loopne
pop
nop
push
jg
out
fwait
rorl
cld
stos
shll
sub
int3
cmpsb
and
push
push
jbe
push
in
sbb
adc
cwtl
xchg
ja
mov
mov
sub
jo
rorl
xor
or
inc
mov
js
enter
into
ss
jmp
daa
inc
mov
and
fwait
jno
push
or
inc
aaa
into
outsb
mov
cs
subl
push
jg
cmpsl
mov
sbb
ljmp
ljmp
sti
loop
insb
test
push
or
inc
jbe
xlat
push
add
or
aas
add
xchg
nop
std
aam
xchg
lds
addb
popa
adc
adc
loop
pop
test
push
xor
inc
jbe
adc
shr
cmp
test
mov
sar
mov
dec
pop
pop
in
pushf
xor
jmp
inc
fmull
repnz
loope
cmpsl
int3
cli
inc
mov
stos
push
out
dec
test
xchg
flds
mov
cli
mov
je
pop
jbe
xor
push
mov
pop
or
clc
xchg
rcl
mov
lahf
aam
jle
out
pop
js
into
push
xchg
mov
adc
xor
xorl
lret
jae
mov
mov
daa
push
sbb
cmpl
clc
inc
adc
ficompl
ja
mov
jbe
das
pop
stos
test
jmp
push
aaa
data16
outsl
ja
and
mov
cltd
push
dec
add
stos
shll
sub
int3
fisubrs
push
jbe
push
in
cld
push
ljmp
pushf
ja
mov
mov
pop
dec
xor
dec
xchg
cmpsl
push
mov
cmp
pop
xchg
sar
pop
ljmp
addr16
and
add
xchg
xchg
shlb
lahf
test
mov
hlt
pop
xor
jo
jae,pt
pop
es
pusha
xchg
das
call
inc
lock
push
jno
push
movsl
add
sbb
into
insb
xchg
push
mov
in
jno
stos
mov
sub
pop
std
pop
mov
push
fwait
aad
add
cmpsb
push
pop
rolb
pop
das
adc
inc
cmp
push
pop
xchg
xor
mov
fiadds
movsb
lods
mov
mov
sahf
pop
std
push
dec
mov
std
sub
push
dec
mov
daa
push
sbb
mov
push
inc
inc
adc
bound
js
insb
ja
mov
aas
testb
push
xchg
push
inc
push
adc
arpl
aad
test
enter
pop
sbb
int3
xlat
jns
ss
push
lods
or
xchg
push
dec
mov
daa
push
push
andl
sub
dec
pslld
jb
sahf
sub
mov
adc
cmp
pop
inc
mov
pop
xchg
cltd
shll
sarb
imul
cmpb
sbb
mov
mov
nop
adc
mov
dec
jecxz
pop
shl
dec
addb
inc
add
les
push
into
dec
dec
ds
sbb
pop
xchg
dec
adc
sub
sub
sub
bound
jecxz
sar
push
scas
dec
ret
adcl
mov
cs
jle
out
xor
stos
mov
sub
mov
sub
xchg
mov
rcrl
test
es
dec
xlat
test
mov
not
les
sub
sub
popf
je
push
pop
and
shlb
ljmp
add
mov
jbe
xchg
and
add
pop
cli
lahf
cld
cmpsl
jle
dec
jle
mov
cwtl
rcrl
cwtl
roll
call
jmp
adc
xchg
frstor
adc
pop
bound
cltd
stos
out
push
ja
mov
nop
shrl
and
iret
push
jo
das
mov
fs
xor
movsl
mov
arpl
hlt
mov
lcall
stos
jno
dec
ljmp
dec
call
sub
pushf
add
or
ss
inc
daa
inc
mov
and
fwait
jno
push
cmp
std
fmul
out
sub
dec
pslld
inc
dec
aam
repnz
sub
mov
adc
cmp
std
push
outsb
pop
xor
jl
stc
cs
and
fcompl
adc
push
repnz
imul
lret
out
jo
data16
addr16
in
push
cmc
fucomip
call
lods
or
addps
inc
fs
mov
xchg
das
call
inc
lock
push
jno
push
cmc
ds
call
loope
insb
xchg
jge
xchg
sbb
lcall
add
mov
mov
mov
popa
adc
in
loop
cs
rcr
or
mov
stos
mov
pop
jno
pushaw
jp
cltd
adc
cld
out
mov
inc
xor
jne
jae
mov
mov
daa
push
sbb
mov
sahf
jo
cli
push
sbb
adc
fimull
pushf
ja
mov
aas
mov
and
jle
pop
dec
or
inc
inc
loope
aam
aas
xchg
addl
add
jle
mov
xchg
adc
jmp
mov
mov
stos
mov
dec
or
jmpw
jmp
jge
aaa
into
outsb
mov
cmp
pushw
aam
nop
popa
stos
mov
sbb
cltd
lods
imul
mov
les
into
outsl
movsb
pop
fsubrl
in
imul
mov
dec
pushf
mov
and
jl
add
dec
pop
push
enter
xorl
pop
dec
add
dec
inc
jle
fwait
xorb
sbb
mov
xchg
jp
cltd
adc
mov
int
rorl
xchg
mov
xor
aas
ret
inc
les
into
outsl
movsb
pop
hlt
sub
imul
mov
cltd
mov
push
mov
add
loopne
xchg
mov
fiaddl
add
dec
push
add
mov
adc
pop
push
mov
mov
dec
pop
pop
in
in
lock
test
orl
les
repnz
jle
push
dec
fsub
pop
xor
mov
cltd
add
sbb
xchg
mov
xchg
test
jbe
cmp
ss
rcrb
scas
inc
sub
lret
cmp
enter
in
sbb
outsb
lods
and
negb
mov
repnz
sbb
push
loopne
push
mov
jl
ds
mov
xchg
push
lods
mov
pop
xchg
rorl
jne
mov
mov
movsl
stc
xor
sub
fs
xor
loope
and
stos
das
std
out
xor
xor
pop
dec
cmp
in
fisubrs
dec
pop
cwtl
pop
inc
mov
repz
pop
daa
inc
mov
outsb
and
stos
pop
outsl
nop
pop
aad
add
les
mov
movsl
inc
hlt
in
mov
pop
dec
pop
pop
in
push
cmp
pop
and
sbbb
inc
loope
movsl
xor
ret
shrl
in
stos
insb
cwtl
call
std
push
dec
jecxz
rcr
outsb
cmp
pop
sub
lock
jmp
loope
sub
mov
insb
mov
or
scas
mov
push
popa
pusha
push
adc
outsb
inc
pop
pop
and
loopne
aad
inc
loope
movsl
push
jne
fsubrs
sub
test
jle
mov
or
hlt
outsb
and
mov
pop
aad
test
enter
jne
enter
shl
inc
mov
sub
dec
dec
adc
outsb
and
dec
stos
pop
pusha
sahf
pop
aad
test
enter
sbb
pop
rcrb
outsb
test
pop
xor
imul
push
fmulp
lret
pop
sbb
aas
ja
push
and
xchg
popf
jge
out
xor
push
lods
or
pusha
stos
test
push
or
push
hlt
cmp
roll
clc
dec
int3
cmp
fwait
nop
and
imul
mull
gs
jl
popf
inc
lcall
and
hlt
fwait
jge
out
xor
push
lods
or
addr16
int
out
mov
add
std
push
ret
or
scas
rcll
gs
or
cmpsb
fcos
inc
push
adc
push
sbb
stc
aad
enter
mov
icebp
rorb
inc
mov
pcmpeqb
loope
rcr
push
sti
cli
or
mov
test
sbbl
in
ja
popl
lods
lea
rclb
jecxz
xchg
lods
dec
jp
dec
xor
adc
lds
js
jne
jg
inc
rcl
xor
jp
push
insl
loope
inc
sbb
les
sub
mov
movsl
outsb
and
jmp
and
cmp
fs
fs
mov
xor
cmp
mov
cli
nop
xor
xchg
jg
les
xchg
jne
adc
or
push
das
mov
aas
add
push
inc
inc
subb
loope
cmp
fidivs
popa
inc
jp
ror
iret
loopne
xor
pop
push
inc
mov
outsb
sub
mov
inc
out
add
mov
repnz
jns
inc
repnz
inc
loopne
add
aam
jb
test
pop
xor
into
inc
sub
pusha
ljmp
inc
pop
push
out
aam
xor
daa
cmp
inc
push
movsb
aam
push
xor
aas
xchg
repnz
inc
sub
and
shlb
ficoms
fisttpll
inc
das
dec
pop
pop
das
jnp
dec
scas
cltd
hlt
xchg
stos
stos
push
imul
and
je
stos
adc
xor
pop
add
sbb
xor
mov
cmp
add
int3
push
loopne
pop
movsb
xlat
sbb
sub
cmp
sub
lcall
xor
xchg
aam
and
or
jecxz
lds
sbb
sub
inc
push
sbb
adc
push
hlt
ds
enter
push
sti
cmp
icebp
mov
adc
mov
scas
or
inc
dec
test
sbb
jle
pop
out
xor
lea
ror
add
mov
push
js
fwait
add
loopne
dec
mov
and
fst
bound
das
cmp
xchg
test
test
movsb
sbb
jns
hlt
imul
in
xor
hlt
pop
cld
xchg
and
jg
in
xchg
cmc
aaa
jle
pusha
pop
inc
lret
fs
push
mov
mov
push
loop
out
sub
sub
pop
cwtl
push
add
add
or
mov
andb
movsb
xchg
or
mov
mov
enter
cmp
add
adc
js
lds
outsb
cmp
scas
mov
xor
addr16
sti
je
xchg
xchg
push
sub
aas
sbb
xchg
or
and
pushf
dec
addb
cmp
fmuls
in
dec
sbb
and
push
shll
mov
nop
cli
jle
outsl
mov
add
mov
fwait
lods
jle
test
inc
or
adc
ret
mov
orb
push
adc
dec
fsincos
lahf
or
inc
add
aaa
jp
enter
call
xchg
ljmp
ret
imul
adc
jmp
adc
test
out
pop
inc
fcomi
test
cmp
cmp
daa
push
pop
xor
jge
fidivl
sub
cmc
xchg
mov
sub
or
ffree
call
shrb
push
mov
pop
rol
andb
pop
and
mov
jae
cmp
or
setg
icebp
mov
gs
mov
or
test
shlb
and
push
test
pop
cli
xchg
aaa
fisubl
xchg
or
cmp
gs
dec
inc
sub
mov
sarl
or
sbb
or
test
daa
push
mov
outsb
int
aas
push
xchg
pop
in
stos
loope
rorb
cld
les
xchg
sarl
sub
xor
xor
mov
or
xor
jae
fisubrl
pushf
aam
mov
xchg
push
add
jmp
push
xchg
jnp
or
sub
mov
dec
jb
mov
pop
stc
xchg
sbb
dec
inc
lret
movsb
xchg
aam
adcl
or
shlb
and
jmp
fsubrs
mov
loopne
loopne
fisttps
push
dec
xlat
in
jle
cmp
add
pop
xor
jmp
mov
sub
arpl
sarb
pop
adc
ficompl
adc
cmp
lret
adc
das
cmp
and
addb
adc
ljmp
push
xchg
cmpsl
imul
add
pusha
lock
shrb
shrl
fdivp
psubw
dec
ret
scas
cs
xchg
push
mov
out
dec
pop
fwait
jnp
lret
or
popf
sub
not
push
pop
adc
or
jmp
in
add
nop
pop
push
in
in
imul
xchg
mov
and
hlt
xchg
xor
insb
inc
pop
sti
testb
lea
pop
adc
lcall
and
adc
mov
imul
clc
xchg
aam
xor
xor
dec
cmp
pop
pop
aad
jnp
and
icebp
lea
cmc
cvtps2pd
add
rcr
xchg
xlat
mov
jo
enter
out
or
xor
fcmove
fucompp
out
in
jns
add
dec
fnstsw
in
inc
cs
inc
push
cmp
out
add
imul
inc
jne
push
mov
icebp
testl
stc
or
pop
outsl
dec
sbb
testb
mov
add
fnstcw
shll
push
sbb
mov
fmuls
sbb
xchg
and
stc
adc
mov
cmp
inc
aaa
pop
mov
add
mov
mov
cwtl
jmp
shl
fs
orb
sub
pop
mov
rclb
fdivrl
add
adc
lret
ljmp
loope
mov
adc
xchg
ret
mov
je
add
stc
nop
mov
push
out
lahf
inc
out
push
xchg
aam
es
push
add
mov
adc
sbb
shrb
or
test
inc
push
xor
cmp
sbb
sbb
jmp
gs
dec
loope
pop
or
lret
push
jmp
xchg
adc
dec
push
out
or
ret
pop
in
sti
push
shrb
arpl
mov
sarl
and
out
repz
adc
inc
mov
and
jp
mov
icebp
mov
movsl
xor
mov
or
nop
fs
imul
mov
out
sbb
xchg
pop
pop
ljmp
xor
push
adc
out
xlat
xchg
mov
das
mov
cmpsb
sub
pop
stc
xchg
and
das
pop
jne
loopne
xor
scas
repnz
cltd
mov
outsb
daa
xchg
scas
pop
mov
nop
add
vpmadcswd
mov
xor
add
cmp
movsb
push
lret
fsubl
mov
imul
or
scas
xor
xor
or
add
mov
add
pop
mov
pop
aas
xchg
enter
call
rcrb
enter
or
sarb
in
xchg
adc
xor
fdivrl
mov
pop
aas
lods
rcrl
dec
dec
dec
jo
add
mov
jnp
pushf
sbb
ja
pop
lret
stos
clc
mov
fmuls
arpl
mov
pop
pop
lea
inc
dec
lret
push
inc
out
adc
xchg
push
pop
lods
xor
jb
dec
sub
pushf
cmp
mov
adc
mov
scas
cmpsl
int3
subl
sub
inc
push
lcall
lret
xorl
jae
sub
mov
or
dec
das
push
movsl
xor
movsl
mov
lock
inc
mov
outsb
push
push
test
mov
sahf
add
rclb
rorl
enter
pop
lds
cmp
jno
inc
pop
fidivs
adc
push
inc
dec
roll
jnp
mov
mov
mov
cmpsl
inc
pop
jp
lea
mov
cmp
pop
mov
and
xor
mov
leave
rorl
inc
dec
push
dec
xor
lahf
dec
mov
pop
sti
mov
cld
sahf
jae
push
test
mov
inc
mov
bnd
loopne
pop
mov
jne
lahf
jle
mov
add
push
dec
xor
outsb
mov
pop
aam
movsb
into
shr
lret
clc
cld
adc
test
mov
dec
and
decl
jbe
fwait
pop
jb
adc
inc
lock
sar
pushf
enter
fdivr
push
push
pop
xchg
mov
xlat
sub
gs
loope
xchg
lods
mov
cmpsb
pop
and
push
jmp
jb
sub
inc
fdivr
imul
rol
pop
mov
ljmp
test
cmp
in
cwtl
aam
jle
ret
insb
jmp
sbb
out
and
jae
arpl
inc
mov
cmp
popa
sbb
mov
xor
adc
cmp
adc
ljmp
sbb
cld
fidivl
mov
rcrl
inc
push
out
add
mov
shrb
cmp
jmp
sbb
mov
and
lds
sub
std
mov
in
and
mov
cmp
xor
repz
and
push
add
and
push
xor
stos
ficoml
fs
ds
cmp
ds
jmp
dec
mov
cmp
ret
push
fnstsw
lds
aad
movsb
divb
pushf
adc
mov
shrb
mov
lret
aad
inc
mulb
push
insl
add
and
arpl
pop
arpl
cld
cld
repz
sub
repnz
in
or
into
rorl
add
les
fsubr
jl
push
jno
dec
dec
jns
jp
xchg
outsl
movsb
pop
je
in
imul
data16
sahf
cltd
mov
xchg
pushf
or
in
sub
mov
xor
into
cmpsl
and
aaa
shll
cmp
xor
xor
pop
mov
add
adc
pushf
fidivrl
lcall
andb
movsb
cld
cmp
fidivrs
ds
mov
scas
and
outsb
or
in
fnstsw
rcll
lret
je
dec
adc
mov
cmp
data16
vmread
fidivs
sar
sub
lahf
shr
outsb
pop
mov
lock
mov
clc
lahf
loop
bound
ds
sbbb
jo
iret
inc
mov
lahf
xchg
ja
movsl
cmp
fs
jmp
push
push
sbb
enter
mov
jae
sbb
leave
xchg
shll
xchg
or
adc
adc
rcl
aad
adc
rorl
add
jecxz
push
jbe
sti
xlat
rorb
adcl
xor
mov
cmp
sub
into
or
jmp
fs
negl
mov
xchg
rcl
shll
sbb
gs
dec
mov
mov
push
clc
mov
and
in
jne
jmp
mov
in
inc
orb
mov
test
dec
enter
sub
adc
xchg
xchg
lods
and
inc
rolb
fildl
inc
stos
mov
push
push
outsl
test
pop
psubsw
insb
adc
pop
add
jo
cltd
push
sub
add
mov
lods
pop
les
mov
or
jb
fcomp
xor
pop
mov
sub
pushf
xchg
pusha
fcmovb
xor
cli
mov
or
stos
xor
int3
test
inc
int3
pop
push
xchg
pop
xor
jge
cmp
add
mov
adc
add
int3
mov
clc
aam
sub
adc
scas
add
push
adc
pop
mov
jecxz
outsl
inc
das
lahf
pop
jno
stos
push
fsubl
or
push
xchg
add
in
aaa
pop
ljmp
dec
and
mov
xchg
push
pop
js
mov
les
cwtl
in
test
fisubrl
test
loop
lods
test
lods
lds
xchg
mov
into
push
jle
inc
das
sub
pop
xchg
shrl
mov
xchg
cmp
inc
into
inc
lods
rcll
fadds
mov
pop
cmp
fdivrl
stos
fidivs
jns
js
mov
aad
cmc
cmc
and
cld
xor
push
rorl
aad
jns
push
aad
push
es
mov
repnz
inc
enter
inc
inc
xchg
fwait
xor
fildl
dec
inc
mov
cmp
and
lds
nop
mov
pop
sbbb
scas
adc
incl
icebp
jno
ret
les
cwtl
sub
xchg
push
test
in
loopne
cmp
in
ds
sub
jbe
mov
mov
or
mov
mov
les
cmp
add
push
pusha
sar
mov
xchg
jmp
xor
and
xchg
sub
mov
js
mov
mov
lret
adc
loope
mov
icebp
repz
loope
ret
repz
lahf
cli
dec
cmc
mov
dec
lret
loop
in
sahf
xor
testw
aad
jle
imulb
sub
aaa
in
jp
jmp
lods
lods
xchg
mov
sub
je
dec
vorps
cmp
dec
sbb
repz
lcall
sbb
jne,pt
add
lock
into
je
adc
jl
orl
push
or
popf
movb
cmpsb
pop
icebp
and
scas
or
xor
shl
push
fld1
inc
sbb
push
pusha
loopne
xor
xor
ja
xor
jge
ss
mov
movsb
xchg
aam
push
mov
xor
push
sbb
or
arpl
aam
xchg
mov
aad
mov
out
fldt
adc
addl
test
push
dec
pop
push
rol
stos
dec
out
enter
stc
xchg
inc
dec
jl
xchg
lods
mov
jmp
ret
dec
push
xchg
sbb
ss
pop
ficoml
pop
inc
into
enter
push
cmpsl
stos
inc
shll
xchg
mov
out
push
xchg
out
mov
daa
push
adc
sbbb
out
and
jb
test
cmpsb
int3
cmp
add
jns
pop
ljmp
addl
pop
pop
mov
ja
in
loopne
call
outsb
mov
popf
sbb
mov
js
sahf
ficomps
ja
test
loopne
mov
xchg
pop
je
outsb
xchg
xor
jb
xchg
popa
push
sbb
lods
je
jne,pn
pusha
hlt
sbb
mov
adc
mov
mov
adc
mov
rclb
aaa
push
fnstenv
sub
sub
xchg
adc
mov
pop
or
mov
loopne
rcrb
mov
pop
movsl
jmp
cmpsl
dec
sub
and
hlt
jmp
and
lods
iret
fdiv
ljmp
jbe
fs
inc
das
lock
gs
and
fcoms
inc
and
mov
outsl
dec
icebp
ljmp
nop
das
mov
inc
test
xor
cmp
aaa
mov
fistps
sub
repnz
fwait
mov
lret
push
scas
je
adc
insb
inc
or
jne
adc
insl
jno
sub
push
cmp
pop
push
mov
test
aas
fsubrs
xor
push
ss
mov
adc
sub
sbb
sbb
outsl
and
loope
mov
inc
je
sbb
aam
into
lods
fs
loopne
push
sub
data16
add
lret
and
scas
pop
clc
sub
inc
adc
jmp
stos
jb
push
and
es
jg
ret
rorb
aad
aaa
cs
rcrl
pushf
pop
xor
mov
les
into
xchg
push
mov
rcrb
push
movsb
push
pop
nop
sbb
push
std
cwtl
test
mov
jno
lahf
add
ds
xchg
sub
adc
loope
xlat
and
push
rorl
dec
and
or
sub
lahf
loopne
xor
ds
outsl
movsb
add
cwtl
mov
cli
in
push
gs
ljmp
push
and
jo
out
pusha
clc
mov
pushf
pop
or
xor
fdivs
dec
cmpps
decl
pop
stos
gs
aaa
out
adc
out
aas
ljmp
sbb
int
jb
cmp
jp
insb
or
sub
pushf
sub
scas
je
das
sbb
in
jl
sbb
inc
jp
in
or
mov
insb
mov
insb
insb
pusha
inc
fwait
in
xchg
scas
or
lahf
loop
ret
sub
pop
xlat
adc
mov
into
pop
jns
jnp
bound
cmp
push
pop
ljmp
stos
sbb
test
xchg
sbb
pop
dec
cld
xchg
inc
pop
sbb
subb
fsub
das
pop
add
dec
sbb
ret
lods
mov
add
xchg
sbb
jp
movsb
int3
pop
icebp
jle
jge
loop
inc
inc
aad
cmp
pusha
fs
icebp
xchg
fsubs
sbb
push
fwait
dec
adc
test
cwtl
add
scas
cmp
mov
rclb
aam
das
mov
aam
lret
scas
lahf
add
fsub
or
xchg
or
cmpsb
into
pop
aad
test
mov
nop
xchg
or
inc
out
dec
mov
cmp
push
jl
imull
int3
or
dec
xchg
lds
fimull
pushf
pop
sbb
loope
and
lods
add
mov
out
mov
test
xor
cmp
jbe
fadds
mov
inc
rolb
outsl
fsubrl
imul
push
lcall
dec
push
in
call
pop
add
and
xchg
inc
xor
cmc
pop
push
xchg
add
xchg
inc
and
fsts
xchg
add
jmp
sub
cmp
sub
mov
push
loopne
les
mov
frndint
pop
movsl
es
pusha
data16
jb
popa
mov
cmp
shrl
cld
xchg
cwtl
xor
jo
dec
inc
pop
sbb
out
pop
adc
dec
imul
repnz
jno
sbb
aas
push
cld
stos
popf
sub
xchg
cmp
out
cmp
pop
mov
out
pop
push
mov
jo
orl
lret
jp
leave
add
dec
pop
lret
cmp
not
sbb
lcall
mov
push
sub
fsubr
and
sub
xchg
xorl
out
lods
call
out
xchg
jp
mov
cmp
pop
dec
mov
in
aas
mov
jno
sbb
dec
xchg
arpl
mov
out
add
dec
sub
call
lods
das
lock
sub
outsb
sub
test
cmp
mov
inc
pop
sbbb
add
imul
ds
ret
xor
insl
ret
xor
outsb
ret
xor
outsl
ret
xor
jo
xor
jno
xor
jb
xor
jae
xor
je
xor
jne
xor
jbe
xor
ja
xor
js
xor
jns
xor
cmp
in
jnp
push
in
jl
push
in
jge
push
in
jle
push
in
jg
push
in
add
in
add
in
add
in
add
in
add
push
in
add
dec
xchg
lahf
pop
sub
jp
aas
push
enter
inc
test
jae
adc
jg
inc
lock
mov
pop
aad
add
movsl
movsl
pop
orb
loop
inc
dec
mov
shl
cmp
push
imul
mov
popa
stos
mov
sub
sbb
add
pop
nop
add
and
fmuls
iret
xor
fsubr
test
mov
std
and
sbb
push
divb
pop
lods
add
mov
push
movsb
jo
invd
pop
fwait
dec
mov
fwait
sub
sar
dec
jbe
pop
cld
sub
imul
xchg
dec
pop
xchg
sbb
add
pop
cmp
rcrb
push
enter
aad
pusha
adc
int
sub
mov
xchg
imul
mov
cmp
mov
imul
movsb
mov
push
mov
jne
pushf
es
xchg
int3
jns
adc
jl
xchg
mov
xchg
stos
pop
fs
sbb
shll
adc
cmp
and
adc
xor
sbb
mov
or
call
cwtl
jnp
movsl
jl
loopne
and
sub
dec
jno
inc
test
push
dec
dec
and
sub
mov
mov
pop
shl
sti
repz
add
out
mov
rcrb
sbb
jo
ds
sub
cld
inc
std
push
cmpsb
movsl
or
cmpsb
xchg
xor
sti
lods
scas
jge
dec
fstps
aaa
push
or
pop
scas
and
movsl
jb
repz
pusha
push
iret
repnz
xchg
dec
ror
pop
movl
loopne
mov
aam
cmp
sub
xor
mov
pusha
sub
cmp
push
xor
cmp
pop
and
sub
loopne
frndint
mov
sub
iret
adc
sbb
xchg
ret
or
or
add
sti
hlt
mov
lahf
in
xchg
mov
sti
mov
jp,pn
sub
sbb
lcall
push
mov
mov
dec
ret
pusha
mov
es
stc
sub
jmp
pop
fcoms
lret
lea
bound
xchg
pop
aad
insb
pop
xlat
pop
aam
out
clc
filds
aas
leave
popf
rorl
jmp
test
out
test
fistps
mov
std
cld
mov
add
ficomps
repz
sbb
pop
add
imul
in
or
mov
dec
ja
mov
mov
fstpt
jmp
vunpckhpd
mov
pop
adc
inc
adc
sub
sub
sub
sti
sub
hlt
dec
notb
mov
jns
inc
push
push
mov
mov
in
push
gs
jmp
xchg
adc
pushw
jg
imul
outsb
push
adc
jg
pop
icebp
lock
sub
cmpsb
outsb
mov
addl
gs
aaa
xchg
adc
ds
pop
pop
stc
pop
fdivl
sbb
push
mov
cmpsb
arpl
hlt
mov
lcall
cmp
xchg
and
data16
mov
and
insb
mov
movsl
lods
imul
adc
mov
xor
xchg
pop
push
mov
imul
loope
cmp
sub
adc
pop
andb
in
enter
insb
or
mov
sub
sbb
push
in
pushf
pop
jmp
pop
xchg
sub
xchg
mov
fiaddl
inc
ljmp
sbb
fwait
subb
in
cmp
pop
popf
cmpsb
arpl
int3
mov
xchg
mov
lods
push
add
shll
test
mov
test
sub
jmp
dec
inc
and
imul
or
jmp
mov
sbb
pop
mov
repnz
fldcw
jmp
pop
inc
and
imul
or
jmp
mov
or
pop
mov
fstp
mov
andb
loope
in
sbb
cmp
or
add
pop
gs
push
mov
cmp
shlb
data16
push
test
popf
popa
test
lea
and
pushf
cs
mov
in
in
mov
xchg
jp
push
loopne
push
jo
ss
stc
pushf
daa
insl
mov
adc
mov
sbb
cltd
adc
movsl
mov
adc
push
in
in
enter
stos
fcmovu
add
pop
jae
lods
xchg
loop
insl
cld
shr
insb
jmp
test
jecxz
mov
mov
clc
sub
xor
movsb
push
bound
push
mov
dec
into
adc
int
bnd
or
add
movsl
aas
add
cmpsl
mov
repnz
lods
push
setg
mov
cli
loopne
gs
xchg
mov
in
aas
ret
in
or
push
in
or
lea
mov
shlb
cmp
aam
fwait
xchg
push
fisttpl
enter
lret
js
dec
pop
or
les
add
cmp
sub
imul
xlat
adc
adc
or
negb
sti
insb
lea
decb
and
adc
mov
jecxz
and
jmp
adc
lds
sbb
add
push
stos
in
cs
mov
daa
jno
mov
push
jmp
jo
xor
push
lea
sbb
push
into
xor
orl
cmp
cwtl
hlt
push
mov
mov
adc
lock
inc
pop
fistl
dec
imul
dec
out
ljmp
movsl
cmp
enter
notl
int
push
out
xor
and
pop
js
xor
js
clc
arpl
loopne
inc
jne
out
ret
mov
rolb
push
inc
enter
xor
fs
in
ret
cwtl
cmp
jp
or
pusha
idivl
lea
sti
push
add
test
clc
cmp
test
mov
mov
push
sbb
stos
push
push
mov
pusha
mov
insb
aas
adc
dec
and
push
sub
out
popa
mov
xor
fidivl
or
stos
mov
lock
jo
jl
push
xlat
mov
pop
and
xchg
push
mov
data16
pop
aas
inc
push
rcrl
icebp
add
lret
in
dec
insb
push
test
scas
lcall
call
jle
dec
pop
mov
out
jecxz
jp
loope
negl
pop
cmpsb
shlb
mov
daa
cltd
in
sbb
sbb
mov
mov
jo
scas
in
lahf
out
or
cmc
gs
pusha
dec
mov
inc
in
dec
mov
lds
jb
adc
out
add
xor
mov
test
adc
cmc
les
jle
jmp
inc
add
push
push
das
xor
xor
dec
clc
inc
xchg
xchg
cmp
nop
loope
push
pop
sub
mov
call
mov
ret
je,pn
adc
xor
mov
outsl
fsubrs
xchg
fs
repnz
aam
xor
mov
xchg
inc
dec
mov
mov
sub
lods
sbb
dec
jns
cs
outsl
mov
mov
andps
ret
dec
push
sar
je
push
jmp
sbb
sub
test
mov
sub
insb
cmp
out
adc
popa
lret
adc
popf
xchg
pop
int3
or
and
xchg
xchg
sub
jb
pop
jns
loopne
jp
movsb
adc
bound
push
sbb
es
jne
cmp
lcall
lods
push
shrl
cmp
pop
es
mov
aad
pop
or
adc
test
jo
out
fnstenv
shll
cltd
push
cmp
pusha
das
test
and
cmp
mov
aaa
sbb
stos
push
cmp
out
arpl
xor
sub
shr
mov
jb
inc
jo,pt
fcomps
mov
insb
pop
loop
inc
cld
and
es
add
cwtl
popf
lret
lds
idiv
rorl
mov
sub
add
fsubl
daa
dec
mov
push
xor
imul
mov
sub
popf
pusha
mov
enter
add
mov
movsl
clc
into
mov
out
movsb
pop
mov
jg
push
into
es
sub
dec
pop
sti
mov
push
test
inc
cmc
cmp
adc
pop
test
mov
dec
jl
xor
jg
mov
outsl
pop
push
lock
cs
stos
push
popf
and
leave
ret
fsubrl
mov
stos
loope
pushf
or
scas
xor
add
pop
jp
mov
mov
xor
ljmp
jmp
mov
cwtl
int3
pop
outsb
pushf
sti
xor
jp
jno
xchg
or
adc
cmpsb
or
test
pop
xorl
fldcw
jne
repz
inc
xor
ljmp
test
sbb
mov
push
fildl
cmp
pusha
int
or
adc
bswap
sub
xor
fs
xchg
adcl
scas
mov
push
jo
add
inc
lret
or
inc
mov
jae
fiaddl
inc
mov
imull
das
icebp
cltd
cwtl
adc
mov
mov
test
arpl
out
pop
cwtl
mov
mov
jl
faddp
and
pop
mov
mov
dec
test
and
dec
inc
push
cmp
in
mov
sub
out
mov
xor
gs
and
push
leave
inc
or
int
bound
jae
ds
mov
xchg
lahf
sub
sahf
mov
ljmp
or
out
out
fbld
lods
mov
add
mov
clc
int
data16
aad
push
pop
sub
mov
cmp
pop
jp
sbbb
in
inc
push
cmp
xchg
push
mov
push
scas
jns
adc
lds
add
sub
adc
mov
ret
cmp
sub
loopne
mov
shlb
in
xchg
pop
imul
in
lods
dec
stos
mov
notl
mov
cmp
lret
sahf
mov
xor
fmul
inc
sub
xchg
inc
push
int
xchg
sti
orb
dec
mov
cmpsl
sbb
inc
mov
jge,pn
mov
cmp
xchg
mov
pop
stos
xor
and
insb
push
mov
aad
mov
loopne
push
mov
push
in
push
mov
xchg
jl
pusha
ret
inc
aas
xchg
out
dec
in
adc
les
hlt
das
aaa
mov
inc
add
xor
xor
leave
mov
xchg
movsl
jl
hlt
stos
xor
ds
adc
adc
es
sub
rorl
mov
les
bound
or
sub
mov
out
lret
ljmp
sbb
int
mov
cmpsb
sub
mov
push
outsl
jb
js
fwait
sar
adc
jo
lods
sub
sub
insb
arpl
in
hlt
ficoml
rorl
leave
inc
push
bound
xchg
add
mov
repz
ljmp
int
and
sahf
sub
in
or
mov
jge
mov
test
pop
mov
push
dec
or
adc
add
sahf
push
ds
test
inc
cwtl
idivl
mov
pusha
push
cmp
cmc
mov
inc
test
dec
jns
mov
loopne
divl
adc
add
mov
push
and
pop
loope
xchg
mov
add
call
adcl
cmpsb
lret
push
pop
test
fsts
jne
inc
pop
ret
daa
hlt
jo
lds
test
lock
mov
aam
loopne
inc
mov
clc
add
aad
push
repz
push
ret
loope
dec
mov
pusha
das
jo
inc
cmp
mov
pop
movsl
inc
or
xor
outsb
mov
push
fistpl
pushf
mov
shrl
in
jle
add
orl
mov
cwtl
mov
loope
sbb
pop
push
xchg
test
pop
push
fsub
push
aam
dec
pushf
xor
call
andb
sub
out
mov
pop
jae
inc
push
insb
jp
pushf
int3
repnz
inc
orw
mov
xchg
insl
mov
aam
aam
test
test
aam
jmp
shrl
xchg
sub
cld
pop
add
mov
fadds
mov
hlt
mov
or
mov
jge
ret
pop
xlat
sub
push
leave
repnz
in
xchg
xor
dec
mov
push
lds
add
pop
je
xchg
jp
es
cs
xor
stos
je
icebp
test
sub
enter
nop
inc
pop
mov
shll
pop
inc
jecxz
aas
mov
and
nop
adc
dec
push
mov
jbe
sbb
sbb
fsts
jnp
and
ret
daa
cli
fdivl
and
mov
out
test
xchg
out
shrb
cmp
mov
mov
sbbb
add
test
xchg
xchg
mov
adc
push
das
push
flds
and
cli
out
mov
outsb
xchg
fcomps
xor
imul
ljmp
mov
push
dec
or
je
pop
fdivr
push
cwtl
jae
pop
cltd
cltd
adc
mov
or
andb
jbe
lods
ja
test
jns
adc
mov
jl
clc
jge
dec
mov
push
dec
cmpsl
sub
je
pop
call
jae
pop
out
cltd
adc
mov
or
jbe
ds
mov
xchg
aas
push
adc
sbb
push
aas
adc
jbe
sbb
push
test
add
aad
insl
xor
ss
mov
and
mov
xor
or
pop
in
mov
hlt
pop
ss
add
outsb
lret
adc
enter
mov
or
xchg
out
xor
loopne
repz
mov
cld
add
subb
sahf
push
sti
adc
and
inc
xchg
rorb
lret
or
rolb
mov
mov
lahf
push
cmp
hlt
push
jbe
pop
inc
pop
js
jmp
imul
pusha
add
xchg
lcall
stos
cld
add
fidivrl
imul
aam
insb
xchg
lods
dec
xor
inc
push
adc
xor
adc
xchg
jecxz
push
shll
lods
dec
addl
adc
mov
pop
aaa
scas
mov
test
or
scas
in
movsl
fwait
push
dec
movsl
outsl
and
push
sub
stc
loop
sub
push
shrb
jecxz
jb
cmp
xor
stc
addr16
dec
lock
dec
shll
mov
outsl
xorl
sub
fwait
mov
adc
ja
or
mov
mov
pop
dec
movsl
pop
clc
add
leave
js
les
in
adc
les
mov
lock
popf
lcall
jo
mov
dec
push
and
mov
cld
mov
sbb
call
bound
pop
outsb
mov
add
aam
push
pushf
adc
lret
push
mov
adc
bound
popa
stos
mov
sub
jmp
and
sub
testl
jmp
lock
gs
add
stc
pop
jb
call
dec
mov
dec
jmp
add
adc
stos
jmp
dec
call
test
aaa
cmp
inc
mov
sbb
imul
pop
mov
inc
mov
jo
fmuls
adc
push
je
int
xlat
xchg
int3
mov
sbb
jae
sbb
jp
lahf
jg
std
jo
mov
call
pop
mov
and
adc
bound
or
sbb
push
or
out
out
loopne
mov
sbb
testl
push
push
dec
in
mov
push
xor
cmp
bound
ret
cs
dec
xor
lock
aaa
orl
fimull
and
in
in
inc
in
in
js
sbb
outsl
aaa
inc
stos
lcall
lock
push
jl
testb
sub
or
pop
pop
sar
pop
inc
sub
adc
xchg
test
pop
out
jbe
in
cmp
inc
add
imul
add
mov
push
ja
pop
insb
imulb
jl
aam
dec
xchg
out
jae
aam
cmp
inc
loopne
aas
mov
out
ja
std
mov
push
sub
leave
les
setbe
mov
mov
sub
in
nop
aam
pcmpeqb
cmpl
mov
orb
call
fidivrs
pop
xchg
xchg
xchg
out
sub
mov
aas
mov
or
loopne,pn
add
pop
mov
and
adc
imul
fs
roll
cmpsb
cmp
jl
test
xchg
cmpsb
cmpsb
sub
popa
and
inc
clc
enter
and
inc
sbb
out
sbb
sbb
add
pop
and
repz
popa
pushf
cmp
push
add
mov
cmpsb
push
jbe
push
inc
jo
cmp
dec
rcl
nop
mov
dec
push
mov
mov
pop
dec
pop
sahf
test
imul
mov
fucom
sub
jg
fistpll
popa
stos
pop
mov
popa
aas
dec
ds
mov
add
daa
in
das
testb
jb
insl
dec
hlt
daa
push
pop
mov
cmp
dec
dec
movsl
scas
lods
pop
adc
mov
nop
sub
loop
fdiv
test
mov
jp
cmp
xor
xor
mull
dec
pop
pop
push
xor
pop
pop
jle
cmpsl
mov
and
iret
ret
pusha
push
popa
stos
mov
test
shl
mov
push
mov
or
cmp
jmp
push
pop
addb
sbb
pop
testl
jp
fildl
or
pop
jne
popa
cmp
or
or
add
cs
in
add
mov
leave
jo
icebp
add
lds
mov
add
and
lret
sbb
aaa
fistpll
fwait
mov
lcall
pop
xor
pop
mov
mov
push
push
cmp
jp
outsb
mov
shlb
xchg
xlat
push
mov
and
test
into
add
ljmp
inc
fucom
sub
adc
jo
ds
lock
push
jb
rorl
repnz
jmp
dec
jbe
pop
out
das
xchg
cld
repz
cwtl
jbe
cmpl
ljmp
mov
jl
out
lret
sbb
pop
bound
mov
fs
cmp
mov
int3
shll
in
mov
xor
pop
push
iret
rcrl
push
xor
not
push
fwait
push
je
sbb
push
cwtl
pop
mov
sub
je
ret
negl
cmp
lock
and
xor
movsb
or
iret
outsb
adc
dec
pop
mov
and
adc
ljmp
xlat
push
mov
rcr
xlat
or
mov
stos
fmuls
fs
scas
ja
pop
scas
es
dec
insb
pushf
mov
and
mov
rcll
in
jecxz
fwait
add
xor
js
clc
sbb
hlt
mov
ss
xor
imul
dec
das
adc
push
clc
inc
add
stos
push
lock
dec
idivl
jle
sub
push
je
jne
bound
cmp
bound
cmp
mov
jmp
fidivrs
push
pop
pop
adc
in
sub
pushf
pop
std
mov
dec
ret
lahf
dec
mov
nop
cli
adc
mov
inc
xchg
popf
je
dec
push
jge
aas
fiaddl
mov
push
push
pushf
mov
call
xchg
pop
push
out
sub
mov
and
xchg
push
xor
dec
pop
aas
or
jns
pop
shl
out
in
and
int3
mov
aas
call
inc
push
les
data16
xchg
xor
mov
pop
xchg
and
cwtl
ds
adc
shrb
mov
and
cmp
mov
enter
in
fcoms
popl
xchg
fistps
sub
ret
pop
shrb
lods
adc
das
mov
dec
push
testl
aas
mov
cltd
in
pop
cmc
insl
call
outsb
pop
arpl
jmp
jae
leave
jno
sarb
jns
imul
and
aad
and
dec
leave
jecxz
ret
xlat
pop
pop
addl
push
xor
les
jae
cmc
out
decb
inc
fnstsw
ret
mov
lcall
je
push
jl
testb
into
sub
cmp
fnstsw
jmp
pushl
pushf
pop
sbb
sub
mov
sbb
cld
adc
dec
add
add
lret
xchg
xchg
cmpsb
sub
pop
cmp
int
out
inc
adc
out
or
movsb
mov
dec
mov
and
push
pop
sahf
jmp
shll
cmpsl
pop
imul
testl
test
dec
leave
add
shrl
not
push
rorl
mov
cmp
mov
push
mov
sbb
jae
andb
mov
test
xlat
inc
push
xor
leave
sub
int3
lret
mov
sub
adc
es
jp
ss
cmp
cmp
fwait
cld
lret
jmp
inc
in
and
cmpsb
mov
jecxz
jl
jg
sarb
pop
xchg
xor
sub
aam
sub
notl
or
dec
jecxz
mov
inc
pop
loope
sub
mov
ret
cmpsb
std
js
aam
repnz
cli
mov
inc
dec
aam
int3
fdivs
xchg
in
cwtl
push
pop
cld
imulb
jns
xchg
cmp
or
movq
aad
cmp
xlat
ds
outsb
shr
mov
mov
pop
ds
pop
popa
cli
mov
je
xor
xlat
dec
clc
daa
jle
xchg
inc
in
rcl
data16
hlt
adc
jl
mov
movsb
push
in
in
push
data16
ja
cmc
mov
popa
mov
data16
rclb
push
ss
cmp
cmp
pop
jmp
xchg
add
pop
cmp
aas
ficoml
movsl
ret
mov
sbb
test
adc
cmpsl
push
dec
sub
dec
fucom
sub
pop
add
pop
rcll
in
jle
pop
and
fcomps
jg
aam
in
cmp
lret
add
adc
mov
test
lock
add
push
stos
clc
cs
int
cs
outsl
cmpsb
aam
push
aas
xor
mov
test
or
fstpt
int
out
cmp
lret
js
adc
mov
rcl
and
pop
int3
push
lret
jecxz
cwtl
sub
jmp
sbb
pcmpgtb
inc
leave
fnstcw
jecxz
xor
pop
sbbb
xor
ret
fcmovne
jl
hlt
push
cmp
iret
pop
pushf
cmp
adc
inc
pop
fs
cmpsb
cmovp
cs
into
and
outsl
adc
mov
lods
sbb
int3
xor
daa
sub
inc
cmp
sbbl
push
mov
sub
cwtl
adc
xchg
cmpsl
dec
jno
push
xlat
add
rcll
aam
inc
xor
pop
ret
adcl
cmpsb
loop
es
pop
test
cmp
jle
insb
ds
std
ds
nop
mov
pop
push
int
fistpll
popa
stos
pop
mov
popa
aas
mov
jae
dec
pop
jae
and
pushf
dec
js
div
and
mov
cmp
pop
pop
mov
mov
cmp
inc
pop
inc
popa
and
cli
cmp
mov
pop
push
sub
dec
and
lods
movsl
shlb
lock
fnstsw
mov
adc
lret
in
cmp
xor
dec
cmp
xor
daa
cli
mov
les
pop
push
jle
cwtl
sub
cmp
or
andl
addr16
mov
lock
nop
mov
in
mov
xlat
mov
mov
aad
or
push
cmp
lret
push
shrb
leave
dec
xlat
test
es
fldl
mov
ds
sti
fstpt
xchg
notl
gs
sbb
sub
icebp
enter
stos
cld
arpl
callw
fdivl
xchg
push
jge
cli
mov
inc
dec
or
adc
mov
pop
jmp
mov
push
ss
mov
fwait
cld
leave
mov
and
cld
mov
pop
mov
mov
add
mov
cld
push
aaa
xchg
push
mov
sub
mov
or
ret
insl
or
mov
cli
adc
mov
pop
dec
pop
mov
stos
ret
imul
sbb
sub
mov
push
jp
mov
jo
test
dec
int3
pushf
dec
dec
mov
cmp
cmp
inc
pusha
cmp
sti
test
xchg
xor
adc
cltd
adc
lock
cmp
aas
mov
dec
jl
shl
dec
stos
mov
push
dec
lret
xor
xchg
cmp
sub
push
cmc
scas
adc
das
dec
leave
jns
dec
out
push
lds
ljmp
cmp
jp
adc
push
enter
loop
insb
add
hlt
sub
sub
in
test
xchg
pop
xchg
lds
pop
dec
sub
sbb
hlt
aas
adc
sbb
push
int3
adc
and
jo
ret
mov
cmpb
pop
adc
fs
fldt
or
ds
lret
or
mov
mov
mov
mov
outsb
fldt
lret
sbb
movl
pop
aas
call
cltd
push
dec
dec
imulb
mov
jnp
mov
movsl
inc
pop
pop
or
cld
mov
fisttpll
mov
test
aas
mov
mov
xor
mov
pop
xchg
out
push
sub
sbb
cmpsb
fcom
add
insb
pop
ljmp
mov
mov
adc
stc
pop
cmp
mov
cmp
out
ficoms
stc
and
sub
movsb
in
xchg
sub
push
sub
repnz
fmull
dec
jecxz
xor
int3
mov
cmp
push
lods
mov
pop
dec
test
lock
xchg
sub
es
jnp
out
hlt
hlt
insb
push
call
push
lahf
adc
enter
xchg
xorb
push
mov
jbe
and
sub
dec
rcll
adc
ss
dec
push
mov
push
xor
sub
sbb
cmpsb
jae
mov
cmpsb
adc
add
mov
push
push
pop
dec
inc
out
insb
add
hlt
sub
sub
pop
add
jge
or
lods
mov
jb
loopne
mov
mov
sbb
push
mov
sbb
fcmovbe
mov
mov
and
sub
lods
in
sub
mov
pop
mov
jno
push
arpl
outsl
dec
pop
fistps
rolb
pop
pop
ffree
add
fbstp
add
lds
outsb
sbb
sahf
sbb
xor
inc
mov
ret
dec
push
loopne
int
xor
popl
cltd
in
pop
fnstenv
cld
ret
mov
sbb
out
hlt
mov
sbb
dec
aam
push
das
mul
jno
fisubl
sbb
shlb
in
lods
inc
in
stc
sbb
fldl
in
and
cmp
lret
or
icebp
mov
aam
sub
in
mov
add
fbstp
add
mov
je
out
ret
sti
in
ror
jae
test
cmpsb
push
repz
inc
sub
aas
fiaddl
sbb
mov
and
sbb
mov
arpl
insb
xlat
sahf
lahf
adc
and
cld
sub
sub
push
mov
xor
loope
add
mov
and
cmp
push
scas
lds
in
cmp
int3
adc
leave
adc
adc
mov
mov
test
movsl
fld
out
arpl
cs
loop
test
cmpsb
jge
ret
and
adc
xor
ds
cmp
clc
xorl
fbstp
ret
sti
insb
shlb
mov
xchg
enter
push
or
insb
inc
or
aas
dec
sbb
sar
inc
push
outsl
pusha
clc
dec
xor
jns
dec
dec
mov
add
sbb
rcr
mov
or
cmp
clc
or
jle
jbe
and
int
dec
push
inc
jle
cld
repz
enter
pop
pop
rcl
pop
loop
pop
xchg
jb
pop
neg
outsb
mov
mov
or
imul
push
adc
ljmp
pop
sub
mov
imul
cmp
data16
movups
testl
outsl
sarb
adc
or
cmp
push
push
xchg
mov
inc
adc
mov
fdivl
xchg
cli
call
in
add
push
mov
pop
jne
add
push
cmp
ss
sub
add
and
lods
add
test
inc
fadds
xor
in
aas
test
stc
repnz
adc
clc
mov
rorb
ficoms
add
movsl
cmp
jno
int
inc
cmp
sarl
ss
jle
in
std
out
dec
mov
lock
xlat
xor
cmp
das
dec
mov
jbe
lock
and
push
sbb
lret
int3
push
mov
mov
sub
or
push
dec
mov
bnd
filds
xor
loop
dec
mov
movsl
dec
or
shlb
in
xchg
pop
imul
sbbb
movsl
sar
fisttps
mov
stc
add
mov
pop
pop
inc
frstor
or
mov
sub
xor
sahf
sbb
shrb
inc
push
jo
rorl
dec
repnz
mov
cltd
push
xchg
rclb
sub
adc
and
xchg
push
mov
ret
dec
loope
jbe
shl
mov
repnz
movzbl
xor
out
pop
xor
push
push
loop
shlb
mov
cld
aam
pop
sbbb
ret
aam
ret
adcl
cmpsb
mov
fwait
xchg
fstpl
cwtl
push
movsl
fld
out
arpl
es
loop
mov
dec
sub
aas
fiaddl
and
out
or
je
sub
jmp
push
out
sub
fdivr
and
xchg
push
pusha
pop
dec
adc
ret
dec
leave
je
aam
loop
bnd
cmovb
xchg
jno
xor
sar
daa
inc
pop
mov
mov
loope
repz
xor
out
xor
into
xor
cmpsb
stc
cwtl
clc
mov
pusha
push
pop
push
repnz
dec
or
jg
lods
mov
ja
loop
nop
test
sub
ret
leave
inc
test
push
int3
cwtl
cmp
mov
cmp
ss
sahf
add
cmp
push
adc
or
sub
clc
mov
jno
mov
shrb
repnz
hlt
sub
repz
cs
scas
aaa
dec
mov
and
inc
ds
sahf
mov
fwait
cmp
sub
leave
jmp
pop
mov
leave
mov
aas
ss
jbe
movl
popa
stos
pop
mov
popa
aas
ds
mov
cmp
test
add
cmp
imull
sub
ds
les
jbe
sahf
sub
out
jmp
jb
fucomip
les
pop
aas
movsl
incl
or
lock
dec
xor
and
sub
fmul
enter
xor
mov
enter
mov
aam
idiv
loopne
jecxz
mov
jle
and
mov
xchg
loop
js
xchg
out
int3
dec
or
sbb
lock
loope
xor
les
push
mov
pop
test
in
and
test
orl
and
mov
sub
stc
popf
fs
cmc
movsl
cmpsb
inc
pop
xchg
pop
and
mov
jne
pop
mov
lret
mov
aas
sahf
mov
mov
xchg
jge
aas
fiaddl
adc
out
or
movsl
push
inc
jle
out
stc
rorl
add
dec
jne
div
add
sub
subb
pop
ds
mov
cmp
ljmp
push
mov
and
mov
fs
jl
cld
fistps
dec
stc
dec
out
aad
add
push
jb
sar
mov
mov
sbb
jb
pop
mov
cwtl
cld
pop
cmp
mov
stos
mov
push
jo
repz
mov
setne
mov
pusha
xchg
pop
sahf
lock
mov
push
cmp
repnz
cld
dec
cmpsb
pop
stc
repnz
js
or
movsb
push
fbld
push
cs
addr16
aad
dec
inc
dec
stc
imul
data16
cmp
std
xchg
ds
mov
jo
in
cmpsb
dec
jb
inc
fmuls
les
int3
lods
push
mov
lods
xor
inc
shrl
pop
int3
xchg
cld
out
or
test
dec
mov
or
lock
pusha
mov
pop
loopne
js
in
fisttpll
pop
push
out
loopne
lds
imul
aam
pop
adc
jp
pushf
lock
ret
and
and
dec
sub
cwtl
shll
push
fwait
scas
insl
xor
sbb
mov
inc
fsubrl
pusha
push
xchg
dec
hlt
sub
test
inc
arpl
mov
enter
in
lock
enter
jge
insb
xchg
stos
lret
loopne
mov
pushf
mov
or
jne
sbb
xchg
and
sub
mov
push
call
in
add
shlb
aam
dec
roll
jno
mov
xor
inc
ret
dec
fidivrl
jle
xchg
xor
fwait
add
mov
inc
push
into
or
loop
push
add
dec
inc
aad
aaa
xor
add
fcmovnb
lret
es
aaa
and
in
shr
test
push
out
rorb
pop
mov
adc
add
les
lret
push
in
cmp
leave
enter
arpl
push
xor
nop
or
xor
jnp
sub
lock
push
orb
std
call
mov
sbb
out
sub
or
lcall
dec
sahf
jge
ret
or
push
mov
mov
push
clc
sbb
and
add
and
push
push
pop
push
push
in
cmp
cmpsb
push
mov
shll
aas
cmp
fldcw
xor
add
bound
iret
push
inc
cmpsb
rclb
shl
dec
ja
xor
push
test
inc
xchg
daa
jb
lds
ret
cmp
mov
gs
xor
push
insb
dec
ja
mov
popa
pop
pop
pop
pop
pop
ss
cmp
push
lods
cwtl
fldenv
xchg
pop
and
pop
int3
sbb
push
inc
loopne
inc
cmpb
xchg
jmp
lods
inc
in
stc
test
mov
push
dec
push
out
movsl
out
xor
ja
cwtl
mov
jp
mov
out
pop
lock
div
sahf
or
jae
daa
push
test
jns
or
jge
fwait
mov
or
sub
push
in
hlt
adc
jmp
sub
in
ret
sbb
inc
cmp
shlb
sbbl
shll
hlt
insb
or
or
cmp
imul
out
test
push
sub
inc
inc
fsubrl
pusha
push
fadds
and
push
inc
arpl
mov
shll
mov
or
icebp
add
sbb
cmp
and
aaa
dec
test
and
daa
imul
les
test
negl
sub
cmp
outsb
gs
push
mov
cmp
lods
mov
pop
mov
adc
xor
pop
push
sub
mov
ret
test
in
cmpsb
dec
push
jno
addr16
jecxz
mov
inc
dec
dec
lahf
dec
jnp
imul
cli
xchg
repnz
loop
sub
jnp
xchg
test
pop
test
push
int3
cwtl
cmp
xor
pop
repnz
aas
xor
lret
inc
int3
das
pop
divl
push
leave
es
sbb
bound
xor
fs
and
adc
fisttps
loope
and
xorl
jp
mov
out
inc
sbb
jae
fmuls
adc
push
sbb
lret
push
cld
inc
pop
jb
add
xor
xchg
or
cltd
jne
cmp
jo
inc
adc
mov
push
add
cli
je
mov
cmp
iret
outsb
insb
push
mov
xor
add
push
push
mov
xor
pop
xor
mov
and
jns
cmp
stc
mov
mov
mov
cld
lods
mov
sub
sub
sub
dec
cwtl
popf
dec
mov
stc
xor
xor
xor
add
inc
enter
sbb
adc
mov
sub
mov
sbb
dec
mov
mov
lods
sbb
mov
sti
mov
cmp
or
inc
rcr
push
pop
je
clc
cmpsl
adc
jo
bound
xor
jb
outsb
in
cltd
jecxz
fistps
lock
jle
aam
je
dec
dec
dec
mov
daa
inc
sbb
cmc
mov
mov
clc
pusha
mov
test
std
mov
dec
xor
pop
sti
mov
mov
repnz
push
mov
sbb
dec
push
fcoms
push
xchg
shlb
addr16
cmp
sub
xchg
je
dec
mov
dec
push
xchg
adc
sub
mov
sub
mov
rcrl
mov
fistl
lahf
hlt
shll
and
in
sbb
sub
and
dec
pushf
xchg
pop
add
jge
or
das
mov
lcall
out
mov
les
mov
mov
sbb
fdivrs
xor
addr16
dec
mov
sbb
jnp
sub
push
mov
cmpsb
nop
pushf
cmp
dec
dec
push
inc
jae
mov
sub
push
sub
push
mov
inc
enter
out
inc
cmp
jl
js
mov
leave
repz
fadds
idiv
pop
jbe
stc
pop
inc
lods
jge
or
cmp
or
jne
sbb
cmpsb
in
adc
jmp
push
out
sub
cmp
outsb
rcll
sbb
lahf
dec
hlt
xchg
dec
insb
fsubs
xor
icebp
xor
lds
fdivrl
fistl
out
scas
push
out
js
dec
cmp
xor
dec
je
lret
jno
int
inc
cmp
pop
insb
fsubrs
inc
cld
or
shlb
repnz
sar
cltd
outsl
mov
pop
or
cltd
fisttpl
jmp
sub
inc
jno
push
jle
pop
fsubp
lret
movsb
shl
es
dec
push
addr16
add
sbb
mov
in
pop
adc
mov
inc
xor
inc
xor
aas
mov
aaa
aam
and
xorb
lds
aam
sar
pop
scas
fdivr
adc
std
and
sub
inc
in
xchg
sub
push
repz
xor
fsubl
outsb
cmp
cmp
cld
es
test
sbb
insb
cs
loopne
out
push
fimuls
std
inc
pop
jae
rorb
les
pushf
add
js
jb
jl
push
dec
sub
call
mov
clc
add
cs
repnz
in
mov
sub
xchg
outsl
dec
test
in
cmpsb
dec
sub
dec
pslld
fists
aaa
scas
jnp
jl
dec
push
pop
out
insb
pop
push
cmp
dec
outsb
jge
aas
fiaddl
cwtl
cmpsl
out
or
aam
in
mov
clc
aas
dec
jmp
mov
fdivp
xchg
fidivrs
jl
and
xchg
sbb
sub
mov
mov
jae
xor
fmuls
add
cmp
testb
xor
dec
fsubs
jle
xchg
mov
push
push
aam
out
aad
or
and
push
ret
arpl
inc
or
cmp
test
xor
or
mov
mov
mov
inc
in
xchg
lods
loop
pop
mov
pop
pop
fstpt
xchg
in
dec
inc
mov
test
insb
and
das
js
fs
aam
sub
jno
shrl
cwtl
orb
pop
rol
mov
fsubs
js
lahf
xchg
out
inc
stos
push
ret
jnp
cmp
adc
stos
push
jecxz
orl
sub
nop
sbb
mov
rcr
mov
cmp
movb
xor
mov
int3
rcr
lock
scas
rolb
into
inc
mov
xchg
push
push
pop
mov
jl
movsb
addr16
nop
push
fwait
cmp
pop
lods
imul
testl
adc
sbb
rcll
movsl
aas
std
mov
and
fiaddl
xchg
and
pop
sbb
in
aam
je
dec
repnz
pop
sub
sbb
sbb
inc
xchg
loopne
lds
negb
or
jl
push
sti
jle
pusha
mov
mov
ljmp
sbb
insb
lahf
out
inc
nop
loop
and
incb
jne
push
push
adc
cwtl
in
adc
add
jo
out
aas
adc
inc
mov
and
inc
jbe
xor
sbb
sub
lds
jb
clc
sbb
stos
jle
xor
and
adc
fwait
cs
out
push
testl
int
andb
push
mov
dec
insb
sub
mov
push
add
mov
pop
fnstcw
sti
sbb
mov
aas
inc
out
rorb
adc
test
lret
popf
rcrl
imul
sub
lock
jnp
sbbb
loope
jecxz
xor
rcl
adc
test
jo
xor
movsl
dec
pminsw
ror
mov
andl
pusha
mov
test
movsl
jmp
inc
fmull
faddl
adc
sub
cmc
insb
fsubl
mov
inc
out
mov
icebp
mov
daa
cwtl
mov
and
sbb
pop
daa
dec
movsb
xor
push
es
dec
sub
mov
mov
mov
dec
divl
mov
push
adc
out
lds
xchg
cmp
adc
mov
cld
jecxz
or
dec
mov
or
js
ret
movb
inc
push
andl
aas
imul
sbb
int3
mov
loope
xchg
out
fsubrl
mov
popa
arpl
inc
imul
cmpsb
jmp
xor
stos
jle
dec
push
cmp
movsb
sbb
xor
lcall
repnz
jno
gs
sbb
and
mov
sarb
rcrb
incl
mov
out
dec
push
outsb
sbb
mov
sbb
push
shll
pop
mov
int3
pop
cwtl
xlat
cltd
rclb
enter
xchg
add
lahf
fcomps
jb
sub
sbb
jp
cmp
aaa
lods
mov
jle
pop
loop
ljmp
hlt
and
addb
add
ret
pop
outsb
xchg
and
mov
pop
mov
fadds
pushf
addb
mov
mov
and
rcrb
roll
mov
hlt
sbb
jbe
in
in
or
mov
mov
adc
es
fidivs
outsl
mov
pop
pop
enter
fcomp
jo
lock
xor
out
enter
bound
inc
lcall
jge
popa
gs
mov
inc
cmp
cld
add
or
dec
add
fiadds
subb
fucom
mov
mov
ffree
mov
xor
sub
or
sub
leave
int3
popa
push
cs
inc
arpl
sbb
lret
xor
imul
mov
faddl
fisubrs
jmp
mov
aas
adc
fucomp
mov
in
ret
loop
popf
inc
leave
fmull
jg
rcl
aaa
xchg
cltd
popf
fcmovu
enter
fimuls
fists
out
sbb
pop
jo
dec
fsubrl
icebp
in
out
mov
int3
cmp
jle
popf
inc
leave
movsb
mov
hlt
mov
out
jo
pop
sbb
repnz
dec
dec
hlt
je
add
adc
icebp
ret
mov
pop
mov
mov
pop
mov
pop
inc
inc
pushf
mov
mov
mov
pop
xor
insb
movsl
aas
add
and
pushf
ja
xchg
fs
cltd
shll
scas
ds
shll
scas
sub
mov
shrb
or
iret
and
fwait
out
cld
push
mov
adc
pusha
adc
pop
mov
ljmp
mov
arpl
jl
mov
dec
push
xor
jb
fbstp
repnz
std
or
adc
int3
aas
sbb
bound
insb
bound
addr16
inc
ss
mov
or
push
jo
sbb
sub
mov
adc
pop
mov
call
cld
adc
push
jl
dec
pop
cmp
pop
push
jl
pushw
inc
mov
hlt
cld
pop
push
cli
outsb
xchg
mov
jp
cltd
mov
ficompl
cwtl
shll
or
push
and
shl
xchg
hlt
in
dec
repnz
clts
movsl
add
add
cli
push
xchg
pusha
pop
out
es
and
sub
insb
push
xor
scas
dec
adc
fwait
aas
repz
mov
repnz
cli
add
imul
cltd
roll
and
pop
mov
rcrl
push
xlat
xor
sbb
inc
inc
pushf
lock
mov
sbb
xlat
mull
push
clc
mov
out
leave
cmp
subb
push
or
repnz
adc
mov
mov
xchg
pop
add
mov
mov
aam
out
in
cmp
cmp
out
cld
popf
pop
gs
add
dec
data16
cmp
rolb
js
mov
aam
sbb
pop
dec
jo
xchg
xchg
cmp
pop
je
mov
add
inc
enter
ljmp
aam
mov
dec
subl
mov
fs
mov
ds
sarl
add
and
add
cs
mov
lods
cld
pop
mov
cld
pop
mov
pusha
jp
cltd
adc
nop
mov
cwtl
sarl
or
mov
hlt
mov
jbe
in
mov
inc
aam
add
lock
mov
mov
lcall
mov
mov
push
pop
loop
mov
cli
mov
pop
je
cwtl
cmpsl
mov
subb
in
mov
jbe
adc
or
pop
outsb
push
sbb
push
cld
pop
fimull
xor
and
ljmp
pop
lret
pop
int3
rcrb
jno
push
pop
ds
subb
lods
aam
sahf
sub
or
les
mov
lock
mov
cltd
sbb
jle
jb
fcoms
or
mov
sbb
hlt
jmp
bound
add
fs
mov
mov
adc
pop
mov
frstor
jb
cmp
xor
push
je
sub
push
pop
pushf
cs
or
shrb
movsb
mov
pop
imul
jg
test
stos
cmp
xor
ljmp
shlb
push
jp
adc
cld
aas
cmp
rclb
sub
cmp
jb
shr
push
lcall
aas
dec
ljmp
mov
inc
rcll
jl
pop
in
sub
aam
push
jno
adc
mov
or
xor
bound
push
pop
insb
adc
test
inc
arpl
sbb
pop
xor
mov
cwtl
rcrl
movsb
fidivs
jae
mov
mov
in
cmp
mov
je
pusha
pop
ficomps
jp
pusha
adc
cmp
sti
mov
andl
xchg
jne
adc
xor
mov
push
adc
sbb
cmp
movsl
fmuls
xchg
cmp
xchg
mov
xor
push
hlt
sbbl
int
xchg
and
pop
cli
dec
xchg
xor
es
loop
mov
cli
cltd
adc
cltd
adc
cltd
adc
inc
mov
cwtl
fmulp
xchg
aad
test
jg
shr
testl
pop
repz
data16
lods
testl
add
jp
adcl
loopne
lock
and
mov
lcall
stos
adc
aas
xchg
sub
ljmp
orb
dec
lods
xor
mov
cmp
sbb
pop
jo
dec
fcompl
stos
adc
std
xchg
and
pop
bound
outsb
fs
xor
dec
mov
jecxz
push
cmpsb
pusha
call
xchg
pop
pushf
and
mov
test
sbb
insb
call
dec
push
fbstp
pop
mov
in
mov
in
mov
aam
cmp
test
mov
ljmp
fs
mov
je
mov
int3
enter
pop
pop
inc
cwtl
mov
dec
sbb
jp
lcall
sbbb
pop
mov
jbe
test
add
jp
adcl
jge
mov
call
inc
mov
ds
in
jb
lods
mov
daa
mov
mov
in
mov
cmpsl
loop
lea
js
insl
dec
movsl
cmp
pop
mov
dec
adc
jns
pop
mov
mov
pop
mov
xor
out
inc
inc
loop
loopne
in
aas
subb
and
addr16
inc
ljmp
lods
in
jno
cmpsb
adcb
outsl
mov
pusha
and
mov
jp
push
cmp
aam
add
sbb
in
aad
or
pop
daa
and
loope
mov
data16
call
mov
frstor
scas
xchg
stos
xor
test
ss
ret
insb
jmp
jnp
pop
bound
test
dec
jle,pt
cwtl
rclb
icebp
mov
push
in
push
add
test
pop
stos
pop
pop
xchg
push
in
popf
mov
inc
frstor
adc
sub
out
in
aad
xchg
into
sub
imul
pop
popa
stc
pop
ljmp
inc
data16
lds
dec
sub
xor
call
cltd
jno
dec
xor
adc
sub
xor
cmp
lods
sub
test
movsb
mov
add
jle
lock
pop
mov
inc
inc
loope
aam
aas
test
inc
pop
jne
cs
and
in
popf
sbb
xlat
xchg
pop
jo
cmp
aas
add
je
jle
loopne
cmp
mov
je
repz
aam
aas
cwtl
mov
cs
and
in
popf
add
inc
inc
jbe
xlat
xchg
pop
add
sbb
jle
nop
mov
pop
mov
inc
inc
icebp
fwait
aam
aas
enter
jne
cs
and
in
popf
jo
inc
inc
jbe
xlat
xchg
pop
or
sbb
aas
add
or
jle
orb
fs
inc
inc
inc
loope
aam
pop
cmp
not
les
pop
mov
mov
into
dec
mov
adc
mov
pop
aam
ljmp
call
adc
adc
into
addr16
fwait
sub
xor
sub
popl
cmp
mov
sub
push
ds
ret
rcr
ds
jle
mov
mov
inc
inc
loope
aam
aas
pop
mov
cs
and
in
popf
mov
inc
inc
jbe
xlat
push
aam
int3
movsl
aas
add
mov
jle
push
repnz
mov
or
lea
out
sub
pop
xorb
dec
notb
dec
dec
jle
cwtl
mov
mov
jno
data16
cltd
adc
mov
aam
frstor
adc
in
push
sbb
dec
xchg
dec
popfw
and
fnstsw
push
leave
push
js
rorl
fistpl
xchg
push
in
popf
mov
inc
frstor
adc
sub
mov
pop
shl
mov
sbb
test
hlt
aas
adcb
aas
lcall
and
cmp
or
repnz
adc
aam
inc
scas
fcoml
xor
into
dec
mov
fistps
in
loopne
mov
cmp
mov
fadd
xor
je
mov
or
insl
dec
xlat
test
mov
not
les
fmull
add
into
dec
mov
ficomps
inc
jbe
push
push
jbe
push
in
enter
fs
stos
shl
dec
addb
push
add
or
sub
push
lock
arpl
ja
sbbb
bound
test
jp
repnz
shl
mov
jle
cmpsb
push
jno
fmull
mov
std
mov
or
into
dec
pslld
dec
and
inc
mov
sub
mov
adc
cmp
inc
add
sub
lods
imul
push
vphaddbd
cli
out
sbb
sub
sub
push
cmpsl
mov
sar
pop
dec
or
shlb
mov
lds
dec
add
stos
stc
sub
xor
loop
bound
cwtl
inc
lds
inc
ljmp
nop
shrl
pop
hlt
add
xor
test
sahf
jle
ret
insb
jmp
inc
cmp
in
and
inc
lds
inc
xchg
stos
les
mov
pop
in
mov
mov
imul
ret
insb
jmp
xchg
cmp
in
and
inc
add
mov
roll
xorb
hlt
test
rcll
cs
in
cmpsb
xor
mov
jge
add
mov
pop
sub
xor
add
je
dec
mov
mov
les
dec
mov
push
xor
add
les
movsl
xchg
enter
cmc
fs
into
clc
int3
xor
test
push
jbe
push
in
test
adc
inc
dec
mov
jo
shl
dec
addb
rolb
ficoml
dec
aam
jle
into
pop
aaa
sub
pushf
in
cmp
sub
movsb
fiadds
aaa
fisubl
jp
pop
or
push
inc
aad
and
fistl
sub
cs
and
stos
fidivrl
or
mov
ja
mov
mov
push
adc
mov
mov
out
sub
pop
andb
mov
rorb
insl
cmp
lret
dec
mov
jle
mov
sbb
pop
push
mov
pop
xlat
ja
inc
ret
cmp
xorb
test
orl
loopne
fiaddl
xor
into
and
jae
mov
cld
pop
loop
cld
pop
cli
fsubs
lds
dec
add
stos
stc
sub
xor
adc
adc
popa
mov
jl
fiaddl
loope
and
and
mov
pop
xchg
sar
pop
ljmp
lds
dec
add
stos
stc
test
out
jp
ret
cltd
push
dec
aaa
sti
cmp
lds
inc
shr
jne
sbb
inc
push
pop
pop
jnp
outsb
shr
fstpt
xor
movsb
mov
add
popf
sub
inc
dec
push
mov
mov
es
or
les
movsl
xchg
xchg
mov
into
clc
int3
or
hlt
jbe
push
push
jbe
push
in
sbb
adc
inc
dec
mov
int3
stos
shl
dec
addb
mov
xor
xchg
mov
dec
mov
leave
push
in
or
mov
ds
xor
and
shrb
or
push
pop
mov
not
les
jl
sti
mov
dec
mov
enter
aas
push
adc
aas
stos
je,pt
xor
push
and
movsb
stos
insl
dec
xlat
test
mov
dec
xor
adc
mov
dec
mov
iret
push
in
fs
inc
adc
aas
pop
ds
ret
xor
inc
and
mov
or
xor
not
les
out
cmp
mov
sub
cmpsl
sbb
les
pusha
std
mov
mov
xchg
mov
shll
insl
cmp
lret
dec
mov
daa
stos
cli
push
pushf
mov
push
mov
test
and
lea
jmp
inc
push
xorl
cmp
inc
jle
cwtl
mov
test
jno
data16
adc
mov
mov
or
lea
out
sub
pop
adcb
dec
in
mov
mov
cmpsl
mov
jle
call
pop
jp
mov
mov
popf
call
cmovg
cmp
aam
or
ja
jnp
cltd
stos
jbe
xlat
cmpsl
daa
push
fcomps
shrl
or
andb
mov
popf
aad
adc
outsl
ja
and
mov
cltd
push
dec
aaa
fnstcw
inc
sbb
stos
les
cmp
cs
pop
mov
cmp
mov
imul
ret
insb
jmp
push
cld
out
cmp
int3
ds
mov
popf
enter
into
sub
mov
pop
bound
push
lea
mov
shr
sub
jle
test
mov
cli
nop
cmpsb
inc
in
aad
xchg
into
sub
imul
les
cltd
mov
out
pop
movsb
cmpsl
jle
dec
mov
lea
dec
ret
test
mov
xchg
je
sub
arpl
popf
popf
pop
lahf
xchg
repz
scas
cmp
dec
inc
rolb
dec
adc
mov
cmp
lret
dec
addr16
gs
xchg
mov
xor
lock
aas
sbb
aam
jle
into
push
cmpsl
mov
adc
adc
repnz
dec
dec
popf
and
jle
std
pop
pop
int
repnz
push
or
ficoml
dec
aas
sbb
aam
jle
into
push
mull
adc
add
out
sub
dec
dec
popf
and
fidivrs
xchg
scas
insb
movsb
mov
loop
cs
pop
inc
cmc
popf
out
sbb
jae
mov
or
pop
andb
add
xor
mov
inc
fmull
repnz
movsl
loope
cmpsl
int3
cli
push
sub
inc
push
arpl
mov
mov
test
inc
cmc
popf
or
js
xchg
scas
insb
movsb
mov
add
es
mov
popf
movsb
ja
adc
mov
hlt
pushf
dec
hlt
test
mov
push
add
or
dec
scas
jle
std
pop
pop
int
negl
daa
dec
mov
gs
aaa
push
jle
pop
orl
inc
pop
shrb
add
dec
ret
adcl
mov
cs
pop
cli
xor
orb
jle
adc
jmp
test
mov
mov
dec
shrb
add
jle
and
add
mov
shll
push
in
popf
xchg
mov
xlat
dec
add
shll
sub
repnz
sti
mov
ja
mov
mov
pop
dec
xor
lds
inc
push
stos
les
ds
mov
nop
adc
stos
mov
add
jle
and
add
dec
push
dec
cmp
xor
orb
jle
adc
pushf
aas
add
clc
shll
stos
mov
add
jle
and
add
dec
push
dec
jp
mov
aaa
xor
pop
in
jmp
call
cmp
stos
mov
add
jle
and
add
dec
or
in
mov
inc
adc
cmpsl
mov
add
dec
xor
pop
mov
xchg
dec
dec
popf
or
test
and
inc
sub
jecxz
xor
orl
fsubrp
inc
and
test
or
into
mov
popf
jno
mov
inc
sub
dec
inc
push
ja
data16
cmp
sbb
into
jo
push
std
lods
test
dec
sbb
movsl
mov
xor
cs
out
faddp
sahf
push
in
popf
fs
xchg
mov
stos
mov
jno
and
je
bound
inc
data16
and
dec
sbb
ret
insb
jmp
or
and
and
dec
jns
cwtl
pop
pop
dec
inc
out
stos
les
ds
mov
nop
out
shrb
add
dec
ret
adcl
mov
cs
pinsrw
dec
sbb
jle
adc
xchg
aas
sahf
ds
shll
stos
mov
add
jle
and
add
dec
or
in
mov
inc
adc
pop
add
cmp
aas
add
cmp
jle
push
jmp
mov
jle
add
sub
pop
cmpb
dec
mov
popf
out
xor
jae
xchg
xchg
inc
sahf
sub
xor
sub
je
pop
into
jl
lods
mov
xchg
mov
xchg
pop
dec
add
mov
out
inc
cmc
popf
out
fadds
sbb
mov
push
shlb
in
aam
pop
mov
inc
pop
fs
adc
adc
in
xchg
cmpsb
test
aad
xchg
mov
shlb
mov
pusha
jns
mov
into
push
dec
mov
daa
push
sbb
cli
dec
cld
flds
loope
and
testl
mov
cmp
inc
add
sub
lods
imul
enter
ret
adc
fyl2xp1
mov
into
clc
int3
mov
jl
push
jbe
push
in
clc
push
cmp
mov
and
inc
inc
lahf
pop
fistpl
or
sub
clc
int3
insl
cmc
test
push
jbe
push
in
in
adc
js
repz
xchg
mov
push
out
clc
mov
or
in
cmp
out
jae
aam
sub
mov
ret
xor
inc
xor
pop
mov
shrb
loope
cmp
ds
fdivr
enter
push
pop
cs
repz
aas
jmp
pushf
fdivr
pop
sub
inc
jp
mov
mov
aaa
add
jae
int
push
push
mov
or
testb
mov
gs
loopne
dec
cwtl
and
adc
xlat
imul
movsl
mov
push
xchg
dec
or
popa
mov
sub
dec
aad
lahf
jl
enter
es
je
dec
add
sahf
mov
add
mov
cmp
dec
shr
movsb
jecxz
jno
pop
add
mov
ret
imul
movsl
jge
cmp
popl
mov
add
sub
test
jl
mov
in
xor
xchg
in
rclb
pop
lods
je
mov
inc
pop
popa
stos
mov
outsl
dec
pop
mov
push
mov
cmpsl
out
xor
inc
or
or
push
icebp
mov
les
loopne
cmp
cs
mov
xor
xor
or
dec
jbe
aad
mov
leave
pop
je
mov
pop
mov
jno
mov
push
inc
inc
pushf
clc
pop
mov
adc
sub
push
movsl
aas
add
lret
jp
in
mov
xor
loopne
mov
hlt
ds
hlt
push
jbe
push
inc
jno
into
int3
and
pop
mov
pop
cmc
scas
sub
mov
adc
out
jo
pop
add
mov
repnz
hlt
fs
hlt
insb
dec
rolb
mov
and
mov
sub
dec
sub
mov
cmp
out
sahf
adc
push
xor
pushw
cmp
pop
insb
jmp
mov
pop
fdivr
cli
mov
adc
repz
push
sub
repz
jo
loopne
out
pop
in
bound
push
cltd
je
bound
insl
js
pop
fcoml
dec
cld
fwait
add
sub
add
and
pop
lret
jo
sub
iret
mov
cmp
jge
ret
div
adc
pop
and
xchg
mov
call
pushf
sub
pop
bound
nop
pop
push
movsl
pop
mov
cmp
xchg
mov
sbb
cmc
inc
xor
call
push
jb
pop
ss
cli
mov
daa
fadds
imul
or
inc
rcl
push
adc
std
xchg
push
popa
stos
test
cmp
sub
fdiv
sbb
xor
cmp
test
push
aas
pop
dec
fcmovbe
movsb
pop
jbe
shl
push
cwtl
les
xor
and
cmp
adcl
shlb
jbe
in
sub
mov
pop
sbb
dec
pop
out
pop
push
scas
clc
hlt
xor
pop
in
jle
add
sbb
mov
xor
cli
push
adc
pop
dec
push
outsl
adc
ret
es
lcall
sub
or
adc
js
mov
adc
scas
or
shll
mov
cwtl
arpl
or
sub
in
or
push
xor
fisubs
ds
or
cmc
xchg
repnz
pop
fisubl
in
push
xchg
cld
loopne
dec
pop
xchg
and
sahf
sbb
jp
pushf
jo
and
pop
mov
xchg
cmp
andb
add
in
fwait
push
stc
mov
sub
pop
pop
scas
in
inc
lods
rorb
enter
popa
stos
mov
mov
sub
in
in
add
jmp
fcomps
imul
jmp
sti
incb
pop
mov
popw
mov
int3
inc
dec
cmpsl
inc
imul
filds
xor
lock
clc
adc
pop
mov
ljmp
mov
push
in
pushw
in
mov
pop
cld
pop
inc
fdivr
cli
mov
movsb
jp
cltd
mov
jb
mov
cwtl
rorl
fwait
push
addb
jnp
cld
hlt
je
hlt
jl
lock
int3
push
in
nop
push
jno
scas
xchg
lretw
pop
lret
bound
cmp
out
sahf
shrb
push
and
pushw
sub
sub
pushf
cld
pop
adc
fimull
pop
pop
inc
es
jp
cltd
mov
mov
lock
pop
cwtl
sarl
or
je
inc
xchg
jp
mov
mov
hlt
mov
jbe
push
in
loopne
adc
call
jo
pop
lret
xor
cmp
lods
addr16
sbb
cmpsl
pushw
insb
mov
fdivr
pop
and
cli
push
xchg
rcrl
les
cltd
mov
repnz
rorb
mov
repz
mov
lods
add
in
sub
cmp
push
add
aad
sbb
sbb
mov
fs
dec
shlb
hlt
icebp
in
sub
mov
and
out
jno
faddp
inc
dec
jg
inc
rorb
push
and
testb
pop
mov
sbb
scas
je
cmp
push
jl
sub
test
adcl
pop
sbb
dec
pop
out
fmuls
scas
fdiv
xor
pop
aaa
dec
push
lea
mov
pop
cltd
pop
arpl
movsb
cmova
jl
cmp
lcall
mov
ljmp
mov
je
dec
jle
pop
lcall
mov
pushf
push
add
stos
sub
mov
hlt
cs
pop
cld
add
cmp
dec
int
in
pop
aas
dec
adc
aas
inc
ds
test
mov
nop
cwtl
in
lcall
mov
ljmp
nop
popa
stos
mov
stos
and
je
stos
mov
aam
pop
mov
pop
movsb
add
imul
jno
pop
jp
adcl
jge
mov
jmp
mov
push
mov
jle
loopne
push
pop
ret
aam
dec
adc
dec
dec
sbb
dec
jno
push
in
js
jle
cmp
push
mov
cld
dec
ljmp
loop
mov
mov
rcrl
cmp
mov
int3
arpl
fwait
aam
out
sub
repz
es
mov
data16
data16
adcl
jge
mov
call
cmp
pop
add
orb
popf
stos
dec
loopne
mov
cmp
rcll
adc
cmp
mov
xor
xchg
add
pop
mov
cmpsl
mov
xor
sbb
iret
dec
inc
es
adc
leave
sbb
out
xor
mov
or
call
or
sbbl
movsb
cmp
andb
rorb
clc
rcr
ds
rcrb
add
std
ds
xor
fisubl
in
push
xchg
cltd
sbb
mov
hlt
popf
pop
fists
out
inc
roll
sub
sub
sbb
sub
xor
cmp
jl
je
in
mov
adc
ds
xor
inc
adc
mov
adc
mov
pop
mov
ljmp
mov
arpl
test
mov
xchg
jae
addr16
mov
je
mov
pushf
jo
mov
or
push
inc
inc
movsl
jbe
or
mov
jle
add
jp
or
mov
les
jne
aas
mov
jo
mov
js
mov
scas
sub
mov
adc
ljmp
mov
sub
hlt
test
mov
xchg
sub
ljmp
push
popa
ljmp
mov
adc
jo
mov
push
bswap
inc
enter
fdivrs
and
loope
ret
xchg
loope,pn
sub
pop
loope
xor
aaa
push
push
test
add
sub
stos
sub
data16
sarl
fistl
cmp
push
mov
push
ja
sahf
cmp
jmp
pusha
fs
push
or
cwtl
shl
movsb
mov
hlt
inc
inc
push
fstps
lahf
push
pusha
push
dec
fmuls
or
mov
pop
mov
pushf
adc
pop
push
adc
cmp
sahf
dec
push
aaa
jns
push
in
pusha
push
mov
inc
dec
rorb
or
add
inc
mov
shlb
mov
hlt
add
cltd
sbb
dec
in
pop
enter
push
out
dec
mov
or
jecxz
xchg
jmp
and
mov
aam
inc
xor
in
movsb
aas
dec
shrl
dec
pop
xchg
mov
sbb
fbld
dec
sub
aam
or
sbb
mov
arpl
pushf
xchg
jmp
pusha
mov
add
xor
jp
cld
lods
push
jbe
pop
in
add
mov
adc
jle
pusha
test
outsb
mov
std
adc
sub
hlt
mov
adc
out
pop
imul
xor
xor
pushf
add
gs
xchg
scas
insl
pop
mov
cltd
lods
xadd
bound
inc
inc
int3
mov
outsl
mov
mov
loopne
hlt
int
push
push
add
mov
loopne
push
cmp
imul
push
push
xchg
stos
mov
arpl
ljmp
push
lret
fistl
ds
lret
jp
clc
add
sub
hlt
pushf
and
pop
or
nopl
jp
xchg
inc
jge
mov
inc
inc
leave
add
insb
lahf
daa
repnz
inc
addr16
mov
movsb
mov
hlt
addb
ds
add
nop
xor
call
in
hlt
ret
adc
je
lret
inc
loope
cli
cmp
bound
loopne
pop
sbb
fimull
xlat
test
mov
repnz
jmp
in
inc
shlb
fdivr
push
repz
mov
xchg
test
fucomip
xchg
in
mov
add
add
push
mov
push
sahf
andl
movsb
movsb
mov
hlt
pop
inc
and
in
repnz
hlt
sbb
xchg
test
xchg
mov
aas
mov
mov
lret
jp
lods
lods
pop
jbe
pop
ljmp
mov
adc
loop
inc
addr16
fists
xchg
popf
pusha
popa
test
pop
popf
es
pop
inc
aas
mov
das
cld
jb
adc
cld
cmpsl
mov
and
insb
dec
jnp
aas
sarb
loopne
cmp
outsb
mov
adc
les
sub
inc
adc
std
jnp
pop
cs
or
xlat
das
aas
stc
es
and
int
int3
and
mov
inc
mov
cmp
mov
jne
in
jg
sub
xor
ja
lock
aad
push
xor
lret
jle
icebp
inc
movl
imul
pop
xchg
add
pop
xchg
pop
xchg
and
push
fcmovne
pop
dec
dec
xchg
rcrb
stos
in
xor
movsb
cmp
loope
imul
mov
cmp
xor
bound
hlt
rcr
sub
or
push
testl
dec
imul
and
jb
jl
jle
adc
jmp
pusha
shll
stos
mov
dec
or
repz
jmp
dec
or
xor
cld
repz
or
push
ljmp
jp
cltd
adc
mov
int
shrl
xor
std
ljmp
mov
jo
jge
mov
insb
mov
pushw
sysenter
je
lea
dec
mov
movsb
mov
add
es
mov
stos
loope
pop
movsl
sarl
push
aam
pushw
fsubl
lock
popl
xchg
lds
cltd
lods
imul
cmp
mov
ds
sub
inc
sar
push
mov
xor
popa
cli
mov
je
pop
cbtw
lds
or
push
int
repnz
dec
mov
es
inc
push
test
fs
popf
pop
arpl
pushf
js
repz
sub
pop
int3
pop
fistps
pop
cmpsl
mov
mov
jno
pop
dec
cltd
adc
xchg
rcrl
sub
repnz
sub
pusha
sbb
popa
or
push
mov
jo
cli
push
hlt
inc
adc
ficoml
or
mov
in
mov
loopne
inc
jo
mov
jae
cwtl
xchg
push
mov
ja
and
mov
cltd
push
dec
add
stos
shll
sub
int3
scas
mov
push
push
jbe
push
in
lock
xor
push
ja
mov
mov
mov
push
mov
mov
fidivl
ja
mov
mov
scas
inc
mov
xor
inc
dec
adc
cmp
aam
ret
add
ret
xor
push
mov
cs
pop
lods
sub
or
andb
shll
add
sub
cmovg
cmp
aam
sub
pop
xchg
out
lods
repz
pop
xchg
stos
stos
pop
xor
cmp
mov
cmp
arpl
jno
and
or
dec
sub
cwtl
xchg
in
test
pusha
or
dec
sbb
adc
dec
mov
add
xor
inc
ds
hlt
hlt
dec
jbe
inc
jne
repnz
jmp
inc
fmull
bnd
int
pushf
test
push
jo
inc
jbe
xlat
push
pop
je
in
or
ror
pop
push
jmp
adc
xor
or
push
push
jae
cmpsl
test
mov
jle
call
aam
jbe
lcall
imul
mov
push
popa
pusha
adc
pop
xchg
jp
insl
loop
push
popa
mov
fs
lcall
or
mov
cwtl
shll
add
in
repnz
popa
pusha
sbb
frstor
adc
in
test
fs
mov
stos
out
mov
mov
xlat
nop
roll
pop
or
test
cmp
adc
xor
dec
daa
jle
test
in
and
into
push
mov
adc
xchg
ljmp
push
fs
mov
or
add
add
cltd
outsb
xor
sub
mov
inc
push
outsb
pop
pop
fdivr
cmp
pop
xchg
adc
int3
cmpsl
sub
sub
daa
inc
mov
and
fwait
jno
push
out
data16
mov
std
mov
clc
dec
pslld
aas
dec
cwtl
sub
mov
sub
mov
adc
cmp
jl
ljmp
cltd
shll
sarb
imul
data16
fcompl
pop
adc
push
mov
mov
adc
xchg
adc
rcrb
lcall
inc
inc
lahf
or
xor
dec
dec
ds
cmpsl
sbb
xchg
lock
adcl
sub
mov
sub
bound
mov
decl
add
in
insb
adcl
mov
cs
jle
out
xor
stos
mov
popl
mov
jae
pop
sahf
xchg
clc
xchg
das
call
inc
lock
push
jno
push
in
in
bound
cltd
stos
out
sbb
mov
rclb
cs
pop
pushf
add
cmpsl
mov
sbb
ljmp
ljmp
sti
loope
cmp
mov
in
adcb
jmp
pop
loopne
lret
bound
scas
pop
data16
imul
xchg
repnz
sub
out
jns
jp
mov
dec
ss
adc
lock
rcl
lret
shll
stos
mov
out
and
pop
sbb
or
jmp
test
mov
jne
dec
into
push
mov
stos
push
in
or
push
push
jbe
push
in
or
mov
adc
sbb
lea
mov
jmp
jge
dec
into
jle
mov
jle
pop
and
js
inc
mov
stc
pop
std
pop
data16
mov
mov
ljmp
dec
adc
inc
inc
loope
aam
pop
aaa
shl
aam
dec
insb
sub
sub
fs
jno
mov
pushaw
jo
or
add
int3
movsl
mov
mov
popa
adc
insb
push
xchg
pop
cli
lahf
cmp
jle
dec
mov
sbb
pop
mov
sbb
outsb
xchg
or
aam
inc
lock
push
jno
push
mov
insb
les
inc
cwtl
jge
dec
pop
es
mov
mov
mov
or
add
lods
movsl
mov
jecxz
add
xchg
or
sub
lahf
aam
jle
dec
inc
mov
hlt
pop
inc
jo
rorl
fistpl
xchg
push
mov
lods
push
jno
push
sbb
insb
les
into
insb
xchg
pop
and
pop
mov
or
add
mov
call
adc
adc
loop
mov
push
inc
jbe
adc
shr
mov
cld
sub
inc
adc
inc
sub
jo
xchg
pop
and
nop
ss
adc
and
pop
sbbl
sub
dec
sub
mov
ss
push
xchg
push
jne
jae
mov
mov
daa
push
sbb
sbb
sahf
jo
cli
push
test
mov
ficoml
mov
mov
push
inc
jo
into
dec
test
push
xchg
add
outsl
ja
and
mov
cltd
push
dec
add
stos
shll
sub
int3
outsb
mov
push
push
jbe
push
in
shrb
adc
jb
xchg
iret
cmc
movsl
cmpsb
dec
push
orb
cmp
mov
cs
xchg
test
test
dec
sbb
sub
xor
out
and
imul
sub
inc
mov
sahf
pop
std
push
dec
mov
std
sub
push
dec
mov
daa
push
sbb
mov
push
inc
inc
adc
and
sbb
push
adcl
sub
jl
sub
bound
jecxz
sar
push
decb
in
insb
adcl
mov
jno
pop
out
adc
inc
insb
pushf
and
out
sub
pop
out
fdivr
push
mov
insl
mov
fwait
stos
in
in
pop
pop
int
repnz
repnz
mov
es
inc
push
mov
popf
pop
arpl
push
cli
xor
subb
movsb
pop
or
popf
out
jp
push
mov
or
sar
push
mov
xchg
mov
sahf
add
add
cli
mov
je
pop
scas
jno
jno
sbb
xchg
scas
insb
movsb
mov
add
es
mov
push
movsl
sarl
adc
lods
pop
pushf
adc
xor
cmp
xor
movsl
mov
arpl
hlt
mov
out
lcall
stos
jno
dec
ljmp
dec
mov
in
mov
mov
pop
mov
mov
dec
pop
pop
in
in
mov
jae
mov
pop
jb
dec
ret
js
popa
adc
ds
mov
bound
xchg
adc
inc
sahf
jl
push
dec
jecxz
pushf
shl
dec
addb
lea
les
cwtl
into
dec
dec
lock
sbb
sub
sahf
sub
mov
adc
cmp
inc
or
xchg
fnsave
jae
xchg
mov
aad
and
fistl
sub
loopne,pn
js
adc
push
rcrl
pop
scas
subb
fs
ds
hlt
sub
jbe
and
pop
lods
mov
pop
push
xor
jl
cmp
stc
cs
sbb
fcompl
cmp
push
lods
ds
add
js
push
sub
or
inc
mov
and
fwait
jno
push
mov
cmpsb
mov
std
fmul
out
sub
dec
cmpps
shr
or
sub
call
adc
inc
sub
push
jo
mov
cli
enter
outsb
pop
cs
pop
xor
fisttpl
mov
cmp
mov
stos
xlat
dec
add
adc
and
jg
pop
loope
xchg
pop
arpl
dec
in
push
push
into
ficoml
lds
mov
clc
test
stos
sub
dec
push
inc
jo
fcompp
cwtl
fsubl
mov
mov
jbe
cmpsl
lea
popa
mov
fs
lcall
js
sbb
shll
push
cwtl
shrl
sub
in
je
pop
in
push
jo
cli
popa
or
push
cmp
in
cmpsl
test
mov
jle
call
fmull
repnz
mov
cwtl
rcl
or
add
cld
cmpsb
push
popa
pusha
adc
pop
xchg
jp
pop
adcl
mov
fs
lcall
adc
mov
cwtl
roll
rorl
sub
repnz
jmp
pop
mov
js
or
int3
fs
das
les
inc
or
push
jl
ret
enter
dec
xor
sti
stos
add
aas
push
or
cmpsl
add
mov
icebp
and
adc
movsb
nop
mov
lea
roll
pusha
nop
cmpsl
jl
ss
xor
adcl
jb
xlat
pop
inc
jo
pop
movsl
sarl
sbb
gs
pusha
insl
pop
fs
inc
sbb
shrl
fucom
outsl
or
xor
arpl
cmp
jmp
je
out
inc
mov
mov
pop
push
dec
dec
das
mov
mov
shlb
es
mov
pop
pop
in
nop
je
pop
xchg
mov
xorl
ds
push
fs
jno
dec
jp
cltd
adc
mov
int
shll
xchg
mov
sbb
ret
inc
les
push
lcall
int3
jg
push
je
pop
sub
push
fsubl
cmp
inc
sbb
cltd
lods
imul
xor
mov
cld
cmpsl
scas
cmp
cltd
adc
ret
shr
inc
lret
clc
incl
dec
adc
in
sahf
aad
and
fistl
sub
loopne,pn
scas
adc
iret
sbb
sahf
cwtl
cmc
cltd
stos
hlt
dec
dec
pushf
mov
push
rclb
aas
mov
push
sub
cmovg
cmp
aam
ret
and
popa
adc
ds
adcb
mov
adc
sub
pushf
std
push
dec
jecxz
loopne
loope
addb
out
je
sub
mov
inc
push
push
loop
arpl
add
repz
sub
pop
test
fistps
repz
out
lods
inc
jno
pop
cs
adc
inc
stos
mov
cmp
pop
leave
sub
cmp
js
cmp
adc
and
sub
xor
cli
xchg
outsl
inc
mov
xor
xchg
jle
cmp
mov
popa
stc
pop
ljmp
push
sub
fmuls
adc
jmp
sarl
or
outsb
mov
pop
insb
fidivrl
sbb
mov
cmp
and
adc
xor
in
fisubrl
jmp
xchg
jg
jae
and
jno
lds
sub
imul
dec
lods
pop
les
pusha
pushf
insb
xchg
pop
bound
pop
xor
icebp
and
push
dec
mov
daa
push
adc
inc
cmp
inc
popa
mov
adc
cmp
add
jo
inc
mov
cmp
sahf
add
cwtl
adcl
addr16
gs
xchg
mov
mov
les
shll
mov
pop
orl
mov
mov
mov
jnp
rcl
mov
push
insb
jmp
arpl
mov
jbe
xor
fnstsw
push
mov
pop
cld
out
inc
cld
pop
scas
fdivr
push
into
pop
les
xchg
mov
fimull
add
ja
out
jns
mov
repnz
dec
mov
adc
mov
dec
mov
mov
bound
into
addr16
fwait
sub
xor
sub
test
fcomps
mov
jo
push
shll
cs
pop
xchg
add
mov
cmp
aad
jb
mov
ja
and
mov
stc
sub
les
jle
mov
mov
test
in
je
push
shr
outsb
xor
mov
jge
fists
xor
dec
push
jle
cwtl
mov
sub
add
jp
cltd
adc
mov
mov
inc
frstor
adc
jae
cmpsl
test
test
out
inc
cmp
sub
sbb
ret
xchg
in
shr
bound
in
sarb
adc
and
mov
pusha
sbb
jl
add
stc
sub
out
lods
cmp
into
jle
or
data16
jno
sbb
and
xchg
into
pop
fistps
arpl
cmpsl
mov
mov
icebp
and
clc
int3
sbb
call
mov
mov
arpl
int
je
inc
xor
stos
shrb
loope
xor
pop
and
subl
add
mov
into
aaa
push
push
insb
cmpsl
pushw
je
lock
stos
mov
cmp
sti
lret
lock
push
jno
push
in
out
sbb
out
enter
push
inc
je
pushf
int3
and
jo
lods
les
aam
je
lock
adc
into
pop
jg
jbe
jp
repz
loopne
fdiv
and
clc
int3
test
test
push
jbe
push
in
jl
adc
sbb
mov
push
xor
mov
data16
mov
je
in
leave
rorl
lcall
cli
xchg
pusha
jp
cltd
adc
mov
mov
inc
frstor
adc
fs
mov
in
enter
push
inc
je
insb
leave
and
cmp
pushf
les
test
xor
subb
push
into
pop
fistps
inc
cmp
loopne
fdiv
and
clc
inc
dec
inc
sub
mov
sub
mov
sub
call
adc
inc
push
mov
push
test
mov
sub
mov
inc
shrb
inc
sub
adc
cmp
bound
addr16
fwait
sub
xor
sub
movsb
mov
arpl
stos
les
dec
add
cwtl
rorl
cwtl
loopne
insb
iret
not
inc
imul
mov
stos
fistpll
ret
inc
les
push
jnp
shr
ss
adc
adc
nop
aas
outsb
adc
and
push
inc
aad
and
fistl
sub
cs
inc
out
sarb
xchg
into
sub
imul
mov
push
lock
xor
cmp
jle
test
es
cmp
in
std
cmp
rcrl
ret
xor
fnstcw
xor
mov
ds
hlt
or
rcl
push
jnp
rcl
xor
ret
insb
jmp
adc
out
cmp
sarl
out
mov
dec
rolb
test
int3
popa
push
push
jbe
push
in
enter
je
cs
mov
push
xor
scas
mov
cmpsb
mov
mov
adc
cmc
imul
pop
in
notl
stos
pop
outsb
mov
pop
mov
loopne
or
lods
adc
inc
inc
sbb
outsl
daa
push
mov
and
cs
sbb
and
clc
int3
mov
pop
shr
push
cwtl
rcll
inc
sub
repnz
icebp
and
push
dec
mov
daa
push
sbb
and
dec
jl
adc
mov
shrb
loop
arpl
arpl
or
dec
mov
mov
fsub
into
addr16
fwait
sub
xor
sub
add
fcomps
mov
aam
push
add
pop
inc
add
xor
mov
ja
and
mov
cltd
push
dec
or
or
xchg
rcr
push
cwtl
rol
pop
add
in
repnz
and
push
dec
mov
daa
push
push
andl
pop
push
in
leave
rorl
mov
cmpsl
mov
mov
pushf
add
mov
inc
test
pop
add
lea
out
sub
pop
addb
mov
ret
dec
mov
add
cld
cmp
pop
mov
push
fsubs
in
xor
jecxz
add
xchg
and
adc
xchg
pop
cli
pushf
rcr
cmp
dec
mov
jae
in
lods
popa
push
push
jbe
push
in
test
adc
sbb
mov
push
xor
mov
mov
or
cmpsl
mov
jb
dec
add
jle
mov
in
add
lea
out
sub
pop
xor
xorl
add
cld
cmp
pop
insb
adc
in
sub
cmp
jecxz
add
xchg
clc
mov
dec
les
rcll
cmp
xchg
pushf
jl
out
fs
pop
push
fdivr
push
cs
les
xchg
mov
fisubrl
pop
dec
add
ja
out
jns
mov
repnz
decb
sub
ljmp
xor
pop
mov
daa
inc
inc
inc
loope
aam
aas
pop
adc
cs
out
cmp
fmul
jge
dec
pop
stc
jno
mov
les
or
add
js
dec
add
stos
stc
test
out
jp
rolb
les
out
out
in
mov
jae
xor
fimuls
pushf
dec
nop
cmp
push
xor
stos
fdiv
pop
jl
aam
pop
sub
fstpt
jmp
ljmp
stc
pop
js
dec
stc
cld
xor
add
mov
fnsave
pusha
lods
adc
into
pop
fistps
mov
les
rcll
or
push
mov
je
pop
sahf
jl
aam
pop
add
inc
pop
fs
adc
ljmp
fdivrs
lods
mov
test
into
dec
mov
je
in
js
and
cmp
cmp
je
xor
and
movsb
stos
shl
dec
addb
cmpsl
pop
cltd
pop
dec
xor
iret
not
fildl
insb
mov
cld
pop
sub
push
fs
not
inc
ret
mov
test
orl
les
rcll
mov
sub
bound
ja
test
inc
int3
push
shr
mov
sar
mov
jge
fists
xor
dec
stos
jle
cwtl
mov
or
mov
push
fdivr
push
pop
pop
les
pop
fs
out
in
loop
cs
out
cmpb
lods
into
out
cmp
pushw
je
jo
stos
mov
add
popf
cmpsb
arpl
hlt
mov
ja
cmpsl
test
test
and
sub
sbb
sub
hlt
out
push
fs
mov
pop
lods
imul
repz
adc
fcom
sbb
ret
xor
test
je
dec
or
dec
dec
adc
sub
test
test
push
shr
adc
stos
jmp
sarl
or
gs
dec
sbb
cwtl
mov
or
rorl
fistpl
adcl
inc
push
addb
stc
push
jecxz
in
cmpsl
test
test
out
inc
cmp
sub
sbb
xchg
fcoms
mov
sub
mov
sub
fildl
mov
add
insl
dec
xlat
test
mov
not
les
push
pop
js
outsl
and
stos
les
adc
cs
pop
and
adc
mov
cmp
aad
ret
shrb
loope
xor
pop
mov
les
les
cli
sar
adc
fldl
fimull
or
int3
dec
nop
cmp
pop
xor
stos
fdiv
pop
jl,pn
aam
pop
sub
adc
loope
std
loop
cs
xor
std
and
out
pop
imul
ds
jb
ljmp
xor
pop
mov
daa
inc
inc
inc
loope
aam
aas
pop
loopne
pop
jne
je,pn
out
es
fmul
jge
inc
pop
in
jno
mov
add
inc
or
add
js
dec
sub
stos
xorb
test
orl
les
rcll
cmpsb
add
adc
adcb
sub
arpl
add
add
sbb
xor
pop
es
cmpb
add
cmp
enter
hlt
cmp
hlt
and
cmp
or
daa
inc
inc
inc
loope
aam
pop
sub
not
les
push
pop
js
outsl
mov
push
jo
cmpsb
ds
mov
loopne
mov
mov
enter
push
xor
inc
dec
scas
test
test
add
dec
or
mov
jg
inc
lret
add
out
fsubs
fidivs
idivb
add
les
pop
fsubl
mov
sub
subb
and
addr16
xor
adcl
and
mov
fstps
mov
jmp
sbb
xor
sar
push
fimuls
add
add
sbb
push
add
es
jbe
xor
pop
add
cmp
test
mov
hlt
pop
dec
hlt
inc
dec
jbe
jle
xor
cmp
mov
sub
in
fadds
loope
and
jb
mov
adc
cld
repz
sub
repz
addr16
stos
gs
xchg
mov
dec
fistpll
ret
inc
les
test
push
shll
jle
adc
jmp
call
add
stos
mov
cmp
out
addb
in
insb
adcl
mov
rcrl
ret
xor
sarb
lret
ds
ss
sub
jmp
add
ret
adcl
mov
shll
out
mov
dec
enter
dec
out
mov
cwtl
rcrl
cwtl
roll
movsb
sub
repnz
jp
push
lea
out
sub
pop
xorb
mov
ret
dec
sarb
test
sbb
adc
xchg
ret
and
pop
shrb
adcl
in
cmp
inc
data16
fucomp
in
add
lea
out
sub
pop
addb
dec
into
or
jmp
add
cld
cmp
pop
cld
adc
xchg
repnz
cmp
out
jo
dec
ret
adcl
mov
cs
out
mov
dec
or
inc
sbb
xchg
mov
cwtl
ror
push
cwtl
shl
pop
pusha
sub
repnz
and
jmp
inc
fmull
out
xor
jl
fadds
mov
or
push
sahf
data16
data16
cltd
adc
movsl
xor
mov
frstor
adc
sub
fiaddl
mov
fnstcw
sti
decl
aam
cltd
push
test
mov
mov
mov
mov
popf
cmpsb
arpl
hlt
mov
lcall
cmp
cmp
shrb
mov
jge
hlt
fdivl
jle
push
loop
xor
incb
or
push
bnd
cmpsl
xchg
add
in
and
movsl
dec
pslld
dec
mov
xchg
mov
and
mov
or
and
fwait
jno
push
inc
mov
cmpsb
mov
in
rcl
inc
adc
repnz
fs
mov
bnd
icebp
and
jmp
inc
fmull
ljmp
dec
fistps
shl
fstl
hlt
jmp
mov
sub
adc
mov
dec
movsl
out
push
int
pop
sbb
daa
xor
test
mov
mov
mov
dec
daa
push
xlat
je
adc
cmp
xchg
push
add
leave
and
ret
daa
out
and
jb
icebp
je
aam
dec
pushf
rcrl
mov
sub
inc
loop
aas
mov
ljmp
in
ljmp
pop
pushf
ficoms
insb
arpl
jne
cs
xor
movsl
stos
lea
push
ror
popf
popa
push
fwait
mov
jno
fistps
test
jecxz
pop
stc
jno
push
ret
mov
and
xchg
jbe
cwtl
fs
inc
and
dec
add
mov
dec
das
jp
pop
pop
insb
inc
xchg
lock
sub
ljmp
add
fcomi
cmp
out
aad
mov
or
das
sub
sub
add
sub
ss
js
push
arpl
push
stc
mov
in
out
adc
and
add
inc
ljmp
insb
sub
adc
iret
es
fwait
dec
aaa
jge
leave
xorb
movsl
xchg
leave
cltd
add
lock
test
aas
std
mov
mov
push
lahf
fwait
sub
sarl
dec
inc
cwtl
pop
jnp
enter
push
mov
cmpsb
adc
arpl
push
add
mov
mov
popa
repz
stc
mov
sbb
mov
imul
jg
pop
add
stc
sub
mov
cmp
imul
pop
push
cmp
mov
mov
lea
icebp
fiaddl
outsw
lret
adc
leave
cmp
rol
mov
sub
into
xchg
aas
shlb
and
shl
sub
ret
inc
aam
pop
testb
sbb
bnd
mov
int
push
in
push
pop
les
mov
mov
jecxz
push
inc
push
data16
out
fdiv
mov
xor
or
loop
add
mov
inc
pop
aas
and
mov
mov
jnp
imul
cld
popa
popa
rcrb
adc
cwtl
mov
mov
xchg
daa
sbb
inc
xchg
int3
movsb
xlat
jmp
xchg
in
arpl
imul
hlt
cmpsl
xchg
push
js
xchg
push
jle
dec
icebp
addl
aaa
sti
test
push
into
roll
shlb
add
dec
mov
pop
adc
jns
imul
xor
and
adc
roll
test
dec
sub
push
jo
inc
push
adc
andl
ret
inc
roll
jbe
adc
push
cmp
push
cltd
mov
gs
fldcw
jns
mov
aas
xor
ds
jecxz
xchg
inc
scas
iret
and
repz
nop
mov
or
testl
xchg
das
cmp
daa
jmp
pop
cmp
popf
cmp
sbb
fwait
cmc
push
xor
and
cmpsb
jmp
sahf
ret
popf
xchg
mov
cld
and
sbb
out
jb
adc
outsl
push
sub
test
sahf
jnp
mov
test
adc
ljmp
adc
or
xor
mov
mov
gs
cmp
cmpsb
cmpb
cmp
push
mov
data16
xchg
mov
mov
fimuls
or
sahf
clc
hlt
jb
and
cld
stos
in
roll
icebp
pop
adc
sahf
lods
andb
daa
test
clc
xchg
aam
mov
inc
bound
push
adc
popa
sub
mov
push
jns
add
jnp
test
es
aad
shrb
in
mov
pushf
dec
jns
jmp
push
xchg
sahf
dec
mov
int3
int3
scas
push
add
sbb
cmp
ds
es
notl
mov
mov
aam
mov
adc
cmpsl
fwait
into
in
std
xor
dec
stos
jno
mov
inc
mov
sbb
fbld
lahf
mov
dec
mov
sub
ret
scas
or
push
stos
shrl
data16
ds
stc
test
sahf
into
dec
sbb
sub
rcl
inc
mov
loope
jmp
sbb
xchg
mov
in
shl
add
cmp
sbb
mov
rclb
mov
mov
fnstenv
sarb
cmp
shlb
fsubs
outsl
int
push
inc
cmpsl
in
pop
dec
test
push
cmp
xchg
into
xchg
dec
test
and
jb
sub
adc
adc
test
orb
imul
pop
xor
ja
pop
xchg
inc
and
pop
test
fmul
stos
iret
clc
push
cmp
fcoms
add
nop
cwtl
dec
pop
les
xor
inc
scas
and
fnstcw
test
es
cs
movsb
mov
ds
jbe
int3
xchg
scas
test
adc
sbb
dec
pop
push
fdivr
push
and
xor
repz
es
fwait
or
or
in
mov
and
jnp
lcall
movsl
jl
fcom
cmp
ljmp
jle
outsl
lcall
in
and
add
in
jbe
rcr
pop
mov
shll
push
xor
mov
scas
pushf
in
cmpsl
and
cwtl
shlb
loop
test
clc
aam
mov
inc
lret
test
cli
aaa
les
dec
aam
mov
test
cmp
mov
test
xchg
xchg
pop
test
je
pop
or
xchg
mov
outsl
pop
mov
cltd
pop
inc
and
mov
pop
push
int
push
cltd
or
arpl
popf
xor
sub
lods
adc
dec
shlb
adc
outsb
test
cmp
sub
movsl
aaa
arpl
jbe
xlat
in
inc
inc
inc
sbb
cmp
push
dec
into
cs
inc
stos
jnp
pop
adc
cmp
sub
push
outsl
jo
fcom
inc
or
mov
add
cmpsl
out
lods
pop
les
shlb
xor
jmp
dec
xchg
cmpsl
lds
adc
push
test
xchg
inc
pop
in
rorb
push
popf
out
jl
loop
sub
fldcw
jbe
pop
out
sahf
or
dec
insb
add
imul
cltd
dec
mov
aam
ja
xor
lock
das
inc
mov
xchg
fisubrs
sarl
or
pop
shll
push
dec
add
les
in
dec
movsb
rcrb
mov
pusha
sub
movsl
pop
xchg
dec
or
mov
xor
xor
movsl
mov
addb
jl
push
pop
pop
fsubr
dec
dec
cltd
out
xor
xorl
xor
sub
and
xor
mov
lea
cld
dec
aas
push
cmp
xchg
lret
adcl
data16
sarb
push
mov
xchg
mov
inc
mov
adc
sti
sub
stos
cld
sub
stos
std
sub
stos
pop
mov
or
dec
loopne
cmpsl
add
inc
pop
fdivrs
dec
pop
xchg
test
cmpsl
inc
mov
mov
xchg
sub
stos
cwtl
sub
stos
pushf
sub
stos
mov
and
mov
inc
mov
hlt
cwtl
dec
rolb
xchg
mov
dec
cmp
imul
sahf
inc
xor
xchg
dec
inc
mov
lock
sbb
mov
mulb
in
data16
aam
adc
sub
aaa
repz
pop
inc
mov
pop
imul
push
jbe
subb
mov
sbb
mov
sub
insl
hlt
test
mov
addr16
jae
push
and
fcomps
into
cmp
js
out
dec
push
jnp
inc
mov
adc
cmpsl
lahf
aam
arpl
inc
aaa
jp
mov
inc
push
icebp
test
les
sbb
xchg
inc
adc
adc
inc
and
rcrl
sub
mov
sbb
shll
mov
fstpt
out
cmp
jbe
scas
mov
mov
inc
les
std
pop
jb
adc
mov
pop
jle
dec
ljmp
sbb
scas
pop
lock
add
addb
test
mov
out
mov
adcl
add
addb
in
cmc
or
lret
xlat
push
add
xor
das
mov
movsb
hlt
xor
pusha
pop
hlt
mov
jmp
cmp
push
sarb
xchg
cmp
cmpsl
push
push
mov
aas
mov
call
mov
and
sub
push
data16
stc
lret
cwtl
test
xchg
sbb
stos
mov
push
inc
jno
xchg
mov
sub
xchg
and
mov
mov
cmp
jno
adcl
popa
outsl
mov
clc
sub
adc
pop
jmp
sbb
insb
mov
xor
cmc
mov
add
addr16
insl
aas
jmp
mov
sbb
sarl
sarb
sub
xorl
mov
fisttpl
ds
imul
iret
push
in
pushf
stos
fistpll
enter
jo
xor
rolb
mov
div
adc
or
push
push
and
icebp
std
int
or
add
rcl
daa
mov
sbb
adc
adc
or
and
shrb
cli
ja
adc
mov
cwtl
jge
mov
mov
enter
mov
sahf
cltd
xchg
jl
fisubrl
or
fldenv
mov
rcrl
pop
or
cmpsb
xchg
sbb
call
cmp
xchg
rclb
mov
pop
adc
aaa
lcall
cmp
gs
add
cmp
mov
mov
push
or
out
insl
enter
movsb
sub
in
sub
and
push
jp
pop
adc
rorb
dec
movl
test
ds
int
js
adc
cwtl
data16
jmp
rcll
dec
imul
dec
xchg
sbb
or
jl
sub
insb
and
call
stos
jp
in
pop
push
ja
cmc
mov
xchg
mov
cltd
cld
mov
or
shl
mov
cmpsl
inc
stos
lods
push
insl
jge
js
sub
imul
mov
aaa
movsb
or
pop
jo
rcl
push
rolb
shll
out
mov
jmp
jp
mov
dec
cmp
call
push
incb
in
jbe
inc
jp
lret
inc
dec
cmpsl
ss
sarb
pop
adc
add
xchg
pop
movsl
cmpsl
imul
jle
adc
stos
inc
sahf
hlt
mov
inc
out
adc
ss
ljmp
jns
imul
sub
fnstsw
cmpsl
push
dec
in
shlb
in
jbe
sub
mov
fimull
adc
inc
pop
mov
lods
or
or
popa
subb
mov
fwait
lods
adc
mov
daa
loope
imul
dec
mov
negl
push
in
outsb
pop
or
jnp
loopne
pusha
sarl
mov
pop
jae
cmc
int
inc
dec
mov
mov
dec
xchg
cmp
inc
pushf
xchg
push
insb
push
xor
sti
fs
clc
aas
mov
and
or
mov
test
ss
sub
sbb
jg
icebp
dec
int
sub
mov
xor
jmp
mov
mov
push
push
int
roll
imul
dec
dec
jg
rol
gs
adc
sti
pop
inc
test
rcrb
sub
cwtl
fbld
jns
sbbb
mov
daa
dec
hlt
subb
and
or
adc
inc
mov
xor
icebp
inc
pop
dec
stos
pop
jl
or
dec
sti
in
xor
out
mov
bound
push
mov
pop
cmp
mov
mov
and
pop
repz
xor
mov
test
cmpsb
pop
insb
inc
in
jo
inc
rorl
jp
jae
mov
outsb
hlt
jb
and
insb
leave
je
or
rorl
test
and
xchg
lds
inc
loop
das
sbb
test
in
das
fwait
sahf
into
outsb
in
movd
shrl
push
pop
push
push
mov
adc
push
sub
xor
add
adc
fbld
je
inc
aas
cmp
inc
pushf
call
mov
or
rclb
jns
mov
int
pop
xorl
and
stc
sbb
out
and
pop
inc
jg
test
je
pop
xchg
mov
arpl
in
cwtl
dec
repz
aam
int3
lock
inc
mov
in
push
je
xchg
xchg
cmp
es
insb
shlb
rol
lret
cli
and
loope
xchg
add
in
push
jo
outsb
jecxz
aaa
push
rcrl
pop
push
lret
pop
lret
adc
aaa
mov
dec
jp
jg
lea
fisttpl
ja
mov
and
or
fsubrl
enter
pop
mov
dec
sahf
hlt
jmp
add
outsb
push
mov
lcall
xchg
scas
loop
jg
fldt
movsb
sub
jge
jmp
stos
dec
sub
scas
cmp
aaa
mov
imul
bound
in
call
cltd
jno
dec
xor
jg
aas
cmp
sub
ret
xor
cltd
jnp
repnz
imul
or
xlat
and
jno
jae
mov
sub
bound
mov
enter
push
and
mov
cltd
push
dec
pop
sbb
or
pop
pop
inc
loope
jle
ss
mov
mov
rcrl
imul
stos
mov
adc
push
add
in
and
dec
je
sub
sbb
push
add
push
orb
pop
xor
push
lods
xor
add
int
sub
ja
mov
mov
mov
insb
inc
fcompl
xchg
lret
into
push
xchg
push
insb
divb
jbe
push
in
in
push
mov
data16
daa
inc
inc
inc
loope
aam
aas
mov
inc
pop
jne
je,pn
dec
or
loopne
imul
aas
loop
sub
mov
sbb
ret
shrb
sbb
dec
xorl
cmp
jl
inc
push
mov
push
xchg
mov
clc
stc
stc
mov
push
adc
push
adcb
movsb
cmp
ds
xchg
mov
pop
xchg
in
and
shll
jbe
stos
sub
test
cmp
repnz
popa
add
jg
jo
lcall
or
dec
rcll
out
aad
and
or
imul
scas
push
jae
repnz
mov
ret
or
int3
nop
sbb
xor
aas
mov
gs
xor
sbb
xchg
dec
pop
ficoml
mov
mov
pop
sahf
push
sbb
dec
arpl
arpl
jmp
mov
mov
inc
push
sub
out
sbb
push
stos
sub
pop
sbbb
push
rorl
adc
mov
pop
mov
insb
cld
aas
cmp
inc
pop
mov
and
add
mov
pop
push
cmp
push
scas
pop
xchg
mov
xor
mov
sub
movsb
mov
jo
stc
fucom
pop
mov
sub
inc
xchg
jg
adc
sub
clc
dec
pminsw
jo
xchg
test
stos
lock
push
cld
out
pop
cld
pop
jp
fisttpl
inc
push
xchg
cltd
sbb
aad
pushf
fisubrs
mov
jns
push
popf
xor
mov
in
jecxz
xor
hlt
mov
push
pop
stos
hlt
cmpsb
add
or
dec
xchg
testb
inc
mov
add
es
gs
arpl
jae
or
idivb
pusha
mov
ljmp
aam
jmp
data16
push
mov
fwait
add
enter
pop
push
in
lock
push
cmc
scas
mov
sbb
sahf
xchg
mov
cmp
xor
lahf
xor
repz
lcall
repnz
jle
loopne
es
pop
inc
or
adc
arpl
sub
jp
xor
out
mov
add
add
fcmovbe
mov
mov
shr
enter
cmp
cs
cmp
bound
stc
mul
pop
pop
cwtl
call
or
adc
xor
cli
int3
in
mov
dec
adc
add
push
mov
mov
xchg
cwtl
clc
xor
push
add
in
mov
dec
mov
pop
mov
xor
mov
xor
mov
idiv
push
hlt
sbbl
cmpsl
int3
push
into
in
aas
aas
addr16
cmp
pushf
mov
je
mov
cwtl
shrl
insl
inc
sub
mov
adc
icebp
mov
xor
and
push
jbe
push
in
add
xor
dec
ljmp
call
push
sahf
sub
mov
adc
mov
rcrl
cmp
mov
mov
cld
pop
and
aam
out
in
mov
add
lods
arpl
aam
pop
xchg
mov
call
jne
or
aam
in
mov
jbe
adc
ds
ret
xor
inc
adc
mov
adc
sbb
mov
sub
jecxz
xchg
cmp
rcl
repnz
hlt
dec
hlt
cld
dec
fadds
in
in
fstpl
xor
cmp
mov
in
arpl
fwait
aam
pop
rorb
xchg
add
lahf
rcrb
arpl
sub
mov
xor
bound
cmp
mov
mov
dec
icebp
dec
outsb
mov
dec
or
pop
idivl
dec
mov
je
mov
repnz
loope
aam
int3
ljmp
cmp
sub
inc
repz
mov
aam
dec
xchg
mov
pushf
mov
push
in
clc
aas
push
adc
pop
mov
push
sahf
sub
mov
adc
mov
rcrl
cmp
mov
dec
arpl
in
rcrb
dec
sahf
mov
arpl
popf
pop
arpl
pushf
or
mov
xor
outsl
into
in
or
cmpsb
adc
sub
aam
sub
fdivl
insb
push
test
and
dec
mov
loop
pop
lods
pushf
xchg
cld
out
pushf
cld
pop
jo,pn
mov
pop
add
mov
jb
loopne
ljmp
cmp
ret
jns
pop
mov
les
or
mov
je
in
xor
mov
in
xor
clc
sub
mov
sub
stos
fdivr
fimull
sub
mov
popa
sti
js
inc
in
cmp
mov
js
mov
push
fisubl
movsl
adc
ja
mov
push
in
std
dec
cwtl
jl
pop
scas
push
cmp
xor
jo
mov
or
cli
shr
repnz
test
mov
cmpsl
cmp
test
mov
ljmp
inc
inc
std
xor
mov
pop
mov
push
or
mov
add
movsl
aas
add
lds
pop
in
and
push
in
jg
xchg
call
movsb
xlat
mov
pop
add
jmp
mov
mov
dec
mov
cmpsl
mov
xor
fwait
aam
aas
xor
push
dec
lsl
aaa
sbb
dec
pop
sub
jmp
cwtl
orb
dec
xchg
mov
pushf
mov
push
outsb
and
push
mov
aam
sub
insl
pop
push
pushf
addb
movsl
add
sub
mov
aam
dec
hlt
mov
cld
mov
push
in
cwtl
cmp
xchg
incb
mov
cwtl
xchg
mov
inc
lret
jp
test
mov
mov
inc
push
int3
pop
jle
mov
out
insb
cld
pop
jp
fisttpl
inc
adc
repnz
pop
stos
mov
test
add
loope
jne
cmp
pop
dec
hlt
mov
xchg
cmp
in
in
adc
xor
ds
mov
mov
push
adc
jb
push
in
inc
push
mov
fs
sbb
iret
push
mov
js
insl
lcall
fistl
hlt
xor
aam
dec
mov
insb
pop
ss
cltd
push
insb
mov
xchg
loopne
and
xchg
scas
push
push
sbb
adc
cmp
shll
push
addb
mov
pusha
cwtl
mov
sub
sub
in
dec
push
add
std
xchg
out
stos
push
fldcw
cmp
xor
adc
mov
pop
addl
imul
or
pop
bound
lods
pop
sbb
mov
inc
mov
sub
gs
repnz
add
mov
fldenv
and
fucomi
jecxz
jecxz
sub
or
pop
jo
push
hlt
cltd
or
sbb
lahf
loopne
cltd
pop
arpl
sub
aam
or
daa
mov
cmp
lods
insb
mov
cmp
rcrb
cs
pop
pushf
add
int
hlt
sub
sbb
dec
and
movsb
in
js
push
cmp
bound
je
cmp
mov
mov
xor
lcall
mov
ljmp
mov
call
shl
ud2
mov
add
mov
popa
cli
mov
sahf
aaa
jnp
dec
pop
orl
add
adc
mov
les
or
dec
adc
fwait
add
js
cmp
test
js
mov
mov
int3
or
adcb
xchg
jmp
inc
push
push
mov
push
push
cmc
inc
mov
add
jmp
or
repz
dec
cs
nop
imul
sbb
in
test
cmp
mov
or
repnz
dec
mov
aas
stos
out
pusha
jae
test
fcomip
fistl
or
ret
dec
push
jecxz
loopne
in
mov
roll
pusha
mov
cmp
mov
mov
mov
in
dec
or
jmpw
jmp
jge
aaa
into
outsb
mov
rcrb
lret
dec
imul
push
rcrl
sub
in
push
jo
jb
or
push
mov
in
cmpsl
test
mov
movsl
call
inc
dec
jbe
xorb
imul
dec
lods
jle
xchg
das
call
inc
lock
push
jno
push
jae
scas
call
loope
insb
xchg
cwtl
jge
add
pop
clc
mov
jno
mov
sbb
mov
inc
mov
and
fwait
jno
push
add
std
in
into
out
sub
dec
pextrw
mov
lret
es
loopne
and
adc
ss
add
sub
pop
mov
les
fsubrl
mov
sub
mov
mov
mov
aaa
jle
pop
xlat
jge
testb
cli
and
add
dec
or
xor
shrb
int3
xchg
test
xor
mov
cmp
dec
loope
cmp
js
loopne
xchg
sub
outsb
jmp
mov
mov
cmp
jmp
inc
mov
xor
sarb
stos
stos
and
sarb
cltd
mov
inc
jge
mov
ret
jle
jl
pop
pop
in
in
and
cmp
arpl
orl
les
call
into
andl
sbb
mov
outsb
sub
insb
daa
inc
mov
and
shrb
mov
cmpsb
mov
pop
aaa
into
dec
mov
jae
inc
lock
add
sub
adc
and
jecxz
xlat
std
and
fwait
jno
retw
jno
pop
es
sahf
or
movsl
rorl
jo
je
js
push
popf
dec
in
adc
jmp
adc
xchg
mov
cmpsb
outsb
mov
pop
bound
cltd
stos
out
mov
mov
nop
rorl
or
adc
mov
mov
sbb
frstor
adc
pop
bound
cltd
stos
out
pushf
inc
mov
or
pop
jns
and
mov
push
inc
jo
cs
dec
jae
cwtl
xchg
push
and
mov
cltd
push
dec
add
stos
shll
inc
jne
stos
push
mov
aam
xchg
popa
cli
mov
je
aas
fdivp
mov
jecxz
dec
addb
add
les
movsb
into
dec
dec
les
xchg
pushf
adc
adcl
sub
cld
out
push
bound
mov
jmp
shll
cltd
shll
sarb
imul
jp
pop
adc
pop
adc
in
pushf
je
out
jl
pop
outsb
fdivr
push
pop
cwtl
sub
add
adcb
push
push
hlt
mov
ja
cmpsl
test
mov
jle
call
sub
cmpsb
adc
sub
pushf
inc
cld
out
dec
cld
pop
sbb
decl
out
pop
mov
insl
mov
fwait
cmpb
cmpsb
arpl
hlt
mov
lcall
stos
jno
or
add
mov
pop
push
cld
pop
loopne
test
je
je
pop
in
push
jo
xor
stc
push
xorb
test
mov
jle
call
add
jbe
subb
imul
mov
mov
xchg
jp
jae
adc
popa
mov
fs
pop
fistpl
cmpsl
mov
add
push
add
shll
push
sbb
jbe
nop
ds
add
fcmovnb
add
call
push
into
pminsw
seto
repnz
sub
mov
mov
inc
inc
pushf
add
out
or
pop
lret
push
scas
pop
add
ret
orb
enter
pop
int
hlt
pop
dec
dec
add
dec
bnd
fwait
add
mov
mov
hlt
sbb
push
pop
cmp
pop
xchg
int
inc
sahf
insb
test
aam
aas
imul
test
je
dec
jbe
inc
movsl
daa
xchg
mov
cld
mov
inc
je
pop
dec
data16
fs
orb
mov
int
repnz
or
mov
es
jo
push
shl
arpl
arpl
cld
repz
sub
pop
add
fistps
pop
mov
cli
out
cmp
fwait
pop
mov
adc
inc
xor
cld
pop
mov
pop
or
insl
mov
fwait
sbbb
hlt
mov
push
lcall
stos
jno
or
add
mov
pop
loop
mov
addr16
mov
xchg
das
in
repnz
jb
loopne
pop
jbe
push
push
popa
mov
fs
lcall
aam
sbb
test
lods
aas
lcall
ret
xor
in
andb
pop
dec
shrb
cld
aas
sbb
les
jle
ss
xchg
adc
mov
shll
stos
mov
dec
or
jmpw
jmp
jge
aaa
into
outsb
mov
pop
rorb
test
mov
lret
clc
inc
adc
inc
sub
push
jo
cmpb
cs
or
ss
sub
aas
sbb
inc
shll
stos
mov
push
shrl
jmp
inc
fmull
repnz
loope
cmpsl
int3
cli
in
inc
push
jo
or
mov
hlt
fs
hlt
insb
dec
mov
pop
aas
test
js
mov
sub
cmovg
xorl
in
int3
push
and
mov
sub
mov
ss
sub
cld
daa
inc
mov
daa
push
xor
jo
pop
daa
dec
jno
sbb
ret
pop
pusha
xor
pop
andl
repnz
pushl
pop
push
jb
sbb
dec
pushaw
pop
aas
mov
in
xor
insl
push
pop
addb
scas
call
loope
insb
xchg
jge
movsb
pop
jbe
and
bound
jo
or
add
sub
mov
mov
popa
adc
popf
in
loop
jo,pn
jle
or
les
mov
fwait
mov
data16
data16
jp
cltd
adc
mov
int
rcl
gs
xchg
mov
sub
aas
ret
inc
les
insb
xchg
mov
js
or
mov
data16
inc
or
add
or
mov
mov
popa
adc
xchg
in
loop
cs
jle
or
mov
hlt
pop
mov
fmuls
scas
xchg
test
insl
mov
fwait
orb
hlt
mov
ja
cmpsl
test
mov
orb
xor
push
push
ja
mov
sub
inc
jo
pop
dec
cmp
push
subb
push
inc
sub
aad
and
fistl
sub
and
jle
loopne
xchg
ja
mov
nop
shrl
pop
rcl
cld
sub
fsub
sub
cld
dec
jecxz
sar
and
cltd
shll
xchg
imul
pop
jle
fcompl
js
into
push
nop
xchg
insb
inc
mov
adc
sub
dec
sub
jl
push
dec
jecxz
mov
inc
inc
lahf
arpl
cltd
pop
dec
xor
dec
dec
ds
cmpsl
sbb
jl
xchg
adc
sub
hlt
out
push
fmull
sar
push
dec
ret
adcl
mov
cs
jle
out
xor
stos
mov
sub
fs
sub
insb
mov
rcrl
sbb
shl
mov
dec
xlat
test
mov
out
dec
pop
and
add
sarl
pop
adc
in
pop
sbb
cmp
mov
sbb
ljmp
ljmp
sti
loop
loopne
inc
push
push
mov
xlat
inc
pop
mov
add
xchg
mov
sbb
frstor
adc
inc
bound
cltd
stos
out
sbb
les
adc
cs
pop
cmp
adc
mov
sbb
in
cmp
xchg
sub
outsb
jmp
mov
mov
cmp
jmp
inc
mov
aaa
xchg
mov
js
xor
sbb
xor
insb
mov
adcb
inc
faddl
mov
mov
mov
daa
push
sbb
push
mov
push
inc
inc
adc
inc
or
fs
mov
push
inc
jo
into
ret
cmp
jo
inc
inc
loope
aam
aas
push
pop
jne
je,pn
jle
ss
xchg
adc
dec
data16
push
in
mov
aas
out
adc
cwtl
add
or
push
and
mov
stc
cs
xchg
jle
fcompl
lods
adc
pop
cmp
adc
dec
arpl
data16
fs
orb
mov
int
repnz
mov
dec
mov
es
push
jmp
mov
in
pop
arpl
pushf
mov
repz
sub
pop
cmp
fistps
fsts
mov
mov
jno
pop
mov
pop
inc
sub
cld
pop
mov
pop
call
fwait
adcb
hlt
mov
out
dec
pop
xchg
stos
jno
or
add
mov
or
cld
pop
add
push
xor
das
in
repnz
jb
loopne
pop
jbe
shrb
xchg
pop
cli
lahf
enter
dec
inc
mov
hlt
pop
dec
shlb
dec
jae
pop
scas
xchg
test
insl
mov
fwait
orb
arpl
hlt
mov
ja
cmpsl
test
mov
movsl
call
inc
dec
jbe
or
mov
hlt
sbb
call
pop
and
pop
adc
inc
dec
fs
sub
dec
addr16
inc
or
mov
scas
jl
ret
xor
lock
mov
inc
aaa
cmp
fcoml
test
fsubl
and
subl
jnp
stos
popf
mov
andl
aas
push
mov
xchg
lret
and
in
inc
imul
pop
and
cmp
jmp
lret
shrl
in
xlat
mov
or
int3
sub
movsb
inc
push
fsub
jmp
out
xor
test
out
and
sbbb
sub
arpl
push
cmp
jp
inc
push
sub
dec
push
arpl
pop
sbb
sub
in
and
incl
adc
cmc
in
jmp
insb
push
out
imul
pop
aad
test
and
jle
bound
cmp
pop
xor
jp
dec
mov
popf
mov
leave
mov
es
fcomps
and
jnp
out
insl
pop
stos
mov
inc
mov
adc
cmp
icebp
orl
push
enter
xor
mov
stos
out
mov
jb
in
daa
jp
dec
xor
sub
pop
aad
test
cmp
jb
insb
pop
stos
push
roll
or
in
xchg
adc
cmp
icebp
orl
push
sub
push
lcall
in
jg
cld
mov
sub
cmp
icebp
orl
push
sbb
push
lcall
in
jg
int3
mov
sub
xor
pop
test
hlt
mov
and
imul
push
fwait
push
lret
mov
cmc
insb
or
jle
hlt
mov
and
pop
mov
int3
out
xchg
in
cmp
sqrtps
scas
mov
cmc
sbb
iret
or
pop
inc
lods
ret
outsl
sub
hlt
sti
xor
dec
xor
aaa
mov
lret
cltd
lds
jle
int3
je
lret
orb
cmpsb
mov
add
add
mov
and
in
lds
adc
adc
roll
ret
pop
aas
les
pusha
pop
aad
sub
jp
and
mov
adcl
add
aam
adc
pop
jmp
into
xchg
shr
adc
loope
push
sbb
popa
mov
fcmovbe
xchg
test
xor
mov
jecxz
jnp
pop
notl
cli
adc
xor
mov
push
pop
sub
dec
mov
daa
push
sbb
mov
ds
jp
sbb
and
mov
push
aam
pop
or
rdpmc
leave
jb
pop
stc
movq
shll
sarb
imul
push
cli
pop
rorb
clc
push
inc
je
dec
adc
fadd
pop
mov
ljmp
nop
mov
mov
outsb
pop
and
pop
push
cltd
test
ret
xor
xchg
fwait
addr16
xchg
orb
fnstsw
pop
lcall
dec
mov
jae
xchg
fisubrs
lea
push
xchg
loope
jo
inc
mov
xor
sbb
hlt
mov
movsb
push
jge
add
out
push
notl
call
xchg
push
push
ja
test
and
sbbl
jle
test
inc
nop
cmp
loope
les
rcrl
ret
xor
inc
cltd
jb
sub
cli
mov
pusha
dec
outsb
push
sub
lret
scas
pop
in
pop
stc
xor
jmp
popa
popa
outsl
movsb
add
cwtl
mov
into
in
push
pusha
lret
les
mov
outsl
push
movsl
in
jae
push
pop
test
mov
lock
into
dec
mov
push
sbbl
xlat
test
mov
not
les
lock
cmp
leave
das
mov
repnz
ds
cli
mov
test
push
dec
mov
addl
daa
lea
out
cmp
cmpsl
sbb
ljmp
imul
jne
outsb
insb
outsl
imul
das
rcl
ja
and
das
cmp
mov
imul
pusha
fwait
cs
or
incl
test
mov
xchg
popf
mov
sub
cwtl
aad
inc
push
pop
push
sbb
pusha
jl
dec
sahf
xor
ds
lods
cmp
shll
inc
or
mov
add
xchg
cmpl
pop
sub
adc
cmpsl
cwtl
adc
push
sbb
dec
aas
js
dec
out
pop
sahf
inc
sub
hlt
mov
ljmp
mov
data16
sub
std
mov
mov
jae
or
adc
repnz
rclb
add
or
inc
cmp
cmpsb
xchg
test
mov
lret
push
std
leave
dec
inc
fisttps
data16
mov
in
push
xchg
jecxz
jl
dec
pop
xchg
add
int3
jl
lcall
ret
mov
xchg
adc
push
mov
push
int3
sub
cmp
movsb
pop
pop
aad
insb
mov
and
out
popa
insb
inc
icebp
xor
push
and
loope
xor
cmp
push
mov
sub
push
shlb
pusha
push
cmp
mov
into
iret
in
stos
push
test
cmp
mov
ljmp
mov
pop
mov
outsl
into
lods
sub
shrb
mov
test
test
lcall
mov
inc
sbb
jbe
jle
mov
sbbb
pop
stos
cmp
push
cmp
mov
adc
sbb
pop
aam
xchg
push
in
in
mulb
lret
sub
dec
inc
mov
jle
dec
mov
pop
lahf
lret
fsubrl
sahf
test
pop
sbb
inc
mulw
cmp
xor
xchg
stos
out
cvtps2pi
push
lahf
orb
mov
dec
fs
decl
jbe
cmovo
lods
xor
roll
dec
test
sbb
xchg
pop
call
out
mov
cmp
xchg
ljmp
dec
daa
adc
sub
popf
push
outsb
pop
dec
fdivr
pop
sub
pushf
jp
cltd
mov
or
cltd
add
or
lret
adc
push
fdiv
mov
hlt
push
inc
jbe
xlat
and
add
in
jle
rorb
ds
dec
push
mov
mov
popa
mov
push
push
mov
xchg
pause
shrl
pop
fiaddl
int
repz
mov
jle
lahf
inc
inc
and
into
jmp
inc
fmull
repnz
jmp
int3
cli
in
in
lods
repz
scas
repnz
shll
xor
cld
or
icebp
shlb
stc
dec
sbb
mov
lahf
mov
sub
cmc
lock
negb
cmpsb
fdivl
pusha
repnz
fcompl
fcom
jb
lods
inc
clc
sub
mov
mov
or
push
out
fs
inc
jbe
shll
ljmp
jns
mov
bound
fs
jmp
add
es
out
and
hlt
pop
jno,pn
cli
sub
cmc
out
dec
ljmp
jmp
or
jp
jb
sbb
in
cmp
lcall
orb
sub
dec
xlat
and
dec
jne
sub
and
dec
lods
mov
mov
hlt
ja
test
jo
mov
adcl
jnp
pop
inc
jbe
mov
mov
rcr
jge
xor
adc
push
fmuls
clc
jmp
int3
cmp
aaa
loop
mov
ja
and
mov
stc
cs
jmp
stos
repz
xor
sub
jns
mov
push
pop
in
dec
cmp
and
jae
mov
jge
rorl
fsubl
inc
dec
sbb
mov
pusha
push
lahf
dec
imul
in
jbe
push
dec
hlt
adc
mov
fildll
test
xlat
push
flds
add
xchg
push
mov
push
mov
and
sahf
jmp
in
mov
mov
xor
ljmp
adc
xor
pop
cmp
in
orb
and
xlat
mov
sbb
out
push
jle
hlt
in
stos
or
mov
or
lcall
int3
lea
mov
scas
clc
lret
pop
mov
adc
fidivs
mov
test
xor
ja
mov
nop
rcrl
dec
jbe
fs
mov
and
dec
pslld
add
and
cmp
out
imul
sar
and
sbb
push
repz
sub
add
mov
shll
jo
or
sub
je
lock
push
jno
push
cmp
scas
in
xabort
mov
lret
lea
in
mov
nop
push
push
test
scas
cltd
push
push
shrl
bnd
sar
add
pushl
call
pop
jp
out
pushf
add
in
cmpsl
test
inc
insb
push
jb
push
fisttps
mov
cmp
mov
ja
and
out
jl
add
out
sbb
mov
repz
mov
pop
fmuls
pop
add
loope
cwtl
xlat
sub
in
adc
push
lret
inc
in
push
pop
ds
adc
leave
nop
insb
mov
adc
out
sbb
in
je
in
mov
sbb
sbb
xor
mov
adc
aaa
xchg
and
sub
adc
int
fdivr
cmp
push
mov
cltd
add
mov
push
loope
mov
frstor
adc
jae
cmpsl
test
mov
push
inc
jbe
xlat
xor
jle
mov
sbb
xchg
popf
adc
js
mov
and
fs
push
inc
jle
xor
popa
xor
sbb
push
out
nop
xor
data16
sbb
adc
and
sub
pop
adc
mov
push
cld
cmp
ret
lock
push
add
mov
ds
xlat
enter
movsb
push
inc
or
xchg
xorl
mov
mov
pop
pop
hlt
mov
add
mov
adc
and
sbb
add
add
movsb
and
sub
xchg
mov
rolb
cwtl
mov
shrl
scas
cmp
pop
mov
je
lcall
je
popa
jo
sahf
lds
stos
sub
mov
push
jg
mov
sub
xchg
push
add
fs
fsubl
mov
cmp
pop
jbe
adc
dec
push
gs
ljmp
dec
cmp
sbb
and
mov
das
into
or
xchg
and
inc
jbe
rorl
fcomps
push
cwtl
jge
xchg
pushw
mov
mov
pop
xchg
mov
sarl
fwait
sbbb
inc
pop
movsb
adc
xchg
mov
mov
pushf
sub
mov
out
sub
jle
fistl
addr16
popf
je
pop
inc
push
mov
movsb
into
pusha
xor
xlat
push
repnz
jle
ja
fdivr
add
pop
pushf
sub
repnz
inc
mov
xchg
jp
xor
adc
jo
sbb
pop
cmpsl
ss
adc
cmp
xor
mov
sahf
loopne
sarl
cmp
sbb
adc
push
pop
addb
cld
xor
jne
int
inc
mov
inc
jbe
rorb
rorb
jge
aam
cmp
sub
int3
scas
mov
pop
ds
clc
pop
scas
dec
jcxz
insb
rcrb
cmp
push
lea
add
jmp
call
loop
jmp
stos
fisubl
inc
inc
push
inc
jo
xor
test
lret
stc
push
push
jae
test
data16
aas
incb
in
cli
mov
aaa
pop
call
xchg
add
sub
pop
orb
mov
cmp
into
push
jp
insb
ljmp
pop
sbb
cs
ss
mov
pop
test
jns
pusha
inc
sbb
inc
xlat
and
xor
lret
xchg
xor
inc
dec
js
and
jno
test
cld
repz
insb
cmp
mov
rcrl
out
in
stos
xchg
xchg
stos
fidivl
add
stos
push
jo
adcb
xor
ds
jmp
dec
mov
adc
lea
mov
add
lahf
sar
mov
test
test
cwtl
sub
in
inc
push
add
les
inc
dec
adc
cmp
jmp
jb
popa
stos
mov
sub
pop
pop
jl
into
xor
pop
dec
xchg
xchg
and
add
rclb
mov
mov
jb
mov
roll
fwait
adcb
adc
sahf
neg
sbb
jmp
cmpsb
aas
rcll
out
mov
mov
push
dec
and
or
lds
adcb
das
movsb
add
inc
in
push
inc
jbe
roll
pop
loopne
in
imul
fistps
fcoms
mov
je
add
mov
sbb
shll
and
data16
insl
dec
xlat
test
mov
jmp
mov
subb
imul
data16
je
fcompl
in
fadds
cmp
sbb
orl
ds
mov
clc
int3
sub
bound
ds
aam
sbb
or
jmp
sbb
into
imul
mov
rorb
shll
jo
fmuls
mov
cwtl
push
rolb
add
sarl
and
mov
push
push
pop
inc
cs
mov
dec
sbb
fnop
rcrb
out
outsl
sbb
pop
aas
mov
rol
push
mov
in
cmp
stos
mov
add
push
stos
aad
inc
scas
push
fnsave
push
cmpsb
push
jge
jae
fisttpl
add
xchg
enter
add
je
ds
push
mov
dec
test
test
add
mov
sbb
pop
mov
lahf
bound
popa
loopne
adc
ja
push
lcall
cmp
shlb
add
stos
sbb
mov
or
scas
and
imul
stos
xorl
lcall
push
fwait
push
pushf
imul
loope
xchg
les
shll
fldl
ret
mov
dec
jecxz
int3
push
out
mov
scas
inc
std
ja
hlt
mov
xchg
aad
movsb
push
repnz
sahf
pop
out
pushf
mov
ret
jbe
inc
in
addl
arpl
and
push
inc
loopne
icebp
aam
mov
cmpsl
dec
adc
mov
ss
sub
or
xchg
and
out
mov
sti
xchg
adc
xchg
dec
dec
xchg
push
jnp
sbb
addr16
or
out
stos
adc
icebp
gs
xchg
enter
aam
pusha
mov
pop
loop
faddl
rcl
dec
dec
das
mov
mov
test
or
mov
push
cmp
push
adc
adc
ljmp
push
and
push
dec
insb
and
cmc
clc
lea
hlt
ror
cmp
push
xorb
xchg
add
pop
rcl
sti
aad
xchg
mov
sub
in
mulb
lahf
scas
cs
je
xacquire
nop
popa
lods
jmp
sar
xor
mov
outsl
push
xlat
loop,pn
xlat
out
nop
repz
inc
std
mov
adc
inc
fmulp
sub
call
imul
adc
outsb
lret
rorb
adc
xlat
mov
out
fadd
sbb
movsl
and
sbb
sub
xchg
mov
repnz
mov
fiaddl
or
mov
jno
addb
clc
loope
xor
hlt
loope
cmp
pop
hlt
lods
or
cld
add
pop
hlt
fiadds
and
cmpsb
jns
lret
push
jno
xor
pop
lahf
sbb
pop
cmpsl
jae
sarl
mov
add
fstpt
mov
add
pop
bound
dec
iret
push
negb
jge
xchg
icebp
sub
cmp
sbb
movsl
jns
or
sub
arpl
pop
pop
clc
cld
insl
pop
lea
fisubl
iret
lret
or
and
or
xchg
xchg
fwait
mov
push
addr16
sub
pop
aad
or
pop
aad
adc
repz
jg
or
leave
mov
sub
repnz
outsl
ror
dec
adc
adc
sbb
mov
out
andl
dec
das
rcll
popa
xchg
dec
ja
std
pop
pop
movsl
jo
call
iret
es
jl
cmp
jnp
es
add
pushf
in
out
jge
sarl
daa
shlb
push
mov
and
es
dec
add
iret
jbe
test
stos
adc
cmp
push
outsb
push
xchg
test
push
xor
push
mov
mov
outsl
testl
dec
lock
jl
in
sbb
mov
xchg
lods
jno
bound
lds
and
mov
pop
inc
jmp
dec
mov
xor
cmp
es
in
cmp
mov
add
movsb
dec
fidivrl
cmp
xor
es
insl
dec
movsl
sbb
mov
push
popf
shrb
adc
jl
sbbb
dec
dec
mov
adc
mov
popf
pop
lcall
pop
out
mov
push
dec
sub
inc
packuswb
cmpsb
xor
pop
mov
jl
aad
in
shll
xor
jbe
add
cmc
test
xchg
cmp
jg
mov
fsubrs
pop
sub
mov
adcb
sbbb
cwtl
ja
test
cmpsl
mov
dec
mov
xor
out
mov
insb
incb
les
xchg
inc
jb
dec
enter
in
and
xchg
jno
sub
push
insb
scas
xchg
sbb
add
add
sub
pushf
fwait
aam
dec
jbe
lea
mov
insb
mov
test
mov
or
jg
call
mov
rorb
arpl
inc
xchg
movsb
cltd
xor
hlt
in
out
jo
xor
jmp
dec
mov
adc
ljmp
and
pop
cmp
es
xorl
dec
pop
pop
inc
and
cmp
pop
inc
pop
inc
and
ret
push
je
incl
in
aam
lods
mov
es
mov
sti
xor
push
jbe
cld
int
add
jl
inc
int3
mov
xorl
pusha
imul
xor
or
xor
aam
mov
cmp
pop
les
loopne
sbb
cld
mov
icebp
pop
pop
push
lock
cwtl
sbbb
daa
addl
scas
in
shlb
sub
lahf
shrb
xor
sub
cld
xchg
orl
xchg
pop
mov
cmp
adc
iret
sbb
lahf
or
stos
inc
inc
lods
jle
bound
subb
cwtl
das
xor
mov
pop
in
jge
popa
lea
mov
mov
sub
add
xor
push
adc
leave
jnp
or
pop
outsl
add
xchg
scas
push
test
test
ds
sub
sub
adc
sbb
je
dec
in
or
jmp
call
xchg
popf
sahf
cmp
pushf
das
mov
aaa
xchg
popl
call
add
pop
cmpsb
mov
sbb
in
cmp
xchg
jp
lods
je
jmp
cmp
and
fsubl
mov
inc
or
jl
decb
mov
daa
in
push
push
cmpl
mov
xchg
movsl
stc
aaa
clc
nop
inc
cmp
pop
loop
cwtl
mov
jae
jno
call
push
lret
scas
sub
push
icebp
and
sbb
mov
mov
sbb
fcomip
test
loopne
movsb
stos
cmp
mov
lcall
ret
mov
xchg
xchg
and
test
hlt
int3
dec
mov
nop
ret
mov
mov
mov
adc
pop
incb
push
mov
fadds
sbb
and
aaa
inc
mov
iret
mov
inc
push
popa
pusha
daa
inc
lods
inc
and
add
xchg
adc
fists
sbb
dec
and
add
lock
divb
in
arpl
outsb
mov
dec
sbb
mov
lods
mov
xlat
add
xchg
arpl
inc
push
lret
popf
daa
push
repz
shlb
jmp
lock
cmp
sub
ljmp
mov
or
xchg
mov
out
and
or
ljmp
lods
cld
repz
rcrl
and
ljmp
call
imul
mov
mov
mov
ljmp
pusha
pushl
push
mov
cmp
push
outsb
inc
cmp
and
push
sbb
out
cmpsl
sub
mov
cs
hlt
xchg
xchg
and
fiaddl
clc
fwait
lcall
fs
mov
add
outsl
pop
fnsave
mov
ljmp
loopne
inc
ficompl
lret
insb
out
mov
sbb
mov
je
push
inc
jg
enter
fsubrp
mov
jmp
jge
loope
insb
xchg
jb
fcompl
stos
int3
lahf
mov
mov
and
int3
insl
lods
popa
dec
addr16
inc
push
and
dec
or
aam
je
pop
xlat
pop
xchg
int
out
mov
cmc
xor
xchg
push
loop
cmc
mov
movsb
sahf
mov
mov
fwait
sahf
mov
cs
dec
mov
cmp
test
and
xchg
ljmp
mov
fdivr
push
fistps
lcall
pop
pop
aam
xor
jecxz
sbb
cs
sub
adcb
aas
jnp
adc
nop
cmp
cmp
mov
sbb
add
pop
mov
inc
pop
sub
mov
daa
inc
mov
and
fwait
jno
push
test
out
mov
inc
outsb
or
mov
pop
sub
mov
mov
js
outsl
and
push
pop
enter
jp
mov
jo
aad
jae
xchg
mov
sub
ja
mov
mov
sub
pop
push
cld
cmp
sub
outsb
stos
jp
popf
jo
and
xchg
mov
mov
sbb
sub
int3
enter
jne
pop
ds
xor
sbb
cmpsl
es
loop
xor
les
jg
add
or
mov
xor
adc
push
xor
xchg
imul
lods
cmp
ds
das
xchg
leave
adc
add
mov
pushl
or
out
push
jo
jno
inc
pop
inc
fcomps
test
int
sbb
and
mov
fwait
or
and
and
add
je
outsl
cmp
cltd
pop
mov
test
inc
push
jo
push
std
bound
cld
js
out
jp
divl
inc
add
scas
data16
stc
mov
loopne
cwtl
add
mov
push
je
lret
push
push
lods
imul
push
and
and
xorb
xchg
ret
in
fildll
mov
jle
sub
fmull
fistl
push
pop
xchg
int3
test
imul
dec
sbb
or
gs
fstpl
movntps
cwtl
jb
aad
or
ret
xchg
popf
ret
cld
push
rorb
sbbb
cmp
in
repnz
sbb
add
and
add
sub
and
aad
test
dec
lret
xor
cmp
mov
and
push
outsb
les
xchg
push
scas
jbe
lret
ds
add
xchg
pushf
xchg
sub
cmp
and
movsb
rolb
xor
dec
push
bnd
sbb
popa
lock
out
inc
add
ffree
adc
inc
je
call
pop
mov
mov
adc
sbb
and
mov
aad
dec
pop
cmp
dec
mov
xchg
pop
call
in
in
faddp
cmpsb
push
loopne
test
arpl
int3
les
xchg
inc
enter
jecxz
mov
cli
jmp
rclb
mov
outsl
rclb
pushf
pop
fcomp
je
xchg
xchg
hlt
in
pop
andb
aam
and
repnz
lahf
fnstsw
shrl
cmp
pop
sub
jge
les
sub
insb
and
dec
jg
popf
push
dec
xchg
inc
adc
in
and
or
fwait
es
lret
enter
push
shll
movl
lahf
pop
xchg
pushf
rorb
loop
xor
mov
sbb
bound
lcall
fisttps
bound
fisubrl
stos
sub
and
pop
adc
imul
cwtl
sub
xchg
mov
push
jbe
call
sar
loopne
aas
mov
push
ffreep
lods
push
push
jo
rcrb
hlt
fadds
ret
push
adc
ds
dec
sbb
xchg
sbb
xor
push
imul
sub
pop
lahf
inc
stos
mov
testl
inc
dec
inc
outsl
and
out
mov
jp
fldl
or
dec
pop
pushf
sbb
cwtl
je
insl
adc
push
dec
outsb
leave
incl
jge
int3
sub
adc
jle
fisttps
add
xchg
pop
cmp
nop
pop
iret
pop
mov
pushf
mov
lret
out
outsl
pop
outsb
or
jge
xlat
push
lds
pushf
fisubrs
out
pop
aaa
adc
lret
mov
subb
jae
adc
push
cltd
adc
fsubrl
mov
aaa
cmpsb
jle
popa
lea
pop
mov
push
ljmp
xor
and
adc
data16
lahf
lods
pushf
mov
push
pop
repnz
lea
popf
jo
cmp
in
mov
or
aam
pop
dec
xor
or
xor
sbb
mov
mov
les
cwtl
ror
in
jge
pop
in
test
adc
push
jne
ds
pop
stos
out
mov
and
ja
mov
jmp
and
pop
stos
inc
ffree
das
js
aad
cmp
call
jle
mov
ja
xchg
sbb
out
and
insb
loopne
ficompl
mov
jnp
mov
xchg
into
xor
dec
mov
in
cmc
test
mov
pushf
push
lods
insb
pop
sti
pop
adc
iret
es
enter
cmova
cmc
and
addr16
test
mov
test
lret
ficompl
push
sbb
add
xor
mov
lahf
ljmp
pop
lret
add
popf
jge
scas
sti
insb
and
mov
inc
pop
jmp
stos
jmp
push
std
dec
adc
lcall
mov
aaa
fildll
xchg
pop
sub
sbb
jl
xchg
mov
andl
inc
sub
call
cld
inc
aad
push
sbb
mov
dec
add
repnz
sbb
aaa
sbb
loope
mov
inc
fnsave
leave
dec
imull
pop
inc
fldcw
out
mov
daa
push
inc
stc
orb
sub
jbe
sub
fsubs
shrb
lods
daa
push
fs
sbbb
in
movsb
xchg
add
jg
jl
rcll
dec
add
xor
sahf
dec
xor
xchg
push
or
fnstcw
xor
mov
jl
xchg
subb
cmp
jl
dec
icebp
jmp
or
notb
sti
lcall
xor
cld
in
push
pop
nop
out
loop
imul
mov
cmc
xor
or
cmp
imul
and
out
test
adc
adc
clc
js
sub
movsl
mov
repnz
sub
loopne
ret
cltd
dec
jmp
in
mov
dec
loop
movsb
and
xchg
pop
jl
jmp
push
inc
sbb
idivl
test
dec
xor
push
in
in
sbb
inc
adc
sbb
pop
or
xor
ret
fucom
sub
pop
dec
pslld
adc
mov
and
jg
mov
xor
xor
and
dec
xor
push
in
xor
push
jmp
xor
mov
mov
inc
fcompl
clc
adc
pop
add
stc
xchg
mov
push
push
fstpt
addr16
pop
loop
lods
mov
cld
xor
pextrw
insb
adcl
lahf
mov
lock
mov
das
out
jp
mov
mov
xor
mov
pop
movsl
fisttpl
push
push
jl
scas
mov
sbb
outsl
jl
pop
loop
rcrb
mov
scas
dec
pop
les
dec
pslld
dec
or
clc
ljmp
rcll
push
xchg
pop
test
push
testb
push
push
hlt
mov
into
lcall
jae,pn
fistpll
aas
sub
je
clc
ljmp
shl
fwait
add
push
hlt
and
mov
sub
pop
sbbl
pop
inc
jne
jo
jge
xchg
inc
pop
pop
lods
shl
dec
addb
add
jmp
mov
int3
jmp
jae
push
mov
daa
dec
bound
mov
dec
push
in
test
fs
lret
xchg
add
mov
sub
dec
es
insl
dec
xlat
test
mov
std
testl
or
cmpsb
pop
insb
aad
cld
mov
dec
push
out
fs
jle
jle
and
dec
pop
mov
leave
mov
ss
add
mov
push
pop
call
in
xchg
rcr
add
or
popf
enter
pop
test
cwtl
icebp
ret
push
push
cmp
out
xlat
pop
xor
test
cltd
mov
adc
and
jmp
faddl
cmpsl
leave
push
mov
in
jmp
adc
shlb
sbb
pop
andb
or
push
ficompl
jle
cmpsl
sub
fwait
lahf
in
jl
pop
test
pop
fs
and
jne
mov
sbb
clc
mov
sub
xor
js
pop
jno
push
lea
xchg
das
insb
call
cmp
enter
lods
push
or
mov
add
in
jge
xchg
imul
popa
sub
sub
fnsave
add
aas
cmc
xchg
xchg
jb
mov
pop
fdivr
mov
xor
into
pop
adc
push
in
popa
jns
ret
ds
sub
and
fwait
jno
push
lods
mov
cmpsb
pop
push
clc
xchg
inc
enter
in
sbb
cltd
and
std
xchg
mov
mov
shl
mov
lock
int
xchg
mov
lret
xor
lock
mov
in
push
dec
insb
aaa
adc
test
shrb
lods
mov
ljmp
sub
or
lock
aam
ret
or
xchg
cmpsl
cmp
cmp
xchg
pop
mov
jae
dec
cmp
gs
xchg
mov
mov
loope
mov
clc
sbb
inc
int
je
fisttps
add
test
in
cmp
xchg
xchg
add
and
add
add
fwait
pop
xlat
mov
pop
xlat
dec
inc
mov
adc
test
shrb
mov
fdivrp
xor
jmp
or
jo
lods
push
cltd
mov
jle
fs
jne
mov
mov
mov
cmpl
adc
fs
jl
ret
inc
jo
inc
mov
cmpsl
fwait
stos
lock
lahf
shlb
fcom
sub
sbb
fs
xor
jns
add
in
sbb
sarl
dec
mov
fisubrl
and
fistl
fwait
jp
sub
aas
xchg
mov
in
fs
and
fs
cld
je
sarl
aas
out
adc
sub
mov
fidivs
scas
dec
add
mov
jae
les
ljmp
adc
sub
in
xchg
and
cltd
lods
aas
xchg
mov
mov
fdivs
stos
jmp
sarl
xor
cli
xor
sub
mov
mov
sub
bound
mov
les
mov
das
mov
test
pop
addl
sub
cld
test
icebp
and
jmp
dec
popa
pop
ljmp
sbb
bound
ds
or
and
cmpsl
push
cmp
data16
mov
rorb
ss
jne
lret
or
jo
xchg
dec
rcrb
pop
and
mov
xor
inc
jmpw
std
and
fwait
jno
push
cmpsb
mov
cmpsb
mov
shlb
mov
shlb
lods
test
xchg
hlt
mov
jo
fisubrs
xchg
scas
insb
movsb
mov
add
xor
cmc
cmp
aad
js
scas
mov
mov
mov
ja
inc
adc
cli
bound
cmp
mov
jmp
mov
repnz
dec
cmpsl
call
mov
pop
stos
lret
adc
fcomps
cld
cmp
push
xor
mov
sub
call
jmp
pop
xchg
mov
daa
xchg
and
push
pop
fwait
push
fmuls
pop
in
lret
xor
xchg
push
daa
or
hlt
loop
xchg
lea
cmc
mov
decl
cmpsl
mov
ds
popa
dec
sub
pop
cmp
adc
push
cmp
xchg
or
adc
mov
add
test
mov
movsl
xor
pushaw
push
dec
fwait
nop
shrb
jne
push
out
mov
std
xor
jle
xor
push
jmp
xor
mov
mov
pushl
js
in
xlat
cmc
push
pusha
les
scas
pop
lods
subb
dec
jecxz
js
xor
and
pop
adc
aam
lock
sahf
xlat
pushf
inc
in
and
fs
push
inc
adc
cmp
xchg
ret
cmp
xchg
xchg
or
dec
pop
leave
iret
dec
jl
fdivl
jb
and
idivb
leave
sbb
sbb
xchg
fistpl
jl
add
mov
or
hlt
adc
shrb
fisttps
inc
aaa
xchg
test
lahf
sar
cmpb
sub
bnd
xor
dec
jo
cs
cmp
test
or
repnz
lods
cmp
adc
push
hlt
dec
fdivp
rcll
adc
xor
push
fdivs
fwait
cmp
cmp
jb
fistps
fnsave
js
adc
arpl
push
add
in
sbb
mov
push
stc
pop
or
mov
mov
mov
pusha
lret
rcrb
mov
mov
test
and
pop
enter
push
xchg
push
xor
loop
lods
mov
pop
jb
xlat
ss
mov
mov
dec
or
imul
dec
aaa
lret
lret
xor
adc
inc
faddl
inc
push
add
lods
arpl
insb
jmp
aam
pop
rdtsc
fwait
pop
cltd
adc
rcrb
rol
or
sub
vpsllw
or
and
adc
loop
sub
add
loop
push
insb
shr
cmc
pusha
add
lds
push
mov
rcrb
push
xorl
push
dec
mov
xchg
or
or
in
and
ss
arpl
aam
test
lret
aaa
jmp
inc
mov
pop
pop
ret
pop
imul
popa
adc
in
lret
push
add
sub
adc
push
aaa
jle
jmp
lods
cmpsl
push
xor
out
sub
cmp
sub
je
push
xor
xchg
push
jle
pop
dec
rorl
loopne
pop
jbe
shr
push
xchg
pop
stc
or
mov
hlt
sub
lahf
loopne
dec
andb
dec
mov
scas
adc
rclb
stos
shrb
lods
push
fwait
jno
push
push
mov
cmpsb
mov
jg
stos
rcrb
pop
cmp
fldenv
pushf
lods
add
mov
push
and
jno
pop
inc
call
test
test
nop
inc
divb
mov
cmpsb
mov
dec
mov
les
mov
lcall
xchg
jle
xchg
cwtl
mov
dec
jge
cmpsb
test
mov
jae
fnstcw
pop
inc
mov
add
into
fidivrs
push
sub
hlt
adc
lea
lret
adc
and
mov
ds
lea
xor
mov
call
das
mov
mov
xchg
mov
shl
out
enter
push
in
inc
and
sub
outsl
cli
ljmp
movsb
inc
xchg
rcll
push
cwtl
cmpb
lcall
sarl
cltd
adc
js
mov
sub
fucomip
adc
pop
cmp
mov
add
jp
in
pop
xchg
mov
sub
adc
pop
or
mov
push
test
cmpb
jle
cld
aas
xchg
test
pop
push
sub
mov
adc
cwtl
jmp
cwtl
add
sub
jno
pop
cmp
fs
xor
test
unpckhps
push
push
mov
and
cld
pop
xor
push
jae,pn
jno
sbb
jl
or
cld
repz
fidivrs
pop
clc
dec
or
icebp
gs
int
int3
ljmp
adc
push
mov
ja
ror
jp
push
outsb
jmp
mov
mov
scas
xchg
add
lahf
movsl
mov
xchg
jp
out
cmp
or
leave
dec
andl
mov
cmp
fldln2
add
stos
fs
jmp
add
pop
lea
ss
inc
cmp
inc
shll
cmp
scas
je
loope
dec
adc
dec
fistps
mov
adc
scas
je
adc
test
mov
gs
jl
adc
mov
inc
pushf
sub
and
stos
lock
adc
jnp
add
xor
out
mov
mov
iret
lock
xchg
shlb
lret
add
arpl
mov
dec
insl
fcomi
fs
cmp
cwtl
orb
push
push
jle
and
out
adc
mov
mov
ds
xor
xchg
cmp
js
mov
or
jno
mov
call
sbb
cld
stos
dec
and
inc
fimull
jge
sub
test
jge
imul
adc
mov
mov
int
jmp
sub
jae
out
test
jnp
pop
pop
inc
sbb
fdivrp
jb
data16
mov
inc
sbb
cmovs
mov
ds
or
push
jno
pushw
jge
cmpsl
arpl
dec
sub
xor
enter
into
lods
push
repz
cmp
pop
xchg
std
sbb
mov
repz
and
rcr
or
xchg
imul
and
xchg
sbb
lcall
dec
dec
repnz
cmp
xor
xchg
scas
insb
pop
mov
push
cmp
jge
cli
mov
arpl
mov
roll
inc
inc
out
lcall
inc
mov
jae
pop
lock
pop
icebp
ja
pop
bnd
sbb
jb
dec
out
adc
mov
mov
repz
inc
jle
cmp
jo
call
jl
call
js
call
fs
pusha
callw
insb
data16
add
adc
sub
pop
out
add
xor
lahf
inc
xor
in
dec
fldcw
dec
add
cwtl
dec
push
mov
es
je
mov
pop
ljmp
cmpsl
mov
add
cmp
out
int
cmp
pop
push
std
xorl
movsl
xchg
jae
ds
cltd
mov
or
push
xor
aam
sbb
imul
sub
push
fiaddl
xor
aad
add
cmpsb
sbb
adcl
sbb
rcrl
daa
cmp
jb
cwtl
mov
jge
mov
mov
pop
mov
hlt
mov
and
jmpw
jmp
and
ljmp
push
mov
xchg
jbe
adc
pop
xchg
push
outsl
mov
sbb
insl
rclb
pop
cmp
jmp
in
testb
pop
fs
shl
jp
inc
jae
test
adc
add
push
push
adc
pop
add
pop
jnp
outsb
dec
out
inc
daa
in
cmp
outsl
cmpsl
xchg
jg
cmpsb
jle
lea
daa
aaa
mov
or
jno
stos
mov
imul
jbe
stos
mov
jae
stos
mov
mov
pop
shlb
cmp
inc
rcrl
adc
imul
jecxz
lds
dec
sub
and
cmp
dec
stc
cld
test
cmpb
shll
cwtl
add
pop
mov
lret
lahf
sbb
les
sbb
mov
mov
mov
push
jg
inc
or
movsb
jo
shrl
cs
inc
xor
popf
pop
and
dec
sbb
sbb
inc
insb
jg
mov
cmp
jmp
xor
dec
ja
jle
iret
mov
cmp
xlat
or
mov
mov
add
adc
ret
dec
push
mov
outsl
sbb
sbb
jnp
xchg
or
push
enter
xor
jo
adc
inc
push
cmp
in
xchg
inc
js
inc
enter
dec
ljmp
popa
pop
jp
or
test
fisubrs
les
xchg
adc
inc
add
cmp
lock
in
cmp
popa
notb
rcrb
inc
sbb
es
cli
mov
adc
dec
scas
insb
sahf
adc
dec
shlb
xor
daa
jmp
sub
jns
or
mov
inc
test
aas
jle
shll
mov
inc
mov
rcrl
dec
cmp
mov
mov
mov
cltd
aas
cmp
add
in
inc
cmc
je
mov
lods
aam
xchg
test
js
mov
jge
cwtl
in
outsl
outsb
movsb
pop
call
into
xor
mov
imul
inc
xor
xchg
inc
sub
sbb
adc
mov
jo
loope
dec
les
mov
add
subl
mov
loope
scas
repnz
mov
mov
lahf
sti
mov
pushf
sbb
sub
push
cmp
sub
pop
test
or
stos
aas
out
add
sti
push
pop
and
push
out
inc
rolb
sbb
xor
mov
and
outsl
test
out
cmp
ja
xor
lret
in
in
addr16
xor
xor
jmp
test
jge
lahf
fdivr
mov
hlt
popf
nop
inc
pushf
gs
mov
xorl
scas
add
or
rorb
into
aaa
mul
movsl
mov
ret
rorl
sbb
sbb
adc
sbb
dec
mov
and
lret
into
add
xchg
in
pop
sbb
push
mov
aas
sub
shll
ja
jnp
or
dec
xchg
insb
lods
sub
mov
out
mov
jle
inc
fildl
sub
loopne
out
xor
les
shr
ror
aam
js
pop
adc
jbe
sbb
ret
jmp
cmp
jp
push
lcall
push
lcall
sbb
dec
jb
fcompl
shl
outsl
jl
sbb
pop
scas
bnd
arpl
jecxz
xor
mov
and
out
xlat
je
cs
xchg
xchg
rcr
stos
test
adcb
imul
push
and
je
aas
addb
push
aaa
xor
rol
xor
gs
sub
or
pusha
or
bound
and
pop
out
inc
pop
adc
inc
in
and
scas
rorl
call
lcall
int3
add
popfw
jo
das
adc
dec
decl
jnp
cmp
pusha
test
xchg
insb
and
rorb
lret
fistps
jmp
mull
addr16
jmp
test
jl
clc
mov
incb
rcl
aam
push
xor
movsb
sarl
sbb
shr
cmp
jp
adc
orb
push
xorb
adc
push
lds
mov
in
scas
enter
arpl
aas
lcall
jnp
lcall
test
outsl
shrb
mov
daa
in
and
ja
rorl
dec
jmp
pop
mov
and
loop
jmp
test
sub
mov
xchg
adc
fcom
lret
pop
lods
shrl
cld
insl
outsb
inc
xlat
mov
cmp
loop
mov
movsb
sub
stos
rclb
aam
xchg
pop
ja
jae
mulb
xchg
hlt
js
mov
pop
push
xchg
adc
test
inc
loop
outsl
dec
mov
xor
or
ret
mov
push
addr16
adcb
and
add
inc
pop
ljmp
add
test
cltd
jg
daa
adc
sarl
mov
cwtl
loop
inc
xor
loopne
fwait
jmp
inc
jl
sarb
pop
pop
out
insl
movsb
push
cwtl
rcl
mov
cmp
js
in
test
loope
inc
arpl
xchg
fadd
and
ret
push
lods
lret
das
cli
ljmp
sub
movsb
popf
sbb
mov
and
jbe
add
xchg
cmp
push
pop
pop
mov
cmp
pop
or
bound
lret
pop
add
mov
shlb
inc
or
dec
lods
dec
lcall
shl
call
in
fsts
shl
repnz
sub
jb
dec
cmp
dec
fs
jo
shlb
push
clc
adc
jle
lods
movsl
or
sahf
fadd
push
or
xor
into
cmp
and
dec
mov
sbb
outsl
and
test
stos
or
inc
fsubrp
in
push
addr16
mov
push
scas
bsf
push
outsb
arpl
xchg
int3
add
nop
in
pusha
incb
dec
out
inc
hlt
jno
inc
fsubrl
xchg
gs
or
push
out
test
inc
lods
add
call
lods
fstps
mov
inc
jp
icebp
pop
ret
test
mov
leave
jae
inc
lds
dec
sbb
or
je
sub
mov
mov
js
dec
mov
fiaddl
sbb
cwtl
xchg
in
aas
shrb
push
xor
xchg
add
lods
push
cmp
test
and
cltd
orb
mov
pop
bound
sti
loopne
je
pop
xchg
rclb
pop
mov
movsl
int
sarb
dec
dec
dec
mov
int3
and
jbe
iret
xlat
repz
push
aas
bound
xor
pop
dec
inc
sub
fs
xchg
push
lcall
cmp
loop
mov
mov
lahf
cmc
sahf
leave
mov
cmp
clc
lods
pop
cwtl
or
dec
mov
out
pop
in
lret
imul
mov
loopne,pt
imul
jb
aad
movsl
xchg
mov
shl
cmpsl
lock
popf
and
cli
xchg
call
add
mov
loop
in
shrb
test
xchg
push
nop
mov
pop
orb
add
icebp
mov
xor
cltd
push
push
mov
jle
or
jo
push
mov
jnp
mov
enter
in
fsubr
in
xchg
cmpsb
ljmp
mov
fsubs
lret
and
mov
add
jns
xor
frstor
loope
movsb
cmp
mov
push
hlt
test
int3
push
imul
dec
lret
lea
faddp
ds
std
mov
into
dec
ss
inc
cmp
pop
ds
mov
push
cmpsb
jae
insb
cltd
lret
jg
pop
dec
pop
push
jbe
cmp
enter
decb
test
scas
dec
cltd
xor
xorb
sub
jo
ds
push
sbb
jge
ds
stos
scas
pop
push
dec
sbb
test
cs
push
aas
loope
test
sub
les
data16
aas
leave
and
mov
popf
xor
push
cs
shrb
lret
sbb
and
cmp
jmp
sbb
aas
cmp
dec
addr16
inc
pop
popa
add
inc
lahf
ja
pop
or
xor
sbb
shlb
or
out
sub
mov
into
das
mov
xchg
mov
mov
jmp
repz
icebp
data16
sub
cmp
inc
adc
jmp
xchg
dec
movsb
enter
jg
std
pop
test
call
push
fisttps
das
std
add
xor
leave
jbe
aad
in
xor
cld
sub
cltd
jns
xor
jo
mov
xor
out
out
sbb
push
push
lods
das
add
lcall
mov
mov
enter
mov
paddd
out
mov
rol
xlat
jo
insb
test
xchg
in
orb
mov
mov
jb
jae
pop
lods
mov
adc
xor
xor
push
add
push
dec
or
pushf
jle
mov
jp
add
push
jo
sub
int3
and
mov
xchg
xchg
lret
clc
cmc
scas
xor
adc
sub
dec
por
xor
jmp
aam
cmp
add
push
adc
dec
or
mov
adcl
jnp
pop
lock
icebp
stc
cmp
mov
sub
lea
mov
out
outsb
mov
mov
xchg
cs
or
mov
frstor
adc
les
jo
icebp
popf
ud1
in
movsl
ret
adc
push
arpl
sub
hlt
pop
push
shl
adc
or
jmp
lret
and
mov
les
sarl
xchg
and
movsl
shlb
movsl
jle
xor
f2xm1
roll
and
sub
inc
lods
hlt
std
and
fwait
jno
fs
int
cmp
xor
std
mov
and
mov
xchg
out
mov
sbb
add
xor
lods
or
je
pusha
sbb
js
iret
ja
and
mov
push
dec
push
add
fsubrs
push
je
dec
mov
into
ja
xchg
rcr
cltd
dec
rorl
scas
fldenv
pop
mov
mov
add
iret
mov
enter
pop
ss
sub
fadds
xchg
xor
lea
mov
stos
add
mov
data16
mov
fcmovnu
loopne
int
int
sbb
sti
ds
push
xchg
mov
inc
sub
adcb
mov
test
out
pop
push
adc
loop
sub
xchg
mov
fisubl
push
or
stos
mov
cld
cmp
in
lock
in
je
xor
sbb
lock
fisubl
cmp
popf
mov
xchg
dec
or
loope
in
and
push
dec
rolb
sti
aas
std
or
gs
cltd
pop
xor
scas
xorb
std
add
jecxz
xor
or
in
cmpsb
cmp
xlat
jp
mov
lcall
xchg
fcmovne
adc
cwtl
push
mov
push
sub
mov
loop
mov
aaa
loop
mov
pop
loop
cmpsb
mov
jge
or
dec
in
sbb
fs
xchg
mov
inc
jecxz
imul
and
inc
adc
and
adc
mov
mov
sub
xor
or
enter
shr
mov
sub
movsl
fidivrs
cmp
mov
sub
jmp
inc
add
cmp
inc
sub
addl
add
in
cli
mov
dec
mov
mov
cmp
movsl
push
fisubl
jae
adc
pop
dec
pminsw
aaa
push
sub
popf
je
add
pop
add
jge
mov
mov
xchg
inc
pop
pop
in
in
pushf
xorb
test
orl
mov
cwtl
sub
xchg
adc
jnp
push
in
nop
jns
cltd
jecxz
sbb
mov
pop
rcrb
out
scas
mov
sbb
and
inc
out
pop
mov
addr16
sbb
rcrb
cli
cld
mov
lock
mov
sbb
testb
lods
sub
lods
int3
mov
lods
jns
or
cld
pop
dec
js
push
stc
loope
lods
pop
rorb
test
dec
mov
cmp
in
addb
adc
sti
sub
fsubrl
popa
xor
xor
adc
mov
daa
ss
lret
or
xchg
sub
outsl
sbb
ret
inc
push
xlat
cmc
mov
sub
jbe
xchg
and
push
imull
or
xchg
push
sti
push
pop
rcll
mov
cld
aas
add
push
and
std
sub
inc
int3
js
in
push
or
mov
fsts
std
sub
rorl
sub
xor
xchg
dec
adcl
or
in
pop
or
repz
sahf
orb
loope
push
ds
std
xor
lret
and
or
pop
icebp
rcl
xor
and
mov
stc
pop
mov
mov
mov
pop
jl
pop
inc
jl
ror
fsts
stos
dec
je
js
adcl
mov
int
cmp
xor
ficoms
and
inc
or
jo
pop
out
mov
das
mov
xchg
ljmp
jg
pop
pop
push
loop
sbb
mov
lea
push
popf
or
jl
push
test
mov
sbb
push
sbb
or
pushf
mov
rorb
and
dec
jmp
and
push
and
outsl
push
mov
mov
xor
adc
rcr
shr
lock
jl
jno
fs
nop
pop
in
mov
xchg
mov
cmp
push
push
int3
cmpsl
movl
dec
shlb
rorb
aam
or
push
shlb
dec
push
mov
and
cmp
stos
cltd
sub
cmpl
or
bound
xchg
loope
xchg
add
sbb
aam
inc
lock
push
jno
push
mov
in
mov
push
lea
ljmp
call
mov
pop
int3
dec
push
inc
cwtl
mov
sub
xor
sbb
push
xor
sbb
and
ljmp
cltd
push
push
sbb
add
mov
inc
faddl
adc
clc
pop
adcb
es
or
popa
pop
jmp
mov
test
in
inc
push
xlat
fcoml
pop
xchg
aad
out
aad
fnstsw
das
mov
dec
xchg
jo
call
sahf
push
insb
xlat
fistpll
push
dec
lock
and
and
iret
sub
pop
rcrb
mov
xchg
cli
jnp
jo
int3
inc
add
loope
popa
xchg
xchg
push
pop
aad
pop
pop
mov
mov
hlt
xorb
and
sbb
xchg
or
mov
jb
ja
mov
xchg
mov
jl
jb
and
imul
out
push
sbb
inc
sti
and
movsb
in
dec
sub
out
mov
outsb
aaa
test
xor
or
call
adc
mov
fnstsw
sbbl
call
sbb
cmp
and
aaa
pusha
mov
push
cmp
jmp
cmp
cmp
inc
jp
enter
pop
mov
int
mov
ja
insl
mov
pop
cmp
in
int
or
cli
sub
nop
repnz
inc
call
shlb
mov
xchg
int3
imul
dec
cmp
iret
test
cmp
xchg
push
xchg
pop
mov
aas
leave
jo
mov
dec
hlt
lret
loopne
in
popf
cld
dec
mov
testb
mov
daa
xor
push
sbb
test
hlt
test
jg
mov
mov
ds
sbb
test
aas
fildll
push
mov
cmp
stos
shlb
and
dec
xchg
es
sub
mov
sub
xchg
jp
and
fwait
std
and
hlt
sbb
push
clc
sbb
and
mov
lds
pushl
sbbb
mov
sbb
subb
mov
pop
sub
dec
push
cld
or
xor
ja
xchg
inc
mov
dec
fs
out
ffreep
adc
pop
dec
and
xchg
loope
es
jno
outsl
pop
insl
xchg
sbb
data16
aad
push
pop
sub
stc
jno
ret
xor
push
dec
mov
mov
dec
push
inc
in
xor
lods
dec
in
aaa
dec
movsl
sbb
pop
or
dec
insl
imul
cmp
mov
test
push
aam
test
loop
mov
out
ret
add
add
daa
stos
inc
push
shrl
lret
inc
mov
jne
mov
call
pusha
shlb
repnz
fwait
arpl
xor
push
fdivl
mov
outsl
add
into
xor
pusha
loopne
lods
pop
xor
mov
adc
in
stos
mov
cmp
je
arpl
into
dec
cmp
or
movsl
pop
push
out
add
push
movsb
idiv
adc
adc
pusha
ret
into
jns
pushf
repnz
xchg
mov
jb
clc
and
jnp
jbe
sbb
ret
adc
test
les
xchg
adc
fisttpl
sub
inc
imul
insl
loopne
cmp
inc
imul
mov
rolb
mov
jo
es
mov
js
lret
je
shll
outsb
mov
adc
scas
lret
ret
mov
lahf
aad
adcl
fidivrs
or
loope
pop
loope
push
cmp
test
xor
fs
lods
aam
pop
or
xchg
aas
adc
jo
or
xchg
fimuls
rcl
fsub
mov
mov
cmp
out
sub
add
clc
push
std
mov
jmp
lds
jmp
or
cmp
repz
inc
mov
sahf
ja
mov
scas
cwtl
sbb
aam
ficoml
test
pop
push
fstps
mov
into
mov
out
imul
cmp
es
inc
call
xor
repnz
cmp
test
jmp
aam
xlat
mov
repnz
xchg
cmc
scas
sub
mov
jns
in
xchg
dec
add
xor
push
jl
les
orb
xchg
and
inc
sar
mov
cmp
mov
mov
dec
inc
call
mov
loop
aam
mov
dec
xchg
aad
nop
push
push
push
lock
fbstp
add
stc
addb
imul
xchg
mov
xchg
out
dec
out
lea
lret
pop
cmp
inc
jae
adcb
subl
mov
les
pop
add
jmp
inc
out
arpl
xchg
sub
fbstp
push
xchg
aam
xor
sub
movb
mov
adc
push
flds
test
notl
mov
jae
ja
sub
rcr
outsl
insb
lds
jns
xchg
mov
aam
mov
dec
fs
push
sar
sub
lret
cmp
dec
push
cmp
and
stos
adc
cwtl
les
popa
mov
les
xlat
push
pop
cmp
outsb
add
xchg
push
inc
stos
xchg
inc
mov
pop
test
push
xor
iret
xor
enter
mov
sbb
into
sub
clc
mov
cwtl
push
ret
les
pop
xchg
fidivrl
lods
shrb
mov
cmp
cmp
ret
mov
and
sub
xchg
hlt
push
sbb
pop
mov
aaa
rorl
mov
or
jg
nopl
xchg
push
into
jg
sub
or
dec
xchg
mov
dec
stos
enter
lcall
cmp
in
jo
push
and
fldcw
in
pop
mov
repz
jg
mov
mov
jno
or
int
jae
loop
and
adc
ja
sbb
sub
inc
lock
or
or
scas
int3
adc
cs
sbb
loope
push
xor
incl
shlb
push
jge
mov
jge
add
iret
dec
dec
sub
adcl
lret
imul
aas
push
out
push
cmp
outsl
push
hlt
jmp
bound
xor
pop
mov
jle
cmp
push
cmp
xor
mov
lods
mov
xlat
sbb
out
mov
lea
in
shll
ret
adcl
mov
sub
mov
inc
insb
mov
cmp
jecxz
out
sarb
fnstcw
jnp
nop
cmc
mov
inc
xchg
dec
je
pushf
out
je
and
dec
repz
inc
xchg
and
cmp
mov
sub
lds
cs
repz
cmpsl
pop
dec
push
and
imul
in
xchg
inc
jecxz
nop
shrl
stos
ret
daa
add
jns
inc
dec
xchg
in
test
loope
outsl
or
pop
pop
rcll
jbe
mov
cmp
jbe
jb
mov
enter
and
mov
test
shl
movsb
jl
sti
adc
lea
cltd
mov
mov
sub
js
out
pop
pop
iret
cwtl
cmp
adcl
pop
movsb
stos
aaa
std
jecxz,pt
js
sub
push
mov
sub
push
enter
inc
in
push
icebp
xchg
int3
mov
xorl
ljmp
out
push
icebp
decl
mov
dec
outsl
dec
mov
fwait
stos
fadd
mov
sahf
and
jb
mov
xchg
test
mov
ljmp
nop
xorb
push
jo
add
or
add
dec
fwait
subb
jne
adc
aad
pop
out
adc
jge
outsb
call
cmp
iret
dec
inc
add
mov
or
pushf
mov
icebp
mov
or
pop
sahf
jnp
push
popa
cld
ljmp
inc
fnsave
scas
lea
mov
mov
cmp
add
ja
popa
and
cmp
mov
add
push
cmp
mov
imul
cwtl
cs
lock
pop
aam
lahf
jmp
fsubrl
sub
xor
pop
sbb
dec
ds
imul
sbb
inc
decl
fs
ficomps
movl
rcr
mov
test
or
add
xor
pop
push
mov
jle
icebp
sbb
pushf
mov
jmp
lret
call
jmp
cmp
cltd
fscale
xor
inc
cmp
mov
mov
xchg
mov
or
cltd
je
into
xor
add
push
xchg
sarl
cltd
pop
mov
andb
cmp
imul
out
outsb
mov
dec
adc
push
jnp
sub
push
xor
fdivrs
loopne
pop
sbb
stos
aaa
rcll
or
cli
jecxz
add
sarb
out
jnp
in
or
shr
jmp
or
test
ficoms
gs
add
fcomps
dec
add
jb
dec
push
and
fsub
mov
ds
jmp
out
pop
jmp
jmp
ljmp
loope
aaa
sbb
sbb
xor
push
orb
and
sub
orb
mov
in
gs
pop
push
gs
sub
ret
aam
cmp
in
xor
mov
push
xchg
push
pop
cmp
lea
in
gs
adc
aam
aad
dec
call
out
jo
loope
cmp
xor
mov
xor
dec
push
cwtl
inc
aad
repnz
dec
xor
jnp
jmp
cs
ret
pop
xchg
cmp
lods
mov
add
sarl
jno
sbb
add
mov
outsl
pop
mov
mov
lods
fmuls
ja
fstpt
mov
xchg
mov
in
scas
sbb
popa
js
loop
fnstsw
ljmp
or
cmc
xchg
js
enter
inc
insb
sbb
mov
fcoml
jg
movsl
xchg
push
mov
xor
scas
mov
nop
jle
add
imul
loop
pop
int
out
lahf
add
js
out
das
daa
sub
enter
movsl
loope
insb
mov
adc
add
jl
jge
mov
aaa
jne
in
test
xor
inc
repz
std
xor
adc
pop
daa
scas
cmc
ret
xchg
loopne
popa
inc
pushf
cmp
or
shl
outsb
and
adc
cwtl
rcll
xchg
pop
cs
sub
push
push
push
xor
mov
mov
sarb
fisttps
mov
hlt
jo
mov
pop
ds
fcmovb
xchg
aas
insb
es
or
dec
out
fdivrs
adc
sbb
mov
bound
sub
or
notb
mov
bnd
repz
cltd
mov
lea
fs
xchg
divl
push
movsl
xor
inc
lods
push
mov
pop
xor
jle
daa
dec
mov
sub
scas
movsb
xor
jl
lock
sub
add
or
mov
popa
pop
pop
sti
push
xor
inc
xchg
pop
test
test
and
das
adc
inc
add
ret
xchg
mov
mov
add
mov
add
pop
push
jmp
ss
add
gs
lret
add
fs
pop
shrb
bound
push
inc
andb
test
mov
mov
gs
ja
out
or
mov
mov
out
xchg
add
jb
pop
pop
fldt
loope
imul
xchg
incb
gs
jns
jb
in
gs
notl
mov
push
lea
hlt
sbb
mov
es
loopne
aam
cmp
push
cltd
add
xor
xor
lea
jl
aam
cmp
jmp
loopne
loopne
push
pop
fwait
push
jns
in
jno
add
flds
or
fdivrl
out
faddp
aas
jmp
jno
mov
loop
adc
xchg
sbb
cmp
xlat
mov
daa
fwait
ja
add
push
sbb
ja
jmp
fmull
testl
cmpsb
in
cmp
xor
mov
cmpl
dec
cmp
dec
inc
cmp
xchg
inc
add
jmp
dec
test
pop
xor
ret
dec
pop
cmp
sbb
and
or
or
loopne
xor
gs
cmp
jmp
loope
je
lods
es
cmp
lea
cmp
inc
lea
cmp
sub
add
jns
pop
and
adc
pop
sbb
and
loope
jne
loope
cwtl
popa
mov
inc
aas
shll
ret
mov
xor
inc
testl
mov
aad
push
add
adc
sub
aaa
cltd
xor
ljmp
std
push
sub
jb
or
mov
test
je
int3
test
mov
xor
insb
and
pop
pop
mov
jecxz
pop
ds
aaa
cmp
cmp
cmp
and
aaa
cmp
aas
xor
jmp
cmp
push
pop
sub
lahf
xor
imul
add
mov
jae
addr16
xor
mov
dec
loope
push
inc
fwait
push
mov
sbb
addb
test
add
gs
jb
loope
xor
test
lea
outsb
in
mov
cwtl
and
sub
jb
rcrl
push
push
jmp
orl
pop
jno
test
notl
orl
test
jmp
bound
aad
or
out
xor
xchg
mov
test
or
jmp
mov
xchg
gs
daa
inc
testl
mov
out
cmpsl
add
add
or
scas
imul
xchg
repnz
jo
add
cmp
push
mov
daa
add
push
jmp
dec
adc
dec
ret
out
aam
cmp
aas
cmpsl
push
add
or
adc
cmp
addl
pop
mov
in
gs
sbb
aam
aad
mov
xor
dec
or
xchg
jmp
cmpsl
jno
loop
lods
ds
out
int3
push
or
mov
inc
dec
loope
aaa
fs
out
clc
cmp
ret
cmpsb
ja
loop
jnp
xor
in
gs
xor
addb
xor
rep
and
mov
pop
adc
cmp
insl
cmpsl
adcb
cmp
int3
je
daa
sub
or
dec
mov
inc
cld
or
push
mov
aas
xchg
push
sub
inc
mov
sub
pop
pop
sub
call
bswap
mov
mov
cmc
es
lea
repnz
jb
loop
inc
mov
sub
mov
xor
pushf
cmc
lahf
xchg
adc
and
push
and
rcrl
dec
test
fwait
cwtl
gs
js
loop
mov
dec
out
or
add
fstl
xchg
or
or
pop
mov
mov
arpl
mov
jbe
cmpsb
lods
dec
mov
or
stos
push
xor
push
inc
aaa
pop
push
ja
dec
insl
outsl
mov
cmp
imul
jns
xchg
aad
inc
pop
mov
popf
xchg
mov
outsb
xor
iret
inc
out
xchg
std
sub
mov
out
xchg
mov
sbb
daa
adc
loop
in
push
adc
mov
inc
and
bnd
jecxz
je
scas
push
xlat
lds
adc
mov
cmp
sub
add
out
ss
cmpsl
jmp
test
pop
mov
and
or
stc
aas
outsb
aaa
xlat
outsl
jl
adc
mov
movsb
lods
out
out
out
out
movsl
decl
xchg
lods
mov
lods
rcll
outsb
out
push
int
in
dec
arpl
xor
or
in
je
repnz
and
aad
aad
and
inc
jle
xchg
push
sub
mov
int
into
pop
scas
and
cmp
sub
xchg
cmpl
mov
cmpb
or
mov
std
inc
in
ja
mov
pop
test
jecxz
std
call
arpl
fnstcw
mov
mov
sti
mov
imul
jb,pt
adc
lret
cltd
cltd
cwtl
push
mov
mov
or
jno
jno
insb
adc
and
push
dec
push
incb
enter
sub
dec
aad
add
dec
mov
addr16
sub
sahf
insl
std
pop
xlat
lcall
mov
call
es
push
inc
inc
mov
adc
or
inc
sar
sbb
arpl
adc
in
mov
clc
and
out
pop
dec
and
pop
fnstenv
push
popf
jae
push
addl
scas
in
inc
int3
shll
and
cmp
sub
cmp
jns
xor
rcrl
pusha
mov
xlat
xchg
or
cmpsl
sbb
mov
cmpsb
mov
xchg
enter
xchg
inc
and
adc
aaa
imul
add
xor
adc
int3
int3
or
cmp
call
sarl
jl
add
mov
testb
enter
xor
xorl
xchg
sarl
pop
xor
xchg
push
test
out
or
xchg
sub
fisubl
adc
lods
pop
xlat
add
mov
in
cmp
cltd
daa
daa
loope
mov
jbe
jecxz
out
xchg
xor
in
sub
out
mov
push
enter
stc
xchg
xor
mov
cs
fisubrs
aas
xchg
lcall
out
cmp
or
inc
test
cmp
xor
call
sub
cmp
xor
in
sahf
pusha
ds
pusha
push
aaa
xchg
loope
push
mov
fisttpl
sbb
lods
ds
jnp
pop
enter
cmpsl
fsub
or
sub
cmpsb
sub
mov
add
sub
pop
sbbb
stos
sub
inc
add
dec
das
inc
inc
dec
jl
out
sub
xchg
or
sub
mov
daa
mov
ss
imul
jl
dec
push
std
shll
and
push
arpl
rep
jno
das
fadd
dec
cmc
mov
leave
jl
cmp
inc
int3
addr16
movsb
in
xor
es
jg
pop
pop
add
movsbl
mov
mov
cld
aam
call
stos
push
sub
push
inc
nop
imul
cwtl
add
test
hlt
outsb
jmp
test
pop
cwtl
mov
stc
pop
ss
adc
inc
movsl
inc
negb
add
call
dec
xor
and
xor
lods
ja
test
leave
movsb
ja
jb
test
test
movsl
pop
fildll
in
xchg
adc
enter
xor
adc
into
sub
cmpsb
cmp
cs
adc
xor
push
int3
repnz
mov
sub
mov
mov
xchg
lcall
ljmp
test
mov
neg
lcall
sub
and
cltd
roll
pop
or
out
push
mov
mov
and
pushf
sub
push
sub
cwtl
adc
enter
inc
mov
andl
xor
or
jnp
mov
push
loopne
es
lea
jmp
cs
cs
out
adc
aad
pop
sarb
sbb
imul
adc
or
sbb
cmp
repnz
xlat
sub
clc
ds
push
mov
cwtl
pushf
mov
cmp
mov
cli
pop
push
xlat
cmp
in
int3
xchg
inc
mov
cld
cmp
stc
pop
fcompl
test
loopne
movsl
dec
int3
sbb
push
inc
xchg
add
fstpt
movsl
add
mov
xchg
xchg
in
inc
mov
xchg
leave
inc
push
mov
je
pop
ret
xor
or
or
sbb
xchg
dec
sarb
clc
add
out
and
mov
sti
popa
repnz
rcrb
xor
add
dec
ljmp
push
enter
mov
cmp
xor
mov
add
inc
xor
xchg
mov
inc
lds
jmp
mov
pop
sbb
nop
xor
mov
jo
mov
add
cmp
mov
xchg
mov
or
jecxz
cmp
adc
mov
xor
outsl
or
aaa
mov
sbb
pop
cmp
dec
mov
aaa
inc
aaa
xor
xchg
sarl
mov
or
or
incb
adc
push
jle
push
aad
loopne
push
movb
lock
pushf
rcll
fbld
add
sahf
mov
lea
scas
cmp
les
push
pop
iret
loop
push
fistpll
push
in
incb
jg
ss
and
in
loop
movsl
lret
aas
mov
sbb
filds
or
push
xchg
adc
dec
cmp
mov
mov
pop
lcall
sub
mov
inc
push
xchg
bound
loope
xor
mov
sahf
pop
loope
movsl
xchg
inc
xor
fs
int3
cmpl
ret
mov
cwtl
push
fs
hlt
fstpt
sub
xchg
insl
add
imulb
lahf
inc
and
push
ret
in
xor
scas
fsts
fwait
mov
out
cltd
mov
fwait
push
pop
add
aad
ja
jg
in
or
loopne
pop
inc
push
test
lea
push
xchg
cmp
xor
bound
ds
push
inc
dec
test
pushf
leave
adc
mul
imul
popf
or
mov
pusha
add
sbbb
add
adcl
dec
mov
inc
xchg
mov
mov
adc
outsl
cmpsl
subl
mov
lods
fdivl
push
imul
popf
dec
xor
xchg
push
decb
mov
lock
adc
cmp
mov
sahf
hlt
fmuls
in
mov
adc
testl
das
mov
shrl
jmp
inc
fmull
repnz
stos
loope
cmpsb
inc
sub
inc
int
in
icebp
jb
js
stos
les
push
int3
jns
insl
or
test
cmpsb
shrl
jle
sub
repnz
and
mov
inc
dec
push
pop
xchg
mov
arpl
fucomi
pop
ror
pop
fdivl
dec
hlt
jbe
mov
pop
in
mov
inc
gs
movnti
sbb
mov
fadds
cld
xor
xorl
fs
clc
push
int
cwtl
je
pop
jbe
sarb
inc
push
dec
dec
adc
pop
push
cmpb
roll
mov
sarl
lods
add
xchg
sbb
shrl
repnz
lods
dec
xchg
ds
in
dec
lahf
sbb
test
pop
push
das
bnd
cmp
xchg
jl
xor
fsubs
mov
lcall
pop
mov
mov
loope
cld
push
in
test
lret
cmpsb
cmpl
aad
xor
xor
cmp
mov
icebp
pop
dec
xor
push
dec
dec
xchg
push
popa
push
insb
ret
push
aam
int3
shll
jbe
repnz
inc
int3
sub
sub
in
jecxz
adc
cmp
inc
mov
lds
cmpsl
scas
aas
add
lods
movsb
push
fdivl
leave
and
int3
test
jne
ds
jl
jae
xchg
rcl
xchg
fbstp
mov
repz
nop
aam
rclb
push
int3
pop
mov
test
sbb
xor
cmp
cmp
xor
mov
mov
rcrb
push
leave
icebp
cmpsb
ror
mov
push
subb
mov
jae
aas
push
xor
fisubs
xlat
js
cltd
inc
sub
dec
xchg
outsb
mov
call
shr
dec
insb
es
jmp
jne
inc
fcmovnu
jno
in
rcl
into
jmp
int3
arpl
and
in
es
fcomps
mov
insb
pop
loop
dec
jmp
mov
shll
mov
or
sub
xchg
push
inc
pop
mov
add
or
push
add
push
imul
sbb
jge
or
cmp
mov
dec
and
in
aam
stos
jnp
cmp
adc
cmc
mov
push
push
push
inc
or
pop
ficoms
cltd
jle
stc
out
in
lcall
subb
lret
ds
mov
sub
lcall
in
pusha
movsb
clc
xchg
push
adc
inc
repnz
dec
jnp
pop
xchg
jns
out
jae
push
cmp
lcall
push
test
adc
adc
in
xchg
scas
add
dec
pop
enter
jb
ret
push
gs
pop
jl
sub
rcr
cmp
mov
sbb
push
cmp
pushf
xor
jp
cmp
pushf
push
popa
push
dec
sbb
jno
flds
test
pop
ja
xchg
xlat
xor
push
xor
pop
xchg
add
push
push
iret
add
jns
stos
xor
pop
and
aas
insb
and
scas
sarb
rcrb
enter
sti
out
jmp
jae
aad
dec
and
lahf
fdivl
call
pop
insl
std
sbb
mov
xlat
sbb
lods
push
loop
lcall
mov
or
stos
sub
daa
pop
xchg
sar
fs
in
xchg
sub
xchg
test
cltd
push
jmp
fwait
loop
inc
mov
xchg
jbe
push
inc
movsb
adc
mov
inc
out
es
push
jl
adc
into
fdivrp
pop
aam
rolb
mov
xorb
push
gs
mov
loopne
in
ljmp
es
and
jmp
cs
data16
or
in
jae
ss
in
push
pushf
add
push
or
mov
lods
iret
sbb
xlat
sbb
sbb
and
cmpsl
mov
pop
push
sub
daa
push
and
push
mov
xor
sub
cmp
test
or
mov
int3
ret
or
inc
mov
or
xchg
dec
pop
cmp
cwtl
add
dec
aas
xchg
aaa
cmp
mov
pop
cmpsl
push
das
xchg
mov
sti
sub
ljmp
lods
push
cwtl
jo
pop
negl
mov
push
mov
and
gs
add
cmp
popf
daa
inc
jnp
sbb
cld
pop
cltd
xchg
jnp
dec
mov
adc
outsl
add
cli
fnstsw
or
lret
xor
adc
in
mov
hlt
aas
push
lret
or
and
out
lock
sbb
repz
andl
pusha
cs
pop
sbb
lret
roll
pop
add
xchg
imul
cmp
daa
xchg
jecxz
pop
sub
out
inc
push
adcl
lods
sbb
mov
iret
lret
cmpsl
test
inc
jnp
mov
pop
jne
in
dec
xchg
dec
aam
mov
repnz
in
mov
adc
dec
add
mov
int3
and
ror
inc
push
outsb
cmpsl
xchg
hlt
sarb
mov
inc
nop
pop
leave
inc
cmp
in
lcall
and
enter
xchg
mov
ss
data16
dec
clc
ret
xchg
mov
xchg
xor
add
mov
cmp
sbb
subl
pop
xchg
mov
mov
aaa
add
out
pop
xchg
roll
orl
inc
pop
testl
adc
push
fmuls
sub
cmp
sub
xor
sub
mov
push
subl
repz
repz
sahf
in
adc
push
es
enter
mov
push
ret
in
aas
xorl
xor
cs
pop
fdivrl
dec
fcoml
mov
aas
dec
js
and
in
aad
sti
jl
sub
inc
aas
jb
xchg
xor
iret
out
jecxz
xor
and
sub
stc
sti
jno
lcall
or
cmp
lds
and
test
jg
push
mov
push
mov
sbb
mov
dec
mull
xor
push
sbb
jp
mov
and
frstor
ret
or
out
out
pop
add
sbb
imul
dec
xchg
fld
xchg
mov
lock
dec
inc
in
and
cmp
imul
mov
add
jmp
lock
cli
iret
dec
pop
mov
pop
movsl
add
sub
adc
xor
pop
cltd
lret
mov
push
adc
add
cs
fdivrp
jnp
inc
inc
cmp
aad
cmpsb
xchg
cmpsl
push
out
and
scas
loop
in
inc
sbb
cmp
loopne
xchg
rclb
popa
cwtl
shlb
fwait
xor
fwait
test
dec
hlt
aas
push
jb
ljmp
mov
in
clc
ret
lcall
pop
pop
mov
ja
dec
xchg
fldenv
and
iret
inc
adc
jmp
push
push
inc
jmp
cmpl
jp
mov
sub
or
add
dec
ffreep
xor
cs
dec
pop
cmpsb
xor
cwtl
jmp
orl
jp
lock
sbb
icebp
lds
out
ret
hlt
inc
sahf
add
cmp
sbb
mov
or
adc
cmp
mov
pop
or
mov
inc
or
sub
fcoml
loopne
dec
cld
ds
cmp
xchg
stos
test
aad
out
popf
fisubl
jno
sbb
sub
cmpsl
sub
lahf
sub
mov
add
xor
enter
jae
repz
shlb
cmp
lret
ja
aad
dec
icebp
push
cmp
dec
xor
push
dec
or
mov
mov
jge
in
sub
xchg
cbtw
xor
in
lret
js
xlat
dec
inc
ret
sbb
les
shll
repnz
stos
adc
popf
mov
sbb
out
pop
ret
popf
or
into
repz
jmp
insb
xchg
js
or
xor
or
xchg
sub
xor
or
xor
ds
jb
adcb
imul
fsubp
movsl
mov
cld
loop
testb
add
pop
pop
sbb
dec
mov
std
adc
jle
mov
in
sbb
cmp
cltd
loope
shlb
pop
push
popf
adc
jmp
shl
pop
jg
lock
dec
insl
mov
lahf
and
inc
mov
sub
lcall
enter
out
aad
xor
xorb
cli
push
ja
leave
inc
push
pop
push
aas
loopne
outsb
int
xchg
sti
les
xchg
jmp
stos
call
cwtl
push
aas
pop
xchg
data16
xor
push
and
adc
test
mov
sub
push
jl
push
hlt
cwtl
push
roll
mov
repz
sbb
call
js
in
cld
popa
xlat
adcl
lods
paddw
xchg
adc
out
adc
outsb
out
cmpsl
movsb
punpcklbw
dec
sbb
inc
aaa
out
fistps
dec
push
or
in
iret
cld
add
xlat
cwtl
sub
out
add
pop
pop
and
outsb
ljmp
daa
dec
inc
arpl
and
inc
adc
mov
cmpsb
out
ljmp
pusha
jmp
andl
add
xchg
jae
stos
es
mov
std
mov
jb
cmp
jmp
mov
push
daa
pop
mov
out
insl
cwtl
stos
pop
popf
xchg
and
inc
clc
mov
xchg
aam
mov
addr16
int3
out
cmpb
test
cmc
mov
es
inc
addr16
mov
cmp
pand
push
fidivrl
cmp
mov
bnd
jb
enter
pop
push
push
outsb
dec
aas
dec
mov
sbb
cmp
out
pop
data16
push
push
stos
xchg
pop
mov
test
mov
lea
out
xchg
sub
mov
sbb
sbbb
cmp
sub
icebp
addb
sbb
push
or
loop
add
imul
jno
cmp
cmp
mov
repnz
xchg
adc
in
mov
fistl
mov
cmp
sbb
cli
mov
cmpsb
or
mov
mov
lods
xchg
std
xchg
shrb
lahf
mov
cmpsb
cmp
adc
dec
aas
mov
pop
pop
sbbb
test
ljmp
das
inc
or
pop
adc
fisubl
aas
xchg
pop
inc
dec
ret
or
shr
int
xlat
lret
add
cmp
adc
hlt
mov
push
out
repz
sub
jmp
jne
inc
aas
sub
int
divb
lds
adcl
cmp
incl
adc
mov
aas
and
pop
test
jg
cmp
cli
jg
and
and
inc
adc
push
or
cli
stos
xchg
add
pop
mov
mov
arpl
lods
xchg
cmp
xlat
mov
popf
push
lret
dec
pop
add
shlb
inc
jg
cmp
or
pop
insl
add
cmp
lods
gs
aas
pushf
mov
mov
insl
loopne
out
mov
push
mov
mov
negl
movsl
mov
outsl
out
pop
cmpsb
jg
mov
add
out
test
mov
cmp
jg
repz
inc
or
and
outsb
xor
lea
add
and
dec
add
shlb
cwtl
push
mov
add
adc
jl
lahf
sub
mov
and
dec
pop
add
xchg
ss
push
es
mov
jae
cli
fisttpll
mov
mov
inc
cmpsb
sarl
daa
push
xchg
pop
add
stos
and
pop
jns
fwait
movsl
xlat
push
mov
push
jg
and
rolb
and
xchg
sarl
mov
cltd
sbb
mov
insb
push
pop
lret
add
shrb
pop
nop
addl
call
mov
stos
movsb
lock
xchg
inc
out
sub
je
ret
hlt
mov
aas
push
xchg
mov
pop
push
mov
mov
pop
and
pop
cmp
cmp
mov
sub
daa
dec
fmull
mov
sti
push
fildll
adcb
call
mov
pop
xor
or
pop
cmpsl
je
cmp
or
dec
push
movsb
lds
mov
loope
cmp
into
xorb
cmp
sbbb
ja
outsb
cmp
out
into
test
cmpsl
outsl
adc
test
nop
or
sub
out
movsb
jecxz,pt
das
js
sahf
mov
and
loopne
fsubrl
flds
mov
push
push
cwtl
or
push
xor
mov
stos
test
aas
lea
xor
pop
out
sahf
roll
movsl
jl
enter
aaa
or
in
ss
sbb
add
vprotb
mov
pop
gs
adc
ljmp
or
in
mov
cmpsb
jo
sub
outsl
in
sub
lods
stos
fsubl
mov
cmp
fs
movsb
or
xchg
adc
fsubl
mov
push
es
pop
lahf
adc
popl
or
sahf
mov
leave
inc
jecxz
lds
je
cmp
cmc
int3
shlb
pop
subl
gs
andl
stos
loop
or
cmpsl
sub
push
pop
popa
arpl
nop
nop
dec
pop
sbb
out
lcall
movsl
or
ret
ret
cli
lret
pop
outsb
dec
push
dec
aad
or
xorb
fimuls
mov
add
and
sbb
pop
xor
bound
int
loop
inc
lock
iret
pop
mov
sbb
inc
pop
int
mov
xor
incl
lds
repz
jle
daa
out
in
aam
push
sub
rorb
pop
js
pop
adc
pusha
sarl
test
std
push
notb
cmp
test
sahf
mov
sub
rcll
mov
jb
adc
or
or
mov
mov
mov
pop
mov
adc
rcll
adc
push
inc
sub
cmp
pop
dec
ds
fidivrs
cs
test
iret
test
xor
dec
loopne
sub
fistpll
pop
pop
push
lret
sub
dec
cmp
aad
pop
mov
pop
mov
fwait
push
sub
jns
call
stos
pop
mov
lret
cmp
mov
or
fwait
add
repnz
arpl
mov
and
push
xchg
or
test
stos
fwait
ret
and
sbb
push
adc
int3
das
or
pushf
and
sbb
cmp
push
xchg
cmp
sub
cmp
ds
stos
mov
xor
fisubl
jmp
lahf
mov
stc
dec
repnz
add
mov
ret
sarb
adc
lds
xchg
fsub
xchg
jg
mov
cmpxchg
in
sub
sub
ret
out
aas
insb
das
or
test
cmp
addr16
jbe
mov
out
gs
push
add
cmp
out
and
pop
sahf
pusha
js
add
pop
fs
in
mov
cltd
pushf
cwtl
imul
int3
aaa
pop
push
sbb
cwtl
push
sub
jo
mov
jb
sbb
inc
mov
lea
push
cmpsb
cwtl
mov
adc
popf
sbb
cmp
sbb
xchg
cwtl
adc
pop
jg
adc
add
adc
xor
rorb
sbb
shr
ficomps
lret
xor
mov
scas
mov
push
mov
jl
cwtl
mov
mov
push
jns
repnz
clc
push
adc
out
or
jnp
mov
mov
hlt
jns
push
xorl
aam
push
jbe
push
in
inc
cmp
lret
and
test
adc
or
inc
mov
cmp
mov
lods
es
sbb
pop
lcall
jbe
push
in
loopne
ds
cmp
int3
push
adc
or
jb
lret
adc
gs
insb
xor
ss
sahf
scas
mov
inc
push
xor
mov
rolb
cltd
sub
scas
mov
xor
cli
out
lds
dec
xor
fnstcw
pop
add
xor
addr16
pop
mov
cmp
add
push
pop
pusha
pushf
push
add
fisttpl
and
jmp
pop
jg
insl
xchg
andb
xchg
mov
getsec
test
sub
xchg
mov
int
jmp
and
inc
xchg
sbb
shll
cmp
inc
jbe
adc
xlat
out
adc
pop
sbb
lods
pushf
je
mov
lret
inc
repz
scas
cmp
cmp
sbb
adc
cmp
pop
mov
scas
fdivs
or
or
inc
push
jno
cmp
sahf
mov
dec
lods
adc
mov
hlt
fucomip
aad
insl
pusha
push
andb
ffree
push
call
pusha
lret
cmp
es
addr16
movsb
repnz
xchg
jbe
sbb
sub
push
lods
sarb
test
roll
inc
fwait
aam
inc
call
mov
shrl
lods
sarb
pushf
mov
mov
aam
inc
clc
adc
testl
sub
inc
jae
jnp
pop
sub
dec
shrd
es
sbb
mov
add
leave
les
loopne
loop
jl
test
push
out
dec
pop
xchg
push
out
add
mov
sub
sub
shlb
mov
insl
int
pushf
push
push
adc
xor
cmpl
jmp
outsb
hlt
fwait
cld
stc
jmp
jnp
gs
push
leave
or
jae
cld
add
sub
outsl
or
stos
mov
das
insb
sbb
adc
adc
adc
add
pop
cld
mov
lret
mov
mov
sahf
pusha
int3
jg
add
push
test
lods
daa
mov
cmpsb
mov
test
inc
mov
test
pop
adc
xchg
inc
lods
lods
rorl
daa
imul
jp
loop
cmp
jp
xchg
enter
push
ss
xchg
dec
mov
pop
les
cld
jecxz
outsb
and
xchg
jg
inc
sti
inc
xchg
xchg
aam
inc
xchg
dec
dec
loopne
popa
stos
or
cld
sub
cltd
adc
sbbb
in
xor
mov
rcr
xchg
adc
sub
loop
sbb
sbb
nop
cmp
lock
adc
das
pop
dec
ret
cmp
shlb
push
dec
fdivl
fcmove
sbbl
mov
xchg
lds
adc
jmp
mov
cmp
ret
or
mov
pop
popa
popa
outsl
movsb
add
cwtl
inc
cmp
in
push
pusha
lret
xchg
mov
insl
push
sub
pop
fwait
push
loop
fdivl
mov
sub
aad
mov
fbstp
adc
nop
and
arpl
xchg
xchg
rorl
xchg
int3
push
and
lea
xchg
push
hlt
cmp
jp
mov
leave
xlat
lock
into
stc
out
in
cmpb
or
mov
in
xchg
mov
mov
fisttpll
lret
dec
lods
in
or
cmp
add
jno
data16
pop
and
out
shrb
cs
out
mov
or
adc
outsl
push
mov
out
and
dec
daa
lcall
xchg
fildl
jno
push
decb
mov
jmp
xor
pop
gs
cltd
or
or
je
shl
adc
adc
mov
push
pop
lea
cwtl
mov
inc
and
in
mov
popf
ljmp
pop
lods
sub
cli
mov
mov
ja
test
jl
xchg
xlat
test
xchg
sub
and
fs
mov
ret
jno
repz
shr
aad
inc
aaa
shrb
dec
fisubs
mov
pop
mov
outsb
pop
and
xchg
mov
jmp
imul
decl
imul
mov
mov
jmp
inc
mov
hlt
rclb
sbb
lret
push
and
fbld
arpl
lea
mov
sahf
dec
aaa
and
inc
pop
stos
in
cmp
ljmp
mov
rcrl
xchg
cmp
out
insb
cmp
xchg
sahf
dec
push
repnz
repnz
ds
and
sub
ret
aas
mov
pop
mov
mov
adcl
addr16
xor
xlat
push
pop
cmp
pushf
mov
arpl
adc
sbb
pop
or
enter
ret
mov
fisttpl
add
cmp
fldcw
pop
pushf
outsl
cmpsb
lock
shlb
jecxz
jno
push
daa
rorl
jge
or
arpl
sub
fsubrs
cwtl
pop
ret
aaa
inc
fsubr
loop
cmpl
sbb
inc
lds
out
fistpl
incl
or
js
mov
daa
in
mov
jle
rcrb
pop
ret
lea
fldt
sbb
add
test
popa
push
mov
sub
lret
xor
add
mov
test
div
add
pushf
in
loop
pop
or
xor
xorl
je
ret
sbb
das
mov
orb
pop
mov
push
dec
cmp
cmpsl
call
pop
gs
xchg
je
and
cmp
ja
jb
repnz
pop
add
das
lahf
cli
in
xchg
mov
lret
in
cwtl
pop
outsb
call
sbb
jno
lahf
push
sbb
adc
enter
aaa
test
pop
sub
mov
mov
rclb
sub
lock
shlb
mov
sbb
in
cmp
mov
adc
lock
imul
inc
push
nop
mov
orl
enter
sar
jl
ss
popf
add
fstl
imul
cmpsb
push
mov
scas
mov
mov
mov
imul
inc
sarb
mov
bnd
std
push
rorl
mov
cmp
mov
push
insb
orb
mov
cmp
adc
subb
in
inc
mov
out
xchg
scas
jle
mov
jl
dec
test
xor
add
ds
inc
fcomps
stos
adc
rep
cli
inc
push
xor
xchg
mov
pop
xchg
fdivl
lcall
sarb
mov
aad
dec
loopne
jp
push
xor
repnz
in
loopne
push
in
jg
lods
gs
inc
scas
mov
pop
sarb
aaa
cmp
stos
jbe
repnz
arpl
or
push
sti
jnp
jnp
add
push
cmp
xchg
adc
subl
icebp
mov
jl
mov
mov
lock
fmuls
sbb
test
in
push
stos
addl
xchg
push
ds
jle
test
adc
call
xor
pop
in
mov
daa
mov
mov
lret
push
add
xchg
cmp
sub
sub
fdivrl
sbb
sbb
or
imul
lcall
cmp
aad
xor
add
repnz
ja
adcb
inc
mov
pop
cwtl
xor
rcrl
fwait
shl
push
pop
mov
push
push
cmc
inc
dec
cltd
cltd
pop
sahf
jne
call
sub
cmp
into
adc
mov
hlt
mov
mov
js
in
repnz
movsb
je
pop
xchg
mov
stc
push
sub
cmpsl
xchg
or
adc
cmpsl
mov
out
push
push
loop
fistpl
std
cs
xchg
lret
test
add
sub
daa
cmp
fcoml
or
cmpsb
lock
push
idiv
mov
pop
nop
call
lret
fistl
xchg
pop
lods
adc
push
subb
jmp
ljmp
add
es
in
cmp
jb
test
adc
ja
pushf
mov
nop
outsl
mov
jl
test
test
xlat
mov
mov
into
shr
cmp
pop
xor
jg
pop
outsb
icebp
iret
dec
popf
jl
in
mov
lahf
jno
in
adcb
mov
mul
inc
dec
adc
cmp
sub
les
loopne
pop
jne
xchg
cmp
sbb
aas
xchg
xchg
dec
mov
xor
push
sub
lock
inc
xchg
aas
adc
ja
and
add
dec
or
in
mov
and
dec
adc
mov
hlt
cld
dec
hlt
in
add
js
hlt
dec
lret
mov
xchg
mov
pop
fs
adc
sub
cmp
rcrl
mov
inc
inc
jbe
xlat
push
pop
xor
in
movsl
aas
or
jae
pop
inc
xchg
push
mov
inc
frstor
adc
addl
daa
packuswb
test
mov
push
sahf
sub
mov
adc
cmp
inc
add
jo
pop
out
addr16
fwait
sub
push
sbb
cli
mov
fdiv
sbb
ret
xor
lods
je
dec
mov
mov
les
mov
mov
mov
daa
push
sbb
sbb
sahf
jo
cli
dec
clc
fadds
loope
and
mov
pop
add
cld
pop
sbb
clc
addr16
add
das
in
bnd
xchg
cmp
and
xchg
pop
cli
lahf
in
cmpsl
jle
dec
outsb
mov
hlt
pop
push
clc
mov
push
fdivr
push
add
insl
mov
fwait
subb
mov
hlt
lcall
stos
jno
or
add
mov
cld
pop
fsubs
mov
xchg
das
in
repnz
add
xchg
pop
shlb
push
xchg
pop
cli
pushf
test
cmp
dec
mov
adc
or
cld
dec
add
aaa
xchg
add
imul
std
pop
pop
int
hlt
cmp
dec
add
jne
out
stc
pop
mov
repnz
das
dec
les
mov
sub
mov
adc
push
pop
xchg
mov
sbb
and
les
inc
aas
cmp
push
pop
jno
fucomp
enter
xor
cmp
fldt
mov
sbb
sub
adc
mov
cmp
daa
aas
cmpb
jl
mov
cmp
call
dec
imul
jge,pt
sub
jae
cmp
pop
decl
enter
cmp
shlb
cmp
loope
pop
insb
cwtl
pop
xchg
lea
push
andb
fidivl
cmpsb
add
cmp
mov
in
scas
push
leave
cmp
sbb
mov
pop
scas
mov
mov
nopl
dec
jbe
mov
sub
insb
mulps
push
pop
out
stos
cld
pushf
sarb
in
push
jbe
imul
pusha
popa
sbb
mov
out
or
repnz
mov
xchg
sbbb
mov
or
jmp
vmovhpd
sub
lea
out
sub
jl
cmpsb
cmp
fwait
cli
loop
inc
push
lea
pop
xchg
mov
ds
pop
bound
outsb
lcall
jae
dec
das
cmp
mov
std
aam
dec
jle
mov
sub
dec
imul
lahf
bound
adc
mov
lcall
jae
enter
loopnew
cmp
dec
pop
icebp
outsl
dec
popf
dec
dec
loope
add
icebp
fwait
stc
bnd
xorb
data16
mov
xchg
subb
andb
push
mov
jbe
out
stos
sub
push
pusha
add
cmp
subl
das
xor
mov
inc
mov
test
shrl
stos
mov
cltd
pop
add
dec
pop
xor
lods
mov
lcall
jg
fwait
stc
ret
sahf
mov
lods
out
int3
mov
dec
mov
loope
mov
insb
adcl
js
add
loopnew
in
push
std
aam
dec
push
mov
test
rcrl
pop
push
lahf
jle
lea
pop
inc
mov
ds
mov
lcall
jae
clc
das
fs
loopnew
in
call
std
aam
dec
mov
mov
sub
sbb
push
mov
cltd
pop
rol
cmp
xchg
test
loop
xchg
and
in
orb
push
push
roll
aam
scas
jg
icebp
inc
push
pop
mov
push
push
cmc
inc
sub
jne
jmp
adc
daa
xchg
int
cli
jmp
pop
rcrl
mov
icebp
cwtl
adc
pop
mov
cmp
loopne
mov
cmp
or
sub
ret
push
sub
cmp
aam
adcl
enter
inc
das
ret
dec
pop
aaa
dec
mov
adc
enter
nop
cmp
cmp
sbb
xor
dec
push
pop
push
pop
pop
jg
jl
shl
addr16
fwait
sub
xor
sub
adc
push
outsb
pop
out
cld
cmp
pop
or
mov
push
pusha
cmpsl
sub
lock
sbb
and
add
mov
cs
jle
out
xor
insb
sahf
mov
adc
lock
lods
sahf
in
push
dec
jecxz
insb
shl
dec
addb
sbbb
push
add
dec
pusha
sub
mov
sub
mov
adc
cmp
inc
mov
pop
mov
cltd
shll
sarb
imul
mov
test
push
icebp
aaa
insb
cmpsb
mov
adc
nop
adc
mov
jecxz
popl
dec
addb
les
mov
es
dec
push
mov
mov
fwait
sbbb
adc
popa
mov
orl
les
repnz
jle
loope
fsubl
pop
mov
pop
fdivl
in
push
jo
jbe
or
push
aaa
jae
cmpsl
test
mov
movsl
call
inc
dec
jbe
popa
xor
add
mov
mov
dec
pop
pop
in
in
mov
cmp
push
xchg
xchg
jle
add
fdivr
pop
mov
mov
pop
cld
je
pop
in
push
jo
push
popa
or
push
xor
mov
jle
call
cmp
repnz
add
pusha
cwtl
shll
or
sbbb
push
popa
pusha
adc
pop
xchg
jp
xor
addl
dec
les
repnz
roll
or
push
jbe
push
in
shrb
mov
mov
ja
mov
mov
pop
dec
xor
dec
mov
fcoms
sahf
sub
mov
push
adc
mov
je
jg
test
aaa
fwait
sub
sub
adc
xchg
mov
les
jno
pop
stos
mov
inc
sub
cmp
mov
aam
dec
dec
mov
push
mov
js
mov
into
sub
cmovg
cmp
aam
arpl
stos
les
push
push
add
cmpsl
mov
add
cmpsl
mov
dec
pop
pop
in
in
adc
cmp
je
orl
les
repnz
jle
popa
pop
ret
pop
fisubl
push
xchg
dec
rcrb
xchg
push
data16
xchg
mov
fcmove
or
dec
add
dec
xchg
jle
loope
mov
cmp
pop
dec
repnz
ljmp
mov
adc
or
aad
and
fisttpl
sub
fs
inc
push
outsb
pop
mov
cld
pop
pop
jl
call
arpl
data16
fs
orb
and
pop
pop
int
repnz
fisttpl
mov
es
jo
push
dec
loop
arpl
nop
cld
repz
sub
pop
and
fistps
mov
ds
sub
inc
sar
push
push
jae
movsl
xor
ljmp
and
aam
sub
lea
dec
inc
mov
movsb
mov
add
es
inc
or
movsl
sarl
push
pushf
cmpsl
pushw
in
dec
popa
stos
mov
sbb
cltd
lods
imul
jo
mov
lock
sar
and
cld
cmp
pop
pop
adc
in
cmpsl
sub
lea
dec
outsb
mov
movsb
mov
loop
cs
jle
or
sub
rolb
repnz
hlt
dec
dec
hlt
je
nop
mov
push
sub
aas
mov
js
mov
sbb
inc
dec
adc
xorl
in
call
dec
add
mov
ds
hlt
xor
jbe
insb
jne
stos
shrl
jmp
inc
fmull
repnz
cmpsl
int3
cli
fdivrs
ds
pop
mov
insb
movsl
aas
add
int3
mov
push
shll
stos
mov
out
sub
pop
addb
dec
jecxz,pn
loopne
in
shrb
gs
sbb
ss
mov
test
mov
cmpsb
push
popa
pusha
adc
rcrb
inc
xor
pop
inc
sub
xor
addr16
or
clc
test
int3
xchg
scas
sub
mov
sub
mov
adc
cmp
pop
movsb
mov
pop
lret
shll
sarb
imul
idivb
fcompl
int3
adc
pop
adc
jo
mov
cld
pop
cli
fdivr
push
adc
arpl
popf
jbe
sbb
mov
ja
cmpsl
test
mov
jle
mov
repnz
cwtl
imul
mov
dec
pop
pop
in
in
js
jae
mov
orl
les
repnz
jle
ror
insb
pop
loop
mov
cli
mov
pop
mov
cmpsb
push
jo
mov
stc
push
add
mov
mov
repnz
cwtl
imul
cmpsl
mov
roll
xor
je
fistpll
ret
inc
les
pop
sub
in
imul
inc
jp
cltd
mov
ficompl
pop
xchg
sub
pop
stc
popa
mov
pop
or
mov
popa
adc
sbb
cmp
fnstsw
loop
pusha
popa
stos
mov
sub
pop
in
sub
xlat
mov
sub
cmp
lds
int3
test
aam
pop
ds
aam
dec
movsb
sub
sub
popf
je
sbbl
add
cld
cmpsl
sub
loopne
inc
sbb
and
add
dec
or
xor
cld
repz
inc
cmp
mov
pop
push
adc
xor
fs
sbb
jno
or
add
add
pop
daa
shl
aam
dec
cld
sub
sub
xchg
hlt
adc
sub
adc
cmp
push
mov
pop
push
xor
jl
sbb
stc
cs
add
fcompl
xor
push
mov
clc
adc
adcb
sub
hlt
std
push
dec
jecxz
fcom
loope
addb
adc
cltd
pop
dec
xor
dec
dec
ds
sbb
xchg
int3
adc
adcl
sub
lods
out
push
bound
mov
decl
cs
ret
adcl
ds
sub
loope
ret
xor
les
cli
fistl
mov
loopne
xor
rcrb
pop
test
pop
mov
divl
inc
cmc
movsl
cmpsb
dec
push
orb
cmp
inc
add
pop
push
dec
loopne
jle
dec
out
pop
loope
ds
inc
shr
pop
lret
clc
mov
iret
daa
inc
sub
aad
and
fistl
sub
jl,pn
jle
adc
rol
andl
sub
inc
sub
mov
ss
sub
xor
inc
mov
and
fwait
jno
push
lods
mov
cmpsb
mov
std
add
out
sub
dec
pslld
lock
jl
mov
mov
adc
cmp
pop
mov
ljmp
cltd
shll
sarb
imul
lcall
into
push
rcrl
xorb
adc
pop
sahf
adc
push
dec
jecxz
pusha
shl
dec
addb
xor
cltd
pop
dec
xor
dec
dec
ds
push
mov
adc
pop
lcall
addr16
sub
jb
loopne
pop
jbe
push
push
popa
mov
fs
into
fsubs
mov
dec
xchg
repnz
cwtl
shrl
fsubrs
in
repnz
les
sbb
frstor
adc
lds
fs
pop
cltd
stos
out
fs
mov
nop
sarl
insb
cs
pop
je
jl
mov
sbb
ljmp
ljmp
sti
loop
mov
clc
push
inc
jbe
xlat
ret
add
movsl
aas
add
mov
jle
es
pop
in
push
jo
jp
or
push
pop
jae
cmpsl
test
mov
movsl
call
pop
dec
jbe
rcll
cwtl
imul
jnp
sub
mull
outsb
and
push
in
cld
xorb
test
orl
les
hlt
pop
push
fdivr
hlt
and
xchg
mov
les
adc
xchg
push
shrb
dec
or
jmpw
jmp
dec
or
xor
cld
repz
xor
push
ss
pop
mov
push
mov
or
stos
mov
sbb
cltd
lods
imul
loopne
mov
mov
sar
push
es
xchg
jg
sahf
lods
mov
xor
mov
loop
lock
or
adc
std
pop
fmulp
mov
repz
daa
push
dec
or
or
pop
rcr
xchg
pop
cmp
stos
mov
jmp
jb
push
shlb
lcall
xorb
xchg
dec
jl
jmp
test
jle
aas
xlat
inc
cld
fmul
outsl
movsb
pop
inc
sub
imul
data16
cltd
mov
push
sbb
and
push
testb
jl
xchg
mov
ljmp
jle
fwait
add
mov
out
mov
xchg
jp
cltd
adc
mov
int
rcl
gs
xchg
mov
shll
stos
out
test
les
ds
shll
stos
mov
dec
or
jmpw
jmp
jge
aaa
into
outsb
mov
pop
loope
ds
inc
shr
pop
lret
clc
mov
iret
daa
inc
sub
sahf
aad
and
fistl
sub
cs
jle
adc
add
andl
sub
inc
sub
mov
ss
sub
xor
inc
mov
and
fwait
jno
push
pop
mov
cmpsb
mov
std
inc
into
out
sub
dec
pslld
out
mov
sub
mov
adc
cmp
pop
mov
ljmp
cmc
and
pop
xchg
out
out
xor
aam
jle
adc
js
pop
add
pop
sub
pusha
sub
mov
bound
jmp
daa
inc
mov
and
fwait
jno
jae
pop
jge
aaa
into
outsb
mov
cmp
cmpsl
pushw
adc
inc
popa
stos
mov
sbb
lds
cltd
lods
imul
cmp
ret
inc
les
movsb
pop
loopne
in
imul
cltd
mov
ljmp
cltd
add
int
dec
pop
push
pushf
pop
xchg
mov
fidivrl
pop
dec
add
dec
push
jle
fwait
andb
sbb
cli
push
pushf
or
add
add
dec
cmp
testl
mov
mov
rolb
in
imul
jmp
mov
dec
lcall
scas
mov
shll
xor
scas
insl
sbb
pop
ficoml
xchg
mov
push
dec
leave
dec
sbb
mov
ret
push
js
leave
test
xor
fldlg2
in
mov
bound
addr16
dec
dec
add
mov
cmp
add
adc
hlt
outsl
cli
lcall
push
mov
push
sbb
or
cld
dec
std
scas
loop
mov
cmp
add
push
xor
into
jge
xlat
pop
dec
ret
sub
shll
sbb
mov
push
int
rcrl
adc
fwait
sub
cmp
daa
cwtl
test
xchg
lds
es
aam
cmp
iret
sbb
cmpsb
scas
fists
in
adc
nop
xchg
cwtl
inc
push
int3
pop
mov
inc
imull
inc
mov
mov
into
dec
ds
gs
push
cmp
cmc
aaa
xchg
mov
add
test
shll
scas
in
mull
sar
adc
lcall
or
adc
aas
test
mov
sub
push
fdivs
xchg
lret
add
jbe
insb
movsl
mov
mov
dec
add
mov
leave
jp
jne
outsl
push
cmp
notl
xor
ret
aas
mov
cmp
fsubrs
aam
jnp
sbb
leave
leave
push
jge
xor
fsubrl
adc
arpl
mov
call
pop
loopne
leave
xor
vsqrtps
cmp
daa
cmpl
push
xor
test
jl
jbe
adc
xchg
jnp
aad
daa
xchg
sbb
out
jl
or
xchg
xchg
pop
add
in
add
cmp
push
ficomps
ja
push
cli
sub
dec
xchg
insl
fwait
and
push
dec
lret
jmp
push
cld
sub
int3
iret
out
sub
test
inc
fcomps
aaa
lods
ljmp
mov
subl
fbld
xor
pop
cmp
inc
test
data16
les
sarl
xchg
push
ret
add
xchg
movsl
fisubs
mov
mov
add
das
adc
or
inc
xor
pop
mov
call
push
fdivrs
xchg
add
xor
sub
or
push
jo
outsb
xchg
call
ds
cwtl
call
orb
push
xor
hlt
ljmp
clc
pop
repnz
test
jbe
add
sub
ljmp
xor
dec
dec
mov
ret
xor
mov
lock
icebp
scas
sbb
into
popf
arpl
or
mov
push
add
inc
mov
mov
push
out
addl
xchg
ja
jg
mov
aad
push
xor
cmp
aaa
sidtl
sub
aam
lods
inc
jnp
jp
ljmp
fsubrs
mov
mov
sbb
lahf
xlat
and
cs
and
pusha
pop
repz
mov
stc
jbe
xorb
les
sbb
data16
sbb
cmc
jmp
loope
mov
pop
cmp
fimull
pop
movsb
push
cmpsl
mov
rorl
fucom
sub
data16
or
and
loopne
aad
filds
repnz
mov
or
mov
rcr
cmpsb
inc
cltd
add
dec
testl
jae
es
inc
test
mov
sub
into
cmp
ret
rcl
mov
in
mov
dec
cmp
mov
mov
xchg
ret
sub
leave
repz
pop
xor
cmp
xlat
push
jl
scas
mov
jnp
adc
popf
push
sub
inc
aas
cwtl
fsubs
clc
push
stos
test
cmp
cmpsb
adc
adc
dec
imulb
sub
pop
pop
or
cmpsb
mov
aam
in
cmp
mov
dec
sahf
ret
xchg
add
jno
rclb
lods
add
xchg
daa
loopne
push
imul
push
es
jnp
int
jns
mov
repz
shlb
xchg
dec
adc
xor
mov
mov
push
jecxz
mov
leave
leave
repz
icebp
sbb
lds
fs
call
test
iret
cmp
push
dec
lods
sbb
sub
ret
mov
cwtl
cltd
push
jmp
gs
movsl
mov
sbb
mov
adc
jo
cld
mov
cmp
mov
cmpsb
sbb
das
sub
cmp
call
daa
nop
xchg
sarl
addr16
out
sub
xchg
mov
xchg
jb
scas
les
xor
push
sub
in
cmp
clc
dec
nop
xor
and
out
dec
and
and
or
sub
push
xor
cmp
lahf
xor
rcrb
sub
and
dec
fcompl
add
insl
mov
sbbl
daa
or
mov
pop
inc
in
out
jecxz
jmp
imul
decb
mov
int
rcrl
dec
adc
pop
and
sub
pop
mov
push
rorb
or
and
pop
fdivl
mov
mov
mov
sbb
mov
adc
fcoml
push
pop
aam
cs
arpl
pop
aam
sbb
sub
repnz
cmpsl
xor
cmc
push
jmp
addb
lret
inc
pop
and
mov
push
mov
mov
push
in
xor
pop
loope
xchg
pop
arpl
aas
andb
pop
xor
aad
dec
pusha
xor
push
ret
mov
loopne
out
push
and
pop
push
xchg
adc
fwait
xor
pop
pop
jg
and
ficomps
cwtl
inc
repz
sahf
sahf
stos
pop
and
push
pop
roll
dec
dec
mov
jecxz
negb
sub
mov
loope
or
add
push
test
test
data16
jo
xor
lock
adcl
cmp
and
push
into
sbb
mov
inc
imulb
mov
lcall
mov
js
sbb
sub
fmull
std
scas
popf
and
arpl
aad
lret
and
pusha
movsb
mov
repz
js
aaa
xor
inc
mov
test
testb
das
pop
adc
daa
mov
shlb
ret
mulb
xor
mov
cmp
mov
and
sahf
pop
xchg
or
inc
mov
sarl
or
mov
cmpsb
repz
test
in
inc
lods
repz
testl
jge
cmp
cs
mov
daa
incl
enter
push
lret
mov
loopne
addr16
lock
dec
add
ficoms
push
jo
fs
sbb
mov
js
cmp
or
sbb
or
jb
adc
xchg
xchg
test
lds
inc
cmpsl
xchg
cmp
js
dec
pop
and
ss
mov
cmp
xchg
je
mov
pop
nop
pop
bound
lds
jb
and
dec
fldl
stos
or
jg
add
mov
mov
loop
xor
cmp
mov
pop
mov
cmp
add
movsl
push
mov
mov
jae
push
movsl
repz
icebp
fcmovb
and
adc
mov
aad
aam
addl
pop
push
ljmp
addl
iret
cld
daa
fsubl
sti
sub
add
cmc
pop
es
sbb
and
rolb
inc
sbb
addr16
rorb
mov
push
stos
ret
jae
mov
add
fsubl
daa
dec
xor
std
sbb
inc
sub
das
decb
xchg
lret
cmp
mov
daa
jo
fwait
loope
fs
fdivl
pop
mov
cmp
adc
xor
cmp
lret
push
add
neg
jno
mov
cmp
cmp
imul
sahf
xor
loopne
pop
test
test
insb
mov
dec
lods
std
cmpsb
daa
jle
incb
mov
sub
fimull
jb
shlb
lds
jns
out
add
repz
fnstenv
into
mov
shrl
add
add
into
cmp
cmp
inc
inc
imul
stos
es
add
push
lds
add
repnz
int3
xor
sub
pop
or
lahf
jns
stos
cmp
xor
xor
jae
inc
sub
jnp
mov
aaa
xchg
push
jl
push
add
or
pusha
pop
insb
mov
sub
sbb
movsb
xchg
sti
xchg
icebp
xchg
or
loop
call
sarl
bnd
inc
dec
iret
clc
inc
dec
iret
testl
int3
mov
push
dec
ficoms
mov
or
or
enter
dec
fiadds
insl
outsb
aaa
dec
pop
lahf
adc
adc
sbb
je
lds
or
cltd
xchg
not
cld
bound
and
aaa
cs
mov
dec
test
jnp
orl
loop,pn
sub
leave
xchg
jns
inc
and
out
lock
pop
mov
add
enter
mov
push
int3
gs
shll
test
xor
faddl
push
cmpb
push
cld
xor
mov
mov
lret
mov
mov
nop
inc
mov
shlb
push
mov
jecxz
mov
mov
push
xchg
lahf
scas
mov
shlb
sub
jl
lea
test
push
jl
fdivs
cmc
inc
mov
add
push
mov
mov
imul
mov
cmp
vpunpcklwd
push
cmp
push
or
call
int
je
aas
push
dec
fdivrl
xor
js
xor
test
inc
repnz
out
sub
loop
out
fistpl
incl
int3
fcompl
aas
xor
mov
div
dec
mov
cmpsl
scas
mov
sbb
shl
inc
ss
jno
cmp
leave
insl
jb
arpl
data16
inc
jmp
pop
and
fmuls
or
mov
ret
push
dec
movsb
mov
push
and
in
movsb
fcmovbe
jmp
sub
mov
xchg
arpl
arpl
xor
test
sbb
add
dec
repz
inc
jge
and
std
ficoms
and
mov
div
dec
pop
ret
pop
pop
lock
lret
dec
push
clc
and
mov
jg
sar
pusha
fcoms
and
or
cmp
add
icebp
mov
aad
out
push
pop
jge
sahf
imul
sbb
push
dec
movsb
inc
jecxz
scas
dec
push
xchg
repnz
adc
rorl
outsl
xchg
mov
pop
and
lods
adc
mov
jnp
outsl
add
addr16
cmc
jns
xchg
dec
mov
stos
sub
push
push
fwait
push
dec
adc
insl
or
push
cwtl
stos
rcll
xor
in
rcl
push
pop
xor
mov
sub
pop
ss
mov
ss
xor
push
sub
add
movsl
pop
mov
adc
jne
xchg
aam
roll
inc
lods
shrl
pushf
adc
jl
xor
cli
mov
ret
sub
dec
or
rolb
mov
adc
mov
lock
mov
xchg
jecxz
and
or
aam
or
mov
icebp
loop
sarl
mov
sbb
fdivr
xchg
inc
push
aaa
mov
cmp
adc
adc
sub
test
add
pop
mov
decb
int
push
jp
adc
mov
stc
mov
mov
mov
push
addr16
and
sub
fwait
bound
stc
xchg
sbb
sub
xchg
filds
adc
mov
lcall
test
cltd
pop
pop
inc
out
lcall
xchg
dec
dec
cmpsl
mov
ficomps
das
das
fidivl
inc
mov
fcoms
imul
shll
push
jle
cmp
add
push
fcoml
adc
or
test
and
pop
adc
lret
addr16
push
lahf
mov
mov
mov
xchg
inc
and
out
cmpsl
inc
mov
xor
lret
adc
lock
sahf
cmp
sbbb
pop
push
loopne
enter
mov
pusha
mov
cmp
int3
icebp
push
xlat
dec
aaa
das
addb
shlb
push
mov
cmpb
rcll
into
sub
in
add
int3
outsl
pop
in
inc
mov
mov
inc
push
xchg
jecxz
xchg
das
mov
enter
cmp
push
pop
aam
cmp
sbb
cmp
xor
mov
das
cld
loope
orl
ja,pn
mov
rcr
add
pop
fwait
or
movsb
fcoml
push
sub
mov
push
and
dec
pop
movzwl
pop
aad
and
addb
adc
dec
fwait
cmp
ret
mov
and
mov
pop
ret
mov
sub
nop
pop
dec
out
sahf
shlb
clc
push
push
notb
or
stc
mov
sub
pop
push
xchg
cmpsb
cwtl
ficompl
xor
add
insl
stos
sbb
and
cmp
or
push
cmp
xor
inc
dec
add
lret
cwtl
cwtl
cmp
pop
mov
lock
inc
jp
cltd
ret
mov
inc
in
mov
mov
dec
xchg
inc
mull
cmp
fcomps
rcrb
pusha
fmuls
scas
sbb
imul
xor
push
iret
adc
lret
mov
dec
mov
roll
std
das
inc
or
jb
xchg
xor
cmc
jecxz
and
xchg
jl
add
lret
push
push
sub
cmc
mov
mov
sbb
inc
insl
fcoms
xor
inc
popa
idivb
pushf
and
pop
pushf
xchg
pusha
dec
jmp
inc
or
push
adcb
scas
mov
cmp
mov
xor
and
and
inc
sarl
cli
mov
push
xorl
fdivs
jecxz
adcl
lahf
pop
add
mov
pop
xchg
jns
mov
ss
xlat
addl
sbb
mov
stos
sbb
sarb
xchg
scas
push
push
mov
scas
imul
and
pop
insb
lcall
aaa
ds
cmp
mov
or
fimull
out
mov
or
jp
xor
cmpsl
fimuls
lods
aam
xor
das
or
and
popa
lahf
cmp
lcall
and
fmull
cltd
sbb
mov
in
and
xlat
mov
lods
cmc
enter
jl
adc
and
push
mov
sub
or
and
jbe
cmp
sbb
fidivrs
test
fadds
and
xchg
xorl
ds
xor
jp
adcb
jmp
pop
enter
in
add
icebp
push
popa
xor
cmp
movsb
ret
iret
es
mov
jp
lea
mov
pop
out
inc
add
adc
cmc
aas
mov
fcomp
insb
push
pop
jecxz
mov
mov
dec
mov
inc
sub
dec
jmp
sub
xchg
sbb
fisubs
mov
test
fstps
shrl
lea
xlat
cmpsl
call
jecxz
jge
je
xchg
mov
in
sub
and
mov
in
jne
or
notl
and
sbb
dec
sti
in
add
mulb
imul
xchg
ljmp
outsl
push
stos
les
inc
mov
adc
cli
push
jge
add
and
or
mov
mov
cs
cmp
shr
loop
dec
add
jns
lock
pop
jge
jns
mov
inc
mov
lcall
jl
adc
mov
jmp
dec
or
pop
dec
mov
inc
mov
rorl
and
pop
imul
and
div
inc
out
adc
adc
movsb
mov
mov
or
enter
neg
push
xchg
mov
stos
cmp
sti
xor
loope
ja
lret
pop
std
scas
push
out
push
fs
in
add
sub
jmp
pop
push
pop
or
cwtl
ss
dec
aas
gs
cmp
lds
jo
cmp
pusha
repnz
lahf
loopne
xchg
xor
and
pusha
stc
mov
xchg
enter
push
jbe
mov
insb
xorl
push
inc
jno
cmp
out
cmp
sub
insb
add
cmp
mov
mov
fwait
ret
cld
xchg
lods
add
mov
aas
lea
stc
push
decl
cltd
sbb
icebp
movsb
fidivs
pop
lret
sarl
lods
fiaddl
add
lds
repnz
repnz
jnp
push
ret
lods
sub
stos
test
jmp
inc
fmull
repnz
mov
cmpsb
sbb
into
push
pop
pop
insb
jb
adcb
mov
adc
fs
movsb
pop
cmpsl
out
inc
xchg
scas
dec
pop
fists
and
fistl
insb
pop
dec
aad
adc
push
iret
sub
mov
test
and
lret
xor
stc
pop
lds
pop
mov
cmp
jns
das
mov
cld
fidivrl
xor
xchg
jg
xchg
loope
lret
test
push
dec
sub
mov
push
jne
adc
mov
negl
mov
mov
nop
repnz
fwait
sub
shrl
xor
push
push
inc
rolb
jecxz
mov
push
popf
dec
xchg
shll
clc
pop
inc
push
push
sub
bound
shll
dec
mov
aam
inc
rclb
shrl
mov
pushf
xor
add
pushf
fcompl
add
pop
dec
pop
enter
fsubr
in
test
dec
cmc
scas
sub
mov
adc
icebp
in
sarl
stos
lock
pop
in
fnstenv
add
int3
mov
inc
or
test
mov
cmp
leave
push
pop
rorb
add
out
or
popa
out
xchg
movl
adc
jmp
pop
je
mov
xor
xchg
pop
lret
clc
ret
loope
cli
mov
fcompl
or
jmp
pop
add
and
push
lock
lret
pop
sub
imul
xor
aaa
fists
in
into
scas
iret
dec
rclb
orb
sbb
popf
xor
insl
cmp
das
in
xchg
xor
xor
jle
dec
ror
jae
into
inc
incl
and
enter
lds
add
inc
mov
pop
imul
xor
cmp
xchg
mov
mov
lret
jb
clc
clc
jmp
cli
mov
in
sub
jl
repnz
fadds
test
icebp
int3
dec
push
mov
es
or
mov
movsl
sbb
les
sbb
lret
add
push
hlt
fwait
add
adcb
call
in
push
cmp
push
int3
ret
aas
call
cmp
mov
xor
je
sbbl
xchg
push
ds
mov
sub
jmp
dec
push
cmpsl
loope
in
mov
fwait
mov
mov
xchg
pop
mov
repz
in
je
mov
cwtl
mov
inc
icebp
mov
mov
popa
sbb
push
and
mov
ficompl
xchg
loope
adc
das
ret
das
insl
mov
movsl
outsl
mov
inc
jg
xchg
or
xor
xchg
addr16
jge
sbb
pop
and
inc
mov
sub
ljmp
test
xchg
mov
iret
lret
cmpsb
sbb
cmp
xchg
inc
test
cwtl
mov
push
iret
mov
shlb
cwtl
push
xchg
adc
in
testb
jmp
inc
cmp
movsl
adc
repnz
repnz
arpl
pop
scas
loop
aam
ror
mov
shrb
push
mov
cmp
insl
push
fsubl
ds
xchg
lahf
imul
in
xor
push
xchg
jp
daa
shlb
shll
cmp
fistpll
fsts
hlt
aaa
xor
xorb
mov
aas
inc
enter
xor
cmp
filds
sub
mov
sahf
fs
das
mov
rorb
repnz
sub
push
xor
inc
xchg
xor
add
stos
adc
sahf
je
and
sub
xor
pop
xlat
inc
imul
pop
sub
xor
sbb
or
cmp
mov
mov
sbb
jae
jp
repz
js
ret
push
loop
and
adc
jo
jo
inc
mov
pop
imul
inc
das
aas
and
jns
ret
mov
insl
int3
jle
mov
pop
idivl
and
test
mov
sbb
pop
dec
and
cwtl
mov
jl
pop
sbb
fnstenv
xchg
mov
push
dec
lods
sbb
mov
inc
lock
or
pop
jns
mov
add
and
stos
cmc
inc
scas
aad
pop
mov
int
push
and
cwtl
cld
pop
push
xchg
js
scas
insl
cwtl
xchg
mov
fst
iret
ja
aam
rclb
ficoml
repnz
add
test
jle
addb
adc
sbb
or
cltd
ss
in
xor
mov
fcomps
add
sub
add
pop
ds
rclb
loop
stos
push
dec
jl
push
xor
cmp
shll
cmpsb
jb
lds
rcrb
xor
or
xorb
push
xchg
jmp
les
jmp
out
inc
scas
in
dec
xchg
xor
xchg
pop
aad
push
dec
xchg
cmp
jl
mov
stc
sti
mov
xor
xor
add
mov
cld
repz
cli
aas
inc
sbb
sbb
std
xor
iret
inc
add
cwtl
or
mov
hlt
or
cmp
fucompp
inc
mov
lods
mov
pop
mov
je
or
lods
or
pop
dec
xchg
push
xchg
int3
and
lret
inc
jb
push
lea
rolb
mov
push
push
mov
push
out
jg
dec
add
das
sbb
cmpb
icebp
repnz
pop
mov
adc
addr16
mov
stos
into
test
sub
add
sbb
push
cmp
ficompl
in
lock
push
pushf
or
fcoms
insb
push
icebp
push
in
cmpsb
jb
aam
loope,pt
daa
sbb
mov
mov
or
push
cmp
mov
or
cmpsb
push
xorl
fistps
sbb
stos
in
push
cmpsl
loopne
push
pop
repnz
cmp
arpl
call
jo
inc
push
or
rcrb
mov
dec
cmc
imul
loop
sub
cmp
mov
sub
add
imul
mov
mov
and
sub
inc
icebp
rorl
push
in
out
xor
adc
stos
cmpl
mov
mov
adc
jae
testb
lcall
mov
dec
add
and
mov
fsubrs
xchg
xor
add
or
pop
data16
mov
je
sahf
and
movsb
aam
insl
dec
insl
movsb
sub
mov
push
or
push
stos
sbb
test
or
pop
mov
int3
outsb
inc
mov
lock
stc
fisubrs
mov
xchg
mov
out
mov
testl
in
fdiv
js
pusha
lods
push
xacquire
cltd
js
jg
lods
and
inc
in
sbb
cmp
fmuls
mov
cwtl
dec
lea
fsubp
push
mov
test
in
test
js
xchg
jb
push
adc
shll
mov
xor
lods
xor
mov
cmpsb
pop
adc
es
mov
mov
xchg
pop
cmp
lods
pusha
sahf
push
sbb
pushf
mov
jl
mov
shll
or
and
cwtl
shll
into
jle
je
mov
or
cli
sub
imul
add
icebp
inc
stos
xchg
in
call
dec
push
mov
lcall
or
mov
mov
mov
dec
xor
jno
sub
add
xor
leave
std
push
movsl
mov
mov
out
cli
into
cmpsl
jp
mov
std
xor
or
sub
loop
pusha
adc
das
xchg
xchg
add
xchg
cmpb
or
xchg
fisttpll
jecxz
inc
div
sbb
in
dec
push
cld
pop
and
lea
mov
dec
imul
push
mov
ret
bound
fsubl
sub
in
icebp
push
hlt
xor
mov
pop
jp
andl
je
dec
pop
stos
into
xchg
cli
mov
inc
inc
es
mov
sahf
xchg
inc
andb
push
mov
jge
mov
sbb
loopne
sbb
xchg
movsl
in
sub
fwait
jecxz
aam
dec
sub
hlt
and
and
divb
cmp
mov
inc
inc
mov
js
outsb
orb
cmp
lret
lahf
jmp
xor
mov
adc
enter
fsubl
addr16
data16
jg
cs
xchg
mov
dec
sarb
inc
aaa
mov
lret
notl
je
lret
mov
in
test
or
sbb
scas
iret
ds
test
mov
in
mov
movsb
mov
jl
pop
aam
fwait
aad
add
push
jb
shlb
cli
jp
in
jo
js
mov
cmpsl
inc
sbb
jg
cmp
xchg
mov
loope
jo
pop
pop
cmp
xchg
inc
or
and
cmp
popa
adc
sbb
pop
dec
xchg
or
out
hlt
lock
push
pop
mov
xorb
inc
mov
mov
dec
inc
sahf
pop
test
add
arpl
push
aas
jno
push
push
xchg
leave
insb
push
jo
jb
jno
jmp
pop
mov
sub
ja
mov
or
insb
jecxz
scas
xchg
hlt
mov
cmp
das
xorl
mov
and
pop
std
push
pushf
sbb
fcmovb
nop
xchg
mov
cli
cmp
sarb
jle
leave
testl
jo
stos
sub
pop
rolb
push
and
pusha
mov
pop
mov
or
mov
jecxz
and
gs
adc
es
lods
push
sub
sti
mov
mov
inc
scas
out
jg
mov
cmp
daa
fimull
or
rep
into
imul
push
aam
add
scas
nop
sbb
mov
jb
btc
jnp
cmp
test
incb
xchg
xor
mov
loop
sahf
in
shlb
fldcw
in
jb
xchg
nop
imul
mov
fwait
mov
mov
mov
enter
push
std
mov
jg
sbb
mov
or
fucomp
call
mov
sub
popa
cmp
sbb
ljmp
push
xlat
jmp
adc
loopne
inc
sub
fwait
add
popf
cmpsb
jecxz
inc
bswap
mov
or
aaa
push
xchg
inc
xor
adc
insb
jmp
bound
pushf
pop
cli
sar
sub
out
aam
pop
loope
rcrb
jb
sbb
push
loop
pop
sbb
orb
inc
mov
jbe
in
jg
inc
fadds
pop
mov
ret
sub
jo
mov
and
jbe
outsb
or
loope
fcomps
fldenv
mov
lret
xlat
mov
or
xlat
push
pop
les
out
adc
sarb
xor
in
movswl
insb
pop
roll
pop
fildl
popa
adc
adc
sbb
loop
dec
mov
fildl
outsb
dec
mov
shrb
mov
or
sbb
nop
int3
pushf
sub
mov
fcoms
cld
adc
push
pop
lock
xchg
inc
mov
sarb
xchg
pop
dec
pop
ds
cmp
aam
fwait
push
add
mov
movsl
in
ficoml
pop
mov
es
and
pop
pop
mov
or
fisubrl
add
mov
divb
push
ret
and
fidivrs
mov
and
push
hlt
imul
pop
dec
mov
sub
fs
mov
into
out
jb
cmp
mov
out
cmp
xor
pop
fdivrl
push
add
cltd
addb
movsl
adc
pushf
in
test
adc
inc
cmpsl
push
sub
ljmp
test
in
clc
xchg
clc
loope
inc
rcrl
xor
imul
lods
das
mov
je
and
lret
iret
and
pop
out
sub
cmp
add
repnz
cmp
cmp
in
test
stos
fst
sbb
jo
jg
into
xchg
out
jmp
test
into
jmp
inc
fldl
lahf
int
and
aad
adc
cmp
xlat
push
rorl
idivb
jl
insb
inc
ret
das
daa
lods
fcoml
loop
pusha
push
lret
cld
xor
mov
sbbl
inc
lock
shr
loopne
int
jae
bound
add
rolb
test
lcall
sbbl
and
out
aas
jp
lret
and
test
adc
outsl
lock
not
setg
mov
popf
int
push
sub
inc
sahf
xor
insl
fcomp
js
lcall
adc
and
xor
stc
in
mov
shrl
sbb
cmc
push
rorl
mov
and
inc
out
ljmp
add
ja
jmp
mov
inc
test
int
and
iret
insb
ficoms
pop
jno
icebp
std
mov
pop
test
cmpsl
sar
test
insb
lds
orb
loopne
sbb
cmpsb
xlat
jge
xchg
mov
adc
das
pop
add
inc
push
mov
push
push
aam
test
adc
sbb
ds
into
fld
inc
jp
mov
push
insl
dec
cwtl
pusha
fbld
out
mov
mov
int
lcall
faddp
ret
cli
mov
ror
pusha
lret
sbb
sbb
in
in
lret
pop
pushf
jmp
sub
cmp
mov
shll
setne
or
addr16
outsb
and
or
push
mov
insl
mov
pop
ljmp
les
fidivrs
add
pop
push
loope
push
aaa
dec
and
mov
pop
jecxz,pn
loopne
mov
fdivrl
mov
pop
inc
jns
dec
dec
sub
sbb
jo
mov
andl
pusha
dec
push
mov
xlat
outsl
and
test
call
pop
cmp
mov
dec
mov
in
adc
xchg
cmp
xchg
mov
sub
fimull
subb
repz
xchg
jl
add
dec
push
sbb
mov
mov
and
mov
rclb
pop
fisubs
jle
divb
mov
shll
push
pop
aad
or
jb
or
pop
es
push
es
mov
repz
push
fcoml
mov
sub
ja
in
dec
push
cmp
fists
sbb
fcoml
push
lret
add
add
dec
cs
in
lahf
xchg
sbb
mov
jae
mov
cmp
imul
aas
adc
in
inc
xor
mov
adc
lods
and
fistpl
nop
call
movsl
in
jae
clc
pop
xchg
mov
or
adc
call
cmp
lds
cli
aas
shrb
and
sbb
xchg
shr
push
int3
std
rorb
cmp
pop
lahf
sbbl
add
xor
filds
stc
sbb
stos
dec
lods
mov
icebp
ljmp
mov
movsb
jg
dec
mov
pop
mov
imul
int3
or
mov
fildl
fimuls
movsl
iret
adc
xchg
stc
inc
xchg
into
push
pop
jo
mov
ret
lods
test
and
mov
push
iret
push
cmp
popf
andb
add
jbe
inc
sub
enter
jge
or
test
and
lret
ret
jns
call
out
push
fsts
mov
sti
mov
push
pop
aad
push
rolb
fiadds
cmp
sub
jmp
pop
lods
push
jle
orl
adc
inc
ret
push
daa
movsl
add
andl
test
mov
shll
in
and
add
rcrb
scas
mov
pushf
pop
roll
mov
mov
sbb
cwtl
sub
fwait
outsb
lods
sahf
push
cld
cltd
loopne
pop
pop
and
mov
mov
and
aas
mov
scas
paddsw
nopl
cmp
and
std
in
mov
lods
lea
popl
hlt
jbe
lret
lret
out
leave
adc
cmp
and
push
dec
sbb
sbb
jbe
ret
push
imul
fwait
jb
lods
insl
xchg
dec
fildl
push
scas
sbb
sbb
xor
mov
lret
dec
movsl
lods
das
loopne
or
inc
cwtl
dec
push
dec
and
add
sbb
repnz
and
jp
mov
sbbb
pop
mov
push
aas
fisubl
xchg
nop
fbld
cmp
pushf
and
fadds
and
out
dec
or
out
cmovno
fcomps
mov
xor
cmc
loope
xor
xorb
int3
mov
cwtl
dec
lcall
loopne
lds
lods
add
inc
ficoms
push
mov
in
dec
and
ret
loop
cmp
shlb
cmpsb
jle
pusha
cmp
inc
bound
sub
pop
push
movsb
lods
mov
jbe
sub
and
int3
jns
lock
mov
dec
dec
or
push
data16
sub
inc
aas
lahf
cli
and
lea
in
adc
dec
adcb
mov
int
test
sbb
jmp
mov
dec
push
cmp
adc
jb
mov
cwtl
in
push
icebp
mov
icebp
idivb
lods
cli
sub
sub
cmpsb
xchg
inc
jecxz
sbb
lahf
mov
mov
idivl
cltd
outsb
leave
adc
mov
push
xor
or
inc
lock
loopne
mov
imul
add
jle
xor
xchg
jecxz
pop
pop
sbb
sahf
ret
testl
inc
popf
xchg
mov
aaa
outsl
dec
cwtl
xchg
pop
sub
in
xor
pop
hlt
push
dec
imul
mov
xchg
decl
rclb
jbe
sarb
push
xor
push
orl
popa
mov
jle
clc
inc
fs
test
sbb
out
data16
outsl
adc
jbe
outsb
mov
push
push
mov
jae
mov
sar
pop
inc
aad
dec
sub
repz
adc
cs
in
sub
sarb
and
xor
adc
seto
stos
or
mov
pop
sub
inc
lods
push
fldl
xor
mov
xchg
dec
push
aas
sbb
dec
clc
add
ss
xor
jbe
jno
test
aaa
imul
pushf
jp
xchg
pushf
mov
subl
ret
sub
es
pop
cmpsl
mov
adc
adc
lods
jbe,pt
mov
mov
add
addr16
ljmp
in
out
xchg
mov
fistl
mov
aas
push
fistps
test
je
hlt
mov
fs
xchg
fbstp
push
lret
call
sub
ljmp
dec
iret
cltd
test
and
add
sarl
mov
fs
mov
outsl
pop
cmpsb
loop
mov
out
daa
or
cwtl
and
nopl
cltd
orb
shr
xchg
hlt
xlat
inc
leave
adc
pushf
lcall
inc
cmp
lret
mov
inc
scas
aas
out
bound
dec
mov
mov
enter
jmp
and
mov
xchg
mov
in
mov
push
icebp
pop
call
mov
mov
cmp
decb
shrl
arpl
add
dec
lods
pushf
pop
ret
mov
sub
sbb
jns
add
cmp
pushf
cwtl
sub
ljmp
push
int3
sbb
ds
pushf
add
add
push
cld
pop
popa
add
gs
xchg
rorl
pop
and
or
shrb
dec
fcomps
mov
mov
sub
insb
pop
js
imul
mov
xchg
mov
and
push
and
dec
sahf
insb
mov
xlat
sti
or
add
pop
push
stos
cmpsl
sub
mov
daa
movl
mov
ret
xor
and
cld
xchg
aas
je
xchg
into
mov
xlat
pop
xor
repz
adc
adc
scas
je
mov
ja
xor
mov
icebp
cmpsl
lea
rolb
addb
sti
jb
mov
mov
nop
pop
fsubs
inc
push
movsl
mov
sub
xchg
mov
push
add
sub
push
iret
push
mov
xor
in
adc
shll
push
cmp
test
mov
insb
sbb
repnz
out
dec
pop
jp
ljmp
jl
cmp
pop
cld
or
ss
add
mov
inc
xor
xor
repz
xchg
sub
push
arpl
popf
rorl
daa
cltd
add
gs
out
jle
scas
sbb
mov
adc
and
and
jnp
lds
pop
jmp
push
mov
adc
int3
xor
pop
jp
shl
pop
leave
mov
insl
xchg
sarb
jle
inc
push
cmp
aad
inc
push
sar
mov
jno
cmp
ljmp
sub
pop
push
sub
mov
lock
aaa
in
dec
push
cltd
test
inc
mov
test
dec
and
lret
insb
mov
clc
outsl
aad
fisttpll
jnp
insl
jnp
mov
daa
pusha
ljmp
lods
mov
jge
lods
lock
clc
adc
clc
mov
jmp
in
dec
lret
bound
int3
jns
mov
push
push
mov
cmpl
in
or
add
dec
push
pop
sbbb
sti
cwtl
cmp
sbb
pop
push
in
test
mov
ret
and
cwtl
xor
orb
std
jle
push
push
or
ret
dec
sbb
andl
inc
in
in
test
fnstcw
lahf
out
cwtl
int3
cmp
push
xor
insb
xor
jnp
arpl
dec
add
mov
xchg
mov
adc
push
mov
out
or
mov
inc
pop
inc
push
dec
cli
mov
sbb
cld
repnz
mov
and
push
add
pop
cli
into
xchg
xchg
jb
push
fistpl
pushf
lods
notb
xchg
lret
dec
cli
cld
push
movsl
rcrb
enter
ret
rol
out
scas
dec
pushf
pushf
ret
shlb
push
sahf
jle
fdivrs
test
dec
hlt
add
mov
xor
mov
dec
mov
aas
scas
sar
cmp
inc
mov
add
les
ja
insb
shr
inc
push
xor
leave
pushf
sub
cmp
test
call
push
cwtl
test
loop
push
int
cmpsb
fsubs
stos
cmc
cwtl
cmp
jge
push
cmc
js
repnz
decl
cli
xchg
jge
adc
je
and
dec
clc
lds
mov
sbb
rclb
shr
movsb
jecxz
xor
pop
or
lods
cli
mov
mov
icebp
jmp
punpckhbw
mov
xchg
mov
lods
arpl
hlt
or
pop
sahf
enter
pop
adcb
popf
jmp
movsb
adc
adc
cmpsl
mov
mov
push
push
mov
jmp
push
mov
insl
dec
xchg
xchg
add
int3
mov
push
and
mov
das
fistps
and
xchg
adc
cmp
push
lret
pop
popa
lret
mov
push
lret
in
jecxz
or
inc
shrl
aam
inc
enter
aas
pop
and
cmp
outsl
repnz
fsubr
jae
cmpsb
sub
hlt
xchg
push
scas
shrl
mov
mov
push
adc
imul
mov
mull
loop
pushf
adc
jl
lcall
dec
in
repnz
cmp
inc
cs
out
and
mov
adc
aad
pop
push
sub
xchg
lcall
cld
add
push
xlat
push
mov
int
lea
dec
mov
and
sbb
mov
mov
cmp
push
dec
mov
jl
cmp
and
arpl
xchg
stos
sbb
or
call
and
popa
dec
sbb
or
fucomi
out
pop
fidivl
aas
mov
and
dec
insb
hlt
popf
cmp
jmp
cld
mov
data16
mov
insb
aad
jg
data16
rcll
mov
subl
outsl
jmp
lcall
pop
test
add
xor
add
imul
pusha
jmp
push
push
lret
add
pop
add
cld
gs
ss
mov
shrb
repz
ret
xor
in
push
das
and
inc
or
mov
or
jbe
mov
popa
cmpsl
xchg
lods
leave
leave
cmp
fisttps
fmuls
sahf
sbb
out
push
push
movsl
pop
and
testb
adc
lea
mov
hlt
push
out
add
cmp
add
stos
push
push
insb
adc
push
and
xchg
pop
mov
aam
dec
mov
xchg
xor
ljmp
das
mov
int
cwtl
roll
daa
pop
inc
int3
shrb
cli
or
mov
std
pop
cs
jge
adc
es
divb
cmp
add
loopne
pop
scas
sbb
movsb
inc
mov
push
xor
mov
loope
cli
jecxz
mov
pop
mov
ds
xor
cmpb
mov
sub
lock
cmc
rcl
cmc
lock
cmpsl
or
movb
aam
inc
dec
xlat
scas
sub
or
jmp
sbb
loopne
scas
adc
ds
movsl
or
test
lods
cmp
bound
xor
cmpsb
sub
push
lahf
mov
mov
test
stos
xchg
ds
adc
call
mov
adcl
in
orl
leave
xchg
cmpsb
test
xor
adc
movsl
jl
and
mov
test
jl
incb
fcmovbe
repnz
mov
ficoml
mov
add
ror
icebp
inc
dec
inc
cmpsl
xchg
stos
dec
lahf
cld
mov
adc
pop
aaa
sbb
mov
pop
cld
dec
mov
jns
negb
push
xor
cmc
push
ds
movsb
jg
dec
dec
jbe
sub
mov
push
inc
aam
out
push
pop
rcrl
aaa
repnz
cli
outsb
sbbl
lods
cmp
aad
mov
add
cli
mov
in
pop
rcrb
call
test
aad
pop
xchg
lds
call
mov
cmpsl
call
mov
mov
fwait
push
hlt
test
lock
sbb
fdivrl
or
les
dec
pop
rolb
les
in
cli
enter
push
mov
icebp
sahf
aaa
sarb
mov
or
or
dec
lcall
negb
aas
sbb
or
ja,pn
push
jg
rcrb
pushf
dec
cli
test
jns
add
dec
dec
cmpsl
pop
loopne
inc
scas
and
je
pushf
ficomps
xchg
mov
ss
mov
adc
ret
imulb
fs
pop
or
adc
push
test
add
xchg
pop
sbb
mov
adc
or
icebp
inc
xchg
and
sub
fsub
pop
and
daa
mov
cmp
mov
adc
rcr
xor
in
in
xor
or
and
sar
sahf
sub
pop
loopne
mov
adc
pop
push
aad
jb
and
out
or
sub
jae
lret
sub
adc
cwtl
inc
fdivrl
gs
pop
xlat
and
subl
inc
adc
adc
jne
adc
and
cmp
pop
sahf
test
fisubrs
cwtl
inc
pop
pop
jmp
insl
insb
push
aam
inc
pop
loop
xchg
mov
or
jp
mov
pop
jg
shll
sub
lret
mov
js
iret
sbb
inc
push
mov
es
push
into
add
movsl
lret
mov
mov
jo
xor
imul
pop
cwtl
sub
pop
xchg
jle
cli
int3
pop
or
in
adc
mov
sbb
mov
out
sbb
add
mov
call
orb
mov
fwait
adcb
pop
bound
mov
popl
and
decb
sarb
push
sbb
jns
popa
jl
sub
sbb
add
clc
mov
push
pop
call
lret
add
xor
mov
sbb
fidivrl
or
in
push
pop
mov
jl
stc
dec
shl
movsl
sbbb
sub
dec
idivb
sbb
int3
inc
cltd
lahf
cmpsl
push
insl
icebp
imul
and
or
ds
jmp
dec
iret
push
out
out
fsubl
aam
adc
enter
dec
mov
aam
inc
sahf
push
imul
mov
out
adc
bound
cs
and
jg
sarl
or
jp
cmp
lcall
jmp
jle
pusha
lock
push
mov
stos
xor
xchg
aaa
insb
xchg
dec
sbb
cmpsl
sti
and
mov
and
mov
and
aam
dec
hlt
pop
inc
aam
lea
loope
es
fidivrs
sub
xchg
mov
or
das
pop
pop
mov
icebp
xor
clc
aaa
jbe
and
push
sub
add
and
mov
lods
mov
loope
dec
lret
xlat
cmpl
dec
insb
jmp
mov
fucomp
xor
mov
adc
mov
mov
repnz
loopne
fwait
or
aas
ret
and
pop
iret
pop
jne
outsl
fcoml
or
call
xchg
es
pop
out
and
sbb
add
fidivrl
or
std
ret
aad
and
push
mov
pop
and
mov
cmp
fsubr
test
ret
std
pop
push
in
fistpll
gs
ret
jge
jno
mov
xchg
outsl
adcl
mov
outsl
push
push
sub
shrb
fs
mov
push
sbb
mov
pop
jge
pop
daa
test
jno
mov
jne
push
je
jb
sarl
aam
sub
mov
adc
mov
outsb
cmp
sub
or
xor
mov
ljmp
es
cltd
movsb
pop
and
lods
push
gs
mov
and
notb
or
or
lret
repnz
scas
jo
lret
jmp
stos
pop
pushf
out
decl
in
mov
sbb
lcall
mov
jle
or
fcomps
movsb
in
out
aas
sbb
cwtl
ss
lcall
bnd
and
add
dec
sub
shlb
loope
jmp
insb
outsb
pop
out
xor
lods
orb
mov
popa
test
pop
mov
mov
or
arpl
and
dec
scas
mov
je
push
pusha
call
push
jns
cmp
pushfw
sbb
mul
cltd
je
dec
xchg
divl
out
cmp
aas
lcall
lwpval
inc
mov
movsl
mov
hlt
decl
sbb
outsb
jne
pusha
add
mov
xor
in
xchg
insl
movsb
movsl
mov
fdivr
arpl
into
inc
pop
cmpsb
push
je
dec
jle
in
call
mov
cli
and
pop
cmp
testl
popf
aad
mov
adc
xorb
xorb
movsb
pop
mov
mov
das
push
ficompl
pop
adc
inc
xchg
or
mov
test
outsl
xchg
es
negb
add
ljmp
rclb
call
movsb
jl
lahf
push
push
ret
aas
mov
repnz
push
or
pop
mov
ds
xor
rcl
mov
push
test
push
xor
cwtl
loope
sub
mov
pop
mov
pop
pop
push
cmp
push
nop
jge
mov
andb
ljmp
mov
lcall
mov
jl
sub
test
mov
push
cltd
into
pop
dec
inc
adc
aas
xchg
jmp
push
scas
stos
xorl
sar
imul
jge
push
imul
dec
mov
sets
sbb
xor
out
fucom
cwtl
or
shlb
lcall
outsl
fcmovbe
adc
sbbl
cwtl
xor
fsubs
lock
adc
push
pop
sub
and
fdivrs
mov
push
rclb
and
or
xchg
es
jle
add
lcall
bound
outsl
lcall
sub
or
pop
adcb
pop
xor
repz
jbe
cmp
mov
push
jmp
aad
mov
dec
inc
or
or
mov
mov
mov
jge
xor
into
pop
adcb
shl
mov
loope
jb
push
cli
in
sahf
jmp
jge
leave
or
pop
rorl
pop
xlat
add
pop
sbb
addb
es
enter
inc
and
push
push
push
fadd
dec
test
out
addl
stos
rorl
push
inc
in
imull
pop
fs
xchg
or
mov
outsl
mov
daa
jg
popf
mov
push
pop
push
mov
pop
andl
rclb
jbe
adc
stos
push
loopne
data16
shlb
cmp
sub
push
ds
and
inc
fxch
fwait
mov
mov
out
or
data16
cmc
and
mov
jmp
and
testl
enter
out
sahf
rorb
sbb
inc
enter
push
mov
xor
pop
push
aam
daa
mov
push
ja
cld
fwait
ret
es
repz
cmp
es
leave
cmp
inc
mov
icebp
es
repz
enter
shl
sbb
sbbl
aas
mov
dec
lahf
jmp
dec
dec
pop
adc
lock
pop
and
mov
mov
test
xor
inc
pop
mov
out
and
jno
sti
cmp
cmp
mov
lahf
xchg
fcoms
divl
cmp
insb
aas
mov
mov
call
jg
test
xchg
add
sub
gs
fwait
aam
mov
test
testb
mov
adc
xor
clc
or
test
ret
adc
lock
sbb
in
movl
std
pushf
and
fmuls
les
je
xor
mov
push
mov
clc
in
les
daa
adc
pop
adc
roll
das
test
push
dec
stos
jp
push
mov
pop
dec
aam
or
fistps
cld
dec
icebp
orl
sbb
lods
mov
adc
cltd
xchg
sti
cmpsl
lods
mov
ret
cmpsl
mov
aad
imul
jb
mov
jno
adc
incl
rcll
push
mov
mov
popa
xchg
cmp
lods
push
sub
cltd
bndstx
pop
cmc
movsl
and
push
mov
add
divb
sub
adcb
mov
add
pop
push
lret
in
adc
loopne,pn
inc
call
adc
lock
dec
es
popa
mov
out
imul
push
mov
js
push
adc
add
fstpl
cmp
push
fildl
mov
pop
divb
std
add
jbe
cmp
and
mov
sbb
popa
popl
add
xor
test
sahf
sti
mov
fs
lods
mov
dec
insb
js
jns
push
scas
or
jo
jnp
cmp
mov
out
jne
dec
xlat
testl
in
hlt
arpl
jp
idiv
jmp
mov
dec
idivl
mov
imul
mov
mov
mov
mov
sbb
and
js
fcmovnu
test
cmp
jmp
xor
xchg
cmp
mov
test
daa
in
push
lods
lock
iret
pop
int
out
outsl
push
adc
dec
ret
adcl
mov
lret
sub
out
jae
xor
daa
and
sbb
mov
call
minps
ljmp
test
stc
aas
pop
push
xor
dec
mov
enter
mov
mov
cmpsl
mov
test
leave
div
sbb
push
adc
mov
xor
xchg
xchg
inc
int3
dec
adc
inc
popa
sbb
push
cli
leave
sub
dec
sub
dec
jnp
lods
repnz
das
inc
push
pusha
push
movsl
adc
mov
mov
push
cld
cmp
out
mov
lahf
loope
sbb
jge
stos
js
mov
test
es
mov
mov
outsl
int3
inc
fcmovne
pop
rol
icebp
mov
cwtl
sti
std
xchg
fwait
sbb
cmp
sbb
subl
sbb
out
cmp
pop
fwait
mov
jge
test
xchg
dec
mov
dec
xchg
jl
push
xchg
adc
cmpsl
cmpsl
js
dec
xor
fdivl
jae
std
cmp
pushaw
repz
xchg
push
adc
cmp
adc
xor
fcoms
dec
fs
insb
arpl
xchg
cmp
xor
add
scas
je,pt
stc
cmp
sbb
lcall
cmpsb
jb
roll
loope
and
and
addl
xchg
out
test
sbb
out
test
aaa
sbb
or
gs
lds
not
push
jl
xor
adc
aad
and
cmpsb
daa
popa
jg
push
aaa
ss
pop
xchg
xor
cli
xchg
cltd
adc
mov
adc
mov
jle
xchg
outsb
push
lock
cmpb
adc
imul
add
lods
mov
rorb
ja
outsb
jl
xor
loop
add
inc
xchg
idivb
mov
jmp
mov
cmp
js
inc
inc
dec
mov
out
dec
lahf
push
mov
sbb
cld
test
sub
fiaddl
pop
jle
into
movsl
pop
adc
mov
mov
insl
movl
lahf
inc
sub
cmpsl
mul
repz
sub
jae
daa
scas
movsb
pop
and
cmp
cmpsl
pushf
stos
pusha
xchg
pop
and
jne
clc
add
lea
jb
fisubrl
mov
cmp
or
mov
xchg
pop
mov
jg
fadds
push
clc
dec
dec
mov
out
mov
push
shl
and
jnp
pop
ret
xchg
jg
and
cmpb
mov
scas
aas
insb
pushl
repz
jmp
enter
pop
cmpsl
gs
dec
aas
incl
inc
add
mov
lock
mov
mov
dec
pop
pop
or
cmc
loop
pop
jbe
cmp
out
xchg
xor
fwait
in
mov
out
or
jne
or
fdivrl
fildll
rolb
xchg
sub
push
dec
les
add
cld
cltd
cmp
cltd
cld
insl
lock
arpl
insb
mov
push
sub
push
push
out
xchg
xor
cmc
cmpsb
and
mov
xlat
adcb
mov
mov
sub
adc
shll
dec
and
xor
sbb
nop
bound
mov
and
bswap
insl
push
xchg
add
in
ss
sub
nop
outsl
fistl
cld
mov
xchg
daa
xchg
pusha
cs
in
and
push
pop
pop
jns
js
mov
loop
fmulp
sub
leave
test
xor
inc
xchg
ret
xlat
test
lock
loope
inc
shlw
or
pop
cmc
ljmp
and
mov
mov
lret
mov
ror
inc
popa
add
rclb
jo
push
in
int3
push
dec
aad
daa
jle
xchg
push
jmp
mov
aaa
icebp
mov
pop
push
in
int3
cmp
popf
je
dec
sub
cmp
rolb
mov
les
jmp
add
jl
push
ficoms
mov
mov
mov
inc
shrb
fwait
cli
mov
and
js
negl
dec
mov
sub
cmp
sbb
and
and
in
sub
js
sysenter
push
insb
cmp
mov
jmp
mov
xchg
out
std
stc
mov
push
mov
mov
je
cli
rcr
sub
push
cmp
and
push
int3
adc
xchg
nopl
push
mov
sbb
or
and
or
adcl
fcompl
push
sbb
jno
aad
jb
pop
cmp
lds
xchg
jl
adc
cltd
pop
test
mov
jbe
cmp
cmp
xchg
sub
sbb
loope
and
cmp
test
icebp
lods
sbb
sbb
nop
jbe
mov
icebp
lock
adc
mov
sub
xor
sahf
idivb
push
cmp
pop
jl
jecxz
lea
mov
jb
jge
push
pop
mov
inc
mov
xor
das
je
xor
cmp
outsl
xlat
in
add
push
xor
fisubs
in
fistpll
sbb
rcrl
pop
cmpsb
cwtl
cmp
xchg
nop
pop
mov
fwait
push
in
ror
xchg
push
call
inc
mov
cmpsb
push
pop
pushf
cs
lret
dec
inc
outsb
nop
test
jecxz
loope
idivb
pop
lret
pop
test
push
mov
push
add
hlt
aam
sub
test
adc
in
cmp
movntq
ds
nop
xor
inc
out
bound
pop
and
call
cmp
mov
in
mov
test
mov
mov
cmc
mov
es
or
jne
inc
inc
jbe
adc
mov
push
fnstsw
decl
mov
loopne
inc
or
mov
test
mov
xchg
lock
pop
arpl
ds
iret
clc
sub
push
mov
pop
cltd
mov
or
popa
aaa
sub
int
or
test
cld
test
stc
jno
push
cmp
and
xor
inc
pushf
and
sub
fdivs
pop
ret
mov
xor
add
flds
popa
cli
mov
testl
push
jle
in
sub
gs
clc
outsl
xor
in
inc
enter
dec
stos
adcb
in
dec
pop
test
out
movsb
int3
test
nop
jne
in
push
xchg
sti
sub
pushf
mov
jmp
cmp
clc
push
and
lea
das
or
fdivl
aas
daa
push
dec
negb
push
pop
xor
fs
sbb
jl
es
xchg
in
aaa
sub
jle
iret
mov
xchg
cmp
stc
jp
outsl
shlb
jbe
inc
push
rclb
fimull
outsb
repnz
mov
aas
bound
inc
xor
negb
adcl
or
mov
gs
test
add
mov
fsubl
clc
iret
inc
cmp
sarb
cmp
sti
dec
adc
push
xchg
lcall
mov
cmp
cld
pop
cwtl
pop
cmp
sbb
mov
inc
addr16
cwtl
lods
shlb
dec
int
sub
jnp
push
ds
popw
sub
pop
aad
pop
pop
sbb
aas
fdivrs
cs
xchg
push
out
pop
xor
outsb
inc
xchg
push
sbbb
ljmp
xor
push
inc
sub
in
mov
fiadds
jg
mov
loope
ja
in
xor
jl
int
jecxz
inc
daa
dec
sub
xor
sbb
fsub
pop
les
daa
loopne
jne
adc
or
add
unpcklps
nop
fs
out
out
sub
repnz
ds
mov
pop
je
mov
and
xchg
adc
int3
lods
cld
or
aad
addr16
repnz
xchg
outsl
repnz
stc
sub
and
add
push
das
shll
push
mov
pop
sbb
aad
repz
cmp
pop
push
ss
pop
adc
push
insl
fildl
bound
add
das
push
jle
ret
lret
test
inc
jge
cmc
stos
stc
into
sti
pop
in
lahf
mov
frndint
xor
dec
fmuls
nop
mov
dec
lock
inc
ficomps
lret
or
sbb
xchg
adc
xor
ret
xor
clc
sub
sti
pop
dec
or
xchg
aaa
into
inc
mov
pop
cmp
lret
add
add
xor
lock
stc
dec
jnp
add
daa
mov
stos
jns
cmpsl
aam
nop
jmp
faddl
push
ds
pop
aam
pop
out
push
leave
cmp
push
in
pop
js
std
and
fwait
jno
push
mov
pop
sarl
add
shl
fsubrl
clc
jl
pop
xchg
inc
aam
in
inc
ljmp
incb
imul
test
jl
cmpsb
cld
push
jmp
aas
pusha
cmp
sbb
js
adc
cwtl
push
imulb
fisttpl
pop
or
push
mov
repnz
lods
jmp
cmp
push
ds
mov
or
je
jmp
push
aam
inc
cmpl
ret
push
pop
enter
xchg
rorb
lock
cld
push
or
sbb
adc
scas
outsl
cltd
sti
arpl
dec
add
pop
mov
adc
jl
jecxz
int
mov
scas
adc
ds
adc
out
or
cmp
or
arpl
ljmp
and
data16
mov
pop
sbb
subb
or
jmp
push
or
push
xchg
jmp
insl
fmull
int3
cli
inc
ret
fmuls
sbb
sti
cmp
mov
cmc
scas
push
adc
jl
jmp
dec
pop
hlt
xor
hlt
mov
push
insl
in
add
and
push
fisubs
add
aad
lods
aam
dec
mov
loopne
push
push
loope
ds
lods
jecxz
psubusb
movsl
imul
push
mov
gs
pushf
test
in
loop
mov
cmp
outsb
aaa
sub
dec
or
movsb
shll
divl
xchg
pop
dec
enter
shr
sahf
into
mov
jecxz
sub
les
out
loopne
mov
pop
mov
frstor
xor
aam
inc
hlt
xchg
jne
mov
cmpsl
mov
jmp
dec
insb
je
lods
stos
sbb
lahf
dec
std
xchg
sub
push
ds
cmc
outsl
lret
push
int3
cwtl
or
mov
repz
cwtl
push
pop
dec
out
outsb
inc
rcrl
sbb
mov
clc
push
das
div
aas
lret
test
or
lock
stc
int
test
xchg
xchg
lds
cmpsb
out
pop
lea
daa
jg
out
enter
insl
loop
mov
sarb
je
inc
dec
fcmovu
or
xchg
mov
repz
pop
lret
pop
push
data16
xchg
add
in
out
mov
xlat
ret
xor
sahf
jo
mov
adc
push
xor
and
xor
sub
nop
mov
adc
inc
xor
xor
aam
repz
mov
inc
push
fsub
enter
in
adc
aaa
lods
mov
clc
xchg
inc
dec
and
sbb
mov
enter
in
push
cwtl
insb
int3
mov
cmp
inc
das
pop
xlat
add
test
out
aas
jecxz
int
insb
clc
mov
adc
and
aam
pop
or
cmc
lret
mov
sbb
jae
inc
xchg
in
leave
fmul
xchg
das
js
pop
pop
and
push
push
bnd
enter
stc
mov
lods
stc
sub
in
lods
pop
mov
xlat
mov
shlb
aam
push
mov
inc
pop
movsl
and
jecxz
sarb
add
mov
scas
scas
les
cwtl
rcrb
repnz
test
pusha
pushf
xor
mov
outsb
cmp
mov
shll
mov
xor
and
sub
repz
popa
inc
cmp
loope
sti
push
mov
inc
push
mov
mov
in
addr16
push
inc
frstor
mov
jno
lcall
dec
sub
fcomp
es
fs
cmp
sub
dec
lcall
mov
jb
pop
xor
adc
das
scas
mov
pushf
or
fucomip
aas
fisubl
or
popf
xchg
je
inc
cmp
test
lret
fwait
adc
cmp
and
sbb
insb
pop
call
push
andb
add
sub
xchg
fistps
mov
xchg
jge
fcmovu
or
or
xor
mov
and
push
leave
cld
aam
pop
cmp
fisubrs
pop
mov
jp
push
repz
mov
push
xchg
and
fs
iret
repnz
dec
jg
mov
mov
cmp
ret
inc
dec
enter
nop
mov
push
and
repnz
mov
cmpsb
mov
dec
and
dec
cmp
push
xlat
push
mov
daa
or
stos
mov
push
xor
fcmove
push
fwait
inc
les
add
aas
movsb
jg
cmpsl
inc
mov
push
mov
paddusw
out
fsubs
pcmpeqw
loop
mov
mov
push
mov
inc
loop
movsb
mov
aas
xor
adc
loopne
add
push
imulb
cmp
repnz
adc
popa
cmp
stos
xorps
adc
test
cmpsl
fsub
xchg
cmp
loop
inc
aas
push
leave
and
decl
xorb
inc
sbb
cld
lahf
jge
testb
pop
fdivrl
sub
rol
xchg
cmp
jge
pushf
fs
inc
inc
mov
lcall
test
adc
enter
sub
js
repnz
sub
ds
fwait
mov
stos
or
pop
pop
lods
cmp
ss
in
inc
cmp
inc
sbb
dec
lret
in
and
sub
cmp
mov
mov
insb
out
pop
push
fdivrl
repnz
dec
pop
adc
divl
aad
sbb
decb
int
enter
cmp
pop
test
or
xchg
idiv
xor
subb
mov
pop
xor
imul
int3
jbe
incb
fisubrs
sub
clts
pop
mov
cmp
or
jae
mov
sub
rorb
xchg
int3
cmp
rcrb
cs
int
cmp
add
cwtl
push
push
cmp
xor
and
mov
adc
jg
mov
cld
inc
faddp
xor
dec
or
int3
xchg
stos
pop
ret
adc
int3
xor
andl
or
add
int3
movsbl
cmpsb
or
lea
dec
xchg
rcll
pushf
iret
add
cmpsb
add
xchg
mov
pop
sbb
mov
add
pop
js
sahf
sbb
adc
inc
js
mov
cmp
pop
cmp
call
test
and
push
int
cwtl
sarl
stos
test
fs
jecxz
dec
jno
test
ljmp
cmp
stos
mov
aas
or
pop
scas
js
push
sbb
lcall
pop
and
xor
sbb
or
or
lahf
and
pop
cli
or
insl
dec
call
jns
cmp
enter
sub
sbb
xchg
xchg
jmp
insl
mov
jge
cmp
cmp
lret
dec
pop
popa
xor
jno
shlb
mulb
cmpsl
scas
xchg
cld
xchg
loop
aam
pop
xchg
mov
mov
mov
xor
or
adc
lds
rcl
out
in
push
decl
mov
sub
and
pop
and
addl
push
and
nop
cmp
sub
icebp
pushf
mov
sbb
js
shrl
hlt
icebp
push
mov
gs
sbb
or
inc
jbe
test
push
xor
stos
push
pop
cld
stos
dec
mov
rorb
icebp
inc
mov
mov
int
fimull
cmp
addl
pop
in
subl
jnp
sub
aaa
push
and
xchg
hlt
hlt
rol
xor
cld
xchg
loope
adc
call
push
aam
test
inc
or
cmp
cs
inc
push
clc
inc
adc
cmp
mov
pop
mov
xlat
mov
fisubs
jo
cmpsl
dec
mov
adc
bound
repz
xchg
mov
cltd
sahf
mov
cmp
mov
cmp
or
in
mov
cmp
or
add
aas
or
dec
adc
xor
dec
inc
and
test
inc
add
in
imul
adc
sbb
inc
test
and
test
in
aam
in
scas
dec
add
jecxz
hlt
daa
xchg
mov
pop
adc
mov
mov
cwtl
sub
fwait
test
lods
test
int3
jbe
das
and
scas
inc
add
fiaddl
cmpl
pushw
rorl
pop
fsubl
sub
js
nop
inc
xor
lods
cmpsb
inc
int
aas
and
push
aad
inc
int
mov
jb
mov
cld
push
jae
cmp
mov
stos
ss
in
adcl
movsb
cmp
movl
hlt
int3
mov
jae
xchg
lret
sub
adc
repnz
cmp
pop
test
jnp
xor
mov
inc
xor
fcompl
push
pop
add
jae
movsl
mov
shlb
pop
inc
dec
pop
add
fimuls
push
mov
sbb
inc
push
jo
jle
adc
stos
sbb
push
inc
mov
adc
shr
or
dec
add
mov
mov
test
nop
jg
fstl
fstpt
add
or
sti
mov
mov
shrl
sbbl
movsl
bound
cmp
leave
jb
adc
movsl
add
mov
xchg
dec
pop
jno
out
ljmp
int
lahf
push
ljmp
mov
adc
test
lock
filds
push
or
popa
cmp
mov
pop
mov
add
add
adc
dec
cmc
jge
xchg
add
mov
jge
mov
or
push
mov
dec
cmc
pushf
push
mov
adc
sub
pop
cmp
push
inc
js
mov
jb
bound
sarl
mov
ja
shll
cmp
subl
fsubr
mov
addl
jae
xchg
or
adc
ret
and
ss
sub
div
sbb
mov
fs
push
dec
int3
fs
popa
sub
sbb
adc
cmpsl
mov
adc
inc
push
and
cmp
std
scas
mov
jne
jmp
mov
call
xlat
and
insl
les
test
jae
mov
push
mov
gs
dec
push
mov
pop
jb
add
xor
jp
std
and
jbe
xchg
rcl
fiaddl
xor
int
or
das
jmp
push
repz
push
mov
daa
in
xchg
adc
add
and
sar
xchg
xchg
arpl
pop
push
add
divl
cmp
jbe
pusha
hlt
js
pop
inc
pop
ret
cmc
fidivs
pushf
sbb
mov
neg
ja
out
lds
ret
je
jecxz
adc
xchg
sub
cmpsl
mov
loope
dec
cmp
inc
fisubrl
jae
dec
dec
pop
jg
orb
das
insb
shrb
cld
pop
lods
cld
lret
fsubp
fiaddl
mov
hlt
or
add
cwtl
repz
add
icebp
lock
insb
xchg
dec
pop
and
jecxz
adc
adc
and
push
and
push
arpl
adc
aas
pop
mov
or
outsl
lods
sar
adc
sub
xor
xor
mov
pop
pop
xor
push
cmp
add
stos
insl
mov
jl
dec
mov
push
and
jne
dec
jno
mov
push
xchg
sub
dec
or
xchg
or
je
lods
push
sub
js
jbe
adc
push
push
addr16
dec
cs
rorb
cwtl
lret
pop
sub
push
out
lods
lds
mov
cmp
mov
test
cs
test
int3
mov
int3
mov
and
or
rol
dec
shll
imul
cmc
gs
int3
sub
das
adc
cs
jb
jle
cmp
aam
jle
sbb
fnsave
into
push
inc
jg
sub
xchg
cltd
xchg
movsl
adc
int3
or
or
outsl
data16
jmp
jmp
mov
das
cmpsl
push
fldcw
xchg
ds
add
std
ja
repnz
pushf
aam
cmp
cmpsl
stos
lock
sub
outsb
rclb
dec
movsl
movsb
jmp
stos
repnz
pop
fs
push
pop
cli
push
lock
stos
cmp
inc
xchg
and
fisttpll
inc
jb
je
adc
rcr
imul
mov
mov
mov
shrl
sub
mov
adc
outsl
inc
pop
lock
sub
add
fbstp
decb
aam
sub
sarl
adc
cs
dec
stc
and
or
cmc
adc
in
lock
cmpl
mov
ret
sbb
sbb
imul
js
jp
bound
push
sbb
pop
sub
cmpsl
jl
xchg
jmp
loop
lock
pop
inc
out
lock
lods
loope
mov
ljmp
repnz
mov
pop
das
dec
int3
in
and
or
lea
jno
out
gs
xor
push
aam
jmp
cmpsl
push
mov
std
aad
mov
repnz
inc
xlat
adc
scas
inc
repz
sbb
int3
inc
xor
or
leave
loopne
ret
and
sbbl
cmp
xchg
xlat
xorb
xchg
cmp
mov
ror
jle
xor
lahf
rol
ret
xor
leave
sbb
xchg
testb
push
mov
push
repz
add
mov
cmp
loope
addr16
mov
push
cmp
jmp
js
jle,pt
ret
stos
cmp
popa
jge
lds
mov
mov
fs
shrb
cmp
xchg
rol
cmpsl
insl
xorb
cs
jbe
in
and
das
pop
cmp
andb
repnz
jg
cmp
in
sbb
js
xor
icebp
cmp
int3
jg
push
cmp
xchg
push
jb
mov
or
enter
cld
inc
hlt
cmp
mov
pop
sub
sub
aas
mov
cmp
push
add
jbe
pop
insb
in
cmp
pop
mov
rorb
and
lea
roll
sbb
sbb
cs
add
pusha
cmp
jne
cmp
repnz
adc
and
idiv
jnp
xchg
mov
inc
push
or
mov
pushf
push
add
inc
and
ficoms
int
fs
mov
dec
pop
adc
rorb
mov
or
in
in
pusha
in
push
jno
adc
movsb
or
pop
mov
sbb
cmp
out
dec
jp
push
cmpsl
int3
mov
adc
fisubrl
rcrl
sbb
jns
sbb
jae
pandn
paddq
aaa
push
mov
dec
add
inc
cwtl
int
xchg
ja
stos
xor
aas
inc
jmp
out
mov
cld
xor
cmp
aaa
sub
push
sub
cwtl
jmp
rorb
fdivrs
cmpsl
mov
ljmp
gs
inc
ds
push
mov
push
outsl
sbb
and
mov
sbb
sbb
stos
jmp
cmpsl
push
ds
int3
sub
xchg
mov
adc
sub
out
inc
jmp
pop
data16
movsb
enter
icebp
mov
cmc
mov
fcomip
daa
fmull
mov
sarl
fcoms
lods
mov
sbb
aaa
in
test
cmp
mov
js
cmp
or
adc
dec
jl
xchg
scas
stc
mov
ds
bound
and
push
gs
jne
and
jns
clc
dec
push
cli
push
mov
mov
popf
mov
das
js
and
loopne
repnz
mov
inc
jae
fsubr
out
aam
adc
movsl
rcr
cmp
cmp
xchg
cmpsl
imul
adc
in
mov
aas
stos
cmp
cmp
lock
xorl
jae
add
push
push
cmpsl
enter
pop
sbb
xchg
pop
mov
or
cmp
xchg
in
pop
jne
cmpsb
pop
mov
into
sub
xchg
ds
cli
cmp
jecxz
int
rol
pop
push
adc
cmpsb
repz
cmc
jge
add
mov
rorl
fucomp
in
shlb
push
mov
add
mov
and
xor
mov
dec
les
jbe
pop
test
in
fbstp
push
ret
push
and
push
out
fdivrl
sahf
cmpsl
in
adc
das
pop
enter
mov
imul
pop
aas
int
cmp
xorl
rcr
xchg
add
fcmovnbe
ss
fstpl
mov
dec
cmp
stos
pop
rolb
xor
mov
lock
cli
in
aaa
sub
adc
xchg
add
adc
pop
stos
sahf
hlt
sub
int
inc
cmp
cmpsl
jae
push
daa
add
dec
mov
ljmp
fisttpll
notb
test
mov
daa
cltd
scas
or
and
in
stc
stos
dec
dec
add
or
mov
dec
ljmp
mov
pop
inc
movsl
pop
movl
mov
fisubs
xor
in
mov
mov
mov
inc
xor
hlt
mov
stos
mov
lahf
dec
or
pop
inc
mov
lds
jge
mov
aas
dec
ds
mov
xor
xor
xor
jo
dec
scas
divps
fwait
stc
lret
icebp
adc
fisubrl
cmp
push
jns
fcomps
adc
cmp
add
and
rol
jae
and
inc
pop
or
and
sbb
push
dec
jl
shrb
jecxz
orb
movd
mov
xor
lods
inc
rcll
push
fxch
xchg
es
out
pop
mov
cmp
nop
test
sub
xor
fisubs
and
je
inc
cltd
inc
outsb
test
popa
aas
mov
add
mov
in
loope
movsl
mov
jns
sahf
cmp
rcl
orl
dec
mov
inc
test
mov
adc
in
mov
pusha
cmpsl
imul
orb
test
or
push
dec
mov
add
xor
pop
mov
or
cmp
inc
movsb
pop
lret
adcb
scas
fidivrl
nop
setnp
aaa
stos
mov
mov
test
sub
add
xchg
in
inc
ljmp
xor
jl
dec
sub
and
jo
or
jmp
lret
sti
push
add
shlb
aaa
insl
jle
jp
repnz
add
inc
inc
and
adc
orb
add
sub
jno
sub
pop
pop
sub
in
sub
pop
loop
stos
and
inc
pop
push
mov
dec
or
fists
and
sub
lods
adc
add
subl
aam
inc
insl
gs
test
lahf
cmpsb
out
push
sub
cmp
mov
mov
repz
sbb
cld
mov
add
inc
pop
rcrb
aad
call
pop
fs
fimull
and
sub
mov
stos
jl
aam
cmp
fsubrl
aas
pop
inc
call
mov
and
addr16
and
adc
jp
cmpsl
mov
fs
int3
cs
mov
arpl
das
dec
sahf
cmpsl
sub
or
cwtl
or
sbb
ret
iret
icebp
std
jbe
fsubr
adc
neg
add
sub
aam
repnz
test
pop
packssdw
cs
pop
insb
sub
ret
adc
pop
jne
fsubl
add
das
xchg
in
ret
hlt
out
sti
or
pop
in
sbb
push
test
and
and
pop
ficompl
mov
sub
fwait
inc
cmpb
lret
stos
or
pop
xor
jns
or
push
inc
pop
or
gs
fildl
repz
ds
in
xchg
push
mov
push
es
sbb
lcall
pop
sbb
mov
jbe
dec
cli
xchg
popf
mov
xor
scas
ljmp
cmp
dec
xor
repnz
xchg
push
in
push
in
xor
adc
jbe
das
jnp
int
out
push
cmp
adcb
xor
pushf
inc
inc
lahf
sahf
pop
jne
adc
sbb
int3
popa
in
cmpsb
mov
popf
pop
pop
pusha
adc
sbb
out
subb
mov
xchg
jle
pop
inc
dec
rorb
rorl
jg
jae
cmpsb
ret
les
and
dec
mov
jecxz
dec
cmpsb
stos
xchg
das
cld
cmp
rcll
sub
mov
lcall
pop
jl
xchg
sahf
sbb
mov
shrl
mov
sub
icebp
jb
xchg
mov
ljmp
fstpl
jb
test
adc
lock
rorl
fnstcw
push
bound
mov
aam
dec
sub
mov
xor
cmp
orb
xchg
cld
clc
jb
out
cltd
pop
dec
sar
cvtps2pd
pop
inc
dec
aas
push
jo
ss
sub
push
lret
mov
cli
fs
mov
je
aam
je
mov
push
push
loope
jecxz
rcr
gs
cli
mov
add
sub
cmp
test
cmp
ja
shlb
adc
mov
mov
push
mov
dec
outsb
jmp
mov
lret
sarl
inc
fcmovu
add
stc
push
push
adc
push
es
sub
jmp
and
cmp
adc
sbb
adc
inc
std
and
mov
pop
cmp
cmp
outsl
out
arpl
daa
pop
std
push
jge
sub
je
and
in
aas
out
jp
jo
lock
outsl
fisubs
sbb
or
repz
lds
xchg
mov
jge
ljmp
xor
shl
lds
rorl
movsl
outsl
jmp
and
sar
or
stc
push
idivb
clc
cmp
nop
repz
push
sar
sub
fidivrs
and
pop
push
int3
adc
call
jp
lock
stos
pop
andl
add
cltd
inc
and
dec
std
clc
pop
mov
loop
decb
bound
inc
cmp
pop
cmp
and
and
xorl
movsb
mov
jmp
and
ret
dec
pop
cld
sti
sbb
push
xor
test
sub
call
sbb
mov
xlat
ss
lds
or
cmp
pop
pop
add
pop
add
push
test
add
jmp
iret
repnz
pop
pop
dec
jmp
xchg
jg
bound
in
jmp
scas
mov
mov
lcall
and
mov
outsb
cld
mov
jne
fs
iret
or
stc
jns
cli
mov
sahf
fsub
stos
notl
popf
adc
lods
ljmp
adc
sub
ds
mov
mov
cld
arpl
mov
cld
add
daa
sbb
pop
rcl
xchg
and
jb
sbb
daa
lods
imul
ret
add
or
mov
dec
sbb
fidivl
xchg
jns
scas
jp
mov
movsl
or
repnz
les
sbb
or
mov
adc
inc
repnz
fbstp
movsb
lea
and
sahf
adc
push
push
adc
push
pop
mov
scas
sarl
add
inc
loop
lret
jg
adc
shrb
inc
inc
mov
enter
lcall
call
data16
mov
outsl
jnp
mov
cmpsl
push
fcomps
fisubrs
shrl
repz
popa
ja
shl
sub
mov
cmp
or
jo
mov
mov
push
fimull
adc
add
faddp
dec
push
cmpsl
add
adc
fidivrl
aad
push
push
fwait
repnz
mov
rcll
scas
lcall
cld
jecxz
ret
sub
jmp
mov
aas
insl
mov
xor
cmp
jp
and
imul
add
jmp
lods
sbb
std
insb
lcall
push
pminsw
pop
loopne
sub
rorb
jecxz
inc
dec
outsb
sbb
rclb
out
xchg
dec
and
cmpsl
insb
movsl
ja
in
push
cli
aaa
or
fists
hlt
inc
mov
andb
lret
adc
sub
ror
ja
mov
jge
jnp
imul
pop
sub
mov
mov
adc
push
clc
mov
xchg
xchg
je
or
xor
insl
sbb
addl
cmp
jge
jns
or
das
xchg
outsb
fwait
dec
aas
std
lcall
clc
mov
in
xchg
test
cmp
push
xchg
aam
push
add
mov
shlb
pop
icebp
mov
push
push
loope
sahf
pop
push
jge
lcall
xor
mov
jae
xor
mov
in
aad
cli
shrb
push
popf
mov
xlat
sub
cmp
cli
xlat
iret
lds
xlat
dec
rclb
sub
xchg
cmc
jo
out
sarb
push
mov
shrb
sarl
mov
push
cmp
mov
insl
jl
add
out
shll
pop
aaa
jnp
ja
out
jb
int3
xor
push
inc
aam
sub
stos
pop
fwait
stos
inc
inc
mov
add
out
cmc
pop
stc
repz
mov
add
out
loope
mov
mov
fwait
inc
fdivl
lods
sbb
cltd
movl
xor
addl
xchg
xchg
in
arpl
mov
sbb
sub
mov
xor
mov
clc
dec
mov
cmpsl
xchg
lea
movb
adc
xchg
cs
or
and
out
iret
mov
fisubrs
push
mov
xor
or
cmp
pop
mov
into
push
push
and
and
push
sub
mov
or
mov
cmp
jb
jp
popa
scas
ss
cmp
fmulp
cmp
int3
cld
loopne
jl
xchg
stos
xor
xchg
ds
cmpsb
push
fidivl
xor
lds
cmp
and
cld
movsl
icebp
adc
insb
sub
mov
icebp
ljmp
mov
sub
mov
ds
or
jnp
das
sub
sti
inc
mov
add
in
sub
outsl
mov
sbb
cmpl
cmp
fsubp
pop
out
sbb
ss
xchg
adc
mov
mov
cmpl
add
and
mov
adc
mov
xor
mov
addr16
jb
jg
or
adc
pop
mov
jp
mov
jo
or
popf
push
jmp
dec
push
push
into
lcall
rcl
fdivrs
int3
popf
and
pop
mov
inc
int3
cmp
pusha
mov
ds
iret
arpl
out
popa
mov
sbb
outsl
ret
fidivrl
gs
pop
out
sbb
pop
jae
std
cmpsb
and
cmp
mov
cmp
mov
and
or
jg
enter
add
inc
mull
out
push
push
outsl
shlb
push
test
mov
fists
xor
scas
outsb
jmp
fwait
pop
cmp
shl
fstpt
mov
int
xchg
inc
pop
das
and
mov
sbb
arpl
in
outsl
movsl
cmc
jne
int3
insl
loopne
add
sub
in
stos
mov
push
dec
and
divl
push
scas
rol
mov
and
cmpsb
sub
adc
popa
daa
shld
dec
je
movsb
popa
cwtl
mov
and
ss
movsb
sub
pop
sbb
les
inc
pop
popw
mov
dec
in
mov
push
fcomp
adc
js
cwtl
test
loopne
pushf
icebp
repnz
test
rcrl
fwait
cmp
aad
cmp
xchg
adc
jl
mov
pop
mov
mov
popf
push
pushf
repz
fidivrs
pop
mov
leave
and
pop
dec
lcall
in
jmp
sub
lods
push
leave
mov
cmpsb
mov
repnz
popa
push
fwait
lret
clc
out
jo
adc
and
shl
mov
mov
imul
xchg
shlb
daa
mov
lock
mov
leave
mov
aas
enter
mov
cld
cltd
fs
sbb
mov
loopne
arpl
leave
mov
arpl
pop
cs
int3
mov
cmp
xor
pop
cmp
pushf
cmp
mov
sbb
pop
les
jbe
add
mov
gs
mov
cmp
mov
jo
inc
idivl
movsb
into
dec
jae
cmp
ja
jne
jge
outsl
out
adc
mov
negb
cmpsl
lahf
cld
cmc
xacquire
fcomps
sbb
lret
cmpl
push
call
add
mov
mov
in
xor
jnp
mov
imul
inc
in
push
sarb
adc
mov
pop
imul
add
repnz
stos
std
mov
addr16
pusha
es
lcall
aaa
mov
fs
lret
add
adc
data16
sbb
outsl
in
outsl
pop
push
cld
or
cmpsb
pushf
dec
xor
addb
mov
mov
mov
xchg
push
mov
dec
hlt
outsb
mov
andb
sub
dec
mov
adc
ror
sub
ret
jle
fsubl
pop
jb
gs
pop
push
jmp
cmp
xor
cwtl
push
push
mov
lock
aas
mov
lcall
pop
pop
jbe
mov
lret
inc
sub
push
xchg
negb
lea
xor
imul
daa
add
jne
or
sahf
jl
xor
sbb
push
out
xchg
sbb
xor
pusha
cmp
cmp
and
jae
xor
hlt
fcomp
mov
aas
sub
andb
loopne
push
rclb
cld
and
cmp
mov
pop
lret
xchg
js
and
inc
sub
sahf
or
ja
add
std
xchg
pop
inc
sar
insl
or
lods
xchg
sbb
sub
fbstp
repz
mov
flds
mov
aam
cld
and
lcall
shlb
jmp
pop
addr16
enter
ljmp
aaa
out
fimull
xchg
decb
xchg
sub
sbb
in
fnsave
push
loope
pop
xchg
jo
mov
mov
ljmp
add
xchg
adc
sub
sti
fadds
int
ljmp
add
in
and
push
mov
push
mov
cmp
mov
add
push
cmpsl
daa
in
mov
dec
cmc
aaa
jle
ljmp
hlt
push
dec
jo
ficomps
aad
xor
leave
mov
ja
sbbb
lret
push
sub
xor
imul
addr16
js
mov
cmpsl
add
jno
in
sub
cmp
jg
inc
pop
loopnew
es
mul
and
popa
and
sbb
in
cmpsb
outsb
iret
push
ja
sbb
jl
aaa
sbb
cmp
cwtl
xor
pushf
out
xchg
and
js
xchg
add
insb
cmp
ljmp
fidivs
aam
dec
and
mov
les
jle
mov
inc
push
les
dec
shrl
pop
jl
dec
push
add
xor
fcoms
mov
cmp
ja
mov
cli
add
lods
gs
and
adc
hlt
aas
sbb
dec
sbb
insb
jl
mov
call
out
cld
jne
pop
pusha
cmp
add
push
loope
jno
adc
ret
push
jne
icebp
lret
add
sbb
pop
mov
pop
insl
add
andb
mov
sub
mov
cmpsb
cmp
xchg
push
adc
pop
das
lcall
jmp
rcr
mov
pusha
in
fs
into
jae
lods
insb
enter
out
rorb
cmp
push
mov
ljmp
je
mov
ret
rorl
fs
push
pop
push
add
inc
rcll
lods
push
test
insb
lret
testb
sub
imulb
cmp
cmp
cmp
fs
ret
sbbb
int
in
add
xor
sub
fcmove
jne
add
ljmp
test
xchg
mov
aam
mov
jg
push
loopne
dec
mov
mov
xchg
pop
ja
mov
in
jno
pop
inc
jno
push
pop
cmpsb
cmp
popa
pusha
sub
std
dec
mov
loopne
movsb
push
and
inc
and
sbb
pop
sbb
cmp
outsl
cmp
mov
xchg
mov
xchg
mulb
sbb
stc
les
xchg
mov
pop
out
xor
aaa
sub
sbbb
outsl
xor
jp
imul
ss
push
push
mov
inc
pop
gs
ret
stos
inc
sbb
test
inc
push
inc
inc
sub
or
daa
ret
test
idiv
icebp
fcomp
cmp
dec
mov
in
jbe
arpl
roll
xorb
adc
mov
mov
mov
mov
mov
and
aaa
push
cmp
adc
mov
fidivrl
push
mov
jne
outsb
movsb
or
add
jg
mov
or
push
int
lret
jo
mov
mov
or
sarb
mov
loop
or
mov
fidivl
push
movsl
pop
sub
mov
sub
in
jo
mov
xlat
push
hlt
push
test
flds
movsb
inc
shrb
mov
or
lods
xor
mov
rorb
in
aas
push
ljmp
imul
mov
pop
rorb
int
imul
aaa
mov
cmp
pop
jnp
inc
push
xchg
dec
roll
outsb
mov
xor
test
xor
dec
xor
pop
dec
xor
sub
push
ljmp
jb
pop
sbb
mov
bound
data16
jb
int
mov
dec
or
sub
subb
int3
add
mov
add
pop
jnp
lcall
ret
add
fcoml
lea
cwtl
fimuls
cmpb
push
and
scas
cmp
fisttpl
jecxz
out
lret
inc
jne
fs
xchg
test
movsb
pop
mov
mov
mov
pop
cmpsb
push
sbb
mov
mov
lock
gs
push
ret
jge
push
dec
or
jno
add
add
xor
jmp
mov
push
outsb
outsl
rcrb
jo
xchg
aam
js
mov
mov
dec
mov
adc
vandps
bound
push
sub
pushl
pushf
iret
mov
adc
sbb
mov
mov
scas
popf
sbbb
and
dec
call
dec
test
lods
mov
rorb
loopne
add
and
stos
repnz
or
jo
hlt
pop
dec
hlt
les
lcall
xchg
fcoms
imul
icebp
popa
addb
fadd
mov
mov
add
sbb
rolb
mov
aas
inc
cmp
xor
pop
out
ljmp
xchg
aam
test
nop
xor
fdivp
adcb
je
inc
xchg
aas
add
loop
mov
add
xor
sar
or
jl
jae
cmp
xchg
je
lods
pop
divb
test
pop
cmp
faddl
daa
inc
test
mov
lea
cmp
xor
cmp
xchg
dec
stos
push
mov
lds
faddl
mov
jne
adc
cmpsb
popa
adc
stos
fsubrl
in
or
imul
mov
mov
push
cwtl
jne
movsb
popa
adc
lods
into
sbb
popf
mov
add
les
mov
mov
or
je
cld
inc
dec
leave
cmp
and
cmp
xor
mov
aam
in
ljmp
pushf
in
sahf
push
push
pop
fwait
stos
push
sub
dec
inc
xor
cli
push
adc
xchg
add
push
sbbb
out
fnsave
loopne
fwait
inc
sub
xchg
fldenv
ret
ja
cmp
lds
xchg
fwait
test
dec
mov
push
cltd
xchg
adc
int3
sub
test
or
mov
mov
fnstenv
push
enter
dec
push
fdivl
ret
and
dec
lds
and
hlt
xchg
adc
add
je
lret
push
jp
mov
imul
cmp
push
gs
aaa
test
adc
push
cmpsl
ss
pop
mov
ret
insb
and
or
cli
in
cli
sub
sub
loopne
mov
cltd
hlt
rol
pop
xchg
pop
mov
cmpl
daa
add
mov
fdivrs
test
cmp
lea
mov
inc
jg
push
shll
in
stc
sub
inc
fimuls
stc
push
adc
mov
int
sbb
jno
xor
dec
push
notl
cmp
outsl
out
mov
rorb
jbe
jp
mov
nop
sbb
xor
inc
int
es
lods
iret
dec
mov
sbb
bound
pop
add
lret
pop
into
xor
mov
das
cmpsb
in
and
jns
imul
lods
loopne
mov
orl
rcrb
cs
dec
cmc
stc
jmp
data16
pop
add
adc
ret
nop
mov
adc
push
clc
mov
xchg
cmp
ret
shlb
pop
and
jo
loopne
ds
arpl
cltd
dec
int
out
pushf
stos
fs
xlat
jb
in
movsl
xor
cmp
int
push
xor
sar
mov
mov
je
jl
iret
mov
jmp
mov
inc
in
sbb
in
stos
pop
ret
dec
mov
sti
cmp
stc
pop
mov
rorb
pushf
push
inc
cmpsl
sub
mov
sbb
xchg
pop
fisttps
outsl
xor
lds
sbb
das
adc
sub
int3
push
fcoms
push
cmp
orb
lock
inc
int3
es
mov
and
in
cmpsl
sub
jae
movsb
xor
xchg
push
sahf
xor
in
ss
sub
sbb
clc
out
push
in
fistps
mov
pop
push
test
push
and
out
lret
in
push
outsl
xor
push
es
xor
test
roll
xor
jle
dec
adc
dec
lcall
mov
cmp
ss
jg
daa
dec
push
lods
das
mov
adc
inc
dec
lret
adc
je
scas
jecxz
aam
sbb
test
lods
xchg
movsl
les
push
push
gs
or
fwait
xchg
ja
push
jl
mov
mov
adc
rclb
mov
jnp
repz
imul
adc
pop
push
outsb
js
call
sbb
jbe
js
fldt
mov
les
adc
sbb
xchg
fs
rcl
pop
aam
lock
dec
inc
pushf
mov
lock
pop
xor
dec
cmp
sub
insb
mov
hlt
jbe
xacquire
xchg
call
xlat
ljmp
mov
mov
fs
movsb
jbe
adc
mov
cmp
push
and
ds
cwtl
int3
push
cmc
arpl
xchg
mov
mov
mov
scas
add
fwait
in
fdiv
mov
cmp
pop
addr16
fadd
pop
jp
mov
int3
outsb
mov
or
xor
into
iret
xor
insb
mov
rcll
inc
andb
ret
arpl
push
or
je
dec
rcrb
mov
sub
aam
aas
push
sub
xor
pop
icebp
inc
leave
orb
jo
shl
push
rcr
jo
les
xlat
pop
sub
leave
mov
or
cmp
adc
rcr
and
jo
cmpsl
mov
sarl
repnz
popf
pop
pop
push
dec
popa
xor
fnstsw
sarl
incb
cmpsb
call
push
add
push
ss
addb
or
adc
push
lret
push
out
add
sub
addr16
loop
mov
inc
ljmp
xchg
fyl2xp1
repz
mov
lret
push
dec
mov
cmp
push
ss
fs
sarb
sbb
jo
fisttps
pushf
mov
repnz
and
insl
pushf
movsl
sub
mov
out
or
xchg
ljmp
nop
push
and
cmp
mov
das
xor
sub
int3
aaa
cmpsb
xor
sahf
cli
leave
push
push
clc
aas
aaa
shrb
insb
rolb
xor
jecxz
jp
shl
loopne
mov
cmpsl
pop
nop
int3
rolb
mov
int3
jno
adc
imul
cmp
idivb
mov
dec
std
add
test
js
scas
scas
lret
fldcw
push
loope
out
jecxz
xchg
and
push
push
push
dec
inc
sub
addr16
or
cmpsl
sub
dec
sti
mov
jl
sbb
fnstsw
iret
fstpl
jnp
or
xchg
inc
xchg
repnz
add
enter
lods
push
inc
in
sub
xor
divb
iret
lea
popa
jmp
cmpsb
ficomps
fidivrs
sub
sbb
rorl
stc
cmp
cmc
mov
jle
mov
inc
imul
sub
std
mov
js
ljmp
cmp
out
fistpl
insb
int
cmp
jmp
push
push
rorb
testb
data16
bound
pushf
dec
lods
mov
stc
xor
mov
jle
outsl
mov
xchg
lods
mov
pop
mov
lds
cmp
and
cli
pushf
mov
sbb
mov
cmp
lods
push
mov
cmp
scas
add
mov
test
adc
mov
sub
insb
mov
lcall
push
jno
int3
dec
test
dec
or
xor
cwtl
ss
and
rorb
lret
xchg
bound
das
mov
push
cmp
dec
xchg
inc
sbb
jmp
push
hlt
sub
js
popf
cld
shl
hlt
ljmp
das
xor
jbe
ret
out
les
imul
and
xchg
aaa
int3
cmp
shll
les
std
sub
xchg
push
xchg
mov
pop
cmp
addl
pop
pop
pop
outsb
lods
fnsave
xchg
pop
sbb
arpl
je
or
inc
mov
mov
les
cmp
jno
es
jbe
jecxz
in
push
dec
rolb
and
repnz
nop
sahf
mov
andl
cmpsb
sub
cmc
cmpsb
xchg
cmp
mov
mov
jge
and
add
rcrl
sarb
add
xchg
add
pop
int3
addl
and
add
fdivs
inc
sti
dec
jmp
sbb
or
out
test
cld
push
ja
movsb
imul
mov
inc
pushf
sub
pop
mov
sahf
sar
adc
xor
stc
lcall
or
xchg
mov
dec
mov
js
lahf
push
jmp
inc
dec
ret
ljmp
neg
xchg
sbb
mov
cli
or
divl
jmp
mov
fistpll
mov
pop
xor
aad
repz
ss
xor
iret
ret
sbb
je
lea
ret
mov
inc
push
jmp
jmp
xchg
xchg
movsl
fsubrl
test
pushf
xor
sahf
fstpl
clc
mov
sub
cmp
sub
push
mov
jno
iret
dec
fcmovbe
mov
adcl
fwait
aam
inc
dec
xor
bound
lea
sbb
adc
cmp
xchg
cmp
jge
inc
ret
out
rcrl
xor
sub
test
out
dec
cmpsl
fsubrl
ljmp
xor
jmp
mov
pop
sub
push
adc
adcb
js
leave
cmp
mov
pop
clc
int3
lretw
cmp
or
sub
lcall
rcr
jo
scas
into
das
sbb
ret
adc
pusha
or
fldt
jecxz
pop
or
fnstcw
cmp
mov
ss
mov
lods
test
lds
cltd
jp
dec
mov
inc
leave
popf
sbb
popa
pusha
sahf
test
adc
jb
mov
jbe
in
je
dec
decl
test
fsubrs
and
jo
faddp
cmp
nop
lds
fldt
aad
push
or
xchg
imul
cmp
jno
add
jbe
mov
cmp
and
in
add
js
daa
cmpsl
jnp
in
cld
mov
lahf
sub
xchg
pusha
jecxz
lahf
leave
aam
push
mov
mov
in
ss
cmpsb
fisubs
sub
jo
inc
lods
add
rol
je
pop
sub
mov
in
ret
cmp
popf
daa
cmp
test
jle
test
dec
jne
hlt
inc
push
test
ds
jl
enter
repz
jo
push
mov
roll
pop
sub
mov
add
dec
test
loop
push
pop
out
shll
mov
mov
xlat
mov
lcall
in
inc
mov
aad
pop
adc
cltd
or
nop
push
dec
and
cli
dec
pop
cmpsb
pop
or
cli
out
xlat
outsl
mov
shrb
add
cmp
mov
js
aam
and
mov
repnz
push
add
push
rcl
icebp
mov
fstps
cs
cmp
cmpsl
mov
int3
xor
add
or
jp
sbb
cmp
push
sub
popf
js
inc
or
aad
xor
xchg
sub
sub
shrb
clc
push
pop
adc
enter
inc
aas
push
test
pushfw
cmp
pop
cmp
mov
lret
out
cmp
xor
lcall
xor
clc
movsb
test
and
mov
or
xor
cmp
aam
mov
ljmp
es
inc
aad
and
mov
xchg
mov
inc
aam
and
jb
cwtl
jp
ja
and
xchg
xchg
loopne
inc
fucompp
mov
inc
inc
int3
jbe
les
mov
xchg
cld
ret
add
stos
popf
or
dec
out
cmpsl
repnz
pusha
push
xor
cltd
dec
inc
fs
fidivrs
adc
jns
inc
adc
xchg
or
inc
cld
mov
std
mov
jle
in
pop
jg
mov
and
pop
push
xor
popa
push
stc
lret
sarl
hlt
aaa
xchg
into
pushf
or
ret
dec
pop
lea
stos
test
addl
pop
data16
mov
pop
mov
inc
test
notl
xchg
insb
outsb
xchg
jecxz
sub
dec
mov
push
dec
dec
adc
pop
je
cmp
jne
int3
lods
add
mov
and
adc
adc
popa
arpl
je
mov
inc
sbb
call
mov
and
repnz
sbb
fnsave
sahf
mov
cmc
in
nop
sahf
inc
cmp
in
dec
xor
popl
fisubrs
mov
or
mov
imull
mov
cmpsl
pop
fdivs
mov
mov
cmp
mov
aam
nop
push
popa
xchg
pushf
pop
inc
pop
sahf
test
or
push
xchg
adc
int3
push
jmp
adc
mov
shlb
sub
out
ret
and
add
mov
addb
ss
rcll
sbb
cmp
xor
mov
lcall
push
jg
xor
or
mov
xor
inc
mov
popa
gs
push
or
jle
test
xchg
xchg
ljmp
mov
into
sbb
aad
mov
sub
fidivs
fsts
adc
xchg
jmp
data16
cs
sbb
ds
push
addr16
das
mov
fwait
iret
out
xor
push
sbb
cmpsb
xlat
movsl
out
mov
ds
or
and
ljmp
fwait
mov
mov
sbb
iret
or
and
and
mov
push
xor
lea
fidivs
xchg
int3
push
add
pop
mov
popa
mov
mov
outsb
cmc
or
sub
in
mov
mov
ljmp
jecxz
ljmp
pop
xor
std
les
frstor
xor
push
add
xchg
mov
cwtl
add
cmpb
test
mov
out
shlb
sub
or
aas
xchg
push
repz
push
mov
pop
jmp
or
je
idiv
stc
popf
pop
mov
mov
loopne
out
into
test
and
shlb
mov
ja
fdivr
loope
cmp
mov
mov
jo
jbe
pop
mov
push
pop
aam
and
ljmp
mov
push
aam
xchg
aaa
das
push
mov
repz
mov
pop
sbbl
push
and
xlat
out
pop
pop
decb
dec
in
enter
test
sbb
or
push
outsb
cmp
leave
shl
mov
scas
insb
add
inc
jmp
faddl
push
and
add
leave
int3
add
lods
std
loope
jno
incb
in
xchg
xchg
sbb
xor
out
int3
bound
aaa
push
gs
pop
or
test
std
xor
lea
and
rcr
into
mov
popf
lret
xor
or
dec
dec
mov
xchg
and
dec
jg
pop
aaa
jnp
cmpb
and
sub
pop
repnz
push
mov
cld
mov
data16
add
fists
dec
jbe
nop
cmp
lock
aam
in
repnz
jmp
fisubrs
mov
sbb
subb
mov
push
pop
int
sub
pop
fimull
pushf
mov
movsb
mov
mov
mov
clc
out
xchg
pop
mov
lds
fwait
jmp
shr
or
fs
loopne
mov
pop
hlt
or
faddl
mov
sbbb
inc
sbb
xchg
test
pushf
xchg
fdivrs
xchg
jmp
jbe,pt
push
push
mov
mov
je
adc
std
shlb
add
popa
mov
stos
enter
xor
fldt
insb
ljmp
pop
rcl
push
sarb
xor
xor
mov
or
cmp
sub
adc
sub
dec
push
push
pop
movsb
cwtl
imul
sti
adc
sub
into
mov
or
mov
call
or
cmp
ss
xchg
hlt
sbb
stos
mov
xchg
xchg
fimull
push
test
adc
ss
popa
push
rcl
stc
sbb
and
cmpl
mov
push
dec
or
push
loop
pop
rcl
dec
sub
sub
das
xchg
xchg
xchg
pop
ss
shlb
push
xor
fldenv
pop
adc
stc
jo
nop
mov
je
jno
cmpsl
cltd
mov
fldcw
test
lods
mov
xlat
push
shrb
int
dec
test
mov
mov
mov
xor
or
dec
ret
push
pop
xor
movsl
pop
mov
jo
fidivrs
loopne
sbb
ror
repnz
int
or
mov
das
cmp
int
sub
xor
pop
adc
xchg
inc
test
loope
sbb
xchg
sbb
enter
adc
pop
xor
mov
mov
mov
pop
shlb
cmp
sub
aam
dec
mov
mov
arpl
adc
push
inc
sti
dec
cld
mov
lods
or
sbb
cmp
cli
in
hlt
push
pop
pop
lods
pop
test
push
outsb
push
pop
sbb
dec
sub
sub
cmp
lret
jmp
push
mov
sub
sub
dec
push
fcompl
push
cmp
aad
pop
cmpsl
push
in
mov
movsb
lret
xor
lea
inc
mov
dec
and
or
pop
mov
adc
push
les
adc
sub
sub
in
cvtdq2ps
mov
cwtl
jnp
int
lcall
mov
stos
cs
jo
mov
daa
inc
insb
xor
fsubrs
cmp
mov
fcoml
mov
popf
xor
jae
mov
inc
push
mov
mov
incl
roll
nop
mov
pop
push
fidivs
in
lahf
pop
ljmp
inc
cmp
loop
ficomps
inc
mov
mov
dec
push
ret
jp
jo
out
mov
lods
daa
jbe
idivb
cmp
pop
xor
lret
out
jg
loope
iret
pop
fisubl
arpl
push
cli
add
and
inc
insb
xor
dec
mov
pop
pusha
jg
cli
negl
cs
pop
fmuls
push
cmp
adc
mov
movsb
pushf
xchg
aad
shrb
fistps
inc
mov
mov
pop
xchg
sub
scas
out
jg
dec
xchg
adcb
sbb
dec
ds
sbb
sub
cmp
mov
mov
jb
imulb
mov
mov
fstpl
cmpsb
in
adc
push
mov
and
daa
dec
mov
in
pushaw
pusha
flds
ds
or
xchg
out
dec
add
subb
ja
repz
or
inc
sbb
lret
cltd
push
cld
inc
aas
pop
pushl
mov
and
sub
shl
test
aam
stos
adc
int
outsb
sarl
ss
xchg
aam
popa
lods
inc
addl
adc
mov
mov
dec
fsubrp
les
dec
push
sub
mov
push
cmp
adc
inc
ds
pop
scas
mov
adcl
pushf
das
ret
sahf
outsl
sub
aas
pop
or
es
in
jo
sahf
ja
adc
test
pop
mov
pushf
pop
sub
lahf
aad
es
adc
insb
push
popf
pop
push
inc
cli
and
and
dec
xor
adcl
jg
ret
mov
imul
dec
mov
xor
cld
aas
cmp
shll
dec
ret
sbb
test
scas
push
pusha
sub
dec
call
xchg
xor
cmp
mov
daa
rclb
sub
xlat
jb
sub
pop
jmp
fstpl
roll
movsb
outsb
ljmp
cmp
movl
rcrb
adc
mov
das
cli
push
popa
outsl
insb
pop
aad
in
and
cmc
mov
sub
jle
xor
sarb
jle
push
xchg
mov
sub
enter
and
xor
lret
js
popf
dec
in
cs
cmp
out
adc
into
xchg
adc
lods
pop
push
ret
clc
inc
push
pop
les
les
in
sub
ret
add
lock
inc
pop
js
sbb
dec
jbe
inc
mov
jno
int
add
scas
or
pop
sbb
enter
test
and
dec
insl
cmp
pop
cmp
cmp
sbb
inc
push
xchg
cld
sbb
cmp
rorl
pop
dec
pop
xchg
nop
cmp
mov
xchg
push
push
repz
dec
out
xor
cmp
cmp
out
ret
add
add
mov
pop
insl
add
lret
fimull
lret
or
mov
mov
adc
jo
jl
ret
rolb
sbb
add
push
or
lret
and
jg
sbb
test
nop
icebp
push
shl
mov
ja
push
decb
jnp
add
xor
aas
xor
pop
mov
fs
popf
dec
mulb
adc
rorb
in
dec
sub
add
jmp
sub
je
mov
into
call
insb
and
jbe
stc
mov
imul
aam
outsb
aaa
pop
pop
jl
lods
sub
insl
jg
stos
push
mov
out
adc
pushf
mov
pop
popf
ljmp
push
adc
adc
dec
es
lods
rclb
xor
jecxz
jle
and
push
mov
das
fcoml
xchg
cwtl
dec
out
fsubrs
mov
sahf
dec
or
sub
jno
pop
sbb
je
pop
stos
rorb
xchg
sti
addb
jo
add
aaa
mov
sub
subb
loop
ja
in
leave
sub
pop
dec
cmpsl
lcall
inc
sbb
pop
in
and
push
xor
cmp
imul
loope
push
js
push
cmp
sub
jge
inc
pop
adc
adc
addl
jmp
ret
pop
shrl
add
rclb
fildll
aaa
adc
mov
dec
push
test
dec
mov
push
ds
push
add
mov
data16
in
insb
push
rolb
lret
dec
adc
ja
ss
push
arpl
and
push
xor
mov
mov
mov
cltd
lods
inc
ret
cwtl
scas
adc
pop
add
xor
out
xchg
scas
mov
push
repz
ret
cld
sbb
mov
clc
outsb
xor
pop
xlat
inc
pop
jle
mov
xor
andb
inc
xchg
in
pusha
mov
in
pop
notb
mov
and
sbb
call
xor
xchg
jmp
call
leave
mov
movsb
mov
mov
add
imul
push
popf
mov
sbb
filds
or
push
out
mov
in
das
xor
pop
paddd
pusha
jnp
scas
insl
and
loope
mov
pop
add
mov
out
and
adc
sub
cmp
fucomip
in
lret
fistps
sbb
ljmp
dec
out
leave
mov
repz
shlb
out
adc
xchg
xchg
mov
xor
xlat
add
aam
fadds
into
pop
sbb
sbb
std
push
movsl
cmpsb
nop
mov
cmp
xlat
jae
cmpsl
enterw
into
nop
aad
mov
jge
in
mov
adc
shrl
cld
ja
aad
fsubs
daa
sbb
push
mov
cmpsb
xor
outsl
repz
cmpsl
fnsave
add
pop
jb
lret
adc
movsb
repnz
shlb
fwait
sub
in
sub
jmp
mov
aas
jo
fmuls
and
mov
stc
adc
sahf
sbb
in
cli
ret
jge
sbb
jmp
xor
xorl
sbb
cli
mov
lret
test
pop
fildll
xor
dec
mov
cwtl
push
cli
insl
ljmp
xor
ljmp
add
xor
push
adc
ss
addl
bound
cltd
inc
enter
out
sub
popf
jo
aaa
mov
xor
stos
cmp
popf
or
or
lods
enter
cld
in
daa
dec
aas
aad
mov
enter
add
adc
or
fmul
js
push
test
push
out
fcmove
std
icebp
leave
inc
jmp
fisubrl
xchg
or
xor
movsl
sbb
shr
scas
cli
mov
xchg
not
mov
dec
cmp
lcall
push
popa
sub
addl
xor
outsb
xor
pop
sub
mov
dec
rolb
adc
mov
mov
adc
ljmp
aas
pushf
add
xchg
je
imul
adc
or
bound
sbb
mov
test
lods
add
xlat
lock
out
mov
nop
sbb
in
int3
jnp
xchg
ret
ror
xchg
inc
or
xor
mov
mov
add
leave
popa
or
leave
out
aas
push
jmp
push
out
mov
xchg
xor
flds
jmp
call
ja
adcl
cli
je
lock
mov
push
and
sub
mov
sahf
data16
xchg
pushf
add
or
rorl
call
push
leave
nop
jl
ret
mov
cli
and
sub
test
xchg
mov
and
push
test
out
push
jb
xor
mov
mov
cmp
cmp
rolb
cmp
push
jp
adc
pop
fidivrs
mov
mov
loopne
mov
addl
add
sub
or
sbb
movsb
dec
jge
repnz
orb
addl
sub
mov
in
inc
dec
aam
xor
ja
jnp
out
mov
add
sbb
mov
into
enter
sub
cli
pop
mov
cwtl
stos
ret
out
pop
loope
jb
ret
add
sbb
or
out
pop
inc
shll
cltd
es
out
cmc
rorb
clc
daa
and
add
subl
sub
pop
imul
dec
or
xchg
repnz
aam
push
mov
mov
ljmp
cmp
add
adc
sub
mov
stos
push
cmp
sarl
jmp
cld
stos
mov
daa
clc
gs
add
inc
dec
push
fcomps
push
mov
ficoms
cmp
insb
xor
push
es
jae
in
mov
push
jae
pop
fcomi
aam
ret
jns
cmp
cmpsb
hlt
dec
sti
imul
cli
arpl
daa
push
jmp
rorl
sarb
sub
cmp
stos
xorb
pop
mov
in
fldt
lret
xchg
xor
js
xchg
push
xor
jno
pop
cmp
es
sub
mov
outsl
insb
mov
add
push
push
and
cmp
fiaddl
jg
adc
lahf
ljmp
push
in
dec
sub
mov
cwtl
shlb
mov
cli
sbb
les
dec
roll
mov
rorl
clc
cmp
lahf
sub
in
mov
into
add
sub
mov
mov
aam
pop
stc
add
cmpsl
and
dec
mov
mov
mov
lcall
cmp
push
jbe
cltd
pop
add
xchg
adc
in
pop
push
cld
jle
lds
jmp
cltd
mov
pop
sub
mov
lret
xor
dec
lret
nop
fwait
dec
ss
pop
es
repz
repz
cmp
outsl
cmpsl
lods
mov
rclb
push
jl
fs
xchg
fidivs
icebp
rcr
sahf
int3
sarl
xchg
fadds
mov
sub
call
pop
and
or
or
dec
scas
popa
nop
mov
push
testb
xchg
or
dec
push
loopne
jae
adc
mov
push
pusha
adc
and
and
cld
loopne
fwait
subb
cmp
in
andb
mov
icebp
jg
mov
fildll
add
fistpl
mov
adc
xor
stos
rclb
in
daa
pop
and
pop
mov
test
fimull
mov
pop
mov
movsb
xchg
push
sub
cmp
push
enter
outsb
clc
sbb
mov
push
push
xor
aad
pandn
mov
xchg
adc
jg,pt
jmp
repnz
push
insb
in
push
fdivrl
add
mov
fs
mov
inc
pop
out
fdivs
mov
bound
cs
out
xlat
jmp
adc
dec
aaa
movsl
jb
lahf
push
jg
lret
mov
adc
inc
pop
pop
mov
dec
inc
jg
mov
in
sbb
fs
out
imulb
loopne
and
jo
movsb
pop
xchg
add
jl
sahf
cld
mov
mov
sbb
inc
sbb
faddl
mov
sbb
fcmovu
or
adc
push
dec
lahf
imul
loope
test
jns
cs
inc
xchg
cltd
arpl
inc
sub
lahf
lahf
repnz
adc
xchg
sbb
daa
out
outsl
pop
pop
dec
jb
jecxz
xchg
mov
popa
xchg
outsb
sbb
imul
mov
out
dec
test
enter
lret
add
hlt
fisttpll
cs
mov
and
bsf
sbb
insb
jl
sub
add
cld
mov
pop
fs
imul
repnz
in
xchg
clc
ss
pop
push
cld
lcall
in
and
outsb
daa
repnz
data16
mov
or
lods
lock
dec
mov
dec
add
or
adc
lea
mov
push
add
add
dec
inc
ficompl
fists
jns
push
xchg
imul
mov
mov
movsl
jae
mov
mov
imul
jmp
push
sub
and
dec
testb
mov
cmp
dec
shlb
ret
sbb
pop
les
sub
lcall
inc
cmp
cmp
cmpsb
pop
sub
mov
stos
enter
jo
in
enter
notb
in
inc
outsl
popl
adc
movsl
insb
imul
rcrl
xchg
pop
and
mov
ss
imul
and
add
pop
cwtl
push
inc
nop
aaa
inc
push
jne
arpl
cld
mov
push
pop
xchg
dec
xchg
dec
and
mov
push
pop
mov
stc
lock
cld
push
movsb
ret
scas
xchg
popl
dec
xlat
mov
scas
aas
push
adc
rolb
out
int3
fisubs
test
pop
scas
inc
inc
data16
push
test
adc
fiaddl
data16
sub
and
mov
push
push
and
cmp
dec
fildl
inc
mov
ss
lods
in
adc
daa
rclb
cmpsb
adc
xchg
repnz
or
mov
lods
push
xchg
push
loope
test
push
push
add
mov
movsl
pop
push
mov
and
mov
dec
daa
shrb
cmpsl
inc
pop
sub
inc
loopne
xor
fldl
shlb
pop
loop
ficompl
std
sarb
xor
fnstsw
and
movsl
lods
pop
repz
imul
mov
test
pop
test
xchg
scas
mov
ss
xorb
xchg
inc
jbe
and
mov
mov
inc
push
push
es
mov
mov
inc
mov
cmp
pop
dec
daa
push
and
push
imul
jbe
jnp
mov
insl
fidivrs
inc
es
je
ljmp
imul
into
inc
sub
xchg
lods
movsl
cld
and
fcoms
in
sti
gs
push
lds
bnd
push
enter
cmpsb
xor
fmuls
roll
push
fsub
push
push
out
inc
lahf
xchg
mov
je
mov
mov
sub
mov
les
jp
jl
test
add
sub
repnz
loopne
hlt
pop
lock
adc
cmpsb
xor
xchg
mov
mov
nop
jb
sahf
pop
data16
sub
loop
je
sub
imul
pop
sub
cmc
push
sub
push
or
aaa
mov
sbb
loopne
stos
cs
mov
mov
outsl
mov
rcrl
push
addr16
mov
in
ret
fcoml
cmpsl
xchg
filds
mov
popf
ja
jl
sub
and
test
inc
xor
mov
int3
stos
jecxz
jns
or
mov
jnp
and
dec
addb
jecxz
out
shrl
andb
inc
pop
xor
int3
int3
push
sbb
inc
sti
scas
pop
jnp
sub
fidivl
xor
mov
adc
cmp
pop
fadds
or
add
call
pop
sub
jmp
ss
or
int3
lock
mov
roll
mov
test
pop
xchg
mov
mov
xchg
xor
lds
mov
popf
imul
pop
or
or
dec
mov
xchg
icebp
fisubs
addb
aad
pop
and
out
sub
ljmp
rclb
cmpsb
fistps
enter
dec
aaa
ss
mov
addl
pop
sbb
fwait
lret
and
jp
mov
jne
mov
pop
push
loope
inc
int3
xchg
cltd
nop
dec
inc
into
mov
cmp
xchg
pop
mov
add
in
std
xor
sbb
and
xchg
cld
jb
mov
hlt
push
xchg
jnp
popa
and
add
fwait
xor
xor
inc
jle
and
pop
cmp
mov
inc
into
lahf
cmp
js
mov
and
pop
push
ds
or
push
and
arpl
and
cmp
in
repz
addl
repnz
sub
daa
fiaddl
outsl
sub
loop
sahf
xchg
mov
pusha
les
add
mov
cmc
sub
jbe
mov
add
stos
sub
xor
push
stos
cs
lret
xchg
int
cs
cs
ret
movsb
sahf
int3
into
leave
repz
icebp
sahf
int3
daa
xor
cmp
pusha
int
adc
mov
lea
out
jle
mov
aam
pop
call
jae
je
ljmp
inc
rolb
mov
pop
out
aaa
ja
xor
or
shl
xor
inc
dec
sub
fistps
ficompl
adc
cli
mov
pop
push
es
repz
fdivl
insb
aas
sbb
sahf
push
sub
mov
dec
or
jno
mov
ds
imul
jmp
xor
test
push
ds
mov
xchg
jmp
push
jmp
int
mov
dec
jnp
leave
or
popf
xor
divl
mov
xor
pslld
in
sarb
movsb
inc
sar
fidivl
int
aam
lds
call
ljmp
cmp
jbe
fidivrl
jecxz
or
lret
jmp
xor
cli
mov
lret
push
dec
leave
pop
mov
cmp
mov
ror
and
rep
jmp
push
bound
sbb
push
ds
add
jl
adc
inc
insb
mov
jno
pop
push
or
pop
scas
inc
and
mov
jne
cwtl
pop
cmp
mov
test
xchg
cwtl
pushf
and
adc
dec
push
or
jecxz
mov
in
sub
out
js
push
inc
mov
jnp
mov
iret
pop
xchg
push
rcl
cmp
jae
mov
lcall
xchg
imul
lock
repz
insl
imul
xor
mov
sbb
outsb
mov
test
add
xchg
es
dec
pop
or
mov
or
in
or
fadds
or
test
imul
sub
pop
push
xchg
cmpl
inc
jp
push
sub
stos
adc
xor
out
cmpb
in
loope
cmc
xlat
fdiv
shll
fwait
loope
jae
cmp
fld
jg
sub
push
sahf
icebp
or
imul
sahf
loope
movsl
call
cmpsb
sub
xchg
movsl
shlb
cwtl
dec
pop
xchg
nop
cwtl
jge
outsl
dec
xlat
std
jmp
mov
lret
push
shrl
add
push
bound
cmpsb
loopne
icebp
jmp
inc
dec
add
pop
mov
jge
xchg
scas
ja
mov
mov
sbb
xchg
jno
cld
imull
xchg
sbb
pop
enter
push
cmp
cmp
cmp
nop
mov
or
pusha
cmp
dec
mov
idivl
insl
imul
mov
adc
mov
test
movsl
jmp
cli
cwtl
sarb
inc
pop
xchg
dec
je
sbb
mov
jmp
cs
mov
mov
adc
or
loope
jge
rorb
xor
jns
inc
loopne
rolb
or
out
mov
shrl
pusha
call
sbb
pop
xchg
inc
and
xor
jle
loope
jge
cmpsb
jne
ljmp
popf
push
hlt
jns
arpl
jne
int3
pop
sti
dec
xchg
mov
mov
inc
mov
adc
sub
stos
mov
and
inc
enter
ljmp
add
mov
add
cmp
leave
pop
movsb
pop
sub
cmp
push
mov
cmp
dec
sbb
pop
inc
xchg
dec
push
rorb
sub
add
scas
inc
stos
ret
lahf
pop
ret
cld
in
inc
mov
push
push
loopw
or
jl
xlat
inc
dec
fcomps
xor
push
add
filds
pop
pop
iret
push
or
xor
jle
rol
push
loopne
sub
mov
cmp
aaa
push
pop
divb
sbb
shrb
adc
inc
cmp
repnz
sub
cmp
test
hlt
xchg
sbb
xchg
inc
sub
mov
xchg
lahf
jae
popw
arpl
das
mov
cltd
xchg
imul
add
mov
mov
xor
push
push
mov
sbbb
xchg
js
loop
add
cmp
or
test
pop
loop
outsl
rorb
sub
mov
test
push
testb
mov
xchg
adc
mov
loopne
mov
ret
push
push
test
insl
jmp
adc
inc
cltd
test
xor
adc
or
ficomps
int
in
ffree
sub
shrd
lret
hlt
mov
shlb
and
push
cmp
dec
sub
shlb
push
cmp
pop
cmpsl
test
sarb
cwtl
dec
xchg
lods
sbb
push
adc
ficoms
addb
pop
xchg
mov
pop
lret
jno
lds
sub
or
in
adc
xchg
hlt
lock
and
cmpsl
xor
inc
push
ret
sbb
xchg
out
rolb
das
jmp
insb
out
imul
in
aas
jge
mov
and
cltd
push
enter
inc
and
mov
stos
jge
pop
dec
xlat
gs
setno
inc
push
fcomip
dec
cmpsb
jb
cmp
mov
mov
ja
movb
mov
add
mov
or
lods
mov
jp
fcmovne
sub
inc
xor
sbb
inc
cld
mov
sub
aad
scas
add
mov
push
test
out
rclb
add
outsb
aas
jecxz
fmull
mov
xchg
mov
cmp
hlt
repz
add
fsts
xchg
cmpsb
lea
loope
jns
test
dec
mov
add
pusha
or
jmp
inc
scas
add
add
push
out
xchg
adc
add
mov
adc
jo
jge
and
arpl
out
popa
mov
loopne
push
pop
ljmp
fcoml
mov
jecxz
mov
pop
ds
lea
mov
andb
sahf
mov
mov
push
test
jmp
ret
sahf
test
and
pop
arpl
push
out
sub
pusha
mov
sahf
mov
mov
cld
lret
and
out
mov
or
out
roll
in
and
aad
cltd
in
mov
fidivs
sti
pop
pop
outsb
dec
rcpps
es
sbb
or
faddl
shll
adc
xchg
xchg
pop
push
mov
movsb
mov
add
adc
mov
push
fwait
loop
bound
pushf
pop
cli
lods
aam
and
rclb
dec
or
adc
push
sbb
inc
jp
into
clc
mov
push
int
stc
pop
js
pop
pop
and
lds
xor
add
insl
add
mov
fnstsw
stos
scas
cld
dec
mov
iret
lret
cmp
in
hlt
cmp
mov
rorb
sbb
and
and
lock
jno
sbb
xchg
sub
mov
add
push
cmp
gs
ljmp
dec
test
cs
popf
lret
les
clc
aaa
sbb
mov
or
cmp
pushf
shrb
cmp
or
fsubrs
fstps
shlb
xorb
cmpsl
out
xor
call
test
add
sbb
lret
jecxz
cmp
pop
add
dec
test
arpl
hlt
push
cmc
int3
mov
push
pop
add
cmpl
imul
in
ljmp
add
call
fsubs
aad
arpl
insb
aaa
sbb
ds
repnz
mov
fcoms
les
dec
adc
pop
xchg
jns
int3
stos
xchg
out
push
sti
sbb
je
cmp
daa
lods
and
cmp
jl
xchg
and
xchg
dec
xchg
js
cmp
adc
es
push
sbbl
stos
lea
jb
adc
cld
and
fs
repnz
clc
inc
adc
shrb
cmpsl
mov
out
out
pop
mov
pop
daa
lahf
popf
mov
js
cmp
cmp
push
cwtl
ret
dec
adc
sub
jb
rcll
push
clc
adc
and
pop
cmp
pop
add
pop
or
testl
lds
push
addb
pop
aad
aas
cwtl
jl
lods
push
add
sub
das
mov
dec
subb
cs
scas
pop
mov
xchg
dec
or
rcl
push
adc
adc
ja
pushf
ret
push
cwtl
mov
ss
xchg
push
pusha
cltd
sbb
negl
mov
stos
lock
cmpsl
fistps
insb
xorl
jmp
pop
pop
mov
cmp
icebp
push
jl
in
or
or
fxch
das
xchg
aas
pop
adc
add
sbb
mov
idivb
dec
fsubrs
xchg
adc
std
lret
xorl
in
pop
call
mov
adc
das
xchg
je
outsb
leave
mov
jae
jno
lods
insb
fs
pop
xor
cmp
push
sbb
pop
dec
or
add
ret
inc
in
ljmp
out
xchg
cmp
popf
ljmp
sbb
icebp
cmp
jnp
cltd
pop
iret
dec
inc
stos
mov
sub
dec
jl
js
aam
xchg
imul
dec
xchg
pop
inc
enter
and
jp
js
mov
add
push
stos
push
pop
adc
aas
push
or
or
fcmovnb
sub
imul
add
or
push
icebp
out
loope
jmp
fmull
imul
test
aas
cwtl
inc
xchg
shll
lock
aam
mov
and
inc
jne
les
xchg
or
jnp
ds
push
outsb
mov
xchg
dec
cmp
in
rorb
add
in
xor
sarb
iret
sbb
sub
mov
movsb
jg
or
dec
sbb
add
lea
shrb
popf
inc
push
xlat
mov
nop
pushf
clc
sub
xchg
popa
cmc
loope
pop
mov
notl
push
sub
cmp
sub
push
and
xchg
lcall
pop
out
cmp
cmp
mov
cmpsl
dec
sub
dec
repnz
sub
adc
outsb
xor
stc
xchg
cmp
movsl
cmp
leave
mov
sub
mov
icebp
leave
push
add
sub
lcall
jle
add
push
stos
arpl
rep
xchg
mov
or
clc
les
loope
xor
adc
lock
mov
or
adc
sbb
cmpsl
shl
std
ret
fdivr
dec
cmp
test
sbb
loopne
push
fisttpll
hlt
cltd
popf
bound
cmpsl
xchg
xlat
xor
aaa
jb
mov
and
cmp
or
loopne
fsubs
sub
lds
into
pop
lods
out
mov
fstp
jl
loopne
mov
cmp
mov
or
in
jp
xchg
dec
das
fisttps
sbb
mov
sbb
pop
popa
push
inc
sub
jmp
jno
jg
inc
pop
addr16
or
testb
jmp
sub
scas
dec
loope
sub
shll
xorb
cltd
mov
dec
adc
scas
mov
sarl
repz
push
rcrl
test
aaa
xchg
mov
sub
xchg
out
rclb
int
setbe
repnz
hlt
es
sub
push
mov
dec
ret
insl
mov
decb
xor
push
or
sub
sub
mov
xor
push
ljmp
pop
push
dec
mov
push
sub
fs
sub
and
cmpsb
push
jmp
ljmp
je
cmpsb
adc
dec
sub
pop
bound
out
pop
add
push
cmpsb
pop
int
push
inc
lret
pop
mov
shrb
fwait
push
daa
mov
imul
out
dec
xor
sbb
mov
pop
lahf
rclb
fs
sub
out
and
pop
push
jnp
xor
into
adc
jmp
jo
ljmp
imulb
daa
or
or
insl
jno
inc
out
cmpsl
inc
adc
and
cwtl
nop
iret
dec
imul
dec
shlb
jns
sub
cs
adc
loop
imul
outsl
movsl
test
ljmp
les
dec
cmp
xor
or
imul
sub
movsb
cmp
adc
jae
mov
je,pt
lcall
movsb
dec
gs
sbb
js
sahf
xchg
sub
cmp
in
add
je
lcall
pop
cmp
sbb
cmpl
loope,pn
jo
fnstcw
aaa
movsb
xor
test
ss
xlat
xchg
and
or
jge
mov
loope
ret
movsb
pop
clc
aas
addr16
cmp
aas
lcall
loop
inc
int
mov
lahf
ret
xchg
stos
mov
mov
int3
int
mov
arpl
cmp
out
mov
mov
in
or
sub
daa
rcr
je
add
lret
push
pop
pop
push
int
pusha
xor
loopne
push
add
loope
inc
sbb
test
call
in
ret
insl
ds
andb
sbb
sub
sbb
adc
mov
insb
adc
xchg
cmp
dec
cmc
fistpl
lods
cld
rcll
push
sbb
icebp
jge
mov
push
jbe
iret
pop
push
cltd
out
push
jmp
movsb
cld
jmp
jb
push
cmp
fistpl
mov
push
push
push
ret
jae
fidivrl
add
mov
orl
lahf
ficoml
xor
lods
orl
jmp
cmp
xchg
aad
push
push
dec
cmp
jb
cmpsb
or
mov
or
scas
subl
or
xchg
sub
shr
push
sub
cmpsb
movsb
inc
sub
cmpsb
sub
outsb
movsl
mov
int3
fiadds
sahf
push
popa
lea
leave
add
xchg
ret
xor
popf
int
aam
inc
or
lods
jmp
cmp
push
fiadds
roll
add
dec
cmp
and
inc
nop
loopne
in
pop
out
mov
rclb
inc
xchg
les
sti
call
ds
mov
dec
mov
test
or
sbb
out
dec
xlat
add
in
fildll
dec
in
inc
hlt
in
or
daa
sub
sub
add
fwait
cmp
gs
out
adc
mov
xchg
inc
xor
call
dec
inc
add
sub
or
dec
lret
fmulp
shr
dec
jmp
shl
aam
mov
pushl
enter
icebp
addb
out
mov
cmp
push
in
add
shrb
cwtl
bound
icebp
cmp
and
out
in
subl
test
inc
lods
fildll
icebp
dec
fpatan
pop
pop
aas
push
lret
cltd
imul
popa
add
test
das
int3
les
pop
out
ja
sbb
xchg
mov
cmp
popl
imul
test
mov
push
cmc
cld
jbe
jg
stos
fldt
xchg
ljmp
cmp
pop
lock
sbb
lods
popa
mov
pop
cli
out
adc
ret
xchg
ja
enter
dec
pop
jb
dec
xchg
push
mov
add
subb
je
or
sbb
lock
mov
sbb
push
cmp
movsb
cmp
adc
bound
pop
mov
jb
jno
or
je
movsl
inc
sub
mov
inc
pop
cmp
les
jo
xor
inc
mov
fnsave
xor
xchg
cltd
lods
sbb
iret
xor
loope
jmp
sar
pop
imul
ret
loope
or
into
inc
imul
xchg
inc
mov
mov
pop
or
cltd
mov
add
dec
rcll
cmp
dec
push
aas
jmp
shrl
push
ror
loopne
xor
fs
daa
cld
xlat
int3
xor
dec
ljmp
and
lcall
xor
ds
pop
shrl
mov
out
or
sub
sbb
in
xor
xchg
push
loope
insb
cmc
loopne
or
dec
add
mov
jne
test
add
pusha
pop
dec
mov
aas
cltd
xor
fsubrs
adc
mov
and
fcmovu
add
mov
mov
mov
xchg
call
adc
repnz
dec
loopne
hlt
fs
cmpsb
xchg
mov
bound
mov
data16
pop
inc
inc
push
sbb
paddq
mov
mov
cmc
lock
dec
fimuls
cmp
xchg
mov
mov
or
mov
sahf
mov
addl
and
cmp
xor
sbb
call
fiaddl
and
mov
cld
mov
pop
push
outsb
xor
dec
andl
push
inc
loopne
adc
mov
cmp
push
je
fld1
mov
dec
movsb
cmp
lds
ljmp
test
in
push
test
sub
les
xor
and
sub
mov
cmp
mov
and
in
mov
and
mov
sub
test
ljmp
ljmp
fsubs
bound
mov
inc
push
push
push
outsb
mov
adc
sbbb
fwait
push
mov
ret
adc
outsb
iret
adc
loop
sarb
popa
cmp
out
bound
jl
das
jnp
mov
stos
dec
or
xchg
xor
xor
dec
test
adc
in
mov
jge
lock
cld
mov
xor
inc
jp
xchg
xchg
aam
mov
xor
push
jmp
loope
fwait
push
add
xchg
mov
fcmovnbe
mov
enter
sub
in
push
addb
sub
jl
enter
hlt
and
mov
pop
xor
das
pop
pop
sbb
sub
dec
sub
cld
cmpsb
add
fnstenv
movsl
divb
std
outsl
and
faddl
mov
add
pop
jbe
adc
jnp
test
mov
and
sbb
cmp
mov
fs
xchg
movsl
fs
mov
mov
lcall
lods
jp
inc
sub
sub
xor
fs
push
imul
xchg
xor
out
jnp
pop
mov
insl
sbb
test
fistpl
mov
sbb
pop
fwait
or
jb
sbb
pop
cltd
push
es
xchg
cwtl
movsb
imull
in
test
cs
pop
in
dec
sbb
mov
mov
dec
xchg
pop
insl
push
xchg
pop
pop
in
sbb
jae
cld
add
fnstsw
out
xor
arpl
in
add
paddsb
add
adc
ljmp
int3
adc
dec
cs
scas
xchg
sub
data16
cmpsb
sub
sub
jbe
adc
adc
pop
pop
pop
push
xor
ljmp
rcr
push
icebp
xlat
gs
es
dec
or
fs
fs
sahf
ficomps
in
dec
mov
mov
lds
dec
sbbb
pop
ja
xor
mov
add
addr16
lret
xor
fcompl
xchg
dec
adc
pop
mov
cmp
mov
pop
push
mov
lret
cmpsb
and
inc
add
cmp
add
jne
out
push
out
mov
mov
mov
call
lock
movsl
sbb
stos
dec
sbb
sbb
es
mov
jns
ret
xor
scas
mov
es
mov
je
adc
mov
push
cmpsl
inc
and
and
mov
rorb
iret
push
mov
ret
lret
push
add
divl
lret
pop
sub
cmp
pop
mov
popa
cmp
lods
icebp
sbb
js
es
stos
push
mov
cmpsb
adc
ds
ss
dec
jnp
mov
jp
jb
push
ss
sub
ret
pop
add
iret
push
rclb
xchg
xchg
jne
dec
fwait
scas
jns
ret
adc
cs
testl
xor
data16
xor
xor
sbb
xchg
mov
lea
test
dec
jae
and
pop
add
lahf
pop
out
ss
fincstp
jb
mov
cmpsb
dec
jecxz
add
mov
and
cmp
inc
ret
addr16
pop
sub
xchg
call
out
in
enter
nop
aas
xchg
repz
cli
xchg
repnz
mov
xor
xchg
sub
pop
push
neg
pop
mov
sub
mov
into
push
stos
mov
sub
or
int3
sub
and
and
loop
sbb
in
insb
mov
push
mov
mov
jo
sahf
fmull
pusha
xor
or
vunpckhps
pop
sbb
into
lret
or
testb
imul
or
sbb
xor
and
test
gs
test
mov
call
xor
aad
mov
adc
rcrl
jno
lret
mov
gs
or
enter
scas
push
ja
jp
push
arpl
rol
mov
mov
lods
inc
lods
enter
mov
jl
push
arpl
adc
mov
ror
jo
push
cs
push
out
push
lock
pop
mov
test
sbbb
fwait
sbb
xor
adc
out
push
lds
jmp
sbb
sahf
xlat
mov
daa
aad
mov
stc
aad
ret
mov
jmp
negl
in
int
fwait
mov
or
inc
fldt
pop
iret
mov
mov
push
or
xchg
js
stos
pop
shlb
pop
imul
out
lahf
repz
inc
enter
mov
pop
pop
and
pop
decl
inc
pop
jge
inc
xchg
cmp
in
aas
inc
cld
mov
arpl
dec
mov
xor
jo
pop
push
ficoml
subb
sbb
fimuls
mov
pop
outsl
data16
fstps
cld
fadd
add
dec
dec
or
push
idivb
push
cmpsl
pushf
int3
or
cmp
out
pusha
jle
daa
ljmp
and
push
push
pop
pop
bound
daa
testb
and
sarb
cmp
popa
sbb
nop
xor
int
ds
aam
les
mov
leave
push
out
or
lret
push
push
loop
mov
fisubrl
sub
pop
lods
mov
stc
call
je
and
xchg
push
add
add
jb
mov
sbb
fistl
imul
jb
pop
insb
push
lods
add
sti
dec
out
jmp
sbb
jg
jb
mov
cwtl
push
mov
sbb
pushf
or
mov
cwtl
jge
inc
dec
adc
scas
jp
and
popa
or
adc
sub
into
shrb
xor
cmp
test
xchg
xchg
sub
imul
icebp
pop
pop
push
cmpsl
in
loope
and
dec
cmp
pop
mov
push
pop
dec
in
xchg
daa
push
and
out
jmp
add
mov
imul
and
pop
popa
mov
ss
lea
xor
mov
fdivl
xor
dec
push
cld
aas
fildll
mov
inc
sub
push
pop
fsts
sub
in
and
mov
cmpsb
test
pcmpeqb
jb
leave
push
clc
dec
jmp
loopne
push
xchg
jb
orb
adc
stos
cmpsl
in
decl
inc
mov
add
mov
add
pushf
stc
pandn
aaa
sub
mov
mov
jns
mov
pop
inc
xor
pop
mov
inc
lret
dec
sbb
sub
in
jge
loope
xchg
sbb
subb
sarb
int3
addb
sub
mov
jmp
xchg
mov
out
pop
jg
dec
clc
out
inc
dec
and
cltd
and
jnp
mov
imul
mov
aas
dec
stos
xchg
aas
fwait
mov
add
pop
jge
or
cmp
pop
jl
mov
shrl
mov
jb
stos
test
push
add
mov
mov
std
js
mov
jae
mov
cmp
test
push
popa
jbe
jae
lret
lret
smsw
sub
jl
mov
pushw
test
mov
dec
sbb
sbb
aas
jnp
xor
cmp
mov
popf
negb
jbe
dec
pop
movsl
inc
pop
sub
adc
adc
dec
and
popa
aam
push
dec
out
ds
cmc
cmp
repz
into
call
push
call
ror
mov
insb
les
test
xchg
push
mov
inc
test
pop
fsincos
repz
enter
in
out
xchg
or
sub
push
xchg
push
ljmp
dec
adc
or
mov
loopne
dec
xchg
sarb
or
or
mov
ss
in
mov
ret
mov
jbe
adc
addb
popf
mov
add
es
adc
xor
pop
jmp
fidivrl
into
aam
xor
xchg
inc
pop
cmp
js
push
cs
loopne
insb
push
and
loopne
push
pushf
mov
xlat
ret
in
rcrb
cltd
sub
cld
xchg
aas
add
pop
inc
cwtl
dec
shrb
popf
cmc
pop
cmp
insl
mov
cli
sub
or
pusha
mov
movsb
in
shrl
dec
or
sarb
rorb
sbb
fmuls
sub
add
jecxz
sbb
mov
dec
call
add
push
dec
pop
mov
sbb
or
or
xchg
or
in
rcrl
inc
insl
mov
and
scas
mov
lods
push
les
aaa
cbtw
fcompl
les
notb
pop
out
daa
mov
in
in
sub
in
into
cs
adc
stos
out
and
pushf
sbb
sub
pop
mov
loopne
pop
add
ljmp
mov
pop
sub
repz
test
dec
in
data16
pop
pop
addl
mov
mov
loopne
mov
lds
push
xchg
and
inc
xor
stos
icebp
mov
das
shrl
dec
sbb
lds
jae
subb
mov
sub
scas
mov
enter
cmpsl
xor
mov
pop
das
std
jb
add
pop
out
dec
cmp
jns
nop
pop
popa
adc
mov
mov
sbb
lahf
pushf
xchg
xchg
sub
add
adc
sbb
imul
dec
outsl
icebp
cmp
jns
jp
pushf
dec
mov
xchg
into
cmpb
bound
data16
add
push
rcll
nop
sbb
ljmp
sub
rcrl
jne
sub
pop
dec
outsb
or
pop
add
or
adc
fucomi
call
dec
add
decl
cmpsb
imul
sub
inc
sub
xchg
sti
ljmp
sbb
faddl
xor
jae
pop
mov
lods
or
enter
addr16
sub
dec
mov
into
mov
or
test
cmpsb
fcomp
es
cld
test
inc
jne
jo
xor
and
subl
orb
xchg
and
push
add
ffree
test
or
punpckldq
mov
push
lea
std
fisttpl
dec
in
fcmovbe
adc
push
sarb
and
and
mov
xlat
mov
test
imul
sar
cmp
add
outsl
jne
imul
cmp
mov
mov
out
cmpsb
ret
dec
aas
test
sbbb
xchg
ss
fnstenv
jb
or
adc
sbb
push
sbb
add
and
imul
add
movsl
cmc
nop
jb
jne
les
outsl
dec
test
and
mov
pop
cs
jo
xor
dec
push
jp
jge
jns
pop
jge
jns
push
push
ret
ss
stos
mov
fisttps
cmp
pop
pop
lahf
iret
xor
stos
xchg
int3
ljmp
in
xchg
inc
ds
in
xor
loopne
ss
fstpl
adc
out
jns
shrb
jmp
sub
lcall
lock
out
dec
mov
jecxz
fadds
mov
add
lret
mov
sub
lret
push
dec
jmp
das
into
fsubl
add
movsb
fdivl
test
mov
jae
mov
ret
popl
and
lret
pop
cs
out
mov
ret
mov
rorb
mov
adc
xor
or
push
pop
and
fistps
mov
push
and
test
loope
dec
in
in
insl
shl
push
inc
test
repnz
cmpsb
xlat
push
mov
aad
sarb
in
xor
add
lods
sub
or
jle
dec
mov
cmp
popa
or
jo
mov
aam
xor
clc
dec
movsb
mov
les
ror
test
lret
push
add
rcrb
loopne
stos
jp
adcl
into
gs
enter
loope
mov
arpl
cmp
push
into
or
cmp
sbb
popf
lock
inc
push
pop
outsb
jge
add
aam
addr16
aaa
loope
push
movsl
iret
xchg
loopne
icebp
dec
fadds
stc
ror
mov
mov
movl
jo
dec
in
movsl
rcrb
pop
push
inc
xchg
adc
push
dec
mov
jl
sub
lcall
push
call
fisttpll
mov
or
push
icebp
rorb
xchg
and
jg,pt
jbe
adc
nop
add
icebp
orl
pop
cmp
shll
aad
mov
int3
add
imul
stos
adc
lock
out
cmp
test
mov
pop
insl
lods
int
mov
cmpsl
dec
sub
fmuls
fldl
jp
mov
loop
push
jecxz
jp
mov
or
mov
pop
cltd
push
mov
decb
sbb
shlb
shlb
adc
les
pushf
shrl
lea
jns
mov
or
popa
ja
popf
push
push
add
push
and
cmp
pop
mov
inc
push
or
push
lock
ficoms
insb
jbe
mov
shlb
int
xor
fwait
add
shl
mov
aas
cmp
xchg
inc
orb
insl
adc
js
out
xor
fcmovne
cwtl
lds
sbb
mov
jbe
push
xchg
and
fdivl
and
pop
mov
push
sub
ljmp
sub
xchg
es
out
xor
adc
and
ss
je
in
insl
out
mov
push
mov
scas
cmpsl
pusha
jns
cmpl
mov
push
fnstenv
dec
push
cmp
loop
sub
or
push
xor
fwait
jae
outsb
adc
mov
mov
mov
cmp
sarb
dec
cli
aas
jl
mov
sub
test
stos
push
testb
cmp
cmp
or
mov
pop
xor
clc
mov
addr16
jns
ror
sub
pusha
lock
hlt
fdiv
aaa
jl
sbb
pop
adc
xor
sbb
jg
jl
xchg
push
stos
ret
fisubrs
pop
jo
lahf
hlt
mov
shrb
fs
sarb
push
cld
cltd
adcl
call
movsl
push
clc
inc
mov
add
lahf
cmp
divl
fbld
push
inc
push
xor
xchg
movsl
enter
xchg
mov
out
stc
jmp
xlat
xlat
inc
movsb
int
xchg
and
test
cltd
mov
das
add
shlb
mov
sbbl
mov
repnz
xlat
hlt
push
sbb
repnz
and
mov
jp
cmpsb
loop
dec
andb
lods
cltd
sub
in
ss
inc
xlat
sub
loopne
fcmovbe
test
int
mov
in
clc
cmp
pop
fistps
int3
test
xchg
inc
xchg
xor
dec
hlt
and
or
out
mov
mov
add
jb
or
adc
cmp
aad
sbb
fs
std
ret
mov
mull
mov
jno
sbb
aad
xchg
mov
insb
pop
adc
pop
rol
adc
push
es
sbb
lds
push
fnop
subb
nop
addb
push
adc
mov
ja
jmp
aas
in
pop
imulb
out
sbb
test
popa
or
xor
cltd
and
mov
xchg
test
dec
xchg
adc
add
inc
test
mov
loope
bound
mov
lea
xchg
xchg
lea
fbld
sub
mov
in
push
fcom
out
sub
outsb
aad
movsl
or
jl
jecxz
jp
mov
mov
pop
test
out
inc
mov
les
pushf
aas
mov
and
ds
mov
xchg
out
fsubrl
mov
push
dec
hlt
xor
mov
jns
or
mov
pop
dec
daa
jae
mov
and
add
repz
sbbb
pushf
rolb
inc
dec
std
sbb
mov
test
mov
pusha
repz
in
push
popa
aaa
repz
mov
jle
mov
rclb
dec
dec
sub
xchg
xchg
aaa
mov
inc
jg
pop
and
cmpsb
sub
test
mov
pop
fs
clc
push
pop
repnz
inc
push
loopne
add
lret
mov
test
dec
or
push
lods
jmp
push
pop
outsb
sub
jns
jg
xor
sub
inc
leave
mov
and
pop
mov
mov
mov
sbb
fisubs
fstps
imul
mov
and
xor
cmp
in
mov
fwait
jbe
mov
and
fmull
dec
jo
dec
das
stc
lret
sbb
sbb
inc
jmp
mov
xor
std
push
popf
mov
test
ret
adcl
xor
mov
mov
and
ret
jge
arpl
gs
inc
xor
pop
fimull
pop
push
dec
push
mov
leave
xlat
jno
mov
sub
push
add
dec
sub
std
and
ja
and
push
ss
mov
nop
test
or
cmp
sub
sub
cs
sti
popf
sbb
out
mov
shl
fcoml
pop
dec
adc
sahf
das
push
cmp
pop
fsubs
aam
jecxz
iret
les
push
out
xor
sub
mov
pop
mov
xchg
mov
movsb
mov
inc
adc
sbbb
fsubs
pop
jns
jecxz
sbb
pop
mov
aam
mov
sub
fxch
pop
sub
fcmovb
lds
add
adc
mov
jge
xor
negb
lea
and
jnp
jge
cmp
cmpsb
add
inc
popa
jo
jp
out
testb
pop
xchg
push
pop
dec
xor
lahf
lock
leave
cmc
xlat
lret
add
scas
inc
cmp
fs
jbe
pop
sbbb
mov
movsb
icebp
popa
sub
cwtl
xchg
jl
lahf
movsb
sbb
sub
adc
in
mov
addl
sub
add
fwait
cmp
bound
aas
push
lea
insb
mov
out
icebp
lcall
add
fistps
hlt
test
std
cltd
sahf
aad
in
push
inc
aam
cmp
push
mov
fimuls
fmulp
xchg
gs
outsl
mov
ret
pop
jbe
decb
call
and
insl
or
sub
mov
mov
sbb
mov
repz
mov
test
clc
sub
pop
call
int
mov
push
je
shrb
adc
add
clc
cmpsl
and
push
xchg
insb
cltd
cltd
or
lret
hlt
or
ljmp
mov
push
xchg
in
sbb
jl
cmp
cld
pop
mov
iret
fstpl
xor
adc
xorb
movsb
fsubrl
jg
adc
pusha
out
movsb
sbb
sti
dec
ljmp
push
outsb
pop
lret
push
add
xor
inc
out
pop
stc
ret
stos
pop
cmc
scas
rclb
lea
xor
rol
jb
jae
jmp
in
leave
stos
das
mov
mov
or
push
stos
inc
sub
push
pusha
sub
mov
hlt
cwtl
sub
outsb
fstpt
mov
add
mov
mov
pop
dec
jmp
push
jecxz
sub
adc
sub
pop
sub
clc
xchg
jb
or
stc
push
je
ret
mov
das
jne
rclb
lods
mov
ret
add
xor
insb
lea
mov
pushf
jo
xor
mov
jle
and
popa
xchg
cs
out
lret
clc
cmp
cmp
mov
inc
adc
fistps
xor
or
iret
sub
lret
mov
dec
imul
stc
cmp
lock
cmp
and
jge
dec
fiaddl
mov
fsubl
arpl
and
out
loop
fsubs
dec
cmc
ret
push
lret
leave
scas
stos
popf
cmp
mov
cmp
or
std
xlat
xchg
cmp
pop
inc
adc
push
sub
sub
mov
data16
dec
xor
ss
fdivl
test
bound
add
rol
enter
xor
out
aas
inc
sub
arpl
outsb
xlat
xchg
test
and
loopne
adc
movsb
sbb
notb
mov
iret
mov
pop
push
inc
adc
adc
cmp
push
xor
dec
icebp
insl
cmp
or
pusha
imul
sbb
sbb
fxch
push
mov
mov
lock
test
push
nop
xlat
ljmp
fdivrs
cltd
aas
scas
data16
les
adc
leave
flds
scas
nop
add
insb
movsb
dec
lahf
loope
pop
aad
inc
sub
imul
xchg
fs
xchg
hlt
cld
inc
push
push
inc
data16
push
push
outsl
cld
fcomip
adc
mov
cs
adc
popa
xor
sbb
add
mov
jnp,pn
aas
cmp
sub
inc
aas
loope
cmp
divl
movsb
jb
rcrb
mov
push
cld
jle
adc
jp
xlat
jle
sub
mov
xor
in
jle
and
mov
adc
cmp
mov
pop
das
es
xchg
gs
sbb
xchg
dec
cmpsl
lock
in
test
pop
jno
aam
leave
leave
andb
loope
mov
pop
inc
inc
cmp
and
sub
fildl
cmp
push
outsb
and
imull
xchg
daa
sbb
stos
clc
mov
hlt
cmp
cs
adc
mov
and
mov
sub
mov
nop
sub
lret
xor
jmp
sbb
ss
insl
or
and
dec
aad
jecxz
cli
push
xchg
add
aaa
into
repnz
mov
int
jne
mov
mov
cmp
stos
sub
and
leave
mov
xchg
in
les
in
or
mov
and
popa
loope
or
xor
pop
jb
xor
dec
ffreep
push
negl
stos
imul
xor
int3
in
mov
adc
ficompl
pushf
div
xchg
ja
out
mov
pop
aad
and
sbb
mov
mov
lods
aam
sub
outsl
mov
dec
lret
loope
inc
push
dec
xchg
aaa
ret
movl
or
push
mov
movl
orb
in
or
outsb
cmp
jecxz
cmpb
sbb
add
mov
sub
scas
es
rcll
xchg
pop
mov
push
fadds
sbb
not
inc
sbb
mov
popf
inc
shlb
push
insb
cmp
cmp
popa
xor
cmp
sbb
dec
stos
xchg
out
out
jno
mov
mov
add
imulb
inc
insb
ss
std
push
aas
outsb
push
push
pop
or
mov
into
daa
mov
outsb
je
inc
imul
pop
into
and
pop
push
fwait
je
inc
psraw
enter
jno
xor
add
inc
gs
outsl
dec
call
mov
jmp
shlb
mov
sbbb
sub
je
jo
adc
cwtl
or
cs
and
push
repnz
lock
cmpsb
sbb
mov
fmuls
in
and
mov
clc
pop
aam
xchg
jbe
and
fstpt
inc
xchg
bnd
aam
nop
out
outsl
scas
push
push
aam
mov
fnsetpm(287
hlt
stc
lods
out
std
add
push
insb
mov
fbld
inc
out
lahf
mov
ds
mov
test
cmpsb
ret
pop
dec
cmpb
ret
push
popa
cmp
popa
add
jno
fidivrl
enter
enter
or
pop
sub
lahf
sub
out
out
repz
gs
and
xor
sub
mov
test
jnp
int
rolb
std
jp
xchg
pop
mov
lahf
push
push
lret
or
mov
pop
adc
outsb
push
mov
ss
stc
mov
pop
mov
loope
fimull
out
sub
les
out
cmpsl
in
pusha
aas
mov
shrb
mov
js
add
clc
sbb
in
mov
std
int3
int3
neg
push
sbb
xor
cmpsl
mov
push
xlat
test
cld
stc
or
aam
pop
sub
dec
add
outsl
mov
jle
mov
push
das
cmp
nop
lea
loop
mov
jl
inc
xor
lret
mov
jl
mov
push
sbb
stos
xchg
dec
sahf
repnz
out
fdiv
in
jb
xor
mov
mov
add
push
cld
jle
rcr
loop
push
sub
or
mov
insb
pop
rcrl
aad
insl
cmp
push
mov
sbb
mov
and
pop
cmpsb
jno
sbb
ds
lea
mov
or
mov
js
pop
mov
shrl
iret
inc
enter
ja
fwait
pop
rcll
hlt
mov
adc
pop
lcall
lcall
lcall
xchg
dec
push
enter
ds
or
clc
movsl
xchg
in
fdivl
push
fisttps
inc
add
lcall
cmp
jns
push
lods
insb
mov
jecxz
fs
fcmovbe
outsb
pop
or
faddl
mov
adc
data16
push
mov
pop
xor
decl
mov
cwtl
add
fisubl
pop
cltd
sarb
bound
lcall
out
mov
mov
push
cmp
je
rcl
pop
fisttpll
add
mov
cltd
pop
sub
and
push
xchg
cmc
mov
enter
mov
xchg
fmul
xchg
lcall
sar
stos
xor
mov
insb
or
lret
call
cmp
cmp
out
inc
fnsave
xor
mov
out
icebp
cmp
xchg
xchg
add
mov
inc
add
add
push
out
insb
lods
jbe
mov
in
pop
jo
cmp
cmp
mov
adc
sti
lcall
push
xchg
cld
push
push
dec
dec
or
add
push
or
fstps
mov
in
xor
daa
mov
aas
pop
fadds
test
cmp
or
adc
mov
mov
push
mov
pop
dec
mov
aam
push
add
cld
flds
add
mov
movsl
test
mov
lret
jnp
dec
fidivrs
mov
mov
mov
inc
fcompl
xchg
daa
ret
mov
rorb
pop
pop
jp
fs
ljmp
in
sub
and
es
sub
rcrb
push
adc
rorl
mov
stos
sbb
outsl
dec
jp
cmpsl
mov
mov
data16
mov
out
pop
push
fwait
dec
sub
enter
inc
scas
out
add
mov
sub
scas
jle
std
xchg
mov
pop
lcall
mov
imul
cmpl
jae
inc
je
push
out
xor
add
and
ss
cmp
mov
fsubr
hlt
or
test
inc
inc
cltd
aad
jb
pop
cmc
xchg
lret
push
into
adc
jae
cld
jb
and
or
dec
inc
jp
fs
enter
push
pop
mov
cld
pop
mov
ljmp
loop
mov
cmp
outsb
mov
movsl
rorl
lock
xchg
xlat
cmpsb
into
and
mov
test
pop
sub
gs
jb
cmp
add
dec
cwtl
jge
inc
popf
or
addb
sbb
out
lea
mov
and
fmull
in
out
mov
mov
scas
and
jne
adc
adc
mov
adc
fisttpl
addr16
ljmp
test
outsl
test
push
cmp
lret
xchg
mov
xor
cmp
out
imul
out
and
insb
hlt
xor
stos
in
lret
or
mov
xor
out
cmp
xchg
xor
shrb
sub
popa
in
sbb
hlt
mov
lock
xchg
sub
mov
jecxz
loopne
jo
sub
int3
sar
push
dec
jo
nop
jl
fldl
add
fldcw
in
cli
fdivl
aas
push
jle
mov
das
aas
sqrtps
mov
cmp
ficomps
ds
clc
cmp
mov
cmp
sbb
icebp
cli
adc
repnz
sti
ss
or
mov
inc
inc
jne
cltd
mov
cmp
mov
ds
pop
xor
inc
addr16
fcoml
xorl
pop
fstl
sub
mov
sub
sbb
add
mov
stos
dec
lahf
nopl
add
xchg
pop
pushf
rclb
in
sarb
cwtl
aam
inc
out
adc
adcb
and
bound
imul
cmc
cld
fneni(8087
pop
in
clc
sub
mov
es
iret
popa
mov
fdiv
mov
push
cmp
push
mov
xchg
out
sbb
lahf
std
cmovle
add
or
aam
inc
movsl
adc
lods
xchg
xchg
and
bound
insb
pop
ds
adc
in
fs
mov
xor
inc
lea
cmp
lea
jmp
mov
dec
add
pop
cwtl
push
fmuls
ljmp
ja
mov
inc
add
lea
aam
inc
fists
pusha
xchg
mov
popf
push
mov
push
bound
imul
std
mov
es
iret
jmp
fmuls
mov
push
jmp
cmpsb
int
loope
jb
sbb
ljmp
sbb
stos
pushf
lahf
psrad
add
and
inc
mov
call
xor
aas
mov
lcall
clc
mov
and
out
mov
fdivs
in
lahf
push
imul
xchg
pop
pmaxub
movl
lods
pop
lock
cmpsl
mov
sub
inc
mov
fmul
mov
xchg
cmp
sbb
cmp
sbb
dec
pop
mov
dec
fmuls
adc
ss
add
scas
add
xorl
mov
pop
pop
jne
mov
push
cmp
xor
hlt
pop
pop
xchg
lcall
sub
int
fistps
movsb
in
mov
jbe
sub
sub
pop
stos
cmp
or
add
inc
pop
hlt
aam
inc
xchg
adc
xchg
xchg
not
xlat
push
jb
push
popa
in
sub
jbe
cmp
iret
ds
clc
add
lea
test
std
mov
mov
fsubr
mov
mov
in
outsl
mov
insl
dec
loopne
testb
mov
test
dec
push
jle
mov
xor
in
push
aas
pop
ret
ds
clc
mov
mov
aas
xorl
cmp
jne
cmp
sbb
add
cltd
dec
dec
aas
push
ds
pop
push
lds
sahf
cltd
sbb
sub
rcr
pop
and
addb
call
dec
push
mov
jnp
sub
mov
rcr
mov
aam
adc
adc
and
fucomp
sub
sbb
mov
sahf
pop
mov
dec
pop
aam
pop
pop
add
pop
add
mov
cltd
add
adc
xor
imul
ds
lods
adc
pop
xchg
es
jg
mov
es
push
mov
fsubrs
in
dec
cmp
pop
sub
sbb
testl
repnz
jns
add
movsb
in
sub
shl
xor
jne
icebp
mov
inc
sbb
sub
xor
pop
pop
dec
lcall
inc
gs
out
mov
adc
jp
pop
or
pop
leave
punpckhdq
cmp
push
push
das
jl
movsl
into
pop
iret
add
sti
shll
inc
dec
pop
xor
cltd
sbb
scas
fs
inc
mov
cli
and
mov
inc
hlt
xchg
push
xchg
adcb
adc
inc
xor
sbbl
hlt
mov
mov
call
fistpl
mov
out
and
enter
leave
in
ss
sub
push
int3
cltd
inc
hlt
adc
mov
push
xchg
dec
adc
push
xlat
mov
test
mov
cmp
js
jae
fisttpl
daa
in
dec
or
jp
cmp
daa
xchg
mov
xor
out
adc
lods
mov
cmpsb
pop
jle
sub
xorb
dec
jmp
pop
ss
popa
enter
call
xchg
aas
jecxz
pop
mov
dec
les
pop
xchg
andb
adc
leave
arpl
sub
lcall
mov
shl
lret
mov
push
nop
leave
push
dec
andl
mov
fisttps
fbstp
mov
into
cmp
xchg
xor
lahf
xchg
mov
dec
cld
xlat
add
sbb
mov
mov
mov
mov
ret
sub
pop
inc
ficomps
aam
fmul
dec
xchg
movsl
rorb
sub
leave
adc
pop
adc
mov
mov
push
ljmp
ds
push
sub
cmp
mov
insb
and
inc
xchg
das
pop
cmp
and
or
test
imul
in
call
xchg
pop
test
xchg
xchg
cmp
or
loopne
jmp
stc
shrb
cmp
inc
pop
cwtl
mov
hlt
inc
pop
movsl
test
mov
andl
xor
lock
fimuls
mov
testl
mov
repnz
mov
jo
and
or
daa
imul
inc
fincstp
mov
scas
mov
aad
inc
dec
adc
movsb
cs
pop
mov
mov
dec
pop
pop
imul
in
je
add
pop
or
imul
es
mov
das
jae
or
scas
stos
lret
ja
cmp
sbb
aaa
mov
push
dec
pop
int
dec
out
inc
addr16
jae
fidivrl
ja
sarb
dec
stos
mov
push
dec
lea
xchg
in
xchg
movsb
insl
push
je
and
mov
fsts
cmpsb
ja
push
pushf
insl
cmp
aaa
movsb
cld
fnstenv
mov
pusha
insl
mov
cltd
pusha
out
mov
mov
mov
xor
aas
or
xor
fwait
inc
jge
push
stc
push
in
movsb
popf
loop
femms
push
fcompl
sahf
aad
xchg
movsl
in
sbb
icebp
cli
add
push
dec
out
fsts
mov
test
sub
movsl
out
xor
mov
in
dec
int3
sbb
rorb
or
inc
sub
fsts
add
lods
mov
or
out
pop
dec
pop
in
inc
xchg
scas
movsl
pop
dec
xchg
das
push
call
addr16
xor
push
sub
and
stc
or
sbb
out
pop
cmpsl
mov
mov
mov
adc
ds
int
cld
pop
cmp
gs
jmp
pop
es
and
pop
push
add
loopne
dec
mov
push
xor
push
inc
pop
fcomps
ss
mov
jb
aaa
mov
mov
xor
jl
rcrb
lahf
outsb
lods
sbbb
cmpsb
clc
push
push
mov
pop
push
cmp
adcb
incl
inc
dec
outsb
push
test
sbb
mov
inc
mov
clc
xchg
dec
and
xor
cmp
cmpsl
fsubrs
jmp
cmpsb
fisubs
sub
fnsave
data16
std
cli
fisubs
and
ret
mov
pushf
jmp
fnstsw
call
xor
mov
inc
sub
ja
lea
mov
pop
out
icebp
mov
jae
mov
pop
fisubrs
xor
lock
mov
mov
imul
fldt
bound
jcxz
mov
push
push
xor
lcall
xor
popf
xor
repnz
xchg
add
or
in
or
push
fcmovnu
aad
sahf
hlt
sti
push
mov
pop
test
cld
les
addr16
enter
pop
mov
or
push
cmpsb
mov
outsl
fmuls
mov
xlat
aad
mov
je
fstl
jl
pop
ds
fs
fsubrs
and
xor
mov
jl
xchg
fcoms
in
loope
mov
lods
nop
add
stos
lea
or
push
movsl
in
pop
pop
js
pop
adc
leave
pop
or
xor
cmp
sub
loopne
xlat
xor
cmp
adc
jmp
bound
outsb
jae
cli
rclw
imul
bound
jmp
addr16
repnz
insb
cmc
pop
jns
pop
int
mov
mov
iret
idivl
mov
decl
cmpsb
ret
xor
cmp
gs
sti
imul
aaa
scas
aas
cld
ss
lret
bound
fildll
sbb
mov
pop
test
adc
in
pop
add
sti
test
inc
jge
test
orb
addr16
rcrb
mov
insl
or
sub
loope
xchg
jl
loopne
out
cmpsb
mov
fcompl
or
int
enter
xorb
mov
jl
in
lock
rol
clc
insl
xchg
xor
mov
xor
stc
repz
ljmp
mov
and
mov
and
aas
mov
mov
ss
dec
mov
in
mov
pop
cltd
adc
roll
xor
icebp
dec
cs
cmpb
sub
inc
adc
iret
in
shr
sub
test
push
scas
or
sub
jae
ja
pushf
insb
pop
dec
dec
mov
xor
inc
cmp
mov
cmpb
pop
sub
dec
push
mov
mov
sti
repnz
ret
dec
push
das
lcall
xchg
xor
mov
add
cmp
arpl
ja
daa
movsl
in
xor
mov
adc
movsb
push
mov
fisubl
aad
xchg
popa
mov
les
pop
ficomps
jno
int3
jbe
push
push
jbe
push
inc
jbe
xlat
mov
cld
push
les
icebp
sbb
jle
cmp
adc
mov
shlb
rolb
stc
sub
cmpsb
and
loop
cmp
in
sub
loopne
sub
movsb
sbb
mov
cmpsb
cld
jo
or
or
data16
lock
addr16
js
loopne
ret
loopne
inc
dec
pushf
lock
and
roll
mov
pop
lcall
stos
mov
pop
ds
mov
cmp
add
mov
addr16
das
push
push
cwtl
roll
or
mov
mov
pushaw
and
push
push
add
and
mov
aad
cmp
sahf
aad
and
jbe
pop
jno
jno
xchg
jmp
repz
sbbb
push
fdivl
inc
mov
push
sub
sub
mov
jne
push
mov
pcmpeqb
push
or
or
cld
cmp
sub
inc
out
pop
loopne
ds
stos
xchg
mov
push
sub
adc
das
mov
push
out
sbb
in
sbb
dec
adc
mov
in
je
and
dec
ficoml
je
cld
sub
fsubs
mov
sub
out
rclb
dec
scas
scas
rcrb
out
jb
rol
sahf
lea
sub
mov
out
fisubl
je
pop
mov
or
in
push
pusha
lcall
js
push
mov
add
dec
adc
aas
inc
ds
ret
xor
sub
sub
sbb
xor
xchg
jp
lahf
dec
sbb
es
lds
sub
dec
repnz
pop
fdivrs
mov
dec
mov
roll
rorl
sub
bnd
mov
adcb
mov
imul
inc
mov
fsubs
pop
outsb
pop
mov
jae
xchg
cmp
popa
cli
mov
je
pop
loop
mov
insb
sbb
xchg
push
addr16
cwtl
add
lret
movsl
mov
pushf
test
mov
adc
adc
cmp
jl
xchg
ds
hlt
jo
jbe
lods
dec
add
dec
push
test
mov
imul
pop
outsb
cmp
decl
jb
fwait
pop
jle
adc
inc
ret
popa
cli
mov
je
pop
orb
sub
inc
cmp
add
pop
dec
pop
sbb
nop
gs
inc
in
iret
cmpsb
cltd
mov
add
dec
divl
jmp
mov
out
or
inc
cmp
xor
jp
dec
xor
mov
inc
test
loope
push
and
xor
hlt
dec
pop
push
fdivr
mov
xchg
sub
push
out
fsts
out
dec
push
jmp
sbb
das
add
sbb
add
and
cmp
mov
mov
sub
inc
push
jl
push
cwtl
add
add
push
add
lret
in
and
out
stc
mov
xor
sub
arpl
add
mov
mov
mov
jns
push
pop
and
cmp
pop
cmp
push
push
fwait
sbb
adc
dec
rcl
leave
sbb
push
out
rorb
test
je
rorb
mov
shrb
cmpsl
insb
aas
scas
int3
push
jmp
in
pop
jne
mov
lock
test
ret
jg
mov
jg
outsl
sbb
js
adc
cmp
enter
mov
int
adc
and
push
sub
push
sub
jecxz
ret
adc
cmp
lea
or
cli
xchg
ret
or
and
or
push
int3
rolb
sbb
push
orb
inc
inc
push
push
pop
jle
and
mov
loope
aam
jp
ror
repnz
iret
rcl
and
pop
mul
fistpll
int3
mov
cmp
mov
ds
arpl
pop
or
adc
pusha
stc
stos
push
scas
cld
bnd
or
or
test
sbb
js
lahf
andl
push
and
mov
dec
fstpt
push
data16
mov
cmp
clc
test
xchg
loop
dec
mov
shrb
cmp
aam
inc
ds
hlt
test
jbe
pop
outsb
lret
test
test
mov
mov
repnz
xchg
das
in
repnz
jb
rolb
push
xchg
pop
cli
lahf
adc
mov
hlt
push
xchg
dec
imul
mov
lods
inc
lcall
mov
movsb
mov
add
es
mov
mov
adc
mov
push
in
pop
bound
mov
and
popf
je
push
add
mov
out
sub
ja
mov
mov
sub
sub
mov
andl
push
in
fdivrs
stos
adc
pop
push
sbb
xchg
sub
imul
lahf
mov
insb
sub
jle
inc
mov
adcl
movsl
dec
sysenter
outsl
jmp
xor
inc
mov
outsb
jnp
out
sahf
mov
imul
in
out
popa
lds
stos
clc
cmp
inc
sub
pop
out
es
mov
orl
daa
jbe
les
pop
orl
je
pop
loopne
in
lods
sub
mov
sub
inc
ljmp
popa
mov
push
aaa
lods
mov
pop
jb
pop
lods
cmpsb
xchg
xchg
add
push
push
pop
mov
add
cmp
pop
fiaddl
scas
cwtl
jl
mov
pop
sub
cmpb
into
or
sbb
add
mov
testl
hlt
add
int3
subl
cmpsb
mov
and
ret
ljmp
pushl
jmp
out
mov
popf
das
xor
icebp
mov
mov
out
cmp
pop
sbbb
push
sbb
mov
sbb
mov
sbb
ljmp
or
or
jae
add
int
ret
add
xchg
addr16
and
sbb
adc
es
dec
or
or
sbb
arpl
sub
cld
imul
jl
das
pop
sub
shlb
imul
cmpsb
pushl
jmp
push
js
dec
push
jno
adc
sub
jp
movsb
pop
sub
pop
bound
jno
call
xchg
adc
push
dec
mov
sub
mov
mov
sbb
mov
lret
mov
mov
je
push
jbe
pop
mov
sahf
jb
and
sub
aam
add
mov
rcll
push
jb
mov
xchg
jmp
dec
sbb
mov
in
push
mov
dec
inc
pusha
addr16
jmp
sahf
sub
xchg
cmp
bswap
jmp
and
push
mov
mov
pop
mov
sbb
mov
cld
cmp
lods
pop
arpl
mov
stos
lret
cwtl
xlat
pop
repnz
jmp
dec
mov
pop
sub
shlb
iret
mov
push
or
popf
roll
sub
cld
and
and
bound
xor
popf
dec
inc
pop
jp
pop
int
pushf
sub
fs
add
cwtl
and
push
jbe
mov
xor
inc
dec
jle
mov
add
push
mov
cltd
cs
pop
cmp
fdivrs
sahf
cs
cmp
xchg
lahf
insb
pop
sub
das
test
out
fistl
cli
fmull
pop
ret
pop
xor
xor
imul
jo
cmpsb
cmp
clc
repnz
fsubr
outsl
rcrl
xlat
xchg
fs
cmp
jae
cmp
dec
out
icebp
repnz
jo
push
push
or
je
lahf
mov
add
stos
mov
push
adc
je
cmp
adc
iret
and
pop
push
mov
rcr
test
jl,pn
in
scas
sbb
adc
xor
fcomps
xchg
push
in
push
ds
pop
imul
lret
xor
mov
pop
xor
shlb
cltd
cltd
ficompl
mov
fs
mov
cld
pop
sub
mov
fisubl
dec
ss
jl
xor
push
ret
pop
mov
imul
jnp
and
movb
dec
mov
cmp
push
pop
sub
pushf
dec
jbe
cwtl
jo
cmpsb
decl
adc
push
xchg
push
cmc
scas
push
scas
incl
dec
nop
xchg
adc
nop
sub
idivb
imul
push
inc
pop
push
or
or
insb
push
out
hlt
or
rorb
mov
fcom
test
xchg
rcr
repnz
lret
jp
enter
les
mov
or
push
mov
cmp
out
ljmp
push
push
rorb
push
jb
fsqrt
jbe
pop
clc
aam
dec
mov
mov
pop
lock
dec
jbe
inc
jo
jle
nop
adc
in
or
data16
sahf
sub
push
mov
pop
sub
pushf
outsb
cmp
pop
and
cwtl
push
sub
popf
je
pop
outsb
or
or
push
push
loope
bound
cmpsb
cld
dec
adc
fcomps
loopne
repnz
jp
nop
shll
scas
in
hlt
mov
andb
jb
sbb
mov
ljmp
push
outsb
test
jmp
or
cli
push
test
aam
dec
data16
pop
pop
mov
imul
sahf
sub
cmp
xor
xor
add
mov
push
or
mov
adc
outsb
dec
or
int3
pop
and
jmp
sub
cli
test
fistpll
loop
mov
sub
xchg
cmp
out
fs
out
mov
mov
in
cwtl
push
cmp
and
fisubl
jo
dec
xor
mov
dec
lcall
cmp
out
inc
dec
push
fcoms
out
out
dec
arpl
mov
dec
lret
and
lock
in
and
sub
lret
xor
xchg
sar
sbb
or
and
aas
repnz
cmp
int3
sbb
in
mov
test
lock
call
lret
push
cld
adc
sub
nop
mov
ljmp
xor
mov
mov
xor
push
test
fcompl
push
aam
js
int3
pushf
jo
pop
dec
pushf
mov
jle
stos
fcmovne
sub
xchg
xchg
scas
fsubl
xchg
xchg
mov
clc
addr16
mov
ds
or
outsb
pop
movsl
cmpsl
dec
adc
sti
daa
in
movsb
pop
cmp
arpl
adc
adc
adc
adc
xlat
pop
imul
adc
stos
mov
pop
mov
and
cld
or
mov
mov
pop
call
aad
in
push
pop
call
push
or
insl
fsubl
ljmp
fs
loopne
push
repz
push
insb
mov
adc
lds
fwait
mov
lods
les
cwtl
call
lock
sub
push
adc
and
pop
dec
cmpsl
mov
xor
jl
jae
push
scas
jae
out
fmul
add
imulb
fcmovnb
push
in
ret
sahf
and
movsl
data16
cld
jno
stc
enter
rolb
adc
xlat
jne
jne
push
mov
mov
sub
mov
pop
ret
outsb
mov
push
mov
data16
sbb
ret
std
mov
jl
sbbl
pop
pop
push
sbb
xchg
mov
jne
dec
cmpsl
test
stos
inc
out
push
cld
add
das
loop
or
stos
sub
sub
or
and
fwait
mov
pushf
mov
add
aaa
pop
xchg
cwtl
cmp
jg
or
mov
mov
xchg
sbb
mov
xchg
adc
dec
retw
inc
ficoms
aad
jg
pusha
cmp
inc
xor
es
in
adc
int
ljmp
ljmp
mov
dec
out
leave
inc
pop
adc
je
adc
mov
or
sub
push
sarb
or
dec
mov
daa
push
sbb
mov
add
and
cmp
iret
ds
sub
fwait
sub
popf
test
adc
add
mov
xlat
mov
scas
sti
js
popf
push
jnp
pushf
int3
das
int
xchg
sbb
in
push
pushf
test
cld
repz
push
cmp
jae
fisubs
mov
in
mov
dec
adc
cmp
push
bound
mov
fcompl
push
insl
push
xchg
pop
push
cld
mov
mov
mov
mov
gs
das
pop
push
ret
mov
sbb
push
xor
stos
subl
scas
push
mov
push
xorb
mov
jbe
dec
push
inc
jl
ljmp
adc
scas
push
mov
cmpsb
mov
mov
mov
mov
mov
enter
cltd
push
fdiv
adcl
push
adc
imull
test
push
paddsb
mov
mov
cltd
fcompl
outsl
cmp
cs
mov
pop
repnz
pop
and
cmp
dec
jle
mov
cmp
pop
push
adc
mov
push
rclb
xor
ret
shrb
lret
or
xor
mov
sbb
add
mov
negb
inc
cmp
xchg
push
in
sub
cwtl
js
xchg
test
cmp
cmp
cmc
push
cmp
ljmp
xchg
xchg
pop
cmpsl
mov
lock
mov
inc
pop
sbb
xchg
mov
loop
or
int3
rcrl
repnz
jle
nop
cmp
push
cli
jp
adc
popa
add
xor
pop
insl
cmp
sahf
sbb
mov
cmp
sub
test
mov
rcrl
pop
outsb
fdivr
jp
xchg
sbbb
out
daa
loop
jb
subb
pop
cld
add
sub
clc
add
je
dec
jbe
in
and
sbb
stos
repnz
pop
mov
sub
jnp
std
adc
push
adc
je
add
cmp
lods
xor
repz
data16
insl
jbe
dec
scas
xchg
ljmp
fdivr
cld
sub
pop
xor
cli
push
xchg
aam
jge
mov
jmp
ds
pop
pop
or
xchg
sbb
je
dec
jbe
pop
cmpsl
mov
cs
mov
dec
mov
adcb
outsl
and
push
push
adc
stos
mov
in
imul
jle
dec
pop
cmp
push
sub
mov
cmp
popa
xlat
add
push
sub
clc
lret
ds
push
adc
push
inc
jne
cmp
inc
add
lock
pop
mov
dec
lret
add
add
add
sub
cmp
enter
pusha
cli
repnz
adc
pushf
mov
jle
dec
pop
ds
xor
push
xor
sarb
adc
adc
sub
cli
cmpsl
and
cmpsb
data16
inc
inc
xor
dec
cmp
xlat
sbb
pusha
xor
push
sti
adc
push
inc
jno
fcmovbe
js
dec
mov
adc
jl
std
mov
cmpsb
lods
pop
and
cwtl
in
pop
es
sub
or
add
sub
repz
data16
mov
xor
fsubrl
inc
in
std
mov
jl
pop
mov
cli
mov
push
cwtl
jge
mov
jmp
ds
nop
jmp
mov
in
fs
loope
pusha
aas
cmpsb
adc
cmp
sub
repz
data16
mov
decb
fmull
cwtl
fidivl
repnz
jle
xor
ds
adc
out
fs
pop
fdivr
jp
aad
mov
setge
add
je
dec
jbe
in
fs
dec
shrb
dec
bt
mov
mov
clc
dec
cld
repz
data16
mov
mov
mov
inc
aas
aam
nop
sub
fdivrs
cwtl
cmpl
call
pop
ds
xor
loopne
mov
mov
dec
insb
and
xchg
adc
es
xchg
adc
cmp
and
in
leave
push
shrb
adc
stos
mov
dec
cpuid
cmpsb
sub
dec
bt
cwtl
test
mov
sub
repz
cbtw
add
sub
jle
mov
xor
aas
int
dec
pop
insb
or
xchg
into
xor
and
xchg
data16
inc
inc
cltd
add
mov
xlat
adc
pusha
loopne
fwait
push
mov
test
inc
jno
adc
sub
lock
pop
adc
jge
fs
popf
je
mov
mov
push
or
mov
cmp
mov
cmp
test
paddw
in
repz
mov
scas
in
push
pop
hlt
mov
pop
jno
jg,pn
xchg
mov
lret
clc
cmc
loopne
rclb
movsl
jmp
mov
lret
sub
es
sub
inc
popf
je
mov
pop
sbb
and
pop
out
cwtl
xchg
ret
cli
adc
sbb
adcl
xchg
add
mov
cli
adc
cmp
sub
stos
lods
fdivr
repz
data16
inc
in
mov
mov
pop
ljmp
sbb
jle
push
xor
adc
sub
sbb
xchg
cwtl
add
movsb
rcrl
xor
in
xchg
lret
cld
xorb
add
pushaw
jo
inc
nop
lcall
pop
jo
pop
push
add
sbb
and
cli
sbb
and
push
jo
inc
aam
add
push
sbb
daa
aam
push
or
mov
and
mov
fs
push
pop
call
mov
push
mov
mov
cs
or
int3
xchg
mov
sub
lods
mov
sbb
push
into
fisubl
aam
hlt
pop
cltd
pop
push
inc
push
mov
sub
jmp
or
sti
int
jecxz
dec
and
movsl
add
mov
test
pop
jb
rcrb
push
pop
push
movq
nop
orl
ds
iret
rcrl
push
mov
mov
nop
fildl
out
push
xor
sub
jbe
sub
leave
addr16
xor
ss
xor
bound
xchg
xor
xorl
movsb
sub
andb
or
pop
jbe
mov
aas
push
out
push
cmp
outsl
push
hlt
jmp
pop
and
out
cmp
add
fcoml
jbe
rcrl
mov
sbb
xchg
mov
sub
stos
pushf
sub
in
adc
mov
ds
and
sti
xor
xor
cmp
xor
mov
pushf
or
test
aad
and
fistl
sub
cmp
adc
push
fcomps
or
dec
push
outsb
shrb
jb
outsb
cmp
jae
cmpsb
cmp
fs
jbe
test
add
or
xchg
push
inc
jno
sub
xor
addl
cbtw
shr
movsb
jecxz
jno
fmull
pop
test
je
and
add
out
jge
and
ret
xor
dec
pushl
movsb
dec
adc
shll
and
xor
idivl
push
xor
xor
pop
movsb
push
mov
sub
mov
sbb
lods
cwtl
cmp
dec
or
jmpw
jmp
jge
loopne
repz
sub
sbb
dec
sub
mov
sub
out
cli
cmp
adc
push
mov
mov
ljmp
cwtl
cmp
dec
or
jmpw
jmp
jge
enter
les
fcmovb
adc
jp
ljmp
sbb
cli
movb
xchg
jb
subb
out
adc
mov
push
sbbl
dec
add
xchg
lds
push
fwait
aad
add
cmpsb
pop
out
cltd
pop
sahf
jne
pop
cmp
sbb
aad
push
out
aad
jle
adc
je
and
lods
sbb
push
mov
and
out
mov
data16
push
out
add
insb
cmp
std
push
dec
jecxz
sbb
loope
addb
and
or
add
int
cmp
dec
inc
ljmp
sub
push
mov
pop
fisubl
pop
imul
xor
insb
cmpsl
and
test
jmp
daa
inc
mov
and
fwait
jno
push
daa
mov
cmpsb
pop
add
pop
mov
cmp
sub
sbb
or
adcl
sub
adc
sub
cmp
cli
pop
sbbb
add
mov
ja
rolb
shll
xor
repnz
jb
loopne
pop
jbe
rclb
push
or
add
push
mov
cmpsl
mov
mov
pop
mov
mov
mov
and
xchg
subl
pop
sub
test
sbb
shrl
out
sub
pop
andb
mov
enter
sarl
cwtl
dec
push
clc
int3
inc
imulb
dec
dec
lods
mov
pop
lods
adc
idivb
cs
jl
fisubl
xor
jg
outsl
stos
mov
mov
pop
push
jecxz
jmp
test
push
or
mov
add
pop
adc
push
mov
repnz
aam
ljmp
jle
sub
sub
in
bound
jae
xchg
adc
jns
jb
and
pop
dec
shrb
cld
aas
imull
pop
jb
outsb
pop
dec
stc
sbb
jbe
adc
push
cli
insb
jb
and
bound
xchg
adc
push
xlat
mov
sub
hlt
mov
repnz
jb
adc
jp
xchg
adc
repnz
xchg
ja
mov
mov
sub
in
popf
repnz
add
rcrl
mov
push
adc
pop
lret
push
mov
ss
sub
int3
mov
mov
cwtl
shll
sbb
xchg
cli
ljmp
jge
sbb
sub
add
andb
cmpsb
arpl
hlt
mov
lcall
ja
repz
push
sub
imul
callw
cltd
mov
loop
in
and
pushf
fwait
hlt
insb
push
aas
dec
fcomip
push
lcall
insb
jg
jo
or
xchg
adc
xchg
cwtl
xchg
ja
mov
mov
mov
ds
in
adc
jmp
jo
push
in
js
es
cmp
fwait
insl
punpckldq
pusha
jp
pushf
addb
inc
hlt
pop
mov
jo
sbb
fdivr
mov
fistpl
xchg
xchg
and
add
dec
push
jge
call
jl
mov
mov
orl
popf
fdivrl
or
push
cmp
dec
mov
pop
outsb
mov
push
cld
imul
js
mov
in
shrb
loope
xor
pop
cmpb
scas
call
sub
mull
push
pop
ljmp
mov
js
sub
ror
cwtl
fsubl
in
xchg
shrb
je
dec
jbe
movsl
mov
add
jo
xchg
mov
fimull
bound
dec
in
dec
xchg
cli
les
cli
out
xor
mov
mov
cs
pop
sub
shlb
aas
xchg
lods
adc
mov
adc
or
push
jne
ljmp
fcompl
ljmp
ljmp
xchg
push
js
int3
int
ficoml
pop
adc
movsl
aas
add
jle
test
or
bnd
fs
pop
cld
cmp
bound
xlat
pop
jl
ljmp
cltd
shll
sarb
imul
mov
xor
pushf
mov
les
ljmp
call
and
jge
add
jp
adc
fs
cli
mov
testl
lods
imul
out
mov
sub
int
and
push
hlt
pop
stos
nop
mov
push
jae
pop
movb
xchg
repnz
sub
mov
adc
jmp
mov
aam
aas
mov
data16
add
sub
pop
sub
xorl
js
push
clc
int3
lret
jl
in
push
jbe
push
in
movsb
push
shrb
sahf
add
jno
mov
mov
pop
dec
fdivr
xchg
adc
shl
mov
dec
xlat
test
mov
neg
adc
xor
fidivl
xchg
ljmp
mov
push
call
lcall
outsb
and
cld
pop
or
sbb
mov
rcrl
jb
and
pop
dec
loopne
inc
inc
loope
aam
aas
dec
jp
pop
jb
outsb
pop
push
sbb
push
in
into
push
bound
adc
call
adc
test
mov
xor
mov
in
pop
lock
mov
cmp
imul
sbb
sub
add
cmpb
cmpsb
arpl
hlt
mov
lods
lcall
ja
repz
push
sub
imul
cltd
mov
xor
fwait
hlt
cmp
push
xor
push
jbe
push
in
xchg
cmpxchg
aas
je
dec
jbe
jne
xchg
sub
movsl
mov
mov
popa
adc
jg
xchg
push
sbb
mov
add
push
es
mov
and
fisttpl
mov
pop
pushf
jmp
insb
xor
imul
inc
dec
popa
push
add
push
xlat
sub
dec
nop/reserved
xlat
loope
mov
loope
shrl
test
ret
jns
pop
lods
jle
stc
pop
js
pop
xlat
adc
inc
lods
sbb
pop
mov
out
ficoml
xlat
cmpsl
mov
cmp
add
scas
pusha
test
ret
in
lret
pop
bound
in
ret
es
loope
jmp
out
shrb
or
mov
into
loope
shrl
test
ret
jns
pop
pop
jge
stc
pop
jb
pop
movsl
hlt
xor
repz
in
imul
data16
cltd
mov
ret
add
hlt
dec
inc
jecxz
cmpsb
xchg
scas
push
and
movsl
lods
in
pop
inc
sbb
clc
pushf
mov
xchg
mov
sbb
dec
cwtl
cmp
dec
or
repz
jmp
jge
or
lret
sbb
xchg
add
cli
sub
sbb
sub
cmp
xchg
adc
sub
cwtl
adc
cmp
jecxz
es
imull
aam
sub
sahf
das
add
fs
js,pt
xor
push
rorl
pusha
sbb
frstor
adc
cmpsb
bound
sub
jge
mov
mov
je
dec
mov
insb
mov
pushf
xchg
rcrb
mov
pop
ljmp
cmp
sub
sbb
xor
inc
cs
mov
movsl
fwait
nop
pusha
pop
out
jb
aad
daa
mov
jmp
rcrb
cltd
inc
sub
sbb
mov
loope
mov
movsb
and
arpl
mov
fildll
gs
xchg
or
mov
testl
out
push
pop
data16
les
adc
mov
mov
fistl
ds
inc
nop
lds
les
or
push
xchg
mov
mov
scas
xchg
jae
mov
insb
pop
cmpsl
mov
and
inc
dec
in
dec
fsubrl
cmp
sahf
mov
rcl
movsb
sbb
in
push
lea
ja
insb
jb
stc
push
push
sbb
psraw
adc
int
lods
xor
pop
cltd
adc
inc
xchg
mov
je
xor
sahf
aad
and
cmp
mov
aaa
ss
popf
je
pop
push
dec
in
push
pushf
sahf
in
dec
fisttps
pushf
fsubrl
push
xchg
test
lret
dec
xchg
rcrb
adc
or
xor
cmpsb
dec
int
add
mov
cs
push
adc
mov
movsl
movsl
scas
cmp
lcall
cmp
mov
das
jns
xrelease
ret
mov
mov
rclb
les
mov
aas
fcmovnbe
mov
inc
xor
adc
fbstp
hlt
les
or
pop
fucomip
sbb
xor
xchg
add
out
testb
sahf
repnz
or
adc
push
ds
mov
push
xchg
lcall
insb
and
jb,pt
or
clts
sub
xor
xor
xor
dec
andb
ds
cmpsl
stos
lea
cmp
andb
inc
mov
call
test
pushf
ret
scas
sub
pop
loope
andb
fwait
test
mov
cmp
mov
ljmp
je
pop
push
or
xor
popf
push
add
shrl
cld
push
aas
scas
test
aad
sbb
dec
mov
xor
das
cwtl
mov
sti
cwtl
adc
or
imul
mov
push
in
mov
mov
inc
out
pop
ds
aas
cs
sub
and
mov
xchg
mov
pop
ds
popf
pop
and
sub
inc
dec
mov
mov
loopne
xchg
shlb
xor
cmp
int3
out
clc
jecxz
shlb
add
in
icebp
xchg
or
add
adc
adc
lock
leave
xchg
roll
imul
cmp
cmp
iret
rorb
push
jae
sub
jl
sub
fidivrs
je
pop
int3
mov
jl
loopne
cli
and
push
adc
fcoml
ret
jb
les
adc
ds
inc
or
inc
push
push
cli
add
mov
sub
clc
and
adc
fimuls
sub
rorb
aam
movl
aam
dec
jbe
cmp
testl
adc
rcl
cmp
sbb
and
mov
xor
cs
mov
mov
pushf
outsb
add
mov
fmuls
mov
push
or
fadd
pushf
cmc
mov
jmp
sbb
jae
aaa
inc
fsubl
inc
aas
jp
push
xor
jecxz
mov
inc
fidivrl
dec
ds
push
xchg
mov
mov
mov
push
mov
pop
das
mov
or
inc
pop
push
dec
pop
jle
mov
cmc
xchg
jmp
sbb
mov
dec
mov
xchg
cwtl
sub
inc
jl
mov
pop
mov
cmp
shlb
mov
lahf
lods
pop
inc
cltd
adc
push
movsb
pop
shl
data16
lods
in
mov
push
inc
and
int3
orb
insb
pop
jo
add
sahf
addr16
pop
lock
mov
shll
mov
cmp
pop
dec
mov
inc
pop
sub
in
hlt
lcall
das
pusha
mov
dec
jbe
inc
jo
lretw
outsb
xchg
lea
pop
push
out
repnz
dec
in
xor
aam
add
in
xor
pop
cwtl
stos
adc
xchg
fcomps
sarl
les
div
push
sbb
push
xor
pop
sbb
lock
push
push
lret
test
xchg
add
jmp
sub
xor
es
pop
inc
dec
xor
repnz
sbb
push
cmc
xchg
jl
lahf
fcoms
sub
nop
dec
aas
cltd
int3
or
aam
ret
push
mov
cmp
into
adc
sub
dec
or
decl
movsb
pop
mov
sbb
lods
mov
jns
sub
in
push
insl
push
std
lods
rolb
test
aas
shl
mov
xchg
jae
shlb
cmp
lcall
ret
icebp
in
cmp
test
cmp
fisubrl
pop
mov
ja
mov
repnz
sub
sbb
es
push
hlt
mov
divb
xor
xor
test
repnz
aas
lret
outsl
push
inc
dec
fisttpl
inc
test
mov
aad
popf
inc
xchg
cmc
push
and
bnd
adc
aam
sbb
mov
or
out
fs
out
jo
and
xchg
push
fcomps
test
sbb
mov
int3
or
push
fdivl
mov
stos
es
leave
xchg
sub
leave
push
out
out
inc
mov
sub
sbb
sub
popf
je
cmp
and
add
mov
push
sbb
lods
dec
adc
leave
bound
in
leave
aas
lcall
sbb
jp
xchg
fs
xorb
adc
pop
jo
mov
push
push
repnz
add
sub
leave
data16
leave
aas
mov
hlt
sub
mov
sbb
mov
cwtl
cmpsl
mov
adc
pop
pop
adc
mov
xor
test
pushf
push
cs
stos
lea
jbe
mov
push
xchg
cmp
mov
sahf
fdivrs
sbb
das
push
mov
sub
nop
push
es
mov
int3
loope
jo
or
ss
sub
aam
mov
decl
dec
jae
cli
pop
xchg
int3
popa
pusha
jo
adc
push
sub
pop
ds
dec
call
jbe
jmp
sbb
lock
dec
jbe
pop
incb
in
pushf
jo
xchg
jns
int3
test
mov
lret
mov
cwtl
rcrb
and
cwtl
jg
call
insb
push
data16
and
in
sub
aas
lods
jb
jecxz
nop
pop
in
and
mov
mov
pushf
repnz
cmp
mov
jg
pushf
test
hlt
sbb
data16
push
and
dec
mov
jno
push
and
mov
mov
pushf
fiadds
rorb
mov
jg
orb
fidivrs
push
stos
loopne
xor
cmp
mov
repnz
ficoms
aam
or
int3
sub
push
scas
mov
shlb
rolb
push
lods
int3
or
push
pop
mov
es
scas
sbb
mov
jmp
aaa
inc
fsub
sbb
jb
fmuls
out
in
orb
cld
aas
fsub
mov
xchg
jae
out
pop
jbe
add
fnstenv
xchg
psubsb
push
cmp
xor
clc
add
arpl
inc
cmp
adc
xchg
mov
inc
insb
ret
inc
or
mov
cwtl
mov
fdivr
sbb
int3
call
pop
cltd
push
hlt
orl
lret
repnz
inc
jo
mov
cmp
clc
cld
xor
xor
sti
mov
pop
xchg
sbb
push
je
in
xchg
dec
pop
rolb
and
mov
es
xchg
ljmp
addr16
cmpl
sub
test
adc
xchg
adc
pop
jmp
mov
adc
out
sub
mov
pop
aad
push
xlat
inc
jp
push
repz
mov
fs
push
push
pop
dec
push
push
mov
stos
jl
jle
push
lret
jno
lds
sub
aad
sub
push
push
out
push
push
test
adcl
sbb
xor
mov
lcall
leave
xor
into
fwait
ds
sarb
cltd
insb
push
scas
xchg
paddsb
fmul
xlat
lahf
push
test
icebp
ss
movsb
cmp
mov
or
mov
or
mov
sbb
out
pusha
mov
xchg
rolb
pop
sub
push
push
or
push
xchg
jp
xor
mov
adc
fnstenv
push
test
xor
pop
loope
xchg
jp
push
jo
cmpsb
mov
sub
sub
xor
inc
mov
dec
mov
push
xor
add
sahf
push
out
add
out
sar
fsub
sbb
lahf
sub
lods
add
fdivs
mov
fidivrl
mov
mov
out
pop
fnsave
fsubrs
mov
jno
jl
push
out
jb
xlat
or
jle
mov
aam
push
add
jmp
sarl
cs
jbe
cwtl
jo
jb
mov
inc
sub
mov
int3
outsb
push
shr
aas
int3
mov
rorl
cli
or
dec
subl
call
mov
inc
popa
and
inc
in
push
and
aam
push
sbb
std
adc
repnz
fmuls
out
and
cmp
scas
cmp
repz
in
jb
xlat
hlt
fwait
test
testl
lret
push
pop
mov
ret
jno
fistpll
and
inc
lcall
sbb
xor
mov
mov
jb
add
mov
sbb
mov
loopne
xor
fdivrs
push
and
aaa
ja
movsl
push
mov
nop
addr16
outsb
fidivrs
push
fnsave
rcll
dec
ror
enter
data16
dec
or
adc
ljmp
sbb
mov
adc
xor
mov
mov
pop
sahf
pop
xorb
cmp
or
pop
mov
inc
mov
rcrl
mov
insl
push
rorb
pop
and
jae
lahf
shl
xor
clc
adcl
sbb
cmp
dec
aam
pop
adc
lret
sbb
sub
aaa
cmp
push
stos
and
enter
add
sbb
lret
js
pop
and
enter
or
cmp
shlb
clc
push
popa
mov
int3
adc
push
or
add
sub
add
sub
cmp
ret
or
jae
push
push
add
and
sub
out
jnp
dec
stc
sub
outsb
bound
rolb
xchg
sub
sbb
insl
push
xor
push
xor
insb
nop
mov
add
mov
push
cmpsl
aaa
jp
and
mov
mov
sbb
les
int
addb
fimull
mov
mov
xor
xor
or
int
mov
subb
add
adcl
out
movsb
fdivl
and
insb
in
inc
dec
mov
pop
mov
sub
std
insb
push
insl
pop
stc
cmp
pop
pop
sub
jo
mov
sbbb
and
jl
sub
fldl
pushf
xchg
jb
out
in
int3
push
push
push
int3
stos
push
cwtl
cmpsl
mov
add
hlt
mov
cld
lcall
inc
push
add
xchg
insb
ja
test
sbb
inc
fists
xchg
cmp
cmp
lods
push
mov
cmp
scas
andb
jns
push
adc
es
inc
sbb
loopne
inc
inc
sarl
sbb
imul
or
mov
cmc
cld
jecxz
pop
jbe
cld
aas
sti
sbb
pusha
sbb
jl
cs
jp
mov
pop
data16
pop
bound
dec
jecxz
lret
in
test
push
cld
adc
cmp
mov
sub
mov
push
push
ljmp
add
sbbl
incb
or
mov
cmc
cld
out
dec
pop
push
fdivr
aas
out
add
add
cltd
shll
sarb
imul
or
hlt
pop
xor
pop
xor
dec
in
pop
iret
jl
xchg
aam
xchg
or
sub
cmp
cmpsb
mov
mov
cmp
das
je
sub
in
add
ror
arpl
mov
lahf
pop
inc
int
cwtl
mov
inc
dec
adc
push
sub
inc
xlat
dec
mov
ret
sub
jle
xor
lahf
mov
sbb
adc
fimull
les
mov
les
mov
in
xor
xor
adc
sbb
push
mov
jl
sbb
addr16
inc
fsubl
push
or
in
xor
add
pop
cmp
stc
jl
xor
pop
dec
xor
mov
mov
sbb
cs
xchg
mov
and
cmp
lret
dec
lods
jge
or
or
sbb
test
cmp
mull
mov
fstpl
loop
ret
rol
sub
in
dec
push
jl
mov
mov
adc
gs
mov
ret
loope
add
lcall
cmpb
je
aam
js
lea
mov
decl
jmp
sbb
aam
fsubs
adc
loop
sbb
pop
adcl
inc
fdivs
data16
add
cmpb
adc
mov
popf
cmpsb
dec
pop
dec
xor
movsl
push
fimull
and
add
pusha
push
and
popa
stos
mov
in
out
mov
out
mov
pop
andb
cwtl
add
add
mov
cld
cmp
mov
sub
ds
pop
and
mov
cld
pop
sahf
sar
push
mov
pop
fwait
addb
hlt
cwtl
dec
jbe
js
adc
ds
stc
sub
sub
cmp
ds
ret
xor
xacquire
jbe
xchg
xor
mov
cmpsl
or
dec
jbe
inc
pop
cwtl
mov
mov
mov
cwtl
mov
dec
shlb
lea
aam
push
cmp
mov
xchg
add
push
mov
sub
int3
lcall
push
pusha
cbtw
jo
or
pop
lcall
div
pop
icebp
or
jl
hlt
jg
std
andb
and
mov
xor
ljmp
sub
int3
lret
mov
mov
sub
sbb
test
scas
movsl
pop
int3
repnz
mov
cli
lcall
mov
push
in
in
aas
xchg
cmp
sbb
or
xor
mov
data16
dec
ret
addb
cmp
mov
pop
faddl
xchg
cld
repz
sub
sarb
test
add
cwtl
int3
adc
sub
adc
and
jne
dec
ret
es
pop
and
stos
or
hlt
jl
outsb
cmp
sahf
cmpsl
xchg
push
aas
sti
inc
push
repnz
dec
adc
push
fwait
aam
push
push
cmp
fnsave
mov
nop
push
sub
cwtl
jbe
push
ds
adc
dec
adc
sar
aas
push
cmp
popa
cld
das
pop
dec
sbb
pusha
pushw
or
int
fmuls
data16
sbb
cmpsl
je
in
sub
and
pop
sub
rclb
pop
andb
cli
jae
cmp
inc
push
jo
and
push
ret
in
or
or
adc
adcb
fwait
aam
dec
push
jle
add
in
cmp
out
ds
das
nop
insl
mov
add
fwait
lcall
sbb
aad
mov
and
das
adc
and
add
shrb
lcall
mov
mov
popa
xchg
mov
cmp
out
and
mov
repnz
jg
adc
je
je
adc
mov
xor
ljmp
test
add
ds
pop
pop
cmpsb
pushf
pusha
add
mov
fcomps
je
inc
lock
inc
jbe
sarb
ja
mov
inc
ficoml
test
jmp
and
sub
rcll
shlb
and
sarl
cmpl
into
ds
lss
sahf
shrl
in
shrb
pop
outsl
outsb
mov
push
fwait
xorb
adc
shr
push
ljmp
sub
hlt
ja
mov
adc
cmpsl
mov
sbb
test
dec
mov
pop
push
xor
mov
xlat
cltd
adc
cmp
dec
cwtl
mov
and
insb
pop
cmp
hlt
adc
and
mov
repnz
adc
adc
pop
mov
jmp
rorl
sarb
mov
sub
cmp
jl
mov
lock
sbb
aas
fistps
test
jle
sub
popa
or
xchg
lock
xor
stos
xorl
add
mov
sbb
aaa
jge
pop
add
cmpsl
mov
and
mov
repnz
dec
cs
imul
repnz
lcall
dec
mov
mov
clc
hlt
and
test
repnz
in
rorb
cli
xchg
pop
sar
or
cwtl
cmp
cmpsb
lahf
xor
cwtl
cmp
bound
cmp
add
addl
int3
pushf
sbb
call
cld
or
dec
jecxz
mov
cmp
loope
mov
jno
push
fisubrl
add
js
lea
int
dec
push
push
xor
sbb
cmpsl
inc
jb
adc
leavew
repnz
dec
push
push
jp
adc
mov
clc
fadds
jno
cli
fnclex
pop
mov
jbe
pop
push
sub
lret
mov
ljmp
fsubrl
loop
jl
mov
mov
pop
call
mov
pusha
push
sbb
push
inc
arpl
mov
pop
pop
or
in
lock
sahf
aaa
fisttpll
mov
cmp
sub
data16
dec
pop
mov
ds
push
repnz
push
sbb
pop
add
fcoml
and
jp
arpl
in
lock
mov
mov
adc
cmpsl
adc
xor
dec
pop
cmpsb
mov
inc
cwtl
jge
pop
mov
cwtl
mov
pop
popa
pusha
push
aad
hlt
addb
inc
arpl
mov
add
lock
sahf
aaa
fisttpll
mov
cmp
sub
data16
repnz
and
les
inc
ss
push
repnz
push
jo
js
mov
insb
hlt
adcb
inc
mov
jbe
pop
push
sub
lret
mov
ljmp
je
push
dec
or
pop
mov
mov
int3
cwtl
rcrl
in
pop
fistps
mov
sbb
adc
mov
cwtl
jge
push
loopne
inc
ljmp
cltd
into
xchg
cmp
dec
pushf
pushf
je
add
iret
push
cwtl
sub
nop
andb
sbb
sub
add
inc
mov
nop
jp
nop
pop
mov
in
pop
and
or
lcall
repnz
in
in
xchg
or
inc
sub
xchg
mov
ss
stc
add
push
pop
in
popf
fstpl
mov
sbb
dec
daa
mov
add
inc
adc
mov
fsubrl
enter
ds
mov
jbe
inc
cmp
sub
mov
dec
movsb
mov
cmp
inc
icebp
mov
sbb
sub
dec
int3
cmp
cmp
shrl
in
in
lcall
mov
sub
shlb
in
cmp
sub
cld
adc
lret
sahf
out
gs
jl
fmul
stc
jno
addr16
jecxz
xlat
cmp
lret
lds
add
pop
xchg
sbb
mov
cmc
enter
mov
push
scas
in
jl
int3
ds
je
in
sub
mov
or
pop
push
ret
mov
hlt
or
jae
jmp
out
nop
pop
fs
pop
fsub
jo
sbb
in
mov
mov
sub
pop
push
push
adc
push
ret
lahf
cmp
cli
xchg
mov
add
jge
aas
fimull
adc
mov
dec
ja
add
dec
sub
add
mov
jae
imul
negb
mov
insb
pop
out
push
shrl
push
add
insb
ret
inc
jbe
push
push
jo
mov
nop
ljmp
xchg
adc
xor
mov
jl
or
pop
mov
xor
lods
pop
fs
xor
int
movsb
sub
cmpsl
out
mov
add
movsb
clc
mov
mov
fimull
mov
push
push
sbb
sub
test
add
cld
push
inc
jbe
adc
mov
adc
cmp
xor
pop
jp
mov
shlb
fwait
mov
fistpl
pushf
mov
rcrl
jle
aad
sbbb
push
cli
push
cltd
adc
loope
bound
sub
sub
es
cmpsb
and
clc
mov
aas
mov
das
sbb
ljmp
add
add
cmp
aas
push
adc
adc
or
cmp
in
sub
cmp
push
ss
add
cmpb
adc
mov
popf
cmpsb
dec
pop
dec
cvttps2pi
cmpsl
mov
sbb
cltd
adc
xchg
test
repnz
add
es
cmpsb
adc
mov
call
mov
movsb
repz
pop
add
mov
and
jl
clc
addr16
aam
sbb
mov
xor
iret
push
dec
push
mov
shufps
addl
dec
scas
cwtl
cmp
mov
and
loope
and
aad
add
push
jb
rolb
mov
out
jne
sub
pop
mov
repnz
ret
daa
stc
pop
jbe
push
mov
or
lcall
mov
fcompl
out
leave
or
hlt
fcompl
pusha
mov
mov
pop
je
out
dec
rcl
or
push
test
jbe
jl
push
xor
sbb
jl
rcl
xor
je
inc
mov
aaa
outsb
mov
adc
cmp
test
or
mov
aam
or
je
mov
sub
cmp
sub
inc
pop
mov
or
enter
mov
fs
bound
in
add
test
xor
mov
sbb
lods
adc
dec
je
jge
adc
cmpsb
sub
sarb
movsb
jno
or
or
jo
in
test
fcoms
inc
jo
aam
push
push
mov
ret
addb
push
insb
pop
cmpsb
data16
inc
xor
cmp
xor
mov
inc
pop
outsb
mov
jno
rorl
aam
inc
pop
cwtl
movsb
jp
xchg
fstps
adc
push
pop
test
ljmp
jo
mov
cld
scas
xchg
movsl
rorl
nop
cwtl
imul
mov
dec
adc
xorl
or
dec
mov
loopne
dec
adc
xor
ljmp
je
push
xor
clc
ret
xor
cld
and
outsb
mov
out
jmp
shrb
dec
xchg
add
pop
mov
sbb
jl
mov
test
cwtl
pop
pushf
jae
addr16
in
subb
repz
dec
call
add
jp
cltd
mov
push
movsb
repnz
jbe
push
push
jo
push
in
aam
adc
xlat
rclb
jmp
lds
fxch
lods
push
mov
test
and
mov
ds
enter
outsb
mov
out
jmp
rorb
dec
pop
shll
dec
rclb
clc
mov
cmc
push
pusha
and
pop
in
mov
ficomps
xor
xor
jge
pop
push
rolb
mov
sub
sti
add
xchg
cmp
push
repnz
cld
mov
movsl
and
fsubs
push
lea
dec
add
addl
int3
pushf
sbb
ljmp
or
dec
jecxz
mov
xor
int3
mov
jno
cwtl
fiaddl
or
stos
push
push
fs
jmp
push
push
xor
pop
dec
mov
and
cwtl
or
add
orl
repnz
pushf
fidivrl
sbb
add
pop
cmpsb
fildll
pop
push
sub
lret
mov
ljmp
test
push
xchg
or
pop
jle
mov
outsl
mov
pop
enter
or
pop
popa
pusha
push
jl
xor
std
mov
xchg
xchg
mov
sahf
cmp
jge
fwait
mov
mov
mov
cmp
mov
mov
pop
jb
add
sub
cwtl
cld
cmp
mov
inc
or
lcall
cwtl
jge
nop
fwait
push
in
and
inc
ja
test
dec
mov
mov
les
ljmp
push
add
sahf
aad
mov
and
icebp
mov
mul
ljmp
jge
or
or
cmp
cld
fs
pop
sub
dec
mov
aad
push
pop
je
clc
repnz
out
and
and
push
jle
nop
add
cwtl
add
pop
cwtd
adc
or
or
pop
ja
test
loopne
inc
jo
push
ds
push
lea
cs
push
sub
adc
xor
xchg
adc
cli
mov
cmpsb
dec
repz
mov
and
mov
cmp
sbb
aaa
push
jae
mov
push
mov
lods
mov
dec
mov
hlt
mov
mov
fwait
es
jp
pushf
mov
aam
push
mov
in
mov
xchg
mov
xchg
es
sub
dec
pslld
mul
adc
sub
adc
les
mov
add
cmpsl
xchg
loopne
pushf
clc
dec
sti
xchg
enter
in
inc
test
xchg
xor
mov
mov
pop
dec
mov
rorb
testl
mov
mov
in
inc
repz
clc
cmp
inc
add
mov
cwtl
clc
mov
mov
bound
sub
mov
rorb
adcl
hlt
cwtl
sbb
pushf
cmp
cs
repz
push
mov
or
sub
adc
or
mov
xor
push
pop
push
xor
mov
xlat
cltd
adc
push
in
sbb
insb
pop
pusha
add
sahf
in
movsb
dec
push
jl
dec
out
fcomps
aam
sbb
inc
sbb
lcall
mov
adc
or
add
xchg
fstpt
jbe
shl
dec
adc
data16
pusha
pop
aas
cmp
loope
mov
inc
sub
lea
or
jae
test
xor
sbb
int3
jbe
dec
movsb
jae
xor
out
dec
dec
pushf
dec
or
mov
jecxz
rclb
push
fimull
cmp
add
sbb
fmull
add
mov
mov
popa
stos
mov
adc
jmp
movsl
adc
sub
cli
std
rep
aam
and
lock
push
mov
imul
inc
fmull
iret
rcrl
jg
addr16
dec
ret
sub
out
or
cwtl
xchg
jg
mov
add
sub
sar
cld
lock
faddp
and
into
push
pop
popa
lret
mov
mov
dec
mov
inc
mov
fldcw
lods
push
hlt
test
in
ljmp
jle
outsb
dec
nop
pop
cmpsl
sarb
adc
js
jnp
in
popa
stos
jge
push
mov
aas
test
dec
sub
mov
fs
add
aaa
add
cmpsb
dec
in
sub
jmp
cmpsl
mov
test
push
cmp
xor
ret
ds
stc
sub
xor
cltd
pop
adc
jo
jp
cmp
out
pop
aam
mov
dec
mov
dec
add
mov
adc
xor
pushf
fwait
fimull
sbb
hlt
add
and
mov
jle
hlt
test
in
not
push
push
and
or
cmp
popw
jecxz
inc
xor
sbbb
fs
in
loopne
ds
dec
xchg
or
stos
fisubl
xor
mov
loope
mov
adc
push
sub
aas
in
aam
cmp
stos
fimuls
test
pop
jo
and
pop
dec
lods
insb
pop
cmpsl
scas
xlat
fcompl
push
push
push
int3
push
cmp
aam
sbb
mov
pop
shll
xor
pop
in
subl
fsubs
sbb
cmp
mov
pop
sbb
push
iret
pop
pop
pop
hlt
int3
xchg
pop
pop
mov
add
dec
ret
sub
popf
jno
aaa
jnp
push
push
std
fwait
in
mov
push
ret
xor
xchg
leave
or
loopne
sub
loop
cmpb
in
adc
pop
fsub
aad
scas
jmp
inc
jo
fcoms
and
imul
cmpsl
jge
nop
sub
gs
push
add
sub
and
in
std
sahf
enter
pop
xor
jle
xchg
xchg
js
andb
xchg
call
jle
xchg
int3
js
cmp
mov
frstor
pop
call
js
testl
sbb
inc
outsl
andb
cld
push
pop
mov
cld
aas
add
mov
cltd
shll
sarb
imul
mov
mov
pop
mov
cltd
adc
movsl
xor
sub
in
mov
enter
pop
pushf
inc
or
xor
es
xchg
inc
fcoms
pop
dec
add
xchg
sahf
and
push
xchg
push
push
mov
pop
and
or
pusha
std
xchg
enter
sub
je
fucomi
and
int3
out
pop
loop
sarb
rorb
mov
daa
push
sbb
fidivrl
add
popf
je
adc
and
cld
push
iret
lock
sub
fwait
sub
fucomi
ret
hlt
pop
mov
je
mov
insb
pop
into
mov
pushf
mov
ss
loop
push
inc
in
mov
std
add
aaa
push
hlt
cmpsl
ret
sbbl
or
lahf
loopne
xchg
cmpsl
negl
or
mov
sub
xchg
mov
ds
out
adc
je
je
je
sbb
xchg
roll
repnz
jle
cmp
xorl
push
sar
push
fwait
shll
aas
or
mov
ret
bound
push
inc
jo
inc
fdivrp
fstps
xchg
cmp
repnz
xor
fwait
in
and
add
adc
movsb
jle
mov
call
lret
lahf
les
ss
adcl
mov
call
dec
pusha
pusha
or
dec
sub
cmp
shll
mov
jae
and
in
sbb
in
pop
dec
sbb
xchg
movsl
mov
movsl
add
mov
test
push
sub
shll
and
and
in
sbbl
pop
dec
test
mov
jne
dec
cmpsl
clc
or
cmp
sub
cmpsb
sbb
sbb
fdivrl
or
push
dec
xor
mov
loop
pushaw
ss
or
in
ret
push
pop
les
push
cmpsl
pop
out
and
fcoml
sub
push
pop
ljmp
inc
rcl
mov
test
xchg
js
jge
inc
pop
xchg
pop
xorl
mov
das
jo
loope
addb
bound
xchg
and
jns
loop
outsb
in
lcall
inc
mov
mov
test
add
jo
stos
ds
lods
add
sahf
sub
pop
cli
mov
push
daa
mov
cwtl
ret
push
lods
sbb
xchg
stc
lods
mov
sub
rcrl
ret
jg
add
rcrl
shll
fdivr
jle
jg
shrl
daa
dec
mov
sbb
pop
shrb
xlat
pushf
or
cmp
decl
mov
imul
movsb
cwtl
jge
pop
cwtl
loopne
mov
andb
push
in
mov
ss
sub
cld
pop
ds
movsb
shlb
mov
adc
cld
add
lock
inc
movsb
test
out
mov
loop
mov
pop
testl
sbb
mov
push
adc
inc
xchg
fistpl
or
lahf
sub
and
fistl
cmp
adc
inc
mov
jae
pop
push
addb
pop
es
dec
shrl
xor
sbb
ss
xor
sub
data16
ss
add
or
mov
xor
fs
pusha
pop
cmp
cmp
int3
and
mov
jmp
add
or
insb
cmpsl
cmc
cld
bound
pop
sub
cld
aas
jp
add
repz
fcomip
fistl
hlt
xor
inc
mov
or
cwtl
xchg
xor
stos
xor
stc
ss
xor
fsubl
in
cli
cmp
cmp
mov
push
in
dec
and
insb
repnz
daa
sub
enter
out
jo
jae
xchg
sub
es
out
mulb
sub
mov
sbb
pop
frstor
dec
adc
adc
pop
mov
mov
push
fsts
lcall
int3
sarl
insb
int
adc
cmp
mov
lcall
and
in
insb
adcl
lcall
cwtl
mov
jo
sahf
or
dec
lcall
out
mov
dec
rcr
or
call
mov
jmp
sbb
pop
pop
mov
adc
mov
mov
jmp
fs
arpl
jge
push
pusha
mov
pop
xor
xchg
aas
mov
es
loope
ja
mov
outsb
xchg
jb
ret
pushf
or
mov
insl
pusha
rcll
int
repnz
sbb
jmp
js
nop
shrb
aam
dec
jbe
call
stos
and
add
mov
data16
fidivs
mov
leave
es
cmpsb
in
movsb
dec
lcall
pop
jp
int3
out
add
mov
lods
rol
int
out
or
mov
push
repnz
and
mov
adc
jl
jge
jecxz
je
sub
fisttps
adc
and
dec
pslld
repnz
mov
push
sahf
in
sbb
xchg
cld
adc
sub
dec
dec
mov
sub
ss
loop
xchg
lcall
das
add
push
test
inc
jno
push
dec
bnd
xchg
ljmp
loope
test
pusha
mov
jns
ljmp
ljmp
pop
pop
lods
ret
aam
xor
and
pop
icebp
sbb
add
fwait
pop
int3
add
add
cmpsl
cld
xor
rcrl
mov
sbb
dec
pop
xchg
int3
fcoms
in
dec
xchg
cmp
xor
pop
int3
sub
and
xor
shll
dec
repnz
dec
inc
dec
sub
jecxz
mov
jle
pop
repnz
push
rcll
cmp
jo
dec
lods
inc
movsb
test
out
mov
aaa
ror
lret
add
xadd
adc
hlt
add
shlb
stos
mov
pop
mov
mov
xchg
push
sub
data16
in
shrb
loope
xor
dec
mov
adc
out
std
add
popl
adc
mov
cltd
mov
out
push
sub
cs
inc
jl
ror
jb
mov
repnz
dec
movsb
jne
xchg
push
sbb
and
adc
mov
xchg
push
sbb
shl
mov
jmp
or
mov
xchg
fsubr
setbe
jne
cmp
and
dec
mov
pop
adc
and
dec
pslld
mov
sahf
sub
xchg
dec
adc
sub
dec
sbb
mov
inc
inc
mov
fwait
xorb
rcrb
mov
sahf
and
push
fmull
mov
aaa
xchg
mov
out
cmpb
mov
jl
xor
and
loopw
jl
dec
pop
dec
fdivr
cmp
fildll
push
dec
pslld
ja
mov
mov
sub
pop
jp
cld
cmp
aaa
ss
popf
je
pop
xchg
stc
mov
test
sarl
adc
clc
and
sub
dec
lsl
mov
pop
push
cli
cli
adc
hlt
or
es
out
sub
mov
cmp
fcos
mov
mov
xor
mov
fimull
cltd
adc
inc
xchg
sub
or
sub
and
fistl
cmp
adc
inc
mov
xlat
decl
es
pop
mov
imul
dec
lods
and
push
jno
test
adc
or
mov
mov
rclb
push
arpl
enter
sar
icebp
data16
sub
arpl
jge
push
pusha
mov
imul
ljmp
ret
icebp
cmc
pop
and
test
scas
inc
mov
loop
mov
adc
add
sub
mov
pop
inc
iret
roll
std
inc
adc
pop
in
xlat
pop
sbb
sahf
nop
sbb
jb
xlat
mov
push
xlat
mov
cli
or
repz
mov
out
aam
sub
lods
mov
and
outsb
iret
dec
jo
out
push
push
in
call
jl
mov
rcrl
push
loopne
jbe
jg
add
int3
or
sub
mov
je
cmpsb
or
adc
mov
push
mov
pop
and
mov
mov
out
mov
movsb
mov
add
add
mov
repnz
push
xchg
subb
xlat
inc
repnz
in
hlt
aas
mov
mov
push
out
xchg
dec
pop
scas
inc
dec
push
mov
pop
sub
nop
bound
jge
push
pusha
mov
pop
fdiv
bound
aas
push
dec
imul
in
mov
push
lea
cltd
cmpb
sbb
push
inc
add
arpl
hlt
mov
lcall
mov
xor
dec
fldl
test
lods
incl
lcall
sbb
sbb
pop
decl
bound
dec
jbe
jmp
mov
pusha
xlat
mov
outsb
sub
xchg
fcomps
stc
icebp
xchg
sarl
call
sub
jns
or
mov
fcomip
adc
movsb
aaa
adc
and
dec
pslld
ljmp
andb
loopne
jmp
clc
mov
mov
jmp
or
movsb
pop
xchg
pushf
rorb
push
pop
stos
hlt
sbb
test
les
dec
fsubrs
rolb
and
jmp
sbb
mov
sbb
mov
repnz
sarl
adc
call
pusha
pop
xchg
inc
sahf
pop
mov
inc
or
test
push
into
mov
adc
push
xor
xor
pop
loope
xchg
jp
push
mov
sbb
and
ret
test
stos
pop
inc
sub
xor
inc
lea
and
jb
shl
scas
es
sbb
aam
popa
sub
adc
and
cli
push
je
out
push
insb
push
adc
sbb
mov
mov
incb
jbe
mov
or
jmp
aam
ja
pop
lret
jb
pop
cmp
lcall
popa
shlb
cmpb
cld
xchg
mov
das
popa
lcall
push
inc
jbe
rcrb
mov
fiaddl
pop
lds
into
sub
test
aas
mov
pop
or
fildll
mov
int3
jl
mov
push
out
repnz
push
dec
cmpsb
mov
mov
push
mov
xor
fsub
and
pop
repnz
xchg
pop
mov
sub
xchg
arpl
xchg
mov
imul
in
pop
mov
bound
jne
cltd
subb
push
jge
pusha
shrl
pop
pop
int
repnz
or
jmp
ret
dec
nop
sarb
jg
jl
jbe
cmp
das
pop
add
adc
jo
cmp
loop
pushf
adc
and
jle
sbb
dec
mov
nop
rorl
cld
push
inc
push
dec
lods
inc
movsb
test
out
mov
data16
out
stos
insb
movsb
mov
jbe
xchg
push
stos
push
cwtl
loopne
sbb
mov
xchg
sbbb
push
cld
cltd
lods
imul
dec
pushf
xor
shrl
nop
jle
mov
movsb
pop
mov
in
repnz
push
fmuls
cmp
sarb
cmp
xor
ljmp
fmuls
mov
cmp
dec
xorb
shlb
popa
ja
fldt
cmp
mov
frstor
inc
push
mov
aad
add
stos
pop
pop
int
into
in
rcr
xchg
inc
push
inc
lods
push
inc
jbe
xlat
xchg
mov
sub
push
lods
adc
pop
fistps
int3
cltd
cmpsl
mov
shr
and
jge
imul
scas
int
addr16
mov
or
xchg
pop
and
jl
imull
cmp
sbb
push
enter
lret
js
fcompl
test
xor
mov
push
into
pop
cmc
inc
orb
enter
sbb
inc
hlt
mov
or
jg
in
adc
dec
inc
push
es
idivl
xchg
pop
push
orl
pop
adc
and
jle
test
adcl
jp
sub
bound
adc
push
les
xchg
mov
rcrl
xor
in
and
xchg
aam
test
inc
jo
mov
jb
leave
jg
in
shlb
ret
mov
jl
testl
mov
mov
ja
dec
jge
lods
rol
int
out
or
mov
push
xor
and
mov
ret
push
sub
mov
xchg
adcb
pslld
ja
mov
mov
sub
pop
stos
fdivr
imul
sub
sub
xor
jb
cltd
xchg
adc
pop
ror
fidivrl
jnp
js
outsb
xor
scas
sbbb
xor
dec
aam
stc
daa
inc
fidivrl
dec
push
cmpsl
inc
inc
out
js
adc
in
loope
jmp
lahf
imul
sub
nop
mov
pop
fmulp
es
cmp
pop
mov
jp
in
push
outsl
mov
ret
repnz
mov
clc
leave
jb
mov
daa
inc
test
in
insb
subl
hlt
mov
outsl
pop
leave
xchg
mov
lcall
movsl
xlat
mov
adc
mov
shrb
cmp
mov
add
repnz
das
ret
test
xlat
in
and
scas
push
ja
push
les
das
daa
add
les
and
mov
push
jbe
push
sahf
test
cld
repz
mov
adc
mov
rcrl
mov
outsl
ja
and
cmpsl
sbb
pop
sti
push
bound
stos
mov
sub
sbb
into
xor
insl
pop
daa
sub
and
lcall
idiv
or
std
out
mov
int
and
jb
int
fidivs
out
leave
jmp
icebp
dec
xchg
ror
icebp
movsl
pop
sub
mov
jmp
cs
mov
pop
and
jne
push
push
cmp
sbb
lods
daa
leave
dec
inc
cmp
mov
cmpsb
nop
pushf
cmp
dec
push
push
add
jl
sub
daa
inc
int
and
call
fsts
int3
mov
adc
jmp
out
jle
in
jne
mov
xchg
inc
mov
fistpll
fwait
mov
mov
or
test
dec
mov
cltd
add
scas
cmp
and
ret
pop
sub
mov
mov
sbb
push
fcmove
test
cmpsb
adc
fisubrl
push
xorb
int
into
je
lret
cld
sub
sub
push
add
shrl
push
fwait
scas
insl
pop
fs
repnz
sub
pop
xchg
mov
add
les
cltd
subb
sbb
adc
loope
bound
mov
sub
pushf
lods
cld
pop
addb
or
xchg
mov
fcomps
ror
xor
ret
xchg
mov
mov
dec
ds
scas
cmpb
movsb
rclb
sarb
dec
out
pushf
inc
mov
pop
inc
sbb
fcmovne
ds
push
mov
or
cmpsb
loope
icebp
cmp
cmp
push
scas
jge
scas
sbb
inc
imul
mov
adcb
cltd
rclb
push
dec
pop
pop
push
lcall
mov
adc
mov
dec
and
pusha
or
dec
sbb
mov
mov
and
inc
data16
xor
xor
int
shrb
mov
dec
xor
cmovp
mov
enter
push
push
inc
clc
inc
xchg
push
sub
dec
or
das
je
arpl
dec
lahf
xchg
cld
mov
xchg
add
filds
hlt
data16
pop
sbb
out
lods
sbbb
dec
subb
negb
dec
and
mov
jp
fisubl
movsl
mov
pop
or
push
sub
loop
sub
cmovg
cmp
push
bound
stos
mov
sub
sbb
into
xor
pop
test
sub
push
inc
lods
jae
js,pt
jl
ret
xchg
add
jb
xor
in
repnz
xchg
dec
push
mov
xor
movsb
pop
mov
in
enter
data16
fdivrl
xor
jl
mov
aaa
nop
mov
adcb
cmp
call
sbb
lods
add
cmp
pop
push
jmp
mov
xchg
iret
es
lret
jno
lds
sub
cmp
pop
cmp
cmc
std
daa
insb
sub
nop
out
in
stc
jbe
sub
sbbl
cli
jbe
imul
repnz
lock
mov
jge
nop
test
sub
inc
aad
and
and
sub
sub
inc
and
fidivl
iret
push
std
fiaddl
test
sbb
and
add
xor
add
lcall
addr16
pop
mov
and
inc
xchg
repnz
jmp
sbb
pop
outsl
jp
cli
out
mov
cwtl
mov
pop
and
push
or
sbb
pushf
or
test
fwait
sbbb
sti
ds
cmpl
push
data16
xchg
subb
lods
movsb
mov
sbb
pusha
je
popa
lods
and
sahf
inc
data16
cmpsb
movsb
pop
test
insb
inc
mov
jo
movsl
decb
lret
xchg
or
add
pop
add
into
jp
fiaddl
movsl
or
mov
xchg
adc
sub
cmovg
cmp
push
bound
stos
add
cwtl
adc
xor
insl
pop
loope
add
and
scas
hlt
dec
adc
in
sub
enter
int
and
fnstsw
into
in
or
push
sub
sbb
es
ljmpw
mov
outsb
test
and
push
or
inc
in
aaa
cmpsb
mov
aam
dec
pop
add
add
jbe
push
test
jb
jmp
shlb
in
cmp
sub
jl
sbb
pop
popf
and
jo
outsb
aaa
adc
jg
sbb
mov
cmc
std
or
cmpsl
mov
mov
cmp
cld
test
jb
dec
dec
fs
xchg
bound
jle
popa
sbb
push
popf
xchg
xchg
repnz
jp
cmp
sbb
push
xor
cmp
mov
int3
imul
cmp
push
mov
sbb
fmul
mov
jle
push
lods
das
jg
sbb
ret
jbe
xor
ljmp
push
push
int3
adc
call
and
movsb
xorl
test
adcb
aaa
add
gs
adc
cmp
mov
push
jno
mov
loope,pn
inc
jecxz
dec
lock
add
fnstenv
lret
fsubrp
sbb
cmc
test
mov
cmp
xchg
sub
lret
loopne
iret
push
test
inc
jecxz
add
xchg
jmp
inc
jmp
dec
jbe
movsl
inc
enter
mov
clc
inc
push
sbb
fwait
in
sbbb
add
mov
mov
lock
rcrb
shll
ljmp
pop
sub
cmp
mov
aaa
roll
mov
adc
clc
sub
mov
and
cltd
push
cmc
in
cmpl
sbb
xor
cs
ljmp
adc
notb
inc
stos
fdivr
cmp
push
mov
inc
lret
lcall
jmp
adc
lock
lods
fcmovnu
decl
mov
inc
pop
dec
xor
jo
push
sbb
and
addr16
and
or
jb
push
lret
out
popa
fsubs
adc
or
out
movsl
sub
subb
sbb
xchg
dec
adc
inc
subb
dec
inc
sbb
pop
test
adc
xchg
mov
adc
adc
mov
xor
pop
loope
xchg
lea
xlat
push
push
in
fs
pusha
sub
ljmp
sub
iret
cmp
mov
mov
mov
mov
sub
shl
inc
cmp
xchg
push
fsubr
in
fs
movsb
in
or
adc
dec
mov
je
mov
mov
push
lahf
dec
inc
add
fwait
pop
inc
add
add
andl
mov
or
pop
aam
in
bnd
subl
sub
mov
sbb
into
fcompl
jg
push
or
pop
mov
es
pop
sbb
dec
hlt
cld
imul
xchg
jbe
je
jb
rcrb
and
push
or
ds
jle
adc
mov
mov
clc
push
push
inc
loop
loopne
aaa
adcl
add
sbb
out
ds
lods
pop
cmp
mov
sub
clc
lret
mov
out
push
jl
jmp
sbb
push
repz
mov
or
pushf
and
fs
add
test
lods
inc
hlt
cwtl
hlt
sub
mov
pop
out
pushf
mov
and
aas
push
stos
sub
loop
pushf
loopne
rcrb
lret
xchg
mov
and
xor
mov
xor
mov
or
mov
int3
out
cmp
jae
mov
mov
test
call
fimull
mov
jg
or
aas
ds
sub
push
lods
rolb
into
cwtl
jg
outsb
jmp
mov
or
pop
divb
mov
fidivs
push
inc
dec
test
add
iret
das
inc
and
and
dec
mov
fs
adc
popf
stos
ljmp
adc
push
fistps
xchg
bound
jb
jl
sbb
fcom
icebp
cmpsb
sub
push
lock
cld
enter
xchg
enter
xor
sbb
push
popf
and
repz
xchg
movb
inc
fucomp
adc
iret
outsb
js
sbb
mov
hlt
sahf
dec
testl
adc
rcrb
mov
outsl
enter
pop
aas
mov
sub
outsb
imul
lret
dec
jbe
cmpsl
cltd
add
lret
inc
lock
push
jno
ret
push
xor
fwait
ror
bound
inc
jb
rorb
fistps
mov
jmp
and
mov
lcall
movsl
cmp
jg
in
pop
and
cmc
pushf
insb
mov
pop
or
mov
flds
fs
add
aaa
add
cmpsb
mov
pop
lcall
inc
cmp
lret
or
cwtl
test
repz
outsl
insb
adc
in
push
jge
push
cmc
sbb
outsl
daa
push
mov
scas
cmp
push
cmpsb
mov
hlt
pop
mov
cltd
adc
movsl
cld
mov
test
xchg
xor
cli
and
sub
mov
mov
push
stos
lret
sbb
jnp
fnstcw
mov
xor
fcompl
data16
and
mov
xchg
mov
jno
dec
movsl
push
mov
test
push
lods
icebp
out
in
movsb
xorb
test
orl
dec
xlat
pushf
adc
sbb
push
in
cwtl
xor
xchg
sub
mov
clc
icebp
mov
dec
stos
pushf
dec
sbb
bound
popa
bound
add
adc
inc
inc
sti
xchg
sbb
outsb
lret
mov
pusha
bswap
or
adc
pop
and
xchg
dec
pop
xchg
jb
lret
sub
cmpsb
clc
mov
mov
mov
dec
lret
xchg
ss
xor
hlt
daa
flds
mov
clc
icebp
lods
mov
mov
inc
test
xchg
in
lret
lock
shrb
mov
cmp
jg
xor
les
add
jne
mov
jg
mov
jbe
dec
jl
int3
ds
mov
mov
out
out
add
mov
sbb
push
fyl2x
es
xchg
cwtl
movsl
or
mov
sub
and
lret
jo
mov
cwtl
push
pop
cli
adc
mov
jle
sahf
iret
cmp
scas
aas
daa
repnz
cmp
sahf
test
xor
ja,pn
mov
mov
aas
lret
jno
add
out
clc
push
lret
inc
jae
fmull
adc
fmulp
je
dec
mov
push
mov
cmpsl
mov
popa
adc
stc
inc
lret
inc
int3
or
jne
addb
in
adc
test
push
subl
fcoms
jl
mov
shl
shl
and
shlb
test
xor
dec
jns
les
cld
in
dec
popa
loop
repnz
hlt
dec
clc
adc
aas
mov
push
shrb
hlt
and
push
pop
fmull
fs
push
je
ds
xchg
fdivl
add
add
cld
add
mov
jg
outsl
sbbb
hlt
lcall
gs
insl
push
xchg
lret
mov
test
inc
mov
cld
outsb
mov
aas
xchg
inc
push
out
rcrb
dec
ret
mov
mov
xorb
sbb
pop
or
pop
cmp
in
repnz
int3
subl
xor
ss
pop
push
or
cwtl
or
mov
sub
jp
test
cmpsb
mov
push
jns
sub
sub
jmp
fwait
push
into
sub
sub
mov
bnd
fiadds
adc
mov
cld
ds
aas
push
lret
adc
fsubr
out
mov
jno
dec
xor
fnsave
pusha
mov
mov
dec
cs
mov
fwait
lods
insb
repnz
jle
mov
rcrb
push
cmpsb
movsb
jp
je
daa
jbe
imul
sbb
jns
popf
clc
or
sti
xchg
in
cwtl
jp
inc
xchg
jo
dec
xor
jp
cmpsb
bound
in
pop
mov
cli
sbb
aam
pop
data16
aas
sub
add
bound
cltd
shll
sarb
imul
push
mov
pop
push
xor
pop
adc
incl
sub
sbb
xchg
movsb
sbb
mull
js
xchg
jno
not
in
nop
jmp
lock
pop
cmp
popa
push
in
dec
xor
inc
subl
cwtl
cmp
shll
mov
mov
mov
repz
sub
cwtl
jbe
imull
sub
mov
mov
roll
pop
sbb
dec
es
lea
cmp
jl
adc
cmp
and
fs
lock
push
pop
movsb
lret
in
fsubl
out
mull
sahf
push
lret
push
outsb
mov
add
ret
std
imull
mov
xor
adc
add
sahf
in
push
fcmove
fadds
cli
sbb
dec
push
es
int3
leave
inc
cwtl
xchg
hlt
sahf
insb
divb
mov
fcmove
sbb
add
pop
es
add
sub
mov
fiaddl
sub
leave
and
test
and
ret
fcomi
ljmp
insl
mov
scas
xor
je
add
je
cli
leave
out
sarb
cmp
adc
sbb
int3
outsl
dec
in
loop
jmp
adc
repnz
seto
and
in
or
cwtl
ret
scas
test
arpl
sub
mov
sarb
sbb
ret
cmpsb
je
push
mov
inc
cwtl
xchg
mov
insb
mov
sbb
push
popf
insb
mov
mov
xchg
sahf
test
push
mov
aaa
or
push
pop
iret
sub
mov
dec
cld
icebp
or
sbb
leave
dec
pusha
mov
xchg
rolb
outsb
lods
mov
inc
xchg
ret
xor
and
push
test
dec
push
mov
test
gs
sub
test
dec
and
jmp
dec
mov
imulb
mov
jg
and
es
aaa
push
cli
pop
xchg
aas
icebp
insb
sbb
push
push
leave
mov
ret
mov
inc
call
cmpsl
in
xor
pop
jno
sbb
cmc
cwtl
push
sbb
push
push
cwtl
pop
mov
xchg
or
mov
andb
sbb
loope
loope
dec
addl
cmp
pop
xchg
add
lea
in
lcall
inc
mov
pop
push
adc
cli
lods
sbb
dec
and
push
add
iret
xor
insb
sarb
cmpsb
nop
push
inc
add
faddp
pop
xchg
xorl
xchg
loop
arpl
lret
adcb
rcll
mov
sbb
or
scas
les
mov
push
push
inc
pop
mov
mov
lea
lcall
cmpsl
mov
add
arpl
hlt
mov
lcall
clc
push
add
fldl
test
jl
ja
xor
ret
push
mov
dec
pop
clc
cmp
shrb
lds
ret
out
cmp
mov
cltd
pop
dec
hlt
ss
call
cltd
out
in
in
jae
mov
orl
or
fcoml
dec
mov
cwtl
push
in
fadds
clc
ljmp
int3
cmp
mov
pop
or
add
adc
test
iret
jo
inc
mov
scas
std
or
cltd
adc
push
xor
inc
insl
cltd
in
xor
sub
outsl
jecxz,pn
les
pop
rcrl
mov
js
adc
call
sub
aas
push
add
int
int3
clc
mov
loopne
or
push
xor
jb
std
mov
fimull
cmp
mov
out
push
push
push
rol
xchg
add
mov
and
xor
call
ret
xor
test
mov
rcr
pop
fs
repnz
jp
cld
xchg
lods
add
ljmp
das
mov
mov
xchg
repnz
sbb
lcall
out
aas
dec
sub
out
cltd
outsb
mov
push
rorb
test
lods
or
enter
mov
loopne
in
and
pushf
add
inc
inc
push
imul
pop
popl
jmp
ljmp
out
and
test
jge
or
repz
cld
push
daa
adc
inc
aaa
add
add
mov
aad
mov
xchg
sub
push
sarb
xchg
push
mov
fdivs
lods
sbb
push
fistl
jecxz
out
sbb
jp
cmp
sbb
jecxz
xor
sub
shll
js
push
xchg
loope
jo
sbb
movsl
pop
sub
xchg
xchg
mov
mov
push
push
int
adc
jae
xchg
adc
sahf
or
add
popf
je
pop
cmpsb
or
pop
xor
sahf
jl
mov
pushf
test
mov
sbb
dec
lahf
insl
fwait
mov
cltd
adc
pusha
mov
pop
dec
add
inc
inc
loope
aam
aas
into
ja
pop
jb
outsb
pop
mov
sbb
mov
adc
push
loope
insb
mov
dec
dec
mov
test
mov
push
inc
xchg
insl
scas
mov
clc
pop
sbb
pusha
dec
out
or
dec
jmp
rcrb
out
sub
pop
xchg
fstpl
bound
or
es
xchg
cld
imul
insb
jmp
test
sub
dec
pop
jae
rcrl
aad
mov
or
push
xor
stc
push
mov
pop
js
xchg
les
pop
mov
in
mov
dec
cmp
les
aam
enter
inc
fs
inc
inc
int3
ss
out
jne
xor
jno
mov
call
mov
imulb
shr
shrb
in
jg
enter
jae
daa
out
dec
sbb
int
setbe
daa
cmp
pop
fistps
rorb
or
inc
inc
call
xlat
es
in
fistps
push
clc
adc
sahf
inc
xor
shlb
adcl
push
push
fsts
imul
in
and
xchg
sub
xchg
add
mov
push
pop
lods
add
scas
push
xchg
adc
push
xchg
cmp
xor
and
mov
sbb
adc
bound
pushf
mov
mov
xor
cmp
jmp
les
lcall
xchg
jno
pop
leave
mov
lahf
xor
loopne
dec
push
push
sahf
xor
or
aam
or
cmpsb
iret
fs
xchg
adc
enter
inc
cmp
mov
out
subb
mov
and
cvtps2pd
neg
es
sahf
test
push
cmp
inc
shrb
idivb
imul
mov
add
mov
cltd
xchg
add
cmpsl
call
pop
sarl
fcoml
mov
and
cmp
loope
mov
fimull
inc
popf
add
fstps
push
pop
hlt
cmp
cmp
cmp
mov
rclb
rclb
push
xor
pop
rcll
mov
dec
rcr
xchg
adc
pop
jno
iret
inc
sbb
xchg
inc
mov
sarb
test
scas
fisubl
loope
xchg
or
add
xchg
loop
in
sbb
insl
push
rorb
insl
fwait
cmc
fbstp
pop
out
iret
std
add
popl
adc
push
mov
les
push
or
jnp
push
stos
sub
clc
dec
insb
icebp
pop
dec
fldz
data16
fs
fadds
icebp
xor
out
out
fs
sub
push
jl
inc
sub
add
fnsave
pop
stos
add
pop
ret
xor
cmp
adc
xor
pop
xorb
cmpb
loope
or
dec
sbb
lea
xlat
adc
dec
push
in
pusha
xor
pop
sub
cld
adc
bound
mov
inc
cli
mov
sbb
mov
iret
out
jae
push
mov
bound
jg
sahf
xchg
dec
adc
inc
subb
dec
ja
sahf
pop
sbb
sahf
mov
cmp
jle
xchg
loopne
aam
push
ds
bound
jmp
sarl
cs
push
data16
inc
jno
lea
sub
mov
in
outsb
popf
repnz
jmp
stos
cmpsb
cmpsl
mov
xlat
jmp
in
cmp
jg
insb
cld
mov
je
ljmp
sbb
push
inc
cld
jmp
add
popa
mov
ret
jg
mov
mov
add
xchg
sbb
addr16
push
imul
mov
aaa
jb
push
adc
stos
lret
iret
imul
outsb
mov
jg
pop
mov
out
pop
fnsave
icebp
sub
fldcw
mov
sub
cmp
popa
stos
mov
push
jmpw
jmp
jg
clc
jo
push
and
outsb
in
lcall
inc
mov
and
and
jo
outsb
in
call
mov
and
mov
cmp
mov
cld
aas
sarl
loopne
xor
pop
xor
jmp
mov
mov
fidivl
cltd
adc
inc
xchg
inc
outsb
or
movntps
and
fildl
cmp
std
mov
jae
xchg
hlt
xor
pop
sub
decl
es
int3
pop
enter
into
mov
xchg
jae
into
arpl
pop
pop
lock
std
push
loopne
push
mov
cmp
js
xchg
fcomip
fldt
into
std
push
sub
cmc
or
lock
jecxz
sbb
outsb
into
into
repz
mov
and
adc
and
std
push
in
jns
bound
sarl
into
data16
sub
nop
out
shl
jbe
adc
je
xchg
adc
jmp
push
sbb
xor
jbe
or
js
repz
enter
std
push
aam
xor
jge
mov
inc
add
xchg
add
adc
mov
sub
iret
lock
mov
or
push
pop
pop
fs
cs
push
pop
outsb
adc
push
pop
mov
fucom
sub
xchg
push
adc
xor
testl
sbb
sub
add
call
fsts
int3
push
fs
jle
mov
sub
cmp
ret
fwait
push
aas
inc
mov
in
aad
test
mov
cmp
and
cwtl
push
xchg
call
xor
ret
lock
pop
mov
push
xor
cld
add
in
sarl
pop
pop
cmp
lock
fstpt
push
xchg
pushf
sbb
aam
sbb
xchg
sbb
mov
mov
xchg
mov
pop
movsl
aas
aam
lock
pushf
sub
pushf
loopne
out
sar
pop
push
fdivr
push
out
xor
pop
mov
push
addr16
add
fs
jg
xor
mov
std
mov
fistpl
xchg
test
repnz
sub
add
mov
dec
sub
sub
dec
dec
xchg
fidivrs
mov
jl
je
pop
mov
mov
cmp
mov
push
or
mov
fldl
in
pusha
push
in
mov
ficoml
cmp
sbb
cmpsl
sub
mov
mov
subb
addb
pop
decl
and
add
ficompl
cld
repz
sub
lock
test
sub
hlt
cwtl
in
sub
mov
xor
xor
arpl
push
mov
insb
pop
jle
fdivs
outsb
gs
mov
loopne
lock
add
in
shll
xor
cmp
aam
mov
push
mov
std
int3
sar
mov
loopne
push
or
xor
insb
adc
add
cmp
cmp
sub
loopne
and
out
or
sub
movsb
or
movsb
incl
pop
mov
sbb
xchg
pushf
add
test
cmp
inc
jb
rorb
xchg
rep
add
mov
test
add
or
bound
xor
fidivs
push
inc
push
popf
dec
push
cld
ret
ret
xor
adc
ficomps
xor
cmpsl
xchg
ja
mov
into
int
aas
pusha
add
xorb
inc
rcll
push
mov
or
dec
cs
int
pop
enter
notb
adc
and
jo
xchg
xchg
in
nop
cmp
jns
fsubrp
cltd
push
mov
lods
out
es
fiadds
leave
cmp
pop
push
in
int
jecxz
sbb
addb
mov
mov
jbe
or
ficoml
ret
test
mov
mov
js
push
mov
jmp
pop
movsb
mov
in
imul
xor
push
ret
andl
pop
or
jmp
aas
add
repz
loopne
cmpsb
pusha
loope
xchg
xchg
mov
jecxz
mov
mov
es
jo
or
xchg
mov
add
mov
sbb
loope
in
mov
bnd
pop
pop
stc
testl
div
fwait
aam
cli
mov
add
inc
push
mov
mov
popa
stos
mov
xchg
jmpw
jmp
jg
mov
mov
pusha
outsb
in
lcall
inc
mov
adc
lcall
sahf
mov
inc
int3
fmulp
mov
inc
imul
insb
enter
dec
inc
mov
rcrb
repnz
lahf
je
outsb
bound
sub
movsl
add
dec
int
test
sti
mov
cld
repz
or
mov
shl
inc
jl
push
jle
xor
inc
push
mov
pushf
out
jb
loopne
pop
ja
push
mov
aam
inc
in
push
inc
jbe
xlat
push
pop
loopne
sahf
fsub
mov
push
clc
adc
mov
in
cmp
mov
mov
add
loopne
sub
fcoml
int
test
scas
es
ret
sbb
lahf
jnp
push
push
and
or
dec
loope
mov
cmp
sar
dec
sbb
imul
call
cwtl
jge
pop
call
xlat
in
in
js
cmpsb
scas
aas
subb
in
pop
out
loopne
adc
mov
cld
shlb
bound
mov
sub
loope
aam
aas
arpl
inc
pop
cmp
std
mov
jae
xchg
dec
sbb
pop
and
decl
push
push
dec
inc
out
xor
dec
repz
lea
fmul
xor
xor
shlb
jae
outsb
cmpsb
pop
std
push
ror
xor
xor
mov
cmpsb
xor
fidivs
into
mov
iret
push
xor
movups
push
mov
shll
stc
adc
ljmp
dec
cmpsl
and
mov
inc
pop
cltd
add
cmpsl
mov
sbb
lock
adc
xchg
mov
add
jne
jl
out
push
add
cmp
mov
sub
cmp
bound
dec
sub
mov
mov
fmuls
nop
mov
cmp
loop
test
xchg
xchg
sub
dec
and
sbb
rcrb
jno
dec
adc
mov
jge
xchg
cmpsl
or
pop
ret
imul
mov
mov
aaa
xabort
or
in
rolb
lret
push
es
jl
pop
inc
je
sub
and
sub
sbb
pop
xchg
int
inc
popf
or
cmc
movsl
cmpsb
dec
push
orb
cmp
mov
sbb
mov
fs
dec
pslld
dec
pusha
sub
mov
sub
lret
clc
fcoml
push
xor
into
add
adc
push
or
pop
jl
fdivr
push
add
mov
pusha
sbb
sbbb
out
dec
adc
loope
mov
xchg
aam
dec
push
loop
push
add
int
cmp
sbbl
mov
push
and
hlt
fcoms
dec
push
ret
loop
mov
jmp
je
stos
int3
out
sarb
cmp
sbb
jo
lahf
int3
insb
sub
int3
std
and
fwait
je
and
sahf
and
push
lods
repnz
adc
cmp
lcall
aas
lods
and
out
sti
dec
mov
test
addl
add
shr
dec
jb
les
movsb
pop
repnz
mov
xchg
rcrb
into
lea
jo
dec
xor
jl
cmpsb
lahf
jmp
es
jcxz
sbb
das
xchg
repnz
jo
mov
mov
out
int3
jmp
adc
loop
sbb
cs
outsb
data16
icebp
mov
lcall
inc
mov
add
xchg
xor
cmp
pop
nop
repnz
dec
jp
bound
add
andb
stos
call
pop
jo
add
inc
mov
hlt
out
dec
xchg
mov
mov
in
repnz
and
insb
dec
mov
xor
nop
ret
adc
and
xor
adc
rcrb
mov
push
mov
xorl
jno
rorl
mov
sub
pop
fidivl
loopne
push
or
xor
sub
pop
rcrb
ret
mov
in
pop
cmp
mov
sbb
push
jle
jae
xchg
jl
pop
movsb
mov
cmp
fidivs
fldenv
push
popf
lods
or
movb
stos
aad
in
jae
enter
dec
movsb
enter
std
cld
xchg
and
xchg
gs
std
mov
ss
cwtl
rorl
ficoml
aas
mov
repz
std
mov
and
inc
adc
jbe
fiaddl
pop
std
xchg
ss
stos
in
and
in
mov
and
mov
ss
lret
and
aam
pop
fdivr
pop
scas
or
mov
fnstcw
cltd
add
aaa
add
cmpsb
lret
lcall
inc
jl
ret
or
cwtl
add
dec
stc
movsb
ret
pop
je
int3
sbb
sub
in
adc
mov
cmp
out
ret
std
add
popl
adc
xchg
and
fs
lock
jnp
sbb
pop
test
and
dec
js
loop
popa
stos
stc
xchg
mov
xchg
in
pop
and
std
pushf
js
mov
xchg
lcall
out
aaa
add
cmpsl
aas
enter
xchg
imul
jl
add
repz
mov
push
xchg
fs
std
fcoms
mov
call
cltd
jno
dec
xor
mov
mov
loopne
adc
pop
mov
cltd
adc
movsl
xchg
pop
mov
jp
dec
jae
pushf
mov
scas
hlt
adc
jmp
sbb
std
mov
shrb
cltd
mov
pop
mov
stos
ret
pusha
and
icebp
lcall
es
dec
je
mov
ret
or
cwtl
push
pop
pop
das
pop
or
mov
mov
cli
pop
xchg
xchg
and
add
rolb
lods
cltd
add
sbb
cmp
dec
xchg
subb
push
and
aaa
sti
jmp
jbe
jo
mov
mov
mov
inc
test
mov
fidivrl
or
xchg
pop
mov
bound
xor
xor
jae
lcall
sub
call
mov
inc
mov
sti
data16
cmp
inc
push
lea
insl
dec
xor
jae
cmpsb
add
in
sub
loopne
pop
lcall
shl
or
xchg
adc
stos
fiaddl
out
push
push
frstor
adc
out
adc
cmp
pop
addl
xchg
adc
mov
lret
xchg
jge
mov
push
or
or
outsl
fwait
test
nop
cmp
call
add
inc
lahf
mov
adc
lahf
pop
pop
dec
fiadds
sbb
les
adc
xchg
mov
sbb
es
fidivs
push
mov
inc
inc
jge
loopne
and
jno
je
jle
xor
mov
cmp
sbb
lret
ret
dec
nop
pop
push
cld
xor
jl
enter
push
add
idivb
imul
and
test
cmp
cmp
cmp
adc
push
cmp
jle
push
popa
dec
sbb
jne
aas
or
jno
inc
jno
addr16
loope
aam
dec
push
aaa
jecxz
scas
shl
cld
cli
ret
out
cld
cmp
aaa
sub
je
pop
cmpsb
dec
jge
out
pop
xlat
xchg
cld
cli
xor
xchg
hlt
dec
adc
xor
enter
or
and
sti
inc
mov
pushl
sahf
ret
xchg
sub
arpl
cmp
adc
cmp
test
out
xchg
add
push
cmpb
cmpb
sbb
mov
cld
psraw
ret
cmc
adc
xor
nop
mov
mov
jl
inc
outsl
push
fcoms
cmpsb
pop
jb
jno
int
inc
cmp
or
pop
sub
dec
or
call
test
push
mov
xchg
movsl
mov
outsl
sub
lods
leave
inc
mov
dec
mov
xor
ret
xchg
cmpsl
dec
mov
mov
scas
and
xchg
psubsw
adc
and
inc
push
incb
pop
iret
pop
mov
shrl
fisubl
pop
rorb
adc
arpl
push
push
mov
xchg
shr
push
lcall
ja
mov
adc
cmpsl
mov
sbb
adc
sub
inc
jno
push
xor
mov
xlat
cltd
adc
cmp
dec
lock
and
pop
sbb
decl
data16
sbb
xorb
and
xor
and
ret
outsb
push
je,pt
pop
sub
in
mov
cs
bound
cld
jp
cltd
mov
insb
pushf
clc
add
shll
pop
in
cmp
mov
mov
call
mov
ljmp
cltd
into
xchg
cmp
dec
test
push
cwtl
xor
mov
sbb
movsb
fwait
add
inc
icebp
push
adc
shll
in
rorl
ds
cmp
dec
mov
sbb
scas
ret
inc
xchg
add
out
movsb
pop
je
lret
in
mov
imul
dec
sbb
xor
cs
sbb
add
cmp
jge
push
push
mov
rorl
call
cmp
cmpsl
rorb
mov
cmp
aas
addr16
lods
aas
pop
mov
int
sar
sub
outsb
fcmovb
repz
mov
sub
adc
push
jmp
std
enter
or
xlat
pop
sub
nop
and
out
jb
xlat
stc
inc
inc
push
xlat
mov
testb
repz
int
fidivrs
test
sub
mov
int3
adc
rorl
cmp
pusha
mov
ficoml
lock
mov
out
jecxz
les
int3
adc
je
mov
aas
push
fcomps
loop
scas
or
xchg
call
out
xor
adc
std
mov
jle
dec
push
mov
jmp
push
orb
cltd
je
xchg
jmp
mov
out
lcall
sbb
sub
movsb
popf
cmpsb
arpl
hlt
mov
lcall
push
dec
add
ja
test
int3
pushl
nop
xorb
rcrl
mov
aas
imul
idivb
mov
mov
pop
cmp
jne
cmpsb
ljmp
fldenv
fwait
movsl
data16
add
lods
jge
sub
sub
xchg
scas
ja
pop
dec
mov
add
sub
mov
dec
xor
cltd
mov
mov
fwait
imul
lods
pop
jno
push
jo
scas
in
rcl
pop
lods
ret
xor
pop
inc
je
push
clc
test
movsb
push
movb
in
sahf
sub
pop
mulb
clc
frstor
xchg
inc
cwtl
xor
dec
shl
jae
mov
add
je
pop
push
xor
movsb
rclb
jmp
mov
add
mov
decb
dec
repnz
in
sti
lcall
out
cmc
pushf
and
aad
and
fistl
cmp
adc
inc
pushf
lcall
pop
movb
stc
mov
inc
int3
mov
xor
movsb
loope
inc
pop
icebp
adc
push
js
mov
arpl
mov
xchg
or
sbb
cmp
inc
lahf
aas
sub
mov
loop
sub
cmovg
cmp
push
bound
stos
mov
sub
sbb
into
xor
insl
pop
add
bound
shrb
fdivs
or
add
out
adc
sub
mov
bound
inc
mov
jb
loopne
pop
jbe
rolb
fwait
rcrl
push
mulb
pop
cmpsl
mov
pop
mov
jno
rol
pop
jo
dec
jno
fwait
sub
lods
loopne
pop
dec
sbb
sbb
dec
imul
jno
jae
mov
mov
sbb
sbb
jg
pop
inc
lock
iret
adc
out
orb
lret
xor
mov
xor
or
shlb
jo
inc
rcrb
popf
add
ret
shrb
jnp
and
inc
fdivs
xchg
sub
loop
into
xor
or
data16
inc
ret
cmp
or
sarb
and
mov
push
pop
adc
jp
mov
sbb
jge
or
xchg
imul
jg
test
adc
sub
mov
adc
std
test
shl
jp
xchg
int
adc
or
ds
movsl
mov
xchg
mov
mov
lds
cmpsl
arpl
mov
test
into
sbb
fs
xor
push
add
shlb
push
rolb
mov
push
lret
into
cld
bswap
cmp
or
stos
notb
lret
mov
xor
subl
add
pop
dec
push
mov
and
sub
jle
xchg
popf
push
loop
xlat
mov
and
and
daa
shl
sahf
cmc
imul
xor
inc
jle
cmp
sbb
divb
mov
cwtl
jge
pop
or
shrl
push
int3
xchg
pushf
stos
rolb
push
cmp
divl
dec
mov
loope
lret
sub
cwtl
xchg
cmc
movsl
cmpsb
dec
push
orb
cmp
and
dec
xchg
scas
out
jge
xchg
pop
jo
push
jg
push
arpl
pushf
insb
cld
repz
pop
cmp
insl
mov
inc
cmp
pusha
adc
jle
push
xor
mov
xchg
icebp
jb
cmc
movsl
cmpsb
dec
push
orb
sub
addr16
mov
adc
dec
data16
xor
xor
int
clc
dec
sub
cmp
adc
jle
xchg
stos
cli
fdiv
dec
mov
xchg
std
jb
adc
jle
inc
hlt
fmull
push
xor
out
data16
in
or
adc
add
out
mov
in
push
lcall
pop
jl
mov
fidivrs
jle
sub
cmpl
aaa
jp
sub
lret
lcall
cwtl
mov
pop
mov
or
dec
push
mov
cltd
mov
or
sbb
sub
int3
push
add
adc
jle
inc
adcb
test
ss
jb
fsubr
test
mov
mov
mov
add
orb
loop
mov
movsb
pop
xor
xorb
sub
sbb
xlat
rclb
aas
rolb
inc
xlat
push
jo
cmp
mov
xor
adc
cmp
fsubrs
cli
and
lock
test
pop
movsl
sub
into
sbb
xchg
ret
jbe
imul
xchg
sub
sub
add
in
icebp
fwait
jbe
std
fwait
movsb
pop
cmpsb
cmp
shr
add
or
cmpsb
cmp
shr
pop
fidivs
push
dec
mov
int3
lahf
rorb
fsub
mov
fwait
sar
adc
mov
into
xchg
rol
dec
mov
les
and
and
enter
pop
jae
pushf
idiv
into
mov
dec
rclb
inc
mov
das
cltd
js
xchg
push
dec
mov
lock
lods
adc
add
int3
pop
dec
mov
in
and
fnstenv
cltd
add
aaa
add
cmpsb
in
adc
inc
test
rol
or
or
and
pop
cmpsb
or
jae
add
adc
sub
aam
xor
sbbb
xchg
popl
adc
aad
jmp
xchg
je
sub
ja
jno
imul
or
sbb
xor
aad
add
arpl
mov
out
jle
adcl
sbb
dec
pusha
mov
xchg
rolb
adc
push
out
and
adc
in
imul
pop
pop
or
pop
ja
shrb
mov
ret
test
mov
ljmp
xor
cmp
aaa
sub
popf
je
pop
jbe
subl
cwtl
xchg
adc
pop
inc
fadd
les
jle
inc
ja
fnstcw
push
lahf
fsubl
inc
rcl
cmc
inc
jae
fmull
adc
lcall
je
push
xor
enter
into
adc
punpcklwd
jae
and
pusha
imul
lea
cmp
aaa
pop
or
std
mov
fistl
mov
fdivr
push
pushw
cld
push
cmpsb
aad
leave
call
stc
mov
adc
mov
andb
out
cmp
test
inc
test
dec
outsb
fs
sub
out
not
xchg
inc
jle
stc
mov
addb
data16
dec
push
mov
dec
inc
mov
clc
outsl
addb
inc
scas
sub
stos
ret
aas
push
stos
sub
ds
push
pop
dec
jne
stc
fimuls
adc
shll
icebp
or
cwtl
jge
xor
pop
jno
sahf
in
shl
rcll
inc
repnz
jb
loopne
pop
jbe
mov
out
or
add
or
cwtl
mov
or
ds
dec
cmp
cltd
icebp
push
jb
les
sbb
adc
dec
int3
jl
mov
sub
xor
aas
aam
shr
xchg
add
or
pop
clc
fcoms
out
xchg
je
faddp
out
sarb
xor
mov
mov
mov
pop
xchg
loope
cmp
cld
pop
and
loopne
and
sub
hlt
dec
lret
xchg
imulb
inc
mov
fwait
out
mov
sbb
into
adc
clc
lahf
mov
fcomps
loop
inc
push
mov
jo
mov
lea
xor
sbb
in
sub
mov
mov
push
ret
mov
xor
adc
dec
pusha
pusha
or
dec
sub
xchg
adc
fadds
xchg
jae
or
test
andb
pslld
ja
mov
mov
sub
pop
xchg
cld
cmp
aaa
sub
popf
je
pop
ss
addr16
xor
add
and
and
leave
rcrl
leave
add
popf
pop
mov
mov
sub
ss
add
adc
mov
movsl
mov
add
mov
outsb
test
xchg
or
mov
push
out
paddw
mov
cmpsb
leave
iret
xor
rcrb
dec
ret
mov
mov
adcb
out
mov
fwait
lods
insb
repnz
jle
test
cmpsl
gs
push
cmp
pop
in
adc
cli
sbb
and
into
pop
js
jmp
sub
test
xor
stos
jbe
lcall
inc
ss
clc
jmp
add
mov
popa
stos
mov
jbe
xchg
setbe
sarb
adc
mov
cmp
cmpsb
push
orb
std
fwait
push
or
std
mov
fistl
mov
fdivr
push
mov
sub
fwait
push
adc
imul
movsb
mov
cmpb
jmp
lea
mov
lea
jbe
fprem
fwait
cwtl
mov
outsl
jo
push
sbb
or
push
cmp
sbb
mov
fdivrl
stos
call
mov
cwtl
and
sti
push
fwait
rclb
ljmp
xor
sbb
fisubl
mov
loopne
lds
inc
lret
push
mov
jmp
adc
test
cmp
ret
mov
cmp
push
adc
jbe
mov
jge
pop
add
cmpsl
mov
and
sbb
enter
mov
sbb
cld
faddl
push
adc
xchg
sub
insb
dec
jbe
mov
fsts
and
mov
mov
xchg
pop
rol
lret
pop
sti
cmpsl
mov
push
push
cmp
mov
or
jne
in
dec
aaa
adcl
hlt
cwtl
sub
pushf
cmp
mov
mov
adc
cmovns
call
repz
mov
data16
push
sbb
mov
sub
hlt
in
imul
in
xchg
jl
int3
dec
jo
call
mov
sub
pop
jecxz
clc
idivl
out
sub
sub
aas
push
int3
cmp
movsb
mov
push
lock
push
jp
repnz
in
in
add
push
in
mov
adc
adcl
sub
jl
push
jno
push
pusha
data16
inc
or
pop
push
mov
int
repnz
mov
jg
std
subb
fsubrl
and
insb
mov
xor
ljmp
mov
int3
lret
mov
insb
jmp
aam
dec
add
mov
push
ficoml
pop
das
cbtw
inc
loop
insb
or
jmp
pop
xor
movsb
push
and
push
jne
clc
into
push
cmpsb
push
jo
aam
movsb
psubq
jge
pop
dec
inc
sub
int
mov
push
jne
xchg
cmpsb
sub
inc
pushf
popa
aas
scas
andl
and
mov
fsubrs
ja
xchg
jo
dec
xor
js
in
pop
cmp
xchg
fstpl
adc
xchg
sti
mov
adc
jnp
push
js
xor
pop
loope
xchg
insl
in
push
fiaddl
inc
shrb
stos
mov
imul
pop
movsb
bound
pushf
cmpsl
sub
mov
inc
pop
insb
iret
shl
and
mov
sub
sti
in
cmp
mov
into
add
xor
jne
rorb
mov
fidivrl
shll
mov
push
imul
shll
add
mov
jo
nop
rcrb
movsb
pop
mov
xorb
in
xor
call
mov
sub
pop
pop
sub
sti
loopne
xchg
sarl
sbb
pushf
idivb
sbb
and
and
fwait
jno
push
inc
mov
das
push
push
pop
call
sbb
xor
lcall
inc
mov
mov
into
test
and
faddl
mov
fwait
and
mov
push
bound
es
ret
fdivl
add
pop
or
pop
or
stos
in
pop
sub
ja,pn
pop
dec
mov
add
sub
push
pop
sub
cli
loopne
mov
mov
lret
les
clc
in
repz
jno
lds
sub
aam
dec
inc
pop
add
je
clc
sahf
cmp
jle
add
dec
sarb
pop
mov
int3
dec
xor
inc
mov
je
addl
lcall
mov
mov
mov
iret
je
sub
movsl
cmp
jmp
fwait
push
into
jo
sub
and
repnz
fimuls
adc
mov
cld
rcrl
aas
loop
inc
dec
inc
mov
lds
cli
popa
or
push
cmc
push
sub
movsb
frstor
mov
nop
shrb
jbe
dec
jno
mov
xchg
push
sbb
cli
fildll
mov
sbb
jns
adcb
or
mov
dec
cmpsb
or
cli
and
xor
fmull
adc
cli
mov
jb
sbb
outsb
mov
repz
mov
push
je
adc
and
std
xchg
push
cmc
dec
shll
call
adc
sub
xorl
stos
fisubl
push
or
jp
rolb
mov
push
sbb
push
lods
push
hlt
addr16
sub
es
mov
push
pusha
adc
xlat
adc
enter
int
sbb
scas
push
push
jb
ss
pop
rcl
nop
aas
xor
pop
fmuls
cli
cmp
rorb
dec
les
test
addr16
ja
inc
sbb
push
jbe
int
loope
xchg
into
adc
sbb
xchg
jb
adc
idivl
cmp
ret
imul
xor
in
inc
cs
out
mov
cmpsl
test
inc
or
ja
int3
cwtl
cmp
mov
cmp
mov
fs
pop
fnstenv
push
sub
push
data16
call
pop
les
push
shrb
adc
add
mov
les
and
mov
xor
aas
fcom
sub
push
in
mov
adc
adc
mov
add
inc
fmuls
repnz
idiv
adc
and
aam
cmp
shrb
lcall
sub
add
mov
add
cvtps2pd
jl
lahf
int3
adc
cld
add
cwtl
push
enter
les
inc
mov
cmp
in
sub
aaa
push
sub
sub
enter
loopne
in
sub
pushf
cmp
and
stos
push
xchg
sub
push
lock
lods
popa
in
pop
dec
sbb
pusha
data16
jl
fiadds
int
fmuls
inc
popa
in
cmp
sarl
mov
mov
pushf
enter
hlt
imul
outsb
fadd
int3
cmpsl
cmp
sbb
ret
push
push
mov
pop
add
leave
jb
fcomi
xchg
clc
outsb
in
or
je
jne
add
std
mov
adc
sbb
mov
int
or
aam
mov
pusha
mov
jb
fucomip
int
push
jnp
test
ret
cmpsb
sub
addr16
stos
insb
out
rorb
addl
add
shll
into
in
rcrl
loop
jle,pt
movsb
prefetch
xor
or
cmc
movsl
cmpsb
dec
push
orb
sub
or
je
push
in
fs
mov
stos
lcall
in
pop
mov
jo
icebp
cltd
sbb
xor
push
rorb
jns
push
subb
and
xor
test
mov
adc
imul
mov
add
jb
rolb
test
out
mov
cmp
mov
imul
jmp
push
xchg
lar
mov
movhps
loop
lea
std
push
pop
jae
xchg
lock
mov
ret
adcl
lcall
cwtl
mov
data16
loop
dec
mov
fwait
rorb
push
push
adc
punpckldq
psrlw
mov
in
pop
hlt
aas
xlat
mov
pop
rcrl
clc
loop
dec
lock
jp
mov
mov
push
jl
call
sbb
out
jo
jmp
data16
in
std
inc
jne
push
push
jae
xchg
dec
mov
aas
or
mov
mov
inc
loope
aam
aas
test
inc
pop
cmp
xchg
mov
sahf
mov
fdivr
push
xchg
push
pop
push
sbb
inc
in
fdivrs
fbstp
xor
and
cmp
testl
hlt
adc
bound
push
xor
out
ret
rorb
cmp
std
in
into
inc
popa
cmp
xor
cmpsb
and
in
ss
in
lahf
xor
cmp
mov
xchg
shl
pop
in
adc
adc
popa
xor
push
test
pusha
or
dec
or
xor
in
fisubl
fisubrl
xchg
les
clc
hlt
in
jbe
sub
je
loopne
in
shrb
movsl
and
or
push
inc
add
mov
cmp
repnz
in
and
lock
cwtl
ret
aas
mulb
in
inc
lods
sbb
rclb
cwtl
jg
outsb
jmp
mov
push
fiadds
mov
cltd
jne
aas
mov
loopne
push
mov
mov
fs
adc
fsub
aas
in
add
ljmp
sbb
cmp
jno
mov
addr16
outsb
xchg
in
pop
cwtl
jo
xchg
mov
push
gs
cmpsb
scas
cmpsb
in
jecxz
push
pop
xchg
cmpsl
jl
mov
push
mov
cwtl
jge
mov
cltd
lods
imul
xor
cmp
push
gs
adc
outsb
loope
xlat
jmp
push
fdiv
pop
cmpsb
dec
out
std
sub
push
cmp
lds
fidivl
fimull
cwtl
add
jle
cmp
or
hlt
aas
fwait
imul
insl
fistpll
sarb
cmpsb
dec
dec
sub
int3
mov
test
mov
mov
mov
stc
inc
outsb
movsb
pop
dec
and
pop
aam
push
in
push
push
ds
mov
cmovae
shufps
dec
mov
adc
push
xor
mov
mov
sbb
xor
mov
or
jl
movsl
dec
mov
jo
pop
movsb
add
aas
dec
mov
inc
je
dec
jbe
in
sub
jb
stos
repnz
out
fists
out
lret
mov
pop
mov
nop
movsl
rcrb
mov
pop
cld
repz
data16
bound
mov
mov
inc
cmp
adc
pushf
inc
cmpsb
lds
cwtl
pop
aam
mov
fisttpl
divl
in
jge
mov
out
adc
dec
shrl
adc
push
jmp
ljmp
out
data16
dec
adc
xor
and
clc
out
sub
sbb
stos
adc
nop
cmp
cmpl
adc
push
rcl
andb
mov
pop
mov
xor
dec
pop
jle
fnstenv
pmulhuw
aad
add
cmpsb
or
adc
mov
pop
or
and
sbb
loop
arpl
popf
pop
arpl
pushf
add
repz
jl
pop
outsl
xchg
loop
push
cwtl
mov
mov
xchg
push
shrb
mov
data16
movb
sbb
pop
jmp
inc
fmull
repnz
loope
cmpsb
outsb
sub
inc
int
mov
mov
sub
mov
lret
out
mov
mov
jno
xchg
mov
nop
mov
loopne
or
dec
mov
into
push
push
ss
sbb
and
jb
xchg
xchg
mov
jmp
ljmp
pminsw
aaa
push
sub
mov
sub
or
add
js
js
dec
sbb
loop
aam
inc
in
push
push
enter
adc
js
flds
push
xchg
or
adc
mov
mov
ljmp
out
int
nop
push
pop
pop
fwait
insb
out
mov
popa
cwtl
mov
jle
adc
or
mov
mov
test
ljmp
mov
adc
lods
rcrl
push
sahf
std
mov
lcall
out
sub
stos
pop
aam
lods
pop
pop
hlt
cmpsb
insb
imul
outsb
aas
jp
repnz
dec
lods
adc
xor
pop
adc
or
add
pusha
icebp
mov
mov
add
fs
out
in
cmpsb
mov
add
jl
add
out
xchg
shl
sbbb
xchg
gs
jge
jo
out
lods
sub
mov
mov
cmc
movsl
jl
fldenv
mov
es
push
in
movsl
popa
mov
outsb
xor
das
cmpsb
divb
mov
out
pop
mull
and
and
adc
inc
fwait
cwtl
jl
flds
xchg
insb
sahf
insl
pop
bound
inc
dec
adc
stos
xor
push
and
or
sbbl
enter
mov
shrb
shrl
sbb
shlb
mov
jp
xor
sbb
les
in
dec
mov
push
pusha
test
mov
shr
push
lret
test
lret
loope
mov
outsb
arpl
test
fs
sbb
icebp
pop
mov
pushf
lcall
outsb
ds
xchg
cwtl
imul
push
hlt
stos
fldenv
dec
or
adc
xchg
mov
out
in
or
pop
cmpsb
pop
jl
lock
call
push
rorb
pop
mov
addr16
fwait
sub
sar
dec
outsb
mov
imul
xchg
cwtl
jge
pop
mov
and
lock
push
mov
loope
out
or
imul
mov
push
repz
cmp
pop
xor
add
setbe
je
pop
mov
adc
add
adc
and
dec
pslld
mov
sahf
mov
sbb
sub
dec
test
mov
mov
mov
or
daa
mov
xor
fsubrs
loope
cmp
add
push
inc
movsb
or
insl
push
rcr
or
hlt
sub
fisubrl
push
out
cmpsl
mov
mov
sbb
test
xchg
xchg
sub
outsb
jmp
std
aam
mov
push
push
dec
sbb
mov
dec
mov
repnz
lahf
cmp
jae
daa
or
clc
mulb
in
mov
push
ret
jbe
fistps
cltd
push
divb
in
aad
loopne
mov
rcrb
ljmp
push
daa
mov
outsb
sbb
add
lea
xor
sbb
andb
out
ret
aas
ljmp
or
loopne
mov
ljmp
adc
js
jno
pusha
adc
jp
fisubl
movsl
mov
sbb
es
loop
sub
cmovg
cmp
push
bound
mov
adc
mov
pop
sbb
cmp
fsubr
adcl
ja
cmpsb
cmp
xor
xor
pop
mov
in
or
mov
cld
pop
aad
es
cmpsb
sbb
sub
add
sbb
repnz
cld
and
pop
stos
fdivr
aas
cmp
cltd
shll
sarb
imul
pop
mov
hlt
pop
pop
xor
pop
inc
cltd
adc
movsl
decb
push
lret
jo
cli
dec
cltd
adc
inc
fdivr
imul
movsb
data16
dec
out
mov
arpl
xchg
jbe
imul
mov
xchg
outsb
pop
jae
inc
dec
jbe
sbb
je
inc
lock
push
jno
push
movsb
or
ds
xor
mov
clc
test
cld
push
subl
sbbb
iret
sarb
hlt
sub
sub
js
std
testl
sub
mov
inc
mov
fists
imul
into
push
call
out
mov
add
sub
or
int3
mov
mov
loopne
out
adc
cmp
sub
and
nop
pop
sub
add
mov
leave
jge
jge
add
jg
adc
fs
pop
or
add
fsubs
outsb
rcrb
push
mov
sbb
lea
and
aad
aaa
fisttpll
mov
sbb
sbb
repnz
sub
pushf
call
sub
fldl
cmp
shll
sbb
cld
movsl
gs
int
stos
aaa
xchg
pop
out
sbbl
out
aaa
mov
jle
outsl
pop
lret
xor
test
jns
sbb
scas
sbb
jb
rcr
pop
nop
cs
fisubs
cmp
les
clc
mov
cwtl
and
inc
mov
hlt
adc
icebp
inc
sub
bsf
cmp
enter
in
or
cmp
mov
lock
push
std
sbb
dec
xor
and
out
cmpsb
clc
jne
hlt
cwtl
or
fidivrs
hlt
fdivs
shlb
dec
mov
push
out
sub
xchg
ljmp
push
jecxz
arpl
pop
xchg
cmp
jmp
popa
test
les
lret
sbb
xor
xor
outsb
loope
movsb
cld
repz
add
add
mov
push
ljmp
das
sbb
pusha
movsl
shlb
int
dec
push
push
xor
and
outsb
mov
js
inc
mov
movsb
inc
xor
lock
test
sbb
push
aas
mov
pop
jno
ljmp
data16
xchg
out
cmp
loope
pop
dec
aas
es
outsl
jb
aad
scas
push
outsb
aas
les
repnz
inc
in
pusha
jns
je
mov
std
jl
dec
outsl
mov
pop
mov
mov
cmp
repnz
cmp
push
addb
test
jbe
in
xchg
loope
xorl
mov
adc
std
inc
je
std
push
inc
fbstp
xor
push
push
jl
or
push
mov
lock
push
test
ljmp
push
mov
mov
out
jne
aas
and
cld
outsl
mov
shl
inc
loope
and
cmp
xchg
adc
and
aad
sbb
pop
jp
outsb
aas
rolb
ljmp
test
mov
aad
insb
fildll
sbb
or
dec
sub
hlt
filds
rcll
cmp
add
ret
out
xchg
rorb
cmp
int
in
or
fistpll
movsl
sub
adc
outsl
nop
push
and
std
fdivl
out
pop
add
mov
jle
dec
pop
xorl
loope
mov
fwait
shll
aas
or
mov
ret
bound
push
inc
jo
data16
pop
movsl
pop
mov
adc
mov
jle
loope
or
mov
jb
aas
jmp
xor
add
mov
sbb
lea
pop
lods
frndint
icebp
dec
popf
mov
jo
mov
lods
loopne
xchg
inc
stos
mov
ficoms
pop
insl
mov
scas
xor
fnsave
es
out
sarb
cmp
in
cmp
jle
loope
cmpl
aaa
jp
sub
mov
shl
bound
and
sbbl
pop
cltd
addr16
inc
outsb
xchg
mov
jne
dec
cmpsl
clc
or
jno
mov
xchg
lock
std
pop
cmpsl
jb
cmp
fisubrs
shl
push
les
outsb
xor
test
jns
cmpb
jo
mov
adc
xchg
jle
mov
out
test
jg
xchg
sbb
fdivrp
sbb
shr
dec
fidivs
and
mov
insb
lret
arpl
mov
sub
addl
xor
xlat
test
mov
decl
mov
imul
xchg
movsb
pop
mov
mov
cmp
xchg
xlat
mov
xor
in
inc
addb
mov
or
xchg
or
mov
mov
cmp
std
push
mov
xor
xor
pusha
outsb
lret
jno
lds
sub
aam
mov
sbb
aam
inc
cmp
inc
jbe
xlat
jnp
xor
sahf
fdivs
sbb
adc
mov
pop
jp
into
pop
cmp
mov
out
sub
loopne
cmpsl
mov
mov
add
mov
pushf
push
lret
add
scas
xor
jl
es
addr16
mov
hlt
pop
push
xor
pop
pop
cltd
adc
movsl
call
fs
test
xchg
adc
jae
clc
pop
pop
mov
mov
cmp
mov
je
inc
xor
pop
scas
xor
and
adc
stos
stos
outsb
xchg
repz
rorl
in
cmp
push
loopne
sbb
movsl
dec
mov
xorb
cwtl
add
xor
and
pop
xchg
je
dec
jbe
in
cli
data16
fisubrl
inc
int3
add
scas
or
xlat
mov
push
sub
aas
xor
mov
pop
push
data16
jo
inc
cld
cltd
add
mov
mov
xor
or
push
fidivrs
xchg
mov
pop
hlt
test
sub
fisubrl
xor
cmp
mov
sbb
insb
jmp
test
or
call
cmp
push
repz
fdivrl
icebp
jge
cli
push
mov
pop
adc
push
outsl
or
push
pop
lret
push
sub
cmp
sub
fistl
insb
cmp
jbe
xchg
dec
shlb
cmpsb
call
stos
mov
dec
ret
test
mov
xorb
lds
add
mov
fcmovb
sbb
cmp
adcl
sub
lods
out
push
cmp
lock
push
add
xor
jno
inc
das
das
gs
mov
call
out
mov
jecxz
mov
or
outsl
int3
cld
xor
ljmp
insl
mov
jne
scas
test
xchg
addr16
pop
ficoms
cli
cmpsl
popa
ljmp
mov
shlb
shl
mov
subl
shrb
mov
or
dec
push
mov
test
test
dec
mov
in
xor
lock
addr16
dec
loope
mov
push
insb
cltd
mov
rcrb
jge
push
dec
and
sti
cltd
ret
ja
sarl
lods
test
mov
adc
mov
cmp
sbb
fs
les
and
cwtl
je
mov
shrb
addr16
mov
jo
movsl
hlt
pusha
inc
dec
rcrl
test
insl
out
jb
xlat
jo
stc
xchg
mov
rcrl
mov
das
loope
or
dec
sbb
push
xchg
lcall
push
in
push
sub
jl
adc
loope
mov
or
lcall
fsub
mov
xchg
mov
cmpxchg
mov
popl
inc
push
ja
loop
mov
arpl
dec
cwtl
add
fwait
mov
out
xor
imul
xorb
xlat
or
mov
dec
insl
mov
pop
subb
or
add
leave
je
xor
and
cli
xor
cmc
sub
or
scas
add
sub
dec
repnz
xchg
bound
fs
fwait
cld
and
in
mov
and
mov
mov
pusha
call
xor
sbb
jecxz
mov
int3
pop
mov
jno
or
pop
pop
jo
pop
and
push
push
xor
push
inc
cmp
mov
sub
orl
xchg
lret
mov
pop
idiv
mov
mov
dec
push
scas
adc
cmp
pop
inc
sub
popf
je
stos
aad
in
repz
xor
sbb
sub
mov
dec
call
add
cld
xchg
add
sub
mov
push
cmp
jecxz
gs
xor
fsubl
data16
cmp
lods
aas
adc
mov
jbe
cmpsl
lahf
and
data16
push
repz
inc
jne
lds
push
popa
or
push
cwtl
jae
test
clc
and
sub
xchg
adc
shrb
ss
fildl
and
push
ljmp
or
cwtl
out
cmc
xchg
add
pop
xorb
xor
mov
or
mov
in
fdivrl
sub
aam
in
stc
mov
mov
jb
roll
cwtl
mov
popf
pusha
rcrl
in
pop
pop
int
repnz
je
repnz
jmp
repnz
nop
jge
add
dec
or
xor
sbb
fsubl
fisubs
add
mov
sbb
cwtl
pop
loop
xor
test
mov
pop
fmull
shrb
rolb
outsb
and
or
xor
xor
stos
adc
hlt
or
jno
cwtl
js
mov
test
ljmp
outsb
mov
mov
jl
xchg
adc
cltd
jne
aas
lret
dec
data16
mov
shl
fsubs
mov
or
or
ds
notb
and
rorl
push
mov
adc
fmuls
xchg
fdivl
sbbb
or
push
shl
jns
mov
call
pop
ror
mov
cmpsl
dec
insb
xor
lods
data16
sahf
stos
sub
push
add
sbb
pop
jmp
ljmp
ret
mov
fidivrs
fisubrl
dec
movsl
mov
insl
mov
xchg
adc
in
cwtl
loop
sub
cmovg
cmp
push
bound
add
test
xor
add
scas
cmpsb
fsubr
adcl
rcrl
lret
out
sub
leave
lret
fcompl
sub
mov
cmpps
push
push
arpl
xchg
stos
lret
dec
mov
je
push
adc
xchg
repnz
jle
dec
jl
pop
aam
fistps
mov
aam
inc
int3
push
inc
jbe
xlat
inc
pop
rcr
fadd
mov
push
enter
mov
movsl
or
and
jle
fsqrt
jbe
cwtl
or
inc
jbe
roll
mov
adc
in
jp
pop
clc
cmpb
cmp
sub
int3
cmp
scas
es
loope
ja
mov
xchg
fwait
imul
xor
scas
in
rcrb
xor
out
lock
push
clc
test
lock
jbe
sarl
cmp
lock
in
mov
sub
jecxz
sbbb
loopne
cmp
lret
test
mov
mov
adc
mov
imul
subb
sarl
loopne
in
xchg
mov
mov
jnp
and
nop
pop
sub
add
sbb
mul
push
push
inc
or
int
repz
push
mov
push
jae
or
sbb
out
push
cwtl
fs
push
push
pop
lcall
push
fwait
mov
test
sub
mov
xor
ss
mov
jmp
mov
jp
ss
mov
hlt
mov
inc
push
xor
insb
mov
cltd
loop
loop
mul
mov
ret
mov
aam
sbb
cmp
pop
scas
and
lcall
mov
into
mov
in
fs
cmp
nop
dec
scas
cwtl
cmp
inc
fadds
mov
pop
inc
dec
push
test
fcmove
dec
pop
add
repz
mov
data16
in
dec
dec
inc
mov
cwtl
jge
push
push
cmpsl
or
pusha
mov
into
xchg
push
faddl
pop
cld
popa
fsts
push
repnz
mov
cld
pop
into
sbb
std
adc
je
dec
movsb
sub
push
fwait
xor
sbb
sub
lcall
cwtl
imul
push
jmp
adc
push
loop
enter
pop
push
push
jmp
mov
bound
push
cmpsl
leave
inc
mov
dec
mov
loopne
fldl
pushf
sbb
mov
enter
lods
insb
shl
cmp
cmp
adc
aas
stos
shll
adc
fucomip
mov
subb
ficompl
shrb
dec
cmpb
cmp
movsl
xorl
in
test
mov
pop
pusha
popa
pop
pop
mov
xor
std
cmp
dec
xor
pop
push
push
push
stos
shrl
out
test
jp
dec
js
sarb
scas
and
xchg
push
test
mov
push
jbe
out
sarb
cwtl
arpl
adc
test
ret
daa
popa
fnstsw
popf
outsb
xchg
arpl
mov
dec
sbb
dec
mov
jg
sbb
dec
sub
push
fsubrs
cmp
sbb
mov
mov
pop
dec
adc
cmp
xor
cld
out
push
fcomps
adc
xor
push
push
popa
push
sbb
jbe
ljmp
outsb
shl
pushw
cwtl
sbb
cli
cltd
test
xchg
push
in
dec
les
cmp
sub
test
cmpsl
mov
rcll
xchg
dec
adc
inc
subb
dec
icebp
cmp
mov
loope
in
lds
or
and
in
insb
adcl
lcall
cwtl
mov
mov
mov
fwait
xchg
sub
insb
mov
adc
fiadds
jae
in
movsb
push
xor
arpl
and
pop
pop
push
push
out
or
pop
in
or
inc
pop
pop
sbb
lret
test
repnz
in
imul
shlb
sub
arpl
jge
push
arpl
imul
ljmp
ret
mov
push
cs
scas
bound
push
adc
add
sub
insb
rcrb
in
roll
std
inc
cltd
pop
add
and
pop
sbb
sahf
nop
sbb
jb
xlat
push
inc
jo
xlat
mov
cli
or
repz
dec
lcall
and
mov
mov
dec
and
pusha
sbb
out
add
iret
lret
rorb
sub
or
in
xchg
add
cwtl
scas
and
sti
inc
js
mov
add
push
inc
movsb
or
insl
and
sub
mov
repnz
sub
js
adc
mov
cld
mov
inc
dec
inc
mov
mov
jecxz
add
xchg
mov
sarl
push
mov
ret
bound
push
inc
jo
xchg
fisttps
xor
cmp
call
fmull
adc
cld
cmp
mov
inc
fucom
sub
imul
mov
daa
push
sbb
pop
mov
add
popf
je
imul
and
jno
inc
ja
push
icebp
dec
clc
cmp
xchg
lods
mov
push
jg
cltd
jns
xchg
out
ja
pop
loope
hlt
mov
xchg
test
into
xor
js
andb
das
xchg
push
dec
lahf
int
movsl
sbb
pop
shrl
pop
shrl
lcall
bound
addr16
or
mov
cmp
pop
sub
add
pop
sbb
dec
in
out
fst
push
jl
mov
sahf
xchg
mov
test
mov
jb
and
cmp
arpl
xchg
pop
adc
rcrb
jo
sub
push
jo
ljmp
push
out
xchg
jg
rcr
nop
popa
mov
pop
and
pop
aas
pop
pop
cmp
fwait
xchg
sahf
xor
test
filds
or
test
inc
pop
jnp
sub
xor
mov
mov
dec
cs
ja
lret
pop
lods
cld
mulb
and
lods
in
inc
jb
mov
mov
in
pop
or
test
cs
adc
inc
pusha
scas
jbe
pop
dec
mov
out
dec
enter
rcrb
movsb
mov
or
adc
ss
adc
jge
lock
popa
lret
scas
ljmp
adc
jle
cmp
sahf
ret
cmp
clc
pop
leave
std
lahf
mov
jnp
xor
or
xor
jno
add
push
jo
push
int3
scas
mov
hlt
pmuludq
gs
mov
sti
fildl
inc
repz
out
shll
imul
add
jbe
mov
mov
imul
sub
mov
mov
mov
fsubs
fldenv
roll
out
outsb
pop
scas
dec
inc
cmpsb
mov
cmp
test
mov
call
mov
push
cmp
fimuls
dec
nop
lahf
sbb
cmpsl
aam
jae
sbb
das
imul
sbb
sbb
ja
mov
sti
dec
add
cmpsb
adc
dec
xor
push
cmp
push
adc
jb
sbb
shll
sbbl
in
aam
push
dec
fisubs
loope
mov
sbb
push
test
in
stos
js
mov
cmp
inc
adc
inc
jmp
adc
sub
sbb
fnstsw
sbb
es
or
and
fst
rorl
sub
fdivrl
int3
and
std
cwtl
mov
push
subl
xor
mov
clc
dec
ljmp
mov
mov
mov
sub
mov
ficoml
in
mov
mov
push
mov
bound
inc
loope
pop
bound
ss
dec
das
cs
mov
stc
sbb
aam
rcrb
xchg
into
mov
sub
pop
inc
test
into
cs
sub
cmp
ret
mov
adc
adcb
mov
aaa
mov
xor
adc
jecxz
inc
mov
and
dec
and
mov
orb
cmpsl
mov
pop
arpl
mov
popl
dec
jne
mov
jae
iret
and
shr
int
mov
enter
add
sbb
xchg
mov
insb
lcall
add
jne
adc
das
adc
mov
cmpsl
inc
mov
jae
orl
pop
mov
push
inc
ljmp
ret
rcl
cltd
dec
xchg
pusha
cwtl
ljmp
enter
les
aaa
ja
aam
gs
test
test
push
jge
mov
fsub
jp
cltd
adc
pusha
xor
pop
pop
mov
pop
dec
wrmsr
lods
ret
bound
add
jl
cli
and
pop
ret
bound
sahf
xchg
aad
xor
mov
pushf
mov
mov
pop
push
mov
test
or
dec
mov
sub
mov
icebp
mov
fmuls
pop
lock
daa
or
push
push
jnp
sbb
cli
and
popa
outsl
movsb
add
fistl
or
jp
inc
in
daa
xchg
xchg
mov
stos
aam
fstps
test
addr16
inc
data16
call
pop
rcrb
push
push
push
fisttpll
jns
stos
in
icebp
shlb
incb
aam
inc
and
pop
mov
xchg
pushf
pushf
mov
shr
aam
jle
decl
testb
inc
sbbl
add
lea
pop
jno
js
lods
jp
popf
adc
sub
pop
bound
sarl
ret
sbbl
leave
push
cmp
jg
pop
xor
sub
add
and
mov
mov
pop
fiaddl
outsl
movb
movsl
rcll
cld
mov
repz
mov
mov
bound
pop
xor
rorb
mov
out
rorl
adc
cmc
xor
jo
pop
and
add
adc
mov
push
or
test
mov
or
cmp
mov
pop
fidivs
fwait
stos
sahf
sub
or
repnz
repnz
inc
sub
fs
mov
jbe
xchg
xchg
dec
ret
shr
std
cmp
jae
cmp
sbb
push
fwait
decl
mov
mov
popf
or
jmp
rcrl
add
xorl
push
das
out
or
jbe
inc
adc
push
ds
sbb
mov
sbb
xchg
mov
test
loop
cmc
sbb
or
test
xor
in
push
add
or
inc
aaa
jnp
popa
push
sahf
xchg
fldl
and
into
push
movsl
roll
add
jg
xchg
adc
leave
cwtl
rorb
lock
add
test
mov
sbb
push
dec
xchg
repnz
fstpt
mov
js
push
divb
pop
mov
fnstcw
jecxz
xchg
dec
sbb
dec
ss
xor
mov
sbb
pop
pop
pop
pop
or
scas
mov
rcll
mov
adc
imul
fwait
pushf
xchg
loope
push
sub
cwtl
popa
stos
mov
scas
enter
iret
ror
sbb
test
mov
sub
sub
mov
push
lahf
and
loope
out
pushf
insb
ss
xchg
loope
adc
outsl
inc
xchg
lea
test
iret
and
das
inc
mov
mov
xchg
ljmp
fidivl
pop
lahf
push
push
sbb
lods
mov
ret
leave
cmp
xchg
and
in
dec
aam
mov
loop
xor
test
mov
rclb
pop
loop
mov
sub
push
popf
push
enter
xchg
push
pusha
jecxz
daa
mov
jo
ss
jae
xchg
xor
cmp
pop
enter
mov
mov
adc
js
arpl
pop
je
cmpsl
aam
insl
outsl
call
cltd
and
or
mov
int
aam
lahf
sti
sub
or
scas
xchg
popf
and
in
pop
divl
jae
mov
inc
push
adc
nop
xchg
sub
and
icebp
mov
setbe
xlat
mov
jmp
dec
setb
inc
adc
shl
mov
aad
xor
sbb
pusha
lret
dec
cmp
dec
add
sbb
pop
adc
adc
xchg
pop
xor
xchg
jb
stos
in
dec
clc
mov
inc
xor
lods
push
pop
jmp
xor
ss
mov
xlat
negb
jmp
aad
mov
sub
mov
sti
addr16
addr16
lock
and
push
sub
dec
ret
add
pusha
sbb
mov
push
ret
rcll
mov
pushf
jmp
mov
fdivrs
pushw
insb
fiaddl
adc
xchg
push
mov
pop
sub
push
cltd
lea
xlat
push
lahf
outsl
fildl
loop
cwtl
mov
mov
xchg
icebp
xchg
les
inc
cs
jle
fadds
stos
repnz
clc
or
fwait
jns
test
in
sub
or
bound
push
pushf
mov
sub
ret
out
add
cmp
fists
sbb
cld
pop
fsin
push
mov
mov
xor
and
sub
sub
imul
adc
ror
sbb
js
pop
pop
hlt
pop
or
decl
push
push
xchg
repnz
sub
sub
sahf
mov
cltd
sub
mov
cltd
mov
sub
jae
push
mov
mov
mov
movsb
dec
test
into
push
jbe
testb
xchg
add
fidivrs
iret
xor
mov
gs
loopne
inc
cmp
dec
xor
dec
dec
mov
push
sbb
xor
pop
loope
xchg
pop
arpl
aas
out
es
aas
mov
ret
je
mov
setbe
cmp
dec
lods
pop
fisubrl
adc
add
xchg
test
out
pop
mov
mov
pand
aam
xchg
insb
xor
mov
and
jmp
lret
nop
je
insb
push
sbb
jo
mov
xchg
xor
subl
jl
gs
inc
movsl
and
es
imul
shl
mov
imul
sub
movsl
repnz
mov
mov
xlat
jl
jmp
pop
adc
and
pop
sbbl
pop
scas
shlb
cwtl
mov
cmp
add
pop
gs
jmp
inc
and
sbbl
sbb
fistpl
push
nop
jb
cmp
jecxz
mov
and
fmull
jecxz
ds
bswap
pop
mov
mov
aas
jge
xchg
fistps
push
sbb
cltd
adc
mov
push
sub
mov
pop
adc
xchg
pop
inc
push
test
movsb
hlt
dec
fstpt
nop
rol
mov
pop
mov
iret
xor
sub
jmp
dec
push
mov
mov
seto
mov
or
dec
mov
lcall
pusha
loop
pushf
jne
icebp
mov
cmp
enter
mov
xor
ret
mov
fwait
movsl
sarl
outsl
xchg
mov
sub
fbld
rorl
jmp
push
mov
std
mov
test
cmpsl
in
push
adc
fisttps
repz
jmp
dec
lcall
push
lret
cmp
ds
push
push
cmp
xor
mov
add
add
loope
divl
or
xor
push
fcmovne
scas
mov
or
sarb
and
test
das
pushf
cwtl
push
mov
dec
lret
outsl
subl
movsl
sbb
aas
pop
mov
mov
pop
jmp
lcall
pushf
enter
enter
sub
sbb
sub
push
and
push
repz
jae
mov
dec
cmpb
ds
js
push
popa
push
jmp
cltd
arpl
pop
xor
stos
stos
xchg
je
xchg
test
add
dec
push
daa
sub
sub
popa
sbb
push
inc
jp
or
fnstsw
adc
and
mov
inc
cmp
cld
adc
push
sbb
xchg
pop
inc
ss
lcall
xchg
mov
neg
lock
aaa
cs
fcoms
mov
inc
jno
mov
inc
cli
push
sub
mov
inc
sbb
mov
inc
aas
outsb
jmp
add
das
in
imul
outsl
or
push
adc
or
sub
pushf
sub
lock
pop
aad
aaa
fisttpll
mov
aaa
imul
repnz
pop
sbb
cltd
push
or
push
inc
push
xor
repnz
mov
in
pusha
lock
sbb
ret
in
lods
jl
dec
insl
xchg
push
cwtl
decl
xchg
pop
call
shlb
sbb
std
inc
fimull
ss
jecxz
push
push
cli
pop
inc
cmc
xor
dec
jnp
or
mov
pop
dec
shld
imul
mov
sbb
imul
mov
rcl
add
loopne
add
nop
xlat
jp
call
rolb
pop
data16
int3
pop
and
fsubrs
sarb
call
pop
pop
int
in
les
sbb
adc
cmpsl
inc
or
shrl
inc
pop
push
mov
cmp
ret
je
movsl
pop
int3
xor
subb
je
jle
popf
mov
aas
decl
pop
push
data16
ret
dec
and
loope
lahf
enter
lcall
sub
push
cmp
adc
dec
int3
enter
js
imul
jae
and
pushf
or
mov
std
push
bound
sub
clc
in
push
loopnew
les
sub
clc
popa
fdivrs
insl
cmpsb
out
pop
jp
test
loop
jbe,pn
pop
ss
mov
call
mov
lcall
movsl
idivb
es
lods
pusha
test
je
add
mov
lcall
hlt
gs
or
sbb
sahf
mov
dec
jecxz
shl
push
clc
pop
mov
insb
fcmove
repz
insb
cltd
adc
outsb
loope
xchg
mov
mov
popl
lea
or
sbb
cmp
mov
xchg
rcrb
push
sbb
int
insb
cmp
ljmp
jne
aaa
mov
idivb
ds
lret
les
inc
je
pop
fdiv
jl
lock
jl
xchg
push
mov
inc
pop
xchg
lods
push
add
mov
or
mov
adc
aaa
pop
add
adc
sahf
out
les
ret
jmp
es
test
and
pusha
add
ljmp
cmpsl
push
jo
cmpsb
inc
pop
mov
mov
aaa
dec
xlat
mov
push
das
sub
clc
lret
dec
jmp
push
addr16
cs
fsubl
es
aam
test
mov
xor
pop
mov
ss
lds
sub
push
imul
jg
dec
add
cmp
out
jmp
mov
into
adc
mov
nop
push
lahf
rorb
shlb
dec
cmpsl
test
or
insb
in
push
outsb
loope
dec
mov
add
rcrb
jmp
testb
xchg
hlt
inc
les
and
loop
icebp
test
test
xorl
mov
fists
imul
or
ret
call
in
stc
pop
dec
fnstsw
mov
adcb
xor
repnz
push
clc
orb
repnz
sbb
sti
mov
shrl
xchg
sbb
push
cmp
ret
adc
out
dec
sub
dec
add
xor
hlt
pop
fiaddl
mov
aaa
cmpsb
aam
shlb
mov
pop
xchg
sbb
sarb
es
mov
mov
test
stos
fldl
sbb
inc
sarb
mov
out
inc
cld
sbb
sbb
mov
mov
mov
dec
hlt
push
sbb
jns
cwtl
push
push
ds
cmpl
loopne
fmull
pusha
and
scas
in
in
sub
sbb
pop
hlt
in
sahf
and
or
add
mov
jnp
scas
bnd
mov
popa
loopne
imul
pop
sub
add
and
sbb
cmc
mov
mov
push
jnp
inc
aas
push
jb
clc
jge
mov
push
inc
inc
jne
mov
cltd
cmp
mov
xor
xchg
cmp
mov
addl
enter
pop
int
popf
sbb
xor
inc
cli
daa
scas
push
push
push
stc
pop
fidivs
lods
in
pop
fsubrs
sarb
and
in
pop
subb
xor
jb
and
push
sub
pop
jp
fisttps
repnz
int3
dec
fwait
and
push
mov
push
repz
fsubl
push
in
push
test
scas
inc
outsb
cmp
and
adc
ret
sub
xor
xchg
mov
mov
mov
scas
mov
inc
xor
inc
cmpsl
lds
push
jmp
in
dec
mov
pushf
adc
test
inc
ljmp
repz
aas
cwtl
push
mov
iret
cmp
push
arpl
or
fs
sti
push
cmp
fstpl
xor
dec
mov
sarb
pushf
outsl
add
pop
stos
xchg
jnp
daa
out
or
pop
mov
lods
adc
cltd
lea
outsb
hlt
jl
lret
jge
jmp
addb
test
and
aad
adc
xchg
pop
incl
test
xor
and
sbb
dec
and
data16
add
call
xchg
xchg
cli
mov
repz
pop
in
adc
cmp
xchg
add
hlt
fwait
jp
push
or
xor
mov
fildll
test
jbe
jo
xor
or
in
aas
push
daa
mov
std
pop
jp
in
pushf
pushf
cmp
in
out
jae
mov
ljmp
mov
scas
sbb
popl
pop
pop
cmp
bound
cwtl
ds
fidivrl
dec
lret
pop
in
ret
mov
or
mov
dec
dec
shl
adc
out
aaa
jbe
add
dec
xchg
fwait
push
jg
pop
data16
sub
cmpsl
test
movsl
aaa
inc
adcl
dec
mov
jle
push
push
dec
je
mov
into
test
xor
xchg
pop
cmp
pop
push
xor
adc
mov
ret
in
testb
cltd
jle
out
pop
dec
leave
or
icebp
shrb
push
mov
inc
cmpsb
mov
sub
inc
dec
pop
repnz
sub
loopne
cmp
mov
lcall
sub
xor
jo
xchg
sub
sub
add
es
adc
test
mov
fsubrl
lods
cli
cli
jl
adc
and
mov
fimull
and
mov
bound
mov
or
jp
pop
iret
ljmp
inc
call
movsb
sub
xor
sbbb
push
clc
mov
mov
mov
pop
clc
jmp
adc
cli
mov
pop
in
add
rclb
cli
inc
pop
xchg
bound
adc
lcall
imul
xor
mov
fwait
enter
mov
mov
test
jae
pop
call
xchg
ss
pop
xchg
movsl
dec
lds
decl
jg,pn
rcrl
js
jecxz
stc
adc
push
adc
jno
or
push
sub
sbb
mov
push
adc
or
pop
dec
ss
cmpsb
mov
stos
scas
inc
outsl
pop
popa
inc
adc
mov
mov
and
mov
cmp
mov
scas
or
jle
pushf
adc
cmp
sub
movsb
mov
pop
scas
test
mov
outsb
sub
cmp
adcb
add
cmc
push
outsb
mov
adcl
adc
cmp
xor
roll
inc
and
aas
inc
or
adc
pop
clc
pop
mov
mov
and
roll
gs
mov
stc
lahf
aam
sbbl
dec
xorb
lods
adc
mov
cmp
adc
sarl
aad
std
add
sbb
shlb
and
mov
sub
sbb
jecxz
jo
mov
aas
hlt
and
xor
stos
in
or
std
scas
mov
inc
out
push
test
and
inc
cmp
sahf
xchg
xor
into
dec
arpl
sbb
fildl
xor
call
mov
cmpsl
insb
fs
fs
inc
stos
or
sahf
sub
or
dec
mov
icebp
mov
sub
and
pop
repnz
cli
and
repnz
adc
xor
lret
stos
lock
jl
xchg
cltd
ja
push
cmpsl
in
sbb
jb
repnz
adc
clc
xor
jl
sub
xchg
pop
xchg
cwtl
xchg
or
mov
pop
mov
scas
data16
jmp
pop
add
dec
inc
incl
pop
rcrb
icebp
stos
or
rolb
mov
or
clc
js
adc
ss
xchg
cld
test
mov
lahf
loop
push
pop
xchg
cmp
pop
loope
push
push
loop
sbb
xchg
divl
adc
xchg
xor
cmp
fs
sti
dec
cwtl
in
sti
adc
insb
jno
data16
xchg
and
mov
shrb
add
in
xor
fcmovne
popf
push
shrb
push
sbb
enter
loop
sbb
andl
fiaddl
xchg
or
xor
xchg
push
xchg
cmpsl
inc
inc
xchg
adc
xorl
mov
imul
mov
rol
lcall
xor
mov
mov
xchg
xor
inc
dec
ja
add
or
sbb
fildll
sbb
mov
nop
pop
and
xor
and
cmp
jbe
inc
out
jg
inc
fmuls
rolb
nop
gs
fidivrs
lret
adc
jbe
fisubrl
mov
mov
loop
cmp
ror
sub
int
rolb
ds
das
gs
nop
or
sub
clc
jae
adc
jle
ljmp
cltd
shll
sarb
imul
push
jmp
pop
fsubrl
in
imul
data16
xor
mov
and
call
testb
enter
xorl
pop
dec
add
dec
inc
jle
fwait
xorb
sbb
lret
cli
dec
pushf
enter
rolb
jge
stos
aas
xor
jae
cwtl
xchg
dec
mov
ja
and
mov
stc
or
xchg
jle
jle
hlt
jle
mov
daa
shr
rclb
movsb
xchg
jecxz
stos
sbb
xor
mov
arpl
hlt
mov
clc
lcall
stos
jno
dec
ljmp
dec
clc
sub
mov
sub
mov
push
pusha
cmp
pop
cld
es
pop
jmp
cmp
or
cld
iret
mov
sbb
out
lds
xchg
ret
mov
aaa
push
loope
inc
fdivs
aam
inc
gs
xchg
loope
xchg
lret
scas
mov
movsb
xlat
ss
xchg
sbb
pop
ret
fprem
push
ss
ret
dec
pop
cmpsb
cmpsb
call
repnz
aaa
les
jp
test
rcll
mov
gs
ds
or
jle
in
dec
cmc
ror
or
mov
xchg
adc
adc
cltd
pop
xor
or
das
popf
mov
mov
pop
bound
pop
mov
fidivs
push
and
gs
inc
decl
mov
add
mov
lret
fadds
cmp
jb
stc
cwtl
sub
add
push
mov
fnstsw
push
test
je
add
dec
lock
push
inc
jg
aad
cmpsb
mov
test
ret
push
jns
js
or
cmp
cmp
sti
scas
mov
cli
insl
clc
sub
loopne
mov
lret
add
loope
adcb
pop
xchg
cmp
xchg
jnp
rolb
cltd
push
and
cmpsl
push
pop
and
mov
fdiv
movsl
faddl
popf
inc
inc
mov
add
xor
out
lods
cmpsl
or
push
cmpsl
test
xor
or
push
scas
movsl
sub
in
bnd
or
push
mov
aad
inc
les
dec
dec
ficompl
insb
sub
sub
mov
repnz
int
pushf
sbbl
int
loope
mov
push
dec
push
and
and
mov
out
pop
mov
cld
mov
lret
clc
inc
sub
lcall
add
sub
aad
sti
arpl
adc
call
jge
imul
add
pop
out
clc
push
aas
jmp
xchg
sahf
js
stos
xchg
pop
dec
mov
mov
fs
repz
mov
inc
je
add
inc
adc
mov
test
hlt
jl
mov
out
push
cmc
sub
daa
insb
mov
cmpsb
test
loopne
in
dec
push
pop
mov
aas
add
mov
and
push
lods
adc
es
xchg
adc
mov
sahf
sbb
mov
pop
ret
in
mov
aas
jae
mov
popf
or
test
paddd
lcall
aas
es
enter
sub
in
inc
clc
nop
repnz
roll
cmp
cmpsb
adc
xor
pusha
fistpl
or
dec
imul
pop
sbb
pushf
sti
dec
cmp
cmp
and
adc
xchg
jne
orb
pop
add
add
cmp
mov
int3
shlb
ss
xor
push
ds
adc
sub
mov
aas
int
ret
in
pushf
add
push
inc
je
mov
aaa
mov
or
add
aaa
xchg
fdivl
stos
cli
test
rclb
add
mov
cmpsl
mov
cmpl
mov
add
cld
dec
dec
mov
daa
sbb
adc
rclb
add
sub
add
xor
imul
scas
adc
dec
scas
push
pop
sahf
xchg
shlb
push
mov
lret
cs
or
icebp
mov
mov
pop
sbb
cs
shr
into
mov
stos
shr
inc
and
call
insb
dec
or
and
cmpb
int3
cmp
push
in
loop
add
rcl
sarl
repnz
out
adc
jnp
inc
not
pop
dec
cmp
mov
je
ss
sub
pop
mov
insb
or
filds
push
sbb
out
sbb
sbb
insl
mov
xchg
call
jp
mov
mov
and
rcrl
rclb
pop
pop
cmpsb
add
jmp
lds
mov
ds
stos
int
icebp
inc
movsl
mov
into
call
test
ret
jns
pop
icebp
aas
imul
aam
subps
test
xchg
jmp
xor
add
inc
je
leave
pop
mov
jae
fisttpl
inc
jle
dec
mov
add
push
mov
pop
inc
rorl
addl
add
test
out
ret
xor
xchg
cs
pop
inc
mov
jg
mov
pop
insb
xchg
or
ret
fldt
xor
lds
and
mov
mov
sub
std
lahf
rolb
out
lcall
ljmp
or
push
sbb
mov
aam
hlt
repz
cwtl
or
fbstp
pop
je
mov
adc
sbb
outsl
daa
push
mov
add
push
into
and
inc
pop
mov
pop
or
push
fs
daa
or
push
push
hlt
mov
out
dec
push
cmpb
or
test
dec
adc
mov
cwtl
rcrl
cwtl
roll
sub
in
repnz
fimull
test
xchg
jp
adc
mov
push
pop
jns
fcomp
or
das
int3
in
data16
xor
ja
or
bound
push
popa
add
stos
stc
sub
xor
lds
bound
cmp
movsl
jmp
sub
push
mov
jo
pop
ret
orl
outsb
push
dec
and
fidivl
sahf
insb
movsb
mov
call
pop
adc
lahf
jne
cltd
fcomps
iret
lea
test
popf
call
pop
pop
int
repnz
or
popa
inc
ja
mov
cmp
je
dec
jbe
inc
fs
jbe
shl
fwait
int3
data16
push
fstl
pop
data16
jo
push
push
scas
mov
popa
stos
mov
and
mov
jmp
jg
in
movsl
sarl
add
lcall
xchg
scas
insb
movsb
mov
add
pop
mov
repnz
cltd
add
mov
frstor
adc
enter
rcrl
xor
xor
jmp
iret
mov
add
cmp
pop
xchg
sub
outsb
jmp
mov
mov
pop
cmp
ficoml
test
ja
subb
or
mov
stc
pop
lock
insl
dec
xlat
test
mov
out
dec
push
hlt
cmp
dec
pop
stos
mov
mov
out
jo
jae
pop
cs
scas
sbb
sub
mov
insb
cwtl
inc
mov
pushfw
jae
imul
sbb
xchg
les
lcall
imul
test
pop
rcll
mov
jmp
and
addr16
push
mov
pop
push
jo
xchg
in
cmp
insl
push
pop
cmpb
scas
in
ret
out
mov
pusha
xor
pop
mov
xor
mov
inc
mov
jno
daa
jb
insb
fbld
mov
xor
leave
pop
xchg
mov
mov
daa
push
push
daa
or
test
jb
shl
cmpsl
mov
in
imul
mov
cmpsl
mov
sbb
pop
adc
push
jmp
repnz
and
push
push
pop
shll
out
or
sti
mov
pusha
dec
mov
jb
loope
and
in
aas
into
cs
sub
xor
lds
rcll
fwait
andb
ds
hlt
fs
jbe
shlb
or
xorl
imul
inc
out
sarl
repnz
cs
dec
mov
rcrb
adc
mov
or
loopne
or
push
mov
inc
ja
mov
nop
rcrl
aas
je
dec
jbe
mov
je
pop
xchg
mov
mov
push
cld
sub
int3
dec
test
ds
ret
xor
fs
daa
push
inc
push
cmp
xlat
xor
sbb
adc
push
cmpsl
lcall
scas
aaa
jp
jmp
and
call
inc
sbb
nop
mov
shll
xor
vfrczss
movb
jnp
sub
jo
mov
xchg
cmp
mov
cmpb
cmpsb
rorl
adc
das
leave
xchg
outsl
lods
dec
imul
outsl
lds
lds
ret
je
aaa
aas
jbe
and
adc
fmul
xchg
loopne
stos
push
inc
inc
std
fmuls
push
out
cmp
jb
js
mov
sub
loopne
aaa
adcl
leave
popf
das
add
je
adc
push
es
jno
addr16
cwtl
insl
push
push
xor
addl
pop
fcomp
fdivrs
pop
ret
jno
cli
sub
divl
cmp
dec
adc
int
in
out
mov
add
xor
ljmp
loopne
test
pop
adcb
cmp
fildl
js
rorl
xor
imul
cmp
lods
xchg
dec
lock
imul
push
movsb
test
jne
ljmp
int3
lret
adc
hlt
cmp
mov
xchg
cwtl
and
insb
ja
inc
mov
cld
sbb
cmc
call
iret
out
sub
shr
push
dec
push
mov
sub
push
mov
stos
imul
mov
sbb
jmp
sub
xor
fcoms
shlb
xchg
rolb
add
mov
adc
aad
lods
push
xchg
xchg
push
jns
xchg
pop
ss
xor
test
out
test
pop
test
outsl
xchg
add
cmpsb
push
jo
loop
int
loope
test
aaa
add
xchg
push
add
add
std
add
out
cmp
ljmp
inc
push
xchg
or
mov
in
lods
repz
xchg
mov
adc
cld
es
xor
sub
cmp
cld
lcall
jbe
inc
jle
adc
lret
dec
adc
repnz
jl
cmp
inc
imul
pop
xchg
shr
movsb
jecxz
jno
fmull
add
xor
pop
push
out
jg
sbb
mov
mov
or
pop
fists
je
mov
test
adc
outsl
movsb
add
cwtl
add
mov
push
jo
cmpsb
out
popa
aaa
mov
xor
and
xor
and
je
inc
jle
mov
push
jle
ret
insb
jmp
push
cmp
jb
cmp
popa
jmp
sub
adc
sbb
cli
mov
je
inc
outsb
xchg
mov
inc
jle
ret
insb
jmp
inc
rcll
bound
cmp
mov
sarl
pop
mov
test
fmul
jge
push
nop
pop
xchg
mov
ret
adcl
mov
fstpt
fsubr
sbb
jo
push
inc
loop
arpl
pusha
iret
popa
cmp
xor
sbb
insl
dec
mov
xchg
push
hlt
dec
xchg
aas
mov
test
sbb
sub
sbb
mov
jl
xchg
lock
push
inc
ret
aas
push
out
jb
push
push
mov
push
dec
inc
cmp
sbb
pop
test
mov
add
pop
lcall
ja
pop
pop
inc
and
push
rorb
push
sbb
adc
mov
or
and
mov
sbb
loopne
inc
adc
mov
ljmp
adc
popa
push
sub
mov
sub
cmp
mov
sbb
ret
ds
jp
int3
int3
push
xchg
notl
outsb
pop
add
jo
nop
movsl
adc
jno
lock
out
xor
pop
pop
shr
cmp
loope
mov
fimuls
test
mov
imul
jbe
jg
out
pop
imul
nop
add
push
fisttpll
repnz
stos
dec
push
lds
jns
inc
mov
cmp
and
andb
aas
ret
push
inc
and
call
cltd
jno
dec
xor
scas
xor
mov
fidivs
push
sub
popf
jl
loope
mov
cmp
xor
imul
test
jg
ret
mov
sahf
xchg
sub
insb
lret
repnz
inc
insb
ss
cmp
push
es
test
sbb
mov
mov
gs
xchg
mov
scas
sub
aas
into
jmp
cmp
inc
enter
dec
inc
in
mov
or
mov
pop
mov
popa
adc
sbb
cmp
mov
sahf
add
or
cli
mov
je
pop
jl
imull
cmp
loope
addb
lods
adc
popa
mov
push
pop
ds
xchg
loopne
ss
imul
sbb
pop
mov
ljmp
test
mull
in
jmpw
pushl
fistpll
ret
inc
les
cmp
pop
repz
mov
jmp
dec
jbe
mov
inc
lock
push
jno
inc
fsubl
inc
in
push
test
cld
mov
dec
lret
pop
negl
cmpsl
mov
mov
out
loopne
fsubr
ljmp
ret
pop
xor
es
adc
mull
sub
push
push
dec
cmp
inc
pop
mov
test
ljmp
mov
ja
loop
jb
hlt
dec
data16
xor
add
sub
jo
add
outsb
in
jmp
adc
sahf
mov
ret
push
mov
out
adc
ds
xchg
loope
xchg
sbb
movsl
aad
cltd
mov
fimull
adc
push
jmp
jle
scas
mov
inc
cmpsb
and
cld
adc
mov
cmpsl
mov
push
and
xchg
cld
in
xor
mov
inc
dec
cmp
roll
sbb
or
hlt
pop
dec
xchg
sbb
mov
and
pop
ds
push
in
roll
loope
lret
push
xor
and
jge
loopne
rolb
xor
es
sbb
inc
rcrl
mov
test
ret
jge
in
incl
rcrb
mov
dec
sbb
cmp
addr16
mov
ja
subb
or
int
je
add
and
cwtl
dec
cmp
insb
jo
es
test
repnz
call
sbb
es
fcmovbe
cmp
inc
add
stos
fldt
cmp
mov
mov
adcl
es
int3
lea
pop
test
jb
clc
dec
adc
jecxz
mov
out
mov
aad
insb
rcrb
mov
add
mov
test
pop
jae
sbb
repnz
je
pusha
rol
add
adc
shr
or
js
clc
call
inc
popa
or
push
or
xor
pop
es
lcall
into
jge
test
jno
mov
data16
or
iret
sbb
add
xor
jl
ljmp
mov
loopne
mov
mov
adc
push
movsb
add
test
xchg
sbb
inc
pop
fs
adc
jmp
cs
sbb
iret
scas
jecxz
les
xchg
pop
dec
cs
and
push
in
sbb
pop
or
push
in
lock
cltd
repnz
insb
cmp
outsl
loop
or
cmpsb
pop
cmpsl
popa
lods
jbe
xlat
in
cwtl
aam
mov
add
sbb
or
pop
sahf
insl
pop
bound
rcl
in
push
int3
inc
add
bound
nop
scas
dec
lret
bound
or
push
dec
in
int
loope
xchg
into
adc
cmp
push
dec
dec
fadds
insl
and
push
imul
ss
lock
outsl
mov
jg
fildll
xor
nop
cmp
lds
cli
jbe
pop
call
lods
pop
mov
loopne
jae
cmp
testl
pop
sbb
push
mov
push
xchg
mov
ret
in
sub
sub
pushf
jno
fdivrl
in
pusha
and
in
cmc
xchg
add
std
mov
xchg
pop
aad
sub
push
clc
sub
out
mov
jp
xchg
push
rcrb
add
cmp
data16
testl
adc
cmp
add
mov
jno
arpl
cmp
and
in
fcompl
xchg
sub
outsb
jmp
lret
and
mov
es
mov
in
imul
shlb
xchg
int3
cwtl
jge
imul
inc
pop
xor
push
outsb
scas
mov
popa
stos
mov
xor
sub
xchg
adc
je
jecxz
movsl
sarb
cmp
adc
test
int3
xor
sbb
mov
mov
jb
xlat
fldl
push
xor
cld
mov
inc
loope
push
stc
sub
in
adc
orps
lds
movsb
fwait
inc
fnsave
cmp
fcompl
add
jo
jle
xchg
jg
push
les
test
orl
les
push
insb
inc
adc
mov
hlt
sbb
hlt
add
mov
push
pusha
pop
add
aad
inc
into
jle
test
ficoms
js
stc
fcoms
or
das
shlb
push
sbb
jno
mov
dec
sahf
mov
push
loopne
pop
jbe
push
push
popa
mov
imul
lock
shrb
ret
adc
es
inc
shrb
cwtl
xor
push
mov
push
or
xchg
adc
xor
adc
pop
das
or
inc
or
sbb
iret
sbb
mov
xorb
fsts
insb
scas
xor
mov
jp
inc
jp
xchg
dec
adc
xchg
push
int
adc
jg
adc
fs
mov
mov
loopne
sbb
rorb
int3
outsl
inc
ss
aam
inc
outsl
mov
jg
fildll
xor
lods
cmp
xchg
xchg
inc
or
repnz
int3
push
in
push
xchg
dec
sahf
icebp
add
es
dec
lcall
leave
test
aas
adc
mov
fadd
sub
pop
jb
and
jo
aaa
aas
inc
xor
fnsave
pop
pop
jae
repnz
aaa
xor
or
xor
fdivs
cs
push
das
aam
and
repnz
push
xor
pop
jno
aaa
adc
add
scas
push
jecxz
fsubl
ljmpw
adcl
jp
pop
inc
dec
enter
fistpl
jecxz
xchg
sbb
dec
loopne
iret
jmp
sahf
mov
hlt
arpl
shl
aam
cwtl
cmpb
jl
js
gs
mov
test
aam
xchg
repnz
add
or
add
jmp
pop
xor
cld
cmp
xor
jl
stc
imul
mov
hlt
pop
and
cli
cs
adc
mov
movsb
mov
insl
adc
clc
out
into
lea
imul
adcb
jb
xchg
dec
xor
jecxz
mov
ficompl
clc
dec
xchg
je
clc
xor
pop
loope
xchg
into
lret
xchg
push
cld
ss
or
sbb
enter
push
stos
xchg
outsb
std
sbb
push
dec
mov
daa
push
sbb
sarl
jo
xor
aaa
cli
jle
pop
xorl
xchg
imul
xchg
cmc
xchg
shl
into
addr16
fwait
sub
xor
sub
fcoms
es
sbb
sahf
sbb
cld
popa
cli
movsl
or
rcrl
xchg
repnz
mov
mov
test
cli
icebp
insb
inc
pop
hlt
dec
mov
jns
int
inc
mov
or
cltd
fsubrp
mov
lahf
mov
and
sub
nop
or
fisubs
jno
call
xor
out
in
out
cld
test
or
les
add
repnz
sub
mov
dec
sub
subb
xchg
hlt
incb
xor
jae
iret
test
mov
imul
and
out
mov
hlt
dec
cmpsb
cli
sub
mov
nop
enter
xor
mov
sbb
jmp
orl
fldcw
adc
or
test
jmp
push
dec
mov
and
mov
xchg
mov
jg
mov
jmp
or
enter
dec
or
and
cwtl
mov
inc
mov
repz
xchg
rcr
cmp
xorl
out
xor
loop
cld
inc
dec
xchg
cli
loop
loope
lret
jmp
jo
xchg
dec
push
mov
mov
repnz
push
rcl
ror
out
and
add
cmpsb
mov
pop
addb
repnz
call
movsl
insb
fldt
stos
out
xchg
xchg
loope
dec
push
jmp
adc
in
inc
lea
cmpsb
les
ss
gs
loopne
sbb
pop
pop
mov
sub
shl
lcall
cwtl
lods
es
mov
add
push
and
add
repnz
xchg
push
jp
int3
mov
pop
xchg
fst
pop
lock
shrb
insb
or
push
dec
push
mov
mov
orl
mov
fcoms
add
inc
lahf
dec
shl
jecxz
mov
es
aad
push
and
in
shrb
loope
xor
pop
jecxz
and
movsb
cwtl
mov
push
rclb
sbb
xor
pop
bound
adc
jle
xor
loope
std
lods
mov
cmp
sbb
mov
in
adcb
jns
insl
ja
or
jle
or
shrb
inc
pop
fs
adc
cmc
in
loop
js,pn
sbb
les
shlb
gs
ljmp
mov
aas
push
jge
add
dec
or
loope
jmp
shl
into
and
pusha
push
mov
cld
pop
ret
stos
gs
jl
inc
sub
test
lcall
nop
lds
divb
insb
dec
and
add
imul
push
dec
mov
push
sbb
aaa
stos
dec
adcb
jnp
repz
mov
aas
pop
push
mov
loope
mov
movsb
jecxz
mov
aas
or
sub
xchg
loope
or
push
sub
mov
repz
xor
lcall
xchg
ret
mov
and
jno
xchg
loope
add
psllq
push
mov
sub
inc
cmp
rolb
lods
mov
xchg
dec
arpl
mov
subl
lods
sub
mov
out
out
pushf
adc
mov
and
ret
push
lods
decb
push
push
mov
mov
xor
push
test
movsb
pop
xchg
push
bound
sub
sub
mov
dec
jo
mov
mov
add
mov
mov
imul
lods
push
movsb
test
out
rolb
fcompl
xor
js
pop
inc
inc
adc
jno
and
loopne
xor
inc
mov
ret
jl
loope
test
lods
int3
mov
sub
outsb
jmp
lret
fninit
repz
inc
jbe
testl
cmovo
hlt
pop
loopne
mov
rcll
lock
js
pop
or
in
sub
mov
in
add
mov
ret
jecxz
movsb
push
ret
xchg
or
fnstsw
mov
xor
push
push
mov
push
push
hlt
xor
inc
jle
in
in
test
cmpsb
shl
lcall
add
cltd
test
mov
xor
sub
clc
in
push
add
int
loope
test
aaa
add
lcall
imul
jle
bound
popa
ljmp
and
mov
aad
and
fistl
aas
xlat
cmc
push
es
xchg
fdivrl
fs
cs
movd
cltd
test
mov
inc
rorb
dec
cmp
cld
in
xchg
pop
dec
sbb
xorb
ficoml
lds
hlt
sub
clc
xor
push
mov
mov
push
pop
or
ret
inc
cmpsl
jle
jl
mov
cld
out
xor
idivb
into
xor
stos
push
enter
addb
ret
pop
push
aas
shlb
sbb
sti
adc
dec
aaa
cmc
cmp
in
in
adc
xor
pop
pop
jae
inc
repnz
push
imul
jbe
or
add
mov
pop
pop
sbb
movsl
push
fimuls
xor
jl
mov
add
in
sbb
fistl
in
sbb
aam
and
repz
das
sub
movsb
arpl
insb
push
loop
orb
xchg
sarb
push
sbb
data16
fdivl
insb
pop
idivb
dec
push
fisubs
cmp
scas
mov
push
movsb
rcrb
popl
mov
add
and
push
pop
sub
mov
push
inc
std
in
and
aam
ja
push
cwtl
dec
inc
in
sub
and
xor
fsubl
out
cmp
cwtl
xchg
cmp
nop
xor
jge
push
and
and
mov
test
gs
pop
jne
in
inc
icebp
test
rclb
leave
fdivl
adc
adc
fs
pop
push
inc
in
je
mov
cltd
jne
imul
inc
pop
xchg
inc
sub
mov
xor
jo
sbb
xor
sbb
dec
jp
push
lcall
inc
ror
decl
sbb
arpl
push
pushf
int3
xchg
sub
outsb
jmp
repnz
cli
mov
inc
fidivrs
jle
call
ja
ljmp
cmp
sti
jmp
out
bound
jle
test
test
push
inc
out
mov
adcb
fmuls
or
pop
mov
ljmp
xor
dec
addb
pop
imul
lock
cld
cmp
pop
sbb
mov
push
andb
push
push
sbb
insl
dec
xlat
test
mov
not
les
mov
inc
push
add
add
shlb
scas
data16
insl
dec
xlat
test
mov
jmp
mov
mov
mov
icebp
add
push
cltd
jne
outsl
mov
jo
cmp
jo
or
cmpsb
cmp
dec
xor
mov
dec
ljmp
xor
jae
inc
cmp
icebp
mov
add
mov
sti
fdivr
xchg
into
out
shrl
not
popa
or
mov
xor
lret
or
xchg
inc
cli
shl
ret
repnz
mov
jg
cmp
ljmp
jnp
hlt
popa
adc
cmp
pop
cli
cmp
and
push
sbb
out
repnz
sar
cld
inc
clc
in
js
cmp
add
push
sbb
sub
cmp
sbb
out
xchg
out
sbb
mov
jo
and
shlb
push
call
leave
and
out
adc
xor
setae
sbb
and
fcoms
xor
mov
add
fwait
sub
movsl
cmp
sub
cmp
push
mov
cmp
jle
out
aam
add
adcl
jp
pop
and
jno
ret
jne
xor
mov
out
rcr
cmp
subl
pusha
stos
fisubrl
outsl
sub
cld
repz
push
in
pop
lds
jbe
lret
push
sbb
cld
scas
xor
adc
xor
mov
popf
in
shrb
insb
push
mov
mov
xorl
mov
lea
push
dec
cmpsb
mov
mov
jecxz
mov
inc
jecxz
aad
insb
rcrb
mov
fldenv
test
pop
jb
rcl
push
out
dec
movsb
push
mov
imul
cltd
mov
or
stos
fcmovbe
les
xor
jo
shlb
hlt
lret
push
data16
cmp
pop
ljmp
push
adc
aaa
xor
xor
jmp
inc
fmull
repnz
int3
cli
cld
inc
fld
xor
jmp
popa
push
ja
or
and
pop
cmp
or
jno
out
shl
aam
dec
call
andb
inc
test
xor
shrb
or
mov
cld
repz
data16
inc
push
inc
mov
enter
pop
mov
rorb
test
test
ret
push
dec
xchg
jle
mov
test
cs
or
xchg
fadd
jno
cmp
sbb
push
cmpsl
mov
iret
pop
call
bound
pop
push
inc
dec
dec
rcll
adc
testl
push
xor
add
into
mov
xchg
pop
cld
mov
ret
push
nop
enter
cwtl
arpl
cmp
rcrb
and
insb
repnz
xor
out
int3
std
add
lds
fcmove
and
mov
sub
insb
popf
int3
jmp
cmpsl
adc
inc
ret
jns
fidivs
fimull
movsb
rorb
cwtl
jg
outsb
jmp
mov
cmpsl
aam
insb
xor
pop
xor
mov
mov
test
gs
pop
cltd
inc
insl
jmp
loop
aas
push
enter
shrd
mov
xor
lcall
je
and
mov
xchg
dec
ret
test
push
and
out
movsl
sarl
mov
test
adc
test
push
jge
adc
cltd
cmc
aad
mov
in
adc
add
stos
and
cmp
out
xor
rcrl
shrb
dec
sar
jl
mov
sub
or
insb
dec
push
xchg
sub
outsb
jmp
mov
mov
push
nop
xor
ret
xchg
stos
push
shrl
mov
add
aam
inc
jbe
adc
mov
icebp
shr
sub
cli
mov
fadd
xor
ss
adc
sub
pop
sbb
mov
push
shlb
push
push
sbb
dec
xlat
test
mov
not
les
inc
in
cld
cmpsl
jle
jl
lcall
scas
in
lock
inc
shrb
int
mov
ja
mov
mov
sub
in
fmuls
xor
insb
stos
push
sub
pop
lds
ret
sub
inc
call
es
push
push
push
mov
aam
dec
pushf
fdivs
sub
sbb
pop
sbb
cwtl
dec
aad
into
push
push
sub
out
out
dec
push
push
xor
add
sub
sub
je
cwtl
mov
mov
xchg
lret
in
jns
adc
inc
test
seta
xor
push
cmpsb
ljmp
xor
pop
ss
sbb
loope
add
repz
mov
sub
or
xchg
bound
pusha
arpl
sbb
or
mov
mov
pop
clc
push
fwait
sub
pop
cs
sub
xor
iret
cmp
xchg
cmp
loopne
rcr
sahf
out
rorb
sub
cmp
in
ljmp
sbb
xchg
stc
lods
rcr
sti
jg
data16
in
add
xadd
adc
clc
xor
mov
pop
inc
mov
push
jl
in
test
gs
push
call
cltd
jno
dec
xor
adc
xor
cwtl
add
ucomiss
jo
mov
in
mov
adc
mov
push
jns
fcom
adc
into
push
out
cmpsl
jns
fmull
clc
int3
scas
sub
in
xchg
imull
inc
int
fsubr
adc
sub
fcmove
jns
std
add
inc
and
jno
addr16
loope
aam
inc
ja
into
push
cs
outsb
xchg
in
sbbl
movsb
fwait
rorl
mov
or
hlt
movsb
and
push
push
mov
push
push
cmc
inc
mov
mov
mov
ds
push
add
lcall
mov
inc
mov
data16
mov
adc
xor
mov
dec
addb
jge
cltd
pop
dec
xor
fucom
outsb
sub
fildl
pop
sbb
mov
push
and
in
aaa
stos
jle
outsl
ja
and
mov
cltd
push
dec
sbb
push
fidivrl
repnz
scas
dec
mov
xor
push
out
xchg
nop
xlat
in
enter
xchg
scas
insb
movsb
mov
loop
cs
fistpl
xor
dec
jecxz
les
ds
mov
arpl
stos
les
repnz
inc
push
cmp
cwtl
push
and
ds
cmc
xor
fs
mov
mov
add
cwtl
cld
fistl
push
xor
adc
sbb
in
mov
jbe
add
pop
mov
inc
cmpsb
ja
pop
pop
xor
dec
addb
and
aam
cmp
adc
mov
jg
loop
jo
or
mov
adc
cmp
int3
pushf
dec
xchg
mov
push
mov
pop
mov
push
xor
and
adc
sahf
pusha
inc
in
jo
dec
cmp
daa
cmp
adc
in
dec
sbb
loop
add
mov
ds
cwtl
sbb
loop
push
or
adc
mov
inc
repz
xor
pop
cmp
stos
cmp
pop
push
mov
daa
out
pop
es
jno
sub
repz
jo
and
adc
daa
push
xor
or
in
pop
outsb
mov
mov
stc
pop
frstor
xchg
movsb
idiv
sub
test
jl
xchg
xchg
fistpl
in
mov
add
xor
in
adc
pop
xor
sbb
lock
add
stos
push
les
xor
mov
pop
push
dec
int3
pop
insb
ja
rolb
add
jge
in
push
xchg
adc
seto
xchg
out
adc
mov
sarb
jno
or
and
adcb
setae
popa
popa
cmpsl
ss
jle
mov
shll
stos
mov
push
fadds
push
adc
push
pushl
inc
es
fistpll
ret
inc
les
mov
xlat
push
movsl
aas
add
add
jle
pusha
mov
sbb
xor
outsb
sub
sbb
es
mov
xor
mov
into
jge
je
push
push
mov
icebp
popa
out
mov
xchg
mov
jge
mov
loope
xchg
into
stc
in
push
stc
mov
nop
stos
ret
xor
and
je
dec
dec
mov
icebp
dec
outsl
movsl
mov
xchg
fadd
pop
inc
pop
jl
lcall
test
sbb
lds
les
and
add
and
aas
jne
loop
addr16
and
dec
lods
jp
sbb
jne
loop
loope
jl
add
in
cmp
push
jo
xor
adc
fs
lea
fwait
mov
loopne
push
test
outsb
xor
sbb
mov
lea
clc
ds
and
inc
roll
in
es
cmpsb
inc
push
fdivrl
push
ds
movsl
mov
lret
xchg
bound
fs
mov
lret
in
push
ret
out
add
fs
ds
rcll
pop
fmuls
sub
fstps
data16
xchg
cmpsb
adc
pop
loopne
mov
aaa
add
xchg
add
inc
repz
xor
pop
cmp
jle
pop
mov
jmp
fwait
push
into
mov
sub
out
jb
out
in
adc
mov
inc
or
jmp
adc
loope
lods
cld
ror
push
lds
fdivr
xor
data16
adc
cmp
stos
mov
loope
into
sub
int3
lret
rorb
sbb
les
mov
add
adc
mov
mov
pop
fdivrp
push
sub
xchg
push
popa
scas
push
sti
and
sub
out
jns
pop
jecxz
imul
lds
out
jae
push
lock
popf
push
push
clc
mov
cli
sub
dec
mov
push
push
cmc
inc
cmp
adc
das
jb
or
push
mulb
jno
data16
repnz
adc
xor
mov
dec
addb
jmp
dec
xchg
das
test
xchg
sub
imul
cltd
mov
cmp
stos
fcmovbe
rorb
cltd
shll
sarb
imul
xchg
sti
loopne
mov
mov
adc
push
mov
ret
movsb
stos
push
ficompl
inc
pop
fs
adc
mov
cmp
lds
xor
mov
stos
les
mov
dec
cs
and
mov
into
and
in
pop
cmp
loopne
in
xchg
xchg
lods
mov
sti
fdivr
mov
cmp
in
and
in
xchg
and
pop
mov
xor
mov
cmpb
push
xor
nop
pushf
cmp
dec
sub
jge
test
stos
pop
inc
dec
fwait
aad
add
push
jb
rorb
inc
mov
jl
in
clc
jge
jnp
dec
jl
lcall
mov
fldl
and
mov
push
push
mov
sbb
cmpsb
in
mov
mov
lods
nop
mov
cmpb
push
pop
jnp
subb
hlt
jno
fidivl
cmp
orb
dec
adc
sti
or
dec
sbb
cwtl
into
jae
sahf
insb
jp
movl
lock
push
push
cmp
mov
xchg
push
fucom
shll
inc
aaa
xchg
mov
pop
push
lahf
inc
sub
lds
pusha
jge
movsl
stos
mov
sti
aas
scas
adc
filds
pop
repz
das
scas
or
jns
dec
popa
movsl
add
mov
xchg
lret
aad
mov
push
bound
das
xchg
push
sti
mov
jbe
xor
out
mov
xchg
adc
mov
cld
xchg
aad
dec
push
xchg
cmp
js
add
xor
mov
cmp
das
mov
dec
cmp
xor
lds
xor
add
add
and
mov
mov
orb
repnz
pop
sub
cmc
push
jae,pt
xchg
mov
pop
fs
es
push
into
fiaddl
in
insb
adcl
lcall
cwtl
mov
stos
xchg
cli
or
pop
fistpll
in
sbbl
cld
fisubl
clc
cli
and
sub
out
jns
pop
cmc
subl
stc
jb
les
loopne
sbb
pop
fidivrl
leave
push
lock
into
dec
mov
push
dec
pop
cli
push
das
dec
loope
or
and
cli
insb
js
xor
aaa
bnd
pop
mov
jo,pt
adc
in
cmp
adc
pop
fisubl
insb
cs
sub
sub
sbb
push
push
add
es
loop
jbe,pn
rcr
into
jge
mov
mov
cld
pop
ret
mov
inc
imul
daa
in
outsl
adc
ljmp
push
inc
push
in
cmc
mov
js
out
test
loop
fsubs
sub
xacquire
add
loop
addr16
and
sbb
dec
insb
sub
push
xor
es
xor
dec
or
mov
imul
mov
or
mov
and
mov
loopne
jge
imulb
sbb
cmp
or
arpl
clc
sub
inc
mov
popf
xor
mov
xchg
or
cmpsb
test
sbb
cwtl
cmp
sub
mov
mov
cmpsb
sub
stos
mov
sbb
subb
sbb
push
scas
cli
decl
fisubrs
inc
dec
loop
arpl
outsb
mov
cs
imul
jmp
sbb
les
mov
adc
popa
xchg
pop
out
mov
sub
inc
insb
xor
movl
dec
shr
mov
jg
lods
sbb
jnp
inc
mov
daa
adc
test
cmc
fists
mov
mov
pushf
dec
sbb
fdivr
cmp
jno
in
push
inc
mov
dec
or
cmp
pop
inc
mov
movsl
xchg
dec
pop
ja
push
repnz
ret
pop
out
push
in
stos
xchg
filds
mov
es
adc
push
aaa
mov
daa
movb
sub
cli
jmp
adc
test
jg
sbb
mov
sbb
stc
pop
fucomip
push
pop
je
mov
cmp
adc
outsl
movsb
add
cwtl
jno
sub
push
jo
push
cli
popa
addr16
adc
xor
mov
out
fsubs
addb
cmpsb
arpl
hlt
mov
lea
mov
cmpsl
mov
rcll
or
out
pop
mov
jae
test
cmpsb
sarl
lcall
add
cltd
in
and
cmp
cmp
push
mov
mov
seto
cmpsb
ret
aam
jle
into
pop
adc
inc
pushf
cld
cld
out
or
lds
lret
in
rcrb
test
add
decb
into
push
popl
test
fcom
push
jmp
mov
in
in
mov
test
push
aas
addb
cwtl
or
pushf
fsubr
cli
in
mov
jno
dec
xor
mov
aad
mov
or
cmpsb
mov
push
mov
aas
xor
incb
mov
lds
fsub
test
sahf
add
out
push
repnz
lcall
aam
ljmp
xchg
negl
sub
pop
iret
cwtl
jl
mov
movsl
aas
cmp
cmp
pop
mov
dec
sbb
xorb
and
sub
mov
outsl
push
push
es
push
mov
rolb
aaa
mov
push
mov
sub
or
xchg
stc
lods
shrb
stc
and
addr16
adc
xor
and
loopne
aas
fwait
sbb
jo
js
test
addr16
aas
call
fnstenv
wrmsr
jnp
xchg
dec
call
ficompl
mov
push
jo
adc
outsl
xor
je
adc
push
loopne
jno
xor
inc
add
sbb
jg
fistpll
cmpsl
mov
fcmove
add
lret
jo
out
cmp
add
je
push
data16
scas
add
adc
mov
das
push
das
xchg
jb
mov
jbe
call
or
pop
fisttps
xor
mov
push
adcl
jnp
ds
ds
sub
dec
inc
in
pop
push
pushf
fadds
adc
test
mov
sbb
dec
daa
push
stos
mov
cltd
pop
dec
xor
fucom
outsb
mov
fistl
mov
add
sbbb
xorl
daa
adc
test
inc
outsl
inc
pop
bound
loope
mov
rcrl
xchg
ds
and
sub
loope
sbb
lret
inc
pop
bound
cld
repz
test
icebp
out
les
call
mov
fs
dec
movsb
sbb
pop
ret
rcrl
cmp
mov
fidivrl
fdivrs
aaa
sbb
inc
in
pop
repz
cmp
imul
dec
dec
out
dec
mov
jbe
add
or
dec
adc
sar
aas
setbe
pop
mov
inc
xor
jl
inc
fidivrs
jnp
dec
jl
push
test
mov
fldl
and
mov
push
push
mov
sbb
cmpsb
in
adc
shr
or
mov
cmpb
push
pop
jnp
orb
fsubrl
pusha
pop
cmc
push
orb
out
sar
jno
jmp
push
loopne
push
sub
sub
pop
pop
xchg
push
outsb
pop
sbb
cmp
pop
lods
stos
std
sahf
dec
or
adc
adc
and
fstl
add
xchg
lock
cmp
sbb
frstor
inc
adc
adc
jle
mov
add
in
cltd
add
aaa
add
in
aas
fimull
adc
jnp
mov
lock
clc
cmp
insl
call
pop
or
jae
sub
out
mov
repz
mov
push
cltd
scas
sar
add
jmp
je
cmpsb
xchg
ficompl
js
push
inc
jp
xor
fnstsw
mov
push
dec
outsl
gs
test
sbb
jp
xor
popa
mov
and
or
roll
in
cmc
dec
sbbb
dec
daa
push
stos
mov
xor
sub
adc
mov
push
gs
cmpl
push
out
push
xchg
or
cld
xchg
sub
outsb
jmp
mov
fmuls
clc
pop
jno
push
into
sbb
mov
jbe
fadds
jb
mov
push
dec
xchg
inc
inc
pushf
roll
inc
sub
fiaddl
pop
mov
pop
dec
lods
mov
mov
push
ja
test
push
outsl
xchg
out
jp
xchg
push
cmpsl
mov
mov
jecxz
or
jle
mov
push
lcall
arpl
pop
jo
popa
or
dec
adc
push
pushl
inc
mov
inc
les
dec
clc
in
mov
xlat
pop
pop
test
cld
movsl
aas
xor
iret
inc
imul
or
int
lret
jp
cmp
xor
jo
data16
rol
pop
mov
movsl
aas
aam
push
aas
xor
int3
sub
mov
aaa
outsb
mov
sub
call
adc
ljmp
iret
mov
out
dec
or
repnz
inc
dec
cmp
sbb
stc
xor
clc
scas
mov
push
pop
pop
mov
mov
jbe
add
or
cwtl
in
or
out
outsb
jmp
mov
mov
mov
xchg
ss
ret
dec
mov
fdivrs
js
inc
sar
repnz
push
imulb
daa
mov
clc
push
lock
jo
push
aaa
mov
sbb
sub
enter
add
mov
ja
repnz
jo
adc
or
cmp
sarb
movsb
push
mov
leave
or
nop
pop
adc
lea
push
jmp
push
dec
int3
pop
or
jb
dec
adc
push
pushl
ret
mov
ret
cltd
jne
aas
aam
data16
push
out
nop
jo
out
push
fmuls
or
sbbl
in
lds
je
int
sbb
push
in
cmpsl
mov
inc
in
movsl
mov
outsb
add
jae
mov
pop
aad
dec
sub
mov
pop
push
dec
int3
inc
cmpsl
mov
adc
sub
push
jae
and
test
mov
aaa
cmpsb
pusha
rcll
and
pop
ja
pusha
call
and
loopne
xchg
add
jle
mov
xchg
fidivrl
cmp
xchg
mov
adc
sub
fsub
sub
adc
xor
pop
loope
xchg
into
popf
in
mov
sbb
ljmp
into
clc
int3
or
test
push
jbe
push
in
movsb
push
cs
inc
ret
test
mov
gs
xchg
pop
cli
cwtl
clc
sarl
jb
stos
jbe
in
andl
mov
xchg
adc
inc
jae
cmp
or
mov
fs
mov
add
call
push
inc
rorl
fadd
dec
dec
push
inc
push
aaa
into
dec
mov
adc
push
ljmp
popa
out
stos
fcomi
data16
cmp
inc
cmpsb
xchg
dec
shlb
sub
cmp
in
enter
fsubl
lock
js
pop
mov
xor
adc
sbbb
sub
sub
mov
in
or
inc
dec
in
xchg
sub
push
inc
sub
pushf
rcr
push
xor
sub
enter
sti
jae,pn
dec
mov
xor
rorl
sub
in
sbb
icebp
pusha
data16
inc
cmove
repnz
lea
push
and
test
in
enter
fcmovne
and
inc
pushf
push
dec
in
pop
fwait
push
mov
sbb
das
sub
dec
adc
cmp
jae
sahf
insl
fisubl
jo
push
les
shlb
push
jae
sahf
sub
lods
inc
movsb
test
out
rorb
inc
lods
sub
popa
xchg
clc
std
cmc
xchg
fsts
dec
push
and
repz
mov
xchg
lret
jno
lds
sub
ret
fiaddl
sbb
shlb
or
sub
mov
sahf
cmp
jg
shlb
aaa
push
fsubrs
es
stos
xchg
dec
gs
push
and
push
adc
mov
mov
test
adc
hlt
std
and
jb
loope
and
jg
mov
pop
jno
gs
jecxz
cli
es
scas
in
ret
mov
pusha
xor
pop
orl
popf
roll
dec
insb
test
lock
mov
dec
loope
mov
nop
jp
push
popa
mov
imul
lock
shrb
mov
in
mov
cmp
inc
jo
jle
xor
mov
push
jno
push
lods
int
call
sub
or
test
dec
ficoml
mov
cwtl
rcrl
cwtl
roll
and
in
icebp
loopne
in
and
jle
xchg
scas
insb
movsb
mov
add
es
push
hlt
sub
insb
fmul
jge
outsb
pop
adc
mov
icebp
popa
out
stos
fcomi
data16
jne
shrb
inc
ret
test
mov
jae
xchg
pop
cli
cwtl
int3
sarb
dec
cltd
stos
jbe
lret
dec
mov
push
test
rclb
push
loopne
xor
pop
ds
cld
cmp
lcall
lahf
cwtl
dec
and
ds
cmc
xor
xor
xor
and
dec
mov
call
mov
repz
sub
jbe
sub
or
inc
sub
loopne
cmc
movsl
cmpsb
inc
pop
xchg
pop
insl
jb
aas
jb
mov
fdivs
inc
int3
shr
push
dec
int
fmuls
ljmp
cwtl
lds
popa
mov
out
push
sub
pushf
cwtl
or
cmp
mov
call
xor
cmp
aas
add
xor
sbb
sar
fwait
inc
fwait
movsl
pop
sbb
xor
dec
aam
loop
rorb
das
xor
push
mov
inc
jno
push
sbb
popf
fisubl
mov
stos
frstor
dec
adc
adc
and
mov
add
in
cltd
add
aaa
add
shr
shrb
lahf
cltd
dec
cmp
adc
addl
cmp
insl
call
pop
or
push
and
call
std
popa
and
insb
or
cwtl
jle
xchg
scas
loopne
subl
loopne
mov
xchg
rcrb
fwait
inc
sub
out
in
cmp
push
out
pop
sub
mov
xor
jns
fcmovne
cltd
ljmp
sub
mov
orb
repnz
and
les
ficomps
dec
sbb
fdivr
repnz
add
cltd
test
mov
xor
sub
in
dec
das
xchg
sub
cmp
outsl
in
in
push
out
in
pop
jo
ret
push
loope
mov
cs
les
xor
sbb
jo
or
adc
insl
movsb
sub
mov
les
fildll
adc
xor
and
add
sub
mov
mov
pop
sbb
add
mov
hlt
cmpsb
push
orb
jle
divl
cmp
loope
pop
dec
stc
in
cmp
jle
das
dec
and
mov
and
sub
xchg
scas
and
push
daa
adc
test
inc
xchg
sahf
pop
bound
sub
mov
repnz
dec
inc
sub
mov
sub
ja
in
cmp
adc
pop
fildll
mov
add
pusha
pushf
xor
dec
fldenv
mov
sub
pop
stc
pop
je
lret
movsb
mov
pop
loop
sarb
and
repz
shr
insb
cmp
mov
rclb
roll
cmpsb
in
test
pushf
jne
mov
movsb
gs
insb
jmp
sub
fwait
push
insb
pop
fisttpl
fistl
xchg
inc
or
leave
sahf
or
jmp
mov
in
mov
xchg
bound
jle
fstl
cmp
int3
lret
mov
mov
cmp
pop
pusha
nop
mov
push
call
xchg
add
pop
in
sbb
insb
sub
cwtl
lea
into
mov
sub
xchg
decb
adc
fstps
and
mov
push
push
sub
mov
mov
sbb
adc
dec
mov
es
mov
in
repnz
mov
xchg
adc
push
cmc
pop
subb
pop
stc
mov
and
out
imul
cltd
dec
push
adcl
ror
scas
addr16
in
inc
in
pop
ss
push
mov
add
shlb
mov
inc
rolb
fistl
test
adc
imull
int3
fwait
mov
aas
push
adc
jbe
aas
lret
cwtl
call
mov
mov
insl
cwtl
or
sar
mov
mov
ficoml
or
pop
fildll
sbbl
cli
dec
hlt
dec
mov
inc
dec
mov
jge
add
ds
loope
and
jle
loop
arpl
int3
cld
repz
daa
inc
inc
inc
loope
aam
aas
repz
inc
pop
jne
je,pn
xor
call
lods
in
sub
mov
rol
pop
sbb
push
imul
into
jle
test
in
and
int
jmp
sub
push
mov
dec
incb
nop
setp
inc
outsl
jae
inc
xchg
ret
mov
xor
cmpsl
mov
mov
jecxz
or
pop
out
mov
cmpl
imul
inc
mov
jge
insb
sbb
dec
jg
cmc
pop
jg
andb
in
xor
pop
dec
xlat
jmp
xor
mov
fwait
cmova
mov
adc
push
shlb
test
inc
sub
push
sub
mov
nop
enter
xor
dec
cmp
mov
cmp
jno
or
jae
pop
push
aas
insl
ja
xor
icebp
adc
push
outsb
or
cmp
cmp
mov
push
sbb
outsl
mov
or
cwtl
cmp
mov
cmp
mov
cmp
sbb
dec
xor
dec
add
push
mov
ret
mov
dec
mov
cld
ljmp
sahf
lcall
inc
mov
jp
adc
sub
dec
cld
outsl
push
es
push
mov
rolb
aaa
mov
xchg
mov
sub
or
xchg
cld
cmpsb
mov
inc
sub
ret
pusha
jge
movsl
stos
mov
cld
aas
scas
lds
push
insb
fs
insb
or
adcl
loope
xchg
jnp
inc
inc
xlat
cld
dec
stos
push
cld
dec
imull
push
dec
jb
dec
hlt
cmpsb
jecxz
mov
sbb
clc
dec
xor
cmpsl
es
es
test
fwait
pop
fsts
mov
mov
mov
mov
mov
xchg
sbb
test
fmull
or
mov
cld
cmp
insl
call
or
stc
jmp
jb
popa
stos
mov
sub
pop
pop
sbb
xor
or
bound
jmp
sarl
and
cs
mov
loope
daa
adc
push
je
shr
or
mov
cmp
arpl
adc
outsl
movsb
add
cwtl
fwait
cmp
in
push
jo
popa
and
insb
or
cwtl
mov
mov
imul
and
cld
xchg
sub
outsb
mov
scas
call
daa
ja
or
test
dec
je
mov
cwtl
pop
jne
and
sub
inc
lods
daa
loopne
mulb
pop
repz
das
dec
loope
or
lds
in
cmpsl
test
xchg
loop
aaa
push
test
stos
ret
xor
sarb
and
or
sbb
pop
mov
add
and
sti
loope
dec
mov
pusha
xchg
adc
xorl
repz
sahf
jmp
cmpsl
lods
daa
xchg
in
test
sti
pop
or
push
ror
cmp
pushf
insb
dec
mov
cwtl
movsl
sbb
inc
adc
daa
insb
xchg
xor
sbbl
cmpsb
mov
lahf
outsb
in
lea
imul
pop
ja
or
cwtl
dec
cld
aas
xchg
xor
iret
std
test
je
test
pushf
sbb
xor
mov
cwtl
mov
sub
jae
cmp
push
sub
xor
jb
call
loop
inc
push
mov
fsubrl
push
jb
int
mov
nop
ret
fs
jne
jmp
jno
repz
or
stc
mov
fmull
jo
dec
lods
inc
movsb
test
out
rclb
cmp
sub
popa
mov
int3
daa
pop
repnz
in
repz
mov
mov
lret
jno
lds
sub
aad
mov
int
cwtl
out
or
or
mov
jae
sahf
cmp
jg
shlb
lret
cs
stos
xchg
dec
xor
lods
adc
lds
pop
leave
int3
jo
mov
test
out
jo
xchg
or
inc
inc
lods
outsl
push
ljmp
icebp
cs
in
adc
outsl
andl
pushf
int
hlt
out
jae
and
add
xchg
xor
aas
push
cmp
stc
mov
and
add
push
icebp
dec
ret
test
mov
push
jae
je
incb
inc
sbb
test
fsubl
leave
pop
fs
xor
decl
jle
pop
mov
fistps
xchg
outsb
cmpsl
mov
jg
cwtl
test
sbb
cmp
enter
mov
jle
loopne
loope
stc
test
out
jp
cmpsb
out
dec
jo
repnz
and
insb
or
cwtl
arpl
subl
and
aas
repnz
fcomip
fistl
mov
repnz
dec
int3
lret
and
inc
sbb
ds
and
ret
adc
cmpsl
mov
xor
mov
adc
cwtl
push
shl
fs
pop
push
or
push
repnz
cli
pop
sbb
sub
leave
sbb
cld
outsb
out
adc
stos
lods
negl
int3
cmp
les
clc
mov
cwtl
or
mov
rcrb
inc
pop
mov
inc
aad
inc
gs
lods
add
mov
lea
addb
dec
xor
cmp
stos
cltd
cmp
imul
dec
loopne
push
sub
mov
and
jae
cmp
sub
sbb
fcoml
repnz
fdivl
mov
dec
push
int3
and
sbb
mov
inc
movsb
rcrb
popl
mov
add
and
push
pop
sub
mov
mov
jge
lahf
and
push
jae
jb
out
repnz
xadd
adc
repnz
or
frstor
ret
repnz
mov
es
sub
sub
mov
inc
sbb
mov
pop
dec
sbb
cmp
adcl
cmp
mov
pop
jecxz
ja
sahf
test
nop
sbb
inc
and
out
movsl
sarl
mov
test
adc
hlt
iret
and
jb
loope
and
out
add
ja
call
and
loopne
test
xor
push
inc
jg
sbb
mov
out
dec
mov
mov
mov
pop
outsb
mov
lock
mov
sbb
dec
daa
push
stos
mov
push
rorb
jae
push
das
inc
stos
int
push
sub
mov
mov
rcrl
inc
cmc
shlb
cmpsb
push
orb
jle
jns
nop
cmp
loope
lock
stc
neg
mov
jle
das
les
data16
in
enter
sarb
push
adc
and
cld
xchg
sub
outsb
mov
sbb
or
xor
stos
fidivl
or
cmp
inc
frstor
adc
in
stc
bound
adc
pop
sbbl
out
icebp
jae
and
fs
lcall
cmp
mov
insl
rorb
imul
mov
and
xor
jl
or
or
hlt
repz
shr
in
cmp
aas
jle
push
nop
outsl
mov
jbe
ss
pop
jle
and
mov
pop
pop
adc
dec
and
cmc
leave
repz
cmp
movsb
loope
pop
iret
fildl
sar
loopne
mov
and
adc
inc
mov
es
les
lcall
insb
popf
in
pop
hlt
mov
fdivr
dec
push
pop
stos
push
jb
rolb
mov
and
mov
out
iretw
xchg
jl
dec
push
push
loop
dec
and
fstps
adc
pop
pusha
iret
mov
add
xchg
andb
and
aam
ja
push
jmp
leave
or
imulb
mov
iret
jmp
xchg
fimull
push
push
dec
mov
mov
jmp
out
or
pop
xchg
in
and
and
mov
pop
sub
push
fisttpll
nop
cmp
xlat
lea
cmpsb
xchg
sub
js
sub
sub
aaa
ficoml
dec
inc
sub
cmp
and
jb
loope
and
jo
lret
push
or
stc
push
adc
push
test
dec
inc
push
adcl
shl
xchg
stc
jecxz
out
dec
mov
fsub
inc
jae
ljmp
roll
dec
lods
test
lock
jl
or
dec
loope
mov
repnz
dec
dec
dec
jle
cwtl
mov
les
add
jp
cltd
adc
aaa
loope
or
jno
push
xchg
mov
cmpsb
mov
adcl
inc
fdivr
cmp
pop
sbb
mov
push
loopne
sub
xor
xchg
aaa
jle
dec
adc
cmp
aam
mov
std
clc
into
out
pop
jne
ds
int3
imul
shlb
dec
mov
or
out
iret
dec
insb
jmp
test
stos
aas
fidivrl
inc
pop
jne
cs
aaa
mov
mov
in
outsl
sete
out
lcall
and
push
mov
call
popa
cmp
push
xor
sub
hlt
xor
lret
mov
cmpsl
mov
or
or
mov
jp
cmp
adc
dec
les
jle
xchg
dec
in
out
xor
xchg
clc
pusha
mov
test
and
jge
inc
pop
jbe
add
cmp
pushf
xor
mov
leave
inc
mov
xor
je
and
push
mov
rol
pop
rdpmc
add
fs
push
adc
pop
push
data16
into
mov
scas
mov
cmp
js
ljmp
repnz
cmc
jo
jno
mov
and
idivb
mov
mov
sbb
repnz
xor
push
xchg
mov
frstor
push
pushf
mov
jmp
adc
sysexit
inc
icebp
fisubs
adc
cmpsb
out
mull
lods
or
aam
add
into
mov
test
xor
push
pop
mov
aaa
inc
xchg
lock
sub
je
ja
ljmp
push
insb
call
inc
mov
mov
dec
pcmpgtb
add
mov
xor
nop
xchg
pop
popf
and
shrb
stos
jecxz
stc
sahf
xchg
sub
or
xor
and
daa
adc
test
int3
imul
mov
adc
and
mov
mov
loopne
push
mov
ret
cwtl
mov
add
xor
push
lock
loope
xchg
sub
aam
into
call
stos
aas
push
ljmp
or
cmp
push
push
push
lock
das
dec
loope
or
imul
xchg
pop
lock
push
test
ret
xor
xchg
pop
je
dec
lods
mov
mov
jo
les
push
ror
mov
test
xor
cmpsl
mov
mov
jecxz
or
cmpsl
mov
jle
in
daa
arpl
pop
jo
popa
or
icebp
push
add
adc
aaa
inc
arpl
les
clc
jecxz
mov
xlat
in
pop
in
cld
movsl
aas
xor
iret
inc
imul
or
mov
jecxz
or
mov
hlt
ds
call
mov
pop
and
jge
add
int
pushf
into
xchg
in
clc
sbbl
jnp
hlt
popa
adc
xor
insb
mov
fs
push
lock
mov
adc
std
or
mov
ljmpw
xchg
imul
fsubrl
idivl
push
fstl
mov
inc
jo
scas
fsubl
xchg
mov
adc
add
push
pop
sbb
add
mov
jb
pop
idivl
cs
test
push
sub
call
mov
pop
pop
mov
cmp
out
mov
pop
leave
and
pop
pop
mov
aas
or
xchg
adc
sbb
insb
mov
mov
xchg
scas
fdivr
icebp
dec
mov
and
inc
mov
negl
and
xlat
pop
inc
popa
movsl
add
mov
xchg
lret
in
push
or
bound
das
xchg
div
mov
jbe
sub
push
out
mov
je
inc
mov
je
xchg
or
test
jl
ret
stos
fstp
pop
add
imul
add
jg
pop
pop
std
and
lcall
in
mov
fs
cld
pop
bound
out
and
daa
adc
test
int3
and
fstpl
xor
sahf
push
jae
and
addr16
mov
aaa
xchg
push
push
or
iret
fstl
or
roll
bound
lea
mov
into
clc
int3
pop
push
test
push
jbe
push
in
pop
push
fstpl
inc
pop
fs
adc
or
cmp
leave
sbb
iret
cmpsb
jecxz
les
ds
rcl
scas
shrb
ret
xchg
stos
xorb
test
pop
jb
dec
mov
std
mov
xchg
fidivrl
mov
imul
shlb
dec
mov
or
out
leave
dec
insb
jmp
test
stos
aas
jl
inc
pop
jne
cs
leave
aaa
mov
mov
sub
dec
in
sub
setp
inc
insb
jb
jb
stos
jle
and
push
mov
cld
cmp
mov
mov
pop
fcoms
je
push
jp
fisttps
jmp
push
mov
lea
push
bound
pop
out
sub
test
out
push
and
out
sub
xor
cwtl
inc
mov
cmpb
sub
xor
aam
cmp
ljmp
jns
push
pop
nop
lret
push
int3
cwtl
cmp
mov
out
cmp
cmp
inc
push
mov
and
push
ret
mov
cwtl
inc
mov
xor
pop
dec
divl
and
loop
je
dec
mov
xor
fsubs
sub
dec
lar
push
sbb
orb
cmp
fnstsw
in
or
mov
mov
imul
inc
push
gs
insl
push
leave
jmp
lods
imul
pop
jp
pop
fs
es
dec
xlat
pop
inc
popa
movsl
add
mov
xchg
lret
pop
push
xor
pop
enter
cltd
jne
aas
push
outsl
mov
xor
push
rorl
dec
test
jl
ret
stos
fstp
pop
notl
psllw
shr
jl
sub
into
jp
sbb
pop
jmp
xlat
jecxz
push
adc
sub
cld
xor
std
gs
jb
and
addr16
dec
loope
mov
scas
mov
adc
and
push
jae
and
lcall
push
je
out
rcll
and
pop
ja
pusha
call
and
loopne
xchg
add
jle
mov
xchg
fidivrl
cs
mov
sub
mov
adc
cmp
push
push
fs
imulb
das
dec
loope
or
addl
in
cmpsl
test
xchg
lcall
ret
xor
pop
inc
add
mov
mov
jbe
shlb
jl
shll
in
movsb
jecxz
jno
pop
add
mov
ret
push
cmp
lcall
mov
mov
pusha
lret
push
out
push
xchg
pop
outsl
pop
pop
and
xchg
sub
outsb
mov
sbb
imulb
into
clc
lret
stos
sub
dec
in
sub
setp
inc
arpl
jb
pop
jle
gs
int3
push
dec
push
add
mov
lods
in
aad
insb
adc
pusha
adc
sub
in
aam
rorl
rorl
sarb
sbb
jo
shrb
dec
jns
outsl
and
adc
inc
push
gs
lret
in
fcoml
dec
idivb
das
js
sarb
sbb
pop
xchg
and
aas
cld
mov
xchg
xor
jns
movsb
jae
inc
pop
enter
les
clc
mov
cwtl
nop
add
in
add
stos
jg
mov
pop
xchg
sub
push
cmp
repnz
enter
sbbl
jo
dec
ljmp
add
lret
loopne
jge
adc
or
push
xchg
dec
push
push
cmove
repnz
dec
imul
inc
mov
dec
lret
dec
and
pop
sbb
xchg
push
inc
fwait
sub
aas
push
idivb
mov
and
out
add
lcall
inc
mov
and
dec
in
inc
aad
sub
push
in
mov
lods
add
loopne
mov
faddl
sar
push
rcrb
add
add
adc
mov
add
stc
push
and
lcall
mov
fs
inc
mov
push
push
hlt
xor
sub
add
pop
ljmp
dec
cmp
mov
add
in
repz
xchg
mov
adc
cmc
fiadds
xchg
xchg
jbe
inc
lret
push
je
fwait
push
lret
cmpsl
mov
adc
cmc
es
in
and
cmpsb
negb
dec
ds
sahf
rcr
mov
cltd
cmp
cmc
insb
jmp
test
inc
jle
adc
in
push
jo
lret
and
insb
or
cwtl
jno
jnp
int3
mov
jo
shrb
out
adc
jno
lds
sub
cmp
inc
test
dec
mov
cwtl
fsubs
loop
stos
les
rcrb
cs
pop
test
aam
mov
insb
test
into
lods
imul
adc
mov
sbb
lcall
mov
sbb
jno
data16
cltd
adc
loope
mov
addb
and
cltd
pop
dec
xor
fstpl
add
jae
xchg
sahf
cmp
mov
cmp
mov
xchg
mov
shll
into
jmp
cwtl
aaa
into
dec
mov
adc
pushf
ljmp
nop
aaa
into
dec
mov
imul
sti
pop
inc
xchg
xlat
or
sub
into
fbld
push
cmp
mov
mov
mov
mov
xchg
imul
or
sub
add
pop
test
push
dec
insl
pop
jle
inc
pop
inc
fdivrs
ds
xorl
pop
push
adc
je
int3
push
repz
sbb
jmp
jmp
shll
mov
testl
dec
sub
jmp
cmc
jno
addr16
jecxz
std
cmp
jp
jae
and
add
pop
push
sbb
rclb
in
cmp
mov
xor
ljmp
adc
int3
lret
mov
sub
in
pop
clc
lods
push
clc
sbb
movsb
fstpt
lods
jl
inc
jno
xchg
adc
lret
call
push
sbb
and
cli
xor
call
inc
sbb
shll
in
pop
xor
jae
negb
call
push
or
iret
dec
add
aaa
rcrb
push
push
vorps
cmc
testl
adc
or
add
mov
imul
lret
cmc
movsl
cmpsb
dec
push
orb
pop
push
or
cmpsl
test
xchg
es
aaa
jmp
sbb
and
std
ds
jmp
dec
mov
pop
pop
cmpsb
cmp
fidivs
push
mov
push
aas
inc
aas
mov
jbe
gs
add
hlt
repz
mov
leave
mov
xor
inc
and
jno
addr16
loope
aam
inc
jne
into
jmp
sar
outsb
ret
or
lea
and
outsb
js
jae
orl
pop
popa
popa
outsl
movsb
add
cwtl
fwait
cmp
hlt
popa
aaa
cli
jle
pop
xorl
sub
mov
ss
sub
or
add
inc
inc
inc
loope
aam
aas
xchg
adc
cs
lret
xchg
xchg
jle
into
push
les
insb
xchg
mov
adc
rclb
sahf
sub
pop
gs
push
inc
aad
and
fistl
sub
cs
hlt
adc
orb
repz
adc
push
mov
jmp
dec
inc
add
jle
adc
mov
pop
push
inc
aad
and
fisttpl
sub
pop
inc
and
stos
xor
jle
push
sbb
hlt
pop
mov
hlt
dec
jmp
xor
lock
insb
hlt
movsb
mov
pop
xor
dec
stc
in
cmpl
pop
movsl
ret
cmp
cwtl
rcrl
and
test
pop
inc
mov
sub
pushf
dec
out
mov
cmpsb
cld
cwtl
imul
pushf
nop
or
mov
and
inc
sub
pop
cs
mov
xor
mov
xchg
cld
xchg
ss
lds
mov
add
jne
mov
dec
outsl
mov
jbe
fcom
inc
pop
cwtl
mov
pop
jb
insb
cmp
mov
mov
mov
cwtl
mov
sbb
ds
inc
and
sub
lcall
inc
loopne
xchg
xor
sbb
fisubl
les
mov
push
add
popa
xchg
outsb
out
sub
inc
jo
lods
cmpsb
fadds
cld
inc
inc
addb
repnz
cwtl
lret
xchg
hlt
inc
stos
fdivr
cmp
sbb
in
adc
or
out
push
jae
mov
push
cmp
sub
out
in
ja
ljmp
data16
mov
loop
ss
adc
gs
ss
sub
mov
sub
out
jl
pop
mov
add
inc
mov
xchg
jp
rcrb
adc
mov
xlat
fmuls
cs
mov
iret
pop
jo
push
ror
and
sub
out
jns
pop
push
ds
lret
mov
pusha
xor
pop
addl
roll
dec
sub
and
add
cmpsb
arpl
hlt
mov
lcall
pop
mov
jle
daa
loopne
sbb
and
adc
jge
push
loopne
jecxz
je
jle
and
add
dec
or
lret
adc
fsub
into
and
jae
mov
cld
stos
ffree
in
push
aam
into
clc
push
jbe
push
push
sbb
or
push
loop
in
cmpsl
test
xchg
xchg
lret
aaa
push
test
and
dec
dec
mov
mov
sub
icebp
adc
sbb
mov
out
rclb
jne
push
hlt
arpl
hlt
cmp
hlt
and
pop
mov
arpl
pusha
adc
and
or
int3
popf
push
lea
xchg
repnz
mov
inc
adc
into
sbb
jae
mov
nop
clc
ss
mov
adc
xchg
jae
xchg
pop
or
ss
pop
pusha
imulb
cmpsb
pushf
pop
repz
mov
lcall
rorl
jge
lret
scas
pop
pop
imul
cwtl
xor
call
frstor
scas
lds
inc
or
and
mov
dec
jnp
popf
stos
cmp
cli
pop
out
add
push
sbbl
mov
cld
repnz
or
mov
sahf
pop
pop
fs
lahf
imul
inc
pop
sbb
cmp
push
push
push
test
pop
cmp
pop
push
push
adc
mov
pop
push
lds
push
test
in
out
xchg
sbb
hlt
adc
insb
xor
repz
jmp
sub
aas
jae
shll
pop
lret
pop
cmp
call
mov
add
jl
jecxz
cmpsl
mov
add
sahf
adc
inc
inc
lret
pusha
insl
mov
sbb
jnp
notb
aaa
jp
es
fsubs
stc
pop
js
inc
aam
mov
clc
jno
or
mov
add
jb
mov
mov
xchg
sub
outsb
adc
cmpsb
sahf
mov
cli
add
ret
xchg
movb
mov
jle
ds
out
mov
lock
add
push
ljmp
inc
cwtl
in
mov
test
jmp
sbb
in
bound
sub
adc
test
test
pop
repz
je
aas
into
roll
pusha
sbb
jl
in
cli
mov
mov
hlt
pop
or
cli
ss
adc
sar
out
mov
movsb
mov
add
pop
mov
sahf
cmpsl
mov
es
mov
rcrl
fwait
cwtl
rolb
cmpsb
arpl
hlt
mov
lea
jge
push
ljmp
cltd
loopne
and
out
push
mov
adc
and
sub
nop
push
fwait
loopne
push
xchg
add
stos
ret
xor
xor
dec
mov
in
jle
and
sub
repnz
adc
xorb
or
or
or
adc
or
dec
pop
xchg
mov
pop
adc
imul
adc
pop
std
mov
clc
fmul
test
dec
and
xchg
in
pop
mov
call
add
les
sbb
shll
dec
fcompl
jo
out
xchg
cli
or
and
push
adc
outsl
movsb
add
cwtl
pop
cmp
push
jo
loop
popa
and
insb
or
aad
jle
or
add
push
shr
push
lret
clc
push
popa
or
mov
int
fidivrs
repnz
outsl
in
push
pop
adc
roll
repnz
push
or
das
xchg
lcall
jbe
pop
jge
adcb
bound
jmp
aam
pushf
bound
rcll
mov
add
push
xchg
xchg
push
push
cwtl
add
into
sub
rcll
mov
push
mov
test
ss
adc
fisttpll
in
int3
push
jp
pop
xchg
sub
outsb
jmp
repnz
xchg
pop
imul
cmpsb
lret
outsb
mov
jnp
scas
push
out
mov
and
fsubr
mov
pusha
cltd
bound
jp
push
mov
mov
in
push
jo
push
lret
pop
jle
pop
test
cmp
shll
stos
mov
ret
jl
xorb
test
pop
jb
dec
mov
push
sub
std
mov
mov
cmpsl
pushw
mov
dec
popa
stos
mov
adc
into
push
dec
mov
daa
push
sbb
cli
imul
adc
arpl
inc
loopne
inc
jo
sbb
and
dec
pslld
int3
loope
mov
sub
fstl
sub
xchg
dec
nop
mov
faddl
mov
mov
mov
pop
xchg
or
push
sub
ljmp
jp
ret
mov
call
sbb
push
xor
xor
pop
loope
xchg
xorb
mov
popf
dec
fsubs
bound
imul
add
into
push
fdivs
sbb
or
jmp
push
cmp
sub
lods
mov
jmp
dec
setne
dec
sbb
mov
cmpsb
jle
loope
das
test
hlt
cmp
es
sbb
pop
lahf
dec
sahf
scas
sahf
mov
cmp
dec
mov
lock
add
stos
sbb
or
out
sub
rcrb
dec
int3
mov
bound
divl
loopne
sbb
pop
mov
mov
in
mov
sbb
out
in
pop
cs
pop
loop
in
sbb
loope
xor
pop
andb
je
leave
mov
inc
shrb
mov
in
mov
pusha
push
inc
jo
fsubp
inc
cmp
dec
addb
and
cltd
pop
dec
xor
pop
mov
inc
jae
xchg
fbld
popa
cli
mov
je
pop
into
jge
cmp
mov
add
mov
call
sbb
test
dec
addl
loope
and
adc
aaa
mov
stos
lock
push
jno
push
popl
les
push
test
dec
icebp
fwait
mov
cwtl
sar
push
cwtl
or
pop
sub
jle
dec
out
mov
xorb
cmp
scas
scas
jle
out
adc
and
stos
jl
clc
sbb
and
popw
call
cltd
jno
dec
xor
jp
pop
mov
mov
insb
test
dec
or
loopne
loopne
pop
pop
in
mov
pop
jae
pop
sahf
shlb
in
dec
rol
add
inc
push
in
popa
jl
adc
outsl
movsb
add
int
popa
mov
imul
sbb
stos
lcall
mov
test
cld
repz
cmpsl
sbb
into
push
outsb
and
mov
das
mov
inc
call
sarl
pop
in
sub
imul
add
loopne
fistps
xor
je
add
xlat
mov
mov
rcl
xchg
shrl
jmp
pop
aas
in
cld
add
data16
cmp
xor
push
ja
mov
mov
sub
pop
ds
cmp
add
outsb
pop
pop
push
enter
in
mov
inc
shr
arpl
arpl
hlt
aas
enter
imul
dec
add
pop
divb
fmuls
mov
pop
repnz
jb
push
jae
and
mov
daa
dec
dec
inc
inc
ss
adc
inc
out
in
sbb
xor
push
subb
push
inc
inc
imulb
in
adc
aas
inc
ret
inc
bound
enter
std
sbb
out
pop
fildl
shr
push
lret
clc
incl
sbb
daa
xchg
insb
mov
ja
push
xlat
int3
dec
dec
out
or
cmp
cmp
inc
leave
add
cmp
xchg
je
pop
xor
call
push
das
stc
jl
sti
sarb
sarb
pusha
cmpsl
cld
sub
shrb
adc
cmc
sarb
or
imul
add
jno
push
outsl
push
mov
dec
xor
cmp
push
and
js
outsb
int3
das
out
xor
xor
push
loope
mov
inc
xor
and
adc
or
das
mov
pusha
push
dec
cmpsl
mov
les
push
dec
lock
xor
and
xchg
dec
push
fmuls
cmp
inc
mov
ljmp
push
shlb
push
or
imul
outsl
xchg
mov
inc
loopne
movsb
mov
shrl
fucom
outsl
or
mov
cmp
incl
out
jge
orb
mov
mov
in
sub
lods
fmul
adc
and
adc
pop
int
daa
mov
fdiv
sarl
fwait
xchg
in
imul
out
sbb
mov
sbb
out
pop
or
int3
mov
add
stos
ficoml
mov
insb
insb
cmp
push
mov
mov
orb
xor
jmp
lods
push
inc
aam
fcoms
enter
out
xchg
mov
mov
sbb
out
dec
adc
mov
jg
pop
clc
cmpsl
jle
jp
xchg
cwtl
shll
lock
repz
push
add
add
movsl
cmp
divb
mov
les
push
pop
lods
cs
pop
mov
push
cmpsl
mov
insb
sub
into
lods
imul
cli
mov
pushf
negb
mov
cwtl
mov
bound
pop
ds
ret
xor
xor
jle
test
adc
jo
push
xchg
cmp
ds
pop
xlat
fcoms
dec
mov
pusha
xchg
inc
movsb
mov
stos
jmp
fildl
sbb
jge
push
push
ja
or
dec
xchg
mov
xchg
mov
ficoml
pop
aas
int3
cld
and
or
sub
adc
pop
icebp
cmpsl
mov
adc
xor
shr
sbb
cmpsb
ss
mov
jle
sahf
aad
jg
inc
jb
rorl
push
push
add
xlat
cmp
addb
push
test
cmpsb
shll
jge
push
mov
add
cltd
test
mov
xor
jecxz
jmp
iret
jmpw
jmp
loope,pn
mov
iret
mov
inc
jle
add
push
jbe
push
in
or
mov
add
icebp
frstor
into
mov
or
dec
or
jae
push
pusha
xchg
pop
nop
shrl
mov
mov
inc
fs
aad
jg
pop
fs
adc
fiadds
fildll
or
aam
gs
sub
into
jle
hlt
pop
mov
int3
gs
sub
pop
out
pop
xor
cli
cmp
dec
mov
and
cmpsl
mov
mov
js
lds
into
lahf
data16
in
sub
adc
imul
xor
or
pop
mov
xchg
ret
jns
lret
or
mov
inc
rcll
fildl
pop
jle
jmp
or
mov
rcll
and
aad
cmpsb
jae
xor
xor
inc
inc
out
xor
cmp
mov
lcall
push
loope
xlat
push
and
mov
sub
xor
jmp
jmp
aam
call
inc
xchg
cs
ds
or
rolb
inc
dec
mov
cmp
lds
xor
lret
cld
cmp
push
mov
cmp
inc
mov
xor
inc
push
pop
adc
and
es
das
pop
push
je
or
hlt
mov
lcall
nop
orb
cltd
pusha
sub
ret
push
leave
pop
adc
mov
xchg
jle
sbb
fnsave
pop
push
jae
and
mov
mov
repnz
jl
insl
inc
pop
xor
fistpl
es
inc
push
cmp
jb
popa
stos
mov
scas
sub
adc
in
pop
in
mov
pop
push
in
ds
aam
notb
jl
jmp
add
movsb
lods
pop
dec
mov
popf
je
out
and
lock
sahf
hlt
cmpsl
sub
fwait
pop
dec
xor
jge
adc
jmp
push
and
or
or
mov
ds
xor
push
xor
in
mov
subb
xchg
mov
sub
lret
add
bound
cld
repz
cmp
mov
popa
stos
mov
mov
movsb
mov
add
pop
adcb
repnz
daa
mov
cmpsl
mov
frstor
adc
or
cmp
clc
int3
loop
test
ds
in
test
movsl
jl
inc
dec
xchg
lods
and
icebp
xchg
or
shll
fwait
jl
cltd
aaa
sbb
xor
rclb
lds
icebp
xor
je
or
mov
cmc
pop
out
xchg
dec
lds
pop
aaa
lea
out
xor
mov
repz
xchg
inc
fnstsw
sbb
lods
aaa
lea
out
xor
sub
push
cwtl
lods
xchg
movsl
xorb
lods
repnz
push
jne
push
pop
pop
adc
cltd
test
aam
xor
sub
fisubrs
enter
into
sub
mov
les
xor
fs
call
test
jno
dec
adc
mov
jg
pop
adc
test
pushf
sbb
out
add
pop
xchg
decl
into
pop
sbb
scas
jae
pop
push
push
inc
dec
cmp
in
and
dec
pop
jmp
sub
sbb
mov
pop
lock
push
cmc
cltd
in
aas
incb
mov
leave
sbb
outsl
inc
sub
imul
dec
into
jle
aas
movsl
fmull
ret
add
inc
lock
mov
push
cltd
jno
loopne
imul
test
add
or
xchg
sti
jle
xchg
adc
cmp
or
mov
rorl
sbb
fistpll
push
sarb
push
popf
mov
mov
and
mov
stos
outsl
pop
sbb
inc
xor
into
scas
sbb
popa
lcall
sbb
sbb
dec
into
mull
cs
stos
inc
lock
cwtl
loopne
dec
sbb
inc
jo
decb
lds
jns
inc
mov
sbb
mov
into
insb
jmp
test
lds
nop
cmp
pop
out
aad
jle
imul
aas
outsb
adc
adc
in
jle
std
cmpsb
nop
push
lret
dec
cld
add
lahf
sub
inc
test
cld
repz
in
mov
adc
and
push
sub
and
sub
adc
test
int3
adc
sbb
cmpsb
in
jle
cmp
or
repz
lcall
pop
fisttpl
cltd
mov
test
pop
add
imul
loope
xchg
add
in
sub
mov
inc
jae
xchg
jb
sahf
mov
sbb
dec
jbe
andb
mov
add
sub
pop
andb
mov
cmp
into
pop
pushf
mov
int
in
je
cmp
cltd
jne
insb
scas
fwait
xor
repz
movsl
cmpsb
dec
push
orb
cmp
pushf
mov
xor
clc
test
mov
dec
mov
into
jecxz
les
and
jecxz
add
xchg
jae
mov
cwtl
js
pop
repnz
stos
jbe
xchg
cltd
xorb
imulb
lcall
mov
adc
mov
mov
jmp
sub
in
adc
or
mov
aam
out
int
fs
mov
pop
sbb
inc
daa
subl
js
adc
push
jg
mov
js
pop
xchg
sub
dec
sbb
xor
andb
dec
sbb
repz
or
mov
inc
out
lock
or
out
imul
stc
out
es
jno
lds
sub
aam
lock
xor
sub
cld
mov
in
fstpl
test
or
xlat
dec
xorb
in
adc
aas
dec
cmpsb
inc
bound
cmp
dec
pslld
scas
inc
push
xor
ljmp
push
ss
push
fadds
or
push
movsl
jae
cmpsl
test
xchg
push
int
stc
test
ret
xor
popa
daa
je
fyl2xp1
jg
sub
addr16
fwait
sub
xor
xlat
jo
jle
jne
fcompl
sub
repnz
nop
cmp
cmp
xor
orl
jp
mov
dec
mov
es
in
mov
mov
test
clc
inc
adc
sbb
dec
xor
out
pop
mov
vmovdqu
stos
adc
ss
mov
cltd
jnp
sub
xchg
jbe
cmp
jl
cmp
sbbl
push
ljmp
jae
lret
adc
call
sti
adc
mov
in
or
inc
xchg
cmp
mov
push
sahf
inc
mov
mov
add
cmp
ret
or
stos
mov
cwtl
pop
in
orb
xchg
out
sub
pop
adc
xchg
add
cwtl
xor
cmp
and
fwait
jno
push
or
dec
loopne
and
insl
fisttpl
fdivs
sysenter
mov
jo
add
repz
pop
cmp
jno
adc
in
sub
dec
je
push
inc
ja
push
mov
enter
js
push
push
les
mov
dec
add
pop
repnz
mov
add
push
je
imul
add
sbb
insl
push
pop
andb
subl
shrb
mov
in
mov
inc
push
inc
jo
incb
xor
enter
and
dec
pslld
and
cmpsl
int3
cli
sbb
test
jle
das
pop
push
enter
sarb
out
cmp
in
or
push
dec
mov
daa
push
sbb
cmpl
pusha
repnz
aaa
ljmp
xchg
mov
dec
xchg
jle
fwait
andb
mov
jno
sub
in
mov
cmp
mov
pop
fiadds
mov
test
into
jge
add
cli
imul
iret
sub
mov
pusha
pusha
insl
mov
cmp
movsl
add
mov
test
or
mov
in
jl
xchg
mov
fnsave
inc
add
fisttpll
rcrl
add
jno
cmp
dec
insl
orb
cmp
xchg
push
jmp
data16
sub
cltd
push
fisttpll
push
imul
pop
repnz
inc
xor
sub
dec
xorb
lock
sar
repz
std
and
fwait
jno
sub
repnz
xorb
shrl
add
popf
je
pop
pop
push
nop
cltd
lods
imul
fisttpl
pop
cwtl
in
mov
dec
xor
mov
cltd
cs
mov
jle
shlb
test
mov
push
dec
paddusb
push
dec
push
cltd
add
cmpsl
mov
add
cmpsb
outsb
mov
bound
xlat
in
mov
rcrl
mov
ss
and
sub
push
das
sub
jbe
in
int
mov
outsb
or
inc
std
fdivrs
lods
ds
add
sub
pop
adc
xorl
ret
and
rcrl
mov
or
je
fisubrl
cltd
adc
add
mov
jbe
sub
add
ret
repz
mov
adc
xor
stos
fdivr
cmp
fcmovb
adc
es
mov
out
ds
mov
dec
insb
mov
adc
mov
into
push
inc
in
je
and
cli
jl
out
enter
pop
popa
popa
outsl
movsb
add
cwtl
inc
cmp
in
push
jo
bnd
popa
aaa
jle
pop
xorl
sub
loopne
out
into
ss
stc
sub
xor
inc
cmp
popa
mov
push
jae
push
lock
shrb
mov
in
mov
sbb
inc
jo
cs
sti
sahf
xchg
stos
lock
push
jno
push
jbe
scas
call
pop
aaa
imul
arpl
push
xorl
cmp
stc
sub
xor
cmp
popa
mov
push
jae
push
lock
shrb
mov
ja
mov
orl
lock
jno
and
imul
xchg
bnd
mov
cmp
mov
pop
adc
mov
jle
rcl
xchg
lods
pop
es
inc
push
add
inc
adc
dec
sub
pop
in
movsb
or
fmulp
dec
stc
int3
in
out
frstor
add
iret
push
jg
stc
out
xlat
data16
dec
jnp
inc
xor
and
jne
repz
jecxz
dec
pop
imul
xchg
mov
stos
adc
mov
insl
push
aaa
lahf
inc
sub
addr16
mov
pop
mov
jge
stc
shll
jmp
lahf
pop
mov
andl
xor
adc
mov
jo
fwait
and
mov
addr16
dec
xchg
aas
repz
sub
pushf
ror
stc
lock
cmpsl
push
data16
scas
sub
das
push
mov
mulb
cli
mov
xchg
clc
xchg
in
rcrb
xchg
add
xor
scas
test
xor
int
mov
int3
lods
lea
xchg
fptan
xchg
adc
mov
inc
jle
lahf
cmpsb
in
sbb
push
xchg
and
and
lret
xchg
decl
aad
ficompl
ljmp
mov
mov
push
arpl
push
add
jnp
movsl
push
or
dec
loope
jle
adc
mov
xchg
sbb
daa
and
stos
and
rolb
in
cmp
in
mov
hlt
paddsb
jo
aam
push
cmp
pop
stc
inc
arpl
mov
push
xchg
pop
adc
mov
bound
lcall
cli
adc
fwait
shrb
sub
or
subb
movsb
fwait
and
sub
inc
test
jb
or
dec
cmc
cmc
and
sbb
jge
out
jle
ret
cld
dec
mov
mov
fs
push
mov
insb
and
and
mov
xchg
sub
and
popa
and
iret
push
repnz
int3
push
xchg
roll
lcall
cmpsb
test
movsb
das
daa
or
mulb
loop
ja
arpl
add
mov
push
adc
lods
or
adc
fsub
lds
icebp
dec
jbe
cmp
fisubl
and
xor
outsl
jge
mov
mov
mov
and
popf
popf
fs
loopne
cs
fbstp
adc
call
test
dec
or
mov
mov
clc
cmpsb
lea
jnp
sti
sbb
sub
push
ds
insl
ss
sbb
inc
ljmp
cld
jae
ficoml
sub
mov
xchg
inc
out
xor
mov
xchg
sbb
lods
pop
fs
dec
hlt
push
movsl
fcomps
jmp
in
xchg
adc
aam
icebp
lcall
loopne
arpl
fadds
test
and
inc
das
loopne,pn
jno
in
ds
stc
sbb
incb
lcall
popf
sub
mov
lds
sub
imul
mov
push
je
mov
push
test
and
sub
arpl
sbb
fimull
sbb
sbb
push
pop
bound
enter
sbb
jp
aas
movsb
iret
pop
push
das
shrb
xlat
or
push
xchg
icebp
gs
xor
add
inc
pusha
xchg
push
mov
or
mov
jb
jp
hlt
or
and
cmp
leave
flds
or
add
or
ret
or
sti
ret
fst
mov
dec
stos
pusha
and
dec
cmp
nop
mov
cmp
out
xchg
cmp
inc
cmp
pop
push
mov
mov
or
cmp
sbb
jns
mov
cld
push
push
sub
jg
jmp
ret
or
mov
push
sbb
std
movsb
xor
ret
bound
hlt
jle
xchg
pusha
test
cmpsl
push
mov
movsl
push
dec
pop
dec
or
xlat
fstpt
sub
nop
sbb
outsb
shrb
push
hlt
or
sar
adc
xchg
ljmp
xchg
add
shrb
shrb
jo
jae
aam
cmpsl
and
jns
xor
add
pop
sarb
aam
xlat
push
sbb
aas
mov
insl
insl
pop
cmc
cwtl
mov
or
cmp
xor
mov
and
xchg
js
inc
xchg
xchg
cmp
add
sti
ljmp
idivb
pop
pop
sub
repz
xchg
pop
mov
mov
hlt
imul
popa
and
je
mov
ljmp
mov
rorb
mov
pushf
test
mov
pop
sub
jecxz
ljmp
insl
pop
dec
cmp
ret
mov
outsb
xor
out
mov
xor
add
jb
lea
ja
jae
inc
mov
fimull
cmpsb
push
jle
or
cmpsl
jmp
push
loope
test
sbbb
add
movsl
out
repz
pusha
icebp
popf
xchg
xor
pop
or
cmp
sub
pop
lods
add
xchg
imul
mov
pop
outsb
jl
and
xor
dec
mov
mov
rcrl
addr16
jne
cmp
leave
aaa
mov
sti
hlt
push
shll
or
push
lahf
push
dec
jbe
push
mov
pop
inc
inc
fsubrl
jg
data16
adcl
xchg
add
rorb
stc
pop
cmc
pop
and
andl
mov
cld
mov
mov
in
sarb
aaa
push
adc
push
scas
scas
std
lret
movsb
inc
aaa
mov
mov
add
lret
mov
jl
popa
push
in
repnz
mov
and
bound
mov
xorl
les
xlat
sbbl
or
lcall
leave
xchg
pushl
rcrb
lret
jp
aas
cmp
push
adc
cld
xor
in
dec
pop
sbb
push
mov
mov
pop
dec
push
inc
inc
xchg
and
test
xchg
or
mov
iret
push
loopne
movsb
sbb
and
insl
cmp
pop
movsl
sarl
js
orl
or
jnp
in
jb
iret
clc
imul
xor
ljmp
aam
xchg
pop
push
orb
outsl
imul
sbb
sub
xor
insl
mov
pop
outsl
lods
test
int
jg
mov
pop
jmp
cmc
cmp
daa
xchg
inc
jg
leave
leave
cmp
jbe
mov
sbb
sub
add
lods
mov
scas
lock
or
sar
mov
mov
popa
add
sub
cmpl
or
enter
cmp
cmpsb
sbbl
les
in
test
hlt
test
addr16
mov
xlat
sub
ljmp
ret
addr16
fistpll
shrl
xchg
add
pop
int3
add
scas
adc
popf
mov
repz
mov
add
cmpsl
vmread
sahf
xchg
or
fcmovu
pop
subb
jae
push
mov
in
xchg
lods
dec
jbe
clc
cmp
jg
div
pop
dec
and
movsb
or
jg
je
push
outsb
hlt
pop
sbb
push
xchg
add
xor
pop
sbb
push
adc
mov
pop
mov
je
mov
pusha
fidivl
mov
mov
outsb
cs
ret
and
jge
stos
and
repnz
or
inc
shll
xor
cld
je
push
fdivrs
int3
cmp
fidivrl
popa
mov
cmp
xor
andb
les
and
stos
cld
sub
ficoml
int
push
inc
dec
cmp
test
jge
add
fdiv
pop
cmp
xor
inc
ja
imul
xor
xchg
in
lods
sbb
stos
mov
lea
scas
and
push
or
xlat
xchg
mov
xchg
int3
bound
daa
mov
xorb
and
test
push
cmp
pop
cmpsl
les
arpl
jl
dec
mov
mov
push
fdivrs
les
xor
adc
fucomp
or
lds
clc
mov
dec
sub
jp
mov
jmp
in
shlb
popl
divl
mov
dec
jae
pop
aam
sahf
fmul
mov
push
cmp
dec
sbb
mov
test
push
lea
cld
jbe
jno
insb
into
ret
in
es
cltd
fadd
dec
xor
fiaddl
xchg
inc
aas
fs
xchg
nop
mov
bound
xlat
sbb
loope
jnp
test
pop
fucom
mov
iret
aam
test
aas
imul
lock
in
in
cli
lret
test
ja
and
cmc
adc
out
sbb
into
sub
insb
jecxz
pop
das
jl
pop
or
lods
push
std
jg
neg
add
fs
int3
lods
push
push
in
push
call
mov
insb
out
imul
pop
ljmp
mov
mov
shlb
push
pop
cltd
cmp
jbe
popf
sbb
ds
push
negb
sbb
and
pop
pop
incb
push
jae
fisubs
sahf
lahf
and
fdivr
inc
insb
fcom
mov
insl
or
shll
ret
or
pop
jecxz
xor
outsb
cmpsb
loop
je
and
pop
mov
and
ss
ret
cmpsb
aam
add
pop
add
and
out
mov
xorb
mov
cmpsb
xchg
pop
repnz
dec
loop
push
enter
push
mov
inc
int3
push
data16
xor
xchg
lock
out
sbb
push
cmpl
imul
xchg
mov
ret
cmpsb
mov
ja
jbe
cmp
pop
push
pop
movsb
in
sbb
movsb
fmuls
add
in
aas
cmp
push
loop
loope
out
aaa
add
imul
add
pop
xor
daa
movsb
sub
rclb
repnz
lods
pop
hlt
out
pusha
scas
cmp
aas
mov
mov
inc
mov
cwtl
push
fsubrl
sub
mov
mov
repnz
mov
out
jae
mov
inc
dec
mov
jp
jno
push
call
orl
dec
cmc
adc
xor
sti
pop
adc
ret
sbb
push
shl
xor
pop
scas
mov
xchg
aam
sar
pop
fidivl
pop
mov
pop
lahf
xchg
ljmp
mov
mov
adc
sahf
cmp
sbb
dec
inc
lahf
cs
xchg
pop
sbb
fisubrl
add
insb
mov
jp
sbb
mov
incl
stos
fildll
mov
lcall
jle
mov
add
and
ds
mov
xchg
inc
add
testl
sbb
test
mov
test
xchg
pusha
pop
sub
jle
test
stos
fistpl
pop
jbe
xchg
jbe
fbld
shll
mov
shl
pop
and
hlt
cwtl
sbb
cli
push
jp
leave
add
test
rorb
add
dec
rorb
and
addr16
cmc
and
xchg
xchg
lcall
mov
std
lahf
aas
jp
mov
xor
jl
mov
icebp
dec
mov
pushf
fucomp
mov
sbb
add
mov
negb
mov
sub
push
int
insb
push
cmp
fcos
mov
je
out
rolb
data16
dec
cwtl
mov
sbb
sbbb
dec
stos
paddsw
pop
aad
pop
inc
lea
dec
aad
mov
ret
out
in
fidivl
cli
push
sub
dec
ljmp
fdivs
divb
into
shl
popf
cmp
push
in
and
sub
js
sbb
pop
mov
dec
lea
hlt
cmp
pop
mov
adc
into
cmp
adc
sub
fwait
push
sub
in
cmp
mov
in
add
or
fcomps
adc
xchg
cltd
pushf
push
xor
fnstenv
or
ret
cltd
xchg
jl
imul
jns
xor
lea
add
mov
jmp
test
ret
mov
adc
or
popa
mov
test
cmpl
push
repnz
inc
mov
frstor
xchg
out
lods
jnp
clc
mov
jno
sbb
rolb
xor
in
imul
test
out
aaa
add
lcall
mov
ljmp
and
push
or
in
jbe
and
sbbl
cmc
loop
loop
outsl
mov
pop
sub
pop
pushf
sub
bnd
rcrb
sbbl
mov
mov
mov
and
aas
lods
inc
mov
mov
mov
add
or
dec
jo
sub
movsb
sbb
iret
sub
cli
xchg
pushf
mov
fistpll
jp
push
pop
sub
or
fistpll
int3
sbb
sub
out
push
out
xor
adc
add
jmp
hlt
mov
inc
jle
call
or
or
pop
push
pop
pushf
or
inc
dec
sarb
push
push
insl
pop
js
in
xchg
cs
aam
sti
xor
push
mov
sbb
outsb
fucomi
and
push
in
sub
inc
and
mov
sbb
xchg
mov
les
lods
mov
sbb
add
imul
daa
test
dec
mov
repz
popa
sbb
cli
cmp
mov
sti
sarl
inc
mov
inc
pop
ljmp
shll
aam
push
lds
test
push
adc
cld
fs
sub
mov
sub
les
sub
pusha
in
aas
dec
fadds
mov
add
scas
cwtl
dec
jbe
inc
outsb
aad
std
mov
testb
jle
push
mov
jno
les
dec
pmaxsw
mov
mov
xor
fs
ljmp
aad
dec
xor
sbb
js
push
or
loope
cwtl
fcom
cwtl
test
mov
mov
push
sbb
sbb
movsl
sub
sub
pop
cmpsb
inc
repz
jg
rolb
push
dec
addr16
push
stos
ljmp
pop
ljmp
test
insl
lcall
pop
xchg
dec
pushf
test
cltd
mov
aam
scas
popa
outsl
mov
push
es
inc
test
sub
leave
cwtl
cld
rcrb
std
clc
sbb
bound
mov
xchg
xchg
js
adc
test
bound
inc
pop
call
push
mov
push
movsb
cmpsl
cmp
les
mov
mov
dec
mov
add
and
rorl
jo
data16
data16
shlb
lods
rcrb
xchg
and
push
or
adcb
push
inc
lock
std
mov
test
adc
mov
rcrl
clc
inc
dec
std
je
push
push
fldl
push
jns
aaa
mov
je
xchg
jge
cmp
leave
adc
cmp
mov
dec
fiaddl
jbe
mov
mov
sub
cmpsb
xor
sbb
or
rolb
cli
mov
jo
jns
pop
mov
inc
fs
or
scas
cmp
cmp
ja
mov
mov
add
push
sbb
cltd
adc
mov
mov
ds
dec
mov
and
in
xchg
aam
scas
push
dec
cli
push
aam
rcll
inc
pop
sub
jb
mov
cltd
adc
movsb
repnz
sbb
and
adc
stos
insb
movsb
mov
sub
adc
xchg
in
fdivs
mov
cmp
pop
jno
popf
jmp
ret
lcall
mov
cwtl
loopne
enter
xchg
pusha
lea
sub
xor
jbe
push
jo
es
repnz
pop
mov
lock
repz
mov
repnz
xlat
ljmp
pop
fisubrs
xlat
es
and
xorl
jbe
pop
cmp
sub
test
repnz
in
xchg
add
mov
mov
mov
push
sbb
jne
je
repnz
xor
mov
out
pop
imul
and
fmull
xchg
sbb
jo
ljmp
pusha
mov
nop
xchg
and
pushf
jl
orb
psubsb
cmp
std
jl
in
pop
inc
adcl
xchg
je
mov
jne
icebp
mov
or
mov
cmp
insb
fs
mov
xchg
and
push
sbb
cs
xchg
mov
cli
sbb
xchg
add
div
data16
push
xor
jb
xchg
cmp
es
and
mov
fwait
push
jl
cltd
mov
adc
std
cmpsl
mov
fsubl
ljmp
jno
mov
mov
pop
push
xor
mov
lahf
test
xchg
mov
pop
lahf
cli
cli
mov
pop
xor
pop
xorl
jmp
push
test
mov
aam
mov
leave
cmp
ja
cs
and
add
call
cli
test
cld
lods
push
sub
repnz
push
pop
or
test
xchg
or
imul
imul
and
inc
ret
bound
pop
rcrl
stos
cwtl
cmpsl
cmp
scas
idivl
cs
pushf
in
dec
mov
sbbl
pop
ja
sbb
mov
push
push
add
add
int3
push
jnp
loope
or
in
sub
pop
mov
leave
out
pop
add
sub
orb
fstpl
shrd
and
insl
rorb
bound
jmp
aas
dec
xor
push
sub
cmp
and
sbb
sbb
adc
pop
loopne
cmp
addr16
or
test
pop
xchg
dec
sbb
test
push
dec
push
int
mov
sbb
xlat
mov
pop
cwtl
push
pop
cmpsb
std
mov
inc
mov
ds
nop
stc
orb
stos
mov
fdivrl
stos
inc
movsl
mov
push
mov
loopne
or
mov
pusha
fisttpl
in
inc
jb
ficoml
cmp
loopne
add
loope
jo
add
xchg
iret
cmc
pop
lods
pop
adc
push
jmp
call
push
nop
and
jl
insl
imul
fcoml
pushf
or
mov
pop
call
pusha
add
and
cwtl
xchg
jb
inc
mov
dec
mov
cwtl
fwait
cwtl
push
push
inc
lds
js
fidivs
add
daa
adc
jl
push
push
outsl
iret
xor
int
xor
out
mov
data16
pop
fisubl
adc
inc
loopne
xlat
decl
push
fistpl
xor
negb
lods
pop
shlb
out
inc
mov
fcmovnb
dec
sahf
loop
mov
sub
outsl
ja
and
mov
mov
cld
repz
test
xor
stos
mov
pop
fcomps
sbb
mov
subl
fistl
outsb
fcoms
cltd
adc
lcall
pushf
or
fdivrs
dec
xchg
out
add
leave
mov
mov
cltd
out
sub
dec
mov
imul
lret
mov
pop
adc
loopne
pop
jbe
shlb
fwait
rcrl
push
and
lds
sub
stos
mov
and
aad
fdivrl
cwtl
pop
aam
in
inc
jno
inc
stos
jno,pt
dec
adc
mov
jge
and
jb
loop
enter
out
clc
hlt
in
jbe
cpuid
cld
stc
je
push
sub
sbb
jmp
or
int3
xchg
sub
inc
insl
pop
sub
xor
ret
inc
and
scas
in
lock
pop
out
fs
and
sub
iret
mov
cld
jl
pop
pop
and
xchg
fmuls
add
das
push
and
pop
js
dec
into
mov
pop
xchg
mov
pop
dec
ss
push
js
cmp
dec
negb
incb
sbb
dec
les
rol
xor
push
movntps
popa
pop
inc
cmpsl
xchg
or
xor
or
push
cmp
out
sbb
movl
or
dec
jb
fisttpll
stc
sub
jecxz
add
cmpsl
mov
push
sahf
pop
pop
inc
dec
jae
xchg
pop
mov
idivl
jo
test
int
lods
rcrl
cmc
sahf
std
mov
incb
and
sbbb
push
xchg
and
dec
jecxz
pop
mov
adc
adcl
mov
adc
xchg
pop
mov
bound
push
sub
test
incb
jbe
or
pop
imul
sbb
mov
insb
jmp
test
movsb
popa
jne
xor
push
fidivrl
xor
dec
addb
dec
cwtl
outsb
in
lcall
les
les
pop
xor
sahf
scas
in
xchg
and
xchg
mov
fisubl
pop
lds
into
das
dec
data16
shrb
pop
inc
std
push
sahf
lods
pop
in
xchg
test
mov
fstpt
sbb
xor
mov
pop
mov
cmp
or
pop
in
push
shrl
add
ss
pop
pushf
aaa
pusha
je
popf
je
pop
dec
xor
fnstsw
ljmp
mov
add
test
fbld
pop
out
push
nop
adc
dec
lock
std
mov
push
mov
mov
xchg
loop
rcll
mov
jge
jo
popfw
popa
mov
sahf
pushf
cmpsl
sbb
add
sub
cld
out
into
pop
sbb
sub
fdivl
insb
mov
loope
aam
aas
mov
cmp
mov
jae
xchg
mov
sahf
test
fdivr
add
int
lret
cmp
in
rcll
orb
sbb
mov
jmp
iret
pop
sub
hlt
je
pcmpgtw
pop
daa
shr
xchg
jno
mov
pop
jecxz
leave
xchg
std
aaa
add
cmpsb
xchg
js
rolb
dec
out
and
adc
add
sarl
es
mov
into
xor
pop
push
add
xor
shrl
rolb
adc
fmuls
mov
inc
psubsw
jg
mov
push
mov
and
and
push
push
orl
subl
add
cwtl
movsb
add
sar
mov
mov
scas
leave
cbtw
cmp
cmpsl
jb
inc
add
sbb
push
sti
rclb
jecxz
xor
out
repnz
sarb
mov
in
mov
push
in
stos
ret
aaa
pop
dec
ret
loop
in
mov
mov
jecxz
jmp
pop
xchg
call
fidivl
sub
pop
shll
jnp
std
cltd
arpl
icebp
cwtl
fs
data16
icebp
fstl
pop
push
ljmp
jle
cmp
fnstcw
push
pop
jge
mov
pusha
jbe
sbb
mov
sub
hlt
das
jl
fsubs
push
rcrb
mov
mov
mov
stos
testl
hlt
into
incb
xlat
js
mov
inc
xlat
adc
aam
cmp
cmp
mov
push
inc
pop
cmp
push
and
repz
testb
and
fdiv
dec
jle
ja
mov
push
das
test
mov
ficomps
mov
testb
cmp
push
enter
mov
pusha
ljmp
adc
dec
add
in
lret
cld
test
repnz
loopne
stos
mov
lds
jno
aas
mov
xchg
inc
js
cmp
das
enter
push
xor
pop
sti
cs
cld
mov
mov
jns
jne
and
xor
lock
sahf
mov
and
jno
leave
ret
gs
jnp
cmp
add
dec
into
imul
leave
cld
xchg
sahf
in
pop
lods
adc
loopne
pop
pop
dec
test
xor
mov
mov
rorl
mov
movsl
lods
je
jecxz
gs
dec
das
mov
dec
or
sub
adc
test
pop
cwtl
subl
shrb
mov
pop
test
fidivs
je
cld
or
dec
pop
imull
mov
xchg
mov
sahf
cmp
cwtl
adc
push
imul
jne
clc
prefetch
or
pop
xchg
mov
or
lock
data16
test
or
add
rcr
enter
inc
fidivl
rolb
jl
pusha
pop
xor
xor
in
insb
adcl
mov
fwait
mov
jp
lea
sub
mov
ror
addr16
xchg
mov
push
sub
int
jecxz
dec
je
pop
fs
adc
inc
in
loop
sub
and
aas
loop
cmp
call
bound
push
inc
push
test
ljmp
xchg
sub
cmovg
xorl
mov
jo
lcall
dec
mov
rcrl
lods
mov
mov
adc
addr16
adc
fwait
jne
and
and
ds
or
pop
sub
jbe
or
ljmp
mov
outsl
and
add
loopne
mov
dec
cld
push
mov
jae
jno
pop
or
das
nop
into
sub
lret
push
roll
in
adcl
jmp
fs
adc
insb
push
fwait
rcrl
ss
ret
bound
push
inc
jo
sub
xor
inc
mov
dec
ljmp
sub
or
mov
test
xchg
xor
add
push
cmpsl
fs
pop
inc
scas
shlb
shrl
dec
mov
sub
pushf
add
cmp
mov
pop
outsb
icebp
cmp
mov
mov
jle
sub
inc
mov
outsl
clc
mov
adc
pop
inc
jg
adc
and
dec
pslld
fs
mov
dec
sahf
cld
cmpsl
sbb
xchg
xchg
adc
sub
dec
mov
pushf
sbb
ret
lcall
add
xor
aam
scas
add
out
fcomps
pop
adc
imul
sbb
divl
xor
dec
aam
add
fisubrl
add
sbb
pop
pushf
aaa
fists
movsb
push
pushf
xor
pop
push
aad
sarb
and
fwait
jno
push
call
push
pop
call
mov
push
es
inc
or
or
stos
lods
into
adc
dec
push
cs
pop
sub
in
mov
mov
in
mov
out
mov
mov
cmc
insb
sbb
movsb
xchg
pop
std
cmc
add
rcl
and
int3
rcrl
insb
cmp
rolb
cmp
cltd
in
dec
mov
sub
imulb
sub
mov
ljmp
jae
inc
add
cmpsb
xor
je
int
adc
sub
xchg
les
xchg
cli
cmp
jbe
dec
loope
out
adc
mov
insl
out
push
pop
xor
mov
into
xchg
inc
mov
fxch
fldt
stos
call
cltd
xchg
push
adc
ljmp
ret
mov
int3
xor
je
inc
push
ds
stos
xchg
int
ss
mov
movsl
mov
lods
test
mov
insl
cltd
or
fists
sbb
loope
test
insb
adc
add
mov
sbb
pop
es
in
mov
xchg
fucomp
aaa
dec
mov
cmp
sbb
xchg
fwait
gs
pop
je
mov
dec
xor
adc
and
jo
sub
and
cmp
dec
xchg
pop
inc
or
mov
insb
jo
lods
sub
cmpsb
test
sub
push
pop
cwtl
cwtl
decl
into
dec
ret
cltd
xchg
jl
pop
movsl
or
pop
xor
loopne
sbb
test
jge
sbb
cmp
lods
push
iret
xor
sub
scas
hlt
sbb
dec
mov
or
je
mov
push
insb
fdivrp
pop
pop
fdivrs
pop
fidivrl
leave
cmpsb
add
loope
out
ds
addb
push
mov
sub
sub
xchg
push
mov
cld
or
dec
or
cmc
push
sbb
mov
adc
in
cmp
loope
xor
pop
and
subl
lods
push
sbb
mov
popa
xchg
sub
xor
bound
xchg
mov
jmp
cmp
out
out
loop
es
jp
jo
cwtl
mov
inc
out
cmp
jo
mov
fwait
mov
cmp
pop
jl
adc
push
jno
dec
xor
loop
mov
cli
out
mov
sahf
cmp
xchg
repz
xor
stc
shlb
sub
push
loopne
mov
lock
cltd
mov
cmp
in
pushf
inc
inc
cmp
xchg
and
jnp
in
inc
jb
es
mov
mov
pop
and
dec
dec
sahf
mov
add
sbb
add
pusha
stc
fstp
xchg
pop
test
dec
rol
outsl
nop
lcall
jns
insb
and
jecxz
mov
mov
fcom
popa
data16
das
or
fdivrs
shlb
xor
add
subl
and
cmpsb
sbb
push
mov
bound
inc
aam
push
je
xor
pop
dec
subb
mov
xchg
in
lret
pop
xchg
cmp
cmpsl
inc
mov
xchg
push
cmp
jge
lcall
add
popf
dec
jmp
stos
mov
popa
ja
std
push
xor
xchg
fs
js
push
and
outsb
pushf
jae
dec
jle
sbbl
lcall
jl
call
mov
les
imul
mov
push
loope
mov
push
ret
into
repz
and
clc
ss
jmp
xchg
push
pop
pop
jg
or
and
aas
mov
cmp
scas
mov
or
dec
sarl
aas
lret
movsb
mov
pusha
test
or
mov
sti
jne
out
mov
mov
mov
mov
xchg
in
push
pop
push
lcall
js
dec
inc
fstpt
sub
push
imul
cmp
stc
and
jl
pop
aad
ss
in
clc
andb
xchg
mov
mov
lods
mov
pop
adc
addr16
xor
inc
sub
stos
pop
mov
mov
xor
sbb
in
dec
push
push
xchg
jae
mov
lock
rcrl
cmp
jb
push
dec
xor
pop
daa
inc
and
xchg
pop
and
rcr
sub
mov
ret
cmpsl
or
adc
mov
fidivs
xor
or
inc
pop
ds
int
lret
jp
hlt
mov
clc
or
jecxz
stc
aad
in
sub
pop
enter
cli
mov
test
adc
jo
lods
fisttpl
adcl
cmp
insb
push
aam
jae
xor
mov
cvtdq2ps
sbb
mov
js
and
into
jmp
repnz
sbb
js
and
sub
pop
sub
adc
cs
fsubrs
rclb
rcrl
sti
inc
or
add
icebp
aad
mov
sub
jae
or
repnz
sub
or
pop
insb
cmp
inc
dec
or
test
mov
pop
insl
mov
dec
enter
push
cmp
sti
js
cld
imul
sbb
lcall
xchg
pop
int3
lahf
fcmovnb
loop
sub
imul
stos
mov
cld
loopne
aas
les
and
aas
or
sub
sub
cmp
mov
out
jo
pop
inc
jo
mov
mov
pop
sbb
cld
repz
fld
mov
push
mov
sbb
and
jecxz
xchg
pop
loopne
insb
cmp
movsl
pop
notl
dec
ds
jg
ficompl
test
ss
jge
rclb
add
add
cmpsb
aas
lea
scas
clc
mov
pusha
fstp
xor
adc
ret
lock
mov
jl
add
pop
sbb
rcrb
hlt
mov
sahf
xor
sub
push
inc
popa
pushf
or
mov
filds
cmpsl
sub
push
ss
adc
mov
mov
out
jmp
out
sub
jecxz
scas
adc
sbb
outsb
mov
cmc
pop
sub
out
lcall
les
or
les
fisttps
push
sbbb
sbb
push
inc
mov
or
test
les
and
lcall
pusha
ss
clc
ss
mov
pop
cmpsb
iret
sbb
pop
shlb
vpmacsdqh
dec
shll
pop
or
push
ss
add
jno
jl
ficompl
bound
repz
aam
out
bound
mov
pop
inc
andl
fdivs
pop
cmp
adc
lret
pop
jle
add
pop
jg
pop
mov
inc
cmc
insb
and
jno
iret
inc
outsl
sbb
fwait
scas
je
xor
addr16
mov
fldt
inc
xor
data16
push
ret
les
cmp
push
mov
sahf
aas
movl
shl
aam
mov
adc
mov
sti
jl
xlat
xchg
adc
leave
jmp
aad
and
inc
lcall
cli
sub
in
movl
ret
mov
fsubrl
xchg
movsb
dec
loop
mov
ret
cltd
sahf
nop
adc
movl
sbb
mov
mov
out
in
mov
sbb
xor
arpl
sti
cmp
or
cld
sbb
lods
cltd
cs
or
pushf
vaddss
sahf
jns
mov
adc
pop
stos
lahf
or
add
inc
pop
js
inc
loope
push
sub
sub
mov
imul
in
mov
test
insl
xchg
sub
outsb
jbe
mov
roll
mov
loop
fstpl
add
or
mov
int
cltd
ljmp
popl
and
jns
mov
out
jnp
inc
rcr
rorl
mov
fs
stc
lds
mov
rorb
ret
mov
sbbb
call
pop
pop
xor
fnstcw
cmp
mov
xchg
mov
in
idivl
test
or
jg
ret
cmpsl
shl
aas
bound
sahf
dec
in
lahf
adc
shlb
mov
add
nop
push
mov
stc
fwait
imul
stc
pop
jno
les
adc
jo
mov
push
or
cmp
inc
and
sub
loop
xchg
mov
fidivl
sti
icebp
adc
mov
jns
scas
fistpl
jne
leave
inc
int3
push
adc
lahf
push
push
mov
addr16
cmc
jb
inc
sub
adc
pop
mov
push
and
outsb
fdiv
call
repnz
mov
pop
cmc
mov
cmpsl
or
xchg
inc
popa
test
gs
cmpsl
shll
push
mov
out
cmpsl
add
jmp
jne
loope
loop
sub
xor
pop
mov
mov
movsl
or
dec
cmpsl
and
mov
rol
fistpl
pushf
or
jno
clc
call
mov
pop
out
mov
in
push
loope
xlat
push
pushf
mov
fistps
aam
mov
cmc
insl
jae
or
inc
xchg
aaa
das
outsl
sbb
push
cli
mov
std
cmpsb
daa
jle
lods
pop
adc
push
jmp
call
nop
add
xchg
xchg
mov
mov
and
push
or
ljmp
mov
repnz
push
cmp
in
rolb
jno
pop
pop
test
ret
pop
ror
add
hlt
pop
jne
or
add
pop
es
jmp
add
stos
mov
loopne
stc
and
in
sub
fwait
cltd
push
and
repnz
push
lock
rcrb
jmp
shll
mov
jecxz
repz
int
insl
movsb
add
sub
je
std
pop
je
jg
stos
jbe
pop
movsl
jg
push
enter
push
loopne
xlat
xor
test
mov
add
addr16
push
fisubrl
movsb
test
shl
bound
pop
adc
push
xor
int3
push
mov
mov
pop
fimull
in
dec
adc
int3
sub
xor
sub
dec
int
aaa
ret
insb
inc
arpl
jecxz
and
sahf
leave
sub
pusha
mov
aas
ds
ret
mov
push
pop
and
in
dec
ds
or
mov
in
sub
ror
sbb
jae
data16
or
push
and
and
xor
cmp
pop
push
cwtl
cmp
inc
addr16
aam
xor
sbb
pop
jp
aad
dec
in
and
jp
mov
add
xchg
rcll
mov
push
enter
and
mov
push
pop
mov
add
add
jg
add
sbb
repz
xchg
test
push
sbb
push
adc
imul
jle
cmpsl
ss
or
push
or
dec
sub
xchg
cmpsl
addr16
dec
push
arpl
sbb
shll
sub
cmpsb
xor
dec
inc
xchg
pop
mov
pusha
outsl
push
loop
jle
mov
pop
cmpsb
pusha
arpl
jo
and
mov
cmpsb
inc
popf
or
fmul
std
add
pop
adc
decb
pop
jp
mul
mov
fs
mov
pop
data16
and
test
shlb
movsb
inc
inc
xchg
mov
cld
mov
xor
jl
dec
jb
add
jmp
cmp
mov
jns
inc
movsw
add
leave
pop
test
sbb
scas
mov
pop
and
fwait
aam
push
push
jae
addr16
push
fwait
xorl
inc
bound
fs
aaa
es
push
cltd
adc
movsl
add
sub
cmp
xchg
loopne
dec
mov
ds
add
dec
cli
mov
xchg
push
cli
and
shrb
xor
inc
imul
add
jle
mov
or
divl
dec
inc
add
test
pop
mov
rcll
mov
rcrl
pop
sub
mov
jno
adc
jmp
push
leave
imulb
push
jmp
iret
push
leave
shlb
mov
inc
aas
ja
mull
icebp
mov
xor
xchg
cmc
sub
ss
out
andnps
or
int3
jno
das
sub
lods
pop
jp
push
mov
es
push
mov
sbb
or
inc
pop
lcall
jnp
or
cwtl
movhps
movsl
and
outsl
daa
es
in
fists
out
and
lods
jb
outsb
sbb
sub
sbb
shrb
cmpsl
int
arpl
repz
hlt
pop
or
dec
cmpsb
inc
push
mov
mov
inc
and
imul
mov
hlt
adcb
test
ds
out
mov
jmp
and
out
dec
dec
scas
mov
xor
ret
std
xchg
or
sahf
and
push
popa
cli
mov
push
jle
sbb
mov
mov
xlat
js
int3
das
loope
sysenter
and
rclb
testl
ljmp
sub
lock
mov
dec
mov
ret
push
dec
hlt
mov
aas
bound
test
in
mov
push
jo
outsb
lret
mov
inc
sbb
adcb
inc
jnp
fistps
sbb
xor
shrl
test
hlt
and
pop
dec
cs
rorl
add
in
repz
push
dec
call
mov
jb
call
test
push
mov
hlt
arpl
inc
xor
ret
adc
aaa
push
push
mov
inc
inc
stc
lahf
mov
push
test
sbb
ljmp
les
mov
pop
movsb
pop
pop
shlb
ljmp
push
lock
xor
lods
loopne
mov
push
loop
fcmovb
and
sub
push
loope
in
xchg
mov
ljmp
cmpsl
pusha
test
ret
aaa
les
sub
mov
adc
lods
repnz
cmp
or
inc
js
rcl
popf
loope
dec
mov
ret
jg
enter
cli
lock
imull
sbb
jmp
push
pop
out
sbb
xchg
and
pop
out
add
pusha
data16
js
sbb
in
push
jl
xchg
mov
je
add
sub
mov
out
inc
xor
push
jmp
cmp
mov
fs
sub
add
dec
push
cmp
in
cmp
cmp
adc
xchg
ret
mov
pushf
push
add
pop
sub
es
pop
pushf
dec
daa
mov
xchg
cwtl
mov
ret
push
dec
and
pop
fs
push
dec
xlat
subb
mov
aas
pop
lret
pop
mov
inc
fcomps
add
or
cmp
js
int3
dec
pinsrw
enter
and
mov
add
pushfw
cli
jb
xchg
jno
or
or
dec
pop
lock
mov
mov
mov
je
dec
idiv
ds
xchg
mov
outsb
loope
push
cmpsb
jb
sub
icebp
loopne
jge
rorb
jmp
mov
insl
jle
jge
push
repz
dec
jmp
cmp
pop
xor
push
pop
es
sub
data16
jg
ret
inc
sub
or
jnp
add
xchg
into
imul
je
or
es
cmc
dec
inc
insb
dec
push
sub
fmul
lahf
rcrb
xchg
xlat
negb
das
imul
fimuls
sbb
jns
int
cmpl
lahf
and
pop
adc
sbb
mov
add
aaa
pop
dec
jmp
sub
fcompl
pop
cs
pop
add
iret
xor
andb
sub
mov
sub
or
xchg
test
js
pop
pop
lret
adc
scas
in
xor
pop
dec
filds
push
sub
pop
sbb
mov
mov
mov
pop
and
mov
jl
inc
cmp
mov
mov
std
jmp
inc
rcrb
or
or
shll
mov
mov
rcl
es
in
xor
ljmp
int
pop
pop
mov
mov
or
pop
ljmp
push
lea
add
or
mov
xor
ret
sub
inc
aam
inc
addr16
push
xor
ds
dec
jmp
jo
jmp
aas
loope
mov
scas
mov
cmp
jecxz
and
dec
or
sbb
lret
sbb
rorl
sub
hlt
fs
jo
jbe
ret
mov
aaa
or
je
push
sbb
ss
ljmp
cli
ret
int3
lods
mov
in
pushf
push
sbb
cwtl
fs
enter
xor
mov
push
pusha
pop
inc
sub
cli
push
mov
insb
pushf
and
dec
cmp
fstp
test
nop
repnz
xor
cmp
push
adc
mov
jle
icebp
pop
mov
movsb
test
testl
imul
mov
pop
sub
push
adc
push
xchg
mov
or
mov
data16
dec
ficoml
add
sbb
push
add
mov
incl
dec
je
dec
jbe
adc
test
xchg
xchg
lret
movsb
ja
mov
xor
popf
adc
call
cmp
outsw
sbb
adc
rcrl
xlat
lret
test
movsb
lret
dec
aam
add
mov
test
pop
jb
cmpsl
mov
out
vpcomd
loope
lds
adc
push
repnz
adc
sub
stos
push
movsl
arpl
hlt
inc
out
xor
icebp
cwtl
addl
shll
out
sub
pop
andb
mov
xchg
adc
adc
js
adc
call
shll
jno
jno
push
mov
data16
push
xchg
add
fisubl
imul
addr16
mov
sub
into
ljmp
adcl
mov
xchg
icebp
outsb
xchg
jge,pt
add
sub
pop
cmp
xorl
je
imul
push
in
dec
cltd
popa
ret
xor
shlb
xor
fnstsw
negl
pop
cmp
pop
daa
stos
cmpsb
inc
and
adcl
cmc
jge
push
mov
mov
add
jecxz
mov
xchg
outsl
mov
mov
sub
aaa
sbb
sub
push
add
xchg
or
pop
cltd
mov
in
lods
mov
push
dec
mov
daa
push
push
mov
data16
mov
sub
push
ffreep
icebp
es
jbe
enter
mov
aas
rorb
in
aas
dec
add
ds
pop
jle
xchg
add
add
sbb
push
adcl
pusha
dec
andb
push
sbb
lahf
loopne
sbb
out
inc
add
fwait
adc
hlt
dec
pop
sub
mov
sub
pop
push
data16
insl
dec
xlat
test
mov
not
fmull
xchg
cwtl
cltd
xchg
push
jnp
cmp
fldenv
cmp
out
pushf
xchg
adc
cmp
xor
jmp
sarl
or
cmpb
mov
mulb
aaa
sbb
sub
adc
faddl
fwait
xchg
xor
pop
jbe
jnp
int3
dec
rcrl
cmpsl
mov
lret
jp
ret
and
stc
mov
sbb
push
lret
mov
loope
cmp
dec
sub
shrb
xchg
jo
or
mov
push
xlat
and
aas
xlat
imul
lds
sub
cmp
mov
enter
hlt
or
push
dec
jnp
cmp
fldenv
ss
test
jecxz
scas
movsb
pop
mov
fcoms
js
enter
stos
sub
push
push
test
shr
push
mov
decl
or
out
enter
dec
pop
into
fdiv
push
ret
inc
pop
rcl
adc
pusha
mov
push
aas
out
incl
mov
mov
ja
and
mov
cltd
push
dec
pop
push
aas
mov
jmp
neg
or
fwait
lret
or
push
sub
push
dec
cld
dec
cmp
sub
in
insb
mov
xor
scas
pop
jmp
ja
shr
or
mov
fdiv
mov
sbb
sub
mov
lock
adcb
cmp
mov
imul
je
mov
push
xor
push
dec
jnp
cmp
fldenv
pushf
inc
add
add
fdivr
jle
fcoms
sub
cmovg
cmp
fisttpll
les
sub
and
fcmove
mov
and
dec
in
data16
int3
jmp
jb
jnp
decl
ljmp
fwait
aam
inc
les
xchg
mov
fcmovbe
sbb
dec
or
or
dec
mov
rolb
test
std
cmpsl
dec
push
cmc
outsb
mov
adc
cmp
cmpsl
cs
data16
add
pop
in
pop
pop
int
hlt
sbb
dec
or
or
push
inc
sub
inc
imul
cltd
mov
pop
ja
dec
mov
xchg
dec
movsb
pop
add
and
xchg
push
xlat
lock
and
dec
pslld
fdivrp
dec
mov
fmuls
jnp
out
jge
xor
std
cmpsl
dec
push
cmc
outsb
mov
adc
cmp
cmpsl
cs
ss
add
or
std
pop
pop
int
repnz
sub
adc
pop
cmpsl
les
test
sbb
sub
inc
in
sub
or
cwtl
loopne
cli
stos
pushf
les
rcll
aas
sub
stc
test
scas
das
adc
cmpsl
xchg
or
in
jb
xor
inc
push
outsb
cmp
mov
push
mov
cltd
out
dec
dec
sub
sub
adc
cmp
in
cmp
ret
mov
aaa
add
lcall
xor
iret
sbb
add
ret
test
dec
out
inc
add
repz
movsl
rorb
or
pop
fs
adc
pop
in
loop
sub
iret
loop
dec
repz
jno
rcr
lods
cltd
push
neg
pop
mov
jle
pusha
test
nop
sbb
inc
jo
xchg
cli
cmp
pop
lods
or
jmp
cmpb
in
and
pop
sub
cmp
mov
data16
sbb
sub
mov
outsb
pop
push
cld
repz
add
jb
loopne
pop
jbe
rclb
or
cmp
dec
stos
mov
sbb
cltd
push
neg
pop
mov
jle
add
jo
cmpsb
cli
cmp
pop
pushf
or
jmp
sarb
movsb
in
and
pop
sub
cmp
sti
data16
sbb
sub
insb
adc
xor
cld
repz
aam
fistps
jp
pop
push
sub
adc
sub
ss
pop
dec
sti
cmp
js
arpl
popf
je
pop
scas
rorb
jbe
fisttpl
movsb
repnz
jmp
xchg
mov
pop
fistpll
ret
push
fwait
xchg
pop
stc
mov
jecxz
sub
aam
std
xchg
mov
ss
and
pop
jns
sbb
call
test
test
pushf
add
mov
scas
sub
add
xchg
jne
push
notb
push
adc
jge
fstl
xor
inc
mov
xor
mov
mov
dec
ret
lock
pop
es
loope
xor
jmp
inc
fmull
repnz
loope
loop
or
test
sbb
push
shrb
mov
in
test
mov
jle
xor
or
int
ds
mov
ds
or
push
sbb
dec
or
or
sbb
fistps
lods
scas
cltd
sub
cmovg
mov
test
cld
stc
popf
je
daa
push
or
add
jmp
adc
insl
out
fwait
rorl
in
das
or
xchg
aas
sub
mov
fs
sub
mov
popa
push
sti
sub
xor
inc
jb
xor
sub
or
cmp
mov
cmp
into
xchg
xchg
and
add
dec
inc
dec
lret
or
enter
ss
xor
and
jl
and
jge
test
sbb
adc
xor
insb
scas
out
dec
js
hlt
jnp
adc
les
push
shlb
xchg
mov
xor
inc
jne
and
shlb
cmp
or
inc
push
lods
jae
lahf
aaa
jnp
arpl
popf
je
pop
loop,pt
loope
adc
loop
rolb
js
dec
fmull
js
jl
sbb
mov
mov
mov
xor
pop
stos
out
push
or
inc
lcall
shlb
and
push
jl
ss
mov
sub
clc
mov
es
sbb
xor
ja
adc
loop
fldcw
mov
add
popa
sbb
jae
push
stos
test
pop
dec
cli
das
sbb
ret
push
lds
imul
shll
rcrb
jae
mov
push
and
cs
idivb
xchg
jnp
fadds
mov
ds
sub
cmp
xor
inc
cmp
jmp
xlat
dec
mov
dec
repz
mov
fs
daa
mov
jno
ror
rclb
jp
mov
push
push
sub
dec
fmul
cmp
pop
in
cmc
jge
fcomps
enter
jmp
pop
adc
movsb
xchg
xchg
xor
cld
insl
cmp
sub
and
fwait
imul
in
mov
repz
inc
xchg
clc
jecxz
addb
aam
jns
iret
mov
cli
push
or
aam
push
out
cs
mov
test
mov
push
loopne
es
jecxz
jmp
mov
pop
int3
fwait
jecxz
xor
icebp
jb
test
xchg
out
dec
negl
dec
pop
test
sub
sub
and
mov
push
xchg
push
bound
or
lahf
mov
insb
mov
dec
mov
xchg
jnp
hlt
mov
xor
add
cmpsb
cmp
mov
mov
aam
sbb
test
lret
jg
roll
idivb
xchg
lods
xor
mov
cmp
pop
imul
shll
ds
pop
setp
mov
into
sbb
aam
loope
arpl
ret
pop
sbb
push
loopne
fisttpll
pusha
push
outsb
mov
sub
pop
and
sub
std
dec
lret
lahf
jp
xlat
fistpl
fwait
sahf
adc
sbb
mov
daa
or
push
cs
and
mov
inc
dec
xchg
sahf
and
aam
cmp
sub
add
pop
insb
nop
stos
cmpsb
in
mov
xchg
push
ret
out
mov
daa
out
dec
sbb
mov
lret
je
mov
lea
xor
cmp
in
out
les
jl
sbb
mov
and
push
incb
lahf
adc
pop
out
sti
jo
xor
or
mov
add
xlat
and
bound
cwtl
sub
icebp
gs
movsb
sbb
pop
fidivrs
hlt
mov
int3
push
leave
lods
lea
push
push
lods
sub
sub
rclb
test
cld
aas
and
jno
dec
mov
aas
cmpsb
push
add
cmp
mov
aaa
test
cli
les
pop
daa
and
xor
test
and
aaa
test
jmp
negl
dec
dec
scas
adc
in
xchg
cmp
mov
mov
jg
cmovno
mov
push
add
cmpsb
leave
jb
sub
mov
jb
bound
sub
add
cmc
pop
xlat
lods
mov
es
lahf
mov
xor
fildll
and
cmp
js
jb
inc
dec
dec
xor
hlt
and
sub
pop
test
xchg
pop
out
dec
push
push
std
cmp
jl
pmulhuw
cmpl
popa
sub
pop
sub
xchg
int3
mov
adc
xor
inc
and
dec
or
push
data16
rorl
pop
push
test
cltd
loope
loop
push
pop
loopne
push
mov
cld
shrl
push
cwtl
inc
sbb
adcb
dec
mov
mov
hlt
cmp
fidivrs
int3
in
push
pop
cmp
or
jmp
fisubrs
scas
cli
pop
or
xlat
cmp
and
mov
push
jae
sub
mov
adc
push
repnz
cli
stos
mov
add
sub
test
xor
in
pushl
push
jmp
aas
mov
imull
mov
insl
aad
sbb
mov
adc
lock
xor
sahf
ljmp
inc
ret
xlat
and
hlt
aas
adc
cmp
stos
nop
adc
test
repz
sub
push
pop
cmp
xor
test
daa
mov
aas
and
sub
fcmovne
test
pushf
shrb
cmp
ljmp
xchg
out
stos
aas
adc
xor
add
add
xor
inc
push
in
cmp
shr
pop
and
sbb
cmp
fs
movsb
mov
dec
incl
mov
clc
and
push
add
dec
or
pop
or
add
or
hlt
add
sbb
test
subl
imul
xor
cltd
push
lods
data16
jg
add
dec
ret
pushf
test
mov
in
adc
jb
sbb
cmpsl
and
lahf
movsl
sub
cmp
adc
divl
popf
gs
mov
xchg
dec
sub
or
js
es
mov
mov
je
lods
fstpl
movsl
mov
jmp
pop
jo
data16
stos
and
popa
ret
fs
mov
out
fwait
push
pop
rorb
dec
aam
ret
sub
call
adc
popf
dec
aam
repz
or
addb
in
rcrb
add
xchg
cmpsb
lods
or
xchg
call
shl
add
mov
pop
scas
aad
adc
add
fidivl
xchg
push
add
and
xchg
xor
test
jmp
mov
ds
dec
daa
lods
or
mov
cmp
ljmp
sbb
add
xchg
call
mov
lods
push
jl
lahf
ja
loop
cmp
mov
imul
subb
push
jl
or
in
std
repz
fldcw
ds
sahf
jne
shl
lods
cwtl
int3
mov
in
and
in
js
mov
xchg
fsub
mov
and
fstps
stc
xor
cmp
ret
lret
lahf
repnz
mov
pop
or
icebp
sbb
test
jo
in
mov
pop
mov
or
stos
sbb
dec
mov
add
or
pop
sub
jo
and
shll
lahf
popa
cli
dec
pop
xor
dec
idivb
sub
daa
and
mov
or
nop
movsb
cs
xchg
inc
or
notl
cwtl
pop
mov
mov
mov
fwait
and
mov
mov
imul
inc
lods
xor
cmp
lods
rcrl
insb
mov
and
mov
add
cmp
sbb
or
sahf
rclb
dec
fadds
lret
in
in
or
mov
adc
sub
out
lcall
aam
and
or
pop
xchg
lock
cmp
and
js
shlb
sbb
dec
mov
xchg
add
mov
shl
scas
inc
push
outsb
daa
jmp
or
inc
sbb
cmp
push
jno
mov
cmp
cmp
cli
jo
inc
cmp
dec
sub
jne
cmp
hlt
clc
imul
sahf
aad
imul
shlb
mov
test
lcall
popf
push
sub
xor
push
cmp
xchg
pop
test
in
rorb
call
lahf
xchg
ds
inc
mov
jmp
fisttpll
jge
lahf
popa
popa
push
push
pushf
inc
je
shl
pop
push
scas
inc
dec
cmp
jp
xchg
test
js
ds
jp
xchg
cmp
push
icebp
sbb
add
cmp
fistl
scas
test
cld
cmp
xchg
inc
aas
inc
mov
lret
mov
lods
jle
fsubrs
aam
dec
ret
pushf
dec
divl
add
jg
sbb
mov
xchg
ljmp
mov
pop
ffree
enter
inc
cwtl
bound
mov
mov
and
or
lods
test
imul
push
and
call
mov
fsubrs
mov
push
movsl
repnz
aas
mov
mov
dec
pop
mov
push
fidivl
negl
sub
mov
push
aas
push
dec
gs
sub
adc
dec
or
loop
loop
loop
repnz
repnz
xor
insl
aas
adc
mov
push
jle
daa
mov
and
pop
jbe
sbb
lcall
xchg
sarb
push
fnsave
sbb
inc
mov
repnz
push
and
ljmp
aam
pop
repnz
repnz
add
cld
je
dec
je
in
or
xor
adc
inc
push
sarb
fstps
arpl
add
shlb
out
mov
or
and
add
xchg
xchg
shrb
xor
test
aad
push
mov
pop
popf
ljmp
xchg
cwtl
pop
stos
adc
xor
adcl
pop
sbb
xchg
dec
pop
out
push
xor
test
and
sub
push
scas
sbb
mov
push
ljmp
sub
or
add
mov
inc
mov
frstor
enter
mov
gs
cmc
loop
mov
xchg
cltd
ja
push
cmpsl
in
push
and
jbe
pop
push
std
ljmp
repnz
adc
mov
test
xor
and
pop
hlt
adc
and
inc
arpl
cld
repz
data16
pushw
ret
testl
add
jp
adcl
jge
mov
call
js
movsb
xlat
mov
int3
mov
sub
shl
mov
jg
test
inc
push
aad
mov
dec
pushl
fmuls
xchg
stos
mov
cld
jg
adc
in
cmp
jl
sub
xchg
pop
mov
insl
xor
pushl
aas
add
loopne
jp
pushf
mov
xchg
dec
dec
sbb
adc
shr
mov
cmp
sbb
cmp
data16
inc
ljmp
jb
in
adc
mov
rcrl
cmp
mov
jl
test
fsubl
mov
adc
xor
pop
movsl
add
sub
mov
aam
dec
and
dec
dec
sub
sbb
fs
in
dec
aas
cs
pop
stc
stc
loope
mov
int3
cmp
test
lss
into
xor
push
adc
in
pop
add
cli
xor
iret
xor
popf
pop
dec
je
adc
sub
fistpll
sahf
mov
mov
push
fsubrl
lret
js
cmpsl
hlt
jb
jge
lock
enter
mov
sbb
and
sub
or
adc
or
mov
mov
adc
repnz
or
mov
mov
sar
mov
pusha
add
movsl
aas
add
mov
lret
jp
dec
mov
insb
out
cmp
pusha
aas
xchg
ds
mov
cmp
sahf
cmc
scas
sub
mov
adc
push
popa
cmpsb
adc
mov
ljmp
jp
lods
aam
fs
jge
mov
call
mov
mov
mov
cmp
adcl
repz
mov
fcomi
push
mov
popw
mov
int3
push
dec
cmpsl
inc
imul
js
mov
jg
adc
sub
and
ljmp
dec
std
xchg
add
stos
fcomps
cld
pop
push
jo
mov
mov
inc
adc
pop
mov
cwtl
cwtl
sarb
mov
jle
cwtl
pop
adc
dec
les
je
fs
in
test
jbe
cmp
push
mov
mov
pop
mov
sub
mov
adc
mov
rcrl
cmp
mov
pushf
arpl
fwait
aam
pop
mov
dec
int3
add
pushf
push
add
push
movsl
add
sub
mov
mov
hlt
jp
cltd
mov
sbbb
sarl
or
jne
push
jl
sub
add
adc
ds
hlt
xor
mov
xchg
test
mov
ss
mov
or
xor
scas
sub
mov
adc
fstl
jbe
sub
je
sub
jl
sbb
lods
dec
lsl
lahf
mov
arpl
arpl
jmp
in
xor
xor
insb
adc
and
mov
push
and
out
aaa
add
xor
xor
stos
fdivr
fidivl
sub
mov
fidivrs
pop
loop
lods
mov
jge
jl
sbb
cmp
lock
xchg
sbbb
inc
shlb
rorb
xor
sbb
mov
pop
mov
sub
xchg
cmp
call
mov
jns
test
repnz
jle
enter
insl
inc
fdivl
push
push
jbe
push
in
add
xor
clc
ljmp
mov
jg
adc
adcl
sub
sbb
pminsw
pop
mov
std
xchg
test
stos
adc
inc
cld
out
dec
cld
pop
xchg
mov
push
cltd
sbb
iret
mov
test
shlb
cmp
jle
mov
sub
mov
push
push
jbe
push
in
push
shlb
mov
cmpsb
ss
cs
jg
push
jg
inc
mov
dec
jo
lcall
add
es
icebp
arpl
not
mov
jmp
pop
mov
mov
stos
mov
int3
push
add
pusha
ja
mov
pushf
pop
cmpb
aam
cltd
scas
aas
addr16
or
push
clc
push
inc
stos
sub
push
call
arpl
jo
jmp
lods
sti
les
test
pop
jbe
add
pushf
fdivr
cld
fwait
aam
insl
loop
dec
lock
lea
addb
insl
pop
jl
pop
movsb
mov
jge
repnz
or
sub
push
pop
inc
arpl
add
jge
mov
call
sub
push
lods
insl
setg
movsl
add
and
pop
cmp
arpl
cmp
pop
clc
mov
inc
into
xor
pushf
shlb
ret
xor
mov
inc
pop
jl
gs
xor
fldt
or
sub
ret
cs
pop
into
pop
cmpsl
ljmp
in
repz
push
dec
add
push
clc
jnp
adc
lods
fimuls
xchg
inc
aam
mov
shll
fcomps
es
sarb
dec
pushf
mov
mov
add
cs
fiadds
jge
mov
mov
shll
lods
lds
jbe
ret
rorb
jmp
mov
xchg
lcall
mov
ja
xchg
adc
imul
push
rclb
lods
cmp
push
jge
mov
cmp
sbb
testb
mov
ljmp
jmp
mov
lds
lods
jp
push
out
movsl
stc
ret
stos
movsl
ret
cwtl
jmp
imul
adc
mov
jmp
sub
sbb
xchg
pop
mov
jbe
clc
int
mov
adc
push
cmp
jle
rclb
mov
adc
enter
ljmp
mov
ds
push
dec
pop
bound
jo
ds
int
inc
jmp
xchg
jbe
push
jo
aam
fcmovbe
sbb
dec
inc
mov
repz
xchg
call
mov
dec
pop
and
push
pop
mov
roll
sub
mov
data16
lea
imul
mov
cmc
xor
sbb
mov
in
xchg
pop
xchg
scas
addr16
movsl
jge
adc
push
aaa
adc
cli
mov
xchg
cs
movsb
add
adc
aad
pop
frstor
inc
pop
xchg
stos
lds
mov
clc
gs
or
mov
testb
push
clc
inc
and
rcrl
ret
repnz
jl
ss
sti
rclb
test
decb
pushf
push
adc
push
cmp
dec
cmpsl
scas
adc
jg
xor
addr16
adcl
aad
dec
mov
jecxz
push
cmp
clc
int
or
push
inc
jmp
dec
mov
sub
xchg
call
cmp
les
xchg
adcb
sahf
das
hlt
and
push
add
push
cmp
adc
jbe
in
shll
stos
mov
addr16
loope
aam
inc
mov
divl
sbb
pop
push
outsb
clc
rol
or
mov
push
mov
data16
add
jp
cltd
adc
mov
fldenv
movsl
dec
loope
pop
in
aad
mov
xchg
xorb
test
orl
ljmp
fiadds
lahf
stos
mov
sub
fiaddl
push
sbb
jno
ss
sub
mov
aad
inc
fidivrl
test
xchg
nop
cmp
mov
jo
rclb
or
xchg
outsb
pop
orb
add
in
push
jp
or
mov
and
mov
cld
sub
mov
les
sub
or
push
mov
xlat
cld
pop
repnz
repz
add
dec
cltd
lods
imul
ficoml
call
sub
fsts
ret
nop
shrl
push
sub
xchg
mov
lods
insl
pop
insb
shrl
fwait
subb
sbb
pop
je
push
in
mov
test
orl
rcrl
aaa
pop
adc
cmp
addr16
out
js
push
inc
jo
push
dec
push
adc
inc
dec
adc
les
adc
xchg
adc
mov
fnsave
sub
fs
mov
addr16
fwait
sub
shl
aam
call
fdivrp
bound
dec
daa
outsb
mov
pop
sbb
adc
mov
popf
cmpsb
hlt
sub
lods
push
jno
push
push
sbb
shrl
je
hlt
add
loop
arpl
ss
sub
cmp
xor
and
push
lods
jnp
cli
stc
push
sahf
insb
add
pop
sbb
xorl
subl
cmc
sahf
or
je
ret
or
jo
or
add
jl
mov
mov
popa
adc
mov
cs
jle
or
sbb
rcrb
repnz
hlt
je
hlt
jl
mov
pop
aas
cwtl
test
sub
inc
adc
outsl
sub
cs
ret
popa
xor
xchg
or
out
sub
popa
fisubrs
cmp
stc
mov
stos
and
xor
mov
fmuls
pusha
adc
jno
lds
sub
cmp
sahf
adc
cli
sub
decl
into
jae
xchg
inc
pushf
sahf
inc
mov
pop
arpl
je
pop
xchg
data16
lds
or
int3
in
pop
pop
int
repnz
mov
adc
push
and
fsubs
popf
pop
arpl
insb
cli
add
subb
movsb
pop
pusha
pop
fistps
sbb
cli
rorb
decl
xchg
jae
xchg
in
sahf
sbb
xor
cli
mov
je
pop
mov
fadd
fs
orb
movsb
in
pop
pop
int
repnz
jae
je
sub
mov
inc
jp
dec
inc
mov
jno
mov
pushaw
jo
or
add
add
das
in
repnz
jb
loopne
pop
jbe
push
push
popa
mov
fs
into
lcall
xor
in
push
bound
push
jbe
push
in
dec
push
shr
pusha
pusha
insl
mov
jecxz
pushf
std
and
fwait
jno
push
push
mov
cmpsb
mov
std
inc
into
out
push
data16
inc
jbe
xlat
nop
pop
fdivrs
mov
push
je
ljmp
daa
inc
sub
test
aas
push
movsl
inc
pop
jne
cs
jle
ss
sub
aas
inc
ds
mov
sub
dec
shrb
dec
or
jmpw
jmp
jge
aaa
into
outsb
mov
pop
sbb
shr
repnz
clc
decl
daa
inc
sub
sahf
aad
and
fistl
sub
cs
ss
adc
push
rcrl
inc
push
add
pop
lret
push
mov
aaa
jbe
cmp
dec
or
jmpw
jmp
dec
or
xor
cld
repz
or
push
push
data16
add
jp
cltd
adc
mov
int
shll
gs
xchg
mov
or
aas
ret
inc
les
into
outsl
movsb
pop
mov
stos
data16
cltd
mov
sbbb
add
mov
xchg
mov
fiaddl
dec
add
dec
es
fwait
sbbb
or
sbb
add
jp
cltd
adc
mov
int
shr
fwait
sub
sub
adc
pop
or
dec
cmp
push
push
into
pop
push
pop
jo
sub
jecxz
xchg
or
rol
loopne,pt
les
mull
ret
ret
insb
jmp
fidivrl
movntq
mov
jne
dec
into
push
mov
fstps
in
sbb
pop
adc
aas
push
ds
xor
sub
inc
and
pop
dec
jo
inc
inc
loope
aam
aas
aam
inc
pop
jne
je,pn
jle
ss
xchg
adc
je
mov
push
pusha
cmpsl
sub
lea
dec
xor
xchg
and
add
pop
cli
lahf
sbb
mov
hlt
pop
sahf
nop
mov
lcall
xchg
das
call
inc
lock
push
jno
push
sahf
or
les
cwtl
jge
scas
pop
push
pusha
mov
pop
mov
pop
jo
or
add
sub
mov
mov
popa
adc
mov
cs
jle
or
test
mov
mov
jno
data16
jp
cltd
adc
mov
int
rcll
shlb
jle
fistpll
ret
inc
les
fsubrs
in
imul
mov
jp
pushf
mov
and
pop
cltd
add
aam
xchg
mov
fcmovb
mov
dec
add
dec
inc
jle
fwait
cmpb
or
shlb
data16
cltd
adc
mov
movsl
mov
lods
push
jno
push
in
fisubs
fs
jb
stos
out
inc
ja
mov
jo
push
push
ja
mov
call
push
dec
cmp
push
subb
push
inc
in
sahf
aad
and
fistl
sub
loopne,pn
jle
loopne
push
ja
mov
nop
shrl
push
xlat
xor
popa
dec
out
pushf
inc
jae
pop
inc
xchg
sub
aam
inc
lock
push
jno
push
mov
insb
les
into
insb
xchg
cwtl
jge
dec
pop
pop
jno
mov
data16
inc
or
add
int3
movsl
mov
mov
popa
adc
mov
cmp
fnstsw
or
or
cwtl
mov
mov
data16
data16
cltd
adc
mov
int
rcrl
gs
xchg
mov
push
fistpll
ret
inc
les
into
outsl
movsb
pop
mov
pop
jae
mov
jno
mov
push
push
mov
stos
push
xlat
js
out
and
pop
push
in
ljmp
or
dec
sbb
adc
dec
or
movsl
sub
cmp
mov
insb
mov
ja
ds
cld
popa
stos
mov
sbb
cltd
lods
imul
lcall
sub
decl
divb
xchg
gs
jl
mov
cli
mov
je
pop
ss
lds
or
in
pop
pop
int
bnd
or
mov
or
push
loop
arpl
aam
repz
sub
pop
sbb
popf
out
jp
cmp
cli
out
sbb
jno
pop
sahf
cltd
adc
inc
adc
xchg
cld
out
pushf
cld
pop
xchg
call
testl
mov
dec
xlat
test
mov
not
les
sub
sub
and
cmp
sub
cmp
sub
bound
mov
decl
mov
adcl
mov
cs
jle
out
xor
outsb
pop
mov
jae
pop
notb
movsl
mov
lods
push
jno
push
in
out
bound
cltd
stos
out
insb
ja
mov
scas
nop
shll
hlt
cs
pop
cld
add
aam
inc
in
sbb
ljmp
ljmp
sti
loop
test
inc
push
push
rclb
jbe
xlat
jp
les
push
movsl
aas
add
jle
sbb
shrl
out
sub
pop
sbbb
dec
jle
stos
loopne
in
nop
push
add
xchg
ds
hlt
pop
dec
jbe
mov
stos
test
jmp
inc
fmull
repnz
cli
cmpb
adc
mov
hlt
xor
hlt
cmp
nop
mov
push
cmp
aas
fsubrs
sbb
inc
dec
adc
cmp
aam
ret
cmp
ret
xor
fxch
add
mov
ds
hlt
xor
jbe
cwtl
jno
sbb
int
jne
inc
enter
adc
in
and
enter
adc
jmp
pop
in
sub
lods
mov
rcrl
mov
dec
or
enter
xchg
jp
mov
push
popa
mov
fs
into
call
mov
jae
xchg
jae
cwtl
pop
fnstcw
mov
rcl
xor
mov
or
sarl
dec
dec
pop
pop
in
dec
xor
outsl
sub
adc
mov
je
dec
xor
cltd
xchg
into
xlat
clc
adcb
inc
cmp
lret
push
adc
cwtl
xchg
ja
mov
mov
sub
js
rorl
xchg
jl
jo
les
mov
jbe
push
inc
jo
dec
or
cwtl
xchg
fdivs
mov
cltd
push
dec
sub
stos
push
xor
sub
je
dec
jbe
jle
insb
hlt
test
jbe
sub
xchg
shrl
jle
xchg
adc
in
and
into
push
mov
adc
mov
ljmp
cmp
jno
jno
or
add
add
pushf
mov
cli
pusha
push
inc
push
outsb
pop
mov
cld
cmp
pop
mov
mov
push
xor
lea
inc
sbb
xchg
scas
insb
movsb
mov
add
es
cmpsb
or
movsl
sarl
push
xor
pushw
cmp
xchg
popa
stos
mov
adcl
gs
stos
push
pop
aad
or
lods
jl
ret
jne
shlb
test
data16
out
inc
lcall
mov
aaa
xchg
shrb
pop
push
nop
mov
sbb
cmp
inc
aas
mov
pop
xchg
cmp
repnz
fsubrs
push
lea
aam
jle
decb
sbb
xchg
add
pusha
aaa
inc
movsl
jg
jno
fmuls
rolb
nop
jmp
or
mov
pusha
jl
pop
pop
aad
test
push
int
rorb
adc
add
adc
bound
pop
pop
enter
js
mov
lea
out
sub
pop
mov
inc
pop
gs
lock
pop
mov
jmp
add
movsl
aas
add
mov
jle
dec
mov
js
xor
stos
mov
out
sub
pop
mov
les
fsubrl
in
scas
sub
pop
mov
jmp
add
movsl
aas
add
js
call
stos
mov
out
sub
pop
subb
mov
ret
dec
push
xchg
jae
call
push
fs
jno
pushw
cltd
adc
mov
int
rorl
gs
xchg
mov
sub
aas
ret
inc
les
push
lcall
mov
jg
les
sub
push
cmp
sbb
mov
sbb
cltd
lods
imul
cmp
xor
sub
les
push
outsb
pop
sub
cld
cmp
fsubr
inc
sub
repnz
in
mov
dec
or
dec
jecxz
sar
daa
xor
adc
fcomip
fistl
loop
xor
dec
fidivrl
inc
dec
push
fcoms
fs
in
mov
push
in
mov
xchg
mov
test
out
and
pop
sbb
or
jmp
in
mov
bound
stos
shll
sub
lret
sub
in
sub
int3
mov
rcrl
cld
mov
mull
and
mov
cwtl
imul
add
and
stc
stc
mov
cld
pop
jp
cld
pop
jb
jl
shlb
mov
xchg
das
in
repnz
jb
rolb
push
xchg
pop
cli
lahf
adc
mov
hlt
pop
xchg
mov
inc
std
les
dec
xchg
lds
cmc
mov
sub
cmpsl
lret
dec
insb
cmc
mov
add
pop
les
das
or
sub
sbb
inc
fdiv
jmp
push
or
aam
cmp
lods
sbb
sahf
sub
jl
dec
mov
jmp
or
cltd
hlt
sbb
insl
imul
and
lods
andb
divb
out
dec
sub
add
jecxz
and
cmp
mov
xor
inc
sub
add
int
repnz
rcrb
adc
xorl
mov
rcll
mov
insb
mov
pop
xchg
pop
jno
push
scas
jmp
pop
repnz
sub
loopne
sbb
pop
jp
pop
pop
sbb
xchg
sbb
aas
rorl
adc
scas
inc
lds
in
sub
cmp
sbb
rclb
cli
subb
mov
cld
add
jno
insl
dec
stc
andl
cmpsb
jno
mov
lea
pop
add
adc
sub
cltd
cmpsb
sbb
bound
pop
jne
addr16
inc
xchg
cmp
xchg
imul
jmp
mov
call
sarb
xchg
pop
push
pop
rorl
insl
insb
mov
rclb
pop
mov
xchg
sahf
loope
or
jg
ffree
test
add
mov
cmc
add
andl
cmp
aaa
sbb
mov
lahf
fiaddl
pop
cmc
ficoms
jmp
addl
notb
dec
scas
sti
mov
filds
imull
aad
sahf
loop
xchg
mov
gs
add
ret
mov
sbb
sbb
sbb
push
and
test
nop
ret
lahf
xchg
adc
jl
push
cltd
sahf
mov
clc
inc
mov
lret
mov
cmp
jl
mov
jae
stc
repz
int3
je
xor
add
push
sar
fisubrl
or
leave
adc
scas
mov
jb
cmp
dec
push
fdivs
imul
pushf
test
pop
xor
stos
pop
lcall
mov
inc
xchg
inc
jae
mov
repnz
sbb
xchg
fidivrs
cmpsw
test
rcll
xchg
inc
sbb
dec
outsb
jmp
lea
stos
icebp
andb
jl
sbb
mov
cld
xchg
push
je
call
inc
out
mov
popa
loopne
rcrb
jge
pop
lcall
sti
jge
popa
or
in
or
clc
cmpsb
loop
sbb
push
xor
test
inc
jg
lahf
push
lock
lds
inc
mov
sti
data16
and
cwtl
push
xor
iret
mov
aas
sbb
xchg
sub
sub
push
call
fs
les
push
mov
sti
movsb
scas
xchg
jl
shll
fadd
mov
pop
jmp
les
and
fmul
mov
cmp
add
jl
or
jmp
cmp
xor
pop
mov
fdiv
pop
mov
mov
dec
push
or
fmul
pop
inc
mov
jae
icebp
pop
inc
xchg
jecxz
outsl
push
inc
fs
scas
test
popa
lret
ss
icebp
cmp
movsb
xchg
xchg
lock
mov
jmp
popf
loop
aad
test
dec
pop
lcall
cmc
ret
mov
jp
cmp
test
xchg
mov
mov
lcall
pop
cmp
add
std
lahf
les
add
mov
dec
jb
dec
das
or
xchg
std
push
hlt
inc
in
mov
out
jmp
fisubrs
pop
jae
inc
andb
rcll
jbe
inc
add
mov
das
ficompl
sar
std
or
inc
cmp
add
xor
cmp
xchg
cmpl
push
sub
cmpsl
pop
stos
es
push
cltd
adc
popa
es
push
sti
gs
xchg
lds
add
pop
xchg
cmp
mov
mov
mov
mov
dec
mov
pop
cmp
fnstenv
subl
ss
lods
xchg
ret
push
cmp
cltd
adc
mov
xchg
leave
push
ja
test
test
pusha
int3
fdivrl
mov
ljmp
jno
pop
dec
loope
xchg
out
push
cmc
lods
shl
lock
push
in
data16
cmpsb
pop
dec
enter
stc
test
inc
push
fbld
cli
add
sub
cmpsb
and
inc
icebp
push
pusha
filds
push
xor
add
and
push
push
lds
and
cmp
ror
pop
cs
arpl
shrd
imulb
rcrl
or
push
pop
jo
sahf
fst
jle
pushf
cmc
scas
outsb
dec
or
insl
dec
xchg
imul
sub
outsl
rolb
movsb
in
and
xchg
inc
sarb
mov
hlt
mov
adc
in
mov
adc
adc
cmpsb
xchg
orl
lods
dec
cmp
js
mov
fdivrl
cltd
pop
mov
push
inc
push
mov
pop
arpl
and
sbb
mov
cmp
das
ss
mov
test
mov
pop
pop
jbe
sub
cmp
jl
add
std
sbb
adc
sbb
aam
cld
xor
adc
mov
push
dec
push
pop
xchg
hlt
add
mov
les
loope
sti
sub
int3
xchg
mov
xchg
das
cmp
mov
pop
cmp
cmp
idivl
aaa
jp
push
mov
dec
add
jge
xchg
sub
shl
inc
adc
mov
aam
pop
xchg
xchg
aaa
lcall
mov
mov
and
out
int3
inc
jmp
addr16
lds
or
dec
inc
xor
add
mov
dec
jns
mov
je
and
and
in
jp
inc
pop
xchg
js
xor
leave
push
inc
js
adcb
xchg
sbb
and
cmp
decl
movb
mov
mov
jmp
pop
lock
add
or
int3
movsb
mov
test
js
jo
les
lret
insb
pop
cli
lea
jmp
inc
mov
in
or
xor
sub
lock
mov
mov
bound
js
rorb
icebp
push
je
mov
fs
lcall
inc
jge
sbb
arpl
mov
scas
in
mov
lret
jp
add
inc
jno
push
jl
sub
push
mov
daa
cmp
mov
mov
hlt
sbb
shll
mov
dec
inc
sub
shrb
sarl
cmp
mov
mov
mov
push
aaa
ljmp
inc
js
popf
jmp
ds
xor
jo
icebp
xchg
push
faddl
xchg
push
enter
roll
pop
test
mov
mov
cmp
inc
mov
inc
jmp
pushf
inc
inc
xchg
cwtl
cwtl
jge
mov
repnz
add
shll
ds
test
dec
mov
pop
add
xlat
push
fstpl
pop
pop
push
adc
sub
fistpll
sahf
mov
nop
cmp
adc
scas
and
sub
inc
std
jmpw
and
nop
cmp
std
mov
sbb
add
test
fcomp
test
je
loopne
sub
jle
in
int3
ljmp
jmp
aam
inc
xchg
rcrb
repnz
fisttpll
shr
mov
enter
lods
xchg
adc
cmp
jge
sub
mov
sub
jns
adc
push
mov
add
dec
pop
lcall
jmp
ds
xor
iret
xor
cltd
std
cmp
dec
mov
into
movsl
add
loopne
sub
outsb
clc
adc
test
movsl
or
add
cmpsl
mov
sbb
jbe
iret
iret
cmp
in
out
adc
in
jl
mov
push
mov
dec
inc
fs
shrb
sub
jns
mov
in
mov
lret
jp
adc
inc
jno
lcall
pop
xchg
hlt
mov
sub
or
push
add
popf
je
mov
cmp
inc
mov
stc
pop
xlat
pop
adc
dec
ud2
xor
iret
push
xor
pop
push
or
pop
sub
in
mov
int3
adcl
mov
in
or
lods
nop
jmp
inc
adc
cli
add
inc
pop
pop
insb
and
lods
pusha
cld
repz
and
jg
test
mov
push
add
int
jmp
dec
jbe
cld
nop
jl
dec
or
jo
mov
dec
adcl
jne
push
jl
in
test
hlt
xchg
mov
add
fwait
aam
mov
fldt
in
aas
mov
scas
adc
xchg
mov
jle
test
cmp
in
jmp
cld
inc
inc
xchg
clc
cwtl
jge
mov
repnz
add
shll
ds
dec
mov
mov
push
xlat
push
fstpl
pop
pop
xor
into
sub
sub
shrl
fdivl
add
push
hlt
mov
aam
adc
mov
ror
xlat
add
and
lods
sbb
pop
mov
les
lods
fs
cmp
adc
cs
push
pop
out
mov
cmp
mov
pop
mov
fsubs
sub
xchg
shlb
inc
fs
fidivs
cli
ficompl
sbb
mov
jg
fs
into
fdivr
fisttpl
mov
lret
mov
mov
js
setle
and
mov
xor
xor
fcmovbe
insl
je
adc
jle
and
int3
ljmp
add
jno
pop
ds
xor
mov
icebp
pop
xlat
mov
jl
push
add
int
jmp
cmp
cmp
add
adc
stos
mov
push
sahf
mov
nop
cmp
mov
scas
and
push
sbb
jno
cmp
mov
cmpl
outsb
pop
mov
cltd
adc
and
lods
fdivl
add
sub
daa
push
sub
popf
je
mov
test
inc
stos
inc
rol
icebp
ljmp
out
mov
push
dec
movsb
fcom
inc
loopne
in
lcall
add
leave
ds
leave
fiadds
adc
stos
mov
or
add
movsb
and
jns
movsb
jg
dec
push
hlt
test
xchg
push
enter
lcall
adc
pop
adc
stos
mov
inc
cmp
adc
ss
sub
inc
xor
jmp
icebp
dec
mov
or
adc
mov
loopne
inc
xchg
adc
outsb
and
ss
cmp
sbb
cmpsb
and
cmp
lock
and
mov
shll
nop
push
xchg
lret
sti
movsl
xlat
mov
push
mov
hlt
xchg
test
xchg
adc
dec
or
cld
repz
xor
repz
cmp
pop
sbb
call
fwait
sub
mov
scas
xor
aaa
inc
stos
fwait
ss
sbbb
mov
mov
pop
aaa
fimuls
ret
inc
addr16
adc
test
fisttpl
data16
inc
or
leave
cmc
and
mov
dec
push
call
pop
sbb
in
xchg
iret
mov
lods
and
clc
shrb
mov
mov
divl
sub
mov
jg
pop
loope
xchg
cmpsl
orl
jle
std
and
add
out
les
mov
test
mov
sub
lds
jo
mov
add
mov
call
and
mov
mov
popa
stos
mov
sub
sbb
adc
xor
fs
sub
loope
addb
push
cli
cltd
jo
pop
into
xchg
and
sbb
inc
jo
or
subb
and
pop
xchg
mov
stc
fistpll
sarb
cli
dec
or
clc
int3
xor
adc
jmp
and
andb
loope
addb
filds
pop
test
stos
cmpsl
sbb
jmp
sub
sub
lds
insb
insl
dec
xlat
test
mov
decl
xchg
fs
jge
mov
push
loopne
pop
add
sub
sub
dec
inc
je
pop
xchg
mov
fistpll
sarb
mov
int3
add
adc
jmp
and
int3
mov
mov
jmp
jg
mov
mov
insb
outsb
in
lcall
movsl
loop
pop
mov
pop
xchg
mov
fimull
sub
mov
into
das
adc
data16
cmp
dec
shrb
leave
or
pop
jbe
cltd
shll
sarb
imul
jle
mov
jmp
data16
pop
or
xchg
in
pop
xchg
mov
fisubl
and
inc
sbb
add
push
cwtl
rorl
sub
repnz
jnp
mov
jmp
inc
fmull
ret
nop
cmp
in
aam
and
movsl
sarl
push
in
pushw
in
mov
adc
mov
or
or
jle
cmpsb
arpl
hlt
mov
xchg
lcall
insb
stos
cmp
xchg
adc
jmp
lock
stos
mov
cmp
shlb
jle
outsl
ja
and
mov
stc
cs
js
and
inc
sbb
test
test
push
jbe
push
cmp
stos
fdiv
pop
lret
xor
cmp
xlat
test
mov
jmp
xor
or
pop
sub
inc
add
int
and
sub
xor
mov
in
lret
js
sub
shll
add
hlt
mov
loope
addb
push
cltd
pop
outsl
cli
out
or
jg
add
inc
add
int
jl
sub
xor
sbb
adc
jo
xchg
xchg
cmp
out
pop
dec
push
jo,pt
pop
xlat
insb
adc
sub
js
xor
push
or
lret
push
adc
mov
mov
mov
mov
rorl
jmp
fidivrs
sub
pop
test
xlat
push
add
pop
jecxz
mov
sub
cmc
lds
ficomps
xchg
xchg
and
add
rclb
mov
mov
pop
xchg
mov
shll
lods
jge
enter
xchg
inc
frstor
adc
xlat
test
mov
rcrl
loope
dec
aad
and
xchg
adc
je
cmc
lds
ficomps
xchg
xchg
and
add
rclb
xchg
xchg
addb
iret
loopne
xchg
mov
rcrl
test
cmp
mov
mov
jmp
jge
cmp
push
jle
mov
mov
nop
push
inc
jo
push
das
mov
lock
inc
inc
inc
loope
aam
pop
add
not
les
adc
ret
cmp
push
add
mov
ds
hlt
xor
jbe
and
inc
cmp
shlb
jle
outsl
ja
and
mov
cltd
push
dec
cmp
or
jl
or
pushf
je
out
jl
pop
es
push
or
aad
or
addb
popa
adc
pop
in
loop
cs
rcrb
scas
jns
cmp
into
dec
pslld
aaa
dec
cmp
pop
or
cltd
add
cmpsl
mov
cli
sbb
negl
lea
out
sub
pop
loopne
mov
xlat
xor
mov
rcrl
fadd
xor
in
into
mov
sub
stos
mov
or
push
lret
in
insb
adcl
lcall
cwtl
mov
fisttpl
cli
mov
pop
pop
nop
subl
ds
clc
pop
into
xor
ficoml
pop
scas
jnp
fisttps
add
aas
fcmovnbe
ljmp
adc
hlt
stos
cmc
lds
ficomps
xchg
xchg
and
add
rclb
je
andb
xchg
or
test
stos
jmp
fidivrs
sub
pop
subb
mov
cmp
into
dec
mov
sahf
and
aam
cmc
lds
ficomps
xchg
xchg
and
add
rclb
dec
xchg
sbbb
scas
xchg
mov
rcll
jmp
fidivrs
sub
pop
or
xorl
call
insb
pop
mov
adc
mov
fs
lret
fmulp
inc
mov
movsb
mov
mov
jo
les
mov
cltd
cs
mov
jle
xor
jle
inc
xor
adcl
and
dec
pslld
mov
mov
out
cmp
mov
in
sub
loopne
jae
pop
stos
xchg
adc
xchg
mov
fiaddl
pop
dec
add
stos
inc
sbb
inc
xor
clc
sub
sbb
aas
xchg
hlt
adc
sub
xchg
out
push
gs
mov
addr16
fwait
sub
xor
sub
lods
pop
and
sbb
ret
xor
imul
dec
dec
or
or
test
mov
xchg
xor
ret
insb
jmp
fidivrs
in
and
stos
lds
fimuls
jle
cwtl
mov
rorl
add
jp
cltd
adc
mov
push
mov
push
push
jae
cmpsl
test
mov
sbb
xor
cmp
dec
mov
mov
in
cmp
mov
or
icebp
jmp
and
enter
std
and
fwait
jno
fs
es
ret
push
adc
hlt
pop
into
jno
cli
lret
dec
sbb
stos
inc
cmp
sarb
popa
or
push
sub
test
data16
sub
aas
cli
inc
ljmp
or
push
loop
ret
adcl
lcall
cwtl
mov
rorb
xchg
mov
stos
enter
xchg
sahf
frstor
adc
jae
test
data16
xchg
adc
jmp
ljmp
or
push
mov
in
insb
adcl
lcall
cwtl
mov
into
mov
mov
push
pop
nop
subl
ds
stc
sub
xor
ficoml
pop
scas
jnp
fisttps
mov
rcrl
into
stos
aad
and
xchg
adc
hlt
stos
cmc
lds
ficomps
xchg
xchg
and
add
lcall
cwtl
mov
int
inc
pop
mov
inc
mov
push
dec
pop
gs
mov
movsb
daa
jle
test
adc
jo
dec
xchg
cmp
out
xchg
test
in
cwtl
shll
add
xor
nop
insl
dec
xlat
test
mov
jmp
mov
in
sub
imul
popa
test
xor
in
push
fs
jle
adc
sbb
mov
push
dec
mov
daa
push
sbb
mov
inc
pushf
call
and
clc
int3
and
inc
push
push
jbe
push
in
in
push
cmp
mov
mov
jmp
dec
or
or
dec
push
or
test
cld
pop
aas
fdivrl
cltd
mov
repnz
fadds
cmp
add
xor
hlt
xchg
adc
popa
mov
pusha
rolb
es
les
sbb
fs
pop
insb
add
cmpsl
mov
and
xchg
movsb
aaa
jle
adc
cmp
int3
mov
push
popa
enter
adcl
in
pop
sbb
inc
lret
fmulp
mov
movsb
mov
add
pop
dec
push
lock
jbe
mov
daa
lret
cltd
add
cmpsl
mov
cli
sbb
div
sub
cmovg
cmp
jmp
jb
popa
stos
mov
sub
pop
pop
fcoml
xor
and
dec
mull
inc
adc
mov
adc
pop
cmp
inc
leave
ficomps
dec
pop
xchg
fdivr
aaa
fcoms
inc
push
lds
ficoms
fwait
dec
mov
adc
xchg
and
pop
fistps
mov
je
add
push
inc
jbe
xlat
adc
jg
mov
mov
push
in
scas
add
cmc
or
add
aad
and
fistl
aas
lea
cltd
adc
inc
xor
jae
pop
sbb
cmpsb
frstor
adc
icebp
bound
nop
rcrl
ret
stos
aad
and
or
int3
xor
and
insb
std
and
fwait
jno
push
xchg
mov
sub
add
mov
mov
inc
or
dec
nop
inc
das
mov
movsb
daa
jle
test
add
and
dec
pslld
dec
cwtl
and
cmp
out
outsb
movsb
inc
pop
rcl
xor
nop
add
add
push
add
pop
inc
xlat
pop
repnz
jle
mov
js
popf
shlb
sbb
test
push
push
ror
in
mov
or
cwtl
inc
frstor
adc
sub
movsb
xchg
shll
xor
fmul
jge
cmc
pop
sub
pop
mov
in
jo
or
add
cmp
xorb
test
orl
hlt
xchg
stos
lret
in
or
fsubs
push
push
jbe
push
in
fsubrs
mov
fidivrs
sar
mov
jge
cmp
es
mov
and
pop
mov
mov
jb
test
or
bound
into
ja
or
add
fwait
out
and
push
xlat
mov
in
popa
stos
mov
loopne
inc
cmp
in
fidivl
scas
dec
push
imul
adc
aam
lock
mov
aaa
lds
and
or
add
jmp
pop
pop
je
out
scas
cmpl
dec
int
push
data16
out
sbb
jb
loopne
pop
jb
sarl
adc
out
push
pop
ret
adc
daa
ror
call
stos
sub
mulb
pop
insl
jo
int
add
mov
sbb
lret
jp
jno
cmpsl
mov
mov
jp
inc
cli
jecxz
les
fsubs
jmp
mov
loop
shrl
aad
pusha
ficoms
movsb
mov
loop
sub
test
push
xchg
lds
dec
sahf
adc
hlt
call
push
adc
popa
or
push
cmp
in
cmpsl
xchg
adc
leave
mov
mov
push
in
fs
les
cmp
adc
adc
cmp
fimuls
mov
dec
jmp
push
sub
sbb
rcll
mov
xchg
stos
dec
sub
jmp
in
mov
sar
mov
jge
xor
sub
mov
or
pop
mov
mov
add
adc
push
int3
mov
ja
cmpsl
xchg
adc
leave
js
movsl
dec
mov
lahf
sub
mov
mov
movsb
sub
incl
in
dec
xor
jmp
sarl
or
aad
out
cld
sub
xchg
mov
xchg
jne
pop
pushf
push
dec
negl
gs
pop
inc
fidivrl
test
push
fwait
hlt
mov
ret
pop
inc
jbe
xlat
loop
in
std
add
in
sub
inc
jae
pop
or
clc
addb
popa
adc
aaa
in
loop
cs
fcoms
aaa
test
ret
xor
xor
cmp
mov
int3
mov
les
shlb
jle
outsl
ja
and
mov
stc
or
out
xor
loope
and
loopne
rorl
hlt
cs
pop
cld
add
cmpsl
mov
sbb
fdivs
sub
pop
subb
xorl
mov
ret
cmp
push
ljmp
xor
jmp
jmp
adc
jnp
and
sub
pop
ret
loope
inc
mov
into
out
in
pop
jmp
push
cltd
clc
pop
and
notb
dec
inc
xor
jl
xor
mov
into
in
gs
loope
and
jo
mov
cld
pop
or
cld
pop
add
adc
add
xchg
stos
lock
push
jno
push
btc
les
fs
push
push
inc
repnz
insb
push
in
shlb
in
fdivrs
out
adc
out
into
ja
mov
mov
mov
insl
sbb
pop
add
add
pop
sahf
sar
out
sbb
pop
lcall
sub
popf
out
jp
mov
mov
fadds
or
das
push
data16
adc
mov
or
xorb
inc
frstor
adc
frstor
fs
mov
std
push
into
out
pop
aam
ds
lret
ret
sub
call
into
or
imulb
xor
mov
les
aas
fsubs
cli
inc
fcompl
cld
pop
pop
fdivr
push
stos
pop
nop
xor
and
into
jecxz
add
xchg
sbb
clts
xchg
pop
cli
cwtl
enter
gs
jl
push
add
fs
ds
hlt
je
jbe
fs
xor
xchg
clc
aaa
jle
dec
adc
cmp
aam
mov
jmp
sub
push
movsb
mov
pop
arpl
pop
cld
repz
or
popf
cmpsb
arpl
hlt
mov
ja
cmpsl
test
xchg
outsb
in
gs
push
aaa
into
dec
mov
dec
push
in
cld
aas
mov
cmp
cmpb
ret
xor
nop
and
and
stos
jmp
sarl
or
fst
outsb
mov
fistl
mov
mov
popf
je
pop
push
shlb
xchg
into
pop
fistps
cmpsl
mov
mov
jp
iret
xor
stos
les
add
cs
pop
sub
add
mov
sbb
fsubrs
out
sub
pop
lods
mov
cs
and
into
out
pop
fs
adc
cmp
push
es
fidivs
mov
pop
nop
xor
sub
push
mov
push
push
cmc
inc
pop
mov
pop
sahf
xor
jle
out
push
fistpl
fs
push
out
xchg
into
sub
repnz
pop
insl
gs
inc
into
jle
test
in
and
jmp
aad
js
fdivr
pop
or
sbb
cltd
mov
jb
adc
and
rcrb
les
test
orl
les
fsubrs
into
sub
ja
mov
push
inc
jo
into
iret
fldenv
test
into
lods
imul
lret
mov
sbb
std
add
cltd
stos
jbe
xchg
es
lcall
cwtl
sarl
hlt
mov
frstor
adc
fs
mov
pusha
into
out
pop
adc
ds
or
ljmp
call
adc
or
idivb
xor
mov
data16
mov
adcl
cmpsl
jle
jl
lock
sub
add
out
or
pop
scas
fdivr
push
ljmp
into
jecxz
add
xchg
sarl
cmpsl
mov
mov
jp
iret
push
jecxz
les
adc
bound
in
enter
cmp
jmp
lods
daa
inc
inc
inc
loope
aam
pop
add
dec
test
gs
mov
and
dec
xchg
mov
into
xor
cld
fidivrs
xchg
scas
insb
movsb
mov
add
es
jle
xor
jle
aam
fmull
ret
cwtl
jge
pop
xor
jp
inc
test
stc
sub
xor
dec
stos
adc
popa
mov
imul
ss
adc
ds
mov
sbb
push
shrb
jmp
lock
inc
aad
and
fistl
sub
cs
in
sbb
jo
push
inc
loop
arpl
arpl
cld
repz
or
jle
cmpsb
arpl
hlt
mov
int
imul
aam
inc
inc
jbe
adc
shr
xchg
lret
clc
jmp
mulb
or
jno
data16
pop
es
lock
jle
xchg
cmc
fistpll
ljmp
pop
rcr
xchg
add
sbb
pop
sti
jno
addr16
loope
aam
push
gs
int3
bound
fwait
push
lds
xchg
push
dec
stc
push
into
ljmp
cmp
lock
jmp
aad
inc
test
movsl
add
dec
or
sti
add
in
imul
adc
stos
cltd
mov
mov
xchg
cltd
aas
incl
push
fsubrs
test
orl
les
fsubs
jle
das
ljmp
in
mov
push
inc
jo
or
gs
js
ja
mov
and
addl
inc
adc
or
jg
mov
ljmp
add
mov
fidivrs
xchg
scas
insb
movsb
mov
loop
cs
adc
test
loopne
mov
nop
adc
cwtl
adc
adc
lret
outsb
xor
dec
ret
adcl
mov
pushf
fmul
jge
mov
mov
cld
pop
bound
xor
xchg
add
push
insb
jmp
jnp
mov
jb
das
jmp
aad
rolb
cld
cmp
pop
and
mov
push
enter
inc
lahf
lock
jl
into
lods
imul
cmp
mov
ds
push
rol
add
cltd
stos
jbe
movsb
sbb
jbe
loopne
imul
hlt
mov
popa
or
push
adc
cmpsl
test
xchg
jp
scas
gs
pop
aaa
into
dec
mov
jae
in
mov
cmp
cmp
xor
test
xor
add
ljmp
jmp
sarl
or
fst
outsb
pushf
inc
jae
mov
or
add
and
inc
lock
stos
and
fwait
jno
jmpw
pop
es
add
das
mov
jle
sahf
cld
fsub
add
mov
stc
pop
push
inc
je
pop
mov
sub
popf
out
jp
std
sub
icebp
mov
jp
iret
cmp
stos
les
sbb
cs
pop
dec
add
mov
sbb
fsubs
out
sub
pop
sbbb
dec
sub
push
jmp
pop
dec
stos
fdivr
xor
rolb
pushl
pop
data16
xor
inc
jle
xor
jno
lds
sub
cmp
jns
orl
cwtl
clc
cs
ficoms
nop
shl
pop
fs
pop
insb
add
cmpsl
mov
sbb
fdivrs
jle
add
sub
pop
cmp
xorl
mov
repnz
clc
dec
adc
mov
sub
mov
adc
cmp
inc
push
add
dec
addb
flds
xchg
cs
or
test
dec
mov
cmp
cmpb
ret
xor
nop
and
and
stos
jmp
rcll
mov
imul
movb
ss
adc
adc
cmpb
shll
stos
mov
jmp
sub
shrb
adc
mov
cmp
jae
fwait
cltd
aad
nopl
call
scas
gs
testb
lret
ljmp
gs
loope
aam
inc
mov
cltd
mov
les
push
push
pop
fistpl
push
sub
pusha
cmpsl
mov
into
or
notb
shrb
loope
xor
push
nop
call
sub
xchg
jmp
mov
inc
sbb
in
mov
rcl
push
cwtl
rcr
pop
enter
test
pop
insl
gs
inc
into
jle
test
rcll
movsb
dec
ljmp
pop
sub
jo
pop
lret
jb
into
cmp
aad
jmp
adcl
cmc
and
fisttpl
sub
nop
dec
sub
jle
mov
mov
loopne
inc
jo
sub
gs
or
push
mov
mov
sub
cwtl
les
adc
stos
repz
dec
cmp
xor
and
into
xor
sbb
cwtl
mov
lea
out
sub
pop
subb
mov
ret
cli
push
jmp
in
dec
pslld
loope
loopne
stos
mov
sub
mov
adc
cmp
add
dec
addb
imul
aam
inc
aad
mov
jle
add
pushf
fs
out
insb
cld
pop
and
decl
cli
pop
nop
xor
and
into
jecxz
add
xchg
jge
jecxz
xchg
pop
cli
cwtl
movsb
les
gs
sub
dec
jecxz
cmp
pop
xor
fisubs
ret
xor
add
xor
jno
lds
sub
cmp
leave
sub
pop
jmp
sub
sbb
pminsw
popf
pop
arpl
pushf
hlt
cld
repz
addr16
stos
gs
xchg
mov
push
fistpll
ret
inc
int3
and
ss
jo
shrb
mov
mov
push
inc
jo
mov
lods
sarl
push
lea
mov
mov
test
jl
popf
addb
push
sub
push
aad
mov
push
in
es
mov
aam
insl
imul
adc
cld
cmc
aad
ss
repnz
bound
or
test
stos
xchg
dec
in
call
sahf
and
sahf
int3
cli
jno
cmp
cmpsb
fadds
push
or
mov
mov
jecxz
out
aam
cmp
xchg
xchg
xor
sbb
mov
dec
mov
mov
aam
dec
xchg
in
lahf
cmp
cld
stos
mov
movsb
shll
idivb
hlt
sbbb
xor
dec
pop
mov
pop
cmc
jp
ljmp
add
sbb
fwait
jo
add
ds
pop
jl
or
or
mov
out
outsb
cmc
daa
rcrb
and
fs
std
push
xlat
into
jb
scas
add
rcrb
xor
test
adc
push
clc
sub
sbb
aam
scas
sti
or
jmp
cmpsb
aad
jae
inc
cmp
pop
iret
jns
lcall
lods
movsb
sbbl
lods
mov
leave
test
or
cmc
push
pop
pop
sub
xchg
fnstsw
adc
daa
pusha
dec
jp
jecxz
std
add
daa
clc
insl
push
rcll
lock
enter
xor
test
xor
arpl
jo
push
jbe
shl
fldenv
pushw
xchg
jl
push
in
mov
push
or
adc
or
int3
sub
lods
mov
sti
testl
ja
pop
rcll
sub
dec
sub
lock
jp
pop
sbb
push
inc
push
cmpsl
rcrb
push
sub
xor
scas
inc
aad
dec
xor
cmp
data16
loopne
shll
mov
fistps
cmp
jecxz
sub
mov
add
add
xor
pop
mov
lcall
and
rol
inc
jp
add
mov
test
mov
imul
push
jecxz
mov
mov
mov
and
inc
roll
mov
dec
test
lcall
sbb
jae,pt
jb
fistpl
mov
xor
daa
and
add
insl
push
ss
dec
test
pop
cld
mov
xchg
aad
inc
ret
jle
inc
adc
xor
adc
fs
les
jb
cmp
and
or
inc
pop
inc
adc
and
inc
mov
lods
inc
mov
shr
push
out
in
pop
pop
aaa
lock
cmp
addl
test
xchg
jae
es
and
out
ja
mov
mov
jnp
mov
add
push
in
jne
lahf
popf
jle
mov
cmp
jns
rorb
add
sbb
mov
icebp
mov
sub
dec
sbb
sub
pop
xor
ret
ret
js
add
mov
insb
jo
add
push
mov
je
xchg
imul
jmp
inc
or
jg
xchg
les
jmp
push
aam
dec
dec
sub
cld
jge
and
mov
xor
mov
dec
sub
cwtl
xchg
or
xchg
cld
xor
js
jae
cmp
mov
pop
push
xchg
add
mov
ret
push
mov
push
call
and
dec
cli
pushf
fcmovbe
test
nop
out
dec
jae
dec
and
xchg
call
out
ja
bound
out
mov
inc
or
pop
adc
cmp
mov
aas
idiv
movsl
sub
jecxz
push
sahf
pop
xor
xchg
mov
ret
jmp
adc
shrl
sbb
adc
xchg
clc
or
lods
xor
into
or
hlt
push
or
pop
mov
or
pop
pop
into
mov
fs
rcrl
push
movsl
iret
adc
pop
push
sbb
rclb
mov
cli
sub
int3
xchg
ljmp
popa
lret
int
xchg
aas
jno
mov
fldl
adc
in
adc
sub
cs
pop
xchg
inc
stc
decb
ret
push
inc
cmp
push
sbb
movsl
lahf
js
mov
rol
sarb
shll
jnp
fcomip
mov
shl
xchg
movsb
out
pop
or
inc
in
jnp
add
mov
inc
lock
subb
xchg
xchg
push
adc
dec
add
pop
sbb
mov
adc
cwtl
or
mov
les
loopne,pt
subl
pop
add
pop
insl
push
call
mov
outsl
insl
outsb
sbb
inc
sbb
xchg
aam
mov
push
inc
push
mov
sahf
jns
inc
data16
pop
clc
incb
lea
pushf
jnp
popa
pop
dec
shll
sarb
or
sub
or
rcrl
lcall
leave
pop
fwait
je
mov
cld
pusha
xchg
comiss
repnz
dec
popl
outsl
push
lods
in
cmp
mov
ds
xchg
or
test
popa
jle
loop
fmuls
sbb
push
cmp
ja
sahf
mov
int3
inc
insb
or
ss
mov
adc
aam
mov
cs
jnp
jns
sbb
aaa
pop
jmp
data16
add
xchg
popf
or
lahf
xchg
inc
daa
sub
pop
mov
arpl
cmp
jp
push
rcrb
xor
mov
add
pushf
and
std
push
jnp
adcl
ss
push
es
jb
jle
int3
stos
mov
pop
test
movsl
les
bound
pop
mov
add
loope
pop
mov
scas
sub
pop
push
testb
popa
cmpsb
leave
les
pop
dec
dec
mov
out
out
lcall
js
mov
inc
test
adc
test
ret
fs
pop
into
cld
xorl
ds
repnz
enter
js
adcb
sub
cld
pop
jge
cmp
pop
jns
lods
aad
mov
add
inc
sahf
add
inc
scas
jge,pn
sahf
push
mov
testb
dec
sub
mov
pop
outsb
cltd
mov
xchg
dec
jo
hlt
xchg
test
push
mov
call
xchg
mov
ss
testl
mov
mov
jge
sbbl
jle
sub
jne
pop
ja
push
hlt
cmpsb
cld
mov
xor
sub
imul
sbb
js
xor
dec
push
div
pop
fiadds
and
mov
adc
push
mov
dec
sbb
stos
mov
movsb
rorb
push
inc
pop
loope
insb
fcomps
in
inc
test
mov
or
jmp
fcompl
inc
or
pop
shr
add
test
loope
mov
sbb
push
js
test
daa
sahf
outsl
fidivl
test
mov
inc
xchg
dec
dec
mov
icebp
inc
into
ja
icebp
pop
mov
and
lods
mov
inc
enter
call
dec
shrl
scas
aad
mov
inc
add
push
add
jge
stc
jb
sub
xor
outsl
loop
dec
push
mov
mov
adc
test
imulb
cmp
lahf
sub
sub
dec
push
or
dec
mov
mov
adc
push
test
dec
in
or
clc
cwtl
addb
aam
mov
pop
and
lea
mov
out
push
sbb
or
loop
popa
ljmp
mov
mov
rcrl
xchg
pop
outsb
cmpsl
sub
cltd
test
jmp
inc
sar
xor
xor
sub
mov
enter
fdiv
cwtl
push
orb
mov
or
retw
jns
ret
and
push
out
mov
leave
int3
filds
repz
out
pop
sub
jle
sub
jae
aad
rorb
fldcw
inc
xor
jb
pushf
test
aam
adc
mov
stos
jb
push
mov
sub
fimull
mov
arpl
test
gs
rcrb
and
dec
xor
cmp
popf
pop
xor
fxch
scas
push
inc
hlt
out
inc
pop
xchg
and
push
jl
std
int
out
or
fisubrs
jle
add
xlat
lea
outsl
or
aad
mov
ds
sub
popf
push
push
lcall
ret
roll
or
sbb
sub
loope
push
jmp
and
jo
cmp
mov
inc
and
xchg
jo
sub
xor
leave
pop
pop
pushl
mov
shrb
or
fisttpl
xchg
lock
lock
sub
adc
out
cmp
out
dec
loope
in
dec
xorl
int
sub
mov
rorb
mov
pop
mov
add
fisttpl
stos
insb
jmp
and
mov
aaa
cltd
inc
sub
cmp
mov
jl
and
push
mov
inc
push
ret
lret
fnsave
cmc
ret
or
mov
out
push
sub
sub
dec
push
add
call
cmp
sub
mov
xor
jmp
out
mov
cmp
rclb
sub
xchg
push
fdivl
jl
pop
dec
fcomp
aaa
jbe
cmp
stos
cltd
sub
addl
fstpt
lods
add
mov
sbb
mov
or
dec
or
mov
pop
flds
mov
jl
gs
jge
out
jmp
aam
xor
and
inc
int3
cmp
out
movsb
fmul
dec
inc
push
pop
into
icebp
jns
call
xchg
dec
and
lret
add
test
adc
mov
xchg
insb
mov
jo
arpl
aas
cmp
imul
inc
xor
mov
lea
arpl
repz
lea
ret
xor
cmpsb
jns
aaa
xchg
cmpsl
inc
in
xor
js
orl
outsb
cmp
xor
outsl
andb
cmp
dec
jmp
shrb
jle
out
push
dec
hlt
sub
ja
shrl
cld
xor
inc
cmp
push
test
cmpsl
call
ljmp
cmpsl
ret
dec
push
jbe
xor
ret
out
or
xchg
or
sbb
xor
lea
ja
outsb
nop
aam
jmp
and
in
dec
sti
out
pushf
or
call
mov
int3
sbb
outsl
clc
jb
add
in
addr16
rorb
movsl
scas
loop
mov
add
rcrb
fdivr
shr
xor
adc
xchg
sub
mov
fcmovb
pushf
or
push
fwait
mov
in
dec
xor
fucomip
stc
push
in
push
xchg
cmp
push
in
ds
push
loope
adc
test
sbb
ds
iret
cmp
jne
pop
and
and
enter
shr
je
into
call
addr16
sub
jbe
xchg
sbb
in
mov
aaa
fldt
add
rclb
fiadds
scas
fdivs
cmp
mov
icebp
ret
mov
jg
pusha
stc
mov
fistl
mov
or
ds
sub
dec
imulb
hlt
loopw
repnz
aam
cmpsl
pop
mov
mov
je
insb
xor
ja
jb
aam
movsl
cmpsb
inc
pop
xchg
pop
sbb
ljmp
pop
pop
in
sbb
or
add
jns
dec
adc
je
jmp
test
cmp
mov
fdivs
cmp
and
mov
add
lcall
ja
hlt
and
in
sub
push
cltd
inc
jo
sarl
iret
and
mov
rorb
sub
das
mov
in
lods
nop
sub
xor
pop
sbb
and
lahf
lahf
add
jle
lds
sbb
dec
enter
bound
jb
sbb
stos
mov
mov
inc
xor
xlat
mov
fstl
outsl
jmp
les
shr
sbb
or
cmpsl
sbb
and
push
cmp
outsb
and
or
push
or
add
cmpsb
test
adc
push
les
aad
push
imul
mov
mov
push
mov
or
pop
push
and
adc
pushw
dec
xchg
inc
sbb
ja
sub
mov
sub
add
std
jecxz
ljmp
lock
cmp
rcrb
pop
ja
mov
out
xor
fsubl
cli
ljmp
leave
pop
into
mov
aam
cld
jns
adc
out
mov
pushf
test
repz
pop
mov
pop
lea
add
stos
xlat
sub
mov
nop
fisubrs
ret
push
cmpsl
pop
pop
mov
mov
into
icebp
inc
pusha
daa
jmp
inc
push
add
and
jmp
lds
xor
bound
es
sbb
repnz
sub
orb
int
pushf
je
pop
cwtl
inc
call
aam
jl
iret
enter
mov
mov
xchg
hlt
mov
mov
mov
cmp
jle
pop
pop
repz
daa
push
cmp
or
lret
push
push
mov
filds
xor
aas
sub
insb
jmp
sbbb
xlat
imul
and
loop
cwtl
mov
js
cwtl
cld
lods
into
in
mov
sub
mov
mov
test
sbbl
and
sbbb
pop
outsb
pop
psrld
mov
js
pop
shll
cmpsb
test
mov
loop
inc
lea
sub
lahf
sbb
jnp
decb
out
fadds
rcrb
sbb
jb
adc
jmp
push
mul
mov
pop
cmp
inc
or
cmp
ret
cmp
push
push
pop
xchg
lock
or
int
adc
dec
jmp
inc
jl
test
lret
daa
pop
jnp
je
dec
ja
pop
insl
add
test
call
daa
sbb
sbb
inc
fimuls
jne
aad
call
incb
scas
lods
div
mov
out
loopne
xchg
stos
mov
jnp
jmp
aam
inc
idivl
inc
stos
and
pop
pop
and
aad
ret
popa
add
je
mov
fiaddl
mov
lods
add
mov
xchg
push
ljmp
lds
xor
mov
popf
push
xor
sub
fcmovnb
fsubl
js
or
call
cmp
insl
push
dec
into
in
hlt
test
mov
xchg
into
popa
mov
fisubl
pop
mov
or
xor
jl
stos
clc
dec
mov
jmp
jo
cmp
rcrl
fbstp
aad
fs
or
jo
pop
repnz
push
cmpsl
pop
add
cmp
push
add
daa
sub
xchg
inc
mov
out
mulb
out
push
xlat
pop
sub
pop
mov
and
gs
dec
jmp
inc
in
fsub
dec
shrb
int3
mov
jecxz
out
fcompl
outsb
cld
xlat
dec
mov
dec
mov
pop
mov
xchg
scas
mov
andb
adc
adc
dec
inc
mov
test
or
movsl
jge
dec
dec
leave
xchg
mov
mov
in
fnstcw
lods
mov
push
push
sub
cmpl
js
push
and
push
pop
jge
push
push
leave
adc
jle
scas
push
in
ficoms
negb
leave
pop
xchg
push
ja
test
pop
out
sub
out
je
insb
rcr
mov
andb
dec
aam
xor
syscall
flds
push
cld
mov
or
call
cmp
fsubrs
test
push
aas
xor
flds
push
sbb
pusha
shrb
aas
rclb
push
jae
int
mov
inc
scas
jnp
xchg
or
lret
nop
xor
mov
scas
das
pop
in
pop
adc
sbb
ljmp
mov
clc
or
sub
jecxz
nop
idivb
or
inc
mov
enter
les
inc
add
test
mov
pop
and
in
aad
rcrb
scas
push
xor
inc
mov
clc
pusha
add
mov
outsl
pop
sub
lock
xlat
fcmovb
push
add
in
icebp
mov
in
lcall
rcrb
push
adc
aas
es
stos
fwait
mov
adc
xor
addl
or
cwtl
inc
and
sar
inc
repnz
adc
bound
lds
cld
or
mov
pushf
int3
les
fidivl
push
pop
cli
js
jne
xlat
arpl
jne
cld
xlat
jmp
mov
jbe
xorl
loope
insb
push
inc
jo
pop
lea
popa
in
push
mov
in
add
xor
push
test
fimull
xor
xor
mov
sub
and
hlt
call
xlat
push
aad
sub
scas
pusha
sbb
mov
cwtl
iret
cmp
aaa
add
insb
fdivl
xchg
mov
xchg
aam
xchg
divb
cli
mov
fdivrl
or
aas
sbb
cld
and
cmp
loopne
pop
in
iret
popa
clc
or
add
adc
aas
fwait
aaa
fnstcw
movsl
test
xor
dec
push
mov
in
or
push
bound
loop
jmp
outsl
aad
aad
mov
mov
test
movsb
jg
jne
mov
cmc
int
xchg
nop
xor
dec
mov
outsl
mov
push
in
push
inc
jnp
add
leave
add
cmpsb
dec
mov
cmp
add
sub
add
sub
pop
enter
lea
in
push
mov
int3
add
pop
pop
fwait
sbb
or
jbe
bound
dec
les
sub
xchg
adc
ljmp
out
data16
call
lea
aam
inc
movsl
mov
mov
add
mov
mov
dec
sbb
push
out
mov
inc
aam
and
xlat
sbbl
hlt
add
adc
mov
jo
movsl
add
mov
test
pop
jb
rcl
push
out
push
pop
test
out
sub
mov
sbb
in
jbe
add
sub
xchg
repnz
cwtl
or
xchg
lcall
fucompp
push
xchg
pop
sahf
loopne
shlb
pop
xor
fdivrl
sub
repnz
and
in
jo
xchg
stos
fcmovbe
orb
test
aas
mov
jb
call
adc
pop
rcl
lock
sub
dec
fdivrs
xlat
test
mov
decl
mov
imul
inc
dec
pop
xchg
jge
pop
enter
fwait
adc
mov
pusha
nop
sub
out
icebp
sub
sub
mov
outsl
int3
adc
es
jmp
lock
or
sub
dec
xor
pop
xor
outsb
in
mov
ficompl
pop
jo
jg
cmp
lea
shrl
test
inc
push
ss
outsb
in
lcall
ret
cwtl
jne
loopne
dec
mov
jle
fidivrl
movsb
pop
hlt
sub
repnz
int
mov
sub
xor
outsl
sbb
jo
bound
pop
bound
cld
or
jb
dec
cs
sbb
mov
cmp
test
hlt
add
loop
outsb
in
lcall
inc
daa
push
jge
add
mov
orl
rorl
les
or
jg
or
jbe
sbb
cmp
xorb
dec
adc
cmp
fimuls
add
in
flds
or
push
jb
movsb
dec
enter
decl
jae,pn
pop
out
outsl
cli
sub
add
push
push
cmp
xlat
xor
push
cmp
push
push
outsl
leave
jbe
arpl
stos
fcmovb
out
push
pop
rclb
repz
icebp
push
into
and
cltd
inc
mov
xor
setl
pusha
es
sbb
mov
out
loop
in
cld
jl
subb
test
jl
pop
pop
jae
ret
repnz
xchg
inc
out
lods
call
fwait
es
clc
mov
adc
lods
mov
push
aaa
movsl
test
sub
daa
scas
xchg
lods
movsb
movsl
inc
inc
add
into
mov
xorb
add
dec
xor
push
fisubrl
xchg
jno
jae
add
xchg
push
adc
xor
dec
xlat
test
shrl
mov
seto
sti
or
push
ret
inc
into
pop
cmpsb
inc
sub
repz
add
shrb
push
or
push
adc
arpl
ljmp
repnz
test
ja
or
in
idivl
cmpsb
dec
mov
inc
mov
add
xchg
sahf
ds
imul
adc
popf
mov
cltd
lock
mov
push
rcll
fisubl
out
pushl
xlat
jmp
shrl
fucom
outsl
or
sbb
mov
mov
lods
ljmp
aas
mov
popf
mov
xorl
adc
add
jo
push
aad
add
popf
out
jp
push
mov
lret
jg
xchg
and
mov
nop
ret
mov
push
ss
mov
push
lea
out
sub
pop
mov
les
sub
xlat
xchg
adcl
popl
jbe
adc
push
call
sub
popa
or
push
mov
sub
mov
nop
ret
es
je
dec
inc
lahf
sahf
mov
dec
push
cmp
in
xor
push
adcl
adc
pusha
sub
push
fs
jbe
scas
inc
daa
inc
movsb
add
add
and
mov
arpl
adc
mov
sbb
mov
cmp
jns
dec
inc
adc
rcrl
mov
mov
xor
jmp
andb
sbb
add
out
pop
cmp
sub
ret
mov
lret
sbb
icebp
mov
add
mov
xlat
push
sahf
adc
shll
cmp
shll
xor
jb
loopne
pop
xchg
xor
xor
adc
or
lock
int
push
mov
jno
rolb
ljmp
push
inc
jmp
push
adc
lds
push
test
inc
jmp
mov
inc
adc
push
je
xchg
shl
out
loope
cmpsb
mov
test
push
cwtl
sub
hlt
repnz
xor
xorb
cmc
cld
jle
push
jp
mov
ret
cmpsl
push
pop
adc
ss
popf
je
aas
sahf
call
in
hlt
pop
mov
push
inc
adc
dec
stos
insb
mov
sbb
enter
jb
icebp
mov
mov
xchg
jmp
pusha
repz
daa
movsl
xor
ss
in
inc
fwait
push
pop
andl
sub
adc
adcl
addb
repnz
dec
imul
xchg
and
loope,pn
jo
in
dec
push
loopne
xlat
push
lcall
ret
xor
hlt
es
push
clc
test
shrb
mov
outsl
loop
sub
push
xchg
sahf
mov
adcb
aam
adc
lret
mov
lahf
movsb
arpl
push
stos
adc
or
pushf
movsb
test
shrb
loope
xor
pop
cmpb
subl
adc
and
insb
clc
and
push
jne
pop
inc
jns
aam
mov
dec
adc
jp
xor
push
lcall
scas
icebp
push
xor
ds
shrl
cld
fnclex
cmpsb
adc
inc
dec
mov
outsb
xor
insb
out
ljmp
sbb
shl
jl
clc
push
sub
sub
pop
js
shll
mov
dec
out
cmp
mov
sub
addb
stc
setns
mov
mov
mov
pop
jo
or
sub
cmpsb
jg
bnd
ljmp
mov
dec
mov
mov
aam
inc
xor
fcoms
and
pushf
mov
dec
sbb
mov
scas
es
pop
loope
aaa
orb
fistps
idivb
popf
je
cmp
xchg
pop
test
xchg
sub
outsb
idivl
or
push
mov
sbb
inc
jecxz
les
jl
mov
dec
mov
cmp
push
dec
mov
daa
push
pop
mov
push
mov
mov
pushf
and
xchg
cs
outsb
mov
shr
out
loopne
jmp
sub
bnd
xor
sbbb
imul
das
and
data16
test
push
sbb
or
cld
lret
pusha
ror
cmp
sub
sbbb
adc
mov
pop
mov
push
hlt
faddl
cmp
xchg
cmp
les
in
loope
addb
movsl
add
xchg
fcompl
pop
fcoms
or
add
inc
add
gs
xchg
mov
add
sarb
es
enter
add
test
mov
push
jb
in
std
jl
repz
mov
mov
iret
sub
mov
cmp
mov
sub
sbb
iret
insl
andb
nopl
jo
dec
jmp
mov
mov
xchg
stos
dec
mov
adc
int3
mov
mov
and
mov
mov
add
push
ja
lret
mov
inc
mov
jo
inc
lock
xchg
dec
shrl
int3
or
cltd
clc
repnz
idivb
dec
fdivl
mov
pop
fdivrs
scas
lock
pushf
pop
push
lods
addr16
jecxz
cmc
roll
lret
pusha
insl
cmpsb
es
mov
sahf
add
sbb
movsl
add
inc
loope
fsub
push
clc
mov
mov
out
lods
arpl
sub
pop
mov
sar
pop
sub
in
insb
out
mov
loope
addr16
mov
cwtl
addr16
jp
fiaddl
test
sahf
sub
inc
jae
aas
xchg
call
repnz
out
test
inc
ret
in
sub
jg
xor
inc
je
out
mov
test
lret
mov
dec
in
imul
mov
xchg
mov
cmp
xchg
jge
les
nop
push
add
xor
fs
xchg
add
jnp
mov
inc
jl
mov
stos
sbb
mov
cmc
xchg
mov
lret
leave
call
mov
add
in
xor
cld
inc
adc
xor
push
hlt
test
bound
xchg
sahf
xorl
xchg
arpl
lea
dec
scas
and
jp
mov
mov
daa
movsb
pushl
jae
mov
and
leave
adc
ret
pop
je
pop
sub
add
mov
fmull
dec
jp
inc
inc
mov
pop
leave
repnz
adcl
add
xlat
push
push
ret
adc
or
sbb
pop
aad
adc
test
lock
jp
jae
es
sbb
xchg
push
pop
adc
int
mov
bound
shll
ds
sbb
adc
jecxz
adc
jl
jnp
mov
enter
addr16
sub
jg
mov
or
out
rorb
repz
push
cmp
fsubs
and
test
bound
inc
jnp
xchg
lea
in
xlat
mov
test
gs
push
mov
sub
test
push
aaa
mov
test
sub
test
ret
insb
jmp
xchg
cmp
in
adc
push
add
mov
mov
fwait
lods
insb
repnz
fsubs
or
in
pop
pop
int
repnz
adc
mov
inc
dec
aam
jbe
cmp
imul
xor
stos
arpl
cmpsl
push
aam
push
mov
addr16
sbb
decl
cwtl
imul
jo
xchg
cmp
mov
xchg
push
pop
stos
jno
jbe
pusha
sub
in
sub
int3
mov
push
sbb
movsb
sub
push
fisubl
pop
loope
mov
imul
ret
std
cmpsl
xchg
aad
xchg
mov
dec
scas
mov
andb
pop
cltd
inc
ss
cli
data16
mov
mov
ficompl
jne
enter
andl
sbb
mov
imul
mov
cs
dec
jnp
lock
adc
lret
add
mov
pop
xchg
fldl
xor
cmp
nop
add
cwtl
push
push
cmp
pop
testl
in
inc
jg
data16
sub
pop
xchg
inc
repnz
ja
incl
and
pop
pop
aaa
add
xchg
aam
mov
aas
push
or
loope
inc
ja
mov
mov
inc
push
sbb
pop
loopne
mov
cmp
xor
jns
aad
out
fcoml
cmp
mov
orl
mov
stos
cmpsb
inc
add
xor
pusha
imul
push
mov
inc
orb
mov
ffreep
xlat
ret
movsl
mov
dec
inc
arpl
add
scas
adcl
xchg
subl
jl
sub
hlt
lcall
and
mov
dec
inc
pop
add
inc
mov
out
jbe,pt
mov
inc
bound
lds
sub
ljmp
cmp
pop
inc
notl
and
pusha
outsb
dec
mov
mov
ret
cs
push
add
adc
pop
adc
ss
jmp
cmp
enter
ret
sbb
xchg
test
push
or
lcall
icebp
dec
sbb
sub
imul
add
add
lret
lock
roll
rcl
jno
lea
xor
lods
sbb
cwtl
xchg
pop
popa
jl
in
adc
icebp
roll
icebp
jbe
and
mov
in
ficomps
xchg
mov
ret
mov
or
cmovle
jmp
cmp
xchg
pop
ds
sub
cmp
cmp
pop
jnp
nop
aas
xchg
add
mov
loop
push
mov
jmp
and
insl
int3
jb
mov
xor
and
cltd
sbb
xor
add
cmp
pop
sub
andl
hlt
cld
sbb
mov
pusha
and
or
jo
outsl
shrl
jle
adc
mov
xor
inc
data16
ret
adc
jle
imul
mov
or
ret
adc
mov
repz
xor
imul
lock
cwtl
into
lcall
or
stos
inc
mov
mov
or
iret
loopne
movsl
cmp
test
adc
push
push
out
lret
fimull
cmp
leave
push
mov
push
dec
adc
ret
imul
jl
cltd
fmuls
lea
loop
ret
mov
pop
loop
les
lds
mov
jns
arpl
add
stos
test
nop
xchg
out
popf
fidivl
pop
out
mov
pop
pop
pop
add
sti
add
cmp
iret
add
pop
xor
call
ror
clc
shll
add
add
cmpsb
loope
sub
stc
fisubl
movsl
std
lcall
pop
jns
sbb
sub
or
mov
mov
jecxz
mov
aad
sbb
xlat
push
js
outsb
jns
fwait
in
xchg
push
out
jl
xchg
rcll
mov
mov
ret
hlt
repnz
dec
push
jecxz
in
push
add
fdivl
or
dec
mov
mov
sti
sub
aaa
and
sbb
dec
js
push
lods
xor
int3
test
push
lea
rcll
sub
and
cli
bound
iret
mov
mov
jg
shr
enter
xor
repnz
mov
cwtl
lret
push
sbb
ret
pop
stc
aaa
in
xor
es
neg
adc
sbb
outsl
push
std
push
xor
rorb
fldt
mov
sub
daa
mov
leave
mov
pop
arpl
cmpb
push
pop
ret
push
mov
push
push
jge
mov
xchg
sub
ds
fcomps
jl
mov
fs
and
dec
or
push
je
test
mov
cmp
pop
cmp
mov
bound
iret
push
loope
cmp
mov
mov
lret
inc
and
movsl
cmpsl
jg
pusha
inc
lock
repz
sub
xchg
fmull
lods
xor
rclb
das
sbb
dec
pushf
call
dec
cmpsb
and
hlt
sbb
out
lea
mov
ss
mov
mov
je
pop
call
mov
jle
mov
push
dec
cwtl
shrb
pushf
fdivr
pop
out
cld
pop
cli
sbb
jbe
iret
mov
jae
xchg
push
push
sbb
push
mov
mov
jns
cmp
jle
bound
pop
js
mov
pop
push
push
and
sbb
dec
sub
addb
add
mov
fisttps
imul
ljmp
mov
xor
nop
push
mov
js
imul
push
nop
pcmpeqw
fcomip
mov
and
sbb
pop
add
pop
pop
cmp
push
or
inc
imul
and
aaa
adc
mov
enter
cld
repz
mov
or
stos
hlt
cmp
cmp
inc
jne
ljmp
xchg
outsb
clc
test
leave
lock
cmp
mov
pop
add
push
adc
sbb
xor
cmp
inc
inc
pop
xchg
es
jg
shrb
xchg
inc
in
cmp
sbb
mov
pop
or
push
push
ret
push
dec
pusha
pop
pop
pop
and
out
xchg
bound
add
adc
mov
cmp
cmpsb
insl
jg
add
jno
bnd
add
cmc
mov
ficomps
arpl
mov
repnz
sub
mov
cmp
push
in
mov
rorl
cmp
push
inc
out
push
pop
insl
mov
inc
xchg
pop
pop
mov
push
test
fldcw
jne
adc
imul
mov
int
adc
les
sub
lds
sub
and
jmp
fstps
xor
fistpl
fcmovne
adc
fcomps
je
rol
std
pop
add
insb
sbb
inc
add
push
mov
push
dec
cld
xchg
push
aaa
in
repz
and
int
jo
jnp
xor
cmp
cmp
fdivl
arpl
fiaddl
sbb
pop
aad
mov
jb
into
xor
iret
adc
dec
adc
push
adc
loopne
ja
push
jle
lea
push
ficoms
dec
sar
push
sub
push
test
or
popa
enter
mov
cmp
or
sbb
cmp
aaa
in
sub
push
ja
ret
and
nop
cmpsl
xorb
cltd
cmpsl
lock
jmp
out
call
push
pushf
sub
in
orb
inc
ljmp
sarb
mov
call
sahf
push
ret
or
cmp
mov
dec
loop
loop
mov
xchg
movsl
lret
jmp
mov
mov
add
pop
andl
xchg
nop
shll
test
mov
cmp
mov
repz
fsubrs
dec
dec
je
jg
in
adc
loopne
rolb
xchg
fcompl
outsl
xchg
push
out
ja
mov
sbb
xchg
ss
inc
clc
push
rcrb
mov
scas
mov
lods
adc
cmp
cmp
push
and
or
int
daa
push
inc
mov
test
loop
cli
frstor
inc
cmc
or
fistl
cltd
mov
hlt
jnp
xor
shll
insb
rcll
xchg
cld
cmp
in
cmp
pop
jno
mov
mov
inc
sbb
sub
ficompl
aad
jl
cmpsb
xor
subb
mov
jno
cmp
pop
or
int3
dec
sub
je
dec
fwait
pop
sbb
pop
inc
cmp
jle
push
lds
lods
mov
dec
or
or
and
clc
das
fwait
sti
adc
loopne
movsl
mov
cmc
inc
cmp
or
jmp
xchg
xor
jp
dec
mov
jge
imul
pop
adc
jg
mov
xchg
sti
dec
sub
xchg
sub
inc
xor
xlat
and
sbb
ja
das
cmpsl
mov
int3
adc
mov
icebp
sbb
cmp
lret
negb
rorl
add
pushf
cld
jb
test
dec
mov
out
adc
or
les
mov
or
mov
fsubrs
mov
cmp
jae
xor
and
das
adc
sub
pop
stos
and
scas
cwtl
jbe
clc
sti
call
imul
push
mov
push
sbb
push
jmp
inc
in
mov
pop
daa
jbe
push
cmp
test
lcall
sahf
das
jmp
mov
mov
in
adc
add
repnz
adc
push
jmp
add
loope
mov
and
stos
lods
jge
adc
mov
sbb
popa
test
or
in
push
pop
add
nop
fimull
es
adc
push
xchg
shrb
adc
sub
mov
les
mov
test
mov
scas
mov
fildl
imul
addr16
adc
rcrl
cwtl
xchg
inc
xchg
lret
pop
jg
shlb
mov
jne
cld
inc
pop
adc
call
test
ja
aam
fidivrs
cs
jno
enter
fs
sarb
enter
jmp
mov
add
cwtl
fisubl
das
pop
xchg
push
icebp
sbb
jo
xchg
in
xchg
adc
ret
cmp
enter
lret
sub
or
aad
pushf
cld
push
mov
scas
mov
daa
rcrl
cmp
mov
hlt
fsqrt
enter
stos
inc
pop
pop
pop
popa
or
in
ficoml
shll
add
lock
mov
mov
or
add
dec
sbbb
jno
outsl
xchg
ficompl
pop
shr
or
adc
loop
loop
sbb
adc
add
dec
cmp
cld
lret
sbb
mov
jno
xlat
or
pop
inc
hlt
das
bound
rcll
mov
enter
call
in
push
add
cmp
int3
xor
fcoml
sbb
jmp
in
ret
mov
popf
xchg
jne
pop
in
aaa
or
pop
xor
jns
pop
mov
mov
rcl
pop
and
out
fadd
push
or
mov
addl
cmpb
xchg
arpl
insb
fdivs
dec
in
out
jg
xor
les
ja
test
popa
dec
stos
mov
ret
hlt
mov
outsb
mov
stc
push
dec
mov
sbb
ret
push
cmp
jb
mov
dec
stos
add
bound
xchg
or
sub
jl
lock
inc
and
insb
mov
aas
mov
push
scas
jo
inc
mov
pop
and
or
aam
imul
pop
lahf
or
fs
movl
movsl
js
out
cmpsb
ret
fs
jge
test
test
loopne
stos
sbb
push
iret
mov
and
je
int3
les
pop
push
fiadds
mov
fcoms
mul
adc
test
sti
jecxz
xorl
sub
pop
jmp
pop
adc
loope
shll
movsb
mov
notb
out
mov
or
inc
shlb
jecxz
adc
adc
pop
out
mov
test
and
sbb
mov
adc
jp
subb
mov
and
push
add
inc
mov
add
loop
sub
and
mov
or
cmp
ljmp
cmc
push
shll
leave
push
neg
jge
xlat
push
movsb
fnstenv
pop
sub
lret
cmp
popl
jmp
mov
pop
inc
je
test
je
pop
push
ficompl
lock
leave
push
ja
mov
loope
std
scas
sub
mov
cmp
mov
pop
ret
std
sbb
add
cmp
sbb
lds
xchg
lret
loopne
mov
lods
pushf
or
rolb
inc
fimull
inc
fs
cmp
test
rcrb
mov
sbb
and
int
or
aam
cli
push
dec
pop
jmp
mov
inc
int3
inc
les
mov
adc
dec
push
shlb
sarb
aad
lods
cmp
jg
add
mov
pusha
cmp
push
clc
and
sbb
sbb
xlat
out
or
in
adc
icebp
push
push
pop
cs
loopne
enter
ret
adc
lcall
negl
pushf
shll
push
inc
or
test
mov
pop
or
mov
mov
scas
push
loopne
adc
bound
es
jecxz
lds
mov
test
loopne
jnp
clc
sti
mov
mov
les
negb
outsb
fsubrl
fs
pushf
test
add
insl
push
setb
push
fildll
mov
das
leave
pop
data16
xchg
mov
mov
add
dec
sub
xor
popa
test
scas
cmp
stc
das
pushf
rolb
cmp
add
ja
cmpsl
xchg
pop
adc
pop
hlt
push
cmp
jg
scas
shlb
andl
push
cltd
adc
jmp
pusha
out
dec
inc
push
loop
cli
dec
push
xor
mov
repz
and
xchg
pop
int3
xor
inc
imul
jbe
lods
loopne
push
push
mov
mov
push
cmpsl
in
out
sbb
or
insb
or
in
or
shl
cmp
pusha
adc
mov
sti
fisubrl
add
mov
mov
inc
sub
push
mov
jle
or
cmpsl
inc
xchg
cld
mov
les
les
jns
mov
sbb
inc
loopne
xor
mov
mov
mov
sbbb
push
mov
add
push
xchg
add
popa
adc
jl
jmp
inc
clc
sub
mov
jp
fwait
lods
cmpsb
pop
xchg
jo
insb
mov
mov
jb
pusha
adc
sbb
jmp
pop
or
jo
daa
push
lea
mov
outsb
sbb
xchg
pop
scas
aaa
dec
jnp
fdiv
cs
sub
sub
sarl
xor
xchg
fsubrs
or
or
cmp
push
ja
lret
loopne
sbb
jae
jns
roll
je
or
jno
xchg
les
hlt
addb
adc
dec
movsl
out
push
mov
pop
lcall
pusha
jl
out
or
imul
fidivl
add
repnz
jne
mov
lcall
xchg
clc
pop
fcmovnb
imul
add
or
dec
test
jb
jl
sbb
xor
cmpb
lcall
out
fimull
hlt
cmp
xchg
pop
mov
fsubr
out
lods
inc
mov
test
jmp
leave
push
outsl
mov
push
and
lods
in
mov
fs
sarb
dec
es
inc
out
push
sahf
sbbl
sub
mov
clc
mov
or
clc
bound
popf
ljmp
jge
enter
xlat
lahf
pop
lea
decl
fisubrl
imul
mov
popf
pushf
fstl
inc
push
mov
bswap
push
movsb
mov
and
aam
push
int
aad
mov
test
mov
sbb
inc
cld
mov
das
mov
jnp
sbb
fwait
cmp
push
adc
dec
out
push
sub
shlb
rorl
jae
js
push
jmp
xor
sti
cmpsl
ret
or
rolb
pop
or
scas
test
push
mov
outsl
and
inc
mov
mov
cs
dec
das
pusha
add
dec
test
sub
add
pop
push
rcll
int3
mov
sbb
mov
out
dec
inc
sbb
sbbb
mov
lods
fs
mov
mov
add
cltd
jne
xchg
inc
sub
dec
cmovg
cld
add
frstor
rol
ds
call
pop
ret
in
mov
add
popa
jp
ljmp
add
cmp
jg
push
mov
mov
dec
dec
adc
mov
arpl
pop
mov
out
xchg
mov
xchg
push
sub
lock
imul
fwait
in
lods
mov
mov
mov
mov
js
push
xor
mov
sti
cmpsl
mov
xchg
and
jl
jmp
inc
loop
fisttpll
test
xchg
xchg
mov
jmp
mov
jle
aad
test
and
out
hlt
shrb
dec
inc
popa
js,pt
xor
xor
cmp
gs
loopne
scas
es
sub
movsb
or
fwait
mov
adc
mov
pop
out
repz
daa
xor
bound
out
push
and
lods
sbb
inc
aad
call
idivb
and
sbb
popl
mov
in
mov
pop
cwtl
jmp
in
xchg
cld
insl
stos
xchg
and
mov
les
xchg
jge
xor
insl
in
xchg
jmp
mov
mov
pop
repnz
lods
sub
loope
addl
adc
dec
lret
andl
and
fildll
aad
or
sbb
mov
pop
popf
nop
xchg
mov
pop
sub
xchg
out
fdivrs
lock
sbb
popf
xor
adc
ror
xor
out
mov
daa
into
clc
mov
js
ret
enter
mov
pop
xlat
jmp
sbb
sub
pop
mov
test
push
faddl
and
shll
ja,pt
jnp
sub
xchg
insb
lods
dec
test
or
stos
out
int3
insb
jl
rol
test
cmpsb
and
and
cmpsb
inc
push
sarb
xor
bound
xor
sbb
push
ret
adc
popl
icebp
inc
popa
push
in
enter
xor
hlt
fmul
stos
movsb
xor
out
mov
fcompl
jle
int3
mov
outsl
repnz
mov
mov
mov
and
jmp
mov
je
fwait
sub
jecxz
push
dec
aad
sub
outsb
mov
xor
push
push
jb
shll
aam
fidivrl
jp
fcompl
lret
add
cmp
lods
rorl
ss
or
test
mov
cwtl
push
push
pop
cmp
xlat
testl
dec
int
fs
test
nop
pushl
ss
mov
jg
or
in
in
pop
xchg
or
adc
add
dec
adc
mov
push
cmpsb
repz
iret
push
ljmp
and
js
pop
push
rorl
inc
push
add
imul
fs
aas
imul
cmp
idivb
xchg
mov
ljmp
or
jl
inc
jne
test
cmpsl
xchg
adc
test
sub
sbb
inc
xlat
mov
sahf
ret
dec
add
imul
cmpsl
stc
lahf
es
pop
ret
inc
shll
fcoml
sahf
jl
push
xchg
das
jo
xchg
mov
popf
pop
jbe
ss
ficompl
push
iret
stos
or
cmp
cmp
jmp
mov
mov
inc
or
movsb
roll
fidivl
test
lock
xor
adc
test
mov
xor
test
lock
push
leave
mov
jl
pop
ret
js
and
adc
and
pop
cwtl
inc
in
mov
inc
sub
das
jo
scas
dec
je
nop
jmp
pusha
add
das
mov
xchg
dec
or
pop
mov
outsl
rclb
add
add
jl
loop
adc
out
cli
test
sub
out
add
ret
inc
adc
inc
mov
cmp
fnsave
xor
ljmp
clc
xor
ljmp
mov
outsl
stos
inc
xchg
add
adc
jle
mov
mov
dec
xor
retw
inc
ret
ljmp
cmpsl
adc
sub
xchg
inc
or
loopne
mov
sub
or
or
fwait
and
jae
and
stc
sahf
pushf
ret
hlt
scas
int3
sub
rcrl
test
mov
in
outsl
xor
in
xchg
inc
cmpsb
adc
in
mov
dec
test
mov
cmp
les
xlat
inc
xor
data16
xchg
popa
and
push
sub
jp
loope
pop
push
mov
subl
dec
pop
cld
pop
sahf
xchg
in
in
ss
mov
sub
push
aad
push
outsl
fs
push
cmp
stc
cmp
nop
repnz
lock
stc
dec
addl
je
hlt
sbb
shlb
xor
cwtl
cmp
mov
out
inc
jne
stos
aam
fisubrl
adc
mov
aad
jb
xchg
in
pop
sbb
fildl
inc
les
es
outsb
in
imul
das
fildl
pop
push
out
sub
xchg
push
sub
and
or
mov
jmp
shrl
mov
xlat
inc
dec
sbb
xor
push
mov
pop
dec
push
jmp
xchg
enter
je
cmp
mov
leave
jge
dec
aas
jo
subl
lods
cmp
cmp
lds
mov
dec
fs
add
fst
divl
mov
ss
sbb
xchg
sub
addl
cmp
inc
push
sarb
jnp
add
aam
out
into
ret
sbb
adc
stos
fidivrl
icebp
mov
mov
outsb
std
dec
ret
mov
rclb
push
xchg
cmp
testl
xor
stc
stos
xorl
int
lret
xchg
add
dec
pop
cmp
sbb
adc
jecxz
mov
xor
mov
rorb
dec
bound
aad
sbb
shlb
sub
sbb
push
shrl
cli
mov
repz
in
or
inc
cmp
cmp
dec
ret
mov
push
push
sbb
mov
add
and
out
sub
iret
jl
daa
imul
leave
popa
das
jne
fdivrl
cld
addr16
nop
call
and
xor
jl
sar
sti
mov
in
inc
mov
and
inc
jecxz
xor
aaa
test
in
push
aam
push
jne
popa
jmp
dec
xor
std
jno
sbb
push
ret
xor
test
nop
pushf
xor
xchg
dec
add
xor
pop
lahf
sbb
pop
and
fcomi
scas
inc
jb
shl
or
sub
in
cld
not
or
push
inc
cmp
fsubrl
js
cmp
mov
cmpsb
movsb
mov
push
jecxz
dec
xor
xlat
sbb
jmp
jge
adc
outsl
dec
cmp
push
repz
inc
push
bound
les
mov
add
shrb
xor
mov
es
or
loopne
mov
inc
pop
mov
dec
xor
loopne
jo
xchg
in
xlat
inc
push
sbb
mov
movsb
xchg
or
rol
fisubrl
fsub
jbe
or
mov
cltd
xchg
push
dec
inc
inc
sbb
sbb
cmc
mov
fcoml
push
and
dec
dec
les
hlt
btc
jmp
jl
stos
out
jae
test
int
xchg
pop
ds
xor
repnz
in
push
add
add
aam
xor
mov
sbb
xchg
push
and
inc
mov
adcb
cmp
inc
cmp
std
xor
ret
lds
out
loopne
shll
les
enter
sti
leave
push
lea
mov
out
lahf
out
mov
es
fnstcw
pop
push
fimuls
fs
cli
outsl
ss
jno
fwait
push
in
stos
jl
scas
mov
push
movsl
xor
push
call
push
add
dec
test
in
int3
dec
scas
pop
imul
ja
lods
sbb
icebp
ja
aas
inc
aam
loopne
icebp
jecxz
add
dec
mov
jl
cmp
jb
lea
jp
pop
fdivrs
add
pop
xorl
pop
mov
imul
sub
push
mov
xchg
and
xchg
out
int
sbb
out
mov
mov
or
sahf
es
insl
dec
cltd
adc
mov
sub
es
push
or
mov
add
xchg
cld
dec
int3
addl
mov
leave
cwtl
cmpsb
fidivrs
sub
test
push
sbb
sti
add
iret
push
int
mov
sarb
dec
cmp
xor
sahf
movsl
iret
push
int3
mov
mov
je
data16
fsub
inc
popf
or
dec
push
pop
stos
pusha
pop
pushf
fimull
push
aas
scas
push
xor
and
in
xlat
mov
inc
pushf
in
sub
lods
lods
test
inc
sbb
daa
sarb
dec
int3
cmp
sub
fnstenv
fwait
add
push
mov
lret
jp
dec
fmull
jno
mov
mov
sub
lret
dec
arpl
jo
xchg
insb
sti
pop
jl
loope
pop
mov
loopne
sbb
mov
xor
or
daa
enter
or
push
je
sbb
push
sbb
shrl
pusha
xchg
xor
pop
push
icebp
imul
inc
fmull
repnz
loope
loop
in
mov
stc
in
add
mov
xor
or
adc
lock
sub
test
std
test
mov
adc
scas
outsb
xor
das
jmp
xor
mov
jl
ds
hlt
push
jle
mov
or
aam
cmp
cs
mov
inc
cmp
dec
lds
and
jle
out
mov
nop
adcl
adc
arpl
mov
out
adc
push
add
ds
pop
dec
fidivrs
fcom
aad
insb
mov
cmp
nop
dec
adc
mov
dec
cmp
jb
lret
fadds
sbb
into
lods
out
movsb
cs
pop
adc
dec
cltd
dec
mov
sub
and
mov
mov
adc
jo
ja
and
xor
xor
cmp
in
pushf
test
mov
and
ljmp
stos
cld
es
dec
test
repnz
lock
hlt
aas
jl
mov
popf
push
inc
movsl
int3
dec
xchg
xor
xlat
into
icebp
insb
and
in
nop
mov
sti
adc
les
adc
xchg
sbb
sahf
sub
sub
repz
aad
xor
and
inc
std
and
test
pop
jmp
das
fadds
and
insl
ljmp
pop
jecxz
cmp
jl
insb
push
cmp
es
mov
movsl
add
adc
jbe
movsb
ret
xor
push
gs
out
push
imul
cmp
push
leave
dec
fs
mov
pop
ret
dec
inc
int
push
in
out
pop
test
jo
jp
imul
leave
popf
jge
push
dec
popa
sub
xchg
sti
push
and
push
negl
sti
mov
cmp
ret
xor
andb
xor
jo
fsubrp
out
xchg
or
int3
shlb
push
sub
inc
cmpsb
xor
cmpsl
lcall
pusha
sub
sahf
jecxz
xorb
push
and
mov
lcall
xor
fimull
jns
shlb
jl
loop
lcall
fnsave
shr
movsl
mov
mov
adc
int
pop
and
icebp
jno
in
fcoms
iret
pop
outsb
int3
iret
rol
pop
or
insl
pop
ret
dec
jnp
es
xchg
dec
cwtl
rorb
popa
nop
push
inc
imul
mov
mov
xor
test
mov
xor
xchg
xor
pop
cwtl
fwait
add
sub
and
or
inc
inc
add
fidivl
cmp
sbb
rolb
mov
cmpsb
sbb
pop
ja
sbb
loopne
inc
repnz
nop
aas
xchg
jmp
leave
pop
mov
add
cmp
mov
push
cmpsl
xchg
sar
inc
pusha
lret
movsb
sub
cmp
cmpsb
ljmp
inc
data16
add
lret
add
mov
loope
aaa
add
jmp
test
pop
pop
adc
fsubl
dec
sub
mov
cs
mov
ss
dec
iret
rcrb
fdivp
pop
cmp
cmp
cs
shl
cmp
push
xor
data16
or
stc
std
repz
xor
push
lods
enter
xchg
mov
add
loope
pop
mov
jbe
push
outsb
cmp
outsb
rcrl
mov
push
repnz
inc
repz
xchg
repnz
aas
leave
cwtl
ficoms
push
mov
scas
jp
xorl
push
aas
add
aaa
inc
add
fs
scas
mov
icebp
shrb
xor
scas
and
scas
testb
call
xchg
hlt
adc
pop
rcll
popf
es
fldl
push
pop
pushf
into
aam
jmp
xor
sti
stos
inc
jp
cmpsb
push
sti
fistps
push
int3
mov
in
arpl
mov
push
in
pop
or
add
mov
dec
adc
add
hlt
icebp
pop
dec
pop
sub
push
dec
jl
dec
fimuls
sbb
inc
push
mov
cmpsb
pushf
adc
daa
add
push
mov
sub
adc
sub
jmp
in
cli
mov
out
data16
rorl
fs
repnz
imul
xchg
mov
xchg
mov
stc
lret
or
out
pop
sub
pop
adc
in
add
sarl
jbe
push
popa
adc
aam
aas
inc
gs
sbb
lods
mov
mull
hlt
icebp
leave
lock
cmp
jge
jle
mov
xor
pop
and
fbld
xchg
jmp
push
dec
dec
outsb
pop
add
stos
movsb
push
push
sti
lods
out
sahf
xchg
mov
popa
sbb
pop
cmpsl
add
sbb
js
jl
lods
idivl
mov
out
mov
cmp
subl
mov
into
cli
mov
sub
ficompl
xlat
mov
insl
ljmp
pushw
insb
mov
stos
mov
and
imul
shll
mov
fs
xor
fdivl
add
ret
fdivs
test
sbb
mov
xchg
sub
inc
cmp
loopne
add
add
push
mov
ja
lcall
push
dec
pop
push
fsts
pop
mov
scas
das
insb
sub
xor
jecxz
call
loopne
in
shlb
popa
dec
jb
mov
rclb
pop
rcrb
pop
pop
stos
mov
or
insl
jp
pushf
xor
and
lock
out
xor
into
adc
int3
add
out
sub
movsl
notb
loop
loop
test
shlb
add
push
in
adc
sub
push
xchg
ss
int
cwtl
lods
sbb
sbb
scas
adc
cmp
pop
js
and
in
sub
mov
lcall
add
or
add
int3
jmp
pop
or
popf
cmc
mov
insb
enter
addr16
addb
testb
jne
pop
mov
add
shrl
lahf
dec
mov
xorb
mov
cwtl
jo
test
imul
out
jno
testb
xchg
mov
sbbb
adc
add
jl
cld
add
push
mov
mov
fisubrl
jno
push
fdivrs
test
xor
repz
jge
fidivs
inc
push
or
mov
sub
mov
mov
jbe
mov
pop
mov
adcb
mov
xchg
movsb
sbbb
xlat
addl
les
stos
mov
sbb
cmp
cwtl
lahf
mov
lea
sbb
insb
stos
xor
das
icebp
jns
mov
rcll
in
pushf
cmp
jl
ficompl
add
in
jns
cld
sbb
cmpsl
lock
inc
and
and
push
test
into
imul
xchg
mov
fistl
push
call
ds
xor
pop
or
testl
sahf
or
adc
mov
shl
sahf
lea
ficompl
int3
out
push
mov
xchg
sub
mov
xchg
jp
push
ja
mov
jo
and
push
test
add
outsl
adc
test
test
xchg
lock
sub
clc
outsb
pop
dec
mov
ficoml
stos
mov
pop
aam
in
cmp
dec
and
xor
ljmp
sub
inc
fists
into
stos
sbb
fstl
pop
lock
mov
fs
iret
fld
int
cmpsl
and
xorl
cs
push
sub
stc
ret
dec
dec
lds
stos
adc
cmpsb
out
dec
into
pop
add
stos
mov
or
out
in
popf
push
add
pop
nop
shll
cmpsb
sbb
jmp
lock
cmp
push
xor
loopne
adc
pop
push
sub
mov
aad
mov
loopne
hlt
push
iret
inc
fiadds
and
jg
cs
adc
push
ret
push
out
push
repz
inc
mov
mov
push
xor
xchg
imul
test
mov
outsl
scas
out
out
xor
fst
mov
call
mov
xchg
in
cmpsl
or
dec
dec
adc
testl
jbe
add
push
shll
push
cmp
and
mov
cltd
dec
insl
sub
sub
xchg
or
aaa
adc
cwtl
loope
sub
jb
xor
push
aad
aam
or
push
pop
xchg
jl
ret
mov
dec
lods
xchg
in
pop
dec
or
loopne
cmp
jns
mov
add
lret
outsb
fstpl
and
ret
out
loop
push
push
repnz
mov
sarb
inc
inc
xor
lods
push
mov
repz
int3
mov
imul
lret
sahf
xor
and
inc
scas
pop
xchg
jge
mov
push
push
mov
jno
enter
and
mov
lahf
fs
stos
cltd
std
adc
mov
pop
lcall
adc
mov
adc
cmp
xchg
pop
xor
mov
xchg
adc
inc
aam
or
jmp
xchg
adc
cvtdq2ps
mov
orb
mov
xchg
cwtl
int3
jp
fsubl
fsub
inc
jne
mov
fidivs
lcall
push
imul
in
cmp
or
sub
fstpt
addl
cmp
ds
cmp
push
js
pop
cmpsl
mov
rcrb
push
inc
test
mov
iret
add
das
rol
aas
movsb
push
push
pop
pop
pop
xlat
in
stos
pop
fdivl
pop
push
pusha
subl
je
add
cmp
push
xor
in
or
mov
les
xor
pop
mov
sti
sti
dec
aaa
sahf
les
sub
mov
adc
dec
in
orb
mov
cltd
adc
and
sub
push
int
mov
sub
pop
xchg
int3
mov
popa
popl
jge
mov
cmp
test
repnz
cwtl
scas
jnp
cmp
or
xchg
mov
jge
xor
dec
pop
push
sbb
lods
sbb
lds
pop
push
shlb
push
mov
stos
scas
xchg
fimull
addr16
fidivl
pop
orl
cmpb
and
mov
ds
mov
sub
das
test
out
andb
into
mov
pushf
das
repnz
xchg
out
xchg
fwait
and
repnz
push
ljmp
jg
lds
mov
fmuls
push
pop
push
pop
sub
inc
pop
lret
inc
sub
sarl
jns
mov
sti
push
mov
popf
outsl
data16
sbb
cmc
jp
stos
aas
jle
adc
cld
pop
in
xor
imul
cmp
in
mov
fiadds
jle
dec
lods
cld
cli
movsl
push
and
icebp
mov
popf
mov
jbe
pop
inc
push
mov
ss
cmp
inc
sbb
sub
movsb
mov
xor
inc
mov
scas
les
jnp
pushf
sub
int
jbe
pushl
and
jge
sub
lcall
xchg
mov
mov
stos
movsb
ret
sub
adc
test
sbb
lret
mov
push
sbb
insl
hlt
ret
aas
bound
repz
pusha
inc
mov
movsb
jge
out
aaa
cmp
ds
xchg
dec
mov
inc
fcoms
push
push
mov
aaa
ss
push
push
dec
fdivr
scas
lods
enter
mov
insl
add
mov
sahf
and
movsb
repnz
mov
test
xor
movsb
lea
xchg
inc
adc
dec
outsl
fildl
mov
inc
cwtl
jg
js
jne
pop
cli
cmpsb
xchg
push
jle
test
mov
cmp
mov
cmp
les
mov
adc
dec
mov
and
xchg
xchg
mov
cld
cs
imul
xor
test
or
std
jp
and
adc
int
fldenv
les
push
inc
add
mov
int3
and
adc
mov
pop
mov
aaa
dec
pushf
xor
ret
mov
pop
xchg
ljmp
add
cmp
test
mov
and
jl
mov
jo
xchg
imul
jecxz
ret
call
ret
jbe
push
mov
stc
fldt
adc
push
addb
push
push
pushw
mov
in
xor
adc
mov
mov
clc
mov
inc
jl
cwtl
mov
pushf
faddp
test
stos
jge
pop
cmp
xchg
out
cmp
movb
mov
int3
ds
int
sub
jle
pop
aas
xor
jp
xchg
jo
jg
adc
cmp
cli
jns
pop
add
pop
daa
rclb
xor
popl
jbe
call
cmpb
fwait
add
cltd
mov
xchg
push
in
fldcw
sbb
pop
outsb
push
adc
jmp
loop
lret
mov
sub
cmp
dec
sti
outsl
xchg
jns
test
sub
movsl
lcall
xchg
out
dec
loope
fwait
push
cltd
adc
fwait
dec
jno
aaa
adc
cmpsl
xor
andnps
mov
cmpsl
fsubl
mov
sub
mov
sti
outsb
push
imul
sbb
pop
cmp
std
and
mov
imul
mov
and
lahf
aam
mov
hlt
inc
fcompl
stc
pop
xchg
push
sbb
imul
pop
mov
sub
loope
mov
jle
mov
cmpsb
int3
addb
dec
stc
pop
mov
cltd
sub
push
push
mov
popa
shl
enter
jmp
andl
xchg
lds
xchg
in
fcomp
cmp
test
push
andb
cld
push
jb
enter
jbe
and
dec
imull
jge
das
xlat
lret
sbb
mov
scas
mov
mov
xchg
jle
jae
cmp
clc
add
add
shlb
mov
loope
jns
mov
daa
jo
lcall
jnp
xchg
dec
aas
mov
xchg
aas
rcrl
lock
and
rcll
cmp
mov
mov
rcll
inc
mov
pop
imul
mov
push
and
mov
sbb
hlt
ja
sub
inc
repnz
push
xor
leave
ret
dec
sbb
movsl
std
into
xchg
outsb
mov
mov
dec
mov
cld
cltd
ret
aas
out
fdivs
cli
imul
cmpsb
push
mov
fs
sub
das
leave
mov
hlt
cmp
sbb
sti
push
sbb
and
cwtl
add
mov
inc
inc
xchg
in
mov
in
jae
dec
test
push
dec
or
jns
sbb
pusha
sbb
dec
mov
les
and
inc
iret
mov
mov
scas
clc
add
jge
and
test
add
bound
jns
rolb
and
mov
mov
mov
inc
sbb
jge
out
adc
call
fs
loope
push
lret
dec
in
jae
pop
fwait
lods
pop
push
mov
dec
lods
inc
sarb
bound
dec
xor
dec
or
adc
sbb
sbb
push
mov
add
repnz
addb
subl
mov
aam
fnsave
cs
dec
pop
ret
mov
cmp
imul
mov
test
shrl
cwtl
push
push
dec
aaa
mov
mov
xorb
inc
pop
test
push
mov
xor
inc
cmp
ret
mov
shll
test
add
push
sti
pop
push
bound
fcomps
pop
dec
xor
aaa
push
dec
shrb
repnz
mov
in
adc
jmp
scas
daa
stos
pushf
and
movsl
mov
cs
mov
andb
das
lahf
test
mov
pop
pop
jle
sub
cmp
dec
outsl
cmp
jg
adc
aad
sti
clc
sub
mov
call
cwtl
adc
pushf
sbb
aad
cs
subl
fninit
cmp
stc
mov
adc
adc
arpl
in
add
aas
mov
stos
inc
pop
das
pop
push
sub
sub
stos
sub
rcr
out
repnz
add
mov
xchg
push
or
sub
out
sbbl
pop
cld
sti
mov
xor
xchg
in
lock
addr16
or
arpl
outsb
xchg
loop
xor
out
mov
lcall
clc
fcmovnb
cli
daa
aam
mov
cmp
dec
dec
pop
push
xchg
inc
xchg
in
movb
test
clc
imul
lods
imul
cmp
test
or
movsb
pop
outsl
add
mov
daa
stos
mov
cmp
fistpl
fldl
or
cli
mov
jmp
mov
jae
cltd
and
sub
jo
or
cltd
gs
mov
test
ja
xchg
pop
stc
xchg
dec
adc
mov
lods
das
sbb
xchg
adc
sub
xor
jle
repnz
js
add
xchg
shl
loope
fimuls
int3
mov
outsl
fs
sub
cmp
jmp
add
dec
stos
push
cli
xchg
xchg
xor
loop
cmpsb
rorb
sbb
cld
divl
sub
out
inc
dec
cwtl
mov
pop
loopne
cmp
insb
xchg
mov
jmp
rcrb
mov
sub
shll
stos
loopne
or
subb
push
pop
repnz
push
push
fcomps
test
dec
xor
xlat
inc
pop
mov
movsb
cli
and
sub
inc
inc
gs
cmp
cltd
dec
cmp
adc
mov
jae
ret
inc
jne
lahf
cli
ljmp
std
popf
xchg
jp
sub
jmp
mov
bsf
pop
push
lea
ret
sar
insb
jg
pop
xchg
nop
rcrb
das
adc
jmp
cltd
or
jns
sbb
aas
shrl
inc
mov
push
xchg
dec
jnp
xor
fisubrs
popa
xor
pop
and
xor
fidivrl
ja
cld
xor
adc
out
and
add
cli
add
push
rcll
loope
push
repz
popa
inc
cmp
add
cmp
ret
adcb
adc
sbb
sbb
dec
mov
jno
mov
mov
xor
sub
decl
add
fisttpl
rol
mov
or
cmp
sahf
push
enter
dec
decb
and
cmp
inc
shrl
orb
lods
mov
mov
mov
fs
cmpb
mov
fwait
es
imul
xchg
movsb
les
outsb
les
dec
push
ja
sub
movsb
and
in
inc
jne
mov
xchg
mov
add
push
sub
cmp
and
int3
push
jns
jecxz
clc
loop
cmp
adc
adc
mov
sub
mov
out
dec
mov
sub
call
inc
mov
in
jb
sub
in
notl
repnz
and
add
cmpl
popa
mov
dec
lods
adc
dec
dec
insl
mov
dec
pop
lret
testb
adc
int3
jno
sub
lret
mov
inc
push
pop
mov
jl
add
enter
jo
pushf
xchg
pop
daa
mov
or
add
jo
xchg
lock
mov
ss
out
jbe
and
dec
pop
cs
into
imul
mov
pop
dec
push
mov
adc
scas
jl
xchg
mov
jmp
ss
cld
xor
adc
adc
xchg
in
adc
addr16
mov
or
sbb
movsl
imul
mov
cmpsb
cld
movsl
pushf
xchg
inc
sub
xor
jmp
fadd
push
dec
lock
lret
repnz
in
cmp
add
add
mov
xchg
sti
ror
lcall
cld
dec
xchg
insb
aaa
sub
fucomp
ret
dec
outsb
test
aaa
cwtl
push
mov
rcrl
cmp
add
ljmp
sub
int
ret
inc
lock
mov
repz
xchg
xor
fisubl
sub
sub
cltd
rol
gs
jmp
mov
sbb
jae
xchg
xor
cld
mov
lahf
pop
test
and
imul
push
out
inc
js
jmp
lcall
jae
jns
pop
jecxz
adc
pop
xchg
rorb
aam
xor
fisubs
ds
sub
mov
xor
jl
or
aad
js
xchg
sarl
jecxz
or
imul
inc
fsts
lret
insl
jb
push
jp
dec
pop
push
push
lret
sbb
xor
xchg
fdivs
push
bound
cld
out
loopne
add
sub
in
mov
inc
add
push
inc
stc
shrb
fisubrs
xor
rol
andb
out
fstpl
add
xor
std
sahf
fcom
xchg
dec
mov
cltd
add
filds
jno
fisttpl
icebp
jb
repnz
jge
popa
mov
es
icebp
repnz
shlb
inc
pop
iret
and
in
mov
sbb
ret
jmp
jnp
sub
xchg
int3
dec
add
jno
cmp
xlat
sub
mov
roll
aad
xchg
or
fs
roll
push
dec
lret
xlat
into
xlat
fcmovne
pop
into
pop
push
popa
push
rorb
xchg
xchg
jg
popf
aaa
aas
adc
in
mov
push
and
call
xor
cwtl
xchg
in
aam
push
out
sub
dec
dec
movsb
add
mov
aad
loopne
mov
push
pop
and
mov
pop
inc
sar
or
cmp
sti
jecxz
pop
fdiv
or
rclb
pop
add
push
add
lock
mov
push
ret
aam
shlb
rcll
xchg
mov
sub
fisubs
cli
ja
hlt
dec
out
lock
pop
fsubp
pushf
rorl
bound
xor
cli
inc
and
ret
mov
pop
sbb
adc
mov
jle
inc
loopne
subl
mov
jae
adc
stos
sbb
mov
loope
mov
cltd
adc
xorb
push
imul
loopne
mov
cmp
icebp
dec
xor
repnz
sahf
popf
mov
test
cmp
out
sbb
adc
push
xor
aam
inc
aad
insb
lahf
mov
out
int
pop
pop
push
push
jb
xchg
arpl
loopne
xchg
rcll
adc
dec
aaa
inc
inc
xchg
loop
adc
inc
adc
ds
loopne
dec
mov
inc
lret
xchg
out
xchg
imul
lahf
fwait
imul
dec
cli
je
int3
and
aaa
dec
mov
rolb
push
lcall
sarl
jge
repz
add
scas
xchg
outsl
xchg
or
push
or
subl
sub
cli
pop
shrb
sub
in
fsubr
pop
push
cmp
dec
xbegin
dec
mov
stc
sbb
pusha
fdiv
sbb
push
lret
ljmp
and
push
xor
out
lds
sbb
pop
and
movsl
insb
sbb
mov
bnd
jae
push
mov
and
subl
sahf
lahf
mov
xorb
fists
mov
pop
push
lret
dec
cmp
loop
and
nop
jp
adc
aam
xor
sub
lret
out
sub
xor
out
and
mov
push
insl
cmp
inc
sub
cmp
cwtl
cmpsl
dec
loop
mov
subb
mov
inc
mov
jns
add
adcl
adc
pusha
adc
sbb
sar
or
lock
pop
in
imul
mov
push
fistpll
xor
jbe
loopne
fadd
sbb
in
sub
cmp
pop
stos
cmpl
repnz
jecxz
icebp
shrl
mov
js
mov
hlt
jo
adc
mov
inc
xchg
dec
setns
out
mov
inc
aaa
iret
insl
inc
push
ljmp
xor
popf
lock
mov
cmp
fmuls
dec
pop
cmp
cld
ss
mov
or
fsubl
sub
fmuls
bound
push
push
rcrb
es
out
or
arpl
inc
ja
ljmp
xor
aaa
inc
das
xchg
add
add
out
loope
cmp
mov
cmpsl
std
inc
jae
push
xchg
insb
ljmp
inc
inc
cmp
pop
shll
pop
pop
mov
cld
dec
data16
sbb
in
les
popf
sub
data16
into
cmc
insl
and
out
add
dec
in
das
add
ret
stos
mov
mov
in
pop
lret
std
movsl
cmpb
sbb
cld
and
inc
lock
ret
mov
lret
pop
jmp
insl
inc
hlt
adc
out
mov
push
scas
daa
aas
movsl
sub
fimuls
ja
sbb
aas
ja
lahf
nop
xor
das
xor
mov
sbb
jp
push
xor
and
push
push
andl
mov
mov
shlb
fs
stos
mov
mov
cmpsb
adc
pop
insb
mov
cmp
loop
push
cmpsb
adc
in
in
inc
cmc
jno
sbb
lret
scas
jmp
inc
loop
aaa
dec
movsb
fsubl
fisubs
scas
pop
jb
add
movsl
cmp
ja
push
insb
popl
mov
sub
sysenter
adc
and
inc
xlat
mov
adc
jl
add
testl
icebp
jnp
lock
push
iret
adc
dec
dec
mov
inc
bound
sub
push
insb
push
int
add
cmp
out
lds
adc
push
mov
pop
js
mov
mov
ss
shlb
xlat
inc
addr16
fistl
bound
icebp
movsl
sub
lahf
btr
mov
dec
push
and
jge
cmp
inc
add
stc
and
into
enter
xor
and
jno
scas
lea
cli
rsqrtps
imul
fadd
icebp
inc
jns
push
jmp
arpl
mov
sahf
outsb
jecxz
iret
fdivrs
mov
roll
mov
inc
imul
sub
sbb
add
push
repz
enter
ljmp
sbb
jnp,pt
repnz
jl
loope
enter
lods
mov
inc
imul
jle
push
lahf
add
push
mov
stos
push
mov
xchg
mov
dec
xor
jmp
adc
shl
adc
xchg
pop
push
adc
repz
test
ja
dec
inc
cmp
xlat
jge
int3
mov
ja
mov
repz
xor
rolb
hlt
xchg
scas
cld
ja
and
xor
movsl
jmp
out
gs
lods
dec
ljmp
adcl
xchg
les
mov
push
daa
test
push
das
popf
push
xchg
cmc
pusha
lcall
loope
pop
cmpsl
negb
idivb
adc
xor
jge
jmp
mov
lret
xchg
pushf
sbbb
xchg
loopne
hlt
loope
and
adcl
out
sub
in
inc
repnz
xor
cli
orb
push
xor
sbbl
loopne
pop
insb
addr16
rcll
add
sub
sbb
or
jp
xchg
std
xchg
shrl
cmp
add
sub
sti
mull
mov
add
subl
and
jmp
push
loope
sub
std
push
imul
cmp
movsl
popa
out
cld
ficomps
xor
mov
cmp
push
pushl
cmpb
call
aaa
loop
aas
or
popf
fwait
and
push
shr
ret
int3
mov
mov
dec
push
pop
push
cmp
pop
sbb
inc
fcmovnu
xlat
aas
mov
xchg
inc
ja
js
inc
loope
push
cmpsb
mov
dec
jle
inc
hlt
sbb
cmp
ds
ss
and
jp
jl
in
addps
nop
js
popl
test
popf
popl
cmp
add
and
jp
sarl
add
pop
sarb
popf
and
stos
cmp
stc
jbe
mov
call
mov
adc
iret
sub
jecxz
pop
add
out
inc
mov
sub
out
lods
inc
lcall
push
imul
or
or
sbb
inc
adc
mov
daa
fadd
sbb
mov
gs
mov
pushf
outsb
or
icebp
xchg
xor
mov
push
sub
aas
cmpsl
hlt
aas
adc
out
dec
scas
lahf
lret
xor
push
mov
xor
jg
pop
fidivrs
sbb
loop
adc
out
adc
or
and
mov
imul
or
sub
pop
adc
jae
aas
xor
arpl
imul
outsb
pop
rcrl
rcrb
mov
pop
pop
mov
lods
roll
lods
fcompl
js
out
pop
push
and
dec
xchg
fidivrl
cmp
push
out
push
lds
idivb
xor
cmp
mov
cmpsl
mov
lds
pop
imul
je
std
imul
rorb
cmpsl
xadd
in
fisubl
mov
jno
sbb
xchg
xor
aas
in
cmp
adc
jle
cli
data16
ja
adc
xchg
sub
pop
rcr
add
mov
stc
inc
jo
sbb
mov
sbb
rcrl
int3
cld
adc
inc
lods
add
adc
es
sub
add
aam
adc
fs
icebp
push
jbe
inc
mov
pop
mov
push
scas
push
outsb
movsb
sbb
push
cmp
jae
add
in
rcr
sarl
pop
in
sub
rcrl
dec
pop
sbb
cltd
int3
sahf
cmp
clc
xchg
pop
mov
cmp
enter
call
sub
sub
mov
jmp
jmp
js
mov
push
dec
jae
lods
mov
cmpsb
int3
or
stos
repnz
and
les
addl
rolb
lcall
add
fmull
test
repnz
adc
mov
cmp
daa
ss
fs
and
mov
xchg
clc
xchg
add
cmc
cmp
pop
sbb
cmpl
mov
xor
scas
ss
sti
rcr
rclb
int3
dec
loop
loopne
stos
cltd
jb
xor
pushf
jnp
xor
repz
imul
mov
notl
pop
jp
add
repz
aaa
inc
in
push
ret
push
fwait
shlb
xchg
repnz
idivb
pop
sbb
mov
sbb
pop
push
loop
aas
in
lahf
int3
in
idivb
ljmp
sub
mov
push
enter
idivb
mov
pop
push
aam
int3
arpl
gs
and
sahf
sub
mov
xchg
clc
xchg
push
pop
getsec
mov
xchg
add
rolb
aas
rorl
les
inc
sub
mov
iret
pop
shlb
add
lods
rolb
or
pushl
mov
iret
jo
imul
mov
shl
push
test
dec
adcb
cmp
in
pop
pushf
xchg
cmp
lock
subl
fcoml
mov
sub
cwtl
lcall
jge
jmp
lock
mov
cwtl
or
mov
or
in
je
xchg
addr16
mov
push
sbb
outsb
loope
std
push
mov
sub
test
xor
out
lock
xor
push
cmp
xchg
or
push
or
cmpsb
xor
sahf
push
xor
xchg
mov
pop
xchg
ds
aas
sub
jg
out
les
add
insl
ds
int3
ds
shrb
mov
sahf
mov
mov
test
imul
fadds
pop
outsb
xchg
push
or
aam
dec
sarl
hlt
add
loop
cmp
mov
test
rcr
xchg
roll
in
mov
cmp
ret
int3
in
arpl
fadd
scas
cmp
std
scas
sti
imul
and
xor
adc
mov
call
out
push
xchg
pop
cmp
pop
fdivl
inc
cmp
or
push
jnp
jb
pop
daa
outsl
adc
xor
fidivrl
fidivrl
mov
pop
in
imul
inc
ja
add
xor
cmp
icebp
aas
mov
ljmp
enter
push
cld
sub
lret
pop
repnz
stos
fisttps
add
idivl
iret
adc
pop
xor
jnp
lcall
shll
rolb
mov
mov
xchg
fadds
mov
aam
ficomps
lods
ljmp
pop
pop
adc
pop
jne
push
arpl
test
out
and
and
jae
mov
push
clc
and
pop
jae
ret
out
in
stos
lods
adc
dec
ds
ror
sar
xor
jle
xlat
les
jbe
loop
call
scas
cmp
movsb
or
in
fcompl
fmul
adc
incb
lret
adc
adc
out
pushf
dec
movsl
push
push
rol
daa
push
lock
fldt
mov
in
hlt
ja
push
pop
or
movsb
sub
xchg
mov
loop
mov
inc
inc
test
in
sbb
into
mov
push
adc
loope
ficompl
add
in
ret
sbb
adc
pop
xor
mov
add
addr16
xor
cld
lret
xlat
sbbb
cwtl
mov
sub
imul
loop
fdivr
std
xor
pop
or
and
cmp
daa
xor
push
jnp
out
pop
or
mov
jle
push
cmc
push
enter
ror
fwait
mov
addr16
push
add
mov
mov
xorl
push
fcmovnb
xor
jp
sbb
push
cmp
and
out
sub
push
ret
mov
dec
cmp
pop
adc
repnz
cld
jae
lret
sub
stc
das
xchg
pop
adc
push
jl
sarb
xchg
mov
loop
mov
adc
pop
add
cmpsl
inc
push
loopne
int
fiaddl
sti
hlt
ja
mov
fdivrs
jo
rolb
fldenv
leave
push
mov
mov
mov
outsl
pop
jb
incb
out
imul
aaa
push
mov
orb
out
and
js
fisttpl
insl
mov
call
call
and
fwait
inc
cmp
xchg
adc
mulb
cmp
mov
mov
fnstsw
mov
mov
insb
mov
enter
jo
cmp
xlat
inc
stc
insb
add
leave
sub
cmp
mov
jo
hlt
mov
push
jbe
dec
jb
jne
push
xor
adc
push
stc
dec
in
push
sub
sti
sbb
adc
xor
mov
and
xor
xchg
loope
xchg
mov
ljmp
push
add
mov
neg
xrelease
fstpl
cmp
push
mov
loopne
arpl
stos
rolb
stos
or
aam
aad
fidivs
dec
jg
inc
xchg
cmp
outsl
mov
or
shll
in
bound
in
cld
outsb
and
js
dec
fidivrl
mov
shrb
push
dec
inc
fimuls
imul
xchg
sbb
or
mov
out
add
inc
std
enter
ljmp
add
mov
fildll
pop
outsb
test
out
cld
pop
push
mov
push
jno
add
and
inc
pop
out
jnp
in
mov
pcmpgtw
jl
pop
pop
aam
sti
mov
fmull
and
loope
pop
dec
sub
xor
mov
cmp
out
xchg
fistpl
aas
lahf
ror
int3
sub
movntq
or
jae
cmp
xor
arpl
pushf
xchg
fisttpll
mov
int
push
sbb
xor
xchg
icebp
and
test
aas
push
add
jo
jb
cmp
push
ret
or
and
mov
inc
cld
sbb
stc
fidivrs
ljmp
pop
or
add
sbb
and
xchg
movsl
es
pop
push
sbb
lret
lret
jge
inc
subl
sub
sbb
sarb
sub
or
daa
mov
cltd
add
push
and
jl
pop
out
and
sbb
cmpsb
loopne
in
push
arpl
sbb
push
or
sbb
inc
aam
push
mov
fcom
xlat
test
test
in
fwait
pop
add
adc
pop
cmp
mov
inc
jae
add
imul
repnz
add
sub
mov
xchg
cmp
and
push
mov
pop
lea
sub
dec
mov
push
cmpsl
addb
pop
jp
ret
or
lods
cmp
pop
iret
insl
mov
sub
xor
cmc
push
pop
or
xchg
xchg
mov
mov
and
orl
sub
andl
pop
ss
mov
mov
adc
inc
or
inc
sbb
and
mov
pop
es
sbb
loope
or
gs
inc
mov
mov
sbb
sbb
inc
into
push
push
aas
jbe
sub
and
sbb
dec
mov
repz
in
mov
mov
jmp
xor
pop
jg
imul
mov
adc
fisubs
lds
outsb
mov
xchg
sub
stos
mov
ja
sti
mov
addb
sahf
dec
or
sub
cmp
push
mov
xchg
xchg
sarb
mov
lock
jns
mov
stos
lods
inc
outsl
dec
mov
pop
jle
adc
and
or
inc
jbe
pop
gs
push
in
negb
ljmp
es
pusha
notrack
data16
insl
mov
or
lahf
jp
xor
pushf
pop
loop
jl
imul
das
daa
pop
test
push
ss
dec
outsb
cld
out
add
lcall
out
lahf
scas
cmpl
add
add
das
cmp
push
xor
ljmp
cmp
mov
mov
aam
xchg
xor
sub
inc
addl
imul
cmp
cmp
cmp
aaa
jle
inc
mov
cmpsl
inc
outsb
push
cmp
andb
adcl
mov
pop
sub
test
dec
mov
sarb
call
data16
adc
mov
int
jmp
test
mov
mov
xor
cmp
scas
and
das
xor
cmp
push
adc
sbb
fwait
sbb
icebp
sbb
add
shrl
mov
shlb
dec
or
cmp
mov
outsl
aaa
inc
pop
mov
xor
mov
jmp
or
xchg
xchg
mov
sbb
insl
dec
mov
rclb
rorl
fsub
adc
movsl
adc
dec
add
test
jno
test
inc
mov
cmp
rolb
or
scas
sbb
arpl
pop
xchg
ret
imul
mov
dec
mov
int
xchg
add
pop
and
mov
shl
aad
mov
call
mov
mov
add
jnp
inc
xchg
push
xor
aas
inc
out
icebp
xor
and
lods
inc
xchg
and
mov
cmp
mov
inc
icebp
mov
adc
fadd
sub
inc
test
verr
inc
pop
stc
int
lret
xchg
scas
aad
jl
es
mov
rcll
mov
ret
mov
sub
pop
shl
ficoml
js
inc
mov
mov
into
insb
mov
addr16
dec
mov
and
push
sbb
cmp
in
repz
cmpsb
ficoml
mov
cmc
jmp
mov
xlat
fs
dec
pop
pop
mov
jae
ret
or
lahf
push
dec
int3
jns
hlt
mov
jecxz
add
sarl
les
xchg
inc
lea
stos
mov
popf
rol
or
adc
lods
sub
dec
adc
push
ret
sub
push
insl
or
jg
pushf
mov
inc
xchg
insb
aaa
rcll
pushf
pop
jmp
adc
fisubs
ds
push
add
fadds
mov
stos
and
mov
sbb
add
mov
jo
daa
mov
xor
movsl
je
cmpl
cwtl
ret
icebp
mov
or
xor
test
sbb
mov
and
loopne
adc
sbb
mov
xor
mov
xchg
lret
sbb
sub
jae
sahf
fmulp
xchg
sub
sbb
jmp
stos
stc
sub
xchg
sub
ficoms
mov
loopne
mov
roll
inc
add
xor
lds
add
shlb
add
xchg
neg
into
pop
push
out
pop
enter
sbb
outsl
and
xchg
dec
lock
xchg
jno
lods
rorb
cwtl
stc
js
shl
adc
sbb
sub
outsb
cwtl
xchg
push
lahf
sbb
in
js
mov
jle
in
mov
pop
hlt
sub
int3
arpl
clc
repz
jle
or
imul
or
es
and
xor
les
jg
cmp
insl
xor
ret
dec
cmp
sub
mov
clc
popf
adc
mov
movsl
mov
pop
cmp
sbb
imul
mov
pushf
rclb
mov
push
repnz
jo
ret
xchg
daa
arpl
or
dec
aam
mov
in
mov
ljmp
xor
or
repnz
popf
mov
rclb
sbb
or
and
ljmp
add
cmp
or
mov
cli
repnz
xor
and
pop
xor
adc
ret
xlat
bound
xor
or
sbb
inc
in
test
dec
std
imulb
ds
aam
push
mov
pop
sbb
aad
add
sub
mov
dec
and
inc
das
sbb
insl
dec
cmp
or
xchg
inc
xor
jo,pn
ret
addr16
pop
hlt
xor
mov
mov
pushf
push
aaa
aas
in
and
je
das
fisubs
xlat
xchg
adc
dec
dec
inc
xorl
jbe
add
or
jg
cwtl
rorl
mov
call
pop
sahf
arpl
sbb
movq
mov
ficomps
and
decb
inc
repnz
xor
inc
call
inc
shl
mov
push
mov
mov
cmp
aaa
sbb
imul
in
das
test
orb
adc
sbb
aaa
ret
cli
dec
rclb
dec
dec
das
sub
add
sarb
in
sbb
jo
mov
pop
mov
or
mov
inc
push
cmp
in
xchg
ja
cmp
aas
test
adc
orl
je
push
or
push
inc
lahf
nop
test
cmp
mov
mov
and
int3
out
and
xchg
in
sbb
push
dec
mov
stos
fnstcw
lods
sbb
fs
loop
pop
dec
sti
fldcw
or
loop
test
add
dec
pop
mov
inc
mov
loop
push
lret
orb
push
push
divb
sti
inc
pop
dec
jnp
or
push
or
lret
in
leave
bound
cld
hlt
pop
std
or
or
cmp
subl
fldl
out
add
pop
jmp
xlat
mov
or
adc
and
andb
fs
or
cmc
jb
dec
dec
insb
pop
mov
pop
pop
shlb
mull
icebp
fsubr
out
imul
pushl
cmp
or
mov
cld
mov
sub
sub
lods
popa
in
adc
cmp
fiaddl
cltd
xor
out
dec
xchg
jno
jl
cmpsb
sti
xchg
xchg
mov
scas
dec
mov
mov
xlat
xor
pop
scas
iret
mov
cs
jae
imull
cltd
sbb
pop
sahf
mov
in
es
stos
pop
mov
sub
jmp
cmp
cld
pusha
dec
cmc
push
rolb
pop
sarl
jp
jge
out
inc
fadd
push
push
push
outsl
adc
xchg
inc
aas
mov
push
sub
and
mov
out
xor
adc
imul
movl
sbbb
cmp
addl
in
dec
add
xchg
cmp
sbb
pop
loope
mov
sub
test
pop
into
rorb
cmp
ss
fnsave
ret
push
cmc
ret
mov
dec
xor
iret
jle
int3
lret
int3
push
ror
ds
add
and
cmp
cwtl
jl
add
mov
cmp
pop
addr16
daa
pop
dec
and
xor
push
jg
push
or
adc
sbb
mov
or
xchg
mov
lods
and
scas
mov
pop
and
xchg
mov
test
mov
aad
inc
xlat
test
out
into
shlb
xchg
sbb
push
xchg
pop
mov
mov
xchg
fisubrs
or
lret
mov
leave
in
push
fidivrs
sub
pushf
xchg
sub
cli
imul
mov
std
loop
mov
fcmovb
sbb
daa
adc
addr16
jb
stc
jo
add
cmp
cmp
out
movsb
xor
mov
jl
jbe
sarb
lds
dec
add
xor
and
cli
push
mov
cmp
ljmp
addr16
mov
lods
out
loopne
xor
xor
mov
add
std
push
xor
sub
or
inc
lock
mov
hlt
pextrw
and
lret
sbb
ficoms
aaa
std
jno
pusha
lahf
push
push
mov
aaa
jo
mov
call
fcomi
cs
cld
repnz
fdivrl
jnp
xchg
les
sbb
push
fsubp
mov
pop
mov
xlat
bound
push
push
sub
sub
push
sub
ret
mov
cs
int
add
in
jae
dec
mov
sar
cmp
inc
ss
pop
test
or
and
lods
sbb
fidivl
test
adc
add
sbb
loop
mov
repnz
pushf
jo
mov
ret
lret
in
jge
jns
das
movsl
xchg
xchg
pop
jmp
dec
das
jns
pop
add
xlat
aam
insl
loopne
mov
int3
shlb
lcall
es
cmpsl
imul
jns
lret
mov
jmp
jbe
clc
fisttpll
xchg
je
fs
jg
loopne
adc
rcrl
stos
stos
ret
mov
xor
in
dec
sbb
lea
or
mov
clc
push
scas
mov
pop
mov
xchg
xor
jne
push
sub
pop
shll
lock
xlat
lahf
call
out
outsl
and
add
mov
or
lahf
das
mov
or
pop
or
pop
sbb
mov
push
sbb
jb
pop
mov
pop
adc
fadd
sbb
jbe
cmpsl
push
ja
inc
daa
jne
sar
mov
aas
mov
cwtl
in
fsubrp
fsub
jmp
call
je
adc
push
test
pop
or
dec
xchg
pop
add
push
fisubs
cmp
out
or
ljmp
dec
lcall
mov
lret
jnp
mov
mov
mov
in
sahf
cmpsl
scas
adc
iret
rorb
pop
out
xor
rorl
mov
jb
or
ret
jecxz
xchg
cmc
mov
cld
es
ret
jg
cmpsl
mov
fildl
lret
xchg
mov
fbld
sti
stc
xchg
pop
dec
cmp
stc
jo
aas
or
inc
adc
jne
sbb
push
pop
jns
pop
pop
dec
inc
mov
dec
cwtl
aad
pop
mov
dec
movsl
xchg
sub
outsb
out
xor
shrb
popf
dec
mov
aas
aaa
mov
ja
pop
push
aam
sbb
je
inc
ret
push
push
adcl
mov
rcrl
sub
pop
stos
sub
add
jnp
xchg
frstor
sub
sbb
ret
inc
jecxz
pop
jl
mov
and
dec
dec
cwtl
addb
pop
cmpsb
pop
push
mov
stos
adc
xor
jmp
push
std
int3
lret
adc
cmp
movsl
mov
in
in
es
and
iret
or
jge
jbe
mov
hlt
in
pop
dec
add
jb
cmp
mov
lahf
xor
repz
daa
pop
pop
dec
les
nop
rorl
popf
sbbl
push
aad
mov
mov
push
ss
xchg
or
and
xor
jb
ret
jmp
outsl
jne
or
scas
in
sub
sbb
or
ja
push
mov
in
std
ss
addr16
pop
add
jp
cmp
sbb
xchg
jb
cld
pop
lret
sub
rorb
fldl
push
ja
insl
into
sub
and
scas
out
dec
sub
testl
sub
nop
xchg
add
lret
or
test
push
ret
mov
cltd
repnz
jmp
mov
cli
cmp
cmp
cld
mov
je
and
popa
push
cmc
call
int3
push
mov
sub
bound
mov
push
out
cmp
and
adc
lock
xchg
movsb
inc
sbb
and
dec
and
mov
pusha
and
adc
std
mov
out
xchg
mov
movsb
in
inc
pop
rcrl
mov
adc
mov
das
xchg
dec
loopne
cmpsl
push
pop
sbb
push
pop
pop
dec
or
mov
mov
stc
push
mov
ds
xor
mov
lods
out
popa
cmp
jae
lods
ljmp
cwtl
push
pop
sarl
ud2
mov
pop
outsl
inc
repz
outsl
pop
sub
mov
adc
int
cmp
cltd
xor
fcoms
divl
xor
repnz
stos
ja
cmp
mov
sarl
and
jno
stc
hlt
mov
testl
ds
add
mov
adc
sub
sub
into
fcmovbe
jmp
out
pop
int
pop
cwtl
roll
jno
fnstenv
pop
mov
imul
mov
lret
icebp
mov
push
ror
add
adc
pushf
jae
mov
dec
cld
pop
jb
cld
pop
mov
mov
data16
push
data16
cmpsb
pop
jp
pushf
int
in
ret
or
lahf
jge
mov
and
movl
lret
cmp
sarl
push
fsubrs
xchg
push
push
mov
dec
test
decb
sub
lods
pmullw
cs
mov
sub
and
sub
mov
pop
jns
fcoms
imul
push
cmpsl
test
pop
aad
push
hlt
mov
imul
aaa
sarl
pusha
std
insb
sbb
cmp
fwait
ljmp
lcall
mov
call
fbstp
or
mov
inc
adc
test
xchg
jp
inc
adcl
cld
push
movsl
sub
mov
sbb
mov
out
push
jo
xor
xchg
sar
or
loop
xchg
shrl
pop
pop
jg
shll
push
rcrl
inc
push
cmp
inc
aam
aaa
xor
pop
sbb
push
out
insl
mov
and
xchg
cmp
and
mov
inc
push
lds
or
rcll
add
sbb
das
sbb
and
push
cwtl
rorl
cmp
cmpsb
loop
popa
pushf
dec
mov
js
mov
aaa
loope
out
dec
or
sub
sub
das
arpl
repnz
in
shl
inc
fsubrl
stc
inc
pop
add
add
pop
aad
and
pop
in
outsl
je
mov
cld
lahf
push
sub
fdivrl
daa
cmp
mov
mov
ja
pushf
jns
cli
das
xchg
mov
push
dec
cmc
mov
aas
je,pt
add
lods
inc
push
aas
fildl
xor
sbb
xlat
inc
fistpll
and
sbb
mov
roll
dec
shr
sub
subb
mov
into
pop
xlat
sbb
jbe
xchg
jmp
xcrypt-ecb
cmpsl
dec
cltd
adc
shr
or
dec
cmp
lcall
mov
call
mov
xor
mov
not
inc
push
xlat
add
dec
inc
sahf
stos
fstl
sti
xor
mov
cmpl
pop
add
out
mov
scas
jmp
idiv
lea
add
jecxz
sbb
cwtl
shrl
stc
pop
inc
jno
cli
and
xor
adc
out
stc
push
fdivrs
pushf
inc
lock
test
sub
inc
mov
mov
pop
shlb
push
lcall
les
scas
mov
rcrl
xchg
in
mov
imul
loop
in
mov
sbbb
rcrl
inc
sub
shll
pop
inc
xorl
iret
je
sub
lcall
pop
test
stos
mov
pop
iret
pop
jecxz
iret
jmp
push
cmpsb
xchg
sti
push
lret
insl
xor
sbb
jmp
inc
push
out
mov
cmp
jb
scas
adc
dec
hlt
xor
lods
pop
out
nop
cmp
in
mov
into
sub
sub
dec
dec
loope
mov
add
sbb
rclb
call
mov
cmp
out
rorb
adc
dec
hlt
lods
xchg
stos
pop
ljmp
shll
mov
pop
aas
scas
push
loop
cmpsb
push
addl
pushf
mov
shrl
cwtl
iret
divb
bound
loop
cmp
imul
fldcw
cmp
dec
cltd
out
dec
and
adc
mov
ljmp
jb
test
lods
hlt
shll
dec
int3
lahf
mov
mov
add
cmp
sahf
hlt
push
shlb
and
mov
sub
jns
dec
mov
lods
inc
mov
push
jecxz
cld
push
cmpb
mov
lahf
cld
scas
dec
stos
mov
push
int3
add
mov
int3
cmpsb
es
in
adc
push
sti
xchg
dec
sti
es
push
xlat
aam
mov
std
xor
test
mov
sbb
movsb
push
jo
xchg
cmp
pushf
and
data16
cmpsb
mov
popl
das
repz
adc
mov
addr16
mov
cmp
dec
divb
in
fidivrs
orb
in
mov
jl
in
cltd
cmp
cltd
xlat
in
cld
xor
les
mov
cmp
test
cmp
ret
mov
outsb
pop
and
jbe
add
add
add
xor
mov
dec
mov
rcl
push
lahf
and
xchg
int3
je
int
inc
xchg
test
push
lea
mov
add
cmp
push
sbbl
jne
mov
or
leave
sub
and
cmpsb
mov
pop
push
mov
cwtl
pop
push
add
mov
es
fisubrl
pushf
mov
and
pop
xchg
addb
push
add
mov
in
fmull
xlat
ljmp
mov
push
jecxz
lahf
push
xor
sbb
xchg
lods
and
mov
pop
rcl
sub
inc
cmpl
imul
in
mov
xor
mov
xchg
adc
es
das
ficomps
and
xchg
fwait
in
ss
mov
push
xchg
adc
fldenv
jmp
dec
push
int3
or
addr16
inc
in
push
jle
in
mov
out
jle
mov
in
xor
jle
dec
dec
loope
push
mov
mov
mov
push
lock
lods
and
dec
mov
insb
pop
push
sbb
xchg
pop
push
pop
ljmp
add
cmp
xchg
adc
lock
sub
test
cltd
movsl
popa
mov
arpl
in
outsl
and
pop
and
dec
scas
and
sub
mov
into
adc
dec
ret
inc
pop
dec
hlt
adc
pop
xchg
ficompl
roll
jle
jb
push
fdivs
insb
rol
cmp
je
or
xchg
push
cld
iret
mov
or
ret
repz
sub
outsl
mov
neg
xchg
dec
fadd
cmp
clc
cs
inc
popl
insb
pop
sbb
lods
pop
mov
xchg
pop
sti
xlat
cmp
shl
mov
pop
push
sbb
lret
mov
jo
leave
push
jns
out
dec
adc
add
fisubrs
xor
in
sbb
jae
xchg
pop
inc
adc
inc
sub
loopne
and
jne
test
addr16
aad
pushf
lret
mov
test
mov
mov
xor
ds
stos
bound
ljmp
dec
das
push
sbb
pop
inc
aam
mov
inc
sbb
mov
and
mov
and
stos
in
out
xorb
ja
loope
xor
les
sahf
popf
add
mov
pop
notb
cli
push
xor
and
dec
adc
mov
xchg
imul
mov
mov
mov
in
outsl
pop
and
add
add
inc
xor
and
shr
pop
cmpsl
inc
les
arpl
and
hlt
sbb
stc
jnp,pn
shrb
mov
inc
arpl
push
jge
fsubrp
push
fld
lea
fucomp
sbb
mov
faddl
mov
fcomp
pop
outsb
int3
bound
clc
insl
sbb
subb
push
mov
mov
lods
clc
adc
inc
das
push
adc
aam
inc
cmc
pop
and
mov
leave
push
jb
jecxz
insb
repz
xchg
cs
das
sbb
dec
add
or
xchg
ljmp
sub
sub
pusha
cs
adc
push
in
loop
stos
repnz
hlt
bound
insb
adc
flds
jb
out
imul
fisubs
mov
sub
mov
jmp
push
xchg
stos
repnz
das
mov
test
rcl
test
mov
out
stos
or
fsubp
push
cmp
add
enter
clc
pop
sub
mov
mov
adc
mov
sub
push
and
or
stos
lds
push
push
ds
inc
adc
imul
test
and
insl
sti
jp
shll
sbb
sarl
cmp
cwtl
sub
cmp
xor
inc
sbbl
push
push
ret
insb
gs
movsl
fsts
stos
push
arpl
int
push
mov
outsl
dec
scas
pop
call
inc
adc
push
add
xchg
mov
pop
push
iret
leave
shrl
push
je
and
push
cs
lea
imul
inc
mov
mov
xchg
fidivl
push
inc
test
cmp
ljmp
jg
mov
jp
stos
push
mov
mov
lahf
movsl
scas
sbbl
lock
mov
cmp
call
fcmovb
pushl
mov
imul
out
mov
dec
push
fsubs
inc
pop
pop
pop
xchg
dec
testl
out
dec
cmp
mov
inc
fprem
call
shlb
aas
lea
push
add
xchg
dec
fcompl
add
dec
dec
jmp
outsb
pop
fcmovu
fsubrl
dec
loop
sub
mov
iret
xlat
pushf
adc
xor
dec
mov
adc
insl
mov
iret
ds
cmp
push
mov
push
popa
jmp
inc
xor
or
or
jle
ret
repnz
outsl
xchg
int3
notl
loope
loope
pop
outsb
outsb
or
bound
mov
sub
cmp
arpl
xor
pop
xchg
pop
xor
hlt
cmp
hlt
jbe
sub
insl
sti
cs
dec
jmp
and
dec
insl
jmp
ss
push
dec
iret
jl
mov
pop
jmp
ds
xor
adc
dec
jbe
test
cmp
rcrl
ljmp
xchg
bound
popa
outsb
mov
push
dec
mov
aad
pop
bound
mov
add
push
loop
aam
ljmp
mov
dec
divb
pop
or
testb
dec
sarb
sbb
xchg
pop
in
es
jnp
pushf
mov
inc
or
aam
dec
ds
cmpl
and
rcl
mov
sbb
dec
pop
lret
adc
sahf
icebp
ja
test
mov
and
lds
shr
sub
mov
aam
jl
jmp
or
loopne
jl
cmp
cmp
jo
jmp
mov
push
insb
dec
mov
xchg
push
dec
das
stc
in
push
sbb
adc
mov
dec
sub
aas
push
out
scas
xchg
lahf
lret
in
xor
xor
addr16
mov
wbinvd
mov
adc
fimull
cmp
insb
mov
iret
xor
pop
test
int
ss
lods
sbb
push
stc
push
sbb
in
aaa
shll
out
mov
add
push
xor
mov
mov
mov
fistl
jno
sub
sub
setl
cli
and
adc
fsubrp
sub
iret
xchg
bound
outsl
out
or
mov
jecxz
sub
stos
fdiv
fldenv
sti
dec
adc
mov
stos
mov
mov
popf
test
aas
fidivrl
add
iret
pop
inc
sbb
stc
neg
imul
mov
adc
pop
aad
dec
jp
enter
cmp
in
sbb
cwtl
mov
xchg
push
cmp
mul
mov
xchg
popf
jae
test
pop
jno
adc
je
popl
mov
xchg
sbb
mov
xor
in
out
inc
cld
pop
mov
dec
orl
xchg
xor
adc
cmp
jle
xor
push
pop
aam
cmp
outsl
or
lcall
outsl
mov
sub
mov
rcll
jo
and
adc
idivl
shll
xor
sub
outsl
dec
inc
not
mov
out
mov
mov
sub
sahf
adc
pop
enter
mov
mov
sbb
mov
inc
imul
aaa
repz
mulb
xchg
mov
adc
jne
ret
mov
aas
pop
sub
rcr
or
and
dec
imul
adc
js
aaa
xchg
sbb
pop
cli
aaa
adc
lcall
pop
dec
lea
adc
sub
cli
pop
mov
sub
jnp
push
inc
sarl
or
outsb
sbb
jp
mov
adc
out
push
or
cltd
subl
scas
adc
cmp
lret
daa
ret
pusha
ficoml
lds
das
in
mov
add
insl
push
lcall
mov
dec
xchg
test
add
out
jmp
inc
dec
push
sysenter
and
jg
xor
in
xor
cmp
into
dec
push
xor
testl
lods
loopne,pn
stos
pop
ja
cmp
mov
pop
sbb
push
cmp
fcmovbe
fnstcw
punpckhbw
cmpsb
jp
push
jl
stc
cli
jb
scas
jge
outsb
lret
push
shll
mov
push
fld
imul
cmp
pop
mov
jnp
addb
rclb
repz
push
stc
dec
mov
push
inc
out
sbb
sub
int3
decb
in
ret
mov
xor
mov
je
les
push
xor
or
ds
and
pop
pop
add
inc
outsb
pop
adc
and
int
inc
mov
ljmp
ss
sahf
mov
and
incb
xor
or
xchg
cltd
xchg
js
push
addr16
xchg
fidivrs
cmp
lret
cmpsl
cmp
mov
iret
and
jp
push
in
mov
dec
stos
mov
enter
lods
mov
adc
pop
hlt
ds
fwait
andb
pop
mov
push
sarb
mov
inc
lds
jne
add
out
mov
sub
ss
sbb
and
adc
lahf
cmp
stos
mov
cmpsl
pop
imul
lahf
dec
add
pop
pop
loope
sub
decl
xchg
movsb
rcl
nop
daa
mov
and
sub
scas
mov
and
adc
in
lret
or
mov
mov
or
mov
pop
out
mov
ss
fdivr
cmp
repz
cmp
in
mov
push
xor
lret
lret
add
push
cld
cmpsb
mov
fisubl
outsl
mov
add
jmp
jge
lods
int3
cmp
sbb
in
xchg
fcmovbe
push
sub
das
push
mov
sbb
mov
shl
rorb
or
push
jnp
and
mov
out
pop
mov
cltd
dec
je
mov
std
inc
ja
pxor
cmp
loopne
push
loope
inc
mov
stos
sub
outsb
lods
mov
test
mov
sarl
cmpsl
sbb
dec
sub
and
xor
mov
xchg
sbb
mov
repnz
call
pusha
repz
movsl
push
das
pop
bnd
xchg
pushf
xchg
out
fisubs
sarb
mov
aaa
into
xchg
inc
pop
mov
lods
push
fisubrs
mov
cmp
xlat
loope
pop
jecxz
flds
push
vpcomuq
sbb
das
les
jle
dec
adc
sbb
adc
ror
mov
mov
nop
das
cld
sub
or
mov
ret
outsl
or
mov
cmpsl
adc
pop
push
hlt
dec
in
push
xchg
cltd
in
add
add
stc
or
xchg
aaa
pop
and
insl
xor
inc
mov
jecxz
es
mov
ss
xor
dec
jmp
loop
mov
xor
pop
psrld
xor
cs
adc
mov
cmpsl
mov
bsr
lret
ficomps
cmp
mov
xlat
out
loopne
jne
sub
dec
sbb
repz
nop
jne
and
dec
or
out
insb
test
lcall
or
mov
in
and
mov
popa
fidivl
dec
in
cwtl
test
shr
popaw
pop
mov
pop
mov
jae
insl
idiv
jl
les
dec
xchg
mov
jp
sbb
inc
adc
jb
mov
movsb
in
stos
out
mov
ljmp
ja
andb
jnp
jnp
jmp
repnz
jge
dec
dec
fdivrl
mov
cmp
cmp
fists
cmc
fiadds
xchg
test
call
imul
xor
push
fldt
rolb
cmp
fldl
jmp
das
dec
jmp
cmp
push
movl
mov
jmp
xor
bnd
shrl
pop
xlat
gs
jne
mov
cmp
cltd
xlat
int
sbb
jnp
or
and
xchg
adc
sti
es
into
rolb
cltd
out
imull
push
aas
leave
push
xlat
mov
hlt
sbb
outsl
imul
daa
shrb
aaa
paddsw
mov
mov
or
jl
inc
cmovno
fisttps
adc
pop
lcall
jb
call
fiadds
inc
popa
pop
nop
fists
add
vpunpckhqdq
imul
ja
fwait
pop
ret
xor
xchg
pop
dec
scas
ret
and
xchg
xor
mull
cmp
xor
push
mov
scas
or
les
daa
addr16
sub
movl
add
in
popa
push
mov
adc
out
sbb
sub
das
jg
outsb
fcom
in
mov
hlt
imul
ret
add
stc
int
rcl
and
sbb
idivl
les
inc
lcall
inc
test
mov
mov
sub
daa
mov
cmc
aad
addr16
push
add
push
fwait
inc
rolb
outsl
adc
mov
push
bound
das
mov
les
aad
mov
lock
into
lods
stos
fstpl
mov
xlat
mov
enter
stc
add
ljmp
sub
fcoml
sub
fisubs
mov
pop
lock
mov
test
in
dec
sarl
pop
cli
fldl
sbb
daa
sahf
out
adc
call
jnp
push
les
popa
mov
push
test
inc
mov
das
lods
test
or
xchg
push
or
push
pushf
mov
js
outsb
call
pushf
cmpsb
sub
ret
inc
pusha
mov
aam
inc
pop
sub
aaa
es
call
mov
pop
jmp
repz
xchg
pop
pop
inc
push
jne
adc
outsl
mov
xor
decl
adc
and
cmp
cmp
lret
leave
and
mov
mov
or
cli
dec
add
fldl
or
mov
clc
lods
dec
lahf
iret
add
inc
aam
mov
ret
enter
pushf
cmp
icebp
ja
and
xorb
dec
pop
sub
nop
mov
push
sub
pop
fmul
ret
mov
fbld
out
jecxz
pop
lahf
test
call
cs
ds
ret
std
int
outsl
xor
rcll
or
pop
inc
push
mov
jg
movsb
inc
outsl
xchg
push
and
ds
mov
mov
sbbl
ret
js
mov
movb
pop
pop
arpl
fsub
mov
dec
fwait
out
cmp
and
sarl
ret
cltd
inc
cs
cli
mov
jbe
mov
test
addr16
popa
push
add
enter
sarl
aas
fdivrl
mov
rol
cltd
jo
ljmp
shrl
and
cmpl
xlat
into
mov
mov
push
mov
test
aam
lret
adc
xchg
xchg
cmp
negl
xchg
cmp
push
sbb
fdivl
out
loop
mov
push
je
mov
stos
inc
and
cli
clc
jge
shll
jl
jae
pop
jb
shlb
push
flds
cmp
inc
test
cmp
and
sub
rcll
jg
rcrl
mov
enter
or
psrlq
xlat
xchg
clc
dec
lea
cmp
mov
jmp
rorl
aaa
add
sbb
mov
xchg
mov
test
dec
aas
fsts
sub
pop
sbb
pop
sub
add
dec
jl
dec
pop
xchg
xor
out
sbb
bnd
push
call
dec
scas
push
ljmp
lretw
mov
mov
cmp
jb
outsl
sbb
aas
push
inc
in
jae
sahf
test
insb
mov
jno
xlat
mov
and
lock
les
sbb
pushf
push
pop
test
inc
rolb
into
pusha
push
pop
add
popf
push
rolb
mov
loopne
lahf
in
enter
xchg
clc
shrl
mov
cmp
push
cmp
and
inc
dec
mov
xchg
jnp
push
cltd
mov
fisubl
add
sarb
or
loop
imul
ljmp
jno
shr
dec
inc
ret
mov
mov
mov
loopne
jmp
jge
pop
insb
notb
sarl
or
mov
hlt
or
js
imul
sub
push
cli
or
rol
jnp
inc
int3
addr16
pusha
mov
fdiv
sahf
dec
pop
cltd
xor
push
ret
dec
outsl
or
bound
jne
inc
xchg
mov
push
lcall
dec
int
jecxz
jl
push
inc
setge
xchg
jae
out
dec
pop
cld
xchg
mov
adc
mov
pushf
lret
out
filds
test
shl
sbb
ret
arpl
je
fsub
pop
mov
jg
pop
scas
ret
outsb
mov
rclb
in
ret
mov
dec
mov
and
mov
jae
fdivrs
mov
out
push
repz
popa
bound
add
pop
jle
ljmp
fildll
cs
lock
dec
int3
add
cmp
loop
aaa
add
mov
push
fstpt
and
sub
nop
lcall
rol
or
imul
jle
std
dec
icebp
mov
ss
fldenv
jp
lods
xchg
pop
mov
lcall
mov
add
fisubrs
jbe
aaa
xchg
imul
out
xchg
repnz
pop
in
loopne
mov
ret
iret
repz
ljmp
adc
ss
or
test
dec
mov
lock
sbb
mov
pop
fsubl
cs
jne
push
dec
mov
xor
nop
inc
aaa
daa
mov
push
divl
add
and
pop
pop
xor
pop
mov
fs
jmp
inc
cmc
sbb
out
xor
mov
pop
insb
loop
addr16
xchg
shlb
ret
insl
jmp
fildll
mov
addr16
lods
testb
push
in
adc
cld
popf
arpl
lods
or
aas
jmp
mov
adc
mov
xorl
push
inc
das
stc
xor
bswap
outsb
outsb
popa
jl
sbb
jecxz
cwtl
aad
sti
daa
data16
or
mov
dec
es
xchg
sub
inc
stc
mov
mov
rorb
xchg
xchg
popf
add
lods
push
cli
fisttps
clc
sti
add
sbb
cmp
jl
sbbl
cwtl
mov
jecxz
aaa
jae
vmovhps
int3
jle
mov
stos
aaa
sub
cld
push
xchg
fldt
inc
cld
jb
mov
jb
lcall
ret
jle
jmp
or
neg
xchg
or
jns
hlt
sub
push
movsl
jp
push
pop
sub
imul
fadd
pop
ljmp
imul
mov
sbb
hlt
push
and
in
adc
jecxz
dec
nop
je
cwtl
mov
js,pt
mov
pop
inc
repnz
or
inc
clc
addl
cmp
push
cmp
iret
jg
test
xchg
mov
loopne
test
daa
and
movsl
in
mov
orb
ret
jge
xchg
add
fs
mov
xchg
mov
das
sub
fisubl
int
inc
fistpll
mov
stos
push
cmp
fdivrp
fcoml
daa
jecxz
popa
in
lods
popa
xchg
je
cltd
inc
into
orb
insb
nop
cmpsb
xchg
pusha
jae
stc
cli
lret
push
out
fsubrs
shlb
aam
mov
shlb
inc
pusha
mov
adc
inc
cwtl
xor
push
lcall
aad
cli
sbb
aad
in
jb
sub
and
lods
adc
jmp
mov
inc
pushf
sti
and
bound
pop
clc
lods
ret
adc
icebp
mov
mov
xor
jle
jp
data16
mov
test
popf
cmp
sub
int3
sub
imul
rcll
mov
subl
jecxz
jnp
jno
mov
jecxz
dec
xchg
xor
scas
cld
ret
rorb
xor
pushf
adc
jl
push
adc
test
jge
sbb
hlt
add
mov
mov
add
cmp
xchg
outsl
pop
cld
jns
iret
adc
inc
int3
ja
fstpl
push
or
add
lds
xor
mov
repz
push
imul
mov
or
xchg
popa
xchg
pop
int3
jno
cmp
xchg
stos
push
sbb
fdiv
inc
in
sub
xor
stos
mov
adc
mov
iret
fcoml
sub
test
ja
and
sub
fs
cmp
repnz
jne
mov
sbbb
mov
cmp
lcall
fwait
sbbb
stos
test
iret
push
mov
rclb
andb
dec
test
add
insb
pushf
mov
ficoms
xchg
pop
xchg
in
lock
test
ja
push
pop
mov
mov
gs
hlt
jmp
insb
mov
mov
in
adc
cmc
ljmp
and
adc
js
sbb
sub
mov
xchg
test
inc
subb
out
inc
stos
clc
int3
ret
in
loopne
push
aam
xchg
mov
loope
sbb
fsubrs
movsb
mov
imul
mov
rcrb
jae
sub
rcrl
clc
cmpsl
repnz
mov
cld
pop
lods
push
inc
and
aam
push
mov
je
out
jl
cld
into
pop
test
and
jo
out
insb
sarl
inc
cmp
xchg
mov
out
xor
lock
mov
sbb
add
cltd
js
test
std
sete
push
fisubrl
inc
loopne
push
mov
and
push
pop
jl
mov
outsb
out
repz
movsb
in
icebp
lds
and
loop
mov
aam
mov
jle
mov
add
ljmp
mov
sub
lcall
nop
fwait
xchg
fs
mov
jp
das
loop
cmpsl
pop
hlt
ljmp
mov
xor
jns
mov
in
mov
xchg
xchg
add
mov
rcrb
cli
ret
or
pop
test
pusha
daa
push
xchg
rolb
inc
lds
push
lods
or
imul
popa
scas
mov
movsb
push
push
mov
or
iret
xchg
pop
xor
movsl
mov
fsubs
cs
xor
xor
dec
xor
daa
xchg
and
outsb
les
sbb
out
push
and
sarb
inc
sub
inc
insl
imul
pop
and
xor
push
loop
das
dec
inc
das
loopne
adc
lea
ror
pop
lock
fiadds
ret
dec
push
dec
nop
mov
fcmovnu
nop
xchg
mov
mov
sbb
or
push
test
frstor
repz
pop
pusha
or
xchg
iret
outsl
push
mov
pop
shll
jl
sbb
rcrl
cmp
clc
loopne
fmul
mov
inc
sub
in
adc
pop
dec
push
lret
xchg
mov
ret
loop
dec
adc
dec
or
add
addb
test
mov
repnz
daa
shll
fstpl
dec
jg
mov
out
test
dec
xor
leave
fildl
xchg
aad
push
mov
lret
mov
gs
rclb
test
jl
mov
es
jle
jl
pop
adc
pop
mov
sbb
movsb
and
adc
cli
and
cmc
xchg
je
je
adc
scas
push
xor
loop
mov
call
jnp
cmpsb
in
pop
sbbl
mov
mov
pop
xchg
addr16
xchg
stos
xor
filds
js
dec
cmp
mov
mov
and
jnp
imul
dec
jp
stos
sbb
xor
cmp
mov
pop
mov
jp
sub
pop
push
lods
loopne
out
frstor
adc
shrb
jg
insb
or
lcall
sub
xor
je
rclb
push
call
push
sub
dec
mov
push
push
mov
lods
dec
jmp
push
xor
mov
dec
into
and
xchg
mov
and
stos
mov
xchg
jns
cltd
push
cmp
mov
xor
push
ret
cs
lea
ss
mov
dec
xor
or
and
cmp
out
push
and
ret
inc
pop
out
aas
mov
in
lock
out
mov
in
push
fisttps
cwtl
mov
mov
shrl
enter
dec
cs
inc
div
xchg
nop
cwtl
add
xor
test
push
fsqrt
sub
ret
aaa
test
push
jb
mov
or
out
or
mov
sub
std
adc
ds
xchg
push
in
sub
xchg
jl
int3
push
inc
pop
mov
lcall
ss
test
fwait
subb
mov
mov
jl
mov
or
lahf
add
imul
jno
xor
push
add
pop
and
jo
mov
mov
mov
and
sub
rcrl
ficompl
and
out
sarl
setle
leave
push
ds
movsl
loope
sub
cmp
push
pop
ja
test
fidivrs
sahf
add
ds
call
data16
jp
icebp
cli
add
loopne
xchg
jmp
push
push
sub
pop
inc
fidivl
xorb
pop
pop
out
lret
adc
icebp
iret
mov
daa
lret
sub
insb
mov
xchg
push
ljmp
cmp
lds
cmp
sarb
push
enter
and
and
sti
cli
xchg
push
fwait
sub
xor
inc
dec
fcoms
dec
push
mov
jp
cmpxchg
ds
loop
xor
jle
out
dec
fisubl
pop
das
jb
add
jp
sub
and
outsl
scas
scas
cltd
cmp
nop
lds
pop
xor
xor
xchg
pusha
sub
jl
jbe
pop
aam
push
mov
scas
xchg
mov
mov
dec
dec
clc
or
mov
sub
ss
sbb
mov
xchg
add
push
pop
push
xchg
mov
xchg
sub
xchg
lods
adcl
faddl
push
cmp
nop
xchg
add
dec
adc
mov
xor
push
sbb
sub
ret
mov
stos
xor
leave
lahf
sbb
mov
xchg
lsl
rorl
xchg
pop
or
mov
add
std
movsb
inc
cmp
in
inc
mov
call
dec
mov
popf
push
cmp
push
dec
xchg
inc
shlb
xchg
mov
inc
or
stos
sbbl
scas
dec
popf
mov
adc
mov
aaa
jbe
repnz
outsb
sub
dec
in
add
pop
insb
xor
fldcw
int
mov
and
xchg
fisttpll
lret
shlb
in
pop
sub
daa
push
inc
in
dec
fwait
loop
mov
xor
cmp
jo
fldt
stos
inc
xchg
test
das
in
pop
xchg
sub
add
pop
insb
into
jo
or
rorl
jb
jns
into
sbb
push
fisttpl
mov
jmp
stc
scas
incl
mov
nop
aaa
dec
repnz
sub
inc
push
xor
inc
out
ret
xchg
arpl
mov
dec
or
aam
xor
std
and
enter
icebp
mov
xchg
leave
fsubl
adc
mov
mov
loop
mov
imul
mov
arpl
jl
sub
xchg
or
push
int3
xor
inc
cltd
push
mov
fwait
push
cmpsb
jle
ret
mov
mov
or
repz
scas
lcall
sti
jp
and
xor
xchg
and
add
les
pop
cmp
pop
ds
adc
nop
push
inc
cmpl
mov
test
mov
adc
cmp
mov
and
dec
sbb
dec
aam
sub
jno
sahf
clc
jbe
insb
stos
jl
adc
mov
xor
test
in
xchg
cmp
ficoms
call
inc
out
jo
jl
xor
nop
mov
mov
test
in
nop
add
xchg
push
mov
and
add
adc
push
pop
imul
test
adc
subb
js
aaa
push
and
mov
sub
aas
sbb
xchg
pop
daa
dec
nop
cmp
pop
out
jbe
dec
pushf
or
daa
add
outsb
push
faddp
fcompl
aad
pop
adc
sahf
push
mov
out
in
es
mov
leave
sbb
or
and
out
and
cmp
js
ljmp
popf
sarb
repnz
mov
lds
int
daa
insl
push
adc
ret
inc
clc
mov
mov
xor
insb
pushf
mov
push
dec
cwtl
mov
out
lods
out
inc
fcoml
cmp
dec
jge
xor
cmpsb
sub
mov
cmpsl
jecxz
frstpm(287
std
out
sub
push
movsl
push
and
xor
scas
mov
cmp
mov
mov
mov
add
in
adc
in
mov
inc
add
cmp
sub
pushf
dec
aad
and
mov
rorb
repnz
xor
sar
cmp
dec
push
xchg
pop
insl
movsl
pop
ljmp
xlat
ret
jbe
xor
dec
ret
test
test
and
sub
imul
shlb
xchg
and
in
push
sub
daa
adc
fstps
testl
xchg
add
movsl
lods
cs
inc
mov
xchg
dec
pop
les
dec
in
adc
and
aas
jno
std
es
dec
mov
loopne
sbb
sbbb
sub
cmp
add
mov
sbb
bound
jmp
lock
push
and
gs
adc
dec
movsl
mov
jle
adcl
and
adc
mov
push
in
inc
outsl
lea
dec
mov
cwtl
ljmp
dec
jmp
insl
fnstenv
aas
add
repz
fsts
inc
pop
mov
mov
cmp
mov
loope
sub
push
xlat
and
add
mov
je
or
jg
mov
sahf
adc
loopne
jns
aas
dec
movsl
or
mov
aam
mov
lock
out
jmp
pop
in
xchg
inc
popf
push
fnstenv
mov
loop
push
mov
leave
out
pmaxub
inc
and
lahf
sti
dec
pop
loop
xchg
xchg
push
and
shl
outsb
push
stos
rorb
addb
add
and
jb
mov
push
mov
xchg
sbb
dec
mov
mov
mov
nop
xlat
or
add
test
sbb
jg
pop
cld
fildl
cmc
lcall
mov
sub
mov
bound
outsl
mov
jmp
mov
stos
fisubs
mov
lea
lods
jb
xor
aad
out
push
outsl
jge
rcrb
xchg
arpl
je
pop
add
adc
and
jl
rorb
xchg
jnp
or
mov
js
shl
push
mov
scas
pop
shll
jb
mov
push
stos
mov
pop
mov
push
cli
jmp
adc
jae
test
ror
mov
jbe
cmp
sarb
rcrl
mov
pop
test
or
in
or
test
and
mov
repz
mov
or
xchg
and
clc
ret
cmp
int3
daa
ret
push
sub
inc
jle
adc
jae
iret
imul
clc
add
fistpll
pop
sbb
js
jo
sub
push
nop
lods
leave
xor
stos
add
bound
scas
call
les
adc
mov
jb
mov
mov
sbb
lret
hlt
push
mov
stc
ror
shl
adc
or
mov
test
std
jo
cmpb
notl
ss
es
rcr
negb
xchg
inc
enter
in
out
mov
sub
cs
int
inc
jmp
jo
int3
dec
push
out
or
in
and
add
cmp
insb
ja
bound
lods
test
sbb
icebp
sti
std
btr
push
int
push
sbbl
cmp
rorb
adc
jo
mov
decb
imul
pop
xchg
imul
jae
pusha
pop
dec
mov
xor
sbb
test
fdivr
shll
sub
mov
shll
bound
mov
sub
xchg
jb
dec
pop
jae
aam
outsb
lock
mov
outsl
jns,pn
ficompl
inc
lcall
stos
test
ds
data16
ljmp
pop
data16
push
pop
adc
mov
pop
dec
mov
pushf
dec
or
mov
pop
sub
mov
or
sub
or
ds
mov
sti
rcrb
psubd
ss
cmp
arpl
pop
mov
adc
sbb
mov
jae
jecxz
push
xchg
clc
pop
and
mov
pop
stc
push
dec
cmp
mov
out
sbb
std
dec
js
push
dec
icebp
call
push
hlt
push
out
stc
push
cmc
outsl
cmp
shlb
cs
mov
jb
push
cs
outsb
fists
or
mov
push
xor
xlat
cwtl
adc
mov
inc
out
mov
movsl
jae
mov
mov
push
mov
sti
xchg
imul
jge
pop
jmp
jge
pop
in
aad
fadds
scas
cltd
dec
mov
cmpsb
add
test
cmp
pop
mov
pop
pop
dec
pop
mov
sbb
or
aam
xchg
mov
repnz
lds
sbb
mov
fmuls
gs
sti
add
cmp
popa
dec
xchg
arpl
das
enter
pop
das
xor
daa
rorl
and
icebp
cmp
jne
stos
pop
aam
pop
mov
cmc
enter
push
sbb
xor
gs
push
mov
rcrl
mov
call
sub
pop
in
dec
dec
and
in
popa
and
xor
jp,pt
dec
gs
and
pop
mov
mov
dec
loopne
jmp
mov
push
or
aam
pavgb
mov
les
mov
inc
imul
adc
sbb
sub
jle
xor
mov
aad
adc
out
sub
rol
arpl
or
int3
lea
pop
stos
mov
std
lds
ficomps
popf
arpl
mov
js
xchg
rep
out
movsl
aam
adc
mov
dec
mov
hlt
cs
cltd
xor
inc
pushf
cmp
inc
pushf
cmp
js
and
jl
and
jo
push
sti
je
pop
sti
push
cs
shlb
cmc
or
jg
push
in
jp
imul
adc
pop
test
pop
ss
shlb
mov
add
lods
test
sarl
aaa
lods
xchg
mov
jp
insb
add
and
adc
repnz
jmp
add
add
xchg
inc
add
std
jg
xchg
loop
cld
icebp
xor
jbe
call
notl
inc
mov
fbstp
mov
aaa
pop
ss
test
dec
cmp
lahf
out
out
test
aas
pop
das
mov
add
lret
test
sub
popa
xor
xchg
xor
scas
ret
mov
or
or
lds
mov
inc
ret
xchg
sub
adc
js
cmpsl
lcall
fisttps
sti
bnd
pop
jae
pop
push
pushf
imul
andb
adc
and
sub
std
sbb
pop
mov
out
aad
or
inc
scas
repnz
mov
jl
pop
or
fwait
pop
push
inc
test
add
lds
xchg
push
roll
mov
stos
lods
ret
fstps
clc
lcall
mov
xor
rorl
sbb
rorb
aam
or
dec
fidivrl
sub
xor
pop
addr16
inc
dec
cli
mov
pop
xlat
sub
test
notl
fdivl
cmp
push
call
xor
in
mov
cli
cmp
xchg
jo
jge
sbb
lcall
enter
div
add
jno
push
push
in
subl
es
movsb
jae
jmp
push
js
dec
lcall
pop
outsb
loopne
insl
lds
notb
adc
push
add
inc
data16
fs
and
pop
adc
fwait
pop
into
test
nop
mov
call
adcl
je
shlb
dec
arpl
jbe
bound
mov
test
or
jo
mov
jb
das
jp
jno
adc
or
js
cmpsl
test
mov
mov
rorl
push
or
pop
fstps
in
ret
mov
push
and
sub
sti
jmp
imul
mov
rolb
in
lods
icebp
mov
jnp
dec
out
push
pushf
das
and
aaa
jp
inc
enter
push
rcll
andl
bound
inc
int3
sbb
adc
hlt
scas
xlat
imul
pop
jnp
out
push
inc
sub
lea
pushf
push
jle
mov
xor
leave
inc
mov
xor
sahf
pop
leave
inc
mov
ljmp
jne
xchg
mov
adc
lea
test
cmp
xor
bound
daa
push
mov
cmp
push
loopne
cs
movsb
sbb
adc
sahf
jmp
push
test
in
xchg
decl
xor
jbe
push
lods
daa
int3
pop
mov
frstor
jl
mov
loopne
adcb
xchg
das
pop
fidivrl
push
pop
adc
ret
sub
mov
mov
loope
sub
or
jns
sub
scas
repnz
int3
shrl
xor
cltd
sub
add
das
jecxz
cmp
cli
or
pusha
xchg
jp
mov
sbb
lret
push
add
sub
or
xor
stos
mov
pop
push
es
dec
sti
jp
stc
icebp
shl
and
sbb
sar
add
or
ficoms
stc
and
dec
jl
mov
daa
xchg
in
adc
in
mov
sbb
mov
gs
mov
push
out
cmp
cmpsl
daa
xor
jge
js
mov
insl
sbb
mov
outsl
cmp
mov
ds
mov
rcll
jp
pop
popf
cmp
adcb
push
push
mov
mov
test
mov
ret
jno
push
sarl
jbe
popa
rorb
sbb
cli
sbb
push
cld
jmp
pop
pop
scas
push
push
insb
sbb
sarb
push
xchg
pop
lock
mov
cmp
mov
or
cmpsl
mov
adc
sub
sub
pusha
dec
adc
cld
aaa
sahf
in
fisttpl
test
inc
std
sub
aam
xor
movsl
int
pop
xor
loopne
fdiv
and
pop
int3
daa
jmp
fbstp
push
sub
fadds
mov
lods
or
push
inc
xchg
cmc
cmp
cmp
mov
je
mov
lods
enter
mov
fcmovb
je
je
stos
aaa
and
je
xchg
fcoml
push
adc
and
dec
stos
int
fistpl
std
out
add
shlb
cmp
jb,pt
cmp
dec
mov
aam
pop
pop
pop
xor
cwtl
fs
and
or
jnp
xor
xorb
cmpsb
inc
add
sub
adc
sub
sub
and
mov
shrb
jmp
mov
jmp
sbb
cmpsb
out
cmc
mov
mov
push
cmp
jae
aam
dec
push
cld
in
sbb
insb
leave
sub
je
sub
enter
mov
shrl
or
cmp
lds
in
negb
pusha
lods
js
movsb
inc
inc
xchg
mov
mov
loopne
mov
cmc
test
add
fwait
shll
fcomps
fs
xorb
mov
das
add
dec
mov
and
movb
add
call
lds
jns
pop
inc
or
adc
pop
stos
int3
cmp
lahf
rolb
mov
int3
insl
sub
ljmp
sbb
add
or
ret
inc
jnp
sub
enter
xchg
sbb
cld
test
inc
jb
push
push
ja
cli
lock
sub
aam
sar
or
aad
decb
mov
pushf
dec
rcrb
pop
sbb
jg
insl
and
push
lods
pop
cmc
sub
xor
jecxz
xor
xchg
sbb
test
aad
and
and
int3
mov
ljmp
and
int3
and
int
cmp
mov
pushf
jmp
imul
pop
call
jmp
ret
dec
repnz
dec
hlt
xor
and
lock
shl
cmp
das
mov
cld
add
imul
pop
dec
adc
fimull
out
sub
and
enter
sti
cmp
out
mov
adc
shr
cld
or
out
mov
cmpl
pop
add
mov
sarl
daa
rcll
mov
imul
mov
rolb
and
adc
xor
pop
outsl
pop
loopne
xor
xor
in
push
shrl
dec
pop
test
mov
arpl
int3
add
into
outsl
adcl
pop
inc
add
sub
sar
in
jns
push
loop
stos
jno
int3
mov
cmp
inc
xor
pop
dec
cmpsb
dec
inc
pop
jb
sbb
mov
stos
mov
or
insb
addr16
gs
adc
imul
loop
and
push
mov
cmp
push
rcr
push
xor
nop
pop
aaa
pop
dec
sub
les
mov
jg
pop
pusha
ret
and
insl
push
mov
movsl
xchg
shlb
dec
loopne
jl
icebp
sahf
push
sub
cwtl
sti
mov
aas
add
in
out
addr16
je
iret
cltd
inc
in
fadds
push
ret
lods
dec
imul
inc
inc
sub
jns
inc
cmp
inc
jle
jecxz
cmpl
adc
test
mov
dec
xchg
mov
jle
aad
add
decl
pop
xchg
lret
les
test
lret
jmp
pop
or
dec
gs
xor
rcrb
jmp
pop
in
lret
aaa
cmpsb
push
jb
jno
loop
xor
lock
adc
test
mov
inc
sahf
int3
ret
fwait
mov
rcrl
xor
xor
mov
push
fcom
ret
ret
test
in
cld
lahf
aad
or
inc
xchg
cmp
pop
xchg
xchg
dec
pop
sbb
cmp
push
mov
add
push
cmpsb
push
shll
call
jp
sahf
cmc
or
xchg
jnp
movsl
pop
lods
or
lcall
mov
and
sbb
jbe
popf
jle
das
imul
sub
jmp
inc
push
enter
xchg
iret
push
rolb
loop
dec
lahf
rclb
imul
mov
add
test
int
pushl
xor
pop
adc
jo
sub
xlat
sbb
adc
sub
xchg
sub
jo
aam
dec
adc
mov
push
dec
mov
inc
addr16
loop
adc
xchg
test
xchg
mov
dec
dec
mov
ja
out
pop
and
out
sub
adc
insl
lret
push
dec
cs
xor
adc
mov
cli
mov
xchg
pop
in
cwtl
bound
push
inc
jl
popa
mov
sahf
lahf
jno
mov
xchg
out
xor
push
push
int3
xor
inc
dec
xchg
mov
ret
fcmovu
inc
or
inc
loop
faddl
or
loope
pop
adc
add
sbb
sub
cmp
cs
fiaddl
mov
xchg
adc
test
xor
sbb
negb
lret
ljmp
lock
cmp
mov
or
incb
dec
in
xchg
xchg
dec
idivb
xorb
pop
sbb
sub
push
sub
sbb
pop
and
aam
xchg
lea
je
out
mov
mov
test
fdivr
cld
inc
pop
dec
mov
sub
ljmp
cld
inc
cmp
in
stc
enter
cmpsb
xchg
cmp
and
sub
pop
mov
pop
adc
imul
pop
jae
pop
loope
add
mov
and
lahf
jo
mov
popa
and
outsl
mov
sti
adc
addr16
lea
enter
adc
inc
sub
add
push
popf
jno
mov
cmp
cli
aas
or
mov
scas
sub
sti
jo
cmp
add
jmp
roll
repnz
cld
dec
push
mov
rcl
sahf
mov
push
lea
clc
subl
xchg
dec
adc
in
dec
cmpsl
mov
jl
cmpsb
push
fmul
adc
mov
loop
xchg
mov
fcoms
cltd
mov
roll
pop
mov
add
xchg
ret
mov
int
dec
fidivrl
xchg
stos
notb
fcomip
fdivrl
gs
pop
lret
and
fcompl
es
aas
pop
xchg
mov
jp
pop
out
add
add
cli
dec
cli
lret
fcmovu
aaa
lock
sbb
ficoml
and
das
adc
imul
arpl
xor
lret
das
add
in
call
mov
ljmp
mov
ss
lds
sbb
int3
into
dec
int
or
push
fmull
and
mov
test
outsl
jge
xchg
shl
outsl
rcr
outsl
lods
mov
in
test
es
test
and
sub
test
xor
pop
cmp
std
sub
int
insl
sub
xorl
sbb
out
sub
aad
and
shll
mov
shrl
int
mov
jmp
jb
scas
iret
inc
mov
or
sti
and
imul
xor
sbb
faddl
push
or
mov
cltd
sahf
add
orl
cltd
das
lret
cmp
and
lds
mov
in
add
xorl
fisttpl
fsubl
in
pushf
daa
rol
or
mov
jb
les
mov
mov
jno
test
pushf
cmpb
in
cmpsl
stc
xor
sbb
popf
mov
xlat
test
imul
das
push
jge
pop
adc
push
add
mov
cs
shrb
add
and
adc
pop
jmp
add
push
jmp
sub
pop
add
movsl
sub
movsb
cmp
scas
outsb
ret
mov
arpl
jg
sub
stc
ja
aas
in
xor
lret
cmp
jp
and
push
ret
aad
shlb
xchg
loopne
xor
sub
mov
mov
push
add
lea
shll
sub
in
add
negl
inc
in
dec
testb
sbb
add
test
add
loop
and
cmp
rcrl
mov
hlt
lcall
push
pop
popf
sub
data16
rorl
sbb
insl
mov
cltd
jo
mov
dec
mov
pusha
pop
cmp
repz
dec
push
out
xor
mov
adc
push
out
push
and
pop
popa
mov
jo
sub
inc
lds
repz
in
cmpsb
ja
pop
aas
add
mov
clc
bound
and
push
pop
mov
jo
rolb
mov
cmp
div
sbb
pushf
mov
push
xchg
call
mov
adc
mov
in
cmp
negl
xchg
ljmp
and
into
xor
adcb
or
aas
loopne
lret
pop
push
sub
xor
enter
push
cmpsb
fmull
clc
jno
pop
ret
aam
add
adc
xor
mov
jae
fisttpll
bound
fcomps
lret
mov
push
lret
xchg
popf
inc
mov
xor
andb
lods
fsts
dec
push
mov
push
subl
pop
push
push
pop
or
lock
fmul
xchg
push
mov
std
cltd
cmpsl
dec
ja
xchg
mov
mov
push
adc
jle
test
xchg
xor
dec
mov
xchg
sub
mov
adc
das
ret
mov
sarl
mov
cld
push
leave
sbb
pop
cld
xor
ret
fdivl
xlat
movsb
cs
insb
cli
ja
repz
pusha
jp
or
cs
andb
jecxz
jno
inc
sub
mov
dec
adc
xchg
rorb
adc
leave
jle
cltd
push
add
das
and
adc
add
lods
adc
sbb
mov
xor
lods
mov
rorb
push
and
mov
fidivs
repz
hlt
rcrl
inc
jno
pop
push
sub
push
cmp
xchg
cmp
mov
add
inc
sbb
mov
movsb
outsl
mov
gs
add
mov
lret
adc
xchg
cmpsb
push
jg
mov
inc
out
xor
or
in
fdivrl
cld
add
inc
pushf
gs
ret
cmpsl
test
sbb
mov
call
sub
mov
cld
inc
je
cmc
cmp
shlb
ja
mov
sahf
xchg
rcll
shrb
test
loope
repnz
scas
fimull
lods
and
and
xchg
mov
pop
pushf
mov
xchg
cli
and
cmp
lods
iret
cmpsl
xchg
mov
jecxz
add
mov
jmp
fiaddl
loopne
add
or
in
xor
in
sub
pop
pop
cld
or
cli
out
inc
jl
popf
pop
add
jne
mov
push
sub
xchg
ja,pn
or
sbb
ss
mov
aaa
adc
jg
pop
jnp
xchg
fimuls
je
or
repnz
mov
mov
jl
test
mov
xchg
sbb
xchg
push
daa
push
data16
mov
stc
xchg
or
repnz
mulb
and
jmp
mov
out
mov
add
cltd
and
dec
mov
aad
aaa
pop
inc
sub
mov
es
cmpsb
repnz
aaa
ss
mov
pop
add
and
sbb
jne
mov
sahf
and
add
mov
out
notl
pop
aas
xchg
cmpsl
test
hlt
iret
jmp
aad
mov
lods
lods
bound
mov
mov
lret
mov
and
sub
fs
mov
pusha
push
mov
inc
loope
lret
cld
push
loopne
lret
mov
jecxz
stc
pusha
mov
jbe
mov
pop
jecxz
mov
push
lahf
mov
pop
dec
addr16
cwtl
jnp
mov
ds
adc
jno
sbb
bound
xor
or
shll
mov
mov
pop
push
aaa
xor
fwait
scas
and
icebp
push
mov
sbb
mov
and
cmpsl
pop
mov
ret
daa
ret
insb
xchg
out
shrb
adc
xchg
push
das
pop
mov
mull
movsb
sub
movsb
inc
gs
jg
arpl
ljmp
fsub
cmp
shll
or
bts
pusha
in
lock
mov
add
js
sahf
std
push
and
add
and
lock
sub
adc
das
iret
movsb
pop
sbb
push
clc
mov
or
cs
popf
enter
test
in
sarl
mov
movsb
jl
repnz
mov
ljmp
mov
push
popf
pop
dec
cmpsb
sub
and
int3
sub
loop
pop
sub
andb
push
movsl
dec
into
or
and
xchg
push
push
jl
in
roll
ret
mov
faddl
jge
test
cli
or
hlt
adcb
jnp
sar
stos
xor
adcb
mov
in
fistl
int3
clc
push
pop
cmpsl
xorb
shlb
xor
negl
add
arpl
je
fiaddl
pop
adc
hlt
test
mov
test
push
sub
and
shr
push
push
testl
out
push
sub
pop
out
mov
xor
push
jecxz
sbb
xchg
push
cmp
lcall
cmpsl
dec
cmpsb
fldenv
cltd
mov
lods
xor
inc
outsb
popa
and
int3
int3
jb
xor
enter
ds
call
push
addl
or
sub
lahf
call
packssdw
push
in
sbb
call
inc
inc
addr16
pop
adc
inc
call
dec
add
cmp
lahf
fcomps
repz
cmp
sub
or
notl
in
outsl
or
in
nop
fiaddl
push
in
sub
and
in
inc
xor
push
pop
push
fcmovb
mov
mov
fcompl
sbb
lea
xchg
pop
aaa
push
mov
cmp
lret
cltd
mov
lcall
inc
int
aas
out
pusha
pop
aad
pop
ljmp
jae
addr16
je
jnp
pushf
adc
jle
out
lret
idiv
enter
mov
xchg
push
xchg
inc
fsub
xor
inc
es
fistpl
sub
cmc
pop
aas
lcall
inc
loope
sub
bound
shr
dec
mov
cld
or
jg
push
push
push
jmp
adc
push
jmp
pop
cmpsb
pop
pop
cli
push
xchg
adc
or
icebp
push
jb
in
icebp
or
divl
add
cld
popa
mov
in
lret
dec
xor
popa
push
in
outsl
xchg
pop
mov
lahf
jecxz
ret
loopne
dec
mov
pop
pop
pop
mov
jg
adc
or
inc
mov
inc
rcrb
dec
jge
cmp
dec
push
je
call
sbb
int
loope
and
outsl
or
sbb
fwait
dec
adc
imul
cmp
and
sbb
jmp
je
mov
inc
imul
mov
imul
push
into
add
faddp
add
cmp
dec
adc
aam
xchg
lods
mov
lcall
xchg
jmp
xchg
mov
cmpsl
xor
out
cmpsl
mov
xchg
xor
fs
pop
daa
adc
cmp
stos
out
repnz
jns
xchg
push
jae
sbb
or
xchg
out
mov
adcl
lods
mov
push
ljmp
out
mov
mov
push
push
pop
addr16
les
or
sbb
ss
insb
popa
dec
or
sti
mov
test
mov
mov
pop
outsb
lcall
mov
out
pushf
jp
sub
test
test
jl
iret
fstps
inc
sub
imul
aam
ret
cmp
leave
lods
aas
mov
inc
inc
lea
mov
add
sub
pushf
aaa
in
int
cwtl
and
testb
or
hlt
rolb
aas
and
mov
into
jo
inc
xlat
or
rorl
dec
sub
iret
mov
add
pop
cwtl
mov
dec
pop
jb
mov
sarl
insl
sub
jmp
pop
ret
outsb
lea
adc
sub
adc
jp
repz
imul
loopne
repnz
sub
sub
sahf
jo
fsubrs
test
lods
pop
out
lahf
jns
stos
dec
insb
stos
push
sbb
jmp
int3
xchg
add
pop
fmull
pop
xchg
sbb
or
data16
fists
fs
in
xor
mov
xchg
subb
xchg
push
and
xchg
scas
in
mov
mov
push
sub
cmp
mov
testl
mov
push
pop
dec
xchg
lret
push
mov
aad
jmp
sub
mov
jbe
fimuls
inc
fcomip
sbb
lret
sbb
ljmp
or
adc
cmpsb
daa
xchg
lahf
push
mov
outsl
pusha
in
pusha
shr
call
xchg
add
movsl
mov
jns
sub
mov
data16
xor
shlb
pop
sub
rol
fsubr
jge
xchg
cmpsl
ss
adcl
inc
sahf
arpl
dec
ret
pop
ljmp
mov
daa
ret
inc
pop
cmp
add
sub
jecxz
pop
mov
pushf
cwtl
inc
lcall
leave
adc
out
daa
or
mov
jp
sbbl
call
add
pop
test
push
xchg
fcoms
cmp
and
xor
cmp
cmp
shrb
mov
lods
test
mov
sub
and
fisttps
push
flds
loop
arpl
popf
sub
xor
jmp
lcall
push
pushf
sub
jo
test
or
ficompl
in
adc
mov
push
in
mov
pop
rolb
xor
mov
xlat
push
dec
push
fildll
xlat
aam
in
xchg
in
test
pop
aaa
in
andb
dec
sbb
inc
fistpl
inc
jne
popf
jp
or
jns
out
cmpsl
mov
jl
inc
aad
sub
fildl
jmp
and
adc
inc
push
add
cmpsl
bound
fidivl
push
movsl
enter
mov
ret
jne
xchg
push
outsb
rcrl
and
xor
or
das
xor
adc
mov
add
jg
push
xor
outsl
lret
mov
aaa
loop
add
mov
bound
insl
adc
sti
jne
mov
cmp
cmp
aaa
fldl
fdivs
xlat
push
pop
imull
cmp
jae
cmp
cld
cmp
enter
iret
loope
inc
loop
js
test
jg
scas
das
jge
xor
lahf
and
push
push
cmp
shrl
mov
push
sbb
aas
das
cmp
inc
js
mov
adc
adc
xor
push
or
push
data16
sub
pop
sbb
dec
jmp
push
and
scas
add
addr16
int
sarl
into
and
mov
and
shll
push
fs
repnz
push
xchg
imul
sbb
dec
out
inc
ss
cmp
or
sub
ret
xorb
push
pop
movsb
insb
pop
fldenv
mov
nop
ret
cltd
mov
mov
cld
adc
mov
gs
or
ds
scas
push
addb
jae
lods
in
mov
or
in
hlt
fxch
mov
lea
cmp
jle
addr16
mov
jl
pop
mov
mov
movsb
inc
pop
stos
cli
insb
xor
xchg
adc
cmpsl
or
testl
add
adc
push
sub
adc
inc
pop
inc
mov
sti
lods
jmp
mov
lds
das
sti
push
xchg
jo
dec
sarb
int3
cwtl
stc
in
cmp
xchg
and
scas
ss
jecxz
shll
dec
dec
nop
jnp
bound
ret
ljmp
pop
fisubl
lock
push
mov
rcrl
mov
aam
cmp
adc
adc
ret
xor
fadds
pop
sbb
ret
mov
mov
sbb
lea
popa
mov
test
push
dec
cs
roll
and
or
loopne
or
fmuls
stos
inc
rcl
stos
inc
insl
adc
xchg
add
adc
cli
sbb
call
sbb
pop
mov
aam
iret
aas
mov
mov
test
js
aaa
push
pop
push
push
sub
ret
pop
test
loope
push
xor
ficoml
jle
mov
cmp
nop
insl
or
lcall
aas
icebp
leave
xchg
and
fists
out
test
pop
loop
adc
pop
mov
jle
insb
es
cmp
rolb
xorb
add
jo
in
out
test
or
inc
xchg
xor
add
mov
sbb
les
sub
sub
jl
sub
mov
cmp
hlt
mov
hlt
aas
js
xorl
rcll
push
pop
lahf
mov
mov
cltd
hlt
add
sub
cmc
aas
fisubrs
fiadds
mov
sbb
aam
pop
push
decl
fbld
xchg
js
pop
add
rcll
pop
lcall
jb
imul
mov
cmpb
inc
mov
ja
xor
inc
xor
into
push
cmpsb
ss
jo
inc
dec
pop
je
in
jno
test
mov
cmp
repz
aaa
or
out
stc
or
inc
in
mov
pop
jge
lret
or
or
fisubrs
testb
push
cli
mov
scas
push
dec
fs
xor
adc
xchg
mov
cmpps
inc
push
jecxz
sarb
sub
iret
orps
mov
inc
adc
stc
ret
mov
add
ds
scas
jnp
stos
cmp
rcrl
pop
inc
les
mov
std
jns
aas
divb
in
sub
sub
stc
cwtl
sbb
pop
rorb
push
sbb
cli
aaa
xchg
int3
popf
in
dec
mov
out
jne
mov
imul
xchg
notl
cs
and
sbb
scas
pop
pop
inc
dec
dec
inc
mov
lea
mov
iret
fcmovbe
pop
jae
mov
xchg
clc
add
or
inc
mov
lock
xchg
and
adc
mov
fs
xchg
and
addr16
fwait
xlat
jecxz
clc
dec
push
sub
push
xchg
std
pushf
pop
loopne
push
push
jl
ss
aad
dec
sub
inc
test
scas
inc
push
cmp
sub
shlb
mov
ffree
mov
ffree
popf
pushl
sub
pop
pushf
or
sub
sbb
xchg
cmp
subl
push
lcall
add
movl
out
cltd
insl
dec
ret
pusha
inc
jae
out
mov
jl
cmpl
jo,pt
pop
add
int
hlt
ror
jmp
mov
movsl
repz
std
dec
push
xchg
and
pushf
xlat
aas
mov
mov
int
sarl
adc
stos
fsub
inc
and
or
scas
jbe
arpl
mov
sbb
inc
inc
out
imul
std
imul
ljmp
sbb
daa
fstpl
test
movsl
pop
idivl
jbe
repz
scas
mov
mov
cmp
pop
fwait
xor
adc
push
mov
mov
add
add
out
mov
cs
inc
ret
push
sub
add
rol
popa
fsubl
pop
lods
pop
cmp
in
push
cmp
je
sub
push
jae
sub
fwait
mov
mov
rcr
sub
cmp
movsl
push
jl
inc
movsl
adc
stos
cld
cmp
mov
and
push
mov
xchg
or
popf
addr16
push
inc
negb
das
adc
adc
testl
mov
add
ljmp
inc
adc
mov
push
int
cmp
gs
xchg
repz
inc
jne
lret
test
push
fs
loopne
xchg
call
jg
mov
enter
stos
and
repz
sub
mov
pop
ss
popa
xor
bound
cltd
lret
cmp
stos
mov
lret
add
mov
fmul
sub
in
cld
sub
fdivp
cltd
lret
and
mov
cld
mov
movsl
hlt
jns
lods
adc
lcall
xchg
push
shll
mov
ret
xchg
sbb
outsb
cwtl
cmp
jmp
roll
xchg
dec
in
adc
and
sbbl
js
push
and
inc
push
or
push
and
ds
inc
mov
insl
jbe
adc
jae
mov
pusha
scas
or
cld
xor
sbb
test
incl
inc
test
imul
adc
das
stos
pop
and
repz
cmpsb
cmp
mov
sub
cltd
cmp
nop
hlt
out
pushf
cld
es
sbb
test
xchg
fwait
pop
inc
ss
fisubs
add
movsb
push
js
inc
and
scas
mov
jl
xchg
icebp
dec
mov
je
pop
repnz
jbe
int3
repnz
shlb
push
in
loope
fs
push
xchg
mov
pop
sub
lcall
xchg
leave
std
jecxz
popa
vfnmadd132ps
cmp
enter
aas
sbb
and
ss
lods
loope
mov
gs
out
push
and
dec
shlb
or
int
arpl
add
js
lock
rolb
xlat
ss
hlt
sbb
pop
push
mov
sub
xchg
dec
sar
mov
std
or
ret
push
cmp
push
cmc
lods
dec
repnz
push
ss
ret
xchg
enter
clc
mov
jge
or
and
push
pop
sub
lods
test
sub
movsl
pop
loope
push
xchg
mov
push
inc
bound
dec
lahf
je
les
movsbl
xor
jge
cmp
sub
fsts
aas
je
mov
dec
ds
gs
daa
sbbb
inc
idivl
scas
jno
mov
sub
and
pop
push
fstl
xchg
mov
scas
icebp
pop
push
jle
lods
loop
jo
ss
xor
sahf
push
dec
xchg
call
dec
movsl
mov
pop
jo
es
sub
shr
mov
jecxz
mov
jne
mov
jns
test
sbb
jmp
aas
pop
jnp
sbb
repz
loop
outsl
jmp
add
mov
mov
int
mov
lea
inc
mov
outsb
pop
xchg
fistl
outsl
add
ret
fstps
pop
xchg
in
pop
cli
fwait
jp
and
stos
jg
sbb
or
sbb
test
cmp
out
inc
fwait
int
mov
out
out
pop
push
ljmp
rol
stos
fsubrl
testb
aas
sbb
sbb
pusha
adc
push
inc
out
rolb
sub
mov
push
rorb
cmp
mov
dec
fimull
push
mov
adc
shlb
stc
scas
add
mov
cmpsl
mov
repnz
fwait
dec
dec
stos
add
cmp
mov
mov
mov
pop
ret
insl
jl
xor
int3
mov
popl
push
add
xor
push
dec
xor
sbb
std
std
jp
mov
inc
dec
sub
scas
popf
sbb
inc
into
pop
cmpsb
pop
repnz
adc
in
adc
lcall
pop
out
std
add
arpl
imull
rcr
xlat
in
push
dec
sub
or
cltd
mov
js
cmp
push
cmp
das
ja
in
cmp
push
lret
ljmp
or
inc
or
hlt
inc
test
dec
lcall
and
pop
mov
jg
adc
das
mov
test
push
mov
imul
leave
adc
jne
out
xlat
sub
sub
stos
and
jo
mov
hlt
mov
inc
es
cmp
out
movsb
add
ss
arpl
push
arpl
pop
pop
test
rcl
rol
sub
and
arpl
xchg
add
or
pop
push
leave
cwtl
add
mov
fmul
sub
add
std
cwtl
lock
or
ret
imul
cmpsl
sub
add
xor
pop
sahf
push
inc
dec
pop
inc
jo
lcall
ret
pop
stos
test
sub
fxch
bound
jo
or
mov
add
mov
pop
dec
cmpb
mov
xor
stos
jno
aad
cltd
inc
ss
lods
int3
mov
cmpsl
inc
jnp
and
sub
mov
pop
imul
lret
bound
xor
test
xchg
out
ret
mov
int
mov
mov
dec
ljmp
and
push
mov
lea
cmc
daa
subl
dec
jnp
in
sub
int3
rolb
iret
ds
cmpsl
lahf
xchg
jnp,pn
inc
mov
into
bound
imul
and
push
xor
pop
pop
adc
je
sbb
sbb
outsl
mov
jecxz
lcall
cmpsb
sub
aaa
adc
pop
push
loopne
data16
out
insl
or
out
adc
out
out
sub
and
stc
add
xor
sub
daa
sbb
lret
test
repnz
pop
stos
sub
repz
ljmp
sub
jb
fsubrs
dec
cmpsb
cltd
xchg
movsl
mov
pop
xor
es
adc
inc
aam
pop
sbb
push
nop
push
jo
sub
xor
xchg
pusha
and
jno
push
aam
out
sub
mov
or
std
add
mov
push
test
jg
bound
arpl
inc
jmp
clc
sub
ss
scas
fnstsw
ja
mov
or
mov
sub
mov
mov
dec
cmp
in
cmp
xchg
scas
and
mov
or
mov
jmp
cmp
mov
popf
mov
incb
cs
adc
xchg
ljmp
xchg
mov
sbb
add
mov
mov
movsb
mov
addr16
mov
xor
fwait
pop
sub
movsb
jmp
mov
push
push
shl
jb
ret
inc
add
adc
jbe
andb
sub
pop
push
repnz
fistpl
repz
pushf
pop
xchg
imul
ljmp
jae
loopne
js
das
arpl
dec
inc
pushf
xchg
push
cwtl
or
ds
pop
sub
mov
mov
cld
iret
int3
pop
jp
pop
outsl
dec
mov
pop
stc
cltd
jmp
inc
dec
in
and
les
mov
movsl
sbb
ror
pop
pop
clc
push
mov
xlat
sbbl
std
and
ds
gs
mov
lds
adc
arpl
sbb
lret
lret
orb
pop
sbb
pusha
jecxz
jbe
rep
pusha
cli
xor
cmpsl
push
cld
pop
lea
mov
sub
pop
iret
enter
pop
bnd
int3
sub
mov
fnstsw
dec
adcl
sub
test
mov
or
dec
mov
and
ret
fdivl
inc
add
test
stos
incl
add
cmp
incb
test
ds
aaa
dec
and
pop
lock
mulb
in
sub
add
cs
nop
pop
jns
clc
out
loopne
cmp
pop
add
inc
inc
ficoml
pop
mov
push
or
std
inc
jge
pop
lock
mov
mov
push
mov
mov
xor
sub
hlt
aam
fnstcw
inc
out
jecxz
mov
jg
in
test
push
jmp
sub
sbb
push
push
xlat
int3
jp
sbb
inc
mov
push
je
ffree
adc
fsubl
mov
hlt
shl
stos
or
jmp
sub
pop
aas
adc
es
call
lods
mov
jmp
or
adc
das
mov
push
xor
sarb
or
mov
dec
push
ss
sub
push
mov
repnz
xor
jmp
adc
xor
into
call
adc
adc
or
inc
sti
cs
pop
pop
fmul
mov
sbb
in
cmp
ficompl
js
xor
pop
jle
aad
sbb
sub
sbb
mov
mov
es
lods
mov
cwtl
xchg
dec
inc
testl
scas
cli
int3
mov
and
mov
sti
or
mov
cmp
push
fnclex
dec
cmpsb
mov
add
adc
sbb
cltd
andl
test
dec
in
jo
in
xorb
call
jmp
cmpsl
inc
shrl
roll
push
call
imul
fwait
lretw
lret
inc
fs
inc
pusha
xor
aam
inc
cmpsl
sub
dec
std
xorl
ret
in
push
dec
sbb
xor
pop
pop
pop
gs
pop
cmp
and
loop
aam
iret
push
or
push
out
stc
stos
cmp
xorl
sbb
lcall
gs
adc
hlt
popf
or
ss
pop
xor
mov
pop
cld
out
ja
jl
jne
push
cmpsl
mov
add
outsb
mov
pop
inc
stos
add
loopne
jmp
mov
lcall
rclb
movsl
cmp
les
sbb
clc
cmp
pop
pop
movsl
sbb
mov
fistl
ja
aad
push
dec
int3
or
sbb
cld
in
mov
mov
repz
out
sbb
das
mov
add
xor
sbb
in
das
mov
add
inc
fildll
sbb
fsubl
mov
cmp
mov
out
cmpsb
cmp
movsl
lea
aas
xchg
pop
aaa
jne
mov
xchg
call
std
dec
imul
xlat
xchg
push
push
sub
pop
arpl
aas
lcall
mov
addr16
add
outsb
addr16
cmpsl
orb
movsl
cmp
ds
lock
push
xchg
mov
mov
xchg
or
mov
je
in
cmp
pop
dec
movsl
inc
aas
andb
cmpsl
pop
cmp
xor
xchg
mov
adc
xchg
mov
lods
pop
jbe
jecxz
or
sti
mov
mov
mov
pusha
push
fsts
jo
shl
dec
sbbb
and
xor
into
add
push
pop
pop
adc
cmp
nopl
mov
rolb
dec
add
fwait
call
aas
sub
dec
jne
stos
mov
dec
or
inc
pop
fadd
or
dec
popa
xor
mov
pusha
pop
pop
fdivrp
daa
aad
xchg
and
fistl
in
shl
pop
sti
pop
add
xchg
xchg
lea
cmc
dec
push
out
sub
cmp
movsl
inc
ret
sbb
or
loop
add
out
or
cmc
call
xchg
push
push
ret
cmp
out
lahf
pop
hlt
mov
mov
mov
inc
jmp
pop
add
jge
mov
lock
ret
inc
fxch
and
sbb
jmp
push
es
repz
stos
cwtl
dec
dec
mov
mov
es
adc
xchg
jmp
ss
mov
jmp
xchg
and
sti
loopne
stos
mov
add
pop
xchg
sahf
movsb
ss
pop
xor
sbb
sub
fadds
stos
fdivrl
sub
pop
or
or
and
pop
push
fists
fiaddl
sti
dec
test
test
mov
sbb
and
enter
push
rcrb
or
fwait
lret
bnd
adc
pop
jle
popa
xchg
aaa
mov
int
mov
jnp
movsl
jl
xor
cmpsb
inc
pusha
ljmp
add
subb
cltd
bnd
repz
lcall
and
inc
mov
js
lcall
mov
pop
sub
jnp
adc
push
jmp
stos
xchg
pop
sub
xchg
jbe
mov
inc
adc
or
sbb
test
das
stc
mov
mov
push
dec
jae
xor
jno
aas
xchg
aam
mulb
push
or
into
adc
inc
sub
pop
es
test
jns
idivb
out
xor
cmp
and
rcl
mov
pop
flds
mov
mov
test
stos
loopne
cmpsl
dec
out
dec
das
cmp
dec
ffree
xor
out
adc
int
mov
push
sti
push
cmp
mov
adc
lcall
lods
cltd
cs
shrl
add
je
mov
jle
mov
in
cld
clc
sbb
adc
imulb
sub
jg
stc
in
clc
jns
gs
ljmp
and
imul
test
in
sarb
sub
pop
push
iret
dec
std
sub
scas
lcall
fwait
mov
out
cmp
popf
lcall
push
pop
push
aad
inc
or
mov
fwait
push
je
sub
aas
fmull
jecxz
jl
add
lret
mov
es
popf
xchg
cmp
cbtw
dec
sub
aaa
sub
arpl
xor
mov
adc
loopne
aaa
mov
push
lods
pusha
mov
lods
mov
mov
inc
mov
xchg
mov
call
int
jmp
cmp
cltd
mov
in
popf
xchg
ret
fdivr
mov
inc
addr16
hlt
mov
xor
jne
jb
xor
mov
rclb
push
addb
push
add
dec
popa
xchg
and
out
mov
fiaddl
jo
pop
mov
sbb
xchg
test
pop
clc
in
int
cmp
pop
pop
pop
fstp
sbb
mov
mov
cmp
fidivrl
lods
shlb
add
adc
mov
rcr
das
mov
ja,pt
dec
fstps
jb
and
xlat
xchg
pop
cmp
mov
nop
sbb
sahf
lret
mov
inc
sbb
and
cli
jne
cmpsb
jg
xor
push
insl
mov
int3
sub
data16
jge
dec
cmpsl
sarl
push
push
movsb
inc
jmp
inc
ficoms
push
mov
sarl
fisubrl
jge
comiss
mov
mov
mov
xlat
sbb
mov
lret
cmp
add
sub
adc
movsb
repnz
lahf
out
bnd
cmp
xor
mov
xlat
les
inc
add
ffree
aad
movsb
int3
jmp
xchg
leave
adc
or
ret
bound
sub
mov
xor
je
push
jbe
rcrl
or
cmp
mov
fmuls
andb
pop
in
dec
test
loop
pop
add
mov
andl
and
mov
pushf
orb
out
ss
xchg
out
mov
in
fs
aas
cltd
scas
in
inc
sub
pusha
aad
das
jp
dec
arpl
sti
mov
dec
mov
jle
inc
mov
iret
popa
jg,pn
int3
das
cmp
jl
scas
add
sti
jge
cs
popf
popf
ss
leave
sub
daa
out
inc
in
mov
mov
mov
rcl
lds
pusha
in
sub
sbb
aas
lds
sbb
jl
xlat
lods
stc
pop
mov
or
xor
xchg
aam
sub
lret
fsubrs
subl
cmpsb
cmp
mov
loop
test
repz
je
xchg
addb
sub
addb
dec
sbb
ljmp
stos
invd
les
lock
push
push
dec
jne
sti
in
mov
dec
push
ret
sti
lret
inc
push
insl
mov
inc
jo
ss
in
inc
dec
roll
ds
idivb
xchg
lock
rorb
in
pop
xlat
push
jp
cmpsb
fmuls
and
push
cld
pop
mov
xchg
jl
inc
jno
out
into
mov
leave
fdivr
cld
dec
xchg
inc
nop
pop
shlb
rclb
push
xor
jmp
xchg
fnstenv
jp
xor
imul
shr
test
inc
adc
jae
sbb
xor
aam
cmpsb
pushf
mov
mov
jb
push
in
cmp
adc
cmp
sbb
jbe
xchg
cld
pop
cs
fimull
es
pop
cmp
aam
les
pop
leave
cltd
and
pushf
loopne
out
in
rcl
pop
mov
mov
jbe
adc
push
aas
adc
inc
sub
mov
cmp
mov
push
push
or
xchg
and
es
hlt
out
lahf
cmpsl
adcb
push
xor
fistl
cld
es
mov
imul
pop
adc
fldenv
icebp
cs
sub
xchg
fdivrp
es
loop
dec
imul
mov
mov
cmpsb
inc
sub
dec
loope
std
inc
subl
aaa
out
loopne
xchg
rcll
and
dec
jg
jno
mov
test
ds
shrb
sub
sub
and
pushf
out
pop
push
lods
lock
out
pshufw
cmp
cmp
lcall
in
mov
or
xlat
xchg
jne
sbb
fisubrl
mov
repnz
jmp
out
sbb
cmp
movl
aas
mov
je
push
cld
loop
cli
push
push
gs
xchg
aad
addr16
pop
lods
pop
in
xor
xor
test
negb
fistpl
pusha
adc
cmc
ret
jae
std
push
popf
mov
xchg
mov
in
lcall
inc
cmp
rorb
aad
and
push
jmp
xor
sub
imulb
mov
leave
das
cli
movsb
cli
and
cld
mov
call
addb
icebp
push
fildll
mov
lcall
imul
or
mov
ds
lods
and
icebp
pinsrw
or
add
mov
lret
xor
sahf
inc
mov
enter
mov
sbb
push
test
jmp
jmp
mov
fisubs
mov
cmp
xchg
jl
aas
add
fs
stc
mov
lods
mov
ficoms
stos
mov
pop
pop
fsubrl
push
into
js
jl
loopne
scas
in
lods
or
mov
and
cmc
shrl
movsl
dec
mov
add
fisubrl
jne
sub
loopne
mov
mov
pop
idiv
incb
or
or
xor
ja
xor
pop
adc
stos
dec
pop
rolb
push
mov
sbb
push
push
sbb
jecxz
sbb
jmp
aaa
test
loope
inc
insb
hlt
adc
mov
stos
scas
or
scas
xchg
sub
loop,pn
push
addr16
sbb
sbb
insb
mov
xor
xchg
xchg
dec
stc
lods
jne
dec
mov
sbb
pop
inc
cmpsl
sahf
scas
push
test
mov
lahf
sbb
inc
cltd
cmp
loopne
jnp
fistpll
sahf
xchg
add
pop
in
push
mov
inc
pushf
in
add
pop
jo
je
hlt
mov
push
pop
xor
iret
sbb
pusha
fdivl
push
mov
aaa
sbb
lret
fwait
adc
xchg
fucomp
jecxz
arpl
rolb
push
cmp
int3
in
clc
arpl
ret
xchg
mov
inc
cmpl
and
sub
mov
mov
lret
mov
movsb
ljmp
push
sbb
push
mov
lret
rolb
xchg
movsb
and
mov
mov
lahf
inc
std
inc
or
fs
xchg
add
push
mov
fmull
repnz
orb
repnz
or
mov
enter
bswap
pop
popa
loopne
mov
push
push
shl
stos
push
push
push
adc
push
repnz
bswap
or
jo
push
fadd
mov
mov
in
jmp
jns
mov
ret
mov
inc
xchg
roll
fwait
sbb
je
lret
sti
add
inc
addr16
jno
cmpsb
pop
xchg
adc
sbb
hlt
out
add
stc
cmpl
jb
sbb
inc
or
jo
mov
jl
out
call
adc
cmp
pop
mov
push
ljmp
add
out
pop
insb
clc
or
das
mov
pop
test
hlt
inc
loopne
xor
jbe
mov
subb
shl
aas
xchg
mov
jl
mov
add
mov
adc
mov
aam
xchg
dec
shlb
push
xor
cltd
sbb
movsl
test
mov
mov
stos
int3
jmp
and
negl
add
adc
aas
dec
dec
fildl
bound
std
mov
popaw
xchg
mov
sahf
push
stos
mov
or
jne
mov
inc
mov
cwtl
pop
xor
mov
cmp
xor
lret
dec
bound
mov
pushf
cmpsb
mov
xchg
jo
pop
mov
cmp
divl
rclb
pop
or
das
xchg
push
stos
mov
mov
scas
sub
shl
push
sarb
lret
xchg
adc
dec
dec
push
dec
xor
mov
shr
adc
mov
mov
int3
sub
sbb
or
fldl
push
jmp
cmp
pop
addl
mov
mov
push
or
mov
mov
fstl
psrld
aad
nop
xor
and
cmp
xchg
incb
add
fxch
aaa
cmp
push
fisubl
pop
pop
and
iret
adcb
xor
ja
cmp
mov
mov
pop
aas
jbe
mov
lret
push
enter
inc
pop
xlat
mov
ss
lcall
fs
add
push
pushl
cmp
ljmp
add
add
sub
cvtps2pd
adc
in
mov
push
jl
mov
adc
mov
les
or
sbb
fcmovbe
das
jns
pop
push
fdivrl
sub
inc
aas
jb
loop
inc
movsb
shlb
and
push
or
mov
fldt
mov
les
add
lret
and
pop
and
xchg
mov
mov
sbb
orb
dec
mov
cwtl
inc
pop
in
sub
lods
inc
xchg
dec
aam
aaa
clc
xchg
cmp
mov
dec
rcr
inc
mov
mov
sbb
call
push
mov
loopne
xchg
or
cmpsl
cmpsb
or
mov
xchg
pushf
ret
bound
mov
out
mov
pushl
sbb
je
mov
sarb
loopne
push
xabort
inc
fistps
sbb
mov
je
cmp
in
enter
cli
pushf
pusha
mov
xchg
pop
mov
leave
mov
stos
mov
inc
dec
jns
mov
adc
pusha
cmp
mov
mov
push
sarb
dec
cmpsb
mov
cld
push
in
stos
pop
sub
adcb
lods
cmpps
inc
in
inc
push
je
jne
cs
in
ret
xor
cmpsl
ret
mov
or
and
xchg
adc
cmp
mov
or
lcall
dec
sub
lods
sbb
cld
loopne
sbb
jb
sub
xchg
inc
push
rorl
rorb
pop
push
cwtl
out
aas
adc
sahf
sub
cmp
add
in
xor
adc
or
fstl
mov
push
stos
inc
pop
cmp
bound
pop
pop
dec
adc
lret
fimull
mov
lds
fidivrs
xchg
int3
ret
popa
fildll
pop
pop
fwait
xchg
cmpsb
lret
cwtl
sub
mov
ret
out
xorl
repnz
mov
aam
inc
push
int3
sub
jae
je
fsubrp
dec
fcmove
out
and
xchg
xlat
cmpsb
xchg
mov
pop
cmpsb
stc
arpl
ficomps
bound
xchg
add
push
js
stos
inc
mov
add
add
insb
pushf
xor
sub
mov
sbb
mov
addr16
fstp
ret
repnz
push
inc
xchg
cld
addr16
addr16
pop
cmp
sub
xchg
xchg
jge
popf
mov
js
sti
xchg
push
adc
cmc
dec
imul
sbb
les
xor
outsl
fadd
sahf
pop
loopne
push
xor
ss
xchg
ret
or
out
xlat
idiv
push
cmc
push
sub
test
loop
fistpll
subl
mov
and
push
dec
je
and
cmp
lods
push
add
lods
sarb
cmp
dec
xchg
subl
pop
mov
cmp
movsb
sub
test
push
jge
clc
jl
or
in
push
sbb
mov
sub
imul
repz
inc
mov
mov
rclb
popa
aas
jl
jae
in
dec
sarb
int
stos
lahf
test
mov
bound
pop
add
in
mov
sub
mov
rolb
leave
or
lcall
push
clc
mov
xchg
ljmp
mov
fistl
adc
mov
dec
fwait
jmp
and
cmpsl
cli
int3
insb
inc
push
into
mov
cmpsb
stos
aas
xlat
xchg
mov
nop
add
push
mov
mov
lods
mov
sub
xchg
outsl
cli
in
lock
das
sti
mov
lret
mov
push
jp
dec
xchg
lock
dec
cwtl
pop
push
jbe
jb
xor
add
ds
mov
xlat
icebp
das
inc
add
addr16
shlb
xor
pop
sub
mov
inc
outsl
cld
mov
sti
push
orl
pminub
dec
sbb
jb
jl
js
dec
cmp
cmpsb
xchg
sub
sub
nop
sarb
mov
fs
jge
push
mov
cli
dec
push
into
orb
inc
xchg
insb
mov
sub
les
cmp
cmc
shlb
pop
mov
mov
mov
and
xchg
pop
clc
mov
daa
outsb
mov
sbb
jecxz
jl
push
dec
inc
inc
sbb
cmpsb
pop
and
cmp
inc
cs
out
sbb
xchg
and
or
add
in
fmuls
enter
clc
bound
add
shl
pop
iret
es
call
xchg
loop
cli
movsb
sub
cmp
inc
cmpsb
test
add
jg
adc
test
test
xor
call
or
loop
mov
xor
pushf
sbb
jo
lock
inc
pop
adc
mov
sbb
sti
test
call
repz
testb
mov
sub
or
mov
jp
mov
in
sti
in
shlb
cwtl
cmp
jns
sbb
pop
jmp
insb
iret
daa
loope
inc
outsb
xor
repz
aas
aaa
bnd
fwait
pop
fdiv
jge
sahf
xor
std
dec
lahf
daa
adc
xor
push
xchg
mov
mov
int
mov
cwtl
push
daa
data16
call
sahf
push
icebp
xor
dec
repnz
es
das
ret
icebp
testl
cmpsl
lahf
add
rcrb
nop
stos
xchg
sbb
add
jnp
ficoms
aam
fdivrl
es
push
cs
fildll
stos
jbe
mov
or
lcall
lret
outsl
pop
movsl
daa
jl
pusha
jbe
sbb
mov
orl
inc
mov
lahf
js
mov
adc
clc
fs
dec
adcl
xlat
repz
fbstp
jo
adc
loopne
and
mov
and
in
pop
mov
push
mov
xor
test
jg
out
mov
loop
mov
int3
mov
stos
sti
lods
ss
repz
pop
cli
xchg
cmc
inc
mov
js
mov
sti
addr16
sbb
inc
cltd
mov
rcrl
nop
bound
add
ljmp
pop
sbb
add
sub
scas
ret
call
pop
mov
sub
rorl
mov
fnstcw
rorb
ljmp
pop
jo
or
repnz
add
xchg
icebp
arpl
lahf
jl
sbb
pop
fwait
int3
mul
inc
adc
es
jnp
mov
pusha
outsb
sub
andb
movsb
leave
mov
in
mov
aas
jp
es
fs
or
lods
ja
mov
nop
fsubr
sub
add
pop
into
jno
inc
cmp
cmp
add
adc
push
test
xchg
sarb
jb
dec
jnp
inc
clc
mov
jmp
pop
jb
sbb
sbb
add
in
cltd
cmp
mov
cwtl
sbb
popa
into
mov
cli
popf
xchg
and
and
xchg
push
add
in
dec
repnz
jecxz
cmp
jae
mov
and
cmpsl
push
test
out
inc
mov
adc
xorb
push
lret
sbb
cld
dec
ds
sbb
mov
sub
inc
sub
xchg
add
aaa
ret
inc
jb
inc
leave
test
les
test
scas
pop
imul
mov
dec
dec
insb
jns
mov
mov
adcb
xchg
mov
mov
pop
push
and
lret
mov
and
movsl
dec
and
add
sbb
cmovp
subl
imul
mov
pop
xor
shrl
pop
mov
mov
aad
imul
addb
pop
ret
mov
fadds
ljmp
stc
in
js
ret
dec
dec
je
pop
nop
inc
push
pop
jbe
pushf
shr
int3
pop
int
pop
aad
repnz
sub
cmpsb
jl
clc
je
mov
sub
cmpsl
mov
pop
ret
cwtl
jo
push
sbb
stos
adc
pop
int3
jg
push
rcr
or
xchg
add
in
jne
jae
xlat
cmpsl
xchg
lods
inc
icebp
cs
cmpsb
ret
mov
xchg
es
adc
das
or
sarl
mov
jo
int
lds
ucomiss
call
and
sbbb
or
aam
out
xor
mov
jne
cmpsb
sbb
scas
ret
dec
cmp
outsl
inc
jno
sub
jl
inc
insb
lret
mov
sbb
pop
dec
push
pop
jbe
ljmp
aad
adc
mov
aam
add
lock
ret
in
mov
push
dec
insb
mov
lret
inc
pop
iret
push
cld
in
sahf
sarb
into
and
hlt
pshufw
test
dec
jl
mov
mov
adc
enter
xchg
pushf
pop
js
xor
loopne
insb
dec
sub
dec
and
es
pop
inc
or
mov
out
cmp
pop
cmp
daa
xchg
sarb
xlat
sahf
adcl
cld
je
icebp
hlt
loop
cmp
jl
cld
jmp
call
das
mov
mov
ds
cs
add
jp
inc
sub
jmp
pop
mov
pop
jb
xor
jl
jns
movsb
xor
xchg
insl
clc
or
jp
adc
add
inc
daa
lret
cs
add
loopne
push
aaa
lret
fs
or
pop
pop
cld
adc
pop
add
or
aas
out
in
mov
xchg
popw
xchg
jmp
hlt
and
add
mov
mov
mov
ret
nop
imul
jge
lods
mov
aad
stos
jge
lea
inc
xor
scas
movb
mov
sub
fistpll
xchg
fidivl
xlat
rcr
ds
dec
xor
push
lret
cmp
xor
inc
mov
cmpsb
xor
hlt
pop
push
xchg
push
in
jo
test
es
les
sbb
cwtl
cmp
mov
pop
and
or
push
add
into
cs
hlt
cmp
test
sub
aas
sti
bound
dec
rorl
pop
push
push
fs
mov
pop
hlt
add
sub
in
imul
xor
stos
pop
lret
sti
pop
pop
xor
dec
adc
std
fsubs
mov
rol
lret
mov
dec
jecxz
fmuls
sub
movsb
fsts
mov
movl
ljmp
scas
mov
dec
popf
sub
sbbl
aad
cmpsl
pop
ret
mov
add
mulb
lods
xchg
lret
or
mov
pop
xor
sti
mov
xor
sbbb
dec
fistpl
insl
mov
pop
adc
adc
cwtl
test
pushf
pop
loopne
push
xlat
pop
xchg
add
pop
out
cmpxchg
dec
mov
sub
fs
dec
sub
mov
sbb
vminsd
inc
xlat
jecxz
jae
cmp
fidivrl
adc
mov
scas
iret
stos
cmpb
xchg
ljmp
das
ret
or
jae
dec
mov
jbe
adc
jle
int
push
xchg
lret
lret
sub
and
jb
popf
loopne
sub
stos
xorl
add
ss
shld
mov
lock
rorl
cmp
push
pop
adc
jbe
adc
js
xchg
adc
cmc
xor
cmp
gs
xchg
test
cmp
cmp
xor
test
add
push
mov
pop
out
gs
push
push
inc
add
add
out
outsl
test
stos
ret
inc
inc
mov
adc
enter
nop
adc
jb
incl
xchg
mov
es
in
jmp
mov
neg
push
test
loop
dec
jns
pop
lods
jnp
add
sbb
xor
daa
bndstx
and
fwait
mov
mov
fsts
mov
iret
lret
test
sahf
rcl
cs
je
cmp
or
das
ret
fdivrs
sub
stos
repnz
test
push
imul
out
xor
inc
adc
push
xchg
outsl
mov
std
in
push
and
jmp
xchg
sub
jae
add
ficoml
cmp
aam
pop
sub
push
adc
push
imul
fnstenv
adc
pop
in
int3
cs
mov
sbb
ret
fld
adc
adc
loope
inc
pushf
mov
int3
rorl
outsb
xlat
jmp
ds
jp
lock
pop
in
sti
stc
cmp
mov
sbb
xor
jbe
xor
popa
stos
sbb
add
add
ret
jp
adc
aaa
inc
mov
lods
push
je
rorb
inc
dec
sbb
pop
and
aam
lods
or
in
loope
inc
les
push
jl
mov
adc
push
orl
dec
outsb
enter
and
pop
pop
xchg
mov
clc
mov
out
jecxz
loop
call
pop
add
mov
add
cld
cs
fistl
movsb
scas
aad
sahf
add
dec
pushf
xchg
jp
pop
mov
pop
sbb
scas
dec
lcall
call
popa
mov
pop
in
in
sub
push
xor
repz
shl
jmp
cmp
and
sub
shlb
fs
fsubrs
fcoml
dec
sbb
cmp
jnp
pop
mov
xor
and
cltd
fcomps
jae
pop
int3
shlb
lret
rolb
enter
sysexit
xchg
or
outsl
and
push
insb
fldt
push
lcall
pop
cli
mov
adc
popf
daa
adc
adc
mov
mov
int3
call
into
ss
nop
jge
mov
das
iret
inc
cmp
xchg
data16
mov
leave
test
cli
popa
shll
into
cmpb
fcomp
fiadds
push
jge
sbb
addl
movsl
mov
test
mov
movsb
fcoml
jo
jge
movsb
dec
cmpsl
in
sbb
push
loopne
mov
jl
das
xchg
sarb
xchg
mov
mov
mov
xchg
dec
mov
add
test
sbb
cmp
pop
dec
ja
lahf
jnp
mov
in
push
add
movsl
pop
add
mov
jae
inc
cmp
dec
adc
cld
push
data16
pop
in
xchg
sbb
les
ljmp
mov
iret
or
dec
shlb
jp
cmpsl
divb
mov
jbe
mov
and
aam
out
sbb
popf
fnstcw
movsb
push
mov
cmp
cmpsl
outsb
xor
xor
ss
xchg
hlt
loope
icebp
cltd
inc
xor
jle
pop
shll
mov
lock
rcrb
rorb
sbb
jno
daa
aad
mov
clc
call
popa
aam
cmp
les
imul
push
mov
xor
repz
cld
mov
arpl
mov
dec
sbb
jp
sarb
add
dec
push
mov
les
cmp
andb
or
mov
test
aad
insl
lods
jnp
fnsave
aaa
loopne
cmp
pop
cmp
xlat
jb
mov
xorb
xchg
aas
xor
ds
cmpsb
leave
fwait
orb
test
xchg
outsl
push
imul
xchg
and
sbb
cld
pop
push
sub
push
sbb
adc
arpl
mov
fmulp
loopne
inc
dec
mov
cmp
push
cwtl
sbb
psubsw
jnp
in
arpl
repnz
lock
cmp
lahf
cmp
mov
js
lds
cmp
mov
cs
sbb
idivl
movsl
popa
das
aad
gs
sti
xchg
popl
xor
sti
inc
or
dec
xchg
clc
sti
test
stc
dec
adc
cmp
cmp
mov
xlat
cmp
shlb
das
sub
inc
sar
bsr
out
mov
add
cmp
push
adc
pop
sub
adc
xchg
in
das
pop
call
pop
bound
rorb
insb
jmp
dec
pusha
mov
popf
jmp
sbb
cs
pop
push
mov
add
sti
cmp
imul
dec
andl
sbb
and
lahf
loope
dec
ffree
mov
inc
fwait
add
aad
sbb
out
sbb
jns
mov
mov
inc
and
push
pop
mov
dec
shl
int3
in
inc
and
pop
mov
addb
xchg
xchg
rol
pop
cmp
daa
or
cmpsb
push
push
ss
ds
and
fwait
adc
mov
js
and
cmp
xchg
sub
jg
in
pop
outsl
sub
xchg
xlat
mov
inc
cmpsb
jle
insb
out
lods
pop
rcr
xor
call
imull
pop
or
cmp
sbb
xchg
mov
into
or
mov
jno
ret
aas
fs
pop
sub
ror
mov
mov
rorl
dec
arpl
dec
mov
orl
cmp
mov
cmp
lock
sub
add
loop
dec
stos
mov
outsl
pop
xor
aam
cwtl
in
pop
iret
xchg
jp
push
pop
xor
call
sbb
les
inc
and
popf
dec
sub
fimuls
or
rclb
cmpsb
pusha
out
fmuls
jecxz
xchg
loop
mov
jl
inc
mov
call
mov
pop
out
imul
enter
mov
add
add
cs
pushf
jecxz
je
shll
pusha
or
enter
imul
lea
out
fwait
jg
bound
mov
dec
pop
push
in
icebp
fsubr
pop
cmp
mov
out
pop
xchg
imul
fdivl
sub
idivl
add
into
jp
stos
push
int
cmp
cmpsb
push
outsb
fs
pop
xlat
adc
jge
mov
mov
lahf
insb
push
mov
lcall
dec
jecxz
mov
stos
add
ja
add
dec
mov
andl
adc
mov
push
cmp
and
or
lea
inc
or
aas
xchg
cmp
push
xchg
xchg
add
addr16
popl
imul
rclb
sub
and
adc
inc
frstors
dec
mov
stos
mov
out
pop
pop
push
stos
insl
push
sub
pop
mov
repz
mov
mov
xor
mov
pop
pop
rclb
das
in
cmp
mov
std
sti
lahf
xchg
popa
vmulss
xor
aas
and
inc
jle
or
pop
outsl
cld
loop
adc
pop
dec
aas
es
jmp
out
ljmp
push
cmpsb
lods
inc
and
sbb
shr
das
jo
or
roll
out
lods
inc
or
mov
adc
pop
jno
mov
cld
inc
cmp
push
scas
dec
add
jl
stc
pop
rcl
xor
hlt
ds
xor
mov
pushf
cmp
dec
insb
jno
aas
repz
sti
sbbl
mov
xchg
cmpsl
push
sarl
outsb
xchg
mov
inc
std
xlat
decl
push
jae
adc
or
leave
pop
pop
inc
sub
daa
in
inc
xlat
xchg
out
sarl
test
shll
cltd
movb
pop
sbb
outsb
mov
push
push
std
jg
fildll
addr16
jge
mov
adc
ficompl
in
push
push
jns
mov
outsb
push
xlat
pushf
push
iret
fldenv
lahf
sbbl
inc
xchg
mov
mov
dec
movsl
xlat
push
test
pop
dec
jp
adc
out
dec
cmpb
in
mov
out
add
sub
cld
fsubr
xor
jmp
popa
pop
dec
lcall
cmp
call
out
into
dec
cmp
adc
mov
or
je
fsubl
je
jo
pop
shll
fbstp
cmp
add
mov
sti
dec
std
adc
xchg
jp
push
pusha
inc
dec
mov
push
mov
xchg
mov
das
jae
or
mov
fsts
das
aas
xchg
imul
add
adcb
add
ret
fidivl
pop
mov
dec
jge
sub
mov
out
test
adc
xor
cli
cmp
leave
jp
mov
sbb
std
mov
mov
mov
mov
enter
syscall
or
out
outsb
pop
inc
jae
lock
mov
sbb
pop
mov
pop
icebp
inc
adc
popa
jns
lock
push
add
cli
inc
dec
outsb
pop
stos
das
es
push
or
shll
das
sub
inc
cld
sub
mov
sub
ror
xor
push
pop
test
test
jnp
les
enter
adc
fdivrs
test
stc
jge
testb
fsubrl
popa
arpl
outsb
lods
cltd
in
mov
lcall
mov
faddl
addr16
rcll
sub
xchg
test
mov
call
sbb
out
push
imull
insb
cmp
orb
add
fwait
jmp
cld
mov
add
pop
nop
sbb
xor
jbe
push
jp
clc
xchg
fsubl
push
adc
xor
ja
adc
fisubs
dec
dec
sub
dec
add
jno
add
mov
mov
or
les
lods
orb
std
pop
stos
std
lds
leave
cmp
pop
jg
scas
sbb
scas
push
cld
jecxz
lods
or
cld
ljmp
in
iret
sub
fsubs
stos
adc
pusha
repz
ret
mov
shlb
add
in
nop
jle
push
lcall
and
fistpll
loop
int
lds
fcoml
pop
jp
mov
std
xor
dec
xacquire
pop
incb
fcom
aam
cmc
enter
mov
hlt
rorb
das
stc
pop
mov
and
xrelease
mov
pop
ret
repz
scas
shrl
jo
sub
mov
fucom
sbb
call
push
rclb
mov
xchg
fidivrl
dec
pop
int3
push
dec
pushf
xchg
shlb
shlb
stos
cmp
ljmp
ficompl
lahf
in
or
cmp
loope
fsubl
icebp
jns
xchg
fs
mov
pop
dec
mov
das
dec
into
shlb
popa
adc
leave
mov
shll
sbb
and
push
sub
inc
push
push
movsl
lods
mov
jge
insb
cld
xchg
hlt
add
jb
mov
adc
jle
bound
dec
or
sbb
daa
into
add
mov
push
xchg
xchg
std
push
jbe
jg
push
and
mov
orb
pop
and
or
in
int3
ret
hlt
xchg
out
sbb
jb
sbb
xchg
xor
orl
jge
es
sub
ret
int
test
and
xchg
push
cmp
das
xor
dec
and
stos
scas
cmp
add
repz
push
sub
and
sub
psrlw
push
mov
jo
sbb
and
and
in
cmp
sub
cmp
cmp
in
iret
adc
in
cmp
pop
addr16
adc
test
out
push
cmpsl
dec
mov
pop
xor
xor
sub
pop
data16
cld
repz
and
xchg
dec
adc
ret
and
shrl
test
push
dec
pop
cwtl
inc
nop
pop
das
aam
cmp
cmpsb
inc
mov
int3
sub
inc
ljmp
call
mov
cmpsb
fdivrs
mov
test
bound
sbb
sub
bnd
adc
inc
leave
xor
push
test
lds
push
je
cmpsb
fimull
cmc
jo
pop
add
nop
into
daa
daa
test
int3
fmuls
cmpsl
ja
inc
bound
in
das
mul
inc
cmp
ret
cmp
cmpsl
cmp
adc
icebp
xlat
dec
ficoms
lret
in
sti
divb
flds
mov
jmp
mov
dec
es
mov
std
sarb
jb
xor
or
scas
mov
iret
std
xchg
push
rcr
pop
adc
mov
daa
sub
inc
mov
insb
cs
xor
xor
and
movsl
xor
ds
push
jno
std
inc
dec
mov
cmpsb
test
inc
xchg
mov
xor
jo
loope
mov
into
xor
cmpsb
mov
push
call
and
rcl
sahf
jmp
fildl
fadds
cld
jge
loopne
lea
icebp
cmpsb
dec
es
sub
sbb
ret
sbb
pop
sbb
roll
cmp
pop
xor
mov
pop
sarl
jecxz
jmp
add
inc
or
sarb
nop
add
push
lea
ljmp
add
cmp
out
push
mov
sbb
or
in
pop
cmp
clc
mov
mov
mov
xchg
add
insb
sub
shll
pop
hlt
sub
pop
mov
cwtl
pop
pushf
in
dec
cmpsl
cmp
outsb
sub
leave
mov
mov
inc
inc
pop
lcall
sub
jmp
repz
add
sub
add
pop
and
adc
clc
cs
mov
in
stos
aad
adc
or
xor
adc
sbbb
cmp
xchg
adcb
mov
cmpsl
mov
cmp
pusha
insl
lcall
adc
and
adc
ret
pop
and
dec
xchg
nop
sbb
shlb
cmp
leave
mov
rclb
pop
cs
or
daa
pop
push
sub
mov
fistpl
mov
or
sahf
fisttpl
out
gs
mov
pop
gs
test
es
pop
jmp
repnz
mov
pop
mov
lock
ret
mov
mov
out
ds
mov
scas
mov
inc
pop
pop
cs
mov
pop
mov
stos
mov
mov
dec
mov
outsb
rol
test
adc
aas
popf
repz
pop
push
ret
adc
or
push
mov
in
repz
sarl
xchg
mov
int3
pop
push
sub
push
fmuls
jo
xchg
outsb
push
jns
xor
movsl
pop
adc
cmpsl
mov
rcr
dec
jecxz
mov
fcomps
lcall
test
roll
rcrb
pop
fimull
xlat
and
cmp
mov
sahf
cwtl
cmpsl
hlt
sub
adc
ja
cwtl
enter
jnp
adc
int
hlt
call
sbb
sbb
movsl
push
ljmp
or
fildl
lret
pop
inc
inc
jl
jp
jb
loope
in
mov
daa
sbb
lcall
scas
popf
xor
sti
int3
mov
jae
jmp
mov
insb
cs
stc
inc
pushw
mov
jnp
xor
or
sahf
sbb
sub
inc
sub
ret
xchg
setbe
dec
and
sti
call
jb
jmp
jecxz
in
adc
pop
or
test
adc
ret
xlat
sbb
push
in
jge
loopne
das
cs
mov
bnd
out
jge
out
rcll
sbb
pop
xor
pusha
out
icebp
inc
or
enter
adc
add
and
inc
jnp
popa
mov
call
sbbb
outsl
rclb
ret
sbbl
lret
fimull
jns
lods
pushf
lret
mov
xchg
dec
push
cmp
dec
ret
cmp
pop
lods
aam
xor
jp
stos
mov
repz
cltd
xchg
mov
pop
cmpsl
mov
cmp
icebp
sbb
bound
xchg
pop
shrl
out
sbb
jl
int3
sub
das
sbb
mov
sbb
adc
pop
pushf
lahf
gs
subl
mov
dec
shll
adcb
f2xm1
ret
dec
mov
movsb
mulb
iret
adc
add
das
cmp
cmp
cmp
dec
and
scas
insb
cld
bound
insl
or
push
data16
ret
adc
jmp
les
fimuls
fimuls
shll
shll
pusha
ljmp
xlat
fiaddl
mov
push
lea
or
scas
pop
push
fdivl
fwait
inc
hlt
jg
adc
add
add
push
cld
fmull
pop
push
sbb
in
push
adc
shlb
adc
pushf
sub
mov
dec
fsts
xchg
jecxz,pt
push
sbb
stc
dec
cltd
rorl
sbb
mov
push
test
repnz
dec
adc
sub
loope
scas
movzbl
scas
or
ljmp
sti
xchg
test
test
jecxz
pop
mov
add
lea
in
enter
adc
mov
xchg
push
xorb
mov
ljmp
sbb
inc
dec
aad
jmp
daa
xchg
stc
mov
xor
ficoml
lods
cmp
imulb
outsl
dec
daa
enter
or
popa
push
lcall
sub
sub
std
push
xchg
xchg
les
xchg
mov
adc
adc
inc
shrb
in
arpl
mov
stos
ljmp
inc
je
add
mov
pop
jl
inc
mov
cmpsl
les
mov
lods
dec
fstpl
ret
sarb
mov
ret
dec
push
cld
or
lahf
in
cltd
push
out
cmp
imul
or
pop
pop
nop
data16
pop
adc
cmpsb
inc
in
pop
push
ds
xchg
adc
ror
and
lea
fimull
enter
dec
addr16
call
das
aas
aaa
jbe
jmp
ret
sub
inc
push
and
ja
fnstsw
jg
stos
insb
xor
ret
jl
dec
xchg
cmpsl
inc
xor
lret
enter
and
stos
and
or
std
imul
int3
lcall
rdmsr
test
dec
lea
sti
fildl
ss
inc
pop
bound
mov
sbb
mov
mov
loope
mov
lret
mov
jle
call
adc
rcll
cmpsb
insb
push
shl
adc
sbb
lods
mov
insl
jnp
aad
adc
push
and
in
addr16
scas
xchg
sbb
jle
pop
fwait
mov
mov
bound
nop
movsl
xchg
sub
sbb
or
shl
xor
sahf
sub
mov
xchg
jmp
mov
push
push
shr
leave
add
mov
adc
sti
sub
mov
push
into
ret
hlt
pop
subl
or
das
jmp
loopne
les
movsl
sbb
jmp
inc
adc
jne
lods
or
rol
and
inc
cmp
push
or
adc
xchg
mov
xchg
idivl
inc
sub
pushf
int
push
push
add
xor
xchg
ja
hlt
adc
lods
in
in
push
push
lods
aaa
mov
jmp
xor
sti
imul
les
int
inc
mov
in
ret
pusha
mov
and
fcomps
push
shlb
pop
add
jp
mov
stc
and
dec
mov
stos
xor
imul
ds
inc
popa
dec
xchg
add
ss
repnz
mov
sbb
je
pusha
fldcw
cmpsl
call
push
lret
imul
pop
popa
ja
jns
mov
or
mov
adc
cs
mov
xor
sahf
mov
cli
sbb
data16
add
fs
pop
loope
enter
push
mov
iret
or
push
lahf
lods
pop
aad
cmp
mov
pop
adc
lret
bound
mov
les
out
cmp
lahf
sbb
popf
dec
xchg
pop
mov
movsb
and
mov
mov
pop
popf
mov
adc
into
sub
push
cs
mov
ss
adc
shr
es
push
ds
add
add
push
push
out
adc
call
sub
mov
out
test
sbb
and
sbb
ffree
cld
in
cmc
data16
mov
inc
pop
test
pop
jle
xchg
mov
mov
sahf
inc
bound
out
pushf
push
cwtl
out
shrb
movsb
addr16
push
push
loop
pusha
decb
mov
pop
cmc
push
out
inc
insl
sub
stos
xchg
in
gs
cmpsl
cmp
dec
pop
and
int3
cs
cmp
push
inc
adc
call
std
push
inc
insb
lock
pop
cs
mov
das
sbb
push
ljmp
pop
pop
adc
rolb
stos
imul
stos
sbb
jg
aas
scas
imul
ret
mov
xor
add
sub
cld
cmp
imul
add
jmp
dec
pop
mov
fadds
jo
ret
cmp
decb
jb
cld
jmp
dec
ret
loope
mov
fldcw
xor
std
xor
int
cmp
push
addr16
test
add
dec
pop
fdivs
das
jmp
test
or
adc
out
add
jb
and
mov
je
daa
hlt
out
fs
xor
cmpsb
fstpt
xchg
cli
mov
test
push
sti
xor
pop
pop
push
sub
or
xor
insl
in
push
inc
push
jp
icebp
pop
push
xor
xchg
jge
aad
stos
enter
cli
arpl
ds
aas
xor
fidivrl
cmp
cmpsl
clc
add
push
dec
popf
mov
push
xchg
mov
sub
dec
loopne
and
aad
imul
sub
and
aam
test
sub
push
adc
mulb
xchg
imul
movsl
shl
cmp
inc
in
cmp
fucom
push
jp
icebp
mov
pushf
into
loop
out
pop
cs
add
lock
movsl
lock
lahf
clc
cli
test
lods
inc
ljmp
lcall
enter
stos
xchg
ljmp
or
cmpsb
ss
orb
adc
stos
mov
xchg
subb
repz
fdivr
outsb
mov
das
pop
mov
pop
or
mov
mov
ds
repnz
dec
xchg
aam
das
cmc
insb
and
shrl
jl
int3
jg
aaa
scas
mov
mov
loop
faddl
lret
mov
xor
and
lcall
aas
sbb
insb
mov
xlat
mov
sub
mov
call
inc
mov
lcall
cmpsb
jnp
negb
mov
or
lods
push
roll
nop
xor
mov
or
mov
push
sbb
cmpsl
push
pushf
and
scas
js
ss
push
mov
adc
inc
stos
add
leave
adc
mov
aad
aad
mov
call
and
pop
push
inc
ljmp
mov
mov
daa
fimull
subl
decb
js
roll
jg
addr16
xchg
nop
imul
arpl
inc
inc
test
outsl
and
arpl
pop
or
scas
push
push
push
jg
adc
ljmp
and
call
loopne
ss
dec
add
pop
xchg
add
pop
outsb
lds
dec
push
or
jns
pop
adc
pushf
xor
cmp
jmp
adc
leave
or
addr16
push
pop
rcrb
adc
sub
sarl
jb
jp
xchg
frstpm(287
ljmp
mov
lret
inc
cs
jge
iret
nop
imul
mull
test
jecxz
jp
mov
cmp
ret
cs
mov
cmp
or
fstl
ja
enter
mov
lahf
push
mov
cmp
mov
lret
mov
jb
jmp
adc
lods
mov
fcmovb
mov
push
popa
mov
cmc
iret
fnstsw
mov
imul
repnz
mov
cmp
shl
cmp
and
push
mov
xchg
jno
dec
sbb
dec
xchg
insb
frstor
xor
js
dec
decb
jbe
test
loop
jg
or
shll
adc
scas
sbb
inc
inc
sbb
dec
fs
push
jae
mov
ret
and
sub
popf
mov
add
push
push
sbb
sub
add
das
jge
insb
sub
fwait
nop
jo
xchg
arpl
xor
jns
inc
mov
mov
lds
push
mov
pop
or
out
fstps
les
insl
cmp
xchg
shr
cs
leave
sub
xor
push
inc
pop
pop
sti
ja
xor
mov
rolb
js
sahf
hlt
loopne
into
into
xor
or
rorb
pop
shlb
cwtl
sbb
out
icebp
hlt
nop
or
daa
popa
mov
mov
pop
push
jb
push
cmp
aas
les
xor
aas
mov
pusha
adc
add
add
sub
jmp
jl
mov
xchg
xchg
pop
int3
lret
mov
subl
xor
cmpsl
mov
dec
xchg
add
into
addr16
clc
ret
adc
sahf
iret
jecxz
pop
daa
xor
mov
in
sbb
xchg
mov
cs
xchg
cmp
mov
mov
and
hlt
inc
fldcw
nop
or
pop
inc
cld
mov
sub
push
pop
or
int3
push
pop
dec
mov
pop
add
cmp
outsl
mov
add
test
cmp
dec
ja
xchg
fwait
sti
cs
outsl
fcoml
les
adc
loope
mov
sahf
in
fsubs
pop
pop
aaa
or
add
hlt
sbb
aas
jb
cld
fldl
mov
lock
or
cld
push
loopne
lret
inc
inc
call
hlt
fdivr
or
out
les
fs
push
ljmp
xor
f2xm1
adc
mov
xchg
movsb
or
cwtl
loopne
aaa
mov
jae
dec
insb
mov
mov
lods
push
sub
popa
jae
mov
push
aaa
and
jle
dec
into
sbb
mov
jae
jnp
or
sbb
fcmovb
cs
dec
mov
imul
sub
mov
lods
cltd
inc
push
hlt
mov
xor
cwtl
sbb
sbb
pop
ret
fcom
dec
mov
jne
loopne
mov
std
xor
in
ds
or
sub
aam
xchg
pop
add
fldt
and
int
pavgw
and
xor
ret
pushf
sub
test
fildll
mov
or
js
enter
mov
sbb
es
insl
loop
sub
and
addl
lock
out
mov
cmp
scas
enter
mov
jmp
adc
pop
push
cmpsl
add
into
clc
and
ffree
movsb
sbb
fsubrl
jno
mov
les
in
dec
jb
jo
leave
lea
cld
mov
fildll
bound
sarl
outsl
or
push
sbb
scas
push
movsb
sbb
xchg
out
out
inc
jae
int3
sarl
lods
mov
cld
adc
ret
cwtl
pop
ret
pop
xor
movsl
je
mov
cmpl
mov
jle
xor
dec
aaa
cmpsl
lcall
sub
xor
cmp
cmp
lret
cmpsl
pop
cmp
orb
repnz
pop
jnp
cmp
scas
ss
scas
cmp
or
outsb
and
int3
je
cmp
mov
rorl
jae
adc
pusha
push
push
inc
pop
cmp
shlb
sub
add
addr16
scas
dec
fwait
cmpsl
lahf
cmp
cwtl
pop
xor
jnp
add
and
rcrl
mov
jae
xchg
push
or
push
jb
xlat
mov
mov
xchg
xchg
sbb
fisubrl
jbe
xor
dec
cmp
pop
lock
mov
jae
imul
and
stos
jle
inc
lret
dec
out
pop
xor
pushf
or
in
fimull
sbb
push
movsb
sbb
clc
sbb
push
or
aam
fmuls
add
ret
sbb
dec
adc
out
jmp
mov
inc
jb
xchg
fnsave
jge
ja
sbb
aas
inc
testl
pushf
es
mov
mov
push
test
in
cmp
jecxz
pusha
add
pop
and
fstpl
aas
push
xchg
sbb
cmpb
out
xchg
or
cmp
scas
jno
rcrl
stos
mov
mov
clc
push
rclb
mov
mov
les
jg
pushf
popf
inc
mov
push
cmp
loop
shlb
enter
dec
hlt
fildll
cwtl
popf
rclb
insb
jo
pop
fistpl
insb
loope
loop
jmp
adc
inc
xor
mov
fiadds
test
push
fsubrl
testl
or
call
cwtl
popa
jl
mov
ja
test
aaa
adc
mov
add
or
xor
push
fldl
add
aaa
aaa
ds
jmp
or
mov
ret
loopne
subb
or
mov
imul
mov
xor
mov
mov
mov
xor
cmp
lcall
xchg
scas
jmp
inc
jno
push
cmpsb
mov
imul
pop
pop
sbb
fwait
cmp
mov
jg
sub
test
sbb
test
push
fcos
xor
mov
mov
and
out
clc
pop
and
sub
pop
cmp
and
sub
lcall
inc
cmpb
enter
enter
rorb
mov
inc
mov
daa
outsb
xor
and
inc
dec
push
mov
cmp
int
add
cmp
test
pop
lret
mov
push
mov
repnz
lcall
movsb
push
jl
clc
dec
cs
jecxz
cmpsl
pop
sub
push
lcall
ja
out
jg
xor
mov
adc
inc
mov
fidivrl
inc
fsts
cs
cmp
lods
ljmp
jmp
insl
ficomps
sbb
cmp
shr
out
add
and
or
xorb
pop
dec
adc
mov
dec
int3
test
mov
xchg
sub
into
cmp
imul
fldenv
cmp
or
lcall
ds
xlat
mov
jp
les
in
sbb
scas
scas
ja
mov
les
imul
andb
cmp
mov
jmp
cli
addb
mov
bound
sbb
mov
ds
mov
mov
int3
sub
cmpsb
or
jecxz
jb
sub
mov
cwtl
push
cmpb
inc
push
lds
ret
push
mov
adc
pop
addr16
adc
lods
jmp
mov
push
mov
pop
push
xchg
or
adc
adc
ljmp
mov
xchg
inc
movsl
xor
into
or
fldt
jmp
insb
lock
int3
bound
jmp
in
mov
scas
rorl
xchg
and
movsl
push
cmp
inc
push
pop
lahf
xlat
mov
mov
dec
mov
rcll
mov
cltd
xor
aam
loopne
out
das
sahf
pop
lret
pop
fists
xor
out
mov
fxch
push
mov
xor
push
clc
dec
cmp
xchg
mov
stos
jns
cmp
orl
cld
push
bound
mov
insl
cmp
push
test
push
pop
pop
pop
repnz
add
in
ret
das
pop
sub
add
shll
lret
ret
sub
sub
cs
subb
jae
daa
ljmp
push
sub
fisttpll
xchg
push
mov
pop
sub
clc
lcall
int3
adc
mov
dec
push
pop
xchg
add
test
pusha
jnp
out
mov
rol
fisttpl
push
jno
pop
sub
adc
mov
xchg
xchg
orl
push
dec
mov
pop
lods
pop
lods
cmpsb
call
vmaxps
mov
das
test
xchg
std
mov
addr16
xchg
insl
pushw
xchg
mov
push
mov
push
dec
mov
mov
ret
pop
cs
andb
adc
mov
and
xor
imul
addr16
cwtl
loopne
shl
loope
adc
insb
call
sub
into
scas
pop
xchg
push
jmp
scas
pop
lahf
ret
or
and
jb
sbb
es
mov
cld
int3
cwtl
or
pop
cmpsb
xor
push
sub
push
pop
dec
cmpxchg
mov
jne
stos
push
lea
repnz
ds
mov
adc
mov
addr16
add
call
testb
xor
test
dec
sahf
mov
dec
mov
cwtl
mov
mov
lds
jne
xlat
pushf
fstpt
lds
add
adcl
imul
aaa
fisttpl
dec
notl
aad
cmpsl
jmp
fists
loope
lret
cmp
cmp
xchg
ret
in
ds
inc
bound
jmp
pop
push
ja
sub
inc
xor
in
cli
loop
and
addr16
test
jmp
outsl
dec
pusha
imul
inc
pop
das
repz
pop
imul
pop
mov
aas
xor
add
jne
cmpsl
push
fmuls
not
xlat
xchg
data16
addr16
push
mov
fistl
dec
loop
xchg
sbb
lret
ljmp
stos
pop
divl
imul
inc
mov
sbb
adc
and
sbb
dec
jbe
loope
inc
push
iret
jge
adc
cld
cli
pop
xchg
or
imul
insl
jl
xor
out
mov
mov
cmp
es
adc
scas
sbb
cltd
sbb
fimull
loopne
mov
mov
fidivs
push
xchg
mov
push
xlat
int3
or
inc
call
fadd
add
dec
aad
cld
xchg
jle
mov
fmuls
test
cs
subl
fadd
cmpsb
mov
xchg
rolb
push
inc
adc
inc
sbb
pushf
shll
std
push
ficoms
mull
mov
adc
test
push
mov
mov
cltd
jb
int
mov
aas
aaa
xchg
pop
movsb
mov
jns
pushf
shlb
sub
push
pushf
les
jbe
mov
jl
je
mov
xor
push
mov
xchg
push
mov
xchg
mov
and
les
or
lret
dec
out
in
and
fbld
mov
lret
mov
and
nop
cltd
mov
or
push
and
mov
inc
loopne
mov
insb
add
stc
sbb
and
xor
loop
or
sub
pop
pop
or
cmp
pop
push
xchg
xor
fabs
out
int3
bswap
out
push
cmp
sub
inc
inc
sub
gs
mov
add
push
sub
test
jo
and
xchg
js
imul
xchg
xorl
fwait
test
ret
xor
inc
mov
loop
mov
pop
popa
mov
dec
mov
push
ds
popf
cmp
pop
mov
or
sbb
fdiv
mov
mov
dec
cltd
jo
jnp
aas
mov
shr
add
inc
lcall
fcmovnb
dec
xlat
and
mov
dec
cmpsb
ret
sub
pop
mov
aas
jbe
pop
mov
ja
sub
or
or
cmp
movsb
mov
test
and
shrb
jg
test
add
jecxz
pop
add
jae
dec
mov
pop
arpl
jne
mov
fisubrl
rclb
mov
daa
stc
xchg
sar
iret
pushf
dec
std
xchg
lods
mov
sub
pop
mov
sbb
sub
ret
xor
call
cltd
aam
mov
adc
add
mov
xor
jecxz
cmp
mov
test
lret
lret
mov
fisubl
sub
addr16
pop
aaa
sub
xor
fstpl
mov
xchg
or
lock
xlat
enter
mov
jle
xchg
mov
loopne
sbb
cmp
movsb
cmpsb
xor
mov
insb
mov
repz
dec
pop
fstl
mov
clc
stos
out
cmp
stos
repz
lret
repnz
int3
divb
daa
add
sub
sub
imul
mov
ss
adc
and
xor
sub
icebp
repnz
idiv
push
stos
aad
jle
pop
ds
sbb
adc
out
sub
aaa
ja
add
ret
pushf
loope
testl
int
xchg
push
iret
jge
and
xor
mov
sub
xor
sub
dec
stc
in
mov
fistps
fmuls
loop
dec
in
daa
mov
stos
mov
push
and
std
inc
hlt
pop
repz
sbb
repnz
movsb
inc
push
mov
or
adc
add
popa
push
arpl
aam
aas
stos
cs
shrl
jmp
jmp
cmp
stos
dec
andb
and
jns
adc
add
movsb
decb
int3
rorb
cli
sub
ja
arpl
shrb
mov
xlat
imul
push
int
lock
sahf
cmp
adc
mov
movsl
rcrb
mov
out
mov
push
xor
inc
pop
ds
adc
movsl
xchg
mov
ljmp
ja
ret
mov
sahf
repz
jb
das
addr16
aam
push
adc
fldenv
mov
shlb
and
fnstsw
or
pop
mov
jmp
push
sub
fidivrl
movsl
add
out
dec
cmp
mov
xchg
mov
sar
fs
dec
icebp
pusha
and
sub
xor
dec
dec
jge
sub
sbb
inc
dec
je
mov
and
sub
movsb
inc
xchg
bound
adc
rcll
pop
inc
outsl
lock
in
inc
inc
aad
rcrl
sbb
or
inc
jo
jo
push
add
popf
pop
push
mov
mov
xor
ret
sbb
mov
rcll
push
mov
mov
outsl
cmp
and
cmp
jg
sti
scas
mov
je
add
dec
adc
outsb
lret
pop
sbb
push
xor
sub
test
dec
jb
rorb
inc
call
mov
jno
in
push
mov
and
mov
test
mov
jmp
movsb
pop
outsl
data16
and
push
mov
es
jg
sbb
loopne
mov
jae
cmp
mov
adc
enter
add
rorl
movsb
enter
mov
fstl
movsl
adc
push
or
add
xchg
xor
test
into
enter
cmp
xchg
lods
je
test
or
data16
jo
daa
shrb
stos
push
ret
orb
cmpsb
js
aaa
xor
cmpsl
cmp
roll
xorb
push
sbb
push
fimull
sub
mov
push
cmpsl
in
insb
cwtl
test
mov
les
shlb
inc
adc
outsb
dec
xor
stos
sbb
loopne
int
jns
push
sahf
repz
mov
xor
xchg
mov
inc
ret
mov
add
leave
push
mov
xchg
dec
pop
xor
mov
std
test
mov
ljmp
ret
pop
fisubrs
int
shrb
mov
stc
out
dec
sbb
clc
mov
fdivrs
or
xchg
aas
pop
movsb
jae
idivb
or
mov
int
mov
daa
movsb
mov
aas
cmpsb
xor
in
sbb
shld
lret
bnd
fwait
loopew
fs
cmp
sbb
cli
xor
jnp
lahf
daa
jg
out
and
and
push
fs
adc
push
and
sub
cli
outsl
lcall
mov
lret
pushf
jl
int3
xor
or
and
stc
mov
dec
cmpsb
mov
or
pop
sbb
jae
outsb
mov
cmp
les
and
lahf
movsb
xchg
adc
jo
mov
inc
sub
or
lcall
xor
decl
inc
scas
jae
and
mov
in
mov
std
leave
mov
jnp,pt
add
repnz
rol
aad
dec
mov
sbb
mov
jns
call
mov
das
pop
mov
pop
xor
xchg
sbb
mov
dec
sti
test
test
xchg
aas
mov
jg
mov
sub
inc
in
sbb
pop
das
jmp
scas
shl
stos
out
movsb
rcr
pop
loop
pop
test
push
add
lahf
push
push
out
outsb
jl
popl
inc
stos
jns
loopne
xlat
ret
mov
sbb
push
jmp
push
loope
lea
std
movsb
sbb
jbe
push
rclb
fistpl
add
dec
inc
in
adc
mov
dec
ret
xchg
push
ljmp
inc
aaa
sub
push
sbb
and
xchg
pop
leave
dec
mov
fistpll
mov
dec
add
add
xchg
or
jnp,pn
mov
mov
xchg
inc
ss
mov
loopne
xlat
mov
test
adc
xor
sbb
loope
or
xor
inc
jp
mov
sub
outsl
mov
add
sbb
cli
cmp
adc
inc
jo
jbe
inc
pop
mov
pushf
lods
push
ret
push
aad
push
popa
stos
xchg
stos
xchg
xchg
jb
sub
mov
xchg
sahf
xor
add
xchg
and
cmp
mov
xor
aam
xchg
xchg
je
cmpsb
cmp
push
int3
mov
push
addr16
popa
fsubrl
or
mov
lret
mov
popw
repz
enter
out
lcall
jnp
das
mov
enter
jae
mov
xor
fs
xchg
mov
imul
ret
jecxz
pop
gs
and
pushf
sub
lret
mov
js
popa
xchg
cmc
jo
unpcklps
in
pop
addr16
mov
bound
mov
pop
push
clc
push
data16
fmull
nop
xlat
inc
pop
cld
add
les
int3
test
jmp
mov
mov
gs
and
add
push
xchg
mov
pop
adc
mov
jo
shll
je
ljmp
or
aad
jb
jmp
loop
push
adc
adc
std
les
insl
out
mov
xchg
add
iret
adc
fidivl
push
mov
mov
push
fdivrl
enter
aad
faddl
insb
stos
jmp
or
inc
pusha
xor
inc
cld
cli
pop
jp
push
mov
in
xorb
mov
cld
insl
gs
daa
sub
int3
jl
xchg
xchg
imul
test
iret
mov
inc
lahf
push
movsl
add
pop
inc
fnstcw
lds
and
and
xor
dec
xor
xor
pop
pushf
jp
aas
cs
bound
inc
xchg
cmp
pop
push
sti
mov
stos
fcmovnu
mov
loop
scas
jl
dec
les
iret
adc
ljmp
sbb
xor
mov
cmp
xor
cmp
mov
imul
sub
mov
popf
mov
rcr
xchg
pop
sbb
cli
mov
insb
mov
pop
aad
mov
or
pop
push
jle
mov
cmp
insb
cs
lcall
sub
lock
mov
push
jge
pop
lret
jne
mov
inc
fimuls
ljmp
lret
cmp
xlat
adc
cmovp
mov
pushf
lods
dec
and
mov
mov
arpl
jmp
pop
sub
shll
lcall
mov
dec
pop
sub
in
pusha
cmpl
adc
mov
push
int3
clc
inc
mov
int
mov
dec
faddl
inc
fbld
into
pop
cmpb
or
repnz
xchg
cltd
dec
into
pop
xlat
lds
std
jecxz
push
xor
jl
sti
xor
icebp
popl
add
loop
push
shrb
icebp
xorb
push
push
mov
rcll
test
dec
push
aas
bound
dec
loop
sub
inc
sbb
mov
mov
push
mov
in
lret
sbb
mov
pop
popa
cmp
pop
jg
dec
inc
lahf
push
aaa
pop
fs
pop
or
xlat
lds
jecxz
adc
je
adc
in
adc
cmp
mov
cmp
sub
fidivl
mov
and
outsl
push
jo
sar
rorl
sub
out
or
mov
push
out
inc
cli
movsl
inc
pop
loope
xchg
push
add
xor
jnp
lahf
fwait
sub
push
push
cwtl
outsb
lahf
sub
mov
dec
cwtl
adc
and
movsb
ret
cmp
test
les
daa
sub
sbb
push
sub
cmp
lret
xor
adc
xor
inc
pop
std
imul
pop
pop
shll
jne
mov
shll
es
ds
jne
and
mov
ljmp
fbstp
je
out
inc
insl
fidivrs
ret
cmpl
sub
outsb
pop
jnp
cmc
mov
dec
add
popf
int3
cmpsl
pop
sbb
fwait
mov
pop
test
sub
push
sbb
int3
inc
ds
lods
xor
cmp
and
xchg
test
sub
push
lret
mov
add
sub
imul
clc
jle
add
push
jl
push
and
jge
xchg
xor
pusha
je
xor
push
stos
int
sbb
stc
lret
push
fsubl
mov
or
cmp
mov
cwtl
out
inc
icebp
sub
sub
dec
cwtl
jo
mov
int3
sub
loopne
ret
insb
int3
or
sbb
and
shl
pusha
daa
push
movsb
dec
mov
add
cmpxchg
or
jae
pop
bound
and
lret
inc
ds
xchg
cld
sub
subb
out
cmc
mov
lds
adcl
fdivp
pop
in
repz
jae
movsb
dec
repz
repnz
cmpsb
jo
sub
add
testb
or
adc
inc
lea
imul
mov
pop
xor
xchg
adc
adc
or
int3
jo
mov
das
loope
inc
sub
sahf
arpl
push
sub
mov
dec
dec
jg
fsubs
fsubrp
repnz
sar
lds
sub
lret
imul
int3
pop
mov
test
adcb
into
or
fildl
mov
jbe
cwtl
mov
fidivrs
mov
sarl
aas
or
in
mov
mov
add
jnp
mov
sub
fcmovne
je
push
and
dec
ja
icebp
pop
ret
neg
insb
iret
xchg
insl
adc
nop
int3
mov
rolb
mov
icebp
inc
adc
data16
fcoms
sub
lea
arpl
sub
jo
push
inc
insb
mov
mov
arpl
shr
cs
mov
xor
stos
insb
jo
in
jp,pt
shrl
sub
push
cmp
inc
add
out
xchg
mov
xchg
push
sbb
repz
inc
mov
cmp
dec
push
int3
xor
cld
adc
sub
mov
mov
mov
push
sub
cmp
mov
inc
pop
rol
jne
ret
push
pop
push
shl
pop
ret
mov
and
mov
or
pushf
pop
jp
and
jecxz
ds
push
inc
add
add
cli
xchg
or
in
mov
pushf
stos
xor
fnstcw
mov
dec
push
shl
xchg
add
mov
and
xor
rcr
pop
xorb
xchg
sbb
pop
in
dec
popa
adc
xor
repnz
push
rcrb
jae
imul
dec
jne
stos
xchg
fstpt
clc
xchg
and
jns
mov
outsl
jle
dec
adc
xchg
daa
jl
into
test
xchg
mov
in
inc
mull
mov
xor
xchg
movl
hlt
loopne
ror
mov
inc
rcl
stc
in
mov
outsb
mov
sahf
jo
sbb
adc
mov
xor
fistps
and
iret
jl
mov
mov
push
pop
xor
ss
test
push
sbb
mov
push
cmc
or
jle
cltd
psrlq
mov
pop
js
ds
cmp
insl
ds
js
ret
xlat
bound
sub
movsb
jne
xchg
sbb
inc
fists
sbb
push
out
pushf
fldt
repz
mov
push
inc
test
pop
fcompl
ficoms
imul
mov
add
cwtl
adc
das
cmpb
popa
jae
sub
mov
idiv
or
mov
and
ret
jge
pop
enter
inc
fisubs
cs
cmp
cmp
rcrl
mov
mov
pop
call
sbb
sbb
movsl
pop
cwtl
rcrb
enter
push
in
adc
ds
lcall
mov
repz
out
mov
cmp
and
ja
lods
sbb
adc
mov
shlb
fwait
add
hlt
push
inc
orb
outsb
jl
sahf
and
and
pop
or
in
dec
cmpsb
lret
mov
sbbb
mov
pop
jp
andb
cmp
or
in
into
xchg
ds
test
jo
les
adc
lods
mov
leave
test
sbb
inc
dec
add
mov
xchg
pop
stos
std
cwtl
sbb
inc
cmp
dec
xchg
aam
out
xor
lods
mov
out
dec
jle
sbb
jmp
es
xchg
std
outsb
fsubrl
imul
mov
mov
pop
sub
aaa
pushf
int3
sbb
or
pop
loope
cmp
std
push
lahf
inc
pop
pop
stc
negl
jecxz
ret
out
xlat
rclb
xchg
cmpsb
mov
std
push
aas
fidivrl
pop
cmp
xor
inc
adc
push
outsb
roll
adc
test
inc
dec
sbb
pop
jne
fcmovnb
dec
pop
roll
dec
ret
pop
and
push
dec
fmull
cmp
xor
dec
mov
pushf
push
mov
xchg
pop
fwait
loop
xor
gs
and
mov
xor
sbb
inc
push
dec
orb
daa
cmp
mov
jmp
cmp
xor
or
addr16
xchg
loope
imul
inc
push
push
mov
out
in
sub
into
dec
aaa
shlb
lcall
sbb
into
aad
cmc
imul
movsl
lcall
or
iret
mov
subb
pusha
fldpi
adc
cmpsl
jg
pop
adc
jecxz
jecxz
xor
mov
inc
pop
xchg
icebp
xor
cmpsl
call
sub
fisttpl
pop
cwtl
push
ss
and
xor
das
and
push
loop
cmp
cmpsl
dec
xchg
jecxz
out
pop
das
shl
dec
aad
rol
and
roll
jmp
cs
cmp
lods
cmp
cmp
mov
incl
daa
jmp
cmpsb
imul
lahf
adc
mov
push
jp
push
pop
in
divb
sbb
jae
mov
push
cmp
push
fs
pop
xchg
jns
lock
pop
test
pushf
pop
xorl
mov
lods
shll
in
icebp
in
adcb
outsl
fidivl
jb
jb
ret
and
xchg
nop
lcall
aam
aad
comiss
pop
into
lcall
pop
dec
aad
testb
inc
xchg
cmpsb
insb
or
mov
setae
je
shrl
popa
xchg
test
cmp
mov
push
ja
pop
dec
mov
cmp
jge
mov
cmp
adc
test
std
in
cmp
ja
ds
dec
cwtl
xor
sbb
pushf
ret
sub
pop
push
loope
jl
sti
cmpsb
xchg
rclb
fsubrs
or
sarl
bound
mov
out
sbb
cltd
or
mov
imul
rcll
addr16
hlt
in
jno
mov
ret
dec
hlt
sub
xchg
mov
lcall
xchg
xchg
lcall
mov
aam
out
push
je
jl
sbb
xchg
mov
cmp
pop
mov
sarl
jo
mov
mov
jns
pop
xchg
movsb
lret
vmwrite
sbb
aas
imul
fmull
xchg
or
dec
xlat
sub
jp
sbb
mov
pop
jnp
jmp
or
xchg
xor
testb
push
sti
mov
sub
hlt
mov
ret
out
cmp
jno
outsb
xor
mov
cwtl
mov
mov
mov
push
mov
fcoml
jg
dec
mov
inc
imul
push
jle
cwtl
jl
stos
xchg
inc
mov
cli
ds
xor
sub
sbb
shll
push
xor
mov
and
jle
lcall
xor
lahf
sub
ds
stos
mov
hlt
add
test
cmp
iret
add
cmp
cmp
mov
push
mov
cmp
xor
mov
sub
cwtl
adc
in
cmp
sarl
and
mov
sbb
jb
adc
hlt
xchg
daa
jb
loope
js
xchg
mov
adc
js
mov
pushf
xchg
adc
ds
out
test
adc
fwait
xchg
inc
mov
lods
push
adc
sti
push
add
mov
push
stos
xlat
es
das
std
sbb
mov
fcoms
xor
aas
push
jle
mov
mov
aam
mov
dec
call
cwtl
arpl
xchg
mov
pop
mov
es
jp
cmpsb
mov
lahf
inc
mov
pop
icebp
push
mov
jecxz
push
inc
add
out
mov
arpl
mov
mov
adc
pop
pop
push
ror
je
data16
sbb
ds
test
ljmp
popl
in
lret
shr
mov
cmp
push
xchg
xorl
loop
push
mov
in
mov
out
test
dec
or
adc
hlt
jo
cmpl
gs
leave
out
sbbb
push
xor
xor
mov
or
test
and
pusha
test
cmp
xlat
outsl
idivb
fwait
xor
add
fldl
xchg
inc
add
dec
cli
xchg
fcmovb
add
jnp
cmpsl
xrelease
sbb
cltd
repnz
pushf
stos
mov
cltd
xchg
cmpsl
pop
stc
cmp
cmc
pop
scas
dec
pusha
jmp
xchg
inc
pop
addb
xchg
cmp
inc
jg
add
cmp
subb
dec
clc
jae
lcall
cwtl
cld
daa
mov
and
scas
popf
imul
sbb
push
jnp
ja
es
aam
les
pop
aam
lea
hlt
pop
sbb
mov
add
andl
sbbb
fsubrl
adc
dec
cltd
xor
rolb
cmp
mov
popl
push
in
lahf
and
mov
mov
mov
imul
push
fwait
or
xchg
fistl
cltd
ret
cmp
scas
sbb
std
pop
xchg
dec
lock
cltd
repz
xor
cltd
or
mov
cmpsb
xchg
sti
cmp
push
daa
jp
inc
scas
xchg
push
xchg
and
push
mov
out
and
dec
out
mov
pop
inc
pop
inc
and
mov
fadd
rol
pop
lcall
xor
fdivs
push
inc
mov
sub
rcrb
in
in
lret
cmpsb
mov
cmp
adc
in
and
inc
nop
lahf
iret
addl
mov
mov
loope
ljmp
xchg
mov
pop
cmpsb
inc
mov
vmovaps
loop
mov
mov
test
hlt
mov
cmp
sbb
dec
das
cmp
mov
add
xchg
sbb
adc
add
std
inc
aas
sub
stos
inc
lds
out
lea
test
pop
jle
sbb
mov
mov
mov
and
dec
sbb
pushf
rolb
mov
fisubl
sahf
jmp
mov
out
test
or
call
shr
xor
and
test
sbb
add
ljmp
das
lret
xor
flds
lea
jns
mov
mov
iret
and
xchg
lods
sub
jecxz
xchg
ficoms
add
stos
pop
inc
js
aad
shl
push
push
or
pmullw
push
and
mov
mov
dec
out
add
std
dec
es
shrb
stos
and
inc
movsl
push
mov
mov
popa
and
sbb
inc
dec
xchg
stos
push
mov
int3
ss
jmp
mov
push
cmp
lcall
adc
mov
sub
and
cmp
lods
xchg
movsl
mov
ret
pop
pop
push
jmp
jnp
fimuls
mov
movsb
int
jmp
push
xchg
into
mov
push
mov
mov
or
iret
or
push
icebp
xchg
pop
aaa
sub
push
ja
inc
push
adc
test
fcompl
mov
xchg
std
sahf
fsubl
pop
xchg
sub
jecxz
fcoms
imul
cmp
insl
pushf
cmc
aas
jno
xor
fiaddl
or
test
jae
rcrb
cmp
or
ja
pop
cld
rcrb
loop
add
lock
bound
arpl
cwtd
aam
fsub
popl
nop
push
gs
ret
cmp
das
cltd
or
lods
test
mov
cmp
xchg
aad
pushfw
xor
hlt
jno
pop
insb
push
xorl
repnz
mov
cmp
inc
je
iret
cmc
and
push
cmc
dec
lds
sbb
mov
sbbl
add
arpl
lock
sub
sub
push
fdivrs
std
shrb
in
inc
outsb
sub
jb
loop
stos
xchg
testl
jle
fists
cmpb
fists
aaa
addr16
pop
scas
in
fidivrl
testl
aam
cmp
sub
es
je
dec
jle
ds
mov
shrl
push
sub
pop
cmpsb
lcall
iret
pop
or
sbb
push
mov
in
mov
fwait
sbb
aam
xlat
sub
mov
inc
out
pushl
lcall
ja
mov
sub
jp
ds
mov
into
sbb
dec
aaa
or
test
mov
lcall
and
hlt
mov
daa
push
push
xchg
ret
pop
cmpsl
jmpw
fs
push
add
loopne
addr16
jmp
pop
jb
sti
sbb
lcall
pop
mov
ljmp
movsl
push
cli
xor
mov
outsl
cmpsl
leavew
pushf
sub
xchg
jle
in
int3
mov
lcall
xchg
int
pop
in
cmp
dec
xor
xchg
mov
in
mov
cltd
sub
dec
mov
push
enter
addr16
es
jl
inc
mov
stos
mov
sbb
das
gs
popf
aaa
inc
jno
pop
insb
nop
mov
int
jecxz
sub
sub
or
pop
aas
sahf
xchg
mov
xchg
push
mov
icebp
stos
xchg
pop
xor
and
cmp
imul
into
xor
loop
leave
push
jae
nop
gs
jno
in
xchg
mov
cltd
dec
inc
es
push
outsl
push
cmp
cmc
popa
mov
test
adc
xor
jmp
fisubrl
dec
push
fistpl
inc
xlat
test
mov
bound
push
add
xchg
cmp
add
xor
jle
mov
sub
mov
adc
cmp
mov
int3
lock
in
jnp
cltd
fs
jmp
adc
notl
cmp
cld
xchg
mov
jmp
lods
ss
jecxz
lahf
xor
push
fcmovu
sbb
cmp
xchg
add
sub
sbb
test
int3
cltd
xchg
rcrl
dec
mov
xchg
pushf
jmp
cs
or
or
or
or
xchg
dec
sbb
ja
mov
shrl
xchg
push
sbb
fs
mov
outsl
mov
aaa
adcl
pop
and
fnstsw
fdivrs
out
decb
cmp
fiaddl
imul
sbb
mov
ss
ret
in
dec
aas
and
or
mov
adc
es
mov
mov
push
sbb
mov
mov
fistl
jp
sarl
pop
fiaddl
ja
push
imul
mov
test
sub
inc
or
or
adc
adc
movsb
jg
pushf
mov
jae
and
fs
mov
push
iret
idiv
subb
hlt
jl
cmp
jge
iret
int3
sahf
jno
das
ret
push
xor
loop
push
sti
hlt
out
or
cli
jae
jmp
les
xchg
lds
enter
jmp
adc
cmp
adc
or
in
xor
add
adc
add
mov
negl
mov
sub
push
sbb
mov
or
lock
push
rclb
adc
clc
lds
add
addr16
inc
lahf
mov
add
mov
mov
cs
rorb
dec
dec
xchg
mov
jno
out
mov
push
sub
out
insb
dec
int
xchg
imul
negl
dec
insb
dec
fsts
or
enter
stos
mov
push
rcll
push
sbb
cwtl
sub
daa
fsin
adc
xlat
insb
ds
pusha
cmp
adc
xchg
icebp
push
push
jbe
inc
xorb
mov
lock
ja
outsl
ret
adc
mov
cmp
and
lods
lods
push
hlt
fst
fnstcw
adc
adc
cmp
fs
add
sarb
lods
lods
pop
mov
and
sahf
std
jp
xchg
pop
cmp
lods
lar
popa
jl
nop
call
or
insb
push
fwait
ds
scas
push
cmp
xor
xor
shlb
daa
and
push
push
pop
fcmovb
xchg
ror
mul
mov
in
icebp
sbb
xchg
mov
movsb
popa
mov
push
nop
ret
mov
movl
fnstenvs
mov
and
aaa
stc
test
and
mov
mov
cmp
sahf
mov
adc
aas
stos
mov
fdiv
sbb
mov
add
loopne
sub
add
addr16
stc
rcll
and
sbb
rcl
mov
xor
and
jge
inc
inc
out
and
js
aaa
jne
xor
call
jns
cs
in
sub
fs
jbe
sbb
fwait
cld
out
aaa
imul
mov
and
lahf
movaps
aas
ljmp
cwtl
loope
inc
fmull
loopne
mov
test
push
pop
cwtl
mov
pop
mov
ret
in
mov
cmp
sub
lret
call
or
and
jge
push
lret
add
mov
pop
icebp
ds
pushf
mov
sbb
leave
negl
push
int
inc
loopne
pop
jnp
leave
sbb
dec
loopne
loope
sub
in
xor
outsb
jbe
add
stos
ret
js
cs
mov
cmp
std
xor
xorb
xor
sbb
or
or
mov
xchg
rcrb
mov
xchg
push
sbb
stc
popf
insb
popa
aas
test
cmp
iret
int3
mov
movsb
dec
cmpsl
xor
dec
fcomi
popa
into
int
and
rcrb
adc
movsb
jp
roll
sub
lret
sub
xchg
mov
push
lea
cmpsl
inc
jl
lock
and
andb
out
xchg
js
dec
into
adc
push
jno
adc
sahf
lahf
call
push
flds
les
pop
cs
leave
es
popf
and
popl
mov
and
pop
add
mov
ss
xor
scas
mov
ljmp
inc
sub
dec
test
or
push
rcr
bswap
popf
dec
icebp
mov
int
add
mov
adc
lgs
leave
inc
dec
in
inc
sarl
xor
pop
ret
daa
aas
add
dec
js
ds
dec
pop
inc
insl
jle
xor
dec
in
or
mov
pop
xchg
adc
inc
outsl
cmc
jge
dec
movsb
lahf
add
sub
shrb
jle
out
in
xchg
ds
push
pop
mov
push
pop
sarl
pop
mov
bound
cmp
jmp
push
pushf
rorl
and
jle
sub
sbb
dec
movsl
lcall
or
mov
xorb
or
lret
dec
mov
es
fisubrl
and
cmc
mov
mov
stc
xchg
ret
fisubs
mov
aaa
scas
ja
mov
dec
add
or
jl
push
movsb
test
xchg
pop
dec
popf
scas
mov
push
jne
push
mov
loopne,pn
pop
cmpsb
in
pushw
in
loopne,pt
sbb
adc
lret
jns
leave
dec
xchg
scas
adc
xchg
adc
xchg
cli
add
loop
xchg
fdivl
shll
mov
ret
in
xchg
lock
xchg
outsl
mov
stos
out
adc
mov
out
out
jns
dec
sahf
scas
jge
loopne
pop
lcall
popf
jne
fwait
xchg
fs
aad
mov
jmp
adc
pushf
mov
jb
outsb
dec
add
dec
pushf
ja
fmull
inc
mov
rclb
ret
sub
jmp
dec
dec
loop
sti
sbb
in
mov
imul
mov
into
std
or
push
in
and
mov
sarl
jns
gs
aaa
xlat
adc
mov
aas
xchg
pop
in
cs
adc
mov
arpl
dec
adc
xor
call
adc
in
mov
mov
mov
mov
push
in
xchg
cmp
nop
pop
out
sub
push
xor
sub
rorl
fildll
std
mov
lea
fstl
jo
add
mov
ljmp
or
cmp
xchg
ds
popa
xor
pop
fstpl
ss
stos
xchg
into
loope
cs
mov
fyl2x
gs
jg
cmpsb
adc
adcb
push
add
inc
cs
lods
lods
push
dec
popf
push
iret
and
movsl
cmp
sub
dec
aaa
cmpsl
insb
lods
sti
push
and
cmp
pop
lods
into
popf
fcomi
add
xchg
imul
leave
cmp
inc
fstl
cmp
pusha
mov
sub
mov
xchg
pusha
sbb
lahf
and
fdivrl
rcll
adc
push
xor
mov
or
xchg
lcall
xchg
xor
cli
data16
mov
pop
outsb
out
mov
sbb
push
lret
and
int3
fistpl
pop
dec
shlb
outsl
dec
and
pop
test
cmp
mov
adc
outsl
loope
imul
ljmp
arpl
aas
mov
sbb
adc
sbb
adc
movsb
push
mov
xor
jp
or
and
push
sbb
pop
fisubrs
jmp
popf
adcl
mov
aam
fs
xor
lods
mov
or
outsl
call
sub
test
push
out
and
lret
test
jge
sti
push
mov
outsl
adc
popa
sti
not
popa
ret
sub
and
leave
xchg
ficoml
mov
sbb
jmp
cltd
cwtl
push
cmpsb
jecxz
xchg
loopne
mov
ds
inc
loop
adc
xor
cli
mov
sbb
out
aaa
je
shlb
cmpsb
mov
std
xchg
out
jnp
cmp
insb
cltd
mov
test
or
sbb
jecxz
sbb
dec
mov
jl
test
shl
jo
roll
push
adc
push
xchg
fs
frstor
pusha
popa
and
fs
dec
outsl
lods
cmpsb
cmp
loope
adc
lods
add
and
adc
fcoms
out
push
pushf
daa
nop
rclb
test
xchg
add
sub
cmp
pop
xchg
pop
sti
push
pop
or
sub
mov
divb
imul
dec
mov
sub
and
int3
ss
sub
xor
cs
adc
sub
xor
stos
push
pushf
push
sahf
aam
iret
push
cwtl
pop
jg
xchg
add
jl
add
and
call
das
in
sub
inc
adc
fnstenv
cltd
loop
movsl
fbld
push
cltd
out
push
mov
shll
jns
stos
pop
js
hlt
addr16
xchg
jno
out
dec
cwtl
jmp
dec
add
dec
das
je
rcll
adc
sbb
std
jae
outsl
mov
arpl
popf
fwait
mov
loope
mov
xor
addl
dec
addb
dec
icebp
dec
test
mov
cli
sar
adc
aaa
movb
mov
cmp
out
inc
ficomps
xchg
pop
pop
pop
or
add
jp
adc
mov
stos
std
mov
or
xor
fisubrl
lahf
push
in
inc
cmp
mov
xchg
or
xor
loop
shlb
lds
push
cmp
ret
nop
rcl
ds
jecxz
push
mov
adc
je
jg
and
arpl
xlat
add
adc
shlb
imul
out
jb
adc
jns
xchg
xor
mov
or
mov
je
loop
xchg
xchg
jno
imul
in
cmpl
ffreep
repz
adc
ror
adc
orb
xchg
pop
dec
insl
push
dec
jmp
sbb
mov
add
out
inc
shl
sbb
gs
push
daa
mov
faddl
add
jae
jnp
sub
fistpl
mov
loopne
cmpsl
or
dec
xor
pop
add
jae
pop
jmp
fldcw
push
mov
or
xchg
adc
scas
imul
sub
es
mov
arpl
clc
cmpsb
rcrl
ja
enter
lock
xchg
cmp
dec
fisubrl
clc
nop
int3
add
fwait
jle
cmpsl
mov
cmp
pop
add
cmpsb
call
pop
adc
repz
popf
jns
sbb
mov
mov
pop
ret
leave
cmp
data16
insb
adc
imul
mov
adc
push
mov
cmp
xor
push
push
push
fsubs
xor
mov
mov
out
cmp
aam
mov
or
sub
lcall
pop
aaa
lods
mov
dec
mov
sti
enter
popf
sub
adc
cmp
sahf
dec
jne
aaa
and
lret
test
inc
pusha
call
scas
and
ljmp
xchg
ljmp
sub
xor
jne
adcb
mov
decl
lods
xchg
or
xor
sbb
or
add
mov
jl
ljmp
sub
sub
sti
mov
incl
ret
pop
repz
dec
and
push
movsb
jg
je
add
xlat
inc
cli
jno
jl
test
repz
jne
push
push
shl
es
push
lock
fwait
inc
dec
xorl
inc
cmpsb
add
orb
pop
dec
jo
xor
xor
sbbb
add
mov
dec
lock
xchg
mov
xchg
adc
dec
stos
popa
jg
dec
addb
fwait
loopne
scas
mov
outsl
nop
dec
xor
call
inc
popa
xor
or
and
sahf
mov
js
stc
dec
rcl
mov
sub
jmp
pop
lea
mov
ret
and
mov
mov
dec
push
xchg
or
ds
cltd
loopne
cwtl
push
mov
shll
mov
cld
ljmp
push
adc
inc
inc
fistps
negl
dec
js
sub
shlb
and
xchg
push
nop
idivb
out
sbbb
dec
push
cmp
sub
adc
imul
push
push
clc
test
movsl
push
cmp
jmp
nop
sbb
popa
xor
orb
adc
cld
pop
movsb
mov
pop
mov
xchg
mov
mov
and
aam
jmp
and
mov
xorl
mov
std
fdivp
xor
rol
notl
push
push
push
aad
rolb
in
mov
out
mov
cld
pop
out
adc
adc
and
scas
in
out
inc
ficoms
mov
in
insl
dec
nop
cltd
jp
pop
rcrl
mov
ret
push
xchg
daa
add
in
pop
cmp
and
inc
ret
insl
xor
push
push
mov
mov
sub
add
imul
ja
mov
jmp
ljmp
add
scas
dec
jnp,pn
ret
cmc
out
push
lahf
fnstsw
cltd
aam
add
jg
test
ret
pop
call
add
pop
pushf
add
inc
mov
sbb
movsb
jle
cmpsb
pop
mov
pop
pop
cmp
fnstsw
mov
add
add
repnz
movsb
mov
mov
dec
push
and
sub
icebp
iret
in
xor
sub
sub
add
mov
dec
sbb
dec
movsl
out
push
jge
lret
outsl
cmp
icebp
das
insl
inc
mov
fisubl
into
dec
aam
or
out
rcrb
in
int
xchg
and
shl
jmp
add
pop
pusha
ret
gs
out
aad
ljmp
xorb
sti
cmp
es
nop
adc
inc
jo
out
shlb
adc
iret
adc
xchg
xchg
ds
movsl
das
jl
cmp
ljmp
insl
lods
jo
and
pop
adc
shrb
ljmp
inc
dec
add
filds
cs
cmpsb
sbb
adc
icebp
sub
icebp
outsb
jns
mov
and
mov
mov
xchg
mov
test
mov
xchg
inc
mov
jmp
mov
ret
aas
dec
enter
and
ret
pop
test
mov
cmc
xchg
inc
xor
inc
mov
scas
pop
clc
mov
cltd
mov
adc
and
sahf
mov
mov
lock
aas
cltd
jnp
movd
sbb
add
or
hlt
sti
mov
pop
sub
aaa
dec
outsb
mov
mov
cld
das
test
leave
dec
iret
push
in
pop
fidivl
xchg
das
lods
cmp
sub
inc
push
mov
xchg
xchg
cmp
mov
push
mov
hlt
xlat
xlat
lret
in
mov
push
and
and
mov
and
adc
pop
dec
fsubs
add
into
cmp
mov
insl
xor
pop
stc
sbbb
out
cwtl
xchg
pop
pop
mov
not
push
pusha
adcb
pop
call
dec
test
mov
cwtl
cmp
mov
repz
sub
lcall
push
mov
fiadds
dec
cmp
fildl
fld
xor
add
jae
rcrb
push
push
lods
fsubl
js
mov
sub
data16
mov
enter
pop
xchg
stos
roll
adc
jge
sbb
aad
lods
hlt
insl
scas
repnz
cmp
adc
xchg
test
add
clc
test
cs
test
sub
mov
dec
jmp
and
sarb
cmc
jb
mov
rorl
cmp
in
js
fisttpl
mov
rcl
mov
mov
xor
inc
cmp
sub
mov
cmp
fisubl
jge
mov
mov
or
andb
pop
sbb
mov
cmc
and
mov
inc
xchg
fdivrs
inc
jg
xchg
mov
mov
mov
pop
call
xchg
out
mov
aad
rcrb
mov
and
inc
push
jae
lahf
mov
outsl
popf
ja
stos
adc
cmp
jae
jns
loop
stos
sub
mov
xchg
gs
stos
pop
mov
mov
mov
xor
lea
sbb
or
in
mov
sub
xor
fcmovb
fstps
pop
mov
rorb
pop
jbe
aad
push
out
jl
push
in
sbb
lahf
adc
mov
jns
sub
push
lahf
mov
push
call
test
inc
mov
push
repz
inc
push
push
xlat
and
clc
sub
sub
mov
pop
lret
pushf
xchg
repnz
push
loopne
sbb
movsb
pop
xchg
dec
aam
or
into
fwait
adc
scas
push
pop
dec
sub
pop
or
push
in
and
sbb
sub
pop
xchg
add
mov
cld
addr16
push
jecxz,pn
jae
xlat
mov
fiaddl
inc
push
sbb
notb
in
push
push
or
mov
ss
lods
ja
addb
mov
in
xor
mov
int3
stos
pop
aas
push
add
inc
xchg
fstps
fimuls
andl
push
test
mov
popa
push
shrl
cmp
test
lods
xlat
int3
adcb
lds
or
pop
sbb
in
xor
imul
cmc
push
mov
lods
int3
loope
dec
pop
test
mov
or
pop
dec
ljmp
pop
aaa
mov
in
pop
mov
mov
jnp
lds
push
mov
sar
push
test
jl
xchg
popa
mov
adc
pusha
push
push
adc
sbb
push
pushf
subl
pop
jp
xchg
xor
popl
or
sub
cmp
test
fnstsw
or
xor
dec
mov
push
fstpt
or
push
repz
out
xor
inc
xor
ret
adc
xchg
dec
imul
sti
mov
pop
jmp
lea
sbb
cmp
mov
insb
popa
mov
xchg
mov
pop
or
movsb
stos
lret
test
andb
enter
cs
stos
jp
sub
enter
adc
cld
mov
icebp
sbb
inc
add
aad
test
xchg
outsb
vandnps
fcmovb
rorb
or
mov
dec
rcrl
mov
mov
repnz
aad
jno
jno
push
xlat
in
xor
subl
mov
mov
xor
sarb
iret
lods
call
outsb
add
in
test
dec
push
pop
ljmp
pop
das
lcall
pop
lahf
cli
fs
pop
loope
and
fwait
xor
sbb
sub
cwtl
cltd
fwait
ss
in
jnp
mov
decb
mov
adc
mov
in
mov
neg
and
pop
dec
and
dec
cwtl
lds
mov
xor
jmp
sub
mov
sub
aad
popa
iret
jp
mov
jg
cwtl
pop
gs
cmp
into
fwait
jle
and
cmp
cvtps2pi
loopne
xor
mov
xor
xchg
mov
test
call
dec
xor
adcl
call
cli
mov
fldenv
cld
cmp
cmp
outsl
lods
in
adc
into
inc
adc
xor
outsb
pop
cmpsl
jno
mov
rclb
pop
jp
sbb
lahf
or
lret
push
test
shll
dec
mov
push
jb
addr16
mov
in
jnp
add
pusha
and
daa
jno
or
xlat
das
and
lcall
aaa
inc
lcall
and
xchg
leave
sub
mov
roll
insl
push
xorl
ljmp
or
out
inc
dec
movsb
cmc
in
test
loopne
jmp
add
pop
sbbb
add
loope
xchg
bound
mov
in
mul
fcmovbe
ret
mov
pop
add
andl
and
outsb
pop
icebp
sbb
jg
or
in
pop
mov
outsb
pop
lods
cld
xchg
das
xchg
outsb
mov
adc
lret
push
dec
cmp
mov
push
dec
ss
push
xor
ret
pop
adc
pop
popf
fwait
jecxz
mov
inc
lea
and
mov
mov
and
js
lret
sub
push
mov
shrl
cmc
xchg
mov
ret
stos
nop
or
les
pop
xchg
pop
test
das
shrb
ds
sbb
xchg
cld
xchg
pop
inc
jg
jmp
lret
push
dec
jge
and
gs
scas
push
insb
xor
into
push
neg
sahf
xchg
add
pop
jle
andl
fs
int3
hlt
in
or
push
cmp
popf
sbb
xchg
outsl
int
lea
xor
in
mov
xchg
loop
inc
cmpsl
pop
int
adc
pop
repnz
xchg
pop
xchg
pop
ret
add
jle
test
lret
mov
lock
je
mov
lret
xor
pop
daa
stos
cmp
cmp
xchg
add
xorb
das
xchg
mov
adc
or
xchg
data16
loope
sbb
jns
or
sub
mov
mov
aaa
jle
sti
push
lahf
das
adc
xchg
jb
jp
fcomps
dec
outsl
sbb
jp
dec
fistpl
mov
adc
es
adc
push
jae
roll
ljmp
sbb
cmp
adc
push
xchg
cmpsl
out
cmp
lahf
ds
inc
cmp
mov
pushf
adc
pop
mov
add
or
aad
jae
jg
out
sbb
cmp
daa
or
in
add
push
jge
shl
loop
lods
fucom
dec
sbb
ss
mov
lock
mov
push
dec
and
addr16
les
mov
cld
push
jg
sub
cwtl
sub
decl
imul
flds
sahf
scas
daa
call
xchg
xchg
stos
loopne
xor
rcll
scas
adc
scas
pop
xor
mov
sbb
pop
adc
jp
popw
fucomp
xor
or
jmp
and
sbb
and
lods
xor
mov
lret
mov
sub
fucomip
ljmp
bound
pop
push
cmp
aaa
cld
mov
xchg
loop
xor
mov
mov
mov
mov
ss
in
out
add
and
add
cs
shll
repz
cmpsl
imull
lahf
fisubrl
jmp
fisubrs
dec
outsb
or
xor
cmp
xor
pop
and
inc
fisttpll
push
popf
movsl
outsb
sbb
pop
push
xlat
call
jnp
je
xchg
loop
mov
dec
iret
sarb
fdiv
test
pop
pop
fdivrs
add
pushf
cli
icebp
mov
or
mov
or
scas
cld
call
or
inc
ljmp
in
add
in
or
test
adc
add
loope
adc
inc
rcrl
push
push
mov
nop
iret
ficompl
pop
cmp
mov
cmp
inc
data16
pop
or
fdivrs
test
insl
sub
push
loop
ja
lods
mov
lret
pop
or
mov
fsubl
dec
mov
or
ss
mov
push
xchg
dec
mov
jmp
inc
mov
mov
adc
cld
or
sub
mov
incl
jbe
push
sbb
aas
enter
stos
sub
mov
stos
adc
add
cmp
mov
mov
xorb
test
sbb
mov
stos
sub
ret
adc
push
insb
xchg
push
add
xchg
cltd
xchg
repnz
stos
sbb
add
lock
sub
push
add
or
mov
jb
push
das
aas
xchg
sbb
hlt
hlt
mov
or
test
bound
dec
cmp
mov
popa
and
pop
shlb
in
sahf
in
inc
dec
jmp
inc
lahf
xorl
push
test
mov
das
mov
xchg
fsubl
movsb
mov
iret
xchg
sub
out
insb
ss
dec
shll
jecxz
mov
int
mov
rcll
daa
in
sarb
sub
jp
in
fbld
daa
dec
mov
and
adc
mov
imul
int3
int3
fmuls
xor
and
fwait
jl
insl
imul
cwtl
mov
xchg
jns
loopne
testb
cmp
push
push
out
pop
mov
push
mov
mov
push
inc
test
inc
bound
dec
inc
fidivrs
fsubrs
andl
sbb
xchg
cmp
sub
or
adc
stos
inc
aad
pusha
mov
rcrl
xor
push
loopne
push
std
adc
mov
sub
icebp
jle
int3
mov
sahf
or
mov
xchg
push
les
xchg
push
enter
push
loope
insb
and
inc
pop
cmp
xchg
sarl
rclb
addr16
addl
sub
je
mov
pop
push
lods
and
jecxz
cmp
hlt
or
pop
push
mov
imul
lock
jbe
imul
mov
ret
mov
cld
icebp
xor
je
pop
jnp
adc
or
mov
rolb
cmp
ffree
loope
or
push
xchg
dec
mov
enter
in
pop
pop
ss
push
push
or
jge
adc
aad
std
and
stc
mov
into
add
xchg
std
inc
into
sbb
pop
mov
xor
stos
movsl
inc
sub
adc
shrb
mov
mov
sub
cli
decb
in
adc
cmc
jle
lret
mov
and
dec
arpl
mov
cmpsl
pop
inc
test
cmp
ror
mov
dec
hlt
lret
and
adc
sub
jne
add
jb
jae
sub
or
out
mov
and
mov
mov
xchg
jbe
jb
inc
imul
movsb
cmc
fwait
adc
in
in
mov
cmp
shlb
icebp
and
ret
jle
jmp
outsb
test
pop
cwtl
aam
push
movsb
dec
xor
out
into
in
push
push
sbb
pop
pop
cmp
mov
mov
in
jg
jmp
out
aaa
repz
fidivs
sbb
push
mov
ficomps
aas
dec
cmpsb
mov
dec
adc
dec
jne
xchg
dec
xchg
in
mov
cmp
lods
mov
shld
lcall
cmp
cmpsl
jns
ret
adc
les
sahf
mov
ljmp
sub
shll
mov
inc
dec
fisubrl
dec
sbbb
pop
sub
sbb
inc
rcl
rorl
xor
in
or
call
xor
and
popa
hlt
mov
dec
push
shr
adc
push
adc
pop
and
sbb
dec
les
lahf
fldenv
aad
fdivs
sbb
mov
cmp
clc
push
inc
pop
test
sarb
outsl
xlat
insl
dec
push
mov
addl
push
jecxz
stc
repnz
lods
lret
inc
pusha
sarl
add
pop
add
dec
das
jb
pushf
inc
mov
push
or
sbb
repz
fsub
mov
mov
jne
jno
aas
outsl
fdiv
and
hlt
mov
in
aaa
inc
out
sbb
ss
clc
dec
and
mov
xchg
or
jmp
xlat
arpl
push
mov
jecxz
cmp
xor
dec
pop
or
push
push
mov
sti
and
test
repnz
popa
movsb
loop
cld
push
push
repnz
mov
add
push
push
sub
sbb
sahf
cli
pop
and
add
clc
orl
adc
in
loopne
mov
dec
dec
sbb
repnz
mov
dec
xchg
iret
aad
sbb
mov
std
pop
ds
jns
mov
pop
adc
test
push
int
pop
scas
dec
xchg
jp
ret
jo
sbb
mov
mov
pop
xchg
cld
xchg
icebp
rcrl
sub
idivb
inc
fdivs
jl
cmpb
mov
lret
jb
cmp
xor
sub
sub
out
movsb
push
inc
repz
rcll
push
pop
push
mov
pop
pop
js
lock
outsb
mov
cmc
cmpsb
out
cld
cmp
sub
fistpll
jae
stos
jns
out
out
xchg
pop
xchg
dec
mov
add
lcall
movsb
and
push
rorl
sub
xor
popf
xor
mov
adc
sbb
push
stos
mov
add
adc
stos
clc
mov
pusha
int
mov
push
sbb
roll
cmp
inc
mov
mov
in
add
mov
iret
mov
mov
pop
mov
inc
or
pop
push
add
mov
mov
repz
xchg
mov
or
add
add
pop
sub
fdivs
mov
fwait
pop
pop
sub
mov
mov
pop
sub
sub
xchg
subb
xor
loopne
dec
xchg
pop
cmp
inc
addl
adc
fdivrl
push
mov
sarb
ret
and
sub
mov
repnz
xlat
xor
insb
imul
mov
fbld
cmpsl
xchg
cmpsl
cmp
xchg
dec
cmpl
cwtl
test
sbb
sbb
sbb
inc
loopne
and
mov
les
mov
or
lcall
sbbl
in
popa
add
mov
push
popa
adc
idivl
loope
mov
jae
jbe
add
fwait
out
dec
ret
adc
xchg
mov
mov
jg
mov
std
fisubs
xor
xor
test
sub
push
cmp
xchg
push
repz
outsl
enter
aam
jb
and
push
add
push
cmc
out
stc
jns
in
mov
add
in
enter
sub
lds
lods
jns
cmp
in
sub
sarl
mov
sub
mov
cmc
mov
ret
mov
int3
and
stc
and
xor
add
lret
or
jle
pusha
jg
add
repnz
fsubs
cmp
aam
sub
mov
add
test
into
shrl
js
push
push
cmpsl
subl
push
mov
lcall
adc
xor
push
push
xchg
aad
hlt
mov
in
mov
fcomps
mov
add
push
aam
push
inc
sbb
cmp
push
pusha
fisubrl
mov
sbb
cmp
call
xchg
and
jo
int
sbb
roll
xchg
cmp
xor
mov
xchg
add
ret
add
std
shl
aas
stos
sub
or
push
mov
dec
pop
sbb
stc
subb
push
cmc
mov
lret
mov
stos
xchg
stos
add
aad
cmp
ret
push
xchg
push
ljmp
jmp
xchg
push
adc
lock
js
add
add
lcall
or
sub
push
lret
sub
add
hlt
jns
out
cmpsb
add
mov
loop
cmpsl
cmpb
pop
push
jmp
mov
jae
sbbb
inc
dec
cltd
xor
push
adc
xchg
out
fldt
sahf
add
addb
xor
cmp
push
jl
adc
outsl
aas
push
jmp
call
fstps
scas
or
xchg
and
mov
inc
rol
pusha
inc
adcb
stos
push
xchg
repnz
rcr
cltd
mov
lcall
pop
push
mov
outsl
mov
jo,pt
das
sub
mov
pop
mov
call
jns
push
cmp
sbb
pop
lcall
mov
dec
shlb
fistl
les
jno
insb
sti
adc
mov
test
out
xor
in
jp
add
mov
mov
aad
jmp
shl
cmp
push
and
adcl
dec
xor
mov
xchg
sbb
mov
or
adc
out
and
add
add
fs
sub
and
cmp
je
cmc
jb
jae
aad
pop
ljmp
cmp
cmp
push
bound
inc
ss
loop
pop
inc
aaa
sbb
pop
pop
int3
xchg
pop
mov
leave
jno
mov
jl
and
jmp
int3
fstl
and
imul
shl
aas
stc
stc
dec
cwtl
rol
out
loopne
je
dec
fnstcw
jle
cmp
fdivs
fidivrs
loope
es
aam
xor
xor
mov
mov
add
mov
ss
daa
jo
aad
adc
push
inc
add
sti
and
and
imulb
pop
sbb
sbb
cmp
jp
pop
pop
dec
hlt
insb
loop
inc
sub
inc
push
inc
sub
cs
test
arpl
mov
pop
shll
sub
in
jge
pop
leave
xchg
adc
shr
cmp
decl
sub
mov
cwtl
das
ss
addr16
enter
pusha
shr
shrb
nop
sub
insl
mov
roll
shll
pushf
mov
push
xchg
jbe
in
adc
xchg
jnp
fiaddl
into
fisttpl
sahf
or
add
mov
lret
mov
aaa
loop
cmpb
sti
cmp
and
push
cmpsl
pop
jl
or
fs
stos
xchg
aas
loop
add
adc
sub
shrl
test
insl
inc
fmuls
mov
sti
xor
cmp
fadd
xor
aam
xor
xor
mov
add
or
movsb
pop
mov
pop
lret
push
lahf
pop
cmpsl
mov
mov
push
ss
hlt
les
sbb
repz
and
jle
mov
lahf
fldt
imul
pop
push
sub
jge
fsubl
sub
push
lahf
fcomip
xchg
or
ret
adc
addr16
mov
sti
lock
or
mov
aas
mov
jbe
mov
jl
ljmp
mov
mov
or
mov
negl
push
push
xlat
push
sbb
lods
data16
out
pushf
or
xchg
in
loop
imul
cli
cmp
xor
sub
and
sbb
movsl
repnz
testl
xorl
negb
xchg
loopne
or
insb
pusha
lods
fsubrl
sahf
std
cmpsl
push
cmp
stos
movsb
lret
add
fidivrs
sub
pop
mov
inc
inc
iret
push
mov
pop
stos
mov
add
andb
sub
insb
xchg
ret
loopne
inc
fbstp
mov
inc
push
push
lea
stos
sub
fwait
in
ret
mov
mov
mov
or
cmp
arpl
xchg
inc
pop
xchg
mov
sahf
daa
push
sub
in
loope
call
lahf
or
cmpsl
dec
in
lret
mov
jns
pop
pushf
push
pop
or
movsb
pop
dec
aam
inc
int3
sbb
in
xchg
push
dec
sahf
xchg
mov
jb
pop
pop
jbe
sub
imull
xchg
arpl
xchg
push
pop
out
jmp
loop
add
in
adc
lods
insl
add
cmp
and
std
repz
stos
mov
or
push
daa
push
mov
ss
mov
popa
mov
stos
popf
sbbb
iret
ror
int3
and
cmp
out
loopw
repz
stos
out
cmp
pop
leave
cwtl
outsb
cmpsb
cli
push
subb
sbb
bound
pop
imul
outsb
ss
push
xlat
pusha
jae
sub
inc
and
dec
pusha
mov
js
das
cmpb
js
sbb
push
xchg
ljmp
mov
inc
xlat
mov
add
adc
fnstenv
pop
jp
jmp
or
and
sbb
pop
sub
xchg
push
outsb
xchg
in
bound
shlb
loopne
das
je
imull
cmpsb
aas
cmp
aam
dec
add
daa
lcall
in
lds
ja
push
sbb
aaa
enter
push
adc
mov
pop
pop
sub
pop
aam
dec
push
mov
cmp
out
xor
shll
les
pop
ljmp
arpl
or
pushf
and
jg
and
outsl
loop
scas
push
cmp
lock
mov
ja
jmp
in
ret
movsl
pop
adc
imul
mov
jmp
pop
pop
mov
movsl
pop
cmp
sub
das
cmp
popa
iret
inc
pop
leave
test
je
lret
pop
pop
sti
xor
cmp
test
rcrb
sub
out
ret
pop
inc
adc
xchg
stos
push
xor
loop
test
je
sub
mov
into
adcl
out
js
inc
lahf
push
cmp
add
push
aad
sbb
adc
push
hlt
popf
aaa
push
aam
subb
ret
cs
xchg
adc
inc
pop
or
jb
xlat
mov
or
mov
test
sub
rclb
mov
stos
fimull
fistps
jl
cmpsb
dec
sub
int
and
fwait
out
lock
jne
es
out
pop
out
mov
mov
mov
sub
test
adc
add
push
repz
adc
lea
mov
adc
rcll
ljmp
fcom
mov
ror
sbb
clc
cmpsb
imul
es
xor
fcompl
and
pop
call
pop
inc
or
movsb
and
mov
ja
xor
dec
daa
inc
rcr
jae
and
rol
and
and
pop
cmp
dec
frstor
xchg
adc
dec
test
shl
sub
jnp
lret
adc
test
popa
fsubs
icebp
iret
pop
outsb
cmp
loope
stos
loop
xchg
sbb
cli
xchg
jg
dec
into
cs
jge
mov
ss
sub
pop
mov
add
pop
or
sub
add
push
cli
mov
notl
stc
jo
or
mov
cmp
sbb
add
xor
add
loope
sbb
lea
cmp
xor
and
test
jge
sbb
lcall
or
pop
xor
adc
dec
and
jns
push
jno
pop
cmpsb
add
lods
sub
cmp
mov
shll
sbb
daa
push
addb
addl
pop
adc
mov
push
int3
rcrb
xchg
test
aam
sahf
cmpsb
cmp
push
mov
jl
sbb
les
jno
sbb
sbb
mov
push
outsl
rorb
negb
inc
outsb
jmp
or
mov
fisubrl
adc
out
cwtl
jb
mov
mov
lahf
fs
inc
mov
cmp
shrb
pop
jl
add
hlt
cmc
jnp
jl
ja
mov
sahf
mov
lcall
test
sub
aam
loopne
mov
xorb
mov
jne
scas
xor
jmp
xchg
dec
ds
jne
sbb
xchg
pop
dec
dec
aas
movsl
cli
xchg
repnz
mov
inc
lea
scas
gs
je
mov
push
cmp
mov
mov
test
mov
inc
sub
add
xchg
pop
add
inc
out
das
sahf
subl
jo
adc
dec
stc
adc
popa
stos
movd
pop
enter
pop
stc
pop
fidivl
cmp
cld
and
inc
cmp
xchg
xor
xchg
add
fiaddl
jg
dec
lcall
lcall
dec
mov
pushf
pushf
mov
mov
mov
inc
test
addr16
shll
pop
xchg
ror
fidivrl
dec
xchg
cmp
mov
stos
test
jae
mov
xor
cmp
xor
pop
xchg
cltd
mov
mov
lods
xchg
add
cwtl
sbb
mov
jl
ret
test
pop
push
ret
add
test
add
lds
push
cmp
call
inc
sbb
xchg
mov
out
aam
dec
lret
arpl
popa
sub
aas
adc
stos
xorb
cli
mov
adc
bound
pop
out
cmp
add
xor
andl
xchg
cs
js
loopne
fcomps
mov
jne
pop
mov
jmp
mov
or
aas
xchg
movsb
add
push
xchg
mov
movsb
mov
mov
es
jbe
jmp
push
sbb
cmpsb
mov
insb
enter
stc
sbb
pop
test
push
cmp
cmpsl
pop
dec
mov
dec
lcall
loop
mov
fs
cmp
dec
notl
mov
add
fwait
test
bound
mov
outsl
lods
subb
sub
mov
adc
fcmovnu
push
insl
out
mov
jbe
popf
add
ret
push
mov
cmp
sbb
sub
sbb
mov
mov
imulb
mov
data16
push
cmp
sbb
mov
es
push
inc
icebp
in
mov
outsb
fbld
fistl
popf
push
mov
test
nop
shlw
aaa
xorb
or
das
push
xlat
add
xchg
mov
int
mov
sbb
leave
test
xchg
cmp
movsl
arpl
cmc
mov
shl
fcmovbe
adc
cmp
out
pop
push
xchg
inc
fbld
in
idivb
inc
iret
dec
and
xor
jns
aam
mov
xor
adc
testl
xchg
loop
ds
push
cmp
mov
imul
pop
push
or
popf
into
jmp
sbb
enter
xchg
ljmp
xor
adc
shl
rorb
popa
inc
lods
cmp
in
out
mov
daa
xchg
sub
out
push
ret
lcall
mov
and
xorl
shl
cmp
xchg
cmp
in
mov
jmp
pop
int
and
incb
or
jb
add
lods
stos
cmpsb
fwait
lcall
cmp
rcll
push
cmp
cmp
mov
push
pop
pop
xchg
push
push
and
mov
enter
sahf
and
adc
daa
cmpsb
push
addl
je
mov
xchg
xchg
ds
das
pushf
push
mov
inc
scas
inc
mov
mov
mov
aad
pop
nop
cs
pop
mov
pop
arpl
cs
aad
sbb
mov
ljmp
insl
sbb
aad
jb
repz
push
xor
adc
cmc
mov
not
rorb
dec
xchg
push
sbb
out
out
jl
or
insb
adc
aas
sti
filds
mov
pop
mov
pop
arpl
in
fcoml
push
shlb
cs
pop
cmp
inc
je
inc
jns
movsl
test
in
push
add
repz
incb
xchg
cmp
and
dec
inc
pop
ret
ret
push
add
lea
movsl
pop
or
sub
inc
pop
xor
xchg
push
pusha
add
sbb
pop
repnz
lods
bound
sub
push
rclb
cmpsl
fs
lock
sbb
xlat
mov
inc
icebp
xorb
or
fwait
adc
jecxz
jl
ds
inc
and
dec
jno
es
bound
test
push
lods
repz
call
push
mov
sbbb
ljmp
mov
inc
and
xchg
or
add
pop
test
ret
inc
cmp
repnz
mov
cld
insb
lods
add
fidivrs
adc
loopne
or
out
fimull
inc
xorb
and
dec
lahf
jmp
ffreep
pop
fadd
sahf
mov
ret
aad
sub
and
int
imul
fwait
add
andb
pop
shlb
jnp
lods
xchg
adc
outsl
fcomps
int
jg
test
mulb
lret
sbb
mov
mov
xor
loopne
aas
xchg
test
xor
sub
rclb
fisubrl
fwait
ss
mov
add
sbb
add
stc
fs
mov
xor
xor
cmp
dec
repz
aad
sbbb
mov
mov
xor
cld
push
cltd
mov
cmp
mov
incl
jg
xor
push
cmp
jnp
popf
dec
shlb
stc
jbe
fnstenv
gs
in
or
scas
test
or
jbe
out
or
lods
dec
and
jb
adc
pop
push
sub
mov
sub
mov
mov
ret
ljmp
cmpsl
les
shlb
movsl
ret
mov
jle
outsl
mov
outsb
out
push
and
dec
mov
xorl
sbb
xor
sti
push
lods
jo
imul
sub
adcb
scas
mov
mov
shll
mov
lock
sub
add
pop
inc
aaa
push
or
adc
cld
mov
jecxz
jle
imul
dec
fisubrs
aam
int
cld
jp
cmp
adc
sub
cld
add
out
fstps
pop
sub
cltd
movsl
adc
jo
push
jl
sub
inc
mov
sbb
aaa
out
add
ret
mov
mov
lcall
imul
sbb
mul
test
and
mov
jnp
jnp
sbb
fs
fisubs
dec
dec
xor
and
inc
pop
pop
mov
rorl
in
or
mov
add
mov
mov
call
lahf
pop
jns
add
sub
add
ljmp
mov
imul
mov
adc
jecxz
lret
insl
inc
lock
enter
rcl
test
out
sub
push
mov
stos
sub
xchg
movsl
shl
outsl
call
add
pop
repz
cwtl
pop
imulb
ds
jg
nop
pop
fcompl
and
aas
sbbl
jmp
add
sarb
stos
in
in
cmpb
mov
or
les
ja
push
repnz
ss
out
push
std
sub
sbb
dec
out
xor
lods
jl
cmp
ret
jmp
and
rcrl
xor
pusha
pop
std
mov
or
push
sub
or
imull
dec
fiadds
movsl
insb
outsl
dec
ret
out
and
sbb
mov
mov
or
and
sub
mov
inc
jnp
shrb
pop
cltd
dec
ljmp
mov
pop
mov
mov
lahf
push
enter
mov
or
xchg
imull
les
fiaddl
ficoml
aas
pop
test
mov
push
addr16
lahf
in
andb
out
adc
fdiv
clc
les
rorl
cld
or
sbb
gs
test
mov
sti
arpl
inc
pop
dec
push
out
and
xchg
push
imul
pop
jg
jb
pop
aas
xchg
xchg
fs
rorb
jb
mov
cmp
scas
jmp
or
cmpsl
mov
and
dec
ss
out
es
push
div
cld
ficompl
push
cmp
flds
lahf
push
shlb
sub
enter
out
leave
xorb
pusha
leave
adc
cmp
fdivr
mov
xlat
add
dec
rdpmc
pop
pop
push
xorl
test
sbb
pop
iret
mov
mov
sbbb
and
ficoms
inc
div
bound
push
addb
mov
fiaddl
xor
cmp
das
lods
adc
xlat
sub
aaa
arpl
repz
xlat
mov
insl
pusha
ret
sub
ret
jp
mov
nop
leave
mov
mov
cmpsb
lcall
pop
out
jle
push
outsl
mov
xchg
rorb
mov
xor
in
inc
cmp
fsub
pop
or
jns
add
dec
jae
insl
add
cmp
aaa
adc
in
push
aas
xchg
mov
out
shlb
sti
xchg
xor
iret
pop
in
lea
mov
cmp
xor
pusha
lock
and
push
gs
ss
sbb
popa
dec
jge
adcl
hlt
push
mov
into
adc
xchg
mov
cmp
enter
jmp
add
hlt
nop
cmpsl
shlb
movsl
in
decl
mov
and
pop
add
pop
push
inc
lock
dec
inc
lods
adc
pop
xor
add
sub
add
cmpsl
push
sbb
sbb
popf
loope
xor
cld
ja
pop
jae
sbb
ret
jbe
jno
cmp
lahf
or
sahf
fcoml
test
mov
mov
sarl
pop
cmpsb
and
or
mov
mov
stc
flds
pop
aas
mov
dec
test
sub
mov
mov
ds
jae
clc
imul
lcall
xor
jmp
sub
adc
icebp
ljmp
in
mov
imul
or
cmp
dec
push
mov
in
mov
les
pop
sub
pop
xor
movsb
sub
xor
shlb
push
mov
jnp
jb
mov
sahf
mov
jp
add
mov
decl
and
pop
ret
aaa
loopne
addb
negb
xor
mov
xor
ficoms
dec
pop
dec
mov
rol
push
adc
add
pop
jne
cwtl
or
sarb
sub
jns
rcll
xchg
pop
repnz
mov
inc
pop
cmp
adc
es
lcall
push
lcall
cwtl
xchg
shr
mov
cmp
imul
fwait
dec
cmpsl
add
xlat
cs
ret
sub
push
cmp
push
mov
popa
roll
mov
popl
xchg
jp
sbb
mov
sbb
jmp
sub
push
shll
pop
ret
and
push
mov
add
lock
popa
call
cltd
ljmp
sbb
in
inc
js
jne
xor
push
pop
xchg
mov
pop
xchg
jl
inc
lcall
test
mov
cmp
mov
xor
jl
mov
mov
aas
or
popa
adc
adc
dec
mov
xchg
sub
ds
cs
insl
dec
jnp
mov
rorl
sub
fdivl
fmull
cmp
test
xchg
mov
add
push
sub
pop
jmp
jae
ret
jbe
cmp
repnz
jns
xchg
pop
popa
dec
mov
push
xor
mov
xchg
sub
inc
pop
jecxz
lock
cmpsl
clc
test
sub
adc
rorl
movsb
rcrl
jbe
enter
pop
mov
jecxz
and
ret
and
das
or
pop
dec
pushf
and
push
or
stos
jno,pn
pop
add
fisttpl
fucom
inc
cmp
xor
mov
pusha
loop
and
mov
cmpsb
lock
in
sub
ds
fmulp
cmp
mov
jne
adc
push
in
int3
aas
cmp
aam
xor
fsubrl
mov
adc
sub
mov
fcomps
jo
jnp
aas
adc
cld
push
test
mov
adc
cmp
mov
ljmp
jl
enter
pop
pop
mov
jp
pushf
dec
pop
cmpsb
mov
pop
cmp
mov
or
mov
je
xchg
jl,pt
ljmp
adc
sub
jo
int3
ljmp
cld
arpl
in
pop
fimuls
stos
jo
adc
lods
mov
add
pop
xor
in
add
cwtl
shrl
cwtl
add
hlt
pop
dec
call
push
in
cwtl
aas
jbe
mov
sub
mov
adc
cmp
mov
ljmp
cwtl
arpl
cmp
mov
pop
mov
pushf
insb
pop
lcall
sbb
aam
pusha
hlt
fmull
mov
ja
mov
jbe
push
in
and
into
ds
lret
fidivs
pushf
jno
in
les
and
int3
cmpsb
lret
mov
sub
add
mov
or
mov
arpl
test
pop
ljmp
jp
pushf
adc
repnz
pop
inc
add
mov
hlt
in
push
mov
jbe
sbb
aas
push
ret
xchg
in
mov
data16
jp
pushf
cld
xor
mov
adc
dec
sbb
mov
dec
xchg
lock
cld
pop
fimull
cmp
clc
ret
mov
pushf
add
pop
ds
fmuls
push
pushf
call
cwtl
shll
pop
pushf
add
mov
hlt
push
dec
les
ljmp
push
pusha
loopne
mov
jge
shlb
mov
mov
cs
jl
mov
xchg
xchg
loope
je
pop
lock
jno
bound
imul
not
addr16
dec
dec
mov
pop
xchg
imul
xchg
pop
mov
mov
dec
lods
movsl
lea
cld
dec
or
xor
sub
ss
xor
stos
pushf
cmp
jl
imul
jb
mov
and
push
cmp
orb
mov
in
cmp
xchg
or
xor
push
aam
loop
push
out
stos
pop
je
dec
mov
push
in
mov
stos
js
loope
lods
xchg
pop
mov
pop
push
jge
inc
movsb
cmpsb
test
cmpsb
dec
mov
mov
xchg
movsb
jecxz
xchg
sbb
xchg
sub
dec
stc
test
loop
dec
je
mov
xor
test
add
das
cmp
cmp
movsl
testl
inc
inc
push
push
push
faddp
dec
jl
mov
jp
aad
stc
fs
pop
sub
jge
sbb
push
and
hlt
mov
push
xchg
xor
repnz
inc
mov
pusha
push
inc
rcrl
add
pushf
addr16
test
mov
push
jnp
xacquire
loope
insl
insb
ds
xchg
cmp
sbb
or
es
mov
movsl
mov
jl
vcvtsd2ss
cmp
mov
inc
sti
pop
lahf
adc
xchg
repnz
sbb
push
dec
call
lock
push
test
pop
sub
les
test
sahf
data16
xor
push
imul
in
jne
jnp
fdiv
test
jmp
test
xor
lods
mov
adc
inc
sub
mov
push
jbe
mov
mov
inc
shll
dec
test
aaa
roll
push
mov
add
pop
xchg
sahf
out
jg
hlt
add
cs
push
call
pop
jb
mov
int3
mov
sub
popl
cmp
xor
in
fdiv
mov
xlat
scas
iret
sbb
inc
andb
cld
dec
sub
pop
sbb
mov
adc
scas
push
mov
sub
mov
nop
aam
pop
nop
and
xor
cmpl
pop
clc
mov
aam
push
fnstcw
sub
pop
xor
sub
sahf
out
sahf
and
shrb
andb
mov
icebp
sub
mov
pop
lret
push
push
in
in
mov
and
iret
fwait
pop
out
rorb
jb
lret
push
fisttpll
mov
xchg
sbb
mov
sbbl
pop
dec
inc
pop
jbe
mov
std
fimuls
data16
or
sub
mov
mov
mov
ljmp
push
dec
mov
imul
sbb
in
imul
es
addr16
mov
enter
clc
pop
cmp
and
cmp
jo
add
cmp
sbb
push
cs
loopne
inc
test
test
cmp
and
add
mov
cld
cmp
jbe
or
sub
jg
mov
inc
pop
shrb
push
test
inc
fldlg2
shr
fsubrp
cs
xchg
ds
ds
js
fs
xchg
inc
stc
mov
or
pop
ds
out
jg
imull
aas
neg
data16
inc
mov
in
inc
xlat
aas
clc
mov
fdivs
adc
cmp
mov
push
mov
ret
xor
add
cltd
adc
ljmp
pop
xchg
mov
pusha
aam
gs
insb
sub
jg
mov
mov
ss
mov
shr
cmp
mov
or
in
push
cmp
inc
in
insb
scas
mov
pop
stos
aam
cmp
shl
add
add
push
fbld
out
pop
adc
cmp
ljmp
insb
fadds
jb
mov
cwtl
out
cld
jp
pop
mov
mov
pushf
mov
push
cld
mov
push
movsl
mov
test
bound
jbe
loop,pn
ljmp
push
or
cld
popa
mov
sbb
mov
cmc
xchg
mov
aaa
jbe
push
pop
add
aam
inc
mov
or
and
data16
cmp
sbb
and
ds
jl
inc
and
push
icebp
add
or
mov
pop
sub
outsl
push
aam
mov
lar
outsb
xchg
pop
push
or
das
or
out
je
mov
adc
shrl
inc
clc
pop
xchg
movsl
cmp
adc
rcr
outsl
fldenv
push
cmp
push
cmp
adcb
or
lret
mov
in
xor
pop
data16
xchg
hlt
fs
hlt
pop
adc
rclb
loope
jmp
sbb
adc
fcomps
sbb
push
nop
inc
shll
sbb
cmp
cmp
mov
push
shr
insl
dec
neg
dec
push
xor
packuswb
leave
pop
xchg
adc
push
iret
push
cmp
inc
popa
mulb
xchg
bound
adc
jno
testl
push
in
pop
sbb
dec
bnd
fisttpll
hlt
pop
insb
xchg
mov
adc
fidivrs
adc
jo
sbb
gs
out
out
cld
cmp
addr16
push
pop
into
or
push
in
sbb
in
mov
testl
fdivl
pop
js
dec
out
popa
xchg
movsl
dec
inc
testb
adc
sub
gs
cwtl
jmp
push
cmpsb
icebp
jns
lods
pushaw
scas
stos
ret
jb
cltd
rorl
inc
ret
mov
and
je
add
stc
aaa
test
sbb
scas
pop
inc
mov
lcall
mov
fisubs
push
adc
add
pop
xchg
test
stc
fsubrs
mov
pop
imul
mov
cmpsb
and
dec
mov
jle
lfs
pop
loopne
xchg
cwtl
movsb
in
pushf
xchg
jmp
cmpsl
out
fsubrs
inc
push
mov
insb
pop
rorb
adc
pop
cli
shll
jl
orb
cmp
in
lcall
arpl
pushf
data16
pop
pop
cmpsb
mov
data16
mov
lret
jl
sub
xchg
clc
iret
mov
jo
push
fcompl
cmp
in
adc
insb
rolb
mov
add
mov
rolb
jno
xchg
sbb
fdivrp
mov
mov
mov
dec
pop
mov
outsl
or
dec
pop
mov
movsb
cltd
cltd
mov
or
or
pushf
movsb
repz
xchg
push
aaa
or
push
out
scas
das
clc
xchg
pop
pop
ljmp
mov
pop
mov
mov
arpl
sub
movsb
pop
ficoml
xor
sub
sub
je
push
sub
shrl
cmc
test
push
ret
xchg
push
sub
enter
cltd
aam
in
and
cmp
xchg
js
std
xchg
data16
or
and
mov
adc
int3
cmp
adc
jmp
std
or
dec
in
adc
inc
adc
push
cli
sbb
jnp
pop
cwtl
movsb
call
jbe
xabort
adc
lahf
enter
call
inc
scas
shll
jb
icebp
icebp
cmpsl
rclb
les
xor
add
mov
movsl
fsubs
dec
adc
cmp
and
add
push
inc
aaa
mov
and
add
dec
sub
lods
or
imul
das
or
stc
lods
mov
mov
dec
loope
arpl
push
js
dec
out
mov
sub
rorb
cmp
add
pop
mov
and
in
adc
or
out
xchg
test
pop
scas
sub
jmp
push
xchg
hlt
xchg
push
mov
jp
scas
inc
ret
pusha
xor
in
inc
sarl
rcll
jo
jp
push
push
or
pushf
stos
push
addl
cmp
shlb
push
fwait
adc
push
mov
mulb
pop
insb
les
inc
lods
xchg
and
sbb
inc
adc
call
xor
xor
js
shr
mov
clc
mov
mov
mov
hlt
cmp
push
in
sarb
cmpsb
lock
add
out
push
clc
pop
pop
notl
mov
xchg
lods
fldcw
fs
xchg
xchg
sbb
mov
movsb
icebp
jle
mov
mov
push
fildl
jnp
jne
xrelease
je
adc
push
cmpsb
mov
out
fidivrs
add
sahf
ljmp
sub
frstor
inc
cltd
mov
cmp
rol
push
cli
mov
mov
loope
stos
lret
inc
xchg
call
jo
mov
inc
mov
cs
lods
sti
push
sub
lods
in
dec
stos
movl
nop
inc
lahf
cld
dec
test
cwtl
in
insb
mov
in
adc
add
xor
test
pop
and
insb
subl
push
inc
repnz
pusha
les
pop
roll
jo
ret
je
lods
lret
fs
mov
lcall
mov
mov
fwait
in
add
pop
shlb
dec
dec
dec
loop
jbe
out
xchg
jmp
scas
add
fwait
stos
adc
fidivl
mov
test
cs
sbb
pop
int3
adc
andb
cld
lea
insb
xchg
out
mov
pushf
push
hlt
adc
lods
pop
pop
mov
adc
push
xor
outsb
jbe,pt
inc
imul
ljmp
iret
jbe
inc
fisttpl
fs
lea
or
xchg
sub
ret
xchg
push
cwtl
pop
jbe
mov
hlt
cmc
loopne
mov
xchg
out
fimuls
out
pop
pop
ret
inc
or
and
lock
dec
bound
clc
ret
mov
jne
inc
jbe
lea
hlt
dec
subl
cs
mov
aad
push
or
inc
cmpsl
std
daa
and
push
jge
push
inc
and
roll
xor
scas
js
pushf
out
test
nop
addr16
add
inc
arpl
lds
xchg
loopne
mov
jl
jle
xchg
outsb
out
mov
jp
mov
ljmp
scas
std
and
sub
add
pop
xchg
testl
adc
in
test
add
push
sbb
dec
imul
xchg
push
pop
xorl
push
xchg
jbe
fbstp
loopne
xor
cld
and
add
xor
push
loop
ret
xchg
xchg
clc
mov
or
push
iret
adc
or
and
in
and
int3
pop
in
mov
mov
in
lret
pop
mov
loopne
mov
adc
shrl
jo
cmc
mov
pop
arpl
out
jns
ja
sahf
xchg
stos
adc
xchg
pop
mov
inc
stos
cmp
inc
add
in
mov
push
sub
cmc
cmp
addr16
sbb
xchg
aam
outsl
push
ret
lds
cld
mov
mov
cli
sub
mov
xchg
fsubrs
hlt
push
imul
aas
sbb
hlt
push
pop
xchg
mov
push
or
sti
mov
push
pop
ret
sub
movsl
jp
mov
mov
add
nop
pop
or
sbb
mov
hlt
in
or
loopne
add
jmp
sub
popa
or
push
ret
out
and
or
imul
icebp
adc
rcll
cmp
push
rorb
dec
inc
aaa
push
sahf
call
mov
xchg
out
and
pop
ret
test
or
mov
or
in
mov
sbb
jp,pt
and
cmpsl
pop
inc
push
cmp
push
mov
pop
mov
add
push
dec
loopne
outsb
and
in
pusha
hlt
pop
jp
dec
cli
dec
shlb
fs
je
xor
push
mov
sarb
lods
cmp
ja
sub
in
test
xchg
add
fsubrs
push
bound
add
mov
add
pop
add
mov
sbbl
ret
inc
fistpll
adc
ret
daa
lcall
dec
or
adc
std
sahf
push
shr
jnp
test
jnp
mov
call
xchg
jle
bound
movsl
or
cmpsb
mov
xor
inc
dec
push
mov
dec
loopne
sahf
nop
cwtl
pop
jno
xchg
add
mov
lods
jb
cmp
xor
or
hlt
scas
sub
pop
ret
xchg
push
mov
inc
mov
faddl
mov
mov
fdivs
stos
or
out
cltd
repnz
in
test
mov
or
mov
mov
lock
cld
lahf
pop
sarb
lcall
out
or
les
push
js
je
cs
xor
sbb
ss
mov
addr16
pop
adc
jle
fs
mov
push
dec
xchg
imul
inc
jno
fcmovbe
imul
and
fs
ret
push
xor
push
imul
push
in
mov
daa
test
bound
test
jb
sub
subb
mov
lret
nop
mov
hlt
or
cmpsb
into
lea
cltd
in
lea
fldt
cmp
sbb
scas
dec
es
xor
and
and
loopne
sahf
cltd
push
loopne
add
xor
inc
xchg
pop
outsb
mov
test
adc
and
sub
cwtl
push
call
lock
and
xor
xchg
push
cmp
rorl
mov
cmc
bound
mov
push
cmp
call
jp
int3
xlat
je
dec
add
jnp
xchg
mov
mov
add
dec
lds
push
dec
mov
xchg
cmp
fwait
xor
enter
inc
dec
insb
in
pop
push
mov
test
cmp
push
cli
mov
jmp
lds
lock
sub
ret
add
stos
inc
or
fs
int3
inc
shl
xor
shrl
pusha
fdivrp
cmpsb
jbe
lret
jbe
mov
add
add
fidivl
ja
pop
dec
mov
mov
xor
pop
inc
ja
push
push
jnp
into
fsubr
jle
push
enter
push
les
test
push
hlt
xchg
repnz
dec
cmpsl
or
dec
subb
xchg
push
push
mov
shlb
jo
into
adc
cwtl
sub
dec
or
push
xor
ficompl
add
xchg
lock
lahf
loop
and
sbb
icebp
repnz
outsl
fcompl
lock
pop
mov
cmpsl
mov
mov
sbb
inc
mul
push
in
addr16
add
clc
lds
scas
nop
aam
movsb
jmp
js
sarb
xchg
mov
push
sbb
sar
cli
js
loopne
insb
aad
pushf
stos
push
mov
test
loopne
stos
mov
cld
sub
loop
shrb
or
stos
in
pop
test
ss
inc
and
or
push
testl
enter
cmpsb
repnz
test
cltd
movsl
push
xchg
pop
xchg
mov
inc
nop
shll
arpl
arpl
stos
lahf
in
cli
lock
clc
inc
jno
sub
arpl
inc
pusha
rclb
outsb
enter
fcmovne
inc
outsb
jge
adc
dec
fldl
out
push
rorl
sbb
push
jl
push
cmp
mov
cltd
mov
xchg
mov
mov
sub
mov
dec
lahf
sti
mov
xchg
es
das
jle,pt
jo
mov
jl
test
jb
stc
lea
hlt
jb
pop
push
jl
jbe
cmp
jns
fwait
and
xchg
or
out
cmp
push
mov
jmp
movsl
mov
je
push
mov
or
stc
nop
or
iret
xor
pop
int
mov
push
rorb
pop
orb
test
xorl
sbb
stos
repnz
aaa
inc
push
or
es
sbb
mov
inc
or
mov
dec
rclb
aas
mov
seto
fisubs
ffreep
outsb
inc
aaa
inc
insl
aam
dec
lret
and
out
sub
pop
insb
xlat
inc
test
loopne
movsb
dec
loopne
mov
fildl
pop
div
jmp
push
lcall
shl
dec
or
out
hlt
fsubrp
sub
inc
frstpm(287
repnz
bound
in
mov
test
add
and
sub
mov
sub
lahf
fs
push
fidivrl
push
mov
nop
push
aaa
adc
in
out
repnz
mov
add
lahf
xor
and
das
lcall
cli
mov
inc
ret
mov
ljmp
xchg
sub
data16
dec
push
jb
inc
filds
pop
dec
pusha
sub
sbbb
pop
xlat
incb
cmp
pop
cmc
ret
mov
mov
push
shlb
and
push
mov
sub
cli
ficompl
cmpsl
mov
sti
shrl
and
pop
add
dec
stos
pop
cmpsb
inc
test
dec
inc
out
dec
mov
fisubl
inc
dec
shlb
or
das
daa
dec
push
in
sub
fistl
movsl
mov
or
xchg
cmp
inc
stos
jp
out
and
adc
sub
ss
mov
shrb
insl
push
xchg
mov
mov
popa
loop
dec
sbb
mov
cli
jo
push
out
sahf
mov
pusha
push
mov
rcr
pop
lock
dec
jl,pt
popa
sub
popw
in
or
out
add
rcrl
bound
aas
mov
bound
xchg
shrb
jp
pop
mov
test
fidivrs
out
pop
inc
in
shl
rclb
inc
in
push
and
xor
std
fs
and
test
sub
cltd
and
das
or
movsl
xchg
mov
cmp
pop
into
xchg
xor
mov
push
push
push
dec
mov
jmp
mov
sbb
loop
in
mov
fbstp
daa
out
jecxz
in
adc
filds
loopne
lea
clc
mov
sbb
rorb
sbb
fldl
push
addr16
dec
out
push
jnp
in
int3
out
loopne
inc
push
sbb
push
cltd
push
arpl
cmpsb
lret
hlt
stc
pop
or
out
push
mov
icebp
ffree
push
rep
mov
pop
imul
stc
aas
mov
mov
inc
and
rorl
adc
sub
ret
lcall
andl
divb
cmpsl
js
push
pop
insl
imull
and
loop
repnz
inc
add
mov
and
dec
adc
jmp
out
mov
cmp
mov
xchg
insb
pop
jge
les
sbb
xchg
dec
fmuls
pop
add
lods
push
xchg
pop
cmp
or
mov
add
jb
imul
and
jle
les
mov
pop
rolb
rcll
outsb
sub
and
sbb
pop
test
loopne
cs
sub
fiaddl
inc
dec
enter
imul
push
es
sahf
cmpsb
test
ret
xchg
mov
mov
hlt
mov
inc
adc
add
enter
and
push
xor
in
pushf
std
mov
mov
shll
jb
int3
and
sub
mov
sub
push
pop
adc
cld
test
shr
repnz
je
ret
lods
movsb
repz
aam
sub
cmp
testb
mov
clc
inc
or
cmp
out
cmp
or
mov
inc
sarl
dec
mov
xchg
je
xchg
aam
mov
ljmp
adc
rolb
adc
adc
mov
jno
or
mov
pop
loopne
xchg
popf
test
hlt
dec
or
test
pop
stos
and
hlt
in
scas
insl
bnd
lds
js
cwtl
imul
and
mov
mov
hlt
das
mov
jbe
das
imul
adc
daa
bnd
and
or
cwtl
dec
test
shlb
clc
inc
movsl
dec
jp
lods
lds
pop
mov
cmp
dec
pusha
popf
dec
push
sbb
xor
sbb
out
in
sbb
push
in
bound
inc
push
mov
lret
xchg
shlb
lock
cmp
dec
lret
pushf
lods
adc
mov
mov
shlb
fimull
popf
add
push
jae
movsb
push
stos
mov
xorl
pop
mov
cs
push
aad
jge
scas
push
dec
scas
loopne
aas
sahf
dec
int3
dec
subb
xor
lods
push
bound
push
inc
cmp
mov
in
pop
jg
push
sub
xor
hlt
pusha
pop
push
sbb
jmp
gs
repnz
test
repnz
test
push
cld
lds
outsb
dec
scas
movsb
xor
and
gs
dec
jge
cld
inc
int3
mov
lret
loop
xchg
inc
adc
cld
out
xor
sub
cmp
ljmp
lcall
dec
es
cmp
movsl
in
out
rcl
push
add
scas
pop
sbb
push
fsubr
shll
or
cwtl
dec
sarb
aaa
sbb
mov
jp
es
out
mov
sub
cld
out
cmpsb
mov
or
fmuls
mov
push
test
rolb
xchg
xchg
bound
fwait
xor
je
mov
sbb
movsl
scas
iret
jecxz
pusha
fadd
fldl
jns
xor
sbb
cld
or
in
adc
adc
lock
rcl
push
sbb
mov
push
xor
push
adc
dec
adc
mov
sbbl
hlt
pop
mov
add
xor
ljmp
jno
roll
sbb
lods
ja
push
adc
xor
mov
push
pop
sahf
mov
or
mov
mov
pop
pop
jbe
aaa
cli
jb
and
push
push
ds
and
push
push
mov
jo
std
jbe
enter
shlb
repnz
add
aam
shll
and
adc
aas
xor
bound
lock
das
xchg
adc
out
mov
ficoml
cmp
sub
push
pop
inc
fimull
popa
rcrl
or
jmp
sbb
in
push
out
lock
or
pop
xchg
cmp
ds
out
iret
sbb
or
jnp
mov
xchg
jp
pop
xor
out
xchg
inc
mov
xor
movsb
jne
xchg
ljmp
cpuid
mov
mov
mov
cwtl
adc
cmp
je
ds
les
scas
cmp
outsl
xlat
push
in
insb
pop
scas
fs
inc
push
xchg
lods
movsb
mov
push
enter
sbb
fcoms
adc
insb
push
mov
pop
lock
stos
push
repnz
gs
xlat
fdivs
arpl
sbb
aad
dec
cmovo
mov
andl
sahf
mov
push
sbb
cs
popa
pop
jne
push
mov
or
popa
pop
mov
fs
dec
mov
xor
xor
mov
xchg
add
pop
jp
jle
sbb
out
mov
xor
sbb
sub
arpl
pushf
stc
push
lcall
push
subb
cmp
sti
xorb
mov
addl
scas
pop
mov
sub
imul
push
or
outsl
fdiv
test
or
xchg
pop
mov
push
xor
in
dec
add
xor
and
ret
inc
dec
inc
xor
pop
inc
fs
push
dec
pop
push
cmpb
dec
sti
jae
int3
mov
mov
repnz
pop
cld
inc
orb
inc
aam
shrb
mov
dec
hlt
add
ds
arpl
imul
push
dec
decb
xorl
inc
inc
fiaddl
mov
push
addl
mov
mov
sub
dec
push
push
mov
inc
pop
mov
ds
push
jmp
aas
lock
push
push
mov
outsb
and
les
add
jp
mov
mov
out
rorb
or
scas
pop
jb
mov
in
sbb
sbb
or
mov
cmp
mov
mov
mov
imul
pop
in
arpl
mov
push
stos
std
cmp
xor
xor
lcall
ret
add
and
hlt
sub
jmp
ficomps
in
adc
pop
hlt
orb
mov
mov
fadd
mov
ret
add
fs
aad
and
out
push
je
mov
dec
xchg
mov
and
lods
add
cmp
xor
mov
push
rclb
xorb
outsl
xchg
paddusw
out
aam
mov
cli
out
xor
cs
lahf
sbb
js
mov
mov
sbb
pop
lods
dec
pop
mov
add
lret
sbb
out
sbb
pop
push
and
add
nop
or
xchg
dec
adc
ficoms
cmp
pop
or
cmp
xchg
sbb
mov
pop
lahf
clc
jmp
sbb
mov
mov
shl
cmpl
inc
insb
fcoml
loope
repnz
add
cmp
push
sub
dec
loopne
mov
mov
inc
and
pop
in
sbb
data16
sbb
push
int3
add
jecxz
pop
fmull
jle
push
push
push
sbb
in
jl
movsl
cmp
insl
les
xor
dec
dec
inc
pop
mov
dec
xor
cli
mov
pop
xchg
sub
mov
imul
sub
inc
outsl
test
cmp
mov
insb
jb
cmp
cld
mov
cmp
jno
jg
cwtl
xor
loop
adc
cmp
bnd
sub
repz
test
inc
jp
les
out
stos
mov
inc
outsl
jl
add
cmp
push
pop
imul
ds
mov
xchg
jge
xchg
outsl
mov
int
ret
inc
ret
dec
sahf
lods
pop
jne
and
mov
push
test
sbb
push
leave
sub
cmc
scas
push
fdivs
pushf
out
arpl
sbb
fiaddl
pop
lods
orb
loopne
mov
push
cmp
mov
lods
movb
inc
mov
pop
push
push
push
push
aaa
jbe
sub
push
lahf
mov
xchg
or
mov
push
push
inc
or
sub
cltd
testb
mov
pop
stc
rorb
fiaddl
sub
xor
test
jp
xchg
pop
mov
incl
add
mov
pop
pop
dec
sub
stos
call
inc
xor
scas
or
test
lea
shrb
push
pop
loope
add
clc
out
jae
cmpsl
jbe
out
jp
mov
or
xor
test
lret
cwtl
hlt
repnz
or
inc
scas
imul
and
data16
fwait
jp
ljmp
pushf
int3
in
jg
sub
int
fwait
xor
test
lods
jge
aaa
mov
dec
adc
sub
push
and
data16
push
mov
push
jp
jb
jb
pushf
int3
add
sub
push
jne
mov
mov
dec
addr16
adc
nop
mov
nop
mov
sahf
sub
cmp
inc
std
pop
call
jle
cmp
fnsave
and
mov
inc
outsb
repz
inc
adcb
xchg
jp
mov
pop
cs
nop
daa
js
inc
cmc
aaa
popa
icebp
scas
out
adc
cmc
adc
lahf
fwait
shlb
aaa
push
jmp
adc
call
adc
inc
mov
test
pop
cmp
fstps
leave
jb
mov
imul
lcall
pop
xor
mov
sub
cmp
add
or
daa
ja
or
nop
fwait
xchg
hlt
out
outsb
xchg
in
pop
scas
stos
push
popa
adc
sti
notl
repnz
xchg
add
sub
xchg
rorb
pop
sarb
mov
mov
cmp
jne
push
loopne
repnz
push
jp
xchg
lods
aad
rcr
xchg
pop
ficoms
fs
jp
and
inc
sub
lahf
or
mov
xor
xchg
in
test
cli
mov
test
sahf
ucomiss
stos
xchg
leave
mov
nop
mov
into
pop
xchg
pop
cmp
in
scas
rol
pop
xor
pushf
lea
jb
ljmp
rcr
inc
mov
lods
addr16
nop
daa
scas
js
divl
sbbb
fisubrs
jnp
int
mov
in
xlat
dec
add
push
and
jp
jbe
fwait
cmp
mov
pop
mov
adc
cmp
xor
dec
cmpsb
jo
andb
jle
mov
mov
or
repz
loope
adc
rcll
sbb
sahf
push
in
lds
sub
imul
insb
adc
mov
pop
jp
or
add
mov
mov
icebp
nop
nop
stc
xchg
and
sbb
bnd
xor
mov
sbb
or
int3
inc
je
imulb
jo
cmpsb
je
xor
add
push
jae
jae
adc
lods
pop
xchg
pop
sarb
mov
out
and
scas
pop
sub
jb
je
dec
outsl
mov
push
mov
jge
fistps
data16
test
idivb
mov
sarl
dec
es
xlat
out
push
xor
icebp
decl
rcrl
mov
dec
jp
jae
in
pop
jae
mov
dec
das
mov
inc
ficomps
push
sbb
in
fdivs
xchg
pop
popa
lea
lock
repnz
mov
je
xchg
int
loop
jne
pop
push
pop
adc
insl
cmpsl
dec
jo
imul
out
jge
notb
push
cmp
adc
mov
cmp
adc
ja
cmpsl
jb
insl
into
addr16
inc
test
and
push
lret
jb
das
dec
data16
sahf
pushf
dec
xchg
mov
fldt
xchg
mov
loop
je
test
nop
lods
push
in
jmp
int3
or
fidivrs
push
jmp
cmp
xor
lret
hlt
mov
xchg
aam
xchg
hlt
and
aas
push
out
push
xor
clc
cld
dec
sbb
in
cs
popa
mov
scas
mov
cmpsb
xchg
push
test
cmpsl
loop
and
jecxz
sbb
jnp
push
lahf
push
cld
das
idivb
and
movsb
jge
rcll
mov
jae
scas
scas
push
and
pop
dec
fstps
add
jp
jp
sub
xchg
push
frstor
push
mov
xchg
mov
pop
mov
fs
mov
xor
repnz
out
sub
pop
sbb
or
push
jl
jnp
into
fstpt
cmp
lcall
xchg
fstpl
sub
xor
cltd
mov
shrl
stos
sbb
push
test
adc
jnp
dec
gs
inc
mov
das
fidivrs
fmull
fcom
scas
stos
scas
push
xchg
add
add
push
jns
cmp
or
pop
xchg
lret
cmp
pop
rorl
push
ljmp
cmp
pop
lods
test
push
nop
dec
pop
repz
add
lea
mov
jae
inc
dec
adc
jnp
repz
pop
and
jp
pop
pushf
push
sub
or
inc
scas
mov
movsl
mov
fcoms
call
popa
push
mov
out
leave
sbb
jb
test
ja
jp
mov
out
jg
fldenv
std
mov
push
cmp
nop
push
mov
int3
and
je
test
cmp
sahf
dec
pop
dec
pop
outsb
movsl
jp
push
push
aaa
xor
push
bound
lods
and
sbb
inc
fdivrp
or
jnp
bound
scas
sub
or
jo
pop
sarb
stos
inc
divl
adc
push
out
insl
xlat
loopne
cmp
pop
push
stos
adc
cs
enter
xchg
imul
push
test
inc
sbb
test
push
jecxz
gs
add
add
push
repnz
aam
loopne
pop
lahf
nop
adc
out
cmc
cmp
xchg
push
fimuls
daa
pop
nop
and
jecxz
or
scas
fcomp
lds
or
xchg
sub
loopne
xor
pop
and
and
xchg
adc
push
mov
mov
adc
adc
pop
xor
pop
nop
add
inc
gs
lods
adc
xor
inc
js
loope
insb
mov
stc
xchg
jp
fs
lret
mov
jno
add
xchg
add
and
inc
xchg
mov
insl
push
jnp
lahf
lods
cmp
and
maskmovq
negl
jnp
les
pop
sahf
sbb
or
jle
pop
pop
ret
clc
mov
xchg
orb
mov
fcomi
mov
mov
loop
nop
jb
dec
sti
arpl
mov
push
dec
loope
test
jp
jmp
lods
out
xchg
ljmp
pop
add
mov
push
inc
out
mov
or
jb
in
mov
xor
pop
ret
jle
in
xchg
mov
iret
adc
in
jge
movsl
call
mov
loop
fistps
push
sbb
lea
gs
fsub
mov
lock
push
test
scas
adc
xchg
cmp
and
call
jnp
inc
movsb
cs
and
ja
xchg
jbe
data16
lods
cmpsb
sahf
mov
pop
and
mov
push
xchg
dec
inc
out
push
fs
mov
push
xchg
ret
daa
jle
push
mov
pop
test
test
mov
jae
mov
adc
int3
sbb
sub
fists
notl
sbb
fstl
andb
sbb
inc
mov
push
jl
sbb
popa
jo
notl
jge
cmp
push
sub
jge
and
mov
rcrl
add
push
sbb
push
out
jae
repnz
cmpsl
sub
xchg
sbb
xchg
adc
sarl
in
mov
jns
pop
clc
notl
daa
pop
jne
mov
addb
pusha
addr16
push
bound
add
mov
aad
xchg
rcrb
sub
enter
mov
out
scas
ja
in
jns
fistpll
inc
mov
popa
int3
adc
adc
adc
mov
pop
incl
cwtl
jmp
xor
cmp
js
stc
inc
hlt
movsl
sti
cmc
add
xor
lds
scas
and
jecxz
dec
negb
paddw
imul
cmpsl
mov
sar
pop
inc
stc
lods
add
mov
cwtl
bnd
jl
gs
insl
mov
add
mov
fdivs
xchg
pop
movsb
cmpsl
mov
imul
cli
gs
clc
scas
push
or
mov
scas
rclb
ds
lods
pop
jnp
cld
xor
fprem1
or
in
push
rolb
call
addr16
cmp
push
mov
in
ja
bnd
and
add
xchg
inc
mov
test
mov
into
jo
push
lds
adc
jb
push
xor
cli
dec
inc
adc
push
sahf
int
xchg
push
push
or
dec
lahf
xlat
lea
imul
add
jp
ss
sbb
inc
or
xchg
fstpl
aaa
jne
outsb
data16
pop
adc
and
push
insb
std
inc
push
outsl
jmp
mov
mov
mov
or
inc
arpl
xorl
dec
je
out
arpl
jecxz
xor
ja
inc
sub
add
cltd
lock
scas
jp
add
adc
shl
xchg
mov
lret
lret
cmpb
xor
and
js
out
sub
dec
jp
flds
push
adc
push
hlt
sbb
lcall
out
xchg
clc
xchg
mov
ljmp
xor
loopne
or
xchg
and
popf
mov
leave
pop
mov
pusha
hlt
xlat
pop
ja
mov
mov
ss
nop
xchg
mov
pop
loop
andb
add
jl
pop
mov
fwait
stc
add
mov
lods
mov
out
push
rcr
out
lret
gs
dec
inc
pop
dec
in
mov
xchg
dec
lcall
push
orb
inc
xor
push
pop
pop
dec
mov
inc
lock
adc
cmp
push
dec
js
cmp
add
jmp
or
sub
sbb
or
push
push
fnsave
pop
into
in
fcompl
push
push
sub
dec
cld
dec
mov
aaa
mov
loop
mov
sbb
into
sahf
out
aam
pop
inc
pushf
pop
xor
add
and
add
test
shlb
or
inc
mov
sub
xor
or
loopne
cs
pop
cwtl
mov
mov
aad
mov
xchg
xor
adc
push
mov
adc
mov
ret
jecxz
add
andl
cmc
inc
cltd
adc
or
mov
imul
push
mov
out
jl
adc
scas
adc
push
xchg
andl
jle
mov
jp
enter
ret
aam
pop
push
dec
addl
xchg
jns
mov
aam
cld
lret
push
push
mov
cwtl
xchg
jle
repnz
cmp
fadds
xchg
stos
pop
adc
push
adc
adc
fdivl
push
mov
fstl
divl
popa
xchg
cmp
in
cmp
mov
mov
mov
sbb
cmp
ds
mov
loope
mov
mov
lods
sub
inc
lods
mov
jbe
sbb
jbe
in
fwait
pop
sub
adc
push
out
scas
in
lods
out
and
sahf
subb
push
pop
sarb
dec
enter
loopne
jle
ret
imul
pop
adc
nop
bound
push
rcrb
pushf
call
addl
inc
push
jge
lret
das
repnz
jo
pushf
and
add
xchg
sub
cwtl
test
bound
push
add
inc
ret
int3
push
sbb
cmpl
loopne
xor
push
and
xor
sub
lcall
test
push
and
hlt
sarb
stos
mov
insb
push
lods
lock
js
test
jbe
mov
mov
sbb
loopne
adc
ret
push
movsb
mov
mov
xlat
mov
lock
cmpb
xlat
cmp
addb
cmp
sub
xorb
xchg
cli
fists
mov
xor
or
out
mov
or
fwait
pop
shlb
cmc
dec
add
sbb
add
xchg
and
idivb
addr16
ljmp
sub
dec
paddd
loope
push
cs
mov
mov
out
cmp
int3
sub
dec
push
push
mov
pop
aam
fistps
mov
mov
mov
ss
mov
fs
mov
cmp
cmpsb
emms
adc
bound
push
aam
ret
and
add
mov
stos
cld
or
lods
sub
mov
ss
bnd
bound
fsubr
shl
mov
inc
push
push
imul
mov
stos
inc
jno
push
pop
cmp
popa
sbb
add
mov
fildll
jo
push
ret
sahf
fcoml
sarb
test
mov
and
aas
push
lcall
in
mov
add
add
xor
mov
push
insb
fmull
cli
jp
push
mov
pop
fsubs
jbe
dec
test
mov
xchg
aaa
sub
push
jo
lret
cmp
sahf
cmp
movsb
mov
std
lods
dec
jb
ret
lods
shlb
sbb
or
push
outsb
add
mov
mov
xchg
sbb
mov
test
ficoml
mov
repnz
in
dec
push
test
jl
sub
inc
test
dec
mov
inc
iret
bound
jo
pop
pop
dec
cmp
pop
repz
jecxz
iret
sbb
pop
int3
jg
test
cmp
lret
sahf
xorb
jl
sub
fimuls
pushl
add
mov
jp
mov
inc
lds
test
xchg
loope
inc
fsubrl
jae
icebp
cmp
or
dec
or
sub
sbb
sub
loope
dec
cmp
dec
jmp
or
loop
inc
ret
pop
fldcw
test
mov
pop
jb
or
cmp
cwtl
daa
add
test
popa
xor
adc
xor
cmpl
sub
fildll
sarb
pop
mov
sub
shr
arpl
loop
xchg
xor
stos
lret
jae
xchg
xchg
pcmpgtw
add
mov
pop
fdivrl
enter
dec
or
adc
xchg
popl
inc
loope
popf
shlb
rcl
pop
insl
push
cmp
hlt
aam
ljmp
cmp
aam
daa
ret
out
or
mov
or
inc
push
mov
mov
mov
fs
stc
ja
out
jmp
mov
mov
in
insb
push
nop
cmp
clc
loop
inc
pop
pop
lea
fdivrl
mov
push
outsl
stos
faddl
test
mov
or
sub
push
loopne
stc
mov
lret
cltd
repnz
pop
cmp
dec
fimuls
xlat
hlt
push
xor
or
fwait
sbb
pop
sbb
xchg
add
imul
ret
add
and
adc
sbb
cld
loop
fmuls
inc
and
lock
xor
mov
lock
cmp
ss
fbld
jns
mov
into
out
add
popa
fwait
dec
sub
sbb
lods
push
bound
in
inc
cmpsb
ret
mov
lds
jb
inc
into
sub
jns
imul
mov
stos
cmp
mov
bound
cltd
mov
or
daa
jo
sahf
mov
xchg
aas
add
jmp
dec
xchg
cmp
fsubr
in
ficompl
loopne
loopne
dec
outsb
stos
mov
lds
add
add
cmp
fdecstp
or
popf
imul
sbb
xchg
sbb
dec
inc
in
cmpsb
mov
jg
pop
imull
mov
sbb
je
daa
cli
addr16
dec
cmp
stos
fnsave
push
sbb
or
scas
in
pop
mov
sbb
cltd
ds
xchg
push
adc
add
and
push
xor
and
inc
inc
jp
dec
jb
push
adcb
scas
fmull
cmp
aas
sarb
mov
test
ret
rcll
pop
jb
fadds
divb
and
scas
mov
into
icebp
pushf
rcr
in
jle
or
jnp
add
cmp
mov
inc
cmp
jg
in
repz
inc
add
mov
mov
pop
cmp
mov
dec
rorl
fs
loop
inc
jbe
in
dec
data16
pop
hlt
sub
mov
pop
mov
ljmp
or
mov
cmp
in
cs
xchg
xor
mov
ds
ret
adc
dec
inc
cs
mov
push
imul
ror
sub
inc
push
xchg
and
pop
popf
pusha
js
sbb
jns
xor
and
push
fldln2
pop
mov
dec
ret
pop
push
aas
cmp
xchg
les
pop
arpl
jns
jl
lods
test
bound
cwtl
inc
pusha
push
jp
repnz
fs
xor
pusha
push
fcomps
loop
xchg
mov
lods
mov
inc
shlb
sbbl
ds
lcall
sub
out
fdiv
push
in
cmp
jp
xor
hlt
aaa
lahf
and
out
aaa
dec
xor
dec
xlat
dec
imul
dec
mov
cmc
pop
mov
adc
push
mov
ret
push
je
mov
cmp
aas
xchg
mov
pop
iret
ficomps
je
aad
cmpsl
inc
test
or
mov
cmp
or
nop
cmp
pop
pushf
pop
or
mov
push
rclb
sub
je
cmp
add
sahf
test
xor
pop
inc
aas
mov
mov
mov
stc
inc
sahf
pop
pop
sbbl
enter
cmp
or
setle
cmp
adc
std
cli
dec
add
call
inc
push
hlt
test
hlt
fs
xor
or
pop
mov
xlat
dec
mov
jmp
dec
lock
push
and
cmpsb
adc
hlt
add
mov
insb
pop
adc
in
push
inc
rcrb
and
add
and
enter
lahf
cmp
adc
rorb
mov
pop
mov
sub
or
pushf
inc
sub
daa
xor
cs
in
js
cwtl
mov
adc
rclb
ds
icebp
test
in
fisubl
jb
mov
fsubrs
push
cmp
mov
or
push
repnz
inc
pop
sti
repnz
sub
xor
bnd
xor
push
clc
fstps
fcomps
xchg
and
push
dec
xlat
lods
adc
mov
lock
mov
test
push
mov
jg
loop
cld
sbb
jne
repnz
or
lods
mov
ja
in
mov
jbe
pop
ds
or
or
outsb
mov
sub
jl
cli
fmul
arpl
pop
mov
or
push
sbb
loope
mov
mov
sub
iret
cmp
add
mov
icebp
add
mov
sub
jg
jp
rcrb
dec
xchg
pop
xor
dec
mov
jmp
cmp
dec
icebp
in
dec
mov
data16
out
push
inc
sahf
mov
mov
ja
fimull
dec
in
ficoms
rorb
push
mov
xchg
inc
subl
icebp
je
xchg
jb
arpl
mov
mov
mov
outsl
sub
mov
pop
in
pushf
pop
jl
cmp
out
push
fidivs
sbb
mov
outsb
push
xchg
inc
das
nop
xchg
xchg
js
sahf
adc
in
pop
jle
std
adc
leave
ja
stos
popl
dec
mov
dec
je
fsubrp
mov
cmp
lods
mov
inc
pusha
inc
cs
push
inc
fs
add
sub
mov
iret
jns
mov
inc
jl
adc
mov
test
mov
mov
mov
in
nop
gs
hlt
push
jle
push
scas
adc
xor
and
inc
inc
add
nop
loopne
and
xchg
xchg
cmp
scas
shll
movsb
jbe
pop
frstor
sbb
int
mov
shl
jp
and
sahf
push
cmp
inc
imul
cmpsl
push
sti
mov
cwtl
insl
rol
popa
jmp
jne
lea
lods
cmp
push
push
push
jecxz
sbb
shrl
jp
pop
dec
pop
loope
sbb
push
testb
cmpl
inc
mov
push
dec
xchg
jp
fisubs
data16
jp
and
dec
ret
sbb
mov
nop
shl
dec
and
out
mov
jl
getsec
jne
gs
cmp
push
pop
adc
jbe
mov
mov
sti
dec
and
mov
pop
xchg
nop
sarb
ffree
fcompl
scas
cmp
or
cmp
cmc
jnp
inc
imul
pop
jns
xor
push
movsl
xchg
dec
mov
xchg
dec
jne
mov
scas
pop
ljmp
outsl
movsl
xor
xor
and
push
jge
movsb
movsl
hlt
ret
mov
jle
push
pushf
jns
cmc
or
dec
pop
in
jle
out
ja
scas
movsl
call
cwtl
pop
xor
mov
arpl
scas
adc
imul
sahf
push
rclb
add
loopne
push
stc
jle
int
call
xchg
scas
sbb
pop
adc
jne
lret
push
mov
jp
andl
es
adc
xchg
pop
scas
jnp
lods
jb
cmp
in
push
cli
mov
or
fidivl
push
cltd
cltd
dec
inc
test
jbe
ja
inc
scas
add
cmpsl
jg
mulb
pop
pop
sub
mov
mov
jp
icebp
adc
mulb
push
and
and
jo
lcall
sub
inc
mov
aas
lods
mov
movsl
jne
sub
in
pop
and
ficomps
adc
ja
mov
sbb
xor
xchg
in
ljmp
lock
shrb
leave
cmpsl
lret
cmc
lods
or
sti
jle
imul
jo
ret
jb
push
jne
rolb
jl
sub
push
cmc
pop
xor
xchg
push
mov
xchg
scas
data16
mov
jp
lock
int
bswap
adc
je
mov
test
mov
mov
sub
jb
sbb
imulb
test
pop
xchg
sub
out
subb
xchg
sbb
mov
jb
jo
jp
jle,pn
clc
jmp
push
call
lahf
pop
jge
cmp
or
dec
jo
dec
out
fdivs
cmp
xchg
adc
xchg
cmpsl
mov
and
adc
push
add
int3
aas
nop
lcall
popf
scas
das
js
xor
test
xchg
addb
cmp
idivl
test
stos
inc
call
arpl
pop
push
ja
xor
lcall
fidivrs
sub
pushf
scas
sub
dec
int
jbe
ja
jg
cs
js
mov
test
int
std
inc
inc
mov
nop
sub
aaa
mov
scas
adc
insl
jge
jg
jp
lcall
push
push
repz
jnp
in
jl
and
cmp
cmpsb
xchg
mov
jge
mov
xchg
mov
divb
jae
cmp
jg
repz
out
fimuls
sbb
jne
cmpsb
xor
mov
stos
lret
sbb
pop
pop
mov
sub
push
jmp
sub
scas
push
scas
call
stos
mov
xchg
push
adc
push
ror
dec
dec
inc
xlat
inc
fcomps
push
icebp
cmp
cmp
sub
inc
jecxz
lock
push
adc
xorb
lea
aam
mov
mov
lods
daa
dec
adc
in
nop
inc
movsl
dec
cwtl
mov
push
dec
hlt
leave
adc
xlat
push
rolb
popf
int
movsb
add
sub
push
add
outsl
mov
aad
popa
pop
fucomip
and
fwait
leave
lock
sub
mov
loope
es
mov
push
aam
dec
fidivl
nop
loopne
loop
out
ret
divb
sbb
dec
push
mov
out
mov
jmp
mov
xchg
flds
leave
jae
fisubl
sbb
cli
in
pop
call
xchg
pop
iret
pop
pop
dec
sbbl
test
add
je
inc
jp
mov
test
scas
pop
push
fs
mov
xor
movl
repz
mov
lcall
or
mov
cmp
pop
and
inc
adc
mulb
jbe
mov
in
push
test
push
cmp
repz
cld
pop
cmp
dec
lods
mov
push
jo
cmp
lret
movb
fbld
decb
pushf
rorl
push
sub
fmull
bound
clc
in
icebp
or
out
rorb
jb
push
cmpsl
cwtl
add
andl
scas
mov
add
push
movl
inc
pop
out
subb
push
xchg
push
repnz
push
mov
addl
bound
adc
out
es
cmp
xor
rcl
and
push
sbb
into
cs
cmp
mov
xlat
outsb
xchg
mov
jbe
mov
out
mov
cltd
push
xchg
pop
push
testb
daa
adcb
rolb
repnz
arpl
aas
push
js
mov
dec
push
sti
push
adc
in
ljmp
movsb
jbe
xor
jl
stos
ds
loopne
push
fimuls
xlat
xchg
mov
ljmp
out
push
push
dec
pop
jb
out
add
inc
lret
out
into
scas
repz
lret
and
shr
push
and
enter
or
in
inc
bound
mov
dec
sub
inc
adc
adc
int
jp
dec
fistpll
shrl
mov
lods
jb
pop
push
pushf
jl
push
jo
and
sahf
imul
inc
jbe
mov
mov
repz
out
mov
inc
jp
out
cli
cld
nop
in
sub
and
jo
lods
stos
pushw
sbbb
jnp
mov
dec
mov
lods
mov
into
iret
mov
cmp
cmp
sub
jns
or
pop
sahf
push
test
jle
jb
jp
mov
jae
mov
int
mov
dec
fildll
ljmp
leave
aaa
sbb
push
add
inc
inc
xchg
clc
inc
in
mov
jns
mov
or
add
insl
lret
pop
inc
xchg
or
addr16
and
cs
sub
loopne
rcrl
imul
jge
xchg
iret
add
sahf
or
mov
lea
insb
fsub
mov
xchg
insb
mov
pop
xor
xchg
insl
xchg
lds
jae
push
hlt
enter
and
sub
xor
pop
test
ret
mov
jp
shrl
mov
xchg
test
ret
jne
fdivl
jecxz
out
pop
pop
aam
cli
push
ljmp
jne
sbb
lahf
cmp
xor
xor
fdivp
sbb
shrl
gs
orb
and
int3
out
add
in
ficoms
push
cmc
shlb
std
in
pop
push
adc
push
mov
test
test
aam
jl
jae
mov
lahf
cmp
ss
mov
dec
xchg
mov
lock
mov
mov
mov
push
or
or
pop
add
loop
in
lods
xor
lods
frstor
lods
cmp
inc
lcall
ret
stc
xchg
pushf
or
xor
push
mov
and
test
pcmpeqw
dec
inc
call
out
inc
push
sahf
mov
mov
mov
xchg
add
pop
insl
push
incl
dec
and
lock
fadd
pop
add
ficomps
mov
push
pop
cmp
aam
xor
mov
xor
push
mov
fwait
out
addr16
adc
xchg
andb
mov
push
add
dec
out
push
rclb
addr16
test
sbb
jo
mov
popf
add
flds
xchg
fiadds
data16
pop
mov
xchg
rcll
je
out
mov
aaa
mov
push
mov
xor
xor
mov
dec
addr16
dec
push
in
in
push
ret
inc
mov
pop
xor
loopne
int
les
mov
pop
shl
jmp
or
pop
imul
or
test
or
pop
rcl
cmp
ss
pop
in
xorl
std
out
inc
push
xchg
push
popf
sahf
cmpsb
popa
inc
stos
pop
or
pop
int3
add
fcmove
repz
in
lods
addr16
inc
icebp
mov
jle
enter
popa
lret
push
ljmp
ret
sbb
popf
push
hlt
sti
shlb
mov
sbb
sbb
jle
add
dec
dec
or
inc
and
xchg
loopne
add
imul
jo
rcl
xchg
mov
mov
dec
adc
loop
popf
inc
lea
or
es
fcmovb
lods
dec
xchg
xchg
es
cwtl
and
lahf
xor
adc
and
ljmp
inc
ss
out
icebp
add
inc
dec
mov
outsb
lds
bnd
movsl
jno
cmp
add
pop
lcall
sub
push
repz
out
inc
add
stos
ret
mov
and
cltd
push
test
pop
insb
xchg
xor
xchg
inc
push
add
mov
pop
add
cmpsb
pop
inc
js
leave
inc
hlt
addr16
xchg
pop
sub
inc
mov
test
xor
addb
aaa
addl
push
or
outsb
fwait
inc
xor
mov
pop
jo
insb
aaa
lahf
or
push
ret
mov
inc
and
pop
or
xchg
pop
std
push
mov
enter
add
jmp
daa
xor
adc
rorl
pop
ljmp
in
dec
jecxz
push
and
xor
int3
adc
ret
push
fdivrs
movsb
test
mov
mov
or
push
mov
lret
pop
gs
std
sbb
xchg
arpl
outsl
cmp
mov
in
add
pop
lods
cmc
in
mov
jp
popa
push
aaa
pop
mov
frstor
inc
mov
je
push
push
mov
icebp
pop
fmull
insl
in
sbb
push
or
loope
mov
mov
cmp
ljmp
loop
je
js
lea
dec
imul
xchg
in
outsl
inc
and
aam
mov
pop
in
xor
js
push
push
pop
add
test
mov
aad
push
aaa
add
int3
mov
int3
add
mov
test
lcall
hlt
outsl
cli
push
sub
movsl
jmp
mov
fmull
dec
ljmp
xchg
push
rol
lret
adc
pop
lcall
mov
fadd
cmp
loop
dec
pop
add
ret
mov
fdivs
or
outsl
mov
inc
pavgw
xchg
push
subl
fcmovb
or
ds
inc
fdivrs
inc
add
or
ret
cmp
fiaddl
cmp
mov
repnz
dec
scas
mov
cmpl
add
mov
test
lock
jae
lret
or
fwait
hlt
jg
daa
ds
lcall
adc
or
inc
daa
out
cmp
push
cld
sbb
outsb
push
lods
sub
push
jl
and
into
das
lock
push
ret
jbe
or
inc
xchg
xor
aaa
inc
xchg
sub
inc
scas
pop
ret
or
nop
orb
xchg
push
jg
dec
ja
fstps
xor
imul
cmp
inc
or
lods
xor
jae
in
imul
sub
xchg
repnz
out
popa
xor
rcrb
movsb
int
cmp
dec
mov
leave
push
fwait
push
xchg
mov
cwtl
push
mov
insl
nop
add
cmp
pop
xchg
jge
lock
and
mov
cltd
ljmp
sub
sub
out
mov
imul
push
cmp
cmpsl
push
je
ljmp
movsl
dec
and
roll
mov
aad
push
xchg
push
and
lea
pop
xor
repnz
loope
mov
adcl
inc
ret
icebp
cmpsl
pop
sub
or
adc
jl
sub
push
xchg
addr16
scas
xchg
bound
icebp
jae
push
mov
das
mulb
sbb
scas
in
sbb
pop
sbb
mov
in
adc
icebp
cmp
pop
arpl
addb
mov
jno
pusha
xlat
fsubrl
xor
sub
mov
lahf
and
xor
fdivrl
aaa
adc
dec
dec
push
inc
sub
pop
inc
in
ret
dec
sbbb
jne
xchg
and
mov
push
mov
add
push
mov
je
cmp
aam
sbb
and
jno
xor
imul
jb
lock
inc
enter
pop
lret
mov
in
dec
bound
or
fsubrl
mov
push
fldt
mov
ret
mov
xor
imul
mov
cmp
xor
cmp
fsubrl
filds
fistl
sbb
mov
dec
push
in
add
pop
jp
or
out
outsl
fcomps
cmp
and
jmp
jb
or
mov
bound
push
test
and
fsts
xor
inc
fidivrl
rorb
adc
repnz
jmp
rorl
outsl
lret
xor
add
insb
sub
xor
inc
xor
hlt
inc
adcl
jp
mov
cmp
sub
sbb
xchg
and
roll
repnz
add
sbb
leave
mov
xchg
repz
jmp
addr16
stos
pop
pop
mov
fnstenv
scas
mov
cmpsl
mov
or
and
divl
ja
push
loope
xor
sub
dec
pop
xor
push
push
and
fadds
movsb
mov
xchg
xor
les
loopne
sbb
cmpb
xor
hlt
sub
xchg
mov
das
fnstsw
push
es
cmp
mov
lcall
add
xor
add
or
mov
repz
pop
outsb
xchg
daa
xor
pop
cld
inc
push
ja
and
jo
push
jne
push
pop
mov
inc
lret
pop
sbb
xchg
add
mov
loope
fsubrs
shr
push
sub
ret
cwtl
mov
movsl
push
ss
lret
pop
mov
xchg
xchg
mov
orl
sub
jmp
loopne
js
pop
aam
insl
bound
mov
xchg
xchg
mov
mov
mov
movsb
fdivs
daa
test
inc
xor
into
push
jb
imul
fildl
arpl
incl
mov
js
xchg
push
jne
xor
ret
in
pop
xchg
incl
push
jmp
out
in
inc
or
dec
in
popf
push
mov
jp
mov
stos
pop
add
call
ja
mov
xchg
psadbw
fs
xchg
scas
xchg
dec
lcall
push
inc
sahf
sub
and
movsb
pop
lds
inc
xor
outsl
movsb
popf
enter
mov
mov
adc
sub
fs
rorl
fdivrs
in
sbbl
cmp
pushw
leave
and
test
push
adcb
inc
cwtl
xchg
testl
cmovle
mov
clc
aaa
xchg
inc
pop
icebp
jno
or
sbb
jl
mov
es
out
add
aaa
repnz
cmc
das
xor
jmp
add
mov
push
lret
cmp
sbb
mov
xlat
stc
jecxz
cmp
pop
pushf
fisttpll
ret
dec
or
aam
insb
cwtl
ret
rcl
lret
pop
into
stos
sbb
cmpsb
inc
loop
popa
mov
popf
fs
ss
aam
les
rol
add
das
mull
mov
cmpsl
sub
orl
push
or
outsl
popf
pop
mov
fistl
test
push
jl
xor
pop
fs
xor
pop
sbb
icebp
add
gs
pop
xchg
jmp
repnz
shlb
enter
in
mov
mov
insl
push
sbb
gs
pop
dec
xor
imul
adc
mov
or
and
fsub
cmc
scas
mov
les
mov
rclb
add
pusha
clc
push
rcll
jmp
xor
push
push
sub
push
push
jne
sub
jl
sbb
mov
push
mov
pop
dec
jae
mov
shrl
mov
pop
ds
int3
adc
lret
nop
inc
dec
daa
mov
jl
pop
mov
sbb
xor
mov
outsb
jle
arpl
xor
jnp
jp
adc
lret
gs
bound
mov
sti
aad
pop
outsl
dec
ds
popaw
repz
addr16
cmp
xchg
rorl
mov
sti
jecxz
sbb
xchg
hlt
push
ret
aaa
and
pusha
fsubr
inc
ret
cli
mov
iret
or
xchg
or
cmp
fbstp
mov
mov
loopne
xchg
sbb
add
fimull
xlat
insb
mov
xor
hlt
bound
jl
ret
and
add
or
inc
idivb
movsl
cmpsb
fists
adc
mov
notl
aam
jmp
sub
xchg
and
jmp
add
jge
xchg
inc
pusha
fldenv
xchg
lcall
inc
fwait
push
rcl
gs
mov
mov
mov
shlb
lods
movsb
aad
jno
fidivl
js
dec
cs
push
ljmp
sub
popa
bound
shll
pop
fyl2x
inc
divb
sub
dec
cld
and
sub
mov
rcrl
pop
aam
sub
loop
js
mov
popf
cmp
fisubrl
and
dec
push
add
es
push
dec
xor
mov
clc
push
mov
mov
cmc
out
dec
lcall
lods
xchg
cwtl
mov
xor
into
pusha
xchg
mov
mov
mov
dec
push
loop
in
and
jnp
jp
push
fisubrl
push
mov
fcomps
inc
xor
mov
xchg
push
lcall
loope
notb
negl
mov
jbe
add
ret
ljmp
scas
imul
xlat
gs
xchg
mov
cmp
mov
dec
fimuls
fisubrl
les
jbe
jmp
cmp
mov
fiaddl
int3
lahf
inc
mov
cwtl
push
mov
jbe
mov
mov
push
inc
cmpsl
stos
adc
mov
sub
call
shlb
sahf
mov
add
jl
aad
dec
mov
pushf
clc
mov
jnp
insb
sbb
or
pop
xlat
or
lods
call
cld
jbe
pop
cmp
mov
out
sbbb
mov
cmpb
mov
fs
lahf
lea
cltd
add
mov
outsb
cmp
xchg
xchg
cld
jbe
loop
ds
sahf
dec
and
xchg
add
sbb
sub
dec
add
in
cltd
add
mov
cwtl
in
cmp
ret
and
mov
and
mov
std
mov
fs
sbbb
fdivl
adc
and
test
sbb
xor
clc
inc
js
xor
lods
cld
js
pop
mov
pop
sub
insb
push
dec
pop
and
shlb
pop
outsb
data16
addr16
mov
xchg
add
cltd
test
jbe
cli
dec
adc
jmp
and
push
pop
mov
jl
pop
jb
mov
outsb
mov
nop
je
inc
mov
adc
ret
xor
and
pop
les
bound
ds
lods
mov
mov
insb
mov
jmp
dec
clc
bound
and
mov
cmp
mov
imul
in
aam
fdivr
imul
push
add
mov
xchg
push
jb
jmp
xor
in
fistpll
jo
lret
cwtl
movsl
std
xchg
repnz
jo
jb
mov
sbb
insl
rclb
mov
inc
or
cld
and
pop
popl
mov
jl
mov
add
subl
aas
loopne
inc
xchg
popa
mov
pop
aas
fs
jmp
ds
dec
jno
mov
push
push
dec
lock
add
xchg
lods
push
out
adc
pop
test
pop
repz
clc
outsl
lea
mov
test
aas
and
subl
loopne
push
clc
mov
pusha
repz
sbbb
scas
in
push
test
push
push
mov
and
pop
sub
sub
push
cld
lcall
ss
cmp
popa
cmp
sub
cmp
mov
push
mov
bound
adcb
jl
push
fisubl
shl
mov
mov
xchg
aaa
es
jle
pop
nop
aam
fs
je
add
pop
cs
push
cmp
and
ljmp
inc
imul
loopne
xor
dec
mov
cli
pop
mov
lahf
sub
bound
dec
push
in
cwtl
add
and
mov
push
call
mov
xchg
dec
mov
or
adc
xchg
sub
out
ds
or
je
into
sub
sbb
adcl
pusha
cli
mov
dec
test
cmp
push
fiadds
lahf
and
lahf
cs
andb
cs
adc
in
aad
and
jle
aas
movsb
sarb
mov
and
push
cmpsl
mov
mov
repnz
push
push
xor
cmc
xor
ljmp
sahf
mov
push
mov
sub
and
lret
pop
mov
ret
lea
and
lea
pusha
rorb
add
pop
mov
xor
imul
inc
and
ds
dec
mov
lock
push
out
idivl
jb
gs
loop
push
mov
fcoml
gs
cmpsb
mov
push
cli
mov
push
mov
jecxz
xchg
aad
mov
nop
push
ds
pop
rorl
push
mov
rorb
add
sbb
nop
push
mov
pop
mov
imul
adc
in
loope
subb
cmp
dec
add
neg
push
mov
cld
xor
cs
cmp
pop
outsb
mov
sti
cli
lods
jbe
ror
mov
jb
pop
push
xor
xchg
gs
cmpsb
test
push
sub
pop
in
out
aam
cld
ljmp
std
mov
push
push
cmp
das
xchg
jb
xchg
jp
lods
xchg
mov
or
pop
addr16
fsubr
lret
dec
sub
lock
dec
push
ljmp
sub
mov
into
push
xor
in
hlt
out
push
out
adc
dec
xchg
dec
fdivrs
mov
dec
mov
test
punpckldq
in
sbb
and
sub
mov
push
sub
fiaddl
inc
mov
out
push
push
negb
pop
adcl
push
mov
pop
xor
clc
cmpsl
mov
pop
add
push
adc
int3
jmp
ret
jns
mov
mov
pop
in
mov
mov
scas
and
cli
outsb
xor
mov
push
loopne
rep
fs
stos
pop
sbb
mov
enter
fiadds
push
rclb
mov
push
nop
mov
test
inc
jbe
jle
jmp
lcall
stos
mov
cmp
sbb
fsubrl
pop
sbb
lret
lock
mov
mov
inc
hlt
inc
ds
divps
cmp
cmp
das
mov
cld
xor
and
clc
in
xchg
cmp
pop
and
cmp
sbb
cmp
add
push
shr
jp
rcrl
fcmovne
lcall
or
pop
pop
jp
mov
mov
decb
pop
cmp
mov
data16
jp
pop
pushf
cmp
loope,pt
addr16
or
cmp
push
adc
add
fldl
jmp
fnsave
jmp
push
push
pop
ds
jmp
bound
add
lods
pop
fs
lea
cli
fcoml
push
xchg
add
mov
push
jne
pop
adc
adc
sub
pop
dec
lea
aas
ds
ljmp
loope
inc
fbld
add
lcall
cmpsb
mov
push
int3
pop
ds
in
bound
jbe
xor
xor
aad
xor
xor
push
dec
out
mov
jne
mov
sub
shlb
pop
outsb
data16
addr16
mov
jmp
pop
mov
fs
ljmp
xor
xchg
inc
aam
mov
adc
add
cmpsb
push
push
push
test
std
mov
pop
add
shll
aas
stos
dec
mov
dec
sub
hlt
movb
lahf
loopne
cmp
xor
lret
cltd
add
mov
in
pusha
mov
fs
les
lock
jle
mov
and
mov
jo
mov
push
adc
je
mov
adc
mov
inc
fmuls
hlt
and
xor
das
add
xorb
cmp
mov
mov
mov
push
loopne
ds
in
push
mov
mov
add
xchg
lods
in
dec
sbb
jbe
cli
mov
orl
std
mov
shrb
cltd
cs
movsl
aas
jg
mov
in
shll
add
add
in
stc
cmc
mov
pop
mov
je
mov
xlat
stc
mov
jmp
inc
in
mov
cmp
bound
sahf
dec
in
clc
std
mov
add
sar
movsl
aas
jg
imul
ljmp
xor
push
sar
cmc
inc
add
dec
mov
push
adc
sbb
and
cwtl
mov
jmp
dec
cwtl
bound
ljmp
data16
xor
xor
shlb
leave
shlb
sbb
jbe
movsl
aas
jg
xor
mov
mov
test
push
xlat
in
mov
xchg
mov
sub
mov
cld
adc
cli
jmp
and
mov
inc
and
out
ljmp
jae
cli
sbb
loopne
add
cltd
hlt
pop
mov
mov
add
leave
cmp
mov
insl
je
jbe
push
cmp
arpl
dec
bndldx
fs
ljmp
and
push
les
clc
gs
ljmp
add
nop
xchg
pusha
aas
data16
jo
dec
mov
add
insl
fidivrl
imul
mov
fmuls
or
push
rclb
outsb
incb
rcrb
insb
push
xor
std
jbe
ficompl
push
inc
mov
push
xchg
aam
pushf
out
es
add
pop
pop
push
shlb
in
or
fsubrl
inc
ficompl
mov
push
sbbl
xchg
in
sbb
loop
cwtl
xchg
and
push
movsl
test
mov
sbb
mov
cmp
pop
bound
mov
cmpsb
repnz
mov
add
cmp
sub
mov
ds
out
push
xor
adc
jae
imul
into
xchg
push
sbb
and
jb
jecxz
inc
mov
test
out
jl
popa
xor
push
fisubl
in
in
xchg
inc
sub
aas
dec
mov
aas
test
mov
jmp
mov
add
pop
xorb
imul
pusha
cmpsb
xor
add
sarl
int3
int3
jmp
ds
sub
cli
out
pop
divb
cmp
adcl
xchg
sahf
lock
and
mov
sub
add
js
pop
pop
outsl
mov
add
xor
sbb
push
mov
test
repnz
pop
cmpb
xchg
shll
push
enter
xchg
adc
iret
jl,pt
inc
scas
mov
cmp
pop
inc
imul
mov
sub
out
mov
es
pop
cs
aad
pusha
pop
sbb
add
adc
dec
cmp
loope
and
push
inc
nop
adc
test
ds
mov
mov
loop
mul
and
ficomps
in
mov
outsl
mov
pop
inc
push
mov
or
stc
xorb
xor
mov
push
jne
mov
ds
mov
mov
inc
pop
loop
sub
in
xchg
cmc
popl
nop
and
sub
test
gs
loop
scas
xor
inc
rcrb
mov
clc
push
push
pop
push
out
mov
ret
loop
mov
or
arpl
pusha
inc
pushf
xchg
call
inc
jge
ss
aas
mov
int
aas
lcall
je
mov
inc
repz
repz
pop
cltd
into
sub
out
fisttpl
enter
xor
outsl
or
aad
andl
mov
push
sbb
ss
mov
mov
outsl
or
fadds
cli
sbb
andl
stos
lea
xor
push
xchg
es
mov
imul
stos
mov
jmp
mov
mov
pop
push
xchg
xor
aad
jg
add
or
xor
loopne
aas
lock
jbe
orb
pop
cmpsb
sub
pop
pop
test
cli
stos
out
inc
aad
inc
push
jg
call
sbbl
mov
and
dec
xlat
xor
push
mov
push
icebp
pop
mov
and
jnp
and
movl
mov
sbb
nop
xorb
aam
inc
arpl
cmp
and
addr16
daa
mov
mov
mov
and
test
ds
mov
mov
mov
in
out
xlat
adc
out
popa
mov
aas
jnp
es
jp
rcl
shl
mov
lods
mov
push
xor
mov
push
dec
mov
insb
xchg
rolb
and
sub
ret
adc
das
cmpsb
sbbl
mov
push
cmp
in
adc
mov
xchg
out
cmp
fisttpll
daa
rolb
insb
out
cwtl
fs
push
insb
push
mov
add
push
mov
fdivrp
aaa
or
movsb
int3
push
xlat
mov
xor
xchg
addr16
data16
es
xchg
add
mov
and
stos
push
pop
rcl
in
adc
movsb
mov
jmp
mov
fs
inc
pushfw
addr16
je
push
mov
ds
and
sub
ret
aam
mov
fs
mov
ds
in
pop
mov
les
add
push
pop
faddl
rcrl
mov
out
loope
cmp
pop
lret
pushf
es
andb
bound
jo
pop
jle
test
and
lock
add
mov
dec
and
call
je
mulb
in
sub
js
pop
mov
dec
cli
push
shlb
mov
test
push
push
lock
push
mov
js
imul
test
mov
in
pop
mov
jl
shr
std
mov
hlt
add
xor
fmuls
hlt
mov
mul
cmc
or
or
push
mov
ds
mov
pop
sub
insb
inc
int3
pop
aas
cwtl
in
jle
out
outsl
dec
rcr
pop
addl
push
mov
in
pop
aam
ljmp
inc
xchg
cwtl
cltd
add
scas
in
hlt
push
xlat
aam
in
ret
add
inc
ljmp
je
inc
sub
aas
mov
int3
pop
dec
add
lahf
clc
cli
push
shl
cltd
add
lea
loopne
xchg
cwtl
in
in
lds
in
ljmp
lods
push
test
rorl
jmp
dec
in
ds
pop
push
loopne
es
push
fs
in
mov
or
mov
js
clc
imul
add
jmp
bound
inc
negl
lock
adc
rcl
cwtl
les
out
ljmp
add
test
pop
add
lods
jbe
mov
mov
sahf
pushf
lods
cmp
mov
pop
enter
mov
mov
out
dec
adc
jmp
pusha
adc
push
pushf
add
pop
mov
imul
pop
pop
xor
pop
cmpsb
and
loope
xor
mov
lahf
adc
ljmp
mov
inc
pop
push
lods
add
sub
popl
pop
call
lods
call
cld
pop
fmul
clc
inc
dec
incb
je
mov
lahf
xor
out
inc
cltd
add
rorb
hlt
adc
add
into
dec
pushl
pop
adc
lret
fs
in
push
scas
xlat
mov
mov
popf
lock
xchg
sub
cmpsl
mov
pop
cmp
pop
and
inc
aas
mov
cltd
psubusb
rcr
sub
shrl
cmp
pop
sub
inc
cmp
les
sub
pop
xlat
sbb
stos
lods
sub
mov
jbe
mov
daa
fs
mov
repz
xor
mov
pop
jns
repz
mov
add
and
into
mov
mov
sub
cmp
in
push
in
push
test
push
cs
imul
pop
xor
pusha
daa
stc
dec
push
mov
pop
out
inc
pop
push
repnz
pop
les
pushf
sub
xchg
subl
fs
popa
mov
rcr
adc
push
mov
mov
mov
das
imul
inc
push
in
ret
or
mov
mov
xchg
dec
ret
or
or
lahf
sahf
movsl
mov
lods
and
mov
pop
pop
push
test
aam
mov
je
add
push
lock
scas
cmpb
and
in
fwait
cwtl
push
loope
cld
jmp
mov
add
pop
mov
bound
imul
jmp
xor
push
test
xchg
pop
mov
repnz
pop
out
pusha
cli
shll
sbb
subl
daa
mov
pop
dec
daa
mov
mov
cmp
and
popa
pop
into
push
xor
xor
imul
xor
into
jmp
iret
cmp
rcl
fwait
push
movsb
add
push
pop
lock
ds
cmp
sub
add
rolb
inc
daa
hlt
in
xchg
jmp
mov
add
sub
fidivrs
ss
pop
roll
adc
xchg
in
add
lea
push
je
cmpsb
mov
lods
cmp
insl
psubd
int3
sbb
aaa
push
pop
adc
pop
fstl
nop
aam
adc
je
add
sub
mov
xor
cld
cwtl
mov
stos
xor
xorl
aam
jb
xchg
aas
loope
gs
adcb
or
enter
in
mov
xor
bound
shrl
mov
push
and
popa
sbb
sahf
int3
fadd
and
push
push
call
bound
sub
cli
push
inc
jb
in
or
mov
imul
mov
mov
sarl
xor
jb
dec
inc
sti
pop
pushf
sbb
mov
push
cmp
mov
cmp
inc
cld
push
or
sub
cmpsb
fcompl
mov
pusha
jmp
mov
cmp
fiadds
cltd
aas
jp
in
and
lret
and
test
push
xor
insb
pop
push
je
add
add
cmpsb
dec
add
int
imul
push
jmp
sbbb
in
gs
inc
mov
fsubs
and
pop
repz
arpl
cmp
or
lea
mov
pop
pop
push
pop
in
sbbl
cli
rcl
adc
cwtl
test
push
hlt
add
test
aas
enter
nop
xchg
and
sbb
xorb
mov
xlat
or
mov
sahf
xor
mov
push
pop
test
xlat
insb
mov
imul
hlt
pop
aas
call
mov
push
fcmovb
orb
sbb
ss
loop
push
jl
push
mov
and
jp
ljmp
xor
mov
nop
lods
push
daa
dec
add
and
scas
mov
or
das
jmp
cmp
xchg
xchg
inc
lret
jae
bound
cmpsb
daa
hlt
adc
sub
repz
or
mov
mov
jno
ds
es
fistl
dec
fcoml
faddp
mov
xor
push
adc
in
data16
bound
and
pop
dec
cmp
fmuls
cmp
in
cmp
out
aam
xchg
sub
outsb
mov
add
pop
or
sub
repz
adc
add
enter
fwait
push
push
push
cmp
dec
adc
pop
out
pusha
xlat
pushf
pop
sbb
orb
aas
adc
notb
mov
clc
pop
push
mov
sbb
test
mov
pop
mov
cmp
pop
push
data16
movsl
mov
add
lock
mov
mov
insb
stos
mov
sub
adc
repz
mov
cmp
fiaddl
leave
pslld
jbe
ret
mov
or
mov
mov
inc
lock
test
mov
sbb
jmp
gs
jnp
or
aam
mov
mov
or
loop
xor
inc
mov
pop
push
inc
mov
pop
dec
jmp
sbb
adc
repnz
fs
mov
ds
and
inc
adc
jb
inc
out
loop
imul
adc
inc
cmp
add
movsb
mov
nop
cmp
adc
in
shlb
sahf
out
ret
xchg
jno
les
adc
lock
mov
push
pushf
sarl
pop
xor
icebp
lret
ljmp
xchg
test
sub
js
inc
ds
pop
into
sahf
and
xor
or
xchg
nop
scas
dec
mov
gs
lods
inc
clc
mov
xor
mov
ljmp
xchg
mov
lock
fdivrl
mov
lock
in
lock
fs
pushf
dec
mov
mov
mov
cmp
dec
jle
andb
sub
repnz
sbb
mov
or
push
aas
push
enter
xchg
in
xor
mov
push
push
mov
imul
mov
ss
dec
into
sub
sub
dec
ljmp
fmul
and
pop
ljmp
pop
scas
jmp
test
sbb
push
sbb
hlt
out
inc
out
push
fcmovbe
and
pop
gs
pop
cli
sub
lock
imul
aam
pushf
pop
gs
inc
and
mov
shlb
test
jp
cld
dec
nop
cmp
dec
setae
out
fstpl
or
push
pop
flds
ljmp
imul
ljmp
out
xchg
jae
test
jo
pop
lock
fnstsw
hlt
aam
int3
add
dec
inc
xor
scas
pop
jno
xor
or
sbbb
scas
in
mov
dec
aam
rcl
pop
rolb
lock
xor
lock
out
xor
sub
je
imul
call
pop
mov
sahf
or
mov
mov
aam
mov
sub
lock
add
mov
cmp
pop
jp
or
and
or
mov
or
ljmp
mov
jl
sahf
sbb
orb
fistpll
in
ljmp
add
fwait
js
mov
push
aam
gs
cmp
mov
mov
roll
push
test
mov
xchg
imul
push
ret
push
shl
xchg
jne
cmp
fiaddl
mov
ret
stos
xor
sarb
test
dec
loopne
mov
nop
jbe
pushf
in
mov
push
xlat
in
inc
rorb
cmp
lds
adc
stc
or
cmpsb
add
mov
push
lahf
jl
pop
fs
adc
test
jp
adc
dec
xlat
cmp
data16
xor
mov
mov
ljmp
stos
mov
movsb
subb
ljmp
data16
addr16
ljmp
mov
test
ds
es
pop
dec
rclb
enter
loope
pop
and
dec
addr16
lods
pop
inc
pop
jl
and
mov
jle
in
pop
dec
insb
shl
mov
sbb
add
push
cltd
cmp
xorl
dec
sub
sar
movsl
aas
jg
xor
cmpsb
jge
in
add
hlt
jbe
cli
xlat
add
and
xor
cmp
cmp
mov
jne
or
push
and
adc
xor
cmc
movsb
mov
pop
outsb
stos
sti
mov
cltd
or
and
psubd
les
lret
xchg
jl
pushf
pminub
hlt
cld
jl
popf
lcall
sahf
dec
xor
xor
or
xlat
orb
jmp
mov
add
ret
sub
mov
cmp
add
lahf
lock
data16
or
mov
sarb
sbb
pop
mov
lock
push
mov
and
or
jmp
add
pop
pushf
into
or
cmpsb
pushf
push
fdivl
sub
mov
pop
or
jb
sub
pop
repnz
mov
push
cmp
sbb
inc
inc
cld
es
sub
or
xor
mov
push
pop
sbb
je
or
xor
loope
cmp
fidivrl
test
inc
cli
cmpsb
fcompl
add
push
js
in
jno
push
bnd
xchg
dec
mov
mov
stc
loop
mov
mov
scas
dec
int3
scas
mov
sbbb
jmp
mov
push
repnz
jb
es
push
adc
ret
push
dec
add
faddl
mov
adc
pop
adc
pop
daa
popf
orb
rcrb
xchg
push
xchg
lock
stos
mov
push
mov
pop
js
test
stos
mov
aam
add
push
jbe
cmpl
push
sbb
out
sbb
xchg
and
sbb
cmp
shr
mov
push
insb
mov
insb
inc
imul
in
lcall
mov
add
cwtl
cwtl
adc
xchg
rclb
push
sub
mov
dec
fwait
adc
inc
imul
push
cmp
ss
gs
mov
mov
push
add
and
aam
repnz
test
adc
cwtl
pop
lahf
sbb
mov
push
cmp
mov
cmpsb
mov
push
xchg
test
mov
inc
jmp
mov
out
sub
fimuls
push
xor
out
outsb
mov
jmp
imul
xor
mov
xor
mov
stc
mov
xchg
lds
rolb
psubb
in
fbld
les
sbb
into
mov
out
or
cmpb
in
or
or
or
inc
sbb
push
scas
add
mov
mov
mov
daa
addb
push
dec
rolb
dec
out
xorl
push
loop
mov
cmp
lea
gs
mov
lahf
test
les
gs
loop
push
fdivrl
test
andb
dec
add
push
ficomps
ljmp
fwait
js
in
and
mov
outsl
or
inc
dec
and
jbe
push
xchg
lods
cltd
cmovs
push
ds
push
bound
jmp
inc
xchg
xchg
cmp
into
fsubl
or
mov
pop
fsubrs
and
add
push
sbb
add
aaa
push
push
mov
xor
sbb
add
jo
xchg
jp
mov
mov
and
out
mov
push
pop
ja
js
js
xchg
insb
rorl
jl
mov
out
adc
adc
aam
cmp
lock
jbe
mov
xchg
and
sbbl
pushf
ret
orl
clc
cli
iret
cmp
xchg
mov
add
daa
imul
icebp
out
outsb
or
int3
je
subl
loope
push
lahf
mov
and
pop
cmp
pop
js
out
pop
inc
jns
mov
add
pop
leave
hlt
loopne
lods
ds
out
pop
mov
mov
sbb
mov
dec
inc
jnp
xorl
xchg
sub
cltd
sar
cmpsl
rorb
inc
push
fdivl
push
pop
push
repz
fwait
pop
xchg
cmp
es
xchg
cli
xchg
jmp
mov
sub
mov
sub
dec
pusha
insb
mov
shr
pop
mov
je
dec
fidivl
enter
mov
out
fiadds
push
xor
lock
sahf
cld
fadds
pop
inc
mov
mov
sbbb
call
sbb
out
mov
leave
pop
pop
movsb
mov
push
icebp
in
mov
ljmp
add
push
dec
mov
inc
cmp
jne
lcall
rcrb
xor
cmp
es
xor
jp
cmp
ljmp
dec
push
jno
pop
cmp
mov
push
mov
incb
mov
xchg
mov
adc
les
ljmp
mov
cld
sbb
and
pop
test
lahf
sub
aas
xchg
incb
gs
inc
lods
dec
lods
mov
dec
lahf
inc
push
push
out
cltd
jp
sub
insb
push
jno
dec
cmc
cmpsb
call
cmpl
lock
hlt
test
idivl
or
rcll
out
pop
inc
dec
shr
loopne
mov
push
push
mov
mov
mov
hlt
stos
test
inc
pop
and
mov
xorb
fstpt
mov
adc
fsubl
pop
call
cli
fisttpll
lods
icebp
les
fdiv
mov
loopne
aaa
mov
push
sub
push
pop
icebp
add
leave
inc
mov
mov
mov
xor
pop
mov
inc
mov
jnp
enter
mov
enter
mov
mov
push
mov
ja
inc
cmp
nop
outsb
fs
into
lahf
mov
ficomps
lret
mov
fidivl
movb
ds
dec
daa
sbb
pop
push
jmp
mov
push
aam
cmc
jp
mov
fmul
pushf
pop
and
and
fimull
ret
int3
repz
mov
jp
mov
lock
into
pop
sbb
cmp
cld
sbb
cmp
fcom
in
fldt
mov
call
ret
pusha
pop
cmp
in
inc
ljmp
cmp
ds
jne
out
test
cmp
push
sub
les
cmc
jle
xchg
ljmp
fidivrs
inc
jae
xchg
mov
addr16
mov
push
call
fnstenv
mov
cltd
push
push
mov
cmp
insb
fadds
pop
xchg
xchg
push
or
cs
jno
and
mov
push
call
mov
jb
and
add
xchg
in
add
mov
scas
mov
movsl
xor
ds
out
push
sbb
in
inc
mov
sub
sbb
ljmp
cmc
push
pop
mov
push
and
mov
mov
or
sub
adc
jp
and
push
pop
mov
jl
pop
jb
mov
outsb
mov
nop
je
inc
mov
adc
ret
inc
mov
in
cmp
cs
push
incl
push
int3
inc
js
repnz
fwait
nop
stos
lods
jo
mov
fldcw
or
jmp
sbbb
es
ds
xchg
mov
fdivrs
pop
mov
out
inc
aam
mov
je
xor
add
or
cs
js
mov
xor
imul
jno
stos
cmpsb
clc
and
mov
mov
push
mov
cmp
pmaxub
rcrl
add
out
nop
and
jne
jne
sub
or
push
push
mov
fdiv
xor
or
stos
test
push
sub
sbb
add
loop
jmp
bound
push
rolb
sbb
and
xchg
mov
adc
cmp
and
inc
pop
mul
add
les
sub
mov
pop
mov
fiaddl
mov
add
push
cmp
xchg
es
mov
push
mov
xor
mov
je
push
ja
inc
xchg
xor
jp
out
les
scas
add
aaa
push
je
pop
int3
push
adcb
mov
addl
rorl
jnp
and
jb,pt
outsl
out
xchg
std
mov
jne
ljmp
jo
cmp
fs
pushf
pop
inc
outsl
insb
in
adc
inc
out
in
inc
decl
xchg
jne
sbb
andb
or
sub
dec
daa
add
pop
fs
push
xchg
es
es
lcall
xor
jbe
mov
adc
lret
and
addl
sub
inc
test
pushf
push
sub
sbb
iret
push
push
pop
insb
enter
clc
or
and
sub
mov
imul
mov
sbb
imul
pop
add
add
pop
mov
mov
dec
mov
xor
push
cmc
mov
mov
das
add
out
and
push
push
popl
pushf
in
mov
mov
jp
lahf
js
push
daa
test
pop
lock
pop
dec
xchg
cmc
and
daa
sub
rsm
xchg
in
mov
cmp
cli
jbe
mov
mov
inc
push
out
bound
inc
xchg
lea
cli
mov
cld
xor
mov
fcompl
in
data16
pop
je
stc
jb
sub
mov
lods
movsl
aam
jg
mov
lods
add
and
hlt
in
adc
pusha
btc
out
ja
in
fbld
xchg
mov
insl
or
mov
xor
fucompp
mov
push
xlat
decb
and
cmpb
mov
push
adc
test
ss
push
gs
push
and
in
push
call
jne
cmpsb
xchg
xchg
and
jl
mov
pop
mov
push
ds
fsubs
pushf
cli
out
inc
mov
push
and
fbld
hlt
sub
dec
mov
out
mov
fdivs
hlt
cmp
inc
subl
and
mov
pop
inc
cwtl
clc
push
outsb
bound
push
inc
mov
aas
push
mov
cmp
rcrb
mov
js
pop
insb
or
cmpsb
sbb
lret
sub
push
inc
out
adc
sarb
xor
jb
rorl
addr16
ret
inc
xchg
add
test
cs
jecxz
mov
lahf
mov
int
add
sahf
in
rcrb
mov
adc
mov
xorb
cmp
sti
test
aam
les
mov
cmp
jo
cmp
add
aad
rcll
cmc
xchg
push
pop
push
and
enter
pop
data16
out
mov
mov
lods
pop
cmp
loopne
xchg
cwtl
lock
in
aas
out
dec
je
aam
cmc
mov
xchg
mov
imul
and
sub
mov
inc
pop
xor
data16
std
add
lea
jo
fs
leave
mov
push
add
test
mov
je
clc
imul
and
and
mov
shr
mov
lret
adc
mov
lahf
adc
ds
imul
stos
push
cltd
cmp
mov
mov
es
enter
cmp
ret
out
lahf
orl
loopne
add
aam
je
mov
sahf
xor
mov
shll
jmp
push
cwtl
pop
ds
in
ss
test
call
mov
cli
ds
mov
aam
je
addr16
lret
hlt
in
adc
pusha
ds
ljmp
add
cli
cmp
add
cmpsb
jl
popl
mov
enter
cmc
nop
jg
insl
in
xor
or
cmp
mov
test
dec
jmp
adc
cmpsb
dec
lock
cmp
mov
test
push
pop
sub
sbb
fidivl
fdivs
enter
loop
and
mov
push
sub
push
jl
mov
int3
jmp
ds
sub
cli
mul
sub
xlat
clc
xchg
adc
adc
lock
mov
pusha
nop
aam
insb
fwait
je
add
or
sbb
ficoml
clc
xor
into
jmp
addr16
mov
push
sub
cmp
push
pop
daa
in
in
xchg
jmp
mov
add
and
mov
pusha
loope
push
rorl
into
imul
lea
scas
insb
addr16
int3
or
es
repnz
mov
lret
mov
push
ljmp
dec
mov
in
aas
loope
gs
stos
xchg
sbb
mov
and
sub
cmp
scas
mov
push
call
pop
mov
add
mov
mov
test
mov
or
in
or
lret
scas
and
arpl
push
sub
jl
clc
cmp
test
xchg
push
pushf
adc
cwtl
sahf
pusha
fmuls
nop
lea
lret
mov
sbb
xchg
jb
insl
pcmpeqd
or
test
jmp
sbb
sbb
dec
movsb
jb
adc
jns
stos
int3
mov
imul
jb
sub
or
ss
iret
mov
cmpb
inc
pop
inc
js
sahf
aas
je
dec
std
bound
pop
xchg
mov
andb
stos
mov
and
dec
adc
mov
hlt
dec
in
push
movsl
mov
mov
sub
cmp
gs
xchg
pop
adc
mov
pop
push
insl
jp
cwtl
addr16
mov
pop
sub
xchg
push
aas
xchg
xlat
pusha
or
mov
add
ret
les
mov
sub
fsubl
jmp
fidivrl
subl
adc
inc
cmc
xchg
dec
dec
cmc
loop,pn
push
iret
mov
stos
jmp
sbb
repz
popa
stos
call
fimull
out
shr
fistpl
fcmovu
mov
push
lods
cltd
shlb
xchg
push
inc
pop
xchg
cmp
das
pop
push
cld
adc
mov
add
xchg
pop
adc
add
and
movsl
mov
sbb
roll
jns
orb
mov
and
push
mov
pop
push
ljmp
data16
mov
movsl
mov
add
xor
loopne
mov
int3
and
mov
xor
pop
dec
leave
movsb
mov
sbb
loop
js
add
scas
xlat
mov
pushf
movsb
cli
jle
test
andb
test
mov
dec
sub
mov
in
adc
test
or
mov
dec
lret
push
aas
nop
out
mov
push
imul
and
data16
xor
xor
xlat
cmp
mov
gs
ds
scas
cmp
pop
jp
mov
pop
add
pmaxsw
mov
push
and
dec
rclb
add
jbe
jle
outsb
push
xchg
sbb
add
sub
pop
mov
mov
xor
ret
clc
aam
cwtl
add
cmp
xor
jns
push
rorl
pushf
rclb
aam
adc
aam
xor
xchg
push
mov
aas
dec
in
push
mov
enter
call
adc
mov
out
inc
inc
xor
rcrb
push
sub
rolb
clc
ds
jbe
ljmp
xchg
xchg
sarb
cmp
ljmp
fs
je
dec
movsb
gs
jp
ds
jp
lods
pop
sbb
pop
inc
js
test
cmp
mov
mov
pop
cwtl
sbb
xchg
in
shrl
dec
repnz
in
jl
cmpb
cli
sub
sti
cwtl
cli
cmp
rol
test
test
call
lcall
insb
mov
adc
mov
or
dec
fildll
ljmp
mov
push
loop
call
enter
gs
jbe
bound
jl
push
jmp
push
sbb
push
loop
pop
mov
cs
cwtl
clc
scas
dec
mov
xor
mov
ret
and
ret
aam
mov
into
cs
mov
pushf
pop
sbbb
call
or
adc
inc
add
pop
push
jl
add
pushf
jmp
mov
add
xchg
push
push
jmp
pop
movsb
ljmp
mov
xchg
ret
mov
and
clc
xchg
pop
sahf
xor
mov
je
or
leave
inc
xlat
les
mov
push
and
mov
xchg
adc
sbbb
lock
inc
inc
mov
and
ret
inc
out
inc
push
fisubl
xchg
dec
and
add
pop
mov
push
inc
mov
jbe
in
out
inc
loopne
mov
pop
stos
pushf
mov
push
je
and
nop
std
mov
loope
mov
pop
sub
mov
push
out
scas
add
sub
fldt
sti
or
dec
fistl
xor
push
icebp
dec
mov
in
adc
adc
sub
push
inc
inc
scas
shll
pusha
test
mov
sub
cmp
or
icebp
mov
ficoml
scas
dec
outsl
and
pop
mov
push
sub
fidivl
decb
mov
ret
mov
adc
or
aas
sahf
push
mov
hlt
jbe
dec
out
mov
xchg
xchg
outsl
push
mov
std
adc
push
adc
inc
ret
ss
push
in
outsb
jle
dec
sub
jbe
aad
je
jb
jnp
stos
inc
inc
push
mov
mov
xor
dec
cli
pop
pop
push
dec
ror
sub
lock
add
jbe
divb
xor
ljmp
lock
pop
jbe
test
dec
xor
jbe
mov
or
dec
jmp
iret
fsubl
les
sar
or
cmp
mov
ret
mov
mov
loopne,pt
xchg
insb
push
inc
mov
mov
jns
or
decb
leave
push
repnz
inc
jp
dec
loope
gs
jg
mov
pushf
sub
notb
cmp
rolb
push
pushf
imul
data16
push
ret
mov
std
sub
mov
pop
jb
popa
mov
xor
out
dec
add
mov
cmp
adc
in
jb
fs
push
sahf
js
hlt
pop
dec
mov
pop
ret
int
mov
ret
push
or
mov
adc
dec
sbb
shrl
test
jae
inc
outsb
xchg
fcomps
xchg
jmp
enter
dec
aam
mov
mov
mov
jp
loop
scas
adc
cli
add
jp
lods
iret
int
lret
sbb
jns
mov
cmp
and
movsl
pop
lcall
push
fmull
lcall
out
push
mov
lret
loopne
adc
inc
movsl
lcall
scas
ds
inc
push
aam
inc
es
sub
inc
xor
or
pop
nop
into
inc
fsubl
push
fisttps
es
mov
mov
pushf
dec
sti
loope
fs
mov
xor
dec
inc
cli
push
cmc
lahf
push
mov
inc
mov
lret
stos
or
push
faddl
add
sbb
pushf
xor
rclb
into
cltd
xor
in
push
mov
ret
xchg
loope
gs
loopne
out
ffreep
iret
cli
repz
inc
or
jns
inc
xor
push
jns
outsl
jns
mov
cmp
cmpsb
jne
mov
push
test
aas
shr
mov
pop
add
enter
add
imul
lea
mov
add
push
mov
adc
push
xor
sub
roll
pop
jmp
and
mov
or
inc
shll
imul
lahf
jae
xchg
icebp
testb
inc
sahf
dec
test
mov
mov
aam
and
int3
inc
pop
insb
pop
inc
mov
and
or
clc
dec
push
and
sbb
and
iret
mov
add
push
dec
xchg
inc
adc
daa
push
push
inc
lret
sahf
adc
out
imul
or
and
hlt
pop
fstpt
loop
scas
and
call
and
mov
cli
bound
jno
mov
inc
or
xchg
stc
ljmp
add
inc
sarb
in
adc
xchg
outsl
cli
mov
mov
ds
mov
and
es
add
test
push
mov
je
jmp
negb
mov
dec
pop
ljmp
push
cli
mov
addr16
jecxz
jne
push
xchg
in
out
inc
jbe
gs
dec
cltd
push
rorl
ds
push
dec
ret
jmp
push
xlat
dec
add
test
xor
fcmove
cli
inc
mov
into
mov
test
lds
fadd
in
scas
scas
mov
mov
lret
push
xchg
cwtl
lods
das
lret
or
inc
sbb
lds
dec
scas
sar
scas
cltd
icebp
sbb
lret
fcoms
push
notb
dec
fisubl
xor
ljmp
sub
cltd
lcall
cltd
mov
mov
jb
fstps
mov
fisubrl
fcmove
fcompl
mov
cmpsb
fwait
insb
jmp
adc
testb
pushf
dec
int3
jle
mov
mov
cmp
and
inc
cmp
fistl
cmp
addl
push
pop
xchg
insb
cmp
dec
push
cld
xor
mov
xor
cwtl
insb
xor
mov
xor
mov
std
faddl
ljmp
mov
inc
xor
loopne
mul
pop
jecxz
rcrb
xor
and
aaa
mov
jb
aas
aas
test
cmp
lock
mov
loopne
xor
jb
mov
xchg
mov
scas
push
scas
out
in
bound
popa
mov
bound
add
dec
push
or
mov
xchg
inc
movsb
cmc
push
push
cmp
xor
mov
xlat
nop
add
xor
ret
push
xchg
imul
jae
sbb
fidivrl
aas
add
xlat
sbb
in
push
in
pop
movsb
dec
and
add
std
mov
pop
fs
mov
pop
xchg
add
je
dec
xchg
adc
in
lret
add
stos
ret
sbb
push
inc
sbb
insb
pop
aas
int
cs
scas
xchg
lret
or
mov
bound
adc
hlt
mov
aas
sarl
in
sub
mov
aam
pusha
pop
sub
mov
pop
push
cmp
les
inc
xchg
ret
xor
dec
out
adc
mov
fldcw
fs
inc
mov
xchg
jbe
mov
inc
mov
leave
xchg
aad
push
jbe
add
sbb
aas
es
jno
leave
and
jl
pop
sub
xor
shr
es
inc
lds
stc
lods
enter
hlt
sbb
pop
mov
mov
iret
daa
adc
rcll
xor
ds
fidivrs
lds
dec
ds
jb
std
add
mov
enter
cmp
sbb
lret
leave
mov
shlb
scas
push
and
lea
dec
mov
call
nop
xchg
out
lds
pop
cmp
in
mov
jb
rorl
jnp
stos
add
out
add
xor
jb
sbb
mov
dec
add
xchg
inc
and
clc
in
push
fs
iret
inc
push
mov
or
push
cmpsl
inc
sbb
xchg
insb
or
aam
jnp
push
adc
mov
mov
xor
loop
dec
mov
std
rcrb
scas
ret
adc
shl
sbb
sti
pop
cmp
sbb
test
lods
andb
movsb
mov
or
or
test
pop
clc
ljmp
popa
ljmp
sahf
pop
aaa
sub
fistps
dec
test
xchg
int3
loope,pn
add
sbb
rclb
mov
mov
and
sbb
cmp
in
cmp
jo
leave
inc
inc
mov
into
push
xchg
cmp
sub
sub
mov
in
sub
ss
mov
ds
ljmp
dec
lcall
push
out
pop
es
xchg
adc
xchg
and
xchg
inc
pop
push
mov
cmp
imul
xor
and
inc
or
mov
daa
dec
gs
fcomps
in
push
sbb
data16
push
or
and
and
jb
jno
out
dec
mov
add
push
rclb
imulb
and
sub
or
test
test
notb
ret
pop
mov
add
cmpsb
jge
je
lret
mov
mov
out
inc
pop
aam
iret
jnp
mov
pop
lds
in
cmp
mov
inc
xchg
jmp
fs
cmp
jp
test
mov
jnp
fisubrl
test
jb
shrb
pop
shll
out
scas
sub
dec
imul
add
add
pop
mov
dec
adc
out
xlat
mov
adc
push
pushf
mov
aam
in
ret
xorb
dec
mov
or
mov
mov
and
in
popa
mov
out
clc
popa
push
aad
cld
dec
xchg
mov
sbb
shlb
inc
out
stos
mov
inc
xchg
push
cmp
sub
push
adc
ljmp
cltd
fs
mov
imul
enter
loopne
add
sti
or
loop
push
sub
xchg
mov
imul
mov
sub
scas
jmp
je
inc
pop
pop
mov
mov
mov
jmp
test
inc
inc
ficoml
out
cli
out
inc
outsb
shrb
mov
lcall
mov
lret
push
xlat
cmp
xor
jl
test
push
out
hlt
fs
repnz
add
in
call
and
inc
cli
jecxz
jnp
lds
shl
xchg
jno
sarb
jo
dec
dec
lods
add
mov
xchg
push
test
pop
mov
lret
cmp
ficompl
dec
xor
xchg
cmp
decb
push
adcb
lret
lcall
mov
test
icebp
enter
lahf
and
sahf
and
pop
fwait
cli
ss
iret
mov
shrb
mov
push
mov
xlat
inc
jnp
test
js
stos
xor
fcoms
push
pop
insl
mov
jp
mov
pop
ds
dec
test
test
lcall
in
mov
loop
mov
or
mov
sbb
in
cmp
xchg
push
sti
rcr
movsb
xor
lcall
push
sbb
mov
push
push
pop
cmp
shlb
jo
leave
push
clc
jg
outsb
test
iret
aas
sub
add
xlat
jne
lahf
mov
mov
push
cmpsl
repz
outsb
fstpl
shr
mull
enter
adc
inc
in
mov
xchg
xchg
in
ret
jo
sbb
lea
cmp
adcb
cmpsl
dec
or
mov
lds
xor
lods
in
xor
add
and
hlt
dec
inc
mov
icebp
jge
ds
inc
xchg
out
dec
pop
lea
imul
test
scas
mov
xchg
push
hlt
mov
data16
pop
out
shlb
push
mov
jmp
jg
lea
mov
mov
fdiv
jecxz
out
out
jle
scas
push
std
pop
pushf
loopne
aam
cmp
pop
in
xchg
in
mov
xchg
jg
lcall
in
frstor
xchg
test
stc
test
jb
dec
out
pop
mov
fnop
adc
fldl
in
rcr
mov
mov
int
in
push
out
cltd
cmpsl
lret
jb
dec
mov
dec
pop
mov
jmp
xor
mov
idivb
in
jnp
lock
sub
and
adc
call
or
dec
outsb
es
mov
pop
subl
call
jp
push
sub
mov
lds
pop
adc
or
jns
mov
sbb
add
rcll
mov
mov
xchg
jle
data16
jp
dec
ss
push
mov
test
push
xchg
hlt
fcoms
push
lcall
or
shl
xor
pushf
les
add
push
test
mov
mov
pop
aas
pop
sbb
ret
fisttps
xorl
push
repz
ret
pop
mov
adc
mov
or
movsb
loope
gs
pop
popa
out
lcall
adc
cmp
sub
xchg
js
fisttps
inc
stos
jno
dec
insl
fisttpll
jge
push
iret
lahf
pop
enter
imul
jne
nop
lahf
imul
movsb
popa
push
sbb
dec
jl
lock
xchg
subl
cld
pop
repz
mov
xacquire
call
mov
inc
or
ret
sbb
pop
add
dec
inc
mov
push
push
mov
sub
jbe
jbe,pt
leave
inc
insb
popa
idivl
sub
cltd
orb
ljmp
test
andb
sub
mov
jge
bound
xor
sub
test
jns
inc
stc
mov
xchg
loopne
xchg
jae
mov
ret
fcoml
xchg
test
lock
fbstp
or
xchg
mov
fidivl
push
mov
inc
jo
mov
call
adc
mov
pusha
ja
jmp
push
mov
mov
movsb
dec
dec
fstps
push
scas
rcr
rorb
insl
clc
xor
cmp
pusha
inc
push
pop
mov
lods
xchg
int3
mov
fsubs
int
fs
scas
cwtl
sub
faddl
push
mov
insb
adc
inc
and
pop
inc
mov
cmpsl
push
cld
mov
jl
sbb
mov
xchg
or
sub
fidivs
movl
fidivs
adc
add
fldt
daa
mov
xor
add
adc
incb
and
sbb
pop
add
mov
lds
jp
add
xor
fimuls
push
mov
cmp
inc
sub
mov
sbb
sub
fists
shll
jns
lcall
xchg
or
mov
or
and
push
add
inc
push
and
addr16
divl
cmp
ljmp
cs
gs
mov
ret
inc
xchg
and
adc
mov
xor
stos
test
mov
cmp
add
je
or
sbb
and
mov
repnz
jle
or
mov
mulb
test
xor
push
adc
outsl
dec
ret
inc
mov
test
in
jp
aad
mov
and
insl
call
mov
mov
icebp
gs
xor
div
mov
push
stc
add
stc
pusha
and
sub
add
dec
cmp
push
scas
hlt
mov
xchg
sbb
and
notl
jp
xchg
aad
icebp
scas
mov
pop
sbb
jne
pop
xchg
sbb
je
cli
mov
out
mov
addr16
cltd
ljmp
jne
icebp
xor
jge
mov
test
clc
out
or
cmp
inc
lock
dec
mov
mov
pop
xchg
fstl
or
aad
inc
push
sbb
aam
icebp
pop
xchg
push
jnp
xchg
aam
mov
insl
xchg
pop
pop
mov
jne
lahf
xchg
popaw
in
and
and
mov
mov
xchg
pop
in
xchg
dec
xchg
and
pop
mov
pop
pop
leave
pop
mov
push
xor
xchg
and
ret
call
popf
pop
push
ja
movsl
fbstp
lcall
ja
lret
les
inc
nopl
in
xchg
jo
stos
ljmp
mov
add
in
mov
sub
adc
jmp
cmp
mov
and
pop
test
jl
and
fisttpll
cmp
adc
fs
xchg
adc
push
div
in
jnp
jle
js
mov
xor
bound
xchg
cltd
cmp
lret
enter
xlat
or
fistpll
jns
cltd
mov
fldcw
pop
int
sbb
mov
sbb
sub
addr16
ret
js
inc
xchg
imul
jp
pushf
push
ss
xchg
int
and
subl
scas
mov
mov
iret
lods
or
outsb
mov
sbb
sarb
movsb
sbb
jmp
fcompl
int3
out
dec
xchg
push
mov
andb
mov
pushf
gs
nop
jg
cmp
dec
pop
test
mov
or
fcmovb
push
pop
pop
mov
sti
cmpsl
push
scas
adc
aam
sarb
or
mov
mov
xchg
or
jae
nop
mov
sub
pop
test
pop
mov
ss
sub
or
dec
jne
xlat
sub
xor
lea
pop
or
sbb
movsb
in
pop
pop
neg
mov
fs
xor
push
jne
mov
mov
rol
fstpt
test
jge
pushf
in
aad
fsubl
clc
icebp
cs
addl
sbb
or
cmp
jb
push
and
sbb
jno
lcall
and
inc
sbb
mov
xlat
leave
cmp
dec
xchg
add
shll
dec
xor
push
cmp
sub
cli
js
cmp
push
xchg
repz
xchg
sbb
cld
jae
or
push
cwtl
xchg
js
or
dec
jmp
std
scas
popa
push
cmc
rol
and
push
add
rcll
push
cltd
xchg
pushf
jae
dec
out
in
xchg
jbe
andl
and
pop
sbb
rclb
pop
xchg
and
xchg
sahf
es
lds
xchg
inc
and
sbb
cmp
sbb
pop
out
pop
pusha
xchg
sbb
js
adc
mov
nop
testl
sub
cld
scas
dec
mov
xorb
sahf
gs
jecxz
jmp
or
cmc
jne
mov
sbb
scas
inc
add
repz
std
fistps
ret
ljmp
mov
call
pop
cmp
inc
mov
ja
out
mov
sub
test
mov
mov
sti
xor
fs
mov
jo
rcr
in
test
add
int3
into
in
shl
aam
push
add
and
outsb
icebp
push
and
aaa
pop
mov
out
in
jp
das
push
dec
push
pop
push
call
pop
and
fs
ljmp
mov
jl
lock
mov
fsubs
xchg
cmpsb
mov
pop
mov
rcl
inc
sti
shlb
movsl
inc
cmpsb
jno
ljmp
rcrl
pop
xor
das
jo
jecxz
add
mov
mov
mov
lock
shlb
inc
mov
push
jnp
jl
fwait
cltd
fsts
push
pop
rclb
call
xchg
xchg
mov
subb
mov
aad
mov
mov
push
mov
in
and
mov
fidivl
push
inc
pop
push
scas
stc
out
inc
lcall
mov
jmp
cmp
minps
add
scas
lea
cmpl
cmp
xchg
pop
pop
add
icebp
in
inc
insl
in
jnp
push
notb
in
or
popf
cld
pop
jecxz
lcall
scas
push
jbe
out
gs
fs
push
adc
dec
push
pop
fstl
lds
jmp
lcall
insb
clc
mov
xchg
push
ret
sub
sahf
clc
push
fcoms
jle
and
push
cmpb
cmp
inc
push
xchg
out
je
in
and
mov
cmp
lock
jecxz
pop
ljmp
stc
repz
xor
aaa
pushf
repnz
adc
out
mov
pop
mov
movsb
lret
out
or
insl
sub
xchg
add
jmp
int3
fstpt
dec
jnp
cld
mov
dec
in
add
cwtl
lcall
mov
les
or
and
pop
xchg
dec
fists
inc
fcomi
xor
inc
push
jbe
lock
push
insb
dec
clc
cs
notb
imul
jne
out
adc
lcall
call
mov
fnstcw
mov
aam
rcl
fcoms
xchg
xchg
int3
push
and
lcall
cmp
xor
fisttps
shlb
jmp
pop
mov
fs
movsl
push
into
and
dec
outsb
jbe
pop
dec
pusha
inc
data16
push
mov
and
mov
inc
cmpsb
popa
mov
pushf
push
call
sub
sub
pop
push
rcrl
cld
je
dec
push
lret
pushf
jmp
and
add
repz
sub
fmulp
das
ds
dec
and
lock
or
jnp
lods
mov
nop
jp
loop
decl
mov
sahf
and
cmpsb
popa
add
test
mov
ds
cli
sbb
aas
mov
mov
out
add
jg
and
adc
aam
mov
cwtl
lret
sub
and
push
push
dec
daa
rorb
pop
inc
cld
lock
sub
loope
out
sub
icebp
and
mov
push
mov
and
push
aam
imul
mov
lret
pop
and
lcall
jle
stos
mov
and
add
dec
in
pop
xor
ljmp
jne
enter
xor
jle
bound
imul
pop
fcoml
jb
push
repz
int3
cmp
xor
jae
dec
or
popa
inc
popa
in
inc
cs
cs
das
xlat
bound
lock
ficompl
mov
jbe
dec
xchg
repnz
or
mov
pop
inc
std
scas
xor
out
add
lar
test
jnp
push
pop
sub
out
test
cmp
ljmp
push
hlt
lods
lods
lock
sar
repz
jne
jecxz
or
insb
test
int3
mov
lret
shrb
add
pushf
mov
push
adc
pop
push
dec
xchg
adc
push
jno
inc
adc
mov
and
mov
xor
xchg
and
inc
les
addr16
or
jae
scas
adc
push
inc
hlt
inc
aam
xor
mov
lret
lods
pushf
ss
xchg
push
mov
cmp
sti
fsubl
dec
mov
jbe
jecxz
xor
add
add
pop
push
push
fs
lret
xchg
and
push
xor
dec
fcmovb
jne
xchg
ret
ja
mov
neg
mov
push
stos
xor
icebp
mov
lcall
and
movsl
je
mov
dec
mov
push
int
cmpl
mov
xchg
mov
bound
in
adc
mov
outsb
mov
mov
scas
adc
dec
int
ljmp
add
out
pusha
mov
fs
in
xorb
into
mov
and
lock
and
mov
xchg
mov
add
xor
and
shrb
stos
mov
imul
inc
nop
mov
aam
push
sar
sub
add
lods
inc
jp
shrb
les
or
stos
es
call
sub
enter
aam
mov
outsl
inc
insb
and
push
add
bound
cltd
hlt
pushw
js
lods
imul
fcoml
jb
xorl
mov
pop
lock
test
loop
es
divb
data16
imul
jne
pop
or
stos
xchg
into
test
mov
imul
test
jns
pop
iret
stos
fcomi
xor
jb
cmc
push
xchg
sub
mov
je
mov
movl
mov
insl
lods
out
nop
andl
cmpsb
cmp
add
fs
aam
and
lret
jg
repnz
sub
es
out
je
xchg
aam
dec
mov
xor
mov
pop
cmpsl
addr16
fstpt
mov
inc
adc
xchg
cwtl
mov
loop
cpuid
mov
in
xor
pushf
add
push
adc
ret
jl
mov
loop
jbe
fcomp
mov
inc
daa
inc
and
adc
sub
mov
out
mov
lret
push
and
xchg
sbb
shll
push
ror
cs
push
mov
pop
mov
mov
adc
outsl
lret
mov
sbb
roll
pop
jle
mov
push
inc
sub
dec
or
and
xchg
je
out
push
out
pushf
into
mov
jno
jno
je
and
or
push
sub
lock
add
int3
repz
fwait
push
rolb
loop
nop
cwtl
adc
ret
cwtl
pop
cmp
xor
inc
or
mov
xchg
inc
cmp
out
or
xlat
mov
xor
and
cld
mov
inc
push
push
sub
sub
pop
outsl
fcoml
lahf
nop
ja
dec
jb
out
test
cli
sub
mov
sahf
sub
mov
decb
pop
sbb
faddl
inc
sti
push
push
mov
in
cld
in
mov
in
or
dec
arpl
push
out
cmp
loopne
or
std
add
ret
std
mov
sbb
xlat
xchg
pop
cmc
push
inc
push
mov
imul
cmp
sub
add
sbbl
sub
pop
push
dec
xchg
fidivrs
nop
cmp
push
aam
lds
jo
jecxz
rol
lods
adc
adc
in
ja
popa
xor
stc
popf
cmpb
mov
cmp
cmp
in
or
push
movsl
test
sub
pop
dec
xchg
mov
add
lods
pop
fs
sar
mov
cmp
inc
xor
xchg
mov
add
lods
pop
fs
sar
mov
outsl
lret
cli
lds
ret
mov
insb
sarl
xchg
mov
js
xchg
in
xchg
sub
xor
stos
lock
jb
push
inc
pop
push
xor
push
sbb
xor
jbe
loope
pop
mov
rcr
jecxz
out
add
inc
fldcw
pop
mov
cwtl
pop
jne
imul
mov
movsb
mov
ss
xor
int3
fs
xlat
push
in
cmpsb
mov
ja
cmp
mov
dec
and
cld
jb
xchg
push
aam
sahf
bnd
imul
xor
push
mov
jmp
and
mov
cli
jmp
out
sti
fs
arpl
jb
mov
adc
xor
add
fidivl
int3
and
mov
and
loop
in
ss
clc
call
mov
cmp
xchg
push
mov
cwtl
dec
data16
mov
sbb
inc
dec
pushf
rolb
or
ret
push
ljmp
jnp
push
movsb
fnsave
inc
scas
push
in
add
jp
je
mov
rolb
mov
push
and
lcall
mov
fsubs
pop
and
pop
movsb
popa
pop
mov
push
addr16
jp
aam
push
add
inc
icebp
pop
pop
movsb
dec
xor
shll
ljmp
mov
xor
push
cmp
pop
outsl
out
lea
mov
add
mov
out
test
push
lret
fucomi
movsb
fwait
mov
mov
cltd
insl
aam
out
sub
arpl
jle
arpl
push
add
or
push
cmp
adc
in
cmp
int3
fsubrs
test
sbb
loop
mov
mov
pop
hlt
das
fists
idivb
cmc
cmc
mov
insl
cs
sahf
and
rorb
jne
ss
mov
cli
scas
xor
fists
outsl
ss
outsl
fcoml
fbld
push
filds
aas
data16
aas
jbe
mov
dec
mov
or
cmpsb
data16
stos
out
push
cmp
cmp
aas
fidivl
sbb
out
fldl
out
pusha
fiaddl
ret
and
push
fmull
cmp
mov
inc
mov
pushf
in
jb
in
mov
test
cmpsb
cwtl
push
insb
mov
push
mov
add
mov
push
sub
fimull
dec
bound
out
dec
test
adc
mov
mov
out
inc
aam
pushf
fwait
je
xor
dec
out
sub
cld
sti
sub
int3
adc
insb
dec
jne
insb
pop
jne
insb
push
cmp
imul
in
js
pusha
int3
adc
in
pop
insb
loop
rclb
in
mov
je
mov
stos
jmp
enter
mov
fcompl
cmp
xchg
cmc
adc
out
cli
in
mov
rcll
xor
add
jmp
jno
ja
rorb
xchg
int3
cwtl
sub
mov
inc
lds
addl
adc
imul
and
lahf
xchg
mov
test
jae
les
push
xchg
mov
cmp
inc
jno
lcall
push
stos
insb
mov
mull
fcomps
push
fisttpl
cwtl
aam
ret
inc
test
fs
sahf
jnp
push
repnz
sbb
pop
xchg
imul
out
cmpsb
sbbl
xchg
fisubrs
in
popa
mov
mov
mov
mov
ljmp
pop
lock
lahf
nop
movsb
or
xchg
out
push
pop
out
fcomps
aaa
jns
or
cmpsl
push
loope
mov
pop
jg
jae
mov
arpl
xor
lret
cld
mov
cltd
dec
push
mov
testb
pop
pop
outsb
dec
push
lock
test
sbb
das
pop
push
test
inc
repz
aas
icebp
inc
sub
dec
ja
idivb
jae
daa
out
inc
mov
mov
aam
mov
jle
xchg
push
gs
jmp
mov
aas
ljmp
pop
pop
jae
mov
loope
inc
xchg
xchg
cmpsb
out
test
mov
xor
add
loope
pop
repz
sub
push
push
enter
pop
insl
pop
repz
cmpsl
pushl
push
xchg
mov
test
mov
dec
ljmp
daa
lea
mov
adc
leave
movb
xchg
inc
xor
push
stos
loopne
pop
idivb
cltd
sbb
inc
jl
rolb
pop
push
inc
push
push
retw
pop
sar
push
cmpsb
dec
mov
or
fcomps
jb
fsts
push
fdivl
mov
jp
xchg
mov
mov
or
mov
pop
ljmp
jmp
cwtl
inc
cs
filds
aaa
ss
popf
fisubl
lods
cwtl
pop
push
push
addl
lahf
outsl
sbb
xlat
cwtl
ljmp
aad
test
sub
out
pop
and
out
push
xor
add
hlt
xor
aaa
das
inc
and
cltd
pop
push
and
jb
jae
in
mov
push
arpl
popa
push
enter
mov
jae
lret
cwtl
mov
xor
rcrl
xchg
sbb
xchg
cmp
pop
inc
lods
cwtl
push
pop
jmp
mov
test
int
pop
lds
push
xor
add
lock
out
push
mov
cltd
pop
adc
jl
aas
cwtl
pop
push
pop
cmp
push
dec
aas
jb
mov
jecxz,pt
daa
nop
or
mov
loopne
mov
jle
xor
sbb
cmp
fiadds
push
push
push
mov
aas
repz
fdivp
movsb
rorb
out
push
cmp
mov
cmp
out
cltd
loope
cli
jp
pop
xor
add
daa
adc
out
pop
fdiv
pop
cmpsb
test
addb
mov
pop
jb
in
mov
jne
nop
cmp
cltd
sub
aas
loopne
mov
add
hlt
inc
xchg
ret
aas
not
mov
xor
inc
cmpsl
pop
movsb
lahf
in
xchg
push
in
out
js
push
loopne
cmpsl
test
testb
out
adcl
imull
bound
xchg
jg
jp
jle
jle
stc
cltd
push
repz
adc
pop
inc
add
ljmp
pop
repz
cmc
adcb
int3
or
idivb
and
ficompl
pop
and
scas
cwtl
push
pop
loope
mov
xchg
stos
cltd
out
in
cmp
cmp
pop
jnp
ss
xchg
mov
aas
xchg
cmp
out
cltd
loope
push
test
arpl
pop
imull
das
adc
imul
ljmp
xchg
mull
lahf
adcl
pop
fcompl
cmp
mov
insl
aas
mov
ljmp
mov
je
and
lock
xchg
mov
add
lahf
or
push
aaa
cltd
xchg
mov
push
inc
pop
repz
xchg
movsb
cmpsl
jns
imul
mov
lock
jb,pt
adcb
les
pop
push
outsb
dec
insb
das
cmp
fiadds
ret
dec
pop
pop
aas
lea
jnp
sahf
hlt
cmpsb
test
aas
lea
dec
outsl
push
mov
outsl
js
jae
push
ds
cld
mov
jae
sbb
arpl
cltd
inc
jge
and
mov
aas
push
push
js
xchg
mov
test
push
ds
punpckldq
daa
add
jb
or
push
mov
insl
ss
je
lcall
movsb
push
repnz
js
test
data16
xor
or
lcall
sbb
cltd
mov
outsl
cwtl
jl
add
lahf
je
enter
into
sahf
popa
mov
sbb
mov
fnstenv
ljmp
pop
cwtl
std
adc
pmullw
xchg
pop
mov
loope
jl
int3
cmpsl
pop
cmpsb
xchg
sub
loopne
cmpsb
test
pop
mov
in
xchg
outsb
add
aaa
cmpsb
cmp
cltd
into
cmp
stc
or
jmp
jnp
jmp
outsl
mov
jmp
das
xchg
jmp
dec
cmpsb
push
popa
cmp
les
mov
jae
sub
cmpsb
cmp
insl
pop
insb
fiadds
fldt
adc
cmpsl
cmp
outsb
jns
pop
lods
cmpsl
xchg
sbb
or
cmpsl
ds
sbb
push
add
mov
xorb
repnz
inc
hlt
cmpsl
test
push
push
fs
ret
push
sub
sti
lock
dec
xchg
mov
cmp
out
xchg
dec
add
push
loop
pop
repz
adc
mov
int3
push
cmpl
mov
jnp
adc
mov
add
jns
jmp
dec
mov
push
lahf
cmp
test
loop
cwtl
inc
rcrb
jns
or
orl
cmpsl
lea
mov
mov
cwtl
push
loopne
test
jb
mov
cwtl
pop
cmpl
and
jg
das
cmpsb
pop
jo
jae
js
cmp
mov
inc
inc
mov
daa
jge
lret
std
fdivrs
sbb
xchg
mov
repz
or
xor
cmpsb
or
aad
mov
lock
mov
orb
jl
inc
sub
adcl
inc
ret
ds
lahf
mov
adcl
out
sbbl
pop
ljmp
jae
mov
cltd
or
aas
jae
hlt
xchg
add
pop
cmp
pop
or
jle
jae
fsubl
arpl
and
jae
popf
mov
dec
pop
insl
addl
cld
pop
sti
push
addr16
mov
or
test
int
push
mov
cmpsl
xchg
adc
pushf
jae
mov
fwait
inc
inc
js
xchg
jbe
data16
adc
xchg
andb
aaa
inc
mov
jmp
mov
mov
push
leave
push
jb
xchg
in
mov
insl
daa
lea
movsb
scas
movsb
movsl
pop
push
inc
pop
mov
outsb
prefetchnta
scas
inc
mov
mov
cltd
push
jmp
mov
test
xor
adcl
mov
jecxz,pt
das
xchg
in
mov
stos
cld
cbtw
inc
mov
mov
lods
xchg
imul
mov
lock
dec
push
data16
and
arpl
rcrl
aam
mov
arpl
pop
test
cld
push
inc
cwtl
inc
clc
mov
and
sbb
sti
incb
pushf
adcl
adcl
adc
push
fisttps
jb
inc
orb
jae
cmp
mov
xchg
mov
sbb
lock
xchg
sub
sub
jge
test
lret
lret
xchg
inc
or
cmp
cltd
jno
in
add
lods
pushf
data16
fstl
pop
push
pushf
lret
adc
mov
jle
dec
cmc
loope
scas
imul
bound
cltd
mov
addr16
push
int
cmp
call
test
in
addr16
shl
dec
dec
ds
test
push
sar
inc
sti
push
jp
cmp
cltd
out
xchg
icebp
cld
mov
xchg
sbb
or
mov
inc
sub
mov
xor
hlt
daa
jb
lret
mov
jg
mov
xor
leave
sbb
insl
jbe
clc
cltd
dec
push
mov
cmpsl
mov
sbb
pop
push
xor
inc
jg
dec
aas
jae
mov
lock
test
mov
and
arpl
push
shll
stos
cltd
fsubrp
jp
out
lea
mov
out
mov
popa
cwtl
mov
roll
fcmovu
pop
enter
mov
sbb
jmp
xor
xlat
sub
in
sahf
rcrb
cmpsb
bound
and
adc
pop
sahf
aaa
xlat
mov
aam
pop
xchg
cmp
jns
std
mov
pop
xchg
cltd
pop
ljmp
lahf
sbb
addr16
sub
dec
ljmp
jne
test
pop
int3
xchg
stos
cmpsb
fxch
test
sub
stos
cwtl
jno
pop
rcrb
xchg
adc
or
fiadds
fidivl
cmp
jns
inc
cmp
push
je
pop
pop
addr16
clc
xchg
pop
cmpsl
mov
enter
fadd
jae
and
popf
pop
pop
sub
cmpsb
adcl
test
aas
test
xor
negl
outsb
mov
jae
divb
mov
fs
jne
addb
pop
in
pop
cwtl
ds
notl
cmpsl
cmp
push
stos
std
inc
inc
adcl
dec
jae,pt
shrl
insb
fcomip
jmp
inc
jae
adc
sbb
loopne
roll
int
adcl
arpl
and
lret
fadds
lock
inc
rcrb
xchg
cs
or
test
mov
aam
pop
xchg
or
jb
sbb
mov
dec
loopne
mov
out
xchg
push
or
cwtl
jns
inc
or
lea
mov
jle
jae
inc
lock
push
es
ror
cmp
inc
sbb
cltd
ss
shll
inc
fisubrs
loope
scas
xorb
dec
pop
jb
shrl
data16
arpl
mov
daa
cmpsb
sbbb
aad
pusha
fldenv
stc
mov
inc
out
jae
xor
push
lea
pop
pop
ret
pop
mov
fiadds
cwtl
imul
and
flds
mov
sub
xchg
fsubs
imul
cmpsl
dec
push
dec
xchg
xchg
cmp
cwtl
mov
dec
sarb
cmpsb
out
cltd
mov
sbb
xchg
loope
aaa
pop
mov
rorb
sarl
shrb
fbstp
fcomps
call
adc
jno
int3
pop
test
frstor
popa
push
ljmp
mov
jb
mov
ljmp
das
xchg
enter
cmp
cmp
std
push
jb
pop
data16
mov
mull
or
pop
cmpsl
xchg
sub
cmpsl
icebp
dec
mov
mov
cwtl
iret
mov
mov
push
fstps
dec
icebp
ficompl
pop
xchg
or
mov
jae
cmpsl
imul
xchg
push
jne
out
mov
xchg
stc
or
jl
jmp
hlt
cld
mov
cltd
ljmp
subl
testl
and
inc
xor
jg
xchg
jae
xchg
fiaddl
jg
xchg
cmpsb
jb
out
dec
jge
pop
aas
xorb
push
aam
icebp
jo
addr16
rorl
mov
cltd
push
jmp
mov
cmpsl
iret
cmpsl
pop
cmp
test
pop
adc
popa
mov
push
outsl
pop
lahf
xchg
sbb
cs
cmpsb
and
cltd
dec
jl
or
idivb
cltd
push
push
push
mov
daa
repnz
notl
jo
xor
into
cli
cmp
cmpsl
das
jecxz
popa
mov
aam
mov
movsl
dec
lods
cwtd
out
xchg
ljmp
xchg
out
push
ds
jns
xchg
or
mov
xor
cmpsb
xchg
mov
cmpsl
ds
imul
lahf
mov
pop
out
movsb
mov
cmpsl
mov
getsec
xchg
sub
addr16
lea
daa
xchg
sbb
fdivl
popa
mov
outsl
and
js
mov
in
sahf
cwtl
add
insl
push
or
fmuls
daa
iret
mov
mov
mov
lret
xchg
jnp
dec
push
jl
fwait
sub
cmpsl
mov
outsb
outsl
sbb
daa
cmpsb
rcll
rol
pop
inc
xorl
mov
leave
lods
inc
push
int3
push
xor
pop
js
mov
mov
cmp
idiv
xchg
push
test
jg
xchg
jae
ja
scas
lahf
push
mov
rcl
inc
imul
and
push
mov
ljmp
js
dec
dec
sti
jnp
std
cmpsb
add
xchg
stc
xchg
mov
push
jns
pop
lock
inc
aam
pop
adc
cld
mov
sub
cld
in
insl
jge
jb
pop
add
lret
push
and
push
pushf
adc
fwait
pop
cmp
shll
sbb
xor
push
cmpsl
icebp
ss
stos
cwtl
mov
clc
hlt
dec
adc
mov
dec
in
cmp
notl
sti
std
dec
jno
push
outsl
inc
in
sbb
push
jb
xor
rclb
popa
mov
jecxz
cmp
adc
aas
jle
loope
add
popa
dec
cwtl
jo
leave
xor
push
cmp
cmpsl
mov
or
xor
sub
cmp
mov
cmpsl
xchg
lahf
jns
lret
jge
cmpsl
mov
popa
les
cwtl
mov
mov
and
pop
or
dec
lret
jmp
push
and
pop
jecxz
icebp
push
loope
push
pop
insb
out
mov
push
aas
loope
mov
icebp
inc
cmpsl
pusha
or
std
mov
adc
sbbl
push
jecxz
inc
ljmp
pop
icebp
xchg
lret
xchg
xchg
dec
push
insb
push
js
mov
cmc
aam
ss
xchg
lock
ljmp
dec
dec
mov
jl
push
std
or
repz
jae,pt
mov
push
loope
cmpsl
lea
outsb
data16
add
ljmp
test
lret
cli
jb
mov
push
jae
sbb
std
cmpsl
xlat
cmp
mov
loope
gs
loope
cmpsl
xchg
lret
shll
push
mov
sbb
insl
pop
pop
ljmp
mov
outsb
xchg
or
add
cwtl
inc
imul
sahf
xlat
jmp
sbb
daa
ds
push
jae
iret
mov
inc
outsb
jae,pt
jmp
xor
jae
xchg
inc
mov
mov
inc
jno
push
dec
inc
out
popa
out
hlt
push
fprem1
out
push
ret
push
add
cli
mov
pop
jb
outsl
stos
sub
lret
test
mov
cmpsb
xchg
call
js
push
pop
insl
icebp
pop
pop
js
cli
loope
daa
xchg
sbb
add
jb
cmc
test
cmpsb
shrl
cmpsb
mov
cmpsl
cwtl
test
repz
push
aam
mov
jl
pop
jl
call
out
dec
push
bnd
cltd
dec
push
aas
arpl
cltd
gs
aaa
dec
jecxz
push
or
push
push
jb
mov
mov
in
mov
in
lock
pop
cmpsl
mov
inc
jne
pmulhuw
cmpsl
ja
pusha
jb
push
arpl
mov
cltd
push
test
ljmp
xchg
imul
inc
jo
lea
fs
add
sbb
and
addr16
xchg
in
jbe
sbb
push
ret
jae
mov
orb
mov
mov
push
repz
xchg
aam
cltd
lahf
outsl
push
movhps
adc
push
ret
fildl
out
xchg
push
push
fidivs
stos
cwtl
repz
add
in
icebp
push
jns
adc
pop
jge
movsl
push
mov
fsubs
mov
adc
lds
inc
cli
lods
cltd
pop
jo
mov
pushf
mov
jle
sub
fmull
ret
rorl
pop
push
adc
cmpsb
mov
psraw
xchg
sbb
pop
imul
cmpsl
repnz
jle
mov
mov
jl
pop
notb
mov
cmpsl
cmpsl
mov
pop
popa
cwtl
inc
push
mov
dec
push
lret
pop
mov
js
lret
jb
xchg
xlat
fadds
notl
aaa
lods
or
cmpsl
mov
mov
jbe
cwtl
push
test
adc
fs
pop
out
fcomps
xchg
xchg
xor
jbe
int3
sbb
push
pop
imul
out
mov
cmp
les
pop
stos
push
mov
mov
dec
divb
mov
mov
xchg
movsb
push
cmpsl
jge
packuswb
sbb
dec
or
lahf
lods
and
sahf
adc
loop
xor
popf
adc
mov
xor
cmc
subb
out
mov
push
add
adc
rorl
sbb
rorl
or
push
and
or
aaa
icebp
xchg
nop
sub
int
xor
in
mov
nop
sbb
nop
es
mov
cs
mov
push
jp
or
lods
or
icebp
push
adc
lock
rcrb
es
lds
push
bswap
cs
sub
jp
or
cli
xchg
and
loope
sub
xchg
lcall
xchg
add
xchg
pop
sahf
int
scas
and
test
cmp
mov
sub
addl
cmc
mov
das
ljmp
add
jmp
or
cmpsb
and
fistps
or
pop
sub
and
scas
out
mov
push
adc
xor
mulb
add
rorb
sub
xchg
pop
jnp
sub
repz
adc
shlb
add
cs
sub
pop
jp
sbb
out
mov
xor
mov
daa
js
and
sahf
and
hlt
xchg
xor
enter
icebp
sbb
aaa
ljmp
sbb
mov
les
sub
int3
sbbl
xor
mov
sbb
loop
sub
rclb
pop
jbe
push
sbb
and
scas
std
mov
add
stos
xor
dec
addb
mov
scas
hlt
pushf
or
jmp
lods
fcoml
int3
shrb
fists
adc
mov
insl
cmc
adcb
mov
test
mov
mov
scas
fsts
xchg
push
icebp
or
pop
into
das
fdivrs
or
cmp
inc
lcall
cmc
cmpsl
dec
into
aad
pop
pmuludq
and
ret
add
sbb
sub
xchg
add
and
and
out
push
push
push
out
ds
sbb
cs
in
stos
mov
mov
xchg
sbb
lods
adc
cli
mov
inc
nop
add
jle
sub
stc
xchg
mov
cld
mov
xor
cmc
mov
sub
orb
pop
stos
xor
stc
insb
xchg
ds
mov
repnz
lods
and
add
adc
mov
lahf
ja
scas
sbb
subl
add
lcall
lret
lea
aaa
cmp
or
pop
inc
xor
mov
pop
or
push
popf
nop
std
adcb
mov
push
das
into
lcall
loopne
push
stos
fadds
xchg
lock
jne
pop
xor
jg
and
and
add
xor
in
mov
fisubs
add
rcrl
add
dec
push
xor
sub
fdivrl
mov
pop
cmp
pop
push
sbb
mov
pop
je
add
push
jmp
xchg
aas
mov
fmuls
xor
repz
fdivs
test
daa
in
or
out
add
jmp
mov
cmp
mov
xor
daa
hlt
xchg
pop
mov
clc
adc
cltd
subb
fwait
mov
ljmp
push
adc
cmp
ljmp
fcomps
jmp
mov
ds
and
add
aas
dec
jmp
cltd
bound
test
movsl
xor
adcb
daa
add
test
xorb
add
push
pop
pop
stos
out
daa
pop
push
jae
sbb
pop
pop
mov
aam
dec
push
jae
add
or
mov
adc
push
inc
xchg
ljmp
cmp
xor
in
cmpsl
inc
in
outsb
lahf
or
ja
cmp
xchg
sub
pop
stos
mov
dec
mov
pop
adc
aam
pop
push
pop
add
out
in
xor
test
sbb
pause
pop
and
pushf
fisubrl
jmp
bound
out
ficomps
imul
push
ds
xchg
repz
jp
dec
jbe
rorb
push
inc
jge
iret
inc
jns
lret
nop
fs
pop
pusha
mov
pop
scas
mov
fsts
and
xchg
inc
and
popf
dec
das
cmpsb
cltd
dec
sub
adcb
scas
pop
cmp
mov
jp
mov
addr16
cmpb
or
mov
js
nop
scas
jl
xchg
stos
add
add
rolb
insb
jecxz
or
imul
jp
stc
rclb
lock
sbb
hlt
lret
and
mulb
inc
iret
repnz
dec
ret
scas
sub
stc
cs
jp
fchs
xor
sbb
out
cmp
aam
cli
xlat
sub
les
and
lret
test
scas
into
stos
cmp
jp
cmp
or
push
xor
loopne
or
in
nop
xor
mov
ds
pop
add
test
and
lret
mov
lods
and
or
scas
mov
xchg
das
pop
enter
xchg
sub
loope
adc
das
nop
cmc
loope
adc
and
mov
stos
ret
sub
adc
mov
push
inc
stos
jge
bound
jnp
and
test
mov
lret
movsl
and
ds
and
call
dec
shrb
je
jbe
sub
sub
inc
pushf
cmpsb
adc
arpl
or
cwtl
xor
loopne
cmp
xchg
mov
or
stos
std
pop
ss
xchg
add
insb
mov
fucomip
sub
inc
sub
pusha
dec
idivb
je
or
int3
enter
push
and
and
jbe
ds
jae
rorb
and
push
addr16
das
scas
test
inc
push
test
test
dec
adc
loopne
adc
in
ret
daa
addr16
sbb
mov
cmpsb
pop
add
sbb
xor
push
je
inc
inc
pushw
mov
pop
push
xchg
xchg
test
jns
les
cmc
lahf
dec
xchg
add
mov
popa
mov
add
shlb
sub
and
inc
rcrb
lds
push
mov
dec
jnp
fdivrs
punpcklwd
sbb
lret
jl
or
jl
cli
les
lds
mov
rclb
dec
mov
sub
mov
sbb
rolb
cmpsl
fldenv
cmp
add
test
adc
roll
or
sub
ja
sub
jecxz
hlt
lret
cmpsb
ss
sti
es
push
inc
pop
movsb
adcb
std
xor
fs
add
out
mov
inc
mov
and
addb
or
push
test
cmp
push
data16
mov
jbe
fadds
ja
loopne
mov
aad
dec
cltd
mov
cli
gs
scas
mov
add
mov
or
cltd
vmread
sti
imul
jp
out
adc
dec
js
fidivrs
dec
int
cmpb
test
pop
jne
push
test
jo
push
cmc
or
adc
and
mov
clc
jae
mov
inc
sti
cmc
dec
sub
jge
lret
aam
jnp
push
and
mov
mov
test
test
movl
push
sbb
sub
cmp
std
xchg
jmp
hlt
lds
cld
xchg
inc
jnp
leave
imul
xchg
in
mov
pushf
daa
shll
jge
sarb
push
subb
inc
xlat
dec
std
xchg
je
xchg
pop
or
sti
insb
push
mov
push
dec
push
repnz
add
int
pusha
push
pop
cld
push
lods
dec
xchg
sub
pop
sub
jns
loope
loopne
mov
stc
dec
gs
lahf
test
cltd
pop
nop
loopne
xchg
mov
pop
pop
cmc
nop
push
cwtl
fsubs
idivl
incb
xlat
cltd
mov
repz
in
imul
cmpsl
mov
jle
test
lock
sub
or
sti
xchg
or
orl
push
mov
fsubp
push
add
leave
loope
sarl
or
xchg
hlt
push
fisttpl
mov
loopne
aad
stos
int3
pop
cmpsb
lock
dec
jb
out
adc
fimull
xlat
push
data16
push
aad
pop
push
cmp
shl
lods
inc
rorb
shll
adc
mov
add
jne
aaa
repz
xlat
outsb
jp
insb
ret
lods
cs
jmp
int3
push
stc
mov
xor
mov
out
leave
sti
fcoml
popa
test
cmp
jbe
mov
movb
and
stos
mov
inc
arpl
fs
hlt
push
das
lcall
jmp
mov
lds
sbb
out
and
mov
xchg
push
mov
aam
push
loopne
sub
push
ror
or
call
dec
jne
dec
mov
xchg
js
mov
test
lahf
jno
push
xchg
xchg
lea
cmpsl
ss
or
push
xor
cmp
adc
dec
fneni(8087
cli
cmp
out
or
sub
in
jae
push
cltd
adc
pop
sbb
mov
lods
inc
xor
sti
jg
jo
sub
hlt
pushf
push
dec
cmpsb
sti
push
pushf
cld
test
rorl
sti
popl
es
lea
insb
sbb
mov
rorb
mov
adc
hlt
inc
scas
inc
outsb
sti
insb
adc
inc
mov
imul
xlat
daa
int3
push
mov
pop
dec
mov
xor
or
adc
dec
sbb
dec
cmp
and
dec
pop
and
in
push
xor
aaa
je
sub
push
stos
in
push
ret
xchg
js
sub
adc
out
cmp
mov
cwtl
imul
mov
mov
imul
jno
fwait
mov
fwait
xor
inc
push
shl
lahf
mov
mov
push
ja
mov
ret
sti
mov
jnp
adcl
jp
das
pop
loopne
out
cmp
jbe
xor
xchg
and
in
out
pop
mov
cmpsl
fcom
pop
das
xchg
movsb
mov
ret
adc
mov
fstl
sub
call
sub
arpl
cmpsb
jecxz
call
inc
aam
mov
outsl
adc
lds
pop
test
jae
inc
push
push
negl
mov
lods
icebp
int3
jp
outsl
into
jg
push
stos
jge
ret
bound
outsb
xor
sbb
mov
test
arpl
sub
cs
ss
aam
cld
add
xchg
iret
imul
push
adc
sbb
xor
adc
mov
jmp
cli
cmc
sahf
outsl
xchg
mov
mov
mov
mov
add
ljmp
xor
hlt
test
jle
jb
mov
jmp
je
fadds
xchg
inc
dec
add
aam
aas
cs
xor
aad
js
xchg
jg
mov
out
pop
sbb
loopne
push
mov
and
push
sub
push
add
pop
sub
jo
cs
fistl
or
push
ss
test
jnp
xchg
addr16
subb
jge
push
js
mov
or
push
pop
mov
mov
sbb
fwait
sete
test
add
mov
cs
add
pop
inc
gs
enter
mov
push
push
rorb
push
aas
and
mov
mov
fnstcw
cld
lods
std
pusha
push
out
cmp
cld
mov
mov
je
or
push
cmpsl
mov
js
data16
push
mov
xor
cmp
push
push
test
xor
jb
or
cmp
push
jbe
jno
sub
addr16
and
sbb
js
test
das
pop
push
ljmp
rcll
sahf
leave
stos
dec
push
adc
movl
fs
int
sub
bound
xchg
sahf
daa
xchg
mov
jmp
loopne
inc
mov
mov
movsb
mov
xchg
jo
pop
xor
cmp
add
movsl
roll
in
mov
pushf
les
lret
ds
std
outsl
cmp
or
js
dec
jne
xchg
sbb
scas
je
ret
pop
xor
fs
pop
push
mov
je
adc
pop
lds
inc
dec
push
cmpsl
jne
pop
jge
and
fs
xor
mov
test
pop
js
shr
pusha
adc
xchg
scas
leave
push
incb
pop
xchg
lods
xor
add
ss
xor
pop
add
mov
test
js
xchg
cmp
mov
adc
pop
loopne
rcll
adc
mov
cwtl
pop
aaa
ficoms
mov
rorb
adc
lcall
aam
popa
movsb
dec
inc
mov
stc
cmpsl
loop
test
mov
faddl
sub
lock
push
xchg
sti
lods
mov
jmp
push
sbb
mov
push
aad
or
mov
stos
mov
out
adc
dec
or
mov
jae
mov
mov
sbb
and
push
sti
movsb
gs
mov
out
je
pop
shll
or
cmp
mov
out
adc
pop
cmpsl
add
aad
aam
inc
fidivs
xor
fcmovnu
pop
mov
fstpl
pop
or
int
mov
push
loop
jge
cmp
dec
adc
outsl
jecxz
repnz
cmp
mov
dec
arpl
in
cmp
push
add
cmp
mov
sti
in
dec
outsl
inc
add
jne
mov
mov
sub
mov
out
dec
mov
mov
in
mov
push
inc
jo
dec
cwtl
ja
daa
sti
das
mov
or
out
mov
fcoms
mov
xchg
sbb
cltd
inc
pop
loopne
into
adc
push
pop
leave
mov
cmp
inc
cmp
imul
inc
fwait
adc
cld
inc
mov
mov
push
stos
cld
int3
or
inc
stos
mov
psrlw
mov
inc
fiaddl
mov
pusha
in
jnp
push
fistl
ret
xorb
cmp
fsub
scas
mov
mov
pop
xchg
bound
std
imul
pop
fnstcw
ss
mov
cwtl
ret
push
pop
jp
fmull
imul
test
insl
inc
or
push
mov
or
gs
test
shlb
jmp
lahf
xchg
xchg
insl
jns
push
test
pop
mov
mov
cld
rcrl
adc
adc
ljmp
gs
add
push
fmulp
jne
enter
push
fldenv
xor
shll
fmulp
and
jne
sbb
xchg
insl
arpl
iret
scas
add
cmp
sub
cwtl
xchg
adc
shl
std
out
arpl
jmp
fidivl
jmp
stc
clc
xor
sub
mov
in
mov
mov
jae
cmp
outsb
fwait
mov
pushf
inc
in
dec
adc
ja
mov
inc
int
mov
xor
adc
pop
movsb
mov
mov
clc
add
pop
ljmp
inc
testl
mov
dec
sbb
leave
cmp
inc
mov
fs
test
sub
pop
test
test
xor
or
mov
push
jge
xor
push
jle
pop
data16
aas
sbb
popf
inc
daa
adc
jg
ja
push
cmp
add
mov
cmp
sbb
cmp
add
mov
loope
ret
xchg
lods
mov
movsb
pop
test
push
mov
insl
cmp
sbb
or
lret
lds
mov
xor
pop
push
inc
pop
lret
sti
arpl
inc
mov
popf
xor
fsubs
dec
data16
in
lret
mov
mov
pushw
cmp
fwait
mov
xor
mov
fidivrs
mov
lahf
inc
jne
xor
into
sbb
xor
and
fistpl
dec
test
repz
mov
inc
popa
leave
and
push
mov
test
lret
out
mov
add
lods
push
in
cmp
sbb
jle
cmpsl
loopne
ss
int
movsb
jp
pop
iret
lds
stos
daa
lcall
sbb
push
xor
mov
mov
xchg
dec
rorb
and
xor
cmp
xor
fcmovnbe
cld
inc
daa
or
negl
in
cwtl
iret
out
scas
dec
nop
push
and
mov
dec
ss
mov
xlat
jbe
or
fmuls
pop
pop
cld
or
rcl
push
mov
lea
mov
fisubl
in
pushf
xor
loopne
jnp
out
cmc
sbb
cwtl
mov
mov
mov
pushf
cmc
ss
push
xchg
xor
sahf
mov
xor
insb
cs
inc
xlat
xor
pop
dec
sbbb
jne
jbe
dec
mov
scas
nop
push
or
inc
bound
arpl
adc
jmp
pop
sub
jae
mov
repz
shll
push
xchg
mov
repnz
jl
push
std
jle
out
xchg
rolb
decl
shlb
sbb
cmc
aad
jo
insb
mov
pop
sub
jp
pop
push
dec
adc
arpl
inc
fldenv
popf
mov
scas
push
je
inc
jp
or
mull
lds
jae
and
movl
push
arpl
fwait
aam
into
sub
inc
jb
lret
fwait
push
sbb
or
push
xchg
adc
push
mov
dec
xor
bound
mov
and
adcl
jmp
xchg
xor
aas
adc
push
sbb
xor
sbb
mov
imull
adc
xor
pop
add
aaa
dec
mov
mov
mov
push
add
ja
dec
dec
lods
push
fcoms
dec
sub
in
addl
push
gs
adc
ja
ret
jbe
sbb
pop
mov
mov
jnp
push
pusha
testb
aaa
sbbb
popa
mov
int
xor
int3
mov
sub
pop
pop
das
out
pop
add
inc
sar
mov
out
cmp
test
jmp
push
daa
aaa
mov
daa
inc
inc
mov
sub
add
scas
in
aad
inc
push
add
jnp
adc
xchg
jmp
pop
pushf
xchg
cs
fldl
mov
mov
mov
iret
xchg
sub
add
pusha
push
xchg
scas
mov
ret
in
out
insb
in
faddl
in
mov
pop
ficoms
mov
xlat
push
pusha
pusha
fwait
xlat
js
or
xor
mov
mov
es
mov
cmp
mov
mov
add
xor
mov
mov
les
add
push
int3
xchg
jne
cmp
push
xchg
in
loop
clc
jnp
leave
outsl
mov
pop
cltd
xchg
or
shr
js
mov
push
mov
imul
imul
xlat
push
add
xchg
xor
add
movsb
mov
fsubr
sbb
cmpsl
add
test
les
call
lods
xlat
or
rcll
addr16
aaa
add
cmp
ss
mov
ficompl
mov
and
or
in
mov
push
xchg
cli
out
add
add
and
push
adc
in
inc
push
arpl
jae
xor
imul
pop
pop
jne
bnd
adcl
dec
dec
sti
imul
xlat
dec
mov
mov
mov
dec
addr16
aam
popa
cmpsb
xor
mov
jno
fs
mov
mov
call
dec
test
imul
js
aam
lds
ret
aam
pop
ret
pop
int
popl
mov
psubq
mov
out
fistpll
dec
shrb
popa
cltd
int3
mov
gs
jnp
sti
jae
and
pop
sahf
loop
push
ds
xchg
cmp
push
push
inc
jne
insb
in
sahf
ret
in
pop
mov
inc
cs
ljmp
xchg
adc
mov
mov
imul
dec
mov
lock
loop
inc
and
mov
and
repz
push
pop
jno
xchg
xchg
sarl
add
pop
mov
test
inc
push
mulb
pop
mov
lcall
xor
and
inc
pop
aam
ds
mov
pop
je
push
pop
pop
aas
ds
aam
cmp
pop
lea
loope
jl
cmpb
in
sahf
nop
cmp
or
mov
and
mov
cmp
scas
and
and
push
mov
pop
mov
enter
rcrb
mov
cld
pop
inc
xor
lea
sub
mov
imul
sti
ss
pop
xor
and
xchg
xlat
call
gs
lret
out
push
add
add
mov
jmp
mov
mov
ret
pop
cmp
pop
and
push
xlat
and
lret
shrl
mov
rcrl
mov
adc
mov
sbb
push
mov
jb
loopne
in
shl
push
lahf
test
das
push
or
ret
call
inc
sub
out
mov
jl
out
ljmp
xchg
push
insb
push
fcompl
push
push
mov
pop
dec
add
inc
pop
mov
cmp
dec
insb
and
data16
sar
mov
es
jecxz
in
fsubr
scas
mov
mov
insl
mov
divl
mov
mov
jmp
mov
andl
dec
repz
pushw
out
pusha
xlat
fcomps
ror
mov
push
mov
add
nop
aam
test
mov
inc
cmp
cmpsb
push
fs
daa
jo
pop
fcompl
pop
mov
mov
cmp
ss
jne
push
dec
fcoml
sarb
shlb
cwtl
sbbb
xchg
nop
aam
adc
mov
inc
sbb
fmuls
or
out
sbb
mov
je
xor
out
jmp
inc
in
mov
jl
xorb
pop
lock
js
in
xchg
and
ljmp
sub
sbb
mov
adc
stc
jae
and
sahf
pop
arpl
adcl
sub
push
scas
mov
pop
xchg
jbe
mov
or
rcrb
cmp
aad
sbb
mov
fs
push
in
xchg
lock
pop
mov
push
mov
es
pop
in
in
push
inc
aas
fnstenv
pusha
lahf
jnp
mov
pop
pop
js
cmp
pop
cmp
mov
pusha
nop
call
cmp
mov
mov
sub
mov
cmp
push
pusha
push
mov
ret
mov
inc
sbb
mov
mov
repz
cbtw
cli
cmpsb
out
pusha
aaa
mov
xchg
sbb
jbe
in
mov
ljmp
nop
std
hlt
pushf
push
or
jne
inc
push
mov
dec
fldl
es
in
lock
bound
fdivl
pop
imul
mov
and
rcrb
out
and
cmp
js
js
jmp
dec
and
adc
mov
mov
adc
data16
lock
mov
adc
inc
fcoml
mov
scas
sbb
mov
sub
cld
into
js
cs
jl
mov
cs
fadds
lods
cs
and
dec
pushf
xchg
xlat
pop
and
dec
setle
sub
ljmp
fisubrl
jbe
and
inc
xchg
inc
stos
and
and
xlat
inc
les
jg
adc
inc
mov
pop
out
cs
mov
push
xor
scas
aam
xor
and
push
add
xor
bound
pop
xchg
jmp
and
sahf
mov
cmc
popl
mov
cmp
gs
cmpsb
and
sub
nop
inc
pop
stos
mov
mov
shlb
enter
in
dec
nop
cmp
cld
lea
add
scas
inc
cmp
mov
pop
mov
and
cmc
push
or
aam
test
pop
scas
push
jb
jl
mov
dec
mov
fsubrl
cmp
jle
push
clc
mov
ds
dec
or
test
adc
test
jp
pop
fcmovb
fcoml
add
add
mov
jmp
sahf
xchg
mov
imul
cli
out
out
inc
call
rcrb
inc
imul
popl
fdivl
ret
and
sbb
mov
imul
lods
repnz
pop
icebp
or
xor
inc
fwait
inc
imul
es
andl
and
xor
fdiv
pop
jle
jmp
dec
loope
cs
fsubrl
bound
inc
pop
cli
push
mov
cmp
and
pop
mov
adc
sahf
jo
das
out
mov
int3
mov
shl
bound
and
ljmp
cmp
and
out
pop
das
shr
xchg
or
push
mov
xor
pop
icebp
or
and
lods
aas
sub
loopne
movsb
and
pop
jle
adcl
xor
add
dec
shlb
test
push
test
dec
push
rcll
adc
loope
lcall
cmp
mov
inc
sub
cli
inc
inc
out
sbb
hlt
mov
inc
adc
movsl
fs
push
fwait
and
dec
adc
scas
inc
lods
aaa
je
jp
mov
pusha
cld
ja
push
shl
lahf
fs
hlt
lock
rcll
or
push
dec
adc
ss
inc
cmp
jle
xchg
jae
data16
inc
cli
scas
and
inc
or
filds
in
cmpsb
adc
les
or
add
inc
lret
jle
xor
adc
rcr
imul
out
add
or
stc
mov
iret
lret
cmp
add
cwtl
test
mov
mov
dec
or
sub
push
mov
daa
adc
pop
ret
cmp
addb
inc
inc
out
xchg
pop
ret
ret
xchg
mov
clc
pop
push
push
push
decl
mov
lret
pusha
mov
je
and
cld
sbb
test
cld
xor
mov
pop
xchg
mov
lods
jne
mov
insb
mov
xor
je
popa
xor
ds
nop
movsb
inc
loopne
inc
shr
aam
jae
sahf
xor
loopne
ret
dec
loope
pop
scas
ds
pop
es
testl
jae
loope
push
cmp
jno
insl
adc
and
jae,pt
xlat
dec
rcrb
aam
ret
mov
subl
lods
push
adc
ds
into
xchg
movsb
add
pop
adc
cmp
bound
test
sub
pop
pop
pushfw
xchg
cwtl
push
mov
jbe
mov
or
test
sbb
sbbb
ret
inc
push
cmovb
scas
or
cwtl
push
lods
fwait
push
xor
mov
movsb
int3
xor
jmp
mov
loope,pn
outsl
mov
mov
fstpl
mov
jb
out
je
stos
jg
cli
mov
fmull
lock
sahf
nop
int3
pop
adc
inc
xchg
fcom
mov
cmp
mov
shlb
jae
push
push
cs
xchg
xchg
in
pop
test
push
add
xor
or
mov
aam
jge
shrl
push
ret
xor
clc
sbb
call
xlat
pop
jnp
in
push
push
test
dec
jg
inc
jne
daa
sub
outsb
das
and
imul
and
xchg
push
repz
add
adc
and
inc
filds
jbe
stos
sbb
mov
roll
mov
clc
les
pop
fcomps
sbbb
jmp
sbb
sub
sahf
subb
std
out
or
ss
cmpb
bound
push
movsl
stos
cli
mov
icebp
push
jo
iret
fidivrl
jg
cmpsl
push
jb
test
fistps
sahf
cltd
pusha
fsubrl
rorb
inc
faddl
loop
cwtl
mov
mov
mov
mov
test
or
pop
mov
adc
pop
mov
mov
rolb
push
movsb
jp
mov
xchg
mov
rorb
mov
ljmp
jbe
push
je
mov
and
mov
mov
pushf
dec
ret
sub
nop
dec
clc
iret
inc
cmpsb
loope
adc
mov
movsb
push
sub
mov
mov
fimull
into
out
xor
pop
sbb
rcrb
xchg
push
inc
xor
outsb
adc
fnstenv
inc
aaa
into
mov
sahf
test
int
and
push
outsl
loopne
orb
pop
xchg
sub
jne
popf
xor
jns
pop
pop
out
inc
negl
or
enter
fidivl
and
xor
stos
mulb
adcl
inc
int
hlt
cmpsb
sbb
iret
sub
dec
xchg
pop
scas
jo
cmpsb
or
fcompl
dec
nop
jb
sub
mov
push
je
in
sub
das
sbb
mov
lahf
sub
mov
test
fsubs
push
cwtl
sarb
cmpsb
push
dec
push
mov
sbb
mov
je
ffreep
sarb
jecxz
int
push
add
inc
sub
nop
jl
push
xlat
fs
pop
dec
and
inc
jmp
mov
imul
arpl
and
icebp
scas
les
dec
jg
push
cmpsb
mov
dec
cmp
push
lods
xchg
or
out
inc
push
mov
or
hlt
rcl
fwait
aam
mov
jl
stos
orb
imul
mov
add
push
inc
inc
mov
xchg
repz
subb
jns
ja
repnz
jmp
fs
pusha
rolb
xlat
mov
mov
repnz
sub
outsb
cmpsb
loop
sub
pushf
sub
pop
imul
xchg
cmpsl
cmp
sbb
test
call
and
rorb
fisubrl
enter
ret
mov
xchg
sbb
pop
adc
jne
mov
gs
push
mov
adc
inc
lret
jns
lods
ret
mov
sub
dec
jmp
jge
xchg
inc
dec
push
iret
shrl
imul
cmp
scas
in
das
sahf
imul
stos
fildl
xchg
pop
or
sbb
aaa
sbb
and
nop
push
push
xchg
pop
sub
adcl
sbb
push
stc
addr16
inc
pop
sbb
adc
and
xchg
sbb
xchg
adc
addl
xchg
xor
xchg
outsb
push
mov
popf
mov
neg
jmp
mov
xchg
dec
inc
sbb
nop
push
push
test
or
notb
pushf
sub
cmp
fisubrl
out
push
leave
nop
sbb
inc
push
xchg
fdivrs
push
mov
pop
test
mov
mov
daa
testb
test
aas
xchg
cmp
ljmp
mov
xor
add
pop
xchg
mov
xchg
mov
jecxz
repz
lret
fdivr
jmp
mov
ds
aam
les
push
mov
aam
notl
popa
out
jg
lcall
xchg
shll
daa
dec
or
mov
mov
data16
ljmp
mov
xor
enter
std
xor
xchg
pop
pop
mov
or
lea
daa
xchg
or
mov
cmp
ljmp
mov
xor
pop
inc
aam
cmp
mov
aaa
pop
mov
and
fwait
mov
incl
out
push
push
aas
dec
cmp
ljmp
mov
xor
loopne
movsl
loope
int
xor
repz
subb
ljmp
and
mov
loopne
pop
cmp
test
loopne
out
fwait
rorl
inc
mov
adc
push
dec
xchg
mov
jmp
js
cmpsb
mov
rorl
fwait
aam
insl
lahf
rorb
mov
pop
mov
adc
pusha
addr16
movb
aas
in
pop
adc
shr
cmpsl
push
adc
adc
fnsave
or
in
mov
pop
mov
mov
push
dec
dec
mov
fdivl
jne
aaa
push
addr16
gs
or
cmp
repz
dec
movsl
mov
push
imul
pop
mov
cmp
mov
sub
aas
std
les
push
outsb
ret
in
je
cli
mov
lahf
xlat
mov
movsb
cltd
mov
sub
stos
lcall
adc
cld
addb
add
repz
popa
scas
mov
cs
ror
daa
sub
sahf
imul
mov
ds
sarl
js
insb
mov
int3
lods
int3
mov
clc
mov
test
push
int
dec
adc
sbb
sbb
xor
jae
jmp
idivl
out
sarb
scas
cmp
mov
mov
leave
cwtl
adc
push
and
or
or
dec
mov
xor
mov
pop
xchg
push
out
pop
sub
add
andb
xor
dec
cwtl
mov
das
dec
lds
xor
mov
lahf
mov
pop
movsl
fistl
jns
cmp
cmpsl
fs
xchg
xor
xchg
xor
addb
cltd
sbb
cmpsb
pop
mov
aaa
lcall
sub
lods
addr16
mov
add
xchg
movsl
test
xor
es
push
xchg
mov
imul
js
push
dec
aas
add
sbb
call
adc
and
stos
mov
ffree
ss
and
xor
dec
pop
repnz
jecxz
jmp
cmp
fsubs
jae
aad
insb
dec
shrl
xor
mov
or
cmp
stc
pop
aad
adc
push
pop
repz
sub
cli
pop
dec
dec
or
test
adc
aas
jo
sahf
cmc
into
orl
pusha
int
sbb
jge
cmp
ret
dec
cmp
orl
sti
jnp
lods
enter
mov
sbb
mov
jmp
scas
xchg
pop
mov
imul
push
enter
shlb
push
cmc
xchg
adc
sbb
je
push
dec
fbld
add
mov
add
inc
xor
pop
and
shll
out
mov
nop
push
shl
sbb
movsb
out
inc
dec
mov
dec
push
dec
mov
pop
add
xor
les
jb
pop
mov
xlat
xor
packssdw
out
icebp
adc
jno
jns
cmp
xor
mov
inc
ss
or
fs
dec
in
ss
gs
inc
lret
dec
push
mov
dec
mov
lret
and
les
ss
inc
fstp
sub
cli
mov
clc
imul
push
stos
xor
add
pusha
sub
in
sbb
cmp
and
loop
add
jp
xchg
inc
xchg
data16
mov
pop
xlat
mov
mov
popw
cs
test
es
popa
out
imul
fldcw
popa
aaa
dec
jns
mov
mov
je
cli
hlt
adc
inc
add
or
sub
mov
cmp
jl
cmp
adc
enter
mov
pop
cli
rclb
xchg
xor
cmc
pop
push
jmp
sub
nop
lret
cmp
cmp
sub
aam
fsubl
test
out
pop
and
ret
pushf
in
sub
pop
xchg
adc
stos
cmpsb
aas
cmp
mov
or
xor
adc
dec
xchg
inc
leave
cmp
movsl
loopne
into
pop
and
ret
mov
push
dec
mov
sub
sbb
enter
shll
repz
push
data16
jbe
xchg
push
jp
int
fstpl
mov
scas
xor
out
jp
stos
inc
fsin
into
ficompl
jnp
mov
in
xchg
jp
test
aam
push
inc
jo
pop
dec
jmp
dec
jmp
adc
mov
sub
pop
fistps
enter
xor
int
lock
dec
mov
cli
sub
jp
adc
sbb
sarb
push
push
push
cmp
xchg
mov
mov
cmc
push
jp
daa
ret
pop
lds
xchg
adcb
push
cmc
loop
jp
loop
mov
push
sahf
xor
pop
xor
jge
mov
call
sti
cwtl
int
bound
std
jp
fwait
xchg
mov
push
inc
dec
imul
jb
xor
enter
scas
sbb
add
adc
sub
gs
xchg
mov
jo
cld
jp
jecxz
mov
push
movsb
mov
into
inc
nop
scas
int
push
cmp
leave
and
sar
repnz
jnp
push
jbe
das
fdivrl
inc
ljmp
pop
push
mov
mov
test
add
sbb
lcall
sbb
stos
dec
fsubs
scas
sbb
mov
pop
adc
nop
jno
jo
dec
mov
xor
mov
xchg
xchg
sarb
lret
mov
int3
cli
lds
ret
inc
std
test
push
push
push
dec
ret
xchg
js
nop
into
mov
cs
and
sti
pushw
push
push
sbb
push
gs
push
ret
dec
lret
push
xchg
xchg
loopne
jecxz
jne
addl
nop
repz
jo
lods
pop
push
into
jne
stos
ror
sahf
cmp
fstpl
lea
push
adc
mov
std
pop
jae
int
add
jge
xchg
mov
loopne
xchg
scas
sub
test
ja
lret
jnp
adc
dec
test
cmp
scas
out
cs
js
push
jp
dec
testl
jns
or
stc
mov
cmp
mov
pop
mov
fcmovb
arpl
or
data16
test
outsl
push
jo
aad
and
decb
adc
lret
ja
dec
mov
out
divl
jnp
in
mov
out
mov
mov
ficoml
sbb
in
pop
jg
xchg
sbb
mov
add
sbb
xor
outsl
push
scas
pop
ret
pop
dec
outsb
in
sti
mov
imul
cwtl
jp
dec
daa
dec
test
push
clc
jnp
xchg
enter
nop
arpl
push
xchg
scas
cmpsb
or
out
jg
or
xchg
cmpsb
push
sahf
aas
les
inc
cmpsl
pushf
add
ret
add
mov
mov
mov
nop
clc
pop
pop
inc
popa
lret
mov
sbb
nop
jae
cmp
mov
mov
mov
clc
mov
movsb
push
test
nop
sti
sbb
or
sbb
lods
push
and
inc
jp
daa
lock
sbb
lods
ss
pop
movsb
mov
mov
pop
jle
pop
loopne
sti
mov
cmp
rcll
adc
inc
jne
fildl
fmul
push
pusha
dec
clc
sbb
jle
ljmp
out
jecxz
les
pop
sbb
inc
scas
out
inc
lds
jo
jp
dec
pop
pop
in
das
sbb
sbb
rcrl
hlt
imul
push
sub
and
fsubrs
or
cmpsl
xchg
add
and
add
pop
imul
stos
cmpsl
jge
cmp
out
dec
rol
mov
add
xchg
xchg
pop
jge
mov
mov
jp
sbb
es
jbe
xchg
jmp
sarl
push
push
xchg
addr16
jl
push
in
pop
enter
mov
call
sti
cmp
loopne
test
mov
outsb
mov
in
fdivrl
add
xchg
inc
adc
fisubrs
imul
icebp
std
mov
jne
imul
inc
mov
test
imul
loopne
aas
pop
repnz
push
jmp
push
adc
dec
or
xor
add
or
mov
xchg
mov
inc
ret
je
push
in
hlt
scas
add
cwtl
rcrl
push
test
push
dec
mov
test
jmp
icebp
popf
lds
mov
cmp
mov
ss
xor
ja
jno
jle
sub
push
fnstcw
push
pop
test
sub
mov
dec
dec
push
scas
sbb
dec
mov
mov
cld
stos
adc
add
cld
das
pop
jp
ficoml
mov
in
in
call
scas
jae
aas
addb
ret
repz
daa
shll
data16
test
fimull
cmp
mov
cltd
out
scas
outsb
jns
pushf
lock
mov
fcoms
sbb
nop
inc
pop
jae
add
adc
clc
push
outsl
jno
pushf
loop
data16
int3
insl
stos
jp
inc
sbbb
nop
std
jb
into
mov
or
mov
push
xchg
pop
in
sub
xlat
jno
cmp
push
xchg
rclb
mov
test
sub
mov
nop
je
sbb
mov
je,pn
mov
lods
push
sbb
or
inc
adc
add
pop
inc
arpl
fwait
add
scas
mov
and
cmc
mov
adc
xchg
inc
mov
cmpsl
pop
xchg
push
pop
lret
sbb
mov
inc
int
add
push
std
add
fdivrs
xchg
lahf
sahf
inc
pop
sub
test
sbb
popa
mov
xchg
pushf
or
cmp
into
enter
imul
scas
lcall
fs
out
jp
repnz
pop
xchg
mov
lcall
xor
mov
xchg
dec
test
mov
mov
repz
in
mov
dec
mov
mov
sub
rcr
mov
xchg
xchg
test
mov
push
mov
mov
jns
outsl
das
pusha
mov
cmpb
std
jl
test
sbb
add
jp
bound
xor
popa
add
xchg
and
ret
add
dec
xchg
movsl
push
addr16
dec
push
sub
cmpsl
xor
xchg
mov
sbb
shll
adc
xor
into
sub
jg
or
mov
leave
cmp
push
scas
mov
xor
insb
ds
pop
xlat
icebp
push
sahf
cmc
mov
ffreep
stos
cmc
lahf
and
push
dec
jb
dec
pop
pop
xchg
iret
inc
lret
or
add
sbb
js
mov
or
jbe
pop
mov
sbb
insb
dec
xchg
cmpsl
sub
sar
mov
xchg
into
cld
add
ret
or
shrb
and
xor
loopne
cmp
mov
stos
cltd
enter
xadd
jle
lcall
ret
jge
jns
push
mov
cmc
mov
push
mov
lcall
pop
dec
sub
inc
jnp
push
test
hlt
xor
adc
push
dec
jp
call
pop
lods
popa
add
and
sahf
adcl
lods
or
andb
movsl
pop
adc
xlat
gs
xchg
fwait
jp
xor
jge
lret
push
mov
mov
jnp
repz
xchg
daa
scas
jmp
mov
jb
subb
pop
aas
fildll
mov
lahf
jg
js
dec
mov
test
xchg
jno
adc
push
xlat
xor
nop
scas
test
scas
pop
js
xchg
push
ret
outsl
and
ffreep
push
cwtl
push
mov
and
sti
jne
rcll
push
mov
sbb
repnz
daa
pop
mov
cltd
insl
scas
test
mov
fadd
jecxz
jns
xor
bound
xchg
out
push
xor
pop
seto
push
pop
scas
rcrb
jecxz
add
mov
ds
cld
adc
aaa
lock
jo
dec
sbb
pop
or
lea
and
adc
mov
scas
sti
sbb
les
fwait
lahf
nop
inc
lcall
ret
scas
xlat
cli
sbb
mov
jle
and
or
jge
icebp
pop
incl
jnp
notl
sahf
orb
xchg
push
or
pop
jne
dec
aaa
mov
cmp
fnstenv
loope
sahf
insb
ljmp
je
lea
loopne
fcomp
push
pop
xlat
mov
push
mov
push
xchg
cmp
sbb
fs
sbb
dec
mov
jae
gs
xor
add
addr16
scas
xor
pop
insb
gs
push
adc
lods
daa
scas
mov
add
jp
mov
mov
and
jmp
out
sbb
ret
jns
pop
adc
xor
mov
fwait
push
arpl
xchg
xchg
sub
int
imul
xchg
lods
push
dec
jb
dec
inc
add
je
jae
jno
sbb
mov
sub
cmpsl
test
ret
jnp
cmp
or
cmpsb
push
push
iret
push
pusha
call
leave
mov
jo
gs
pop
mov
out
scas
xchg
ficoml
xchg
push
jge
jmp
inc
loopne
es
stos
adc
es
push
push
nop
int3
fildl
cmpsb
sbb
xchg
lods
cld
mov
cmp
xchg
mov
aam
jp
mov
popf
adc
testl
jb
adc
jmp
out
jmp
push
je
out
or
fistl
imul
and
cltd
sub
inc
cs
sbb
inc
das
scas
int
into
sub
add
or
cmp
aam
sbb
cmp
ja
fisubrs
cs
jp
xchg
dec
test
inc
xlat
inc
jp
mov
jg
in
mov
out
fistpl
push
int3
cmp
out
mov
rcll
std
rclb
inc
data16
std
and
add
push
in
loopne
push
add
xor
imul
fdivp
push
repnz
lock
jl
pop
lret
cltd
mov
jbe
out
sbb
jl
sbb
jb
pop
mov
mov
adc
daa
jp
mov
stos
aam
popf
push
xor
adc
sbbb
sbb
scas
cmpb
jnp
mov
aad
dec
cmp
or
out
fwait
call
push
dec
pop
cmp
sub
scas
inc
imul
lods
insb
cmpsb
in
jp
mov
scas
out
out
xchg
mov
xchg
adc
push
movd
push
fdivr
loop
out
xchg
and
nop
in
pop
sbb
scas
push
mov
mov
rorb
pop
jle
arpl
xchg
scas
icebp
aas
push
lds
sbb
jp
cmpsl
adc
push
daa
lcall
xchg
xchg
dec
jg
push
fisubl
arpl
dec
adc
jo
daa
xchg
sbb
mov
stos
scas
xchg
push
jnp
jp
xor
inc
test
mov
and
in
jp
sub
add
mov
loop
inc
mov
jp
stos
in
mov
daa
pushw
pop
inc
mov
imul
add
out
sahf
mov
pop
xor
jne
xor
je
lea
inc
adc
iret
nop
push
xchg
das
jno
cltd
jbe
in
lock
movsl
das
lcall
in
aas
outsb
push
nop
inc
js
mov
jns
mov
hlt
fcompl
lock
js
xchg
stc
hlt
cmp
dec
jp
dec
jae
sbb
fmul
push
nop
cli
outsl
adc
inc
push
movsl
mov
add
inc
xor
or
add
ror
jge
sub
push
out
nop
leave
sbb
fsubs
mov
lret
mov
dec
pop
repz
sbb
mov
insb
ljmp
ret
imul
push
fs
mov
mov
inc
cmp
cs
add
movsl
scas
mov
xchg
adc
push
jp
and
outsl
xchg
mov
push
movsb
or
ret
adc
adc
inc
out
test
lods
sub
enter
addr16
and
rcll
sub
cltd
decl
notl
jl
push
test
jnp
cmp
mov
mov
jge
and
fdivrl
fstpt
imul
dec
pop
adc
pop
test
add
fildl
xor
insl
jmp
ret
lods
xor
mov
iret
aam
jbe
xchg
xchg
aaa
add
pop
add
out
loopne
and
dec
xlat
jbe
scas
pusha
cli
popf
add
inc
jae
jp
fisubrs
pop
mov
xchg
daa
push
call
jge
mov
mov
arpl
jno
add
lds
js
nop
loope
lret
outsb
test
ja
scas
mov
xchg
lock
jp
or
adc
in
sti
jo
mov
jg
imul
adc
xor
inc
xchg
push
cltd
xor
ret
pop
sub
cmp
dec
cli
lea
test
sbb
jns
es
push
push
mov
sub
mov
push
cmpsl
mov
xchg
cmpsb
pop
xor
aas
add
xchg
cmp
repz
dec
mov
inc
jle
daa
stc
scas
xlat
int3
sbb
mov
mov
dec
and
jp
pushf
push
push
xchg
ljmp
dec
das
push
add
xchg
mov
sbbb
scas
in
ret
xor
pop
or
hlt
dec
outsb
lcall
dec
je
inc
inc
jg
lret
jecxz
rcr
aad
loope
dec
scas
leave
loop
into
daa
dec
sbb
inc
movsb
cs
mov
call
xor
inc
and
adc
jp
repnz
xchg
xor
sbb
inc
push
mov
lea
xlat
out
fs
push
pop
ss
mov
stos
jmp
mov
sbb
or
push
data16
aam
movsl
xlat
gs
stos
mov
adc
pop
jmp
and
fsub
jecxz
hlt
or
mov
xchg
repz
hlt
dec
xchg
and
negl
ret
mov
test
loop
jp
shlb
push
sbb
jb
adc
mov
sbb
stos
negb
inc
mov
aad
nop
pop
mov
aad
push
add
scas
inc
fistps
fnstcw
cmp
xchg
cmp
inc
rcll
adc
outsb
imul
xlat
loopne
jp
mov
xor
sti
imul
je
test
dec
popf
xor
scas
out
idiv
sbbl
hlt
mov
or
xchg
cmc
xchg
mov
dec
in
pop
jae
mov
scas
dec
sbb
mov
xchg
scas
xchg
aas
push
iret
testb
adcb
jle
cmp
hlt
cld
pop
mov
dec
dec
rcll
cmp
or
and
jmp
xchg
bound
leave
scas
rcll
dec
cmp
cmp
inc
xor
outsb
jne
jo
fimull
in
jp
push
sub
dec
out
jmp
push
bswap
nop
or
inc
xor
aam
stos
insl
push
outsl
cmp
popa
push
call
adc
pop
inc
mov
in
sbb
pusha
sbb
lea
cmpsb
and
cmp
lret
pop
pop
jns
stc
xorb
cs
jno
rcrl
arpl
adc
adc
pop
dec
scas
pop
jmp
mov
ret
jnp
imul
es
push
lds
adc
cli
nop
scas
mov
sbb
cmp
inc
sahf
inc
rcr
aam
loopne
push
ret
ja
xchg
mov
push
pop
nop
sbb
sub
insl
sbb
mov
push
jbe
pop
leave
adc
push
in
mov
add
jo
fsub
jns
bound
fidivrl
imul
loop
xchg
jle
xchg
pop
push
cmp
repnz
jg
fs
jmp
movsl
insl
scas
aam
jbe
mov
pop
and
sbb
insb
data16
cli
pushl
into
mov
aad
sub
lock
scas
mov
scas
jmp
stos
xchg
mov
scas
pop
enter
jb
test
pop
push
sbb
push
pop
clc
pop
rcrb
daa
fldt
pop
dec
out
test
cmc
push
mov
inc
sbb
jne
push
or
add
loopne
jp
mov
jge
and
scas
lahf
mov
repz
jp
and
in
inc
push
mov
nop
mov
sbb
mov
adc
or
ljmp
mov
and
inc
lods
adc
push
adc
insl
jae
rorb
cmc
into
push
mov
mov
leave
nop
sub
xor
dec
mov
movsl
inc
jmp
mov
xchg
repnz
movsb
fs
xor
xadd
outsl
inc
lods
xor
rcrl
sub
mov
lods
jg
push
jbe
mov
arpl
cmp
jno
push
enter
mov
adc
out
and
push
pusha
lret
gs
int3
push
jae
mov
pusha
inc
push
push
shrl
hlt
lret
jp
dec
pushf
xchg
lods
adc
outsb
adc
xlat
sbb
fldl
mov
int
jecxz
nop
mov
imul
loope
subb
mov
jae
dec
scas
adc
in
and
je
jp
and
sbb
movsb
adc
or
cltd
pop
pop
add
xchg
sbb
xchg
dec
sti
fs
js
push
lods
inc
test
pop
ss
test
adc
roll
add
inc
dec
pop
shlb
dec
das
inc
scas
jge
stos
lcall
imul
push
rorb
lods
mov
stos
pusha
push
inc
lods
nop
mov
mov
sub
add
jbe
stc
stos
jno
ret
loope
lods
xchg
pop
jp
push
sub
jo,pt
bound
nop
aas
and
scas
mov
lods
pop
lret
movsb
stos
or
xchg
imul
ret
inc
mov
rorb
pop
int3
jae
add
adc
out
repnz
jle
push
inc
mov
fcoml
fistps
mov
jmp
inc
icebp
lret
xchg
xchg
fimuls
sbb
addl
and
nop
scas
lret
jecxz
ss
test
add
sbb
dec
push
clc
cltd
scas
stos
mov
lahf
les
sbb
sbb
mov
or
call
out
roll
pop
cmpsb
inc
xchg
push
scas
adc
negb
scas
adc
repz
and
add
fwait
aas
outsb
test
psubb
mov
sarl
enter
pop
sbb
xchg
adc
clc
shlb
enter
cltd
in
jp
lock
scas
and
fsubrl
mov
lea
jecxz
aam
dec
jmp
into
pop
scas
cmpsb
mov
and
sub
mov
lds
adc
cmp
psraw
ret
int
les
daa
jle
stc
cmpsl
cltd
addr16
or
jp
dec
add
in
inc
push
lea
adc
mov
test
stos
out
nop
int
notb
dec
scas
idivl
imul
xchg
mov
sbb
mov
xor
popl
aaa
push
xor
adc
sub
xchg
jp
cmp
mov
pusha
dec
pop
js
ja
nop
mov
int3
sub
paddsw
mov
test
cmpsl
jmp
jns
cli
leave
out
adc
bnd
inc
jmp
scas
push
arpl
int
lods
sti
jge
arpl
das
dec
add
xor
loope
jne
gs
or
daa
pop
lcall
call
int
mov
loopne
ja
jne
in
cmp
jg
notl
int3
add
cmp
lds
scas
addb
cs
aas
sub
cmp
and
ds
arpl
mov
cmc
fstps
and
mov
cmp
idivl
cwtl
push
loopne
andl
and
lock
inc
jmp
into
add
or
jnp
iret
out
mov
xlat
jge
sbb
add
scas
sub
or
leave
cmc
push
testb
rcrb
lock
loopne
iret
adc
jecxz
xchg
call
test
mov
mov
nop
dec
sahf
bsr
pop
push
sub
adc
ret
push
dec
bound
popa
xor
jp
xchg
cld
push
adc
dec
dec
push
data16
jp
icebp
inc
fsubl
add
sub
jecxz
xchg
xchg
jg
repz
dec
add
sbb
loopne
scas
mov
cmpsl
jp
clc
nop
fadd
lods
outsl
ret
icebp
in
inc
mov
cwtl
notl
mov
add
add
adc
sbb
std
mov
mov
cmc
cmp
dec
or
mov
jg
inc
nop
or
jmp
scas
pop
mov
push
cwtl
stos
aas
aaa
jns
push
sub
jle
push
cmpl
lea
pop
nop
inc
or
dec
scas
shll
idivb
fsub
mov
xor
or
mov
outsl
nop
xchg
leave
push
inc
fisttpll
idivl
cmp
insb
cmp
test
adc
xor
rclb
pop
xchg
sbb
jmp
sub
mov
inc
int3
out
xlat
jg
cli
scas
push
fsub
fbld
test
mov
lock
scas
push
daa
mov
or
lahf
out
or
sti
popf
jmp
loopne
enter
fwait
out
add
cmpsb
scas
xor
cmp
in
push
gs
fs
pop
mov
sbb
xchg
movsb
cmp
mov
mov
subl
xchg
dec
adc
mov
enter
mov
push
andl
fdivrl
mov
mov
xchg
jp
jns
outsb
mov
lods
sbb
dec
cmp
fidivrs
ss
adcb
ss
dec
or
and
jae
loopne
push
dec
stc
mov
xchg
popf
mov
add
inc
jp
cmp
popa
andb
dec
mov
lods
push
xor
fisttpl
scas
test
sbb
xlat
lret
cld
out
push
push
xchg
imul
jo
cli
cmp
sub
adc
mov
xor
sub
xchg
bound
sahf
inc
stos
je
outsb
xchg
sbb
mov
pop
std
pop
jle
lret
repnz
pop
sub
inc
inc
pop
xchg
mov
aaa
lret
cmp
scas
subl
out
jmp
cmp
sahf
scas
jae
cmp
push
push
adcl
fst
aam
test
inc
sahf
adc
fistpll
loopne
push
cltd
sbb
addb
js
icebp
xchg
movsb
xor
xchg
jo
pop
adc
mov
add
shrb
cmp
dec
fmuls
mov
cmpb
or
mov
dec
mov
shr
lods
in
outsb
jp
sarl
out
sahf
cmp
sub
or
xchg
into
cltd
add
or
push
bound
jge
lahf
ds
loope
and
cltd
popa
dec
ljmp
xchg
pop
and
daa
mov
je
xor
adc
aad
push
push
lods
test
inc
nop
push
sti
call
arpl
mov
push
push
les
xchg
xchg
jecxz
pushf
pop
lods
or
fwait
mov
push
mov
dec
fwait
out
push
cmpb
add
sbb
jp
loop
dec
lret
mov
sub
das
pop
and
jp
xchg
sbb
lahf
movsl
sbb
cld
scas
int3
icebp
mov
xacquire
pop
push
std
pop
xor
aaa
lock
xor
adc
scas
xchg
sub
pmaddwd
fxch
nop
mov
or
cmp
jns
mov
es
or
xlat
aas
into
pop
clc
insb
hlt
jp
movsl
cmp
lahf
jecxz
dec
push
adc
cmp
mov
inc
and
adc
push
js
ret
and
cmp
cmc
jle
xlat
jp
xor
inc
push
sbb
stos
dec
scas
daa
roll
mov
xor
aam
out
jno
jecxz
addr16
inc
xchg
lea
test
out
sbb
insb
je
add
inc
les
scas
pop
cmp
fidivrs
jae
pop
xlat
out
push
loop
out
xchg
lea
add
jb
aaa
push
pop
or
cmp
bound
mov
outsb
mov
mov
mov
fldenv
scas
enter
mov
rorb
outsb
les
mov
mov
sbb
es
scas
lods
inc
lret
adc
push
incb
inc
enter
incl
jp
sub
pushf
pop
jbe
pop
push
sbb
leave
adc
jp
ret
aad
rorl
inc
or
ret
pop
dec
hlt
test
test
scas
ret
pop
or
dec
call
mov
popf
xchg
mov
gs
mov
or
mov
xchg
jge
jmp
or
cld
pop
push
mov
int3
subl
or
sbb
cmpsl
repz
scas
jl
jl
push
lods
jns
jp
cmpsb
inc
cli
push
xchg
inc
mov
sbb
adc
jp
or
std
dec
stc
inc
push
jb
inc
adc
nop
dec
jmp
loope
scas
lahf
or
xchg
jp
frstor
inc
fldt
or
ret
sub
int
xchg
ds
lods
jp
sbb
mov
add
cs
or
sub
mov
jnp
dec
loopne
dec
add
pushf
adc
sarl
sbb
call
xor
aas
icebp
sub
jp
xor
pop
repnz
scas
add
rorb
rcr
adc
dec
out
daa
push
in
push
pop
xor
loop
add
push
push
loope
arpl
scas
push
pop
fcompl
imul
int3
jp
jge
cmp
and
sbb
fildll
dec
jns
xor
mov
jg
jl
mov
rcrl
les
add
daa
adc
fs
jbe
push
popf
popa
je
ds
mov
into
jp
push
rcr
in
xchg
push
jl
add
push
out
add
xchg
bound
fisubrl
mov
add
mov
pop
rcll
fadds
imul
and
push
call
out
adc
mov
cmp
and
jle
fdivrl
mov
xchg
pop
pushf
cmp
popa
cmp
jnp
cs
cmpb
and
adc
cmpsl
scas
dec
xchg
sbb
jp
lret
dec
dec
imul
sub
push
pop
jp
mov
mov
xchg
xchg
ficoms
xchg
sbb
nop
lds
inc
inc
cmc
mov
cli
and
data16
xor
add
xor
xor
mov
jp
push
push
insl
and
mov
in
fistl
jp
mov
rorb
mov
out
mov
out
out
fcom
mov
pop
adc
or
addr16
cwtl
sbb
adc
mov
movsb
dec
sarl
jae
jl
mov
dec
js
fsubrl
icebp
sbb
sahf
jp
xchg
or
daa
xchg
dec
sahf
sbb
stos
pop
nop
data16
nop
test
roll
jne
les
jp
fisubl
in
jne
pop
adc
nop
xchg
das
fldenv
pop
jge
inc
test
jnp
pusha
ret
fdivrs
jns
lret
jp
sbb
jl
fstps
sbb
cmc
mov
shlb
jnp
aam
ret
in
mov
push
pop
enterw
scas
sub
jg
pop
cmp
mov
rcr
inc
push
cli
mov
imul
xlat
nop
fwait
adcb
insb
lods
push
scas
xchg
outsl
lcall
sti
ret
lahf
cmpsb
inc
push
sub
out
hlt
adc
dec
nop
dec
int3
and
and
dec
xchg
cli
jne
and
in
dec
jmp
dec
call
mov
inc
cwtl
mov
xchg
sbb
cmc
xchg
jl
push
mov
and
inc
nop
mov
push
in
cmpsl
xor
push
push
lods
xor
jnp
cli
pop
dec
xchg
shl
add
imul
push
fldenv
cmp
dec
sbbb
aam
pop
aaa
mov
cmp
dec
add
in
insb
outsb
subb
mov
je
mov
int3
or
push
popf
loopne
sbb
pop
aad
xchg
sub
data16
test
pop
loope
into
addr16
pop
stos
ret
fcmovbe
fwait
jl
arpl
mov
call
fucomip
adc
cli
jp
jp
xchg
jle
bswap
push
xchg
xor
add
sbb
stos
xlat
sbb
xor
adc
nop
test
xor
loop
cmp
sub
mov
push
mov
push
sbb
lea
ljmp
xchg
popf
xchg
aas
cmp
fs
pop
jnp
nop
pop
out
jp
in
inc
xchg
dec
scas
test
jg
add
movl
inc
add
inc
ja
or
lret
inc
jp
fs
aas
in
cld
pop
shrd
pop
add
dec
or
inc
jecxz
ficomps
cltd
mov
dec
xor
push
dec
push
lret
xchg
jbe
or
dec
jbe
push
icebp
adc
insl
and
mov
dec
push
loope
inc
into
inc
loop
mov
or
nop
xchg
call
cmc
rcl
jno
into
inc
lahf
sahf
sahf
mov
add
daa
scas
inc
daa
xchg
add
test
cmp
mov
mov
push
scas
xacquire
cmp
cmpb
stos
mov
hlt
fisubrs
outsb
mov
jmp
add
ss
mov
insl
popf
sahf
add
xor
inc
or
mov
sub
je
rcl
js
jne
sbb
int
mov
sbb
jp
jl
loop
shrl
mov
sub
sbb
sahf
movsl
scas
xchg
aas
sbb
icebp
aaa
data16
nop
mov
aad
mov
arpl
pusha
push
mov
fnstcw
xchg
xchg
scas
mov
repnz
movsl
cmp
or
fidivs
add
ss
mov
xchg
sahf
push
in
jp
dec
enter
jo
sbb
push
inc
lret
and
dec
mov
xchg
pop
rcl
sub
and
sub
in
jl
jp
sub
nop
out
sbb
push
ss
out
fcmovbe
inc
cmpb
cmp
lret
ja
mov
push
cmc
roll
add
lcall
int3
push
jnp
stos
xor
inc
nop
test
in
ret
scas
cltd
pop
fildl
cmp
xchg
addr16
mov
push
scas
mov
fldt
jp
jmp
popf
jae
out
fisubrs
shlb
sbb
lret
mov
scas
nop
out
mov
stos
scas
shrl
ret
imul
cmpsb
jp
call
sar
push
mov
ds
add
pop
scas
test
inc
xchg
cmpsb
mov
sub
aad
in
lret
hlt
into
push
ja
pop
leave
push
cs
xor
jmp
inc
fbstp
cs
mov
shrl
sbb
inc
jp
mov
or
xchg
jne
jp
adc
push
cmp
inc
jg
mov
ljmp
pop
adc
mov
arpl
cmp
sub
or
inc
les
test
cli
mov
push
mov
lret
pop
insl
mov
dec
jl
shlb
es
push
pop
mov
dec
jne
popf
inc
jnp
aam
push
daa
adc
cmpl
dec
xor
shr
mov
pop
xchg
mov
mov
inc
les
inc
jno
or
jecxz
pop
mov
sub
dec
pop
mov
cli
inc
jae
lea
xlat
xchg
push
mov
sbb
scas
mov
mov
add
pop
push
mov
or
cmp
or
mov
faddl
sub
je
add
call
popf
cmpsb
pushf
jae
bound
xchg
xchg
ds
sbb
leave
aas
sti
mov
ds
loop
int
dec
mov
push
addb
pop
scas
push
mov
ret
cmp
fdivrl
mov
mov
fcomps
jle
mov
js
mov
cwtl
repz
sub
pop
add
pop
aam
add
and
pop
push
dec
jmp
mov
ds
daa
cli
or
mov
push
inc
aas
ljmp
pop
push
repnz
add
lret
cmp
pop
xchg
aam
iret
xchg
dec
mov
lods
mov
cli
fmuls
jmp
mov
ficoml
sbb
xor
jl
and
dec
ljmp
xor
je
xor
add
inc
xchg
imul
mov
out
cli
inc
out
cwtl
fcomi
sub
loop
pop
mov
ds
sub
pop
outsb
add
adc
mov
popf
cmp
out
cli
push
out
lock
popl
fdivp
lcall
nopl
xlat
cmpsb
push
pop
daa
repz
xchg
mov
dec
mov
es
repz
subb
jb
jg
fsubs
mov
jge
xlat
pop
aas
idivl
or
xchg
pop
jecxz
cli
ret
push
jne
fistpll
mov
mov
cli
inc
out
xchg
sub
sbb
pop
jg
sahf
gs
mov
lret
pop
push
and
lds
jecxz
imul
in
int
xchg
pop
cmp
add
mov
scas
jmp
adc
push
out
lea
xchg
add
jge
xlat
push
cmp
inc
lea
stc
shlb
add
xchg
aas
imul
nop
cmp
pop
lea
out
mov
add
xor
aas
pop
in
popf
nop
cmp
pop
test
out
mov
jnp
stos
push
pop
pop
lds
inc
add
call
jno
in
pminsw
add
scas
pop
pusha
lahf
fmuls
sub
test
nop
or
push
or
jecxz
xor
push
stos
addl
dec
das
pop
pop
xor
pop
dec
mov
pop
sbb
int3
pop
jmp
cwtl
popa
sub
in
fmulp
push
das
in
js
add
sub
mov
sti
outsl
hlt
lret
pop
xchg
jbe
xor
adc
rol
in
mov
add
pop
push
pop
clc
pop
fstpt
addb
pop
pop
xchg
dec
mov
sub
movsb
lds
scas
out
jge
shlb
cmpsb
mov
hlt
mov
addr16
and
mov
sub
cltd
xor
sbb
or
lret
inc
les
cmc
fisubrl
enter
shll
cmp
push
push
sahf
xchg
and
push
mov
test
xor
jnp
pop
jne
hlt
xchg
or
shll
test
and
pop
adcb
int3
and
leave
mov
out
stos
mov
dec
pause
sbb
jno
cltd
mov
jno
cltd
repz
mov
jg
leave
dec
push
mov
xchg
rolb
cmp
cmp
dec
adc
push
ja
push
daa
sahf
mov
push
fisubrl
push
ficompl
ljmp
sbb
int3
sub
cwtl
jl
int3
mov
jl
int3
lods
jl
int
lea
xchg
jae
je
int3
sbb
add
xchg
xor
aaa
mov
enter
dec
mov
js
mov
scas
xchg
bound
inc
pop
cs
lret
pop
ljmp
xlat
sbb
lods
add
mov
je
or
or
dec
enter
cltd
pop
xor
cmp
aam
sub
ss
sbb
push
mov
call
pop
out
jmp
mov
ds
enter
mov
aas
repnz
ljmp
mov
xor
ds
push
aam
sub
jo
sbb
sub
mov
mov
orb
push
mov
ljmp
mov
xor
add
push
cmp
inc
mov
pop
je
push
pop
adc
repz
xchg
jmp
mov
test
mov
push
mov
ljmp
push
jbe
push
mov
ljmp
mov
xor
aam
jns
push
mov
sbb
cltd
ljmp
mov
xor
add
aam
adc
cmp
xor
pop
addr16
mov
stc
jmp
mov
ds
mull
std
or
mov
fsub
leave
rcll
xchg
vmwrite
push
pop
jns
mov
add
mov
xchg
or
sub
loope
push
vmwrite
testl
sub
icebp
inc
push
pop
jns
mov
testl
sub
in
inc
push
add
cmpsl
xor
mov
testl
sub
std
inc
push
adc
mov
add
mov
xchg
or
sub
in
push
or
scas
xor
mov
testl
sub
cmc
inc
push
sbb
mov
testl
mov
pop
jp
repz
sbb
in
fdivrs
int3
mov
ds
adc
mov
push
push
aas
movsb
cmp
ljmp
mov
mov
push
or
arpl
repnz
inc
pop
pop
sub
mov
or
ss
mov
xor
aam
rcll
xchg
mov
pop
daa
mov
rorl
sub
cmp
mov
call
ljmp
mov
xor
inc
mov
cmp
jo
dec
in
jb
sbb
xor
es
aad
outsl
xor
or
out
call
movsl
jmp
sub
mov
cmp
mov
dec
call
jb
fiaddl
scas
das
pop
les
and
and
dec
das
lret
fcomps
lods
loop
inc
pop
and
loopne
sbb
popa
inc
cltd
outsl
or
mov
nop
xlat
add
je
push
mov
mov
test
push
push
mov
sbb
pop
mov
dec
cmp
jnp
push
jmp
aam
aas
nop
cmp
mov
add
test
lods
or
mov
aaa
push
loop
dec
push
ret
mov
scas
shll
mov
inc
dec
dec
lods
test
into
and
lods
test
pop
mov
jno
shl
mov
pop
mov
leave
lds
aas
pop
cld
rol
repnz
xchg
je
loope
xchg
pop
jl
push
sbb
pop
and
jnp
cli
pop
loope
or
fldt
jl
int
mov
add
inc
sub
xchg
int
lds
xchg
pop
test
sbb
stc
push
addb
pushf
fistl
loop
cmp
or
mov
mov
sub
push
dec
cmpl
mov
dec
or
mov
into
insb
push
das
sbb
xchg
into
cld
push
std
fsts
pop
add
or
int3
xchg
adc
shrb
jno
add
pop
jmp
hlt
jbe
enter
xchg
pop
stos
repz
adc
cli
loope
sub
orl
loopne
shll
mov
xchg
push
loope
pop
inc
mov
jmp
jb
sub
mov
mov
neg
jno
dec
add
fcoml
mov
sbb
fisubs
aam
jns
iret
xchg
sub
mov
lcall
jb
mov
scas
pop
sbb
push
in
gs
pop
xor
add
adc
jle
outsb
mov
jmp
xor
or
xchg
cld
jp
test
push
int3
sub
jo
movsb
mov
add
cwtl
outsb
xchg
and
stc
mov
roll
or
mov
adc
jg
xchg
mov
std
sarb
mov
mov
mov
jecxz
or
and
jge
mov
daa
fmuls
sub
test
call
cmp
dec
stc
dec
repz
jo
cmpsl
stc
xor
aas
movl
and
lods
jl
stos
mov
push
dec
mov
js
scas
cli
xchg
xchg
ret
inc
aaa
jg
jmp
clc
sub
ja
out
mov
push
int
mov
or
push
dec
adc
aaa
jo
das
outsb
sbb
adc
jne
mov
mov
aam
pop
inc
jne
ss
insl
call
mov
mov
orb
inc
fnsave
lret
and
adc
push
rol
push
adcl
push
push
jle
jmp
mov
jo
icebp
jge
shlb
jns
mov
pop
mov
bound
leave
dec
ljmp
jnp
hlt
in
jns
aam
push
bound
mov
inc
aam
in
or
out
cmp
pop
inc
push
pop
test
xor
jmp
ret
xor
ljmp
in
mov
rcll
push
in
sub
mov
mov
sub
mov
add
push
out
inc
push
inc
dec
push
repnz
imul
js
ds
mov
lock
xor
or
cmpsb
xor
lcall
mov
insb
pop
adc
jl
int
outsb
outsb
add
filds
sub
mov
mov
mov
lahf
mov
fldt
call
push
push
or
jo
pop
nop
mov
pop
push
inc
mov
scas
cmp
or
mov
in
xor
or
sub
push
dec
xorb
push
cmp
fsubl
loope
incl
pop
xor
or
cmpsb
bound
mov
xchg
push
cmp
add
les
add
jbe
inc
cmp
inc
inc
push
pcmpeqb
sub
lea
les
add
sub
scas
and
lret
cwtl
pop
loop
clc
push
jae
mov
and
xchg
and
pop
sbb
ds
loope
or
loopne
shrb
mov
nop
int
test
inc
or
dec
xor
aam
filds
ljmp
inc
adc
inc
mov
jo
xor
jmp
jge
xor
xor
ds
jmp
inc
mov
ds
xor
ja
loope
pop
filds
aas
clc
mov
inc
jmp
xchg
xchg
lret
mov
cmpsl
into
inc
or
pop
test
sub
xchg
mov
aas
mov
scas
scas
stc
dec
dec
insl
ficoms
lock
dec
lret
adc
lock
mov
movsb
sub
out
dec
iret
push
loop
mov
shr
mov
rorl
cmp
aam
sbb
xchg
fs
mov
sbb
lods
xor
mov
mov
mov
mov
out
ljmp
je
dec
xor
sti
mov
adc
sbb
outsb
xchg
movsl
inc
repnz
rclb
jg
mov
pop
jmp
mov
bound
and
and
je
or
bound
out
cmpsb
test
insl
mov
fsubr
clc
mov
bound
jecxz
xchg
nop
bound
mov
dec
loopne
mov
lock
jmp
movsl
call
jmp
test
mov
pop
push
scas
add
sarb
in
or
fldenv
data16
insb
pop
mov
dec
daa
cmp
inc
in
jno
inc
mov
decl
add
sbb
je
inc
inc
imul
adcl
out
jl
jle
dec
adc
xchg
push
inc
lea
cmpl
mov
xor
lahf
lret
je
movsb
or
xchg
bound
pop
cmp
adc
sbb
push
cli
das
bound
popa
pushf
fists
dec
cs
in
push
js
jp
sti
insl
dec
popa
push
movsb
vpcmpgtd
fs
push
cli
adc
call
stos
push
jns
lock
cli
cmpsb
fistpll
mov
sbb
ljmp
scas
les
sub
sbb
scas
lea
outsb
adc
stos
int3
mov
inc
dec
mov
sar
xchg
sub
jl
pop
jl
data16
cmp
cmp
or
xchg
pop
ret
sub
xchg
add
mov
cmp
fimuls
xchg
xor
sub
mov
xor
xchg
xor
test
aam
icebp
or
lods
icebp
in
pop
orb
push
mov
xor
mov
scas
mov
jns
das
xor
mov
adc
dec
and
pop
fstps
sti
lds
std
or
mov
push
das
lods
inc
xchg
insl
fsubs
mov
cmpl
cmp
addb
xchg
in
and
pop
sbb
mov
mov
cmp
ljmp
mov
repnz
dec
repz
andb
fmuls
je
es
xchg
adc
push
testb
pop
rcl
xchg
push
xchg
mov
fidivrl
ds
jb
scas
or
mov
aas
pop
daa
sbb
out
test
mov
inc
arpl
les
add
int3
inc
shrl
fdivrp
mov
lea
lds
scas
leave
lret
call
xchg
or
xorl
sarb
mov
push
addr16
inc
pusha
divl
lret
scas
cmp
test
fs
mov
repnz
xorb
repnz
inc
aam
inc
test
mov
mov
in
dec
movsl
lahf
add
adc
dec
pop
mov
pop
sub
push
and
imul
mov
pop
das
mov
dec
sti
scas
cmpsl
stc
mov
mov
xor
push
mov
push
push
loop
or
xchg
push
cmc
call
out
movsb
testl
cmp
mov
arpl
aam
out
dec
std
jne
add
test
loop
int
enter
mov
sbb
jno
xor
push
pop
jb
loope
shl
mov
imul
int3
dec
nop
out
cmpsb
outsb
popf
cld
scas
ret
add
imul
add
mov
add
dec
daa
cmp
rcrb
or
cmp
mov
sbb
ljmp
xchg
push
in
loope
jmp
mov
push
mov
xor
arpl
dec
repnz
cmpsl
pop
pop
mov
imulb
xor
lahf
add
aaa
push
xor
cmpsb
enter
cwtl
out
insl
xor
adcb
outsb
stos
or
inc
sahf
shll
pop
movsb
xorb
out
les
mulb
rorl
jbe
shll
mov
lahf
inc
push
loopne
fs
jae
jns
mov
sbb
repnz
jbe
pop
imul
xchg
adc
scas
cmp
sbb
and
movsb
sbb
xchg
push
jle
mov
jge
sbbb
stos
cwtl
pop
iret
mov
add
pop
shrb
cld
jbe
out
mov
mull
leave
dec
movsl
scas
les
mov
push
xchg
test
inc
jbe
xor
inc
pusha
xchg
dec
xchg
ret
pushf
loope
inc
dec
and
cmp
call
ret
mov
pop
js
in
aad
xchg
sub
movl
xchg
mov
cmp
xor
mov
stos
int
negl
js
int3
mov
lret
stos
sahf
add
iret
fsubrl
sti
es
stc
call
in
pop
add
scas
lock
cmp
xchg
rcrl
jnp
rcr
inc
in
lods
cmp
es
dec
or
jecxz
cltd
fwait
insl
movb
pop
ss
push
xchg
mov
popf
jnp
inc
xchg
in
dec
test
xchg
arpl
jo
cwtl
pop
stc
xorb
dec
sbb
movsb
pop
sahf
movsl
mov
leave
sahf
bound
xchg
push
sti
fst
mov
push
movsl
ljmp
fistl
or
fwait
clc
ja
lahf
push
dec
inc
loope
jp
jp
imul
or
jp
dec
ss
xchg
or
int3
mov
shr
in
jecxz
stos
mov
jne
nop
out
movsb
xor
flds
mov
pop
movsl
xchg
mov
jmp
imul
push
and
fmull
push
push
test
insb
inc
mov
sub
push
xor
xchg
andl
sub
stc
daa
lret
push
cs
loope
and
xlat
and
sub
sub
cmpsb
idiv
andb
xor
add
jmp
inc
xchg
xchg
jge
cltd
cmp
fwait
mov
enter
cmpsl
lds
mov
stos
mov
dec
inc
sub
lcall
add
xchg
loop
or
cli
out
repnz
into
stc
repz
sub
pop
aam
push
sub
ljmp
mov
es
aam
xchg
js
xchg
jo
sahf
mov
xor
sbb
cs
xchg
pop
xchg
mov
dec
dec
out
addb
call
adc
pop
xor
inc
push
mov
in
repnz
ljmp
xchg
fisttpll
or
sub
movsb
xchg
rorl
jb
jge
push
lret
xchg
int3
pop
data16
insb
fldt
shlb
sbb
or
mov
jmp
out
lret
dec
ret
cmpsl
lea
ja
cli
pusha
movsb
push
enter
rcr
jno
jmp
jl
adc
jge
bound
and
mov
sbb
push
cmp
in
push
shl
pop
test
inc
dec
stos
jmp
movsb
mov
js
mov
dec
cmp
mov
aas
adc
jg
out
aas
or
arpl
adc
xor
pop
pop
in
mov
std
mov
lods
mov
inc
int3
and
adc
lock
les
mov
push
add
aaa
cmp
aam
lods
fwait
stos
jmp
cs
mov
sub
add
lock
push
cmp
add
xchg
stos
fnstcw
stos
or
xor
mov
cmpb
jno
fstpt
in
xor
and
ret
xchg
or
jo
jp
imul
push
push
mov
into
add
mov
mov
mov
and
bound
jle
rcrl
jo
push
test
shl
roll
sbb
mov
loopne
in
push
ret
mov
das
and
insb
repz
mov
add
push
cld
push
testl
stos
clc
imul
mov
push
aaa
inc
inc
jo
popf
mov
lds
xor
fs
mov
xchg
mov
aad
cmp
jb
andb
add
icebp
cmpsl
int3
sbb
inc
jae
pop
pop
mov
cmp
jg
in
or
arpl
adc
insl
lcall
or
movsb
pusha
mov
lcall
add
adc
enter
xor
push
stos
push
or
xchg
sti
fwait
addr16
xor
test
pop
or
adc
push
cmpsl
dec
inc
lds
sahf
sbb
adc
mov
mov
or
outsb
mov
pusha
hlt
mov
movsb
outsl
sahf
xchg
data16
add
ret
in
shrb
stos
jp
lods
mov
frstor
lcall
adc
lret
rcll
sbb
call
xor
push
pop
jnp
iret
stos
outsl
xchg
in
push
pop
jp
jge
push
pusha
and
fucomp
xor
test
nop
movsl
sub
or
jno
jnp
test
mov
cli
or
sub
add
mov
not
pusha
es
xor
xor
shlb
add
pop
loope
or
idivl
inc
lea
in
mov
or
int
or
xor
test
popa
mov
cmp
pop
and
scas
out
sbb
sub
pop
push
testb
and
rcr
imul
inc
cmp
xchg
inc
sti
inc
mov
js
loop
or
sub
and
sub
pop
jae
outsl
pop
into
cltd
mov
add
daa
je
xchg
mov
push
loopne
adc
imul
and
sbb
push
pop
sbb
leave
pop
daa
add
pop
mov
mov
ds
adc
orl
push
jae
mov
rcrb
or
cli
xor
jg
ret
sbb
data16
add
aam
adc
fnstcw
pop
ljmp
cmpsb
notl
add
int3
xor
popa
aaa
xor
jmp
push
fnstcw
aam
cwtl
push
ds
cmp
fstp
orb
ficompl
insl
test
daa
cmp
pop
or
lods
sub
out
add
loop
xor
and
xor
testl
mov
cld
fdivs
dec
mov
mov
xchg
sbb
sbb
aad
lret
mov
in
call
mov
scas
mov
daa
data16
cmpb
sti
mov
add
push
mov
insl
pusha
addl
jmp
div
inc
out
mov
cmp
dec
addr16
inc
into
push
mov
mov
jl
push
mov
lret
subb
gs
jne
mov
or
cli
sub
sub
sub
jb
sbb
mov
clc
aam
fiadds
in
xchg
mov
std
aaa
adc
out
ljmp
jbe
jp
xor
dec
mov
and
fistpl
xchg
inc
dec
out
cmp
mov
add
cmp
std
loop
popa
dec
test
cmp
mov
inc
cmp
les
mov
inc
mov
inc
jg
jle
xchg
jo
mov
stc
out
and
stos
and
movsl
test
mov
and
sarl
mov
push
movsb
pop
fidivrl
dec
test
jg
dec
movsl
xor
imul
ds
cmp
push
je
cli
dec
pop
dec
and
test
scas
leave
test
nop
pop
leave
roll
push
fwait
mov
ja
jae
and
shrb
mov
and
mov
mov
mov
pop
les
lods
fdivl
dec
pusha
call
in
push
or
imul
push
jae
cld
ret
stos
push
jecxz
dec
fs
mov
pusha
cmp
dec
add
iret
and
fidivl
test
cli
lahf
sub
cmp
pop
sarl
out
dec
xchg
int3
sbb
pop
das
pop
jo
mov
scas
shlb
test
repnz
adc
je
mov
mov
mov
or
add
sub
mov
push
popl
sbbl
test
mov
sbb
int
cmp
int3
jle
fsubrs
jmp
mov
ds
push
daa
dec
or
mov
xchg
aas
leave
ljmp
imul
inc
cmp
mov
pop
icebp
sti
repz
addl
std
push
popa
aas
cltd
cmp
ljmp
mov
xor
sbb
loope
pop
ljmp
mov
xor
aam
aas
xchg
aas
enter
xchg
loope
inc
rcrl
or
mov
xchg
aas
sbb
ljmp
pop
mov
mov
mov
fpatan
inc
and
movsl
hlt
stos
xlat
push
or
ds
sbb
aad
xchg
xor
add
daa
xchg
fnstcw
pop
mov
mov
incl
mov
push
test
jge
jecxz
and
sbb
repz
mov
cmp
ljmp
mov
xor
pop
and
daa
mov
pop
add
repz
fcoms
outsl
jmp
aad
scas
inc
lods
push
dec
test
ret
pop
cmpsl
movsl
popl
mov
inc
addr16
clc
or
ds
adc
lds
mov
push
and
lret
ljmp
mov
xor
aam
xlat
xchg
inc
fiaddl
call
lret
adc
xchg
push
in
cld
cmpsl
mov
cltd
aas
add
pop
sbb
and
cwtl
or
mov
daa
mov
mov
aas
jae
xchg
ljmp
mov
and
cmp
loope
sbb
lret
adcb
cld
mov
hlt
outsb
fsubrl
xchg
imul
mov
dec
aaa
ja
stos
inc
outsb
ficomps
xchg
neg
add
arpl
je
imul
inc
sub
in
jnp
ret
fadds
push
mov
sub
mov
bound
or
xchg
push
add
fstl
dec
mov
cmpsb
es
scas
stos
mov
mov
mov
out
data16
jp
and
dec
jae
xchg
popa
dec
mov
adc
push
mov
outsl
push
inc
mov
pop
sbb
outsl
push
addr16
mov
fs
mov
xchg
sub
sarw
ret
mov
push
and
fiadds
or
pop
mov
inc
mov
clc
lods
add
fwait
movsb
inc
dec
pop
xor
mov
in
movsb
testb
xchg
insl
xchg
leave
enter
xor
sbb
out
int
loope
fstpt
je
in
fbstp
inc
addr16
xchg
push
fs
sub
xor
das
call
repnz
adc
xchg
fnstenv
adc
add
inc
pop
hlt
dec
cmc
push
adc
or
pusha
and
and
or
pop
cmp
dec
add
pop
jae
enter
js
data16
mov
mov
stos
push
fldcw
sub
out
ret
mov
ret
outsl
pmaddwd
xor
insb
ja
pop
adc
add
test
jmp
js
aaa
mov
insb
ljmp
test
cmp
fnstsw
jl
iret
add
xchg
popa
test
add
outsb
stos
in
sarb
in
std
andb
add
mov
mull
mov
sahf
arpl
dec
cmp
mov
xor
roll
mov
mov
push
mov
jmp
dec
stos
pop
ret
pop
add
pop
aas
xorb
adc
in
mov
mov
repnz
cmp
add
outsb
aam
or
daa
aaa
xchg
js
or
xor
in
xor
or
jns
add
mov
cmc
ds
stc
mov
add
push
mov
adc
outsb
movl
dec
out
jnp
dec
push
data16
outsl
scas
out
fdivrl
sub
cli
loope
push
mov
shrb
cmp
xor
clc
sub
sahf
aaa
cmp
mov
add
jnp
jne
sub
xchg
adc
les
mov
jmp
aas
xor
ljmp
mov
lret
and
adc
int
adc
mov
ret
cs
repnz
and
push
xor
push
mov
repz
ret
or
lock
les
xchg
scas
dec
pop
addr16
xchg
jg
adc
lret
inc
jae
mov
iret
cmp
pop
ficompl
dec
jl
and
sbb
push
test
lahf
xlat
or
sarl
adc
fsub
jg
mov
pop
inc
leave
lcall
adc
mov
rolb
insb
mov
dec
ret
mov
mov
xlat
push
jp
not
pop
xchg
fstpt
xor
cmp
cli
dec
sub
cmp
xor
pushf
test
lcall
js
lret
andl
mov
xor
adc
ljmp
push
fldt
jo
es
cli
addl
inc
push
inc
in
push
mov
jae
jge
data16
inc
pop
jno
fs
push
gs
pusha
push
jns
sub
stc
sub
xor
mov
arpl
adc
xchg
inc
mov
inc
or
or
ja
jno
addr16
inc
sbb
rcrb
cmp
push
inc
push
and
xor
inc
adc
ficoml
bound
xchg
jae
or
das
out
fxch
push
rorb
jle
adc
or
cmp
rcr
push
rolb
scas
in
cld
mov
pushf
or
add
cmpsl
cmp
in
xchg
imul
sub
xchg
pop
dec
cmp
gs
sbb
ss
dec
push
daa
xlat
mov
inc
mov
dec
fidivl
outsl
fcmove
sub
call
fdivl
push
pushf
in
dec
pushf
mov
sbb
inc
aad
cmpsl
idivb
xor
xchg
mov
mov
adc
mov
mov
ja
ljmp
popa
nop
mov
or
mov
in
loopne
inc
xor
fildl
into
in
xor
roll
xchg
mov
xlat
mov
aas
into
jp
sbb
dec
mov
xchg
lods
into
shlb
orb
pushf
icebp
movsb
ds
in
movsl
sub
jle
add
fsubs
ss
inc
jo
pop
test
cmp
js
xchg
jae
mov
icebp
cmp
jg
mov
in
dec
mov
sbb
repz
sahf
mov
mov
fs
lahf
std
mov
adc
jecxz
out
dec
mov
push
push
mov
das
test
and
adc
mov
sbb
mov
sub
orb
sub
xchg
jp
cmpl
out
movsb
push
push
repz
push
pop
adc
push
jmp
mov
ds
arpl
cmp
mov
cmpsb
xchg
pop
xor
pop
cwtl
xchg
fs
dec
jp
pusha
pop
push
lods
repz
cld
aas
and
or
lock
mov
idiv
aas
jb
cs
ret
dec
and
mov
adcl
sbb
cltd
je
inc
aas
dec
push
mov
pop
xchg
add
mov
movsb
xchg
adc
mov
adcl
mov
or
jne
jp
cmp
mov
fnsave
or
adc
pop
pop
xchg
sbb
or
jl
mov
scas
shrl
mov
cmpsb
test
cmp
pop
add
call
mov
je
fidivl
into
and
mov
out
add
loopne
sahf
xchg
je
lcall
out
sub
sub
pushf
outsb
push
push
jo
lock
ficompl
pop
jo
sub
xchg
add
jl
mov
pop
pusha
push
cli
xchg
cli
lds
ljmp
pusha
inc
iret
enter
mov
mov
lret
adc
lods
xchg
adcb
fmuls
leave
lods
xchg
rclb
neg
test
jl
sub
sub
push
mov
xor
pop
out
push
inc
stos
mov
js
mov
pop
lret
insl
mov
xor
out
dec
popf
mov
adc
mov
roll
mov
xchg
cmp
repz
pop
push
dec
xchg
es
ss
fdivl
call
loopne
cmp
xlat
fmul
ljmpw
test
dec
sbbb
je
aam
pop
mov
jg
sbb
daa
or
mov
push
pop
jae
lods
int
rclb
mov
fnsave
fisttpll
dec
ret
inc
and
jnp
fsubrs
hlt
data16
sbb
testb
in
dec
int
fs
ljmp
sub
sub
mov
pop
jb
in
in
shll
clc
inc
push
lds
mov
jp
mov
add
mov
dec
xor
push
lret
out
shrl
dec
in
fs
movsb
and
or
or
push
inc
fidivs
pmaddwd
pop
jle
cmp
xchg
push
and
mov
cmpsl
push
xor
mov
mov
scas
mov
bound
fiaddl
xchg
cmp
lret
jecxz
ss
mov
lock
pushf
sub
lret
cli
add
jo
or
jnp
mov
inc
push
fsubl
mov
shrb
popf
sub
cwtl
je
imulb
rorb
orl
ljmp
sbb
jo
jmp
xchg
cmp
and
jb
and
js
mov
lret
scas
sub
xchg
fcompl
cmpsl
mov
jo
add
in
inc
test
lea
mov
ds
ficoml
mov
fsubl
lods
imul
mov
mov
mov
nop
cmpsb
xchg
xlat
cmp
in
icebp
inc
or
push
push
test
icebp
insb
cmp
aam
jae
jmp
outsl
xor
stos
out
pop
out
js
cmc
inc
jle
mov
mov
lods
lds
jge
fcompl
filds
js
mov
push
adc
repnz
testl
mov
push
adc
insb
ja
xchg
or
js
insb
aam
cmp
cli
push
stos
loopne
sub
push
lock
out
loopne
adc
mov
push
iret
dec
adc
mov
xor
pop
les
adc
rorl
add
mov
and
adc
movsl
pop
xchg
sbb
or
cmp
xchg
aaa
sbb
out
lock
cmp
cmp
mov
ds
xchg
outsb
idivb
mov
xchg
daa
dec
mov
imul
addb
mov
pop
and
fisubrs
fisttpl
xor
mov
lods
loopne
push
fmul
outsb
add
push
in
hlt
rclb
lcall
ljmp
loop
into
mov
cmc
into
sub
leave
jle
mov
sub
inc
fs
add
rol
jl
cli
aam
out
inc
dec
mov
mov
mov
jo
dec
hlt
bound
insb
loope
ds
fcom
push
pop
xor
int3
clc
push
mov
pop
push
popa
cmc
add
out
fs
enter
pop
xchg
add
dec
mov
push
push
jmp
mov
cli
add
lds
cmp
jns
adc
aas
mov
jmp
aam
xchg
add
hlt
fidivl
push
push
mov
pop
pop
inc
xor
in
sbbb
outsb
loop
xor
sbb
and
dec
clc
mov
jns
add
stos
call
icebp
mov
pop
shl
aad
push
xchg
xchg
cld
pop
inc
pusha
jb
loopne
in
or
data16
mov
jb
outsl
mov
and
xchg
sub
jmp
pushl
test
pop
js
dec
pop
cmp
mov
aas
or
xor
inc
xlat
arpl
shl
out
and
mov
and
add
inc
dec
lcall
jb
call
imul
loop
add
push
fs
je
ret
dec
jnp
push
fidivrs
mov
ret
pop
loop
xchg
add
mov
or
xchg
int
cwtl
add
repz
dec
divb
xchg
cmp
mov
cmp
je
xor
mov
mov
ret
mov
stos
rorb
pop
pop
cmpb
push
inc
jbe
ljmp
mov
push
movsl
pop
xor
js
mov
cld
test
push
push
mov
repnz
inc
insb
or
addb
dec
in
insb
jl
rcrb
add
inc
dec
adc
mov
push
cmp
ljmp
xor
push
jge
xor
test
js
cwtl
xchg
pop
push
lret
dec
and
and
pop
sbb
jmp
mov
dec
mov
lods
repz
mov
mov
outsb
cmc
mov
hlt
jecxz
xchg
push
xchg
xor
inc
out
mov
addb
or
es
sub
and
repz
sub
mov
xchg
pop
pop
xor
mov
pop
arpl
std
fs
cmc
or
in
leave
or
nop
xorb
mov
inc
nop
add
js
jl
out
in
add
mov
dec
cmp
dec
and
add
push
or
mov
add
addr16
mov
fsubrs
pushf
sub
lock
xchg
push
adc
addl
dec
sbb
push
dec
loope
cmc
dec
mov
mov
push
adc
cli
sbb
inc
cmp
mov
adc
mov
pop
sbb
push
push
jo
ss
out
mov
push
xchg
leave
push
or
int
cmp
xor
or
loop
push
in
fcom
popa
into
xor
fiadds
pop
mov
mov
push
add
xchg
and
loopne,pn
es
cwtl
enter
dec
or
jbe
mov
addr16
js
sub
fistpl
wrmsr
stc
cmp
jb
jae
pop
adc
sbb
movsl
xchg
add
int3
push
pop
mov
leave
add
pop
inc
sbb
xor
xchg
jp
push
fists
leave
in
jae
test
mov
lods
aad
adc
sbb
push
mov
mov
push
iret
or
pushf
sub
push
aad
std
lret
dec
mov
ret
inc
das
stos
bound
and
imul
pushf
je
inc
ret
cmpl
out
and
inc
and
inc
and
fiadds
repz
add
jl
test
inc
repz
or
insl
push
and
and
cmp
cmp
pop
ss
sbb
cwtl
mov
lret
sarb
xor
and
out
lret
call
mov
or
mov
repnz
jle
pop
jnp
scas
cmp
je
js
mov
or
in
inc
xor
xor
or
addr16
ljmp
inc
sub
add
or
pop
xchg
and
sub
movsl
push
inc
xchg
pop
xor
dec
loop
iret
das
lcall
cwtl
fs
lret
aaa
rcr
add
cli
push
and
add
call
add
xor
int
jmp
pop
std
push
mov
dec
xor
or
ficoms
divl
push
cmpsb
jge
js
and
sbb
mov
mov
and
dec
mov
sub
loop
in
and
sbb
inc
imul
iret
sbb
xor
es
lods
and
test
jb
ret
cmp
sub
pop
jp
jle
loopne
dec
mov
jb
bound
xchg
arpl
mov
xor
pop
push
sar
sub
fldt
popa
xchg
daa
add
orl
movsb
imul
mov
xor
pop
mov
in
inc
adc
jmp
adc
pop
loopne
sbb
rol
es
jecxz
mov
xchg
jl
aad
xor
hlt
enter
mov
mov
and
push
mov
out
scas
jmp
out
shll
add
dec
ljmp
xor
loop
sub
ds
out
push
xor
and
fdivrs
leave
add
addl
mov
in
cli
loop
xorl
fidivrl
mov
ficomps
ret
mov
mov
pop
xchg
xor
push
out
and
add
xor
jo
int3
push
jns
xor
lret
push
je
push
mov
out
add
push
jl
nop
jp
not
icebp
xchg
hlt
faddp
sub
aaa
push
movsb
mov
shrl
movsl
mov
aam
cmp
bound
dec
add
test
call
and
add
push
out
pop
add
mov
pop
test
loopne
outsb
fimuls
mov
mov
sbb
add
ret
js
out
nop
add
fs
subl
loope
jb
mov
sbb
pop
andb
in
sub
cmp
movsl
mov
push
hlt
lods
lret
lods
mov
lock
sahf
movl
sub
je
jecxz
je
int3
xor
lock
push
in
cld
pop
xor
aad
rclb
andl
push
test
xchg
jp
cmp
addl
hlt
in
inc
mov
fnstenv
in
test
aad
aad
xor
ljmp
xor
movsb
cli
and
and
lods
test
lock
xor
and
lods
inc
push
ss
mov
push
in
xor
sub
idivb
addr16
xchg
inc
dec
pop
mov
jp
ds
jmp
push
jmp
mov
je
push
mov
test
out
jnp
lea
mov
neg
not
scas
push
xchg
fcompl
dec
jmp
mov
mov
andl
cmp
repnz
clc
cs
dec
ds
cmp
xorl
rorl
loopne
xor
dec
cli
or
into
pop
mov
sbb
inc
insb
shrb
jo
fldcw
add
dec
lret
mov
add
mov
cmp
jo
xchg
push
push
inc
xchg
jle
aad
inc
shl
ret
mov
ficompl
out
adc
lcall
cmpb
mov
mov
clc
in
push
clc
in
mov
aam
cwtl
cli
inc
ficompl
push
xchg
xor
aaa
hlt
imul
add
dec
out
pop
shl
dec
scas
push
jb
aaa
add
insb
repnz
loopne
push
fs
push
arpl
mov
sahf
inc
lods
mov
lcall
mov
add
pusha
or
sub
pushl
push
bound
jbe
pop
int3
in
ret
stc
stos
mov
cmp
cmp
jmp
mov
roll
add
xlat
pop
test
cmpsl
sub
and
adc
mov
rorb
and
sub
shlb
push
loopne
and
pop
shr
mov
outsl
mov
jns
rol
xor
es
sbb
cmp
push
sbb
add
mov
mov
mov
xchg
cli
jne
shll
cwtl
sbb
js
outsb
xor
jmp
xor
xor
xlat
sub
repz
or
fistpl
push
mov
dec
mov
inc
push
out
fmul
inc
loop
xchg
test
ret
insb
add
jl
les
sti
inc
xor
cld
aam
mov
xchg
xchg
add
pushf
add
test
jmp
and
stos
es
test
mov
cltd
sbb
sti
outsb
aad
rcll
jns
jg
push
xchg
in
jns
popfw
cmp
gs
loop
enter
xorb
or
pop
pop
out
shlb
dec
enter
je
insb
push
roll
movsb
mov
inc
sbb
mov
lret
xchg
push
int3
mov
lods
dec
mov
repnz
push
cwtl
inc
push
dec
dec
mov
add
pop
enter
mov
cmp
les
pop
out
jmp
cli
sarl
es
aaa
adc
repnz
movsb
testb
add
out
subl
sahf
xor
and
xor
lds
in
adc
cmp
cmp
arpl
push
xchg
daa
inc
out
cltd
push
xchg
or
int3
fstpt
clc
shrb
pop
xor
dec
repnz
pushf
ss
test
inc
push
inc
inc
shrb
cmp
mov
jp
aaa
sub
out
test
xchg
movl
lret
scas
and
xchg
mov
dec
aas
mov
xchg
test
cli
dec
mov
enter
mov
into
daa
divb
dec
jl
xchg
jp
dec
or
lret
push
in
in
dec
std
sti
out
or
add
adc
hlt
outsb
jnp
mov
fildll
add
ljmp
lea
jb
fisubl
sti
outsl
cli
loope
cmp
xchg
dec
xor
movsl
sub
dec
sbb
hlt
mov
not
push
mov
or
hlt
mov
dec
out
push
xchg
xor
insl
add
push
notl
or
data16
or
popa
add
enter
push
and
xchg
mov
push
jmp
push
dec
cmp
std
xor
sarb
cmp
jns
popf
loope
out
and
les
add
test
add
mov
dec
jge
shrb
add
pop
sub
mov
aaa
stos
dec
xor
lds
push
loopne
in
mov
cmp
mov
adc
ficoml
testl
dec
xchg
lret
movsb
cmp
pop
fisttpll
inc
aas
mov
dec
push
adc
in
jmp
push
xor
ret
callw
movsl
push
xchg
pusha
lret
push
sub
fadds
dec
iret
cmpsb
jp
pop
sbb
push
int3
outsb
daa
pop
cmp
cli
sub
daa
rclb
inc
fsubrs
push
xchg
insl
adcb
arpl
fidivs
pop
jb
dec
out
mov
jge
loopne
enter
addr16
xchg
stos
push
in
test
hlt
adc
in
add
mov
sbbb
scas
subl
aad
mov
stos
mov
or
int3
mov
fsubr
dec
dec
pop
jb
test
bound
or
add
bound
mov
pop
loop
add
mov
xchg
inc
bound
in
lock
and
outsl
frstor
mov
out
pop
jnp
push
mov
movsl
xor
ss
push
aaa
sbb
mov
fildl
add
xor
jp
test
add
adc
sub
sub
adc
insl
mov
rcll
loope
push
fcomip
js
cmpsl
mov
cmp
add
loop
aaa
lock
mov
out
mov
divl
inc
push
cld
test
push
push
out
pop
and
lret
je
jecxz
outsl
lea
add
push
xchg
out
iret
push
mov
jmp
inc
adc
or
mov
fmul
push
pop
hlt
test
imul
jmp
bound
inc
fadds
ljmp
mov
into
lods
cmp
mov
adc
mov
cmp
pop
jl
cmp
fs
aas
inc
outsl
mov
int3
mov
fs
mov
sub
jo
je
cld
sub
inc
and
push
test
adc
and
ja
jo
faddl
pop
lret
inc
inc
out
call
in
addr16
clc
lds
xor
cmp
shll
cmove
mov
or
out
pop
inc
inc
neg
repnz
adc
mov
sbb
push
in
int3
mov
into
and
mov
add
jmp
sarl
xchg
mov
cli
lret
test
testb
add
dec
arpl
cmp
xor
push
fidivs
add
test
daa
in
dec
sarb
and
lahf
lret
fisubs
jnp
arpl
jae
and
mov
and
push
mov
mov
stc
inc
adc
mov
cmp
pop
mov
push
shr
xor
cmp
aam
and
sbb
push
fs
xor
mov
stos
xor
test
arpl
lock
push
cmpsb
rorb
out
daa
cmp
push
fisttpl
xor
testb
push
push
lret
push
jl
cs
sbb
mov
aaa
out
mov
cld
xor
movsb
sub
data16
cs
sub
or
xor
test
push
out
add
xchg
xchg
cmp
mov
push
jno
inc
in
push
fistpll
stc
jne
cmp
mov
cmp
aaa
faddl
popf
xor
or
and
dec
fisubrl
fidivs
mov
dec
fbstp
xchg
and
cmpl
push
rcrl
orl
dec
sub
mov
mov
sub
in
mov
dec
mov
dec
inc
pop
or
les
out
sti
push
aam
enter
dec
icebp
fs
add
pop
imul
sub
sub
or
xor
loop
jg
pusha
pusha
pop
mov
scas
sub
pop
sub
jecxz
ret
adc
jl
insb
sub
or
mov
adc
mov
dec
aas
rcrl
cmp
xor
das
mov
ss
pop
lret
aad
pop
in
push
inc
insl
in
mov
inc
inc
pop
and
jo
insb
adc
clc
sub
sub
mov
sar
xor
cmp
inc
pop
inc
pop
ss
or
sbbl
jecxz
mov
sub
xchg
pop
cli
rorb
cld
adcb
mov
jge
push
or
pop
in
shll
out
xchg
lea
loop
out
jmp
insb
fstpl
adc
loopne
loopne
cli
aam
bound
aam
outsb
ret
or
movsl
mov
aaa
ja
hlt
mov
mov
lret
xor
adc
movsl
in
mov
out
cld
jecxz
stos
mov
cmpsl
ret
push
mov
mov
mov
fstpt
orb
sbb
repz
cs
dec
divl
pop
add
mov
mov
pop
sbb
pop
mov
ret
and
in
or
push
or
ljmp
sbb
pushf
xor
mov
rorb
ljmp
mov
or
xchg
sub
dec
lahf
xchg
mov
subl
jmp
push
pop
and
xor
hlt
inc
xchg
test
es
sub
adc
mov
ja
mov
mov
inc
lret
dec
inc
fidivrs
clc
xor
lcall
push
jno
mov
add
out
or
sub
mov
int3
fiadds
sahf
fdivrl
xor
clc
aam
push
or
mov
sub
int3
aad
mov
fcoml
nop
and
stos
sti
xor
pusha
or
sbb
data16
cwtl
test
cmp
sahf
movsl
std
and
in
fisttps
test
mov
push
cmp
jl
push
mov
out
bound
mov
int3
and
push
test
cmp
sbb
pop
xchg
cmp
push
mov
stos
or
shl
push
or
cs
jp
push
mov
inc
push
data16
or
je
clc
push
sbb
fidivl
xor
cmpsb
in
scas
sahf
inc
xchg
dec
fdivr
inc
add
insb
cmpsl
aaa
jg
mov
sbb
ror
jp
mov
in
push
int
pop
pop
je
out
ljmp
iret
push
pushf
mov
jbe
mov
dec
cmc
jbe
out
mov
cmp
pop
mov
cmp
push
cmp
enter
push
cbtw
jle
jge
icebp
xchg
xchg
xor
pop
adc
jp
inc
add
jbe
es
test
cmpsl
lods
push
cwtl
shlb
push
cwtl
fldlg2
mov
cmp
pusha
pop
cmpl
icebp
out
lock
mov
mov
scas
sub
cmp
push
pop
loop
mov
lods
cs
and
out
mov
arpl
aaa
out
push
lods
repnz
add
xchg
loope
add
push
fcom
push
shlb
push
sbb
xor
or
mov
cmp
dec
es
nop
ret
out
mov
or
or
or
sub
sub
addr16
fisttpll
xchg
lods
cmp
mov
mov
pop
jp
in
lcall
adc
pusha
cmp
iret
iret
es
push
test
or
lods
push
filds
jns
push
bswap
into
mov
mov
push
xchg
daa
inc
dec
ret
pop
push
or
push
in
cmp
mov
fs
andb
or
out
xor
in
cmp
in
in
cld
push
jl
push
inc
hlt
push
mov
mov
lods
xchg
mov
cmp
mov
aam
add
scas
pushf
js
ds
or
push
rcll
lea
loop
sbb
imul
loop
test
das
sbb
mov
into
inc
add
cmc
dec
testb
lea
fnsave
add
leave
lods
xor
outsl
xchg
push
add
fisttps
add
cmp
notb
or
mov
xor
xor
clc
xchg
or
fimuls
fistpll
push
or
out
sbb
push
inc
dec
sub
aam
xchg
mov
incb
and
cmp
or
iret
imul
dec
mov
cwtl
jne
inc
inc
sbb
out
cmpsl
dec
jbe
lods
and
negb
cmpl
and
ud2
sub
and
ret
xor
lock
mov
adc
dec
dec
sti
ja
xor
mov
mov
mov
arpl
xor
stc
cmp
cmp
xor
xor
sub
ljmp
outsb
fiaddl
repz
ficompl
mov
js
jmp
out
pop
test
inc
cmc
clc
xor
pop
inc
pop
dec
add
push
pop
enter
or
add
pop
or
std
mov
and
nop
stos
mov
xor
or
cmp
js
outsl
out
dec
cli
fs
repnz
sub
ret
adc
push
ficoml
mov
dec
xorl
sbb
ficompl
jbe
pop
adc
xchg
imul
std
fimull
pop
repnz
sahf
inc
hlt
cmp
and
fcomps
add
pop
divb
jb
add
in
mov
or
out
mov
inc
ret
push
fildll
clc
dec
out
imul
push
loope
hlt
xlat
inc
push
aas
xor
add
mov
fisubrl
inc
adc
lea
in
jae
fwait
sbb
lods
xlat
nop
xchg
or
out
loope
add
cmp
repz
push
cs
fs
xor
sub
xor
cs
cmp
push
lret
aam
aaa
and
cmp
lds
aad
xor
push
push
xor
fisubl
dec
inc
mov
nop
jmp
push
lock
divb
outsl
nop
push
xor
adc
xor
rcrl
and
xor
out
out
cmp
jp
repnz
push
rcll
cmp
enter
mov
push
imul
neg
enter
mov
push
cmc
mov
aad
sub
stos
add
xlat
movsb
mov
xchg
xchg
rcr
sahf
or
sbb
xor
shll
jmp
hlt
add
cld
add
les
imul
xchg
adc
bnd
mov
je
sahf
add
dec
je
sahf
stos
test
xchg
scas
daa
mov
xchg
and
addr16
dec
lea
fbstp
insb
clc
mov
cltd
and
lock
orb
jmp
andb
fldl
sub
fidivrl
outsb
mov
cmp
mov
ds
loop
or
loop
or
std
or
sbb
out
pop
out
or
out
or
out
or
out
or
out
or
std
scas
sbb
fnsave
pop
mov
pop
les
insb
cmp
dec
insb
iret
mov
xchg
sbb
test
stos
xor
icebp
ss
sbb
negl
lods
test
xchg
fwait
daa
lods
xchg
pop
adc
dec
push
mov
loopne
push
fsubr
lret
cmp
enter
aam
xor
cli
or
in
cli
sbb
cli
adc
test
pusha
dec
nop
cli
jl
pushf
cli
dec
dec
test
inc
dec
mov
push
dec
inc
cli
lods
dec
dec
cli
mov
dec
fs
orb
pushf
dec
jl
call
dec
adc
lock
and
int3
dec
sub
fmuls
cli
aam
les
sbb
inc
mov
add
test
cmp
test
push
inc
call
test
jle
aam
bound
jne
je
shlb
inc
subb
insb
insb
fcoml
insb
rcr
shl
and
fdivrp
xor
fiadds
cmp
add
xor
sarb
data16
or
hlt
or
sti
rcrb
push
pop
jmp
cli
insb
push
fcompl
jne
or
lods
insb
sbb
insb
aam
into
lcall
orb
adc
adc
fwait
or
mov
xchg
adc
sbb
fsubrp
cmp
and
jmp
sti
add
mov
addr16
and
aad
push
out
lea
cmp
js
arpl
xchg
insb
dec
mov
cltd
or
call
cmpb
addb
fwait
xchg
in
mov
xor
or
adc
cld
mov
xchg
mov
hlt
pop
or
and
mov
pop
fsubs
sbb
sbb
in
test
add
rcr
hlt
daa
inc
xor
cli
addr16
xchg
fcoms
xor
add
sti
cmp
fs
xchg
dec
or
repnz
cmp
sbb
out
test
mov
insb
inc
xchg
mov
xchg
pop
sub
xchg
push
and
sbbb
fnstsw
sahf
mov
testb
xchg
mov
addr16
mov
or
loop
or
sbb
out
or
std
adc
in
mov
fsub
push
adc
or
lds
insb
jnp
xchg
insb
inc
idivl
xchg
test
jnp
or
dec
and
test
dec
pop
cli
fisttps
daa
adc
sbb
or
jnp
mov
add
xor
sbb
out
add
xor
push
push
lret
mov
pop
pusha
mov
pop
push
mov
repnz
xchg
cmc
inc
push
sahf
repz
push
xor
sti
je
jns
mov
fistps
fnstsw
fstl
out
pop
lcall
jecxz
inc
insb
into
jmp
or
mov
std
inc
mov
fs
data16
movsb
addr16
leave
stc
data16
lock
lods
xchg
push
xor
or
adc
jle
nop
push
mov
or
and
mov
mov
loopne
push
mov
sub
and
int
xor
and
cli
and
idivb
fisubrs
lret
cli
mov
outsb
mov
sahf
push
je
inc
cwtl
out
cltd
cmp
mov
push
scas
loopne
inc
inc
cld
mov
adc
inc
fwait
orl
and
ret
cmp
mov
mov
mov
cld
ss
mov
lcall
adc
xchg
loop
or
lea
negb
push
push
cmp
pushf
push
fptan
daa
pop
filds
lahf
dec
test
lcall
mov
cli
out
and
mov
pop
xchg
xchg
daa
jo
cmpsl
cmp
out
or
out
or
in
inc
or
xor
mov
jne
stos
xor
imul
mov
adc
mov
fisttps
sbb
mov
sti
xchg
and
cmpsb
pop
pop
adc
xchg
pop
sub
rorl
and
push
or
shll
dec
xor
rcll
cli
int3
add
mov
sub
xor
sub
cmp
push
out
insw
lret
and
mov
or
out
sub
ret
orb
loop
or
lds
sbb
jmp
and
push
mov
jp
pop
cmp
ja
sahf
sub
repnz
inc
xor
jecxz
or
and
les
jbe
adc
insb
xchg
repnz
loop
mov
subb
add
jne
mov
pop
mov
push
mov
push
fldcw
ss
pop
add
test
mov
out
out
add
fidivrl
mov
mov
rep
add
xor
and
dec
sahf
ds
mov
and
lods
or
je
ljmp
cmp
push
dec
lock
adc
fsubr
jl
sbb
xorb
jne
xlat
xor
mov
outsb
mov
scas
clc
adc
jle
es
ret
jg
ficoml
push
dec
push
cmc
sub
dec
mov
pop
sahf
mov
pop
shlb
adc
andl
lret
adc
and
lcall
xchg
cmpsb
push
lcall
add
xor
ja
xchg
pop
xchg
sub
mov
test
loop
aaa
nop
shlb
adc
mov
loop
mov
sub
jmp
mov
dec
sahf
ret
je
inc
cwtl
sbb
testl
pop
scas
daa
mov
loop
ss
daa
mov
cmpsb
sub
repz
add
mov
push
pop
xor
mov
pop
imul
mov
sahf
sti
add
xor
mov
sbb
pop
cmpl
sub
mov
mov
pop
mov
cwtl
mov
push
lock
mov
inc
mov
mov
mov
test
mov
sbb
insl
sub
add
adcb
sahf
lods
test
mov
cltd
xchg
and
out
sbb
mov
insb
cli
inc
xchg
sti
fstpl
adc
sahf
push
jmp
fcmove
cmpsb
mov
xchg
das
subl
insb
pop
mov
nop
dec
xor
adc
add
cmp
push
clc
divl
popf
stos
repnz
daa
add
or
lahf
loopne
popf
cwtl
dec
ds
cltd
dec
dec
cs
fmull
daa
adc
pop
in
push
pop
cmp
sbb
movsl
dec
lret
jo
mov
loopne
ljmp
dec
jae
popf
dec
jnp
xchg
cmp
in
xor
lods
inc
pop
icebp
test
lcall
dec
cmp
aad
ret
daa
sbb
inc
scas
mov
xor
xorb
jmp
add
das
ljmp
cs
insl
mov
lret
pop
jae
mov
insb
mov
pusha
add
sub
cmp
sbb
jp
lea
pop
xchg
js
test
xchg
inc
push
std
push
push
inc
dec
stos
pop
add
xchg
mov
inc
nop
loop
loop
inc
loopne
push
add
add
sbb
xchg
daa
je
lods
daa
pop
lcall
hlt
fdivl
ljmp
mov
adc
cmpb
and
into
pop
pushf
cmp
mov
rorl
mov
mov
data16
loop
and
sahf
xorb
mov
arpl
repnz
daa
in
xchg
adc
icebp
xchg
and
sub
cmp
mov
cwtl
xchg
jne
ljmp
or
das
sbb
cmp
test
ljmp
fsubrs
and
jp
sahf
sti
je
sahf
and
jl
sahf
sub
jbe
call
repnz
push
and
inc
xchg
inc
daa
mov
ficomps
hlt
iret
xor
ljmp
push
sbb
fmull
push
sub
xor
pop
sub
cltd
loop
or
loop
or
loop
or
loop
or
je
iret
in
pop
xor
inc
sub
or
repz
fdivl
repz
inc
les
std
cld
xor
mov
jle
xchg
pop
mov
scas
cli
fsubr
insb
push
dec
icebp
int
idiv
push
je
inc
cwtl
jl
mov
jb
or
mov
mov
clc
fmull
adc
cmc
push
xchg
jmp
outsb
sbb
pop
sahf
test
sahf
jmp
adc
repnz
sub
sub
pop
daa
in
sahf
cwtl
inc
lock
pushf
outsb
xor
cmp
or
xor
mov
repnz
xorl
push
nop
fbstp
fcoms
sbb
sbb
cmpsb
gs
mov
lock
cld
pop
fmull
insb
test
add
stos
loopne
or
mov
add
das
adc
fisubrs
data16
fsubp
and
add
loopne
or
je
lahf
negl
inc
out
mov
shrl
orl
shlb
mov
bound
lcall
jmp
add
popl
sub
shrl
pop
pushf
adc
lret
xchg
hlt
ret
aam
pop
sub
ljmp
out
loop
xor
cmpsl
jmp
or
mov
xor
mov
pop
xchg
cmp
xchg
cmpsb
dec
stos
mov
cmp
mov
pop
mov
xchg
ljmp
sub
out
popf
push
mov
mov
addr16
outsl
xchg
or
and
inc
in
lcall
fldcw
mov
test
mov
cmp
xlat
fisubrs
and
cwtl
xor
fidivs
data16
jb
into
sub
jmp
divl
pop
stos
xorb
in
add
pusha
jl
mov
fadd
insb
cmp
imulb
xchg
insb
dec
notl
test
cmp
dec
inc
mov
sub
add
subb
cli
xor
cltd
xor
fistpll
add
jns
xchg
push
mov
xchg
imul
insl
jecxz
push
cli
mov
cmp
mov
popf
loopne
inc
fyl2xp1
jp
adc
mov
das
mov
cli
cmp
loopne
adc
xor
ficoms
ret
cmp
loopne
daa
sub
leave
mov
push
mov
daa
push
inc
mov
test
mov
adc
dec
xor
fiadds
push
rcr
mulb
je
stos
add
xchg
sub
sbb
pop
pop
mov
cli
jmp
leave
mov
push
pop
lods
xchg
cld
fwait
hlt
mov
cmp
fimull
lcall
mov
dec
mov
call
hlt
cmp
sbb
sahf
sti
mov
scas
mov
fsubrl
insb
jecxz
push
pushf
mov
cmpsb
popf
pop
es
fbld
lahf
loop
rclw
jmp
mov
sub
xchg
mov
fs
mov
pop
push
xchg
ds
xchg
jmp
cmp
and
push
mov
rcrl
pop
int3
sbb
insb
fcoml
pop
fsubrl
mov
mov
adc
inc
xchg
cmp
addr16
pop
add
jb
adc
adc
loopne
pushf
jmp
add
call
sub
mov
in
enter
xchg
dec
lahf
jl
push
jecxz
je
add
hlt
push
adc
cmpsl
push
outsl
cmp
push
xor
cs
mov
fs
dec
aaa
fsts
push
nop
loop
and
xchg
add
sbb
mov
jae,pn
mov
mov
sar
imul
enter
sbb
and
pushf
jo
popa
jp
imul
addb
daa
pop
fsubr
mov
pop
cli
xor
and
pop
xor
mov
shlb
test
je
lret
popa
std
cmp
mov
pop
ljmp
addl
mov
pop
aad
cmpsb
mov
call
repnz
inc
loope
or
lods
call
mov
cs
pop
je
inc
xchg
shlb
xchg
das
sub
stos
dec
test
adc
ficoms
xchg
xor
jno
imul
sub
sbb
in
push
jg
xchg
jle
or
aas
pop
sub
xlat
gs
mov
add
pushl
lret
push
add
sub
cltd
arpl
test
mov
xchg
inc
jle
gs
lock
mov
mov
push
mov
cmc
xchg
aam
push
testl
fdivl
and
xlat
andl
insl
je
sahf
jl
hlt
sahf
inc
push
mov
pop
lcall
or
vmaxpd
iret
hlt
fs
mov
push
insb
xchg
fcompl
xchg
pop
insl
fcmovu
add
xorb
test
inc
mov
mov
jge
orl
xchg
jno
fisubrs
sub
data16
pop
or
pop
test
pusha
cli
pop
rolb
adc
sub
addr16
sub
out
add
sbbl
mov
mov
inc
imul
je
sbb
divl
je
out
sbb
or
add
fcompl
sbb
loopne
or
loop
aaa
out
sub
pusha
cmp
outsl
mov
pop
jb
das
pop
aad
inc
pop
adc
insb
add
call
xchg
fs
inc
fsubs
xor
fmulp
xor
loop
sub
rcll
sub
xor
pop
fs
cli
in
movsb
call
jmp
adc
sub
pop
mov
cld
std
pop
pushf
pop
dec
sbb
cld
cmp
insl
cmp
cmp
test
adc
leave
jmp
mov
push
nop
cmpsb
xrelease
inc
xor
enter
fiaddl
mov
into
out
lcall
pop
repz
add
jle
out
decb
cmp
loopne
shr
inc
sbb
insb
sub
mov
sub
cli
lea
inc
cmp
mov
jp
data16
out
or
xchg
test
cmp
stos
lds
mov
ds
or
mov
out
pop
mov
adc
ss
pop
sbb
into
adc
mov
aaa
fmul
push
out
push
push
pop
mov
mov
leave
push
jle
sbb
icebp
mov
or
scas
movsb
es
nop
gs
shlb
xchg
fnstcw
rclb
jbe
adc
stc
adc
js
inc
add
insb
and
xlat
icebp
lretw
lahf
loop
or
loop
and
inc
mov
icebp
out
out
xchg
xchg
addr16
shlb
pop
and
sahf
xor
cltd
in
inc
xchg
mov
dec
sbb
out
cmpsb
inc
pop
pop
inc
subb
sti
and
and
pushf
push
test
pop
xor
pop
daa
hlt
in
xor
sub
fisttpl
pop
pop
cmp
add
xor
mov
mov
mov
push
repnz
pop
stc
out
loope
xor
adc
lcall
and
out
js
pop
xchg
and
mov
inc
inc
ret
jge
cmp
decl
adc
and
push
clc
ds
test
mov
and
sti
in
or
mov
aam
xchg
ret
sub
cwtl
inc
ret
testl
pop
lcall
mov
xlat
xchg
xchg
mov
fwait
mov
insb
cli
fsubs
sub
je
push
jl
inc
mov
pop
inc
xor
loope
pusha
sbb
xor
sub
xlat
pop
xorb
or
mov
cmc
fcomps
pop
add
cwtl
sti
jnp
inc
lea
cmp
jl
out
clc
push
xor
mov
sub
sbb
pop
jmp
adc
sbb
sti
lahf
sub
cld
mov
rorl
std
sbb
push
sub
dec
xchg
rcrb
call
xchg
dec
mov
and
add
rcll
incb
xchg
or
out
or
out
fcoms
mov
das
aas
mov
idiv
pop
lret
pop
rclb
je
adc
xor
flds
jbe
call
in
pop
ss
cld
icebp
cld
rolb
mov
jnp
cmp
addr16
lods
andb
push
fdiv
push
pop
call
push
xchg
xor
pop
push
jmp
out
repz
out
sbb
mov
popa
loop
ss
push
loopne
mov
pop
loope
mov
test
xor
scas
int3
pop
je
xor
cmp
scas
mov
insb
push
repnz
inc
movsb
inc
inc
xchg
pop
mov
or
sub
xor
lock
pushf
mov
subl
int3
adc
adc
inc
popf
movsl
callw
push
mov
std
insb
cmp
mov
inc
cli
loope
mov
cltd
push
mov
inc
sub
lods
adc
js
outsb
sahf
movsb
push
repz
stc
push
pop
call
int
movsb
mov
push
mov
sub
aas
add
or
loope
and
pop
mov
inc
pop
gs
fnsave
lods
dec
stos
adc
insl
fs
jmp
iret
lret
lea
mov
fsts
sbb
in
mov
pop
icebp
pop
xchg
mov
popa
daa
inc
add
pop
pop
mov
pusha
pop
jnp
test
lods
sbb
add
inc
lcall
cmp
pop
outsb
jg
and
xlat
out
mov
clc
sbb
or
xor
xchg
xor
and
mov
fisubl
aam
daa
and
lea
and
jl
loopne
int3
jp,pt
addr16
in
mov
loope
pop
mov
dec
adc
push
push
cs
adc
sahf
dec
sub
jae
adc
jle
or
popf
int3
mov
mov
mov
mov
sahf
repz
cld
xchg
and
or
adc
push
push
loopne
pop
xchg
das
sahf
cwtl
mov
cs
adc
sahf
xor
and
pop
sbb
sbb
lcall
jae
pop
div
mov
fwait
dec
loopne
sti
xor
mov
pop
pop
insb
pop
xor
pop
adc
je
out
sbb
cli
or
xor
cld
test
dec
pop
jge
call
shlb
dec
mov
ret
ficoml
lock
sbb
popa
mov
push
js
fst
mov
push
push
iret
sahf
rolb
daa
cltd
push
pop
pop
push
and
daa
adc
and
xchg
in
push
out
push
adc
pop
mov
outsb
out
xchg
bound
xor
and
decl
testl
fnstcw
out
push
call
add
mov
sbb
stos
mov
push
cmpsl
inc
das
jo
adc
fwait
mov
or
cs
jg
call
xchg
loop
xor
in
mov
mov
lret
inc
dec
lods
adc
cmp
in
inc
cmp
test
data16
lock
and
pop
imul
and
mov
mov
xchg
xor
outsl
clc
or
push
fcom
loop
addr16
pop
int3
push
aam
mov
pop
aas
and
xlat
add
loopne
pop
or
jmp
xor
and
add
xor
pop
loopne
stc
shr
push
sbb
sub
xor
sahf
inc
inc
enter
popa
sub
pop
mov
lods
xchg
aas
or
xlat
mulb
xlat
pop
lds
push
es
mov
int3
adc
inc
in
inc
cmp
insb
mov
push
ja
mov
test
xchg
ds
cmp
cs
xor
loopne
jmp
cmp
xchg
mov
stc
push
mov
mov
xchg
icebp
mov
mov
nop
loop
add
xchg
idivb
push
inc
pop
push
sbb
test
cmc
mov
je
loopne
stc
out
dec
jmp
lea
movsl
ds
sub
imul
dec
fwait
fs
sahf
inc
sub
sarb
dec
sbbb
negb
xor
xchg
ja
sbb
iret
test
sub
xlat
xchg
outsb
dec
mov
xchg
sub
and
hlt
je
fdivr
je
mov
push
sbb
pop
fidivl
daa
push
or
xor
andl
ficoms
mov
lods
repnz
in
inc
inc
mov
call
sub
sub
or
dec
and
adc
xchg
sbbl
test
push
in
or
popa
mov
xchg
fnsave
nop
sbb
imul
stc
mov
outsb
jge
adc
inc
and
daa
push
xchg
je
pop
inc
xor
fstps
insb
mov
cmp
mov
movsb
imul
sti
jo
push
call
lds
in
mov
hlt
rclb
fidivl
pop
daa
inc
sbb
repz
fcmovnbe
sbb
andl
xchg
fwait
jno
sbb
rol
jo
call
loop,pt
aaa
inc
sub
insb
inc
fcompl
subl
imul
mov
das
cli
fs
push
in
mov
push
xchg
cmp
jecxz
xor
lret
mov
sahf
cli
sub
xor
xorb
inc
dec
subl
or
into
xchg
movsl
pop
test
insl
sbb
add
sub
xchg
pop
mov
lods
sub
mulb
cmp
mov
fistpl
push
hlt
daa
cmp
aam
mov
sbb
jae
pop
mov
xchg
xchg
jnp
fisubrs
cmp
loop
mov
xchg
mov
adc
add
dec
mov
mov
and
rcrl
je
sub
cmp
add
out
test
repnz
stos
movsl
sub
stos
addr16
jb
loop
adc
and
pop
jne
pop
mov
xor
pop
out
push
mov
bound
xchg
movsl
sub
push
out
ficompl
mov
fmuls
or
in
jp
fs
loop
leave
outsl
cmp
outsl
ljmp
mov
mov
insb
fildll
sub
pop
jp
fimuls
in
mov
and
mov
ret
insb
cmc
ds
outsl
faddl
ljmp
or
addr16
or
push
and
lods
or
fcmovne
jno
xchg
sub
gs
inc
mov
les
das
cli
insb
imul
outsl
popf
push
and
adc
pop
cs
push
mov
sbb
mov
mov
in
add
inc
or
outsb
dec
mov
pusha
cli
sub
adc
sbb
insb
jl
lret
adc
popf
daa
mov
adc
mov
xchg
mov
cmp
fs
faddl
xor
ficoms
lret
adc
cmp
push
sbb
sti
cmpsb
out
imul
jo
mov
out
mov
sbb
out
cmp
das
shl
lret
ljmp
loop
insb
xchg
push
stc
xor
jb
sahf
fcmovb
mov
xchg
xchg
xor
inc
push
mov
push
xchg
insl
notb
xchg
inc
in
push
add
stc
test
cld
cltd
lret
dec
pusha
inc
out
stos
add
rcrb
jle
scas
je
mov
out
lret
push
jb
test
sbb
cmp
mov
inc
mov
jp
inc
adc
or
add
xchg
sahf
xchg
stc
outsb
test
mov
pop
or
out
outsl
cmp
push
sub
sub
adc
sbb
cmpl
or
out
add
lret
dec
push
outsb
xchg
inc
test
aam
ja
xchg
add
in
repnz
stos
mov
push
adc
leave
or
mov
iret
iret
mov
addl
sub
das
sbb
adc
dec
sub
fmull
sbbb
movsb
mov
repz
ljmp
adc
jl
or
cmp
adc
cmp
push
lcall
cmpsb
scas
mov
iret
icebp
pop
mov
push
sahf
or
insl
mov
mov
xor
xor
xor
xlat
dec
shll
loopne
pop
ja
movsl
mov
daa
aad
call
and
sub
mov
mov
mov
insb
or
pop
ds
cmp
xor
jp
inc
lret
enter
cli
insl
sbb
mov
mov
cli
pop
jp
sbb
pop
mov
in
add
cmp
out
cmp
xor
add
popf
xlat
push
addr16
xlat
mov
negb
fwait
je
lds
into
ss
stos
dec
mov
ljmp
je
rorl
add
aad
and
dec
daa
adc
inc
cmc
lods
test
ds
sahf
je,pt
sahf
inc
je
into
scas
xchg
aas
cli
in
add
or
test
dec
je
push
lahf
cmp
hlt
out
mov
fwait
stos
in
adc
xchg
jo
cwtl
sbb
adc
mov
mov
loop
xlat
shll
pusha
fwait
push
xchg
fbstp
mov
lods
bndstx
hlt
mov
lea
stos
push
add
sarb
sbb
xchg
mov
bnd
cmpsl
mov
test
push
sbb
inc
jns
js
sub
or
lret
movb
jae
mov
insl
sub
add
push
xor
insb
lods
fdivl
stc
fcompl
insb
ret
mov
ljmp
test
fcomps
ss
mov
adc
push
mov
fsubl
xchg
imul
cmpb
mov
mov
sub
sahf
in
je
sahf
iret
jne
inc
push
add
ds
cmp
add
inc
pop
je
les
aam
xchg
sti
xor
sub
das
cwtl
xlat
xor
cld
mov
orb
rorb
stc
mov
cmp
dec
adc
ret
mov
mov
sahf
push
je
inc
xchg
ds
in
jns
and
pop
inc
call
cli
int
sub
pop
sub
mov
out
cmpsl
jo
inc
pop
xor
xchg
dec
int3
xchg
adc
lcall
fs
les
cmp
sbb
lcall
ljmp
push
mov
jecxz
loope
adc
add
je
or
fsub
jae
mov
mov
pop
insl
add
xor
outsl
push
jmp
imul
mov
mov
xor
lret
pushf
cltd
jbe
dec
and
cmp
mov
sbb
sub
movsl
test
pop
divb
insl
loope
ffree
int3
call
test
xchg
std
repz
or
xorl
cmpb
enter
and
mov
dec
push
xchg
je
push
mov
je
sbb
cmp
fsubrs
pop
popf
loop
lretw
add
aaa
push
scas
push
imull
sahf
push
sub
pop
stc
mov
rcrb
pop
lcall
jno
sbb
fwait
nop
mov
xchg
pop
pusha
xlat
sub
test
jge
lret
rorb
negb
add
mov
jle
lret
push
mov
sub
jg
or
pushf
or
sub
rol
xor
mov
aas
repnz
shl
sbb
testl
iret
dec
inc
adc
sub
fwait
out
jl
repz
mov
push
cmp
out
push
into
mov
add
sbb
mov
dec
out
imul
mov
mov
or
mov
mov
neg
insb
xlat
xchg
ficompl
sub
pushf
xchg
fistpl
lods
mov
jmp
xchg
fwait
insl
rep
push
data16
adc
cmp
pop
sbb
rolb
adc
adc
pusha
cwtl
aaa
fsubl
xchg
add
loopne
and
adc
out
push
pop
dec
loopne
or
push
sti
pop
pop
push
idiv
out
ljmp
jbe
cmp
jne
nop
mov
stos
add
pop
mov
adc
cmp
test
into
pop
mov
ret
push
mov
or
pop
add
push
dec
sub
adc
mov
ss
and
mov
push
fwait
mov
dec
or
rorl
xor
invd
daa
test
imul
xchg
cmp
cmpsb
cmp
pop
push
mov
cli
cwtl
xor
jb
pop
lahf
test
loopne
push
pop
loopne
push
jmp
pushf
insb
std
in
out
loop
ljmp
sahf
mov
or
push
cmpsb
and
mov
orb
jae
cli
jge
inc
add
push
push
mov
jmp
bound
int3
fwait
jp
addr16
and
jbe
insb
mov
js
push
mov
mov
fbld
cs
loopne
push
mov
cmpsl
mov
loop
xchg
fwait
daa
mov
sub
dec
mov
mov
mov
jle
aam
mov
or
adc
add
daa
call
movsb
pop
test
add
sub
sahf
negl
mov
lods
loop
pop
adc
cmp
mov
je
sahf
jge
call
sti
cli
je
sahf
cmp
stos
mov
pop
xchg
push
mov
std
jne
ret
xchg
xchg
mov
in
in
push
mov
test
pop
mov
leave
fstps
or
in
leave
mov
mov
mov
mov
push
daa
ja
mov
cmp
lock
hlt
add
xlat
jns
inc
xlat
mov
gs
lock
movsl
das
sub
pusha
ljmp
lea
add
loopne
scas
lods
pop
iret
push
stos
mov
xor
fimuls
das
loop
mov
or
insl
cli
cwtl
push
ljmp
inc
std
jp
daa
stos
xor
and
daa
fwait
push
stc
notl
jecxz
sahf
lret
sahf
das
add
mov
sti
ficoms
in
int3
je
or
mov
or
or
add
xor
repnz
ljmp
insb
push
pop
call
pop
dec
xchg
mov
sahf
or
rclb
xor
in
or
clc
fnsave
insl
hlt
mov
dec
cwtl
pusha
sbb
pusha
sub
mov
rcr
mov
or
mov
mov
cmp
xor
xchg
imul
stos
pop
push
insb
pop
fcompl
push
ret
push
push
daa
mov
push
sti
lea
mov
lcall
test
xchg
sub
out
pushf
sbb
ljmp
xchg
data16
mov
outsb
jbe
mov
xchg
jae
ficompl
add
push
push
sahf
loop
and
cltd
out
lock
ret
cltd
and
mov
or
push
mov
dec
and
cmpsb
pop
and
sahf
je
out
xchg
add
in
out
pop
imul
mov
pop
inc
mov
pop
adc
nop
je
adc
push
adcb
or
adc
dec
cmp
bound
mov
out
or
in
std
and
mov
xlat
hlt
and
fwait
dec
out
xor
repnz
mov
push
in
inc
lock
sub
sub
xlat
fcomps
mov
test
xchg
jp
cwtl
cli
dec
daa
mov
mov
xchg
mov
sahf
push
test
incl
mov
cmp
ret
orl
in
mov
adc
mov
insb
mov
daa
push
mov
xor
loop
cmp
xorb
cmpl
xor
mov
les
jg
fsubs
jno
mov
aad
sbb
push
ss
mov
mov
movsl
into
mov
fisubl
es
cmp
add
pushf
xor
xchg
adc
int
cmpsl
call
test
xor
sub
xor
adc
mov
mov
pop
popa
sub
xchg
mov
sbb
clc
and
fisubs
mov
push
insb
out
sub
adc
in
mov
mov
xchg
aam
jp
sbb
mull
popf
xor
sub
mov
mov
inc
push
lods
scas
movsb
stos
adc
daa
cmp
xchg
loop
or
lock
call
data16
in
or
cli
loopne
and
pop
mov
jb
data16
adc
nop
cmp
xchg
loop
mov
mov
mov
arpl
in
test
mov
cmpsb
js
push
sbb
push
cmp
insb
rep
inc
push
push
push
push
fs
jmp
das
sbb
push
lock
mov
popa
decb
push
mov
xchg
jns
mov
ficoms
adc
or
cld
cld
xchg
push
push
es
xchg
cmc
icebp
test
and
movsl
cmp
sbb
adc
std
jns
in
xchg
cmp
sub
mov
das
movsl
and
sub
mov
xor
sub
push
add
fnstsw
test
cmpsl
aaa
adc
daa
out
lahf
in
mulb
in
sbb
adc
adc
sbb
pop
dec
push
loopne
pop
mov
add
rcrb
push
mov
add
jae
int3
fdivrs
mov
call
sub
cmp
push
add
out
push
adc
es
mov
fucomi
mov
fsubs
cld
mov
jne
xchg
xchg
or
ror
jl
pop
cmp
mov
andb
lcall
ficompl
cmc
push
xchg
cmp
jmp
mov
jge
sbb
repnz
mov
pop
mov
test
cmc
fimull
mov
cmp
sahf
and
cwtl
sahf
ss
jle
push
sub
xor
push
mov
gs
sub
hlt
add
shll
dec
out
je
sahf
cwtl
je
sahf
cmc
je
sahf
fisubs
sub
mov
or
insb
aam
lret
pusha
mov
cmpsb
mov
cmp
aas
jb
bound
hlt
cwtl
in
xor
mov
mov
dec
inc
adc
mov
movsb
in
push
imul
and
add
pop
cli
cmp
in
xor
and
and
mov
jmp
cli
pushf
sbb
add
sub
xorb
xchg
sub
inc
mov
addr16
and
mov
test
out
fdivr
inc
lods
mov
test
fsubrs
sub
lahf
aas
mov
loop
xorl
cmp
pop
jl
les
push
jno
mov
je
sahf
ret
stos
add
and
data16
sahf
adc
jl
sarl
loopne
in
dec
je
sahf
mov
xchg
lahf
cmp
inc
dec
fmull
inc
mov
ss
cmc
push
xchg
cli
loopne
push
iret
out
out
ss
js
cmp
out
pop
scas
adc
xchg
mov
stos
lods
push
mov
js
test
push
inc
xlat
fcoms
hlt
and
adc
clc
data16
enter
mov
xlat
push
xchg
js
bound
xchg
out
lock
sbb
cmp
adc
push
bound
out
mov
jp
and
mov
out
repz
fs
je
addr16
inc
fdivl
cmpsb
sbb
push
sub
das
out
adc
stc
in
mov
int3
repnz
and
ficoml
mov
fidivs
loopne
hlt
imul
test
cmc
and
aas
mov
imul
push
mov
test
ret
or
and
fisubl
mov
mov
xor
xchg
pop
and
inc
jp
inc
daa
dec
xchg
inc
adc
push
pop
mov
repnz
add
add
or
aas
fisubl
push
or
cld
mov
add
lret
push
repz
out
adc
xor
int3
loope
adc
fimuls
push
cmp
test
fiaddl
sbb
dec
mov
mov
push
mov
addb
jp
adc
inc
into
xchg
mov
pushf
xchg
movl
fldcw
lcall
adc
ljmp
andb
push
cmpsl
jecxz
js
in
add
push
sbb
aas
icebp
dec
nop
imul
jp
xchg
fisubrs
cmpsl
mov
mov
lods
inc
pop
enter
sahf
jb
push
and
or
push
stc
shlb
inc
add
or
into
xor
pushf
clc
cld
mov
lea
lcall
fdivl
jnp
inc
jo
test
cmpsl
dec
mov
dec
adc
inc
lock
sahf
push
dec
mov
out
sub
pop
push
stc
sub
into
data16
adc
inc
dec
ljmp
out
mov
addr16
mov
negl
mov
dec
jl
mov
cli
sahf
dec
add
push
mov
and
push
mov
test
cmp
enter
or
sub
cmp
push
cli
push
shlb
xor
adc
mov
pop
mov
sub
insb
xchg
call
xchg
movsb
jg
adc
call
aam
pop
xor
or
mov
dec
cli
lahf
inc
and
stos
jb
xchg
fadd
push
sub
add
cmc
cmpb
mov
lock
xorb
rorl
js
adc
inc
inc
pop
sahf
xor
bound
int
inc
sub
inc
jno
push
and
cwtl
mov
addr16
pop
push
sahf
xchg
das
cs
or
mov
xor
lret
dec
or
adc
pop
xor
inc
fwait
mov
pop
lods
cmpsl
sbb
xchg
inc
add
std
stos
fisttps
mov
xchg
je
hlt
and
aad
shlb
push
mov
xchg
stc
and
push
loopne
or
sub
pusha
pop
in
mov
adc
fwait
out
mov
iret
adc
loop
xorb
inc
hlt
jge
adc
cmpsb
loop
loop
or
in
push
xor
jno
push
mov
jbe
xchg
js
and
or
pop
enter
fisubs
rolb
lcall
push
jl
mov
push
mov
lahf
sahf
ret
or
xor
push
adc
dec
xchg
lock
sbb
ljmp
aaa
jl
or
sub
mov
xchg
jns
mov
fmull
inc
cs
pop
jno
lcall
loop
or
sbb
add
add
mov
pop
jp
sbb
push
sub
outsb
cwtl
hlt
pop
call
xlat
lret
cs
or
test
sub
pop
fcompl
movsb
sbb
loopne
pop
stos
adc
test
movsb
pushf
mov
add
test
movsb
inc
sahf
clc
push
in
push
negl
cwtl
aam
push
jp
xchg
add
pop
rolb
add
call
mov
mov
xchg
jle
fcomps
push
dec
test
data16
dec
lock
xchg
fdivl
push
mov
jl
lock
add
idivl
sbb
std
ficompl
mov
or
es
pop
scas
repnz
leave
mov
mov
cmpsl
call
ficoms
cmpb
fiaddl
jne
sti
xchg
pusha
in
out
pop
rcll
and
adc
cltd
pop
test
adc
dec
inc
push
mov
mov
xor
repnz
or
sbb
repz
sub
pop
mov
mov
sub
cmp
outsl
mov
pop
xor
inc
addr16
push
shl
adc
sahf
sub
push
ds
dec
cmp
cmp
and
imul
sbb
shll
cmp
dec
cld
and
sahf
orl
out
dec
mov
push
mov
inc
daa
inc
movsl
sbb
fistpll
in
int
push
sub
sub
push
je
cmp
pop
jg
pop
mov
fdivrs
mov
loopne
adc
and
jg
leave
mov
clc
scas
jae
adc
sub
and
push
hlt
je
pushf
out
ret
scas
jnp
ljmp
je
loop
fwait
and
adc
in
dec
shl
sub
mov
fidivs
mov
sbbb
xor
out
dec
sahf
rorl
cmpsb
ret
shll
out
out
dec
icebp
pop
cltd
dec
inc
xor
pop
jmp
cltd
scas
xchg
out
pop
lret
mov
notb
aad
jle
xchg
inc
jp
xor
ja
mov
sahf
mov
mov
sti
xor
insb
jl
loopne
or
std
mov
jl
pop
xor
mull
push
mov
loope
faddl
sub
mov
jl
or
imul
push
push
xchg
or
insb
and
test
rcll
or
jl
nop
clc
cmp
js
or
push
and
es
lret
mov
cmp
popa
cltd
repnz
mov
mov
cli
jns
push
test
mov
rcr
ljmp
js
and
test
fadd
mov
cltd
cmp
pop
mov
sti
pop
js
inc
js
xor
out
or
call
mov
sub
add
dec
inc
mov
ret
popf
push
subl
xor
pop
pusha
pop
xor
and
push
sti
adc
xchg
mov
icebp
sbb
push
add
negl
inc
pop
dec
dec
mov
inc
lahf
adc
adc
fisubs
and
and
aad
jge
pop
sub
je
popf
fidivl
mov
aas
ljmp
adc
xor
dec
jno
adc
repnz
rcrb
sti
sub
sub
or
sbb
mov
sub
push
mov
mov
jb
lahf
cmpb
xchg
adc
out
mov
loop
cmp
or
sahf
jge
ljmp
sub
lds
push
cmp
jno
xchg
xlat
lods
xchg
jle
orl
scas
pop
push
mov
pop
jb
enter
bswap
or
push
lret
add
sti
add
add
jge
or
mov
jg
out
cs
mov
jne
call
je
push
pop
inc
test
sub
dec
sub
je
out
cmp
mov
pop
cmpsl
push
pop
cmpsb
out
xor
push
aad
fimuls
and
mov
decb
xchg
pop
pop
jp
dec
pop
test
mov
pop
std
add
scas
shl
sbbb
cs
dec
nop
mov
mov
sbb
push
mov
cmp
in
das
pusha
push
cld
mov
dec
xor
out
les
mov
into
or
call
loop
mov
jge
cmp
mov
mov
filds
add
xchg
aas
xor
dec
push
and
movb
push
mov
sub
mov
xor
fisubs
movsb
ljmp
test
test
xchg
loope
push
ret
addb
ss
xor
out
or
cmpsb
aad
dec
or
push
mov
xor
fmuls
fst
dec
dec
xchg
sbb
cmc
fsubrp
pushf
push
dec
dec
pop
add
clc
sub
loopne
pop
xchg
dec
test
jo
mov
fbld
clc
inc
mov
pop
insl
mov
jmp
sub
outsb
jmp
fadd
pop
and
mov
mov
push
cmp
sbb
jbe,pt
stc
push
pop
cmp
bound
add
mov
inc
shl
movsb
popf
inc
xchg
call
dec
xor
out
pop
push
pop
out
pop
loopne
cmp
fnstcw
adc
jnp
aaa
leave
into
and
or
scas
adc
les
hlt
push
push
push
xchg
xor
and
xchg
filds
adc
insb
clc
repnz
mov
add
or
or
mov
sbb
test
jbe
cmp
add
js
mov
adc
notl
test
and
xchg
ret
xchg
mov
cmpsl
leave
adc
movsl
rclb
add
push
mov
lea
inc
pop
push
cwtl
jecxz
int3
mov
pop
andb
xor
xor
in
fninit
mov
sarb
das
mov
sbb
insl
outsb
jae
repnz
dec
lods
or
mov
icebp
cmp
mov
movsb
xchg
inc
inc
hlt
ret
and
lock
daa
pop
fldt
mov
dec
jbe
add
cwtl
inc
xchg
cld
or
fwait
inc
stc
ret
test
ds
cmpsl
cmp
ds
lea
mov
mov
insb
nop
sbb
xchg
jge
pop
mov
loop
pop
mov
pop
pop
jno
or
data16
lods
sahf
push
and
in
xchg
dec
xor
inc
insb
adc
mov
or
or
add
fwait
mov
mov
fs
rcrl
push
pop
lcall
cmp
mov
test
adc
sbb
add
mov
bound
fidivs
clc
loopne
pop
and
inc
jae
les
dec
pusha
push
stc
out
js
pop
lock
movsb
sarb
fwait
popf
in
pushf
sbb
adc
fmuls
push
imul
in
cltd
adc
sbb
push
or
fsubrs
mov
cmpsb
cs
xor
test
mov
or
xor
push
test
ljmp
mov
jl
xor
into
pop
fsubrl
inc
push
es
add
adc
mov
test
xor
xor
sub
addr16
xor
or
lcall
mov
xlat
push
out
mov
xor
lods
movsl
fsubrs
dec
outsb
insl
xor
mov
ret
test
cmpsb
pushf
mov
shlb
inc
mov
es
dec
stos
lods
fiadds
loopne
and
pushf
daa
rcl
in
sbb
pop
xchg
cmp
inc
pop
mov
pop
lods
sbb
pushf
sbb
call
mov
lcall
out
mov
inc
enter
pop
adc
ljmp
or
iret
imul
mov
push
xor
pop
xlat
mov
popa
xchg
sbb
stos
push
cmp
add
xchg
les
daa
cmpsb
dec
orb
jp
or
push
repnz
cmpsl
loop
icebp
lret
les
push
push
sbb
mov
clc
ja
testb
imul
sti
cmp
sub
out
in
adc
dec
iret
call
mov
mov
insl
mov
add
lods
aas
or
sub
in
out
fisubrs
push
fucomip
jb
pop
aaa
rep
pop
inc
push
fs
jne
ljmp
push
sub
xchg
fidivl
sahf
add
das
mov
fdivrl
es
dec
mov
xchg
imul
sub
out
stos
into
adc
mov
push
inc
push
push
stos
push
xchg
std
adc
cmp
cmpsl
xchg
inc
mov
fs
inc
xor
popf
divb
out
icebp
fnstcw
pop
dec
push
mov
xor
bound
jae
sbb
mov
jp
push
push
or
loopne
or
test
pop
sub
pop
mov
adc
add
mov
add
xor
stc
add
push
int3
mov
lcall
xchg
stc
jp
cmp
ja
mov
jle
daa
inc
pop
outsb
js
scas
push
cmc
inc
xchg
int3
aas
xchg
nop
nop
cmp
rcll
test
cmpsl
in
iret
filds
fwait
mov
pop
fwait
xor
inc
or
inc
or
icebp
push
mov
mov
jno
aam
xchg
lods
sub
sbb
es
daa
sbb
aaa
into
push
movsl
cli
xchg
arpl
cmp
inc
les
shrl
sub
pop
into
jnp
dec
add
lods
mov
out
les
push
repz
fwait
add
pop
sbb
cmpb
imul
or
out
or
jmp
outsl
adc
jmp
cli
sbb
icebp
ret
repnz
or
scas
testl
xchg
sub
lcall
test
repz
sahf
xor
bnd
test
inc
and
adcb
mov
cmp
rclb
adc
fidivrs
es
es
test
push
mov
sbb
mov
jbe
push
jbe
hlt
in
and
andb
sti
mov
xor
and
sub
loop
pushf
or
leave
jo
daa
push
orb
sub
adc
jge
js
xor
fcomi
mov
xchg
hlt
sub
fisubs
in
mov
mov
push
push
inc
mov
js
fadds
insl
stos
movb
lods
sbb
rcrb
icebp
mov
or
push
clc
add
xor
and
mov
rorl
int3
push
pop
dec
outsb
out
push
scas
dec
mov
fcomip
mov
pushf
in
mov
mov
cli
out
xor
sbb
add
cmp
shl
js
hlt
lret
cmp
js
add
cmp
into
adc
sbb
fcoml
add
mov
xchg
call
loop
mov
xorb
adcb
and
mov
mov
mov
repnz
pop
pop
push
adc
xor
mov
and
adcl
mov
add
loop
xor
stos
cltd
add
mov
push
fmull
mov
sbb
jg
jno
scas
push
and
in
xchg
mov
out
add
xor
push
cli
loop
sahf
fs
call
pop
clc
loope
push
out
repz
sbbl
insb
and
mov
push
lea
imul
cld
stos
mov
xlat
adc
sbb
adcb
dec
or
lret
repnz
test
sbb
mov
sahf
in
lret
into
insl
sbb
nop
call
dec
cmp
lds
jmp
xor
adc
xchg
xlat
pop
vmovshdup
adc
push
push
push
or
and
and
cs
pop
lahf
je
outsb
pop
popa
sti
icebp
cli
loopne
inc
mov
flds
xor
mov
pop
fwait
sub
cmp
sbb
mov
cmp
jo
dec
les
push
sub
or
add
pop
lea
data16
mov
xchg
jmp
inc
daa
outsb
mov
mov
cmpsb
push
pop
add
cmp
push
push
cmp
iret
pop
dec
mov
pop
dec
test
cli
mov
clc
mov
dec
sbb
cmp
inc
mov
outsb
hlt
movsb
or
pop
test
push
push
xor
aaa
inc
mov
xchg
subl
push
adc
fistps
ffreep
dec
cli
fiaddl
xchg
mov
mov
in
xorb
clc
shrl
push
movsl
outsl
jb
pop
pop
push
into
test
jmp
daa
sbb
lret
cld
loopne
mov
stos
addb
sub
sub
mov
adc
lods
ret
and
mov
nop
push
popa
mov
push
push
push
loop
loop
loop
clc
push
fimuls
ds
cli
orl
mov
dec
sub
movb
or
jb
adc
or
cwtl
mov
outsb
jmp
and
xchg
dec
push
movsb
xor
hlt
fnsave
jmp
cmp
dec
ds
jp
lcall
sbb
xchg
cmp
std
rcl
mov
mov
test
jge
out
mov
sahf
pop
bound
mov
int
movsl
cmpsb
lock
loop
fwait
adc
mov
xor
adc
adc
dec
loopne
and
outsb
add
adc
and
dec
mov
adc
sbb
push
push
inc
es
dec
xchg
hlt
std
aas
xor
call
dec
clc
cmp
lds
or
mov
dec
cmp
or
xor
mov
stos
sbb
xor
fldenv
out
cltd
js
ffreep
mov
in
pop
inc
push
or
sbb
outsl
rcrb
sbb
jnp
ror
outsb
inc
hlt
cmp
cwtl
lock
jp
call
aad
or
push
pop
je
lcall
jb
rcrl
inc
hlt
sbb
adc
jns
push
into
cwtl
pop
lds
push
adc
lock
movsl
icebp
or
cmp
call
js
ret
orb
sti
je
cs
xor
or
fs
lock
lcall
jmp
in
xor
or
and
repnz
pusha
xchg
push
or
stos
xchg
adc
inc
js
push
push
nop
jns
loop
out
aas
in
xchg
inc
les
xor
xchg
push
test
cmp
and
sbb
js
inc
add
add
lret
sbb
or
adc
adc
cs
mov
sti
loop
sub
arpl
cwtl
fcoms
imul
dec
dec
adc
pushf
inc
mov
pusha
daa
push
jae,pt
pop
add
hlt
xchg
push
std
pop
push
inc
out
dec
sahf
mov
xchg
mov
mov
push
cmp
xchg
ljmp
imul
jmp
fwait
outsb
jmp
loop
push
icebp
in
sub
push
jo
pop
mov
dec
dec
mov
xor
sarb
cmp
xor
cmp
in
ret
sub
hlt
popa
fcompp
xor
inc
mov
mov
sbb
push
mov
jp
adc
mov
or
bound
les
adc
xchg
mov
das
mov
add
jge
xor
jmp
and
ret
xor
cmp
dec
jo
mov
mov
sub
mov
fsubs
xor
roll
stc
lock
cmp
mov
rcrl
ja
and
insb
push
xor
sub
inc
lret
cmp
and
arpl
ds
out
in
fidivrl
xchg
sti
test
or
inc
cmpsb
fisubrl
cmp
fistpl
pusha
push
xor
pop
test
mov
sti
pop
push
add
jp
pop
ret
inc
stos
mov
mov
into
dec
iret
push
pop
lcall
mov
insl
cmc
flds
pop
outsb
mov
xchg
xor
aas
out
out
in
scas
pushf
mov
lcall
scas
lcall
sub
loopne
loop
jmp
push
push
and
test
push
stos
mov
sbb
xor
imul
out
or
nop
push
and
ds
in
lea
mov
mov
or
pop
mov
xchg
sarb
in
jb
cmp
adc
xchg
scas
cli
xor
out
jns
adc
pop
into
sbb
push
or
sbb
jle
adc
push
lcall
ret
push
fdivr
shlb
mov
stos
mov
and
negl
mov
mov
loop
and
lret
rcrb
test
pop
or
sub
sbb
clc
mov
and
dec
stos
cli
pop
push
outsb
cli
lcall
xlat
cmp
clc
aad
lods
test
pop
mov
xor
jno
out
lock
dec
out
aam
mov
adc
pop
outsl
enter
mov
fmul
inc
lock
lods
fdivp
sahf
bound
adc
sub
mov
call
jp
outsb
cmp
push
out
sarl
fcompl
cld
inc
sbb
dec
add
lret
cmp
ljmp
mov
popf
and
mov
aaa
int
mov
pop
adc
and
xchg
aam
cmp
insb
out
fcoml
xor
push
clc
cmp
mov
mov
mov
scas
sbb
lahf
push
cmp
lret
jge
cmpsl
aam
or
or
stos
lods
xchg
jmp
daa
mov
add
cmp
mov
test
cmp
lret
cmp
in
out
icebp
mov
dec
push
mov
ss
mov
fwait
mov
lock
mov
xchg
adc
mov
scas
sahf
insl
int
aam
cmp
jl
stc
into
adc
sahf
stc
pop
lret
in
sbb
sub
sub
jg
aam
sub
sbb
fwait
shlb
xchg
fcoml
fdivr
cs
out
fbstp
cmp
pop
outsl
fcmovu
inc
lret
cmpsb
test
or
add
or
fdivrs
push
jecxz
fiaddl
xchg
mov
push
mov
mov
mov
fsubs
je,pn
mov
in
mov
shrl
je
test
jge
lret
fiadds
jp
adc
add
in
push
mov
lock
fsubrl
fwait
sub
xchg
or
jo
daa
fmull
stos
lcall
inc
pop
mov
or
fisubrl
mov
ds
fwait
or
cmc
add
daa
push
sahf
ljmp
and
daa
xlat
pop
inc
cmp
jbe
clc
adc
orb
lea
add
sub
sahf
mov
call
mov
xchg
fs
out
mov
pop
and
and
popf
and
jnp
cmp
out
ljmp
or
repnz
das
sub
pop
cs
ror
test
sbb
into
push
pusha
pushf
mov
inc
jmp
outsl
aam
pop
mov
add
mov
fwait
bound
icebp
dec
push
jb
nop
rclb
and
inc
xchg
ja
mov
sahf
aam
pop
push
sub
push
stos
shlb
repnz
lock
in
mov
repnz
push
jmp
hlt
cmp
jns
adc
insl
adcl
das
jl
fs
jo
fistps
ljmp
negb
cmp
aad
or
es
jle
adc
sti
loop
lods
mov
sbb
idiv
aas
movsl
mov
inc
ljmp
insb
mov
xchg
dec
sub
sub
jge
pop
xchg
repnz
sahf
cmpsb
std
ljmp
inc
xchg
cli
fdiv
enter
pushf
out
jle
mov
es
xor
push
inc
aaa
fadds
ret
mov
out
and
imul
xchg
fidivrs
dec
incl
sub
hlt
pop
sub
inc
aam
testb
nop
mov
lods
inc
mov
xchg
or
sbb
mov
stos
dec
cwtl
popf
lahf
cmp
sub
in
dec
sti
mov
xchg
jle
cmp
sub
pop
mov
insl
sub
sub
inc
push
lods
sbb
dec
cwtl
jle
adc
js
pop
shll
out
sub
in
daa
xor
xchg
adcl
xchg
dec
je
into
cmp
aam
sbbb
sti
lds
popf
hlt
cmp
sub
push
in
bound
subl
movsb
lret
adc
xorb
push
xchg
cmp
movb
jge
add
xor
xlat
loop,pt
jmp
mov
push
stos
xchg
dec
test
mov
stos
mov
mov
lock
iret
je
cmp
sbb
outsl
push
ljmp
push
cltd
push
pop
mov
mov
push
in
adc
sbb
arpl
outsl
enter
lea
and
lcall
push
repnz
rcr
push
je
jp
mov
nop
lods
xor
sbb
mov
test
fsub
gs
push
push
in
and
dec
lds
loop
enter
add
xchg
clc
lahf
mov
push
xchg
mov
inc
mov
mov
sbb
mov
jle
dec
mov
call
pop
mov
fidivrl
hlt
xchg
ds
dec
mov
mov
sbb
adc
adc
mov
les
push
mov
movsl
pop
push
dec
inc
std
call
pop
xchg
sub
out
lcall
je
adc
in
icebp
fsubs
jo
add
or
dec
dec
arpl
je,pt
in
insb
mov
xchg
or
sti
loop
adc
sbb
lock
insb
xor
call
sarl
xor
mov
filds
loopne
fadd
cltd
add
jb
sbb
sub
stos
xlat
push
rclb
cld
xchg
das
xor
cs
mov
inc
rcrl
call
ljmp
cmp
fdivs
sub
outsb
adc
test
je
aam
into
stc
mov
adc
adc
fcmovb
mov
and
sub
mov
xchg
loop
adcb
rolb
mov
cmp
jl
stc
pop
pop
dec
je
int3
push
xchg
insb
mov
mov
sub
loop
xor
std
mov
fs
sbb
mov
xlat
sbb
or
loopne
or
shll
je
cmp
cli
test
cmpsb
or
push
je
sbb
lahf
decl
add
addr16
or
lahf
js
mov
add
movsl
fadds
mov
xor
jp
or
push
scas
adc
call
insb
inc
in
fmul
mov
push
loop
and
in
pop
cmp
mov
adcb
andb
xchg
or
arpl
fwait
inc
xlat
xor
xor
mov
dec
sub
pop
and
xor
jp
push
fwait
in
jle
sbb
mov
jecxz
add
sahf
rorb
stos
ficoml
insb
jl
jb
repnz
test
ds
outsb
fsubs
and
xchg
ss
movsbl
pop
js
push
loope
adc
test
enter
fiadds
mov
mov
shrl
mov
jo
mov
scas
push
out
stos
sbb
and
call
or
enter
cmp
mov
mov
or
push
mov
subb
cmp
insl
sub
add
or
lods
add
dec
pusha
pushl
mov
popa
sbb
cli
rorl
mov
insb
ljmp
sub
hlt
mov
insb
mov
imulb
pop
idiv
in
dec
dec
movsb
cmpb
mov
cltd
jle
cmp
push
cmp
xchg
adc
mov
sub
push
mov
addl
arpl
cwtl
mov
add
dec
dec
mov
or
jo
jmp
data16
or
repnz
inc
sub
lcall
inc
pop
sub
cli
shl
mov
enter
mov
pop
out
sbb
jo
pop
mov
sbb
lcall
push
movsl
push
jbe
mov
jle
add
mov
inc
neg
push
push
mov
int3
lret
push
xchg
shl
loop
xchg
pop
daa
les
mov
loop
xchg
xor
cmp
aaa
fisubrs
mov
incl
cmp
mov
fwait
out
test
add
inc
xchg
adc
mov
xchg
in
and
mov
push
cli
es
push
pop
pop
pop
jnp
adc
mov
repz
mov
push
lock
aad
add
xor
subl
sbb
mov
repnz
mov
adc
xchg
add
incb
sub
rclb
loopne
scas
mov
sub
in
push
dec
push
add
xor
fsubs
cmc
inc
or
cld
cmp
jo
jp
push
nop
loop
addr16
push
adc
inc
mov
mov
clc
in
pop
jge
adc
insl
call
test
lret
sbb
test
outsb
inc
mov
in
xor
call
and
lcall
mov
or
cld
sbb
les
scas
popf
in
cli
call
pop
lcall
dec
mov
shrb
adc
je
into
rolb
icebp
xor
rcr
lret
jge
sarl
addr16
in
jle
clc
add
cli
iret
lock
xchg
sub
mov
push
aas
xchg
and
mov
fbstp
mov
pop
inc
push
and
std
or
ficompl
push
push
scas
mov
or
push
mov
dec
cld
push
hlt
nop
fstl
mov
rcrl
in
xchg
sahf
inc
and
stos
mov
cld
mov
es
xchg
push
mov
icebp
lcall
sub
jb
sub
in
adc
sbb
lods
xchg
push
lcall
test
adc
xchg
push
push
in
push
cmpsb
xchg
xchg
mov
jge
lds
mov
pushf
iret
fidivs
sahf
data16
xor
enter
sti
adc
stos
xor
or
adc
mov
hlt
mov
mov
add
out
mov
cld
push
push
or
mov
or
aam
cmp
in
scas
mov
cld
addb
call
int3
xchg
cmp
fisubrs
cmpsb
fcmovu
bnd
pop
es
mov
push
push
scas
sub
xor
data16
fwait
sub
testb
mov
pop
divb
xchg
inc
adc
je
xor
cltd
mov
mov
adc
testb
xor
subb
mov
inc
fsubl
xchg
fmull
or
sbb
sahf
mov
outsb
inc
and
adc
test
push
repz
sub
push
mov
fsubr
jne
cmp
addr16
loop
das
push
push
jno
addb
mov
xchg
inc
inc
mov
pop
ljmp
inc
xchg
cwtl
push
ss
sbb
arpl
aaa
ror
sbbb
cs
outsl
call
add
nop
int3
cmp
pop
xchg
pop
iret
push
add
adc
or
pop
add
nop
and
xor
pop
mov
in
fisubrs
push
test
dec
cwtl
xor
xor
cmp
push
sbb
int3
addr16
inc
sbb
xchg
push
cs
negb
shll
mov
sbb
es
cli
adc
popa
adc
add
cltd
inc
or
cmc
adc
or
pop
inc
push
je
fsubrl
in
push
mov
cld
scas
pop
add
mov
xor
inc
ret
scas
ds
pop
adc
fimuls
enter
pusha
mov
jg
out
cmpsl
mov
xlat
add
ret
mov
mov
mov
lcall
rcll
in
mov
xchg
lock
pop
pushf
std
sub
call
call
push
adc
xor
xchg
daa
xor
fs
fmul
dec
clc
jne
jle
push
cltd
xchg
lock
insb
cwtl
mov
data16
out
xchg
jecxz
push
xchg
sbb
ret
stos
xchg
scas
mov
cltd
test
mulb
loope
fstpt
sub
xchg
inc
popf
fwait
dec
jbe
mov
adc
mov
stos
cld
jb
fs
pushf
mov
movsb
repz
ds
sub
movsb
sbb
inc
jo
ret
jno
adc
sti
and
push
scas
mov
and
lods
mov
add
inc
cmpsl
pop
out
insb
xor
ds
xor
sar
inc
in
pop
inc
jecxz
mov
push
es
es
mov
xor
movsl
sub
mov
fcom
lea
inc
les
addr16
xchg
pop
dec
adc
xor
adc
mov
cmc
ret
lds
enter
subb
pop
test
mov
scas
into
inc
js
fsubl
insb
xlat
nop
test
into
insb
repnz
loope
imul
sbb
cld
les
sahf
or
pop
sub
das
int3
add
xchg
sub
cmpsl
push
inc
ret
mov
je
push
xor
sahf
and
mov
cli
push
mov
add
dec
pushw
addr16
xor
xchg
js
xchg
pop
lahf
pushl
or
cs
inc
jl
call
clc
push
pusha
push
sbb
lcall
pop
lods
sbb
or
push
lea
and
xchg
push
hlt
test
lret
aas
call
popa
jnp
jp
enter
adc
xchg
in
scas
cs
mov
aas
aad
int3
inc
ss
mov
insb
jl
pop
or
jno
cwtl
lret
ss
ds
jle
pop
mov
adc
mov
adc
mov
cmpsl
adc
mov
mov
cld
pop
adc
loop
jns
add
cmc
fldenv
pop
mov
daa
insl
pusha
sahf
mov
sbb
roll
xchg
icebp
and
pop
ds
into
or
sbb
mov
jo
xor
sbb
push
add
pop
push
sub
stos
or
or
sbb
mov
adc
sbb
xor
rorb
adc
or
inc
mov
sbb
repnz
jle
out
push
dec
call
adc
scas
push
loop
out
enter
push
or
sbb
mov
fs
jge
sbb
hlt
jo
pop
adc
es
push
xchg
cs
repnz
adc
les
add
insl
xchg
nop
int3
mov
nop
js
mov
mov
in
popa
inc
sbb
xchg
push
cmp
mov
dec
jo
outsb
pop
imul
fs
ljmp
out
cmpsl
push
test
xor
or
pusha
sahf
iret
mov
call
into
popf
lock
sub
push
push
xchg
jl
cltd
dec
sbb
sub
push
xor
out
sub
stos
pop
inc
mov
sbb
push
mov
and
jbe
imul
nop
cltd
loopne
or
adc
cltd
fwait
test
xor
add
cld
jo
and
jmp
js
rclb
push
xchg
je
mov
or
jmp
mov
jmp
loopne
sahf
scas
cmp
sbb
mov
and
jl
mov
add
pop
outsb
or
and
mov
testb
lcall
mov
mov
add
and
fs
and
call
xchg
fidivrs
daa
pop
into
das
xor
pop
cmp
fisubs
xchg
loop
xor
and
stos
mov
out
into
xchg
pop
xchg
imul
xchg
and
pop
repnz
push
subb
push
adc
jo
jle
sub
mov
sub
shlb
mov
ds
hlt
jg
cs
sbb
imulb
sbb
dec
aam
xlat
loope,pn
add
xchg
jmp
jb
xlat
mov
jbe
cli
fmull
fbstp
add
loop
or
fidivrl
push
xor
cmpsl
lret
jbe
rclb
pusha
enter
jmp
cmp
ljmp
xchg
out
adc
leave
data16
mov
jp
push
ret
cmc
sahf
dec
jae
test
lea
jnp
ret
pop
mov
ljmp
and
test
xchg
repnz
les
sahf
xchg
test
paddsw
cmp
pop
or
push
sbb
or
mov
jnp
and
sahf
loop
mov
pop
sbb
add
cld
push
scas
dec
lea
outsb
jge
inc
sbb
or
inc
adc
in
cltd
and
xor
or
lret
cmp
mov
cmpsl
sbbb
push
add
xor
mov
adc
xor
les
lods
sub
pop
and
nop
sbb
mov
push
repz
xor
cltd
cmpsb
mov
mov
in
mov
cmp
int3
jp
lea
or
xor
xor
inc
hlt
and
adc
cld
data16
insb
fsub
cmp
je
loop
je
adc
adc
fcmovnu
ljmp
out
test
push
xlat
divb
inc
push
int3
in
into
inc
fcompl
std
out
dec
test
push
sub
mov
sub
loope
and
in
adc
loop
into
incb
jecxz
ljmp
stos
cmp
and
lcall
jle
ret
fnstcw
sbb
push
and
push
add
shl
test
pushf
aaa
aaa
sahf
sub
add
mov
xor
pop
mov
lret
lcall
js
pop
push
pop
adc
sub
cli
hlt
fs
fwait
in
test
adc
xchg
mov
repnz
aam
test
and
push
dec
push
lea
mov
add
je
out
pop
push
fsubr
inc
les
inc
xchg
ror
mov
sub
cmpsl
lahf
cmp
and
in
imul
test
test
dec
and
mov
push
xchg
cmpsb
dec
push
pusha
mov
sub
popf
jmp
jns
cli
pushf
mov
rcrl
mov
adc
sub
cmp
and
pop
stc
loopne
pop
repnz
add
bound
clc
cmp
mov
rolb
loop
dec
cld
mov
insb
mov
fiaddl
shll
pop
loopne
test
rorb
mov
mov
and
push
int
mov
jnp
lcall
mov
mov
test
pop
sti
mov
sahf
js,pn
loop
and
mov
push
js
dec
lahf
enter
fsubrs
cmp
mov
push
cmpsb
dec
loop
push
cmp
stc
mov
and
fidivl
adc
pop
lcall
dec
mov
add
mov
adc
in
mov
lcall
enter
lock
pop
stos
cmp
or
xor
adc
loopne
adc
lret
inc
lret
out
es
insb
mov
je
mov
data16
fidivrl
pop
xchg
cmc
fidivs
test
inc
and
insb
fs
loop
and
shlb
test
ja
jp
fdivrl
out
cmpsl
dec
cmpsl
mov
out
je
call
cmp
and
mov
out
out
dec
push
insl
daa
xchg
mov
mov
clc
push
in
insb
inc
mov
mov
pop
test
mov
mov
sub
mov
loope
sbb
fsts
xchg
mov
inc
mov
repnz
call
bound
and
xchg
inc
dec
sahf
adc
scas
fimuls
xor
or
out
add
into
mov
add
mov
sti
and
pushf
shll
lock
dec
cmp
sahf
arpl
insb
add
cwtl
dec
mov
int3
mov
push
jg,pt
adc
sti
push
xor
cmp
adc
cmp
mov
and
shlb
dec
sti
sub
xchg
add
add
dec
adc
fcomps
movb
or
inc
je
xchg
int
pushf
xchg
lcall
and
jmp
or
inc
fsincos
jle
adc
in
sbb
lret
dec
or
jmp
sti
xchg
mov
enter
mov
loopne
dec
rcll
fnsetpm(287
add
std
xor
sbb
sub
out
or
jg
add
test
mov
dec
xorl
and
daa
cmp
cmp
xchg
jmp
sbb
dec
data16
push
ljmp
cmp
mov
int
and
add
adc
adc
inc
xor
or
sub
push
sarl
mov
js
sbb
je
les
xchg
sbb
jnp
inc
int
je
and
cmp
jecxz
xchg
or
decl
cmp
repz
aas
pop
int3
inc
add
adc
rolb
sbb
jmp
sbb
sub
shlb
adc
popf
repnz
add
sbb
rsm
inc
mov
push
dec
mov
xlat
pop
clc
mov
cmpsl
repnz
or
lds
pop
stos
je
repz
cs
sbb
iret
sbb
sti
lcall
fwait
xor
adc
xor
xchg
or
xchg
mov
test
dec
scas
fists
les
int3
into
fs
push
mov
js
add
cmp
out
out
stos
movsl
stos
stc
notb
in
hlt
nop
mov
mulb
in
lock
stos
nop
mov
out
pop
mov
or
cli
jmp
icebp
lcall
lret
adc
sub
pop
into
pop
sti
je
iret
pop
or
adc
fmul
lock
fidivrl
ficompl
les
stos
rclb
mov
movsb
cmpsl
mov
push
sbb
lcall
lahf
loop
lahf
bound
ljmp
add
xchg
add
pop
mov
push
mov
outsl
xchg
pop
push
mov
mov
xchg
stc
adc
notb
daa
xchg
mov
call
fimull
adc
data16
addr16
mov
mov
cmpb
out
pop
hlt
fistpll
in
inc
js
pop
subl
push
dec
mov
fidivl
sbbb
int3
pop
aam
xchg
int
adc
mov
push
sub
iret
test
lock
mov
xchg
xchg
dec
jcxz
cltd
mov
cli
test
or
inc
mov
out
mov
bound
and
std
mov
add
sub
cli
lods
push
es
adc
and
sub
out
outsl
test
pop
or
mov
adc
cmpsb
mov
inc
stc
hlt
mov
clc
cmp
pushf
mov
repnz
adc
or
gs
mov
cltd
sbb
inc
cmp
or
jg
sbb
scas
fisttps
das
mov
or
lcall
dec
inc
pop
mov
adc
enter
xchg
sbb
jle
fwait
push
repnz
sbb
pop
data16
in
inc
push
data16
add
xchg
pop
add
fwait
push
or
testb
jbe
in
xchg
or
out
enter
pop
clc
mov
test
mov
pop
add
pop
sahf
mov
cmc
sub
jb
adc
fistpll
push
jl
pop
int3
push
xchg
mov
stos
mov
mov
insb
cld
mov
jo
add
push
mov
sbb
xchg
aaa
or
jnp
mov
hlt
test
mov
in
xchg
cli
mov
loopne
mov
xlat
adc
lret
xchg
adc
xchg
pop
repnz
jl
dec
je
xor
mov
insl
mov
aam
fidivs
sbb
or
sahf
mov
dec
and
inc
cmp
test
andb
sub
mov
jae
jno
cli
sub
xchg
mov
add
mov
movsb
adc
push
into
xchg
mov
hlt
add
cmp
adc
inc
sahf
adc
sahf
or
sti
push
adc
xor
popf
jl
fisttpll
pop
add
xchg
push
hlt
sbb
and
aam
negb
stos
and
adc
jmp
addb
xchg
pop
mov
pop
add
int3
mov
add
in
and
adc
rcrb
push
addb
orl
insb
int3
subb
mov
enter
movsb
rolb
int3
popf
and
add
fcmove
fadd
or
inc
or
xchg
loope
mov
dec
js
mov
ja
test
pushf
in
or
dec
es
pop
cld
test
xchg
add
ret
adcb
and
sub
imul
pop
pusha
adc
aam
test
popa
fscale
lock
jns
outsb
sahf
scas
cmpsl
jb
data16
cmp
push
test
add
jnp
ljmp
or
push
and
ficoml
jb
dec
ss
or
iret
out
mov
sbb
cmp
test
xor
subb
orb
orb
sahf
mov
or
mov
je
sahf
sub
pop
xchg
ret
pop
fmuls
insb
jnp
div
xchg
addr16
inc
dec
push
sahf
gs
and
call
push
or
repz
orb
iret
leave
call
adc
xchg
fs
lcall
mov
dec
add
xchg
mov
xor
ret
stc
mov
jns
inc
adcl
jp
sbb
imul
adc
inc
negb
xor
mov
mov
and
pop
sbb
inc
xchg
into
sub
mov
mov
les
jae
adc
repnz
push
dec
mov
jge
or
out
sub
and
xchg
mov
das
out
xor
gs
sbb
repnz
mov
sub
sub
and
in
and
pop
ss
xchg
clc
negb
push
les
xlat
leave
cmpb
clc
nop
push
inc
incb
push
and
imul
les
lea
cmp
stos
jno
stos
and
test
outsb
push
or
shld
ret
mov
add
lock
cmp
inc
push
xor
insb
daa
push
nop
sbb
mov
pop
out
fwait
xor
cld
cmp
adc
mov
sub
movsb
neg
popf
inc
dec
pop
or
enter
xchg
popf
or
aam
out
es
xchg
or
mov
mov
test
pop
pushl
adc
sbb
cmpsb
mov
fisubrs
mov
pop
mov
xor
push
fcmovbe
imul
add
push
cld
fmull
test
into
dec
call
inc
mov
mov
pop
xchg
jp
xchg
mulb
and
xor
pop
divl
pop
jne
push
inc
push
add
je
out
cmp
push
inc
jle
jge
andb
sahf
dec
je
lahf
ds
pop
sahf
jmp
mov
sub
mov
mov
mov
mov
and
adc
cld
cmp
movsb
aas
adc
xchg
push
adc
add
and
enter
repnz
cmp
js
inc
xor
pop
pop
es
lock
mov
push
clc
call
out
outsb
bound
fildl
imulb
ficoml
mov
into
rcr
mov
mov
xchg
or
js
adc
sbb
pop
fstl
pushf
xor
add
inc
fs
sub
jbe
jbe
subl
inc
test
addr16
cwtl
pop
cmpsb
jo
loopne
mov
mov
or
xchg
jle
ficoms
xor
sbbl
in
scas
push
mov
cld
sub
mov
xor
xchg
jns
cmpsb
mov
faddl
adc
sub
pop
lcall
shlb
test
mov
movsl
mov
jb
les
cmp
je
in
lret
dec
pop
cli
mov
pop
or
mov
andl
in
enter
mov
mov
mov
out
in
adc
mov
or
call
sub
mov
cli
inc
inc
inc
mov
xchg
rcrb
cmc
int
inc
mov
mov
inc
sub
sub
loopne
fmulp
xor
loopne
insb
lret
xchg
ds
stc
mov
mov
push
dec
adc
mov
and
sub
inc
xor
out
inc
push
sub
je
sbb
xor
ficoms
shll
pop
xor
push
mov
rcrl
cs
adc
outsb
adc
adc
das
jecxz
into
lret
in
scas
push
rcrl
xor
push
cld
rcr
mov
lock
jbe
pop
adc
fwait
loop
and
and
icebp
mov
sub
nop
out
or
push
push
pop
pusha
sbb
stc
cltd
into
mov
jbe
out
outsb
inc
lahf
pop
cmp
rcrb
jge
and
pusha
cmc
add
scas
cmp
adc
rclb
bound
inc
add
push
sbb
je
popa
mov
sbb
les
loopne
pop
inc
cs
inc
pop
push
add
movsb
lcall
test
notb
or
pop
in
push
xchg
push
mov
mov
sbb
int3
fstpt
mov
sahf
mov
dec
or
mov
call
daa
mov
mov
sbb
movsl
mov
test
push
mov
loope
cmp
xchg
ds
sahf
sub
stos
shlb
push
sub
xor
add
push
push
rclb
sbb
adc
mov
fwait
inc
jne
adc
xor
mov
mov
lret
dec
inc
cli
lods
and
adcb
push
xchg
inc
repnz
adc
adc
adc
adc
addr16
fadds
jmp
mov
push
jae
inc
push
stos
or
loop
sbb
push
dec
add
insb
jmp
icebp
cltd
fcompl
pop
and
dec
jg
into
iret
call
ss
xor
jb
aaa
jno
jbe
mov
ret
insb
pop
jecxz
outsb
test
or
inc
mov
cmpsb
dec
mov
call
icebp
scas
outsb
fs
inc
sub
mov
mov
mov
pop
loopne
adc
add
cmp
cmp
dec
jl
xor
cli
sbb
cli
pop
adc
fisubl
and
subb
out
rolb
or
rolb
popf
out
pushf
imul
mov
jl
and
cs
iret
push
stos
adc
add
mov
xchg
lea
daa
mov
repz
sahf
add
mov
pusha
clc
xor
std
cmp
inc
xchg
enter
subb
xor
jno
jo
mov
subl
mov
fsubl
movsb
cli
add
jo
icebp
push
nop
and
insl
lods
fcom
fcoml
and
cmpsb
hlt
int
es
jmp
pusha
lahf
mov
jbe
mov
in
sbb
cli
push
adc
add
sub
cmp
cmp
nop
jns
mov
ror
or
push
jno
cs
out
addr16
sbbl
cs
cmp
jbe
sbb
sub
xchg
xor
xor
rcll
sbb
adcl
or
std
adc
clc
or
cmc
cli
fdivrl
jle
in
std
je
out
outsb
int3
adc
xor
bound
jg
shlb
call
xchg
mov
sbb
and
aas
dec
and
dec
sub
out
mov
lods
incb
aam
fwait
mov
inc
repz
outsl
cmp
scas
mov
jb
cmpsl
decl
sbb
loop
pop
xchg
dec
repnz
dec
cmp
sub
dec
cmp
push
and
push
lahf
das
dec
mov
dec
cmpb
jmp
mov
movb
stos
cmp
xchg
xchg
ljmp
call
mov
pushf
jl
stc
loop
cmp
mov
sub
les
loopne
fisttpl
aad
bound
call
sub
mov
imul
lret
shl
test
rorb
popf
sahf
push
sti
jns
das
sub
sbb
sbb
aam
testb
push
out
insb
pushf
lahf
arpl
jl,pt
mov
movsl
push
xchg
pop
stos
inc
gs
adc
sahf
dec
je
lahf
cli
adc
int
jle
add
mov
pushf
jmp
xchg
and
mov
inc
std
clc
scas
scas
es
aam
imul
mov
jle
and
push
cli
insl
faddl
out
clc
scas
cld
nop
push
cltd
out
repnz
cltd
adc
or
add
outsl
les
out
ljmp
js
mov
pop
loop
loop
or
int
mov
pop
cs
inc
andb
add
lcall
ficoms
mov
mov
sub
into
call
ds
pop
fisubs
xchg
mov
fwait
push
div
insb
jp
les
es
mov
jle
jl
loope
inc
lcall
mov
lock
mov
lahf
xor
or
inc
sbb
ret
mov
add
add
sbb
sub
in
cmp
push
or
pop
and
push
movsb
mov
or
fsubrl
add
inc
in
adc
sbbb
cmpb
dec
sti
cmp
push
andw
xchg
or
push
lcall
fbstp
xor
sar
call
push
popf
dec
jb
loope
adc
jl
sub
xchg
repnz
int3
mov
cmpsl
fiadds
and
push
add
filds
fdivrl
sbb
dec
fisttpl
push
mov
mov
orb
mov
jmp
push
lret
add
xchg
fisttpl
hlt
int3
and
rcl
insl
mov
fcmove
sahf
inc
je
movsb
xor
xor
lock
dec
jb
das
in
mov
mov
pop
pusha
mov
fistl
outsl
test
cmpsb
les
std
cmpsl
stos
add
aam
movb
jno
adc
decl
push
xchg
mov
sbb
and
jo
xchg
andl
push
mull
or
mov
es
sub
xchg
cmp
repnz
je
pop
sahf
pop
insb
inc
inc
fwait
sbb
fistpl
mov
xchg
jbe
test
or
mov
pop
call
pop
cltd
adc
pop
shlb
adc
mov
inc
cmp
sub
fistpl
mov
mov
enter
fisubl
jg
mov
xor
in
and
dec
xor
orb
bound
xor
cld
xor
orb
fnstcw
push
sub
jl
jns
out
lret
in
loopne
mov
inc
push
adc
fdivl
lret
aaa
pusha
pop
call
lods
inc
in
divb
les
push
jecxz
fsubrl
rcrl
cld
ljmp
sub
adc
cmc
test
pop
mov
flds
add
jl
movsl
dec
mov
daa
push
clc
add
mov
jmp
nop
pop
cld
sub
sahf
out
cmp
ds
xor
adc
fldt
popl
mov
xor
repz
dec
mov
xor
addr16
push
sub
cld
test
push
inc
adc
or
fsubr
fwait
cmp
cltd
in
aas
sub
outsb
push
sbb
shl
mov
sti
push
pop
test
pop
mov
idiv
push
pop
test
shll
mov
dec
jae
sbb
sbb
mov
daa
mov
push
pop
fwait
sub
stc
dec
and
pop
insb
int3
out
cmpsb
push
cmp
cmpsl
lods
pushl
inc
mov
or
clc
loop
sarl
jmp
rcrl
push
ds
push
push
cli
sbb
incb
push
bound
cld
sahf
or
and
sahf
in
mov
mov
or
dec
into
addb
and
sahf
jae
cli
lea
inc
repz
adc
lds
je
loopne
sbb
xchg
out
add
dec
xlat
mov
mov
mov
mov
mov
push
in
movsb
loopne,pt
push
jns
mov
shl
inc
call
cld
and
imul
neg
pmaxub
sbb
adc
sub
das
sbb
pop
adcb
xchg
xor
fidivs
xor
fldl2t
orb
mov
mov
inc
mov
cltd
mov
inc
xor
movq
xor
push
popa
shlb
loop
daa
testl
lea
loop
xor
adc
xchg
inc
ljmp
lcall
sbb
xchg
jno
push
push
dec
insb
mov
adc
or
jp
loope
movsb
inc
cmp
mov
mov
mov
shrl
ret
and
mov
call
jecxz
shlb
daa
jmp
out
mov
push
jge
test
xchg
enter
cmp
shlb
dec
push
orl
adc
push
xor
fiadds
lret
xor
mov
and
repnz
pushl
shlb
xchg
xchg
cmp
insb
inc
insb
mov
call
adc
call
in
dec
cmp
and
lock
sbb
js
rcl
push
repz
mov
xchg
scas
outsb
aam
xor
sbb
xchg
les
dec
cmpsl
out
xchg
stc
incb
imul
pop
add
sbb
loopne
mov
xchg
add
out
ss
fists
cs
mov
sbb
je
sbb
mov
add
push
mov
xchg
push
repnz
rolb
sbb
arpl
test
push
jp
pop
loopne
and
mov
clc
clc
lret
sub
lret
je
mov
test
xchg
lods
icebp
sub
dec
in
dec
xchg
mov
stos
xlat
popf
xor
ds
lahf
cmpl
xor
cli
fwait
inc
adc
test
stos
jbe
mov
fdivr
inc
inc
add
sarb
sbb
and
aam
notb
xor
nop
in
xchg
insb
pop
push
xor
jo
xchg
and
notb
jmp
fcomp
out
adc
dec
add
xchg
int3
or
push
cmp
sub
lret
pushf
lcall
push
icebp
js
xchg
mov
dec
add
cli
push
out
std
pop
sbb
inc
push
mov
and
cwtl
arpl
lea
mov
data16
lahf
hlt
xchg
repz
js
pop
adc
xchg
and
jnp
fwait
sbb
fbstp
sub
xchg
repnz
jno
lcall
push
inc
or
add
add
and
mov
je
xchg
mov
daa
clc
push
xchg
cwtl
mov
cmp
or
stos
subl
or
daa
test
xchg
sbb
jne
push
mov
xchg
enter
xor
iret
sbb
repz
cmp
or
in
push
js
xchg
pop
js
xchg
testl
mov
mov
mov
stos
lods
nop
lcall
push
xor
inc
dec
pop
sub
pop
dec
pop
push
imul
xchg
pop
push
hlt
xor
negb
xor
stos
adc
jp
jg
or
fs
ficoml
seta
or
sbb
scas
fidivrl
movsb
adc
call
lcall
push
and
das
enter
call
and
movsb
pop
xor
xchg
push
mov
adc
jnp
int3
inc
test
pushf
gs
xor
hlt
mov
add
push
les
loopne
stos
in
pop
add
test
cmp
adc
sbb
icebp
loope
mov
ret
inc
xor
cli
push
mov
pop
pop
mov
in
mov
add
add
cmp
mov
mov
push
lret
pop
rcrb
test
int3
pop
mov
mov
sub
cmp
push
xchg
inc
in
faddp
mov
out
dec
jg,pt
negb
rcr
ss
int3
stc
je
add
jge
repz
cwtl
fwait
pop
fmull
dec
push
mov
cmpsl
pop
and
dec
and
cltd
or
inc
jo
mov
rorb
clc
jb
push
jg
movsl
push
inc
enter
mov
push
mov
add
or
or
out
nop
es
xchg
daa
dec
movsb
shlb
icebp
and
cmc
xor
adc
in
inc
dec
loope
sahf
in
repz
push
jg
popf
bound
inc
rcrb
adc
xor
add
jmp
adc
pop
mov
loopne
sti
insb
call
bound
jmp
fisubs
sti
mov
push
movsb
push
nop
or
cli
push
push
xchg
add
aad
xor
ret
call
fcoml
xor
and
jmp
inc
mov
jecxz
cmp
sub
jne
xor
insl
pop
in
or
std
sub
into
insb
aaa
and
movsl
xor
loopne
or
loop
xor
out
pop
in
mov
mov
adc
jno
push
aam
dec
xchg
stos
xchg
xchg
insl
dec
jl
bswap
mov
scas
imul
adc
inc
hlt
push
cmp
push
jp
call
mov
inc
push
dec
out
test
ljmp
xchg
ffreep
insb
mov
scas
movsl
in
sarb
push
jns
adc
cmp
out
push
lods
add
sar
aaa
iret
cltd
mov
pop
fldt
addr16
mov
testb
add
movsb
lods
add
push
push
add
lret
sbb
clc
push
addr16
cmp
mov
lret
xor
fsubr
fbld
pop
dec
in
sbb
sub
add
leave
aam
pop
loop
mov
int3
xchg
cmpb
stos
sbb
mov
mov
out
cmc
mov
and
nop
ja
adc
ds
scas
dec
repnz
fsub
ret
fmull
xchg
dec
mov
push
fcmovu
add
fnsave
dec
sbb
sbb
add
outsl
pop
inc
mov
outsb
mov
sbb
mov
cmp
push
inc
les
aas
pop
mov
cs
faddl
inc
cli
test
test
xchg
xchg
mov
cmp
fbld
sahf
fists
dec
xor
mov
jg
cwtl
ret
cs
out
or
lods
jle
lret
adc
mov
xor
sbb
stc
and
adc
or
cmpsl
jo
sbb
shll
adc
popf
inc
das
sbb
push
call
sub
jbe
decl
or
sub
je
sahf
movsl
mov
faddp
push
mov
mov
mov
xchg
lret
pop
mov
dec
mov
fiadds
aad
cli
push
add
mov
repnz
mov
sub
mov
push
sbb
dec
shll
ret
lahf
fidivl
sbb
pop
outsb
ss
nop
mov
xchg
cli
push
adc
js
mov
xchg
dec
fsubl
sbb
pop
aas
pop
cltd
int3
adc
movsl
jo
int
mov
xor
sar
in
loopne
and
pop
push
jmp
data16
aam
bound
cmp
mov
sbb
push
icebp
add
cmp
sahf
rorb
push
sub
movsl
out
add
xchg
push
iret
mov
ljmp
scas
fidivs
cmp
sbb
dec
xchg
dec
adcb
out
xlat
xchg
or
es
and
out
pop
lret
jb
xor
out
sub
invd
mov
push
mov
pop
pop
sahf
jle
and
divb
stos
jo
pop
xchg
pop
test
push
or
adc
rcl
inc
in
sub
dec
ret
rorb
cwtl
mov
fists
ss
cmp
sarb
jne
int
inc
cld
fiaddl
push
sub
or
adc
mov
xchg
mov
push
and
cmpsb
or
xchg
ds
sbb
push
xchg
push
cld
mov
test
or
leave
lcall
movsb
sub
daa
push
add
pop
push
dec
mov
sub
dec
sahf
jmp
cli
xor
addr16
cmp
inc
xorb
push
ror
out
mov
xchg
mov
dec
mov
push
cmp
int
cmpsl
dec
push
in
mov
imulb
add
xor
or
stc
clc
std
cmp
out
push
mov
mov
pop
jl
lock
xchg
cmpb
mov
icebp
push
jl
into
cmp
daa
shlb
in
fcoml
adc
add
adc
mov
mov
aas
int3
mov
cmp
mov
call
cmp
test
mov
idivb
push
xchg
sbb
xchg
hlt
add
mov
mov
nop
clc
jmp
aad
fadds
fwait
inc
repnz
push
push
xlat
sbb
cmp
cmp
sub
fmulp
cmp
shll
fwait
dec
js
gs
les
mov
dec
inc
ljmp
decb
sub
push
lods
pop
shrb
ds
loop
mov
push
add
ret
pushl
mov
out
add
iretw
aas
leave
es
push
daa
dec
cmp
jno
push
clc
fimuls
out
das
pop
repz
aam
cmp
mov
add
cmp
add
xchg
xchg
adc
cmpb
pop
jecxz
mov
xor
data16
jl
add
xchg
lods
push
stos
push
in
call
push
lds
push
inc
test
aaa
lds
mov
pop
je
pop
mov
test
cmp
ret
add
pop
lock
je
inc
cltd
add
lret
pop
fmul
add
lcall
pop
sub
jmp
and
pop
mov
sub
push
insb
mov
mov
mov
dec
mov
fisttps
pop
or
sub
fwait
push
xchg
decl
xor
sbb
lock
dec
add
inc
cmp
mov
test
shrb
mov
or
pop
xor
inc
movsl
into
out
cwtl
aaa
nop
mov
mov
pop
cmpb
sar
shlb
insb
cmp
js
adc
xchg
dec
mov
dec
push
mov
dec
cli
in
xor
enter
loop
xchg
sub
or
dec
loop
lods
call
mov
out
pushf
fmull
stos
xor
popa
xchg
lds
pop
pop
sbb
test
inc
imul
ret
add
int3
cwtl
incl
push
fisttpll
call
cmp
divb
xor
cmp
outsb
leave
in
int3
xor
dec
mov
repz
sub
cmpsb
insb
in
xchg
xchg
ret
fiadds
add
popf
repz
xor
decl
dec
add
test
dec
sti
pusha
mov
mov
sbb
mov
sbb
movsb
ljmp
fimuls
ds
sub
lock
adc
sub
lcall
cmp
xchg
daa
or
mov
mov
out
mov
and
add
loop
cmp
adc
push
xchg
xor
iret
dec
cli
dec
inc
jo
dec
mov
cli
xor
pop
jle
push
sbb
mov
mov
cltd
aam
push
pop
lahf
ss
lret
sahf
mov
insb
cmp
ja
or
out
push
xor
mov
xor
cmp
mov
xchg
addb
fistpll
cwtl
xor
pop
cmp
adc
cld
mov
xchg
jle
cltd
outsb
lret
out
and
jle
loop
pop
add
add
dec
jp
jo
fisubs
lahf
xor
enter
into
lock
or
xor
xor
fsubrl
xorl
rorb
mov
inc
inc
add
xor
and
or
daa
iret
pop
int
xchg
push
cmp
mov
push
pop
mov
dec
rcrb
test
lods
scas
xor
test
dec
pop
fbstp
aam
pop
stos
mull
cmp
xchg
mov
out
cmp
or
jecxz
jo
int
subb
mov
mov
jbe
mov
stos
xorb
lock
or
das
sub
ret
aam
mov
mov
ss
cli
adc
push
lods
insb
call
inc
inc
inc
cmp
cmp
push
cmp
add
sbb
adc
ss
xor
xorb
sar
ds
icebp
mov
adc
ljmp
and
fstpl
mov
es
andb
lock
rcr
dec
pop
pop
shrb
or
test
jle
xor
loopne
push
stos
clc
movl
dec
ss
pusha
mov
mov
dec
test
and
or
inc
pop
insb
lahf
sbb
xchg
xor
sbb
sub
mov
test
cmp
fucomip
dec
push
stos
test
mov
inc
add
sbb
in
xor
push
cli
push
inc
test
fsubl
cmpsb
mov
or
adc
loopne
pop
aas
cmp
or
or
jmp
divb
add
into
stos
sahf
cwtl
mov
push
xchg
mov
cmp
int3
movsl
mov
xchg
and
mov
mov
push
or
jle
and
xor
stos
icebp
inc
cmp
xor
sahf
xlat
inc
addr16
xor
mov
dec
lods
insb
xchg
adc
mov
data16
stc
sub
data16
lods
xor
dec
push
xor
aas
sti
sbb
dec
lcall
ljmp
cmp
ror
call
mov
and
xorb
rorb
fiadds
mov
imull
popa
sbb
mov
mov
sub
adc
xchg
adc
je
call
mov
enter
jle
mov
fisubrs
xor
jge
inc
mov
imulb
lret
adc
cmp
sbb
cli
sbb
lods
std
and
sbb
xchg
inc
xor
pop
push
movsb
or
and
xchg
outsb
cwtl
push
jl
cld
aas
dec
pushf
aas
jg
mov
sub
adc
inc
imul
sub
lcall
dec
push
cli
sahf
mov
sub
lock
jmp
shr
mov
mov
cs
cmp
aam
js
cmp
pop
shll
pop
mov
clc
dec
jle
aam
sbb
mov
je
cwtl
mov
adc
in
or
loope
mov
xchg
shr
mov
sub
mov
mov
dec
stos
pusha
je
loopne
js
call
mov
push
xlat
sti
dec
out
xchg
loopne
sahf
adc
mov
shrb
xchg
repz
inc
repnz
cmp
push
pusha
or
push
or
adc
clc
sub
stc
lcall
push
and
xchg
push
mulb
jo
enter
inc
push
pusha
xchg
push
xchg
dec
dec
xor
push
mov
insb
jo
jo
mov
adc
mov
outsl
cwtl
push
push
push
call
ljmp
push
cltd
dec
sub
mov
sub
loopne
lret
dec
sbb
ret
xor
push
and
jg
roll
test
xorb
shll
je
jbe
in
rolb
pop
clc
jecxz
stos
push
test
xor
sbb
ds
ds
xchg
mov
mov
mov
jle
inc
ds
lahf
pop
pop
iret
jp
in
fdivl
adc
imul
cmp
sub
add
sub
jle
lock
mov
pop
cmp
icebp
sub
sbb
xlat
mov
jae
inc
decb
mov
orb
mov
push
cmp
mov
test
sub
jns
loop
dec
neg
mov
movsb
sahf
ljmp
mov
push
int
jbe
or
and
add
lock
testb
sahf
imul
push
mov
pop
sub
or
adc
and
sbb
dec
out
fsts
add
cmc
or
scas
mov
dec
sbb
xchg
mov
jnp
sahf
insb
sub
ljmp
std
jp
cvtpi2ps
adc
push
push
push
fisubrs
xchg
fdivl
dec
dec
pop
lock
mov
aas
test
jle
pop
fs
sbb
mov
into
pushf
mov
outsb
fsubrs
mov
ja
int3
addb
push
lea
pop
bound
fldl
push
fistpll
pop
jmp
aas
mov
pop
push
push
fs
in
das
dec
mov
insb
fistl
int
hlt
lret
repz
adc
add
fs
sbb
cs
out
pop
mov
pop
jo
fwait
mov
lods
cli
mov
cmp
pop
pop
in
cmp
add
daa
mov
pusha
in
out
sahf
andb
int3
insb
mov
loop
pop
aam
rcll
jnp
sbb
push
stos
mov
insb
push
jecxz
shrb
mov
aam
hlt
call
xchg
shll
sub
aam
out
je
adc
es
rcll
xchg
xchg
adc
inc
in
inc
mov
decb
pusha
jp
pop
inc
jne
insb
jb
add
dec
cmp
mov
mov
bswap
sbb
in
mov
ljmp
adc
cmp
lcall
mov
lock
pushl
push
or
stos
xor
mov
pusha
mov
out
repnz
cmpsb
xor
mov
pop
bound
adc
ljmp
jmpw
call
je
repz
mov
cmovg
dec
popa
inc
push
int3
in
stos
cmp
fwait
cmp
push
outsl
xor
mov
mov
jmp
loop
ret
xchg
cmp
mov
adc
sahf
sub
pushaw
hlt
or
pop
and
push
fdiv
jle
les
pop
out
mov
and
xchg
and
cli
and
sub
imul
adc
pushf
daa
jle
int
lods
dec
push
ljmp
add
adc
xchg
xchg
push
dec
sahf
adc
sub
lock
sub
xor
add
in
and
mov
sub
add
call
ss
stc
daa
dec
mov
pop
shlb
shlb
lds
lahf
adc
pop
xchg
add
pop
imul
fmuls
cmpsb
mov
loop
daa
frstor
es
fidivl
test
sub
sbb
aam
outsb
xchg
mov
cmp
clc
outsb
inc
daa
in
push
mov
mov
adc
dec
fs
mov
popf
test
rcl
pop
xor
cld
inc
push
mov
mov
data16
daa
mov
std
sub
xchg
push
jne
cmp
inc
movsl
push
js
sbb
addb
test
push
jbe
sbb
or
mov
xorb
js
mov
lea
mov
xlat
loopne
mov
fistpll
insb
scas
xchg
stos
insb
test
mov
ljmp
mov
xor
scas
cmp
push
cmp
fbstp
out
test
pop
jmp
into
stc
inc
das
das
shrb
inc
xchg
xchg
rcrl
sti
sub
mov
mov
cmp
sub
mov
lock
aaa
dec
jbe
je
out
jbe
pop
add
or
mov
sbb
push
shl
enter
scas
bound
in
cmpsb
mov
or
add
loop
xor
pushf
mov
pop
cli
test
or
add
push
pop
adc
data16
call
push
movsl
cld
nop
add
nop
jecxz
adcb
in
popf
sub
mov
stos
jle
push
stc
and
xor
call
mov
add
inc
or
mov
arpl
aas
cmp
dec
cmpl
test
jg
fidivs
sub
xlat
cmp
enter
sub
scas
stos
push
add
daa
mov
cmp
inc
test
mov
nop
sbb
xor
mov
in
int
outsb
aaa
pop
push
push
sbb
and
cmp
push
and
mov
cmp
xchg
inc
js
xor
scas
adc
loope
fldl2e
add
sbb
andl
divb
lock
push
mov
icebp
stos
adc
enter
mov
jo
cld
add
notl
push
scas
mov
sbb
xchg
xchg
xchg
into
mov
or
out
adc
xlat
insb
idivb
and
cmp
xchg
mov
sub
mov
mov
xchg
adc
adc
xchg
sahf
loopne
and
push
hlt
lock
jb
jp
repnz
mov
xchg
cmp
and
pop
xchg
or
lods
dec
js
mov
xchg
adc
add
hlt
fidivrl
imulb
adc
outsb
sahf
push
icebp
ljmp
jmp
fsubrl
push
dec
hlt
clc
mov
test
xorl
stos
insb
in
or
ficoms
mov
inc
loope
lahf
jo
push
cmp
shlb
and
xchg
aaa
cmc
loope
pop
lahf
mov
push
cmp
xchg
xchg
inc
jbe
insb
scas
faddl
push
leave
sub
pop
ror
mov
pop
xchg
insb
cli
lock
addr16
and
stos
pop
sub
out
sti
iret
cs
movsb
pop
jl
sub
loop
and
sbb
cmp
aam
sbb
push
repz
and
cltd
add
movsb
push
push
adc
mov
sub
adc
pop
ljmp
push
in
insl
in
test
loop
cmp
daa
push
push
daa
add
mov
mov
es
out
out
mov
xor
dec
add
push
insb
mov
shlb
mov
dec
pop
out
add
repz
push
fs
jb
cmp
jo
pop
push
test
cmp
int
sub
in
clc
adc
jmp
add
stos
lock
jno
ficomps
add
push
or
stos
fs
pop
xor
js
sub
enter
and
sub
push
je
scas
cli
out
loopne
notb
push
push
jne
vorpd
fdivl
insl
adc
xorb
repz
mov
iret
out
sarb
fiaddl
pop
sub
inc
subb
in
sarb
or
aaa
fmul
dec
hlt
dec
fistpl
xchg
adc
lcall
daa
mov
ficoml
scas
loop
and
push
xor
cmp
inc
cwtl
xchg
xchg
into
cmpsb
inc
dec
adc
in
cmpsl
lcall
out
sbb
cmp
pop
dec
jle
orb
pushf
scas
inc
jns
stos
das
push
mov
test
ljmp
out
sbbb
mov
jp
in
lahf
jne
xchg
mov
mov
sbb
and
mov
fcom
ficomps
xor
mull
ljmp
inc
ret
out
in
inc
jmp
stos
mov
cwtl
das
out
mov
lret
xchg
inc
fmuls
movsb
sub
cld
add
lcall
inc
and
sub
mov
lock
cmp
push
sbb
add
fs
push
insb
test
pusha
adc
xorb
mov
pop
test
xchg
fdivrp
pop
std
je
and
xchg
push
sbb
push
bound
out
into
and
mov
bound
xlat
and
pusha
or
das
arpl
sbb
mov
cld
adc
mov
xor
lods
int
nop
inc
sub
push
mov
xor
call
hlt
fs
sbb
jo
sbb
stos
cli
adc
jp
lahf
in
mov
out
call
in
pushf
test
addb
xor
mov
ds
cs
imul
daa
repnz
pop
mov
xchg
dec
and
xchg
in
cmp
inc
sbb
out
xchg
or
inc
xchg
lods
js
cmp
fsubp
pop
sub
faddl
jbe
xor
jo
xchg
fisttpl
sti
aam
and
cltd
in
dec
inc
xchg
pushf
pushf
repnz
fimuls
adc
push
jmp
scas
mov
out
test
push
mov
test
in
push
xchg
roll
pop
or
ret
mov
pusha
int3
dec
stos
sub
mov
xor
mov
mov
clc
or
ds
inc
mov
xor
fisubrs
das
rolb
lahf
in
pop
jbe
adcb
loopne
adc
jp
or
data16
add
xchg
mov
lock
iret
in
pop
mov
push
setle
sbb
sbb
neg
cmp
mov
ljmp
and
jge
enter
and
js
xchg
jle
test
jnp
or
shrb
xchg
xchg
sub
inc
dec
stos
imul
nop
cli
cmp
rolb
in
cs
mov
decl
outsl
lods
jl
aam
cmp
fwait
cmp
dec
fisubl
ds
divb
lret
add
out
sub
in
int3
stos
rcll
mov
mov
je
insb
jp
cwtl
fdivrl
mov
fsqrt
mov
adc
jecxz
jno
inc
in
mov
out
xchg
inc
test
jb
subb
mov
addb
inc
rcl
add
push
xchg
mov
dec
scas
orl
push
inc
dec
push
mov
sbb
and
cmpsb
dec
fnstsw
mov
iret
and
adc
mov
sahf
ljmp
mov
mov
pop
mov
sub
fisttps
movsb
fdiv
dec
or
add
mov
pop
push
loop
fsubp
sbb
loop
shlb
xor
in
sbb
mov
cmp
bound
rclb
out
xor
inc
rcrb
sbb
std
and
rcl
pop
bound
mov
data16
inc
push
cltd
lods
stc
arpl
cmp
sub
icebp
iret
insb
dec
arpl
mov
cmp
in
sub
jne
push
lret
or
outsl
sahf
das
jne
mov
add
fwait
dec
xor
xor
in
pop
insb
push
pop
sahf
mov
sub
nop
adc
cmp
insb
mov
fadd
push
adc
or
test
mov
sbbb
dec
or
and
inc
call
mov
or
push
push
cmp
imul
adc
adc
adc
cmp
sbb
lea
dec
mov
push
gs
fsub
lret
out
push
mov
test
inc
call
fs
popa
fistpl
ds
ret
add
cli
adc
outsb
add
sbb
lret
adc
insb
mov
hlt
xchg
push
and
lcall
scas
cmp
adc
fwait
cmpsl
sub
mov
jp
mov
rorb
push
mov
adc
lcall
ds
dec
pop
dec
rcll
arpl
jns
or
sub
adc
and
shrl
sub
or
int3
es
mov
and
cmpsb
insb
mov
mov
pushf
jge
loop
pop
cli
test
mov
lret
shlb
sbb
cmp
int3
push
xchg
fwait
sbb
inc
addl
rclb
iret
les
movsb
outsb
jns
jbe
clc
shlb
mov
std
nop
loop
inc
decb
sahf
dec
pop
out
subb
loope
dec
outsb
jg
xchg
sbb
idivb
and
loopne
lcall
lods
mov
xchg
pop
mov
adc
add
jbe
push
adc
xor
dec
insb
inc
cmp
stos
in
xchg
sbb
adc
dec
gs
insb
stos
mov
xor
jne
and
cmp
sub
sub
orb
add
sbb
push
imul
xchg
push
xor
push
inc
mov
icebp
lret
pop
arpl
mov
inc
repnz
arpl
mov
sbb
mov
testb
icebp
out
inc
sbb
mov
mov
jp
repnz
xor
or
into
push
loope
push
jae
sbb
aam
sbb
scas
pushl
andnps
repnz
or
cmpsl
js
les
cmp
mov
fmuls
insb
es
shlb
push
dec
add
lret
jo
bound
jbe
add
mov
inc
in
call
cwtl
inc
aad
push
mov
stos
mov
xor
xchg
inc
jnp
mov
add
jmp
call
pop
call
into
shlb
xchg
lock
ss
loop
sbb
mov
ret
add
mov
dec
jbe
test
daa
adc
fdivl
inc
jns
jo
fwait
mov
dec
loop
ljmp
mov
sahf
int3
xor
pop
call
mov
sub
pop
jns
mov
jmp
mov
shll
mov
les
out
pop
inc
lds
movsb
insb
aas
pushf
sbb
jnp
dec
jo
mov
mov
xchg
lods
and
and
cwtl
lahf
sub
ljmp
xchg
ljmp
xor
dec
movl
out
xor
loopne
mov
xor
push
mov
cmp
addr16
and
sbb
mov
fidivl
inc
cmp
cmpsb
and
and
clc
sbbl
in
jb
pop
jns
jae
inc
or
mov
pop
adc
nop
or
and
popf
mov
dec
insl
les
inc
and
inc
cmc
shrb
mov
lds
pop
movb
out
out
xchg
inc
into
loop
fistl
fisubl
pusha
jns
jl
sahf
lcall
cmp
push
cmp
mov
loop
push
daa
scas
fmul
pop
das
cmp
pop
add
jno
insb
push
sahf
dec
add
and
notb
test
frstor
xor
cli
subb
pusha
or
rcrl
insb
mov
mov
cmp
out
je
rclb
jo
daa
daa
test
repnz
lock
fs
adc
ljmp
add
sub
pop
lcall
cmpsl
sahf
jb
inc
xor
out
stos
nop
ror
insb
and
nop
jle
push
jae
jge
insb
dec
adc
std
mov
and
ficoml
in
ficoml
xchg
imul
jle
jnp
and
sub
out
push
jbe
movsb
pop
pop
adc
psrlq
lods
jo
mov
fcoms
je
sahf
mov
ljmp
movsb
loop
lds
mov
sbb
pop
xchg
sub
lret
inc
jae
pop
fnstcw
callw
rolb
lock
sub
push
das
call
fcomps
arpl
js
es
lods
rcrb
sub
inc
or
aas
pushf
mov
dec
push
sbb
inc
test
cmp
cmpsl
ljmp
cmpsl
test
fs
test
aas
adcb
push
jmp
and
or
fsubrs
push
lret
xchg
es
mov
dec
cmpsl
mov
data16
insb
mov
mov
sub
sbb
and
enter
adc
pushf
push
repz
inc
stos
and
sbb
cmp
or
mov
cmp
roll
imul
dec
push
push
adc
mov
mov
add
scas
add
out
cmc
inc
idivb
xchg
push
push
ljmp
lahf
adc
or
xor
jmp
mov
std
enter
test
cli
ljmp
xchg
test
jg
mov
mov
push
mov
mov
push
sarb
shll
out
popf
adc
aas
mov
xchg
mov
call
mov
and
dec
mov
jns
sub
out
jge
pop
pop
xor
outsb
jle
xor
fists
cwtl
cmp
js
shl
pushf
cmp
mov
loop
inc
incb
loop
cmp
orb
in
pop
cli
les
push
adc
jle
cltd
icebp
xor
mov
mov
push
ret
and
pop
dec
cld
cmp
push
pop
lcall
les
pop
popf
loop
xor
cltd
pop
ds
and
lcall
sbb
xor
mov
int
repnz
insb
scas
dec
pop
and
jp
xor
sbb
mov
push
dec
movsl
mov
add
mov
out
jle
mov
xchg
in
push
dec
fimuls
xchg
xchg
repz
mov
inc
int
sub
stos
push
sub
out
out
adc
pop
repz
outsb
xchg
push
pushf
movsl
incb
or
imul
aam
mov
adc
mov
push
les
push
sbb
test
mov
arpl
js
or
sub
cmc
in
xchg
ret
jb
xchg
cmp
leave
lock
cmp
push
push
cmp
lds
adc
push
or
repnz
test
xor
or
mov
mov
xor
rcr
xchg
fsubrl
loop
insl
pop
adc
adcb
and
jmp
dec
into
push
test
cmp
insl
aad
xor
outsl
jo
mov
fwait
test
out
faddl
scas
sub
add
nop
pop
pop
pop
adc
cli
jg
leave
cld
fs
decb
stos
insb
outsb
repnz
ret
push
ficomps
mov
adc
cmp
imul
pop
arpl
xchg
pusha
push
mov
mov
dec
sbb
lods
and
nop
xchg
pop
cmp
fwait
add
push
fwait
and
mov
das
pop
inc
repnz
out
cmc
ret
push
fdivr
jae
add
mov
adc
in
jl
or
sub
cmp
dec
es
mov
sahf
cmpl
xchg
xchg
push
insb
ss
cmc
sbb
aad
aam
fwait
shlb
shr
xchg
jmp
xchg
adc
lahf
add
les
inc
js
push
sub
loop
call
add
dec
ljmp
jne
icebp
icebp
decb
push
popf
xor
call
insb
and
or
pop
test
jno
add
daa
push
and
pop
out
cmp
int
cli
ret
cmp
or
xlat
fcmovnbe
pop
push
jp
sbb
mov
dec
sub
sub
ljmp
push
mov
mov
bnd
cmp
push
sbb
sti
sub
popa
fwait
jo
out
inc
mov
adc
sub
fucomp
mov
call
pop
sar
mov
add
fwait
pop
lock
mov
adc
rcll
data16
shlb
pop
js
mov
sarb
mov
inc
sbb
dec
jle
insb
pop
fdivrl
add
inc
stc
lret
stc
mov
cltd
cld
mov
mov
push
or
cmpsb
cmp
and
sub
inc
jnp
sti
je
jecxz
fs
bound
ret
cld
sbb
and
or
mov
inc
es
lret
mov
flds
je
pause
push
mov
xchg
cmp
stos
adc
jle
jecxz
pop
add
sub
xchg
fs
sbb
test
adc
rorb
in
xor
push
cmp
dec
lods
cs
sbb
cli
stos
sbb
aam
jne
add
cmp
idivb
mov
mov
adc
jns
push
sbb
add
xchg
sub
movsl
jle
push
mov
test
sbb
out
fmuls
std
insb
adc
loope
scas
xchg
xor
adc
xchg
loop
xor
pusha
mov
cli
rorl
adc
add
ficoms
lods
adc
or
dec
cmp
sub
insb
mov
andb
lea
sbb
leave
fdivrl
mov
test
jae
mov
icebp
out
pop
clc
or
into
cmpsb
or
push
and
jle
jb
sbb
dec
mov
sub
mov
sub
sub
xor
adc
lds
or
ss
push
cmp
push
add
lret
mov
inc
sahf
sub
shlb
sbb
mov
mov
stos
shlb
add
push
je
loopne
lds
pop
and
or
sub
test
xor
xlat
and
adc
pushf
cltd
sub
imul
scas
xlat
mov
fsubrl
adc
lcall
add
bound
pop
mov
jp
nop
sbb
dec
xor
cmp
sub
lret
movsb
cltd
cmpsl
stc
aas
adc
xchg
mov
sub
loop
jne
push
add
sub
lret
dec
jle
outsb
scas
xchg
cli
jo
and
movl
or
xchg
xor
stos
jns
dec
jnp
xor
es
xor
jp
jmp
in
xor
js
xor
pop
and
leave
jno
push
fldt
jbe
out
imull
mov
push
adc
xor
shrb
lock
or
je
cltd
movsb
dec
jecxz
insb
mov
hlt
mov
mov
add
adc
jge
imul
dec
scas
insb
movsl
lock
fstpl
ljmp
pop
xor
sahf
pusha
pop
push
popf
mov
out
inc
xchg
mov
jle
pop
add
cld
mov
push
push
out
insb
clc
mov
in
callw
in
and
and
pop
mov
jge
add
xchg
xor
dec
mov
mov
in
push
mov
fidivl
std
nop
and
xchg
shl
jecxz
sbb
scas
into
ljmp
cs
negl
movd
shll
adc
test
xchg
jl
out
data16
adc
pop
es
pop
sbb
pop
mov
scas
daa
xor
fnstcw
inc
adc
andb
mov
mov
cmp
fimull
xlat
lret
pop
dec
sub
in
add
pop
lcall
xchg
mov
or
enter
lret
fiaddl
ds
jb
mov
push
mov
stos
ret
cmp
fists
mov
xlat
rol
dec
cmp
xor
mov
mov
push
adc
xor
dec
in
inc
data16
in
inc
ficoms
sub
pop
dec
mov
mov
aad
push
int3
xchg
push
push
notb
mov
scas
aam
pop
cli
icebp
xchg
pop
aas
jp
mov
add
cmp
movsl
cld
add
mov
xor
add
and
jnp
pop
mov
shl
pusha
insb
pop
fmull
push
vpshlw
flds
mov
inc
and
xchg
cmp
out
je
mov
iret
mov
insb
push
mov
push
pop
movsl
pop
fdivl
popf
push
xor
movsb
or
stos
in
cwtl
insl
add
mov
sub
pop
add
test
into
inc
mov
cmpb
dec
add
or
aad
adcb
pusha
data16
cld
mov
and
sti
cli
popa
dec
mov
jg
mov
pop
push
mov
mov
cmp
jno
and
sti
icebp
outsb
or
mov
andl
push
pop
add
and
fwait
xlat
ret
les
in
data16
inc
inc
push
or
fiaddl
dec
lock
push
xchg
or
dec
or
or
pop
call
call
lods
lahf
lea
inc
nop
jmp
push
push
leave
ficomps
and
call
insb
popf
fsubl
or
es
xchg
dec
sub
fidivs
mov
out
imul
shrl
cmp
dec
cld
jmp
add
add
push
mov
out
jg
in
pop
out
ljmp
std
and
fisttps
pop
mov
mov
in
pop
pop
stos
jb
sub
push
push
movsl
lods
into
adcl
mov
into
sbb
xchg
out
mov
push
lea
sbb
cwtl
loop
and
cltd
cmpsl
cmp
cs
lret
dec
sbb
jl
lret
mov
lretw
push
sub
mov
test
pop
or
test
loopne
inc
lea
iret
cmp
jp
int3
xor
sub
pop
enter
pop
into
sbb
jo
fistl
dec
add
and
mov
ror
or
es
cmp
push
mov
iret
je
inc
out
or
pop
pop
fmulp
inc
das
xor
sub
in
divl
mov
cmp
fisttpl
pop
mov
pop
stos
repnz
add
jmp
dec
push
mov
jmp
out
cmpsl
add
dec
nop
lret
mov
out
sahf
xor
and
mov
js
stos
jp
push
mov
outsb
sub
xchg
and
repnz
push
cmp
mov
mov
push
mov
bound
adc
mov
into
stos
aad
mov
sub
cmp
daa
push
hlt
daa
cmpsb
loop
mov
ffreep
sbb
sbb
push
imull
popa
jb
cld
bound
into
add
mov
je
out
or
cmp
fsubl
xor
cmp
call
adc
insb
enter
mov
cli
push
adc
mov
mov
in
xchg
mov
jae
cmp
repnz
into
mov
shll
sarb
adc
jnp
push
repz
pop
sarb
jo
push
in
inc
adc
sbb
lock
pop
aas
mov
into
fcompl
push
repz
int3
repnz
int
nop
pop
test
lcall
outsl
out
mov
cmp
scas
es
aam
mov
mov
outsb
hlt
dec
mov
pop
mov
mov
xchg
xchg
dec
test
mov
pop
xchg
repnz
pop
jb
subb
jbe
js
mov
loop
out
ret
sahf
push
sti
sub
or
sub
pushf
or
mov
xor
push
fisubrs
hlt
inc
adc
lahf
popa
and
mov
jo
imul
and
scas
mov
nop
xor
mov
adc
sbb
iret
cltd
mov
xchg
pop
sub
adc
sbb
movq
adc
gs
sbb
cmpsb
andl
stos
inc
les
cmp
mov
inc
imulb
sub
out
pushl
js
inc
into
mov
hlt
ljmp
dec
lods
js
add
or
movsl
js
push
dec
xor
shl
sti
out
sbb
pop
sbb
mulb
push
mov
add
flds
incl
aam
xchg
and
fiadds
lahf
repz
iret
jle
sti
pop
or
sub
pushf
mov
jmp
xlat
push
jl
fnsave
and
xchg
lcall
pop
lcall
lods
xlat
fchs
scas
xchg
push
mov
in
mov
in
mov
test
or
mov
ficompl
mov
jg
sbb
repz
ret
icebp
mov
xchg
daa
mov
or
fnstsw
enter
and
insb
add
fcoml
push
fimuls
scas
je
lcall
inc
test
adc
mov
add
mov
test
xchg
and
xchg
call
inc
cmc
sub
dec
xor
push
out
bound
mov
in
loop
jmp
addb
inc
xchg
fiadds
mov
sub
loopne
pop
pop
lock
pop
sbb
inc
and
mov
add
pop
rclb
out
outsb
push
pop
xor
xor
rolb
cmp
add
mov
mov
mov
push
ficoms
push
lds
inc
cvttps2pi
in
sub
int3
jp
cwtl
repz
xchg
jge
cmpsl
outsb
xorb
loopne
inc
test
jl
pop
daa
ljmp
ljmp
pusha
adc
sub
fcomi
insl
pusha
xchg
mov
sahf
pushl
aam
aad
xchg
sub
cs
xchg
fwait
divb
push
pushl
arpl
pop
movzwl
mov
ss
sbb
jp
shlb
jae
cli
xor
inc
iret
push
out
daa
sbb
shlb
test
int3
std
adc
mov
nop
cltd
in
pop
adc
repnz
push
fstps
mov
int3
xor
sub
jl
stos
xchg
movsl
pop
push
fstpt
decl
mov
sahf
and
data16
repz
cli
dec
ficompl
add
testl
inc
adc
cmp
push
xor
iret
mov
movb
pusha
sbb
xor
add
lcall
arpl
xor
pop
xor
mov
xchg
mov
add
sub
xchg
push
imull
or
negb
notl
push
sub
jg
in
and
sbb
add
pusha
sbb
pop
fcmovbe
mov
addl
lds
jmp
inc
add
mov
stc
mov
stos
cmp
into
mov
jo
mov
clc
mov
adc
in
cmp
sahf
pop
add
push
or
out
xor
adc
data16
in
pop
and
mov
or
je,pt
mov
cmp
out
bound
xchg
push
xchg
push
jle
and
lods
ljmp
cmpsb
imul
icebp
dec
add
bound
jae
jb
mov
mov
orl
mov
mov
xchg
jmp
xor
jne
jae
xchg
in
push
cs
pop
mov
arpl
xchg
and
mov
lock
mov
xchg
mov
cmp
dec
and
mov
es
mov
rorl
pushaw
add
and
and
add
add
das
mov
xor
or
mov
adc
and
je
in
xchg
fwait
pop
movsb
push
mov
sub
pop
sub
mov
lret
cwtl
addl
jle
push
sahf
cs
fsubp
xor
jb
jp
sbb
add
xor
mov
sub
pop
iret
sub
hlt
xor
jge
orl
jecxz
adc
or
sub
fdivrl
cld
mov
hlt
xchg
jle
call
xorl
cmp
pusha
fidivl
sbb
adc
out
dec
cmp
ja
mov
adc
mov
push
jl
and
pop
add
mov
sahf
cmp
lret
rcl
rcl
pslld
les
dec
push
adc
or
push
cli
loope
adc
lret
sbb
push
inc
push
add
dec
push
cli
xchg
dec
adc
icebp
push
adc
imul
divb
fwait
ss
out
test
clc
pop
mov
or
out
movsl
leave
pushf
xor
aam
das
xor
jns
xor
pop
push
push
ret
inc
pop
adc
arpl
cmc
lods
inc
push
sbb
clc
faddl
jp
mov
xchg
xor
push
mov
inc
pop
into
push
and
push
adc
xchg
mov
sahf
je
push
mov
xlat
sub
jle
inc
movsb
push
cltd
movups
inc
pop
loope
xor
lock
out
xchg
inc
pop
repz
jmp
imul
in
cmc
inc
mov
iret
dec
ret
mov
ss
fdivs
xchg
in
fdiv
fwait
lods
xchg
test
je
out
sbb
xor
in
or
cmp
cmp
inc
cwtl
insb
xchg
rorb
fucomp
or
in
push
fsubrs
mov
sub
xchg
adc
mov
push
push
sti
add
xchg
push
and
or
mov
lods
sbb
cmp
adc
inc
pop
inc
sub
sub
mov
cmp
dec
test
out
das
gs
fcomps
mov
test
js
jmp
test
or
leave
and
stos
icebp
in
mov
mov
call
shlb
and
pusha
outsb
xor
sarb
mov
imul
sbb
xor
cli
add
les
in
scas
inc
negb
jg
push
push
in
test
mov
cmp
pop
les
lcall
mov
cmp
shlb
push
sbb
cld
scas
sub
dec
cli
mov
clc
in
testl
add
nop
xor
and
jns
mov
fnstsw
mov
push
popf
jl
jae
sbb
cld
std
or
jno
push
stc
cmp
fsubl
mov
test
mov
fnstenv
lock
ja
fmull
sub
sahf
add
cmp
rclb
sub
mov
mov
add
imul
cld
fdivr
add
addl
jbe
adc
data16
fbld
loop
lcall
sbb
adc
das
iret
das
out
loop
inc
inc
in
add
int
ljmp
pop
arpl
jg
fdivs
fdivrl
lea
ds
stos
insb
insb
mov
mov
push
cli
mov
fs
cltd
rclb
repnz
push
rcrb
mov
lcall
add
mov
aam
insb
adc
rcll
sahf
inc
les
imul
fbstp
xor
inc
adc
xor
adc
cli
jb
pop
lcall
cmp
jae
pop
fmul
mov
push
call
and
hlt
bnd
sahf
iret
jne
out
stos
fmull
push
test
popa
loop
and
out
mov
mov
insb
pop
add
sub
inc
push
daa
lret
sub
adc
imul
xor
cs
fdivs
xor
fildl
pop
pop
add
inc
or
inc
sub
xor
adc
push
adc
loopne
popf
fimuls
aaa
je
mov
cmp
cli
inc
pop
mov
mov
adc
insb
arpl
pop
push
add
add
in
fsubrs
inc
std
lods
ret
or
insb
jle
lcall
mov
push
and
in
imul
aad
les
adc
xor
xor
xchg
and
mov
dec
cmp
lea
xchg
mov
dec
sbb
dec
cmp
mov
cmc
out
add
lret
fisubrl
and
leave
dec
and
jae
shlb
push
pusha
adc
mov
andb
or
fidivs
mov
adcl
loop
cmp
scas
sub
xor
mov
sub
add
xor
ret
adcb
addb
mov
mov
lcall
push
nop
push
sub
cmp
cmpsl
sbb
fidivl
out
imul
push
fimuls
insb
test
jno
insb
stos
or
push
arpl
clc
add
dec
inc
or
out
ret
fwait
shlb
arpl
or
fsin
inc
ljmp
arpl
mov
ljmp
pop
sti
mov
sbb
pop
movsb
es
pushf
je
mov
xchg
cli
pushf
or
popa
clc
add
push
adcl
push
aas
adc
insb
out
movsb
jl
test
clc
sub
xchg
test
icebp
push
sub
imul
sbb
fs
scas
repnz
sbb
cmpsl
subb
push
fstpt
pop
jb
or
fistps
jno
icebp
daa
dec
pusha
out
or
push
sub
mov
and
or
cmc
ljmp
addr16
ret
lret
sahf
xor
inc
sahf
outsl
cld
rcrl
incb
paddd
subl
out
addr16
shrl
mov
lcall
jbe
dec
jo
jne
stos
lret
stos
mov
xchg
push
sti
or
pop
loopne
lret
dec
push
mov
xor
roll
or
psubusb
ss
das
insb
push
icebp
pop
adc
xor
ds
mov
xchg
out
jp
stos
lea
inc
mov
jo
push
mov
scas
pop
jp
andb
in
out
js
pop
popf
inc
ja
or
mov
daa
jmp
ss
cmp
shlb
fistl
add
adc
es
call
mov
adc
ljmp
xchg
mov
xchg
mov
sbb
int
test
push
or
sbb
loop
out
or
pop
mov
or
repz
sbb
xchg
push
je
sahf
imul
xchg
out
je
into
mov
out
cmp
movsb
push
xchg
or
pop
stos
add
int3
pop
test
js
push
xlat
jno
jb
adc
out
dec
in
out
mov
sahf
loop
popa
sahf
ss
ret
xchg
xchg
and
mov
mov
cmp
xor
and
xchg
pop
xor
push
pop
js
test
xlat
or
std
cmp
xchg
aaa
inc
dec
sub
xchg
out
add
int3
rcrb
fistpll
push
mov
test
bound
mov
mov
rorb
push
add
mov
xor
pushf
movsl
jl
inc
int3
imul
loopne
or
iret
xor
xchg
shrb
fs
push
mov
xor
inc
mov
ret
ret
clc
mov
adc
xor
fdivrs
push
adc
jp
das
in
push
jecxz
or
lret
xchg
inc
pop
sub
test
and
push
dec
nop
jns
mov
pop
loopne
push
lahf
out
data16
daa
push
cmp
bound
loop
xor
jo
sbb
fnstsw
add
subb
xor
mov
inc
xor
fcoml
add
daa
add
or
loope
subb
inc
loop
inc
and
mov
mov
xlat
arpl
enter
xor
enter
fisubrs
fwait
mov
or
loopne
push
xchg
notl
mov
test
add
sub
ljmp
mov
or
inc
pop
push
sbb
stc
inc
or
test
out
mov
cmp
lret
dec
cmp
andl
arpl
push
xlat
testl
fwait
mov
add
xor
pop
push
jecxz
in
mov
or
aam
rcrl
shlb
push
mov
push
jno
push
pop
sbb
cs
fs
rclb
mov
loop
data16
inc
mov
aaa
test
into
in
pushl
add
lea
push
cltd
stos
dec
aas
outsl
dec
push
jne
sub
xor
or
push
orb
pop
mov
pop
loop
jb
add
dec
enter
jmp
rclb
inc
push
adc
sbb
mov
push
notb
inc
ret
test
sub
and
popf
and
mov
adc
xchg
dec
cmp
out
xchg
lret
xchg
sbb
cmpb
xchg
movq
je
dec
iret
cmp
cmp
cmp
test
loopne
xor
dec
icebp
cmpsl
adc
mulb
push
cld
fimull
insb
mov
jl
lret
aaa
fmuls
adc
iret
dec
add
dec
pushf
and
adc
mov
sbb
xchg
jns
inc
lahf
test
cmp
ss
jmp
mov
hlt
sub
push
sub
jb
cmpsb
aad
fdivrl
pop
scas
or
mov
je
enter
jno
int
je
mov
mov
adc
inc
add
repnz
push
movsb
jp
push
jecxz
andl
jbe
inc
adc
cmp
push
inc
sub
sub
outsl
xor
mov
jbe
nop
pop
sbb
stos
xchg
fsubp
stc
clc
cmp
mov
sbb
add
sbb
push
sub
push
lock
lcall
fidivrl
xchg
sub
fcompl
outsb
dec
int3
test
js
cmpsl
adc
cld
mov
cmp
dec
push
inc
pop
xchg
es
pushf
imul
mov
test
lea
dec
or
adc
out
cmp
test
out
dec
or
daa
fnstsw
dec
imul
lret
cli
push
or
out
sub
and
xchg
sub
int3
call
push
fcmovnb
jns
sbb
mov
and
sbbb
repnz
mov
and
pushw
jmp
mov
cltd
dec
clc
ret
out
inc
test
pop
adc
adc
push
repz
sbb
rcrl
add
je
repz
imul
mov
mov
sbbl
nop
xchg
sbb
sub
dec
jo
mov
jp
add
andb
sbb
cmpsb
lahf
lret
data16
sbb
sbb
xor
push
lods
add
andb
mov
sbb
add
sub
lcall
call
inc
mov
xor
adc
fsubrl
cli
jno
aaa
ljmp
mov
rcrl
aad
mov
jl
in
daa
mov
fs
inc
sub
xor
inc
test
lcall
adc
adc
or
fsubrp
inc
mov
out
add
lcall
xorb
jmp
lret
lcall
adc
scas
mov
add
mov
jg
ljmp
add
insb
or
iret
ds
sbb
ficoms
xchg
mov
cmp
call
aam
stc
icebp
mov
movsl
mull
je
cli
push
pop
mov
outsb
and
sbb
lea
jl
cmpsb
push
faddl
push
pop
push
sub
or
std
pop
sbb
fisubrs
test
jb
add
mov
loopne
and
xchg
add
jle
push
loop
and
adc
sti
and
xlat
test
repz
out
sbb
fcomps
inc
int
or
fimuls
and
or
jl
sub
xor
jp
stos
leave
sbb
icebp
jecxz
stos
sub
cmpsb
stos
cli
jno
push
lock
mov
lods
adc
stc
sbb
mov
pop
ds
push
push
sbb
fists
cmp
mov
shrb
lret
sbb
cmpsl
xchg
lock
call
mov
mov
nop
stos
cmp
clc
jmp
lock
nop
rol
push
sub
cmp
xchg
mov
xchg
jmp
nop
push
loopne
adcb
bound
mov
int3
push
fistps
pop
and
push
mov
in
ret
idivl
stos
outsb
mov
adc
out
into
pop
cmc
cmc
xchg
or
sbb
cmp
inc
lods
push
cmp
push
push
pop
push
xor
push
in
add
outsb
test
cmp
adc
fisubl
cmp
inc
aam
pop
movsl
adc
jo
jns
divb
movq
out
sub
push
gs
jmp
mov
ret
fadds
out
pop
push
mov
repnz
addl
pushf
jbe
lods
sbb
jnp
adc
push
add
loop
sahf
je,pt
iret
fimull
ds
inc
and
stos
repz
sahf
leave
add
mov
adc
or
mov
gs
inc
inc
test
push
or
loop
or
int
sbb
popf
xchg
xor
test
mov
and
mov
clc
adc
or
jns
pop
pop
lock
push
aaa
icebp
lock
fwait
clc
xor
int3
in
cltd
subb
jo
sbb
lret
dec
xor
or
inc
push
mov
outsl
xor
in
insb
div
add
xlat
lea
xor
lahf
test
adc
xlat
loope
jl
les
adc
add
cmp
adc
ret
daa
push
mov
push
mov
fsubs
mov
pop
xchg
mov
les
push
fdivs
cmpb
push
repz
dec
outsb
push
mov
dec
adc
mov
lcall
lcall
lock
rcl
or
adc
jbe
jnp
loopne
test
jno
xor
add
pop
pop
lcall
add
sub
lea
push
jmp
bswap
cmpsl
es
fimuls
iret
dec
enter
adc
mov
mov
loope
mov
repz
pop
lret
xchg
xor
iret
mov
or
sub
push
rolb
in
push
cwtl
mov
xchg
pop
sbb
xorb
lret
lret
mov
inc
pop
lds
lcall
push
test
adc
ja
pop
dec
ljmp
fmul
dec
xor
aam
mov
insb
sub
lahf
push
inc
out
sbb
and
aam
aam
imul
test
pop
pushf
jae
mov
mov
pop
xor
lods
addr16
xlat
in
and
pop
mov
add
loop
or
adc
mov
in
xor
testb
mov
in
push
daa
pop
xchg
xchg
push
jb
loop
inc
fsubrl
insb
loopne
cmp
shrb
pop
cmp
xor
dec
cli
or
lock
imul
pop
xchg
and
sub
cmp
je
cmp
pop
fcoml
add
jp
out
mov
pop
call
nop
arpl
add
imul
mov
push
push
rclb
fidivrs
jo
pop
lods
push
sbb
sbb
pop
es
gs
lahf
ljmp
add
xorb
mov
xor
push
cld
push
and
pop
push
sahf
cmp
jo
sahf
lcall
ljmp
cmpsl
push
shrb
pop
inc
pop
lods
cltd
xor
jo
mov
pop
add
in
adc
into
rcll
mov
xorl
mov
mov
jo
ja
xchg
adc
mov
mov
mov
jle
loop
mov
jg
idiv
jl
fadds
pop
fs
in
idivb
push
je
add
andb
fisubrs
sub
add
inc
into
push
sbb
push
and
pop
or
mov
cmc
inc
adc
xchg
mov
mov
jl
icebp
jle
mov
stos
or
sub
jae
adc
cs
mov
in
dec
mov
lds
loope
faddl
lods
lcall
repz
xchg
hlt
sub
fidivl
stos
ficoml
cmp
and
imul
les
jnp
gs
push
iret
pop
cmp
pop
lock
xor
lock
mov
outsb
xor
lods
cli
mov
lds
xor
xchg
adcb
xchg
fisubl
vsqrtpd
mov
mov
mov
jg
std
push
jp
push
xchg
out
decb
jl
jae
or
or
fcoml
daa
in
xchg
adc
ret
add
enter
mov
pop
push
pushf
sub
and
lods
ljmp
cmp
ss
xor
ret
or
inc
rcrl
scas
jle
movb
inc
adc
es
xor
lcall
je
ret
enter
mov
sbb
aad
scas
mov
dec
mov
push
lcall
cmp
cmp
clc
clc
pusha
jg
into
ljmp
in
pop
loope
fisubs
andb
jo
xor
adc
cli
in
pop
popf
jno
cmpb
sub
and
mov
mov
fs
enter
frstor
mov
dec
stos
sahf
lahf
lcall
sbb
and
fwait
movsl
inc
push
push
sahf
pop
jge
or
mov
out
cltd
pop
push
sub
rclb
lahf
neg
std
mov
xor
outsl
sarb
roll
mov
and
pop
test
ljmp
cmp
sub
daa
xchg
mov
nop
xchg
fbstp
and
sbbb
lret
xor
jno
adc
mov
sub
bound
pop
sub
incb
je
cmp
xor
dec
loopne
push
scas
cmp
fildll
xor
cld
pop
aad
adc
or
adc
pop
cwtl
inc
jne
add
cmp
stc
or
cmp
loop
mov
out
scas
out
mov
push
pop
loopne
and
std
push
rcr
je
lahf
icebp
nop
mov
inc
pop
sbb
rorb
mov
lcall
mov
or
rcr
and
adc
xchg
ja
pop
daa
xchg
mov
out
fdivrl
fmul
dec
xor
xchg
je
jmp
push
into
mov
xor
hlt
pop
loope
xor
inc
out
and
cli
insl
xor
fiadds
je
and
jmp
mov
mov
fimull
or
xchg
lahf
mov
mov
xchg
pop
and
lcall
inc
loop
or
or
stos
pop
and
mov
into
inc
pop
cli
movsb
lea
push
or
dec
mov
pop
into
frstor
mov
add
into
add
in
cmp
add
sub
mov
push
out
mov
or
sbb
stos
ljmp
or
cmc
int3
push
and
fimull
push
loopne
les
cmc
stos
lcall
imul
lods
dec
jecxz
inc
inc
or
fstl
ret
shrb
imul
mov
stos
jno
cltd
xlat
xor
mov
mov
or
in
push
pop
xchg
xor
inc
es
ficomps
cmp
lock
dec
pop
mov
push
lcall
gs
xorl
in
hlt
sbb
bound
int3
dec
xor
sub
pop
cs
mov
pop
loope
outsb
cmp
push
cwtl
add
inc
jecxz
pop
lea
mov
std
jecxz
adc
push
sbb
cmpsl
hlt
xlat
call
aas
lcall
shlb
sub
test
pop
dec
orb
cmpsl
ficoms
fs
jnp
dec
pop
jl
scas
mov
mov
sbb
adc
or
xor
fldcw
testb
shlb
out
push
adc
btc
jle
je
jbe
or
scas
lds
cli
sbb
mov
outsb
ss
push
push
jnp
adc
bswap
jne
hlt
sbb
in
mov
push
xchg
and
push
mov
outsb
inc
xor
inc
jecxz
or
decb
in
fildll
repz
mov
es
fcmovbe
push
cmpsl
lods
ds
scas
ds
sbb
adc
cli
xor
fistpl
mov
into
cwtl
cmp
aas
add
lods
lea
in
sahf
fldenv
xchg
bound
jge
and
test
inc
roll
and
jo
mov
pop
jmp
nop
sbb
and
xchg
in
outsb
adc
repz
int3
adc
dec
loope
loopne
fwait
into
xchg
or
pop
hlt
push
sahf
dec
cs
xchg
mov
xchg
inc
hlt
inc
adc
sarb
and
aam
ljmp
push
bnd
xchg
cmp
mov
cmc
mov
les
mov
mov
pop
push
adc
dec
fs
cwtl
mov
pusha
or
or
dec
scas
inc
mov
std
int3
aaa
test
nop
mov
cmp
fcmovbe
hlt
and
xor
das
jg
out
add
test
add
fildll
ficoml
push
out
xlat
inc
lcall
ja
clc
fistpl
dec
add
pop
out
enter
xor
cmp
sub
fisttpl
push
push
repz
inc
sub
xor
cmp
pop
jg
jnp
mov
jnp
pop
cli
test
ffree
inc
jmp
and
stos
pop
insb
push
mov
xor
jbe
pop
xchg
cs
repnz
out
daa
sub
jno
inc
pusha
sbb
mov
lret
out
lcall
std
mov
cli
jnp
adc
icebp
rol
mov
pop
add
inc
rorl
mov
lcall
iret
movb
mov
jmp
jae
sbb
pushf
addr16
test
in
nop
idivl
pop
jne
adc
sbb
inc
xchg
xchg
add
pusha
cmc
dec
mov
cltd
push
cld
lock
xor
imul
loop
xor
sahf
add
push
or
xchg
add
outsb
test
rolb
cmp
lods
and
shlb
sub
sti
subl
loopne
clc
sub
popf
add
xor
and
cli
pushf
cmp
or
out
pop
aaa
push
mov
jle
lahf
push
adc
daa
xlat
fcoms
lods
mov
or
scas
hlt
pop
pop
rcr
xchg
test
hlt
xlat
dec
or
add
and
mov
sub
nop
fstl
out
or
jmp
pop
mov
push
cmp
and
mov
pop
popf
jo
ljmp
and
sbb
ljmp
mov
xor
not
xor
testb
ret
pop
cmp
lods
les
xchg
jbe
push
cmc
insb
js
stos
push
jmp
push
stc
jb
cmp
lret
sub
xor
outsl
int3
shll
push
fiadds
sbb
or
dec
addl
mov
nop
cld
repz
or
or
xchg
mov
mov
push
imul
mov
mov
mov
aam
pop
jmp
xor
or
push
inc
daa
rolb
pop
ljmp
or
das
rclb
mov
mov
out
mov
lcall
cmc
mov
inc
iret
iret
mov
pushw
sbb
lret
lret
jne
testl
xorb
push
mulb
and
jle
push
subl
ljmp
dec
das
jo
adc
xlat
sahf
push
loopne
xor
or
mov
push
jl
add
or
ficoml
xor
shll
gs
mov
pop
pop
dec
adc
hlt
int
xor
xchg
or
or
add
orb
insb
pushf
sub
xor
adc
inc
outsb
test
or
and
dec
xchg
fmulp
lcall
and
cltd
test
popa
add
jb
notb
sub
pop
idivb
inc
push
movsl
mov
mov
or
enter
loop
xchg
jbe
xchg
push
push
inc
data16
int3
or
cli
insl
stos
adc
mov
cmp
in
inc
aam
clc
add
out
dec
data16
ss
inc
push
insb
sub
cld
fcomps
fidivl
stos
pop
out
fiaddl
cmp
insb
enter
add
fs
push
clc
mov
inc
mov
lret
cmp
insb
rclb
stos
sbb
clc
push
push
testb
out
and
inc
pop
orl
mov
out
sub
jge
hlt
fdiv
adcb
daa
loopne
cvtps2pd
in
pop
jbe
add
lret
pop
xor
pop
insl
push
lock
or
out
or
jmp
pop
and
push
faddl
cmp
jp
jle
stos
push
sahf
adc
lock
test
daa
imul
ljmp
mov
cmpsl
in
inc
outsb
loopne
xlat
mov
mov
pop
xchg
mov
mov
or
jecxz
push
sub
sub
mov
imul
stos
shlb
loop
jno
mov
dec
xor
je
sahf
fnstenv
fwait
hlt
rol
adc
xchg
cmc
test
les
dec
pop
jbe
xor
sub
xlat
sbb
mov
jo
xor
sbb
lret
sub
sar
jae
sub
inc
mov
mov
cmp
test
js
xchg
cmp
jbe
pop
jmp
cmp
call
out
xchg
jnp
out
sbb
sub
sbb
inc
je
rcrl
mov
adc
xchg
ljmp
insb
mov
pop
out
fcmovbe
mov
movsl
orl
outsb
fistpll
clc
mov
cltd
sub
out
mov
insb
das
or
out
aad
xor
xchg
daa
mov
adc
inc
jns
mov
add
mov
js
pop
out
roll
fidivl
jmp
push
fisubl
popa
loopne
push
pop
mov
imul
or
je
sbb
xor
loopne
xor
push
pop
push
mov
cmp
push
sbb
inc
movsb
or
loop
and
lcall
je
mov
int
lret
pop
insb
test
push
rcrb
fsub
stc
fwait
in
addr16
push
and
out
jecxz
fs
imul
loop
add
jb
inc
movsb
pop
in
shll
push
mov
and
clc
add
push
rcrb
jle
pop
dec
pusha
rol
xchg
nop
fnstcw
jns
ds
je
call
hlt
and
stos
imul
cmpsl
pop
lock
xor
xor
jns
loop
xchg
xchg
mov
lret
clc
pop
jo
or
addb
inc
leave
mov
sbb
fwait
cmp
mov
sub
jnp
inc
mov
push
ljmp
lods
call
inc
inc
daa
push
lret
fidivrs
jecxz
es
fisubrl
call
xlat
sbbl
push
cs
sahf
repnz
push
xor
mov
push
popf
stos
aam
pop
test
fbstp
fldt
xchg
out
fsubrl
adc
push
xchg
lret
jno
andl
adcl
adc
scas
fistl
xchg
jp
iret
or
outsb
insb
outsb
add
inc
stos
mov
sarb
fdivrs
cmp
lds
inc
dec
or
jns
xchg
xor
in
cwtl
pop
dec
sub
cli
mov
fcompl
cmc
insb
cmpsb
mov
add
lea
out
mov
in
sub
das
sbb
shrl
insl
sahf
xor
cld
int
movsb
sbb
mov
je
shrb
daa
and
mov
pop
or
repnz
hlt
and
mov
lcall
pop
ja
pop
mov
sub
mov
sbb
fisubs
cltd
cmp
test
lret
lcall
lret
in
jmp
mov
pop
add
pop
call
adc
push
or
sub
iret
push
sbb
push
or
xor
inc
cmp
outsb
add
test
sbb
adcb
fisubrl
pusha
xchg
inc
xor
mov
ret
cld
add
xlat
inc
dec
repz
mov
fcomip
ret
dec
mov
test
pop
xlat
shlb
inc
or
sub
fs
sub
lea
mov
sub
js,pt
rcrb
mov
pop
sub
out
clc
ds
cmp
lods
mov
jge
stc
mov
lcall
adc
mov
in
nop
pop
mov
mov
loop
xor
or
jge
jae
sbb
addr16
jp
pop
int3
push
mov
push
add
sub
mov
sub
push
push
mov
out
and
je
out
pop
mov
cltd
mov
mov
mov
or
imul
fadds
cmp
mov
mov
das
cmp
mov
shr
shl
nop
test
sbb
test
mov
sbb
and
push
ljmp
lcall
pop
ljmp
add
ret
pop
sti
mov
dec
jmp
in
push
cli
mov
test
mov
push
fildll
add
loopne
or
sbb
cwtl
cmp
push
mov
xchg
dec
pushf
push
pop
lret
dec
and
mov
cmp
rorb
loopne
and
adc
jbe
push
pop
insb
andb
add
sahf
sub
xor
mov
ficomps
jno
mov
outsl
inc
push
sbb
and
jl
pop
fisubrl
xchg
xor
repnz
xor
inc
xor
mov
inc
fmull
stos
cmp
dec
add
mov
inc
mov
lret
das
int
pop
jmp
sbb
testb
add
adc
pop
xor
ficoms
and
jle
out
out
fcompl
pop
in
call
xor
psrld
addb
pusha
loop
and
pop
adc
inc
call
dec
inc
or
mov
inc
stos
jno
dec
xchg
xchg
sub
jge
inc
xchg
cmp
mov
icebp
mov
int3
xchg
scas
fildl
cli
in
scas
dec
adc
cmp
movl
and
and
push
bound
dec
cwtl
and
sub
js
mov
lock
mov
dec
fsubl
jle
data16
and
out
ret
inc
lods
add
sti
mov
mov
stos
adc
sbb
inc
fwait
push
ror
clc
sbb
pop
mov
sbbb
scas
test
mov
pop
ds
and
clc
pop
sub
aas
sbb
and
stos
enter
lahf
mov
push
dec
cmp
jle
inc
xor
push
mov
out
xchg
fidivrl
push
sahf
in
loopne
sbb
dec
mov
aas
scas
mov
shlb
fs
pop
pop
es
pop
mov
dec
je
cmp
xchg
sahf
stc
repz
mov
into
lret
gs
loop
cmp
out
loope
fimuls
and
or
sub
mov
nop
mov
imul
adc
xor
push
xor
fld1
jno
loopne
xor
pusha
mov
mov
stos
into
nop
testb
cmp
fimull
or
mov
mov
addr16
sub
jns
pop
ret
xor
loop
cmp
loopne
into
cmpb
test
setnp
inc
push
mov
ljmp
sub
mov
sub
jb
clc
insb
mov
xor
rol
mov
sub
sbb
nop
adc
stc
fimull
out
mov
xchg
insb
icebp
cwtl
adc
nop
pop
stos
or
les
in
out
inc
cmc
scas
scas
push
mov
prefetch
or
mov
sbb
jns
add
insb
mov
js
call
sbb
and
adc
adc
push
jecxz
jp
jne
jp
xchg
pop
ljmp
jb
xchg
mov
sbb
dec
xchg
mov
popf
push
loop
into
push
je
int
inc
lret
pop
dec
push
insl
lret
dec
dec
cmp
sbbl
iret
das
iret
hlt
fcom
mov
ss
add
add
cld
int
mov
sub
sbb
pop
dec
jo
icebp
sahf
pop
lods
incl
loope
popf
and
jmp
cltd
add
push
sbb
cmp
insb
sbb
push
shrb
mov
or
jo
inc
jno
pusha
jp
or
inc
pop
add
sbb
loop
sub
pusha
dec
out
xor
push
add
orb
adc
loopne
popf
idiv
call
es
int
sub
pop
xchg
cmp
push
push
or
orl
mov
xchg
inc
cwtl
sub
mov
mov
les
out
idivl
sub
push
leave
xchg
mov
outsb
test
lcall
int
repnz
pop
hlt
or
out
jp
dec
or
aam
xor
leave
gs
daa
cmp
sahf
xor
imul
clc
lds
add
movsb
mov
cmpl
adc
fnstsw
dec
mov
mov
out
mov
mov
push
and
test
repnz
sub
imulb
neg
fnstcw
mov
dec
xor
call
adc
sti
mov
xchg
les
in
adc
pop
lcall
mov
pop
repnz
sbb
mov
negb
add
jle
jle
insb
jle
lcall
cmp
js
mov
je
push
mov
pop
loope
pop
xchg
xchg
outsl
in
loopne
push
push
adc
sub
push
push
jbe
mov
push
push
or
lret
push
xchg
orl
scas
mov
lds
cmp
mov
mov
test
xor
and
lds
jle
sub
add
mov
sub
sub
pop
lods
icebp
clc
fldt
xor
stos
dec
mov
jno
mov
insb
push
sar
jmp
mov
cli
lret
lret
sbb
mov
push
pop
aam
ret
inc
sbb
push
test
xor
outsl
xchg
inc
icebp
add
pop
pushf
fcompl
mov
data16
sbb
loop
pop
sub
jnp
sub
xchg
ds
outsb
pop
test
xchg
push
lahf
addr16
cmp
push
xor
iret
aas
push
or
movsl
push
mov
xchg
idiv
inc
inc
dec
pop
cmp
inc
push
pusha
mov
imul
testb
and
push
and
lea
lea
mov
mov
push
pop
je
out
pop
inc
sub
jno
xor
inc
out
mov
mov
aam
jno
jmp
and
xor
jo
push
push
out
lret
add
push
add
jb
mov
inc
mov
fwait
cld
and
and
int3
add
jl
cmp
shrb
testb
mov
data16
pushf
jbe
add
adc
xor
push
pop
dec
or
cmpsl
pop
lret
inc
ret
fucomi
jo
out
and
daa
add
js
rol
out
into
lock
push
sub
stos
insb
cmp
fbld
outsl
pop
sub
fs
sbb
ljmp
push
jbe
orl
pop
pop
in
add
adc
xchg
dec
ds
imul
push
push
jno
or
mov
mov
cmp
stc
movsl
test
xchg
push
lods
cmpb
movsb
push
pop
add
lods
out
call
mov
pop
icebp
stos
push
les
movsb
push
lret
xchg
xlat
daa
cmc
dec
jl
lods
push
loop
jmp
push
in
faddl
test
sbb
inc
clc
mov
sarb
inc
sub
in
and
push
loop
and
mov
push
or
mov
orl
movsl
in
xlat
cli
push
sbb
or
daa
arpl
jns
mov
jg
testb
cmpsl
fwait
xchg
xor
sub
outsb
mov
lods
push
repnz
fnsave
push
jle
push
mov
hlt
cmp
jp
test
sahf
ljmp
cmc
jb
inc
mov
mul
insb
mov
xor
add
fdivs
adc
xchg
leave
push
xchg
dec
mov
cmp
sbb
push
pop
into
jno
pop
xlat
addr16
push
in
pop
and
test
sar
cmpsl
jp
pop
mov
sub
sbb
and
fcmovnbe
mov
xor
out
mov
push
mov
or
mov
mov
iret
cs
push
adc
cwtl
xor
sub
das
orb
and
out
sub
mov
in
popf
mov
adc
lock
inc
stos
sahf
pop
push
push
sbb
mov
and
push
fdivs
jb
das
cmp
mov
dec
lock
pop
xchg
and
lods
adc
jge
out
and
lcall
shlb
pop
lcall
das
xchg
pop
movsl
testb
shrb
fwait
xor
repz
cmp
out
dec
dec
daa
loope
mov
cli
iret
call
pop
pop
movsb
js
mov
repnz
rolb
sbb
dec
cmpsl
ret
stc
cs
insl
pop
mov
and
sub
sub
sub
or
push
cld
daa
add
push
out
sub
lahf
jne
je
insb
rcrl
mov
dec
lds
mov
mov
sub
adc
push
dec
or
sub
pop
jnp
add
and
pop
insl
push
cltd
icebp
ret
push
mov
in
loop
and
push
sub
dec
add
or
neg
je
dec
es
xor
mov
pop
xchg
jp
jp
mov
mov
xchg
or
iret
iret
or
iret
and
clc
sbb
sbb
lods
push
and
cs
pop
lret
jl
sbb
add
enter
inc
mov
xor
xchg
and
and
adc
outsb
jne
lock
movsl
add
in
imul
mov
xchg
sub
pop
out
lret
dec
andl
loopne
mov
dec
call
out
gs
stos
lock
add
outsb
xchg
popa
sahf
fidivs
inc
movsb
or
lret
add
sbb
dec
stos
xchg
jbe
cmp
pop
mov
je
out
test
int3
mov
mov
and
in
jl
inc
insl
push
cwtl
xchg
test
sbb
xor
inc
out
adc
rorb
sbb
adc
xor
cmp
mov
dec
push
cli
stos
dec
and
icebp
pushf
sub
jb
jno
adc
dec
nop
je
mov
loope
sahf
and
stc
mov
pusha
ds
push
mov
cmpsb
xchg
mov
rcrb
push
xor
mov
or
jge
clc
mov
cmp
ljmp
cmpsl
dec
cmp
push
push
cld
in
pop
test
cltd
mov
pop
shlb
xchg
push
mov
push
and
loope
cmp
add
cwtl
xlat
jbe
mov
daa
inc
mov
pushf
xchg
xchg
das
fwait
les
cli
xchg
dec
add
test
adc
sub
jle
mov
or
rcll
mov
cmpsb
add
lret
xchg
adcb
adc
mov
cmp
xor
fisubrs
sbb
inc
pop
push
inc
pop
idivb
push
add
pop
fisubrl
data16
faddl
mov
movsb
add
faddl
insb
xchg
fcoml
dec
mov
jge
cmpb
insb
loop
or
shlb
outsb
push
in
adc
js
cmp
mov
mov
mov
lahf
cmp
xor
call
rolb
lcall
lds
pop
mov
jl
out
pop
mov
insb
mov
sahf
sub
jg
pop
push
int3
fwait
jl
push
push
and
pushf
cwtl
imul
jp
mov
movsl
xchg
sti
pop
mov
stos
mov
test
data16
out
add
lret
lock
push
mov
faddl
inc
xchg
push
xor
shlb
sub
popf
pop
popf
jmp
mov
sbb
jecxz
add
push
pushf
adc
orb
add
cmp
shll
test
mov
aaa
adc
fldl2e
mov
hlt
cmp
sbb
inc
addr16
icebp
cmp
adc
fisubrs
push
movsb
data16
mov
push
mov
out
lcall
or
les
mov
insl
ljmp
dec
aas
push
push
lods
jo
testb
sbb
js
pop
xor
js
push
in
es
int3
in
push
adc
fistps
jmp
out
js
insl
xchg
ret
inc
call
aad
loopne
jno
jne
mov
daa
adc
inc
dec
stos
sbb
dec
mov
divl
data16
and
stos
jle
xchg
mov
iret
repnz
out
pop
repnz
in
aam
hlt
push
add
ret
les
out
mov
mov
xchg
xchg
fucomp
jbe
cld
push
inc
clc
in
lahf
cmp
int3
xchg
add
push
stc
xor
inc
je
lret
jecxz
loopne
repnz
xor
pop
ret
xchg
js
loop
mov
add
shlb
fldt
fnstenv
xchg
inc
cmp
cmp
neg
mov
inc
adc
mov
push
loopne
or
and
in
add
and
test
pop
pushw
cmc
mov
hlt
pushf
addl
jg
repnz
lret
adc
jo
loopne
mov
hlt
movsb
or
lods
sub
icebp
scas
call
lahf
lcall
mov
jo
bswap
add
mov
cmp
jo
loopne
fisttps
pop
inc
aas
movsl
lock
shlb
push
int
adc
div
fstp
rorb
cli
xchg
das
dec
mov
mov
add
stos
fmul
jmp
xchg
dec
mov
push
fdivrl
mov
scas
ds
push
xchg
aad
cmp
lds
ret
push
pop
rcll
and
mov
cmc
fwait
pop
xchg
push
mov
and
enter
push
pop
mov
sbbb
add
lret
xor
movsl
jl
outsl
loopne
and
cmpb
sbb
add
ljmp
mov
sub
lahf
or
cmpsb
sti
pop
sub
adc
xchg
mov
xor
outsl
cmpsb
loop
sub
and
inc
xlat
mov
xor
sub
inc
adc
data16
xor
test
mov
dec
test
mov
jl
lock
push
sbb
push
call
pop
pop
or
push
adc
insb
pop
adc
mov
je
out
lcall
push
fwait
adc
mov
xor
sbb
xchg
lcall
inc
add
lea
call
push
mov
sbb
iret
fnsave
call
add
in
pop
sbb
push
pop
cmpsl
ret
inc
and
loop
lods
or
cmpsl
pushf
je
test
mov
out
push
psubd
stos
inc
sarl
add
ds
dec
call
push
push
sub
or
decb
xchg
je
out
out
mov
mov
data16
outsb
push
push
daa
stos
xchg
pop
daa
xchg
xchg
sbb
rcl
jle
push
insl
push
aam
lcall
sub
cld
adcb
mov
or
out
dec
sub
repz
or
xlat
jne
mov
jg
loope
adc
inc
xorb
pop
jg
pop
add
push
fimuls
cmp
repnz
mov
ret
fadds
xchg
sub
add
loopne
push
sub
add
adc
mov
insb
pushf
stos
pop
inc
mov
inc
addr16
data16
ds
ss
ss
daa
sub
xor
push
ljmp
cmpsb
jg
mov
cmp
push
mov
pop
xor
test
push
lret
and
pop
sub
push
push
out
ds
pop
call
mov
mov
cmp
sub
lea
movsl
xlat
insb
cmpsl
mov
pop
push
out
add
xor
mov
mov
mov
clc
inc
jmp
add
mov
into
add
dec
push
push
or
dec
or
mov
and
pop
cltd
mov
mov
scas
push
cli
repnz
or
adc
sbb
inc
aaa
nop
push
enter
sub
and
sub
xor
sar
cmp
cld
js
loope
adc
test
dec
call
jmp
inc
inc
inc
pop
sbb
push
cmp
out
incb
test
sbb
in
dec
add
inc
sbb
cmp
stos
daa
mov
arpl
mov
es
popa
xor
or
pop
xlat
jno
outsl
xlat
out
pop
xor
lret
outsl
pop
subb
movsb
mov
mov
jecxz
push
stos
nop
xchg
sub
daa
add
jmp
std
xchg
push
lret
cmp
ffreep
xchg
mov
sub
stos
push
mov
or
push
in
rcr
popf
and
jbe
test
dec
mov
sahf
jns
or
dec
push
insl
mov
and
and
jecxz
je
daa
outsb
addb
adc
les
in
mov
and
mul
fsubrs
in
out
repnz
test
mov
ss
fsubrp
xor
rcr
inc
gs
je
dec
in
mov
dec
fisttpl
rolb
push
repnz
data16
mov
adc
inc
lret
mov
rclb
xor
dec
add
clc
and
and
add
cltd
aam
cmp
push
xchg
adc
xor
int3
shlb
or
out
or
in
mov
push
mov
sbb
mov
mov
xchg
pop
stos
xchg
lcall
mov
in
decb
jmp
repz
scas
outsb
js
ja
and
push
je
out
sahf
enter
movsb
lret
inc
sub
lock
pop
stos
shll
ficoms
sbb
sub
pushl
mov
jbe
push
or
xchg
adcb
mov
notb
rorb
xchg
dec
loopne
or
addr16
test
das
cmpsl
sub
outsb
out
outsl
ror
mov
inc
xor
cs
arpl
inc
ss
hlt
jno
sbb
scas
sahf
mov
pop
insl
scas
stos
push
lahf
xor
mov
xchg
lea
mov
cli
hlt
and
sbb
inc
insb
xchg
mov
push
sbb
dec
mov
ret
lcall
out
push
push
sahf
mov
lcall
fcomps
inc
adc
iret
scas
cmc
test
dec
pop
xor
mov
jne
aaa
in
fcmove
loop
ret
les
insb
push
imul
fwait
shlb
push
mov
jae
mov
cli
aaa
inc
aam
iret
shrb
stc
inc
adc
ljmp
clc
inc
jmp
ror
pop
adc
cmp
dec
fbld
in
fwait
insb
push
mov
out
sbb
mov
cs
aad
mov
pop
ss
push
pop
mov
xchg
mov
cmpsl
add
xor
sbb
clc
scas
adc
jb
mov
mov
outsl
cwtl
je
push
xchg
ret
es
cmp
xor
cwtl
ljmp
int
sbb
cli
add
fs
jb
mov
int3
inc
sub
cltd
mov
div
fstpt
sub
ficomps
and
sahf
xchg
mov
lock
mov
inc
pop
popa
mov
in
inc
repnz
nop
sbb
adc
xchg
cs
cwtl
jg
aad
nop
or
add
push
sub
test
push
mov
and
popf
mov
mov
adc
rorb
sbb
inc
push
test
enter
adc
icebp
add
je
pop
xchg
ret
dec
addb
aam
cmp
or
es
insb
pop
pop
mov
push
adc
jp
mov
stos
sahf
mov
add
mov
fmuls
sub
iret
shll
fistl
mov
fimuls
fbld
pop
xor
jae
sbb
dec
dec
mov
mov
aaa
cwtl
jnp
jbe
and
lods
xchg
nop
adc
dec
adc
repnz
jl
push
xchg
adc
dec
mov
xor
pusha
mov
pushf
mov
jg
pop
cs
mov
fwait
stos
repz
add
xchg
pop
push
xchg
push
in
orb
jmp
xchg
das
xor
lahf
push
ret
xchg
sub
mov
xchg
icebp
pop
mov
inc
jl
das
mov
sub
push
aam
outsb
add
jns
pushf
sub
push
jns
and
mov
cs
pop
cli
and
rcrl
cmc
int3
shr
xchg
out
pop
mov
daa
outsl
mov
icebp
push
ds
mul
and
icebp
jmp
mov
into
mov
int3
mov
push
cld
push
xcrypt-ofb
cmpsl
push
into
sbb
out
push
pop
inc
xor
xor
loopne
or
out
lret
lret
mov
sub
adc
les
cmpsb
rol
xlat
cwtl
fists
push
ljmp
repnz
and
sub
cmpsb
push
cmp
mov
cmpsl
test
sub
ret
test
sub
add
lcall
xchg
xchg
std
out
sbb
mov
pop
pop
test
jnp
inc
daa
mov
lods
sub
cli
addb
mov
test
ds
movsb
xchg
shl
sbb
je
test
lret
or
stc
mov
imul
pop
lahf
jno
jb
bswap
sbb
jl
and
lret
jae
inc
insb
jo
clc
cmp
lahf
test
xorb
cmp
jae
out
sbb
mov
es
cli
hlt
sbb
dec
shrd
mov
movb
cmp
xor
das
hlt
mov
push
js
jecxz
je
lret
iret
push
sti
push
les
push
stos
repnz
imul
push
sbb
jae
push
add
xchg
fstpt
sub
sti
sub
pop
shr
je
aam
jmp
sar
inc
sub
xchg
dec
fcmovnbe
ds
pusha
popa
pop
test
repnz
cld
push
cld
cs
int
mov
je
adc
clc
in
dec
sub
mov
mov
cwtl
add
lret
sub
mov
mov
xor
jl
xor
sub
inc
out
je
mov
call
push
mov
dec
data16
sbb
repz
mov
inc
xchg
fildll
mov
mov
pop
cmp
ret
push
pop
stos
mov
outsb
cs
pop
sbb
push
xchg
adc
inc
xchg
outsl
sbb
sub
in
in
push
cmp
stos
dec
cwtl
or
call
sti
xor
dec
inc
cld
aam
push
and
xchg
sbb
xor
out
outsl
insb
int
sub
stc
loopne
fdivs
xchg
xchg
sub
in
sbb
inc
stos
mov
cmp
xchg
push
mov
mov
push
movsb
push
dec
xor
dec
add
mov
push
mov
mov
fidivs
pop
rcrb
insl
fsubrs
das
xor
je
lahf
jne
mov
not
mov
stos
daa
data16
in
sbb
mov
mov
cmpsb
iret
out
cli
ljmp
into
cli
mov
in
adc
aam
daa
rcll
pop
xor
inc
cs
jle
or
push
out
ret
addr16
loop
push
and
mov
ljmp
pop
das
mov
cmpb
push
mov
jbe
xor
movb
sahf
fldcw
lahf
sub
push
fimull
sub
and
bound
pop
popf
or
fsubrl
cltd
icebp
push
mov
out
sahf
in
fdiv
fwait
cmpsb
fiaddl
xchg
clc
lcall
cmp
push
in
mov
jo
popf
xor
sarb
es
cwtl
and
ja
xor
rcr
push
ficoml
icebp
repz
cmp
sub
nop
leave
add
test
sub
mov
stc
cld
inc
mov
mov
xchg
mov
out
repnz
leave
fldcw
shrl
rcrb
shr
xchg
cmp
jo
loopne
jle
and
ret
out
push
sub
xor
adc
adc
loop
mov
mov
jo
pop
lcall
jno
and
adc
cmp
or
push
cmp
sub
mov
nop
mov
std
idiv
push
data16
jl
or
xor
pop
jl
in
bound
ret
push
pop
mov
scas
cmp
rclb
mov
jmp
sbb
fbld
cmpsb
push
mov
je
mov
rolb
in
daa
rcrl
cmp
xor
jle
mov
push
sub
int3
mov
shlb
dec
cmpsb
and
dec
lcall
insb
cmp
in
int
inc
pop
into
and
sbb
inc
hlt
push
js
clc
cmp
sti
insb
mov
push
xchg
shlb
lds
mov
push
daa
orl
mov
xchg
cmp
nop
jmp
cmp
fidivrl
sbb
mov
insb
in
loopne
in
jbe
mov
pop
adcb
mov
push
cmp
push
fcoml
in
movsb
mov
dec
dec
xor
sbb
push
xor
insb
mov
adc
in
jmp
pop
movsl
sbb
sarb
pop
adc
cmpsb
push
mov
cmp
insl
and
repnz
loopne
inc
fnclex
add
loop
jge
adc
sti
in
mov
lods
and
push
and
icebp
lock
pop
or
inc
push
push
sub
sub
scas
ret
js
push
pusha
cld
mov
push
mov
daa
mov
or
lock
jb
mov
pop
adc
dec
cmp
xchg
cmp
xor
dec
test
pop
pusha
hlt
push
test
mov
mov
push
or
das
enter
ljmp
mov
repnz
aas
mov
mov
movsb
xor
insb
push
imul
cmpsl
sbb
in
into
jno
adc
lcall
or
and
fstl
cmp
inc
in
mov
fldl
dec
xchg
xor
add
gs
loop
push
xchg
or
lods
inc
loope
inc
das
jp
fsubl
nop
sbb
pop
push
jl,pt
cmp
xor
mov
inc
jge
pop
sbb
testb
insb
clc
adc
and
adc
outsl
fs
dec
push
add
or
mov
push
das
mov
nop
add
sbb
std
gs
hlt
inc
push
sti
dec
test
repnz
push
and
push
ror
sub
add
test
and
int
mov
push
leave
xor
adc
clc
cmpsb
scas
fcoms
push
in
insb
adc
pop
sbb
push
mov
mov
mov
push
add
push
mov
mov
bound
adc
stos
xor
lods
xor
xchg
ljmp
adc
in
sub
nop
std
in
mov
inc
inc
or
xorl
sub
mov
xor
in
lcall
into
bound
jno
sbb
aam
sbb
mov
rcl
clc
jo
push
cmp
mov
cmp
test
lock
lret
mov
bound
push
addr16
jle
mov
and
and
js
pop
fucomip
out
pop
dec
mov
push
je
inc
repnz
jo
mov
fwait
cmp
dec
xchg
add
add
xor
mov
push
and
sub
sbb
and
and
sub
mov
addb
sti
mov
inc
pop
pop
in
pshufw
out
repnz
xchg
or
mov
and
xor
pusha
fsubs
les
movb
or
push
dec
sbb
hlt
stos
inc
or
mov
mov
jbe
lods
and
adc
mov
push
das
xor
or
repnz
and
in
int
fidivrl
cmpsl
fidivs
mov
inc
pop
sti
and
lahf
and
xchg
lret
and
push
mov
xchg
es
dec
call
pop
jne
shrb
std
mov
cli
movsl
push
mov
movsl
cli
call
out
cmp
sbb
adc
fisttpll
inc
push
ffreep
mov
jle
pop
sbb
fcoml
xchg
stc
repz
ret
or
xor
call
xchg
mov
xchg
push
lcall
pop
push
xor
sarl
jno
or
adcl
clc
sub
mov
cmp
push
ret
adc
push
xchg
cmp
sbb
out
out
mov
in
insb
lcall
push
mov
in
push
fildl
lret
outsb
sbb
ljmp
xchg
inc
push
adc
repnz
and
les
ret
xchg
push
movsb
jnp
mov
sahf
dec
pop
dec
ljmp
pop
icebp
and
ljmp
int
adc
out
add
sub
push
pop
xchg
pop
out
inc
mov
add
inc
cmp
adc
lds
or
xchg
add
mov
fimuls
cli
movsl
adc
add
adc
stos
and
mov
idivb
cmp
push
jl
lods
cmp
sbb
sbb
lods
cli
out
cmp
push
int3
daa
xor
out
fbstp
xchg
adc
fsubrp
push
mov
push
mov
pop
fs
test
mov
mov
and
mov
xchg
or
add
mov
mov
sbb
xor
dec
test
cli
lods
push
mov
out
xor
pop
jo
push
pop
pop
push
push
xor
in
sbb
out
push
hlt
fsts
aas
es
adc
xchg
add
rorl
add
fwait
sbb
test
stos
fs
aas
cli
and
mov
in
cli
inc
je
pop
xchg
test
clc
ret
test
push
aam
dec
stos
mov
test
int
mov
je
sub
sahf
stc
and
dec
and
push
xchg
mov
mov
jbe
add
lret
out
cbtw
loope
out
add
lahf
pop
daa
xchg
add
push
mov
dec
sbb
mov
bound
lds
push
inc
fstpl
call
xchg
sbb
movsl
xchg
push
hlt
subl
mov
sub
mov
xorl
adcb
test
in
das
iret
movsb
fdivrs
dec
jecxz
sahf
rclb
or
sub
pop
sub
rorl
pop
gs
outsb
sbb
shl
jmp
xor
inc
daa
imul
push
popf
xchg
stos
call
push
add
xor
or
cwtl
push
mov
push
fwait
inc
loope
xor
icebp
push
fadds
inc
std
sub
in
dec
push
insl
or
pop
cmp
push
cmc
addr16
je
cmp
push
lcall
out
in
lds
repnz
jmp
popf
mov
out
fcompl
mov
or
enter
add
push
or
add
sub
pop
cli
xchg
ljmp
and
sub
mov
movsl
imul
dec
xlat
mov
pop
or
lea
push
sub
movsb
mov
adcb
jmp
iret
outsl
dec
loop
test
jbe
imulb
adc
loop
xor
and
adc
or
pop
ret
imul
stos
add
jle
mov
mov
inc
out
pop
push
or
cmp
dec
mov
mov
push
cmp
std
subl
sub
ret
cmc
pop
jae
adc
or
fldenv
cmp
sub
out
xchg
divb
add
push
jmp
xorl
lcall
pop
jb
mov
fwait
mov
lock
sub
icebp
lcall
lea
cltd
dec
inc
les
fs
xchg
out
dec
stos
mov
mov
jbe
ja
xorl
daa
imul
mov
inc
ret
pop
out
xor
mov
sets
adc
xor
sbb
sub
dec
pop
cli
lahf
xor
loopne
cmp
into
sbb
push
push
adc
clc
pop
lds
cld
push
xchg
push
sub
bound
repnz
xor
loop
push
test
xor
xor
mov
pop
test
or
dec
sub
mov
jp
push
notb
and
jnp
cmp
ficoms
push
push
xor
hlt
ds
out
and
adc
iret
lahf
xor
mov
test
mov
insb
jmp
cmpsl
cs
mov
jg,pn
inc
mov
out
repnz
rolb
fistpll
or
mov
add
jp
in
mov
and
dec
mov
loop
or
ljmp
hlt
and
outsb
stc
insl
inc
add
outsb
fistpll
add
int3
sub
mov
test
iret
dec
xor
lahf
cmp
sub
or
movsb
in
mov
rclb
xor
xorb
out
cmp
hlt
mov
and
add
cmpl
insb
mov
sbb
jg
cmp
mov
and
pop
sbb
mov
sub
sbb
push
lea
je
mov
sar
mov
jle
add
sub
mov
loopne
in
je
into
mov
mov
pop
mov
xor
push
mov
cmp
in
movsb
push
repz
xchg
addl
sub
sbb
js
mov
inc
adcl
mov
outsb
pop
cli
inc
repz
mov
add
jno
push
pusha
sahf
sub
xor
and
push
sub
sarl
rcrl
shlb
pop
pop
sahf
add
rolb
jno
adc
push
in
cmp
cmp
and
data16
cld
add
test
cmpsb
sbb
xor
cmp
cs
push
mov
cld
or
dec
call
scas
jmp
mov
dec
push
or
xchg
xchg
sbb
lret
mov
cld
and
cltd
outsb
mov
insb
xor
mov
fmull
scas
rcrb
in
cli
push
andb
push
divb
dec
outsb
push
test
and
loope
sbb
movsl
dec
add
fistl
push
mov
cmp
inc
pop
sbb
inc
sub
and
decb
mov
iret
jp
pop
push
xchg
pop
loop
or
lret
jbe
xor
add
push
out
dec
or
adcl
into
push
fcoms
test
aad
arpl
xor
jmp
mov
fcmovbe
xchg
sub
or
xor
xchg
inc
mov
addb
mov
mov
xor
sub
sub
jbe
mov
sbb
xchg
hlt
mov
or
mov
adc
dec
imul
loop
cmp
das
pop
mov
push
fsubrl
stos
dec
and
xchg
cmp
hlt
addr16
sub
mov
loop
inc
shll
lock
push
mov
cmp
daa
inc
movsl
arpl
push
xchg
cli
push
push
or
out
add
mov
cmc
cmp
int
xchg
sti
je
and
push
dec
cmpsb
arpl
inc
sbb
and
mov
movsb
mov
cltd
sahf
inc
dec
jmp
pop
adc
or
or
andl
mov
pop
push
xor
dec
pop
and
mov
in
and
es
add
add
cltd
cmc
lea
push
xor
in
je
inc
sub
cmp
sub
les
ljmp
stc
cmpsb
adc
imul
loope
int3
jae
sbb
das
stc
push
or
ljmp
arpl
mov
pop
imul
loopne
out
push
pop
repnz
ret
imul
cli
ret
dec
test
and
iret
call
stos
inc
popa
mov
fwait
into
xchg
movsb
adcl
pop
test
test
jbe
iret
push
ljmp
cltd
je
ret
sbb
xor
sub
sbb
jle
mov
test
push
mov
xchg
mov
cmp
push
sbb
sbb
nop
inc
cmp
pusha
icebp
xchg
out
test
inc
testb
lcall
jl
ja
sub
shrl
lock
ret
and
mov
in
xchg
je
sbb
xchg
mov
in
loope
push
xchg
inc
inc
pop
ret
sbb
bound
mov
cltd
mov
fstpt
mov
les
pop
inc
cld
and
in
inc
add
sbb
bound
xor
repz
cmp
sti
lock
add
sub
mov
js
nop
loop
in
mov
jb
sbb
and
xchg
and
into
and
sbb
shlb
outsl
jo
test
adc
std
aam
cmp
jecxz
loope
mov
pop
ja
les
inc
pop
ds
leave
pop
push
xchg
inc
sbb
and
mov
sbb
fsubs
push
ret
fidivs
jo
cmp
dec
cld
fadds
lcall
push
nop
leave
mov
mov
scas
mov
hlt
sub
or
in
lret
add
cltd
arpl
and
mov
mov
subl
adc
leave
ret
call
out
jl
sub
jne
xchg
sub
sahf
dec
add
cs
dec
and
negl
lock
push
push
aam
add
sahf
call
mov
xchg
sbb
xchg
push
cmp
stc
or
mov
gs
popf
add
in
mov
stc
daa
mov
push
fisttpll
call
cli
scas
insb
rclb
lea
out
or
fdivl
push
out
xor
cli
mov
int
icebp
cmpsb
call
popa
jns
test
cmp
jb
orl
pop
push
pop
mov
cmp
test
test
mov
or
add
insb
imul
pushf
stos
pusha
and
loop
and
ds
sub
jecxz
or
test
jb
sub
push
cmp
call
inc
adc
test
mov
sub
mov
or
test
movsl
mov
in
in
or
push
addl
jae
or
mov
mov
pushf
sti
jge
or
xchg
sbb
inc
mov
cli
jl
lcall
jns
idivb
sub
ds
push
pop
lret
stos
adc
push
sbb
test
adc
mov
pop
mov
test
movsb
in
xchg
push
lods
ret
xchg
jns
iret
dec
adc
xchg
test
pop
aaa
push
lea
iret
adc
movsb
pushf
add
and
jo
sbb
mov
in
cmp
inc
push
imul
ret
fisubs
sbb
cmp
imul
js
adc
push
fnstenv
sbb
movsb
pop
fcmovnu
pop
es
inc
jle
les
test
les
push
int3
cmp
inc
mov
sub
ljmp
mov
subb
sub
lahf
js
sbb
and
sahf
hlt
or
out
out
testb
adc
sbb
dec
push
push
fcmovnbe
pop
jo
cmp
enter
xor
fcomi
sarl
into
ret
sahf
pushf
or
out
fcompl
in
push
lock
fldl
xchg
outsl
cmpsb
fnstsw
pop
dec
cmp
insb
jp
loopne
out
mov
sub
pushf
push
lret
adc
jl
mov
fs
popf
cwtl
movsl
call
rclb
mov
test
pop
pop
call
push
stos
inc
fnstcw
mov
inc
dec
lcall
add
or
mov
into
or
pop
cmp
sub
fimuls
or
fdivrl
imul
jbe
xchg
lea
jnp
cmp
pop
dec
mov
pop
mov
andb
sub
movsl
addr16
pop
mov
mov
hlt
or
loop
xor
adc
jg
jmp
push
jl
dec
sbb
jg
js
cmp
aad
push
adc
loopne
shrb
sub
cwtl
sbb
out
loop,pt
aam
add
sbb
dec
dec
popa
insl
mov
js
sbb
mov
adc
pop
cmp
movsl
imul
adc
mov
lcall
xchg
push
mov
adc
dec
stos
xchg
xor
cs
lods
xchg
jb
call
inc
jl
or
add
add
out
sub
and
nop
testb
push
ljmp
int3
insl
inc
cmp
pop
dec
rorl
xor
xchg
cmp
aam
ret
loopne
push
and
add
push
jne
sbb
popf
iret
mov
mov
out
cmc
aam
incl
ficompl
iret
iret
xchg
dec
xchg
jae
addr16
fcomps
or
gs
or
lock
scas
jl
adc
js
pop
add
lock
and
faddl
jnp
cmp
xor
cmc
cmpl
vmread
sub
sbb
mov
imulb
dec
push
add
sbb
fs
ljmp
outsl
xor
jge
jne
movsl
cmp
push
push
jo
cmp
movsb
icebp
addr16
push
xchg
jae
lock
jo
jnp
and
adc
mov
subl
mov
cmp
ret
loope
leave
dec
ficoms
add
sbbl
cmp
movsl
sbb
push
js
adc
mov
jg
mov
clc
xor
mov
or
ss
into
dec
ljmp
inc
push
mov
pop
mov
aad
nop
sbb
fs
cld
addb
jns
dec
add
enter
stos
mov
insb
mov
jae
ljmp
mov
mov
test
push
jne
rol
push
clc
in
mov
mov
outsb
in
jbe
mov
add
fcoms
lods
push
in
push
mov
faddp
push
jae
ds
sub
imul
inc
and
inc
jno
mov
inc
fcmovbe
xor
sahf
mov
or
dec
xchg
clc
ss
sub
loop
and
fsubrl
fmuls
mov
xchg
lock
xor
lea
adc
daa
lods
mov
aas
std
fdivs
loop
xlat
push
sahf
adc
or
bound
adc
fwait
cmp
mov
cmp
xchg
xor
jle
or
sub
dec
pusha
add
or
and
xlat
and
stc
outsb
cmp
pop
dec
jle
loop
jo
int3
mov
jae
cmp
push
ja
xchg
sub
or
fidivrl
pop
or
push
jle
decl
movsb
xchg
insb
or
out
stos
push
cmp
sbb
cmp
push
dec
pop
aas
xchg
data16
imul
enter
outsb
in
jbe
jl
cmp
repz
ss
addr16
fwait
out
mov
fnstenv
dec
xchg
mov
mov
into
push
mov
xchg
test
xchg
js
call
imul
mov
rclb
cs
or
jmp
cmp
jnp
mov
xchg
out
cmp
cmp
sub
fisubrs
add
in
jl
subb
shll
mov
pop
mov
sbb
negl
lahf
mov
fwait
lcall
cmp
dec
adc
pop
test
mov
incb
pop
les
mov
or
dec
stos
loop
sub
jnp
or
out
or
push
hlt
daa
fimuls
adc
aam
insl
jl
pop
lock
in
stos
cld
into
adc
fisubs
adc
je
jg
pop
dec
ljmp
jnp
mov
xchg
xor
jp
lock
fdivrl
mov
sub
imul
xchg
mov
shr
loop
or
loop
xor
push
loop
loope
push
or
hlt
xchg
cmp
mov
push
inc
repz
stos
xor
pop
stos
cmpb
cmp
shr
pop
repz
scas
insb
dec
cmp
stos
rcrb
das
sti
scas
pop
add
outsb
gs
xchg
adcl
out
sbb
pop
mov
test
jae
sbb
push
dec
or
insl
dec
sahf
int3
mov
push
xchg
adc
cld
enter
sbb
xor
pop
ret
into
data16
or
sti
out
push
xchg
popa
xor
jmp
cmp
fsubl
sbb
cmp
lods
jle
adc
sub
push
dec
mov
outsl
sub
xor
push
leave
or
fbld
lret
adc
or
and
je
mov
leave
cltd
ss
jle
fidivl
jl
jns
xor
test
fcomp
or
mov
xchg
sbb
and
pop
sub
push
cmp
push
mov
fimuls
adc
fucom
cltd
and
repnz
push
cmp
jbe
maxps
mov
cmc
cltd
inc
je
pusha
push
mov
xor
or
dec
test
cli
movsl
push
xor
pop
lcall
cmpsb
imul
fs
testb
add
and
and
mov
push
xchg
sub
or
aam
adcl
movsb
inc
and
jle
sbb
xchg
adcb
outsb
xchg
cld
cmpsb
adc
out
or
in
inc
insb
dec
push
jecxz
xchg
ret
pusha
and
jns
pushf
sbb
or
or
fidivs
scas
xchg
pop
or
cmp
loop
xchg
aam
sbb
pop
enter
pop
les
cmp
pop
push
sub
dec
sar
cmp
push
jo
and
or
jno
pushl
push
outsb
xchg
cmp
sahf
je
int
fdivl
lock
cmc
push
mov
jno
outsl
mov
mov
outsl
out
add
and
stos
sahf
aam
cmpsb
or
adc
xor
push
loopne
push
jae
mov
push
sub
je
out
orb
ja
mov
sbb
pop
sbb
pop
inc
adc
insb
jae
mov
popa
cmp
push
mov
test
es
orb
xor
lret
ret
push
scas
cmpsb
mov
ds
push
sub
movsb
adc
mov
loopne
add
mov
xchg
test
mov
push
mov
ds
mov
cs
hlt
adc
call
test
mov
lcall
push
lret
inc
mov
xchg
out
sbb
inc
adc
push
sahf
cli
adc
clc
and
cmpsl
stos
mov
insl
das
push
je
les
sbb
loop
les
cmp
in
pushf
push
mov
xchg
fcmovnbe
mov
in
mov
add
daa
decl
dec
enter
push
xor
xlat
rcll
sub
mov
mov
aam
test
jb
addl
and
dec
jo
pusha
shrb
adc
pop
push
mov
inc
add
dec
or
and
pop
sub
bound
stos
and
cmp
repz
mov
les
fistpl
je
lea
call
inc
adc
jge
in
cld
xchg
sbb
aam
adc
sahf
jl
mov
movsb
xor
adc
adc
push
and
xor
fwait
clc
dec
bound
cltd
push
loopne
push
push
pushf
fdiv
dec
cmpsl
stos
repnz
ja
leave
mov
in
test
sub
mov
jo
das
sbb
fs
shlb
mov
outsb
into
push
fldcw
sbb
clc
lret
or
jg
sbb
mov
mov
popf
test
call
mov
fldl
ret
cmpsl
pop
xchg
aam
xchg
ret
pop
xor
xlat
or
rolb
xchg
lea
mov
pusha
dec
sar
inc
cmp
jg
lods
push
and
xchg
cmp
ds
xchg
hlt
mov
jnp
data16
and
int
scas
cmp
ficomps
sub
push
out
out
xor
in
pop
xor
out
adc
jl
les
pop
xchg
ret
aam
sub
sbb
fistpl
add
scas
mov
push
dec
icebp
mov
mov
icebp
mov
jg
cmpb
jnp
pop
dec
mov
dec
inc
push
out
mov
push
push
out
sub
data16
sub
daa
xor
push
ja
stos
pop
fnstenv
dec
outsb
ret
iret
and
push
cmp
ja
mov
push
loope
push
out
push
andb
push
pop
int3
sbb
sbb
add
mov
xchg
je
jecxz
adc
nop
xor
sbb
adc
pop
mov
and
sbb
adc
addr16
ljmp
fdivrl
add
xchg
xor
or
xchg
inc
cmp
inc
mov
mov
mov
pop
pushl
ljmp
mov
xchg
pop
jg
jbe
xchg
ja
xor
movsb
pop
imul
mov
mov
test
jle
push
xor
ret
dec
cmp
add
mov
push
into
lock
neg
sbb
out
idivb
leave
lods
xor
jmp
jbe
cmp
cmp
in
add
xor
mov
mov
cmc
nop
cmp
enter
jo
insl
mov
loopne
dec
mov
mov
pop
hlt
and
hlt
enter
mov
sti
xchg
adc
adc
xchg
xlat
shr
ds
sarl
int3
das
and
mov
mov
sub
aaa
lcall
daa
push
aam
cmc
add
sub
and
cmp
mov
out
pusha
ret
push
cwtl
inc
das
adc
cli
push
mov
xor
xchg
jg
mov
xchg
push
xor
dec
mov
mov
arpl
mov
icebp
std
sahf
mov
push
push
js
stos
sbb
rcll
addr16
xor
lods
jl
stc
idivb
insb
mov
mov
sbb
bound
mov
cld
stos
in
data16
mov
notb
fisubrs
call
movsb
cmp
pusha
jge
test
lahf
pop
pop
pop
mov
adc
pop
jo
insb
add
push
das
sarb
push
add
push
mov
mov
js
add
cmp
mov
fcomi
mov
in
sub
push
sahf
mov
add
lods
xorb
jmp
test
pop
lcall
fs
pop
push
inc
or
cmpb
push
xorb
push
cmpsb
push
hlt
push
dec
xchg
ficompl
or
cs
jo
aam
fildll
call
arpl
ficoml
daa
dec
mov
cmpsb
stos
cmp
sub
loop
and
dec
xor
test
in
mov
mov
push
out
push
push
es
push
in
push
rclb
test
and
or
mov
inc
pop
fisubs
inc
adc
subb
test
imul
xor
adc
xchg
shlb
or
sub
or
lock
push
fmul
insb
cmp
fsub
fistl
ljmp
mov
fwait
mov
jg
jb
dec
pop
cmp
ds
pop
push
or
loop
cmpsl
test
out
data16
mov
stos
cmpsl
mov
dec
cli
push
mov
loop
pushf
mov
and
insl
pop
push
fs
push
adc
sbb
int3
stos
test
outsl
sub
fidivl
sahf
or
imul
xlat
out
jae
repnz
inc
int3
movsl
cmpsb
push
enter
xchg
inc
rolb
fwait
pop
ficoml
pushf
sbb
mov
push
sbb
adc
push
xor
flds
ja
jo
and
adc
bound
aam
pop
add
les
gs
inc
andb
inc
xchg
insb
mov
lods
inc
cmp
sub
sub
add
fs
loop
mov
sbb
cwtl
jno
adc
sub
fldcw
xor
in
xor
inc
add
dec
and
pusha
pop
mov
lock
mov
mov
imul
cmp
add
dec
nop
mov
test
or
mov
inc
adc
aam
cmp
sub
fisubrl
jl
in
mov
ljmp
mov
insl
push
add
mov
or
decb
inc
and
mul
test
or
mov
shl
and
lret
and
iret
lret
bound
xor
mov
jbe
add
lret
or
stc
or
pop
cmp
cli
push
push
cmp
cmp
add
mov
cld
xor
fadds
mov
push
add
push
pushf
adc
fbstp
or
call
mov
cmp
sub
and
in
js
or
out
push
shlb
in
xor
mov
mov
jp
cmp
fisubs
xor
mov
xchg
and
sbb
fdivs
sbb
call
xor
lock
xor
es
cmp
pop
jmp
ja
int3
mov
mov
in
or
jge
cli
mov
rolb
pop
push
cmp
cld
call
shlb
fisttpl
jbe
fadds
outsb
sub
sbb
sar
push
add
andb
xor
add
or
mov
cmpsb
xor
fadds
xor
pusha
shlb
cli
rclb
mov
dec
add
lret
cli
data16
sub
cli
push
mov
in
xor
test
xor
or
xor
pusha
and
cmp
push
test
andb
add
clc
int3
xor
mov
mov
cmp
mov
andl
loope
cmp
push
pusha
pusha
pop
adc
add
fwait
xor
pop
les
xchg
push
and
lock
dec
mov
daa
cld
mov
mov
loop
or
add
pop
pop
cmp
loop
stos
movsb
out
dec
ficoms
adc
cmpsb
and
push
cld
inc
out
daa
cli
mov
clc
xor
data16
push
lds
test
push
faddl
or
out
les
aam
ljmp
clc
mov
dec
push
xchg
pop
js
cli
mov
fwait
xchg
push
or
shlb
call
lret
xor
jp
mov
ljmp
outsl
xor
and
pushf
fisubrl
cmp
lock
jmp
fcoml
xor
cmp
xor
sbb
dec
xchg
mov
out
cmp
mov
insb
out
add
out
fidivl
into
pop
jae
sub
adc
pop
hlt
bound
stos
loop
ds
dec
cld
mov
pop
test
lea
cmp
mov
insb
jle
cli
dec
dec
inc
test
or
fiaddl
push
push
sub
dec
int3
ffreep
mov
and
aam
sub
shlb
xorb
repz
int3
cmpsb
pop
xor
lret
aam
sub
pop
push
sbb
jbe
push
jb
decb
outsb
cld
mov
mov
loop
nop
or
daa
fdivr
mov
jo
cmp
clc
rcrl
inc
and
dec
adc
adc
js
push
test
cli
and
divb
sahf
nop
in
jp
leave
pop
add
mov
mov
sub
fcomp
fiadds
push
cwtl
repnz
and
pushf
sbb
mov
test
xchg
pop
out
addr16
fisubrs
cld
ljmp
cmpsl
je
aas
call
add
test
loopne
int
cmp
push
push
inc
loopne
xor
test
jle
add
in
xor
cmp
cli
mov
adc
mov
out
adcl
ljmp
shl
or
xor
mov
pop
add
fcoml
add
outsb
push
out
pop
fsubrp
add
in
xchg
imulb
dec
mov
mov
mov
xchg
leave
push
add
pop
test
test
lock
push
insb
push
jecxz
dec
test
lea
mov
test
push
sahf
sub
or
and
inc
out
sbbb
xor
xor
push
sahf
dec
push
adc
adc
pusha
rcll
aam
fdivl
popa
adc
xlat
loopne
add
inc
hlt
push
js
test
or
add
aas
mov
dec
out
cld
inc
test
cmp
fcoml
sub
xor
cmp
pusha
xor
jmp
pop
mov
mov
jl
mov
test
clc
xor
and
hlt
xchg
or
pop
cmc
jne
add
jo
les
inc
or
out
addl
mov
adc
mov
int3
xchg
subb
cld
push
lcall
das
out
lcall
in
test
mov
data16
fsubl
xlat
ljmp
cmpsl
fimuls
addl
repnz
mov
xchg
aam
xor
idivb
cmp
bound
cmp
jo
mov
loop
xor
cs
pop
lock
rolb
call
outsl
loopne
mov
cmp
and
pusha
cmp
shlb
jnp
add
xchg
cmp
pushf
push
push
mov
pop
xchg
mov
push
sahf
cmpsl
sbb
mov
fs
push
mov
dec
subl
into
lret
insb
add
hlt
pusha
pop
push
aam
loopne
push
bound
add
jo
pushf
rcrb
ficoms
stos
jle
lods
mov
bound
pop
enter
enter
cmp
sbb
sbb
sub
jle
adc
push
lret
les
inc
inc
cltd
loopne
cmp
push
loopne
test
mov
mov
mov
rclb
sub
aaa
cld
push
dec
xchg
sbb
mov
pop
inc
mov
ret
dec
insb
ljmp
repnz
cmpb
adc
test
xchg
mov
mov
jmp
mov
mov
sahf
out
shrb
xor
mov
test
out
mov
inc
xchg
and
mov
xor
faddl
sbb
xchg
and
pop
fcompl
mov
add
xchg
mov
or
sbbl
dec
mov
adc
ljmp
lods
push
pop
js
lret
mov
jp
mov
fmul
pop
shl
add
je
nop
pop
add
xchg
je
xlat
xchg
mov
stos
cwtl
jl
lock
push
daa
cwtl
insl
dec
sbbb
in
rcll
adc
and
mov
rclb
cmpsl
push
gs
movsb
lods
and
dec
dec
pop
lods
std
or
aas
insb
dec
pop
lret
jnp
in
lods
fdivl
xor
xchg
dec
mov
mov
test
add
xor
ds
mov
ss
mov
mov
out
or
hlt
sub
jl
mov
push
mov
ret
mov
mov
movsb
les
enter
inc
call
test
cmp
sti
sbb
mov
push
adc
push
leave
mov
fidivrs
inc
mov
sub
cltd
mov
in
lret
hlt
jl
lret
fisttpll
mov
into
rsqrtps
mov
jo
inc
sbb
pop
pop
addr16
xlat
mov
lock
inc
xor
out
cmp
inc
push
dec
in
cmp
xchg
xor
outsb
loop
xor
insb
pop
repz
loop
inc
mov
xor
fwait
ss
aam
in
mov
clc
mov
sbb
xor
and
adc
xor
mov
mov
or
in
xor
cld
dec
mov
pushf
mov
xchg
push
and
push
imul
sahf
sub
add
xor
imul
push
je
xor
cmp
repnz
and
mov
out
jp
or
insl
je
add
in
jae
icebp
adc
mov
dec
es
jo
inc
pop
add
inc
loop
mov
mov
cld
nop
out
orb
cmp
cmp
or
nop
jno
bound
xchg
scas
adc
out
addb
ret
cs
push
push
or
js
mov
test
xchg
insb
dec
cld
fldenv
inc
xor
je
ss
int3
decb
fdivrs
sbb
ja
out
mov
loope
inc
push
xchg
push
mov
dec
clc
cli
add
mov
add
pop
mov
mov
cwtl
push
fisubrl
fdivrl
mov
xor
lcall
mov
fildll
or
inc
stos
mov
test
push
and
mov
jmp
int3
sbb
add
pusha
jae
lcall
les
fdivl
push
rorb
xor
lods
les
or
jle
fisubl
sbb
push
fimuls
call
push
in
fsubrl
inc
push
lock
lea
fidivs
mov
mov
and
imul
jg
test
faddl
push
cmpsb
pcmpgtd
jecxz
xchg
pop
je
jne
mov
gs
cmp
or
cmp
lret
ret
cmp
movl
pop
pop
es
fcompl
inc
clc
mov
xor
fisttpl
adc
sub
xor
inc
inc
notb
mov
bound
loopne
popa
adc
dec
out
inc
out
dec
pop
and
lcall
hlt
ror
dec
pop
cmp
pop
mov
sahf
jl
sbb
lods
sbb
pop
and
bound
mov
mov
mov
xchg
or
jle
mov
push
mov
mov
jecxz
pop
les
dec
jl
fs
int
fidivrs
ret
es
push
ficoms
inc
xor
push
js
hlt
mov
pushf
lods
sahf
mov
jns
or
mov
and
ljmp
loop
cmp
cmp
aam
je
in
sbb
jl
mov
cli
lods
or
addr16
or
sub
mov
sub
test
pop
mov
push
faddl
cmp
fwait
gs
into
fsubrs
mov
clc
add
xor
xchg
pop
inc
sbb
out
test
xchg
ja
cwtl
adc
mov
test
dec
add
cs
mov
xor
adc
jo
add
push
in
andb
jle
stos
ljmp
xchg
xchg
mov
add
jno
sbb
insb
mov
js
mov
cmpsb
push
subl
test
cmp
iret
inc
jno
push
dec
sub
mov
insb
cli
out
and
fcmove
ljmp
movsl
and
int3
loopne
adc
pusha
sbb
ret
inc
or
bound
fs
ror
mov
jle
insb
out
lock
ficoms
xor
test
xchg
mov
iret
lcall
mov
fsubrs
cld
jle
shrb
loopne
loop
or
loop
and
bnd
iret
or
das
or
jp
cmp
inc
sahf
mov
fwait
test
addr16
sbbl
adc
gs
es
pop
call
cli
pop
mov
mov
lcall
mov
and
push
adc
lock
lods
mov
mov
push
sub
dec
sub
imul
adc
or
xchg
and
aam
adcb
dec
cmp
xlat
mov
jmp
lods
add
ljmp
insb
movsb
cmpsb
hlt
mov
ja
pop
inc
mov
mov
cmp
mov
mov
push
mov
decl
mov
dec
fwait
pusha
pop
insb
inc
jns
xor
cmp
mov
lret
scas
cmp
or
mov
inc
sub
pop
pop
sbb
call
pop
add
push
cs
clc
call
cmp
and
ja
nop
dec
mov
cmp
cmp
sub
add
inc
xor
imul
add
sub
mov
jle
jb
pop
add
mov
adc
xchg
clc
lcall
dec
into
cld
sbb
into
push
xor
lock
pusha
xor
rclb
scas
inc
mov
mov
mov
sbb
out
inc
push
mov
cltd
fcmove
out
test
adc
adc
mov
xlat
out
int
cmp
sub
or
xor
into
sbb
add
inc
repz
stos
loopne
cwtl
fnop
cmp
andb
es
and
hlt
sbb
sahf
and
xor
push
lods
cmp
jmp
dec
xchg
mov
aam
shrb
cmpsb
into
out
mov
ret
push
mov
insb
data16
test
or
jo
hlt
or
sbb
fmull
fisttpl
xor
mov
fadds
push
mov
in
cmp
add
jecxz
pop
loopne
sub
out
test
pop
stos
mov
pushf
in
fldenv
movsb
pop
push
sbb
inc
fxtract
push
inc
lods
adc
adc
in
movsb
cmp
mov
aam
insb
sbb
mov
mov
push
addb
scas
stos
test
mov
or
test
stos
and
and
xor
negl
xchg
sahf
mov
cld
test
or
nop
in
mov
test
mov
data16
dec
ss
push
push
pop
test
test
cmp
test
dec
push
mov
pushw
push
je
shl
cmp
nop
dec
sub
lods
mov
test
sub
xor
pusha
loope
in
sahf
ret
fidivrl
pop
add
cmp
lcall
push
ljmp
xchg
sti
pop
and
sbb
je
sahf
sub
mov
add
cli
cmp
mov
cmp
out
fs
insb
pop
mov
popf
and
mov
jl
in
in
or
sbb
and
nop
jl
lcall
insb
push
repnz
je
add
lahf
call
pop
js
je
ficompl
sub
lcall
je
jp
flds
shlb
push
or
fcoms
cwtl
fsubrs
sarb
aam
mov
pop
clc
lods
shl
pop
and
in
push
in
in
adc
bound
ds
lcall
sub
xchg
imul
add
fisubrl
mov
mov
lcall
fbstp
push
push
inc
add
mov
jle
ljmp
pop
mov
scas
dec
cmp
sub
imul
push
and
adc
pop
addr16
xlat
mov
mov
jbe
in
mov
adc
pop
lock
xchg
mov
lcall
sbb
xchg
mov
dec
sub
or
out
add
shrb
stc
test
xlat
push
pop
cli
pop
fisubrs
js
fadd
fwait
cwtl
push
push
mov
in
imul
movsb
out
cmp
test
mov
mov
cwtl
mov
inc
push
aam
nop
cmp
fcompl
jo
mov
or
adc
test
adcl
mov
daa
fsubrl
mov
cmpsb
insb
scas
loope
xchg
mov
in
aam
mov
jle
mov
idivb
outsb
and
ljmp
push
push
xor
and
dec
lret
mov
push
sub
cwtl
mov
repnz
bnd
and
push
cwtl
add
add
pop
cmpsb
daa
into
mov
fcoms
mov
in
loopne
test
in
bound
mov
movsl
fidivs
mov
imul
movsb
mov
mov
bound
cwtl
data16
xor
sub
or
add
xchg
scas
sub
test
xlat
xchg
in
or
lahf
mov
pop
mov
inc
xchg
fsub
push
fiaddl
jmp
loopne
sub
mov
dec
in
mov
push
in
dec
mov
mov
mov
xchg
push
xchg
mov
or
inc
sbbl
andl
cwtl
inc
je
add
inc
jb
aam
push
mov
ljmp
in
das
mov
icebp
fcoml
stc
xchg
add
push
lcall
jmp
mov
jbe
xchg
inc
xchg
outsb
add
pop
enter
ss
cmp
adc
cmp
inc
aad
dec
mov
das
push
call
xor
decb
inc
xor
sub
js
call
data16
call
js
mov
push
pop
mov
clc
call
shlb
and
mov
push
idiv
insb
mov
je
enter
xchg
ret
add
shufps
mov
mov
test
or
pop
aad
shr
pop
adcl
mov
xor
jmp
out
ficoml
mov
aam
push
xor
clc
or
lock
mov
sbb
add
data16
xor
mov
jbe
rclb
adc
or
hlt
pushf
js
or
mov
fidivl
add
mov
and
and
jmp
push
dec
call
or
mov
pop
sub
push
mov
add
enter
and
or
scas
fildll
sbb
test
clc
movsb
or
add
stos
inc
xchg
js
xorb
jo
jp
mov
adc
mov
inc
outsb
and
daa
xchg
add
cmc
mov
fstpt
lcall
fcmovbe
sbb
aam
pushf
in
pop
xlat
les
and
inc
xchg
mov
jmp
mov
and
sub
jp
test
lret
jo
repnz
lock
shlb
scas
pushf
or
bound
and
imul
sarb
repnz
es
pop
pusha
push
cmpl
cli
dec
out
sbb
scas
or
push
inc
or
cmp
int3
push
pop
pop
clc
insb
mov
sub
lock
mov
sahf
rorb
push
sub
lds
jl
and
je
enter
mov
sub
inc
enter
cwtl
and
outsb
dec
loopne
pop
pop
push
fsub
xchg
int3
cmp
cmp
xorb
and
hlt
js
cs
xor
and
inc
or
enter
cmp
pop
push
clc
sub
addb
and
push
push
inc
out
lret
out
enter
out
lret
clc
fcomi
lds
dec
mov
jne
das
or
repnz
je
and
out
mov
shlb
mov
mov
in
insb
enter
inc
movsb
mov
xor
imul
mov
mov
push
mov
jns
test
push
add
clc
cld
call
mov
mov
ljmp
cmp
sbb
cmp
in
ret
mov
je
int3
loopne
int3
mov
sbb
in
int3
fsubrs
cmp
or
ficoms
adc
pop
push
pop
out
xchg
and
mov
push
pop
in
gs
test
je
fmuls
cmp
cmp
cmp
mov
dec
xor
xchg
sub
sub
pop
addb
or
xor
repz
je
or
xor
mov
sbbl
jns
fs
test
dec
pmaxub
int3
mov
insb
xchg
add
out
les
push
int3
dec
and
push
or
xor
pushf
cmp
out
les
inc
fmull
into
jp
mov
push
mov
add
hlt
js
adc
jp
lea
stc
jae
jne
push
push
dec
or
mov
orl
data16
cmpsb
cld
sarl
xchg
mov
fidivrl
xchg
xlat
inc
push
mulb
push
xchg
idivb
mov
push
or
daa
fimull
shr
adc
call
or
clc
xor
cli
xor
mov
movsl
hlt
mov
or
mov
xor
push
js
push
dec
sbb
mov
add
rol
adc
lret
xor
mov
xorb
mov
inc
jns
mov
rcrl
inc
xlat
mov
or
push
xor
pop
jb
addl
xor
lcall
push
ss
pop
enter
into
sbb
pusha
xchg
es
xchg
push
xor
or
pop
adc
lock
mov
add
int
cmp
sub
mov
insb
sahf
and
xor
les
inc
insb
negb
adcl
jg
mov
xor
mov
clc
scas
pop
mov
pop
in
aam
scas
js
lahf
pop
push
pop
out
mov
sbb
pop
clc
xor
in
dec
je
cwtl
add
mov
mov
insb
sub
push
sbbb
cmp
and
push
test
js
cli
aam
cmp
cmp
cld
iret
clc
cli
lea
dec
sub
and
inc
pushf
adc
push
out
out
add
pop
adc
push
jbe
jb
xor
inc
cmp
mov
mov
xchg
bound
mov
sub
je
push
mov
dec
enter
inc
push
lret
out
and
push
mov
mov
je
push
cs
ja
scas
mov
xor
sbb
pop
xchg
dec
es
sub
dec
mov
lock
test
mov
jecxz
pop
xchg
leave
xchg
data16
aam
sbb
xchg
push
loopne
dec
movsb
out
mov
movsb
mov
pop
addb
and
or
andb
movsb
aam
ds
xor
enter
nop
xor
dec
sub
dec
jle
pop
outsb
xchg
aam
mov
testb
jo
sbb
fcmovb
cmp
cmpsb
lcall
jge
mov
repnz
mov
sub
and
out
push
push
loop
mov
and
mov
dec
mov
call
cmp
in
pushf
addl
cmp
lcall
xor
cmpsb
test
add
into
pop
add
ror
mov
and
mov
in
out
outsb
sbbb
int3
bound
repz
xchg
xor
mov
jb
jge
fs
pusha
fsubr
movsb
cmpsb
repnz
adcb
test
adc
out
mov
mov
int
xor
nop
xor
xchg
push
hlt
inc
push
mov
mov
inc
xor
cwtl
fstpt
sahf
jno
fdivl
pop
xchg
cwtl
mov
xor
out
mov
js
cld
test
lret
or
jle
mov
sub
orl
mov
loop
dec
inc
adc
mov
jp
inc
sbb
daa
or
mov
sub
es
jae
jl
push
cmp
fdivrl
push
inc
xor
push
mov
push
push
xchg
or
fdivrl
ds
pop
loopne
cmp
xchg
lock
jne
sbb
sub
pop
in
or
int3
lret
pusha
add
cmp
pop
cs
cmp
stos
mov
adc
loopne
mov
cld
and
je
test
loop
jo
jp
fs
or
dec
inc
xchg
xor
and
add
mov
add
adc
mov
sbb
hlt
mov
add
push
orl
repnz
jb
mov
or
ljmp
lods
nop
mov
imul
xchg
xchg
aad
enter
loop
xor
data16
cmp
loopne
sti
adc
fsubrl
fmul
inc
and
ret
jl
adcl
loopne,pn
cmc
inc
dec
push
dec
out
add
repz
pop
cmpb
mov
call
mov
add
pop
stos
addb
jl
add
mov
in
xchg
adc
jecxz
call
fnsave
fnstsw
mov
fnstenv
mov
mov
and
mov
mov
sti
ljmp
lcall
dec
jmp
or
adc
cmp
fsubrl
sbb
repz
rorb
cmp
xor
ds
subb
cli
xor
jb
xor
dec
cmpb
insb
push
sub
insl
adc
mov
sub
addb
pop
test
push
call
add
ljmp
sbbb
xchg
hlt
sbb
pop
out
mov
inc
int3
mov
xor
mov
pusha
jle
ljmp
push
mov
call
scas
push
sub
xor
aam
xchg
push
xor
mov
xor
pop
js
xor
push
cmp
and
mov
cmp
add
mov
js
out
add
cwtl
sarb
dec
mov
add
push
inc
sti
jp
pop
fists
call
aam
or
lret
je
stos
and
sub
and
mov
mov
sti
push
and
pop
fidivrs
pop
xchg
sub
fidivrl
fsubrs
push
cs
pushf
inc
data16
xor
or
mov
mov
les
xchg
fs
pop
jp
sbb
ds
sbb
cmp
dec
mov
in
pop
sub
pushf
push
inc
leave
add
xchg
sbb
pop
cmp
movsb
push
jecxz
data16
out
cs
ds
jo
cwtl
lock
mov
sbb
lret
cmp
cmc
and
jp
pushf
in
lcall
pop
or
dec
arpl
ljmp
hlt
add
xor
add
add
xorl
stos
mov
adc
lock
test
lret
int3
mov
mov
in
xchg
lods
mov
pusha
out
pop
pop
out
sbb
or
fimull
ficompl
gs
or
mov
sbb
sbb
clc
xor
push
pop
or
insl
movsb
lret
cmp
sbb
and
push
in
mov
pushf
jno
cli
iret
jp
movsb
lcall
dec
nop
in
pushf
ficomps
jl
and
sub
jp
out
or
testl
data16
push
dec
int
mov
mov
sbb
out
adc
mov
std
sub
mov
dec
int3
jbe
cmp
fld
in
and
push
cmp
pushf
mov
sbbb
jb
repnz
mov
js
add
add
fdivr
cmp
shr
ret
add
adc
cmpsb
cmp
add
nop
out
jns
mov
cmp
or
cld
cmp
out
cmp
pop
out
call
fisttpl
test
sahf
dec
shlb
add
inc
sbb
mov
rcrl
cmp
cmp
mov
rclb
ss
pusha
loopne
in
jne
sbb
push
lret
cmp
jb
ficoms
jp
push
mov
insl
xchg
test
subl
push
xor
mov
cs
push
lock
push
outsl
or
add
lock
ss
mov
addr16
ljmp
or
push
rolb
shlb
inc
loope
pop
cld
push
ja
outsl
and
sahf
mov
or
mov
fs
add
mov
push
adc
xor
in
test
inc
jbe
inc
mov
lret
insb
fidivrs
xchg
out
mov
sbb
push
insb
mov
in
sub
push
in
clc
jb
fldt
push
lcall
js
out
push
cld
add
fs
aam
bound
sub
add
cmp
ss
mov
jo
jp
add
lret
or
in
call
fiaddl
into
fldenv
daa
stos
andl
les
mov
or
add
notb
mov
inc
pop
mov
dec
fmuls
bound
xor
test
fmull
mov
cmp
lock
mov
scas
daa
push
cmp
inc
mov
and
out
mov
adc
adc
jl
pop
loop
push
xor
fmull
inc
xchg
aas
sbb
jmp
rorb
fsubrp
mov
in
or
sbb
mov
mov
subb
add
je
stc
mov
and
dec
mov
mov
insb
mov
daa
sub
movsb
orb
push
out
mov
repnz
sub
and
cmp
push
faddl
xor
sarb
int3
aas
mov
sub
clc
xchg
daa
sub
test
inc
mov
dec
xorb
into
out
dec
enter
rcrb
mov
sbb
movsb
fcompl
mov
mov
rol
jle
and
pop
adc
mov
es
and
clc
mov
mov
out
enter
jo
cmp
push
pop
jo
je
mov
call
mov
call
in
mov
in
and
dec
push
mov
mov
ljmp
and
sbbl
pop
push
pop
in
dec
inc
mov
mov
pop
dec
rorl
jmp
jp
into
mov
push
lock
lcall
int3
subb
xchg
ljmp
mov
mov
push
cmp
lret
inc
or
ljmp
ja
cmp
ss
je
or
aaa
xor
pusha
push
ss
insb
mov
cmp
push
data16
or
push
xor
dec
sbbb
or
fsubs
data16
dec
subb
jp
cmp
cmp
aam
je
out
sub
mov
mov
in
jb
repnz
push
add
xor
jnp,pt
mov
hlt
fsubs
test
xchg
iret
sbb
rolb
jo
bound
je
mov
sub
mov
cmpsb
pop
pop
out
adc
xchg
sahf
or
outsl
lret
nop
insb
inc
jb
inc
push
inc
cmpsl
sbb
mov
repnz
test
sbb
cmp
add
jns
mov
int3
push
shlb
mov
out
push
adc
dec
dec
inc
inc
cli
cld
and
mov
aam
insb
andb
int3
sub
call
out
push
add
nop
outsl
sarb
xor
insb
mov
cwtl
movsb
test
clc
adc
movsb
sub
ljmp
pop
dec
push
lock
subps
arpl
and
test
imul
pop
in
cld
hlt
xor
out
lret
add
enter
leave
xchg
cmp
insb
inc
or
xchg
cld
ljmp
aam
push
cli
repz
push
mov
subb
cld
lods
cwtl
sti
stos
pushf
fimuls
inc
sbb
pusha
jb
sahf
fdivrl
sarb
or
lock
sahf
orb
outsb
cmp
int3
out
cmc
cld
pop
cmp
adc
sub
mov
fcoms
jns
insb
fs
lahf
bnd
ficoms
push
xor
sub
mov
dec
inc
mov
push
jbe
repz
add
push
push
addr16
xlat
mov
cmp
mov
out
xor
and
scas
adc
mov
mov
out
xchg
loopne
adcl
add
fs
xchg
or
cmp
inc
nop
xor
jb
repnz
icebp
fmull
imul
xorb
les
clc
inc
aam
sarb
aam
sub
aad
pop
push
rorb
mov
bound
lock
push
jno
push
pop
push
push
lcall
dec
and
xchg
sbb
daa
inc
orl
shlb
cmp
adc
mov
xchg
aaa
push
shr
es
xor
scas
loope
jp
dec
dec
jo
jbe
mov
mov
xchg
mov
sub
and
adc
rclb
cmp
hlt
xor
mov
mov
or
sub
movsl
movsb
mov
mov
ret
push
loop
inc
cmp
ficoms
add
pushf
pop
sub
div
sub
pushaw
pop
clc
enter
out
fimuls
and
aas
mov
mov
sub
push
out
mov
call
xor
enter
cld
sub
inc
inc
cmpsb
xchg
push
je
out
repnz
fcompl
movl
push
movsb
dec
sbbl
mov
adc
bound
adc
movsb
or
mov
xor
xchg
fs
pushf
inc
push
mov
jle
pop
in
in
fs
xchg
cmp
enter
sub
pop
jmp
call
imul
inc
sbb
clc
add
mov
sub
push
repnz
dec
and
je
cmp
rclb
stos
push
call
leave
cltd
cmp
loop
loopne
mov
mov
add
mov
sbb
dec
call
xor
mov
out
cmp
sub
jb
lds
adc
int3
xlat
xchg
les
daa
testb
or
xchg
repnz
push
and
xor
cmp
inc
inc
sbb
push
lcall
in
and
enter
int3
cmp
fimuls
loopne
sbb
or
cmp
mov
dec
add
fwait
push
jo
jp
jbe
rolb
pop
mov
out
stos
bound
inc
pop
adcb
mov
mov
out
hlt
jo
hlt
adc
notb
addb
sub
mov
idivl
ss
mov
push
adc
repz
pop
xor
xchg
mov
adc
xchg
adc
or
or
sub
clc
movsb
pop
and
mov
faddl
jns
xchg
jo
loopne
push
add
xor
outsl
sub
and
and
test
jl
and
loopne
pop
insl
mov
ds
out
shlb
outsb
sub
jle
pop
xchg
mov
push
call
shlb
mov
inc
loope
je
push
push
jne
or
loopne
and
mov
adc
and
or
push
ljmp
cmp
lret
movsb
cwtl
mov
cmp
ret
mov
pushf
mov
pop
mov
adc
sbb
cmp
lcall
movsb
pop
mov
fimull
jbe
je
mov
sub
cmpsl
repnz
insb
jle
mov
mov
sbb
mov
or
and
mov
into
mov
dec
hlt
addl
xorl
xchg
mov
mov
cld
inc
movb
and
mov
adc
pop
mov
mov
xor
fimuls
lcall
cmp
jl
out
fadds
xchg
ds
push
pop
push
shrl
add
dec
loopne
ljmp
push
mov
clc
ss
pop
sbb
mov
and
ss
sub
ficoml
xchg
pop
adc
pop
out
mov
pop
sbb
mov
mov
mov
pop
call
push
add
pop
and
ljmp
test
nop
in
out
out
push
xchg
dec
lcall
lods
pop
repnz
enter
aad
xor
xlat
mov
dec
mov
mov
cmpsb
xlat
addb
push
xor
rorl
cmp
lock
mov
xor
lret
aam
or
call
jle
pop
lods
mov
fs
pop
push
icebp
or
out
aaa
cmp
mov
es
xchg
xor
or
into
push
xchg
push
jbe
cmp
pop
fimull
orb
pop
push
jl
adc
add
into
fcomps
jl
mov
lcall
cld
pop
cld
mov
daa
mov
std
pop
fldt
pop
fstpt
insb
pusha
lahf
mov
sub
divb
mov
out
mov
lcall
out
sub
insb
rclb
insb
dec
push
subl
adc
pop
insl
cmp
dec
or
pop
jnp
into
fsubl
movsb
dec
int3
andl
push
fs
movsb
add
jp
jmp
push
addr16
xlat
and
in
ds
push
mov
cld
pushf
add
insb
js
inc
pushf
test
cmp
fsubrl
movsb
rolb
fbld
mov
push
insb
cmp
in
std
mov
jg
push
inc
xchg
into
nop
enter
mov
ljmp
repnz
in
rcrb
inc
cmp
in
outsl
and
jnp
shlb
push
test
outsl
or
inc
xor
dec
cli
repz
mov
mov
mov
inc
test
inc
ret
int3
nop
pushf
add
push
bound
mov
loopne
inc
mov
push
or
in
js
inc
into
popf
scas
sub
sbb
movsl
xchg
push
clc
jo
in
pop
mov
fmull
enter
pushf
jns
orb
bound
out
int3
mov
out
sub
notb
mov
mov
js
dec
insb
mov
mov
add
xchg
mov
cmp
cmp
push
fdivr
orb
lods
data16
pop
adc
lods
adc
shl
cli
adc
es
mov
mov
sub
dec
cmp
sub
push
jecxz
mov
xlat
mov
push
adc
cmp
dec
mov
jb
mov
sub
jbe
pusha
pop
xor
lea
adc
cli
dec
add
push
insl
fsubs
or
test
adc
mov
jno
inc
jb
incb
mov
sbb
xchg
inc
scas
in
xchg
sbb
inc
lods
push
and
fdivr
cmp
addr16
lds
imul
inc
dec
xchg
push
int3
push
add
add
sub
add
add
add
add
add
sub
add
addb
orb
add
test
add
add
or
xor
add
rolb
xorb
add
fadds
add
lock
xorb
add
and
add
cmp
add
push
add
cmpb
add
push
add
add
add
add
fwait
pop
xor
add
add
add
add
add
sbbb
add
out
add
or
add
add
add
cld
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
mov
add
add
add
sub
add
add
add
add
add
cwtl
add
add
add
add
fwait
pop
xor
add
add
add
add
add
add
add
add
add
add
push
xor
push
add
add
add
add
xor
call
add
add
add
add
xor
sub
add
mov
add
add
add
add
add
insb
xor
test
add
fdivs
push
add
add
add
add
xor
test
add
call
adc
add
add
add
hlt
add
adc
add
or
add
insb
add
add
add
push
xor
clc
mov
add
add
add
add
push
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
push
add
inc
add
push
add
push
add
add
inc
add
dec
add
inc
add
dec
add
add
add
add
add
add
add
add
add
add
addb
add
add
addb
rol
add
add
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
adc
adc
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
inc
int3
int3
int3
int3
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
les
adc
int3
add
adc
adc
adc
adc
adc
adc
adc
adc
inc
adc
adc
int3
add
add
add
adc
adc
adc
adc
adc
dec
les
adc
adc
adc
inc
inc
inc
dec
inc
inc
adc
adc
adc
adc
insb
les
adc
adc
add
inc
dec
dec
dec
int3
int3
int3
inc
inc
adc
adc
adc
int3
les
adc
adc
inc
int3
int3
int3
int3
int3
int3
les
adc
adc
adc
les
adc
add
inc
dec
dec
int3
int3
int3
int3
int3
int3
int3
int3
inc
adc
adc
xor
les
adc
inc
inc
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
inc
adc
adc
int3
int3
inc
adc
int3
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
les
adc
xor
int3
inc
add
inc
dec
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
inc
adc
xor
int3
inc
inc
inc
inc
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
les
adc
insb
int3
inc
inc
inc
dec
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
les
adc
cmp
les
int3
int3
int3
int3
les
int3
int3
int3
int3
int3
int3
int3
inc
adc
cmp
int3
inc
inc
dec
dec
int3
int3
les
adc
or
int3
int3
int3
int3
int3
inc
adc
ss
int3
inc
inc
int3
int3
int3
inc
adc
adc
adc
int3
int3
int3
int3
int3
les
xor
int3
int3
les
int3
int3
inc
adc
adc
adc
int3
int3
int3
int3
les
xor
insb
int3
les
int3
les
adc
adc
adc
inc
inc
inc
inc
inc
inc
adc
jae
int3
int3
inc
int3
int3
int3
les
adc
adc
adc
adc
adc
adc
adc
aaa
ss
int3
inc
int3
int3
int3
les
adc
adc
adc
adc
adc
adc
adc
jae
int3
int3
int3
int3
int3
rolb
add
add
adc
aaa
cmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
inc
adc
jae
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
inc
adc
cmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
inc
adc
jae
cmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
inc
adc
jnp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
inc
adc
mov
int3
int3
int3
int3
les
inc
inc
inc
dec
int3
int3
int3
int3
int3
int3
inc
adc
cmp
int3
int3
int3
les
adc
adc
adc
int3
int3
int3
les
adc
aaa
mov
int3
int3
int3
les
adc
adc
adc
int3
int3
int3
les
adc
inc
inc
jnp
mov
int3
les
adc
adc
adc
int3
int3
int3
les
adc
inc
inc
aaa
mov
inc
adc
adc
add
int3
int3
int3
les
adc
inc
inc
inc
jnp
mov
int3
les
adc
adc
int3
int3
int3
int3
inc
adc
adc
inc
addr16
inc
adc
add
int3
int3
int3
int3
int3
int3
inc
adc
adc
inc
jnp
mov
int3
int3
inc
inc
dec
int3
int3
int3
int3
int3
int3
int3
inc
adc
adc
inc
inc
dec
addr16
int3
int3
int3
int3
int3
int3
int3
int3
int3
les
adc
adc
adc
dec
int3
addr16
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
les
adc
adc
adc
jnp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
inc
adc
adc
adc
adc
int3
int3
mov
int3
int3
int3
int3
int3
int3
les
adc
adc
adc
inc
dec
int3
int3
mov
int3
int3
int3
int3
int3
int3
int3
int3
inc
adc
dec
adc
adc
adc
int3
int3
int3
jbe
int3
int3
int3
int3
int3
int3
inc
adc
adc
adc
adc
inc
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
les
adc
adc
adc
adc
adc
int3
int3
int3
int3
int3
int3
int3
les
adc
adc
adc
adc
adc
sbb
int3
int3
int3
int3
int3
int3
inc
inc
adc
adc
adc
adc
adc
adc
adc
int3
int3
int3
int3
int3
int3
inc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
sbb
inc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
inc
adc
adc
dec
adc
adc
adc
adc
adc
adc
adc
adc
adc
inc
inc
inc
dec
rcll
adc
adc
adc
adc
adc
adc
adc
adc
adc
int3
int3
rcll
cld
add
incl
add
add
incl
add
cld
aas
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
rolb
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
incb
add
add
add
incl
add
add
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
cld
add
add
lock
clc
add
add
clc
add
loopne
pop
add
clc
add
add
pop
add
cld
add
add
sldt
incb
add
add
add
incl
add
add
add
incl
add
inc
add
add
jmp
add
add
add
push
add
add
add
cld
add
pop
cld
add
incl
add
push
add
add
clc
aas
stc
add
decb
repz
incl
push
pop
add
sub
add
and
add
inc
add
add
add
add
addb
add
add
addb
rol
add
add
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
adc
add
add
adc
adc
adc
adc
adc
adc
int3
inc
adc
adc
adc
adc
adc
adc
inc
adc
int3
add
add
adc
adc
adc
adc
adc
adc
inc
inc
inc
les
adc
adc
les
adc
add
dec
dec
dec
int3
les
adc
xor
adc
add
dec
dec
int3
int3
int3
int3
les
adc
int3
inc
add
dec
dec
int3
int3
int3
int3
int3
int3
les
adc
int3
inc
inc
inc
int3
int3
int3
int3
int3
int3
int3
int3
inc
adc
int3
les
int3
les
int3
int3
int3
les
aaa
cmp
inc
dec
int3
int3
inc
adc
add
int3
int3
les
xor
inc
int3
les
adc
adc
int3
inc
aaa
cmp
inc
int3
int3
inc
adc
adc
add
inc
inc
inc
xor
les
adc
adc
adc
adc
adc
jae
int3
int3
add
adc
int3
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
inc
adc
mov
int3
int3
int3
int3
int3
int3
int3
int3
inc
adc
aaa
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
inc
adc
mov
int3
inc
inc
inc
inc
inc
dec
int3
int3
int3
inc
adc
int3
int3
inc
adc
adc
dec
int3
int3
int3
inc
adc
sti
int3
int3
inc
adc
adc
dec
int3
int3
les
adc
cmp
add
int3
int3
les
adc
inc
ret
sti
int3
int3
inc
adc
inc
int3
int3
int3
les
adc
inc
int3
cmp
int3
int3
int3
les
adc
adc
ret
jnp
int3
int3
int3
int3
int3
int3
int3
inc
adc
adc
dec
int3
ret
mov
int3
int3
int3
inc
adc
adc
adc
int3
lret
cmp
int3
int3
int3
int3
les
sbb
adc
adc
int3
int3
int3
int3
int3
int3
int3
les
sbb
adc
adc
int3
int3
int3
int3
int3
int3
les
adc
adc
adc
adc
int3
int3
int3
inc
adc
adc
adc
adc
adc
adc
sbb
rcll
adc
adc
adc
adc
adc
adc
adc
rcll
rcll
adc
adc
adc
adc
adc
int3
int3
int3
adc
aas
inc
ud0
xchg
ud0
addb
push
add
pop
add
add
add
add
add
add
add
lock
add
add
pop
cld
add
pop
incl
add
add
add
add
add
add
add
add
pop
clc
add
pop
clc
add
add
add
add
add
add
add
add
pop
cld
add
pop
incb
add
incl
add
inc
add
clc
add
jmp
cld
cld
jns
incl
sub
add
adc
add
and
add
add
add
add
addb
add
add
addb
rol
add
add
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
adc
rcll
adc
adc
sbb
add
adc
cmp
add
inc
adc
inc
int3
int3
int3
int3
inc
cmp
dec
int3
mov
les
int3
rcll
int3
les
int3
rcll
adc
cmp
les
inc
adc
les
int3
rcll
int3
les
inc
mov
inc
adc
inc
int3
int3
inc
adc
mov
adc
dec
int3
int3
int3
inc
sbb
adc
int3
int3
int3
adc
adc
adc
sbb
rol
les
int3
les
add
int3
and
les
add
les
int3
inc
add
add
add
les
addb
inc
and
adc
int3
inc
loopne
int3
inc
lock
inc
adc
push
adc
loope
inc
sub
add
xor
add
pusha
add
add
add
add
mov
add
mov
std
stos
add
divb
add
rep
add
repz
add
in
stos
add
cmc
xchg
add
in
mov
add
ljmp
sti
jecxz
add
out
add
in
add
rep
add
xlat
movsl
add
ficompl
add
loopne
add
in
gs
fldl
add
fidivrl
icebp
loop
add
aam
add
loop
add
int
add
fdivrs
sti
xlat
jne
cli
jecxz
add
into
mov
sti
sarb
ljmp
add
loopne
add
fcompl
fldenv
sti
fsts
aad
add
les
test
data16
push
add
into
data16
leave
imul
in
ret
jns
stc
rclb
lock
loope
test
out
jp
not
push
add
aam
add
leave
popa
add
into
push
add
int3
pop
add
lret
pop
add
mov
data16
lret
dec
add
into
inc
add
mov
pop
add
les
out
arpl
out
push
add
leave
inc
add
mov
add
enter
ret
dec
add
mov
push
add
movb
rorb
mov
push
add
ret
aam
bound
in
mov
add
mov
inc
add
mov
add
mov
add
sarb
into
lods
insl
add
mov
inc
add
mov
add
mov
cmp
repz
add
lods
pop
add
mov
add
mov
add
mov
add
mov
add
mov
add
lods
dec
add
mov
add
lods
dec
add
mov
add
scas
inc
add
mov
xor
add
mov
cmp
fildll
imul
stos
inc
add
mov
add
stos
ds
lods
cmp
in
scas
cmp
rep
cmp
add
stos
cmp
icebp
scas
xor
lock
ss
test
add
mov
add
test
dec
add
lods
sub
icebp
cmpsb
aaa
add
mov
daa
add
test
add
stos
sub
repz
add
add
add
mov
xor
add
test
add
lahf
aas
add
sahf
cmp
xchg
pop
add
sahf
xor
add
lahf
aaa
add
mov
xor
int
inc
add
lahf
cs
cltd
aaa
add
mov
es
mov
ss
lahf
sub
fcomps
xor
ret
add
fwait
sub
add
xchg
ss
fwait
sub
jmp
xchg
xor
out
sub
add
xchg
xor
fistps
sub
ret
add
xchg
cs
xchg
xor
out
sub
mov
push
add
xchg
sub
rorb
call
xchg
es
xchg
sub
add
xchg
daa
add
xchg
sub
fcoml
and
add
mov
add
mov
add
sub
fimull
daa
add
lea
add
es
cmpl
flds
sub
add
test
add
jne
add
test
add
jnp
add
andl
add
jle
add
jge
add
pop
add
sub
cmpsb
je
add
jbe
add
add
add
jl
add
js
add
cmp
mov
sub
add
jbe
add
outsb
sub
andb
jno
add
imul
add
push
add
and
andb
js
dec
add
arpl
add
cmp
jg
sub
outsl
push
xor
jge
daa
add
aaa
add
sub
pop
inc
xor
addr16
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cli
cli
cli
cli
cli
cli
mov
mov
mov
mov
mov
mov
mov
ret
ret
into
aad
cli
cli
mov
mov
mov
mov
mov
mov
pushf
pushf
movsb
les
lret
cli
cli
mov
mov
mov
mov
mov
mov
iret
mov
mov
cli
mov
mov
mov
mov
mov
popl
mov
mov
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
mov
mov
mov
mov
mov
mov
loop
in
jecxz
fstp
fsubr
icebp
cli
cli
cli
cli
mov
mov
mov
sbb
mov
mov
cli
rcl
mov
dec
inc
cmp
and
and
outsb
repz
cli
mov
mov
mov
testl
sahf
xchg
addb
dec
inc
sub
push
cmp
mov
mov
mov
mov
cmpb
mov
pop
push
inc
sub
or
shl
mov
mov
pushf
sbbl
mov
jl
xchg
lcall
pop
dec
cmp
or
add
mov
cli
mov
mov
cmpl
mov
mov
jb
xchg
mov
mov
mov
pop
inc
sub
add
repz
mov
mov
fs
cli
ret
jl
mov
mov
mov
mov
test
xchg
mov
dec
cmp
adc
add
inc
repz
mov
mov
jnp
stc
test
orl
mov
mov
mov
inc
and
push
add
mov
mov
js
orl
mov
loope
lret
mov
pop
inc
and
push
add
enter
mov
mov
js
mov
mov
in
cli
cli
cli
cli
cli
mov
push
and
push
add
repz
mov
mov
outsl
jnp
xchg
cltd
mov
mov
mov
cli
lret
mov
mov
pop
or
push
pop
cli
mov
mov
arpl
xchg
cltd
mov
mov
mov
mov
ret
mov
mov
sbb
adc
cli
mov
mov
jp
cltd
fwait
cmpsb
lods
mov
cld
mov
mov
xlat
lret
shll
imul
mov
mov
test
mov
mov
mov
out
out
aad
scas
outsb
inc
sbb
mov
mov
pop
arpl
fwait
movsb
mov
mov
sar
mov
mov
mov
mov
mov
mov
pop
arpl
lea
loopne
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
mov
mov
pop
imul
mov
repnz
in
in
out
out
out
out
out
out
out
out
out
out
out
jmp
ret
rorl
mov
gs
pop
addr16
xchg
popf
movsb
movsb
stos
mov
mov
test
test
stos
stos
test
lcall
rorl
mov
pusha
push
dec
pop
addr16
lea
cmpsb
mov
mov
test
test
lcall
rorl
mov
mov
pop
addr16
lea
cmpsb
cmpsb
test
mov
scas
scas
scas
test
sahf
lcall
mov
mov
mov
inc
pop
addr16
lea
mov
leave
leave
leave
leave
les
stos
test
xchg
mov
push
rorl
mov
mov
pop
addr16
lods
shl
out
jmp
jmp
jmp
jmp
les
cmpsl
mov
jg
mov
mov
mov
push
addr16
cli
mov
mov
mov
mov
scas
cmpsl
mov
mov
mov
adc
dec
xor
inc
push
addr16
mov
mov
lods
mov
mov
mov
rorl
mov
pop
adc
inc
xor
inc
push
lahf
cli
cli
mov
mov
lods
lods
mov
cmpsl
mov
rorl
mov
or
adc
inc
xor
inc
pop
cli
mov
cli
mov
cmpsb
lods
lods
lods
lods
test
jb
rorl
mov
push
add
adc
cmp
sub
repnz
cli
cli
cli
cli
cli
cli
fcmovbe
stos
stos
cmpsb
lods
lods
lods
mov
jns
mov
mov
cmp
add
adc
mov
inc
gs
cli
clc
cmc
in
lahf
movsb
stos
stos
cmpsb
cmpsb
cmpsb
mov
rorl
mov
mov
push
add
add
sbb
sub
push
insb
lahf
mov
xchg
popf
popf
movsb
stos
movsb
fwait
cltd
mov
ja
mov
mov
mov
add
sbb
mov
inc
pop
pop
jae
orb
movsb
cltd
xchg
jne
rorl
mov
mov
add
add
and
sub
pop
jae
orb
xchg
jne
rorl
mov
mov
cmp
add
add
adc
mov
sbb
sub
pop
jae
addb
outsl
jbe
rorl
rorl
mov
mov
add
add
push
and
jae
jae
imul
mov
rorl
mov
mov
add
add
push
and
pop
pop
pop
push
popa
jbe
rorl
mov
mov
mov
cmp
or
add
add
and
dec
dec
pop
jle
rorl
mov
mov
mov
mov
or
pop
pop
or
or
cmp
xor
rcl
mov
mov
mov
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
xor
mov
mov
mov
mov
mov
mov
mov
xor
nop
cli
mov
mov
mov
mov
mov
mov
mov
mov
cli
cli
mov
cli
pop
imul
mov
mov
mov
mov
mov
sub
cli
cli
cli
cli
pop
pop
imul
mov
mov
mov
mov
mov
mov
cmp
inc
dec
dec
pop
push
push
push
mov
mov
mov
mov
mov
mov
mov
cmp
dec
mov
mov
incl
add
ud0
incl
add
add
incl
add
lock
incl
add
cld
pop
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
jg
add
add
add
jg
add
add
add
aas
add
loopne
pop
loopne
aas
add
loopne
pop
lock
add
loopne
pop
clc
add
add
lock
clc
add
add
lock
incl
add
add
add
pop
add
clc
add
add
pop
add
cld
add
add
pop
add
cld
add
add
pop
add
incb
add
add
add
out
add
add
pop
add
out
add
add
add
jecxz
aas
lock
add
loope
aas
lock
add
lock
loopne
aas
add
lock
rolb
add
lock
add
jg
add
sbb
add
jg
add
push
add
add
add
cld
add
add
incl
add
add
add
add
add
out
add
incl
add
inc
add
movntq
add
loopne
add
out
add
clc
add
aas
out
add
incl
add
out
add
jmp
jg
add
clc
pop
popl
add
incb
sldt
incl
push
jg
add
add
add
add
add
add
add
or
pushl
add
scas
add
std
movsl
add
cli
mov
add
rep
add
lock
add
out
lahf
add
repnz
add
lock
add
in
add
call
xchg
divl
out
add
in
ja
cld
repnz
std
jmp
add
fisttpl
add
into
stos
add
xchg
add
fstpt
neg
addb
call
js
sti
rolb
add
int3
test
loop
popl
sti
ficomps
clc
loopne
add
shll
sti
shlb
out
into
js
repnz
gs
shrl
out
int
add
enter
aad
add
ret
addb
xlat
push
add
xlat
dec
add
aad
add
lret
cli
leave
bound
lock
rorb
rorl
not
dec
add
mov
add
ret
mov
push
add
mov
add
mov
add
mov
push
add
dec
add
shlb
mov
add
enter
mov
push
add
mov
add
mov
add
les
stos
test
out
push
add
add
add
ret
out
pop
add
les
add
mov
add
mov
add
sarl
test
add
ret
clc
mov
jne
repz
add
mov
add
mov
inc
add
mov
add
mov
add
mov
cmp
idivb
dec
add
mov
add
mov
add
mov
add
mov
add
scas
inc
add
mov
add
stos
dec
add
mov
add
mov
add
movsl
pusha
add
mov
inc
add
mov
add
mov
add
mov
add
lods
cmp
add
cmpsl
inc
add
cmpsl
dec
add
mov
add
stos
cmp
mov
jno
out
mov
add
cltd
imul
in
movsb
inc
add
test
add
mov
ss
lods
das
add
mov
xor
loope
xor
add
mov
pop
add
movsb
cmp
icebp
movsl
aaa
add
lods
daa
add
lods
es
mov
jae
hlt
mov
sub
repnz
pusha
add
cmpsb
xor
fildll
and
jmp
sub
out
movsb
xor
loope
das
add
mov
cmp
xchg
pop
add
mov
sub
repnz
cmp
call
mov
xor
jmp
xor
lret
add
lahf
aaa
add
mov
xor
fistps
and
jmp
cmp
fcompl
das
add
cltd
xor
add
lcall
loopne
aas
add
popf
sub
out
sub
call
sahf
sub
in
xchg
xor
out
sub
jmp
xor
loop
xor
add
cwtl
sub
add
xchg
das
add
cwtl
sub
call
xchg
inc
add
xchg
xor
call
nop
ss
xchg
sub
add
xchg
sub
call
xchg
daa
add
xchg
daa
add
xchg
es
lea
add
mov
add
xchg
es
xchg
and
fcoml
and
mov
mov
add
mov
add
xchg
add
mov
add
cmp
mov
add
xchg
add
mov
add
xorb
les
inc
add
xchg
add
jnp
add
jge
add
jg
add
add
add
je
add
jb
add
imul
add
addr16
add
sbb
mov
add
pop
xor
push
inc
add
add
cmp
js
das
add
xor
imul
add
add
xor
jne
and
pusha
dec
xor
popa
inc
sub
pop
inc
xor
dec
dec
dec
dec
div
div
testl
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
lret
lret
int
mov
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
movsb
rcr
dec
dec
dec
dec
push
js
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
shl
dec
dec
dec
dec
dec
dec
imul
repnz
repnz
hlt
cmc
repz
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xchg
out
dec
dec
dec
dec
div
out
lods
mov
dec
test
stc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xchg
in
dec
dec
div
loopne
movsl
mov
fs
inc
xor
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
testl
mov
outsl
pop
cmp
adc
dec
dec
dec
dec
dec
dec
dec
xchg
jne
xchg
test
mov
mov
mov
sbb
or
clc
dec
dec
dec
dec
dec
dec
dec
gs
popf
jne
pushf
stos
mov
mov
bound
sbb
or
dec
dec
dec
dec
dec
dec
jb
test
cmpsl
mov
loope
loope
ret
outsl
inc
sbb
or
repz
dec
dec
dec
dec
dec
gs
outsb
jge
cmpsl
scas
rol
loope
dec
dec
dec
in
fld
stos
xchg
outsl
inc
sbb
push
testl
popa
push
insb
sbbb
testl
sarb
or
dec
dec
dec
dec
push
pop
andb
dec
dec
dec
dec
dec
dec
dec
in
in
out
in
jmp
testl
pusha
push
jae
scas
rol
testl
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
inc
push
pop
jle
scas
rol
div
div
div
div
div
div
div
div
testl
dec
push
dec
mov
aam
aam
aad
aad
mov
dec
dec
dec
dec
dec
dec
dec
dec
cmp
stos
scas
mov
mov
scas
scas
mov
mov
mov
fimuls
dec
dec
dec
aaa
dec
dec
xor
jle
stos
enter
lret
mov
lcall
dec
dec
inc
sub
cmp
inc
addr16
jmp
jmp
jmp
jmp
mov
mov
mov
dec
dec
dec
dec
dec
and
dec
dec
dec
xor
jo
dec
dec
dec
dec
dec
dec
dec
fidivrs
xchg
imul
dec
dec
dec
dec
dec
pop
adc
sub
in
dec
dec
dec
dec
dec
faddp
mov
mov
fimuls
dec
dec
dec
dec
dec
sbb
dec
dec
xor
sub
dec
dec
mov
mov
xchg
fimuls
dec
dec
dec
dec
dec
pop
add
xor
xor
leave
stos
scas
mov
lods
sahf
jge
fisttps
dec
dec
dec
dec
dec
dec
dec
and
add
dec
dec
es
xchg
mov
fwait
xchg
fwait
stos
scas
mov
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
and
add
adc
xor
insl
ja
xchg
xchg
xchg
subb
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
and
add
adc
dec
push
pop
mov
jl
dec
dec
dec
dec
dec
dec
dec
dec
dec
and
add
or
movlps
sub
pusha
lahf
fimuls
dec
dec
jl
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
and
and
push
adc
xor
cmp
dec
dec
dec
dec
jl
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
and
and
and
dec
das
mov
dec
dec
dec
dec
dec
dec
jl
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
aas
cmp
dec
dec
dec
fidivrs
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
push
fidivrs
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
aas
aas
cmp
dec
dec
dec
dec
lock
jmp
pop
inc
dec
rorb
popl
add
mov
add
mov
add
add
aas
addb
pop
addb
xadd
orb
pop
rolb
pavgb
loopne
jmp
add
pop
lock
pop
clc
add
pop
fadds
add
int3
add
pop
into
pavgb
movb
pavgw
orb
addb
lock
clc
and
aas
cld
add
ja
add
repz
add
jmp
jecxz
clc
pop
decl
sub
add
adc
add
and
add
add
or
mov
mov
imul
mov
and
add
popf
es
lahf
es
xchg
daa
add
pushf
daa
add
sub
mov
mov
add
xchg
sub
in
sub
mov
sub
out
sub
loopne
sub
in
sub
call
lods
sub
test
add
jg
add
xchg
sub
out
sub
out
sub
add
cltd
sub
add
stos
sub
add
xchg
cs
mov
das
add
nop
das
add
lods
das
add
xchg
xor
jmp
xor
icebp
mov
add
jle
add
lods
xor
outsl
push
xor
int3
mov
out
fwait
xor
hlt
mov
add
mov
add
xchg
ss
cwtl
ss
lcall
repnz
add
aaa
add
fwait
cmp
icebp
movsb
cmp
lock
loopne
cmp
loope
cmp
ficoms
add
cmpsl
cmp
divb
add
jns
add
mov
inc
add
movb
lds
iret
xchg
inc
add
test
add
scas
inc
add
roll
clc
iret
dec
add
mov
add
mov
add
mov
push
add
mov
add
cwtl
push
add
scas
popa
add
mov
add
mov
add
aam
add
aam
add
shrb
cli
aam
add
mov
add
lret
in
mov
sarb
add
into
xchg
add
xlat
xchg
add
sub
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
dec
xor
dec
aas
sub
sub
sub
pop
pop
pop
inc
inc
pop
pop
sub
cmp
push
inc
sub
pop
pop
pop
dec
inc
pop
sub
xor
das
cmp
push
pop
aas
sub
push
sbb
xor
and
xor
inc
push
pop
aas
pop
pop
pop
cmp
adc
pop
pop
push
cmp
aas
pop
pop
push
sub
add
sub
sub
sub
sub
sub
pop
ds
adc
adc
pop
pop
pop
pop
inc
sbb
push
sbb
ss
aas
pop
pop
pop
pop
inc
inc
or
pop
pop
push
sub
sub
aas
pop
pop
pop
pop
pop
inc
cmp
and
push
movhps
pop
pop
pop
pop
pop
cmp
add
pop
pop
pop
pop
pop
pop
pop
push
push
dec
and
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
aas
aas
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
jmp
xor
jne
xor
mov
mov
add
std
dec
rolb
dec
loopne
pop
test
rolb
mov
loope
add
inc
sbb
popf
int3
repz
dec
dec
sub
add
xor
add
pusha
add
add
add
add
sbb
pop
xor
pop
das
adc
push
sub
inc
dec
sub
push
inc
xorps
orps
push
push
adc
das
adc
xor
sub
pusha
xor
adc
and
push
push
add
add
add
jno
sbb
pop
xor
push
push
sub
adc
das
adc
push
sub
adc
daa
adc
sub
test
adc
xor
push
pop
xor
pop
and
movups
and
push
push
add
add
add
pop
das
adc
push
xor
inc
xchg
pop
and
mov
cli
fmull
sub
lret
subb
mov
daa
jmp
pop
and
ja
sbb
push
xor
mov
adc
pop
xor
adc
daa
imul
pop
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
mov
mov
daa
ljmp
inc
jg
repnz
subb
int3
xchg
dec
xchg
inc
jg
clc
cltd
pop
and
pop
xor
adc
pusha
aaa
adc
inc
pusha
cmp
and
jo
adc
pop
cmp
adc
movups
movups
adc
inc
adc
jbe
adc
orb
insl
dec
and
addb
addb
add
add
add
test
stc
test
and
popf
arpl
sarl
sbb
outsl
es
mov
jno
sub
jnp
xchg
sarl
mov
pop
and
imul
adc
pop
xor
insb
pop
xor
dec
pop
xor
adc
adc
aaa
adc
cmp
inc
pop
cmp
inc
pop
aas
push
cmp
push
das
pop
inc
push
and
adc
adc
and
push
push
add
incl
add
rorb
sub
cli
stos
daa
jmp
cwtl
and
in
sub
ja
xor
sbb
jbe
sbb
lcall
ror
xchg
repnz
fists
adc
push
das
adc
dec
sub
sahf
dec
sub
fwait
dec
sub
adc
push
das
adc
xor
mov
adc
xor
addr16
aaa
push
push
pop
cmp
cmp
popa
dec
sbb
addb
incl
add
rorl
daa
cld
sti
lods
daa
inc
test
clc
push
xor
dec
sub
dec
pusha
xor
or
push
xor
cmp
sub
pop
dec
sub
mov
cmpl
cli
pop
and
xchg
pusha
lock
jb
repz
jo
repnz
push
out
mov
ljmp
sbb
inc
sub
dec
xor
push
cmp
dec
pop
inc
push
sub
pop
push
pusha
inc
and
addb
add
mov
daa
mov
and
mov
pusha
xor
adc
dec
sub
xchg
outsl
sub
roll
inc
cmc
stos
dec
push
lods
dec
clc
mov
cli
mov
pop
sti
enter
into
imul
shll
sarl
sti
sarb
in
ret
jns
enter
sahf
ja
repz
cmp
fiaddl
adc
push
aaa
pop
outsl
push
sbb
inc
push
and
adc
addb
add
add
aad
sub
mov
es
andl
lds
adc
add
add
adc
push
das
adc
ss
orb
xor
jmp
sahf
cmp
push
mov
inc
push
test
inc
push
mov
clc
mov
push
cli
les
sti
int3
addr16
cld
jb
std
loopne
std
out
std
out
cld
loope
fistpll
dec
mull
pop
loopne
sub
mov
push
aaa
push
pop
push
inc
sbb
pop
push
sbb
push
push
sub
add
add
aad
daa
dec
out
mov
daa
dec
mov
cli
dec
sub
xlat
dec
sub
mov
adc
add
add
pop
xor
push
jge
sbb
cmc
out
sahf
cmp
cmc
mov
ds
mov
cmp
repz
cmp
repz
cmp
repnz
cmp
repnz
cmp
rep
cmp
hlt
test
push
scas
inc
push
mov
push
mov
pop
cli
int3
data16
sti
jbe
std
in
out
lahf
imulb
jmp
jmp
sub
roll
adc
aas
sbb
push
push
sub
add
add
rorl
es
cli
scas
sub
loope
sub
pusha
cmp
call
push
adc
adc
push
adc
addr16
in
cmp
repz
cmp
push
movsb
cmp
repnz
cmp
icebp
pushf
cmp
lock
out
xchg
ss
out
xchg
ss
out
lcall
icebp
mov
cmp
rep
ds
mov
push
mov
pop
cli
shrb
cld
fiadds
clc
scas
clc
mov
cld
call
pop
sti
pop
inc
push
loope
sub
mov
xor
sbb
popa
dec
sbb
add
add
lret
mov
cli
stc
scas
sub
out
lods
xor
jp
sbb
inc
and
rorb
adcl
xlat
out
mov
aas
push
test
push
movsb
cmp
icebp
mov
aaa
in
lcall
in
xchg
xor
in
xchg
xor
in
xchg
xor
in
xchg
xor
in
xchg
xor
in
xchg
xor
in
cwtl
xor
out
pushf
xor
lock
aaa
push
lods
cmp
divb
push
stc
int
sti
fnstcw
std
in
imull
std
icebp
mov
loope
test
bound
out
sub
mov
xor
jno
cmp
xor
inc
and
push
push
add
movb
out
lods
sub
mov
es
inc
daa
adc
inc
daa
movzbl
mov
cmp
push
movsl
cmp
lock
xor
in
cltd
xor
ljmp
ljmp
ljmp
jmp
xor
ljmp
jmp
xor
in
lcall
lock
cmp
cmc
mov
push
mov
cli
xlat
jne
cld
in
hlt
cmpsl
sti
mov
call
mov
std
pop
inc
pop
jecxz
sub
stos
dec
ss
daa
dec
sbb
incl
add
add
add
mov
rep
sub
mov
ss
pusha
cmp
hlt
jne
sbb
out
movsl
xor
repz
cmp
repnz
aaa
out
mov
xor
jmp
xor
ljmp
call
xchg
cs
call
xchg
das
call
mov
jmp
mov
jmp
mov
jmp
mov
jmp
xor
ljmp
out
lahf
xor
icebp
cmpsb
cmp
repz
cmp
stc
pop
cli
aad
cld
loop
repz
cld
mov
fdivrs
sbb
dec
das
adc
pop
inc
sbb
push
push
add
add
add
mov
cmpsl
sub
mov
daa
std
ficomps
xor
hlt
test
ss
out
mov
xor
ljmp
call
xchg
sub
out
sub
out
sub
jmp
mov
fildl
sub
int3
jns
dec
ja
dec
jbe
call
jge
fildl
das
jmp
xor
out
sahf
xor
lock
aaa
push
lods
cmp
divb
push
cli
aam
std
in
repz
cld
mov
lcall
daa
adc
dec
xor
inc
adc
addb
add
mov
xor
std
mov
inc
cli
mov
push
lods
xor
repnz
xor
in
mov
das
call
xchg
sub
out
sub
in
sub
out
sub
in
sub
fisttps
sub
mov
and
xchg
push
sbb
xchg
push
sbb
stos
pop
sbb
call
jle
jmp
mov
jmp
xor
in
pushf
xor
lock
cmp
cmc
mov
clc
mov
jno
std
in
push
lods
std
mov
pushl
sub
inc
sub
test
xor
pop
popa
sbb
enter
lret
xchg
cmp
cld
mov
sti
mov
push
mov
push
lods
xor
in
mov
das
jmp
lcall
in
sub
in
sub
in
sub
fisttps
daa
decb
cmp
push
fs
push
pop
pusha
inc
adc
xor
inc
sbb
cwtl
push
sbb
imul
xlat
subb
out
xor
in
xchg
xor
out
fwait
xor
lock
cmp
divb
pop
cld
xlat
jne
jmp
mov
lock
dec
test
adc
push
xor
jns
cmp
or
add
add
add
add
stos
xor
cli
mov
cmp
divb
out
cmpsl
xor
jmp
xor
ljmp
jmp
cwtl
sub
in
sub
jecxz
sub
jecxz
sub
loop
sub
rolb
pop
int3
push
sub
pop
pop
aaa
adc
or
add
add
pop
or
es
fisttps
xor
out
xor
jmp
xor
out
sahf
xor
push
mov
stc
les
fdivrs
out
repnz
cli
fstps
aad
xor
test
push
cmp
adc
incl
add
add
add
mov
cmp
cli
mov
cmp
repnz
xor
ljmp
jmp
fwait
sub
in
sub
in
sub
jecxz
daa
jmp
xchg
daa
fisttpll
sbb
mov
cmp
xor
add
add
add
add
cmp
push
mov
and
leave
ja
call
jge
call
jge
call
subb
aad
sub
fimull
jmp
mov
pop
push
les
stc
rorl
rcll
gs
adc
or
lea
ljmp
push
mov
ss
out
stos
xor
jmp
sub
jmp
fwait
sub
in
sub
jecxz
es
xchg
es
xchg
sub
xlat
mov
fisttpl
adc
xor
and
push
xor
push
sbb
pop
sbb
mov
pop
sbb
mov
pop
sbb
mov
scas
imul
mov
xor
mov
xchg
pop
mov
push
pop
inc
push
dec
sbb
addb
add
movsb
xor
hlt
mov
cmp
cmc
mov
push
scas
xor
in
test
call
pushf
sub
jecxz
es
xchg
es
xchg
es
xchg
sub
into
test
push
das
adc
inc
adc
rorl
push
mov
cmp
repnz
out
lods
das
ljmp
jmp
fwait
es
xchg
and
jmp
xchg
and
incl
psubsw
bswap
inc
daa
movzbl
fxsave
shrd
shrd
shrd
shrd
shrd
shrd
shrd
shrd
shrd
adc
inc
adc
inc
adc
inc
adc
inc
adc
dec
sub
lods
dec
sub
test
adc
addr16
or
add
add
mov
cmp
idivb
ss
mov
in
stos
sub
jmp
mov
es
lcall
aad
and
stos
push
std
test
sbb
stos
push
push
cli
lods
imul
lods
push
cli
scas
push
cli
scas
push
cli
scas
imul
scas
imul
cli
scas
imul
cli
scas
push
and
scas
imul
mov
es
mov
sub
mov
sub
mov
jns
cli
mov
dec
cli
mov
push
rcll
adc
cmp
xor
adc
add
ds
roll
mov
xor
out
scas
xor
in
test
sub
out
sub
out
sub
out
sub
in
sub
loop
daa
jmp
cwtl
sub
in
sub
in
sub
out
sub
out
sub
jmp
cltd
cs
cwtl
das
jmp
xchg
das
call
xchg
xor
call
xchg
xor
call
xchg
xor
in
xchg
xor
out
cwtl
aaa
push
lcall
hlt
lahf
ds
mov
push
cld
shrl
sti
les
xchg
jecxz
adc
inc
adc
add
inc
pop
add
add
ret
xchg
xor
shll
inc
push
les
mov
xor
out
scas
das
jmp
sub
jmp
mov
sub
in
sub
in
sub
in
sub
out
sub
out
sub
out
sub
call
fwait
sub
jmp
lcall
call
xchg
das
jmp
xchg
das
ljmp
jmp
xor
out
cwtl
xor
lock
aaa
push
popf
cmp
hlt
mov
ds
clc
mov
cld
lret
clc
shlb
push
sub
dec
sub
jge
xor
xor
or
add
add
mov
pop
imul
add
add
lcall
cmc
dec
push
movl
icebp
mov
out
scas
xor
in
stos
sub
ljmp
jmp
mov
sub
in
sub
in
sub
in
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
jmp
xchg
sub
jmp
xchg
cs
call
xchg
cs
ljmp
out
cwtl
xor
lock
aaa
push
sahf
cmp
hlt
mov
inc
sti
les
cmc
mov
and
dec
sub
jo
xor
sub
add
add
movsl
dec
cmp
mov
loope
stos
pop
add
add
add
add
shrl
dec
push
int
push
lret
hlt
sarb
mov
out
mov
in
stos
sub
jmp
mov
es
xchg
and
aad
and
aad
and
call
mov
call
mov
call
mov
call
mov
call
mov
fisttpl
sub
out
sub
call
xchg
sub
jmp
xchg
xor
in
cltd
xor
icebp
pushf
aaa
push
lahf
cmp
imulb
push
out
mov
ljmp
sbb
dec
sub
pop
push
xor
push
xor
add
mov
je
in
imul
add
add
mov
cmpsl
inc
aad
leave
push
push
rcll
test
cmp
out
mov
in
stos
sub
inc
test
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
sti
mov
sbb
sti
ret
jns
cld
fisttpl
sub
out
sub
out
sub
jmp
xchg
xor
in
cwtl
xor
out
fwait
ss
lahf
cmp
imull
push
fbld
adc
pop
aaa
or
push
add
add
add
add
mov
cmp
mov
dec
push
add
add
mov
mov
icebp
icebp
into
push
push
aam
push
int
push
ret
icebp
mov
das
dec
mov
pop
cmp
aad
cmp
adc
dec
adc
dec
adc
orl
dec
adc
dec
orl
orl
dec
adc
movsb
fmuls
jmp
xchg
sub
out
sub
out
sub
jmp
cwtl
xor
out
fwait
xor
push
stos
inc
cld
mov
dec
mov
lahf
push
sub
inc
pop
cmp
adc
add
add
lods
sar
mov
std
loopne
jmp
mov
add
add
add
mov
dec
push
rcll
not
push
push
into
dec
push
les
out
mov
dec
xchg
incb
dec
sub
adc
add
add
mulps
sbb
out
sub
out
sub
out
sub
out
sub
out
sub
jmp
cltd
xor
out
pushf
xor
clc
lods
inc
stc
mov
ljmp
sub
mov
adc
bound
adc
incl
add
shll
push
popf
loopne
fdivl
dec
add
add
add
mov
and
push
push
rcll
not
push
push
into
dec
push
ret
notrack
movsl
das
ljmp
adc
mov
das
adc
cmp
adc
add
add
invd
pop
xor
adc
jbe
loopne
xchg
sub
out
sub
out
sub
out
sub
out
sub
out
sub
jmp
fwait
xor
out
sahf
xor
stc
stos
inc
push
stos
inc
decl
adc
ss
pusha
inc
and
add
add
mov
lds
test
filds
cmpsb
fstpt
push
push
push
push
xlat
push
push
into
inc
push
mov
and
inc
and
adc
push
adc
pop
cmp
adc
push
pop
cmp
sbb
xor
adc
push
sbb
lcall
out
sub
out
sub
out
sub
out
sub
in
popf
xor
lock
cmp
jmp
popf
cmp
stos
dec
sub
dec
pop
aaa
push
pop
addb
les
fwait
pushl
in
jmp
mov
pop
push
loope
push
add
rclb
int
push
pop
push
push
push
iret
inc
call
outsb
pop
cld
push
xor
in
es
dec
sub
movsb
dec
adc
dec
sub
adc
les
daa
jmp
fwait
sub
out
sub
out
sub
out
sub
out
sub
call
pushf
cs
in
mov
cmp
imull
mov
sub
jne
xor
cs
cs
or
add
add
add
add
rorb
pushl
jmp
insb
shl
rcrb
add
add
lds
lret
pop
push
push
push
fcoms
test
out
mov
daa
xchg
arpl
stc
insl
inc
adc
ficompl
aam
dec
push
loope
jo
hlt
xlat
xchg
and
jecxz
sub
in
sub
in
sub
in
sub
in
sub
out
sub
out
sub
jmp
mov
xor
push
scas
inc
jmp
pushf
cmp
outsl
inc
sbb
push
xor
add
fadd
jno
stc
out
pushl
stos
out
xchg
jmp
jno
jecxz
gs
into
push
add
int3
fs
jmp
popa
repz
pop
push
xlat
push
push
rorb
bnd
jmp
mov
and
fstpl
sub
out
sub
jmp
mov
sub
in
sub
in
sub
out
sub
call
mov
xor
rep
cmp
divb
cmp
fimuls
gs
xor
sub
adc
lret
adc
into
adc
icebp
stos
mov
scas
negb
std
out
imul
aad
pop
jmp
fldenv
cmc
fcoms
not
dec
push
int3
inc
push
ret
cmp
repz
xor
in
mov
in
lods
sub
jmp
sub
ljmp
call
mov
sub
out
sub
ljmp
push
test
cmp
icebp
lods
cmp
fsts
push
test
cmp
adc
fdivrs
xchg
in
push
scas
mov
scas
sti
sahf
cld
loop
in
int
xchg
mov
das
repnz
cld
cmc
fisubrs
neg
pop
push
fmuls
test
cmp
repnz
xor
out
mov
in
lods
sub
jmp
sub
jmp
sub
ljmp
ljmp
out
cmpsb
xor
icebp
stos
xor
hlt
mov
push
scas
cmp
fistpl
push
movsl
push
cmovae
adc
leave
subl
inc
adc
outsl
inc
adc
add
lods
push
push
lock
mov
mov
cmpsl
icebp
xchg
cli
fstpt
repnz
arpl
loopne
data16
clc
out
clc
loope
clc
fistl
not
inc
push
ds
mov
xor
out
mov
in
scas
sub
in
lods
sub
in
stos
sub
in
stos
sub
push
scas
xor
repz
push
mov
out
scas
cmp
in
xor
mov
cmpsb
push
xor
inc
pop
cmp
push
xor
or
xchg
xor
jo
adc
inc
adc
loope
inc
out
fstl
mov
mov
lods
cld
sahf
ljmp
cld
fists
sti
lock
stc
fstl
clc
rorb
test
push
mov
xor
lock
out
mov
push
mov
push
mov
push
mov
push
mov
push
mov
out
mov
call
xchg
xor
xchg
and
bound
adc
pusha
inc
and
add
add
icebp
lods
cmp
movsl
nop
pop
push
addr16
adc
js
adc
add
pop
sub
rolb
clc
mov
mov
mov
stos
stc
fwait
repnz
sti
icebp
jle
std
hlt
jae
cld
icebp
imul
cli
loope
stc
dec
push
lret
test
push
mov
ss
mov
cmp
clc
mov
aas
jmp
nop
das
out
dec
sbb
adc
popa
cmp
and
sti
mov
pop
into
xchg
cmp
ja
sbb
fdivrs
jns
out
fcoml
stc
scas
mov
mov
lods
movsl
cld
cltd
clc
mov
divb
std
repz
in
fs
sti
jecxz
cli
fmuls
stc
rolb
stc
lret
clc
lret
clc
movl
lock
cmp
scas
jl
lods
jo
sbb
mov
aaa
adc
mov
cmp
adcb
inc
adc
add
mov
fs
fimull
in
mov
repnz
repnz
icebp
mov
in
jns
std
jmp
pusha
sti
fsts
rorb
aam
cld
push
clc
rclb
mov
xor
pop
inc
adc
bound
sbb
push
ret
mov
push
fistpl
pop
outsb
inc
adc
fdivrs
push
xchg
loop
js
jmp
and
fmull
stc
cmc
flds
sti
not
insb
sti
repnz
jmp
dec
bnd
dec
repnz
into
push
stc
rcll
xorb
push
cmp
xchg
pop
inc
sbb
inc
pop
inc
pop
inc
sbb
fs
push
pop
mov
sub
pushf
cmp
push
adc
outsb
inc
adc
fnstcw
push
adc
faddp
push
sub
ret
pop
sub
lds
in
push
and
mov
inc
fldcw
push
sti
repz
push
lock
inc
sbb
pop
cmp
sbb
sbb
pusha
inc
sbb
inc
push
add
mov
xchg
ss
bound
adc
add
add
mov
dec
mov
out
push
loope
xchg
inc
mov
push
and
pop
cmp
xchg
push
jb
ds
pop
pop
cmp
ss
cmp
cmp
push
sbb
stos
cmp
mov
sub
pop
aaa
adc
adc
mov
ret
dec
fwait
fistpl
cld
rcll
loop
dec
fsubrl
dec
sbb
bound
adc
mov
mov
in
icebp
mov
hlt
insl
inc
sbb
aaa
adc
pop
aaa
adc
mov
mov
jle
les
clc
enter
rolb
mov
in
mov
in
mov
in
hlt
mov
aaa
ficompl
cmp
sub
movups
add
add
mov
or
mov
dec
push
repz
push
jl
mov
inc
aas
rolb
incl
add
incl
add
incl
add
incl
add
incl
add
clc
add
pop
incl
add
loopne
add
incl
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
rolb
add
rolb
rolb
add
loopne
pavgb
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
orb
add
add
loopne
pop
addb
add
loopne
add
add
add
lock
add
pop
add
lock
add
sldt
clc
add
add
pop
add
clc
add
add
aas
add
cld
add
add
sldt
incb
add
add
add
incl
add
add
add
add
add
inc
add
pop
ret
add
push
add
movnti
add
cld
add
movnti
add
inc
add
ret
add
push
add
add
cld
add
add
incl
add
add
jmp
jg
add
add
add
add
add
add
add
and
pop
cmp
adc
sbb
dec
sbb
jnp
sbb
imul
mov
pop
xor
andl
pop
insl
aas
push
sub
adc
adc
pcmpeqd
or
adc
or
or
sbb
adcb
push
push
add
addb
add
add
add
add
add
jle
repnz
and
fmull
daa
test
jge
fdivl
sbb
imul
adc
pusha
aaa
adc
pusha
cmp
sub
adc
pop
cmp
and
pop
sbb
push
adc
and
inc
and
push
push
add
add
add
sarl
aad
and
repz
and
mov
lds
adc
jnp
and
jle
dec
jg
pop
jle
lods
scas
insl
sub
pop
xor
xchg
pop
xor
lea
adc
aaa
adc
pop
cmp
jne
aaa
adc
push
ss
inc
push
cmp
xor
sbb
dec
sbb
pusha
inc
and
addb
add
add
add
xchg
inc
andl
movsl
pop
xor
adc
add
add
adc
pop
xor
pop
nop
pop
and
ja
sbb
out
dec
sbb
out
dec
push
in
inc
sbb
push
xor
adc
inc
adc
pop
aas
sbb
cmp
sbb
or
add
add
add
add
es
and
pushf
gs
pop
xor
movsl
pop
xor
adc
add
add
add
add
xor
test
shlb
sti
loopne
aas
fistps
inc
jmp
mov
jmp
mov
jmp
mov
inc
popf
pop
cld
nop
outsb
cmp
push
xor
adc
push
cmp
lcall
sbb
imul
data16
add
add
add
add
xchg
and
stc
stos
and
mov
das
adc
add
add
push
xor
aaa
xchg
pop
and
loopne
xor
push
mov
aas
push
movsb
inc
push
scas
inc
clc
mov
stc
mov
arpl
sti
shlb
sti
rolb
call
mov
xchg
ja
testl
adc
addr16
inc
pop
sub
dec
sbb
xor
add
add
add
add
add
add
add
daa
jns
lods
es
mov
sub
enter
js
ss
mov
daa
into
loop
xor
push
mov
cmp
repz
cmp
repnz
cmp
icebp
fwait
cmp
icebp
sahf
cmp
repz
ds
mov
stc
rcll
shrl
std
loope
cld
out
push
xchg
mov
aas
push
out
sub
mov
push
cmp
sub
and
lret
push
imull
clc
push
das
adc
push
xor
mov
jmp
cmpsl
cmp
hlt
movsl
cmp
lock
cmp
out
lcall
in
xchg
xor
in
xchg
xor
in
xchg
xor
in
xchg
xor
out
pushf
xor
icebp
mov
cmp
stc
lret
cld
fdivrl
in
lahf
cld
out
call
mov
pop
cmp
adc
pop
cmp
pop
dec
sbb
incl
add
add
add
rolb
idiv
mov
incl
pop
sbb
push
stos
cmp
repnz
cmp
out
lahf
xor
in
lcall
call
xchg
das
ljmp
ljmp
jmp
xor
out
popf
xor
icebp
cmpsb
cmp
cmc
mov
stc
pop
sti
fidivrl
lock
std
ljmp
dec
cs
mov
pusha
inc
adc
add
add
add
lcall
fistps
push
stos
ss
cmpsl
ss
out
mov
das
jmp
xchg
sub
jmp
xchg
das
jmp
mov
jmp
lret
jns
loopne
xchg
in
lcall
hlt
scas
ds
clc
mov
jbe
lock
jmp
es
pop
cmp
sbb
jno
sbb
add
add
add
add
roll
cld
mov
xor
out
movsb
xor
jmp
das
call
xchg
sub
in
sub
out
sub
lds
clc
mov
mov
cmp
sbb
pop
sbb
cmc
call
cwtl
xor
lock
cmp
cld
fidivrl
rep
push
aam
ljmp
and
xchg
pusha
inc
pop
sub
addb
add
add
add
scas
cmp
sti
mov
aaa
out
stos
xor
jmp
das
call
cwtl
sub
in
sub
in
sub
rolb
adc
aaa
push
xor
adc
add
add
add
add
adc
pop
pop
xchg
xchg
ljmp
push
mov
cmp
cli
les
loop
out
mov
cmp
gs
sbb
addb
add
add
add
cwtl
xor
push
mov
xor
ljmp
jmp
cwtl
sub
jecxz
es
xchg
sub
pop
sbb
push
das
adc
xor
adc
add
add
adc
mov
push
int
imul
mov
subb
leave
xchg
dec
rcl
test
pop
shll
gs
adc
js
push
push
push
push
add
mov
and
out
mov
clc
idivl
in
cmpsl
sub
jmp
cwtl
es
xchg
es
xchg
jmp
adc
dec
sub
pop
push
xor
adc
add
add
xor
mov
das
call
popf
daa
jmp
cltd
and
lcall
push
sbb
mov
lea
hlt
mov
hlt
mov
hlt
mov
hlt
mov
hlt
lea
lea
hlt
mov
hlt
nop
push
pop
hlt
xchg
push
and
xchg
pop
and
xchg
pop
and
xchg
bound
hlt
xchg
addr16
pop
cmp
lret
pusha
ss
cmp
and
add
add
add
add
mov
inc
push
mov
in
stos
sub
call
lahf
sub
jecxz
es
mov
call
xchg
call
xchg
call
mov
call
mov
call
xchg
call
xchg
call
xchg
call
xchg
fadds
sub
jmp
mov
in
movsb
inc
push
mov
fcompl
adc
cmp
and
add
add
mov
add
add
lret
popf
cmp
cmc
ret
icebp
mov
in
stos
sub
jmp
mov
sub
in
sub
out
sub
out
sub
call
fwait
sub
call
xchg
sub
jmp
xchg
xor
out
cltd
xor
push
mov
dec
cld
ret
gs
pop
push
sub
bndstx
add
add
mov
inc
or
fidivs
dec
push
les
lock
in
lods
cs
jmp
lahf
daa
fistl
and
fcoml
sub
fcoml
sub
loop
sub
out
sub
call
xchg
das
jmp
xor
out
fwait
ss
lahf
cmp
imull
push
lcall
sbb
dec
sub
dec
pop
xor
adc
add
add
mov
mov
sti
xlat
mov
lcall
cmp
lds
not
push
push
les
icebp
mov
sub
testl
popa
sbb
mov
pop
sbb
lret
andb
xchg
sub
out
sub
call
xchg
das
in
lcall
clc
stos
inc
fistps
adc
push
ss
add
add
add
add
add
mov
jne
shll
add
les
push
push
xlat
push
push
movl
insl
inc
adc
push
pop
cmp
push
jg
lock
sub
out
sub
out
sub
jmp
lcall
clc
stos
inc
mov
xor
xchg
push
xor
das
pop
aaa
adc
incl
add
mov
out
out
int
sti
shlb
add
iret
lods
inc
stos
icebp
rclb
push
push
mov
and
and
xchg
push
xor
and
add
add
adc
cwtl
pusha
sbb
out
sub
out
sub
out
sub
call
pushf
xor
repz
inc
call
xor
push
push
cmp
add
add
stos
xchg
ljmp
out
iret
je
loop
pusha
jge
mov
dec
mov
aam
push
dec
jmp
stos
xor
loop
adc
dec
xor
pop
pop
cmp
js
dec
push
mov
mov
sti
in
sub
out
sub
out
sub
out
sub
jmp
mov
cmp
jmp
inc
sbb
cmp
push
sub
add
lret
mov
hlt
test
push
sarl
ljmp
or
mov
lcall
dec
fildll
and
fwait
imul
sti
xlat
xchg
and
in
sub
out
sub
in
sub
in
sub
call
lahf
xor
repnz
push
mov
jmp
das
adc
cmp
push
adc
or
add
mov
inc
adc
rorb
cmpsb
push
fiaddl
mov
fidivrl
fs
cmc
push
in
mov
das
fcompl
es
call
test
jmp
mov
sub
jmp
cmpsb
xor
cmc
scas
cmp
fistpl
push
sbbl
xor
inc
pop
sub
adc
jne
adc
push
stos
pop
xor
ficoml
scas
std
in
push
aam
fsubr
leave
je
jmp
neg
push
push
roll
hlt
ret
lock
in
mov
in
stos
sub
jmp
sub
ljmp
push
stos
xor
repz
jmp
lahf
xor
sahf
push
xor
test
sub
inc
pop
push
js
pop
and
lret
mov
inc
in
ficoml
pushl
std
loopne
cli
clc
loope
mov
in
mov
stc
jecxz
push
rorl
test
push
mov
sub
push
mov
push
mov
push
mov
fstps
cwtl
pop
xor
xor
adc
ficomps
sub
popa
jnp
sbb
dec
sbb
add
lods
pop
sub
enter
jmp
mov
std
cmpsb
lock
lock
divl
cld
repz
sti
call
dec
push
enter
ret
cmc
sarl
idivl
cmp
loopne
push
sbb
cmp
fbld
and
dec
adcb
cmpsl
push
or
mov
push
loope
xchg
repnz
lock
icebp
mov
in
ja
std
jmp
sti
ficomps
cli
rorb
rorb
repnz
dec
sti
enter
fwait
jb
test
dec
sbb
inc
sbb
add
add
adc
fsubl
xchg
jns
sbb
push
sbb
cmpsl
push
add
lods
popa
cmp
mov
push
mov
jb
loopne
insb
lods
fnstsw
inc
mov
in
inc
icebp
out
dec
fdivs
and
insb
dec
sbb
insl
dec
sbb
insl
dec
sbb
insl
inc
pop
sub
pushf
cmp
jae
pop
inc
jbe
adc
addb
add
and
lods
subl
int
cmp
fnsave
xchg
popa
inc
pop
xchg
push
sbb
jae
pop
jbe
pop
sbb
fidivrs
sbb
jo
adc
add
add
addb
je
pop
or
xchg
ss
fldcw
cmp
shrl
xor
mov
es
push
inc
adc
insl
dec
add
ret
mov
pop
ret
mov
xchg
lret
mov
xchg
cmp
mov
add
add
add
jg
add
pop
pop
add
clts
add
pop
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
loopne
addb
incl
add
incl
pop
sub
add
adc
add
and
add
add
and
mov
xchg
ds
xchg
inc
repz
popl
movsl
push
sbb
insb
aas
push
inc
push
aas
adc
pusha
bound
push
cmp
and
sbb
adcb
add
add
fsubl
sbb
mov
sub
lea
shlb
push
jecxz
xor
call
inc
sub
loope
sub
pop
inc
sbb
pop
inc
sbb
pusha
dec
and
dec
and
jmp
sub
mov
jo
cmp
adc
orb
ret
cld
ficoms
push
mov
fbstp
dec
stc
push
cmp
xlat
push
aas
sbb
dec
sbb
jmp
popa
pop
xlat
push
xor
loope
jae
cld
out
ss
fwait
cmp
out
xchg
ss
out
lcall
idivl
jbe
ljmp
repnz
es
insb
dec
sbb
pusha
inc
sbb
fstps
std
mov
cmpsb
ss
jmp
xor
out
cs
nop
das
pushl
jo
cli
out
xor
hlt
mov
sti
aam
push
fcoms
in
cmp
cmp
mov
push
lods
xor
ljmp
fimull
sbb
mov
and
aam
xor
hlt
test
cld
shrl
shrl
push
ret
pop
inc
imul
fcomps
xor
jmp
xchg
and
std
inc
and
out
dec
cs
push
cs
cmp
out
dec
sbb
mov
test
out
ss
outsl
inc
pop
addl
bound
inc
hlt
mov
sub
call
jg
call
jg
call
jg
call
jg
call
jg
call
jg
call
jg
call
jg
call
jg
decl
push
mov
and
add
add
aam
inc
jbe
les
in
lods
sub
ficoms
sub
fists
sub
out
sub
push
lcall
push
das
adc
pop
xor
mov
dec
mov
loope
dec
scas
cmc
movb
andb
pop
cmp
in
adcl
mov
xchg
sub
dec
mov
pop
xor
mov
add
add
mov
leave
test
add
add
jmp
push
sbb
xor
in
inc
es
push
ss
mov
and
out
sub
out
sub
icebp
movsb
cmp
sahf
gs
cmp
pop
cmp
adc
add
add
add
add
mov
loop
jnp
fdivrs
bound
mov
and
int
and
in
sub
in
daa
ljmp
je
adc
xor
add
add
rorb
lock
shl
shll
roll
icebp
mov
in
lods
sub
out
lods
das
call
pop
sbb
xchg
bound
jo
jge
xor
add
add
mov
test
cli
jmp
push
hlt
int3
inc
clc
iret
dec
fldt
cmp
sbbl
add
add
mov
mov
jns
dec
jp
sbb
test
xor
imul
xchg
popa
sbb
mov
mov
in
pusha
sarl
cmp
cmpsl
dec
mov
outsl
xor
add
mov
loope
pop
mov
scas
pop
lcall
add
add
das
xor
add
incl
add
hlt
add
cmp
addb
incl
xor
and
das
inc
add
inc
add
jmp
add
push
add
inc
xor
add
add
or
xor
adc
add
add
push
add
and
add
add
call
add
adc
add
add
sub
add
xor
xor
add
add
or
test
add
xor
add
add
add
add
adc
add
add
add
add
aaa
add
xor
add
add
add
add
and
add
add
add
add
adc
add
add
add
add
cmp
add
add
inc
add
inc
add
jo
add
shll
shll
shll
shll
shll
shll
add
add
add
add
add
stos
shll
add
add
add
add
shll
add
add
shlb
shlb
add
add
shlb
shlb
shll
shlb
add
add
shlb
add
add
shll
shlb
add
add
xor
push
shlb
add
add
jb
gs
xor
cs
insb
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
imul
insb
add
gs
insb
xor
cs
insb
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
je
jb
arpl
fs
jae
add
add
imul
jae
add
dec
outsl
popa
fs
imul
add
add
jae
popa
addr16
outsl
js
add
add
addr16
insb
outsl
jae
dec
gs
add
push
jns
inc
jb
gs
je
imul
jb
popa
je
inc
outsl
outsb
je
add
add
gs
insb
inc
js
arpl
gs
add
jo
loopne
add
add
or
adc
sbb
and
sub
xor
cmp
inc
pop
dec
pop
push
pop
pop
pop
bound
push
jb
jp
addb
pop
xchg
pop
lcall
pop
roll
faddl
out
add
add
leave
inc
leave
pop
leave
push
jg
mov
lods
enter
mov
sbb
add
dec
pushf
dec
pushf
pop
pushf
insl
pushf
sbbb
cwtl
pushf
popf
pushf
movsb
pushf
stos
pushf
mov
mov
pushf
stc
pushf
incb
cs
inc
daa
pop
daa
ja
xchg
daa
lahf
daa
lds
shlb
mov
jge
jb
xor
or
xchg
sub
arpl
jp
xchg
lods
xchg
mov
rclb
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
cmp
sbb
and
sub
xor
cmp
inc
cmp
push
cmp
bound
push
jb
jp
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
jo
and
xchg
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
push
sub
leave
mov
mov
aaa
jb
jb
jb
jb
jb
jb
sbb
add
pushf
push
pushf
push
pushf
and
cmp
outsl
pushf
jnp
mov
daa
xchg
in
and
pop
jb
jb
jb
jb
mov
leave
fmulp
pop
or
or
jb
jb
decb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
sbb
or
pushf
pop
pushf
pop
mov
jo
adc
sbb
pushf
adc
sbb
xor
enter
cmpl
loopne
loope
add
or
add
or
jle
mov
popf
adc
push
adc
add
cli
xor
bound
andl
aas
lock
sub
adc
push
cmp
pop
cmp
hlt
rorl
inc
es
mov
ss
or
pop
mov
inc
xchg
and
jb
or
jg
cmpsl
insb
or
js
lock
add
test
sbb
xor
xchg
push
bswap
fcmovnb
cmp
jbe
add
inc
xchg
xor
add
cld
jne
adc
dec
or
rcrl
dec
addb
adc
aad
dec
in
inc
pop
and
or
out
cld
xchg
in
adc
cmp
es
pop
add
shll
fsubrp
imul
test
add
popf
inc
daa
loop
cmpsb
add
add
sub
fsubs
xchg
arpl
and
or
ja
push
or
and
mov
jg
cmp
inc
adc
adcl
jp
lds
or
push
fisubrs
add
dec
sub
pop
sub
mov
mov
mov
into
pop
dec
repnz
pushf
mov
aas
subl
mov
mov
add
out
sub
repnz
add
jmp
inc
cmp
lods
enter
push
adc
pop
cld
add
fwait
add
push
aaa
sbb
push
cmp
add
add
jo
fcmovbe
les
pop
add
bound
push
cld
mov
stos
lods
adc
movsb
pop
inc
push
mov
pop
lcall
gs
sub
setno
cmp
and
jmp
or
add
mov
add
jb
dec
xor
sbb
mov
shlb
lahf
scas
cmp
xor
mov
in
inc
xor
gs
cmc
pop
ss
or
enter
shlb
test
cmp
andb
jecxz
cmp
sub
add
or
rcr
pop
iret
js
or
test
inc
mov
xchg
xor
addl
aad
inc
outsb
into
mov
in
add
fbstp
repz
add
addr16
pop
mov
push
mov
enter
pop
addb
add
xor
or
and
dec
push
pop
das
pop
add
stos
mov
pop
lods
mov
cs
cmp
jp
enter
aad
push
cmp
lods
xchg
cmp
lret
aad
add
add
ret
std
pop
enter
jnp
adc
popa
xor
or
rcl
outsl
dec
push
cmp
jecxz
pop
add
je
std
jae
add
mov
adc
jge
movsl
inc
sub
roll
inc
cmc
pop
adc
mov
mov
jecxz
outsl
add
mov
incl
add
addl
sbb
adc
sbb
jo
roll
jae
shl
cmp
adc
add
and
add
sbb
nop
les
jmp
xlat
mov
in
push
cld
sub
jmp
jae
sbb
or
sbb
and
mov
push
das
mov
fmulp
xor
push
fst
mov
sub
add
mov
inc
cmp
pop
sbb
andl
test
and
ss
xor
cmp
pop
cmp
jge
mov
daa
inc
cmovae
add
push
enter
test
push
inc
outsl
jecxz
add
dec
shl
sub
out
push
adc
mov
test
js
pop
es
push
cmp
push
lret
lahf
add
push
add
pusha
mov
or
xor
adc
iret
orb
jmp
ljmp
jmp
push
push
into
mov
arpl
xor
and
pop
xor
push
sub
xchg
insl
jge
inc
seto
adcl
or
mov
sar
lcall
xchg
pop
sub
fdivl
js
add
out
outsb
sub
xchg
icebp
push
xor
int3
jle
push
cwtl
inc
push
inc
arpl
cli
mov
sarl
add
mov
clc
mov
cmpb
xchg
insl
add
push
mov
and
or
sub
test
fcmovnbe
add
pop
pop
not
dec
loop
or
adc
pusha
add
sub
sbb
xor
push
or
cmp
jp
dec
jbe
int3
add
push
stc
push
pop
pop
inc
adcl
mov
and
jecxz
inc
fldt
adc
mov
shlb
adc
sub
xor
or
aad
cmp
psllw
enter
rol
jne
push
call
add
pop
pop
shll
fs
aaa
stc
dec
in
fildl
xor
or
adc
and
out
xchg
clc
jnp
push
cmp
add
cmp
push
jge
std
mov
data16
push
btr
inc
jmp
and
fstps
sbb
clc
inc
mov
cmpsb
cltd
add
loop
push
stos
mov
lds
stc
push
pop
jbe
add
fs
and
and
dec
lods
popa
pop
push
pop
inc
in
sbb
or
mov
test
and
sub
sar
nop
pop
xchg
test
sbb
neg
push
and
jbe
sbb
test
rolb
pop
pop
popa
dec
add
pop
testl
or
orb
pop
push
dec
cwtl
test
movsb
rclb
inc
push
xor
lods
loop
int
out
inc
add
and
add
inc
jno
out
enter
daa
jg
or
stos
cld
pop
or
jae
sti
adc
fcoml
push
repnz
popa
dec
xor
cli
mov
btc
rcrl
and
cli
in
movsb
mov
add
subb
mov
outsl
pop
fwait
cmpsb
aad
dec
cwtl
mov
xchg
add
dec
push
pop
pop
cmp
fmuls
cmp
gs
inc
xor
leave
and
and
pop
xor
movsb
push
clc
pop
inc
cmpsb
cltd
add
pop
push
or
loopne
and
out
cmpsb
inc
inc
dec
sarb
std
adc
adc
lcall
inc
dec
test
push
dec
push
add
movswl
or
mov
pop
pop
sub
nop
leave
or
adc
xor
cmp
fcoml
push
jnp
mov
lods
mov
in
sbb
nop
ja
cmp
lds
adc
xchg
ds
mov
call
aaa
mov
mov
sbb
push
leave
mov
fists
neg
sub
sub
bound
rcrl
cs
test
push
lock
dec
jb
stos
adc
pop
in
and
or
mov
mov
or
sbb
and
arpl
sub
out
movb
push
dec
rorl
adc
test
and
mov
cltd
sbb
jmp
mov
and
cmp
inc
dec
fisubl
jno
dec
sub
dec
xor
pop
test
cmc
int
divb
mov
aad
mov
pop
nopl
mov
sti
movsl
add
jb
aaa
hlt
stc
cmpsb
pop
into
cmpps
jmp
jle
sbb
fisubs
add
adc
dec
push
add
cli
std
push
mov
mov
dec
cmp
add
push
or
sub
bound
mov
or
bswap
xchg
outsl
cld
dec
xor
sbb
sti
sub
bound
pusha
fsubrl
push
test
pop
repnz
push
imul
mov
fisubs
mov
test
inc
adc
cmp
sub
push
arpl
mov
or
lods
pop
loope
addl
cmpsl
movsb
sub
addb
andl
movsl
mov
cmp
mov
js
inc
lods
inc
mov
push
inc
adc
gs
stos
or
sbb
inc
add
sbb
fiadds
dec
adc
push
lret
jbe
pop
stos
aas
add
loope
rorl
addl
xlat
sub
xor
mov
sub
or
pusha
and
ss
cmp
push
clc
dec
test
cmc
jp
push
out
jecxz
jmp
bound
mov
sti
sub
sbb
ja
xchg
out
sub
scas
dec
pop
negl
cmc
xchg
jnp
push
pop
repz
inc
add
cmp
push
pop
pop
inc
dec
xorb
imul
aam
outsl
adc
sarl
inc
cli
lret
add
dec
cmc
aas
sarl
xor
rolb
testl
cmp
scas
or
shrl
test
neg
push
and
aam
xor
mov
scas
cmp
jnp
stos
aad
pop
add
data16
test
seto
mov
cs
loopne
mov
or
pop
in
ss
in
movzwl
dec
mov
xchg
in
or
stos
mov
pushl
bound
add
push
cli
sub
and
insl
popa
cmpsl
or
add
rclb
call
and
bound
ret
inc
dec
in
xchg
pushf
cmpb
jecxz
sub
rcrb
or
push
cmp
or
setae
stos
sub
icebp
add
js
pop
pop
mov
in
xor
jmp
inc
xchg
fwait
pop
daa
ret
pop
dec
lods
push
stc
xchg
add
pop
insb
ror
inc
or
pop
test
xchg
push
xor
out
xor
movsb
mov
jl
inc
fsubl
push
into
gs
and
fst
insb
xor
inc
dec
ljmp
or
jl
or
jl
xor
and
xchg
push
xor
pushaw
or
pop
push
pop
add
pop
inc
mov
je
shr
pop
clc
ret
in
jb
dec
jg
lods
xchg
adc
test
or
sub
fistps
add
mov
nop
movsb
jecxz
jmp
or
mov
fisubs
ret
in
lds
mov
xor
sbb
pop
pop
test
outsl
adc
and
data16
inc
aam
lret
dec
mov
sub
arpl
lods
and
repz
outsl
push
movsb
mov
add
insl
iret
in
cltd
ret
jbe
add
daa
out
mov
ljmp
addl
jecxz
push
test
xor
push
loopne
ljmp
inc
xchg
out
ljmp
loopne
push
cmp
jne
jge
adc
inc
add
sti
xor
add
sub
adc
mov
adc
add
cmp
push
dec
inc
sbb
sti
aam
fisttpl
incb
es
inc
pop
cli
loope
lods
repz
push
or
ret
negb
xchg
sub
test
push
addr16
lds
je
lods
push
jmp
push
iret
not
mov
sbb
stos
out
mov
int3
adc
fnstsw
loop
sbb
fwait
sti
xchg
mov
shlb
nop
scas
dec
fiadds
jp
cs
xor
xchg
shl
cmp
dec
cmp
sub
inc
push
scas
gs
jne
adc
dec
cmpsb
jg
or
loop
inc
std
adc
orl
push
jl
adc
add
and
add
push
negb
sub
idiv
rcrb
jg
mov
xchg
push
test
cmpsb
cmp
enter
cmp
insb
ss
sub
jp
xor
sbbb
cmp
loopne
or
cli
sahf
cmp
cwtl
pop
shlb
je
test
push
inc
insb
mov
and
mov
dec
shll
dec
lcall
pop
add
out
sbb
call
fsub
std
stos
popf
dec
add
cs
fisubs
adc
out
push
lock
loopne
inc
adc
jae
add
or
loope
repz
add
mov
les
lock
out
adc
jg
pop
push
and
add
pushf
inc
notb
rorl
popf
jge
fisttpll
push
or
fsubr
and
shlb
cmp
test
jp
add
not
mov
mov
popa
push
jl
add
cmpsl
or
jo
negb
add
xor
aam
pop
adcb
fcmovb
cmp
outsb
and
mov
or
ret
es
mov
sub
subb
es
js
sbb
out
ja
cwtl
sar
sub
ficompl
add
aam
lret
sub
leave
xchg
sbb
xchg
popa
jno
es
push
rorl
cwtl
push
outsb
sbb
roll
setno
xorl
push
mov
loop
add
test
ds
sub
sarb
dec
shr
add
adc
mov
popa
ja
pusha
pop
adcb
dec
mov
adc
aas
enter
pop
int3
test
or
jns
loope
and
mov
cmp
cmp
clc
negb
adc
xchg
out
adc
fcoml
add
call
xchg
in
fdivr
xchg
and
sbb
jmp
orb
not
and
into
or
bound
je
roll
ds
insl
add
scas
inc
inc
cltd
sar
xor
shrl
sbb
adc
fwait
xchg
xchg
sub
add
xorb
test
ja
sti
dec
movsb
push
sub
add
and
push
pop
pop
jo
xchg
push
lods
cmpsl
adc
repnz
mov
cmp
gs
inc
adc
adc
insl
fbstp
sbb
frstor
jmp
push
gs
inc
inc
das
test
mov
sbb
in
sbb
addr16
lock
mov
sbb
int3
mov
jmp
repnz
xor
aad
dec
repz
cmpl
movsl
add
mov
rolb
or
mov
push
sahf
xor
data16
sbbb
or
mov
scas
and
out
inc
push
add
mov
std
lcall
push
sbb
xchg
popa
sub
shlb
xchg
inc
xchg
test
iret
jecxz
jp
dec
rcrb
mov
sub
scas
pop
xchg
or
add
push
mov
jns
adc
mov
sbb
into
cmp
push
add
mov
add
int
aam
leave
cmpsb
les
xor
je
mov
push
in
sbb
leave
cmp
and
mov
jle
jne
outsb
dec
sub
mov
testb
sbb
stc
pop
push
mov
inc
call
pop
mov
sub
adc
mov
jl
xor
xor
dec
loope
push
push
add
lds
inc
xor
adc
sub
sub
cwtl
cmc
setp
xchg
sub
cli
and
pop
push
pop
pop
es
lret
mov
sbb
shl
gs
adc
push
int
and
clc
adc
dec
clc
dec
and
mov
jge
jl
push
jle
out
jp
pop
or
in
cmp
fs
adc
fucomip
add
add
repz
std
test
adc
xchg
stos
or
sub
fidivrs
cmp
pusha
jmp
mov
push
rolb
cmp
mov
mov
lret
add
push
xor
aad
int3
negl
pop
sub
test
pop
dec
xchg
push
lds
add
dec
inc
fwait
shl
adc
shrb
add
gs
dec
and
outsb
xchg
sub
jl
mov
mov
xor
push
inc
mov
or
loope
pop
adc
or
mov
cmp
add
add
push
fs
adc
add
xor
hlt
fstpt
mov
pop
cmp
dec
leave
add
adc
sbb
or
lahf
inc
lods
popf
mov
enter
xlat
add
adc
dec
cmpsb
loop
mov
adc
xor
add
repz
sub
cltd
stos
cmpb
inc
sti
inc
push
shll
and
jmp
in
xchg
fsts
jp
add
or
sub
add
imull
push
sub
mov
ret
sub
sbb
iret
cwtl
sbb
adcl
add
dec
movsl
stc
lret
inc
xor
rorl
cmp
sub
dec
bound
mov
imul
push
addl
cli
mov
arpl
xchg
adc
call
adcb
cli
inc
dec
fmull
hlt
neg
xor
xlat
stos
js
pop
mov
pop
sub
dec
out
shr
mov
outsl
loopne
push
cld
sti
add
xchg
xchg
insb
inc
lds
add
xchg
or
cmp
imul
cmp
adc
leave
cmp
pop
sub
add
cmp
xchg
add
pop
leave
mov
imul
fcomi
cmc
inc
cmp
mov
jns
push
inc
inc
xor
pop
ja
push
loop
test
cwtl
xor
add
rcll
mov
jle
sub
sub
pop
aam
test
shlb
xor
inc
mov
push
pop
out
jae
adc
lods
add
mov
sarl
insl
dec
fsqrt
mov
and
and
lods
dec
push
inc
and
xor
shld
pop
pop
and
arpl
sbb
and
mov
xchg
mov
pushf
popa
pcmpgtw
out
xchg
gs
scas
divl
movb
adc
sub
push
pusha
pop
push
daa
rsm
mov
call
jp
or
pop
xor
mov
movl
bswap
xchg
and
xchg
loope
movsb
shrl
adc
dec
jae
cmp
ja
xor
and
xchg
xchg
rolb
and
xor
jle
push
xchg
mov
int3
mov
sbb
lret
push
pop
sub
popa
jp
enter
sub
push
adc
int3
mov
xchg
inc
push
push
xor
and
inc
hlt
and
push
int3
add
ljmp
aam
pop
adc
add
jmp
lock
andl
gs
mov
push
js
leave
out
cmp
pop
inc
and
mov
insb
mov
or
fnstenv
mov
lret
mov
cmc
push
inc
sub
xor
outsl
loopne
dec
inc
cmp
bound
orb
fistl
dec
push
xor
adc
lret
sbb
or
stos
push
and
sub
rcll
test
insl
xor
inc
ret
mov
stc
mov
js
mov
rorl
cmp
decb
add
adc
push
fnstcw
int
xchg
ret
decb
dec
mov
pop
pushl
pop
into
sar
ljmp
popa
lods
enter
cs
dec
and
std
and
mov
xchg
sub
adc
sar
push
cs
dec
repnz
or
sub
decw
push
fistpll
adc
call
sbb
shrl
pop
mov
inc
in
inc
mov
add
std
incb
sbb
xchg
mov
loopne
cmp
test
enter
or
in
sub
je
popa
fdivl
sub
in
and
cld
xchg
dec
or
cld
add
add
int3
or
bnd
inc
adc
mov
fwait
lods
imul
add
xchg
repz
clc
jae
mov
add
pusha
inc
sub
add
in
add
and
or
lods
jmp
adc
stc
divl
add
mov
test
call
cmp
das
imul
inc
xchg
add
jbe
mov
push
push
je
and
int3
loope
leave
xor
jns
mov
push
fnstenv
test
and
jp
in
std
xchg
mov
cmp
sub
fisubl
sbb
or
dec
rorb
in
ret
sbb
insl
sti
adc
mov
test
and
mov
mov
stc
popa
xchg
sbb
add
adc
loope
lret
cs
aas
xor
lods
dec
js
es
xlat
adc
inc
pop
lret
pushf
pop
jp
test
pop
add
mov
stos
or
cmp
loop
xchg
add
cwtl
nop
cmc
sub
das
fnstsw
test
and
test
add
icebp
ficoms
test
inc
dec
ret
mov
mov
lods
lods
push
add
fldl
xchg
mov
fwait
or
pop
dec
bound
pusha
push
dec
dec
sahf
shlb
in
or
push
sbbb
mov
fidivs
in
or
inc
add
mov
push
sbb
or
ret
daa
xchg
xor
rolb
outsl
push
dec
cli
sub
mov
push
push
adc
and
adc
sbb
and
sbbb
adc
or
inc
push
cwtl
hlt
sbb
pop
dec
aas
sub
lds
test
ss
out
mov
mov
or
cltd
mov
inc
test
dec
and
sbb
and
xchg
jno
dec
cmpl
orb
sub
mov
clc
test
fstl
push
loope
lret
cmp
ja
mov
insl
ljmp
arpl
dec
pushf
xor
cmp
orl
push
inc
das
inc
jle
jae
add
inc
add
xlat
test
sub
adc
jns
sub
shll
bound
adc
mov
mov
jb
sub
sub
dec
lret
add
and
add
movsl
sub
aam
pushf
inc
dec
add
fildll
hlt
sub
lds
leave
shlb
xor
pusha
dec
jns
xor
mov
and
sub
add
and
push
cmp
jae
add
shl
pop
mov
inc
cmpl
arpl
imull
rcrb
pandn
push
jmp
scas
push
in
repnz
dec
imulb
rcrb
popa
mov
repnz
mov
mov
imul
shlb
test
xor
faddl
dec
or
cmp
mov
cmpsb
icebp
sub
orw
enter
mov
insl
cmp
xor
gs
adc
mov
adc
push
icebp
adc
jp
out
stos
ds
dec
rorl
dec
mov
cmp
add
lcall
adc
add
or
inc
es
in
test
dec
and
hlt
mov
bswap
negb
sahf
into
addb
loope
add
xor
or
adc
aam
xor
adc
int3
enter
iret
add
into
fcmovnu
lret
faddl
fstp
fnstsw
loope
adc
in
xor
and
mov
add
adc
mov
or
xchg
out
adc
adc
daa
inc
inc
pop
mov
lods
and
add
dec
pop
xchg
andb
inc
and
inc
adc
dec
lds
jno
or
inc
jp
inc
push
mov
mov
inc
sub
inc
sub
enter
iret
and
inc
out
add
sub
mov
xchg
cs
aam
sub
shrl
xor
outsb
xor
icebp
xchg
xor
sub
lock
cwtl
stc
sbb
push
dec
mov
es
movb
andb
xlat
mov
mov
aas
fdivrs
jmp
cmpl
icebp
xorl
xor
in
xor
sub
int3
lods
mov
jmp
enter
rcl
les
lods
adc
and
inc
inc
mov
jno
fs
jl
jp
pusha
xchg
rcr
rcrb
jl
in
mov
xchg
lcall
movsb
or
sub
mov
or
or
sarl
fcoms
and
in
daa
push
negb
push
in
xor
dec
xchg
mov
sub
out
std
movsb
mov
mov
mov
inc
inc
add
xchg
pop
clc
mov
inc
xchg
repnz
or
sbb
push
fs
std
xchg
xorl
arpl
std
mov
xlat
jb
add
jmp
sub
stc
dec
inc
sub
sub
pop
adc
outsl
xchg
cli
cmpsl
dec
inc
in
inc
inc
cmc
std
mov
sbb
test
inc
lods
hlt
pop
mov
xchg
add
and
sub
add
cmpsb
testl
test
inc
cmpsb
fildl
pop
mov
cmp
fcompl
xchg
add
mov
repz
loopne
xlat
xchg
or
cs
mov
sti
es
addr16
xlat
sbb
int
mov
and
test
aam
loope
fstpl
in
push
out
or
jmp
je
fdivs
adc
test
in
scas
sub
adc
movsl
outsb
push
fimuls
in
pop
jns
mov
idiv
popa
jle
mov
cmpsl
mov
jle
lods
jo
xor
imul
or
xchg
jno
insb
inc
inc
in
xor
pop
or
int
push
ficoms
jg
adc
cli
inc
mov
sub
and
icebp
cli
aam
cmc
fldenv
adc
pop
inc
xor
cmp
cli
cld
lock
and
sbb
call
in
jp
outsl
push
flds
jae,pt
jmp
test
mov
les
push
sbb
test
out
scas
sbb
lea
xchg
and
add
sub
mov
ror
out
pop
cmpsl
xor
rclb
rolb
repnz
rorb
lods
lea
leave
and
hlt
sbb
sarb
negl
movsl
mov
in
fldenv
lret
dec
test
mov
not
gs
push
fsubrp
es
cmp
std
adc
mov
pusha
addl
les
mov
dec
lret
daa
leave
jg
aad
and
cmp
outsl
jle
aas
and
xlat
xchg
sub
ret
sbb
std
mov
imul
or
sbb
adc
lahf
test
xchg
shrl
in
movsl
fs
sub
push
xor
faddl
mov
inc
sbb
mov
aaa
and
cmc
enter
push
push
scas
push
cli
mov
ljmp
sbb
add
cmp
push
movsl
add
cmc
pop
or
test
inc
mov
mov
cld
inc
fadd
ja
into
pop
or
push
xor
inc
in
cmpsl
sub
and
push
testl
sbb
and
cltd
sbb
sub
cpuid
test
outsb
pushf
enter
push
jecxz
push
push
mov
das
add
pop
cmc
bound
les
rorl
mov
fnstcw
test
pop
out
scas
sbb
repz
mov
in
xor
xchg
clc
lock
cmp
mov
lcall
jg
jp
mov
fcoms
das
xor
lret
jne
sbb
inc
and
mov
push
push
insl
jecxz
and
mov
and
in
ljmp
andb
cmc
mov
repnz
test
mov
shl
mov
xor
clc
idivl
jne
mov
pop
ret
cmp
insl
iret
jnp
inc
jno
xor
nop
ljmp
into
iret
adc
mov
pop
jmp
aas
mov
stos
scas
ljmp
popa
mov
sub
and
xor
rorb
icebp
jnp
mov
in
pop
jo
in
jecxz
mov
test
mov
arpl
outsl
je
dec
push
in
scas
outsb
cmp
pop
in
cs
mov
enter
aam
push
fdivrs
sub
lret
cmp
inc
push
mov
mov
jmp
xchg
add
loop
aaa
sub
mov
shr
add
in
mov
cli
addr16
sbb
mov
popa
xchg
adc
sbb
sub
adc
les
cli
mov
dec
popa
lds
push
cmc
mov
mov
stc
loope
cmp
mov
push
data16
adc
xlat
mov
andl
push
fstps
data16
js
jg
pop
lods
cld
jns
cmpsb
loop
xor
enter
loop
cld
inc
sbb
jbe
out
test
cmp
cmp
repz
and
cwtl
sbb
push
xchg
mov
push
fisubrl
mov
mov
out
push
mov
bound
jne
xchg
or
fadd
mov
and
insl
lcall
jbe
cmc
pop
aad
adc
mov
les
jecxz
add
xor
or
lea
call
xor
insl
or
neg
test
test
out
pop
popf
mov
jo
loope
fs
lahf
daa
fs
icebp
xchg
and
inc
scas
mov
lods
push
std
shrb
ljmp
movsl
shlb
sub
and
sub
inc
shrb
sub
fistpll
or
mov
mov
leave
cmp
push
call
xchg
sub
std
cmpsl
in
stc
pop
cmp
aam
add
call
pop
sbb
mov
dec
mov
adc
cmc
push
sub
jge
pop
cmp
mov
mov
and
sbb
jno
adc
and
push
sbb
xlat
add
aaa
fstps
rorl
xchg
add
loop
jmp
adc
inc
fiadds
mov
jle
scas
inc
scas
test
pushf
jecxz
or
aaa
in
jg
cmp
xor
stos
xchg
xor
xor
mov
xchg
daa
jecxz
popf
cmp
push
sub
pop
test
ret
scas
scas
xor
sbb
mov
sbb
inc
cmp
pop
xor
aaa
and
mov
xor
pop
sahf
jno
loope
xrelease
cmpsl
sub
or
mov
rclb
sub
xor
ds
cmp
pop
jae
dec
push
pop
scas
sbb
dec
xor
cmp
sub
stos
repz
lods
jnp
cmp
mov
rcll
xchg
int
cmp
clc
movsl
clc
xor
out
sub
xor
pop
cld
jae
sarl
pop
xor
ljmp
and
xor
mov
stc
out
std
imul
lock
pushf
fbld
repnz
scas
shrb
lea
sahf
sbb
and
fcmovbe
push
je
addb
ret
and
test
mov
sub
fdivrp
ljmp
rol
mov
or
jns
mov
add
in
and
jg
dec
in
lock
movsb
sub
cs
cmp
adc
jle
dec
nop
not
add
inc
pushf
addb
mov
outsl
pop
mov
jle
jnp
jg
js
pop
sub
std
add
pop
add
or
cmp
xlat
aas
sub
mov
fsubs
sbb
rcll
jns
sbbb
xor
sub
jns
or
movsl
int
jge
imul
lahf
cli
jge
fdivl
jnp
arpl
xor
flds
mov
xlat
or
hlt
adc
and
jno
out
fsub
pop
or
cwtl
mov
cmp
add
add
fistpl
xchg
mov
outsl
int
push
push
mov
loop
xchg
test
sbb
in
imul
into
je
enter
sti
jnp
mov
or
stc
repnz
jne
decb
xor
shlb
pop
aas
idiv
in
aaa
nop
fisubl
push
lock
pop
leave
adc
jae
test
loop,pt
push
fwait
mull
divb
clc
rcrb
lret
push
in
sbb
out
hlt
not
push
sti
and
lahf
ljmp
ret
inc
les
aam
sbb
inc
lods
xchg
dec
mov
das
adc
gs
nop
pusha
xor
insb
and
sbb
fwait
xor
test
insb
repnz
sahf
jbe
repnz
xchg
mov
mov
cmpsb
and
push
mov
pop
inc
mov
pop
rclb
shl
xchg
adcb
add
data16
mov
xor
mov
pusha
rcrb
cmp
std
push
pop
and
dec
mov
leave
pop
movsb
mov
add
sbb
fcom
cmp
add
lahf
jmp
ret
popf
mov
fistpll
and
jno
cli
repnz
push
aaa
jo
adc
cwtl
clc
imul
cmc
std
add
daa
xchg
shlb
fistps
shrb
pop
fld
xorb
fcmovnb
jne
and
add
cli
sub
mov
mov
xor
daa
jno
cmp
jns
sbb
sbb
push
inc
mov
addr16
fldcw
cmp
daa
inc
jne
movsl
mov
xchg
sbb
leave
adc
test
sub
sahf
xchg
dec
push
mov
arpl
jl
dec
test
and
jns
or
push
cld
pop
ljmp
movsl
mov
fcomps
lock
out
imul
xor
inc
cwtl
ss
punpckldq
fistl
xlat
test
adc
fnsave
mov
outsb
pop
mov
in
lret
lret
test
clc
jp
jl
aad
xor
in
mov
lret
inc
jmp
je
insl
jecxz
xchg
cmp
ret
pop
jno
jp
xorl
inc
mov
or
or
lret
shlb
adc
lds
mov
inc
cmc
into
cli
loop
mov
mov
and
repnz
fadd
xchg
pop
lods
sar
pop
xor
dec
dec
jl
adc
push
in
icebp
mov
shr
push
xchg
cltd
ja
and
repz
cmp
neg
pusha
mov
nop
test
add
mov
xor
scas
or
call
add
popf
push
sahf
sub
movb
rcrl
push
lahf
mov
pop
cmp
and
cs
xor
out
roll
fstl
push
dec
scas
add
push
test
jg
repnz
jnp
dec
mov
js
clc
dec
push
jmp
mov
mov
cld
mov
fidivrs
lret
hlt
xchg
negl
dec
outsb
jmp
repnz
and
xor
in
sub
inc
int3
jb
cmp
es
cmp
pop
enter
cmc
in
dec
loop
dec
mov
fcomp
mov
fs
sbb
lds
aad
add
dec
loope
push
fdiv
test
fistpl
repz
fisttpll
inc
mov
jns
push
sbb
xchg
xchg
cmpsl
shrl
mov
xor
in
loopne
aam
test
icebp
loope
and
fcomip
mov
jns
adc
add
mov
mov
jl
and
out
fdivl
js
mulb
leave
sbb
mov
push
icebp
mov
lahf
add
fs
xor
ffree
cmp
into
mov
xor
and
dec
jne
pop
lds
xchg
pop
sbb
mov
fdivrl
xor
pop
addr16
push
jecxz
out
clc
orl
divl
cmp
rcrl
cmp
mov
ret
cs
sub
int
ljmp
loope,pt
xchg
out
inc
jle
in
xor
or
shl
lea
jo
push
daa
pop
movsb
rcll
mov
sub
aam
xchg
lahf
je
fmulp
call
aam
xlat
insb
bound
push
inc
xchg
icebp
dec
int
jns
inc
jl
iret
mov
xor
add
cmp
hlt
add
fs
testb
mov
xchg
xor
pop
bound
push
cmp
push
bound
xchg
fucomp
jle
mov
in
test
out
enter
adc
iret
adc
mov
movsl
mov
push
push
and
mov
aam
and
int
mov
dec
mov
jo
lds
or
test
hlt
aam
test
or
fmull
in
dec
mov
cmc
movsl
pop
lea
ljmp
rcrl
rsqrtps
out
pop
push
stc
int
cld
mov
into
push
in
adc
mov
add
cmp
pop
leave
rcrl
ror
adc
sbb
sarl
sti
cs
jb
hlt
pop
out
mov
dec
adc
inc
repnz
and
mov
lods
push
add
scas
aaa
pushf
jp
xchg
pop
shrl
push
leave
add
xor
adc
sub
push
repz
shll
cli
ficoms
dec
jb
push
mov
push
adc
cld
and
iret
fcomip
adc
clc
and
adc
fnstcw
push
sbb
push
push
xlat
xlat
mov
push
cltd
xchg
cld
call
or
dec
push
add
lea
xchg
fcoml
fmul
push
sub
push
xchg
and
out
in
insb
test
pop
add
insl
es
xor
adc
pop
je
adc
shrl
rorb
imul
mov
mov
sub
cwtl
push
xor
mull
fsts
pop
js
int3
push
ret
and
lock
sti
ret
movsb
cli
and
mov
roll
pop
mov
and
or
mov
test
cli
les
jo
sbb
outsb
mov
pusha
je
test
test
dec
repnz
rclb
jne
mov
enter
clc
movsl
pop
push
mov
rcl
mov
das
jp
out
es
jmp
sub
aad
repnz
ljmp
pop
loopne
sub
cld
pop
cmp
cs
inc
sbb
js
aad
adc
mov
cld
inc
add
xor
xchg
hlt
icebp
pop
mov
out
inc
arpl
jbe
cmc
push
insl
fisubl
call
xor
pushf
push
fwait
xchg
nop
sbb
and
xchg
mov
fdiv
pop
or
and
or
jae
repnz
out
je
orl
aam
pop
outsl
out
or
shr
and
and
or
mov
mov
hlt
movsl
mov
lret
sbb
add
mov
and
gs
call
sub
xchg
mov
dec
xchg
inc
repnz
mov
das
flds
popa
cld
mov
rcrb
push
out
cli
addr16
sbb
mov
and
fcompl
pop
dec
cmp
jno
sub
and
std
or
mov
aad
mov
out
adc
and
mov
xor
xor
test
pop
cmp
or
sbb
xchg
mov
test
int
icebp
sti
in
arpl
xchg
mov
or
test
mov
pop
aad
pop
inc
sbb
mov
arpl
sahf
imul
push
cmp
xor
imul
push
cmp
sub
fsubr
xor
xlat
insb
js
sarb
pop
ret
fldenv
adc
xor
movl
dec
iret
int
loope
cmp
arpl
in
mov
inc
xchg
outsl
psubsb
jo
and
movsl
dec
mov
xor
jo
cmc
cmp
arpl
es
jbe
test
shrb
jmp
loope
xor
loopw
mull
popf
lods
sbb
lock
pop
xchg
adc
scas
js
lock
scas
cmp
repz
sub
out
jbe
push
lock
test
sbb
aaa
xor
rol
in
test
test
in
iret
inc
xchg
push
mov
fimull
and
mov
je
inc
das
or
add
sbb
rcrl
scas
push
or
fcom
loope
and
dec
mov
imull
lret
lods
outsb
arpl
adc
aad
push
sbb
gs
scas
or
xor
cmp
insl
adc
int3
sbb
push
xchg
xor
lcall
shlb
push
out
adc
shrl
mov
jle
jo
or
xchg
mov
jmp
jbe
iret
cmp
stos
add
mov
fistpll
popa
jne
pop
jnp,pn
loopne
adc
or
mov
aas
aad
dec
pop
daa
dec
mov
es
mov
les
or
jmp
xlat
fisttpl
push
ds
mov
sbb
mov
out
out
sbb
cmp
xor
cmpsl
outsb
inc
je
xor
sub
adc
jno
pop
sub
xchg
cs
ja
jo
push
inc
imul
lock
dec
xor
mov
cs
loopne
cmp
sub
test
test
push
aam
mov
xor
out
rcr
lock
divl
sub
inc
test
and
inc
sar
xchg
negl
aam
in
jl
mov
xchg
mov
sbb
out
movsl
mov
sub
pop
cmc
jmp
and
sahf
mov
jl
or
cmp
scas
xor
jns
fiadds
cmp
mov
pop
xchg
lock
psrlw
or
fsubrp
test
mov
xchg
jle
mov
dec
sahf
mov
push
cltd
outsb
xchg
ss
sub
cmpl
dec
stc
or
inc
sub
mov
adc
movsl
clc
rcrl
and
xchg
mov
jbe
and
jnp
ret
fcomps
sub
xlat
out
jae
xor
adc
pushf
loopne
xchg
icebp
movsb
sub
outsb
sub
enter
jmp
les
mov
enter
leave
cmpsl
jmp
xchg
jl
push
iret
cmp
out
mov
and
cmp
or
dec
int3
and
inc
adc
out
dec
incl
jecxz
ret
cmpsb
adc
mull
clc
sub
pop
fldcw
xor
shr
sbb
mov
cmc
in
pop
add
inc
iret
enter
lea
dec
sbb
or
sbb
cmp
jl
push
out
in
movsl
sahf
cmp
ror
mov
pop
sbb
sbb
xor
out
imul
adc
cmp
imul
xchg
mov
lret
pop
mov
xchg
mov
push
stos
and
outsb
outsl
sub
pop
neg
gs
or
aam
sub
loope
repnz
cmp
pop
jno
es
push
and
stc
add
aam
mov
outsl
in
cmp
repz
adc
cmp
mov
sarb
cmp
mov
mov
ja
jns
int3
adc
adc
push
imul
sbb
stc
push
mov
fnstenv
out
dec
repnz
test
aaa
mov
sbb
jo
jecxz
cmpsb
out
push
out
es
loopne
cmpsl
lods
cld
shr
test
xchg
inc
push
sub
lahf
aas
xor
or
push
mov
and
jg
call
out
inc
lea
fidivs
fsubr
insb
mov
call
mov
stos
and
sub
test
test
cltd
je
lret
sub
je
jp
inc
dec
mov
call
cltd
and
fsts
cmpsb
sub
sbb
ret
sub
rorl
xchg
fnstsw
xchg
clc
dec
add
and
cmpsb
ljmp
cmp
add
and
shr
cmc
push
fcmovnu
sub
add
insl
jnp
arpl
push
in
push
iret
hlt
cmp
adc
jb
jl
cltd
sbb
mov
testl
jmp
loopne
sbb
enter
cmp
repnz
push
repz
and
add
sbb
in
mov
in
int3
pop
xor
mov
add
xor
xchg
cld
xchg
ds
pusha
mov
sbb
std
test
stc
lcall
lods
test
out
mov
mov
mov
push
lcall
mov
les
lods
int
stc
add
lcall
sar
sarb
add
mov
inc
call
and
xchg
mov
int3
call
mov
insb
insb
movsl
rol
test
push
sarb
jne
insl
aad
jnp
aam
leave
aas
in
fdivrl
pop
cld
leave
ficoml
jne
shrb
jnp
cmp
outsl
insl
mov
dec
test
adc
jle
divb
cmp
jns
mov
push
pop
mov
xchg
sbb
xchg
test
shr
imul
rcrl
cmp
push
loopne
movsl
or
in
frstor
ret
jnp
xchg
leave
sbb
ret
mov
jo
mov
adc
cmpsl
xchg
daa
adc
mov
ss
lods
push
mov
and
out
daa
aad
filds
mov
sub
pop
andb
or
aam
in
and
dec
push
mov
inc
xor
std
imul
mov
sub
xchg
js
cltd
cmp
cli
pop
inc
lods
aad
sub
xchg
dec
add
test
cmc
xchg
repnz
adc
nop
movsb
mov
les
clc
aas
bound
inc
add
lahf
addr16
lock
and
test
sbb
fsub
lds
popa
push
sub
pop
add
arpl
fldcw
pop
movsb
cmp
pop
adc
icebp
cltd
adc
cmp
mov
mov
xchg
sub
in
cmpsb
arpl
mov
xorb
push
cmp
push
xchg
les
pop
stos
lock
shrb
and
mov
xchg
mov
mov
imul
sub
pop
cmp
movb
cmp
inc
mov
xlat
hlt
pop
aam
inc
push
mov
cmpsb
hlt
pop
cmp
loopne
ja
pop
pushf
or
lcall
fbstp
int
inc
pop
mov
andl
adc
lea
out
icebp
and
jmp
mov
popf
cs
rol
mov
fcomip
jo
cmp
adc
push
fbld
jns
adc
or
sub
lret
ja
arpl
xor
aaa
in
pop
add
jmp
mov
gs
incb
mov
pop
mulb
xor
test
sbb
repnz
out
cld
icebp
mov
adc
jmp
bound
stc
adc
sarb
cmp
sub
popf
lret
ds
cmc
cmpsl
sub
push
cmp
adc
faddl
cmp
dec
push
shl
in
test
stc
push
jl
jbe
sbb
ds
sbb
shlb
out
in
hlt
ss
cmp
sbb
ds
and
or
es
sub
sbb
xlat
mov
xchg
cmp
mov
cltd
pop
fdivrs
pop
mov
lahf
push
pusha
push
imul
out
test
mov
mov
add
pop
ret
xchg
shl
mov
add
shl
bound
fldl
cmc
push
dec
bnd
xor
jb
cwtl
cmpsb
movsl
int3
cli
mov
mov
fmull
lahf
lock
mov
jmp
jnp
repz
fwait
repnz
test
leave
sub
test
out
push
jns
fdivrs
xchg
shlb
mov
pop
hlt
dec
testl
mov
or
gs
dec
add
pop
dec
cmp
cmp
or
loop
cld
mov
mov
enter
arpl
xor
sub
push
rcll
add
movsl
outsb
in
test
or
mov
mov
xchg
pop
push
xor
mov
mov
cld
lcall
in
sahf
xchg
mov
jmp
sbb
ret
ficoml
mov
insl
mov
xchg
xchg
movsl
lods
cmp
cli
into
cld
mov
mov
dec
mov
sbb
cmp
push
fisubrs
fs
mov
fwait
sahf
sbb
movb
pop
adc
push
cltd
scas
hlt
jne
test
adc
vcvtss2si
jmp
and
popf
and
insl
outsb
pop
or
and
adc
mov
in
sub
mov
cmp
ljmp
mov
es
outsb
aad
xchg
sbb
sbb
mov
aas
cwtl
lea
imul
shll
adc
push
add
adc
in
testb
movsl
sub
shll
sar
or
push
xor
jl
cmc
movsb
enter
push
lods
dec
repz
mov
sub
pushf
insb
inc
loope
xor
mov
leave
sub
and
mov
cmp
lea
xchg
mov
inc
int
sub
rol
or
push
mov
dec
add
out
loop
or
mov
adc
rcl
cmp
aam
inc
mov
adc
int3
pop
jecxz
mov
fs
xor
mov
push
je
add
xor
insb
scas
dec
fsts
mov
jne
loope
inc
cld
mov
cmpsl
sub
jl
jo
imul
repz
popa
fcoms
test
dec
data16
xchg
aas
jns
fstps
push
ret
rcrl
mov
int3
cmp
push
push
xchg
xor
push
shl
pop
cli
call
test
or
adc
cs
jle
icebp
mov
dec
lret
jle
fidivrs
fistps
fwait
insl
and
fdivrl
aas
inc
sbb
sub
push
negl
les
cs
out
addr16
pop
push
mov
in
aad
or
sub
dec
roll
lock
lahf
movsb
mov
in
jecxz
iret
jmp
push
inc
and
fdivrp
in
push
stos
bound
mov
imul
sub
lea
shlb
stos
and
inc
hlt
scas
mov
addr16
ret
stos
push
or
icebp
jl
rolb
sub
aaa
xchg
xlat
ficoms
adc
rorb
sahf
aam
dec
jne
pusha
inc
dec
dec
es
sbb
or
imul
mov
push
ljmp
push
cmpsl
mov
nop
test
aad
insl
fstpl
aad
nop
mov
out
test
xor
adc
in
dec
push
rcrb
sbb
sub
mov
icebp
mov
icebp
push
sub
lahf
aam
push
fadds
inc
xchg
dec
or
les
stos
mov
mov
adc
fistpll
inc
xor
mul
mov
pop
lret
aam
add
adc
movsl
adc
cltd
fcomp
inc
add
mov
fdivrl
and
repz
ret
xchg
rcl
jmp
sbb
inc
pop
mov
add
stos
jmp
scas
dec
mov
sar
dec
xchg
in
mov
cli
sbb
and
fcmovnbe
sbb
fidivrs
enter
das
movsl
in
pop
pop
out
je
xchg
pop
es
lahf
mov
jns
shll
testl
mov
jmp
xor
pop
loope
sub
pop
enter
xor
sub
jae
and
inc
mov
pop
in
sub
ljmp
sub
push
xchg
cmpsb
es
sub
loop
repnz
xor
vshufps
xchg
lock
rol
in
and
mov
jmp
jo
ficomps
xchg
out
pop
inc
mov
lds
in
xor
push
fs
shrl
aad
lock
dec
pop
jecxz
pop
addr16
or
jg
ret
sub
movsl
fcomps
daa
and
pop
int3
insb
pop
out
insb
cmp
out
or
repz
aam
sarb
dec
ret
and
aas
mov
mov
push
sarl
pop
imul
and
push
dec
ljmp
daa
addr16
fdiv
pop
icebp
sbb
mov
pop
lods
sahf
cld
pushf
test
pushf
mov
push
inc
lea
adc
cmc
mov
repz
mov
inc
xor
cmp
jnp
incl
cmp
fdivs
xor
lahf
movsl
mov
push
xchg
ljmp
imul
xor
lods
mov
ret
into
out
and
push
mov
dec
sub
out
shl
pop
xlat
xlat
adc
ret
add
out
into
push
or
pop
add
add
xor
add
mov
paddusb
stos
xchg
xchg
cmp
in
or
mov
jg
sub
push
aam
pop
aas
mov
les
dec
hlt
xchg
push
nop
ret
stos
push
pop
adc
xchg
jecxz
clc
mov
je
repz
in
testb
jns
mov
stos
cmp
data16
inc
add
leave
xchg
je
ss
or
xor
adcb
pusha
out
sarb
stos
repz
test
push
fldenv
enter
xchg
in
or
daa
cmp
ret
lock
jg
test
and
add
int3
xchg
loope
stos
mov
in
push
push
pop
arpl
jne
mov
rclb
or
dec
in
mov
notb
xchg
push
mov
sti
add
addb
stos
inc
inc
dec
mov
into
int
rcll
push
or
mov
xchg
xor
lock
fldenv
xchg
pop
sub
jecxz
or
arpl
stc
cmp
cmp
mov
insb
lahf
add
mov
mov
idivl
jns
xor
sub
adc
decb
pop
je
sbb
fstps
inc
mov
rolb
lock
cmp
addr16
cmp
movsl
xchg
pop
mov
loope
jno
rol
pop
leave
test
cmp
fs
das
lret
enter
das
lret
xor
mov
xchg
lea
into
adc
push
fmuls
pusha
loop
inc
inc
pushf
push
ds
fldl
mov
cmp
enter
hlt
ficoml
cmp
nop
jne
xchg
pop
sub
and
faddl
xchg
test
mov
inc
les
je
dec
fnstenv
leave
xor
in
adc
dec
decl
xchg
or
cmp
pop
shlb
sub
push
leave
shrl
lea
add
out
popf
out
out
mov
leave
loope
fldt
out
inc
or
idivb
add
in
out
fnstsw
fwait
mov
pop
ds
or
jno
sub
rolb
jecxz
and
das
popf
pop
pop
add
jge
dec
mov
fidivrs
pushf
aam
aad
mov
idivb
sub
push
mov
pop
lret
jmp
pusha
movl
mov
mov
in
ficoms
out
in
fsts
aam
fcoms
ret
in
fistl
mov
insl
out
mov
jecxz
orl
insb
cmp
popf
mov
clc
fcmovu
or
push
cmp
into
in
cs
push
mov
lods
cmp
mov
sub
repz
in
iret
bound
and
jno
inc
and
xchg
sub
and
push
scas
test
sub
jae
push
pushf
inc
ds
enter
adc
pop
jl
xor
int3
shl
xchg
adc
fisttpl
cmp
cmc
cmp
add
xor
cmc
cmp
int3
cmc
sbb
jp
in
xchg
shlb
inc
fcomps
popf
cli
add
mov
jbe
mov
mov
ficoms
call
rol
call
jmp
sub
cmp
dec
pop
mov
inc
xor
test
push
pop
adc
xchg
lds
ss
icebp
pusha
push
xchg
aad
jp
aam
mov
inc
jae
mov
sub
add
xor
cmpsl
fdivrl
push
cmp
pop
es
roll
rcr
add
lahf
fistpll
out
es
out
cmp
xchg
les
int
cmpsl
in
fcompl
lods
ds
loope
and
mov
cltd
jmp
or
das
jo
add
cltd
mov
jl
jmp
fidivrl
xlat
jge
out
hlt
xor
push
hlt
or
mov
imul
frstor
push
mov
lcall
xor
daa
loope
and
sahf
shrl
fisubl
notl
push
mov
inc
out
or
dec
fidivrl
mov
jmp
xchg
and
xor
cmp
mov
cmp
mov
lret
xchg
mov
hlt
sub
out
lcall
call
sahf
adc
dec
in
push
enter
clc
in
ror
mov
xlat
xchg
ja
jge
mov
cli
pushf
ret
add
das
inc
gs
cmc
insb
stos
pushf
movsl
xor
ret
fcmovnu
sub
stc
sbb
aas
xor
mov
cmp
jb
xchg
sub
orl
fwait
scas
mov
add
push
push
idiv
cwtl
lret
sahf
lods
ror
aam
xor
and
stos
ss
stos
sub
out
jnp
in
cli
rcrb
ljmp
push
imul
leave
cmpsb
mov
sub
sub
xchg
jg
shll
xor
pushf
aaa
and
enter
sub
xor
repnz
arpl
aad
icebp
mov
xor
xor
sti
int3
pop
pop
sub
daa
fnstcw
icebp
push
aam
mov
push
push
or
movsl
xor
mov
mov
daa
pop
imul
loope
movsb
into
addb
pop
push
cmpsb
ds
xor
aad
mov
pop
and
cmp
xor
loop
mov
ds
pop
jecxz
push
xlat
cmp
mov
adc
pop
icebp
inc
inc
mov
pusha
std
sbb
xchg
pop
addr16
repz
test
icebp
test
cs
popf
lcall
xchg
inc
clc
mov
sub
sar
negb
gs
dec
push
js
push
sbb
out
jb
or
and
lahf
sub
cld
xchg
lea
and
leave
xchg
sub
dec
scas
jb
std
int
pop
jecxz
mov
jge
mov
mov
loopne
popf
stos
and
xchg
in
adc
insl
mov
jmp
arpl
sbb
jb
and
pop
mov
in
mov
in
lods
push
mov
into
mov
aam
call
fidivrs
call
sub
xchg
push
movsl
sti
repnz
dec
loopne
xor
inc
sbb
rclb
mov
stos
ds
test
vpaddusb
adc
pop
imul
xchg
sbb
pop
cmp
mov
pop
pop
and
mov
lea
jmp
arpl
mov
sub
out
or
cmpb
push
sub
dec
pop
jo
pop
sahf
xchg
psubsw
sub
xor
jo
aaa
lret
mov
lods
sub
es
test
mov
mov
into
mov
pop
pop
dec
rclb
enter
pop
jle
adc
xor
pop
xchg
sub
arpl
dec
and
adc
add
push
pushl
sti
fisubl
mov
test
dec
in
pusha
inc
push
sbbb
or
cmc
into
stc
notl
faddl
test
mov
push
enter
insl
and
std
push
fs
aaa
imul
pushf
xchg
add
push
ret
test
xlat
inc
xchg
nop
fs
inc
xchg
out
cmpsl
inc
jae
out
fidivs
xchg
fadds
test
mov
xchg
movsl
in
insl
int3
push
push
inc
cwtl
arpl
iret
lahf
out
mov
imul
iret
mov
daa
jecxz
jge
repz
and
sub
push
imull
mov
jnp
jmp
add
and
inc
les
in
std
jnp
pop
inc
lods
ja
rcrl
addl
std
insb
enter
mov
fimuls
dec
push
push
dec
add
mov
mov
sbb
jecxz
into
or
sub
pop
push
push
push
nop
scas
popf
test
mulb
hlt
jmp
inc
cld
and
pusha
aad
icebp
popf
push
pop
fisubs
mov
and
push
pushf
dec
lock
out
insl
icebp
stc
add
pop
imul
xlat
push
cmpsl
xor
or
pushf
jo
mov
mov
std
add
pop
push
neg
and
stos
in
or
test
xor
xlat
mov
pop
xchg
clc
pop
mov
test
dec
or
cmpsb
clc
lret
sub
sbb
lahf
mov
xor
dec
inc
outsb
fimuls
mov
mov
or
aas
jmp
imul
out
orl
pop
icebp
push
sub
cli
mov
xchg
lods
aaa
sub
shl
push
aam
repnz
std
pop
cmc
movsl
sbb
mov
pop
stos
cmp
cld
icebp
je
out
hlt
mov
jnp
sub
sub
es
mov
mov
insl
jge
orl
lea
std
and
jnp
jmp
or
xor
mov
out
mov
outsb
mov
lret
jne
push
rcrb
subl
test
or
add
frstor
aas
lock
lods
loopw
shl
inc
sbb
jmp
lret
imull
test
frstor
nop
xor
push
mov
adc
push
jge
mov
lahf
and
sbb
movsb
mov
fiaddl
popa
loopne
inc
cltd
ret
or
push
rclb
jae
test
clc
mov
movl
out
aad
sub
mov
adc
jle
fnstenv
fidivrs
xchg
nop
xchg
xchg
inc
sbb
ficomps
je
or
bound
lock
xchg
scas
or
in
mov
mov
lock
jb
in
mov
xchg
divb
and
xor
daa
idivb
adc
push
lods
in
aam
adc
pop
sub
ds
daa
fisttpll
push
lock
xor
out
popa
in
fisubs
pop
jp
shrb
jnp
fwait
ljmp
int3
xor
xchg
pop
push
lods
push
aam
mov
out
pop
in
pop
jp
lock
sbb
or
lcall
adc
aas
jne
xchg
adc
shl
add
rclb
pop
lds
sub
push
pop
push
pop
pushf
xlat
push
and
push
or
adc
mulb
cmp
push
dec
xlat
pusha
fsts
and
jg
lods
cmp
aaa
shll
and
out
sbb
or
mov
popa
mov
xchg
sub
cld
xchg
xchg
mov
fistpll
jge
push
movsl
jp
lds
cmp
popf
xor
adc
movsl
cmp
mov
push
adc
mov
pop
cmpsb
sbb
iret
mov
mov
pop
mov
ret
xchg
lret
cmpsl
xchg
push
fsubs
lret
cwtl
inc
mov
lret
or
cltd
mov
jge
ss
icebp
pop
xor
adc
movsb
and
cmp
mov
clc
leave
sbb
cmp
or
sar
jo
pop
adc
shlb
fidivrs
mov
jnp,pn
xor
ja
jae
inc
test
imul
adcl
mov
jle
outsl
insl
jl
cmp
fcmovnb
xor
adc
js
out
jl
loope
xor
ja
push
out
sbb
pop
add
xchg
push
imul
imul
pushf
mov
inc
jbe
shl
cmp
scas
jp
clc
loopne
cld
mov
pop
scas
aad
std
iret
xchg
lret
xchg
fdivp
aam
cmp
add
ss
out
push
pop
jg
push
cli
pop
jmp
lahf
inc
sbb
enter
xchg
xorb
mov
fldenv
gs
xchg
es
testl
xor
rorl
mov
hlt
and
dec
jecxz
popf
vrsqrtps
flds
rcrb
shrl
mov
enter
fucomip
adc
test
outsl
lea
test
sub
test
xor
aaa
xor
adc
cmp
jns
in
pop
mov
loopne
bnd
xchg
push
mov
or
sub
and
cltd
xor
add
xor
pop
hlt
enter
adc
aas
jmp
sub
out
divl
jo
rolb
sbb
out
cld
lods
insl
jns
pop
clc
rol
test
popf
jge
in
ds
mov
in
and
aaa
movsb
pop
xchg
mov
xchg
popa
cmp
insl
pop
cld
dec
leave
dec
sbb
cwtl
adc
jecxz
jae
jne
out
mov
mov
cli
and
cmp
je
aam
add
mov
test
pop
cmc
shll
aaa
and
xchg
aad
jle
push
mov
mov
push
mov
jo
gs
inc
mov
cltd
xor
fstl
aad
jp
mov
cmp
stc
icebp
fwait
push
shrl
arpl
push
lds
cmp
pop
fcompl
mov
es
sub
mov
sbb
icebp
in
das
and
insl
dec
les
addl
sub
dec
xor
xchg
into
add
push
or
lea
test
jo
mov
mov
push
mov
js
xchg
pop
mov
xor
jo
addb
adc
into
rorl
rcll
xor
xor
xor
ret
cld
cmc
sarl
clc
mov
pop
adc
or
inc
pop
pop
loopne
adc
ds
sub
inc
test
stos
test
inc
sbb
jae
mov
lock
jb
imul
lds
or
adc
cmpb
nop
orb
and
lret
pop
lret
mov
testb
cmpsl
movsb
leave
push
leave
push
jle
mov
in
test
loop
das
negl
mov
push
adc
insb
into
fldcw
mov
cmc
fidivl
lret
shll
inc
iret
std
sysenter
pop
cmp
push
push
mov
insb
xchg
sbb
push
test
psubsw
inc
xor
lret
aam
std
aas
or
cmpb
or
add
mov
xor
adc
repnz
mov
in
nop
mov
or
add
outsb
clc
daa
in
fsubrp
and
and
or
mov
popa
sub
iret
popa
ss
iret
leave
xor
leave
jle
xor
pop
push
cmp
imul
jae
mov
inc
cmp
push
xor
pop
and
add
and
call
add
add
sti
orb
cmc
in
or
imul
or
das
movsb
adc
mov
popa
adc
in
pop
leave
out
xchg
push
inc
sbb
xor
pop
inc
out
xor
xchg
lahf
shll
cltd
cmp
fwait
subb
in
insb
pop
imul
mov
dec
movsb
jne
push
lret
mov
testb
jno
test
cmpsl
xchg
jge
lret
lock
test
xchg
in
ja
sub
mov
dec
xchg
or
jnp
lock
outsb
dec
jle
nop
push
lock
pop
test
out
fwait
xor
or
pop
inc
dec
cwtl
add
fs
dec
nop
test
stos
inc
jno
lods
push
jno
or
adc
pop
push
mov
popa
xchg
mov
inc
popf
xchg
mov
rclb
or
test
lea
pop
mov
mov
gs
xchg
test
gs
jnp
loop
leave
inc
mov
pop
loope
cwtl
mov
stc
pushf
lds
ja
inc
scas
mov
in
cli
xchg
xchg
inc
xchg
xchg
push
stos
insl
filds
push
fidivl
test
dec
sahf
mov
dec
call
in
lea
xchg
dec
pushf
lock
jo
mov
cmp
fcompl
xchg
test
sbb
fadd
outsl
jl
mov
mov
addb
scas
mov
xchg
in
inc
ds
repnz
pop
mov
inc
fnstenv
lea
in
pop
cs
cmpl
cmpsl
mov
pop
lock
mov
pop
xchg
lods
inc
pop
add
out
mov
push
movsl
mov
sahf
adc
xor
clc
dec
data16
hlt
push
xchg
mov
loopne
nop
add
addl
mov
inc
mov
sahf
sbb
mov
sub
mov
cs
sub
xchg
xchg
mov
mov
xchg
inc
js
mov
repnz
mov
je
jp
mov
rcr
sbb
xchg
fldl
jecxz
push
lods
inc
xchg
loop
and
adc
dec
aam
mov
cmp
enter
mov
sub
call
lea
adcb
mov
in
mov
mov
test
je
scas
lcall
jo
mov
push
repnz
xor
sti
sbb
shlb
xor
test
xchg
inc
xchg
and
cwtl
aam
in
fadds
cmp
repnz
and
cmp
xchg
lcall
push
jb
cmpsl
dec
xchg
mov
mov
push
ss
push
rcrb
jae,pn
add
imul
shll
pop
addr16
mov
jge
xchg
ret
in
jb
dec
pop
sbb
dec
mov
or
test
sub
pop
lds
lret
push
sub
dec
or
cmpsl
int3
adc
jmp
xor
int3
mov
sbb
les
dec
push
icebp
js
fwait
mov
repz
inc
push
push
test
mov
inc
setb
stos
outsb
popa
scas
xchg
daa
pusha
jns
push
adc
xor
push
lret
stos
mov
test
dec
addr16
popf
xor
fs
push
mov
sarl
adc
cmp
sub
daa
stos
sbb
jl
sbb
or
jg
icebp
scas
mov
sub
ja
xor
out
xchg
mov
pop
cs
outsb
enter
scas
pop
cli
cmc
movsb
repz
xchg
addr16
mov
xchg
xchg
xchg
jbe
push
pushf
pop
rol
push
jb
aaa
pop
mov
and
call
xor
jg
repz
outsl
insl
data16
incl
std
xchg
lahf
lahf
cmp
fwait
pop
ficompl
cmpsl
aas
jb
pop
fmull
or
cmpsb
idiv
bound
cmp
sub
arpl
testb
add
into
adc
ret
fbstp
and
fs
inc
lahf
sub
loop
insb
jmp
popa
outsl
xor
inc
sti
scas
adc
lcall
adc
add
cli
mov
cltd
cmpsb
jmp
xchg
dec
test
dec
lods
outsb
push
inc
in
lods
mov
es
notl
xor
into
cmc
pop
add
test
fstpl
std
inc
pop
ret
xor
aam
fcomps
pop
cmp
pusha
outsb
mov
out
test
insb
and
dec
cli
enter
out
sarb
ret
sub
inc
imul
push
xor
pop
js
and
push
and
aas
es
cmp
in
and
xchg
sub
rclb
stc
dec
aad
mov
lods
push
lods
and
and
and
icebp
and
xchg
cli
push
inc
jle
out
fildl
jbe
out
shlb
xor
movsb
cmp
pop
mov
cmpsb
mov
cld
sbb
cmp
pop
gs
add
repz
rcrl
mov
sbbb
fnstcw
pop
xchg
cmp
and
je
lods
pushf
icebp
jne
mov
and
sbbb
adc
dec
cld
push
push
sbb
pop
xor
scas
movsb
lods
std
out
lods
ret
ffreep
jg
aam
mov
clc
bound
repz
add
outsl
push
int3
fdivs
and
cmpsl
cmp
or
push
dec
xchg
ds
cwtl
shr
das
mov
hlt
xor
adc
jno
xlat
aam
xor
repz
lret
or
or
or
jp
jmp
sub
or
int3
outsb
movsl
xor
pushf
aam
jb
or
or
icebp
adc
xor
ds
jno
mov
aam
sub
xchg
ffree
fisttpl
mov
neg
pop
push
lcall
add
xchg
cltd
leave
mov
or
incl
lods
test
mov
and
cmp
cltd
iret
pop
mov
mov
dec
gs
sbb
into
and
ret
mov
and
movsb
jg
push
jecxz
movsb
lods
mov
mov
and
js
pop
sarl
mov
push
mov
lods
pop
inc
stos
inc
add
xlat
jnp
pop
popf
jl
add
add
insb
dec
pop
aad
pop
xchg
pop
pop
loop
js
mov
mov
movl
push
loop
pop
sarl
dec
mov
fs
stos
cmc
push
adc
in
xchg
imul
call
jbe
pop
xor
lods
icebp
cmpl
and
pop
sbb
hlt
mov
xor
push
jns
lock
push
inc
add
enter
pop
cld
jecxz
inc
das
idivb
or
mov
jle
sub
mov
loop
nop
xchg
movsb
das
cmc
adc
jmp
rcrb
sbb
hlt
xlat
jns
sub
dec
add
dec
fsubrl
push
dec
ret
enter
in
sbb
xchg
cmp
jb
out
jp
xchg
cmp
xchg
lods
push
mov
xchg
ret
jae
sub
cwtl
xor
xchg
sub
pop
iret
cmpsb
mov
cmc
xor
mov
ret
iret
cmp
loop
and
push
rcll
fisubl
sub
pop
adc
fdivp
jmp
fisubl
cli
jo
inc
pop
je
xor
aas
or
ret
shr
adc
roll
mov
mov
mov
jp
sarb
sub
mov
lods
gs
clc
dec
in
arpl
mov
cmpsb
pop
fstl
jns
inc
pop
xchg
sub
mov
fs
imul
cli
push
cs
int
insb
imul
aam
lock
in
push
mov
mov
setg
mov
adc
aad
mov
mov
mov
ljmp
ljmp
mov
sbbl
and
sbb
enter
mov
jnp
sbb
and
mov
mov
jg
sbb
lock
xor
jb
sbb
sar
jne
jns
mov
mov
repz
jo
jae
subb
cmp
ljmp
cmp
mov
mov
and
and
xchg
pop
punpckhbw
sbb
pop
and
push
push
call
fimuls
rorl
cmc
cmc
cld
push
adc
dec
bound
sbb
and
mov
push
xchg
inc
mov
mov
repz
hlt
sarb
xchg
dec
rclb
push
aam
mov
bound
repz
test
sub
stos
fnstcw
mov
fsts
cmp
and
ds
fistl
fstp
mov
test
push
and
test
cs
mov
cwtl
les
adc
in
and
xchg
dec
int3
call
out
mov
add
xchg
and
add
lds
sub
out
add
out
lock
mov
mov
inc
jp
mov
fisubrs
lods
ret
pop
push
sub
mov
pop
jbe
sar
jg
jno
jns
or
and
or
mov
or
sub
ss
or
jmp
rol
sbb
int
push
lds
mov
roll
mov
scas
push
jae
mov
pop
stos
add
fwait
push
lods
out
cs
jecxz
mov
pop
out
mov
xchg
or
cmp
cltd
test
pusha
push
jmp
flds
clc
mov
jg
push
divb
pop
dec
mov
sub
incb
jo
push
jecxz
and
sahf
imul
cwtl
cmc
xor
sub
or
mov
xchg
dec
std
push
stc
dec
xchg
add
xor
pop
jb
outsl
or
xchg
jnp
ljmp
xchg
xchg
aad
arpl
or
lahf
mov
pop
das
push
add
out
pop
mov
les
out
xor
cmpsl
iret
push
shrb
pop
cli
imul
stos
mov
jnp
sbb
xlat
pop
int
dec
pusha
cltd
fstpt
mov
jmp
hlt
and
jg
inc
ffreep
sbb
outsb
or
nop
dec
aas
shl
sub
or
add
mov
push
mov
bnd
cmp
mov
hlt
lret
lea
adc
aam
imul
insb
pop
pop
jnp
fcoms
mov
fimuls
push
ja
mov
push
jmp
mov
inc
jg
sbb
jno
inc
adc
loopne
lahf
and
lea
push
daa
add
mov
push
lret
loope
pop
ljmp
mov
dec
rol
jp
int3
add
fbld
sub
sbb
pusha
lret
sbb
xchg
sub
sti
or
dec
pop
mov
shlb
and
jp
int
ss
and
fdivr
repnz
aam
stc
lock
pop
fs
cmpsb
or
or
inc
add
int
pop
loope
push
std
push
cmc
cld
fldenv
cmp
cli
loop
push
add
jb
out
push
jne
pop
dec
lds
and
and
mov
cltd
iret
cli
and
aam
fsubrs
mov
lods
xchg
aaa
pop
sub
sub
aam
out
in
jl
xchg
mov
in
dec
outsl
test
movsl
out
in
mov
pop
cs
mov
push
insl
or
fwait
push
xor
test
clc
imul
fistps
cmp
cmp
hlt
push
dec
or
mov
movl
push
xchg
movsb
push
jns
xchg
fnstenv
dec
cld
mov
mov
inc
jbe
repz
std
call
mov
push
ljmp
testb
pushf
jno
jb
cmpsb
lds
pushf
mov
es
call
in
aas
insl
pop
loope
xchg
jne
sub
leave
xlat
out
call
in
sub
jno
es
hlt
push
shrb
notl
mov
int
mov
push
sub
pop
xor
shrb
sub
or
mov
lea
daa
in
adc
fbstp
add
gs
and
push
push
loopne
rorb
pop
popa
ss
xchg
xchg
pushl
loopne
cltd
sub
inc
addr16
mov
shl
push
scas
dec
call
add
lods
mov
popa
aam
inc
out
mov
inc
xchg
sbb
jmp
cmp
aam
push
les
das
repz
imul
fwait
pop
in
rcll
out
pop
pop
aad
clc
mov
jb
shrb
hlt
or
or
gs
fstps
ja
mov
aas
divl
adc
pop
or
inc
out
ret
aas
test
push
je
adc
inc
sbb
mov
cmp
and
or
mulb
sar
adc
cltd
mov
clc
rol
icebp
xlat
add
sarl
cs
xor
or
sbb
jbe
stos
and
cmp
xor
sti
sbb
jno
fld
aas
dec
xor
pop
sub
call
or
add
fidivrl
push
inc
pop
scas
fistps
jo
inc
xchg
mov
adc
outsl
sbb
in
sub
xchg
icebp
adc
mov
xchg
addr16
stos
mov
add
fcomps
mov
fdiv
popa
adc
jp
and
fwait
ja
sbb
cmp
test
inc
sti
and
sbb
enter
das
adc
jns
ficomps
pop
pusha
push
test
mov
and
test
mov
vmovaps
xchg
stos
ss
or
add
ja
mov
lahf
bound
fisubrs
lea
jl
add
push
jge
and
or
dec
vpmaxub
pushf
mov
outsl
xor
pusha
push
xchg
stos
frstor
repnz
mov
aad
pusha
xor
pushf
dec
into
sub
inc
into
clc
shrl
int3
in
sbb
daa
pop
jns
popa
gs
fsubl
push
cmp
mov
sbb
fdivl
daa
push
cli
jno
push
mov
sub
movsb
out
lcall
dec
sahf
jo
shll
ljmp
xchg
sub
out
push
dec
sbb
pop
pushf
bound
jp
gs
aaa
in
cld
stos
add
test
roll
jl
popf
inc
fwait
add
icebp
test
test
out
mov
pushf
out
cmpsb
out
iret
cltd
fldt
lret
sbb
pop
pop
mov
std
into
or
int
js
xchg
dec
pop
ja
sub
add
xor
xor
mov
mov
fsubrs
sub
jne
cmp
cmpsb
mov
addl
sbb
ss
push
jae
shrl
ds
in
inc
mov
cmp
icebp
mov
mov
push
fsubl
movsb
adc
fisubl
and
std
fisubrl
sbb
fdivl
imul
jg
xchg
fildll
pop
or
aad
and
cmc
data16
jb
lret
call
dec
movsb
sbb
push
mov
jb
mov
cmpsb
fucomip
je
out
xchg
pushf
fstp
jne
cld
ds
popa
orl
xchg
into
dec
push
mov
cli
and
ja
and
ficoml
fidivs
rol
dec
je
incl
mov
pusha
cld
fnstenv
jge
roll
pop
fnstenv
sub
xchg
sbb
pop
lds
xchg
int3
scas
ja
sbb
sub
pop
jbe
out
lods
cmp
cmp
daa
fldenv
mov
negb
or
rcrb
mov
mov
push
jl
pusha
mov
enter
mov
add
dec
cmpsl
jae
mov
adc
or
jns
sbb
adc
les
int3
ja
ja
dec
aas
cmp
jns
arpl
push
mov
adc
pusha
dec
xchg
ds
mov
ret
and
psubusw
fcomip
insb
jae
hlt
dec
pop
push
xor
inc
das
pop
xor
dec
cmc
out
call
ret
xchg
mov
scas
shlb
in
aaa
and
cltd
aad
jae
pop
xlat
push
test
or
mov
lods
and
jle
aas
icebp
out
mov
jmp
addr16
xchg
mov
xchg
aad
out
jmp
daa
xchg
shlb
pop
aas
out
pop
push
sbb
cmp
push
fsubrl
pop
xchg
lods
dec
mov
hlt
push
jne
and
loope
inc
stc
adc
out
leave
inc
jle
push
mov
gs
test
push
jl
rol
push
out
imul
push
push
push
setg
shlb
andl
mov
repnz
out
movsl
xor
inc
in
das
xchg
fimull
lret
push
shlb
adc
das
mov
int
and
dec
cmp
dec
sbb
or
mov
ds
dec
jno
mov
shl
push
push
mov
push
adc
sbb
push
adc
and
sbb
test
js
fildl
fldl
in
fwait
imul
clc
push
pop
out
setbe
sub
je
rorb
jg
xor
jmp
paddw
pop
icebp
nop
inc
cld
dec
mov
in
lret
and
jl
insb
out
out
and
test
aam
test
xchg
jle
pop
push
pop
test
pop
jnp
xchg
cwtl
pop
ret
pop
add
push
negl
xlat
cmc
adc
or
sbb
add
dec
pop
cmp
pop
mulb
rcr
xor
add
lea
jmp
out
sub
fistps
or
and
xor
or
sub
fs
and
mov
push
add
sbb
mov
arpl
in
dec
xor
ficomps
jb
nop
rol
pop
dec
cmpl
cmp
jnp
pop
mov
addr16
js
lock
jne
xchg
mov
adc
fwait
xor
add
and
lret
mov
sbb
and
into
jg
adc
jmp
aas
rorl
or
out
dec
repnz
je
loop
cmp
jl
ret
mov
mov
fstps
icebp
mov
mov
mov
fisubrl
stos
jbe
xor
movsl
cwtl
and
ljmp
or
les
out
and
popa
adc
sbb
les
jecxz
mov
scas
jae
pop
or
pop
lods
sbb
cli
mov
or
cld
fimuls
xor
dec
jb
or
bnd
adc
jno
xchg
outsb
cmp
and
mov
rcr
scas
inc
loopne
cwtl
rclb
std
pop
ret
push
push
xchg
mov
hlt
adc
jno
pop
aas
inc
repnz
sub
xor
out
lahf
add
mov
les
repz
sub
push
pop
fildl
push
inc
xchg
mov
insb
mov
stc
mov
movsb
cwtl
pushf
mov
xor
loopne
jecxz
mov
shrl
adc
popf
adc
lea
aam
call
mov
scas
cmp
icebp
mov
pop
mov
fsubs
xchg
mov
mov
mov
mov
mov
mov
mov
jo
shrb
insl
mov
xor
imul
or
sahf
push
daa
pop
add
sub
imul
inc
mov
pop
mov
aaa
xchg
aam
pusha
lods
movsl
xorl
adc
in
ja
addr16
sub
or
fisttps
sub
and
test
fldcw
inc
xlat
xchg
int
push
fwait
cmp
jne
stos
or
mov
jl
clc
inc
and
cli
aad
jg
aas
scas
push
fsts
and
fcmovnbe
inc
in
xlat
and
mov
sar
sub
xor
je
xlat
in
pop
inc
push
inc
mov
hlt
jne
xchg
setnp
jno
mov
dec
jb
or
ficoml
aam
sub
mov
cs
hlt
imul
mov
or
xchg
push
push
das
and
fidivrl
push
cmp
ja
cli
dec
bound
xchg
iret
daa
mov
sti
ret
inc
xor
fstl
push
ficoml
or
shlb
xor
gs
xchg
test
loop
adc
aas
sahf
rorb
rol
add
dec
dec
pop
xor
xchg
mov
xchg
dec
add
xor
dec
jg
cmp
test
inc
sti
jne
icebp
in
xor
out
inc
xchg
out
jp
and
cmp
outsb
inc
mov
push
mov
sub
and
shrl
or
jns
sub
cmp
xchg
js
mov
rorb
lods
sti
cs
repnz
addr16
jp
cmp
lds
lret
xor
adc
popf
jne
pushf
push
jmp
adc
mov
pushf
mov
mov
mov
xor
add
int3
sarb
stos
std
in
sahf
xlat
test
out
jne
xchg
cltd
jns
and
mov
rcrb
push
mov
idivb
push
xor
testb
stos
mov
cmp
adc
in
jp
xor
xor
sbb
adc
jb
jle
imul
push
les
lods
gs
and
shrb
mov
fisubs
cmpsl
dec
pop
xchg
push
daa
pop
mov
cmp
or
popf
sbb
mov
cmp
lea
stos
jle
jno
inc
xchg
mov
mov
nop
mov
pop
mov
das
add
jne
cmp
and
cmp
and
xchg
mov
push
and
adc
out
stos
xlat
mov
mov
stc
dec
mov
rcll
xor
mov
sbb
mov
out
mov
push
sub
punpcklwd
ss
outsb
cs
mov
out
sub
push
mov
aas
pop
xorl
aaa
scas
xor
jno
or
dec
adc
arpl
mov
cmpb
cld
out
and
mov
std
fld
cld
push
pop
mov
pop
add
out
adc
inc
ret
xchg
sbb
cs
test
repnz
js
insb
scas
lods
jae
out
mov
push
pusha
push
fdivrp
adc
imul
inc
cmp
cli
and
mov
std
lds
rclb
stos
fcomp
xchg
iret
adc
adc
pop
mov
arpl
sarb
fimull
out
cld
nop
mov
ja
lahf
jo
sub
gs
add
mov
inc
adc
arpl
outsl
jnp
jbe
jle
and
fcoms
mov
sub
fwait
cmpsb
jmp
or
js
fsts
notb
int
jo
pop
insb
xor
icebp
test
test
fcmovnb
lahf
push
out
jno
rcrb
rolb
and
rcl
loope
rcr
push
push
popa
push
cmp
je
int3
ljmp
lods
inc
pop
icebp
mov
aam
xchg
jns
imul
add
sarb
rcl
cmpsl
xor
pop
push
repnz
shll
outsl
sub
arpl
addr16
add
mov
jo
es
imul
sub
lods
push
or
add
or
add
rcrl
cmp
cmp
movsl
and
jne
shrl
mov
dec
push
mov
add
jmp
inc
sbb
sahf
xchg
inc
inc
fidivs
test
cmc
push
cmp
or
xor
push
scas
in
pop
xor
test
sti
adc
dec
test
or
adc
mov
aas
not
push
fs
mov
dec
ds
test
cmp
mov
cli
popf
orb
push
jb
mov
jno
shrl
inc
jns
sbb
cld
outsl
pop
push
ret
aaa
in
ret
outsl
int
shlb
mov
sub
aaa
loope
js
test
shl
jo
mov
aas
je
push
mov
cli
pop
push
cltd
cli
es
and
pop
fcoml
push
sbb
fisubs
mul
sbb
mov
call
in
nop
ja
mov
and
in
fnstenv
mov
stc
adc
in
test
rolb
mov
in
das
pop
mov
into
adc
incl
bound
bound
outsl
mov
cmp
pop
xchg
xchg
test
bound
sub
mov
rolb
add
aam
imul
xlat
pop
mov
xor
mov
cmpsb
cmp
aam
ds
inc
dec
lcall
lea
enter
fs
xchg
push
sbb
xchg
in
push
aam
lea
pop
into
mov
jns
and
jecxz
and
sub
push
sbb
jp
pop
mov
cltd
mov
adc
sbb
or
pusha
xchg
mov
int
mov
and
rorl
lea
push
add
mov
dec
pop
sahf
add
push
mov
xor
orb
fdivl
call
sub
mov
nop
inc
div
mov
jge
mov
filds
jg
sti
or
das
imul
or
sbb
fwait
jns
sub
fbstp
inc
mov
sbb
cmp
pop
inc
push
jns
adc
out
xor
xchg
dec
mov
mov
and
and
in
pop
js
leave
lea
lret
push
stos
nop
jbe
cmc
pop
sbb
cmpsb
lock
or
loop
xchg
add
enter
dec
stos
mov
sbb
pop
das
xor
pop
js
cmp
xor
out
das
xor
cmpsb
mov
out
and
fistps
roll
mov
mov
aas
out
mov
cmpsb
push
movsl
call
out
adcb
jae
outsb
pusha
xchg
jg
lahf
call
fisttpll
sbb
inc
lretw
push
push
je
push
cltd
icebp
ret
add
clc
pop
jle
adc
or
ds
or
les
jb
je
rcll
xchg
arpl
popf
cmp
mov
rcl
lret
or
push
jns
outsb
addr16
dec
mov
xchg
adc
repnz
sub
jmp
pop
test
shrb
sbb
data16
faddl
test
mov
fldt
int3
aam
sbb
out
into
sbb
popa
fistps
mov
xor
movsb
xchg
add
test
sbb
jno
popa
pop
jb
xchg
mov
jge
repnz
pop
icebp
xchg
cwtl
pop
fisubrs
jnp
jmp
jl
stos
push
xchg
mov
xchg
sub
pop
call
sbb
in
popa
mov
imul
sub
xor
mov
stos
or
add
test
testl
ss
insb
lret
sub
xor
lods
rclb
test
and
and
sarl
adc
or
ss
ss
adc
jg
push
testl
mov
jmp
cmpl
xchg
ret
pop
jl
or
pop
xor
inc
into
jl
int3
loop
mov
mov
fs
aad
pusha
repz
addr16
loopne
bound
lret
jb
insl
fcompl
pop
insb
call
ja
mov
repz
adc
jno
lods
sbbb
repnz
push
add
cs
fucomip
xchg
mov
sbb
sahf
repnz
leave
loop
xlat
cmp
in
cwtl
and
in
mov
stc
ret
popa
shlb
cmpsl
lea
adc
sbb
les
jp
pop
sub
jg,pt
lret
popa
and
fcoms
cli
les
and
andl
pop
fs
xor
sarb
mov
cmc
sub
std
mov
cmp
xchg
data16
mov
and
mov
sbb
cmp
inc
mov
loop
jo
data16
dec
inc
test
pop
enter
jmp
mov
xchg
lahf
aam
dec
shlb
sbb
out
add
ret
imul
fists
shl
shll
ja
jecxz
fs
js
push
or
lock
cmpsl
inc
jecxz
rcll
push
mov
cmp
cld
imul
test
add
or
mov
push
adc
mov
test
sub
cmp
cmp
dec
mov
dec
das
cltd
dec
icebp
ds
inc
je
sub
fadds
xchg
push
push
fsubrl
xchg
jl
shlb
fdivrs
addr16
int3
rclb
filds
xor
repnz
or
imul
sbb
sahf
shlb
xchg
fisttps
xchg
inc
mov
test
outsb
cli
loopne
das
mov
jp
fbstp
sbb
jg
out
lea
icebp
dec
pop
and
push
mov
les
xchg
push
pop
negl
into
cmp
xor
call
mov
sti
rorb
sti
movsl
btsl
mov
cwtl
cwtl
into
int3
sbb
mov
cmp
sub
mov
inc
mov
mov
inc
out
push
pop
pop
bound
add
int3
sbb
mov
leave
psubsw
in
sbb
imul
movsb
xchg
enter
mov
lret
loopne
xchg
mov
cmp
sub
lcallw
pop
std
lock
push
lret
fnstsw
fistpl
sub
push
fimuls
add
xchg
daa
iret
cmp
jecxz
add
sbb
insl
sbb
subl
shll
shll
mov
mov
cwtl
sub
mov
fiaddl
xor
stos
test
push
xchg
and
dec
sbb
mov
jb
mov
aam
aam
stc
rclb
xchg
pusha
subl
pop
js
lcall
out
in
sub
jae
xor
rcll
jb
push
nop
fnstsw
cmp
xor
push
push
repnz
xchg
add
jne
xchg
and
fidivrs
fisttpll
mov
sbb
jo
xchg
sbb
sbb
adc
stc
shl
and
jbe
jbe
rcll
xor
std
jmp
mov
outsl
test
shl
mov
sarb
and
sbb
in
mov
popf
push
loopne
push
xor
mov
imul
jo
fdivrp
pop
insb
cmp
les
lds
cmpsb
in
mov
cmp
mov
mov
iret
rorb
ja
movsb
loop
lods
dec
call
test
cltd
cltd
or
cmovbe
mov
fidivs
dec
cli
pop
shll
inc
gs
daa
mov
scas
popl
mov
jl
adc
pushf
outsl
xchg
out
xor
push
cmp
imul
sub
lcall
clc
lock
cmp
outsl
cmp
ficoms
roll
rcl
test
mov
mov
popf
jg
jne
inc
out
push
cmp
mov
cli
sahf
mov
outsb
cs
push
icebp
sbb
mov
add
jo
stc
pop
sub
mov
push
xchg
sub
sti
fcomi
add
shll
mov
ljmp
xchg
fidivl
psubd
movsl
out
or
sbb
lahf
xor
cmp
sbb
jle
pop
mov
aad
dec
adc
clc
mull
mov
mov
sub
mov
lds
adc
fwait
adc
fisubs
outsl
add
push
mov
adc
shl
loope
jmp
adc
cmpb
test
and
test
loop
lods
pop
ds
cmp
fsubp
push
fisubl
sbb
test
cmp
iret
jmp
pop
or
jo
pushf
sbb
pop
repnz
outsb
mov
clc
in
loopne
bound
adc
or
nop
pop
enter
repnz
sub
sub
jmp
repnz
in
add
cmpsl
test
rorl
sbb
in
divb
adc
out
inc
into
jl
sti
mov
stc
std
dec
movsl
ret
mov
mov
shlb
sbb
jb
roll
or
sub
scas
data16
icebp
cmp
lds
cmc
insb
orb
les
idivl
mov
and
xchg
fdivp
mov
js
push
aad
ret
je
add
bnd
sbb
jle
inc
jno
insl
mov
sub
je
stos
std
pop
xchg
adc
cmp
jns
cmp
gs
inc
adcl
xchg
popa
push
sub
adc
sub
imul
pop
xor
sahf
fisubrs
imul
push
bound
lret
add
cmp
xor
inc
sbb
ja
mov
sbb
push
imul
aaa
push
js
scas
fcomp
popf
loope
cmp
mov
dec
sub
cmpsb
imul
addr16
aam
xchg
push
cld
into
pop
sbb
sub
fisttpll
fldl
jo
cld
cmc
pop
mov
jecxz
jp
mov
stc
pop
mov
add
int
in
in
leave
or
ret
out
rcrl
push
fisubrs
push
cld
std
insb
sbb
jb
pop
fdivrl
xchg
push
mov
repnz
push
cmc
mov
fwait
inc
cmpb
test
leave
cmp
pop
mov
dec
daa
cmc
test
mov
test
sbb
jl
or
adc
sbb
push
and
je
mov
jnp
enter
cs
or
mov
icebp
xchg
sub
and
add
mov
adc
negl
push
sti
cwtl
xchg
pop
bound
jns
pop
adc
fisttpll
inc
aad
aam
pop
cld
or
jge
call
repnz
cld
fsubrl
pop
out
ffreep
data16
aas
cmp
sub
mov
repz
movq
mov
push
je
mov
out
mov
dec
and
pop
aaa
inc
adc
push
pop
cs
dec
pop
xor
cld
push
inc
and
xchg
movsb
lahf
dec
repnz
outsl
enter
xor
mov
sub
and
pusha
nop
xorb
mov
mov
or
test
ss
sub
test
loopne
adc
mov
mov
call
call
loopne
mov
inc
push
add
jbe
ja
roll
enter
sbb
sub
loopne
fdivs
lock
cmp
stos
xor
mull
xor
shrl
not
frstor
fimuls
xchg
fsubs
jno
scas
mov
in
mov
outsl
daa
pusha
pop
push
addr16
inc
xchg
jge
mov
push
jns
inc
repnz
xor
js
lret
xchg
xorb
cmp
popf
and
or
int3
jne
cmpsb
xor
lret
mov
add
jp
jne
xchg
inc
push
imul
data16
xchg
sub
movsl
jge
pop
cmc
gs
sti
xchg
add
cmpsl
xor
loopne
scas
inc
and
in
inc
call
mov
dec
lahf
cltd
and
inc
clc
cmpsl
inc
mov
ret
movsb
pop
hlt
je
xchg
jecxz
mov
add
stc
adc
test
mov
mov
mov
jbe
mov
xlat
mov
pusha
inc
js
adc
mov
cmc
pop
cmp
cld
dec
jno
stc
jnp
mov
mov
addb
push
push
out
subl
xabort
xor
es
xchg
mov
lcall
jae
jecxz
insl
mov
and
lret
and
hlt
insb
mov
inc
mov
sbb
xor
add
in
xor
or
cmp
dec
inc
cmp
mov
push
je
out
dec
jle
jbe
push
divl
cmc
lods
lea
in
add
or
or
popa
add
sbb
ja
dec
jge
shlb
rorl
jns
and
fistpl
mov
sub
xchg
fldcw
out
add
ret
or
dec
xor
stc
adc
sbb
vsqrtps
inc
xor
loopne
sub
cwtl
inc
or
jge
mov
clc
jo
frstor
push
fsubrl
inc
or
xchg
sub
cld
repz
out
dec
xor
cmp
mov
outsl
ss
nop
inc
lods
loopne
loopne
aam
lds
dec
add
inc
cwtl
aad
lcall
mov
mov
jp
in
mov
cmpsl
lds
stc
loop
lock
jo
shlb
pop
clc
shlb
xlat
xchg
bound
mov
adc
jb
xchg
push
mov
icebp
cmp
jg
lahf
scas
pop
jne
xor
in
sub
sarb
iret
in
add
or
lock
and
data16
add
mov
fadds
mov
punpcklwd
push
mov
pop
push
lret
je
stc
sbb
xchg
stc
push
aam
jmp
into
pop
pop
rorb
hlt
mov
jo
sub
xchg
xchg
fs
stos
or
and
stc
adc
call
hlt
or
std
and
adc
xchg
mov
repnz
add
flds
mov
add
sarl
jno
xor
sub
int3
imul
insl
lods
pushf
scas
add
dec
insb
lret
mov
js
inc
sar
into
mov
popf
out
xor
stos
and
xchg
xbegin
in
leave
divl
daa
outsb
cmpsl
mov
push
or
jnp
nop
incb
add
mov
push
lcall
cld
adc
xchg
pop
xor
inc
mov
sbb
fwait
adc
in
xor
xor
fcompl
bound
add
pop
addr16
or
enter
mov
push
mov
mov
sahf
mov
out
outsl
mov
repz
pop
shl
or
out
shll
xor
movsb
call
mov
jmp
mov
cmp
inc
test
jbe
stos
nop
cmp
xor
jle
add
sub
jle
pop
or
jmp
mov
gs
loopne
cs
jl
lret
test
cmp
fwait
push
cmp
and
out
cmp
mov
insl
add
lcall
fnstenv
sub
jl
ljmp
mov
dec
cmpsl
test
mov
mov
popa
inc
ret
inc
ds
cmp
mov
mov
lcall
jno
popa
fildll
outsb
popa
adc
mov
aad
inc
sbb
add
pop
in
jg
out
aas
das
dec
popf
cmp
xchg
mov
pop
xor
enter
ja
mov
xchg
loope
pop
push
sub
jo
sar
hlt
or
movsb
into
xchg
sub
repz
call
sub
adc
test
or
push
adc
pop
sti
xchg
shl
mov
std
fs
sub
and
push
sub
jb
adc
sarb
rcr
pop
stc
cli
jo
mov
xor
mov
aam
sbb
std
int3
xor
mov
aaa
push
xor
aad
fwait
pusha
cld
test
rcll
xor
dec
pusha
mov
ret
pusha
cld
xchg
dec
dec
ret
imul
call
insl
mov
push
ljmp
popf
or
push
jg
sbb
test
xchg
adc
xchg
popf
shlb
inc
out
fcomps
or
mov
xchg
inc
cld
pop
addr16
pop
movsb
repnz
xchg
adc
pop
add
clc
mov
lods
clc
imul
mov
jecxz
out
mov
push
push
dec
inc
in
fcomps
js
aaa
sbbb
jbe
fs
aam
sub
jle,pn
mov
push
loope
pop
pop
testl
insb
or
pushf
pop
or
add
lahf
out
xor
cmpsl
rcrb
movsb
out
add
out
dec
ret
fs
pop
insb
movsl
es
push
mov
je
sbb
mov
or
mov
imul
mov
mov
data16
push
pushf
popf
fsubrl
in
cld
xchg
cmpsb
fdivs
loopne
outsl
and
push
jo
adc
mov
movsb
je
add
inc
sbb
jbe
xor
out
and
lds
hlt
cmc
sbb
insl
mov
dec
enter
fiaddl
stos
jb
add
insb
cmp
push
outsl
fsts
and
dec
lahf
push
aad
cltd
mov
cmp
inc
or
out
push
icebp
jno
inc
xlat
ss
testl
cmc
imulb
out
ljmp
frndint
in
xchg
aaa
and
clc
xor
pop
cmp
fsubrs
or
int
jns
and
std
bound
in
inc
icebp
in
or
aad
fld
push
cmp
or
scas
cltd
addr16
and
xor
pop
mov
xchg
nop
push
lea
lret
fdivl
xor
popf
fidivl
lret
inc
mov
shlb
fisubl
jne
mov
sahf
iret
mov
aad
add
int3
fisttps
mov
insb
fs
mov
je
fdivl
xchg
mov
movsb
lahf
cmp
fdivrl
loopne
cs
add
pop
mov
and
ds
and
mov
cli
dec
mov
stos
mov
fiaddl
mov
fucom
dec
xchg
cmp
mov
ds
addb
int
and
ja
aas
push
das
fists
dec
xchg
cwtl
outsl
in
in
xchg
flds
popf
in
test
out
jne
lods
dec
movsl
jge
xor
mov
push
repnz
mov
cmpsb
inc
mov
adc
cmpsb
mov
sbb
ja
bound
repnz
test
and
in
jns
sarb
mov
lock
xchg
fidivl
mov
and
mov
pop
add
or
mov
push
testl
stos
test
sbb
pop
mov
in
rcl
mov
adc
xor
and
or
pop
lods
js
push
sub
mov
jg
adc
sbb
enter
inc
push
js
jecxz
xchg
shrl
mov
adc
cmc
ret
adc
add
push
jns
push
insb
jge
cmpsl
and
push
std
lahf
mov
stc
jae
popf
sub
flds
mov
loopne
jp
lods
push
sarl
mov
stos
jl
xchg
call
mov
pop
outsl
imul
or
mov
pop
add
mov
push
mulb
aaa
nop
pop
cli
iret
pop
and
jns
daa
cltd
stos
push
and
mov
push
int
lods
addr16
int3
pushf
jle
loope
negb
fbstp
sahf
xchg
xchg
jp
mov
es
fs
dec
test
cmpsl
mov
loop
rcll
mov
adc
cmpb
test
test
mov
mov
test
dec
out
lds
jne
sub
je
sub
out
and
sarb
popf
sarb
xchg
mov
add
inc
out
pop
maskmovq
mull
fnstsw
or
mov
scas
imul
jo
int
negl
loopne
scas
mov
testl
jle
fs
rcll
and
iret
in
pop
jns
sbb
fwait
pop
outsl
jno
sub
push
cmpsb
push
das
pop
jae
bound
add
jae
subb
pushf
jg
cli
mov
outsb
scas
data16
xorb
test
xchg
jle
clc
ljmp
lret
nop
shrb
jo
mov
jge
loope
xor
push
jns
loop
or
jae
and
dec
cld
stos
mov
inc
dec
xchg
mov
mov
mov
std
pusha
mov
in
push
sub
cmpsl
filds
sub
iret
push
in
adc
in
dec
rcrb
testl
loopne
jl
jns
sar
int3
sti
pop
pop
xor
inc
and
lahf
rorl
xor
pushf
es
loop
inc
daa
adc
jae
outsl
sbb
in
push
pavgw
jbe
pop
jecxz
jns
setnp
loopne
sub
mov
push
mov
in
lds
add
cmp
les
push
xchg
jno
or
int
icebp
ds
inc
xchg
int3
aam
popf
hlt
imul
icebp
in
push
in
jns
xchg
aam
popf
pushf
imul
adc
mov
js
sbb
loope
dec
or
cmpsb
ret
mov
sbb
mov
mov
xchg
repz
aas
dec
shlb
sahf
sub
iret
cmc
js
ja
or
xchg
cmc
shlb
int
call
ret
rol
xchg
dec
rcr
xchg
int3
hlt
fnstsw
sub
pop
leave
shlb
mov
xor
xor
icebp
fsubp
and
xor
movsb
aam
ss
and
icebp
push
int3
ss
inc
orb
mov
movsb
into
sbb
in
inc
mov
cmp
and
push
inc
adc
push
adc
fs
mov
and
outsb
inc
movsb
aam
popa
mov
fs
ftst
pop
inc
xchg
sbb
jle
lock
push
jno
pushf
repnz
in
inc
mov
cmp
test
push
inc
mov
popa
sbb
cli
pop
mov
test
push
rcr
test
push
lahf
mov
fistl
cld
dec
jb
insb
cmp
jg
shrl
insl
add
shlb
movsb
push
pop
push
rol
adc
adc
scas
cmc
pushf
sti
inc
enter
push
xchg
rclb
sar
rorb
fcmove
or
xchg
inc
dec
xchg
cli
dec
fimuls
js
inc
push
inc
xor
roll
lret
xchg
adc
mov
and
clc
test
xlat
cmpsb
insb
dec
adcl
cmp
stc
push
lods
int
mov
or
jmp
xorl
jne
xlat
pop
xchg
jp
fsubl
cmc
or
scas
aad
lds
push
cmp
cmp
adc
inc
dec
xchg
mov
addr16
push
loopne
adc
test
insl
sub
out
mov
mov
stos
outsl
scas
data16
in
xlat
jae
dec
cmp
mov
int3
push
and
adc
xchg
cmp
test
cmp
dec
subl
getsec
xor
add
int3
sbb
cmpl
push
and
jns
and
add
push
stos
xor
out
test
adc
test
inc
out
cmp
adc
or
xchg
pushf
jnp
or
jno
xlat
mov
pop
xor
outsl
or
push
mov
test
xchg
push
push
pmovmskb
fldpi
push
pop
es
pop
xlat
push
adc
pusha
rorb
pop
inc
fldl
sahf
push
xchg
ja
lds
pop
push
scas
inc
jge
jp
test
sahf
sti
insb
mov
xchg
cmp
cmp
inc
sahf
pop
xor
sbb
je
pop
inc
loopne
sbb
mov
mov
ja
es
insl
and
or
cmpsl
or
mov
ja
lds
ja
mov
inc
cmp
xchg
jbe
sub
add
xchg
adc
aam
out
lods
scas
in
scas
mov
sub
adcb
sbb
jmp
mov
fmull
cmp
jb
cmp
xor
xor
loopne
aaa
add
xchg
movsb
les
sbb
pop
cltd
pop
xor
hlt
js
adc
jo
sbb
and
xchg
inc
js
mov
shlb
std
ljmp
movb
bnd
adc
inc
shll
enter
call
repnz
les
add
sbb
stc
in
xor
add
in
in
and
push
jp
pop
cs
mov
mov
xchg
mov
or
ret
and
mov
push
and
mov
clc
and
add
push
clc
jecxz
dec
loop
int
rclb
inc
rcr
lcall
out
inc
adcb
les
mov
cmp
out
lret
adc
loop
popf
push
pop
test
cwtl
or
xchg
cmpsb
ds
test
mov
movb
out
sub
js
fisubs
xchg
sub
rclb
sub
fstpt
cmpb
gs
or
imul
sub
xchg
push
mov
leave
dec
adc
stc
cmp
or
sub
inc
lods
and
push
les
daa
lods
cmp
cmpl
jl
hlt
inc
push
mul
add
mov
mov
or
test
sub
jnp
cwtl
pusha
xchg
lds
aad
fldl
cmp
aaa
dec
lcall
mov
mov
loopne
pop
loope
cwtl
mov
in
jno
inc
daa
xchg
inc
rorb
pop
sub
xchg
or
cmp
jmp
pop
mov
pop
int3
push
mov
int3
push
pop
push
mov
mov
in
mov
mov
shlb
sbb
stc
movsb
hlt
pop
sub
call
scas
mov
dec
xchg
test
leave
pushf
lods
mov
outsl
test
add
and
xor
fsin
imul
mov
in
out
dec
xchg
cltd
cmp
add
push
and
xor
std
jns
imull
sbb
mov
or
sar
repz
or
stos
repnz
arpl
or
test
bnd
sbb
xchg
pop
dec
test
inc
test
clc
ret
xor
xchg
mov
xor
fdivl
aad
sbb
fbld
int
jmp
or
pushf
inc
les
repnz
les
ja
in
sar
mov
outsl
das
fidivl
cltd
fsubl
subl
fstl
clc
sbb
mov
dec
xchg
into
cmp
popa
int
add
cmp
test
int3
xchg
push
or
in
les
jg
imulb
cmp
add
sbb
fildll
push
stos
adc
cmc
xlat
fdivs
test
std
aam
sbb
pop
jo
sarb
cmp
mov
mov
mov
and
pop
stos
push
imul
pop
mov
in
sub
mov
cmc
mov
addb
rcll
in
jno
shrl
loope
pop
shl
lods
out
cmp
push
inc
fwait
sub
mov
shl
fcoms
xchg
mov
and
dec
dec
mov
jne
push
jbe
mov
and
mov
rolb
mov
andl
lods
mov
adc
ljmp
push
repz
jno
push
inc
mov
out
lods
push
hlt
repnz
in
hlt
jno
xor
mov
js
push
dec
mov
jbe
mov
fstpl
push
pop
or
int3
aas
mov
in
stos
cltd
js
cli
cmpb
cmp
push
pop
loopne
fdivs
out
pop
scas
and
mov
daa
rorb
pop
enter
add
push
stc
mov
xchg
loopne
sub
adc
sbb
stc
ja
aam
stos
cmp
adc
push
adc
in
mov
shrl
in
insl
repnz
in
inc
scas
add
popf
fmull
shr
lea
inc
add
sub
push
div
in
pop
inc
ja
or
test
mov
sbbb
shrb
or
cmp
pop
push
jl
loop
in
popf
les
push
inc
lcall
or
mov
in
cwtl
mov
and
loopne
push
shrb
ror
or
mov
test
gs
cmp
imul
sbb
mov
mov
fldenv
mov
sub
mov
mov
mov
enter
cmp
aam
in
sub
jae
adc
flds
mov
add
icebp
rorb
jle
gs
testl
shrl
cmpsb
loopne
mov
pop
jbe
xchg
mov
inc
jo
cli
push
pop
sub
repz
push
aad
andl
xchg
add
inc
cmp
loop
pusha
dec
hlt
test
addr16
jae
out
fistps
popa
hlt
rolb
sub
sbb
or
cmp
fsubrl
add
cmpb
cmp
aam
cli
outsb
sub
call
loop
fs
sub
or
xor
xchg
mov
and
inc
lock
ds
lods
arpl
xor
shl
jecxz
call
gs
in
outsb
push
test
jne
clc
rcrl
fbstp
sub
inc
pop
push
mov
mov
mov
xchg
pushf
das
dec
sbb
and
out
sarl
iret
and
pop
mov
std
adc
inc
cmpsb
mov
daa
shl
xchg
mov
cmp
aas
jns
pop
test
or
inc
cld
jb,pt
cmpl
mov
inc
and
jp
pushf
mov
inc
fs
pop
repz
clc
pop
add
sbb
pusha
out
fcomps
cld
clc
xchg
aas
repz
add
mov
add
inc
sbb
lock
popa
sbb
inc
loop
pop
ret
jae
iret
jecxz
push
dec
pop
and
or
test
ds
push
adc
or
jg
and
adc
jg
push
ds
jb
sub
cli
rcr
cmpsl
repnz
and
mov
loope
pop
in
fadd
sub
lret
pop
inc
or
xchg
xor
xchg
shr
mov
insb
push
and
mov
loope
test
aas
call
fimull
mov
es
filds
xchg
or
shl
mov
xchg
mov
in
push
nop
push
add
or
push
mov
pushl
movaps
notl
outsb
sbb
jge
inc
pop
mov
lea
cmpsl
push
add
mov
jle
stos
cmp
mov
int3
hlt
sub
cmp
and
daa
dec
add
rolb
mov
fmuls
imul
mulb
sub
cli
or
mov
xor
imul
test
and
sub
fidivrs
pushf
movsl
cmp
inc
out
in
loop
cmp
fcoml
mov
adc
xchg
xchg
shlb
lea
js
jl
divl
or
mov
or
cli
dec
fisubs
jno
ljmp
add
inc
push
out
test
in
shr
notb
lds
stc
pushf
in
xor
rep
lret
jecxz
in
or
mov
push
sbb
inc
aam
mov
cmpsb
pusha
sbb
cmpsl
lods
vpunpcklbw
adc
scas
mov
add
rclb
pop
subb
mov
loop
ret
push
push
aas
push
mov
mov
test
outsl
jnp
out
adc
and
loopne
leave
movsb
test
pop
leave
int
xor
les
ficoml
push
push
loopne
xor
and
pop
in
push
outsb
sti
add
dec
inc
fildll
adc
int3
out
movsl
lods
les
clc
dec
dec
ljmp
ror
fldcw
sbb
stc
xchg
movsl
pop
cmp
sub
mull
xchg
ss
leave
pop
std
push
dec
hlt
imul
inc
sub
push
sahf
fucomip
dec
inc
or
jmp
sub
ss
add
ss
sahf
lcall
pop
icebp
mov
enter
sub
rcr
pop
js
pop
mov
pushf
enter
mov
adc
sub
dec
cmp
lods
ret
bound
xchg
out
aaa
and
fwait
jne
sub
jno
movsl
jno
fiadds
hlt
ljmp
fwait
cmp
and
lret
pop
in
push
and
roll
mov
add
add
or
cmp
add
in
xor
pop
push
push
dec
rcrb
jp
mov
cltd
jmp
and
sbb
nopl
std
mov
loop
xlat
jle
push
ljmp
xchg
hlt
push
lock
or
push
hlt
enter
fstl
rcrl
leave
aam
push
dec
clc
xchg
mov
jns
call
adc
fists
sbb
fwait
inc
inc
rclb
mov
pop
mov
xchg
cmp
mov
loope
cmc
into
movsl
cmc
imul
negb
jmp
pop
mov
test
jb
addr16
push
xchg
in
mov
test
cmp
pop
xchg
mov
fldenv
in
sub
or
sbb
adc
sbbb
adc
cwtl
out
adc
push
lret
lcall
jl
mov
test
jmp
adc
add
movsb
pop
ret
js
add
fistl
push
negb
testl
das
test
inc
stos
and
sub
stos
aad
sub
inc
sbb
pop
insl
fstpl
xor
lret
test
push
add
xor
sbbl
outsl
pop
fsubrs
sub
inc
ds
pop
fbld
pop
jo
cli
enter
xchg
xchg
or
lea
lret
test
lea
fwait
aam
les
cmpsl
mov
int
cmp
or
add
ja
loopne
cmp
mov
test
test
cmpsb
inc
pop
adc
sbb
add
pop
jb
outsb
cmp
js
adc
pop
sub
nop
adc
fcmovnb
loopne
add
adc
pop
test
je
xchg
mov
ficoms
adc
xchg
sar
shll
loop
and
dec
out
dec
add
cli
shr
add
adc
inc
jmp
cmpsb
add
fnstcw
lds
aas
or
pop
insb
enter
repnz
cmp
stos
xchg
sbb
xor
stos
or
xor
loopne
mov
fdivl
push
xchg
cmp
fsubr
cmp
ret
and
in
test
sbb
dec
cmp
mov
xor
or
fsubrs
xchg
hlt
in
xor
mov
xor
sarb
inc
cmp
rcrb
fs
inc
adc
xor
xor
das
pop
in
adc
jp
or
enter
rcrl
mov
dec
and
out
aaa
jns
lahf
out
out
mov
leave
in
xor
mov
mov
dec
leave
incl
lret
cwtl
lret
dec
mov
add
dec
xor
and
shr
leave
fcoms
out
unpcklps
out
push
mov
clc
repz
hlt
push
sub
cmp
repnz
mov
aam
fldenv
mov
jge
fldenv
xchg
les
std
adc
sbb
add
dec
pop
sarl
jmp
repz
sub
lods
push
mov
mov
adc
sub
mov
xchg
jne
adc
nop
mov
xor
insl
xchg
loope
or
mov
daa
xlat
add
jbe
adc
clc
cs
sbb
fimuls
dec
jge
cmp
push
int3
das
nop
lods
inc
cmp
pushf
std
div
xchg
cmp
push
pop
add
ja
fiadds
leave
cs
or
lods
clc
movsb
iret
adc
cltd
or
and
aas
jns
pop
sbbb
xlat
imul
mov
inc
and
test
inc
test
les
scas
js
sbb
std
jg
xchg
sbb
ret
mov
xchg
outsl
push
movsb
rcrb
lahf
mov
mov
pushf
loope
sub
jp
mov
cwtl
adc
jae
sbb
enter
test
cltd
jge
clc
sbb
icebp
sbb
nop
cmp
jmp
in
jno
mov
push
add
mov
push
dec
leave
cmp
rcrb
sub
or
das
test
cltd
sub
stos
add
pop
and
or
cmp
out
enter
inc
pusha
inc
adc
adc
out
cmp
sahf
into
xchg
sub
push
cmp
adc
call
out
lds
inc
or
scas
mov
mov
mov
push
aaa
cmp
inc
add
nop
pop
mov
inc
std
sarl
sbb
mov
stc
rorb
jns
loop
fidivl
imulb
xchg
loop
loopne
push
rcll
push
ret
mov
mov
or
mov
lods
daa
mov
out
cmpsl
insb
push
test
cmp
imul
sub
js
in
repnz
push
adc
sub
das
fdivrp
in
lods
in
mov
dec
sti
outsb
push
push
scas
ret
xchg
rclb
sbb
faddp
incl
sbb
pop
data16
int3
sub
test
mov
rcrl
inc
or
sbb
push
lea
rclb
mov
cmp
imul
les
push
pop
jge
int
mov
rclb
pop
cmp
xchg
clc
sub
add
xor
shrl
jmp
pop
fnsave
xchg
mov
aam
push
hlt
mov
popf
mov
mov
sub
cmpb
jge
in
and
aad
fucom
adc
iret
mov
jl
pop
cmp
daa
stos
and
daa
inc
sbb
xchg
sbb
shll
lods
mov
adcl
adc
fs
movsl
loop
lods
push
add
and
fisubl
cmp
add
in
dec
mov
xchg
sub
cmpsb
das
fbld
add
pop
push
jns
addr16
cltd
push
clc
xchg
fcmovnb
mov
jns
ds
aas
inc
pop
sub
xor
mov
fwait
into
movsl
xor
mov
xchg
or
or
inc
test
xchg
ljmp
cmp
in
and
lds
jae
cmc
imul
cmpsl
sub
aaa
ds
lahf
invd
push
adc
xchg
repz
in
stos
mov
xchg
and
push
fdivs
mov
jb
ds
dec
cli
lods
shr
xor
adc
jnp
insl
cmp
pop
rorl
test
roll
mov
mov
inc
test
sub
popa
pop
mov
xor
xchg
xchg
and
xchg
push
sub
in
outsb
aas
pushf
fsubr
lea
jbe
loopne
cmp
imull
sbb
jg
or
negb
sbb
testl
stc
daa
loopne
pop
xor
lods
and
pop
inc
pop
sbb
fadds
cmp
stos
imul
add
leave
test
xor
add
add
outsb
add
push
pop
cmp
sar
sbb
xchg
or
push
mov
push
sub
xchg
push
add
xlat
cmpsb
push
push
in
in
adc
ljmp
rol
lds
lret
jns
sbb
push
into
iret
or
or
scas
mov
es
mov
fdiv
ljmp
xor
ds
mov
cmp
or
xlat
jns
fyl2x
test
pusha
repnz
push
negl
js
clc
js
cmpl
punpcklwd
in
xor
gs
inc
xor
xchg
mov
dec
inc
mov
dec
xor
in
dec
pop
imul
ftst
or
jno
adc
test
ds
movsl
sub
and
test
pop
lock
daa
pop
mov
sub
xor
mov
mov
test
push
div
pop
lods
sub
xor
fldt
mov
out
insb
mov
cs
icebp
mov
ret
lret
mov
inc
fisttps
push
scas
mov
sub
push
insb
cwtl
fwait
mov
pop
rorl
push
mov
mov
mov
les
cmp
sub
adc
mov
std
stc
jbe
daa
jp
dec
mov
mov
orb
jb
cmpsb
mov
test
jo
mov
test
iret
lods
pop
or
out
adc
mov
mov
pop
or
cmp
in
push
push
leave
das
jmp
ss
xor
pop
pushf
lds
jg
push
fidivl
jecxz
or
test
adc
push
scas
mull
inc
and
cmpsl
mov
sub
movsb
ficomps
mov
xor
ja
daa
add
push
xlat
repnz
fistps
pop
rcrl
out
incl
cmp
fadd
and
arpl
cmp
xor
and
pop
loop
cmp
test
or
jnp
push
das
inc
int
mov
pop
clc
aad
daa
push
data16
push
push
out
cmp
add
push
into
and
movsl
mov
imul
cmp
xor
loope
andl
jo
call
jg
jmp
push
lea
sbb
inc
nop
lcall
insb
pop
xchg
xchg
pop
jp
cmp
jg
shr
inc
aad
in
cmp
outsl
push
test
add
or
arpl
rclb
mov
add
mov
addb
ret
sbb
fcmovnb
add
cmp
push
or
or
xchg
pop
ss
int
in
cmp
shlb
mov
fadd
les
add
push
stc
add
sub
pushf
icebp
fbld
cmpsb
mov
sub
repz
mov
fcompl
es
cmp
mov
scas
fcmovbe
addb
std
jnp
in
adc
sbb
in
mov
ret
xchg
cmc
push
xor
incl
lret
rorb
pop
cld
sbb
and
test
outsl
loopne
idivb
fmull
jns
ret
and
mov
xchg
mov
or
sbb
mov
cmp
aaa
cld
push
mov
lods
nop
cmp
dec
add
jnp
add
lret
out
cmp
in
adc
mov
dec
lds
push
and
or
int
xlat
mov
ds
mov
fimuls
add
push
fsubr
push
push
jns
popa
shlb
std
dec
les
xchg
mov
mov
sub
push
inc
and
les
js
inc
call
hlt
sbb
fs
add
out
or
loop
mov
xchg
scas
inc
and
pushf
test
lcall
insb
test
inc
push
pop
mov
sbb
push
jle
jne
add
ds
fistpl
fcomps
mov
jns
enter
xor
pop
or
pusha
jmp
roll
daa
out
xchg
sub
int
jecxz
imul
fidivrs
cmp
mov
loope
sub
jp
incb
vpmulhuw
lock
cld
adc
mov
scas
popa
cmc
dec
sbb
inc
fwait
inc
cmc
and
sarb
adc
dec
pushf
mov
pop
frstor
es
bound
daa
test
hlt
shl
paddsw
ds
add
jbe
cmpsb
ljmp
rcll
xchg
dec
je
mov
pop
jmp
or
fs
movl
xchg
adc
and
xchg
push
icebp
mov
jo
shll
sub
xchg
xchg
into
icebp
inc
mov
xchg
xchg
inc
pushf
xorb
push
fstpt
pop
add
or
and
sub
mov
insb
jle
aaa
daa
jmp
jmp
xchg
xchg
cli
popf
nop
xchg
in
cmpb
sub
lods
inc
andl
js
aad
and
xchg
xchg
inc
xchg
movsl
into
pop
mov
xchg
in
test
mov
inc
aas
inc
clc
mov
movsl
mov
fbld
push
out
sbb
mov
cmp
inc
fiaddl
push
inc
xchg
orb
and
push
cmp
xchg
clc
es
dec
int3
sar
orl
in
mov
ret
daa
scas
movsl
sub
inc
push
arpl
iret
dec
out
rorb
and
fstpl
adc
iret
cmpsb
in
int3
pop
out
fsubs
or
pop
mov
fisttps
lds
call
dec
adc
cmp
mov
dec
orb
fisttps
shlb
aam
pop
jmp
imulb
incl
xor
stc
xor
sbb
loop
fucomp
adc
xor
test
pop
xchg
lea
jl
cmc
insl
aam
or
pop
or
ret
jmp
cld
and
adc
lret
sbb
rcl
adc
xor
aam
fistps
mov
lret
xlat
test
fsub
push
rorb
fiadds
hlt
in
push
pop
jge
xchg
pop
and
into
insb
movsl
sti
lcall
pop
xchg
and
icebp
xchg
mov
cmp
faddp
mov
repnz
and
stos
sbb
xchg
std
stos
or
movsb
jns
es
and
pop
cli
shll
les
clc
gs
push
dec
rorb
sub
mov
mov
jmp
adc
adc
mul
pop
int3
pop
and
or
in
cmp
repnz
add
or
jo
dec
and
mov
leave
mov
je
pop
mov
ret
int3
push
call
xor
push
mov
mov
movsb
test
int3
movsb
stc
inc
adc
cmpsb
int
loope
add
lret
or
in
xor
insl
push
inc
cmpsb
mov
sub
es
shlb
mov
dec
pop
mov
push
or
pop
mov
aaa
mov
stc
test
int3
add
mov
loope
rcll
mov
mov
and
movsb
xor
test
dec
pusha
cmp
sub
mov
mov
into
stos
test
push
jg
fistpll
ret
inc
in
fisttps
adc
outsb
out
cmp
out
loope
xor
rcrb
inc
add
cli
sbb
mov
dec
adc
cli
fsubrs
lods
mov
push
in
sub
cmp
lods
mov
inc
test
mov
add
aas
cld
xlat
stos
into
push
clc
inc
ds
rcrl
mov
adc
icebp
sti
mov
xchg
cmp
aaa
stos
lock
jb
xchg
jge
sub
dec
je
push
in
jbe
fsts
cli
test
insl
testl
mov
xchg
in
mov
out
dec
adc
pop
or
negb
xchg
mov
xor
jno
dec
push
add
cmp
inc
subl
leave
rorl
sub
inc
aam
mov
pop
inc
and
add
sahf
movsb
and
add
xchg
mov
inc
repnz
fs
inc
sbb
pop
stc
xchg
ret
and
mov
inc
cmp
mov
in
cs
lahf
mov
sub
and
icebp
ret
rol
sub
xor
sahf
sbb
pop
shl
ret
push
xchg
add
movsb
mov
add
xchg
dec
loopne
xchg
je
jp
adc
xchg
and
cmc
outsb
lea
hlt
lea
push
gs
xorb
mov
cmp
push
das
pop
jns
sub
shlb
je
pop
mov
push
fisubs
pop
lret
frstor
stc
pop
rcll
shlb
push
xchg
loop
mov
ret
adc
inc
xchg
mov
shll
inc
fiadds
fimull
cmp
sbb
dec
sub
jle
fiadds
in
notl
imul
jg
aam
call
ljmp
nop
aaa
adc
jb
icebp
mov
and
add
mov
repnz
dec
iret
xor
mov
insb
repnz
or
mov
push
in
and
mov
or
sarb
add
jae
in
bt
xchg
dec
in
pop
shl
jnp
subb
jecxz
addb
push
in
popf
sbb
dec
inc
push
or
and
jns
stos
cmp
ret
xor
bound
jae
aam
imul
arpl
sahf
aad
mov
jle
faddl
pop
xchg
call
daa
sbb
rorl
sti
or
fs
sahf
and
sysenter
lods
mov
inc
xchg
pop
fs
hlt
cmc
into
ja
mov
jo
add
and
aad
rol
sub
push
or
push
inc
ficoml
add
jmp
mov
cmp
jne
pusha
xchg
es
std
dec
ja
mov
push
push
dec
lock
movb
addr16
shlb
sbb
ds
mov
inc
loop
shrb
loop
sarl
pop
add
test
pop
sub
sbb
mov
mov
xchg
jae
and
fs
dec
cmpsl
mov
xchg
in
shll
outsb
pusha
mov
imul
dec
int3
dec
xor
imul
ret
insl
push
clc
push
andb
xor
or
or
dec
cmp
test
xor
jns
jbe
jg
andb
loop
cmpsb
lods
xchg
call
push
add
xor
pop
aas
test
notl
jp
inc
ret
pop
out
imul
xchg
fst
push
mov
sub
dec
mov
push
push
xor
xor
ljmp
mov
or
mov
cmp
adc
sgdtl
enter
addb
xor
inc
lret
sub
out
and
cwtl
ljmp
sti
in
addl
cmpsb
push
cli
cmpsb
aam
stc
mov
pop
adc
mov
push
push
jge
pop
hlt
std
mov
out
je
flds
dec
test
popf
mov
xchg
and
std
push
mov
xor
pop
cmp
shrl
inc
imul
sti
mov
test
mov
les
pop
mov
jg
in
out
push
mov
sarl
clc
data16
add
loopne
rorb
inc
shl
cmp
and
into
sbb
mov
dec
ret
sub
push
fs
xchg
cmp
xchg
sub
negl
leave
xchg
fidivrl
cmp
or
xchg
mov
cmpsl
and
mov
lret
sbb
xchg
pop
loop
fstl
cld
lea
ja
xchg
mov
sub
mov
stos
andl
mov
or
mov
xchg
in
cmpsb
shl
iret
cmp
or
fwait
sub
xchg
pusha
test
iret
pusha
inc
scas
inc
mov
pop
aaa
jge,pn
roll
mov
jge
adc
lds
pop
test
std
push
movsl
iret
push
sbb
push
add
lods
data16
addr16
bound
ja
shrl
mov
sub
pop
push
fwait
xchg
pop
lahf
and
stc
inc
and
xchg
cmc
cmp
xor
rclb
idivb
stc
inc
pop
out
mov
es
dec
repnz
mov
mov
mov
mov
scas
xor
xor
jl
cmovo
push
lods
dec
icebp
push
push
or
xor
mov
lret
add
aam
mov
lahf
stc
lods
mov
push
mov
into
dec
mov
cmpsl
js
movsl
notb
or
adc
and
lahf
push
test
hlt
les
data16
pusha
pop
inc
int3
push
clc
pop
adc
pop
add
lds
mov
fistpl
mov
cmp
mov
mov
call
lock
std
mov
fadd
cs
cmpsb
cmp
cltd
dec
pop
pusha
and
xor
push
int3
arpl
and
movups
das
xchg
inc
or
lahf
iret
cmp
cld
and
adc
xchg
ljmp
mov
flds
jne
into
sub
out
xor
mov
popa
loope
add
in
sbbl
fsubl
cmp
out
lar
dec
daa
dec
scas
mov
cmp
inc
popf
add
das
cmp
mov
stc
insl
mov
add
ret
push
lock
cmp
aas
cmp
jmp
or
mov
and
stos
aaa
inc
and
call
aam
in
std
loope
outsl
fisttpll
mov
hlt
pop
push
mov
dec
mov
je
ss
pop
hlt
aam
fs
jecxz
and
dec
mov
xor
data16
inc
hlt
fsubrp
adc
push
mov
inc
lret
dec
cli
adc
loope
and
add
push
cmp
test
es
jl
or
sbb
in
xor
jb,pt
test
aas
sub
xchg
out
jmp
sbb
cwtl
fs
cmp
xor
cmpsb
xor
js
xchg
cmp
shlb
and
out
xchg
mov
inc
mov
xor
or
fimull
push
mov
lods
mov
and
fisubl
or
mov
frstor
and
adc
xlat
push
sar
sub
mov
and
jb
dec
popa
repz
lds
jg
insl
pop
ja
sti
mov
and
repnz
sub
in
jo
mov
popf
adc
inc
xchg
jge
pushf
mov
xor
testl
lret
lret
sbb
pop
pop
in
test
enter
stos
pushf
jae
ja
push
jmp
out
bound
leave
in
mov
test
sbb
in
movsl
test
pop
clc
jo
call
aam
inc
repnz
add
fimuls
imull
ds
daa
inc
enter
adc
cmp
movsl
xchg
out
outsl
mov
mov
or
mov
pop
dec
in
adc
dec
and
add
jo
enter
movsb
mov
scas
cmc
push
inc
add
pop
and
inc
cli
std
mov
and
icebp
rclb
pop
lds
repnz
jmp
mov
sub
les
mov
insb
push
mov
sub
cltd
xchg
adcb
sbb
mov
mov
pop
ja
ret
xor
cmp
es
sbb
dec
repz
test
jb
stos
nop
push
rcrb
mov
outsl
jno
lahf
lods
cmpb
sgdtl
out
imul
dec
out
dec
bound
mov
dec
and
xchg
in
dec
int
cmp
ss
negl
sub
out
xor
jg
adc
test
das
jg
palignr
shlb
jns
rcrl
xchg
or
hlt
mov
out
ds
adc
mov
pop
test
arpl
push
lock
orl
or
out
pushl
icebp
pop
cmp
cmpsl
jae
rcrl
popf
decb
inc
jle
sbb
js
leave
or
je
push
jb
jae
pushl
sbb
ret
lea
mov
sub
inc
xorb
pop
loope
sub
jo
sti
fistps
sbb
or
fxch
aam
and
popa
xor
cmp
movsb
in
mov
test
add
lods
mov
xchg
addr16
cmp
lods
mov
inc
fdivs
mov
ret
frstor
jnp
mov
cmpsb
test
enter
stc
jle,pt
mov
icebp
push
clc
xchg
divb
dec
je
pushf
popf
pop
cmp
test
inc
pop
jl
inc
cmp
push
sub
push
lea
pushf
dec
cltd
mov
out
mov
pop
jns
ljmp
adc
pop
insb
jle
add
cmp
xchg
cmp
and
icebp
mov
insb
adc
lcall
or
jge
and
subb
mov
jae
into
loope
in
jmp
cmp
jmp
fs
ds
sbb
jg
fs
cltd
or
inc
cmp
in
mov
es
or
or
into
xchg
pop
inc
sbb
ds
out
jg
fisttpl
xchg
jbe
outsl
xor
lds
lcall
dec
aad
push
mov
aaa
pop
or
xchg
or
dec
mov
dec
adcb
mov
dec
loopne
call
sbb
or
addr16
mov
inc
js
jge
mov
fwait
inc
jge
bnd
cld
int
jp
iret
sbb
outsl
sbb
cld
push
add
loop
pop
or
adc
fcoml
jecxz
fists
adc
mov
inc
or
popa
movsl
adc
repnz
jbe
cmpsb
mov
push
aas
lret
and
xlat
mov
cmp
sbb
jmp
jo
fcomps
mov
es
adc
repz
xlat
xor
or
adc
sar
lahf
and
movsb
xor
ja
adc
or
inc
cli
pop
xor
stc
test
fadds
lahf
mov
mov
mov
xor
jmp
cmpsb
or
or
int
fidivl
dec
fldenv
or
and
inc
add
mov
lds
in
shrb
mov
jl
jl
inc
sub
xor
xor
jnp
add
xlat
mov
and
fidivrs
nop
pop
xchg
leave
and
push
lock
ss
and
or
fdivrs
inc
sub
mov
cmp
lahf
andl
sahf
arpl
push
sub
adc
cmp
or
aaa
jae
pop
lret
cmp
lds
hlt
fdivrs
hlt
in
repz
push
jnp
xchg
xor
mov
hlt
push
ss
call
pop
sti
lods
adc
inc
shll
gs
je
rcr
xchg
jmp
xorb
shl
xchg
sbb
movsl
daa
pop
xchg
subb
push
sub
push
clc
fisubl
popf
mov
scas
imul
ficoml
lock
pop
iret
mov
lahf
sbb
jmp
xor
dec
movsb
cmp
xchg
mov
sahf
mov
out
out
pop
jg
stos
adc
fldcw
ljmp
cmp
mov
cmpsl
jnp
mov
cmpsb
sub
std
pushf
pop
js
pop
cmc
pop
std
xchg
sub
push
fcompl
iret
shrl
jp
out
or
sub
icebp
add
lods
pop
mov
pop
cmp
jne
sbb
fwait
add
and
jl
xchg
adc
jne
imul
rorl
or
or
fisttpl
test
cli
cmp
jl
sub
mov
add
aam
xor
movsl
int3
inc
dec
rcrb
xchg
push
inc
xchg
fnstsw
sbb
out
sbb
xorl
mov
xor
fwait
or
fdivs
push
jecxz
aam
xchg
lods
jge
daa
and
xchg
xor
or
shlb
int3
pushf
ja
mov
loopne
clc
mov
gs
loope
movsl
pusha
inc
mov
pop
push
pusha
or
frstor
imul
inc
push
das
outsl
mov
les
mov
fucom
bound
popa
cmc
and
push
icebp
clc
add
js
mov
aam
cltd
das
lret
mov
js
fimuls
outsb
aad
xor
popa
leave
aam
test
stc
push
mov
hlt
xor
xchg
and
stc
mov
aad
cmpsl
inc
movsl
sahf
cmp
mov
pushf
adc
jo
fstps
mov
in
lods
sbb
sbb
xchg
bound
fs
insl
repz
jns
sahf
inc
mov
dec
inc
add
xor
push
ror
add
sti
push
pushf
std
sub
inc
xchg
lcall
add
mov
mov
fs
les
mov
mov
loope
stos
scas
imul
add
sbb
out
xor
adc
mov
mov
pop
rolb
adc
sub
test
cld
pop
shlb
sti
fisubrs
jo
ret
loope
aas
xlat
fidivrs
aaa
jno
stos
cmp
lods
push
add
pop
xchg
jns
pop
mov
pop
push
pop
hlt
mov
shll
cld
bound
fpatan
sarl
fs
add
test
xchg
sbb
adc
popa
enter
lret
fstl
jge
mov
pop
popa
and
push
enter
cli
das
test
cmp
addr16
jne
jae
inc
cmpsb
lret
and
daa
sbb
sub
lahf
cmc
mov
adc
jle
les
mov
pop
test
gs
dec
xchg
xor
add
mov
cltd
sub
xchg
nop
pop
pop
jno
push
push
cmp
popf
movsl
icebp
sub
sub
faddl
repz
lock
pop
sti
stos
lret
arpl
pop
popa
push
gs
mov
bound
sbb
jns
sarl
mov
xchg
ja,pn
das
xchg
rorl
pop
dec
xor
pop
adcl
imul
sub
xor
mov
je
mov
test
xor
call
das
mov
inc
dec
rcr
mov
ret
aad
push
add
pop
inc
loop
or
idivb
inc
scas
adc
jbe
mov
xor
jno
adc
insl
int3
xchg
daa
popf
or
pop
in
pop
repnz
sti
insb
into
and
or
sbb
mov
cltd
xchg
fwait
cmp
aaa
push
iret
xor
push
in
lods
mov
sti
cmp
clc
add
mov
lret
cli
pop
push
jecxz
and
mov
gs
mov
xor
in
pusha
cmc
jge
mov
or
in
cs
mov
fs
mov
pop
add
sub
push
cltd
cmpb
ds
sbb
and
mov
movsl
cmp
fistpl
cs
sbb
sub
adc
ret
mov
cld
and
dec
jae
cmp
imul
sbb
cli
cmp
fisubrs
es
test
sub
add
sahf
pop
xchg
insb
adc
add
cmp
dec
cmc
loop
sbb
add
xor
and
sahf
ljmp
mov
push
xchg
dec
jl
leave
jg
imul
sub
and
adc
add
pop
push
scas
lret
es
jge
mov
shll
jbe
xor
adc
int3
imul
in
ja
cs
xchg
addb
mov
nop
lret
lds
in
xor
fdivs
or
out
pop
jg
sub
xchg
pop
lcall
pop
repnz
adc
rol
sbb
int3
shlb
stos
add
in
scas
and
fistpll
jp
sti
and
xchg
inc
pop
les
pop
addr16
jno
ss
dec
in
lods
mov
mov
mov
movsl
ficompl
fbstp
cmpsb
cmpsl
roll
mov
orb
int3
notl
ret
jnp
stos
aad
ret
dec
push
fxch
mov
sbb
movsb
popf
lea
mov
faddp
or
addb
cltd
scas
mov
sbb
or
out
scas
mov
lds
jmp
mov
pop
add
fsub
pop
fwait
sub
inc
mov
mov
lcall
rol
clc
jae
sub
sbb
xchg
mov
mov
addr16
and
lock
mov
insb
rcrb
pop
push
sbb
jge
lds
mov
rcll
lds
sbb
xchg
mov
dec
adc
xchg
test
mov
sarl
jno
adc
xchg
and
call
test
sbb
repnz
push
xchg
cmpl
clc
lahf
scas
push
mov
xchg
insl
bound
pop
lock
data16
and
adc
aaa
sbb
cmpsb
fstp
cld
and
pop
and
sahf
mov
notb
je
pop
mov
scas
sub
bound
in
jne
xchg
out
lods
enter
cmpsl
add
sub
or
icebp
sub
xchg
jmp
test
add
je
push
pushf
pop
aam
xchg
loop
in
pop
jae
ss
push
cmpsb
cld
sbb
dec
lret
pop
mov
and
and
add
push
jmp
ljmp
adc
jno
test
addr16
insl
lcall
daa
ljmp
les
lea
dec
aaa
sti
pushf
mov
jns
mov
mov
mov
and
xchg
test
shlb
das
push
aaa
out
lods
out
push
mov
inc
xchg
pop
fildl
insb
adc
scas
sub
nop
adc
add
push
out
dec
mov
lret
in
rcrb
push
xchg
pushf
mov
test
ret
lret
pop
mov
stos
jb
cmpsb
loopne
imul
mov
imul
in
inc
jge
push
out
add
shr
es
int3
or
sahf
xadd
push
cmp
les
fcomp
cli
mov
lods
imul
popf
mov
ret
add
call
pusha
lds
jns
fdivrl
rcrb
pusha
in
lahf
in
xor
and
jns
inc
stos
out
inc
cmpsl
sub
sbb
lds
loopnew
inc
ljmp
inc
aas
ret
outsl
cmp
lea
push
sbb
ret
add
cmp
cmpsl
inc
shlb
out
js
fistpll
in
xlat
cmp
push
cli
jl
pop
push
outsl
int3
jo
adc
cmp
dec
aad
jb
lds
and
dec
inc
mov
or
pushf
int3
adcb
cmpsl
in
cmp
fxch
adc
ljmp
mov
cltd
adc
sub
pop
jmp
in
dec
insb
mov
push
in
daa
mov
es
jmp
je
fidivs
add
and
arpl
mov
test
addr16
mov
cli
imul
stc
lret
cmp
add
mov
cmp
cmpsb
push
adc
jne
xor
ds
push
pop
mov
loope
cmpsb
cs
fsts
or
lods
cltd
int
dec
addr16
push
into
and
and
test
xchg
test
ret
clc
fwait
cmp
outsb
loopne
sarl
or
pop
cmpsb
or
cmp
sub
pop
rcrb
jmp
mov
inc
sub
sub
adc
test
ficoml
sbb
inc
mov
pop
and
aam
add
xchg
out
ror
in
mov
pop
test
mov
add
arpl
cmpsb
dec
xchg
mov
and
insl
rcrb
pusha
fcomi
sub
pop
outsl
and
xor
sbb
outsb
adc
mov
ss
daa
mov
cmp
std
jecxz
add
mov
dec
ficompl
push
and
call
aaa
dec
xchg
jp
sbb
lea
cmp
cmp
mov
and
stc
or
fsubrs
dec
insb
mov
sahf
sarl
mov
sbb
jo
out
dec
insl
xchg
or
push
inc
mov
cmp
stos
mov
call
std
pop
into
and
jno
pop
mov
mov
jns
inc
aas
mov
and
pop
adc
push
sub
vcomisd
out
dec
pop
jmp
lcall
mov
nop
ljmp
call
arpl
loopnew
dec
out
and
sbb
xchg
insl
or
in
ror
pop
popa
cltd
sti
lret
pop
pop
dec
in
in
inc
loopne
xor
mov
popa
push
add
movsl
insl
popa
pop
jbe
cmp
lods
rorb
into
jo
mov
jae
nop
sahf
jae
cltd
test
aad
outsl
aaa
fimuls
mov
insb
sbb
repz
test
mov
inc
push
jge
pushf
and
cmpb
add
jo
sub
test
movsl
out
int3
dec
mov
mov
leave
inc
sti
dec
sahf
xchg
sarb
ljmp
push
push
lret
xor
push
call
js
lods
dec
add
fstl
adc
mov
push
mov
in
sbb
je
sbb
or
sub
jno
pop
mov
lcall
mov
lock
mov
mov
mov
gs
sub
aas
mov
dec
shll
sbb
shlb
pop
or
pusha
and
mov
out
outsb
roll
push
and
pusha
hlt
lods
ds
and
sub
ret
and
aam
push
mov
repz
rcrl
cmp
call
and
xchg
idivb
add
push
pop
cmc
jge
imul
adc
jl
pop
jmp
dec
cltd
jbe
xchg
leave
pop
fs
sub
jmp
lock
adc
mov
les
shll
push
sbb
sbb
jg
push
push
push
lea
mov
xor
mull
cmc
js
cmpsb
js
int
pushf
in
jp
jne
mov
lods
ja
outsb
jbe
xlat
shl
es
loopne
xchg
popf
mov
dec
push
enter
les
insl
fistpl
lahf
xchg
xchg
test
inc
pop
sub
cmc
xor
mov
dec
sub
inc
or
ficoml
lock
adc
dec
ds
movl
xchg
insl
sbb
push
sbb
imul
in
inc
sbb
fwait
or
mov
mov
test
mov
outsl
in
jne
sarl
cs
mov
xor
add
cmpsl
cmp
ret
nop
lret
xor
aaa
inc
cmp
and
sahf
dec
test
das
loopne
sub
popf
inc
fcoml
sbb
xchg
jge
addr16
push
push
sbb
sahf
icebp
dec
add
cmpb
lahf
idiv
bound
cmp
nop
inc
jae
add
jg
stos
mov
mov
xor
mov
mov
jmp
test
cltd
movsl
outsl
rclb
sub
popf
sbb
push
xchg
imul
in
mov
popa
in
inc
push
subl
lea
pop
sbb
scas
dec
and
inc
popa
sbb
js
jmp
loope
jle
xchg
orb
push
cli
hlt
ss
mov
std
hlt
lea
in
sbb
out
clc
jno
push
push
sbb
mov
stos
cmc
aas
add
std
push
push
dec
lahf
pop
sti
out
cmp
fucomip
sub
mov
or
xor
ljmp
test
pop
add
mov
mov
stos
inc
inc
push
add
xchg
or
hlt
pop
fnstsw
jb
leave
and
xchg
and
adc
fmulp
push
push
fnstsw
fisubrl
xor
cmpsl
pop
popf
addr16
aam
xchg
sub
lcall
inc
jg
mov
inc
jge
pushf
nop
inc
pop
lret
and
out
mov
pop
push
inc
cltd
lahf
cmp
lods
and
aam
ljmp
fsubr
mov
cmp
fmuls
ss
ret
int
lcall
jne
adc
insb
lds
dec
scas
shr
stc
enter
hlt
outsb
rcrb
mov
mov
mov
pop
mov
das
jb
mov
popf
lods
shlb
mov
adc
dec
xchg
inc
add
sub
outsl
xlat
enter
push
cmp
mov
cmp
mov
bound
inc
jg
mov
pushf
and
nop
mov
pop
cmp
jne
icebp
and
sub
pop
shll
repnz
popa
nop
and
mov
and
pusha
mov
mull
xor
sub
clc
mov
pop
test
lds
in
mov
cmp
mov
rol
fcmovnb
mov
or
ljmp
mov
enter
leave
dec
std
enter
stc
iret
xlat
fchs
jne
mov
pop
pop
pop
pop
push
scas
fisubrs
sub
sub
negl
mov
mov
icebp
test
in
arpl
adc
and
outsb
rcrb
popa
in
les
out
jbe
jmp
sub
es
mov
les
mov
xchg
lods
sbb
fcom
fisubs
popf
jl
sbb
loop
es
insl
cltd
jle
mov
adc
xchg
cmp
pop
adc
adc
test
stos
mov
push
jo
inc
pop
std
xchg
jecxz
sahf
jbe
stc
rol
sbb
rclb
ds
ljmp
aas
mov
mov
lods
inc
movsl
es
mov
mov
inc
jmp
test
xchg
ror
lds
lahf
push
pop
xchg
xor
jecxz
or
and
movsl
xor
push
pop
ds
jge
mov
mov
fistpll
cmp
fisttpll
dec
ljmp
arpl
cmp
lea
jae
bound
sbbl
scas
jns
pop
cmp
xchg
lods
imul
andl
adc
mov
jp
in
mov
std
mov
xchg
inc
test
stos
inc
cwtl
and
ret
pop
daa
lret
arpl
divb
repz
insb
or
add
push
subl
flds
pop
dec
inc
jo
fwait
mov
rol
or
mov
or
adc
jmp
mov
int
ret
mov
add
sub
and
and
mov
sub
stos
je
xchg
cwtl
mov
outsl
mov
nop
xchg
aas
pop
adc
sarb
sub
dec
popf
iret
addr16
stc
mov
shll
fsubl
fisubrs
jae
rcll
xchg
cmp
mov
dec
lcall
rcll
lds
jge
popa
add
pop
mov
jne
xor
cmpsb
test
adc
out
popa
jp
dec
fldenv
outsb
stc
in
cmp
mov
sub
pop
loope
ret
pop
mov
mov
icebp
mov
ljmp
add
pop
xor
fcoml
shll
icebp
xchg
enter
or
mov
dec
ss
int
adcl
call
adc
cli
mov
and
subb
cmp
jo
gs
cld
jne
aas
jo
ljmp
jg
lds
and
mov
clc
ja
fidivs
lock
sbb
dec
dec
loop
and
test
jmp
xlat
scas
test
subb
jle
in
loopew
aam
mov
cmp
inc
test
clc
mov
daa
lock
icebp
in
push
ret
jnp
xor
or
mov
sarl
fiadds
ror
adc
xchg
mov
out
mov
dec
inc
test
lahf
gs
clc
hlt
in
mov
push
sub
test
inc
gs
mov
insl
test
stc
adc
sbb
dec
xchg
inc
dec
inc
js
lret
mov
xchg
xlat
pop
out
or
std
push
or
cmpsl
sbb
ss
mov
adc
or
inc
jbe
sub
orw
push
xorl
pop
ljmp
imulb
add
negl
xchg
push
fstpt
pop
das
lret
pop
dec
pop
jl
xor
jge
cmp
or
xor
jne
xchg
jp
add
pop
inc
adc
push
mov
add
gs
pushf
push
hlt
daa
add
int3
dec
cmpsb
add
lods
and
outsl
movsb
stos
and
pop
xor
pushf
mov
cltd
imul
cmp
lahf
fidivs
ret
xor
mov
jl
fnstcw
data16
stos
sbb
xorb
dec
sar
mov
cmp
pusha
ja
jge
lea
inc
mov
out
lea
gs
pop
dec
in
sahf
cmp
sahf
lds
xchg
xchg
js
pop
lods
xor
nop
lea
js
inc
add
pop
bound
mov
daa
movsl
icebp
pop
in
jnp
clc
or
cmp
arpl
cld
loopne,pt
jns
jne
filds
lods
call
xchg
add
aad
pushl
test
cmp
jp
cmp
imul
ficompl
enter
aam
jp
lret
pop
and
cld
lea
push
sbb
or
test
in
sbb
xchg
lds
inc
xor
fidivrl
scas
loope
call
mov
icebp
mov
dec
jne
dec
mov
push
stc
ds
sti
mov
cs
mov
and
fmull
mov
and
add
lret
push
fistl
fisttpll
js
mov
fnsave
inc
add
test
or
xchg
adc
xlat
mov
dec
and
addb
sbb
mov
test
push
mov
jns
mov
rcrl
xor
std
cmp
stos
push
jmp
mov
subb
rolb
movsl
loop
add
gs
loope
int3
fimull
cld
pop
xchg
pusha
gs
outsb
test
xchg
testb
addl
loop
out
pop
and
xchg
imul
test
push
adc
arpl
cmp
movsl
inc
cmp
fcomps
xchg
fld
jno
rorb
andb
xchg
cmp
popf
sti
stos
mov
dec
pop
subb
xor
sbb
sub
test
add
push
add
fsubl
sbb
lods
cmp
mul
mov
mov
mov
mov
clc
fisttpll
call
add
fists
call
adc
mov
add
daa
aam
adc
popa
add
sub
mov
into
test
popf
sub
pop
lahf
xchg
xor
push
movsb
sub
adcl
jp
mov
imul
bound
mov
mov
scas
mov
adc
jo
pause
test
dec
mov
into
push
sub
out
push
lret
push
or
add
mov
pusha
dec
xlat
ljmp
sub
orl
int
dec
jno
jecxz
push
xor
xor
jno
fimuls
stc
push
pop
mov
cmp
lcall
push
loop
pushf
rclb
xchg
hlt
repz
push
fiadds
out
fsubs
je
lods
enter
aas
mov
cld
jmp
imul
addr16
push
aaa
jo
mov
not
in
loope
xchg
add
jmp
into
in
mov
cmp
jae
sub
adc
pop
inc
movsb
adc
mov
jno
xchg
decb
mov
flds
dec
sti
xchg
ds
imul
aas
mov
push
test
pop
push
add
adc
xor
xor
mov
testl
xchg
xchg
lret
or
pop
bound
or
xchg
lcall
lahf
xor
fstps
loopne
xlat
movups
cwtl
ret
push
inc
insb
mov
adc
movsl
pop
outsl
mov
add
push
rcr
movsb
push
stos
int3
and
subl
jno
pop
je
mov
push
and
xor
repnz
fldenv
mov
pop
push
pop
movsb
mov
cmp
or
push
outsl
add
pusha
movsl
sub
repnz
popf
mov
pop
jecxz
aas
cmpsb
addl
inc
sahf
dec
and
stc
xorl
mov
sbb
xchg
jbe
jnp
stos
mov
mov
sbb
pusha
and
cltd
jb
cmpsl
cwtl
mov
pop
xlat
add
add
xor
jbe
lds
imul
or
arpl
push
popa
loop
mov
cmp
cmp
cmpb
adc
sti
fdivl
push
loop
icebp
jmp
and
dec
test
notb
cmp
sub
sbb
fisttps
add
cmp
fists
sub
mov
outsl
add
mov
jmp
jmp
movsb
call
pop
enter
push
into
and
cmc
mov
mov
mov
jecxz
ds
cmp
or
pushl
jmp
ret
jmp
insb
call
in
mov
jbe,pt
cmp
icebp
ficoml
pextrw
or
fisttps
sub
hlt
jg
cli
inc
xchg
mov
inc
dec
repnz
in
cli
out
repz
lahf
sub
add
add
imul
and
cwtl
pop
push
das
stos
shlb
imul
daa
cli
cli
les
ficomps
mov
mov
mov
pop
mov
gs
loopne
xchg
mov
repz
push
jnp
sbb
cli
in
cmp
or
fmull
lret
cmp
fisubrs
lret
push
mov
cmpsb
lods
pop
outsl
pop
mov
inc
or
mov
lds
bound
aam
mov
sub
sub
pop
decl
popf
pop
and
fs
or
test
call
es
inc
loopne
aas
inc
cmp
int
mov
cs
and
fildll
jl
sub
cld
stc
fistl
dec
imul
fsubrp
jae
ret
push
pop
mov
inc
pushf
das
xor
or
or
stos
mov
sub
outsb
push
mov
dec
sub
jge
frndint
pusha
out
dec
pop
pusha
loopne
add
inc
adc
cmpb
mov
sub
nop
rcl
push
std
movzbl
and
xchg
mov
incb
mov
dec
pop
shrl
sub
or
lcall
test
inc
sbb
xchg
cmpsb
int
xchg
xchg
push
push
pushf
std
add
fidivs
push
mov
and
and
sub
mov
inc
xchg
lahf
outsb
cltd
data16
mov
jg
sbb
xchg
jne
into
icebp
add
push
popa
lret
or
mov
xor
fisttpll
cmp
subb
xchg
xor
std
mov
es
xchg
mov
bound
pop
inc
test
cmp
mov
in
outsb
incb
stos
mov
push
shrb
mov
nop
int
test
xchg
inc
mov
mov
insb
dec
lcall
jmp
xchg
loopne
push
jns
sub
xorl
orl
adc
and
icebp
sbb
add
jg
js
aam
xor
fnstcw
xchg
mov
mov
xchg
rorb
xchg
dec
dec
mov
not
rclb
insb
mov
jo
fstps
aas
sbb
mov
int3
push
stos
stc
xor
xchg
dec
lods
jb
loop
aas
xchg
inc
sahf
inc
out
sahf
out
xchg
fwait
or
cmp
imul
lock
dec
std
mov
vmaxps
mov
push
out
push
ss
xlat
pop
ret
xchg
sbb
call
popa
cld
push
xchg
adc
cmpsb
cli
or
sbb
shll
ds
out
sub
pusha
stos
dec
cmp
mov
imul
xchg
mov
bound
subb
out
mov
dec
in
test
and
sub
cli
xchg
push
push
lea
iret
popa
dec
repz
pop
and
mov
cwtl
pop
push
dec
sub
mov
stos
and
pusha
shrb
sarl
test
and
pop
cmovp
neg
iret
mov
arpl
push
inc
xchg
nop
jle
pusha
ss
cli
pop
push
and
adc
cmp
mov
add
lods
sbbb
sbb
js
pop
mov
pop
popf
sbb
xchg
mov
ja
cmp
gs
sti
push
cmp
movsl
mov
lcall
push
dec
mov
pop
cld
and
scas
sbb
adc
fadds
jnp
int3
subl
dec
sti
cmc
addl
mov
mov
or
mov
push
add
scas
xchg
lahf
mov
add
sti
cmp
not
rcll
pop
mov
loop
stos
sub
pop
shll
cmp
loopne,pn
sbb
call
aad
mov
repz
xor
push
cmp
xchg
test
or
test
push
cmp
movaps
xlat
cmpsl
push
push
aaa
adc
mov
dec
adc
pop
push
mov
in
cmp
scas
pusha
inc
cmpsb
jp
inc
and
es
lods
xchg
xchg
lea
aad
or
ret
adc
cs
enter
sbb
repz
mov
lock
out
cmp
das
xor
icebp
jg
cmc
cs
dec
and
dec
dec
xchg
test
shrb
xchg
and
jno
test
xchg
push
movsl
mov
xchg
pusha
lcall
js
iret
enter
mov
cs
out
adc
adc
and
jle
gs
fisubrl
xlat
andb
cltd
jne
jae
call
jle
aas
ljmp
lahf
flds
mov
adc
in
cltd
daa
loopne
push
addr16
ds
rorl
fisttps
js
scas
js
push
push
sbb
fistl
in
into
add
test
xchg
das
pmullw
cmpsb
movsl
add
push
enter
cli
cld
pop
cmpsl
push
scas
pop
and
pop
nop
sub
or
jmp
shrl
inc
mov
rcr
lds
stc
dec
mov
aam
stos
and
enter
aad
jle
xchg
test
and
pop
testl
adc
and
std
mov
inc
dec
push
mov
pop
shrl
out
mov
xlat
popf
mov
pop
popf
push
les
push
mov
popf
or
mov
mov
xchg
jl
mov
incb
sahf
mov
movsl
rol
and
movsl
iret
leave
pop
push
mov
js
xor
or
inc
gs
mov
lahf
or
mov
jg
and
loopne
and
mov
adc
out
shr
or
push
inc
stc
xchg
mov
cwtl
xchg
das
neg
popf
sub
inc
xchg
dec
lahf
icebp
pop
int
mov
mov
cmc
cmpsb
mov
je
andb
lods
fisubs
pop
fisubrs
lods
loope
pop
mov
dec
hlt
lods
test
pushl
sub
jmp
lods
movsl
or
lods
movsl
test
mov
mov
mov
bound
repz
popf
mov
push
push
jmp
sub
pop
mov
in
dec
dec
fdivrl
xlat
mov
mov
js
push
repnz
xchg
test
mov
inc
data16
xchg
movsb
js
loope
negl
and
xor
cmp
dec
pushf
pushf
loope
aaa
jmp
cli
movb
test
mov
imul
xchg
adc
sub
sub
fdivr
outsl
stos
inc
cwtl
jbe
daa
add
xor
test
sbbl
xor
mov
lock
jb
mov
jb
and
aas
out
cmpl
int3
test
movsl
decb
jbe
mov
mov
mov
push
fiaddl
add
xchg
jo
shll
int3
int
adc
mov
sub
sti
xchg
sbb
in
and
loopne
imul
pop
cmpsb
or
jns
bnd
or
or
cmpsb
pop
mov
pushf
and
repnz
repz
adc
aaa
filds
and
ds
or
mov
mov
cmp
in
dec
mov
aad
mulb
icebp
stc
ss
mov
je
push
ds
jmp
and
sbb
mov
lahf
add
nop
in
mov
push
stc
mov
ja,pt
dec
jle
loop
rol
mov
push
mov
nop
mov
hlt
in
jl,pt
xchg
cmp
inc
test
hlt
inc
popa
pop
xlat
mov
adc
xchg
addr16
mov
or
inc
in
rolb
enter
push
sbb
loope
js
sahf
in
adcb
inc
mov
sbb
lcall
lock
popf
icebp
cmpsb
jmp
out
lods
or
mov
push
push
rclb
imulb
loopne
adc
xchg
popa
mov
orl
lds
lret
dec
cmp
adc
sub
pop
stos
test
sahf
stos
mov
push
out
cltd
push
int3
and
push
jl
repnz
mov
jmp
sti
cltd
pop
mov
sahf
aaa
aad
push
sbb
mov
mov
dec
push
out
push
sub
pusha
xchg
fsts
leave
mov
adc
or
daa
fcompl
jp
pop
cmp
pop
int3
cmp
jg
jecxz,pn
ret
in
fs
jo
xor
xchg
fwait
adc
repz
sub
xchg
lds
idivl
push
push
imul
xchg
dec
xor
cli
push
lock
mov
jae
pop
enter
add
xchg
push
ret
pop
mov
xor
popf
sub
mov
mov
cmp
adc
jp
in
jle
fwait
sbb
mov
scas
mov
std
pop
pop
test
xchg
mov
mov
mov
xor
data16
mov
jo
test
lods
fsubrp
jae
out
mov
dec
mov
push
lcall
push
in
cltd
add
push
add
out
ja
lea
hlt
xchg
fisttpll
loop
or
dec
outsb
mov
jle
mov
adc
sbb
pop
pop
inc
sub
mov
subb
mov
pop
imul
lret
data16
and
or
dec
pop
mov
xor
jg
jl
sahf
push
mov
push
movsb
scas
pop
jmp
pusha
out
adc
das
xchg
in
sahf
jb
test
cmpsb
mov
or
in
in
mov
fnstenv
sub
xor
aaa
fnstenv
call
les
push
push
ljmp
jo
sub
rolb
ret
in
xor
dec
cwtl
adc
roll
adc
sub
std
mov
test
and
cmpsb
aam
shrl
add
aam
ret
ljmp
xchg
mov
rcrb
mov
inc
adc
mov
nop
jne,pt
test
repnz
imul
jmp
sbb
lods
es
ja
ret
incb
sub
pop
jl
mov
ds
xchg
cltd
jne
add
in
movsb
dec
test
lret
aam
int
in
notb
sub
aaa
aaa
in
mov
ss
cltd
lahf
fbld
cmpsl
dec
ret
jmp
jp
xchg
dec
or
xor
sar
sub
xchg
div
jns
mov
jg
sub
mov
aam
rorb
xchg
lods
adc
das
cs
pushf
cmp
push
test
repz
call
push
cmp
test
cmp
add
add
sub
lahf
adc
imul
fwait
jl
sub
jns
inc
and
xor
sub
sub
lock
jbe
mov
cmp
out
cltd
test
loopne
push
shlb
cmp
outsb
mov
lds
pop
outsb
loop
push
push
add
push
mov
mov
sbb
in
arpl
lahf
xchg
cwtl
inc
pop
inc
loope
pmaddwd
out
mov
xchg
outsb
or
push
into
in
call
movsb
add
lds
jno
add
les
mov
repnz
and
sub
in
and
inc
aad
xor
lea
inc
jle
mov
and
or
cmpsb
xchg
and
jno
lret
or
shrl
push
mov
test
push
pop
jecxz
lret
inc
stos
xor
repz
cltd
stos
test
mov
adc
cs
pslld
pushf
xor
in
or
in
mov
ss
cltd
lahf
fbld
cmpsl
dec
ret
imul
pop
cmp
or
aad
dec
in
xor
adc
lock
or
jl
les
test
aam
adc
rorb
xor
imul
repz
inc
mov
pop
gs
sarl
mov
add
sbb
popa
and
or
es
pushf
and
sti
or
lret
test
fmull
add
or
in
pop
jge
jbe
mov
adc
fstl
push
test
jb
pusha
dec
addb
push
cltd
push
mov
mov
fdivrs
popa
cmpl
mov
and
mov
mov
pusha
sbb
jb
push
fcoml
imul
subb
popa
xchg
adc
addb
cltd
aaa
notl
rcrb
js
mov
sub
jl
cmp
push
aad
jge
icebp
sub
fwait
pop
les
push
adc
xchg
sarb
hlt
nop
adc
imul
push
jmp
jl
dec
mov
leave
or
mov
sar
xchg
bound
xchg
xor
fadd
into
dec
out
pop
roll
jb
cmpb
pop
mov
shlb
xchg
in
jae
inc
xchg
xor
test
pop
aas
sbb
fsubrs
sub
or
jle
pop
repnz
jb
xlat
addr16
xor
jl
pop
ljmp
xchg
inc
inc
push
and
mov
xor
cmpsb
push
xchg
fcmove
push
stc
and
das
jo
pushf
arpl
xor
cmp
cmp
xchg
push
sub
aas
mov
pop
imul
jno
or
mov
js
push
push
xor
jmp
inc
cmp
loopne
mov
scas
jecxz
push
cmpsb
sub
add
jae
stos
lods
add
add
jecxz
iret
in
adc
int
cmp
jle
jae
pop
or
mov
icebp
push
dec
jmp
xor
pop
in
push
iret
nop
and
or
sub
ds
add
loope
out
int
repz
lods
mov
test
inc
dec
push
add
loopne
pop
push
sub
lods
pop
out
pop
das
pop
fidivs
in
pop
ficomps
aas
push
push
cmp
jl
inc
sbb
xchg
mov
ret
sub
mov
movsb
mov
ljmp
push
xchg
std
pop
hlt
dec
nop
or
pop
movl
pop
mov
js
lods
fnsave
cmp
add
popf
rcrl
pop
mov
mov
fdivl
inc
stos
std
jae
cli
xchg
sbb
mov
mov
jl
lret
mov
inc
fld
sbb
in
outsb
fsubs
out
pop
sar
in
ret
pop
xchg
inc
les
aam
jo
dec
pop
add
mov
push
xchg
ret
fstpl
cwtl
inc
fyl2x
push
mov
pop
and
lea
rclb
or
and
aad
sahf
and
and
addl
iret
movb
fsubr
hlt
xchg
jmp
dec
xchg
sub
ss
xlat
pop
add
jg
inc
ss
mov
xchg
movsl
loop
pop
idivl
in
push
mov
mov
cmp
rclb
xchg
adc
sbb
jne
mov
test
push
ret
adc
ljmp
cs
movsb
jge
push
inc
outsb
jecxz
ja
and
sub
pusha
sbb
shrl
sbb
sub
add
fstps
fildl
add
fldcw
mov
adc
jno
xlat
dec
repz
cmp
lahf
xor
dec
sub
ljmp
and
movb
jbe
js
inc
push
fs
ds
xor
or
mov
or
cmc
sbb
add
pop
inc
stos
add
in
js
mov
enter
test
sub
andb
and
xor
adcb
jns
mov
xchg
mov
pusha
push
subl
push
cmp
aaa
jo
in
sub
mov
decb
insl
xor
mov
cwtl
ret
insb
fstpt
notl
fwait
xchg
cmp
js
fwait
and
sbb
fs
popa
jnp
mov
shll
jo
test
sti
and
and
push
mov
mov
cld
and
leave
pop
lcall
adc
or
arpl
fistl
sarl
pusha
jno
xor
pop
aaa
xor
push
mov
flds
ret
gs
pusha
push
jno
dec
add
mov
test
test
movsl
stos
insb
xlat
je
push
leave
mov
js
xchg
ss
mov
sub
mov
mov
rorl
das
repz
cmp
and
arpl
shll
dec
jo
fsts
loopne
idivb
and
je
cmp
div
mov
and
or
cli
jl
cmpl
mov
cmp
sbb
push
jmp
scas
les
test
ds
or
pop
or
int
cmp
icebp
int
sar
dec
mov
or
daa
ret
sahf
xchg
sub
lea
daa
push
outsb
std
faddp
jbe
pop
mov
cld
popa
les
daa
cli
outsb
jp
rcl
divl
sub
inc
dec
xchg
cmp
lods
pop
push
pop
insb
outsb
and
ds
fwait
shl
xor
and
jnp
rorl
rol
call
int3
mov
lock
push
fsubrl
iret
ret
jmp
fcmovbe
shrl
leave
jns
iret
mov
repz
test
rcll
test
push
decb
mov
sbb
mov
js
in
incb
mov
pop
cmp
lret
mov
fwait
out
or
in
fldenv
js
orl
xlat
mov
cmp
and
jmp
and
sub
roll
or
pop
lret
xchg
adc
push
jge
je
jp
xchg
outsl
dec
cwtl
xor
popa
and
gs
ss
xor
pop
lds
or
lds
fs
popf
mov
mov
lcall
sub
je
imul
push
jb
sahf
scas
cli
push
jle
mov
inc
mov
clc
dec
mov
dec
mov
mov
dec
xor
dec
cs
pop
mov
movsl
pushf
repz
cmpsl
pop
hlt
mov
or
call
mov
es
dec
pop
mov
adc
dec
loop
mov
scas
sbb
jno
jge
mov
inc
pusha
shlb
jbe
mov
push
add
int
xor
inc
insl
sbbl
adc
sub
aas
jae
cs
rcll
jns
in
mov
cmp
mov
fwait
repz
cld
fisubrs
das
daa
xor
in
adc
cmp
cmpsl
jne
add
std
xchg
lds
mov
pushl
sbb
xchg
scas
jns
mov
movsb
ja
leave
idivb
sahf
jp
lret
hlt
and
cmp
jno
xor
cmpsb
lret
xchg
sbb
sahf
daa
sub
fsts
dec
adc
jae
ds
pop
in
int
pop
mov
insl
outsb
out
mov
xor
xchg
rclb
in
lock
mov
leave
cltd
out
cmpsb
das
mov
pop
or
fwait
push
jge
stos
jb
inc
in
jo
push
pop
idivl
icebp
aam
pop
lret
xor
loopne
push
add
test
insb
jno
lods
and
enter
sbb
lds
push
dec
stc
out
dec
xchg
sahf
mov
mov
lahf
lds
pusha
scas
push
or
xchg
ds
outsl
add
int3
scas
cmp
daa
inc
inc
sarl
stos
js
push
hlt
lahf
xchg
imul
pop
xchg
fistpl
insb
jmp
addr16
mov
inc
mov
adc
and
sarb
or
icebp
pop
cmovl
jo
hlt
push
pop
xchg
negl
jo
mov
scas
xor
dec
push
cmpsb
mov
and
adc
stc
jns
mov
dec
jae
aam
mull
movsl
mov
aaa
int
cmc
dec
ficompl
fists
dec
xchg
mov
lock
rolb
push
xlat
mov
iret
fsub
mov
ret
cmpsl
jnp
fnstenv
out
pushf
inc
mov
adc
xchg
mov
and
popf
ljmp
aad
pop
cmp
jne
jne
dec
mov
icebp
pop
or
pop
fsubl
mov
stc
movsl
xchg
std
mov
or
cmp
int
nop
push
and
cmpsl
xchg
mov
mov
xchg
lahf
adc
sbb
daa
aas
test
cltd
mov
xchg
xor
ficomps
push
pushf
mov
out
cwtl
fisttpl
mov
out
xchg
and
cwtl
lds
xchg
pusha
lods
sbb
and
xchg
int
push
add
out
inc
std
clc
push
cwtl
mov
mov
lea
into
adc
inc
mov
jb
mov
cmc
dec
push
mov
pop
test
dec
lock
insl
test
push
fcomp
fldt
lret
in
stc
movsb
cli
jb
sub
sub
sarl
int
dec
stc
inc
pop
aaa
adc
fsts
xchg
jg
dec
cmp
add
insb
clc
xor
jb
add
xchg
int3
sub
add
mov
fwait
sbb
rcl
xchg
dec
shlb
test
add
js
jl
mov
idivl
push
cld
ds
out
jns
push
jecxz
xchg
rorl
sbb
mov
mov
dec
pop
jg
push
jo
sub
or
outsl
pop
mov
out
jo
insb
dec
push
loop
in
lds
repnz
ret
leave
pop
ret
cmp
leave
add
jb
mov
pop
pop
sar
mov
es
jns
shrb
test
icebp
iret
lcallw
xchg
test
mov
jb
or
aad
sarl
sarb
jp
pop
dec
mov
mov
xchg
cs
fists
fs
shll
cli
les
jae
std
je,pn
fstpt
imul
jns,pn
cltd
pusha
mov
mov
sbb
popf
mov
cmpb
fisttps
inc
fists
jmp
test
jbe
jns
mov
jae
mov
jl
negl
cmpl
pop
cmp
in
mov
aam
cmp
mov
outsl
dec
jl
mov
mov
insl
sbb
dec
int
rcll
mov
mov
fstl
dec
jl
ret
mov
push
pop
xchg
sti
sahf
call
cwtl
pop
cmp
xor
insb
mov
popf
lret
pop
mov
cwtl
les
sahf
mov
fildll
xchg
fsubrs
mov
aaa
lods
sbb
lret
imul
mov
movsb
cwtl
mov
sbb
xor
xor
push
jnp
outsb
push
psubusb
movsb
pushf
lods
movsl
jge
xor
xchg
mov
dec
sahf
test
jmp
outsl
add
clc
pop
push
sub
in
sub
inc
lcall
rorl
dec
cmc
lcall
add
insl
add
fsubrp
mov
mov
cltd
imul
pop
mov
popa
dec
pushf
xchg
mov
dec
cmc
mov
jmp
sub
xchg
leave
inc
mov
cmc
adc
inc
aad
out
es
mov
sti
fwait
cmp
repz
mov
mov
mov
sarb
dec
cltd
or
data16
and
push
xor
adc
jno
fldcw
sub
jnp
in
adc
inc
stos
mov
jl
pop
ljmp
push
es
pop
and
and
fldcw
sub
xchg
push
imul
adc
rol
push
nop
jge
rcl
aam
gs
sub
push
ja
fldt
pop
mov
cmc
mov
push
int3
rcl
sti
rorl
fisttpll
loope
mov
mov
rcrl
pop
outsl
shrl
fisttpll
je
adc
into
cmp
lret
lret
fimull
push
inc
push
int
test
fwait
xchg
data16
insb
andl
hlt
adc
mov
mov
test
xor
out
mov
jbe
vpunpckhqdq
xorl
cli
pop
push
cmp
fwait
test
sahf
repnz
or
repnz
xor
adc
xlat
and
outsl
repnz
xor
int
jnp
add
sub
mov
inc
sub
add
push
push
movsl
cmp
stos
xchg
mov
sbb
nop
inc
push
stc
push
bnd
or
push
or
pop
inc
xchg
jnp
lds
pop
pusha
ficompl
test
insb
inc
insb
jp
in
pusha
or
cld
sub
mov
cmpsl
push
xchg
sti
push
add
in
pop
sbb
hlt
rorl
mov
pop
repnz
fsts
stos
push
xor
aas
xchg
push
jmp
jl
cs
mov
clc
or
mov
dec
and
push
mov
imul
in
dec
add
sub
out
or
repnz
stos
ja
in
inc
das
es
cmp
mov
cld
movsb
hlt
stos
das
dec
mov
add
mov
xor
mov
mov
aam
je
push
mov
es
cmpb
push
adc
jecxz
fsubrp
test
cld
test
xchg
xchg
push
icebp
test
mov
dec
fmull
sub
cmpsb
sub
xor
xlat
jb
fs
and
loope
pusha
movsl
fucomip
mov
arpl
fwait
push
test
sub
and
pop
push
test
cmpsl
call
fcomps
sub
rorb
test
out
arpl
test
inc
je
cmc
inc
adc
xor
push
push
aaa
test
xor
in
aam
je
dec
dec
cli
ja
and
push
or
and
inc
mov
sbb
in
push
stos
push
cmp
xchg
and
lcall
popa
add
jmp
adc
mov
fld
mov
inc
rcrl
bound
sub
cmp
stos
sub
das
das
loop
xchg
sbb
add
lock
pop
push
js
dec
int
mov
and
dec
les
cwtl
cmp
les
pop
sbb
dec
call
hlt
xchg
pop
sub
dec
push
fcmove
dec
xchg
mov
sub
mov
mov
pop
andb
push
mov
in
aaa
xchg
call
dec
xchg
pop
cmp
sbb
push
clc
sub
xchg
push
in
add
incb
out
cmp
push
in
mov
out
jmp
clc
mov
mov
xchg
call
push
dec
sub
jbe
xor
pop
mulb
pop
xchg
pusha
xchg
lods
adc
cli
xchg
sahf
jecxz
popa
out
sbb
aas
mov
push
or
js
xor
out
loop
mov
cmp
incb
dec
mov
dec
inc
adc
popf
adc
push
jno
cmpsl
sub
jle
mov
add
sbb
es
hlt
fisubl
in
test
insl
in
mov
xchg
movsb
xchg
dec
jbe
mov
adc
inc
xlat
sbb
adc
jg
shld
push
rcll
rclb
lods
adc
xchg
mov
inc
inc
inc
push
ljmp
mov
repnz
scas
ja
test
dec
push
sub
out
pop
loopne
mov
ljmp
push
stos
push
mov
ds
dec
ds
stc
add
imul
cli
mov
mov
dec
pushf
movsb
mov
lods
lret
mov
repnz
push
add
jo
movl
mov
movsl
xor
mov
sahf
fisttpll
jecxz
jg
insb
sbb
cmpsb
loopne
rcrl
inc
lods
inc
das
mov
scas
movb
aas
loopne
lahf
je
cli
pop
out
inc
dec
fadd
iret
cmp
std
hlt
loope
pop
call
cmpsl
pop
add
xchg
dec
xchg
aam
push
jb
cmpsl
inc
and
insl
sbb
insl
and
cld
mov
and
xor
mov
mov
clc
or
mov
push
bound
mov
lea
cmc
xchg
push
ret
mov
pop
sbb
pop
div
pop
sub
jp
ror
push
pop
mov
fisubs
sbb
mov
fcompl
test
fsubl
mov
mov
mov
pop
mov
or
test
pop
outsl
and
mov
xchg
mov
fwait
lock
inc
fs
es
and
mov
push
cltd
adc
repz
in
sub
xchg
sbb
xor
xlat
lods
cld
repnz
ret
xchg
sbb
sub
lret
push
mov
movsl
repnz
fwait
pop
pop
mov
push
xor
and
scas
adc
dec
jb
ds
jo
pop
pop
mov
scas
dec
cmc
inc
jge
jmp
xchg
sub
fs
cmp
push
mov
xor
repnz
xchg
aaa
or
jg
in
mov
sbb
fadd
pop
jno
cmp
fidivl
mov
test
mov
mov
inc
insb
icebp
xor
in
mov
pop
hlt
loopne
cmp
inc
cmp
popf
aaa
nop
cli
shrb
aam
push
in
scas
out
xchg
leave
and
cmp
adc
daa
mov
ds
fstps
cmpsb
sub
jle,pt
sub
mov
sbb
pop
dec
lods
mov
sub
ror
and
add
cmp
cli
popa
xchg
movsl
lret
inc
xor
stos
push
cmpsb
notb
jmp
dec
shr
cmp
movb
fnsave
rcll
and
fsts
cli
cmp
into
loope
push
jno
sarl
adc
push
outsb
aam
into
adc
pop
fisubrl
or
pop
xor
cs
and
jle
sub
inc
pop
sub
gs
pop
ljmp
test
adc
scas
stc
cs
pop
repz
cs
jno
sahf
lds
std
repnz
jb
push
mov
rorl
dec
xchg
mov
cmp
cmp
adc
xchg
out
push
scas
mov
movsb
cltd
nop
or
aad
gs
imul
pop
xchg
jle
xchg
adc
test
mov
int
jo
pop
shll
jmp
outsl
add
lret
mov
pusha
test
sub
and
and
test
or
sub
add
nop
ss
lds
shr
loopne
loopne
test
pop
pextrw
sbb
repz
ja
loopne,pt
lds
push
cmp
cld
insb
dec
xor
fbld
test
xchg
and
cmp
scas
xor
jl
out
dec
je
jl
cmp
loopne
xchg
shlb
fstpl
pop
mov
jle
div
dec
xor
sub
adc
adc
pop
lret
fsub
xor
sub
inc
mov
int
loop
xchg
add
xchg
hlt
or
test
mov
hlt
cmp
add
sub
dec
mov
loopne,pt
imul
pop
dec
clc
ficoms
cmpsb
cwtl
jg
lcall
sbb
mov
fldcw
notl
test
mov
jg
mov
outsb
xchg
push
std
mov
test
std
mov
lods
xchg
sub
lds
xchg
ljmp
sbb
in
in
adc
data16
cwtl
pop
mov
sub
xorb
aam
mov
mov
nop
in
data16
add
sbb
movsb
cmp
fldcw
ret
shl
push
jnp
hlt
andb
enter
mov
test
or
repz
or
jb
pop
mov
xor
mov
aas
repz
sub
add
dec
stos
adc
cmpsb
mov
jbe
cmp
xlat
lock
decb
jns
and
insl
rep
rclb
push
dec
in
hlt
fsubl
dec
cld
filds
cli
xchg
sbb
dec
mov
mov
icebp
fucomip
lret
mov
cmp
pop
add
out
out
movsl
mov
push
sub
jle,pt
lds
idiv
in
cmp
jmp
cmp
hlt
gs
dec
sub
leave
sub
repnz
sub
stc
inc
fdiv
add
mov
sub
mov
sub
push
ret
pop
and
ljmp
cmp
sar
xchg
out
ret
loop
sbb
out
in
insl
lock
xchg
push
mov
cwtl
test
test
js
sub
je
mov
mov
in
pop
sti
cmc
ficomps
imul
fs
adc
out
xchg
push
daa
adc
fnstsw
ret
adc
js
ja
out
fwait
adc
enter
cmp
inc
pusha
dec
lret
push
fstl
testl
ljmp
mov
add
cmp
jb
sub
lret
stos
cwtl
inc
mov
cmp
lds
and
sub
lds
or
xor
adc
out
fldl
cmpsb
xchg
push
div
mov
sbbb
mov
cld
clc
sub
jp
negb
test
jns
hlt
sbbb
xor
arpl
jae
cmc
inc
out
mov
in
adc
cmp
int3
or
dec
cmp
xor
jge
jecxz
fstl
mov
push
jno
js
pop
pop
dec
das
and
shl
mov
rclb
sahf
fnstsw
push
mov
out
aas
rcrb
sbb
xchg
lahf
sahf
sbb
rcrl
out
leave
push
add
sbb
mov
sub
cmpsl
mov
and
sbb
sub
cld
hlt
sub
xchg
xchg
cmp
rol
idivb
sub
jns
jo
xor
out
ficoml
sub
je
stc
xchg
les
daa
xchg
es
mov
sub
in
sti
bound
loop
xchg
mov
loop
out
dec
add
jl
in
adc
fnstcw
pushf
pop
test
push
sarb
fidivrs
loope
rorb
xor
xchg
pop
lds
push
cmp
push
and
xor
push
pop
filds
outsl
xchg
xor
jnp
mov
xor
js
xor
jg
adc
fbstp
cld
adcl
fcomip
jbe
or
int
test
and
cld
mov
inc
mov
mov
in
ret
sbb
xor
xchg
test
loope
jmp
ret
cld
shlb
mov
mov
and
mov
or
mov
pushf
pop
cmc
and
dec
xor
ds
jge
push
pop
ds
pop
add
mov
or
mov
gs
je
inc
ljmp
or
or
call
push
push
pop
lea
outsb
out
ja
test
ja
adc
mov
dec
mov
push
adc
push
push
jae
out
mov
iret
lds
lret
adc
arpl
push
sbb
fdiv
sarb
fmulp
incb
pop
jns
icebp
mov
in
or
stos
insl
and
mov
xor
movsb
ret
ds
pop
sbbl
pop
or
adc
lds
fldl
icebp
not
ljmp
mov
dec
lcall
jp
xchg
aas
pop
imulb
mov
cli
scas
aas
lret
imul
nop
lret
icebp
jnp
adc
dec
lods
fadds
pop
xchg
jmp
add
test
xchg
fadd
xchg
mov
dec
jo
lret
out
clc
cld
jmp
test
aam
les
fists
sub
mov
les
xchg
and
fldcw
test
sti
stos
fldt
sbb
or
lea
fnstcw
xchg
aam
je
fdivrs
adc
test
adc
jmp
add
dec
jne
mov
aam
cmpsl
push
push
push
mov
loopne
push
xor
popa
mov
subl
js
dec
fcomip
ret
clc
pop
jae
out
adc
notl
fsub
fwait
popf
outsl
in
sbb
out
lcall
mov
adc
pop
cmp
sub
mov
xchg
je
call
shll
or
hlt
out
aam
popf
pop
or
call
insl
pop
loop,pt
dec
test
fsubl
repnz
cmpsl
or
shll
data16
pusha
ficomps
hlt
xor
shll
jg
rcrb
add
xor
gs
into
mov
mov
inc
mov
xor
inc
iret
lret
push
sbb
mov
mov
adc
lcall
arpl
jno
cmc
xchg
out
roll
fyl2x
nop
mov
push
adc
jmp
popf
pop
adc
mov
fdivr
mov
mov
sub
cmp
sarb
int
loop
rol
aam
cmp
xor
sbb
sbb
in
add
out
ss
adc
mov
mov
lock
mov
sbb
sbb
xchg
jmp
xchg
mov
sub
cmc
inc
fcomps
jb
push
jno
shlb
mov
ss
addr16
xchg
jle
xchg
das
test
ret
add
mov
divl
sbb
or
mov
and
inc
inc
fcompl
daa
mov
sbb
cli
xorb
adc
fidivrl
push
push
mov
dec
jge
test
dec
loop
mov
xor
stos
ljmp
icebp
mov
and
es
pusha
pop
xchg
test
adc
loop
fcoml
adc
out
push
mov
dec
sbb
shlb
loop
xor
push
push
lods
lahf
xchg
mov
outsb
decl
roll
int3
bound
fcompl
sbb
jl
add
cmp
mov
stos
ja
jbe
aad
xor
repz
sub
fwait
andl
xchg
and
outsl
dec
pusha
pop
insl
in
fnstsw
out
call
mov
call
ficomps
inc
or
pop
or
or
and
xchg
lods
mov
push
test
xor
cmpsb
popf
mov
fcmovnbe
test
jge
sti
sbb
xchg
dec
repnz
fadds
xor
outsb
ret
mov
fstl
mov
add
push
pop
xchg
mov
or
std
adc
fwait
sarb
jmp
test
out
pushf
add
cs
std
sub
inc
cmp
aad
fcmovb
cmp
lods
pop
pop
popa
lds
or
inc
cmp
test
daa
push
aam
mov
jmp
bnd
mov
rolb
cmp
into
movsb
cltd
aam
pop
aam
mov
sbb
push
fbld
or
pop
cmovbe
insl
mov
and
fsubrs
ds
shl
pop
movsl
mov
std
testl
jl
fsubrs
mov
dec
xchg
loop
fdivrs
dec
into
push
addr16
jns
in
jp
mov
loop
mov
rol
push
out
rcrl
or
xor
frstor
sub
loop
sub
ss
and
test
or
movsl
test
and
dec
xor
inc
and
imull
dec
mov
fimuls
sub
adc
add
mov
in
cmp
pop
hlt
daa
push
fmull
cmp
push
inc
push
adc
movsb
add
clc
add
notb
xchg
sub
push
pop
adc
jmp
add
or
sbb
cli
push
test
movsl
test
mov
push
xor
cmc
ja
push
insl
sub
cwtl
fs
imull
leave
sbb
jmp
xchg
or
sbb
repz
and
ror
std
pop
ffreep
jns
outsl
add
inc
ret
or
mov
pusha
fiaddl
xchg
gs
or
mov
js
mov
aaa
sub
sub
bound
test
mov
dec
dec
call
push
mov
dec
mov
les
xchg
cmp
mov
lcall
inc
hlt
adc
dec
mov
add
jl
adc
and
data16
out
fisubs
es
aad
xor
popf
xchg
lcall
sub
je
and
and
mov
or
mov
hlt
ss
jno
movl
cmp
lods
cli
in
shlb
loopne
les
jb
pop
dec
jnp
aam
data16
movsl
es
mov
adc
xchg
test
inc
sbb
stc
out
pop
ret
pop
sub
out
lods
fwait
scas
aas
fs
xor
mov
test
jb
lret
in
leave
xchg
in
je
jp
xchg
push
arpl
and
add
nop
gs
std
dec
fistpl
xlat
cmp
divb
add
pop
push
mov
jns
push
mov
loope
pop
mov
mov
add
cmp
bound
int3
add
push
outsb
sbb
mov
xor
or
or
mov
in
pop
leave
jl
inc
lds
test
les
fisubrl
mov
xlat
xchg
lds
push
lods
pop
adc
in
mov
push
imul
xchg
mov
pop
push
hlt
je
shrl
lahf
jmp
ds
xchg
adc
fs
pop
mov
jbe
les
cmp
loopne
out
sub
insl
mov
mov
aad
dec
jnp
push
pop
ss
pop
mov
insl
fistps
push
pushf
sub
adc
leave
das
adc
sub
xchg
cltd
sarb
dec
cld
mov
fisubrs
lahf
xchg
pop
movsl
in
inc
cmp
lds
in
repz
cmp
movsb
movsl
push
add
xor
jg
popf
es
movsb
call
xor
shll
add
shlb
in
jmp
adc
or
dec
repz
inc
inc
sbb
ds
xchg
pop
je
es
in
cmp
dec
mov
cld
rorl
cmpsl
pop
lea
inc
jns
orb
mov
gs
sub
shl
xchg
add
or
cmpb
testb
fidivs
inc
jns
in
xchg
inc
mov
jp
hlt
jp
lds
jo
add
pop
inc
gs
loopne
or
bound
int
pop
xor
cmp
xor
push
ds
out
xor
sub
mov
xchg
jle
cld
mov
mov
push
xchg
push
lods
fidivl
arpl
mov
xchg
ficompl
sarl
dec
inc
sarb
sub
mov
jp
jge
pushf
roll
rorl
cld
or
jmp
cmpsb
icebp
in
xlat
pop
fldl2t
xchg
rclb
dec
inc
sarb
and
notb
jmp
scas
in
rclb
xchg
mov
out
in
insl
xchg
and
cmc
mov
dec
cs
sahf
aam
jns
imul
fadds
shll
and
and
leave
iret
lahf
fcoms
aad
fcoms
rcl
mov
or
adc
outsl
cs
cmpsb
in
clc
mov
test
pop
cli
and
test
adc
cli
adc
adc
push
bound
pop
jb
popf
imul
fstpt
sbb
adc
inc
repnz
mov
push
inc
into
mov
adc
pusha
notb
addr16
mov
cmp
push
subb
int3
mov
insb
out
lods
mov
shrb
fwait
lret
int
int
aam
ret
sub
push
lea
push
sti
inc
mov
stos
pop
hlt
ljmp
adc
sahf
lret
stc
addr16
pushf
mov
xor
popf
mov
and
lret
sub
ret
cltd
sub
or
out
pop
mov
into
adc
scas
push
dec
sub
mov
insl
in
andl
pop
mov
std
pop
fs
pop
ljmp
insb
pushf
shr
in
cs
push
out
or
dec
dec
test
or
cld
cmp
stos
pop
test
jecxz
adc
fidivrs
outsb
movsb
inc
stc
mov
sub
push
dec
mov
sti
roll
xor
scas
enter
mov
mov
adc
xchg
out
mov
pop
xor
or
loop
ds
movsb
mov
pop
xchg
mov
xchg
pop
sahf
mov
push
bound
and
ds
mov
cltd
idivb
dec
push
stc
xchg
jne
pop
testb
andb
mov
adc
fld
scas
xlat
jge
cmp
js
inc
xchg
outsb
xor
xor
push
repz
call
fists
arpl
jns
gs
insl
scas
loopne
xchg
or
mov
adc
aam
push
push
inc
ret
adc
das
movsl
stc
mov
icebp
imul
pop
and
test
mov
loope
jnp,pt
ret
mov
call
out
jo
adc
adc
imul
nop
aad
mov
cld
mov
fs
and
inc
jge
sbb
mov
xlat
push
outsb
jns
inc
dec
cmc
inc
aas
stos
lahf
mov
adc
ret
lds
gs
mov
pop
out
movsl
inc
les
rorl
inc
movsl
sub
out
push
dec
mov
and
adc
int3
rol
call
call
test
xor
les
xor
add
fsub
dec
push
stos
lahf
call
push
xchg
popf
loope
adc
sbb
push
rcrl
pcmpeqb
pop
test
hlt
repnz
scas
js
pop
dec
mov
push
sub
cmp
data16
mov
ljmp
xchg
or
jmp
cmpsl
and
mov
das
jbe
dec
roll
push
dec
test
sub
pop
or
mov
xchg
sahf
js
ds
xchg
pop
xchg
mov
cmp
adc
movsl
sub
shll
aaa
inc
and
sahf
dec
cmp
fdivs
ret
cmp
dec
adc
repnz
push
ret
mov
lods
mov
cld
aam
xchg
push
sbb
das
add
adc
push
stc
fdivrl
test
xor
xchg
rolb
jge
scas
sarl
test
sti
xorl
pop
cli
scas
cmp
sub
ja
mov
lret
lds
dec
dec
sbb
int3
xor
xor
fimull
mov
dec
jl
fwait
stos
loop
jne
jno
aaa
iret
mov
ljmp
mov
xchg
or
mov
adc
das
sbb
idiv
or
adc
jae
in
or
cmp
cmp
cmp
fisubs
inc
mov
sub
xchg
lret
test
out
add
aas
aaa
add
adcl
in
pop
cmp
sub
xchg
stos
not
pop
dec
jp
incl
mov
mov
sahf
push
inc
dec
iret
nop
cmpsb
loop
fisttpl
test
push
icebp
in
test
sbb
dec
or
bound
das
jne
daa
ja
sub
leave
sbb
divb
mov
mov
rclb
or
cmpsl
mov
xchg
repnz
sub
sahf
ficompl
xor
subl
cmp
icebp
adc
inc
pop
out
pop
xchg
push
push
lahf
rclb
xchg
push
inc
daa
aam
fwait
jne
rcrb
je
xchg
mov
jmp
into
xchg
cld
notl
mov
cli
rcrl
and
js
xchg
shll
xor
js
std
mov
inc
das
and
movsl
adc
cmc
xchg
out
cmpsl
sub
fstps
fs
or
roll
in
cmp
push
fldenv
filds
out
fs
pushf
imul
enter
or
icebp
out
inc
lret
shl
pop
inc
mov
xchg
mov
mov
ficoml
push
mov
ss
cmp
stos
fs
push
push
sbb
inc
xor
insl
es
shr
ss
add
shrl
pop
xor
jmp
test
mov
or
dec
les
mov
fs
sahf
inc
repnz
fs
femms
push
test
or
and
add
icebp
mov
cmp
in
and
lods
repnz
pop
mov
inc
xchg
mov
pusha
xor
ds
repnz
fs
inc
es
dec
aam
xchg
and
repnz
pop
ret
ds
xchg
fs
xchg
mov
jns
push
aam
popf
stos
popa
pop
idivl
pop
les
inc
sahf
imul
or
int
ds
rcl
cmp
stc
and
dec
insb
aam
xor
cwtl
sahf
hlt
mov
lret
xchg
pop
gs
and
adc
pop
or
jno
inc
hlt
imul
cmp
aam
cmpsb
rcr
call
fcomip
movsl
fcmovb
in
enter
mov
cwtl
push
loop
icebp
pop
mov
push
xchg
mov
push
bnd
pop
inc
arpl
dec
xchg
adc
jns
pop
nop
dec
mov
or
push
pop
dec
fs
fdiv
cmp
clc
or
sahf
out
mov
mov
mov
inc
movsl
rolb
lea
scas
popa
aad
mov
mov
and
pop
and
adc
push
es
gs
and
icebp
cmp
mov
adc
repnz
popf
repnz
shrb
mov
movb
test
cmpsl
call
nop
xchg
scas
shrl
aas
sbb
jmp
cmpsb
inc
fiaddl
sub
mov
mov
mov
dec
callw
push
mov
push
jp
rcl
fwait
enter
scas
adc
sbb
pop
fidivrs
mov
notb
xor
mov
adc
andl
repz
xorl
aam
fsubrs
hlt
pusha
ret
rclb
pslld
mov
test
stc
pop
icebp
mov
rorb
mov
pop
dec
lea
cmp
fs
jmp
jge,pt
and
cmp
jmp
jmp
stc
in
inc
sbb
in
add
pop
repz
lret
fs
es
ret
test
or
fstl
mov
mov
bound
cmpb
lcall
out
mov
xlat
fcomps
mov
jp
xor
inc
stc
popa
cmpsl
jbe
mov
mov
mov
xor
jp
push
add
ficoms
xchg
inc
or
call
sbb
test
mov
mov
xchg
xchg
mov
xor
jge
mov
outsb
mov
or
xchg
popa
or
mov
xchg
sub
imul
xor
sub
dec
adc
xor
or
in
lods
sbb
sbb
lcall
dec
inc
roll
fcmovnb
xchg
dec
jg
or
push
xchg
cltd
mov
std
lret
stc
xchg
push
orb
adc
add
sbb
xchg
inc
cmp
mov
sub
pusha
pop
in
std
in
psubb
sahf
clc
insb
cmpsl
cmpsb
std
loope
xchg
in
js
or
clc
push
cld
and
ret
into
in
or
movsb
sbb
in
sbb
mov
ljmp
jle
stos
pushf
js
and
jp
add
mov
fneni(8087
push
pop
repnz
lret
xchg
int
mov
repnz
imul
shrb
nop
inc
icebp
push
loopne
jne
fs
outsl
test
push
in
enter
cmpsl
test
or
std
js
cmpsl
dec
movb
mov
adcl
je
repnz
jmp
fmulp
sahf
clc
pop
pop
push
cmp
shll
repnz
loopne
or
xor
cmp
xchg
clc
into
jl
push
lods
repz
in
fcmovnb
inc
and
sbb
or
leave
lods
test
dec
ds
dec
sarl
call
xor
iret
push
fs
icebp
sbb
dec
scas
pop
in
xor
cmp
mov
xor
call
jmp
or
ret
inc
iret
pop
xchg
sbb
mov
cmp
aad
and
mov
stc
fsubs
cmp
test
mov
int3
inc
adc
or
dec
fsts
test
test
flds
clc
pop
es
out
jmp
jo
or
add
sub
mov
mov
scas
inc
mov
insl
mov
hlt
loop
out
loop
jle
fistl
repz
notb
sarl
jns
or
fs
aad
cs
scas
testb
ja
add
xor
ss
xchg
jbe
sbb
inc
xor
not
lret
das
or
out
lock
test
lds
mov
sbb
mov
setne
rcrl
cld
sbb
push
outsb
xor
sarb
cmp
pop
adc
out
je
and
je
mov
lock
lret
mov
mov
push
mov
fistl
ficoms
out
jle
xchg
adc
aaa
sbb
jne
xlat
loope
jae
addr16
je
push
sub
sub
inc
mov
adc
xchg
adc
rcrl
dec
lret
inc
adc
fisubrl
jecxz
sarb
mov
mov
xchg
insb
jns
idivb
push
ret
outsb
sbb
xchg
lock
fisubrs
scas
mov
lcall
jnp
ss
jns
xchg
shll
xor
out
das
loopne
in
in
or
sub
lods
out
push
lea
push
mov
push
orb
shrl
aam
popf
outsl
inc
cmc
fisubrl
lahf
and
repz
mov
add
fdivs
mov
cmp
xorb
jecxz
mov
ror
in
loop
sbb
movsl
or
cmp
lods
nop
ret
pop
jg
call
sub
sub
adc
test
pop
out
adc
ficomps
int
es
ret
in
pop
into
xchg
jle
out
mov
movsl
call
lret
and
mov
hlt
jle
and
iret
push
insb
lock
sub
add
xchg
repnz
cmp
cwtl
lcall
jo
jb
ret
stc
dec
cmpsl
lds
sbb
mov
inc
lret
pop
push
push
aam
movsb
hlt
lea
xor
js
test
inc
les
rol
xchg
daa
call
mov
xor
dec
stc
mov
jo
cmp
adc
add
ret
mov
sub
es
in
das
mov
jo
fbld
and
cmpsl
lahf
mov
lret
movsb
xchg
cwtl
jo
stos
xor
mov
mov
sub
mov
xor
mov
dec
pop
jp
dec
cmp
xchg
add
loop
pop
fidivrl
popf
in
fcomps
int3
mov
cmp
in
rcr
sub
shll
sysret
stc
scas
into
fstps
rolb
daa
shl
cmc
sbb
cmp
sub
stos
aam
jmp
cs
aaa
jno
mov
cmpsl
jns
and
sti
in
sub
xor
hlt
fmull
lds
ds
push
mov
insb
out
lds
clc
sub
int3
ja
cmc
ret
outsb
push
in
sbb
aam
or
cmc
scas
rcrl
out
frstor
dec
mov
adc
insb
push
mov
in
nop
jbe
ljmp
push
outsb
jecxz
pop
xchg
and
push
inc
loope
sarl
cli
lods
push
lahf
icebp
cmc
test
cmp
jl
ljmp
sbb
imul
fwait
pushf
loopne
shrb
cmp
push
shrb
cmp
cld
daa
daa
out
in
fsubl
xchg
sub
and
js
outsl
push
ja
jl
push
cmc
sub
mov
cli
lods
sarb
dec
orb
ds
in
or
pop
ficoms
cmp
jge
stos
and
adc
xor
jg
aam
or
or
mov
fcmovb
iret
sub
dec
cli
xchg
ret
fidivrl
fists
sub
aam
hlt
addb
test
sti
dec
repnz
shlb
jmp
lea
adc
mov
ret
push
xlat
aas
clc
hlt
and
mov
cmp
cmp
dec
mov
out
call
mov
lods
or
fcmovb
cmp
scas
lahf
sbb
cwtl
push
lahf
out
cmp
mov
inc
sahf
fistpl
cmp
xchg
lea
mov
fidivs
out
jno
rolb
push
fistps
or
sahf
push
mov
mov
out
shll
jge
push
add
out
push
cwtl
mov
call
cmp
dec
sbb
push
xchg
scas
fisubl
cmp
mov
jl
not
movsb
clc
xchg
pop
sar
mov
dec
bswap
nop
lahf
gs
hlt
test
fstpt
lret
mov
mov
icebp
test
dec
int
push
and
pop
stc
xchg
ds
in
aam
mov
mov
jnp
push
shr
push
and
jbe
xlat
test
loopne
faddl
movsb
inc
movsl
mov
imul
gs
cmp
dec
insb
rclb
cltd
sbb
pop
push
inc
sub
incb
mov
dec
dec
push
std
push
sub
movsl
fsubl
lret
pushf
fistps
push
cld
je
cmp
in
jbe
mov
shll
hlt
push
test
les
inc
test
push
pop
fcmovu
jns
push
mov
ds
adc
movsb
insb
and
test
inc
and
jns
ffreep
aaa
pushf
xchg
xor
add
insl
dec
fsubrs
sub
popa
xchg
sub
fstpt
not
sbbl
imul
test
push
sub
jg
ret
cli
roll
fmuls
test
xchg
ret
daa
mov
jnp
outsl
or
movsb
outsb
fiadds
cli
sbb
jp
dec
loopne
pop
jae
adc
xchg
sub
jb
loopne
xchg
dec
sbb
les
mov
roll
insl
mov
jne
fcompl
clc
push
inc
fcoml
ret
fs
jl
dec
in
pop
adcl
xlat
mov
mov
cmp
aad
lods
lods
or
push
fldt
jl
ret
ds
xchg
and
push
fldenv
je
aam
fisttpl
push
cmpsl
hlt
aam
adc
xlat
sub
mov
notl
and
lret
inc
notl
xlat
mov
inc
or
xchg
ret
fisubrl
int3
mov
repnz
inc
pop
lret
std
and
icebp
or
stos
addl
pop
mov
rolb
movsl
sarb
int3
mov
int
idiv
test
and
push
and
cmp
insb
cmp
pop
cmp
shrl
test
icebp
lea
or
fstl
lods
pushf
ret
and
test
pop
cmc
pop
pusha
mov
mov
and
jp
into
inc
fldcw
jp
aad
pop
in
je
ds
sahf
and
repnz
idivl
fcom
cld
int3
pop
dec
xor
xchg
sbb
pop
adc
and
daa
or
xor
mov
push
movb
fadd
push
rcrb
xlat
sub
dec
pop
jno
adc
and
xchg
add
sbb
dec
push
mov
arpl
pop
lahf
jae
clc
jg
aam
std
mov
jae
push
lods
xchg
xor
inc
xchg
xor
mov
inc
js
xorb
nop
dec
cmp
push
loopne
xchg
or
stos
ja
cmpsl
and
lds
push
xor
jl
nop
mov
sbb
cmp
mov
pop
inc
loop
repz
scas
in
xchg
push
jg
ja
mov
pop
push
push
int
test
xchg
frstor
and
insb
test
in
stc
daa
loope
sbbb
mov
and
mov
popa
mov
fstl
lcall
lcall
mov
xchg
mov
loopne
xchg
divl
mov
inc
jno
adcl
fsubrl
inc
sahf
and
mov
xchg
shr
mov
incb
movsl
adc
nop
iret
in
ret
in
sbb
enter
lret
rol
leave
or
loop
roll
mov
sar
jmp
cli
out
jns
jmp
or
cmp
sbb
clc
repnz
sbb
pop
mov
sbb
add
xchg
and
mov
cli
hlt
sbb
pop
das
xor
stc
fisttpll
inc
sahf
xor
nop
lea
xchg
mov
fnstcw
push
mov
cld
fnstcw
rcll
add
nop
testb
jne
jae,pn
andl
test
mov
mov
add
dec
inc
mov
xchg
inc
lock
pop
stc
sbb
mov
mov
adc
outsb
push
jo
iret
inc
sbb
lcall
adc
nop
lahf
xchg
lret
mov
in
adc
xor
jg
lods
push
out
daa
sbb
shrb
enter
mov
gs
sub
scas
or
and
clc
pop
push
shrb
lds
pop
mov
push
pushf
adc
aas
mov
xor
ja
or
inc
daa
cmc
cld
in
mov
mov
into
ret
jae
xor
add
lds
sbb
shlb
jb
pushf
mov
fmuls
add
std
sbb
stc
jbe
and
mov
rcrl
xor
lods
sbb
pop
jl
sub
mov
hlt
in
mov
loopne
test
les
leave
or
push
push
adc
int
rcl
test
stos
push
jle
lea
dec
and
shlb
out
xchg
jge
movnti
fcmovne
lea
lahf
mov
aad
paddsw
dec
push
shrb
or
and
call
fisubl
scas
nop
or
sbb
ret
in
mov
pop
adc
lds
lods
aaa
cmp
sahf
sbb
push
jne
popa
pop
and
in
clc
adcb
fmull
inc
rol
insb
sbb
sti
ljmp
sahf
scas
icebp
or
lret
fstp
sbb
movsl
xor
xlat
or
sti
dec
shrb
or
sbb
test
jo
fimull
scas
mov
loopne
inc
push
lods
lret
or
sbb
test
jge
inc
shlb
push
and
and
lea
jle
out
pop
xor
lret
mov
xchg
push
scas
adc
mov
fimull
popf
daa
loopne
shl
into
in
testb
jmp
pop
cltd
imul
jns
push
pop
mov
mov
add
lret
cmp
int
lods
popa
inc
cmpsb
jne
sub
movsl
and
cmp
out
push
fbstp
mov
xlat
mov
jns
rclb
jmp
jmp
stos
jmp
inc
mov
fidivl
loopne
xchg
in
insl
js
sub
lods
fcomps
in
out
cmp
cmc
pop
nop
cltd
lock
shl
sbb
pop
mov
fimuls
into
xchg
ds
test
sahf
hlt
push
xchg
pop
test
mov
mov
out
lds
insl
std
dec
mov
cmp
push
push
push
dec
cmpsl
test
xchg
mov
push
int
push
jno
mov
ja
repz
xor
clc
cmp
in
xlat
movsl
dec
xor
daa
in
xchg
mov
cmp
cli
sbb
mov
fstpl
or
cmpsl
xor
out
hlt
cmc
xor
loop
aas
out
iret
or
push
test
xchg
adc
xchg
fisttpll
jmp
inc
pop
dec
sub
outsl
mov
jl
add
mov
int3
cmp
icebp
loope
mov
out
aam
loope
jno
dec
jle
sahf
shlb
xchg
fcomps
cmp
add
cli
pop
icebp
je
xlat
pop
mov
loope
std
lea
sbb
adc
iret
nop
nop
inc
int3
pop
adc
mov
push
adcb
lret
std
fcomp
mov
xchg
loopne
push
pop
cmc
pop
stos
lock
inc
lea
pop
push
fbstp
rclb
sarl
mov
jbe
mov
cmc
ja
lret
lds
sti
hlt
lcall
push
adc
inc
test
sti
int
xchg
shrl
xlat
sub
stc
lock
mov
enter
push
push
leave
or
or
icebp
push
std
ja
xlat
push
aam
int
stc
fldcw
movsl
or
pop
add
or
ret
cmpsl
out
jl
lcall
inc
push
push
fdivrs
jo
mov
pop
addr16
addr16
popf
out
adc
adc
jmp
idiv
pop
mov
sbb
lods
push
clc
push
outsb
dec
jecxz
cmpsb
lods
adc
fisubrs
pop
frstor
lods
shr
dec
jb
or
mov
mov
rolb
andb
inc
add
lcall
test
lcall
adc
sbb
addr16
dec
inc
fucomip
inc
pop
mov
mov
dec
mov
roll
jle
lods
and
inc
cmc
repnz
xchg
or
push
icebp
stos
loopne
shl
pop
sbb
mov
push
push
testb
push
shrl
pop
add
xor
dec
or
mov
cwtl
negl
push
stc
push
pop
cli
leave
push
rdmsr
xchg
adc
push
hlt
cltd
lahf
ficoml
shrl
negl
add
pop
out
jb
mov
pushf
fidivs
ljmp
jne
jge
out
push
xchg
outsb
hlt
test
cmp
sbb
js
fidivrs
dec
mov
and
cmpsl
pop
push
cwtl
bound
adc
jb
mov
mov
out
loope
xchg
loopne
mov
adc
test
insl
or
pop
sbb
xor
xchg
and
cmp
loopne
lock
lds
in
adc
jne
adc
or
test
aas
rcrl
inc
add
cli
cwtl
repnz
pop
cli
cmp
inc
ja
xlat
or
in
les
icebp
or
aam
int3
adc
cs
outsl
ds
sub
sbb
loopne
sbb
fsubr
push
fisttpl
movsb
adc
push
and
xchg
rcl
inc
jo
loope,pt
repnz
out
aam
mov
dec
aam
mov
adc
inc
call
xor
inc
cld
mov
add
xchg
mov
fisttpl
mov
or
hlt
rcll
test
add
outsl
js
pop
cmp
push
or
stos
mov
hlt
loopne
getsec
loopne
dec
fnstenv
sub
sbb
xor
push
xchg
idivl
mov
ret
dec
imul
fdivp
addb
aad
and
ret
or
fistps
jnp
ljmp
xlat
xor
or
sub
or
xchg
out
dec
notb
sbb
iret
sub
bound
xor
pop
lock
mov
ss
xor
sbb
stc
popf
in
hlt
mov
loopne
cmp
mov
fidivrl
mov
mov
das
fcomip
repz
fnstsw
pop
rorb
xchg
mov
pushf
ja
jle
lods
cld
or
fnstenv
push
faddl
test
mov
sub
into
mov
fstpt
fistl
ljmp
mov
call
test
jmp
ret
mov
lock
js
pop
insb
icebp
lock
ret
mov
xchg
out
pop
ret
xor
push
xor
lcall
push
in
fisubrl
mov
cwtl
xorb
adcb
or
test
fisttpl
mov
les
clc
rclb
fsubrp
dec
sub
std
mov
loopne
es
push
in
arpl
mov
mov
adc
mov
aam
pop
ljmp
movsl
xor
dec
push
sahf
pop
js
xchg
fwait
mov
repz
lret
je
sbb
dec
push
push
or
js
movsb
js
pushf
cmp
add
xor
loopne
xchg
xor
clc
enter
and
push
lahf
mov
fcomps
test
xchg
mov
dec
gs
cmpsl
fs
rcrb
mov
movsl
cmp
or
fs
pop
pop
repnz
pop
hlt
cmp
testb
pop
or
dec
or
adc
mov
dec
or
faddl
mov
dec
out
push
xchg
daa
inc
out
lret
mov
imul
or
mov
mov
cwtl
int3
hlt
lock
shll
loope
pop
sbb
nop
in
insb
in
or
or
jle
testb
jns
jge
adc
push
xor
xchg
repnz
cli
push
cmc
cli
mov
pop
or
int
call
fists
cmp
jp
stos
loopne
imul
repnz
ret
inc
and
mov
jno
fisubrl
je
pop
roll
mov
mov
jecxz
mov
xchg
lret
mov
cli
in
mov
or
or
inc
bound
pop
aam
jae
inc
fcoms
inc
xchg
fwait
dec
sub
in
pushf
mov
dec
mov
xor
sub
sbb
sbb
sbb
xchg
rorb
jnp
lds
mov
xchg
fldcw
inc
insl
movsb
mov
mov
lret
xchg
enter
cli
popf
addr16
dec
lret
mov
xor
add
push
hlt
xlat
xor
in
inc
aaa
popf
jns
bound
inc
sbb
push
rorb
fldt
dec
dec
sbb
push
icebp
mov
sub
sahf
lret
clc
add
clc
js
fiadds
xchg
push
rorb
ja
aad
dec
fisubs
push
outsb
out
push
and
pop
test
pop
cwtl
sub
inc
test
inc
cmp
adc
push
jbe
hlt
test
mov
sar
int3
hlt
jb
hlt
addl
frstor
out
mov
out
jecxz
je
mov
inc
xchg
clc
pop
jle
xor
push
mov
push
mov
mov
push
dec
mov
test
fildll
xchg
out
ret
xchg
jl
xchg
out
mov
add
into
or
cmpl
imul
fsubs
inc
aas
lcall
mov
testb
mov
mov
dec
in
dec
mov
cs
and
out
cmp
movsb
xchg
lock
mov
xchg
pop
xlat
cwtl
xor
add
sub
cltd
insb
aam
jmp
jmp
ficompl
mov
enter
data16
insl
test
fs
push
inc
mov
xchg
or
rorl
repz
adc
scas
cmc
jge
mov
lods
jnp
addr16
arpl
sub
adc
jmp
sbb
scas
push
out
sub
pop
leave
cld
fs
jnp
mov
sbb
sahf
push
add
push
mov
sbb
xchg
rol
leave
jnp
cmpb
les
call
pushf
push
mov
bound
lds
cltd
lds
mov
leave
scas
inc
cmp
cwtl
subl
pop
pop
lods
scas
je
fistl
mov
imulb
dec
add
cltd
out
subl
fadds
pop
rcl
nop
or
out
push
daa
aaa
inc
xor
test
pop
mov
std
or
in
mov
test
or
xor
xchg
xchg
push
mov
dec
or
inc
std
outsl
incl
clc
xchg
xchg
pop
je
xchg
gs
clc
xchg
push
in
test
sahf
lcall
fists
mov
xor
notl
rcr
aaa
shl
push
fnsave
push
int3
sub
mov
cmp
dec
mov
lods
pushf
sub
rcrb
inc
ret
dec
fldenv
sahf
jle
vpcmpeqd
push
into
jbe
and
pop
jns
rclb
stc
sbb
in
rolb
sti
mov
fisubrl
push
cmpsl
jge
sbb
movsb
daa
add
xchg
cli
mov
and
add
cvttps2pi
xchg
pop
sbbl
add
ds
add
xor
mov
push
jmp
in
jecxz
lods
jnp
or
xor
mov
aam
adcb
or
rorb
in
stos
jecxz
mov
incl
xchg
xor
test
cltd
add
push
dec
cmc
scas
or
or
and
pop
inc
mov
mov
sub
push
sub
in
adc
test
jmp
xor
fldenv
repz
movsl
lcall
lea
jecxz
push
ds
mov
filds
pop
cld
or
pop
leave
call
out
push
jl
shll
fnstenv
mov
sbb
cmp
pusha
scas
xlat
push
mov
movsb
fiaddl
inc
cmp
pop
ljmp
fs
push
repnz
mov
je
mov
jae
xchg
or
insl
pop
ljmp
adc
xchg
jns
cmp
mov
enter
cmp
ret
lods
fcompl
loopne
jge
jno
fbld
xor
push
fldenv
push
push
out
or
sub
std
cltd
add
push
std
bound
mov
xor
xchg
or
mul
mov
nop
sub
xchg
xchg
sub
loopne
jbe
popf
mov
adc
in
xchg
mov
and
pop
les
add
adc
fldl2e
push
push
push
cmp
ljmp
mov
std
jbe
cmp
xor
rorb
std
or
outsb
sbb
cmp
addr16
add
xchg
pop
or
xor
cmpsl
and
push
cmp
push
in
test
dec
inc
push
ficompl
push
sub
pushf
leave
inc
fmull
add
push
call
loopne
add
xchg
rcrl
push
dec
sub
sub
inc
cmp
cmc
ja
popa
mov
fs
xchg
test
or
in
loope
ret
mov
bound
mov
and
sub
pushf
xchg
inc
test
pop
cmc
mov
daa
shrl
mov
lret
insb
in
cmpsb
out
pop
add
test
cmpsl
jge
test
sub
test
sub
leave
rorb
or
add
into
test
jg
jg
xchg
dec
and
jmp
bound
subl
fucomip
sbb
jg
stc
pop
in
pop
pop
or
sbb
scas
mov
loop
pop
ds
jns
xchg
bound
xchg
loope
jns
mov
fs
xchg
adc
jae
loopne
xor
repz
pop
jmp
es
stc
xlat
je
inc
jno
pop
sbbb
push
sub
add
mov
cmp
jmp
data16
sbb
in
test
adc
addb
cmpsb
push
mov
mov
fistl
xor
filds
push
repz
jp
xchg
adc
shlb
jo
aam
lret
hlt
sub
lret
popa
rol
in
repnz
int3
fnsave
clc
jns
jecxz
push
or
pop
mov
int3
push
add
xchg
sub
push
xchg
adc
cmp
fmuls
push
sbb
push
js
push
dec
jmp
paddsb
jae
push
jl
or
push
or
xchg
lret
test
mov
push
or
arpl
mov
xor
pop
mov
xor
movsb
xor
stos
es
or
cs
adc
sbb
pop
fwait
mov
mov
mov
test
movsl
adc
test
xlat
jae
cmpsb
imulb
popa
sbb
bnd
mov
daa
lea
xorb
jo
cmp
xchg
loop
mov
mov
in
or
daa
aam
xchg
sub
sub
repz
sub
pop
jb
add
leave
mov
mov
cmpsb
adc
sahf
fdivr
cltd
jb
aad
cmpl
sub
lock
ljmp
movsb
repz
mov
and
mov
leave
aas
mov
mov
fbstp
outsb
popa
cs
mov
into
ret
cmp
clc
lods
inc
ds
push
insb
adc
test
cmp
iret
or
fcoms
pop
fmull
pop
das
ffree
dec
jns
dec
inc
aas
mov
ljmp
data16
mov
sbb
dec
negl
xchg
sbb
out
dec
jg
insb
xchg
leave
mov
imul
xchg
jmp
addr16
subb
cmp
adc
aaa
add
cs
xchg
out
in
test
inc
movsl
imull
outsl
rcll
js
jbe
cs
xchg
cld
cmp
fdivrl
adc
jne
fbld
js
lock
icebp
in
cmp
push
cmpsb
sahf
stos
fcomi
nop
xor
pop
daa
jl
imul
jns
in
or
mov
aas
dec
nop
mov
mov
push
loop
clc
sbb
data16
fmull
and
push
xor
mov
decl
and
and
mov
pop
hlt
repnz
sub
aaa
pushf
outsb
call
ja
in
call
inc
sub
sti
subb
mov
std
ret
fstl
divb
aas
push
adc
xchg
adc
adc
jg
in
sub
xchg
add
sub
loop
movsl
push
mov
loopne
jns
nop
mov
orb
xchg
icebp
pop
push
lret
test
dec
scas
mov
lds
ficoms
sarl
cltd
mov
je
leave
sub
xor
mov
sub
repnz
imul
xchg
xorl
jl
pop
loopne
add
ds
sbb
dec
push
pop
sbb
jge
xchg
cmp
jne
std
jae
in
jp
jae
loopne
stc
cmp
adc
dec
jecxz
lock
out
addr16
in
dec
mov
sbb
cmpb
or
loope
enter
pop
xchg
repz
loop
xchg
je
cmp
out
fimuls
leave
in
into
scas
movsb
mov
jne
xor
andl
cli
inc
jge
flds
mov
jb
sub
mov
ret
xchg
pop
dec
cwtl
mov
mov
call
cli
and
inc
in
sub
repz
pop
cmp
shll
sub
xor
cmp
sti
or
pusha
in
adc
es
inc
imul
test
inc
into
cmp
test
cmp
leave
test
cli
cs
pushf
es
ret
adc
mov
or
outsl
fs
cmp
out
pop
in
cmp
imul
out
or
clc
hlt
out
out
fdivrl
aad
mov
into
dec
cmp
les
nop
add
cmpsb
ret
movsl
pusha
test
add
cld
and
cmc
and
lds
jp
inc
and
cwtl
jno
sbb
pop
lock
or
inc
pop
popf
and
add
notl
les
into
inc
rcrb
inc
mov
out
push
pop
fldt
adc
cmp
stos
mov
jle
and
xchg
push
cmp
jmp
or
xorb
jp
cli
neg
daa
sbb
daa
sub
jp
mov
xor
pushf
xlat
test
fisttpll
adc
test
cmpsb
xchg
add
cld
jne
mov
or
pop
cmp
push
bound
inc
push
shl
push
xchg
ljmp
mov
adc
xchg
out
call
mov
add
sbb
insl
add
and
xchg
xor
fcomps
mov
and
aad
and
imul
xor
movsb
add
je
sahf
push
jbe
mov
jg
push
enter
popf
leave
jle
xor
lahf
es
stc
ds
push
sti
fdivp
jnp
test
sub
lahf
cltd
sub
dec
dec
sub
fcmovnb
aas
aam
popf
int3
popa
cmp
lahf
adc
shll
int
ljmp
gs
adc
adc
sub
ljmp
cmp
enter
sub
push
xor
jmp
loopne
jmp
mov
fnsave
into
daa
das
fs
mov
pushf
sbb
cwtl
jle
push
fiaddl
aas
mov
call
outsb
mov
fists
int
sahf
fisubs
shr
jmp
lahf
lds
cs
call
xlat
movsb
sbb
adc
test
insl
dec
inc
xchg
sbb
push
adc
sbb
cmp
hlt
into
sarl
sbb
insl
xor
bound
jbe
add
int3
out
sub
adc
inc
les
or
push
jno,pt
xchg
rcrl
lds
sbb
lock
andl
enter
rcll
outsl
and
cld
mov
inc
js
lret
or
xlat
mov
mov
mov
push
push
les
cwtl
or
outsb
mov
jae
pusha
mov
mov
pop
cmp
imul
fdivr
rol
test
idivb
xchg
hlt
ret
and
xchg
or
mov
push
jne
lods
and
adc
leave
xor
sbb
pop
les
xchg
jb
dec
sub
sub
ss
out
cmp
pop
inc
pop
inc
mov
or
jecxz
xchg
mov
inc
leave
or
cld
int
cmpsl
std
mov
push
and
cmpsl
test
je
stc
jp
mov
ficoms
loopne
sbb
pop
rolb
aam
aam
out
js
inc
pop
movsb
push
adc
stc
xor
inc
mov
inc
sbb
add
test
cwtl
arpl
mov
insl
sbb
xchg
cmp
aam
popf
sbb
cmpsb
outsl
inc
loop
cmp
or
cwtl
outsl
mov
xchg
cmp
xchg
jbe
or
xchg
nop
fdiv
jnp
mov
sahf
inc
jmp
push
adc
inc
sbb
inc
mov
popa
xchg
clc
sbb
xchg
arpl
xchg
inc
lds
std
pop
mov
ficoml
inc
loop
daa
mov
call
arpl
sti
arpl
jmp
jge
fxtract
or
mov
or
mov
cwtl
arpl
cwtl
arpl
nop
adc
addr16
stos
cs
cmc
mov
js
and
orl
sti
push
and
mov
nop
pop
shlb
fistl
xchg
lahf
dec
mov
lods
shr
xchg
pop
inc
loopne
js
inc
in
test
or
pop
stos
mov
ficomps
mov
push
iret
xchg
rcll
mov
xor
push
sahf
sbb
mull
imul
adcl
cmp
xchg
shll
into
xchg
mov
popf
dec
lret
jle
push
imul
mov
test
mov
push
fisubrs
mov
test
out
stos
mov
adc
decl
xor
jmp
arpl
mov
daa
loope
cmpb
and
repnz
testl
movsb
jo
arpl
rcll
mov
fnstcw
sbb
push
xorl
mov
jb
in
xor
inc
or
mov
fistpll
neg
or
cmpsb
out
addr16
mov
scas
loop
imull
rolb
daa
sbb
mov
jge
int
pop
xorl
sahf
out
bound
xchg
addr16
test
dec
xchg
movsb
leave
movsb
loop
shlb
popf
or
ret
test
sbb
ds
addr16
shrl
mov
cmp
cmp
lcall
pop
fstps
pusha
shlb
enter
adc
out
jns
mov
xchg
int
inc
loopne
pusha
hlt
negl
jp
pop
sbbl
fisubrl
adc
pop
stc
aam
popa
out
mov
outsb
push
mov
imul
ret
out
mov
cmp
push
clc
add
or
mov
cmp
dec
ror
fwait
imul
loopne
in
lea
and
mov
mov
and
jae
ljmp
notl
sbb
lahf
mov
mov
fiaddl
push
xchg
add
scas
push
ja
out
jne
notl
mov
mov
xchg
push
ret
mov
fidivs
sarl
fdivl
daa
xchg
sahf
and
mov
js
mov
movsb
dec
mov
call
repnz
push
popa
xor
fcmovnbe
aam
push
mov
xchg
pop
inc
push
pop
sbb
cmpsb
pop
jl
fsubp
jo
xchg
and
fadds
icebp
repnz
sarl
cld
mov
clc
testb
mov
jecxz
inc
push
sub
mov
ret
xchg
push
test
dec
ja
cld
repnz
cld
jae
cmpsb
idivl
jge
das
insl
pop
cli
mov
loope
int
mov
adc
jo
ret
js
popl
cmc
in
adc
mov
test
fs
mov
pop
aaa
jb
scas
mov
ficomps
fists
outsl
cli
xlat
push
adc
into
mov
mov
xor
cmpsl
shrb
inc
or
bound
push
cmpsl
mov
cmpsl
mov
inc
mov
sub
mov
sub
jg
adc
sub
mov
adc
scas
out
das
push
daa
ret
clc
adc
loop
lcall
fcoml
push
nop
mov
push
movsb
lea
jne
mov
imul
dec
pop
je
push
mov
sbb
mov
jge
lock
je
xor
ljmp
inc
pop
jns
leave
inc
int
inc
xor
xchg
movsb
bound
or
ret
test
jns
movsb
lods
scas
nop
push
pop
and
cmp
cmp
andb
pop
fsts
dec
cmpsb
cli
mov
dec
dec
push
xchg
dec
flds
insl
ljmp
xor
clc
pop
add
dec
add
push
xchg
or
sbb
imull
push
mov
dec
leave
inc
and
ljmp
mov
cwtl
add
imul
pop
cmp
aam
popf
pop
jg
arpl
fistpll
jb
test
sar
movb
cld
lea
loopne
mov
push
cmp
sar
push
cmp
mov
adcb
into
dec
outsb
mov
pusha
push
cmp
call
mov
adc
stos
faddl
push
clc
push
mov
jp
stos
or
xchg
adc
dec
out
movsb
dec
lahf
inc
out
jnp
xchg
dec
shll
mov
fiadds
or
mov
add
dec
mov
dec
add
mov
popf
and
sub
jb
jbe
ljmp
stos
adc
dec
pop
xchg
fyl2xp1
loop
push
int3
scas
inc
dec
jne
inc
dec
leave
jno
pusha
lea
xchg
outsl
mov
cmp
dec
jmp
or
fwait
add
int
ja
loop
adc
nop
mov
mov
sbb
cltd
jmp
adc
xor
mov
mov
fbld
dec
hlt
lods
inc
hlt
pop
popf
mov
sbb
mov
xor
pop
jmp
enter
lods
mov
inc
aaa
mov
or
ds
sbbl
or
inc
mov
rorl
dec
jne
cli
jno
jge
stos
pop
or
jl
cwtl
subb
xchg
xchg
lods
in
lods
mov
sbb
sti
push
jno
ret
push
mov
sbb
mov
xchg
xor
xchg
in
dec
mov
mov
xlat
nop
mov
add
lods
divb
and
cmp
loope
sub
pop
ja
stos
mov
sbb
movl
mov
ja
out
pop
sbb
jno
mov
ljmp
adc
mov
pop
test
pusha
dec
inc
xchg
aam
jle
cmc
pop
push
andb
adc
dec
push
mov
cmpsb
cwtl
movsb
pop
mov
push
shll
popf
jg
xor
jmp
fmuls
adc
sbb
into
cmp
scas
aam
pop
xlat
ffree
lcall
mov
popa
xchg
not
push
mov
xor
out
cli
xlat
int
cmc
inc
nop
sub
inc
pop
push
push
sub
cmp
cs
sbb
xchg
stc
mov
push
out
dec
xor
cmc
movl
loop
aad
nop
mov
jecxz
inc
push
pop
add
out
mov
rcll
mov
dec
mov
leave
mov
xchg
xchg
mov
in
mov
stos
mov
cmp
repnz
mov
or
jne
enter
ja
cld
cmc
ja
loopne
out
leave
pushf
mov
dec
out
sub
jo
mov
push
push
lret
jne
fmull
ret
xchg
pushf
fdivrp
inc
or
mov
fsubl
pop
add
pop
jmp
adc
mov
scas
cli
pusha
cmpxchg
push
in
mov
fs
jmp
sub
xchg
add
xchg
cld
je
pop
test
ret
fldl
les
inc
movl
pop
je,pn
insb
jne
jns
jno
addr16
lret
or
dec
dec
xorb
js
sub
pop
push
xchg
fisubrl
std
fs
in
mov
movsl
and
insb
sarb
mov
or
sub
push
pop
sahf
dec
roll
or
pop
dec
ds
repz
mov
inc
pop
jne
pop
dec
push
jns
inc
sti
in
push
repz
push
and
dec
pop
xor
scas
xchg
aaa
jl
hlt
cmp
inc
adc
adc
fldenv
stc
cli
xchg
inc
or
mov
and
test
loope
cmp
shll
js
sub
pop
leave
sbb
inc
cltd
outsb
movsb
clc
pop
mov
mov
pusha
jb
dec
rolb
jnp
loope
outsb
sub
xor
icebp
or
inc
mov
stc
cmpsb
adc
jge
adc
pop
sub
xchg
aaa
push
push
add
mov
push
stc
insb
or
mov
xor
lea
stc
fcmovbe
jno
cltd
mov
aam
xlat
fdiv
rorb
xchg
mov
pop
lods
test
cmp
fdiv
adc
push
mov
std
pop
mov
les
pop
jno
sbb
clc
test
pop
adcb
loope
adc
xor
cmp
imul
pop
insb
adc
lret
in
cmpsl
xor
push
pusha
clc
fiaddl
and
adc
repz
sub
cmp
sbb
cmp
or
out
or
and
jbe
xor
and
js
push
jo
mov
je
xchg
cmpsb
into
sbb
xlat
or
out
mov
popf
ds
movsb
clc
aam
pushf
mov
js
add
xchg
repz
pop
mov
enter
ret
dec
mov
test
mov
flds
pop
xor
lock
mov
pop
jae
xor
mov
push
xchg
cld
inc
fbstp
iret
inc
mov
jo
jno
lret
sub
clc
decl
mov
fs
fucomip
ds
cltd
movsb
inc
mov
xchg
xchg
mov
test
pop
popf
mov
mov
popa
movsl
dec
les
or
add
sbb
pop
shl
shlb
fs
inc
icebp
push
fcoml
pusha
aam
pushf
movsl
lret
icebp
rclb
sbb
xor
mov
sarl
in
fucomp
call
repnz
mov
idiv
js
mov
mov
jo
imul
clc
nop
mov
call
rclb
or
clc
rcll
icebp
add
inc
add
fdivrs
and
inc
and
mov
push
icebp
mov
rclb
xchg
clc
adc
and
aam
popf
sbb
divl
jbe
movsl
rcl
jp
push
cmc
push
or
aam
or
or
sub
jle
jl
loop
out
movsl
pop
lock
jl
inc
movb
mov
enter
adc
adc
mov
and
sub
xchg
mov
mov
jnp
push
js
divb
pop
je
scas
xchg
xlat
push
add
xchg
mov
mov
fxch
lock
mov
aad
ficoms
lcall
imul
sbb
cmpsb
add
xor
add
out
jle
cmp
push
pop
cmp
adc
xor
xchg
mov
xor
cmp
pop
inc
pop
insl
mov
sbb
shlb
mov
data16
dec
dec
jle
mov
lock
cmp
arpl
out
imul
cli
into
mov
push
add
shrb
jp
stc
ljmp
cmp
lcall
mov
retw
pop
aad
cmpsl
adc
inc
adc
subb
mov
loop
jl
push
pop
nop
sub
sbb
lock
in
out
hlt
fsubl
mov
lods
lahf
dec
jecxz
mov
mov
adc
push
push
or
adc
sub
ds
lds
sub
mov
fldcw
adc
pop
aad
insl
mov
push
jno
add
not
rcrl
lcall
enter
stos
sub
fcomi
test
mov
mov
movsl
out
push
aad
loope
inc
xchg
push
push
cmc
sub
dec
mov
and
imul
insl
lret
enter
mov
xchg
inc
cmc
cs
and
mov
cmp
std
mov
mov
sub
cld
pushf
lods
js
hlt
call
xor
in
icebp
into
div
out
cwtl
aad
or
lods
sub
mov
mov
lock
arpl
add
sbb
inc
xor
popa
mov
cld
add
cs
fmull
mov
xchg
iret
lcall
mov
add
sub
mov
add
dec
out
bound
sub
push
cmpl
inc
jno
dec
fwait
ret
or
test
repnz
jno
adc
andl
and
dec
push
fildll
fists
lock
lret
aam
mov
in
dec
bound
dec
jno
gs
leave
icebp
push
adc
mov
shrl
not
fnstsw
cmc
in
rsm
and
sbb
enter
je
push
or
in
mov
xchg
push
xchg
push
add
iret
stos
std
int
movsb
push
shlb
xor
xlat
icebp
lahf
mov
cmp
repnz
ror
rolb
push
rclb
jl
mov
pop
mov
push
movsl
js
inc
or
jne
pop
hlt
gs
loop
icebp
hlt
mov
data16
fsub
mov
les
xchg
xor
pop
std
ds
fs
popf
push
mov
mov
popf
lods
popa
pop
idivl
les
dec
sahf
adc
push
mov
clc
inc
sbb
fsubrl
pop
xor
icebp
sbb
out
inc
insb
mov
shll
xchg
repz
mov
adc
sub
jecxz
dec
sbb
lock
out
sub
jno
sub
lods
xor
adc
cmpsl
sub
pop
lock
not
clc
xchg
pop
inc
enter
out
cmp
daa
or
mov
es
push
push
and
dec
inc
dec
xlat
lret
inc
mov
push
push
scas
cmpsb
dec
inc
jecxz
jge
xchg
lods
aad
xchg
sub
in
pop
lcall
shlb
add
idivb
inc
mov
add
in
ljmp
jne
pop
inc
mull
mov
jle
sbb
sbb
sub
lods
sub
mov
sub
add
jne
pop
jle
out
or
aad
jge
inc
add
out
mov
dec
arpl
cwtl
shl
aad
inc
orb
fisubl
push
imul
aam
and
rcl
jae
psubusw
aam
imul
cltd
inc
lock
xchg
pop
call
mov
orl
add
pop
pop
push
popf
xor
pusha
lcall
out
dec
sub
cli
lret
or
fisubl
lock
fcmovne
dec
fstpt
inc
pop
mov
dec
xor
jge
in
sub
lret
xchg
push
movsl
bound
lret
rclb
in
add
pmullw
cmp
dec
pop
test
xor
or
filds
add
test
addr16
mov
mov
in
and
xchg
mov
pushf
add
and
fsubs
push
inc
sbb
popa
shrb
mov
mov
and
sub
movsl
clc
sub
mov
jl
push
std
rorl
adc
aam
cmp
fst
xchg
jbe
fxam
aad
mov
inc
mov
add
dec
aad
xchg
sbb
aad
mov
cmp
cld
push
inc
dec
cwtl
pop
add
cmp
jmp
jne
lret
mov
inc
jnp
xchg
xor
push
xchg
icebp
cmp
dec
dec
fxch
sub
add
inc
xlat
mov
addl
push
sub
or
fimuls
push
out
dec
fs
jge
cmpsl
lods
and
sub
filds
pop
fistps
mov
fcmovu
and
stos
cwtl
daa
sub
cltd
mov
jnp
and
dec
xchg
push
movsb
and
mov
mov
rclb
std
push
movsl
stos
lods
cvttps2pi
sbb
xchg
subl
xchg
dec
inc
roll
inc
mov
sub
sahf
or
arpl
je
lock
adc
and
arpl
call
adcb
popf
aad
inc
sahf
sysret
std
push
cltd
das
jmp
jp
mov
ror
insl
xor
pop
rep
xchg
mov
sbbb
mov
imul
dec
cmp
aad
xchg
push
lahf
repz
adc
sbb
lock
ficoms
repz
sub
inc
std
roll
mov
aas
push
aad
jnp
or
in
js
adc
lock
dec
sbb
aad
lcall
adc
fists
fdivrs
test
jecxz
aad
jb
push
in
scas
xchg
adc
popf
mov
aad
inc
fimull
and
dec
add
fwait
pop
or
daa
and
push
stos
mov
or
icebp
cwtl
mov
aad
dec
push
mov
dec
and
xchg
in
mov
int
stos
out
pop
lock
rorl
enter
xchg
dec
dec
jg
jnp
int3
cs
mov
pushf
shrb
and
add
rcl
bound
gs
adc
push
and
dec
and
push
pop
sahf
call
jnp
stos
add
sti
or
insb
add
or
test
test
aas
add
dec
negb
dec
sbb
sub
xchg
into
loopne
xlat
lock
loope
orl
cmc
sar
scas
dec
inc
outsb
aad
xchg
adc
aaa
cwtl
mov
fstpt
popa
out
pop
xor
shlb
cmp
or
jbe
pusha
sbb
and
pushl
add
push
mov
jmp
iret
test
lock
jns
lods
inc
dec
pop
js
or
cmc
fistpll
adc
or
xchg
sbb
in
std
movsb
jg
ret
xchg
jge
pop
add
sti
cmpb
rcr
rclb
jbe
divb
inc
pop
movl
test
mov
push
xchg
adc
adc
jmp
lahf
leave
or
loope
sbb
sub
mov
stc
cmp
call
push
adc
pusha
mov
pop
loope
inc
inc
dec
gs
mov
loope
repz
cld
iret
mov
loope
and
mov
mov
mov
pop
js
mov
ror
dec
loopne
imul
xchg
repnz
mov
dec
imul
movsb
xchg
imul
or
mov
fistps
dec
aam
xor
push
mov
mov
les
inc
mov
add
iret
sbb
cmp
xor
sbb
or
jp
push
mov
addr16
sub
xchg
imul
cmp
jns
pop
out
mov
loope
or
mov
sbb
iret
cmc
jge
sub
cwtl
stc
mov
in
test
int3
push
imul
jle
push
icebp
loopne
ret
mov
icebp
repz
in
fcoms
in
cmp
shll
add
jbe
mov
mov
popf
and
fmull
add
push
fstpl
xor
in
repnz
test
push
add
and
mov
xchg
jp
inc
fcoml
xor
lahf
sub
adc
ds
mov
andb
adc
inc
xchg
sbb
fildll
gs
fcoms
push
mov
add
cmp
or
inc
rcr
xor
cmc
test
and
mov
std
hlt
mov
fdivs
cmp
inc
cmp
fcompl
cmpsb
jl
push
test
rcl
iret
in
sbb
stos
pop
aam
adc
and
push
in
jmp
or
fsubl
and
cs
jo
xor
rcrl
data16
cwtl
loop
icebp
loop
or
shlb
push
in
xchg
loope
jns
pop
aam
popf
mov
mov
add
sub
arpl
push
stc
loopne
push
xor
fs
ja
imul
pop
add
stos
ret
push
ljmp
adc
stos
and
mov
and
mov
sbb
insl
push
clc
and
xor
in
jmp
lds
add
adc
dec
cmp
cmpsb
xchg
pop
add
inc
mov
dec
ds
ds
xor
cmp
cmp
push
stc
xchg
std
push
jns
jp
mov
pop
popa
pop
idivl
cmp
cmp
call
mov
xchg
or
pop
xchg
ds
repnz
fs
inc
push
push
xchg
arpl
jns
mov
stc
xchg
icebp
sbb
jb
mov
testl
or
fcmovnb
clc
lret
rcrb
push
data16
inc
inc
pop
push
sub
aam
mov
negb
push
mov
push
mov
jle
lcall
and
cld
icebp
push
mov
mov
xchg
jl
in
stc
add
add
mull
imul
pop
or
arpl
push
inc
sub
in
sarl
sti
push
xchg
inc
mov
mov
loopne
or
popa
sub
and
hlt
lret
push
loop
icebp
push
mov
outsb
xchg
loop
pop
cmp
or
aam
call
call
icebp
pop
mov
je
sahf
xor
add
sbb
flds
pop
or
in
outsb
mov
mov
addr16
add
and
and
cmp
fldcw
cld
inc
stos
jo
cmp
cmp
fs
test
orl
das
mov
sbb
std
int
mov
lret
bnd
adc
jge
xchg
push
inc
xchg
mov
jle
int3
pop
imul
mov
mov
and
out
mov
sbb
sahf
jle
cltd
out
jp
dec
into
addl
ja
test
lret
and
call
js
xchg
mov
enter
js
fwait
mov
push
sbb
sti
or
test
jae
mov
xchg
and
add
pop
xor
enter
xlat
mov
pop
mov
insb
loopne
test
cmpsb
inc
icebp
cwtl
pop
push
cmp
mov
jno
aaa
sbb
pop
jbe
fwait
sbb
out
add
pop
mov
inc
int3
and
mov
and
addl
pusha
hlt
xchg
leave
nop
push
cltd
pop
jle
xlat
mov
ds
and
xchg
call
mov
fs
int
and
dec
cmp
leave
pop
ljmp
bound
mov
fs
dec
push
xchg
sahf
dec
popa
pop
pop
mov
pop
xchg
mov
mov
call
cmpsb
mov
push
jl
cmpl
mov
push
mov
hlt
sbb
cmc
xor
jnp
or
adc
cmpsb
or
cmp
mov
pusha
sbb
movsl
test
mov
imul
jle
adc
pusha
adcl
and
and
sub
xlat
mov
gs
sarb
aad
xor
mov
mov
call
fprem1
jb
sub
out
jg
sbb
mov
mov
cmp
push
test
xchg
fimull
pop
fidivl
push
loopne
jbe
stc
or
cltd
fwait
pop
roll
inc
sbb
pop
jns
out
jno
repnz
pop
test
lcall
popa
cmp
rcl
jo
in
pop
popa
pusha
sub
sub
sbb
test
inc
sbb
bound
xadd
test
add
in
add
stos
aas
mov
int
insl
jae
roll
ret
xchg
mov
mov
popf
xor
add
mov
sbb
ja
in
xorl
mov
scas
jg
clc
loopne
xchg
mov
cwtl
nop
cmpsl
enter
in
inc
loopne
add
inc
push
repz
dec
int
xor
cmp
repz
cltd
jle
ret
xchg
mov
pop
pushf
fs
cld
jl
fnstenv
mov
test
cmp
out
or
xchg
inc
xor
fxch
in
loop
mov
or
out
fidivs
insb
fucomi
iret
jb
imulb
pop
mov
mov
iret
jg
xchg
out
push
lock
ds
or
cmc
jge
clc
adc
loopne
xor
movsb
push
pop
pushf
add
pop
xlat
ficomps
cwtl
ljmp
sti
push
mov
inc
andb
movsb
jno
and
add
mov
pushl
aam
adc
pushl
fisubl
inc
and
mov
pop
addl
xchg
push
mov
jnp
xchg
jl
mov
hlt
test
xchg
xor
push
mov
jle
fimull
arpl
ficoml
cltd
ljmp
ja
mov
jg
xor
mov
subb
stos
mov
test
pushf
fsubs
repnz
mov
cltd
test
aad
push
fs
ss
xchg
lahf
call
or
cld
and
lock
dec
xor
mov
rcr
repz
or
fstpt
xor
imul
and
movsb
lods
pusha
mov
push
outsl
jg
mov
jl
xchg
mov
in
outsb
bnd
sub
test
pusha
movsl
fldln2
loope
cltd
push
adc
scas
popa
cmpsl
pop
jl
push
sbb
push
pusha
mov
sub
loopne
sti
push
xchg
aas
xor
lcall
cmpb
sbb
or
xchg
cmc
cmpsl
mov
popl
or
std
scas
lods
and
sub
xchg
daa
pop
cmp
and
xor
pop
or
shlb
jg
add
xlat
loopne
mov
andb
dec
push
push
xchg
fdivl
xor
cli
or
vsubps
cmp
loop
xchg
dec
mov
xchg
test
sbbl
in
jae
loopne
pop
fcoms
lds
sbb
test
xchg
mov
xchg
push
adc
or
dec
push
mov
outsl
fdivrl
sti
mov
xchg
icebp
scas
out
je
cmp
cli
sbb
cmp
xchg
cmp
sub
lcall
ret
jl
cmp
sbb
mov
adc
mov
inc
xlat
mov
repnz
xlat
stos
repnz
xlat
push
repnz
rcl
in
cmp
sbb
cmp
repnz
xchg
je
mov
dec
xlat
mov
inc
xlat
mov
repnz
xlat
inc
repnz
je
xchg
fs
xlat
adc
out
add
not
xor
xlat
and
rcl
out
cmp
sbb
cmp
sbb
cmp
out
or
icebp
or
icebp
scas
or
pop
or
dec
or
jg
inc
icebp
or
push
icebp
cmp
push
icebp
sub
out
lret
pop
popf
in
pop
in
loop
pop
lds
push
daa
enter
push
hlt
xor
cmp
adcl
dec
adc
adc
stos
icebp
in
rorb
in
std
cli
adc
xor
lcall
adc
xor
adc
xor
adc
xor
adc
xor
adc
in
pop
out
cmc
adc
enter
stos
out
scas
adc
cmp
pop
and
ljmp
inc
xchg
or
sbb
lret
xor
mov
test
fwait
dec
scas
mov
dec
jbe
or
rcll
jns
jb
pop
icebp
addr16
in
sub
fcomp
xor
repnz
sbb
pop
fwait
lea
or
inc
jle
stos
inc
test
arpl
andb
xchg
arpl
std
mov
push
rcrl
and
sbb
mov
mov
adc
sbb
mov
fmuls
mov
lret
arpl
inc
pop
arpl
inc
andb
nop
arpl
inc
out
push
inc
sti
arpl
inc
movsb
lds
jecxz
or
in
sbb
out
pop
adc
sbb
gs
lods
xor
leave
push
in
lcall
dec
leave
out
xor
pop
jg
mov
lods
arpl
test
inc
ror
adc
popa
adc
jl
addr16
jnp
xor
sub
sbb
push
call
pop
xlat
add
in
in
pop
lea
test
mov
arpl
inc
cs
fidivl
xor
xor
push
xor
adc
xor
leave
jecxz
and
inc
pushf
xchg
mov
insb
jb
fildll
outsl
ja
in
lahf
xlat
insb
repnz
xlat
and
add
out
pop
cmp
sbb
cmp
sbb
in
xchg
repnz
mov
icebp
mov
or
icebp
inc
or
icebp
pop
or
push
or
mov
mov
in
pop
push
in
pop
add
das
pop
xor
add
fistl
xor
add
andb
andb
shr
repz
movsl
fildl
ljmp
cltd
inc
jp
mov
int3
int
xor
ja
jo
dec
push
xchg
jl
dec
aam
std
out
movsl
sbb
ja
xlat
cmp
xchg
out
cmp
mov
jns
loope
add
mov
fbld
je
loope
or
shr
mov
inc
andl
push
or
or
xor
or
neg
adc
fstps
out
stos
pop
mov
sbb
xor
push
cmpsl
into
in
or
adc
jnp
stos
dec
test
inc
dec
mov
sbb
or
jecxz
int
fistpl
andl
mov
data16
insb
js
lcall
dec
cli
insb
or
insb
cmp
in
push
fistpll
xlat
enter
clc
repnz
call
inc
ds
inc
mov
sahf
inc
mov
mov
outsb
inc
jae
pop
inc
arpl
ds
add
push
lahf
out
cmp
call
pop
out
movsb
repz
ficoms
repz
mov
movsb
mov
sahf
movsb
mov
pop
jle
inc
pop
outsb
movsb
jae
pop
movsb
arpl
movsb
adc
movsb
add
movsb
xor
movsb
and
dec
ret
mov
dec
repz
inc
jecxz
int3
nop
fwait
bound
mov
inc
mov
push
fwait
mov
iret
addl
arpl
mov
bound
bound
in
pop
sbb
and
or
adc
cmp
add
sub
push
push
rcll
fmul
mov
faddl
fwait
pusha
mov
popf
mov
mov
xlat
jb
adc
repnz
xlat
adc
loopne
add
lock
xor
rcl
repnz
shl
and
ret
cmp
sbb
test
enter
enter
jno
add
pop
push
dec
push
mov
dec
inc
mov
inc
jno
push
bound
loopne
add
adc
fstp
arpl
inc
sub
fidivl
cmp
xor
adc
xor
push
lcall
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
aaa
mov
repnz
out
sbb
out
lock
or
lods
cmp
movsb
cmp
mov
cmp
mov
bound
cmp
sbb
cmp
sbb
sbb
dec
and
scas
lret
repnz
inc
adc
sbb
mov
pop
and
jl
inc
in
pop
dec
pop
jbe
mov
outsl
cmp
cmpsl
enter
faddl
cmpsb
in
sbb
out
fstl
int3
out
xchg
adc
mov
out
mov
test
inc
adc
push
out
jge
pop
out
gs
dec
out
sbb
or
sub
rcll
insb
ret
insb
sahf
dec
jl
orb
mov
insb
mov
inc
insb
mov
dec
mov
subb
insb
outsb
dec
nop
insb
push
dec
call
or
and
cwtl
frstor
cwtl
lds
cwtl
int
in
cwtl
cmc
rcrb
dec
xlat
mov
inc
xlat
mov
lods
enter
enter
enter
enter
enter
enter
leave
xor
cld
xor
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
popf
mov
pop
leave
lret
dec
xorb
xchg
cli
outsl
inc
and
adc
ljmp
jbe
push
adc
pusha
out
inc
adc
pop
out
sbb
sub
xor
jne
ljmp
mov
out
dec
andb
mov
mov
lods
bound
mov
push
out
jno
pop
out
imul
fs
call
and
rcrb
xchg
mov
icebp
orl
nop
jbe
push
jns
sbb
cmp
cmpb
sbb
cmp
nop
cmp
sbb
cmp
sbb
cmp
sub
ficomps
cmp
sbb
cmp
sbb
cmp
sbb
cmp
sbb
cmp
sbb
cmp
sbb
cmp
xchg
cmp
sbb
cmp
and
ficompl
cmp
sbb
cmp
sbb
cmp
sbb
cmp
test
pop
sbb
cmp
mov
cmp
in
cmp
sbb
cmp
xchg
aam
es
cmp
sbb
cmp
sub
sbbb
push
movsl
test
ret
sbb
mov
loop
test
shl
clc
pop
push
movsb
leave
mov
dec
jmp
fneni(8087
cmp
cmpsl
jecxz
cmp
enter
lods
imul
mov
adc
jns
pop
sub
je
mov
andl
in
mov
iret
xor
rcrb
xor
enter
sahf
pop
or
stos
shl
mov
xchg
test
xor
adc
and
cmp
inc
enter
iret
in
dec
pop
ja
imul
jb
shr
xchg
out
push
cwtl
cmp
jmp
sti
aam
out
lods
inc
outsb
fidivl
mov
clc
lds
addr16
sahf
adc
jae
add
ljmp
enter
leave
fstpt
mov
cmpsl
inc
xchg
arpl
inc
adc
xor
xchg
jecxz
in
pop
push
dec
fdivrs
adc
xor
xor
divb
in
mov
hlt
ds
jne
mov
cmp
xchg
cmp
xchg
les
jmp
sbb
mov
jge
out
cld
bound
add
xchg
enter
enter
insb
push
rclb
test
repnz
ja
out
or
icebp
add
and
je
popa
sbb
jo
sti
ja
pop
loop
cwtl
mov
sysexit
test
sbbl
in
push
adc
lea
jp
adc
xrelease
enter
test
out
pop
or
push
xchg
aam
push
fcomps
ficoms
jecxz
hlt
enter
xor
mov
push
notl
fnstenv
sbb
shr
aad
xor
add
call
adc
stc
call
mov
mov
mov
fs
xchg
mov
pop
add
in
xor
adc
lcall
cld
mov
movsl
out
mov
push
pusha
inc
in
jae
add
stc
iret
fs
je
fistps
jbe
inc
fs
and
aad
mov
xchg
int3
in
mov
dec
push
addb
add
mov
pop
inc
mov
inc
dec
mov
cmp
mov
or
sbb
insb
pop
pop
cs
in
stos
adc
mov
dec
fwait
popf
mov
xor
mov
mov
insl
pop
jns
push
or
paddb
jecxz
push
mov
inc
mov
popf
inc
sti
in
stos
sbb
enter
leave
popa
in
into
aam
ds
dec
in
jo
outsl
adc
ds
mov
les
mov
adc
je
dec
mov
xchg
xor
mov
or
les
pop
jle
pushf
mov
mov
in
fsubl
in
outsb
add
movsl
jnp
and
call
aad
push
in
popw
xor
sbb
or
sbb
fstl
jmp
scas
mov
test
lods
mov
pusha
fs
mov
fmull
pop
cld
mov
ds
mov
ret
into
jle
pushf
or
xor
lret
test
mov
push
mov
cmpsl
lods
adcb
addb
orb
cmpb
xchg
sub
aam
and
mov
es
aam
sub
pop
sbb
cmp
loopne
lcall
mov
adc
push
out
jle
inc
out
adc
stos
push
cmp
fldenv
add
sbb
xor
enter
mov
mov
mov
stos
arpl
dec
cmp
ret
inc
push
mov
inc
popl
adc
sahf
stc
push
xchg
dec
mov
in
push
fistps
scas
xchg
fistpl
xchg
cmp
into
popf
xor
adc
into
adc
pop
dec
arpl
or
int
sub
jbe
sbb
imul
mov
dec
jo
pop
lock
adc
fsubl
mov
inc
push
scas
push
add
arpl
inc
shlb
rcrl
jp
cmpxchg
sti
adc
or
mov
fwait
xor
xor
mov
dec
dec
mov
inc
js
sahf
imul
stos
pmullw
out
outsl
cmp
push
mov
stos
shrb
xor
cmp
add
add
repz
sbb
dec
cmpsl
cmp
sahf
cmpsl
pusha
xorb
mov
push
out
dec
adc
pop
out
adc
add
and
or
sub
shl
and
add
sahf
bnd
xor
xlat
mov
dec
push
inc
mov
cmpsb
and
xchg
sti
inc
adc
mov
bound
add
mov
loopne
xchg
add
pushf
hlt
inc
adc
ja
cmc
pop
pop
xchg
cmpsb
mov
mov
dec
jae
cmp
sbb
imul
imul
jle
insl
push
xor
ret
mov
imul
xor
sbb
cmp
sbb
jb
lahf
cli
push
ja
adc
sub
hlt
inc
adc
cwtl
xchg
enter
push
insb
mov
adcb
and
inc
arpl
inc
and
enter
mov
outsl
cli
out
hlt
mov
int
icebp
je
dec
push
sub
mov
out
cmp
in
inc
add
push
lock
xor
enter
enter
enter
enter
xor
pop
pushf
bound
mov
push
repz
xlat
jae
test
jnp
xchg
xlat
add
and
fwait
cmp
cwtl
sub
jo
adc
loope
imul
repz
add
lds
mov
rclb
arpl
sub
in
out
sbb
inc
inc
arpl
jecxz
in
add
imul
inc
mov
outsb
inc
ja
push
inc
jg
pop
inc
addr16
shrl
adc
ljmp
aam
test
out
and
in
int3
xchg
sbb
add
out
sbb
dec
call
mov
dec
cwtl
mov
mov
adc
and
shll
cmpsb
fistps
int3
int3
fucomip
push
out
repnz
jo
xchg
pop
push
xor
cmp
add
xchg
popf
loope
sbb
icebp
dec
adc
pushf
in
xchg
pop
pop
inc
movsb
sbb
es
ror
les
jae
pop
mov
inc
dec
out
pushf
movsl
scas
sbbb
iret
cmpb
fucomi
xlat
loop
data16
dec
in
into
hlt
nop
movsb
lock
pop
mov
cltd
sub
jg
xchg
push
mov
adc
xor
mov
lcall
ljmp
mov
dec
ja
ljmp
imul
adc
pop
icebp
lds
outsb
sarb
push
dec
xchg
ss
xor
jmp
sahf
mov
push
inc
sub
push
cmp
aas
data16
fwait
xor
cwtl
xchg
bound
xchg
sub
push
mov
loop
inc
add
mov
push
ss
cmp
pop
add
pop
xor
or
rclb
mov
movsb
lea
jns
fs
cld
cmp
or
ljmp
outsb
xchg
popf
nop
mov
test
outsb
movsb
jno
pop
adc
das
mov
scas
inc
inc
hlt
loop
nop
insb
stc
jmp
pop
lods
pushf
mov
dec
scas
sahf
mov
dec
leave
pushf
insb
bound
add
push
lret
cmp
arpl
dec
je
mov
sbb
cmp
test
or
out
cli
push
insb
mov
push
lret
test
pop
js
popa
mov
leave
imul
lds
test
mov
out
sbb
adc
push
pop
cmpsl
mov
sahf
in
push
dec
movsb
insb
pop
inc
mov
insb
aaa
adc
loopne
shr
repnz
sahf
fdiv
aaa
adc
enter
fisttpll
mov
xchg
lock
dec
arpl
dec
pop
xor
lock
mov
enter
dec
fcoms
sarb
lock
xor
dec
call
out
repz
int
inc
sbb
mov
mov
jbe
mov
jle
mov
popa
fcompl
ss
sub
add
xor
cmp
push
lods
leave
rcrb
cmp
sbb
mov
mov
aaa
imul
cmpsb
push
fimull
xchg
inc
adc
leave
in
rcll
call
dec
shlb
repz
or
dec
ds
mov
lods
cwtl
loop
push
mov
push
out
adc
and
or
push
clc
out
out
cmp
roll
les
mov
imul
out
movsl
or
lret
mov
leave
cs
rolb
add
enter
mov
filds
push
cmp
test
pop
jmp
testb
leave
dec
in
mov
jbe
mov
jle
xorb
cmc
adc
cmp
sbb
in
adc
or
repnz
cltd
repz
dec
adc
xor
inc
addr16
mov
inc
fisubs
cld
call
in
int3
cwtl
xchg
gs
mov
push
loope
bound
jl
mov
shrb
nop
push
jae
leave
cltd
add
add
lods
jmp
mov
cmp
rcrl
dec
es
outsl
shl
rcl
dec
loope
dec
clc
cli
popa
je
pop
in
push
loopne
push
repz
hlt
fs
xchg
call
leave
mov
inc
adc
dec
test
mull
mov
adc
sahf
inc
mov
int
dec
jge
jne
daa
into
mov
push
push
idivl
adc
clc
jbe
stos
nop
or
outsl
mov
cmp
mov
mov
push
cmp
sub
push
inc
cld
mov
mov
loop
and
mov
aaa
xlat
dec
cmpsb
loope
inc
and
sbb
fmul
movsb
jl
cmp
cs
and
int3
dec
cwtl
add
mov
adc
lret
sarb
cmp
outsb
and
pop
sub
sti
rcll
sbb
push
sbb
lahf
sub
insl
dec
adc
mov
push
adc
addr16
test
shrb
sbb
scas
xor
inc
xchg
lods
cmp
add
jb
mov
inc
fwait
pusha
in
xor
das
lret
xor
add
lea
cmp
int
test
jmp
xchg
mov
jno
hlt
push
lahf
das
push
dec
dec
mov
es
vcvtpd2dq
mov
repnz
xlat
psllw
repnz
les
add
sbb
pop
sti
ljmp
fs
xor
xlat
add
iret
xlat
daa
icebp
and
fisubs
pushf
loope
push
adc
repnz
mov
adc
adc
daa
enter
pop
and
adc
in
sti
cmpsb
test
sub
sbb
test
fildl
je
fdivl
aaa
in
jae
andb
daa
fbstp
xor
xor
sbb
int
add
xlat
insb
sub
shll
sub
ss
cmp
jmp
add
sub
ss
xor
insl
cs
xchg
and
adc
sti
movsb
stos
insb
or
fst
cs
or
xchg
cli
daa
xchg
fs
cs
shl
icebp
aas
int
and
and
in
aam
sub
and
or
sub
or
aaa
icebp
push
iret
aad
ja
mov
push
stos
sub
adc
pop
in
pop
jb
lods
pop
dec
and
cmp
xor
ret
xchg
fsubrp
cwtl
mov
mov
lret
or
jp
inc
in
out
lcall
popf
push
into
rorl
fdivs
sarb
insl
adc
cmpsl
xchg
in
push
test
cwtl
push
xor
dec
xor
enter
data16
adc
add
add
out
push
xchg
cmc
in
cmp
mov
mov
jnp
bound
sub
gs
pushf
adc
add
leave
rcrb
cmp
cmp
daa
lods
mov
xchg
pop
mov
cld
rorb
mov
sub
cltd
xor
pop
mov
iret
movsb
loope
int3
movsb
xchg
jb
fstpl
inc
arpl
xor
push
jmp
negl
es
int3
add
fmull
fwait
xor
or
in
in
pop
lcall
into
sbb
shl
sbb
jns
jnp
adc
mov
adc
pushw
mov
aad
nop
mov
add
sub
jne
rol
mov
dec
leave
mov
pop
mov
pop
adc
and
and
mov
xchg
dec
imul
insb
test
jne
jecxz
and
inc
pop
imul
sbb
out
cmpsl
mov
or
iret
movsb
lds
and
and
fcomi
mov
xchg
bound
cmpb
sbb
in
adc
sbb
sbb
sbb
stc
lret
mov
xchg
or
add
movsb
bound
jge
xor
push
push
dec
cmp
insl
rcrl
mov
lods
sahf
cli
rcll
dec
cmp
cwtl
das
push
sbb
js
movsl
push
dec
dec
out
enter
cmpsl
lds
push
aad
adc
xchg
inc
insl
push
or
push
scas
sbb
xchg
adc
nop
mov
lret
cmp
dec
xchg
andb
das
iret
movb
sbb
mov
arpl
mov
mov
insb
pop
inc
sub
xor
bound
mov
sbb
sti
push
je
popf
scas
inc
push
inc
out
mov
sbb
add
sti
sbb
sbb
jecxz
fs
cli
scas
test
and
pop
push
push
pop
inc
pop
mov
adc
jnp
loop
mov
dec
push
xor
and
xor
shr
fisubs
ffreep
pop
aad
inc
pushl
inc
cs
xor
push
inc
lods
mov
push
inc
jl
jl
cmc
cmp
pop
fistps
mov
xchg
add
or
in
or
xor
or
sar
and
sbb
mov
cmpsl
jle
mov
sbb
lcall
inc
fisubs
mov
add
pop
out
in
pop
int
mov
in
test
mov
xchg
add
inc
ds
xor
sub
int3
dec
push
rol
dec
loop
jb
data16
ds
pushf
add
out
jmp
out
and
cmp
add
xlat
adc
inc
push
icebp
lahf
sub
push
inc
pusha
dec
inc
jb,pn
les
lods
inc
jge
fwait
shll
cli
aam
insl
enter
mov
push
divb
or
cmpsl
add
jle
mov
lahf
push
push
inc
add
data16
mov
mov
pop
cmp
xor
push
out
js
test
or
in
in
popl
pusha
jno
adc
shrb
int3
sbb
cwtl
jp
jb
in
in
outsb
leave
pushf
in
jle
mov
dec
leave
mov
push
mov
dec
inc
mov
inc
ja
andb
adc
out
add
mov
test
sahf
cs
mov
dec
movsb
hlt
stc
jl
in
lock
lahf
or
dec
insl
rcr
pop
aam
inc
mov
push
ja
pop
inc
addr16
cmp
mov
sbb
xlat
adc
dec
mov
dec
divl
lret
test
mov
adc
adc
xor
adc
dec
sub
jp
sbb
in
adc
dec
sub
dec
pop
js
mov
mov
nop
push
sti
repnz
xchg
lock
and
lahf
leave
insb
fisubrs
test
subb
push
arpl
mov
rcrw
dec
addl
push
mov
sub
mov
leave
imul
or
in
in
pop
fisubrs
xchg
popa
jle
sbb
xor
leave
jecxz
xor
dec
or
decb
push
xor
arpl
inc
idivb
add
sbbl
pop
ja
les
lcall
mov
clc
in
adc
imul
sub
sti
inc
push
je
movsb
stc
ja
push
xor
into
std
jl
movsb
pop
mov
cli
mov
fisubrs
leave
add
enter
mov
aam
xlat
mov
dec
add
mul
in
aas
out
daa
jno
inc
mov
push
xchg
leave
je
in
dec
inc
lock
adc
add
scas
outsb
cld
andb
sarl
sbb
pushf
push
push
in
pop
addr16
pop
push
in
mov
loope
xor
adc
js
aas
sub
jecxz
pushl
inc
test
dec
lods
adc
push
imul
insl
cmpsb
mov
mov
push
cltd
push
and
fwait
aad
fucom
or
xchg
leave
cli
insb
cmp
fstpt
mov
cmp
inc
jle
xor
insb
stc
or
ss
pop
ss
sahf
mov
jg
fldt
cwtl
or
xchg
adc
inc
call
out
jb
or
imul
jne
push
cli
mov
lds
cmpsl
mov
fs
shr
pop
jmp
push
inc
mov
insb
outsl
dec
arpl
jne
xorl
nop
mov
dec
mov
adcl
add
fwait
enter
push
out
maskmovq
dec
xchg
pop
pop
mov
cli
fistl
es
mov
add
adc
cmp
push
lret
daa
mov
mov
ss
sub
xor
mov
cs
mov
push
push
in
adc
mov
in
ljmp
outsb
cmpsb
mov
adc
push
jp
cmp
test
mov
and
pop
mov
fmull
push
inc
rcrl
mov
out
sbb
ja
cwtl
cld
sub
mov
pop
test
clc
pop
or
cwtl
add
imul
cmp
inc
hlt
sbb
adc
jo
mov
sub
and
mov
dec
int3
and
fwait
mov
pop
xchg
inc
lret
pop
push
in
sbb
add
xor
mov
bound
inc
jb
decb
push
shrb
or
jecxz
pop
fsubrs
mov
pop
or
jge
cs
sub
or
xor
aam
insl
or
add
lds
sahf
cmpsl
jg
lods
sbb
enter
nop
ror
sub
mov
add
or
mov
adc
inc
inc
movsl
ds
adc
pushf
lahf
out
mov
pop
inc
cs
shl
in
repnz
icebp
or
xor
or
inc
or
jo
dec
icebp
push
or
jp
add
xchg
fists
pop
ljmp
pop
push
in
pop
inc
test
xchg
pop
stos
movsb
inc
pop
dec
movsb
punpckldq
push
push
sub
fimull
in
hlt
dec
pop
insb
mov
dec
xchg
arpl
and
xor
xlat
adc
mov
mov
jno
insb
inc
pop
adc
loopne
mov
lret
dec
or
cmpsb
ds
test
arpl
cmp
divb
push
fucomi
arpl
inc
das
leave
dec
xlat
imul
pop
mov
test
out
stos
sti
inc
pop
jmp
sub
test
add
inc
mov
push
dec
and
nop
and
cltd
sub
lock
aad
shll
enter
repnz
xor
mov
in
out
sahf
lods
jle
test
mov
inc
stc
inc
cwtl
out
fwait
push
jne
data16
dec
sub
push
stc
add
jne
pusha
fistpl
mov
movsb
imul
in
lret
xor
jno
jbe
or
jecxz
outsb
mov
mov
dec
lods
and
push
and
icebp
repnz
lods
sub
rclb
test
mov
mov
push
mov
adc
cwtl
mov
lea
imul
push
cmp
and
cs
mov
stos
push
inc
stc
je
je
mov
jmp
arpl
leave
inc
addr16
test
inc
aad
ds
push
mov
dec
or
insb
hlt
cmp
int3
cli
sbb
dec
test
stos
adc
xor
push
dec
sbb
adc
and
cmc
inc
shl
popf
repz
cmpsl
inc
stos
adc
jge
aas
es
pop
or
ret
adc
mov
scas
sub
pop
arpl
adc
mov
jns,pn
shll
arpl
filds
xlat
inc
lods
or
pop
or
jbe
mov
sbb
rclb
clc
pop
out
mov
add
sbb
data16
in
dec
aam
ja
push
xchg
jne
int
test
mov
lahf
push
mov
fwait
xchg
mov
cmp
aam
inc
shlb
int
cli
outsb
icebp
jle
add
rcl
cmpb
pop
fildl
ret
jg
mov
mov
pop
inc
in
fsubrl
push
xor
lret
add
pop
jne
lahf
fbstp
int
faddp
stc
les
nop
les
les
popf
je
movsb
dec
pop
dec
movsb
adc
adc
shr
add
mov
fbstp
xor
cli
ret
adc
xchg
arpl
pop
inc
shll
mov
and
cmpsl
out
add
fistl
bound
mov
or
cmp
cmpsl
cmp
movsb
lods
addr16
stc
mov
data16
test
cli
loopne
int3
inc
out
dec
cltd
lods
loop
jbe
loop
mov
sub
insb
leave
mov
push
repnz
inc
mov
nop
insb
add
dec
repnz
pop
lock
and
mov
mov
bound
xchg
out
aam
mov
test
repz
scas
xor
cld
xchg
loopne
mov
cld
inc
lock
cmp
nop
jle
inc
fdivs
fwait
xlat
mov
pop
mov
sti
jge
loopne
mov
cmp
adc
inc
xchg
loop
fwait
mov
cwtl
data16
xchg
or
mov
push
mov
pushf
fiadds
xor
adc
ret
sub
xchg
fiadds
jno
cwtl
aam
cmp
insb
icebp
xchg
addr16
cmpsb
cmpsl
pop
cmpb
stc
xchg
sarl
in
xchg
les
loop
dec
or
xchg
movsl
fdivrl
pop
jmp
imul
es
push
jne
inc
incb
pop
rclb
pusha
in
push
mov
cli
xor
sbb
rcrb
push
scas
icebp
decl
fidivrs
jmp
outsl
mov
call
lock
push
arpl
addl
mov
nop
cmc
outsb
xor
mov
lods
imul
jecxz
jne
imul
loop
leave
imul
add
in
in
push
mov
movsl
lods
inc
jp
and
fucomi
add
rolb
in
adc
in
and
in
or
insl
push
cmp
push
sub
loop
adc
jge
andl
push
out
arpl
icebp
in
lret
jno
ja
pop
gs
push
pop
imul
int3
and
dec
mov
xor
xor
lcall
mov
gs
js
add
push
add
push
cmp
adc
mov
xlat
xchg
test
pushf
popf
cmpsl
in
mov
repnz
adc
push
sub
adcb
movsb
mov
cltd
movsb
mov
rcll
xlat
shlb
and
fimull
lds
clc
adc
pop
pslld
xlat
daa
lock
xlat
mov
push
xlat
pop
icebp
xchg
bound
dec
jae
jmp
jg
add
inc
fwait
mov
dec
sahf
mov
clc
in
fwait
jne
lcall
xor
sub
fidivrs
jecxz
and
sahf
jge
je
mov
cli
push
shlb
inc
pop
mov
cmp
lahf
mov
mov
xlat
jl
adc
loop
cmp
test
ret
fidivrl
ret
pop
sahf
fdivs
pop
ljmp
adc
insb
cmpsl
inc
pop
push
cmp
ret
scas
mov
inc
cld
adc
insb
or
fiadds
shll
stc
push
jo
jbe
cmp
xor
les
cs
xchg
cltd
divl
or
popf
and
cmp
mov
movsb
pop
add
add
or
push
xchg
mov
mov
xlat
add
arpl
popf
dec
and
stos
aam
out
inc
test
arpl
xchg
inc
sahf
bound
into
dec
pop
pop
in
out
imul
enter
sbb
in
fsubr
repnz
jns
shll
cld
aad
movsl
mov
push
pushl
int3
pop
xlat
xor
enter
loopne
data16
xor
lea
add
fistps
mov
sahf
sti
jp
inc
mov
push
or
pop
mov
inc
pop
push
jp
jge
leave
add
lds
push
mov
cmpsl
inc
push
addb
push
insb
movsb
push
jno
repnz
jl
inc
mov
cmpsl
dec
push
imull
hlt
xchg
add
addr16
sub
cwtd
outsl
outsl
rclb
mov
faddl
bound
aam
daa
mov
repz
add
jne
mov
push
fwait
je
dec
sti
call
cltd
pop
int3
fwait
loop
fucomip
push
cs
sahf
or
stc
xor
into
and
and
mov
inc
cmp
test
push
or
and
pushf
test
pop
push
xor
push
into
out
xor
add
push
xchg
add
xchg
push
cmp
adc
dec
movsb
ds
pop
dec
cli
insb
xor
ret
movsl
cs
dec
mov
insl
mov
adc
into
std
adc
enter
inc
and
and
jnp
mov
xlat
divb
mov
adc
or
lods
xor
sbb
in
mov
mov
negl
pop
mov
clc
sbb
sbb
and
xor
andb
xor
bound
lcall
outsb
sub
and
adc
cmp
mov
or
dec
xchg
aam
pop
fsubrl
icebp
or
mov
adc
cltd
cmp
xor
or
push
mov
mov
popf
pop
call
sub
mov
sub
shll
adcb
je
push
pop
dec
mov
pop
dec
hlt
push
push
movsl
inc
or
or
addb
repnz
add
test
push
push
push
pop
clc
mov
in
jo
inc
cmp
clc
shrl
fiadds
or
jge
or
adc
push
or
lods
pinsrw
xchg
nop
cs
mov
sti
cmp
in
shll
inc
int
pusha
push
xor
fstps
fiadds
leave
insl
or
mov
inc
pop
lret
cmpsb
clc
ja
dec
jp
dec
aam
les
cmc
or
test
or
rorb
aam
aam
mov
rcll
xlat
out
or
sarb
cmpsb
cs
or
in
push
enter
stc
fldl
call
insb
xchg
leave
imul
nop
int3
arpl
lds
pop
adc
mov
std
mov
js
fdivrl
xor
into
sub
mov
inc
lds
orb
jnp
arpl
adc
dec
xchg
mov
movsb
sbb
inc
mov
pop
pop
mov
xor
movsl
out
scas
pop
neg
fdivp
mov
fs
mov
imul
mov
test
out
push
mov
mov
mov
jne
fdivr
push
push
je
ja
lahf
xchg
xor
jg
cli
jne
pop
fdivrs
jae
cmp
mov
fadds
and
sti
enter
repz
dec
inc
in
stc
xchg
inc
cltd
add
movb
cmpl
push
std
mov
out
mov
dec
fmuls
enter
nop
nop
sbb
stos
adc
ljmp
popa
out
pusha
push
mov
dec
hlt
mov
clc
cmpsb
mov
xor
sub
inc
sahf
enter
hlt
in
cltd
cmp
gs
mov
loope
test
pop
nop
cltd
push
jns
mov
jecxz
test
sarl
push
fnstcw
les
pop
lcall
sahf
fs
movsl
mov
test
andb
push
js
out
inc
cmp
ljmp
mov
ja
loopne
out
notb
pop
inc
hlt
leave
push
sbbb
dec
and
and
in
fnsave
out
mov
or
mov
into
int3
mov
push
dec
mov
mov
and
push
icebp
cmp
int3
jmp
or
dec
and
mov
jne
inc
mov
jle
and
jno
jp
pusha
sbb
f2xm1
rcrb
flds
pop
xchg
cwtl
dec
pop
loope
xchg
lods
pusha
idivb
cwtl
push
ds
notb
mov
cmc
ss
xchg
in
inc
jmp
loopne
das
call
jo
jg
fdiv
inc
js
xchg
cmp
fisttps
cmpsb
loopw
fbstp
arpl
mov
inc
loopne
fstpl
mull
je
jecxz,pt
mov
xchg
icebp
ror
push
scas
fisttps
mov
or
jg
mov
cli
leave
pusha
xchg
ss
outsl
popf
inc
loopne
dec
shlb
loopne
sub
cmp
mov
mov
cmp
mov
cwtl
push
popf
pop
mov
das
repnz
pushf
dec
rcrl
cld
pop
nop
xorb
mov
jo
jge
in
sti
movsb
add
pop
mov
repnz
cmpsb
dec
inc
adc
out
out
jno
dec
stc
and
faddl
imul
inc
lcall
pop
mov
mov
icebp
dec
ret
rcrb
dec
adc
fchs
aaa
pop
xor
loope
sahf
in
sbb
scas
dec
or
xlat
and
fstps
pop
add
mov
in
inc
cmpsl
jg
pop
sub
enter
call
addr16
cmp
jp
lret
cmpsb
dec
lcall
mov
and
test
or
outsb
push
ffreep
adc
cmp
mov
mov
pushf
ret
pop
or
mov
xchg
mov
and
jg
test
add
out
pop
lcall
arpl
lret
into
pop
mov
test
mov
hlt
movsb
mov
cmpsb
loopne
movsl
stc
or
nop
or
jns
cmp
xchg
add
jle
mov
cmpsb
mov
int
bound
mov
xchg
lret
mov
in
gs
in
dec
fstpl
pushf
and
nop
loopne
push
test
test
add
iret
lods
or
jg
ljmp
inc
dec
jle
popf
nop
push
mov
ds
out
push
or
stos
dec
fstp
inc
mov
outsb
fcomps
sub
add
notb
jl
repnz
mov
xor
mov
ret
shlb
jmp
lret
sub
movsb
cmp
cld
jge
or
movsl
sbb
push
pushf
popa
int3
test
push
inc
sbb
jg
clc
mov
mov
popa
enter
callw
sub
mov
sbb
xor
pop
fdivrs
ror
mov
rolb
sub
gs
movsl
mov
xchg
cmp
leave
add
dec
fdivrp
out
mov
adc
loopne
fists
jge
jb
test
mov
mov
pop
mov
or
inc
xchg
lods
jo
mov
mov
imul
hlt
cmp
push
lea
inc
mov
mov
and
fwait
jo
adc
xchg
enter
or
add
mov
mov
cmp
jle
push
mov
add
xor
or
mov
xor
bound
outsl
xor
movsb
rorb
lahf
sub
lock
pop
scas
outsb
or
in
push
aam
negl
fstp
aaa
lods
xor
shrl
jl
add
jmp
sbb
mov
cmc
push
fldenv
dec
sub
orl
pop
les
jns
nop
cmp
mov
js
xchg
mov
and
mov
ret
rol
ret
mov
rclb
outsl
pop
mov
arpl
mov
dec
loop
mov
pop
push
outsb
sbb
leave
fcoml
push
shr
xchg
fidivl
mov
call
nop
push
sbbb
in
hlt
and
rcll
fwait
int
dec
add
movsl
add
or
lock
xchg
mov
xor
iret
sbb
xchg
push
call
in
leave
movsb
pushf
cmovo
mov
xchg
dec
aaa
pop
into
ss
cmpsl
cmp
scas
repnz
add
cmpsl
cmp
mov
mov
decl
add
jg
mov
or
cli
icebp
and
incb
stc
aas
test
add
in
xor
aam
xor
adc
jge
cltd
adc
sbb
addr16
add
xor
xchg
xor
xchg
sub
or
stc
push
mov
test
aam
push
inc
loopne
and
push
iret
xchg
rorl
xor
pusha
call
pop
sub
sub
neg
test
bsf
test
bts
adc
add
adc
or
call
lcall
xor
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
shl
sub
xchg
mov
or
xor
btr
mov
bt
add
movsbl
sub
jmp
lcall
ret
or
sub
xor
bts
or
and
or
adc
sub
cmp
jmp
lcall
xor
add
add
pop
xor
xchg
push
bts
cmp
inc
not
dec
btc
test
bts
btr
call
lcall
incl
ret
neg
sub
shr
adc
shl
shr
sub
test
test
sub
jmp
lcall
xor
btr
shr
movswl
inc
bsf
neg
btc
neg
mov
mov
xchg
push
push
xchg
dec
add
add
call
mov
mov
xor
mov
bswap
dec
bts
bsf
btc
add
mov
bt
xor
xor
cmp
mov
cmp
or
mov
shl
sub
xchg
mov
cmp
mov
inc
add
adc
xor
and
jmp
lcall
ret
or
shr
sub
neg
or
btc
or
shl
bt
test
call
lcall
add
xorl
pop
xor
xchg
push
mov
xor
btr
btc
bsf
bts
mov
jmp
lcall
stc
add
xchg
ret
neg
sub
add
cmp
not
test
sub
movzbl
mov
dec
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
add
mov
cmp
mov
test
add
cmp
not
sub
jmp
lcall
xor
call
mov
bsf
xor
and
movswl
btr
bts
cmp
btr
add
mov
cmp
xor
sub
add
test
mov
and
btc
call
lcall
add
inc
sub
shr
bsf
adc
and
mov
test
inc
call
lcall
xor
adc
btc
xor
xor
sub
cmp
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
add
xor
adc
cmp
adc
btr
dec
btr
call
lcall
lock
neg
adc
cmp
xor
or
shr
bt
jmp
lcall
cmp
cmp
mov
mov
btc
test
btr
cmp
mov
shl
cmp
movzwl
cmp
and
shr
not
or
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
push
cmp
and
xor
adc
cmp
mov
bsf
test
btr
test
adc
push
inc
cmp
adc
cmp
or
xor
btc
dec
add
shr
test
adc
shl
adc
and
test
add
mov
bts
test
neg
cmp
not
xor
and
add
jmp
lcall
and
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
call
mov
mov
sub
xor
test
xor
cmp
call
lcall
add
adc
shr
adc
btr
dec
shr
sub
and
dec
mov
add
bt
bt
shl
bsf
xor
xor
and
adc
sub
mov
dec
adc
adc
cmp
adc
bts
and
shl
or
call
lcall
mov
sub
and
cmp
bsf
test
bswap
shr
test
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
adc
or
sub
shr
test
not
or
sub
dec
shr
sub
or
movzwl
mov
test
test
sub
sub
jmp
lcall
nop
sub
aam
mov
es
imul
or
cmp
add
shr
btc
shr
mov
xor
add
mov
call
lcall
add
shl
and
mov
bt
shl
bts
not
shl
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
btc
add
shl
and
cmp
btr
shl
xor
sub
mov
shl
mov
adc
adc
neg
not
sub
movswl
neg
movswl
mov
shl
sub
neg
shl
btc
test
mov
add
xor
shl
or
not
shl
mov
bsf
shl
lea
inc
cmp
jne
dec
btc
shr
adc
shr
cmp
sub
dec
add
shl
shl
test
cmp
shr
neg
or
sub
call
lcall
je
adc
inc
shl
cmp
sub
dec
not
test
shr
bts
sub
mov
or
sub
sub
shr
add
mov
add
call
lcall
mov
neg
or
or
or
shr
bts
mov
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
and
cmp
bt
not
movzwl
mov
xor
call
lcall
add
and
btc
neg
and
test
test
inc
add
sub
sub
xor
add
xor
add
or
btc
jmp
lcall
cltd
fs
btr
adc
mov
bt
test
cmp
mov
add
or
mov
test
and
cmp
mov
inc
shr
call
lcall
add
shr
adc
and
bswap
cmp
shr
or
inc
xor
mov
push
pop
inc
add
loop
and
shl
btc
neg
movsbl
shl
shr
test
btr
push
decl
mov
add
not
xor
btc
bsf
cmp
sub
shr
call
lcall
incl
icebp
adc
sub
inc
bts
movsbl
add
or
push
shll
bt
or
xor
sub
shl
bts
dec
btr
movzbl
push
xor
add
neg
or
test
adc
add
sub
mov
xor
or
bts
add
btc
cmp
cmp
push
push
pop
add
add
call
xor
movswl
cmp
dec
not
test
movzbl
bsf
adc
xchg
bt
shr
btc
bts
or
adc
movswl
mov
bsf
mov
test
xor
cmp
test
shl
btc
call
lcall
mov
mov
out
xor
inc
neg
sub
add
add
or
bsf
bsf
and
shl
btc
bt
call
lcall
jmp
cltd
je
and
cmp
add
add
inc
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
sub
neg
btr
sub
btc
movswl
test
bswap
shl
bts
bt
sub
sub
sub
test
shl
call
lcall
inc
adc
cmp
inc
mov
movzwl
mov
sub
neg
mov
bswap
xor
cmp
shl
btr
bt
adc
test
cmp
je
and
cmp
cmp
test
test
shl
shr
add
sub
adc
add
shr
mov
sub
call
lcall
shl
dec
shr
cmp
xor
xor
or
bsf
sub
sub
adc
shl
dec
bts
shl
and
sub
mov
call
lcall
je
mov
call
lcall
mov
mov
shr
loop
mov
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
and
call
lcall
jne
mov
and
call
lcall
neg
and
xor
inc
and
test
shl
cmp
push
decl
mov
add
or
bsf
adc
xor
test
sub
shl
bsf
push
decl
mov
add
sub
inc
xor
test
movzbl
or
add
add
shr
or
adc
movzwl
cmp
sub
test
sub
dec
jmp
mov
btc
sub
shr
adc
or
and
and
mov
sub
sub
add
add
test
btr
test
inc
mov
btr
mov
test
cmp
test
cmp
btc
inc
add
not
test
bts
or
adc
shl
cmp
xor
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
cmpl
je
call
lcall
add
add
mov
jmp
lcall
cmp
jne
call
lcall
add
mov
jmp
lcall
call
lcall
jne
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
cmpl
je
add
mov
push
pop
pushl
pop
add
call
lcall
add
test
add
add
cld
mov
add
mov
or
call
lcall
in
add
or
jmp
lea
call
lcall
mov
sub
mov
jmp
lcall
mov
add
mov
bt
bsf
or
bts
mov
sub
btc
shr
mov
add
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
jmp
mov
add
call
lcall
jmp
btr
dec
shl
movzwl
shr
bt
bt
neg
add
sub
mov
or
mov
inc
cmp
cmp
or
adc
dec
push
btc
adc
and
adc
test
mov
not
bts
push
sub
mov
add
dec
bts
bsf
inc
cmp
not
btc
btc
mov
shr
sub
bt
adc
btc
shl
add
shr
call
lcall
js
int3
btr
btc
xor
bswap
test
btr
inc
not
shr
lea
cmp
and
test
movzwl
shr
bt
not
sub
mov
xor
and
not
not
add
xor
mov
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
call
lcall
in
pop
or
sbb
adc
sub
or
bsf
not
sub
mov
not
adc
add
mov
test
or
or
test
push
test
test
test
add
btr
bts
xor
dec
push
bsf
mov
cmp
mov
bt
sub
cmp
shr
push
neg
xor
inc
btr
or
mov
mov
shr
call
lcall
mov
movzwl
btr
adc
and
xor
bt
test
bswap
btr
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
or
adc
bts
mov
test
cmp
bsf
not
call
lcall
sub
leave
neg
test
sub
mov
adc
shl
test
add
sub
xor
test
bts
bt
bt
cmp
call
lcall
mov
cmp
dec
and
mov
inc
mov
or
or
jmp
lcall
or
jne
call
mov
xor
xor
sub
dec
je
js
mov
cmp
je
cmp
je
cmp
je
inc
jmp
sub
add
sub
jmp
sub
add
sub
sub
jmp
pop
ret
pusha
mov
mov
cld
mov
mov
inc
mov
inc
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
jmp
mov
sub
mov
popa
ret
push
mov
mov
mov
mov
shr
xor
add
dec
jne
pop
ret
and
sub
and
imul
outsl
je
arpl
and
xor
and
sub
and
and
sub
and
gs
outsl
jo
gs
and
imul
and
popa
imul
sub
and
sub
and
insl
popa
imul
insl
popa
jae
data16
insl
popa
imul
sub
and
sub
and
je
and
and
ja
outsb
imul
jae
outsb
gs
sub
sub
and
sub
and
push
and
dec
inc
push
inc
dec
and
dec
push
inc
inc
push
inc
inc
and
push
dec
and
dec
inc
dec
inc
and
dec
push
inc
inc
push
dec
push
and
sub
add
sub
sub
push
push
jb
addr16
insl
and
outsb
and
je
bound
jne
gs
jb
arpl
insl
gs
imul
jo
jae
and
sub
add
loope
add
ud2
xor
adc
enter
rep
mov
loop
sbb
jb
adc
xchg
sub
mov
dec
cltd
inc
add
add
mov
add
pop
pop
fmull
adc
and
add
xor
ljmp
test
lret
xchg
jnp
pop
out
mov
push
jae
pop
add
test
mov
push
imul
add
push
add
mov
add
or
adc
icebp
xor
jl
add
fnstenv
add
cwtl
in
clc
sub
xor
add
ret
sbb
or
aas
push
xchg
inc
adc
push
push
push
orb
cmp
jbe
cmp
adc
mov
xor
add
ror
push
dec
inc
fstpl
ret
mov
push
pop
test
in
rcll
and
popa
add
das
sarb
adc
inc
adc
push
and
bound
adc
push
xor
sbb
or
or
and
add
fcoms
add
push
push
or
fiaddl
inc
inc
nop
mov
pop
cmpb
xor
daa
push
add
pop
mov
mov
sbb
loopne
in
outsl
xchg
adc
gs
sub
cmpsb
sub
inc
addr16
add
cwtl
stc
sub
daa
lods
and
clc
shll
aam
xchg
jl
sbb
and
insl
add
call
imul
jge
lahf
adc
xchg
sbb
movsb
sub
dec
pop
cmp
ds
add
pushf
shll
or
loopne
and
cmpsb
lret
daa
popl
mov
es
dec
movsl
mov
mov
sarb
mov
mov
jns
ja
div
icebp
xchg
add
push
lods
cmp
mov
pop
ss
and
cltd
xchg
pop
jle
cmp
add
dec
cmp
xor
jl
sbb
sub
mov
and
out
stos
loop
add
hlt
or
xchg
or
jp
add
xorb
pushf
add
loopne
dec
mov
sti
cmp
negb
dec
sub
jg
push
push
pop
adc
orl
and
cltd
sub
fs
pop
add
arpl
jle
add
sub
loopne
ljmp
add
cld
add
loop
rcrb
insb
outsl
jae
and
jne
push
cmpsl
jb
mov
decb
je
jns
ficoml
addr16
cmpsl
insl
xorl
jecxz
mov
fsubl
or
push
inc
cli
loope
outsw
loop
sti
adc
push
push
imul
fimull
stc
aas
push
gs
jmp
jecxz
jecxz
mov
xchg
into
jb
es
cs
das
adc
adc
pop
jb
inc
insl
jo
ss
jmp
sbb
or
ja
sub
dec
addr16
cli
mov
inc
push
jb
nop
out
and
push
outsl
fs
pop
cmp
push
ret
dec
jmp
shlb
outsb
pushw
test
aaa
push
xorl
adc
inc
cs
push
dec
or
lods
pop
add
xchg
sub
stos
addb
inc
cmc
inc
clc
dec
je
rcrb
in
cmpsb
add
inc
mov
dec
out
test
add
mov
push
gs
insl
int3
fs
xlat
inc
jae
popa
lods
fiadds
ljmp
jae
leave
je
or
insb
sti
int
gs
clc
add
and
je
daa
out
out
mulb
xor
mov
scas
sub
js
pop
insb
fs
jmp
ljmp
mov
dec
jecxz
or
rclb
xorb
dec
push
add
pop
jnp
cmp
aaa
jno
ja
cmp
icebp
ficoms
out
cmpsl
inc
cmp
dec
lods
xor
inc
les
jne
mov
pop
