pushl
dec
cld
dec
pushf
dec
movsb
pop
mov
lcall
sub
dec
lcall
xchg
mov
imul
fidivl
push
shrb
pop
sarb
jnp
inc
mov
lahf
dec
mov
cmpsl
fwait
mov
test
sub
in
adc
lret
fsts
fbld
adc
cwtl
sbb
sbb
js
pusha
loop
cli
push
les
jae
xchg
std
mov
mov
fldt
mov
clc
test
sbb
enter
je
mov
xchg
mov
cmp
mov
mov
mov
scas
mov
out
inc
jl
add
mov
fdivr
jae
dec
loop
jne
clc
or
mov
and
xchg
sbb
mov
cs
cmp
lret
sub
pop
adc
pop
rol
lret
jp
ret
cmp
daa
adc
insb
sub
mov
dec
in
ja
test
dec
lcall
int
dec
in
inc
mov
int3
pop
add
jg
iret
jno
pop
jb
dec
lea
push
xchg
xlat
inc
mov
cmp
dec
push
stos
push
in
out
ret
jle
pop
xchg
insb
out
enter
mov
mov
bound
jl
jg
xchg
rcrb
push
xorl
dec
je
xor
xlat
pop
xlat
mov
int3
mov
cmp
ficoml
xchg
cld
or
xchg
adc
je
stos
push
es
fld
lea
insb
pop
mov
fistpl
cmpsl
adcb
xchg
mov
xchg
xor
push
stos
xchg
cmpb
cmp
inc
and
dec
sub
jne
insb
nop
push
jnp
aaa
pop
cmp
fstp
sub
push
inc
sbb
mov
pop
popf
jl
jae
and
scas
scas
pusha
stos
and
repz
sbb
mov
dec
push
sbb
mov
mov
jmp
stos
and
js
or
pop
ret
mov
pop
lods
jnp
nop
ja
pop
pop
mov
add
inc
lds
mov
pushf
repnz
mov
lret
pop
icebp
rcrl
clc
dec
or
xchg
cli
sbb
outsb
fidivrs
out
cmp
mov
sbb
cmp
xchg
adc
cmp
rorb
sbb
rol
mov
jae
push
xorb
lods
dec
mov
sub
fnclex
sub
lret
mov
sub
int
mov
aaa
lcall
xor
in
adc
xchg
xchg
out
mov
xor
ret
xchg
xchg
or
dec
sahf
fcomps
mov
je
push
pop
adc
out
mov
enter
and
xchg
jmp
enter
push
mov
pop
inc
xchg
pop
cmpsb
add
xchg
fwait
add
add
adc
paddusw
insb
jo
inc
fidivs
adc
jp
loope
adc
sbb
int3
mov
and
mov
pop
push
cmpsl
mov
sub
lock
or
adc
add
cmp
movsl
cli
cli
mov
jecxz
pop
pop
adc
mov
leave
arpl
mov
ljmp
or
fists
mov
aas
or
and
stc
xor
xor
int
or
mov
lods
mov
arpl
xchg
adc
repz
jae
mov
add
cwtl
out
neg
mov
add
shlb
cmp
sarl
ret
jnp
xchg
mov
inc
into
mov
jns
in
mov
xor
mov
and
rolb
pop
adcl
push
cmp
xor
push
push
and
inc
jmp
and
inc
jmp
mov
mov
dec
xchg
adc
sub
xchg
rcrb
shrb
addr16
pop
fildl
dec
sub
fs
sbb
fisttpll
decb
xor
out
jne
loop
lea
mov
aad
mov
dec
lods
or
lods
sbb
scas
fbld
and
clc
sbb
rclb
mov
sbb
shrl
mov
adc
insl
inc
mov
xchg
push
ficoml
imul
pop
push
popa
test
mov
shrl
pop
cli
and
pop
xor
data16
xor
mov
adc
dec
outsb
xchg
xchg
jge
sub
xchg
sub
lds
mov
icebp
stc
jnp
sbb
out
lahf
lods
lods
add
jle
mov
adc
fisttpl
pushf
xor
enter
inc
mov
cmp
xchg
jg
sbb
in
std
mov
jge
xchg
fxch
inc
mov
push
sbb
mov
insl
lods
push
pop
aaa
shrl
imulb
and
decl
push
dec
sub
sbb
call
rcrl
in
adc
pushf
xlat
mov
pusha
and
sbb
stos
cmp
ja
mov
jae
outsl
call
fwait
pushf
add
rorb
mov
pop
adc
jne
push
fildl
jae
jp
pop
xchg
out
cltd
jge
mov
decb
cli
pop
fstpt
inc
les
fsubrs
pop
jg
jg
cmp
fwait
out
negl
insl
ja
add
loope
fbld
add
enter
dec
cmp
add
insb
mov
adc
jb
push
jp
orb
ds
jns
cmp
or
testl
sahf
movsb
int
outsb
pop
std
jne
test
add
lahf
lret
push
jge
dec
or
and
add
mov
xchg
lea
adc
jno
inc
adc
adc
cmpb
lahf
sub
lds
jp
push
cmp
and
mov
movl
jns
iret
pop
xor
mov
mov
shrb
movl
jg
clc
das
fisttpl
addb
roll
cmp
fstl
int
pushf
xchg
lcall
js
jb
jb
xchg
push
lret
shr
ret
push
xchg
inc
scas
popf
loope
adc
addb
adc
clc
adc
sub
mov
dec
jb
sbbl
push
xor
sbb
jb
rcrb
inc
pop
mov
cltd
sub
and
jns
cmp
push
push
cmp
cmp
cmp
push
xchg
push
adc
and
loop
and
in
and
addr16
xchg
cwtl
pop
in
cmp
mov
jb
push
mov
jmp
lret
loop
xchg
lahf
mov
sarb
ljmp
mov
mov
lret
cmp
dec
leave
dec
decl
mov
adc
inc
dec
lret
lea
xchg
jp
mov
jecxz
push
into
sub
ffree
push
cmp
cltd
xor
sti
mov
cld
mov
adc
nop
jbe
fstl
jmp
adc
test
mov
xchg
cmpsl
out
adcb
mov
mov
inc
call
or
mov
or
fwait
jmp
or
pop
test
lock
adc
fnstcw
mov
scas
inc
dec
mov
pop
cmp
js
dec
mov
ret
cmp
int
sub
fistpll
scas
sbb
jp
int3
push
pusha
ljmp
dec
jp
xorb
mov
pop
imul
dec
jecxz
and
mov
pop
lahf
mov
cld
out
sbb
dec
mov
sbb
test
add
jnp
cltd
xor
cwtl
inc
sti
shlb
rcr
xlat
pop
into
jo
inc
adc
mov
lock
adc
js
jae
or
aam
push
outsb
mov
iret
adc
stos
and
mov
xor
fdivl
cmp
repnz
fwait
adc
les
xchg
repnz
or
testl
mov
mov
inc
or
mov
test
in
push
push
push
add
dec
xor
rcr
lcall
mov
xchg
lret
ja
pop
xor
pop
pop
imul
or
fbld
jae
sbb
inc
test
mov
sbb
pusha
inc
aad
pop
roll
push
cmp
je
jecxz
mov
or
mov
jns
pop
add
inc
ret
popa
sti
dec
sbb
jmp
lahf
jne
loopne
test
mov
xchg
fcomps
xchg
call
adc
push
insb
aad
inc
xchg
out
ret
addr16
mov
push
and
bound
cwtl
jns
inc
xor
dec
std
sub
and
jmp
aaa
adc
fstl
adc
aas
loope
add
mov
loope
js
xor
pop
push
movsb
dec
inc
mov
inc
pop
cmp
or
rcll
sbb
mov
jecxz
fldenv
call
xchg
dec
add
std
mov
clc
jne
or
int3
mov
icebp
pop
mov
daa
mov
outsl
mov
push
into
adc
pop
ljmp
mov
sub
mov
int
imul
jge
lahf
xchg
lret
fldcw
inc
fcomps
and
add
mov
jl
movaps
push
lcall
ret
mov
aaa
popa
cmp
ss
sub
or
dec
mov
jle
pushf
inc
imul
movsb
mov
out
fistl
imul
push
bound
shll
dec
shll
xchg
or
push
test
dec
in
adc
int3
add
idivl
sub
xor
mov
push
inc
frstor
cltd
or
cltd
jnp
mov
nop
cmp
lds
jo
pop
and
subl
cmp
or
and
out
addr16
sub
imul
pop
pop
orb
xchg
into
sarl
mov
or
addr16
jl
xchg
repz
xchg
adc
inc
add
sbb
repz
test
sub
sub
sub
lea
pop
push
or
jl
mov
int3
lds
sarb
xchg
repnz
cmpsl
pushf
adc
ss
push
xchg
mov
ficoml
lods
xchg
mov
pop
xchg
fnstcw
pushf
push
les
push
or
daa
mov
inc
and
arpl
nop
and
sub
push
dec
ret
bnd
sub
int
leave
das
lcall
xchg
inc
or
dec
call
jl
pusha
cmpb
ret
push
jmp
cmpsl
cltd
js
aas
xchg
fwait
xor
and
push
ret
mov
or
outsl
mov
cmp
dec
xor
into
xchg
iret
inc
lods
push
jnp
pop
mov
mov
push
xchg
fdiv
jecxz
sub
mov
sahf
or
mov
mov
int3
mov
shrl
loop
loop
arpl
xor
jns
cmp
jnp
addl
into
addr16
imul
outsl
test
or
jmp
cli
pop
popf
mov
pop
adc
mov
fisubrl
xchg
or
xor
cmpb
xor
push
pop
loopne
push
ret
jb
sarl
xchg
scas
cmp
jg
lea
es
push
jge
into
leave
adc
ja
mov
mov
add
pop
push
jp
orb
xchg
mov
cld
jne
int3
mov
sbb
sahf
cmpsl
xchg
mov
jb
add
popa
jns
stos
hlt
jne
pusha
std
jmp
adc
fisubs
mov
mov
cld
sti
fbld
xchg
inc
fisttpll
xchg
cmp
into
nop
dec
push
test
sbb
fstps
xchg
push
test
loope
sahf
pop
xchg
aam
mov
pop
push
out
jmp
shll
ljmp
mov
pop
pusha
push
stc
cmp
mov
pop
mov
mov
ret
cmp
inc
and
nop
dec
mov
dec
push
stos
mov
pop
nop
fnstsw
dec
rcll
ss
xchg
push
repz
or
repnz
push
cmp
sub
mov
adc
int
mov
jp
mov
retw
cmpb
push
ret
mov
jno
sbb
pop
stos
push
fstpt
flds
lcall
iret
cmp
cmp
jnp
in
dec
pop
jo
xor
ljmp
xchg
scas
adc
jp
addr16
aaa
xchg
mov
push
inc
push
rcr
fistl
subl
mov
dec
pop
sub
insb
push
ret
in
fwait
add
test
cmp
mov
mov
jl
cmc
and
xchg
push
jg
cld
push
fldt
jno
inc
push
out
adc
lock
icebp
xchg
aad
jns
sub
pop
pop
adc
icebp
and
movl
imul
into
jg
je
cmp
out
inc
neg
inc
adc
lcall
mov
fwait
mov
insb
sub
mov
mov
ret
mov
push
push
xor
pop
scas
leave
push
pop
sbb
pop
inc
test
bound
js
ljmp
add
nop
test
push
lcall
mov
xor
xchg
out
mov
inc
jnp
test
xchg
das
sti
popl
sbb
mov
pop
inc
hlt
mov
pop
jecxz
xor
fadds
jle
xorb
scas
loopne
xchg
push
mov
popa
clc
sti
jg
je
ret
das
jecxz
sub
adc
test
dec
xor
test
sbb
fisttps
sbb
sub
outsb
js
int
jae
push
cmp
mov
fdivrl
ljmp
rcrb
add
xchg
pop
sub
dec
lret
jle
imul
out
xchg
loopne
loop
adc
outsl
mov
popf
add
je
sub
pusha
ja
mov
adc
add
stos
xchg
jae
fnstsw
popf
sub
jnp
push
mov
mov
or
pushf
pop
and
in
sub
or
test
repnz
jmp
jo
fbstp
sbb
enter
mov
call
leave
fistpll
push
nop
leave
jnp
add
lock
imull
add
aam
ljmp
lods
insb
fucomi
stc
jmp
fmulp
test
inc
clc
scas
mov
rcll
les
ja
clc
out
lods
inc
movsb
aad
cmp
in
mov
lock
jmp
out
cmp
rclb
dec
movsl
imul
sahf
mov
inc
push
scas
and
xchg
movsb
mov
mov
cmp
mov
add
in
adc
and
dec
enter
xchg
cltd
jge
xor
in
add
push
jae
cwtl
js
hlt
out
sahf
mov
mov
cltd
call
cmp
mov
sbb
test
mov
filds
into
add
xchg
mov
imul
clc
fdiv
in
vpaddw
mov
jl
xchg
mov
jnp
inc
sbb
cmp
icebp
or
orb
cmp
les
xchg
dec
or
push
fisttpll
cmp
in
mov
mov
movsb
jo
push
or
shrl
std
adc
dec
pop
ret
cmp
bound
sub
sub
cmp
add
cmpsl
clc
or
mov
mov
test
repz
and
sub
cmp
or
push
mov
fists
aad
dec
inc
fistpl
out
cmp
xchg
popf
dec
shl
pop
lods
inc
sbb
sbbb
dec
push
xchg
ret
push
lods
xor
pop
aas
jl
cmp
mov
sub
lds
push
clc
ret
orb
dec
inc
dec
daa
inc
sub
cmpb
inc
pusha
shll
xor
out
add
mov
aas
add
js
add
add
mov
sub
inc
mov
cli
push
inc
aad
scas
cmp
adc
mov
jnp
push
into
hlt
lock
adc
test
mov
mov
cmpps
inc
cmp
notb
dec
jae
rorl
jnp
lahf
mov
enter
out
sahf
insb
sarl
mov
sbb
jb
pop
test
cltd
out
jle
call
test
adc
ret
fisttpl
cmpb
push
or
pushf
xor
movsb
stos
dec
push
test
mov
ffreep
cmpsb
test
cli
fsubr
pop
pop
or
ret
aam
lds
mov
push
sub
add
cmp
cltd
mov
lcall
jmp
mov
rorb
jge
fwait
pop
and
or
mov
mov
dec
jmp
loope
rcll
mov
inc
lret
add
stos
jp
jbe
or
lahf
mov
sbb
xchg
jmp
and
subb
iret
xor
adc
sub
sbb
and
insb
sub
pop
mov
xchg
adc
dec
imul
xor
mov
and
mov
cmp
mov
push
imul
test
stc
fwait
xchg
in
or
xlat
pop
pushf
cld
or
rcrb
scas
inc
xor
mov
xor
mov
dec
pusha
adc
push
popf
pop
jecxz
sbb
repnz
fmul
ljmp
rcrb
fs
cmp
fbld
arpl
and
adc
in
cmp
inc
fstl
in
lds
sbb
dec
movsb
pop
cwtl
push
or
cli
and
nop
mov
pop
add
and
xchg
leave
ss
cmp
xor
pop
out
ret
cmc
add
lods
int
ret
push
pop
push
cmp
cmp
int3
xchg
in
and
xor
jg
pop
jl
inc
addr16
add
popf
cmp
xchg
mov
sbb
ljmp
push
lcall
pop
cmp
adc
push
add
sbb
sbb
jae
mov
dec
pop
pop
or
lret
imul
pop
scas
cltd
or
push
adc
lcall
xor
jge
jmp
mov
mov
adc
decl
jge
mov
adc
movsl
pop
dec
ficomps
jmp
call
test
jno
inc
jecxz
loopne
mov
fwait
jp
and
pusha
test
dec
mov
jg
lret
inc
stos
insb
lods
sub
cli
inc
out
mov
jge
push
pop
sarl
pusha
xor
xlat
mov
sti
or
lcall
push
xchg
jbe
mov
sbb
jp
jne
xchg
mov
ss
cmc
push
jle
test
sbb
mov
and
sbbl
mov
lods
inc
fcmovnb
clc
ret
fidivrs
jp
inc
adc
dec
popa
mov
daa
in
fucomip
jbe
dec
sub
imul
leave
xor
loop
inc
lock
adc
sahf
fsubl
mov
pop
sahf
xor
rolb
fdivrs
shll
repnz
cmp
sbb
sbb
or
and
lods
xchg
fstpt
mov
push
in
add
mov
sub
inc
push
or
in
xchg
mov
addr16
and
mov
hlt
mov
subb
ja
fwait
mov
mov
sbb
jbe
add
xor
pop
sbb
das
xchg
clc
cmp
dec
enter
popf
mov
aam
mov
fisttpl
and
xchg
popf
stos
mov
xchg
add
add
push
push
pshufw
ret
dec
iret
shrb
arpl
dec
enter
inc
fmull
jmp
adcl
push
add
ljmp
jns
mov
cld
imul
lock
adc
jo
dec
pop
pop
aaa
or
push
fimuls
mov
jbe
std
test
jp
jne
outsl
or
inc
mov
scas
cmp
mov
push
mov
or
push
push
pop
call
mov
jo
inc
sub
sub
adc
daa
insl
mov
sub
cmp
je
cmp
mov
insb
mov
inc
xchg
ss
push
add
add
les
add
adc
inc
jle
cli
lea
mov
jae
fs
and
nop
enter
je
leave
sub
cli
pop
and
shll
aaa
cltd
cmp
adc
pop
gs
push
cmp
xchg
inc
sub
add
push
rorl
bound
cmpsb
aaa
or
mov
xchg
addl
ret
pop
jne
mov
cmp
insl
push
dec
sub
mov
fwait
xor
movb
stos
mov
je
int
pop
pop
ds
arpl
aas
cmp
addb
into
jl
imul
shrl
jae
pop
mov
in
mov
sti
popl
addl
inc
divb
pop
insl
scas
xchg
dec
call
add
cmovle
pop
lock
loop
cmp
fwait
mov
lahf
cmc
jp
sbb
popa
xchg
les
mov
aaa
add
dec
inc
xchg
aaa
cmp
jo
xchg
mov
adc
test
nop
mov
ds
leave
sysret
xor
rorb
push
in
or
mov
movsb
inc
jnp
xchg
insb
scas
xor
cmpsb
add
inc
jo
aam
jg
mov
loope
shr
in
cltd
jmp
test
lahf
outsl
shrl
iret
mov
fstpt
push
addr16
aaa
jmp
pushf
xchg
lods
outsb
add
push
mov
lea
sbb
movsl
out
js
cld
inc
shrb
lahf
xor
xor
push
mov
loopne
push
sub
mov
xchg
stc
cmp
fistps
cmpsb
clc
fistpll
mov
xchg
or
mov
or
cmp
std
int
sahf
movsb
mov
inc
adc
mov
incl
fidivs
stos
xchg
jo
pop
jecxz
inc
nop
loope
sahf
xchg
adc
mov
mov
xchg
mov
in
fdivl
sbb
mov
and
imul
mov
jns
adc
in
lret
adc
adc
int3
mov
out
repz
fimuls
mov
mov
test
or
mov
jns
inc
wrmsr
pop
or
rcrl
xor
xchg
xorl
mov
add
daa
mov
sub
sahf
xchg
scas
aas
add
lods
pop
dec
xor
xchg
dec
sbbb
xchg
fildll
stc
lret
sub
or
stc
mov
mov
mov
mov
add
stos
jmp
loope
orl
das
insb
cmp
mov
loop
stos
jmp
lahf
incl
mov
outsl
ja
or
aas
int
push
movsl
nop
fcompp
dec
xor
ljmp
cmc
pop
mov
inc
mov
addr16
insb
arpl
fcomi
cs
lret
push
pop
stc
inc
test
pop
daa
push
iret
add
pop
fadd
mov
or
cmp
pop
shlb
jmp
movsl
mov
adc
inc
lahf
in
mov
imul
add
pop
xchg
xor
test
jbe
popa
sti
cs
add
imul
jecxz
push
mov
cltd
aas
sub
lret
mov
inc
sub
or
icebp
xlat
mov
dec
repnz
xchg
xor
movsb
inc
insl
and
cwtl
sti
aam
xchg
pusha
std
xor
and
push
dec
jno
shl
in
cmpsb
mov
cli
xchg
insl
dec
test
test
mov
cmp
lea
adc
adc
pop
xlat
aas
mov
in
pop
mov
push
inc
lahf
fstpl
push
mov
xor
pop
fsubr
and
jnp
icebp
les
cmp
rcl
or
sti
scas
sub
scas
rcrl
inc
lret
pop
push
addr16
repz
ljmp
or
into
or
sti
adc
pop
fldl
sti
es
ds
testb
mov
ficompl
out
fisttpl
out
pop
enter
jae
in
xchg
adc
push
mov
les
jno
jmp
adc
or
fcmovnb
cwtl
pop
fwait
setl
cmp
fstps
scas
stos
jns
pop
push
inc
cmp
ds
call
sub
mov
push
arpl
xchg
lcall
or
adc
add
sahf
cmp
dec
adc
mov
lock
popf
push
mov
sbb
lods
rcr
call
fisubs
lahf
mov
pop
dec
das
fstpt
add
cld
ljmp
pop
adc
lcall
pop
aaa
xlat
xchg
pinsrw
jno
xor
sub
cmp
xlat
in
les
lods
je
xor
lret
negb
sti
pushf
aam
iret
mov
out
cltd
ja
dec
sahf
adc
xor
cmp
pop
or
pop
clc
sahf
sub
cmpsl
mov
jl
nop
jle
or
bound
xchg
in
add
bound
and
cmp
add
mov
jp
inc
mov
test
ds
into
nop
adc
testl
call
mov
cli
ljmp
test
in
mov
add
or
cwtl
push
pushf
rolb
leave
ret
nop
pop
pop
scas
xchg
xorl
popa
mov
push
jns
cmp
push
lret
dec
pop
sbbb
xlat
mov
push
nop
mov
jb
push
or
test
cmovnp
adc
sbb
mov
es
mov
mov
ret
ja
pushf
cli
cli
pop
xchg
mov
mov
in
push
push
jnp
pop
cmp
cltd
jle
cmp
gs
cwtl
sub
sbb
jbe
pop
or
loopne
and
incb
cmpsb
add
inc
sbb
pop
jno
pushf
jl
pushf
int3
mov
adc
push
jnp
ret
test
sub
clc
imul
pop
sub
cli
stos
lods
dec
lcall
ret
popf
mov
push
xor
nop
mov
xor
mov
dec
mov
scas
jp
dec
sub
les
cmpb
xchg
dec
gs
nop
adcb
lahf
cmp
pop
dec
addr16
loope
fs
out
pop
mov
ret
scas
scas
or
les
imul
decl
cwtl
xchg
arpl
arpl
push
ret
fiadds
les
and
jne
mov
test
fnstsw
imul
shlb
xchg
sub
jmp
icebp
enter
and
xchg
push
mov
or
test
jbe
jo
xchg
cmp
aas
roll
jnp
popa
or
or
inc
sbb
dec
push
push
jnp
lcall
cmp
mov
fstpt
jge
orb
hlt
les
test
aaa
addb
cmp
xchg
scas
nop
inc
xchg
push
push
jmp
inc
mov
xor
loope
xchg
ret
daa
and
ret
icebp
add
mov
or
dec
pop
scas
push
push
jge
pop
push
jae
push
xchg
and
dec
sbb
mov
enter
out
pop
xchg
call
popf
push
enter
xchg
cmp
pop
xchg
adc
aad
xchg
mov
sub
loope
adc
ret
mov
push
push
pushf
int
cmp
push
and
dec
xchg
lea
into
mov
and
outsb
sarl
mov
pop
sbb
ja
mov
or
pop
sbbl
adc
dec
pushf
imul
mov
mov
scas
ss
mov
sti
mov
dec
jo
das
jnp
adc
outsl
stos
sub
mov
imul
dec
mov
stc
add
adc
enter
nop
lret
ljmp
add
mov
cmp
les
mov
mov
fldenv
aas
sahf
sahf
cmc
sbb
pop
div
lock
pop
lahf
pop
dec
outsb
sbb
cmp
cli
sub
loope
cmc
je
dec
lcall
dec
fs
es
inc
lcall
inc
cltd
lods
or
pop
mov
test
gs
in
pop
fstps
pop
adc
xchg
loopne
mov
xor
mov
adc
movsl
orb
xchg
pop
inc
xor
scas
pop
xchg
cmp
xchg
clc
int3
pop
mov
push
or
out
pop
cmpsb
call
bound
push
xor
fldt
sub
lcall
sbb
cmp
fsubl
jecxz
xchg
or
fimull
sbbb
incb
pushf
lcall
pop
xor
xor
lds
movsb
int
xchg
or
add
loop
jp
push
daa
dec
lods
jg
adc
das
mov
pusha
outsb
adc
xchg
mov
int
cmpb
push
cld
cmp
repz
int3
ret
dec
cltd
divb
pop
or
push
jle
jecxz
pusha
dec
mov
mov
add
les
ljmp
inc
mov
arpl
cld
pop
js
scas
mov
mov
cmp
sub
mov
les
xchg
push
pop
adc
inc
ficompl
les
mov
or
jo
cltd
pop
mov
into
add
movsb
rcll
out
xchg
shlb
sahf
adc
mov
mov
mov
dec
loope
push
icebp
xor
add
rorb
mov
dec
int3
mov
xor
outsl
sub
inc
push
sbb
test
adc
ret
mov
nop
hlt
test
xor
or
ss
das
call
sbb
ljmp
test
popf
data16
xor
aam
push
adc
dec
out
sub
xchg
inc
cmp
sarb
push
push
sub
sub
cwtl
or
in
xor
xor
mov
lock
xchg
inc
dec
js
mov
in
xchg
inc
fdivs
cmp
pop
aam
jge
lea
pop
xor
jle
imul
pop
push
leave
dec
and
pop
in
push
or
inc
fdiv
ret
arpl
sarb
mov
fcomps
dec
mov
mov
xchg
dec
jae
in
scas
and
pop
int3
mov
fwait
dec
icebp
fnstsw
data16
mov
fisttps
in
xor
fcompl
adc
or
pop
adc
jecxz
ret
in
cmpsl
pop
dec
jo
pushf
rorb
test
xor
rclb
bswap
mov
lahf
outsl
ja
add
inc
xchg
and
pop
lods
lret
ljmp
shrb
cltd
or
xchg
or
sarb
mov
push
out
out
test
xchg
cltd
pop
mov
jp
jl
cmp
fwait
jnp
cmp
adc
leave
jbe
jl
pop
mul
xchg
jb
je
pop
mov
sarb
and
hlt
ss
mov
sbb
aad
pushw
sbb
sbb
cmp
pop
sarb
mov
push
inc
or
popa
inc
add
sbb
test
nop
and
pop
stos
push
or
and
pushf
and
jle
ror
loop
cmp
das
pop
jmp
inc
add
popa
shlb
movsl
mov
mov
cmp
lds
xor
jbe
and
stos
inc
roll
add
dec
sahf
xchg
adc
das
stos
jbe
and
mov
fdivrl
imul
out
test
iret
pushf
mov
push
mov
push
movsb
adc
inc
mov
or
lcall
jb
or
inc
loop
mov
sbb
adc
mov
dec
mov
out
inc
push
imul
addr16
mov
movb
push
in
pop
rolb
mov
ja
dec
xchg
and
mov
cld
loope
push
scas
mov
cld
flds
jg
jns
mov
or
and
outsb
dec
xchg
sarb
mov
sub
out
adc
call
in
xor
movsl
pop
dec
mov
fstpl
mov
sahf
and
cmp
scas
movsb
fnstcw
jmp
hlt
fadd
ret
dec
or
hlt
jp
andl
sbbb
pop
or
adc
inc
loopne
xchg
sbb
sbb
inc
mov
xor
xchg
repnz
cmp
adc
aam
fisubl
jns
repnz
mov
adc
push
jmp
cmp
rorb
xor
pop
jge
push
scas
adc
push
stos
xor
jo
mov
add
xchg
cmpsb
fs
dec
rorl
iret
push
lds
adc
loopne
cmc
xchg
out
jecxz
add
mov
dec
dec
in
mov
aas
stos
pop
mov
int3
mov
ljmp
push
inc
scas
iret
pop
fwait
psrlq
subl
jle
bswap
mov
dec
int
jae
in
or
sub
mov
movsb
pop
and
xor
inc
cmp
pop
xchg
adc
push
cltd
xor
sbb
pop
push
pop
sahf
rorl
cmp
mov
je
sahf
push
mov
dec
stos
sti
je
repz
lret
je
xchg
dec
adc
push
lea
adc
dec
and
push
jmp
scas
pop
xor
mov
in
test
dec
jecxz
cltd
ja
dec
fistl
mov
jp
out
ret
out
lcall
fsub
push
sbb
sub
dec
mov
jne
mov
mov
call
cmp
adc
test
inc
sub
jmp
fldl
fs
fs
dec
enter
idiv
sub
pushf
and
xor
into
js
adc
arpl
and
sub
mov
scas
inc
or
arpl
xchg
rol
mov
mov
push
add
mov
mov
insb
xor
and
cmpsl
imul
scas
dec
shll
mov
aad
sbb
out
aaa
sub
sbb
add
sbb
adc
jmp
into
mov
pop
jae
rcll
ret
int3
and
cmp
xor
pop
je
xchg
mov
and
pop
arpl
cmpsl
mov
incb
mov
lahf
lret
fcoms
insl
pusha
gs
std
dec
cmp
pushf
into
pop
mov
movsl
add
testl
fisttps
adc
add
ret
adc
push
and
shlb
mov
out
jecxz
sub
mov
mov
in
xchg
add
inc
xchg
jo
shll
js
cmp
adc
rorb
inc
add
pop
and
shlb
out
lock
xchg
add
rcll
cld
mov
das
jecxz
jne
push
mov
je
cmp
js
dec
push
shll
icebp
rcll
jge
pusha
in
dec
pop
les
inc
and
xlat
or
mov
jae
loop
sarl
fimull
call
aas
jl
cmp
push
mov
enter
lods
data16
movsb
fistpl
xor
adc
jmp
jb
call
xor
inc
adc
jmp
mov
or
pop
jmpw
popf
adcl
stc
and
lods
out
and
mov
dec
adc
sarl
sub
mov
and
pusha
xchg
lret
jle
jae
std
jg
xchg
and
xchg
mov
dec
lods
subb
adc
or
jmp
loop
fnstcw
dec
xchg
lcall
push
fildll
fstpt
sub
mov
jl
adcb
test
or
mov
stos
lahf
repnz
inc
dec
push
stos
xorb
mov
mov
sarb
xchg
xor
mov
inc
sbb
jno
into
stc
xor
mov
mov
cmp
cmp
xchg
xchg
xor
add
sbb
sub
xchg
pop
dec
inc
fidivs
adc
add
mov
push
or
test
int
out
and
test
sub
and
scas
push
ss
xor
pushf
jns
movsl
jecxz
in
gs
jmp
rcrb
adc
add
test
cmpl
add
jp
xchg
fildll
and
jne
cli
cmp
sub
clc
imul
bnd
cmp
adc
xchg
xor
cwtl
and
mov
xchg
xor
cmp
push
adc
jmp
lds
jbe
mov
add
push
mov
loopne
push
scas
and
mov
xchg
push
sub
bound
jns
gs
xchg
xchg
dec
sbb
divl
xor
add
cmp
dec
call
and
imul
xchg
arpl
inc
lds
popf
lock
pusha
fdivl
gs
ja
dec
mov
aas
bound
inc
jbe
popf
shlb
ret
into
jo
jae
jg
jne
or
movb
xor
outsl
ret
test
xor
lret
and
pop
je
mov
sbbb
push
add
cmpsl
pusha
lret
mov
jecxz
popf
pop
int3
or
mov
sahf
push
fcomip
jno
add
lahf
pop
sbb
cli
push
and
pop
jb
loopne
in
pop
sbb
and
fisubl
das
and
xor
fwait
inc
ss
arpl
jo
and
xor
adc
jmp
inc
dec
mov
jno
or
jns
sub
jecxz
insb
int
cli
cmp
scas
repnz
shlb
mov
push
add
shr
sbb
les
inc
fisttps
insb
or
cmp
lcall
jb
insl
sub
enter
push
cltd
in
std
daa
fnsetpm(287
cmp
imull
fbstp
insl
adc
push
les
xchg
in
fwait
mov
cmpb
jb
mov
xchg
testl
in
test
mov
fisubs
cwtl
or
dec
mov
pop
jp
or
test
xchg
imul
xchg
mov
je
lea
loopne
xchg
adc
mov
adc
cmp
andb
addl
fdivl
jns
add
mov
xlat
jge
cmp
fstl
jl
adcl
pop
jl
adc
mov
ret
les
cmp
aaa
sub
cmp
notl
outsl
inc
xor
inc
xor
xor
xor
xchg
push
xchg
stos
iret
out
popa
sub
iret
lcall
xlat
les
and
jge
pop
dec
aas
or
insb
mov
cli
adc
outsb
ret
pop
xchg
dec
insb
movsb
or
pop
int3
test
or
movsl
add
cmp
test
push
jmp
popf
addb
mov
outsb
mov
ja
mov
xchg
jmp
cmp
jae
fsubs
xor
or
add
mov
pop
and
inc
xor
out
or
add
les
loope
data16
rclb
mov
pop
rdpmc
mov
jnp
outsl
jle
mov
sbb
xchg
inc
cmp
mov
push
repz
inc
enter
dec
add
cwtl
ds
dec
icebp
adc
mov
xor
and
push
es
lock
cltd
ljmp
push
pop
mov
pop
andb
call
test
fcoml
push
jo
fcomi
cld
dec
jmp
adc
cmp
lods
cmc
lret
loope
and
mov
lea
cli
mov
insb
pop
push
rolb
les
or
lock
int3
push
cwtl
ficompl
lcall
aaa
xchg
or
lods
ljmp
lahf
or
xchg
icebp
cmc
fidivrl
jp
sub
clc
add
in
pusha
or
das
adc
les
jge
push
lock
mov
lds
adc
sbb
fmull
test
pop
inc
scas
les
mov
fidivrs
and
dec
push
sbb
mov
dec
pop
jl
inc
pop
jl
dec
pop
push
cmp
push
loopne
pop
nop
xchg
imul
mov
cli
or
xor
mov
nop
fstpl
mov
jns
pop
jns
adc
inc
pop
lock
xchg
ss
push
mov
xchg
inc
daa
incl
cmpl
icebp
xchg
push
jle
movsl
bound
mov
insl
fsubl
xchg
pop
xchg
lahf
cmp
dec
mov
fsubs
xor
sbb
sbb
jns
pop
or
pop
pop
sub
sub
mov
mov
dec
js
inc
xsha256
cmpsb
xchg
pop
iret
movsl
mov
inc
push
les
and
xchg
cs
fs
les
in
and
xchg
stos
and
dec
jmp
sti
mov
fdivs
pop
xchg
in
or
cmp
xchg
dec
mov
insb
shl
movsl
out
add
ret
nop
pop
or
cwtl
mov
pop
push
bound
push
lret
jno
jae
dec
mov
js
adc
pop
imul
stos
push
push
fisubrs
lret
and
or
jle
lahf
setle
daa
fidivs
mov
inc
test
xlat
fcompl
pop
sti
aas
fimull
fcoms
adc
rol
lret
mov
or
jl
push
jl
sub
fsubl
das
jp
cmovbe
sub
inc
xchg
add
out
faddl
ss
cmp
loope
les
stos
mov
ror
push
lds
movsb
outsb
ret
hlt
fisubs
xor
pop
imul
pushf
lcall
xor
pop
cltd
pop
add
sbb
sahf
xchg
push
and
insb
jp
pop
sbbb
movsl
out
sarb
loopne
pop
jmp
arpl
pop
fistpl
dec
fmull
scas
scas
sub
xchg
xchg
jns
sti
mov
jns
repnz
nop
daa
push
punpcklbw
nop
sub
xlat
popf
leave
inc
mov
sbb
push
mov
outsl
dec
and
xor
xchg
andl
inc
and
jmp
test
data16
ret
cltd
repnz
cmpsb
pop
popl
fistpll
int3
jecxz
stos
push
mov
mov
push
add
cmp
lcall
sti
xchg
sbbb
jae
mov
movsb
jbe
or
sub
lods
adc
cld
sarl
rcrl
leave
jbe
pop
mov
test
enter
mov
xor
dec
outsl
lods
pop
lods
and
adc
lahf
xchg
dec
add
loop
cmp
fistps
leave
mov
es
inc
enter
pushf
jmp
xor
xchg
cmpsb
ret
and
fmuls
mov
cmc
xor
es
mov
or
dec
fidivs
xchg
dec
or
fistps
cmp
pop
jecxz
test
ret
jnp
dec
rclb
mov
dec
push
add
aaa
sbb
mov
lds
lcall
ja
test
push
or
or
xor
lahf
xchg
xchg
in
cmp
inc
pop
mov
xchg
cmp
std
imul
ret
and
adcb
sbb
fstpt
dec
shr
test
ljmp
add
inc
test
adc
inc
dec
mov
dec
push
popa
pop
rcrb
mov
sbb
jno
mov
in
cmp
mov
cmpps
xchg
icebp
fdivrl
cmp
ficoms
data16
pop
inc
sub
loopne
mov
jmp
dec
sti
das
pop
fcmove
pop
or
dec
imul
xchg
dec
add
sbb
and
adcb
mov
in
sbb
mov
xchg
push
lret
or
ds
popa
push
xor
mov
adcl
mov
lcall
xor
pop
mulb
ljmp
jo
aam
jae
movsl
xor
mov
cld
hlt
pop
add
rcr
mov
scas
add
xchg
xchg
mov
adc
add
in
clc
push
stos
dec
xchg
lcall
mov
popf
push
jnp
cmpl
insl
dec
xor
pop
xlat
test
pop
and
scas
jecxz
jle
add
pushf
mov
dec
into
jns
xchg
int3
lods
repnz
jb
dec
pop
cmpsb
and
out
lea
lret
dec
je
int3
sub
sbb
aas
sti
add
sbb
inc
imulb
mov
les
jae
adcb
mov
add
pop
rclb
or
sarl
sbb
stos
pop
mov
adc
pop
subps
jne
xchg
mov
pop
sub
mov
fcomi
dec
cli
int3
mov
lahf
mov
stos
mov
gs
lods
add
addr16
xor
lret
adcb
cmpsb
inc
mov
and
lahf
sbb
jecxz
aad
cmp
adc
jge
push
fwait
cmp
addr16
addr16
add
andb
cmpsl
lahf
nop
pushf
cld
es
mov
xor
sahf
test
in
shld
mov
enter
or
xchg
and
aas
arpl
roll
add
aas
xor
or
jp
add
mov
cltd
imul
sub
dec
mov
imul
or
mov
cmp
mov
push
mov
scas
sti
movsb
loopne
pusha
ss
imul
repz
mov
and
in
xchg
lcall
stos
sbb
mov
mov
stos
test
std
lret
js
neg
pop
pop
dec
jp
aas
popa
scas
daa
test
xchg
in
in
call
inc
in
rcll
sub
mov
cmpsb
pop
or
stos
ret
dec
mov
jae
cltd
mov
lret
andl
or
and
call
sysenter
inc
pop
push
jnp
adc
push
sbb
mov
lcall
cltd
cltd
mov
popf
pop
xchg
sub
test
xchg
aaa
rclb
stc
insb
xor
and
mov
mov
jo
mov
jo
cli
xchg
sbb
sub
lock
adc
cwtl
mov
leave
repnz
repnz
mov
jnp
imul
cli
jecxz
shrl
aaa
shr
and
lret
imul
mov
out
jg
sbb
loopne
rcrl
mov
aam
xor
mov
mov
dec
mov
jg
pushf
xor
imul
sbb
mov
mov
scas
ss
jp
or
xchg
mov
lcall
xor
sub
xchg
jecxz
push
pop
dec
and
push
xor
ret
mov
xchg
push
jnp
xor
adc
jmp
dec
addl
push
jmp
loop
cwtl
xchg
sbb
inc
sbb
mov
aaa
sub
and
jmp
xchg
and
mov
pushf
mov
mov
mov
mov
rorl
mov
inc
test
int3
and
fistpll
lcall
sbb
cmp
cmc
fwait
jmp
xchg
jnp
int3
jmp
fsubp
out
lds
and
mov
loope
pop
add
cli
test
test
stos
ret
and
cmp
cmp
dec
mov
sbb
scas
lret
call
incb
pop
in
jg,pn
push
dec
mov
andb
int
lea
imul
js
adc
cmpsl
and
mov
add
mov
fsubp
push
aad
daa
mov
pop
cmp
test
insl
xchg
push
mov
push
movsl
add
fcmovnb
dec
rorl
or
xchg
xor
sub
xchg
hlt
leave
outsl
fimull
test
mov
dec
or
fidivl
sub
into
das
jb
sbb
popa
fdivl
mov
adcl
adc
shrl
out
xchg
in
dec
hlt
sbb
lret
das
or
pop
xor
cwtl
sbbb
mov
les
pop
jae
sahf
scas
mov
push
adc
and
test
lahf
lods
add
daa
xchg
aas
fwait
xor
fidivl
lahf
mov
mov
das
cmp
sti
test
mov
mov
jmp
rol
sub
fwait
aaa
mov
adc
mov
or
fimuls
cld
test
iret
addr16
inc
jbe
adc
mov
inc
fisttpl
inc
or
dec
jbe
xor
pop
sarb
mov
test
push
out
pop
pop
xchg
stos
mov
and
testb
cmpsl
mov
add
pop
cltd
pop
cmp
int3
cmc
lret
mov
jae
loop
push
test
rcl
add
sbb
push
xchg
push
enter
pop
dec
mov
loopne
test
push
push
mov
cltd
dec
jnp
add
xor
outsl
inc
in
add
or
xchg
add
das
sbb
hlt
jecxz
inc
jbe
cld
das
adc
mov
mov
out
arpl
in
inc
mul
fdivr
xchg
inc
jno
xchg
inc
inc
icebp
subb
dec
jnp
mov
or
mov
fwait
jl
and
or
lods
jp
pop
clc
je
ror
pop
jecxz
or
xchg
jnp
cmp
std
inc
cmp
hlt
push
add
xlat
fstps
mov
sbb
mov
lods
pop
imul
jl
cmp
mov
add
enter
into
shrb
xchg
dec
cmp
outsb
mov
adc
rcrb
dec
pop
test
xor
jg
dec
cli
xorl
das
sub
loop
shrl
mov
mov
push
inc
std
daa
lea
xor
pop
adc
mov
jmp
shlb
dec
pop
mov
jns
insb
loope
ja
mov
sub
xor
aad
jb
test
std
cmc
sbb
nop
fldl
ja
popf
addb
mov
pop
xchg
dec
mov
and
or
mov
jae
ret
pop
rol
lea
pop
outsb
fisubs
ljmp
mov
scas
out
or
ret
pop
mov
scas
in
mov
test
or
and
stc
mov
test
fisubrl
xor
sbb
jmp
enter
sub
scas
dec
dec
test
sbb
out
aas
mov
xchg
xchg
pushf
stos
and
ret
shrl
shlb
ret
xchg
xchg
sbbb
or
lods
jge
mov
sahf
sub
shrl
mov
xor
xchg
adc
push
test
incb
mov
repz
or
cmp
das
enter
stc
cmp
jmp
jno
out
pusha
xor
push
mov
cs
ficoms
add
pop
push
jge
test
mov
and
jo
mov
shlb
lahf
lahf
xor
push
pmulhuw
fidivl
cmp
push
ss
mov
xor
mov
dec
pop
adc
mov
subl
ret
push
icebp
addr16
and
out
pop
xchg
lcall
mov
push
roll
dec
imul
cmpsl
es
std
in
bound
add
rdpmc
jns
adc
insl
incl
in
ret
push
add
adc
movsb
dec
lret
ret
call
js
dec
pop
fmull
adc
cmp
sub
jge
hlt
andb
or
lea
fs
dec
add
aas
xchg
and
mov
dec
pusha
faddl
in
loope
in
xor
push
cmp
pop
pop
cld
pusha
xchg
dec
jge
sbbb
int3
push
lahf
or
test
pop
out
mov
xchg
rcrl
xchg
lea
xchg
out
flds
clc
adc
mov
jae
jae
xlat
int3
popf
fistpl
jbe
pop
outsb
pushf
hlt
fsubs
pop
jne
cmc
adcl
das
add
xchg
daa
cltd
jbe
pop
mov
mov
add
add
les
lds
sbb
inc
add
pop
xchg
dec
push
dec
out
add
push
inc
stos
test
inc
mov
pop
in
cmpsb
repz
mov
sub
mov
pushl
stc
imul
fildll
xchg
mov
adc
add
lods
inc
test
arpl
xor
cmpsl
inc
sbb
xchg
add
faddl
mov
mov
jle
orl
mov
shrb
lcall
dec
sbb
add
gs
fists
add
enter
ja
jmp
cmpsl
mov
mov
dec
stos
fs
mov
and
xor
jmp
xchg
sub
cmp
ficomps
dec
inc
add
sbb
xor
aam
in
nop
sub
sbb
pop
cmp
in
ja
xor
xor
and
xchg
sbb
mov
pop
jg
jecxz
mov
or
dec
jae
or
pushf
cmp
or
push
rcll
inc
aas
sbb
filds
shlb
inc
lret
addr16
mov
ret
cwtl
fdiv
dec
lret
adc
push
cmp
dec
dec
ret
inc
push
lret
push
imul
std
pop
mov
or
push
icebp
ljmp
lret
cmp
xchg
add
xchg
xchg
mov
shlb
mov
or
insb
push
pop
int3
or
stos
xchg
cwtl
movsb
mov
js
pop
mov
dec
andl
pop
test
jbe
ljmp
push
lds
sub
pop
mov
sarb
push
dec
scas
inc
cli
or
pushf
inc
or
in
lods
gs
pusha
mov
inc
repnz
or
push
mov
pop
aas
leave
mov
inc
cmpsl
les
fstpt
aad
xor
xor
jae
mov
fsubrs
sub
test
es
push
es
test
dec
pop
imul
mov
push
xlat
pop
and
in
adc
insb
push
push
xor
jae
mov
fmuls
sub
inc
adc
inc
add
test
or
push
inc
add
test
push
ja
mov
push
add
repnz
cmpsb
add
fildl
aad
xor
cmp
clc
mov
fdiv
sub
inc
in
imulb
call
jecxz
add
push
jle
test
data16
out
pushf
inc
jl
aas
jnp
out
cmp
loopne
pop
add
pop
mov
subl
fimull
xchg
iret
pushf
fs
test
cmpl
ds
das
out
stc
adc
adc
push
xchg
loopne
notl
imul
inc
cwtl
scas
lret
das
outsl
add
pop
mov
push
mov
repnz
add
lret
dec
fisubrl
movsb
mov
hlt
pop
ret
imul
adc
dec
ret
insb
scas
cmp
sti
sub
aad
push
xor
adc
clc
mov
cmp
mov
pop
inc
hlt
add
dec
ret
mov
sub
add
fisubrl
loope
notb
xchg
movsb
leave
cmp
loop
mov
outsl
inc
loopne
test
xchg
test
in
std
bound
lahf
dec
lahf
add
lret
jmp
push
adc
sbb
imul
sbb
xchg
bound
leave
stos
mov
sahf
shr
lods
sar
cmp
popf
cmpsl
mov
lods
mov
repnz
lahf
pop
cli
nop
fs
call
aad
push
sbb
cmp
cwtl
ret
jmp
or
mov
jp
push
out
mov
stc
sbb
pop
add
inc
fisttps
lods
outsl
mov
lcall
insl
xchg
sbb
xchg
into
test
jmp
sar
dec
cmpl
imul
jle
pop
popa
and
ficompl
scas
stc
in
pusha
in
in
fistpll
testl
mov
arpl
mov
addr16
mov
test
in
cmp
test
sub
mov
aas
lahf
ror
mov
or
fs
or
pop
or
outsl
mov
mov
mov
sub
and
jecxz
scas
loop
loope
mov
jae
dec
jmp
outsb
aad
mov
test
sub
add
sbbb
bound
add
add
popa
addr16
sub
add
xchg
lods
pop
popf
out
push
aam
sub
jae
and
xor
test
pop
push
push
dec
jne
out
cltd
mov
pop
pop
sbb
mov
adc
stos
jg
mov
cmpl
jae
scas
iret
xchg
push
jno
in
pop
sahf
mov
das
pushf
jge
int3
mov
xchg
xchg
addps
insb
popf
lahf
lock
in
mov
cmp
cltd
in
jg
test
lret
shll
lahf
jg
repz
movsb
das
orb
addb
ret
or
pop
cmp
sahf
stos
mov
add
int
fldenv
cmc
fnstenv
inc
js
adc
fsubl
jecxz
mov
cwtl
ficomps
fcom
rcll
cmp
shrl
sub
jne
mov
adc
mov
movhps
cmp
fistpl
rep
imul
mov
mov
cld
test
mov
xor
jb
popf
sbb
inc
call
cmp
mov
int
mov
inc
pop
xchg
pop
mov
mov
push
sub
loopne
sub
xchg
cmp
addr16
unpcklps
imul
xor
xchg
sbb
or
adc
stos
jne
sub
fcomps
jecxz
mov
pop
xchg
in
fldt
dec
or
add
add
fcomi
xor
jae
fiadds
or
xchg
popf
in
lods
je
pop
jmp
sbb
sbb
outsl
nop
push
int
pop
xlat
jne
fimull
pushf
ficoml
sbb
inc
and
movl
lret
inc
cmp
mov
jbe
ds
mov
aam
mov
clc
dec
sub
xorl
das
mov
pusha
repz
pop
pop
and
mov
sbb
mov
cmp
xchg
int3
add
adc
aad
loopne
lret
xor
pop
jl
push
adc
push
xchg
mov
xor
sbb
lahf
roll
add
xchg
movsl
mov
popf
inc
inc
test
les
pusha
stos
js
sbb
hlt
jle
inc
cmp
jp
scas
push
mov
fistps
js
pop
mov
xor
lret
jp
pop
xchg
enter
pop
jne
pop
cmpsb
pop
cld
mov
jb
loop
jne
xchg
xchg
movsl
pusha
adc
sbb
inc
les
inc
js
aas
dec
jmp
mov
std
mov
js
or
stc
push
jae
add
int3
divl
add
in
daa
hlt
lcall
dec
pop
inc
jno
cmp
fmuls
and
imul
sbb
jns
sbb
adc
jp
sahf
repnz
repz
mov
mov
mov
add
mov
mov
arpl
or
outsb
inc
push
testb
adc
arpl
mov
sbb
jnp
pop
jne
lret
xor
or
imul
jp
adc
xchg
inc
sub
aam
daa
xchg
sub
test
cmp
sbb
fcoms
neg
mov
xchg
imul
mov
lcall
add
sbb
lods
scas
or
lods
pushf
jl
call
subl
adc
sbb
cli
je
int
add
clc
ds
lods
movsb
fcmove
push
pop
fcmovne
mov
mov
mov
mov
jnp
das
bound
add
and
dec
inc
data16
rclb
add
mov
stc
xchg
push
ficomps
movsb
dec
ret
repnz
jl
mov
mov
mov
jmp
mov
jp
push
fmull
shl
mov
adc
push
mov
sbb
leave
pop
andl
orb
and
bound
and
or
mov
mov
cmp
jmp
xchg
andl
xchg
int
sub
mov
push
lods
or
ja
cmp
xchg
pushw
inc
xor
pop
xchg
adc
add
jo
xor
andb
jo
inc
lods
outsb
jl
push
sahf
dec
dec
in
in
out
cs
xchg
imul
data16
subl
loop
fisttps
test
stc
cli
cltd
mov
or
sbb
and
or
cmp
lret
add
and
dec
xchg
cmp
lahf
outsb
or
push
fwait
int
and
loop
outsb
pushf
das
mov
rcl
movsb
cmpsb
jne
iret
push
xchg
xor
fstl
test
fstl
mov
bound
pusha
pop
aaa
popf
adc
inc
or
pop
int
dec
add
and
out
aad
adcl
ljmp
lret
inc
subl
lods
push
scas
and
dec
dec
inc
ret
dec
ja
jge
and
mov
ss
orb
daa
pop
mov
leave
mov
cltd
sbb
sub
repnz
aad
dec
mov
mov
inc
aam
sbb
pop
jg
mov
cmp
iret
mov
lret
xlat
arpl
inc
xor
aad
in
mov
lahf
add
fnsave
inc
jno
pop
adc
adc
sub
mov
fcoml
xchg
and
loopne
cmp
pop
repz
test
sbbb
sbb
xor
mov
in
lds
std
imul
xchg
mov
cltd
pop
call
pop
cmp
pop
in
xchg
divl
and
xor
imul
xchg
dec
leave
shl
insb
aad
push
leave
and
mov
jo
fwait
sbb
and
pop
xor
cwtl
push
cltd
das
div
stc
test
outsl
inc
or
ds
stc
ret
dec
stos
nop
xchg
add
sub
inc
fsubrs
cmp
fwait
or
adc
xor
movsb
jno
mov
fldcw
mov
adcb
or
fldt
cmp
sub
xchg
cmp
mull
sub
sbb
xor
dec
push
xor
sti
jno
and
adc
push
jmp
je
divb
or
pop
pop
js
je
pop
or
inc
or
lahf
adc
cmp
and
add
cs
lods
mov
mov
dec
stos
mov
inc
mov
aas
out
push
and
fwait
imul
hlt
mov
adcl
and
fistl
hlt
pop
jmp
pop
ljmp
jmp
and
jmp
sub
xlat
fidivl
clc
dec
lcall
add
cs
lcall
jmp
addb
mov
and
scas
sahf
xlat
push
push
cmc
xchg
dec
fdivrl
pop
loop
in
daa
jno
fucomp
sub
shrl
fiadds
cmp
dec
xchg
lret
ss
dec
dec
daa
movsl
jmp
xchg
dec
stc
data16
cmp
ja
mov
jns
call
sub
fildll
jl
fcomps
pushf
jg
push
xchg
mov
pop
or
sbb
jecxz
and
scas
sub
incl
sbb
pop
or
mov
cmp
xor
cs
int3
jmp
test
pop
cwtl
cmp
in
jle
push
adc
pop
push
dec
repz
pop
mov
xor
aaa
bound
mov
cmp
jno
push
pop
lret
arpl
cmp
cmp
add
cmc
mov
dec
mov
in
scas
jle
fcoms
pop
pop
cmp
xor
in
test
xchg
and
es
inc
out
cwtl
lret
mov
sbb
add
mov
cmp
popa
inc
sahf
mov
sbb
adc
mov
filds
in
dec
jge
pop
outsb
dec
mov
aas
xchg
mov
lods
daa
xchg
and
mov
jmp
fidivrl
testb
mov
inc
dec
pop
jno
jo
int
push
mov
fwait
scas
xchg
incb
repnz
into
dec
push
pop
lds
test
je
sbbl
cmpsb
mov
nop
push
mov
aas
dec
jle
insb
mov
imul
fldenv
es
lods
jo
and
gs
rorb
inc
push
insb
sbb
pop
test
mov
xchg
stos
push
leave
dec
test
push
add
scas
xchg
arpl
and
xchg
ret
stc
mov
stos
or
lcall
mov
out
les
dec
push
mov
insl
popa
cmpl
ljmp
aaa
pop
leave
popf
jp
xchg
mov
mov
xchg
stc
les
dec
pop
mov
aam
fildl
mov
mov
outsb
jnp
xor
xlat
je
test
xchg
dec
pop
inc
sti
out
push
dec
pop
mov
movsl
mov
inc
jae
push
iret
nop
or
mov
sub
lods
dec
leave
std
push
lahf
int
jb
outsl
pop
push
stc
nop
push
repz
pushf
cs
insl
lods
push
fadds
mul
sbb
or
out
movsb
mov
jp
andb
mov
add
sti
cwtl
sub
mov
lcall
xchg
or
jl
mov
push
data16
mov
loop
dec
sbb
sub
fmulp
loop
insl
jae
in
sub
sbb
mov
push
aad
dec
dec
xchg
mov
and
mov
inc
out
fiaddl
mov
fs
lock
jl
daa
leave
mov
mov
popf
rolb
cmp
xchg
nop
js
test
mov
repnz
sub
in
xchg
xchg
loope
adc
int
inc
imul
adc
jle
xlat
stc
xlat
in
mov
enter
xchg
addb
adc
je
or
mov
int
and
in
inc
fstpt
cmp
cmpsl
xor
xchg
sub
mov
ret
daa
insb
mov
pushf
dec
in
loopne
in
inc
add
bound
xor
in
outsl
push
xor
and
jb
insl
cwtl
sarl
negl
sub
dec
and
insl
inc
nop
pushf
cmp
mov
jge
fld
mov
dec
dec
or
scas
nop
andb
jno
and
inc
sbb
loopne
xor
insl
in
das
adc
jo
addl
mov
pop
insb
sub
iret
fmulp
or
lahf
adc
sub
mov
pop
popa
loopne
adc
xlat
adc
jne
std
cli
xor
fwait
ret
mov
cmp
addr16
mov
mov
or
sub
add
fnsave
mov
into
cwtl
arpl
movsl
lret
pop
imul
or
iret
push
popf
daa
rol
mov
inc
gs
adc
lcall
mov
add
popf
lret
push
jle
sbbl
jnp
xchg
cmp
inc
jmp
mov
jno
cli
mov
fcmovu
add
mov
xor
xor
push
imul
mov
jl
pop
iret
std
xchg
fdivl
push
imul
stos
mov
daa
mov
mov
dec
pop
add
cltd
loop
mov
pop
mov
test
jbe
mov
jns
ret
decb
int3
mov
jmp
data16
push
xor
imul
jmp
mov
into
cmp
pop
ss
and
add
sub
xor
mov
jge
mov
and
iret
in
pop
popf
pop
arpl
cli
sbb
inc
dec
mov
mov
fwait
psllq
es
mov
add
jecxz
sbbl
cmp
inc
mov
dec
pop
insl
add
aas
xlat
inc
daa
bound
insb
dec
ljmp
int3
insl
stc
xchg
in
cmp
movb
std
aad
mov
fdivs
or
inc
out
jno
add
iret
rcrl
fistpl
lods
pop
roll
mov
cli
xor
sub
xor
pushf
jg
lea
ljmp
bnd
nop
jge
fbstp
into
sub
mov
rorb
inc
mov
pop
mov
push
in
out
mov
jg
dec
cmp
fdivrl
mov
mov
add
mov
dec
shlb
mov
mov
mov
fiaddl
push
push
add
mov
sbb
cli
dec
fdivrp
or
orb
fildll
lods
cmpsb
sahf
xchg
roll
or
pop
pop
into
add
stc
pop
imul
jecxz
push
or
mov
aaa
cmp
inc
les
call
aaa
jns
mov
jo
add
push
in
subb
push
adc
jo
adc
in
test
out
add
fistpl
pusha
scas
cmp
ja
aas
xorl
mov
cmpsl
ljmp
in
fldt
sbb
rcrl
xchg
and
rclb
mov
shll
filds
sub
cli
jmp
repnz
xchg
out
pcmpgtb
popf
add
mov
je
loopne
mov
fcomip
out
loop
adc
arpl
pop
bound
xchg
add
mov
push
jbe
into
lods
pop
testl
xor
cmpsb
and
dec
push
test
adc
pop
xorb
out
popf
mov
cmpl
add
cmp
push
lock
mov
jae
loope
out
cmp
cmpsl
jmp
out
cmp
repz
xchg
loop
stos
inc
das
pop
ljmp
bound
popa
dec
std
js
mov
xchg
add
dec
push
sarl
adc
movb
idivl
and
pop
add
jno
mov
sar
xchg
test
and
aas
out
push
pop
les
jnp
pop
mov
scas
into
stc
shlb
filds
js
pop
jp
xchg
cmp
and
stos
int
lahf
xchg
and
clc
mov
jmp
inc
data16
cwtl
push
js
enter
jl
insl
inc
jle
repnz
mov
pop
lods
and
jmp
arpl
and
add
xchg
mov
mov
ljmp
stc
sbb
pop
mov
push
jle
cld
cmpsl
lock
mov
scas
pop
rorb
sbb
inc
sub
or
jbe
cmp
sub
sarl
mov
and
jp
subl
add
mov
cmp
fidivl
add
jns
mov
je
lds
mov
imul
addr16
in
cmp
xchg
stos
mov
fsubp
in
adc
jb
jecxz
adc
inc
xor
pop
inc
in
dec
jge
imul
jo
mov
sub
nop
stos
cld
cli
jecxz
xchg
cmpb
cmp
mov
pop
fstpl
or
xchg
jg
scas
dec
push
pop
mov
out
add
data16
repnz
test
xor
dec
loopne
and
add
ret
jbe
lds
stos
add
pop
call
push
sub
iret
pop
mov
xchg
pop
ret
out
loopne
jnp
sub
mov
push
js
mov
out
cmc
jg
push
inc
inc
pusha
out
fdiv
dec
or
pop
or
pop
jae
mov
pop
inc
out
push
flds
cwtl
ret
in
out
push
cmpsl
insl
mov
and
mov
mov
add
out
xor
ds
mov
dec
in
pop
inc
mov
sub
mov
dec
movb
stos
and
popa
imul
push
pop
ljmp
sub
loopne
fbstp
pop
pop
pop
enter
dec
xor
and
ret
xor
cs
xchg
jae
inc
cmp
les
lret
xor
mov
cmpsb
fisttpll
mov
sahf
es
pop
inc
stos
pop
lock
mov
push
sbb
mov
push
arpl
mov
addb
sbb
aas
ret
shl
mov
mov
je
inc
out
lgs
aaa
push
or
loop
addr16
jnp
xchg
loope
sub
incb
je
lock
and
nop
ljmp
cmpsl
dec
sarl
cmp
xchg
daa
fnstcw
xor
sub
out
mov
or
arpl
jns
fisttps
ret
xchg
inc
out
jecxz
xchg
dec
sbb
sub
pop
sub
imul
jae
ljmp
pop
inc
rol
dec
mull
out
or
je
repz
xor
add
jne
push
xchg
sbb
sbb
sbb
ret
or
xor
mov
les
mov
add
mov
cmp
xor
pop
movl
ja
test
xchg
popf
xor
sahf
dec
mov
out
xchg
or
dec
enter
adc
repz
mov
iret
or
stc
mov
push
ljmp
stos
pushf
mov
mov
mov
mov
cltd
fsubs
jg
push
jns
inc
and
add
mov
mov
lret
or
push
in
fisubs
in
repz
and
scas
out
inc
push
lcall
movsl
add
jp
lds
xchg
add
popa
cmp
lahf
adc
cmp
ret
or
dec
push
sbb
mov
out
adc
cmp
push
dec
dec
es
pop
fsub
mov
js
js
lods
cwtl
out
xchg
shrb
sti
or
dec
imul
push
int
ret
jg
adc
test
movsl
movl
push
adc
dec
adc
into
xchg
subl
adc
mov
scas
pushf
dec
xor
leave
aam
daa
mov
in
sbb
enter
push
pop
inc
outsl
gs
mov
or
xchg
sti
mov
lahf
nop
fadd
and
ja
in
inc
enter
pop
leave
mov
jmp
decb
and
jecxz
add
push
push
jae
lcall
jo
pop
ret
cwtl
sarb
sub
xor
adc
ficoml
cli
in
scas
mov
rorl
and
mov
adc
int3
lea
dec
mov
add
cmpsb
mov
repz
mov
xchg
pop
pop
insw
mov
jb
decb
ja
cmp
outsl
aaa
pop
andb
push
dec
xor
je
jl
mov
loope
aam
or
dec
add
mov
dec
es
add
jp
and
loope
jb
out
dec
cli
adc
add
jne
sbb
mov
fldl
dec
mov
loopw
mov
dec
dec
fcoms
into
adc
inc
cltd
or
dec
aaa
dec
dec
or
imul
pop
test
nop
scas
jp
push
out
div
jns
dec
pusha
xchg
pop
fadd
cli
out
dec
lods
push
js
call
push
push
push
cli
jns
xor
stos
cli
pop
popa
xchg
push
xor
sub
sti
movsl
inc
mov
pop
shlb
add
out
dec
repz
outsl
add
mov
push
adc
ror
fiadds
adc
scas
insl
mov
sub
pop
sbb
push
xchg
or
clc
mov
shlb
imul
or
sub
push
js
aad
mov
mov
jno
xchg
jne
and
cmp
dec
mov
jbe
dec
sub
cmp
push
or
test
mov
cwtl
add
mov
adc
nop
jno
sti
sbbb
lret
popl
sahf
jl
pop
ja
std
and
int3
popa
or
jmp
xor
stos
test
add
cmp
mov
les
outsl
pop
dec
add
movsb
inc
sahf
or
es
or
scas
bound
ficoms
insl
jmp
jmp
aaa
mov
enter
addr16
ss
call
scas
ja
and
add
or
jno
bound
fwait
int
sbb
mov
mov
stc
movsl
push
xrelease
dec
jle
jbe
xor
inc
in
addb
adc
stos
jb
pop
inc
pop
lret
pusha
cld
insl
dec
cmp
pop
dec
imul
das
xor
fs
add
add
mov
fldt
jo
or
movsb
filds
push
add
lcall
in
rcrb
inc
push
pop
add
adc
cli
xchg
mov
das
dec
cmc
ja
xchg
lahf
and
or
test
imul
aam
icebp
jo
push
stos
sub
aam
test
scas
fsubp
cmc
add
jecxz
add
xor
mov
test
gs
cmp
xchg
lock
fidivl
pushf
cmpb
mov
pop
cmpb
sbb
inc
leave
and
lret
stos
insb
mov
push
js
xchg
scas
adc
cmpsl
jecxz
popf
mov
mov
dec
lahf
fcomip
and
jecxz
call
ss
push
adc
scas
xor
int
sbb
arpl
out
cmp
push
mov
pushf
dec
loop
xor
aaa
cld
aam
mov
fidivs
ds
dec
in
sub
xor
xor
or
cmpsb
jl
fisttpll
imul
inc
mov
xchg
cmp
std
push
mov
and
orl
inc
jmp
cli
push
aad
xorb
cmp
shl
clc
mov
bound
and
popf
dec
pop
in
jne
iret
sbb
out
data16
nop
fistpll
lds
push
cmpsl
inc
push
sbb
rol
mov
iret
pop
mov
cs
add
filds
out
scas
sbb
dec
or
sti
mov
lods
jne
push
xchg
mov
xchg
cs
loop
test
arpl
std
inc
mov
dec
jo
xorb
push
pop
ss
mov
and
lretw
jns
addl
int
lret
xor
sbb
test
mov
mov
lret
cwtl
mov
lods
insl
add
mov
mov
push
movsw
nop
icebp
cltd
jae
mov
sbb
in
dec
sbb
dec
sarl
push
clc
push
shrb
pop
je
jle
pop
arpl
pusha
cmp
xor
mov
mov
lahf
pop
mov
inc
insb
cltd
jns
inc
pop
or
add
sbb
aam
add
xchg
cmp
adc
aad
aaa
jnp
pop
or
fsub
mov
push
jns
int
lods
clc
sub
insl
pusha
bound
in
jmp
mov
out
xor
mov
add
aam
push
jge
jae
pop
cmpsl
xor
inc
ret
xchg
mov
sbb
sahf
cmp
mov
inc
insl
or
mov
outsb
lcall
arpl
jnp
mov
nop
sbb
mov
aaa
cmp
cltd
gs
pop
rcrl
mov
fwait
mov
mov
ret
mov
xchg
push
orb
daa
xchg
sub
jg
sbb
jno
cmpsb
lret
inc
mov
mov
cld
mov
or
xchg
jp
pop
mov
pop
nop
inc
push
or
inc
addr16
cmpb
test
rclb
es
add
cmpsb
mov
mov
push
mov
outsl
cmpsl
lods
jae
pop
arpl
inc
xchg
mov
xchg
clc
insl
in
cwtl
and
scas
dec
dec
push
pop
push
mov
jns
sarl
or
sbb
ficoms
pop
sub
push
dec
fcomi
cmp
shlb
xchg
sbb
and
arpl
movb
xor
jp
mov
adc
jb
call
popf
jbe
adc
mov
pushl
in
and
jmp
lret
xchg
lock
push
and
dec
push
lret
aad
popf
mov
jg
xchg
insb
push
rcll
stos
cmp
adc
dec
and
xor
xor
xor
in
pop
sbb
rclb
notl
adc
cmp
and
pop
out
and
out
push
fcomip
mov
xor
loope
cmpsl
rcl
lods
loope
adc
leave
add
add
xchg
xchg
iret
in
nop
loopne
mov
mov
or
jbe
mov
and
rolb
xchg
push
pop
scas
push
sbb
mov
xor
jmp
pusha
or
std
lods
push
cmc
or
clc
fnstenv
fisttpl
jecxz
inc
arpl
adc
adc
ss
aam
rcll
cli
lcall
shlb
xchg
ljmp
adc
aad
inc
pop
pop
mov
stos
or
add
inc
jae
cli
repnz
repz
insl
or
cmpsl
ds
mov
in
dec
pusha
mov
or
shlb
push
insb
xchg
arpl
push
xor
dec
mov
stc
orb
jge
das
aas
mov
inc
es
into
jb
mov
cmpsl
add
push
and
mov
mov
fwait
adc
mov
sbb
test
xchg
jno
lret
js
cmpsb
fisubl
imul
add
sbbb
aas
pop
ljmp
lea
inc
add
fcoml
jae
faddl
add
cmp
scas
lods
ret
push
pushf
scas
add
dec
lods
sbb
add
sbb
je
loopne
pushf
ja
sub
cmpsb
push
mov
sub
cltd
adc
sbb
add
pop
push
aad
jle
xchg
das
iret
inc
inc
xchg
add
clc
cmc
mov
lds
jge
test
xchg
xchg
stc
or
addl
jne
jle
ret
jmp
andb
mov
mov
xor
jns
sbb
inc
push
push
sub
jns
pop
push
call
xchg
lock
mov
or
push
subl
ja
fnstenv
adc
lahf
mov
jae
les
icebp
fucomip
mov
mov
lcall
jl
mov
int3
lock
push
int3
and
bsf
les
adc
sub
push
jns
mov
fcmovu
cmp
lret
jle
repz
push
xchg
fwait
clc
stos
movsl
or
insl
test
add
loope
test
fldcw
and
cmp
mov
fwait
ja
cld
movsb
dec
pop
inc
or
mov
adc
and
into
mov
addl
je
jne
and
lds
fs
inc
mov
jnp,pn
cwtl
lcall
and
popf
cmp
movsb
xchg
mov
mov
jmp
dec
sub
test
ret
push
xor
fistpll
fmull
loopne
addr16
test
in
shlb
hlt
pop
xor
xor
jae
fsubrs
pop
or
jmp
dec
into
push
scas
lret
adc
sbb
adc
push
aad
mov
jae
or
fs
cmp
jns
xchg
clc
inc
xchg
gs
dec
sahf
and
fs
xchg
fs
xchg
push
xchg
decl
das
mov
jle
sbb
push
incl
hlt
push
insb
scas
lret
push
dec
push
dec
push
fiaddl
jne
stos
fs
shrb
jle
ret
fidivl
sti
mov
cli
lret
mov
add
ja
fidivs
fstps
dec
push
jns
inc
fsubrl
sahf
fstpl
push
sub
jns
mov
subl
mov
ds
dec
pop
rcll
mov
ret
sub
test
or
adc
cmp
fnstcw
pop
jno
into
jb
jmp
stos
repz
ret
imul
repz
pushf
in
and
sbbl
sahf
add
loopne
mov
imul
das
xor
adc
outsl
icebp
pop
aad
fisubs
push
jp
or
stos
or
cmp
movb
or
push
xchg
std
lds
rorl
pop
outsb
mov
push
std
sbb
mov
push
dec
mov
jle
or
scas
mov
sbb
mov
sbb
xchg
mov
fcoms
inc
cltd
test
adc
and
lds
int
ret
mov
mov
xchg
loope
push
leave
mov
sbb
loope
pop
lcall
push
xchg
scas
push
fnstenv
and
aam
sub
inc
into
fisubl
push
test
mov
out
rcll
leave
cmp
push
inc
enterw
mov
lods
scas
sahf
mov
push
or
pop
inc
lods
stc
ret
sbb
or
insl
or
mov
jle
and
jge
push
xchg
cmp
sbb
dec
xchg
dec
pop
test
pop
mov
fistps
ret
jg
or
out
scas
push
sarl
mov
add
mov
rorl
cmp
sub
pushf
adc
sahf
add
lahf
pushf
mov
or
js
mov
dec
stos
incl
in
dec
sub
mov
popf
sub
or
pop
mov
jg
add
dec
sub
andl
cmc
adc
xorb
cli
iret
or
jecxz
out
enter
cwtl
xchg
cmp
imul
jns
or
mov
leave
inc
aas
push
lea
sub
pmullw
js
jo
or
pop
jnp
and
test
lods
iret
loopne
dec
mov
daa
rcr
inc
movsl
pop
jg
andb
mov
jle
push
pop
xchg
movsb
jg
iret
ss
nop
insl
loope
mov
aad
sbbb
and
movsb
ret
pop
mov
rorl
mov
push
lcall
sbb
jmp
pop
and
mov
cmpsb
mov
enter
mov
subl
loopne
sub
ror
out
fstps
in
push
mov
adc
pushf
dec
dec
xchg
loopne
insb
add
mov
adc
out
stos
xchg
push
test
jae
pop
mov
dec
fimull
test
in
ljmp
push
push
push
or
sub
mov
adc
inc
xchg
into
xchg
es
mov
es
into
cli
mov
xor
jmp
pop
mov
jmp
popa
jp
mov
jmp
jnp
aad
adc
pushf
and
cmp
rol
into
out
or
or
jge
push
and
lock
jae
push
adc
push
or
sub
loopne
adc
shrl
out
xor
cmp
mov
in
icebp
mov
iret
jns
jecxz
or
xchg
icebp
imul
mov
icebp
cwtl
adc
into
adc
jb
cld
mov
out
repnz
xor
adcb
jg
into
lock
jo
push
imul
out
or
mov
loope
pop
push
lret
ss
iret
push
push
mov
mov
xlat
pop
adc
daa
xchg
adc
cmc
dec
pop
stos
je
data16
lock
mov
jo
cmp
ds
les
addb
lret
jo
mov
push
inc
aad
sbb
jp
nop
clc
push
xor
out
inc
lods
pop
jge
ret
les
fdivrs
jmp
pop
mov
mov
cwtl
xor
jbe
xchg
sbbb
adcl
clc
cmc
mov
push
mov
jbe
push
scas
pop
scas
repz
rsqrtps
call
mov
jo
js
jne
lods
xchg
js
xchg
pop
loop
rclb
clc
sub
cmp
cmp
push
jge
pushf
sub
and
ss
jmp
imul
and
xchg
add
adc
mov
les
lret
dec
push
jo
push
lds
gs
mov
mov
and
push
jae
test
pop
dec
sub
ror
fidivrl
icebp
xor
mov
sbb
jnp
das
lds
fidivrl
sahf
xor
mov
or
cmp
cmp
popf
pop
xor
fs
jo
js
aam
mov
popf
xor
add
cmp
stc
fnsave
xchg
inc
pop
pop
push
fs
stos
maxps
addl
addb
test
iret
sub
push
leave
gs
jle
aaa
mov
push
and
inc
push
inc
sbb
xchg
dec
push
test
sub
ljmp
push
test
iret
xchg
daa
loopne
test
pop
or
mov
pop
xor
mov
jge
mov
mov
pushl
xchg
xchg
add
mov
lret
lds
and
insb
es
popf
mov
or
jg
popf
daa
idivl
out
jg
fistl
aaa
fwait
ja
test
mov
mov
scas
mov
cmp
out
sbb
cmpsl
insl
jne
insb
ds
out
cmp
jnp
push
cmpsb
xchg
add
push
rcrb
xlat
sbb
into
sbb
sbbb
mov
fisubl
stos
mov
insl
add
jnp
and
es
jmp
pop
or
arpl
jle
in
jp
das
jle
stos
pop
push
push
flds
cmp
jmp
push
punpcklwd
mov
jb
iret
fists
pop
shlb
aaa
cmpsb
out
mov
inc
xchg
mov
cld
inc
cmp
rcr
adc
lret
cltd
push
les
setne
cmp
ret
xor
mov
push
stc
aaa
push
out
sub
cwtl
jecxz
or
xor
xchg
std
mov
sbb
scas
inc
pushf
fistpl
pop
loopne
jne
imul
xor
mov
jns
out
call
push
into
inc
fistps
ret
lds
xchg
inc
adc
adc
int
mov
dec
adc
ret
mov
leave
dec
xor
xlat
jg
nop
jge
push
mov
jmp
mov
js
aas
push
inc
jae
inc
inc
mov
mov
sbb
xchg
jno
lods
inc
pop
inc
xchg
aaa
cmc
push
into
push
cld
dec
and
mov
andb
pop
or
nop
and
cmp
mov
jge
cmpsl
dec
ficoml
dec
push
pop
fs
jo
inc
or
mov
xor
subb
pop
scas
pop
daa
mov
add
outsb
adc
hlt
iret
mov
xor
mov
jbe
addb
ret
pop
outsb
dec
push
stos
push
add
push
rcl
ret
mov
stos
mov
cwtl
push
imul
je
jns,pt
jo
xchg
or
jne
cltd
scas
push
imul
loopne
or
and
mov
push
mov
push
std
or
test
mov
mov
jmp
fstpt
mov
in
iret
cltd
cli
mov
inc
mov
xor
cmp
push
shlb
xchg
mov
int
lret
push
outsl
mov
xchg
popa
add
jae
cs
test
stos
sub
pinsrw
mov
in
xchg
popf
xor
psubsw
lea
addb
xchg
fwait
stos
shrl
jns
inc
or
daa
dec
push
inc
pusha
push
push
add
inc
pop
and
daa
test
add
out
test
dec
inc
rcr
ja
mov
mov
out
push
add
inc
out
outsl
mov
or
fs
rol
mov
mov
call
insb
mov
clc
mov
cmp
sbb
push
cmp
inc
inc
xchg
scas
jmp
repz
dec
or
out
inc
aam
push
ror
jb
call
nop
sahf
or
jnp
in
mov
popf
sbb
mov
pushf
shrb
jno
sbb
iret
faddl
mov
sbb
jno
inc
pop
lods
movsl
push
cmp
adc
add
jb
sub
mov
sub
push
xor
cld
push
xchg
and
icebp
ret
jne
inc
jecxz
sbb
mov
pushw
mov
daa
sarl
mov
sbb
adc
insb
scas
fisttpll
cmp
jbe
mov
xchg
dec
mov
push
or
add
push
jmp
ss
inc
stos
hlt
sub
adc
push
insl
adc
sub
andb
mov
addr16
notb
es
sti
pop
cmp
cmpsl
push
clc
dec
sarl
das
cmpsb
cwtl
insl
leave
mov
aad
cli
repnz
sbb
push
mov
ja
insb
leave
jo
aaa
xchg
push
mov
test
hlt
mov
leave
aad
out
xchg
adc
in
jbe
cmp
mov
sbb
lret
inc
or
mov
sbb
rep
stos
pop
imul
push
xlat
inc
in
xchg
jle
push
pop
inc
jno
mov
jns
jg
pop
arpl
fisubrs
sbb
lea
mov
push
cld
jl
xchg
jnp
xchg
mov
sbb
faddl
or
inc
lods
sub
sub
xchg
jnp
aaa
xor
popa
mov
push
or
repnz
pop
xchg
mov
inc
pop
test
stos
mov
ljmp
mov
pop
lahf
adc
rsm
push
aaa
nop
xchg
dec
js
cwtl
mov
rcll
dec
fwait
adc
dec
fistps
and
sub
xchg
iret
mov
xchg
aam
push
ret
xchg
stos
push
add
repz
sub
or
inc
add
ds
cmp
stos
mov
mov
cmp
cltd
aaa
test
loope
inc
xchg
daa
in
pop
cwtl
jno
daa
scas
mov
mov
jnp
out
stos
ret
sbb
in
enter
mov
jbe
dec
jg
aas
cmp
dec
and
lret
dec
push
je
scas
push
add
arpl
inc
pushf
xor
push
fisubs
mov
imul
into
sbb
add
test
call
lret
or
jae
neg
dec
fldcw
inc
add
pop
add
dec
inc
scas
outsb
in
mov
wbinvd
and
stos
out
jp
xlat
jns
lahf
mov
int3
test
insb
mov
mov
out
mov
and
pop
fisttpl
and
xchg
lea
push
sbb
mov
pop
jo
mov
pop
mov
sahf
out
mov
outsb
pcmpgtd
insb
mov
push
pop
inc
pop
push
std
out
add
adc
test
mov
rolb
mov
jo
aas
cs
mov
cmp
cli
imul
je
orb
ret
jnp
sub
adc
mov
xchg
icebp
add
rol
push
in
inc
sub
sbb
sti
icebp
fdivl
inc
fists
gs
lock
imul
xor
mov
sbb
pop
outsl
in
je
xchg
cwtl
fcoms
out
jae
jb
mov
mov
sub
fcomi
js
sti
cmc
out
sub
and
mov
vpcmpeqd
aad
push
dec
jo
dec
roll
mov
out
fstps
dec
out
lock
add
rorl
shlb
adc
scas
mov
jg
cwtl
mov
sbb
dec
cld
les
inc
fwait
jecxz
int3
lods
lahf
rcr
fildll
fmul
mov
in
stc
fmull
je
cmpsl
fadd
faddl
sbb
add
mov
mov
xor
mov
mov
sub
rolb
sti
or
mov
pop
cmp
sub
dec
xchg
pop
icebp
cmp
jl
das
pop
dec
pop
leave
das
sbb
push
and
jo
loop
fnsave
cmp
std
mov
cmpsl
orb
scas
adc
add
jmp
dec
in
das
mov
cmp
aaa
adc
or
sahf
adc
inc
arpl
or
lret
add
fnsave
dec
cmp
inc
inc
stos
push
dec
xor
push
andl
insl
jnp
push
mov
js
gs
xchg
daa
dec
and
pop
pusha
sub
add
add
enter
movsl
push
rcll
mov
popf
rcll
cmp
push
pusha
and
fldl
adc
pop
in
inc
adc
aas
pop
pushf
jne
sti
subl
mov
add
int
add
dec
inc
push
xchg
mov
out
sub
popf
movb
jg
jge
bound
sti
in
sub
loop
out
push
pop
imul
cmp
orb
in
and
add
mov
xchg
insl
jecxz
cmc
cmp
adc
jne
cmpsb
cmpsl
jbe
sbb
dec
rolb
pop
or
xor
jge
add
pop
jne
popa
xor
mov
push
ret
clc
or
mov
mov
xchg
incl
xchg
or
xchg
mov
stc
fsubl
inc
hlt
pop
xor
sbb
js
jp
outsl
fdiv
aam
orl
xchg
addr16
scas
mov
mov
sbb
jo
sub
lret
aas
cs
mov
jnp
adc
fcoms
lea
inc
sub
jle
lock
xor
nop
or
push
push
mov
add
pop
psrad
jae
mov
mov
stos
mov
push
pop
div
pop
xchg
lahf
gs
aad
pop
push
xchg
das
ljmp
push
and
push
ljmp
adc
mov
and
and
xchg
ja
pop
into
xor
adc
shrb
pop
aam
push
xlat
xlat
xchg
in
xchg
das
aad
pop
sub
mov
call
push
and
and
adc
push
loope
in
lock
pop
pop
sub
pushf
dec
pop
imul
data16
cltd
test
movsl
fdivrl
add
inc
cmp
add
insb
jmp
cmpsl
inc
addr16
add
cltd
sub
mov
push
or
fbstp
xchg
fs
dec
lcall
ret
int
leave
pop
push
mov
xchg
pusha
mov
jg
mov
stos
and
jecxz
fidivs
cmpsb
js
pop
cmp
mov
outsl
cmp
ret
rcl
sbb
in
outsb
push
pop
cmpsl
aas
lds
xor
aam
sub
sub
icebp
movsb
add
sbb
stos
fs
popa
add
rolb
pusha
jp
mov
xchg
rorb
ret
mov
or
adc
nop
cli
in
pop
xor
ja
pop
clc
fcomps
inc
xor
aad
jne
xchg
out
mov
ljmp
jae
xchg
or
or
and
jle
sbb
sbb
cwtl
movsl
cmp
xchg
xor
xchg
mov
jnp
xor
test
xchg
stos
leave
ficomps
iret
pop
xor
mov
out
mov
lods
mov
sub
push
pop
jne
insb
mov
imul
in
push
lret
xchg
popf
or
add
inc
out
add
aad
and
dec
movsb
mov
or
inc
leave
pop
xchg
sahf
scas
inc
scas
cltd
iret
outsb
lds
ret
popa
sbb
sbb
adcb
pop
inc
fnstcw
mov
aas
cmp
pop
add
sub
cmpsl
ljmp
fmull
sbb
mov
inc
jmp
and
push
mov
push
out
xor
cmp
out
inc
sub
and
aad
shl
sub
movsl
dec
inc
inc
sti
out
lret
movsb
cmpsb
cmpl
aam
pop
inc
sbb
loopne
or
scas
sbb
lods
inc
pop
in
stos
enter
ficoms
sub
xor
xchg
iret
dec
inc
cwtl
pop
nop
jmp
xchg
aad
inc
stos
cmp
dec
adc
loopne
sbb
stc
dec
rorb
inc
cmp
cmp
or
repz
fistpl
dec
adc
aam
inc
jb
push
cmc
shll
into
xor
mov
test
aad
pop
pushf
cmp
and
movsb
or
and
mov
sbb
lods
loop
xlat
enter
iret
xor
pushf
scas
loope
cmpl
xchg
movsb
cmp
mov
mov
lock
push
mov
push
dec
mov
roll
loope
mov
ja
mov
jb
xchg
xor
lock
xchg
adcb
fs
pop
jns
loopne
mov
pop
jle
push
sbb
nop
cmpsl
addr16
fdivl
cmp
in
sbb
lret
cmp
cmc
sub
mov
lahf
inc
mov
xor
jge
lock
mov
repnz
push
mov
sub
and
mov
pop
jmp
cmp
push
stos
sbb
mov
popa
mov
mov
xchg
imull
jae
out
sub
cltd
lea
test
repnz
pop
sub
or
jl
jnp
sbb
mov
mov
adcl
call
pop
mov
orl
clc
adc
push
mov
outsl
dec
cli
subl
xor
mov
or
jmp
sbb
sbb
outsl
stos
test
lcall
hlt
and
test
fdivs
adc
adc
jge
fcomp
movsb
mov
xchg
outsb
into
roll
mulb
sbb
fcoml
pop
sub
jmp
sub
cmpb
scas
mov
test
sbb
jns
cmp
sub
inc
dec
scas
push
sub
rcr
push
adc
jle
das
andb
jnp
pop
mov
pop
inc
mov
bound
leave
xor
dec
or
loopne
fdivr
popa
jbe
icebp
pop
add
pop
mov
pop
les
add
mov
and
xchg
out
or
adc
idivl
in
or
push
lock
sub
scas
xchg
jg
xchg
insb
fistl
xchg
subl
mov
bound
jae
mov
loop
jno
inc
jae
xor
mov
out
ret
mov
je
movsl
sbb
fisttpll
add
sbb
mov
stc
ret
lret
lret
stc
push
aaa
je
cld
mov
outsb
mov
adc
jae
mov
lret
shll
adc
int
xchg
jne
aaa
imul
aas
lea
xchg
fisubl
adc
bound
or
add
push
xchg
xor
mov
popfw
adc
js
scas
into
push
fsubr
icebp
xorl
lods
cltd
scas
dec
xchg
jecxz
orb
push
lock
sub
inc
add
pop
fdivs
int3
xchg
in
int3
in
pusha
push
arpl
test
out
mov
mov
aaa
jb
mov
data16
xchg
in
xchg
xchg
cld
mov
sahf
and
mov
push
icebp
xchg
dec
scas
mov
and
adc
push
push
mov
scas
jp
cmp
sarl
push
push
ljmp
jbe
mov
movsl
jne
cmp
je
int
das
push
dec
xchg
pop
lcall
les
adc
and
mov
cmpsb
nop
push
and
adc
inc
fistpll
test
mov
out
or
lahf
gs
incb
mov
scas
repnz
mov
mov
jp
mov
outsl
pop
test
shlb
jnp
mov
xchg
imul
add
int3
enter
mov
xor
mov
aam
pop
and
adc
enter
mov
fucomi
xchg
call
sbb
sub
popf
add
jno
dec
jns
dec
outsb
stc
xchg
jp
jne
add
inc
shrl
rcr
outsb
fcomps
or
cmc
movsl
jge
inc
xchg
cmc
in
pop
cltd
xor
pop
mov
or
std
out
mov
pop
add
mov
imul
push
hlt
or
or
cltd
add
fldt
push
addl
cmpsb
pop
mov
adc
mov
mov
push
xchg
inc
jb
mov
insb
fbld
call
inc
dec
or
jge
push
xor
sub
xor
repnz
inc
test
xchg
scas
test
xor
sahf
test
repnz
mov
mov
loop
jg
mov
mov
les
inc
aam
mov
test
jbe
xchg
cmp
pop
dec
add
negb
sub
add
test
lahf
popf
inc
xchg
jmp
aas
push
dec
pusha
repz
imul
mov
mov
xchg
lret
cld
inc
inc
mov
pushf
cmpsb
push
mov
shll
ja
inc
loopne
mov
stos
mov
mov
mov
dec
pop
mov
xchg
stos
dec
add
cs
into
or
mov
sub
daa
xchg
dec
mov
ja
xchg
incb
nop
stc
testl
xor
mov
mov
pop
sub
jb
nop
mov
fadd
stos
sbb
add
mov
jbe
lcall
gs
xchg
mov
ljmp
xchg
xor
mov
jp
mov
ror
dec
pushf
pop
cltd
adc
push
cld
mov
enter
fistps
mov
aam
or
add
clc
sbb
jg
daa
out
pusha
add
or
mov
nop
aaa
or
and
pop
out
pop
mov
mov
nop
in
stos
mov
push
jge
out
arpl
pop
xchg
mov
test
enter
leave
inc
out
das
bound
aad
aad
repnz
add
pushf
xor
cmp
push
push
mov
bound
or
mov
lds
mov
mov
jnp
cmp
test
dec
popa
shll
rorb
mov
scas
or
andb
ss
sub
push
arpl
in
xchg
rcrb
jnp
mov
lods
bound
mov
mov
xchg
adc
inc
push
subl
pop
scas
or
imul
fldl
lods
xlat
xchg
sahf
mov
add
pop
add
pop
jmp
jb
cwtl
stc
popf
adc
pop
out
insl
sbb
add
ret
ret
into
popf
fisttpll
and
iret
divl
sub
dec
sbb
ret
gs
mov
call
mov
enter
and
mov
sbb
jmp
and
clc
mov
mov
pop
cs
xchg
movsb
and
sub
daa
or
mul
subl
inc
push
test
inc
jle
lea
dec
imul
out
punpckhbw
sbb
mov
loopne
adc
xchg
inc
int
out
subl
out
imull
pop
mov
jnp
mov
pushf
fnstenv
pop
jge
and
mov
andb
testl
movsl
pop
or
movsb
int3
stos
push
add
hlt
push
jnp
mov
daa
sbb
fldl
sbb
cltd
das
js
jecxz
pop
icebp
es
add
mov
loopne
lock
or
mov
xchg
enter
and
out
push
pop
push
mov
lds
sbb
pusha
ret
sahf
cwtl
add
es
loope
push
fcom
ret
movsb
jecxz
lret
jbe
jne
xchg
dec
adc
add
dec
subl
jo
insb
les
mov
push
xchg
insl
mov
lahf
jno
mov
xchg
jnp
adc
xchg
hlt
test
outsl
xor
mov
aaa
ret
push
daa
xchg
rcr
jg
add
imul
andl
mov
and
jno
in
ljmp
jle
pop
lds
jno
mov
scas
mov
dec
add
ret
mov
mov
adc
cmp
push
sub
or
lcall
ljmp
cwtl
jmp
adc
sbb
dec
push
adc
mov
and
or
adc
mov
xor
jp
rol
out
xchg
xchg
xchg
sub
mov
pushf
pop
cmp
lds
lds
xchg
shr
or
push
js
lds
cmpsb
dec
pop
cmpsl
push
fdivs
fstpt
cmp
inc
scas
or
inc
cmpsb
mov
arpl
rclb
mov
fistpl
ffreep
sub
mov
xchg
das
mov
add
outsl
icebp
stos
sbb
cli
jns
xor
and
fcmovb
pop
and
vmovq
pop
sbb
cli
cmp
mov
cltd
add
push
lock
lods
das
dec
rol
std
and
cltd
ret
cmc
mov
mov
in
dec
call
dec
nop
pop
daa
push
mov
in
ja
outsb
jl
stos
movsb
adc
lds
jecxz
push
cwtl
ret
je
test
loopne
jmp
push
inc
xor
fwait
icebp
aam
aam
pop
dec
leave
mov
push
sbb
dec
fsubl
mov
stos
aaa
fsubrl
pop
push
cld
daa
popf
jge
adc
mov
inc
push
mov
out
ficoml
push
shrb
mov
jg
lock
xlat
das
or
aaa
push
popa
mov
ret
cwtl
lea
push
test
pop
sbb
bound
push
arpl
jb
aaa
stos
stos
push
push
les
adc
mov
push
int3
inc
jp
in
add
add
mov
pop
nop
mov
iret
push
mov
or
ret
mov
jecxz
xchg
stos
je
inc
cltd
mov
fiadds
pop
add
ss
mov
aas
jmp
push
mov
sti
jnp
add
sbbb
testb
jae
setge
loope
mov
mov
rol
cmpl
dec
sub
in
add
fmuls
ficomps
int3
jg
fldl
pop
sbb
and
inc
fcompl
and
mov
sahf
mov
xchg
sbb
sub
pop
xor
mov
fdivrs
mov
pop
dec
popa
adc
adc
int
xor
xchg
sub
pop
adc
push
repz
sub
mov
insl
cltd
jmp
notl
add
rcll
loopne
cmp
dec
sahf
push
xchg
popf
mov
lods
or
adc
or
mov
rcrl
add
adc
mov
lret
xchg
or
jge
fisubs
sahf
cmp
sbb
aas
adc
pop
fstpt
inc
flds
mov
ret
lcall
aam
pushf
push
lds
outsb
fldt
mov
jecxz
jge
ret
and
mov
fcmovnbe
mov
dec
iret
loopne
lea
pusha
mov
pushf
jmp
sub
movsl
flds
add
pop
lahf
jne
dec
add
lret
shrl
or
and
jo
mov
daa
popf
pop
xor
and
aam
jo
sahf
das
frstor
nop
push
ret
cs
xchg
and
mov
mov
rol
xchg
aad
sbb
test
cmp
sar
jmp
add
lods
mov
sub
mov
cltd
out
mov
iret
mov
dec
in
fsubp
mov
addr16
sarl
rorl
das
push
pop
xor
push
scas
das
pop
push
jmp
mov
sub
pop
movsl
lahf
stos
sarl
out
decl
xor
xchg
lods
jmp
jl
scas
aad
dec
push
data16
in
gs
and
xor
daa
fcomps
shlb
inc
add
call
mov
scas
jns
arpl
pop
jns
andb
jl
lea
nop
ja
pop
pop
jns
fcmovne
fsubs
fisttps
addr16
adc
nop
lcall
xchg
mov
pop
cwtl
jns
cmc
fcompl
iret
or
rcrb
xchg
popf
hlt
mov
dec
cmpsl
dec
add
push
arpl
jg
lods
jp
pop
gs
sub
adc
aas
icebp
dec
sub
or
xor
popa
insb
mov
push
jmp
add
jbe
and
aas
sbb
cwtl
popa
jl
addr16
mull
or
addr16
test
xor
add
mov
xchg
ss
mov
cmovb
lahf
call
xchg
shl
xor
or
pop
mov
outsb
jge
imul
in
or
inc
add
mov
ret
mov
fmuls
fimuls
cmp
xchg
inc
xor
sbb
lret
bnd
aaa
mov
mov
inc
dec
add
nop
mov
jbe
call
js
mov
pop
xchg
inc
mov
cli
mov
dec
pushl
int3
pop
dec
movsb
cmp
nop
orb
fwait
aaa
stos
les
lea
inc
daa
movsb
inc
pop
imul
mov
mov
mov
popa
in
fiaddl
dec
int3
jl
jecxz
push
mov
subb
ja
fadd
sub
and
pop
insb
xor
push
push
leave
popf
mov
push
fnstsw
xor
adc
bound
push
inc
test
scas
and
add
or
push
fimull
outsl
xor
popf
les
cltd
cwtl
push
push
pushf
repz
dec
push
out
stos
sub
faddl
loop
cmpl
fwait
mov
aam
pop
loope
jl
adc
jno
jae
adc
sti
xor
loop
pop
adc
jo
out
jo
xlat
push
popf
stos
jg
pop
jge
scas
insl
jae
xchg
scas
mov
arpl
push
pop
push
out
pushf
in
jg
xlat
inc
mov
sub
mov
jge
mov
adc
pop
jnp
push
pop
xchg
jg
xlat
repz
fldl
and
imul
lock
inc
push
ja
call
xchg
inc
rcl
sbb
sbb
addr16
ret
ss
or
xlat
ficoml
orl
mov
aam
dec
lcall
push
dec
int
mov
add
pop
dec
fdivs
mov
sub
mov
inc
es
scas
dec
sub
in
add
mov
sub
inc
cmp
fiaddl
xor
lahf
pop
mov
dec
movsl
inc
fmull
pop
pop
movsb
repz
push
cmc
jg
jle
pop
call
pop
or
addl
in
rclb
imul
adc
insb
jge
enter
lret
pop
pop
pop
sti
push
jl
jnp
xchg
pushf
cmp
fbstp
and
ret
xchg
adc
jnp
sub
js
or
mov
jno
xchg
add
loope
les
xchg
cs
mov
jnp
and
inc
aad
and
jo
dec
into
cmp
pop
call
or
jge
test
movsb
mov
aam
push
jnp
jmp
sub
insb
jb
jns
test
movsb
sbbb
mov
xor
or
push
add
cmp
push
stc
fwait
mov
nop
loopne
push
adc
roll
scas
lods
lods
dec
xchg
xchg
out
cmp
call
cwtl
add
pop
scas
call
mov
inc
movsl
loopne
sub
mov
mov
pusha
ja
mov
lahf
pop
lahf
iret
fimuls
cs
push
outsl
stc
scas
repz
in
outsb
push
and
xchg
inc
sahf
lahf
jg
sahf
addl
inc
push
mov
loop
adc
out
mov
xor
jecxz
adc
push
jne
cltd
leave
sub
push
cmpsb
fs
xor
xchg
fcmovnbe
jbe
repz
scas
mov
hlt
fcomi
scas
fisubl
aas
mov
inc
pushf
mov
xchg
pop
cmpsl
stos
and
push
dec
test
fcoms
out
xchg
fsts
pop
push
xor
fimull
mov
xchg
sbb
fbld
sub
test
xor
and
mov
sbb
add
das
ret
popa
xchg
addr16
aas
mov
and
cmp
les
js
xor
or
pop
cwtl
ffreep
or
sbb
aaa
js
mov
shl
test
push
sub
pop
inc
test
pop
adc
testb
pop
shrl
add
cwtl
repnz
js
mov
popa
in
sbb
fisttpl
sub
adc
adc
sub
fcos
mov
push
pop
fstl
mov
mov
fs
fwait
jae
addb
cltd
into
inc
dec
adc
mov
leave
push
outsl
sbb
mov
push
and
xchg
cli
dec
sbb
test
xchg
mov
shr
xor
xor
pop
mov
xlat
dec
mov
xchg
cmp
mov
xchg
sarb
repnz
xchg
stc
dec
cmpsl
inc
cmp
mov
adc
sbb
inc
insb
and
arpl
test
xor
pop
popa
dec
fwait
loopne
ds
ror
and
lret
cltd
mov
jg
out
inc
mov
sbb
in
mov
mov
jg
std
jb
jno
mov
jecxz
mov
movsl
fcmove
stos
xchg
cmp
mov
test
sub
pop
insl
daa
jmp
dec
mov
fldcw
ret
sub
jg
pop
push
mov
jge
fistpll
jns
or
push
jge
jle
paddusw
fwait
das
imul
aam
inc
xor
fldcw
dec
ret
aas
cwtl
filds
fcomps
in
pop
jg
push
into
mov
nop
loopne
sbb
dec
add
mov
mov
inc
addr16
cli
push
mov
daa
in
push
leave
mov
pop
std
add
jmp
jg
test
les
add
pop
aaa
test
movl
das
sub
loopne
jno
pop
imul
xor
ffree
mov
mov
adcb
aam
stos
int3
std
pop
mov
mov
pop
sarl
and
pop
inc
scas
adc
add
pop
dec
orl
sub
mov
sbb
or
je
or
and
xchg
imul
cmp
mov
mov
mov
mov
movsl
jns
in
fistl
sti
pcmpeqw
jns
les
popf
cmpsb
addr16
and
adc
into
mov
setle
mov
pop
inc
fwait
add
pop
xlat
mov
rcr
aaa
test
pushf
sbbb
pop
cmp
lods
cld
inc
sbb
add
pop
mov
jo
mov
jle
les
jl
mov
fwait
ret
xlat
and
sub
or
and
mov
xchg
push
push
call
xor
rcrl
mov
mov
dec
push
dec
cli
filds
mov
pop
rorb
lret
push
cmp
inc
inc
icebp
lock
fldenv
mov
xchg
mov
aas
arpl
pop
test
std
xchg
int
mov
jle
push
jne
fs
jae
mov
daa
cmc
cmp
push
aaa
or
xor
in
mov
xor
test
xchg
fldenv
ljmp
cmp
mov
fidivl
and
xchg
lea
lahf
cltd
xchg
and
leave
movsb
lahf
xchg
jbe
push
inc
add
mov
faddl
fstpt
xor
cmp
mov
pop
popf
rcr
pop
repz
lret
mov
sub
pop
ret
jmp
fnstsw
lods
das
stc
int
std
repz
mov
inc
or
arpl
cmpsb
inc
pop
jecxz
in
imulb
push
mov
ljmp
daa
aad
out
sub
push
mov
mov
out
adc
sub
dec
xor
adc
nop
mov
lods
mov
push
sbb
int3
or
dec
mov
and
jecxz
or
es
jp
or
cmpb
int3
xor
add
mov
xor
fcoml
outsb
and
jae
cmp
push
mov
dec
xor
mov
and
pop
and
mov
or
jo
pop
repz
cmp
fcmovne
xchg
or
les
pop
adc
push
jbe
xchg
std
dec
in
pop
fldt
xor
push
add
popa
jl
xor
loope
add
adc
pop
jo
xchg
xchg
lock
stos
dec
jne
mov
cmp
stos
add
into
pop
push
sti
cltd
xchg
ja
pop
aad
bound
add
test
push
adc
mov
mov
insl
or
icebp
loopne
inc
in
subl
lea
mov
push
faddl
movsb
xchg
jmp
sbb
adc
xchg
nop
xchg
sbb
scas
cmp
push
cwtl
das
sbb
pop
daa
call
mov
es
adc
repnz
arpl
push
dec
int
cmpsl
sbb
cmp
xchg
shlb
ljmp
in
cwtl
pop
call
cltd
int
dec
xchg
idiv
push
push
push
inc
cmp
les
ja
mov
and
orl
shrl
fadds
adc
addr16
mov
cmp
sti
inc
das
xlat
inc
adcb
lods
ljmp
fsub
lea
cmp
pop
sub
or
jg
rcrl
jns
outsb
das
inc
daa
sbb
cmpsb
xchg
fiadds
jp
pop
and
mov
scas
xchg
jne
lret
mov
sar
call
or
or
out
cmpsb
jb
loopne
aad
mov
or
push
ud2
insb
scas
or
ret
out
fs
lret
adc
in
push
decb
shlb
xchg
addr16
add
rcrb
and
popa
mov
adc
je
jbe
jle
outsl
stos
stos
add
mov
adc
ds
and
add
xchg
sub
les
and
test
xchg
xor
fcomps
out
fimull
dec
adc
sarl
cwtl
in
fistps
sub
add
pop
xchg
insl
jecxz
cltd
test
hlt
inc
popf
sbb
cltd
xor
and
out
js
aas
lods
mov
dec
int
cltd
mov
call
jge
lret
jg
mov
fcmovbe
push
adc
adc
or
adc
cmp
loop
jns
mov
mov
jns
sub
out
or
orb
insl
or
inc
pop
mov
es
dec
andl
leave
and
aas
jnp
fdivrs
sbb
mov
push
pop
ja
cmp
inc
jp
aas
shlb
xor
mov
into
fmuls
popa
xlat
mov
inc
mov
dec
test
jle
rcrl
fldcw
out
xor
lahf
inc
popf
xchg
and
push
sbb
add
sbb
push
dec
fwait
rcrl
cwtl
xor
decb
pop
aas
fwait
out
iret
jge
fdivrl
cmp
scas
test
loope
stc
fisubs
adc
xchg
in
push
xlat
sub
jns
dec
shlb
stc
roll
imul
mov
roll
fsubs
push
sar
rcrl
sti
dec
repnz
jb
lret
pop
xor
push
cmp
insl
and
outsb
outsb
aaa
rcll
pushf
loopne
push
mov
arpl
xchg
sub
xchg
aad
push
cmp
inc
fwait
stos
mov
pop
call
insb
into
negl
lret
jns
jbe
cmpl
or
pop
xchg
mov
outsl
inc
add
adc
or
lcall
push
sub
or
jle
ret
add
mov
push
mov
leave
pop
pop
sti
mov
pop
pop
imul
rcll
int
inc
mov
dec
push
popf
icebp
hlt
xor
push
test
pop
xor
lods
jnp
adc
xchg
pop
pop
push
fsubrl
adcl
clc
and
xchg
push
xchg
outsb
dec
imul
mov
push
mov
and
mov
or
insl
add
outsl
stos
xchg
jmp
or
cs
repnz
into
insb
lret
adc
in
sub
sbbl
add
inc
mov
fisttpll
mov
insl
je
cli
adc
pop
or
pop
mov
insl
pop
loopne
pop
inc
frstor
dec
jle
jns
int
and
xchg
imul
mov
and
mov
shr
dec
cwtl
xor
mov
or
aad
and
jle
data16
jg
ljmp
pop
jns
xchg
xchg
mov
add
je
mov
mov
mov
push
repz
push
popl
add
mov
dec
das
jp
jge
in
jno
insb
xor
mov
jmp
mov
fldenv
lods
push
leave
mov
xchg
scas
adc
cs
mov
sub
fisubrs
push
xchg
push
lock
lret
mov
out
or
sub
iret
out
rcl
inc
pusha
lahf
pop
cmp
mov
push
in
scas
insl
mov
imul
mov
pop
jne
call
sbb
add
add
cmpsl
add
das
xor
sub
ja
fsubrl
push
adc
inc
cmpsb
jmp
insb
sub
or
arpl
xchg
outsb
scas
mov
mov
pop
adc
or
jns
jle
stos
or
movd
mov
cmp
and
sbbb
and
jp
sbb
iret
cwtl
lret
mov
mov
dec
mov
adc
push
test
sbbl
in
sbbb
push
jp
mov
mov
enter
in
inc
push
cltd
inc
push
jns
lds
test
pop
dec
push
dec
das
mov
test
cmp
mov
dec
cmp
pop
inc
in
sub
outsb
cmp
data16
or
cmp
or
cmp
or
imul
pusha
dec
out
add
lret
sbb
insl
gs
add
test
adc
add
adc
loope
insb
push
or
or
pop
ret
cli
xor
jno
cmp
out
mov
pop
ljmp
imul
sbb
jne
mov
xchg
sbb
test
out
lds
mov
mov
cmp
test
mov
mov
out
repnz
daa
jo
jns
pop
mov
jne
sub
sbb
test
adc
and
cmp
mov
mov
xchg
push
shr
mov
das
imul
cmp
xchg
xor
jno
ret
jmp
imul
mov
jecxz
cmp
fiaddl
sbb
dec
je
out
outsb
mov
inc
aad
leave
lahf
mov
addr16
sahf
js
push
push
sbb
mov
xor
scas
ljmp
xor
subl
iret
push
mov
mov
imul
dec
push
inc
cmp
fisubs
popf
movsl
sti
pop
and
sub
add
adc
enter
lahf
mov
call
jle
std
shl
xlat
mov
jno
out
nop
ljmp
cwtl
sub
sub
inc
add
aam
jge
mov
roll
jle
nop
cwtl
adc
jge
scas
xchg
pop
fs
xchg
add
sahf
push
and
cli
mov
dec
je
sti
and
jno
cmp
mov
cmc
adc
or
rol
cmp
inc
leave
mov
fstpl
xchg
or
cmp
outsl
add
mov
scas
mov
add
sub
cmp
iret
sahf
jp
inc
jp
cmpsb
stos
push
imul
jb
dec
inc
hlt
cmp
xor
pop
xchg
dec
movsb
mov
fdivrs
cwtl
repnz
jno
into
xchg
out
lcall
out
push
cmp
fst
adc
mov
xor
jle
jl
nop
mov
add
insb
sahf
push
mov
mov
ret
pop
in
inc
ret
in
test
repz
sahf
sbb
inc
lea
pop
ret
dec
ss
mov
sub
sbb
push
adc
popf
lret
dec
mov
inc
jo
leave
mov
sbb
push
fstp
ret
cmc
inc
jg
icebp
cmc
mov
or
sarb
hlt
mov
mov
cwtl
pop
or
ret
xor
mov
lret
hlt
cmp
in
stos
sub
dec
jp
pop
inc
inc
mov
stc
sub
les
or
mov
pop
cmp
inc
repnz
cltd
lahf
pop
mov
into
and
sub
rcrb
outsl
outsb
call
or
adc
in
shlb
lret
movsb
addr16
xchg
cmp
inc
sahf
repz
push
jecxz
pop
js
imul
popf
cltd
jnp
fildl
sbb
out
fimuls
or
imul
lcall
dec
lds
mov
mov
xor
jne
pop
int
fcmovnbe
xchg
pop
outsb
rcll
stos
cmp
ret
mov
nop
andl
sahf
pop
push
and
lret
or
sarb
jne
pop
sub
mov
out
xor
mov
adcl
xchg
jmp
adc
enter
dec
jmp
pop
xchg
dec
mov
aas
xchg
mov
jo
pop
mov
mov
mov
movsl
xorl
jp
ficompl
lcall
mov
lret
pop
dec
xchg
pop
xor
mov
mov
jne
xchg
xchg
xchg
jno
mov
pop
and
and
scas
pop
push
lret
pop
adc
stos
jnp
stc
and
or
jnp
pop
rorl
rol
sarl
into
sahf
xchg
pop
ss
lock
out
adc
jnp
push
lret
add
push
inc
fadds
xor
stos
ja
adc
xor
repnz
xchg
mov
popa
arpl
mov
lcall
xchg
adc
aaa
fidivl
mov
pop
outsb
addps
dec
or
rcrb
adc
mov
lods
xchg
push
lock
jns
push
sar
shlb
cmpb
lahf
int3
addr16
jns
dec
add
wbinvd
fs
jg
aaa
jns
jg
mov
cmp
inc
insb
test
aam
daa
pop
stc
out
mov
fwait
cmp
cltd
adc
sti
fidivrl
cmp
inc
add
push
xchg
or
ret
mov
and
inc
roll
insb
mov
cmp
es
sbb
xchg
jne
mov
arpl
or
repz
adcb
lods
inc
inc
fbld
fisttpll
js
arpl
xchg
pop
push
push
inc
loopne
push
into
jp
dec
mov
lods
stc
jbe
shrl
and
fstps
outsb
jp
pop
mov
pop
mov
pop
loope
pusha
dec
faddl
jae
fnstcw
dec
pop
xchg
ja
adc
or
nop
imul
mov
mov
fiaddl
and
adc
popf
jo
jg
add
or
xchg
and
cmp
dec
pop
xlat
mov
and
les
popl
mov
push
sub
or
lods
cs
xor
mov
fwait
push
cmp
popa
push
adcb
andb
mov
sbb
es
andl
push
mov
test
lea
bsf
ja
mov
push
and
fmul
and
fldenv
insb
jp
sbb
js
pop
cmp
sbb
adc
ret
inc
lds
adc
leave
adc
mov
inc
sahf
rcrl
xor
mov
les
clc
jge
data16
sbbl
or
loop
sbb
sbb
ret
add
pop
push
mov
sub
mov
jmp
lcall
push
mov
enter
pop
loopne
or
clc
out
out
js
inc
imul
fistpll
jb
enter
dec
mov
lret
jle
xchg
mov
loopne,pn
add
dec
inc
or
xchg
sbb
push
pushf
jecxz
scas
push
cltd
mov
sbb
insl
sahf
jmp
test
inc
fwait
adcb
inc
xor
lods
les
jg
adc
sbb
mov
daa
mov
stos
pushf
sbb
mov
cmpsl
lcall
ds
cmp
test
jae
ffreep
pop
lcall
mov
jns
hlt
in
mov
pandn
xchg
mov
or
aad
clc
ret
jecxz
mov
adc
sbbb
in
and
push
iret
dec
pusha
cmpl
mov
pushf
cmp
inc
add
lods
popf
stc
shrb
mov
mov
add
xchg
call
std
fstpl
adcb
insl
mov
in
jno
sbb
sahf
lcall
xchg
mov
popf
mov
loop
outsb
xchg
cmp
cwtl
push
or
cltd
inc
inc
fsubl
push
sbb
aad
xor
pop
mov
sbb
adc
xchg
rcll
add
xchg
or
xor
jmp
jge
les
fildl
xchg
push
cwtl
in
or
sub
movsl
cmp
mov
movb
ja
aaa
and
repz
pop
arpl
mov
adcb
mov
iret
dec
push
je
rclb
jns
sub
inc
leave
sub
stos
inc
outsl
mov
push
loop
or
aaa
cmp
int3
fimull
pop
stos
rcrl
inc
mov
cmpsl
lods
push
cmp
lret
cmp
adc
mov
shl
into
or
dec
testl
xor
enter
sub
add
mov
mov
add
hlt
int3
cmc
bound
andl
loop
imul
and
fmuls
sub
inc
mov
mov
inc
cmp
fistpll
mov
int
cmc
inc
inc
jl
jns
bound
dec
pop
int3
mov
stc
mov
ret
push
pop
pop
outsb
or
mov
dec
mov
incb
mov
or
ret
insb
jb
fucomip
cld
mov
pop
and
dec
ret
dec
movsb
adc
fmull
lods
mov
push
es
int
aad
xchg
add
and
scas
pop
shll
push
and
or
and
sbb
cltd
mov
cmp
push
subb
pop
lea
frstor
psubb
xor
add
into
or
fsubs
xor
lahf
cwtl
mov
push
jecxz
ljmp
dec
dec
pop
sbbl
fildl
aad
and
pusha
cwtl
mov
sub
and
in
xor
jle
push
enter
lock
jns
mov
inc
bound
movl
mov
push
mov
pop
std
pushf
cmove
sub
add
cmpl
test
sbb
dec
push
mov
test
mov
dec
push
sbb
daa
inc
push
pop
jb
jmp
mov
inc
mov
mov
xor
out
inc
mov
dec
mov
sarb
lret
std
pop
loopne
pop
xchg
or
sbb
inc
out
push
jmp
inc
ret
faddl
push
dec
outsb
cmp
push
push
sub
loopne
add
pop
and
xor
lds
inc
out
or
cmpsl
inc
addr16
fistpll
and
xchg
mov
test
sarl
push
dec
mov
ss
inc
mov
adcb
pusha
fildl
int3
movsb
scas
jl
push
lods
mov
leave
aam
in
sub
push
jmp
adc
mov
jne
hlt
ret
push
xor
xor
push
xor
adc
gs
filds
ret
dec
push
xchg
movlps
push
push
xchg
in
loop
mov
or
imul
adc
cli
bound
adc
hlt
loopne
pop
xchg
pop
and
fimuls
adc
xchg
pop
dec
test
imul
push
shr
inc
cmp
scas
mov
repnz
pop
jmp
xchg
jp
add
mov
movl
rclb
dec
data16
pop
sahf
test
sub
mov
add
mov
adc
lods
and
or
sub
mov
mov
out
fwait
adc
mov
push
adc
scas
dec
stos
add
adc
movb
iret
or
mov
xchg
aas
nop
addr16
inc
out
dec
outsb
and
or
iret
lea
aas
xchg
mov
dec
out
push
sahf
cmpsl
lret
dec
movsb
pushf
dec
inc
nop
push
shrb
or
insb
adc
adc
xchg
jns
shrb
mov
iret
mov
pop
popl
mov
ja
cmp
shr
xchg
lods
mov
outsl
fidivs
sahf
sti
aam
std
pushf
push
popf
lahf
mov
jbe
out
stos
adc
out
sub
rorb
add
fwait
mov
outsb
sub
insb
jmp
dec
jge
movl
popf
pusha
lods
stc
sbb
fisubrl
aad
mov
test
popa
push
sub
or
bound
mov
cmp
xchg
daa
mov
in
jmp
je
int3
fisttpl
shrl
fistpll
jmp
ret
leave
jb
or
fidivrs
fimuls
cmp
fisubrl
lahf
jecxz
adc
stos
nop
rcrl
lds
xchg
into
je
inc
xlat
xor
mov
jp
sub
mov
dec
dec
outsl
testl
cwtl
lock
pop
cltd
lock
nop
cli
add
push
and
jbe
sti
insb
mov
sub
lea
jb
inc
pushf
push
cmp
xchg
jb
jae
aam
xor
jge
jns
leave
rorl
xchg
mov
inc
imull
mov
ret
adc
fadds
sub
imul
pop
xor
add
int3
enter
lock
adc
out
lcall
mov
or
movsl
int
xchg
mov
mov
xchg
xor
cli
xchg
push
sub
scas
xchg
jp
jmp
jns
icebp
lret
rorb
fcmovne
add
fsubp
xlat
mov
jo
sarb
xor
dec
dec
call
mov
inc
jae
in
push
push
mul
scas
test
icebp
push
mov
sti
sub
jle
movsl
mov
jle
arpl
xor
popf
adc
inc
lea
call
outsl
das
fldlg2
xchg
fdivrl
inc
pop
jo
jg
adc
call
idivl
xor
test
mov
ret
cmpsl
add
jp
pop
testb
xor
xchg
ret
xor
idivl
lret
lods
mov
icebp
xor
shl
aam
loopne
popf
imul
add
add
jns
lret
add
jo
jnp
out
adc
cwtl
or
adc
xor
inc
pop
xor
fcmovnbe
mov
enter
adc
and
push
stos
adc
jmp
inc
push
jae
adc
ljmp
roll
pop
mov
scas
vmovhps
imul
pop
fsubrl
dec
jnp
pushf
movsl
and
fadd
hlt
testl
shl
iret
cli
sub
in
out
push
imul
ja
or
jg
mov
pop
lods
adc
ljmp
roll
pop
aaa
cli
adc
jb
lods
scas
mov
adc
aas
jnp
sbb
jns
mov
lcall
sbb
push
lret
xor
loop
pop
lea
xchg
pop
imul
insl
mov
pop
xlat
dec
jecxz
test
push
sbb
cmp
xchg
mov
rclb
dec
nop
out
test
push
mov
mov
xchg
mov
stos
adc
fiaddl
les
sbb
dec
cmpsl
mov
pop
mov
push
rcll
call
sub
jl
in
sbb
push
adc
dec
inc
orb
pop
imul
dec
orl
mov
sub
pop
inc
stc
mov
push
sbbb
xor
stos
mov
xor
sbb
das
arpl
insl
adc
jae
iret
shlb
in
shll
xor
inc
mov
sub
test
decb
xchg
mov
inc
adc
inc
das
cmc
cmp
pop
ret
stos
mov
lahf
mov
sbb
cld
pop
rcll
mov
push
aas
xor
ds
fisubs
inc
fstp
push
add
dec
add
or
sbb
stos
fidivrl
gs
adc
imul
test
push
das
aad
ja
leave
or
and
cld
mov
mov
inc
insb
sub
inc
inc
jo,pt
mov
add
insl
inc
fists
lea
ja
dec
jnp
dec
mov
jp
xchg
mov
loop
lds
sub
jle
shrl
lds
out
push
rolb
fldl
push
bound
outsb
lahf
add
shrl
es
xchg
xchg
pop
ja
xor
das
cmovnp
xchg
mov
mov
xor
sub
adc
push
loop
outsl
jge
mov
add
cmp
jmp
clc
rcl
je
aam
pop
mov
mov
sbb
mov
dec
push
jle
pop
mov
sub
jae
sti
push
cld
jge
loopne
pop
rcll
inc
cmp
roll
xchg
int3
andl
push
stos
stos
mov
sub
testl
pop
sbb
pop
inc
jnp
mov
mov
jecxz
fldt
rolb
je
imul
push
and
mov
jne
std
test
int3
or
cltd
roll
adc
sub
call
dec
sti
xchg
dec
pop
dec
lret
ljmp
stos
mov
ljmp
ljmp
cli
sbb
push
fs
dec
loope
or
cld
mov
mov
sbb
mov
adc
fidivrs
xchg
fcmovb
ret
ret
push
aas
inc
add
outsl
loop
mov
push
jg
jbe
push
inc
fsts
in
dec
jno
in
outsl
push
fildl
pop
sub
sbb
les
mov
daa
stos
arpl
mov
mov
inc
jl
pop
dec
cmpsl
and
fsubs
mov
jne
mov
jno
mov
xchg
sti
xchg
mov
data16
mov
mov
jge
inc
ljmp
adc
out
jnp
push
call
lret
cltd
push
pop
jb
jl
int
push
inc
xchg
jnp
insl
or
adc
movsl
mov
adc
inc
or
xlat
rol
dec
adc
lahf
push
add
nop
js
lods
roll
pop
or
rol
xor
mov
inc
lds
aam
xchg
call
dec
or
add
cli
rcr
lahf
sub
inc
scas
push
cmp
outsb
popf
das
sbb
rorb
xor
faddl
cmpsl
mov
mov
mov
or
mov
pop
xor
pop
mov
inc
sahf
sbb
icebp
lds
cmovnp
lcall
cld
sbb
jbe
adc
sbb
enter
aam
and
jl
pop
imul
dec
mov
insb
add
push
sub
mov
jnp
aad
lahf
out
stos
and
add
cmp
sbbl
cltd
push
fsubl
es
cld
or
jle
iret
push
xchg
scas
xor
stos
nop
data16
jp
jge
out
push
sbb
push
dec
outsl
sub
adc
pushf
lahf
hlt
ret
stc
stos
lret
sub
popl
cs
pop
and
adc
adc
lcall
cs
sbb
stc
into
inc
fnstcw
xor
sbb
fidivrl
cmp
and
iret
add
dec
adcb
lret
pop
aad
mov
cmp
adc
push
sbb
pop
inc
push
andl
adc
inc
in
adcb
dec
jae
mov
sub
jns
cmp
repz
push
or
insb
mov
pop
jg
push
dec
jne
leave
scas
xor
or
jne
pop
jae
lds
jp
sub
rclb
ret
xchg
xchg
or
mov
insl
fwait
cmp
mov
pop
dec
scas
dec
shll
xchg
mov
or
cmp
xchg
lock
pop
in
push
pop
pop
push
xchg
cmp
pusha
sahf
pop
cmp
test
in
stos
iret
cmp
xchg
cmp
inc
xchg
in
icebp
mov
shrl
stos
lods
lock
movsl
xor
out
arpl
stos
xor
cmp
fistl
jl
mov
sub
push
test
divl
inc
jbe
xor
inc
xchg
out
jmp
imul
and
mov
mov
mov
fwait
jb
mov
mov
insl
aaa
xchg
shlb
cltd
arpl
pop
shl
xchg
in
nop
fisubrl
and
test
push
jb
push
cmp
adc
lret
dec
mov
pop
pop
mov
mov
dec
sbb
push
or
pushf
add
into
fisttpl
mov
pop
or
daa
fistps
incb
add
das
loopne
aas
mov
cmp
pop
mov
pop
mov
mov
je
decl
mov
cs
pop
xchg
insb
addb
ds
adc
push
ret
ljmp
enter
cmp
ss
in
int3
mov
dec
pop
push
lock
jno
int3
leave
stos
add
xor
mov
jg
hlt
int
add
stos
mov
out
and
mov
addr16
clc
insl
mov
push
push
cmp
mov
sbb
mov
gs
ja
adc
add
lods
insb
dec
dec
insl
push
add
xlat
in
jne
out
dec
pop
lret
mov
nop
sahf
gs
je
cltd
out
xchg
addl
sbb
test
jb
test
push
loopne
orl
cmp
mov
ret
mov
pop
loop
shll
ss
push
xor
shlb
jecxz
les
sbb
fucomi
jp
test
in
push
mov
in
sub
sub
cli
sahf
adc
push
sahf
mov
xchg
je
adc
aaa
push
push
stos
jg
add
stos
lea
int3
pushf
jl
inc
imul
push
push
mov
outsl
mov
jge
cmc
push
push
dec
imul
movsl
lret
jge
nop
fiadds
push
xor
cli
jnp
outsb
push
bound
fistpl
and
pushf
mov
xchg
or
jp
and
adc
pop
jle
jmp
fsubrp
add
adc
push
gs
mov
mov
aam
dec
or
pop
mov
out
ds
sub
gs
xlat
filds
pop
sbb
add
fabs
sbb
and
mov
mov
sub
pop
shrb
mov
lret
jp
iret
xor
jecxz
xor
cpuid
mov
xchg
jge
add
sbb
andl
loopne
cs
dec
fcoml
pop
inc
rol
add
into
push
inc
pop
filds
push
cmpsl
jmp
pop
inc
repz
int3
rcll
inc
mov
out
mov
xor
push
adc
ficompl
dec
pop
mov
scas
xchg
in
mov
js
and
rclb
push
scas
pop
out
mov
pop
jge
dec
inc
dec
mov
cmp
pop
inc
add
lahf
push
pushf
push
gs
add
xchg
les
mov
pop
xor
sub
push
xchg
sbb
pop
mov
push
in
mov
pop
sbb
cwtl
cmp
les
mov
add
cmc
inc
xchg
pop
nop
popf
push
inc
mov
std
mov
mov
inc
mov
adc
xlat
push
add
xlat
lods
sbb
jns
loope
sbb
out
push
push
inc
mov
scas
pop
jp
fldt
inc
adc
lret
fmull
inc
je
mov
jns
ss
dec
add
push
shrl
arpl
stc
pop
xlat
xchg
pop
or
or
xchg
xchg
pop
pusha
xchg
xchg
adc
out
shll
iret
fwait
imul
or
inc
jnp
inc
inc
out
insl
hlt
insb
int
and
nopl
inc
inc
pop
iret
add
outsl
cmpb
scas
dec
imul
loop
push
add
sbbl
mov
cmpsb
cmp
xchg
adc
fwait
mov
jae
cmpsl
sbb
jb
mov
pop
ds
sbb
and
cli
jno
in
mov
enter
mov
je
bound
mov
das
dec
out
push
add
test
inc
out
mov
insl
and
adc
cli
fidivl
inc
out
and
loopne
add
aam
inc
inc
push
sbb
sbb
inc
pop
inc
pop
or
xchg
cmp
xchg
xor
sbb
in
jbe
mov
repnz
push
add
gs
sub
sbb
cmpsl
rcrb
bound
movsb
jecxz
or
outsl
pop
ret
int3
push
icebp
movsl
lret
mov
push
dec
and
xchg
mov
mov
stos
cli
movaps
fnstcw
adc
mov
inc
loopne
and
cmp
aaa
inc
aas
lock
push
scas
push
cli
inc
fisubrl
inc
in
pop
push
lods
mov
push
iret
mov
add
test
stos
sbb
rorb
xlat
aas
movsl
int
negl
xchg
inc
sub
xchg
add
inc
testb
xchg
test
xor
insb
les
mov
dec
mov
adc
dec
aad
rcll
xchg
mov
ss
dec
xlat
popf
mov
or
xchg
xchg
adc
cmp
ret
repnz
mov
inc
aam
pop
ret
test
inc
test
clc
adcl
rorl
add
inc
dec
sbbl
out
mov
out
jmp
sbb
add
vpmacsww
mov
scas
cmp
mov
pop
or
jns
jns
nop
imul
out
push
fistpl
jne
inc
mov
adc
xlat
jae
mov
mov
add
fwait
cmpsb
xchg
xorb
fstpt
out
pop
pop
push
data16
add
cmp
jl
cli
jo
push
jmp
sbb
int
pop
jecxz
sbb
movsl
inc
and
stos
add
mov
aaa
cmp
call
sbb
inc
xchg
addr16
scas
fs
loop
ret
push
loope
pop
out
test
gs
pop
mov
out
pop
inc
xor
pop
cld
stos
inc
clc
int
lods
fidivl
cmc
pop
cwtl
stos
movsl
enter
pop
icebp
inc
mov
iret
pop
jmp
mov
test
incl
jl
ljmp
dec
out
mov
xchg
scas
shll
dec
mov
and
add
push
stc
lret
xchg
push
or
clc
movsl
add
or
stos
inc
dec
pushf
call
jnp
in
push
int3
orl
sbb
stc
mull
jns
aam
adc
ljmp
jg
pusha
jbe
leave
outsl
jp
pop
fs
ds
repnz
stc
in
adc
xor
lea
jnp
adc
mov
cmp
fs
jge
inc
lahf
insb
sbb
inc
mov
sub
pop
mov
not
lcall
xchg
mov
imul
push
xchg
mov
xchg
andb
adc
inc
xchg
sub
insl
into
cwtl
push
rolb
cltd
jns
ds
add
mov
dec
xchg
or
mov
mov
jns
shl
xchg
xchg
sti
stos
xor
aam
mov
pop
jne
in
push
scas
call
andb
stos
mov
ficoml
push
inc
dec
fnstsw
adc
mov
cli
outsb
bound
and
ret
in
arpl
cmpsw
test
lock
bound
psubsb
sbb
push
xchg
fmuls
jne
bound
fcoml
int3
lds
es
jne
pusha
enter
scas
xor
push
add
cwtl
cmp
es
inc
pop
fists
shrl
ljmp
xchg
pusha
ja
adc
pop
sub
mov
jl
or
pop
addr16
adcl
push
push
fcompl
incb
sbb
call
mov
fs
shrl
rcrl
mov
mov
dec
and
add
outsl
inc
int
inc
fldl
lds
test
inc
adc
sahf
lret
scas
cld
jl
fbstp
jns
jo
add
xchg
std
stc
xchg
push
push
popl
insb
sarb
and
pop
adcb
repnz
mov
jae
fwait
scas
ret
cmc
insl
test
rcrl
daa
push
jns
sub
xor
dec
fwait
bound
imul
sub
fnsave
pop
sbb
adc
out
cld
lods
mov
push
inc
idivl
nop
call
test
dec
jmp
js
fstpt
add
add
mov
inc
xchg
dec
xor
les
or
fmulp
dec
push
jg
mov
dec
mov
jg
mov
xchg
decl
out
cmp
push
sti
cmp
icebp
pusha
setbe
scas
xor
enter
insb
pushf
or
and
ss
lods
mov
cld
xor
nop
push
das
das
lock
cltd
subl
and
pusha
leave
inc
movsb
mov
xor
add
pop
add
push
shll
push
movsl
or
pop
mov
imul
cmp
mov
dec
cmp
stc
and
mov
cmp
pop
mov
inc
mov
jb
or
mov
jmp
stos
cmpsl
std
push
xchg
jo
aad
or
push
lock
negb
sbb
pop
aas
fdivrs
jo
push
sarl
push
clc
or
jne
sbb
aaa
dec
jo
mov
aam
mov
xchg
xchg
icebp
mov
daa
loopne
imul
dec
adc
sahf
addr16
jle
ja
sbb
or
sub
cmp
sbb
xchg
mov
sub
xor
xchg
rclb
jb
inc
sahf
push
xor
lahf
fsubrl
jne
and
outsl
jmp
jb
mov
dec
mov
sub
hlt
gs
pop
lahf
mov
xor
or
mov
or
adc
lods
fbstp
mov
pushf
aas
outsb
inc
mov
pop
jnp
stc
mov
jle
push
pop
mov
dec
int3
xor
js
sbb
sbb
dec
lods
popl
sub
and
inc
sarl
stos
mov
int
sbb
lods
or
push
xchg
push
fimull
addr16
xor
dec
pop
pop
test
xchg
jno
jb
and
stos
fsub
movsb
stos
push
xchg
cmp
orb
orl
out
dec
sbb
into
pushf
or
or
shlb
push
push
adc
and
ret
jb
cmc
sub
mov
sahf
cmp
and
sahf
or
xor
es
xchg
andl
popa
mov
popa
lahf
orb
or
mov
divl
mov
faddl
sbb
shl
add
fidivs
dec
inc
xchg
cmp
popa
dec
fildll
or
nop
sbb
scas
jmp
repz
sbb
jl
push
movsb
cli
shr
pop
lret
ja
pop
loop
shll
das
daa
dec
adc
pop
mov
fcmovnu
xchg
dec
aam
cmp
cli
mov
inc
adc
inc
pop
add
pop
fwait
or
pop
int3
xchg
cmp
in
imul
jg
int
dec
negl
imul
fisttpl
cmp
enter
popf
popa
fdivrs
dec
jne
in
cmpb
mov
or
jne
mov
test
ja
jne
jo
sub
mov
and
push
or
nop
mov
fidivl
dec
or
pop
cmp
fildl
orb
sub
lret
sub
jg
jle,pn
iret
stos
sub
pop
hlt
imul
sub
test
push
aad
mov
jae
xor
in
mov
sarb
loope
ss
xchg
stc
fsubrs
insb
jl
sub
mov
mov
cmp
jmp
push
ret
xchg
xor
lods
out
push
mov
incb
inc
mov
imul
rcrb
mov
in
ret
push
pop
inc
mov
outsb
out
mov
lahf
pop
dec
fdivrl
sub
jmp
pop
jmp
sbb
fs
add
mov
push
ss
mov
sahf
lret
jns
dec
sub
xchg
add
insl
sub
dec
pop
movb
add
rcrl
xor
and
lods
mov
ss
xorb
fwait
pusha
cmp
pop
sahf
outsl
xchg
xor
sbb
fsubl
out
cli
adc
out
or
pushf
pcmpgtb
jae
das
test
xchg
xor
pusha
inc
roll
cld
and
jno
cltd
aas
cmpl
cmp
pop
shr
gs
xor
fbld
push
sub
pop
adc
les
fstl
adc
mov
pop
mov
sbb
lods
imul
pop
mov
dec
loopne
aad
insb
lret
mov
push
lods
or
and
insl
lock
in
iret
xor
inc
inc
jle
test
fwait
inc
scas
pop
dec
test
ret
aas
xchg
movsb
or
je
cmp
xor
pop
pop
aaa
mov
inc
cltd
fisubrl
mov
dec
sub
pop
es
adc
or
ret
mov
lods
mov
notl
dec
sbb
push
cld
repz
or
imul
insl
mov
test
or
daa
fnstenv
lods
pop
xor
loope
popf
mov
lahf
xchg
loope
rorb
test
fidivrl
scas
push
mov
hlt
repz
aad
es
lods
dec
jle
push
mov
mov
push
sub
mov
lock
fildl
je
outsb
fstp
add
aam
and
bound
arpl
testl
jle
cld
aaa
popf
push
stc
fimull
jb
adc
mov
dec
add
lock
cmp
inc
add
rcrb
xchg
imul
pop
stos
leave
mov
adc
dec
neg
dec
jae
pusha
mov
mov
or
shlb
lods
add
mov
call
add
imul
cmp
adc
pop
mov
xchg
fdivl
lock
push
pop
repz
lock
repnz
sub
and
and
push
mov
mov
lcall
push
shl
mov
bound
jge
pop
and
dec
push
cmpl
mov
les
jo
fdivl
lcall
mov
mov
lret
cmp
je
lahf
xchg
js
and
cmc
xchg
aam
add
daa
dec
xor
ja
xor
lahf
sar
adc
in
movsb
rorl
and
add
dec
xor
lahf
mov
push
leave
pop
testl
lret
mov
pop
or
fwait
pop
lret
mov
xchg
pop
pusha
push
cmp
aad
lcall
mov
and
cmp
popf
scas
mov
adc
inc
dec
inc
jg
sbb
int3
xor
sti
adc
adc
divl
inc
pusha
std
aad
jo
data16
pusha
out
sub
jmp
hlt
js
nop
xlat
dec
stc
ja
sbb
enter
test
or
scas
scas
dec
mov
jmp
in
nop
mov
js
es
shll
jno
nop
test
mov
mov
pop
lock
add
inc
in
mov
mov
push
mov
inc
push
mov
movsl
push
mov
cs
pop
in
testb
shl
mov
test
pop
mov
cltd
pop
sbb
pusha
inc
adc
movsl
xchg
mov
jo
add
in
je
stos
sahf
movsl
xor
cmpsl
xlat
shlb
mov
dec
rcrl
add
outsb
rclb
mov
inc
push
mov
lret
and
xor
or
xchg
lahf
push
out
xchg
mov
jne
dec
test
imul
and
xchg
and
xor
or
sti
negb
sbb
pop
adc
mov
les
lods
sub
mov
pusha
inc
je
mov
cmp
dec
pop
fistps
cmpsb
inc
in
sbb
add
or
andl
xor
pop
push
pop
cmp
outsl
fucom
sbb
cmp
add
dec
scas
icebp
jo
xor
inc
jbe
imul
push
lock
outsl
xchg
xchg
daa
sub
cmp
movsl
testl
gs
into
jp
in
jno
rcll
push
lcall
xchg
or
push
out
inc
scas
loope
mov
mov
je
jge
int3
fcmovnu
adc
mov
inc
or
pop
test
dec
xlat
testb
pop
mov
push
push
andnps
stos
push
hlt
iret
adc
movsb
paddd
dec
lock
outsb
in
xchg
dec
push
mov
xor
flds
or
mov
les
imul
xor
int3
sub
mov
lret
data16
cli
dec
in
push
pop
aam
pop
arpl
xor
mov
adc
mov
or
addr16
sub
stos
ja
push
or
lret
mov
stos
xchg
daa
into
cwtl
pop
mov
rolb
mov
jnp
dec
push
les
sub
or
xor
or
jl
cmp
and
xor
mov
sub
add
jmp
mov
test
jne
hlt
xor
hlt
rcrl
jecxz
and
pop
push
scas
inc
and
sbb
sub
jp
mov
and
mov
stc
test
pop
or
push
mov
xchg
dec
sbb
sub
das
mov
cs
aas
adc
cmp
adc
xor
jmp
das
xchg
fsubrs
les
movsl
pop
mov
aaa
in
sahf
popf
into
xchg
add
inc
sahf
movsl
or
nop
rclb
push
mov
fsubl
das
xlat
push
xor
inc
fildll
imul
imul
cmc
cmpl
mov
push
pop
pop
xchg
shrb
xorb
sbb
aas
add
mov
push
xor
push
or
outsb
shll
dec
stc
lds
cs
mov
add
popa
repz
es
test
ret
push
mov
inc
je
jns
mov
xor
test
shll
sub
pop
mov
fcompl
test
es
push
mov
shlb
or
push
rorl
mov
dec
cmpsl
and
pop
cmp
in
jne
pop
inc
cmp
or
mov
mov
push
sbb
cli
fadds
inc
xor
jmp
and
mov
push
movsl
outsb
dec
mov
test
mov
push
and
pop
data16
mul
mov
xorl
xlat
dec
jge
xor
pop
cmp
mov
pop
add
cmpl
cmp
stos
sbb
aaa
add
fiaddl
jle
jmp
cld
jae
push
ss
mov
xor
push
xor
inc
mov
lods
dec
inc
or
xor
pop
cmp
push
bound
sbb
dec
sbb
mov
fdivs
mov
popfw
pop
jmp
mov
loop
int3
lds
inc
jle
ds
out
in
iret
or
push
dec
or
sahf
jns
pop
ret
inc
imul
push
mov
mov
aaa
adc
mov
sahf
fiaddl
jg
fiaddl
mov
dec
mov
js
jg
ret
mov
dec
jle
pushf
inc
sbb
cmp
xchg
fisubl
xchg
loopne
xchg
and
imul
jns
leave
shl
pushf
fwait
ss
loopne
mov
cmp
add
adc
pop
push
inc
push
mov
add
push
gs
jns
adc
xor
add
lea
fidivrl
jecxz
call
push
jg
and
fwait
enter
push
sbb
sbb
add
xchg
out
xchg
dec
into
lock
xchg
lret
mov
rclb
mov
mov
mov
sarb
adc
aad
ljmp
aam
mov
inc
xor
cpuid
aad
mov
out
fwait
mov
inc
pop
and
pop
cmp
imull
jo
xor
jecxz
xchg
iret
push
mov
xchg
test
ret
data16
pop
jo
dec
cmp
xchg
mov
les
adc
movsl
daa
inc
jmp
ds
or
lret
lds
pop
adc
adc
sbb
idivb
sub
add
dec
inc
sarl
mov
rclb
les
std
aas
mov
imul
fdivrl
or
jnp
mov
mov
ret
movsb
add
jl
mov
jp
stos
push
inc
test
push
jl
or
inc
mov
pop
sub
sahf
jae
mov
xchg
dec
gs
test
pop
pop
imul
push
fistpll
xchg
or
push
sub
fdiv
mov
xchg
mov
push
pusha
inc
inc
and
inc
pusha
je
cli
mov
cmp
and
loopne
in
dec
mov
mov
test
xchg
push
xor
xor
ret
iret
or
add
test
out
pop
mov
aad
inc
cmp
or
repnz
xor
adc
jno
mov
nop
mov
jns
pop
mov
jbe
pop
push
mov
jg
aam
popa
adc
and
cmc
psrlw
aaa
xchg
pop
test
add
sbbl
cmp
in
nop
shlb
cltd
cmc
lret
fcmovb
push
lret
rcr
jg
mov
push
push
xor
push
or
pop
pop
mov
nop
into
jmp
fisttpl
jg
movsb
jne
dec
jl
push
jo
xchg
pop
xor
lds
mov
cmp
imul
dec
dec
cmp
or
or
jae
or
inc
into
pusha
mov
loopne
pusha
pop
mov
aas
cli
jl
sub
mov
jae
and
gs
pop
mov
out
shrb
sarb
or
mov
xchg
sbb
sub
dec
int
push
shl
into
int
lds
in
and
inc
inc
cmp
jg
lock
jb
push
fildll
gs
pop
sti
sub
into
cmpsl
pop
lahf
pop
push
imul
mov
adc
cld
aas
add
sbb
lea
sbb
es
adc
mov
or
pushf
adc
ss
adc
push
cmp
and
push
mov
cmc
jle
pop
xor
test
or
cmp
aaa
rolb
or
inc
insl
push
dec
push
mov
or
cmc
xchg
mov
cmpsl
icebp
into
lret
adc
fs
add
mov
int3
jne
cmp
shrb
test
inc
mov
inc
outsl
mov
cmp
mov
mov
stos
push
or
fstps
and
sbb
jbe
cmp
rorl
cmpsb
push
fcoml
nop
sbb
insl
orl
dec
mov
push
dec
imul
xchg
jo
rorb
cwtl
andb
mov
insl
add
dec
push
enter
sbb
es
sbb
add
cmp
rol
xor
dec
pop
dec
xlat
dec
mov
cmp
imul
or
dec
mov
or
sbb
jge
and
push
flds
movsl
or
stos
lahf
in
xchg
loope
aam
pop
decb
xchg
jl
nop
addl
clc
mov
xchg
mov
push
pop
fstl
stos
inc
rcll
js
iret
push
pop
dec
mov
shrb
sub
sarb
push
push
mov
xor
mov
int
nop
xchg
sbb
push
cmp
mov
in
adc
sub
push
ja
add
insb
sbb
mov
adc
pop
jae
pop
pop
mov
mov
cmc
stos
lahf
popf
jb
mov
jno
sbb
ljmp
test
mov
jecxz
sub
dec
push
test
push
shlb
mov
inc
test
mov
stos
lret
imul
pop
sub
ljmp
popf
fstl
or
fdivs
fs
mov
jl
sbb
pop
sahf
jnp
cmc
scas
sbb
jae
and
mov
lahf
mov
adc
pop
pop
icebp
test
xchg
and
dec
aad
xor
into
inc
push
mov
cs
faddl
sub
imul
sbb
lods
sahf
jecxz
xor
outsl
enter
mov
dec
push
inc
ljmp
nop
jl
dec
sub
fistl
shll
push
insl
es
jle
adcb
arpl
loope
std
cmpl
mov
sub
pop
pop
cli
sub
test
pop
or
jns
push
jmp
xchg
mov
mov
out
test
pop
cmp
cmp
or
pushf
js
lret
xchg
cli
mov
adc
cmp
in
rorb
mov
in
dec
cmp
dec
dec
inc
or
ret
or
inc
mov
es
enter
arpl
pop
fsubrl
fildl
mov
imul
sub
shr
mov
test
jl
xor
xlat
cmp
xchg
and
pop
sub
jmp
and
cmp
push
and
inc
inc
mov
mov
lahf
and
fstpt
xchg
pop
scas
in
xor
in
lret
mov
loopne
jae
in
ret
push
fmuls
shll
push
lea
xchg
sub
shll
jle
insb
jg
xchg
mov
ret
lods
cmp
in
push
inc
and
std
xchg
cmp
jo
jns
sub
loop
mov
insl
inc
xor
mov
negb
subb
jmp
add
sbb
sub
and
cmp
mov
imul
frstor
push
stc
addr16
mov
xchg
mov
sbb
mov
xlat
lret
in
inc
mov
jg
mov
orb
inc
xor
add
cmp
aas
or
dec
pusha
cwtd
sub
mov
test
jle
movsl
xlat
insb
lock
mov
movsl
int
and
jmp
insb
rcrl
pop
jg
scas
pop
cmp
add
sbb
xorl
insb
iret
inc
xchg
loop
nop
mov
lds
push
jo
xchg
pop
pop
test
xor
jle
stos
aas
mov
sbb
add
insl
cli
mov
xchg
add
psrlq
addb
or
cmpl
jb
xlat
outsl
add
or
and
inc
and
repnz
pop
lret
pop
cli
mov
push
xor
xor
sahf
cli
rorl
inc
in
jle
in
clc
xchg
enter
mov
loopne
sar
inc
lret
push
inc
fistps
repnz
fucomp
lods
dec
stc
fcmovnbe
push
gs
cli
mov
cwtl
pop
clc
add
mov
jmp
jmp
or
out
mov
and
fwait
jae
fmuls
adc
mov
addb
inc
fldl
xchg
mov
fmul
or
mov
add
ja
movsl
into
lds
inc
cld
cli
int
sbb
and
shlb
mov
adc
and
std
adc
movsb
into
pop
lea
lret
dec
fdivs
jns
sbb
imul
push
movntps
ret
in
mov
lods
jge
pop
push
rorb
mov
pop
mov
xor
aad
inc
adc
xor
cmpsb
gs
ret
sbb
test
pop
aam
xor
push
ss
sub
arpl
lods
ret
mov
jp
dec
inc
adc
orl
test
je
insb
stos
xchg
out
mov
mov
jle
pop
lcall
xchg
inc
mov
xlat
aam
inc
imul
dec
les
ds
sub
dec
mov
inc
xchg
push
add
out
jecxz
ret
lcall
pop
outsb
dec
mov
push
mov
jae
enter
mov
and
jno
outsb
push
xor
mov
push
dec
cmpsb
cmp
jno
xlat
push
mov
mov
and
insb
imul
stos
and
nop
fwait
dec
push
pop
dec
lock
xlat
xorb
push
mov
push
daa
dec
ret
out
cld
out
orb
push
xor
subl
shrb
pop
sti
scas
mov
shll
xchg
ret
cwtl
mov
rcl
bound
inc
gs
clc
lods
repz
jp
stc
sbb
ficompl
xor
sub
lret
mov
push
xor
inc
jge
in
xchg
pop
mov
cltd
test
cmp
hlt
xor
out
ret
andl
mov
or
inc
mov
sarl
inc
mov
sti
insl
xor
lret
jbe
xchg
inc
aas
push
aas
imul
sti
scas
fimull
shll
xchg
mov
or
mov
cwtl
jbe
pop
mov
dec
stos
call
push
jmp
outsb
pop
sbb
xchg
and
shrb
add
movb
adc
aas
cltd
mov
lods
inc
xchg
and
push
xchg
rcr
ja
dec
mov
cwtl
and
push
imul
rclb
rolb
fnsave
dec
push
mov
dec
mov
pushf
stc
ret
leave
out
xchg
add
add
fsubs
loopne
jnp
shrl
pushf
sti
leave
sbb
fmuls
add
push
mov
outsl
imul
aad
or
in
inc
mov
sub
mov
mov
pop
stos
inc
pop
int
imul
xchg
jae
in
or
stc
aad
sbb
mov
xor
mov
inc
sbb
adc
pop
ss
xchg
cmp
int
adc
popf
xchg
pop
xchg
xchg
cli
pop
popf
mov
sbb
mov
adc
adcb
pop
push
test
push
xor
push
aam
aas
enter
or
je
sbb
fstps
lds
call
xchg
loop
cmc
add
mov
ss
sti
xor
push
stos
daa
rcll
xchg
mov
mov
push
cmc
xor
stos
xor
into
out
jecxz
mov
fcmovb
xor
out
jno
dec
fadd
xor
jb
xchg
out
cltd
aam
paddw
pop
ss
fxch
sahf
and
aad
mov
mov
jae
rcr
sub
adc
pmaxub
mov
loope
and
ret
mov
sub
loop
pop
or
fptan
int
adcb
push
inc
outsl
push
or
xchg
sbb
into
movsb
add
adc
iret
push
int3
mov
adc
and
imul
adc
jge
ret
adcl
xchg
dec
mov
inc
gs
lds
pop
mov
jbe
shr
mov
lock
repz
pushf
out
bound
cmp
fnsave
call
test
xchg
and
test
adcb
insb
stos
out
std
xlat
lea
enter
pop
inc
out
enter
stc
mov
mov
shll
sub
dec
cltd
dec
push
mov
and
jns
xchg
mov
in
pop
or
push
stc
mov
fsubs
jl
xor
xchg
sahf
repz
inc
pusha
stos
fsts
or
push
mov
in
jp
pop
pop
xchg
js
mov
gs
pop
bound
fidivs
movsb
pop
rorl
lcall
dec
and
test
movsl
mov
notb
mov
push
into
cld
divl
pop
adc
clc
shll
fsts
aam
xor
push
fs
sbb
decb
cs
or
xchg
sub
insb
inc
jae
jmp
adc
jnp
xchg
pop
xor
imul
jg
sarb
das
cwtl
leave
sbb
fisttpl
mov
dec
stos
and
jnp
sub
outsb
shll
repz
outsb
mov
push
inc
inc
and
and
roll
mov
insb
subps
mov
sub
dec
hlt
popf
iret
rorb
inc
pop
mov
xchg
int
rcrl
sbb
mov
enter
int
aaa
das
inc
mov
push
gs
rorl
das
xchg
pop
mov
jle
push
mov
sub
stos
je
ja
fs
mov
push
test
int3
cmpsl
xor
xchg
shlb
loope
pop
lds
inc
cmc
add
dec
leave
das
stos
xchg
mov
scas
and
in
sbb
sub
push
mov
dec
stos
push
mov
push
xlat
pop
mov
sbb
das
adc
push
cmp
or
jecxz
repz
cld
call
inc
mov
cs
or
push
cld
push
addr16
inc
xchg
mov
fwait
jnp
sahf
or
push
mov
andb
push
fstps
cmpsl
les
ficompl
adc
adc
pop
pop
fistl
test
jns
test
and
xor
sbb
nop
or
add
sub
and
push
mov
int
fwait
cli
mov
notb
mov
push
bound
aaa
ljmp
xchg
shll
xchg
adc
out
pop
test
jge
loop
imul
dec
mov
xor
sbb
dec
popf
mov
cltd
cmp
dec
je
xchg
movsl
or
jge
lcall
mov
divb
and
mov
insl
mov
fprem1
jne
std
jns
int3
das
jge
and
xchg
arpl
mov
pop
xor
ret
or
add
lret
loop
or
mov
loopne
adc
mov
leave
pop
adc
lahf
cmp
sbbb
inc
bound
les
sub
es
mov
paddb
dec
and
sub
or
lcall
cmc
mov
mov
mov
inc
xor
fimuls
rcr
push
aad
inc
stos
ljmp
repz
dec
add
jecxz
ljmp
inc
negl
movsl
and
adc
mov
enter
stos
mov
sbb
cmp
call
mov
cmp
sbb
inc
repnz
lods
inc
lods
popl
icebp
and
xor
and
lods
shr
xchg
mov
mov
push
movsb
dec
imul
mov
cli
jp
push
mov
aas
int3
sub
out
sahf
fadd
sahf
scas
sbb
pop
mov
sbb
stos
adc
xor
jns
jmp
in
cwtl
dec
pop
sbbl
ss
aaa
fdivrl
jg
dec
enter
jecxz
rcrb
cmp
dec
loope
fldenv
out
loop
or
xor
mov
int
rclb
mov
xor
outsb
cltd
or
daa
xchg
cmpb
pop
in
stos
inc
sti
int3
movl
jns
les
xorl
clc
or
ret
inc
lret
rorb
jecxz
rcr
outsl
andl
xor
xchg
scas
cmp
inc
sbb
xor
sahf
pop
repz
fucom
icebp
cwtl
mov
in
dec
enter
adcb
sub
shll
nop
ja
shrb
adc
mov
inc
xorb
pop
mov
inc
loopne
scas
jmp
shl
ficoml
xor
xor
jg
xchg
imul
jl
push
sbb
push
jnp
fisubl
loope
adc
sub
daa
adc
or
inc
mov
pop
push
ret
fildl
pop
mov
adc
ret
mov
fmuls
pop
lock
jmp
add
jp
lds
movsl
push
mov
fwait
call
int3
or
dec
dec
add
enter
fs
inc
or
inc
shr
test
ja
shrl
jp
cmc
push
jb
ja
js
data16
rcrl
xchg
in
aad
leave
pop
jae
push
sbb
and
mov
imul
and
sub
stos
mov
bound
fldt
push
scas
out
dec
inc
xor
les
aas
sbb
dec
scas
lods
xchg
xor
lea
lcall
movsl
xchg
xchg
cmpsl
out
xor
enter
gs
adc
xor
lret
and
pop
dec
push
fisttps
and
mov
pop
sbb
mov
mov
mov
mov
mov
mov
dec
rcll
cld
daa
or
pop
lahf
push
int
shll
sub
out
pop
adc
mov
icebp
mov
aaa
mov
int3
lcall
dec
pop
sbb
out
in
insl
jns
pop
xchg
mov
mov
xor
std
lock
stos
nop
pop
cmp
inc
sbbl
sub
stc
jmp
xchg
pop
popf
add
adc
int
call
shr
jmp
sub
cs
adc
lods
and
inc
popf
popl
dec
mov
incl
push
mov
pop
inc
ljmp
sub
hlt
mov
mov
dec
jno
push
imul
mov
jg
mov
ret
mov
into
dec
xchg
fldz
jno
pusha
add
mov
shlb
mov
insl
lret
or
or
sti
cmpb
into
add
iret
loop
mov
push
cmc
inc
lock
jle
sub
adc
fwait
cmp
or
and
jmp
pop
pop
push
pop
jbe
rsqrtps
mov
test
mov
mov
sub
jo
push
mov
or
and
add
adc
fcoms
hlt
jne
scas
mov
fdivrl
jae
cmp
sbb
daa
or
cld
addr16
stc
jp
call
mov
mov
dec
lret
ret
hlt
out
and
das
pop
dec
xchg
sbb
jbe
pop
or
push
add
push
mov
les
inc
arpl
adc
and
iret
inc
adc
ljmp
lret
adcl
push
sub
ljmp
imul
ficoms
pop
mov
adcb
mov
stos
aaa
add
dec
jbe
jle
jle
jae
aas
sub
loop
push
xchg
add
ja
pop
sti
add
dec
ljmp
in
push
mov
add
scas
sub
push
push
pop
mov
rcrb
scas
adc
xchg
or
jnp
mov
or
mov
in
imul
imul
jecxz
mov
mov
ljmp
lcall
jmp
sbb
movsl
sbb
mov
imul
mov
push
ss
das
in
mov
mov
clc
push
shll
outsb
ss
jg
push
mov
loopne
inc
mov
mov
test
pop
movsb
mov
adc
lcall
push
rcll
pop
cmp
popa
imul
xchg
adc
cld
jae
arpl
inc
pop
mov
dec
jne
in
in
adc
xlat
fwait
xor
mov
stos
add
insl
dec
fldl2t
xlat
shlb
sub
xorb
out
inc
push
das
add
mov
xchg
fmull
xchg
or
or
iret
cmpsl
xor
adc
inc
xchg
cltd
push
stc
js
ljmp
and
xor
sarl
shll
jmp
fnsave
xor
fbstp
mov
cld
sbb
xor
test
outsl
lahf
movsb
jg
jns
jp
mov
lret
mov
ljmp
mov
xchg
and
mov
dec
mov
jb
pop
adc
cmp
cltd
enter
cld
aas
rclb
inc
sub
and
mov
xor
xor
nop
sbb
xor
mov
das
jp
mov
imul
std
sarb
pop
ljmp
out
mov
outsb
in
ftst
or
dec
cld
jae
dec
jno
mov
mov
sub
adc
pop
cmp
mov
cmp
aam
mov
adc
aas
xor
and
icebp
or
inc
adc
bound
cmp
sub
test
fmul
push
rclb
xor
jle
movsl
mov
lret
int3
inc
nop
popa
mov
addr16
jl
outsl
out
xor
dec
sub
stos
pop
sub
pop
js
mov
or
sbb
fwait
push
push
enter
adc
daa
add
pop
into
ds
inc
scas
sub
mov
loop
mov
sub
dec
jbe
in
fbstp
int3
mov
pop
fildll
int
lret
mov
xchg
pusha
popl
lcall
mov
lock
loopne
cs
xchg
adc
fdiv
sarb
das
sub
gs
push
sbb
in
mov
adc
insl
call
inc
stos
je
insb
inc
jno
shll
push
leave
cmp
shl
rcrb
mov
sub
inc
adc
mov
xor
jg
dec
push
mov
subb
cmp
xchg
xor
pop
pop
imul
adc
aaa
mov
jae
xchg
das
insl
leave
dec
push
mov
xchg
xor
inc
and
mov
inc
pop
push
mov
mov
inc
pop
push
pushf
sbb
out
cwtl
fsubrs
stos
add
lds
cmp
daa
jp
arpl
testb
sub
movsl
pop
ja
sarl
mov
test
aad
jle
fiaddl
pop
inc
cmc
sti
add
cmp
loope
jecxz
and
jnp
mov
jo
scas
xchg
ljmp
pop
add
cli
pop
fsubr
adc
xor
jns
sbb
int3
and
cmp
adc
cmp
xor
push
jmp
data16
dec
cli
ss
and
sbb
mov
or
les
jmp
jmp
adc
xor
adc
rol
jle
ret
in
sti
dec
fildl
sarb
fnstsw
pop
scas
push
xchg
ret
sub
test
and
repnz
pop
sub
mov
insb
jecxz
adc
stos
int3
leave
outsb
out
cltd
cld
shrb
sarb
ret
je
int3
mov
and
and
ds
xlat
push
inc
cmp
cltd
inc
or
fistpl
jecxz
lcall
xor
pop
adc
ja
pop
cli
daa
outsl
push
add
pop
ret
mov
add
adc
addr16
shlb
outsb
sub
jae
mov
pop
scas
aam
adc
mov
sbb
test
popf
xor
in
xor
mov
or
fstpl
sbb
lods
push
ret
ret
popa
mov
pop
push
cltd
adcb
adc
adc
push
into
sbb
or
sub
mov
pop
loopne
push
cli
adc
xor
pop
add
push
hlt
jmp
xchg
jl
adc
add
adc
cmp
xchg
jnp
stc
dec
pop
xchg
call
filds
jbe
add
adc
or
jne
dec
pop
insl
jae
pop
or
jo
push
pop
outsl
sub
cmp
sbb
or
and
jo
push
adc
inc
imul
insl
jbe
test
rcrl
push
and
movsl
mov
adcl
shll
sbb
dec
pop
mov
push
insb
pop
xchg
in
and
pusha
mov
daa
dec
sahf
jne
lods
mov
mov
movsb
dec
rcr
std
iret
cltd
or
add
hlt
rcrl
pop
inc
sub
cmpsl
stos
rolb
popa
inc
inc
scas
lock
cltd
jge
mov
xchg
and
ret
sub
outsl
aaa
cld
inc
jns
call
enter
mov
cmpsl
adc
jnp
mov
pop
mov
pop
ret
add
mov
cltd
inc
or
cld
ds
fimuls
push
dec
push
xchg
add
clc
test
xchg
mov
cmp
and
push
adc
xor
xchg
and
pop
xchg
ret
scas
push
dec
movsb
cwtl
and
mov
mov
and
cmp
xor
test
les
shl
jge
test
inc
subb
leave
push
jle
mov
jecxz
lods
cmc
insb
stos
icebp
mov
sar
sbb
imul
adc
mov
fidivs
pop
pop
sub
xor
stc
jnp
jbe
mov
stos
or
insl
inc
rcrb
stos
rorl
rorl
push
adcl
cmpsl
cmc
clc
dec
dec
lahf
inc
dec
mov
fldl
shr
ljmp
inc
outsl
scas
cmp
pop
add
and
outsb
aad
xorl
dec
add
in
dec
jmp
lock
adc
and
adc
adc
lods
mov
test
repz
in
leave
mov
xchg
cwtl
aaa
mov
js
popaw
fists
sub
or
dec
aam
xchg
xchg
fwait
and
lods
rolb
adc
cwtl
mov
add
aas
rclb
pushf
cltd
in
or
flds
push
out
cmp
lea
loopne
mov
add
or
dec
sbb
mov
xlat
pusha
push
lds
mov
clc
lahf
adc
push
inc
lea
inc
inc
shll
push
xor
dec
xchg
push
jnp
int3
xchg
int3
add
pop
and
pop
das
outsl
jo
daa
test
jno
mov
mov
jg
sbb
inc
xor
outsl
out
mov
fadd
and
jecxz
mov
aaa
and
stc
jmp
lret
aad
and
pushf
in
cmp
fsubs
sbbl
imul
inc
popa
jecxz
popa
in
test
fstps
stos
rep
lock
cs
add
sar
dec
mov
sbb
roll
rorb
mov
fnstsw
pop
inc
xchg
and
add
aam
mov
mov
or
js
cmp
bound
jmp
adc
xor
jne
push
push
sti
addr16
sub
xor
inc
jmp
rcl
xor
xchg
add
sub
or
ret
or
jge
push
cmc
xchg
xchg
mov
test
or
add
fisubs
adc
pushf
std
sbb
incl
mov
jae
rclb
jo
in
sti
into
sbb
or
add
jmp
popa
lea
test
and
jl
add
mov
jp
jb
and
rcrb
add
jns
fildl
mov
out
cltd
loop
jbe
lcall
sbb
neg
jecxz
fstp
movsb
dec
stc
faddl
push
mov
xor
cli
add
aam
scas
sbb
fisttps
enter
mull
imul
out
popf
test
mov
aam
cmp
cmp
add
mov
clc
divl
pop
stos
jle
rolb
sub
scas
xchg
pop
mov
loopne
lea
test
dec
das
arpl
aaa
add
and
insl
xchg
and
xchg
mov
imul
inc
lcall
push
rcrb
fisttpll
mov
pop
fbstp
inc
sub
push
jns
inc
in
adc
shlb
or
les
dec
pop
xor
loope
addr16
jnp
mov
xor
insl
movsb
pop
dec
iret
jns
lret
adcb
sbb
test
ja
lods
fdivs
scas
movsb
mull
xor
pop
sti
test
icebp
jp
mov
pushf
dec
sahf
cltd
ja
jo
inc
pop
je
jo
or
lods
push
loope
xchg
sbb
jno
gs
lea
test
push
in
adc
fildl
addr16
jnp
and
das
xor
xor
jb
out
in
mov
outsl
enter
and
dec
jae
adc
xor
mov
aas
lgs
lcall
push
xor
clc
cld
adc
sub
scas
or
dec
mov
mov
test
jne
xor
sbb
add
into
outsl
inc
hlt
aad
lret
mov
iret
inc
push
bound
push
xor
aas
add
lock
mov
mov
data16
jb
mov
lea
fidivrs
push
imul
lods
ss
jg
dec
mov
test
psubd
jno
aaa
adc
jg
popa
mov
repz
nop
mov
call
inc
shlb
xor
mov
rcr
lahf
cmpsl
inc
cli
or
stos
jg
stos
cltd
sbb
xchg
sbb
cli
nop
fdivs
clc
xchg
push
dec
jns
sbb
iret
cmpsb
insl
mov
arpl
inc
cmc
sbb
add
xchg
cmc
out
mov
data16
add
test
loop
dec
add
ficoms
std
in
dec
dec
push
or
push
push
mov
jbe
icebp
fcomi
in
xchg
cmc
xchg
and
dec
dec
jp
xor
out
xor
inc
into
loop
and
lret
jo
xchg
sub
mov
cmpl
pop
dec
pop
xchg
mov
sbb
push
mov
jns
adc
js
lods
sub
pop
scas
or
cli
movsb
je
add
mov
add
ret
push
xchg
sub
add
int3
add
addr16
stc
inc
ficomps
mov
xchg
push
nop
mov
lods
or
icebp
cmpsl
dec
fisttpl
mov
enter
sarb
mov
adc
lds
int3
lods
add
push
mov
jns
repz
daa
cltd
xchg
cld
mov
in
fsubl
xchg
mov
setne
lea
sbb
shl
fwait
std
jp
and
cmpsb
mov
pop
sbb
xorl
mov
cli
pop
rcrb
test
cltd
subb
lahf
jns
bound
mov
pop
jbe
fs
stos
stos
scas
push
pop
ja
pusha
dec
repz
cltd
pop
ja
in
inc
xchg
ds
inc
jno
mov
dec
pop
jecxz
sub
shr
aaa
out
rcrl
cmp
mov
aad
mov
sub
push
shll
cwtl
ja
sbb
bound
fistl
jmp
cmp
add
insl
popf
mov
inc
adc
cmp
sahf
xor
or
cwtl
fsub
and
pusha
xor
icebp
popf
push
mov
dec
jg
inc
mov
insb
rorl
bound
mov
bound
mov
insb
jge
iret
jo
sbb
sarl
jle
in
xchg
arpl
push
fisubl
or
adc
jne
mov
int
sbb
pop
ljmp
fnsave
jge
push
into
loopne
outsb
frstor
sub
mov
fstpt
daa
inc
mov
or
mov
or
test
or
adc
lret
mov
xor
hlt
fistl
mov
in
cmp
popf
jno
imull
stc
sub
arpl
notb
add
loopne
pop
push
imul
adc
stc
insb
push
test
out
fidivrl
jl
clc
mov
sub
out
fdivrp
cmp
xchg
pop
jl
push
inc
jbe
dec
stos
and
loop
adcl
push
xor
sbb
xor
cmpsb
scas
fists
mov
inc
test
rorl
push
cmpsl
cmpl
insb
add
jno
pop
out
arpl
mov
mov
sub
lahf
repz
push
xchg
push
imul
imul
jecxz
push
dec
mov
in
sub
mov
jp
or
add
loope
push
and
aaa
xchg
xchg
gs
fiadds
scas
pop
and
aam
lods
mov
loope
sub
negb
xor
loop
adc
or
pop
sub
push
fnstsw
jp
xchg
or
lock
mov
add
push
cmp
lea
sub
jne
or
push
pop
data16
cmpsb
adc
pushw
repnz
pop
cltd
adc
fildl
dec
xchg
adc
fnstcw
bound
js
call
mov
mov
cltd
or
jl
mov
xchg
jo
adc
lods
mov
rclb
cwtl
add
out
loope
jecxz
xchg
mov
mov
sbb
pop
loopne
addl
inc
notl
pop
outsb
mov
aas
mov
inc
leave
or
inc
push
out
and
lods
test
jnp
shll
jg
xchg
shll
adc
iret
fmulp
popa
fisttps
lods
sahf
cmp
push
lahf
pop
cmpsb
aam
dec
imul
ds
cmpsb
push
inc
test
pop
aam
mov
stc
mov
in
xchg
mov
mov
adc
test
das
scas
xchg
mov
mov
mov
aas
in
inc
fdivrs
xchg
sub
lret
insl
jae
jbe
inc
jb
hlt
xchg
adc
aas
dec
cmp
mov
jo
fsin
push
arpl
push
inc
aad
mov
xor
push
cmp
fdivrl
call
mov
in
cmpsb
insl
pop
out
les
mov
sbb
dec
mov
movsl
popf
push
add
pop
pushf
cmp
push
cmpsb
pop
sbbb
stos
sbb
imul
scas
sbb
sub
addr16
xor
dec
sub
movsl
and
aad
inc
outsb
js,pt
sub
mov
or
stos
push
cmpsl
adc
add
out
cmc
inc
add
out
pop
loopne
jo
jnp
pop
adc
cmc
push
dec
sar
cltd
fisttpl
dec
push
das
loope
fcmovne
push
push
enter
rolb
adc
push
in
pop
jne
mov
call
jno
stos
and
xlat
mov
or
or
add
js
jl
push
xor
nop
sarl
mov
or
in
xchg
jl
xchg
cltd
icebp
xchg
lods
inc
push
pop
sahf
lahf
push
xchg
pop
jp
and
add
outsb
iret
adc
scas
jg
movl
and
push
inc
xchg
or
fdivrs
xlat
mov
sbb
jge
fucomi
cli
imul
xchg
shrb
inc
popf
out
push
lret
push
mov
xlat
mull
xor
adc
pop
mov
inc
adc
mov
loop
pop
hlt
push
dec
push
outsl
pop
pop
xchg
jno
mov
out
and
xor
and
int
xchg
fs
mov
sar
pop
push
push
jb
data16
dec
into
imul
inc
clc
dec
pop
out
nop
jbe
loope
dec
push
sbb
and
jns
fists
sub
xchg
adc
dec
dec
nop
insb
sahf
hlt
ret
inc
arpl
sbb
fisubrs
test
push
xlat
fists
fmuls
gs
imul
rcrb
inc
dec
xor
add
popf
cli
incl
pusha
xchg
cld
or
in
jge
inc
xlat
pusha
mov
or
sbb
in
jle
in
call
jnp
mov
mov
mov
and
sbb
jne
xor
insl
pushfw
push
mov
xchg
fcomip
mov
mov
adc
mov
loope
or
inc
dec
scas
add
adc
int3
fidivrl
cmpb
ret
or
paddusw
int3
mov
mov
notl
call
icebp
sbb
adc
loop
inc
icebp
mov
aaa
into
das
mov
dec
jnp
pushf
rclb
imul
jle
jbe
adc
dec
fiadds
adc
xlat
mov
and
cltd
fisttps
shrb
and
push
jno
shlb
pushf
std
xor
int
cli
in
push
adc
int3
test
pop
insb
mov
js
mov
pusha
push
cltd
jb
jne
push
iret
pushf
inc
jecxz
jne
shll
mov
jp
xor
mov
sub
mov
lock
icebp
sub
aam
out
cmp
movl
ss
or
and
cs
jmp
stos
sub
pushw
lea
push
inc
mov
xor
mov
adc
inc
cmpsb
sub
cmp
das
shll
in
sahf
sbb
inc
inc
aas
and
push
inc
mov
mov
aad
fstl
mov
mov
imul
mov
xor
inc
sbb
or
cmpsb
faddl
out
mov
or
leave
add
into
sbb
sbb
mov
stos
inc
cmp
dec
test
xlat
loope
sbb
or
das
or
outsb
pushl
iret
ds
ret
add
int
sti
pop
enter
dec
lahf
add
add
movsb
cwtl
jns
pop
mov
lahf
mov
dec
adc
push
stos
or
cmpsl
out
or
fcoms
mov
aam
mov
lods
dec
dec
ss
push
fsts
iret
jbe
cmp
and
in
cltd
loope
dec
sub
clc
xor
lock
lret
cwtl
mov
cwtl
fcmovnu
add
ret
pushf
fcmovu
inc
repz
in
int3
test
pop
lahf
sub
pop
jb
test
shrb
xor
loope
dec
xor
jnp
sbb
movsl
pushf
push
out
sub
test
popf
nop
int
lahf
das
outsl
add
pop
or
and
inc
cmp
cwtl
inc
scas
jg
mov
mov
sbb
sbb
scas
xor
mov
call
cwtl
pop
mov
mov
in
mov
scas
das
ja
insl
add
mov
cmp
sahf
or
iret
test
mov
cmpsl
ficomps
out
decb
sbb
pop
mov
and
movsl
mov
inc
or
out
cs
mov
mov
nop
add
fsubl
inc
pop
inc
stos
lcall
popf
in
aad
leave
clc
jmp
mov
add
push
icebp
fbstp
sahf
adc
mov
fidivrs
lret
orl
or
sub
dec
push
fists
push
sbb
pop
test
stos
inc
or
and
std
cmpsl
gs
or
sbb
push
js
cmpsl
lret
inc
inc
and
lods
sbb
dec
iret
sbb
outsl
scas
mov
das
lds
out
lock
inc
popf
sbb
pop
test
popf
inc
scas
imul
addb
cwtl
jp
pop
clc
adc
fnstcw
xchg
fadds
mov
arpl
xor
mov
ret
aad
sub
dec
push
rcl
dec
lahf
dec
out
aaa
mov
lret
cmpsl
das
add
inc
subl
or
sbb
test
xor
loope
push
or
inc
push
imul
or
outsl
jne
xor
mov
xor
pop
call
test
jmp
cmp
cmp
and
or
adc
aam
mov
into
fidivrl
fnstsw
jp
push
or
pop
arpl
aaa
add
lds
xlat
mov
cltd
cmc
push
and
std
mov
lcall
xchg
leave
jb
cmp
xchg
adc
sbb
mov
ja
add
jae
mov
or
jnp
mov
std
jb
pop
dec
test
das
jae
or
icebp
stc
out
cmc
sub
in
sub
test
cmp
xlat
imul
dec
cmpsl
mov
and
lods
or
xor
cs
jecxz
shlb
imul
ret
fistpl
mov
jl
imul
pop
cmpsb
pop
mov
cwtl
pop
or
ds
fisubrs
pop
dec
cs
sub
mov
in
xor
pop
push
mov
xchg
in
loope
or
leave
lahf
nop
pushf
aaa
ror
ret
push
aaa
mov
jmp
popa
xlat
add
lods
add
mov
sub
imul
cli
gs
out
xchg
fdivl
jg
push
ljmp
movsb
test
sbb
mov
sub
xchg
rcll
xchg
insb
adc
mov
ud2
popf
pop
pop
jno
fisttps
sahf
mov
push
cmp
incl
sarb
cmpsb
mov
or
mov
dec
imul
hlt
mov
jg
push
mov
rol
pop
in
popf
sbb
sbb
or
test
add
jge
add
rclb
jno
mov
pop
mov
scas
aam
pop
pop
pop
leave
mov
mov
adc
and
xlat
nop
ficompl
rcr
adc
xchg
imul
fiadds
xchg
sub
repnz
mov
scas
mov
dec
and
cmpb
dec
imul
std
test
inc
jne
sbb
adc
daa
popf
in
or
inc
fstps
fistps
pop
in
inc
pop
scas
and
mov
add
addr16
fistpl
mov
sbb
sub
loop
adc
jns
jmp
in
jle
mov
js
lahf
push
lods
cltd
jmp
imul
inc
mov
and
inc
inc
mov
lret
int
pop
or
xchg
mov
lods
lea
sub
pop
rcrb
lods
dec
test
fcmovnb
xor
dec
jmp
push
std
jmp
in
and
adc
fdivs
lods
pop
cltd
adcb
push
pop
cli
loop
adc
pop
mov
mov
xchg
jle
or
ja
mov
rorl
std
lods
insl
xor
lds
shlb
fadds
pop
xchg
jne
pusha
insb
arpl
cmp
jl
rcrl
insb
pop
push
sub
scas
jns
pop
mov
inc
fcmovbe
mov
ja
int3
pop
or
jp
adc
mov
subb
fcomps
mov
mov
ret
jnp
into
mov
jl
mov
add
sbb
les
sahf
fildl
sbb
cmc
gs
stos
rcrb
sbb
push
mov
imul
and
in
mov
insb
push
fsubrl
das
arpl
addr16
push
jne
mov
jp
and
in
lret
int
push
add
adc
cmp
mov
loope
aas
cltd
jbe
jne
add
push
dec
ss
jno
cmp
mov
cmp
dec
popf
pop
lods
jno
arpl
dec
rorl
inc
call
inc
dec
mov
sbb
mov
mov
cltd
adc
push
test
xlat
in
cli
cmp
push
dec
sub
sbb
imull
lcall
push
cmp
cmp
jns
out
mov
das
xlat
sbb
mov
stc
iret
ds
and
pop
and
daa
int3
add
daa
leave
add
inc
in
pop
cmp
ror
and
std
adc
je
xor
xor
lcall
lock
sbb
xchg
fucomp
mov
push
iret
or
cltd
dec
data16
push
mov
popw
mov
rcrb
mov
add
pushf
dec
jecxz
scas
adc
sbb
and
movsb
jmp
roll
cmp
gs
pushf
push
or
xchg
mov
sub
nop
scas
jo
and
mov
ss
adc
data16
testl
cmp
and
jb
mov
or
aas
lahf
and
mov
sub
pop
or
mov
fwait
aad
mov
dec
and
movsl
sub
into
inc
xchg
btc
pop
loop
xlat
mov
scas
mov
roll
and
mov
lods
mov
mov
xor
jae
pop
mov
cld
mov
aam
mov
add
dec
ss
or
cmpsl
mov
xlat
xor
or
mov
pushl
xchg
jmp
ljmp
aad
outsb
pushf
or
xlat
mov
loopne
mov
scas
in
mov
aas
movsb
mov
lods
subw
cwtl
cltd
push
aaa
push
in
inc
fucomi
adcl
jnp
fstl
in
dec
lcall
mov
lcall
fstl
std
or
jl
aas
pop
mov
lea
adc
mov
in
sbb
mov
out
push
push
test
aaa
out
jmp
pop
mov
inc
and
cmp
mov
clc
jg
mov
out
jmp
fnsave
push
inc
mov
repnz
repz
add
mov
mov
out
neg
dec
xchg
subl
lods
pusha
push
pop
lret
imul
add
mov
insb
adc
dec
les
pushf
ret
das
es
mov
inc
sbb
pop
lds
data16
and
jb
dec
sbb
insl
or
xor
xor
daa
inc
jmp
jle
fiadds
pushf
repz
adc
adc
jp
inc
cmp
cmpsl
jge
push
xchg
xchg
sbb
je
cmp
outsl
sbbb
mov
pop
out
and
jmp
stos
leave
pop
xor
mov
clc
or
sub
mov
lock
push
or
pop
cmpsl
aad
adc
mov
divl
cmp
dec
and
cwtl
cs
mov
pop
mov
je
aad
movsb
jle
sbb
in
lock
add
mov
jb
push
sbb
dec
js
dec
inc
movsl
dec
lret
enter
mov
arpl
sbb
rcrb
repz
cmp
mov
cmpsl
xor
movsb
jl
iret
js
cwtl
sub
jg
sbb
sub
fidivs
sub
out
push
xchg
xchg
pop
ret
xor
dec
imul
or
mul
pop
jb
xor
cltd
hlt
pop
pop
in
clc
test
aas
mov
cltd
loop
shll
lods
pop
fistpl
pop
leave
mov
mov
push
divl
dec
inc
cwtl
xchg
pop
jge
lods
mov
scas
test
mov
inc
dec
loope
mov
cs
sbb
inc
lock
imul
test
imul
pushf
jmp
push
dec
test
jns
mov
test
cwtl
imul
and
mov
enter
xchg
nop
scas
cmp
pop
add
push
imul
sti
mov
dec
cmp
xor
loope
scas
add
inc
pop
jns
aam
mov
in
or
inc
rcll
xchg
dec
push
cltd
or
pop
popf
push
enter
test
mov
mov
rorl
loope
sub
mov
test
add
xchg
mov
adc
mov
imul
dec
dec
push
outsb
push
and
popf
jl
rep
add
cmp
pop
pop
mov
push
je
sub
sahf
pop
sbb
and
popf
cmp
andl
jo
sbb
stos
mov
mov
xor
fwait
loopne
cli
fildl
push
xchg
stos
or
lret
pushf
cmpb
adc
adc
out
loopne
push
add
pop
shll
stc
inc
mov
xor
mov
pop
sub
xor
lods
repnz
pop
inc
movb
sti
pop
mov
mov
cmpsb
dec
fldt
lahf
addr16
cmpsl
xorl
aas
out
push
cmp
pusha
inc
cmp
sub
rclb
add
movsl
pop
push
in
aaa
sahf
ljmp
cltd
mov
xor
mov
ds
xorb
jmp
xchg
fcmovbe
fbstp
jle
in
ret
or
scas
mov
mov
jl
ret
cmp
or
in
fs
xor
inc
dec
jo
dec
inc
jb
test
add
js
and
and
pusha
jp
push
orl
adcb
push
shrl
dec
xor
nop
xchg
mov
fwait
in
cmp
and
lcall
pop
sbb
push
fs
jae
ja
nop
lods
inc
jecxz
jg
ja
jo
inc
enter
dec
subb
cmpsl
add
gs
pop
sub
pushf
sahf
jmp
inc
addr16
inc
mov
dec
or
jmp
in
xor
jl
movsb
adc
cwtl
cmp
adc
jp
int
mov
jbe
repz
sub
or
ja
in
mov
xor
sbb
mov
and
jb
cmp
or
jno
into
js
xchg
and
add
cli
dec
in
test
mov
divb
cmc
pop
dec
cmpsl
push
push
xchg
ror
jecxz
mov
lret
call
push
int3
ljmp
addr16
mov
hlt
fldl
les
scas
in
sbb
xor
addr16
fwait
jae
push
jle
jno
dec
mov
int3
repnz
xchg
add
or
xorb
cs
test
pop
rol
dec
push
stc
scas
mov
xchg
pop
insb
sbb
mov
add
dec
dec
fisubs
out
sysret
add
pop
das
add
fidivrl
xor
xchg
push
popf
cmovae
sub
ret
imul
sub
pop
dec
add
mov
icebp
add
loopne
sbbb
idivb
adc
pop
test
lds
push
pop
movsb
int
cmpsl
mov
cs
sbb
imul
cmp
push
gs
lahf
push
push
lods
push
add
ret
negl
inc
aas
xchg
roll
jns
push
lods
and
data16
mov
pushl
xchg
arpl
jge
call
cmp
fwait
shrb
fldt
add
mov
cwtl
data16
push
out
dec
pusha
jle
sbb
je
sub
call
adc
mov
out
lods
dec
adc
cmp
scas
or
movsl
inc
xor
sbb
and
push
xchg
les
mov
sbb
sub
enter
and
fnstsw
sbb
push
aam
add
pop
mov
scas
cmp
mov
js
in
adc
xchg
jp
adc
sbb
mov
sbb
insl
mov
mov
dec
inc
pop
aam
fwait
mov
test
stc
pop
ss
mov
pop
imulb
sub
in
sub
xchg
aas
cmp
jns
dec
mov
popf
lock
fisttps
jnp
pusha
xchg
mov
dec
and
sub
sbb
cltd
mov
xor
sub
lcall
and
jne
ja
test
les
add
pop
js
or
sbb
mov
mov
xorl
xchg
jp
or
pop
pop
stos
repz
daa
xor
out
rorw
pusha
icebp
mov
sub
lods
mov
and
lret
aad
das
adc
fists
fisttpll
add
sarl
and
mov
fidivrs
pop
leave
popf
adc
and
jae
jae
jle
lret
cmp
lods
out
or
cli
fiaddl
nop
stos
test
in
jle
jnp
xor
or
leave
jnp
cmp
mov
xlat
stc
add
lea
int3
or
fdecstp
jg
pop
jae
lds
pop
testl
aam
cli
adc
test
iret
fimuls
and
push
cmp
push
mov
cmc
shlb
jle
add
mov
or
out
js
inc
mov
fisubrs
pop
add
add
jns
xlat
pop
add
neg
cmc
adc
enter
push
fwait
call
jns
lret
cmp
sahf
xchg
scas
out
xor
mov
pop
out
outsb
jl
adc
xor
aad
lods
icebp
aas
sahf
outsb
ret
mov
int
lock
xor
popf
dec
inc
subl
mov
cmp
pop
jg
pop
sub
mov
rcll
xchg
ja
inc
and
push
push
jmp
lds
ds
jl
aas
imul
mov
mov
mov
adc
lea
sub
loopne
adc
outsl
or
pushf
push
lret
fsubs
sub
cmp
out
int
insl
int3
push
adc
sbb
pop
push
cwtl
inc
aas
or
lds
shll
jecxz
jmp
decl
jg
dec
xor
insl
push
int
mov
or
jmp
fadd
js
addl
ret
mov
pop
lea
pop
fidivrs
xor
pop
and
into
pop
mov
pop
movsl
fldl
dec
sahf
fdivr
add
jo
and
push
dec
scas
popa
inc
pop
ja
movswl
ret
jecxz
push
fdivr
xchg
ja
jmp
in
bound
jp
sar
inc
xchg
adc
add
push
sarl
push
imul
push
xor
ja
pop
sti
xchg
pushf
das
xchg
ljmp
mov
shlb
cmc
insb
sub
into
or
inc
xchg
inc
mov
inc
lret
jno,pt
pop
inc
sub
or
cmp
and
scas
outsb
inc
adc
sbb
mov
add
popf
hlt
pop
cmp
loope
aaa
push
push
orl
and
sahf
les
test
loop
popf
test
into
iret
insl
imul
lods
out
or
cwtl
xor
push
push
pop
add
lret
outsb
sub
xor
jmp
and
sbb
int3
jp
int
sbbb
fstpl
sbb
nop
mov
fld
mov
add
xor
cwtl
jmp
and
shrl
jne
sbb
dec
jle
mov
mov
xchg
fidivl
pop
inc
sbb
push
pop
mov
mov
nop
jle
fdivs
jp
out
gs
adc
mov
fsubrs
and
iret
sub
nop
xchg
mov
insb
xor
push
lods
in
nop
scas
xchg
pop
or
dec
pop
cmc
and
imul
or
xor
push
pushf
test
pop
fcmovb
aam
arpl
test
test
jmp
rclb
sbb
cmp
cmp
pusha
popa
cmp
or
xchg
mov
sub
xchg
pop
cmp
jle
fnstenv
stos
lods
adc
fsts
scas
pusha
repz
ja
shlb
ss
fldcw
into
imul
vmovq
ffreep
mov
ret
ret
test
ljmp
push
sbb
scas
movsw
sub
aam
cli
cmp
into
and
sbb
dec
dec
imul
scas
dec
dec
xchg
mov
outsb
push
les
arpl
xchg
and
jo
pop
lret
je
push
std
or
jns
in
notl
and
pop
push
push
dec
mov
dec
test
or
popa
fisttps
add
jo
rol
jae
add
test
jne
or
pop
or
dec
fdivr
xlat
inc
push
sub
sbb
xor
mov
mov
and
adc
mov
add
dec
add
mov
mov
pop
cmpl
icebp
push
out
sub
loope
lea
orl
shlb
imul
xchg
movsl
ss
enter
ja
je
lret
rcrb
repnz
and
inc
decb
fwait
and
shlb
fisubl
cmp
xchg
inc
pop
jmp
lods
leave
punpckhwd
dec
dec
xor
out
shl
dec
jns
insl
jnp
adc
mov
imul
cmp
push
std
lds
xor
xchg
mov
cwtl
lahf
add
cmp
push
fldcw
stos
fcomps
jns
shl
int3
pop
test
pop
testl
cmpsb
popa
jns
xor
xor
dec
mov
cmp
add
xchg
inc
adc
mov
xor
scas
mov
dec
sub
and
fistpll
xlat
nop
mov
mov
mov
xchg
sahf
mov
popf
lret
mul
inc
call
ljmp
or
fcmovbe
jmp
in
inc
shrb
xor
inc
mov
xor
loop
pop
je
and
xor
jnp
add
inc
fcomps
sub
jno
push
scas
daa
test
dec
jno
mov
cltd
loop
std
outsb
sbb
shl
dec
mov
bnd
cmp
aaa
adc
pop
and
push
pop
dec
and
xchg
cmpsl
sbb
das
push
insl
pop
or
cmp
jns
pop
lock
fsubs
mov
movsb
lods
adc
xor
mov
inc
aas
les
lahf
stos
aad
mov
pop
test
loopne
dec
mov
xor
xchg
xchg
pop
lcall
mov
dec
mov
repnz
cwtl
subl
pop
xor
sub
fstl
inc
inc
cmp
mov
outsl
cs
jp
iret
pusha
adc
rorl
cltd
lcall
or
cmp
mov
pop
bound
cltd
xor
popf
inc
repz
mov
xor
xchg
xchg
push
scas
test
popa
ret
sub
aam
xchg
jno
data16
push
cwtl
loopne
mov
mov
popf
imul
mov
gs
mov
xchg
scas
jo
mov
lods
aas
adc
outsl
test
loope
nop
and
xor
inc
inc
fstp
cld
xchg
scas
ss
lret
jnp
cmp
js
cmpsl
lea
rcl
push
inc
mov
fs
push
push
icebp
aam
mov
and
dec
jnp
fists
add
in
mov
lret
ljmp
lds
shlb
int
mov
imul
inc
sbb
mov
sbb
lret
mov
ficoms
mov
push
in
insl
inc
ficoml
adc
arpl
or
xor
imul
int3
pop
jmp
pop
sbb
cmpsl
mov
int3
push
sbb
int3
xor
jbe
enter
les
add
fdiv
sub
cmp
stc
test
or
stos
movsl
icebp
jl
push
add
leave
xor
push
xor
pushf
xchg
js
fdiv
xchg
cmp
cld
stc
and
adc
scas
push
test
xchg
mov
int
bound
into
imul
mov
push
orb
adc
mov
add
imull
lds
push
rcrl
leave
js
dec
popa
inc
adc
into
call
jb
inc
xchg
aaa
xor
adc
rorl
scas
mov
mov
cld
add
mov
jle
lods
adc
addr16
test
push
ficomps
aas
mov
mov
mov
push
jo
and
fisttpll
dec
xor
inc
lods
push
sbb
repnz
ljmp
jle
fisubrs
sarb
push
jo
mov
roll
pop
or
and
pushf
add
add
pop
mov
mov
or
in
lea
popa
cmp
es
stos
xchg
or
lahf
ficomps
je
xchg
loope
push
pop
xor
test
mov
pushf
popa
xchg
clc
cli
arpl
cwtl
cwtl
mov
in
dec
jo
or
or
add
fdivl
cmp
inc
std
fisttps
dec
dec
pop
cltd
cmpsl
imul
enter
mov
outsb
stos
cmp
ret
xchg
dec
and
xorb
adc
ret
sti
aaa
xor
push
lods
mov
jl
lock
fcomp
jno
push
stc
stos
insl
std
and
pop
rcll
sbbl
stos
repnz
sub
mov
add
fcmove
insl
fmul
je
mov
fstps
xor
xor
jo
js
jnp
xor
dec
mull
pop
imul
sbb
outsl
pop
dec
mov
scas
imul
test
mov
push
inc
push
mov
testl
aad
xor
mov
xchg
popf
or
pop
loope
fsubp
in
mov
into
push
ljmp
xchg
sbb
jecxz
iret
pop
scas
push
ret
mov
fcmovb
sarb
pop
test
mov
sub
xor
stos
ret
fcoms
mov
mov
jmp
mov
sbb
mov
aaa
imul
in
imul
cmp
xchg
repz
mov
insl
scas
insb
fwait
dec
fwait
lret
into
pushf
ficomps
jge
test
lret
sbb
lea
sub
shlb
mov
je
add
push
int3
out
mov
xor
in
test
adc
cltd
mov
mov
dec
cmp
push
xchg
mov
je
dec
xchg
and
pop
repz
mov
in
jecxz
xor
mov
adc
mov
lahf
jg
mov
and
aam
jp
stc
daa
xchg
jmp
testl
or
test
push
pop
pop
lcall
xor
enter
mov
scas
pop
test
repnz
inc
test
aam
das
lds
mov
mov
sub
lods
sub
inc
scas
aas
daa
test
mov
mov
cmpsl
add
test
push
ljmp
mov
leave
push
repnz
cmpsl
test
out
das
in
aam
fmuls
inc
test
adcb
adc
sbb
jmp
mov
mov
adcb
je
test
jne
addl
test
hlt
das
jnp
fidivl
mov
fsubrs
addr16
jno
fld
dec
inc
mov
call
into
cltd
jae
stos
arpl
jo
mov
dec
or
sahf
xchg
mov
jne
or
pushf
imul
sub
stos
jmp
aam
adc
sbb
dec
outsb
cwtl
jmp
xchg
test
mov
push
sbb
xchg
dec
stc
sbb
stc
mov
xchg
jnp
out
dec
jo
insl
jbe
shr
popf
ds
sti
or
inc
loope
xor
divps
clc
jmp
mov
adc
cmp
sub
leave
jno
sub
mov
xchg
lahf
mov
xchg
lea
stos
fsubr
out
lret
andl
ss
out
cmpl
out
into
jne
mov
into
inc
cmp
movsl
sub
stc
roll
incb
push
std
mov
push
push
sbb
inc
add
push
popf
sub
or
lea
cmpb
xchg
sbb
out
cmp
xor
push
lds
mov
mov
mov
ds
and
inc
and
cmp
es
mov
sbb
mov
xor
mov
or
mov
xor
mov
pop
or
adc
aam
jecxz
fistpl
xchg
adc
aaa
push
or
loopne
outsb
cmp
push
sahf
loope
inc
cwtl
xchg
es
icebp
cmc
arpl
shl
mov
or
lahf
repnz
adc
xor
hlt
xchg
into
rcrb
cltd
mov
pop
popf
in
fisubrs
sbb
sbb
icebp
std
sahf
movsb
jno
push
sbb
mov
sbb
mov
popf
cmpsb
sahf
or
mov
inc
lea
dec
cmp
mov
test
jno
or
call
push
jp
daa
in
and
push
xor
aam
or
xor
or
pop
outsb
dec
data16
insl
repnz
jb
inc
data16
out
insb
mov
jo
or
fdivl
loop
lock
adc
dec
sub
sub
clc
xor
out
call
inc
push
aam
add
arpl
ret
ror
jo
add
clc
ljmp
loope
push
cmpsl
xor
inc
jecxz
or
add
mov
xchg
imul
inc
mov
push
dec
stc
aad
stc
mov
xor
imul
adc
xor
std
jle
sub
xor
int3
lock
xor
in
lods
adcb
aas
decb
out
xor
hlt
adcb
sbb
hlt
add
movsb
adc
adc
ret
mov
mov
adc
popf
iret
ja
cli
push
outsb
jae
mov
mov
fisubrs
sbb
loop
movsl
xor
cmp
repz
add
out
mov
mov
mov
sbb
ficoml
mov
cwtl
mov
out
cld
inc
mov
sub
fs
int3
repz
cmp
aad
inc
in
lods
bound
sbb
mov
push
cmp
dec
fcoms
test
xor
int
jns
dec
loopne
cmp
retw
loopne
cs
jge
es
fsubrs
cltd
call
add
pop
scas
push
xchg
push
ljmp
push
mov
mov
out
lret
pop
mov
pop
pushf
xchg
cmp
orb
pushf
mov
xchg
out
adc
iret
add
popf
pushf
mov
sbb
push
dec
push
idiv
xchg
mov
mov
mov
inc
mov
sub
mov
rclb
jns
stos
xchg
test
hlt
decb
inc
mov
xchg
push
decl
outsl
jecxz
xor
addb
pop
mov
shll
mov
enter
pop
lea
movsl
mov
xchg
in
add
inc
mov
nop
push
sti
mov
clc
or
mov
adc
push
roll
xchg
rcll
dec
inc
in
pushf
or
out
lcall
fimull
std
lock
fsubrs
xchg
jge
test
xor
outsl
inc
mov
mov
outsl
mov
ret
add
jne
pop
jno
repz
pop
sub
adc
hlt
arpl
xchg
mov
aaa
inc
push
cltd
arpl
iret
std
scas
fists
jnp
int3
push
scas
adc
out
fwait
aam
and
mov
or
rcll
mov
cs
fwait
adc
insl
dec
movsb
out
sbb
lock
sub
adc
push
or
stos
mov
ds
fnstcw
jo
out
inc
xor
xchg
insb
jmp
sbb
adc
xchg
pop
ret
out
rolb
or
sub
xlat
shrb
inc
fsubrs
jns
adc
mov
imul
push
cli
mov
mov
loopne
arpl
dec
cmc
cli
cmp
jle
in
mov
orl
pop
xchg
adc
outsl
lock
or
adc
push
mov
inc
scas
sub
lahf
pop
cmp
mov
shr
mov
cld
out
ficomps
mov
add
pop
jnp
cmpsb
inc
push
lahf
sub
push
dec
lret
gs
xchg
dec
and
lcall
push
dec
shl
repz
jae
orl
loope
fiaddl
mov
int
adc
jg
nop
shrl
add
fs
adc
icebp
push
fstps
movsb
mov
jnp
pop
cmc
adc
ljmp
dec
cltd
mov
mov
ret
imul
in
scas
jle
ja
inc
mov
aad
outsl
sbb
mov
push
rcr
subb
cmpsl
test
cld
pop
out
dec
lcall
xchg
cmpl
ret
addr16
pop
sahf
jp
ja
movsl
xlat
cmp
dec
stc
mov
inc
add
xchg
sarl
fdiv
pop
daa
scas
xchg
xchg
rcrb
pop
cltd
lds
cld
jl
lods
loop
loop
mov
sti
pusha
test
daa
inc
scas
enter
ret
decb
jne
cmp
push
jo
outsl
cwtl
ret
leave
mov
sbb
push
or
or
call
jmp
std
xchg
sahf
pop
lcall
xlat
cwtl
lods
ljmp
repnz
clc
lods
mov
das
aam
add
or
in
cmp
test
popf
cmpsl
mov
out
or
pop
cmp
ljmp
mov
dec
pop
add
sahf
push
out
cmp
pop
and
bound
adc
sahf
xchg
push
lods
push
mov
push
mov
out
inc
test
test
lcall
stos
or
push
mov
jnp
incl
jge
or
push
jae
out
ret
add
testb
in
dec
xlat
pop
mov
pop
fldenv
xchg
ja
iret
inc
add
pusha
lret
pop
add
outsb
sbb
dec
pop
mov
inc
cmp
jecxz
mull
inc
lahf
in
bound
arpl
jle
jae
fwait
popf
dec
and
sub
add
sbb
mov
mov
inc
fwait
mov
pop
and
int
and
addb
cmpsb
outsl
into
pop
int
stc
sbb
lock
int
jo
mov
out
push
mov
inc
adc
jecxz
mov
inc
or
push
out
shr
push
mov
aaa
add
and
int3
dec
cmp
outsl
ret
xchg
and
pop
adc
xchg
aas
mov
jmp
rep
xlat
xchg
push
xorl
adc
mov
or
push
xchg
mov
mov
sub
xchg
stos
adc
mov
push
jae
or
lcall
sub
shr
aas
push
mov
dec
pushf
insl
pop
popf
cmpsl
mov
mov
adc
sub
lret
add
jb
aas
mov
pushf
jne
inc
push
push
scas
push
sub
cmp
cmpsl
dec
mov
mov
lret
inc
movsl
call
ja
cltd
dec
lods
or
xchg
stos
push
addl
sbb
ds
mov
fisttps
xchg
and
mov
cltd
cmp
loop
add
add
mov
cmc
test
rclb
fimull
dec
rolb
rolb
ftst
test
cmp
push
jl
sbb
jg
adc
mov
xchg
ret
cs
sahf
test
popf
imul
dec
rorl
cmp
push
sti
iret
or
sub
or
and
testl
fidivl
testb
push
xchg
stos
rolb
incb
testl
xchg
jne
insb
mov
imul
add
xlat
insb
pop
movsl
scas
xchg
scas
scas
mov
jmp
jns
lahf
mov
test
sub
add
dec
mov
pop
call
lahf
fcmovb
push
add
sbbb
lret
ljmp
jp
sarb
sub
sub
aam
mov
xchg
cmp
pop
jnp
dec
jl
pop
fcmovnb
adc
mov
cltd
imul
pop
inc
mov
nop
adc
cmp
dec
loopne
add
pushf
inc
push
add
jp
fs
inc
repnz
cmp
xchg
lock
ja
and
mov
mov
adc
stos
lods
mov
or
dec
cmpsl
in
xchg
jno
mov
push
jnp
push
sbb
and
or
inc
addr16
pop
xchg
call
inc
pusha
pop
out
in
push
cld
js
pushf
mov
fcom
jmp
mov
mov
fyl2xp1
out
or
lret
and
mov
sarb
jae
int
into
lret
push
nop
jg
inc
jns
hlt
divl
fcompl
xor
inc
mov
adc
inc
mov
faddl
pop
ret
add
or
mov
push
sahf
out
in
imul
dec
into
adc
ret
shlb
pop
jne
scas
inc
add
add
pop
mov
sarb
fldcw
xor
repnz
sub
jg
rcll
fwait
push
ficoms
or
ljmp
pusha
or
jle
insl
xorb
fdivs
into
xchg
aam
adc
stc
cwtl
push
dec
inc
movsl
mov
fistpll
test
sti
std
test
sarb
ficompl
inc
mov
loop
inc
fsubr
inc
popf
pop
sub
iret
mov
mov
sbb
movsb
fmuls
mov
lock
nop
dec
and
inc
push
mov
xor
dec
cmp
mov
call
insb
lods
aad
xchg
into
dec
fs
mov
test
scas
cmovl
xchg
int3
and
add
sbb
fsubrl
xchg
imul
lock
cmc
xor
imul
and
pusha
fadds
shlb
jbe
adc
jns
loope
mov
xor
or
fwait
and
xlat
jecxz
sub
jl
mov
lock
xchg
popa
aaa
inc
sbb
or
movsl
into
addr16
push
in
jmp
jg
negb
sub
ret
pop
inc
mov
pop
movsl
ljmp
movsb
leave
das
push
stos
push
push
test
xchg
aam
mov
ret
hlt
mov
ror
rorb
cmp
daa
fs
sbbb
mov
xor
out
dec
xchg
inc
insl
mov
test
and
loop
jg
add
ffree
stc
mov
xchg
dec
stos
mov
stos
push
mov
sbb
stc
sbbl
mov
in
idivl
dec
lcall
adc
pop
cmc
in
sub
das
mov
mov
mov
dec
mov
cwtl
insl
push
jae
and
mov
fxch
cs
call
mov
mov
addl
adc
aad
lea
pop
xchg
mov
push
mov
iret
mov
and
rcll
in
ljmp
ret
push
nop
stos
xchg
pop
mov
jecxz
sbb
stos
bnd
cwtl
jmp
dec
ret
mov
adc
vpaddd
repz
pop
cltd
push
pop
add
bound
dec
mov
pop
or
aam
push
movsl
mov
jp
jns
aad
fistpl
mov
inc
mov
xor
loopne
imul
fists
dec
leave
movsb
into
lods
cmpsb
repz
jl
jmp
mov
fnstcw
sahf
inc
jbe
mov
mov
and
mov
fisubs
mov
xchg
loopne
or
lea
xchg
stos
imul
fs
rorl
jle
scas
repnz
fwait
and
lret
push
stos
scas
mov
mov
pop
ret
push
and
lahf
sub
mov
push
rol
pop
or
push
mov
fisttps
out
fldt
mov
xlat
or
dec
mov
add
dec
pop
jnp
inc
cli
nop
fnstcw
jp
cmpl
lea
out
xchg
and
sub
mov
popf
rclb
xor
adc
int3
mov
sbb
popf
fsubs
pop
mov
mov
fwait
mov
xchg
data16
shll
inc
pop
add
mov
sahf
aam
sbb
pop
jo
inc
stos
add
jge
jge
nop
cmpsb
subb
in
fs
jp
aam
addr16
lds
adc
mull
ret
mov
cli
or
xchg
dec
fidivrs
cli
icebp
cmpsb
cmp
pushf
into
xchg
stc
ret
xor
mov
adc
xchg
cmp
mov
jno
repz
call
and
dec
test
adc
sti
xchg
pop
push
jae
in
inc
aad
mov
xchg
lea
xchg
xchg
mov
lods
mov
and
cs
fidivrs
or
push
negb
mov
xor
xor
fidivl
jae
daa
push
pop
cmpsl
cmpsb
jl
sub
jno
pop
sahf
dec
pusha
nop
adc
lsl
out
out
adc
push
test
flds
enter
cltd
int
scas
int3
mov
gs
js
fxam
jge
ret
inc
mov
shll
mov
pop
dec
int3
push
adc
orb
pop
stos
jge
xor
int3
xchg
jmp
fcoml
mov
imull
fsubrs
pop
fadd
jo
aad
or
cli
lahf
inc
jmp
or
xchg
out
cli
ja
pop
stos
adc
daa
sbb
ret
dec
sbb
test
add
jno
dec
loopne
ja
dec
jle
fistpll
xchg
fst
and
jp
sbbb
test
lods
pop
sbb
test
mov
imul
dec
push
pop
add
xchg
test
mov
loopne
in
jb
inc
push
setge
pop
ds
fisubrs
xchg
fcomps
jbe
or
dec
stos
jmp
fmull
cmpsl
outsl
testb
ret
rorb
ret
rcr
pop
fistl
aam
pop
mov
lea
clc
cwtl
or
push
test
pop
jge
jl
and
adc
and
xchg
mov
inc
push
xlat
pop
sbb
shll
xchg
push
int3
test
fnstcw
orl
add
imul
dec
sub
jae
cwtl
hlt
and
jae
push
jae
xchg
mov
clc
sub
repnz
outsb
lds
mov
jnp
pop
outsl
idivb
mov
mov
mov
aaa
test
imul
movsb
fldcw
in
pop
aam
or
in
push
enter
or
mov
pop
or
aad
or
rcrb
cltd
and
jp
sbb
inc
loope
unpcklps
repz
std
scas
mov
xchg
add
cltd
and
fimuls
mov
mov
mov
sub
inc
mov
jae
inc
inc
mov
insb
shlb
mov
pop
jmp
pop
mov
loop
adc
sbbb
sbb
fisubrs
sub
fwait
pop
push
pop
jge
sti
dec
inc
mov
scas
sbb
out
sub
add
lods
outsb
dec
mov
jae
ficoms
lods
add
pushf
flds
rcll
lret
add
pop
inc
mov
ja
mov
ja
fcmovne
daa
mov
imul
push
push
mov
ja
sub
insl
orl
and
int
jbe
lcall
dec
xor
aaa
pop
mov
jl
push
fwait
push
xor
dec
jp
sub
pushf
dec
inc
popa
enter
inc
and
ds
push
cmp
test
adc
xor
adc
repnz
dec
and
mov
leave
int
aad
test
ja
adc
in
xchg
sbbl
sub
popf
stos
test
dec
mov
aad
repnz
cs
adc
xor
cmp
jno
pop
fsubrp
xor
mov
idivb
mov
outsl
and
sub
push
pop
in
push
pop
js
pop
jbe
popf
cmpsb
inc
daa
pop
jmp
test
cmp
jecxz
pop
or
cld
cltd
or
jge
sub
inc
or
sarl
jmp
or
mov
mov
add
data16
and
push
jle
mov
jle
mov
mov
mov
stos
pushf
movsb
xor
dec
mov
roll
aaa
sbb
icebp
pop
fstp
add
xlat
mov
jbe
mov
outsb
dec
xor
and
in
das
mov
mov
xlat
jns
adc
out
jne
fidivl
pushf
sub
jmp
icebp
loope
push
adcl
xchg
fists
adc
jl
and
pop
orl
mov
es
imul
gs
test
arpl
das
jmp
adc
add
scas
cmp
or
xchg
scas
add
jg
inc
and
push
cs
push
xchg
push
push
inc
fnstcw
fldl
mov
arpl
out
test
add
pusha
jl
and
enter
stos
sub
sub
add
jg
jmp
sub
cli
js
pextrw
inc
das
or
out
insl
xchg
and
ja
mov
dec
sti
scas
inc
lods
movsl
imul
lods
mov
adc
adc
mov
add
inc
sahf
cmp
push
adc
gs
mov
ja
pop
dec
xor
cmp
int
ljmp
xchg
mov
jo
push
adc
cmp
push
pop
fnstsw
lcall
pop
lods
mov
cli
popa
jnp
or
mov
lods
jge
sub
ja
or
aas
cmp
or
pop
stos
ja
in
xchg
pop
xchg
inc
xchg
push
inc
into
fwait
sub
daa
jnp
imul
movsl
jbe
lcall
sahf
lcall
xchg
movl
faddp
into
je
clc
stos
or
mov
sbb
addr16
or
mov
int3
nop
nop
mov
lea
rol
and
dec
sbb
sub
mov
movsb
mov
sub
bswap
fsubs
mov
insb
dec
push
setnp
mov
inc
fdivs
fwait
gs
in
movb
mov
and
pushl
out
mov
xor
jo
mov
dec
in
inc
icebp
xchg
je
lods
mov
mov
xchg
xchg
sbb
jmp
out
sbb
mov
into
es
sub
leave
inc
push
cmpsl
push
pop
push
test
stos
pushf
jnp
sbb
push
nop
add
lods
nop
std
inc
xchg
notl
ja
mov
addl
movsl
daa
addr16
or
push
mov
xor
ror
iret
in
int3
out
lods
loope
pop
or
aas
sub
pop
mov
and
push
ljmp
mov
mov
add
sub
fists
test
ljmp
push
and
fdivs
inc
out
daa
out
pop
popf
scas
out
mov
push
fsubl
pop
in
nop
xchg
orb
cwtl
adc
vorps
pushf
mov
mov
popa
sbb
cmc
jmp
in
outsl
and
xchg
ret
mov
sub
or
es
addr16
jmp
or
pushf
xchg
jae
iret
iret
push
repz
pusha
adc
cmp
outsl
ficoms
mov
mov
xchg
imul
or
enter
iret
or
pop
testb
pop
arpl
jnp
imul
push
mov
xchg
outsl
sbb
gs
push
aas
pop
jnp
pop
mov
xchg
scas
negl
scas
hlt
adc
and
mov
shl
imul
jl
push
clc
sub
inc
shrb
cld
sub
lret
mov
jne
or
sbb
mov
sar
jb
repz
lock
scas
jmp
fsubrp
je
mov
adc
dec
push
inc
xchg
cwtl
jle
push
out
push
imul
xchg
inc
pop
jp
or
fsubl
inc
cmp
xchg
sub
loope
scas
pusha
cmp
addb
jecxz
add
out
mov
push
mov
fucomp
and
sub
push
fimull
faddl
js
in
setg
hlt
xchg
jg
aas
cli
xor
lock
rcll
sub
test
imul
sbbl
add
push
and
mov
dec
iret
add
in
cmc
adc
xchg
lret
mov
inc
lahf
out
in
pop
mov
data16
cmpsl
jp
and
scas
dec
movsl
lahf
jno
cmp
ja
or
pop
popa
sbb
pop
xchg
dec
dec
xchg
je
jbe
add
cli
pop
xchg
sub
jns
push
nop
sbb
dec
or
movsl
and
scas
mov
lcall
jnp
fldenv
inc
jmp
lcall
mov
add
push
add
pop
adc
mov
aam
loopne
iret
pop
push
in
sbb
mov
mov
je
mov
mov
push
pushf
out
stos
call
jge
std
pop
adc
scas
add
push
fimuls
loop
mov
out
mov
fildll
repnz
push
xor
lret
xchg
sarl
mov
adc
dec
repnz
cld
lahf
call
lods
mov
pop
or
insl
aas
jl
dec
xchg
ret
inc
gs
in
pop
sub
ss
mov
cmp
jmp
cli
push
jle
adc
adc
mov
ret
or
dec
fisttpl
subb
push
sahf
mov
mov
jmp
dec
mov
lret
sub
in
xchg
nop
dec
push
fistl
fists
xor
mov
imul
in
idivl
add
adc
stos
icebp
clc
iret
or
insb
and
pop
ret
cmpsl
into
cld
sub
scas
stos
pop
in
in
inc
fcomp
enter
sbb
sub
mov
inc
xor
in
push
dec
in
icebp
dec
mov
popf
cwtl
jb
mov
adc
fistpll
fisubs
pop
lods
cwtl
dec
add
shl
cld
iret
iret
mov
mov
scas
and
mov
mov
adc
cmpsl
fisttpl
and
jge
xlat
cltd
lods
shr
test
pop
mov
dec
fisubs
xchg
jge
sub
cmpsb
cmp
addr16
push
dec
mov
sar
jnp
loope
or
inc
push
push
les
leave
jl
push
add
jl
in
dec
mov
lret
loope
int3
jle
pop
sahf
mov
or
sbb
pop
iret
sub
into
jne
ret
push
sub
cmp
mov
aad
fdivrl
lahf
jae
mov
pushf
mov
out
pop
ret
lret
inc
mov
insl
mov
push
xorl
push
fldcw
adc
cmpsl
lea
xchg
inc
les
or
xor
mov
jp
dec
sub
fsts
dec
hlt
loop
adc
xlat
adc
and
ja
push
xchg
fcoml
insb
dec
xchg
imul
mov
stc
dec
push
cs
test
test
jg
jae
in
cltd
stos
lock
iret
mov
sub
or
iret
mov
jo
jnp
fldcw
inc
inc
int
loopne
cmpsl
xchg
fldt
push
jecxz
jbe
in
dec
mov
and
in
bound
fstl
int
pop
push
push
imul
mov
test
or
pextrw
aam
add
dec
addr16
orb
jne
fsubl
jecxz
mov
ficompl
pop
addr16
rcr
mov
xor
pop
jbe
xchg
xchg
into
iret
fcoml
mov
add
sbb
pop
jae
push
push
daa
movsl
jle
sub
popa
mov
js
gs
pop
call
cmp
stos
sub
push
mov
mov
sarb
xchg
pusha
sub
and
sub
push
dec
push
jo
mov
xchg
in
lahf
pop
dec
mov
sahf
dec
jecxz
or
sbb
ss
fimull
mov
add
loopne
nop
leave
push
mov
adc
xor
nop
cli
mov
pop
test
loopne
jecxz
nop
test
adc
xchg
jg
xchg
shrb
bound
mov
les
cltd
ret
testl
mov
dec
or
sbb
jecxz
add
gs
and
popf
mov
xchg
dec
mov
and
xor
mov
loope
or
fisttpl
adc
mov
out
loop
jl
stc
jnp
sbb
or
adc
pop
mov
inc
adc
and
jge
jno
adc
jge
jae
fldpi
xchg
pop
or
xor
mov
pop
or
adc
lea
repnz
movsl
test
mov
mov
mov
mov
pop
adc
mov
or
mov
adc
int
or
push
push
mov
lret
js
ret
std
test
adc
cmp
push
sbb
bound
cwtl
mov
scas
mov
cmp
adc
aas
lods
jmp
sti
adc
js
stos
jnp
insb
mov
adc
shll
lea
sbb
jmp
pop
rolb
lods
mul
cwtl
mov
dec
icebp
mov
popf
repz
sbb
cmp
sub
mov
xor
movsb
jecxz
clc
cmp
in
fidivrl
sub
jg
je
push
push
ror
sub
mov
sbb
or
push
loop
ret
push
mov
mov
data16
adc
repz
ret
stc
mov
out
inc
cld
pop
jge
jae
mov
xchg
aad
push
xor
sub
mov
gs
outsl
or
xor
imul
xchg
push
mov
ret
shll
orb
ss
mov
adc
xor
jne
pop
push
mov
js,pn
xchg
mov
test
out
repnz
mov
xchg
push
cli
jo
faddp
cmp
push
add
jmp
jns
out
pop
test
inc
mov
push
ret
fcomps
add
cmp
cs
addb
out
std
push
shlb
pop
jne
fwait
shlb
cmp
lcall
xchg
jns
jne
cmp
gs
sbb
or
pop
jnp
mov
lea
fcmovnb
sbbb
jecxz
loope
jae
dec
and
inc
mov
es
pop
dec
mov
xlat
jg
inc
je
adc
insb
mov
aam
jo
clc
mov
fldenv
pop
push
insb
inc
out
enter
mov
stos
add
cmp
mov
jmp
fimull
cmc
adc
or
lock
cmp
clc
add
aad
test
push
pop
in
pop
jae
ret
and
rol
inc
loope
nop
mov
gs
lods
loopne
push
mov
mov
sti
int
in
icebp
xchg
dec
sub
out
movsb
adc
sub
es
test
add
push
mov
pop
mov
jg
loop
lds
xchg
pop
add
pushf
popa
xor
in
add
sub
push
pop
lods
lds
mulb
inc
cmp
outsb
cmp
stc
xchg
sub
stc
imul
dec
add
mov
cld
dec
mov
and
test
add
test
inc
jb
pop
in
or
inc
xor
enter
ret
fs
xchg
les
outsl
das
inc
xchg
movsl
popl
int
sbb
xchg
pop
xchg
push
fidivl
fwait
mov
les
mov
adc
mov
imul
add
dec
push
mov
pusha
cltd
mov
sbb
fwait
sbb
mov
jge
pop
mov
sbb
dec
mov
das
les
inc
cmp
sahf
and
sbbl
dec
dec
test
lods
inc
push
popf
adc
mov
pop
jns
xchg
nop
popa
fwait
std
fwait
or
adc
lods
rorl
mov
xor
sub
dec
lods
dec
sbbb
mov
fldt
add
jle
out
aaa
sbb
sub
movb
pop
sub
ljmp
xchg
fscale
ret
cmp
jns
fsubrp
mov
inc
mov
adc
pop
fistpl
jno
dec
push
jle
fisttpll
inc
xchg
fwait
mov
cmpsl
in
cmp
pop
enter
fists
xor
popf
in
das
pushf
xchg
insl
leave
std
fsts
mov
mov
mov
or
int
mov
mov
mov
lds
cli
jno
aaa
push
lea
push
dec
mov
cwtl
fstpt
xchg
pop
xor
ret
insb
insl
dec
and
cmc
mov
test
dec
insl
xchg
aam
test
dec
or
cwtl
and
es
sub
sub
into
jle
and
pop
fldt
movsl
in
movsl
loope
add
pushf
mov
and
sbb
jg
je
sbb
jo
into
outsl
jns
xchg
pop
xchg
xorl
in
pop
divl
cmpsb
movsb
and
cmp
ss
dec
fwait
mov
dec
insb
adc
add
dec
xchg
or
cmp
cmp
lahf
popf
adc
testl
jnp
adc
mov
pop
mov
popa
jg
jge
pop
insl
pop
and
je
push
mov
sub
test
mov
ror
mov
inc
enter
aaa
push
rcrb
fcomps
adc
mov
aaa
xchg
xchg
xor
sub
mov
mov
pusha
dec
cmp
sbb
xchg
into
cwtl
push
mov
and
lret
or
les
pop
or
ljmp
sub
dec
repnz
push
cwtl
inc
imul
jecxz
pop
add
push
dec
bnd
mov
imul
push
cmpsb
dec
lcall
jns
mov
int
lods
xchg
loopne
cmp
stos
shr
xchg
repnz
dec
lret
dec
cmpsl
and
xor
cmp
test
aas
adc
fwait
cmp
cmp
jg
notl
dec
sbbl
dec
fiadds
or
aas
or
pop
testl
sub
adc
mov
popf
pop
xor
hlt
dec
and
sub
mov
frstor
out
pop
mov
inc
and
jb
inc
call
popa
push
mov
pop
shl
pop
or
xor
push
add
mov
out
popf
nop
lods
leave
sub
jb
sbb
cli
or
pusha
loopne
loope
and
and
fmuls
movsl
pop
jle
lods
pusha
clc
aam
mov
inc
stc
lea
cmp
lea
fcoml
push
std
dec
jecxz
lahf
xor
cli
lahf
lahf
adc
out
nop
add
outsb
insb
das
jne
cmc
xchg
addb
sti
cwtl
mov
lods
cmp
shl
add
int3
dec
pop
push
dec
mov
push
das
mov
xlat
push
sbb
mov
xor
xchg
sub
jecxz
dec
push
dec
mov
and
loopne
nop
stos
push
scas
xchg
xor
pop
bound
mov
xlat
jne
dec
sub
dec
nop
pop
pop
in
mov
and
pusha
cmp
loopne
xor
ss
inc
das
push
xor
inc
es
mov
scas
lea
ret
pop
pop
out
in
outsl
push
mov
xchg
push
scas
mov
movsl
lahf
sbb
xchg
fs
inc
mov
aaa
cltd
mov
and
xor
ljmp
xor
adc
mov
fwait
aad
mov
sub
or
iret
adc
sar
push
and
and
dec
sti
mov
mov
lret
xorb
ljmp
arpl
jns
and
dec
stc
js
inc
arpl
shlb
inc
push
popf
inc
mov
out
mov
push
popf
imul
test
mov
jne
fwait
scas
cltd
cwtl
xchg
jecxz
adc
jmp
or
pop
test
int3
jg
xor
sbb
ficomps
sub
mov
cmpsb
push
mov
mov
push
cmp
test
lds
mov
gs
mov
aaa
pop
cmc
mov
cltd
out
imul
aaa
ficoml
pop
mov
xchg
sbb
mov
lcall
or
adc
lahf
in
ja
sbb
add
fistl
xor
or
cltd
icebp
or
insl
ret
push
and
pop
fcmove
test
pop
daa
packssdw
imul
in
movsb
mov
jb
sub
inc
xchg
jo
in
sub
or
shll
sub
push
loopne
ret
pusha
or
pop
sbb
sub
sbbl
adc
adc
mov
xchg
dec
adc
cs
jno
loope
outsb
xchg
ds
pop
inc
push
stos
sub
leave
aas
push
mov
mov
mov
add
pop
jp,pn
sbbl
movsb
jns
adc
add
adc
cmp
int3
test
sub
dec
ret
aaa
mov
push
add
into
add
inc
pop
daa
pop
int3
xor
mov
mov
dec
and
lcallw
test
mov
add
jmp
push
iret
fwait
xchg
sahf
mov
xor
sbb
or
in
mov
push
or
loope
add
mov
hlt
pop
pmaxub
cltd
enter
repz
dec
cmp
inc
into
les
add
push
add
popf
stos
mov
call
add
mov
pop
and
scas
loope
cmpb
jp
xchg
xchg
sbb
bnd
xchg
or
pop
jmp
clc
xchg
out
add
jle
aad
push
aas
sub
sti
int
call
mov
iret
orb
test
jo
xchg
scas
rorb
outsl
aas
rorb
pop
mov
test
sub
push
scas
add
xchg
ret
ss
aad
xchg
loope
mov
mov
int3
js
xchg
mov
xchg
adc
ret
mov
push
pop
ret
sub
or
cmc
je
jp
rcr
cmp
or
pop
rorb
test
and
add
cld
sub
pop
mov
sbb
mov
hlt
loope
jne
jbe
scas
xor
push
xorl
cld
inc
xchg
dec
push
aas
pop
dec
jp
push
scas
jmp
flds
inc
imul
sbb
imul
sub
lods
inc
inc
mov
ja
testb
pusha
stc
nop
cmp
cmp
push
pop
sbb
push
pop
sbb
add
outsl
dec
scas
sub
test
adcb
int3
adc
das
sbb
xor
jnp
inc
add
lods
out
jae
push
jo
orb
shr
outsb
sbb
idivl
fmuls
or
add
inc
mov
sbb
mov
adc
lcall
and
repz
cltd
dec
mov
std
popa
idivl
daa
call
cs
adc
push
xor
jae
pushf
sub
gs
ret
ljmp
aas
fsubrl
inc
cwtl
scas
fistpl
daa
loopne
xchg
cli
xchg
ja
cmc
pop
mov
cwtl
and
ds
in
and
pop
int3
jge
xchg
jp
in
imul
leave
andb
pop
popa
or
gs
jecxz
cmp
insb
add
insl
jl
or
mov
lret
lcall
int
sub
aad
movsl
inc
mov
and
call
es
jne
xorb
cld
add
mov
data16
mov
movsb
or
mov
sub
or
imul
add
cmp
pop
mov
clc
call
nop
adc
aad
aad
mov
and
fists
add
loope
xchg
mov
rcrl
or
movsl
or
cs
mov
adcb
call
rcrb
or
sbb
jo
hlt
xlat
fistpll
outsb
pop
leave
add
outsl
aaa
imul
insl
sti
push
addr16
cmp
data16
jb
xorl
mov
adc
inc
movsb
enter
inc
dec
movsl
lahf
sbb
xchg
jae
add
lret
lret
pop
imul
inc
rolb
out
jmp
mov
cmc
push
scas
aad
movaps
addr16
dec
adcb
sarb
mov
push
pop
xor
cltd
xchg
imul
sbb
xor
or
scas
mov
inc
xchg
pop
test
or
xor
scas
dec
mov
lahf
ds
mov
cmc
lret
rol
notl
insb
shlb
stos
xchg
sbb
lock
hlt
fstpl
jne
ds
jecxz
xlat
fbstp
sti
movsb
mov
jg
mov
and
movsb
xchg
aaa
push
imul
jecxz
into
pushf
and
push
mov
inc
mov
mov
jbe
scas
dec
sti
and
xor
aam
jne
ficomps
sbb
xchg
pop
jecxz
out
cmp
adc
xor
push
or
test
xchg
test
sub
movsb
xchg
ljmp
mov
add
add
rorl
sbb
cmp
jg
loop
push
pop
jecxz
push
adc
lret
add
mov
sarb
mov
decl
pop
jl
inc
pop
xor
cld
mov
ret
adc
out
lahf
jmp
pop
jl
or
adc
xchg
cmp
pushf
jp
test
sbb
arpl
pop
push
lea
lret
ret
mov
scas
fs
rcl
mov
and
pop
mov
pop
mov
and
jb
add
daa
xchg
out
scas
xchg
lods
insl
or
mov
sbb
mov
mov
sub
mov
xchg
mov
dec
into
dec
imul
jp
out
adc
out
mov
mov
roll
cmp
xchg
inc
mov
rolb
iret
add
or
push
mov
mov
out
xchg
ss
sbb
insl
int
loopne
out
adc
mov
popa
ficoml
adc
mov
insl
loop
add
cmpsb
or
rcr
xor
rcr
cmp
pop
sbb
divl
push
xchg
jmp
in
incl
shl
jge
fs
and
cmp
xor
xchg
insb
ret
sahf
and
dec
scas
pop
lahf
adcb
cli
cltd
js
lahf
popf
repz
sbb
out
pop
xchg
mov
je
xchg
fstpt
jb
subl
lret
fisttpl
sahf
adc
mov
jle
inc
shrl
lcall
rorl
cmp
mov
sub
push
adc
sti
pop
shl
nop
test
lret
daa
lea
addb
push
add
dec
xor
gs
and
add
pop
psubb
pop
stos
fwait
sahf
push
out
aam
and
push
inc
popl
cli
xor
aas
popf
mov
sbb
cmp
jb
lods
push
test
sbb
pusha
and
add
inc
xor
divl
sbb
int
les
int
rolb
jnp
and
jb
and
out
dec
xchg
sbb
mov
fsubs
js
std
mov
xorb
jb
pushf
and
jbe
add
and
loopne
pop
ret
push
mov
mov
xor
ds
inc
insb
shl
lea
dec
dec
jmp
bound
push
xchg
dec
mov
lret
xchg
xchg
lea
jae
xor
push
lahf
popf
inc
and
ret
adc
insl
jp
fs
push
pop
mov
sbb
mov
mov
mov
add
lock
loopne
push
ljmp
inc
mov
cmp
xor
mov
insb
push
sbb
xchg
cmp
out
mov
call
int
xchg
leave
push
and
test
bound
aam
loope
sub
lahf
bound
ds
out
test
push
add
jmp
add
fiadds
jae
cmpsb
cmp
int3
or
lcall
and
das
mov
push
int
push
fistpll
jge
pushf
xchg
ret
and
pop
and
fsts
fistl
xchg
inc
mov
and
test
xor
test
movsb
or
mov
insb
arpl
cmpb
lods
enter
ljmp
xchg
adcb
mov
mov
xor
cmpsl
push
fiaddl
xchg
sbb
ret
out
dec
sbb
xlat
test
rorb
int3
mov
lods
jnp
outsl
int
sub
mov
cmp
cmc
inc
shl
mov
insl
stos
dec
in
into
push
add
and
jecxz
mov
push
push
pop
add
add
xchg
pop
cwtl
inc
mov
cmpsb
fcmovne
decl
push
lahf
mov
jae
mov
dec
inc
in
xchg
cltd
dec
mov
mov
add
xchg
sbb
mov
inc
jo
repnz
sbb
mov
xor
pop
pushf
pop
inc
sbb
mov
cli
ds
jecxz
mov
andb
adc
mov
std
sahf
mov
lret
les
adc
dec
dec
xchg
and
aas
and
cmpsl
std
or
pop
and
sbb
or
ror
cmp
aaa
fwait
idivb
mov
xchg
jns
fmuls
test
pop
data16
push
cmp
or
in
nop
push
push
xor
std
add
aas
pop
popf
mov
bound
es
add
repz
outsl
jg
sarl
popa
xchg
and
adc
mov
divb
jae
aas
and
add
mov
sahf
or
insl
loope
and
cmp
sub
push
inc
aam
adc
cmovns
pop
add
dec
or
pop
or
fsubrs
test
mov
mov
mov
add
and
xchg
cmp
in
aad
popf
or
hlt
xchg
push
mov
fcomp
test
out
test
cmpsb
lods
mov
inc
jg
xor
ljmp
and
xchg
test
outsb
jne
sbb
imul
subb
test
mov
or
ret
aad
and
ljmp
mov
mov
loope
mov
jge
mov
push
in
mov
xor
mov
dec
xchg
lods
jl
imul
jb
adc
xor
mov
jbe
mov
scas
or
out
hlt
push
sub
push
loopne
cmpsl
filds
mov
or
mov
fildll
fs
subb
cmp
inc
hlt
sub
cwtl
sub
ljmp
xchg
das
ja
mov
aad
rdpmc
fs
xchg
jno
fstps
mov
xchg
or
sub
mov
mov
cs
mov
fnsave
dec
fcmovbe
mov
loope
rcrl
pop
lret
testl
movsl
in
data16
mov
mov
mov
dec
mov
scas
out
stos
mov
xchg
orb
das
outsb
jmp
add
das
cmp
pop
dec
iret
pushf
cmp
inc
or
call
inc
jecxz
mov
mov
popa
iret
outsl
mov
inc
pushf
shll
test
aam
cmp
rorb
sbb
ss
xor
cmp
inc
or
js
ret
imulb
xlat
inc
aad
rcll
and
cmp
mov
sbb
into
fwait
nop
xor
jne
mov
sbb
xor
repz
xor
pop
cmp
call
aas
mov
clc
dec
scas
mov
add
pop
clc
aas
mov
sub
sbb
xlat
inc
mov
cmpsl
int
xchg
xor
mov
popf
je
inc
xor
and
fnstcw
xchg
lcall
inc
fiadds
dec
mov
add
and
dec
push
frstor
fwait
push
pop
jne
cs
shll
adc
or
imul
ja
loopne
mov
lods
das
sarb
sub
sub
mov
adc
push
xchg
fistps
pop
or
rorl
and
cmp
xor
jae
mov
nop
push
mov
or
push
mov
mov
pop
out
out
cli
fsub
xchg
fcoms
push
sbb
mov
in
xor
stc
scas
mov
pop
mov
icebp
shlb
cmp
out
add
and
sbb
popa
push
sbb
add
lds
jl
dec
cmp
stc
xchg
push
cld
dec
stos
outsb
mov
out
divl
rep
add
cmp
pusha
push
or
pusha
jmp
inc
fs
adc
mov
mov
push
bound
mov
mov
pop
insb
pop
fimuls
dec
iret
dec
cwtl
test
in
or
pushf
clc
xor
cmp
jnp
mov
pop
mov
pop
pop
mov
push
xchg
sbb
scas
dec
add
aad
pop
jmp
jb
jbe
lds
addl
into
mov
addl
out
adc
mov
imul
fists
lahf
rol
push
mov
or
lahf
orb
inc
or
mov
cmpsl
push
lret
popf
xchg
dec
jmp
inc
out
mov
mov
ds
bound
mov
loopne
cli
stc
mov
mov
push
repz
xchg
lock
scas
fwait
cld
xchg
inc
and
rorl
sub
pusha
and
fcmovu
mov
push
sub
push
jno
les
sbb
seta
push
sbb
lods
mov
xchg
lea
xchg
fisubl
lret
push
xlat
pop
inc
cmp
ret
lret
mov
sbb
adc
push
sub
insb
jmp
xlat
insl
xchg
dec
scas
push
test
mov
adcl
je
int
loope
adc
pop
mov
xchg
jns
push
fstpt
inc
xor
mov
pop
repz
icebp
push
insb
mov
pop
sub
mov
fdivrl
aaa
lret
outsb
mov
dec
sub
fbld
mov
pop
je
mov
mov
clc
pop
mov
mov
push
cmpsl
or
pop
push
je
in
xchg
inc
idivl
div
push
insl
cmp
cmp
push
adc
mov
sub
sahf
or
pop
leave
jge
bound
call
cs
jno
sbb
xchg
cmc
xor
fisubrl
call
inc
mov
mov
sbb
gs
push
pop
jns
inc
jnp
test
ret
shr
enter
fcompl
and
xor
lea
cmp
jecxz
insl
and
xchg
cmp
xor
jo
rorl
pop
xchg
ljmp
inc
rorl
inc
mov
sub
fwait
insl
sbb
dec
jg
push
lret
add
pop
pushf
dec
aaa
je
xabort
pop
pop
and
inc
mov
outsl
rorb
dec
push
mov
or
out
test
call
or
pop
cli
fwait
pop
dec
mov
jl
out
sub
dec
pop
pop
jecxz
notl
sti
push
cmc
lods
stos
and
mov
lds
mov
popa
rorb
ficomps
pop
pop
dec
fisubl
lea
sbb
out
or
psubw
imul
xor
sub
push
in
push
inc
scas
fidivs
xchg
aam
test
add
cmp
sbbl
adc
mov
jecxz
cld
push
xor
or
cmpsb
pop
pop
pop
jbe
push
int
sub
mov
lret
or
mov
lahf
inc
pop
test
in
jne
sbb
or
pusha
stos
sarb
inc
xchg
loope
fildll
xchg
mov
xchg
dec
jmp
cli
movsb
and
ss
iret
xor
push
jns
dec
inc
adc
int3
jecxz
inc
jbe
sub
fs
mov
inc
push
dec
pop
test
fdivs
lea
decl
add
jns
inc
ret
xchg
outsb
shll
lcall
inc
lds
ljmp
mov
add
arpl
out
lcall
iret
lret
fs
es
xchg
sar
xchg
iret
mov
jns
or
inc
lret
ret
add
and
xchg
das
mov
cli
fdivrs
xor
cltd
addr16
mov
adc
cmpsl
jae
lea
pop
mov
test
cltd
jg
mov
gs
cmp
mov
mov
nop
stos
cld
arpl
or
or
lahf
add
jo
sbb
mov
stos
jb
pop
pop
jbe
jb
bound
sbb
cltd
ss
les
mov
in
dec
fisttpl
outsb
sbb
loop
in
xlat
stos
loop
out
popl
or
std
mov
push
shlb
ret
push
dec
js
aas
pop
mulb
jge
and
xor
cmpsl
adc
inc
addb
cmpsl
or
test
mov
ss
jbe
arpl
pop
test
nop
in
xchg
pop
mov
jnp
push
hlt
shrb
negb
cmp
sbb
ret
inc
inc
add
lods
mov
pushf
out
cwtl
aam
mov
fisttpl
add
into
jns
xor
adc
sbb
xchg
pop
ret
or
adc
sub
sub
or
jb
cwtl
pop
mov
mov
sub
enter
pop
aaa
fwait
outsb
ds
mov
and
adc
cwtl
or
negb
xor
data16
fwait
jo
addl
std
jne
dec
xlat
sahf
insl
iret
push
add
pop
std
test
fs
cwtl
pop
test
inc
adc
jnp
sub
pop
add
sub
dec
ficoml
push
mov
dec
xor
cltd
out
cmp
xor
lret
mov
popf
mov
shl
clc
popf
jo
inc
and
stos
pushf
mov
jg
mov
inc
ret
sub
inc
fnstenv
test
pop
pop
ret
out
into
sbb
imul
xor
stos
adc
das
or
iret
cld
mov
and
cmpb
mov
and
cli
mov
xchg
sbb
into
sbb
cmpsb
xchg
xchg
in
sti
pop
pop
out
fbstp
stos
jmp
pop
js
pop
xor
inc
pop
and
sarb
xor
std
loopne
xor
arpl
sbb
fwait
jecxz
cmc
rorb
fsqrt
in
in
stc
sahf
test
xlat
mov
cltd
pop
xor
decl
lahf
sbb
mov
out
icebp
xchg
sar
sbb
sub
mov
mov
jo
push
push
add
dec
mov
xor
fiadds
xchg
enter
int
dec
loop
ss
das
and
enter
clc
or
pop
les
add
lret
bound
inc
mov
cmp
xchg
xchg
dec
shld
scas
inc
ja
jl
mov
stc
push
sbb
mov
jne
jbe
insl
jns
jle
mov
xlat
pop
lahf
adc
int3
dec
jecxz
mov
inc
inc
test
jmp
imul
jo
or
push
mov
pop
dec
fcoms
push
fcoml
inc
mov
arpl
inc
movsb
mov
jecxz
pushf
or
lahf
mov
or
data16
adc
push
add
xchg
jg
test
adc
xchg
mov
pop
push
mov
adcb
inc
mov
fimull
or
fcmovnb
test
sub
lret
ljmp
pop
pop
std
cs
jge
fsub
sub
lds
out
stos
popa
dec
cmpsb
fimuls
int3
stos
pop
pop
hlt
adc
add
mov
lahf
out
imul
and
mov
xchg
and
or
jge
cmp
pusha
je
aad
std
inc
mov
in
mov
ret
out
repz
fidivs
fidivl
sbb
or
xorb
inc
fs
add
je
bound
hlt
imull
push
xor
repnz
xchg
dec
mov
pushf
loope
and
sbb
jno
dec
int3
orl
into
xchg
test
dec
andb
inc
dec
adc
arpl
dec
gs
in
jge
dec
pop
lcall
lea
inc
insb
jmp
rcrb
or
pop
sarl
cli
add
sbb
jp
inc
mov
imul
jmp
ds
rclb
out
cmpsb
movsl
notl
jbe
sub
lahf
pop
and
inc
or
push
imul
lahf
mov
fisubrs
mov
add
mov
cmpsl
sbb
hlt
or
jge
add
pop
aas
pop
dec
shlb
jno
outsl
repz
jg
out
std
or
push
inc
leave
mov
cmp
pusha
and
lret
fisubrl
sar
test
int
sbb
dec
dec
push
xchg
sub
sbb
cmc
jae
push
shll
js
cmp
jge
cmc
call
flds
mov
lret
fwait
xor
in
pop
mov
inc
mov
xchg
pop
sbb
mov
ja
dec
mov
outsl
jmp
arpl
dec
mov
xchg
push
dec
sbb
movsb
fisubrs
mov
jge
xchg
or
mov
push
jne
mov
push
in
aas
sarb
stc
iret
push
jne
ja
andl
and
and
xor
jns
jnp
aaa
rcrl
je
dec
cmp
jae
jbe
fwait
xor
loop
add
lret
mov
movsb
ss
leave
sub
adc
arpl
jne
xchg
adcl
mov
inc
js
test
and
mov
push
push
leave
scas
test
add
dec
pop
add
into
arpl
jmp
mov
pop
mov
out
pop
popa
out
loopne
lods
xor
in
lret
dec
inc
sbb
ret
cmp
mov
mov
cs
pop
popf
jg
dec
xchg
push
aaa
icebp
imul
cmp
add
loop
cwtl
sbb
add
cmp
decl
stc
cmp
inc
adc
xchg
xchg
push
lret
cltd
js
insb
lret
inc
mov
jge
or
or
add
fiadds
mov
inc
mov
add
jmp
dec
xchg
mov
and
fcmovnbe
js
ja
insb
stc
dec
xor
es
sbb
push
sbb
mov
nop
push
mov
and
inc
inc
outsl
jle
cmp
rcll
aas
mov
adc
daa
dec
jg
sub
adc
sbb
or
lods
mov
dec
push
or
sbb
jnp
pop
ljmp
adc
test
sub
mov
xchg
dec
mov
int
xlat
jb
shrb
mov
out
mov
mov
push
pop
insb
xchg
mov
pop
xchg
push
cmp
xchg
or
mov
lods
aam
negl
xchg
push
push
gs
lods
or
int
mov
jns
jae
mov
or
je
call
push
fwait
add
mov
pop
scas
dec
cs
mov
inc
jge
mov
dec
add
inc
nop
stos
push
in
stos
inc
mov
scas
aad
inc
xchg
stos
sbb
and
inc
popa
pop
sbbl
popa
push
insb
test
movsb
pop
mov
dec
fstl
xchg
call
fs
jno
hlt
jnp
aas
push
xchg
push
cwtl
and
add
push
xchg
inc
adc
pop
push
mov
lods
cmp
into
and
dec
xor
jb
and
test
push
xchg
push
xchg
out
ds
xor
push
scas
dec
mov
in
fadds
fsubl
loop
push
add
inc
and
sub
fs
add
imul
and
add
pop
push
shlb
mov
mov
nop
mov
shr
add
pushf
cld
cmp
inc
and
jecxz
lea
sub
jg
int3
sahf
test
jne
cmp
popf
adc
mov
lods
sbb
je
sarb
sbb
sahf
jb
and
lods
sbb
test
jb
jb
jne
add
test
sbb
in
fisttpl
nop
ds
je
mov
push
lahf
leave
fistps
imul
lds
mov
cli
add
mov
add
ja
sbb
dec
add
mov
dec
in
jmp
out
jb
cmc
sbb
inc
jno
in
pop
aaa
xchg
sbb
ret
mov
test
and
mov
pop
or
aas
push
movd
lea
in
jmp
ficoms
je
push
add
in
idivl
cmp
ficomps
subb
or
daa
inc
imul
inc
popl
test
mov
das
fldt
std
pop
movsb
cmpsb
ret
cmp
or
sbb
stc
mov
push
jecxz
imul
pop
rcll
xchg
das
testb
cltd
and
insb
cltd
and
jo
in
lret
pusha
outsb
pop
mov
cld
add
dec
stos
push
xchg
out
jns
sbb
sarb
cmp
fdivl
ds
sbb
ds
pop
outsl
mov
cli
xchg
mov
rolb
cmc
jl
inc
sahf
xchg
stos
orl
loopne
shll
push
mov
cmp
pop
mov
dec
sahf
insb
popf
lret
loopne,pt
nop
lahf
cld
scas
nop
in
mov
push
loop
lods
bound
or
add
and
and
ja
add
jmp
mov
jg
xchg
add
lret
out
push
and
cmpsl
andl
jle
nop
popa
mov
mov
fistl
jp
inc
xor
negl
add
push
pop
xlat
js
cmp
sub
daa
xor
or
sahf
aaa
fadd
sbb
mov
insl
xchg
aad
dec
pop
stos
cmpsl
cld
xchg
scas
mov
lcall
pop
ds
imul
js
fistl
push
xor
out
pushl
inc
fstpt
stos
pop
mov
iret
pop
cmp
lret
sub
dec
imul
sub
add
mov
into
mov
stos
xchg
dec
movsl
leave
fildl
stos
and
roll
push
rcl
dec
jg
stos
push
adc
stos
in
mov
ret
xlat
mov
xor
lods
fs
sub
lret
test
inc
adc
movsl
pop
ret
rorl
or
xor
inc
xchg
pushl
lahf
leave
popf
jns
push
aam
and
dec
cmp
mov
out
or
inc
out
mov
mov
push
out
pop
jecxz
xor
xchg
jecxz
fdivrl
xchg
mov
imul
cmc
cmp
inc
pop
dec
js
cmpsb
insb
adcl
pushf
ffree
stos
dec
or
sub
mov
leave
mov
xor
and
inc
lds
mov
cmp
mov
test
fyl2xp1
aad
js
jne
jb
mov
repz
dec
scas
mov
test
jge
sbb
inc
sub
fmull
push
mov
punpckhwd
push
inc
xchg
and
adc
in
clc
adc
push
int3
aam
and
jge
sub
lea
shll
rorb
jg
cmpsl
adc
mov
sbb
loope
inc
enter
js
pop
and
fwait
insb
insl
dec
mov
daa
iret
test
push
test
pop
jp
out
or
lret
xor
cmpsl
add
mov
scas
mov
cltd
jnp
pop
scas
mov
add
dec
inc
mov
pop
leave
arpl
cltd
inc
mov
and
add
dec
sbb
push
iret
push
mov
jle
andl
or
imul
jbe
push
add
pop
adc
fsubs
cmpsb
and
mov
jmp
mov
icebp
out
jne
mov
push
or
jns
mov
jge
xchg
cwtl
xchg
pop
loope
jb
pop
imul
sbb
subl
mov
pop
mov
lock
sbb
outsb
or
scas
jns
inc
imul
cmp
fimull
leave
push
jno
inc
add
xor
dec
push
inc
cmc
inc
int
push
jmp
pop
pop
inc
adc
sbb
ret
leave
inc
sti
inc
fwait
lea
mov
and
lods
xor
fnstsw
scas
jo
sbb
inc
loop
flds
xor
sti
mov
jg
adc
enter
insl
jp
add
addb
xchg
test
mov
jns
fdiv
xchg
popf
or
test
xor
jne
dec
dec
sarl
lcall
xchg
test
xchg
xchg
jae
int3
stos
or
addr16
jge
ja
arpl
dec
adc
adc
lahf
jg
xor
xor
ljmp
pop
adc
mov
in
in
mov
mov
loope
inc
lds
jbe
xor
aaa
dec
repz
xchg
mov
push
lods
adcb
jae
pop
mov
das
pop
lahf
add
movq
and
mov
out
movsb
std
iret
pop
cltd
lds
pushf
pop
into
cli
js
pop
loop
mov
jmp
mov
subb
fcmovnu
xchg
shll
jne
mov
cmpsl
std
js
pop
outsl
jnp
jb
lahf
pop
adc
xchg
and
add
sti
mov
add
inc
adc
hlt
dec
and
push
inc
and
xor
stos
rep
fsubs
insl
or
pop
mov
shlb
inc
fbld
sbb
push
rcl
repnz
in
movsb
rclb
xchg
fdivs
cmp
push
and
rdpmc
mov
push
aaa
pop
lcall
sbb
pop
and
add
test
xchg
xchg
push
mov
mov
fcomip
pop
dec
or
add
das
jmp
sbb
mov
cmc
loop
sbb
jns
or
bound
sbbb
sbb
mov
incl
and
call
fsubrl
cmpl
push
icebp
mov
scas
pop
inc
ss
jb
jecxz
cwtl
aas
pop
mov
and
dec
sbbb
je
rcr
popf
mov
inc
cs
jns
popf
fwait
mov
ja
xor
punpckldq
inc
jp
xor
xchg
xchg
shlb
xchg
fldenv
ljmp
mov
pop
andl
sbb
vpsubsb
pop
fildl
mov
imul
andl
sub
mov
and
or
inc
testb
ds
movsl
and
iret
aas
xor
adc
sbb
mov
incl
out
shr
repnz
test
push
out
mov
les
pop
inc
cmpsl
insl
gs
aaa
inc
sub
loope
dec
or
andl
and
fs
mov
fld1
les
inc
out
ljmp
outsb
adc
cmc
lcall
pop
data16
dec
jae
or
out
jbe
adc
lret
xchg
std
cmpl
les
icebp
or
or
imul
push
cmp
jo
cltd
rcr
push
stos
jne
push
jg
xor
cmp
loopne
fidivrl
arpl
xchg
arpl
xor
mov
test
or
pushf
outsl
pavgb
imul
bound
clc
or
imul
ror
mov
fcomps
pop
xor
ficomps
jp
pop
sarl
cmpsb
push
notl
js
jno
iret
scas
rol
jo
push
gs
mov
adc
mov
sar
add
sub
add
adc
adc
and
mov
jmp
mov
add
es
pop
mov
push
std
mov
fsts
cwtl
pop
and
repz
cs
add
mov
xchg
insb
shlb
adc
aam
push
and
inc
xchg
xchg
adc
popa
std
xchg
pusha
fistpll
bound
mov
fmull
iret
repnz
push
xchg
xor
mov
dec
inc
xchg
in
jo
sahf
movsb
std
push
or
sbb
add
sti
inc
sub
mov
sbb
pusha
or
lcall
mov
out
lret
test
push
mov
push
shld
pop
les
and
adc
divl
fisubs
idivb
int3
test
xchg
std
adc
and
pop
pop
mov
inc
push
test
sti
rcr
mov
xchg
mov
clc
lahf
mov
push
js
pop
les
jmp
inc
sbb
test
mov
add
xchg
push
adc
mov
sub
into
jnp
mov
lahf
sahf
movsb
js
mov
inc
stc
mov
lret
sub
mov
pushf
jnp
mov
fsubl
bound
popa
push
push
jnp
gs
out
pop
fcomps
cmp
sub
cs
int
inc
fsubrs
outsb
loopne
outsl
jo
mov
lret
pop
jne
js
xor
sub
jae
sbb
jns
iret
mov
out
aaa
mov
mov
rep
imul
lds
rolb
jecxz
scas
and
in
test
ja
rcll
push
mov
fdiv
dec
jb
aad
xchg
push
mov
int3
add
mov
push
out
mov
pop
cmpsl
sub
cmpsl
shll
outsb
adc
or
lods
pop
jno
push
sbb
pop
xor
stc
push
pop
movsl
iret
lods
mov
push
cmpsb
cvtps2pd
adc
das
pop
rcrb
pop
xor
ss
add
dec
je
stos
xchg
adc
lds
add
dec
rcrb
stos
fmuls
ret
inc
xor
cmpl
dec
push
fwait
shll
sbb
add
das
xchg
cmp
push
sub
xor
outsb
lds
inc
inc
roll
dec
aad
lcall
dec
nop
lock
mov
xchg
ret
dec
pop
movl
das
aaa
stos
ds
enter
aas
stc
push
pop
insb
and
cmpsl
sbb
stc
pop
lret
sub
pop
push
mov
sub
lods
aad
scas
out
adc
jge
test
movsl
shlb
pop
je
jle
pop
inc
dec
mov
mov
dec
push
ret
mov
push
call
mov
push
aaa
iret
xchg
cmpsb
pop
push
jmp
and
ret
mov
pop
inc
sub
ficompl
dec
ret
daa
lods
pop
dec
inc
inc
lahf
scas
or
inc
test
mov
or
out
arpl
bnd
scas
aas
xchg
dec
mov
aas
fbld
shrl
jae
in
mov
jecxz
xchg
push
in
adc
jnp
pop
xlat
inc
cwtl
fwait
daa
loop
cmp
pop
enter
cwtl
mov
push
sbb
mov
cmpsl
cmpb
push
push
ljmp
mov
outsb
jmp
sbb
inc
sti
jmp
pop
rcll
mov
jecxz
shll
sbb
enter
or
cltd
cmpsl
and
mov
fcoml
dec
and
xchg
les
in
je
inc
or
es
push
packuswb
sub
mov
icebp
out
call
dec
in
rcr
ret
cmp
jno
int3
ljmp
jle
in
adc
mov
sub
cmpsb
fiadds
and
addr16
ficoml
push
mov
pandn
stos
xor
in
or
inc
pop
lret
mov
mov
push
out
clc
lea
cmp
jo
sub
daa
mov
fists
ja
pop
mov
inc
sbb
je
pop
fnstcw
mov
add
mov
jge
xchg
pop
repz
dec
stos
dec
jb
out
in
jbe
mov
jae
xchg
push
ficomps
jge
push
dec
cmpsl
mov
push
out
sub
jmp
div
xchg
adc
out
out
pop
rolb
xchg
jge
jle
jg
adc
rclb
clc
adc
sub
fcoml
mov
adc
aas
call
mov
inc
xchg
push
adc
push
jnp
movsl
sbb
fsubrl
cmpl
cltd
xor
lock
xchg
imul
scas
adc
adc
movsb
jecxz
fdivl
jnp
js
je
sbbl
insb
jmp
iret
ret
loop
imul
mov
daa
cmp
and
xchg
mov
ljmp
jp
jne
icebp
cwtl
dec
sbb
out
notb
lds
push
jle
xchg
add
mov
inc
outsb
lcall
push
mov
jbe
cld
xchg
outsl
nop
fstpt
adc
xchg
iret
leave
fadds
or
push
outsb
cmp
aam
nop
pop
imul
stos
rolb
sbb
fadds
xor
xchg
pop
out
cmp
pop
stos
mov
sbb
sbb
ret
ds
idivl
xlat
test
inc
aaa
or
adc
pop
inc
jns
or
cmpsb
lds
fstpt
or
adc
pop
pop
jl
and
popf
cmp
or
fsts
xchg
les
jns
repnz
cwtl
jg
stos
repz
leave
push
or
test
pop
rcl
call
jb
xchg
jecxz
fimull
jo
mov
mov
jne
imul
and
fsub
sub
cmpl
test
sub
ret
pop
dec
xor
popf
ret
iret
stos
lock
mov
adc
dec
mov
ret
mov
test
iret
pop
cmc
cmp
fisubs
fdivrp
and
inc
scas
xlat
cwtl
out
insb
mov
stos
sbb
addr16
test
rcrb
daa
mov
add
push
push
js
jne
paddw
insb
movsb
pop
lcall
cwtl
outsl
std
sbb
push
scas
dec
xor
icebp
lcall
movb
fidivs
cmpl
outsb
cmp
inc
mov
pop
xchg
inc
mov
insl
ret
mov
cmp
push
sbb
out
pop
sub
adc
stos
xor
add
pop
aam
dec
push
pop
mov
jmp
xor
push
xchg
lret
dec
xor
jns
in
sbb
into
xor
or
dec
pop
sub
cmp
inc
or
pop
bound
aam
pop
stos
pushf
xchg
push
mov
movsb
jae
cmpsl
es
sub
mov
sarl
dec
out
mov
push
sub
pushf
dec
add
je
jg
add
lret
clc
stos
push
test
lahf
pop
fmul
cs
shrl
xchg
and
cmp
cmpsl
mov
push
mov
loop
repz
in
mov
jb,pn
sub
push
or
das
cwtl
mov
das
ds
push
addr16
test
hlt
pushl
cmp
cmp
cltd
jp
cli
xor
add
jl
mov
ja
dec
pop
loop
adc
ljmp
into
fidivrl
sub
aas
sub
scas
xchg
pop
leave
jmp
pushf
fsub
push
jb
mov
lods
adc
xchg
mov
push
lret
jnp
test
xchg
or
loopne
out
push
fyl2x
pop
dec
jg
sbb
cmp
push
mov
mov
add
mov
add
add
out
outsb
mov
iret
inc
daa
iret
fst
adc
inc
sub
movsb
and
xchg
int
or
hlt
push
xchg
imul
add
adc
jbe
xor
sarb
ljmp
push
nop
inc
or
pop
fsubs
cmc
cs
jge
cmc
call
mov
scas
sbb
adc
fldz
or
sub
data16
ret
adc
sbb
aaa
mov
xchg
mov
xchg
pop
lea
je
stos
test
mov
inc
and
push
sbb
mov
pop
aas
mov
jne
mov
sub
xchg
xor
mov
xlat
popf
mov
aad
stos
addl
stos
inc
lock
inc
test
sti
stos
adc
push
jg
add
gs
fsub
xlat
xlat
les
ja
repz
xchg
pusha
cli
lret
jle
push
fwait
lret
add
xchg
stos
adc
and
cmc
cmpsl
mov
clc
lret
stos
xchg
lret
xor
lods
test
jns
incl
popf
popf
loop
dec
mov
stos
je
xor
mov
scas
jecxz
mov
mov
std
hlt
push
inc
mov
jl
pop
push
jnp
or
repnz
lahf
fistpll
test
clc
jp
out
out
cmp
cltd
sbb
cltd
scas
mov
ret
xchg
data16
jl
call
mov
cld
xchg
mov
inc
hlt
ja
xchg
lahf
lcall
inc
js
out
outsl
xchg
jbe
mov
mov
cmp
jecxz
imul
cmp
mov
add
xor
jae
insl
add
rcll
ffree
xor
mov
bound
fildll
sub
fidivl
push
mov
cmpsl
mov
adc
mov
lcall
push
pop
das
mov
inc
mov
or
xchg
imul
nop
enter
imul
imul
mov
add
test
je
fbstp
xor
and
dec
nop
dec
ret
mov
imul
add
pusha
fimuls
mov
nop
fs
test
mov
push
shlb
bound
std
ficoms
sbb
out
popf
cmp
xchg
incb
pop
stc
dec
adc
aam
mov
call
mov
push
aaa
lahf
rcrb
add
jae
addr16
and
repz
arpl
cmp
mov
push
in
pushf
imul
addr16
mov
test
loop
cmpsb
insl
movb
jne
or
xor
test
push
sahf
pop
mov
aaa
ret
frstor
cltd
das
push
fdiv
js
pop
test
test
insl
xchg
leave
cli
je
mov
mov
or
mov
inc
repz
cmc
lcall
mov
inc
daa
imul
mov
pop
adc
ljmp
sbb
and
fildll
fdivrl
push
dec
cmpsl
cli
imul
push
cmp
ja
xlat
and
rcll
adc
xchg
fwait
jl
mov
xlat
inc
cli
dec
fisttpl
add
mov
or
add
dec
fs
fs
jl
mov
mov
popa
loopne
mov
add
jmp
dec
dec
rcll
inc
andl
and
xchg
lods
insb
aas
je
adc
sub
mov
incb
fisttpl
mov
add
call
cwtl
rclb
mov
push
xor
sbbl
jle
clc
clc
jecxz
xor
out
int3
scas
push
idivb
mov
add
adc
cmp
in
push
inc
rclb
xchg
pop
mov
rcrb
add
xchg
mov
mov
addr16
sub
cltd
stos
aas
adcl
es
lret
ret
outsl
or
pop
out
or
push
push
outsb
stos
loopne
lea
jge
sbb
sub
push
fsubs
dec
xor
clc
mov
movsl
dec
inc
inc
fistl
sbb
pop
ljmp
push
push
fcmovbe
xchg
add
mov
or
sub
xchg
pop
push
aaa
inc
aas
insl
cmp
in
lret
pop
jnp
rolb
test
cli
pop
out
dec
scas
mov
cmp
icebp
xchg
mov
mov
and
repnz
adc
mov
outsl
insb
cmc
mov
lods
mov
xchg
adc
push
mov
cmpsb
mov
daa
test
inc
stos
and
add
add
test
and
push
lods
test
pop
fldenv
pushf
inc
jmp
cltd
stos
stos
and
insb
sub
out
push
mov
dec
jae
clc
xchg
sbb
xchg
mov
pop
fimull
lahf
inc
push
jbe
in
sarb
in
xchg
mov
add
out
pop
push
and
rcl
out
xchg
mov
xlat
and
leave
cmpsl
lods
pop
popa
fidivrl
jg
popl
stos
aas
and
jp
repnz
mov
test
loopne
movsb
xor
idivl
pushf
or
scas
cld
and
or
cmp
out
mov
xchg
pop
fildll
mov
adc
fucom
mov
xchg
xor
fcomp
adc
cld
testl
and
add
rolb
and
mov
add
adc
mov
mov
dec
hlt
pinsrw
mov
push
xor
pop
imul
jo
mov
cmpsb
adc
icebp
lock
mov
ljmp
popf
mov
add
cmpsb
addr16
sub
mov
add
mov
adc
mov
iret
outsl
jbe
jecxz
fstl
mov
cld
nop
sub
inc
outsb
arpl
lret
push
test
fisubrl
dec
fsubrp
inc
dec
sub
dec
fsubrl
jne
fsts
dec
jb
ja
mov
fnstenv
xor
mov
mov
stc
imul
enter
ja
inc
and
push
jp
mov
int
inc
out
bound
and
jl
or
aam
cwtl
stos
jp
in
fnstcw
divb
shr
popa
ja
xchg
jmp
mov
xchg
jmp
incb
sub
fcmovnb
test
jno
dec
cmp
sub
nop
add
pop
xchg
clc
add
add
push
sub
and
mov
add
push
sub
ja
mov
das
xchg
mov
jb
pop
jl
fs
xchg
je
cmp
xchg
lret
test
stc
lods
cltd
ss
push
add
clc
testb
cmp
push
adc
cmp
in
pushf
mov
adc
int3
cli
imul
faddp
rcrl
testb
cld
lret
jg
data16
sbb
jmp
fisubrl
mov
fwait
or
pushf
dec
xchg
jg
aas
sahf
add
lret
stc
idiv
stc
sbb
ss
arpl
sub
or
mov
dec
mov
ja
aas
out
pmulhw
shr
dec
les
mov
hlt
xor
pop
and
cmpsb
push
cwtl
roll
and
mov
sbbl
sarb
repz
stos
pop
cmp
std
loopne
es
popa
sarb
js
dec
pusha
lds
scas
sar
push
jo
cwtl
mov
adc
repz
out
pop
negb
jmp
cmp
xchg
nop
movb
sbb
int
sbb
jecxz
aas
pop
xchg
push
xor
xor
sub
sahf
mov
aaa
jns
gs
inc
out
inc
daa
jmp
dec
enter
scas
fcomps
fwait
out
add
sub
xor
cwtl
fnstsw
jge
aad
fiadds
pop
adc
jle
xor
jae
mov
fistpll
daa
pop
es
arpl
xor
jno
mov
sub
mov
add
or
cmpsl
jnp
jge
push
jns
cmp
xor
pop
pop
notb
lods
je
xchg
je
int3
jae
add
jno
orb
cmpl
cmp
lods
movq
jb
xor
dec
stos
jno
sub
popa
ret
loop
xor
mov
inc
ret
mov
mov
jmp
lea
rolb
add
clc
out
ljmp
lods
xchg
mov
cmp
sbb
mov
mov
int
repz
fmuls
into
mov
mov
adc
pop
mov
cmp
es
mov
push
cmp
xchg
jb
pop
lret
xchg
and
adc
and
leave
add
and
mov
add
sti
push
movsl
out
fidivrl
inc
add
pushf
test
sbb
sbb
je
in
bound
ss
mov
fistpll
and
push
pop
adc
push
dec
or
daa
adc
dec
fwait
inc
jmp
jmp
or
or
mov
adc
mov
iret
add
mov
pop
push
and
insb
mov
dec
adc
dec
sub
cmp
add
aas
out
dec
sub
jp
pop
pop
aam
mov
dec
nop
mov
and
lea
or
movsb
dec
xor
fwait
cmpsl
inc
fsub
out
jns
cli
dec
inc
or
pusha
andl
jmp
jno
mov
in
dec
int3
sub
cmc
add
sub
cs
cmpsl
adc
popa
mov
std
int3
mov
or
daa
fs
push
push
fists
popf
enter
and
jg
iret
sbb
push
psubusw
and
xchg
inc
mov
subb
push
cli
xchg
mov
mov
cmp
cli
and
sbb
mov
cmp
mov
mov
fistps
addb
mov
add
pop
xchg
int
mov
aam
imul
or
or
push
test
add
inc
test
scas
push
mov
test
push
inc
lret
push
incb
ljmp
xor
iret
sbb
les
gs
push
lods
add
mov
mov
or
cmpsb
test
fwait
pop
jbe
subl
lret
sarl
loope
outsb
xchg
pop
xchg
mov
in
pushf
stos
das
test
sahf
pop
push
mov
stos
das
adc
pushl
sbbl
inc
sub
xor
frstor
dec
lds
jnp
sti
movsb
nop
sub
add
push
aad
arpl
push
icebp
fdivrs
fs
push
pop
dec
lock
je
aaa
fistpll
rorl
adc
sub
aam
add
into
ds
lea
mov
jo
out
shlb
jae
sub
test
xor
into
mov
add
add
movsb
jne
push
sarl
test
push
xor
inc
dec
mov
pusha
cmp
mov
fistpl
cltd
scas
popa
adc
adc
enter
enter
push
lret
test
cs
dec
xor
out
dec
xor
aam
das
pop
xchg
mov
cmp
test
notl
ss
cli
test
lret
add
pop
push
arpl
cmp
test
cltd
andb
jns
adcl
and
xchg
lahf
add
lods
movsl
out
inc
aad
xor
lock
xchg
pop
xor
add
das
sahf
adc
pusha
int3
xchg
lahf
frstor
and
pop
and
cmp
jp
repnz
jecxz
sub
outsb
stc
pop
loopne
outsl
push
dec
sbb
jmp
mov
mov
sbbl
xchg
mov
cltd
mov
int
push
orb
inc
fildl
fidivs
mov
push
andl
enter
mov
jmp
jno
mov
lret
mov
int3
sub
scas
stc
ret
fmull
fistpll
adc
pop
addr16
pop
jecxz
sbb
insl
sub
xchg
fwait
mov
inc
movsb
mov
mov
dec
sub
fistpl
xchg
dec
push
loope
idivl
jl
sbbl
lods
iret
clc
inc
xor
loope
cmp
push
push
pop
fisttps
cmp
shl
sti
add
movsl
leave
xchg
fidivl
push
sub
movsb
imul
je
xchg
sar
lea
mov
fisttps
xor
xor
sbbl
mov
xchg
mov
mov
jno
dec
mov
stos
sti
loope
mov
out
outsl
pop
or
movsl
sbb
test
adc
test
jbe
fcmovnb
int
pop
xor
scas
cwtl
addr16
cwtl
out
test
inc
pop
xor
insb
fwait
repnz
jl
hlt
out
cwtl
gs
jg
sub
loopne
adc
mov
mov
mov
inc
pop
sbb
loop
imul
addr16
mov
negb
xchg
ss
les
adc
or
or
fdivrs
fcmovb
pushf
push
fildl
iret
lahf
cmp
lret
fcmovnu
mov
stos
fsubr
dec
stc
inc
sbb
cli
testb
repnz
mov
pop
pop
mov
sub
ljmp
mov
add
lret
pusha
sti
aaa
lahf
imul
push
stos
and
lahf
out
fwait
cmp
sbb
fistpll
pop
mov
lret
and
mov
sbb
add
pop
pop
cmpsb
dec
jl
test
clc
jg
cld
mov
xor
hlt
cmp
xor
mov
test
xchg
adc
fidivl
out
xchg
mov
ficomps
adc
iret
jo
or
repz
xor
xchg
xchg
int
pop
dec
jo
pop
xchg
inc
loop
add
les
jmp
in
dec
pop
mov
mov
jmp
dec
jno
mov
test
mov
dec
push
mov
or
stos
pop
or
jg
xchg
fnstcw
in
mov
sub
ds
in
leave
orb
insb
addr16
je
mov
repnz
imul
add
sbb
mov
leave
sbb
outsl
fsubrl
out
pop
cmpsb
stos
pop
sbb
lret
sbb
jno
insl
rorl
mov
add
push
adc
jno
and
xor
into
xchg
adcl
cwtl
jl
mov
mov
aas
push
fisubrs
movsb
sub
sub
push
sub
and
mov
cltd
loopne
popf
int3
iret
jns
cmpsl
mov
push
xor
jmp
dec
andl
pusha
jmp
into
fidivrl
or
jmp
xor
and
or
push
xor
mov
xchg
clc
mov
jge
push
cltd
pop
and
jle
pop
inc
fmul
sahf
inc
shll
cmp
sub
push
xchg
xor
jp
add
outsl
jbe
and
mov
mov
mov
das
lods
cs
sub
xchg
in
mov
stos
inc
cld
decb
cmpsl
push
lcall
daa
stos
es
mov
test
add
jecxz
lods
mov
jo
inc
mov
out
shl
mov
negb
dec
call
pop
scas
mov
mov
mov
loope
mov
mov
jl
sbb
xchg
movsb
cli
nop
mov
test
test
push
out
xchg
sbb
in
call
jbe
out
sbb
jo
jne
ds
fsubrs
jl
movb
mov
nop
mov
test
ss
sbb
insb
inc
sub
cmp
test
sub
or
inc
scas
mov
lds
xchg
aas
push
inc
out
xchg
aam
gs
add
ffreep
sbbl
sub
pop
movsb
inc
push
inc
cmpsl
das
popa
mov
out
push
popf
or
loopne
add
xchg
sub
xchg
add
in
cmp
push
mov
movsb
sbb
fwait
adc
aad
into
push
jg
clc
sub
jl
clc
test
dec
test
push
clc
mov
arpl
sahf
imul
dec
daa
jno
jnp
mov
xchg
push
rolb
adc
pop
pop
lcall
out
ret
imul
je
das
loopne
mov
iret
xor
fldt
push
hlt
xor
ficompl
lods
test
rorl
imul
sbb
ret
lret
out
push
sbb
push
add
pop
push
and
sbb
xchg
sub
mov
or
xor
xor
lahf
adc
fistpl
sub
ja
incl
cmp
aas
leave
cmp
or
inc
fcoms
fwait
pop
pushf
outsl
test
icebp
sub
mov
push
mov
imul
addr16
shlb
or
xchg
cmp
testb
cld
jmp
dec
mov
xor
xchg
fldl
dec
push
sbbb
xor
out
in
push
out
bound
ja
rclb
inc
xchg
dec
aam
fadds
test
push
add
pop
push
pushf
dec
jne
scas
cmpsb
and
insl
ret
sub
and
mov
mov
xchg
clc
fbld
jb
add
jb
ja
xlat
sub
add
iret
gs
mov
jl
jne
dec
xchg
push
lock
bound
test
mov
mov
cs
sub
popa
mov
mov
xchg
aam
imulb
test
add
jg
xchg
pop
insb
push
sub
scas
addr16
or
fiaddl
mov
pusha
mov
pop
cmp
pop
push
jnp
inc
insl
das
insb
ret
fsubrl
cs
push
cmpsb
ret
outsb
mov
ds
add
fchs
inc
mov
fmull
into
lret
add
sub
mov
push
adc
addr16
cltd
ja
mov
fs
mov
jle
sub
loopne
fidivrl
in
mov
mov
lret
insl
add
mov
pop
out
in
sbb
cmp
aad
dec
or
jo
pop
shrb
mov
mov
inc
shlb
inc
ficomps
mov
iret
shr
push
test
push
push
movsb
jle
inc
outsl
dec
and
call
lds
mov
xchg
inc
jl
addb
outsl
inc
dec
ss
repnz
inc
ret
inc
jmp
in
push
sbb
ficoml
aas
dec
in
fisttpll
cmpsb
test
cmpsl
jne
and
jo
pop
jmp
data16
out
pushf
mov
shll
sbb
inc
fimull
mov
jae
aam
mov
and
insb
std
pop
jg
or
fsubrl
or
lret
test
pop
loopne
pop
jecxz
or
push
adc
jmp
lahf
push
xchg
jb
jmp
mov
inc
aaa
sbb
popf
inc
lods
push
xchg
xchg
sbbl
push
jne
add
xor
inc
aaa
test
adc
dec
cmpsb
aas
sahf
iret
xor
xchg
das
sub
or
stc
dec
insb
sarb
arpl
add
dec
cld
jle
xchg
push
inc
aad
data16
fldcw
cmp
or
mov
inc
mov
mov
xor
in
out
inc
leave
xor
adc
pop
jo
mov
pop
mov
xchg
fxam
outsb
stc
add
xchg
or
cs
dec
dec
sahf
jns
roll
inc
xorl
push
fnstenv
cmp
inc
daa
mov
lcall
xchg
pop
aad
adc
push
aam
loopne
lock
jo
iret
dec
movsb
int
cmc
mov
mov
pop
iret
sub
push
sub
dec
jns
ret
iret
inc
mov
sub
dec
lahf
or
pop
jno
add
mov
push
inc
fiadds
addr16
mov
jmp
pop
adc
pop
jb
fisubl
dec
loopne
xchg
mov
test
jo
lahf
jbe
jmp
out
loopne
sbb
cmp
leave
sbb
fildl
insb
iret
fadd
mov
mov
xchg
or
in
xchg
and
xchg
jmp
jae
push
arpl
and
sub
leave
sbb
mov
and
lahf
xchg
mov
push
mov
sbb
aaa
push
cltd
cmp
mov
nop
in
and
xchg
inc
rcr
ret
xor
inc
nop
mov
pop
jmp
mov
ret
popa
stos
in
mov
pop
xchg
sub
xor
jmp
into
and
lods
lcall
jnp
test
push
aam
sub
fwait
cltd
scas
mov
lea
or
mov
dec
int
push
pushf
cmp
shlb
add
js
mov
pop
and
pop
push
shll
mov
cmp
imul
ljmp
in
pop
imul
out
add
fs
mov
pop
je
push
pushf
scas
repnz
adc
xchg
inc
dec
xchg
aaa
into
out
sub
jb
jbe
insl
pop
add
lcall
fisttpl
cmp
js
mov
test
test
les
rol
xor
enter
stos
jecxz
mov
stos
fcoml
test
xlat
dec
xchg
and
cmp
jo
or
jecxz
sbb
and
push
rcrl
dec
add
fsubl
push
mov
pop
jmp
lds
nop
push
dec
cwtl
and
dec
fsubrl
jmp
aad
in
add
pop
imul
std
ljmp
inc
adc
sbb
insb
stos
leave
mov
sbb
pop
jbe
lret
call
fadds
dec
fnstenv
push
fs
mov
sbb
adc
mov
daa
hlt
cmp
jg
cltd
fdivrl
sub
loopne
stos
cmp
pop
inc
and
ss
xchg
addl
scas
cltd
pop
mov
pop
mov
clc
dec
cli
enter
sahf
sbb
sbb
xor
hlt
pop
xor
xchg
in
jmp
mov
inc
sub
add
shl
or
andl
cmp
mov
push
rorb
into
push
inc
xchg
shlb
rcrl
inc
mov
jg
aam
loopne
mov
mov
jb
ficomps
jecxz
icebp
and
cmpsb
xchg
inc
xor
lret
mov
or
mov
cltd
clc
mov
dec
pop
xor
lret
scas
jns
mov
mov
xor
push
pop
mov
fmuls
mov
aas
sbb
mov
add
push
lock
addr16
lcall
cwtl
push
dec
dec
mov
push
xchg
movsb
test
pop
pushf
push
sbb
push
in
cmp
cmp
xchg
jnp
stos
or
push
loopne
cmp
sbb
hlt
pop
std
popf
int3
add
pop
mov
fnstenv
mov
add
push
ds
dec
sbb
stos
lods
icebp
arpl
not
gs
adc
cld
mov
add
scas
and
lret
jecxz
stos
ljmp
insb
or
icebp
lock
repnz
xlat
xchg
fst
inc
jl
dec
jns
lds
dec
andb
xchg
dec
adc
mov
dec
lret
mov
cli
shll
jecxz
aaa
arpl
lahf
xchg
mov
dec
inc
jo
repz
sub
in
addr16
sub
and
jle
out
jne
mov
inc
pushf
out
stc
sbb
cmp
addb
mov
push
fiaddl
loopne
push
clc
and
xchg
pop
lds
sbb
pop
jmp
add
mov
sbb
bswap
xchg
jo
imul
fldpi
cli
add
jae
flds
aad
pop
jl
or
lret
mov
jge
and
arpl
popf
mov
push
cmpsb
jge
xchg
adc
test
xchg
cltd
fisubl
test
loop
jae
push
ljmp
pop
lds
ds
dec
mov
lds
xchg
add
xchg
out
lret
into
inc
cmp
cmp
loop
mov
xor
das
stc
mov
outsl
mov
pop
mov
pop
jl
cmp
sbb
ret
nop
scas
rcrl
lret
dec
and
and
pop
std
ljmp
subb
jmp
and
lock
mov
cmp
out
lret
jg
inc
or
xor
roll
push
mov
lret
sbb
or
mov
fisttpl
mov
jp
call
daa
adc
jns
cli
les
test
sub
xor
sub
adc
js
outsl
fistpl
fbld
xor
roll
ljmp
addl
xor
fdivs
test
mov
cmc
or
das
repz
mov
cmp
cmpsb
ret
jl
sarl
push
xchg
aas
aam
inc
or
inc
aam
lods
mov
dec
inc
dec
int3
lds
dec
xchg
cmp
leave
add
shrb
mov
stos
lea
jge
and
fistl
adc
xor
jae
int3
imul
in
mov
pop
enter
xlat
push
fwait
dec
fdivrs
cmpsl
inc
mov
jg
insl
and
jne
dec
nop
sbb
inc
sbb
lret
mov
stos
popa
mov
xor
mov
pop
ret
out
cmc
lods
and
je
clc
mov
dec
stc
inc
or
jmp
and
psadbw
pop
idivl
std
push
cmp
bound
pop
aas
xchg
push
add
mov
mov
adc
adc
xchg
jno
dec
test
mov
jmp
or
scas
pusha
sar
or
dec
push
adc
jmp
mov
cmp
imul
pop
mul
dec
pushf
mov
adc
sahf
xchg
and
ds
jnp
sahf
cmp
xchg
test
fucomip
dec
sbb
jg
push
xor
int
or
adc
iret
mov
mov
sarl
mov
ret
movsl
and
dec
mov
dec
jmp
xchg
daa
and
sahf
dec
push
nop
xchg
cmp
jnp
rcr
scas
fldenv
cs
fs
ret
xchg
rclb
adc
repnz
xor
or
lods
scas
fmull
stc
iret
loope
nop
mov
pop
jb
add
or
mov
sahf
mov
in
imulb
inc
shr
iret
dec
cli
insb
mov
mov
cmp
test
mov
mov
cmp
jo
ficomps
call
or
or
lods
mov
jge
outsl
sarl
stc
jo
ss
jo
inc
dec
sub
imul
roll
int
and
ret
mov
xchg
mov
push
into
in
xchg
or
mov
mov
fsubrl
ret
push
inc
xchg
xor
sbb
sub
fisttps
inc
xchg
sub
scas
cwtl
mov
jnp
test
jl
mov
stos
lea
loop
push
lahf
lea
movsl
mov
popf
das
inc
mov
jns
cld
add
pop
popf
pop
adcl
mov
jp
pop
sbb
xchg
push
dec
mov
add
out
sub
jl
pop
in
ja
daa
mov
js
test
dec
jno
cld
mov
add
mov
adc
lods
mov
dec
jno
loopne
inc
xchg
or
xchg
jae
xchg
cmp
dec
out
push
or
sub
lret
pop
cld
lock
cmc
test
mov
xchg
aaa
mov
push
pop
and
push
mov
mov
jmp
pop
movsl
in
jno
xchg
pop
or
cmpl
mov
mov
imul
adc
arpl
push
int3
pusha
fidivrl
lds
fidivrl
cmp
sub
sbb
adc
adc
pop
sahf
call
jno
fildl
cli
iret
push
lcall
daa
and
mov
jb
fsubl
out
lods
lock
rcl
sar
leave
testb
xor
mov
repz
andl
into
les
jg
bound
jmp
jmp
stc
imul
pushf
mov
sub
in
inc
mov
sarl
xor
dec
jnp
fistl
push
lea
ja
inc
repz
inc
or
dec
mov
or
and
in
pop
and
shlb
jne
addb
into
cld
dec
dec
arpl
xor
mov
dec
test
adc
jl
add
mov
lods
out
push
sub
jo
mov
out
mov
rol
js
daa
popf
scas
ljmp
xchg
mov
and
mov
lret
imul
inc
xchg
mov
xor
or
jb
adc
mov
aas
stos
shl
rol
jne
dec
pop
mov
dec
decb
add
popf
inc
nop
push
ja
pop
adc
xchg
mov
lea
and
cli
stos
add
enter
add
xchg
add
les
sub
xor
jp
push
iret
or
adc
pop
cltd
out
push
fucomip
xor
push
test
adc
and
push
outsb
push
add
mov
or
outsb
mov
call
fdivrp
xchg
sbb
fwait
sub
cltd
es
or
mov
rcpps
push
xor
shl
sbb
dec
insl
arpl
repz
repz
aam
dec
xor
mov
fcompl
xchg
dec
or
xchg
jle
xchg
push
add
dec
fstpl
test
aam
push
fnstcw
or
iretw
pop
lret
imul
scas
inc
xchg
loop
mov
mov
repnz
arpl
addr16
repz
dec
mov
call
pop
scas
sub
inc
cmp
mov
sahf
test
mov
iret
mov
jns
fimull
xor
inc
xchg
or
xchg
mov
pop
xor
je
fldenv
cli
mov
mov
xchg
dec
add
add
push
mov
std
jns
scas
std
xchg
cltd
and
xchg
mov
pop
sub
mov
mov
xor
scas
in
addr16
imul
in
push
fistl
xorl
sbb
in
enter
mov
iret
pop
xchg
cmp
adc
movsb
mov
dec
lcall
lret
mov
mov
jecxz
add
and
and
add
testl
inc
fwait
in
ffree
test
mov
cmc
jo
mov
jle
mov
js
outsb
push
dec
inc
xchg
fldt
push
xchg
mov
jmp
pop
ja
movsl
push
aam
or
pop
ds
int
aad
mov
or
sbb
jae
movsl
adc
jnp
lds
mov
clc
xchg
int3
aas
xchg
rorl
cmpsl
push
aad
fs
xchg
mov
mov
les
jp
or
jmp
and
mov
push
dec
call
pop
jnp
mov
lds
les
lea
iret
pop
pop
pop
jle
fcomps
test
pop
xor
imul
push
ljmp
andl
or
data16
lods
out
xorl
fstl
icebp
dec
in
jnp
filds
cli
mov
dec
inc
mov
mov
adc
dec
test
sbb
mov
xor
and
imul
fldt
std
pop
jns
inc
or
movsl
pushf
pop
jae
pop
mov
push
dec
adc
imul
fsts
xor
xchg
xlat
aam
lret
sbb
push
iret
xor
and
adc
stc
or
and
pop
sbb
sub
mov
stos
roll
ss
cmpsl
xor
shlb
add
dec
fldt
fnstcw
shrb
inc
loopne
mov
leave
in
fadds
adc
push
mov
push
add
je
bound
test
push
and
lahf
sbb
inc
cmpl
insl
out
leave
xchg
ret
sbb
in
inc
push
add
sahf
dec
insb
enter
xchg
cmpsl
pop
push
dec
dec
add
push
into
mov
in
ds
push
scas
enter
aam
fnstcw
loopne
popa
mov
adc
push
pop
sub
pop
adc
ret
inc
mov
arpl
jmp
jl
mov
add
cmp
adc
mov
and
movsl
stc
push
cmp
or
mov
sbb
dec
jge
sbbl
xchg
jne
mov
out
mov
iret
cmp
shlb
inc
das
push
imul
pop
bound
enter
int3
xchg
and
xor
add
jae
ret
cmp
sbb
mov
jno
sbb
cltd
xchg
int3
movsl
inc
inc
fldt
jp
dec
xchg
jns
mov
loope
mov
dec
dec
sahf
cmp
xchg
int
idivl
push
jp
sub
dec
stc
mov
popa
mov
lea
lahf
jge
mov
daa
pop
dec
scas
push
mov
sbb
mov
pop
pop
push
jg
fdivrs
fcomi
jne
shll
imul
pslld
ljmp
push
push
add
ds
lea
dec
and
pop
xor
ficoml
shll
int
mov
pop
sbb
mov
loope
test
push
orb
push
dec
loope
add
fs
jg
stos
pop
add
jle
lods
filds
mov
les
inc
cmpsb
fnstcw
fisttpl
cwtl
cltd
and
push
ljmp
inc
or
add
add
add
cmpsl
shl
pop
jmp
or
lea
mov
movzbl
call
loop
cmp
addr16
cmc
stos
loop
inc
mov
pop
xor
or
mov
pop
push
mov
mov
mov
push
cmp
sbb
ficoms
and
adc
mov
sarl
cmc
jne
ljmp
outsl
in
int
test
xor
pop
mov
or
pop
jmp
test
enter
insl
fbld
in
loope
iret
js
mov
xor
cmp
lods
popf
js
push
nop
movsb
jno
mov
lods
mov
les
mov
pusha
clc
sub
lock
test
test
inc
cwtl
xlat
cmp
repnz
dec
add
pop
mov
lret
adc
push
inc
mov
pop
mov
jno
outsb
lea
dec
and
jo
lret
out
iret
cmp
mov
insl
push
jmp
jbe
dec
mov
inc
ficoml
sbb
mov
adcl
xchg
dec
mov
lret
iret
fists
fs
fs
test
push
xor
aas
lods
fmull
mov
es
int3
inc
mov
sahf
sbb
jl
cmpl
dec
je
aad
fwait
sahf
jmp
mov
mov
test
xchg
or
insl
and
add
push
or
jne
mov
lcall
inc
adc
aam
movsb
xchg
nop
mov
xchg
cli
clc
popl
les
pop
push
mov
dec
cli
adc
cmpsb
out
movsl
ds
lcall
mov
sbb
or
sub
pusha
inc
imul
fs
push
addl
mov
pop
loop
fwait
popa
pop
mov
push
out
or
pop
test
mov
jg
and
mov
xchg
ds
out
stos
stos
cli
cmc
les
mov
pop
test
psubw
inc
je
push
in
dec
cwtl
pop
lea
sub
inc
testb
xchg
mov
xchg
xchg
dec
inc
adc
xor
inc
loopne
dec
lods
xor
mov
lret
xchg
jne
lock
or
add
mov
mov
in
ficomps
pusha
icebp
ljmp
stc
xorw
int
cltd
mov
mov
sahf
cmp
add
mov
xchg
and
mov
sarb
test
nop
mov
sbb
sub
jbe
clc
mov
fldt
adc
cld
jne
sub
push
cltd
in
nop
adc
push
push
jno
pop
test
inc
mov
push
popa
or
daa
jmp
adc
sarl
pop
or
jne
add
mov
ljmp
add
dec
sti
cwtl
fsubs
fdivrp
xlat
call
scas
ds
xchg
rcl
test
adc
mov
hlt
push
pop
or
icebp
sub
out
lock
push
and
subb
popa
or
add
pop
subl
imul
inc
sarb
test
mov
sbb
fucompp
mov
sub
sbb
sub
rcrl
jge
cmp
sbb
ja
jnp
jg
repnz
xor
dec
popf
mov
push
inc
push
add
addr16
dec
pop
jnp
push
and
adc
daa
roll
xchg
push
jp
and
dec
sub
mov
pusha
div
xchg
jmp
fcompl
cmp
or
or
popa
xchg
aam
fsubs
dec
add
pop
js
adc
out
pop
mov
js
in
call
cmpsb
sbb
jo
mov
xor
pop
cmp
rclb
add
sbb
xchg
push
in
in
inc
pop
xor
xchg
adc
xchg
xlat
jle
fcomps
fs
jp
ret
aas
aaa
aaa
mov
test
sub
ret
xchg
in
ljmp
gs
and
push
add
ljmp
lret
cmp
sub
movsl
fnsave
cs
jge
xchg
xchg
mov
dec
xlat
push
xchg
pop
add
faddl
pop
aad
inc
mov
mov
xor
push
xchg
scas
fisttpl
pop
and
mov
cmpsb
orl
mov
cmp
or
out
in
or
push
ja
jmp
xlat
iret
in
and
mov
jo
fldenv
nop
xchg
mov
sub
lods
or
es
daa
aam
mov
addr16
stos
inc
shll
in
xor
ret
and
jecxz
stos
add
cwtl
lea
sbb
aam
cli
jp
movsl
sbb
je
fcom
movsb
ffreep
clc
pop
ljmp
lcall
sub
movd
ljmp
popf
out
mov
pop
cmp
dec
pop
mov
xchg
dec
ja
std
push
sahf
repz
push
jg
mov
rcl
xchg
jecxz
repz
scas
addr16
aad
inc
scas
insb
dec
xchg
pop
out
fldt
jae
out
sbb
popf
pop
xor
ss
roll
je
xor
pop
rcrb
out
jnp
cmpb
push
lret
daa
outsl
xlat
fcomi
adc
repz
mov
jecxz
cli
cwtl
popa
shr
pushl
mov
out
add
xchg
sub
sbb
xor
lods
adcb
or
or
xchg
imul
movsl
outsl
sub
hlt
sub
popf
xchg
fcmovne
inc
push
xchg
mov
pushf
popf
pop
outsb
push
lds
sahf
scas
addb
mov
sub
fistpll
aad
adc
sbb
in
mov
test
test
mov
test
add
lcall
dec
in
das
or
andb
jle
push
and
loop
lahf
pop
ss
push
cmpsl
add
pop
push
cmp
loop
xor
inc
gs
test
movsb
daa
popf
mov
adc
or
jge
les
pop
cmp
movsb
jmp
xchg
cmpb
sub
and
inc
fs
mov
mov
enter
lds
ficompl
popf
out
dec
pop
inc
adc
pop
xor
mov
sbb
cs
pop
jge
push
cmp
mov
inc
cwtl
adc
fldenv
iret
xlat
or
ret
sub
add
sbb
into
dec
xchg
insb
add
fld
sbb
das
outsb
xchg
pop
dec
scas
sub
add
add
sbb
mov
test
xchg
outsl
mov
mov
insl
adc
sub
mov
in
adc
mov
test
lods
aas
dec
fcoms
pop
jnp
cli
aad
pop
xlat
pop
in
add
enter
mov
pop
mov
lds
insb
call
push
loop
cld
dec
cmpsl
and
pop
or
add
popf
jge
mov
xchg
pop
mov
xor
aad
mov
popf
jb
xchg
jmp
and
sub
popl
test
mov
loop
or
add
fimull
sarb
mov
dec
mov
jp
mov
movsb
cmpsl
stos
cmp
mov
cmp
push
push
out
dec
lahf
mov
mov
xor
xchg
bound
stos
xorb
ret
das
push
xchg
and
call
xor
pop
shll
add
lret
cmp
push
in
mov
xchg
push
push
sarl
pop
sbb
gs
mov
mov
cmpsb
stos
frstor
inc
xchg
push
mov
or
dec
pop
imull
dec
inc
adc
pop
xchg
fdivrl
xchg
aad
sbbl
mov
daa
outsl
fadds
fcomps
dec
or
and
data16
push
js
sub
push
or
js
daa
mov
inc
mov
fbld
ja
pushfw
and
rorb
jge
add
fbld
ret
pop
dec
xor
lods
in
enter
and
pop
subps
mov
push
xchg
addr16
add
xchg
insb
arpl
roll
int
dec
mov
jmp
lahf
jge
push
std
cmpsl
in
cltd
xchg
xchg
sub
inc
int3
pop
jg
or
clc
rclb
loope
push
xor
inc
nop
sub
out
pop
xchg
xchg
cmp
cld
dec
xchg
bsf
add
repnz
insl
sub
jne
push
data16
or
lret
aam
lock
fbstp
ja
daa
insl
and
push
cmp
fldenv
mov
mov
or
ds
add
scas
ret
jb
popf
aas
test
test
push
jb
fucomip
pushf
cs
int
lods
dec
pop
xchg
rcr
pop
xor
scas
imul
enter
fsubrl
loop
js
rolb
mov
out
enter
fiadds
lret
fstl
pop
nop
outsb
in
andb
mov
lcall
scas
lods
mov
cmp
insl
xorl
cmp
popa
mov
inc
dec
sub
sbb
shll
adc
pop
mov
ret
ret
out
mov
cmpsl
and
cld
mov
xlat
jne
sbb
mov
xchg
adc
iret
lret
movsl
or
test
stos
or
sahf
mov
push
decl
jecxz
std
testb
test
ret
pop
jmp
dec
mov
pop
inc
inc
or
fstl
rsm
push
mov
mov
fcomps
ror
lods
fisubrs
or
xchg
cmp
pop
xchg
fwait
pop
push
mov
rorl
std
adc
out
aaa
cmp
jmp
jno
xchg
jg
subl
shlb
inc
dec
clc
iret
neg
pop
jl
mov
cmp
xlat
sub
out
xchg
adc
ret
xchg
dec
mov
pop
mov
les
sqrtps
adc
pop
test
inc
mov
push
sahf
ret
ret
int3
adc
inc
in
push
negb
mov
add
cmc
stos
sub
pusha
sti
inc
out
or
sahf
xor
sub
adcl
sbb
inc
arpl
add
out
out
jae
cmp
aam
lret
adc
xchg
adc
adc
lahf
adc
divb
xchg
lcall
mov
push
scas
shrb
lods
or
or
addb
push
cmp
push
outsl
xchg
sub
sub
mov
mov
fs
stos
mov
add
pop
addr16
sub
push
rorl
call
fdivrl
popf
cmp
xchg
xlat
int
rcrb
pop
xor
and
mov
xchg
pop
in
xor
in
inc
jno
cltd
sbbl
pop
push
inc
xchg
dec
push
call
xor
and
sarb
mov
fdivs
pop
int3
jo
movsb
subb
movsb
xchg
push
push
and
mov
outsb
mov
push
mov
mov
movsb
adc
pop
push
dec
vcvtdq2ps
mov
lock
push
mov
sbb
pop
outsb
arpl
popf
xchg
iret
sub
mov
push
pop
cld
pop
imul
adc
fwait
clc
mov
jmp
mov
xor
leave
std
shrb
ljmp
dec
xchg
and
jmp
in
push
dec
neg
lods
xor
and
jecxz
add
xchg
push
inc
das
mov
in
xor
or
dec
aas
jmp
cmpsl
insb
xchg
push
xor
shl
das
inc
rcrl
mov
or
icebp
fisubrl
and
mov
add
xor
arpl
ret
push
cmpsl
int3
aaa
test
sbb
outsl
fwait
sbb
out
orl
sti
xchg
fcoml
rclb
dec
aad
lret
lcall
int3
xchg
loop
or
push
ds
hlt
cltd
xor
and
out
cmp
and
or
jns
dec
mov
mov
fidivs
push
pop
add
cwtl
aam
mov
and
scas
lds
xchg
dec
cli
cs
aaa
and
fiadds
xchg
imul
stos
dec
jmp
mov
dec
mov
popf
push
cltd
insb
push
cmp
or
cwtl
popl
push
adc
pop
cmpsb
push
jo
call
mov
or
outsl
xor
rcrb
imul
add
filds
gs
ret
fstpl
mov
cmp
xchg
mov
int
jb
jo
imull
mov
add
xchg
adc
and
add
mov
dec
adc
mov
and
mov
jp
int
test
lock
rclb
bound
leave
aas
or
cltd
mov
int3
pop
and
add
lds
cmp
sub
icebp
fiadds
fstps
jno
decl
adc
imul
js
into
sub
add
mov
add
mov
ja
das
ss
shl
stos
ss
push
cmp
jns
mov
data16
pop
orb
xor
test
addr16
in
push
jp
andl
mov
or
inc
jnp
inc
sahf
pop
mov
adc
stc
ds
les
aad
xchg
xchg
inc
imul
loop
xchg
inc
fimuls
mov
out
cmp
xlat
jnp
or
ret
leave
inc
fisubl
dec
popa
xor
mov
xor
xchg
mov
xchg
and
xor
roll
xor
mov
cmp
mov
jmp
je
xor
daa
nop
dec
mov
icebp
out
lret
and
adc
pop
ja
xor
pusha
push
aaa
jae
ja
pop
or
jmp
xor
mov
call
fcomps
shrl
js
inc
cmp
and
data16
out
aas
out
sahf
cmpsl
pop
outsb
fwait
call
lds
push
jmp
mov
aaa
cmp
add
mov
xor
mov
dec
into
pop
out
sub
dec
dec
mov
jno
pop
inc
es
or
faddl
pop
cltd
data16
xchg
pop
pop
push
fbstp
dec
sti
cltd
popf
mov
lcall
imul
outsl
pop
pop
push
inc
xor
mov
and
js
fscale
jne
mov
or
mov
xor
out
clc
in
xor
inc
add
mov
or
sub
xor
sarb
and
mov
sub
mov
lds
and
or
adc
jp
xchg
pop
sbb
icebp
inc
xor
lock
dec
aas
or
ja
out
fisubrs
push
sbb
daa
jnp
or
stos
mov
roll
jg
int3
cwtl
into
fldl
mov
gs
sub
xor
xorl
mov
mov
insl
pop
jp
jbe
ss
push
jae
stos
nop
scas
jne
pop
mov
xchg
mov
popl
ficompl
add
test
iret
pop
ficoms
dec
push
xor
scas
insb
pop
xor
mov
cmc
lea
mov
int
fwait
and
fs
push
inc
dec
xor
jecxz
lret
scas
jns
insb
mov
or
lods
cmp
ss
cmp
mov
pushf
fidivs
mov
jae
add
pop
mov
add
enter
cltd
or
cmpsb
stos
cmp
or
pop
sbb
sub
push
movsl
pop
cmc
or
push
gs
data16
sbb
jl
mov
xchg
or
mov
cmpsl
fwait
clc
mov
js
lret
popa
lock
jle
xor
in
fidivrl
popl
jmp
or
test
cltd
add
jns
push
enter
push
jle
call
inc
jbe
xor
cs
mov
sub
sbb
ljmp
movsb
adc
mov
push
inc
jnp
mov
sub
jge
cmp
popf
mov
lods
push
insl
or
adc
push
pop
add
nop
adcl
int
stos
ja
inc
in
xlat
mov
sub
mov
sahf
jbe
in
fimull
add
or
mov
imulb
adc
cs
sbb
dec
jl
pop
xchg
sarb
imul
pop
dec
cmc
dec
sub
icebp
ja
mov
data16
jp
pop
mov
sbb
mov
bound
es
mov
in
dec
arpl
jno
or
xchg
jnp,pn
mov
jmp
jg
adcl
pop
mov
mov
ljmp
stos
hlt
test
imulb
insl
ja
mov
cmp
mov
iret
lcall
dec
mov
mov
daa
inc
mov
in
pop
jns
rorl
sbb
mov
int
pop
imul
adc
jp
inc
data16
les
lahf
push
cli
sahf
aaa
in
aas
scas
icebp
mov
sub
insl
mov
mov
in
lret
stos
popa
push
ret
jle
in
sub
mov
adc
lret
mov
push
ljmp
add
xor
dec
push
sub
aam
xorl
addb
xchg
adc
xor
xchg
or
scas
outsl
cmp
into
xchg
mov
aas
cmc
mov
enter
hlt
or
jle
lcall
data16
sbb
dec
stos
cmpsl
sti
xchg
jns
mov
and
mov
ljmp
lods
cmp
ljmp
rolb
data16
rcll
and
hlt
dec
roll
stos
outsl
pop
dec
xlat
daa
inc
daa
mov
ss
adc
pushf
fisubrl
stos
nop
ficomps
cmpsl
out
shr
ret
loope
xchg
and
int3
jae
sub
cmp
mov
lahf
dec
sbb
jbe
push
loope
nop
sahf
les
add
cmp
mov
push
cs
iret
push
push
aam
add
jo
jae
add
adcl
aaa
in
dec
push
xchg
jge
fisubrs
xchg
nop
adc
dec
sbb
inc
decl
xor
sub
jp
mov
pop
push
movsl
ds
rcll
pop
test
inc
jne
push
inc
mov
inc
lret
movsl
xchg
jns
xor
push
sbb
bound
stc
sub
aam
pop
call
mov
repnz
fldcw
orl
adc
pop
pop
mov
sbb
sahf
inc
imul
pop
add
jbe
sub
inc
repnz
jge,pn
jg
popf
mov
repnz
xchg
stos
xchg
adc
out
mov
mov
xlat
fadds
iret
test
daa
repnz
mov
leave
stc
aaa
call
fdiv
push
outsb
adc
dec
les
dec
icebp
movlps
jne
xchg
mov
sub
sub
into
das
lods
outsl
data16
cmp
outsb
dec
ljmp
sbb
inc
aad
xor
ror
cltd
mov
or
ret
cmpsl
adc
jo
test
dec
and
stos
push
bound
test
popa
jg
out
rolb
add
in
or
in
or
xor
mov
iret
rcll
mov
outsl
jmp
push
dec
dec
and
in
lods
xor
ret
pop
mov
dec
xor
cmpsl
mov
mov
adc
xchg
dec
stos
leave
xchg
xchg
dec
push
fsubrl
pop
nop
rcrl
or
or
jo
cmpb
push
mov
inc
xrelease
lea
fadds
mov
rolb
pop
inc
jns
call
cmp
fiaddl
mov
lds
ja
lods
aam
out
push
add
loope
or
in
mov
aas
jge
fs
jae
shll
mov
jne
push
inc
jnp
or
fucomp
fucomip
and
cmp
mov
insl
int3
xchg
lods
inc
xchg
sbb
mov
fwait
out
hlt
js
sarb
subb
mov
pop
fidivs
out
daa
outsl
pop
cld
xchg
xchg
or
shrl
mov
out
clc
and
pand
shlb
mov
loope
inc
xorb
pop
mov
out
out
sub
xor
pop
dec
adc
popa
jl
loopne
mov
lods
loopne
es
adc
ret
cmp
xchg
inc
sbb
imul
addr16
xchg
xchg
mov
push
push
or
inc
js
and
aad
inc
pop
scas
and
movsl
ret
gs
jmp
mov
in
cli
bswap
inc
cmp
int
push
mov
pop
push
inc
jg
pusha
test
lea
testl
add
pop
rcr
jp
std
push
sbb
icebp
and
pop
sub
and
call
sub
push
aas
fistps
out
out
shlb
jns
push
bsr
push
adc
sub
imul
dec
pop
and
cwtl
push
push
clc
jmp
xchg
scas
add
or
pop
outsb
cld
inc
lock
into
lcall
test
inc
mov
or
pop
icebp
or
jp
adc
lcall
jno
jg
addr16
fwait
dec
cwtl
jg
sbb
orl
imul
jns
push
add
jecxz
cs
out
fsubrl
xchg
and
mov
jb
cmp
aaa
call
cmp
rcrl
addr16
mov
insb
cmp
packuswb
adc
lcall
inc
leave
setp
add
fwait
rcll
xchg
rcrb
xor
fldl
mov
sahf
jle
cmp
add
aas
sbb
cmp
mov
mov
and
aaa
in
adc
fsts
jno
push
inc
xchg
adc
adc
mov
mov
fsts
loopne
insl
push
shr
int
aas
pop
jmp
cmp
push
arpl
insl
xchg
cmp
loop
icebp
dec
sub
mov
imul
repnz
dec
and
idivl
xchg
mov
test
mov
and
test
xchg
mov
add
jg
adc
inc
rolb
add
nop
cmp
stos
adc
jbe
insl
xchg
test
popa
mov
mov
into
xchg
mov
cmp
pusha
push
je
insl
clc
add
inc
pop
mov
dec
push
cmpsb
or
jg
out
loop
test
mov
and
cltd
mov
and
mov
outsb
add
gs
fcoml
in
sbb
mov
jp
sahf
popf
std
push
test
in
das
mov
leave
lds
cmp
inc
xchg
lcall
dec
jmp
flds
adcb
add
sub
mov
push
add
jle
fnstsw
lret
or
xor
hlt
mov
jno
frndint
fisubl
jp
and
int3
stos
dec
shlb
les
insb
mov
push
push
adc
sbb
cmp
outsl
xchg
frndint
mov
ljmp
jnp
int3
inc
fnstcw
xor
in
mov
lcall
pusha
xor
fmuls
push
mov
sub
pop
pop
dec
test
adc
mov
insl
fistpl
mov
mov
mov
mov
cs
ds
push
fmuls
pusha
mov
cmpsb
sbb
pop
fnstcw
pop
mov
jo
xchg
sub
test
nop
pop
pop
push
jbe
xchg
dec
loope
inc
pop
test
pop
dec
add
xchg
inc
mov
push
sbb
andb
shlb
fcmovne
sub
adc
ja
or
pop
shlb
xchg
mov
jnp
mov
push
add
popa
xchg
jg
out
shlb
subb
addl
mov
push
dec
testl
push
scas
into
and
adc
dec
fldcw
dec
push
shll
mov
push
mov
cmpsl
cwtl
jle
lds
movl
sub
jmp
mov
jbe
leave
lahf
fisttps
stos
inc
pop
jl
lods
mov
or
sarl
xor
lahf
pop
add
xchg
lret
daa
mov
xchg
jmp
mov
fildll
test
into
jecxz
mov
sub
or
mov
mov
in
ljmp
test
dec
sbb
cmp
mov
pop
into
xor
mov
out
xchg
sub
xor
fidivrl
mov
xchg
add
sti
lods
jmp
test
seto
sub
call
pop
push
mov
pop
loop
inc
mov
and
aam
jns
jmp
cmp
add
cmpsl
jae
xchg
scas
jge
mov
fisttps
and
lcall
xchg
unpckhps
mov
pop
xlat
push
dec
aad
adc
into
mov
or
cld
das
cmpsb
jae
pop
rcll
mov
jp
jo
or
test
mov
push
daa
jo
cwtl
std
idivl
pop
aam
aam
pop
aas
scas
cld
fstl
ficomps
jbe
pusha
cmp
mov
sbb
mov
push
fs
popf
cmc
int
jl
enter
scas
or
test
sub
push
pop
adc
xchg
popf
cli
mov
inc
cmp
xchg
inc
dec
adc
mov
iret
scas
push
ret
inc
ds
cmp
jmp
ret
jnp
jl
and
sub
mov
xchg
inc
cmp
sub
divl
jbe
bound
lea
mov
jbe
push
adc
jg
dec
pop
dec
or
pop
popa
adc
adc
stc
aas
popa
insb
sbb
push
push
out
inc
xchg
jecxz
outsl
sbb
add
iret
subl
sahf
inc
xchg
sbb
cwtl
xchg
loope
inc
jg
pop
push
imul
pop
inc
loop
outsl
dec
lods
imul
mov
fcmovnbe
outsl
xchg
test
stos
das
xchg
push
dec
cmpsl
xchg
sbb
pop
sub
movsb
or
jae
in
popa
sarb
or
push
sahf
ret
cltd
xchg
mov
imul
dec
mov
adc
and
jno
divb
mov
pop
in
and
ror
inc
sbb
jb
inc
shlb
pop
aam
add
dec
push
aam
xchg
adc
data16
sub
xor
call
cltd
popa
xchg
pop
add
adc
xchg
arpl
jae
test
mov
dec
jmp
sbb
test
ret
popfw
add
inc
pop
outsl
out
pop
lock
sbb
adc
or
stos
repnz
aam
xor
test
aam
shll
je
inc
loopne
jp
mov
mov
add
ja
cltd
fcoms
xchg
clc
loop
mov
insl
jo
push
dec
mov
scas
addr16
cmp
mov
dec
addr16
push
lea
jo
int3
pop
popf
lds
loop
add
xor
sbb
popl
sbbl
cs
cs
xchg
cmpsb
adc
xchg
out
out
mov
sub
ljmp
mov
xor
shll
jno
push
invd
pop
std
pop
test
sub
sbb
mov
pop
insl
cmpsl
add
pop
add
sub
mov
mov
dec
scas
inc
push
push
push
inc
xlat
or
rcr
xchg
stc
pop
cmc
in
or
xor
lods
lock
sahf
add
fnstsw
mov
mov
lds
mov
jae
rcl
std
push
lods
pop
nop
stos
sub
scas
out
and
xchg
inc
ds
jno
gs
xor
fstps
in
jbe
in
jnp
gs
gs
push
loopne
xor
data16
nop
and
xor
repz
dec
mov
xor
and
cmp
pop
inc
out
arpl
push
data16
jae
adc
sahf
pop
cmpsl
sub
and
flds
adc
add
push
jo
inc
loopne
lock
sbb
sub
sbb
or
add
mov
popf
out
pusha
out
cmc
jle
xchg
leave
mov
inc
adc
mov
ret
push
addr16
js
repz
fstpt
push
mov
into
lcall
push
jmp
outsb
mov
sahf
sub
aad
mov
pop
in
mov
push
xchg
test
inc
dec
inc
pop
xlat
inc
mov
push
lods
movsl
mov
dec
and
xor
lock
mov
or
sti
fstpl
idivb
fsubrs
fisubs
sahf
mov
lahf
imul
jmp
test
je
shrb
pop
insl
aam
aas
test
cmp
mov
xor
fidivrs
add
cmp
add
loopne
jg
inc
and
push
aas
popa
fcoms
sbbb
jp
jp
cmp
bnd
inc
dec
cmp
push
push
mov
add
outsl
call
sub
jecxz
push
dec
ljmp
imul
mov
fxch
lahf
pop
or
scas
xchg
addr16
mov
xchg
bound
pop
pop
ficomps
mov
addr16
sbb
or
mov
out
xchg
jno
gs
push
sbb
jns
push
mov
adc
push
fdivrl
lcall
les
es
pop
inc
push
adc
popa
insl
or
sub
mov
sbb
scas
push
ds
xchg
sbb
stos
push
pusha
out
cmovo
aas
aas
dec
jae
push
dec
outsl
jle
ror
pusha
mov
or
js
movsb
and
sahf
fdivr
in
pop
sbb
fnstsw
faddl
or
inc
data16
cmp
push
arpl
ret
xor
inc
sbbb
cmpsb
stos
sub
xor
jbe
mov
aas
inc
xor
mov
xor
jl
inc
ja
mov
mov
fidivrs
pushf
mov
jnp
adc
mov
mov
imul
in
xchg
inc
daa
out
jp
cmp
popa
jp
sub
lds
jns
mov
sti
xor
inc
jle
fs
add
and
mov
das
jnp
mov
dec
sub
adc
fdiv
sbb
loopne
xor
and
das
push
dec
fsubl
jmp
sub
mov
jnp
stos
bndldx
stos
leave
sbb
add
sbb
ljmp
push
scas
push
test
push
test
stos
push
lods
arpl
ja
movl
pushf
ljmp
sbbb
pop
shlb
loopne
aam
xor
jnp
ret
and
mov
shr
lret
aaa
pop
mov
mov
or
push
nop
inc
cli
push
mov
dec
cmp
shlb
add
mov
cmp
cwtl
scas
in
int
movsl
insb
mov
int3
fistpl
not
or
and
data16
fs
jg
jnp
jl
inc
movsb
mov
ret
mov
mov
xor
mov
xchg
push
adc
or
mov
aad
or
mov
imul
mov
pop
mov
jmp
mov
imul
outsb
push
inc
int
fbld
xchg
jecxz
pop
int
int3
ljmp
xor
adc
cmp
and
bound
lahf
add
jmp
pushf
lods
pushw
add
and
jb
push
insb
cmp
sbb
lods
jb
imul
fcoms
xchg
push
xchg
xor
adc
fwait
inc
inc
divb
jmp
test
sbb
int
inc
xchg
mov
lcall
xchg
mov
dec
add
jns
fs
adc
ds
jns
popf
lock
mov
movsl
and
pusha
xchg
test
test
stos
push
adc
lret
inc
push
test
int
pop
daa
jmp
mov
mov
dec
xor
sbb
lods
pop
inc
std
jp
rclb
ss
jns
xchg
adc
mov
rcr
xchg
or
sbbl
pop
sub
jno
sub
hlt
and
xchg
loope
mov
and
mov
ljmp
sbb
cltd
aad
rol
inc
push
xor
insl
mov
sub
mov
add
lret
ret
movsb
mov
mov
daa
jmp
sub
inc
ja
fisubl
adc
add
pusha
inc
sub
js
int
and
aaa
arpl
cmc
mov
jno
dec
xchg
ret
inc
xchg
mov
add
andl
push
cmp
iret
in
mov
sahf
push
or
inc
dec
mov
push
push
add
sub
xor
adc
xor
push
adc
inc
arpl
jmp
popa
test
out
mov
and
push
dec
inc
inc
jmp
cmpsb
xlat
mov
dec
adc
mov
mov
shrl
js
inc
lods
aas
imul
nop
lcall
pop
fwait
mov
nop
adc
clc
iret
lret
pop
xor
es
sahf
rcrb
stos
push
push
mov
stos
orl
imul
addr16
idiv
dec
adc
repz
lock
xchg
cmp
dec
or
xor
loop
pop
test
pop
dec
nop
ds
jnp
fisttpll
sub
lock
sbb
pop
js
insb
repz
xchg
hlt
xor
and
and
movsl
popf
das
lahf
or
mov
imul
ret
push
pop
sub
xor
scas
sub
sbb
add
popf
or
sarl
dec
adc
imull
cmpsl
mov
imul
and
popa
iret
fsts
cmp
xchg
sub
scas
test
call
fiaddl
repnz
jne
jns
std
fs
add
xchg
xchg
jnp
push
mov
cmpsb
pop
repnz
bound
sub
xchg
cwtl
lahf
push
stos
addr16
sub
cmc
and
insb
xchg
and
loope
jl
push
xchg
adc
sbb
sbb
dec
jns
pop
xor
pop
cmp
adc
jle
repz
mov
mov
adc
je
xorb
cltd
data16
pop
mov
push
mov
dec
xchg
add
dec
add
cmp
ret
pop
mov
ljmp
or
fwait
cltd
and
pop
int3
jne
push
scas
pop
or
das
push
adc
cmpsl
adc
dec
xchg
inc
insl
mov
sub
cmp
aad
das
insl
and
mov
test
rclb
xchg
sub
xor
jmp
mov
je
in
popa
aaa
loop
pop
fwait
movsl
lret
js
pop
sbb
adc
push
push
cltd
hlt
iret
jg
addl
addr16
das
sbb
cwtl
and
adc
jae
addb
and
push
push
adc
ljmp
push
lock
lods
jecxz
pop
sub
dec
popf
and
mov
xor
outsl
cmp
or
ret
xor
nop
loope
adc
in
push
adc
mov
iret
mov
mov
mov
ret
test
mov
pop
imul
popa
adc
dec
mov
jne
add
test
add
pusha
mov
js
pushf
adc
negb
cs
dec
into
mov
add
out
ret
lea
stos
pop
cli
dec
sti
adc
xlat
xchg
jno
fisttps
mov
out
cmp
inc
dec
jg
sti
cld
inc
cmpsb
mov
dec
pusha
push
inc
adc
cli
decb
xor
push
das
fistl
out
and
inc
push
sub
aas
addb
fiadds
icebp
call
inc
insl
cltd
push
icebp
fisttps
ffreep
xor
jns
imul
stos
mov
das
ret
nop
jae
xchg
inc
sarb
and
push
mov
cmpsl
mov
aaa
out
sub
out
mov
and
dec
scas
test
mov
outsl
xor
loope
dec
add
shl
notb
or
pop
pop
fcomip
cmp
in
xor
rcrw
mov
ljmp
cmp
int3
scas
and
sub
xchg
fcoml
test
mov
xor
mov
jg
add
scas
xchg
rsqrtps
inc
inc
mov
scas
fcmovu
cld
jb
pop
adc
ss
dec
jmp
sub
sbb
sbb
pop
adc
cmp
pop
pop
mov
cmp
xor
mov
xchg
push
push
ret
dec
ljmp
loope
movsl
push
pop
shl
mov
lahf
push
addr16
cmp
pusha
mov
dec
xchg
mov
je
sub
sbb
jmp
sub
scas
or
arpl
jae
call
les
stos
iret
and
call
sub
or
dec
xor
dec
into
pop
or
ljmp
shl
out
fistl
call
adc
jne
push
cmp
xor
test
call
js
adc
xchg
movsl
push
or
jge
and
nop
je
ret
call
int3
mov
jmp
adc
stos
xchg
add
and
xor
cmp
inc
inc
xchg
fs
cmp
mov
stos
pop
cmp
pop
movsl
dec
and
mov
push
or
xor
arpl
xor
js
stos
fadds
lret
or
shll
push
add
mov
int
popf
enter
jge
fidivrl
xchg
pusha
and
lock
jg
cmpsl
lds
inc
arpl
in
push
mov
popf
add
das
data16
lds
jnp
out
in
mov
jo
insb
nop
xor
and
movw
test
arpl
out
pop
lret
and
and
and
lods
mov
imul
jbe
jmp
lock
xchg
popf
adcb
pop
lds
push
pop
sarl
xchg
xchg
mov
ret
mov
pop
jae
mov
aam
pop
cmp
adc
xor
jecxz
push
mov
dec
ds
push
pop
mov
cmp
test
neg
cli
ss
mov
out
fisubl
inc
hlt
pop
enter
lret
mov
aaa
xor
popa
push
rcrb
dec
leave
fcomp
jle
mov
inc
pop
stos
ss
push
out
pop
adc
lods
sar
enter
movsw
or
xlat
call
xor
adcl
jae
jne
jmp
pop
mov
pop
pop
insb
mov
jl
inc
adc
scas
push
mov
mov
jge
xor
repnz
sub
fdiv
or
sbb
mov
ret
pop
jecxz
scas
movb
lret
jne
lods
dec
mov
orl
sub
adc
push
mov
jl
add
pop
pop
push
fstpl
les
jge
aad
add
lods
adc
jnp
lea
ret
movsb
test
inc
xchg
in
test
add
shll
jo
mov
push
test
repz
stos
enter
mov
cld
cs
and
fcmovnu
jle
jecxz
test
push
dec
xor
mov
imul
test
mov
jp
xor
adc
cwtl
mov
fs
or
pop
mov
popf
jns
add
outsb
inc
cld
or
sarl
mov
jge
inc
xor
daa
test
and
xchg
pop
out
push
dec
mov
sbb
xchg
push
push
test
lahf
aaa
mov
lods
repz
insb
mov
add
je
sti
xchg
mov
cmp
in
xchg
mov
inc
iret
ret
jg
lea
stc
or
sub
lock
pop
inc
mov
dec
jl
adc
xchg
ss
mov
sub
push
xor
cmp
mov
jno
jns
cmp
sbb
and
jbe
adc
sub
outsb
dec
fists
inc
lret
js
fs
jp
imul
test
lods
int3
fisubrs
sub
add
xor
sub
mov
test
clc
mov
mov
sti
sbb
jmp
and
push
push
push
dec
xchg
mov
xor
int
ljmp
sub
aaa
jmp
mov
dec
clc
ret
int3
push
cwtl
jl
mov
sub
scas
lahf
mov
mov
xchg
sub
test
pop
jnp
fstl
fistpl
sub
dec
scas
int
add
ss
rclb
xor
xor
xor
clc
daa
divb
mov
mov
xor
out
jns
fstpt
mov
leave
push
mov
mov
push
ret
inc
sahf
inc
or
dec
pop
and
orl
sbb
pop
in
push
data16
in
add
xlat
and
add
pop
popf
popa
xor
bound
inc
sbb
mov
pcmpeqw
jb
or
sub
xor
inc
inc
out
jecxz
lret
cmpsb
xor
lods
fistl
cmpsb
divb
nop
jle
sub
inc
mul
push
leave
mov
pop
inc
jp
aas
in
dec
das
ret
sub
call
mov
and
data16
inc
ficomps
daa
jae
jge
outsl
adc
pushf
adc
jnp
test
iret
mov
sti
fcoml
jnp
inc
into
aad
and
mov
xchg
mov
or
or
pop
xchg
or
insb
and
test
adc
inc
sahf
lcall
dec
pop
lret
inc
popa
adc
je
cmp
mov
xor
inc
cs
lret
mov
jecxz
test
push
loope
mov
ljmp
cs
add
sbb
or
xlat
inc
mov
test
test
xchg
mov
or
jmp
jns
mov
out
xchg
mov
loopne
insb
jnp
cld
cs
and
jge
jns
imul
int
jns
xor
push
xchg
roll
add
gs
jmp
or
arpl
push
stc
test
ret
mov
je
shll
fildl
mov
mov
les
repnz
subb
pop
ljmp
iret
fcom
test
mov
or
shll
dec
xor
pop
fiadds
inc
xchg
push
orb
arpl
pop
mov
mov
and
dec
fadds
mov
jge
mov
and
leave
lret
ret
push
jg
jno
aas
sbb
pop
lahf
inc
pop
enter
repz
and
cmc
pop
cmpsb
in
shll
in
xor
stos
leave
movsl
lcall
fnstenv
in
cmp
mov
pop
loop
leave
je,pt
mov
xor
pop
arpl
and
jb
je
adc
mov
or
xchg
xor
xchg
mov
xor
aaa
xor
lahf
xor
sbb
andb
and
das
pop
sub
pop
movsl
in
adc
std
ja
fmuls
pop
mov
inc
shr
mov
jmp
popa
pusha
aaa
hlt
add
pop
lock
jecxz
cmp
out
ret
inc
dec
and
js
test
xchg
fistl
scas
fistpl
mov
ljmp
lock
mov
fs
daa
adc
inc
mov
loopne
jg
mov
or
sub
scas
lahf
jo
push
mov
lahf
fwait
leave
pop
push
outsl
inc
mov
or
xor
mov
fwait
jp
lahf
xchg
mov
dec
mov
dec
sbb
mov
xchg
mov
shlb
jl
cmpsb
sbb
adc
je
add
or
lret
add
jge
dec
sub
mov
pop
fbstp
test
dec
cmpsb
outsb
pop
hlt
inc
push
mov
test
push
mov
mov
gs
mov
mov
test
test
dec
lock
cltd
cmp
sbb
test
add
sbb
push
jp
or
aam
jae
adc
inc
cltd
xorb
ret
out
xor
sti
xor
mov
xchg
cmpsl
hlt
arpl
js
shll
aam
repz
in
mov
cmp
inc
cmp
or
cmp
insb
mov
dec
jne,pn
adc
add
outsb
mov
jge
inc
aaa
sbb
decb
add
add
clc
xchg
ror
mov
jae
test
sbb
inc
dec
pushf
add
xchg
in
jns,pt
mov
test
lods
lea
repnz
mov
fidivrs
jnp
icebp
xor
push
fld
mov
out
mov
test
orl
insb
add
cmp
in
push
adc
out
rorb
shlb
shll
sbb
popa
xchg
cmp
add
sub
push
push
in
dec
sarl
add
cmpl
cli
adc
pop
pop
addb
jnp
mov
inc
or
int3
push
lret
adc
or
xchg
jb
imul
pop
sub
shlb
pop
pushw
jb
loop
xor
pop
or
outsl
out
gs
and
sbb
xor
cmp
jnp
outsb
jecxz
dec
lods
mov
cmp
cmp
pusha
or
and
popf
arpl
das
outsb
int
fsts
jae
cmp
mov
xchg
inc
push
add
out
adc
mov
imulb
pop
imul
divl
cmp
adc
cld
sbb
and
jne
or
in
dec
sub
mov
out
out
add
xchg
pop
xor
nop
scas
sub
sbb
testl
sahf
mov
or
or
jecxz
xchg
cli
fwait
xor
ret
int3
mov
or
xchg
lret
and
xchg
mov
xchg
mov
dec
stc
mov
add
xor
scas
pushf
sahf
push
push
xchg
mov
jbe
xchg
or
mov
push
pop
ss
test
cmp
cmpsb
inc
push
cmp
cwtl
mov
ret
xor
sbb
cmp
and
mov
inc
mov
enter
in
das
dec
cmp
aam
jb
push
fisttpl
clc
in
lret
insl
into
sbb
jg
js
test
mov
xchg
nop
or
cmc
xor
cmp
jo
xor
mov
rorb
sbb
cli
or
mov
insb
dec
and
ds
cs
js
dec
mov
or
in
pop
dec
xchg
fnstcw
adc
push
aam
repz
mov
inc
mov
ljmp
lcall
ficompl
clc
sbb
enter
and
push
add
sarb
test
movsb
outsb
enter
jg
or
aam
mov
aaa
cmp
bound
pop
mov
idivb
nop
xor
rcl
adc
jle
jae
imul
andb
imul
mov
jle
push
or
mov
out
dec
imul
and
and
push
sbb
insb
mov
loop
and
cmp
insb
scas
inc
or
stc
inc
xchg
mov
adc
negl
dec
ret
pop
mov
gs
ret
test
cmp
push
test
pop
insl
and
xor
stos
mov
mov
int3
js
jmp
adc
std
xor
rol
sbb
ret
add
add
aaa
out
fwait
xor
loope
fistpl
or
mov
scas
shr
mov
push
outsl
xor
jmp
xor
xor
aad
es
ret
loop
jns
or
dec
idiv
xchg
push
mov
vmovapd
or
mov
sub
mov
enter
cmp
cmpsb
insl
dec
jg
popa
or
stc
xchg
cltd
mov
leave
filds
es
cmp
inc
xchg
cltd
sbb
pop
pop
jns
lret
xchg
gs
jo
inc
lock
popa
out
mov
aaa
push
scas
jb
std
mov
pop
xor
aaa
xor
add
cmpl
iret
scas
pop
int3
lods
jae
jae
mov
xor
int3
xchg
xor
arpl
test
xor
ret
pop
scas
or
push
hlt
daa
adc
mov
sub
xchg
jle
jl
mov
sub
cmp
outsl
dec
jmp
or
jge
pop
push
shlb
fidivrl
out
add
ret
in
js
xchg
jno
sbb
lods
sbb
pop
xor
sbb
insl
push
sbb
sub
pop
push
xchg
ret
subl
mov
xor
addb
xchg
jp
cmp
adc
fsts
in
and
push
xchg
xchg
dec
filds
fst
pop
ljmp
fmuls
repz
in
push
xor
jne
stos
test
or
inc
xchg
out
scas
sub
mov
out
mov
jb
cltd
mov
movsl
call
sbb
inc
idivl
int3
js
mov
push
push
sub
popf
outsb
fcmove
push
cltd
sub
insl
int
ljmp
adc
mov
pop
mov
test
fistl
fmul
push
xchg
push
cmpsb
inc
addr16
fdiv
iret
in
test
jmp
ret
sbb
paddsw
mov
add
out
call
sub
adc
push
mov
mov
hlt
inc
dec
push
fcompl
movsb
add
jo
cmpl
adc
out
and
xchg
lret
adc
addr16
inc
sbb
addr16
cmp
mov
cmp
jl
out
sahf
scas
or
bound
mov
in
sub
xchg
ret
call
je
aam
xchg
ret
pop
xor
mov
sbb
inc
fisubl
sbb
cmp
ffree
loopne
std
sbb
adc
jo
nop
rorb
leave
test
test
in
popl
cmc
rorl
mov
out
jg
jge
dec
xchg
dec
mov
jae
mov
cltd
stos
iret
jne
dec
push
adc
arpl
jmp
mov
pushl
aaa
cwtl
jl
iret
xor
sbb
pop
xchg
lock
sarb
add
out
pop
cmpsl
pop
cmp
jne
adc
mov
dec
jg
add
add
mov
fstl
mov
xchg
out
xor
adc
or
mov
sarl
or
cli
cmp
mov
js
push
cmp
pop
rcll
add
jbe
int
out
xchg
inc
pop
adc
lcall
stc
xor
sub
dec
pop
xor
mov
mov
cmp
int
cli
test
jecxz
and
lcall
lods
in
mov
test
cmp
xchg
xor
xor
xchg
sbb
in
movb
inc
dec
xchg
pop
xor
pushf
sbb
cmp
xor
sbb
xchg
and
out
lret
jnp
add
push
adc
cmp
pushf
aaa
push
fisubl
mov
lret
xor
sub
cwtl
mov
jno
add
loopne
push
or
push
adc
shlb
sbb
inc
inc
insl
adc
and
push
cmp
pop
outsl
dec
push
dec
pop
jmp
mov
pop
mov
cmp
sti
push
mov
jns
pushf
inc
xchg
or
insb
mov
mov
fcmovu
loop
xchg
and
inc
and
fisttps
orb
fldenv
das
outsl
arpl
adc
sub
fsubrs
jmp
test
inc
cltd
sbb
add
sub
daa
or
ret
mov
call
rclb
leave
push
mov
jns
xchg
pop
mov
lcall
add
nop
aas
sbb
cltd
push
nop
mov
cmp
pop
out
dec
push
inc
popa
mov
gs
fnstenv
push
mov
call
repnz
arpl
pop
push
or
icebp
push
jg
dec
stos
pop
mov
repnz
or
jno
add
cmp
sbb
adc
rcl
sbb
push
pop
ret
mov
or
and
lods
or
mov
push
cmp
push
mov
mov
pop
dec
outsb
inc
sbb
je
sahf
das
mov
testb
adc
test
pop
dec
cs
jmpw
lret
mov
loopne
loopne
dec
adc
or
pop
xchg
xchg
jnp
ret
insb
sbb
cmpsl
push
mov
lock
dec
cmp
outsl
stos
andb
push
addr16
jp
jno
push
lea
je
fisttpl
cld
sbb
cltd
mov
adc
and
push
inc
inc
fwait
jmp
push
stos
jmp
push
inc
divl
mov
xchg
xor
mov
call
fs
pop
movsb
xchg
push
popa
pop
jge
sub
ret
add
int
adc
arpl
dec
fidivrl
cmp
imul
fimuls
lock
gs
in
imul
mov
aaa
xchg
pop
enter
jmp
xor
push
into
mov
popf
xorl
gs
or
std
mov
ret
dec
test
loop
jg
pop
xor
or
iret
inc
icebp
gs
sti
lods
mov
mov
xchg
push
jecxz
int3
dec
mov
ret
xor
into
xor
notb
xor
in
in
in
mov
mov
xor
cmpl
in
rorl
sarl
jnp
stos
mov
jmp
mov
add
sahf
push
add
inc
ljmp
xor
bound
fnstsw
dec
sbb
lahf
imul
andb
lcall
cmp
std
sbb
leave
lods
arpl
mov
loop
mov
or
inc
push
cs
dec
dec
out
lods
lock
int
add
sbb
pop
int
sub
push
fstpt
icebp
pop
and
loop
dec
ffreep
push
sahf
add
sbb
pop
lods
mov
jno,pn
jmp
mov
mov
into
push
cs
inc
cli
xchg
jge
mov
nop
sub
lea
mov
inc
hlt
insb
sti
movsb
pop
dec
push
sbb
dec
push
push
sub
ret
push
pop
jmp
mov
sub
adc
mov
and
lods
into
sahf
addr16
or
imul
test
loopne
subb
adc
or
inc
or
push
mov
lds
cmp
cmc
ret
in
inc
cli
outsl
arpl
fdivr
jb
stos
pop
or
jnp
pop
cmp
dec
push
bound
inc
and
into
cli
mov
pop
sarl
mov
cmp
push
jbe
jno
cmpsb
lods
or
xchg
ficompl
adc
scas
mov
in
adc
or
out
pushf
adc
mov
mov
add
test
ficoms
outsl
adc
insl
stos
test
lcall
mov
je
data16
mov
sub
xor
cli
insl
fs
sub
ret
pop
cmp
pop
pop
int
or
lock
cmpsb
pop
mov
cmpsl
test
lea
xor
ret
test
je
call
adc
out
in
cwtl
sub
cmc
outsl
push
nop
sbb
lahf
imul
push
movsl
test
arpl
nop
mov
stos
or
cmpsl
out
mov
mov
sbb
jp
lcall
mov
pushf
aas
out
cmc
push
aaa
add
lods
xor
loop
xor
loopne
mov
cmp
pushf
mov
inc
orb
loopne
mov
inc
xchg
jne
movsb
imul
pop
cmpsl
lcall
sbb
faddl
mov
and
xor
stos
gs
repnz
mov
stc
hlt
scas
add
fmul
outsl
add
lret
arpl
mov
fwait
js
sub
stos
pop
in
add
les
nop
call
and
adc
test
mov
pop
loope
jge
push
test
xchg
leave
xchg
in
icebp
push
and
sbb
jl
rclb
jae
pop
frstor
cmc
or
push
in
jmp
xchg
lret
mov
xor
bound
daa
push
ret
mov
xchg
mov
inc
aas
inc
push
xorl
sti
pop
mov
and
lahf
xchg
in
jecxz
fs
cmp
xchg
test
cmpsb
and
jnp
mov
pushf
lret
inc
jmp
or
in
lmsw
int
mov
xorl
lods
cwtl
int3
mov
repnz
ret
fstl
xor
and
insl
xlat
xchg
sub
push
xchg
xor
dec
or
mov
xchg
fmull
mov
ja
push
dec
xchg
enter
jne
jge
inc
xchg
adcl
mov
pop
and
or
clc
add
pop
hlt
push
mov
mov
or
roll
dec
xchg
cmp
lret
lds
sbb
xchg
clc
popf
sbb
ss
xor
jmp
xchg
nop
dec
jmp
mov
mov
imul
outsl
mov
cld
das
mov
int3
test
int
dec
mov
jbe
ja
push
cmp
cli
lea
add
mov
sub
std
mov
push
repz
std
nop
xor
lret
inc
mov
cmpsb
ss
mov
pop
aad
pusha
dec
pop
jno
sub
mov
sbb
jo
cmp
cltd
pop
pop
imul
cwtl
adc
rclb
jle
sahf
repz
jl
lret
dec
jb
cs
popa
out
cwtl
mov
filds
and
cli
in
jb
jg
push
xchg
dec
cmpsb
dec
cli
out
mov
push
inc
jnp
or
or
nop
hlt
leave
lea
xchg
adc
mov
jo
mulb
lret
sub
je
inc
imul
mov
sbb
mov
jns
test
sub
sub
in
popl
push
incl
lds
or
adcl
fiadds
cmp
outsl
mov
or
pop
dec
pop
icebp
outsb
inc
pop
jae
jecxz
push
cmp
out
xor
fimuls
xchg
add
fldt
adc
sahf
cmp
push
inc
pushf
cmpsl
daa
add
rolb
sub
fnstcw
jnp
mov
xor
fstps
lods
sub
daa
mov
sbb
add
and
sbb
js
jp
dec
jecxz
adc
mov
pop
jnp
imul
pop
filds
ret
add
add
mov
clc
or
shr
cli
adc
xchg
scas
jbe
jns
pop
or
xlat
aad
xchg
add
cli
iret
add
cwtl
dec
int
call
push
or
push
shl
fcoms
add
out
cld
fsubs
nop
iret
and
lds
cmp
pushf
pop
lock
adc
pop
xlat
out
cmp
out
inc
imul
mov
lock
jp,pt
fs
sar
jne
adc
add
test
js
inc
hlt
mov
psubb
and
mov
ret
jo
xlat
jp
icebp
cwtl
inc
cmp
jl
add
jecxz
imul
mov
xchg
pop
mov
dec
inc
inc
aad
and
sub
jbe
push
stos
enter
mov
pop
dec
jo
xchg
dec
mov
xchg
call
or
addb
sahf
pop
mov
fmul
push
and
shrl
sbb
mov
or
jae
mov
push
mov
outsl
cmp
xor
insb
add
movsb
je
or
xchg
inc
xchg
inc
dec
arpl
sbb
into
mov
lret
movl
cmp
jo
xchg
mov
pop
cmc
je
mov
iret
lret
xchg
scas
xchg
repz
add
aaa
stos
js
out
sahf
stos
inc
mov
xor
out
outsb
add
scas
or
mov
mov
jmp
adc
call
inc
fimull
fsub
arpl
mov
pop
or
sbb
push
negb
imul
sub
mov
mov
xchg
das
nop
push
jecxz
or
dec
gs
imul
mov
gs
mov
fildl
push
fs
sbb
arpl
fstp
shrb
mov
add
dec
shrb
xchg
sbb
push
call
out
dec
fcomi
cmc
dec
dec
jbe
lret
outsb
mov
mov
out
mov
outsl
xchg
push
xchg
inc
outsl
jbe
scas
xor
inc
es
add
aas
test
mov
xor
jmp
mov
inc
aam
movsl
scas
fidivrs
dec
jns
movsb
xchg
test
pop
inc
jp
fdivrs
xchg
pop
or
shl
fcompl
pop
xchg
sub
push
test
add
jae
testl
jnp
mov
in
pop
sub
add
xchg
loop
adcb
addr16
pop
mov
mov
subb
paddusw
sub
xor
mov
inc
xchg
pop
mov
xchg
addb
mov
dec
orl
shll
mov
popf
mov
xchg
popl
xchg
scas
jl
mov
repnz
xchg
aam
xchg
add
dec
dec
pop
jno
or
dec
lock
mov
ret
out
sbb
sub
push
sub
dec
lahf
fs
bound
iret
pop
repz
lahf
push
mov
adc
lahf
das
add
mov
lahf
ret
mov
or
mov
xchg
mov
cmp
ja
or
scas
adc
fadd
mov
push
cmp
pop
fcoml
sub
mov
fidivrs
inc
insl
pop
fidivs
nop
push
and
aas
inc
xchg
lret
mov
push
fisubrs
sbb
xor
sbb
push
mov
xchg
fistpl
movsl
pop
push
pushf
pop
dec
int
dec
adc
fldt
test
cmpsl
ljmp
fdivl
xchg
stc
mov
aas
sbbb
xchg
mov
jb
mov
or
mov
ja
jg
lret
pop
dec
jns
dec
xchg
xchg
jecxz
imul
xchg
les
lds
xor
ljmp
inc
xchg
flds
nop
and
dec
shlb
mov
call
jle
gs
pushf
clc
cmc
mov
sub
lcall
jecxz
mov
cld
das
inc
inc
je
fs
xchg
mov
cmpsl
in
filds
jmp
mov
add
andb
cwtl
test
test
aaa
mov
cmc
dec
pop
adc
scas
and
jbe
fstps
dec
dec
rcrb
ja
fucomip
clc
test
mov
test
pop
fsubrs
xchg
test
shrl
fbld
call
imul
scas
in
xor
ret
xor
sub
test
push
xor
outsb
xchg
xchg
sahf
fscale
inc
popa
out
sar
and
sbb
inc
out
dec
movsl
scas
das
inc
jle
xor
pop
cmp
std
push
xchg
sub
jg
mov
ljmp
mov
out
inc
lret
dec
aad
or
inc
insl
sbb
push
push
dec
dec
sarl
movsl
shrl
decb
mov
mov
popa
xorl
push
xchg
inc
mov
aad
mov
sub
daa
lahf
mov
aad
xchg
xchg
mov
stos
xchg
sub
jge
sbb
inc
sub
xchg
cmp
lea
jnp
cltd
xchg
push
mulb
adc
pop
fs
xor
cli
inc
shll
adc
push
ret
and
pushf
arpl
or
hlt
aad
add
dec
cltd
sahf
scas
ret
stos
pusha
jl
push
mov
inc
fidivs
jle
fbld
adc
aam
mov
fisubs
xchg
xchg
pop
jnp
xchg
mov
or
jmp
addr16
and
loope
ret
cli
dec
xchg
cld
adc
lahf
lret
mov
dec
rol
jmp
scas
pop
aas
and
sbb
loop
and
pop
mov
push
fildl
jmp
adc
into
mov
repz
les
pop
stos
stos
xchg
das
jle
stc
and
inc
je
cmp
dec
cli
int3
mov
push
std
xchg
mov
pop
jle
add
mov
cld
pop
jno
inc
push
mov
pop
add
movl
xor
cmpsl
pop
xor
cmpsl
mov
out
xor
mov
and
cmp
sbb
cmp
rcrl
cmp
sbb
rcll
rcll
rcll
rcll
rorl
rorl
rorl
rorl
shll
push
roll
roll
sbb
add
enter
cmp
adc
es
push
pop
sahf
adc
inc
or
xchg
das
sub
pusha
cmpsb
jns
mov
pop
xor
ret
push
xchg
bswap
jb
jp
test
or
xchg
adc
sub
cmp
dec
cmova
xchg
xlat
ret
jp
adc
jb
adcb
xchg
ljmp
fs
mov
lahf
pop
mov
lods
mov
dec
xchg
inc
mov
insb
fistpll
fistpll
ret
es
daa
inc
cltd
rcr
xchg
call
ficoms
jge
mov
dec
pop
push
cmp
xchg
and
cmp
pop
pop
inc
mov
aas
mov
sbb
scas
popf
push
mov
dec
ljmp
add
mov
sub
add
or
inc
and
daa
pusha
data16
fidivrs
and
pushf
sbb
ljmp
out
ret
insb
mov
movsl
les
dec
or
test
outsl
pusha
xchg
adc
dec
sbb
mov
pop
lahf
fists
pop
mov
inc
mov
sub
dec
cmp
cmp
jl
inc
inc
outsb
ss
lea
xchg
cmp
cmc
out
ret
xchg
nop
add
lahf
ret
pop
imul
addr16
or
shrb
xchg
out
xor
jne
insb
cmpsb
mov
out
xchg
adc
jecxz
jo
mov
dec
fisttps
sub
xor
dec
cmp
imul
fadd
dec
push
jae
inc
xor
cmp
pop
jbe
lock
jmp
je
dec
movsb
test
add
scas
lea
fcompl
dec
ret
out
sub
jl
cltd
inc
ss
xchg
push
jp
push
popa
lods
lcall
sbb
xor
les
sbb
push
mov
scas
lea
out
dec
notb
cli
lea
scas
mov
mov
loop
mov
xchg
imul
sahf
push
cltd
dec
lahf
xor
scas
inc
out
xchg
sbb
inc
sub
dec
pushf
mov
test
js
in
jl
stos
or
jne
inc
sbb
xchg
xchg
in
xchg
xor
dec
jbe
and
mov
repnz
leave
in
push
sbb
mov
xchg
in
jo
push
test
divl
mov
adc
rolb
or
arpl
cmp
mov
push
lds
cmp
js
test
mov
jae
out
mov
stos
decl
pop
dec
lahf
idiv
or
pop
shrb
pushf
aaa
outsl
mov
or
into
add
cwtl
into
mov
frstor
mov
or
xchg
cli
mov
mov
in
insl
fwait
pop
xchg
adc
dec
adc
pop
push
cmpsb
inc
outsb
push
mov
fbstp
sbb
jge
fdivrl
cmp
negb
cmp
ja
jne
sub
andl
repz
ss
rcr
enter
lret
push
or
stc
cmp
pop
idivl
sbb
cmp
shll
shll
and
jns
subb
subb
push
mov
inc
sti
push
insb
scas
push
mov
pop
daa
imul
add
cmp
pop
push
cmp
aas
mov
jmp
dec
outsb
ret
fs
and
das
xchg
scas
bound
add
xor
sub
in
lods
lret
adc
jl
lret
mov
lods
call
pop
shlb
iret
outsl
mov
negl
dec
adc
jge
adc
xchg
pop
pop
cmpsl
pop
clc
pop
jns
xlat
mov
xchg
add
hlt
jb
xchg
mov
pop
mov
aam
aas
sahf
lahf
daa
xchg
mov
fwait
lret
stos
ficoml
sbb
cmpsl
jp
dec
popf
lahf
cmp
add
add
mov
and
int3
ljmp
in
adc
in
add
fldt
push
cmpsb
cmp
dec
fcom
push
sahf
arpl
xor
rcr
jge
jecxz
push
push
repnz
dec
aas
mov
sub
sti
mov
dec
mov
mov
addr16
pushf
mov
sarb
xchg
add
ljmp
dec
popa
iret
ret
pop
out
adc
stos
lds
inc
int
mov
pop
sbbb
dec
stc
or
sub
and
push
out
xorb
xor
lds
mov
mov
dec
addr16
and
popa
orl
sub
scas
inc
call
adc
xchg
orl
push
push
sub
in
xor
sub
fs
nop
inc
gs
ljmp
outsl
mov
mov
mov
rorb
lret
cmpsb
movsl
jle
sbb
fnsave
jb
mov
xor
clc
scas
aas
lret
mov
fsubs
sbb
fmuls
sahf
ret
call
cmc
fidivrs
sbb
test
mov
aas
xchg
xor
adc
mov
and
cmp
inc
inc
pminub
cmp
mov
icebp
nop
jl
lahf
push
dec
test
ljmp
stos
sarl
sub
mov
xchg
fdivrs
fs
stos
call
pop
push
mov
add
cmpsb
push
inc
mov
push
shrb
add
out
sti
lahf
leave
mov
lcall
jmp
flds
pop
lcall
cld
pop
sarl
mov
jb
add
or
cmp
insb
and
jp
std
mov
insb
jnp
xchg
add
jno
stc
out
mov
fistpl
iret
pop
mov
and
sub
pushf
and
add
and
addl
bound
or
in
pop
sbb
sub
leave
pop
fcos
cltd
and
cmp
xchg
andl
loope
inc
movsb
mov
stc
mov
daa
mov
popl
fwait
inc
jb
mov
nop
sar
push
jp
aas
nop
movsl
cmp
jl
insl
fsts
sahf
inc
stos
xchg
dec
pop
or
mov
add
add
mov
cmp
mov
push
ret
mov
mov
sub
mov
dec
and
hlt
mov
cmpsb
mov
lock
cmp
test
fldenv
mov
cld
shll
mov
movsl
je
or
aaa
jmp
push
js
mov
mov
je
je
add
sub
and
in
test
ds
shl
xorb
push
jb
pop
mov
sbb
testb
test
scas
xor
inc
pop
stos
adcb
notb
mov
fwait
cli
in
or
in
jbe
jg
test
jno
add
jb
dec
test
mov
or
pushf
jp
fldcw
lcall
pop
pop
adc
push
or
cltd
xchg
mov
adc
es
mov
sub
jle
lret
daa
jns
int3
test
sbb
adc
out
dec
pop
mov
movsb
and
dec
xchg
pusha
sbb
mov
adc
pop
mov
repnz
sbb
lcall
inc
dec
rcr
cmp
mov
les
add
setbe
adc
out
mov
das
popf
subps
out
pop
and
cmc
mov
pop
adc
cwtl
stos
mov
xchg
lods
insl
xchg
jae
femms
mov
je
jae
sub
push
push
sub
dec
inc
addl
inc
jg
jo
aad
jne
rolb
fldenv
dec
mov
add
xchg
les
imul
sbb
in
xchg
mov
add
push
push
scas
aam
pusha
push
push
mov
daa
xchg
jb
jno
mov
xchg
inc
je
mov
xlat
adc
pushf
sbbb
lock
xchg
jo
bound
fldlg2
cmpsl
pushf
mov
into
pop
mov
ret
and
sbb
lods
popa
adc
jno
psubq
and
testl
cltd
pushf
aam
dec
mov
add
dec
or
out
jmp
roll
cmp
and
lds
push
mov
scas
sbb
call
jecxz
dec
add
and
into
xchg
add
xor
add
and
cmc
out
cltd
sub
mov
je
or
sub
jg
out
mov
ret
les
inc
mov
aad
xchg
jg
daa
ret
test
and
inc
std
mov
push
push
es
adc
popa
fimuls
js
test
or
movsl
outsb
dec
xchg
dec
pop
sub
push
shlb
test
stos
cmp
in
scas
lea
test
cmpsl
nop
mov
sub
add
lahf
jb
jge
xor
lret
sub
xorb
add
cmp
inc
xor
repz
sbbl
loope
pop
adc
jge
inc
jmp
add
push
cmpsb
lahf
scas
arpl
int
mov
cmp
mov
movb
shll
repnz
dec
or
int
xchg
pop
movsl
js
xchg
mov
xchg
inc
ja
cmp
add
jmp
dec
repz
aaa
cmp
jg
add
mov
lods
or
ja
test
push
sbb
jnp
cmpsl
fisubrs
pop
pop
add
aaa
lahf
mov
fs
mov
cmp
cwtl
orl
push
iret
sub
or
fwait
aad
inc
xchg
daa
cltd
xchg
mov
lods
jl
jno
mov
inc
mov
push
scas
test
movsb
or
dec
nop
cmpsl
clc
xchg
mov
ret
dec
mov
scas
call
jnp
and
lret
ljmp
add
pop
mov
testl
sub
bound
mov
pop
shrl
dec
fimull
mov
stos
cmp
jne
mov
cltd
push
and
dec
out
jmp
nop
pop
ljmp
pop
cmpsb
sahf
aas
inc
xchg
dec
add
pushf
push
mov
pop
xor
jne
sbb
dec
xchg
pushf
jg
xchg
lds
and
movsb
cmc
add
bound
sar
inc
pop
mov
sahf
push
mov
jnp
inc
dec
aad
push
pop
ret
mov
xchg
insb
pop
imul
mov
sbb
aaa
rolb
lcall
inc
cmpsl
popa
adc
mov
jae
jmp
jns
mov
xchg
lahf
xchg
imul
inc
or
cmpsb
in
int3
sub
add
inc
inc
mov
aaa
imul
addb
pushf
xor
dec
sub
rorb
fiaddl
dec
pushl
or
xchg
mov
gs
xchg
sbb
xchg
repnz
mov
mov
mov
push
sub
andl
loopne
insl
xlat
nop
xchg
fildll
adc
mov
jns
mov
mov
jno
ljmp
cmp
sbb
adc
mov
outsl
sub
pop
push
jg
cmpl
xchg
test
shlb
inc
fstps
ljmp
int3
xchg
cmc
call
jmp
popa
bnd
out
daa
lods
int
sbb
lahf
cmp
xchg
pop
inc
push
mov
push
pop
cmp
pop
pop
es
mov
sti
fcoml
das
lcall
aaa
pop
push
incl
pop
pushl
outsb
mov
add
negb
ficompl
rolb
lock
jne
and
hlt
stos
sub
in
adc
mov
out
jl
inc
lds
subb
das
outsb
icebp
std
add
movsl
movl
scas
add
cltd
jae
cmp
stos
sbb
imul
cwtl
insb
nop
aaa
and
out
orb
rol
jmp
inc
sbb
cmp
out
fildl
popa
or
dec
add
std
lcall
sahf
lods
adc
add
hlt
lret
adc
cwtl
cli
and
mov
inc
aam
nop
inc
ret
rclb
jae
cs
push
push
cmp
dec
mov
lahf
adc
xor
fldt
aam
push
dec
jns
xor
das
jmp
push
sbb
test
mov
gs
popa
xchg
test
hlt
xchg
push
sub
push
pop
rcr
inc
lea
sarl
mov
ja
sub
push
jnp
push
jmp
pop
and
std
sub
lods
mov
fmull
add
or
outsl
xor
mov
scas
sbb
test
jmp
inc
pop
cli
pop
xchg
into
fwait
pusha
sbb
xlat
cmp
fs
dec
into
psrld
lea
std
ret
xor
xchg
jo
stos
add
sbb
xchg
test
push
jle
out
push
pop
jne
cmp
sbb
add
inc
sub
inc
jmp
pop
mov
stos
mov
into
sub
xor
cmc
adc
dec
fmuls
in
scas
arpl
mov
cs
cmpl
dec
inc
imul
hlt
or
sbb
insb
aaa
pop
jmp
outsb
cltd
popf
pop
int3
rcl
lahf
in
xchg
mov
pop
add
cmp
aaa
dec
ds
imul
push
sbb
jecxz
aaa
add
and
out
jo
idiv
lods
mov
cmpsb
jmp
stos
hlt
cwtl
movsb
push
fistpll
pushf
mov
adc
push
testl
push
into
ret
std
inc
and
out
movsl
push
push
jmp
je
xor
call
out
arpl
push
or
sub
lahf
fwait
into
std
imul
cmp
adc
mov
cmp
loopne
cmc
rclb
xlat
cmp
sub
dec
mov
sub
and
scas
mov
cld
cmpsl
jmp
movsl
inc
cs
sbb
fwait
push
ret
in
inc
aas
add
push
jbe
dec
call
xor
sub
insl
pop
cmp
aaa
stc
dec
xchg
sbb
icebp
stc
dec
xor
sub
lret
loope
enter
jecxz
jmp
adc
lahf
cltd
fisttpl
frstor
data16
or
dec
fisttps
rcrb
mov
pop
mov
add
cwtl
sub
dec
cmp
aaa
lret
cmp
xchg
pop
scas
pusha
push
mov
or
or
inc
mov
imul
jp
std
movsl
cmpl
xchg
std
call
or
fs
and
xchg
in
xor
inc
ficoms
sub
jb
mov
sarl
das
lcall
addb
or
and
js
and
outsl
push
pop
cs
call
jecxz
ficoml
mov
push
aaa
js
repz
cmpsl
lahf
mov
enter
scas
push
cwtl
test
pop
pop
pop
insb
xor
push
pop
or
mov
inc
lods
push
xor
push
jo
add
or
in
fmuls
xor
push
cmpb
cltd
mov
lret
in
sub
lcall
mov
in
mov
out
lods
out
inc
clc
mov
in
xchg
ret
imul
mov
pop
sub
in
data16
ret
or
push
icebp
push
mov
pushf
push
pop
push
test
in
adc
lret
mov
cmp
dec
add
sbb
pushf
shr
js
outsb
mov
add
loopne
adc
lea
shrl
stos
jne
insb
adc
scas
clc
xor
pop
test
call
pop
pusha
xor
sub
push
inc
jg
fcomi
push
cmp
mov
cltd
dec
scas
in
mov
adc
pop
out
movsb
add
sbb
imul
or
sarb
xor
pushf
scas
test
mov
pop
sbb
sub
in
xchg
or
mov
scas
fwait
mov
cld
aaa
mov
imul
test
or
test
push
pop
lds
nop
je
insb
mov
cmp
cli
insb
sbb
sbb
rcrb
jmp
dec
xlat
imul
leave
add
pop
mov
int3
inc
inc
jnp
out
ljmp
inc
fwait
jmp
imul
cmp
xlat
mov
orl
sub
lret
xchg
xlat
mov
ret
jo
fidivl
into
sbb
scas
pop
ret
xor
test
pop
sbb
fidivl
pop
mov
mov
mov
push
dec
ljmp
mov
jmp
xchg
mov
and
stos
lods
fldt
xor
dec
scas
mov
jae
push
cmpsl
jle
jg
cmp
addb
int3
xchg
icebp
cmc
mov
roll
sbb
xchg
mov
lcall
or
jecxz
mov
dec
nop
insl
lea
data16
aam
xchg
outsl
jns
daa
std
addr16
loopne
push
mov
inc
iret
aaa
mov
cwtl
enter
cmp
mov
sarb
or
xchg
pop
xchg
jg
mov
jbe
xlat
inc
call
addl
adcb
bound
pop
ljmp
or
cli
test
jl
int
xor
push
mov
add
outsb
push
cmpb
std
lret
fildll
push
inc
iret
jnp
aas
stc
jb
xlat
lea
je
pop
push
popa
adc
fsts
sbb
lods
fisubrs
cmp
mov
xor
loop
push
iret
into
jnp
push
lds
cmpl
cmp
mov
lea
jbe
pop
cmpl
in
adc
lds
xor
mov
push
cmp
mov
pop
add
xchg
add
shll
jecxz
fwait
ljmp
test
xchg
bound
mov
out
push
mov
xlat
out
dec
pop
leave
mov
push
mov
jno
iret
mov
outsb
xor
lahf
cltd
add
movsl
mov
pusha
push
mov
lods
inc
mov
or
dec
ret
repz
mov
jecxz
adc
leave
fs
push
enter
push
lods
cmp
inc
mov
pop
bswap
ds
add
loope
pop
and
jne
leave
xchg
adc
dec
sbb
out
cmp
mov
cmp
stos
add
cmp
jne
xchg
jg
pop
adc
cmp
xchg
mov
and
mov
aad
lods
sti
xor
orl
push
jecxz
inc
dec
stc
cwtl
add
inc
aam
mov
in
push
cmp
adc
mov
inc
cld
pusha
out
inc
adc
fwait
lods
push
leave
add
stos
fstpl
dec
inc
sbb
enter
mov
inc
fdivrs
sahf
pop
sub
loop
je
mov
in
jmp
dec
mov
nop
pop
pusha
dec
mov
pop
push
popf
lahf
pop
in
and
inc
mov
xorb
mov
inc
mov
bound
fwait
and
mov
out
inc
aas
push
or
sti
pop
mov
scas
loop
pop
jnp
sub
imul
mov
lcall
jbe,pt
cld
fwait
cmpsl
xor
in
das
insl
push
ficoms
xchg
gs
xchg
cmpsl
jp
hlt
addr16
loop
push
inc
cmpb
mov
adc
sahf
cwtl
sbb
iret
data16
addr16
das
popf
add
scas
aas
and
xor
cmp
lcall
nop
dec
or
jp
pop
inc
stos
or
pop
popa
jne
lods
sbb
cs
xor
sbb
sbb
or
xlat
mov
adc
and
in
rolb
mov
jge
fildll
stos
cmp
fistpl
inc
negb
cli
mov
xchg
adc
rcrb
add
sbb
movsb
leave
xchg
sbb
mov
jecxz
pop
and
andl
mov
ljmp
test
ds
add
loop
mov
enter
out
cli
imul
pop
lock
mov
pop
test
dec
loop
repnz
loopne
lcallw
in
ja
cmp
sub
fcomps
mov
stc
sahf
stos
nop
pop
cmp
ret
imul
pop
bound
nop
data16
inc
sbb
mov
jle
cmp
sub
dec
xor
inc
js
add
pop
pop
xchg
or
lret
push
decl
adc
pop
cld
adc
fisubrl
jo
adc
lea
push
xchg
in
or
or
ret
incl
icebp
aas
stos
aaa
push
cltd
inc
loopne
push
xor
sbb
jge
and
xchg
scas
imul
fists
ficoml
aaa
jns
mov
int3
cmp
mov
dec
xchg
aam
mov
cmp
mov
mov
out
cmpsl
jmp
push
cmpsl
cmp
inc
movsb
insl
inc
lea
cld
cmpsl
cmp
add
or
dec
sbb
stos
sbb
and
cmp
test
out
insb
adc
dec
stos
shll
pop
xchg
cmp
fs
cltd
out
xchg
and
jle
and
jmp
pop
sahf
cmpsl
jns
mov
jmp
dec
xor
dec
fwait
in
je
sub
sbb
lahf
testl
jo
test
scas
cmp
xchg
sbb
leave
iret
xorb
jo
mov
gs
insb
dec
mov
sbb
fwait
xchg
cmp
fisubl
lods
scas
ret
or
mov
and
or
mov
pop
fistl
fld
jp
jnp
xchg
or
xchg
and
kunpckdq
scas
mov
pop
das
xchg
mov
mov
dec
inc
das
ss
push
cltd
outsl
mov
js
or
or
sbb
and
mov
pop
lock
mov
les
int3
cmpsl
inc
iret
imul
xchg
xor
lock
xchg
xchg
mov
dec
test
push
add
mov
add
fstps
cmpsb
adc
mov
mov
in
rcrl
pop
rolb
pusha
iret
movsb
add
adc
add
mov
xor
lret
imul
dec
add
imul
lahf
dec
imul
aaa
adc
enter
orl
mov
mov
movsl
sub
ret
jecxz
fistpll
lahf
push
push
shl
mov
inc
lret
mov
push
leave
fwait
mov
sub
inc
fsubrp
bound
xchg
inc
inc
mov
mov
xor
add
test
das
out
sahf
pushf
repz
fs
aad
pop
mov
ret
out
mov
repnz
ds
and
ret
jl
in
dec
pop
lahf
hlt
in
in
cmp
jge
inc
mov
xchg
loop
cmp
pop
dec
cmpl
pop
in
mov
add
cmpsb
jg
call
daa
fldt
mov
xor
mov
loopne
pmaxsw
scas
mov
xchg
mov
out
fists
in
maxps
dec
sbbb
xor
mov
mov
movsb
xchg
les
ss
js
add
hlt
mov
jp
mov
cld
std
mov
or
mov
mov
insb
pop
je
pop
add
mov
pushl
mov
in
dec
outsb
ret
inc
adc
call
rclb
in
fs
dec
and
pop
pop
mov
das
or
shld
sub
popf
adc
and
ret
push
push
das
rorl
pop
stos
or
pop
lcall
lock
and
out
add
mov
mov
and
dec
pop
xlat
clc
xchg
out
movsb
popf
jp
faddl
mov
lret
and
pop
int3
clc
js
mov
or
insb
loop
add
dec
out
ds
ficoml
in
or
and
icebp
mov
fcompl
pop
shlb
clc
push
je
jl
add
shrl
or
lcall
mov
xchg
cmp
mov
dec
xor
out
dec
push
mov
xor
cmpsl
xchg
adc
adc
or
add
mov
xchg
push
cli
inc
jecxz
rcrb
mov
test
lods
push
xchg
aad
mov
rcrb
dec
js
pop
icebp
mov
sarb
jg
mov
lahf
push
icebp
repz
push
cmpb
mov
pusha
int3
cs
inc
insb
mov
cs
in
and
add
cltd
mov
frstor
mov
jle
movsl
dec
sbb
pusha
jo
outsb
jae
inc
push
pusha
inc
aaa
sbb
mov
mov
flds
enter
add
adc
or
sub
clc
inc
pop
ret
lods
mov
inc
mov
xor
bound
sbb
cmc
xlat
lcall
add
xchg
test
arpl
aaa
xchg
out
into
mov
sahf
popl
mov
das
les
jecxz
mov
sub
dec
dec
xchg
jae
cmp
push
inc
add
mov
orb
add
jmp
add
mov
idiv
das
test
mov
in
mov
jecxz
add
cmp
mov
addr16
icebp
repz
xchg
cltd
jne
inc
lcall
pop
lret
pop
adc
push
or
lea
test
mov
or
pop
popf
inc
lea
popf
push
sahf
jnp
addb
std
jns
jg
fbstp
ret
es
mov
jno
jne
pop
mov
lea
xlat
jno
les
dec
push
and
mov
cmp
sub
or
xchg
pop
inc
pusha
and
popa
xchg
cmp
ret
and
dec
jle
sub
repnz
cmp
push
test
xchg
or
in
jo
scas
pop
xor
pop
pop
lea
fcmovne
bound
xorl
into
icebp
popf
dec
mov
xchg
inc
push
sub
jle
mov
xor
sbbl
fstps
mov
inc
fdiv
xor
xchg
cmpsb
jge
xor
std
rcll
pop
cmp
pop
cmc
push
scas
lea
push
xor
sbb
pushf
mov
negl
sub
inc
movsb
pop
add
xorl
imul
push
sahf
out
ret
pop
pop
notb
adc
clc
loope
test
jge
jae
lahf
into
add
in
nop
mov
sub
push
das
fwait
mov
das
pop
add
cmpsb
lahf
cmp
addl
aam
and
std
fstpt
into
jmp
ds
fildl
jp
scas
cwtl
fstps
ret
or
xchg
sbb
xor
push
out
xor
cmp
mov
or
subl
clc
jbe
dec
or
push
ja
fmul
shr
rcrb
int3
sub
ficompl
outsl
aas
xchg
xlat
jl
push
add
inc
mov
xchg
ljmp
hlt
jbe
push
adc
inc
and
jo
and
arpl
mov
test
lcall
dec
ret
imul
cmp
xchg
dec
aam
pop
std
pop
popf
in
push
inc
cmp
push
mov
push
mov
add
repz
pop
jbe
push
xchg
mov
cmp
out
mov
aaa
jmp
mov
push
mov
lcall
adc
or
addr16
push
setbe
leave
adc
xchg
ret
inc
ret
loop
les
xchg
clc
fs
sub
and
lahf
bound
fwait
lret
cmp
cs
movsb
js
stos
ljmp
lret
jae
mov
mov
dec
cli
mov
push
iret
jo
inc
xor
sahf
insl
xor
jecxz
sub
arpl
jle
in
cltd
cli
xchg
fisttpl
data16
imul
popa
jbe
adc
push
lret
jb
xor
sbb
lret
cld
inc
call
mov
pop
mov
and
ret
sub
int3
aas
sbbl
mov
mov
fildll
insb
pop
leave
scas
sub
push
scas
dec
ret
ret
repz
sahf
mov
iret
stos
push
fcmovb
iret
lds
icebp
data16
cmp
lods
loope
push
popf
fs
or
repz
int3
add
jns
in
movsb
mov
sub
inc
jo
xor
mov
je
adc
adc
rcrl
xlat
clc
cmpsb
shrl
scas
or
sbb
xor
mov
cmc
cmp
and
jp
je
out
or
in
xchg
jmp
lods
mov
or
mov
sub
ja
and
xchg
sysenter
out
pop
test
sub
lahf
inc
les
and
pop
dec
jb
mov
outsb
pop
mov
inc
xchg
inc
mov
or
xchg
sub
out
pop
dec
add
aaa
lea
mov
inc
test
cmp
mov
mov
fidivrl
mov
adc
fidivs
cld
not
lock
and
scas
xchg
push
and
imul
lcall
push
jmp
shll
xchg
adc
fistl
add
pusha
jmp
mov
movsl
ljmp
or
lcall
or
xchg
dec
mov
lea
fldenv
fistpll
je
imul
push
xchg
mov
ret
jbe
fiadds
sbb
sarb
lahf
or
xchg
lock
fscale
pusha
inc
outsb
lods
cmpsl
jge
adc
add
ret
stos
mov
cmp
sub
mov
xchg
jge
dec
gs
inc
sbb
out
xlat
loope
aam
ret
jno
jno
lock
loop
loopne
xor
std
scas
ret
dec
and
and
inc
repz
jg
insl
pop
or
pushf
mov
pushf
mov
cmp
cmc
nop
push
hlt
in
xchg
sbb
push
jecxz
cmp
lods
pop
xor
sbb
rclb
adc
xor
loopne
xchg
mov
aas
mov
stc
pop
in
aam
fsubl
std
mov
mov
ret
pand
pop
stos
jnp
cltd
das
push
rorb
and
fcoml
and
fisubl
fcomip
add
fsubs
insl
push
cmp
cs
sbb
subl
arpl
mov
out
shlb
les
pop
push
add
lods
jle
fmull
and
cmp
xchg
push
and
imull
xchg
imul
sbb
enter
pop
cmpsb
rcrl
xchg
mov
mov
xor
xor
clc
and
mov
movsb
cs
out
jg
jmp
mov
ficompl
repz
int
jge
dec
adc
mov
fs
push
cmove
movsb
adc
jbe
ret
xchg
or
and
pop
jbe
push
stc
mov
call
int
add
ljmp
and
add
push
out
lret
inc
xlat
and
push
jne
jecxz
cs
addl
fcomi
mov
dec
dec
cwtl
fistps
sbb
shlb
xchg
inc
mov
jnp
loop
jno
fildl
or
movsl
adc
cltd
mov
orb
inc
cmp
out
ds
test
pop
push
pop
decb
icebp
cmc
mov
pop
xchg
push
repz
xchg
add
pop
icebp
ret
mov
nop
sbb
xor
insb
jno
loope
imul
aam
xor
inc
xchg
mov
fwait
push
cmp
jmp
cmp
jle
add
ret
inc
add
sahf
out
dec
repz
dec
xor
jge
push
insl
hlt
lods
jp
leave
lods
cmp
fldenv
sbb
add
jl
sahf
push
push
bound
jmp
fs
rolb
xchg
stos
mov
adc
mov
daa
aas
mov
arpl
and
or
add
sub
call
adc
int3
lcall
rcrl
and
xchg
test
sub
faddl
jno
insb
push
pop
mov
movsl
jb
jg
nop
push
pusha
xor
imul
repz
ljmp
cmovs
stos
mov
imul
ficoml
mov
shll
movsl
sbb
cld
sub
pop
pusha
test
pop
movsb
pop
push
push
pop
add
add
in
test
pop
push
pop
push
or
or
cmp
mov
inc
cmc
aam
adc
leave
inc
mov
xchg
cli
pop
inc
xchg
adc
dec
iret
adc
sahf
xor
adc
jmp
out
dec
lds
mov
jp
popf
int
sub
cmpsl
adc
xchg
and
sub
jmp
repz
iret
cltd
scas
mov
push
fwait
std
js
or
fsubrs
out
pop
mov
pop
pop
mov
pop
in
fldl
lods
adc
pop
adc
das
pop
pop
add
cmp
push
sbb
ret
pop
repnz
popf
out
mov
filds
adc
sarb
dec
gs
mov
gs
movsl
not
push
xchg
fsubs
or
sahf
fstps
fisubrs
xchg
xchg
fmuls
test
cmp
add
sub
xlat
mov
imul
loope
mov
test
addr16
sub
addr16
inc
popf
mov
lock
jp
or
pop
fwait
outsl
insl
lcall
sbbb
mov
sbb
sbb
hlt
and
lock
stc
fdivl
mov
xchg
pop
scas
jnp
pop
jecxz
ret
push
mov
or
popa
fsubs
repz
stos
into
stos
out
push
xor
adc
push
dec
or
incb
dec
inc
and
lret
inc
lahf
add
cmc
scas
imul
and
cmp
mov
pop
xacquire
test
adc
je
xlat
xchg
scas
push
ret
xchg
subl
mov
pop
imul
jp
iret
push
pop
dec
out
mov
inc
shll
sbb
shl
fildll
imul
mov
gs
jnp
add
loope
mov
addr16
int3
psrlw
xor
scas
mov
popa
jecxz
xchg
rcrb
out
dec
neg
xchg
in
testb
push
add
lret
popf
add
jae
cmc
jno
lds
xor
cwtl
fcomps
hlt
sub
repz
les
mov
push
inc
in
aad
pushf
je
cli
adc
adc
stos
lret
inc
sbb
clc
aas
imul
scas
xchg
addl
sub
sbb
lahf
cmp
xor
addl
xorl
or
xor
scas
pusha
shrb
and
add
and
out
ljmp
das
xchg
mov
mov
outsl
mov
test
lods
lods
mov
cmp
loop
fwait
push
and
cmpsl
mov
cli
iret
mov
mov
cmp
pusha
mov
fisubs
int3
dec
test
sub
mov
mov
mov
imul
lock
mov
cmp
xor
mov
cmpsb
dec
xor
les
repz
xor
movsb
jl,pt
jnp
jmp
and
arpl
aam
outsl
mov
push
or
xlat
rorb
mov
push
shll
lret
jl
inc
out
pop
adc
sti
or
mov
jg
insl
dec
jnp
or
pop
mov
repnz
ficomps
popa
mov
fcmovnu
jge
jnp
ret
mov
or
shrb
outsb
bound
stos
jge
push
sahf
leave
sarb
sub
jge
aaa
push
pop
add
inc
xchg
cmp
add
test
mov
sahf
dec
dec
xchg
and
les
mov
scas
cwtl
jp
loope
or
cli
xchg
xor
jb
es
pusha
outsl
test
lea
inc
sub
jle
xchg
leave
mov
ror
data16
pop
call
mov
arpl
mov
xor
add
stos
movb
cs
mov
push
cmp
leave
mov
nop
loop
iret
and
sahf
loop
xchg
mov
mov
cmpsl
mov
mov
xchg
jmp
cmpsl
and
xor
mov
add
mov
fcoml
inc
je
or
fdivr
adc
ljmp
adc
lods
iret
xchg
lods
sarl
and
rcrl
sub
jg
or
test
jge
adc
xchg
leave
cmp
push
std
inc
pop
jns
push
jecxz
aas
scas
add
xchg
mov
mov
xchg
popa
mov
loopne
addr16
sti
pop
cltd
lea
and
sbb
xchg
xchg
push
jecxz
rcll
das
xchg
in
push
sbb
mov
int
cmp
scas
dec
repz
movsb
sub
mov
ret
pop
shlb
sti
ficomps
pop
cmpsl
les
pop
mov
test
pop
cld
aam
cmp
ret
and
sub
push
dec
push
daa
inc
dec
dec
popa
sti
and
cmp
jmp
push
pop
movl
fidivrl
xor
mov
out
xchg
in
orb
imul
jnp
xchg
push
js
popf
lret
int3
adc
test
xlat
int3
fbstp
jno
inc
add
jae
fcmovnu
pop
lcall
adc
cmp
js
cmp
sub
push
div
in
sub
jne
or
push
pop
fisttpl
jo
lds
xchg
in
mov
ja
outsb
fildll
les
push
js
mov
sub
mov
or
fimuls
mov
cmp
test
mov
xchg
add
ret
adc
enter
leave
dec
jp
sub
mov
add
cmp
sbb
xor
fsubs
inc
xor
fbstp
pop
test
cmovnp
jle
lock
ret
inc
sub
sarl
lahf
mov
ret
inc
xchg
arpl
sub
push
ljmp
in
cmpsb
in
mov
mov
imul
inc
jnp
pop
jl
adc
out
lods
mov
ds
xchg
push
js
mov
pop
and
mov
dec
mov
arpl
or
jg
fwait
das
and
in
pusha
push
aad
pop
fstps
sub
cmp
in
mov
or
dec
mov
cmp
addb
inc
inc
clc
out
jl
xchg
mov
hlt
shr
pop
and
fldenv
cmp
pop
push
aaa
xchg
int
mov
pop
pop
mov
call
or
sbb
dec
addl
fnstcw
jge
mov
in
and
jecxz
mov
mov
in
ja
and
roll
ret
outsb
scas
adc
cmp
out
dec
daa
jae
or
call
stos
mov
adc
movsl
pop
aad
or
add
jo
out
leave
xchg
test
pop
cli
sbb
jb
lret
push
xor
xchg
cltd
ja
mov
xchg
repz
mov
lods
push
push
lret
lcall
mov
lock
push
fcoms
loop
mov
rcr
mov
xchg
test
repnz
inc
add
pop
ds
cmpsl
add
xchg
push
xchg
loopne
fldcw
das
dec
scas
outsl
mov
mov
loopne
and
mov
jbe
push
push
imulb
fs
ffree
cmp
nop
sbb
lock
mov
mov
add
cmp
dec
sbb
rcll
push
dec
pop
js
out
das
jmp
testl
mov
and
and
sbb
in
lcall
in
fs
mov
inc
pop
aad
inc
cmp
pop
add
outsl
or
cmp
imul
add
popa
mov
xlat
and
push
jnp
lock
xor
mov
push
and
les
mov
loop
test
xor
out
xchg
scas
mov
test
push
gs
jno
cmp
jecxz
cli
pop
lret
insl
scas
in
mov
sbb
jbe
mov
in
adc
inc
inc
ds
iret
sub
xor
mov
xchg
mov
rcrl
jecxz
xor
and
jne
pop
scas
fs
mov
push
pop
mov
pop
rcrb
add
test
ret
sbb
jnp
jo
mov
sbbl
rorl
fucomi
sar
mov
loop
adc
xorl
inc
cs
dec
mov
std
inc
fimuls
xchg
movsb
adc
pop
ficompl
dec
or
or
pop
push
push
cmp
inc
arpl
mov
xchg
rcrb
mov
aas
rorb
dec
ja
add
cmp
movb
dec
ret
and
arpl
xchg
aad
inc
sbb
ss
mov
sti
pop
push
mov
shll
movsb
mov
xchg
xor
cmp
mov
push
mov
jmp
push
and
add
xlat
push
inc
fwait
pop
xchg
jae
je
loopne
pop
inc
lret
pushf
push
mov
jbe
and
xor
dec
movsl
lods
mov
jne
dec
rol
outsb
push
ja
orl
mov
je
jp
pop
scas
cmp
mov
pop
cmp
out
sbb
push
arpl
or
sahf
jae
inc
iret
andb
scas
sbb
xor
inc
adc
sub
xchg
push
sub
inc
test
push
or
pop
pop
aas
jmp
cwtl
sbb
or
jecxz
inc
mov
pop
sbb
push
inc
mov
test
nop
jg
popf
cmpsb
adc
sbb
and
dec
decl
mov
mov
and
stos
pop
xor
xlat
xor
rorb
testl
int3
pop
stc
enter
scas
les
ljmp
xor
lret
fimuls
int
mov
adc
inc
bnd
pop
xor
insb
lcall
cltd
rclb
shr
cmp
adcb
stc
mov
dec
xchg
jae
test
cmc
sbb
lods
xor
lods
and
ret
mov
dec
into
sbb
and
sbb
mov
fmull
pop
pop
icebp
push
add
pop
add
push
pop
cmpsl
pop
jnp
push
mov
add
xchg
push
leave
test
xchg
aaa
jmp
outsl
das
push
imul
stc
outsb
pushfw
aad
iret
pop
in
test
and
mov
dec
xchg
mov
in
popl
sub
pushf
sbb
packuswb
push
inc
in
popf
pop
add
mov
sub
lahf
mov
cmp
ss
lea
test
cmp
stos
insl
inc
xor
add
and
insl
sub
mov
mov
cmp
and
fs
mov
push
jp
sbb
in
shll
pop
stos
pop
jns
movhlps
mov
into
cmovne
xchg
fs
mov
push
or
mov
xor
fistpl
xor
sahf
sub
insb
mov
push
fiaddl
mov
pop
xorl
das
imul
dec
xor
xor
pop
sbb
lret
add
jmp
icebp
rcrl
mov
pop
mov
and
and
cltd
cmp
cli
mov
stos
jecxz
clc
mov
lea
mov
xor
inc
sahf
imul
mov
push
or
xchg
das
push
xchg
pushf
lret
clc
lods
cmc
mov
push
xchg
jp
stc
and
jns
fcoms
ja
mov
push
and
ljmp
jne
iret
sub
or
push
jo
and
xchg
in
or
aad
cmp
in
mov
sbb
push
xor
fcoml
jb
mov
push
adc
sbb
inc
add
ret
jne
cmp
stc
xchg
subb
pop
dec
add
lcall
pop
mov
gs
mov
shl
fwait
and
nop
sub
or
stc
xchg
mov
push
out
inc
je
lret
dec
aad
xor
dec
sub
iret
sbb
ja
imul
push
mov
dec
mov
jbe
and
subb
adc
iret
mov
addr16
cmp
or
pop
dec
stos
and
stos
mov
pop
stos
shrl
cmp
push
cmc
push
jns
xchg
cmp
cmpl
add
pop
scas
cli
lret
cmp
xorb
sbb
clc
fnstsw
or
mov
dec
ret
mov
and
xchg
lock
fmuls
push
imul
sub
cmpl
inc
aad
dec
mov
adc
ret
das
or
mov
or
adc
jl
inc
xchg
sub
push
mov
inc
dec
xor
dec
lds
aas
inc
jo
pop
out
xchg
and
dec
jmp
and
and
ret
inc
pop
out
push
add
aad
inc
sbb
dec
jecxz
movsl
cltd
sbb
data16
xchg
stc
mov
xchg
pop
and
push
or
inc
int3
or
lahf
sti
enter
repnz
addl
mov
leave
sub
sub
shlb
aaa
adc
and
fucomip
xchg
jecxz
fsts
cmp
push
and
mov
mov
loop
test
cli
aam
outsl
lock
add
dec
push
mov
jg
jmp
cmp
mov
inc
aas
ret
jne
add
adcl
cli
inc
cmp
gs
ficompl
ret
mov
or
jns
add
fldenv
mov
lret
push
cmp
xchg
lahf
outsb
sti
sbb
jge
pop
dec
pusha
lds
ret
sub
mov
or
lods
scas
xchg
lcall
dec
and
lds
or
push
xor
push
call
jmp
dec
sub
inc
mov
jne
in
dec
xchg
mov
lock
mov
and
lret
decl
xchg
push
loope
jnp
pop
fsubrs
fs
scas
push
ja
pushf
pop
xchg
mov
stc
pop
xchg
rcrl
sbbb
leave
dec
pop
and
sub
cmpsb
sbb
imul
sub
mov
aam
aam
sub
in
aad
lods
cs
cmpsl
js
out
shlb
pshufw
sub
repz
imul
jmp
stos
nop
mov
ret
xorl
lea
adc
add
inc
mov
ljmp
dec
in
das
in
add
stc
into
test
sti
cltd
jo
cltd
push
imul
js
or
push
jns
int3
in
loop
mov
xchg
imul
call
popf
push
inc
dec
cmp
js
and
inc
push
subb
fistps
cwtl
pop
sbb
jle
pop
push
xor
dec
loop,pt
or
in
inc
push
test
mov
in
pop
xor
ficompl
dec
add
or
daa
mov
push
pop
mov
adc
dec
dec
lods
ja
mov
pop
sbb
push
mov
flds
cmp
xor
mov
jmp
xchg
xor
pop
mov
pop
push
sub
pop
fildll
movups
add
inc
insl
and
mov
dec
mov
outsl
sbbb
pop
data16
out
lea
insb
fisttps
sub
sub
nop
cmp
cmc
mov
jno
je
imul
movsl
clc
ret
in
pushf
add
loope
pop
mov
dec
and
outsl
inc
dec
in
fisubs
add
add
push
outsb
aas
mov
fstp
and
xor
inc
or
out
dec
mov
or
mov
sbb
sahf
sub
nop
outsl
jns
movsb
add
cmp
adc
inc
jns
fwait
enter
xchg
inc
adc
pand
mov
movl
iret
sub
jno
xchg
fcmovne
je
repz
mov
push
aaa
dec
lock
lcall
scas
xchg
nop
cvtpi2ps
faddp
int3
xlat
fcoml
in
cli
clc
sub
or
push
and
inc
jmp
sbb
jecxz
or
pop
add
btr
push
sbb
xchg
mov
lret
cmp
jo
insb
sbb
xor
loope
mov
lea
test
ss
sarl
xchg
pop
push
repnz
pushf
pop
xor
stos
arpl
sbb
sbb
pop
fmull
jmp
pop
ret
inc
pushf
stos
mov
pop
rcl
retw
or
clc
ljmp
cmp
inc
sbb
adc
dec
push
std
fstps
pop
popf
jl
stos
jmp
mov
jmp
adc
cmp
sub
xchg
sti
mov
jmp
push
xchg
scas
inc
jne
dec
xchg
jo
mov
out
imul
jmp
fsts
je
ljmp
dec
sub
jno
ja
or
int
rol
add
xchg
fbld
rclb
add
mov
loope
sar
push
iret
mov
sbb
neg
mov
jbe
outsl
loop
xor
fwait
jg
lods
loope
je
xchg
fdivrl
xchg
mov
sub
and
andb
xor
jnp
xchg
pusha
cwtl
and
imul
jp
mov
ljmp
loop
dec
dec
xchg
scas
mov
pushf
xchg
andl
fstps
outsb
outsl
sbb
pop
popf
push
add
loopne
xchg
mov
sub
add
aad
cmp
les
mov
inc
pop
dec
roll
leave
ds
leave
jl
xchg
cmpsl
stos
and
shll
inc
nop
mov
mov
xchg
push
mov
and
sub
das
leave
and
sbb
mov
aad
pop
xchg
fistpll
lret
lcall
xor
test
hlt
ljmp
mov
cmp
std
sub
mov
imul
jmp
ret
mov
adc
dec
mov
jnp
ljmp
or
jo
inc
in
inc
mov
lods
mull
test
imul
or
dec
f2xm1
xor
or
adc
mov
loope
mov
jl
inc
sbb
imul
jge
mov
xchg
je
sbb
in
push
in
xor
aaa
sarl
cltd
push
pop
ret
add
mov
dec
ret
js
xchg
cmp
bound
shlb
sub
pop
loope
jp
das
outsb
fbstp
xor
push
sbb
xor
xor
fldlg2
push
push
and
mov
hlt
je
das
mov
enter
push
mov
scas
adc
lea
outsb
or
call
xorl
cmpsb
scas
sbb
adc
cltd
das
insb
pop
aad
pop
daa
push
mov
lods
lahf
mov
jno
xor
add
loop
stos
xor
fbld
sbb
adc
cs
out
jbe
in
loopne
xor
outsb
add
or
inc
mov
fwait
loopne
adc
loopne
fcmovb
adc
fnsave
xor
mov
add
inc
inc
int
mov
xlat
mov
cld
inc
or
cmp
mov
and
sbb
movsl
cmpsb
je
sahf
stc
sub
push
xchg
pop
mov
xlat
cwtl
test
je
or
adc
jl
pop
cmpsl
xchg
ss
rcl
int
test
mov
lods
fmulp
add
push
push
xchg
mov
rorb
xor
jmp
test
inc
movsl
push
frstor
xor
std
out
inc
mov
repnz
or
sbb
ljmp
mov
pop
movsl
das
pop
mov
mov
jo
out
and
dec
mov
dec
and
xchg
add
cli
and
aas
push
mov
inc
outsl
data16
jno
out
stos
dec
cld
repz
jle
sahf
or
jnp
aaa
clc
dec
leave
xor
or
ja
push
lcall
pushf
repz
and
int3
outsb
jle
mov
out
sahf
ss
cli
popa
addr16
decb
inc
and
adc
das
insb
xlat
ficomps
xchg
or
dec
and
cmc
mov
jae
cmp
and
xchg
jg
mov
wrmsr
xorl
dec
fisttpll
mov
fs
enter
lahf
insl
into
push
jnp
sub
cltd
jae
js,pn
lock
xor
jo
pop
sbb
mov
xor
pop
insl
inc
xorl
mov
sub
dec
andb
ljmp
push
sbb
mov
mov
inc
fwait
mov
cwtl
and
xor
mov
adcb
mov
jle
pop
lcall
jg
scas
push
cmpsb
sbb
xor
int
popf
xchg
insb
scas
out
out
popf
add
xchg
sar
xchg
or
nop
lcall
test
addr16
sub
dec
or
clc
ja
xchg
out
xchg
xchg
mov
lret
jmp
push
pushf
cmc
lret
mov
lret
test
outsb
or
dec
mov
lcall
pop
sbb
pusha
lret
inc
leave
cli
sahf
or
into
loop
or
pop
jmp
inc
push
and
push
xchg
cltd
divl
shl
scas
or
stos
pop
in
std
dec
cmc
mov
xchg
js
test
dec
xor
xor
test
xchg
shlb
in
enter
das
jle
inc
sbb
fwait
cmp
sbb
ja
inc
jge
popa
call
fcmove
jb
insl
imul
dec
rcl
jmp
dec
adc
jnp
inc
imul
push
insl
les
jl
sub
scas
in
fildl
add
jmp
outsb
mov
lock
testl
idivb
push
push
mov
iret
jp
mov
xchg
or
and
add
data16
inc
jbe
fimuls
outsb
mov
push
fs
out
or
enter
cmp
sti
movsb
out
jno
enter
rcrl
mov
stos
data16
movsl
adc
sub
repz
mov
adc
inc
xchg
xor
test
or
fisubs
or
mov
jge
sub
and
js
push
divl
aaa
cmpsl
pushf
and
jecxz
mov
xchg
popa
repnz
xchg
dec
cs
push
sub
inc
rolb
in
in
cmp
movsb
push
pop
sti
aad
add
mov
sbb
jmp
push
xchg
bound
hlt
lret
mov
jns
push
loope
gs
subb
pop
js
push
or
push
loope
mul
hlt
addr16
jnp
mov
mov
xchg
lret
loope
push
jg
inc
jnp
and
loop
ljmp
in
jge
gs
rorl
add
addl
mov
cli
mov
in
imul
fcoml
sbbl
push
shll
adc
in
push
mov
lret
ret
aaa
sub
popa
and
shrb
xlat
aas
and
sbb
pop
fwait
dec
jle
or
bound
repz
insb
orl
scas
movsl
mov
bound
repnz
cmp
dec
xor
mul
insl
jmp
jle
dec
and
push
fldl
push
sub
inc
inc
aad
andb
add
andl
xchg
mov
repnz
push
mov
imul
cltd
push
or
jno
jo
outsl
cmp
xor
mov
shrb
cmpsb
or
xchg
pop
in
add
scas
pop
push
jmp
jns
pop
stos
fdivrs
and
mov
fmull
jl
adc
add
xchg
lock
xchg
or
xchg
add
btc
out
inc
cmpsb
adc
xchg
shl
inc
sbb
inc
and
dec
in
lea
mov
ljmp
inc
ret
faddp
push
stos
lcall
mov
clc
xchg
mov
aaa
mov
or
cmp
cwtl
xchg
lods
inc
mov
cmpsb
jae
scas
popf
jge
cltd
xor
pop
sbb
and
mov
inc
nop
push
xchg
push
rorl
sahf
xchg
shl
lock
xchg
jbe
add
mov
cmpsb
jmp
mov
fsts
out
into
pop
pop
xor
jns
pop
inc
inc
mov
fucomi
movsl
push
fnstcw
jns
lock
mov
push
cli
cmpsb
push
xlat
xchg
xchg
mov
stc
cmp
arpl
push
mov
cmpsb
xchg
repz
xor
lds
rcll
in
or
andb
mov
out
xchg
mov
rcrl
xchg
xchg
xchg
jae
push
xor
xchg
out
shll
lds
sub
lock
push
jne
int
xchg
cmpsl
nop
je
xchg
push
sbbb
cwtl
lods
arpl
and
outsb
arpl
sbb
jmp
sub
sub
cmpsb
sahf
popaw
dec
push
lods
sub
pushf
pop
mov
dec
pop
daa
mov
cmp
dec
or
ja
repnz
dec
add
or
sub
subl
jl
mov
enter
jmp
sub
das
mov
ret
jbe
pop
fldenv
nop
jae
arpl
fisttpl
stos
lods
hlt
cli
push
in
nop
and
mov
push
bound
loope
and
xchg
mov
or
ds
je
in
arpl
dec
imul
out
adc
mov
mov
mov
jmp
cltd
or
ljmp
pop
push
inc
dec
push
faddl
addl
iret
lods
fwait
lret
ss
mov
inc
lcall
pop
sbb
pop
int3
xchg
cmp
es
xchg
xlat
jl
fiadds
jp
lcall
pop
mov
bound
repz
dec
or
dec
fstpt
sbb
xlat
stos
int3
and
stos
jmp
xor
cmpsl
inc
xor
mov
push
cwtl
in
cwtl
cltd
or
test
repz
ds
in
jae
inc
xchg
fisubrs
xor
sbb
insb
xchg
loopne
and
pop
jno
adc
hlt
and
call
mov
lods
cmp
push
or
nop
rcrb
mov
mov
jecxz
dec
pop
hlt
sub
mov
sub
mov
jae
cld
mull
aas
and
or
jo
and
into
ficomps
sbb
inc
mov
jl
mov
shrb
fs
lret
pop
xchg
xorl
je
push
mov
out
jecxz
testl
mov
pop
enter
mov
xchg
xchg
mov
mov
xor
xchg
pop
fisttps
sbb
repnz
sub
pop
jno
cltd
les
repz
enter
cs
ds
cli
stos
xor
sarb
mov
sbb
adc
xchg
iret
mov
pop
mov
inc
into
pop
jg
pop
or
mov
addb
outsb
cmp
aas
mov
jno
not
mov
int3
pop
lea
jns
mov
cmp
or
mov
xlat
xlat
out
clc
cli
add
cs
iret
xor
or
cmp
test
fwait
mov
cmp
inc
fnstenv
pop
adc
mov
or
or
lds
das
sub
ror
mov
fsubrs
jmp
sar
push
pop
inc
ret
ret
xchg
lret
xchg
cmpsb
mov
push
mov
loope
mov
fsubs
fsts
xchg
int3
fisubl
fs
dec
jbe
mov
add
aam
mov
xchg
jne
ret
ss
es
scas
cmpsb
stc
jnp
cmp
testl
stos
int3
lret
dec
mov
repz
cmp
or
xchg
jbe
push
sbb
cmp
mov
fwait
arpl
scas
mov
pusha
test
xchg
sub
lcall
fdivrs
mov
daa
lcall
aas
sahf
enter
or
sub
push
and
xchg
mov
sub
inc
fcoms
inc
arpl
mov
lea
leave
outsl
lods
insl
or
outsb
shrb
sub
adcl
insl
mov
sti
cmp
adcl
cmpsb
jbe
push
xchg
test
dec
xchg
jle
pop
insl
mul
das
jns
aas
xor
and
rcr
movsb
or
repz
dec
jb
dec
mov
jmp
xchg
mov
jnp
xchg
xchg
jp
adc
sub
and
jg
mov
fildll
outsl
push
clc
test
mov
sahf
scas
cwtl
fnstcw
scas
fisttpl
into
fcoms
push
mov
aam
jecxz
into
mov
add
aam
cli
jno
xchg
jmp
push
xor
or
fs
addb
int3
or
aaa
add
insb
in
inc
imul
aad
popa
test
dec
aas
fsubr
mov
gs
jno
add
repnz
paddsb
out
push
adc
inc
fs
jmp
rclb
add
int
pop
pop
pop
sub
idivb
mov
or
outsb
mov
mov
push
subl
xcrypt-ecb
cmpsl
lret
sbb
mov
lods
shl
test
add
xchg
adc
ret
jl
mov
jle
pop
jne
fimuls
sbb
lcall
sub
imul
push
xchg
bound
mov
fsubl
push
fcoms
push
add
insl
test
inc
fcmovb
jae
dec
outsl
xchg
or
jmp
xor
js
jo
pop
cmp
inc
in
pop
push
jle
mov
sbb
xchg
mov
or
dec
cmp
pop
sub
cmc
or
rcrl
fs
out
xor
fsts
push
je
movhps
mov
jns
or
and
lcall
inc
imul
aam
out
jp
repz
mov
pop
inc
adc
insb
insl
or
jge
insb
enter
fiaddl
dec
xchg
mov
sti
lds
lock
push
xor
gs
subl
outsb
fcomps
fidivl
and
fs
clc
fsubs
dec
hlt
ret
ljmp
scas
xchg
mov
aaa
aas
ffreep
ss
xchg
or
fnstsw
inc
loope
jbe
hlt
daa
mov
mov
dec
ljmp
dec
div
out
fsubl
or
xchg
imul
xchg
insb
js
jb
inc
into
dec
mov
cmp
mov
xchg
insb
cmpsb
outsb
inc
popa
xorb
inc
inc
xor
push
pushf
pusha
scas
jg
or
cmp
xlat
xor
xlat
push
sbb
xor
or
or
xchg
jl
push
scas
cli
and
aam
jnp
out
stc
inc
lods
call
loope
push
lods
add
inc
dec
dec
xchg
rcrb
ds
lahf
jp
pop
insl
fcomp
jno
or
push
test
jle
or
movsl
insl
pop
es
push
or
fwait
or
stos
pop
cmp
cwtl
or
cld
lcall
in
add
fidivl
adc
jb
out
push
imul
ficoms
fsubr
adcl
pop
aas
xchg
lcall
test
xchg
stc
imul
hlt
cwtl
test
adc
xchg
or
adc
pop
mov
cs
push
pop
loope
or
push
bswap
mov
mov
pop
pusha
cmpsl
jns
push
negl
mov
lcall
ret
xchg
add
mov
mov
xlat
lret
sbbb
nop
cmpsl
stos
outsb
jno
xor
jbe
xchg
and
das
fadds
shrb
cmpsl
cmpsb
in
jo
into
push
insl
add
ja
mov
fildll
jo
fstps
out
mov
std
xlat
stos
or
mov
fildl
lcall
xchg
test
push
data16
adcl
xchg
sub
mov
push
push
xchg
adc
add
jmp
and
sub
or
mov
jb
jmp
mov
arpl
cmp
iret
xor
rorb
xchg
aaa
arpl
repz
lods
cmp
xchg
add
cld
fimull
mov
xorb
xchg
pop
mov
push
sbb
mov
test
popf
lock
mov
pop
push
mov
push
dec
outsb
pop
pop
add
lahf
mov
push
stos
inc
stos
test
rcr
jns
push
outsb
out
pop
dec
stos
xor
ret
aam
lret
sub
andb
push
jns
lods
cli
fnstenv
xchg
push
and
jmp
pushf
pushf
jle
aad
aaa
test
adc
jl
cmova
jo
into
jp
and
push
pop
icebp
xchg
fsubl
int3
push
mov
jb
xchg
add
scas
ret
xlat
jmp
inc
jnp
or
xor
xor
mov
jnp
call
mov
loopne
inc
andl
cli
jmp
test
mov
ja
stos
nop
pop
sti
daa
pop
ds
and
push
push
push
inc
outsb
mov
mov
stc
xlat
push
lods
mov
into
inc
xor
dec
sbb
js
leave
in
dec
or
and
add
sub
int3
xchg
push
and
pop
add
mov
cmp
les
mov
lds
lods
loopne
in
addb
loope
add
outsb
je
sbb
push
fcomps
stos
jne
inc
pop
and
leave
lds
pop
cwtl
rolb
jp
out
jp
mov
aam
mov
lret
push
inc
out
mov
cmp
cltd
mov
aas
or
fistl
xor
aaa
lahf
subl
popa
push
sbb
out
or
dec
pop
sub
pushf
and
leave
pop
add
mov
or
fldenv
jns
and
pop
add
insb
jns
int
sbb
or
pop
xchg
pop
inc
and
data16
xchg
out
nop
jge
adc
je
aad
sahf
mov
push
add
push
dec
pusha
bound
push
fstps
repz
aam
insl
mov
dec
lods
xchg
push
mov
gs
subb
jnp
bnd
ret
std
shll
push
fwait
pop
push
bound
jns
into
jns
or
inc
push
popa
add
adc
push
dec
xchg
cltd
scas
lds
aad
mov
or
jecxz
xor
leave
mov
loope
inc
push
cmp
adc
adc
notl
add
cs
jecxz
jno
xor
shll
pop
cltd
xchg
push
inc
out
das
mov
inc
cmpsb
or
adc
jne
mov
mov
adc
aad
arpl
jns
loop
pop
imul
pop
jo
outsl
cmp
sahf
xchg
test
inc
mov
cmpl
movl
mov
imul
push
cmp
mov
jg
bound
jp
push
es
xchg
and
inc
add
cmp
cmp
loopne
pop
lahf
sub
sti
jl
mov
fxch
inc
mov
jmp
jns
js
jb
stos
repz
and
cmpsl
sarb
nop
stos
daa
insb
ret
dec
aas
xor
loopne
cli
sar
lahf
pop
xor
mov
sar
pushf
inc
jnp
and
cwtl
insl
jae
movsl
daa
mov
jo
stc
stos
aas
fwait
popf
or
push
push
push
scas
je
dec
and
sbb
sub
pop
in
sbb
mov
jne
imul
test
mov
filds
mov
mov
roll
jle
nop
cmp
mov
outsl
pop
jnp
jmp
inc
and
cwtl
ret
add
mov
adc
js
jbe
scas
or
repnz
xchg
xlat
orb
addr16
mov
sbb
inc
dec
inc
cmpsb
jl
sar
movsl
mov
sbb
cmp
or
ds
add
js
mov
mov
or
cld
jecxz
movsl
mov
sub
inc
jns
ja
jns
sbb
ret
push
sbb
cmp
sbb
popf
fidivrs
pusha
and
fwait
cmp
fcmovu
dec
insl
or
jle
jmp
incb
cmp
imul
dec
mov
int
pop
jnp
add
pop
iret
mov
and
xchg
pushf
leave
jg
les
add
mov
insl
pop
pop
stos
inc
adc
les
mov
xor
inc
cld
fstps
cmp
adc
mov
fdiv
xor
cmpsl
out
cmpsb
jae
fsubs
je
jmp
inc
push
mov
out
cmc
inc
rcrb
lret
jle
test
dec
loopne
and
sbb
xlat
xchg
push
xor
xchg
mov
mov
sub
xchg
push
addr16
add
stos
dec
fidivrl
mov
adc
cmpb
adc
xor
jle
xor
test
or
jg
adc
repnz
add
dec
sbb
into
cmp
adc
mov
shlb
loope
fmuls
je
clc
mov
dec
cltd
sti
add
loope
xor
daa
mov
mov
jmp
dec
push
mov
in
sti
xor
adc
mov
fdivp
add
cmp
push
ds
outsl
addr16
pop
add
fsts
mov
pusha
mov
movsl
cmp
jp
xor
pop
iret
mov
mul
cmpsb
add
or
cmp
xlat
or
mov
mov
lds
shll
push
aas
cli
mov
and
push
in
add
ds
shll
loopne
pop
push
add
ret
sbb
mov
out
fdivrs
sbb
lcall
sahf
dec
js
cmp
sbbl
sahf
outsl
add
idivl
pop
out
sbb
cli
adc
arpl
repz
and
insb
push
jle
out
mov
mov
push
add
out
cs
add
jnp
gs
in
cltd
cmp
mov
xchg
or
inc
sbb
cltd
adc
sbb
out
pop
xchg
xchg
add
stos
adc
pop
push
xor
in
mov
mov
inc
fsubl
ret
popf
sbb
mov
fistps
scas
mov
aam
lock
push
push
mov
jne
mov
mov
mov
pop
push
mov
jo
ja
roll
mov
mov
and
jns
jge
jg
jl
and
cwtl
cmp
orl
jmp
fistpl
insl
sahf
sbb
fwait
lock
xchg
lods
inc
in
cltd
je
xchg
add
add
jb
push
in
push
adc
mov
lret
sub
pop
ja
stos
dec
xchg
xorl
dec
cmpsl
cmp
je
shlb
test
divl
rcrl
pop
jmp
add
fs
adc
xor
and
loopne
sub
fstp
xor
cwtl
xchg
test
inc
and
mov
test
subb
lods
dec
or
xor
js
pop
xchg
adcb
cmp
loop
popa
aad
sbb
cmp
in
mov
jo
mov
lahf
mov
cltd
pushf
les
ret
xor
bound
lea
dec
fsts
or
or
mov
xlat
jl
jmp
or
xchg
sbb
bound
inc
push
mov
and
rep
flds
andb
fwait
lret
in
test
dec
cmp
outsb
test
das
adc
aaa
mov
xchg
and
outsb
stc
jo
add
shrb
test
pop
mov
movl
mov
rorb
mov
lea
rcr
nop
inc
lret
icebp
or
sbb
outsb
icebp
std
jg
nop
or
mov
sbb
inc
repnz
mov
lret
hlt
fsubr
lahf
jnp
insl
xor
and
fldt
cmp
push
jge
test
mov
test
push
inc
or
test
adcb
fmul
xchg
daa
xor
or
test
test
mov
stos
add
jno
mov
fsts
mul
mov
cwtl
mov
cwtl
mov
imulb
cmpsb
out
mov
icebp
mov
add
leave
inc
popa
loopne
inc
cmc
cmp
sahf
inc
sbb
mov
sbb
push
add
out
scas
inc
xor
and
mov
xchg
ja
xchg
dec
iret
cmpl
orb
or
test
or
ljmp
jecxz
js
scas
pusha
mov
pop
fs
mov
xchg
clc
add
into
adc
fsubrs
nopl
je
in
enter
dec
add
lret
add
pop
mov
xchg
in
fidivl
push
push
fidivrs
outsb
mov
mov
fdivl
mov
xchg
or
jne
jg
lcall
sub
fistpll
pop
sub
dec
xchg
fnsave
test
xor
push
push
movsl
cmp
enter
sbb
std
push
add
clc
loope
test
cli
jno
xchg
pop
pop
enter
scas
lret
xchg
mov
rcrb
pop
scas
mov
idivb
movsb
int3
es
adc
xchg
add
test
inc
lea
mov
mov
adc
jns
sar
outsb
aas
cmp
fstpl
dec
adc
shrl
in
aas
popa
jae
ret
jb
push
sbb
push
adc
cwtl
mov
adc
mov
jp
pop
pop
loopne
pop
mov
sub
nop
gs
ficoms
hlt
sub
outsl
mov
or
lret
pop
xor
inc
movsl
sub
sub
sbb
insl
clc
inc
out
mov
test
adc
outsb
stos
jno
or
js
xor
inc
les
sahf
gs
movsb
andl
mov
push
arpl
lods
mov
xorb
mov
lods
dec
pop
add
jo
dec
xchg
pop
mov
adc
add
movsb
fstl
ficomps
push
inc
cmpsl
add
add
jno
vpshaq
into
cltd
xchg
or
add
je
sub
clc
mov
or
std
sbb
jle
inc
cmp
mov
jecxz
add
mov
mulb
setb
push
outsb
rcll
inc
cs
loopne
jo
icebp
pop
call
loopne
mov
out
xor
sub
lcall
push
insb
out
pop
jns
jge
cmp
int
xlat
shl
add
sti
push
dec
add
pop
in
nop
fidivrl
fildl
add
lea
sub
jno
lock
pop
rcrl
fprem1
jne
cmp
xor
rorb
ds
dec
ret
cmp
outsl
cmp
icebp
mov
test
jbe
fsubl
sub
jp
shr
cs
ret
mov
into
aas
dec
in
lahf
int
fldt
push
imulb
add
xor
orb
aad
xor
jns
and
jb
xchg
sbb
push
dec
or
in
jnp
or
mov
cmpsb
mov
lahf
imul
mov
dec
push
dec
rorl
fcmovnbe
inc
pop
out
lret
and
pop
movsb
scas
xor
fdivrl
sahf
not
pop
cmp
rcrb
cmp
xchg
es
jno
mov
push
xor
popa
push
std
ret
lcall
mov
xlat
repz
aas
or
es
repnz
sbb
lock
adc
std
pop
push
adc
or
popl
inc
lods
lock
test
cmpsb
push
outsb
cwtl
std
xor
push
mov
movsb
mov
cmc
dec
outsb
lcall
popa
push
sbb
add
test
in
xchg
ja
jge
mov
dec
jno
xchg
stc
pop
mov
mov
mov
push
add
ds
addl
js
lds
sub
adc
inc
mov
inc
js
aas
jg
mov
pop
test
rcr
xchg
orl
dec
push
mov
mov
adc
lds
ficompl
xlat
sub
outsb
sub
pop
sti
mov
cli
jl
xchg
pop
xchg
pusha
add
int
sub
xchg
nop
int
fsubl
inc
mov
xor
or
dec
cltd
repnz
int
jle
dec
push
mov
jle
pop
inc
ffreep
mov
or
or
scas
cmpxchg
push
fildl
dec
fsub
adc
adc
push
les
xor
fstpl
daa
pushf
mov
fcomp
cld
cmp
dec
add
push
incl
aaa
mov
push
inc
sahf
pop
in
dec
jl
or
jo
repnz
les
shll
ljmp
push
sbb
sub
jns
mov
sbb
inc
test
xchg
imul
mov
jp
addb
jnp
fs
push
jb
xor
jne
sahf
mov
push
sar
add
fs
jne
inc
lds
and
popa
xor
popf
call
push
int
inc
addb
popf
arpl
loope
mov
adc
sub
cmp
out
subl
pop
pop
loop
lret
lods
push
aaa
movsb
lea
jl
ss
push
dec
popf
or
add
sub
push
ja
fbld
mov
inc
push
js
in
mov
and
push
popf
or
push
mov
adc
cmp
sub
sbb
out
std
cmp
fwait
rol
xchg
mov
test
andl
movsb
insb
iret
mov
mov
addr16
adcb
and
push
shrl
stc
clc
mov
mov
test
je
pop
and
mov
push
mov
neg
cli
lds
push
les
testl
xor
shrb
in
cli
pop
rcrl
sbbl
es
mov
jp
mov
lcall
mov
adc
add
notl
inc
lahf
inc
fsubl
inc
jg
shlb
push
aad
das
in
jb
push
mov
jo
cltd
loope
lods
fsubrl
daa
subl
and
cmp
daa
cmp
insb
jae
jmp
xchg
std
rclb
jp
push
mov
jecxz
orl
movsb
xchg
test
sub
shlb
push
addl
mov
sub
dec
xchg
mov
enter
jo
xchg
inc
in
and
cmp
fistps
adc
push
insl
data16
pop
jne
psllq
adc
in
add
push
mov
mov
dec
in
sahf
add
adc
gs
jecxz
jge
and
test
or
mov
and
ret
iret
adc
call
aaa
inc
jg
or
into
xor
mov
inc
pop
mov
xor
mov
sbb
in
pop
cltd
inc
insl
cmp
and
test
pushf
outsb
nop
in
shll
inc
inc
leave
test
sub
xor
int
lahf
in
push
mov
std
jne
pop
test
in
imul
decl
xorb
mov
orb
int
adc
sti
aam
or
add
daa
mov
mov
pushf
cmc
push
fistpl
cmpb
pusha
or
stos
mov
gs
sbb
xor
into
ss
ds
xor
out
xchg
push
icebp
cmp
mov
imul
cmpsb
cmc
inc
mov
shll
int
pop
mov
adc
sub
sahf
fucomi
push
out
lahf
shll
loope
push
push
jo
scas
cmp
sbb
xor
mov
stc
jb
aas
inc
mov
xor
xchg
roll
repz
jge
sbb
fiadds
shlb
add
outsl
mov
ret
add
aam
mov
mov
js
jge
enter
mov
pop
adc
adcl
xlat
push
push
hlt
lea
sbb
xchg
pop
cwtl
outsb
out
out
daa
cmpl
lea
out
mov
mov
mov
xchg
dec
push
jmp
push
lods
mov
and
add
clc
pop
pop
and
inc
mov
jo
adc
jg
xchg
int3
push
lods
push
pusha
add
xor
lret
dec
into
sub
cmp
mov
push
popa
arpl
lret
les
mov
cli
cli
popf
xor
mov
and
lcall
xorl
lock
inc
sbb
lea
sub
scas
sub
loop
adc
pop
dec
popf
add
cmp
lret
loope
cmp
loopne
mov
outsb
push
aas
mov
xor
hlt
mov
dec
pop
mov
xchg
ficoms
and
stos
scas
lods
or
xchg
adc
pop
mov
mov
sbb
jae
sbb
arpl
jne
loope
pop
dec
ret
out
ret
cltd
push
pop
nop
pop
jne
sbb
cmp
in
mov
inc
jno
fcompl
lods
xchg
outsl
ljmp
sub
les
pop
push
xor
xchg
pop
pop
pop
add
outsl
call
rcrb
dec
jo
iret
xor
rorb
or
lods
xor
mul
lcall
ja
push
loope
mov
mov
clc
lcall
pop
arpl
insb
sahf
or
cmp
push
and
sbb
sbb
xor
movsl
pusha
pusha
mov
test
cli
sub
mov
push
mov
mov
lret
xchg
and
inc
inc
stc
adc
mov
xchg
test
dec
repz
les
inc
cltd
pop
sub
push
scas
icebp
aad
sub
fsubl
test
pop
pop
fnsave
inc
mov
iret
daa
mov
xchg
inc
fs
xor
xlat
fs
iret
sub
les
pop
jmp
jge
mov
int
movsl
insb
cmp
mov
jb
jp
pop
sbb
jo
cltd
xchg
or
or
repnz
dec
stos
insb
fs
pop
in
call
arpl
sub
lret
xchg
or
mov
sbb
cld
mov
mov
mov
jg
inc
sbb
test
push
mov
xchg
mov
xlat
into
or
cs
xor
ret
mov
pop
adc
stc
sbb
pop
loope
fistpl
js
mov
imul
fbld
ficoml
sub
jmp
sbb
les
adc
mov
cmp
ror
int
push
sub
ja
ficompl
mov
enter
movsb
push
pop
aas
std
cli
pop
into
jl
mull
scas
jo
lcall
outsb
sub
orl
adc
subl
lds
sub
lock
lahf
out
sub
or
loop
dec
pusha
jecxz
xlat
xlat
and
mov
test
mov
loopne
xor
mov
jl
nop
fstps
jbe
insl
pusha
ror
popa
inc
sbb
pop
mov
js
jnp
sbb
movsl
imul
int
pop
out
wbinvd
imul
cmp
cmp
mov
stos
leave
or
aad
pop
xor
add
sub
mov
fnstsw
std
roll
fwait
sarl
jns
xchg
shl
pop
jp
xor
imul
jb
or
xor
popa
cmp
testl
divl
fidivrl
push
jnp
sub
idivb
insl
test
out
mov
ss
into
mov
lahf
sarb
shlb
fisttps
and
das
pop
out
push
add
xchg
fisubrl
fs
rorl
lret
aas
add
movsb
or
shll
mov
push
add
shrl
gs
iret
mov
cmc
mov
lock
jmp
sub
scas
shrb
adc
pop
xor
aam
cmpb
push
cmp
mov
inc
mov
insb
outsl
push
lret
pop
xchg
stc
inc
lods
loop
pop
leave
xchg
ja
mov
inc
xchg
rolb
in
test
dec
lret
es
jo
or
lock
test
aad
nop
hlt
mov
xchg
nop
lea
cltd
in
les
push
iret
scas
push
jns
cmpsl
dec
fs
sbb
jne
jno
imul
mull
inc
xchg
xchg
addr16
in
add
pop
pop
jno
add
add
mov
jecxz
out
fidivl
stos
push
aam
mov
arpl
shl
imul
inc
sti
push
xlat
jbe
jp
enter
sub
frstor
insl
add
push
or
xchg
push
or
repz
fstpl
sbb
cmc
loop
pop
pop
jne
jmp
fmull
stos
outsl
aam
pusha
mov
aad
xor
sahf
mov
fxch
add
xor
jp
mov
scas
adc
mov
scas
cmp
mov
sbb
pop
sbb
and
jb
into
movsl
andl
data16
shl
jno
and
repnz
lock
jl
das
cs
or
mov
fwait
cli
sarl
pop
nop
add
std
jno
sbb
inc
sahf
or
cmpsl
shlb
movsl
std
xor
xchg
dec
mov
rcrl
sti
test
popa
adc
ret
xchg
fstpt
jbe
rcrl
mov
jle
adc
stos
adc
test
jne
cmp
inc
gs
rcr
popa
dec
or
and
aas
sti
sti
inc
arpl
les
lahf
push
xor
cmc
rcll
push
roll
push
push
cmp
cmp
test
add
enter
inc
xchg
repz
xchg
inc
sbb
jge
sarb
inc
mov
pop
mov
syscall
push
or
xchg
pop
enter
orb
add
adc
sub
movsb
cmc
cltd
clc
xchg
mov
xchg
dec
movsl
and
insl
jecxz
jp
les
cs
call
cmc
jg
lds
rorb
icebp
xor
xor
push
adc
fdiv
mov
incb
inc
js
call
ret
mov
rcll
ja
pop
jo
fs
dec
mov
sbb
bound
push
jle
push
test
icebp
add
fcmovb
adc
xchg
xchg
push
adc
outsl
fdivl
ja
jbe
jno
xor
cmp
ret
inc
mov
jbe
jo
cmp
mov
sbb
fdivs
lahf
cli
lret
mov
mov
dec
mov
fidivrl
sbb
sbb
lcall
popa
xchg
aas
fisubl
hlt
sbb
fistpl
mov
inc
dec
sbb
push
lea
in
fcoms
jne
xchg
jg
jae
test
push
call
imul
popf
xchg
xor
loope
rorb
pop
pop
iret
mov
lret
xchg
jle
xchg
mov
dec
sbb
rcrl
adc
imul
dec
das
aam
mov
add
mov
mov
rorl
and
jecxz
jns
icebp
xchg
ficompl
push
bound
in
ja
lahf
mov
xor
xchg
mov
adc
idivb
jns
xor
sbb
loop
mov
mov
adc
das
mov
xchg
or
mov
or
or
mov
mov
mov
mov
fadd
mov
cmp
xor
xlat
outsl
pop
iret
push
jecxz
push
imul
dec
ret
pusha
xchg
in
mov
lds
xor
or
scas
es
push
inc
iret
jl
pop
int3
lcall
imul
pop
es
popf
mov
jg
cltd
pop
push
jle
mov
pop
jo
sbb
sbb
sbb
mov
push
inc
aad
mov
ret
nop
mov
mov
in
dec
mov
add
dec
dec
loop
cs
sbb
xlat
mov
fdivrs
clc
mov
jle
aam
xchg
inc
ds
mov
xchg
xlat
xor
negb
mov
je
jmp
lcall
pusha
dec
jecxz
mov
push
dec
cli
mov
xchg
jge
repz
sbb
dec
jmp
jns
and
std
mov
pop
push
std
jecxz
jbe
or
insl
mov
fwait
mov
loope
dec
out
or
addb
mov
mull
inc
mov
dec
lds
add
cld
sub
add
xchg
lahf
or
dec
mov
out
dec
xchg
std
icebp
lods
xchg
xchg
out
mov
int3
push
pop
leave
daa
add
inc
test
lret
nop
mov
test
outsb
lahf
push
mov
shlb
sbb
and
out
mov
push
xchg
orl
cs
xchg
loop
pop
push
scas
jns
dec
add
pop
jge
bound
rorl
mov
iret
pop
ljmp
xchg
fsubs
sbb
xchg
push
adc
mov
inc
fistps
push
push
or
mov
xchg
inc
cltd
adc
xlat
rolb
shl
insl
inc
aaa
popl
ret
jbe
das
and
loopne
jg
mov
mov
lock
cmp
xchg
aam
cmpsl
sbbb
pop
and
out
jne
in
pop
xor
pop
fstpt
adc
sbb
add
lock
xchg
or
scas
scas
push
mov
jno
dec
pop
je
jge,pt
cs
or
xchg
xlat
out
jmp
fs
mov
lahf
push
mov
pop
lahf
repz
pop
xchg
adc
sbb
aas
lea
pop
mov
dec
rclb
pop
pop
xor
sar
stc
and
insb
call
xchg
movsl
xor
add
cmp
icebp
out
dec
cmp
pushf
enter
sub
sbb
cmp
into
xchg
das
mov
push
out
lahf
cmp
rcll
xchg
inc
push
xlat
popa
mov
xchg
je
mov
push
adc
xchg
imul
aas
inc
scas
imul
jb
cli
sahf
lret
and
repnz
das
mov
outsl
xchg
mov
icebp
or
jno
add
fildl
call
xor
ja
sahf
add
or
xor
or
mulb
xchg
pop
push
mov
cltd
xchg
out
pusha
into
aad
aad
mov
data16
jno
jb
mov
rcl
loopne
jge
stos
dec
mov
or
dec
lds
fs
inc
mov
call
pushf
daa
lret
out
jae
cmp
fmulp
popf
dec
push
or
rcrl
mov
in
mov
mov
lods
dec
roll
setns
shl
std
lret
pop
pusha
aaa
and
push
clc
outsb
mov
mov
or
fisttpll
subl
out
jns
lds
mov
cwtl
ror
pop
jno
cmpsl
outsb
jg
aad
scas
cmc
or
ja
imul
shlb
iret
jno
push
jmp
push
add
pop
jbe
sub
mov
xchg
frstor
aas
inc
mov
and
xchg
sbb
mov
xchg
pop
and
pop
jns
mov
sub
mov
jbe
mov
xchg
aam
and
iret
push
add
sbb
adc
mov
sub
ret
pop
fdiv
js
imul
xchg
push
mov
add
mov
jb
mov
out
gs
insl
inc
pusha
xor
push
xor
addr16
data16
lcall
jp
sbb
pop
push
and
sbb
mov
in
or
scas
pop
sbb
sbb
push
jmp
imul
ret
sbb
insb
imul
fimull
dec
sbb
pop
xor
jno
jle
pop
dec
dec
aad
adc
push
jo
mov
movsb
inc
inc
lods
pop
fcompl
mov
mov
icebp
fidivrl
and
sub
dec
jle
aad
dec
add
push
iret
mov
dec
xor
mov
jae
scas
push
xchg
mov
aas
xchg
imul
popf
mov
cmp
mov
lcall
mov
jge
adc
xor
les
push
xor
cmp
insl
jl
sbb
rclb
inc
cmp
sub
hlt
sub
add
cwtl
scas
push
into
aam
imul
inc
pop
dec
ljmp
push
cmpsb
inc
pushl
stos
outsb
pop
lret
xor
stc
dec
test
mov
jnp
mov
mov
fisubrl
cld
lds
xor
cmp
hlt
xchg
fmuls
mov
inc
inc
mov
or
icebp
mov
addr16
lock
mov
scas
popa
icebp
sti
mov
mov
into
out
lea
aas
mov
xchg
leave
jecxz
orl
adc
lods
lea
xchg
icebp
ret
push
cmp
push
adc
inc
jae,pn
fmull
lods
js
jns
lods
cmpl
out
lds
mov
out
shll
mov
jg
idivl
popa
jle
pop
add
push
test
dec
je
pusha
inc
sbb
ss
dec
dec
fidivs
jnp
jecxz
fcomps
xorb
cmp
pop
pop
pop
or
imul
aas
leave
std
leave
dec
dec
sbbl
sbbl
jp
fs
leave
mov
outsl
mov
mov
sbb
lret
push
jmp
push
into
mov
sti
mov
sbb
es
jne
in
mov
or
sar
inc
test
and
hlt
push
ret
xor
stos
mov
pop
jl
addl
daa
pop
push
ljmp
ljmp
xchg
fadds
je
adc
push
ja
imul
ffree
xchg
mov
or
addr16
lcall
test
push
loop
cmp
or
loop
das
sub
test
cltd
les
or
xor
fwait
jle
notl
cltd
mov
cmpsl
add
mov
mov
sbb
dec
movsb
adc
fildll
push
outsb
cmp
sbb
pop
cmpb
add
adc
xor
out
mov
inc
popf
xor
aas
dec
mov
in
adc
insl
adc
adc
insl
lods
jbe
sub
mov
add
xchg
data16
stos
out
out
jae
je
jbe
pop
xor
mov
adc
xchg
add
inc
pusha
mov
pushf
hlt
pop
std
fs
pop
fdivrl
arpl
cli
cld
push
scas
cltd
jnp
fbstp
je
push
sahf
push
fimuls
cmp
movsb
insb
popf
pop
dec
adc
hlt
add
enter
cli
add
pop
pop
add
insl
or
dec
mov
lds
aad
jnp
lcall
into
sub
xchg
mov
lret
push
xor
sbb
jb
sarl
aam
dec
pop
in
pop
jmp
pushl
add
jno
cs
inc
xchg
scas
xorl
mov
cmp
push
outsb
and
mov
mov
cwtl
out
jae
dec
nop
rcr
add
int3
pop
rorb
mov
pop
imul
js
cmpsb
push
in
ficoml
leave
dec
adc
pop
jge
add
imul
xchg
jae
dec
jb
cmpsb
cmp
mov
stos
cmp
jg
inc
lock
movsb
mov
mov
lds
loop
jecxz
sbb
scas
or
jo
adc
pop
gs
xor
fmul
popl
mov
in
std
pop
out
outsb
push
lock
pop
or
add
xchg
out
shl
adc
test
pop
in
dec
add
movsl
rorb
stc
sarl
xor
jmp
and
out
pusha
lock
addr16
jnp
dec
pop
arpl
push
sub
repz
subb
push
subb
sub
add
cs
mov
imul
scas
inc
xlat
mov
dec
les
inc
es
mov
add
fstpt
pusha
or
pop
shl
mov
mov
cmp
cltd
xor
or
adc
je
jecxz
imul
jae
test
pop
fwait
add
add
gs
dec
dec
push
pop
inc
out
mov
test
sarl
xor
xlat
imul
sahf
jo
rorb
mov
mov
mov
std
fcmovnu
add
jo
mov
or
pushf
xor
inc
inc
cwtl
or
and
sbb
sti
fstpt
imul
sub
fcomi
cmp
jp
push
xchg
dec
pop
or
ret
lret
pop
gs
and
jae
dec
mov
push
pop
std
lcall
stc
mov
xchg
add
pop
push
dec
mov
insb
dec
inc
mov
mov
popa
mov
xchg
imul
add
mov
push
adc
frstor
movsb
cld
dec
push
sbb
stc
inc
movsb
jp
or
mov
jns
jge
fadds
jmp
repnz
cmp
insl
pop
int
xchg
sahf
and
jnp
sub
movsb
push
fists
mov
inc
cmc
xchg
mov
push
adcl
xchg
xchg
jle
or
jo
js
inc
jge
mov
xor
xchg
push
dec
movsl
fcomps
xchg
aaa
and
xchg
xchg
xlat
arpl
mov
dec
test
add
mov
mov
mov
loop
pop
sub
push
push
insl
mov
push
push
outsb
mov
inc
mov
cmp
loopne
insl
lds
mov
add
or
or
add
mov
push
sub
ljmp
sbb
dec
jle
jle
sbb
iret
dec
fdivs
push
xlat
das
shl
insl
sbb
mov
int3
stos
xor
mov
mov
push
rorb
adc
pop
leave
imul
lcall
push
ljmp
fstl
sub
shll
add
ret
dec
add
ss
das
push
jns
mov
call
push
popa
add
arpl
mov
cmp
int
loopne
push
and
cli
mov
cld
lds
dec
loopew
aaa
xchg
cmp
test
leave
and
ds
sub
out
xchg
ss
shlb
bound
or
mov
mov
gs
push
aaa
push
cwtl
dec
ret
inc
outsl
je
or
xchg
cli
lret
inc
repnz
jns
xor
mov
adc
mov
lea
daa
imul
data16
pop
inc
outsl
sub
or
sub
sbb
mov
or
or
xchg
lret
sbb
clc
in
test
addb
mov
xchg
scas
dec
das
xchg
fcmovb
clc
pop
fisttpll
loop
xchg
dec
sub
xchg
mov
push
sbb
cmp
fmuls
call
adc
sub
fs
les
inc
leave
and
je
xchg
xor
pushf
sbb
test
push
push
pop
adc
add
mov
pop
mov
addr16
subb
pop
xor
mov
addr16
sub
add
ret
leave
jb
xor
vdivps
daa
mov
pop
ret
inc
mov
jne
repnz
jmp
inc
jge
scas
ljmp
jmp
push
lods
pushf
fstps
push
sbb
int3
or
xchg
arpl
inc
xor
and
cmpsb
and
pop
or
or
test
popf
movsl
std
fisttpl
imul
aam
nop
cmp
ret
fistpl
fistps
sub
shrb
push
inc
in
or
pusha
cs
fdivrs
mov
std
push
sahf
sub
loope
jg
xor
in
push
nop
sbb
xor
mov
arpl
lods
inc
mov
xchg
xchg
xor
mov
mov
xor
push
mov
push
aaa
das
popa
jecxz
inc
inc
iret
add
enter
lcall
push
xor
data16
fcmovb
mov
fsub
fwait
xor
mov
jl
push
jge
pop
fsubs
lods
aas
int
xlat
arpl
jge
addr16
aad
insb
add
adcb
frstor
jmp
pop
pop
lcall
cwtl
int3
cmpsl
insl
jns
movsb
inc
hlt
push
stos
adc
cmp
or
lret
xor
test
mov
enter
mov
sti
xorl
inc
stos
ljmp
test
test
punpckhbw
jle
mov
sbb
and
push
loopne
enter
xchg
movsl
mov
push
xor
addr16
and
and
fnstenv
inc
les
push
fidivl
mov
mov
test
int
nop
mov
insl
add
outsl
cmpb
arpl
fsubrl
mov
sub
pop
add
repnz
xor
int3
dec
dec
pop
mov
xor
cmpsl
dec
jmp
clc
ret
jnp
push
dec
rclb
int
jg
jne
or
xor
push
mov
jno
or
and
xor
add
push
or
jne
cmp
xor
mov
sub
cmpsb
fmuls
out
jb
mov
aad
xrelease
repnz
and
and
pop
and
lock
cwtl
faddp
lock
mov
push
lds
mov
sub
stc
xchg
fsubl
mov
or
jne
cmpl
pop
scas
push
xor
imul
cmpsl
adcb
mov
push
pop
sub
and
jg
nop
test
mov
in
out
das
sbb
mov
sbb
outsb
dec
cmpsb
cltd
sahf
jnp
fisubs
std
sbb
int3
jne
mov
shl
add
mov
in
lahf
or
inc
lock
daa
add
int3
arpl
pop
into
xor
sub
xchg
inc
in
inc
pop
push
push
arpl
fsubl
pop
add
pop
les
adc
jmp
pop
dec
xor
add
xor
adcl
cmp
rcl
scas
sub
aas
xor
mov
mov
repz
add
lods
mov
cmp
xor
dec
inc
sysexit
shr
sar
sarl
call
incl
call
xor
mov
divl
jmp
leave
fistpll
xchg
mov
clc
ja
pop
adc
mov
subl
jmp
int3
xor
dec
sbb
cwtl
ror
sub
jge
xchg
sbb
lret
rcll
shr
mov
scas
push
jns
or
xor
pop
mov
inc
jae
cmp
in
pop
repnz
sbb
sbb
ja
in
xorl
data16
xchg
sbb
popf
insb
fiaddl
inc
xchg
xor
mov
cmp
pop
outsl
mov
lret
sbb
xchg
aas
loope
cltd
lods
push
jnp
dec
mov
jb
inc
jb
daa
into
sbb
insl
pop
jbe
rcll
and
bound
jecxz
or
and
dec
lret
pop
imul
or
lret
out
test
or
stos
push
add
mov
daa
and
insb
or
addb
push
repz
cmp
pushf
sub
dec
adc
call
lcall
lahf
sbb
filds
jp
sbb
cmp
lea
jne
inc
lcall
stos
xchg
loop
test
cmp
rcll
bnd
aaa
pop
mov
cmp
cmp
lret
xlat
dec
jg
inc
fmulp
hlt
loop
subb
jbe
push
mov
dec
cmp
xchg
jg
popa
or
adc
or
jle
test
push
sbb
sub
pop
out
xor
jb
xor
mov
add
int3
sbb
dec
mov
add
sub
test
ret
gs
add
orl
sub
and
inc
dec
xor
ljmp
lahf
or
shrl
adc
jns
jns
fsubl
pop
int
shrl
push
and
arpl
pop
sub
jge
movsl
lcall
adc
inc
sub
addr16
pop
adc
arpl
mov
adc
gs
pop
mov
aaa
mov
adc
bswap
adc
add
adc
mov
pop
mov
pop
out
movsl
push
adc
pop
xchg
add
stos
jl
ds
lea
mov
jne
sbb
dec
xchg
pop
add
fwait
xor
cmp
xchg
jbe
addr16
mov
addl
lea
or
xchg
xor
rcll
xor
adc
mov
in
mov
dec
imul
jne
ficoml
rorl
mov
outsl
cmpsb
pop
cmp
and
arpl
jmp
lods
jp
cmp
and
popf
mov
sbb
xor
cmpsb
imul
push
mov
sbb
jmp
and
aad
mov
cmp
mov
mov
fldenv
aam
sub
push
lea
cs
in
pop
jnp
popa
add
and
push
dec
popf
lret
push
fcompl
push
inc
xor
fiaddl
cld
sti
scas
sti
int3
xlat
xchg
cltd
push
xchg
nop
stc
mov
rcll
jge
mov
lods
rclb
or
dec
js
loopne
stos
imul
and
test
push
cwtl
xor
insl
mov
sub
adc
imul
ja
imul
mov
push
pop
nop
cmp
out
dec
xor
scas
jnp
lcall
jo
push
mov
or
cmp
lods
rcll
scas
xor
jecxz
jge
pushl
cmp
jno
loope
push
data16
dec
flds
aas
mov
lea
int3
popf
je
xor
or
rcrl
ret
sarb
rcrl
cmpsb
or
sbb
insl
and
jns
push
and
ds
cmp
lret
jmp
and
in
inc
dec
test
loopne
std
jecxz
fisubrs
jne
cltd
cmp
adc
xchg
xchg
push
adc
push
stos
repz
popa
les
pop
xchg
pop
mov
and
sub
je
cmp
xchg
xchg
fiadds
pop
je
add
xor
fcompl
xor
push
push
lea
mov
xchg
pop
pcmpgtd
fisttpll
jp
clc
jno
and
adc
dec
adc
roll
mov
fsubs
mov
ds
jle
or
push
pop
loop
ja
cmp
mov
jge
daa
mov
push
sub
dec
mov
and
mov
mov
in
mov
inc
adc
adc
pushf
and
dec
jnp
pop
adc
xor
stc
sbb
lods
push
insb
or
pushf
pop
lret
fs
jmp
stc
pop
fcoml
or
push
lds
cmpsl
jp
mov
insb
sbb
stos
lea
inc
lds
movsl
add
jbe
push
mov
mov
pop
pop
fldenv
and
dec
xlat
cmp
push
xorb
mov
pop
add
lret
mov
call
jne
test
jle
pop
inc
xor
jae
lret
mov
add
push
loop
jmp
out
stos
push
mov
mov
mov
fwait
das
push
dec
xor
jg
add
fldenv
fistl
mov
sbb
fdivrl
fistpl
push
xchg
mov
sahf
xchg
inc
push
cmp
jmp
mov
xchg
idiv
xchg
in
mov
cld
push
into
add
pop
popa
adc
das
pop
lods
stc
dec
scas
and
lret
outsb
lahf
imul
xchg
rcrl
into
inc
in
dec
nop
outsb
xor
lcall
cmp
lcall
mov
inc
xchg
push
mov
or
push
mov
les
mov
les
jb
ficomps
inc
call
pcmpeqd
pushf
scas
xchg
test
fistl
xchg
push
and
dec
jmp
pop
or
mov
cmp
adc
mov
jns
aam
dec
test
inc
aad
mov
mov
fnstsw
hlt
dec
xchg
aaa
outsl
dec
xor
fimull
sub
cmp
pop
dec
cmp
scas
xchg
mov
rcr
iret
scas
inc
mov
mov
fadds
inc
mov
pop
jl
ds
add
fwait
scas
xchg
and
mov
popf
dec
sahf
pop
pop
jnp
mov
xchg
cwtl
popa
insl
pop
mov
mov
mov
cwtl
mov
and
iret
int
jmp
icebp
test
mov
movsb
pop
add
rcrl
loope
mov
adc
test
loop
jle
inc
rol
sbb
add
dec
sbb
xor
push
or
xchg
bound
cs
clc
fidivrs
fbld
in
ficompl
mov
movsl
jmp
jmp
roll
sub
into
sbb
sbb
or
or
jnp
pop
hlt
push
les
mov
xchg
pcmpeqd
dec
xchg
ljmp
pop
shl
and
stos
fwait
aad
gs
fiaddl
loopne
push
or
mov
push
cmp
inc
xor
pop
pop
xor
fnstenv
push
fstpt
outsb
xchg
mov
mov
bound
xchg
push
jl
addl
loop
lret
or
fwait
ss
leave
xor
mov
xchg
rclb
aas
pushf
out
add
icebp
test
movsl
sbb
xchg
test
jge
lret
cwtl
sub
xor
cmp
xlat
cld
bound
stos
and
cmp
cmp
push
mov
xchg
lcall
loopne
mov
push
sbb
ret
jp
cmc
popf
mov
pop
pop
adc
fimuls
shll
std
mov
popa
mov
push
jp
mov
or
into
xchg
mov
gs
aas
jae
xchg
stos
push
nop
jns
lahf
and
es
push
loopne
stos
add
arpl
sub
test
in
xchg
movsb
loopne
jp
out
cmp
cmpb
jbe
mov
int3
fimull
clc
adcb
in
add
ja
and
pusha
ret
fadds
int
or
pop
ja
fsubrs
add
mov
rclb
rorb
pop
pusha
std
sahf
sbb
insb
push
xor
cwtl
fisubl
adc
inc
sub
mov
mov
imul
neg
orl
or
sbb
rolb
mov
push
cmpsb
dec
scas
test
nop
fnstenv
pop
or
cmp
xchg
pop
jg
pop
mov
and
inc
mov
mov
sbb
pusha
push
adcl
pop
cwtl
out
jb
pop
push
in
xor
out
out
xchg
inc
cld
into
pop
imull
sti
mov
fwait
mov
fwait
rcll
ljmp
xor
andl
sbb
xchg
sbb
lock
jne
loope
faddp
cwtl
pop
pop
lret
push
inc
repz
adc
mov
jae
sub
psubb
rclb
cmpsl
dec
shlb
out
mov
xor
push
sbb
test
rcrl
out
pop
dec
xchg
dec
clc
mov
adc
dec
rcrb
lea
push
das
and
pop
mov
push
add
in
or
jmp
xchg
mov
jae
sahf
fstpt
dec
orl
std
cmp
sarl
aad
xchg
test
test
jle
clc
cmp
mov
sub
pop
mov
and
out
mov
cwtl
negl
loopne
out
jg
push
int
inc
test
xchg
js
movsl
xor
xchg
pop
mov
fimull
stos
cmp
test
jbe
ljmp
ds
sbb
and
test
xor
test
ret
sbb
mov
movsb
push
mov
daa
enter
mov
lcall
dec
and
fistl
sub
add
push
rolb
mov
ret
fbld
or
adc
leave
pusha
inc
pop
popf
inc
mov
nop
add
jns
loop
fcompl
add
adc
mov
lahf
mov
adc
dec
sbb
lret
jg
mov
adc
int3
scas
sub
cmp
jl
push
mov
outsb
mov
jo
pop
ror
jge
xor
jge
jl
addr16
and
dec
loop
rcrb
dec
cmp
pop
lods
lcall
in
mov
fnstsw
lock
fimuls
popf
mov
and
outsb
sub
arpl
in
dec
hlt
sarb
adc
pusha
mov
dec
pop
mov
insb
add
jns
and
jae
sub
gs
sub
sub
lret
ret
icebp
movsl
insl
lret
push
std
ret
out
inc
jb
inc
movsb
addl
je
add
lret
cmc
pop
push
or
int
pusha
adc
xor
lret
inc
bound
fimull
xchg
inc
in
sbbl
cli
or
jl
adcb
mov
ja
dec
and
dec
xor
out
test
or
adc
pusha
xor
movsl
call
rorl
adc
mov
push
push
scas
cmpsl
ss
and
xorb
rcrl
jb
and
pop
in
mov
add
xor
inc
xor
cmp
jle
lret
mov
mov
adc
outsb
fisttps
fs
movsb
dec
insb
inc
outsl
aas
dec
xchg
mov
sub
xchg
dec
mov
popa
clc
inc
int
icebp
push
xchg
mov
mov
jg
gs
test
mov
push
mov
or
repnz
cmp
pop
sbb
iret
mov
mov
in
nop
cmpl
jle,pn
mov
mov
mov
sbb
xchg
into
mov
jle
mov
sub
ret
fdivr
xchg
add
dec
adc
loopne
push
je
in
xchg
test
hlt
pop
xchg
adc
mov
mov
push
call
dec
fs
jg
jp
xor
mov
mov
mov
in
je
add
in
insb
in
cli
outsl
xchg
push
daa
hlt
ljmp
loop
aas
es
inc
fsubrl
pop
xor
lcall
push
leave
je
jne
pusha
xor
cltd
cmp
xor
inc
es
inc
pop
es
jbe
inc
mov
pusha
dec
pcmpgtw
mov
push
pusha
sahf
push
xor
add
mov
and
sbbl
repz
and
push
cmp
inc
nop
mov
idivl
sub
movsb
mov
std
xchg
daa
in
bound
push
fsubl
imul
js
movsb
jmp
or
in
jecxz
aas
mov
adc
and
adc
sub
or
aaa
add
ljmp
dec
or
cmp
mov
mov
inc
decl
punpckhbw
cwtl
inc
adc
aad
in
rcrl
insb
pushf
or
mov
jo
mov
fstpt
fldcw
inc
dec
fnstcw
push
ljmp
lock
clc
into
xchg
js
scas
andl
nop
insl
stc
pop
in
push
adc
movsb
movsb
jo
adc
mov
add
xor
sti
popf
dec
push
cwtl
fdivl
adc
cli
inc
jmp
iret
out
lea
pusha
cltd
cmpsl
xor
sub
mov
and
or
adc
pop
sahf
test
add
decb
or
sbb
stc
cmp
stc
outsb
and
add
inc
fbld
outsl
add
adc
movsb
cmp
ret
and
into
inc
xchg
out
insl
sti
xchg
jo
lea
or
gs
subl
pop
adc
dec
dec
mov
imul
scas
js
inc
add
add
outsl
ret
outsb
jno
test
jg
shl
xlat
xor
cld
cmp
aas
lret
adc
mov
stos
loopne
aad
xlat
cmp
mov
imul
mov
fldenv
mov
inc
mov
bound
xor
pushf
jl
out
test
cmp
and
xor
mov
dec
scas
mov
jcxz
loopne
sbb
into
jge
pop
in
mov
jmp
or
in
inc
push
std
add
insb
fsubrl
jne
add
pop
inc
sbb
ret
sub
and
aaa
pop
jmp
inc
lret
pop
and
push
inc
adc
fstps
push
pop
gs
je
jg
push
jns
adc
adc
ljmp
popa
aas
push
xchg
imul
fmul
int
out
cwtl
pop
cmp
sub
cwtl
pop
pop
mov
ljmp
les
mov
test
jmp
pop
int
mov
mov
fcmovne
fwait
insl
idiv
sahf
pop
out
xor
push
mov
add
jge
add
dec
sbb
cs
or
aam
stos
fdivrl
aas
xchg
into
pop
sub
push
lahf
push
loope
ja
fnstsw
jecxz
les
or
mov
and
shlb
rolb
loop
scas
xlat
nop
push
dec
mov
mov
das
aam
sub
adc
jb
inc
popf
fnstenv
inc
xor
xchg
ret
pop
hlt
aad
addl
sbb
cli
fsub
daa
jne
mov
inc
jno
fmuls
push
inc
or
insl
imul
adc
pop
adc
xchg
xor
mov
clc
mov
mov
fmuls
sub
push
mov
sub
mov
aam
loopne
ja
xchg
pop
fnstcw
and
ljmp
and
xor
scas
arpl
dec
mov
es
cs
mov
addr16
inc
or
cmp
test
cmpsl
inc
mov
jl
add
ja
and
divb
loopne
xchg
test
imul
mov
sub
loope
xchg
dec
adc
inc
addb
aaa
push
mov
lahf
pusha
adc
push
jle
push
ret
xor
sub
mov
mov
imul
jmp
mov
xchg
mov
push
jb
popf
mov
inc
pushf
pop
icebp
insb
push
scas
call
cwtl
xor
outsb
jno
inc
mov
sti
mov
test
mov
mov
xchg
subb
ljmp
and
addr16
imul
inc
mov
neg
cltd
sti
shrl
xchg
jg
outsb
les
decb
fsubs
mov
add
std
mov
mov
fwait
dec
idiv
cwtl
jmp
mov
sub
imul
jb
fsubrs
pop
fcompl
jg
ja
inc
subl
jl
aas
push
add
test
je
xor
shld
in
cmp
or
jae
mov
outsl
sub
outsl
adc
popa
leave
cmp
mov
aaa
and
imul
add
fdivrl
jno
rorl
mov
push
pop
mov
sarb
mov
shll
out
xor
sub
lret
int3
mov
or
dec
mov
fwait
xchg
mov
sarl
push
je
push
jmp
lret
faddp
stos
mov
bound
xchg
lret
fcmovnbe
inc
pop
fs
pop
cwtl
pop
test
idivb
icebp
cmpsb
dec
incb
sub
outsb
dec
fs
jl
add
pushf
jge
inc
loopne
mov
pop
push
imul
sub
stos
lahf
lea
stc
jne
popa
pop
push
and
je
sub
lods
lret
xchg
cmp
inc
shrb
push
adc
jno
push
xor
stc
xor
scas
cmpl
mov
or
mov
into
jge
inc
cs
push
jns
dec
xchg
or
loope
push
add
push
ficomps
stos
pop
inc
div
push
sarb
ss
push
sub
repnz
xchg
push
jmp
scas
adc
aad
push
imul
or
adc
aas
dec
xchg
xchg
repnz
gs
sti
xor
adc
lcall
mov
lock
xor
jp
in
ficompl
inc
or
imul
cmp
dec
push
lods
fcmovne
dec
imul
scas
xchg
lock
dec
adc
lock
dec
roll
mov
bound
in
sarl
outsl
adc
add
aam
mov
cmp
and
stc
stos
lods
and
data16
sahf
xchg
rcll
popf
xlat
xchg
stos
test
nop
iret
add
xchg
jecxz
push
mov
sbb
sbb
lods
push
pop
imul
sbb
xorb
mov
inc
into
xchg
cli
popa
mov
int
mov
dec
push
clc
enter
pusha
cmp
rcrl
jmp
adc
leave
addb
fdivl
inc
loopne
inc
mov
sbb
adc
aaa
xchg
lahf
das
sbb
push
xchg
push
xchg
repz
adc
loope
pop
sub
pop
popf
jp
fnstsw
test
cltd
mov
cli
xor
sbb
sub
data16
adc
push
lds
adc
mov
jns
push
clc
push
jge
push
push
icebp
ljmp
jne
jl
aad
dec
data16
je
dec
pop
loop
lock
pop
sub
enter
cwtl
ja
mov
cli
push
pop
test
sbb
jecxz
mov
xchg
lahf
jp
rcll
dec
jle
inc
dec
insl
sub
push
pop
xorb
stc
inc
repz
das
inc
jp
or
jecxz
cmp
sar
add
pop
dec
or
cld
sbb
jo
dec
push
pop
ljmp
nop
loopne
ffreep
dec
pop
dec
pusha
cmc
xchg
cmp
sub
inc
rorl
cs
pusha
push
jnp
jbe
in
cmp
fisubl
sbb
out
adc
mov
cmp
sbb
in
data16
test
cli
sbb
loope
inc
lds
pushf
fimull
sub
mov
mov
icebp
cmp
mov
dec
test
inc
jl
xor
nop
loope
jno
add
pop
cmp
aaa
inc
sbb
jno
imul
xchg
fldt
xchg
pop
jne
push
mov
cwtl
inc
lods
pop
es
xor
pop
cmp
popf
jp
xor
push
xor
sbbl
incb
cs
fdivs
or
jbe
shlb
mov
enter
pop
xor
sbb
cld
rclb
fsubrl
sarl
xchg
and
mov
div
outsb
mov
push
jl
mov
stos
mov
and
and
mov
scas
stc
sub
ljmp
imul
sbb
dec
xor
out
cmp
push
push
int3
fs
xchg
into
iret
mov
mov
push
sbb
sahf
popf
js
cmpsb
cmp
inc
jmp
xor
push
jle
jmp
mov
push
mov
cmp
insl
jg
mov
jnp
and
arpl
negl
fimuls
dec
cmpsl
cmp
cli
loope
xor
mov
jno
mov
xchg
sarl
adc
jl
stc
push
dec
popf
loopne
mov
xorl
fistps
jb
sbb
xor
repz
addr16
insb
mov
sub
repnz
xchg
popf
push
mov
and
scas
inc
cmc
or
aas
pop
imul
nop
pop
dec
cmp
push
and
pop
add
and
sahf
repnz
jle
xor
data16
mov
push
xchg
sub
aas
mov
fwait
cli
pop
es
add
arpl
je
xor
mov
ret
pop
je
cwtl
and
xchg
cmp
data16
sub
shl
mov
dec
test
jl
pop
mov
iret
dec
fldcw
mov
and
and
ljmp
push
push
mov
cli
fwait
push
and
xchg
pop
gs
cmp
stos
xchg
jo
enter
lret
pop
mov
jg
xor
stos
or
lea
sti
mov
mov
jmp
gs
mov
xchg
test
addr16
cmpb
lgs
mov
mov
ror
popf
js
dec
lods
imul
mov
sarb
int3
sub
mov
into
mov
push
sub
mov
stos
cmp
ret
jge
jne
jb
jle
dec
mov
push
and
imul
das
xlat
cs
sub
xchg
sbb
jno,pn
xor
fwait
pop
sbb
push
sbb
test
cmp
ja
xchg
jl
pop
pop
xchg
add
sarl
fs
pop
sbb
push
jecxz
ja
int
and
sub
jp
mov
call
mov
cwtl
lock
lcall
jbe
add
cmp
ljmp
inc
and
sub
xchg
sbb
push
dec
ficomps
sysret
or
inc
pushf
xchg
fidivrl
out
mov
call
data16
cli
ret
mov
jo
xor
mov
pop
xchg
fcoms
inc
int
push
stc
out
into
and
ret
fwait
test
pshufw
mov
cmp
cmp
mov
cwtl
push
and
fidivs
pop
lea
add
aaa
adc
inc
repnz
push
cmp
xchg
mov
mov
aam
cmpsb
add
xchg
cwtl
jnp
inc
nop
mov
push
sbb
xor
insb
push
cwtl
inc
mov
insb
sbb
or
cmp
push
pop
out
push
jle
ds
out
bound
pusha
mov
ljmp
in
loopne
fidivs
fldcw
insb
lret
mov
jecxz
insb
and
and
mov
pop
ficomps
scas
aam
cmp
sbb
popa
xor
loopne
icebp
pop
add
sub
and
loope
dec
sub
cmp
xchg
mov
jg
pop
or
xor
jmp
in
add
adc
js
push
loope
xchg
cmpsl
imul
loop
lods
cmovo
daa
mov
push
pop
bound
cltd
fs
push
pusha
jle
ret
inc
fdivp
mov
xor
cmpsl
xchg
and
scas
addb
push
out
les
xchg
mov
push
mov
jns
push
lea
or
push
fnstcw
jg
hlt
mov
mov
or
push
xchg
aam
push
stc
stos
inc
testb
xorb
xchg
ss
fistl
mov
fnsetpm(287
int
xor
jno
fsubrl
xchg
jg
cmp
inc
or
bound
or
int
add
aaa
and
inc
int3
or
nop
cltd
lret
mov
repnz
scas
mov
or
sbb
push
inc
arpl
jecxz
cmc
push
out
xrelease
mov
in
outsb
in
loope
or
jecxz
push
out
lds
mov
sub
shll
imul
shl
fdivs
push
movsl
gs
add
cmp
pop
push
jle
popf
sub
aam
cmpsl
pop
mov
push
int3
fptan
xor
clc
pusha
stos
in
adc
push
mov
cmpsl
fiadds
mov
lcall
fiadds
mov
dec
icebp
push
roll
xchg
mov
xchg
mov
push
cmp
xchg
adc
call
je
rcrl
dec
negl
inc
dec
mov
popf
cmp
sahf
mov
pusha
dec
mov
push
loopne
cmc
dec
xchg
das
dec
mov
or
dec
jecxz
fdivl
mov
pop
push
cmp
xor
xor
pop
fstps
rcrl
imul
push
ret
hlt
out
and
add
jecxz
icebp
dec
fisttpll
daa
shl
and
mov
jl
call
js
ss
in
flds
cmc
sub
out
into
and
lret
das
pushf
andl
cs
dec
dec
ljmp
sbb
out
jbe
add
in
movsb
jge
and
inc
add
bound
fwait
mov
dec
adc
or
sub
fs
add
adcb
cmp
add
xchg
xor
mov
jmp
cmp
shrl
pop
jmp
cmp
cmp
jmp
popf
aam
inc
stos
stc
sbb
outsb
packssdw
or
dec
xchg
pushf
imul
xor
mov
divl
filds
pop
and
pop
out
lret
or
imul
sub
sub
aam
jl
pop
ret
mov
jb
inc
and
push
push
movd
xlat
int
mov
or
dec
jo
das
mov
les
into
push
enter
and
sub
rolb
fstpt
cmp
sbbl
xlat
nop
mov
push
int3
mov
xchg
mov
mul
jg
xor
fnstcw
jp
les
sub
mov
fnsave
add
fists
xor
push
jg
dec
xchg
mov
jb
cmp
adc
xchg
loope
lods
cmpsl
pop
mov
clc
movsl
je
orb
xor
inc
mov
vpperm
orl
lcall
int
pop
daa
fists
dec
pop
jo
inc
add
dec
pop
jbe
fstp
mov
pop
or
scas
push
insb
loope
sahf
inc
pop
sahf
hlt
mov
push
test
mov
fbld
sub
push
nop
outsl
fwait
and
xchg
in
push
cltd
pop
decb
mov
and
cmp
fstpt
lahf
je
mov
push
inc
fwait
mov
daa
test
push
pop
sbb
mov
jns
das
mov
out
adc
inc
mov
outsl
jl
data16
andl
cli
lods
sbb
adc
pop
adc
or
cltd
and
aaa
in
dec
pop
cltd
out
xchg
cli
push
xchg
push
and
lods
cmp
and
push
xor
sub
add
jle
lods
in
stos
ljmp
pop
xlat
inc
inc
xchg
xchg
js
inc
push
mov
fistpl
cli
adc
mov
aaa
inc
mov
shll
test
addb
pop
adc
enter
mov
dec
sbb
fwait
xor
js
loopne
pop
imul
xor
dec
stos
pop
add
cmpl
xor
adc
dec
je
movsl
lock
stos
xor
pop
orl
lods
jecxz
les
mov
mov
outsb
pop
in
add
dec
cltd
cmp
rolb
arpl
inc
popa
lret
js
lea
jbe
sbb
xor
jno
cwtl
scas
push
dec
sbb
xor
inc
push
pop
push
xor
shrb
hlt
or
xchg
mov
mov
jne
xor
fisubrs
fiaddl
pusha
xor
adc
inc
dec
loopne
sbb
mov
mov
xor
mov
insl
dec
and
ja
push
push
lock
jecxz
vmaxss
mov
loopne
test
cmp
fisttps
cmc
mov
cltd
pushf
rcl
adc
jg
lret
imul
xor
fistpl
dec
inc
adc
rcrb
push
jb
addr16
lea
xchg
cmp
or
dec
sub
jbe
cmp
jo
xlat
pmulhw
xchg
add
pop
repnz
outsl
jo
hlt
inc
out
scas
insb
cmpsb
pop
sub
outsb
pop
pop
jo
xor
adc
mov
movsl
push
loopne
aaa
push
xchg
scas
push
mov
aaa
arpl
xor
arpl
fdivs
jb
push
fisubs
dec
loopne
jb
shrl
inc
repz
or
hlt
aad
ljmp
loop
push
cmp
outsb
cmp
cmc
fwait
add
loop
scas
loope
add
xchg
pop
xchg
add
lcall
xor
loop
mov
fadd
jge
pop
stos
xchg
cwtl
sub
fcoms
cltd
jnp
in
fwait
push
pop
dec
xor
push
cmc
test
mov
in
iret
cwtl
mov
jle
pop
cld
push
push
jne
arpl
mov
jae
sarl
sub
lock
popf
mov
adc
add
jle
std
fistpl
xor
arpl
ret
scas
push
lock
mov
jae
xchg
dec
insl
pop
lock
roll
add
cmp
and
xchg
mov
inc
hlt
xchg
push
sub
and
in
js
fstpl
pop
imul
imul
cli
fcompl
jns
sbb
mov
jmp
ret
push
cmpsl
xchg
dec
jbe
pop
addb
mov
loop
dec
cld
mov
mov
jmp
pop
shrl
inc
mov
loop
mov
mov
add
stc
dec
or
lock
pop
sub
popf
scas
adc
nop
das
imul
stos
inc
sbb
popf
rol
cli
dec
arpl
mov
jnp
hlt
or
adc
mov
cmp
jle
dec
sti
mov
xlat
shrb
in
jae
sbb
push
jo
add
lcall
shrb
push
adc
sub
leave
fwait
xor
mov
inc
and
sahf
test
mov
leave
ds
lcall
imul
in
xchg
mov
add
in
lcall
inc
xchg
shll
inc
and
cmp
push
or
test
xchg
test
fcoms
popf
mov
pushf
mov
mov
dec
es
cltd
dec
xchg
popf
das
cmc
jae
icebp
adcl
ret
mov
push
or
xchg
scas
xchg
shr
and
popa
push
call
adc
lock
adc
mov
leave
pushf
ret
mov
push
cmp
into
push
and
outsl
in
rclb
jp
mov
sarl
aas
pop
mov
mov
leave
xchg
cmp
sub
into
mov
xchg
lds
cmpsb
push
lret
push
ret
xor
cmpsb
out
xchg
add
out
dec
into
xchg
cmp
inc
je
jno
jmp
inc
inc
jmp
subb
cld
pop
mov
or
add
ret
dec
or
stos
mov
into
scas
pop
movb
jmp
sub
fdivrs
inc
and
out
les
sbb
inc
test
jge
jle
push
inc
fwait
jle
in
or
clc
xchg
or
xchg
es
jb
or
ja
jg
push
dec
mov
ret
cmp
arpl
adc
pop
adc
sub
pop
fwait
xchg
cwtl
cmp
jmp
inc
pop
bound
test
jp
das
outsb
filds
fld
stos
ljmp
or
inc
movsb
lea
xchg
dec
lods
add
mov
scas
mov
mov
iret
dec
lods
in
mov
pop
aaa
sbb
mov
xchg
pop
xrelease
fiadds
and
xor
mov
ret
add
gs
push
and
insl
jp
xor
or
mov
jge
inc
xor
cmp
jecxz
add
or
xchg
push
sti
cmpsl
lret
xor
outsb
jne
repz
pushw
inc
pop
scas
ficomps
mov
xlat
test
mov
iret
pop
inc
cmpsb
xor
inc
xor
pushf
les
pop
psubsw
or
fsubrs
ret
cs
call
icebp
iret
fstl
insb
cmpsb
jae
pushf
subl
notl
pop
add
pop
dec
add
jecxz
pop
mov
jae,pt
dec
cmpsb
pushl
jns
mov
call
dec
pop
inc
mov
es
mov
mov
and
xor
mov
stos
fistl
movb
pop
sub
push
fistpl
fsubp
lret
jle
popa
decl
out
xchg
add
xor
dec
pop
xchg
lods
mov
cmp
repnz
and
test
push
and
test
cmp
lods
cmpsl
lock
adc
into
mov
mov
jmp
pusha
fdivs
insb
pop
add
mov
and
out
push
inc
ret
or
jl
and
fdivp
xchg
push
outsb
nop
enter
xor
nopl
pop
and
pop
adc
xor
xchg
and
xchg
jle
pushf
outsl
in
fistps
movsb
jg
push
pushf
mov
adc
dec
add
std
pop
xor
insb
cmp
jnp
mov
pop
fcoml
push
leave
aaa
push
jno
cmc
push
or
and
add
jmp
leave
mov
jnp
fdivrs
and
mov
sub
ret
push
enter
popf
jbe
jae
fisubrl
aam
xchg
and
dec
loope
cmp
rorb
pop
dec
imul
mov
and
jg
sbb
pushf
sbb
sbb
fsubp
sub
adc
xor
daa
cmpsb
cs
jge
dec
stos
out
pmullw
push
sub
pop
xchg
pop
andl
adc
mov
scas
dec
or
push
ret
inc
bound
jnp
xchg
movsb
push
arpl
scas
sub
mov
cs
scas
mov
cwtl
cmpsb
hlt
fstpl
mov
insb
repz
mov
shl
mov
std
push
stos
stos
dec
fwait
mov
pusha
popf
lea
rcll
pop
aas
cmp
lret
sbb
in
mov
mov
verr
sub
repnz
movlps
fisttpll
outsb
mov
adc
xchg
cmp
sbb
imul
mov
xchg
inc
or
stos
sub
jg
jno
push
scas
inc
inc
jecxz
je
mov
adcb
das
pop
cmpsb
inc
add
out
sti
loop
xor
jle
ja
insl
sti
dec
mov
mov
in
clc
lcall
ficoml
fidivs
and
pop
movsl
mov
inc
push
mov
sub
jle
ret
pop
add
jmp
pop
pop
test
jne
xorl
or
cmpsb
lock
aaa
ficoml
int3
pop
gs
push
cmp
mov
jae
cmpb
cld
add
div
movswl
xor
mov
jge
jle
mov
push
cmp
cli
lea
cmp
movsl
popf
dec
into
adc
lret
sbbb
scas
jno
lds
inc
in
ficoml
in
sahf
add
push
leave
in
push
jmp
sbb
adc
stc
xchg
push
jne
in
out
sbb
mov
and
call
jle
mov
mov
cwtl
insb
sbb
xchg
cmp
dec
sarb
mov
mov
dec
decb
mov
fidivs
loope
test
mov
xchg
dec
cmpl
xor
lods
xchg
mov
sbb
and
addr16
inc
inc
out
inc
jno
adc
int
shlb
daa
je
pop
and
or
punpckldq
jne
push
outsb
push
ret
mov
sub
add
rcrl
insl
cmp
lcall
push
jnp
and
inc
mov
inc
inc
lcall
fwait
jno
imul
iret
pop
pushf
jae
mov
fiaddl
int3
pop
pop
push
pop
int3
or
stos
inc
nop
dec
push
and
dec
cwtl
nop
inc
popf
popf
into
add
jno
inc
cmpsb
lcall
lret
arpl
jl
jmp
imul
dec
add
pusha
daa
and
pop
sti
or
xor
mov
or
xchg
in
jne
in
jae
mov
mov
pop
test
je
lods
dec
adc
mov
mov
push
push
outsl
jle
inc
push
popa
pop
inc
inc
sub
arpl
push
inc
fistpl
daa
nop
inc
mov
pop
fisubrl
cmpl
icebp
adc
ret
and
shr
pop
lahf
flds
dec
mov
mov
sub
fdivp
aas
ret
push
sbb
popf
incb
dec
mov
inc
mov
insb
sbb
pop
xor
and
sahf
std
inc
stos
or
xor
sbb
ret
scas
dec
and
bound
mov
add
xchg
mov
inc
xchg
mov
pop
pop
movsl
adc
adc
movsl
add
mov
fildll
cltd
pop
stos
jo
fwait
pop
dec
or
popf
mov
insl
je
or
mov
js
xchg
aas
pop
jns
or
pop
cmpsb
or
and
xchg
or
push
xchg
mov
pop
add
mov
pop
imul
pop
outsb
out
jle
cmpsb
or
push
movsl
push
pop
mov
adc
mov
xchg
cwtl
iret
ficoms
iret
loop
sub
popf
sahf
inc
jp
or
xchg
insl
ficomps
loopne
dec
fisubrl
mov
xchg
push
jmp
repz
xchg
sub
shrb
push
jge
mov
pop
sbb
mov
mov
je
ds
lahf
mov
sti
cli
in
popf
out
aad
xor
insl
sub
mov
stos
lret
jge
fisttpl
xor
and
aam
or
xchg
adc
mov
push
dec
cmp
scas
and
fildl
dec
lock
ljmp
push
gs
movsl
ret
cmpsb
js
pop
sbb
incl
xchg
sub
xchg
pop
or
jmp
adc
pop
or
jecxz
stos
cmp
mov
push
sbb
and
daa
imul
xchg
inc
push
cltd
lret
and
addl
cmp
jb
push
int3
pushf
or
inc
or
xor
fadds
outsl
mov
sbb
je
out
jp
mov
mov
dec
mov
lock
ja
push
xchg
fdivs
mov
fldl
subb
jnp
sub
in
mov
jp
mov
push
lods
pop
scas
fnstsw
leave
sub
xlat
mov
xchg
pop
test
pushf
ja
in
xchg
xor
push
cmp
mov
scas
add
pop
mov
shlb
mov
into
mov
scas
hlt
dec
insb
xor
rorl
ljmp
sbb
cmp
cltd
sbb
adc
pop
push
adc
std
adc
and
xchg
jmp
jae
push
push
inc
sub
cs
movsb
pushf
dec
pop
sub
sbb
int
cmp
cmc
mov
inc
add
mov
xchg
lret
and
stc
jae
je
pop
daa
loope
or
hlt
into
mov
imul
rcrb
add
push
lret
loope
pop
pop
mov
add
mov
lock
inc
lret
lcall
mov
jmp
cltd
lock
sbb
or
dec
fsubl
out
cmpsb
imulb
mov
cmpsb
flds
and
inc
repz
push
push
xchg
adc
sbb
fmull
push
xchg
mov
sub
mov
pop
test
pop
call
mov
popf
ret
or
aam
dec
shll
and
jmp
and
jne
mov
inc
xchg
push
ss
xchg
fst
loopne
jmp
lret
mov
dec
dec
lea
jae
xchg
mov
bound
jg
add
mov
jnp
adc
mov
mov
movsl
inc
fsubrs
or
mov
mov
xor
add
fcoml
leave
or
es
imul
pop
dec
and
xchg
das
jecxz
pop
or
xchg
jg
lret
ret
jl
mov
and
sbb
stc
mov
movsb
repnz
subb
inc
ja
lcall
push
insb
mov
lock
mov
fldcw
fstps
fnstcw
pop
es
in
push
pop
xor
pushf
test
mov
out
add
mov
adc
adc
dec
iret
repz
leave
enter
cmp
sbb
cmp
push
add
inc
mov
leave
dec
cmp
push
repnz
test
inc
frstor
in
and
mov
scas
mov
jmp
and
aas
mov
inc
xchg
cld
outsl
movsb
xor
mov
rcl
lock
or
fcoml
lret
in
mov
mov
int3
pop
pop
sbb
mov
push
insl
adc
test
outsl
icebp
cld
icebp
dec
xchg
ret
sbb
mov
inc
adc
pop
cmpb
xchg
shlb
xchg
icebp
xchg
xor
xchg
js
in
in
lds
aas
add
scas
lcall
cltd
pop
sub
cmp
ret
comiss
nop
push
notb
fcoms
mov
xor
jg
xor
in
add
pop
ljmp
fdiv
xchg
test
xchg
std
imul
ret
inc
pop
dec
fldenv
outsb
jb
jp
and
adcb
mov
scas
dec
sahf
jmp
loop
clc
mov
shl
mov
cmp
daa
jnp
push
mov
enter
aaa
or
push
imul
pop
and
xchg
out
push
lret
insl
and
cmpsl
jns
mov
inc
mov
roll
cmpsb
mov
cmpsb
mov
inc
int
iret
and
mov
cmp
or
ror
cmp
mov
jge
cmp
hlt
mov
dec
outsb
add
aam
pop
mov
mov
mov
mov
pop
cwtl
and
jns
push
xchg
pop
je
mov
dec
ret
pop
bound
into
cltd
fs
nop
imul
lea
mov
xor
inc
mov
pushf
xchg
push
jno
fdiv
add
pop
mov
scas
mov
mov
sub
adc
jae
and
or
fcomps
outsb
push
jl
out
cmp
mov
outsb
fcomps
cmp
add
cltd
inc
out
leave
loopne
jge
fmulp
xchg
push
int
arpl
stos
pop
and
inc
lret
adcb
sub
dec
xor
adc
and
cwtl
mov
or
mov
sbb
xor
daa
sahf
in
fstpt
loop
and
int
and
popf
pop
inc
mov
cld
sub
pop
out
mov
xchg
rcrl
or
cmp
mov
xchg
jbe
roll
and
cmpsl
and
xchg
nop
or
xlat
fs
stc
xchg
mov
arpl
popa
and
push
mov
jg
adc
mov
xchg
addl
or
int3
mov
push
adc
test
ret
movsb
inc
stc
orb
cmp
enter
test
pop
xor
leave
dec
pop
or
cmp
sbb
pop
jmp
jmp
or
jle
sahf
fadds
cld
in
xlat
rcll
sbb
jne
mov
pop
inc
xor
xchg
mov
sbb
xor
or
dec
xchg
adc
fnstsw
in
aam
sti
mov
in
and
lods
popl
in
inc
mov
xchg
stos
adc
scas
outsl
lret
push
sarl
dec
ret
lret
aad
aad
scas
sarb
loope
add
add
lea
pop
scas
jns
mov
std
jl
xchg
sub
sbbl
dec
push
lods
rcrb
add
push
add
inc
sbb
addr16
adc
lea
pop
ret
dec
nop
jp
lcall
pop
dec
test
dec
testb
or
dec
call
lea
idivl
arpl
adc
xchg
fisttpll
mov
out
outsb
mov
xchg
xchg
jno
rcrb
ss
cwtl
jle
stos
jns,pt
sub
aam
push
sub
popa
mov
es
or
pop
outsb
loopne
xor
js
dec
out
mov
out
imul
xchg
outsb
enter
push
pop
gs
repnz
into
mov
insl
lods
cmp
enter
adc
sbb
sbb
xrelease
and
mov
insl
jnp
push
in
adc
sar
loope
sbb
gs
cmpsb
pop
outsb
mov
fstpt
mov
cmp
mov
push
adc
fidivrl
xor
rorl
jae
mov
mov
inc
cwtl
adc
sub
inc
push
sub
mov
jno
sub
sbb
fwait
js
pop
sub
jae
mov
addr16
dec
imul
stos
cmp
daa
sbb
jle
hlt
push
rcll
ret
ret
outsb
adc
mov
mov
js
mov
sub
mov
loope
and
push
xor
aas
ret
mov
aas
push
scas
cwtl
je
loop
stc
sbb
sahf
push
scas
sub
inc
jae
loop
cmp
hlt
push
or
cmp
inc
fucomi
and
or
mov
into
cwtl
hlt
xchg
jp
lcall
fldt
xchg
cmpsl
sub
sbbl
aas
jp
sbb
pop
out
jne
mulb
lods
int3
cmpl
test
sub
nop
add
dec
outsl
lods
lea
push
xor
push
jp
gs
inc
cmpsb
pop
je
loop
cmp
sbb
arpl
iret
movsb
jg
push
push
xor
mov
adc
pop
xchg
xchg
pop
scas
mov
out
cmp
nop
sahf
test
in
inc
ja
rolb
outsb
xor
mov
xor
pop
or
cmp
adc
cld
mov
aas
gs
adc
into
and
pop
xchg
jae
adc
mov
push
out
or
xchg
sahf
xchg
in
pop
out
inc
dec
or
mov
pop
fsubrl
sbb
adc
mov
push
ljmp
mov
cld
cli
lret
dec
inc
jae
sbb
out
sbb
out
movsl
xor
repz
or
sub
add
xchg
pushf
mov
adc
cld
xchg
fdivrp
out
fnstenv
out
testl
jns
hlt
xlat
fs
inc
fwait
jle
jo
mov
mov
and
iret
dec
pop
cs
dec
xchg
jmp
inc
sbb
mov
shl
dec
mov
xchg
fldcw
or
fidivrl
lds
or
sub
pop
lea
dec
cwtl
jno
sti
fs
insl
jp
fwait
outsb
cmp
out
lahf
jbe
push
rolb
mov
jecxz
push
push
dec
pop
push
sub
and
out
push
mov
pusha
insb
outsb
jecxz
mov
lahf
aaa
cwtl
mov
aaa
pop
sahf
dec
jp
dec
jmp
aam
or
adc
mov
ds
fldt
ret
call
pop
xchg
xchg
sub
xchg
mov
rolb
add
fsubp
xchg
mov
pop
cmp
test
or
sub
fstpt
lds
test
scas
cli
cld
fsubrl
jae
inc
sub
scas
xchg
xor
push
fdivr
das
fucomip
fst
ret
iret
push
sahf
sarl
push
and
jecxz
push
rcr
mov
pusha
cmp
cmp
pushf
cmp
ds
aas
mov
sbb
sub
add
inc
cltd
sti
stos
loope
pop
repz
stc
sub
fistpl
popf
out
cmpsb
jnp
sarb
lahf
jge
adc
out
cltd
aas
push
mov
imul
pushf
push
dec
stos
mov
lods
xor
xchg
adc
aam
nop
inc
mov
pop
mov
sub
cmp
mov
out
push
push
sbb
adc
gs
and
jmp
aad
imul
es
or
mov
out
mov
add
lcall
leave
cwtl
adc
inc
sti
fstpt
push
jge
mov
aad
ret
or
in
ljmp
or
add
movsb
rorb
sbb
cwtl
jne
leave
adc
push
repz
sarl
mov
repz
jp
lret
or
lret
jg
lcall
cmp
sbb
lahf
fistpll
cwtl
add
xor
icebp
cld
bound
dec
inc
jno
pop
int3
mov
ret
jne
mov
lods
aas
mov
ret
xchg
dec
mov
sbb
aam
adc
push
ret
imul
add
outsl
sub
mov
ret
jecxz
aad
push
les
xchg
mov
fs
ficompl
pop
rol
cmpsb
dec
pop
or
fcomip
shrb
add
arpl
inc
mov
mov
out
mov
cmp
lds
mov
stos
clc
das
sahf
xor
repz
out
add
push
mov
lock
iret
pop
pop
cld
push
imul
dec
repz
fadds
ret
adc
stos
pop
rclb
add
dec
rorl
dec
or
movsb
mov
mov
test
mov
into
adc
sub
subl
push
and
add
out
adcl
mov
add
pushf
dec
nop
xor
dec
cmp
jno
xchg
xchg
or
mov
and
fwait
push
or
mov
popf
mov
outsl
push
and
mov
repz
icebp
leave
imul
mov
arpl
fistl
iret
insb
repz
add
insb
daa
jp
subb
sbb
rcrl
xchg
xor
lret
jp
stos
ret
sbb
push
mov
inc
call
lret
mov
in
in
lds
jp
and
out
psrlw
add
cmp
pop
enter
scas
fldt
fcomp
das
pushf
clc
push
lock
inc
testl
jno
aaa
pop
mov
in
or
add
add
ret
xchg
test
repnz
xchg
and
jge
inc
add
pushf
lret
fdivr
out
insl
sub
mov
mov
aaa
xlat
jnp
mov
js
fs
cmp
xor
pop
jge
test
mov
rorb
shll
cmp
add
adc
xchg
sbb
push
lahf
daa
xchg
mov
dec
decl
xchg
xchg
iret
and
lahf
pop
or
out
out
cwtl
in
lods
nop
mov
leave
xchg
aaa
icebp
fsts
xchg
sbb
mov
jle
addr16
mov
push
jle
sbb
xor
lret
jle
mov
inc
out
fwait
leave
mov
mov
sbb
pop
and
jnp
inc
out
es
xor
repnz
dec
leave
jge
popf
out
mov
out
inc
or
stc
rolb
cltd
inc
or
jbe
adc
pop
inc
or
sahf
or
sbb
mov
shrb
jo
das
test
mov
add
or
loopne
scas
lods
cli
mov
push
push
mov
xchg
xchg
and
mov
je
or
inc
jmp
mov
pop
iret
ljmp
push
cmp
cwtl
push
xor
mov
jge
insb
jo
sbb
or
jmp
dec
xchg
pushf
sbb
add
or
or
dec
xchg
inc
xchg
sbb
in
aad
jl
mov
mov
jg
inc
inc
pop
sub
pop
hlt
idivb
mov
lods
out
inc
int3
pop
pop
xchg
xlat
or
adc
push
add
push
popf
dec
jge
fistpl
mov
rcrb
std
xor
fidivl
mov
es
imul
cmp
imul
or
mov
repz
dec
bound
pusha
stos
mov
xor
mov
test
inc
stc
push
mov
jno
push
mov
add
mov
js
push
jno
scas
mov
pop
stos
testb
gs
jae
cmp
adc
adc
gs
xor
nop
loope
lds
addr16
inc
out
scas
pop
adc
push
in
mov
dec
lcall
stos
pop
repz
sbb
adc
xchg
mov
mov
lock
mov
stos
rorl
nop
sbb
fwait
add
shl
lret
jp
jnp
add
add
add
arpl
out
popf
cmc
mov
jl
pusha
sbb
je
or
lds
add
ret
add
sti
test
dec
movsl
and
xor
sar
xchg
cmp
imul
adc
ljmp
xor
bound
inc
push
outsb
iret
jle
cmp
pop
pop
sbb
scas
out
les
sub
mov
outsb
das
aad
sub
add
xor
cmp
inc
inc
jnp
ret
icebp
or
and
xor
mov
aaa
pop
cmp
push
inc
xlat
xchg
ret
cmp
sbb
bswap
insb
leave
popa
fistpl
sarb
push
arpl
out
fsubp
push
dec
fsubrl
fs
or
sub
xchg
xchg
mov
js
or
addr16
js
jo
into
pop
mov
ds
call
cmp
mov
and
int
push
sbb
nop
mov
jl
jg
sub
mov
out
push
push
cmp
idivb
shll
aas
add
clc
xchg
inc
leave
in
mov
mov
orb
push
in
mov
inc
scas
jns
jne
xlat
popa
add
dec
pop
pop
jnp
and
xor
adc
cli
std
jp
mov
test
cmp
push
and
push
sub
movsb
mov
in
mov
int
mov
mov
mov
jmp
cwtl
pushf
inc
loope
mov
push
shlb
gs
out
jge
aad
jbe
inc
pop
subl
inc
lahf
mov
jns
cli
iret
js
fs
sbb
xchg
mov
daa
or
cwtl
in
cltd
cmp
add
xor
test
sub
and
pop
enter
dec
or
push
dec
cmp
or
cmp
into
cmp
jbe
ja
lea
lods
jg
cs
mov
popa
fdivrl
in
jle
jnp
mov
jb
cmp
jg
xlat
adc
movsb
mov
mov
test
stos
pop
sbb
jmp
insl
iret
shll
mov
add
add
mov
or
lcall
popf
adc
rcrl
adc
inc
sub
popf
lds
mov
pusha
and
ret
fsub
enter
movsb
adc
popa
aaa
sarb
scas
push
dec
adc
cmpsl
mov
mov
push
and
and
shrb
faddl
insb
dec
cmp
in
aaa
sbb
push
push
mov
fdivs
scas
lods
dec
fucomip
push
jnp
shll
add
jecxz
mov
pop
dec
cmp
sub
aas
fs
add
out
lcall
pop
clc
sub
xchg
shrl
ljmp
xor
jp
adc
pop
push
fstps
jecxz
mov
sbb
and
push
push
out
and
mov
hlt
mov
or
insb
into
adc
mov
pop
inc
jl
inc
sbb
adc
movsb
mov
addps
mov
push
mov
popf
mov
or
dec
mov
xchg
aad
faddl
orb
test
scas
lret
mov
in
shll
int
pushf
pop
pop
xchg
push
pop
jge
sub
jbe
hlt
subl
jmp
pop
pop
imul
sahf
cmp
testb
mov
cltd
outsb
and
test
int3
lods
pop
xor
jmp
push
and
stc
in
jmp
jne
ret
js
pop
fcoms
in
fistpl
and
pop
mov
sbb
mov
and
jb
jo
icebp
dec
fcmovnu
movsb
xor
push
dec
jle
cmpsl
pushf
imul
add
mov
mov
fcompl
scas
insl
mov
shlb
xchg
fdivrs
pop
popf
push
mov
fcomps
xchg
aaa
jbe
jnp
sub
push
lds
mov
xchg
mov
xchg
xor
pop
cmc
jp
push
jb
inc
in
jae
popf
or
in
push
mov
dec
or
enter
jns
enter
loope
cmpsb
shl
jl
xor
mov
testl
cltd
xchg
lock
mov
inc
daa
mov
xlat
test
dec
sbb
xchg
rol
sahf
push
lret
clc
sub
rolb
pop
scas
mov
rorl
xchg
xchg
inc
sbb
push
movsb
js
ret
mov
mov
adc
cmp
stos
inc
les
pushf
xor
cmp
mov
popf
xor
stos
xchg
xchg
mov
xlat
push
cmpsb
fcmove
xchg
sub
test
push
popf
negl
push
lds
cltd
xchg
xor
or
sarb
cltd
popf
push
mov
mov
sbb
call
scas
test
push
rclb
test
sbb
mov
clc
jo
inc
pop
sbb
jb
sahf
mov
nop
pop
mov
cld
ficoms
jp
inc
out
push
js
xorl
pop
addr16
std
jo
pop
sub
sbb
adc
rcll
xor
pop
cmpsb
test
cmp
mov
scas
test
dec
push
scas
lahf
jg
cld
mov
imul
repz
add
pop
mov
ret
push
and
mov
push
out
out
stos
mov
es
test
iret
cmp
or
fistpll
cmp
fnsave
cmpsb
lcall
inc
inc
inc
mov
aad
push
fstpt
and
cmp
inc
sbb
mov
movsl
mov
aad
and
imul
inc
mov
add
jge
inc
mov
pop
pop
mov
out
adc
dec
clc
ret
movsb
stos
mov
out
jns
popf
xlat
outsl
in
stc
push
mov
lcall
scas
mov
or
sub
pop
mov
sub
pop
pusha
leave
push
mov
repnz
fdivrl
jae
out
xor
mov
call
pop
aam
xchg
aaa
add
jl
insb
cmp
decl
rcr
jno
leave
jne
xchg
jmp
dec
mov
cmp
sbb
iret
nop
mov
scas
lock
nop
mov
add
ret
add
dec
xlat
xor
push
sub
dec
call
xchg
add
pop
cmp
sbb
movsb
mov
xchg
cmpsb
jmp
arpl
lcall
shlb
mov
dec
lcall
dec
cmp
pop
jl
dec
imul
aas
sbb
add
xchg
adc
add
mov
stc
push
popa
pop
dec
sub
out
test
jo
dec
pop
jmp
mov
bound
in
mov
mov
daa
pop
xchg
adc
mov
mov
xor
mov
call
xor
dec
mov
out
xchg
inc
scas
and
ret
sub
call
jg
nop
pop
xchg
nop
rclb
fcompl
sti
cli
lahf
mov
das
xchg
xor
lods
mov
add
and
mov
ret
lock
lret
dec
cltd
or
inc
pop
cmpl
adc
add
mov
jge
mov
hlt
or
shr
mov
mov
pop
into
popf
fucomip
xchg
lcall
xlat
fdivr
out
rcrl
mov
mov
into
std
xchg
push
rcrb
lods
push
fstps
xchg
mov
xchg
push
clc
outsb
lea
testb
xchg
adc
jp
ret
push
in
sub
jns
lods
xchg
dec
or
outsl
xchg
mov
cmpsb
loop
dec
out
aam
repz
imul
rcl
nop
pop
pop
mov
pop
xchg
fisttps
fcoms
jmp
mov
scas
cld
in
pushf
shlb
mov
stos
jns
dec
jb
shlb
and
inc
nop
push
ret
je
imul
add
popf
push
lcall
movsl
mov
enter
mov
fidivrl
xor
in
fisttpl
mov
or
push
test
popf
pop
int3
cld
iret
ret
lds
mov
xchg
xchg
push
push
mov
int3
jle
lret
push
jno
imul
sub
cs
aad
dec
xor
jo
push
jecxz
xchg
rcr
mov
push
jns
or
push
in
xchg
int
orb
popa
popf
push
mov
dec
movsl
sbbl
xor
jb
jl
je
sarl
rcr
adcl
test
pop
daa
roll
mov
and
daa
js
inc
mov
out
sub
cmpsl
xchg
push
lret
jne
push
call
pop
cmpsl
pop
jg
mov
imul
and
in
dec
aas
cmp
mov
ljmp
out
xchg
or
dec
add
or
or
push
fcmovne
cwtl
push
dec
pop
sbb
push
lahf
out
js
ja
pushf
jae
xchg
push
fdivl
ja
mov
test
mov
aam
pop
jp
or
cwtl
pop
popf
arpl
stos
push
lret
inc
lret
int3
pop
std
insb
dec
or
or
xchg
xchg
mov
xor
cmpsb
xor
outsb
xor
jbe
ja
xchg
xor
lock
and
gs
testb
out
iret
popa
or
iret
ss
iret
pop
or
aad
mov
jnp
aaa
mov
add
pop
test
jne
inc
mov
inc
mov
inc
lahf
lock
pushf
out
js
sub
sbb
insb
pop
mov
dec
addl
outsl
adc
popf
add
or
add
iret
pop
daa
imul
xchg
test
inc
aaa
jnp
fcomi
pop
std
cld
adc
push
fstpt
daa
xchg
outsb
fistl
aaa
inc
cmpsl
inc
stc
pop
out
mov
mov
insb
and
mov
mov
shrb
mov
xchg
je
popf
sub
push
pushf
test
jle
xchg
cmp
test
jge
cmpsb
ret
push
fdivrs
push
hlt
insb
mov
notb
clc
pop
fadd
lea
outsl
pop
fwait
mov
inc
and
popf
pop
test
pop
cwtl
jge
xchg
mov
cmp
inc
fwait
stos
adc
xor
xchg
rcrb
sub
fildll
jns
or
sbb
cmp
jecxz
cmpl
dec
and
jg
jb
clc
mov
jge
mov
xor
mov
out
push
loop
rcrl
push
pusha
jle
int
into
scas
jnp
sub
xor
imul
sub
pop
dec
adc
cwtl
loope
cltd
test
jno
jb
push
jle
jecxz
cs
popa
cmp
xor
setnp
mov
add
inc
adc
cwtl
fdivl
sbb
sbb
pop
mov
aad
fcomps
lahf
cmpsl
push
or
xchg
pop
fcoms
fldenv
sahf
out
pop
and
les
mov
pop
jge
int3
mov
imul
sub
mov
cmp
push
and
ret
mov
jecxz
jp
mov
sbb
push
nop
mov
adc
xchg
addr16
test
mov
xor
jp
ds
xchg
lret
dec
ficompl
cmpb
fstp
ret
stos
loopne
or
out
sbb
mov
and
cmp
loope
insl
rolb
les
mov
dec
sbb
addl
fucomip
sub
push
outsb
ret
xor
mov
out
cmp
xchg
jp
lock
mov
sbb
mov
jmp
dec
push
fcomp
pop
xorb
les
push
sahf
pop
jmp
jo
psubsw
aaa
jne
nop
or
aam
xchg
repnz
nop
out
inc
sbb
jbe
insb
jg
cmpsl
sbb
shl
mov
pusha
push
loope
xor
adc
adc
and
inc
loopne
xor
adc
into
xor
je
cmp
adc
aas
test
fdivrs
ja
stos
inc
movsb
aad
shr
aaa
arpl
xchg
jne
call
pop
lcall
lahf
or
push
aad
push
inc
fcmovne
or
mov
jbe
rcl
out
scas
cwtl
xchg
jnp
fwait
pop
jbe
pop
jae
in
hlt
push
jl
cmp
mov
jb,pn
add
rclb
add
cli
push
mov
sub
int
xchg
xchg
adc
in
test
rorl
xchg
es
jmp
inc
jge
xchg
les
dec
jns
adc
jnp
pop
sub
fldenv
out
mov
lret
lea
rcrb
sbb
jns
popf
mov
xor
cwtl
mov
pop
mov
lea
fildl
mov
dec
adcl
ja
hlt
or
cmpsb
cmp
out
enter
dec
test
outsl
lods
frstor
push
mov
pop
nop
fstl
lock
icebp
fcomps
pop
movb
and
lret
push
add
fcomps
jl
push
pop
lea
push
js
dec
dec
mov
fcmovnb
dec
popf
xchg
nop
jne
addb
inc
cmp
fldt
push
and
pop
sbb
mov
push
flds
jg
iret
fdivrs
popf
pop
mov
fs
jg
cmp
mov
jnp
mov
in
test
aam
fcoml
js
decb
adc
pop
arpl
mov
dec
mov
aad
pop
pop
fcompl
inc
test
dec
xlat
orl
les
addb
mov
call
loope
mov
dec
iret
inc
pop
in
jp
cli
and
inc
pusha
pushf
push
jg
mov
xchg
push
jbe
in
pop
mov
push
scas
addr16
sbb
lds
add
pop
fildl
arpl
js
pop
ret
and
jne
push
movsb
xchg
pop
mov
mov
dec
scas
dec
xlat
adc
dec
clc
sbb
inc
rcl
leave
scas
fwait
push
fmuls
dec
addb
xchg
and
insb
scas
ret
lea
ljmp
ljmp
filds
and
ja
aad
mov
sub
mov
cltd
cwtl
cmpsl
outsb
aam
testl
and
push
xchg
sbb
fwait
lds
sbb
adc
lret
push
mov
pop
lds
popf
fs
mov
les
dec
test
xchg
ds
jge
rcrl
lret
fldt
pop
jle
loop
stos
les
push
jmp
adc
out
inc
cmp
fisubrl
out
pop
fisubl
movsl
aas
aam
xchg
or
fxam
int
adc
cmp
mov
fbstp
insl
add
fwait
dec
test
rcrb
rcrl
lret
into
mov
lcall
orb
rclb
dec
jmp
fwait
int3
add
push
sub
test
add
int
and
daa
jno
jl
pop
jp
lahf
xchg
pop
aam
mov
into
or
or
inc
pop
cmp
lea
pusha
and
imul
rcll
dec
sub
jg
sbb
rol
lcall
das
or
jno
bound
repnz
jmp
xchg
add
dec
insl
lock
mov
mov
pop
xor
cmp
mov
sahf
sub
and
stos
dec
aam
mov
jl
sarl
mov
sbb
dec
fistpl
jbe
mov
adc
arpl
notl
inc
movsl
or
cs
daa
scas
imul
inc
jecxz
push
cmp
cld
mov
sub
xor
jl
jge
and
or
in
fsts
jecxz
mov
pop
push
xchg
jno
orl
lock
add
push
pop
pop
sbb
jp
cld
adc
insl
fiadds
jno
push
mov
inc
cmp
xchg
pop
movsl
adc
cmp
sbb
push
or
mov
mov
jmp
mov
adc
xchg
cs
rorb
jmp
xrelease
iret
fs
mov
dec
or
add
mov
mov
daa
jo
mov
cli
pop
lahf
lret
movsb
lret
scas
dec
cld
sbb
mov
xchg
popf
lret
xchg
cmp
imul
sbb
jmp
fwait
and
jb
lret
lods
loopne
stos
sub
xorl
mov
push
xchg
add
pop
inc
lret
test
pushf
out
insb
ret
xor
call
gs
jae
fucomip
cmp
cmp
mov
sub
sahf
psrlw
mov
sbb
adc
test
test
adc
fcomip
in
dec
das
push
lret
les
push
lcall
into
xchg
jnp
xchg
or
loop
xlat
add
in
pop
mov
mov
pop
mov
mov
inc
and
push
in
cmpsl
mov
dec
lods
cmp
inc
sub
and
cmpsb
scas
imul
gs
fdivrs
mov
mov
adc
movsb
clc
jb
adc
jle
xor
mov
movsl
add
inc
aad
adc
imul
xchg
fs
insb
loope
es
sbb
dec
js
lock
inc
xchg
xor
aad
xchg
sbb
lret
push
dec
mov
jno
mov
lret
cmp
out
pop
rcrl
fwait
insl
into
cmp
lret
fdivl
push
xchg
xor
mov
ljmp
iret
mov
outsl
cli
jg
inc
sub
push
and
pop
pop
push
xchg
xchg
inc
repz
stc
push
add
xor
push
push
jns
dec
push
cli
xchg
xchg
adcl
jle
scas
mov
jb
mov
sbb
push
ja
bts
imul
mov
push
xor
fs
in
nop
insb
dec
adc
fwait
int
pop
xor
in
cwtl
das
add
mov
mov
icebp
mov
mov
cmp
out
inc
movsb
dec
sbb
sahf
clc
arpl
enter
lret
adc
pop
test
aaa
add
sbb
and
sbb
jmp
mov
push
mov
out
push
test
jbe
in
aam
dec
pushf
pop
mov
mov
jg
jg
sbb
add
popa
imul
fdivs
push
in
inc
lret
xchg
push
inc
mov
add
jns
pop
jge
push
add
fcmovb
adc
fwait
sub
loopne
mov
shll
jb
mov
enter
ret
mul
xchg
sarl
dec
cwtl
jecxz
movsl
xchg
mov
imul
pushf
add
mulb
loope
rep
jp
shrl
pop
and
fwait
xchg
cmp
ljmp
out
jge
in
addr16
adc
imul
loop
mov
xchg
mov
inc
mov
push
insl
jnp
pop
lock
mov
inc
stc
and
jecxz
lret
out
adc
add
fstl
mov
cmp
rcll
jle
out
sbbb
adcb
xor
insb
stc
add
or
xchg
jl
ret
sub
adc
mov
dec
mov
dec
pop
cmp
or
out
outsb
or
inc
dec
mov
sti
mov
sub
jbe
loope
adc
or
ja
dec
orl
xchg
sbb
xchg
sbb
bound
push
adc
or
scas
pop
cwtl
movsl
jnp
lcall
jle
push
mov
cltd
or
out
mov
ss
outsb
xchg
lcall
xchg
movsb
fstps
xchg
mov
ss
shrl
jne
mov
dec
inc
or
stos
jp
dec
test
jp
dec
sub
or
fildl
xor
mov
ljmp
xor
push
jo
mov
fstl
mov
out
test
aaa
int
loop
pop
ret
dec
imul
ja
push
lods
xchg
shlb
xor
jl
pop
pop
xchg
add
fwait
ret
xor
sbb
ljmp
mov
add
stc
lock
loop
jb
mov
xchg
dec
sub
mov
or
mov
mov
inc
rol
adc
sti
sbb
insl
les
dec
mov
sahf
jl
or
in
pop
pushl
mov
loope
imul
repnz
enter
inc
pop
inc
sub
jnp
repnz
pop
movhps
mov
pop
mov
mov
jnp
dec
out
es
mov
or
rorb
movsb
js
dec
cmp
dec
addr16
jp
loopne
inc
adc
mov
add
shrb
adc
push
sbb
scas
mov
shr
insb
and
mov
dec
adc
pop
jno
bound
outsb
lds
iret
pushl
out
jns
cmp
add
inc
mov
push
jb
sbbl
insl
pop
xchg
sub
inc
inc
adc
and
cmp
fistpl
scas
fsubr
xchg
sbb
xor
xor
mov
pusha
imul
and
ljmp
dec
jmp
ss
pop
mov
nop
cmp
shrl
aam
scas
daa
jno
fimuls
mov
inc
mov
popf
mulb
lock
jecxz
icebp
aaa
jne
jo
stos
vmovsd
adc
in
push
ja
call
fsubrl
sbb
ret
cli
aaa
xlat
test
xor
popa
out
addr16
insl
jae
xor
jbe
dec
cltd
punpckldq
adc
popa
imul
cwtl
or
or
fmull
and
imul
mov
loope
aaa
lea
mov
jne
push
and
insl
lods
insb
les
dec
mov
push
push
stos
stos
dec
cli
into
dec
outsl
push
cmc
orb
jg
cmp
mov
inc
andl
adc
and
mov
out
in
xor
sub
cmp
mov
in
and
xchg
jmp
dec
jo
jmp
sub
jo
das
inc
dec
in
push
sub
rcr
insb
addps
addb
subl
sub
cltd
xchg
addr16
mov
mov
sub
lock
les
xlat
push
pushf
jp
out
es
sbbl
test
mov
neg
or
lds
adc
pop
add
pop
xchg
add
xchg
decb
jl
xchg
cmp
xchg
sbb
rcll
fidivs
fs
or
pusha
cmp
jns
in
popf
outsb
push
imul
push
leave
int
call
leave
fsubrs
icebp
sub
shlb
jnp
lcall
sti
pop
ret
lahf
mov
jle
scas
cmp
call
mov
movsl
xchg
leave
push
js
fnstenv
ror
arpl
test
mov
mov
fimull
xor
cmpl
pop
mov
jge
jl
mov
mov
xor
xor
jg
or
dec
je
daa
pop
or
mov
xlat
add
gs
mov
xchg
aaa
and
shlb
dec
xorb
gs
dec
mov
push
inc
and
mov
mov
iret
fcompl
out
or
ss
into
test
out
loop
shrl
or
nop
xor
cmpsl
in
mov
sub
dec
insb
and
out
clc
fsubs
dec
outsb
rcrl
lods
scas
add
and
cli
push
pop
jae
xchg
mov
outsb
decl
inc
test
imul
call
or
test
mov
and
js
push
int3
mov
add
std
insl
mov
sub
inc
jp
js
nop
or
jp
test
and
add
mov
sbb
jg
lahf
ds
ja
push
stos
jg
call
addr16
jb
lods
jle
hlt
adc
mov
xchg
adc
fs
mov
jl
cwtl
mov
or
lock
jg
mov
in
add
stos
dec
xor
and
mov
mov
insb
inc
mov
pop
pop
pop
pop
lahf
add
add
mov
je
pop
or
add
aam
mov
fwait
ja
scas
pop
adc
and
push
iret
lods
call
cli
add
dec
xor
inc
fiadds
push
fnstcw
popf
or
xchg
shrb
inc
xor
stc
mov
cmp
xchg
adc
iret
test
xor
xor
inc
adc
and
outsb
aad
stos
nop
add
addb
int3
add
push
sbb
das
inc
pop
decb
repz
lea
in
push
mov
lahf
jmp
or
ja
mov
adc
inc
adc
dec
jmp
sbb
fstpt
dec
add
fiadds
je
jl
xchg
xchg
movsb
fadds
rcrb
push
xchg
mov
addb
movsl
out
outsb
pushf
sbb
sub
inc
xchg
pop
in
mov
scas
pop
xchg
or
les
in
out
out
push
mov
xchg
sbb
fstpt
test
insl
insb
test
mov
pushf
adc
movsl
xchg
mov
dec
mov
cmpsl
insl
repz
cli
dec
pop
fdiv
or
outsl
xor
stos
inc
inc
idiv
jne
fs
outsb
sub
cmpsl
dec
lds
sbb
sahf
dec
mov
fwait
inc
dec
xchg
movsb
xchg
mov
sub
loop
mov
push
inc
in
pop
add
into
lods
jne
enter
ret
mov
pop
cld
ja
mov
sub
cmp
xchg
jl
stos
insb
and
into
jno
aas
jmp
lods
jno
lretw
sub
jp
adc
mov
sbb
mov
sbb
or
sub
push
push
push
add
lds
xchg
or
in
fs
dec
adc
test
movsb
inc
sbb
xchg
and
movsl
xlat
jae
or
xor
xchg
jmp
decb
hlt
xchg
inc
ret
test
sbb
bound
dec
ret
lcall
or
je
test
cwtl
cmp
aas
jns
jae
xchg
jns
and
dec
and
pusha
in
push
leave
xor
xor
adc
into
jmp
movsl
add
jns
inc
mov
scas
imul
mov
daa
out
xor
adc
or
data16
adc
add
inc
mov
pop
test
jne
jl
lds
cmp
out
out
out
or
enter
add
and
mov
xor
dec
xchg
inc
in
rorb
jle
ss
outsl
or
xchg
lock
aam
mov
lcall
mov
movb
pshufw
xor
xor
pushf
inc
jnp
sbb
or
shl
xchg
jecxz
idivb
mov
mov
jecxz
pop
popa
cmp
fldl
out
mov
mov
xchg
jnp
jo
push
rcll
icebp
icebp
cmp
addr16
pop
popa
stc
pop
xchg
xor
lods
dec
iret
insl
popa
out
jb
sbb
mov
jno
mov
lcall
mov
jne
dec
xor
sub
sub
jge
ds
insl
jle
jno
fsubr
cmpl
addr16
pop
jnp
lcall
ljmp
lea
push
jl
sub
and
inc
loopne
nop
test
mov
ljmp
std
aad
push
fisttpl
pop
mov
addr16
insl
cmp
pushf
and
lret
jle
sub
roll
dec
xor
ffreep
cld
mov
stc
inc
fsts
mov
dec
mov
push
lcall
dec
xor
xchg
pushf
mov
out
adc
pop
adc
insb
inc
shl
shlb
jnp
inc
scas
not
int3
jno
int3
inc
sub
cs
dec
imulb
add
push
add
dec
bound
lea
cmpsl
out
xor
jne
inc
out
add
movsb
pop
ret
jmp
inc
push
in
sarl
shrb
sub
lahf
sbb
cmpsb
pop
fildll
ficoml
adc
faddl
cltd
push
pushf
daa
jnp
ficomps
cwtl
jbe
xorl
scas
lock
loop
clc
xor
xchg
adc
cmp
sub
aaa
les
xchg
sub
movsb
pop
movsl
xchg
pop
in
rcrl
out
lock
dec
inc
out
fwait
pushf
xor
adc
aaa
inc
pop
or
int3
xor
icebp
sbb
mov
lds
pusha
in
or
fiaddl
jle
mov
incl
push
jl
sarb
hlt
jmp
insl
insb
popf
cli
jno
mov
mov
adc
or
adc
lret
add
xchg
jg
rorb
test
ret
mov
aad
sub
jg
mov
lds
mov
fsubrp
pop
cmp
jmp
inc
ret
push
cld
cs
push
sbb
xchg
flds
mov
xchg
pop
inc
repnz
push
push
jg
jl
fsubrs
fdivr
sbb
lret
jle
imul
mov
mov
pop
or
dec
jp
mov
mov
iret
pop
xchg
xor
inc
pop
pop
push
dec
popa
ret
dec
jecxz
stos
jmp
mov
push
inc
ljmp
cmp
push
mov
fistl
adc
aaa
clc
std
mov
mov
xor
iret
je
daa
xchg
mov
scas
lcall
enter
andb
into
ret
decl
sbb
mov
xchg
and
stos
add
aaa
daa
js
ret
aam
jb
jp
stos
and
call
dec
add
ljmp
cli
pushf
pushl
in
sub
pop
dec
out
or
xor
roll
shrb
or
lock
in
ror
xchg
mov
aam
adc
je
popa
rcll
jg
call
test
inc
pushf
lret
push
ret
stc
push
std
adc
stos
mov
dec
js
fistps
pop
add
push
imull
test
cmp
out
or
mov
xchg
fadds
mov
sbb
pop
lret
sarb
fldcw
lods
or
mov
pop
adc
andb
adc
lret
sub
inc
jae
push
jnp
xor
lds
xor
inc
add
call
and
or
in
mov
int
pop
adc
fnsave
mov
or
sbb
add
les
pop
mov
xor
cli
iret
adc
lock
stc
je
je
jno
fwait
out
xlat
lods
sbbl
adc
mov
pop
incb
mov
inc
dec
insb
cmpsb
dec
fsubr
loopne
or
adc
shlb
mov
pop
mov
jmp
stos
mov
or
js
enter
outsl
into
shlb
pop
int3
lret
inc
fstl
push
ss
popf
out
fisubs
cltd
mov
cmpsb
inc
orb
or
loop
push
divl
jg
fimull
jle
dec
cmp
loope
jl
ret
mov
xchg
shr
sbb
fisttps
call
cmp
mov
into
mov
and
cli
fbld
out
inc
mov
lret
xchg
addr16
inc
mov
or
push
xor
adc
push
clc
lcall
dec
dec
mov
add
xchg
imull
movsb
xchg
cmp
inc
or
mov
and
xchg
stos
cwtl
pop
sbb
call
push
orb
dec
fwait
push
ss
cwtl
fcompl
add
imul
negl
jecxz
and
and
icebp
dec
rcr
ret
xor
sub
lock
xor
cmpsl
in
sbb
ficoml
jp
jno
lock
ret
inc
inc
inc
mov
adcb
out
add
test
call
fld1
add
dec
ret
dec
pop
mov
inc
push
cmp
outsl
mov
sub
std
mov
lock
std
popa
cmp
xchg
push
int3
add
lods
pop
mov
ret
pushf
cs
call
jne
mov
and
mov
dec
and
insb
cld
jno
dec
out
push
movsb
jns
xchg
stc
adc
or
test
lods
cs
repz
jmp
mov
in
jle
aaa
movsb
lods
jg
sbb
inc
pop
adc
ret
mov
inc
jbe
arpl
aas
sbb
jp
les
ffree
lods
call
dec
push
xchg
out
mov
xchg
fnsetpm(287
psubb
out
xchg
or
mov
sbb
xorl
mov
ds
lret
push
int
sbb
mov
pop
data16
pop
sub
movsb
mov
gs
mov
pop
test
idivl
into
movsl
mov
push
xchg
test
lods
arpl
out
sbb
jmp
xor
fbld
imul
cld
jb
fdivs
inc
adc
or
sbbb
mov
aam
je
push
mov
sbb
fimuls
mov
xchg
or
pop
mov
dec
lds
les
sbb
mov
dec
add
js
repz
jae
pusha
and
mov
pop
xor
int3
lcall
shrb
add
gs
into
scas
xchg
mov
testb
xchg
adc
or
pop
popf
scas
ja
sub
andl
mov
adc
xchg
jge
adc
xchg
repnz
mov
movsl
in
lods
cmp
cld
mov
mov
xor
adc
adc
mov
sub
mov
mov
xor
hlt
xor
mov
les
and
sti
insb
scas
xchg
push
dec
mov
push
xchg
imul
sub
pop
xor
cld
push
dec
ds
test
out
jmp
loop
add
cltd
movl
or
dec
shrb
pop
cmp
pop
movsl
dec
inc
mov
pop
xchg
inc
cmp
jne
sti
push
dec
mov
xchg
lret
and
cmp
in
fwait
cmc
inc
loopne
fcmove
or
insb
cltd
dec
mov
pop
aam
lods
xchg
cmp
repnz
mov
test
imul
stos
adc
cmc
xchg
movsb
xchg
sti
dec
cmp
push
sahf
pop
loop
je
add
dec
mov
inc
lahf
dec
divl
js
jmp
pop
adc
pop
jnp
lcall
pushf
pop
push
stos
in
shrb
mov
pop
add
mov
dec
popf
xchg
cmp
pop
xor
fildl
add
jno
movsl
and
fsubr
fdivs
jns
out
mov
pusha
lds
mov
cli
dec
stc
and
mov
loope
into
popf
and
cmp
and
cld
cli
and
and
dec
jle
imull
sahf
mov
add
iret
scas
aad
xlat
xchg
jb
or
push
inc
stos
int
in
cmpsb
sbb
fisubl
mov
jle
jp
mov
fistl
dec
adc
leave
shrl
jns
popa
dec
cmp
or
lret
xchg
pop
lock
rol
fbstp
scas
add
mov
mov
int
test
int
mov
pop
int
and
mov
mov
pop
xchg
mov
push
jle
jno
xor
popa
cmp
jb
insb
fcomps
shll
lods
dec
pop
mov
dec
or
mov
les
idiv
loopne
pop
and
sub
sbbl
add
xor
cmp
aaa
notl
push
jle
cmp
mov
clc
test
xor
cltd
gs
hlt
and
mov
sub
iret
es
imul
sbb
shll
orb
frstor
or
fnstsw
mov
test
aas
jnp
xor
dec
mov
mov
push
jbe
cmp
sub
and
dec
shl
push
aad
mov
js
mov
push
sti
adc
or
int3
lock
or
xchg
jne
icebp
jno
dec
andl
push
je
cmpsl
push
inc
sbb
dec
es
ffreep
orb
mov
push
outsb
pushl
push
sub
stos
push
adc
cltd
xor
pop
cwtl
push
fstpt
lret
xchg
push
jmp
outsl
insl
lret
fiaddl
lods
and
inc
dec
jge
jge
dec
add
xchg
push
push
xchg
js
push
pop
mov
add
movaps
mov
add
lahf
ret
xchg
inc
pop
dec
int3
repz
orl
sahf
jns
mov
std
out
ret
dec
pusha
ja
outsb
inc
movb
inc
popf
xchg
pop
outsb
mov
mov
inc
lods
xchg
cmp
mov
jnp
add
mov
sbb
scas
out
mov
or
push
imul
cs
cltd
cmp
iret
jns
negl
xchg
inc
and
pushf
repnz
mov
lcall
scas
xor
and
mov
mov
ret
inc
push
aad
cli
stos
out
mov
sub
pop
mov
fstenv
inc
push
xchg
add
cmpl
adc
js
repnz
inc
loopne
pop
mov
push
mov
lods
das
xchg
add
push
popf
stos
jns
faddp
push
xchg
fwait
nop
orl
sbb
push
mov
mov
jno
out
or
inc
iret
mov
or
push
jno
and
mov
lea
sub
aad
inc
imul
mov
into
stos
xchg
mov
pop
or
sub
jnp
adc
test
addr16
jae
mov
into
push
jbe
imul
cmp
push
xor
fcmove
add
xlat
das
fld
test
test
jo
std
in
push
sub
fnstsw
jae
out
xor
pop
ret
cmp
fmull
jecxz
imul
int3
push
das
pop
push
fadd
mov
lock
scas
test
arpl
pushf
mov
jp
inc
ror
lahf
add
ss
shl
aad
mov
sub
rorl
cmp
adc
jae
mov
sub
jle
push
jp
xor
sub
leave
out
mov
push
pushf
adc
sbb
sarb
jbe
inc
mov
call
xor
mov
ror
pop
lcall
jmp
or
xchg
scas
pop
les
stos
jmp
or
mov
popf
xor
pop
gs
sbb
cmp
mov
ret
call
cltd
jl
int3
push
dec
out
cmp
xor
fstpt
mov
fistps
mov
or
out
sub
test
in
loopne
es
add
sahf
fisttpll
xchg
sarb
orl
repz
mov
or
xlat
sub
xchg
mov
adc
jg
jns
cmp
out
mov
and
push
mov
add
data16
loope
xchg
out
sbbb
adc
incb
mov
mov
inc
xor
push
inc
xor
out
mov
bound
lods
std
xor
xchg
popf
or
push
dec
out
jp
fwait
add
cwtl
xchg
addr16
ret
sub
fistl
in
pop
sahf
lock
lret
xor
fisttpl
pop
jge
xchg
lcall
xchg
jb
xchg
sub
imul
pop
mov
cwtl
and
add
stc
scas
rcrl
sbb
and
neg
lea
imul
fwait
push
mul
ljmp
xlat
imul
mov
mov
sbb
cmpb
inc
sbb
loopne
in
out
orl
lock
or
mov
lock
divl
je
mov
loope
cmp
push
jnp
call
xchg
ljmp
pushf
insl
mov
mov
pushf
dec
test
mov
popl
divb
inc
out
push
inc
push
pop
pop
adc
mov
ljmp
lea
mov
push
enter
jae
pop
mov
subl
pop
push
jmp
sub
ds
dec
mov
ds
in
sti
pop
mov
andb
inc
test
xor
push
push
data16
nop
fistpl
cmp
nop
fsubl
scas
jmp
cltd
sub
mov
fmuls
pushl
and
ss
adc
inc
js
shll
arpl
inc
es
push
imul
xor
aas
in
lods
out
dec
or
cld
pop
scas
sub
mov
sahf
clc
adc
cmc
out
xor
je
mov
mov
pop
ljmp
outsb
mov
fstpt
aam
lods
ljmp
add
pop
add
or
ja
lahf
addr16
pop
cmc
inc
mov
stos
mov
test
push
xchg
cmp
inc
repnz
xchg
pusha
leave
xchg
ja
xor
fsubrl
mov
and
arpl
fisttps
cmc
adc
adcb
mov
popf
inc
lock
push
and
sti
adc
jbe
xor
lods
lcall
daa
mov
into
outsl
into
cmp
mov
mov
sbb
lret
push
mov
pop
pop
fwait
lods
pop
cmp
sbb
cmc
sarl
jae
es
cmp
mov
fwait
lcall
in
insb
dec
and
sahf
rcrb
nop
rcll
outsb
rcrb
sbb
mov
sub
out
scas
mov
mov
add
hlt
lds
and
pop
mov
push
cld
shlb
shl
cmc
push
xor
loope
test
sahf
adcl
out
hlt
enter
adc
sahf
xchg
pop
cltd
adc
mov
mov
insb
add
push
sbb
pop
out
loop
int3
xor
orb
mov
push
mov
inc
xchg
adc
xor
push
mov
ss
add
pusha
into
loope
sbb
out
call
add
mov
lea
pop
dec
pop
xchg
outsb
or
popf
mov
adc
imul
imul
ljmp
pushf
xor
js
gs
outsb
fmuls
insl
xor
lret
fwait
jbe
dec
inc
mov
imul
add
lret
fdivrs
mov
adcb
repz
fbstp
xor
xchg
fnstcw
outsb
mov
or
dec
mov
jne
loopne
adc
pop
pusha
rclb
xor
pop
mov
xchg
ficompl
pop
movsb
jbe
outsl
xor
daa
repz
jnp
mov
mov
pop
shlb
pop
mov
adcb
lock
and
inc
mov
add
lcall
sahf
repnz
mov
xchg
gs
dec
xor
xchg
stos
mov
pop
scas
and
int3
test
pop
inc
jns
fnsave
and
test
loopne
inc
adc
movsb
pop
or
lahf
ljmp
dec
xlat
mov
push
clc
lret
add
adc
mov
fcompl
addr16
stc
shlb
les
idivb
dec
or
inc
adc
outsl
pop
js
dec
adc
fsts
mov
icebp
insl
mov
mov
xchg
push
or
nop
bound
mov
outsb
mov
xchg
add
insl
mov
xor
xchg
dec
add
mov
mov
aas
jp
call
push
push
lret
lcall
pop
add
jae
xchg
imul
dec
cmc
xchg
cmp
pop
sbbl
push
xchg
pop
sbb
test
xchg
adc
inc
out
andl
repnz
xor
movsl
repz
sahf
xchg
fdivrl
loop
arpl
push
jecxz
loopne
cmp
xor
pop
xchg
push
int
cmpsl
outsb
sub
test
movsb
mov
aas
repnz
xchg
jno
loopne
push
lds
inc
rcrb
stc
sti
push
add
call
in
jp
inc
shrb
test
nop
rcrl
jp
add
sbb
enter
fisubrl
inc
jp
fsubl
and
xchg
pop
pop
jo
cmp
cs
pop
adc
adc
adc
js
lcall
and
adc
jecxz
je
mov
nop
sbb
test
cmp
sub
imul
aaa
stos
jns
and
mov
adc
xorb
icebp
loopne
cmp
sub
or
xchg
mov
sbb
or
shlb
adc
mov
mull
div
cmpsl
xchg
cmp
mov
icebp
dec
jg
faddl
jg
or
fadd
push
inc
test
xchg
jge
xchg
push
jle
push
nop
bound
and
lahf
dec
cmp
sbb
push
into
lret
ss
pop
shl
pop
fisubrs
cmp
leave
xchg
mov
out
out
psubq
dec
add
and
jbe
adc
mov
mov
adc
std
push
es
pop
lahf
lcall
xchg
movsb
fiaddl
out
pop
icebp
dec
aas
dec
pop
jae
jbe
outsl
lahf
sub
gs
sahf
jno
push
loop
adc
push
push
cld
cmp
call
into
mov
mov
pop
push
dec
push
rcrl
fwait
xchg
mov
dec
cld
aam
xlat
xor
movsl
rcrl
orl
lahf
scas
shll
jno
leave
out
jo
cltd
inc
ja
lahf
inc
cwtl
push
pop
lods
repz
push
jge
sub
imull
jmp
movsb
jb
adc
pop
popf
pop
push
into
bound
cmp
aas
jp
iret
test
fidivs
push
pop
push
pop
stos
jp
mov
adc
out
push
sbb
xchg
punpckldq
and
je
sahf
jmp
dec
jp
pop
dec
push
mov
aaa
mov
cwtl
mov
xchg
dec
adc
push
xchg
in
sub
enter
xchg
cltd
inc
mov
push
pop
popf
loop
lea
clc
dec
ss
pop
mov
aaa
mov
stos
nop
pop
les
cmp
jne
and
jb
fists
lock
mov
insl
stos
popf
jge
aaa
mov
nop
or
push
xchg
pop
xchg
leave
mov
stos
dec
adcl
adc
ljmp
add
cmp
in
test
push
push
cmp
js
dec
jae
mov
addr16
cmp
scas
out
push
pop
repz
idiv
popf
mov
fldcw
xchg
stos
fildl
pop
cmpsb
out
jbe
loop
ret
xchg
adc
jae
nop
lret
dec
in
pop
pop
mov
pushf
dec
mov
xchg
jecxz
cwtl
mov
jg
lcall
addr16
pop
ja
cmp
cmp
negl
je
scas
icebp
imul
add
cmpsb
jae
add
arpl
mov
sbb
mov
pop
sbb
dec
push
add
jl
sbb
sub
push
cli
je
sahf
aad
fs
cmpsb
mov
adc
pop
sbb
jno
add
mov
xor
iret
sub
shrb
dec
and
xor
dec
aaa
push
push
add
jg
sub
lret
int3
mov
push
cld
test
fdivl
sub
inc
fwait
test
adc
pop
mov
jecxz
inc
push
les
jg
rcr
in
stc
mov
call
pushf
lcall
xchg
cltd
scas
or
mov
leave
stos
jb
jl
and
add
fnsave
mov
lcall
jae
imul
je
mov
cmp
jns
mov
add
je
les
sti
stc
mov
pop
jns
cmp
jmp
dec
inc
xor
inc
jp
or
mov
test
inc
lahf
inc
iret
adc
mov
lret
fadd
cmp
mov
push
adc
adc
push
stos
sti
add
aam
movsb
push
roll
cmc
pop
scas
xor
xor
andl
pop
pop
and
aaa
xchg
or
add
mov
push
call
jbe
sub
outsl
gs
ret
loope
mov
and
jns
add
lock
sahf
les
fwait
mov
add
out
xchg
mov
flds
je
sbbb
mov
push
iret
cmpsl
lcall
xchg
pushf
or
mov
jne
and
pop
insb
sub
shrl
fs
sarl
jnp
jp
xor
arpl
fs
sbb
je
fcompl
dec
push
mov
jg
loopne
lcall
insl
add
add
sbb
push
mov
jp
or
movsl
dec
pop
sbbl
lods
mov
sahf
mov
sbb
sbb
sbb
addl
xchg
pop
out
or
ds
fimull
ja
call
shlb
popf
pop
or
push
jg
sbb
iret
xchg
aam
adcl
or
popf
lods
fwait
sbb
stc
out
mov
or
sahf
dec
sbb
test
lahf
lahf
ss
add
xchg
ja
or
inc
sub
int
mov
sbb
int
nop
mov
push
call
fdivl
scas
ja
lret
push
mov
push
cld
jo
push
sbb
mov
adc
or
mov
adc
or
sbb
cmp
pop
into
pushf
inc
outsl
lock
dec
xor
fbstp
fdivrl
add
push
lret
divl
mov
xchg
mov
cmp
les
nop
adcb
imul
mov
popa
sbb
push
in
popf
incl
or
ss
inc
mov
aaa
imul
mov
mov
pop
add
mov
xchg
fisubrs
jo
jg
repz
pop
hlt
dec
lock
pop
xchg
testl
das
es
xchg
jp
sub
subb
xchg
sbb
test
popa
test
ja
sub
xchg
rorl
ss
mov
cltd
adc
xchg
or
lret
out
inc
sub
insl
in
fldenv
mov
add
lea
mov
jae
mov
sbb
int
lret
xchg
call
pop
cltd
pop
sub
int
jo
cmc
aaa
mov
shl
lods
pop
adc
mov
cmp
les
push
jle
jne
push
inc
cmp
pop
jae
mov
in
xor
mov
popf
dec
adc
addl
xchg
lret
jbe
jnp
add
pop
fdivrs
loopne
popf
out
adc
jo
mov
adc
in
mov
ljmp
addr16
loop
movsl
dec
sarb
adc
ret
out
dec
jmp
nop
fs
ret
cwtl
out
and
lea
and
cs
in
iret
inc
jg
fistpll
sub
pop
fwait
pop
pushf
adc
mov
loop
jb
fs
mov
insl
nop
into
sub
pushf
xlat
repnz
and
stos
inc
fs
movq
inc
iret
fsubrp
imul
lds
popf
imul
xchg
mov
nop
into
xor
add
pop
mov
sbb
jle
jmp
fimull
scas
jae
sub
push
push
fbstp
fisttpll
int3
inc
repz
pop
lods
or
aad
fsubl
push
jge
test
jns
and
and
add
lea
sbb
sbb
repnz
push
sub
fldt
cld
stc
data16
xor
imul
pop
lock
push
inc
cwtl
es
ret
adc
xchg
repz
fistps
ffreep
adc
dec
xchg
dec
pusha
jecxz
xchg
outsb
xor
outsb
xor
and
mov
dec
pop
mov
mov
xchg
jo
dec
dec
fimuls
out
inc
push
mov
lods
xchg
mov
test
mov
test
pop
ss
mov
adcb
mov
lcall
rorl
xor
cltd
mov
mov
lds
pusha
ficomps
dec
das
aaa
cmp
lahf
pop
mov
pushf
push
cmp
lret
ret
add
cmp
xor
outsl
cmp
push
mov
cmp
mov
into
pop
sbb
insl
ret
outsb
mov
outsl
xchg
dec
mov
jb
add
mov
pusha
cmpsl
dec
movsl
arpl
stos
cmpl
cmp
fs
int
cmpsl
xor
in
jl
out
stos
ja
ja
pop
cmp
jg
addr16
mov
lds
inc
inc
mov
cs
sbb
loop
push
jne
fnstsw
repnz
sbb
or
and
inc
out
push
iret
movsb
xchg
push
ficomps
lahf
fs
xor
adc
lds
lock
jmp
das
lret
xchg
pop
sbb
fwait
mov
fs
icebp
loop
xchg
add
nop
das
sbb
cmp
mov
cmp
cltd
outsb
inc
mov
xlat
rcr
cmpsl
mov
dec
mov
stc
push
lock
popf
shlb
lret
aad
dec
dec
inc
add
pop
dec
xor
push
fwait
scas
ljmp
or
cltd
dec
movsl
dec
and
imul
sbb
sbbl
insb
mov
adc
imul
cmp
and
xchg
jae
mov
mov
cli
enter
sbb
adc
lahf
fisttpll
rolb
jmp
rorl
mov
pop
push
or
mov
cmpxchg
fdivrp
imul
int
xchg
out
pushf
fistpl
loop
jl
jns
jne
inc
xchg
add
mov
subl
pop
ror
rcl
dec
and
dec
and
addr16
into
imul
and
lock
cltd
shlb
and
scas
lock
adc
sahf
pop
add
out
jo
xchg
shlb
shlb
stos
add
sub
out
inc
fxch
addr16
rolb
lock
inc
out
xor
mov
jl
pop
mov
add
loop
lcall
mov
addl
pop
ljmp
fs
pop
lods
push
add
pop
xor
out
negl
ret
insb
pop
inc
mov
inc
cli
imul
jae
fucomip
pusha
dec
adc
adc
xor
outsb
fs
add
call
insb
mov
adc
nop
push
cmc
ds
adc
pusha
shl
lret
push
pop
ja
xor
adc
sbb
ret
mov
mov
sbb
mov
nop
mov
stc
or
in
pushf
mov
inc
sbb
adc
cmp
inc
sub
mov
fmul
add
xchg
mov
dec
lds
sbb
pop
cmp
mov
fwait
push
xchg
in
fwait
popa
movsb
inc
rorb
psrlw
shl
scas
in
divb
dec
dec
cmp
outsb
cmp
jno
sbb
subl
int
jmp
loope
pushf
dec
mov
test
stos
jne
mov
pop
adc
push
inc
jnp
and
mov
or
les
movsb
aaa
pop
mov
hlt
inc
lods
add
adc
sbb
sbb
movsl
xchg
ljmp
out
enter
and
or
scas
jp
cmp
push
sub
mov
test
out
pusha
cs
sub
pop
add
es
pop
xor
fdivrl
fnstcw
std
xor
lret
inc
ja
lahf
adc
xor
lods
push
push
inc
push
popf
out
push
call
cs
adc
sub
jle
adc
orl
cmc
mov
adc
jno
xor
xchg
inc
adc
mov
jmp
cmp
fstpl
daa
andl
dec
mov
aas
lret
xor
xlat
push
stos
cld
sub
aam
add
cmpsb
sbb
xlat
scas
movsl
sub
mov
dec
push
push
jmp
out
leave
push
hlt
das
sbb
adc
and
inc
add
ret
add
xchg
clc
sbb
ja
cmpsb
jne
stos
cmp
jp
inc
sub
mov
jmp
mov
bound
sahf
xchg
outsb
mov
lock
push
xchg
inc
xchg
jp
mov
add
pop
push
pop
mov
adc
in
enter
in
movsl
jo
pop
rcr
adc
mov
push
das
fildl
idivl
adc
sub
sbb
outsb
shrl
or
cwtl
adc
xor
inc
ss
pop
pop
cmpsl
pop
add
inc
ret
dec
into
mov
cwtl
push
ret
loope
notl
negl
dec
in
mov
adc
mov
or
adc
cmp
xor
jne
jecxz
int
mov
and
or
mov
sub
jo
dec
mov
or
aaa
fstl
int
xor
push
pusha
dec
insb
xor
cmp
mov
cmpsl
loopne
jne
into
movsb
lock
fnstenv
xchg
mov
and
xchg
sub
lahf
call
add
jmp
xlat
and
repnz
add
push
fiadds
lock
xor
adcb
cmpsl
mov
add
cmpsl
mov
repz
mov
inc
nop
mov
mov
ffree
mov
lock
mov
cmp
int3
adc
mov
sahf
jmp
mov
push
or
rcrl
into
aam
ss
fwait
ret
xchg
jge
pop
pop
ljmp
ret
adc
push
push
push
pop
in
mov
or
pop
lods
iret
xchg
or
push
rorb
iret
inc
aaa
test
pop
push
mov
pop
or
std
das
ja
inc
inc
push
dec
loope
jnp
adcl
outsb
xchg
daa
xor
or
add
adc
push
sub
test
add
fsubp
lods
out
mov
xchg
and
jge
xor
aad
rol
or
inc
cmpsb
out
push
xchg
dec
or
push
xchg
pop
rol
pop
push
jae
nop
decl
aaa
push
cmp
push
outsb
clc
lea
mov
insl
bound
xchg
mov
or
insb
add
dec
inc
aam
scas
inc
insl
arpl
enter
addb
add
jno
jg
jns
cld
push
mov
in
or
mov
add
inc
jmp
out
subl
test
jmp
cmpsb
sbbl
lods
jg
lds
mov
dec
fldenv
imulb
es
pop
arpl
mov
jne
and
adc
sbb
xchg
mov
test
cmp
loop
je
cmp
fxrstor
or
mov
and
rcl
mov
arpl
rcrb
xor
inc
inc
sahf
push
pop
inc
add
pop
pop
or
xchg
mov
repz
dec
mov
cmc
data16
add
add
aad
sub
shlb
xchg
out
ror
xchg
add
add
shl
hlt
sbb
xor
mov
adc
mov
mov
jbe
ljmp
pusha
xor
sbb
lock
jb
push
out
clc
sti
cmp
cmp
mov
rol
fdivl
jae
jns
xchg
adcl
mov
adc
xchg
lods
mov
pop
mov
jge
dec
fildll
cltd
and
xor
test
dec
pushf
jl
xor
xor
cmp
mov
leave
cmp
aas
fisubl
cmpsl
push
mov
pop
dec
inc
add
icebp
inc
aam
aam
call
push
mov
lods
push
test
movl
mov
ret
and
scas
fimuls
in
test
dec
bound
or
popf
jbe
or
mov
fsubrs
imul
add
xor
adc
push
je
movsl
sub
cmp
mov
cmc
dec
insb
inc
sbb
int3
js
int
xor
mov
mov
mov
clc
xlat
orb
push
jmp
insl
movsb
cmc
inc
rclb
sarb
in
inc
fucompp
rcrl
mov
addr16
aaa
imul
cs
jecxz
xchg
xchg
fidivl
and
cmp
mov
pop
lea
pop
xlat
outsb
movsl
dec
mov
xor
inc
outsl
xor
sbb
sub
lahf
dec
aad
jge
clc
ret
loopnew
cmp
pop
int
xchg
xchg
mov
jmp
cwtl
pusha
int
in
jno
pop
jo
or
mov
mov
xlat
in
cmp
pop
cmp
or
adc
adc
cmp
in
mov
mov
enter
fimuls
mov
or
xor
xchg
scas
mov
add
nop
sub
fidivs
push
dec
cltd
dec
mov
mov
in
stos
outsl
inc
scas
pop
and
shr
insb
jb
mov
rorb
mov
jge
sbb
movsb
mov
mov
je
pop
das
lods
ret
ret
sub
ja
jno
dec
arpl
sti
mov
adc
jo
int
call
aaa
loope
and
fnstsw
inc
in
outsb
mov
cmp
daa
jo
mov
loope
sti
adc
shlb
add
cmpsl
aas
cmp
sub
and
xor
and
and
lahf
jg
stos
mov
mov
insb
popf
ret
push
cmpsb
scas
lret
aaa
dec
out
pop
out
cmp
push
push
mov
ljmp
cmpsb
push
sub
pushf
jl
sub
xchg
subl
inc
mov
dec
fwait
mov
test
arpl
dec
pop
les
push
and
pop
push
gs
rorb
sbb
push
jle,pt
out
rorb
lahf
ds
xchg
addl
xlat
int3
les
and
cmp
stos
pop
dec
mov
out
in
jmp
lret
and
je
shlb
pop
adc
inc
mov
push
jl,pt
addr16
cmp
shl
pop
sub
pop
xchg
jne
push
mov
es
sbb
cli
sahf
ret
push
xchg
outsb
sbb
notrack
inc
pop
mov
adc
jl
popa
xor
hlt
or
mov
repz
iret
dec
fdivrs
ljmp
jae
adc
outsb
adc
cmp
mov
lret
adc
das
xor
or
xchg
scas
cwtl
add
in
out
je
ret
mov
je
nop
imul
je
lods
add
push
mov
loopne
adc
repnz
mov
push
mov
add
iret
push
lds
adc
push
and
xchg
icebp
jmp
cmp
lret
mov
jmp
decl
pop
mov
aaa
cmc
mov
scas
cmpl
and
push
pop
ror
fwait
jno
sarl
arpl
mov
sbb
push
push
dec
fcomps
jle
int3
sub
push
addr16
js
mov
ret
mov
push
mov
sbb
mov
fstps
xchg
mov
inc
mov
pop
mov
dec
outsl
jno
adc
outsb
clc
sahf
mov
dec
cld
cli
adc
leave
add
sub
xlat
cmp
imul
mov
jg
bound
xchg
xor
ja
cmp
jnp
mov
dec
push
xchg
sub
xor
pop
xor
inc
xchg
popf
mov
push
mov
enter
es
pop
xlat
aam
xchg
mov
adc
fucomp
push
mov
lcall
leave
sbb
movsb
mov
mov
pop
mov
jg
pop
or
loop
push
and
push
pop
push
lahf
movsl
cltd
stos
mov
adc
push
roll
mov
aam
aam
push
arpl
dec
inc
jl
mov
mov
orb
mov
mov
insl
into
mov
jge
or
test
or
les
insl
jb
push
sbb
in
pop
xchg
test
and
ret
xchg
push
xorb
bound
push
je
push
rclb
xchg
adc
adc
js
jge
outsb
fnstcw
pop
enter
push
scas
mov
push
xchg
adc
xchg
sarb
cli
xchg
push
adc
mov
mov
pushf
cmp
mov
jae
arpl
cwtl
or
jnp
jp
jg
roll
pop
mov
mov
ds
push
imull
aaa
dec
cld
decb
fdivr
cltd
sbb
xchg
add
cli
inc
insl
add
int
mov
cwtl
pop
cltd
mov
roll
inc
clc
sbb
fdivl
adc
ficoml
adc
jno
jle
push
ret
scas
faddl
xchg
xor
arpl
fldenv
int3
imul
xchg
add
mov
jae
ja
pop
dec
sbb
and
test
jne
adc
mov
sub
int
enter
in
pop
mov
das
jno
loop
popa
or
lds
shlb
add
dec
or
mov
addr16
jmp
jmp
fidivrs
hlt
popf
ret
pop
pusha
das
insb
mov
inc
test
cmp
frstor
fsub
popf
ret
fstps
xor
adc
nop
and
loop
gs
outsl
jmp
ror
sub
adc
xchg
test
test
xchg
jae
aas
in
pushf
dec
fs
cs
push
ret
popa
mov
dec
pop
and
cmp
push
mov
add
mov
or
sahf
jmp
jae
add
and
add
or
imul
push
xchg
inc
cwtl
stos
lcall
xor
lret
add
call
mov
insb
cmp
pusha
inc
or
js
je
jecxz
inc
jl
jmp
cmp
mov
dec
cmp
insb
mov
nop
jnp
lret
pop
inc
mov
cmpsl
sbb
movsl
push
test
jb
test
pop
pop
je
roll
mov
mov
mov
popa
dec
push
call
aaa
das
mov
ja
out
cmp
and
insl
into
jae
push
imul
mov
fmull
imul
push
dec
cmp
xchg
pushf
adc
jle
int3
das
jl
scas
lods
rcrb
xlat
mov
push
enter
outsl
rorb
pop
cmpsl
adc
xor
aad
xor
pop
xchg
xchg
dec
cmp
cmp
and
adc
sbb
pop
ss
xchg
mov
pop
gs
aam
iret
sbb
jecxz
add
mov
mov
mov
fidivrs
mov
jae
mov
mov
jae
and
aas
leave
adc
pmuludq
xor
movsb
movsl
notb
mov
dec
fwait
mov
xor
lock
inc
inc
ficoml
mov
push
push
lods
lods
loopne
dec
stos
insb
xchg
xchg
add
insl
pop
fdivs
clc
jl
mov
je
dec
or
test
and
jae
jb
es
das
in
fnstcw
mov
mov
daa
mov
xchg
ret
arpl
divb
das
and
mov
jg
scas
mul
aaa
sub
andb
std
aam
sub
and
ficompl
or
xchg
mov
ljmp
jp
je
pushw
mov
out
out
inc
lret
jp
fildll
outsb
sbb
into
cs
mov
dec
mov
jno
xchg
out
mov
xor
mov
add
mov
leave
jns
shrb
rorb
mov
das
sbb
mov
out
jns
into
std
adc
loopne
push
es
ljmp
aas
call
stos
sbb
outsl
and
pop
and
call
mov
das
cmp
inc
xor
add
cwtl
insl
or
js
sbb
icebp
cmp
bound
js
rep
or
lock
daa
sbb
xchg
leave
xchg
dec
sub
stos
inc
sbb
in
and
dec
jmp
pusha
int3
mov
mov
jbe
sub
orl
pop
scas
mov
add
cmc
nop
rclb
mov
outsl
cli
daa
es
or
into
or
imul
ret
sbb
cld
scas
push
push
fistpll
jnp
sbb
pop
sbbl
cmpsl
jg
mov
movsl
mov
std
xchg
je
nop
dec
dec
lock
cmp
dec
xor
les
mov
dec
ficoms
sub
inc
mov
cmp
and
push
xor
cmc
and
arpl
dec
mov
sbb
mov
xchg
fsubs
cmp
cmc
mov
push
imul
lods
popa
ja
arpl
fsubrs
in
cmp
jg
ljmp
jae
mov
stos
dec
out
test
out
add
pop
sbb
mov
fnstsw
cmpsl
inc
addr16
mov
pop
outsl
jns
dec
scas
inc
jp
dec
mov
pop
fchs
iret
adcb
xlat
out
pusha
xchg
ds
clc
outsl
in
lea
loopne
pop
mov
xor
fs
in
aaa
sahf
jbe
scas
pcmpgtb
sbb
movsb
adc
add
pop
xor
cmpsb
sbb
out
jae
adc
je
push
and
insb
add
shll
fisttps
xor
lcall
fcomip
enter
js
sahf
and
push
mov
push
cmp
stos
xchg
cmp
std
add
inc
jg
mov
pushf
jns
sub
pop
xor
inc
and
push
aam
fdivrs
pop
jae
cmp
and
xor
cld
lahf
pushf
push
decb
mov
and
adc
sbb
in
ja
rolb
cmp
adcl
add
push
test
clc
mov
aaa
jno
dec
add
out
inc
cmp
jmp
or
sub
cmp
mov
lahf
iret
jne
mov
and
fiadds
out
enter
rcr
movsb
mov
and
pop
jl
sbb
xchg
lret
pop
enter
sar
xor
dec
out
je
mov
dec
and
mov
in
inc
ficoml
stos
jbe
test
outsl
int3
jo
jge
outsl
or
daa
das
pop
cmpsl
jg
jge
jg
xor
mov
mov
cltd
das
jge
jb
in
nop
test
loop
mov
cmpsl
push
and
leave
and
mov
ja
pushf
or
xchg
mov
roll
jp
xchg
pop
cltd
inc
leave
inc
adc
repnz
inc
or
lcall
push
jmp
shll
into
sahf
fadd
mov
enter
sbb
mov
stos
or
in
sub
adc
jmp
cmc
ret
xchg
add
test
fwait
out
and
cmp
das
mov
ficomps
inc
inc
jnp
mov
in
out
iret
xchg
push
mov
inc
or
arpl
xchg
dec
insb
and
adc
out
sub
movb
mov
repz
mov
mov
add
enter
and
push
jg
pop
push
lods
jmp
xchg
in
lret
dec
imul
jle
stos
das
mov
push
xchg
fdecstp
ret
xor
rolb
cs
jmp
sbb
fs
inc
test
xchg
lret
pop
push
xchg
mov
rcrb
cli
jecxz
aad
xchg
scas
mov
ds
mov
xor
mov
xchg
or
push
sub
and
cmc
sub
flds
ret
std
inc
adc
scas
divl
add
bound
leave
and
dec
stos
mov
jle
shll
cs
adc
insb
out
xchg
pmaxub
push
lea
xchg
shrb
sub
mov
and
rorb
push
shl
mov
popa
loop
pusha
and
in
jge
mov
mov
addr16
fldcw
mov
mov
out
in
xor
das
leave
popf
loope
mov
cmpsb
andb
cmp
add
lods
add
and
idivl
push
sbb
pop
sbb
in
xchg
sub
mov
sahf
jns
enter
adc
adc
mov
xlat
push
xchg
adc
fcompl
lods
clc
mov
xor
push
mov
cmp
and
jbe
xchg
dec
pop
dec
call
pop
pop
adc
xchg
in
addb
loop
fists
fs
outsb
xor
mov
push
loope
repnz
mov
outsb
and
loopne
jmp
sub
movsl
sub
mov
push
mov
adc
aaa
pushf
xor
mov
adc
rcrl
inc
fcmovne
pop
rcr
cmp
leave
addr16
scas
add
ss
lret
js
jae
out
les
insb
pop
imul
lock
and
fidivs
add
pop
inc
push
rorb
cmc
outsb
pop
aam
jle
pop
inc
jmp
dec
into
pushf
mov
push
nop
daa
setge
push
xchg
jmp
shll
jns
scas
outsb
xchg
cltd
test
or
and
in
and
push
sbb
mov
popa
mov
pop
mov
insb
sub
stc
je
inc
sbb
data16
xor
lret
loope
push
or
push
push
mov
subb
outsb
iret
and
popa
inc
rcrb
sub
inc
pop
mov
and
sbb
mov
sub
jnp
sbb
jno
and
sbb
xor
test
cmp
inc
mov
sub
jle
into
cmpsl
xchg
push
rclb
inc
out
mov
push
mov
outsl
fsubp
out
pop
pop
pop
jg
mov
repnz
int3
sbb
fs
mov
pop
sbb
sub
movsl
adc
dec
and
pop
icebp
fldt
sbb
leave
dec
pop
inc
cwtl
sar
or
lcall
xor
and
pop
cmp
cmp
shl
mov
orl
inc
jbe
scas
nop
add
fcoml
xor
es
fstpt
xor
icebp
adc
loope
mov
out
test
or
mov
and
mov
std
dec
xor
sbb
enter
call
mov
sub
jg
outsb
push
mov
andl
push
outsb
fidivrs
ljmp
aaa
es
pop
mov
lret
test
lock
enter
mov
pop
dec
unpcklps
stc
lods
adc
push
sbb
in
dec
cmp
roll
iret
mov
inc
mov
out
xchg
push
aad
arpl
push
cmp
nop
mov
test
ret
js
xchg
lahf
xor
xchg
xchg
or
adc
xor
hlt
or
test
sbb
std
add
int3
sbb
mov
leave
test
or
add
sbb
outsb
xchg
pop
and
push
ret
les
cmp
jl
inc
jle
not
addb
dec
aam
lods
mov
lret
in
xchg
or
lea
inc
fimuls
ds
inc
or
ror
mov
movsl
aad
and
cwtl
cmc
dec
pop
inc
sarl
push
mov
popa
mov
xchg
jecxz
hlt
mov
inc
xchg
inc
jbe
xor
cwtl
or
mov
push
loope
push
sub
inc
clc
jl
pop
sub
in
inc
cmp
repz
aam
idivb
or
fwait
aam
mov
push
push
fcmovnu
mov
lret
and
pop
lcall
mov
popa
mov
lods
jecxz
sub
imul
adc
and
cltd
cmpb
loop
pop
imul
cmpb
and
arpl
xlat
into
jge
ret
xchg
xchg
sbb
fst
xchg
insl
mov
sahf
cld
mov
mov
mov
lds
xchg
mov
sub
push
sbb
nop
jp
sar
fisubrs
arpl
push
adc
jge
fisttpll
adc
pop
jne
or
mov
pop
in
lods
jg
dec
dec
xorb
pop
in
add
hlt
add
shrb
into
je
xor
add
cmc
mulb
aad
lret
and
sbb
mov
add
cli
pop
lahf
divb
stc
outsl
mov
scas
fldcw
sarl
or
pushf
add
xor
lcall
test
test
push
fs
push
dec
xchg
neg
stos
cmc
or
test
mov
or
inc
inc
cmpsl
pop
lds
out
fisubl
push
inc
or
adc
fcompl
mov
popa
loop
xchg
dec
and
fsubs
jnp
cmp
add
add
test
lock
ljmp
jmp
and
mov
push
testb
xor
sarl
inc
hlt
jo
adc
xor
into
out
and
jne
adc
sbb
aad
xchg
pop
push
dec
cld
mov
mov
inc
out
loop
cmpb
fwait
or
lahf
cmp
ret
push
sub
jae
inc
lea
mov
cmp
sar
sbb
pop
js
add
sub
xchg
jnp
gs
cmpsl
outsb
lds
push
pop
add
pop
outsb
in
psubd
in
imul
movsb
and
js
push
aad
aam
sahf
push
adc
push
mov
es
mov
lea
ja
jp
ljmp
mov
add
mov
add
mov
shrl
and
sbb
in
fsubrl
mov
and
fisttpl
xor
cmp
aad
adc
sti
adc
mov
dec
xchg
insb
insb
stc
sbb
scas
fmuls
xor
mov
iret
insb
adc
cmp
fnstsw
xchg
inc
jge
pop
fistpl
popa
pop
imul
pop
test
lods
incl
and
jbe
lea
hlt
hlt
in
jno
movsb
insb
cld
dec
sbb
mov
sub
mov
or
insb
dec
retw
repnz
push
fistpll
sub
mov
mov
jns
pushf
cmpsb
mov
adc
jmp
aaa
les
push
jb
and
lods
in
xchg
inc
jae
out
xchg
je
arpl
rcpps
mov
cli
arpl
mov
dec
jle
lcall
xchg
stc
xor
cmp
sbb
loop
call
lods
je
adc
mov
nop
ret
xchg
repnz
notl
mov
mov
cwtl
mov
xchg
fiaddl
mov
and
adc
mov
loopne
outsb
adc
cwtl
jmp
xchg
sbb
pop
xchg
in
jmp
imul
and
lds
pop
call
mov
pushf
jecxz
pusha
lea
adc
xchg
and
loopne
cltd
stos
aam
ds
pop
jb
and
pusha
pusha
and
xorb
mov
loop
or
cmpsb
pop
cmpl
inc
xlat
mov
mov
lea
inc
or
shrl
adc
add
add
dec
fisttpll
ss
sbb
dec
push
push
ret
scas
push
mov
dec
pop
lcall
xchg
mov
jl
xor
xlat
js
movsl
lcall
inc
jp
pop
mov
test
and
sub
stos
sub
xchg
dec
mov
loope
icebp
lret
daa
inc
mov
testb
push
in
outsb
int3
pop
cmpsl
inc
xchg
and
sbb
adc
add
and
mov
stos
and
xor
lock
sbb
jne
outsb
mov
pop
xor
enter
lahf
popf
mov
cli
test
inc
fld
sbb
fmull
xor
shll
add
adc
mov
push
inc
outsl
dec
push
insb
movsl
and
hlt
inc
imul
mov
adc
cmp
rclb
add
cmc
cmp
jne
pusha
xor
xchg
mov
add
loopne
out
ret
push
ficoms
add
cmp
pusha
popa
add
jmp
push
scas
nop
mov
cmp
adc
test
aad
sub
jnp
mov
into
or
scas
cmp
xlat
or
mov
push
adc
cmc
xchg
rcll
push
sbb
daa
scas
push
sub
pop
fwait
push
or
push
jmp
sub
das
mov
cli
repnz
mov
inc
jno
andl
add
int3
stc
push
adc
xlat
inc
push
and
imul
lret
xlat
sbb
jmp
fldcw
sub
mov
sti
sbb
pop
add
pop
inc
cs
outsb
hlt
xchg
xchg
iret
cmc
aad
jg
xchg
or
lcall
fsubrs
add
jae
mov
repz
add
xor
cmp
fisubrl
fsubrl
cli
shr
mov
push
cmp
mov
fldenv
inc
lret
jae
movsl
out
sti
mov
lock
cmp
jns
xchg
jno
lock
and
pop
push
rolb
sub
out
in
inc
and
mov
shrb
cmp
jnp
aaa
outsb
jge
mov
pop
lcall
sub
fdiv
mov
push
inc
imul
ljmp
enter
sub
shlb
inc
outsb
repnz
pop
inc
jmp
loop
mov
fnstcw
xor
cmc
int
sbb
cmp
jo
lcall
mov
inc
sahf
loopne
dec
inc
xchg
inc
xor
nop
xchg
mov
fidivs
mov
xlat
mov
cmp
dec
xor
mov
rcll
inc
cltd
add
xlat
inc
cmp
cmp
jae
cmp
loop
insb
mov
xchg
arpl
xchg
sub
mov
mov
push
cwtl
imul
js
test
jmp
cwtl
ljmp
outsl
js
xchg
les
sub
ss
imul
fnstsw
repnz
out
stos
mov
js
ss
mov
jle
test
das
cs
and
mov
sbb
cmp
fdivp
pop
rcrl
test
ret
add
sub
in
shll
mov
pop
iret
xor
cs
iret
dec
into
dec
push
push
cwtl
movsl
and
cmp
mov
popa
faddl
lcall
imul
stos
out
inc
fldl
lods
push
cmpsb
jnp
filds
jecxz
mov
or
lret
loope
and
push
rol
cmpsl
fidivrs
ret
outsl
stc
adc
or
pop
fdiv
mov
iret
ja
fcompl
rorl
xchg
cmp
loopne
adc
ja
cmpsb
popa
out
push
mov
movsb
popf
shl
sub
loope
push
gs
mov
push
loopne
or
iret
mov
jl
lcall
arpl
sbb
test
aad
mov
cmpsb
jmp
mov
inc
andl
or
sbb
popa
pushf
jg
or
setb
imul
xchg
dec
adc
les
and
sbb
stc
pop
lods
jo
and
scas
fnstcw
or
xchg
das
jl
inc
sahf
shll
xchg
mov
lret
xchg
fs
cli
imul
or
in
inc
push
or
imul
test
push
ja
jecxz
insl
mov
or
out
fisttpl
xor
notb
js
push
push
xchg
fsts
flds
sub
ret
or
loope
rcl
mov
or
aas
leave
sbb
loop
test
rcr
gs
ljmp
push
ds
xchg
je
sbb
cld
jb
lods
lcall
insl
comiss
scas
xchg
mov
jbe
xchg
les
mov
cwtl
imul
testl
flds
dec
in
jb
mov
dec
jmp
xor
mov
aaa
xchg
jmp
adc
xchg
lea
push
jb
pusha
imul
mov
jne
mov
lahf
inc
push
cli
add
push
dec
jbe
inc
push
das
enter
scas
xchg
xchg
lea
mov
cmc
jge
xor
test
sbb
call
call
dec
pop
and
sub
pop
jno
nop
cli
in
divl
out
out
js
mov
ja
jp
lahf
push
lock
mov
pop
std
enter
sbb
outsl
mov
sub
sbb
jb
pop
insb
imul
imul
int3
lret
cmp
pusha
and
sti
xor
dec
mov
jle
jmp
push
test
movsl
ficoml
cs
mov
mov
inc
push
jecxz
cld
jbe
mov
das
je
mov
dec
and
add
imul
xor
ds
movsl
es
mov
outsl
sub
sbb
push
fildll
cs
mov
jmp
aam
lock
sbb
lds
std
cltd
test
cmpsb
dec
pop
push
pop
jns,pt
adc
mov
enter
fcmovne
sbb
rorb
ret
cmp
aaa
ss
adc
mov
pushf
xlat
lea
sbb
pop
stc
sub
adc
lcall
pushf
ud0
rorl
mov
xchg
sbb
loopne
lcall
xlat
xor
outsl
xchg
in
scas
inc
ljmp
xchg
adc
jb
jb
loop
xor
and
sbb
dec
xchg
ss
jnp
dec
cmp
sti
or
sub
mov
fisubrs
or
inc
adc
test
push
pop
lret
or
fs
sbb
sbb
fistpl
xchg
jae
sbb
cmpsb
fildl
sbb
aaa
xchg
xchg
cmp
packuswb
out
push
dec
inc
and
aas
fnstsw
or
popf
js
mov
mov
fcmovnu
push
xchg
stos
xchg
or
mov
add
in
xchg
and
lods
push
lahf
push
imul
mov
test
adc
mov
jg
jnp
in
ret
in
push
scas
fisttpl
iret
dec
and
xchg
mov
inc
or
ds
mov
dec
jmp
pop
lahf
aaa
je
or
cltd
stos
lret
outsb
cs
add
pop
cmp
xlat
dec
lret
repnz
xchg
adc
add
mov
or
mov
aas
jnp
mov
add
dec
dec
pop
out
out
sbb
and
outsb
jo
jg
adc
scas
iret
xchg
gs
popl
jecxz
iret
push
in
ds
add
xorb
repz
adc
adc
xchg
mov
jg
cmpsb
out
cmp
xor
jg
sub
mov
aas
jmp
gs
xchg
mov
ret
bnd
mov
vsubsd
xorl
pop
xor
int
call
mov
pop
push
or
inc
data16
arpl
and
repz
aad
lea
orb
push
pop
pop
xchg
lret
cmp
fsubl
fildll
or
cli
in
jne
leave
cmc
cmp
mov
test
push
shrl
push
repz
popa
push
inc
fnstenv
mov
sbb
mov
jl
ds
int3
es
ret
test
or
pop
mov
jecxz
jnp
pop
and
lock
lahf
dec
andl
inc
jns
test
mov
mov
mov
pushf
cmp
into
mov
mov
or
mov
jecxz
std
mov
adc
cmpsl
mov
and
wbinvd
lea
xchg
xor
jnp
arpl
bound
jbe
xlat
push
xchg
mov
cli
inc
lock
mov
add
les
sbb
push
jo
pop
cmp
push
cmp
cwtl
insb
lock
sub
shl
mov
pop
push
lret
sbb
fstpt
aas
sub
mov
cmp
add
cld
and
xlat
sub
ljmp
pop
test
in
mov
mov
adc
xor
sub
inc
and
rorl
into
mov
and
xchg
rclb
cmpsb
std
inc
scas
mov
jge
lret
sub
inc
ret
xor
cwtl
push
mov
mov
mov
push
nop
or
sti
mov
je
jecxz
mov
and
lock
pop
std
sbb
ljmp
dec
or
jns
ret
ret
sub
fnstenv
aam
sbb
adc
pop
pop
cs
xchg
cmp
xchg
inc
ds
mov
push
cmp
jno
jp
mov
je
fdivrl
ljmp
cli
notb
mov
stos
sbb
mov
and
pop
out
add
int3
les
js
adc
popa
scas
dec
rcrl
outsl
mov
shl
outsl
fisubl
leave
inc
and
mov
adc
or
push
pop
mov
insb
ss
push
mov
out
or
subl
mov
or
fsubp
pop
fmuls
ja
imul
call
push
cmp
fmuls
xor
pop
sbb
in
or
out
mov
push
ljmp
mov
testl
sub
jl
cmpsb
ret
in
adc
pushf
sub
jg
aam
sbb
dec
test
enter
jmp
pop
xor
incb
jbe
aam
add
add
flds
scas
adc
rolb
mov
je
inc
cltd
rolb
repnz
cltd
push
out
jle
push
dec
pop
or
movb
adc
cwtl
add
add
aaa
pop
cmp
mov
aam
lock
fcmovnu
xor
in
mov
fstpt
or
test
lret
fwait
in
add
lret
into
mov
shll
enter
lods
aaa
dec
shrl
xchg
jnp
outsb
pushf
xor
ret
daa
fcom
int3
sub
push
xor
sub
push
int3
jo
iret
xor
inc
push
shll
xor
je
gs
in
and
ja
jl
add
jg
lret
movsb
es
cwtl
mov
inc
jmp
or
idivb
daa
jmp
sbb
dec
movl
lcall
repnz
scas
push
adc
mov
pop
sbb
inc
mov
fstps
vdivss
sarb
and
dec
out
aaa
mov
int
jp
or
jmp
pop
cmp
mulb
push
movl
ret
and
aas
aam
add
cmpsb
jg
pusha
jecxz
jg
fistps
leave
lods
arpl
xchg
pop
xchg
add
jle
push
adcb
mov
cmp
std
fwait
push
cmp
add
cmc
mov
mov
out
leave
inc
lahf
or
mov
outsb
push
jns
xor
or
dec
jmp
push
std
mov
mov
pop
xlat
cli
bound
mov
and
push
scas
sbb
popa
rorb
lret
lcall
les
je
rolb
pop
pop
clc
out
inc
pop
cmp
mov
sbb
pop
clc
lcall
jp
pop
cli
mov
xchg
xchg
cmpsl
fstpt
push
pop
jle
repz
or
or
xor
or
xor
rcrl
mov
push
sbbb
or
icebp
sub
xorl
fistps
incl
dec
daa
out
fistpll
dec
je
lahf
mov
or
pop
ret
jae
mov
add
outsl
in
jmp
nop
adc
push
cltd
addr16
dec
stos
enter
fcoml
dec
push
jle
pop
jo
and
insl
out
out
mov
pop
nop
mul
mov
xchg
mov
imul
js
xchg
adc
je
lahf
add
rorb
lods
and
iret
mov
imul
push
outsl
insb
jge
aaa
lcall
test
push
xchg
xor
repz
mov
jle
adc
xchg
jmp
mov
push
dec
mov
xorb
je,pt
pop
icebp
in
dec
ret
mov
add
inc
and
adc
lcall
scas
in
jae
imul
scas
xchg
sbb
outsb
lods
lods
call
jns
loopne
pop
sbb
xchg
sbb
xchg
cwtl
xor
and
gs
mov
pop
mov
adc
std
outsl
in
fnstcw
outsl
shrb
xchg
push
push
cwtl
jg
cmc
xor
or
add
and
jle
sbb
pop
ret
scas
lcall
fs
sub
iret
in
xor
sub
inc
mov
adc
pusha
aam
iret
mov
mov
inc
addr16
movsl
adc
insl
arpl
and
xchg
mov
cltd
clc
fsubs
test
push
pop
xchg
xchg
aad
subl
and
jmp
bound
dec
pop
cmp
xchg
xor
leave
dec
push
mov
mov
dec
xor
xchg
cmpsb
fcmovnu
xchg
rclb
daa
dec
adc
int3
lret
pushf
testl
xchg
fisubl
sbb
loop
xchg
push
push
pop
sub
mov
xchg
cmp
scas
lahf
insl
arpl
inc
pop
or
add
cmpsb
aas
fucom
add
cmp
in
stc
mov
mov
sbb
lds
push
std
mov
std
test
jge
mov
orl
jle
pop
inc
push
xchg
push
arpl
sahf
scas
rcrb
fwait
sub
pop
cmp
js
pop
or
jno
cld
stos
pop
push
sbb
adc
and
mov
adc
xlat
scas
fisttpl
push
ljmp
jmp
or
push
mov
inc
hlt
adcl
test
and
mov
jmp
push
mov
ljmp
fistpll
popa
or
xor
mov
test
mov
or
and
imul
xchg
lea
imul
cmpsl
pop
jno
cltd
mov
loopne
xchg
fstpl
into
std
xor
cmp
int
xor
push
scas
mov
aad
push
frstor
and
cwtl
jl
pop
inc
add
daa
orb
clc
mov
bound
inc
xor
mov
sub
std
cltd
mov
dec
shrl
into
stos
lea
add
mov
pop
pop
mov
imul
shufps
stos
mov
xchg
inc
xor
movntq
popf
mov
xchg
in
dec
pop
fists
mov
mov
repz
dec
mov
jmp
ss
gs
test
cmp
int3
cmp
in
mov
cld
pusha
rolb
jg
adc
loope
les
pop
mov
inc
psubusw
xchg
mov
int3
js
subb
add
scas
bound
in
aam
je
in
adc
in
cmp
ja
aad
mov
or
push
insl
jae
mov
mov
jecxz
fdivrp
dec
xchg
ds
in
fs
aam
lahf
inc
stos
out
jle
add
mov
pop
inc
jns
jns
cmp
and
shlb
or
fwait
daa
jp
test
adc
inc
jnp
jecxz
jns
out
xor
stc
or
arpl
adc
cld
outsl
cmp
push
movsl
les
and
lea
inc
lods
jmp
pop
mov
sti
rclb
test
pushf
test
and
int3
cmpl
adc
cld
shl
or
imul
dec
fwait
sti
mov
push
arpl
je
insb
xchg
mov
and
xchg
shrl
cmpsb
insl
fistpll
lret
cmpsl
out
jnp
insl
push
push
shll
push
lret
aas
cmp
sub
pushf
xor
pop
jle
icebp
pop
popa
ret
jge
scas
pop
fsubrs
leave
orl
scas
jg
push
inc
jns
and
jae
or
or
pop
push
pop
or
or
test
push
and
jno
dec
jmp
jb
xor
xchg
pop
sti
jle
sbb
pusha
outsl
xchg
inc
jl
std
out
add
lret
sahf
adc
mov
daa
push
ja
jecxz
and
subl
mov
xchg
mov
js
scas
inc
push
insb
pop
repnz
jg
xor
pop
add
xchg
mov
xchg
xor
xchg
sbbb
imul
leave
enter
mov
scas
jo
mov
xchg
sbb
in
mov
xchg
les
ss
mov
push
aam
xchg
xor
movsb
subl
fisubrl
fimuls
cmp
adc
int
mov
dec
fs
push
out
sarb
adc
lcall
mov
fsubs
adc
outsl
mov
cmp
stc
lahf
fucomip
and
mov
jle
test
sbb
fsubl
out
std
adc
lret
xchg
sbb
int
sbb
loope
mov
mov
dec
mov
das
mov
data16
inc
cmp
push
repnz
dec
je
mov
xlat
push
loopne
hlt
push
xchg
jns
push
popf
pushf
fsubs
jae
lcall
inc
sub
mov
out
cmp
jmp
mov
dec
push
popf
maxps
dec
std
xchg
push
iret
mov
shl
in
mov
enter
insl
scas
test
push
sub
mov
fsubrs
jmp
or
outsl
jns
mov
and
sbb
popf
popf
mov
es
and
jge
dec
dec
add
inc
or
sti
mov
test
out
repnz
fwait
push
fdivrl
mov
jg
lods
fnsave
mov
add
scas
jp
mov
jnp
xor
add
je
jge
repz
out
shll
or
xorb
fwait
jns
in
dec
inc
nop
popf
jl
xlat
cmp
loop
int3
imul
mov
mov
jecxz
pop
sti
mov
dec
xchg
cmp
and
fwait
pop
out
data16
add
stc
adc
incl
mov
xor
vcvtpd2dqy
scas
movsb
rolb
pushf
les
dec
pop
add
pop
lea
mov
out
bound
loop
mov
pop
inc
inc
aaa
scas
add
into
pop
push
ja
pushf
ljmp
and
and
and
hlt
mov
dec
aaa
push
jne
das
pop
mov
adc
or
call
ficoml
mov
jmp
mov
inc
shll
push
mov
out
pop
loop
cmp
mov
adc
xor
jb
fldcw
fs
xchg
mov
sub
jb
mov
sbb
pop
stos
addr16
test
mov
xchg
adc
mov
jne
sbb
popf
aad
adc
icebp
incb
imul
xor
push
xlat
and
dec
pop
in
and
jbe
pop
and
and
cmp
lods
mov
les
xlat
push
mov
cmp
int
push
add
mov
jg
and
out
mov
and
mov
dec
mov
and
fdivs
cltd
pop
bound
shll
int3
ret
mov
outsb
mov
aas
mov
test
pop
cs
loop
xor
xor
adc
outsb
pop
bound
sub
ficomps
sub
outsb
scas
divl
push
xchg
mov
pop
pop
fadd
jns
mov
addr16
aas
push
aam
std
and
pushf
mov
sar
rolb
xchg
imul
lcall
mov
adc
lret
xchg
mov
and
clc
lock
or
jl
mov
sbb
inc
cld
xor
xchg
push
mov
mov
inc
xor
in
mov
jmp
add
add
test
xor
pop
in
ficompl
push
inc
mov
and
mov
sbbl
cmp
popa
int3
andb
sbb
test
test
outsb
and
adc
repz
mov
xor
les
xor
outsb
daa
imul
outsl
es
into
icebp
dec
mov
scas
mov
test
push
adc
jae
dec
sbb
loop
filds
or
fisttpl
int
xchg
pop
bound
inc
aam
or
mov
xor
push
lock
addr16
lret
cmpsl
mov
sub
fs
jo
pop
cmpsb
rclb
push
or
or
jg
sarb
xchg
xchg
ret
mov
int
js
scas
jmp
mov
add
mov
gs
inc
out
xrelease
dec
dec
xchg
push
imul
inc
lret
xchg
jge
cmp
jg
mov
push
pop
pop
sub
adc
repnz
mov
leave
imul
je
jg
out
dec
test
scas
pop
xchg
adc
scas
dec
xchg
push
cmp
sbb
hlt
xor
mov
outsl
ljmp
cld
testw
mov
xor
sahf
mov
int3
or
inc
xchg
jl
fidivrs
pop
mov
jnp
xor
inc
sahf
sbb
add
shl
stc
adc
ror
and
pop
cmpsl
ret
adcb
push
out
adc
mov
leave
jg
andb
mov
push
and
lea
daa
xor
jno
add
jmp
jo
outsb
iret
adc
dec
pop
gs
xchg
dec
adc
sub
mov
xor
cld
fdiv
xchg
xor
pop
sbb
jae
test
lcall
push
pop
mov
mov
fdivrs
or
push
out
adc
daa
and
lea
xchg
mov
iret
scas
xchg
or
icebp
sbb
cwtl
cli
sub
cwtl
ret
jne
shrb
cltd
adc
aam
jecxz
sbb
mov
test
jb
xchg
add
and
out
cmc
inc
addb
jle
and
pop
sarb
call
jo
and
outsb
repz
jle
dec
pop
dec
mov
push
and
push
sti
adc
int3
loopne
push
xor
inc
scas
cmp
aad
fisubs
lea
mov
je
xchg
push
dec
ret
push
sbb
inc
jmp
mov
jne
mov
add
lcall
fistpl
mov
xor
xor
nop
insb
je
ud2
add
aas
cld
xchg
hlt
mov
icebp
call
test
sbb
add
jmp
fadds
sar
outsb
lahf
lcall
scas
xor
sub
test
xor
push
push
and
int3
addr16
and
ret
sub
xor
and
fcoml
push
add
fwait
imul
mov
jmp
add
fiaddl
mov
jg
mov
pop
xchg
aad
mov
cwtl
les
es
cltd
popa
and
movsl
sub
push
outsb
loopne
int3
sti
inc
lahf
stc
dec
or
mov
enter
fimuls
xlat
shld
fwait
pop
jo
aaa
call
popa
aam
cltd
xchg
xchg
or
mov
dec
enter
dec
pop
ret
xor
sub
mov
or
lahf
fcmove
dec
dec
mov
mov
int3
rcrb
out
lods
jmp
shrl
lret
lock
test
dec
mov
lods
jmp
les
jne
mov
push
inc
lcall
mov
dec
es
fldt
mov
xlat
xor
aad
std
stos
sbb
lret
mov
out
es
xchg
and
rorb
imul
cld
pop
mov
jmp
insb
psubd
jne
sub
dec
stos
cs
mov
pop
in
loop
lahf
aas
lods
add
jne
inc
push
jl
fisttps
sub
push
mov
shr
cmpsl
popf
dec
mov
push
nop
insl
cmp
sub
or
pop
and
jno
sub
jl
fdivs
jne
jns
jb
testb
lcall
aam
push
pop
stc
jb
aaa
or
pop
fisttps
jns
int3
pop
or
push
pop
adc
xor
enter
call
push
sbb
aaa
adc
push
jmp
movsb
fsin
jp
mov
addl
push
add
cmp
mov
xor
aas
mov
test
scas
push
out
cmpsl
pop
xor
cmp
das
adc
or
dec
cmp
adc
nop
xlat
enter
pushf
xchg
dec
leave
cmpl
xor
aas
movsb
inc
inc
mov
fiadds
jg
push
cmp
xor
frstpm(287
sub
mov
ss
fxch
or
or
fbld
repnz
mov
icebp
hlt
pop
push
pop
xor
cld
mov
or
xor
xchg
sub
push
ficoms
flds
push
loope
xor
enter
scas
or
and
xor
pop
mov
orb
cwtl
adc
lods
adc
pop
and
sub
jo
xchg
xchg
and
es
mov
adc
mov
cmpsl
scas
pop
bound
lret
cmpsl
movsl
cmpsl
repnz
mov
jb
cli
loop
jle
push
enter
int
xor
dec
pop
sbb
stc
mov
scas
jbe
shrl
test
notb
sbb
adc
dec
xor
inc
mov
imul
inc
pop
in
xchg
cltd
adc
sbb
aaa
in
fmull
xor
sub
mov
cli
cmp
ret
imul
out
je
pop
and
push
pop
jno
mov
pushf
lods
ret
pop
pushf
xor
mov
je
mov
test
dec
pop
dec
lahf
pop
jae
jp
repz
dec
push
jno
mov
mov
loopne
jns
rorl
rorb
aad
nop
ficoms
dec
insb
nop
mov
push
out
jmp
jo
out
loop
daa
inc
in
dec
sbb
aaa
cmp
cmp
push
rcll
outsb
xchg
xor
adc
nop
jb
xchg
push
cld
mov
out
test
pop
gs
mov
mov
fwait
xchg
pusha
stos
je
xchg
push
stos
xchg
fisubrs
jmp
dec
jge
sarl
add
cmpsl
and
sbb
mov
fdivrl
adc
mov
out
mov
xor
and
rclb
lret
in
sbb
aam
sub
cmp
sarb
jmp
jo
imul
stos
xchg
mov
scas
lret
mov
nop
imul
test
or
mov
rol
sbb
rcrl
shlb
jne
pop
inc
xor
lret
xor
test
sub
jnp
push
aam
psubb
xchg
sub
dec
shrl
or
push
data16
inc
int
mov
add
mov
jg,pn
pop
jne
js
ret
icebp
pop
inc
arpl
adc
rcrl
mov
xlat
lds
mov
rcrb
jb
ret
and
push
sub
pushl
xchg
inc
mov
pop
ret
in
adc
mov
addr16
popf
adc
xchg
pop
outsl
adc
call
ss
ficompl
add
inc
rcl
dec
xor
addr16
cmp
or
jmp
xor
repnz
iret
popf
lods
cmp
push
jne
sub
das
leave
pop
mov
xcrypt-ecb
cmpsl
or
push
rclb
mov
ljmp
adc
xchg
je
mov
mov
stos
mov
pop
outsl
pop
popf
mov
movsb
ret
popf
cmp
fstps
push
js
js
jbe
and
adc
cmp
ljmp
test
sub
pop
in
loope
movl
xor
xchg
in
filds
into
push
sub
movsb
shll
fs
jg
out
pop
dec
mov
fwait
or
sub
jnp
sahf
loopne
add
sub
loop
fistpl
and
scas
xor
mov
jge
and
sub
xchg
and
or
popf
iret
jno
or
in
das
xchg
sbb
loop
out
ja
mov
imul
xchg
in
push
dec
mov
dec
out
mov
fsubs
scas
std
mov
mov
lret
dec
inc
mov
dec
data16
and
lods
mov
jge
pop
pop
mov
dec
popa
cwtl
loop
or
mov
cmp
and
sar
cmp
scas
iret
cmp
daa
ret
cmp
aam
dec
lcall
outsl
negl
dec
int
mov
aam
movsl
bound
ret
mov
xor
loopne
add
or
adc
fs
inc
lcall
xor
push
cwtl
or
jo
mov
fnstsw
and
cld
xchg
inc
inc
push
cli
les
jbe
mov
xchg
mov
pop
les
inc
dec
mov
mov
lods
adc
sbb
imul
ljmp
int3
and
mov
sub
es
imul
mov
addr16
jno
adc
xchg
loopne
in
push
rol
jb
aad
ss
movl
push
dec
pop
or
cmp
jle
test
xor
dec
mov
cli
xor
or
dec
sarl
add
xchg
xor
fnstenv
jno
pop
add
fidivrs
push
mov
pushl
loop
push
xor
inc
sbb
cli
add
inc
sbb
lcall
cmp
push
cmp
and
mov
fisubs
or
aas
outsb
iret
faddl
pop
rolb
cmp
push
jbe
mov
mov
in
aaa
out
mov
mov
sub
xchg
jmp
xor
addb
add
push
fiaddl
or
and
orb
jno
imul
push
ret
mov
mov
dec
push
mov
adc
xor
shl
pop
jb
xlat
jno
mov
and
and
mov
sub
imul
xchg
pop
lock
mov
scas
outsb
arpl
mov
andl
pop
mov
jp
cmp
cltd
xlat
icebp
sbb
mov
test
sub
mov
aad
hlt
loopne
or
imul
lahf
mov
ret
dec
imul
lods
inc
data16
inc
sub
lahf
mov
pop
fnop
push
shlb
stos
aam
mov
mov
add
test
ret
into
push
cmp
ret
sbb
or
push
xor
sbb
jno
insb
xor
clc
dec
das
dec
pop
int3
lds
jno
push
in
call
mov
pop
call
cmp
jb
shr
xor
mov
push
inc
mov
pusha
scas
mov
scas
xchg
orl
rclb
pop
or
je
jno
sub
jno
dec
imul
fidivs
aas
outsb
xor
shll
inc
jg
sarb
dec
sti
mov
bound
push
std
aam
pop
or
pop
cli
ss
scas
sbb
mov
nop
mov
insl
adc
jmp
or
or
jnp
sub
fldcw
jg
test
rcl
shrl
imul
cmp
and
mov
lahf
dec
mov
fstps
adc
pop
inc
sbb
pop
jo
xchg
sbb
fidivl
aam
or
lds
push
in
sub
in
addr16
insb
lock
jbe
or
add
and
jmp
xorl
mov
mov
mov
xor
xorl
lcall
dec
inc
inc
adc
insb
dec
cltd
fsubrs
mov
xchg
aam
pop
dec
jg
dec
into
xchg
push
aad
in
mov
jne
push
xchg
pop
into
orl
ljmp
and
loop
fwait
js
inc
rcr
aas
sbb
inc
xor
inc
xchg
inc
pop
in
push
adc
ljmp
jae
dec
add
fsts
inc
jp
sub
push
test
dec
xchg
mov
xchg
imul
dec
xor
inc
sub
fs
sbb
cltd
sbb
cwtl
adc
adc
adc
sbb
mov
arpl
es
xchg
movsb
mov
pop
push
mov
pop
lahf
leave
and
and
jmp
mov
ret
inc
jmp
out
xchg
inc
cli
mov
cs
jno
add
and
add
in
es
push
sbb
xlat
sub
sub
cs
pop
sub
mov
add
lahf
sbbb
repz
pop
jmp
add
fs
dec
xchg
cmp
outsl
out
ret
ficomps
insl
ret
inc
ljmp
scas
cli
mov
repnz
xor
lsl
adc
call
cltd
sub
in
out
rcrl
mov
mov
ds
inc
mov
ret
outsl
mov
push
js
gs
mov
push
imul
icebp
mov
push
or
cli
mov
add
lds
add
aas
mov
and
aas
fildll
ret
lods
mov
inc
xchg
sub
jbe
pop
pop
mov
pop
push
jo
pop
pop
adc
bndstx
iret
test
inc
jecxz
dec
aad
popf
mov
int3
test
aad
adc
push
pop
in
adcl
aam
dec
sub
movsl
or
in
fiaddl
test
scas
stos
popl
bound
dec
xor
cwtl
mov
sub
xchg
fldenv
imul
test
dec
sbb
incb
dec
jp
mov
jmp
bound
push
mov
mov
and
push
xchg
lahf
jle
mov
lcall
imul
adcb
pop
dec
filds
dec
jbe
xor
xor
lods
add
lahf
mov
shlb
rcrl
iret
push
ret
jp
inc
xchg
mov
or
ljmp
pop
popl
jecxz
out
cmc
pop
sub
jecxz
mov
pop
aam
mov
cmp
adc
insb
je
pushf
pop
fcoms
add
fsubrs
pop
xor
jg
arpl
dec
xchg
and
and
xlat
outsb
sarb
lods
dec
fildll
loope
mov
jne
ja
ficomps
xchg
mov
ficompl
pop
mov
pop
mov
lods
aam
fstpl
aas
add
aas
pop
jmp
xor
push
int3
push
push
in
in
int
sub
shlb
pop
jb
dec
insl
dec
shl
dec
loop
stos
dec
fdivl
sbb
es
jle
inc
mov
out
fcomp
xchg
cli
push
pop
fisttpll
jno
jge
or
in
fildl
ljmp
out
jns
cltd
dec
mov
int
mov
sarb
push
xchg
xchg
xchg
enter
mov
je
ss
sbb
iret
push
fnstsw
ficompl
popa
shlb
mov
sbb
xor
pop
adcl
in
adc
jo
dec
mov
jno
insl
sbb
insb
sbb
lcall
std
push
add
fldcw
gs
mov
and
fmulp
mov
cmp
nop
or
mov
jp
into
jns
jl
dec
orb
ljmp
rcl
pop
rcrb
sub
or
addr16
xchg
aas
mov
movsb
in
lock
sysret
out
dec
je
fildl
adc
sti
scas
enter
xor
or
add
and
sub
jecxz
pop
add
xlat
pushf
out
popl
push
xchg
mov
pop
pminub
fwait
cmp
gs
rol
ret
push
or
les
cmp
mov
call
xor
mov
and
inc
mov
mov
daa
insl
fistps
or
cld
jmp
ds
dec
loope
lods
addl
xchg
lahf
adc
sbb
scas
outsl
dec
fnstsw
dec
xor
rorb
adc
xchg
ss
mov
dec
xchg
lahf
add
nop
pop
lret
scas
leave
sub
sti
mov
aad
inc
insb
push
mov
xchg
repz
rorb
mov
dec
mov
mov
push
dec
inc
in
fdivrs
rorb
xchg
mov
aas
mov
and
cmp
inc
xchg
dec
movsb
mov
les
cmpsb
mov
jl
xchg
or
pop
das
pushf
dec
jb
andnps
mov
xor
daa
or
scas
sub
mov
mov
inc
int3
pushf
cwtl
xchg
push
mov
fsubs
cmp
cmp
xchg
add
mov
push
and
iret
outsl
mov
fnsave
and
sub
hlt
inc
mov
dec
cld
sub
je
outsb
imul
mov
mov
shld
adc
mov
xor
xlat
push
imul
sbb
cmp
je
scas
lods
add
add
mull
out
dec
ret
jge
sub
ftst
or
mov
popa
jp
nop
rep
jnp
stos
mov
sub
cmp
xorb
adc
dec
movsl
in
jno
ss
popf
repz
fucomp
outsb
outsb
or
inc
adc
mov
data16
mov
push
clc
dec
adc
popf
jmp
fcmovb
adc
insl
insb
xchg
dec
orl
xchg
sbb
fiadds
fs
fwait
fwait
test
or
popf
or
pop
mov
jne
call
aas
lret
sub
movsb
jo
dec
sbb
adc
inc
mov
jmp
inc
dec
inc
xor
jge
mov
test
mov
rcrl
mov
fisubrs
std
xchg
aaa
mov
insl
adc
scas
mov
data16
push
add
sub
jne
andl
sbb
push
addr16
cmpsl
int
sbb
cmp
push
aam
dec
icebp
and
inc
pop
es
jecxz
mov
inc
ficoml
lret
dec
mov
nop
sbb
xor
pop
jnp
insb
iret
fisubrl
lret
xchg
mov
xor
and
lods
add
leave
cld
pop
cs
lcall
mov
lcall
pushf
mov
jo
xor
call
push
ja
mov
imul
dec
pop
or
pushf
and
xorl
dec
stc
aaa
push
test
inc
fs
movsl
jecxz
xchg
jmp
add
lds
jne
scas
jae
out
imul
adc
aad
icebp
fwait
cmpl
stc
ljmp
push
adc
adc
adc
adc
leave
cmpsb
insl
adc
mov
mov
adc
fisttps
in
add
leave
add
sub
fisubl
shrb
pop
cmp
push
pop
jo
jnp
fcom
ficoml
adc
repz
cvttps2pi
sbb
jmp
aam
ja
and
xchg
je
test
jl
jns
aam
lcall
sub
add
ret
lds
push
aaa
mov
jmp
add
imul
lahf
cmp
fisttps
mov
repnz
pop
dec
xor
popa
xor
aas
push
pop
and
in
hlt
aaa
icebp
adc
jne
push
xchg
shrb
fstps
xor
pop
inc
mov
or
nop
pop
cli
stos
xchg
push
xor
fucomi
cmp
sbbb
sti
shlb
stos
xor
aam
pushf
add
scas
pop
scas
add
dec
add
cwtl
out
lea
in
jo
sbb
aad
loopne
std
dec
jne
pop
out
mov
imul
subl
or
pop
dec
ret
arpl
mov
xchg
lods
fbld
dec
pop
test
add
hlt
push
data16
fstl
adc
xchg
push
push
test
pusha
sbb
sbb
pop
pop
dec
push
hlt
jmp
sub
clc
js
jno
lret
call
gs
nop
adc
lcall
mov
aam
sbb
mov
cltd
popa
mov
xchg
test
mov
inc
sub
mov
jo
xchg
inc
addl
fyl2xp1
lahf
mov
loope
je
pushf
inc
iret
add
dec
push
outsb
jno
xchg
ret
into
inc
iret
add
push
loop
inc
movsb
cltd
sbb
arpl
or
int3
push
cmp
sbb
xor
push
and
xchg
pop
pop
call
xchg
push
xor
shll
pop
out
jle
push
push
cld
sti
inc
fwait
stc
mov
fwait
dec
sar
stos
pop
pop
orl
sbb
jle
clc
jno
and
enter
das
aad
jae
and
std
repz
add
stc
jmp
mov
int3
ret
or
mov
fdiv
push
leave
mov
outsl
pop
sub
mov
jl
rcrl
and
lds
fldenv
lods
popf
jmp
or
push
adc
lods
pushf
and
pusha
clc
sub
or
stos
pop
fistpll
sub
cmp
aad
inc
lea
idiv
jno
dec
lods
rorb
lret
mov
aas
mov
mov
jne
mov
imul
into
das
and
cltd
jle
fwait
mov
int
pushf
iret
ljmp
sub
xchg
enter
or
out
xor
sub
jnp
push
das
orb
cmc
icebp
test
jecxz
or
jmp
xchg
mov
aaa
xor
int3
inc
mov
rol
xchg
xor
mov
inc
sahf
or
cltd
outsl
fistpll
insl
jecxz
in
icebp
sbb
icebp
out
xchg
push
and
in
scas
mov
mov
test
push
adc
nop
sahf
je
test
mov
std
xor
mov
adcl
insb
shrb
dec
mov
add
adc
jae
or
jecxz
jo
jnp
and
insb
mov
or
pusha
lea
into
lea
iret
or
cmp
inc
data16
jbe
divl
or
fisttps
dec
mov
data16
push
xor
cmp
jecxz
jb
adc
pop
repnz
in
mov
xchg
and
and
add
test
dec
xchg
iret
pusha
sbb
aas
cwtl
fcomps
insb
jmp
roll
arpl
add
xchg
into
mov
or
mov
mov
lret
daa
inc
cmpsl
loopne
pop
jo
jb
mov
jno
dec
cmpsl
movsb
inc
imul
repz
insl
or
dec
jmp
pop
imul
insl
add
rolb
xlat
jbe
sbb
imul
xchg
les
fists
pushf
rclb
jae
pop
pop
xor
outsl
lods
mov
xchg
add
add
sbb
cmp
push
cmp
out
push
adc
dec
std
icebp
and
pop
xchg
call
dec
imul
dec
fstl
cmp
mov
or
push
scas
mov
call
pop
add
mov
data16
or
pushf
into
imull
cmpsl
ficoms
or
or
cmp
push
lods
mov
je
xor
xchg
xor
or
xchg
test
sub
xor
adc
cltd
test
or
ss
mov
mov
js
sub
mov
js
xchg
rolb
test
cld
lea
pop
push
fs
fwait
ljmp
sub
adc
jnp
push
jp
jo
mov
inc
je
or
js
or
xchg
cltd
mov
adc
dec
jecxz
movaps
xchg
xor
mov
or
add
fsts
jle
and
stos
outsb
enter
mov
fwait
iret
push
mov
add
jns
ja
pop
xor
and
rorl
jnp
mov
jmp
push
mov
lods
mov
xchg
dec
fildl
movsb
mov
lock
ja
xchg
add
mov
jnp
or
xchg
inc
pop
sub
call
in
push
mov
jns
mov
subl
clc
rcr
dec
jmp
dec
mov
add
dec
enter
lret
push
inc
enter
lock
ljmp
xchg
push
xchg
or
push
add
xchg
xchg
mov
movsl
inc
data16
push
cmovnp
sbb
add
pusha
push
xchg
jb
jecxz
negl
fwait
inc
imul
scas
in
adc
and
dec
jo
dec
xor
aaa
hlt
aaa
je
add
popa
lods
xlat
lds
inc
or
sub
mov
test
and
pop
push
mov
push
mov
jge
ret
cmp
divb
xor
loope
pop
add
js
adc
fcoml
roll
adc
inc
push
mov
push
adcb
sbb
lret
mov
xor
dec
loopne
pop
ret
int
mov
das
rorb
cmp
push
sub
xchg
out
xchg
dec
push
dec
imul
dec
pop
push
js
adc
mov
fldl
inc
push
inc
lea
mov
pop
jb
popf
pop
jl
xor
ljmp
xor
arpl
ljmp
aas
lcall
scas
mov
add
pushf
xor
xchg
pop
adc
xor
cltd
xlat
xchg
sahf
decl
push
cmp
dec
popf
fisttpll
es
push
sbb
les
ret
das
sti
inc
dec
mov
mov
dec
dec
das
xor
int
add
test
or
dec
sbb
jecxz
lea
stos
cwtl
dec
cmp
push
mov
popf
enter
dec
lcall
sub
iret
or
and
or
lea
pop
lods
int
leave
stc
dec
mov
adc
mov
xorl
dec
pop
clc
and
dec
mov
rcll
inc
cltd
push
pushf
shrb
cmp
sbb
ret
or
adc
mov
andl
jnp
inc
jb
clc
push
push
adc
lds
scas
sbb
sub
stos
lahf
jbe
sub
imul
pop
test
call
pop
mov
mov
mov
push
adc
xchg
push
call
push
mov
fstps
add
gs
xor
pop
dec
and
or
jmp
aam
mov
in
inc
mov
mov
cmpsl
dec
sub
jl
aas
fldt
bswap
dec
xchg
out
mov
rorb
mov
shlb
xchg
mov
call
add
enter
scas
add
nop
xchg
and
shrb
push
inc
jmp
sbb
sub
and
cs
fnsave
mov
and
loop
push
pop
pop
mov
inc
and
or
push
xor
repnz
jno
mov
outsb
std
jl
sub
xchg
lcall
mov
dec
push
lcall
test
scas
clc
ss
and
inc
sbb
push
icebp
outsl
adc
mov
adc
shlb
xchg
jnp
pushl
inc
pushf
and
test
outsl
inc
inc
pop
outsb
adc
mov
shrb
inc
rcll
sbb
hlt
sub
mov
push
push
loopne
jge
fs
xor
jno
movsb
mov
sbb
or
xorl
adc
lock
mov
add
pop
fcmovb
dec
pop
out
sbbl
std
repnz
int3
or
cwtl
and
mov
cmp
mov
rorl
or
js
repz
lret
lret
inc
pop
jg
pop
xchg
mov
xchg
pop
daa
xor
or
ja
pop
aas
cmp
in
out
xor
jne
test
setno
fwait
xor
rclb
sub
mov
xchg
test
mov
xchg
ss
push
jae
je
int
dec
scas
loope
aas
aas
jb
dec
push
pop
imul
das
sbb
ss
push
js
stc
push
push
pop
ffree
clc
xchg
lea
outsl
addb
fdiv
daa
aad
rcrb
mov
rclb
mov
pop
mov
lahf
xor
inc
add
xchg
lock
pop
cwtl
sub
push
push
aas
pushf
fistpl
xchg
leave
std
mov
dec
ljmp
and
cmpb
or
dec
pop
adc
mov
mov
push
mov
pop
rorl
mov
clc
dec
sub
es
sub
and
sub
pop
mov
pusha
adc
mov
jb
fistps
inc
push
push
mov
sarl
dec
jns
stc
push
insb
xchg
dec
addr16
cmc
jae
mov
sbb
mov
icebp
xchg
bswap
jns
xor
and
imul
lahf
jmp
std
push
sbb
and
add
outsl
push
xchg
mov
cli
test
lret
mov
je
cmp
bound
clc
mov
inc
pop
jns
out
xor
fimull
mov
aaa
pop
scas
stc
and
shl
cmp
cwtl
and
fnclex
push
mov
cwtl
mov
and
ficoms
mov
or
pop
dec
nop
ss
sahf
mov
mov
sub
mov
cli
jge
xchg
and
inc
and
mov
mov
shl
mov
dec
daa
dec
je
inc
aas
fsubl
add
popf
out
outsb
dec
pop
jg
or
faddl
repz
pushf
fsts
sbb
repz
test
dec
movsl
roll
test
clc
jno
lods
dec
xchg
adc
fidivrs
test
lret
movsl
loope
add
stc
xor
fldt
xchg
push
push
jl
cmp
hlt
add
jns
enter
out
test
scas
leave
jecxz
inc
sub
loopne
xchg
mov
clc
and
fs
pop
int3
pop
scas
or
and
insl
ss
dec
inc
add
or
sbb
pop
lret
sbb
shl
mov
xchg
inc
nop
in
insb
pop
pop
xchg
jp
out
ret
push
mov
sbbl
dec
push
mov
lcall
subl
pop
xor
aaa
outsl
jb
sarl
fbld
jecxz
and
es
jp
push
sbb
stc
xlat
out
scas
push
add
push
or
gs
cli
cmp
jno
fwait
mov
mov
cwtl
cmp
xchg
inc
aam
push
pusha
sub
inc
add
out
shlb
lds
jnp
dec
sub
xchg
lret
xor
fwait
sub
jb
pop
fs
enter
aad
jg
inc
std
and
mov
daa
lods
sub
rclb
jb
ss
mov
int3
adc
outsb
sbb
mov
mov
mov
cld
clc
pop
je
scas
sar
push
sub
sbb
pop
sahf
insl
pop
cmovnp
loope
xor
mov
pusha
je
xor
sbb
sbb
cmp
nop
cltd
inc
add
icebp
leave
daa
pushf
int
add
adc
sahf
or
fisubl
jae
or
cmp
sbb
stos
popf
mov
loop
sbb
cli
push
xorb
test
fcmove
pop
pop
in
xor
jae
test
push
out
cmp
fildl
lahf
pop
repnz
stos
pusha
inc
fsubl
ss
mov
mov
xor
cmp
std
iret
dec
popa
jle
jg
cwtl
outsl
sbb
or
pop
xchg
push
daa
push
sbb
imul
test
ret
test
and
add
enter
dec
dec
adc
dec
popa
xchg
mov
cmp
sub
jbe
dec
pop
or
dec
scas
dec
inc
pushf
pop
cld
inc
jp
mov
pop
nop
ljmp
ljmp
dec
in
mov
adc
mov
xchg
ret
lods
fnstsw
mov
sbb
mov
sahf
push
fsubs
push
sbb
sahf
fwait
jnp
or
lret
push
adc
leave
pop
cs
pushf
jns
add
mov
es
test
push
xorl
sbb
les
clc
insb
pop
cs
aaa
adc
push
dec
out
outsl
js
xchg
std
jno
jnp
test
rolb
mov
ss
mov
xor
std
inc
pop
pop
dec
fistps
ljmp
add
xor
pop
cmp
in
pop
jno
add
push
stc
pop
add
push
xchg
xor
in
bound
xlat
in
stos
ficompl
xchg
lahf
dec
jno
dec
mov
mov
inc
pop
cmp
mov
add
popf
orl
pop
mov
pop
lods
push
cmp
pop
xorl
mov
nop
mov
pop
addr16
aam
add
adc
jecxz
clc
pop
aam
push
inc
mov
adc
cmp
jecxz
ficoms
mov
xchg
in
and
incl
mov
cli
sbb
loop
adc
mov
subl
fbstp
xchg
out
lret
stc
aad
nop
dec
sbb
pop
inc
js
xlat
test
sub
sbb
adc
lods
inc
fisubs
xlat
shr
push
rclb
push
xchg
rcr
and
out
or
scas
mov
xchg
loopne
adc
xor
das
pop
jno
push
cmpsl
jne
mov
test
mov
into
insb
idiv
sub
out
dec
fiaddl
xchg
inc
pop
xchg
loopne
dec
xor
dec
mov
addr16
mov
push
xor
sub
xchg
mov
pop
dec
xor
dec
pop
xchg
cmpsb
jae
enter
jnp
pop
push
or
mov
testb
mov
jnp
cmp
adc
cmp
jp
fidivl
pop
mov
outsl
and
loopne
imul
add
nop
test
xorb
enter
or
inc
int3
jle
xchg
lock
mov
inc
push
inc
push
or
inc
mov
scas
jne
insl
push
ret
lret
adc
push
ljmp
movsl
andb
mov
shrb
sbb
push
testb
sub
or
ja
fnstcw
cmp
jbe
xchg
inc
sarb
pop
cltd
adc
decl
adc
add
sub
addr16
jno
jno
cmp
jbe
js
mov
push
nop
sub
sahf
jp
fmuls
adc
xchg
jp
into
mov
xor
inc
insl
pop
scas
out
dec
sti
pop
ljmp
push
jmp
xorb
jb
adc
fiaddl
iret
ja
adc
xchg
mov
push
mov
jae
pop
pop
stc
sbb
xor
sahf
add
push
pop
jp
cld
mov
or
mov
pop
xchg
les
rcll
movsl
aas
xor
movsl
sbb
lahf
test
add
cwtl
ret
inc
sub
pop
mov
adc
xlat
out
xchg
iret
insl
setge
sbb
cmpsl
cmpsl
in
pop
mov
int3
cmp
cmpsl
lds
sahf
mov
mov
push
or
jb
pop
fistpl
dec
sub
push
lods
inc
xchg
pop
roll
mov
push
mov
test
sbb
imul
clc
cmp
and
mov
scas
mov
ljmp
mov
outsb
aad
pop
adc
leave
jmp
push
jge
xor
push
add
lods
aad
mov
xchg
or
lahf
add
add
lods
popa
push
mov
sub
iret
jno
dec
mov
imul
test
ja
adc
movsb
push
pop
fistpl
inc
pushf
or
rorl
pop
rol
punpcklwd
mov
call
or
jmp
mov
dec
dec
dec
andl
loopne
xor
inc
sbb
pop
bound
icebp
insb
mov
jge
xor
push
ljmp
and
mov
pusha
dec
sahf
aam
xor
adc
cs
cmp
mov
inc
iret
push
iret
test
xchg
cmp
out
mov
inc
jno
in
lret
loop
stos
enter
inc
sub
xor
sub
into
les
insb
lcall
shll
lods
fs
mov
mov
pusha
in
cwtl
out
scas
jl,pn
pop
mov
mov
pop
sar
shll
movups
jo
fldenv
mov
mov
test
cmp
xlat
fsub
xchg
jo
call
add
push
dec
inc
fsubrl
push
cmp
outsb
pop
push
loopne
and
lock
into
pop
movb
push
imul
pushf
repz
mov
fnstenv
popf
out
and
jmp
jmp
pop
adc
adc
std
or
xchg
test
test
popf
push
and
and
out
ljmp
mov
inc
aaa
xchg
sub
mov
iret
cmp
mov
das
hlt
xor
loope
out
cld
fnstcw
xchg
mov
inc
mov
fnstsw
js
adc
sub
icebp
inc
pop
lahf
pop
add
fwait
push
test
cmpl
fiadds
cmc
sub
sti
int3
pop
add
lcall
sub
in
je
jge
iret
icebp
inc
mov
dec
jo
push
mov
in
not
xchg
cld
mov
jno
push
jno
ljmp
lock
inc
cmp
sbb
mov
fwait
addl
aam
jge
mov
dec
je
out
stos
daa
lcall
popf
and
jge
inc
xlat
jns
jmp
popa
mov
sbb
test
push
mov
add
sbb
fists
mov
pop
sub
insb
pop
ja
xchg
mov
movsl
fldt
mov
mov
add
addr16
jae
add
pop
or
push
arpl
sbb
push
push
sub
mov
cmp
inc
nop
push
clc
mov
sbb
cwtl
ret
out
fimull
ret
pop
fisttpll
adc
sub
repz
mov
sbbl
mov
inc
dec
and
pop
stc
les
aaa
or
xchg
in
sub
nop
push
dec
and
push
setno
cmp
add
lret
jp
push
pushf
mov
aad
pop
mov
dec
jmp
arpl
mov
and
js
adc
fistpl
stos
inc
js
pop
insl
mov
cmp
ljmp
mov
cmp
addl
adc
test
mov
leave
cmpsl
popf
xor
push
sbb
or
jmp
push
sahf
pop
iret
jae
sbb
mov
inc
mov
sbb
push
aaa
mov
js
sub
fsub
or
nop
push
fisubl
mov
scas
dec
jns
cld
pop
and
xchg
inc
adc
iret
push
push
mov
add
mov
fsubl
jbe
mov
scas
aad
das
mov
popf
xlat
or
dec
aad
lahf
xchg
jle
push
xlat
cmp
pop
xor
daa
adc
pop
mov
pop
js
orb
jmp
repz
popf
fldl
nop
pop
pop
mov
rolb
scas
cmp
sub
jo
jg
cmp
lret
leave
pop
mov
jmp
in
mov
mov
inc
out
fstl
xor
jmp
mov
and
icebp
addl
dec
jl
shl
mov
lods
cmc
test
dec
gs
pop
stos
pushf
scas
inc
dec
jo
jecxz
push
jge
mov
rcrb
pop
jecxz
int
out
push
and
negb
jo
adcl
cmp
loop
jns
sub
popf
xor
mov
jbe
dec
adc
orb
mov
lock
and
dec
sahf
mov
dec
fsubrs
imul
out
xor
pop
jge
pop
mov
daa
lret
xchg
sti
sbb
push
je
xchg
imul
xor
das
push
mov
daa
inc
and
cmp
xchg
or
test
inc
xchg
lcall
dec
ja
pop
pop
xchg
cwtl
ficoml
sub
js
pushf
subb
scas
dec
lea
mov
out
arpl
xor
sub
je
test
cli
cmpl
adc
and
lahf
dec
psrlw
pop
and
or
mov
push
cmp
jmp
aas
xchg
or
add
lret
inc
dec
cmp
mov
xchg
les
cwtl
fadds
imul
dec
fistpl
pop
sub
xor
cwtl
pusha
jb
loope
arpl
pushf
rorb
sbb
xorb
shll
faddl
pop
fadd
cmp
mov
daa
pop
or
jbe
out
fstl
push
mov
scas
xchg
lret
dec
enter
sub
inc
mov
cmp
lods
cmc
push
int3
inc
mov
push
mov
and
repz
popa
lods
mov
test
popf
adc
outsb
jmp
xchg
rcrl
jno
add
mov
pop
add
and
jb
pop
lock
cmc
pop
sbb
andps
movsl
xor
dec
adc
push
sahf
sbb
add
lods
add
cmp
dec
dec
in
or
inc
cwtl
dec
inc
mov
fs
jp
mov
add
jae
jl
mov
and
mov
xor
push
shr
dec
mov
lret
les
sbb
out
push
enter
loope
fistl
cs
int
mov
or
enter
adc
pop
lret
cmp
xor
fcmovnu
clc
push
pop
icebp
mov
push
push
xchg
testb
adc
xchg
sbbl
loopne
js
and
jno
lock
adc
add
inc
hlt
fldl
mov
fwait
inc
cs
out
movsb
xchg
arpl
shlb
dec
shll
adc
xchg
outsl
imul
ret
mov
cld
or
insl
add
nop
negl
push
and
or
pusha
movsb
dec
mov
cmp
jp
jno
xchg
dec
cmp
addr16
mov
daa
xor
lret
cmpb
push
sub
pop
jle,pn
and
jmp
pop
dec
adc
inc
aaa
mov
sbb
jl
mov
leave
inc
pop
push
cli
mov
rorb
lahf
add
imul
mov
sahf
stos
adc
rorb
push
lcall
or
aad
push
add
jmp
lods
cld
xor
pop
mov
setp
into
jp
sahf
jne
mov
jecxz
xchg
int
adc
movsb
cmp
out
adc
mov
test
into
nop
pop
sub
test
rolb
nop
int
lods
cmp
inc
cmp
lods
and
pop
in
xor
dec
mov
lods
prefetch
in
pop
xor
jge
pop
adc
test
dec
mov
addb
popf
ljmp
push
dec
pop
and
mov
imulb
and
fnstsw
repz
mov
push
mov
std
mov
test
xchg
xor
loop
popa
hlt
xchg
mov
cltd
lret
and
scas
cmp
xor
dec
jne
xor
rolb
enter
and
in
mov
pop
jns
lret
or
push
cld
sbb
sbb
mov
mov
push
js
or
xchg
movsl
jb
pop
lcall
int3
pop
aad
and
mov
jnp
jo
inc
adc
jno
adc
mov
xchg
out
out
jnp
jo
xor
cld
jb
nop
into
push
inc
jle
xor
sub
popf
mov
fldt
push
jge
fucom
push
insb
push
lcall
pop
mov
and
lahf
sub
mov
pushf
dec
movsl
mov
mov
pop
adc
bound
scas
jl
ss
mov
mul
fucomip
xchg
dec
cld
mov
pop
add
cmp
and
xchg
xor
add
sbb
and
out
stos
adc
xchg
les
fs
les
inc
push
cmc
jp
test
or
jge
aam
fsubl
and
push
cmpsb
fcomi
mov
pop
mov
inc
xchg
mov
jns
call
scas
stos
jno
jo
sbb
cmc
cmp
sub
jae
popa
inc
xchg
pop
xchg
scas
rorb
lret
push
cmp
add
mov
int
xor
movsl
sub
pushl
xchg
jne
or
test
mov
jl
push
lock
add
shl
xchg
jo
push
inc
pop
aas
dec
sub
jg
adc
cltd
popa
fnstenv
fisubl
pop
popf
ret
or
lea
jb
mov
mov
and
nop
call
mov
lods
pushf
mov
inc
adc
shlb
mov
xchg
fcoms
test
dec
imul
inc
jp
or
jle,pn
or
popa
das
jle
xchg
js
add
cmp
fdivl
bound
fists
cmpsl
insl
mov
or
or
or
notl
pop
pop
dec
add
ret
daa
stos
mov
ds
xchg
flds
dec
inc
out
rcll
imul
xor
add
dec
ret
pusha
lahf
out
jne
pop
je
inc
pop
xchg
xchg
cmpl
and
cltd
inc
jnp
nop
in
ret
cmpl
add
sbb
or
mov
xchg
fcmovb
stos
push
arpl
jno
mov
inc
jno
repz
aaa
outsb
and
insl
repnz
xchg
ja
add
mov
pop
stos
dec
imul
mov
mov
mov
ljmp
ljmp
in
or
mov
sbbl
or
aam
adc
mov
pushf
std
push
sahf
ret
pop
shl
xchg
jne
nop
jmp
xchg
pop
popf
lods
dec
daa
pop
xor
pop
jae
aad
mov
cltd
aam
pop
lahf
push
popa
push
push
lods
add
ret
stos
mov
mov
push
popf
adc
inc
in
dec
push
mov
cmp
dec
pop
adc
adc
sahf
js
jns
stc
inc
and
dec
jne
push
lret
xchg
mov
arpl
cmpb
scas
add
or
or
inc
bnd
and
cmpsl
ret
xlat
pmaddwd
test
into
push
jne
cmp
cmp
addr16
or
adc
pop
jp
xchg
je
insb
orl
xchg
out
mov
fdiv
insl
jl
mov
push
sarl
mov
fldenv
rol
pop
mov
leave
out
hlt
scas
cmp
xchg
or
push
popa
arpl
call
stc
xchg
sub
out
cli
push
movsb
stc
mov
inc
jnp
and
lret
ret
xlat
adc
mov
jae
sub
xchg
cmp
mov
xchg
loop
stos
insl
iret
fistpl
adc
sbbl
out
rcr
adc
xchg
fstps
sbb
mov
dec
ljmp
popf
stos
iret
dec
nop
test
dec
pop
imul
dec
add
dec
xchg
outsb
pop
cmpsb
arpl
sahf
outsl
dec
testl
mov
adc
mov
sub
or
add
pop
iret
push
enter
xor
cmp
scas
aas
xchg
mov
mov
mov
fistps
fildl
movsb
mov
dec
jb
add
test
mov
mov
nop
mov
jbe
pop
inc
sbb
addl
inc
sahf
lods
jecxz
lcall
sbb
mov
push
scas
test
or
mov
pushf
enter
les
ss
jle
cwtl
mov
int
ret
mov
clc
aam
or
lock
arpl
adc
push
ret
and
cmp
stos
push
cmpsl
mov
pop
jae
cmp
sub
test
fcomip
movsb
sbb
outsl
fwait
or
push
mov
pusha
dec
push
movsb
test
gs
es
cmp
xchg
ffreep
jecxz
mov
negb
movsb
or
test
js
insl
or
or
lock
mov
mov
xchg
orb
add
inc
shll
add
test
cmpsl
test
mov
daa
xor
cmp
jo
and
ss
ss
movsl
jg
sbbb
aas
in
xchg
xchg
cmp
xchg
mov
repz
fidivrs
inc
cld
mov
xchg
xor
inc
pop
adc
xchg
bound
mov
adc
and
out
faddp
mov
leave
je
aam
sbb
pop
push
pop
mov
and
and
dec
sub
jecxz
outsb
mov
add
inc
and
adc
imul
icebp
sbb
xor
jo
into
fsubrp
repnz
adc
mov
imul
test
stos
movsl
adc
add
push
jecxz
add
xchg
movsl
mov
lret
out
xchg
js
mov
and
fisubrl
or
out
pop
lods
xor
push
pop
jg
pop
push
cli
shrl
jne
pusha
bound
jg
fnstenv
out
cltd
cmp
fwait
out
cwtl
leave
inc
mov
sub
lods
dec
rorl
out
das
mov
mov
jnp
jecxz
pushf
bound
imul
pop
mov
mov
mov
and
cmp
jecxz
les
xchg
fcomps
lods
pop
cmpsb
scas
fnstenv
jmp
dec
fwait
imul
scas
xchg
jg
pop
decb
pop
emms
xchg
dec
mov
push
or
test
mov
std
sarb
xchg
or
lea
test
push
inc
mov
mov
mov
mov
test
rorb
fidivrs
into
xor
sahf
pusha
int
or
lret
push
int
dec
repz
js
push
inc
jns
xor
dec
je
dec
aaa
add
add
xor
jg
lret
lmsw
and
mov
cmc
jecxz
mov
hlt
notb
stc
push
mov
inc
rcl
jno
pop
and
mov
pop
xchg
aas
and
xchg
jb
out
or
outsb
adc
test
xchg
pop
mov
imul
xor
sbb
jo
dec
or
sahf
adc
shll
aad
pop
jns
and
shl
pop
lcall
mov
stos
xor
adc
xchg
sub
dec
ljmp
push
inc
adc
xchg
xorb
or
adc
sub
popa
adcb
insl
mov
test
mov
pop
xchg
push
cltd
push
mov
dec
push
xchg
push
leave
xchg
repnz
cmpsl
xchg
test
xchg
aam
xor
test
fldt
fisttpl
xor
xor
mov
fdivs
add
fdivrs
sub
test
das
adc
push
and
test
daa
pop
bsf
js
mov
dec
je
mov
xchg
mov
jno
cmp
mov
cmp
mov
inc
fcompl
mov
sub
xchg
rcll
mul
fisttpl
pop
adc
mov
gs
sbb
mov
add
inc
dec
xchg
sbb
dec
imul
pushf
fstps
fdivrl
lcall
inc
fildl
rcl
mov
stos
dec
je
mov
or
adc
add
xor
mov
enter
mov
mov
adc
add
scas
call
sbb
push
adc
loop
hlt
ret
test
lds
flds
jmp
pop
xchg
inc
sub
lahf
add
fistl
shrb
mov
test
enter
dec
pop
adc
popf
scas
jmp
xchg
rcl
in
pop
incb
cmp
fwait
jns
int3
sub
pushf
fimuls
daa
inc
sbb
fsts
jp
les
mov
lea
test
lret
mov
sbb
dec
xchg
fwait
ja
iret
rcl
mov
sbb
mov
lret
adcb
cmpl
inc
mov
mov
dec
enter
mov
inc
sbb
divb
xchg
pushf
ljmp
and
add
xchg
ds
std
mov
pop
jo
cmc
iret
rolb
lahf
popa
push
mov
jecxz
inc
rcll
xor
dec
xchg
or
dec
jle
nop
movsl
mov
jge
gs
loopne
sysret
out
mov
subl
enter
dec
ret
loope
xchg
imul
mov
test
xchg
push
je
rorl
inc
mov
jne
loop
pop
aaa
je
push
int3
add
mov
fimull
lret
aam
xor
test
stc
int3
insl
add
pop
cmp
sar
mov
sub
mov
pop
inc
cmp
mov
js
loop
filds
outsb
sbb
push
xlat
jge
push
push
ja
add
add
cmp
dec
xor
push
in
inc
scas
in
sub
push
scas
repz
mov
push
dec
push
in
xchg
inc
cmp
sub
adc
pop
int3
jge
pop
movsl
dec
or
aam
sti
cs
push
and
je
mov
adc
sbb
ss
rcrb
add
iret
inc
sahf
fdivs
pop
daa
icebp
scas
fldl
adc
pusha
xchg
push
cmp
mov
or
pop
sbb
sub
mov
mov
mov
pop
cli
imulb
sbb
aas
jg
mov
xchg
or
sbb
lret
cs
ret
lea
adc
or
adc
mov
scas
pushf
cmp
xchg
pop
mov
sub
add
mov
adc
into
sub
mov
scas
iret
je
dec
lods
rol
fimull
pop
rclb
cmc
adc
ret
lret
pop
test
repz
fmull
mov
sarl
repz
iret
mov
bound
fwait
das
xchg
xchg
shl
xchg
pusha
inc
inc
jp
nop
ffree
je
mov
cmp
xchg
dec
imul
mov
das
push
dec
mov
mov
insl
sbb
jno
pop
mov
ss
fdivs
adc
mov
mov
push
stc
and
ret
rcll
sbb
cmpsb
dec
jl
xchg
mov
sub
xchg
enter
rclb
sbb
sti
dec
test
cli
xchg
packsswb
xor
cmpsl
pushf
mov
inc
leave
sub
lcall
mov
pop
rcll
mov
repz
lcall
jae
mov
mov
jg
cmpsl
mov
movsb
enter
pushf
inc
mov
push
cmp
ficoml
testl
in
sbb
xor
les
fisubrs
xor
xchg
add
stos
imul
mov
orl
pop
pushf
push
push
sbb
sub
cmp
and
dec
mov
sub
test
leave
xchg
push
or
or
repz
cmp
jl
inc
aam
mul
call
push
mov
cmpsl
test
or
push
int3
adc
and
cs
add
aad
dec
add
aam
es
xchg
fimull
sub
or
daa
mov
pop
sub
xor
mov
jge,pt
int3
mov
je
subb
lcall
js
mov
mov
sbb
xor
and
fwait
xor
fwait
or
push
orl
dec
push
xchg
jecxz
enter
lcall
push
loopne
cmp
mov
push
cmp
lahf
out
enter
cmp
inc
rcrl
out
rolb
pop
inc
dec
lcall
lret
stc
out
and
ss
push
lds
xor
or
mov
pop
sub
xchg
fldenv
pop
repz
xor
insb
or
push
jg
or
jb
pop
dec
cmp
shl
dec
aas
sub
jne
push
mov
xor
pop
push
pop
add
push
xor
inc
cld
aas
push
sub
jg
jmp
cwtl
jecxz
insb
lcall
roll
rorl
sub
je
pop
daa
test
inc
xor
mov
in
arpl
jae
dec
les
pop
bound
imul
sbb
dec
addr16
dec
out
int
fsubl
mov
jmp
outsl
lea
in
inc
or
xlat
in
push
dec
scas
mov
mov
push
dec
push
dec
pusha
cmp
sbb
lock
push
ret
js
push
shl
arpl
pusha
sub
call
cmc
call
add
dec
adc
sub
jl
notb
sub
xchg
stos
inc
push
shrl
mov
mov
jb
or
hlt
adc
dec
xchg
jnp
xchg
aad
mov
sbb
lods
pop
sbb
inc
add
push
add
xor
pop
pop
jb
xor
xchg
inc
xchg
test
lcall
jnp
pop
mov
ja
mov
clc
jmp
sub
das
mov
jg
fadds
movl
or
inc
dec
sbb
fisttpl
fsubrs
sub
and
outsb
and
dec
repz
and
stos
sub
out
or
movsl
sub
cld
pushf
push
xlat
adc
or
divl
insl
mov
addb
out
lea
mov
sbb
into
and
out
adc
xchg
movd
loop
xchg
push
mov
aaa
out
rorb
add
scas
int3
inc
xorl
outsl
outsb
sbb
xchg
test
add
call
loop
or
xchg
jge
and
xor
idivl
mov
xchg
imul
and
xchg
add
std
push
add
xchg
enter
sub
dec
outsb
mov
test
imul
aam
add
ss
or
add
ja
jge
or
add
fld
add
and
jns
std
lock
fildll
mov
nop
xchg
xchg
jmp
add
cmc
push
in
mov
inc
jge
dec
pop
xor
stc
or
xlat
jecxz
clc
lret
add
repz
test
in
pop
das
push
fnop
dec
dec
leave
cmp
daa
xor
mov
in
je
jmp
enter
push
mov
mov
lea
mov
or
add
lcall
into
mov
mov
jmp
add
mov
dec
or
test
out
adc
cltd
mov
stos
lret
sbb
cmp
arpl
lcall
pop
cmp
lret
fnstsw
stos
mov
aad
push
in
test
adc
sub
mov
sub
jge
mov
mov
daa
ds
add
dec
sub
imul
pinsrw
xchg
repnz
iret
dec
int
add
movsb
dec
push
outsl
mov
mov
xchg
and
ret
or
ds
sahf
ljmp
push
aam
stos
mov
push
mov
or
mov
pop
arpl
enter
cmpsl
adc
std
rcr
adc
jbe
push
sub
repnz
nop
pop
dec
mov
jns
add
shl
clc
jb
hlt
fdiv
jns
cltd
pop
cmp
aad
xchg
into
fldenv
repz
inc
sub
out
stos
ficomps
inc
fisubs
xor
add
std
out
cmp
int3
cmp
pop
add
in
inc
sbb
mov
xor
loop
and
add
sub
fwait
sub
jp
push
mov
fsubrl
repz
mov
push
arpl
cli
adc
or
jbe
es
pop
sub
test
cltd
leave
fidivl
cmpsl
rolb
adc
incb
and
push
push
stos
mov
xchg
imul
dec
cld
sahf
popa
and
test
mov
in
pop
xor
dec
loopne
mov
or
jo
jbe
dec
das
mov
mov
lret
inc
cmp
and
test
popf
mov
mov
adc
add
incl
push
mov
adc
popa
mov
dec
pop
ret
aam
xor
ret
push
scas
cltd
lds
xchg
fldt
lret
jl
pop
fbstp
repnz
fists
mov
rol
jp
mov
push
sub
cltd
xchg
push
jno
lods
mov
mov
inc
push
adc
or
shrb
leave
out
fdivl
mov
or
gs
sub
cmp
and
or
inc
into
push
movsb
lea
mov
test
and
aas
enter
bound
dec
movsb
dec
jnp
movsl
lods
or
nop
aas
cmp
inc
xor
popf
and
out
in
add
mov
cmpsb
mov
ret
adc
shr
outsb
cmpl
add
dec
xor
popa
jmp
xchg
mov
arpl
push
stc
ja
repnz
jge
fimull
mov
imul
imul
dec
adc
mov
mov
aaa
fwait
push
xor
cwtl
jb
xchg
and
mov
lea
sbb
jnp
out
pop
lods
add
cltd
dec
cltd
dec
nop
mov
or
xchg
sub
nop
testl
jl
push
adc
dec
cmp
push
sbb
xchg
inc
rcr
insb
xchg
pop
adc
in
or
aaa
ret
or
jg
ja
scas
scas
adc
sbb
jecxz
and
pop
and
push
les
dec
sarl
mov
stc
mov
dec
or
inc
push
or
sub
popf
ret
scas
orl
mov
stos
xor
sahf
push
fimull
test
lods
lcall
sub
test
rcll
sti
jle
out
push
movsl
pushf
or
push
lret
mov
push
mov
and
pop
lret
ja
idivl
jo
mov
jl
iret
cmp
pop
std
adc
push
xchg
push
push
and
ret
in
ficomps
mov
fsubrl
sarl
xchg
lods
inc
jmp
adc
and
into
fcompl
int3
mov
cmp
mov
lahf
test
outsl
cltd
mov
jg
dec
dec
pop
sub
mov
aas
int
pop
cli
mov
cld
test
push
xor
hlt
aas
shlb
sbb
push
xor
dec
notb
repz
xchg
jb
xchg
xor
xor
add
xorb
shll
mov
loop
sbb
shl
packssdw
and
jae
aaa
add
inc
adc
lods
sbb
cli
dec
lahf
and
repz
insb
or
cltd
cwtl
push
or
std
mov
imul
jp
movsl
mov
out
push
and
cmp
or
and
test
les
sub
inc
loopne
insl
mov
mov
xor
mov
aas
leave
lods
dec
nop
push
sarl
xchg
loop
shl
mov
dec
rolb
js
movsl
daa
nop
shl
loope
sub
das
push
loope
sarl
xchg
sbb
mov
xchg
mov
and
mov
lds
jmp
cmp
pop
scas
mov
stc
shrb
or
in
inc
adc
push
jae
dec
mov
inc
push
cmp
lods
cld
or
movsb
xchg
mov
lock
xorl
and
push
int
arpl
enter
pop
mov
push
imul
dec
rclb
lds
pushf
loop
pop
sbb
jo
mov
sbb
lahf
fs
imul
lds
pop
xchg
pop
jg
arpl
idivb
mov
xor
jo
push
aaa
pushf
repz
pop
lock
mov
fldcw
movsl
xchg
lahf
mov
stc
or
add
aad
sub
ror
ljmp
sub
mov
dec
sbb
mov
add
mov
jae
jg
popl
jne
aas
inc
fists
push
rol
or
add
push
mov
ror
nop
testl
fs
aam
stos
mov
dec
ret
push
xchg
sbb
add
push
push
lgdtl
jae
xor
jmp
push
mov
xchg
pop
js
pushf
adc
mov
xor
fidivrs
jg
fmuls
mov
adc
scas
cmpsl
iret
roll
or
js
daa
mov
inc
repz
adc
mov
push
pop
out
inc
leave
sbbb
xchg
movsb
andb
mov
and
js
jb
and
test
sub
inc
jb
lock
imul
mov
ljmp
cmp
xor
lahf
cmpsl
xchg
push
add
push
scas
cwtl
mov
aam
lea
lock
mov
cmp
mov
mov
dec
or
mov
out
jns
out
jb
out
pop
ret
pop
pop
pusha
shll
imul
fistps
inc
sti
mov
jnp
mov
xor
cmpsl
lods
xlat
mov
jno
push
loop
jmp
int3
std
decl
test
pop
and
pop
rcll
test
test
fidivs
fldcw
adc
shlb
jp
pmulhuw
jne
punpckldq
adc
ret
and
sub
pop
js
ret
fs
sbb
push
std
dec
pop
xchg
stos
dec
popl
movsl
in
sbb
mov
insl
enter
mov
sub
sarl
lea
shlb
pop
je
pop
rcrb
xor
xchg
dec
je
in
or
scas
xor
in
push
inc
and
cltd
xchg
ret
lock
pushf
movsb
ret
hlt
lds
dec
andl
aam
nop
xlat
push
push
mov
arpl
rclb
jg
fnstsw
call
sahf
sub
ds
aam
nop
pop
imul
call
cld
outsl
rcr
lock
mov
add
pushf
adc
cmp
lea
sahf
out
mov
xchg
repz
sbb
sti
out
lret
jb
insb
je
scas
lods
add
jg
daa
imul
mov
movsl
jmp
mov
pop
lret
inc
adc
stos
inc
mov
xor
jge
sti
subb
lahf
inc
sbb
dec
push
or
xchg
test
pop
mov
cwtl
xchg
sarb
xchg
inc
js
jmp
jno
pop
xchg
sbb
outsl
cmp
mov
loopne
test
outsb
pop
or
dec
dec
rclb
outsl
addb
pop
cmp
push
icebp
jno
aad
inc
mov
mov
pop
push
mov
lret
shlb
leave
push
outsb
mov
iret
mov
outsb
lret
imul
fstpl
xchg
inc
pop
or
popa
mov
sbb
mov
test
cmp
cld
pop
aas
xor
aam
adcl
scas
xchg
pop
test
jecxz
pop
int
jecxz
xor
cs
add
stc
adc
dec
daa
mov
call
leave
int3
leave
cmp
fcmovnbe
sub
or
cmp
pop
add
enter
addr16
pop
sub
mov
lcall
inc
mov
out
mov
xor
repnz
fdivl
inc
insl
es
pop
ffreep
or
xchg
xchg
jge
mov
loop
cmp
jb
xchg
imul
inc
gs
and
add
aad
add
push
mov
loopne
fmull
js
fsub
lcall
jns
jns
mov
adc
mov
outsb
leave
sub
xchg
popf
arpl
movsb
pop
lock
int3
fldt
mov
or
mov
and
aam
mov
sub
adc
lret
fstpl
adc
rolb
scas
sbb
ds
mov
add
enter
cmpsl
dec
ja
xchg
cltd
mov
pop
test
pop
dec
sub
jp
xorl
push
iret
fimuls
loopne
jg
add
mov
pop
outsb
mov
arpl
push
cld
loope
xor
add
cmp
fnstenv
pop
xchg
mov
out
push
test
fwait
aam
cmp
adcl
mov
or
ljmp
js
mov
or
idivb
jmp
mov
jecxz
pop
dec
arpl
and
inc
cld
pop
test
outsl
daa
pop
roll
popf
xor
and
jmp
notl
xor
repnz
mov
test
cs
int
daa
pop
pushf
fldt
mov
sbb
pop
xchg
add
shlb
ja
adcb
fstpt
lret
int3
jg
lods
inc
inc
out
shlb
jo
ss
adc
das
insl
push
fstps
push
push
dec
cs
sbb
pop
fbstp
subl
pop
mov
push
mov
outsb
rolb
pusha
mov
lahf
out
or
sbb
pop
lcall
and
or
push
imul
dec
je
mov
imul
fsubrs
inc
adcb
push
subps
add
fisubrl
shl
rcr
inc
inc
out
iret
test
pop
cs
and
mov
fs
or
xor
sub
inc
mov
fisubs
pushf
jecxz
adc
adc
push
lret
or
inc
mov
xchg
xchg
jg
movd
jmp
cmp
xorl
dec
mov
cmp
arpl
scas
mov
ret
inc
jne
and
js
fcompl
jne
fisttps
ret
dec
mov
out
push
mov
mov
jp
pop
sti
xchg
in
mov
das
or
dec
sub
cmp
test
mov
xchg
test
les
xchg
jg
push
adc
pop
test
mov
rolb
loopne
sbb
mov
cmp
lods
add
mov
and
loopne
imul
in
test
das
bound
mov
jns
push
fsubl
mov
xchg
rcr
call
lret
pushf
pop
mov
stos
mov
dec
pop
in
push
dec
sub
dec
pop
in
lods
test
mov
adc
add
dec
insb
mov
adc
lea
test
mov
fdivs
icebp
mov
mov
cmp
ja
cmpl
mov
xchg
imul
sub
sub
add
push
popf
mov
cmp
jae
dec
fs
fidivs
call
aas
outsb
popf
mov
sub
mov
loope
xchg
enter
or
cmp
push
aaa
mov
cwtl
adc
lods
mov
or
rcr
in
fisubrl
dec
or
cmp
stos
and
sub
jle
sub
push
loope
pop
jae
ret
insb
popa
stos
mov
packssdw
int3
test
in
mov
adc
movsl
dec
rcr
inc
fiaddl
jg
fldt
jmp
mov
in
sbb
pop
sub
mov
stos
push
inc
sbb
lahf
add
rcrl
ret
push
jae
mulb
in
cmpsl
dec
xchg
push
sbb
aas
xchg
ja
fimuls
xor
sbb
adc
sbb
mov
dec
or
stc
pushf
mov
mov
jg
leave
xchg
jmp
popf
pop
mov
mov
test
xchg
pop
test
insl
adc
nop
or
mov
push
mov
mov
pop
mov
scas
dec
xorb
andb
sbbl
mov
pop
sub
fwait
pop
xchg
xor
mov
push
pop
movsb
adc
test
std
pop
mov
adc
rcr
inc
dec
push
sbb
daa
push
adc
add
sbb
cld
xchg
sbb
je
or
jmp
push
mov
jecxz
dec
movsb
insl
testl
outsb
cmovl
add
mov
sub
fidivl
sub
ficoml
sub
or
adc
fsubr
aam
fcoml
aad
fsubl
pop
imul
mov
jp
mov
push
mov
dec
sbb
fidivrl
sub
fcmove
sti
dec
inc
ret
nop
mov
into
push
jo
jp
jo
jp
jo
jnp
push
ss
push
rcll
lahf
imul
lahf
outsl
fistps
iret
jge
push
pop
jle
push
mov
test
lods
mov
dec
or
xchg
mov
outsl
sbb
outsl
push
jnp
insl
xchg
inc
or
test
loopne
lods
stos
mov
stos
inc
mov
pop
dec
mov
daa
dec
lret
adc
mov
dec
scas
xor
sarb
mov
jg
subl
mov
fcmovnbe
and
lods
lahf
rcr
je
insl
daa
imul
int3
test
lock
mov
clc
or
jae
ljmp
ret
xchg
aas
les
jg
push
cmp
push
add
imul
xchg
mov
aas
jns
fimull
adc
and
push
daa
pop
stos
or
in
fidivl
sub
enter
mov
mov
js
mov
aad
xchg
sub
mov
icebp
push
int
cwtl
pop
aaa
and
jecxz
es
hlt
xor
ljmp
cmp
test
mov
xchg
sahf
pop
pop
pop
lods
mov
out
jle,pn
lret
sbb
adc
sbb
mov
adc
sar
inc
movsl
in
pop
sbb
fcomi
adc
jae
add
pop
jbe
sub
enter
push
sbb
fiadds
int
inc
add
mov
sub
test
lods
jmp
xchg
push
out
jne
leave
out
xchg
mov
and
andl
adc
xchg
push
and
add
stos
clc
sahf
sbb
push
mov
sub
fucomi
pop
ss
dec
shl
mov
sub
js
les
scas
lahf
dec
scas
and
pop
adc
int
cwtl
mov
insl
dec
add
ljmp
sub
ret
xchg
or
mov
lret
mov
push
imul
daa
and
pushf
mov
stos
mov
mov
xchg
cltd
jecxz
adc
dec
cmp
out
mov
jge
add
inc
pusha
movl
push
pop
lfs
in
leave
mov
ss
pop
and
out
and
sbb
mov
sub
jl
and
sbb
inc
hlt
adcb
popf
and
scas
add
and
inc
test
push
je
pop
fwait
shll
jo
add
fcoms
ds
mov
xchg
lret
das
rorl
jnp
xor
movsl
lret
mov
lcall
sbb
insb
lods
xor
pop
xor
les
mov
stos
frstor
inc
push
pusha
cmp
add
push
cmpsl
scas
jge
leave
fs
sbb
in
add
movsl
popl
jnp
lcall
adc
in
addb
pop
fisubl
mov
pop
inc
adc
jbe
dec
idiv
mov
outsl
sbb
adc
xchg
cs
push
jle
jmp
jns
sbb
pushf
inc
add
cmpb
xchg
outsb
cmpb
or
cmp
mov
cmp
pop
testb
mov
cmp
xchg
mov
xor
in
stos
sub
push
cmp
mov
push
ljmp
pop
push
dec
or
or
xchg
in
push
push
xchg
push
cltd
or
int3
or
or
leave
push
mov
call
fistpll
xlat
or
cwtl
xchg
or
movsl
mov
fcom
movsb
in
jmp
pop
or
xchg
jne
sbb
pop
test
pop
lea
jb
pop
jnp
in
jns
not
subb
xor
xchg
lret
cmpsb
pop
gs
sub
popa
lret
xchg
sarb
sbbl
aaa
insl
jae
add
addps
push
shll
dec
jns
rcrl
sbb
and
add
and
push
inc
xor
test
lahf
add
mov
jge
pop
neg
int3
dec
pop
mov
xchg
or
pop
inc
adc
inc
icebp
push
xchg
xchg
not
pop
dec
pop
cmc
pop
jno
mov
sub
cli
jae
mov
inc
dec
lds
sbb
out
pop
cld
dec
mov
and
in
or
mov
dec
pop
inc
pop
add
dec
mov
test
popf
test
cltd
mov
addr16
aas
xor
sub
add
inc
xchg
dec
scas
fldl
popf
push
mov
mov
lods
mov
fldl
jmp
jne
loopne
arpl
arpl
push
dec
xchg
inc
popa
int
cmpsl
push
sub
scas
push
cld
jecxz
mov
mov
and
popf
mov
cmpsl
pop
out
shlb
sbb
pop
inc
mov
or
xor
inc
xor
mov
nop
addr16
sbb
addl
cld
xchg
orl
das
out
mulb
mov
dec
cli
inc
mov
lea
mov
sub
or
in
add
loope
in
rorb
je
or
sbb
cmp
sub
dec
xor
xchg
push
gs
movsl
inc
ficompl
das
sahf
daa
rclb
fiaddl
push
test
inc
push
mov
mov
or
sbb
ret
push
fbstp
cs
adc
mov
lods
das
mov
arpl
xlat
bound
or
mov
mov
adcb
pop
inc
add
test
mov
lea
xor
sbb
jae
ljmp
lods
pop
push
or
repz
je
dec
les
jl
int
xor
call
in
xchg
pop
lret
xor
inc
mov
lret
aas
ja
ljmp
mov
aas
pop
or
mov
mov
sub
xor
movsl
imul
jo
test
push
repz
repnz
shl
cmp
xchg
inc
or
mov
out
ljmp
add
dec
daa
arpl
dec
dec
inc
jg
shll
or
inc
dec
es
fistps
mov
and
in
jmp
loop
mov
arpl
sbb
fbld
ret
test
push
push
pop
imul
mov
or
jae
repnz
rcll
mov
mov
adc
xor
cli
fisttps
ror
mov
jns
outsb
sub
les
imul
fdivrl
add
call
out
inc
fstps
push
fcmovbe
test
dec
stos
ljmp
dec
das
xchg
mov
pop
pop
cmp
inc
scas
pop
or
nop
jns
mov
dec
flds
fistps
or
sub
pop
adc
mov
xchg
cmpl
push
pushf
push
jae
into
sub
popf
int
push
xchg
dec
rcr
dec
or
outsb
je
adc
insl
stos
out
subl
mov
imul
dec
dec
lods
push
sahf
cli
stos
cmpsl
sbb
mov
mov
andb
push
iret
fmul
jecxz
out
dec
ret
bound
sahf
psubsb
insl
in
jbe
push
loope
data16
scas
cmp
push
popf
adc
adc
inc
push
movsl
outsb
sti
lahf
cmc
and
popa
push
mov
imul
jle
flds
or
addl
pop
outsb
mov
sbb
pop
sbb
cmp
test
pop
push
scas
xor
xchg
mov
sub
cltd
cmp
or
or
aas
orl
push
xchg
repz
xchg
sub
dec
fisttpll
push
dec
xor
inc
inc
sbb
aad
mov
or
and
xor
rcrl
push
sub
cmc
popa
sahf
or
xlat
pop
add
sbb
sbb
jle
lea
iret
push
add
stos
dec
pop
xor
or
xchg
push
mov
mov
or
cli
lds
push
dec
imulb
and
aaa
dec
outsl
sbb
xchg
lock
jae
fwait
imul
je
xorb
pop
mov
fnstenv
add
adc
dec
xchg
imull
cltd
test
repnz
sbb
add
xchg
adc
push
inc
sub
mov
and
cmc
mov
popa
inc
mov
and
pop
mov
sahf
loop
fiaddl
test
in
cltd
in
cltd
fidivs
inc
inc
shlb
adc
push
in
pop
jbe
sbb
addb
mov
lcall
cs
or
xchg
mov
inc
sbb
callw
mov
inc
icebp
dec
jl
sub
push
jae
xor
sbb
cmpsb
xchg
in
pop
lahf
inc
insl
mull
mov
adcl
aam
mov
inc
pop
pop
loope
iret
dec
test
inc
hlt
xchg
js
aas
and
fsubrs
out
cmpsl
mov
repz
jb
xorb
out
inc
lds
cmp
inc
lds
mov
mov
cltd
pop
loop
dec
mov
sub
xor
out
int
pusha
cs
lahf
mov
sahf
lea
sbb
mov
dec
dec
insb
lcall
adc
mov
inc
jnp
cmp
cmc
or
add
in
xchg
cld
cmp
test
or
add
pop
enter
daa
loop
mov
xlat
adc
fiadds
cmpsb
pop
insl
cvtpi2ps
pop
pop
mov
out
mov
lock
mov
sub
fistl
or
add
das
add
imul
mov
pushf
hlt
add
jle
mov
xchg
and
cli
stc
cs
nop
xor
subl
mov
and
pop
lret
sahf
adc
push
stos
test
jmp
ljmp
pushf
fidivrl
pop
out
std
sti
push
mov
xchg
mov
aaa
mov
out
push
push
sahf
xchg
push
mov
inc
xchg
cwtl
popa
cmp
jmp
push
neg
nop
jnp
ja
rorl
pop
xor
mov
mov
and
pop
scas
sub
sbb
test
lret
push
mov
ds
lds
fimuls
and
mov
or
and
push
popa
nop
lods
dec
pop
xorl
sub
pop
leave
mov
out
cld
and
cmp
mov
mov
dec
inc
cltd
ret
adc
pushf
paddd
cli
sub
in
xchg
fiadds
jno
pushf
mov
int
push
in
ljmp
outsb
sbb
xchg
adc
jmp
inc
stc
loop
shrl
adc
lret
stos
arpl
mov
xchg
inc
mov
sub
mov
das
mov
fmuls
out
inc
xchg
xchg
mov
sub
in
in
jg
scas
pop
add
pop
and
lods
in
enter
push
out
dec
xchg
addr16
lret
nop
lahf
pop
mov
xor
fdiv
outsb
add
mov
adc
dec
cmpsb
cmpsl
xchg
dec
mov
test
dec
les
test
jnp
insb
fbld
pop
and
lret
xchg
and
jns
xorl
mov
mov
outsl
cld
fsub
std
loope
inc
xchg
or
shl
aaa
repz
in
out
repnz
xchg
lahf
pop
lods
xlat
or
push
mov
xchg
aam
rorb
mov
ja
cmpsb
call
insb
pop
insl
cmc
fldl
push
sahf
push
scas
add
and
jns
jge
sbb
cmp
into
aad
push
push
dec
hlt
inc
outsb
pop
pop
nop
shlb
push
sbb
jnp
es
jbe
dec
dec
and
jno
lahf
lods
pushfw
mov
jbe
and
orl
arpl
insl
in
cs
xor
adc
cmc
test
push
popa
and
fnstenv
jg
cli
pop
pop
mov
enter
out
lock
stc
cmp
jle
in
iret
jge
test
sub
xor
inc
mov
mov
lret
pop
sub
or
pop
push
leave
jge
lods
scas
mov
add
nop
cli
mov
cmp
aad
daa
pop
xchg
fs
sub
jb
sbb
jl
fstpl
xchg
stos
out
sbb
hlt
jmp
inc
mov
rclb
ds
adc
dec
or
adc
inc
pop
fdivs
lahf
sbb
cli
push
sbb
dec
imul
mov
ja
mov
lcall
push
movq
inc
fiaddl
cli
inc
popf
rclb
lds
mov
pop
push
push
dec
mov
cld
inc
adc
pushf
mov
imulb
loop
pop
mov
sub
repnz
mov
fimuls
fucomi
sahf
stos
aad
daa
int
aas
imull
inc
and
pop
in
mov
divps
pushf
xchg
rolb
pop
inc
pusha
dec
test
fisttpl
in
ljmp
fdivrl
fildll
push
mov
fcompl
push
and
stc
add
rcll
aas
push
inc
sahf
dec
lock
call
jp
and
xor
jmp
pop
mov
addl
inc
lret
adc
cs
call
xchg
adc
cwtl
ret
ljmp
sub
in
es
jb
adc
sub
iret
adc
popa
pop
sbb
cwtl
rcrb
xchg
lods
js
mov
test
jmp
imul
mov
mov
mov
aas
add
and
or
clc
out
sarb
sbb
dec
add
add
decb
fisubrs
mov
dec
rolb
aam
out
mov
shrb
popa
xor
mov
outsl
int
mov
sub
out
sub
pop
stos
mov
jbe
xor
xor
and
ret
pop
mov
repz
mov
inc
xchg
inc
or
or
outsb
out
mov
sti
xchg
rorl
jnp
loope
icebp
ret
outsb
inc
inc
repnz
fisttps
imul
mov
xchg
cltd
jecxz
xor
add
loopne
out
dec
or
aas
ds
sub
jecxz
rcll
loopne
hlt
scas
pop
bound
and
cmp
xor
cmp
push
jmp
xchg
sub
jnp
repz
fisubrs
nop
insb
lds
sbb
jmp
int3
mov
sub
or
jne
outsb
flds
or
rcll
fisubl
incl
xor
ficoms
testb
lock
sbb
loop
dec
leave
fnstenv
xchg
jg
iret
loope
bound
leave
and
outsl
jno
clc
xlat
pop
xor
mov
mov
clc
lcall
sub
jg
xchg
add
xor
pusha
sahf
cs
pop
mov
pop
addr16
adc
pop
movsl
xor
arpl
leave
jp
add
cmp
xchg
inc
or
and
and
mov
and
adc
orl
xor
addl
fdivrs
outsl
or
push
or
std
inc
adc
aam
add
push
dec
mov
jp
sub
inc
popa
mov
stc
mov
fldcw
mov
notl
lods
xor
pop
aad
xchg
sub
in
dec
addr16
inc
jl
clc
pop
push
popa
aam
fld
out
test
jp
jg
adc
pop
pusha
sub
xorb
outsb
addr16
cmp
add
or
shlb
subl
mov
ljmp
mov
cs
xchg
stos
push
nop
imul
ret
pop
repnz
pop
lret
sbb
xchg
xchg
push
sub
loopne
addr16
pop
jp
and
inc
and
push
or
push
lahf
mov
jno
jmp
push
push
or
aad
out
mov
mov
jo
shlb
in
lock
jne
popf
lahf
adc
sbb
stos
pop
lea
cmpsb
test
pop
jl
lea
pop
test
push
lods
mov
mov
insl
inc
xorb
and
add
mov
or
adc
orb
adc
int3
mov
xlat
int
nop
mov
iret
push
test
aad
lret
add
add
xchg
jno
fisttps
inc
ljmp
or
sub
xchg
jle
in
pop
xchg
and
loopne
mov
out
pop
movsb
fcoms
comiss
pop
xor
add
fildl
push
aaa
sub
ret
out
ret
leave
fisubrl
aad
scas
enter
inc
jmp
jbe
movsb
into
or
imul
mov
jg
jle
daa
xchg
xlat
push
push
or
data16
jne
mov
inc
adc
push
in
pop
sbb
xchg
xchg
inc
or
push
std
pop
nop
and
pop
cmpsl
xor
inc
inc
mov
sarb
xchg
or
and
loopne
stc
pushf
or
jecxz
jmp
lret
dec
mov
xchg
daa
rcr
lock
adc
or
pop
popf
lahf
cli
and
mov
jp
sub
jnp
dec
jae
push
or
test
push
mov
shrb
xchg
dec
or
mov
mov
mov
xchg
fimuls
mov
inc
leave
pop
stos
mov
jecxz
inc
push
in
inc
jbe
cwtl
sub
pop
add
xor
das
pop
jle
pop
and
sahf
push
lret
mov
fmuls
and
ds
dec
addr16
add
adc
pop
xchg
outsb
dec
into
mov
es
and
icebp
add
lret
sbb
or
rcrl
outsl
sub
movsb
cmp
mov
inc
sub
insl
andl
in
adc
outsl
xor
pop
and
fwait
mov
stos
cli
xchg
or
and
cmpsl
movd
popa
dec
cmp
ret
xor
mov
cli
movsb
xchg
or
pop
and
pop
jb
cwtl
xor
dec
jge
jle
xor
xchg
dec
pop
aam
jmp
pop
jns
ss
push
fnstcw
and
xor
mov
hlt
into
jmp
cwtl
sub
inc
xor
rorl
dec
int3
and
incl
int3
push
sahf
loope
xor
mov
pop
popf
in
push
mov
lcall
add
xor
fstpl
jl
inc
inc
mov
jnp
lahf
call
cmp
sbb
xchg
or
pop
sti
mov
sti
mov
add
mov
out
mov
sub
ljmp
jg
jp
and
roll
test
adc
push
adc
stos
hlt
ret
xchg
and
mov
or
cltd
scas
xchg
jl
lcall
push
jp
push
inc
add
flds
mov
std
dec
shll
jp
cmc
fstl
jo
movsl
inc
iret
ret
stos
test
movsb
push
push
stos
push
jo
iret
psllw
jl
cli
pop
mov
dec
dec
mov
push
jg
mov
mov
lods
loopne
cltd
bound
fstpt
xchg
movsl
pushf
out
and
scas
jmp
push
sbb
test
and
idiv
sub
test
cmpsb
pop
test
aam
jo
sub
fidivrl
inc
cli
int3
jnp
adc
jg
cmpsl
leave
pop
push
divl
nop
or
pop
pop
push
mov
push
inc
mov
cltd
fidivrl
sahf
mov
sbb
cli
ficoml
mov
test
dec
out
pop
xorl
mov
jg
push
xor
sub
jge
and
fsubs
push
in
pusha
jno
cmpsb
imull
jno
lds
inc
sbb
fmulp
mov
and
push
xchg
pusha
xor
ret
xchg
popa
xchg
push
ficomps
hlt
sarb
xor
dec
push
dec
pusha
dec
jmp
jmp
xchg
inc
repnz
loopne
jns
outsb
jg
movsl
outsl
pop
mov
pop
loop
and
dec
add
aam
loopne
pop
mov
orl
in
aam
xorb
jne
sbb
xchg
in
xchg
sti
sub
or
push
inc
jns
scas
insl
pop
adc
cmp
sbb
sbb
xchg
out
cs
pop
xor
xchg
jle
pop
lods
xchg
xchg
sbb
inc
mov
es
aas
mov
idivl
cmp
pop
outsb
xchg
mov
push
mov
mov
add
sub
push
cmp
xchg
stos
push
pop
scas
sbb
jg
push
mov
add
test
pusha
mov
inc
xor
dec
repz
and
loope
clc
pop
iret
jne
or
mov
sar
or
adc
sbb
jnp
mov
jg
ret
cmp
testb
fwait
adc
test
shrb
nop
jg
jmp
jmp
push
sub
sbb
fwait
es
orb
add
lods
adc
cmc
popf
push
push
clc
pushf
mov
adc
mov
scas
fwait
inc
pop
pop
xor
xor
fwait
adc
mov
mov
jl
jle
xchg
jg
inc
xchg
mov
outsl
cmc
xor
mov
mov
cli
sbb
leave
fildl
mov
call
orb
leave
into
push
jg
sub
pop
adc
fwait
ja
ss
lret
lahf
scas
add
jae
or
into
cwtl
push
andb
and
iret
ss
decl
scas
dec
out
or
data16
dec
pop
decb
inc
cld
stc
pop
mov
imul
adc
xor
and
or
test
push
push
aad
cwtl
unpckhps
mov
inc
ret
xor
jge
pop
leave
xor
jne
dec
push
out
mov
or
mov
push
xchg
push
xchg
scas
add
adc
or
mov
std
das
cmp
add
into
and
push
test
mov
push
xor
ret
push
fwait
pop
add
jno
lret
fdivl
or
mov
notl
call
ss
mov
mov
xlat
adc
ja
jae
mov
ljmp
imul
cmp
push
push
or
pop
test
pop
test
adc
or
call
jnp
push
fistl
dec
or
lods
and
test
outsl
xchg
into
push
pop
sub
stc
call
repz
xchg
push
pop
cltd
push
adc
dec
adc
xorb
sub
push
iret
dec
lock
arpl
push
mov
cli
into
pop
inc
sub
add
mov
sbb
pop
xchg
stos
lds
adc
jge
test
int
and
fcmove
sbb
mov
jae
ljmp
test
lods
cwtl
dec
cltd
add
sbb
fildll
push
lahf
sub
xor
jnp
inc
arpl
pop
fisubrl
mov
aaa
pop
inc
cli
fcomi
ds
sub
enterw
gs
fwait
out
sub
in
push
imul
ljmp
test
ret
push
outsb
push
stos
dec
inc
fsubs
inc
inc
pop
out
jnp
out
jns
ja
addr16
testl
and
mov
and
cmp
jb
xchg
mov
ja
dec
pop
insb
push
add
mov
iret
push
fildl
rcrb
pop
sbb
inc
call
inc
mov
lods
inc
adc
pop
pop
mov
adc
and
and
cmp
cltd
adc
push
xor
sbbl
and
and
pop
push
xor
sarb
xor
mov
mov
lcall
je
icebp
sarb
pop
sbb
and
adc
shll
jo
or
dec
js
push
inc
daa
scas
outsl
add
and
inc
inc
lcall
push
or
cmp
sub
inc
iret
nop
xor
inc
outsl
xor
rclb
mov
adcl
add
xchg
in
sub
testb
clc
aas
inc
leave
rorb
hlt
mov
dec
lds
jns
mov
adc
inc
int
int3
inc
xlat
lret
scas
mov
mov
add
jne
ja
aaa
mov
les
or
inc
arpl
cmp
cmp
cmp
pop
xlat
xor
inc
das
xchg
or
out
add
test
xchg
jle
test
jmp
das
nop
subb
fcoml
sub
adc
xlat
fmulp
mov
mov
sub
lods
push
iret
dec
lret
arpl
pop
pop
subl
push
das
loopne
push
test
inc
sub
fwait
lods
cmp
movsl
dec
or
pusha
jg
jb
or
xchg
and
adc
es
mov
inc
ret
std
cmpsb
mov
mov
and
pushf
fs
or
xchg
jmp
call
and
sbb
into
push
cmp
jg
mov
adc
pop
movsl
arpl
leave
or
sub
and
inc
adc
mov
add
or
mov
push
xlat
mov
outsl
xorl
cli
xchg
data16
int3
idiv
sar
shrl
fnstsw
scas
cltd
aas
sub
or
outsb
xchg
jl
push
add
pop
in
fsubr
fists
rclb
pop
adc
in
mov
mov
cld
movsl
daa
cmpsl
and
ss
push
sbb
ljmp
or
pop
cli
aam
movsl
jecxz
cmp
cmp
lods
adcl
mov
mov
mov
or
xchg
jp
test
or
sub
mov
xchg
out
sub
iret
cld
jl
bound
rol
ljmp
inc
ret
mov
dec
add
pushf
mov
into
lods
js
inc
sub
mov
jns
leave
xchg
rorw
stc
cmpsl
pop
jle
jnp
adc
and
xchg
mov
dec
fsubs
and
int3
outsl
push
cmpb
add
rcrb
mov
ret
mov
aad
inc
jne
adc
mov
add
jno
and
push
in
lds
stos
inc
ljmp
rclb
xchg
scas
mov
or
shlb
inc
xchg
push
pop
xchg
insb
xor
stos
stos
dec
mov
cmpsl
sbb
adc
test
pop
pop
mov
stos
inc
fisttpll
sbb
pop
and
aad
data16
pusha
inc
cmp
in
ljmp
add
pop
int3
lahf
in
push
mov
xor
ficoml
ds
pop
arpl
jne
inc
jbe
out
or
out
cmp
ljmp
loopne
push
je
pop
notl
and
push
inc
inc
fsubl
jecxz
xchg
sbb
outsb
stos
rcr
inc
push
lret
add
or
ret
push
xchg
sbb
or
lret
jg
cltd
push
repnz
test
mov
paddusw
jnp
gs
xor
lods
ljmp
test
sbb
aam
test
cwtl
rclb
ljmp
lods
into
shl
mov
pop
rsm
insl
iret
mov
xchg
and
rorb
mov
jg
push
adc
pop
or
cld
call
out
outsl
iret
pop
mov
xchg
test
sub
inc
xchg
xor
mov
insl
xor
mov
mov
sub
mov
or
mov
jns
sbb
test
mov
sbb
lea
rclb
xor
in
push
add
stc
movq
inc
into
idivb
inc
inc
jecxz
shlb
mov
out
ja
cmpsl
or
ja
inc
cmp
inc
insl
les
mov
adc
ficoml
xchg
cmpsb
cmp
xchg
cmc
inc
inc
out
in
mov
jmp
scas
push
popa
or
cmp
outsb
fisubrl
fs
mov
add
idivl
aaa
cwtl
outsb
or
and
and
xchg
aas
xor
fidivrs
add
stos
mov
lcall
fcmovu
lods
mov
aaa
and
dec
mov
dec
push
jl
push
jmp
inc
add
or
jbe
inc
lcall
xchg
mov
xchg
mov
cltd
cmp
inc
movsb
jns
add
leave
shr
enter
ljmp
stos
into
pushf
xchg
out
and
sub
adc
les
lea
push
pop
sbb
orb
sarb
xor
dec
stc
mov
into
mov
stos
aam
dec
cli
adc
xchg
sbb
addr16
or
lahf
rcll
mov
and
sbb
push
pop
mov
cmp
xchg
into
fsubs
jno
mov
dec
cltd
loop
mov
punpckhwd
outsl
adc
push
push
ret
and
mov
fadd
orl
cmpsl
into
jb
pop
inc
cli
and
mov
pop
mov
or
callw
cli
mov
pop
dec
adc
ret
xchg
jle
and
jmp
addb
out
pop
mov
stc
aaa
sbb
and
cwtl
mov
in
jle
xchg
in
dec
fldcw
daa
jp
or
push
dec
nop
sahf
ja
jmp
adc
imul
dec
mov
int
add
les
dec
lods
or
lock
jmp
and
and
leave
inc
ss
mov
in
jg
arpl
pop
sbb
push
iret
data16
jbe
pop
pushf
icebp
aas
addb
xchg
xchg
shll
leave
or
or
pusha
mov
pushf
insl
mov
es
jo
pop
clc
cmp
sbb
fildl
in
mov
sbb
add
pop
imul
popa
mov
push
mov
mov
out
inc
mov
push
xchg
cmpsl
imul
aam
stos
mov
jo
out
cmp
jb
add
push
bound
test
call
and
pop
push
ret
xor
sub
jnp
push
rcrl
sbb
popa
pop
test
pusha
adc
cmp
mov
dec
mov
add
jae
adc
lods
push
cmp
leave
loopne
push
jl
sbb
cltd
dec
sub
pop
loop
sbb
iret
sub
repnz
pop
daa
sti
inc
adc
into
mov
les
pop
cmpsl
into
mov
stos
sbb
mov
in
inc
out
popw
sbb
xchg
test
mov
out
stos
dec
movsl
cmpsb
xchg
mov
xchg
stos
aam
fildl
adc
fsubrs
dec
ret
xchg
push
jl
sbb
mov
loopne
adc
pop
stos
adc
test
aas
std
fistpl
adc
clc
dec
das
and
mov
scas
xchg
insl
ljmp
cmp
sub
or
inc
jbe
jmp
cmpsl
xor
inc
xor
add
scas
fwait
iret
push
repz
incb
mov
mov
int3
mov
rcrl
pop
and
add
addr16
xchg
xchg
xchg
jns
ljmp
cmp
repz
outsl
je
int
or
cltd
push
icebp
lea
in
push
lock
pop
inc
dec
xchg
popa
inc
filds
cmpsl
hlt
es
adc
movsb
ja
lods
cli
scas
jno
mov
mov
lcall
int
adcb
cmp
rorb
xchg
bound
xlat
add
lods
scas
xor
cmpsl
pop
add
pushf
testb
mov
mov
loopne,pn
jle
movsb
enter
mov
lods
fadd
outsl
mov
adc
add
and
inc
test
mov
jle
iret
loopne
iret
imul
add
aam
mov
xchg
movsl
ja
mov
dec
cltd
imul
les
insb
mov
dec
jbe
mov
xchg
or
mov
lcall
fidivl
pop
and
insb
inc
call
mov
adc
jmp
mov
lahf
push
xchg
push
dec
mov
push
jmp
cmc
sub
cwtl
xchg
mov
sub
cmp
and
xchg
out
rcrl
adc
xchg
in
jns
call
xor
cmp
xchg
jp
in
mov
or
adc
loopne
stos
sub
test
sbb
das
xchg
or
push
inc
pop
dec
pop
mov
jno
push
and
jo
adc
lea
je
or
negl
or
test
cwtl
jns
push
daa
sub
imul
inc
rclb
popa
imul
fidivl
ffreep
jmp
add
adc
rol
jae
jmp
js
mov
cmp
mov
inc
mov
xchg
xor
mov
scas
jo
aam
pop
dec
mov
jge
jno
fwait
dec
inc
das
mov
mov
enter
mov
inc
repz
negl
aas
jnp
mov
pop
cmp
push
adc
pop
sbb
int
ss
jp
enter
fidivrs
out
pop
shr
loope
add
pop
dec
lret
pop
js,pn
and
lea
mov
popf
fisubrl
movsb
lahf
lock
jae
or
inc
in
repz
scas
lods
xlat
push
je
push
cmpl
aam
mov
pop
cltd
test
iret
xlat
or
scas
pop
adc
pop
js
test
das
shl
ss
lods
stc
test
inc
xchg
lcall
fidivrl
pop
xlat
mov
int3
mov
xchg
loopne
xor
mov
xchg
lret
sbb
lret
mov
je
xorb
in
pop
insl
inc
xor
in
add
fsubl
ret
jne
add
js
pop
call
sbb
jae
xlat
insb
xor
ficoms
sub
mov
or
mov
inc
loope
adc
push
int
push
and
insl
repz
es
adc
sbb
cwtl
pop
xchg
mov
pop
mov
cs
sti
cmp
add
or
pop
cmpsl
insb
orl
mov
imul
adc
incl
add
mov
xor
mov
mov
cmp
js
lcall
dec
movsl
mov
pop
ja
fstpl
dec
lea
test
add
xchg
aas
push
sbb
fbld
mov
cwtl
mov
subb
movsb
pop
hlt
les
es
xchg
dec
ljmp
xchg
inc
mov
jmp
xlat
pop
aas
lret
mov
add
movsl
jnp
push
bound
mov
lret
xor
inc
test
imul
sbb
insl
hlt
aam
test
push
test
lock
sti
scas
sub
xchg
js
pop
dec
dec
std
inc
lret
rol
mulb
sbb
pop
pop
scas
mov
push
ja
std
or
xor
loopne
ja
mov
or
lahf
inc
xor
fwait
pushf
pop
jb
add
fisubs
in
lea
insl
xchg
clc
dec
rcrl
cmp
ja
sub
bound
pop
scas
fwait
shlb
decb
jp
dec
das
in
fildll
lret
push
push
int
scas
jne
repnz
sub
dec
in
lcall
js
mov
push
iret
pop
lock
mov
or
mov
lds
loop
popf
cld
xor
mov
sub
pop
lock
inc
call
sbb
dec
xchg
dec
rol
xor
mov
sub
popa
roll
jl
pop
sbb
ljmp
enter
das
jns
shrl
and
jns
stc
sarl
push
jmp
hlt
mov
xor
cmp
cmp
loope
rcll
pop
and
negl
push
mov
inc
lcall
stc
pop
add
jnp
sahf
stos
jmp
push
push
mov
pop
cmpsl
adc
pop
adc
pop
stos
rclb
idivb
sti
dec
clc
testl
rcl
mov
inc
add
pusha
sahf
jmp
pop
push
adc
pusha
jg
imul
out
test
sub
pop
pop
xchg
cmp
inc
mov
dec
inc
or
je
gs
sbb
outsb
mov
fcos
mov
mov
bound
testb
jg
add
subl
out
ret
mov
xchg
into
ljmp
mov
xor
mulb
adcl
sarb
stos
sahf
loopne
sbb
popf
xchg
insl
mov
pop
jecxz
sarl
pop
in
test
sub
out
cmp
mov
mov
nop
add
or
xor
loope
push
ss
sub
mov
fcoms
ror
xor
pop
jns
jae
gs
xchg
mov
test
sbb
push
bound
push
shlb
xchg
lcall
mov
lcall
jo
mov
mov
ljmp
pop
pop
loop
stos
lds
mov
cli
push
in
pop
sub
jl
popa
push
xor
stos
sbbl
jo
shll
inc
les
xor
xor
push
mov
xchg
into
mov
pop
push
dec
cmp
sbb
sbb
fcoml
inc
push
arpl
jnp
jne
jbe
xchg
cs
sub
mov
jbe
dec
test
dec
jle
mov
fucom
sbb
das
inc
stos
add
outsb
icebp
shr
scas
gs
sbb
sbb
iret
push
mov
adc
ret
ja
push
inc
mov
mov
add
push
or
imul
test
popa
aad
xor
push
jae
mov
fmuls
sub
inc
push
aas
int3
test
adc
dec
inc
insl
push
push
inc
add
test
inc
pop
or
mov
push
outsl
pop
nop
test
ficoml
xor
mov
sbb
iret
aad
insl
mov
fnstsw
jge
mov
cwtl
jg
leave
aas
xor
inc
stos
aaa
xchg
fwait
icebp
stos
insb
shll
mov
add
lcall
scas
lret
xor
push
xchg
dec
cmp
sar
arpl
mov
inc
xchg
mov
pop
in
hlt
repz
jb
cmp
jbe
adc
mov
insb
inc
mov
mov
pop
movsb
jle
sub
cmp
andb
loopne
fadd
in
or
adc
mov
lock
mov
xchg
pop
filds
aad
jmp
xor
or
dec
ficoms
ror
and
lea
iret
int3
lahf
das
or
aam
pop
jg
jne
xchg
test
gs
jecxz
mov
xchg
mov
xchg
xchg
stos
push
ficompl
mull
testb
sub
lods
mov
push
xchg
sbb
in
and
je
lret
scas
or
mov
mov
jle
pusha
xor
imul
inc
scas
fcomp
pushf
lea
ret
inc
out
and
cmp
mov
jbe
jp
mov
adc
insl
ficomps
fdiv
push
xor
add
fldt
stos
adc
jne
cmpsl
adc
lcall
xchg
pop
lcall
adc
scas
mov
mov
out
push
push
shll
stos
mov
sbb
cmp
arpl
nop
mov
or
pusha
push
mov
jno
dec
push
insl
mov
sbb
jg
inc
xchg
rcl
jne
pop
movsb
xchg
xchg
lret
aad
cli
aaa
test
pop
daa
push
cmpsl
dec
loopne
fwait
dec
ds
xchg
and
out
outsb
fmuls
xchg
test
mov
aaa
movsl
inc
idivb
and
mov
pop
dec
jnp
cld
lcall
out
addr16
shlb
add
sarb
roll
mov
insb
lcall
mov
add
cmc
jne
arpl
icebp
addb
xchg
jno
mov
xor
enter
mov
and
inc
mov
cmp
test
filds
cs
fdivrl
jno
add
repz
test
xchg
sub
movsb
mov
scas
out
aad
outsl
dec
stc
int3
inc
daa
scas
and
mov
sub
jp
loopne
sub
mov
add
lds
fwait
pop
jmp
sub
pop
rorl
xchg
and
mov
and
int
lret
je
std
xchg
xchg
iret
cltd
fldcw
adc
or
inc
fisttpll
cld
ret
movsb
cmp
icebp
mov
xor
mov
pop
fcomps
jle
cwtl
bound
dec
enter
loopne
dec
inc
mov
mov
mov
sub
or
lcall
lcall
aas
test
in
sti
push
jnp
faddl
xor
inc
fucom
enter
aaa
sub
addr16
repnz
shlb
std
sar
lcall
pop
xchg
jae
pushf
lcall
and
cld
jle
mov
jp
push
jae
xlat
mov
das
sbb
and
mov
adc
mov
shlb
imul
jle
lds
cli
sbb
and
inc
aam
mov
jnp
enter
out
call
inc
xor
stos
lea
or
hlt
loope
mull
sarb
sbb
nop
mov
cmp
pop
xor
sbb
sti
push
adc
push
and
or
add
sub
dec
jp
fsubrl
push
sbb
call
aas
leave
inc
test
xor
call
push
mov
jno
fsubs
push
adc
iret
sbb
jp
ficomps
int3
ja
lcall
lahf
push
and
addl
cmp
push
inc
fiadds
movsl
mov
fistps
aas
xchg
and
loope
filds
and
dec
paddd
out
inc
daa
inc
fldenv
test
or
aaa
mov
cltd
xchg
popa
imul
loop
dec
mov
movsl
into
bound
je
mov
mov
insl
popf
dec
cmp
dec
hlt
pop
fisubrl
push
mov
or
adc
mov
pop
mov
jnp
popf
int3
mov
mov
lret
sub
mov
pop
and
inc
add
lds
mov
jns
sbb
aad
es
cli
mov
cli
sub
mov
mov
mov
fists
pop
sub
jecxz
mov
mov
cmp
pushl
divl
and
subb
or
lock
std
pushf
cmc
adc
std
push
mov
xchg
sahf
out
dec
aas
fnstcw
out
ud2
in
sbb
xchg
push
jge
in
rcll
mov
mov
push
xor
dec
das
ret
pop
nop
sub
cwtl
push
aas
les
sub
sub
aam
xlat
mov
jg
xlat
xchg
push
add
dec
pop
mov
jmp
loop
test
out
jbe
mov
inc
adc
stc
fwait
int
adc
sbb
jne
and
push
ljmp
sub
ret
dec
and
rcrb
ljmp
push
push
add
adc
rorb
cmp
mov
inc
iret
mov
xor
push
mov
cwtl
in
pop
addl
dec
inc
mov
es
aam
fistpll
add
ret
in
les
mov
push
adc
cmc
mov
lret
or
js
sub
add
loopne
mov
pop
cld
push
das
jnp
xchg
mov
dec
push
xor
ret
arpl
shl
loopne
nop
pop
pop
rcll
mov
test
xchg
cmp
sbb
jb
or
dec
xlat
cwtd
insl
mov
data16
and
mov
dec
cmc
test
push
mov
fidivl
shll
jmp
xchg
mov
ljmp
inc
pop
sbb
and
fsubl
loopne
sub
or
xchg
jnp
stc
xor
pop
sbb
cmp
pushf
les
mov
jge
dec
xorb
idivl
push
int
add
mov
xor
jae
fbld
mov
jo
or
pop
xor
mov
call
jmp
lods
subl
mov
or
sbb
push
stos
sub
ss
lret
mov
mov
call
and
or
pop
pop
jle
inc
nop
leave
mov
cli
dec
loop
jno
inc
adc
push
xchg
call
arpl
loope
jmp
aaa
test
lea
mov
cld
shll
out
xchg
scas
lcall
jp
mov
scas
ret
dec
sub
xor
mov
lahf
hlt
sub
dec
addl
xchg
dec
dec
shrl
add
movsb
inc
inc
not
sub
xor
sub
or
sub
mov
push
sbb
push
xor
loopne
cltd
xchg
add
leave
mov
fidivrl
ret
push
jbe
enter
mov
filds
add
sti
add
sbb
and
jcxz
shlb
fmull
fs
insb
cmp
add
insl
pop
jns
in
mov
je
adc
test
xchg
ret
cmp
jmp
adc
mov
enter
aas
dec
add
repnz
sub
test
stos
sbb
out
lcall
loope
xlat
lret
bnd
cmp
test
into
inc
mov
push
adc
arpl
push
loopne
rol
dec
add
push
cmpb
pop
cs
mov
inc
dec
xchg
in
ljmp
fsubrl
jnp
scas
imul
and
dec
xor
xchg
fs
adc
and
mov
faddl
arpl
shl
cmc
jecxz
cld
lcall
insb
lret
push
adc
or
rcll
jae
repnz
adc
and
pop
jne
cmp
xchg
sahf
xlat
xchg
shl
sbb
faddp
lds
test
mov
sub
lret
movsb
enter
cmp
mov
inc
out
ret
mov
xchg
dec
jno
das
shll
or
add
and
sbb
inc
sub
dec
adc
andl
cmp
mov
mov
sbb
lods
mov
dec
inc
pop
clc
rcrb
lret
mov
add
int
out
dec
lret
les
out
mov
cmp
addr16
fs
push
pusha
inc
adc
push
inc
mov
idiv
leave
test
push
mov
mov
mov
jnp
sub
mov
pop
push
sub
ja
jmp
dec
loopne
inc
sub
xlat
xchg
insl
push
out
daa
lock
scas
sti
jg
outsb
lret
gs
in
lea
jo
js
xchg
or
les
cmp
fs
test
mov
rolb
add
sbb
sub
xlat
fsubrl
push
cwtl
outsb
mov
fmuls
stc
testl
mov
ds
mov
or
out
ret
and
pop
ds
sbb
mov
insl
mov
xchg
stos
lret
out
cmpsl
scas
iret
jg
push
inc
inc
pop
mov
xor
sub
cmovbe
cmp
test
pusha
jae
loop
mov
out
scas
mov
int3
sti
mov
outsl
pop
aas
cwtl
jecxz
or
adc
xor
jg
lahf
jg
pop
imul
int3
mov
jge
ret
nop
sub
aad
push
mov
fisubl
xor
xchg
in
mov
jp,pn
jbe
fisttps
sbb
jno
mov
sub
aaa
sbb
fstps
popf
sub
dec
sbb
mov
jo
addb
pop
xchg
or
fs
add
add
dec
adc
mov
pushf
mov
sub
stos
mov
mov
roll
ja
imul
pop
xchg
incl
icebp
jl
fdivrs
mov
dec
das
and
lcall
dec
jne
movsb
cmpsl
jecxz
xchg
insb
or
or
sub
push
xor
mov
addb
mov
out
jnp
mov
in
mov
xchg
xchg
inc
fcoml
cwtl
xchg
inc
daa
pop
jbe
mov
stos
mov
scas
xchg
cli
bt
mov
aas
insl
scas
mov
outsb
add
outsb
cwtl
or
pop
add
and
lea
pop
pushf
clc
fmuls
mov
shll
dec
or
or
jg
add
cmp
flds
pop
inc
sbb
sbb
aad
cltd
sbb
fs
xchg
aas
jl
and
lods
xchg
into
inc
fcmovnbe
clc
cmp
push
add
pop
mov
lcall
xchg
jge
sbb
fbld
ficomps
es
ja
cmc
jo
mov
aas
popf
or
mov
shrl
pop
subl
xrstors
mov
fwait
ljmp
add
add
nop
and
fildll
ds
xor
dec
hlt
stc
bound
mov
xchg
xchg
dec
into
sbb
loop
in
cltd
test
gs
test
sarl
fs
xor
mov
insl
xchg
decb
cmpsb
inc
inc
jns
je
jbe
inc
push
inc
mov
cmpsb
add
sbb
mov
adc
js
out
push
mov
jo
xchg
jae
cld
sub
ror
ja
dec
mov
loop
or
in
out
inc
jl
and
mov
les
push
pop
mov
aad
aam
in
mov
out
std
sub
enter
orb
js
mov
fcompp
test
xor
inc
cmp
packuswb
adc
push
xor
int
sub
inc
mov
les
test
jge
sub
add
jg
mov
aas
aaa
xchg
dec
xor
arpl
or
jnp
push
out
repz
sbb
or
mov
sub
or
pop
adc
push
ret
ss
jmp
sbb
fsubs
repz
dec
lds
sub
dec
push
push
jle
or
pop
in
fsubrs
push
mov
scas
xchg
add
das
movsl
mov
pop
lds
cmpb
jp
dec
mov
mov
push
dec
push
pop
inc
sub
or
mov
or
push
pop
ficompl
and
cmp
inc
mov
fidivrs
js
inc
xor
jg
push
lock
adc
nop
xchg
dec
inc
or
cmp
or
sbb
add
lahf
pushf
xor
mov
mov
hlt
lds
cs
lods
add
stos
hlt
inc
inc
leave
pop
xchg
mov
xchg
rolb
mov
pop
inc
cmp
aaa
jcxz
aam
mov
inc
cmp
sbb
orl
mov
push
jno
enter
ljmp
mov
xchg
cmp
inc
sub
inc
add
ret
into
pop
lock
cltd
adc
pushf
loop
sub
pop
and
cmp
aam
leave
popa
js
repnz
pop
sbb
xlat
pop
xchg
sbb
or
js
fstl
or
mov
popa
push
out
and
and
jno
jae
xchg
push
jl
repz
iret
fsts
sbb
xchg
jg
jecxz
out
mov
sarb
sbb
sbb
sahf
sti
lods
jl
mov
das
or
nop
xchg
shl
push
jnp
cmp
sti
sub
xchg
outsb
push
stos
test
je
out
push
subb
aaa
xchg
jne
xor
pop
mov
nop
mov
pushf
ss
adc
mov
mov
mov
dec
lcall
pop
sahf
lret
xor
jo
pop
jecxz
enter
jb
adcl
xor
mov
adc
insb
lods
in
and
or
js
call
std
pop
imul
iret
fmull
jb
push
inc
scas
int3
pop
add
cwtl
mov
mov
xor
test
movb
xchg
test
and
movq
cmpb
inc
repnz
je
push
jle
adc
or
inc
repz
push
dec
and
sbb
popf
loope
stc
mov
push
rcll
icebp
mov
lods
es
push
pop
push
into
mov
addb
xchg
mov
and
arpl
cwtl
ret
pushf
mov
xor
jbe
mov
hlt
add
or
loop
fistps
add
fidivs
outsb
pop
adc
cmp
push
dec
out
sub
or
jmp
out
imul
sub
ret
in
push
mov
lock
cltd
andl
fmull
cmc
push
ret
cmp
ja
lahf
in
shlb
call
adc
addl
cmp
ss
mov
xor
mov
cmp
les
icebp
jo
add
mov
cmpsl
add
or
pop
pop
shrb
mov
outsb
repz
or
dec
insb
decb
jmp
imul
pop
daa
mov
jnp
lds
and
nop
push
push
dec
nop
jle
je
cmp
and
clc
testl
outsb
loopne
adc
add
into
xor
cltd
leave
push
std
lock
and
jle
sarb
lahf
loope
lock
je
jge
lahf
lods
dec
pop
les
mov
mov
mov
les
ret
sti
fdivl
inc
sub
adc
jmp
rclb
push
mov
adc
xor
lfs
sbb
xchg
cmpsb
fisubs
add
push
call
push
jb
fists
jle
xchg
loope
fstpl
ficoml
jne
mov
mov
js
jp
xor
ret
jp
pop
mov
inc
dec
adcb
fildll
xor
rcrb
mov
outsl
mov
push
shll
lds
xchg
insb
iret
flds
mov
sbb
inc
adc
dec
lahf
mov
jne
jp
ret
imul
inc
fwait
and
pop
imul
cwtl
les
sub
loope
int
flds
xchg
jmp
adc
out
ret
mov
mov
xchg
sub
push
push
cmp
push
sbbb
xchg
and
dec
sbb
mov
leave
test
cli
in
push
mull
insl
jg
xchg
cmpsb
out
cmp
mov
push
add
gs
adc
sub
xchg
and
cmp
mov
or
mov
sti
outsb
jns
js
mov
cmpsb
lcall
cli
movsl
mov
jecxz
pop
fstpt
jnp
mov
cmp
stc
and
inc
scas
jg
imul
xor
stos
mov
cwtl
lahf
test
inc
lret
jmp
jae
les
dec
dec
mov
sub
dec
loop
xchg
or
mov
pushw
ja
xchg
jge
scas
xchg
ficompl
data16
cmc
movsb
mov
popa
out
jb
or
in
pop
cwtl
xchg
adc
fdivrl
ret
sub
mov
fisubs
sub
test
xchg
jno
lds
xor
dec
and
imul
scas
test
repz
addr16
xchg
adc
pop
sbbb
add
outsl
or
jo
dec
loopne
dec
sbb
mov
mov
jnp
mov
insl
or
jmp
iret
rcr
icebp
jg
imul
jo
adc
aas
incl
xchg
jo
aam
mov
lcall
push
aaa
fcomps
push
gs
and
jl
insl
lcall
mov
xor
movsl
inc
dec
aas
sbb
cmpsl
mov
push
popa
cld
mov
mov
xchg
jge
add
enter
mov
rcl
mov
push
add
int3
lea
pop
cmc
pop
sbb
push
jmp
scas
fdivrs
icebp
jecxz
shl
and
push
hlt
cld
lods
andl
xor
rcr
adc
loop
test
scas
jl
iret
push
jb
add
or
adc
mov
mov
mov
inc
push
jl
xchg
and
add
int3
xchg
loopne
xchg
push
leave
or
dec
jnp
push
cltd
mov
mov
and
testb
ja
setp
jne
sub
mov
hlt
jno
xor
mov
jne
dec
icebp
out
xchg
dec
cmc
cs
lret
mov
mov
imul
or
jle
sbb
or
imul
call
cmpsl
inc
mov
shrl
leave
cmp
into
cmp
mov
mov
pop
xchg
mov
test
imul
jno
repnz
das
es
fsubr
movsl
cmpsb
inc
xor
out
pop
in
lods
ficoml
inc
inc
inc
pop
sub
push
add
sub
mov
in
push
addr16
daa
jg
insl
mov
imul
xrelease
movsl
push
cmpsl
sub
lock
dec
loopne
repz
mov
stc
rclb
inc
outsb
repz
jno
sti
jb
adc
sahf
xor
jecxz
scas
push
add
xchg
cmp
and
mov
and
loopne
scas
xlat
mov
fsubp
cmp
inc
mov
fistpll
push
xchg
inc
inc
xor
sbb
jl
fadds
push
lods
out
movsb
inc
test
pushf
mov
cmp
cwtl
lds
rcl
push
inc
loopne
and
cltd
fldcw
sahf
mov
rol
sub
flds
xlat
jo
cwtl
jnp
mov
fnstsw
xchg
cwtl
sbb
jb
aas
jecxz
pushf
roll
fs
xor
and
or
imul
jmp
jecxz
mov
nop
pushf
sbb
test
and
in
cli
aaa
sbbl
ljmp
bound
popf
js
and
dec
js
push
inc
push
sahf
ret
cs
cmp
je
pop
outsb
mov
sbb
cmp
repz
sub
in
dec
test
mov
ja
pop
and
push
out
mov
sti
fs
adc
xchg
iret
xor
or
mov
test
arpl
push
push
mov
das
sbb
push
sub
aas
cmp
out
inc
test
xchg
mov
in
incb
dec
sbb
aaa
xor
js
cmp
out
sub
cmp
outsl
add
call
notl
inc
or
mov
and
outsb
xchg
jb
lahf
push
push
jnp
mov
pop
cli
pusha
cmp
jg
lahf
jmp
xor
negl
dec
push
xorb
cmp
mov
jmp
jo
insl
outsl
pusha
mov
fisubrl
cmp
and
addr16
xchg
mov
lods
arpl
call
lahf
and
sub
mov
insb
aas
in
rcll
out
mov
fsubl
inc
xchg
or
cmp
test
sti
pop
mov
cmp
movsl
push
mov
aas
in
jge
sbb
test
int3
or
jnp
sbb
rcl
aaa
mov
test
push
push
xchg
scas
hlt
fcmovnu
dec
and
jge
leave
xchg
sub
inc
sub
fstps
mov
pop
add
fistl
insb
shll
sub
clc
outsl
or
mov
sub
outsb
data16
cmp
stos
xchg
imul
das
scas
lock
scas
fwait
mov
dec
jecxz
pop
test
and
sub
lock
lcall
sbb
fdivl
fldl
mov
ja
sbb
inc
dec
push
mov
jl
hlt
mov
mov
or
sub
jnp
aas
and
dec
cmovl
pop
pop
adc
jg
add
stos
lahf
dec
inc
sub
loop
dec
inc
sahf
arpl
ja
lods
je
jb
pop
loop
nop
movsl
callw
push
fnstsw
cs
sub
jo
add
in
inc
inc
push
ret
adc
outsl
dec
dec
daa
aam
and
jo
lea
outsb
xor
cmp
ds
cmp
adc
arpl
sub
mov
ficompl
lret
jae
cmpsl
mov
mov
std
nop
mov
cltd
mov
movsb
scas
xchg
ret
test
je
loop
nop
ja
jg
xchg
add
xchg
pop
sub
iret
fistpll
mov
jg
inc
pushf
jmp
pusha
push
lods
jbe
mov
sti
inc
stos
push
mov
mov
pop
sub
icebp
push
add
enter
stc
sub
mov
jb
mov
mov
pop
mov
arpl
xchg
inc
rorl
ljmp
mov
ret
adc
add
pop
adc
adc
das
cmpsb
fiadds
push
pop
pushf
lahf
arpl
rcll
adcl
dec
iret
pop
push
imul
push
pop
jl
ret
push
xor
push
jl
xchg
sahf
popa
add
adc
or
inc
xchg
not
shlb
stos
imul
pop
jb
xor
jnp
push
xchg
inc
test
mov
or
jl
ret
mov
adc
out
lds
mov
out
add
inc
inc
pop
xchg
frstor
data16
std
out
push
mov
ret
mov
add
mov
or
stos
mov
iret
jge
adc
pop
fistl
xchg
sub
movsl
push
sahf
xchg
adc
imul
mov
push
or
add
pusha
push
mov
sti
push
push
loop
insl
sub
notb
insb
push
dec
add
insl
jb
add
dec
lods
mov
and
aaa
adc
mov
xor
push
loope
outsl
aas
fldcw
pop
xchg
push
and
pop
jo
rcr
and
fwait
adc
and
xor
iret
xchg
pop
aaa
jbe
mov
mov
lcall
xor
push
inc
cmp
test
inc
pop
and
dec
sbb
nop
sub
mov
cltd
sub
push
mov
punpckldq
sub
gs
pop
mov
fidivl
aad
pop
repz
mov
movsb
mov
test
insl
or
jbe
push
xor
iret
insb
or
lahf
jns
out
nop
dec
outsb
jge
scas
clc
imul
cli
pop
add
pop
cltd
sbb
cmp
aaa
xchg
xlat
mov
sub
fs
arpl
mov
aas
xchg
fs
add
sbb
stos
push
lahf
imul
sub
addr16
shrb
sti
lcall
loop
stos
fisubrs
pop
stc
into
enter
xchg
aaa
data16
cltd
fwait
imul
leave
scas
scas
add
fnstenv
or
jecxz
mov
repz
xchg
pinsrw
xor
cmp
jne
mov
mov
movsl
daa
adc
pop
shlb
aam
shlb
shlb
lahf
fisubl
loop
xor
push
das
xor
or
imul
push
ljmp
sub
inc
lds
test
jg
fs
shrl
push
mov
test
pop
dec
jl
insb
stc
rcr
je
inc
jmp
cmpl
aam
jne
xor
pop
xor
ds
mov
dec
mov
push
sub
cmp
jg
or
test
push
adc
lock
sub
mov
dec
mov
dec
addr16
cli
fistpl
inc
pop
into
xor
mov
clc
mov
je
call
mov
leave
push
push
xor
outsl
pusha
sub
lahf
jmp
jmp
cmpsb
or
pop
sub
popf
push
shlb
fs
dec
xchg
loope
mov
fistpl
test
leave
sbb
outsl
ds
cmp
cmpsb
push
pop
stos
jno
rcrl
sub
push
ljmp
fidivrl
jmp
into
cli
dec
ret
call
inc
rcr
stos
xchg
inc
into
je
xchg
cli
stos
sbb
dec
push
jg
jnp
adc
mov
popf
jbe
and
and
push
xchg
jg
fadd
cmp
nop
popa
mov
dec
hlt
sahf
shrl
and
ret
ljmp
inc
adc
mov
sarb
jl
cmp
mov
jb
test
imulb
cmc
and
pop
jne
arpl
fsubl
daa
cwtl
mov
sbb
mov
adc
jne
sub
sub
pop
adc
mulb
stos
data16
int
sti
enter
xchg
adc
adc
int3
daa
xchg
mov
mov
pop
inc
jnp
xchg
mov
mov
fildl
mov
pop
and
adc
jmp
xchg
pusha
add
pop
fmull
inc
or
sub
imul
and
xor
mov
out
push
xlat
adcb
stos
popf
nop
mov
mov
push
sub
jl
stos
inc
push
pop
subb
les
xchg
fistps
test
or
xlat
mov
or
pushf
dec
je
jmp
dec
insl
mov
mov
outsb
xor
sbb
xor
fldenv
inc
adc
xchg
xchg
mov
enter
xchg
and
ret
cs
mov
les
cmp
enter
shrl
dec
sti
cmp
xor
fildll
pop
dec
add
mov
pop
lods
jo
mov
pop
push
sahf
mov
enter
out
xor
push
fs
punpckhwd
out
je
in
adc
sbb
cs
mov
ljmp
dec
push
popa
ja
js
add
dec
in
jge
fldenv
inc
stc
adc
cmpsb
dec
dec
jp
or
clc
adc
mov
sub
adc
or
xchg
jnp
jo
nop
xchg
xchg
out
jb
jle
int3
cs
xor
or
xchg
out
push
xchg
scas
lea
fcomps
pop
pop
or
dec
dec
ret
sbb
lods
adc
mov
adc
and
push
je
and
arpl
add
mov
enter
cltd
mov
pop
or
push
or
sbb
ret
pop
adc
pop
adc
loop
cmp
sub
mov
mov
jb
add
fs
subb
xor
fs
jbe
or
scas
imul
outsl
jnp
std
or
and
mov
push
cli
cmpsl
pop
sbb
insb
pusha
arpl
adc
sbb
xchg
jbe
mov
mov
dec
loop
inc
arpl
fisttps
fucomip
mov
sar
sub
jge
sub
loop
mov
inc
add
jge
ficomps
push
push
popf
dec
ds
mov
and
ds
std
arpl
push
add
lret
stc
mov
mov
das
pop
jns
push
pushf
add
add
addr16
pop
xchg
xchg
outsb
push
or
adc
scas
xchg
icebp
jge
sti
aam
cmp
jg
rclb
inc
shll
dec
nop
mov
pop
sar
and
cmpl
cmpsb
arpl
paddq
mov
sub
aaa
test
jmp
imul
fidivrs
sbb
roll
seto
stos
sub
mov
lcall
imul
mov
mov
dec
hlt
pop
cmp
xchg
mov
xchg
or
test
mov
pop
idiv
aam
sub
frstors
movsb
push
push
xlat
arpl
sbb
and
mov
xor
mov
ljmp
mov
fwait
pop
orb
orb
insb
lock
mov
rcrb
push
gs
rcrl
lock
int3
mov
mov
push
push
mov
fs
sar
cltd
sub
dec
pop
jl
sahf
icebp
imull
xor
cmp
xchg
push
mov
dec
xchg
imul
sti
or
inc
push
jb
int
repz
or
xor
mov
rcrb
push
mov
inc
cmp
adc
mov
lcall
pop
cli
mov
jne
mov
or
jg
jg
adc
adc
sahf
sub
repz
push
dec
hlt
scas
int
and
imul
pop
je
call
jno
cmp
fwait
cmp
xchg
outsb
fwait
cmpsl
iret
mov
dec
or
movsl
lcall
test
xchg
mov
mov
dec
and
cmpsl
pop
and
daa
and
inc
add
and
sbb
pop
lahf
and
push
or
lret
push
aas
cmp
or
rorb
das
jbe
daa
es
testb
lea
mov
xor
xor
xchg
sbb
pop
jp
or
popa
in
lcall
jb
pop
fsubrl
fmull
inc
in
cwtl
fistpl
jne
into
inc
enter
mov
xchg
test
fidivl
lea
and
sbb
scas
mov
add
cs
xchg
xorl
add
inc
add
lods
or
insl
or
into
push
and
push
insb
jecxz
aam
dec
dec
mov
jb
jge
jns
pop
jae
add
fdivs
inc
mov
mov
mov
fidivl
mov
bound
pop
cld
cmp
lods
jp
mov
sub
sahf
in
sbb
xchg
and
push
stos
lcall
pop
sub
mov
xchg
mov
adc
push
jp
xor
stos
dec
mov
sub
push
sbb
jmp
lock
cmpsl
xor
lea
fldt
pushf
xor
xor
jnp
jns
push
lds
inc
xlat
insl
insb
mov
xor
stos
push
dec
sub
mov
lcall
iret
add
fisubrs
sbb
mov
and
orl
mov
icebp
jb
clc
pop
dec
xor
imul
inc
jbe
xor
pop
call
inc
loopne
pop
movsl
loop
xor
outsl
mov
xchg
add
sbb
mov
xchg
pop
nop
pop
cwtl
inc
pop
insb
js
xchg
ds
pop
xor
fidivl
pop
scas
into
divl
arpl
xchg
jg
fidivs
icebp
xchg
add
out
inc
lds
ret
xor
pop
lahf
pushf
pop
fwait
adcl
add
je
dec
pop
outsl
cmp
inc
enter
xor
pop
int3
jecxz
and
xor
or
jmp
fidivrl
inc
scas
pop
pop
jno
add
pusha
jne
xor
xor
leave
mov
sar
inc
loop
sub
je
add
mov
mov
fmulp
lods
push
outsb
adc
adc
test
or
in
and
xchg
scas
lret
jno
les
clc
push
mov
push
dec
cli
or
jle
push
push
jecxz
xor
jbe
cmp
add
pop
xchg
decl
mov
jle
adc
aaa
cmp
das
mov
je
cmp
cmp
mov
gs
add
mov
sahf
inc
pop
sub
push
std
shlb
pop
xchg
xchg
out
sbb
fiadds
mov
adc
fildll
dec
dec
notl
inc
stos
add
cmc
xchg
movsb
iret
popf
insb
xor
cmp
stos
mov
mov
sub
and
es
push
mov
add
and
subb
pop
out
test
and
mov
inc
mov
lods
ficoms
mov
scas
inc
adc
and
adc
xor
sub
pushf
xchg
sbb
adc
adc
xor
xchg
mov
mov
mov
stos
cmp
faddp
negb
push
push
outsl
jo
pop
fiadds
subb
mov
mov
push
xchg
cld
test
cmp
imul
popa
gs
out
add
mov
adc
adc
adcb
movq
bswap
sub
pop
dec
lds
pushf
daa
and
mov
jmp
out
jecxz
insl
gs
dec
or
aaa
fs
mov
mov
mov
arpl
imul
pop
push
fs
lret
scas
mov
in
inc
inc
subb
add
int
push
dec
dec
lcall
add
int3
adc
adc
jge
add
das
test
inc
mov
sbb
dec
jbe
mov
jl
mov
add
sub
cmp
lahf
push
mov
roll
insl
or
inc
pop
test
add
add
cmp
shll
push
inc
sahf
jne
outsb
fdivs
jns
inc
push
inc
xorb
bound
int3
pop
lea
sti
sarl
add
jae
movsl
iret
cmpsb
ficoms
adcb
add
xchg
dec
das
mov
sub
jns
inc
pop
shl
inc
stc
idivl
iret
jno
out
sub
xchg
adc
dec
pop
cld
sahf
lahf
and
stos
das
cmp
mov
sbb
or
jmp
test
adc
add
or
bound
jmp
cltd
cmp
and
ret
cli
and
sbb
fcomp
arpl
mov
into
fistpll
test
stos
pop
dec
ja
add
lods
imul
mov
js
test
add
aad
adc
xchg
add
popl
les
movsl
dec
sub
xchg
sbb
mov
xchg
inc
cmp
push
sub
adc
sbb
jmp
pushf
scas
mov
aaa
scas
mov
jnp
sbb
test
dec
pop
pop
in
adc
add
cmp
sahf
and
stos
repz
out
inc
mov
or
icebp
mov
sahf
popa
inc
imul
jle
jae
and
dec
lock
sbb
xchg
repz
ljmp
pop
sbb
dec
iret
cwtl
push
or
adc
imul
lods
sbb
xchg
test
xchg
stos
das
inc
cmp
lea
or
outsl
dec
mov
jl
movsl
call
push
das
stos
mov
or
lret
mov
jge
lcall
ss
addb
sbb
xchg
mov
push
push
xor
mov
shl
jg
sbb
add
push
and
cs
and
mov
pushf
shl
es
leave
adc
jmp
cmp
mov
dec
mov
loope
leave
in
adc
imul
addl
aaa
sahf
xor
jbe
push
insb
in
inc
mov
insl
aaa
mov
xor
test
daa
inc
clc
push
push
and
pop
jae
insb
xor
into
pop
imul
inc
pop
nop
or
xor
cmp
jae
pop
adc
adc
incl
stc
pop
sub
add
add
hlt
xor
call
xchg
cmp
mov
xchg
cmp
lods
ljmp
pop
mov
mov
mov
add
repz
xor
hlt
stc
jo
addl
decb
inc
pop
sbb
pop
jg
repnz
cld
dec
pop
fsub
addr16
mov
push
leave
pop
sub
dec
addl
stc
cmp
movsl
inc
test
xchg
push
iret
cmpsb
fstl
fnstenv
adc
xchg
adcl
xor
imul
xchg
jle
push
pusha
lret
mov
ret
sahf
popf
fdivs
sbb
movsl
jl
sbb
mov
jecxz
or
pop
jl
inc
or
jae
mov
fcoml
shr
jo
lret
fisubs
stos
adc
fisubl
insb
cmc
mov
pop
mov
pop
pushf
push
mov
popf
fcompl
xchg
and
jno
flds
repz
and
mov
jnp
mov
adc
lds
adc
or
dec
in
mov
xlat
xorb
pop
sbb
stc
pusha
push
mov
lret
enter
sahf
ret
or
sub
hlt
subb
in
jge
sub
sbb
ljmp
int3
cld
imull
sbb
ret
xor
ret
or
hlt
les
adc
mov
lods
inc
mov
int3
js
mov
sahf
xchg
das
aam
add
sub
cmpsb
jge
add
sub
mov
pop
jl
popf
xchg
ss
push
cmp
xor
mov
xor
jg
int3
push
pop
inc
lret
or
cli
dec
jg
pop
aas
dec
fisttps
fisubl
sbb
xchg
andl
sub
pop
cli
aad
pop
ret
mov
mov
push
cmpl
jge
stos
xor
pop
fs
jg
cli
rcr
hlt
imul
popf
ja
sbb
dec
imul
loopne
nop
adc
fists
and
insl
jp
inc
in
add
mov
fimuls
xlat
shlb
test
ja
les
ret
pop
mov
mov
cmp
adc
arpl
and
sub
cmp
lret
negl
popa
aas
xchg
lods
jnp
xchg
mov
movsb
push
or
push
rcl
ljmp
sbb
pop
popf
stos
aam
stos
nop
sbb
popa
inc
jp
dec
je
pop
xchg
mov
jg
mov
ss
push
xchg
cmpsl
and
inc
mov
nop
or
cmp
inc
mov
pushf
jle
imul
fadds
pop
loop
pop
push
imul
mov
dec
in
push
out
inc
xor
stos
addl
add
sarl
sbb
enter
repz
add
mov
xchg
xchg
xor
pop
andl
pop
or
cmp
out
adc
or
inc
dec
mov
stc
xor
dec
iret
ficoms
fmuls
mov
aad
adc
je
dec
gs
insl
mov
cwtl
cmovle
dec
and
jle
fnstenv
cmp
jb
movsl
std
sarl
movsl
dec
fisubs
pop
outsb
dec
and
jne
insl
outsl
popf
arpl
mov
andb
lcall
jg
pop
in
pop
add
popf
mov
lds
icebp
cs
jne
negl
loope
cwtl
imul
pushf
sbb
bound
adc
cwtl
dec
clc
and
in
scas
or
cltd
adc
adc
into
adc
insl
js
scas
aad
cmp
lea
lahf
mov
sub
adc
adc
add
dec
sub
ret
adc
push
xchg
out
test
call
xor
lret
jae
stc
or
mov
popf
push
inc
mov
mov
sbb
into
sub
fs
shll
in
sub
aam
xchg
dec
xchg
pop
js
repz
jmp
arpl
jecxz
repz
stos
insl
outsb
dec
imul
lret
mov
aas
mov
add
sarb
arpl
mov
mov
pop
jp
cld
lds
add
ret
mov
outsl
sbb
cmpsl
pop
or
sbb
inc
inc
stos
jmp
adc
xor
mov
pop
push
lcall
test
icebp
and
fiadds
in
adcl
ljmp
fisubs
lcall
dec
popf
daa
mov
inc
xchg
ret
imul
adc
data16
sub
popf
imul
dec
xchg
or
and
lcall
mov
dec
xchg
xchg
xor
bound
hlt
bound
lahf
sbb
xchg
popa
add
pop
mov
mov
add
in
add
cmp
lock
xor
out
fcmove
lds
test
xchg
cmp
push
push
aaa
test
aam
pop
cwtl
les
lea
mov
lret
push
lret
call
js
je
adc
cld
xor
out
mov
xchg
mov
jae
cmp
arpl
mov
sbb
sti
bound
xor
push
xor
popa
sub
jnp
js
and
sub
inc
addr16
insl
ficomps
sahf
mov
nop
cwtl
mov
mov
sub
lods
popa
jle
inc
push
orl
imul
mov
mov
movsl
neg
xchg
push
aas
xchg
call
dec
add
ss
dec
mov
lcall
jl
clc
jb
ret
inc
adc
roll
sti
pop
out
test
mov
push
outsb
sub
lret
mov
mov
sbb
stos
pop
jbe
cmp
dec
jge
sub
sub
int
mov
sbb
popa
test
mov
add
dec
dec
sub
cltd
stos
xor
loopne
and
ficompl
mov
sub
cmp
scas
int3
lock
jl
notb
dec
cwtl
adc
xchg
bound
mov
in
stc
sub
mov
or
xchg
mov
dec
pop
dec
and
mov
fcoms
add
xchg
sub
fldenv
pop
or
cmp
pushf
data16
mov
dec
push
add
daa
xchg
sub
fisubl
xor
mul
mov
add
or
or
scas
in
pop
fsubrs
adc
sbb
jl
ret
mov
mov
test
push
push
push
mov
cmpsl
jbe
dec
fisubl
andb
fcoml
loopne
mov
movsb
sub
cli
and
pushf
mov
cmp
aad
scas
jle
push
mov
cmp
xor
lret
sub
push
into
push
xor
mov
xor
adc
xchg
mull
div
sbb
leave
fwait
jne
or
adc
jecxz
sub
jnp
shll
outsl
lcall
movsb
mov
inc
dec
jge
push
xchg
pop
decb
das
int
outsb
xchg
popa
mov
enter
sub
mov
cmpsl
mov
fwait
xlat
in
cmp
lret
stc
push
rcr
pop
push
pop
sbb
lret
das
fwait
lods
movsl
lcall
dec
nop
mov
daa
push
dec
xor
fwait
rcll
loope
movsl
dec
adc
jle
pop
adc
or
adc
or
jae
mov
cmp
sti
mov
jecxz
mov
push
pop
leave
stos
push
mov
xor
or
jno
dec
fcoms
mov
ret
adc
ret
mov
out
int3
mov
pop
sub
adc
jne
xor
loope
dec
mov
pop
adc
and
sti
test
cmp
aas
inc
ljmp
jnp
push
pushf
loope
fbstp
and
les
cmpsb
jle
je
cs
insb
mov
fwait
aam
push
mov
cmp
mov
popf
outsl
pop
push
imul
movsl
sub
xchg
xchg
cmp
sbb
fdivp
sbb
popf
adc
push
je
int
and
jb
dec
jl
clc
mov
subb
jmp
aas
and
sub
sbb
fsincos
mov
add
add
jne
jb
push
ficompl
adc
mov
add
test
adc
sbb
aam
push
iret
xchg
aad
loope
rcrb
inc
xchg
xchg
loopne
push
pop
outsb
gs
loop
es
sbb
sbb
insl
sbb
enter
mov
lock
and
add
dec
das
bound
fstl
mov
call
insl
xchg
fadds
xchg
add
lahf
mov
cltd
add
leave
aas
mov
aas
dec
jno
push
pop
stc
int3
ljmp
adc
xchg
pop
movsl
out
aas
inc
or
mov
or
stc
fldcw
subl
mov
push
rcrl
aas
and
add
test
push
pop
scas
push
sarb
popa
and
enter
sbb
xchg
inc
and
insl
and
push
mov
sti
or
ss
jo
ja
sbb
mov
roll
popf
fistps
jmp
mov
push
les
add
xor
test
mov
add
or
adc
or
mov
mov
sub
and
jmp
jno
hlt
call
imul
push
loope
test
insl
pop
imul
inc
rclb
xor
leave
ja
rcl
es
or
sub
xor
cmc
lret
lea
dec
mov
enter
cwtl
sbb
bound
outsl
xor
cmp
xchg
dec
fdivp
mov
cmp
stos
add
push
inc
dec
inc
out
xor
fidivrs
or
push
inc
sub
mov
dec
sub
and
or
adc
xchg
jg
cmp
adc
aas
and
in
adc
hlt
rolb
cltd
jl
jb
and
or
bound
mov
cmpsb
xchg
jnp
xor
pop
lods
sub
add
das
stos
imul
xorb
xchg
loopne
or
fcmovu
mov
jno,pt
fldcw
jle
xor
xor
mov
pop
cmp
out
push
mov
sub
repnz
mov
pop
fldcw
je
dec
test
decl
sbb
stc
arpl
pop
inc
mov
xlat
aam
cmp
jo
dec
pop
test
or
mov
sub
sbb
insl
sub
mov
shlb
lret
test
xchg
inc
dec
sahf
pop
test
dec
mov
push
nop
psubusb
insl
xor
fcompl
xchg
pop
stc
test
pushf
cld
push
jmp
sub
adc
adc
push
xchg
fcoml
or
insl
sub
xchg
sbb
in
imul
push
inc
cmp
push
mov
fnsave
adc
pop
ret
cmc
cmp
lea
loopne
or
notl
push
and
sbbl
in
fdivrs
insb
add
pop
push
rcll
lock
addr16
insb
sar
lods
cltd
sti
call
cld
push
nop
gs
push
test
popa
sti
fstps
jbe
ja
mov
jmp
pop
push
mov
xchg
das
and
or
jl
adc
xchg
scas
sub
gs
dec
cmp
jnp
insl
sub
add
lods
shl
pop
inc
shrl
cmp
sub
fistpll
push
push
jns
call
fs
dec
push
xchg
inc
and
xchg
jne
sbb
or
aad
jbe
xor
jge
inc
mov
push
pop
mov
mov
ljmp
dec
xor
inc
mov
adc
jl
push
sahf
push
movsb
add
adc
outsb
sbb
lds
dec
and
mov
mov
xchg
xor
dec
push
ret
pop
add
sbb
cltd
gs
sub
scas
pop
adc
in
aad
xor
dec
ljmp
or
pushf
or
xchg
adcl
mov
xchg
lret
insl
mov
xchg
fidivl
jae
cmp
icebp
jbe
sti
or
mov
sti
fadd
sti
mov
add
cmc
mov
cmp
std
or
cmp
ret
int
and
or
adc
mov
jmp
cmp
rsqrtps
aas
or
and
or
add
add
hlt
pushf
xor
nop
arpl
mov
or
xchg
cli
cmp
jp
dec
mov
insb
xchg
popf
cmp
mov
add
sbb
incb
jl
xchg
jne
psrlq
dec
inc
inc
mov
jnp
sbb
movsb
pop
flds
pmovmskb
sub
cs
jbe
pop
mov
mov
aaa
mov
and
decl
loope
or
push
lret
cli
push
outsb
shrl
mov
das
jne
jns
test
xchg
test
notb
jmp
or
push
cmp
icebp
sub
scas
int
add
add
or
insl
lcall
insl
mulb
in
xchg
enter
call
mov
sub
andl
xor
xchg
add
xor
mull
ret
and
xchg
stos
xor
mov
mov
jae
mov
or
inc
sahf
push
jo
mov
stos
aad
add
adc
ja
mov
xchg
repnz
add
push
inc
or
pop
fistl
lret
jae
adc
vcomiss
jo
cltd
lahf
inc
push
xor
imul
cmpsb
pop
in
fidivl
arpl
mov
in
mov
idivb
repz
cmp
inc
sarb
mov
sbb
xor
xchg
lcall
iret
add
xor
xor
xor
fmull
jg
pop
adc
cltd
outsb
aam
pop
mov
mov
pusha
mov
and
lods
insl
mov
filds
push
pop
jp
scas
das
mov
js
cmp
xchg
mov
sbb
pop
cmp
push
test
xchg
xchg
or
fidivl
push
jae
and
pop
flds
fbld
xor
mov
and
push
push
mov
lcall
sti
fs
cwtl
push
sbb
out
pop
xchg
adc
dec
xchg
fildll
in
test
adc
fsub
cmp
dec
loope
rorl
sbb
pop
pushf
pop
jb
cltd
mov
jnp
mov
repnz
imul
xor
add
mov
fsub
xchg
cmpsl
out
ss
insb
mov
cwtl
mov
outsl
pop
aad
ror
mov
adc
pop
sbbb
inc
arpl
rcrl
and
sahf
cmp
push
sahf
incb
fmul
incl
inc
xchg
adc
pop
and
inc
ss
dec
nop
stos
ljmp
jmp
lods
or
mov
xor
lahf
push
int
mov
jle
scas
rcrl
xor
mov
cmp
fdivl
adc
lahf
xchg
scas
mov
imul
sub
fidivs
inc
mull
fsubl
pop
test
ficomps
mov
in
stos
mov
mov
xlat
dec
cmc
mov
arpl
imul
mov
rorl
inc
popa
pop
cmpsl
mov
jl
adc
push
divb
mov
push
les
ret
dec
imul
lea
add
jl
dec
xchg
ds
dec
imul
inc
or
ja
aaa
xor
sub
loop
jnp
mov
dec
pop
cmc
mov
loope
jp
cli
dec
dec
mull
xorb
shlb
or
aam
lahf
or
insb
adc
dec
int
mov
xchg
pop
mov
ret
inc
jl
outsl
aas
adc
lret
std
popf
iret
imul
cmp
ret
test
xor
cmp
into
pop
bound
lret
mov
xor
fs
xchg
or
sahf
mov
xor
incl
sub
iret
arpl
insl
aad
pop
roll
sahf
and
xchg
scas
cmpsl
iret
mov
adc
adc
mov
xchg
stos
fcmovnu
mov
or
nop
jne
andb
push
sub
jecxz
aad
repz
dec
lcall
nop
aam
push
nop
mov
inc
inc
push
outsl
add
rolb
insb
arpl
xor
adc
sub
aas
push
jg
stc
jnp
add
int3
mov
add
lds
xchg
or
call
cmpb
or
nop
stc
pop
mov
sub
clc
sahf
lcall
outsb
cltd
xchg
pop
adc
std
inc
inc
mov
daa
fcomps
icebp
test
xor
imul
lcall
js
icebp
cmp
stos
pop
into
cli
inc
stos
imul
fwait
scas
cwtl
inc
loopne
imul
fbstp
fstpt
dec
jmp
sbb
in
in
sbb
xchg
in
test
cwtl
movb
xchg
xor
notl
cld
jnp
lock
aas
xchg
shll
lea
stos
add
mov
fwait
mov
pop
mov
aaa
add
mov
mov
sbb
adc
xchg
out
adc
lock
stos
jecxz
jns
lods
leave
push
mov
pop
push
fiadds
adc
and
in
sub
mov
lods
add
sub
pop
addr16
stos
lods
sbb
pop
push
fwait
imul
enter
xchg
jmp
inc
lar
pop
add
dec
or
pop
mov
ret
dec
sar
movsl
add
cmp
repnz
add
push
mov
add
pop
push
push
mov
lcall
pop
mov
xchg
sahf
jl
fwait
dec
sbb
orb
sti
repnz
mov
cwtl
cli
mov
sbb
adc
add
sub
dec
scas
cld
dec
and
ss
adc
sub
mov
jg
int
ror
mov
lock
hlt
inc
repnz
imul
mov
test
pop
sbb
inc
add
popa
mov
ficoms
pushf
popa
xor
inc
pop
pusha
imul
scas
imul
inc
jmp
pop
pop
mov
sub
jno
mov
xor
mov
insl
xor
pusha
enter
dec
shlb
stc
xchg
or
aas
cli
in
ret
jno
ljmp
jbe
clc
mov
push
repnz
push
leave
scas
pop
push
or
leave
pushf
sub
std
lods
jmp
stc
stos
incl
fidivl
mov
and
xor
cmp
fsubs
jnp
cmp
push
gs
std
imul
jno
mov
repz
mov
push
adc
cmp
insb
jg
clc
mov
dec
sahf
outsb
or
jns
das
pop
insb
mov
xchg
sbb
leave
jns
inc
push
mov
sahf
jl
dec
pop
loope
testl
mov
xchg
outsb
js
mov
mov
test
lods
icebp
std
push
sbb
loope
rcrl
addl
pop
adc
stc
cmp
dec
iret
iret
push
xor
mov
cmpsb
and
jp
fidivrl
inc
adc
sub
push
push
jo
inc
jbe
and
cmp
loope
pop
cmpsb
jbe
sbb
or
mov
xorl
sarl
cwtl
cmp
int3
dec
movsb
adc
jecxz
mov
data16
ret
cs
in
add
and
push
jle
sahf
aas
push
mov
xlat
jmp
xchg
hlt
pushf
mov
sbb
push
in
mov
dec
jo
cmp
mov
and
daa
loope
addr16
pushf
xor
jge
xchg
sub
rcll
nop
mov
jo
lock
mov
push
lcall
jl
sbbl
sbb
adc
movsb
test
mov
scas
push
out
adc
dec
ret
xor
shr
and
dec
inc
jnp
nop
mov
push
fstpt
pushf
sbb
or
in
mov
sub
in
mov
adc
mov
dec
sbb
loope
lret
and
add
xor
dec
xor
mov
out
movb
leave
jne
movsl
cmp
iret
cmp
xchg
aam
outsl
add
mov
mov
or
pusha
mov
out
cmp
stos
aam
rolb
lahf
mov
pop
mov
push
adc
out
or
pop
add
fsubrs
leave
icebp
fwait
repnz
cwtl
inc
cmp
dec
push
xor
in
in
jp
mov
movsb
mov
test
out
outsl
add
and
and
inc
nop
dec
or
and
ds
iret
negb
cmp
fidivl
mov
cmpsb
movsb
iret
add
push
jno
push
repnz
inc
lret
das
mov
push
add
mov
in
insb
shrd
cli
mov
mov
into
jae
fildll
into
repz
mov
aaa
pop
scas
and
push
insb
inc
mov
and
ljmp
jo
or
out
mov
arpl
test
push
into
or
std
in
loopne
aad
mov
pop
bswap
ret
nop
stos
sahf
jbe
xor
inc
and
lock
xchg
mov
push
icebp
mov
and
std
xor
repz
daa
mov
xor
ficompl
iret
push
clc
lcall
mov
aas
mov
jb
fbstp
movlps
pop
mov
ficoms
mov
add
frstor
or
xchg
lock
loope
sbb
jno
repz
cmp
ret
in
mov
rol
test
sub
push
pop
adc
cmp
and
fsubs
outsb
dec
and
pusha
cmp
cmc
rorb
add
sub
int3
sbb
lahf
aad
aam
ljmp
icebp
into
sti
inc
insb
ds
push
stos
ret
nop
lock
add
cmp
outsb
sub
add
mov
fiaddl
xchg
arpl
mov
or
int3
sub
daa
xor
adc
pop
sbb
fucomi
jno
xchg
jnp
mov
add
push
mov
test
add
fbstp
icebp
mov
aam
lahf
repz
popf
mov
inc
rorl
outsl
fiaddl
sub
sbb
sbb
cmp
lods
push
xchg
aaa
adc
cmp
mov
pop
adc
dec
fcomi
mov
cmp
out
mov
ja
out
adc
and
inc
roll
push
loopne
sbb
and
mov
jo
jo
inc
adc
addr16
inc
or
cmp
push
fiaddl
ss
inc
inc
pop
and
cltd
adc
pop
imul
in
sbb
notl
insb
jne
xchg
cld
cli
and
xchg
xor
js
lea
jne
icebp
jns
data16
shlb
add
xchg
ja
rclb
xchg
fiadds
shrl
adc
mov
inc
fs
jb
lahf
out
jno
mov
enter
adc
jno
lahf
mov
addr16
xchg
test
xor
ret
or
jp
mov
aam
adc
dec
pop
add
scas
mov
xor
js
sbb
ret
adc
mov
test
xor
add
imul
pop
lods
or
mov
mov
cmc
pop
mov
sbb
cmp
jbe
mov
cmp
dec
jg
add
test
es
push
mov
adc
jb
dec
inc
jbe
sub
jg
out
add
sbb
adc
aas
adc
sub
daa
mov
jne
sti
out
cmpl
loopne
outsb
sub
stc
subl
out
mov
dec
sahf
xor
lret
outsl
aaa
fdivs
xchg
inc
ljmp
mov
int3
cmpsl
xchg
and
sub
loope
jb
rclb
inc
jno
mov
push
shrl
idiv
pop
or
mov
enter
mov
or
and
xlat
jno
in
int
insb
xorl
push
jle
movsb
cli
xor
mov
outsl
adc
inc
inc
std
nop
scas
and
jbe
test
fmuls
mov
call
or
and
frstor
insl
sbb
pusha
sbb
jae
stos
arpl
dec
rcrb
clc
and
aam
dec
gs
xor
stos
cmp
and
sbb
lret
mov
mov
icebp
add
ja
sub
pushl
hlt
cmp
pusha
mov
repz
dec
cli
int3
pop
test
test
imul
aad
jno
xor
and
aam
jg
pop
vshufpd
stos
jae
mov
add
adc
pop
and
int
xchg
les
jbe
mov
dec
cs
in
or
addr16
xchg
aaa
dec
stos
jg
adc
pop
das
jne
rcll
pop
lret
test
lahf
cmp
push
lahf
adc
shr
das
inc
jmp
nop
out
out
fsubl
aas
inc
mov
jmp
mov
mov
test
add
pop
fwait
scas
sub
inc
pop
outsl
loopne
sub
outsl
mov
and
sub
out
iret
xchg
push
jl
arpl
jno
push
icebp
or
push
xor
imul
es
test
fnstcw
rorb
mov
js
xor
dec
add
jp
divb
sub
fdivrl
imul
lahf
subl
insb
or
out
pop
popf
aas
xchg
cli
and
cmpl
mov
dec
sub
mov
pop
sahf
mov
test
aaa
ljmp
push
das
mov
call
in
shll
cmc
mov
mov
sarb
sbb
mov
or
js
xor
outsl
mov
cs
or
adc
push
and
jb
dec
lods
pop
out
sub
jbe
sbb
test
in
out
jnp
xchg
and
loope
lods
shlb
ljmp
mov
setg
clc
mov
sbb
cmp
pop
push
les
scas
xchg
fstp
fnstsw
add
xchg
cmp
mov
mov
mov
lods
mov
cmp
negl
mov
jno
lea
andl
adcl
mov
sub
sbb
inc
jmp
test
push
nop
mov
pop
xor
std
sub
in
scas
sbb
orl
and
ret
jne
inc
sub
inc
imull
repz
xchg
pop
pop
enter
mov
mov
jg
aam
lcall
popf
xorl
enter
leave
shr
push
pop
test
lods
stos
insb
ret
pop
xor
lods
int
out
sub
out
dec
xchg
xchg
stos
movsb
repnz
xchg
jae
out
and
cmp
cwtl
call
lods
lret
jmp
cwtl
mov
push
rcrb
adc
inc
mov
mov
dec
loop
imull
lods
cmc
test
dec
leave
sub
lret
lock
ljmp
mov
mov
cmpsb
xchg
les
dec
leave
stos
or
cwtl
jmp
jge
into
jp
stos
iret
xor
loope
push
jge
js
cmp
jo
jmp
pop
jns
mov
sub
push
test
stos
jg
cs
mov
into
daa
loopne
mov
jg
ficompl
jbe
dec
mov
mov
das
cltd
dec
les
loop
xor
mov
nop
push
outsl
mov
mov
je
lret
dec
dec
dec
not
xchg
or
xchg
loop
sbb
dec
sbb
punpckhbw
nop
sti
fst
pop
repz
mov
dec
push
mov
into
mov
je
push
std
js
mov
aam
lods
inc
sbb
mov
jne
out
in
mov
incb
inc
and
xchg
mov
test
ror
push
enter
out
orl
jne
jb
jecxz
or
xor
call
scas
jg
movsl
mov
lahf
daa
push
mov
sarb
scas
rcr
data16
and
adc
mov
push
fiaddl
out
jecxz
outsb
sbb
loop
dec
arpl
mov
test
mov
fidivrs
outsb
fwait
xchg
shlb
stos
nop
jmp
pop
xchg
xlat
jl
mov
xchg
inc
mov
lcall
ret
jns
mov
ja
add
andb
sub
mov
xorps
push
xor
push
out
out
push
lahf
rol
insl
inc
in
out
out
cmpsb
cmpsl
mov
ljmp
imul
in
jmp
jl
and
pushf
nop
adc
xchg
int3
dec
jle
mov
pop
and
stos
daa
xchg
or
xor
xorb
scas
jno
fdivs
popf
mov
push
lds
pop
mov
out
fmull
jae
push
jecxz
xlat
outsl
addl
cmpsl
inc
leave
jl
fmuls
jle
mov
mov
adc
sub
adc
xchg
scas
movsl
inc
mov
adc
mov
in
je
mov
xchg
jmp
out
insb
or
loop
push
in
dec
cmp
pop
mov
test
dec
aad
dec
jl
insl
fucomip
sti
fadds
mov
mov
js
mov
ja
jmp
out
push
jnp
int3
xor
fs
xchg
or
mov
lahf
cltd
adc
adcl
outsl
punpckhwd
fs
sbbl
js
fstp
fs
daa
push
lahf
sbbb
mov
call
pushf
pop
dec
iret
cmp
pop
adc
test
jae
ret
adc
ja
jmp
jno
push
sarl
pop
cmp
enter
fucomi
in
adc
insl
mov
test
stos
pop
jnp
jp
test
jae
stc
mov
jb
add
test
add
stc
adc
fisttps
movsl
dec
bound
cmp
movsb
jge
lods
scas
filds
test
push
and
mov
inc
pop
aam
pusha
pop
jnp
jle
and
mov
fisttpl
xor
jmp
repnz
lret
xor
mov
and
add
and
jbe
pusha
inc
cmc
xor
js
jmp
cs
movsb
sarb
pop
iret
jge
dec
add
pop
jg
pop
addr16
jnp
es
lret
sbb
orb
jmp
nop
xorl
mov
inc
out
ret
lret
push
into
fcmovbe
stos
mov
mov
xchg
scas
test
outsl
jb
push
scas
test
sub
sbb
rol
scas
adc
imul
xchg
loop
pop
mov
adc
xchg
jmp
pop
xrelease
popf
js
adc
jl
cmp
pusha
cltd
movsb
jo
lahf
cs
aad
xchg
enter
out
cld
push
mov
bnd
jb
js
stos
ljmp
lret
mov
out
mov
sbb
sbb
mov
jns
insl
cltd
sbb
inc
xchg
int
pop
jno
pop
inc
mov
jg
dec
jno
cmp
ret
xchg
scas
insb
mov
out
lods
cmp
lods
decb
insb
push
xor
movsb
jne
shll
scas
sub
mov
xor
jg
pop
pop
movsb
mov
push
push
leave
xor
jns
imul
div
dec
and
inc
in
lods
pop
mov
jbe
dec
dec
fistpll
jle
outsl
xorl
roll
jge
lods
imul
sub
cmovl
xlat
mov
mov
call
jns
push
sbb
std
pop
aad
lret
mov
dec
cmp
out
cmp
dec
and
loop
scas
imul
stc
loopne
das
in
std
imul
test
cmpsl
mov
hlt
jae
test
jmp
adc
mov
sarb
aam
mov
inc
jnp
mov
ja
iret
imul
xor
mov
ficomps
fldt
push
lahf
ja
inc
jmp
mov
jae
arpl
imul
or
jl
faddl
jnp
cs
xchg
mov
push
jns
adcb
dec
fimuls
mov
les
adc
jp
inc
loope
out
pushf
mov
pop
mov
adc
fiaddl
push
cs
and
lods
cs
mov
mov
add
loope
mov
out
stos
repz
pop
pop
xchg
imul
cmp
xchg
out
jle
cld
xorb
mov
in
in
sub
leave
xchg
jecxz
and
xchg
addr16
cmovnp
je
in
out
or
out
mov
hlt
and
cltd
repz
xchg
cmp
cwtl
jmp
sub
jmp
mov
in
sarb
ja
push
lods
mov
pop
or
test
filds
jb
xorl
out
pop
mov
xchg
in
sahf
jno
jge
stc
xchg
sub
cld
xor
sub
out
cmp
dec
jl
into
xor
sbb
imul
shlb
adc
inc
add
inc
jecxz
and
cs
cmpl
jb
lds
xor
cs
xchg
lcall
pop
aam
jne
mov
fdivl
jns
in
gs
dec
xor
mov
pop
aaa
ja
or
test
jl
sub
push
cmp
negb
and
inc
sbb
aam
mov
js
xor
xor
stos
in
pop
repz
cwtl
jb
ffreep
out
sub
loopne
jo
sub
inc
cmp
loope
rcrl
jnp
rcrb
in
loope
or
sub
lea
shll
arpl
movsl
cwtl
jo
loopne
add
mov
mov
sbbb
or
cmpl
sub
mov
mov
insb
in
mov
sbb
and
lea
bound
cmpsb
push
iret
xor
loope
lahf
lods
stos
cmp
add
dec
into
fdiv
es
mov
clc
neg
and
xlat
mov
in
movsb
mov
or
cmc
dec
mov
dec
out
mov
push
push
push
mov
je
fdivrl
out
outsb
stos
push
shlb
pop
jnp
sarb
pushf
pop
mulb
addr16
jp
xor
jmp
aaa
sbb
in
ss
cmp
adc
out
loope
xor
fcmovnbe
jmp
out
push
in
xchg
dec
repz
xchg
js
in
inc
push
mov
xorb
shlb
mov
jno
loopne
shll
sub
pop
pushf
push
jle
mov
bnd
sbb
pop
nop
mov
xchg
jae
jne
imul
insb
dec
mov
clc
push
shll
fistpl
xchg
sub
data16
xchg
lock
mov
xchg
enter
cmpsl
mov
xor
test
push
xor
jl
sbb
rcrb
inc
shll
pop
pop
gs
dec
mov
test
push
outsl
xor
mov
fdivl
dec
jb
cmpl
out
stos
inc
xchg
icebp
add
mov
or
clc
popf
loop
fstpt
inc
cwtl
fwait
inc
ret
fwait
jmp
inc
jae
xchg
scas
test
xor
xorl
xchg
imul
leave
sub
mov
xchg
sahf
pop
mov
jno
addb
adc
stos
sub
pop
es
mov
aaa
jns
das
mov
mov
mov
pop
repz
cmc
pop
mov
cmp
loop
js
fstp
jg
jns
lahf
jp
jo
cmp
push
cmp
xlat
mov
fdivrl
movsb
fcoml
mov
adc
push
ret
int
daa
xchg
iret
mov
pop
lds
test
aam
sub
cmp
gs
jl
stc
inc
or
sbb
push
sub
jl
daa
aas
push
adc
jp
sub
jp
xchg
repz
mov
test
cltd
mov
out
ret
jle
mov
jae
xor
out
and
rorl
and
xlat
mov
in
cmp
leave
pop
xchg
inc
xorb
mov
outsl
pop
or
mov
push
push
int3
pop
xlat
imul
dec
jg
lea
cmpsl
int3
into
and
lret
aam
mov
out
imul
mov
test
and
mov
sub
clc
addr16
jl
add
xor
ret
sub
sbb
cmpl
add
out
mov
pop
cmpsl
aaa
pushf
inc
repz
mov
xor
inc
lods
fisubrs
orb
movhps
jns
nop
mov
sbb
adc
imul
jl,pt
adc
adc
fldt
dec
int3
sti
movsb
int
mov
sbb
scas
xchg
in
jnp
shlb
dec
mov
xchg
test
dec
shll
mov
pop
pushf
pop
jle
insb
mov
sub
xor
cmc
sbb
cmp
nop
mov
jg
mov
lahf
jle
mov
fidivrl
adc
fdivrs
lahf
out
std
sbb
pop
cmp
addb
inc
dec
lret
push
inc
repnz
push
js
cmpsb
das
repnz
or
das
sbb
imul
ret
je
ja
jo
jge
fdivrs
mov
addr16
dec
in
mov
mov
and
addl
cmp
mov
or
jae
push
xor
dec
lods
pop
jae
xchg
xchg
jo
out
mov
rolb
mov
inc
fidivrl
push
push
dec
jo
in
pop
test
jge
pop
int3
jbe
lock
stc
and
push
out
fldenv
js
mov
inc
ss
adc
repz
mov
jno
addr16
or
dec
dec
adc
add
rorb
nop
jle
jge
push
fidivrs
sub
fisttpl
add
out
fwait
repnz
jnp
fs
sbb
movsb
pop
sub
nop
fnsave
jbe
leave
arpl
push
ljmp
inc
popa
jae
je
dec
fldl
jno
andps
jle
jmp
cmp
test
inc
loopne
push
pop
scas
sub
sbb
aad
push
repz
lea
movsb
xchg
adc
fidivl
lahf
mov
dec
nop
mov
adc
mov
mov
test
rcrl
aam
jne
test
ljmp
mov
addl
add
mov
ret
insb
dec
dec
jno
mov
jle
gs
cmpb
pop
and
mov
and
popf
mov
rcl
mov
jmp
mov
xor
jb
jp
mov
jno
aad
inc
aaa
test
test
lahf
in
mov
cltd
pop
mov
or
incl
mov
leave
sub
pop
xchg
ds
sbb
imul
sbb
daa
mov
mov
sub
dec
pop
push
stos
or
add
call
push
pop
popf
sbb
enter
lret
notl
ret
xchg
stos
call
jl
mov
push
dec
out
gs
dec
test
sbb
in
je
jbe
adcl
aam
lahf
fnstenv
mov
repnz
je
mov
pop
mov
push
popf
out
jnp
xor
gs
imul
stc
pop
mov
jno
mov
out
je
jno
xchg
mov
outsb
outsl
mov
mov
jb
in
fistpll
mov
sysenter
inc
js
jno
jecxz
jae
pusha
repz
jge
fs
imul
arpl
cmp
lods
pop
xor
dec
cmp
pop
call
pushf
out
inc
repnz
and
mov
push
mov
and
adc
sub
addl
fbstp
in
add
pop
mov
mov
push
enter
pop
roll
xchg
std
fldl
mov
mov
mov
lods
jbe
insl
jg
cmpsb
pop
loop
xchg
mov
push
and
test
pop
jno
icebp
cmp
iret
sub
or
jmp
les
inc
add
in
icebp
xchg
push
sbb
mov
mov
in
icebp
mov
or
jmp
and
lret
movsb
xchg
sub
pop
scas
jae
and
jns
mov
add
call
mov
dec
flds
and
movsl
test
addr16
data16
mov
addl
pusha
mov
or
cmp
out
jp
sub
xor
and
fadds
repz
adc
mov
pop
lea
jg
mov
das
movsl
and
shl
or
mov
xchg
fninit
repz
mov
out
lahf
dec
push
insl
push
adc
dec
jmp
pop
jnp
mov
lea
pushf
mov
jnp
enter
jbe
inc
cmpsl
ds
fisttpll
push
test
test
mov
mov
gs
sbb
xchg
outsl
xor
sbb
ret
out
insb
shrl
push
sbb
xlat
popf
out
lret
loope
mov
aam
inc
ss
mov
xor
xlat
mov
pop
push
pop
dec
enter
movsb
cmpsl
enter
jbe
inc
cmpsl
cmp
imul
push
pop
mov
and
ficomps
jo
arpl
push
lret
into
sbb
ja
mov
xchg
imul
sub
push
movsl
cmp
out
in
cmpsl
pop
dec
jae
xchg
xor
test
js
sbb
cltd
fnstcw
sarl
xorl
pop
jns
adc
mov
mov
mov
ljmp
jbe
xchg
jg
mov
and
push
lret
negl
jge
lds
mov
mov
ficoms
mov
xor
jnp
mov
pop
add
movsb
sbb
ss
mov
jl
push
mov
mov
movsb
bound
push
adc
fidivs
jae
outsl
xchg
into
jb
test
or
cmp
mov
sub
cmp
jg
outsl
pop
fsubp
loope
enter
push
fwait
and
mov
scas
das
cmp
add
xchg
push
movsb
inc
jmp
nop
int3
inc
mov
cmp
push
fnstsw
mov
nop
xchg
jle
push
sub
ret
int3
outsl
cmp
fnstcw
push
inc
sahf
test
sti
mov
popf
mov
push
mov
mov
lods
inc
std
insb
or
cltd
popf
stc
imul
xor
xor
mov
jmp
vmwrite
pusha
shlb
pop
movswl
lds
pop
cli
add
push
push
imul
cmp
test
mov
scas
pop
xor
mov
mov
sub
sbb
cmc
sub
insl
mov
mov
or
das
xchg
xchg
pop
lods
into
mov
push
nop
test
or
cmp
or
push
outsl
sbb
lods
or
mov
rcrl
dec
insb
and
push
mov
inc
mov
adc
into
push
jnp
fistl
add
pop
fstpt
fs
pop
fisttps
and
adc
mov
sarl
out
cmpb
xchg
mov
cmpb
popa
mov
arpl
dec
subb
push
pop
cli
nop
jno
int3
mov
in
mov
cmp
and
xor
add
leave
stos
scas
adc
cmp
std
push
mov
fwait
mov
cmc
mov
lcall
cmp
iret
test
push
sbb
insl
insb
mov
push
xchg
add
adc
mov
pop
pop
jb
adc
adc
add
pop
inc
cmp
imul
jae
cmp
shlb
loopne
inc
add
and
mov
jmp
jmp
fwait
dec
js
dec
test
pop
and
add
or
jo
cmp
or
xchg
aaa
js
inc
addr16
rolb
or
add
push
lock
iret
dec
mov
ret
add
movb
push
or
outsb
adc
pop
or
mov
pop
or
jg
enter
sbb
arpl
mov
fcoms
sar
jp
sub
in
cmp
arpl
and
mov
insl
mov
pop
push
dec
push
xor
lret
fwait
and
decb
inc
jnp
add
stos
push
sarl
add
pop
xchg
mov
push
push
in
repnz
push
xchg
std
cli
inc
xor
cmp
scas
and
fs
sbb
enter
xchg
stc
mov
dec
sub
fwait
inc
sti
or
jb
mov
cmp
jecxz
cmp
push
push
iret
jg
lret
movsl
xchg
xchg
xchg
dec
daa
sahf
mov
mov
repnz
mov
jg
and
call
add
sbb
push
rcrl
fcomp
xchg
pop
push
push
fists
fnsave
into
int
xor
jno
push
lock
std
adc
out
inc
mov
outsl
add
inc
xlat
mov
sbb
and
or
sahf
insl
pop
dec
sbb
fadd
sbb
add
imul
mov
push
mov
mov
and
cmp
stos
or
repnz
stc
mov
adc
pop
or
inc
insb
push
fnstenv
je
in
stos
jbe
js
or
add
sarb
insb
lcall
popf
cmp
test
fdivp
xor
insl
mov
or
pop
xor
xchg
xlat
cmp
mov
cmpl
shrl
rolb
xchg
dec
mov
subl
in
mov
add
adc
in
push
jnp
sub
sbb
movsl
cmc
jp
aam
mov
jb
lock
fmulp
mov
or
in
lds
sub
enter
pop
xor
pop
loop
ljmp
dec
or
sub
aas
inc
and
push
shl
nop
outsl
dec
lods
adc
sbb
pop
mov
cmp
cmp
fsubs
sub
jp
jle
lcall
sbb
ja
adc
xchg
cmp
adc
jb
mov
or
pop
add
jp
fldcw
or
xor
or
popa
data16
push
jl
jp
clc
jle
movsl
fs
and
lcall
cld
pop
mov
frndint
jg
mov
test
imul
in
test
mov
inc
es
es
mov
mov
pop
cmpl
ret
cmpsb
pop
adc
nop
lret
nop
fnstsw
les
adc
outsb
sbb
sbb
cmc
jle
pop
sub
cmp
push
shrl
adc
cwtl
mov
xchg
arpl
adc
outsl
and
xor
xchg
cld
out
lcall
and
ja
adc
mov
movb
and
bound
fidivl
cmp
pop
int
or
loopne
mov
adc
push
mov
jle
mov
insb
add
cwtl
inc
loopne
les
mov
dec
pop
jge
or
adc
lock
and
mov
push
mov
leave
and
add
sub
bound
lods
outsb
push
sbb
inc
popa
into
dec
or
cs
fcoml
inc
mov
dec
arpl
lahf
mov
mov
pop
xchg
adcl
pop
pop
and
stos
push
imul
inc
inc
enter
repnz
lcall
lds
xor
in
iret
or
arpl
inc
ljmp
neg
sub
cmc
jno
and
add
dec
and
push
cmpsb
lret
sub
nop
push
ds
mov
push
lret
xchg
insl
je
sbb
mov
fistpl
pop
stos
push
subl
test
sub
and
xchg
cmp
pusha
cmp
push
aam
shrb
sbb
add
scas
fidivrl
sub
cmp
js
outsb
mov
add
inc
aaa
mov
mov
out
lds
in
mov
jo
mov
push
paddw
cld
imul
cmp
out
lods
jmp
mov
fadds
mov
pushf
enter
jg
aam
pop
inc
out
pop
mov
inc
xchg
pop
ret
sahf
jecxz
leave
ror
enter
int
push
xchg
mov
cmp
cltd
mov
test
and
xchg
dec
les
xchg
xchg
and
enter
fisttpll
sarl
cmp
mov
inc
imul
adcl
pop
and
inc
dec
adc
sbb
inc
cmc
mov
xchg
cmp
mov
dec
cmp
jmp
rclb
lahf
test
lahf
push
xlat
jo
xor
or
ficomps
jp
iret
mov
fmul
data16
gs
insb
pop
aas
jecxz
sbbb
loop
jns
mov
xor
or
push
dec
cmp
cmp
call
jb
and
or
les
xchg
dec
push
and
stos
iretw
imul
aas
jecxz
mov
popf
test
jae
xor
adc
pop
imul
mov
pop
movsl
xchg
lcall
nop
pushf
mov
push
jge
aas
imul
imul
adc
insl
mov
fxam
dec
and
repnz
int
jbe
addr16
fsubrs
adc
push
xchg
fst
add
mov
test
subb
aas
xchg
inc
pop
stos
or
loopne
dec
cli
hlt
and
sahf
adc
pop
cmp
jle
xchg
sub
ret
rcrb
jnp
mov
xchg
out
cmp
lret
nop
sbb
in
test
cmp
test
pop
mov
lea
pop
add
dec
sub
out
xchg
std
fisubrs
cmp
test
cltd
fsub
push
stos
lock
movb
pop
fldenv
inc
rcr
mov
add
mov
or
mov
and
or
push
xchg
inc
cmp
jl
or
pushf
orl
iret
and
cmp
sub
out
cmp
mov
std
mov
pop
jge
stos
movsb
add
jg
inc
xlat
aad
test
ret
xlat
or
mov
fs
mov
rorl
cmpsb
sub
xor
pop
and
xchg
sarl
add
xchg
in
dec
call
aad
xchg
mov
jmp
push
mov
ret
mov
xor
cmc
stos
iret
stc
scas
cmp
sub
sub
popa
popf
jns
imul
adc
out
add
and
cmp
into
fsubrl
jecxz
cmp
fnsave
or
or
insb
mov
into
pop
push
mov
cmpl
cli
in
out
xchg
popf
add
dec
push
mov
pop
mov
pop
cmp
inc
xor
push
jg
jns
mov
pop
clc
nop
xchg
test
or
mov
adc
pop
aas
mov
sbb
sub
and
push
hlt
das
xor
out
sub
or
add
test
jg
bnd
xchg
mov
cli
shrd
les
pop
xor
aad
fmul
int
fxch
xor
fists
scas
imul
iret
and
mov
out
mov
imul
imul
mov
movsb
jp
movsl
push
les
lcall
jo
mov
pop
xlat
sahf
out
out
sbb
jg
jle
sbb
and
and
ficompl
test
push
and
stos
fxch
cli
xor
or
leave
packssdw
jl
outsl
and
jae,pn
xor
aaa
and
scas
mov
inc
lahf
iret
or
flds
jns
sahf
outsl
mov
mov
xchg
mov
adc
mov
and
fisttpl
pop
dec
outsb
cmp
xchg
sub
mov
pop
aam
push
dec
fs
stc
xchg
arpl
outsb
jl
repz
xchg
adc
into
out
add
fdivrl
add
cltd
pop
pop
fyl2x
in
lret
mov
or
into
insl
jg
lret
nop
pop
pop
mov
push
xchg
out
std
arpl
fdivl
mov
aad
fidivrs
push
out
or
scas
xor
hlt
and
shr
sub
movsbl
push
mov
push
test
mov
and
das
sarl
fidivrs
push
cmpsl
mov
mov
lret
pop
pop
cmp
push
dec
imul
mov
in
mov
jo
fisttpll
sar
adc
inc
aam
aad
pushf
mov
aaa
stc
fnsetpm(287
inc
dec
xchg
fists
adc
out
addr16
subl
dec
sub
pop
mov
sbb
ds
fmul
add
xchg
pop
dec
fdivp
jo
sub
pop
add
or
dec
push
je
fs
inc
inc
popf
adc
psllq
jl
add
aam
int
aas
cmp
ficoml
dec
mov
loopne
ret
movsb
lret
lods
add
into
pop
add
xor
push
cmp
pop
pop
dec
bound
cmpsl
dec
into
ja
insl
fnstcw
mov
fstps
outsb
das
icebp
lcall
push
repnz
dec
xchg
jns
cmp
inc
push
add
dec
scas
mov
enter
xor
add
add
sbb
sub
xchg
pushf
inc
inc
add
aam
les
je
les
add
ficoml
aas
bound
push
mov
pop
das
sbb
sahf
xchg
mov
xchg
jae
mov
mov
xchg
sbb
jmp
in
lret
inc
pop
sub
iret
sbb
outsb
sbb
inc
pop
mov
pop
jp
fwait
pop
jle
push
xor
jp
jecxz
cltd
aam
adc
push
fnstcw
out
jo
aam
sub
ret
into
sti
or
adc
pop
and
pop
mov
fwait
insb
scas
sbb
sbb
data16
pop
stos
stos
push
sbb
fs
and
push
sarl
imul
xor
pextrw
xchg
fwait
or
js
dec
and
jb
and
push
in
pop
fistl
cli
fdivrp
aaa
xchg
and
ret
cmpsb
lcall
addr16
sahf
and
dec
and
out
jnp
jmp
stos
dec
and
mov
fwait
popf
bound
mov
pop
dec
rorl
pusha
repz
push
aas
push
mov
iret
add
push
mov
mov
cld
lcall
jp
cwtl
push
arpl
push
push
loope
lcall
dec
add
sbb
and
pop
insb
adc
mov
jecxz
fisttpl
inc
xchg
xchg
gs
dec
jp
pop
ja
imul
fcomip
pop
xor
imul
xor
sbb
xor
mov
sub
int3
lret
js
cmp
push
mov
shll
cltd
add
in
jnp
or
cmp
dec
das
imul
test
lods
push
popa
push
into
adc
repnz
mov
clc
mov
mov
std
sbb
fisubl
test
cmp
adc
cmp
pop
pop
fbld
pushf
movaps
in
out
or
rcl
rcrl
cwtl
dec
in
push
dec
sub
loope
xchg
pop
or
xor
cmp
popa
dec
adc
dec
xchg
rorb
cmp
xchg
or
inc
dec
mov
scas
stos
push
rcl
movsl
pop
pop
xchg
aam
pop
in
inc
jae
outsb
xchg
push
aam
push
jl
jmp
xchg
inc
rorb
fisubrl
sbb
pop
ret
xchg
or
xor
xchg
sub
imul
dec
mov
shrb
mov
addb
inc
jo
movsb
jno
inc
add
xchg
in
mov
add
pop
stos
fs
mov
dec
out
fstl
and
dec
pop
jge
add
add
push
dec
aas
imulb
and
std
pop
cmpsl
pop
stos
sti
push
test
jge
pop
push
xchg
pop
jae
mov
jbe
shll
add
pop
inc
jns
insb
ret
enter
xchg
cmp
pop
jmp
int3
add
sub
stos
xor
iret
cmc
sbb
out
lds
sbb
xchg
repz
pop
ss
mov
push
xchg
mov
push
add
dec
retw
jbe
xchg
or
lahf
ljmp
sarb
mov
xchg
stos
cwtl
cmp
mov
mov
insb
rcll
fistl
insl
mov
adc
es
mov
xchg
cltd
imul
jl
push
xchg
mov
bound
sbb
inc
mov
push
pop
inc
xlat
inc
jp
stos
or
mov
mov
cmpsl
and
sbb
sub
jae
repz
xchg
xor
jae
cmp
aad
das
push
loope
fnstcw
cmpb
lret
pop
sub
mov
push
xchg
sub
mov
fcomp
and
testl
jle
adc
mov
xor
push
pop
je
insb
aad
cmpl
jns
sub
jecxz
les
jne
inc
repz
sbb
jle
add
scas
pop
pop
sub
in
pop
repz
ret
mov
push
dec
jne
bndstx
dec
aas
pop
shrl
pop
insb
xchg
xchg
mov
mov
je
stos
test
push
cmp
push
mov
sub
fst
mov
ss
mov
push
jl
xor
aad
test
movsb
insl
pop
inc
lods
mov
sti
jno
push
dec
orl
push
inc
sub
dec
loop
call
stos
fs
mov
jne
add
jne
je,pn
mov
and
mov
cmp
es
sbb
js
std
shrb
inc
in
pop
cmp
xlat
bound
idivb
jnp
fisttps
les
add
cmpsl
push
xchg
mov
cwtl
mov
arpl
xorl
jmp
insl
leave
adc
dec
ss
mov
inc
mov
xlat
xor
fldt
mov
inc
push
scas
repz
iret
sbb
ficompl
dec
cmp
fdiv
push
dec
add
push
jge
jmp
sbb
or
adc
fs
call
fsts
cmp
mov
push
adc
cltd
mov
adc
sub
mov
out
inc
cmc
add
jo
leave
xchg
xchg
insl
cmp
clc
mov
cmp
sahf
xor
inc
addr16
inc
xchg
or
dec
push
cmp
mov
mov
add
faddl
or
sbbl
rcll
add
fiadds
enter
std
mov
int
outsb
lret
cmpsl
xor
pop
mov
adc
dec
daa
mov
jle
or
inc
popa
pushf
xchg
fiadds
out
xchg
in
cmpb
inc
cltd
add
pop
nop
xchg
arpl
xchg
mov
xor
mov
lods
fs
fs
fistl
jns
bound
adc
mov
outsb
addl
into
cmc
pop
out
fnsave
lods
mov
and
push
mov
jge
mov
shlb
adc
iret
mov
cmp
jbe
pop
out
push
in
push
movsb
test
mov
push
adc
adc
jnp
sbb
xorl
xor
test
nop
sub
sarb
mov
xor
sbb
pop
les
aam
ja
stos
retw
loope
leave
mov
pop
call
addr16
mov
or
jp
adc
hlt
fstpt
das
lret
pop
mov
ss
inc
stos
jae
ss
sbb
or
inc
lcall
xor
testb
jmp
jae
add
pusha
ss
fstpl
fdivrl
outsb
ljmp
xor
shlb
mov
xchg
jae
lcall
test
dec
sbb
push
mov
sar
or
outsl
ss
mov
mov
ljmp
push
insl
and
mov
mov
cwtl
mov
inc
leave
or
icebp
sbb
jmp
push
clc
inc
pop
mov
lahf
mov
adc
push
pop
push
int3
in
pop
xchg
or
mov
jno
sub
jle
leave
sbb
lret
fwait
push
or
cli
es
fcmovnb
jmp
pop
push
pop
popf
push
cld
test
xchg
add
xchg
add
xchg
adc
fisubrs
xchg
repz
ja
adc
xchg
pop
scas
mov
xchg
mul
sub
roll
jb
clc
test
insl
aas
adc
jle
xchg
pop
test
xor
popa
pop
jns
xor
lods
fimuls
in
test
cmpxchg
pusha
sbb
and
stos
rorl
push
scas
xchg
adc
enter
mov
jecxz
repz
xchg
mov
insl
popa
sar
mov
xchg
les
ljmp
cmp
mov
je
scas
fdivr
xchg
fisttps
fincstp
pop
scas
daa
cli
push
xchg
imul
xor
mov
stos
out
jne
sub
inc
jl
cld
cli
dec
cld
cmpsb
lods
xchg
aas
clc
push
push
clc
xorl
jno
push
mov
mov
cltd
mov
fisttpl
sbb
or
lds
stos
shr
stos
pop
lds
lock
or
test
mov
xchg
add
out
cwtl
shr
nop
adc
out
lahf
test
jo
mov
push
test
lds
ret
daa
bound
sbb
or
nop
mov
pop
loope
scas
mov
mov
mov
mov
fldl
ficoml
mov
out
cltd
in
lock
cmp
cwtl
mov
test
push
das
pop
adc
test
popf
inc
ret
fwait
xchg
pop
fwait
add
adc
push
pop
jmp
jle
stos
jnp
dec
bound
jns
and
loope
or
cwtl
or
pop
pop
stc
imul
adc
mov
lea
and
fisttps
pushf
loop
mov
pusha
inc
jns
jp
popf
cltd
xor
pop
or
inc
shrb
and
add
test
adc
adc
lahf
or
pop
inc
xchg
xor
call
or
flds
in
mov
mov
fnstcw
ret
jns
dec
fiadds
dec
pop
adc
pop
mov
jo
cmp
ret
cmp
rcrl
xchg
or
fwait
or
mov
adc
sub
mov
nop
lret
dec
outsb
pop
xor
xchg
mov
xchg
inc
nop
push
and
add
fs
pop
pop
das
inc
mov
ret
sahf
jp
sbb
push
xor
imul
sbbb
cmp
cmovb
scas
out
mov
pop
or
mov
sbb
les
and
lcall
aam
and
std
nop
cmp
and
adc
adc
popa
out
aaa
fwait
scas
jle
adc
out
scas
cmp
jl
out
and
jle
clc
adc
aam
jne
in
cwtl
jp
mov
jmp
inc
fidivl
inc
pop
xor
sbb
jae
and
cmc
lods
iret
test
pop
xchg
lods
std
xchg
popf
lds
std
cmp
xchg
pop
inc
stc
push
ja
and
push
inc
pop
jne
push
sbb
mov
or
mov
push
test
mov
jbe
pop
scas
aaa
dec
mov
xor
ljmp
inc
and
dec
sarl
xor
notl
fldl
add
xchg
lahf
popf
sub
arpl
sub
inc
inc
pop
fxch
sub
icebp
add
fsubrp
mov
in
cmp
cwtl
jge
out
inc
cmpsl
lods
jnp
popf
jecxz
enter
fstpl
es
int3
xchg
and
mov
ss
int
push
ljmp
mov
rep
or
nop
inc
xor
sbb
insb
mov
adc
rolb
sarb
xor
add
mov
mov
out
loope
addb
cmp
dec
adc
andl
xor
adc
stc
and
jmp
jg
mov
repnz
jg
cmp
xchg
add
dec
jb
pop
mov
push
sbb
jns
leave
add
push
jmp
xorb
dec
xlat
pop
fwait
je
mov
xor
gs
sbb
jp
notb
dec
pop
mov
fsubrl
icebp
mov
sub
pop
or
outsb
mov
test
fldcw
arpl
jg
int3
imul
xor
inc
sub
cmp
std
push
mov
and
loop
jmp
sbb
mov
jmp
push
jae
push
push
lahf
gs
loopne
and
and
daa
dec
jl
xor
aas
jmp
ficompl
mov
ja
imul
filds
push
faddl
adc
loop
jp
inc
stc
cmp
mov
repz
and
fcomi
sbb
xor
push
rorb
pop
les
movsl
lret
cmpsb
xor
movsl
addl
insl
imul
xor
jb
cmp
rolb
scas
fmuls
call
jo
xor
xchg
les
into
data16
jg
in
adc
or
cmp
adc
outsl
mov
frstor
call
xchg
pop
inc
shrl
sbb
mov
push
mov
outsl
aad
out
fstpl
xorb
adc
call
dec
pop
dec
cmp
popa
outsl
jecxz
rep
cmp
data16
popf
mov
inc
pop
int
xor
push
cmpl
jnp
iret
cmc
dec
hlt
add
fs
lcall
xchg
xchg
sbb
cltd
or
xchg
jmp
and
push
xchg
mov
pop
dec
subl
xchg
ss
cmp
ret
mov
cwtl
stos
aaa
fidivrs
mov
push
dec
jmp
imul
push
fimuls
aam
or
movsb
mov
or
fstpl
inc
push
pop
arpl
mov
jl
sbb
popf
mov
jb
das
test
movsb
jmp
into
shlb
iret
and
dec
and
loopne
stos
sub
adcl
lock
fwait
ret
cld
ds
sub
aad
jbe
sub
push
push
scas
clc
fsub
stos
push
ja
push
or
mov
cmp
inc
sti
adc
rolb
pop
leave
pushf
out
pop
int
test
adc
xchg
mov
xor
mov
iret
cmp
mov
sti
testl
mov
es
jge
pop
mov
xchg
ret
adcb
jns
push
aaa
mov
add
mov
rol
jno
jae
jge
lock
ret
test
orb
div
fs
nop
stos
cli
out
lret
js
push
aam
lahf
mov
add
call
outsb
xchg
add
or
pop
jg
stos
push
mov
cwtl
inc
cld
fisubs
cmpl
daa
mov
nop
xchg
arpl
mov
daa
movsl
cmp
jns
or
dec
dec
test
fcomi
lods
xchg
xor
xchg
fistl
mov
xchg
sub
sbb
push
bswap
in
mov
mov
out
std
push
lcall
int3
xchg
pop
push
xchg
pop
subb
ss
pop
and
pop
sub
lods
cmp
pop
ja
ret
or
adcb
out
cmc
xchg
rcl
dec
mov
push
sub
adc
jle
mov
ret
dec
or
xchg
lahf
adc
jns
add
xchg
lret
orb
xchg
movd
mov
fs
lock
inc
or
xor
ficoml
jns
cwtl
test
mov
jmp
sbb
lret
pop
sub
sub
data16
xchg
and
addl
or
push
rcrl
mov
cmp
iret
add
ja
pop
push
je
cs
cld
outsl
imul
add
jo
jle
xlat
cli
shll
dec
sub
xchg
stos
mov
lahf
push
xchg
sub
out
mov
add
jmp
jae
mov
mov
fs
jbe
int3
cli
add
dec
or
ret
lods
adcb
movsb
cltd
cltd
mov
jmp
sub
mov
aaa
or
jbe
push
mov
cli
test
sti
mov
scas
adc
in
mov
sub
cltd
inc
dec
xor
jbe
les
adcl
int
xchg
test
stc
fists
cmp
pop
pusha
mov
cwtl
int3
int
inc
xor
push
cmc
in
fidivrl
mov
ja
add
test
push
sbb
fwait
addb
faddl
div
xchg
enter
cmc
push
jg
pop
pushf
cli
push
dec
lahf
rclb
jg
subl
cmc
outsl
stos
fcompl
arpl
xor
xchg
pop
push
mov
or
dec
pop
rcr
inc
bound
data16
notb
sbb
call
mov
xor
jnp
mov
add
and
pop
jle
adc
push
lds
mov
pop
add
mov
and
jbe
jge
jge
mov
jg
loopne
jmp
or
mov
pop
test
xlat
adc
insl
or
mov
lock
push
add
out
jg
int
adc
lret
in
pushl
pop
cmp
dec
push
lahf
insl
jns
jnp
aaa
push
mov
push
or
aad
mov
pop
and
clc
repz
push
test
cmc
shrl
jne
xor
push
adc
fsubs
fistpll
in
and
pop
sub
lds
in
scas
outsl
xor
movd
mov
push
fs
xchg
cmpl
lahf
adc
in
push
jns
sub
call
pop
outsl
je
sub
mov
or
out
idivb
jo
call
sti
fisubl
mov
mov
add
sbbw
mov
and
push
mov
imul
xchg
scas
jnp
cwtl
pop
adc
ljmp
xchg
adc
dec
rolb
lds
cs
addr16
mov
xchg
pop
jmp
imul
cmp
mov
cmpsl
pop
adc
das
xor
dec
adc
mov
dec
in
nop
rcr
andl
and
hlt
mov
cwtl
aad
adcb
mov
mov
sbb
into
and
mov
out
xor
jns
inc
ret
xchg
fists
ret
ret
sub
cld
cltd
stos
lahf
mov
dec
popa
in
xchg
stc
pop
ljmp
xchg
adc
leave
loop
lods
push
push
cmp
pop
test
aad
add
mov
lret
or
mov
stos
add
imul
stos
punpckhbw
cmp
fmulp
mov
or
fwait
aas
sub
incb
adc
scas
fs
push
lcall
dec
adc
popa
push
mov
jg
mov
incb
ja
sub
jnp
pop
jp
push
cli
ds
cli
divl
add
push
imul
add
stos
push
fs
neg
jg
jmp
jne
je
vorps
jnp
or
ja
mov
inc
test
arpl
jecxz
inc
jbe
jo
jle
test
mov
leave
add
js
roll
mov
mov
adc
pop
js
jns
sbb
jp
mov
add
dec
fistps
sub
imul
mov
pop
mov
dec
out
jb
push
test
sti
xchg
xorb
movsl
or
test
lahf
inc
out
push
mov
das
push
push
repz
push
jp
inc
xchg
orl
leave
inc
and
test
nop
cmp
pop
loope
mov
fisubl
jp
into
dec
pop
xlat
pop
daa
fsubrl
popa
jmp
ljmp
xchg
or
call
sbb
jae
fstps
push
movsl
jno
mov
sbb
inc
ja
ja
pushf
xor
mov
inc
mov
mov
push
je
lods
mov
lret
movsl
mov
pop
mov
insl
add
add
aad
or
rol
cmc
bound
xchg
imul
clc
call
add
pusha
insb
rclb
sbb
dec
cmpsl
outsl
aad
add
stos
int
loope
push
fsub
mov
cli
insl
movsb
shl
nop
jno
cmp
jae
out
xor
or
test
xchg
aas
fs
stc
sbb
and
and
dec
xchg
xor
mov
es
fmuls
outsb
ret
mov
push
aad
inc
cmp
push
das
lret
pop
mull
int
cmc
ja
inc
mov
roll
pop
pop
cmp
or
pop
mov
js
mov
pop
dec
mov
int3
cmp
test
in
and
fwait
push
xor
xchg
or
add
ja
cmp
into
adc
in
sub
adc
sarb
xor
jnp
shll
mov
xor
je
mov
xchg
jl
mov
xchg
fs
jne
imul
and
fnstenv
je
into
sbbl
lock
or
mov
xchg
sbb
int
cmp
ja
outsl
or
sbb
dec
add
add
add
xor
and
mov
xchg
insb
scas
jb
cmp
adc
jecxz
cmp
or
test
mov
mov
mov
pushf
or
inc
fdivrs
mov
mov
fwait
ss
push
and
les
cmpsl
stos
push
fistpll
arpl
jmp
and
push
xchg
les
mov
mov
xor
inc
xchg
out
dec
jns
ljmp
addr16
pop
lods
dec
int3
loop
outsl
into
insb
adc
pusha
add
subl
fwait
adcl
mov
inc
jno
mov
push
adc
hlt
pop
or
mov
mov
jle
sub
adc
adc
xchg
jle
ljmp
hlt
cmpsl
pusha
gs
sub
add
lahf
ds
mov
mov
movb
pushf
add
jle
xor
jp
cs
xor
sub
pop
pop
pop
addr16
stos
jne
jge
ds
aad
adc
adc
cld
cmp
xor
dec
scas
mov
mov
push
push
pushf
sbb
je
outsb
push
imul
xor
aam
jbe
and
lcall
adc
cmp
jnp
pop
imul
fistpll
in
push
faddl
xor
push
add
jne
push
enter
fnstsw
jle
mov
dec
popf
push
pop
sub
iret
mov
fwait
adc
xchg
cmpsb
pop
ret
pop
out
fisttps
vshufpd
icebp
divl
cmp
shlb
xchg
loop
jl
jecxz
xchg
mov
and
xchg
pushf
mov
mov
mov
inc
fimull
and
popa
fs
gs
mov
pop
mov
cmpsl
out
es
push
shlb
adc
gs
jo
and
call
mov
fstps
addl
insb
adc
push
push
add
je
fsubrs
movsb
add
fwait
dec
push
into
mov
jg
dec
arpl
or
arpl
fldt
sbb
les
aam
call
jnp
adc
insl
movsl
pop
and
imul
test
fcoms
ret
mov
ljmp
jno
adc
or
mov
repz
and
xor
es
call
stos
out
iret
pop
pop
fcoml
scas
int3
add
xchg
les
pop
or
sub
dec
push
pop
cmp
pop
lret
jl
xlat
sub
mov
shrb
lahf
or
inc
jmp
je
jge
or
jns
pop
pop
sti
or
es
cmp
jo
ljmp
movups
jl
scas
xchg
js
sub
xchg
rcr
xorl
imul
loop
or
fbstp
sti
adc
sub
test
push
adc
aaa
shrb
add
in
orb
incl
xor
add
test
js
mov
push
arpl
arpl
pop
outsb
repz
je
inc
stos
sbb
pop
mov
fwait
mov
push
xor
lods
pop
popa
stos
out
add
outsl
jo
mov
mov
cltd
ss
sub
and
insb
pushf
mov
mov
mov
mov
mov
outsl
es
insb
dec
clc
popf
pop
in
inc
lea
pushf
clc
add
mov
repz
xchg
sbb
jo
xorl
insb
pop
dec
adc
clc
jp
mov
xchg
out
mov
adc
jne
mov
push
outsl
outsl
inc
mov
daa
pushf
sbb
xchg
test
adc
pop
outsb
fisttps
push
pop
push
jge
inc
cmp
ret
xlat
dec
jbe
sbb
mov
xchg
hlt
jmp
jnp
inc
xchg
testl
dec
fstps
pop
fs
jae
lret
insb
test
scas
stos
or
jecxz
push
mov
or
inc
aad
int
push
mov
jg
enter
or
and
cli
push
sbb
push
sub
or
push
bound
cmp
lods
into
xorl
rolb
movsb
xchg
dec
popa
ljmp
xchg
enter
ficomps
adc
add
test
clc
fucom
iret
fwait
sbb
cltd
fwait
int
or
divb
repnz
inc
dec
aas
in
pop
leave
or
jg
inc
loopne
mov
cmp
outsb
xchg
lea
out
push
imul
xchg
hlt
daa
push
cmp
cld
or
es
adc
fs
aam
push
dec
dec
inc
adcb
or
adc
icebp
pop
in
call
jae
add
adc
and
and
les
je
aaa
fldl
enter
nop
into
cmp
inc
and
aaa
mov
cmc
inc
xchg
push
dec
or
xor
jae
outsl
pop
pop
stos
jg
cmpsb
aaa
sbbb
outsb
mov
dec
loop
jns
jne
shrb
dec
subl
jecxz
repz
jb
stc
or
inc
xor
dec
xchg
imul
push
outsb
sub
xchg
or
mov
stos
out
or
into
popf
xlat
jnp
fiadds
pop
outsl
ds
movsb
mov
xlat
xchg
mov
mov
loopne
cmp
mov
or
in
aam
lcall
mov
sbb
outsb
inc
je
cmp
mov
mov
in
adc
mov
dec
mov
nop
mov
or
xor
scas
ret
insb
scas
std
std
inc
xchg
sub
les
xchg
mov
in
stos
add
cli
jae
jb
movsb
sbb
outsl
popa
orl
mov
int3
mov
inc
mov
xchg
mov
jge
hlt
cmp
mov
add
mov
add
popl
mov
mov
mov
mov
ja
adcl
cmp
lds
notb
add
xorl
mov
push
or
add
pop
cmp
mov
loop
dec
outsb
fldl
mov
jne
push
imul
fnstenv
into
xor
rorl
push
pop
lret
mov
test
enter
add
pop
lods
or
hlt
xchg
and
dec
mov
mov
xchg
pop
in
jnp
rorb
xor
cmp
rclb
jl
jecxz
ficoml
stc
add
incl
add
call
mov
stos
jb
pop
rcrb
fistps
sbb
inc
inc
adc
je
rcrl
fiaddl
pop
les
arpl
in
pop
insl
jp
push
xchg
fisttpl
cwtl
repnz
inc
pushf
lea
subb
or
aad
jl
nop
push
idivl
test
les
cmp
and
insl
out
insb
rcrl
sbb
jge
sbb
or
push
mov
out
lods
jae
rcll
rorl
add
mov
inc
adc
jae
push
mov
or
pop
cwtl
loopne
je
push
ja
fadd
daa
jae
mov
push
mov
xchg
add
mov
ret
orps
imul
ss
fwait
xchg
adc
jo
adc
or
in
push
inc
push
jp
add
push
lcall
jbe
int3
mov
movups
jno
cmpsl
push
cld
jnp
or
andl
and
outsl
or
stos
pop
lahf
outsl
push
mov
jecxz
popa
js
xor
inc
mov
fisttps
and
dec
pop
lret
popa
daa
jecxz
mov
xor
sti
stc
scas
mov
movsb
sub
xchg
sub
dec
jno
movsl
mov
or
mov
mov
mov
repnz
mov
cwtl
jg
mov
sbb
xchg
dec
imul
lret
ret
stos
lods
imul
or
adc
rclb
mov
insl
cmp
jle
push
imul
xchg
lods
add
ficomps
and
mov
cmp
cwtl
outsb
cmc
xchg
lods
jno
mov
push
add
pop
shlb
mov
jle
dec
jecxz
jg
sahf
mov
aad
in
or
fs
mov
mov
sbb
jne
add
mov
mov
rorl
jb
adc
lret
pop
and
dec
push
dec
dec
mov
into
cmp
xlat
push
dec
fucomip
mov
adcl
stos
int
mov
test
out
out
cmp
pop
bound
fwait
xchg
lcall
fsubrl
fwait
pusha
sub
daa
xchg
scas
out
mov
inc
sub
lds
cmpsl
ja
movsb
pop
into
fcoml
inc
cld
in
mov
sarl
push
and
pop
ret
cmp
mov
push
das
mov
ds
shll
ss
push
mov
popaw
addr16
mov
sbbl
adcl
sub
sub
iret
inc
leave
cmp
adc
push
xchg
cmpsl
dec
mov
aaa
mov
xor
mov
xchg
dec
call
lea
cs
xchg
iret
adc
fdivrl
or
jnp
cmp
mov
mov
cmpl
adc
int3
fmuls
mov
je
cmpsb
ret
jne
shrb
daa
cli
jle
sti
xchg
jge
arpl
push
fidivrs
insl
or
daa
jmp
mov
jo
pop
mov
and
add
pop
psrlq
xchg
pop
pushf
rcll
jo
orb
data16
subl
int
loopne
jno
ret
mov
dec
cs
fistpll
add
sub
sbb
icebp
jae
pop
out
aad
shr
and
test
pop
movsl
inc
xorb
fadds
flds
test
sbb
je
lahf
xchg
cmp
loopne
mov
mov
loop
andb
shrb
test
inc
jo
ret
inc
adc
test
sub
xchg
cmp
and
add
inc
loop
scas
xchg
and
cltd
mov
xor
into
in
js
into
pushf
pop
roll
fadds
imul
inc
das
dec
leave
adc
xchg
xor
cwtl
dec
fldenv
test
repnz
clc
lcall
js
cmp
ds
scas
jnp
push
pop
sub
aam
jl
addr16
or
ds
jmp
aaa
mov
arpl
or
test
cmp
bound
pop
stos
sbbb
xchg
inc
mov
push
roll
push
cmp
negb
inc
push
jecxz
or
aad
xchg
mov
rcrb
sbb
mov
aaa
lods
das
jg
fadd
fistpl
pusha
add
out
mov
gs
ret
stc
movsl
mov
xchg
rorl
jbe
fidivl
pop
jno
adc
int3
mov
push
add
stos
lcall
outsl
lods
or
das
notb
or
inc
inc
push
pop
mov
sub
aas
lret
imul
or
test
sub
xchg
hlt
push
xor
pop
xor
int3
lods
andl
repz
in
movsl
pusha
add
jae
xchg
jnp
rorl
mov
in
xchg
mov
mov
xchg
loop
mov
shlb
bound
test
shld
mov
jae
sbb
cmp
inc
stos
lock
inc
fldcw
lret
mov
and
xchg
insb
mov
mov
jmp
dec
pop
mov
jmp
sbb
inc
loopne
call
pop
adc
pop
mov
jp
push
pop
mov
pop
add
push
dec
loopne
mov
in
adc
loopne
out
or
pop
gs
into
pop
pusha
repnz
pop
adc
out
aas
cltd
push
cmp
daa
mov
in
add
mov
sti
roll
sub
int
scas
fcoml
xchg
ja
popf
ss
or
in
call
jo
xchg
in
inc
je
pop
inc
pop
mov
dec
add
mov
call
ret
fcoms
lcall
inc
fmul
adc
jg
shlb
push
icebp
dec
dec
cmp
ja
xchg
inc
pop
jb
ss
cld
inc
pop
mov
in
xchg
fwait
pop
lcall
pop
lds
rorb
mov
mov
jmp
pop
add
lea
jno
add
add
pushf
mov
shlb
ret
inc
fcomps
sahf
outsb
mov
cmp
inc
inc
stos
aad
or
pop
pusha
xchg
inc
ror
scas
xchg
cmpsl
mov
and
pop
xchg
jno
sub
in
dec
sbb
pop
xchg
in
xor
cli
push
imul
xchg
insb
dec
xor
rcrl
scas
mov
arpl
imul
popf
mov
inc
shlb
mov
ja
rclb
add
dec
adc
pop
rorb
jg
xchg
xchg
add
xlat
rcll
mulb
inc
stos
mov
push
stc
and
dec
pop
jmp
dec
xchg
or
mov
dec
hlt
neg
add
fdivrl
dec
mov
mov
jle
mov
and
jecxz
inc
sub
pop
lret
cmc
es
xchg
scas
mov
addr16
mov
xchg
or
repnz
sti
adc
xchg
or
mov
lret
sahf
mov
into
dec
outsl
jmp
dec
inc
or
scas
mov
scas
mov
popf
jg
aad
dec
cld
aad
orl
cmpsb
fcoml
add
insb
negl
xchg
xor
cs
mov
icebp
into
add
push
mov
inc
jbe
jecxz
sarl
push
ficoms
outsl
shl
jl
dec
popf
lahf
cmp
inc
or
adc
inc
subl
and
pop
jno
dec
divb
adc
aad
aas
popw
aam
add
nop
mov
add
clc
daa
xchg
xchg
imul
iret
cmp
repnz
inc
jg
lock
icebp
push
mov
pusha
adc
mov
mov
stos
fcmovnbe
lods
cld
out
lahf
mov
nop
mov
jmp
inc
sar
icebp
cmp
pop
sub
stos
mov
mov
sbb
shrl
iret
cmc
xchg
fildll
fisubrl
xlat
inc
je
scas
stos
or
outsb
jae
or
divl
pop
add
loop
and
rcrl
lahf
cwtl
popa
and
in
mov
mov
adc
lods
mov
xor
pop
lods
sbb
pop
imul
rolb
stos
cwtl
lods
mov
jae,pt
jp
push
lds
and
movsl
sahf
bound
loop
incb
mov
cmc
sbb
bound
lods
mov
push
xchg
adc
lahf
lods
flds
pusha
test
mov
sub
comiss
mov
dec
in
push
jmp
cmp
cmp
sqrtps
add
iret
pop
xchg
fcomi
adc
imulb
cmp
or
push
jg
fidivs
sahf
mov
loope
pop
nop
ret
fdivrl
jno
lea
push
mov
lods
xor
scas
int3
dec
cmpsl
push
rcr
push
sbb
addr16
mov
cmc
pop
xor
sub
push
sbb
add
pop
rorl
filds
mov
mulb
stos
test
scas
cmp
adc
sub
dec
adc
adc
arpl
pop
fsubrl
in
mov
inc
daa
nop
push
xchg
cmp
repnz
inc
xchg
jne
ret
cs
pushf
test
call
xor
jmp
shll
dec
repz
adc
jg
lods
cld
inc
jge
adc
jp
pushf
test
jo
or
out
sbb
jae
js
lret
repz
xlat
cmp
pushf
test
mov
sbbl
jb
xor
jl
add
gs
add
lods
sbb
popa
inc
popf
and
test
mov
mov
pop
jnp
fisttps
mov
out
pop
fs
xchg
aam
sbb
jecxz
xlat
pop
jmp
ret
popf
pop
nop
mov
jmp
aam
sub
ja
lret
xchg
insl
push
jne
push
xor
mov
iret
nop
push
daa
testb
inc
nop
movsl
imul
nop
add
sub
mov
and
xchg
stos
push
fucomip
in
xor
jnp
sbb
push
jmp
mov
fcoml
inc
arpl
pop
adc
scas
adc
dec
ret
add
mov
pop
mov
inc
jge
frstor
and
addr16
mov
popf
pop
cmp
xor
push
and
jge
pusha
dec
xlat
ss
sub
inc
shrb
ret
pop
lahf
test
mov
and
mov
mov
jmp
jmp
sub
fcoml
dec
movsl
pushf
ja
out
outsb
push
mov
xchg
fistpl
adc
adc
jno
idiv
mov
or
fs
aam
jbe
notb
mov
fimull
add
pop
pop
inc
into
fcmovbe
sub
cmp
dec
cmp
xor
fdivl
xchg
stc
xchg
adc
mov
mov
arpl
fidivrs
push
add
and
adc
mov
fstl
add
lods
sub
int3
cmp
cmp
or
mov
data16
push
mov
les
int3
and
and
insl
xchg
add
xchg
or
xchg
andb
mov
pop
mov
add
scas
iret
push
aad
jle
push
xor
mov
adc
pop
mov
fsubrs
movsl
aas
sahf
mov
nop
ret
jo
push
out
sbb
inc
xlat
pop
rorb
lea
test
or
inc
aaa
inc
xor
ret
push
stos
cld
out
scas
pop
outsb
mov
mov
aad
inc
gs
xchg
dec
fs
push
cmpsb
pop
xchg
lods
dec
popa
andb
push
inc
add
fstl
or
mov
inc
push
dec
add
sbb
adc
test
out
mov
insl
test
insl
outsb
sub
mov
sbb
repnz
xor
mov
aad
ljmp
adc
push
arpl
rcl
or
leave
dec
enter
scas
sub
or
pop
sub
xchg
pop
aaa
dec
ljmp
jl
cmc
pop
mov
add
inc
inc
outsl
lea
push
sub
insl
push
mov
sub
cmpsb
pop
aad
mov
push
dec
pop
adc
in
js
js
out
lahf
mov
dec
fstps
sub
cltd
mov
sub
les
das
jmp
incl
xor
push
dec
aaa
jge
mov
push
xchg
pop
out
sub
inc
jp
adc
int3
cmpsb
or
mov
cmpsl
mov
xchg
test
lahf
popf
jne
inc
test
xchg
jbe
loop
push
and
lcall
jp
popa
sahf
mov
pop
inc
shlb
fisubl
mov
adc
popa
mov
and
sub
xchg
outsb
pusha
mov
jnp
xor
adc
pop
dec
dec
repnz
fstps
out
cld
adc
or
clc
mov
jno
fisubrl
push
and
adc
mov
das
dec
pop
xchg
sbb
mov
and
into
bound
push
adc
mov
sbb
mov
mov
jo
cmp
call
dec
jnp
cmpsl
pop
pop
fldenv
xchg
cmp
dec
ljmp
iret
push
cmpsl
push
into
pop
or
jo
je
mov
jg
aas
push
mov
cmpsb
call
push
mov
nop
stos
push
packssdw
mov
daa
jp
dec
popa
push
lret
data16
stos
mov
mov
mov
arpl
shl
add
and
pop
test
add
inc
xor
cli
mov
fldl
jae
xor
jle
notl
pop
xchg
int
stos
mov
stos
pop
push
push
out
xchg
sbb
lods
mov
sahf
or
neg
push
movsb
mov
std
mov
push
aad
aaa
dec
lret
xor
stos
aas
add
dec
iret
xor
stos
aas
add
jbe
push
push
sub
and
ss
clc
adcl
mov
stos
push
cmp
jg
jb
push
testb
popl
xlat
nop
lret
add
jmp
pop
jle
mov
notl
pop
push
xor
cmp
arpl
dec
mov
and
inc
adc
mov
adc
loop
xchg
stos
jno
lock
cmp
ja
adc
dec
das
addr16
loop
int3
loopne
dec
ss
gs
cmpsb
mov
cs
sbb
mov
rolb
iret
cmp
or
push
dec
mov
insl
lock
mov
das
jmp
mov
sub
push
test
mov
mov
mov
dec
or
test
cmp
lea
aaa
jg
mov
insl
lret
out
dec
sub
movsb
insb
mov
std
sbb
push
outsb
imulb
add
enter
test
sahf
sbb
stc
pop
ret
repnz
mov
jno
mov
push
stos
faddl
sti
cmpl
cmp
je
daa
cmpsl
xchg
xor
imul
pop
jge
test
sar
mov
jl
arpl
dec
out
dec
call
movsb
and
icebp
aaa
mov
cmp
js
jne
lret
dec
daa
jl
out
mov
and
enter
and
cmp
add
popa
call
mov
jae
imul
or
jnp
dec
pushf
mov
lea
xor
cmc
mov
adc
sbb
jo
out
sub
inc
adc
jmp
stos
pop
mov
mov
jno
mov
jbe
cmp
dec
sub
subb
mov
pop
nop
aas
jg
shrl
fsubl
adc
xlat
cmp
push
and
je
cmc
fbstp
jmp
aad
stos
pusha
ficoml
sbb
notb
bound
shr
inc
nop
popf
pop
mov
push
daa
imul
jp
mov
ret
movsl
mov
lret
jae
inc
push
ret
cmp
sbb
xor
adc
mov
int3
adc
mov
and
stos
decl
cs
in
xchg
or
cmpsb
push
sbb
inc
mov
adc
enter
adc
popf
sub
mov
xchg
test
jne
mov
pop
mov
inc
cmpsl
mov
lds
add
push
rep
add
adc
cltd
xchg
outsl
inc
mov
test
push
sub
mov
mull
pop
and
fwait
or
cmpl
adc
rorl
out
dec
jbe
ret
push
cmp
test
pop
cmpsb
or
adc
or
scas
pop
notb
xchg
or
mov
ret
pop
call
aas
pop
mov
inc
pop
test
jnp
fwait
or
cmpb
jmp
lods
push
pop
xchg
cmp
out
mov
push
xchg
arpl
or
les
pop
push
lcall
movsb
sahf
jle
push
loope
nop
sbb
jns
mov
stos
leave
aas
ja
xchg
mov
push
sbb
adcl
andb
fwait
clc
andb
outsb
xor
insl
adc
xchg
pop
sub
fildl
in
insb
pop
fstps
mov
pop
test
dec
aas
sahf
jmp
clc
sbb
popf
in
inc
cltd
sar
and
pusha
lea
mov
iret
sub
clc
dec
cmp
cltd
ljmp
mov
pop
addr16
mov
xchg
fdivrs
push
negb
popa
daa
cmp
mov
scas
jb
inc
ss
daa
notb
es
sbb
fdivs
xor
add
pop
pop
inc
mov
fcmovnbe
mov
bsr
test
movsb
shrb
jae
push
mov
pop
fisubs
dec
xchg
or
jg
push
mov
icebp
rcrl
push
sub
mov
ds
adc
cmp
fmuls
loope
adc
adc
imul
dec
cmp
loopne
jmp
sub
incl
popa
mov
mov
loop
or
insb
jmp
sub
ret
mov
add
mov
adc
jno
cmp
out
pop
mov
pop
fdivr
inc
out
faddp
lods
aam
lahf
xorb
mov
ret
push
add
add
pop
leave
xor
or
mov
std
adc
sub
std
fucomp
int
inc
add
ds
mov
dec
fcoml
test
mov
or
mov
jnp
stos
xchg
xchg
mov
or
sbb
retw
dec
xchg
xchg
orl
test
mov
xor
pushf
outsl
push
add
and
sbb
int3
es
mov
pop
cltd
sub
xchg
push
pusha
xchg
lods
and
xchg
movsl
lret
and
mov
ss
aaa
mov
pop
push
cmp
je
cmc
mov
adc
and
mov
lahf
mov
xchg
inc
dec
mov
fsubl
and
ds
test
in
test
iret
imul
mov
inc
mov
loopne
or
shlb
or
ds
inc
xchg
inc
or
shl
xchg
jne
cmpsb
dec
movsl
or
mov
scas
pop
sub
mov
push
sti
mov
int3
mov
jle
dec
and
cld
call
adcl
faddl
xchg
in
sub
loopne
add
mov
pop
dec
jb
inc
fwait
imul
inc
pop
call
insl
cltd
add
dec
stos
add
pop
testl
clc
sub
mov
jnp
xor
xor
push
fistpll
bound
outsb
xchg
insb
fwait
dec
sub
hlt
pop
lods
push
or
inc
push
and
enter
movsl
mov
add
mov
xchg
xorb
mov
cmp
pop
inc
mov
pop
jmp
add
es
fstpt
push
fbstp
jl
pop
mov
mov
ljmp
jmp
insl
test
lock
xchg
loope
pop
xchg
push
in
ret
cmp
dec
xor
pop
movsb
push
push
sti
iret
je
pushaw
popa
ljmp
aaa
jbe
fnstsw
imul
aad
add
inc
mov
cltd
sbb
nop
jmp
pop
cmpsl
ficoml
mov
xorb
pop
adc
dec
pop
add
lds
in
xlat
jno
addr16
xchg
dec
mov
mov
dec
push
jmp
ficoml
test
push
jmp
sub
inc
mov
arpl
pop
mov
push
adc
test
lcall
mov
in
cmp
xchg
fdivrl
pop
ficomps
cs
fstl
add
pop
xchg
add
adc
adc
bound
mov
sub
jno
sar
xor
nop
xchg
push
sub
call
xor
cwtl
mov
mov
adc
or
inc
pusha
out
es
test
loop
pmuludq
sbb
jecxz
jle
jnp
sbb
aaa
and
les
sahf
jl
sub
cli
in
popa
pop
mov
jp
pop
loop
arpl
mov
adc
mov
repnz
push
shrl
fistpll
nop
lcall
movsl
jo
mov
pop
test
cmp
ret
push
push
mov
push
xchg
leave
stc
cmpsl
das
lds
outsb
dec
sub
and
cmpsb
adc
or
pop
mov
xchg
pop
outsl
pop
imul
cmc
stos
jo
dec
cmpsl
mov
lret
mov
lret
jo
adc
mov
std
or
xchg
mov
mov
adc
movsb
arpl
fdivs
mov
rcrl
mov
dec
test
scas
push
pop
popa
or
mov
lret
jae
mov
pop
imul
mov
lea
push
sbb
adc
outsl
xor
sbb
push
enter
aad
push
xor
mov
rcrl
stos
pop
lahf
cmp
add
sti
popa
inc
inc
adc
int3
mov
aaa
cltd
push
arpl
hlt
jp
xor
push
pop
fisubrl
add
sub
fists
testl
mov
pusha
mov
push
mov
ficomps
inc
stc
mov
pop
rolb
and
loope
rcl
pop
aam
sub
xor
loopne
mov
dec
dec
sub
or
add
subb
mov
leave
outsb
push
popa
arpl
fsubrl
pop
iret
mov
outsb
mov
mov
nop
inc
sbb
dec
scas
push
mov
mov
aas
popf
in
adc
mov
lds
dec
iret
mov
mov
push
xchg
and
in
push
cltd
inc
push
fsubrl
call
int
stos
and
stc
pop
jp
push
dec
mov
dec
cmp
packssdw
test
mov
or
shlb
scas
xchg
xor
push
stos
push
mov
out
pop
push
mov
adc
outsb
and
incb
mov
jp
sub
in
scas
add
dec
xchg
in
xchg
loopne
and
fnstcw
mov
insl
inc
outsl
insb
les
cmp
sub
mov
and
pop
es
pusha
scas
pushf
adc
sub
fmulp
jnp
and
fsubs
outsb
inc
shlb
jmp
das
and
popf
ficoml
cmp
add
ret
jno
dec
clc
es
mov
mov
sub
leave
sbb
mov
pusha
jnp
lock
inc
mov
push
fwait
cld
sbb
popaw
push
in
les
imul
jo
ret
ss
mov
jmp
sub
dec
loopne
fs
fabs
aas
mov
test
jg
push
not
mov
leave
js
adc
push
push
push
pop
jae
arpl
shl
jo
fs
shll
mov
iret
imul
out
push
add
dec
nop
sub
xchg
insb
rdpmc
push
inc
daa
js
sbbb
inc
mov
add
pop
addb
add
roll
xchg
negl
adc
cltd
dec
pop
aaa
pop
scas
int3
hlt
jge
lods
popa
sti
xor
ss
js
push
mov
xchg
push
aam
push
mov
imul
push
pop
inc
js
mov
inc
lds
roll
fistpl
lcall
shlb
xchg
sarb
jno
add
loopne
and
nop
imul
inc
jbe
push
popf
and
insl
jno
iret
adc
lret
popa
pop
pop
or
int3
adc
popa
scas
cwtl
xor
in
xchg
and
mov
imul
and
xchg
popf
repz
hlt
push
sub
inc
add
sub
adc
jle
pop
ficoms
cmp
pusha
add
push
je
dec
aam
sbb
fiaddl
stc
cwtl
lcall
mov
inc
push
ret
js
dec
push
xor
js
nop
pop
cmp
push
lods
stos
ds
nop
jp
cwtl
mov
mov
pop
inc
imul
xor
cmp
arpl
fwait
popf
ja
lret
popf
mov
pop
hlt
jmp
mov
sbb
jmp
test
aam
cmp
addr16
in
rclb
or
mov
lret
test
or
adc
sub
cltd
pop
push
dec
and
mov
lret
cli
and
dec
adc
push
leave
or
pop
jg
rolb
jbe
sub
mov
rcll
mov
adc
faddp
aam
out
in
sbb
insb
repz
in
mov
jo
mov
pop
subl
mov
mov
lret
mov
subl
inc
pop
aas
pushf
in
int
loope
addr16
iret
inc
adc
jp
int
fcoms
pushf
lea
inc
scas
negl
pusha
mov
dec
sub
push
push
inc
cli
orl
and
out
popa
mov
popf
loopne
sub
mov
pop
out
lcall
fisubs
lcall
not
pop
or
xchg
testb
dec
and
pop
dec
sub
pop
cltd
cmc
pop
pop
xchg
mov
push
pop
stc
inc
inc
add
or
imul
mov
stos
push
cmp
mov
dec
pop
add
imulb
mov
add
lcall
inc
mov
lock
test
push
addr16
lods
pop
inc
lret
imul
pop
lods
sahf
mov
add
loop
mov
ljmp
mul
jns
inc
sbb
popa
or
lods
fwait
sub
movsb
mov
xchg
repz
adc
js
ret
mov
dec
enter
dec
imul
inc
push
mov
mov
jne
sbb
mov
aas
cs
sbb
enter
testl
mov
and
arpl
daa
or
cmp
sbb
or
push
ret
adc
or
fldenv
lods
mov
shrb
cwtl
dec
pop
aas
push
sbb
xchg
cwtl
jae
addl
sbb
push
aaa
ja
pop
out
dec
fldt
cmp
add
aas
gs
mov
xor
into
mov
sbb
add
mov
jnp
adc
mov
pop
dec
jo
cmp
mov
lea
fcmovnbe
inc
js
jbe
mov
addr16
jle
dec
loope
inc
sub
test
out
add
pop
cmpsl
imul
mov
outsb
cmp
sub
faddp
cmc
loope
push
mov
xchg
lret
mov
imul
shl
mov
jnp
jb
pop
je
pop
mov
mov
loopne
add
add
xchg
hlt
rcrb
jnp
sub
xchg
js
sahf
scas
adc
push
lcall
sti
ljmp
dec
rorb
xor
scas
sub
mov
jmp
shr
cwtl
fsubrs
cli
jmp
or
les
jl
sarl
test
jb
xchg
xchg
lret
adc
mov
push
push
fsts
ja
or
cmc
lds
fildll
or
adc
jnp
leave
mov
mov
test
cmp
ds
push
or
stos
lea
fs
inc
es
jae
mov
mov
outsb
jns
adc
mov
jns
mov
addr16
xorl
or
dec
cmp
cmpsb
hlt
insb
mov
push
jb
adc
xchg
aaa
rsqrtps
icebp
adcl
stos
add
lds
adc
mov
add
add
or
sub
addb
jge
sbb
lahf
mov
jne
inc
imull
ret
push
sub
xchg
mov
adc
sbb
aaa
pushf
inc
pop
loope
sbb
mov
out
dec
mov
add
push
fcmovne
or
push
jo
sbb
or
test
fidivs
test
sahf
jg
add
stos
pusha
outsb
iret
imul
sbb
pushf
stos
test
mov
mov
dec
imul
inc
mov
lods
lret
test
sbbl
fwait
lret
flds
pop
outsl
test
push
mov
in
es
clc
mov
sub
sahf
movsl
sbb
mov
sbb
les
call
or
mov
jg
out
pop
xor
pop
mov
icebp
and
pusha
push
nop
add
jne
mov
and
inc
mov
xchg
stos
mov
aad
jne
lea
out
scas
cltd
add
add
sbb
jnp
movsb
leave
lret
addr16
mov
jbe
jns
js
and
push
aaa
lret
lret
andb
sbb
fildl
in
push
dec
or
mov
filds
rol
dec
pop
arpl
stos
push
cmp
adc
hlt
int
xor
sub
push
mov
loopne
mov
ficompl
mov
clc
mov
push
in
mov
mov
out
scas
clc
scas
xchg
sub
pop
stos
mov
faddl
dec
push
popa
enter
xchg
inc
mov
pusha
adc
push
insl
jb
jbe
insl
fcoms
das
jl
js
call
lret
nop
or
pop
movswl
stos
jnp
fstps
stos
cmc
ljmp
add
dec
xchg
mov
pop
movb
mov
mov
outsl
xor
push
xor
les
ret
push
je
adc
pop
negb
pop
inc
xor
mov
xchg
test
lock
push
js
fsub
mov
sub
inc
adc
cmp
sbb
jle
mov
imul
jg
imul
push
add
dec
into
popf
xchg
pushf
or
and
sbb
arpl
xor
xchg
ret
dec
or
dec
mov
dec
rcrl
add
std
nop
dec
test
out
lahf
sbb
inc
data16
jno
and
fimull
pop
lcall
loope
ja
stos
push
add
rcll
fwait
jmp
mov
aad
loop
movsb
mov
jecxz
addl
insl
test
pushf
fstpl
xor
imul
aaa
sub
mov
cmp
imul
insb
je
mov
jge
imul
lds
push
icebp
jns
lea
jg
ljmp
xchg
cmp
sbb
jbe
jns
imul
jns
xorb
or
ja
pop
mov
in
xor
lods
mov
mov
aaa
maxps
push
add
mov
mov
stos
mov
lods
sub
xchg
insb
jle
jnp
adc
fdivrp
xchg
stos
das
or
push
add
push
sbb
aad
mov
dec
je
fwait
dec
jnp
sbb
xchg
dec
xor
fisttps
jae
add
sbb
xchg
xchg
enter
dec
cmp
inc
cmc
inc
aas
pop
jl
cltd
adc
adc
sbb
mov
cmp
lret
inc
dec
int
lahf
scas
jl
xor
scas
sub
mov
push
mov
add
in
in
add
std
fidivs
jp
cmova
outsb
subl
popa
lret
stos
jb
push
imulb
or
mov
scas
sbb
cmp
out
andl
outsl
xchg
or
mov
xchg
sti
nop
adc
inc
mov
jbe
lret
sbb
stos
cmpsb
outsb
mov
pusha
cmc
adc
aam
jns
pushf
push
rcrb
jnp
push
inc
into
or
imul
jbe
cwtl
jbe
inc
cmp
pop
sub
out
je
sbb
inc
jns
rcll
pushf
cli
pop
dec
mov
cmp
fmuls
cmp
inc
int3
hlt
xchg
cmp
int3
xchg
lods
stos
adc
dec
jmp
jbe
mov
add
xor
inc
cmp
inc
xor
mov
adc
hlt
in
xchg
cmpsb
add
int
mov
imul
or
xchg
or
int3
fbstp
sbb
mov
jb
sti
hlt
jae
stos
das
test
ss
or
out
cmp
ficoml
inc
arpl
rolb
dec
test
notb
stos
dec
mov
pushf
pop
mov
mov
sbb
lods
cmp
fyl2x
lret
pop
mov
jp
pop
mov
fisubrs
or
dec
jne
mov
jnp
xlat
ficoms
fs
cmp
cld
cli
fnstsw
les
in
jae
cltd
xchg
mov
xchg
aam
ljmp
repnz
pop
pop
pushf
out
stos
adc
or
pop
adc
push
pop
cmp
icebp
cmp
dec
int
aad
ret
scas
inc
jmp
pop
xor
lcall
pop
dec
scas
mov
pop
xor
pop
push
repnz
inc
mov
enter
cltd
das
fsts
add
xor
sbb
and
std
sub
xchg
xchg
out
cmp
inc
jge
sahf
dec
addr16
test
popf
in
xchg
mull
sbb
es
out
loopne
test
sub
test
outsl
push
les
leave
or
xchg
fstpl
xor
mov
js
and
jle
mov
repz
sbb
cmp
std
aad
out
pop
mov
fwait
scas
ljmp
sbb
mov
jo
ret
adc
test
js
jp
ret
pop
adc
pop
ds
dec
sbb
dec
jmp
arpl
push
lock
repnz
mul
inc
in
mov
mov
mov
lcall
outsl
mov
mov
iret
into
cmc
stos
outsl
fisttpl
fs
pop
mov
mov
iret
into
out
scas
fsubl
dec
test
test
aad
dec
aam
inc
xor
adc
add
jb
cmp
xchg
loopne
rclb
jbe
or
aad
outsb
addr16
ret
cmp
or
stos
or
aaa
inc
out
and
and
out
loope
lods
xor
aam
cmp
sub
nop
sbb
std
dec
outsb
xor
sub
int3
sub
js
mov
lock
das
jbe
xchg
pop
call
imul
xchg
dec
rorl
or
stos
pop
shll
jbe
cmp
ss
stos
jae
iret
pop
jno
jmp
push
cmp
filds
adc
fstpt
or
sarl
cmc
cmp
mov
or
dec
popf
jle
push
sbb
add
ljmp
dec
je
fcmovnb
fs
stos
outsb
jbe
sarb
pop
pop
pop
adc
jmp
or
cmpsl
fsubrp
stos
lds
subl
mov
lea
mov
jmp
add
loop
test
dec
pop
jmp
loope
call
int
xor
mov
mov
cwtl
in
fsincos
and
enter
aam
movsl
shr
dec
push
imulb
mov
andl
mov
jg
scas
inc
dec
out
mov
sarb
mov
push
aas
and
gs
in
xor
je
je
or
gs
pop
add
shrb
imull
aam
cmpl
xchg
rcll
adc
xor
adc
mov
ret
xor
push
loope
push
lea
mov
sub
stos
lock
into
into
mov
shrl
mov
sub
or
mov
sbb
mov
jl
ret
pop
aas
addb
push
daa
das
inc
pop
jb
dec
dec
cwtl
cld
dec
fcomi
push
or
scas
adc
jl
pop
iret
push
pop
xchg
lock
hlt
sub
xlat
adc
xor
jle
repz
cs
sub
jmp
push
mov
outsb
fistl
lcall
pop
in
lret
and
addr16
adc
insl
hlt
lods
repnz
jl
in
mov
or
mov
pop
inc
scas
xor
xchg
jbe
sbb
mov
adc
jle
popf
add
pusha
cmp
int
in
lret
pop
scas
push
enter
dec
and
lods
in
jb
mov
daa
lahf
arpl
xchg
or
movsb
mov
dec
stos
fwait
cmpsl
fs
test
jo
mov
mov
jge
out
aas
fcompl
xchg
mov
adc
fsubrp
mov
dec
cli
fnstenv
jae
adc
loope
fistpl
pop
lods
mov
lds
outsb
inc
jg
jne
fs
dec
or
and
push
arpl
imul
sbb
adc
insb
sub
dec
stc
sub
or
mov
push
in
lahf
into
and
movsl
aaa
push
cmp
jl
ficompl
jg
jo
xchg
filds
int3
scas
pop
xchg
divb
sbb
fisubrs
jecxz
in
fldcw
mov
mov
call
ret
cmp
inc
mov
pop
test
pop
pop
jno
jnp
mov
cwtl
cltd
and
addr16
pop
sti
xchg
jmp
xchg
xchg
enter
mov
mov
nop
or
outsl
ret
or
fldenv
mov
ss
inc
dec
addr16
jle
ret
popl
or
mov
adc
mov
push
aaa
or
and
jno
pop
xchg
fnstcw
inc
push
das
add
sub
dec
pop
pusha
pop
outsl
popa
pop
mov
xchg
jge
imul
dec
decb
fstl
jns
mov
add
les
in
dec
mov
cmp
adc
mov
lcall
xchg
pop
stc
je
cmp
and
dec
sbb
sbb
xchg
inc
out
pushf
mov
mov
std
mov
and
jp
lahf
cmpsb
stos
and
mov
xchg
je
add
aaa
sub
js
in
in
addb
es
aad
fstpt
les
cmp
ret
xchg
aam
mov
cmp
fsubl
ficoml
push
dec
xchg
hlt
and
outsl
repnz
add
xor
mov
in
jns
adc
jge
push
ljmp
fstp
data16
cmpsb
arpl
sub
mov
ret
loope
loope
xchg
loopne
les
bound
jnp
mov
pop
and
outsl
ds
pop
dec
leave
xchg
xlat
jno
and
nop
daa
or
sbbl
inc
cmc
stos
movsb
and
inc
lret
repnz
pop
jnp
inc
mov
add
orl
or
les
inc
addr16
lret
mov
in
sub
addr16
and
std
inc
mov
and
jle
mov
lock
cli
jge
or
addl
mov
test
int
jo
into
dec
test
xor
aad
cmpsb
cmp
lods
pushf
test
fsubrl
pop
incl
imul
insl
in
js
push
mov
lds
pop
mov
xor
aas
iret
xor
out
mov
xchg
in
ja
mov
popf
fistpl
adc
push
dec
fistl
lret
and
ja
add
jmp
cmp
mov
dec
jo
jno
std
jl
mov
push
sub
dec
rorb
sbb
xchg
mov
and
mov
sub
in
cmc
imul
pop
sbb
jno
icebp
es
and
fildll
imul
adc
sub
rclb
mov
jno
sti
popf
in
xchg
jne
stos
divb
stos
or
inc
xor
loopne
pusha
add
out
insl
stos
repnz
inc
ss
cmp
lret
push
fists
mov
mov
neg
ljmp
fldenv
fbstp
push
inc
jbe
jmp
aad
test
adc
cld
jbe
xchg
mov
sub
aad
sbb
fidivrs
adc
and
test
icebp
imul
jl
cmp
dec
lods
sbb
ficomps
mov
cs
mov
mov
dec
lret
mov
mov
xor
flds
test
sub
insb
out
cmp
add
sbb
push
dec
or
arpl
imul
into
push
aas
cmp
push
xchg
pop
fldt
data16
aas
cmp
nop
lods
pop
adc
lahf
pop
xor
jbe
or
jbe
gs
xchg
inc
dec
int
pop
int
pop
lcall
mov
lods
dec
popf
adc
sbb
int
xor
or
pushf
adc
inc
jo
cmpsb
sti
xchg
sub
jle
test
imull
sbb
into
xchg
xchg
dec
ret
mov
or
jle
jmp
sti
lds
xchg
fstpt
int3
or
inc
bound
data16
cmp
fldenv
and
fucomip
jp
pusha
into
add
xchg
repz
rcll
ljmp
sbb
pop
cmc
pusha
outsb
lea
dec
into
mov
xor
pop
aaa
xchg
and
fimuls
sbb
mov
lock
or
xchg
xchg
sub
out
out
sub
jbe
pop
pop
inc
sbb
dec
mov
mov
xchg
mov
mov
aaa
sub
inc
dec
aas
test
out
repnz
mov
sub
iret
push
out
adc
insb
je
adc
shrl
cwtl
orb
mov
loopne
and
aad
shrl
dec
push
jge
imul
pop
push
adc
fisubl
pop
push
pand
daa
inc
mov
sbb
push
aaa
sbb
aaa
int
cmp
mov
pop
lret
aam
inc
mov
xor
mov
push
insl
loopne
fnstsw
pushf
mov
js
mov
out
cmc
aad
movsb
and
dec
jle
mov
sbb
fnstenv
sahf
push
xor
xchg
lea
pusha
jnp
mov
xchg
es
mov
mov
cmp
push
jp
mov
dec
jae
xor
xchg
xor
test
xor
fistl
ficomps
sub
sbb
in
push
stos
repz
mov
lret
ss
inc
insb
push
pop
sbb
shll
mov
outsb
mov
mov
es
scas
andl
mov
std
pop
out
sub
rcll
lcall
xor
pop
inc
dec
clc
or
jle
je
inc
lahf
cltd
jae
sub
push
dec
or
cmpb
popf
xor
mov
and
sti
mov
cmp
lahf
cwtl
rorb
mov
xor
into
lret
cmp
roll
or
pop
cmpsb
or
cli
mov
xor
and
dec
shrl
scas
mov
rclb
sub
add
mov
inc
movsl
mov
push
scas
leave
lock
cltd
jo
xor
dec
pop
add
aas
cld
rclb
xchg
xor
inc
sub
jae
add
hlt
pop
hlt
mov
in
movsl
push
ljmp
mov
dec
clts
add
sarb
arpl
pop
dec
push
out
inc
xchg
add
jb
jle
ja
repz
jle
mov
test
lds
cmp
dec
adc
add
mov
jp
cmove
clc
shrl
cmpsl
or
xchg
and
xlat
arpl
pusha
test
or
stos
stc
xchg
or
xchg
addl
add
out
and
mov
cmp
cwtl
xor
in
dec
test
scas
loopne
iret
sbb
mov
push
rcll
push
ds
mov
mov
popa
cltd
nop
jne
dec
dec
xchg
adc
bound
aad
and
ficoml
mov
pop
repz
iret
js
popa
dec
mov
test
pushf
cmp
xchg
mov
jp
iret
sets
pop
add
push
rcrl
test
gs
ror
xor
int3
flds
xor
pop
jg
adc
js
fcomip
fisubrs
scas
adc
jb
mov
enter
lret
fs
addb
or
jne
sbb
xchg
pop
iret
inc
lea
flds
push
xchg
mov
add
lahf
cmp
mov
adc
mov
fdiv
xchg
sbb
mov
and
pop
mov
jo
adc
inc
mov
or
mov
popa
cltd
lds
dec
jecxz
inc
leave
jne
aaa
cltd
cltd
inc
pushl
or
and
call
add
xchg
mov
ja
adc
adc
sbb
insl
mov
clc
mov
daa
je
popa
jle
xchg
cmp
mov
inc
cmpsl
ret
imul
mov
aam
mov
xor
cmc
mov
inc
push
imul
fnstsw
sub
test
mov
mov
sub
jecxz
cld
xchg
leave
add
xchg
ret
dec
test
dec
xchg
bnd
out
stc
xchg
call
shll
adc
xor
fs
repnz
lret
scas
leave
shll
das
add
ret
andb
xor
dec
mov
mov
xchg
hlt
cmpsl
call
mov
or
push
clc
inc
push
mov
push
loopne
rolb
lds
xor
pop
ja
mov
shrl
adc
dec
je
ret
and
repnz
in
out
xor
or
mov
pop
jp
cmp
adcl
inc
sbb
xor
jbe
dec
mov
adc
inc
lock
xchg
aas
cmp
movsl
pop
ljmp
ret
sub
push
cmp
and
jmp
gs
arpl
sbb
das
out
jmp
stc
jnp
cmpl
jl
lret
push
jp
gs
xor
add
sub
fsubrs
aas
xchg
push
dec
cli
je
mov
dec
xchg
rorb
mov
lods
add
inc
es
sub
cmp
sbb
in
jno
mov
cmpb
clc
sbb
bound
mov
ja
xchg
mov
into
cmc
cmp
dec
dec
and
mov
or
inc
push
fucomip
or
push
shrl
outsb
pop
ja
or
push
mov
enter
dec
fcoms
fisttps
mov
push
adc
jns
in
mov
push
jg
jecxz
and
add
push
imul
lahf
lret
aaa
xchg
mov
addr16
scas
fadd
fiadds
cmpsl
jmp
inc
add
adc
jge
sti
inc
pop
lea
inc
jg
adc
xchg
pop
das
adc
xchg
push
daa
stc
mov
adc
cmpsl
sub
addr16
add
mov
push
mov
fsubrl
stos
enter
mov
adc
or
and
and
insl
push
sbb
cs
add
and
bound
jae
fisubs
sahf
xor
and
int3
add
sbbb
rorb
pop
sub
or
jecxz
adc
loop
cwtl
aas
push
cmp
xchg
bound
pop
adc
sahf
shrb
popa
or
dec
jp
imul
mov
adc
mov
fsubs
repz
addr16
loopne
daa
and
push
mov
outsl
mov
xchg
jg
das
inc
mov
adc
xor
jbe
inc
push
xchg
gs
out
stos
add
les
mov
lock
out
ret
sbb
int3
orl
dec
out
mov
jo
jg
aad
adc
repnz
xchg
sub
push
pop
dec
sub
adc
jae
inc
fadds
out
and
imul
add
int
xchg
outsl
loop
addr16
popf
fcmovnb
jbe
test
pop
inc
pop
xchg
data16
mov
adcb
pop
xor
ja
mov
lea
mov
jle
jae
mov
sub
sahf
xor
mov
mov
cwtl
out
and
fcompl
push
or
xorb
fsub
into
push
xchg
jp
ret
ficoms
jno
sub
ds
and
js
lret
add
mov
cmpsl
addr16
aad
or
mov
jns
adc
sub
ljmp
or
in
inc
lret
push
mov
fidivl
adc
add
sub
inc
movsb
mov
loopne
ret
outsl
cmp
or
cwtl
xor
xchg
addr16
sbb
sub
push
shrl
mov
in
ljmp
inc
adc
loope
mov
pop
mov
xor
mov
shl
nop
rcr
inc
xchg
lcall
insb
fcomps
ret
fsubrl
stos
add
mov
dec
imul
mov
mov
adc
xchg
insb
leave
adc
das
mov
pop
mov
dec
loope
clc
rorl
decb
push
ret
mov
add
mov
repz
mov
sbb
shrl
cmc
xor
xchg
fs
cs
jbe
jb
addr16
jnp
lret
sub
int
add
fsubrl
sub
shll
ret
out
push
sub
adc
testl
test
adc
mov
inc
loope
loopne
xchg
dec
mov
inc
jle
xchg
sbb
les
dec
xchg
mov
xchg
int3
jg
push
outsb
push
pop
aas
adc
movsb
or
or
mov
aad
jb
cli
mov
bound
daa
aad
idiv
xor
pop
xchg
ljmp
lret
sub
dec
mov
push
inc
inc
cmp
xor
mov
cmpsl
in
xchg
jns
mov
pop
inc
jl
lock
adc
std
cmp
pop
push
mov
aaa
sahf
adc
das
aas
mov
test
cltd
add
pop
or
sub
push
aam
clc
icebp
aas
add
push
dec
dec
lea
adc
jno
shl
bound
xchg
ret
loop
push
cmc
int
mov
clc
push
add
cld
push
adc
mov
lea
out
mov
jo
inc
dec
stc
dec
mov
lods
adc
pop
decl
mov
lret
insl
jbe
xchg
stos
jne
cmp
rcr
sbb
ja
filds
jg
mov
ret
pop
imul
imul
jg
mov
aam
insb
xchg
xchg
out
stos
test
test
xchg
sbb
or
movsb
cltd
in
mov
cmpsl
sti
aaa
into
xlat
pop
xchg
aam
push
lcall
pop
mov
lea
fistps
and
mov
and
sbb
push
ja
xor
loop
adc
cmpsl
adc
rorb
push
mov
jno
mov
add
mov
sbb
jo
imul
pushf
jg
adc
mov
rcrb
stos
lret
adc
fs
pop
and
xor
clc
dec
jp
mov
mov
xchg
mov
mov
movsb
pop
jae
fmuls
mov
call
push
subb
aaa
mov
push
test
mov
xorl
sub
mov
std
out
stos
adc
inc
mov
das
rol
jnp
int
movsb
jbe
data16
mov
scas
mov
mov
in
test
or
es
ljmp
bound
push
xor
mov
sbb
lret
cmpl
test
xor
pop
mov
and
test
cmp
lahf
inc
ss
popa
out
popf
cld
push
out
push
jns
xlat
dec
negb
das
gs
cmpsl
jbe
mov
pop
or
mov
xor
ds
and
sub
mov
jl
nop
mov
js
pop
cli
daa
or
lock
inc
les
push
mov
or
dec
cmp
shrb
push
in
fsubp
sub
and
push
out
jp
stos
outsl
mov
xor
jbe
pop
push
outsb
inc
xor
jbe
pop
push
push
mov
jo
fdivrl
cltd
clc
in
gs
xor
adc
jecxz
lock
mov
loop
jecxz
call
pop
push
int3
push
ljmp
test
mov
pop
shll
or
pop
pop
lods
pop
xchg
inc
pop
cmp
aaa
rcr
daa
xor
cltd
cmpsl
popa
inc
iret
pop
cs
lcall
pop
mov
out
xchg
lcall
pop
sbb
sbb
add
icebp
xchg
scas
loopne
les
inc
cmp
jbe
lods
adc
cwtl
or
push
and
rorl
push
inc
mov
addr16
lea
xor
push
cmp
ret
popf
outsl
mov
inc
xor
mov
pop
pop
pop
push
dec
mov
notl
push
rcl
inc
cmp
ljmp
mov
jg
xchg
mov
fcoms
sarb
sub
aam
xchg
loopne
lea
jge
arpl
cli
push
insb
dec
pop
sti
test
cmpsb
add
inc
fnsave
sbb
xor
adc
jmp
inc
jge
pop
jae
mov
ja
in
mov
inc
mov
les
add
dec
mov
pop
lock
jle
jge
xchg
or
inc
adc
iret
js
test
stos
in
leave
mov
aas
push
cmc
jp
ds
inc
and
mov
mov
mov
mov
xor
loop
fdiv
movsb
mov
xorb
jne
stc
xchg
fmull
sti
js
int3
xor
idivl
cld
mov
mov
insl
test
ljmp
jmp
adc
jl
mov
push
movsb
test
cld
adc
lret
orl
into
in
testb
addr16
jbe
mov
inc
insl
mov
fs
mov
rcll
in
shll
jmp
lret
out
mov
sahf
fisubs
xlat
mov
add
cmp
ss
inc
pop
ja
in
sti
cwtl
push
popf
cmp
adc
pop
mov
out
pop
leave
adc
movsl
ljmp
pop
loop
mov
push
cwtl
sub
cmpb
lea
stos
rcrb
loope
inc
pop
fs
inc
dec
adc
mov
xchg
jle
shr
sbb
lret
sbbl
xchg
mov
sub
out
inc
jge
xchg
mov
cwtl
mov
adc
lahf
push
mov
sub
int3
xchg
std
clc
and
enter
jo
push
stos
std
test
dec
js
cs
movsb
and
stos
mov
push
xor
stos
addb
fistpl
test
mov
push
jecxz
or
in
pushf
sbb
pop
or
push
or
ss
repnz
jne
and
movswl
into
sbb
xor
cs
xlat
dec
mov
sub
sub
add
push
ds
jae
sti
pop
int3
adc
jp
fcoms
pop
push
pop
push
mov
pop
sbb
sbb
adc
std
cmp
xchg
lods
sbb
into
lock
dec
sub
adc
cs
fidivs
and
das
aas
ja
inc
mov
lahf
add
sub
in
cli
lea
or
sbb
dec
mov
mov
test
sub
pop
jge
jle
ret
mov
xor
loope
or
fisttpl
lds
sbb
dec
lds
scas
les
fs
daa
lret
pop
cmpsb
jge
mov
pop
inc
jmp
sbb
dec
dec
dec
or
scas
xchg
mov
rep
sub
mov
pop
pop
dec
addr16
dec
pop
add
mov
jae
lock
int
mov
xlat
add
cmpsl
insl
testb
outsl
dec
mov
rolb
or
idivb
push
inc
stos
adc
js
bound
repz
decl
add
jnp
rcrb
out
stos
popf
out
dec
jp
cmp
push
ja
loopne
push
addb
iret
pop
mov
jbe
dec
xor
mov
xchg
push
and
aas
adc
mov
daa
cmp
xor
test
sub
push
cltd
mov
fdiv
orl
add
mov
jae
outsb
test
in
lock
out
enter
les
mov
mov
lds
xchg
in
std
mov
xchg
adc
das
and
pop
shl
insl
inc
xor
inc
addr16
sbb
mov
mov
sbb
mov
mov
xor
das
inc
call
add
sub
sbb
daa
hlt
dec
lret
insl
sub
add
push
xchg
lods
cli
sbbl
pushl
dec
add
mov
adc
push
xor
scas
mov
add
iret
dec
xor
push
jp
test
in
push
insl
jge
add
dec
and
xor
adc
test
insl
sbb
xlat
inc
jge
mov
les
xchg
lahf
jns
mov
out
adc
lret
call
mov
dec
cmp
jnp
add
cmc
mov
xchg
aaa
jnp
jp
push
mov
pop
adc
hlt
imul
mov
xlat
sub
sub
insb
js
adc
dec
cltd
scas
mov
cmp
imull
daa
sahf
mov
pop
push
aad
or
mov
in
push
push
mov
sub
aam
mov
arpl
sub
lods
hlt
out
sti
push
insl
aas
pop
mov
movsb
ficoml
xchg
movsb
sti
push
movsl
aas
loop
in
pop
mov
outsb
mov
lret
in
mov
into
sbbb
jmp
imul
add
pop
jg
dec
cmpsb
call
dec
cmpsb
mov
cmp
inc
out
fstpl
shrl
fcompl
or
xor
test
jno
fwait
mov
xor
fwait
sub
pop
fstl
mov
and
push
test
inc
jg
or
fldcw
test
push
lcall
loop
fisubrl
jmp
mov
inc
sbb
ret
aaa
jnp
jnp
push
adc
mov
jp
sub
scas
stos
and
sbb
pop
push
mov
sub
iret
ds
lcall
rcr
pop
leave
sbb
repnz
inc
pusha
mov
je
enter
push
mov
arpl
xor
ds
in
lcall
aad
adc
sub
jmp
pop
mov
mov
cmp
fcoml
mov
fwait
imul
sbb
insl
pop
lcall
jl
xchg
stos
sub
add
ret
leave
roll
mov
aad
movaps
mov
sub
xchg
xchg
sub
sarl
xchg
fwait
in
data16
pusha
adc
fsubs
mov
jle
adcl
jnp
fcoms
out
mov
repnz
pop
aam
xchg
mov
sbb
push
xor
adc
mov
jne
js
or
mov
movsb
sti
push
jns
imul
or
jl
out
adc
mov
pop
jne
imul
add
mov
leave
dec
cltd
jge
mov
dec
or
push
insb
adc
inc
jge
scas
insl
xchg
cli
push
insb
or
lcall
int3
fadds
in
or
xchg
test
inc
pop
jle
inc
pop
cmpsb
aaa
sub
mov
into
jbe
and
pop
push
mov
es
push
fnstenv
jmp
ss
loop
xchg
orb
push
lock
setl
xchg
adcl
daa
xchg
test
add
and
or
jl
fwait
cmp
pop
mov
pop
jb
arpl
pop
cltd
mov
adc
test
aad
pop
ja
push
test
dec
pop
pusha
jne
js
or
fs
scas
push
insb
aas
pop
xor
int3
add
cmc
into
pop
cmp
jo
xchg
push
or
ret
jne
adc
cmpsb
inc
mov
adc
cltd
add
dec
enter
imul
stos
sub
xorl
enter
dec
mov
sub
ds
int3
xchg
xchg
scas
loope
or
push
and
lcall
aad
ja
adc
adc
add
lret
subb
stc
pop
sahf
jle
rorb
push
shrb
jno
lcall
dec
jnp
jl
xchg
jmp
adc
into
fdivs
mov
sbb
in
xchg
iret
pushf
popf
cltd
and
mov
aad
or
sbb
jno
sbb
jne
rclb
push
in
adc
xchg
fs
int3
sar
inc
mov
mov
das
imul
jecxz
jge
add
ret
push
adc
mov
mov
pop
aaa
jnp
jae
inc
jg
xchg
or
mov
pushf
in
mov
int
test
adc
jno
jle
insl
adcl
pop
int
jno
sbb
imul
jno
push
in
fidivs
or
test
jg
outsl
push
aaa
jnp
jp
push
fstl
mov
mov
push
mov
xlat
iret
aas
xchg
jle
fcmovne
push
ret
rcr
pushf
or
aaa
and
mov
mov
push
inc
lret
inc
rorl
fsubl
sub
scas
and
sub
jmp
sbb
adc
leave
sarb
push
sbb
lds
nop
ja
mov
sub
push
aaa
jnp
jnp
pop
adc
dec
fcoml
mov
xchg
out
ret
pop
xor
dec
inc
mov
imul
pop
dec
pop
arpl
imull
jb
jno
sbb
and
mov
pop
addr16
jg
and
dec
lock
inc
xchg
test
daa
cmpb
xchg
xchg
mov
or
xchg
mov
add
adc
outsb
sbb
stos
mov
stos
sub
xorl
lcall
jno
jle
push
inc
xchg
mull
enter
inc
stos
or
push
mov
push
int
push
arpl
add
mov
repz
or
inc
pop
and
gs
dec
lods
pop
test
insb
and
inc
rcrb
jl
fs
xchg
sbb
popf
test
mov
jle
xchg
adc
addr16
adc
or
push
insb
jnp
pushf
pusha
sti
push
inc
ds
lcall
aad
push
aad
sbb
imul
jl
and
jb
or
cmp
inc
into
dec
dec
in
dec
lods
ljmp
inc
mov
push
rcrl
fwait
jnp
arpl
xchg
pusha
xchg
addr16
push
aaa
jnp
jl
pusha
or
cmp
imul
push
xchg
mov
or
dec
rcll
into
mov
mov
nop
mov
jnp
jp
push
jle
mov
les
je
pop
xor
and
mov
or
adc
mov
fnstcw
pop
inc
into
xchg
mov
inc
push
or
mov
mov
or
dec
jnp
enter
jg
mov
sub
sarb
xchg
bswap
xlat
and
push
add
cwtl
push
stos
sub
imul
jno
and
mov
xchg
jb
add
cmp
adc
mov
ss
pop
mov
iret
rcrl
mov
xchg
enter
pushf
mov
mull
mov
inc
pop
in
int3
fs
mov
out
dec
into
cli
cvtps2pd
pop
pop
pop
addr16
aas
iret
inc
pop
lcall
icebp
push
cltd
push
pop
or
ja
inc
sahf
in
jb
gs
xchg
mov
jl
aam
push
clc
mov
jle
cltd
mov
mov
stos
pop
addr16
fsts
imul
jae
mov
rcrb
pop
enter
inc
mov
or
dec
daa
adc
xorl
jle
scas
and
or
cmp
pop
xor
movsl
in
jns
mov
fistpl
loope
jno
pop
sub
mov
leave
sbb
jg
xchg
mov
enter
jns
insb
addl
sti
push
or
add
sbb
push
mov
jle
insl
or
ret
movsb
or
jl
jmp
inc
mov
fwait
daa
jle
jl
mov
pop
pop
fucom
lds
mov
xor
sub
sub
fwait
push
mov
sub
aaa
jnp
jnp
pop
jg
xchg
pop
xchg
jmp
jae
xchg
mov
pop
insb
ret
pop
xor
dec
add
fmuls
mov
xor
or
sbbl
dec
fs
or
jmp
out
aam
sub
and
cwtl
sub
jo
or
stc
push
insb
fistpl
fistps
test
icebp
pop
stos
je
pop
xchg
outsl
mov
fildll
pusha
daa
jle
jl
mov
pop
outsb
jp
test
fmuls
push
or
out
xchg
cmp
jge
mov
sub
jns
mov
pop
or
mov
xor
adc
daa
jb
sbb
insl
pushf
sub
push
aas
movsl
int
call
popf
cmp
stc
push
insb
push
pop
es
stos
or
xor
and
sub
dec
iret
mov
out
pop
xchg
lcall
loop
loope
fdivs
sub
pushf
mov
cmpsl
pop
rclb
or
add
mov
or
insl
pop
xchg
stos
mov
pop
imul
hlt
imul
add
mov
mov
les
cmp
sub
fs
sub
arpl
mov
jmp
aam
xor
adc
jno
jle
insl
daa
lcall
jo
or
testb
in
mov
mov
inc
mov
dec
mov
js
inc
jo
fwait
bound
inc
or
dec
sbb
sbb
les
rclb
imul
mov
pusha
mov
inc
lcall
cmp
jae
dec
nop
aas
or
add
pop
mov
jnp
aaa
imul
imul
sub
insl
out
popf
mov
push
pop
dec
in
push
popf
std
ret
jl
jae
fucomip
or
nop
stos
xchg
pusha
inc
adcb
daa
add
popa
adc
push
adc
push
or
or
xchg
xor
mov
inc
add
xor
mov
cmp
sbb
fsqrt
dec
xor
sahf
push
cmp
cmpsb
les
lods
inc
push
adc
fnstcw
xchg
push
dec
pop
ljmp
aad
fiaddl
stos
mov
mov
adc
pop
jp
sub
xchg
mov
jno
push
mov
pop
adc
pop
jp
lret
sub
jle
sbb
je
mov
hlt
ret
mov
push
mov
aam
and
inc
jo
sbb
add
push
add
cmpsb
fsubs
fld
in
test
sbb
iret
pop
add
inc
cmc
mov
pop
test
and
into
mov
fwait
add
mov
add
call
mov
insl
xchg
push
int
pushf
push
rcrl
icebp
sbb
sbb
fstps
rcrl
lds
jge
jle
enter
pop
push
lret
repz
jecxz
sar
out
jg
js
repz
pop
int3
adc
mov
jle
in
push
push
les
push
int
imul
or
rcl
fimull
fs
lock
xchg
adc
scas
and
les
int
jmp
or
rcl
push
ficoml
fs
xor
sub
shl
loopne
mov
lock
shl
scas
test
cmp
or
rolb
fs
dec
sar
push
add
push
push
out
lret
adcl
lods
nop
testl
ret
loop
fs
repnz
cli
jle
add
dec
dec
jecxz
loop
mov
test
add
fwait
into
xlat
shlb
roll
xchg
aas
shlb
lock
sar
rcll
pushf
aas
test
popf
mov
inc
pop
push
mov
rcr
or
or
xchg
iret
out
mull
mov
mov
fs
sub
out
dec
mov
xchg
push
dec
or
cmp
xchg
out
sub
iret
push
push
rorl
rorl
cltd
hlt
rcrb
test
sub
test
insl
aaa
nop
jecxz
mov
pop
adc
pop
rorb
pop
jmp
jg
xchg
mov
jge
dec
jae
jb
xchg
daa
enter
inc
hlt
fwait
push
addr16
adc
cli
ficomps
lds
jge
mov
fwait
inc
cmp
inc
fisttpl
cmc
push
hlt
mov
mov
data16
or
lock
pop
xchg
enter
add
lahf
ret
mov
pop
pusha
stos
int
out
and
push
dec
insl
xchg
cmp
pop
mov
push
movsb
pushf
ror
fmuls
xor
fcom
dec
pop
mov
lahf
adc
stos
scas
test
pusha
stos
jnp
cltd
mov
adc
sub
inc
into
xor
pusha
int3
lahf
push
cmp
push
cltd
test
int
mov
or
mov
movb
or
cwtl
push
std
fiaddl
dec
leave
xlat
insl
ret
cmpsb
xor
int3
or
scas
pop
jecxz
xchg
dec
repz
pushf
test
pushf
popf
mov
sbbl
sub
pushf
and
ljmp
inc
jecxz
mov
stc
daa
in
push
mov
adc
sub
pop
lret
pop
dec
iret
adc
outsb
xchg
aam
testb
xor
jo
jb
jl
test
cmp
loop
into
dec
pop
daa
fstps
ja
mov
or
cmp
xchg
sarb
in
in
inc
mov
movsl
stos
push
fisttps
xchg
int3
repz
cmp
imul
sbb
jns
add
fistl
stos
and
add
mov
push
xchg
enter
inc
jmp
cltd
mov
mov
xchg
push
in
jnp
popf
imul
jecxz
and
inc
or
cmp
jnp
outsl
adc
adc
les
shll
add
cmp
setae
dec
or
and
mov
xor
nop
jnp
pushf
add
inc
jnp
mov
ret
sbb
xor
dec
xchg
imul
ret
cmp
lret
fcomp
sub
inc
aam
and
in
loope,pn
sub
fadds
xchg
lods
xchg
xchg
stc
iret
mov
popl
sub
inc
inc
pushf
popf
enter
lcall
ficompl
ret
dec
and
add
xorl
lret
mov
int
mov
loope
dec
mov
xor
data16
ss
mov
jg
les
cmp
lds
cmp
mov
xor
push
lret
adc
int3
cmpsl
cmc
cli
push
cli
sbb
ss
aaa
scas
cmp
test
nop
mov
scas
inc
xor
pop
jnp
fisttpl
sub
mov
js
in
insl
fistpl
sbb
in
or
leave
insl
pop
cmp
dec
mov
sti
mov
or
fnstenv
sarb
sub
inc
adc
mov
adc
test
cmp
dec
mov
lds
inc
xchg
xchg
std
xchg
outsb
sbb
xchg
xchg
dec
adc
xchg
in
add
mov
cmpsb
xchg
cmpsl
sbb
sub
outsl
lock
fnstcw
dec
loopne
cmp
lcall
jle
jo
lea
rol
pop
dec
sub
ja
dec
cmc
or
xchg
mov
add
inc
mov
mov
xchg
rcl
clc
ret
pushf
scas
out
mov
adc
hlt
mov
cmpl
jp
xor
mov
jle
mov
sbb
push
jge
fwait
mov
aas
test
test
xchg
and
jl
ret
addb
or
xor
fcmovne
sub
jno
inc
cmp
mov
out
mov
repz
mov
cwtl
js
or
cmp
movsl
pop
sub
and
cltd
pop
cld
or
sub
loopne
mov
jg
or
mov
fisubs
cli
cmp
push
mov
cld
cltd
or
pop
cli
mov
push
dec
imull
fisttpll
dec
cld
imul
and
adc
mov
jmp
or
test
jno
rcll
xor
and
push
mov
fstl
adc
adc
in
clc
test
hlt
ja
adc
jbe
aad
fcmovne
stos
js
call
jg
test
xchg
jns
jl
mov
iret
lcall
fldl
push
stc
mov
mov
and
push
add
add
sbb
push
daa
and
push
popf
jp
lods
test
pop
pop
pop
ljmp
cmpb
cmp
lret
stc
inc
xchg
xorb
dec
jno
ja
mov
imul
aad
xor
push
les
lods
or
hlt
scas
pop
lret
push
aam
mov
in
dec
icebp
or
cli
cmp
imul
lret
lods
jg
mov
xchg
test
and
and
inc
xchg
xchg
repz
sub
inc
xchg
dec
stc
lahf
ljmp
rcll
std
jno
push
and
lods
stos
push
pop
or
push
dec
xor
push
jg
lds
ror
popf
pop
iret
iret
test
sbb
stos
adc
cmpsb
hlt
cmp
ret
pop
popa
ss
add
inc
subl
sbb
pop
push
jle
xor
movsb
lret
push
push
mov
and
pushf
mov
jg
pop
scas
xor
ss
push
inc
jl
int
and
sahf
in
push
icebp
push
rclb
dec
stos
xchg
ret
sub
addr16
aad
sub
add
arpl
mov
add
repnz
jae
add
insb
xchg
inc
sub
aaa
jb,pn
adc
and
in
lock
mov
mov
outsl
push
les
lret
ffree
out
pop
jb
subl
mov
dec
int3
iret
inc
stc
push
pushf
sub
ja
rcll
lds
sub
movsl
cmp
ljmp
push
inc
cmp
pop
sbb
xchg
mov
lcall
scas
push
push
push
pop
decl
adc
fwait
lcall
push
gs
lahf
sbb
gs
adcb
rolb
sti
mov
adc
fisubrs
dec
sub
fwait
fwait
sub
mov
je
jno
ss
aam
dec
fnstcw
lds
fsubrl
xchg
shlb
dec
sub
loop
xchg
dec
xor
pop
mov
push
cmpb
out
jge
dec
sbb
pop
mov
out
js
dec
int
popa
pop
popf
pop
fistpll
mov
popf
ja
sub
cmp
pop
add
mov
inc
pop
mov
inc
sti
pop
jo
js
cwtl
ds
leave
and
inc
pop
mov
push
int
aad
inc
ljmp
lea
xor
aad
push
mov
xchg
sub
outsb
sahf
add
xchg
xchg
lret
aam
push
mov
jne
push
notb
xor
insl
pop
lds
mov
pusha
mulb
or
mov
jmp
and
out
pop
jle
call
inc
movsl
insl
fnstsw
es
les
jns
mov
mov
push
or
xor
mov
repnz
xor
or
or
adc
add
lock
int3
iret
jl
divl
js
test
mov
sub
jp
pop
sbb
insb
push
mov
mov
jbe
lret
insl
or
sbb
inc
rorb
mov
fnstsw
insl
in
jge
or
into
mov
lds
pop
mov
out
adc
pop
push
dec
pop
fnstcw
xchg
and
dec
mov
jnp
or
xchg
adc
sub
roll
mov
cwtl
xchg
sub
add
adcb
test
sbb
lcall
test
stos
mov
push
rcl
dec
or
insl
mov
rcrb
loopne
mov
pop
hlt
inc
out
jnp,pn
cltd
mov
cmp
dec
ljmp
jge
push
xor
xchg
mov
adc
std
and
pushf
mov
push
mov
std
mov
lcall
mov
cltd
rorb
pop
repnz
cmpsb
xchg
cld
iret
jns
pop
cmpsl
aam
or
mov
mov
mov
fidivrl
fs
sbbb
sarl
dec
sub
pop
and
out
into
ja
xchg
cmp
fs
push
push
cmp
stos
in
imul
lret
mov
lahf
pushf
jnp
and
mov
push
pop
ret
popa
dec
pop
jg
je
or
mov
xchg
imul
movsl
inc
fs
sub
cmp
ret
push
and
data16
jl
jo
pop
roll
in
mov
movsb
in
jp
in
out
jge
gs
ja
xchg
dec
test
lret
or
add
dec
jmp
xlat
outsl
lock
outsb
jmp
inc
jmp
je
push
pop
nop
sbb
pop
cmpsl
pushw
sub
push
in
insl
mov
in
jmp
ja
mov
pop
and
outsb
das
cmpsb
xchg
push
mov
inc
xchg
pop
aam
xchg
stos
stos
inc
xorl
lcall
xchg
in
sub
cli
push
outsl
add
lret
pop
add
outsl
mov
push
xor
add
or
ljmp
mov
sar
or
pop
mov
inc
divb
int
pop
je
call
jbe
xchg
and
in
push
fdivrp
sub
rcrl
mov
ljmp
dec
add
xchg
call
stos
ja
cltd
es
adcl
push
ficoml
jo
punpckhbw
sub
scas
add
jle
movsl
fistl
dec
pop
mov
inc
fistps
call
jg
xlat
jno
stos
negl
inc
pop
adc
fs
movsb
loope
popf
pop
out
sub
enter
pushf
inc
addr16
cmp
addr16
xchg
xchg
mov
mov
pop
inc
or
inc
out
xor
push
xchg
andb
iret
push
jae
mov
sbb
mov
push
sbb
inc
push
mov
mov
loopne
inc
lods
jno
outsb
xor
pop
or
mov
sbb
xchg
arpl
dec
scas
jge
daa
outsb
negl
les
xor
jae
out
loop
mov
fs
jp
loope
mov
scas
sbb
les
jmp
xchg
pop
pop
xchg
pop
aaa
jnp
jl
jmp
mov
xor
fnstcw
add
cmp
jp
ja
or
push
fs
jecxz
mov
dec
loop
jp
jecxz
sbb
scas
adc
dec
mov
adc
mov
push
mov
fmull
ja
pop
lcall
cmpl
enter
adc
scas
rorb
mov
inc
mull
data16
repz
mov
inc
pop
or
loop
enter
jp
mov
or
mov
ja
or
inc
push
push
mov
lea
cmp
jnp
push
xchg
xchg
push
fstl
fcom
mov
pop
arpl
xor
lock
daa
jle
jge
inc
shl
pop
les
or
je
dec
push
insl
rol
mov
mov
push
imul
lock
cmpsl
mov
push
pushf
pop
sti
orb
or
std
xchg
outsl
xchg
enter
pushf
int3
outsl
or
sbb
jnp
jnp
xchg
sub
sarl
xchg
dec
enter
mov
iret
add
ret
ficoml
loopne
adc
and
adc
xchg
jae
outsl
mov
pop
dec
pop
adc
jo
outsl
lret
xlat
jle
cltd
add
andl
fs
push
sub
jno
add
jl
adc
lahf
pop
mov
cmpsb
dec
push
orb
push
test
fidivl
sub
nop
insl
jo
inc
insl
negl
insl
or
inc
pop
jo
fs
inc
fsub
jno
fstp
cltd
aam
xchg
sbb
insb
pop
inc
shlb
cmp
daa
imul
cmc
pop
adc
loop
or
or
or
inc
dec
fisubrl
scas
mov
add
dec
ljmp
pushf
shll
mov
jmp
cmpb
mov
push
add
dec
lahf
insl
lret
popf
mov
mov
sbb
cmp
push
mov
test
imul
flds
in
psubsb
adc
xor
ljmp
popf
adc
pop
push
imul
adc
js
xchg
aas
xchg
add
subl
mov
jb
popf
cmpsl
push
packssdw
pop
cs
fidivl
pop
pushf
mov
fdivl
mov
nop
sub
sbb
pop
fisubl
jnp
xor
adc
or
addb
inc
dec
mov
clc
repnz
icebp
fisubs
mov
xchg
lahf
push
les
adc
sbb
lock
lahf
or
js
xor
mov
cltd
pushf
pop
pop
notl
adc
scas
sbb
pop
adc
test
fs
jne
stos
or
sarl
pushf
outsl
out
leave
cs
push
scas
dec
inc
mov
push
add
push
jae
xor
movsb
leave
jle
ja
inc
mov
stos
push
inc
add
insb
rcl
movsb
or
ficomps
xor
mov
mov
fstl
ds
imul
movsl
or
andl
sbb
sub
cmp
xor
incb
ret
jp
rcrl
cltd
sub
mov
lret
sbb
and
shll
mov
lahf
mov
mov
adc
pop
in
insl
jge
mov
stos
repz
pop
popf
push
pop
sbb
xchg
scas
push
daa
xchg
test
adc
push
sahf
roll
or
movsl
jns
jle
add
and
cmc
mov
add
lahf
push
fidivl
mov
loopne
dec
push
cltd
jge
scas
ljmp
inc
dec
js
insb
xor
shll
cmp
sub
mov
sub
popf
mov
or
adc
add
inc
xor
jb
addb
inc
scas
int
pop
jnp
in
shl
sbb
sub
push
outsb
stos
sub
jp
shl
sub
push
add
add
std
js
xchg
enter
or
lret
cmp
push
mov
jo
jmp
inc
jb
lods
into
pop
xor
arpl
cli
jmp
arpl
ret
sub
add
cmp
ret
stos
dec
outsb
mov
lahf
decb
pmaddwd
jno
es
add
mov
mov
or
in
jecxz
jle
adc
int3
ss
jg
lea
popa
jmp
test
orl
repz
bound
enter
push
push
sbb
lret
cmp
xor
sbb
dec
ret
push
in
shll
ret
push
daa
pop
pop
lods
lea
pushf
mov
push
jae
jl
imul
xchg
std
and
dec
lahf
ja
hlt
mov
inc
lea
mov
mov
repz
pop
fisubrl
addr16
mov
mov
shrb
dec
out
xchg
sbb
in
stos
mov
mov
lods
popf
fists
jne
das
mov
mov
out
mov
add
jle
jmp
es
cmp
dec
and
fadds
fisttpl
scas
xchg
sbb
jmp
and
mov
jno
sbb
pop
lods
cli
mov
mov
mov
stos
mov
mov
pop
les
or
jnp
int3
dec
add
and
pusha
sbb
xchg
cmp
or
dec
cwtl
bound
pop
mov
pop
pop
cmp
push
and
xor
aaa
popa
xchg
mov
mov
mov
inc
pop
aas
call
pop
dec
ret
inc
cmp
jle
dec
lods
pop
xchg
loop
mov
add
dec
hlt
cwtl
pop
or
js
daa
pop
xchg
sbb
mov
push
mov
push
pop
and
mov
test
xchg
pop
scas
jae
pop
mov
xchg
outsb
xor
sub
cld
je
sub
ljmp
cltd
add
pop
push
push
cli
shr
inc
arpl
je
in
fcmovnu
outsb
push
or
icebp
xchg
fdivrl
repz
sti
xchg
mov
or
or
into
jnp
or
inc
inc
andl
jb
push
inc
test
mov
inc
dec
out
bound
scas
lea
jge
mov
jge
sbb
pop
psubb
insb
mov
bound
lret
je
insb
jg
jae
loop
add
fsub
sub
sbb
fwait
inc
mov
aam
adc
test
loop
cld
add
ret
push
addr16
idivl
fwait
ss
inc
or
push
hlt
push
inc
aad
iret
push
jl
adc
lret
push
popf
pop
push
in
jmp
xlat
adc
fildl
and
pop
dec
cmp
jbe
sbb
jnp
xorl
ja
fidivs
insb
out
sbb
dec
or
cs
push
fidivs
jb
inc
mov
bound
xchg
cltd
aas
aaa
jnp
xor
cld
jb
xor
ficoml
sub
aad
mov
addl
mov
sbb
addr16
mov
add
cltd
lret
mov
push
lock
mov
lods
mov
call
or
fldcw
je
aaa
dec
adc
test
outsl
popa
leave
ret
jp
xor
xchg
mov
inc
testl
cmp
into
cmc
push
jmp
xchg
mov
jg
arpl
sti
cmp
cltd
and
mov
ret
adc
add
jo
in
lahf
rcr
add
mov
rcrb
pop
and
movl
mov
jnp
xor
dec
iret
popf
xor
cmc
loop
jg
dec
cmpsl
ret
mov
xchg
sbb
ljmp
fldt
stc
cmpsl
scas
aaa
repz
and
int3
add
cmp
pushf
add
add
daa
js
inc
or
jo
fs
and
movsl
add
jo
xchg
mov
cmpsl
mov
fcomp
in
mov
into
lret
rcll
nop
btr
ret
and
push
add
imul
cmp
sub
or
xchg
fwait
jnp
repz
sbb
and
bound
aad
xchg
pop
lods
add
cltd
int
mov
stc
jmp
mov
jmp
popf
lahf
fnstenv
jne
mov
loopne
mov
stos
int3
push
cmpb
xchg
or
gs
xchg
loopne
jge
xchg
les
lsl
push
fisubrl
xchg
or
mov
push
push
in
enter
cmp
jbe
fs
ljmp
mov
cmp
cmpsb
mov
adc
pop
sub
or
xchg
lock
mov
enter
jae
rcr
mov
faddl
inc
jg
mov
cmp
sub
in
daa
je
loope
int
cld
xchg
rcrl
xchg
or
icebp
xchg
push
pop
lahf
cs
add
es
inc
pushw
ljmp
pop
xor
xlat
fucomi
add
pop
mov
xchg
nop
push
mov
sbb
nop
push
les
xchg
int
jbe
shll
jbe
scas
mov
push
cmp
xor
sub
fwait
add
ret
pushf
fwait
hlt
ja
pop
es
mov
adc
stos
adc
push
mov
and
xchg
rcr
icebp
adc
nop
lret
nop
jae
xchg
lock
inc
xchg
enter
pushf
adc
cmpsb
mov
scas
inc
je
push
cmpsl
sub
mov
xlat
xchg
add
bound
addr16
nop
adcb
cld
xchg
cs
lahf
xor
cmpl
gs
jl
dec
mov
in
fisubrl
push
xchg
adc
mov
cmp
push
repz
rorl
nop
or
sbb
in
jne
mov
sub
jne
jmp
push
fcmove
xchg
sub
jno
sub
lret
out
loope
mov
add
mov
add
outsl
or
out
xchg
das
popf
xchg
loope
cs
fdivl
mov
scas
cld
add
xchg
or
scas
add
leave
mov
dec
pop
push
js
or
aaa
pop
dec
mov
pop
fnstsw
ja
test
insl
push
rolb
adc
testl
or
or
jl
push
flds
or
mov
push
or
cwtl
inc
xchg
clc
adc
jmp
cwtl
add
mull
push
cltd
jl
adc
mov
mov
xchg
fcoms
xchg
xor
push
mov
push
pop
adc
mov
push
inc
loop
mov
aad
test
xor
ret
js
mov
decb
pop
lods
mov
mov
jmp
fs
push
sub
mov
sub
stos
sub
pop
repnz
je
insl
out
pop
add
xchg
push
mov
rcr
mov
ja
or
push
ficomps
popf
or
jecxz
push
fisubl
lahf
fcoms
das
and
insl
mov
mov
rcr
sbb
insb
xor
ljmp
push
or
adc
sbb
mov
rorb
xchg
mov
pushf
arpl
xchg
xchg
imul
jecxz
push
adc
xchg
mov
ffreep
hlt
dec
pop
push
in
out
into
xchg
popf
ds
cwtl
sbb
mov
test
or
lret
insl
mov
iret
adc
pop
push
pop
xchg
iret
fmuls
pushf
stos
or
fists
fnstcw
sbb
gs
dec
imul
les
popf
pop
inc
cwtl
or
imul
and
testb
add
outsb
pop
sahf
dec
inc
pop
or
imul
cmp
icebp
pop
test
subl
inc
pcmpeqb
sub
jnp
or
mov
movsl
loope
sbb
mov
mov
call
xchg
js
pop
cmpsl
cmp
sub
adc
sbb
cmp
outsb
mov
lret
pop
xor
stos
inc
add
mov
cmp
std
mov
push
das
cs
dec
sbb
jnp
jp
lret
adc
and
ret
jge
mov
cli
stos
pop
jle
xchg
mov
stos
vphadddq
mov
pop
sub
adc
repz
dec
sub
lds
pop
xlat
xchg
jecxz
div
imul
pushf
fildl
fucomip
mov
jmp
adc
sbbl
push
mov
and
push
ds
sti
fucom
imul
sarl
sahf
mov
mov
inc
repz
sarl
pop
jmp
cli
jno
push
fcompl
ljmp
lcall
mov
pop
movsl
rorl
in
mov
fsts
jmp
imul
cmp
cmp
inc
or
jne
dec
xchg
imul
int
clc
pop
cmpl
mov
mov
mov
push
inc
incb
push
paddsb
andps
jge
adc
cmp
push
xor
scas
lods
xor
xor
loopne
inc
mov
fmuls
pop
cmpsl
ljmp
imul
push
xchg
pushf
repz
jae
dec
add
fdivrp
xchg
cwtl
jmp
dec
sbbl
enter
clc
mov
scas
add
loop
rcrb
aaa
inc
repz
jle
lcall
sbb
imul
cmpsb
xor
movsl
inc
mov
repnz
shrl
sub
and
test
fst
or
cltd
adc
stos
jmp
fistpll
scas
xor
and
ja
into
sub
ds
mov
mov
or
test
pop
aaa
xchg
mov
and
xchg
inc
pop
or
pushf
mov
in
push
mov
sbbb
sarl
mov
xor
loope
pop
adc
mov
push
pop
outsb
out
nop
xor
test
ret
pop
adc
dec
arpl
fmul
jae
mov
lds
cmpsb
das
cmp
aad
in
cmc
mov
iret
push
mov
hlt
testb
jg
adc
rcll
int3
imull
jb
filds
jl
jl
inc
jmp
sub
shrb
mov
lods
lahf
scas
cmp
insb
repz
das
jle
inc
push
dec
ret
mov
stc
in
lds
cmp
jb
loopne
cmp
nop
adc
lods
push
jge
in
and
xor
or
lahf
lret
xor
mov
xchg
js
xchg
je
adc
mov
jns
movsl
dec
stc
iret
xchg
jae
xchg
mov
mov
xchg
je
fsub
adc
sti
ja
nop
pop
repnz
cmpsb
dec
jg
fldcw
jmp
inc
xchg
mov
add
or
in
jnp
mov
add
mov
fildl
bsr
fcmovnbe
push
mov
loop
or
pop
push
add
push
out
jecxz
xchg
fsubl
loopne
xchg
scas
xchg
push
rep
andl
ffreep
sbb
test
insl
mov
jmp
in
mov
in
mov
and
cld
lret
stos
stos
jmp
and
inc
enter
mov
mov
adc
lret
jns
into
cltd
inc
lods
lret
nop
jnp
in
cli
loopne
dec
out
sub
test
scas
pop
dec
arpl
xchg
popf
xchg
dec
mov
xchg
mov
inc
jo
or
adc
add
lods
out
test
jo
xor
mov
jmp
jnp
negl
adc
xchg
or
stos
mov
sbb
scas
mov
in
cld
aam
cmpsl
fistpll
aaa
sub
jge
jae
mov
add
or
roll
pop
clc
pop
mov
push
adc
pop
jp
pop
outsb
ret
xchg
mov
mov
xor
dec
int
xchg
push
cmp
shrl
mov
fcmovnb
ffreep
cmp
mov
sub
lret
repnz
out
add
fcompl
je
xor
sbb
loop
fisttpll
das
insl
dec
nop
dec
push
or
xchg
mov
imul
shrl
xchg
push
enter
or
data16
push
xchg
or
shrb
and
mov
mov
pop
fadds
push
and
jnp
pop
cmp
push
jns
xchg
inc
or
into
sbb
insb
mov
test
xchg
imul
inc
out
scas
sub
xlat
pop
sub
nop
lea
push
iret
mov
mov
xor
xor
mov
dec
or
fs
mov
jnp
mov
pop
sub
outsl
rorb
push
mov
outsb
divb
das
rorl
icebp
dec
lcall
pop
mov
mov
stos
mov
add
test
xchg
mov
andb
out
iret
call
adc
test
and
and
in
scas
xchg
mov
sub
loop
cmpsl
mov
sbb
mov
xor
mov
repnz
mov
jle
decl
add
and
xor
in
outsb
fisttpl
cmp
mov
push
mov
dec
inc
mov
dec
dec
outsb
divl
cmp
iret
adc
les
lock
stc
sub
lahf
mov
je
test
cli
jg
cmpsb
pusha
sub
mov
popa
dec
sbb
push
hlt
cli
add
xchg
mov
jns
test
sbb
cmpb
cmp
cmpl
mov
pop
push
mov
mov
mov
or
fmull
xchg
cmp
push
xchg
popf
iret
popf
out
mov
add
add
cmpsb
sar
adc
addl
or
insb
or
xchg
enter
sbb
aad
not
test
out
sahf
push
shl
arpl
ret
jmp
mov
and
repz
mov
push
xchg
sub
adc
out
sub
jnp
out
push
jne
scas
out
add
es
dec
add
in
dec
stos
scas
inc
decl
fiaddl
mov
loopne
popf
pop
add
and
fdivs
pop
das
jle
clc
in
inc
testl
stc
ficoml
adc
mov
mov
dec
lcall
stos
out
sub
aam
inc
push
mov
sbb
mov
je
aam
stos
sub
dec
rcr
push
push
scas
xchg
lret
fsub
jnp
fwait
cmp
xor
mov
sbb
pop
xor
mov
imul
orb
dec
inc
stos
nop
lcall
jl
test
xor
mov
int3
sub
adc
dec
inc
dec
mov
in
inc
lods
test
jnp
hlt
pop
lret
sarb
cmp
js
or
cmp
stos
fwait
dec
test
std
sub
mov
lret
inc
adc
jmp
movsb
fsubl
lret
dec
ljmp
sbb
arpl
push
jge
sti
add
aad
jbe
sar
push
push
in
push
cli
pop
data16
lods
cmp
ds
dec
fidivrs
in
mov
mov
jnp
or
sti
lea
sbb
sub
sbb
pop
in
jmp
push
mov
xchg
push
out
mov
inc
andb
fbld
jge
xchg
ret
insl
cltd
dec
clc
ja
pop
lret
hlt
mov
out
add
fnstenv
and
aam
or
data16
outsb
jne
lahf
mov
rol
lret
xchg
adc
fsubrl
hlt
mov
js
mov
pop
arpl
test
push
sub
lods
mov
xchg
lcall
jb
jmp
add
adc
mov
adc
addl
or
mov
sub
cmpsb
cld
repnz
fcmovbe
addl
fistps
movsl
daa
lret
js
daa
leave
lret
iret
mov
push
fcoms
cltd
cmp
and
dec
adc
or
sbb
test
stos
lea
daa
fists
pop
dec
xchg
push
or
or
sbb
repz
or
and
sti
fmulp
dec
ret
cmp
add
insb
mov
popa
xor
mov
insl
das
lea
jmp
lods
pop
lret
xchg
popa
xchg
adc
scas
jo
mov
aad
xor
and
sbbb
sbb
push
enter
out
test
mov
rorb
dec
cmp
aam
xchg
fists
jp
adc
popf
jecxz
mov
in
push
cwtl
mov
stc
iret
mov
jmp
pop
sti
repz
add
stos
in
insb
stos
mov
or
aad
xor
out
cmp
neg
orb
iret
out
outsb
daa
or
sub
pop
cltd
push
ficoml
sbb
dec
test
add
pop
xor
add
jno
imul
fisubl
mov
mov
xchg
adc
test
outsb
cwtl
dec
push
pop
adc
or
fcompl
push
lahf
dec
sbbb
fists
sub
cmp
sbb
xchg
mov
fldt
xchg
inc
ret
popf
lcall
xchg
lcall
mov
inc
mov
fwait
jnp
aas
push
jp
jp
mov
pop
mov
test
sbb
pop
mov
jle
ret
out
add
pandn
push
ret
fs
das
jo
dec
pop
and
mov
dec
out
mov
push
icebp
scas
add
mov
lret
dec
or
shl
inc
mov
xchg
sub
out
mov
mov
xchg
cli
sbb
inc
add
mov
mov
loope
inc
leave
inc
mov
sub
mov
test
shrb
lcall
mov
jae
pop
int3
rol
jae
or
jge,pn
inc
test
popf
adc
fcomps
hlt
cwtl
pushf
push
std
mov
adc
lds
lock
cmp
or
repz
daa
rcrl
outsb
leave
or
outsb
leave
xchg
fisubs
out
mov
xor
movl
rcl
sub
cmp
int3
jg
dec
in
mov
and
or
mov
sbb
ret
push
decl
sbb
leave
mov
sti
push
adc
or
jae
xchg
out
xchg
xor
mov
jg
sbb
subb
or
ja
xlat
sbb
or
or
ud1
cld
mov
and
sahf
push
es
cmp
jb
cld
pop
sahf
dec
mov
dec
jmp
jecxz
rolb
sarb
jg
mov
lahf
sarb
stos
adc
mov
jl
pop
sti
pop
out
testb
or
cmp
or
sbb
jecxz
and
lds
and
pop
adc
loopne
adc
outsb
adc
xor
sbb
aaa
pop
sub
and
pop
outsl
cs
pop
jne
int3
or
pushf
push
out
jp
and
inc
iret
lret
adc
in
in
pop
sahf
xchg
pop
mov
aaa
xchg
out
popf
xchg
xor
test
insb
push
pop
xchg
stos
push
or
adc
jne
movsl
sti
into
or
stos
clc
push
sahf
jmp
dec
push
add
ret
in
stc
inc
inc
and
adc
rcrl
or
jmp
jg
mov
mov
xchg
sbb
jge
pop
mov
loop
dec
sbb
push
push
jnp
sahf
ret
sbb
dec
popa
sbb
fwait
push
enter
pop
or
lret
or
mov
pop
cltd
push
dec
sahf
stos
push
inc
dec
sub
into
dec
push
sti
popf
aam
inc
outsb
sub
adc
or
ljmp
in
pop
les
dec
dec
data16
inc
mov
hlt
cltd
pop
and
les
push
mov
lds
lcall
sub
stos
adc
sub
add
scas
mov
outsb
and
test
in
add
pop
in
pop
xor
pushf
push
mov
pusha
in
es
popf
repnz
mov
pop
pop
aam
sti
test
jo
mov
cmp
subl
sarb
pop
push
and
mov
cmpsb
loope
ret
rsm
cmp
or
dec
mov
in
arpl
dec
mov
popf
mov
pop
mov
sahf
ret
jbe
lods
mov
adc
out
pop
pop
bnd
call
arpl
pop
rorb
stos
xchg
mov
cwtl
sub
jp
scas
dec
adc
dec
sbb
dec
inc
cmp
daa
pop
inc
imul
lahf
mov
flds
sub
or
cmp
lret
lds
xor
dec
stos
call
popf
add
add
inc
sub
lods
dec
push
dec
xor
fcomps
inc
loopne
vpmacsww
scas
jmp
sbb
sahf
xchg
cwtl
pop
ds
adc
je
xchg
inc
imul
push
or
pushf
lahf
les
movsl
xchg
and
jmp
adc
lahf
icebp
stos
inc
jo
jbe
mov
mov
jne
pop
addr16
mov
cmp
sti
or
jg
ret
aaa
sub
xor
lcall
into
push
nop
adc
sarb
mov
pop
dec
imul
add
mov
ret
ret
outsl
xor
fidivl
insb
cmpsl
ficompl
push
xchg
dec
pop
sbb
mov
addr16
push
pop
pop
lret
or
push
dec
or
outsl
pop
repz
flds
repz
arpl
dec
enter
lods
mov
nop
xchg
insb
cmp
test
sbb
adc
icebp
or
jle
ret
adc
test
cmp
cmpsl
jo
subb
mov
push
stc
mov
cli
clc
xor
cmp
pop
mov
out
sub
pop
xchg
mov
mov
popf
enter
repnz
or
in
dec
daa
and
out
push
inc
dec
jge
cwtl
adc
les
ret
or
sub
in
and
outsb
xchg
or
fistl
mov
das
add
and
pushf
inc
add
add
in
cld
mov
pop
push
imul
imul
mov
cwtl
cmp
mov
divb
aas
in
cmp
pop
test
movsb
inc
mov
test
xchg
je,pn
jmp
mov
mov
lcall
ret
jge
sub
mov
fistps
fwait
mov
mov
loopne
mov
sbb
enter
test
adc
or
lcall
ficompl
mov
inc
mov
mov
push
mov
inc
leave
mov
jo
push
ljmp
into
andl
jns
mov
pop
stos
push
jmp
fistl
das
aas
jae
mov
std
nop
sti
cmc
pop
xchg
pop
fisttpl
nop
fadds
xchg
ret
add
pop
jo
cld
call
imul
cmp
add
out
lret
mov
xchg
fsubrs
mov
xchg
mov
xchg
xchg
sub
mov
xchg
subl
ljmp
fisttps
popf
push
and
insb
sahf
cmp
or
jb
mov
or
iret
cmp
jb
mov
fsubrs
cmc
dec
lods
adc
push
nop
mov
sbb
pop
insb
jns
mov
mov
orb
mov
out
out
or
xchg
mov
push
push
fldt
sbbb
sub
pop
mov
cmpsl
xchg
test
aam
das
sbb
mov
jae
mov
fmuls
fldcw
adc
insl
xchg
sbb
das
mov
lods
adc
sti
insb
mov
inc
mov
jge
mov
rclb
pop
sub
add
lcall
test
data16
xor
mov
fmuls
ljmp
cli
lcall
ds
push
mov
mov
xor
sub
mov
cmpb
jp
xor
push
sub
aas
mov
push
pushf
adc
inc
jg
shll
insb
icebp
sbb
mov
xchg
js
mov
dec
inc
bnd
loop
cmp
jae
mov
dec
movsb
adc
add
test
mov
js
mov
imul
sti
fcmovu
aam
xor
sbb
aas
xor
fs
inc
adc
sbb
or
push
cmp
or
imul
hlt
aam
das
sbb
mov
cwtl
sub
pop
jns
dec
push
add
test
mov
adc
mov
dec
pop
into
mov
cli
lds
pop
push
push
xor
jns
mov
bound
mov
xchg
and
aaa
xor
ds
push
ljmp
sub
aaa
call
test
xor
jns
and
pop
adc
jbe
js
xor
jns
lods
aaa
fstl
test
xor
sub
aaa
and
js
xor
mov
enter
test
xor
movsb
aam
cmp
mov
or
fs
mov
ljmp
cmp
incb
sti
inc
int3
loopne
leave
enter
mov
sub
outsl
fwait
cmp
mov
pop
xchg
and
mov
or
popa
mov
pop
push
jnp
jae
or
pusha
or
filds
xor
mov
or
sbb
jp
mov
or
push
adc
leave
push
fisttpl
or
jl
inc
xchg
imul
pop
mov
mov
pop
push
andb
cmp
mov
subb
jmp
sub
fsubrl
mov
pop
pop
enter
mov
xchg
cli
test
push
scas
dec
movsb
cmp
ja
iret
xchg
mov
stos
jno
mov
cmpsl
mov
insb
lcall
xchg
adc
adc
push
cltd
addr16
ret
int3
out
adc
xor
mov
fidivl
fnstenv
fwait
mov
push
sbb
add
push
pop
pop
mov
roll
mov
in
mov
movsb
push
in
mov
sbb
sub
clc
jb
lret
cmpsb
and
pop
inc
out
mov
cmpsb
mov
pop
leave
popf
gs
inc
sub
sbb
fcompl
popa
cmpsb
test
mov
mov
aas
push
pop
adc
cltd
jns
or
add
mov
adc
ret
fisubs
and
imul
lahf
js
add
add
sbb
fistpll
pushf
jmp
outsb
scas
jl
imul
xor
cwtl
rep
fstpt
repnz
dec
push
leave
ds
out
cmpsb
movsl
bound
adc
mov
and
lret
mov
lret
mov
push
insb
stos
add
daa
stos
clc
fsubs
stos
cld
fsubrs
stos
call
fcoms
stos
and
pop
stos
and
sbb
push
or
jno
subps
jne
inc
pop
sbb
lahf
mov
imul
mov
ret
int3
fdivrl
add
add
mov
pop
pop
mov
push
sbb
mov
lahf
jg
and
lahf
mov
repz
lds
sti
jmp
in
xchg
enter
fistpl
sbb
dec
fildl
lret
push
sbb
sbb
jle
cmp
fwait
cmp
pushf
dec
mov
cmp
dec
jae
lea
lret
dec
inc
xor
adc
shrl
jbe
arpl
or
cmp
mov
mov
adc
cmp
adc
std
mov
js
lcall
les
mov
mov
imul
xchg
mov
popf
aaa
jp
sub
fwait
jns
imul
xchg
inc
add
adc
out
jno
mov
xchg
or
das
add
adc
arpl
cmpsb
mov
pop
movsl
mov
ficompl
sbb
out
fisttps
addb
ja
clc
jl
adc
fstp
adc
jae
or
cwtl
jae
mov
sub
or
sbb
mov
ljmp
inc
inc
orw
dec
jne
cmp
mov
repz
push
test
lahf
xchg
add
ljmp
push
xorl
dec
fldenv
jmp
cwtl
push
adc
scas
dec
mov
add
fdivs
xor
cmpsl
bound
inc
roll
dec
xor
dec
inc
mov
pushf
xor
popa
sbb
aaa
and
mov
cmpsl
jl
jp
scas
rorb
fists
movsl
mov
sbb
out
sbb
mov
jmp
xor
pusha
sbb
mov
sbb
daa
fstps
mov
add
pop
jmp
push
movsb
cmpsb
lods
cld
and
popa
pop
xor
mov
xor
hlt
movsl
mov
jbe
fistpll
pop
mov
pop
dec
cmpsb
fisubl
loope
pop
in
cmp
pop
fstpl
dec
mov
cmp
mov
in
sti
imul
push
stos
imul
lcall
xchg
int3
pop
movsl
cmpsb
mov
push
mov
popa
lods
xchg
aam
int3
pushf
mov
test
cmp
inc
aad
push
sahf
js
pop
push
pop
mov
pusha
icebp
push
mov
xchg
jb
xor
xchg
or
sbb
cmp
scas
addr16
and
nop
adc
jle
jmp
xchg
out
push
mov
adc
sbb
xlat
shl
pop
dec
fwait
aam
ret
dec
mov
sbbl
sub
stos
loopne
rorb
adc
mov
mov
nop
popl
mov
mov
jle
ret
repz
fldenv
ffreep
jl
test
inc
mov
js
mov
pop
xor
loope
movsb
ret
sub
xchg
fbstp
jg
and
push
popf
jmp
js
mov
pop
mov
push
pop
outsb
cmovns
adc
fldt
push
push
adc
sub
add
sbb
test
cmp
dec
mov
les
ret
out
aad
das
ffreep
decl
test
xor
int3
js
mov
pop
imul
pop
sub
fildll
ret
pop
jo
push
inc
daa
sbbb
ret
ret
scas
outsl
adc
fildl
imul
into
xchg
dec
scas
push
shrl
dec
jg
adc
or
jle
ret
and
js
stos
sar
add
sbb
dec
ret
ds
sub
pop
call
jl
nop
jns
mov
pop
repz
sub
fsts
jo
ret
mov
imul
lods
or
mov
test
out
insl
jmp
xlat
mov
jle
ret
cvtpi2ps
fldcw
cmp
push
add
add
pop
fldenv
repnz
dec
movsb
pop
in
push
imul
fists
ret
jo
push
aas
sub
fisttps
ret
xchg
jo
push
cmp
cmp
out
jmp
cmpsl
sbbl
pop
outsb
add
sbb
mov
xor
push
scas
insl
pop
dec
pop
add
leave
or
lods
ret
cmp
mov
push
fbld
test
and
pop
aaa
adc
xor
dec
mov
pop
adc
test
push
inc
outsb
addr16
sub
repnz
jo
push
repz
push
adc
cmp
int3
filds
shll
push
test
hlt
mov
js
mov
in
imul
mov
fdivp
aas
ret
bound
scas
repnz
add
lcall
push
imul
inc
xchg
mov
pop
xlat
push
mov
dec
cmp
adc
gs
xchg
mov
insl
lret
dec
xchg
adc
ret
xor
popf
fs
jg
testl
ror
mov
jns
fildl
dec
pop
jl
push
or
in
mov
push
fwait
dec
jo
push
xor
xchg
std
or
mov
pop
sub
test
push
dec
outsb
aaa
insl
std
fisubs
outsl
iret
push
xchg
push
nop
imul
dec
scas
push
shrl
dec
mov
adc
or
jg
ret
and
lds
inc
packssdw
nop
jae
sbbb
mov
js
mov
pop
inc
imul
sahf
push
fsts
sub
cmp
outsb
imul
dec
mov
pop
fildll
or
subl
addr16
adc
or
mov
inc
inc
jae
rep
xlat
dec
xlat
mov
jle
ret
imull
and
les
mov
insl
xorb
xchg
shll
mov
js
mov
pop
cmp
cwtl
stos
add
test
ret
push
sbb
imul
flds
pop
add
push
inc
mov
out
cmpsl
pop
sbb
add
lods
mov
mov
scas
dec
push
or
sub
fsincos
fmulp
push
ret
xor
lahf
mov
sub
stos
fistpll
ret
push
fwait
pop
jo
push
cmp
push
imul
dec
into
jbe
xchg
push
mov
mov
jle
ret
sti
sub
fstps
fnstsw
xor
xchg
jp
test
push
mov
push
xchg
pop
imull
test
push
outsb
aaa
dec
aaa
dec
pop
ret
mov
xlat
fidivl
in
xor
das
sarl
dec
imul
push
xchg
pop
or
outsb
imul
adc
fildll
push
mov
sbb
filds
shl
mov
xchg
cmp
dec
repz
adc
ret
sti
sub
fldcw
ffreep
or
pop
fbld
js
mov
pop
dec
imul
lahf
mov
fsts
and
push
nop
xor
addl
inc
ja
imull
push
xlat
fidivl
jmp
fistpll
out
cmp
fistps
mov
shl
mov
jns
mov
adc
jns
test
ret
cmpsl
sub
inc
ret
data16
xor
aam
imul
mov
pop
push
pop
pop
pshufw
arpl
inc
fcmovnbe
pop
ret
jbe
iret
outsl
mov
mov
push
imul
fldl
dec
push
mov
test
imull
dec
fwait
mov
jle
ret
pop
sub
fnstcw
lea
out
adcl
or
sub
fcos
fmulp
dec
ret
cmp
call
js
test
mov
pop
outsl
imul
lahf
push
fnstenv
pop
fwait
sbb
dec
pop
or
cmp
pop
aaa
imul
lahf
jl
xchg
sub
fdivrp
push
ret
dec
sahf
nopl
pusha
mov
pushw
sub
xchg
js
adc
mov
adc
das
xchg
xchg
ficompl
test
mov
pop
push
imul
sbb
pushf
jecxz
ficompl
sbb
push
nop
imul
dec
iret
push
xchg
outsb
decl
clc
adc
or
sub
jmp
adc
cmpb
pop
xchg
xrelease
lret
es
xchg
mov
pop
imull
test
dec
outsb
addr16
and
xchg
push
inc
xchg
adc
sub
rorl
lcall
sbb
adc
and
mov
loop
push
rcll
jnp
push
enter
aaa
ds
ds
push
xor
and
enter
imul
arpl
repz
xchg
mov
and
arpl
out
rcrl
fwait
test
and
push
sub
mov
or
insl
xlat
iret
fs
call
mov
mov
xchg
subl
dec
cmp
mov
notb
dec
test
jae
lret
cwtl
jg
mov
mov
daa
rol
push
push
sub
push
popf
add
jl
xor
sub
xlat
dec
pop
stos
cmc
aaa
mov
sahf
jecxz
mov
cmc
pop
sarl
mov
pop
jg
mov
add
xchg
jnp
jnp
lret
mov
push
fistpl
sub
inc
pop
cmpsb
ret
ret
loop
xlat
pop
xchg
repz
push
or
mov
xchg
shlb
popf
iret
mov
movsl
jmp
jg
outsl
std
sbbl
pop
xor
or
orl
loope
mov
mov
push
jns
mov
divb
movsb
popf
in
xchg
jl
sub
push
mov
xchg
mov
push
jge
xchg
imul
int3
inc
fistl
imul
jnp
pop
pop
sbb
or
xlat
xchg
and
dec
in
mov
insb
xor
mov
xor
mov
iret
rcr
jae
sbb
stos
int3
mov
dec
mov
push
jge
cwtl
jge
mov
je
movsl
jnp
stos
movsb
ja
mov
mov
addr16
jle
sarl
das
subl
and
push
mov
xor
psrlq
sub
xchg
adc
inc
sub
add
out
inc
stos
es
iret
xchg
popf
mov
cmpsb
xor
out
pop
cmp
movsl
ret
pushf
repz
jmp
aas
nop
iret
insl
stos
das
fwait
jb
movsl
cmp
or
sub
or
iret
loop
mov
pop
fwait
addl
jae
popf
hlt
add
aaa
jo
mov
mov
scas
test
push
fwait
jl
popa
dec
pop
jno
sub
mov
daa
bts
popf
pop
stos
adc
lods
fistpl
pushf
sahf
lods
or
das
jo
xor
push
pop
push
test
test
inc
fisubl
sahf
andl
stos
or
mov
adc
test
rorl
lss
mov
lret
jl
push
fisubl
out
jb
imul
out
popf
mov
andl
mov
das
roll
pop
movsl
add
frstor
dec
mov
mov
out
mov
out
aas
or
adc
mov
ret
nop
inc
pushf
rcr
aas
xchg
bound
cmpsl
jg
cmc
dec
mov
xchg
jmp
ja
popf
and
test
xchg
mov
outsb
popf
fistl
fsubr
fwait
rcrb
lahf
xlat
sbb
push
add
lock
imul
jb
cli
inc
or
js
and
inc
sub
mov
in
xchg
sbb
xchg
mov
ja
cmp
adc
push
repz
popl
sbb
xchg
lret
sahf
or
shl
insb
ret
push
daa
xchg
lods
iret
rolb
or
inc
sti
sbb
loopne
add
mov
adc
mov
pop
jmp
mov
mov
fs
sahf
cmp
push
cmpl
scas
mov
sarb
fcmovnb
jp
sbb
xor
inc
mov
lret
and
xchg
xchg
sti
mov
daa
pop
fdivrl
pop
stos
xlat
aad
mov
sub
jecxz
sub
inc
or
mov
push
es
mov
aas
mov
and
jb
mov
hlt
mov
imul
lcall
xchg
xorl
arpl
xchg
adcl
jae
xchg
je
inc
mov
out
push
mov
sbb
ficomps
cmp
jecxz
popf
mov
mov
push
mov
pop
mov
andb
mov
xchg
pop
lea
cmp
fcomps
aam
mov
cmp
jecxz
popf
mov
cmc
shlb
or
jb
daa
ljmp
pop
lods
or
scas
xchg
ljmp
jmp
pop
mov
out
push
nop
pop
fisubrs
adc
inc
incb
sub
xorl
pop
or
movsb
cli
cmp
jmp
pop
test
pop
ret
dec
mov
or
jl
popa
iret
je
ja
pop
mov
movl
test
mov
cmp
mov
sbb
mov
sub
mov
cmp
pop
xor
outsl
xor
push
xor
sbb
aas
and
aaa
sub
dec
xor
jp
mov
stc
jne
dec
and
inc
sub
cmpsb
inc
cmp
mov
or
movb
inc
jmp
out
sti
xor
inc
lret
xor
inc
push
inc
stos
xor
inc
mov
call
ret
fnstenv
inc
dec
xor
inc
pop
xor
inc
pop
xor
lea
imul
aaa
pop
mov
mov
loope
dec
inc
mov
mov
pop
aas
sbb
dec
mov
adc
push
mov
pop
daa
and
test
pop
inc
sbb
subb
ret
adc
in
xor
dec
push
mov
or
and
xchg
sbb
jl
xchg
mov
inc
pushf
int3
sbb
pop
fcompl
sbb
cmp
sbb
cmp
dec
add
sbb
lret
ret
xor
jg
hlt
fisubrl
repz
adc
mov
jb
pop
div
xchg
xchg
pusha
aad
test
rolb
out
mov
aam
icebp
lock
add
lret
adc
inc
call
adc
inc
ds
ret
cmp
popf
mov
sub
pop
popf
repz
mulb
and
mov
jne
adc
dec
dec
int
add
xchg
jp
push
int
jbe
test
and
mov
mov
inc
popa
cmp
cmp
inc
lock
aaa
hlt
lds
fistps
stos
jg
xlat
out
mov
cmpl
test
cmc
add
fists
cmp
sbb
ds
xor
jnp
add
stos
jbe
jg
jns
cmpb
mov
jg
ja
sbb
push
sbb
scas
and
dec
ja
mov
and
mov
inc
sbb
inc
mov
sbb
dec
adc
cmpl
pushf
pop
mov
sub
mov
sub
xchg
test
push
subl
mov
hlt
hlt
cli
jl
jns
jecxz
mov
sbbb
xor
daa
rorl
cld
inc
fnsave
imul
add
dec
aam
sbb
test
cld
sti
inc
or
xchg
sbb
and
mov
cmp
roll
test
push
adcl
hlt
test
fildl
fdiv
aas
test
lds
xchg
pop
les
push
sbb
xchg
std
and
sub
pushf
adc
scas
lea
clc
pop
inc
or
lock
aas
jo
ss
bound
movsb
dec
insl
sub
ds
ds
mov
jbe
xchg
in
repnz
push
repz
imul
xor
xchg
ljmp
jnp
jo
inc
nop
stos
cmp
divb
inc
xlat
mov
pop
outsb
icebp
pop
into
std
adcl
mov
cmp
ja
or
lcall
xchg
pop
js
and
push
jo
test
pop
in
pop
mov
repnz
insl
fcos
pop
dec
fnstcw
and
fstpl
pop
fidivl
loope
mov
cmp
jg
jo
inc
jge
adc
leave
pop
push
sbb
movb
push
xor
xor
dec
iret
xchg
lods
pop
ret
data16
jbe
xor
in
mov
lds
subb
aaa
add
aaa
adc
aaa
and
aaa
xor
aaa
inc
sub
or
add
pop
es
xchg
jb
outsb
xchg
andb
mov
int
mov
sbb
mov
gs
iret
xor
inc
fbstp
xor
xor
mov
xor
lods
ss
addl
hlt
mov
cs
roll
loope
push
hlt
icebp
sub
add
hlt
and
hlt
inc
test
lds
lahf
inc
jb
outsb
ret
scas
inc
xchg
push
dec
inc
mov
push
das
inc
ret
inc
rclb
inc
loop
pop
inc
repnz
out
inc
add
adc
and
xor
inc
push
mov
or
shlb
adc
cmpsl
int
in
popf
sbb
and
xchg
repnz
xchg
add
xchg
adc
xchg
and
xchg
xor
xchg
inc
and
jl
mov
popa
fcompl
pop
sbbb
aas
dec
dec
mov
lods
cmp
mov
lea
cmc
mov
cmp
cmp
xor
mov
or
cmp
pop
xor
sarb
in
stos
inc
mov
lods
aaa
cmp
rcrl
shrb
and
mov
gs
sbb
rorl
dec
jne
adc
std
cwtl
jle
xchg
in
popf
xor
lds
jnp
aaa
fimull
imul
or
mov
lds
mov
roll
adc
cwtl
inc
xor
fnstsw
js
jg
js
jg
js
jg
js
push
push
jns
sbb
cmp
mov
dec
cmp
xor
mov
or
or
fucomi
sub
mov
int
in
popf
cmp
mov
jge
adc
mov
insl
cmp
push
mov
sbb
add
add
clc
inc
fs
enter
sbb
imul
push
and
bound
sbb
xor
sub
inc
add
or
aam
test
inc
test
xchg
push
sub
mov
mov
and
sub
inc
add
sub
in
sub
mov
cmp
lds
xchg
aad
sbb
mov
cmp
jecxz
fwait
xor
lds
adc
jns
jno
scas
and
xchg
hlt
and
xchg
add
fstl
and
xchg
xor
mov
push
push
and
jge
je
dec
xchg
test
mov
cmp
mov
xchg
cmp
adc
xor
mov
lret
test
pusha
jp
mov
mov
sbb
cmp
sbb
cmp
sbb
cmp
sbb
cmp
sbb
cmp
sbb
cmp
sbb
cmp
sbb
cmp
sbb
cmp
sbb
aas
mov
cmp
push
cmc
push
xchg
push
fistpl
pop
ret
pop
xlat
pop
lret
fsubr
pop
rcr
out
fdivrs
pop
xchg
fsin
pop
arpl
negb
imul
or
clc
inc
int
adc
sub
shrl
call
cwtl
call
jae
ss
sub
movsl
xor
jno
mov
add
and
xchg
lods
sub
js
mov
stos
cmp
mov
outsl
xchg
das
aas
ja
pop
test
xor
ljmp
mov
fbstp
jae
out
or
mov
fmul
pop
mov
pop
jnp
push
sbb
int
add
or
leave
sub
shrl
cmp
mov
mov
sbb
int3
push
jno
jl
jns
je
push
sub
inc
sub
inc
adc
sub
inc
int
add
shrl
sbb
fldcw
adc
loope
sub
test
ror
cmp
leave
jb
out
mov
ret
pop
mov
xor
or
xor
inc
sbb
xor
inc
aad
pop
test
hlt
adc
hlt
and
out
outsl
aad
test
repz
xlat
lds
xor
mov
das
xchg
xor
pop
xor
lds
pop
push
xor
and
aaa
sub
dec
xor
inc
les
lahf
aad
sbb
je
jns
jg
outsb
jecxz
cmp
sbb
cmp
sbb
ds
sbb
or
outsl
cmp
shll
shrl
inc
shll
pop
ja
das
xchg
mov
sub
ror
out
rcl
out
fwait
aaa
mov
shrb
test
jae
pop
sarl
pop
pop
inc
pop
push
and
pop
pop
xor
das
insb
inc
imul
movsb
and
xchg
mov
and
xchg
int3
and
mov
pop
aaa
ja
pop
mov
mov
outsl
aas
push
mov
aas
ss
mov
mov
jecxz
ja
jmp
dec
mov
imul
scas
inc
xor
mov
or
filds
out
stc
aaa
sbb
aaa
sub
aaa
cmp
aaa
dec
addb
js
and
pushf
cmp
sbb
cmp
sbb
cmp
sub
cmp
sbb
cmp
sbb
cmp
sbb
cmp
sbb
inc
fs
push
jl
jns
je
pop
xor
inc
or
les
mov
roll
call
lock
out
or
int
mov
mov
sahf
js
xlat
movsl
lcall
test
xchg
jle
cld
dec
roll
mov
pop
jo
push
enter
jbe
add
test
out
adc
mov
or
add
lods
in
pushf
stc
lock
push
das
dec
lds
jg
aas
sbb
sbb
push
jnp,pn
jo
mov
outsl
cwtl
movsb
std
call
sub
ds
push
dec
cmp
testl
fwait
pop
xor
das
outsl
inc
and
jp
jae
and
mov
ret
cmpsb
lret
adc
jbe
lds
dec
adcb
mov
push
ljmp
in
jo
into
push
inc
es
sbb
mov
add
mov
dec
mov
out
sub
lds
repz
jbe
stos
and
clc
lret
lret
fidivl
test
or
fcmovnbe
sub
mov
cmpsb
adc
ds
mov
sbb
subb
jg
add
imul
pop
jbe
loop
lahf
loop
sub
pop
and
movsb
jp
sub
mov
xchg
stc
adc
and
sub
mov
xchg
ficompl
cltd
out
pop
std
inc
cmpsl
mov
imul
leave
test
mov
push
mov
mov
lret
in
cmp
vpcmpeqb
ffree
addr16
cmp
pop
push
push
leave
xor
mov
pushf
jg
sbb
cmp
mov
dec
lds
fcmovu
add
andb
loopne
or
or
adc
and
mov
outsb
aad
xchg
cmc
jnp
cld
lods
push
sub
mov
faddl
sahf
xor
push
in
dec
add
in
repz
push
dec
mov
pop
sbb
push
test
aam
test
push
icebp
inc
add
push
mov
lods
adc
scas
push
and
mov
dec
sbb
in
jne
out
scas
xor
xor
fbld
or
sbb
pushl
loope
push
fcomps
ret
arpl
cltd
dec
sub
add
mov
lds
int
rolb
fcmovb
jle
in
div
stc
add
sbb
in
sub
jns
aad
sbb
mov
and
xchg
loopne
ljmp
popa
aam
or
inc
mov
in
fcomip
xchg
dec
sbb
nop
cli
jb
lahf
icebp
addl
cmc
cmp
sbb
and
jnp
add
jo
lret
decb
repz
sbb
mov
enter
stos
cli
fsubrl
pop
mov
push
stos
xchg
movl
call
xor
clc
jo
push
mov
out
scas
sbb
lods
pop
ds
in
mov
cwtl
addb
std
jns
popa
subb
iret
or
rol
fsts
pop
xchg
jl
test
rcll
ja
pop
xchg
pop
nop
or
push
sub
sub
mov
aas
mov
bnd
push
mov
or
lods
pop
pop
adcl
insb
dec
imul
jl
jns
je
je
mov
hlt
mov
pushf
jl
cs
mov
aaa
enter
jp
and
mov
fdivl
imul
xor
cmc
inc
outsl
aaa
jnp
sub
cmpsl
push
fisttpl
jo
cmp
mov
das
jmp
rcll
iret
jg
outsb
sbb
enter
aam
in
loop
sub
cltd
insb
mov
loope
sub
mov
sub
sub
mov
in
mov
cmpsl
xchg
mov
add
mov
testl
jae
fisubrl
fistps
mov
repz
setbe
or
or
xor
fs
push
je
push
sub
adc
dec
out
pushf
cmp
mov
mov
push
add
push
rcrb
cmp
ret
aaa
push
jle
add
iret
push
stos
cltd
push
daa
sbb
int3
lds
stos
subb
adc
and
mov
iret
mov
outsl
rol
aaa
sbb
xchg
mov
stc
and
or
clc
pop
lret
inc
dec
insl
push
push
into
lods
jle
movsl
sub
mov
addb
loopne
dec
repz
or
sbb
lds
divl
testl
aaa
adc
lods
aaa
and
rorb
mov
dec
jmp
jg
mov
mov
test
xlat
mov
adcl
jae
jl
repnz
cmp
pushl
cmova
aaa
pop
inc
in
sub
mov
cmp
xchg
xchg
jl
jp
push
out
mov
test
fadds
sub
mov
daa
aaa
sub
pop
mov
or
inc
lea
js
addr16
iret
je
sub
xchg
cmp
pop
fstpl
pop
arpl
negb
imul
insb
mov
cmp
dec
add
lods
vmread
lret
and
and
xchg
movsb
sub
cmp
loope
das
bound
test
fmull
pop
imul
rdpmc
push
mov
dec
jecxz
jnp
aaa
mov
out
cmp
xchg
ret
je
hlt
fstpt
lcall
jmp
xchg
or
sub
imul
sti
mov
ljmp
push
xchg
andb
roll
fidivs
aas
inc
mov
lret
mov
push
pop
xchg
test
fnsave
ja
fidivrs
xchg
fisubl
cmp
pop
cmp
sbb
test
sub
je
outsl
mov
mov
pop
push
jbe
aam
lods
or
or
sti
ljmp
mov
ja
imul
adcl
inc
adc
cmpsb
cmp
test
into
clc
or
lock
pop
popa
sub
arpl
inc
repz
lock
sub
cli
mov
jae
cmp
mov
out
stc
mov
sub
out
pusha
mov
test
gs
sub
rorb
jne
cmc
xlat
out
stc
cmp
subl
ret
lock
jecxz
mov
ret
fisubrl
pop
sbb
bound
inc
push
sub
out
adc
and
xchg
pop
sub
les
rclb
xor
cld
jbe
jg
pop
insl
pop
adc
cmpsb
or
push
cli
out
outsl
mov
lock
mov
xorl
or
inc
out
loopne
lock
mov
out
xchg
loopne
mov
sub
imul
popf
sbb
lods
push
pusha
into
stos
rorb
aam
add
xor
in
dec
andb
sbbb
xchg
cmc
fnstcw
sbb
movsl
sbb
xchg
mov
adcl
xchg
cmp
sbb
cmp
sbb
cmp
pop
xor
das
xlat
sahf
jmpw
mov
pcmpeqw
js
js
dec
daa
rcl
fcoml
iret
lds
xor
xchg
xor
push
aaa
adc
pop
pop
mov
test
fisttpl
cltd
dec
adc
loop
mov
cmpsb
adc
adc
scas
jle
jmp
daa
mov
loope
or
pop
mov
out
les
lock
xchg
fdiv
sahf
cmp
fidivrs
jno
icebp
aad
outsl
xor
mov
icebp
repnz
imul
sub
cmc
pop
xchg
cmp
hlt
lcall
jmp
cmp
out
sbb
xorl
mov
jno
dec
jne
inc
aad
lea
call
aaa
pop
push
subb
add
cmp
mov
ret
cmp
mov
aad
pop
sbb
fmuls
or
cmp
xor
cmp
xor
push
nop
js
xchg
dec
les
mov
lds
out
repnz
jno
inc
aad
insb
sub
jp
lahf
aad
jo
popf
sub
stc
mov
sub
ja
outsl
imul
add
or
add
lret
jg
scas
lock
sub
lea
and
jg
and
mov
sub
xchg
imulb
rcll
sbb
fmuls
js
sbb
nop
inc
aam
sbb
jle
xchg
outsl
ja
xchg
xorb
js
ljmp
aam
add
ret
or
shlb
push
sbb
aas
shlb
add
xchg
bound
movsl
dec
pop
cmp
jo
add
arpl
mov
aaa
sbb
dec
pop
jg
jns
push
stos
and
xor
inc
fnsave
and
hlt
pop
jle
lcall
jo
inc
mov
lcall
mov
scas
outsb
ret
sub
out
test
hlt
fildl
lcall
addr16
mov
hlt
sahf
push
jae
add
sarb
pop
jbe
cld
jg
test
out
add
jnp
aaa
adc
aam
adc
call
hlt
adc
and
inc
pop
xor
add
xor
inc
sbb
lahf
icebp
shr
cmp
not
outsl
nop
add
dec
hlt
xor
sub
lahf
addr16
adc
lods
and
mov
shll
pop
sbb
pop
lods
adc
cmpsl
push
sub
xor
jo
outsl
pop
sub
pop
daa
and
cld
and
add
add
cmp
jno,pt
xor
sub
xchg
pop
stos
stos
cmp
mov
pop
test
xchg
push
adc
inc
sub
fdivs
adc
mov
sub
mov
inc
imul
inc
mov
cmp
ret
dec
ds
mov
sti
dec
fwait
loopne
mov
ficoms
inc
push
aad
add
push
mov
jo
das
xchg
push
cmp
in
sub
rolb
add
mov
sahf
inc
in
mov
and
sub
jno
out
lret
js
jg
push
ds
int
sbb
fsub
insb
or
cmp
in
out
push
imul
outsb
pop
mov
lahf
les
mov
inc
mov
lret
adc
loopne
outsl
sub
add
inc
inc
leave
pop
mov
mov
outsb
outsl
std
mov
sub
push
das
movl
mov
int3
lods
jecxz
test
mov
dec
scas
lahf
shl
in
pusha
loope
fisttpl
lods
and
jmp
jg
divl
sub
inc
int
in
mov
push
mov
adcb
mov
cmp
adc
pop
test
hlt
incl
fsub
pop
jecxz
and
loope
aaa
xor
shll
mov
mov
sub
mov
repz
push
push
cld
andb
or
lret
shll
sbb
fldenv
outsl
dec
and
jmp
call
add
xorl
adcl
jecxz
pop
sbb
in
movsl
and
xlat
sbb
jecxz
orb
pop
mov
enter
adc
outsb
adc
and
xchg
cmp
movsb
sub
pushf
pushf
into
sbb
mov
vcmpsd
push
mov
xlat
ret
rcr
inc
mov
pop
inc
jmp
outsb
loope
shll
divb
or
and
nop
mov
lea
sub
pop
xor
cmp
push
aas
jl
lods
aaa
or
lock
iret
outsb
add
out
mov
jle,pn
add
sbb
dec
inc
lods
pop
cmp
adc
test
jb
cmp
sbb
jne
jp
pop
jne
push
push
mov
dec
andl
arpl
inc
push
adc
daa
inc
ret
cmp
mov
ret
arpl
loope
sbbl
pop
mov
movsb
aas
int3
mov
jbe
and
inc
imull
jl
outsl
les
js
push
or
and
aaa
xlat
je
and
inc
arpl
test
fistl
sub
shrl
out
pop
mov
sarb
sub
sahf
xchg
in
push
cmp
dec
hlt
lods
sub
pop
adc
mov
cmp
mov
int
jg
fsubr
dec
dec
stc
mov
out
shl
stos
cltd
fdivrp
jge
out
in
mov
sahf
push
adc
das
lret
adc
lea
in
shl
sbb
cmpsl
push
repnz
daa
jge
incb
es
cmpsl
xchg
imull
xor
cwtl
jbe
enter
movsb
inc
rsm
pop
nop
sub
sbb
xor
jmp
stos
mov
jl
and
add
loop
push
and
in
cwtl
jp
repz
add
dec
jnp
repnz
xchg
xchg
test
push
xlat
pop
ret
mov
loop
imul
or
push
ret
es
or
cmp
loope
inc
ja
sahf
in
and
cmc
push
aas
stos
mov
jp
fisubrs
aas
negl
bound
cli
mov
rclb
andb
inc
or
imul
sbb
push
mov
ljmp
fsts
aaa
sub
add
mov
sub
lahf
jno
cmpsl
inc
icebp
add
push
imul
idivl
es
cmp
sub
hlt
ficoms
fstps
cld
mov
lret
xchg
in
sub
jbe
mov
and
cwtl
jb
ret
jbe
scas
fcoml
xchg
es
jno
lea
jo
push
jp
stos
je
sbb
fidivl
lock
add
jae
sbb
cmp
mov
inc
or
push
cwtl
sub
mov
lods
punpckhwd
je
mov
xor
cmpsb
icebp
xchg
jp
or
je
xchg
xchg
xchg
jbe
pop
mov
movsb
mov
jecxz
imul
cmp
mov
xlat
sub
into
cmp
int3
jmp
lock
xor
inc
test
jns
dec
aaa
xchg
inc
push
aaa
mov
xchg
rcr
arpl
cmp
sbb
cmp
pop
test
test
les
das
cmp
nop
inc
sub
mov
xchg
les
sbb
dec
jg
lret
mov
dec
loope
repnz
dec
pop
sahf
dec
mov
xchg
sub
cmp
xor
hlt
roll
outsl
lea
and
jns
sbb
cmpsl
lock
xchg
ja
inc
pop
mov
int
adc
sub
jns
push
cmp
add
lods
fwait
arpl
clc
test
hlt
pop
cmp
sub
or
or
inc
dec
push
scas
dec
or
cmpsb
jge
pop
scas
mov
test
hlt
sbb
mov
dec
mov
aaa
sub
ficoml
inc
sub
pop
mov
sbb
jmp
frstor
icebp
movsb
jbe
xor
iret
mov
xor
jmp
pop
jge
sbb
loop
sub
xchg
test
xchg
xor
push
cld
cli
fidivrs
gs
jns
les
lea
icebp
mov
negb
je
lcall
and
add
cmpl
scas
jno
daa
rep
or
or
inc
out
and
int3
aad
mov
cmp
mov
xchg
test
dec
mov
sbb
daa
addl
pop
cmp
sarl
in
stos
jmp
inc
mov
or
sahf
xchg
sbb
es
mov
dec
mov
jne
jns
sbb
pop
jns
orb
and
aas
and
outsl
dec
mov
xchg
mov
xor
jo
leave
mov
lods
stos
cmp
out
or
cmp
loop
or
pop
in
xchg
outsl
push
cmovne
pop
sbb
pushf
xor
imul
addr16
add
mov
lea
jecxz
adc
fs
loopne
fucomip
cmp
and
adc
xchg
mov
xor
jne
mov
rolb
divb
nop
inc
in
rorb
add
sbb
fists
jae
jl
lcall
push
les
cs
lcall
adc
iret
int3
xchg
leave
sbb
cmc
push
dec
pop
mov
enter
push
aad
test
jnp
adc
xor
mov
iret
push
lcall
sub
pop
fisttps
sbb
dec
lahf
sub
scas
scas
int
aad
xchg
in
gs
dec
ss
sub
clc
and
cwtl
dec
popf
jno
dec
mov
dec
fsubrs
sub
adc
fs
shl
add
inc
xor
adc
das
lret
pop
les
daa
add
aam
test
push
hlt
sub
or
lret
pop
ljmp
push
out
cmpsl
mov
cmpsl
mov
dec
sub
lahf
pushf
in
mov
int3
loope
xchg
test
sub
ret
bound
lds
sbb
dec
mov
xor
jmp
test
jnp
jo
addl
lods
inc
jne
mov
addr16
ds
fldcw
insl
push
jbe
inc
sub
mov
fwait
repz
scas
dec
mov
fldt
cld
mov
addr16
jle
lcall
test
mov
shll
cltd
ds
ror
or
cli
or
lcall
mov
lret
xchg
push
cltd
addl
mov
dec
les
inc
filds
add
ljmp
imul
pop
cltd
mov
dec
lahf
mov
lret
cmpsl
ret
clc
mov
loope
cmp
ss
jno
sbb
mov
je
cmp
push
adc
sub
inc
push
ret
aad
outsl
push
mov
std
mov
add
ss
js
data16
mov
stos
push
popa
xchg
inc
inc
aaa
int
out
inc
add
mov
frstor
or
outsl
mov
and
mov
pushf
xor
cmc
cmp
sbb
xchg
xor
ret
cmp
pop
xor
cli
sbbl
mov
ss
out
push
mov
push
jmp
and
imul
psubd
mov
pop
cmp
or
ror
roll
iret
outsl
mov
enter
push
jo
add
adc
sbb
test
subl
pop
xor
lds
cmc
lds
push
inc
scas
loopne
cmp
stos
in
cmpsl
pop
dec
movsl
jbe
pop
out
mov
test
mov
mov
aas
mov
ret
stos
in
mov
fmuls
or
iret
das
mov
adcl
mov
das
and
mov
dec
cmpsl
push
daa
movsl
rcll
icebp
and
xchg
mov
lds
cltd
jecxz
cmc
stos
ret
mov
cmp
xchg
arpl
sub
push
mov
xor
pop
xor
sub
push
xchg
fcompl
mov
stc
add
or
dec
cmc
lret
adc
imul
popa
dec
iret
imul
jp
mov
pop
repz
cmp
lret
ds
cltd
ret
enter
adc
loope
and
decb
cmp
add
pushf
inc
rol
cmp
xchg
pop
aam
sub
ret
jp
cltd
jb
lea
jb
mov
mov
pop
cs
lds
aad
cmpsl
mov
jb
inc
xlat
pop
mov
loop
jne
and
cli
aaa
jl
std
jecxz
stos
fldenv
cltd
ss
jg
or
cli
loopne
jp
jo
mov
xchg
bnd
sub
push
jge
sbb
movsb
jmp
out
and
aaa
mov
aam
pop
jge
push
add
out
and
cltd
pop
call
mov
inc
xchg
jno
fisubrl
das
mov
jae
in
flds
sbb
scas
sbb
sbb
pop
cmp
xchg
mov
jns
fs
fisubs
dec
push
fdivp
jp
mov
dec
idivl
lcall
add
int
lods
jg
das
fcompl
cmc
pusha
add
popf
js
lods
outsl
or
push
or
pop
pop
jno
push
jo
fisubl
aaa
push
mov
mov
rdpmc
push
xchg
dec
shll
inc
lcall
in
add
int
ret
clc
ja
xor
or
pop
divl
pop
outsb
push
int
mov
aad
fwait
mov
outsb
add
xor
cs
insl
pop
aad
xchg
mov
mov
test
std
xlat
cwtl
dec
xchg
out
lods
lret
adc
xchg
push
pusha
or
jle
std
test
sub
faddp
mov
inc
pop
jmp
fstpl
lret
pop
aas
int
mov
sbb
xor
mov
sti
imul
cmp
rol
fmul
pusha
or
or
xchg
adc
and
xchg
and
cwtl
lcall
lret
shl
inc
je
aam
imul
jp
jns
push
add
jle
dec
or
scas
out
xchg
rep
cmp
sub
rclb
dec
mov
add
cmp
jecxz
stos
xchg
inc
or
negb
push
jle
out
rorb
arpl
jno
or
stos
xor
insl
fidivrl
aad
fs
jle
lea
mov
mov
pop
lret
dec
jg
jne
or
xor
mov
shl
sbb
cmpsb
idiv
or
xchg
pop
fcompl
sarb
xlat
push
fnstcw
imul
mov
subb
cmp
mov
pop
std
jmp
inc
ja
movsb
clc
or
out
add
add
adc
scas
pop
sub
dec
call
jl
adc
cmp
enter
clc
inc
jp
mov
movsb
jnp
mov
or
sbb
popl
je
adc
xor
stc
cltd
pop
inc
sbb
in
test
mov
pop
fistpl
dec
subb
push
aam
psubq
shr
loopne
pop
or
mov
xchg
xchg
lret
lods
insl
or
sub
imul
and
sub
xor
xor
or
xor
push
outsl
jp
addr16
xor
mov
insl
sbb
adc
lods
gs
jecxz
inc
jno
mov
add
mov
push
sbb
rclb
in
pusha
inc
mov
xor
mov
push
or
lods
or
mov
sti
inc
notb
xor
nop
call
cmpsl
jecxz
addr16
push
jecxz
rcrl
repnz
orl
mov
arpl
in
lret
and
or
fldl
sub
lret
call
jecxz
inc
mov
jmp
lds
outsl
jl
lods
xchg
scas
push
mov
rolb
ret
nop
je
jno
mov
add
imul
stc
sbbl
shrl
push
out
lds
lcall
or
add
repnz
push
cmc
push
add
and
mov
cmp
xlat
mov
orl
jns
fmull
xchg
inc
outsl
push
mov
jg
inc
aaa
lret
and
add
aas
xor
cmp
ss
daa
test
repz
lds
insl
sbb
out
inc
adc
xor
loopne
cmp
mov
inc
cld
push
cli
cmp
jmp
aaa
in
cmp
lahf
push
fimuls
xchg
fwait
ror
ret
push
sbb
lret
fsubr
fnstcw
cmpb
imul
fcomps
in
cmp
jnp
aam
mov
xor
insb
notl
mov
rcll
in
imul
cli
mov
mov
lods
mov
xlat
cmpsl
ds
jae
stc
sbb
movsb
and
test
inc
cmp
xchg
icebp
add
adc
mov
adc
into
hlt
fiaddl
add
jnp
scas
jp
xor
mov
int3
aaa
in
sbbl
mov
imul
add
mov
les
xor
sub
jns
negl
mov
in
mov
lds
mov
push
xchg
pop
aas
xor
jns
cwtl
pop
xor
mov
lds
xchg
scas
cmpsb
adc
clc
ja
das
mov
pop
xor
push
sbb
out
mov
cld
jmp
sbb
and
add
das
test
sarb
lahf
aad
jns
das
cmovo
push
cmp
movsb
outsl
inc
or
and
cmp
jle
mov
cmp
push
jb
aas
push
ja
and
inc
xchg
pop
stos
dec
call
dec
call
adc
inc
or
arpl
mov
mov
sbb
fisttpll
adc
je
js
imul
int3
inc
cmp
mov
aaa
or
dec
push
outsb
cmp
test
rcrl
dec
fsub
xchg
scas
ret
sub
stos
sbb
xor
test
cmp
bnd
jno
xchg
inc
inc
js
adc
mov
dec
or
dec
adc
inc
hlt
ret
mov
jns
mov
lock
mov
push
test
mov
xchg
jl
test
pop
sub
xchg
push
jbe
and
sub
or
pop
cmp
stos
pop
sub
push
scas
jp
inc
or
adcl
fcompl
lods
in
or
outsl
pop
stos
adcl
dec
paddusw
push
push
xchg
xor
movsl
xchg
mov
cltd
imul
rol
lods
std
lahf
lcall
pop
cltd
inc
mov
and
mov
jecxz
jb
mov
test
stos
dec
inc
push
pop
or
fists
inc
stc
push
pop
fcmovb
xchg
mov
push
cmc
inc
mov
outsl
rcrb
or
dec
push
jmp
or
pusha
mov
enter
popf
pop
cltd
xchg
in
jb
dec
fld
lea
push
jns
jne
jge
adc
dec
out
arpl
cmpsb
adc
in
or
iret
mov
sti
push
icebp
sbb
js
and
pop
call
cmpsl
addl
adc
mov
pop
repz
icebp
fstpt
mov
rcll
insl
mov
mov
push
ret
xchg
xlat
fld
cmc
out
js
lahf
out
pop
and
loope
inc
shrb
push
jo
cmp
add
nop
lock
xchg
out
jecxz
jae
cmp
in
lods
mov
into
add
mov
sbb
sub
lods
lds
mov
es
outsl
sub
scas
xlat
ds
pop
jb
test
aam
jb
cmp
cld
jne
mov
frstor
pusha
inc
iret
mov
psubsb
xorb
call
fs
lods
fiaddl
dec
lahf
inc
ret
xchg
shll
cmp
mov
push
decb
test
int
inc
dec
movsb
out
mov
dec
add
js
xchg
push
cmp
xchg
icebp
pop
daa
mov
aas
lahf
icebp
dec
lds
subb
iret
xchg
lods
inc
xor
fisttps
cli
pop
decb
push
xchg
or
shrb
das
xchg
pop
cli
sub
ret
ret
add
push
sbb
push
notb
sarb
or
in
mov
jp
pop
adc
sub
imul
sbb
repz
divb
cmp
push
rorb
shl
shll
das
aas
jbe
insl
in
cmp
in
jo
sub
test
push
ds
imul
mov
jns
das
xor
jmp
cmc
mov
inc
xchg
push
add
cs
xor
push
nop
ds
pop
push
fidivrs
push
jne
mov
inc
lods
lcall
push
aam
mov
sbb
inc
ret
add
subl
push
xchg
test
pusha
pop
push
xchg
dec
push
aas
aad
stc
iret
cwtl
jp
mov
out
jp
fsubr
sbb
les
imul
or
shrl
push
mov
lods
divl
imul
ja
rcr
fistpl
shlb
imul
jle
movb
testl
filds
mov
in
scas
test
or
out
bound
jns
xor
fwait
pop
mov
mov
mov
cmp
js
xorb
push
outsl
ds
insb
jno
ja
aas
movsl
xchg
pusha
jl
or
out
imul
dec
pop
rorl
stc
push
ret
cmp
dec
xor
jecxz
add
sbb
xchg
or
shll
xchg
ds
mov
jnp
cld
in
sub
lods
lds
sbb
mov
mov
ret
sbb
shrb
dec
in
lods
adc
bound
inc
sbb
or
repnz
orl
fcoms
pushf
outsb
int
shrb
iret
js
xchg
sbb
dec
enter
icebp
scas
push
jnp
pop
sarb
xchg
imul
mov
pop
mov
out
sbb
pop
sbb
pushf
dec
cmp
lods
jl
jmp
fimuls
lea
addb
in
inc
or
push
rcrb
lock
push
ss
add
das
shl
les
inc
adc
test
sub
mov
jp
jg
mov
pop
jb
dec
loop
adc
clc
jae
cmp
pop
iret
shlb
dec
push
xchg
aam
cmp
mov
jae
cmp
rolb
add
adc
cmp
ss
lock
les
addb
inc
xchg
inc
int3
add
mov
cwtl
jge
das
jb
fwait
or
xor
dec
movsb
fwait
mov
icebp
xchg
and
lods
push
out
mov
pop
lahf
fwait
jmp
mov
jne
fldl
xor
cmpsl
dec
jno
pop
daa
adc
fldt
dec
iret
imul
fcoml
jno
mov
addb
sub
lock
pop
pop
xlat
imul
and
mov
lds
push
movsl
cli
clc
xchg
call
xchg
cmp
movsb
testl
pop
pop
push
out
cli
mov
aaa
jno
lret
outsl
ret
push
rorb
nop
test
cmp
pop
fstpt
lds
mov
mov
out
sbbb
push
sbb
addr16
adc
xchg
mov
in
cmp
outsl
sbbl
int3
dec
inc
pop
mov
test
xchg
mov
cmp
lret
sbb
adcl
fidivrl
daa
imulb
out
jp
repz
insl
pushf
pop
test
dec
xchg
mov
push
insl
mov
rcrb
stos
rolb
mov
sahf
xchg
jmp
in
jl
mov
outsl
push
and
lret
in
out
jmp
cmpsl
fildl
inc
adc
js
orl
lret
popa
push
add
jecxz
rcrb
lea
sub
xchg
jl
aaa
arpl
sub
mov
inc
andl
fucom
mov
xorb
push
mov
sbb
sub
xor
mov
mov
out
shll
xor
add
cwtl
in
mov
ss
sarl
add
pushl
test
adc
je
add
pop
cmp
or
movsb
insb
mov
sub
divl
lock
lahf
lds
add
das
shlb
mov
ds
aas
cli
or
xor
or
and
repz
in
adc
adc
insb
daa
arpl
mov
dec
mov
xchg
sbb
mov
test
fcmovnb
insb
cmpsl
shl
scas
cmp
mov
and
popf
les
aas
mov
shrb
add
push
mov
add
push
jl
and
je
iret
add
shlb
jmp
push
lcall
aas
out
cmp
sbb
sahf
outsb
add
dec
cmp
xor
icebp
dec
fldl
aad
push
mov
mov
dec
add
clc
bound
mov
or
jne
mov
mov
jmp
or
sahf
push
repnz
je
aad
cmp
dec
leave
aas
or
mov
pop
sbb
ret
xor
test
xchg
pop
dec
mov
jge
adc
fs
es
out
mov
xchg
cmpsl
aad
pop
mov
aaa
sbb
sub
xor
je
xchg
lcall
shrl
loop
sbb
pop
lea
icebp
xor
mov
mov
scas
mov
lods
sub
insb
jbe
test
test
sub
sarl
cld
test
sub
imul
xchg
sarb
pushf
push
pusha
inc
sub
fidivl
and
inc
fdivl
ret
rol
sub
aas
sub
nop
xchg
scas
fsts
mov
test
jecxz
jo
or
mov
sub
sti
outsl
decl
push
test
sub
push
mov
fcom
xchg
mov
xor
test
xor
mov
fistpl
and
sub
fwait
sbb
mov
mov
into
jnp
inc
or
jb
xlat
lahf
pop
imul
xchg
xor
jbe
mov
rcrb
sub
dec
pop
cmp
sbb
aas
xor
stos
sub
pop
je
push
adc
fwait
or
fsts
lds
movb
sti
fnsave
or
out
in
out
cmp
scas
xchg
cmp
aas
dec
xchg
insl
int3
or
xor
test
sub
mov
cmp
test
dec
ret
lcall
lds
jno
cmc
in
mov
cmc
mov
lock
testb
jp
movb
dec
sbb
mov
aaa
sub
aaa
inc
inc
ret
aaa
cmp
bnd
addb
xchg
orb
lods
adc
fnstcw
dec
jnp
andb
xor
xor
shll
adc
rcl
sub
inc
icebp
mov
fldcw
aaa
test
dec
leave
pop
mov
adc
or
outsl
cli
push
inc
pop
fnstcw
inc
int3
sti
lds
loop
sbb
fcoms
test
xchg
jmp
mov
aas
xchg
das
in
add
iret
fsubp
nop
daa
test
test
lock
adc
outsl
icebp
fsubrl
cmc
dec
ljmp
or
dec
fisttpl
lds
jp
in
not
xor
xor
or
sub
and
mov
dec
dec
shl
xor
add
movsl
lds
xchg
push
or
cmp
mov
cmp
xchg
pop
sbb
je
mov
xlat
fidivrs
jg
mov
mov
xor
ss
inc
int3
out
dec
lret
cmp
popf
mov
fimull
gs
xor
pop
dec
loope
cmp
dec
xor
adc
xor
mov
iret
lods
inc
pop
into
xchg
filds
loopne
or
fmull
shll
xor
xchg
pop
jle
lcall
xchg
xor
inc
loop
add
pushf
xchg
iret
xchg
jne
inc
xchg
mov
inc
into
lock
push
or
stos
sbb
dec
insb
daa
xchg
or
sbb
out
pop
movsl
out
add
jg
mov
push
mov
mov
push
push
inc
rcll
inc
push
insl
adc
xor
shll
out
mov
fnstcw
sub
arpl
xchg
fs
push
hlt
mov
mov
repnz
push
aaa
and
aaa
inc
or
scas
adc
jns
mov
jle
faddl
mov
shll
dec
shrl
adc
sub
out
jmp
and
nop
enter
sub
gs
jo
cmp
lcall
add
inc
mov
testb
imul
cwtl
mov
negl
jl
stos
dec
cmpsl
mov
cwtl
jle
lret
sub
sub
push
dec
pusha
jle
in
sub
jnp
mov
inc
jle
sbb
inc
cmp
fs
loopne
jno
insl
cmpsb
and
cmpsl
lea
mov
cld
rorl
jmp
xchg
dec
mov
xor
add
adc
js
and
push
ja
cwtl
push
mov
jl
add
jle
pop
or
mov
ljmp
cltd
jns
mov
fwait
lcall
outsb
xchg
mov
call
jne
lahf
mov
sub
mov
ljmp
add
aam
or
insl
pop
xor
jg
mov
cmpb
mov
jle
push
sbb
cmp
mov
mov
jne
lret
jbe
outsl
mov
pop
bound
jl
rol
ror
adc
popa
sar
lods
stos
iret
sub
or
or
out
cmp
dec
stos
rcr
jo
and
mov
movsb
pop
addb
sub
das
cmp
je
icebp
nop
lret
call
pop
jae
cmp
fisttpl
ja
mov
orl
jg
push
xor
add
jecxz
movsb
sbbb
xchg
int3
xchg
push
out
sbb
nop
jae
jp
pop
mov
inc
lcall
dec
xchg
cld
loope
lcall
push
and
mov
cmp
mov
out
inc
cmp
les
cmp
xchg
stos
rcll
or
mov
sub
mov
imul
inc
test
jl
or
in
or
adc
and
imul
inc
mov
mov
add
xorl
sti
popa
mov
adc
shrl
xchg
cmp
fnstcw
lahf
fdivrs
bswap
mov
fmull
xchg
dec
jle
into
cmc
push
adcb
cmc
movsb
je
sub
stc
repz
inc
nop
data16
mov
cmc
imul
clc
lock
ficomps
or
cmp
mov
or
jne
xchg
cld
iret
inc
sub
jp
mov
cs
dec
fidivrl
sbb
mov
jge
mov
les
and
lds
out
lea
sub
enter
jo
push
mov
mov
xchg
sub
jno
mov
mov
fwait
jns
out
cmp
cmc
push
mov
push
popf
mov
cmpl
cmp
mov
orb
fwait
imull
add
movsl
test
notb
adc
dec
iret
fs
fnstcw
test
dec
dec
dec
sbb
jne
mov
rcl
sbb
xor
mov
iret
xlat
movsl
add
jae
test
jbe
jecxz
scas
inc
imul
lods
push
pop
cmpsb
mov
add
out
jmp
mov
xchg
inc
dec
sbb
test
sub
addr16
shll
xchg
sbb
ret
scas
xchg
cmp
pop
mov
adcl
imul
inc
mov
cmp
push
hlt
sbbb
mov
pusha
jecxz
stos
js
lods
xchg
out
mov
xchg
mov
dec
adc
mov
add
mov
lock
cmc
jno
mov
sub
pop
mov
adc
jp
negb
imul
pop
and
call
lods
jl
cmp
and
repnz
rcll
scas
andb
xchg
out
or
xchg
mov
or
sub
push
ljmp
js
cwtl
cltd
imul
aas
inc
inc
mov
pop
and
shll
lock
inc
adc
mull
jns
les
sub
je
fs
mov
push
cmp
xor
mov
mov
xchg
dec
xchg
sub
cmc
divl
add
aas
cld
nop
ficoml
sub
mov
push
js
in
push
mov
mov
jnp
ret
imul
lret
js
je
icebp
sbb
stos
les
jb
lods
mov
lahf
mov
pop
sbb
ret
mov
xor
faddp
push
mov
orb
enter
nop
lods
mov
add
imul
xabort
mov
jnp
xchg
pop
push
mov
and
jge
lock
out
hlt
jb
push
fcompl
nop
lods
jnp
in
xor
jle
jo
dec
xchg
and
addr16
mov
sbb
daa
popa
adcl
sub
adc
lods
mov
add
pop
inc
xor
popf
inc
dec
ret
ret
jns
subb
dec
popf
or
pusha
rcll
sbb
jmp
js
imul
and
fidivrs
aam
jnp
notb
bound
adc
test
int
in
push
mov
test
cmc
pop
sbb
divb
dec
push
out
aas
lret
outsl
call
push
adc
sub
dec
dec
lea
pop
adc
daa
mov
cld
jmp
dec
addr16
xchg
sub
in
int
adc
andl
xchg
jl
lahf
mov
pop
sub
jae
pusha
loopne
pop
pusha
push
fsts
popa
dec
mov
mov
mov
es
jae
imul
jge
push
push
sub
mov
addr16
dec
jmp
mov
and
or
jb
lods
push
pushf
in
mov
shr
pop
pusha
xor
subb
imull
add
adc
xchg
cmovp
icebp
jg
outsl
inc
into
ja
push
jno
add
jb
shrb
idivb
aam
adc
dec
and
test
test
add
mov
stos
imul
andl
xchg
ficompl
mov
xchg
or
xchg
leave
sahf
jl
and
inc
cld
mov
jmp
stos
pop
inc
jo
inc
dec
addr16
lods
cmp
test
pop
mov
pop
jae
mov
out
les
pop
or
cmp
stos
pop
dec
or
fimull
imul
nop
loope
mov
fdivrs
cmp
jp
test
movsl
outsb
jb
test
and
inc
out
inc
inc
rorl
jecxz
and
outsb
cwtl
xchg
cld
or
jne
mov
test
int3
aam
fscale
push
inc
xor
mov
out
inc
xchg
and
or
dec
stos
cmp
push
ret
cli
fs
cmp
xor
pushf
decl
jmp
dec
arpl
aaa
add
popa
test
inc
pop
pop
push
sbb
pop
push
mov
dec
or
pop
aam
ffree
push
ret
loopne
popa
mov
roll
dec
xor
sub
mov
cltd
push
cmpsl
outsl
fstpt
xor
popf
sbb
rcrl
iret
lods
ficoml
pop
into
xchg
jno
jae
xchg
mov
outsl
mov
ds
xor
in
add
inc
xor
fwait
leave
shrb
sbb
jge
adc
test
cmpsb
lods
mov
repnz
cli
aam
nop
push
jne
adc
xor
inc
iret
out
lret
insb
rcll
adc
xor
ret
into
sub
sbb
mov
popa
inc
imul
cli
mov
push
fisubl
push
pop
rorl
rolb
into
dec
or
shlb
add
mov
inc
mov
das
ljmp
jns
imul
ja
pushf
and
xor
cmp
add
ljmp
xor
xchg
dec
jns
aas
lahf
jae
inc
test
loop
in
not
add
add
adc
cltd
xchg
fimuls
fsubrs
popa
mov
xor
jle
loope
or
test
and
aaa
add
aaa
and
hlt
or
jge
ja
push
movb
push
jo
mov
pop
fiadds
mov
pop
push
subl
xchg
pop
das
cwtl
cmp
cli
lods
jmp
sub
jnp
push
sahf
sbb
or
sbb
stos
sarb
and
aam
mov
push
hlt
dec
jnp
into
nopl
and
addr16
sbb
ds
sub
movsb
or
popf
sbb
mov
cmp
add
cmp
jns
cmpl
mov
inc
rolb
into
mov
aaa
aas
in
ret
scas
xchg
int
fstl
outsl
or
cmc
popa
and
cmpsl
imul
decl
test
imul
jmp
inc
push
rorl
ret
add
std
out
jp
mov
movsl
daa
xchg
or
push
mov
cmp
aas
outsl
dec
lock
sbb
dec
pop
into
push
sbb
and
aad
pop
mov
sbb
jmp
or
cmp
pop
xor
mov
xchg
fimuls
inc
xchg
mov
inc
addb
sarb
jns
xorb
filds
in
loop
mov
mov
mov
int3
test
lods
mov
sbb
outsb
or
aas
ficompl
jle
in
dec
es
xchg
xchg
pushf
jge
mov
sub
imul
ficompl
and
cltd
inc
js
mov
inc
stos
inc
push
in
out
outsl
rorb
cwtl
jle
test
sbb
or
das
es
pop
mov
mov
xchg
mov
stos
sar
mov
pop
fdivl
sbb
jl
imul
and
enter
stos
sbb
jbe
lods
sub
or
mov
jbe
mov
pop
fisttpl
cmp
rorl
cmpsl
pop
jg
popl
sarl
out
movsb
sbb
adc
sbb
dec
jl
dec
test
test
bnd
ret
adc
xor
mov
jl
pop
ljmp
xor
ljmp
dec
cli
ja
xor
pushf
aad
pop
adcl
shlb
shr
cmpsl
pushf
add
test
insb
jae
jno
inc
out
sub
mov
popf
pusha
jl
stos
xor
inc
not
add
pusha
xrelease
sbb
sub
ljmp
xchg
nop
loopne
in
es
mov
or
dec
push
mov
clc
outsb
mov
jg
jo
leave
dec
mov
inc
ret
push
mov
push
push
testb
mov
fwait
insl
add
sarb
icebp
int3
jle
dec
inc
mov
rol
add
aad
insl
xchg
inc
add
xlat
mov
add
mov
repz
stc
xor
push
movsl
and
loop
mov
xorb
je
outsl
push
pop
jle
lods
or
sub
loop
xchg
or
je
jno
or
cmpsl
flds
rep
subb
or
int
repnz
dec
push
jge
mov
and
clc
outsl
pop
inc
repz
cld
daa
cmp
addr16
xor
les
movsb
jl
sbb
aas
add
daa
je
push
dec
jo
dec
xchg
mov
mov
xchg
je
std
and
or
sarl
push
xchg
xchg
test
jge
add
movsl
or
sub
scas
push
xchg
pop
xchg
inc
das
sbb
mov
mov
mov
pop
fdivr
push
ljmp
nop
int
int3
pop
inc
mov
repnz
mov
les
mov
cmp
cmp
cmp
pop
ror
add
divb
or
imul
add
push
sub
cld
xor
lcall
iret
jns
xchg
mov
and
pop
lret
test
lret
mov
jge
stc
int3
lcall
xor
pmullw
and
aad
pop
push
sarb
and
std
out
xlat
add
mov
mov
cmc
xchg
lock
outsb
addr16
jg
loope
lret
cld
out
sub
fs
les
xchg
loope
nop
and
or
or
sbb
je
iret
fadds
jle
cli
daa
mov
int
mov
jb
aas
aas
add
addr16
sahf
clc
out
xchg
fwait
and
std
inc
mov
push
mov
out
push
lret
ret
pusha
lds
fsts
push
adcb
sub
ret
xchg
aas
nop
dec
divb
xchg
and
fisubrl
jecxz
push
dec
xor
shrb
fs
lret
or
adc
mov
sub
nop
xchg
aas
xchg
repz
data16
dec
xchg
fsubl
out
dec
adc
cmp
fst
outsb
jae
cmp
push
rcrb
mov
loop
jmp
lea
cmpsb
int
je
xlat
push
dec
lods
test
dec
or
lds
cmp
pop
movsb
xchg
jle
imul
idivl
jg
sub
mov
ds
push
push
mov
xchg
in
int
push
push
test
mov
lea
mov
leave
mov
dec
push
xor
sahf
fdivl
pop
pop
and
scas
cmp
adc
jp
fs
and
sbb
pop
cld
jl
add
xchg
pop
jle
jmp
adc
cld
int
sub
pop
sbb
fcoms
in
add
and
test
add
dec
jl
test
sti
mov
nop
and
pop
sub
add
cmp
jnp
mov
add
push
xor
dec
add
adc
cmpsl
or
lds
or
xor
xchg
hlt
jmp
ja
dec
insl
lahf
pop
jae
in
xor
imul
idivb
or
lods
xorb
cmp
aad
mov
pop
lea
xchg
hlt
or
bound
sbb
inc
push
imul
add
int
push
jno
push
imul
mov
movsb
push
inc
lock
ds
xor
scas
loope
sbb
test
in
push
fldl
incl
sarb
cwtl
outsl
or
dec
jmp
in
fisttpl
xchg
aas
xor
test
add
xchg
adc
mov
cs
cmp
mov
mov
xchg
stc
int3
test
imul
iret
dec
das
ret
sub
hlt
fisubrs
stos
lea
int
sub
sub
js
xorb
mov
mov
test
push
dec
not
stc
clc
imul
adc
rcrl
pop
popf
xor
mov
cltd
popa
lock
mov
or
xor
mov
aaa
xor
out
or
insl
mov
imul
nop
pop
lods
stos
add
xor
mov
add
jp
lds
fldl
scas
mov
negl
in
mov
mov
icebp
push
push
sbb
enter
push
js
ja
nop
js
mov
pop
test
mov
mov
jo
sub
dec
jmp
cmpsl
mov
mov
inc
sbb
int3
inc
jge
js
neg
outsb
xor
jnp
add
or
adcl
push
imul
bound
test
jb
push
sub
divps
stc
rcll
jns
or
adc
ds
test
or
cmp
cmc
mul
jnp
mov
and
cmp
jno
test
lcall
mov
imulb
cmc
and
int
xor
cmp
push
xchg
out
addl
push
mov
in
jns
lods
mov
mov
and
dec
pop
dec
and
dec
test
pop
sub
sub
mov
sahf
adc
mov
or
mov
or
lret
xchg
lds
imul
fisubrs
adc
scas
shll
jnp
mov
rcll
int3
cmpb
js
mov
inc
hlt
jle
sub
add
scas
xchg
lods
dec
cmp
shlb
mov
add
lea
inc
mov
mov
mov
sbb
insl
inc
dec
std
sarb
mov
daa
mov
fidivrs
lahf
sub
ljmp
shrl
xor
mov
pop
lret
rolb
cmc
dec
pop
ret
pop
les
pusha
inc
jbe
xchg
add
rcll
orb
adc
and
mov
je
mov
cmpsl
mov
pxor
outsb
das
cwtl
and
mov
aam
test
jmp
scas
cwtl
xchg
sub
leave
dec
xor
outsb
lret
cli
jns
icebp
xchg
loope
push
push
nop
xorb
cs
and
or
mov
sbb
leave
ljmp
jnp
inc
mov
jecxz
rolb
cmpsb
or
in
fstl
test
lods
scas
lret
rcll
dec
and
popf
jecxz
pop
xchg
in
cmp
cmp
xor
mov
repnz
divl
in
inc
or
insb
sbb
dec
in
or
cli
mov
outsl
or
inc
xor
push
imul
xor
inc
xchg
xchg
mov
push
cmpsl
lds
imul
adcl
fcoml
ds
scas
aaa
mov
xchg
fwait
sub
ss
roll
ljmp
imull
sbb
jp
das
inc
sbb
sub
push
movsb
inc
push
cld
mov
sbb
gs
in
jnp
push
push
push
dec
dec
jne
xchg
inc
xlat
movsb
sti
xchg
adc
fdiv
add
cwtl
cmp
popa
jmp
sub
or
rcrl
fbld
lds
dec
xchg
pop
sub
sbb
shufps
mov
sbb
push
xlat
xchg
mov
orb
test
dec
call
stos
faddl
jmp
lahf
aad
pop
jle
mov
inc
repz
shlb
jns
pop
mov
jbe
lahf
mov
stc
push
lock
sub
jnp
repz
sbb
push
jb
nop
or
cwtl
lahf
fwait
pop
into
rorb
lods
cmp
test
hlt
cli
jl
fstp
dec
or
das
imul
add
cld
pop
loop
shll
pop
push
mov
push
add
mov
sbb
out
lds
add
or
push
cli
test
mov
ja
lret
bound
push
shrl
jge,pn
or
rclb
push
cmpsb
pop
cmpsl
jecxz
fistl
inc
int
lcall
jg
pop
jl
fisubrl
mov
ret
sub
add
or
lods
add
cmp
arpl
inc
jg
rcrb
mov
cli
lret
int
faddp
push
pop
jne
popf
out
mov
pop
mov
outsb
sub
or
jl
adc
in
or
inc
or
jb
xor
sub
xchg
orb
ds
xchg
jne
and
mov
push
push
rolb
outsl
insl
lods
push
shrb
lea
je
sbb
lds
mov
out
push
xlat
hlt
out
sti
out
lret
hlt
adc
fidivl
and
shlb
in
mov
jo
jo
mov
pop
roll
leave
ret
mov
inc
mov
lahf
xchg
add
arpl
xchg
mov
paddb
je
lock
aas
jp
imul
cltd
ret
lods
sub
and
or
fdivs
add
sbb
pop
leave
fwait
into
int
jmp
aam
push
sub
sahf
adc
je
fdivp
cmp
pop
outsb
sbb
xor
push
daa
call
rol
in
add
fidivl
and
sahf
loope
cmp
jns
push
fnstsw
jle
xor
pushf
fldcw
adcb
push
mov
push
sub
fdivrl
push
ret
xchg
shl
popf
mov
jg
sbb
inc
gs
mov
push
dec
dec
cmp
lahf
mov
mov
sub
jg
pop
in
or
popa
jae
xor
jecxz
pop
addb
mov
jg
inc
rolb
mov
imul
aad
pop
iret
fcoms
push
mov
sbb
mov
xor
add
push
fcompl
int3
stos
mov
xchg
iret
add
mov
xor
add
inc
mov
adc
adc
pop
lret
cmp
imul
jge
mov
or
pop
sbb
into
int
jnp
loope
lret
mov
or
mov
das
and
fwait
int
or
xchg
scas
pmullw
mov
pop
lret
addr16
lcall
js
call
xchg
scas
jmp
sbb
fiaddl
aaa
add
lret
or
or
xor
int
mov
or
jg
add
popf
outsb
pop
mov
or
sub
sbb
jle
jl
int3
or
sbb
pushf
pop
in
jg
outsl
add
lcall
lret
test
dec
cmc
pushf
sub
aad
lods
and
mov
loope
scas
jl
jmp
hlt
in
and
dec
or
lret
and
cmp
notl
int3
daa
and
xchg
ljmp
into
bound
push
pop
sbb
inc
ja
rorl
push
fildll
mov
ds
bound
sbb
add
xor
dec
mov
xchg
mov
inc
cli
aaa
adc
adc
out
fcmovbe
divb
aam
inc
push
dec
sub
fmul
xchg
pop
xchg
xor
inc
push
loopnew
daa
push
imul
sbb
push
outsb
adc
dec
dec
into
and
sub
mov
cmp
icebp
jno
imul
fs
movsb
mov
mov
jle
jno
cmp
mov
subl
sub
out
mov
adc
clc
xor
insl
mov
testb
mov
je
setno
push
push
push
jbe
aaa
mov
test
and
and
cs
push
stc
mov
or
push
insb
mov
sub
dec
add
inc
add
cwtl
sbb
sbb
loopne
dec
pop
rorb
or
xor
sub
int
adc
lock
leave
sahf
pop
cltd
fcoml
or
rcl
cltd
ret
fs
cmp
fstl
in
lret
pop
jne
adcb
inc
out
mov
xchg
test
xchg
mov
xchg
sbb
jle
jo
aas
sahf
movb
cmc
xor
adc
or
or
fcomp
jmp
push
inc
sarb
pop
test
jnp
int3
sti
shr
and
insb
sahf
stos
mov
stos
scas
outsb
push
dec
cmp
mov
cmp
and
test
gs
mov
nop
sub
sub
cmpsb
ja
jp
push
scas
push
je
lea
nop
adc
pusha
scas
aas
xchg
dec
xchg
out
loopne
stc
xchg
sub
ss
test
add
sbb
je
data16
pop
es
mov
cmp
jmp
int
inc
aas
mov
push
or
loopne
pop
jl
daa
in
dec
add
into
test
dec
cmc
into
jle
aad
stc
testl
xor
testb
cmp
adc
pop
cmp
je
or
pop
lds
sbb
outsl
clc
lods
subl
rcll
adc
shrl
or
cmp
push
pusha
sti
fdivs
or
movsl
inc
mov
lods
lods
ja
outsl
test
fcomip
int
shrl
aaa
shl
cmp
pop
aaa
repnz
jbe
xor
jecxz
sub
shll
test
or
pop
insl
cli
dec
cmpsb
jl
outsl
inc
adc
lock
inc
or
lcall
sbb
jle
popf
addr16
mov
ljmp
fimuls
outsl
push
mov
xchg
inc
test
scas
sub
sbb
xor
movsl
inc
cmp
bound
xchg
xchg
cmpsl
jnp
mov
fiadds
pop
push
push
out
dec
mov
mov
in
cmp
bound
ds
push
leave
bound
inc
xchg
stos
mov
mov
pop
or
cltd
outsl
aam
sti
dec
jg
hlt
outsl
sbb
xor
hlt
dec
add
inc
mov
pushf
aas
sub
and
cli
mov
cmp
mov
or
dec
add
mov
stos
sbb
mov
sbb
push
xor
mov
jae
inc
outsb
jl
rclb
out
jmp
and
jnp
mov
mov
mov
cmp
clc
subb
xor
jo
pusha
ja
jg
test
addr16
loope
push
dec
outsl
cmovle
cmovb
movsb
ret
sbb
mov
pop
push
jbe
pop
ret
int
sub
jae
sub
ljmp
lods
dec
and
stos
or
in
inc
pop
lea
iret
push
xchg
rorb
in
jecxz
mov
xlat
rcll
adc
add
lret
cmpsb
test
ja
adcb
inc
lock
daa
in
pop
in
xor
or
pusha
push
and
push
push
jno
jg
ret
aaa
ret
jae
loopne
roll
in
jnp
mov
lret
sub
clc
in
jo
cmp
pop
lret
xchg
or
xor
sbb
dec
xchg
jmp
mov
out
out
mov
imul
pop
and
daa
scas
icebp
and
add
rorl
mull
inc
xchg
cmpsl
stos
out
sbb
movsl
cmp
filds
cld
dec
lock
inc
das
or
mov
sbbl
pushl
xchg
les
popf
and
inc
test
out
out
out
push
inc
test
fdivrp
dec
mov
in
pop
in
xlat
cmp
movsb
aam
and
mov
mov
sbb
xor
push
mov
pop
in
lret
cmp
pop
push
ja
mov
mov
mov
notb
sub
jno
mov
cmp
stos
movsl
clc
out
hlt
dec
in
sbb
ja
and
inc
std
insb
push
jnp
aaa
lcall
inc
cmp
add
mov
inc
sbb
mov
lret
leave
cmp
xchg
add
lods
nop
or
inc
mov
mov
inc
push
aam
xchg
mov
xor
stc
jg
sub
mov
lods
outsl
outsl
bound
jb
insb
mov
inc
dec
cmp
lahf
ret
add
rcll
pop
aam
pop
pop
bound
jo
cmp
add
pop
sbb
sbb
out
mov
dec
jnp
inc
xchg
out
test
hlt
push
jns
xchg
shl
cmp
aad
clc
jns
ja
jno
scas
je
xlat
jg
xchg
scas
test
jne
jo
dec
and
pop
clc
pop
pushf
or
stos
test
jne
push
xchg
xchg
or
inc
daa
outsb
dec
call
ret
and
sbb
sub
pop
fdivrs
jnp
pop
shlb
jg
inc
lret
mov
imul
imul
cld
dec
test
out
lods
imul
shll
lds
jne
int
pop
orb
sbb
push
or
ficoml
pop
insl
mov
cmp
loopne
add
sbb
mov
sbb
inc
xor
push
sub
popa
xor
in
cmp
xchg
mov
iret
sub
ss
stos
xor
out
cmp
popf
shlb
imul
out
mov
pop
ficompl
sahf
incb
shrb
mov
xchg
jno
lea
sub
or
xor
or
cmp
sahf
and
decl
test
repz
pop
or
adc
loopne
dec
pop
daa
lods
and
out
daa
dec
test
out
mov
mov
movsb
xor
icebp
fmull
arpl
push
cmp
xor
lcall
xchg
out
pop
mov
fwait
or
cmp
mov
pushf
aas
add
and
cmp
dec
and
mov
in
cli
in
imul
lods
lret
dec
loope
jmp
aad
inc
xchg
push
dec
inc
fwait
mov
std
cmp
fcmovnu
jl
mov
adc
ficompl
sbb
mov
ffreep
or
icebp
push
pop
scas
cmp
push
mov
pop
sahf
xor
jmp
test
cld
fmull
bnd
adcw
stos
arpl
shrl
sub
cmc
mov
xor
pop
xchg
pop
mov
leave
ss
imul
aam
imul
cmc
lea
rclb
lods
rcl
sbb
faddp
pop
fistl
clc
dec
sub
ret
fnstsw
sbb
push
mov
imul
out
in
inc
aam
int
xchg
xlat
pop
cmpsb
pop
push
mov
pop
orb
lock
inc
popa
mov
aaa
cmp
dec
scas
adc
rol
xor
mov
mov
ret
and
scas
idiv
fisttpll
dec
fidivrl
sbb
dec
mov
daa
inc
jmp
lcall
xor
addr16
inc
sti
mov
inc
xor
cmp
xchg
ret
ret
fs
in
ret
xor
push
fisubrl
negw
xchg
xor
jnp
mov
dec
shlb
cltd
or
add
cmp
xor
iret
or
pushf
xchg
push
mov
aad
cmp
mov
mov
orl
xorb
jnp
mov
aam
cmp
test
nop
inc
jno,pn
push
filds
jo
lret
inc
inc
aam
cmpb
pushf
insb
hlt
push
aad
loope
push
dec
in
aad
inc
cmp
insb
rcrl
cmpsb
in
lea
lahf
sub
aad
cmp
sub
xchg
stos
loopne
jnp
mov
add
fnstsw
mov
push
lods
lock
mov
pop
inc
sbb
movsl
xchg
or
dec
movsl
push
out
mov
lods
mov
mov
sbb
mov
out
lods
xchg
xchg
les
xorb
or
adc
sub
jo
and
popa
pop
lret
lods
cmp
insb
add
mov
shrl
pop
add
cmp
pop
popa
sbb
call
loope
push
fldenv
sbb
jge
xor
mov
jge
arpl
mov
sbb
dec
pusha
mov
xor
push
or
pop
ficomps
sub
xchg
push
subl
inc
dec
jmp
xchg
aam
das
ds
in
xor
fsubl
push
pop
outsl
pop
cmp
and
sub
addr16
inc
lahf
scas
pop
pop
sub
pop
pop
mov
pop
add
xchg
push
fbstp
xor
loope
cmp
adc
pop
mov
inc
xor
cmp
cmp
fmul
fnop
inc
jae
mov
mov
jg
add
dec
jnp
jns
xchg
ja
jae
xchg
aam
mov
mov
mov
xchg
wbinvd
dec
jg
shlb
add
push
xchg
sbb
popa
stos
lret
lret
insb
rcrl
cmpsl
xor
xor
lahf
add
loope
bound
gs
daa
out
popa
clc
into
fs
jae
imul
or
mov
imul
sbb
dec
out
xchg
clc
jbe
rorl
dec
ja
jl
cmp
adc
add
andb
fxch
xchg
in
loop
inc
sub
sub
xor
sbb
test
mulb
lret
jns
ret
repz
xor
jg
aad
xchg
daa
lahf
es
js
cld
int
push
xchg
jno
mov
mov
mov
rorl
fldt
adc
idiv
dec
sub
jmp
push
std
scas
mov
cwtl
add
jb
pop
xchg
test
shrl
enter
xchg
in
inc
lcall
xor
scas
xor
sub
imul
mov
outsb
lret
in
test
xchg
scas
imul
mov
jl
jg
sub
pop
xor
mov
push
pop
imul
jne
inc
stos
aaa
xor
mov
mov
dec
cmp
jnp
subl
inc
xchg
jle
ret
addr16
and
jno
inc
jecxz
iret
int3
mov
rolb
dec
inc
xchg
divl
dec
sbb
lea
sti
inc
add
test
movsb
sbb
sbbb
mov
sub
inc
shrl
cmpsl
xchg
jl
push
sub
sbb
or
sarb
push
xor
and
call
push
push
scas
mov
mov
adc
mov
pop
mov
pop
dec
es
or
movsl
sbb
cltd
cmp
shl
call
dec
push
sbb
add
and
insl
xor
push
and
stc
test
addr16
pop
pop
dec
mov
cld
cltd
fwait
add
xchg
in
leave
adc
push
xchg
in
test
adc
mov
dec
mov
pop
push
icebp
test
or
cmc
adc
lcall
xor
dec
lds
punpckhwd
outsb
rcll
filds
cmp
dec
mov
daa
and
test
or
out
or
mov
mov
cmp
inc
jns
into
sti
movsl
push
push
jmp
or
in
push
testb
jle
sbb
aas
xchg
jg
shl
pop
insl
jo
xlat
adc
xor
nop
xrelease
mov
in
mov
add
cmp
mov
ja
stos
repz
add
jb
hlt
jo
mov
adc
mov
ja
in
push
pop
mov
push
mov
push
cmp
lds
push
dec
pushf
or
mov
jnp
stos
inc
test
test
sbb
xchg
loope
jmp
push
jge
popa
jno
shrl
pop
ret
mov
xchg
or
push
ficomps
push
lods
adc
hlt
mov
jle
outsl
fucomip
test
jne
cli
xlat
xchg
lcall
jbe
call
das
and
enter
idivl
icebp
pop
jbe
pushf
jmp
pop
push
lcall
adc
testb
xchg
std
jnp
cs
into
dec
movd
mov
aad
and
mov
popf
add
push
mov
fs
repnz
lea
andb
mov
push
ja
cmp
aam
imul
loopne
adc
inc
jmp
xchg
adc
mov
pop
int
mov
adc
pop
and
push
in
stos
shrl
fisubrs
fdivs
and
out
jmp
lds
mov
lods
int3
gs
push
adc
adc
fimuls
aad
or
aaa
lret
mov
int
pop
jmp
push
sbb
test
and
push
mov
lock
insl
fildl
fidivs
bound
mov
sbb
out
mov
jge
and
and
add
dec
push
bts
pop
lock
and
scas
sbbl
mov
subl
sub
xchg
cmp
mov
das
mov
stc
adc
xor
mov
addr16
mov
push
rcll
stos
aad
sbb
mov
bnd
dec
mov
lret
xchg
or
gs
mov
aam
adc
inc
bound
aas
xor
jl
mov
xchg
hlt
mov
sub
cli
jne
jg
inc
or
cmp
mov
mov
int
lods
adc
repnz
add
cwtl
mov
jno
aas
cmovns
mov
movsb
pop
push
jnp
xchg
outsl
dec
movsb
add
or
jno
cmc
inc
jno
sub
xchg
mov
dec
fidivs
mov
out
jl
aas
lahf
aas
and
sub
adc
movsb
jg
outsb
sahf
adc
repz
outsl
test
lret
in
pusha
ljmp
ja
mov
cmp
arpl
aad
cs
lret
add
and
xor
dec
inc
cwtl
mov
test
mov
jmp
shr
xchg
pop
cltd
loope
sub
fidivrl
sbb
cmpl
pop
mov
jmp
dec
lahf
ja
dec
pushf
or
add
bound
andb
mov
add
adc
sub
inc
sub
in
pop
sub
enter
out
jae
and
movb
pop
dec
mov
dec
jbe
jbe
dec
cmpsb
ret
add
mov
jg
sub
fnstcw
bound
sbb
mov
sti
push
jnp
pushf
jae
stos
push
and
testb
add
rorb
cli
xchg
aas
jp
mov
mov
imull
shrb
jo
sbb
mov
xchg
xchg
pop
lods
stos
xor
inc
pop
add
push
leave
or
imul
andb
xchg
vpsrld
dec
dec
inc
lahf
call
pop
jecxz
jg
test
aas
jge
fwait
dec
insl
fmulp
sbb
std
outsb
mov
mov
xor
or
pusha
mov
scas
fimuls
outsl
scas
jle
dec
js
sbb
mov
dec
jbe
sbb
out
in
xor
mov
dec
mov
ret
or
clc
pop
divl
sbb
mov
jg
dec
mov
jp
jg
mov
in
mov
imul
call
jbe
push
ljmp
sbb
data16
mov
fwait
in
gs
jecxz
shrb
xlat
or
fisttpl
rcrl
xchg
mov
mov
push
fisubl
jmp
pop
mov
in
adc
shl
in
add
add
ljmp
sub
sarl
xchg
adc
adc
pop
out
inc
movsl
cmc
mov
outsb
mov
lds
mov
or
jmp
adc
filds
jmp
int
shlb
mov
and
inc
test
pop
fdivrl
icebp
mov
pop
inc
outsb
xor
jae
adc
mov
stc
in
adcb
add
mov
jl
add
sti
sbb
add
jmp
ja
shl
ss
add
pop
jnp
sbbb
push
jl
sbb
test
xor
std
add
test
and
lahf
dec
ffree
push
sbb
in
pop
sti
es
sahf
pop
mov
outsl
nop
jecxz
adc
pop
cmp
lock
mov
fidivl
sbb
cs
mov
rcr
je
gs
lret
mov
int
popl
mov
inc
out
stos
or
cmp
mov
jnp
or
dec
testl
sbb
dec
xor
aaa
nop
es
cld
push
mov
jg
jno
push
xor
mov
cli
jae
jg
in
cmp
jl
jo
jno
test
cmpsb
mov
aam
cmp
dec
mov
cmp
cmp
add
jns
sub
inc
test
lahf
test
stc
ds
sarl
mov
xor
mov
mov
rol
jbe
es
mov
sarb
mov
outsl
test
lea
and
or
int3
daa
addb
jl
mov
bound
mov
mov
leave
or
or
idivl
add
jae
jnp
xchg
cmp
pop
lcall
jle
xor
aaa
pop
mov
nop
dec
dec
jo
mov
roll
sub
jo
movsl
mov
enter
cltd
aam
sub
adcl
inc
push
mov
inc
fildll
push
and
adc
jmp
inc
lret
in
arpl
inc
sbb
mov
push
mov
bound
jmp
pop
xor
lods
jg
add
sub
xchg
mov
add
cld
in
adc
fildl
push
faddl
lock
scas
jnp
xlat
popf
je
clc
lock
call
lcall
cmp
jns
enter
lret
je
shll
push
in
pop
mov
gs
mov
pop
sbb
cmp
jns
push
mov
scas
incl
daa
stos
jbe
lret
sbb
leave
imul
clc
sbb
fsubrs
jp
fiaddl
jl
insl
subb
testl
in
inc
ljmp
inc
sarl
xchg
insl
fmull
loope
xor
aam
add
icebp
cmp
mov
cltd
xchg
or
test
push
lods
stc
xchg
lahf
arpl
push
or
shll
cltd
xchg
xchg
js
lahf
fimull
jne
notb
test
xor
stc
jle
mov
xorl
dec
roll
add
jmp
pop
cmp
or
fs
mov
popf
dec
cmp
test
xchg
mov
ret
cld
dec
sahf
add
std
push
or
fstps
pop
out
mov
ret
xchg
lds
ret
loope
pusha
sub
sub
dec
popa
or
call
aam
icebp
cmp
jns
stos
cmp
add
inc
cltd
ja
outsb
loope
and
push
xor
or
test
jmp
test
inc
xor
out
cmp
push
inc
dec
insb
pop
xchg
cmp
in
sarb
stc
incl
je
mov
movsb
aas
jecxz
sub
or
mov
push
pop
sbb
mov
addr16
int3
cmp
fs
mov
jo
dec
mull
cmp
xlat
inc
mov
cmp
lahf
sub
arpl
inc
and
push
aad
js
mov
jns
pop
cmpsb
arpl
inc
int
mov
in
sub
jne
outsl
inc
push
jne
shll
and
lahf
inc
loop
or
ds
mov
mov
ja
push
test
test
sbb
mov
cld
xor
test
das
cltd
fisubrl
pusha
or
add
imul
xor
or
je
int
cmp
movsl
jmp
sub
test
in
faddl
clc
adc
mov
sar
int3
cmp
mov
mov
or
sbb
mov
mov
test
xor
test
pop
mov
shlb
or
dec
inc
push
in
xchg
lods
pop
addr16
vcomisd
cmpsl
sub
inc
mov
loop
addr16
je
sbb
push
fmulp
jne
mov
int
jbe
fmul
ljmp
scas
push
je
stc
repz
loopne
jnp
mov
stc
sbb
jae
insb
jl
int
lods
out
ja
adc
lcall
test
add
sub
pop
xor
push
or
cmp
adc
in
imulb
cmp
cltd
cmp
js
jo
leave
add
adc
fistpll
out
cmp
add
jne
push
aaa
dec
jmp
jne
in
fwait
ret
pop
push
xchg
jb
push
sbb
fsubs
mov
das
sbb
mov
inc
xchg
push
pusha
pop
outsb
mov
movsl
das
enter
dec
or
shll
in
aaa
repnz
hlt
xchg
push
vpsrld
stos
push
or
sbb
cmp
sub
jp
sti
rcrb
outsb
jg
lods
imul
call
aad
and
mov
inc
or
or
outsb
icebp
cmp
mov
cwtl
sub
pop
es
in
jb
dec
mov
leave
add
in
daa
inc
inc
mov
jae
je
stos
add
fcomps
dec
shrl
pop
dec
push
adc
jb
js
pop
mov
pushl
sti
or
mov
in
sub
sub
hlt
test
out
das
mov
or
push
sbb
mov
popf
rcrl
icebp
add
or
or
arpl
sub
mov
jecxz
testl
ss
addb
adc
cmpsb
cld
fldl
clc
and
out
sbb
sub
mov
test
in
mov
out
imul
shll
js
jmp
out
mov
mov
jl
scas
and
neg
mov
jae
dec
sahf
inc
aaa
and
and
xchg
and
sbb
or
cmpsl
hlt
stos
cmpl
pop
xor
stc
add
ret
out
lods
addr16
sub
mov
ficoms
repnz
fistl
lcall
sbb
hlt
aad
out
fdivrl
mov
sbb
and
fstpt
jb
mov
or
in
mov
sub
xchg
test
in
int3
call
cmp
push
add
cmp
rclb
push
push
mov
pop
inc
scas
lret
lret
add
pop
cmp
pop
xor
je
jo
cmp
push
adc
jl
aaa
rorl
pop
jmp
stos
xchg
outsl
mov
aam
mov
push
ja
enter
dec
outsl
mov
xor
and
pop
push
daa
xor
sub
imul
inc
and
push
sbb
mov
pop
inc
dec
xchg
clc
xor
mov
iret
frstor
xlat
push
and
add
repnz
imul
adc
dec
cld
mov
loope
arpl
stos
mov
jbe
dec
cmp
jl
xchg
xchg
xchg
xorb
aas
lds
rclb
push
and
ret
jb
xor
ja
dec
test
adc
lods
xor
pop
mov
jno
adc
sub
loope
lret
push
shrb
mov
cmc
mov
in
add
popa
pop
and
cmp
adc
jge
jl
popf
xor
pop
mov
cli
pop
add
into
mov
adc
in
pushf
jns
mov
aam
pop
jle
enter
imul
dec
sbb
cmp
repnz
sahf
out
jno
out
test
loopne
lret
mov
out
xor
xchg
rolb
data16
fnstenv
vpavgb
dec
negl
daa
es
xlat
loopne
add
mov
push
dec
mov
clc
lcall
xor
aas
inc
aas
sub
aam
xor
pop
push
imul
and
andl
rol
mov
dec
cmp
ja
shlb
and
jbe
lahf
xchg
push
gs
int3
and
stos
sbb
lahf
outsb
lahf
fisubrl
inc
jne
pop
mov
add
aam
sbb
xchg
mov
shlb
pop
jb
mov
dec
pop
hlt
fcoms
push
and
jmp
divb
movnti
imul
dec
push
and
out
xchg
xchg
mov
int
inc
adc
aam
add
pop
aas
orl
mov
nop
in
push
mov
arpl
mov
lahf
iret
adc
mov
sub
add
leave
and
mov
jecxz
test
lock
fisubrs
pusha
xor
sbb
xor
scas
sub
sbb
mov
out
aaa
shl
ja
and
es
in
lret
mov
std
push
repnz
adc
repnz
outsl
decl
jo
imul
in
lret
popa
and
rorb
dec
out
mov
xchg
mov
xlat
mov
dec
outsl
mov
jmp
lret
loopne
mov
sbb
mov
mov
push
sub
out
pop
mov
in
add
push
int
rcrb
fdivrs
in
std
ds
lods
mov
repz
cmovnp
mov
jae
fisubrs
pushf
test
adc
add
jb
push
add
add
add
pusha
or
je
call
pop
add
cmpb
jne
popa
jmp
fldt
cmp
add
pop
and
xor
mov
add
cmp
jne
movzwl
add
mov
add
cmp
je
sub
jmp
mov
mov
add
mov
add
jmp
mov
mov
push
push
call
call
pop
sub
mov
sub
mov
movb
popa
jmp
insb
sbb
adc
test
pusha
xor
mov
shr
je
pop
cs
or
sbb
adc
test
pusha
xor
mov
shr
je
pop
cs
or
sbb
adc
test
pusha
xor
mov
shr
je
pop
cs
or
sbb
and
jl
sub
mov
mov
inc
mov
inc
mov
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
mov
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
mov
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
mov
jmp
sub
mov
popa
ret
jmp
jmp
add
out
ljmp
cwtl
loope
mov
jg
xchg
add
push
sti
rclb
imul
cli
mov
out
adc
mov
ljmp
sbb
shrb
stos
nop
add
mov
mov
pop
ret
enter
out
mov
in
idivl
add
or
push
adc
adc
jae
jb
jo
fs
push
stc
sti
jg
hlt
inc
iret
and
dec
js
mov
mov
fistpll
pop
or
mov
in
cmp
inc
pop
add
push
mov
mov
ret
aam
add
add
call
dec
mov
and
mov
dec
push
add
call
lcall
or
aad
jmp
mov
add
fsubr
add
ljmp
inc
dec
fmuls
fmuls
inc
mov
or
xor
or
cmpl
inc
adc
loope
fsubl
mov
inc
add
ja
cmp
pop
or
movl
mov
adc
mov
push
jecxz
test
jne
mov
mov
mov
rcl
stc
ja
pusha
scas
ret
inc
inc
movsb
dec
mov
stc
inc
rcll
mov
aam
inc
cmp
pop
pop
ja
sub
addr16
jmp
adc
jne
sbb
push
sarb
scas
sbb
mov
pop
int3
cmpsb
dec
sbb
add
xor
add
divb
jo
int3
daa
mov
sbb
push
test
cmpsb
fdivrs
push
call
fcoms
ret
push
testb
add
add
pcmpeqw
mov
rol
xor
and
rorl
roll
cli
add
push
or
mov
add
mov
cmp
je
fstpl
add
adc
movb
aaa
jg,pt
aaa
sub
mov
lret
push
call
movsl
arpl
jmp
jp
fistpll
and
inc
out
lea
add
dec
cmpl
add
out
add
js
hlt
lret
cmp
pop
je
test
jge
mov
popa
shlb
add
out
mov
jl
mov
andb
fimull
or
sub
fadds
pop
test
je
mov
xor
dec
cmp
jle
sub
push
pop
pop
pop
pop
mov
pop
mov
push
add
jne
pushf
adc
and
jmp
cmpb
je
test
xor
add
jbe
add
dec
adc
inc
popl
pop
insl
add
jge
fsubs
clc
int
loope
inc
int3
jge
jae
fidivs
pop
or
dec
cld
inc
rep
jmp
lret
pop
cltd
insl
adc
or
dec
shll
or
push
shl
add
pop
sub
fildl
mov
cmp
arpl
or
ja
shr
repnz
and
or
or
jmp
ret
or
adc
or
dec
and
adc
pop
lock
lea
jb
or
shlb
stos
and
clc
out
lea
adc
cmpb
mov
stos
cmp
popa
shll
mov
decb
inc
dec
add
mov
mov
icebp
sub
add
cmp
pop
push
gs
ss
loop
jmp
orb
dec
push
adc
add
hlt
shl
push
mov
es
icebp
mov
jmp
les
orb
sbb
inc
push
les
jbe
shrl
cs
jg
mov
jle
daa
fldl
mov
lret
xor
addb
jbe
xchg
sqrtps
int3
inc
dec
jne
or
mov
push
dec
in
in
gs
push
xchg
xchg
push
repnz
roll
movsl
sub
jne
in
sub
mov
or
fmul
in
sbb
mov
mov
repz
xchg
out
dec
lods
fcos
test
ja
pusha
xor
adc
shrb
adc
loope
js
movsb
sub
in
seto
cltd
or
jle
xor
test
xor
jne
mov
aas
fisttpll
xchg
xor
loop
in
xchg
mov
aas
jmp
inc
movsb
sub
mov
les
mov
stos
stos
mov
adc
cmpsl
pop
test
pop
sub
push
aad
jle
lahf
mov
inc
and
adc
mov
cmp
mov
repz
inc
cmp
and
orl
jo
xchg
mov
into
popa
mov
bound
addr16
fiaddl
shrb
add
mov
jge
ficoms
stc
aas
and
pop
pop
add
sbb
jno
add
mov
mov
mov
push
cld
outsb
add
or
or
das
inc
fistpll
push
xor
add
sbb
push
mov
dec
cli
jb
test
pop
push
dec
add
xchg
xor
push
or
push
ret
pop
les
mov
add
pop
sbb
push
rcr
mov
adc
jb
fistpl
xor
and
xchg
rorb
push
push
and
jmp
push
daa
add
arpl
add
xor
adc
pop
xor
out
addb
imul
mov
pop
inc
push
add
sbb
mov
lock
cmp
and
popa
test
pop
sbb
jp
and
pop
loopne
push
ljmp
sbb
mov
adc
add
lock
pusha
cmpsl
clc
arpl
aad
adc
dec
icebp
daa
add
ret
mov
mov
popa
test
add
xchg
add
dec
testb
adc
adc
xor
inc
xchg
cltd
mov
stc
xchg
je
pop
add
gs
dec
lret
loop
pop
in
add
sub
mov
in
xchg
mov
add
mov
inc
xor
sub
mov
ret
loop
or
xchg
mov
jp
push
sbb
adcb
test
into
hlt
cmpsl
add
flds
jno
add
lahf
hlt
xor
push
jge
add
sub
dec
sarb
fdivp
cmpsl
add
popa
cmp
movsb
je
push
test
push
sti
stos
pop
mov
inc
inc
add
cmp
shll
in
add
push
push
cld
flds
sbb
xchg
xchg
shlb
subb
out
nop
add
jg
jno
movsb
lret
test
pop
repnz
add
lds
rorl
mov
sarb
push
je
icebp
clc
dec
push
sbb
and
test
sub
fcmovnu
cmp
repz
or
xor
cmovp
in
movsl
adc
xchg
cmp
add
jg
rclb
and
cmp
imul
test
mov
mov
rcll
cmpl
inc
sub
int3
jo
jnp
push
pop
cmp
clc
cmp
sbb
bound
clc
xchg
mov
add
hlt
imul
das
or
mov
pop
mov
xor
fwait
mov
adc
ror
and
xlat
or
in
pop
mov
sub
scas
incb
add
push
inc
lds
rcl
dec
adc
lock
jge
xor
xchg
xor
jno
pop
mov
enter
jae
add
mov
add
fwait
sbb
in
mov
sbb
inc
xor
or
sti
sub
mov
pop
add
lahf
scas
push
xor
sub
inc
pop
aaa
or
push
les
dec
mov
test
xchg
mov
sarb
out
push
test
mov
add
xchg
andl
jg
sub
in
pop
test
arpl
push
jg
pusha
out
mov
sti
stos
xchg
mov
outsb
mov
nop
xor
mov
and
xor
jo
loopne
add
shrl
cmp
pop
add
ficoml
sbb
lods
ficoms
inc
pop
in
add
or
les
and
int3
ljmp
push
jle
add
dec
sub
out
ret
dec
fs
data16
push
push
je
ficomps
xchg
sbbb
mov
ds
cmp
cmp
xor
jns
sbb
add
bound
and
mov
push
adc
rclb
fcmovne
mov
shlb
xchg
add
cmc
pop
ja
insl
xchg
decl
jb
mov
mov
lea
or
mov
movlps
jg
adc
sbb
adc
rcrb
jl
fcmovnb
lods
sbb
cmp
aas
sbb
inc
loop
mov
sbb
fldl
dec
into
jp
jmp
or
inc
xabort
xor
sub
pop
cmp
sub
and
aam
in
mov
repz
es
imul
jecxz
std
push
les
pusha
jmp
test
sbb
xor
dec
dec
or
cld
aam
or
aad
add
pop
shl
pop
push
or
aad
mov
sub
sbb
cwtl
mov
enter
sbbb
jle
push
inc
push
sti
lock
or
stos
pop
loopne
add
jle
test
addb
adc
add
call
sbb
int3
mov
ror
pop
cmp
dec
and
adc
pop
js
inc
out
xor
xor
or
insb
push
jmp
mov
push
pushf
test
cmp
pop
rolb
add
in
add
mov
les
push
int
inc
call
or
jmp
mov
and
and
andb
addb
adcb
push
jmp
add
mov
pop
pop
aad
fildl
ss
mov
jmp
jne
add
inc
nop
and
dec
aam
pop
sahf
arpl
sub
mov
sub
mov
ficoms
out
dec
fdivrl
dec
mov
xor
mov
xor
cmp
rcl
test
add
mov
insb
faddl
cld
jle
xchg
pushf
aas
dec
mov
dec
sbb
push
add
ljmp
and
test
xchg
cltd
xchg
outsl
push
or
adc
dec
roll
scas
add
int3
sub
pop
and
xchg
add
xchg
jb
stc
out
std
add
and
jnp
jmp
xchg
enter
rolb
orl
xor
xchg
cmpb
test
iret
addb
push
xor
arpl
adc
lmsw
sbb
out
dec
adc
and
lods
mov
mov
pop
sub
scas
lcall
add
push
or
inc
add
mov
xorl
fnsave
orb
or
lods
xor
bound
pextrw
mov
mov
xor
int3
lret
sbbb
add
add
mov
addb
shl
xor
pushf
adc
mov
ret
cltd
mov
add
push
nop
outsb
dec
sbb
repnz
dec
add
lcall
adc
xchg
add
pop
mov
sarl
adc
mov
xlat
inc
repnz
scas
hlt
cmpl
pop
or
addb
jecxz
data16
or
sbb
movb
or
pusha
xchg
xchg
mov
push
pushl
sbb
scas
es
add
cmp
xchg
inc
lds
or
jne
xchg
push
dec
aaa
je
add
enter
xor
add
push
or
rcll
sub
inc
loop
cmp
js
test
mov
mov
adc
std
mov
dec
cmpsb
iret
cmc
sbb
addr16
dec
andb
mov
add
xor
adc
sbb
jns
decl
test
faddl
mov
xor
sbb
rcll
add
popa
subb
lret
std
xchg
cmp
out
popa
fiadds
ja
sub
cmpsb
outsb
stos
adc
inc
inc
mov
and
loopne
sbb
cmp
or
push
in
xor
inc
leave
add
pop
xor
mov
mov
shlb
inc
js
ljmp
loope
rcrl
sahf
xchg
cmpsl
in
ret
cmp
popf
arpl
mov
jmp
clc
mov
int
imul
mov
mov
or
sbb
dec
xor
js
or
inc
pusha
push
add
rolb
les
stos
add
push
repz
addl
fadd
roll
xchg
clc
mov
pop
iret
inc
pop
in
mov
popa
sbb
mov
push
pusha
loop
jmp
nop
jl
mov
xchg
js,pn
jg
cmc
sbb
andl
push
out
mov
inc
int3
rolb
mov
movsb
adc
xor
aaa
out
les
loope
shlb
adc
pop
rcrb
push
push
mov
and
and
mov
mov
or
stos
mov
sbb
sbb
sub
mov
or
dec
les
pop
sub
popl
loopne
mov
cld
xor
pop
dec
add
sarl
and
jbe
sbb
inc
pop
jo
inc
cmpb
jnp
cwtl
push
xchg
cmp
push
xor
add
fs
les
dec
and
add
push
adc
jp
rcrl
popa
or
sbb
or
push
sub
add
jecxz
rolb
adc
and
into
and
adc
lahf
subb
mov
xchg
push
add
and
loop
mov
push
add
inc
les
out
add
push
add
add
in
clc
shll
mov
aad
dec
add
sub
ljmp
xchg
ja
or
jle
xor
pop
add
xchg
or
add
xchg
sbb
push
add
mov
adc
mov
clc
mov
fimuls
fadds
test
scas
add
outsb
jns
out
cmp
out
ljmp
mov
xlat
negb
test
out
and
pop
sub
xchg
fldcw
jns
add
rcrl
int3
push
mov
or
repnz
rolb
lret
hlt
in
ret
pop
cmp
jge
or
jmp
sahf
rcrl
cmp
fimull
leave
pop
dec
aam
out
es
cmp
pop
cs
mov
mov
hlt
mov
and
lret
loop
loope
pop
divb
pop
xchg
mov
jbe
xor
mov
cwtl
cs
divl
xchg
push
xor
jns
add
inc
dec
xchg
inc
jnp
fstpt
xchg
push
icebp
in
jo
add
clc
add
adc
sub
mov
lock
jmp
inc
out
push
mov
movsl
xor
ret
or
mov
mov
xorl
mov
das
leave
mov
pop
hlt
iret
add
addl
xchg
adc
std
cmp
cmovnp
mov
nop
clc
add
mov
js
sub
test
pop
add
ret
mov
mov
lock
push
inc
std
mov
add
add
mov
or
xchg
dec
stos
adc
bound
testb
es
adc
addr16
xor
outsl
add
sbb
outsb
fildl
je
ret
lret
adcl
inc
mov
add
popa
lahf
cmpsb
in
popf
mov
test
stos
sahf
push
repz
aas
jmp
insb
xor
shlb
xchg
dec
scas
mov
in
push
outsb
repz
xor
add
xchg
enter
je
add
call
cmp
loopne
pusha
fiaddl
fisttps
pop
andb
lea
rorl
loope
mov
inc
dec
mov
sub
pop
pop
inc
cmc
popl
lcall
xchg
pusha
inc
and
testb
push
out
xchg
add
icebp
dec
nop
aam
pop
or
ror
scas
or
call
das
add
and
pop
xchg
enter
cmc
xor
movsb
js
and
xchg
std
mov
ret
or
add
inc
je
push
push
xor
addl
out
mov
pop
orl
rcrl
add
xchg
ljmp
movb
jne
push
ror
mov
lock
xchg
add
add
jne
pop
jo
inc
clc
mov
dec
mov
hlt
in
xor
dec
mov
push
mov
jo
jecxz
xorb
sbb
or
or
sbb
hlt
sbb
and
cmp
add
inc
cmc
or
imul
cs
or
int
sub
in
sbb
dec
lds
pop
xor
mov
enter
in
sbb
int3
xlat
mov
pop
adc
adc
rcll
int3
add
cmpb
repz
add
mov
hlt
addb
sub
test
fwait
js
dec
add
bound
sbb
leave
insb
adc
push
adc
add
push
aas
xor
nop
mov
mov
add
push
movsb
xor
fucomip
mov
jbe
cmp
add
pop
inc
sbb
pop
cmp
xchg
jg
xchg
out
cwtl
mov
mov
push
add
sub
push
adc
into
nop
mov
test
add
mov
inc
push
cmp
jne
xor
pop
rcr
in
repz
and
ret
psrad
std
pop
fsub
lcall
or
cmpsl
scas
out
pop
lock
subl
cwtl
sbb
mov
or
fisubl
adc
xchg
sbb
pushf
sub
cmp
test
or
nop
adc
push
xchg
nop
out
fsubrs
enter
repz
dec
cwtl
and
lock
test
xchg
cmpsb
loopne
xchg
daa
aam
and
pop
movsl
pop
pop
push
pop
inc
mov
sbb
or
shlb
mov
jl
nop
mov
pop
xchg
dec
int
test
mov
xorb
in
or
les
lea
mov
dec
xlat
jge
jno
and
pop
xor
fisttpl
cmpb
mov
push
test
aad
dec
test
push
repz
xchg
or
fwait
jl
or
xor
fsub
mov
pop
test
int3
test
imul
pop
in
call
mov
hlt
std
andb
in
data16
push
dec
dec
jp
pusha
adc
cmp
out
loop
adc
xor
pushf
or
testb
sbb
sbb
jbe
pop
pop
mov
jmp
add
mov
cwtl
pusha
mov
dec
xor
rorl
dec
push
fdivrl
shlb
push
mov
push
sbb
mov
push
push
subb
pop
sub
cltd
jo
dec
sbb
loopne
pop
fs
xor
aad
sbb
pushf
mov
sbb
mov
inc
sbb
dec
add
movsl
push
xchg
mov
dec
idivb
or
push
addl
mov
jb
call
and
adc
rcr
bound
int3
test
sbb
pop
rolb
xor
mov
pop
movsb
mov
pop
or
outsb
or
shll
xchg
mov
push
dec
pop
inc
aad
xor
hlt
xorb
push
xor
fdivs
and
enter
dec
mov
xor
sbb
test
xor
adc
jmp
add
cmc
js
test
xchg
add
sbb
insb
jns
movsb
scas
and
test
and
dec
aaa
push
sub
out
cmp
jnp
decl
xchg
and
lock
icebp
add
loope
fisttpl
cmp
pop
mov
pusha
sbb
cmc
jo
leave
xor
and
scas
or
dec
dec
and
sahf
push
lret
jo
pusha
or
dec
dec
test
mov
sahf
adc
xlat
push
mov
call
xor
andl
add
sbb
cmp
out
add
xor
adcb
rol
les
rol
sub
std
jae
jne
mov
cld
dec
or
mov
dec
mov
lahf
sbb
test
outsb
ret
sub
pop
in
ljmp
cmp
dec
dec
scas
inc
stc
lods
mov
add
xchg
popa
dec
mov
rorb
repnz
add
insl
mov
and
out
or
cmp
mov
jae
test
cs
cmp
icebp
dec
cmp
add
repz
into
test
add
sub
mov
and
jo
dec
and
xchg
jb
sub
incl
push
in
pusha
lock
daa
add
mov
cwtl
pop
shll
add
adc
push
add
movb
js
int3
es
or
inc
add
pop
fdiv
push
mov
jns
xor
add
test
mov
pop
sub
lret
stc
test
inc
ret
scas
jg
inc
pop
les
pop
cltd
bound
adc
imul
bound
jmp
ficoms
std
push
in
aas
lret
xchg
subl
out
std
xor
adc
xchg
sbb
mov
push
dec
and
push
mov
jno
and
add
push
cwtl
add
les
push
js
pop
cmp
dec
in
fdivrs
ret
push
or
ficoml
fadds
dec
incb
pop
shll
add
xor
addb
pop
mov
dec
test
jp
shlb
jno
sbb
push
divb
or
inc
mov
xor
stos
sub
dec
shrl
mov
adc
mov
loope
rorb
xorl
add
and
push
dec
rorb
or
scas
pop
or
popl
sbb
test
sbb
enter
addr16
mov
test
lahf
addb
inc
insl
out
jne
mov
pop
mov
jecxz
sub
add
or
dec
movb
fildl
cltd
xlat
mov
shlb
or
hlt
adc
push
sub
xorl
jo
addl
pop
mov
out
push
call
dec
into
add
lods
aam
cmp
and
cmp
mov
mov
cmp
inc
clc
mov
cwtl
inc
adc
out
sub
fdivr
inc
out
into
sbb
imul
dec
les
aam
xlat
mov
inc
cmc
inc
rclb
xor
sbb
pop
cmp
dec
lds
lret
push
shlb
cmpb
in
push
mov
cltd
mov
les
mov
add
sbb
jmp
add
add
jo
add
pop
mov
insl
mov
xchg
xor
lock
ljmp
xor
jp
pop
andl
jnp
loop
inc
enter
fs
add
push
or
in
and
pop
add
clc
out
or
adc
loope
pop
jbe
iret
shr
pop
fisttpl
inc
dec
cmp
leave
addl
push
mov
insl
dec
add
or
jno
jecxz
int3
xor
push
rol
mov
pop
xor
mov
or
cmpsl
dec
xchg
or
fiadds
xlat
pop
dec
add
lret
cmp
inc
xor
or
inc
inc
dec
mov
sub
cmp
push
out
lds
adc
xchg
add
inc
sbb
mov
push
js
cld
adc
sub
loopne
pop
add
out
loop
in
or
test
and
mov
in
push
pusha
xchg
es
or
mov
lahf
sarl
fiadds
sub
mov
mov
xchg
push
orps
cmpsl
imul
cmp
call
stos
adc
dec
orl
insl
ret
xchg
sbb
fmuls
ret
cmc
and
cwtl
xlat
sub
add
jp
mov
movsb
mov
ds
bound
scas
mov
jne
roll
mov
mov
sub
scas
cmpsl
xchg
les
add
jmp
mov
sub
pop
xchg
gs
push
add
xor
xchg
inc
ljmp
rolb
add
mov
pop
sbb
daa
push
incl
xchg
test
test
mov
addr16
inc
fwait
and
xchg
mov
bound
and
sbb
in
add
fs
push
dec
pop
aam
pop
out
cmp
pop
xor
xchg
cmp
xchg
addr16
add
test
and
pop
loopne
addb
push
mov
call
fwait
and
in
xorl
mov
or
xchg
dec
mov
fstl
and
add
cwtl
mov
sbb
fwait
mov
in
cmpsb
push
pavgb
jp
lea
mov
clc
add
sbb
cmc
subl
fildl
pop
dec
inc
out
in
int3
outsb
inc
js
pop
jl
add
mov
les
and
xchg
or
push
test
mov
clc
shll
mov
add
adc
xor
loop
jl
adc
fcompl
dec
or
aaa
push
iret
roll
clc
add
mov
aas
jo
dec
xor
cwtl
xchg
inc
push
out
pusha
inc
mov
adc
sub
int3
in
sarl
les
call
add
xchg
adc
add
ja
sarb
cmp
and
sub
fimuls
sub
int3
mov
push
inc
xchg
leave
addb
mov
xor
mov
pop
call
in
scas
push
mov
imul
mov
pushf
sarl
stos
cmp
andb
mov
cmp
cmp
orb
mov
lcall
aam
jg
and
gs
mov
adc
andb
sub
xchg
cmp
cltd
cld
dec
enter
aam
jmp
or
mov
enter
aas
js
lock
mov
pop
rolb
or
push
and
inc
mov
xor
fcoms
xor
cwtl
add
jnp
and
aad
andb
add
ljmp
fmuls
filds
jl
mov
jnp
dec
repnz
mov
popf
imul
pop
push
sub
nop
insl
add
sub
sbb
pushf
add
outsl
cmp
mov
push
push
push
clc
js
jle
or
jecxz
cli
sub
xor
movsl
shlb
inc
mov
filds
mov
aad
adc
cld
loopne
ror
sbb
add
ds
xor
pop
aas
pop
mov
out
and
or
rcl
loopne
sbb
loop
andb
push
or
dec
cmpsb
loopne
hlt
cwtl
cmp
push
addb
aad
imul
aas
xor
nop
mov
adc
and
xchg
sbbb
add
shr
lahf
push
push
insb
xor
int3
test
xorb
add
lock
les
iret
fldl
test
xchg
insb
lea
mov
fmuls
adcb
mov
add
jmp
mov
push
dec
popl
fs
or
dec
or
inc
dec
sti
sbb
sbb
je
call
aas
adc
dec
clc
push
or
sbb
jmp
fsubl
xchg
sub
add
push
dec
fsub
out
addl
daa
pop
xor
push
push
popa
cld
mov
push
aam
dec
add
push
decl
loopne
loop
adc
cwtl
xchg
ja
test
jbe
fsubl
cmpsl
mov
add
andb
or
add
jo
mov
test
or
sub
call
adc
add
les
add
xor
fcoml
and
dec
add
push
ds
push
lahf
jl
leave
xor
cmc
push
bound
adc
inc
or
leave
loope
push
movb
xchg
sbb
loopne
xor
jecxz
mov
cmpb
adc
inc
scas
bound
or
andb
pop
add
gs
jge
jo
jl
push
shlb
movb
xchg
inc
mov
shlb
mov
cmpsb
mov
scas
popa
cmp
and
sbbb
call
jle
cmp
adcl
mov
and
pop
sbb
jbe
std
xchg
or
and
ds
addb
test
add
inc
cwtl
fwait
mov
sub
enter
loopne
rcrb
mov
mov
mov
dec
add
jge
jmp
and
or
xchg
loopne
cmpb
popf
data16
pop
pop
sti
loopne
xchg
mov
jbe
adcl
inc
or
dec
nop
add
mov
or
clc
data16
fwait
sbb
or
sbb
loopne
add
inc
cs
pop
xchg
jns
adc
or
or
mov
adc
shll
push
sub
push
fwait
cmp
push
pop
and
push
and
sub
xchg
insb
or
gs
loopne
or
enter
add
cwtl
rcr
sbb
add
pop
push
das
push
push
lds
mov
pop
nop
xor
add
out
or
subl
pusha
push
adc
test
nop
mov
arpl
xor
test
sub
adc
sbb
jecxz
dec
lret
xor
js
dec
out
in
xor
sbb
xchg
cmp
rcrb
cwtl
push
push
aaa
mov
jle
mov
rcrb
mov
push
sbb
jecxz
enter
daa
sbb
dec
push
jae
into
test
add
jne
adc
add
jns
ds
xchg
aas
mov
mov
popf
add
addr16
xor
inc
adc
in
or
and
xor
jo
add
sbb
pop
mov
xor
xchg
add
xchg
jecxz
shll
repnz
cmp
add
leave
cmpsl
adc
inc
mov
pop
and
dec
mov
int3
enter
add
repz
or
in
icebp
sbb
xor
addr16
repnz
add
and
stc
dec
test
subb
lea
push
mov
and
add
movsb
and
add
jge
js
sub
push
pop
aas
sbb
adc
xor
shl
pop
jl
mov
xlat
mov
pushf
xor
and
jb
xlat
lret
ror
shrb
ret
sub
inc
pop
xlat
jo
add
gs
icebp
shlb
and
inc
je
add
test
frstor
adc
mov
test
and
test
adc
into
and
cltd
pop
dec
bound
push
rcl
cmp
negb
shrb
outsb
add
xor
xchg
arpl
adc
jbe
test
mov
add
test
mov
popf
push
dec
push
hlt
jl
inc
mov
fdiv
fbld
sub
int
in
adc
pop
jo
ds
push
mov
add
lds
jbe
push
add
leave
or
xchg
mov
aam
test
pop
inc
xor
add
push
xchg
pop
xorl
or
aas
xchg
sub
in
adc
dec
lods
icebp
mov
mov
test
lahf
xchg
push
lods
adc
or
js
mov
in
mov
out
add
fldt
lock
xchg
and
orb
inc
out
clc
movsl
xchg
or
push
xor
nop
cmp
roll
xor
cmp
inc
mov
pusha
lahf
inc
mov
xor
mov
cmp
mov
sub
nop
dec
inc
jmp
lock
pop
enter
orl
sbb
inc
nop
sbbb
arpl
int3
mov
cmp
fisubs
and
out
mov
add
imul
mov
sbb
xchg
movsb
sub
mov
andb
sti
mov
fistpl
subb
and
testb
mov
xor
cmp
mov
push
pop
mov
add
lcall
insl
mov
shl
and
js
add
pop
test
call
or
adc
clc
loopne
scas
mov
mov
sbb
daa
in
push
add
xchg
xchg
incb
jno
sub
mov
mov
jp
add
jbe
aam
mov
xchg
adc
loopne
cwtl
add
xchg
mov
out
dec
mov
mov
lcall
push
add
adc
add
push
stos
gs
mov
or
jno
pop
clc
jns
sbb
adc
movsb
dec
add
jno
adc
stos
mov
js
add
add
xor
add
dec
fdiv
and
dec
fisttpl
and
shlb
or
xchg
add
das
add
mov
inc
cld
addr16
mov
cwtl
inc
push
add
pushf
shrb
jecxz
rorb
cmp
nop
lock
mov
and
sbb
rclb
xor
jle,pt
cmp
or
enter
mov
jp
jo
lock
pusha
loopne
test
and
cld
ja
mov
daa
jno
jmp
pushf
js
xor
adc
sub
sub
aaa
out
sbbb
mov
xor
xor
or
jg
jo
pop
inc
jnp
inc
les
in
mov
rolb
dec
push
push
cmp
out
in
js
and
daa
gs
clc
add
loope
adc
xor
sub
inc
test
stc
pop
lret
cmp
das
aam
sub
add
inc
addb
inc
xchg
mov
fsin
pop
add
int3
or
fadds
add
cmp
mov
scas
mov
out
dec
sub
aaa
cmp
add
fwait
lock
pop
mov
add
add
lss
imul
lds
leave
jb
in
icebp
push
xor
jge
shl
add
jae
cli
jp
ljmp
and
add
stc
push
mov
cli
lock
mov
dec
add
add
jae
adc
pop
in
test
outsl
xchg
and
and
push
gs
clc
fwait
add
mov
cmp
js
and
xor
push
xchg
or
aad
xchg
imul
jl
jmp
adc
fs
pop
add
xchg
mov
sbb
popf
mov
jmp
add
out
mov
xchg
xor
loopne
xchg
popl
jp
test
add
sbb
lret
hlt
jg
add
cmp
lock
mov
or
jae
add
xchg
xor
pop
sbb
add
mov
call
mov
adc
data16
mov
mov
xchg
cltd
in
mov
rclb
out
jmp
mov
xor
cltd
add
mov
sub
fmull
sbbb
add
fsub
pop
jge
dec
mov
pop
out
loopne
in
dec
loopne
test
stc
testb
sub
aaa
sbb
nop
pop
arpl
add
inc
andb
xor
jecxz
mov
daa
xchg
cld
xor
rol
enter
aas
test
dec
int3
imul
pushf
xor
and
mov
add
jbe
jbe
inc
jnp
pop
data16
clc
faddp
mov
pop
or
inc
mov
jl
mov
dec
mov
cwtl
xor
xchg
gs
cmp
jp
popf
test
jl
or
enter
flds
gs
ds
cmc
and
push
popa
xor
jge
subb
adc
push
sub
sti
sbb
push
test
mov
add
dec
jp
ja
cmp
mov
dec
mov
inc
cmp
push
orb
out
sub
rolb
scas
jg
and
sbb
xor
mov
fbstp
xchg
lods
adc
lcall
inc
iret
fcoml
data16
shll
or
add
mov
dec
or
inc
push
and
pop
inc
sbb
xchg
insl
loopne
movsl
or
cli
mov
fcoml
pop
dec
inc
ret
jg
mov
adc
shrb
loopne
push
jns
add
xor
xlat
mov
mov
roll
pmulhuw
mov
or
or
dec
mov
sub
adc
popf
in
fimuls
cmpsb
add
shrl
push
dec
movsb
adc
dec
mov
mov
lods
pop
mov
sub
movsl
cs
pop
mov
test
lret
inc
jp
outsl
clc
test
scas
ja
mov
adc
shlb
inc
cld
sub
sahf
mov
pop
xchg
pop
fwait
js
dec
or
mov
int3
add
push
add
mov
xor
and
lock
rolb
mov
adc
arpl
push
outsb
mov
fdivs
sbb
push
lret
mov
les
xor
addl
test
push
andl
sub
test
test
cs
pusha
adc
inc
in
add
adc
fidivl
jae
lret
and
mov
fst
je
cmpps
lock
fs
xchg
mov
jo
pop
stos
mov
sub
repnz
push
das
add
cmp
add
jne
adc
push
push
in
jg
ja
add
das
arpl
lret
mov
adc
mov
add
cmp
in
and
dec
lea
fstpt
scas
xchg
xchg
addl
xor
pop
test
ds
js
pushf
rol
outsl
sub
push
rcl
gs
mov
cli
xchg
scas
ud2
hlt
xor
and
pop
inc
sbb
pop
xor
mov
xchg
les
add
or
xor
fucomi
aam
std
hlt
add
or
or
inc
xchg
cmc
add
xor
pop
ficompl
xorb
das
ds
xchg
adc
ror
insb
dec
out
inc
test
adc
dec
call
jnp
xor
in
or
push
andb
dec
adc
inc
jns
lret
movsl
mov
jmp
push
adc
outsl
clc
lods
adc
in
lret
outsb
lahf
push
xchg
aas
sbbb
xchg
lea
aaa
stos
jae
push
mov
mov
scas
add
cld
mov
sub
loop
test
pop
add
pop
jl
mov
mov
mov
js
sub
pusha
loopne
inc
xor
js
imul
jns
add
lock
or
mov
pop
and
pop
adc
push
mov
jg
push
cltd
movsb
mov
in
or
jp
dec
cmp
xor
int3
aam
daa
int
pusha
arpl
sbbb
push
mov
cmp
sbb
popf
imul
jno
sbb
test
add
ja
xor
inc
push
jno
add
jmp
xlat
or
imul
push
jo
mov
push
dec
sbb
mov
mov
shrb
xor
xor
mov
sub
and
leave
or
sbb
pop
and
mov
pusha
aas
std
hlt
xchg
test
andb
fistpl
add
or
mov
add
and
mov
mov
movsb
dec
mov
mov
pop
xor
push
jbe
mov
and
and
test
mov
and
pop
push
js
ror
and
jp
add
pop
aaa
cmpsl
mov
jl
mov
outsl
fists
imul
cmpsl
sub
ret
jne
push
add
mov
add
mov
lret
shll
mov
sub
fistpl
pop
jmp
adc
orb
push
xor
rclb
es
sbbb
and
mov
pusha
add
push
test
xchg
cmp
andl
mull
in
out
jae
xor
mov
pop
add
loope
lcall
xlat
jnp
inc
cmpsl
pop
rorl
or
add
les
repnz
push
aas
lock
dec
sbbl
fsubl
fadds
or
adc
jecxz
push
lock
xchg
pushf
add
bound
jo
call
cmp
sub
divb
lcall
out
inc
or
push
dec
xlat
sbb
into
ror
shl
xchg
xlat
add
jbe
pop
push
mov
xchg
cmp
cld
inc
push
lods
and
mov
jp
add
stos
push
imul
mov
inc
mov
test
cld
and
inc
add
and
sbb
mov
mov
or
jno
ficomps
aaa
sbbl
or
jp
inc
or
xchg
test
fs
push
call
int3
adc
leave
mov
daa
sbb
add
mov
lock
mov
subl
icebp
dec
xchg
mov
adcb
sbb
sub
jg
adc
xor
fsubrs
faddl
and
sub
aam
bound
test
pop
or
imul
xchg
jmp
mov
cmc
dec
and
mov
push
jo
repz
pop
cmp
xchg
icebp
push
fisubl
insb
inc
add
lahf
mov
xorl
or
adc
adc
call
mov
mov
lea
xor
pop
stc
inc
or
rorb
or
cltd
jns
jns
sbb
push
jg
int3
repnz
add
cmp
outsb
add
rolb
sbb
dec
test
in
je
add
loopne
enter
mulb
lods
scas
cmp
jle
rsqrtps
je
popl
loope
fdivs
or
and
lock
jle
dec
push
les
nop
xor
ficomps
add
test
cmp
imul
inc
cmp
aas
fwait
adc
jnp
sbb
pop
enter
hlt
outsl
int3
enter
pop
inc
es
int3
stc
sub
lock
dec
mov
movntq
jb
stos
les
push
pusha
test
push
push
inc
cmp
divb
add
and
and
insl
notl
cmc
cmp
add
mov
or
int3
in
aam
loop
callw
hlt
sbb
xor
xor
popa
into
hlt
xchg
pusha
test
xchg
test
in
test
rcll
inc
test
repnz
stos
outsb
inc
or
pop
mov
cmp
pop
mov
aam
out
add
dec
xchg
je
adc
int3
ja
mov
test
jge
out
insb
mov
or
sbb
inc
cld
je
add
sub
cltd
ret
sub
push
rorb
pusha
mov
adc
nop
add
popf
out
insb
inc
pushf
pop
xchg
mov
adc
add
inc
pop
jl
adc
inc
clc
clc
mov
jmp
fmull
sub
or
dec
dec
sbb
ds
and
xchg
xor
scas
pop
loope
xchg
xor
cmpl
and
add
dec
fistl
sahf
test
ja
dec
fdivrs
pop
cmp
sahf
or
push
cli
mov
cwtl
outsl
jge
mov
arpl
fidivrl
mov
daa
stos
add
pop
cmp
std
mov
leave
test
loope
dec
sub
ds
pop
js
outsl
xchg
or
int
xchg
cmpsb
push
add
sbb
mov
or
stos
add
xor
mov
dec
test
enter
fsubrl
popl
stos
insl
decb
or
loopne
jne
adc
adc
push
mov
andb
int
mov
roll
xchg
les
and
xor
in
cmp
adc
dec
mov
push
ret
dec
cmp
jecxz
add
xchg
test
push
pusha
mov
add
sub
fstpl
test
mov
and
adc
leave
xchg
call
mov
lret
repnz
push
jne
sbb
mov
or
cmpsl
daa
pusha
pop
mov
mov
loop
loope
stos
dec
inc
cmc
test
fsubl
in
or
gs
sub
cmp
or
outsb
inc
sbb
add
fwait
mov
pop
xor
pop
and
test
fadds
stos
cmpsb
cmp
and
xor
cmpsl
xlat
xchg
jnp
test
adc
insb
in
inc
mov
sub
stos
adcl
pop
fistps
add
sub
test
pusha
sub
aas
das
xchg
pop
subb
orl
cmp
test
mov
imul
call
lahf
mov
xor
mov
pop
mov
push
mov
push
cwtl
aad
inc
add
int
mov
lods
repz
stos
decl
mov
jge
mov
jo
nop
mov
iret
jb
les
jnp
fnstsw
sbbl
add
or
sbb
jno
int
sub
xchg
popf
dec
adc
push
sub
jnp
icebp
mov
jo
dec
lock
nop
enter
add
mov
push
xchg
push
add
movsl
cmp
push
mov
mov
or
pop
int
xchg
pop
loopne
ljmp
es
loopne
xor
mov
adc
dec
push
add
loopne
insb
xchg
xchg
sub
dec
and
rcr
pop
sub
fistpll
pop
dec
add
push
inc
mov
or
ljmp
int3
mov
add
dec
inc
cltd
dec
push
inc
int3
test
leave
adc
mov
xchg
or
and
test
shlb
xor
mov
mov
hlt
test
sbb
push
int3
test
ljmp
mov
js
mov
xor
lock
xor
cmp
inc
ret
paddw
jecxz
pop
jno
cmova
xchg
mov
pop
push
sub
push
xor
add
xor
mov
ds
add
xchg
and
aam
xor
inc
out
dec
clc
push
and
dec
adc
das
push
mov
int3
dec
or
mov
daa
cmpsb
adc
bound
inc
adc
push
scas
fs
adc
sbbb
mov
and
and
and
push
outsl
ja
lods
and
movsb
inc
gs
ret
sbb
imul
pop
les
cmp
loop
and
in
or
sbb
call
adc
cmp
sbb
xorb
xorl
into
mov
or
sbb
test
sub
xlat
and
shlb
inc
or
out
sbb
sbb
pop
or
jmp
aaa
or
or
rorl
adc
add
fstl
or
jl
aam
add
iret
add
roll
adc
mov
out
fildl
sub
add
push
mov
xor
xchg
popa
inc
movsb
mov
xor
scas
jg
and
roll
mov
clc
mov
adc
mov
sbb
and
adc
nop
add
fisttps
and
and
loopne
lods
mov
out
stos
jno
and
shll
rcll
jno
int
add
add
repnz
jmp
or
inc
and
test
sarl
aam
test
sub
xorb
imul
lock
or
les
and
popa
test
mov
xchg
add
lods
les
data16
xor
or
jb
sbb
mov
sub
and
dec
push
and
cmp
adc
adc
dec
sbb
leave
in
add
or
push
xchg
add
lods
add
mov
inc
xchg
aas
fs
leave
add
sub
inc
or
movsb
mov
invd
xchg
in
or
lds
repnz
test
push
pop
les
lcall
mov
fimull
inc
adc
adcl
or
pop
int
pushf
add
cmp
out
pop
mov
iret
mov
sub
add
pop
and
mov
mov
lret
ret
sub
xchg
inc
or
push
mov
jmp
and
rorb
jg
lret
psubusb
and
add
lret
out
addb
arpl
and
out
inc
or
clc
inc
sbbl
cmp
pop
cmpb
push
xor
sbb
hlt
aam
cmp
sbb
adc
push
jmp
mov
loop
push
xchg
lock
ficompl
or
cltd
mov
add
or
inc
push
int3
inc
shll
mov
sbbl
and
cmp
ret
or
push
les
xor
dec
sub
or
xchg
add
in
mov
add
mov
mov
sbb
jb
sahf
in
add
push
dec
into
xorb
enter
dec
bound
outsl
gs
xchg
adc
arpl
push
pop
fisttpl
add
sbb
lret
jae
and
push
xchg
out
add
adc
push
fadds
sbb
insl
ljmp
or
out
xchg
test
adc
mov
add
in
rorb
jb
shll
in
jecxz
jecxz
jbe
loope
lock
fidivrl
jb
into
push
push
or
repnz
jo
notb
rolb
add
add
js
jns
fmulp
nop
xchg
xor
adcb
mov
add
setb
test
loope
mov
clc
test
leave
xchg
pop
fimuls
adcb
push
add
xchg
addr16
loope
and
add
int3
jp
add
sbb
push
addr16
jle
sysret
xlat
cmp
in
sbbb
sahf
movsl
cmp
cmp
inc
loop
and
pop
cwtl
jo
add
dec
and
das
pop
addl
negl
mov
xchg
insb
cmc
pop
aaa
push
in
push
pop
jne
mov
adc
mov
sbb
dec
outsb
clc
into
push
xor
jb
pop
cltd
aad
xlat
repz
pop
cmpb
lret
ds
cmp
xchg
fsubl
pushf
pusha
dec
cwtl
dec
cmc
pop
jmp
jne
mov
fistpl
or
fdivrs
mov
addr16
sub
loop
mov
loopne
decl
dec
xchg
sbb
or
addl
pop
push
fcompl
cmpsb
push
push
dec
xlat
add
std
sbb
jb
or
out
test
repnz
inc
or
aaa
test
or
jo
xchg
mov
adc
mov
les
hlt
push
cmp
pop
pop
test
fidivrs
sbb
ret
adc
shlb
lock
or
jp
add
push
cmp
add
sub
or
xor
addr16
sbb
jl
sub
add
cmp
pop
pop
pop
adc
arpl
mov
add
lock
cmpsb
cmp
mov
add
outsl
add
xchg
push
push
inc
add
inc
dec
cmp
push
push
mov
in
pop
push
mov
push
dec
pusha
adc
push
and
hlt
and
cmp
jo
jo
add
je
test
push
lods
add
movsl
pop
repz
test
jecxz
xor
pop
fs
xchg
nop
xor
das
xlat
adc
jge
add
bound
orb
pop
lcall
nop
sub
fs
sbb
test
xor
xchg
dec
jg
jo
add
rolb
jo
add
inc
add
popa
fwait
out
movb
push
add
jb
push
pop
insb
lea
cmpsb
cmp
push
or
pop
call
jl
mov
add
scas
cmc
jp
dec
pop
cmp
lock
shll
rcll
add
add
insl
mov
sbb
jo
es
add
push
test
mov
nop
xor
pop
sahf
mov
xchg
fldl
add
sub
cmp
mov
int3
sub
fistpl
jecxz
push
ljmp
add
lock
mov
in
jp
pushf
add
jnp
dec
orl
call
sbb
mov
dec
inc
test
or
mov
ds
mov
add
lock
or
imul
jle
test
fstpl
dec
lods
jo
subb
dec
test
sbbb
pop
mov
and
call
aas
pushf
push
lea
movsl
push
sti
insb
adc
push
mov
loopne
sbb
dec
in
xor
mov
cld
xlat
enter
inc
pusha
dec
cmp
mov
and
pusha
outsb
sub
push
addr16
clc
jecxz
addb
xchg
push
inc
sbb
or
xor
test
cmp
pop
lock
cmp
mov
rorl
inc
fs
incl
mov
rolb
insl
xor
push
js
loope
sub
add
and
xchg
imul
sbb
mov
andb
sub
sub
cmp
rolb
mov
pop
sub
sarl
inc
xor
loopne
add
test
fldl
mov
jge
xchg
push
test
loopne
sar
add
jecxz
bound
push
push
jmp
or
rorl
push
dec
mov
jg,pn
push
jle
call
leave
push
dec
clc
pusha
mov
inc
test
mov
push
leave
sbb
inc
insl
inc
test
add
push
subl
cltd
sub
stos
ss
out
mov
mov
xchg
int
inc
mov
xchg
loop
pop
adc
enter
movsb
fldt
mov
shrb
imul
inc
jo
sbb
inc
sub
pop
jo
dec
mov
and
xchg
or
push
shr
sbb
out
pop
imul
jns
sub
push
sbbl
sti
adcb
loopne
mov
sub
mov
add
dec
xchg
lahf
mov
in
or
mov
or
inc
xchg
arpl
popa
push
neg
jbe
sub
push
pop
andb
mov
lock
pop
xor
push
add
mov
add
stc
out
and
nop
or
dec
adc
push
mov
fisttpl
cld
adc
shr
imul
mov
int3
adc
sbb
scas
mov
test
dec
js
dec
call
and
imul
adc
push
loope
push
and
je
mov
or
mov
xchg
negl
sbb
test
hlt
outsl
add
lods
jle
in
inc
sub
mov
add
fidivrl
imul
xchg
or
push
add
and
sti
mov
flds
add
imul
xor
mov
je
jno
lret
pop
push
insb
xchg
lret
out
adc
loop
or
sub
adc
sbb
add
lock
mov
dec
or
push
xchg
loopne
lea
ds
dec
pop
aam
mov
pushf
js
imul
movsl
adc
inc
in
or
nop
loope
or
add
inc
lds
and
xor
or
test
ret
sbb
mov
push
jns
out
xor
movsl
icebp
mov
aaa
cs
inc
inc
or
pop
cmp
pop
aaa
add
mov
mov
push
mov
jl
jbe
push
scas
movsb
add
jo
inc
call
inc
stos
jle
push
add
xchg
cmp
icebp
sbb
loopne
jg
inc
clc
add
or
cmp
icebp
add
mov
xchg
icebp
xchg
rcrb
inc
xchg
or
add
cmp
push
push
repnz
and
mov
rorb
pusha
push
out
mov
lea
test
mov
call
pop
push
jo
test
xchg
lock
cmp
xchg
push
and
rcr
shll
push
mov
dec
and
cmpsl
jmp
xchg
sbb
mov
dec
sub
insb
xchg
and
sbb
test
and
dec
inc
lock
leave
sbb
or
test
xor
xchg
in
xchg
test
xchg
aam
lods
nopl
bound
outsb
loopne
arpl
cmp
xor
out
clc
cmp
mov
orl
int3
test
add
dec
jge
push
push
clc
pop
pop
jnp
imul
mov
and
add
dec
add
mov
jno
subl
fs
mov
fisubs
aaa
jge
lea
push
test
xchg
mov
push
pop
arpl
dec
cld
mov
and
ficoml
or
cmp
insl
or
xorb
cmc
or
push
adc
jle
pop
mov
jae
out
add
mov
addb
adc
addl
fsubrp
add
dec
jle
push
mov
insb
loopne
sbb
jp
and
xchg
faddl
pop
mov
insb
imul
aaa
pusha
and
cmp
fcmovbe
je
test
fs
in
outsb
lret
xchg
add
arpl
loope
stos
mov
imul
cwtl
popf
pusha
out
sbbb
repnz
jp
push
cwtl
xor
test
aaa
mov
mov
jo
fsubr
arpl
inc
sbb
adc
stos
dec
rolb
aas
out
pop
mov
inc
lock
inc
pop
fsts
or
ds
in
in
xchg
and
lock
cmp
xchg
test
xor
mov
outsl
jo
add
xor
cmc
loope
test
movsb
sbb
or
mov
xchg
mov
or
fs
inc
mov
mov
sub
fs
jp
add
mov
leave
jne
pusha
push
rorb
mov
in
push
dec
dec
mov
mov
add
xor
xchg
in
xchg
lock
pop
add
mov
sbb
add
pop
das
rcrl
push
inc
aam
xchg
sbb
and
mov
addb
fistpl
xchg
xor
xchg
jns
cmp
add
sbb
popl
test
jge
add
push
repnz
sbb
pop
dec
jo
or
push
pop
mov
mov
lahf
adc
adc
sub
les
sbb
leave
mov
fisubs
or
and
and
pushf
mov
and
test
adcl
sbb
mov
add
idivl
cmp
sbb
ror
test
xchg
js
adc
and
or
adc
pop
and
stos
sbb
mov
inc
pop
jo
add
and
push
sbb
cmc
or
mov
cmp
xchg
push
pushf
xchg
stos
push
pushf
push
jl
inc
push
lahf
decl
or
mov
push
call
mov
sub
pop
adc
inc
push
lods
inc
aaa
nop
xchg
cmp
loop
sbb
pop
stos
cmc
mov
pop
cmp
imul
arpl
cltd
or
loopne
xorb
push
dec
out
stc
pop
call
js
xor
and
loopne
add
xor
std
rcll
les
enter
xchg
mov
call
int
cmp
lods
sub
sub
movswl
or
dec
test
add
adcl
and
push
fwait
push
mov
cwtl
fstps
adcb
loop
stos
pop
subb
push
roll
mov
les
sbb
loop
mov
arpl
adc
push
cwtl
add
jb
std
add
insb
imul
aas
cwtl
addr16
or
lcall
lahf
add
popa
xor
leave
divl
enter
or
adc
adc
stos
sub
mov
sub
push
enter
loopne
push
ret
push
pop
dec
add
insl
sbb
test
push
testl
push
ret
jo
jo
pop
pop
add
hlt
pop
dec
sbb
mov
add
std
cmp
push
cld
sub
mov
mov
loope
fadd
inc
loopne
std
nop
insb
mov
mov
jo
xor
clc
jns
or
pusha
mov
ljmp
mov
lcall
test
out
rolb
add
fs
pop
jp
roll
cld
xlat
fcompl
inc
or
pushf
bound
add
push
and
hlt
lahf
test
mov
loope
test
pop
pop
pushf
pop
dec
mov
add
adc
mov
out
sti
add
cmp
add
ss
mov
inc
cld
mov
add
inc
sbb
xor
test
loopne
sbb
dec
sbb
cmp
xor
xor
test
fisttpll
dec
into
ret
in
jmp
test
lods
sub
jbe
xorb
mov
adc
cmp
mov
aam
mov
xor
mov
test
dec
xchg
in
call
push
fcoml
clc
and
xchg
and
inc
movsb
or
push
or
push
sub
mov
push
xchg
rolb
pop
mov
dec
push
imul
loope
sahf
std
push
lea
push
and
push
add
xor
pusha
pop
dec
cmc
xchg
mov
fimull
clc
add
les
lods
lock
adc
pushf
add
fwait
aaa
add
cmp
adc
mov
push
add
or
cs
sahf
dec
add
orl
mov
add
mov
lcall
sbb
pop
leave
std
cmp
pop
iret
xor
push
pop
daa
pushf
adcb
jmp
lcall
and
adc
inc
xchg
adc
testl
jecxz
inc
idiv
adc
mov
inc
call
insl
sysret
leave
inc
jge
add
popa
mov
xchg
inc
mov
xchg
std
movsb
mov
or
mov
rcrl
scas
adc
sar
and
and
cmp
or
jp
popa
shlb
adc
ljmp
adc
data16
clc
in
fadds
js
pop
test
add
cmpsb
sub
cltd
loopne
outsb
mov
add
or
cwtl
push
dec
inc
xchg
mov
lds
mov
ds
xor
mov
cwtl
aam
imul
sbb
push
adc
mov
mov
mov
inc
stos
jle
add
iret
lods
adc
dec
push
insb
imul
sbb
pop
mov
out
movsb
cmc
add
es
flds
xchg
or
sub
in
push
jns
shl
lock
popf
shl
lock
add
cwtl
push
add
lods
lods
movsb
add
mov
xor
rorb
xchg
xor
add
lea
js
xchg
dec
divb
adc
cmp
ret
xor
and
or
push
sub
mov
adc
adc
mov
sub
lcall
les
mov
js
pop
insl
sbb
inc
add
mov
inc
xchg
stc
push
mov
lock
cmp
rorl
test
addl
xor
pop
or
pop
mov
xor
add
xchg
rcll
push
adc
pusha
out
or
jmp
add
aaa
pop
in
popa
adc
test
add
pop
flds
psubusb
mov
mov
subb
add
add
cmpsl
jl
sub
push
das
jge
pop
mov
out
loope
stc
mov
push
jb,pt
xchg
mov
or
push
enter
inc
xchg
xor
dec
xlat
add
cwtl
inc
test
jo
add
out
test
enter
xchg
mov
scas
xor
nop
test
cltd
into
lret
mov
xchg
push
das
xor
in
cltd
in
add
lret
mov
loopne
xchg
push
xchg
ret
push
ret
inc
test
ja
cld
sub
lret
rorb
call
aaa
jecxz
pop
pop
pusha
mov
add
mov
pop
rolb
fnsave
call
or
dec
cld
and
lock
lcall
incb
push
xchg
mov
test
mov
jp
adcl
adc
loopne
test
xchg
sbb
clc
jo
xchg
subl
pop
repnz
jl
add
stos
lea
jl
sbb
cmp
cmp
sarl
cmc
out
sbb
adc
pop
add
push
mov
sub
cmp
inc
and
jle
xchg
bound
pop
fiadds
xchg
cmp
sbb
add
push
clc
and
fidivs
cmpsb
cmp
cmp
add
xor
dec
test
out
pop
mov
fstpl
pop
dec
shrb
rcrb
sub
xorl
aam
dec
js
push
scas
shll
pop
fs
push
jo
jl
dec
or
pop
insl
test
sbb
sar
sub
ds
addb
int3
in
inc
popa
push
or
nop
xchg
fs
pop
sbb
out
dec
out
pusha
lcall
rolb
dec
sbb
mov
lcall
xor
xor
mov
add
sahf
add
nop
xchg
ficomps
add
fmull
dec
push
pop
sub
jmp
dec
dec
xor
ds
dec
ss
sub
mov
loopne
mov
mov
popf
pop
push
mov
sub
ljmp
lods
or
add
cmpsb
sub
cmpb
fbld
mov
push
imul
iret
dec
lock
cld
test
inc
cmp
and
jg
into
jl
push
pop
stos
add
leave
or
mov
pusha
sub
push
adc
jae
mov
pop
orb
test
or
popa
jecxz
movsb
insb
fstpt
call
mov
test
icebp
dec
mov
sbb
sahf
stos
push
pop
ljmp
orb
rolb
xchg
ret
adcb
and
add
mov
add
cmp
out
or
sub
pop
lret
and
into
jb
jo
dec
sub
call
sub
test
out
outsl
in
sub
dec
fstps
idiv
cs
mov
cltd
xchg
push
xor
shl
inc
mov
test
and
dec
cltd
add
push
xchg
add
lcall
scas
add
cmpsl
jae
cli
cmp
add
daa
lret
subb
xchg
xchg
test
jle
jo
or
in
inc
into
iret
and
jae
ljmp
hlt
lret
les
mov
cltd
or
xor
popf
nop
ficoml
mov
cltd
jne
add
test
repnz
xor
or
sub
aam
jae
outsl
ljmp
int3
test
insl
mov
pop
mov
js
sti
sbb
pop
ljmp
hlt
xchg
mov
iret
jns
outsb
lock
int
fmuls
inc
mov
sbb
subb
rcrb
xchg
adc
jb
or
or
inc
jno
call
dec
inc
mov
mov
add
popa
inc
mov
cmp
mov
stos
push
add
fdivrs
shlb
cld
test
sbb
inc
repnz
inc
xor
pop
fstpt
add
clc
mov
loop
test
xchg
subb
cld
add
push
cmpsb
push
shl
in
xor
lret
inc
push
enter
or
pop
xorb
dec
adc
xor
dec
pop
cmp
iret
lea
lods
and
mov
xor
add
nop
xchg
lcall
fwait
inc
int3
cmp
jmp
mov
sub
call
xchg
jnp
fs
lea
mov
lret
add
nop
pusha
push
movsl
loopne
hlt
leave
stc
mov
mov
push
cmc
in
pushf
pusha
and
mov
push
push
shrb
cmp
dec
cwtl
add
xlat
lret
pop
jns
push
add
dec
cld
daa
cmp
push
repz
jecxz
cwtl
push
mov
out
mov
ret
fwait
mov
js
lret
xlat
stc
iret
nop
mov
push
in
popf
mov
cld
jo
xor
mov
pushf
mov
inc
mov
xchg
inc
mov
pusha
add
mov
pop
test
add
aas
nop
jo
mov
push
sbb
jg
mov
inc
and
dec
or
and
dec
adc
cmpsb
jl
or
and
dec
mov
cmpsl
mov
sbb
jg
fcmovu
or
sub
jle
outsb
rcrl
shlb
add
push
shrb
add
xchg
pusha
lcall
jnp
aad
sbb
scas
out
je
adc
sarl
nop
dec
subb
add
loop
loopne
xchg
imul
jb
mov
nop
or
test
les
insb
push
cmp
dec
fsub
pusha
lcall
mov
xor
add
es
imul
cmpb
xor
add
call
push
enter
add
iret
ret
cld
jae
dec
fldcw
es
add
push
mov
and
pusha
jo
cld
xor
subl
or
iret
sbbb
orb
xor
fs
inc
ja
cmpsb
fstpl
cmp
scas
je
mov
xchg
sub
mov
dec
ret
cmp
push
scas
mov
xor
mov
add
dec
xor
es
filds
xchg
ret
adcb
cwtl
lock
add
popa
cmp
mov
in
mov
in
pop
call
insb
mov
adc
and
pusha
ja
add
jmp
xor
lods
clc
cmpsb
pop
sub
add
push
outsb
or
shll
mov
stc
es
sub
add
icebp
das
movsb
and
push
movsl
scas
xchg
mov
sbb
cs
xchg
sub
in
fcomip
push
call
cmp
xchg
mov
xchg
aas
dec
inc
or
mov
sbb
push
add
int
lret
fdivrl
sub
les
andb
xlat
push
insb
test
add
idivb
mov
ja
pushf
out
add
lcall
add
aas
sub
cmpsl
pusha
loopne
mov
pop
js
clc
lea
xor
movsb
dec
pop
fsubs
test
push
xor
fdivrl
mov
loop
ds
leave
and
rep
andnps
dec
clc
and
push
dec
xchg
pop
xchg
ja
and
loopne
xor
stos
pusha
cwtl
mov
or
cwtl
or
or
jns
adc
inc
cmpsb
movq
pusha
jne
adc
lahf
cmc
pusha
out
jle
dec
filds
add
jb
test
fsubs
mov
mov
push
jb
ds
rorl
mov
mov
mov
push
xor
daa
es
movsl
adc
inc
push
ret
in
xor
or
and
and
inc
lds
leave
popf
test
arpl
adc
aad
movsb
popf
rclb
and
push
jno
xchg
dec
push
adc
enter
xor
jge
or
test
push
mov
sar
sbb
lock
in
add
leave
mov
shlb
mov
add
enter
add
out
lahf
jnp
xor
sbb
adc
shll
mov
test
push
sbb
inc
enter
adc
add
dec
fdivp
jg
fadds
andb
sbb
arpl
or
addr16
cwtl
and
sub
dec
or
cwtl
inc
ds
lods
hlt
add
in
adc
stos
mov
adc
sahf
bound
shlb
add
and
stc
cmp
fcoml
int3
arpl
mov
sysenter
push
cmpsb
insb
push
adc
sub
adc
mov
pusha
xor
sub
push
and
dec
pfadd
stos
pusha
mov
aas
lods
add
push
xchg
cmp
ret
mov
adc
sbb
lock
idivl
test
cmp
outsl
andb
mov
mov
mov
pop
or
je
and
adcb
or
dec
jle
shrb
pop
ret
xor
mov
fnsave
ljmp
sbb
mov
insl
inc
jo
and
test
jae
add
lea
movsb
inc
inc
add
mov
xlat
or
add
mov
aaa
sub
enter
cmp
pop
clc
push
adc
inc
push
or
add
adc
add
mov
fcom
mov
xchg
add
lods
dec
decb
ds
fldcw
int
sub
dec
and
sahf
test
xchg
add
inc
ret
repnz
nop
mov
pushf
or
adc
sbb
repnz
add
inc
dec
or
pop
mov
push
cmp
adc
sbb
and
mov
jl
inc
push
bound
out
in
push
mov
je
repnz
add
mov
bound
mov
cwtl
add
add
mov
jae
add
jae
push
rcr
test
mov
ljmp
lret
add
sbbl
cli
movsl
pop
dec
or
adc
xchg
lret
cmp
mov
jl
call
push
iret
or
cmc
test
leave
inc
in
xor
repnz
jecxz
test
and
push
enter
repz
dec
cld
adc
or
or
rcll
leave
push
sbb
into
iret
mov
ds
jo
loope
adc
or
pop
jecxz
and
mov
jp
subl
sub
in
test
dec
jne
cld
rep
ret
cwtl
mov
adc
shrb
mov
in
repnz
xchg
adc
add
dec
js
push
iret
add
push
and
rdpmc
nop
fs
xchg
stos
fdivs
shlb
add
dec
clc
psubd
xchg
and
jmp
stos
mov
scas
pop
mov
mov
loop
cmp
cmp
adc
fcoms
fs
xor
mulb
ret
movsb
test
scas
push
js
mov
into
adc
and
imul
inc
enter
shrb
fcoml
ret
test
inc
sbb
push
xchg
xchg
pushf
into
dec
in
dec
jmp
test
les
lock
lock
xor
cs
jle
add
sub
add
mov
push
pop
jo
push
pop
mov
lret
test
inc
sbb
lock
jl
data16
mov
cmp
sub
outsb
mull
subb
mov
pop
inc
adc
and
js
jb
add
movsl
call
orb
xchg
dec
mov
repnz
sarb
inc
add
fdivrl
push
popf
das
pop
mull
arpl
mov
test
lcall
movsl
xor
pop
mov
lret
negl
roll
add
fidivl
xor
or
movsb
xlat
pop
gs
dec
dec
mov
pusha
sbb
push
enter
jg
dec
cmp
iret
shll
push
mov
add
test
adc
fdivs
xor
mov
and
add
hlt
cwtl
test
mov
xchg
dec
lods
xchg
mov
loopne
lahf
add
fdivl
dec
cmp
or
rorl
push
popa
ja
mov
xorb
aam
movsl
ds
rorb
addl
cmp
lahf
inc
jecxz
mov
jg
lret
jo
mov
movsl
inc
add
rcr
adc
adc
sbb
jp
adc
popa
mov
outsl
sub
imul
pop
movsb
lock
jl
iretw
push
add
jae
jno
mov
cmp
dec
add
movsl
xorb
nop
jg
pop
mov
shlb
outsb
jp
add
xchg
jbe
jno
xchg
add
cmp
and
xor
shl
andl
and
sub
call
ds
inc
sbb
enter
in
add
xor
aaa
vmread
push
sbbb
or
jmp
int3
mov
jge
pop
lcall
add
mov
add
hlt
adc
enter
or
mov
push
adc
push
test
xor
loop
jnp
cmp
or
arpl
jo
test
icebp
cmpsb
cs
mov
rcrb
pop
dec
pop
loope
sub
cmp
ja
or
push
loop
cmp
adc
loopne
add
push
jl
sub
jg
pop
fimull
lret
jns
inc
push
jmp
xchg
add
sub
add
xor
jecxz
into
mov
movl
or
sub
sbb
fsubrs
adc
rorb
mov
loop
mov
inc
jae
dec
adc
dec
js
inc
ljmp
cmp
loope
add
sarb
test
lea
es
stc
in
push
test
mov
and
inc
ficompl
dec
dec
push
xchg
mov
add
aas
cmc
pop
cmp
jbe
add
dec
push
xchg
flds
push
push
aaa
sbb
pop
hlt
cmpsb
push
inc
je
push
stos
add
and
lcall
mov
ret
push
hlt
les
and
lock
pop
loopne
repz
dec
and
or
outsb
jae
and
lock
xor
ficomps
cmp
sub
push
dec
mov
bt
lods
add
sub
mov
sbb
mov
insb
test
outsb
xchg
sbb
pop
iret
mov
ret
cld
mov
fnstcw
fucomp
pop
cltd
xor
movsl
xor
cwtl
cmp
sbb
rclb
ljmp
mov
mov
movsb
pop
sbb
jle
fsubl
jge
dec
mov
mov
inc
adc
mov
or
adc
mov
enter
mov
lods
sbb
dec
aad
and
add
sub
sbb
jl
sbb
xor
shl
jecxz
in
scas
add
xchg
mov
dec
fs
and
stc
ss
in
or
jne
sub
push
and
add
imul
push
dec
icebp
mov
cmp
into
mov
popf
or
jp
jb
mov
jbe
out
jne
fmuls
xor
pop
repz
mov
add
outsb
sarb
cs
fisubrs
mov
push
jge
push
and
xchg
push
sbb
fbld
aam
orl
test
xor
add
popf
imul
shrb
xlat
gs
std
jmp
jo
test
sub
jg
fcmovbe
mov
ds
inc
nop
inc
add
dec
mov
mov
std
or
int3
outsb
enter
stos
mov
mov
jecxz
add
movsl
and
repz
adc
xchg
sbb
jmp
pusha
sbbl
xchg
psllq
sub
add
pop
mov
movsb
and
inc
enter
insb
in
popf
in
rolb
and
mov
sbb
or
sbb
add
into
mov
jmp
push
movsb
nop
pop
sbb
leave
cmp
lret
or
test
idivb
and
jno
jo
or
jo
fs
dec
sbbl
std
inc
inc
or
add
pusha
and
lods
inc
adc
lods
dec
pusha
xor
stc
xlat
outsl
mov
iret
lea
cmc
adc
ljmp
jo
arpl
out
xchg
jp
cwtl
xor
jl
add
loop,pt
iret
jnp
sbb
mov
movsb
test
mov
fwait
add
add
pushf
add
xchg
pop
jns
add
lcall
cmp
mov
pop
cwtl
es
loopne
dec
jo
ss
cmpl
push
test
add
push
clc
cmp
adc
dec
lcall
fsubs
cli
movsb
and
push
pop
jl
pop
adc
jb
add
sti
out
add
aad
fisubrs
push
add
fwait
sbb
into
push
xchg
xchg
andb
or
inc
add
mov
rep
adc
inc
or
and
nop
pop
jno
mov
dec
cld
call
les
or
jl
sub
mov
sar
add
sarl
dec
push
mov
cmpb
adc
shll
icebp
mov
test
nop
dec
in
mov
xor
cmp
jmp
cmp
pause
mov
int3
jmp
les
into
add
mov
sub
or
sub
xor
push
or
leave
prefetchnta
or
jmp
aaa
add
or
sbb
mov
pop
push
rol
jae
pop
sbb
add
neg
add
mov
push
and
pushl
pop
add
jmp
push
mov
cmp
loope
push
cs
sub
sub
dec
mov
rorl
pushf
call
sub
mov
push
sbb
push
add
cmc
dec
push
add
hlt
jmp
mov
cmpb
fistpl
jb
stc
fidivrs
push
aam
addl
arpl
int3
push
pop
push
pop
in
or
dec
lea
add
les
out
pop
clc
testb
icebp
pop
nop
ret
stos
add
push
mov
sub
pop
xor
lret
or
sub
lods
fld
or
mov
pop
dec
neg
enter
mov
loop
je
fmuls
cmpl
mov
jmp
arpl
xchg
or
push
push
mov
pop
jmp
ret
bound
fldenv
lret
sub
sbb
sub
mov
inc
insb
test
or
mov
shl
add
sbb
jbe
and
xorl
pfmax
inc
les
adc
lcall
jmp
push
xchg
pop
roll
call
mov
inc
rorl
shr
not
inc
mov
add
pop
and
mov
sbb
jbe
cmp
jb
rcll
sub
jmp
mov
mov
push
mov
cmc
andl
andl
movl
cmp
cs
sub
fadds
pop
rorb
jle
add
mov
daa
stos
xor
jmp
pop
xor
out
ret
mov
pop
out
stos
inc
sbb
mov
pop
and
out
add
xor
aad
jmp
aam
movsl
shlb
lcall
pop
js
gs
adc
cmp
jge
or
jp
cmp
fbstp
call
into
pop
jns
add
dec
inc
shrl
mov
enter
roll
push
mov
outsb
cmp
xchg
jmp
das
test
push
sbb
sub
add
mov
inc
aad
jmp
xor
and
adc
loopne
movsb
mov
jno
add
mov
add
pop
xchg
popf
mov
loopne
sbbl
push
outsb
xor
pop
mov
mov
lock
add
add
sbb
sbb
and
cli
lock
xor
add
add
insb
sub
jmp
hlt
cli
mov
adc
mov
mov
sti
cwtl
xor
movsl
test
and
push
xor
adc
pop
lds
popf
sub
addr16
idivl
pop
shl
in
iret
stc
sub
push
mov
gs
add
clc
out
ljmp
roll
imul
enter
inc
xor
mov
push
or
inc
out
adc
sub
or
cmpsb
jb
loop
out
cli
sahf
and
pop
fmull
dec
out
cmp
test
push
jmp
dec
ret
or
lods
dec
arpl
orb
shl
dec
push
xchg
sti
test
xor
add
loop
push
mov
sub
jecxz
sub
mov
add
jmp
nop
imul
arpl
pusha
mov
repnz
testb
push
jno
je
xchg
adc
in
add
mov
add
ret
sub
fnstenv
jl
in
adc
inc
push
in
popa
add
pop
gs
shr
mov
lds
jmp
shl
or
pop
jg
push
lods
out
fstl
pop
or
sti
cltd
sub
lret
mov
add
ficomps
sbb
or
and
inc
mov
xor
push
add
mov
jae
mov
push
push
pop
push
pop
not
or
add
pop
inc
sub
pop
dec
insb
cli
push
push
ss
cwtl
add
pop
push
hlt
sub
fs
daa
push
mov
mov
repnz
int
push
loopne
cmc
outsb
les
add
sar
jmp
pop
inc
inc
push
orl
add
xchg
mov
dec
pop
es
adc
add
mov
insb
xor
sahf
add
xor
int
xchg
out
jae
jbe
andnps
jmp
out
push
les
data16
and
push
out
rcrl
pop
jmp
mov
xchg
maskmovq
and
pop
adc
sub
es
add
jg
adc
pop
mov
jmp
xor
mov
sub
andb
push
inc
movsb
loop
sbb
add
cmp
call
add
pop
cmc
cmp
mov
push
or
sbb
pop
shrb
or
cmp
mov
mov
jg
sbb
jmp
aas
jnp
cmpb
cltd
adc
pop
push
jae
lock
mov
dec
bound
lock
enter
pusha
push
popw
sbb
sbb
cmp
inc
sub
xor
xor
fists
std
jmp
push
movsl
dec
mov
or
fadds
or
bound
inc
repnz
push
and
dec
neg
orl
mov
xor
outsb
lahf
out
loop
sbb
push
ja
adc
mov
jmp
add
cli
adc
xchg
mov
lret
or
adc
fisubrs
lret
sbb
push
mov
shll
push
inc
jnp
push
xor
mov
add
inc
add
popl
scas
sbb
xchg
xlat
push
jmp
add
cld
addr16
jmp
clc
lret
dec
insb
rclb
in
dec
popa
or
adc
es
inc
add
imull
lods
in
pop
movsbl
push
ret
jmp
out
push
rcrb
pop
or
sub
or
push
pop
add
imul
subl
or
push
stos
fwait
stos
pop
dec
test
sub
or
nop
jle
movsb
or
loop
test
jge
leave
pop
push
jmp
dec
les
push
adc
ljmp
sub
cltd
inc
add
jbe
call
pop
push
push
subl
sahf
cmp
out
sub
mov
and
subb
or
pop
addl
bound
sub
sub
jmp
xchg
mov
lcall
fsubs
mov
pop
cmp
or
pop
mov
or
data16
pop
shrb
sub
adc
ljmp
push
xor
sbb
add
add
push
rorb
movsl
and
and
pop
ret
adc
imul
dec
sbb
in
cmc
pop
xor
dec
adc
pop
add
pop
add
out
or
or
pushw
jae,pt
push
add
jbe
push
aas
fldt
nop
lock
loope
js
push
mov
inc
push
jmp
adc
xor
or
adc
lea
filds
cmp
jmp
pushl
popf
mov
jne
xchg
mov
test
xor
inc
pop
push
imul
pop
add
sub
or
outsb
arpl
or
or
shll
sub
inc
rorb
jg
mov
inc
xchg
inc
leave
pop
nop
mov
or
addl
or
cmp
pop
jbe
bound
not
cmp
call
jmp
lods
mov
aam
inc
adc
cmp
xchg
es
jmp
inc
mov
out
out
loop
loop
ret
xchg
or
mov
add
xchg
or
add
pop
pop
xchg
test
pop
testl
aas
cs
cwtl
push
push
pop
pop
push
adc
and
add
mov
aad
xor
or
sub
inc
sbb
mov
and
fcom
pop
xchg
shlb
ret
movzwl
pop
push
cmpsb
mov
dec
add
rorb
ds
sub
into
xor
pop
xor
pop
push
xor
sub
xor
pop
cli
in
lcall
lret
bound
int3
movsl
add
adc
inc
push
lock
jecxz
mov
sti
sbb
mov
pop
sub
andl
sbb
test
dec
push
test
leave
mov
push
mov
xor
mov
in
lock
mov
inc
push
push
icebp
mov
lret
xor
rcrl
cltd
push
mov
pop
push
add
mov
jp
mov
mov
mov
adc
dec
mov
orl
xor
pushf
cwtl
xor
or
sar
test
inc
lea
cmp
jo
xor
xchg
mov
push
add
xchg
push
dec
shrl
or
mov
mov
pop
iret
jnp
jecxz
sbb
jbe
decl
lahf
cmp
xrelease
int
inc
xchg
pop
push
mov
mov
loop
cmp
push
mov
pop
lods
mov
push
jmp
dec
scas
lods
ja
movsl
push
and
pop
add
or
pop
xor
inc
sub
adc
loopne
cld
push
add
stc
pop
ror
adc
mov
sbb
pop
pop
ret
sub
push
jmp
add
mov
cmpsl
jns
out
in
jmp
cwtl
jge
subl
into
insl
sub
clc
clc
add
pop
movsb
cvtps2pi
fldl
sub
je
push
inc
repz
or
xchg
pop
and
sub
jmp
xor
push
cmpl
sbb
mov
add
inc
iret
and
adc
outsb
mov
fcoms
mov
mov
lcall
push
add
add
sbb
dec
xchg
addl
insl
ja
jbe
repz
js
jb
push
pusha
push
xor
cmp
and
or
lret
clc
xor
pop
add
cmpsb
inc
fstpl
jae
cwtl
or
roll
dec
add
xchg
xor
loopne
popa
mov
push
test
and
imul
std
int
add
adc
out
sbb
jns
xchg
loop
shll
mov
rclb
addr16
dec
or
add
xchg
jnp
fistps
notb
clc
je
push
and
inc
stos
push
adc
les
pop
xchg
dec
incl
add
nop
add
adc
dec
add
jle
xchg
not
into
popa
jns
int3
loopne
jge
push
imul
aad
cmp
gs
cmp
into
jl
inc
cmc
xor
xchg
hlt
xor
lods
scas
test
jl
and
mov
cmpsb
orb
js
and
pop
mov
or
pop
ret
stos
add
mov
jecxz
stos
repnz
bound
push
add
bound
and
jmp
mov
add
xorb
push
sub
ret
add
or
add
adc
jl
in
mov
or
lds
add
aad
mov
cmc
sbb
jns
jo
or
adc
insb
xchg
or
and
pusha
adc
sub
pop
mov
jle
rolb
mov
add
push
jl
xchg
aas
sub
mov
not
and
icebp
fnstsw
mov
mov
push
add
push
lret
or
sbb
iret
push
push
jl
sub
out
sub
push
push
cltd
add
mov
and
lcall
fisubs
loopne
push
cmp
ficompl
sub
add
stc
call
pop
push
pop
push
adc
push
push
jmp
xor
jo
and
xor
xchg
sub
mov
adc
and
mov
js
fmulp
js
daa
in
mov
fstpl
mov
fmull
inc
cmp
mov
pop
sbb
bound
xor
mov
fildll
push
xor
ffreep
in
xchg
mov
mov
inc
jmp
aad
test
sub
add
push
idivb
xchg
test
pop
nop
outsb
or
ja
mov
cmp
xchg
aaa
xchg
and
aam
or
jns
icebp
nop
fidivrl
mov
adc
mov
ljmp
jo
xlat
adc
sbb
std
jge
add
nop
outsb
push
rclb
not
cli
xchg
push
cmp
loopne
sbb
add
loopne
add
adc
mull
cli
dec
test
pop
add
xor
repz
or
scas
pusha
inc
or
jae
lea
xchg
mov
push
push
mov
neg
jmp
pusha
lret
shl
cwtl
cmpsl
inc
or
dec
adc
pop
imul
testb
pop
call
out
shlb
mov
pop
sub
inc
and
leave
add
dec
std
aad
push
stos
push
mov
add
movsl
xor
pop
and
or
sbb
and
mov
test
push
push
xchg
pop
rcll
adc
dec
rcrl
data16
add
ret
rcll
jmp
js
mov
pop
cwtl
add
add
sub
stc
inc
pop
lret
sbb
adc
push
aam
in
shr
pusha
insb
hlt
add
push
xor
pop
pusha
mov
stos
add
xor
mov
mov
sbb
pusha
out
jge
mov
mov
pop
mov
add
dec
dec
movsb
add
add
jmp
mov
pop
or
xchg
out
into
cli
adc
mov
pusha
cmp
sbb
fwait
sbb
mov
push
adc
jp
popa
and
ljmp
imul
insb
xlat
es
pop
pop
sub
jge
lds
icebp
mov
add
clc
cmp
jmp
scas
movsl
push
sub
stc
xchg
mov
jl
pushf
or
pusha
xor
jl
pop
fisubl
sahf
add
pop
mov
mov
jne,pn
mov
clc
pop
pop
dec
test
and
mov
mov
stos
cld
out
inc
movsl
push
aad
cs
mov
lds
jns
mov
jmp
aam
sub
fcoml
xchg
fwait
sub
aaa
repnz
or
adc
add
jns
add
add
add
adc
aad
mov
data16
add
and
and
data16
lock
add
inc
out
adc
add
push
enter
mov
hlt
xlat
cmpsb
adcl
rcrl
es
cmpsl
push
adc
bound
xor
dec
xor
cmp
push
fsubr
out
dec
lds
lock
shr
add
push
xor
fwait
inc
adc
lahf
lcall
orb
mov
mov
add
int3
pop
push
mov
jmp
shl
add
or
lret
subl
mov
jl
cmpl
insb
push
lock
dec
addr16
mov
push
jo
push
pushf
andb
mov
pop
xchg
push
shll
dec
rcr
aas
sub
adc
movsl
push
sbb
pop
mov
add
call
dec
enter
pop
dec
xorl
push
jb
sub
ss
and
pop
mov
mov
outsl
adc
daa
jbe
mov
outsb
xor
loope
sub
sub
pop
call
shlb
push
or
testl
es
test
xor
insb
or
aad
int3
fmuls
pop
dec
xor
jns
lea
inc
push
rclb
cmp
sub
push
and
add
dec
sub
inc
in
cmc
and
pop
jno
sub
and
add
jecxz
mov
add
pop
bound
andl
pop
bound
xor
loop
jle
mov
sbb
outsl
mov
adc
jbe
test
movl
neg
mov
std
adc
cli
sbb
adc
call
sti
cltd
pop
aad
push
jmp
push
push
mov
mov
jge
mov
mov
iret
sbb
addr16
push
das
jno
push
pop
addl
push
dec
not
nop
outsb
or
push
or
pop
xor
in
sub
add
nop
sbb
xor
sbb
pop
inc
or
lret
or
ja
add
test
das
arpl
pushf
nop
pop
cs
add
vrsqrtss
pusha
sub
xor
aas
jmp
sti
push
sub
mov
sbb
cmc
inc
add
xor
test
inc
mov
push
jno
mov
xor
dec
sbb
insl
cmpb
add
jmp
cs
mov
add
ror
hlt
rcll
imul
add
add
mov
dec
inc
pop
xchg
sub
or
out
sub
cmp
into
mov
cli
and
mov
loopne
rcrl
ret
sub
pop
sbb
cs
jmp
lahf
adc
adc
divb
inc
pop
sarb
bound
psrld
and
mov
rcll
fwait
mov
push
pop
aad
xchg
dec
or
add
jecxz
jmp
popa
mov
ds
xor
pop
pop
push
mov
ss
pop
rorb
xor
adc
pusha
cltd
adcb
je
loope
and
add
add
fldl
je
adc
icebp
stos
cmp
xchg
or
cld
rorb
les
and
mov
xchg
xor
xor
fcoms
sub
add
mov
push
js
sub
repnz
ja
inc
cmp
int
fdivrs
mov
pop
arpl
sub
push
push
push
sbbb
scas
sbb
or
rorb
outsb
inc
out
loope
or
int
sub
fidivrs
iret
push
mov
and
adc
shll
jmp
andl
add
adc
sarl
ljmp
adc
pop
repnz
adc
mov
aaa
nop
rolb
xchg
mov
push
jmp
or
pop
xor
mov
out
rcrl
xor
xchg
and
daa
icebp
inc
lods
cwtl
movsl
mov
adcl
pop
fildl
cmp
subb
imul
in
cmp
test
sbb
mov
xchg
pop
jb
cmp
pop
adcb
pop
dec
add
jo
push
xchg
mov
push
cwtl
pop
pop
jbe
sub
mov
movsb
stc
mov
jne
gs
lcall
outsb
xor
xchg
pop
and
adc
not
andb
jmp
mov
inc
lret
lret
pop
sub
push
xor
xlat
andl
add
bound
cltd
movsb
pop
ljmp
xchg
pop
lods
mov
dec
les
push
pop
mov
adc
nop
test
xchg
mov
hlt
mov
sbb
loop
adc
sbb
xchg
and
mov
pop
pop
push
mov
fisubrl
jne
adc
and
lahf
adc
outsl
sbb
rolb
push
mov
in
into
mov
sub
fs
roll
push
mov
mov
pop
sbb
shlb
sub
scas
mov
cltd
xor
aad
insl
push
inc
subl
das
push
mov
add
mull
jbe
xor
adc
call
xchg
dec
pop
rol
in
ds
fs
stos
sub
ret
sub
push
push
out
fcmove
adc
adc
pop
fmuls
push
add
sbb
jmp
mov
inc
in
lret
mov
xchg
push
mov
leave
xchg
scas
and
inc
aad
fnstcw
sbb
pop
inc
push
hlt
inc
fs
adc
jmp
test
inc
and
movsl
add
orb
call
xor
pop
pop
addr16
inc
mov
adc
pop
pop
inc
aas
loope
adc
sub
dec
cmp
adc
pop
add
int
in
sbb
jmp
pop
push
mov
ror
adcb
mov
cwtl
popa
out
mov
and
pop
xlat
mov
or
arpl
cwtl
pusha
bnd
jo
add
jmp
and
adc
fldl
pop
sahf
push
adc
mov
push
gs
packsswb
aad
sub
mov
or
jmp
fdivrl
dec
sbb
adc
sarb
sub
sub
ds
push
pop
adc
xor
mov
sahf
sub
movsl
outsl
into
mov
sbb
lret
mov
xor
lock
push
mov
pop
sbb
jmp
mov
mov
mov
and
mov
mov
cmp
sbb
mov
lds
int3
sub
gs
hlt
xor
push
divb
mov
pop
mov
int
dec
in
mov
pop
insl
xchg
push
xchg
or
jmp
dec
pop
pushf
iret
jmp
pop
in
and
dec
mov
in
cmc
sub
mov
neg
push
ret
adc
pusha
adc
pop
les
mov
add
inc
shr
dec
testl
jbe
andl
sarb
les
or
mov
sub
dec
xchg
add
mov
mov
and
push
push
push
dec
fwait
and
cs
pop
add
dec
jge
pusha
jmp
cmp
cmp
sbb
test
enter
pop
jae
and
cmc
push
inc
add
hlt
adc
add
or
popa
shr
jmp
pushf
dec
cmp
add
inc
shr
xadd
adc
js
mov
pop
insl
add
testb
sub
mov
adc
push
pop
outsl
inc
cs
inc
movsb
mov
xchg
rorl
xor
mov
clc
jmp
sub
cmp
adc
lds
add
sub
sub
les
adc
pop
and
negb
sub
xchg
in
mov
pop
call
fidivs
sbb
adc
adc
lods
jno
or
pop
mov
leave
js
and
mov
pop
push
xchg
mov
sbb
cmc
pop
pop
mov
sub
adc
add
cld
dec
cmpsl
add
dec
and
and
push
sub
sahf
pop
jl
jmp
pop
inc
ljmp
and
icebp
fidivrs
daa
clc
push
add
add
or
aaa
rorl
inc
mov
inc
lret
not
push
test
pop
dec
jl
push
push
sbb
mov
xchg
psubsb
or
push
dec
push
lcall
fsts
clc
push
in
sub
insb
jo
repz
outsb
sub
xchg
in
pop
insl
pop
imul
xchg
mov
push
sub
in
inc
or
mov
sub
into
pop
jp
xor
arpl
aaa
sub
addr16
insb
cld
loop
jmp
push
sub
adc
and
adc
lods
notb
pop
pop
jmp
and
xorb
or
and
adc
and
push
xlat
add
sub
insl
loopne
jae
jne
mov
lds
shl
pop
dec
fcomp
xor
inc
icebp
cmpsb
and
push
push
push
rcrb
sahf
pop
push
in
scas
jnp
mov
sbb
push
mov
popf
movsl
loop
ret
add
aas
inc
lret
nop
jmp
mov
sahf
sti
dec
push
inc
push
orb
cmpsl
js
dec
test
dec
mov
fsubrp
and
pop
call
pop
add
jmp
cmpsl
mov
in
jecxz
pop
inc
sub
push
add
notl
idivb
jns
push
shrb
dec
aas
jb
push
movsb
mov
dec
dec
inc
mov
inc
icebp
or
mov
in
mov
fs
sbb
pop
adc
pop
jecxz
sbb
lods
lret
dec
fs
and
mov
pop
hlt
clc
fmull
fcmovbe
test
push
xchg
push
dec
xbegin
fmuls
and
push
mov
xchg
adc
ss
enter
in
sbb
movsl
and
loope
cmpsl
in
inc
lds
push
fdivrp
jl
xor
sub
xlat
pop
pop
add
push
or
mov
jbe
or
mov
addb
mov
inc
aam
imul
pop
jg
jbe
sarb
sbbl
jmp
xchg
xchg
add
shr
push
adc
cmp
add
es
jmpw
shl
movsb
push
mov
jg
mov
or
add
inc
dec
jg
addl
lods
push
cmpb
clc
jnp
push
aad
stos
dec
push
fnstenv
jp
sbb
or
mov
nop
and
dec
mov
push
ljmp
mov
les
sub
jns
incb
or
cmp
arpl
and
push
bswap
nop
cmp
and
cmp
cs
push
rcr
mov
rolb
or
add
pop
pop
add
sub
rorl
adc
ljmp
rorl
mov
out
add
and
popf
add
pop
addr16
dec
pop
cmpsl
add
popa
jnp
jmp
inc
add
mov
out
les
idivb
cmp
aad
adc
inc
dec
hlt
dec
movl
rcrb
mov
mov
xor
add
int3
xor
and
btr
add
sub
arpl
test
pop
add
fmul
sub
cld
push
sbb
cmp
add
nop
jns
pop
roll
pop
sub
rorl
dec
movsl
inc
subb
stc
pop
add
ja
inc
pusha
xor
add
ss
sub
dec
jb
and
sub
push
mov
mov
push
bound
mov
pop
bound
xor
rorb
rcrl
mov
das
xchg
mov
shl
repnz
jbe
sub
in
test
in
pop
xor
pop
sub
jmp
or
inc
fiaddl
mov
stos
sbb
adc
jns
xchg
mov
mov
das
cmovno
jno
cmpb
dec
frstor
jno
or
scas
jp
xor
xchg
jb
add
imul
jbe
or
fwait
lock
sti
aas
rcrb
pop
or
dec
add
insb
pop
jmp
popf
adc
inc
adc
mov
sub
add
popf
fldenv
push
rcr
add
mov
jmp
in
add
int3
sbb
jo
movsb
dec
sti
orl
add
sub
jns
inc
fnstsw
lods
cltd
fldt
add
rcl
push
out
xor
sbb
jp
das
or
mov
pop
leave
shrl
js
dec
xor
imul
adc
into
or
pusha
pushw
pushf
jnp
divl
shl
adc
add
aaa
iret
or
movsl
scas
dec
mov
xchg
inc
lcall
jge
mov
or
add
jne
mov
outsb
gs
fs
into
mov
in
jbe
xor
mov
sub
es
pop
push
sub
mov
pushf
imul
dec
sbb
out
shll
jnp
push
mov
cmpsb
sub
rcl
xchg
in
js
dec
mov
stos
dec
push
lcall
outsb
aaa
add
or
or
aas
add
add
enter
hlt
les
repz
jo
lock
xor
sbb
adc
loopne
mov
popa
dec
sub
clc
lock
shrl
adc
adc
mov
mov
pop
xor
pop
dec
dec
mov
pop
dec
jne
dec
aam
test
rorb
jmp
pop
shll
out
and
addr16
daa
sbb
cs
lcall
sub
fimuls
in
add
and
cmpsb
ret
xor
into
das
pop
or
jns
std
jge
or
jmp
add
sub
mov
push
call
cwtl
cmpsl
and
dec
pop
xor
mov
test
xor
icebp
or
loop
loopne
ret
jmp
jo
call
mov
xchg
cmpb
add
push
dec
enter
xchg
shrl
inc
loope
or
dec
xorb
jmp
dec
xor
fsts
dec
mov
xor
sbb
ljmp
int3
enter
push
fisttpll
aam
add
addl
rcl
sbb
mov
pop
shl
add
test
cld
dec
add
shr
xor
sbb
incl
rol
sti
sub
sub
mov
push
sub
faddl
dec
lock
cmp
adc
fs
roll
subl
mov
imul
arpl
lcall
fwait
push
push
mov
push
jmp
mov
outsb
cwtl
adc
mov
sbb
xor
adcb
ss
scas
sub
imul
inc
pop
jmp
inc
aam
stc
push
loop
jl
add
jns
test
add
mov
cmpl
and
pop
jmp
clc
mov
aaa
push
mov
test
cmpb
fs
add
mov
jmp
fidivs
xorl
rorb
push
push
jns
or
repz
push
or
inc
and
cwtl
sbb
add
jo
lock
ret
sub
xor
insb
xchg
sub
xchg
addr16
add
lods
loop
and
int3
sbb
mov
and
and
sub
mov
push
les
dec
pop
loopne
ljmp
add
add
pop
pop
push
mov
mov
cmp
pop
push
shr
push
mov
daa
jmp
pop
jo
xor
xor
daa
xchg
bound
pop
xchg
lods
sbb
push
icebp
push
sub
and
add
rorb
je
pop
inc
jne
call
xor
adc
push
or
xchg
mov
push
cmp
cmp
sub
add
or
push
mov
mov
pop
popa
bts
inc
pop
jnp
adc
jg
sub
jecxz
sub
loopne
push
cmp
mov
push
or
jp
imul
sbb
or
into
jmp
push
push
ret
dec
or
xor
daa
sub
ficompl
inc
loop
adc
push
pop
popf
xor
les
cmp
arpl
rorb
aam
imul
shrb
ds
scas
lods
sbb
mov
sbb
loop
ss
cmp
icebp
mov
adc
lahf
loopne
sbb
dec
das
hlt
jp
or
and
adc
pop
inc
push
imul
xor
jns
inc
pop
jmp
lods
xorl
data16
decb
cmc
enter
or
sub
add
add
push
pop
and
sub
adc
out
out
arpl
or
rcrb
inc
cld
mov
and
ficompl
add
mov
es
and
cmp
notb
in
sbb
in
xor
fs
fcompl
incb
push
push
mov
pop
mov
mov
in
clts
push
pop
shll
ljmp
mov
cmc
popf
mov
or
mov
add
xchg
xchg
inc
pop
xchg
stos
mov
dec
xor
or
dec
repnz
mov
test
cmp
out
sub
sbb
pop
in
push
adc
enter
or
xchg
sub
lret
pop
lahf
dec
mov
mov
cmp
mov
out
jns
sub
aaa
lods
jno
inc
adc
popa
pop
adc
leave
mov
mov
out
lods
rol
lea
or
sub
dec
pusha
inc
mov
push
mov
pop
sub
pop
push
scas
sub
push
mov
xor
sbb
sbb
push
xor
cwtl
or
pop
lret
or
xchg
cmpsb
dec
adcb
mov
stc
or
add
jmp
pop
xchg
insb
jl
fistps
cmp
jg
pushf
addr16
mov
or
and
lret
test
test
das
jmp
iret
movsl
cmp
xor
dec
mov
cli
jns
sub
ret
div
leave
and
push
out
add
std
push
pop
ror
in
add
mov
jnp
es
push
aad
pop
nop
push
dec
inc
jl
pop
push
and
lea
fnsave
mov
mov
or
fstl
lods
lcall
shll
loope
jle
std
adc
loop
repnz
cmp
push
mov
adc
pop
sub
jnp
arpl
mov
adc
dec
mov
stos
pop
pusha
mov
xchg
xchg
xorl
cmp
adc
add
fwait
incl
in
or
pop
int3
mov
movsb
mov
pop
xchg
shrl
pop
xchg
xchg
inc
sub
sub
xor
dec
mov
orb
pop
and
in
cmp
adc
out
pop
mov
push
and
inc
jno
dec
push
mov
ret
pop
xchg
repnz
in
test
add
out
std
divl
pop
and
clc
jmp
insb
mov
stc
ret
pop
mov
dec
lea
push
mov
outsb
call
dec
sahf
fwait
mov
das
test
mov
push
fildl
scas
adcb
inc
mov
les
ss
push
mov
mov
cld
imul
mov
or
nop
outsl
loop
inc
jp
xor
repz
cmp
mov
push
and
jle
lods
js
dec
jmp
pop
push
cmp
nop
dec
filds
mov
dec
rcrl
adc
popa
inc
jbe
outsl
cs
dec
dec
add
jmp
lods
push
xchg
scas
xor
push
mov
ss
into
call
xchg
fstl
daa
sti
insl
cltd
nop
adc
adc
mov
shrl
mov
xchg
pop
push
push
add
pop
inc
jb
inc
push
cmp
pop
pusha
add
add
jmp
scas
les
and
jmp
push
jg
adc
leave
inc
decl
out
outsl
cmp
adc
add
aad
ljmp
cs
mov
add
subb
fstpt
daa
push
xchg
push
jmp
adc
outsl
and
fs
jmp
sub
cmp
add
roll
sbb
dec
int3
xchg
std
inc
push
add
jmp
cmp
dec
jle
inc
ljmp
incb
mov
xor
mov
shrb
and
xor
dec
push
imul
mov
add
dec
fstpl
push
ljmp
stos
add
leave
xchg
inc
sub
xor
leave
ljmp
dec
rcrl
jnp
adcb
jmp
rolb
xor
push
add
bound
fstl
mov
push
push
inc
and
add
push
add
add
ret
ss
xchg
xchg
xor
jno
mov
cmp
sbb
or
icebp
subb
fsub
sub
pop
nop
or
or
aad
fadds
or
add
add
push
push
lret
sub
subb
sub
inc
pop
icebp
or
push
jmp
dec
and
addl
xor
sti
adc
mov
outsb
and
int
jl
aas
daa
jp
lret
jg
add
and
and
inc
add
call
pop
jmp
int3
add
xlat
daa
into
fs
push
and
jns
dec
dec
lock
or
mov
push
in
sbb
sub
lea
mov
push
enter
push
adc
jmp
int3
mov
pop
or
data16
popa
or
mov
cmp
lods
jmp
into
or
inc
and
add
into
add
cmpb
sub
sub
inc
lods
inc
popf
es
xlat
add
rcrb
push
orb
push
sti
sub
cmpsl
stc
test
push
stos
add
jmp
adc
dec
mov
pop
mov
jl
es
adc
fadds
shlb
and
add
xor
das
xor
pop
neg
mov
xchg
pop
xchg
int3
test
sub
arpl
push
inc
add
xor
push
xchg
out
sub
jno
and
push
push
push
push
add
lret
addr16
out
add
loop
pop
jg
lret
mov
mov
loope
cmp
aas
inc
and
dec
popf
jnp
repnz
sbb
mov
add
mov
inc
push
sub
push
sbb
shrl
iret
hlt
loope
outsb
mov
enter
mov
ret
dec
mov
xchg
je
and
jmp
out
push
jp
and
inc
ficomps
mov
aaa
sbb
xor
mov
pop
sub
push
push
add
andnps
and
or
pop
xchg
pop
pop
inc
sbb
hlt
xlat
mov
ret
and
inc
xchg
int
pop
xor
test
int
sub
mov
test
shlb
loope
inc
mov
or
jb
lock
or
push
or
sbb
pop
or
xor
pop
push
dec
sbbb
test
mov
jae,pn
dec
cwtl
iret
pop
in
jp
jnp
and
pusha
inc
mov
add
inc
add
movsl
mov
xchg
lds
jg
sub
outsb
sub
cld
pushf
or
lea
notl
test
push
loop
mov
pop
jecxz
imul
cld
sub
jg
repnz
mov
cmp
or
pop
rcr
ja
inc
adc
daa
jecxz
loopne
dec
jbe
or
xor
int3
movsb
sti
clc
jle
inc
out
push
mov
lret
inc
fisubs
rcrl
movsl
cmp
pop
jmp
movsb
repz
dec
cmpb
mov
inc
clc
in
jmp
not
sbb
int
shl
add
and
ss
jmp
bound
mov
add
ja
out
cmpsl
adc
cs
or
mov
insb
pop
pop
cmp
outsl
fists
cmp
or
add
pop
sbb
loopne
repz
adc
mov
pop
shrb
inc
lea
pop
or
add
sub
ds
or
or
pusha
push
jmp
pusha
sub
daa
pop
mov
or
repz
pop
jmp
sbb
xor
ret
dec
fisubrl
jbe
xchg
popa
movsb
lret
jg
pop
inc
into
xorl
aaa
stos
popf
movsb
out
adc
xchg
sti
icebp
xor
mov
mov
inc
movsl
pop
add
mov
es
mov
call
aas
int
xor
or
ja
outsb
add
xor
fucomp
sub
movsl
dec
ror
or
push
mov
decb
dec
mov
or
cwtl
and
mov
push
mov
mov
call
adc
jp
jle
pop
jecxz
push
add
lods
mov
dec
test
mov
into
adc
cmp
cli
filds
jl
add
sbb
cmpsl
repnz
mov
mov
mov
inc
addl
ret
xchg
dec
jg
test
pop
pop
addl
sub
nop
test
push
mov
sbb
lcall
repz
inc
xchg
out
ja
cmp
sub
and
dec
jmp
mov
mov
loopne
push
mov
push
sub
mov
mov
and
push
lret
mov
jp
add
or
pop
sub
pop
and
in
cmpsl
add
push
pusha
push
push
pop
jmp
test
add
pop
in
and
dec
push
pop
cli
and
dec
jecxz
les
imul
mov
pop
xchg
cmp
shrb
mov
sub
enter
rcll
jl
test
mov
lcall
xor
inc
xchg
cmp
pusha
sti
fs
loop
jbe
fidivrl
dec
sub
pop
inc
jb
nop
fbld
outsl
movsb
ja
cli
dec
xchg
inc
and
pop
cmp
in
or
adc
xor
sbb
outsb
xor
pop
or
mov
and
lret
push
sbb
or
add
scas
fwait
or
adc
or
jmp
lds
xchg
adc
xchg
fmull
popf
push
shl
mov
imul
mov
and
mov
jnp
mov
push
pop
sub
orl
and
push
push
pop
or
jmp
loope
in
pushf
sbb
jl
push
dec
jmp
pop
ret
pusha
sbb
add
out
orb
mov
cmpsl
fisttpl
xor
cmp
or
pop
shl
pop
call
nop
sub
sub
or
loop
sbb
fmulp
dec
mov
add
js
popa
or
or
sub
pop
push
int
sub
dec
jne
jmp
push
adc
pop
pop
inc
scas
sub
inc
fcomps
mov
dec
xchg
cmpsl
mov
cld
inc
push
pushf
cmp
inc
shll
cwtl
adc
push
into
popa
xchg
inc
inc
cs
jmp
add
jg
cld
in
pusha
sub
adc
inc
xchg
cmp
pop
mov
repnz
adc
mov
pop
aam
xchg
test
shr
xor
sub
push
sub
and
mov
jbe
adc
jmp
mov
daa
xor
shr
and
js
movsb
cmc
adc
ret
pop
add
aam
lods
pop
xor
fs
mov
sub
data16
xor
out
xchg
call
int3
sbb
pop
cmp
lahf
add
inc
mov
mov
pusha
xchg
mov
andb
or
mov
cmp
jnp
iret
add
jmp
daa
pop
inc
std
and
or
cmp
cmp
dec
shl
or
inc
les
int3
pop
cmp
sub
add
push
jno
add
add
inc
xchg
dec
cwtl
xor
adc
push
dec
add
cmp
push
nop
mov
cmp
xor
and
cwtl
jo
pop
dec
in
adc
mov
or
pop
add
arpl
outsl
jmp
rcr
jl
scas
inc
stc
add
jnp
add
out
add
cmpsl
scas
or
jmp
add
sub
and
clc
sub
jl
push
mov
nop
cmp
das
aaa
pop
xor
add
mov
ficoms
mov
xor
add
js
sbb
push
add
lods
jbe
lock
jnp
rcrl
lds
xor
push
rcrb
leave
sarl
loop
cmpsl
dec
xchg
cmp
add
or
fistl
fsubrs
dec
mov
add
repnz
xchg
shl
lahf
shrb
xor
add
jmp
shll
add
leave
push
mov
aas
or
arpl
jmp
sarl
fneni(8087
leave
inc
jg
jbe
xchg
cld
push
dec
mov
sbb
jmp
in
inc
cwtl
aam
call
in
stc
mov
repnz
test
sub
clc
mov
ret
add
xor
std
fwait
repnz
daa
mov
dec
jnp
jge
xor
adcl
xor
add
ljmp
sti
pop
movsl
xchg
inc
pop
shl
cmp
outsl
pop
jge
lret
pop
daa
jo
add
push
das
add
lret
nop
mov
dec
inc
shll
add
push
roll
push
add
pop
and
mov
jmp
pop
pop
inc
add
dec
es
popa
popf
ret
jmp
test
dec
push
mov
aas
ret
ja
push
xlat
lods
push
hlt
ljmp
inc
mov
dec
movsb
mov
gs
and
shl
inc
or
mov
adc
in
lods
rclb
xor
addr16
mov
xor
leave
lret
mov
xchg
scas
add
push
outsl
add
jmp
push
push
dec
xchg
mov
scas
pop
xchg
in
cwtl
and
xor
insl
call
je
aaa
push
xchg
inc
mov
pop
int
ss
add
add
ret
fsubrs
fmuls
int
mov
add
bound
dec
sub
pop
add
add
jb
js
xor
xor
sbb
adc
push
adc
and
adc
jecxz
fmuls
mov
jns
xchg
mov
pop
cmp
push
imul
jne
push
aas
jmp
adc
loope
mov
dec
add
mov
push
mov
imul
cmpsb
nop
and
add
or
lret
mov
or
or
jo
dec
mov
adc
rorl
push
int3
push
dec
or
cli
lock
pop
pusha
pop
xlat
pop
adc
and
mov
or
ljmp
stc
pop
xor
fdiv
adc
mov
inc
hlt
mov
mov
push
add
add
pop
pushf
cli
popa
push
xlat
mov
sub
lret
mov
xor
cmp
hlt
or
mov
add
pop
and
jbe
or
jmp
shll
or
ret
fdivrs
push
imul
add
xor
shlb
das
pop
out
cmp
negl
xchg
nop
or
js
loop
jae
lods
push
adc
orb
dec
sbb
lret
test
popf
sbb
or
push
icebp
fs
dec
pop
add
clc
test
rcll
addl
dec
and
push
adc
pop
adc
and
orb
dec
icebp
add
repnz
mov
lahf
dec
shlb
out
push
jb
pop
testb
xchg
loopne
push
pusha
push
xchg
sbbb
pop
icebp
jnp
mov
dec
pop
pop
sub
pop
dec
shl
sub
mov
outsl
jmp
sahf
clc
or
jo
les
sub
add
bound
es
out
inc
sub
mov
xor
dec
and
leave
mov
dec
push
jne
sub
or
push
jmp
incb
adc
or
or
jg
out
mov
pop
iret
cld
and
sbb
pusha
pop
int3
jmp
push
sbb
adc
xchg
aam
std
dec
mov
xor
outsl
add
movsl
test
lret
dec
pop
mov
add
push
dec
dec
pop
inc
pop
dec
sbb
or
stos
push
scas
mov
xchg
sub
lock
add
or
jmp
pop
xor
sbb
mov
testl
dec
jmp
push
push
pop
das
jmp
test
leave
push
xchg
shrl
lods
shr
enter
fmull
leave
nop
inc
push
loop
dec
addl
jp
sub
jmp
das
fidivrs
inc
mov
cmp
push
push
dec
rol
rclb
test
add
add
or
pusha
push
adc
push
mov
addr16
add
addb
mov
cmp
mov
inc
mov
jae
dec
mov
sub
mov
jmp
xchg
adc
jg
imul
clc
movsb
add
cs
rcrb
or
cmp
lahf
mov
jmp
cwtl
rorb
adcb
pop
pop
sub
aam
add
addb
inc
sbb
mov
xor
adc
popa
rorb
movsb
ja
ror
or
adc
jle
int3
sbb
push
cmovp
fildl
push
leave
rorl
or
dec
in
jne
outsb
imul
and
or
pop
ds
pop
pop
inc
sahf
insb
rcrb
sbb
outsb
pop
mov
sahf
lods
repz
dec
sub
clc
or
sarl
xchg
dec
sub
add
and
push
mov
js
pop
xor
arpl
jg
mov
jmp
sbb
sub
add
psraw
pop
pop
lret
rcrl
mov
imul
out
push
or
or
or
das
pusha
ds
sbb
adc
add
outsl
neg
sub
jnp
pop
dec
push
adc
sub
aas
inc
jns
jmp
jg
cmpsl
aad
sarl
push
cmp
ret
or
aam
imul
or
test
mov
ret
sub
pop
mov
add
stos
sub
dec
and
adc
push
mov
jmp
push
mov
repnz
mov
and
adc
add
pop
inc
cmp
test
push
adc
add
pop
jmp
ljmp
or
orl
cs
addb
xchg
xor
outsl
mov
adc
es
mov
dec
orl
outsb
sbb
add
shr
leave
mov
popl
add
lods
pop
jb
ficoml
push
push
dec
pop
xchg
daa
push
mov
xor
call
repz
sbb
pop
movsb
subb
adc
fsts
rorl
ja
or
and
xor
dec
add
or
push
js
das
jmp
lods
das
cmp
xor
imul
and
and
ds
or
aas
cltd
pop
sub
and
inc
or
imul
outsl
and
pop
andl
xlat
xchg
push
jns
adc
pop
nop
popa
dec
movl
fdivrp
fists
mov
cmp
cltd
in
mov
sub
gs
add
dec
add
adc
ds
add
add
dec
sub
inc
pop
cmp
mov
mov
add
or
or
rclb
add
add
push
cli
loop
mov
inc
popa
std
jmp
out
popf
push
adc
pop
rcr
sbb
rcrl
jmp
dec
add
or
pop
bound
outsb
mov
add
mov
push
push
mov
cld
or
loope
xor
hlt
pop
lods
jo
add
add
cltd
mov
push
mov
push
inc
push
push
iret
out
mov
les
push
pusha
mov
mov
das
sub
pop
adc
xor
frstor
call
mov
jmp
lods
enter
xor
sub
jg
xchg
xor
xor
fcoms
mov
mov
in
or
int3
lahf
add
jb
cs
test
push
int
add
in
lcall
dec
stos
roll
clc
adc
fsubl
or
jmp
loop
pop
dec
scas
mov
adc
cmp
inc
jmp
jns
adc
inc
pop
cwtl
pushf
stos
pop
push
movsb
int3
add
or
inc
push
pop
xchg
cwtl
ljmp
movsb
pop
lds
popa
jb
pop
sub
or
sarb
neg
xchg
lea
fistps
cmc
xchg
jmp
stos
test
adc
test
add
enter
mov
movsl
out
inc
out
dec
push
pop
inc
ret
mov
sub
jmp
mov
cmp
sub
aad
aam
push
sub
scas
inc
enter
loop
roll
popl
stc
xchg
movsb
sbb
push
inc
xlat
xchg
dec
lods
call
dec
push
push
lea
shl
addr16
in
shl
push
test
hlt
iret
mov
add
mov
and
ret
imul
pop
push
cmp
sub
dec
lods
ds
xor
repnz
push
mov
addl
jnp
xchg
mov
out
pop
jns
inc
push
pop
sub
flds
in
test
mov
popa
adc
sbb
cs
lret
mulb
pop
pop
push
inc
push
pop
mov
loopne
adc
inc
mov
adc
add
or
lods
and
jmp
add
push
add
push
mov
xchg
xchg
in
data16
mov
arpl
push
xor
push
jmp
mov
shlb
push
daa
pop
sub
arpl
rcll
xchg
pop
ret
push
aas
or
or
shlb
das
or
xor
aas
shll
and
jl
mov
ljmp
std
xchg
push
test
inc
test
in
pop
sub
mov
add
mov
add
mov
clc
pop
or
jmp
sub
push
push
imul
outsb
rorb
push
dec
xor
sahf
data16
cltd
dec
pushf
pop
pop
push
push
add
lods
out
mov
mov
mov
movsl
popa
inc
jnp
mov
mov
jo
mov
loop
out
adc
rolb
sub
cmp
repnz
lcall
in
dec
or
std
inc
or
adc
push
xchg
add
lods
sbbb
cs
push
lds
dec
daa
inc
jns
movsl
push
jl
andl
pop
repz
push
mov
insb
loopne
push
xor
add
in
lock
xchg
imul
mov
sub
sbb
or
adc
mov
iret
subl
pop
jo,pt
jmp
loopne
in
mov
shll
movsl
sub
jmp
clc
push
mov
lret
pop
add
shl
push
fildl
in
call
mov
popf
repz
pop
mov
or
jle
stc
ja
pusha
jne
inc
addl
adc
pop
dec
add
ds
mov
jbe
ljmp
data16
stos
not
or
fstps
int3
dec
pop
push
jo
inc
or
enter
cmpb
ret
inc
clc
add
insb
in
add
cli
rcl
test
fnstsw
adc
sbb
outsl
jmp
cltd
push
push
dec
std
push
jp
scas
push
push
fdiv
push
sbb
lret
dec
nop
adc
or
je
add
jb
xlat
or
adc
int
adcl
orb
movsb
sub
mov
ret
and
fisttpll
adc
aam
int3
add
test
or
pop
xor
or
xor
or
jno
or
mov
shrl
pop
inc
mov
jmp
pop
add
xchg
pop
andl
add
lret
jnp
xor
push
repnz
add
jp
pop
gs
push
pop
xchg
push
jge
add
lock
aam
or
ljmp
lret
or
addr16
icebp
jle
fcmovbe
fidivrs
cld
pop
jnp
mov
adc
mov
cltd
and
pop
enter
inc
out
pop
loop
sti
inc
add
or
or
cmovs
adc
mov
lret
imul
cmc
lahf
cmp
icebp
mov
cld
mov
sub
cmp
int3
mov
jnp
aas
add
hlt
inc
mov
mov
push
sbb
das
ljmp
jno
cli
pop
lea
std
inc
or
adc
test
inc
cmp
subl
adc
mov
jns
fwait
xor
inc
add
cmpl
shll
jnp
sbb
jg
or
dec
jno
test
sub
push
jge
sub
and
adc
or
push
pop
mov
adc
push
repz
adc
mov
movsb
inc
jle
add
ret
call
mov
mov
push
adcb
pop
test
sbb
inc
push
push
cmp
adc
mov
add
add
insb
adc
cmc
pop
pop
mov
mov
push
insl
das
xor
inc
and
jo
fsubrl
faddl
push
push
inc
inc
adc
pusha
stos
in
insl
xor
js
leave
mov
lahf
add
dec
pop
stc
add
jmp
mov
test
inc
push
sub
imul
push
pop
add
ljmp
aam
add
jb
add
xor
add
mov
push
and
pop
and
sbb
push
shlb
stc
push
xchg
push
ja
cmp
es
sbb
xor
stos
adc
and
or
add
testl
or
pop
xchg
inc
movsb
in
sbb
push
pop
aas
lea
flds
dec
xor
push
nop
imul
jg
or
xor
sub
cmp
test
inc
xchg
add
jp
cmp
and
cld
push
enter
add
sbb
in
jecxz
ret
cmp
mov
arpl
addb
jmp
cmpsl
sbb
rep
push
add
hlt
imul
mov
lods
icebp
mov
jmp
cmp
ret
ljmp
xor
pop
add
mov
sti
add
xchg
int
rclb
test
addl
rorb
and
in
pusha
and
jne
jno
loop
sbb
or
andb
pop
movb
pop
fs
add
mov
dec
mov
jp
fisttps
imul
xchg
pop
and
push
push
cli
leave
cwtl
add
jmp
movsl
and
mov
jg
icebp
pop
shll
add
fwait
cmp
leave
movsl
jb
jl
repnz
es
inc
jb
fs
jmp
push
dec
or
shr
xchg
cli
add
pushf
push
not
inc
jo
pop
aam
jnp
popf
push
dec
push
orb
cmc
ljmp
insl
sbb
add
jns
out
dec
add
push
push
xchg
push
xchg
clc
or
jmp
jo
jge
jmp
dec
mov
ret
jbe
mov
fld
add
jne
add
mov
xchg
stc
jo
push
push
or
cmpsb
shl
or
mov
push
roll
xor
out
arpl
iret
and
dec
mov
lds
jecxz
repz
xor
bound
or
test
sbb
rcrl
inc
jnp
nop
pop
add
sub
add
and
test
gs
imull
cmp
mov
lret
add
movsl
push
xor
pop
push
out
ret
movsl
aad
mov
jg
xchg
and
push
dec
push
loope
cld
fidivl
xor
lea
nop
add
adc
and
or
outsb
dec
fcomps
xor
cmp
fisttpll
sub
sti
loope
xor
lret
rorl
or
xor
fbstp
and
xchg
pop
pop
aas
test
pusha
sub
cli
inc
lret
and
mov
popf
pop
pop
and
mov
cld
mov
ret
dec
xor
ljmp
ficompl
ret
or
push
orb
jl
xor
ss
sbb
jge
popf
cmp
inc
and
sbb
mov
mov
dec
addb
sub
pop
push
push
add
xor
cli
sub
adc
fnstenv
mov
pop
mov
jle
jmp
cltd
xchg
push
pop
fcmovnb
addr16
jb
hlt
ljmp
orb
mov
jecxz
dec
xor
mov
add
popf
cmpsb
in
push
mov
mov
mov
test
pop
bound
je
dec
lods
mov
jae
mov
loopne
sbb
add
pop
inc
push
push
adc
adc
das
ds
mov
aaa
inc
mov
mov
pop
int
pusha
mov
or
adc
mov
push
leave
and
cmpsb
sbb
xchg
dec
je
jmp
sbbb
jmp
pop
or
adc
adc
mov
pop
sbb
sarb
push
lret
inc
or
mov
pop
mov
and
jnp
sub
fcompl
popf
sbb
sbb
fidivs
insb
jno
in
insb
add
or
and
adc
or
and
jo
dec
push
movsb
or
cmp
inc
rcrl
adc
push
das
inc
test
icebp
jp
sub
out
cmp
insb
mulb
call
push
and
sub
or
mov
daa
inc
call
inc
xchg
addl
mov
out
fs
push
int
sti
adc
xor
mov
dec
nop
inc
dec
imul
ret
cmc
dec
inc
lret
mov
sub
add
ja
push
loop
xchg
xchg
rorl
sub
inc
arpl
cmp
fidivrs
or
push
cmp
dec
mov
xchg
lods
jg
pop
adc
cld
adc
or
adc
inc
arpl
dec
cs
add
rorb
mov
dec
cmp
push
adc
inc
outsb
decl
adc
jmp
bound
ret
jbe
sub
xorb
popf
or
and
jnp
rolb
mov
add
cmpsb
pusha
test
imul
loop
pop
mov
mov
cld
sahf
add
mov
clc
push
dec
stos
mov
or
ffree
dec
ret
mov
xor
push
shl
repnz
ffreep
cli
data16
jge
jno
xor
ds
adc
sub
cmp
iret
mov
lods
push
test
popa
test
clc
jle
lret
mov
ja
mov
call
lock
xor
sub
out
adc
data16
push
lahf
in
or
cwtl
loope
jns
adc
or
pop
or
sub
dec
sub
cmp
adc
subl
mov
mov
inc
or
xor
mov
and
sbbl
dec
add
dec
push
add
sub
ds
jae
ljmp
xchg
dec
lock
inc
rclb
sub
and
push
xchg
mov
aam
test
push
icebp
mov
push
cmp
fidivl
jmp
xor
cli
ds
es
jle
outsb
insl
mov
and
dec
xor
aas
test
push
inc
shl
mov
cmpsb
js
popl
pop
lods
testl
xchg
lahf
test
dec
mov
inc
int
sub
inc
in
nopl
rcrb
pop
mov
push
mov
or
clc
push
ds
sub
cmpsb
sub
mov
jb
int3
ret
mov
inc
out
pop
inc
nop
repnz
das
ror
mov
clc
sub
and
cmpsl
sti
jae
xor
mov
mov
fidivrl
lods
ljmp
mov
and
or
lea
mov
push
add
dec
cli
test
xor
mov
sahf
fldcw
dec
adc
push
aad
fdivrl
mov
add
iret
or
sbbb
clc
add
xchg
test
cmpl
push
test
loopne
cli
mov
cmp
sahf
xchg
outsl
add
xorb
cmp
sbb
mov
loop
aas
in
adc
jl
mov
mov
outsl
add
adc
mov
fstl
insl
stos
int
outsb
cld
maxps
xor
xor
add
ret
mov
push
push
jo
xor
adc
andb
pop
push
pop
dec
cmp
fisttps
pop
jbe
mov
inc
add
lock
or
popf
popf
loopne
push
pop
mov
jb
push
cwtl
xor
or
jmp
pop
push
inc
in
je
add
or
xor
push
push
pop
mov
daa
pop
and
adc
lods
add
pop
popa
jbe
repz
sahf
dec
in
nop
pop
dec
add
stos
loop
adcb
jb
fistps
jmp
add
and
mov
mov
ljmp
push
mov
xchg
out
in
pop
arpl
into
or
movl
jbe
inc
pop
fwait
mov
add
or
and
jo
push
add
jo
jmp
rcr
add
lret
mov
or
pop
out
fs
add
xorl
rcrb
rolb
test
mov
dec
cmp
pusha
jmp
scas
nop
flds
mov
xorb
ret
inc
or
jae
out
fsubrs
repz
mov
adc
mov
add
inc
lret
call
out
addr16
pop
add
lret
add
testl
cs
jbe
adc
sbb
add
pop
pusha
add
xchg
add
pop
push
dec
outsb
das
cmpsb
add
adc
bound
mov
leave
pop
adc
or
rcrb
cmp
or
jmp
mov
mov
ja,pn
pusha
mov
or
in
adc
imul
inc
mov
and
out
xchg
std
call
fiadds
jg
push
push
and
jno
mov
jno
push
pop
nop
inc
or
jb
push
mov
testb
icebp
pusha
sbb
into
lret
dec
inc
cmp
adc
or
inc
test
imul
and
mov
and
mov
cwtl
dec
jbe
adc
mov
rcrb
aad
mov
sarb
loopne
xchg
loopne
push
push
sub
repnz
test
xchg
mov
xor
sbb
sub
lock
or
mov
cmp
xchg
enter
mov
inc
push
test
cwtl
pop
repnz
adc
int3
push
inc
adc
pop
push
or
push
mov
andb
mov
aam
in
mov
adc
jbe
cmpsl
shll
and
lahf
shrb
icebp
test
mov
jp
dec
sub
add
out
mov
sub
dec
ret
sub
rcrl
insl
adc
jp
dec
ljmp
dec
mov
popa
ret
cmpb
sub
sub
mov
add
out
mov
in
inc
into
push
adc
repnz
out
jmp
xor
ficompl
pop
scas
fmul
repnz
push
in
sbb
aad
js
out
xor
dec
or
mov
pop
in
xchg
jg
test
fwait
cld
aam
pop
push
jmp
mov
xchg
in
mov
xor
mov
sbb
std
add
push
and
iret
xlat
dec
lods
mov
mov
push
pxor
cmc
mov
dec
dec
movsb
mov
pop
pop
push
repnz
rcrl
inc
mov
ret
pop
jmp
mov
or
xchg
andl
push
xchg
sub
and
daa
hlt
pop
xchg
pop
push
xchg
mov
xchg
sub
add
jno
fstpt
push
jmp
xchg
sub
jbe
push
rcr
sbbb
add
iret
xchg
pop
pop
pusha
psubsw
jge
add
fdivs
pop
and
and
xor
dec
add
push
ljmpw
lret
or
ss
push
out
xor
jge
sbb
rolb
in
jb
jle
add
sti
test
cltd
call
lcall
sbb
pop
in
cs
fdivrs
or
push
sbbl
add
pop
test
mov
sub
out
aaa
cmc
mov
add
sub
cmp
and
into
adc
enter
inc
xor
nop
test
leave
pop
jne
xor
add
jl
icebp
pop
xchg
sar
ds
push
add
jbe
sbb
mov
push
jmp
test
dec
mov
push
filds
mov
dec
jecxz
push
jnp
push
neg
mov
rorl
inc
cmpsb
or
cmc
or
adc
loopw
lret
sbb
pop
aas
mov
popl
das
adc
clc
hlt
or
dec
and
or
in
xor
mov
push
dec
adc
scas
adc
outsl
ljmp
xchg
loopne
sub
add
lock
jo
popa
lea
xchg
ljmp
call
and
sbb
fdivl
fs
mov
xchg
das
lock
leave
inc
cmpsb
inc
dec
mov
cmp
ror
push
xchg
jmp
cmp
jmp
in
testl
rolb
in
gs
sbbl
movsb
mov
mov
inc
jne
add
hlt
sub
or
and
jbe
sbb
mov
inc
push
outsl
push
fsubr
sub
push
sub
ja
dec
push
movsb
shl
aas
add
insb
neg
push
int3
sub
out
adc
orb
cli
xor
adc
xor
jecxz
pusha
push
sub
or
enter
or
and
jo
pop
lock
cmc
xchg
iret
push
pop
add
cmp
fcoms
push
pop
sbbl
jo
ljmp
test
jp
call
je
inc
mov
add
out
jmp
call
mov
repnz
cmc
test
popf
mov
xor
adc
pop
mov
xor
shlb
add
jmp
adc
mov
sub
xchg
cli
pop
insl
flds
jmp
hlt
xor
dec
scas
pop
jb
sahf
imul
adc
push
jmp
adc
sbb
bnd
sub
rcll
or
icebp
add
sub
and
lret
ficoml
xor
mov
out
out
enter
pusha
mov
jmp
repnz
fildll
dec
mov
or
inc
fs
lock
mov
pop
cmp
cmp
xchg
mov
pushw
xlat
xchg
xchg
inc
adc
das
add
fldenv
push
pop
pusha
xor
lahf
or
pusha
cs
adc
sub
mov
andb
jle
sub
jmp
test
mov
sub
les
sbb
xor
test
scas
daa
loopne
mov
sub
test
test
popf
lods
jp
jp
mov
adc
xor
icebp
add
testb
adc
push
jmp
dec
sbb
pop
cld
adc
or
rcrb
cmp
jl
cmp
add
mov
push
jnp
pop
pop
imul
dec
pop
sbb
push
pusha
ds
xchg
or
xor
mov
out
jnp
mov
sub
adc
ss
dec
or
or
adc
aam
push
jmp
testb
mov
or
push
mov
sub
sub
pop
cmp
out
mov
fdiv
or
test
xor
jnp
add
mov
add
jecxz
imul
addb
jbe
fldcw
and
inc
and
imul
mov
roll
aam
in
aas
gs
sbb
fwait
rcr
call
les
fs
jne
mov
lcall
cmp
ret
jecxz
cmp
cmp
xor
inc
jl
jae
repnz
shll
addb
xchg
stc
sub
int
mov
mov
aas
push
sbb
loop
pop
fnstcw
test
mov
nop
and
pop
hlt
out
push
nop
or
sar
xchg
sbb
insb
pop
outsb
jmp
mov
push
popa
jecxz
jle
jb
jnp
sub
dec
sub
xchg
and
xchg
fwait
hlt
icebp
jmp
jne
and
xor
mov
mov
sub
push
cld
push
mov
cmp
jge
in
movsl
add
add
or
lds
pop
inc
mov
fldcw
mov
jge
fucomi
sub
sub
push
sub
rolb
roll
insl
mov
mov
sub
xchg
stc
push
mov
notb
sub
mov
jnp
das
and
adc
dec
or
xor
jmp
into
mov
pop
pop
mov
pop
andb
add
adc
mov
dec
mov
sub
pop
or
pop
push
in
pusha
xchg
pop
loopne
movsl
or
mov
test
pop
test
ret
inc
jge
jb
sbb
iret
inc
daa
pop
je
jp
push
pop
fsub
mov
leave
sub
add
mov
test
add
insb
push
pop
xor
in
push
mov
dec
jae
jnp
jno
xchg
xor
test
cli
xchg
popf
test
inc
loope
pushf
imul
lock
fs
movsl
push
aas
xchg
out
test
push
sti
in
add
adc
loop
xchg
mov
popf
data16
out
jo
dec
stc
mov
jmp
into
jle
sub
std
push
jp
lods
outsb
mov
or
repz
pop
jle
dec
and
mov
aas
leave
out
ficomps
sub
adc
xlat
jge
orl
loop
add
cmp
add
xchg
outsl
add
adc
scas
ljmp
mov
aas
rolb
and
or
and
or
or
orb
push
jbe
sbb
dec
mov
sub
adc
add
pop
mov
outsb
outsb
jmp
lds
push
loope
mov
push
jb
sub
lret
aad
adc
scas
imul
loop
js
push
add
inc
pop
sub
dec
inc
gs
xchg
rolb
jae
cwtl
cmp
xchg
clc
cltd
xchg
jb
mov
adc
addl
xlat
shr
add
mov
out
cli
sub
pop
jns
popa
pop
adc
sub
sub
rclb
shr
jb
pop
push
xor
push
mov
mov
and
aaa
movsl
dec
or
add
ds
cmp
mov
lods
push
mov
imul
push
lcall
iret
sbb
lret
xorb
popf
jns
inc
jmp
sbb
sub
rol
mov
stos
lods
xor
pusha
addr16
or
or
xor
push
out
cmp
sub
enter
out
jb
or
pop
out
xor
std
mov
jmp
push
mov
cmc
pop
inc
pop
add
fcomps
pop
push
popf
inc
lret
jnp
and
pop
test
pop
xchg
sub
jns
pop
jecxz
enter
ds
dec
dec
in
pop
dec
orl
in
inc
xor
pop
incb
lahf
imul
ja
insb
pusha
je
add
jnp
aaa
ds
addb
in
add
pusha
inc
sbb
mov
jg
add
lret
push
aam
dec
jecxz
aam
or
sub
lock
adc
fnsave
sub
jge
cmp
rcrl
roll
cmp
cmc
xor
pop
call
out
jae
jmp
sti
cmpsl
scas
add
mov
lock
clc
loop
jmp
push
stos
mov
testl
mov
decb
ret
add
xchg
dec
loopne
push
popf
fcoms
inc
lock
insb
cmp
in
lods
or
jo
or
and
fsub
js
inc
call
add
mov
adc
push
dec
adc
sub
adc
dec
rcrl
pop
xchg
ret
aas
push
lods
insb
je
xor
xchg
out
imul
or
add
lret
lds
xor
filds
xchg
pop
outsl
adc
fucomip
and
xor
jb
adc
push
or
ret
das
jge
lret
jae
out
in
jecxz,pn
jg
jl
mov
in
pop
cmp
mov
testl
insl
ljmp
data16
rcl
sub
fisttpll
and
add
in
jno
les
xorl
xor
xchg
jns
jmp
ja
aaa
int3
loopne
fiadds
pop
push
sub
sub
mov
jmp
out
adc
imul
shll
rorb
sbb
jl
movsl
sub
dec
sub
les
or
and
inc
jmp
or
lret
or
push
inc
and
push
jne
outsl
sub
or
push
xlat
sbb
repnz
push
outsb
sub
sbb
push
jecxz
push
mov
outsb
fcompl
imul
sub
mov
adc
fcomps
aaa
mov
cmp
pop
mov
add
pop
jmp
push
test
push
jmp
ja
mov
movl
push
divl
add
iret
push
fisttps
fs
and
xlat
rclb
fisubs
mov
add
push
ret
push
jmp
mov
rorl
mov
xor
cmp
fcmovnb
lods
add
daa
call
loope
pop
lahf
mov
popa
jnp
or
out
or
pop
cltd
stos
xorl
cwtl
jbe
shll
xor
ret
rclb
lock
mov
add
or
dec
mov
mov
fwait
repnz
xor
test
mov
push
cld
movl
push
mov
and
cmp
iret
jl
frstor
ret
push
xor
inc
add
adc
add
pop
pop
shr
or
and
es
ss
add
mov
jle
es
ret
es
movsl
push
jmp
inc
cmp
repz
lcall
push
enter
hlt
sub
and
scas
sub
jecxz
jb
inc
add
jmp
je
push
and
aam
leave
push
dec
sbb
pop
repz
xor
mov
sbbl
inc
adc
adc
push
mov
adc
andb
push
inc
and
xor
test
cmp
sub
jmp
cld
pop
inc
jp
mov
jo
pop
pop
mov
xchg
jb
xchg
stc
jnp
lods
fwait
push
aas
test
inc
gs
xchg
xor
push
or
daa
push
shl
inc
ljmp
jae
push
hlt
cltd
das
sti
cld
mov
mov
jecxz
adc
sub
mov
cmp
sub
push
and
or
in
adc
push
adc
mov
dec
inc
repnz
adc
dec
cmp
jnp
icebp
push
or
mov
or
add
aaa
dec
aaa
in
or
cmp
sbb
outsl
jle
push
inc
call
sbbl
xor
ja
mov
pushf
rclb
pop
adc
add
ds
jmp
rcll
push
out
add
fisubrl
jmp
jmp
mov
cli
add
add
push
push
pop
inc
sar
sbb
add
push
out
cwtl
mov
add
sub
inc
cmpsl
ds
pop
popa
loope
fnstcw
outsl
mov
clc
popa
cwtl
leave
mov
aam
xchg
ret
push
jmp
out
add
jl
and
in
jmp
mov
cmp
cmp
or
mov
pop
test
jne
pop
ja
lahf
repz
dec
jle
pop
jmp
neg
push
push
dec
pop
xor
add
std
jnp
sbb
test
imul
es
dec
mov
mov
add
lea
add
jns
sub
adc
ret
pushf
mov
pop
sub
push
mov
fcomp
or
loop
pop
jecxz
xor
xor
clc
jge
sub
adc
into
pop
stos
sbb
in
push
pusha
mov
dec
push
fsub
icebp
xor
push
shll
mov
pop
leave
jns
psrad
dec
and
and
jne
xchg
xor
in
adc
or
lds
and
sub
xchg
aam
shl
jmp
outsl
sbb
mov
mov
je
pusha
push
or
pop
push
shl
xor
stos
aaa
mov
cmp
arpl
dec
pop
xor
sahf
test
imul
sub
mov
int3
and
cmovge
in
pop
jmp
lods
push
mov
sub
pop
dec
xchg
ds
mov
inc
sub
adcb
add
xchg
fnstcw
dec
pop
jmp
fsubs
pop
in
or
push
mov
or
dec
jmp
out
add
jp
or
and
pop
lret
pop
xchg
cmp
push
sti
cmpsl
js
pop
gs
mov
icebp
dec
cmc
jle
imul
sub
inc
and
add
ss
push
add
sbb
inc
cli
add
neg
inc
add
push
gs
lock
daa
and
push
dec
mov
icebp
out
cli
mov
xlat
test
stos
xor
push
fstpl
xor
sbb
dec
stos
jmp
push
dec
push
hlt
pop
shr
arpl
cmp
xor
sub
in
stc
rorb
test
hlt
scas
add
dec
fidivl
push
cmpl
fidivrs
or
cmp
test
xor
xor
shl
push
imul
shl
push
jnp
push
sbb
cmpsb
fs
dec
mov
aad
push
out
add
cs
mov
sub
test
ss
sbb
or
or
mov
mulb
in
push
cmpsl
cld
sbb
add
filds
std
jmp
leave
pop
cmp
push
cmp
push
jmp
xor
aas
ror
enter
shrb
not
pop
inc
shl
push
int3
in
xchg
and
nop
xchg
out
add
jle
mov
xchg
loopne
cmp
or
add
add
jmp
adc
aas
popa
cli
fsubrp
jns
sar
add
mov
xchg
out
pusha
lret
dec
adc
imul
or
mov
repz
das
daa
inc
addl
pop
enter
outsb
je
jg
add
sbb
and
lcall
and
sbb
sbb
pop
add
adc
lea
decl
test
or
add
cmp
dec
add
pop
enter
dec
pop
cmp
cmp
icebp
jne
jo
and
sbb
pop
test
adc
xor
scas
lret
push
sub
bound
or
pusha
push
mov
insl
nop
sbb
or
shll
adc
inc
ljmp
cmp
jnp
cmc
clc
mov
jg
pcmpeqw
arpl
ljmp
and
push
imul
aad
xchg
dec
jnp
rep
inc
jmp
subb
pop
clc
cld
xchg
inc
gs
mov
neg
xchg
sub
js
mov
dec
shll
pop
sti
jmp
test
push
arpl
aas
sub
popf
inc
imul
in
js
jmp
inc
xchg
pop
xchg
pop
fstps
pop
call
push
subb
xor
mov
imul
xor
add
push
inc
dec
pop
std
dec
sahf
loop
pop
sub
test
cltd
pushf
add
push
adc
dec
xchg
sbb
jmp
repz
cmc
sub
test
rorl
jae
arpl
push
jp
or
fiaddl
arpl
cmp
dec
or
popa
cltd
pop
pushf
popf
jmp
or
pop
xchg
or
aam
xor
aas
dec
mov
clc
leave
sub
xor
into
mov
jmp
dec
sub
inc
or
push
aas
fs
ret
push
sbb
or
adc
sub
jmp
dec
push
roll
xchg
inc
lock
xor
push
push
and
mov
addb
cltd
gs
fwait
push
mov
dec
dec
mov
jo,pn
ss
out
dec
movsl
add
mov
jnp
inc
xchg
popf
xchg
inc
and
and
dec
xor
adc
jle
fsubrs
sbb
cmp
sbbl
mov
adc
push
push
addr16
ret
cmc
add
cwtl
bound
pop
lock
imul
sbb
fistpl
and
dec
dec
mov
shrl
sub
int3
jg
sbb
pop
jnp
adc
push
push
mov
or
stos
sbb
fstl
scas
push
mov
sub
aas
dec
sbb
add
dec
stos
roll
shr
adcb
inc
sub
pushw
lock
lahf
es
adc
imul
sbb
inc
and
repz
fisubrl
mov
add
jns
add
add
dec
mov
xchg
xor
mov
lahf
mov
insb
outsb
mov
or
sub
xchg
scas
test
push
mov
add
imul
repnz
pop
sarb
fcoml
testl
je
cltd
adc
stc
inc
mov
mov
inc
fbld
xor
fs
jne
repnz
jl
in
sub
icebp
pop
inc
mov
andl
cmpsl
jl
ret
or
repz
pop
sbb
adc
sub
clc
adc
cwtl
push
or
add
hlt
or
sbb
and
pop
or
jnp
dec
fistpll
test
pop
arpl
fdivrs
or
or
dec
pop
or
pop
jp
dec
add
inc
std
daa
out
ja
bound
addb
pop
push
int3
mov
xchg
push
xor
ljmp
jb
test
xchg
divl
add
sbb
arpl
testl
ret
jmp
dec
shrl
mov
call
ds
and
pop
pop
adc
ja
mov
sbb
xchg
jecxz
sbb
ret
adc
or
sub
dec
or
jo
cmc
arpl
lds
jle
popa
add
push
mov
hlt
int3
movsb
imul
jbe
cmp
es
hlt
adc
shl
iret
ds
ret
ljmp
push
lea
xor
fwait
lds
test
cmpsl
jae
mov
or
int
jnp
dec
inc
inc
shrb
sbb
dec
in
jae
ret
push
cmc
aad
inc
jmp
outsb
dec
inc
add
fcomp
adc
shr
dec
sbb
add
sub
add
fdivl
rorb
test
jl
nop
gs
add
adc
xchg
and
mov
mov
fwait
cs
shlb
int
and
ja
les
xlat
push
ss
gs
or
icebp
pop
mov
adc
jns
jne
inc
int3
xchg
jbe
xor
mov
and
pop
aad
xor
xchg
out
das
insb
mov
cmpsb
data16
push
pop
jmp
push
push
push
daa
sarl
inc
bound
pop
mov
fs
outsl
xchg
dec
inc
out
add
xor
inc
rclb
or
lahf
pop
dec
mov
push
fcmovb
dec
in
mov
popf
pusha
pop
out
jle
pop
dec
data16
les
mov
pop
in
imul
addb
dec
mov
add
jmp
and
push
nop
or
sahf
push
mov
mov
scas
shlb
iret
int3
xchg
inc
shll
stc
xor
sub
sub
cmc
popa
jmp
mov
adc
cltd
mov
aas
nop
outsw
jb
add
sub
push
mov
jne
mov
pop
cmp
or
sub
sbbb
cltd
push
and
fisttpll
es
inc
or
in
and
push
lahf
fbld
add
pop
xor
insb
cmp
push
mov
sub
or
add
sbb
jno
jmp
jecxz
sbb
mov
mov
jnp
pop
fucomip
out
rcrb
mov
inc
jmp
mov
mov
sub
ds
add
shll
inc
fisttpll
lret
clc
xlat
push
sub
daa
xor
sarb
xchg
xor
or
pop
or
cmpsl
or
or
sbb
int
sub
pop
sahf
xor
dec
and
icebp
imul
mov
xchg
pop
scas
fs
lods
bound
inc
cmpl
mov
pop
sub
cmpsb
push
cmc
iret
sarl
call
dec
aam
bound
xlat
popa
push
bound
push
loopne
jmp
or
adc
loop
test
add
iret
lods
xchg
mov
hlt
add
lea
sub
lods
addr16
push
add
cmp
pop
stos
in
jg
addr16
xchg
lods
push
mov
leave
dec
sarb
inc
mov
je
sub
mov
mov
jo
xchg
sahf
insb
xor
inc
pop
pusha
outsl
adc
dec
lds
mov
mov
pop
popf
shlb
in
xor
inc
jmp
test
push
orb
jmp
sub
lods
test
mov
add
int3
stc
pusha
push
inc
inc
pop
mov
jo,pt
add
mov
fwait
and
or
sbb
push
push
pop
add
xchg
loopne
sub
sub
cwtl
roll
and
ret
ljmp
divl
or
mov
dec
insl
arpl
push
and
mov
sarl
sub
push
insb
int
xor
xchg
not
loope
xor
out
push
dec
add
sub
push
xchg
lods
fimuls
push
push
mov
and
xlat
inc
pusha
pop
int3
mov
sub
mov
jmp
shr
imul
jmp
mull
dec
jmp
dec
jl
jmp
pop
iret
jecxz
push
push
pop
xor
cmp
mov
out
fisttps
popl
inc
adc
ret
out
aaa
loopne
jle
jmp
andb
mov
lock
cmovs
rolb
dec
in
or
mov
mov
iret
loop
mov
push
rol
and
cmp
add
or
jmp
cmp
inc
inc
icebp
push
fwait
adc
add
sbb
pop
jmp
mov
push
mov
xor
jmp
shll
or
sub
dec
inc
xor
mov
sbb
adc
rorb
pop
add
dec
popl
arpl
mov
pusha
add
cvttps2pi
push
in
inc
jne
and
mov
lods
or
inc
out
and
and
xchg
mov
cmpsb
pop
sbb
dec
pop
repz
jmp
loop
shr
push
push
cmp
mov
insl
adc
and
push
fs
cltd
and
shll
mov
data16
and
pop
adc
or
or
or
pop
pop
adc
pop
adcl
sub
add
cmp
ds
pop
pop
enter
mov
rcl
jecxz
dec
sub
jns
and
std
jmp
mov
xchg
mov
scas
mov
push
mov
adc
pop
pop
lret
xchg
shr
adcb
aad
xchg
and
stos
cmp
outsb
nop
xchg
test
hlt
cmpl
rol
pop
pop
push
add
xchg
adc
cmp
jns
push
clc
mov
add
cmp
dec
addb
mov
mov
jge
adc
and
pop
lock
mov
stc
mov
inc
mov
lahf
push
stos
or
in
out
in
sahf
pmulhw
inc
xchg
jo
cmpsb
push
mov
jo
sub
cmp
and
pop
out
cmp
fmuls
pop
dec
loopne
iret
aam
jmp
icebp
mov
jno
daa
push
fidivl
jae
out
sarb
cmpb
lret
xchg
test
pop
mov
sbb
xchg
sub
clc
pusha
rorl
aas
lods
dec
xorb
lock
push
shl
add
mov
add
xor
jp
mov
or
xchg
cmc
clc
cltd
dec
repnz
push
xchg
stos
sub
push
push
sbb
push
or
mov
imulb
push
out
adc
sub
xchg
xor
xchg
xchg
xor
sahf
or
lahf
rclb
pop
and
push
add
or
popa
cmpsl
outsl
jmp
imul
shll
add
mov
adcb
hlt
adc
cli
add
fistpll
ss
push
outsb
cmp
imul
lcall
xchg
jge
bound
sbb
jnp
imul
jbe
cmpsb
cmp
adcb
xchg
dec
mov
xchg
shll
or
push
jle
and
int3
mov
ljmp
es
add
aam
neg
push
inc
shr
leave
roll
and
pop
mov
rorb
xlat
pop
inc
mov
xorb
sbb
rcl
mov
icebp
pop
fdiv
mov
inc
idivb
mov
sbb
movsb
int
or
cwtl
mov
jmp
enter
sbb
jecxz
cs
jbe
mov
sub
shlb
sub
popf
rorb
ljmp
das
push
or
enter
mov
jns
xor
sarb
pop
mov
inc
jmp
mov
jmp
push
ds
pop
add
imul
sub
or
cmp
repnz
popa
pop
adc
add
push
outsl
add
xchg
stos
adc
add
mov
shll
xchg
aas
or
cs
je
add
sub
aas
xchg
add
add
lds
jge
adc
inc
mov
add
pop
push
cli
mov
cmp
xchg
add
or
adc
jmp
and
push
sbb
ljmp
imul
xor
sub
movsb
xchg
icebp
mov
stc
icebp
ret
xor
popa
cmpb
sub
lods
dec
dec
mov
hlt
stos
dec
orl
or
xchg
sbb
dec
shrl
jg
cmp
cmp
jo
sbb
push
or
sub
pop
sub
dec
rorb
mov
hlt
cmpsl
js
mov
inc
repnz
sub
popf
dec
add
stc
pop
loope
jne
jno
and
repnz
lds
inc
int3
push
jg
das
lock
adc
mov
and
or
push
and
adc
ror
decl
mov
xchg
stc
js
xchg
jcxz
add
push
pop
mov
pop
xchg
xor
jmp
sbb
jg
fdivrs
dec
pop
mov
ret
shr
addr16
lods
jbe
sbb
jo
sub
and
cwtl
lock
add
fwait
dec
ficomps
inc
imul
imul
jecxz
imul
scas
and
sub
testb
mov
inc
stos
out
xor
add
pop
mov
iret
cmp
cmp
inc
or
aam
xor
aad
stos
punpckldq
dec
repz
hlt
push
jmp
or
scas
aam
sbb
ret
jmp
icebp
xor
testb
ret
cmpsb
pop
lcall
xor
mov
movl
rcl
pushf
dec
nop
mov
push
add
jmp
fmull
addb
xor
push
jg
je
mov
push
push
ret
mov
mov
ret
and
push
inc
scas
mov
push
sarl
les
popa
adc
add
mov
sub
test
push
imul
scas
sub
mov
cld
or
pop
cmp
jecxz
inc
outsl
add
jl
andb
jmp
stos
and
fwait
add
inc
rclb
in
rclb
sbb
out
dec
jmp
sarb
rorl
sbb
adc
mov
int
jle
dec
pop
in
fsubr
andb
add
lock
shrb
push
out
or
dec
or
faddl
dec
sub
in
cmp
cld
mov
cld
fcompl
dec
push
adc
stos
push
daa
lds
lods
sti
pop
lods
test
push
jmp
adc
or
xchg
cmp
int
sub
jge
pop
fcmovb
pop
push
pusha
insb
adc
js
mov
test
sub
rclb
pop
sub
adc
dec
cmp
fisubs
mov
jg
push
loopne
ljmp
adcb
ror
outsl
xor
inc
addb
push
push
js
or
in
and
ret
jle
sub
sbb
nop
lds
xor
mov
sbb
push
jmp
mov
adcl
cmp
push
out
mov
xor
es
pusha
cmp
push
das
in
inc
clc
js
pop
inc
mov
sub
test
cmc
cli
hlt
lds
bound
cltd
daa
pop
xor
cmpsb
and
pop
and
and
or
sub
mov
cmpsl
and
pop
jne
lods
dec
jns
leave
test
adc
inc
and
push
stc
lods
jecxz
fsts
adc
jp
mov
jge
push
pusha
push
adc
adc
cmp
mov
in
out
adc
or
inc
mov
mov
and
sbb
jne
mov
loopne
dec
xchg
outsb
or
or
mov
or
fs
add
jmp
jmp
fcoms
popf
sbb
fidivrl
mov
mov
pop
mov
mov
into
pusha
push
add
add
shr
push
out
leave
gs
repz
jae
movsl
mov
cli
push
fwait
shlb
daa
jmp
and
push
loop
or
sub
mov
push
or
int
imul
push
fists
jp
hlt
cmp
stc
lea
dec
or
fcoms
or
jmp
int3
pop
or
clc
jge
and
or
push
inc
push
fs
je
adc
jmp
mov
dec
sbb
sahf
add
das
aaa
andb
lahf
or
xchg
pushf
clc
push
popa
inc
push
push
mov
leave
shll
out
jmp
loopne
aam
mov
add
call
fs
jae
xchg
test
pop
lods
test
shr
mov
pmulhw
dec
xor
mov
incb
mov
int3
dec
inc
adc
jecxz
add
bound
sub
pop
mov
idiv
sbb
adc
add
ret
adcl
mov
pushf
jne
xchg
add
mov
or
sub
or
rclb
jge
popf
push
call
push
pushf
mov
lret
stos
imul
or
adc
push
mov
lock
lret
not
add
dec
and
jbe
sahf
or
or
dec
inc
pop
push
mov
pusha
add
fs
shll
add
rdtsc
push
xchg
rcrb
mov
push
push
dec
push
mov
nop
xor
fiadds
xchg
and
aas
into
jbe
jmp
jne
loope
negl
push
int3
or
xor
in
jmp
repz
cmp
cmovno
mov
pushaw
jg
fdivs
call
rorl
dec
addb
adc
push
jbe
pusha
push
and
mov
pop
add
push
test
and
dec
pop
jb
xor
jmp
lods
imul
je
push
lods
std
add
sbb
mov
clc
cmpsl
scas
xchg
push
mov
push
icebp
rorb
pop
sub
mov
ds
stos
push
sti
mov
lods
pop
in
daa
lret
dec
add
push
jae
add
je
call
pusha
data16
pop
ss
sub
xor
mov
gs
cmp
es
add
js
ret
sbbb
ljmp
fs
push
dec
mov
add
push
cs
sbb
dec
cmpb
mov
adc
fs
mov
or
push
orl
mov
aam
cli
or
popa
subb
shl
sbb
shrb
sarb
and
insl
mov
push
imul
cmpsb
mov
pop
and
adc
add
push
mov
mov
lock
sub
xchg
or
imul
mov
sub
cmp
jb
ja
outsl
ret
fists
mov
cmp
or
sahf
fildll
shrb
xchg
xchg
popa
jmp
sub
daa
pop
dec
xor
cmp
xchg
add
jmp
xchg
mov
mov
cwtl
decb
add
pop
mov
add
bound
add
ret
pop
neg
and
test
repz
nop
mov
inc
mov
jnp
pop
das
sub
cli
push
cmp
aas
jmp
shl
jp
xchg
ljmp
jns
mov
dec
add
pop
lcall
in
add
pusha
js
xchg
adc
pop
mov
dec
cs
add
sub
xlat
cmp
addr16
es
mov
xlat
inc
movb
cmc
cmp
pop
sarl
mov
xchg
pop
lahf
enter
cmpb
mov
sub
jnp
jae
je
and
push
repnz
mov
mov
not
push
xorb
into
push
mov
movsb
sub
mov
sub
hlt
sub
arpl
push
negb
pop
rcrl
out
and
mov
sub
mov
xchg
push
xor
in
push
mov
cmpb
loopne
dec
out
cmp
inc
or
mov
jmp
orl
adc
mov
addr16
sub
mov
and
fisttpll
sub
jbe
jno
pop
and
or
pop
ficoms
popf
dec
imul
stos
jg
shr
rcll
pusha
subb
loopne
push
fcoms
adcb
inc
cmp
xchg
push
ds
mov
xor
les
mov
and
xchg
or
sub
test
lds
or
stos
dec
push
lahf
jno
imul
cmp
out
sub
mov
pop
mov
adc
add
leave
and
rorl
int3
imul
and
and
add
xchg
push
and
sbb
int
insl
fdivl
sub
lret
jo
dec
mov
insb
lods
adc
cmpsl
push
add
cmp
jl
cs
push
cwtl
push
ljmp
jp
cmp
add
add
sub
dec
out
push
lds
pop
jmp
dec
call
arpl
sbb
in
fwait
mov
mov
cmp
add
pop
xor
xchg
hlt
push
mov
pop
and
test
mov
ret
cld
mov
inc
jmp
outsb
leave
pop
dec
cmp
out
xchg
dec
ljmp
enter
ret
jmp
mov
lahf
testb
lods
sarb
jo
scas
adc
aam
adc
xlat
push
mov
fldl
outsb
cmp
adc
popa
xor
pop
ljmp
mov
inc
or
xor
pushf
out
stos
mov
or
lret
push
dec
sarb
loopne
int
daa
and
sbb
mov
push
xor
out
xchg
xor
jmp
sbb
mov
hlt
cmp
in
or
not
out
lcall
mov
jmp
lods
xor
filds
cmp
mov
dec
xchg
add
adc
jmp
pop
inc
mov
jg
fsts
add
mov
bound
cmpsb
imul
repnz
repnz
sub
add
cmc
pop
mov
test
lahf
sbb
add
xor
add
lods
xchg
in
sub
pop
sbb
xor
sub
xchg
imul
and
test
test
pop
ja
jnp
je
xchg
xor
mov
add
and
xchg
aas
sub
xchg
fildll
pop
movsl
test
out
xchg
add
pop
cld
jp
out
xchg
fiadds
gs
out
sub
adc
andb
jbe
sub
pop
pop
push
cltd
subb
pushaw
nop
dec
adc
sbb
mov
push
pop
movswl
icebp
sti
cmpsl
mov
inc
dec
pusha
js
aad
inc
movsb
push
ljmp
repnz
pop
rclb
adc
xchg
adc
popa
cmp
cmpsl
jo
shrb
cli
test
stos
fldl
dec
aas
outsb
push
dec
push
call
cmpsl
dec
pop
popf
out
add
and
out
or
cmc
pop
add
jbe
clc
cmp
fidivrl
pop
lret
ljmp
fsubl
cwtl
les
mov
xchg
push
and
dec
or
aam
inc
pop
out
or
inc
imulb
pop
notb
fcoms
jp,pt
cmp
adc
and
xchg
pusha
jle
xor
ret
add
ljmp
push
inc
cmpsb
lds
in
push
and
scas
sub
adc
ds
pop
js
ds
or
movsb
cltd
pop
cltd
rolb
mov
popf
scas
loopne
cmp
sbb
sub
jno
ja
mov
pop
or
jmp
xor
xor
or
jae
cmp
xchg
je
das
addl
cld
jmp
pop
adcb
and
lds
jo
sub
pop
cmp
loopne
xchg
jmp
xchg
shr
xchg
or
data16
or
nop
add
jae
jp
dec
jno
lea
or
mov
neg
outsb
idivb
ja
add
jb
inc
ds
xchg
or
sbb
xchg
push
push
or
jne
jmp
sub
rep
adc
stc
xchg
bound
cld
jne
add
sbb
cld
sbb
in
idivb
push
orb
shll
cmp
pop
mov
lret
add
shr
fwait
mov
mov
fs
js
sbb
add
xchg
push
ja
test
or
or
mov
cld
rorb
hlt
mov
cltd
divl
es
stos
ss
test
sarb
adc
ret
and
in
push
js
mov
out
nop
pushf
push
testl
jmp
fiaddl
std
pop
mov
sub
aam
ret
mov
pop
repnz
add
and
cld
insb
es
mov
and
popa
and
add
add
pop
ret
imul
test
push
and
loop
ja
lods
test
call
xchg
add
jmp
daa
roll
add
push
mov
cmpsl
jae
push
bound
push
add
lahf
xchg
cmc
cli
pop
inc
andl
add
push
dec
add
in
push
add
add
pop
push
jmp
loop
push
lds
jmp
or
scas
mov
icebp
push
inc
or
jae
cmc
add
and
or
sbb
and
mov
sub
ds
xchg
ret
add
cmovle
fildl
jno
add
bound
mov
or
fnstenv
decl
mov
shll
push
call
dec
and
push
jns
shr
test
leave
scas
negl
lret
jg
rorl
adc
push
push
je
add
fcoms
cld
xchg
sub
sub
cwtl
and
daa
sub
mov
or
shrl
mov
test
pop
add
mov
mov
or
jge
loopne
sub
jnp
xor
or
aas
loopne
test
jne
lcall
js
push
mov
in
pusha
inc
push
out
pop
and
pop
mov
xchg
sub
jp
mov
xchg
mov
ret
push
push
push
pmaddwd
mov
scas
push
hlt
adc
jg
in
out
testb
jp
fbld
sahf
and
outsb
fwait
and
add
test
dec
dec
cmp
xor
jg
mov
sbb
test
into
jmp
jbe
divl
push
xchg
pop
or
xchg
dec
lahf
es
rolb
rclb
jp
and
jecxz
xchg
pop
sub
sub
sbb
push
push
fdivrs
xor
dec
pop
cmpsb
shll
add
jp
cli
test
or
push
add
push
mov
repnz
inc
cltd
loopne
xchg
inc
aad
sub
jmp
frstor
mov
sarl
jg
pop
cmpb
sbb
js
dec
lods
cmp
add
mov
dec
movsl
mov
sub
inc
arpl
sbb
sbb
jb
jmp
aam
lret
ret
mov
pop
aad
sub
and
and
in
rcll
neg
out
add
or
stc
fnsave
lahf
dec
data16
shlb
add
jg
cld
inc
mov
add
addr16
fucomp
dec
xchg
fsubrl
call
mov
add
push
dec
rcrl
and
push
jnp
ljmp
fildl
mov
jo
xchg
fdiv
and
aas
jae
addr16
and
iret
sbb
pop
out
rorl
fstp
mov
lods
add
faddp
out
push
jg
fsubrs
shr
mov
push
jmp
xor
jo
pop
xor
aad
test
add
rolb
and
adc
xor
jmp
push
add
pop
icebp
stos
inc
gs
pusha
iret
add
dec
mov
push
mov
es
xchg
add
pop
xchg
xor
nop
notb
pop
je
sbb
in
ljmp
jo
call
dec
add
lret
arpl
mov
ds
and
push
jbe
push
das
cld
mov
pop
xchg
ret
sbb
jb
andb
mov
test
in
add
push
push
mov
rclb
add
outsl
movsb
call
cmpsl
mov
call
add
cmp
adc
gs
push
push
or
cld
cmp
out
pop
push
das
scas
lret
jle
pop
pop
and
mov
cwtl
jle
ljmp
stc
jmp
sub
mov
cmp
fwait
jmp
mov
loop
mov
add
sahf
sbb
cmp
das
pop
fdiv
dec
daa
xor
fistpl
decl
imulb
push
add
jmp
dec
push
stc
cltd
lahf
out
mov
mov
les
sub
push
test
out
or
sbb
xor
movsb
jmp
lret
ss
inc
nop
dec
mov
or
pop
jbe
out
ljmp
ficoml
lods
push
fstps
push
xorb
not
push
rclb
jmp
mov
jns
xchg
push
pop
mov
sbb
fimull
rcr
or
sub
pop
jle
pop
testl
adc
cmp
insl
pop
aam
pop
ja
xchg
lock
bound
mov
pop
notb
xchg
jno
xor
outsl
lea
cmp
stc
mov
scas
sub
cmp
fists
jg
jle
js
dec
mov
sub
push
pop
test
pop
bound
cmp
sub
cli
arpl
je
mov
enter
xorb
mov
jnp
xorb
jecxz
add
xchg
jg
push
filds
push
hlt
sbb
sub
je
gs
iret
or
xor
and
addr16
ja
inc
int3
imul
push
movsb
mov
dec
jne
xchg
xlat
xchg
xchg
loop
sub
jmp
dec
xor
jge
mov
pop
data16
in
jmp
add
pop
add
enter
movsl
and
pop
inc
daa
push
lea
xchg
iret
sti
mov
ds
rol
or
sbb
in
aad
pop
mov
cmpsl
pusha
push
inc
mov
repnz
rorl
mov
cs
pop
sarb
or
push
jne
cli
and
cmp
sub
jne
sti
mov
add
push
jno
pop
push
adc
add
mov
sub
push
pop
and
mov
popa
dec
pop
es
mov
or
mov
sub
icebp
jno
mov
sub
pop
cmpb
xor
das
jmp
lods
sarb
and
jl
clc
jmp
push
cmp
xchg
dec
movsl
sub
popf
insb
nop
adc
jnp
pop
outsl
inc
push
in
lock
lahf
push
inc
xchg
xor
adc
std
xor
into
jo
vphaddbd
cmc
dec
lods
and
mov
pop
xchg
gs
mov
sub
pop
daa
pop
or
imul
mov
cmp
fwait
mov
fcompp
ror
test
sar
mov
aas
sahf
pop
mov
maxps
sub
jge
pop
pop
xor
pop
adcb
push
shl
sub
sti
push
jmp
push
in
jg
imul
rorb
push
repnz
xchg
out
lea
mov
jmp
sub
pop
sub
lcall
iret
pop
pop
out
ja
add
inc
repnz
add
add
pop
or
jmp
push
push
lcall
fucom
xor
adc
push
test
push
imul
add
stos
lea
xor
stc
pop
and
inc
sub
in
adc
xchg
push
pop
jmp
adc
lret
lods
push
iret
push
inc
and
inc
int
push
dec
pusha
in
push
push
repnz
add
push
mov
sub
sub
sahf
add
mov
jmp
mov
faddp
lods
sub
jge
mov
push
add
pop
xchg
not
fwait
xchg
mov
std
sub
rcrb
imul
movb
add
inc
dec
adc
xchg
adcl
jbe
lcall
push
or
imul
mov
into
or
pop
push
cld
dec
icebp
jmp
add
pop
mov
vmaxsd
testb
cwtl
aaa
and
push
jmp
es
xor
mov
xchg
clc
std
pop
adcl
lahf
orl
push
sbb
adc
mov
jmp
repnz
es
std
push
rcrb
sub
jmp
mov
adc
push
sbb
pop
outsb
xor
or
cmp
shrb
jb
fcompl
inc
jo
xor
dec
xchg
or
xor
inc
pushf
sbb
dec
sub
or
or
and
push
jmp
out
rclb
aad
notl
or
add
imull
xor
push
mov
dec
mov
xchg
mov
pop
test
pop
add
daa
push
xlat
leave
or
dec
lea
or
sbb
mov
mov
rcll
push
push
cs
out
xchg
pop
inc
sub
and
or
fiadds
push
ja
roll
adc
pop
dec
mov
sahf
aaa
inc
jne
popa
inc
popf
mov
push
xor
mov
fdivl
xor
and
inc
push
and
or
dec
repz
xchg
push
push
aas
mov
push
sbb
adc
ja
dec
popa
jmp
ret
xchg
xor
in
and
add
jmp
pushf
clc
rorl
and
fdivrs
pop
iret
push
inc
push
and
pop
mov
je
pop
push
add
xor
fiaddl
jnp
push
in
fdiv
dec
outsl
pop
xchg
cmpsb
xchg
cmp
inc
xor
add
test
or
dec
cmpb
popf
movsb
lock
int
out
jbe
cmp
test
add
jmp
pop
add
ljmp
ljmp
lods
pop
xor
dec
jmp
fcoml
ljmp
jle
or
dec
pop
pop
pop
mov
stc
push
iret
or
ds
and
icebp
sub
pop
push
shr
xor
mov
pop
enter
icebp
aas
outsl
mov
hlt
int
jecxz
sahf
and
push
lret
mov
jmp
push
or
inc
xor
jne
push
xchg
movsl
call
bound
push
sti
xor
lods
fwait
or
push
xchg
negb
add
negb
xlat
push
xor
daa
sahf
or
sub
shr
cmp
loope
addb
outsl
ljmp
push
mov
and
pop
inc
leave
pop
sbb
sbb
sbb
in
jl
or
loopne
fstps
das
push
shll
push
mov
adc
sbbb
and
scas
mov
js
out
pusha
lahf
jmp
mov
cmp
jmp
dec
stc
pop
push
sbb
sbb
add
jle
aad
psubusw
jle
mov
int3
pop
testl
leave
dec
sub
insb
outsl
cwtl
stc
or
cmp
jg
add
rorl
inc
das
stos
das
add
shlb
pop
push
mov
cwtl
sub
lret
outsl
lds
push
mov
sbb
imul
and
pop
jne
add
rcll
add
mulb
pusha
adc
add
dec
aaa
add
push
jmp
fidivl
push
jl
cmp
dec
bound
inc
int3
lods
leave
and
xchg
jg
dec
ficoml
imul
push
and
xor
pop
popa
into
cmp
inc
jmp
push
jecxz
adc
push
mov
subl
mov
and
daa
fidivl
sbb
and
dec
les
xchg
stc
or
ret
cli
mov
lahf
pop
outsb
add
sbb
sbb
cmp
dec
xchg
aas
mov
xor
push
mov
xor
leave
sub
fldl
mov
cld
mov
frndint
fidivs
or
ret
pop
mov
in
xor
in
ds
mov
or
pop
add
push
stos
ret
add
ret
jp
insl
pop
jmp
and
sbb
rcl
push
das
add
orb
xor
popa
clc
or
dec
incb
adc
aas
rol
push
aaa
or
bound
and
adc
arpl
imul
push
jge
pop
jl
add
fwait
cmp
notb
fnstsw
xor
ficoms
loop
and
mov
int
aaa
std
ret
jmp
mov
mov
xor
into
out
adc
mul
adc
fldl
lock
mov
or
jle
rorb
ret
push
jno
sub
fisubl
loop
pop
inc
inc
xchg
enter
addb
dec
sub
pop
ret
mov
mov
subb
mov
push
dec
push
push
int3
leave
xchg
js
xor
ret
es
lods
das
pop
push
add
or
into
cmp
mov
loop
jp
lds
mov
or
adc
mov
ljmp
mov
shll
outsb
iret
adc
shrl
push
add
movl
cmp
mov
sahf
cmp
jne
add
loopne
leave
dec
sub
add
mov
shrb
xchg
adc
jg
pop
ss
add
ss
sub
add
jmp
push
cwtl
lret
dec
push
dec
daa
and
jbe
add
aaa
test
xlat
jb
aad
inc
and
push
cwtl
js
cmpb
mov
pop
sub
pop
out
lret
mov
fnstsw
imul
adc
jbe
ret
aad
add
mov
pop
push
push
and
loop
push
add
xchg
cmpb
jae
out
pushf
or
cmovno
push
dec
dec
dec
dec
inc
loopne
aad
push
sbb
or
push
add
jge
jne
jmp
jecxz
push
mov
xchg
inc
sbb
adc
leave
test
test
push
or
das
test
or
jmp
xor
popf
xchg
outsl
repnz
popf
fsubrs
add
stc
or
fmuls
shl
ret
or
repnz
pop
sbb
out
mov
test
hlt
ljmp
test
sti
push
and
mov
sub
cli
stos
sbb
out
adc
pusha
aam
push
lahf
xor
lret
inc
js
or
add
mov
dec
xor
or
or
and
pop
das
mov
add
aas
pop
mul
movsl
clc
xchg
test
ret
mov
push
mov
fstps
xor
rcr
or
fisttps
xor
dec
fimuls
cmpb
test
xor
roll
rolb
test
cmc
inc
jne
stc
sbb
mov
dec
mov
ja
push
mov
cmp
jno
jnp
adc
mov
sbbl
jno
sbb
push
cmc
aas
pop
lret
push
pop
mov
sub
imul
leave
cmp
les
pop
in
mov
lods
roll
dec
gs
and
cmpsl
pop
test
mov
sub
dec
lea
lock
sub
inc
and
adc
inc
das
push
aaa
notb
or
sbb
daa
pop
ficoml
and
jno
mov
xchg
sub
imul
adc
push
xchg
lods
js
es
cmovo
outsb
fxch
mov
clc
push
xchg
fldt
mov
into
cmp
push
mov
fsubs
pop
push
push
add
je
cmp
mov
cmp
lds
add
push
test
jg
daa
pop
imul
aas
sbb
pop
pop
xor
push
leave
cmp
xor
add
sti
mov
cmp
and
incb
add
test
add
push
push
jmp
sub
shl
add
push
push
mov
stos
aas
arpl
sbb
nop
mov
bound
cwtl
sahf
push
push
mov
in
dec
sbb
out
ror
fadd
sbb
mov
out
cmp
jge
push
add
jl
jg
add
int
bound
in
cmc
or
test
arpl
xchg
mov
insb
pop
in
xchg
daa
mov
out
add
insl
inc
dec
shl
push
outsl
loopne
xor
aas
cmp
jp
and
ret
and
loopne
out
jmp
scas
pop
adc
inc
jmp
or
mov
sarb
mov
sub
push
xor
movsb
subb
push
cwtl
aas
jge
pusha
bswap
mov
inc
cmc
jge
jl
push
sbb
aas
adc
mov
or
cmpsb
push
loop
ljmp
dec
jae
or
mov
inc
xlat
pop
mov
out
roll
xchg
and
or
push
and
xor
jns
pop
lds
add
jmp
or
fmuls
jl
mov
sbb
inc
jne
pop
outsb
pop
and
rolb
and
sbb
push
cmpb
mov
cli
les
cmp
movsb
xchg
and
mov
popf
sub
jle
xor
stos
xchg
mov
mov
xchg
sub
test
xchg
pop
gs
sub
iret
mov
cmpsl
and
insl
sbb
xchg
xlat
subl
outsb
or
and
pop
cld
out
stos
sbbl
cmp
sahf
out
sub
sub
cmp
daa
xor
sub
push
sti
mov
pop
xchg
cmpl
fwait
push
push
jbe
mov
loopne
inc
inc
sahf
fisubl
sub
mov
gs
adc
cmp
or
add
jmp
push
jns
in
iret
push
pop
push
add
fstpl
add
xchg
mov
sub
sub
mov
pusha
inc
or
shlb
testb
imul
or
add
dec
jne
or
pop
push
lods
pop
xor
inc
push
sub
xchg
push
mov
push
pop
in
pop
jle
addr16
std
cwtl
and
dec
shl
dec
aad
cld
lahf
test
lods
cmp
push
orb
shlb
or
xor
adc
mov
dec
mov
mov
outsb
addb
sub
pop
rolb
repz
push
jl
sub
cld
xchg
lods
pop
les
pop
roll
jle
add
push
and
xor
outsl
and
sbb
pop
std
inc
dec
aad
lods
sub
loop
jp
mov
jnp
sarl
bound
or
dec
sub
push
fldt
xchg
movb
pop
out
pop
sub
sbb
ds
or
addr16
popf
call
rorl
dec
jle
pop
shll
push
mov
mov
jmp
xchg
pop
jmp
mov
fildl
or
cs
pusha
xchg
fwait
add
pop
jmp
clc
jne
cli
popa
jmp
mov
mov
pop
jmp
mov
mov
jg
andb
data16
iret
insl
or
add
or
or
lock
jecxz
cmp
lods
repnz
pushw
and
or
shll
outsb
sub
jmp
daa
push
push
stc
sbbb
test
mov
popf
mov
cwtl
sahf
in
mov
pop
push
pop
pop
cmpsl
lea
aas
scas
mov
xchg
sti
add
mov
mov
cmpsb
fldt
sub
pop
xor
or
inc
add
xchg
ret
and
sbb
or
dec
and
and
mov
or
pop
pop
loopne
loopne
sbb
fnstcw
shr
and
pushf
mov
cmpsl
je
pop
push
popa
jecxz
or
pcmpeqw
jmp
xchg
js
mov
rolb
add
xor
jmp
add
pop
sub
cwtl
test
mov
imul
es
add
pop
xor
bound
jb
das
pop
dec
and
mov
jmp
test
pop
mov
loop
dec
arpl
and
testl
inc
pop
lods
fcompl
scas
adc
cmpsb
mov
push
stos
cmp
jns
mov
adc
nop
add
add
std
jmp
cmpl
add
paddw
imul
inc
jge
mov
dec
filds
ds
dec
cmp
xor
sbb
sbb
lahf
xchg
jmp
push
and
cli
inc
aas
ret
leave
mov
fldl
and
dec
nop
nop
out
add
jno
dec
shlb
add
jnp
sbb
adc
pop
push
jne
add
js
dec
xchg
cld
xor
jmp
jns
rorl
mov
addb
xor
push
mov
inc
fidivl
jg
jmp
repnz
adc
or
cmp
dec
or
push
sub
push
xor
lods
or
push
out
pop
lods
lcall
in
adc
push
sub
std
sbb
or
jl
test
subb
aas
mov
or
push
xor
fiadds
cmp
sub
hlt
ja
push
inc
dec
adcb
stos
cli
add
pop
fisubs
or
aaa
fildl
mov
rolb
popa
and
jmp
test
inc
jmp
loope
mov
jmp
add
push
or
stos
loopne
sbb
bound
ficomps
xchg
sub
xchg
scas
pop
push
sti
pop
or
lods
push
lret
pop
sbb
pop
sub
lret
pop
aas
pushf
adc
fwait
sub
dec
xor
dec
das
pop
mov
mov
out
pop
lds
ds
pop
adcb
push
sub
int3
pop
sbb
xchg
outsb
xchg
icebp
scas
addr16
lds
adc
fcomi
fwait
add
mov
je
rorl
and
pop
jge
xchg
pop
mov
xchg
dec
and
fldl
cmp
jp
ljmp
cmpb
cltd
lock
lods
push
sbbl
repnz
mov
sbb
jns
cmp
mov
xchg
rcll
and
cs
jbe
push
stc
mov
ljmp
push
sahf
notl
sub
inc
jge
fistpl
repnz
in
dec
jge
fstps
sbb
subl
mov
mov
or
popa
inc
cmp
add
test
jns
add
sub
xchg
pop
loopne
loopne
adc
mov
cwtl
mov
jae
lret
add
push
fsubp
sbb
add
mov
or
aaa
xadd
mov
mov
std
aad
push
addr16
push
jmp
cmp
cmp
mov
jl
inc
push
cli
pop
pop
bound
imul
jo
mov
mov
mov
dec
cmc
sub
mov
push
inc
and
mov
inc
mov
out
stc
ds
mov
inc
and
test
pop
sbb
inc
shr
hlt
daa
mov
adc
dec
mov
mov
inc
mov
dec
xchg
fldcw
xor
mov
adc
repnz
or
cltd
fadds
sub
orb
hlt
dec
inc
mov
in
lret
push
sbb
movsb
jo
loope
popa
mov
jmp
pop
push
jg
and
imul
inc
loop
unpcklps
test
push
test
mov
lret
push
pop
bound
push
xor
jg
faddp
mov
pusha
and
cmp
mov
add
mov
daa
xor
cld
inc
inc
jmp
xor
push
mov
dec
mov
test
pop
cmc
rcr
xchg
dec
test
pop
push
sbb
inc
push
in
mov
das
fisubs
aad
jmp
push
sub
pop
out
xor
loop
aas
and
cmp
or
xor
incb
fldl
adc
test
mov
mov
mov
inc
int
pop
pop
or
stos
add
jnp
nop
scas
test
and
add
xor
aad
pop
xor
je
call
mov
adc
cmp
ds
loop
xchg
mov
mov
dec
cmp
clc
test
icebp
pop
push
push
repnz
push
cmp
push
push
xchg
add
sbb
or
jns
push
mov
out
mov
test
adc
je
push
xchg
xlat
push
xor
pusha
and
addr16
jecxz
add
cmp
jo
mov
sar
xor
push
cs
mov
push
stos
jo
insb
dec
or
out
cltd
mov
jne
aam
sub
jne
rep
rcl
dec
pop
outsb
dec
adc
fucomip
push
xchg
pop
inc
mov
xor
add
jle
lds
mov
imul
fists
cmp
rclb
rcrl
icebp
into
arpl
pop
xor
jb
add
rclb
xor
xchg
test
adc
lods
mov
add
shlb
sub
xchg
or
and
dec
xor
and
mov
mov
cmp
pop
pop
in
sub
cltd
wbinvd
sbb
pop
xor
add
and
ss
cmp
add
fdivrl
ficompl
add
pop
mov
pop
outsl
lds
mov
lret
or
ficomps
and
or
xor
lods
sub
xchg
lock
jecxz
popa
inc
in
outsl
mov
in
in
add
pop
clc
jmp
int3
push
je
stc
sbb
addr16
jecxz
neg
add
jbe
xchg
leave
cmp
inc
out
lock
aas
clc
scas
loopne
push
rcl
jecxz
push
jge
mov
sbb
lcall
bound
ljmp
or
jnp
xchg
mov
dec
fwait
repnz
push
ficompl
sbb
neg
push
clc
xchg
aam
les
cmp
adc
push
arpl
jo
adc
push
jp
sub
ret
jmp
clc
aaa
pop
mov
dec
mov
mov
add
sub
adc
or
pop
push
push
push
sbb
or
into
stos
dec
imulb
or
xlat
les
pop
inc
cld
fldt
ss
mov
sbb
sub
rol
xor
mov
insb
js
cld
inc
pop
in
push
cmp
das
ds
mov
imul
lahf
push
or
adcb
rcll
in
or
scas
lret
or
sbb
dec
fistpll
or
inc
pop
lock
and
push
add
insl
mov
jmp
in
test
insl
daa
sub
mov
sub
or
std
xchg
jne
sub
or
mov
lods
mov
ja
xchg
lret
je
dec
test
fwait
add
xchg
or
cmp
or
sub
call
adc
jmp
add
dec
arpl
call
call
add
xor
push
jl
jg
jmp
imul
cld
lahf
nop
pop
fidivs
jb
jns
sub
sub
pusha
push
mov
mov
mov
cmc
jmp
or
rolb
mov
cli
mov
pop
push
sub
xorl
fs
inc
lea
and
fiaddl
mov
push
dec
push
pop
clc
inc
or
pusha
call
inc
mov
testl
push
ret
aaa
js
push
add
push
xorl
sar
iret
mov
cmp
push
jmp
ss
xchg
cld
jo
adc
xchg
dec
shrb
dec
sahf
lea
or
and
adc
add
xchg
mov
push
sbb
lahf
cwtl
ja
jo
xor
fisttpll
add
jmp
pop
and
jnp
pop
mov
notb
call
test
in
sahf
xor
js
jb
aas
dec
cld
jne
test
std
xchg
mov
inc
int3
js
pop
mov
push
mov
ret
push
jmp
mov
inc
icebp
adc
fistps
mov
xchg
nop
add
push
dec
jmp
pop
add
mov
mov
ds
test
push
cmp
xlat
popa
xchg
cmp
je
jno
imul
es
xchg
in
adc
and
xchg
cmc
cmp
add
enter
js
dec
adc
incb
pop
push
dec
loopne
xlat
jne
push
jmp
out
mov
adc
or
sbb
mov
jns
jle
rorb
mov
lods
and
les
or
jmp
xor
ret
dec
loop
push
sub
xchg
push
lret
xchg
adc
add
shrb
add
xor
pop
or
jnp
sbb
mov
jl
xor
lret
jecxz
out
push
and
sti
or
call
push
push
clc
popa
jl
and
loop
scas
inc
adc
enter
sbb
repz
xor
loopne
ljmp
adc
cld
shl
hlt
dec
sub
sbb
and
movsb
imul
push
cmp
cmp
test
or
add
push
push
ja
subb
xor
ljmp
cltd
sahf
or
cmp
jp
cmp
inc
scas
test
sbb
dec
pop
pop
mov
rcrl
outsl
inc
fldl
push
mov
push
sbb
push
add
cltd
insb
lcall
xrelease
ret
or
nop
in
push
push
mov
jle
inc
es
stos
or
pop
pop
cmc
or
add
lods
inc
fsubrs
dec
fstps
mov
pop
adc
push
stos
sub
jmp
pop
out
sbb
or
mov
sbb
xchg
push
mov
mov
mov
shrl
push
adcb
dec
lds
mov
jmp
mov
stos
ret
sub
out
and
jge
scas
out
ret
jne
push
add
int3
add
lods
cmp
adc
xchg
sub
xchg
sub
cmp
inc
lret
add
mov
in
inc
call
addr16
push
dec
dec
fldl
lods
push
cmpsb
pop
clc
fs
and
push
sahf
cmc
pop
lcall
mov
das
push
shll
sub
loopne
inc
add
add
inc
xchg
idiv
mov
or
sub
xor
inc
hlt
pop
pop
xor
push
jg
mov
cwtl
or
push
sahf
mov
pusha
and
xor
pop
cmp
sub
cmpsb
push
ret
or
push
or
orb
negb
dec
and
adc
out
mov
cmp
lock
xchg
fisubl
adc
sbb
xchg
mov
call
mov
fsubr
inc
sub
negb
int
push
js
mov
lahf
mul
lret
xor
inc
dec
out
and
dec
mulb
ss
dec
es
add
xor
xor
mov
inc
mov
mov
loop
or
push
xor
insb
pop
dec
add
clc
push
pushf
pusha
roll
in
fucomp
add
mov
inc
or
pop
push
mov
and
or
jg
pop
mov
or
mov
and
xlat
int3
or
or
push
cmc
outsb
rolb
xor
test
adc
jge
scas
add
pop
ljmp
jge
add
mov
add
xor
wbinvd
and
js
add
sbb
cmp
xchg
lahf
pop
imul
lcall
pop
inc
push
ret
or
pop
icebp
lret
cmc
push
cmp
mull
mov
add
mov
sbb
dec
pop
push
inc
cli
add
xor
cwtl
loope
push
in
add
cmpl
pop
mov
aad
ljmp
stc
ret
pop
dec
push
loope
push
jo
les
loopne
sub
mov
mov
addb
pop
dec
inc
and
or
xor
xchg
or
push
lods
data16
shll
cltd
popf
pop
loope
fsubrs
in
xchg
arpl
xchg
lcall
push
in
add
jmp
xor
fildll
mov
pop
pop
les
jno,pt
push
and
in
inc
mov
and
pop
hlt
cmp
push
mov
mov
xor
cmp
sub
das
sbb
mov
sbb
aad
xor
jp
or
xchg
in
mov
dec
xor
daa
xlat
jns
call
adc
push
dec
inc
add
and
or
lods
add
mov
jae
lret
or
pop
push
adc
or
inc
insl
cmpsb
mov
cli
add
stos
dec
loopne
aas
mov
dec
mov
xchg
out
ss
imul
je
fsts
inc
add
jmp
dec
pop
cmp
cmp
sbb
lahf
lds
pop
xchg
push
add
fdivrs
and
daa
dec
xor
and
loopne
pop
push
sti
movsb
xchg
push
sub
xchg
loope
and
dec
adc
ljmp
dec
push
stos
and
push
movsl
rcl
adcl
lcall
jp
or
pop
inc
mov
jle
cmc
and
js
dec
in
inc
cmc
sar
aad
jnp
loop
fnsave
bound
stos
int
pop
test
push
jmp
ljmp
pusha
jns
and
gs
ljmp
pop
sub
and
mov
in
xchg
push
push
push
mov
cwtl
dec
jno
sub
push
out
jle
fcmovnb
rorl
add
test
inc
pop
lock
jle
or
mov
shlb
fs
mov
and
clc
xor
js
imul
mov
xchg
mov
dec
int3
xchg
inc
cmpb
clc
movsl
or
sbbl
testl
jb
mov
fwait
shlb
inc
mov
xchg
leave
out
rorb
add
in
mov
add
clc
mov
mov
ds
enter
add
pop
jo
or
aas
or
xor
mov
mov
fcoms
sub
pop
mov
mov
push
loopne
mov
lret
ljmp
push
mov
mov
xchg
lock
pop
dec
xor
jo
loop
enter
dec
or
add
lods
and
sub
sub
bound
mov
lcall
pop
sub
and
pop
push
xchg
mov
pop
push
enter
and
std
insb
jmp
and
rcrb
testl
inc
lods
in
into
aas
pushf
adc
or
jmp
mov
daa
add
das
lahf
jmp
mov
fisttps
daa
mov
fidivrs
xor
scas
inc
and
cmp
cmc
je
mov
sub
sbb
lods
imul
mov
add
pop
mov
mov
addb
out
mov
jmp
sbb
add
sub
call
add
jge
pop
sub
push
sarl
xchg
fmul
sbb
sub
adc
dec
mov
mov
pop
pop
leave
jbe
in
pop
test
call
mov
cmp
push
jmp
lds
test
insb
push
mov
cmp
pop
daa
popf
or
jb
and
mov
mov
pop
enter
push
int
or
jl
stos
pop
jmp
mov
addl
xor
lods
ficompl
push
xchg
icebp
xlat
fdiv
shrl
ljmp
push
dec
lahf
cld
xchg
push
xor
cs
or
pop
or
scas
addr16
ja
scas
andb
cs
jae
xorb
jmp
mov
sub
pop
aas
enter
data16
xchg
jmp
ljmp
aam
jmp
push
mov
pop
loop
and
push
pusha
or
inc
jae
out
sahf
xchg
mov
cmp
push
dec
test
sub
fs
into
jno
mov
jmp
add
dec
xor
pop
enter
push
mov
and
fisubrs
xchg
hlt
enter
or
pop
pop
ror
aaa
sbb
jmp
mov
mov
mov
mov
bound
pop
pop
loop
pop
push
mov
adc
dec
aaa
js
sti
stos
lret
fcoms
sub
or
jg
stc
or
pop
push
jmp
jle
and
dec
imul
xchg
mov
scas
loopne
jmp
scas
jl
jecxz
xchg
addr16
repz
popf
cmp
sub
das
in
pop
and
dec
jmp
daa
jmp
push
popl
push
mov
sub
jecxz
aam
or
xchg
cli
fstps
into
stc
and
pop
mov
mov
lea
mov
push
pushf
xchg
sub
fimuls
xor
mov
sub
and
adcb
add
fnstcw
inc
mov
popa
push
push
add
lcall
cmp
or
shr
mov
jmp
mov
inc
pushf
lahf
movsl
mov
lock
pushf
and
jne
jle
sub
lret
ljmp
add
jl
daa
cld
fwait
pop
mov
push
outsb
movl
pop
add
in
clc
sub
xchg
add
cmp
jae
movsl
pop
scas
mov
sbb
mov
out
test
add
sub
jo
ljmp
pop
rol
sbb
mov
jge
loope
hlt
inc
xchg
hlt
pop
dec
addr16
inc
test
dec
testb
sarb
aad
jp
aam
aam
jo
adc
adc
push
out
imul
jmp
jmp
fidivrl
add
mov
or
shlb
dec
dec
nop
push
mov
lock
in
sub
or
sahf
dec
das
sub
jge
and
add
pop
insl
pusha
insl
jnp
cmp
outsb
mov
sbb
iret
test
pop
mov
mov
iret
movsl
ljmp
pushf
testb
xchg
jge
fs
or
add
push
cmp
bnd
pop
xlat
dec
rolb
push
std
sbb
xor
mov
jb
cmc
aas
pop
mov
sbb
and
push
push
push
dec
sub
dec
loope
xchg
int3
mov
and
std
and
les
dec
leave
push
test
or
and
inc
push
repnz
and
mov
cmp
dec
sub
sahf
mov
mov
cli
std
push
pop
test
cmp
cmp
xchg
push
sub
pop
adc
push
push
xchg
jmp
sbb
jle
test
js
or
stos
jp
fstl
push
js
sub
mov
insl
sub
add
fstp
pusha
push
cwtl
xchg
or
add
jle
cld
sub
sbb
aas
data16
dec
decb
xchg
repz
push
mov
jmp
pushf
ljmp
fiaddl
scas
insb
sbb
cli
mov
out
cmp
inc
add
lret
dec
push
and
lahf
pop
fstl
cli
fdivs
adc
decl
fidivrl
fadds
nop
push
in
adc
lea
add
imul
sahf
sti
xchg
pop
mov
mov
push
jmp
nop
mov
in
out
mov
les
mov
dec
sub
dec
and
sub
roll
mull
pop
xchg
lahf
hlt
push
pop
popa
dec
jmp
push
jnp
adc
dec
cmp
lret
pop
jl
shr
push
dec
cmpsl
mov
push
sbb
xor
xchg
ja
dec
rcrb
call
xor
cmp
adc
dec
les
push
pop
pusha
lds
xchg
dec
and
push
lds
jecxz
lods
sti
cmc
lods
ds
mov
jmp
pop
sub
fiadds
pop
xor
fdivs
aas
js
pop
in
in
jl,pn
jno
pusha
xchg
sub
pop
mov
shll
call
movsb
in
lret
cld
popf
movsb
xchg
mov
cli
xor
sub
inc
stc
js
sub
stos
lret
mov
sbb
jmp
xor
lea
push
test
and
mov
add
mov
fs
sbb
jnp
push
pop
sub
mov
data16
jb
mov
sbb
add
jg
in
or
sub
jmp
inc
dec
das
pop
pop
popf
ficoms
movsl
sti
les
fidivs
jle
pop
cmpsl
ret
data16
mov
fs
xor
adc
faddl
aad
setno
shr
adc
and
add
sbb
lods
popf
inc
in
pushf
test
mov
dec
and
jmp
xchg
out
or
cmp
cmpsl
popa
mov
mov
push
lret
push
xlat
cmpb
mov
pop
cli
cmp
and
push
testb
pop
mov
cmp
sbbb
mov
pop
xor
lock
stc
pop
add
jmp
outsl
scas
sbbl
dec
dec
add
daa
aaa
adc
mov
fildll
ret
add
pop
xchg
pop
add
repz
push
add
add
add
lods
dec
xchg
lock
lahf
icebp
or
or
int3
xchg
and
popa
into
and
stos
enter
pop
xchg
mov
popa
add
fisubrl
mov
xor
add
inc
pop
lcall
inc
push
or
sbb
push
push
xor
pop
outsb
out
cld
or
rcll
sub
push
jno
cli
loop
pop
xor
pop
neg
push
and
pusha
mov
gs
jmp
add
push
jp
outsb
sbb
push
push
ljmp
inc
push
xor
jl
leave
enter
andb
inc
mov
icebp
enter
dec
sbb
and
push
out
mov
sbb
dec
adc
pusha
sub
push
cltd
orl
fs
inc
jg
or
jecxz
aad
push
cmp
inc
and
mov
push
push
mov
jge
je
clc
js
mov
pushf
jg
or
jae
mov
xor
xor
adc
jmp
lret
adc
out
mov
pop
inc
arpl
inc
cld
or
jl
cmp
jns
cmpsl
cmc
adc
jmp
repz
lahf
xchg
jl
jmp
lods
cmpl
je
shr
sbb
push
cs
pushf
out
addr16
test
push
jg
lds
mov
or
dec
mov
cmp
or
loop
pop
sub
aad
adc
pop
pop
mov
lock
push
mov
loopne
sub
call
loope
mov
movsl
mov
xchg
pop
ret
cwtl
xlat
sub
jl
lret
insl
dec
out
inc
mov
out
adc
inc
push
repnz
dec
rorb
jl
xor
mov
mov
jge
mov
xor
dec
int
mov
faddl
add
dec
xor
sub
ret
xor
hlt
outsb
inc
int
push
or
pop
fs
stos
xor
int3
ret
and
mov
and
mov
lods
inc
push
push
push
loopne
push
push
xor
cmp
mov
cmpsl
cmp
int3
daa
add
stos
add
dec
pop
sub
push
jp
enter
sub
movsb
dec
je
sub
push
daa
pop
pop
jle
and
push
cvtdq2ps
fsubs
leave
inc
sbb
out
rcl
adc
mov
pop
test
ret
cld
pushf
addl
aad
mov
cmp
xchg
push
mov
xchg
in
ret
les
dec
int3
cld
cld
or
xchg
xor
xor
and
or
jb
add
lea
in
and
outsl
mov
push
enter
ret
rcrb
pop
sbb
fiadds
push
add
cmc
stos
mov
adc
pop
mov
pushw
push
adc
fnstenv
mov
sahf
mov
test
int
nop
jnp
pop
or
push
push
movsl
imul
syscall
jo
sbb
pushf
mov
and
pop
mov
xchg
and
into
xor
pop
aam
fstl
cmp
push
xchg
jae
das
rcrb
lahf
gs
adc
jae
jecxz
cmc
xchg
movsb
aam
adc
add
adc
or
mov
pop
dec
lods
or
lds
and
pop
xchg
and
lahf
hlt
mov
andb
xchg
int
das
std
sbb
adc
add
inc
mov
add
xor
push
js
int3
cld
sbb
ret
or
nop
iret
inc
pop
push
jns
mov
add
push
jns
inc
sub
pop
and
out
loopew
cltd
out
cmp
mov
fsts
ja
sahf
xchg
add
imulb
out
pop
xchg
out
daa
push
pop
fnsave
xlat
pop
mov
push
xchg
jge
sarl
das
push
jge
mov
add
jg
dec
pop
aaa
jmp
setne
fldlg2
adc
stc
pop
movsb
das
lahf
loope
xor
or
aas
inc
and
orb
not
push
sbb
js
loop
sub
sbb
in
sbb
js
add
adc
or
lds
lock
test
clc
outsb
gs
es
cmp
jae
cli
dec
push
les
mov
jnp
mov
add
mov
inc
jp
mov
das
pop
cli
icebp
cwtl
jmp
movsb
cmp
jae
leave
pop
testb
jo
ret
or
adc
inc
loopne
addl
mov
mov
out
pop
jmp
or
inc
stc
adc
push
add
sbb
xor
call
push
inc
pop
cli
push
sbb
addr16
xchg
clc
loope
jmp
bound
out
mov
in
jl
test
sub
ljmp
ret
imul
dec
dec
int3
add
add
arpl
dec
es
jbe
repz
jb
je
push
les
cmp
imul
bound
push
push
mov
aaa
pop
rclb
inc
push
lahf
cmp
adc
jmp
outsl
roll
push
dec
add
mov
or
outsb
xlat
mov
pop
inc
add
jo
push
sarb
aas
dec
push
push
pop
or
pop
adc
jb
aad
dec
push
nop
push
dec
inc
mov
cmp
ss
xor
sbb
mov
outsw
or
and
scas
jmp
dec
cli
pop
lock
mov
rcll
mov
sub
sub
loope
mov
lret
inc
lods
sub
add
push
mov
bound
mov
inc
xorb
or
xor
and
ds
or
push
push
mov
jmp
stos
xchg
cli
outsb
sarl
add
jecxz
out
or
push
mov
daa
shll
subl
lahf
jnp
cmpsl
push
lcall
fmull
shr
xchg
inc
orb
jmp
sub
jae
mov
dec
xchg
test
lret
stos
arpl
add
loop
cmp
scas
push
orb
push
mov
or
xchg
daa
pushf
cwtl
inc
add
fcomip
decl
mov
pop
push
pop
push
lods
fdivs
out
mov
ds
adc
shl
adc
scas
or
stos
lods
mov
jp
xor
daa
and
ss
sbb
xchg
loop
mov
push
lock
mov
dec
xor
cwtl
add
dec
pop
icebp
dec
dec
mov
jmp
sbb
jp
push
cmp
push
arpl
push
enter
loop
fbstp
inc
add
jb
push
sub
pop
and
shl
jp
jmp
push
loop
in
hlt
xlat
jno
pop
inc
xchg
sub
or
sbb
pop
mov
push
jns
bound
popa
or
dec
jp
repnz
ljmp
repnz
push
mov
sub
pop
loop
pop
jmp
into
and
jmp
sbb
jge,pn
pop
add
or
xor
es
add
in
add
hlt
jbe
cld
not
popa
or
cli
jmp
dec
out
fs
dec
jmp
add
daa
js
insb
sbb
add
add
sub
loopne
andb
add
push
pop
pop
sub
pop
in
adc
pop
jge
gs
xor
sbb
cld
aad
jmp
out
jmp
arpl
repz
xchg
adcb
cmpsl
flds
cmc
in
sub
frstpm(287
adc
add
jmp
mov
mov
xchg
xlat
jmp
inc
xor
pop
pmulhuw
push
insl
repz
inc
sbbl
or
inc
adc
test
sbb
inc
fs
lock
push
cs
lret
sub
pushf
xor
jmp
icebp
pop
sub
jnp
or
cmp
push
push
mov
pop
mov
jg
int
fstps
icebp
pusha
or
add
repnz
pop
pop
sti
cmpsb
bound
jmp
aaa
xor
pop
cmp
xchg
sbb
jbe
cmp
and
push
pop
pop
ret
int3
xchg
lahf
icebp
mov
push
scas
inc
cmc
jae
push
mov
out
jp
inc
push
mov
dec
mov
sbb
cmp
daa
arpl
pusha
enter
sub
pop
push
pop
add
rorb
xor
add
add
fmuls
mov
xor
xor
lret
mov
dec
sub
or
adc
insl
or
and
out
jns
sahf
dec
aad
repz
push
dec
mov
lret
push
frstor
dec
jmp
xor
mov
dec
cmovge
hlt
jnp
dec
or
pop
sub
sti
mov
inc
add
loope
mov
cli
dec
cmp
dec
sbbb
jl
sbb
jmp
fldl
push
fisubrs
cli
add
dec
jmp
and
pop
sbb
cwtl
jle
pop
int3
inc
cmp
or
in
sub
add
dec
mov
outsl
std
and
jmp
mov
mov
in
adc
add
out
mov
push
lods
leave
cld
or
pop
pop
outsl
stc
cwtl
cmp
push
jmp
es
xchg
and
push
mov
cld
jecxz
jmp
pop
sti
pop
sub
xchg
adc
sub
lret
iret
pop
and
repnz
in
stc
lods
jmp
cmpsl
mov
call
mov
cmp
roll
out
jns
data16
jp
std
sbb
sbb
pop
push
mov
rcll
jbe
add
andl
pop
or
rep
pusha
pop
cmpsl
dec
inc
mov
push
int3
push
adc
sarl
mov
incb
fs
jmp
push
mov
mov
ss
cmp
sbb
inc
inc
cmp
movaps
jae
inc
or
ss
add
outsl
outsb
loop
pop
xor
adc
push
or
shrb
push
shld
adc
inc
mov
call
push
lds
shl
ret
dec
cwtl
sub
in
arpl
inc
hlt
rclb
inc
hlt
xor
gs
inc
sub
add
mov
sbb
and
jge
sub
out
sub
das
add
sahf
mov
ljmp
fisubs
mov
mov
fwait
dec
sub
or
adc
ja
add
lcall
aaa
lahf
sbb
sbb
out
sti
or
cli
xchg
adc
bound
loope
outsl
ljmp
mov
mov
jno
lea
cmp
push
scas
int
push
orb
sub
adc
sub
movsb
mov
mov
ret
add
ret
std
jg
xor
test
je
inc
cmp
and
push
fistps
ss
or
ljmp
add
jb
js
xchg
mov
pop
rclb
loop
or
imul
and
xchg
inc
pop
clc
cltd
sbb
in
scas
mov
lret
out
add
add
out
or
cld
and
les
jnp
sub
push
mov
pop
pop
cmc
inc
xchg
mov
mov
sub
mov
lahf
ficoml
push
cmp
aaa
in
or
pop
adc
dec
xor
test
xor
mov
mov
test
pop
mov
shr
in
pop
push
and
sbb
and
aas
pminub
psubb
lret
fildll
icebp
and
mov
sbbl
cmp
std
or
sarl
out
pop
pop
pop
inc
mov
int
cmpsl
pop
adc
sub
mov
cwtl
jo
push
push
icebp
jmp
add
mov
mov
jne
ljmp
subb
ret
lret
fcoms
dec
cs
fisubl
repnz
pusha
sbb
mov
and
cmp
ds
mov
cmp
xlat
xor
or
loopne
div
push
lret
lds
mov
iret
add
insb
lock
js
xor
add
shl
add
or
or
adc
std
in
aas
add
jge
stos
or
test
test
dec
std
pop
stc
jge
cmpsl
adc
sub
leave
and
jl
push
loope
adc
bound
ds
add
add
inc
ficomps
pop
push
in
adc
xor
int3
pusha
or
lret
jmp
push
aad
cmpsb
push
jmp
in
xchg
sub
sbb
push
dec
push
add
daa
jmp
hlt
nop
push
push
push
out
sub
xchg
sti
mov
ja
dec
jae
test
test
loopne
sbb
imul
loopne
jo
lods
das
sbb
andl
fidivrs
pop
xchg
add
xchg
aaa
and
fisttpll
or
sbb
dec
clc
js
mov
stc
lds
ficomps
mov
push
mov
pop
push
sub
movsb
pop
shrb
or
pop
inc
or
sar
or
orl
inc
mov
insb
mov
pop
inc
sbb
adc
mov
ret
mov
pop
push
push
cld
lcall
xchg
xchg
add
imul
cmp
xchg
or
xchg
bound
or
jo
jmp
cmp
cmp
pop
cmp
mov
or
imul
xor
out
or
pop
hlt
cvtps2pi
aam
sti
push
lock
sbb
lret
mov
add
mov
repz
sub
sbb
xchg
in
adc
adcb
jp
paddsw
adc
add
mov
int3
cli
adc
lahf
adc
les
inc
popa
jnp
mov
inc
idivb
fwait
adc
fldl
bound
and
add
add
jbe
jle
add
arpl
jmp
mov
or
data16
sbbb
int3
mov
mov
arpl
mov
sbb
test
or
push
add
sbb
test
outsb
add
cmp
inc
sbb
inc
push
inc
mov
inc
int3
push
inc
test
inc
out
inc
jae
jmp
xchg
inc
sbb
leave
adc
dec
push
loope
test
sbb
shll
aam
mov
or
sbbb
rol
and
scas
or
outsl
inc
enter
fildl
lock
push
cld
lods
or
movsb
mov
out
mov
movsl
bound
aam
mov
aaa
or
or
fistpl
adc
adc
or
mov
adc
push
and
dec
jbe
sbb
or
testb
push
add
add
and
push
jl
ret
mov
or
lret
xchg
xorb
inc
or
jecxz
mov
push
and
adc
mov
jle
cmpsb
lret
int3
mov
ret
or
pop
mov
adc
mov
adc
push
xor
test
add
adc
cmp
mov
xchg
push
xchg
add
pushf
mov
xor
and
inc
jbe
bound
pushf
pop
and
xchg
mov
movsl
adc
mov
rorb
cmpl
ja
dec
lods
mov
sarl
xchg
or
or
cmp
mov
or
cld
call
adc
mov
test
sub
add
adc
cmp
inc
leave
jne
testl
shrl
shl
mov
dec
xor
andb
repnz
ds
push
aad
inc
adc
or
in
add
inc
push
das
lds
in
dec
dec
lods
or
mov
cmp
dec
jo
mov
mov
test
negb
push
push
pop
xchg
cli
ret
jb
push
mov
sub
daa
sahf
jge
stc
or
aas
fstps
or
mov
test
pop
mov
jl
jl
pop
mov
jb
mov
pop
mov
sbb
imul
ret
push
inc
jmp
add
aas
pop
dec
lods
inc
out
jne
xchg
xlat
icebp
xor
or
rorb
mov
bound
in
sub
xor
outsl
test
rorb
jge
push
out
xorb
sahf
mov
popf
dec
cwtl
mov
cmp
andb
dec
leave
add
mov
or
jge
int3
lock
hlt
xor
adc
jnp
xchg
adc
push
mov
mov
pop
inc
mov
xlat
sub
arpl
cmp
dec
test
cltd
inc
fldl
mov
add
push
mov
loopne
adc
adc
scas
push
call
daa
xchg
sarl
mov
xchg
sub
add
outsb
test
popa
inc
pop
dec
push
cltd
das
and
adc
pop
push
mov
mov
sub
or
mov
add
xor
inc
adc
shrb
dec
sub
cmpsl
cmp
scas
pop
add
cmp
cmp
das
lock
xor
inc
mov
fisubl
cld
scas
dec
rorl
jno
outsb
mov
push
or
adc
sti
push
push
cvtps2pd
xlat
rolb
aas
repnz
sbb
loop
or
adc
jmp
ljmp
test
in
aaa
xor
cs
dec
mov
ret
add
ljmp
enter
das
scas
enter
and
mov
xlat
shl
and
dec
jp
xchg
mov
mov
inc
add
movsl
outsb
mov
lods
xor
or
xchg
inc
jb
aam
jb
lods
es
push
mov
xor
dec
xor
pop
rolb
inc
divl
sbb
sub
push
loopne
dec
jmp
neg
cmp
adc
jb
mov
xchg
jo
addr16
mov
and
shrl
cmp
lds
mov
sbbb
pop
ds
out
sub
push
jno
lahf
jb
and
jns
push
fnstsw
sub
push
dec
and
push
filds
sti
daa
out
pusha
sub
and
jne
cltd
xor
and
lods
adc
pop
xor
in
rorl
push
testb
mov
pop
xchg
mov
clc
add
xlat
jecxz
lret
ds
cmp
cs
rorb
pop
dec
fs
or
jbe
lahf
jns
shlb
dec
rcl
call
mov
call
or
ffreep
cltd
mov
inc
jmp
ljmp
ficomps
pop
lods
enter
mov
mov
std
xchg
das
movsl
push
out
and
pop
sbb
shl
xor
shll
aas
dec
or
dec
mov
inc
std
pop
in
mov
push
int3
stos
xor
test
je
jne
ja
add
lods
cmpsl
les
or
push
fildl
lcall
mov
stos
adc
call
xchg
dec
mov
ret
hlt
and
dec
lcall
in
xor
xchg
popa
cli
jnp
sbb
mov
sbb
pop
cli
jg
ret
mov
gs
add
sbbb
adc
xchg
and
cld
jns
in
jns
xor
int3
push
mov
cld
inc
add
jp
cmpsl
pusha
in
xor
das
sub
jl
cwtl
insl
push
testb
rorl
arpl
push
push
movsb
sbb
inc
in
add
int3
das
sub
int
add
add
mov
push
pushf
in
out
add
call
cmp
pop
cmpsl
jp
push
pop
inc
loope
push
sahf
sbbb
cmp
pop
add
or
int
pop
rolb
mov
outsl
in
xor
rcll
rcrl
adc
fmulp
lock
js
fidivl
stos
jmp
push
jmp
inc
das
inc
ja
cmp
pusha
xor
pop
add
pop
jmp
add
insl
test
xor
gs
dec
adc
inc
add
mov
aas
mov
cwtl
jns
push
push
mov
mov
cld
xchg
dec
insl
dec
movsl
and
iret
inc
mov
adc
inc
inc
pop
enter
sbb
dec
add
adc
clc
push
xchg
cld
insl
outsl
cmpsb
adc
cmp
or
test
mov
pop
or
fsubr
stos
mov
cltd
movsl
addr16
repz
jbe
cwtl
test
loope
and
subl
imul
xchg
jmp
cmp
adc
lret
and
add
sub
out
xor
and
ret
adc
imul
popf
or
std
pop
pop
lahf
push
shl
push
dec
push
push
jmp
mov
pop
pusha
or
xchg
add
test
addl
push
xor
sti
jl
imul
or
pop
sahf
xor
lahf
shr
lds
outsl
sub
push
addb
notl
lods
dec
dec
lcall
out
jnp
test
int
psubb
adcb
aad
and
cltd
int
fdiv
or
out
jo
out
aam
aas
lcall
lret
push
xchg
sti
xchg
jne
jae
xor
shrl
or
jmp
scas
imull
leave
movsb
int
dec
test
pop
pop
ja
inc
jmp
ret
fnsave
in
add
aas
test
jp
dec
nop
push
pop
adc
jmp
icebp
push
add
adc
add
in
sub
sbb
push
test
lret
or
inc
pop
and
jp
cmp
cmp
and
mov
inc
inc
mov
ret
dec
andl
in
inc
loop
sbb
jmp
aam
add
push
push
jl
xchg
in
lock
pop
scas
bound
movsl
xlat
and
lret
in
mov
and
jbe
xchg
inc
xchg
push
xchg
pop
in
pop
es
push
pop
aas
mov
cmp
inc
test
sbb
repnz
mov
or
push
shl
add
fs
or
mov
imul
mov
xchg
stos
sub
icebp
das
iret
lds
cmp
cmpsb
mov
jo
jae
leave
add
push
das
into
push
inc
sub
dec
out
stos
cmpsb
mov
fldl
hlt
ljmp
ds
cmc
test
mov
enter
outsb
xor
jmp
mov
test
add
dec
inc
pop
or
jmp
mov
add
sbb
test
xor
fimull
ljmp
push
mov
cmp
pop
push
andb
pop
sub
std
pusha
pushf
or
add
testb
test
lret
or
xor
or
fistps
xchg
jl
loopne
mov
js
push
inc
dec
jmp
jecxz
out
orb
das
mov
push
fwait
and
int3
xchg
in
add
push
add
fwait
jg
dec
mov
aam
push
mov
dec
push
or
imulb
add
sub
inc
and
sbb
cmp
xchg
cmp
xor
dec
vpsubq
mov
cmpsb
ss
or
or
ror
outsb
or
mov
xor
fstpl
jo
add
maskmovq
shr
dec
outsl
xchg
dec
adc
into
pop
xlat
imul
sbb
insb
jne
and
out
mov
pop
and
mov
cmpsb
push
lahf
jns
bound
pop
fs
cmc
int3
das
clc
movsb
pop
cmp
adc
or
jg
cmpsb
repz
fstpt
fldl
int
lods
sbb
mov
sub
das
push
cwtl
mov
mov
xchg
mul
ret
or
cwtl
lods
sub
jmp
test
outsl
pop
mov
push
jbe
pop
cmp
mov
dec
into
cmp
or
adc
jl
pop
xor
push
add
mov
stos
pop
lods
fstl
leave
push
cmp
or
push
mov
int
sbb
push
add
mov
pop
imul
ss
push
sahf
insl
jp
les
sbb
pop
or
outsl
add
mov
cmp
mov
loopne
popa
xor
cmp
push
fbld
jbe
out
inc
addl
mov
je
mov
addl
jge
sub
scas
ljmp
jnp
fwait
add
cmp
sahf
jnp,pn
js
dec
pop
in
pop
mov
outsl
test
and
scas
test
repnz
adc
adc
jmp
add
fstp
inc
mov
jmp
adc
push
mov
add
xor
mov
ja
cmp
xchg
imulb
xorps
or
pop
pop
clc
sbb
push
or
mov
cmc
cmc
mov
aam
loope
mov
jbe
adc
mov
sub
pop
inc
add
or
jmp
fisubl
jmp
push
test
mov
sub
mov
jmp
scas
pushf
and
gs
or
subb
pop
and
sbb
add
out
popa
mov
add
sarb
sub
jl
mov
faddl
xlat
andb
jmp
pop
clc
ret
push
sub
jmp
add
out
add
cs
pop
push
push
push
push
sub
lods
movsb
adc
ds
outsl
mov
jns
jp
jns
cmp
and
push
cs
lcall
lret
pop
inc
fisttpl
sub
cmp
ds
adc
jge
mov
or
jle
xor
sbbl
mov
mov
call
pop
stos
jns
jle
lods
add
icebp
jp
pusha
add
mov
sub
movsb
dec
push
nop
and
xor
and
mov
int3
pop
shl
or
sub
addb
setl
fnstcw
push
dec
xchg
jmp
lcall
shrl
popf
fisubrl
cmpsl
push
cmc
into
in
sub
ss
pop
push
adc
imul
rolb
push
ret
sub
or
andb
movsb
jge
mov
sbb
add
push
add
pop
rcl
or
jecxz
nop
fmuls
adc
push
inc
orb
lret
pop
xorl
ljmp
cld
mov
sub
add
jnp
int3
in
pusha
repz
mov
sbbb
lret
or
movsb
aas
mov
dec
adcb
inc
das
fnstsw
xor
sbbl
pusha
or
mov
and
mov
adc
mov
xor
pop
xchg
mov
inc
int
push
movsl
fsubrl
rorb
xor
dec
out
pop
mov
scas
lahf
push
xor
jmp
adc
roll
add
and
push
in
cmc
inc
test
dec
or
cltd
or
add
xor
xor
jne
push
mov
or
and
xchg
cmpsb
mov
loopne
mov
clc
cmp
add
and
inc
mov
test
lods
pop
adc
xor
in
imul
cmp
xor
add
test
pop
sbb
ljmp
add
dec
adc
push
cmp
and
ret
test
pop
imul
test
out
cmp
and
repz
shlb
lcall
movl
pop
aam
pop
pop
or
fsubl
shlb
ja
mov
lahf
out
enter
movsb
sbb
adc
imul
fdivr
mov
dec
jge
sbb
mov
xchg
pop
push
push
mov
pusha
mov
add
ljmp
cmc
xlat
xor
ja
inc
xchg
jo
sbb
pop
xchg
sti
adc
pop
fs
je
cli
xchg
ret
xor
jb
nop
adc
jle
mov
js
mov
xchg
dec
cmp
pop
mov
add
inc
push
shrl
and
mov
jmp
dec
cmp
lock
push
pusha
dec
or
sbb
push
sub
mov
dec
push
jmp
mov
xor
pop
pop
or
repz
or
call
lds
repnz
fs
mov
imul
xchg
or
jecxz
push
mov
in
or
mov
les
inc
and
pop
jl
btr
and
push
adc
inc
pusha
pop
push
mov
sahf
push
inc
push
sbb
rcr
adc
stos
es
sti
mov
movsl
mov
mov
pop
sbb
xor
mov
outsb
and
aad
jbe
daa
lcall
mov
add
out
sub
sbb
pushf
add
or
pop
adc
in
ret
pop
and
or
nop
add
mov
cli
addr16
add
loopne
jge
or
push
nop
ds
lret
push
sub
pop
fstps
mull
outsb
jmp
sbb
ficoml
stc
lret
push
pop
jo
pusha
pop
dec
pop
dec
mov
add
jmp
pop
pop
mov
test
jmp
sub
pop
popa
pusha
cmp
repz
leave
sub
notl
add
nop
sub
rcrl
fisubrl
lds
dec
jne
xchg
push
jp
push
fstps
insb
movsb
cwtl
jge
sub
jmp
adc
mov
push
push
jg
fsub
lds
ja
and
cltd
push
nop
xchg
jnp
jge
sub
dec
rolb
pop
cwtl
rclb
pop
push
add
enter
jmp
enter
cwtl
sbb
andb
sbb
dec
int3
cmpsl
xchg
pop
mov
dec
inc
jo
jmp
xor
imul
inc
or
lret
adc
jbe
dec
dec
push
icebp
jo
inc
aas
or
add
jmp
loop
mov
sub
in
add
neg
adc
or
xlat
xorl
adc
sub
loope
push
mov
lahf
lret
sbb
test
dec
inc
mull
mov
or
imul
dec
add
pop
or
jmp
xor
mov
rcrb
push
sarl
int3
imul
add
mov
xchg
pop
xor
out
pop
jg
psubsw
lcall
push
push
cmc
push
sbbb
push
adc
xchg
and
add
sbb
leave
adc
jb
sbb
lds
sub
or
adc
fs
xchg
xor
add
jmp
mov
ds
adc
clc
movsb
out
test
clc
jg
fsubl
filds
hlt
jle
inc
jne
call
cmp
dec
icebp
jl
add
bound
cld
and
jmp
call
add
mov
xchg
out
pop
cmp
pop
es
push
add
inc
add
cwtl
cmpsl
pshufw
jnp
push
push
mov
jecxz
shr
test
add
pusha
lahf
gs
js
mov
adc
or
sub
and
add
or
inc
shl
fcomi
or
pop
ret
sbb
not
shlb
xor
add
stos
xchg
lret
jne
enter
push
mov
and
jmp
inc
adc
or
add
ret
mov
mov
sbb
push
cmpsl
hlt
or
cld
das
aam
loop
aam
mov
insl
and
jle
js
test
testl
nop
jle
daa
mov
xorb
mov
push
int3
pop
sub
jle
or
sbb
sbbb
cmp
ret
and
stc
pop
repnz
inc
shll
dec
xor
in
lret
jp
in
xchg
or
xchg
push
cmp
mov
adc
in
add
xor
or
and
les
mov
add
mov
xchg
pop
mov
neg
jmp
arpl
add
movsb
adc
nop
fs
ja
cs
in
jmp
jge
daa
hlt
cli
pop
mov
mov
adc
outsb
xor
out
pop
rorb
js
and
addr16
dec
pop
cwtl
mov
xchg
enter
adc
cmc
add
and
push
out
jnp
mov
std
jecxz
mov
xor
imul
dec
ds
test
mov
push
mov
pop
jno
roll
or
aaa
xor
mov
enter
mov
loope
xor
add
outsb
or
fstl
in
scas
mov
sysenter
jmp
jge
xchg
aas
out
add
ror
sub
loop
jl
adc
or
push
mov
push
dec
add
dec
jmp
or
les
lods
pop
lcall
adc
sbb
fsubs
out
jecxz
daa
add
or
add
stos
dec
mov
dec
filds
sarb
xchg
mov
fucomp
add
and
add
loope
push
fstpt
hlt
leave
push
lahf
xor
std
add
push
enter
sbb
adc
mov
loop
daa
es
bound
fadd
mov
and
add
push
xor
mov
mov
popf
clc
mov
mov
iret
inc
mov
lahf
mov
xlat
add
jl
jne
mov
mov
out
ret
je
cmpb
xchg
hlt
test
jno
js
jnp
sub
pop
push
xor
rcrb
sub
cmp
ret
mov
pusha
adc
cmp
mov
icebp
jnp
insl
and
dec
imul
aad
and
pop
lahf
je
pop
lcall
push
das
dec
xor
cs
dec
push
test
push
test
sub
scas
mov
bnd
sahf
jmp
push
jne
hlt
fwait
outsl
xchg
dec
xor
jmp
xor
es
pop
cmpsb
orb
loop
cli
mov
xchg
and
pop
sub
stc
xchg
cmpsb
or
mov
and
xchg
repz
pop
or
mov
call
inc
jecxz
mov
andb
push
es
mov
cmp
sbb
loopne
jmp
and
adc
and
pop
jmp
aad
faddl
mov
add
sbb
or
sub
inc
mov
mov
rclb
pusha
addb
jb
inc
cltd
mov
aad
xchg
sti
jmp
push
mov
icebp
mov
mov
es
push
ja
jge
test
sub
nop
pop
dec
inc
push
sbb
pop
lret
or
pop
scas
repz
lods
push
mov
aas
daa
pop
push
push
fisttpll
rclb
fcoml
add
lods
in
cld
imul
sahf
imul
and
jl
dec
push
sti
pop
pop
or
scas
and
in
out
and
add
loope
mov
xchg
ret
or
inc
out
ljmp
xchg
movsl
out
sub
daa
push
pop
push
dec
lcall
in
mov
sub
push
mov
test
pop
mov
jne
cmp
into
and
pushf
add
scas
sub
mov
das
cmpb
pop
in
inc
cli
adc
mov
cld
fcmovb
lret
not
sarb
ja
or
inc
push
cmp
push
inc
loope
test
addb
lea
push
mov
test
clc
add
jbe
pop
push
inc
loope
fimull
jmp
sub
pop
out
cmp
cmp
sbb
dec
xlat
pusha
xlat
or
fwait
cld
sahf
jle
insb
je
stos
hlt
int3
push
push
fmuls
sub
sub
scas
fmull
mov
pop
subl
adc
mov
and
pusha
lods
inc
pop
xor
pop
js
lret
push
add
xor
inc
add
push
rcrb
inc
xchg
jmp
pop
pop
add
lret
repz
loopne
imul
inc
jmp
push
lods
dec
mov
jl
mov
push
shl
mov
lock
aaa
jno
test
lods
movsb
inc
sbb
xchg
loop
cli
jne
negb
mov
xor
mov
addl
dec
and
or
sbb
aas
test
inc
mov
lret
mov
pusha
lock
jmp
test
pusha
add
xor
mov
loopne
shlb
inc
sahf
or
dec
int
or
jmp
push
pop
lods
xchg
sbb
pop
mov
jae
rclb
call
xor
mov
push
dec
or
add
lahf
mov
add
dec
dec
dec
pop
pop
mov
mov
arpl
lahf
mov
rcr
push
jg
mov
out
popa
pop
push
enter
in
lock
xor
jle
cmpsl
jp
add
pop
shr
mov
add
out
repz
and
or
dec
and
and
xlat
inc
or
add
xor
dec
loopne
add
and
incl
cmp
pusha
jmp
and
dec
addr16
cmp
pop
sub
subb
add
add
ficompl
jle
outsl
jmp
add
xchg
sub
stos
mov
pop
xchg
inc
push
jne
cmpsl
je
pop
mov
pop
lret
mov
jo
icebp
pusha
mov
pop
pushf
daa
add
push
add
adc
inc
and
cmc
inc
mov
push
sub
mov
aam
les
sar
push
mov
mov
mov
lock
popf
add
adc
lret
je
js
lcall
inc
inc
rcll
notb
notb
mov
or
jo
lock
repz
pusha
scas
ret
push
sbb
push
push
std
test
xor
or
ja
inc
jle
push
or
jl
jmp
add
xchg
cld
mov
cmp
jmp
aam
jo
cs
adc
fsubr
cmp
jle
mov
lods
fildl
mov
lock
cli
pusha
cld
sbb
jg
cwtl
les
in
aas
jg
xlat
lds
push
sbbl
dec
dec
mov
fcoml
mov
movsl
cli
popa
inc
or
add
ds
nop
rorb
scas
cmpsl
mov
out
push
xchg
mov
and
sub
mov
popa
sbb
xor
push
push
dec
add
and
stos
add
mov
add
in
xor
xchg
jmp
and
pop
stc
addr16
jne
test
dec
adc
jae
loopne
mov
xor
mov
ficoms
sbb
jnp
add
lods
sub
icebp
mov
mov
mov
jbe
cwtl
add
sub
call
rorb
jge
icebp
jmp
mov
pop
mov
adc
add
shl
mov
bswap
leave
arpl
adc
loopne
mov
aam
add
xor
jmp
jl
pusha
mov
jg
fs
pop
push
pop
neg
sub
xor
xchg
adc
mov
inc
movsb
inc
sbbl
adcl
add
push
add
mov
pop
mov
icebp
test
pop
fiaddl
daa
cltd
scas
push
push
or
shrl
jbe
jmp
xchg
push
sub
filds
push
mov
sub
cltd
cmc
aam
push
fs
scas
cld
cmp
pushf
sub
loope
mov
mov
or
pop
xchg
dec
add
xchg
push
cmp
mov
fisubrs
xchg
jo
cmp
dec
push
bound
orl
inc
push
ja
stos
repz
jo
or
int3
add
jno
sbb
add
push
lock
xor
in
cmc
dec
dec
or
xor
add
xchg
and
cld
sbb
mov
jnp
mov
push
xor
jg
sub
loope
jecxz
inc
ja
shl
addr16
lahf
add
repz
add
cli
repnz
pop
cwtl
neg
dec
outsb
pop
imul
fisttpl
arpl
ret
pop
adc
outsb
int3
rorl
sbb
stc
push
cmp
int3
es
icebp
lahf
xchg
jne,pn
push
ds
in
dec
lcall
add
movsb
clc
xlat
cmp
fldl2t
movl
stos
push
cltd
and
mov
shr
add
movl
push
xchg
adc
inc
lretw
incb
pop
sub
pop
shr
jp
cmpsl
imul
push
int
shld
shr
add
aas
rorl
sbbb
in
xorps
test
cli
repnz
jno
adc
or
aaa
dec
add
or
fisttpll
jno
mov
or
loop
andb
imul
pop
pop
aas
jmp
pushf
dec
jl
push
pop
mov
fdivs
inc
push
ljmp
push
mov
inc
mov
pop
orb
mov
bound
xchg
mul
shll
pusha
addr16
adcb
xor
push
push
xlat
add
dec
ja
jbe
adc
out
or
xor
mov
adc
add
mov
fdiv
adc
cltd
dec
outsb
pop
push
addr16
es
sub
iret
std
cmpsl
mov
cs
shr
add
cmp
and
push
loopne
aas
sahf
dec
loope,pt
outsl
stc
mov
mov
xlat
adc
push
cld
pop
adc
sbbb
xor
sbb
push
rorb
sub
jg
cmp
pop
shr
xorb
xor
or
push
cmpsl
cld
push
jmp
push
pop
lret
xlat
cltd
jle
push
sub
dec
jmp
push
cli
les
push
adcb
mov
cmp
stos
inc
es
scas
cld
xlat
out
fdivrp
add
jmp
shrb
jle
cmp
dec
ja
mov
and
jbe,pt
ja
les
mov
adc
stos
dec
push
test
dec
gs
sub
and
add
push
fisubs
adc
add
outsl
mov
sub
cmp
movsb
mov
daa
jmp
push
rcrl
cwtl
pusha
mov
dec
lods
inc
sbb
xchg
xor
scas
xor
mov
daa
and
stos
mov
push
pop
jmp
pushf
push
adc
xor
lea
adc
push
fisttps
aaa
shl
adc
and
popf
loope
data16
dec
loope
imul
inc
pusha
notl
xor
xchg
insb
and
stos
neg
jo
lahf
pop
movsb
pop
push
sub
add
add
scas
or
add
adc
clc
push
mov
enter
es
jno
subb
cmp
adc
jecxz
add
or
dec
fadds
je
daa
push
jns
xor
ret
push
sarl
xchg
dec
xchg
bound
frstor
jbe
cmp
js
fbstp
data16
sub
or
add
bound
push
mov
jmp
mov
dec
out
into
out
jmp
sub
movsl
or
adc
adc
das
hlt
xchg
add
inc
sub
fcoml
dec
fisttpll
jmp
or
inc
mov
inc
mov
add
sub
in
in
jnp
push
push
dec
cmpsl
in
mov
cs
ljmp
cmp
lock
add
push
jne
ret
fimull
fcmovnb
add
inc
mov
add
dec
std
adc
pop
das
pop
mov
and
enter
fiaddl
push
dec
mov
rclb
jle
pop
sbb
or
fsubrs
and
popf
pop
mov
ret
jnp
pop
es
push
aaa
jmp
shrl
es
sbb
cmpsl
adc
aas
xor
and
mov
lock
call
imul
xor
mov
das
mov
mov
pop
xchg
inc
inc
inc
push
or
movsb
mov
mov
stos
mov
xchg
dec
jmp
addr16
movsl
faddp
shr
ljmp
repnz
lahf
push
or
divps
lcall
push
ret
cmp
inc
mov
or
sbb
or
add
cld
sahf
loop
aam
repz
xchg
pop
cld
in
cmpsb
jl
jle
repnz
jns
mov
inc
aaa
ljmp
push
dec
or
sar
pop
mov
rcrb
mov
jmp
or
sub
sbb
sub
adc
outsl
xchg
sub
insb
pop
or
xlat
lock
ljmp
mov
sub
ja
or
sbb
xchg
inc
sub
pop
inc
mov
push
icebp
mov
fisttpl
inc
xor
push
dec
push
and
xchg
loop
inc
leave
out
out
add
xor
movntq
les
or
test
pop
cmc
xor
fldcw
dec
hlt
or
ret
cmc
inc
movsb
nop
insl
xor
sub
push
sub
jmp
push
and
je
nop
push
mov
cmp
mov
testl
pop
subl
adc
jg
idivl
ficompl
sub
add
imul
xchg
or
addr16
jmp
sbb
rcll
leave
fwait
xor
cltd
mov
xchg
push
les
outsl
popf
inc
fmuls
push
jmp
xchg
add
pop
xor
mov
mov
push
jae
lret
arpl
or
daa
nop
push
and
lahf
xor
lret
mov
add
fdiv
addl
inc
inc
sti
dec
cmp
push
paddsb
les
pop
out
xor
cmp
mulb
push
inc
out
std
das
pusha
out
aaa
mov
push
jmp
mov
push
aas
mov
notl
mov
cwtl
lcall
or
jmp
add
sbb
adcl
adc
fs
and
xlat
pusha
push
push
pop
xchg
jge
cwtl
add
or
pop
jmp
or
movsl
addl
mov
iret
pop
and
and
sti
ja
es
push
add
aaa
imul
mov
mov
sub
cwtl
or
imul
adc
call
push
loopne
leave
clc
std
inc
scas
shrl
add
cmc
std
loope
cmp
popa
nop
push
mov
add
mov
mov
mov
int
int3
jmp
mov
stc
cmp
add
outsb
xor
not
mov
push
jmp
lods
add
pop
cmp
outsl
cmp
loop
cmc
add
cwtl
jne
outsl
sarb
pop
sbb
popf
push
push
rcrb
ret
out
mov
scas
jno
aad
add
mov
pop
arpl
in
mov
inc
pop
bound
jl
ret
or
mov
xchg
jge
pop
mov
push
pop
sub
lods
push
icebp
mov
mov
loopne
push
cwtl
push
cmp
xor
lcall
jmp
repz
push
repnz
test
jmp
sbb
aad
xor
cmp
movsl
xor
mov
or
and
or
imul
sub
nop
lea
ret
xor
inc
outsb
mov
jmp
mov
mov
mov
cmp
jmp
cmc
out
imul
push
adc
inc
mov
mov
inc
out
cli
aad
sbb
sbb
daa
add
rclb
xor
mov
ljmp
mov
rclb
icebp
push
dec
sub
pop
out
push
xor
jmp
inc
cli
sub
out
test
jmp
push
pop
push
fcoms
add
mov
dec
cmp
jmp
lods
fbstp
mov
or
fsubr
imul
add
js
and
or
xchg
sub
int3
or
sub
imul
push
neg
push
mov
jmp
out
xchg
or
ja
xor
not
les
mov
dec
sarb
adc
roll
push
out
jmp
cmp
mov
movsb
cli
sub
push
psraw
sub
movsl
cbtw
and
jnp
inc
xor
dec
lret
gs
cmpsb
xor
int
movsb
cmp
icebp
xchg
out
dec
or
cmp
incb
xor
sub
adc
push
xor
push
cwtl
cmp
or
sub
test
loop
add
sub
and
add
mov
movsl
sub
orb
loopne
movsb
and
xchg
add
adc
movb
push
call
insl
lcall
push
sbb
mov
dec
mov
dec
pop
mov
inc
cld
rclb
or
data16
push
mov
pusha
xchg
pop
test
push
push
cmp
xchg
dec
lahf
jnp
push
into
jl
shll
rorl
insb
push
pusha
fcmove
pop
ret
xor
jmp
push
mov
loope
xlat
inc
jno
sbb
out
mov
test
jns
dec
jmp
repnz
jg
shrb
or
cmp
adc
xchg
pop
in
mov
add
std
jmp
mov
and
cmp
jle
xchg
jle
sub
push
andb
cli
pop
mov
or
dec
popf
pop
cmpsb
movsl
fidivs
nop
lds
adc
push
mov
in
test
bound
add
push
xor
ss
daa
cmp
imull
cmpsb
das
push
insb
adc
jmp
mov
inc
imulb
and
xlat
cwtl
lods
mov
inc
pop
xchg
lock
push
xor
sbb
add
add
fs
xlat
out
popf
push
flds
jmp
movsl
or
push
arpl
nop
and
xchg
leave
adc
xchg
push
sbb
dec
loopne
std
bound
ds
inc
lea
jne
and
fistpll
repz
adc
cmp
push
sub
test
mov
add
sub
ja
inc
shrl
mov
pop
push
pop
repz
or
adc
pop
xchg
inc
enter
shll
mov
clc
mov
sub
jmp
and
insl
dec
loopne
out
lret
push
mov
and
jmp
mov
mov
cmpsb
jp
mov
pop
adc
cmp
imul
sbb
sub
add
mov
addr16
push
push
adc
mov
jae
frstor
inc
and
icebp
das
xor
push
lods
xchg
sbb
jg
addr16
enter
fcmovu
or
mov
hlt
cmpsb
add
pop
das
cmc
jo
push
test
inc
and
sti
adc
loopne
or
addr16
mov
pop
xor
jmp
mov
and
ds
sub
pop
mov
push
leave
jns
jo
orb
mov
xorb
sub
je
sbb
nop
and
out
sub
mov
push
cld
pop
push
mov
mov
cmc
pop
inc
xor
cmp
ljmp
xor
push
mov
cmp
add
adc
add
in
xchg
scas
stc
or
pop
stos
adc
adc
jns
mov
inc
add
sbb
out
mov
mov
lret
or
and
sub
pop
add
adc
or
jge
test
scas
jo
push
lret
pop
push
cmpb
idivl
push
sbb
mov
popa
mov
sbb
ret
lock
jl
testl
mov
stc
push
loop
icebp
mov
lds
negl
into
mov
nop
sub
lds
add
loopne
xor
inc
sti
lock
popa
insb
sub
mov
stc
jmp
js
and
mov
xorl
adc
or
mov
mov
ret
test
fidivs
mov
pop
adc
and
icebp
test
cld
ljmp
xor
adc
push
cmpsb
and
jmp
cmp
cli
mov
mov
lcall
add
es
adc
or
mov
bound
xor
sub
inc
xchg
das
daa
adc
pop
mov
movsb
imul
lea
addr16
lods
sub
push
sti
push
mov
test
push
mov
xor
ret
lock
adc
sub
mov
popf
sbb
pop
jmp
jmp
adc
adc
and
clc
pop
cmp
cs
adc
mov
push
xchg
mov
std
sub
cmp
jb
pop
cmp
push
pop
xchg
ljmp
popf
cwtl
out
lcall
adc
shll
mov
aas
pop
scas
mov
jo
cs
push
out
and
divl
jmp
jmp
ja
int
inc
ja
add
and
push
jp
add
sbb
fsubr
pusha
lret
stos
fcomi
mov
mov
das
sbbb
loope
and
push
test
enter
pop
jne
sub
mov
cwtl
sbb
int
push
pop
lods
inc
lods
jmp
adcb
pop
mov
sbb
dec
and
add
call
mov
add
push
add
add
push
jmp
and
adc
sub
sub
mov
sub
out
lock
std
andb
nop
add
fstl
neg
nop
jle
cli
mov
xor
dec
add
rol
out
in
push
daa
test
rorb
in
pop
insb
mov
cli
inc
jg
inc
jg
and
jge
xchg
stos
cmp
pop
cmp
cmp
outsb
push
fildll
push
jmp
pop
inc
int3
fwait
push
mov
pop
iret
xor
or
jo
dec
negb
pop
or
pushf
jp
hlt
or
out
pop
cmp
adc
out
lret
jmp
sbb
xor
cmpsb
mov
sti
fld
cs
inc
push
sbb
mov
dec
push
pop
out
imul
cld
mov
fistps
std
sub
sub
inc
les
ret
adc
jmp
loope
mov
mov
popa
mov
add
sub
mov
xchg
sbb
pop
cmc
stos
and
push
jmp
add
push
es
pop
hlt
sbb
jns
or
std
inc
and
sub
mov
cmp
out
sbb
sbb
jmp
mov
out
adc
mov
rol
lcall
push
push
sbb
icebp
aam
outsl
xor
fadds
mov
jmp
lret
outsb
mov
adc
mov
mov
or
fbld
lock
mov
and
push
leave
add
pop
push
push
push
pop
and
js
scas
adc
push
jmp
das
add
fld
shll
lods
cld
sub
pop
xchg
loopne
not
lock
addb
flds
rorb
jmp
lock
fcmovb
ljmp
mov
pop
mov
out
mov
loope
mov
addr16
fsubrl
fmull
jl
and
lds
fstps
outsb
dec
xchg
cmpsb
or
jae
lcall
sbb
pop
jnp
cmpsb
repnz
add
mov
popf
hlt
loop
jl
pop
pop
jle
clc
test
xchg
inc
xor
add
adc
mov
stc
xchg
mov
pop
movsb
cmpl
jbe,pt
pop
pop
fisttps
dec
push
insl
addr16
mov
xor
pop
filds
jne
fscale
inc
jo
mov
cli
inc
add
pop
or
push
mov
or
cmp
rorl
and
stos
dec
pop
push
mov
fucomip
rcl
add
mov
dec
push
call
adc
aam
mov
pusha
and
pop
decl
pusha
push
and
push
clc
push
jp
iret
lods
dec
pop
push
ffree
or
shrl
or
dec
aas
xchg
out
test
pop
sbb
jno
push
scas
mov
dec
xor
mov
ljmp
cmc
fwait
imul
pop
lods
push
scas
add
inc
scas
aaa
fwait
mov
mov
mov
xchg
in
in
sar
mov
std
fmuls
rcll
mov
pop
repnz
mov
outsb
adc
sub
xor
sub
pop
daa
push
push
add
jmp
mov
mov
adc
cmp
imul
sbb
mov
mov
add
stc
scas
cwtl
mov
mov
sub
outsb
out
das
int3
popf
xchg
push
rcrl
inc
mov
adc
push
int3
mov
in
cs
sub
pop
mov
test
or
jge
mov
pop
ret
mov
pop
push
sbb
mov
addb
inc
xor
hlt
xor
pop
sbb
jge
pop
shr
sbb
push
add
push
add
jmp
sahf
out
pop
int3
xor
repz
ret
jae
popl
into
cmpsb
sbb
emms
ret
and
pop
sbb
lret
loop
cli
or
rorb
push
jns
cwtl
aam
repz
shrl
lahf
or
imul
daa
jg
test
adc
and
loope
sti
cmp
daa
pushf
nop
xor
mov
pop
dec
or
je
jmp
dec
fstl
inc
push
lret
daa
jmp
je
cmp
movsl
pop
int3
or
add
fdivs
orb
lret
cs
push
dec
add
aaa
cwtl
outsb
mov
push
pop
mov
add
sbb
jmp
add
inc
stos
inc
jge
sub
push
xchg
push
or
push
xorl
popf
test
mov
inc
cwtl
sub
add
jno
jmp
repz
sub
daa
repnz
rorl
pushf
inc
outsb
lock
pop
or
cld
mov
xor
sub
mov
aaa
popa
jno
call
mov
scas
ds
xchg
pop
mov
int
in
and
adc
nop
out
push
mov
adc
add
jno
ds
inc
ret
mov
addb
pop
test
icebp
push
and
sbb
add
loopne
std
stos
int3
and
lahf
inc
adc
cmc
mov
movsb
test
scas
mov
push
hlt
and
or
ds
or
loopne
pop
push
xchg
cmp
mov
jb
test
mov
pop
ljmp
mov
cmp
pop
mov
mov
xlat
sub
cmp
lods
mov
bound
addr16
xor
adc
sub
and
add
jl
gs
addr16
or
add
cld
cmp
or
repnz
pushf
loop
fadd
mov
out
std
add
add
jne
dec
mov
add
mov
push
cmp
imulb
into
pop
inc
jmp
in
jge
inc
lods
or
inc
pushf
ret
sar
mov
test
imul
pop
cmp
clc
cmp
xchg
or
lods
icebp
std
pop
adc
mov
lea
cmp
xchg
stos
mov
test
mov
std
mov
xchg
leave
or
adc
push
pop
adc
shr
adc
adc
or
stos
insl
addr16
jnp
push
adc
xor
adc
scas
jns
xor
pop
pop
mov
popf
daa
cmp
pop
sub
stos
rcl
in
out
pop
or
sub
cs
mov
nop
add
fsts
mov
add
cwtl
inc
push
jmp
ds
pop
push
cwtl
xor
and
and
mov
jecxz
stos
inc
jl
pop
xchg
inc
xchg
push
pop
push
mov
cltd
push
add
add
clc
loopne
sub
mov
xor
sub
mov
sbb
add
push
mov
add
movb
sub
jmp
dec
add
orb
jmp
out
int
push
push
xor
and
or
pop
jmp
add
aas
push
pop
pop
dec
mov
pop
jo
xchg
mov
clc
pusha
pop
fimull
in
push
jns
sub
cwtl
push
loopne
sub
inc
fucom
xchg
or
fistl
inc
and
nop
fwait
ja
test
jmp
lock
faddl
xchg
arpl
outsb
sub
jae
clc
mov
ss
arpl
ljmp
jbe
ret
sub
bound
enter
mov
pop
mov
dec
enter
push
mov
sub
cwtl
fdivrs
mov
stos
ja
pusha
or
push
pop
and
out
sbb
iret
jnp,pn
mov
loope
jae
adc
mov
int
mov
aas
mov
add
pop
add
or
call
and
pop
fsubs
js
cmp
xor
add
sbb
and
add
cli
dec
sbb
or
jmp
fisubrl
fisubs
lcall
into
pop
pop
inc
outsl
adc
adc
add
push
mov
rorb
mov
ss
lahf
push
dec
in
in
mov
loopne
mov
mov
or
jmp
js
add
les
stos
imul
pusha
ja
rolb
and
daa
jmp
fistpll
roll
add
js
push
dec
push
leave
mov
jmp
aaa
xor
or
push
movsl
mov
popf
bound
or
mov
imulb
push
add
or
into
in
aam
fstps
test
push
jmp
mov
xor
xchg
hlt
push
or
pop
dec
sub
lds
jmp
push
jae
mov
jl
pop
xor
inc
adc
popf
jne
push
shr
sbb
push
lock
jp
or
dec
add
push
jb
add
psrld
adcl
idivb
repnz
pop
popf
push
pop
xchg
or
std
arpl
fwait
icebp
loopne
iret
lds
inc
call
bnd
notb
xchg
in
xchg
push
call
in
push
xor
pop
pushf
bound
test
stos
dec
mov
je
mov
dec
ljmp
daa
fs
mov
add
jge
xor
add
or
out
sbb
push
cmpsb
imul
fwait
add
mov
pop
jmp
fdivrs
push
adc
adc
inc
cmp
pop
add
cmp
mov
lcall
sub
mov
jmp
ret
mov
xor
out
pop
and
pop
jmp
jl
or
aaa
xchg
ret
lahf
movsl
mov
sbb
add
loope
les
pop
push
andb
mov
cmp
dec
js
shll
ret
je
jne
mov
jl
sbb
inc
aam
or
pop
push
outsl
and
rcll
jmp
icebp
mov
lods
mov
addr16
push
mov
push
into
jl
jmp
iret
sbb
insb
xchg
mov
fwait
addr16
mov
sar
jge
jg
add
jmp
add
sbb
add
mov
push
insb
pop
or
cli
pusha
jnp
gs
sbb
shll
clc
jmp
fnstcw
mov
std
dec
outsl
das
aad
roll
mov
mov
mov
sub
cmp
and
rorl
sti
mov
inc
icebp
pop
cli
adc
sbb
cltd
shll
jp
outsl
pop
xor
pop
xchg
out
xchg
push
or
mov
mov
je
ret
push
sub
ret
mov
adc
jle
sbb
adc
cmpb
or
inc
gs
clc
sti
mov
das
xor
rcrb
insl
sar
and
stos
test
xchg
mov
or
or
ficoms
bound
jge
jno
sub
testb
repnz
test
inc
sbb
pop
jmp
adcl
stos
jno
xor
mov
dec
ret
pop
aas
loop
mov
mov
ficompl
inc
orb
stc
mov
pop
adc
out
sub
mov
std
out
xchg
aaa
inc
in
sub
adc
jmp
nop
or
pop
mov
ret
and
rolb
adc
pop
sub
push
xchg
mov
mov
int3
mov
lea
dec
rcrl
or
jmp
pop
pop
cmp
flds
jp
cmp
or
sub
stos
add
and
xor
adc
mov
mov
xor
test
jp
insb
mov
pop
fildll
sarb
jns
cmp
fisttps
push
pop
imul
adc
jmpw
mov
mov
push
and
cmc
add
pop
xor
mov
pop
push
dec
and
jmp
insb
cli
or
notl
jle
sub
pop
fstl
push
je
dec
pop
add
jmp
adc
mov
mov
pop
stos
xor
ss
push
repnz
push
outsl
mov
xchg
movsb
notl
jg
push
push
movsb
and
sbbb
fistps
loope
les
je
push
adc
jnp
lds
jge
insb
xor
jmp
add
clc
shlb
push
push
ljmp
adc
mov
sar
je
jmp
xor
cmp
loopne
push
xorl
fwait
pop
jle
add
and
and
das
imul
lds
lret
pop
mov
cmp
ljmp
push
push
nop
daa
add
cmp
je
test
dec
nop
loop
jno
cltd
or
add
scas
pop
cmc
je
adc
pop
movsl
push
pusha
cmc
lret
sub
roll
push
adc
ret
outsl
inc
push
mov
pop
adc
repnz
data16
sbb
subl
fnstsw
adc
adc
lret
fsubrp
jno
push
mov
push
pop
cltd
dec
jmp
rorb
jmp
shrb
imul
dec
push
test
jb
lahf
jns
inc
add
and
jne
sub
jmp
movsl
push
ret
cmp
sub
jmp
sti
andb
jo
xchg
fstl
out
pop
test
sub
jmp
push
and
pop
xchg
cmp
jo
mov
cmpsl
lret
push
mov
les
cld
das
mov
mov
dec
repnz
sub
pop
xor
mov
cld
push
pop
jns
pop
cmp
xor
cltd
in
test
negb
sub
add
dec
pop
scas
dec
inc
or
fcomip
cwtl
or
add
xor
in
andb
insl
pop
fdivrs
or
push
and
cmc
bound
jae
mov
cltd
pop
fadds
pop
or
push
iret
pop
xchg
sti
jecxz
mov
xor
pop
pop
xchg
not
out
add
jnp
or
test
test
insl
in
js
add
dec
adc
popa
lret
pop
out
mov
loopne
mov
adc
or
mov
cmp
fbld
push
scas
jo
inc
pop
push
xor
xchg
je
std
fmuls
add
adc
jecxz
add
push
pusha
mov
out
xor
jmp
not
xchg
inc
xchg
into
jg
jmp
or
mov
mov
test
insb
adc
icebp
and
pop
cmp
push
push
mov
popl
insl
gs
fucomi
cmp
sub
insb
andl
mov
rcll
test
orb
pushw
jmp
push
xor
mov
add
sub
pop
loopne
or
and
je
mov
push
push
pushf
jno
loop
fs
dec
mov
jne
test
outsb
push
sarl
hlt
or
jnp
push
pop
or
mov
fiadds
daa
dec
push
push
and
mov
jnp
out
rcrb
sbb
sbb
into
mov
add
filds
and
cmpsl
out
add
dec
pop
push
and
mov
mov
sub
xchg
aas
adc
pop
jge
rclb
add
inc
pop
sarb
enter
sbb
out
dec
pop
mov
std
frstor
icebp
xchg
mov
mov
xchg
repnz
ja
dec
push
mov
stos
sub
push
int
push
sub
pop
sub
cmp
jecxz
mov
scas
stos
sub
js
mov
loope
xor
mov
lods
aam
inc
in
and
xor
les
pop
xchg
ss
pop
pop
mov
rclb
jno
add
pop
add
sub
shrb
in
mov
fldt
pop
jae
mov
xor
or
fbstp
mov
mov
aam
mov
push
jle
inc
jecxz
cmp
sbb
xorl
repz
xchg
lock
sub
pusha
outsb
inc
and
dec
jecxz
lea
sbb
lret
dec
inc
testl
push
xchg
adc
outsl
or
cmc
pop
pop
rcr
push
sbb
repz
shrb
add
je
lret
int3
adc
ljmp
xchg
or
in
sbb
int
into
cmc
jns
push
mov
mov
int3
jmp
das
aam
lea
out
push
inc
cmpsl
sub
int3
pop
or
outsl
mov
repz
repnz
je
loopne
shll
xchg
es
and
sbb
push
test
lea
push
fwait
fs
sub
stos
xor
iret
pusha
sub
lds
and
int3
mov
push
pop
sbb
push
add
or
xor
xlat
xchg
add
mov
stc
mov
shr
sub
repz
aaa
push
push
insb
add
loope
aas
in
jmp
popf
or
sbb
icebp
leave
outsl
clc
or
push
adc
enter
and
dec
mov
dec
xchg
or
cmp
ja
lahf
mov
and
fsubrs
sar
sbb
add
cmc
or
dec
or
aaa
mov
add
lahf
rorb
push
inc
xor
push
jl
daa
push
lods
sub
and
jl
daa
pop
cmp
mov
jae
adc
sarl
es
sbb
pop
fcoms
push
sub
mov
sbb
mov
sub
push
sub
mov
sbb
jne
mov
ss
push
fildl
xor
testl
fsub
fwait
pop
add
sub
add
out
mov
dec
pop
movsl
sbbb
sub
xor
add
add
and
fnstenv
ljmp
fwait
mov
subb
loope
and
icebp
add
jmp
ja
add
not
test
or
test
mov
push
cmp
jl
scas
fsubrl
loope
sub
popa
movsb
movsl
mov
jmp
jns
sub
sarl
pop
xor
outsl
sub
xchg
and
cmpsl
jo
dec
aaa
mov
das
mov
xor
pushf
int3
push
pop
or
ret
cli
pop
add
arpl
jg
and
cs
add
lods
mov
lods
push
fstl
add
add
jecxz
int3
ss
mov
add
jmp
pop
add
sub
lret
adc
jl
jae
mov
adc
fmuls
es
dec
mov
cmpb
fimuls
push
jmp
adc
sbb
jb
orl
jnp
fsubr
popl
xor
cmpsb
dec
xor
bound
and
xor
addr16
xchg
sbb
dec
cwtl
pop
fs
shlb
mov
into
add
add
das
fadds
lret
inc
pop
jmp
xchg
mov
adc
jp
sub
ds
push
lahf
sub
pop
movsb
push
pop
push
push
pop
rolb
int3
jbe
adc
sbb
mov
in
sub
cli
adc
push
shrl
pusha
push
push
fsubrl
negb
sahf
dec
stos
sahf
rcll
push
fnstenv
mov
test
insl
mov
orb
lds
or
push
lock
cmp
xor
pop
xor
cmp
dec
cmpl
inc
push
ss
daa
stos
inc
sub
cmpsl
cmp
and
popa
add
lock
pop
jp
loope
in
push
fnstcw
sbbl
sbb
push
push
aaa
mov
cltd
or
jne
sti
sbbb
jnp
inc
je
cwtl
jge
aas
or
orb
movmskps
pop
ljmp
dec
sub
inc
pop
fmull
push
leave
mov
add
data16
jmp
aad
aad
mov
dec
test
mov
sbb
or
lret
subb
dec
push
pop
pop
dec
xor
addb
adc
ficompl
mov
jmp
lds
popf
lahf
test
loopne
sbb
aaa
fsubrl
aad
add
mov
and
pop
in
mov
and
es
and
pushf
cmp
dec
mov
xchg
dec
jno
cs
push
fisubrl
cli
pop
push
mov
or
data16
out
testl
mov
push
sbb
ljmp
inc
loopne
mov
dec
aaa
add
stos
lods
mov
add
push
xchg
adc
and
cmp
xor
mov
je
and
ret
add
push
xor
xchg
pop
dec
aam
adc
mov
and
pop
cmp
pop
int3
inc
sahf
and
adc
cmc
add
dec
cwtl
nop
addl
sub
decb
icebp
scas
add
js
shr
add
sub
sub
pop
mov
pop
dec
pop
adc
cmp
add
iret
jne
std
ret
mov
aam
jecxz
adc
lds
lret
mov
call
xor
inc
and
and
pop
nop
jns
ret
popf
lds
lcall
fdivs
push
inc
sbb
outsl
fldcw
test
jno
push
sbb
push
rcl
xchg
dec
mov
movb
cvtps2pd
rorb
inc
add
mov
out
mov
mov
xor
fisttpll
or
out
push
nop
inc
fs
int
xor
pop
pop
adc
xchg
and
int
fwait
mov
loop
andb
cmp
pop
ljmp
mov
mov
jl
sub
popa
or
jb
in
or
call
imul
mov
mov
jb
add
enter
int
lahf
or
xchg
shlb
xchg
push
ljmp
fstl
jecxz
jle
pop
push
and
and
or
and
xor
pop
sub
bound
into
addl
add
cmp
xlat
or
mov
into
mov
fsubrp
sub
ret
js
daa
cmpl
out
divl
xchg
outsb
lret
test
ss
or
cmp
cmp
adc
outsb
in
ret
pop
fadds
jl
push
or
pushf
push
dec
push
jne
cmpsl
pop
ret
fcompl
ja
add
cmp
data16
xchg
repnz
daa
push
rcr
xor
adc
jp
cmc
xor
pusha
xchg
mov
jmp
sub
test
push
adc
flds
and
test
push
mov
lock
stos
mov
dec
mov
int3
ljmp
jmp
mov
js
jmp
xor
lahf
sarl
mov
lea
sub
pop
cs
and
out
icebp
xchg
ret
out
sbb
push
pop
in
fmuls
pop
inc
jg
jns
test
push
shl
out
out
out
repz
or
jle
xchg
pop
fists
mov
fcomi
popf
mov
nop
jns
mov
testl
mov
and
jp
sbb
ret
cmpsb
out
in
repnz
adcl
jb
dec
sahf
ljmp
pusha
rorl
out
call
push
int
add
ljmp
sub
sti
paddsb
insb
pusha
inc
push
lcall
push
xor
mov
xor
push
inc
gs
push
sub
test
ljmp
dec
push
sarb
gs
popf
and
mov
out
rcrl
jo
and
ja
push
xor
pusha
negb
nop
jmp
loop
push
pusha
mov
das
cmpsb
add
dec
and
sbb
dec
stos
sub
rorb
jbe
loop
dec
sarb
push
pop
xchg
fstpt
cmp
fs
xchg
pop
imul
and
mov
scas
rorb
xor
ljmp
dec
scas
aaa
jo
out
push
dec
or
add
jmp
xchg
push
cmp
jae
and
sub
add
pusha
xchg
adc
cmp
xor
sbb
jmp
dec
scas
pop
jmp
or
loope
ror
bound
movb
pop
sub
fldenv
or
addr16
andl
pop
jl
out
adc
dec
addr16
rorb
pop
add
daa
push
mov
cmp
fcoml
push
movl
arpl
ret
jl
add
leave
mov
add
or
pusha
pop
jns
or
pop
push
mov
inc
lea
sbb
add
mov
or
mov
out
mov
and
push
and
fs
std
int
inc
pop
sbb
xor
fildl
push
and
shll
movsb
mov
les
inc
dec
mov
in
push
jmp
pop
mov
jne
ficoml
push
shr
xchg
repz
loope
into
orb
adc
pop
popa
push
cli
rorl
add
popf
outsb
or
insl
addr16
testb
ljmp
cli
cmp
xor
inc
adc
xchg
les
push
push
sub
adc
add
mov
cmpsb
insl
jmp
xchg
stos
push
push
stos
adc
push
fimuls
mov
push
dec
jp
and
push
mov
sub
scas
cmp
xchg
imul
shr
cmpsl
sbb
pop
stos
nop
dec
test
xlat
or
xor
pop
loopne
shll
loopne
ret
xor
rorl
add
dec
insb
add
outsl
pop
push
or
int
pushf
mov
mov
fidivs
loope
fildll
bnd
je
dec
lock
mov
pushf
outsb
mov
sbbl
pop
dec
repz
push
sar
cmp
cli
xchg
out
jmp
lahf
pop
lahf
out
out
in
das
xchg
mov
pop
cltd
imul
fildl
and
adc
cmp
rol
ljmp
cli
or
pop
icebp
push
ret
and
sti
dec
test
stos
insl
sub
cli
imul
push
add
fistl
aad
adc
mov
push
push
and
mov
inc
neg
sarb
out
ds
push
jmp
shrb
fbld
jmp
icebp
rcrl
push
jg
lcall
cmpsb
ficoms
dec
in
fstl
mov
mov
outsb
jo
xchg
std
pushf
xchg
pop
adc
add
and
cmc
add
outsb
cmp
call
pop
push
mov
ljmp
push
fyl2x
add
jmp
add
test
sarb
dec
pop
sub
mov
inc
mov
pop
sub
mov
cltd
or
inc
loop
mov
dec
in
out
mov
mov
rcr
popf
push
mov
sub
or
fs
or
inc
mov
ljmp
jmp
mov
xor
repnz
ret
neg
fucomip
mov
adc
pop
clc
js
fwait
inc
pop
in
inc
or
mov
pop
pop
es
repnz
popa
xor
in
push
rcl
mov
jmp
popf
fstpl
jmp
call
inc
test
mov
add
dec
adc
pop
cmp
sarl
pop
jb
push
pusha
sbb
mov
adc
fstl
jnp
cmc
adc
jns
xchg
add
xchg
mov
inc
xchg
cmp
clc
add
xor
in
xchg
int
sbbb
mov
pop
xlat
nop
fiaddl
aaa
add
adc
loop
inc
jl
sub
dec
pop
xor
or
test
js
rol
inc
mov
push
push
clc
inc
jle
pushl
pusha
or
std
push
andb
add
push
inc
push
mov
aaa
je
xchg
divl
ficoml
repz
or
movsb
andb
cmp
mov
lea
push
xchg
mov
pop
jmp
faddl
push
cli
sbb
xor
mov
push
push
lods
adcb
inc
mov
mov
add
push
jo
jne
jno
inc
pop
addl
and
mov
popa
jge
push
cwtl
pop
imul
inc
pop
scas
mov
push
push
jecxz
imul
xchg
sub
mov
pop
fwait
jnp
pop
xchg
sti
cmp
jmp
inc
dec
adcb
or
lods
push
adc
jecxz
pop
ds
add
dec
adc
jl
push
add
jmp
imul
nop
sbb
add
add
push
push
in
or
sub
mov
adcb
add
sub
mov
inc
and
fidivs
xor
inc
pop
sbb
push
test
loope
loopne
pop
loope
in
ror
jmp
aam
dec
push
and
and
out
clc
mov
sbb
inc
mov
or
pushl
out
push
mov
lock
test
neg
lret
push
inc
and
pushf
mov
out
in
insl
pop
shlb
pop
sub
sbb
rorl
xor
pop
xchg
dec
cmpsl
sbb
xor
adc
xchg
pop
and
mov
or
add
or
pop
jl
scas
mov
scas
inc
xor
cmpsb
jno
push
dec
push
scas
adc
divl
sbb
inc
rcl
jmp
lahf
pop
mov
pop
or
js
mov
es
add
dec
sbb
dec
in
mov
or
popa
loopne
add
jno
jbe
clc
adc
xchg
out
leave
lods
sub
jns
psraw
sub
dec
dec
or
aad
into
testb
mov
or
xor
and
sub
cwtl
sub
cmpb
int3
mov
pop
fs
cmp
push
and
xchg
push
pop
popf
loop
popa
arpl
mov
mov
dec
fiaddl
xor
stc
scas
or
dec
or
push
xorb
jmp
inc
pop
loopne
mov
mov
filds
dec
jmp
inc
dec
add
jmp
int3
vmread
cltd
jp
inc
scas
adc
bound
imul
jno
pop
fdivr
pop
mov
and
das
add
lret
dec
push
insl
add
es
test
lahf
push
insb
rclb
xor
dec
pop
push
mov
repnz
test
add
push
mov
int
or
std
adc
push
orl
xchg
mov
pop
sti
ret
add
ret
dec
and
cltd
or
jno
je
clc
bswap
sbbl
rclb
sub
mov
add
mov
cli
ljmp
scas
loop
cmp
lret
mov
repz
add
in
ds
adc
ja
mov
cwtl
lea
roll
cmp
jb
mov
int3
jb
xorb
stos
pop
mov
xlat
rolb
pop
inc
xor
mov
stos
shll
cs
mov
movsl
std
sbb
fs
xorb
xchg
adc
cltd
cmpb
pop
xor
in
dec
aas
mov
ds
mov
mov
pop
push
mov
in
inc
adc
lods
mov
dec
out
jmp
mov
arpl
aad
and
jle
push
popfw
pop
xor
ja
cmpsb
or
or
sub
add
out
jle
and
cli
adc
adc
ja
shlb
in
fcomps
add
inc
shll
sbb
loopne
rclb
cmp
call
insl
scas
and
cmp
pop
mov
xchg
int
loop
push
xor
dec
out
xchg
push
pop
push
or
mov
or
mov
jp
pusha
add
lds
test
mov
jge
mov
push
inc
push
repz
jbe
push
pop
inc
pushf
or
mull
push
adc
and
cmp
out
or
or
fcompl
cmp
cld
pop
sti
cmp
cvtps2pd
aad
cmp
std
add
scas
scas
clc
xor
js
sub
add
mov
jmp
js
adc
lret
mov
test
movsl
mov
pop
test
mov
pop
cmpb
xchg
or
add
jae
ss
pop
lret
or
shl
mov
inc
incl
mov
lds
shlb
add
cmc
and
icebp
hlt
lds
loopne
dec
pop
cld
xchg
shl
lea
popf
fcmovne
aaa
rol
hlt
scas
fnstsw
lock
sbb
and
pop
or
je
out
add
add
repz
or
addr16
mov
jl
jb
dec
cltd
and
orb
fistps
aam
aaa
lret
sub
outsl
mov
add
inc
sbb
xchg
sbb
aaa
popa
lahf
sub
xchg
sbb
jmp
ficoms
cld
mov
popa
popa
or
push
ljmp
cwtl
loopne
sahf
inc
xchg
mov
addr16
adc
push
add
in
xlat
fsubs
mov
jl
bound
push
roll
push
ds
add
pop
mov
jae
mov
fcoml
or
int3
add
pop
mov
mull
addl
lahf
add
jno
je
iret
decb
sub
push
pop
mov
mov
cmpsl
jne
jl
or
mov
adc
pop
push
sub
jno
xor
or
mov
jo
mov
jl
jl
lahf
das
push
push
stc
fs
and
lds
das
push
les
mov
nop
gs
repnz
push
mov
add
daa
jl
jmp
sahf
xlat
fadd
dec
out
test
mov
out
aad
clc
sbb
inc
arpl
xchg
fstpt
add
cmp
jo
enter
dec
jp
add
js
xchg
mov
xchg
data16
ljmp
dec
pusha
adc
movsbl
add
inc
add
push
xchg
jae
scas
mov
aad
mov
pop
call
dec
shr
mov
adc
gs
ficoml
sub
mov
lds
mov
sub
add
sub
add
rclb
xchg
mov
mov
xchg
jmp
movsl
jae
mov
js
push
rolb
movsb
mov
cmc
adc
les
mov
add
mov
lock
aam
push
xor
adc
iret
mov
push
push
aaa
pop
and
jne
ret
jecxz
jp
pop
xchg
xor
sti
mov
fwait
shr
sub
ret
and
pop
imul
sbb
jl
repnz
push
ret
jle
bound
mov
sub
outsb
inc
or
xor
sar
cltd
movsb
add
je
outsb
dec
clc
iret
add
out
mov
andb
xor
inc
sbb
adc
call
rorb
inc
add
mov
xchg
xor
and
jmp
mov
mov
mov
jb
push
adc
movsl
pop
sub
push
leave
push
add
repz
mov
mov
fstl
pop
jl
repz
pop
movsl
jmp
inc
xor
add
pop
lds
fildl
pop
scas
stc
rcl
and
daa
pop
add
jmp
cmp
gs
jbe
pop
mov
pop
inc
mov
rorb
mov
in
pop
testb
mov
push
and
cmc
push
xor
icebp
mov
add
jp
dec
lahf
mov
dec
or
jno
insb
mov
jecxz
pop
cltd
mov
xor
dec
or
in
adc
sbb
repnz
mov
popf
mov
lock
push
sub
int
out
sarb
cli
inc
cmp
jg
xor
loop
sub
dec
loope
fidivs
xlat
sti
call
sub
push
inc
popa
and
mov
cs
test
pop
ja
and
loope
add
pop
loop
add
test
daa
push
aam
pop
mov
stos
addr16
cmp
pop
and
aam
push
pop
xchg
filds
adc
mov
mov
push
sub
ret
lcall
outsb
les
pop
dec
arpl
xorps
shlb
movsl
je
pop
xlat
jno
lret
push
jmp
inc
movsb
scas
loopne
cld
xchg
xlat
cltd
xor
leave
dec
sti
cmp
pop
ljmp
ret
fidivl
add
jb
mov
ret
fisubrs
lock
mov
jmp
mov
jb
les
cmp
imul
sbb
loop
add
jmp
push
cli
jle
and
push
ljmp
pop
pop
mov
inc
out
iret
shll
xor
shll
inc
imul
mov
lods
movsl
jl
cmp
lcall
jmp
pop
pop
and
sti
test
scas
jge
push
call
gs
mov
push
pop
adc
movb
out
xchg
shr
loopne
ljmp
movsl
cmp
mov
mov
jnp
push
and
out
jmp
sub
or
jns
jmp
and
pop
push
xchg
add
jge
ss
jb
daa
dec
xor
insb
push
add
mov
xor
divb
inc
neg
push
insb
or
jecxz
jmp
lods
cli
cmp
dec
xchg
daa
fdivrs
shll
pushf
test
jne
push
dec
push
cmp
ret
loopne
xor
push
adc
pop
xor
adc
out
popf
fadds
dec
loope
rorb
aaa
pop
fstpt
or
push
pop
xor
fbstp
popa
daa
out
divb
pop
push
lds
ljmp
pop
testl
daa
or
push
jg
pop
mov
hlt
sbb
sub
mov
imul
xor
jl
nop
cli
or
mov
and
das
shlb
sbb
mov
mov
push
adc
mov
in
fisubrs
ret
subb
or
pop
or
pop
jne
push
jmp
jle
leave
mov
mov
sbb
dec
addb
add
notl
pop
into
push
out
int
inc
mov
jge
inc
push
subb
jge
mov
jg
out
add
jp
and
pop
push
pop
cltd
leave
mov
jo
mov
pop
clc
pop
pop
decb
mov
out
adc
scas
push
stc
scas
das
jno
sub
dec
pop
aam
adc
imul
cmpsb
lret
xlat
jmp
xor
or
mov
rcl
jbe
push
adc
mov
leave
shlb
fsubrl
adc
push
loop
jmp
jbe
cmpsl
fdivrl
outsl
pop
je
sbb
repnz
mov
push
mov
dec
xchg
add
xor
les
or
icebp
cmpsl
test
movsb
jmp
movsl
jl
pop
in
movsl
hlt
aam
and
pop
push
or
pop
mov
add
lds
or
push
or
add
jmp
dec
aad
jl
mov
mov
jo
pop
stos
xor
cmc
popf
cs
xor
jge
aaa
or
pop
and
cmp
add
jmp
xchg
repnz
jno
mov
sbb
and
cltd
mov
lds
scas
add
fisubl
cld
inc
shrb
cmp
inc
or
pop
inc
push
mov
movb
pusha
ret
add
jmp
js
pop
push
out
cmc
fmuls
xchg
jbe
loop
xor
into
rcll
popa
or
dec
and
ss
pop
inc
push
xor
pop
pushl
xor
mov
xchg
dec
fsubl
add
pop
out
fcomip
cmc
and
adc
xorb
and
insl
mov
test
push
adc
push
push
sub
dec
incl
and
sti
mov
and
adc
dec
jae
ja
sub
inc
mov
xchg
or
xchg
leave
lret
xor
cmc
ret
sub
xor
add
push
sub
jbe
add
shr
add
or
in
cmp
je
cli
stc
dec
sar
or
mov
xchg
mov
repnz
push
vxorps
in
aad
cmc
dec
ret
mov
jge
pop
or
aad
out
std
sbbb
xor
add
int3
add
mov
xchg
pop
mov
add
sub
cld
subb
out
or
aas
nop
or
lret
ret
cltd
inc
out
and
into
or
jecxz
mov
lahf
into
xchg
test
dec
xlat
rorb
or
pop
pop
std
out
jp
xchg
mov
xor
add
stos
sub
push
adc
mov
pop
idivl
push
mov
call
pop
xchg
mov
ss
ja
push
inc
stos
sub
push
lods
das
cld
in
repnz
nop
daa
pop
add
sub
loopne
mov
ret
pop
inc
inc
loope
cmpl
xchg
adc
cli
lret
jno
scas
addr16
das
push
sbb
jmp
imul
lahf
lock
popw
jno
lea
inc
xchg
jmp
enter
cltd
mov
push
dec
pop
xchg
idivl
and
inc
cmpl
and
mov
mov
les
and
imul
xor
lds
inc
lret
roll
pop
stc
test
add
sbb
xchg
mov
dec
jbe
sbb
repz
pop
sbb
push
cmc
adc
or
and
jmp
xor
xchg
leave
push
pop
push
out
xchg
push
push
add
lods
adc
pop
pop
sahf
push
sbb
div
les
xor
jl
push
and
pop
adc
mov
mov
push
mov
loop
sbb
or
push
xlat
jmp
sbb
nop
add
das
inc
pop
addb
stos
lods
jb
add
adc
sbb
andb
into
add
and
sub
add
loope
fwait
pop
add
and
lret
add
rcrb
inc
pop
sub
outsb
add
pop
test
pop
out
es
xor
loope
loope
sbb
add
je
pop
dec
mov
add
inc
sub
clc
pusha
xchg
and
pusha
push
or
jbe
or
lret
or
push
push
jp
jns
xchg
mov
sub
pop
adc
in
aam
adc
or
jnp
sub
es
add
out
out
pop
or
lea
sub
pop
pushf
dec
jl
xlat
push
inc
fadds
or
xor
mov
and
repnz
lds
movsb
cs
mov
loop
jg
mov
fcmovb
pop
orl
sbb
add
mov
mov
and
pusha
add
mov
movntq
ljmp
insb
add
ret
push
mov
fisttpl
mov
mov
xor
aas
xchg
dec
mov
pop
add
sub
pop
cmp
inc
push
xlat
mov
dec
adcb
out
or
not
push
movq
addr16
mov
push
incl
pop
and
jmp
out
pop
xchg
clc
or
pop
lahf
icebp
cmp
and
push
pusha
js
mov
js
jl
in
mov
imul
popf
or
jbe
cwtl
sbb
int3
cmpsb
ds
mov
imul
leave
xchg
lods
and
dec
xor
push
jmp
mov
dec
rolb
shl
or
mov
mov
daa
and
inc
push
cmp
out
sbb
sbb
push
fmuls
fdivrs
cmp
add
aam
lods
sti
cmp
mov
or
xchg
enter
mov
jnp
pop
add
jmp
imul
repz
lret
push
push
add
cmp
jp
rolb
test
mov
mov
jmp
arpl
ljmp
aam
mull
loop
mov
ljmp
jae
das
aas
xchg
or
push
lahf
enter
jnp
sub
or
into
xchg
inc
xchg
mov
fstps
jl
push
pop
pop
cld
cwtl
dec
scas
xchg
xor
je
cli
loop
shlb
and
and
leave
sbb
jle
mov
jae
push
jb
subl
out
mov
lret
insb
clc
out
pop
aaa
jecxz
shll
jne
ss
bound
cli
mov
aas
in
dec
ret
lock
push
cwtl
ja
xchg
leave
inc
test
adc
jnp
out
pop
adcb
mov
ljmp
push
jbe
cmp
sbb
cwtl
idivb
sub
push
dec
push
add
es
fs
inc
pop
mov
xchg
push
pop
shl
imul
lret
pop
inc
or
call
xchg
cmp
pop
adc
leave
repnz
sti
xor
dec
leave
cmp
adc
in
push
mov
mov
sub
ret
lret
jmp
not
add
cld
sti
daa
es
clc
cvtdq2ps
loope
lcall
mov
jo
push
add
testb
cmpsl
jae
inc
mov
iret
shl
addb
fmul
pop
adc
pop
push
jecxz
jns
aaa
xchg
and
cmpsl
in
mov
inc
mov
cmp
js
xchg
gs
or
cmpb
notl
loopne
in
fbld
xor
or
mov
jmp
push
mov
push
push
dec
sub
ret
je
mov
inc
push
xchg
pop
popf
xor
pop
add
xor
int3
lds
push
jmp
dec
and
push
stos
push
test
jp
pop
and
pop
and
xor
xchg
or
loop
push
xchg
mov
fdiv
cmp
cmp
pop
subl
inc
mov
cmpsl
fisttps
fisttps
sub
pushl
loop
xor
jo
movb
int
and
sbb
sahf
mulb
and
movsb
xor
dec
jne
mov
flds
into
push
xor
cmp
dec
scas
mov
pop
sahf
and
push
adc
stos
add
pushf
cmp
lds
movsb
repz
insl
add
pop
popa
bound
outsb
xor
or
cmp
mov
adc
cli
mov
dec
lcall
inc
jg
add
jp
pop
clc
imul
lds
pop
fiaddl
adc
sub
inc
adc
js
push
jmp
pusha
pop
jmp
dec
ja
and
fs
cmp
jnp
push
add
jo
mov
neg
adc
sub
addb
cmp
ss
scas
rorb
pop
loop
js
movsb
cmp
int
std
lret
orl
mov
xchg
sub
mov
and
jmp
bound
xchg
sub
cmp
in
popf
pusha
out
adc
inc
push
xlat
dec
test
add
pop
pop
sbb
or
mov
jae
test
mov
ret
and
in
ficompl
pop
jmp
push
jp
cmp
jp
pop
scas
mov
cmp
pop
jno
jmp
xchg
inc
pop
jmp
pop
nop
daa
cli
or
add
int3
lds
push
es
jge
dec
test
mov
jne
repnz
les
fmull
add
mulb
sbb
add
cmp
cmp
push
adc
jg
das
jne
jnp
shr
loopne
mov
xor
jge
insl
dec
and
fadds
fidivs
and
cmpsl
notl
dec
xor
stos
mov
testb
xchg
fiadds
xchg
in
push
jmp
mov
inc
sub
fcompl
data16
xchg
in
pop
icebp
or
xchg
into
xor
or
cld
pop
pushf
repnz
jmp
jge
xchg
inc
add
and
inc
inc
pop
mov
push
mov
cmp
in
jbe
dec
orl
dec
jmp
inc
lock
xor
jle
add
pusha
mov
aaa
jb
dec
sbb
test
or
sbb
sub
or
addr16
imul
lock
outsl
inc
and
add
cmp
loopne
lds
inc
xchg
add
inc
mov
xor
sub
out
add
mov
jg
adc
cld
mov
sub
push
fcoms
fnstcw
data16
cmpsl
jo
adc
cmp
lds
mov
lods
push
mov
test
jge
mov
das
out
dec
cmpsb
stos
add
adc
jmp
xor
arpl
rcll
not
in
mov
adc
add
dec
test
aam
test
imul
dec
jbe
cltd
jnp
add
push
lods
incb
cmp
adc
in
pusha
push
adc
jmp
inc
dec
inc
push
lret
es
add
jl
stos
push
scas
xor
dec
push
call
and
xchg
lds
pop
add
lea
or
xor
push
xchg
dec
sbb
sub
inc
into
or
fimull
jmp
xchg
std
push
sub
cli
into
imul
or
jbe
and
mov
iret
stos
jno
jo
sbb
dec
int3
mov
dec
ret
mov
add
xorb
mov
pop
add
loopne
add
jns
ret
aas
add
clc
repz
rclb
int3
les
sub
lods
js
adc
orl
jae
pop
and
mov
pop
pop
cwtl
jg
loope
imull
outsl
mov
xor
xchg
in
popa
stc
jg
or
dec
mov
pop
sub
push
xchg
push
adc
testl
sub
pop
sub
sbb
dec
and
or
add
push
push
mov
lock
jge
push
or
dec
dec
mov
add
mov
dec
dec
sub
add
decl
and
lods
ret
ficompl
jmp
mov
mov
enter
cwtl
clc
or
enter
cmc
sti
cs
xor
pop
pop
or
pop
pop
jns
cmp
mov
repz
adc
or
out
mov
jnp
xchg
imul
xchg
loop
push
icebp
and
lods
and
sti
jb
pop
out
push
fwait
sub
jmp
push
add
push
pop
cmpsb
adc
loope,pt
add
scas
test
sub
cld
aad
rol
pop
test
xchg
jmp
sub
mov
scas
mov
push
add
dec
popa
lods
test
adc
adc
std
mov
and
mov
es
and
popa
mov
add
std
dec
outsb
xchg
dec
or
adc
or
cld
addr16
xor
cwtl
lds
xchg
in
repz
int3
mov
loope
push
mov
push
push
outsl
icebp
dec
mov
mov
and
ret
ret
dec
or
push
stos
sub
in
inc
jp
dec
or
dec
fldcw
nop
inc
jo
fbstp
push
jmp
cmc
mov
pop
outsb
or
outsb
icebp
and
jl
sub
adc
xor
hlt
scas
cmp
nop
xchg
xor
push
pop
cld
inc
shl
repz
int
dec
mov
mov
or
loope
mov
cld
frstor
xchg
sbb
pop
adc
dec
scas
mov
mov
push
shrl
dec
pusha
mov
adc
cmp
push
dec
in
aad
mov
pop
mov
pop
push
mov
add
testb
push
sub
or
cli
jp
gs
cmp
inc
push
stc
push
pop
out
cmp
sahf
mov
rcll
cmp
push
push
fdivl
push
xchg
sbb
jns
cmp
xchg
push
push
add
daa
push
dec
rcr
xchg
cmpsl
jle
jmp
mov
mov
jle
sub
or
and
push
push
mov
rorb
xorl
add
mov
fs
push
mov
in
dec
add
out
pop
ret
rolb
push
dec
clc
sbb
repnz
daa
pop
bound
aam
ds
mov
dec
cld
or
pop
xor
loop
add
lcall
mov
fnstenv
shr
pop
cld
and
mov
dec
push
adc
jbe
xchg
push
pop
fcomi
dec
mov
inc
sub
pop
or
adc
or
xchg
pop
adc
push
cwtl
fbld
loopne
fcomps
mov
leave
jb
and
or
stc
mov
aad
inc
icebp
dec
daa
xchg
mov
adc
inc
pop
push
cltd
movsb
cmp
mov
mov
addb
js
cmp
repnz
or
es
arpl
cmp
sar
daa
jmp
andl
adc
das
jmp
push
sbb
fstpl
or
pop
push
lahf
dec
mov
pop
mov
fiadds
xor
repz
inc
dec
cwtl
loopne
mov
idivb
sub
pop
pop
bound
push
add
adc
dec
sbb
lahf
je
and
sahf
leave
add
repnz
pusha
popf
xchg
xor
add
lds
cli
shl
jge
enter
mov
and
or
cmp
jmp
sarl
popf
rep
sub
das
divl
rclb
push
pop
inc
int3
push
xchg
cli
mov
insb
addr16
dec
mov
fisttps
fwait
cld
in
push
cmp
cmp
inc
sbb
jle
sub
cli
dec
jmp
xchg
xor
mov
pop
and
xor
add
adc
roll
jmp
shll
popf
roll
in
xor
jb
mov
xor
or
fcmovu
addr16
adc
loopne
fadds
mov
xor
push
jmp
sbb
pop
adc
inc
test
out
shl
outsl
clc
add
lahf
sarl
mov
add
pop
icebp
push
mov
pop
arpl
cmp
cmp
out
mov
movsl
fisubrs
pop
xchg
push
jmp
cmp
mov
ficoml
or
popf
test
dec
fisubs
pop
mov
pop
cmp
xor
jle
or
sub
add
shl
imul
aam
push
cmp
and
pop
jecxz
mov
inc
sub
xchg
cltd
mov
or
cwtl
outsb
stc
dec
xchg
popa
add
mov
sub
add
leave
sbb
std
sub
je
mov
jno
dec
mov
adc
inc
push
push
mov
pop
or
inc
cmc
jae
daa
shl
int
push
lea
jo
xor
xchg
sti
sbbl
negb
xchg
gs
out
and
xchg
xchg
sub
cmc
push
push
cmp
adc
fldt
pop
cld
add
pop
stos
lock
dec
pop
mull
lds
imul
add
imul
movb
push
fmull
xlat
out
mov
das
jb
jp
push
add
rcrb
repnz
mov
xchg
jmp
xchg
and
rclb
testl
and
shr
add
push
mov
js
mov
push
jmp
icebp
push
jl
push
cmp
daa
lret
cmc
mov
push
mov
sub
roll
pop
outsb
stos
and
test
and
fs
mov
or
cmpb
pusha
pusha
push
jge
aas
sbb
cltd
fildl
jbe
in
ret
cmp
jp
xchg
add
fcompl
nop
xchg
ljmp
data16
sub
aas
adc
push
mov
in
inc
scas
negb
lret
and
mov
inc
inc
sub
or
loop
nop
jle
jmp
iret
jle,pn
pop
push
mov
xchg
add
pop
in
mov
cmp
or
jmp
push
lret
adc
dec
scas
pop
mov
mov
xor
sub
push
push
jnp
mov
or
jne
in
push
mov
sub
in
sub
dec
test
mov
ds
jb
movsb
pop
push
je
push
add
packuswb
divl
cld
imul
and
add
inc
sub
and
mov
sarl
cs
rcrl
pushf
pop
loopne
roll
stos
inc
cmp
lcall
out
pop
clc
xor
sub
dec
dec
mov
out
rorb
sbb
mov
test
shr
sub
pusha
gs
cmp
es
cmp
dec
jo
or
mov
lahf
mov
bound
movsb
movsl
dec
rdpmc
push
xor
cmc
mov
add
sbb
out
test
popf
mov
ja
inc
dec
pop
add
jmp
rol
cld
adc
jmp
add
shlb
roll
cmpsl
shlb
pop
adc
or
mov
shlb
pop
lret
lods
dec
inc
loop
das
adc
cmp
scas
adcl
lods
add
in
into
nop
or
jmp
pushf
popa
leave
fsubs
lods
jp
cmp
out
icebp
or
push
in
jnp
nop
add
mov
ret
outsb
jmp
pop
push
pusha
jl
pop
jnp
into
test
jp
or
inc
dec
popa
pop
jmp
mov
mov
xchg
or
adc
pop
pop
mov
psraw
stos
jle
add
cmp
or
loop
add
test
push
aaa
push
mov
or
in
stos
scas
loop
or
jbe
testl
mov
nop
push
daa
inc
inc
je
lret
push
insb
cld
sub
sbb
sub
rolb
pusha
cwtl
aas
ja
lock
mov
lock
aam
add
cmp
hlt
arpl
das
jl
sub
jmp
xchg
pop
repnz
sahf
lret
loope
je
push
movsl
jae
push
je
add
jmp
mov
sub
gs
xlat
xor
jns
sub
and
test
iret
stos
out
test
push
mov
push
neg
xchg
repnz
loopne
push
add
xor
cmp
shl
add
sub
jmp
fsubrs
add
pop
cmpsl
arpl
sub
mov
push
sbb
cmp
push
pop
pop
dec
add
outsb
ret
je
es
inc
push
dec
ret
out
out
in
mov
cli
gs
ljmp
fs
pop
je
inc
test
add
sub
test
xor
jg
jne
sbb
cmc
fimuls
aad
subb
imul
sub
ret
jmp
je
sub
jl
mov
loope
js
dec
jbe
mov
das
out
xchg
nop
fs
mov
inc
int3
aas
mov
test
leave
push
std
icebp
bound
inc
xchg
xor
mov
pop
shlb
lods
std
xchg
fucomip
pop
fcompl
cmp
dec
dec
pop
das
mov
add
push
sbb
pushf
mov
and
call
push
mov
clc
adc
mov
push
fs
test
jle
movsl
add
cmp
cmp
add
insl
or
out
out
daa
xor
sub
mov
jle
pop
inc
out
cld
rcrb
push
das
xor
stos
xchg
mov
pop
mov
out
push
push
adc
outsb
in
pop
pop
fdivs
lahf
ljmp
jbe
inc
sub
popf
enter
mov
xchg
data16
mov
loopne
jmp
pop
inc
and
adc
and
mov
xchg
in
mov
jmp
xor
mov
xchg
dec
dec
movl
orl
add
xor
aaa
cmc
dec
push
stc
adc
clc
popf
add
cmp
sahf
adc
pop
cld
sbb
ret
cmp
fwait
jo
sub
inc
enter
add
sub
cwtl
rorb
mov
dec
adc
movsb
ret
daa
jno
mov
fsts
and
sub
sub
pop
ds
dec
stos
sahf
push
sbb
adc
mov
nop
fistps
cmp
mov
std
roll
jns
jno
fucomp
lock
sub
popf
adc
rcrl
jg
cmp
clc
test
rorl
pop
dec
in
ffree
aas
rorb
xlat
dec
out
adc
add
aam
dec
add
push
dec
pop
jo
sub
xchg
bound
add
lods
sub
and
lahf
pushf
arpl
js
cmp
pop
dec
test
fcompl
daa
mov
pop
add
in
jl
adc
fsubrs
das
mov
push
xchg
sub
enter
pop
scas
clc
aad
ds
popf
jo
mov
and
mov
pop
inc
sub
or
push
fbstp
mov
das
stc
pop
xchg
scas
dec
out
test
paddusw
sub
or
jb
push
or
cs
nop
push
shll
lods
add
out
das
xor
pop
cltd
roll
xor
inc
or
imul
bound
mov
in
das
insb
cmp
lret
pop
mov
or
xor
inc
jmp
lods
push
mov
repnz
std
ret
adc
mov
pushl
jne
dec
cmp
and
xorb
sub
bound
add
jb
mov
test
repnz
add
imul
inc
jmp
jns
imul
les
inc
push
push
mov
and
ljmp
lock
mov
jo
adc
in
mov
aad
mov
out
pop
repnz
dec
lds
test
push
in
mov
adc
sub
sub
sub
xor
or
add
je
mov
push
sbb
sti
loope
jle
jb
stc
test
mov
add
loopne
pop
pop
popa
mov
lahf
jp
jecxz
nop
leave
or
push
lea
jmp
mov
lock
pop
push
push
jmp
clc
jmp
mov
add
xchg
jmp
test
pop
enter
push
jle
push
pop
aas
out
out
xor
idivb
clc
dec
clc
pushw
out
adc
ret
scas
lret
sti
or
faddl
iret
mov
and
and
in
mov
xor
or
enter
pop
loop
add
cwtl
jp
push
cmpb
jo
fwait
jmp
stos
mov
and
xchg
or
cmp
and
push
clc
add
cs
inc
xor
in
or
movsl
or
adcl
inc
orb
cwtl
lock
sbb
jmp
or
cli
loop
mov
pop
frstor
add
sti
adc
add
pop
fsub
and
shr
push
mov
ljmp
addb
ljmp
popa
pop
push
jns
test
mov
and
and
andb
pop
dec
test
jmp
sbb
fisttpl
jmp
popa
sbb
mov
pop
not
ds
pop
les
jp
xchg
outsb
or
ljmp
ja
push
gs
push
clc
dec
cmp
cmpsl
sub
mov
mov
lds
sub
sbb
mov
jb
adc
or
inc
jmp
stos
iret
inc
dec
lds
push
mov
dec
or
mov
inc
adc
shll
add
jecxz
add
movsb
xor
or
mov
rorl
and
push
sbb
inc
lods
pop
mov
mov
mov
push
dec
jge
sbb
int
in
add
push
nop
ret
xchg
bound
inc
fldcw
bound
sub
or
je
sti
jg
jbe
push
sbb
insb
push
adc
add
mov
in
stos
fs
dec
add
pusha
mov
xchg
hlt
ja
push
mull
or
push
add
jmp
push
pop
pop
or
pop
mov
loopne
or
cwtl
adc
dec
incb
shr
sub
bound
xchg
pop
xchg
mov
xchg
push
adc
nop
sub
jbe
daa
pop
xor
xlat
sbb
push
bound
lahf
xchg
ja
jle
ds
dec
or
movsb
push
pop
cmp
adc
add
mov
int
add
pop
js
mov
imul
xor
imul
jle
xchg
lcall
jno
and
out
mov
pop
jle
cli
push
push
movzbl
sub
xor
divb
scas
push
or
lock
or
push
pop
dec
sbb
jp
jnp
adc
pop
test
push
push
push
dec
bound
jmp
xor
insl
pop
push
lods
xchg
mov
pop
imull
test
jae
test
popf
or
xor
adc
jmp
in
add
cli
push
pop
or
add
add
dec
inc
mul
adc
push
sub
lods
add
add
or
cmp
add
or
pop
sbb
pop
inc
cs
jl
cwtl
dec
lods
pusha
fstpt
orps
cltd
sti
jmp
in
cmc
jg
shrb
test
bound
mov
test
adc
or
pop
popf
sti
rorb
inc
jnp
or
sub
xchg
idivl
imul
pop
pop
and
fstps
cmp
or
movsb
shr
lds
cld
xchg
dec
jecxz
dec
add
sub
sbb
or
clc
pop
ds
jae
lret
adc
push
push
mov
xor
into
pop
loopne
js
jne
leave
aad
pop
sub
mov
mov
outsl
shll
push
inc
daa
push
sub
push
mov
stos
je
sub
add
mov
stos
pushf
adc
sub
pop
xchg
mov
cmp
or
in
and
lahf
mov
inc
cmp
shll
sub
push
popf
neg
xchg
icebp
push
sub
add
jecxz
fstpt
mov
dec
lods
bound
push
popf
jmp
cmpsb
push
or
dec
cmp
cs
sbb
pop
or
ds
mov
test
sub
testl
push
call
mov
xorb
loopne
xor
pop
pop
stc
ja
xchg
pop
xor
fisttpl
outsl
pop
rcll
xchg
dec
add
cwtl
inc
pop
push
xchg
in
sub
mov
mov
add
mov
add
fmuls
adc
jmp
xchg
xlat
and
push
aam
add
inc
jno
inc
sub
and
ja
fsubrs
hlt
mov
pusha
outsb
cltd
pop
scas
fstps
xchg
imul
add
adc
sbb
mov
push
and
lcall
or
cmp
incl
test
sbb
mov
nop
pusha
cmp
cs
dec
std
or
fs
dec
popf
push
add
pop
jmp
in
testl
sub
pop
das
pushf
fmul
pop
jbe
sarl
jnp
gs
pop
inc
mov
ds
std
mov
lock
inc
jecxz
cmc
enter
xchg
jae
add
dec
inc
jl
mov
sub
jge
push
dec
cmp
sub
add
jnp
pop
adc
jle
xchg
dec
add
iret
jmp
popa
test
jne
xor
mov
cmp
mov
adc
add
pop
outsb
pop
pop
or
sub
add
mov
jl
ret
in
in
mov
mov
cmp
xor
or
cmp
aaa
cmp
mov
nop
push
mov
dec
fsubs
xor
pusha
or
sub
push
jge
cltd
pusha
push
sbb
xchg
pop
mov
add
sbb
js
mov
imul
inc
push
mov
add
vmovlpd
popf
mov
jp
and
inc
mov
and
push
pop
push
push
loope
movsb
shl
in
lds
xchg
sarb
ljmp
outsb
xchg
stos
int
mov
xor
push
dec
sub
cwtl
sbb
inc
mov
jmp
jmp
mov
gs
sub
or
jle
jp
jns
sbb
pop
sub
inc
pop
out
insb
lea
dec
iret
loop
fcomps
pop
push
cmpsl
sub
cwtl
adc
pop
pop
xchg
add
hlt
jmp
adc
dec
daa
es
mov
mov
fcmovnu
fs
mov
xlat
push
push
in
clc
hlt
ret
aam
xchg
mov
add
lock
sar
add
push
mov
mov
jb
sub
test
add
testb
insl
shlb
pop
cmc
movsb
les
out
xor
cmp
sbb
push
push
enter
sub
adc
pop
call
mov
test
mov
push
cli
push
mov
and
mov
clc
inc
sub
shl
pop
popf
shl
shrl
sub
mov
rcrl
xor
and
or
or
adc
inc
orb
pop
sbb
mov
addl
push
or
data16
in
daa
insb
pop
or
mov
lock
test
jl
out
pop
rcll
sbb
test
inc
popf
pushw
push
clc
inc
xchg
stc
cmp
pop
pop
stc
pop
in
lahf
jbe
sti
push
jb
pop
int
or
leave
in
divl
aam
push
add
adc
mov
dec
adc
pop
pop
out
jno
imul
adc
cld
jmp
shr
add
jle
mov
pop
sub
pop
stc
mov
or
loop
call
pop
bound
sub
or
loopne
or
mov
dec
aam
pop
jmp
pop
jp
fbstp
and
mov
sub
pop
pop
data16
inc
inc
ret
mov
test
jge
add
push
iret
sbb
in
sub
aas
leave
sbb
push
mov
aad
sub
shr
hlt
imul
mov
dec
arpl
shl
cwtl
jo
jae
and
adc
out
add
mov
clc
and
mov
push
addr16
nop
popf
bound
mov
cmp
jle
into
pushf
aas
inc
lahf
cmp
jle
jl
nop
bound
or
push
shr
imul
imul
jbe
cmp
jmp
and
cltd
outsl
and
add
and
push
mul
cmp
aad
dec
in
les
aas
xchg
adc
adc
pusha
dec
gs
sbbb
push
les
add
cmp
movsl
pop
scas
in
cmp
inc
cmp
and
int3
mov
fildll
xchg
addb
bound
imul
testb
mov
xchg
mov
or
ficompl
repz
ret
out
test
mov
cwtl
mov
std
xchg
stc
icebp
sub
mov
adc
pop
dec
gs
sub
jmp
cmpsb
rcll
xor
mov
and
outsb
cmpsl
add
sbb
rol
add
stc
xchg
mov
sarb
shlb
push
sbb
hlt
repz
jl
add
push
mov
fldt
rcl
sti
mov
push
pop
mov
cmpl
cmp
insl
lcall
sbb
push
repnz
or
shll
out
lea
cmpsb
fstl
movsl
jge
cmp
popf
fisubrl
pop
nop
leave
xor
or
and
and
and
xchg
inc
sti
scas
push
mov
push
adc
jmp
pop
adc
or
scas
push
push
jmp
inc
addr16
hlt
xchg
sti
sub
push
pop
lds
stos
adc
stos
and
ret
ficoms
push
adcl
pop
popa
inc
xchg
int3
or
xor
pop
pusha
in
jae
jns
adc
adc
sbb
add
cmp
ret
sbb
test
add
cmc
fdiv
mov
add
jl
mov
xchg
call
lahf
push
cwtl
out
push
mov
sbb
sbb
add
push
push
push
mov
jno
div
jae
sub
in
add
lahf
lcall
push
out
cli
mov
mov
movsb
push
mov
lods
cmp
js
dec
pop
bound
out
add
sti
sub
jmp
push
mov
add
or
xchg
pop
imul
repz
and
mov
mov
jns
daa
push
adc
xchg
cmc
mov
push
push
push
mov
dec
xlat
push
push
cmp
push
pop
mov
jno
addr16
sub
das
enter
andl
add
outsl
jmp
add
aad
push
mov
cli
jp
fs
bswap
cmp
xor
das
mov
inc
movsb
xor
inc
das
lcall
inc
mov
fdivrl
repz
xchg
out
js
int3
in
in
ds
fucom
test
add
push
mov
add
sub
testb
mov
aaa
shl
add
test
js
movsb
mov
add
push
xor
inc
adc
adc
dec
out
push
neg
xchg
enter
push
xchg
add
icebp
out
nop
add
inc
xchg
push
leave
pop
aam
clc
jmp
pop
sub
mov
fcmovnbe
cmp
xchg
call
sub
nop
stos
shl
shl
int3
in
pop
fcomps
shl
inc
sbb
mov
or
xchg
std
insb
imul
and
adc
cmc
dec
push
fwait
dec
stos
outsb
icebp
add
add
jp
mov
add
scas
lret
mov
aad
outsl
adc
pop
inc
jl
add
mov
xor
inc
dec
fcoml
pop
outsl
pusha
sub
lret
mov
mov
clc
inc
and
aas
mov
xchg
pop
pop
pop
mov
push
xchg
mov
lret
pop
test
push
cltd
stos
cmpsb
xor
xchg
mov
push
outsl
lret
popf
loope
push
jp
mov
cld
push
addl
bound
fiaddl
sub
mov
xlat
dec
icebp
add
xchg
das
mov
mulb
in
mov
cmp
cli
dec
aam
dec
syscall
pop
inc
lret
and
xchg
rcl
mov
pop
add
jmp
sbb
mov
daa
xchg
dec
fiadds
push
cmp
sbb
daa
pusha
pop
add
sub
mov
das
add
or
std
ret
push
call
fdivrl
or
pop
dec
mov
push
push
jmp
sub
in
xchg
call
insl
les
nop
xorb
pop
xchg
jno
das
jge
and
mov
rol
jmp
inc
mov
pop
test
mov
testb
adc
xor
xchg
jno
add
sub
test
loop
jne
push
and
jge
jle
andl
shll
jmp
iret
addb
jle
pop
daa
jno
mov
or
add
sub
pop
jg
fdivrs
jns
jecxz
sub
lret
aad
fdivr
adc
sbb
sbb
and
jle
cmpb
mov
aaa
into
add
dec
sub
and
cli
jg
push
daa
outsl
add
mov
or
push
jno
jmp
push
or
pop
push
fcmovne
sbb
cmp
or
dec
inc
leave
push
pop
in
out
adc
outsl
xor
sub
adc
dec
mov
mov
repz
mov
dec
int3
stc
fimuls
test
arpl
mov
adc
test
jno
and
dec
fs
inc
pop
xor
mov
hlt
cwtl
pop
outsb
push
xchg
mov
jbe
into
ja
in
mov
scas
movsl
adc
ja
mov
dec
xor
ljmp
push
jl
adc
adc
add
test
loopne
push
sbb
or
cld
test
mov
push
int
aam
pop
mov
lcall
movb
mov
sub
add
out
or
popa
add
jg
lds
scas
cwtl
cmp
inc
fwait
sub
out
fisttps
push
nop
call
adc
jb
out
mov
jge
daa
fldenv
jo
rcrl
jo
outsl
add
mov
xor
sbb
mov
add
in
jle
mov
xchg
pop
out
cwtl
ret
and
xor
insl
cli
sub
loop
les
mov
or
in
jle
and
cmp
push
movsb
negl
xlat
pop
addr16
push
mov
jb
insb
mov
loop
pop
and
add
adc
call
cmpl
mov
in
jb
mov
pushf
adc
ljmp
mov
loop
popa
out
lret
sub
or
test
jne
xchg
jmp
adc
ja
add
fucomip
jne
push
pop
aad
xchg
pop
or
or
pop
xchg
or
cs
pushf
das
inc
pushf
jg
adc
jecxz
shrb
jno
cmc
imul
or
cwtl
addb
add
rcrb
add
in
mov
outsl
insb
inc
dec
mov
addl
dec
lret
aam
in
xchg
pop
shl
push
add
push
shlb
add
push
pop
dec
divl
dec
adc
xor
int
imul
add
pause
or
ss
add
add
or
xor
mov
sbb
jmp
ds
adc
icebp
mov
jmp
push
outsl
sbb
sbb
cmc
aas
jae
enter
test
popa
cmc
loopne
sub
packuswb
push
mov
and
and
sbb
push
pushf
je
add
cmc
popa
lahf
add
mov
rcrl
loope
orb
shlb
inc
sub
inc
add
adc
or
push
lahf
pop
jno
pop
int3
out
push
jae
cli
lods
pop
sub
cmc
fmuls
push
push
xor
nop
jne
ret
jg
mov
xlat
fcos
roll
movsb
adc
dec
push
jle
js
inc
add
or
lret
pop
sbbb
add
fwait
cmp
lret
mov
sub
repnz
jle
sar
xor
jae
or
dec
jle
mov
das
stc
inc
rolw
sbb
je
sub
shrl
push
jnp
push
push
and
or
incl
dec
push
stos
nop
jbe
sbb
scas
push
jmp
xor
and
out
xor
jle
outsl
pop
push
cmp
xchg
out
imul
push
icebp
xor
xor
jge
data16
out
dec
xor
cmc
inc
sbb
or
adc
pop
dec
insl
mov
or
dec
pushf
enter
add
jo
sbbl
shl
xor
sub
int3
aad
and
leave
lcall
dec
lea
fdiv
roll
cli
imul
xchg
fnstcw
jecxz
flds
jae
pushf
push
daa
cmpsl
pop
arpl
jb
testb
push
dec
ret
int3
cli
xchg
pop
push
jo
add
js
sub
scas
jecxz
sbb
xor
push
mov
js
insb
pop
cmp
and
arpl
xchg
push
movsl
rcrb
mov
pop
xlat
dec
gs
inc
cmp
xor
nop
or
stos
cmp
roll
aas
dec
nop
sbb
pusha
or
mov
cs
arpl
jle
add
jns
pop
loopne
push
cmp
dec
push
outsb
and
inc
and
sub
mov
xlat
ror
adc
and
pop
mov
cmpsl
mov
leave
mov
cwtl
cmp
outsl
pop
das
mov
inc
cmp
lret
js
jns
adc
jmp
mov
sub
sahf
add
push
and
mov
je
add
add
jge
dec
and
or
jmp
mov
adc
jmp
movsb
fcomip
mov
xchg
rcrl
in
outsl
xor
ret
scas
fbld
push
sti
lods
or
hlt
fadds
mov
sub
push
ficomps
fidivrs
dec
inc
scas
pushf
out
outsb
or
mov
or
and
push
test
push
jge
add
jle
adc
xor
stos
mov
ljmp
or
clc
das
inc
data16
xor
es
enter
sub
sub
pop
jl
pop
mov
pop
push
aaa
mov
xchg
add
mov
mov
lds
push
jmp
idiv
and
push
dec
push
popa
loope
imul
and
aaa
push
div
sub
and
leave
inc
push
les
outsl
repz
js
pop
push
dec
pop
pop
pushf
das
pusha
out
es
push
mov
xchg
pop
pop
test
xorb
or
ret
add
out
cmpsl
xor
jl
leave
jbe
jp
pop
js
xchg
xor
scas
and
xlat
dec
out
enter
jns
push
jnp
mov
pop
add
add
inc
add
cltd
lock
and
out
push
and
add
xor
pop
adc
mov
out
jmp
mov
sbb
add
sub
add
add
rorb
movsb
ret
add
xor
add
inc
and
xor
outsl
adcb
daa
dec
das
mov
insb
sbb
pop
and
pop
jmp
sti
pop
pusha
jecxz
sbb
push
and
sub
inc
dec
sbb
cmp
mov
aad
daa
push
push
out
and
es
fisttpll
outsl
shl
mov
add
repnz
xchg
out
je
and
or
mov
add
lock
sbb
push
or
sbb
jbe
or
or
outsb
imul
sbbl
pop
sub
in
xchg
mov
popa
ds
daa
lds
pop
dec
sbb
cs
les
out
xchg
xchg
shlb
mov
incb
sub
scas
cmp
data16
stos
inc
cld
lds
add
sub
or
js
inc
pop
jmp
push
push
mov
popa
sti
aaa
and
stc
push
subl
push
push
or
mov
sbb
cmp
aas
push
pop
jne
pextrw
pop
cli
push
test
adc
push
mov
sbb
cmpl
jmp
pusha
pop
js
sub
inc
in
movsl
jg
cmp
sbb
and
pop
fnstsw
in
iret
ljmp
hlt
jge
pop
gs
vmovaps
jmp
xchg
shl
aad
pop
xchg
mov
sbb
mov
or
dec
jne
cmc
int3
mov
push
je
mov
push
rcrl
push
xchg
call
cwtl
add
or
movsl
mov
jmp
or
add
mov
call
jmp
sbb
push
xchg
movsb
imul
lret
rcll
rorl
sbb
cmc
xchg
xor
jmp
push
xchg
add
ljmp
iret
sub
dec
pop
in
add
or
push
or
jg
cmp
sub
icebp
mov
jmp
sub
daa
jle
xchg
pop
mov
or
or
bound
je
loopne
out
mov
pop
push
push
cmp
mov
ja
fsubrl
popa
push
mov
pop
mov
aam
add
ret
stc
and
ret
out
jo
sbb
aas
jp
roll
pop
push
repnz
jb
pop
in
cli
mov
cmpb
das
ret
loop
push
push
pop
sbb
repnz
test
push
aam
push
imul
testb
repnz
les
jmp
adc
lea
add
daa
mov
push
test
inc
sqrtps
inc
sti
mov
data16
pop
int
imul
mov
xor
or
dec
mov
adc
sub
or
stos
popa
movsb
rol
jle
mov
not
aam
mov
je
lock
out
ret
and
icebp
add
inc
add
das
pushf
insl
or
xor
xor
rcr
push
mov
xchg
mov
sbb
and
shrb
push
push
xlat
ret
pop
iret
xor
push
jp
mov
push
or
xor
pop
sub
rcll
std
inc
inc
in
jne
das
mov
js
pop
popf
cld
pusha
push
push
mov
push
xor
or
adc
add
icebp
aad
push
xor
sbb
push
lods
pop
fcoms
or
push
lock
testb
outsb
dec
push
sbb
mov
push
pop
lret
or
sti
jp
popa
cmp
pop
mov
jmp
lods
lds
dec
and
adc
mov
mov
in
pop
outsb
dec
cmpsl
mov
rcrb
es
mov
xor
lock
in
xor
test
sbbb
pop
stc
out
xlat
ret
push
pusha
xchg
sbb
inc
sub
icebp
adc
mov
sub
leave
lds
jo
pop
xchg
push
xchg
ret
daa
cmp
push
xchg
jmp
lds
repz
dec
cmpb
adc
bnd
pop
rcrb
cmp
adc
cmp
sub
imul
inc
sub
adc
dec
add
das
inc
inc
ret
testb
xchg
pushl
mov
mov
jmp
leave
add
inc
mov
push
jle
push
mov
adc
or
dec
sbb
rcl
add
or
pop
sub
xor
or
add
inc
push
push
frstor
imul
push
add
in
and
push
orb
adc
std
sbb
jmp
cmp
pop
aas
dec
mov
pop
pop
adc
or
in
dec
and
imul
out
int3
dec
mov
jbe
loop
addb
rolb
add
cmp
sahf
xchg
pop
and
or
or
leave
pcmpgtd
and
rcll
loopne
xlat
pushf
jg
cmp
in
lret
inc
lahf
popl
gs
push
rcll
jecxz
cs
stos
mov
jmp
std
fs
in
jmp
mov
dec
xor
pop
mov
pop
lock
rcll
push
mov
mov
pop
push
mov
cmp
add
push
or
push
jns
mov
and
jno
cli
aad
mov
and
cmp
std
popf
mov
jbe
jae
fidivl
arpl
pop
gs
lret
push
pop
test
cmc
jmp
roll
cmpb
fsubrs
mov
popa
adc
fs
pop
xchg
or
dec
imul
bound
pop
inc
mov
adc
inc
push
add
and
dec
add
shrb
sub
fs
push
mov
shlb
add
mull
pushf
stos
and
arpl
push
sbb
pop
pop
cmpsb
dec
dec
loope
add
push
xor
pop
sarb
add
sub
mov
pop
pop
mov
or
lret
jb,pn
push
pop
xor
push
je
or
sbb
push
xchg
mov
aad
mov
jmp
js
and
or
rorb
sub
das
ret
adc
xlat
fidivrl
repnz
mov
lret
push
cmp
mov
mov
insl
pop
dec
and
push
mov
or
mov
fbld
lock
mov
add
add
aas
cwtl
jno
lds
test
idivb
mov
cmp
ds
adc
xor
push
mov
or
int3
idivl
cwtl
lods
or
jmp
call
mov
adc
inc
jae
iret
bound
jp
or
pop
dec
scas
inc
and
pop
jmp
imul
adc
repz
fmulp
shrl
push
mov
inc
lcall
adc
dec
mov
shll
test
add
repnz
or
les
hlt
iret
jmp
adc
and
inc
mov
mov
icebp
mov
mov
add
icebp
push
addr16
xor
sbb
mov
or
xor
ret
add
sti
in
pop
adc
or
or
jmp
or
dec
cmpsl
ja
mov
add
or
int
mov
cmp
adc
and
cmp
call
movsl
push
in
mov
xchg
cmp
lret
stos
inc
sbb
push
sub
not
aam
and
js
in
ljmp
push
scas
jmp
loopne
rcr
inc
rorl
imul
pusha
jno
pop
gs
add
inc
fnstenv
or
jnp
adc
pop
sarl
gs
repnz
push
ja
test
or
mov
add
pusha
repz
or
out
sub
jmp
fs
call
inc
or
xor
ljmp
aas
jae
adc
bound
rcrb
movl
jmp
jnp
das
inc
cmp
mul
push
pop
inc
stos
mov
jecxz
xor
jmp
xlat
add
jecxz
out
mov
sbb
mov
popf
ret
not
push
aam
daa
aas
stc
add
pop
ror
jns
outsl
iret
push
jnp
jno
xor
inc
or
sbb
and
add
push
out
mov
cmp
lds
inc
dec
jmp
neg
xchg
pop
or
xchg
je
mov
jmp
addr16
jp
push
inc
dec
jmp
pop
fldt
adc
inc
les
xor
push
push
push
es
mov
jp
adc
mov
mov
jnp
sbb
gs
or
cmp
jecxz
shll
mov
test
imul
dec
dec
pop
cs
and
shrb
daa
sbb
dec
cmp
cmp
shr
push
fists
xor
add
inc
iret
push
push
mov
add
sub
outsl
sbb
push
xchg
push
mov
push
push
push
mov
testb
jmp
add
adc
mull
add
jmp
clc
push
xchg
je
enter
movsl
adc
mov
jb
insb
lds
push
test
loop
or
mov
xor
jge
and
push
ficoms
jmp
mov
neg
mov
jae
pop
add
fists
repz
out
in
ds
call
repz
mov
std
sahf
or
push
pushf
dec
or
popa
add
or
pop
enter
and
ja
or
push
imul
mov
aas
add
clc
pusha
insl
sub
push
cwtl
ljmp
add
out
jmp
ret
xchg
jnp
xor
not
mov
push
pop
aas
arpl
dec
call
je
dec
xchg
mov
imul
cmp
add
arpl
dec
shlb
and
dec
mov
inc
add
movl
xchg
sub
xor
add
cmp
pop
dec
andb
or
xchg
mov
or
adcl
pop
stc
rolb
divl
mulb
jg,pt
cmp
pop
fwait
rol
jge
and
add
sbb
scas
lret
iret
ljmpw
ds
lods
call
testb
jno
icebp
push
ja
jp
lret
flds
loop
add
int
mov
mov
loopne
addr16
adc
sub
mov
call
sub
sub
jmp
imul
fcomps
es
cmp
and
push
scas
pop
in
out
rol
inc
xchg
popa
add
test
add
les
mov
xor
push
pop
out
lret
jnp
pop
inc
pop
push
movsb
push
cwtl
jge
cmp
aaa
add
mov
stos
sbb
mov
inc
xchg
and
adc
sbb
test
or
sbb
jmp
sti
jmp
mov
in
insl
sti
fadd
out
adc
pop
insl
jo
sub
push
cmpsl
cmp
adc
out
or
jno
inc
lahf
repnz
mov
jg
push
add
les
jns
inc
or
xchg
jmp
clc
aaa
pop
test
iret
jmp
sub
pop
sahf
leave
jp
lret
add
stos
clc
in
push
dec
cmp
inc
ficompl
inc
cmp
and
sbbl
pop
cmpsb
mov
js
call
or
pop
add
inc
orb
cmp
dec
imul
mov
repz
jmp
xchg
cs
add
push
shr
push
nop
and
outsl
movb
inc
scas
ror
lcall
and
loopne
jae
jle
pop
shl
xchg
adc
lret
pushaw
inc
stc
out
mov
pop
dec
loop
js
dec
loope
pop
cmpsl
imul
jle
adc
mov
rorl
dec
or
ja
in
stos
enter
repz
jle
decb
and
jmp
push
loopne
pop
pop
xor
mov
ret
jmp
mov
ficoml
xor
pop
or
cld
not
lcall
mov
lret
or
cmp
popf
ljmp
imul
cwtl
jbe
and
sbb
out
or
xor
pop
or
std
test
push
test
sub
call
pop
sub
and
jmp
ja
and
add
pop
mov
lds
fsubr
mov
push
pop
sarl
push
and
mov
lock
cs
push
and
movsl
inc
call
sbb
insl
pop
cltd
xor
out
andb
cmpsl
pop
mov
or
xor
jnp
loop
or
push
jmp
pop
lds
ret
adc
or
mov
dec
ljmp
xchg
scas
cmp
inc
pusha
or
aaa
adc
jmp
loope
push
mov
mov
xchg
imul
rcll
gs
das
pop
stc
mov
sub
or
movsl
cmp
cmp
test
loopne
or
imul
addl
cmc
outsl
sbb
sub
or
aas
fnstcw
scas
pop
inc
xor
cli
inc
and
js
setne
push
push
out
sar
jmp
shr
cs
jl
dec
jns
cmp
jo
pop
xor
push
jo
popf
negb
jmp
in
test
mov
and
lahf
fimuls
adc
mov
ljmp
mov
inc
pop
jl
add
bound
not
hlt
icebp
dec
mov
and
ret
lcall
popf
fwait
out
sbb
mov
loop
sub
arpl
int3
or
xlat
dec
add
das
pop
or
outsb
pop
imul
movsl
mov
mov
dec
dec
pushl
pusha
jmp
or
add
or
pop
fnsave
adc
add
sbb
sub
loop
pop
test
sub
push
ffreep
mov
lea
mov
movsl
cld
mov
push
push
in
cmp
or
cmp
lods
pop
cld
cmp
adc
shll
popa
pop
fwait
je
push
push
into
int
ret
add
push
pop
sub
jecxz
sbb
or
fdivs
jae
or
xor
sub
push
xchg
push
adc
in
shr
mov
test
pop
push
cli
hlt
shrl
cmpb
cwtl
add
cmc
adc
mov
and
sbb
push
rcll
cmp
cmp
cmpsb
jae
add
jo
push
or
mov
mov
in
pop
jmp
mov
in
idivl
test
xchg
jmp
or
pop
aam
and
sarl
jcxz
leave
mov
cmp
gs
mov
stos
movsl
or
xor
rcrl
push
push
insl
out
or
shrb
pop
mov
push
adc
add
popf
ljmp
mov
leave
push
pop
fnstenv
xor
sub
pusha
psubsb
jmp
and
mov
adc
shll
add
scas
shrl
bound
mov
add
cmpb
mov
pop
in
mov
icebp
xchg
push
mov
adc
and
push
std
roll
lcall
fistl
ja
add
shl
sub
mov
stos
pop
cmp
mov
jne
and
cmp
in
into
mulb
adc
jo
sub
mov
dec
adc
add
aad
fs
and
or
pop
add
ljmp
pop
jo
push
cmp
sbb
fisubl
iret
cmp
add
and
dec
cmp
and
sahf
inc
les
add
xchg
insb
dec
sub
cwtl
sbb
inc
inc
xchg
pusha
push
pop
add
or
sahf
cmp
ljmp
cs
popa
push
fstps
andw
pop
push
test
das
xchg
or
ja
daa
outsb
ds
dec
lods
adc
inc
bound
push
fisubrs
int
scas
out
or
dec
fbstp
and
jmp
clc
fnstsw
nop
or
jl
jne
scas
xor
popf
outsb
je
mov
jp
fbld
aad
mov
jne
cmpsl
in
pop
xchg
call
push
sub
in
cmpsb
xchg
cmp
loop
enter
mov
push
movsl
sti
lods
lock
scas
out
adc
pop
pop
lret
sti
shlb
adc
inc
push
testb
adc
sub
icebp
out
imul
arpl
dec
sub
and
cmc
push
cmp
pop
mov
jo
fisttpl
punpcklwd
inc
mov
pop
inc
add
add
test
adc
sbb
jne
popa
icebp
mov
pusha
ja
pop
jl
pop
push
test
xchg
add
or
shl
ror
jmp
xchg
call
scas
push
jl
ficomps
pop
push
mov
dec
sub
rcrl
stos
push
repz
imul
inc
pop
cld
pop
outsl
jge
inc
out
mov
mov
aas
and
sti
dec
test
adc
pop
push
imul
inc
mov
fcompl
cmp
xchg
adc
pop
mov
jae
popf
mov
jmp
int3
and
mov
cmp
cmp
icebp
sbb
push
and
sahf
dec
inc
sub
add
pop
test
shlb
jmp
arpl
jg
cs
sub
or
push
notl
add
xor
addb
lock
adc
jae
popf
xchg
cltd
test
mov
add
out
adc
cmp
push
push
andl
cld
roll
mov
adc
call
xchg
sub
aas
add
aas
adc
cmp
mov
xor
fstl
fdivrl
adc
popa
movsl
xor
pusha
scas
pop
dec
fbld
pop
mov
push
imul
ljmp
pop
js
test
pop
hlt
fs
jmp
shlb
and
jnp
jb
cwtl
cmp
xchg
jae
xor
negb
mov
data16
enter
inc
jg
pop
sub
push
dec
push
adc
and
xor
pop
add
lock
call
xchg
loope
push
cmp
adc
push
add
mov
not
ret
test
int3
ljmp
and
jp
xchg
or
sbb
xor
dec
dec
jmp
repz
fdivs
mov
sub
xor
ljmp
sub
push
nop
sub
fdivl
bnd
pop
test
stc
cs
idivb
xor
ja
cmpsl
push
mov
pop
test
sbb
cmp
das
imul
mov
in
lods
mov
iret
sub
push
or
lods
ss
ja
xor
sub
int3
adc
lret
and
xlat
sub
call
pop
mov
sbb
xor
inc
sbb
jp
mov
mov
push
enter
push
movb
push
ja
inc
jg
in
in
stc
xchg
dec
or
test
cmpsb
push
rolb
test
pop
int
xor
jmp
cs
jge
arpl
pop
not
jne
out
icebp
add
pop
xor
jb
cmpsb
sub
nop
addb
adc
adc
and
dec
fs
nop
addr16
insb
mov
sub
push
hlt
in
lock
mov
cmp
test
pop
lahf
add
loopne
xor
and
jl
mov
or
push
inc
ljmp
jmp
cmp
fldt
roll
ret
cmp
dec
push
sar
sbbl
push
shr
jmp
into
negb
jo
cmp
lcall
enter
movsl
xor
fcoms
mov
dec
fs
xorb
dec
outsl
les
clc
mov
call
xlat
ret
jo
ja
adc
outsb
das
xor
ljmp
or
scas
cs
push
mov
xor
lock
jle
ret
xchg
push
cltd
fistl
xor
mov
or
pusha
jmp
repnz
pop
fwait
xchg
addb
in
pop
xor
dec
lock
pop
sub
jns
add
xchg
pop
jb
add
jmp
inc
lea
clc
popa
ss
xlat
adc
push
rorb
cmp
pop
cld
xchg
push
add
sbb
sbb
sbb
sub
jno
inc
ja
or
pop
incl
icebp
jmp
testb
mov
pop
je
jge
and
jae
dec
add
fstps
pop
pop
out
scas
sub
lcall
mov
add
loopne
je
xchg
dec
pop
jne
sbb
pop
mov
mov
dec
dec
mov
loop
or
or
inc
flds
cmp
jl
add
sub
arpl
xlat
adc
jb
mov
mov
in
inc
cmpsb
add
jnp
and
xor
idivl
and
push
pop
jge
jnp
ret
dec
bnd
cmc
xchg
jne
lea
push
add
push
push
sub
jno
cmpsb
out
mov
inc
lahf
or
dec
lods
jge
sbb
pop
push
pop
cmp
sub
jmp
insb
ret
or
subl
imul
flds
jns
and
sub
je
or
pop
test
cmp
inc
xchg
sub
aas
test
xchg
cmp
mov
dec
sub
pop
dec
pop
loopne
int
or
lock
xor
jmp
pop
out
inc
out
jle
mov
inc
movsl
push
cld
std
dec
dec
jp
scas
push
adc
sub
daa
out
mov
dec
fisubl
faddl
jne
fwait
sub
sbb
or
inc
pop
fxch
orl
frstor
add
dec
out
mov
add
incl
sarb
icebp
xchg
inc
daa
and
jo
mov
ret
or
addr16
pop
mov
dec
call
cli
add
or
jb
sub
push
cld
cmp
push
mov
aad
les
jmp
xchg
xchg
int
xor
mov
in
in
jbe
mov
xchg
jmp
stos
pop
mov
push
mov
adcb
mov
loop
xor
push
sub
push
pop
xchg
cmovle
inc
jmp
xchg
mov
int
cmpsl
pop
jmp
jnp
jmp
out
pop
cmp
add
and
hlt
fwait
imul
dec
ja
rorl
neg
jg
dec
cmpl
mov
jo
or
mov
test
jbe
sbb
movsl
stos
mov
or
dec
cwtl
xchg
cld
mov
pop
jb
or
inc
ficomps
push
ret
cs
arpl
add
fiaddl
inc
mov
cli
fnstcw
cmc
or
push
mov
repz
pop
inc
addr16
xor
pop
mov
inc
add
or
sahf
xchg
xor
push
leave
sbb
jle
aaa
loop
out
cmovle
inc
push
scas
pop
xlat
inc
hlt
neg
xor
setbe
xchg
add
sub
or
jbe
repnz
decl
stc
out
daa
push
inc
mov
add
pop
outsl
in
call
or
and
xor
imul
or
jle
pop
fnstenv
sti
cmp
xor
not
enter
idivl
lahf
loop
inc
stc
ss
pop
inc
mov
js
add
sub
cli
pop
push
adcb
push
mov
jmp
scas
mov
lret
inc
rclb
or
fiadds
scas
ror
push
lret
push
mov
xchg
xchg
or
movsl
cmp
sbb
sub
inc
or
push
push
sbb
push
mov
dec
xor
add
and
scas
lock
pop
push
pop
push
push
mov
jbe
lds
xor
cmp
pop
push
aad
pop
daa
gs
mov
and
pop
imul
ljmp
add
lret
inc
add
gs
pushf
add
imul
sub
add
outsl
imul
xchg
jmp
pop
insb
mov
jmp
cmp
dec
cmp
fs
xchg
push
mov
xor
sbb
mov
jmp
sbb
rcll
jg
sahf
cwtl
scas
out
xchg
dec
inc
test
add
lcall
cmpl
dec
dec
in
add
pop
cmp
aam
arpl
pop
dec
add
push
jb
jmp
int3
mov
cwtl
mov
and
test
add
pop
mov
jg
pop
xor
sti
bswap
addr16
mov
imul
js
xor
insl
dec
and
sbb
push
add
std
mov
pushl
fsubrl
incb
adc
mov
shrl
push
cli
pop
mov
popf
sub
sub
xor
push
jmp
push
mov
add
push
rorb
pusha
pop
inc
bound
leave
aas
pop
push
sbb
call
dec
lds
jmp
es
and
pop
dec
fidivrs
cmp
fiadds
and
or
jbe
jp
movsb
shr
adc
jp
sti
xor
fmuls
add
movsl
testb
push
add
push
jmp
push
sub
mov
jnp
dec
and
fidivrs
mov
add
or
adc
mov
mov
pop
jp
int
adc
xchg
pop
pushf
sbb
pop
and
sti
xlat
loope
push
mov
push
je
pop
xor
push
cmp
repnz
in
add
add
push
push
aas
addr16
nop
inc
mov
pop
les
adc
pop
mov
push
aad
or
pop
test
jge
rclb
xor
aad
int
sub
bound
or
lds
jae
test
rcrb
icebp
push
and
add
or
in
lret
into
fsub
shl
ret
das
mov
aaa
out
add
push
mov
push
cmp
pop
or
pop
xchg
dec
push
mov
add
sub
sbb
xor
pop
lods
cs
xor
aad
jo
cmp
getsec
pushl
jmp
les
lods
imul
fstpl
mov
enter
inc
jecxz
or
add
push
js
push
out
inc
push
push
mov
xor
push
jmp
and
hlt
inc
pop
adc
push
push
add
lret
cmpsb
push
pop
fs
xor
adc
adc
sub
sub
out
mov
dec
stc
sub
popa
clc
jl
cmp
and
adc
loope
ljmp
or
roll
cmc
clc
imul
mov
sub
xchg
mov
sbb
rolb
push
clc
cmp
pushf
mov
mov
into
inc
jae
loop
or
pop
cld
jo
xlat
dec
sti
add
cltd
and
bound
iret
dec
xor
loopne
or
sub
sub
pop
xor
add
aad
adc
cmp
mov
scas
je
mov
jb
repz
cmp
xor
das
bswap
dec
shrl
aad
push
push
push
dec
sbb
aam
push
or
add
test
scas
lret
ljmp
in
movsl
pop
cmpsb
mov
sbb
mov
adc
aad
lods
and
add
scas
jb
add
into
popa
lcall
std
test
or
push
test
xor
mov
dec
xchg
mov
jle
out
rorl
mov
push
add
xor
dec
jmp
inc
int
sub
push
aad
out
cmp
dec
mov
sub
add
jb
push
imul
insl
dec
adc
pop
xor
je
loope
adc
sbb
jo
xchg
xor
sub
and
mov
push
divl
pop
scas
cwtl
repnz
bound
lret
mov
adc
xchg
push
jmp
imull
sar
push
push
mov
adc
out
stos
xchg
arpl
ljmp
lods
pop
push
lea
push
inc
push
ds
fsts
dec
xchg
add
subb
fcmovne
addb
mov
jbe
add
mov
movb
loope
test
pushf
cmp
xor
jmp
mov
dec
and
dec
dec
sub
data16
inc
movsb
mov
daa
mov
mov
popa
push
jge
mov
rcll
push
or
mov
movsl
xor
pop
test
adc
sbb
fdiv
ljmp
xchg
jae
or
pop
mov
push
inc
cs
inc
add
cmp
push
ljmp
adc
cltd
cmp
jmp
movb
push
inc
push
pop
mov
jge
movb
jnp
add
xchg
mov
or
shlb
pop
push
cmpsl
into
ret
push
int
fistps
jmp
sub
push
jle
fnsave
in
pop
jns
add
or
cwtl
das
add
push
mov
pop
xor
in
add
call
ss
ficomps
and
popa
movsl
pop
cmp
mov
lcall
rorl
push
push
push
jmp
or
xor
sahf
mov
pop
testl
test
popf
aam
lock
xor
or
or
mov
fisubrl
aam
jmp
loop
jb
xor
insl
sub
sub
or
add
das
repnz
fwait
pusha
mov
sbb
dec
data16
lcall
rcll
sub
data16
subl
lods
aas
inc
or
ret
or
dec
mov
adc
dec
mov
test
inc
das
lahf
cld
fsts
jae
insl
sub
dec
xor
ficoms
push
jge
pop
dec
adc
adc
shrb
int
adc
mov
dec
jmp
pusha
repnz
decb
es
cmpb
inc
pop
jp
and
mov
jmp
mov
rcll
xor
jbe
and
out
lods
adc
mov
shll
sbb
adc
add
mov
dec
xor
mov
and
or
or
inc
xchg
stc
mov
test
sub
je
adc
jmp
mov
or
and
xorb
jmp
mov
mov
cmpb
xor
or
adc
pusha
jle
cmp
sub
add
cmp
adc
lock
cmp
call
test
push
fbstp
jo
cs
push
mul
cmpb
add
sbb
jo
mov
push
sbb
mov
xor
push
out
pop
pop
push
sbb
mov
or
add
cld
mov
jmp
repnz
mov
and
inc
jno
cmp
pop
ret
popf
repz
mov
jae
add
lret
xchg
adc
mov
jp
mov
mov
sbb
mov
paddq
test
icebp
sbb
mov
movsl
orl
nop
cmc
movsb
inc
loop
ret
aad
add
sub
sub
jae
fdivl
mov
std
sbb
or
xor
lahf
daa
or
mov
xchg
mov
add
stos
sti
lcall
xchg
sub
and
cmpsb
pop
shr
hlt
ret
jae
mov
mov
shl
pop
push
decl
in
dec
jb
add
test
add
add
and
or
mov
inc
dec
ss
adc
or
cmpsb
push
daa
push
icebp
hlt
loope
xchg
xchg
lea
movsbl
ret
cmc
test
jmp
or
faddl
sub
pop
sub
in
add
leave
push
mov
jmp
ret
aad
stos
mov
fidivs
xchg
test
fnstenv
stc
hlt
arpl
mov
cmpl
and
mov
ret
cwtl
popf
mov
cwtl
mov
jno
movsl
out
rorb
mov
mov
sbb
inc
push
mov
loopne
push
add
mov
cmpb
ja
pop
notl
xor
jnp
cmc
add
sub
pop
aad
dec
lock
cmpsb
hlt
test
and
xor
enter
pop
orl
dec
jg
cmp
shrl
push
mov
inc
sbb
js
mov
or
shrb
adcb
mov
sub
insb
push
nop
xor
out
jge
mov
push
mov
jmp
es
nop
rcrl
pop
xor
aaa
cmp
pusha
jge
int3
cmp
jg
sahf
cwtl
sub
inc
jp
or
dec
dec
dec
mov
mov
mov
popf
ret
test
jge
xlat
or
rolb
adc
or
int3
movswl
jl
movsb
jns
or
enter
add
aad
repz
jle
lea
movsl
sbb
mov
adc
les
dec
or
out
lods
mov
sub
and
cmc
or
pop
sub
push
test
mov
mov
adc
add
std
pop
add
fcomps
mov
sbbl
imul
pop
xor
pop
pop
pop
popa
popf
ret
or
or
push
mov
pop
push
filds
jnp
cmp
lret
mov
push
dec
fwait
add
jp
or
and
or
pop
aam
jb
es
xor
jle
and
jnp
mov
mov
dec
push
xor
xor
aad
shr
fldenv
xor
insb
xor
inc
dec
adc
or
pop
ficoml
testl
and
inc
and
mov
idiv
out
and
adc
lahf
add
mov
test
sbb
cs
inc
testb
in
adc
sti
mov
xor
inc
shrb
in
test
pop
inc
lods
dec
lahf
xchg
add
inc
sub
mov
sub
xor
ljmp
insl
xor
dec
xchg
orl
or
and
ds
fcomps
or
fldl
insl
cmp
sbb
les
and
out
pop
popa
hlt
xor
shrb
cld
pop
dec
add
push
jmp
adc
add
adc
add
jge
mov
stc
fadds
sub
add
mov
and
mov
inc
push
call
mov
and
or
loop
push
mov
add
jb
adc
adc
mov
dec
pop
xchg
add
popf
push
int
mov
pop
sub
lock
cmp
negb
push
mov
std
in
add
es
push
insb
add
xor
or
or
jo
or
sbb
pop
inc
cmp
dec
dec
movsl
fs
dec
sub
sub
add
adc
arpl
loopne
fldenv
push
in
lock
inc
push
inc
xorb
scas
inc
imul
dec
pop
pushw
cld
mov
dec
dec
in
adc
adc
scas
orb
int3
mov
ret
movsl
rclb
mov
jl
imul
inc
dec
daa
outsl
ret
decl
cmp
mov
sbb
add
push
add
insl
or
sbbb
jb
push
ret
das
mov
push
and
sub
lods
cwtl
xor
push
scas
lock
int
pop
dec
push
mov
ret
add
xor
jbe
imul
dec
jae
sub
int3
push
jmp
idiv
push
pop
xlat
enter
xlat
pop
out
pop
xor
lock
not
xor
push
mov
es
xor
into
and
sub
add
pop
cwtl
push
mov
push
add
cmp
lods
iret
pop
pop
les
lcall
icebp
shll
jg
push
ss
inc
pop
into
mov
imul
and
hlt
cmp
loope
outsb
repnz
xor
jne
mov
cmp
sbb
add
gs
shl
rcll
test
cmp
out
xlat
mov
adc
pop
fs
fcoml
ret
imul
test
cmp
bnd
inc
adc
add
add
sbb
xor
or
jp
sub
loop
out
je
outsb
jmp
xor
clc
addr16
imul
clc
push
pusha
mov
imul
or
sub
adc
pop
loope
bnd
out
fimull
imul
push
sub
xlat
sti
jae
jmp
push
shlb
cltd
subb
push
jge
andl
stc
jo
mov
pop
pop
push
loope
pusha
repz
cwtl
pusha
insl
sbb
pop
popl
shr
adc
push
fstps
lock
mov
lret
sub
xchg
fnstenv
adc
jecxz
cmp
push
inc
cmpsl
pop
and
adc
mov
pop
jne
pop
cmp
dec
push
xor
shrl
iret
jg
xchg
jp
add
mov
enter
pop
push
repnz
pop
inc
in
loop
rcrl
bound
push
fidivl
rcrb
data16
lret
pop
jns
lods
push
and
mov
add
jecxz
addr16
and
adc
inc
das
dec
add
scas
ret
enter
push
add
push
es
dec
cmp
add
ds
andb
aad
jmp
popl
xchg
push
es
dec
test
loopne
mov
iret
adc
cmp
xor
push
cmp
rcrb
add
andl
pop
test
pop
int
outsb
jecxz
adc
add
out
push
xchg
sbb
inc
lret
out
jg
call
mov
add
inc
jb
add
mov
or
lock
dec
add
cli
repz
stos
cmpsb
xchg
cwtl
jmp
ja
or
mov
test
xor
sbbb
add
push
mov
not
jmp
pop
jge
push
repz
pop
xor
mov
pop
lahf
inc
mov
sub
sti
nop
jp
and
cmc
xchg
enter
jb
div
and
add
jo
push
mov
mov
dec
out
fisttps
push
pusha
push
sub
iret
es
add
xor
lock
fisttpl
pop
pop
xchg
ljmp
fs
pop
xchg
pop
pusha
adc
cmp
out
ljmp
icebp
pop
push
adc
outsb
xchg
ljmp
cmp
push
cmp
xchg
dec
dec
and
sub
cs
pop
clc
pop
add
fisttpl
and
adc
frstor
lret
enter
sti
int3
dec
daa
dec
xor
dec
pusha
cmp
dec
lods
push
pop
stos
push
cmp
rolb
pop
pop
not
pop
add
or
sbb
ret
xor
popa
push
addl
push
ret
xchg
mov
sti
in
and
or
mov
and
sub
fstl
sar
dec
scas
sub
negl
mov
push
xchg
dec
add
and
sbb
nop
out
xor
jns
sub
ret
inc
sbb
jg
xor
imul
mov
popf
data16
dec
sbb
adc
ljmp
adc
lock
xchg
std
adc
pop
ds
rcll
sti
stos
mov
sbb
adc
movsl
sub
ljmp
sbb
sub
mov
inc
loopne
dec
jmp
orb
test
lret
lods
pop
sub
push
test
loop
xchg
and
add
cmpsb
or
mov
test
movsl
and
scas
mov
std
out
dec
pop
push
cwtl
inc
jmp
mov
xchg
popa
xchg
push
sub
xor
lea
nop
insb
int
js
pop
shl
add
push
push
or
and
adcl
data16
push
pop
bound
and
push
push
in
jle
or
lods
jb
adc
push
mov
jle
inc
jbe
daa
adc
dec
xchg
push
sti
sbb
inc
cmpsl
sbbb
xchg
jb,pt
cmpb
or
sub
lahf
adc
pop
xor
pop
ljmp
cmp
sub
and
movsl
sbbb
cmp
leave
add
pop
fs
push
adc
push
pop
dec
mov
sbbb
add
cld
scas
push
xor
jp
int
in
add
or
out
sub
pop
jmp
xchg
mov
in
mov
negl
mov
and
xchg
shl
xlat
scas
int
loope
sub
fiadds
adc
sub
inc
mov
cmp
aas
cmp
pop
mov
std
jmp
bound
add
xlat
hlt
ss
sahf
pusha
andb
pop
jge
mov
shr
sub
mov
movsl
loopne
push
ret
xor
dec
mov
cwtl
xchg
sbb
or
faddl
jp
orl
or
sub
push
push
jmp
jo
stos
cmp
push
mov
and
push
rcrl
mov
mov
or
cmpsl
cmp
fsts
sub
pop
sti
dec
mov
or
sbb
mov
dec
sub
lcall
cmp
cmp
or
incl
push
test
mov
mov
xor
into
add
adc
icebp
pop
cld
jl
sbb
fidivs
add
push
mov
sar
adc
mov
rcl
call
xchg
jg
gs
fmuls
sbb
lds
orb
mov
or
dec
inc
inc
add
lods
pop
mov
and
and
mov
cs
cmpsb
mov
push
sub
and
lea
loope
ret
xor
and
cmpb
xor
fistpll
iret
arpl
dec
or
pop
adc
inc
clc
sub
popl
cwtl
lea
mov
mov
rcl
sub
pop
add
dec
lahf
popa
add
pop
lea
jmp
cs
dec
xchg
lret
add
jbe
adc
sub
pop
mov
sbb
rol
insb
sub
sbb
sub
sub
mov
sub
push
push
or
add
push
bound
xchg
or
sbb
jne
pop
xor
out
std
pusha
xor
pop
subb
dec
lds
sahf
cld
add
icebp
xor
sbb
push
inc
incl
mov
sarl
in
mov
pop
add
and
xor
roll
xor
aad
filds
xchg
addb
in
push
mov
pop
push
imul
inc
cmp
xor
enter
mov
cld
loop
mov
cmpsl
pop
inc
push
mov
and
rorb
mov
outsb
ret
sbb
rorb
mov
xor
shrl
insl
sub
aad
shll
lods
jle
lret
jb
and
pop
push
mov
push
push
cmpsl
push
add
pop
or
mov
and
scas
es
notl
jmp
sahf
or
push
sbb
xor
xor
in
outsb
popf
fstpl
xchg
xchg
add
cmp
mov
jmp
fnsave
mov
in
in
adc
pop
leave
call
and
mov
test
push
dec
adc
push
or
mov
mov
sbb
adc
lret
mov
jl
fs
or
push
sub
fprem
sub
add
ret
jmp
xchg
das
pop
fadds
xor
or
adc
pop
sbb
push
dec
leave
push
mov
stos
cmp
cmp
jecxz
or
adc
ljmp
pop
inc
mov
push
out
outsl
inc
push
xchg
imul
loop
mov
fsubrl
popf
jl
dec
leave
jecxz
test
or
mov
imul
ret
mov
xor
movsb
cli
cwtl
cmp
shr
cmp
dec
and
push
test
pop
add
mov
jnp
popf
push
leave
int3
adc
bound
cld
add
xor
add
push
mov
mov
in
xor
out
lahf
add
aaa
jecxz
nop
pop
push
out
cwtl
stos
dec
add
cmp
mov
xchg
and
into
add
push
jmp
push
mov
rcrl
pop
dec
xchg
sub
or
and
test
push
fidivrl
xchg
push
adc
mov
shlb
adc
inc
sub
or
and
sbb
add
vunpcklps
mov
or
and
xor
mov
fnstcw
inc
not
mov
push
xor
sbb
mov
jg
inc
testb
in
mov
in
mov
cmpb
dec
aam
cs
xchg
lods
sub
mov
fbld
cmp
pop
scas
push
aaa
mov
add
pop
in
movsb
movsl
mov
ds
outsb
sub
cmp
push
pop
in
inc
xchg
jb
orb
std
dec
cs
mov
inc
and
dec
pop
adc
pusha
add
push
cmp
xor
loop
pop
daa
pop
sbb
pop
pushf
cmc
pop
jg
andl
shr
test
and
or
cmp
cmc
loop
rol
xchg
push
mov
xchg
jecxz
leave
jmp
test
pop
enter
mov
or
mov
testl
sub
cmp
divl
jb
add
sub
je
pop
or
push
lret
loope,pn
outsl
les
scas
mov
and
sub
sub
mov
push
jne
insb
cmpsl
pop
adc
push
pop
cltd
test
shr
pop
and
mov
incl
push
cwtl
pop
jmp
js
jbe
out
adc
test
stc
pop
in
sbb
je
lahf
divb
xchg
addr16
or
dec
xchg
pop
loop
sub
pop
push
stos
pop
push
lahf
adc
and
cld
jbe
add
es
iret
jl
movsb
xchg
test
mov
sbb
sub
sar
xor
loop
ja
stos
iret
xor
mov
pop
xchg
jb
push
mov
shll
mov
push
enter
jmp
movsb
sub
mov
pop
push
aaa
daa
dec
sbb
cwtl
sub
fisubrs
add
add
or
mov
xchg
scas
adc
mov
test
pop
or
xchg
cmpl
lret
test
mov
mov
das
mov
push
sbb
sbb
cmp
lcall
inc
lods
popf
cmp
inc
jns
add
je
cmp
push
pusha
fisubl
call
cmp
mov
cwtl
loopne
aaa
fisttps
test
inc
shr
mov
cmc
adc
mov
ds
cmpsb
jle
cmpsb
and
mov
jmp
pop
mov
lock
pop
pop
mov
mov
pop
mov
cmp
xchg
pushf
imull
fstps
fsubrs
out
imul
jmp
stos
sub
cs
push
mov
sbb
mov
add
movsl
or
mov
negb
mov
add
jmp
sub
rcl
inc
cltd
mov
jl
lock
and
xchg
adc
stos
inc
xorb
jno
fidivl
jmp
rcl
and
mov
or
cmp
mov
loope
xor
add
test
in
add
fcoml
cmc
sub
xchg
sbb
push
push
push
mov
add
jmp
pop
push
xlat
pop
test
daa
or
gs
out
sbb
mov
mov
pop
les
push
sbb
pmaxub
and
rolb
bound
sub
pop
fs
adcb
xchg
push
mov
sub
rcrb
mov
daa
and
lcall
jb
cmpl
leave
or
pop
in
push
push
shlb
nop
addl
mov
inc
in
mov
das
mov
push
inc
xor
jle
adc
jns
add
push
cmp
dec
mov
add
sbb
add
sti
pop
inc
fmull
notl
mov
out
add
pop
pop
adcw
les
pop
xchg
add
jmp
mov
call
ffreep
outsl
mov
xor
test
xchg
push
push
lds
je
xor
jbe
testb
xor
jmp
mov
push
rolb
jmp
jo
ja
add
mov
cmpb
pop
cld
mov
outsb
cs
cli
xor
or
jge
and
jl
xor
mov
push
and
push
add
push
sbb
stos
adc
add
aam
insb
ds
sbb
and
inc
or
shlb
or
push
cmp
add
sub
inc
adcl
sahf
sahf
jmp
ljmp
pushf
jmp
hlt
aas
xchg
jl
inc
add
rorb
outsb
outsl
jmp
or
fcomps
pop
not
push
and
and
ljmp
xchg
and
or
out
sub
cli
ds
cmp
jmp
pop
mov
jle
aad
push
add
andb
sbb
and
stos
pusha
std
adc
add
add
mov
mov
icebp
mov
sub
add
testb
rcll
push
je
or
test
cmp
std
subl
leave
stc
mov
push
inc
pop
ret
xor
sub
and
and
mov
push
loopne
dec
dec
mov
sbb
sbb
and
push
cmp
inc
loope
mov
es
sbb
add
imul
mov
lods
aaa
or
sbb
adc
sub
adc
xchg
adc
mov
fdivs
jmp
push
pop
fbstp
cmp
imul
or
nop
add
dec
pop
pop
repnz
lock
add
cmp
dec
stos
loope
sbbb
mov
daa
push
or
add
bound
jmp
cli
in
pop
cmc
or
decb
cltd
popa
outsl
jl
neg
pop
xor
cmp
or
sub
pop
jg
inc
mov
mov
add
das
scas
aaa
cmc
lcall
push
jns
jp
out
adc
fmul
ret
push
aad
adc
cmovo
add
cltd
pop
inc
push
push
ds
add
sub
jg
cli
inc
or
jae
jmp
loope
sbb
or
lcall
subl
inc
cmpsl
mov
cli
add
push
push
movhps
add
xchg
adc
lods
lea
dec
imul
scas
add
xchg
xor
push
adc
cli
lret
lea
xchg
jno
inc
ja
or
rcrb
xchg
cwtl
and
adc
pop
cmc
pop
dec
popa
adc
subb
mov
push
rorl
or
inc
mov
int
add
or
pop
pop
stos
aaa
int
iret
sbb
jl
xchg
out
jmp
fcomps
xchg
jns
shll
das
orb
or
adc
repz
inc
clc
jl
add
push
out
xor
mov
popa
pop
jmp
sub
pop
sbb
sbbb
jmp
ljmp
pop
lods
in
in
dec
mov
add
pop
imul
jns
fisubrs
pop
adc
and
push
add
sub
shr
pop
jle
sbb
push
out
push
out
loopne
lock
cmpb
lcall
add
std
add
dec
xchg
mov
cmp
out
pushf
dec
lahf
shlb
aad
push
add
adc
enter
cmp
sbb
js
push
out
sub
les
fmuls
push
jnp
push
fcmovnu
cmp
add
pop
mov
sub
rorb
outsl
dec
mov
mov
add
imull
jno
xchg
push
dec
pop
dec
pop
test
adc
movsl
xlat
push
ret
inc
fcom
xor
into
sub
push
add
sub
lods
pop
and
sbb
stos
jecxz
call
dec
pop
arpl
jbe
inc
orb
orl
scas
insl
sub
pop
fcompl
jge
push
add
inc
add
xor
and
cmp
shr
or
orl
pop
ljmp
jae
mov
sub
orb
sbb
inc
sbb
and
push
sub
mov
mov
cmp
pop
pusha
pop
das
sub
push
mov
jmp
pop
lds
add
cmc
icebp
movsb
add
mov
loop
lcall
inc
loopne
dec
hlt
push
dec
xor
inc
xor
pop
sub
imul
xorb
imul
jmp
pop
pop
clc
imul
jp
pop
or
in
mov
ljmp
cmp
and
sub
jge
adc
int3
adc
pop
sahf
pop
lcall
jns
cmpsb
push
dec
or
jmp
pop
lock
jae
and
pop
and
push
cmp
rcll
push
or
sbb
mov
jle
jmp
insb
dec
lret
dec
mov
pushf
cmp
insl
xor
loop
add
dec
mov
adc
and
sub
fcoms
or
fidivs
test
jnp
outsb
lea
fbld
arpl
push
push
mov
push
add
xor
arpl
add
fildl
push
add
inc
push
xor
enter
pop
mov
pop
sub
cmp
or
push
aas
neg
mov
sar
inc
mov
dec
ljmp
mov
cmp
sbb
je
pusha
mov
push
cwtl
mov
push
mov
jecxz
add
sub
xchg
addb
pop
mov
lods
sbb
jne
pop
arpl
sub
jbe
dec
xchg
filds
xchg
mov
xchg
pop
out
into
pop
mov
dec
pop
pop
stos
bound
add
mov
xchg
sbb
add
or
pop
adc
cmpsl
jecxz
jmp
mov
call
jg
insb
push
or
popa
lret
adc
or
xor
lahf
add
push
sub
push
jmp
adc
out
rorl
repz
filds
js
lahf
divb
inc
pop
pop
add
js
pop
and
cmpl
and
lods
push
inc
add
out
jmp
mov
add
inc
fsub
bound
push
mov
inc
jle
call
add
loopne
jle
inc
pop
fdivl
daa
xchg
ret
dec
inc
or
je
test
adc
mov
fucom
enter
mov
push
mov
jbe
inc
xchg
mov
cmc
xor
sarb
arpl
out
sub
sub
ret
jmp
into
or
mov
fs
or
test
jne
jmp
rolb
sbb
divl
sbb
gs
nop
xor
dec
mov
cwtl
cmpb
incl
add
in
ret
mov
pop
mov
adc
rolb
adc
fidivrl
aas
dec
icebp
popa
enter
cmp
ret
dec
mov
pop
inc
push
pop
mov
mov
inc
sub
push
or
push
sbb
xlat
clc
inc
add
sub
add
push
or
mov
ret
or
and
add
mov
mov
jecxz
xchg
dec
cmpsb
cmp
dec
push
add
cmp
mov
xor
daa
jmp
inc
testl
fnstcw
imul
shll
jle
lcall
push
sbb
jmp
mov
mov
iret
mov
punpckhwd
jns
js
adc
in
add
xor
push
mov
add
and
push
push
pop
pop
mov
xchg
cmp
pandn
adc
jb
dec
jmp
pop
std
mov
cmpsb
push
sub
in
lods
dec
xchg
push
push
xchg
or
or
adc
inc
xchg
enter
pop
out
js
mov
notb
ljmp
rclb
jl
push
incb
cmp
or
test
aaa
fs
adc
movl
loop
sar
mov
pop
jae
sub
and
cmpsl
sarb
mov
cmp
sub
sub
test
pop
andb
and
sub
es
mov
leave
pop
push
add
mov
mov
dec
sbb
sub
pushf
ret
mov
jo
sub
pop
pop
movb
pop
push
dec
dec
and
dec
mov
sbb
rolb
jmp
ds
mov
xchg
mov
and
lea
and
scas
inc
mov
push
xchg
jmp
jb
in
lods
xor
xchg
adc
lods
xor
ficoml
les
add
mov
popf
enter
pop
cmp
mov
int3
push
icebp
push
out
jnp
and
add
rorb
ljmp
hlt
add
nop
inc
ret
cmp
jo
insl
jmp
movsl
movsl
xchg
pop
jl
jmp
pop
pop
mov
hlt
jle
jl
dec
inc
addl
outsl
jmp
pusha
mov
sahf
add
lds
pop
negb
mov
pop
lahf
int3
roll
and
lret
push
xor
push
dec
dec
lahf
fcmovbe
nop
ret
xor
inc
dec
lds
or
adc
xchg
imul
pop
call
pop
aad
addl
mov
jge
push
push
mov
cmp
int3
push
jmp
mov
pop
sbbb
jne
ret
adc
fnsave
cs
xchg
andb
add
mov
jmp
out
mov
ja
fldl
sub
mov
int
push
xor
es
mov
mov
pusha
pop
das
push
jne
xlat
xor
dec
es
dec
inc
add
mov
sbb
addr16
test
sub
in
leave
push
jno
jo
fdivrl
and
jge
jl
cld
int3
ret
enter
lret
mov
pop
adc
aaa
xchg
dec
adc
jns
bound
ljmp
mov
push
adc
mov
adc
dec
jecxz
cmp
mov
lret
mov
jecxz
sti
test
cltd
xor
icebp
push
or
rol
pop
and
dec
lret
push
add
movsb
add
lahf
inc
aam
xchg
adc
xchg
cwtl
mov
jmp
cltd
pop
or
ret
testb
leave
sub
inc
or
or
popa
nop
push
xor
jbe
jmp
mov
dec
js
dec
cwtl
enter
loopne
add
or
int
inc
dec
mov
fiaddl
mov
cs
jmp
out
pop
icebp
shrl
clc
dec
xchg
std
movsl
pop
push
aaa
lods
mov
popa
negb
fs
mov
dec
jecxz
outsb
bnd
dec
or
je
push
add
sarl
jmp
std
popf
mov
or
sub
jge
lds
adc
jmp
xor
cmp
pop
push
push
jne
sbb
js
adc
adc
or
out
sub
repz
xor
repz
incl
or
lods
add
call
inc
jge
xor
mov
jno
dec
pop
out
mov
xor
mov
or
fcoml
dec
sti
cmp
and
loopne
push
pop
popa
jle
jmp
push
stc
add
and
sbb
adc
pop
and
jl
sub
add
in
xchg
xor
mov
fnstenv
sarb
add
add
sbb
je
outsb
test
adc
popf
sub
pop
js
mov
pop
jg
jge
icebp
ret
lea
lret
test
jns
jbe
rcrb
mov
push
cmc
bound
push
mov
adc
andb
loope
add
jecxz
adcb
jl
and
and
mov
pop
lcall
iret
pop
movsb
sub
roll
mov
jbe
or
das
pusha
fstps
repz
push
sub
push
cmp
and
icebp
push
scas
mov
cld
mov
cmp
das
int
xor
mov
inc
or
cwtl
xchg
imul
aam
adc
out
jo
sub
jb
mov
mov
or
ljmp
cmp
test
xor
jecxz
jmp
mov
jl
jmp
sub
testb
add
and
pop
mov
jp
mov
and
adc
cmpb
mov
adc
ret
jg
gs
lahf
ljmp
ljmp
mov
cmp
sub
push
push
push
mov
xorb
adc
test
xor
xlat
je
jecxz
xor
pusha
sahf
cmc
dec
xor
es
or
test
lds
imul
push
sti
and
int
mov
shll
ret
inc
faddl
fbstp
out
aad
inc
sbb
xchg
mov
xchg
add
cwtl
test
insl
mov
cld
push
addr16
or
xor
mov
adc
or
mov
mov
push
scas
loope
xor
mov
and
add
or
pop
push
fyl2x
loope
mov
mov
mov
pop
ja
sarb
and
jns
bound
push
in
adc
xor
das
add
xchg
arpl
cmp
push
in
lahf
popa
pop
lret
pop
cmp
pop
hlt
pop
push
ja
aas
pop
js
pop
sti
cli
and
cmovae
sbb
sub
mov
jmp
jae
and
popa
cli
inc
cmpsb
cs
xor
out
pop
adc
xlat
orl
lods
loope
cmp
imul
mov
shr
lcall
xor
mov
sub
insb
cmp
mov
jae
adc
out
or
shrl
clc
xor
pusha
mov
mov
add
jmp
xchg
mov
mov
push
mov
jmp
test
repnz
dec
shrb
cmp
outsb
stc
pop
dec
mov
lods
or
pop
add
fstl
mov
sbb
cmp
sub
mov
xchg
xchg
dec
ret
jns
push
leave
jo
daa
or
pop
icebp
xchg
lcall
pop
mov
pop
add
pop
xor
sub
push
pop
cli
jl
es
cmp
cwtl
xchg
or
jo
push
inc
inc
sbb
inc
pop
sub
loopne
push
push
mov
lcall
into
lds
jmp
stos
in
jae
pop
gs
mov
pop
mov
push
loop
aam
sub
pop
inc
or
push
pusha
xchg
hlt
bound
jmp
addb
gs
inc
sub
das
aam
aad
in
mov
or
imul
cld
mov
fildl
jge
add
and
fistps
mov
outsb
dec
jo
pusha
mov
xor
imul
test
fisubrs
jns
jb
cs
jnp
jae
inc
das
in
adcb
and
scas
pusha
sbb
pop
xor
pop
and
add
bound
mov
mov
lds
mov
arpl
pusha
mov
call
and
add
repz
jecxz
jle
daa
cld
jo
jnp
xor
or
cmp
cs
mov
push
ljmp
adc
cmpl
push
push
and
cmpsl
xchg
movsb
and
rol
inc
push
mov
cld
int3
jae
sbb
pop
out
and
jmp
cmc
cmp
add
sarl
popf
call
mov
lcall
sub
jo
call
inc
test
loop
dec
stos
inc
sbb
fcomps
sti
daa
movsl
push
and
out
daa
testb
adc
arpl
inc
cmp
xor
cmp
xor
or
push
xor
imul
ja
pop
jge
jp
fwait
sub
xchg
or
sbbb
inc
xor
scas
mov
push
punpcklbw
mov
inc
pusha
xor
iret
or
bnd
fs
test
pop
hlt
inc
pusha
sub
pop
xchg
add
mov
jle
adc
inc
adc
dec
clc
sahf
mov
jge
xchg
or
mov
fdiv
push
jno
pop
cwtl
sub
mov
xchg
es
add
sub
sti
loopne
cmp
shr
mov
push
cwtl
leave
mov
ja
dec
add
adc
lds
lcall
nop
dec
add
ss
imul
orb
pop
sub
std
fsubs
or
jb
pop
es
fldcw
jae
inc
int
push
xchg
pop
popa
push
push
cwtl
clc
jmp
bswap
push
cld
outsl
mov
cli
jmp
pushw
push
adc
int3
std
sahf
add
add
push
sub
imul
dec
scas
roll
jmp
cmpsl
and
sbb
lret
or
sbb
lret
xor
insb
fwait
and
pop
adc
scas
add
lahf
repnz
adc
and
pusha
out
aaa
cmp
jnp
push
lds
jg
mov
push
mov
sub
pop
inc
dec
testl
sub
pop
pop
movsl
jmp
push
and
jno
cli
mov
add
mov
ljmp
push
sbb
cld
or
pop
xchg
iret
push
scas
cmp
xchg
idiv
push
mov
pop
pop
xchg
inc
and
outsl
test
fcomip
push
pop
or
jnp
movl
pop
sbb
cmp
sets
int3
imul
cmp
bndldx
scas
pop
cmp
push
or
push
call
xor
jo
jo
mov
jmp
cmp
aas
mov
mov
aas
mov
pop
push
sbb
fstl
cmp
mov
sti
movsl
and
rcl
dec
scas
negb
ds
fistps
por
adc
and
lret
push
bound
pop
icebp
cmp
add
mov
push
pop
sub
or
gs
pop
in
stc
inc
pop
mov
adc
sbbl
mov
arpl
ss
push
outsl
push
push
out
or
jo
inc
xchg
xor
cli
sbb
cld
jmp
inc
xchg
sbb
xchg
fcomps
ss
addb
xor
mov
call
or
ret
pop
mov
or
sahf
add
mov
dec
cmp
leave
sub
movsl
and
rcrl
mov
and
imul
pop
jb
dec
mov
pop
and
dec
lret
shr
lahf
test
or
or
xor
sub
push
ja
lahf
jl
dec
jg
jo
addr16
push
and
jmp
pop
dec
or
popa
adc
pop
stos
add
ja
out
mov
out
sub
pop
in
dec
popf
pop
sar
dec
mov
sub
insl
pop
add
jmp
sahf
pusha
mov
outsl
xchg
pop
mov
add
sahf
inc
sub
movsl
xlat
int3
roll
xlat
hlt
add
inc
orl
or
mov
repz
rcll
mov
cmpsl
stos
cmp
dec
fs
pop
mov
ljmp
int3
add
into
int
icebp
jmp
dec
jmp
dec
int
jg
insb
cmp
pop
push
adc
cmc
jg
mov
or
pop
jmp
das
fs
add
or
jge
xor
add
pop
add
cld
addl
cmp
jmp
mov
adc
rorl
sub
das
test
test
xor
or
lret
std
push
les
sahf
mov
enter
dec
stos
in
and
push
mov
sub
or
pop
sbb
xchg
stos
push
leave
sub
inc
rep
enter
leave
push
pushf
mov
mov
sbb
adc
inc
add
sbb
es
lret
addr16
loop
lock
inc
add
pop
cmp
aad
push
leave
pop
xchg
add
mov
and
and
enter
sub
inc
mov
or
jp
bound
xchg
dec
fsubrs
addl
xchg
sub
insl
sub
divl
cltd
or
out
push
jnp
fwait
jg
mov
jmp
int
inc
add
dec
das
add
mov
inc
cld
in
add
jae
mov
cmp
daa
dec
je
add
push
mov
adc
lcall
push
loopne
rcll
cmp
jecxz
add
jae
mov
scas
addb
mov
incl
shlb
repz
mov
lock
dec
hlt
sbb
cwtl
mov
inc
push
mov
mov
push
cmp
add
or
inc
inc
loope
add
add
xor
ret
pop
nop
mov
addr16
mov
adc
movswl
daa
push
stos
lods
addb
dec
and
fwait
cmp
push
xor
sub
and
jnp
fidivs
mov
mov
mov
andl
jl
push
js
sub
and
ret
sub
dec
std
out
int3
push
and
out
je
mov
addr16
dec
movsl
inc
push
or
adc
jno
loope
xor
push
pop
cltd
popa
xor
ret
add
shrb
arpl
leave
sbb
out
pop
lock
aas
dec
xor
pop
sub
or
add
fbld
in
mov
cmp
mov
mov
jo
cmp
in
ja
jge
xor
jp
inc
bound
inc
test
leave
ds
push
add
add
sbb
or
out
inc
sub
add
iret
mov
or
add
jmp
aad
icebp
out
fidivs
and
fisubl
push
mov
push
push
in
jmp
aad
in
stos
shll
sbb
and
add
cmpb
popf
jmp
sub
add
and
cmp
lret
data16
xor
aad
imul
inc
stc
addr16
push
dec
adc
and
mov
cmc
sbb
cld
es
std
jnp
imul
das
or
sub
cltd
inc
pop
xor
push
inc
jne
inc
xchg
lods
subb
xchg
and
or
mov
insb
iret
inc
mov
inc
pusha
sbb
pop
or
push
inc
sbb
ljmp
enter
sahf
push
sbb
or
rolb
lods
sbb
add
push
jmp
xchg
fdiv
ds
aad
sar
dec
xor
adc
mov
adc
mov
jne
sub
fcomps
pop
and
icebp
mov
arpl
add
in
adc
scas
add
clc
repnz
les
sbb
pop
sbb
data16
bnd
and
xor
sub
adc
jmp
repz
outsb
add
xor
jmp
dec
sub
or
mov
imul
push
jge
cltd
jne
xor
jecxz
add
outsl
pop
movsb
cmp
out
pop
divb
inc
or
inc
enter
sbbb
lahf
push
pushf
pop
push
cmp
std
leave
xor
inc
jg
jg
push
notb
repz
jb
mov
jmp
loopne
adc
dec
sbb
clc
addb
in
dec
cwtl
xchg
dec
in
lds
out
xor
fdivs
idivl
das
pop
arpl
mov
ds
push
aas
xchg
adc
mov
in
cmp
int
cmpsb
push
pop
xchg
adc
adc
call
popf
test
jp
scas
int3
inc
lods
mov
shr
lods
movsb
shrb
cmpsb
lock
outsl
outsb
pop
push
imul
or
add
add
jge
loope
cwtl
xor
popf
pop
and
cmc
dec
jno
add
jns
rcrl
fadd
cmp
rcl
mov
adc
pop
mov
repnz
pop
cs
or
movsl
xlat
push
jno
dec
push
jae
es
sti
das
push
add
in
sub
cmp
lds
lret
mov
mov
add
out
clc
cwtl
sbb
sbb
ja
and
fiadds
inc
je
fs
lods
cld
push
mov
int3
push
push
cmp
sti
test
jmp
pop
xchg
hlt
mov
test
sbb
push
or
in
repz
push
dec
fcoms
xorl
adc
test
add
mov
cmp
nop
xor
or
cmp
mov
bound
sbbb
push
sarl
rcl
or
test
sbb
xchg
jge
mov
cmp
or
push
std
or
repnz
mov
mov
sub
jne
mov
lret
add
jbe
mov
dec
pop
aad
cwtl
xchg
inc
mov
mov
push
adcb
jne
pop
push
xor
pop
push
popf
jae
insb
lcall
loopne
xchg
inc
sarb
mov
pushf
ljmp
sub
add
fistl
movsb
loopne
jo
dec
shll
push
cmp
pop
lret
jl
or
cmp
sbb
jg
adc
cmp
test
cmpsl
add
pop
fsubrs
rorl
pop
insl
fsubs
or
imul
and
or
fisttpll
adc
cmc
mov
movsl
clc
pusha
test
outsb
mov
lret
xchg
hlt
push
add
cmc
jnp
inc
add
dec
cwtl
push
mov
lahf
aam
sub
mov
pop
in
loope,pn
pop
push
divl
adc
shl
imul
push
jl
push
mov
pop
ljmp
jmp
xchg
lret
cmpsb
arpl
ficoms
fcmovbe
mov
adc
and
push
add
sub
adc
cmpsb
lea
or
mov
adc
ljmp
repz
shlb
inc
jmp
dec
inc
sbbb
sub
ret
ror
push
add
pop
jle
ja
pop
addr16
cmp
push
inc
dec
push
es
jno
xchg
data16
fcmovb
or
sbbb
lods
add
and
aas
jnp
xorb
cld
adc
xlat
add
cmc
fdivrs
in
inc
inc
xchg
outsb
loope
outsb
add
push
jb
push
xor
sbb
repz
push
pop
fistl
das
jns
jb
pusha
test
dec
inc
xlat
orb
lds
mov
rolb
or
icebp
xor
xchg
enter
sbbb
mov
push
sti
mov
imul
or
sti
rorl
push
cmp
xchg
cmpxchg
or
inc
sub
mov
subb
xor
or
sub
add
cli
jmp
inc
fsts
cmp
push
cmp
pop
push
sbb
dec
inc
jmp
or
popa
sbb
fidivrl
rcr
mov
cwtl
das
subb
pusha
addl
out
mov
fucomip
inc
mov
dec
add
and
ret
mov
icebp
enter
mov
push
mov
pop
rcrl
loope
or
jno
mov
xchg
sub
add
pop
inc
or
daa
fimuls
adc
adc
inc
xor
add
dec
cmpsl
inc
jnp
or
push
inc
not
add
test
mov
or
dec
sbb
and
mov
sub
push
xchg
sub
in
popf
jmp
xchg
lret
mov
dec
movsb
mov
gs
add
mov
or
dec
sub
inc
lods
push
ds
xlat
outsl
test
cmp
jle
inc
sbb
adc
push
pusha
int
or
mov
sbb
pusha
int3
test
sbb
pop
mov
dec
test
flds
mov
add
dec
push
mov
or
jg
std
mov
or
rclb
push
negl
int3
call
test
mov
cmc
mov
mov
mov
loope
cs
push
xchg
mov
jmp
push
outsb
bound
into
ljmp
dec
cltd
cwtl
sub
pusha
icebp
xor
dec
push
in
add
imul
test
addr16
movl
inc
mov
lcall
mov
or
idivl
int3
inc
neg
or
fcmovnb
or
mov
adcb
mov
test
jae
lret
sub
add
mov
adc
stc
add
cld
fwait
dec
movl
out
int
test
inc
inc
mov
cmpsl
inc
loopne
pop
pop
fwait
out
and
sbb
add
es
mov
fsubrs
xor
shlb
push
imul
jmp
mov
in
pop
arpl
dec
jmp
add
loope
push
or
and
mov
inc
adcl
das
pop
xlat
mov
cmpsb
sahf
andb
mov
add
mov
jmp
ljmp
pop
jno
call
pop
push
out
push
mov
inc
fsubrl
scas
and
stc
jno
pop
add
inc
loop,pt
push
ret
xchg
or
xchg
dec
cmp
push
add
jg
dec
and
js
jmp
jge
orb
rcrl
in
enter
xor
sub
sub
jbe
call
push
ret
insb
icebp
push
popf
cwtl
mov
out
lret
xor
cmp
jl
pop
jmp
lret
mov
mov
jmp
or
fstps
rol
aam
lret
stos
sub
pop
insl
or
sub
inc
push
iret
xchg
sub
inc
loopne
or
push
mov
push
inc
push
add
ficompl
pop
shr
xchg
shl
inc
pop
lock
popf
std
pop
lods
jbe
leave
jecxz
xor
ds
jnp
and
inc
fs
mov
std
adc
adc
and
add
outsb
sub
hlt
movlps
mulb
addl
std
add
pop
sub
lret
pop
nop
sbb
mov
nop
into
jmp
lret
push
cmc
push
mov
jge
adc
icebp
or
and
xorl
inc
xchg
in
inc
jbe
pushl
idivl
push
lock
out
and
nop
and
and
and
sub
fdivp
dec
mov
mov
cld
pushf
sbb
dec
or
cld
pusha
push
push
popa
mov
adcb
push
adc
adc
pusha
sar
or
sbb
mov
inc
or
sbb
mov
xor
mov
stc
jnp
mov
or
add
xchg
add
fs
jb
pop
inc
add
jns
and
int3
cmp
push
shlb
es
frndint
lock
and
mov
fsubrl
lds
or
or
xchg
or
or
orb
pop
les
add
add
cs
or
hlt
xchg
or
in
mov
push
sbb
rcll
jmp
and
and
push
pop
mov
inc
sbb
inc
insl
adc
mov
aas
mov
loope
jo
sub
subb
std
adc
inc
push
xchg
imul
inc
addr16
dec
shld
test
pop
jge
orb
cmp
fptan
jno
cmp
jae
test
mov
out
add
js
mov
push
push
lock
int
sbb
adcb
jns
sub
xor
or
add
adc
loope
add
gs
int3
inc
loopne
daa
or
mov
or
pop
or
or
nop
or
xor
push
decl
mov
push
cmpl
stos
pusha
add
xchg
adc
jno
or
mov
sub
add
shll
and
mov
xchg
fs
stos
mov
add
hlt
arpl
ljmp
sbb
and
je
push
push
mov
cmp
dec
cmc
sti
dec
pushf
ret
push
scas
cmp
push
cli
pop
and
das
cwtl
pusha
gs
cld
fnstsw
pop
mov
test
nop
fsubrp
pop
add
lods
and
or
mov
scas
or
mov
xchg
jbe
jmp
test
mov
xchg
js
jecxz
add
bound
mov
sub
dec
mov
push
push
jp
add
adc
jecxz
mov
add
popa
inc
loopne
sbb
add
sub
push
cmpsb
testb
ja
mov
jmp
aas
loopne
fdiv
rcl
push
cs
push
mov
clc
pop
inc
add
popf
ljmp
jne
sbb
loopne
jmp
jbe
pop
and
mov
ja
addl
push
dec
push
jmp
mov
insb
ss
sbb
outsl
pop
or
pop
push
jmp
lret
adcl
dec
sbb
mov
dec
pop
jns
sub
cmpsl
cmp
mov
add
lahf
cld
in
test
mov
mov
pop
add
jbe
push
out
hlt
and
lret
test
xor
insl
sbb
add
push
cmp
jbe
stos
sbb
jmp
or
pop
mov
popf
pop
mov
fsubr
je
mov
je
mov
jge
or
test
mov
jp
out
inc
inc
fisubrs
push
dec
nop
faddl
push
jae
sbb
sbb
sbb
out
push
iret
push
cs
and
jl
jmp
jne
adc
insb
mov
out
jp
sahf
test
pop
xor
xchg
int3
cs
loopne
mov
push
ret
vpmacsdqh
stos
fcoms
scas
outsl
jge
stos
push
mov
push
test
mov
sub
fisttps
cmp
jmp
scas
xchg
cmpsl
push
adc
icebp
dec
adc
mov
add
jl
call
std
xchg
out
adc
sbb
fimull
nop
outsb
push
pop
movsl
add
addr16
arpl
and
add
mov
es
imul
out
xchg
sbb
ljmp
jmp
lret
iret
adc
cmp
mov
add
out
shrb
sbb
pop
cmpsl
repz
ret
scas
or
test
add
and
pop
sbb
cmp
je
sahf
cmp
jbe
xchg
inc
add
adc
rol
lock
jo
loope
xor
mov
xor
pusha
sbb
lret
or
push
sub
mov
push
scas
test
sbb
loope
cmp
push
rcrl
xchg
or
jnp
inc
add
jb
sub
repnz
sub
push
mov
xchg
add
and
or
shll
ret
push
mov
mov
jmp
notb
mov
daa
push
push
fstl
lahf
ja
pop
and
out
test
mov
inc
inc
repnz
inc
and
jne
mov
outsl
pop
lock
push
jp
int3
sbb
movsl
sbb
lret
and
popa
sti
fimuls
mov
xor
and
imul
inc
or
subl
iret
jecxz
xor
cmp
mov
daa
adc
popa
mov
bound
je
rcrb
int
add
or
mov
adc
inc
xor
mov
sbb
fistl
push
mov
xchg
sub
loopne
mov
inc
faddl
mov
and
fs
popa
dec
adc
add
inc
das
insb
neg
xor
ss
cld
int3
addb
pop
mov
rorb
iret
repnz
xor
mov
orb
push
or
pop
lods
inc
sub
mov
jbe
pop
push
push
mov
pop
mov
sub
xchg
cmpsl
jge
inc
stc
test
cltd
and
mov
sbb
das
add
call
ret
xchg
bound
jecxz
or
lods
xor
cli
add
scas
testb
sub
sbb
adc
sub
stos
stc
add
sub
sub
scas
xchg
or
or
insl
testl
mov
sbb
mov
cltd
dec
cmpsb
test
adcl
push
push
sahf
inc
add
sbbb
dec
and
jae
cwtl
lea
add
add
in
pop
pop
xorb
aad
mov
or
jnp
out
das
jmp
push
je
loope
sbb
aas
stc
push
mov
lods
xchg
add
and
push
dec
lret
pop
jnp
aad
push
push
jg
out
test
subb
xor
xor
inc
add
or
jmp
push
fmuls
add
int3
push
mov
sbb
sbbb
std
sbb
sbb
sbb
pop
out
and
or
push
mov
outsl
or
into
adc
movsl
add
out
xchg
add
lret
scas
lds
mov
fdivs
je
dec
push
inc
scas
ljmp
negb
popa
and
inc
icebp
or
lds
fdivrl
sbb
ja
mov
icebp
mov
fstpl
loop
shlb
paddw
pop
sub
add
stc
stos
add
sbb
mov
clc
dec
jne
xchg
scas
js
or
daa
xor
cwtl
daa
xchg
aas
bound
cmp
mov
int3
add
das
out
add
lock
mov
ret
rcrb
int
fs
xchg
iret
inc
push
jno
adc
mov
sub
pop
bound
cld
and
inc
adc
gs
scas
jge
xchg
pusha
in
enter
jb
cs
inc
mul
aas
test
pop
pop
mov
pop
sbbl
push
and
ficoml
jns
sub
sub
mov
int3
outsl
cld
jb
mov
sahf
aad
xchg
xchg
or
fstl
outsl
jns
mov
adc
and
orl
pop
enter
add
mov
dec
add
mov
stos
add
xor
fnsave
or
enter
or
aaa
cltd
dec
mov
mov
push
or
in
jnp
pop
cmp
cmp
inc
scas
add
in
and
jmp
movsl
jle
rclb
xor
dec
ret
popf
push
jo
mov
mov
or
nop
cltd
or
stos
inc
add
std
sbb
lahf
push
jl
xchg
loopnew
jno
cmp
jle
rorl
and
xchg
pop
stos
xchg
imul
movsb
out
add
out
repnz
adc
jbe
cli
movsl
pusha
test
repnz
sub
popa
push
les
stos
or
add
xchg
push
div
addr16
push
bound
stos
fldl
adc
test
sahf
xor
push
sbbb
push
jmp
or
push
adc
adc
cmpl
jae
cmp
add
push
aad
dec
inc
jge
inc
jns
dec
xchg
push
scas
mov
xor
ffreep
mov
jo
add
sub
adc
leave
dec
sub
gs
xchg
xchg
out
outsb
xchg
mov
xlat
mov
jmp
mov
pop
ja
mov
or
push
sar
and
mov
dec
xchg
mov
or
dec
xor
sub
xchg
out
and
data16
popa
mov
fmull
add
jnp
cmp
out
and
add
pop
fmul
adc
mov
in
mov
fistl
arpl
lret
popl
imul
pop
arpl
shrl
pushf
loop
hlt
fmuls
inc
mov
int3
dec
stos
dec
mov
mov
jl
daa
add
ljmp
mov
push
push
daa
adc
or
bound
jp
jge
cmp
or
xchg
loop
pop
mov
xchg
sub
add
or
add
adc
ja
fdivrs
lods
mov
push
gs
jge
xor
and
push
in
shr
or
xchg
push
ds
jbe
adc
pop
jbe
xlat
jmp
pop
cli
popl
sbbb
jnp
pop
jg
xchg
or
out
mov
push
mov
call
and
movsl
sub
or
push
mov
push
or
add
in
mov
push
mov
pop
mov
mov
jmp
xor
xchg
lds
inc
push
sub
ret
pop
rcpps
add
out
data16
push
push
pop
mov
movsb
scas
mov
mov
bound
dec
mov
mov
or
jecxz
movsl
xor
fisubrs
int3
sbb
or
roll
xor
push
add
sbb
and
jnp
int3
jmpw
mov
pop
ja
jbe
push
aam
cwtl
or
mov
pop
xor
sub
or
es
divl
fdivr
mov
arpl
adc
std
add
ljmp
push
add
clc
enter
shlb
lret
and
xchg
mov
mov
jne
mov
dec
jp
adc
ljmp
rcr
int
sub
flds
dec
ljmp
push
leave
test
jnp
roll
sbb
mov
mov
sub
mov
aas
out
pop
push
dec
out
xor
add
sub
push
mov
push
sub
or
add
test
mov
push
pop
pop
sbbl
pusha
xor
mov
mov
cmp
and
add
add
lock
lods
push
daa
mov
data16
mov
mov
push
sub
out
mov
jmp
repnz
inc
cmc
jo
add
xchg
subb
mov
hlt
add
or
pop
frstor
cmp
add
cmpsb
mov
inc
mov
jge
ja
jle
ret
add
fincstp
mov
inc
add
add
xor
ljmp
mov
add
sub
sub
dec
call
pop
out
add
pop
lret
jns
gs
jns
sub
jae
rcrb
xor
daa
jbe
mov
in
sub
push
push
sbbl
mov
jle
and
lahf
jmp
jmp
sub
jno,pn
cmpsl
jge
movsb
lea
cli
cltd
out
xor
dec
popa
int3
jns
das
loope
jmp
push
gs
cld
add
jp
rcrl
fnstsw
adc
sbb
shr
and
cs
popf
push
add
jg
pop
adc
inc
xlat
rcrb
fcoml
test
push
sub
andb
push
popa
push
outsb
ret
stc
cmp
test
pushl
mov
je
or
daa
in
in
roll
ror
or
mov
ja
sbb
pop
xor
jb
and
stc
cmpsl
adc
push
mov
bound
jp
outsb
cmc
mov
push
jne
pop
or
outsb
lcall
pop
xchg
pop
cmc
out
jmp
sub
and
stos
pop
sub
sbb
mov
push
ret
imul
mov
add
arpl
jl
dec
js
aas
adcb
lret
pop
mov
fistps
arpl
arpl
repnz
out
ja
into
mov
sbb
and
ss
adc
cmpb
or
cmp
cmpsl
jg
xor
jmp
dec
es
das
dec
sub
add
push
sbb
or
jl
or
int3
mov
jo
pop
fsubrs
adc
cmc
ss
xchg
and
mov
jno
lods
in
pop
xorb
lock
push
ficoml
adc
out
xor
push
cmp
push
pop
push
or
gs
js
or
cmp
add
gs
fs
xchg
aad
mov
jno
pop
repz
adc
lds
inc
cmp
popf
call
arpl
test
add
cmpsb
add
or
jle
arpl
xchg
sti
imul
rol
or
in
ja
testb
push
push
pop
push
lods
add
inc
das
sub
jno
pop
add
scas
cmp
cmc
test
dec
jne
out
pop
rorb
adc
imul
add
insb
add
pop
xor
sbb
les
cli
into
les
mov
dec
jne
insb
cmpsb
add
or
dec
fisttps
test
stos
pushf
mov
dec
add
sbb
lock
push
pusha
sahf
sbb
push
adc
les
mov
loopne
test
pop
pop
add
outsl
and
shrb
xor
jmp
jmp
fistl
push
or
scas
cmc
ret
and
adc
xor
arpl
loop
dec
add
or
jl
test
movsb
orb
dec
push
dec
push
adc
or
and
lcall
ret
bound
cs
xchg
push
jmp
aas
out
xchg
add
push
xor
test
xor
or
sbb
dec
imul
addl
push
push
xor
out
push
pop
mov
dec
test
xorl
add
loop
xchg
sti
mov
inc
push
dec
sub
jo
jmp
push
add
or
shr
push
add
inc
aas
sub
jo
daa
lret
xor
push
dec
add
xor
bound
movsb
inc
jo
ds
outsb
fcomps
adc
xchg
or
xchg
jmp
xchg
xor
xchg
sub
push
sub
out
popf
xor
in
addr16
jmp
rcrl
outsl
movsb
in
and
add
xchg
in
inc
pop
jno
hlt
mov
lods
and
sbb
ljmp
adc
push
mov
idivb
push
mov
sub
lock
mov
mov
sahf
jno
ds
sub
sbb
push
data16
addb
push
pop
add
jmp
xchg
sbb
shr
dec
scas
stos
popa
clc
pop
xor
call
aad
test
lret
lock
mov
sbb
xchg
inc
add
pop
popa
jbe
clc
jo
pop
lods
mov
jns
repz
lea
sti
mov
add
pusha
push
add
mov
mov
mov
and
xor
stos
xor
jmp
shll
pushf
call
pop
rol
mov
rcrb
iret
jmp
ljmp
push
out
sti
je
mov
adc
bound
dec
push
add
push
jle
jg
loop
rorb
and
pop
addr16
pop
fmull
stc
add
daa
xchg
cmp
mov
jl
xor
cmp
fs
dec
neg
xchg
leave
adc
or
push
sahf
push
subb
inc
les
lcall
xchg
or
xor
pusha
or
scas
lods
in
rol
aas
dec
ret
test
jl
xchg
idivb
loop
out
rol
push
add
pop
ds
movsb
adc
push
lods
add
xor
xor
mov
mov
sub
movsb
mov
out
arpl
and
daa
xchg
daa
pop
pop
adc
jbe
adc
addl
add
mov
clc
push
mov
jmp
mov
loopne
pushf
mov
mov
dec
add
and
in
mov
ja
inc
fidivl
push
jae
or
fs
inc
push
add
adc
push
loope
jle
inc
jae
sub
cli
outsl
mov
sub
and
rolb
loopne
inc
shr
ja
pop
add
push
fwait
inc
mov
aad
movsb
or
sub
mov
adc
mov
adc
pop
push
andl
pop
in
adc
xor
stos
cwtl
rcrl
mov
add
add
fimuls
into
mov
scas
and
test
sbb
pop
rol
dec
add
aam
decb
dec
sub
and
inc
and
push
push
pop
dec
pop
or
jmp
xchg
inc
icebp
lcall
test
sti
add
rorl
jg
jne
lcall
push
xchg
repz
jne
pop
sbb
in
in
in
jnp
xchg
or
mov
ja
loop
clc
xchg
xor
scas
dec
inc
ljmp
sbb
push
out
in
fsubrp
imul
mov
pop
std
pop
mov
scas
cmpsl
and
jecxz
jle
inc
popa
lret
inc
or
push
aaa
mov
das
in
jno
adc
sub
push
insb
jmp
sub
sbbl
test
jmp
out
jg
pusha
movsl
cmpl
mov
inc
or
adc
push
push
rorl
mov
push
add
out
dec
sbb
push
push
push
mov
add
adc
adc
les
inc
push
inc
scas
cwtl
daa
jge
push
sub
cmp
pop
xlat
repnz
dec
scas
jne
repnz
je
add
ret
or
mov
add
out
test
jge
sub
sbb
popf
xchg
pushf
xlat
add
movsb
dec
pusha
pop
inc
in
nop
loop
add
push
push
movsl
call
sbb
mov
push
sub
insb
mov
lret
test
push
jns
in
mov
test
or
sbb
in
scas
cmp
test
popa
and
sbb
jo
lahf
pop
xchg
mov
push
jmp
cmp
jp
movsb
inc
push
mov
arpl
push
loope
lods
sbb
lods
dec
and
lcall
or
push
xor
adc
pop
les
add
mov
pop
test
lahf
xor
sbb
nop
sub
lret
rorb
jns
cmc
mov
lcall
pop
stos
gs
sti
stos
jno
sub
js
mov
les
xor
adcb
and
jo
loope
jno
test
push
push
in
push
xor
push
pushl
or
xor
sub
insl
xor
jmp
cmp
lds
mov
cli
mov
or
lods
loop
mov
xor
call
mov
dec
stos
outsb
aad
into
mov
jmp
andb
pop
push
add
sub
ljmp
xor
out
jmp
loope
das
mov
leave
xor
mov
fisttpl
mov
dec
dec
popf
mov
sub
in
adc
push
cmp
or
sbb
repz
add
or
xchg
movsl
push
inc
cli
nop
mov
mov
jns
daa
out
jge
mov
outsb
sbb
in
imul
jle
bound
or
pop
movsl
push
jmp
es
add
add
jmp
add
xchg
in
xchg
mov
into
lret
inc
pop
out
loop
test
mov
add
scas
or
push
jae
push
or
push
push
inc
cld
and
or
rolb
sahf
pop
mov
cltd
jae
pop
fisubrl
stos
insl
mov
sbb
push
jp
pusha
push
in
xor
mull
sub
sub
lods
pop
add
dec
out
lods
ficoms
daa
pop
lcall
sti
ret
imul
push
mov
pop
mov
sub
adc
add
aas
adc
test
ja
sbb
push
sub
or
aas
jmp
add
cmc
jmp
leave
pop
xor
cmc
push
pop
mov
pop
push
sbb
add
xchg
mov
sbb
dec
leave
jnp
scas
pop
das
test
sub
call
addr16
dec
sbb
add
out
add
cwtl
sub
pop
subl
mov
mov
adc
mov
subl
pusha
out
inc
mov
lcall
xor
not
pop
subl
push
sbbl
push
or
jl
les
cmc
sbb
inc
mov
cmp
or
jp
cmp
jns
sub
mov
push
lret
push
jmp
jmp
popf
je
call
movsb
out
inc
and
sub
mov
and
jmp
outsl
push
pop
sbb
pop
adc
push
dec
dec
lock
ja
xor
adc
mov
mov
dec
fstpt
xchg
dec
pop
sbb
aas
popa
add
pop
adc
incl
cmp
mov
mov
fs
xlat
xchg
mov
mov
int3
mov
add
stos
xchg
iret
mov
sbb
int
sbb
mov
or
push
pop
mov
jle
inc
jmp
mov
pusha
inc
dec
dec
pop
push
mov
sub
pop
add
jmp
mov
jnp
sbb
cmp
jnp
das
pop
sub
push
and
cmc
loop
cmp
push
out
adc
add
scas
mov
cli
mov
dec
dec
inc
lret
adc
insb
sub
mov
negl
lcall
dec
push
pop
out
call
shl
or
hlt
dec
cli
mov
xchg
pop
xorb
cld
in
in
cmp
fists
mov
fs
push
gs
cmp
add
sub
outsb
cli
inc
jns
sub
dec
pop
dec
push
xor
sub
sub
jb
push
mov
movsb
push
inc
sub
aad
mov
add
jp
aad
lahf
pushf
or
es
xor
inc
ja
nop
sub
fistpl
inc
mov
dec
pop
pop
imul
cmp
cmp
cmp
push
xchg
jmp
pop
add
and
jo
adc
push
imul
mov
pop
mov
xchg
xor
aas
test
xor
fnsave
dec
loopne
add
repz
adc
push
cmpsb
dec
and
or
mov
jmp
dec
test
daa
jge
mov
push
inc
xchg
pusha
add
dec
push
jbe
fisttpll
shr
push
scas
sbbl
fidivrs
and
rcll
jl
or
dec
cli
xchg
repnz
sahf
push
and
push
inc
inc
addl
test
or
call
repnz
std
sbb
insb
jp
mov
xchg
jmp
adc
push
lods
jp
push
out
divb
or
pop
and
lret
cwtl
adc
add
cmp
jl
inc
lds
cmpb
leave
xor
repz
push
xchg
out
add
adc
fsubrs
ret
js
pop
gs
loope
jp
pop
and
dec
add
call
sub
xor
dec
jl
mov
inc
adc
call
xabort
out
sub
adc
jmp
xchg
and
jne
loope
or
das
pop
in
fsub
movsl
cld
adc
jmp
out
dec
cmp
sbb
fidivl
mov
rol
pop
jmp
ficoml
cmp
or
mov
ss
notl
or
je
jmp
pop
push
jbe
sarb
add
arpl
sub
dec
ror
jp
pop
add
sbb
rcll
adcb
roll
xchg
rorb
xor
cld
les
mov
out
and
out
shrd
mov
xor
xchg
pop
les
mov
xor
stos
sub
scas
aaa
xor
inc
jb
xor
jle
and
lods
add
dec
lcall
sbb
add
andl
inc
pop
cli
sub
repnz
fsubrs
daa
cmp
mov
add
dec
aas
repz
and
sbb
add
mov
cmp
push
xchg
and
push
imul
sbb
out
and
ljmp
ret
mov
and
arpl
dec
lahf
ret
sbbl
mov
pop
pop
call
sub
xchg
mov
jecxz
xchg
aam
pop
mov
mov
adc
and
lea
jne
jg
and
or
sbb
lock
mov
repnz
lahf
cmpsl
push
pop
xchg
or
insb
lahf
cli
cmp
inc
iret
cli
jo
jnp
rorb
in
fistpll
sti
adc
jb
sub
fs
aad
insb
out
mov
sbb
addr16
sub
pop
es
addl
sbb
mov
jmp
push
adc
inc
push
push
pop
bound
mov
push
cli
data16
cld
add
call
adc
rclb
or
or
cmc
cwtl
sub
cmp
orb
in
mov
fdivr
or
add
and
cmp
push
negb
dec
loopne
in
and
js
pop
mov
flds
push
shlb
lret
int3
outsl
fldenv
xchg
adc
inc
rol
insb
je
pop
mov
ds
adc
add
adc
js
sbb
jns
push
push
loopne
jmp
ljmp
inc
arpl
inc
xor
mov
push
mov
add
jl
and
cmp
cltd
cmp
data16
xchg
or
sub
sub
out
inc
jb
xor
mov
jmp
arpl
fucom
add
add
test
and
mov
sub
add
push
ret
or
movsl
outsb
nop
adc
popa
repz
xor
add
and
mov
jmp
subl
fwait
jle
sub
imul
pop
sti
jne
inc
stc
mov
xchg
popa
out
fstpl
loop
pusha
dec
repz
fistpll
dec
lcall
jne
dec
addr16
sbb
es
cmp
jge
pop
fbld
pop
sub
jnp
imul
pop
push
mov
xorb
sbbb
push
outsl
aam
and
pop
mov
pushf
mov
orl
sbb
cltd
adc
cmp
hlt
insb
sbb
adc
enter
pop
leave
lret
sbb
pop
scas
inc
mov
cmp
add
sub
rcrb
sbb
repnz
xor
bnd
lret
jns,pt
dec
outsl
cmpb
add
add
cmp
push
sbbb
nop
xadd
shlb
ret
das
cmp
lcall
stc
add
push
in
jmp
xchg
jl
leave
jle
cs
push
jmp
add
add
dec
push
stc
out
imul
mov
mov
add
mov
loopne
push
mov
ds
inc
mov
imul
imul
jmp
push
aas
repz
adc
pop
data16
icebp
pop
insl
or
dec
bound
push
sbb
dec
mov
stos
xor
or
std
add
and
stos
xchg
movsl
or
insl
or
jg
mov
xor
fsubrl
cmp
pop
addb
rcrl
mov
aam
fwait
adc
push
rorb
iret
sub
into
ja
cld
mov
dec
xor
dec
adc
dec
push
sbb
xchg
push
repnz
push
pop
les
mov
dec
out
and
adcl
call
sub
mov
fisubl
xchg
aad
push
push
lods
inc
clc
add
sbb
ret
js
add
data16
adc
movsb
mov
ds
pusha
pop
push
cltd
mov
dec
add
cwtl
sub
sti
inc
sub
and
pop
cs
or
jge
jb
pop
pop
xlat
add
inc
sbb
jmp
aaa
pop
call
je
add
mov
mov
inc
ljmp
add
faddl
pop
lahf
adc
cli
inc
xchg
mov
push
mov
test
mov
jnp
jecxz
in
fbld
fcomps
orl
mov
and
es
xor
add
and
loope
push
jns
cmp
push
cmpsl
rorb
int3
cmp
pop
lret
jb
mov
cltd
outsl
inc
and
xchg
jbe
cmpl
inc
outsl
mov
sub
sub
rol
xchg
lcall
mov
fstpl
ret
ljmp
add
pop
push
mov
lret
add
test
push
add
clc
hlt
xor
aam
jb
hlt
cmp
add
pop
push
mov
xor
sub
decb
push
mov
push
enter
pop
sub
daa
jmp
cmp
mov
jg
add
das
bnd
mov
stos
dec
mov
sahf
and
and
lret
in
dec
insl
and
jbe
cmp
adc
and
add
mov
sub
pop
pop
mov
xor
mov
out
aaa
push
bndldx
fistpll
or
sub
push
and
jo
popa
lods
pop
inc
test
stos
cmpsb
js
xor
fdivr
lods
lcall
sbb
adc
in
pop
test
fmuls
pop
dec
rcrb
jp
push
lds
popa
out
hlt
mov
mov
xchg
or
or
xor
loopne
fincstp
inc
lock
or
orl
mov
pop
call
out
push
jmp
hlt
bound
nop
inc
adc
add
ret
xor
movl
dec
xlat
js
stos
test
enter
and
imul
mov
mov
push
mov
xchg
sub
dec
hlt
cmp
add
jmp
xlat
add
stos
addr16
aad
in
hlt
mov
push
adc
pop
mov
out
es
adc
mov
pop
mov
in
inc
cmc
cmpb
sub
and
push
dec
nop
pop
xchg
mov
inc
mov
or
fistl
add
push
xlat
push
pushf
xchg
nop
xchg
mov
mov
mulb
xchg
or
and
loope
mov
aas
notb
or
je
jg
aam
dec
je
add
or
push
outsl
pop
mov
pop
push
inc
adc
mov
loopne
adc
subb
push
lcall
aad
inc
iret
sbb
repnz
mov
insb
sub
or
pop
push
inc
or
jno
xor
stc
data16
ss
inc
das
out
pop
mov
sub
jmp
cmp
sub
out
cmp
out
jl
idivb
ja
dec
loope
mov
inc
lock
enter
inc
movsb
xchg
and
xorb
inc
xchg
pusha
ret
sbb
sbb
imul
push
pop
pushf
add
adc
push
xor
jmp
js
xchg
jl
xor
add
mov
jnp
mov
dec
je
sub
in
fisubs
pop
jne
xorb
inc
stos
rcrl
test
les
push
cs
movsl
xchg
movb
add
outsl
aaa
sub
cmp
lcall
xchg
loop
int3
pop
adc
adc
stos
cltd
mov
mov
sub
jle
and
mov
mov
xchg
cmpsb
and
xchg
rolb
mov
push
mov
orb
push
les
aad
dec
add
jnp
sbb
ja
push
add
loop
pop
pop
ret
movsl
and
int
add
and
sbb
pop
dec
cmp
cld
push
orb
das
iret
das
je
add
imul
pop
subl
inc
pusha
xor
xor
and
xchg
and
cmp
cmp
jno
xlat
add
mov
jmp
outsb
test
in
ret
mov
mov
stos
arpl
js
gs
mov
jmp
shl
and
adc
xchg
xchg
out
loop
dec
mov
pop
jmp
mov
test
sub
popw
insb
inc
lret
mov
in
test
orb
pusha
mov
cmp
sbb
call
push
xchg
dec
jecxz
xchg
mov
push
sub
cmp
pop
lods
mov
pop
sub
roll
dec
sub
pop
add
push
dec
mov
jbe
push
jnp
mov
mov
pop
fists
subb
jne
stos
mov
xor
xchg
jmp
or
mov
dec
mov
mov
mov
mov
outsl
add
std
pop
not
or
lcall
lahf
push
mov
cmp
and
or
xor
shll
js
pusha
jns
and
or
rcrb
fs
sbb
push
jl
lcall
sub
daa
iret
pop
dec
lods
push
aas
scas
adc
test
ljmp
lret
inc
jecxz
cmp
mov
ljmp
pop
insb
and
jmp
sub
out
and
adc
xchg
je
movsb
in
std
and
push
push
jmp
cs
sahf
movsl
pop
mov
hlt
mov
ret
push
adc
adc
out
mov
push
or
daa
add
mov
dec
cmp
add
lret
jmp
pop
vucomisd
xchg
push
dec
stos
add
cmp
xor
in
lahf
fstpt
shl
inc
outsl
mov
in
mov
add
rcrb
dec
sub
icebp
aad
dec
ljmp
pop
mov
xor
ljmp
scas
add
aas
jns
mov
add
dec
xchg
or
add
mov
inc
push
cmpl
stc
or
out
out
out
xchg
mov
loope
pop
lahf
pusha
inc
push
adcl
or
jle
cmpsb
mov
sbb
lret
mov
push
and
loope
and
xchg
add
aaa
add
loope,pt
sub
fldl
je
dec
data16
pop
hlt
add
testl
popf
sub
dec
push
mov
sub
mov
push
popa
cmpb
shl
and
add
push
shr
mov
sbb
insb
movsl
pusha
sahf
loopne
and
outsl
pusha
or
fmul
movsl
mov
mov
pop
inc
cmp
fs
pushf
test
pop
jb
repnz
icebp
stos
fst
in
and
jp
enter
arpl
push
mov
lcall
xchg
sbb
shlb
cs
jno
add
add
fildl
dec
mov
dec
lcall
sahf
add
pop
jo
xchg
je
push
jg
in
test
pop
mov
push
push
sti
dec
pop
loope
bound
nop
lea
imul
add
push
xor
push
das
gs
mov
jne
jne
push
pop
mov
pop
adc
xchg
inc
jge
and
inc
call
cmp
enter
out
dec
stos
and
mov
repz
jl
addr16
cmc
xor
mov
cmpsb
les
dec
testb
pop
pop
inc
ss
movl
insb
sub
and
ja
in
clc
adc
ficompl
cli
inc
push
out
aam
ret
outsl
lock
shl
add
call
adc
inc
es
popa
sahf
addr16
pop
arpl
xor
cmc
sub
ljmp
or
adc
dec
sbb
add
lds
mov
nop
mov
dec
inc
jno
pop
fs
inc
mov
add
wrmsr
cli
test
lods
add
pop
sub
call
loopne
mov
and
fcoml
bnd
insl
cld
test
stos
out
stos
in
test
and
les
in
popa
fnstsw
int3
mov
add
sbb
cs
sub
iret
push
rcrb
dec
cwtl
sbb
lock
mov
inc
mov
add
sub
clc
sub
mov
sbb
shrb
call
sbb
push
lahf
push
rcl
pop
jnp
xor
add
sub
xor
cmp
dec
push
sub
subl
lahf
enter
push
and
mov
orl
addr16
mov
and
jg
movb
insb
imul
out
mov
dec
fucomi
pop
mov
outsl
jp
add
loop
push
pusha
and
mov
jg
arpl
ret
adc
add
inc
dec
imul
fs
push
push
popf
rcl
sbb
inc
sub
movsl
inc
sbbl
repnz
not
cmpb
stos
add
mov
pop
shll
fldl2t
dec
scas
orb
test
cmp
xchg
jbe
fisubrs
jmp
mov
xor
and
stos
mov
mov
icebp
sub
inc
mov
movsl
or
inc
fldt
les
xor
push
sbb
js
push
aad
mov
in
icebp
and
cld
add
cmp
or
cli
push
sub
shrb
xchg
cli
mov
jl
and
insl
push
int
sbb
pop
and
pop
xor
arpl
sub
adc
cmc
pop
ffree
adc
pushl
push
outsl
jmp
add
dec
stos
nop
scas
inc
or
lods
fsubrp
and
shrl
jmp
aad
dec
xchg
adcl
inc
xchg
sbb
add
jp
rclb
mov
or
pop
shl
inc
xor
sub
xchg
enter
dec
daa
cmpsb
or
aam
and
mov
push
stos
test
push
test
cmp
or
je
inc
inc
orb
int3
pop
push
mov
ljmp
dec
sbbb
shl
push
add
jmp
in
xrelease
mov
inc
push
jbe
push
pop
shl
or
in
andl
ror
inc
popa
fldl
xor
js
cmpb
call
pop
and
push
add
mov
jmp
daa
lahf
inc
cmp
and
ret
sub
jns
adc
std
ja
daa
xchg
mov
mov
std
xor
add
jno
push
popa
or
push
mov
sbb
add
inc
adc
cmp
testb
xor
out
outsl
adc
push
pop
mov
pop
popf
add
shlb
jg
sbb
out
loop
dec
xchg
jg
rcrb
dec
je
add
sbb
pushf
cmp
adc
scas
sbb
shll
dec
test
jg
mov
xchg
mov
pop
insb
inc
and
jmp
dec
mov
dec
or
clc
lret
xor
ret
dec
rorl
jecxz
dec
cmp
sbbb
inc
daa
aaa
fmulp
popf
or
pop
int3
imul
inc
ror
idivl
push
dec
and
std
inc
lods
cmp
jns
insl
or
fisubrs
add
push
xchg
mov
lods
jecxz
mov
pop
and
mov
inc
sti
fidivl
mov
inc
inc
das
inc
dec
dec
les
add
cltd
ds
jmp
inc
mov
pop
mov
mov
adc
push
shlb
aas
or
mov
jmp
enter
add
and
push
or
fiadds
xorb
das
jmp
and
leave
adc
sub
shll
sti
sub
pop
pop
xchg
jge
and
adc
and
xchg
add
push
int
jno
imul
cmp
xchg
arpl
adc
mov
test
in
inc
sbb
and
call
sbb
sub
push
popf
ja
mov
and
dec
insb
push
cwtl
insl
push
cmp
pop
xlat
test
xchg
out
pop
into
add
pop
pusha
andl
push
std
inc
call
jle
mov
pop
mov
clc
out
jbe
sub
or
add
out
pop
loope
xor
cmpsb
pop
repnz
lret
mov
inc
jnp
imul
pop
sub
outsl
popa
and
add
insl
jmp
and
push
xor
es
ds
add
outsl
pop
adc
into
into
and
xor
or
or
mov
cmpl
pop
in
xchg
cltd
pop
loopne
cmp
imul
inc
xor
lret
fcmove
pop
scas
das
shl
faddl
incl
add
repnz
addb
dec
in
push
ljmp
cmpsl
mov
mov
jb
frstor
dec
in
in
or
enter
jbe
adc
adc
jmp
dec
sarb
js
mov
notl
test
lods
and
add
dec
dec
incl
add
and
pop
mov
jmp
mov
add
data16
in
and
jmp
mov
push
in
add
aad
inc
pop
push
and
mov
xchg
or
bound
scas
push
xlat
mov
cmpsl
fs
outsl
jmp
push
mov
mov
inc
ds
dec
xchg
cli
sti
ret
call
ret
leave
pop
sub
or
push
push
and
jmp
fs
fisttpll
enter
mov
les
xor
mov
fiaddl
inc
jecxz
cs
mov
cli
pop
into
push
out
or
arpl
jl
lds
stc
push
mov
or
pusha
es
out
or
dec
test
js
or
inc
ror
mov
xchg
xchg
loopne
mov
nop
add
mov
lea
push
push
jl
lock
out
hlt
cltd
sub
fldt
add
xor
mov
test
pop
testb
and
add
mov
jb
das
subl
test
mov
leave
xor
in
loope
xchg
add
aad
fidivrs
pop
jmp
add
jg
daa
jmp
add
lret
out
xor
into
add
jne
xchg
repnz
movsb
or
push
jb
inc
cli
ja
xor
or
mov
jns
and
aas
or
adc
and
sbb
pop
inc
gs
lea
imul
pop
cwtl
mov
cmp
push
adc
je
mov
adc
shlb
jge
sbb
jp
cmpsb
sbb
dec
dec
dec
and
push
inc
dec
add
mov
and
xor
ss
stos
add
sti
mov
stos
dec
divl
das
sbb
lds
push
mov
inc
sub
push
push
pop
push
xchg
and
pop
insl
cwtl
jae
in
mov
or
daa
cmpsb
lods
or
cmp
pop
ds
or
lea
adc
test
incb
aas
repnz
sub
shll
data16
xchg
pop
pop
repnz
pop
sbb
mov
shrb
jg
mov
push
out
xor
daa
dec
sbb
lcall
xor
pop
dec
inc
fsubr
ret
cltd
add
or
add
adc
cmp
add
cli
mov
or
xchg
into
loop,pn
pop
lods
icebp
ds
insl
or
mov
les
push
inc
pop
pop
fsubrs
sbb
sub
add
pusha
lret
das
jno
leave
push
aas
xor
push
pop
xchg
les
sbb
add
pusha
jecxz
pop
call
shrl
pop
sub
and
mov
add
outsb
ds
xchg
cmp
push
enter
xor
push
fildll
lahf
xchg
in
mov
push
push
push
cwtl
test
addl
clc
je
int3
mov
cmp
xchg
test
xlat
or
sub
add
push
adcl
or
mov
cmp
subb
xchg
jns
mov
fnsave
push
add
in
add
add
mov
inc
mov
cmp
daa
xchg
pop
xchg
xchg
insb
mov
pop
shlb
or
ds
lret
pop
rclb
dec
xor
mov
ja
in
fstpt
out
mov
jl
inc
add
icebp
xlat
push
int
pop
fdivs
xor
mul
mov
pop
and
push
rorb
push
subb
or
add
inc
or
xor
popa
fdiv
push
cmp
pusha
aaa
or
lcall
sub
or
pop
xor
fists
inc
loope
insl
int
nop
push
add
iret
jmp
push
mov
add
pop
cmpsb
add
pop
push
dec
mull
maskmovq
negl
inc
pop
jle
jns
in
sub
aaa
daa
pop
or
aad
cmp
xor
xor
adc
xor
add
inc
push
jmp
movsb
dec
mov
mov
fisubs
adc
pop
incb
sub
into
or
shl
push
add
orl
les
mov
push
mov
push
mov
or
nop
sbb
xor
xor
bound
fwait
enter
pop
out
insb
lret
and
lcall
pop
jmp
pop
cmp
xor
out
std
jmp
lds
mov
jo
adc
xor
mov
xchg
push
pop
sub
loopne
add
pop
adc
lea
out
jo
push
xchg
inc
aaa
sub
mov
dec
cwtl
cmc
imul
or
imul
adcb
xor
adcb
shrl
xchg
mov
mov
and
outsb
xor
lock
mov
push
inc
push
inc
mov
cmp
dec
les
sbb
mov
xor
inc
mov
je
add
jmp
stc
pop
lahf
dec
xchg
sub
push
cmp
icebp
sub
add
pop
shr
lcall
push
cli
es
das
ret
iret
mov
sub
testl
jo
outsb
subl
fwait
sub
pop
add
sub
loopne
and
push
mov
int3
aas
mov
unpcklps
cld
mov
sti
adc
pop
mov
pop
fstpl
and
and
inc
add
xchg
enter
add
enter
ja
xchg
mov
dec
mov
dec
aam
call
mov
and
test
cmpsl
add
popf
adc
pop
loopne
jmp
test
mov
sub
ja
mov
pop
and
cmc
dec
sbb
in
cs
int
in
imul
cmp
dec
ljmp
fsubrs
xor
inc
xor
jns
mov
fwait
jo
in
jbe
adc
daa
push
sub
ret
push
cli
mov
lahf
clc
mov
ret
adc
das
ds
cmp
mov
ljmp
push
mov
push
je
add
lret
push
pcmpeqw
sub
insl
jo
pop
dec
sbb
lods
cmpsb
enter
mov
add
pop
or
popfw
push
jbe
push
xor
add
cmp
jmp
mov
sub
jmp
daa
aad
je
pop
add
adc
adc
pop
mov
stc
out
stos
ss
push
dec
fnclex
jg
insl
or
sbb
pushf
das
sub
in
stos
test
dec
fs
clc
in
pop
add
in
lods
and
pop
xor
jmp
stos
jecxz
test
mov
xor
shll
and
and
call
orl
fcoml
dec
aas
and
testb
mov
in
push
in
jo
das
cld
cmp
mov
pop
insb
insl
sbb
push
neg
push
orb
pop
push
adc
cmc
lahf
fisubl
fldl
adc
insb
les
lods
cmp
push
rcrl
repz
stos
push
or
pop
fiaddl
test
inc
add
add
pop
daa
popf
pop
mov
mov
and
xchg
ss
pop
and
gs
mov
incb
call
mov
mov
pushl
dec
and
jo
stos
add
add
mov
out
clc
das
add
je
outsl
cmpsb
mov
clc
and
dec
loopne
inc
daa
jmp
push
push
loope
insl
pop
add
pop
mov
cmp
cmc
cmp
pop
mov
lock
data16
xor
inc
in
xor
cmp
pop
pop
dec
sbb
sti
movsb
test
loopne
mov
mov
out
add
aas
adc
mov
adc
pop
cmp
ljmp
out
fadds
inc
mov
cli
ja
lods
push
sub
loop,pt
pop
mov
push
mov
sub
mov
pop
div
scas
xor
mul
xchg
js
and
add
mov
cmp
xor
sti
cmp
dec
imul
lea
gs
loop
pop
mov
sti
inc
mov
pop
mov
sub
test
mov
jecxz
sti
sub
push
fiaddl
das
js
adc
inc
roll
sbb
mov
adc
jp
pop
mov
mov
popf
push
adc
leave
movsb
push
add
xchg
jmp
inc
xchg
xchg
insl
lea
cmpsb
scas
enter
pop
and
mov
mov
jne
mul
mov
decl
or
push
jmp
xorb
aad
mov
pop
lock
bound
or
jecxz
sub
cli
xlat
std
pop
push
jne
xchg
gs
test
xchg
bound
or
bound
xchg
daa
stos
dec
js
and
dec
in
add
pop
push
mov
sbb
adc
add
add
and
add
pop
imul
aam
rorl
mov
or
std
mov
stos
aad
popa
and
adc
je
jl
orl
ficompl
xor
add
xchg
in
pop
popa
push
and
imul
rorl
imul
add
pusha
jo
xorb
int
jp
jg
pop
push
movsb
int3
ret
shl
mov
adc
or
sarl
daa
or
pop
loopne
push
ret
xor
test
jns
push
mov
jecxz
ljmp
pop
addl
popa
repz
or
jge,pn
sbb
jb
icebp
xor
dec
or
pop
cmp
inc
pop
push
mov
cli
mov
inc
xor
pop
push
stc
sahf
pop
inc
andl
insb
jnp
xor
out
add
call
pop
or
jmp
bswap
shr
mov
call
dec
hlt
and
jmp
and
or
sahf
mov
sahf
mov
push
jmp
mov
push
lret
ja
mov
sub
xor
dec
ljmp
lods
pop
scas
xor
loopne
pop
add
pop
dec
jmp
or
pop
sbb
inc
mov
jno
sub
loope
pop
dec
mov
pushf
mov
sbb
cmpl
xor
dec
or
adc
cli
fidivrl
and
faddl
rcr
bound
aaa
addr16
or
or
mov
enter
movsl
push
popf
jmp
xor
push
xor
push
add
in
testl
lock
sar
mov
rcll
fldt
inc
push
sahf
jnp
mov
or
jge
cmp
dec
std
subb
lock
sahf
adc
jbe
sti
int3
xchg
pop
jp
imul
filds
shl
loop
shll
test
xor
mov
insl
ret
add
and
jns
or
pop
jo
mov
mov
sti
sbb
sbb
das
fbstp
cs
adc
icebp
push
or
inc
filds
fdiv
mov
inc
cmpl
ljmp
mov
inc
or
ds
mov
cmp
je
adc
push
jg
jp
dec
push
push
inc
cmpb
jl
lock
cmc
pop
rol
lret
push
lods
das
push
dec
cmpsl
shll
ret
fstpl
jp
popa
push
pushf
cld
adc
add
mov
xchg
push
or
pop
xlat
xchg
ds
mov
jno
mov
inc
sub
into
mov
into
pop
or
xor
mov
dec
jo
lcall
frstor
cmc
jns
popf
nop
cli
testb
cmpsb
sbb
or
push
pop
add
cmpsl
or
insl
jg
stc
xrelease
jns
xchg
call
pop
mov
lea
out
and
jbe
inc
xchg
sti
jns
adc
xor
sub
fistl
push
push
cltd
mov
push
jae
add
xchg
inc
adc
icebp
mov
insb
add
cld
push
jg
rclb
inc
jmp
mov
das
loop
xor
or
jg
adc
int
mov
add
sub
stos
pushf
std
pop
mov
xchg
data16
sub
mov
mov
xor
push
add
fldlg2
mov
stos
aam
add
jb
push
jmp
cmp
inc
cmp
pop
sbb
lds
sub
aad
lret
push
les
hlt
sbb
jecxz
pop
repz
mov
clc
xor
cmc
or
adc
sti
ja
aad
out
pop
xchg
rcrl
and
addb
and
jmp
dec
in
jbe
mov
scas
subb
sub
sbb
adcb
mov
ljmp
fnstenv
push
and
pop
sbb
sbb
dec
add
dec
fwait
inc
add
xor
test
sub
out
push
inc
fisubl
stos
movsl
add
and
or
pop
or
pop
push
adc
adc
jb
js
sahf
cmpsl
dec
and
pop
mov
fidivrl
adc
cmp
fisttpll
pop
or
int
pop
add
lock
pop
pop
xchg
jp
pop
pop
in
subb
out
xor
in
inc
jp
xchg
test
cmp
stc
xlat
adc
mov
jl
inc
pop
cmpsl
xlat
call
neg
push
ljmp
and
adc
call
mov
imul
push
dec
into
mov
mov
xor
lods
adc
xchg
adc
mov
bound
cmp
je
pop
xchg
iret
or
jge
ss
fildl
orl
mov
add
xor
pusha
pop
adc
cmp
mov
ss
jmp
cmp
inc
jmp
mov
sub
cmc
jp
jg
daa
and
cwtl
sub
adc
xor
daa
jge
mov
in
and
lret
adc
hlt
outsb
pop
add
sub
fdivs
addl
fldenv
inc
movsl
adc
push
push
cwtl
pop
push
xchg
pop
mov
gs
jmp
lret
cmp
addr16
add
test
shr
push
mov
xchg
or
inc
or
pop
mov
adcb
push
mov
mov
cli
pop
mov
addb
jb
pop
jle
enter
je
sub
fcmovnu
mov
leave
mov
pop
push
in
cs
nop
and
add
sub
fidivl
mov
jae
test
lock
xor
push
fs
sub
scas
std
mov
sub
jnp
adc
dec
pop
or
lods
fsubl
push
pop
orb
movsb
add
movsl
aad
aad
xchg
js
cltd
inc
xchg
push
fst
add
outsb
xor
hlt
pop
mov
popa
lea
rcll
sti
cmp
es
subl
xchg
inc
popf
jp
push
push
push
jmp
xor
and
pop
jo
adc
pop
inc
dec
sti
hlt
or
fs
push
jmp
mov
imul
out
adc
mov
fsubr
xor
or
pshufw
jmp
mov
and
pop
push
dec
cli
divl
push
jecxz
mov
pop
imul
lock
sbb
out
fstps
push
jecxz
sbb
add
cmp
cmp
jo
xor
mov
jmp
or
sub
jae
cmp
sub
jmp
sbb
and
xchg
repnz
les
shll
add
icebp
std
enter
or
sub
aaa
mov
jae
pop
add
les
loop
cmp
pop
and
pop
jmp
pop
dec
sub
movsl
mov
iret
pop
sbb
dec
or
pop
jl
cmpsl
insb
jo
inc
add
mov
stc
arpl
mov
shlb
mov
dec
sahf
test
jp
test
lods
mov
std
pop
add
shr
int3
push
add
ja
mov
sub
or
pusha
addb
fstl
inc
push
add
int
popf
sahf
movsl
movsb
in
cld
vdivss
mov
movsl
cli
jecxz
or
push
les
push
out
sub
sub
jle
inc
shll
outsb
jle
cld
pop
dec
sub
add
pop
mov
ret
pop
test
lock
shr
jle
cmp
movsb
addps
aas
rol
or
mov
test
cmp
jmp
xor
jp
sbb
inc
xchg
inc
push
push
mov
or
fnstcw
or
pop
push
sub
cmp
data16
mov
dec
or
push
ss
lret
sub
fucom
mov
mov
or
ret
into
push
arpl
pop
jmp
jge
mov
mov
cmpsl
scas
push
sub
dec
jmp
ljmp
and
mov
jg
mov
ss
jns
add
test
in
dec
aas
sbb
mov
pusha
fidivrl
mov
pop
add
dec
pop
xchg
imul
stos
mov
mov
ss
sbb
mov
mov
push
mov
lahf
mov
filds
popf
je
jb
stc
adc
mov
clc
cmc
and
das
dec
mov
std
xor
jmp
add
shrb
fdiv
pop
push
cmp
wbinvd
cwtl
mov
sbb
imul
jmp
ds
cmp
ljmp
add
mov
aaa
inc
ja
inc
xor
jmp
popf
push
mov
test
add
xor
jle
rorl
loopne
add
icebp
cmp
stc
out
imul
aaa
pop
sub
add
add
jo
loope
shr
jle
sub
lods
cmc
mov
mov
test
adc
movsb
aas
add
sti
inc
lret
add
outsl
adc
imul
rcl
jle
pusha
lock
dec
mov
sti
jl
pop
adc
inc
rorl
sub
daa
push
test
add
enter
ljmp
ret
jmp
or
leave
pop
addb
lock
repz
mov
and
add
jmp
sti
xor
mov
xchg
dec
hlt
stos
and
and
pop
jns
and
mov
je
les
idivb
lods
push
popf
add
push
push
inc
mov
or
push
mov
mov
pop
imul
jecxz
loope
sub
popa
xor
cli
fwait
inc
add
loope
push
sub
daa
jns
push
ffree
sbb
mov
push
push
dec
mov
clc
addl
jle
lret
cmp
popf
pop
cmp
push
addr16
pop
addb
or
cmp
es
pop
push
mov
dec
pop
add
and
mov
add
jp
pop
add
cmpsl
adc
aad
imul
out
movsb
and
add
sahf
pushf
scas
clc
jo
inc
adc
push
cmp
jmp
lea
push
push
jle
pop
icebp
movhps
add
outsb
add
inc
sbb
xchg
popa
push
jmp
pop
pop
ljmp
mov
push
cmp
pop
fidivrl
in
cmp
inc
test
pop
loop
jne
cld
icebp
cmc
mov
inc
ss
mov
jo
add
dec
and
add
or
ja
cli
sub
push
and
mov
mov
xchg
cwtl
sbb
xor
push
dec
inc
jmp
dec
ljmp
xchg
jns
pusha
outsl
or
movsb
aaa
mov
push
add
cmp
mov
cmp
test
stos
cmpsb
pop
daa
in
cmc
shrb
xchg
ds
sub
jnp
movsl
ror
pop
sub
aad
push
xor
inc
dec
sub
pop
pop
push
or
sbb
mov
call
stos
mov
adcl
dec
pushf
fs
adc
hlt
push
pop
push
popf
ljmp
xchg
popf
push
divb
sbb
int
add
cmp
fs
cltd
ret
scas
or
jb
mov
das
cmpsb
clc
dec
in
jbe
push
dec
cwtl
inc
dec
mov
into
fistl
xor
push
mov
or
mov
cmp
invd
stos
call
ret
outsb
popa
xchg
repnz
or
pop
into
sub
adc
xor
pop
add
mov
and
jae
jae
daa
out
pop
jb
pop
sbb
mov
loop
bound
dec
xlat
push
not
loop
pop
std
push
pop
jle
gs
cmp
add
jns
xlat
add
clc
subb
or
inc
mov
aad
cltd
out
and
push
ret
scas
cmpsl
jmp
inc
scas
push
jmp
xor
repz
and
mov
fisubs
push
pop
jge
jl
shlb
push
lds
or
mov
cmpsl
push
out
or
rcrb
shlb
in
pop
lret
jle
aad
sub
inc
xchg
add
in
dec
sub
loop
sbb
xor
out
sub
dec
add
cwtl
iret
or
jp
inc
add
sub
cs
pushf
clc
and
add
cli
das
loope
loope
xor
or
and
fdivr
push
ja
clc
loopne
push
nop
pusha
dec
sub
in
test
xchg
push
xchg
es
push
imul
loop
roll
fwait
mov
mov
imul
movsb
mov
cmpb
mov
sub
push
mov
not
jecxz
add
mov
add
fnsave
jg
pop
push
out
add
pop
xlat
jb
or
inc
xor
jnp
add
xor
loope
movsl
clc
adc
mov
xor
mov
not
shr
clc
ss
sub
jmp
cmp
adcb
xor
lcall
pop
xchg
jg
fidivrl
mov
inc
daa
push
cli
pop
js
sub
cmp
dec
andb
dec
pop
jo
or
into
mov
enter
cmp
cmp
mov
sti
mov
into
or
add
out
jge
adc
push
push
xchg
pop
scas
mov
pop
pop
push
std
das
test
shl
adc
pop
pop
mov
mov
jg
push
cmp
dec
sub
ja
dec
mov
or
pop
jmp
push
iret
push
xchg
loope
test
or
jmp
repz
fstpl
jns
imul
push
test
lret
jmp
push
call
lods
lahf
dec
out
push
push
outsl
or
adc
or
punpcklbw
dec
xchg
pop
pop
pop
mov
je
int
add
lret
es
push
pop
dec
mov
add
add
arpl
shlb
mov
mov
ljmp
sahf
or
jns
xchg
push
cmpsl
mov
inc
add
roll
scas
xor
test
pop
sbb
sti
andb
int
bound
loop
jge
cmp
jno
or
cwtl
sub
add
es
jge
into
or
ja
push
test
ljmp
add
into
outsb
addb
add
jge
or
and
push
pusha
cmp
pop
pop
inc
mov
insb
lods
cwtl
dec
mov
jmp
arpl
or
add
stos
prefetch
cmp
mov
add
adc
in
add
les
mov
cmpsb
out
push
cwtl
mov
add
push
push
push
imul
dec
or
jl
xor
mov
jb
lcall
mov
je
add
push
dec
in
and
int
jbe
jl
push
pusha
or
clc
aas
cmp
in
iret
mov
xor
add
jmp
cmp
xor
pop
mov
push
cmp
out
cmpsb
int3
sub
xchg
inc
lods
fs
dec
jno
add
xchg
xor
add
rcrb
inc
push
dec
mov
push
jmp
jmp
rcl
popa
out
stc
js
int
cwtl
jo
pop
sbbb
call
aam
pop
xchg
mov
jae
mov
mov
gs
movsl
insb
xor
add
inc
sbb
jmp
cwtl
aas
fisttps
cmp
push
xor
fwait
sub
mov
lcall
lahf
ret
pop
xchg
gs
xlat
in
mov
mov
call
iret
push
stc
incl
jnp
lret
mov
jbe
test
loop
jecxz
jo
mov
rolb
mov
mov
mov
pop
cmp
cmp
jecxz
pop
pop
int
je
ljmp
imul
repnz
inc
xchg
xor
push
mov
dec
jnp
xchg
outsb
xchg
adc
sub
dec
push
inc
incl
add
mov
jmp
mov
movb
les
push
mov
push
xor
jmp
mov
cmp
imul
bound
repz
cmp
push
pop
mov
lahf
jnp
aam
ja
mov
cmc
std
mov
cs
jmp
inc
repz
scas
push
jno
mov
fisubrs
mov
cmc
repz
scas
je
das
cld
bound
into
outsl
lds
xor
sbb
pop
mov
xchg
add
jb
repnz
push
fwait
sbb
testl
into
out
jl
data16
pop
mov
xor
push
and
inc
adc
jmp
fwait
ret
aad
nop
xor
adc
mov
inc
push
inc
pop
shr
xchg
inc
cmp
mov
mov
or
cmc
mov
jle
bound
int
cs
xor
sbb
fldl
jmp
das
loope
push
mov
jmp
notb
dec
xor
movsl
mov
xor
pop
or
push
or
sub
roll
dec
dec
das
or
int
mov
add
mov
xchg
mov
sub
push
shrb
pop
addb
adc
sub
std
xchg
inc
addr16
xchg
loope
mov
jmp
pop
mov
adc
jnp
sbb
mov
jmp
pushf
jp
jmp
addr16
push
faddl
jo
dec
addb
jb
pop
es
mov
adc
push
pop
add
mov
je
push
push
pop
fsubs
adc
scas
and
scas
inc
adc
in
pop
fists
int3
cmpb
and
or
ret
sub
push
or
and
inc
mov
add
or
mov
movsb
call
jae
or
sbb
xor
add
xor
mov
inc
mov
fcoms
shr
in
push
lahf
jno
loopne
push
push
pop
cwtl
lods
out
xor
or
pop
dec
mov
add
mov
xchg
hlt
out
pop
mov
wbinvd
ret
xor
das
push
cmp
xlat
movb
push
or
or
cmp
cmp
jno
add
dec
sbb
arpl
addr16
ror
pop
adc
xor
xor
and
and
dec
dec
arpl
adc
shl
or
or
lods
adc
cmp
pop
add
rcrb
pop
rorl
repnz
insb
dec
jo
call
inc
xor
inc
idivb
push
rol
or
ljmp
inc
pop
inc
hlt
pop
dec
roll
jb
dec
in
aas
js
dec
into
das
xchg
icebp
cli
inc
push
xchg
ret
jmp
xor
dec
cli
add
mov
jmp
add
sub
push
or
push
movsl
adc
in
fstpt
loopne
sub
out
sbb
sbb
pop
jmp
dec
mov
in
fmuls
xor
pop
sub
xchg
arpl
mov
mov
mov
jno
cmp
pop
pop
jnp
add
or
lahf
bound
adc
xchg
dec
cmpsl
ss
dec
test
outsl
bnd
lods
lea
mov
sub
mov
scas
or
ret
xchg
push
jo
ja
imul
mov
add
out
stc
or
pushw
fsubrl
jne
bound
push
jbe
imul
push
nop
std
or
pop
rorl
sub
lds
adc
push
jl
sub
test
push
and
xchg
fadds
testl
sbb
neg
push
mov
shlb
jmp
pop
jmp
pop
subl
push
aam
add
jb
sub
xchg
jg
enter
cmp
mov
inc
test
adc
xor
cmp
cmp
mov
mov
push
sub
addr16
mov
dec
or
rcr
and
mov
hlt
cs
lock
insl
pop
jmp
mov
stos
jecxz
dec
mov
cmp
or
inc
inc
sbb
rcl
add
ss
pop
xchg
adc
inc
mov
pop
leave
add
sub
xor
mov
pop
ljmp
into
pop
lret
pop
add
xchg
sbb
out
jg
mov
mov
nop
xor
push
push
pop
lds
mov
frstor
negb
mov
jmp
or
negb
jle
int
xchg
mov
xchg
lods
out
sub
std
add
push
or
push
pop
cmpsl
ficoms
jnp
jne
sub
push
jmp
inc
pop
sahf
clc
fsubr
ficomps
push
pop
push
push
mov
xor
adc
or
and
ret
rol
clc
lret
xchg
fs
enter
ret
inc
aam
mov
movsl
aad
adc
inc
inc
fildll
jmp
roll
mov
jmp
fstps
jnp
aaa
pop
dec
popa
int3
aas
orl
icebp
ficoml
mov
les
add
and
int3
add
call
push
pop
jmp
pop
loope
xor
jge
loope
and
pushf
or
add
sub
fwait
pushf
subb
loope
or
mov
cwtl
jmp
push
push
xorb
push
add
add
sbb
imul
push
mov
les
mov
cwtl
jl
inc
inc
popf
fisubrl
sbbl
dec
sbb
movsl
push
push
out
cmp
test
notb
jnp
or
pop
adc
leave
shl
cmp
mov
pushf
sbb
dec
push
cli
jns
push
iret
mov
ja
push
loopne
lahf
and
add
adc
faddl
cs
push
jno
or
scas
sbb
push
daa
fnstsw
xchg
sbb
mov
or
or
pop
push
adc
push
mov
and
add
xchg
cmp
sbb
out
dec
push
xor
xchg
sub
int3
adc
pop
jns
sti
stos
lods
inc
mov
add
add
neg
lret
fs
lock
shl
push
pop
xorb
pusha
imul
inc
sbb
sub
fiadds
ja
sbb
pop
inc
add
in
cmpl
push
jne
enter
mov
icebp
push
mov
sub
mov
mov
in
mov
call
push
sti
adc
jne
adc
popf
jmp
out
in
es
pop
sub
push
push
popa
inc
aas
push
jne
call
and
xor
cwtl
sub
add
repz
mov
jge
add
lock
pop
mov
xor
add
dec
pop
push
sub
sbb
repnz
or
adc
and
hlt
ficomps
adc
scas
out
mov
xchg
xlat
adc
xchg
ds
scas
xor
lods
add
lock
negb
jns
xchg
insb
lds
insb
dec
add
jl
sub
mov
cmp
add
pop
pop
cmp
dec
adc
mov
xor
sbb
xor
ds
cmp
jecxz
mov
push
and
add
ds
or
add
pop
out
sub
dec
add
shrl
add
sbb
lret
loope
cmp
loop
push
inc
jmp
push
data16
xchg
push
mov
jmp
andb
je
ret
jo
sub
imul
adc
lods
xor
gs
stos
cmpsb
push
les
mov
xor
xor
and
clc
mov
add
pop
mov
rorl
inc
aaa
lds
sbb
xor
push
sbb
xor
clc
sub
sub
sub
mov
pop
scas
sub
lahf
and
jns
mov
mov
cli
push
mov
or
xchg
lods
push
and
mov
lock
cmpsl
inc
jge
xlat
mov
add
and
pop
inc
not
flds
and
dec
repz
leave
xlat
dec
insb
mov
adc
lret
in
les
pop
jbe
and
mov
fsubrs
test
pop
rclb
xchg
repz
mov
sti
lds
cmp
dec
adc
test
jl
mov
sub
testb
dec
jb
mov
push
pop
and
adc
subb
inc
pop
loop
ret
out
add
jmp
mov
fstl
cmp
cmpsl
pop
enter
mov
push
out
jb
dec
pop
call
mov
scas
leave
hlt
sti
clc
or
out
and
xchg
jbe
sub
add
add
cld
adc
push
adc
xchg
aas
push
push
pop
pop
aas
sub
sub
pop
push
push
test
sub
rorl
xchg
add
jmp
ja
add
pop
sub
push
sarl
shlb
inc
rorl
jle
pop
jge
add
sahf
les
ljmp
sub
ss
loop
cli
jmp
mov
xchg
and
sti
and
movsl
xorb
sub
xor
mov
shlb
sub
jle
and
xchg
ret
xchg
jge
or
jbe
dec
mov
inc
xor
lret
push
push
adc
push
xor
jge
cmp
mov
and
jmp
cli
mov
shlb
mov
pop
push
popf
pop
inc
xchg
pop
mov
cli
daa
lock
xchg
imul
dec
pop
mov
lods
inc
test
stos
loop
sbb
aaa
movl
testl
xorb
pop
testb
jecxz
sbbl
pop
pop
in
jnp
add
add
adcl
xchg
test
mov
push
int3
mov
cmp
jbe
adc
addr16
add
lret
push
mov
ret
sub
pop
xor
ljmp
adc
jb
ja
jns
cmpsb
cmp
mov
push
out
push
ret
out
and
or
cmp
shr
loop
sub
fsubrl
pop
shl
xor
repnz
in
pop
jno
jmp
leave
mov
push
xor
cs
mov
xor
cli
pop
or
js
fcoms
push
mov
dec
inc
ljmp
adc
loope
adc
nop
lds
cmp
mov
cs
cmc
xchg
pop
jne
test
imul
mov
pop
mov
xor
cwtl
leave
cltd
push
mov
jnp
jl
adc
mov
mulps
push
pushf
push
inc
inc
or
push
mov
ljmp
js
dec
scas
and
sbb
aas
leave
in
pop
outsb
inc
push
push
mov
or
jmp
dec
mov
sub
xchg
cld
pop
or
setne
adc
inc
inc
push
mov
orb
pop
mov
aad
pop
fiaddl
xor
mov
add
pop
sbb
shlb
xchg
xchg
adc
cwtl
xchg
xchg
sub
gs
add
mov
jmp
push
jno
jmp
sub
test
data16
pop
ja
jmp
lods
push
mov
or
aas
pop
out
mov
lods
js
call
pop
pop
shlb
adc
lahf
jns
jo
mov
push
lea
jp
xor
cli
xchg
or
pop
pop
and
mov
aam
inc
cwtl
outsb
xor
or
daa
in
and
mov
push
sbb
or
or
lods
fidivrs
push
in
push
sarb
sbb
and
lret
mov
add
daa
inc
xor
jmp
ds
jmp
sub
das
lods
cli
leave
bound
hlt
enter
incl
jmp
jae
mov
push
ret
push
jmp
mov
mov
lock
addl
icebp
push
cs
dec
dec
ss
pop
addr16
insb
ret
cmpsl
ja
or
fldenv
ljmp
dec
sub
fld
loop
sbbb
dec
mov
gs
push
push
lret
pavgb
and
jmp
dec
sbb
jge
test
daa
inc
cmp
cmp
icebp
inc
std
incb
lock
cmp
xchg
and
pop
adc
in
neg
mov
rcr
dec
pop
clc
pop
xchg
mov
pop
adcb
adc
imul
inc
xlat
add
repnz
lret
or
xor
mov
adc
mov
mov
mov
pop
sbbb
inc
int3
sbb
jmp
je
out
add
dec
pop
push
jmp
mov
dec
popa
or
dec
push
adc
dec
add
insb
sub
ret
sub
mov
cmc
test
pop
xchg
lcall
daa
or
mov
rolb
pop
xchg
leave
std
adc
xor
ss
or
dec
test
scas
add
sbb
wbinvd
rcrl
pop
jmp
pop
push
push
pop
add
add
or
add
push
jmp
sub
jne
or
aas
and
xor
aaa
dec
mov
test
addr16
jl
js
or
arpl
lock
leave
jo
ljmp
xor
mov
enter
or
lods
jp
sub
inc
mov
push
xchg
cli
mov
outsl
outsl
and
sti
lahf
pop
xchg
leave
mov
or
mov
mov
pop
enter
call
std
in
jp
fwait
push
lds
adc
ds
lods
push
xor
daa
leave
pop
jge
cmc
jmp
mov
neg
mov
inc
dec
insl
jns
in
or
mov
lahf
imul
jmp
sbb
adc
stos
cs
push
xchg
jmp
add
mov
xchg
adc
add
cs
mov
cmp
ja
dec
out
inc
sbb
sahf
or
mov
cli
inc
add
and
push
es
test
cli
jbe
dec
ljmp
or
mov
movsb
les
loop
jg
lds
vpsubd
mov
ret
cld
sbb
sub
xor
sbb
mov
pop
or
jg
fsubr
lock
and
or
adc
xor
inc
je
roll
mov
push
rclb
repnz
pop
inc
fwait
push
test
mov
mov
push
mov
and
inc
lret
movsb
mov
jo
aam
out
sub
sbb
sbb
loop
jmp
xchg
scas
fsubrl
mov
movsb
xor
arpl
inc
pop
pop
and
out
nop
add
jmp
shll
mov
inc
ss
dec
pop
push
fs
mov
adc
adc
clc
lret
push
movsl
sarb
cmp
cmc
cmpb
ret
lods
and
iret
loop
popa
mov
cmp
outsl
add
or
add
xchg
jmp
fbld
or
push
xor
pop
mov
stos
xchg
inc
xchg
xlat
test
sarl
inc
dec
push
pop
sub
lret
dec
mov
mov
push
test
pop
adc
mov
les
sub
and
jge
sub
test
jge
rcr
loop
mov
sbb
sub
jne
in
jmp
push
mov
aam
jmp
test
jae
jmp
sub
lret
jmp
mov
cmc
shl
dec
jns
adc
pop
lods
fdivrs
cmp
mov
insb
add
sub
out
sbb
fadds
push
and
jo
or
lock
jns
add
mov
jecxz
mov
loop
push
pop
xor
mov
or
loopne
out
push
pop
mov
pop
pop
mov
jmp
cmp
lret
add
pop
xor
cmp
sub
cmp
add
mov
xor
ret
sub
jl
shrd
sub
and
cltd
mov
push
xor
aaa
arpl
and
jle
push
jmp
popa
jle
stc
cmc
or
jne
fwait
sarb
testb
test
out
mov
sarl
or
dec
sbb
in
mov
push
dec
dec
mov
pop
xchg
stos
iret
movsb
mov
jecxz
aad
add
add
jmp
pop
cld
inc
pop
popf
fbstp
mov
pop
add
sub
hlt
jns
into
popf
sub
jecxz
pop
pop
mov
scas
enter
insb
cs
test
add
stos
mov
push
inc
sbb
mov
sub
popa
pop
rorb
xor
stc
mov
pop
pop
jmp
mov
xchg
xchg
mov
je
push
faddl
or
jmp
inc
arpl
in
out
xchg
jbe
cld
xchg
push
xchg
dec
and
pushf
jno
dec
inc
add
mov
daa
xor
lds
ljmp
repnz
lds
scas
cmpsb
fdivs
sub
hlt
dec
ret
sbb
test
pop
push
ror
clc
js
sbb
adc
pop
push
rcll
mov
ja
push
pop
dec
push
into
lret
push
mov
pop
jbe
push
fisttps
jmp
add
and
mov
mov
xor
pop
sar
cmp
enter
icebp
adc
push
hlt
ror
enter
std
lds
sbb
rcl
lret
fwait
mov
sar
pop
mov
jbe
lea
scas
mov
or
jmp
out
and
sub
and
in
mov
popf
push
sub
insl
fnstsw
sbb
adc
les
pop
mov
mov
shll
loop
or
dec
adc
jge
out
test
iret
or
add
cli
mov
out
pop
stos
test
and
lods
cmp
sbb
sub
mov
dec
push
or
xor
pop
pop
dec
add
mov
add
enter
xchg
popa
lret
jle
fimuls
sbbl
mov
push
and
daa
and
inc
cmp
ds
cld
cmc
subl
add
sbb
and
das
fdivrs
mov
inc
jle
xchg
ljmp
jmp
add
in
iret
ret
dec
jl
gs
dec
ret
or
roll
and
mov
xchg
push
jne
mov
stos
push
repnz
cmc
out
mov
cmpsl
pop
aam
testb
sub
pop
clc
int
in
aas
rcrl
xor
jmp
out
add
jbe
jnp
sbbb
mov
pop
and
inc
dec
jbe
repnz
mov
add
not
and
in
gs
imul
add
jae
or
dec
adc
mov
ret
bound
ja
insb
xchg
xor
adc
or
into
push
jns
jle
out
jmp
movl
je
popa
mov
andb
int3
icebp
int
sub
mov
lods
add
mov
sub
cmpl
sub
popf
decb
shrb
jo
pop
orb
aas
popa
rorb
gs
and
add
test
shr
jle
xchg
mov
mov
xor
pop
bound
mov
lahf
mov
push
adc
out
push
out
lret
sub
pop
in
adc
add
add
std
cmp
and
movsl
dec
mov
pop
in
mov
vpsraw
push
dec
loop
add
mov
pop
mov
or
and
pop
flds
xchg
stc
mov
shlb
scas
or
mov
jle
aad
stc
addr16
xchg
lret
in
mov
movl
push
orl
pusha
xor
cmp
push
movsl
pop
out
jno
rclb
in
out
or
adc
sbb
incl
filds
jl
and
mov
fistps
pop
push
jg
cmp
dec
cli
add
sub
mov
lahf
push
loop
mov
out
xor
pop
pop
push
push
add
dec
lods
jbe
push
sbb
inc
in
jne
cltd
add
testl
xor
rol
inc
push
jmp
push
and
jmp
sbb
push
add
mov
fimull
lea
mov
jae
push
push
mov
mov
push
adc
sub
or
sub
push
mov
ret
dec
push
inc
pop
pushf
pslld
pop
cmpsb
shl
adc
mov
daa
add
fbstp
mull
cmpsl
pop
mov
adc
adc
clc
enter
jno
sbb
cmp
cld
inc
aam
cmpsb
insl
adc
xor
int3
call
mov
cmp
push
cmp
fbld
or
js
cmp
or
ja
fmul
pop
jns
mov
cmp
mov
repnz
jmp
mov
stos
or
out
add
jmp
mov
mov
imul
dec
out
addb
xchg
cli
push
sbb
in
mov
lods
inc
xchg
adc
mov
cmp
scas
inc
es
dec
cwtl
push
cmpsb
test
adc
add
aad
push
sbb
xor
pop
add
filds
scas
test
movsl
decb
push
scas
xorl
fs
cwtl
pop
push
mov
pop
test
cmp
aad
imul
mov
jbe
psubsw
xchg
sbb
daa
mov
aam
jae
fidivs
iret
ds
lcall
pusha
xchg
lret
ljmp
aad
mov
push
pop
add
hlt
scas
adc
and
pop
pop
lock
lock
cwtl
movsb
sub
jmp
xchg
inc
push
xchg
lock
xchg
sbb
jns
add
fidivrl
sub
push
and
jns
pop
mov
fisttps
cli
adc
dec
inc
xchg
imul
and
jae
lahf
add
hlt
mov
push
push
sbb
pop
cwtl
std
and
push
sbb
pop
or
fsubrl
and
nop
cmpb
out
jae
inc
and
sarb
repnz
rol
imul
cmp
out
int
fnstenv
jmp
mov
js
add
rolb
cmc
rorl
mov
sbb
push
sub
pop
push
js
pop
add
imul
int
insb
shlb
jno
cmp
in
dec
cmp
and
xor
xchg
and
xchg
lods
scas
mov
imul
xchg
mov
idivl
mov
sub
and
add
push
inc
negb
ss
fnstcw
add
sbbb
jmp
mov
adc
push
or
mov
jnp
push
shl
lret
sbb
cmp
ja
dec
xchg
mov
arpl
push
lcall
xchg
enter
pop
dec
mov
inc
pop
mov
mov
hlt
or
push
ljmp
and
jae
xchg
daa
add
dec
aas
jno
fisttpl
les
repz
stc
add
enter
adc
pop
mov
leave
or
and
sub
xchg
lahf
fmulp
lods
std
xor
leave
jp
mov
out
jns
adc
pop
mov
sub
inc
adc
add
jbe
adc
mov
pop
aas
xor
adc
bound
push
mov
in
and
add
test
jmp
cmpsb
cs
mov
jle
jmp
add
arpl
add
jb
popa
cli
aam
mov
jecxz
cmp
add
jns
imul
add
adc
cmp
dec
sub
jbe
call
adc
shr
lea
das
repnz
pop
fmuls
cmp
xor
dec
or
dec
inc
lret
mov
push
hlt
dec
push
xchg
out
adc
test
inc
push
out
pop
push
inc
and
add
jne
movb
clc
jae
jmp
add
fildl
popf
js
mov
inc
repz
jno
inc
push
lret
mov
add
push
mov
sub
push
ja
std
in
mov
jge
xor
clc
cs
dec
popa
sbb
xchg
in
js
push
pop
xchg
inc
int
push
adc
push
jmp
mull
push
dec
fs
sub
push
call
mov
int3
xchg
ja
jno
xchg
call
mov
cmp
loope
mov
push
pop
or
aad
dec
pop
inc
sarl
inc
jmp
xor
mov
or
xor
add
jno
das
adc
adc
fiadds
jp
xor
clc
int3
in
stos
cli
add
and
lret
push
sub
mov
jg
scas
inc
dec
out
mov
pop
adc
movsl
inc
inc
fsubrs
lea
push
sbb
aad
jl
sub
cwtl
dec
dec
fwait
stc
add
adc
dec
jmp
lret
sahf
rorb
sub
cmp
movsb
xchg
sub
push
cli
scas
pop
sbb
fsubr
xlat
mov
rclb
push
pop
inc
add
and
xchg
iret
jmp
xor
jmp
data16
pop
and
sub
ficomps
mov
pop
fnsave
adc
inc
test
pop
xorb
repnz
jne
xchg
shll
mov
icebp
mov
loop
not
push
mov
dec
sub
pop
pusha
bnd
shr
and
inc
and
jl
jmp
stos
and
movsb
and
lods
inc
adc
aas
add
add
mov
cmp
xchg
aad
dec
mov
mov
mov
inc
stos
push
mov
std
movb
xchg
push
stos
out
push
push
ljmp
in
les
clc
hlt
stos
in
jg
subb
stc
pusha
mov
cli
jmp
shll
daa
pop
rorl
es
pop
or
pop
push
clc
push
add
add
inc
add
ret
sar
mov
lcall
scas
cld
mov
outsl
lock
jo
jge
xor
repz
shr
aaa
and
push
ja
stos
ljmp
add
mov
xchg
xchg
pop
pop
and
xor
mov
adc
push
sbb
xor
mov
or
mov
fsubr
in
imul
jne
or
sbb
push
andb
jle
or
sbb
adc
imul
aaa
jbe
push
stc
pop
stos
xor
test
imul
mov
and
je
cmp
pop
popf
jo
call
pop
or
lods
cld
add
ret
add
popf
popa
fxch
sarb
mov
add
pop
cld
lds
inc
push
sbb
and
ljmp
call
pop
mov
sbb
xchg
sahf
mov
dec
push
and
clc
mov
mov
std
mov
enter
push
dec
sbb
sbb
repnz
mov
ljmp
jo
push
mov
arpl
add
push
ret
out
add
and
push
jne
cmp
xchg
sbbb
sbb
mov
sbb
cmp
mov
test
mov
shrl
adc
es
mov
cmp
xchg
repnz
cld
aaa
xchg
clc
popa
cmp
icebp
lods
add
test
inc
fmuls
push
cmp
adc
or
andb
into
xor
repz
sti
xchg
pop
sahf
add
cmp
jle
ret
clc
mov
stc
jns
mov
in
nop
dec
int
je
or
loope
sti
subl
mov
fidivs
dec
cli
insl
and
das
loop
pop
push
cmp
xchg
add
cmp
nop
jp
popf
stc
push
adc
mov
scas
sub
mov
cmp
pusha
mov
jp
and
test
loope
mov
and
jo
je
dec
push
cli
test
in
add
stos
adc
pop
iret
xchg
lock
dec
or
out
push
test
mov
inc
outsb
mov
xor
movsb
pop
out
aam
and
movsl
dec
mov
pop
push
outsl
sti
and
push
sub
pusha
jns
es
jmp
shll
scas
fstpt
mov
adc
cld
jmp
ror
add
stc
add
push
push
jmp
icebp
xchg
test
in
test
ret
decl
or
test
aad
xor
pop
neg
scas
inc
jae
dec
cwtl
jp
enter
cmpsb
rcrl
cmpsl
pop
dec
stos
mov
lcall
jno
add
push
cmp
pop
stos
jmp
imul
xor
mov
shrb
aas
xor
mov
ret
jle
ficoms
fisttps
fwait
push
neg
shlb
and
int3
push
mov
mov
insb
sub
sti
and
push
mov
xchg
das
fildl
cld
loopne
adc
fstps
movswl
pushf
into
mov
xor
and
or
ret
lods
ds
mov
add
mov
aas
mov
nop
shrb
xorb
jns
pop
inc
cs
cmp
jmp
insl
test
inc
mov
outsl
filds
arpl
jo
pusha
clc
neg
mov
iret
dec
dec
inc
jmp
outsb
sbb
jb
xor
loope
or
mov
mov
iret
pop
sub
add
data16
xchg
jmp
jnp
mov
outsl
pop
or
rcr
repnz
cmp
push
incb
push
rclb
adc
pop
jb
dec
sub
mov
push
add
addl
cmc
sub
push
mov
cli
mov
insb
or
push
out
enter
data16
lret
les
add
das
stos
cmp
fdivl
loop
pop
clc
dec
mov
jg
mov
mov
push
insb
cli
pop
adc
adcl
imul
mov
and
dec
fldl
push
mov
lcall
mov
out
cmp
mov
or
or
push
push
sub
and
pop
or
movsl
or
sub
ficoml
or
inc
jp
jb
or
in
inc
dec
mov
sub
icebp
shrb
jmp
pop
push
ljmp
idivl
shlb
ret
or
pop
push
xor
pop
int
mov
das
popf
ds
int3
pop
insb
push
pop
add
cmp
sub
movsl
push
adc
ljmp
cld
iret
inc
aam
cmp
inc
xor
bound
cmp
ffree
xor
shlb
jge
ret
xchg
pop
ret
or
filds
cmpsl
inc
push
push
roll
or
mov
bound
test
hlt
addl
jg
xor
pop
mov
push
dec
shl
push
imul
dec
mov
xchg
adc
pop
mov
call
lcall
pop
sti
adc
dec
mov
pop
xorl
out
or
jge
xor
lret
push
data16
cmp
inc
testb
dec
arpl
or
pusha
ds
cs
lods
jo
and
sahf
mov
andl
fistps
inc
fsubl
push
dec
push
and
shlb
lea
adc
xor
sub
sti
adcb
call
pop
adc
and
ljmp
push
mov
insl
and
ljmp
push
mov
jno
xchg
dec
pop
mov
ljmp
shll
push
fdivl
push
cmc
out
repz
jge
fistl
nop
mov
xor
xor
add
shrb
cmp
adc
out
rclb
or
popf
dec
into
pushf
push
daa
ja
clc
mov
push
mov
fbstp
out
jmp
xor
push
fdivrs
dec
pop
xor
mov
stos
mov
add
cwtl
ret
stos
xor
jne
push
mov
mov
cld
inc
lret
fwait
push
dec
leave
repnz
add
jl
and
popf
lcall
in
adc
sub
imul
je
test
dec
outsb
jb
pop
push
add
jo
shr
or
sub
inc
jns
mov
add
push
aas
push
or
jmp
or
cwtl
fidivs
cmpsb
mov
lcall
test
popa
xchg
push
mov
inc
das
add
rcrb
addl
std
xchg
push
push
aad
addb
xchg
cld
jmp
inc
inc
push
pop
pop
loopne
mov
inc
xchg
cmpsb
daa
ja
stos
adc
xor
pop
lds
imul
jmp
dec
jb
adc
xor
dec
mov
adc
inc
dec
xor
xchg
jbe
hlt
arpl
sbb
and
pop
adc
push
sbb
push
into
imul
lret
push
cmc
out
movsb
and
cmp
lods
sub
cmp
sub
and
lods
ljmp
xor
fcmovbe
arpl
xchg
pop
sbb
cmc
push
cld
ljmp
sbb
mov
xchg
and
mov
add
adc
pop
sti
push
xor
loopne
add
and
add
xor
push
jbe
daa
pop
jbe
inc
lds
sub
mov
leave
or
cwtl
jns
andl
cwtl
mov
addl
je
sbbb
cltd
cmp
adc
push
dec
lods
aad
fmul
push
xchg
push
call
or
je
pop
inc
std
add
xchg
aam
flds
in
ds
sub
push
sub
test
addr16
and
adc
sub
pop
out
dec
mov
and
pop
push
mov
rolb
jmp
aad
stos
jae
cld
lea
leave
sub
push
movb
jne
mov
ss
and
sub
daa
pop
inc
mov
push
sbb
fmuls
ret
dec
jge
xchg
mov
js
int
cmpb
mov
sbbl
dec
push
cmc
sub
xor
jmp
clc
jge
out
xor
sbb
inc
rolb
pop
sbb
ljmp
out
test
data16
and
in
cmpb
dec
into
mov
sbb
xchg
stc
mov
push
ficoms
pop
scas
les
movsb
xor
adc
pop
int
cmp
sarl
add
dec
and
cmpb
pop
xlat
cmp
adc
add
inc
sbb
pop
push
sub
and
inc
movsb
dec
imul
mull
sub
jp
push
jmp
scas
mov
adc
adc
push
or
mov
in
imul
push
rclb
xchg
mov
call
pop
add
xor
cmp
push
push
pop
sub
sbb
pop
adcb
sub
sbb
or
and
pop
add
cmc
leave
mov
push
dec
scas
pushf
test
adc
jmp
pop
orl
pop
xchg
jo
and
xchg
add
mov
pop
add
push
add
jmp
jle
pop
lret
loope
push
sbb
pusha
mov
inc
pop
and
enter
mov
out
dec
push
jle
dec
pusha
push
adc
js
pop
or
cli
cmp
into
imul
cmc
inc
insb
mov
adc
scas
or
pop
loop
dec
mov
jbe
xor
out
and
sbb
les
sub
mov
scas
inc
inc
lock
and
push
mov
adc
xor
cli
sub
pop
push
mov
jmp
aaa
and
jmp
leave
repnz
mov
jmp
lcall
ret
pop
jp
sub
mov
sub
pusha
ret
data16
dec
movsl
dec
mov
seta
imul
nop
lods
add
aas
pop
imul
ret
inc
xchg
or
insl
dec
xor
xor
cmp
or
loop
add
xor
mov
push
add
inc
inc
stos
add
xlat
push
sub
dec
bound
jne
in
jmp
adc
jne
mov
loopne
mov
push
pop
rol
mov
call
push
aas
inc
das
ja
loopne
sub
call
ja
dec
not
int3
ret
insl
adc
push
sarl
add
mov
push
push
clc
roll
mov
ret
not
shr
mov
pusha
mov
cmp
xchg
dec
adc
popa
push
push
mov
cmp
out
sub
icebp
into
fnsave
out
pop
dec
push
aad
shrb
adc
test
jmp
repnz
jp
jbe
popf
incb
mov
pop
xchg
sbb
adc
pop
dec
jmp
icebp
jmp
and
xor
pusha
add
add
mov
lds
lock
mov
shl
push
pop
add
jg
cld
leave
adc
and
add
imul
sub
push
bound
add
sti
dec
push
push
sub
sbb
shll
ds
movsb
call
sbb
xor
out
mov
dec
movl
pop
pop
js
in
jmp
aam
das
lods
insb
mov
jge
call
xchg
pop
mov
mov
cmp
inc
xor
std
and
dec
push
add
arpl
or
hlt
cmp
mov
adc
in
ljmp
jmp
fld
add
imul
mov
pop
adc
movsb
mov
cli
hlt
or
cli
add
mov
leave
dec
cmp
and
xchg
jnp
dec
jno
mov
ret
pop
mulb
mov
rcll
pop
imul
sub
cmp
das
inc
sub
rclb
jp
sub
pop
pop
rcrb
or
shll
xor
jnp
cmpsl
pop
xchg
jecxz
adc
pop
or
push
subb
fwait
jle
dec
pop
aas
fimull
ja
pop
mov
push
cmp
orl
fistpl
xchg
pop
pop
mov
inc
std
cld
mov
icebp
popf
into
movsl
add
js
test
or
jb
dec
push
lahf
and
rol
rol
ljmp
mov
dec
push
push
test
jmp
xor
imul
inc
leave
or
pop
xor
fs
stos
psrlw
shr
loopne
jo
mov
fcmovnu
jmp
adcb
mov
pop
sub
popf
push
mov
mov
lret
movsb
ja
and
adc
sbb
inc
jno
push
fldl
sub
sub
mov
jge
push
lret
pop
push
les
inc
xchg
lahf
add
lods
or
xor
stc
js
adc
mov
lods
sub
pop
dec
or
sbb
adc
mov
jp
mov
scas
jge
in
jmp
clc
and
in
jbe
arpl
repz
bound
cmc
fs
incl
filds
pop
jg
sbb
push
push
pop
or
pop
mov
ret
stos
inc
stos
jg
rcrb
cmp
add
jecxz
int
imul
in
or
movsl
xchg
or
ds
cmpsb
jle
push
push
mov
mov
and
jg
sub
mov
cmc
adc
in
lret
popl
lret
dec
jmp
sbb
add
sbb
sub
pop
divl
xchg
pop
jmp
push
or
sbb
out
pop
je
pushf
add
cmp
jmp
insl
in
cs
jmp
xor
popf
and
cmp
sub
ds
cwtl
sub
push
cmp
movsb
orl
fisubs
pop
rcrl
out
pop
out
add
jno
inc
addr16
add
mov
rclb
jne
ror
or
jl
in
lods
aam
push
xlat
addr16
aad
sub
pop
fmull
add
mov
jnp
std
orb
sti
mov
mov
add
add
add
sahf
push
add
cmp
rorb
addr16
stos
push
jo
adc
adc
add
push
cld
in
mov
sbb
out
pop
jmp
pop
mov
cmp
push
adc
mov
jns
in
xchg
or
dec
jg
sti
adc
or
sbb
fistl
add
and
sbb
and
add
dec
movsb
adc
pop
ret
push
mov
fsubp
sbb
das
jae
push
adc
add
and
out
push
adc
jle
cwtl
in
aad
out
loope
jge
mov
cmp
std
add
sub
jnp
ljmp
dec
daa
adc
lock
add
or
xchg
push
add
push
icebp
cmp
pop
mov
add
xor
cmpsl
xor
or
mov
push
mov
mov
jmp
out
leave
add
ret
gs
lret
fsts
shr
cmc
inc
xchg
pop
xor
aas
shll
notb
cmp
aam
daa
pusha
jl
add
adc
push
and
cmp
adc
push
sub
add
inc
aas
in
jl
push
jmp
dec
mov
xchg
adc
mov
insb
fdivr
les
push
repz
popa
jle
out
add
cmpb
dec
add
xorb
add
adc
or
pop
sub
sub
rolb
bound
mov
fs
dec
xor
mov
lret
stc
add
jmp
lret
sbb
addr16
sub
ja
aaa
popa
inc
fwait
fs
xchg
pop
lcall
or
cmp
pop
push
push
jmp
and
sbb
adc
jnp
ds
add
sbbb
mov
pusha
pop
gs
add
pop
pop
mov
add
mov
inc
xchg
pop
stos
je
pusha
lds
jne
int3
adc
inc
and
pop
sub
mov
lds
or
jmp
xchg
mov
mov
push
ljmp
cmp
sbb
ja
out
icebp
dec
incl
push
jge
push
loop
and
sahf
xchg
mov
add
rcr
mov
jb
sbb
test
inc
xchg
dec
push
adc
repz
sti
das
loopne
sub
fs
add
repnz
cs
scas
cmp
add
notb
loop
jns
push
ljmp
jns
sbb
dec
pop
and
rclb
xchg
xorl
cs
or
ficoms
mov
pop
pop
add
stos
mov
adc
dec
mov
mov
xchg
insb
adc
ret
cwtl
xor
jo
daa
sarb
jo
adc
lret
loop
popf
mov
clc
je
call
add
cmpsb
sub
insb
jmp
mov
xchg
mov
stc
cmp
sub
nop
inc
adc
mov
xchg
pop
push
jmp
sub
add
sarb
clc
jge
gs
cmp
lods
jno
sub
imul
imul
dec
mov
push
mov
xor
or
jle
cmp
movsb
xchg
adc
jge
push
mov
adc
mov
adc
test
leave
pop
lds
hlt
pop
or
stc
mov
xchg
and
test
xchg
fmuls
adc
aad
sti
cmp
lods
fs
data16
and
js
mov
or
push
dec
jg
sub
pop
pop
and
repnz
sub
xor
adc
push
lds
imul
push
and
jmp
inc
pop
movsb
jnp
pop
repnz
lock
test
loope
or
leave
inc
clc
cs
fs
pushf
add
testl
sbb
and
dec
add
in
aas
in
dec
pop
xor
sub
xchg
pop
fstpt
lods
jg
pop
std
jle
lret
or
xor
push
inc
sbb
add
or
and
nop
and
fdivrl
fnstenv
aas
dec
cli
xchg
adc
jg
add
jo
pop
mov
call
lret
xchg
mov
sbb
mov
add
addr16
jae
inc
in
pop
pop
push
push
ja
int3
jecxz
das
jae
jge
or
icebp
inc
pop
add
cld
stc
shlb
mov
fcoml
je
jno
cmpsl
push
dec
les
adc
xor
outsb
mov
test
mov
xor
lcall
add
inc
mov
pop
test
aaa
jno
cmp
add
mov
gs
push
and
or
adc
inc
arpl
in
push
mov
jmp
jle
cmpsb
dec
add
adc
add
pop
lret
push
pop
ljmp
sbb
loop
jmp
mov
inc
adc
dec
mov
mov
nop
or
enter
ljmp
dec
movsl
pop
cmpsb
orl
sbb
pop
push
aad
mov
aad
hlt
sahf
rcll
shrl
inc
push
mov
jecxz
or
lret
not
push
add
cld
dec
mov
pop
sub
mov
inc
jg
cmpsl
and
pop
or
outsb
push
sbb
pop
mov
es
add
je
pop
inc
into
pop
xchg
mov
pop
mov
pop
icebp
mov
cld
jmp
sbb
aam
int3
out
xchg
inc
xchg
jno
dec
aad
cmc
lahf
add
inc
iret
repz
jb
pop
minps
sahf
pop
jmp
test
pop
out
adc
inc
fidivs
or
sub
cmpsl
mov
jne
test
add
jmp
pop
xchg
jecxz
std
inc
addl
jmp
mov
add
cmpsb
js
push
jns
cmp
lret
dec
pop
mov
dec
ret
in
inc
pop
int
cli
jge
dec
jmp
cmp
mov
xchg
pop
shrl
cmpsb
or
out
mov
fadds
call
cmp
mov
add
movsb
xlat
pop
mov
popfw
pop
rclb
subb
jbe
outsb
sub
sub
dec
testl
xchg
jnp
fcompl
dec
mov
arpl
or
push
add
adc
sbb
inc
ret
aad
push
loop
loope
push
inc
or
cmpl
and
gs
mov
test
inc
xor
xchg
sub
movsl
push
xchg
cwtl
pop
add
fstps
add
cmc
add
and
cmp
sub
or
jmp
int
cltd
loopne
or
and
in
fdivs
fstpt
addb
inc
in
pop
loopne
mov
jmp
fisubl
sub
rcl
xchg
test
pushf
sbb
repz
and
pop
fwait
add
mov
jg
xchg
jmp
adc
mov
xor
cld
or
xorb
push
jle
dec
shlb
fisttps
ror
xor
popa
shlb
pusha
jo
jns
push
or
add
add
enter
pop
pop
incb
xchg
repnz
repz
inc
mov
clc
popf
pop
and
pusha
dec
pop
jmp
push
cwtl
jne
mov
push
scas
cmp
inc
xor
sub
sub
add
cmp
pop
and
or
adc
aaa
std
and
fildl
mov
ljmp
out
pop
cmc
loope
in
mov
lret
push
xor
adc
hlt
add
xchg
fnstenv
data16
orb
mov
mov
pop
jle
add
inc
sbb
lret
pop
xchg
push
or
scas
out
data16
stc
popf
and
stos
aam
int
mov
or
imul
add
xchg
push
test
sub
or
pop
fsubrs
clc
xor
and
mov
dec
not
push
adc
jmp
pop
or
inc
aas
lea
movsl
jb
int
mov
out
and
dec
dec
lsl
test
das
push
xchg
mov
sbb
sti
add
out
mov
jmp
add
inc
adc
divl
loopne
mov
fmul
sbb
mov
inc
jmp
mov
adc
and
inc
ss
fs
addr16
mov
push
nop
or
jae
rclb
mov
ret
in
daa
inc
test
call
fisttpll
dec
jne
inc
leave
aad
negb
int3
fwait
dec
pop
or
cwtl
mov
xor
das
out
jnp
gs
stos
out
jns
mov
loopw
push
and
push
lods
cltd
fs
push
cltd
ja
test
iret
fidivs
jnp
cmc
dec
sub
fdivrp
jmp
push
adc
jnp
mov
or
sbb
push
and
or
jp
js
pop
mov
sbb
sahf
push
push
or
test
int3
push
daa
push
outsl
scas
fmuls
cmp
xchg
pop
das
repz
sbb
lods
xor
nop
fisttpl
adc
fidivrs
mov
dec
ficoml
faddl
cmp
jno
xchg
jg
pop
mov
sti
sbb
mov
pop
jmp
out
cs
push
xchg
jbe
pusha
sub
xchg
pop
imul
dec
cmpsl
sbb
dec
or
jg
sub
cmp
cmp
and
adc
or
mov
or
fildll
inc
ja
scas
add
ret
or
push
sub
mov
inc
scas
and
ficompl
xchg
js
cmp
push
dec
pop
add
xor
mul
or
pop
add
ja
adc
push
xchg
inc
test
xor
mov
sahf
add
cmp
cmpsl
out
mov
rorl
pop
push
pop
push
pusha
data16
cli
sub
pop
dec
dec
push
inc
test
add
inc
inc
shr
xchg
subl
or
push
xor
cs
popl
inc
inc
push
int3
push
dec
cmpsb
or
dec
aad
push
add
push
push
xlat
add
cld
call
adc
adc
and
and
scas
adc
adc
mov
neg
add
cmp
pop
xchg
dec
jp
add
or
loopne
lea
mov
imull
add
inc
xchg
pop
clc
inc
int
adc
pop
xor
push
and
movl
add
icebp
adc
jne
sbb
mov
pop
xchg
adc
dec
aad
aad
sub
aaa
mov
xor
sbb
dec
andl
rcl
xchg
pop
out
andb
push
out
clc
rcll
xor
or
cld
pop
loope
std
add
lea
sbb
add
push
mov
add
xlat
cmc
aaa
jmp
jl
cld
add
dec
call
jae
add
jp
pop
dec
add
add
inc
andb
xor
lods
cmp
push
sbb
and
cld
pushf
pusha
movsl
leave
sti
sub
lea
stos
lret
dec
outsl
outsl
add
pop
mov
mov
push
fwait
push
enter
sbb
mov
push
popf
jg
arpl
and
push
add
loop,pn
xchg
lret
imul
push
popf
dec
nop
and
mov
mov
add
push
testl
bnd
xchg
push
mov
push
mov
push
lcall
daa
stc
push
inc
into
ficoms
jb
sub
add
or
push
int3
cld
xor
mov
xor
sub
enter
sbb
jge
add
mov
cmp
sar
outsb
fwait
add
test
je
mov
stos
pop
cmp
and
adc
xor
leave
cmpsl
or
ror
sbb
xorb
lret
int3
movsl
mov
jmp
jo
ficompl
cmp
pop
iret
leave
add
and
in
mov
sbb
jns
add
mov
js
add
int
adc
fisubl
push
aam
insb
and
add
push
xchg
mov
stos
insl
les
or
out
pop
mov
adc
aaa
clc
sub
inc
mov
cmp
inc
rcr
push
pusha
iret
clc
stos
xchg
add
push
cmpb
bndldx
rcrl
or
add
std
and
gs
add
ss
popf
lock
mov
shrl
mov
fiadds
test
mov
jne
add
jmp
push
in
mov
mov
or
pushf
xor
dec
in
es
mov
cmpsl
pop
dec
add
and
mov
add
rcrb
je
add
sbb
loopne
stc
fwait
xchg
pop
cmp
add
mov
adc
aas
lds
movsl
jecxz
xchg
sbb
ss
mov
xchg
es
add
cli
stos
lea
sub
subb
sub
iret
mov
rorb
pop
add
cmp
cmp
and
xor
jae
push
add
jns
add
addl
out
add
jne
in
pop
int
and
imul
lds
push
and
add
mov
inc
nop
mov
add
inc
push
inc
stc
jl
pop
sbb
imul
sahf
jno
push
hlt
jp
loop
add
sub
int
fnstenv
enter
push
dec
add
adc
jnp
std
add
adc
or
mov
test
cltd
and
ljmp
ss
dec
in
out
in
cmp
mov
jl
add
pop
add
divl
xor
pop
push
gs
adc
inc
sub
mov
test
fildl
push
jp
sbb
pushf
cmc
cmp
sub
mov
shll
cmp
stos
test
or
cmp
loope
pusha
rcll
xor
mov
sbb
and
lea
add
ljmp
jno
idivb
push
sub
cmpsb
adc
cli
call
push
jnp
adc
inc
mov
fldl
push
xor
imul
cmpsl
mov
pop
add
mov
or
jg
or
ret
add
sbb
jns
mov
rol
mov
xchg
jp
pop
testl
dec
test
adc
cmpsl
jmp
push
mov
dec
cmp
mov
cwtl
or
popa
jecxz
and
out
sbb
xor
adc
dec
and
mov
adc
jo
add
dec
add
ret
aad
test
std
xchg
cmp
fwait
xchg
js
outsl
xchg
and
add
es
jnp
leave
jb
in
loope
and
ret
daa
idivl
add
scas
pusha
rol
add
xor
mov
subl
pushf
dec
mov
cmc
push
add
shlb
jns
add
das
push
clc
add
mov
cld
pop
add
hlt
xchg
pop
mov
xchg
imull
dec
aaa
and
xchg
inc
lods
popa
xchg
push
lods
adc
jo
push
sbb
into
add
imull
and
movsb
mov
je
add
cs
clc
dec
xchg
or
xchg
loop
shlb
sub
sub
fisttpl
idiv
cwtl
popa
shlb
stos
cmp
inc
loope
enter
xchg
movsb
jp
icebp
mov
loope
stc
add
mov
and
add
cmp
or
or
mov
pop
sub
mov
sahf
js
pop
xor
mov
addb
test
and
lea
repz
jnp
mov
outsb
inc
arpl
mov
or
mov
clc
sub
add
test
fucom
js
mov
add
fadds
nop
sub
xchg
fisttpll
xor
cmp
add
cmp
jl
jb
push
or
push
add
test
std
aad
mov
pop
data16
idivl
jge
cmp
lret
jns
xchg
push
hlt
xor
sub
pop
mov
add
rolb
imul
dec
iret
fists
xchg
pusha
cmp
mov
stos
cmp
cmpsb
filds
mov
nop
add
xlat
mov
jg
add
pushw
push
cs
mov
popa
enter
xor
repz
mov
push
clc
das
fldl
ret
xchg
xchg
jae
and
push
repnz
or
adc
xor
imul
imull
sbb
es
aam
mov
adc
push
adc
into
js
mov
inc
cmp
adc
insb
aad
add
into
dec
cmp
dec
out
push
out
adc
mov
or
clc
push
or
mov
jo
push
loop
out
ja
push
je
push
sarb
pop
icebp
aaa
add
xlat
sbb
and
mov
jo
das
dec
out
add
cmp
push
xchg
les
int
push
inc
test
add
mov
popa
add
mov
inc
in
lahf
sbbl
add
iret
clc
dec
mov
les
inc
push
loope
jge
int3
or
fistpll
int
rcll
sbb
addl
into
shrb
add
mov
cmp
add
dec
iret
mov
in
xchg
sub
scas
add
loopne
into
ds
test
dec
bound
xor
ljmp
and
or
or
cmp
jnp
add
sub
sti
das
pop
sub
mov
popa
add
inc
rorb
mov
cmp
xchg
hlt
nop
movsb
scas
or
and
add
in
sbb
mov
add
inc
pop
arpl
loopne
add
xchg
adc
mov
add
lahf
mov
je
shll
rcrb
push
add
fdiv
ret
jo
and
ljmp
and
loope
xchg
int3
push
cmp
popa
push
sahf
rcrb
ja
sub
xor
xchg
jp
jl
in
add
add
inc
loop
inc
les
or
jb
fistpll
subl
dec
fsubrs
fwait
std
add
notl
xchg
cmp
xlat
sbb
xor
fldl
test
popa
cmpsl
lcall
or
lods
subb
mov
push
mov
and
sbb
lods
adc
aam
mov
and
push
add
sbbl
mov
dec
pop
dec
and
and
divb
mov
rorb
popa
ret
add
icebp
jno
jne
jnp
sbb
cld
jecxz
or
add
imul
mov
pop
sbb
jb
push
ret
ret
adc
ret
sbb
add
mov
das
je
jbe
pop
jle,pn
into
or
inc
jmp
into
add
hlt
in
rolb
mov
pusha
ret
dec
incb
and
fsubl
cwtl
mov
rclb
ss
pop
or
fildl
add
adc
or
sti
fwait
cs
inc
add
loop
cs
jle
sbb
imulb
mov
dec
aad
enter
imul
push
push
dec
repz
cwtl
sbb
or
pop
cli
push
adc
cmp
loope
subl
add
add
shl
push
mov
adc
or
sbb
stos
sbb
aaa
inc
mov
test
inc
push
cltd
sbbb
xchg
mov
ja
fdivr
sbb
aas
ja
sbb
test
adc
dec
and
hlt
out
cwtl
rolb
mov
cmp
jmp
loope
mov
stos
dec
pop
loopne
stos
rorb
out
ret
cmp
fadds
imul
das
and
add
idivl
call
xor
shll
inc
xchg
ja
cmpsl
imul
mov
or
jecxz
dec
cld
sub
jmp
sbb
pushf
mov
adc
lock
inc
movb
jmp
imul
or
movsb
insb
xchg
sub
sti
mov
ss
sub
push
fmull
fs
pop
lcall
jb
xlat
sbb
addr16
mov
xchg
lret
fisttps
push
test
into
add
lock
mov
ret
clc
cltd
sbb
lock
add
mov
gs
and
add
sbb
sbb
push
xchg
lahf
fs
hlt
push
and
mov
pusha
shlb
out
jecxz
lret
lock
mov
inc
mov
or
pop
add
lods
add
and
in
add
push
rorb
adcb
add
shll
nop
adc
add
pop
xor
pop
stc
or
inc
xchg
cltd
mov
cmp
pop
cmp
sub
sbb
jp
sti
mov
stos
lock
outsl
xor
smsw
jns
in
insb
addb
sub
pop
in
push
orw
pop
mov
fcmovnu
int
jmp
jge
add
lahf
jns
gs
inc
mov
pusha
orb
mov
ror
jle
add
fst
or
add
es
adc
xchg
in
sbb
xchg
jmp
add
pop
cmc
pop
lea
or
mov
sbb
xchg
pop
pop
f2xm1
jmp
lret
fldl
pop
out
icebp
scas
stos
cmpps
mov
and
xor
push
cwtl
in
dec
dec
dec
arpl
jg
jmp
cmp
sbbb
push
mov
or
mov
inc
out
sub
sbb
jbe
loopne
cld
pop
aas
xchg
mov
or
loop
stos
and
enter
jle
xor
lahf
sub
imul
push
jbe
test
pop
lock
clc
xor
aaa
adc
mov
in
add
aas
jns
inc
loop
push
xchg
cmp
and
add
jbe
ret
and
sahf
dec
pop
jne
lret
xor
pusha
xor
adc
mov
arpl
push
dec
inc
push
xor
daa
scas
add
adc
pusha
clc
loop
das
or
out
imul
cmp
inc
fabs
leave
int3
jb
add
aad
cmp
pop
and
cwtl
or
push
adc
loope
bsf
lcall
push
add
cmpsb
add
cs
subl
dec
push
mov
push
pushf
or
mov
pop
jb
cmp
and
out
cmp
mov
cmp
fldl
loopne
enter
mov
inc
or
inc
mov
inc
lcall
add
or
jns
ret
add
cwtl
shrl
js
mov
add
mov
cmp
add
adc
stos
cmc
mov
push
lret
std
movsb
jo
ds
jecxz
pop
cmc
ja
sbb
pop
mov
les
pop
iret
sbb
insb
in
mov
push
popl
xor
jg
xlat
sbb
fdivp
cmp
and
shlb
pop
adc
mov
xchg
add
mov
in
xor
es
xor
mov
mov
lods
jae
sbb
int3
fdivl
add
imul
outsb
aaa
and
es
arpl
and
and
in
dec
shrb
aas
repz
sub
mov
or
xor
daa
sub
add
sub
sbb
notl
jle
push
push
bound
arpl
mov
jmp
cmp
loope
jle
hlt
ljmp
iret
cld
decl
cmp
push
mov
neg
insl
fmuls
out
jp
call
pop
add
jbe
nop
sbb
addl
mov
mov
lret
popa
push
jmp
or
inc
stos
jbe
mov
mov
and
dec
popa
in
ret
cmc
adc
and
jbe
push
mov
outsb
dec
pushf
and
cmpsb
mov
add
add
sub
push
inc
jns
pusha
fists
cltd
push
imul
dec
aas
popa
add
fstpt
xchg
push
xor
sbb
inc
movsl
loopne
push
xorl
scas
jge
jecxz
or
sub
ror
xchg
jmp
mov
std
subb
mov
sub
lret
inc
clc
jmp
test
add
es
sub
out
push
inc
inc
loop
dec
pop
mov
test
daa
insl
jns
add
xchg
lea
jl
or
subb
sub
push
mov
rorb
stc
cwtl
movsb
or
lret
das
ds
out
insb
add
jle
dec
xor
dec
ret
and
inc
pop
in
cltd
jl
js
add
pop
pop
das
decl
cmp
shll
adc
xchg
repz
roll
in
jno
add
add
jno
mov
adc
test
xchg
rorb
sbb
dec
pushf
add
rclb
int
adc
adc
push
repz
sub
or
jp
aaa
mov
lds
inc
sbb
sbb
roll
cwtl
inc
cmp
sub
popa
mov
push
lods
int3
push
pop
outsb
adc
dec
jne
mov
dec
xlat
cvttps2pi
ljmp
jno
dec
dec
les
cld
notb
mov
add
push
add
sub
push
pusha
bound
arpl
xchg
add
sub
repz
adc
mov
xor
xchg
mov
test
ja
les
pop
inc
pop
jo
sbb
pushf
arpl
mov
icebp
mov
movsl
mov
inc
int
push
jle
push
stos
inc
push
xchg
xorl
pop
in
movsb
std
jne
rorb
xchg
cmp
mov
jo
sub
mov
stos
mov
xlat
push
inc
mov
jo
outsl
or
jmp
mov
loopne
sti
and
inc
shll
inc
lds
pop
std
inc
fsubrl
cwtl
mov
xchg
push
and
test
filds
dec
jl
pusha
cmpsl
gs
sbbl
jge
adc
dec
addb
add
mov
mov
dec
cmp
xor
insl
xchg
and
sarb
xor
mov
sar
add
xchg
in
add
push
dec
and
aas
cmp
adc
imul
sbb
mov
adcb
imulb
pushl
scas
push
cmp
imul
jle
iret
lds
pop
jge
inc
pusha
cmp
jae
xchg
sub
fs
dec
adc
add
loop
ja
mov
push
jbe
or
mov
popa
or
sub
icebp
sahf
rcrb
loope
mov
push
enter
jae
aam
arpl
jecxz
push
cmp
jl
es
mov
sbb
shlb
js
addb
enter
xor
js
inc
jge
add
aas
orb
push
add
data16
divb
fistl
cmp
xor
outsl
loope
xor
popa
test
jb
or
sub
sbb
cmpsl
sbb
jns
sub
dec
mov
dec
fdivrl
push
jbe
or
hlt
dec
mov
xor
push
jl
adc
fildll
push
jns
sub
lods
mov
add
push
xor
out
mov
sbb
mov
mov
push
xchg
adc
rcll
das
stos
clc
add
ja
je
repz
outsl
xlat
add
adc
test
fidivs
gs
pop
add
jmp
test
fistpll
or
push
cmpsb
rol
inc
cmpsl
add
in
xchg
lods
or
mov
inc
shll
and
fstl
leave
lret
movsb
cmpsb
lods
add
sbb
xor
xor
cmpsb
test
dec
or
inc
add
mov
dec
sarb
sub
fsts
arpl
mov
adc
xor
cmp
ror
dec
imul
nop
mov
ljmp
das
outsl
cmp
imul
or
mov
pop
or
pusha
sbb
add
nop
test
cmpb
inc
mov
mov
loop
inc
ret
cmc
pusha
jae
pusha
aaa
leave
sbb
adc
aam
jo
mov
sti
push
adc
mov
mov
in
cmp
adc
inc
ds
dec
or
dec
mov
mov
and
mov
jmp
add
mov
fdivrl
movsl
es
mov
int3
add
iret
mov
je
push
mov
mov
jl
and
iret
inc
xor
dec
shll
addr16
add
clc
sbb
mov
sbb
pop
mov
das
cmp
inc
stos
scas
sahf
popa
mov
repnz
mov
loop
mov
cmp
addb
iret
add
push
xchg
xor
inc
xchg
xchg
fcompl
mov
shll
inc
cmpsl
inc
test
push
test
xor
insb
out
cmp
jl
xchg
les
sub
aad
addr16
mov
outsl
jp
push
push
inc
test
add
movsl
sub
or
popa
jle
iret
jge
or
mov
mov
mov
add
jmp
dec
adc
inc
fadds
inc
add
mov
or
hlt
inc
cs
out
ss
dec
or
stos
nop
mov
inc
in
and
xor
roll
push
popf
nop
mov
sarb
sahf
cltd
cmpsl
scas
rorb
mov
ja
es
aam
push
xor
push
inc
add
xchg
lds
jmp
pop
push
int
adc
cld
loope
push
xor
mov
rcrb
xchg
push
pop
or
mov
jp
test
dec
add
adc
mov
sbb
inc
imul
fmuls
dec
in
jnp
add
mov
int3
or
push
pminub
rcll
or
mov
push
out
sbb
ljmp
xor
fcoml
addb
pop
inc
nop
jecxz,pt
and
sbb
inc
addb
sbb
in
add
add
cld
xor
pop
iret
pop
out
or
rcr
adc
cmp
mov
add
cmc
push
xchg
cld
roll
or
pop
fstps
mov
jmp
mov
mov
inc
push
or
xor
mov
push
sbb
adc
inc
inc
sbb
out
sub
xchg
mov
das
push
add
pop
cmpsb
and
jl
jbe
add
adc
inc
sbb
cld
dec
adc
cmp
cmpl
or
pop
cmp
movsl
mov
jle
mov
and
cmc
mov
push
lahf
pop
testb
pop
mov
cmpsb
push
jp
scas
pop
and
push
jecxz
sbb
insb
push
push
pop
fldcw
sbb
push
and
rcrl
inc
ja
jg
xor
sbb
xchg
sbb
add
cmp
mov
arpl
test
mov
dec
mov
cmpl
push
add
cli
dec
mov
xor
pop
and
sbb
fildl
push
xor
sub
mov
pop
dec
xor
daa
or
add
mov
sub
push
inc
xor
pop
push
xchg
rolb
mov
sub
or
lcall
mov
dec
into
popa
mov
inc
push
int3
jle
cld
les
int3
les
and
mov
test
roll
push
pop
lcall
add
or
mov
mov
aas
xchg
dec
push
adc
xor
arpl
dec
inc
jo
std
dec
adc
inc
cwtl
push
pop
outsb
push
jecxz
adc
dec
addl
dec
out
lods
cmpsl
call
jae
add
cmp
jnp
nop
inc
mov
inc
enter
ret
cmp
data16
xchg
movsb
cmp
push
adc
cmp
fwait
add
insl
add
inc
fimuls
xor
pusha
cmp
orl
mov
cmovb
push
mov
shll
xlat
ret
xor
adc
cmpsl
popa
pushf
int3
dec
sbbb
and
popf
or
xchg
rcrl
lahf
in
test
adc
jecxz
shll
in
push
imul
add
aam
rcll
frstor
sbb
loop
inc
dec
outsl
inc
subb
aam
dec
addb
sbb
dec
imul
jns
inc
stos
and
xor
repnz
fimuls
in
loopne
in
push
mov
sarb
pusha
nop
add
xlat
cmp
jnp
leave
in
xchg
cmp
call
sbbl
xor
outsl
fsubr
mov
inc
jo
push
ja
fucom
cltd
int3
xlat
sbb
xchg
js
push
xchg
sbb
cmp
roll
in
je
cmp
fcoms
fldl
add
jmp
fcoml
cmp
jle
add
inc
add
or
insl
jmp
cmp
cmp
pushf
leave
or
mov
xchg
or
js
imul
sub
add
xchg
mov
xor
sarb
adc
in
popa
mov
inc
or
cmp
add
jge
dec
imul
scas
dec
cwtl
nop
mov
add
and
ss
mov
mov
or
or
loop
std
xchg
movsb
adc
or
jecxz
pop
or
ja
ljmp
cld
adc
sub
inc
dec
push
lock
pop
xchg
pop
mov
cmp
sbb
popl
mov
adc
pop
sarb
or
es
xor
cld
mov
je
sbb
cmp
xchg
test
jmp
pop
mov
popf
adc
pop
pop
test
mov
leave
mov
push
jns
popa
rcl
shrl
ss
adc
dec
add
sub
push
js
movsb
or
popf
adc
cwtl
inc
mov
sti
and
inc
clc
nop
test
cmp
adc
in
or
inc
push
cs
xchg
inc
clc
ss
or
or
xor
inc
cltd
or
sub
lahf
add
dec
mov
mov
cmp
inc
xor
cwtl
inc
mov
pop
and
ja
or
pop
sbb
push
imul
adc
in
dec
test
aam
inc
and
push
inc
xorb
addr16
loopne
cld
sub
add
jge
and
mov
les
nop
mov
mov
mov
sub
scas
xchg
shll
iret
insl
call
pop
sub
jp
add
fidivs
push
or
mov
lret
inc
and
rcr
sub
stc
es
xchg
in
sbb
xor
xchg
pop
aas
popl
mov
in
scas
sub
and
enter
and
cmp
test
inc
jge
and
clc
loop
sti
clc
or
sbb
jmp
mov
push
sub
call
rorb
mov
push
popa
adc
inc
lock
test
mov
cmp
bound
adcb
es
fwait
mov
or
in
mov
add
jne
push
sbb
add
jbe
in
jne,pn
xchg
add
pop
add
or
les
push
dec
jo
add
in
mov
add
stos
lods
xlat
add
lcall
ds
aam
fstps
arpl
sbb
aas
jg
add
dec
mov
fidivs
add
testb
add
jle
cmpsb
adc
call
add
lds
clc
loopne
add
psllq
cld
outsl
sub
sub
mov
jmp
test
pop
rolb
add
enter
insb
cli
lods
lods
popf
xor
nop
out
shrb
stc
add
xchg
jae
loopne
mov
sbb
sub
and
and
sbb
mov
and
lds
flds
rcrl
jg
add
mov
imulb
sub
and
inc
add
push
dec
dec
ja
add
mov
ljmp
push
mov
adc
sbb
outsb
mov
int3
insb
add
and
and
ss
xchg
shrb
push
mov
or
cmp
mov
dec
add
or
ret
mov
xchg
call
stos
cwtl
mov
les
daa
lea
jns
int3
xchg
adc
add
jecxz
mov
xor
add
insb
stos
xchg
add
jo
mov
mov
in
jae
addl
ficoms
xlat
jecxz
add
ret
in
popl
pop
test
insb
mov
into
sbb
pop
mov
imul
push
clc
stc
aas
shlb
pop
xchg
pushf
popf
add
xchg
cmpsl
add
add
jne
push
aam
add
out
pop
sub
jge
es
mov
addr16
or
bswap
aas
inc
aam
sub
mov
xorb
mov
popa
add
lcall
int
xchg
enter
jae
jmp
outsb
push
add
fidivrl
shll
cwtl
pop
xchg
repnz
and
movsl
data16
sti
pop
push
adc
and
cwtl
cmp
fwait
out
push
pop
std
push
mov
subb
aaa
dec
lahf
push
cmp
pop
add
mov
sbb
out
std
rol
xor
add
out
test
ret
pop
and
cli
cmp
sti
out
pop
add
push
andb
js
dec
addr16
lods
loopne
add
jg
mov
cmc
mov
pop
add
arpl
jle
scas
cmp
add
xlat
mov
movsl
in
mov
fidivrs
add
and
mov
add
push
mov
inc
ja
add
xor
mov
adc
inc
xor
and
je
add
push
mov
inc
call
adc
enter
in
ds
fcoms
nop
mov
lret
mov
in
test
lods
mov
insl
rcrl
fwait
cmp
add
fcomp
ljmp
mov
or
out
rcr
mov
adc
scas
lahf
out
push
movb
into
test
pop
scas
or
mov
shrb
cmpsb
inc
pop
sub
hlt
inc
js
out
sbb
fucomi
incl
test
arpl
jle
cmpsl
jo
sbb
das
mov
xor
iret
xor
sub
cmp
pop
pop
popf
filds
pop
inc
mov
jle
fldl
clts
pop
mov
pop
push
or
arpl
int3
xor
add
orl
fadds
inc
inc
push
aad
jnp
sub
jle
mov
pop
cmp
add
ss
or
adcb
push
dec
mov
std
xchg
cmp
inc
cmp
add
sub
ljmp
push
loope
adc
mov
and
cmpsl
add
cmp
das
ss
sbb
xchg
stos
add
sbb
fs
orb
iret
add
and
in
jno
shlb
mov
fadds
dec
add
cmp
mov
inc
js
fisttpl
xchg
sub
invd
add
mov
cmp
sub
add
cmp
cs
sub
pop
fmull
sub
dec
pop
xor
cmp
ljmp
outsb
inc
xor
jo
lahf
or
adc
leave
push
adc
mov
jo
mov
fcoml
test
add
sbbb
mov
int
mov
andl
and
js
repnz
xchg
in
xchg
push
sbb
pop
pop
mov
cltd
dec
add
repnz
mov
add
push
fsub
mov
pop
add
popa
rorb
out
push
and
and
adc
pop
and
and
insb
cmc
and
aad
cmp
pusha
loop
add
ljmp
movsl
aas
and
cmp
add
rorl
mov
mov
lret
testl
fiadds
mov
mov
cmp
movsb
in
mov
pop
adc
nop
xchg
lock
cmpsb
pop
dec
in
mov
cmp
push
in
jl
mov
inc
push
lock
pop
dec
mov
rclb
sub
mov
jle
push
movsl
push
add
and
fs
inc
add
addr16
cli
popf
add
fisttpll
cmp
add
and
das
add
cmpsl
push
inc
lods
or
jge
add
cltd
pusha
dec
jmp
aad
mov
test
add
adc
inc
cmp
jg
mov
add
dec
add
xor
fisttpl
into
dec
in
in
cmpb
mov
idiv
jmp
mov
adc
fnstenv
push
add
stos
push
les
cmc
mov
adcb
xor
prefetcht2
rcrb
add
stos
fiadds
sbb
clc
xchg
fsubr
loope
stc
imul
std
cmp
popl
repz
sahf
inc
push
test
xor
xchg
rol
cli
inc
dec
xor
xor
and
rcrl
cmp
adcl
test
and
pop
push
popl
add
popf
lea
cmp
mov
sar
repnz
xor
nop
aas
pop
enter
xchg
xchg
add
outsl
dec
mov
jp
out
jnp
sar
mov
mov
mov
sbb
dec
adc
add
lcall
test
jmp
cs
xchg
sbb
mov
notl
mov
push
jae
aaa
add
sbb
out
cmp
xor
xor
push
sbbb
pop
in
xor
pushf
cmp
inc
or
loopne
clc
test
push
dec
or
call
xor
mov
imul
pop
dec
inc
or
sarb
adc
sbb
lea
addr16
mov
xor
cli
pop
pusha
mov
sbbl
daa
mov
pop
sbb
sub
stos
push
add
push
fidivrl
add
hlt
sub
mov
in
inc
push
rol
popa
int
inc
sub
sub
je
add
mov
and
jnp
push
add
ret
scas
add
jp
popa
cld
jmp
or
cmp
jecxz
sub
inc
add
pop
rcrl
andl
stos
xor
scas
jae
iret
push
jnp
dec
cs
stc
mov
sbb
or
out
inc
push
sbb
xor
lds
mov
iret
add
sub
dec
push
dec
inc
cmp
jmp
adc
jbe
push
cmc
stc
xor
mov
adc
mov
outsl
subl
mov
loope
sub
jnp
fs
pusha
or
popf
or
mov
dec
add
outsl
push
xor
pushf
ljmp
adc
fucomp
push
add
lock
outsb
jo
xor
popa
and
mov
pop
cwtl
pusha
push
push
add
repnz
lcall
inc
or
or
je
xchg
xor
icebp
rcrb
jl
push
insl
lods
movsb
dec
in
and
and
inc
std
dec
xor
lods
xor
jne
pop
popa
rorl
adc
ja
jmp
cmpsl
rclb
sub
jo
stc
mov
push
imul
stc
lds
jle
loop
mov
push
xchg
push
mov
sub
rorb
ljmp
mov
call
and
dec
lods
xchg
mov
mov
roll
push
imul
pop
inc
ja
sarl
test
add
aas
js
or
jnp
pop
jb
mov
fadd
andb
mov
sub
in
jo
push
mov
dec
testb
mov
sbb
sarl
inc
setb
jno
dec
mov
dec
ret
cmpsb
dec
mov
lods
es
mov
imul
pop
push
das
mov
cmp
dec
or
add
mov
sbb
mov
mov
call
aad
cmpb
cwtl
cmc
mov
movsb
push
and
std
cmp
lea
add
and
mov
insl
inc
stos
inc
push
mov
repz
mov
add
sub
pop
cmpsl
in
fiadds
mov
add
pop
add
jp
fnstsw
push
add
push
ss
in
pop
dec
testl
or
sbb
inc
jecxz
add
add
lock
pop
js
xor
mov
cli
test
jl
push
inc
sbb
add
or
push
dec
or
out
inc
clc
mov
inc
cmpsl
sbb
push
push
dec
repz
in
dec
clc
je
ret
cmpb
xor
inc
stc
inc
pop
js
push
pop
dec
xor
dec
pusha
negl
dec
ljmp
lods
sbb
add
jmp
out
or
xor
test
js
cmp
cmpsb
enter
repz
adc
xor
mov
stos
push
add
xor
mov
fdivrl
pop
sbb
jo
lea
cli
sbbl
xchg
test
repz
arpl
cmp
arpl
cwtl
cmp
mov
adc
sbb
mov
push
outsl
mov
aad
jge
xor
jae
inc
shrl
pop
mov
pop
cs
add
mov
repz
xchg
mov
xchg
mov
adcb
xor
add
push
cmp
arpl
js
mov
rclb
call
push
clc
stos
cli
enter
rcrl
mov
ss
xor
mov
iret
inc
xor
sbb
jmp
xor
sub
pop
jp
jl
rclb
xor
mov
cmc
mov
mov
ja
sbb
inc
pop
sub
in
add
sub
les
lcall
sbb
test
loop
sbb
mov
or
jmp
test
and
sbb
shll
outsl
imul
and
and
push
bswap
mov
int3
and
or
push
mov
popa
lea
push
mov
or
inc
cmpsl
inc
nop
sub
mov
test
sti
inc
xchg
cmpsl
mov
imul
jb
pusha
mov
cmp
popa
push
mov
aam
ljmp
mov
or
pop
jle
add
mov
sti
cmpb
adc
cmpb
adc
inc
cmovs
stc
js
fwait
lods
repz
shl
cltd
pusha
adc
loopne
inc
mov
int3
scas
cli
and
ror
xor
test
loop
and
std
or
loop
or
test
xor
scas
mov
mov
jg
js
imul
roll
add
sbb
data16
or
push
xor
mov
imul
sbb
push
cmp
add
je
sub
lock
dec
cmp
push
fsubs
xchg
inc
jb
sbb
inc
and
gs
push
dec
jl
inc
add
pop
push
sbb
ds
out
xor
shrl
jmp
add
push
in
sbb
loope
inc
popa
adc
pusha
and
xchg
inc
cmc
bound
xor
in
in
movsb
add
jl
sub
call
in
int
pop
or
rclb
cmp
add
xchg
lock
adc
adc
inc
jnp
sbb
out
dec
ficoms
add
adc
loop
mov
in
test
loopne
add
xchg
insl
insb
dec
daa
jl
in
cli
dec
inc
dec
or
xor
loop
lcall
in
ret
push
pop
dec
nop
cwtl
add
dec
repz
add
mov
push
les
pop
cli
pop
ret
and
pop
cmp
sbb
and
je
test
nop
pop
movsb
xorb
adc
pop
push
dec
and
pop
mov
add
adc
in
rol
jmp
emms
mov
dec
stc
inc
push
jae
test
inc
pushf
dec
jmp
add
push
out
xor
lods
sbb
mov
inc
xor
pusha
sbb
and
add
popf
out
pop
inc
sbb
or
inc
pop
enter
scas
nop
dec
dec
jmp
les
inc
lods
cmp
shrb
add
mov
sub
sub
lock
add
movsl
xor
cmc
add
xlat
out
scas
inc
add
add
mov
dec
and
cmpsl
cld
adc
sbb
add
pusha
jmp
sahf
cvtpi2ps
mov
aas
loopne
push
lods
ds
int3
xor
add
shll
jecxz
movsl
xor
sub
cmp
add
ljmp
mov
sub
fmull
xlat
inc
or
popf
or
or
add
sbb
repz
mov
mov
adc
pop
cmp
xor
add
shrb
mov
adc
and
xor
add
adc
ja
push
je
clc
and
imul
addb
out
aas
sub
adc
push
xchg
out
pop
xchg
add
adc
add
mov
adc
xor
sbb
push
pop
fwait
push
inc
xchg
aad
outsb
add
lret
incb
mov
push
and
add
je
jl
sbb
das
mov
add
mov
mov
loopne
cmp
or
cltd
add
add
add
or
ljmp
pop
fwait
push
add
cs
sub
cmp
icebp
mov
xor
pop
icebp
adc
in
in
jg
pop
jmp
fsubrs
lea
jo
mov
paddusw
xchg
add
and
mov
adc
cmp
adc
shll
movsb
push
cmp
int3
ds
inc
pusha
fs
xor
adc
lea
rcl
xchg
cwtl
sbb
inc
leave
xchg
iret
push
sub
xor
lds
pusha
cwtl
mov
push
fsubl
and
fbld
iret
test
mov
push
fwait
aas
add
ljmp
cmp
ret
lret
enter
xchg
adc
ljmp
incl
test
fnsave
call
sub
repnz
rol
xchg
nop
sbb
fmull
jmp
and
xchg
push
nop
ja
das
leave
call
adc
addb
or
sbb
shll
daa
fadd
mov
adc
rolb
in
shlb
and
addb
xchg
cmp
lea
xor
xchg
cmpsb
lock
and
ret
adc
cmp
xchg
pop
cwtl
lock
iret
or
cmp
xchg
or
sbb
adc
xor
pop
mov
sub
js
xchg
or
cmp
ja
sar
fists
clc
xor
call
add
lcall
push
or
clc
in
mov
and
fnsave
lea
and
inc
rcl
xchg
add
inc
scas
in
stc
adc
jo
push
mov
pop
orl
lods
jb
sbb
andb
and
shlb
push
stos
or
pop
mov
adcl
imul
jae
pop
cmp
std
andb
not
sub
add
lods
xchg
ljmp
or
add
dec
and
jnp
ss
aam
out
inc
adc
int3
mov
xor
orb
add
xchg
sub
and
add
stc
add
xchg
fsubl
ret
repnz
popa
or
or
out
cld
sbb
jecxz
adc
or
add
inc
jle
leave
inc
inc
add
lret
xchg
xor
movsl
push
mov
push
or
or
add
and
std
test
ret
cltd
add
pop
shlb
add
xor
push
mov
aam
dec
sbb
int3
cmpsb
sbb
mov
xor
pop
andl
movsl
add
sahf
and
lcall
in
arpl
enter
mull
lock
add
sbb
cmp
and
popa
and
inc
or
in
mov
aaa
xor
cld
cmp
xchg
pop
mov
xor
sbb
add
nop
lcall
ds
dec
loopne
mov
rolb
hlt
add
lret
call
dec
sbb
mov
sbb
lret
add
add
xorl
cmp
aaa
imul
adc
xor
cmc
jbe
or
and
repnz
mov
mov
hlt
pop
mov
or
add
cmp
add
add
cld
xor
xlat
add
xor
out
and
or
add
hlt
and
jo
into
pop
loopne
or
or
aas
sub
xchg
rorl
mov
loope
mov
mov
and
push
or
jo
imul
adc
cmp
jmp
jb
ds
in
in
xor
add
adc
adc
fsub
cmp
and
fdivl
or
jne
pop
dec
nop
std
mov
inc
insl
and
dec
mov
bound
out
mov
add
test
loopne
fadds
repz
sti
add
mov
jo
mov
and
enter
fs
xchg
jmp
btc
out
test
and
adc
andb
aaa
sbb
fldl
or
data16
enter
aas
xor
xor
call
adc
cmp
addr16
loope
call
xor
add
sub
or
pop
pop
aam
icebp
pop
sub
and
or
iret
push
nopl
xor
mov
lock
or
lods
push
bound
and
daa
or
add
leave
or
lret
aad
prefetch
adc
pusha
adc
movsl
mov
xchg
call
sub
rcrb
fisubrl
in
mov
sub
cmp
adc
and
je
jl
mov
and
std
rcrb
cmc
ror
dec
int
loop,pn
mov
and
mov
cmpb
adc
inc
mov
lds
nop
test
xor
imul
jns
xchg
push
sbb
jno
mov
ja
sbb
jl
les
repnz
cwtl
sbb
mov
mov
xor
adc
ss
loopne
xor
dec
lret
call
mov
cmpb
and
cmpxchg
mov
cmp
sbb
cmp
sbb
add
icebp
mov
pop
and
sub
or
mulb
mov
or
clc
xlat
adc
or
cwtl
je
cmp
outsb
stos
adc
mov
push
call
sarb
xor
adc
pop
jnp
or
mov
int
cwtl
adc
adc
cmp
cmp
sbb
ss
bound
xor
and
or
and
add
addr16
mov
fldcw
pusha
cs
inc
adc
cwtl
push
add
sbb
push
js
rorw
pop
adc
sub
das
nop
outsl
add
dec
fucomp
or
test
sbb
es
lods
je
pop
mov
xor
mov
sub
pop
rclb
push
xor
xor
fmull
cmp
inc
sub
jecxz
sbbb
bound
pop
sti
inc
xchg
cmp
in
or
and
movsl
mov
add
push
jmp
dec
pop
xor
pop
mov
nop
aas
pop
push
jb
add
add
pop
mov
xchg
enter
out
std
sbb
and
push
incb
push
mov
rolb
ss
dec
or
mov
xor
into
jle
add
andb
dec
aam
lods
mov
gs
out
mov
mov
pop
add
das
inc
clc
cmp
inc
js
jecxz
cltd
loopne
cmpsb
sbb
add
scas
sub
aam
ret
push
xor
xchg
mov
inc
mov
rclb
hlt
adc
loop
call
hlt
shlb
pop
xlat
cltd
int3
jns
sbb
ret
rolb
out
dec
mov
data16
mov
fwait
nop
and
add
lock
xor
sub
mov
jo
jp
mov
add
in
into
ror
nop
vmovaps
inc
or
into
inc
sbb
in
pop
jne
mov
repz
loop
xor
and
sbb
push
push
mov
stc
xor
cmp
loopne
inc
movsl
sbb
and
sub
into
lret
add
add
sbb
dec
dec
or
jecxz
loop
sbbl
pop
cli
inc
aas
loopne
or
aam
jecxz
inc
jge
gs
push
lea
int3
sub
mov
pop
jl
mov
or
xor
dec
jmp
aam
pusha
ror
sbb
aam
repnz
movsb
pop
clc
shlw
or
dec
inc
pushf
rolb
cwtl
sbb
frstor
add
xor
daa
pop
cmp
out
outsb
add
test
popa
lea
ss
ud1
loope
sbb
add
lret
sbb
mov
add
inc
aam
idiv
popa
xchg
dec
jno
mov
mov
xor
adc
xchg
loope
sbb
xor
pop
add
dec
into
push
loopne
xor
mov
ljmp
movsb
xchg
negb
hlt
inc
roll
sbb
mov
cwtl
ret
ljmp
pop
mov
jne
mov
push
lds
xlat
xorb
inc
adc
movsb
add
je
fwait
or
add
mov
xchg
cmp
js
jno
sub
pusha
cli
sar
or
sbb
and
repnz
jbe
sbb
add
pop
mov
or
jne
mov
add
scas
lods
les
add
push
insb
pop
in
jbe
add
sub
sahf
cwtl
cld
jno
xchg
xor
adc
mov
mov
sbb
sub
mov
loopne
inc
mov
xlat
test
lods
das
int3
mov
test
or
xor
in
cli
mov
cmp
mov
or
pop
mov
adcb
in
add
inc
popa
cmp
xor
inc
sbbl
jae
sbbb
shll
popf
lds
xchg
pop
xor
cmp
in
pusha
mov
jne
cmp
loopne
movsb
fsubrp
xor
es
je
scas
dec
jo
sarb
and
xor
cmp
xor
orl
sbb
test
xor
add
andl
jne
jb
repnz
pop
scas
add
movl
add
pop
and
mov
cmp
lods
and
aam
jns
push
and
ret
jb
ds
add
sub
add
aas
push
sahf
push
or
popa
pusha
test
orb
or
cmp
enter
jb
mov
sub
dec
or
add
out
mov
cs
sti
test
jo
cmp
test
repz
subl
cmp
in
data16
nop
cmp
push
and
repz
adc
outsb
or
jnp
fldl
ss
push
popa
pushf
cmp
xchg
xor
js
mov
insl
add
mov
adc
sub
adc
leave
push
mov
sbb
es
pusha
mov
cmp
xchg
cmovge
jno
idivb
mov
mov
lea
inc
jecxz
add
cmp
add
pop
sub
mov
push
fdivs
dec
mov
enter
mov
push
icebp
add
clc
dec
leave
mov
testb
pusha
lahf
cmpb
pop
dec
iret
mov
scas
pusha
sub
or
nop
andb
mov
and
or
repnz
ss
and
mov
inc
add
mov
pop
and
xor
inc
or
jo
dec
cmp
test
pop
icebp
jno
data16
into
mov
test
add
and
adc
cltd
les
cmpsb
pusha
je
mov
das
in
add
ljmp
fdivl
inc
es
fwait
sub
sbb
add
pop
xor
mov
inc
insb
aaa
add
inc
xchg
cmp
andb
aaa
or
xchg
jae
add
inc
sub
out
dec
test
enter
mov
je
lret
xchg
pop
stos
sub
xor
adc
rol
lea
mov
loopne
or
add
insb
xor
cmp
nop
sbb
cmp
mov
pop
ja
ds
out
inc
lock
mov
add
push
pop
inc
int3
les
cmpsb
pusha
mov
push
or
test
jb
xor
and
add
xchg
mov
imul
sbb
jo
jle
cmp
hlt
push
inc
out
andb
sub
or
inc
insl
mov
stos
enter
cmp
mov
mov
shll
dec
and
mov
xchg
adc
shll
mov
fs
int
sbb
mov
or
sbb
add
mov
dec
mov
stos
xchg
xor
pushf
cmp
pop
xchg
dec
pop
aas
xor
pop
arpl
pop
inc
cli
add
xor
adc
sub
jo
shll
push
or
mov
daa
add
xchg
add
sbb
xor
dec
int3
adc
add
inc
sbb
fsts
subb
mov
inc
xorb
push
in
jb
and
call
stos
xor
rorb
and
cmp
xchg
js
cmpb
insl
add
adc
ss
addr16
cld
push
push
jno
and
mov
aaa
mov
sub
or
ss
popf
loope
lods
xor
loop
loope
and
fisttpl
lods
jo
xchg
test
out
xor
inc
adc
sbb
icebp
inc
xor
xor
mov
jo
or
mov
mov
insl
adc
cmp
es
cmp
dec
lea
and
pop
movsl
lock
jp
push
add
inc
jo
jl
fsubr
cmp
popf
seto
and
cld
in
pusha
and
movsl
dec
mov
jno
test
add
lods
sbb
dec
lock
adc
dec
add
pop
je
mov
cmp
or
test
mov
mov
mov
pop
jo
shll
repnz
call
sub
mov
xor
or
ret
mov
sti
pop
in
jmp
lods
sbb
int3
popa
sub
add
ljmp
rcl
ja
pop
lods
mov
int3
mov
mov
scas
ja
xor
pop
jne
and
pusha
mov
mov
push
mov
or
loop
mov
stc
add
mov
imulb
jae
rorl
inc
lds
cld
pusha
stos
movd
shll
fistps
sub
les
cli
in
mov
inc
add
dec
sbb
bound
xchg
in
add
lret
pop
lods
adc
mov
test
push
mov
jne
fadds
repnz
or
xor
add
xor
loope
in
popa
call
push
sbb
dec
or
or
mov
inc
lock
inc
mov
fstps
orl
or
jb
pop
cmpsb
add
xchg
js
mov
inc
aam
lods
add
adc
test
ss
inc
adc
jb
xor
and
lock
shrb
mov
cmp
xor
int
cmp
sti
pusha
mov
or
das
lods
or
mov
jmp
or
mov
cmp
and
nop
cmp
inc
adc
pusha
lret
sub
cltd
and
cmp
clc
iret
in
rorb
mov
xchg
test
test
jo
add
cmp
ror
orl
adc
jmp
add
cmp
adc
adc
and
ret
sub
or
add
pop
pop
mov
sbb
clc
or
sbb
or
add
ds
mov
push
pop
jecxz
movsl
sbb
sti
cmpl
jne
and
push
push
stos
mov
mov
lea
or
rcrl
and
pop
adc
icebp
add
sbb
push
nop
mov
enter
daa
and
mov
pop
loopne
push
aam
mov
test
mov
or
add
repz
adc
push
lea
rol
aam
add
test
cmp
adc
push
stc
and
orb
jns
inc
or
shlb
icebp
xor
fildl
rorb
and
pop
ret
inc
mov
and
ret
jnp
sahf
pop
insb
and
fmull
add
dec
fsub
ret
jg
mov
sbb
out
inc
xor
mov
xchg
xchg
pop
jl
mov
inc
push
add
scas
or
cmp
mov
adc
and
add
xor
adc
jle
pop
cwtl
cmp
je
push
lods
sbb
scas
mov
or
push
fmul
and
cmpw
movsb
lds
sub
xor
sub
and
clc
add
xor
cmc
jmp
sbb
inc
sbb
andb
sub
nop
stos
and
fisubs
sbb
and
push
popa
pop
ret
enter
dec
rolb
loop
mov
jb
lock
test
pop
ret
and
inc
movsb
cs
sbb
push
ret
mov
xchg
fisubrl
lret
cmp
push
dec
xor
leave
add
cmp
dec
push
pop
mov
or
fiadds
adc
add
ljmp
cli
add
and
adc
adc
or
pop
mov
adc
or
push
sbb
icebp
dec
pop
rorl
cmp
sbb
add
popf
es
sbb
sub
loopne
fdivs
xor
sbb
fnstenv
and
jbe
mov
inc
push
jmp
aas
out
bound
fcoms
testb
push
pushf
adc
sbb
jmp
adc
lret
and
mov
and
popa
adc
mov
lea
mov
dec
xor
loope
lcall
out
and
xor
push
int
mov
ret
sub
xchg
out
pusha
mov
out
fstpl
addl
dec
cmp
and
add
movb
movaps
adc
test
and
pop
or
movswl
and
mov
aam
dec
xor
or
dec
mov
xor
popa
cmpb
lea
pop
mov
xor
out
sub
mov
jne
dec
std
sbb
adc
inc
stc
adc
push
add
ds
les
loop
xchg
fsubrl
daa
in
pop
adc
cld
or
adc
inc
jb
mov
push
and
mov
dec
xor
and
push
ljmp
sbb
inc
push
xchg
data16
jne
sub
dec
sub
adc
mov
dec
xchg
cmp
inc
int3
cmp
jecxz
test
xchg
jne
or
imul
adc
jmp
or
iret
cmp
dec
cmp
repnz
adc
xchg
rcrl
mov
popa
adc
sbb
decb
es
inc
xor
or
mov
insl
mov
call
push
xchg
add
cmpsl
aam
inc
add
aaa
inc
adc
mov
pop
pop
aad
push
sub
in
lds
xchg
dec
dec
mov
mov
cli
mov
mov
adc
pop
popf
sub
dec
aas
mov
add
sub
mov
or
pop
rolb
pop
cs
inc
push
addr16
sbb
inc
push
ret
add
cmp
xlat
dec
pop
cs
add
sub
jo
cmc
and
addl
xor
push
pop
popa
sub
test
pusha
aaa
mov
ds
adcl
orb
mov
inc
pop
jmp
mov
insb
test
ljmp
pusha
pop
add
xor
mov
clc
cwtl
mov
cwtl
xlat
clc
mov
or
subb
sbb
jmp
add
movsb
push
push
insl
xchg
cmp
les
cmpsb
iret
addr16
mov
sub
and
inc
shl
clc
pop
cwtl
inc
lret
cmpsb
inc
xchg
shlb
inc
and
add
or
test
adc
cmp
in
pop
in
cli
mov
add
test
inc
push
xchg
xchg
xchg
and
mov
mov
shll
into
jns
dec
scas
jae
je
imul
gs
insb
pop
mov
inc
push
jo
add
lidtl
or
imul
push
pop
pop
push
add
sbb
fs
lahf
xchg
pop
sub
rorb
xchg
jno
xchg
jmp
ret
add
or
int3
movsl
adc
imul
cmc
xor
mov
add
hlt
data16
xor
frndint
lds
test
and
xchg
sub
mov
xor
lret
movsl
lods
sub
inc
mov
xor
push
mov
pop
jmp
rcrl
sbb
sbb
fadds
shr
and
or
xchg
in
and
popa
lcall
test
lret
or
jle
pop
xchg
add
xchg
mov
sbb
jmp
xchg
push
negb
frstor
hlt
arpl
cmp
rcrl
pop
cltd
js
cmp
xchg
mov
rcrb
aam
jmp
popa
outsb
or
aaa
pop
add
sub
jns
or
push
or
lea
ror
loop
add
inc
std
clc
test
pop
xor
mov
jg
and
and
addr16
stc
jo
adc
xchg
pop
mov
pop
sub
xorb
xchg
pop
fstl
pop
cmp
jmp
cmpsb
xchg
push
scas
add
mov
imul
and
xor
push
pop
or
inc
sub
inc
and
sbb
outsl
movsb
or
jecxz
rcr
jne
mov
mov
xchg
pop
std
dec
jnp
popf
cmp
sbb
das
test
loopne
out
or
inc
sub
fldl
fyl2xp1
lods
adc
adc
dec
dec
or
add
daa
into
push
adc
xchg
push
xchg
sbb
adc
push
leave
jmp
clc
and
sub
popa
sbb
pop
add
ret
inc
xor
scas
add
js
mov
movsb
and
mov
or
icebp
mov
int3
mov
and
mov
adc
add
repz
pop
sub
lea
push
sub
test
push
push
jmp
dec
cli
jmp
jnp
rep
loop
xor
dec
push
fldl
adc
das
les
push
cmpsb
pop
sbb
mov
sbb
push
add
stc
stos
or
sub
cmc
cmp
adc
sbb
aad
push
cwtl
push
hlt
sbb
xchg
subl
cmpsl
pusha
gs
adc
add
into
cmp
sbb
lcall
pop
inc
or
push
in
ljmp
mov
lods
inc
mov
clc
push
add
cmp
mov
sub
fcmovu
call
mov
daa
scas
movsb
or
xor
or
jb
pop
push
and
adc
xor
daa
pop
xor
cmc
adc
pop
pop
dec
and
sub
or
mov
in
stc
add
lea
jmp
imul
add
fstps
mov
add
jle
repnz
lret
push
push
in
sbb
xchg
pop
and
push
mov
pop
jmp
icebp
jp
fwait
push
addl
sbb
inc
int
cmp
push
add
add
dec
test
cmc
repnz
push
hlt
mov
fdivrs
xlat
test
mov
add
jae
adc
loopne
push
sbb
and
leave
push
test
add
sub
pop
mov
cmp
push
ret
roll
fisttpl
shlb
inc
fs
pop
add
popa
cmp
inc
ror
add
push
pop
movsl
pop
push
ret
fildll
enter
xlat
incl
std
sbb
jnp
xchg
out
xchg
push
fadd
or
sahf
ljmp
pop
dec
add
jo
and
es
add
pusha
and
pop
jo
mov
rcrl
icebp
add
and
stc
mov
test
andb
xlat
shrl
lcall
mov
les
loop
jno
mov
xor
sbb
adcb
popa
and
fadds
inc
mov
pop
roll
cmc
cmp
fmull
mov
add
pop
mov
adc
xchg
subps
rcrl
dec
call
add
nop
test
mov
cli
push
aaa
add
lds
pop
add
adc
lock
or
and
xchg
push
xchg
add
add
inc
inc
inc
icebp
test
sub
iret
subb
mov
sub
pop
mov
add
sub
aad
cld
jmp
es
gs
push
pusha
push
jecxz
ret
push
add
push
inc
fwait
jmp
jl
xchg
adc
and
add
fsts
sub
cmp
pop
pop
adc
dec
lock
sub
add
in
inc
icebp
push
mov
subb
mov
or
call
in
ret
mov
jb
stc
jg
dec
mov
push
addl
push
shlb
pusha
add
and
or
xchg
mov
inc
xor
sti
in
das
push
mov
test
sbb
add
and
movsl
jns
mov
push
sbb
int
xchg
mov
mov
jo
shr
add
test
ds
mov
and
dec
xchg
in
outsb
icebp
dec
and
loop
and
jmp
jmp
mov
cs
gs
testb
cli
push
mov
pop
in
lods
mov
dec
or
sbb
adc
jmp
jge
popl
pop
mov
jnp
adc
cmpsl
rcrb
xchg
adc
shl
xchg
fistl
orb
mov
aas
ret
mov
and
xorb
sub
add
push
jmp
adc
fidivrs
shlb
cwtl
xor
xchg
rorb
and
sub
sub
lea
and
sbb
add
gs
sar
and
mov
pusha
sub
adc
and
test
mov
add
mov
loop
pop
jl
sbb
lock
push
or
icebp
mov
push
push
xchg
push
fsubrl
xor
lahf
es
or
jl
adc
mov
push
sub
mov
nop
jge
addb
pop
dec
pop
test
in
das
adc
fistpll
aam
cmpsl
nop
arpl
es
push
leave
pusha
push
movsb
push
or
push
xchg
pop
lds
shll
popa
push
and
sbb
or
call
js
cmpsb
in
mov
jne
sbb
lcall
outsb
imul
xchg
mov
pop
imul
and
push
and
iret
nop
or
add
lea
enter
gs
pop
mov
add
dec
add
or
in
push
pushf
mov
push
test
nop
jne
jecxz
add
fwait
je
mov
push
add
dec
pushl
inc
and
inc
pop
add
and
dec
dec
movsl
test
sbb
inc
inc
int
test
es
aad
leave
aaa
rolb
inc
mov
add
out
fisubrs
fmuls
adc
sbb
add
out
inc
les
popa
and
pop
pop
aas
mov
hlt
adc
cmp
sbbb
jbe
mov
cmpsb
in
mov
andl
add
fiadds
lods
test
push
and
adc
inc
outsb
and
pop
cltd
adcl
cmp
and
pop
fcomps
gs
ljmp
dec
cmp
mov
adc
push
or
mov
rorl
fdivl
sbb
jmp
adc
adc
or
movb
test
cmc
push
test
cld
pop
lret
adc
sahf
lods
inc
imul
pop
or
jl
daa
and
cmp
mov
lahf
sub
call
xor
xor
cmp
and
sahf
stc
enter
call
call
nop
cmp
mov
pop
jmp
insb
sahf
sub
inc
loope
cmpsl
xchg
push
inc
add
cmp
jno
and
and
sub
cwtl
fisubl
and
sbb
aas
xor
fldl
loopne
mov
sub
or
stc
adc
add
andb
cmpsl
aaa
ret
outsb
push
in
shl
sbb
cmp
sbb
sub
out
iret
lock
push
pop
cli
add
mov
mov
sbb
xchg
push
and
iret
sbb
cmp
and
xor
xor
adc
mov
add
push
mov
mov
outsb
add
mov
test
lock
rcrb
repz
mov
push
or
adc
mov
and
or
lods
sbb
jns
add
lock
inc
dec
push
mov
cmpl
sub
sbb
inc
push
fisttpl
xchg
dec
push
out
sbbb
mov
add
ljmp
push
lret
aas
mov
or
and
push
sbb
lds
add
xor
dec
xchg
inc
pop
sub
add
xchg
mull
cmp
jne,pn
cmpsb
data16
and
push
rorl
fdivs
or
cvtdq2ps
in
int
sbb
js
push
push
mov
insb
leave
push
sub
dec
push
adc
mov
pop
popa
lds
xchg
adc
pushl
mov
or
popf
push
inc
xor
daa
mov
jb
call
sub
dec
rorb
and
adc
lea
sub
jbe
push
sub
fildl
jg
jl
ds
add
xor
add
push
inc
sub
mov
or
movsw
add
scas
inc
pop
or
fs
popa
mov
mov
ret
loopne
test
mov
and
jb
or
ss
jmp
loope
xor
pusha
jg,pt
and
repz
push
in
jo
or
movl
adc
mov
aaa
andb
and
js
mov
fsts
cmpsb
or
dec
mov
mov
dec
cmp
outsl
jp
add
scas
jo,pt
in
and
stc
dec
xor
outsb
insb
add
int
jne
aaa
sbb
pop
movl
aaa
add
fwait
lret
loope
cli
xchg
popl
and
out
sbb
mov
add
imull
sub
push
and
imul
xlat
push
dec
add
mov
mov
pusha
in
pop
into
or
loopne
push
jne
sub
push
mov
mov
push
dec
jnp
repnz
cld
push
add
mov
test
push
rcr
mov
stos
adc
and
and
dec
adc
add
dec
ja
lock
cmovl
push
add
push
in
adc
lsl
sbb
nop
and
pop
sub
or
or
int
or
mov
and
or
or
imul
mov
sub
push
push
adc
add
and
mov
add
out
pop
mov
sahf
cmp
mov
insb
movsb
jns
xchg
lret
insl
mov
repnz
popa
xchg
mov
inc
mov
jo
push
mov
into
int
sbb
add
sub
leave
in
and
fs
push
popa
outsb
jge
mov
xchg
imul
dec
add
es
jo
and
out
add
jbe
or
dec
hlt
das
xor
adc
addl
dec
or
in
mov
inc
jo
mov
loop
flds
cmp
push
sub
into
ss
cmp
jg
add
mov
sbb
sub
push
cmc
test
inc
add
xchg
daa
imul
sub
shlb
in
fcoml
aas
push
mov
push
cld
orb
insl
fs
popf
mov
test
push
pop
stos
xor
xor
rol
testl
in
push
pushf
adc
push
mov
push
shrl
mov
sbb
cmp
or
push
inc
sub
or
mov
xchg
pop
add
popa
mov
pop
aam
sbb
add
xchg
cmp
cmp
mov
mov
sbb
cwtl
add
mov
inc
xchg
inc
xor
jmp
push
data16
xchg
shlb
adc
xor
enter
mov
pop
mov
mov
jns
push
lods
sbb
or
or
js
push
stc
inc
pop
add
xchg
push
or
fdivs
cld
adc
sub
mov
and
loop
xor
shll
xchg
es
dec
and
push
xchg
ret
jmp
xlat
push
xor
xor
mov
add
addb
mov
pop
jge
xchg
je
inc
inc
js
gs
pop
imul
popa
jb
popa
inc
or
jae
sub
arpl
icebp
aad
mul
jae
data16
addr16
fs
jbe
insb
xlat
jo
outsl
jae
ja
xor
sbb
sbb
outsb
addr16
cmp
push
push
jns
jne
or
sub
xorb
inc
push
push
dec
sub
jmp
js
inc
repnz
cmpsb
jnp
jo
or
imul
sbb
adc
into
push
pusha
inc
call
test
and
xchg
outsl
cli
sbb
sbb
add
sbb
push
mov
sbb
ret
dec
pushf
pextrw
sbb
vmread
add
ss
add
insl
and
add
mov
xor
ret
cmc
enter
out
cs
inc
daa
and
loope
les
push
jmp
cmp
and
mov
popa
dec
gs
push
and
les
add
xor
and
enter
sbb
sti
ret
inc
xrelease
inc
testl
sub
inc
sbb
adc
add
in
and
xor
sub
aam
cmp
xor
inc
push
adc
dec
cs
mov
adc
push
test
fsubp
adc
repnz
adc
adc
add
or
int
pop
pop
divb
adc
jbe
nop
add
negl
repz
xor
sbb
or
mov
jle
inc
adc
pop
pop
test
repnz
sub
cmp
push
and
xchg
sbb
xlat
pop
shr
push
pop
jmp
mov
xor
sbb
add
out
insl
pusha
enter
imulb
ret
jmp
mov
cmp
in
out
call
mov
outsb
cmp
jbe
fsub
and
iret
subb
mov
and
dec
or
mov
jle
jbe
inc
mov
sbb
fisttpl
pop
addr16
pop
pop
cmp
iret
mov
jo
push
or
pop
fiadds
nop
pop
adcl
sbb
roll
mov
add
in
je
sbb
sub
loopne
mov
and
ret
test
dec
or
mov
lea
cwtl
dec
lds
and
and
lret
mov
cmpb
or
adc
jbe
add
lods
mov
add
xor
rorl
stos
or
inc
add
in
and
fstl
adc
mov
push
sarl
shr
and
lea
pop
mov
xor
mov
fcom
roll
inc
aaa
mov
rorl
xchg
xchg
call
pop
pop
mov
loop
lods
ljmp
out
fildll
add
sbb
aam
nop
test
lcall
movsl
and
and
aas
das
xor
pop
or
inc
fwait
mov
dec
adc
cmp
inc
mov
sub
jmp
nop
jbe
jb
add
mov
popf
xchg
int3
addl
add
testl
add
gs
sub
sub
push
push
push
or
sub
dec
or
addr16
mov
cwtl
xor
adc
fadd
ret
or
mov
pop
pop
inc
aaa
add
fwait
pop
and
jb
sub
or
jne
adc
les
sub
add
gs
jmp
pop
jns
ffreep
sarl
jae
shrb
orb
inc
in
add
sbb
pusha
cmc
add
pop
popa
push
test
xchg
roll
inc
xor
xor
or
popf
add
push
daa
and
cmp
add
sbb
mov
in
mov
or
add
aam
loope
jle
jne
add
mov
iret
pop
and
sbb
adc
jne
aad
push
nop
fsts
stc
jo
pop
mov
jb
jge
popl
push
arpl
xchg
push
nop
repnz
pop
in
and
fucompp
adc
cmp
in
cmp
fwait
imul
popa
sub
ja
xor
cmp
lock
cmp
cli
sub
mov
sbb
mov
pop
inc
fs
insl
and
xchg
scas
inc
mov
testl
pop
push
sbb
roll
mov
div
cmp
and
cltd
lea
fs
daa
pusha
push
stos
paddsw
inc
int3
sahf
or
and
outsl
jne
add
cs
jbe
in
mov
dec
pusha
dec
add
mov
mov
lcall
jmp
js
shlb
push
int3
mov
jnp
outsl
ret
loopne
sbb
wrmsr
push
xor
dec
clc
stos
adc
xchg
mov
sbb
lahf
mov
shlb
push
hlt
arpl
or
and
or
mov
jbe
ficompl
dec
adc
test
add
fwait
dec
fidivs
sbbl
add
dec
inc
sbb
jno
push
test
add
shrb
or
pushf
and
and
pop
xchg
ret
test
sbb
cs
cltd
xchg
sub
pop
pop
and
scas
pop
mov
mov
mov
push
pop
movsl
sbb
xor
pop
add
je
imul
fs
adc
and
sarl
mov
sarb
adc
add
pop
push
sbb
mov
add
push
test
lds
js
dec
loop
andb
outsb
mov
add
or
mov
or
mov
shll
jo
mov
mov
add
pop
ljmp
sub
push
pop
jp
and
or
push
xorps
mov
mov
push
add
dec
mov
or
jns
inc
fsub
mov
jne
in
dec
bound
cs
add
mov
jg
push
movsb
mov
add
das
push
dec
out
add
outsb
xchg
daa
mov
push
mov
mov
sbb
sbb
cmp
sub
ds
push
pop
in
rorb
ret
xchg
mov
pop
out
and
clc
adc
push
pop
mov
xchg
xor
test
push
push
xchg
sub
outsl
add
pop
in
fadds
pop
roll
sar
shrb
jle
jae
ret
loop
fisttpll
dec
lods
add
stos
popa
cmp
xchg
stos
cmpsb
add
imul
jecxz
add
add
imul
sbb
jno
and
adc
mov
jg
enter
add
fsubl
inc
jmp
mov
adc
push
shll
and
adcb
push
in
scas
and
sbb
pushf
outsb
movsb
test
xor
cmpsb
adc
mov
ret
loopne
or
and
out
pushw
push
adc
jp
movhlps
cwtl
call
add
pop
out
fdiv
les
test
pop
cwtl
popl
xor
idiv
xchg
sbb
xor
adc
and
xchg
jne
lock
adc
sbb
jb
mov
push
imul
iret
imul
ret
push
or
lock
data16
mov
mov
sti
and
mov
scas
sub
jne
sbb
mov
or
in
jbe
inc
inc
sub
pushf
mov
push
fsubs
mov
and
push
ljmp
xchg
clc
cmp
jo
clc
xorb
fcomps
mov
pop
jmp
add
mov
cwtl
xor
fisubl
cmp
xor
xlat
sbb
jle
mov
aad
add
mov
dec
test
mov
nop
arpl
push
mov
inc
mov
push
call
in
arpl
mov
mov
pop
stc
in
in
ds
and
int3
or
das
mov
pop
pop
mov
jge
add
pop
cmp
sbb
mov
pop
lret
adc
shll
loopne
mov
pushf
pop
pop
popf
sbb
rolb
mov
pop
inc
pop
orb
cli
dec
rclb
shlb
pop
es
lock
aad
test
add
fs
cli
cs
jb
add
mov
insb
jg
inc
xchg
or
mov
sub
leave
xor
pop
pop
push
pop
adc
or
push
rcr
jmp
aas
aam
pusha
stos
sub
push
pop
nop
inc
jl
xor
jg
jl
cmp
jne
sbb
push
mov
jbe
xchg
xor
xor
incl
popa
inc
mov
adc
xchg
mov
imul
mov
jb
xor
mov
movswl
and
mov
mov
pmuludq
cltd
pop
mov
add
push
int3
arpl
jb
inc
fs
or
test
cmp
or
js
jne
daa
sarl
mov
dec
outsl
xor
inc
mov
clc
fsubrs
jmp
cmp
loope
and
subl
imulb
dec
test
jge
inc
lods
clc
add
mov
adc
add
cs
cwtl
out
mov
pop
mov
aaa
jmp
jp
adcb
or
outsb
inc
add
and
subb
in
fistpll
mov
fwait
ret
insl
add
cld
or
and
add
mov
popa
cmp
xor
push
stc
mov
cmp
add
pop
mov
mov
pop
cld
inc
jg
les
cmp
shll
adc
cmp
mov
inc
jg
add
mov
add
pusha
mov
popf
orl
ret
jbe
push
xchg
add
pop
xor
mov
inc
and
mov
mov
mov
push
push
lods
add
mov
dec
jmp
insb
int3
sbb
add
xchg
add
stos
xor
int3
sbb
je
orb
mov
outsl
inc
data16
jae
jge
add
adc
xchg
shl
push
cmpsl
push
push
or
add
lods
data16
out
out
dec
sbb
stc
and
add
lcall
clc
int3
sub
movsl
push
xor
adc
pop
jl
adc
fdiv
jecxz
mov
in
lret
add
pop
add
push
mov
fs
in
jg
addb
sub
mov
or
popf
sub
xchg
fbstp
jno
adc
pop
aas
cmp
faddp
jl
dec
ljmp
mov
lock
push
xchg
add
pusha
lods
fdiv
hlt
scas
xlat
add
sub
adc
out
xor
loop
js
stos
ror
aaa
lcall
sbb
stos
add
nop
orl
xor
mov
or
out
jl
inc
push
test
mov
add
enter
lock
ja
daa
into
sub
sbb
cmpsl
std
rcrb
aas
imul
fyl2x
mov
leave
add
push
das
jmp
xchg
lods
ret
dec
mov
add
loop
or
daa
or
or
mov
add
mov
je
add
and
adc
scas
dec
add
in
inc
filds
pop
hlt
insl
cmp
dec
add
lods
clc
adc
shlb
test
xor
push
jle
pop
outsb
cli
loopne
in
out
in
jo
add
lods
call
arpl
rcrl
add
add
sahf
lret
jns
add
js
pop
jne
jb
repz
mov
jl
or
daa
int3
or
adc
sub
mov
imul
mov
jo
and
push
xchg
lahf
cmp
mov
mov
cmpsl
jnp
push
pop
sti
jle
dec
stc
out
jnp
add
insb
xchg
sbb
push
or
iret
ja
js
sbb
nop
mov
sub
call
sarb
sbb
push
mov
mov
add
pushf
mov
jle
sbb
dec
xchg
in
ficompl
mov
xor
xchg
inc
sbb
xor
popa
adcb
gs
xor
sbb
push
lds
mov
xchg
sub
jge
leave
jne
lea
adc
cmc
add
dec
test
inc
mov
fcmove
lods
or
xchg
stos
arpl
or
addb
repnz
and
pop
push
addr16
mov
je
mov
and
iret
adc
jb
gs
mov
add
or
mov
ja
dec
jnp
xchg
dec
ror
jecxz
fdivrl
xchg
xor
push
in
hlt
pusha
arpl
inc
dec
add
stos
xlat
mov
and
xchg
ret
sahf
ljmp
pop
or
sub
roll
jo
xor
and
or
add
das
imul
ds
or
imul
jmp
adc
aam
xchg
sarb
fisubrl
rol
loopne
add
pop
xchg
add
lods
loopne
add
xchg
cmp
rcl
inc
pop
addl
xor
lcall
and
xlat
inc
outsl
mov
lret
jl
cs
rcrb
fstpl
dec
ficompl
add
nop
aas
lcall
add
mov
pop
cmc
and
xor
push
push
sub
lahf
js
cwtl
add
sub
lcall
push
notb
sbb
flds
push
mov
fstl
imul
mov
mov
filds
sti
add
icebp
cmp
and
popa
clc
add
adc
or
pop
xchg
filds
mov
inc
js
enter
outsb
mov
in
add
mov
test
push
repnz
sbb
out
inc
add
stos
lret
mov
int
in
jg
insl
inc
mov
push
jp
ds
flds
ficoms
jmp
shl
inc
jnp
dec
xchg
add
js
xchg
and
ret
shll
add
insl
mov
repz
jbe
xor
loop
sbb
xchg
dec
subl
mov
movsb
add
outsb
or
or
imulb
pop
xchg
add
inc
sbbb
cmp
dec
test
jle
add
loopne
cmpsl
inc
aam
pop
push
jae
add
es
pop
mov
insb
int
push
mov
cwtl
inc
add
js
jg
xchg
xor
sbb
and
jl
mov
mov
adc
pop
pop
test
xlat
push
push
add
push
add
addr16
add
aad
cmpsl
push
jo
loopne
or
cmpsb
lcall
mov
mov
jge
pop
mov
jge
sbb
inc
in
mov
sub
mov
rolb
add
push
push
push
ds
adc
js
mov
sub
cmp
push
xchg
mov
scas
mov
mov
cmp
and
push
scas
mov
add
or
movsb
and
adc
jb
jmp
xor
xor
call
arpl
push
bound
xor
sbb
push
sub
push
mov
add
shl
or
lea
clc
pusha
fs
add
adc
je
cmpsb
jle
add
test
shlb
push
dec
push
scas
dec
mov
cs
ficompl
test
pop
test
repnz
add
jle
mov
mov
cltd
mov
push
add
popf
jg
push
xchg
pop
das
mov
dec
dec
test
lods
adc
loop
and
jg
nop
and
add
xor
cmc
jp
pusha
pop
js
mov
xor
inc
and
stos
out
mov
orl
clc
fiaddl
shlb
sub
mov
stc
jg
enter
and
inc
in
lret
out
xchg
add
fcmovnb
adc
cmp
adc
push
dec
sete
xchg
in
ss
mov
pop
out
scas
stos
fdiv
inc
jne
cmp
testl
lret
sbb
mov
push
test
mov
loopne
push
push
test
int3
push
shrd
mov
mov
aas
cmp
adc
in
filds
add
mov
clc
xor
jmp
or
sbb
pusha
pop
mov
add
scas
les
lods
imul
aam
push
into
push
push
xchg
outsb
addr16
shr
movswl
rorb
mul
xor
adc
mov
jbe
aam
push
pop
test
jns
dec
lahf
add
xor
dec
xor
inc
ss
or
xor
sbb
xor
jo
add
mov
pop
pop
inc
out
mov
sbb
cmpsl
inc
mov
xchg
shl
xor
sbb
push
add
insl
and
mov
xchg
sbb
je
addr16
sub
enter
test
cmpsb
add
lds
fs
xchg
cmp
notl
add
cmp
or
mov
xor
test
add
xor
mov
test
adc
stos
and
push
bound
clc
ss
stc
fsubs
add
in
sahf
dec
jo
or
lret
sbb
inc
in
or
adc
stos
data16
xchg
mov
adc
xchg
fadds
aam
lods
jnp
mov
jo
mov
push
jns
fcmovu
pop
testl
add
dec
push
lods
adc
mov
adc
cmp
add
xor
push
loope
leave
notb
je
imul
in
jb
les
sub
loope
rclb
and
gs
pusha
mov
inc
lock
add
shll
mov
scas
xchg
add
xor
sbb
pop
inc
jmp
mov
add
cmc
sbb
clc
sarb
imul
mov
fistpl
into
dec
add
jge
xor
inc
or
mov
pop
mov
jp
popa
push
fmul
out
mov
push
dec
outsl
push
hlt
aas
js
andl
cmc
xchg
ljmp
jmp
aas
addb
sub
mov
pop
outsl
cld
scas
jb
xchg
bound
aaa
add
testl
and
jle
les
daa
xchg
push
add
cmp
repnz
clc
push
popf
sbb
in
frstor
in
fcomps
xor
mov
inc
dec
sbbb
rorb
and
xchg
pusha
into
addl
add
fsts
mov
pop
int3
loope
mov
bound
insb
lock
add
ret
add
mov
sub
push
sahf
and
js
fwait
dec
xchg
dec
cs
sub
lret
pop
pop
mov
mov
nop
dec
out
andb
scas
ret
repnz
test
push
fcom
lds
push
add
sub
pop
dec
xchg
pop
and
sbb
imul
push
pop
pusha
add
jl
dec
in
jo
and
sti
push
or
rcr
mov
rcrl
adc
xor
jo
cmp
add
test
push
mov
dec
test
mov
adc
push
int
stos
aad
cwtl
add
lret
mov
xor
or
add
or
aad
and
cmp
call
sub
ds
fdiv
out
or
or
or
repz
sub
psrad
jmp
aad
jg
cmp
pop
add
mov
xchg
ljmp
cwtl
add
inc
test
js
clc
adc
and
cld
ret
jbe
stos
add
faddl
inc
loopne
nop
mov
add
add
xor
jne
add
xchg
cmp
push
dec
pop
pusha
and
push
pop
add
ret
mov
pop
xor
inc
outsb
sbb
adc
sbb
xchg
xor
fwait
imul
sub
add
inc
inc
jg
mov
pop
testb
out
ret
add
xchg
jbe
inc
cs
jnp
in
add
aam
mov
lods
or
call
jbe
cli
sbb
aad
pop
jbe
cs
adc
push
xchg
xor
add
mov
in
rcrb
lock
add
movsl
jae
jno
subl
roll
inc
sub
dec
jp
loope
aas
orb
add
add
repnz
cmp
or
in
mov
jno
add
les
pop
pop
push
dec
add
xor
inc
jns
add
lcall
sbb
lret
sbb
dec
mov
daa
rclb
mov
pop
and
or
xlat
cld
daa
add
je
out
jbe
mov
add
stos
mov
enter
mov
add
add
test
mov
and
lock
js
jmp
fs
add
outsl
pop
mov
mov
movsb
xchg
sub
jg
inc
pop
stos
int3
cld
and
out
add
sub
dec
add
test
pop
jmp
pop
add
rolb
out
and
sbb
add
or
jle
fbld
sbb
bound
jmp
cld
add
in
sahf
movsl
pop
jecxz
mov
add
insl
sub
xchg
adc
mov
xchg
or
add
ljmp
aaa
aas
pop
pushf
dec
and
test
jnp
adcb
mov
cmp
les
pushf
mov
cwtl
mov
mov
push
cmpsl
sub
push
mov
and
int3
shl
outsb
pop
add
push
and
jnp
or
out
jp
add
dec
clc
testl
dec
adc
sub
nop
lock
repz
mov
into
sahf
add
jmp
subl
lret
mov
dec
inc
addb
push
cmp
iret
jne
popf
int3
add
std
sub
pop
shll
jp
add
imul
xor
jo
inc
or
mov
add
xchg
and
cmp
pop
push
mov
xchg
pop
adc
mov
or
jbe
mov
push
cmp
add
lret
mov
pop
sbb
sbb
rcrl
test
xor
pusha
enter
lahf
jl
mov
clc
pop
bound
das
gs
jno
loopne
add
popl
mov
jecxz
rolb
sbb
out
rcr
and
test
andb
in
mov
fdivrl
cwtl
and
mov
pop
outsb
orb
sbb
cmpsb
add
and
cmp
shlb
add
inc
imul
push
cmc
and
jp
lock
ret
add
or
dec
sahf
scas
lcall
shlb
fnsave
xor
dec
add
xchg
cs
cld
negb
pop
add
sub
into
jl
stos
sub
push
outsl
push
sub
stos
aam
push
mov
rcrb
sub
push
daa
add
sarl
mov
inc
jecxz
xchg
xchg
int3
std
test
add
movsl
inc
jmp
xor
inc
jp
add
push
or
push
adcb
dec
cmp
add
xchg
loop
add
in
scas
inc
gs
add
lret
xchg
sub
xlat
push
es
fcmovnbe
enter
or
push
add
sbb
jp
pop
mov
rcr
sub
pop
mov
adc
insb
ja
rcr
push
filds
cli
sbb
add
mov
sbb
push
in
insb
addr16
push
push
out
add
adc
adc
sbb
pcmpgtd
push
popa
ret
xchg
push
in
lock
daa
loope
andb
dec
xchg
mov
add
lret
ret
or
psllq
sub
stc
js
and
pop
jnp
push
push
hlt
and
or
lcall
loopne
andb
dec
pusha
mov
adc
add
gs
sub
pop
or
jne
xchg
mov
rolb
push
mov
fs
lds
pop
xchg
iret
add
sub
pop
mov
sub
movsl
mov
insb
test
sub
add
mov
lock
xlat
mov
add
sbb
mov
add
mov
or
sbb
test
sbb
pop
dec
mov
sti
loope
mov
fiadds
out
ss
movsb
sbb
es
shl
xchg
jo
xchg
popa
mov
add
pop
cmpsl
ret
or
addb
mov
jne
xchg
cli
or
push
out
pusha
xor
sub
xor
push
outsl
inc
shrb
pushf
imul
jp
add
push
xchg
mov
push
and
mov
andb
in
sti
mov
push
dec
add
add
push
lret
shrb
xchg
push
pop
jp
add
shl
xor
mov
inc
pop
outsl
inc
push
loopne
movsb
les
mov
aad
lahf
pop
daa
lret
mov
fisttpl
into
jle
pop
imul
daa
xchg
pop
in
inc
mov
jecxz
mov
add
jg
adc
in
stos
jbe
in
stc
xor
test
mov
xor
jp
rcl
cmp
push
pop
sub
add
push
pushf
imul
pop
ljmp
imul
inc
add
pop
sarb
fcomps
and
subb
adc
push
sub
push
add
cmp
pop
aas
pop
push
add
sar
enter
push
arpl
sub
dec
jmp
jne
and
stos
lcall
pop
push
lea
mov
jmp
add
dec
jle
dec
and
adc
es
or
pop
xor
mov
pop
xor
insl
push
sbb
inc
adc
clc
lahf
sbb
xchg
jae
cmp
push
call
add
push
cmp
icebp
sub
aaa
xchg
add
pop
or
sbb
imul
add
into
lods
cmp
add
stos
cs
jle
jmp
clc
mov
out
dec
jne
std
or
int3
in
add
cmc
xor
pushf
adc
shl
mov
add
dec
dec
add
xor
mov
ret
cli
in
in
adc
pop
inc
jmp
test
call
test
and
or
inc
in
adc
mov
and
jmp
aad
nop
lods
shll
push
or
mov
adc
adc
adc
adc
and
push
test
mov
cltd
inc
addl
mov
and
and
and
sbb
arpl
mov
movl
jns
sti
mov
ja
shrb
icebp
push
lds
dec
fsubp
xchg
push
push
pusha
leave
sbb
add
and
mov
xor
cwtl
movsl
jmp
stos
loop
add
orl
lods
xor
in
add
or
test
add
xlat
int
aas
cmpsl
adc
mov
leave
cld
jbe
mov
call
push
lock
dec
gs
bound
xor
xlat
pop
jecxz
ljmp
leave
add
mov
mov
add
push
cmp
lret
sti
shrb
sarl
or
dec
mov
cmp
outsb
loop
and
or
cmp
push
pop
xor
nop
call
hlt
mov
and
shr
cwtl
push
mov
imul
xorb
jne
add
aas
imul
popf
jns
out
xchg
jmp
outsl
clc
ss
push
dec
int
and
jb
sub
add
cmp
push
aad
or
cmpsb
mov
mov
mov
into
mov
xlat
mov
pushf
out
imul
pop
xor
stc
adc
sub
orb
cs
pop
mov
sti
and
xchg
pop
and
nop
lcall
fldcw
mov
call
mov
cmp
fdivl
cmpsb
add
ja
jmp
int
xchg
pop
ds
pusha
lds
add
sub
cmpb
add
popa
add
sub
push
bound
xchg
out
jmp
in
mov
ljmp
inc
push
xchg
clc
int3
adc
insl
cmp
add
out
xchg
lock
mov
cmp
add
movsl
sub
pop
xchg
xchg
in
cwtl
jno
int
in
xor
sub
cmc
add
sti
cmp
xchg
mov
push
add
cmpsb
adc
pop
add
stos
dec
add
inc
mov
add
add
jne
add
leave
sub
mov
sbb
outsb
xor
sbb
dec
faddl
pusha
mov
inc
fisubl
orl
add
rep
pop
sbb
add
mov
push
loopne
cmpl
sbb
lea
insl
jecxz
test
jle
enter
aam
sarl
mov
out
arpl
add
in
fdivp
enter
and
inc
push
rcrb
dec
lcall
add
iret
inc
fiadds
sbb
pop
int
repnz
addb
or
inc
and
add
shlb
xchg
ud1
jno
push
ret
sbb
sbb
lret
jl
adc
add
add
mov
push
sub
fwait
xchg
pusha
ljmp
aam
subl
add
pop
test
xor
icebp
add
push
sub
xchg
mov
ss
testl
pushf
pop
pop
mov
mov
fistps
jecxz
push
xchg
or
sub
in
pop
pcmpeqw
mov
cli
push
sbb
push
inc
inc
pop
dec
xchg
mov
iret
adcb
sbb
mov
xor
adc
in
fidivrs
stc
pushf
sbb
push
imul
inc
add
mov
sbb
nop
or
and
pushf
popf
les
ja
add
and
pop
sub
add
jg
lock
add
sub
mov
fsubl
jb
and
xor
ficomps
ret
testb
mov
add
or
mov
jo
or
cmp
shll
lahf
inc
aad
mov
mov
add
repnz
push
roll
movsl
add
lds
ret
dec
xchg
add
jo
inc
push
into
mov
push
les
bswap
and
jmp
bound
adc
mov
sub
pop
inc
xchg
sti
in
dec
adc
add
pop
mov
pop
adc
incb
bound
push
sbb
jl
add
jne
std
pop
add
add
mov
iret
jge
aaa
xor
dec
adc
daa
stos
mov
mov
mov
pop
stc
test
ret
or
iret
push
dec
mov
add
pushf
lea
add
cmpsl
adc
add
notb
pop
jmp
cld
mov
inc
jp
ljmp
pop
add
test
jo
lcall
cli
insb
fmuls
sbb
adcb
add
or
or
cs
out
cwtl
push
dec
and
aaa
test
sbb
push
sbbb
cmp
loopne
xchg
dec
jmp
jb
jbe
xlat
add
rcll
pop
scas
sbb
add
cmp
add
add
mov
test
mov
xor
fcmovnbe
add
mov
fistps
push
inc
rclb
rclb
add
lock
add
adc
scas
inc
sub
mov
pop
mov
jmp
fs
stc
cmpsl
add
add
jns
shr
add
repnz
lods
or
mov
xchg
xchg
push
xchg
add
out
cli
inc
inc
adc
mov
push
shl
add
fwait
push
and
test
mov
bound
popa
push
jp
cmc
push
cmp
mov
xchg
cli
stos
iret
lret
scas
add
sbb
inc
add
imul
idivl
push
push
js
sub
pusha
lock
and
add
nop
xchg
loope
aad
xor
sub
inc
add
fbld
movb
add
add
les
fcoms
mov
xor
test
orl
in
jnp
and
add
push
pop
pushf
shll
lahf
pop
das
idivb
sbb
ljmp
rorb
je
jne
cld
mov
bound
aas
mov
add
movsb
rcll
cli
jbe
add
mov
lea
inc
cmp
ret
pop
mov
out
adc
rclb
add
mov
add
adc
call
dec
lods
mov
adc
call
add
pop
addr16
and
cmp
pop
xchg
xor
add
cltd
adc
movsl
cmp
add
dec
aam
xchg
adc
add
cmp
dec
daa
pop
adc
add
mov
push
in
and
mov
andl
push
lds
jmp
mov
mov
cmc
mov
mov
lds
push
dec
add
aaa
mov
or
loope
in
and
dec
xchg
xorl
sbb
pop
leave
mov
mov
mov
daa
add
rorb
add
icebp
sbb
pop
je
xor
cmp
pop
xchg
les
ss
add
lret
hlt
and
sub
adc
cmp
jb
dec
sbb
jmp
fdiv
jecxz
cmpb
aas
imul
pop
arpl
add
and
pop
js
dec
cmp
aas
addl
ss
or
or
daa
stc
in
or
out
xor
in
shrl
loopne
inc
hlt
iret
add
pop
out
jle
xor
pop
movsb
mov
cmc
daa
mov
sar
add
adc
jge
sub
sub
int3
shlb
cmp
fs
div
aam
das
dec
pop
dec
cmp
nop
push
push
mov
push
mov
mov
insb
adc
add
pop
or
int3
xchg
push
lds
stc
and
or
push
sbb
ficompl
jmp
popf
enter
mov
jle
roll
cmp
xor
and
mov
mov
in
lods
imul
pop
xchg
mov
sbb
mov
repnz
inc
and
cmpb
stos
pop
pop
push
stos
je
rolb
mov
add
ss
inc
add
and
loopne
or
je
ret
mov
fimuls
cwtl
jle
pop
and
dec
loopne
lds
das
cmp
sub
bound
mov
inc
jns
outsb
add
clc
inc
mov
adc
es
pop
stos
dec
inc
dec
mov
dec
jg
clc
xlat
mov
and
or
xorl
push
test
and
mov
sub
mov
shll
xchg
les
add
push
lcall
xchg
xor
cld
jmp
sti
pop
add
xchg
xlat
scas
cmp
cmp
adc
pop
pusha
adc
jp
and
sub
add
mov
mov
mov
dec
cli
sarb
outsb
add
dec
andb
incl
inc
arpl
in
sub
icebp
sub
rcrb
divl
sbb
dec
dec
nop
pop
andb
out
call
dec
add
arpl
push
pop
mov
mov
jno
outsl
add
inc
xchg
xchg
in
fadds
or
and
jnp
aam
sbb
mov
out
cwtl
test
sub
push
daa
add
mov
test
push
pop
imul
pushf
outsl
adc
test
sbb
stos
xor
das
fstpt
shrb
roll
cli
xor
jne,pn
cld
xchg
add
jmp
pop
std
dec
insb
int3
sub
adc
add
cmpsl
repnz
js
mov
add
bound
xlat
loope
fldl
leave
add
push
cld
in
rorb
mov
mov
out
roll
shlb
fcomps
inc
dec
or
out
dec
add
out
iret
leave
or
cmp
cmp
loope
cmp
pop
filds
add
sbb
lds
out
add
mov
shr
push
cmp
aaa
addr16
dec
pop
cmp
add
adc
cmp
jmp
jnp
mov
add
enter
js
lahf
or
mov
jo
adc
mov
jae
cwtl
fwait
int3
xor
mov
daa
xchg
lds
push
add
pop
arpl
pusha
or
stc
add
out
rclb
xchg
incb
adc
pusha
inc
sub
fcoml
ret
das
sbbl
jnp
or
daa
pop
jecxz
xor
jmp
addr16
lcall
adc
scas
dec
sbbb
cld
sub
push
inc
jnp
adc
call
rolb
lcall
pusha
add
ljmp
xor
mov
add
inc
mov
inc
cs
cmp
add
dec
inc
popl
xchg
sbb
dec
mov
push
inc
inc
fmuls
mov
lods
orb
push
sub
adc
add
test
and
jo
add
add
test
xchg
jno
fcmovnbe
add
lds
xor
js
ljmp
jl
les
push
fiadds
adc
push
rorl
loopne
out
xchg
inc
enter
push
jecxz
xchg
loop
push
sub
mov
push
lods
push
mov
mov
adc
nop
dec
add
mov
xchg
shlb
add
jo
jmp
dec
mov
pop
add
xor
add
add
jo
xor
data16
icebp
mov
pusha
mov
sub
push
xchg
and
add
cltd
adc
add
inc
jns
insl
pop
jp
out
mov
and
xchg
add
pop
push
cmp
cmp
pop
mov
cltd
testb
mov
cmp
add
popa
fisttpll
jo
cmp
xchg
rcrb
mov
lea
ljmp
dec
frstor
imul
sahf
pushf
pop
sbb
dec
daa
in
mov
decl
inc
scas
fcoms
subb
lcall
dec
test
sub
loop
add
pop
dec
pop
adc
mov
push
out
fs
sub
and
cmp
pop
fnstcw
mov
sub
out
lahf
cmp
add
out
add
jge
fiadds
out
or
lret
movsb
mov
jns
pop
test
add
jno
or
xchg
pop
test
jae
push
inc
push
mov
push
inc
adc
mov
clc
and
xchg
add
cmp
mov
pop
ds
test
data16
xor
jecxz
popa
icebp
js
mov
add
jle
push
insl
fwait
shll
jae
inc
arpl
inc
dec
add
cmpsl
orb
dec
pop
out
insl
imul
jmp
rcrb
add
jg
inc
mov
scas
clc
jb
mov
add
mov
sbbl
adc
stos
int3
cs
add
popa
sbb
cmpsl
testb
push
add
and
cmp
add
inc
jmp
repz
ljmp
rcrl
lods
jecxz
stos
imul
aam
sbb
xchg
loopne
cwtl
or
insb
xchg
das
sub
and
mov
stos
add
sbbb
inc
addl
push
pop
pop
cmpsb
jb
cmp
scas
add
sbb
das
add
cmp
incl
add
decb
pop
mov
and
das
dec
pop
fdivs
dec
jmp
cwtl
hlt
mov
pop
and
jb,pt
es
pop
jnp
pop
in
lret
mov
add
jecxz
jle
or
fsts
pusha
cs
aad
adc
lret
xchg
lods
shlb
dec
daa
pop
add
mov
les
adc
rorl
fisubrs
push
sub
add
add
mov
add
pop
cmp
mov
xadd
and
mov
outsb
mov
or
pushf
add
fadds
inc
lahf
mov
xor
cmpb
pop
push
or
adc
loopne
push
inc
mov
sbbl
cmp
int
mov
mov
add
pushf
jae
enter
int3
add
loopne
inc
ds
cmp
ljmp
ljmp
inc
dec
testl
add
out
and
es
mov
sbb
push
testb
popf
mov
movsb
cmpb
sub
add
movb
out
cs
cwtl
in
xor
inc
test
mov
scas
or
push
adc
add
mov
add
outsl
ss
adc
mov
jo
je
dec
pop
adc
push
cmp
push
inc
and
add
jne
xchg
inc
push
cmp
popl
sbb
outsb
sbb
inc
mov
frstor
bound
inc
add
xchg
cmpsb
shrl
xor
xor
test
add
out
test
or
jmp
cld
mov
out
mov
jp
xchg
fdivl
jl
cmpsl
or
push
add
insb
out
sbb
add
sahf
push
mov
push
sbb
int3
adc
sar
sub
inc
pusha
xorb
dec
push
pop
push
jb
xchg
and
xchg
punpcklbw
jo
cmc
adc
add
cmp
ja
add
add
pushf
add
push
or
pop
outsl
inc
lds
push
jp
add
adc
xorb
cmp
mov
mov
add
lret
inc
jecxz
movl
jae
push
fdivrs
mov
jns
notl
add
xor
sarl
lahf
movb
jo
add
sbb
and
push
jo
sbb
xchg
dec
fwait
and
incl
add
addr16
pop
cmp
mov
les
add
enter
jl
repz
dec
lock
adc
dec
push
arpl
call
enter
mull
or
dec
mov
add
mov
add
add
xchg
sbb
inc
dec
stc
shll
add
int
add
scas
and
inc
mov
push
pusha
xor
add
icebp
jbe
je
sbb
and
pop
xor
push
push
inc
mov
cmp
and
inc
inc
addb
inc
add
mov
xchg
jp
jo
mov
xchg
mov
sub
ljmp
clc
sub
mov
push
dec
testb
jge
sub
js
push
pop
dec
add
push
sbb
movsb
pop
fimull
sub
and
sbb
movb
stc
cli
mov
es
mov
in
jmp
dec
pop
dec
cmc
add
or
and
repnz
adc
in
adcb
das
iret
mov
pop
xor
and
mov
or
mov
add
cmp
lock
add
lock
inc
xor
jns
scas
sbb
add
mov
addr16
push
loopne
and
pop
pop
jmp
cmp
imul
clc
xor
hlt
out
inc
add
pop
sbb
inc
push
jno
adc
dec
fnstsw
cld
in
add
fisubrl
lret
roll
clc
std
sbb
imul
insl
in
inc
je
in
jle
push
push
xchg
xchg
lock
cmp
or
aas
jne
jl
adc
push
call
mov
in
subl
or
add
push
push
mov
xor
lds
sub
add
outsb
stos
push
mov
lea
lock
stc
paddsb
pop
stos
push
jno
rcr
inc
movsb
ficoms
add
adc
lock
add
or
insb
cmp
pop
int
ret
add
push
inc
push
cwtl
test
add
test
mov
add
clc
pop
mov
fimuls
cld
adc
push
lods
jmp
pop
out
add
jnp
pop
mov
mov
js
je
testb
sbb
fsubs
hlt
inc
push
adc
xor
sbb
test
mov
scas
xorl
aam
add
div
stc
add
lret
lock
inc
sahf
repnz
dec
jnp
out
stos
add
lret
sub
mov
mov
jp
in
adc
fsub
sahf
add
jle
push
dec
movsl
add
inc
and
lock
pop
cmp
add
push
fwait
scas
sbb
insl
fadd
popa
aaa
cmp
test
shll
cli
hlt
iret
add
jecxz
cmpl
mov
pop
jnp
lods
sbb
int3
test
add
or
sub
add
xchg
cmpsb
xor
add
pop
xchg
fldl
into
bound
xchg
int3
push
cmp
sbbl
dec
jle
add
outsl
or
adc
les
testb
cld
inc
aas
jl
mov
es
in
add
out
insb
js
inc
xchg
sbb
cvtpi2ps
cmp
lock
pop
das
add
mov
pop
fadds
repnz
loop
xorl
movb
in
dec
dec
orb
repnz
shll
or
nop
rolb
push
sbb
add
and
inc
pop
dec
ds
sbb
pop
pop
xor
popf
cwtl
pop
sarb
sub
inc
add
pushf
mov
pop
add
mov
xchg
pushl
insl
jmp
pop
ja
inc
pop
lods
insb
add
fsubrs
mov
clc
push
or
xlat
jl
adc
add
push
pusha
movsl
mov
and
test
lret
ljmp
mov
mov
stos
loope
xchg
add
sub
jl
xor
imul
cmp
lahf
mov
out
cwtl
fldl
sub
and
dec
pusha
ret
pop
ss
pop
stc
out
jnp
and
mov
rcrb
dec
mov
mov
inc
cmpsl
push
popl
cld
xchg
jecxz
mov
push
dec
rcrb
push
add
fwait
out
add
shrb
rcrb
flds
or
fnsave
push
push
pop
pop
nop
rclb
xchg
jle
repnz
std
and
popf
in
fistpl
sub
add
lret
jne
fstl
stc
add
jg
or
dec
jge
jge
cli
cmpsl
cld
sbbb
push
test
sbb
mov
cwtl
clc
jecxz
cmp
daa
leave
pop
addb
jbe
cli
mov
mov
cmc
test
ss
xchg
push
or
and
lahf
push
cmp
cwtl
clc
add
mov
in
cld
xchg
cwtl
add
and
pop
sbb
jmp
add
push
push
or
movl
stos
enter
cld
loopne
mov
xlat
xchg
decb
mov
mov
jmp
pop
cmp
or
sbbb
aas
rclb
jne
push
cmp
or
mov
mov
test
rolb
int3
lods
sti
add
ja
das
ds
xor
sbb
ret
inc
push
xchg
mov
pusha
sarb
jmp
loopne
sbb
lahf
xchg
loope
enter
mov
mov
nop
cltd
pop
das
repnz
cmp
in
cs
cmp
loope
out
pop
cmp
jne
mov
fcmovnb
popa
add
jge
std
cmp
test
push
jae
push
lock
add
push
mov
cmp
movsb
stos
sbb
inc
icebp
add
popa
out
jno
jb
push
les
add
fstpl
out
fistps
jo
ficoml
mov
scas
das
cmp
mov
je
bound
add
roll
in
pop
xor
pop
or
or
mov
sbb
fcompl
cmp
and
sbb
dec
sarb
adc
mov
jg
add
out
cltd
push
jg
jbe
add
sbb
sub
and
stos
sub
add
mov
sub
mov
lea
xchg
add
out
inc
adcb
jb
add
clc
rolb
test
push
dec
andb
inc
popf
inc
sub
push
pop
push
fstps
arpl
in
int3
ret
sub
loop
xchg
or
repz
xor
push
nop
movsb
in
icebp
mov
fnstenv
pop
rcl
or
ljmp
pop
mov
mov
lea
add
pop
push
dec
pop
lock
pop
call
js
outsl
mov
inc
rcl
ret
arpl
imul
das
in
add
mov
xchg
or
inc
lock
or
stc
scas
sbb
es
dec
loope
xor
add
push
lock
sbb
aam
push
xlat
push
fcmove
add
sbb
ret
jg
addl
sub
jb
pop
orb
test
in
add
stos
push
shrb
sbb
inc
dec
adc
xchg
enter
xchg
dec
rcr
sub
pop
jecxz
pusha
pop
fldenv
imul
fisubrs
and
lret
sub
push
lods
testl
negl
mov
ficoms
or
sbb
out
in
jne
cmpsb
cmp
test
insl
xchg
sub
adc
add
cli
fcmovb
and
or
scas
lea
iretw
jecxz
mov
adc
popa
sbb
stos
add
jp
mov
xor
push
push
cmp
and
add
pop
add
int3
ficoms
rcrl
mov
and
mov
and
ja
shrl
jmp
add
fdivrs
test
fisubl
cwtl
sti
fldl
lds
ss
mov
sub
xor
insl
aas
nop
adcb
mov
add
jg
add
test
push
pop
bnd
sbb
ljmp
mov
adc
adc
mov
mov
sub
jae
push
leave
testl
xchg
push
sub
sub
ljmp
in
adc
lods
add
mov
mov
push
movsb
je
mov
sar
loop
pop
movsl
insb
pop
clc
ret
outsb
adc
cmpsb
gs
add
icebp
fiadds
add
xor
sbb
push
orps
inc
mov
das
jbe
out
pop
add
add
je
add
ret
insb
inc
mov
js
mov
fiadds
add
dec
arpl
fisubrl
add
sahf
mov
add
pop
add
cmp
sub
icebp
push
add
pop
mov
daa
ja
add
mov
clc
pop
add
inc
popf
inc
andl
cmp
dec
mov
sahf
movsl
add
pop
cmpsl
dec
aam
repnz
add
mov
xor
je
adc
stos
insb
into
js
add
out
mov
inc
shll
iret
and
jo
xor
scas
movsb
add
ljmp
fbld
jne
push
add
sahf
jle
pushf
aaa
pop
nop
or
mov
add
scas
push
sbbb
mov
sbb
fiadds
aam
cmp
xchg
add
add
inc
xchg
xor
fucomip
add
pop
dec
jo
loop
imul
lea
sahf
inc
mov
adc
fimuls
scas
dec
sub
mov
lods
add
inc
repz
cmp
jecxz
out
jnp
insb
push
mov
ljmp
push
push
out
lcall
pop
loopne
loop
add
push
push
sub
stc
out
jns
jbe
test
xchg
pop
lds
sbb
into
scas
cmp
and
inc
cmp
cld
and
sahf
jl
sti
add
push
jb
pop
fstps
outsb
jae
adcb
jae
dec
mov
dec
out
push
add
cltd
shrl
call
mov
sbb
out
add
mov
outsl
int3
adc
cli
filds
mov
ljmp
dec
add
jmp
push
fadds
push
cs
sbbb
xor
sub
fwait
sbb
repz
jne
repnz
add
fsts
mov
jp
test
pusha
cmpsb
jno
aam
sub
shlb
adc
sub
fwait
out
pushf
rcrb
cmp
std
shrb
dec
mov
add
xchg
jg
add
fmulp
call
mov
fistl
lahf
mov
pop
push
push
fsubl
push
jae
or
cmp
movsb
xchg
jnp
push
pop
jl
sub
imul
push
mov
xchg
adc
pop
ds
pop
add
and
add
lret
dec
push
adc
add
pusha
dec
lcall
mov
sbbl
repnz
clc
repz
sbb
arpl
rcl
testb
andb
into
mov
pop
add
mov
or
pop
leave
and
sbb
sbb
test
push
into
and
call
jbe
mov
or
fsub
jbe
sbbb
out
add
les
xchg
repz
add
inc
mov
pop
sub
sbb
rclb
test
jle
add
fldl
int3
mov
mov
into
dec
sbb
out
mov
cmp
daa
fcmovb
in
mov
pop
icebp
inc
xor
call
testl
popa
or
out
pop
jnp
es
icebp
pushf
addb
or
adc
outsb
pop
enter
add
jbe
mov
repnz
and
aaa
add
jmp
mov
jo
pop
mov
aaa
jecxz
ljmp
jno
cmpl
mov
add
aad
mov
dec
cs
jmp
outsl
add
sarb
or
lods
mulb
fcmove
popf
add
hlt
cmpb
inc
outsl
hlt
push
out
add
repz
and
inc
rolb
aaa
lret
in
dec
add
sub
mov
in
mov
sub
inc
movsl
add
pop
sbb
cs
ret
sbb
xorb
mov
push
inc
out
or
add
sbb
inc
loop
mov
and
add
push
mov
mov
add
cmp
pushf
lret
push
push
mov
out
jmp
or
sbb
mov
iret
adc
ja
mov
cmp
in
shl
add
cmp
rorl
jge
fmuls
push
push
movsb
adc
or
add
dec
std
mov
jb
sbb
test
jmp
add
pop
test
clc
add
jo
xor
pop
add
lret
add
dec
nop
rolb
xor
sub
ja
sub
popa
jle
mov
mov
movsb
out
or
mov
iret
dec
or
lods
add
add
fldl
inc
nop
dec
ret
cmp
das
mov
loopne
xor
int3
js
loop
add
stos
add
js
pop
sub
scas
jo
jns
cmc
jl
gs
lea
jbe
shlb
aam
test
ret
scas
add
pop
wrmsr
add
rcl
inc
xorb
nop
movsb
add
add
add
jg
enter
push
test
into
inc
shrl
pushf
push
sbb
inc
pop
nop
pop
push
nop
insb
add
mov
cmp
add
dec
or
jbe
adc
data16
cmc
dec
gs
pushf
ja
pop
fstl
cmpsl
lock
adc
sub
repz
test
rcrl
xor
stos
add
pop
in
aad
adc
aam
subb
popa
add
adc
add
stc
cmpsl
sbb
out
cwtl
pusha
add
cwtl
ja
add
push
xchg
fxtract
or
xor
rcrb
mov
sbb
inc
pusha
pop
push
cli
add
mov
xor
dec
in
loopne
and
mov
out
mov
mov
xor
pop
or
dec
shlb
adc
stc
sbb
inc
adc
and
lret
sub
add
add
mov
mov
cmpsl
inc
scas
jo
jne
push
pop
pop
adc
nop
pop
mov
sbb
jb
ret
cmp
pop
xchg
jbe
inc
arpl
adc
shrb
lock
and
enter
addl
adc
and
pop
adc
pop
xchg
dec
and
inc
mov
les
fbld
jle
test
or
imul
js
rcl
inc
mov
shrb
sarb
sbb
ss
pop
cvttps2pi
inc
sub
add
fnstsw
mov
sbb
push
mov
inc
mov
push
je
ror
lock
pop
jmp
aas
mov
fs
jl
add
mov
imul
lock
add
roll
ds
cmp
nopl
fcoms
add
rorb
lret
test
pop
sbb
enter
push
xor
push
dec
push
add
xchg
pop
inc
cltd
iret
pusha
cmc
out
add
xchg
repz
loop
add
jb
mov
data16
dec
xor
add
rcl
xchg
cmp
fisubrl
pop
push
sbb
lcall
mov
lret
push
dec
mov
insl
and
test
sub
int3
and
mov
or
aas
xor
orb
outsl
mov
mov
cmpsl
inc
xchg
add
push
pop
ror
add
jo
cmp
scas
test
lcall
clc
cmp
lods
imul
adc
dec
xlat
pop
add
jecxz
add
inc
aas
mov
sub
std
jmp
mov
and
sbb
fsub
das
add
cmp
xor
cmc
in
pop
paddb
ss
mov
inc
std
adc
popa
cmp
dec
loopne
test
clc
mov
popf
nop
pop
fnstsw
xchg
cwtl
or
loope
lock
add
xchg
mov
ds
loop
aaa
inc
outsl
addb
out
fdivrs
jns
subb
aas
inc
repnz
add
adc
jp
in
pop
stos
add
add
pop
ret
mov
push
test
jbe
add
shll
add
sbb
bound
imul
cmp
out
cmp
sti
andb
shrb
xchg
test
lea
or
dec
sti
dec
mov
add
js
popf
inc
mov
sbb
sub
push
cmp
daa
rcrl
popa
mov
rcl
repnz
sbb
data16
add
in
test
push
mov
or
es
fimuls
add
leave
rcll
inc
arpl
cmp
aam
lods
adc
ds
pop
jge
test
add
es
pop
lods
jb
je
add
inc
out
enter
add
pop
ds
inc
or
je
adc
test
hlt
mov
sbb
push
sbbb
mov
sets
add
sub
xor
add
xchg
stc
dec
test
sbb
xchg
pop
lods
adc
mov
push
jbe
adc
test
cli
fisubrs
mov
faddl
lods
jp
imul
test
push
inc
mov
js
add
jl
or
inc
mov
nop
mov
repnz
jae
jns
gs
add
dec
loop
cmp
fwait
mov
xchg
shll
jp
push
es
pusha
lcall
lds
scas
arpl
iret
in
mov
jno
add
jmp
mov
dec
lret
jecxz
lcall
mov
jo
mov
popf
cld
mov
adc
mov
lahf
adc
cld
jo
or
cwtl
mov
dec
mov
or
mov
stos
add
push
adc
xchg
incl
movsb
fimull
sub
jle
or
stos
jae
sbbl
mull
nop
add
rcll
mov
push
addb
mov
stos
in
and
lock
pop
push
imulb
sub
xor
std
das
test
pop
bound
cltd
rcrl
pop
mov
add
mov
cmp
scas
testb
pop
adc
sti
cmp
roll
add
cmpsl
ljmp
pop
loop
dec
daa
add
mov
add
pop
testl
mov
add
aam
in
ja
adc
call
mov
add
push
idivb
sub
pop
pop
jo
sub
lods
jnp
shlb
dec
xchg
mov
and
cmp
push
add
movsl
in
push
and
add
shrl
jns
cmp
subl
lea
stos
add
inc
fimull
clc
jmp
dec
sub
or
loope
orb
sbb
lret
inc
xor
inc
out
js
add
arpl
dec
push
inc
shl
loopne
add
inc
mov
sbb
imul
and
xchg
in
je
pop
fbld
mov
fwait
jno
rol
gs
xlat
outsl
pshufw
xlat
push
shl
outsl
mov
dec
add
adc
mov
mov
outsl
loopne
lock
add
dec
mov
mov
rcll
stos
sti
cli
dec
nop
inc
lcall
fldt
sbb
jno
out
adcl
ds
add
sub
loope
sbb
add
jns
jb
sub
aas
push
sbb
cmp
push
out
std
push
arpl
subb
pop
sbb
rcrb
cwtl
cmp
dec
xor
add
or
jg
adc
xor
aad
leave
loopne
pop
mov
add
pusha
cld
cmp
enter
ja
pmaxub
jns
push
push
cmpsl
int
outsb
aad
add
lret
or
sbb
pop
pop
xchg
cmpsb
cltd
mov
push
orb
pop
ja
pop
pop
sbb
rcrb
lahf
pop
nop
inc
out
movsl
add
movsb
jecxz
loopne
dec
and
add
push
sbb
add
dec
pop
and
inc
push
cmp
dec
add
lods
jg
and
sub
test
mov
cli
test
mov
add
addr16
mov
data16
jp
mov
sbb
push
gs
sub
movsb
mov
xchg
inc
sbb
pusha
add
lea
inc
nop
aam
ja
cli
sbb
bound
repz
add
lret
pop
enter
fisubrs
mov
pop
lcall
inc
addb
gs
outsl
mov
add
mov
dec
sahf
inc
fwait
pop
mov
xchg
mov
lock
inc
pop
dec
filds
adcb
adcb
lock
adc
and
cmp
dec
loopne
fs
lds
scas
out
nop
scas
cmp
repz
mov
shrb
add
fstl
add
pop
mov
pop
addb
or
inc
add
sbb
or
jmp
add
xchg
inc
xchg
in
jno
jg
aad
dec
movsl
xor
and
ret
dec
push
jb
push
xlat
rolb
add
mov
sbb
mov
jge
or
add
dec
cs
add
pop
fisttpll
iret
sahf
cwtl
adc
lds
loopne
enter
call
and
nop
add
inc
jl
bound
decl
and
sbb
sub
push
gs
or
add
out
xor
fcoml
fiaddl
in
rcr
inc
cmp
xchg
leave
cld
ds
cmp
cmp
push
cmp
push
out
lock
add
repz
adc
int
add
cmp
hlt
and
faddl
pop
out
jmp
add
js
cld
sub
dec
nop
sub
push
ds
lods
sbb
stc
jnp
rcr
or
lods
test
pop
les
pop
stos
sub
in
pop
or
adc
jmp
sbb
xchg
push
sbb
push
loope
stc
ret
jle
cmp
ret
xor
testl
nop
call
stos
adc
sub
xchg
int
add
into
add
adc
sub
in
mov
aaa
rclb
and
mov
daa
jb
add
and
cld
stc
mov
jo
pop
and
add
loopne
xor
xor
js
add
xor
test
pop
in
pop
ds
incl
negl
pop
xchg
popa
push
jb
adc
ljmp
shl
pop
sub
add
inc
pop
xchg
bound
les
push
xchg
xor
add
out
inc
int3
in
in
and
add
xchg
call
or
inc
aaa
sub
lods
aam
jae
jno
stc
sbb
dec
or
dec
insb
cli
es
hlt
mov
xchg
fsubl
rclb
push
push
mov
add
sbb
out
adc
shrb
mov
pusha
or
xchg
jbe
dec
les
cmp
add
mov
fsub
sub
cmp
cmpsb
xor
add
pusha
sub
pop
adc
add
push
cmp
fucom
xchg
jle
mov
rcrl
dec
add
dec
cld
pop
cli
test
add
pop
adc
xor
xchg
out
aad
add
xor
push
and
or
add
icebp
pop
inc
cmp
pop
cli
or
bound
mov
mul
lods
icebp
mov
ds
push
rorl
fabs
fidivrl
jae
aaa
test
lods
adc
sbb
add
aam
inc
stos
push
mov
icebp
or
int
filds
dec
js
add
xchg
stc
les
push
pusha
jmp
add
adc
dec
mov
sbb
add
xor
repnz
iret
nop
sar
add
mov
daa
cwtl
pop
jecxz
std
mov
pop
add
and
sahf
sbbb
js
add
dec
testb
jp
push
inc
jl
out
lods
and
jl
out
mov
mov
xor
stc
lock
rol
ja
verw
pop
cmpsb
dec
aam
movsb
jno
notb
outsl
jge
hlt
xor
adc
out
fs
dec
inc
dec
in
cmp
xchg
pusha
call
mov
test
xchg
jns
jb
out
push
out
clc
add
imul
sub
in
aam
sbb
inc
push
adc
fimull
dec
jecxz
in
inc
adc
cwtl
and
and
dec
shrl
stc
mov
fcoml
nop
or
sbb
sub
sub
aam
pushf
xor
lods
das
add
ljmp
sub
sbb
cli
sti
pop
in
or
rclb
add
stc
mov
rcrl
add
xor
sbb
inc
js
sub
pop
inc
add
or
push
push
sbb
adcb
fbld
out
pop
xlat
rolb
dec
sbb
xor
inc
inc
mov
add
and
dec
push
xchg
push
loopne
add
sub
enter
mov
add
in
cld
and
stos
imul
into
pop
nop
notb
add
jns
sbb
loopne
dec
in
dec
pusha
and
mov
jns
incb
pop
cld
ja
loop
and
aas
add
add
mov
nop
js
push
sbb
or
pop
movsb
orb
imul
test
jp
lret
sub
pusha
inc
xchg
hlt
mov
je
sbb
push
xorl
jmp
add
hlt
shlb
add
jne
fcomps
push
in
test
cmp
cli
lods
dec
clc
fs
cmp
cmpsl
add
cmp
and
xor
lret
sbb
test
adc
scas
sub
rcrb
dec
lock
shlb
mov
cmp
pop
push
and
rclb
std
mov
popa
js
outsb
mov
mov
ja,pt
add
ret
and
jle
xchg
add
out
add
sbb
ret
adc
shll
pop
sbb
push
mov
jle
pusha
imulb
outsb
mov
mov
sbb
mov
sahf
movb
sbb
adc
loopne
or
sub
inc
mov
inc
int3
mov
mov
sahf
je
insl
subb
das
divb
mov
enter
int3
sarb
push
xchg
add
dec
lcall
or
add
subl
push
daa
dec
or
dec
jo
lock
cmp
and
daa
add
mov
push
add
repz
aad
mov
mov
push
hlt
mov
adc
testb
pop
rorl
dec
mov
add
push
cmc
xor
pop
cli
add
push
inc
mov
add
jb
and
cwtl
push
push
mov
arpl
add
out
sub
cmp
sbb
je
subps
ds
daa
arpl
data16
shr
in
add
leave
outsl
push
mov
sarl
repz
vcvtpd2dq
lods
xchg
adc
inc
rcrl
les
pop
pop
cmp
adc
loope
push
pushf
xor
pop
add
jnp
mov
dec
sbb
shlb
pusha
js
add
pop
push
cmp
pusha
outsl
pop
adc
sbb
out
rorl
cli
cltd
add
outsl
imul
adc
jge
cmp
mov
lods
mov
pop
adcl
pop
add
add
mov
or
add
ret
sahf
mov
sti
imul
sub
pop
data16
decb
sbb
faddl
pop
subl
push
add
stos
push
ror
inc
sbb
pop
inc
js
ds
mov
push
jo
movsb
movsl
popf
hlt
sbb
fsubrl
aaa
or
call
in
pop
orl
dec
js
cli
sbb
push
clc
inc
fistpll
jmp
inc
into
lcall
loopne
clc
xor
loop
ffree
repnz
in
xchg
dec
cli
cmp
loope
dec
popf
add
mov
rolb
scas
test
movsb
pop
scas
fcomps
inc
mov
sub
adc
loopne
testb
dec
cmp
mov
test
gs
add
inc
pop
xchg
add
cmp
jb
or
sub
lock
sahf
dec
cwtl
pop
push
outsb
mov
jno
lock
add
mov
fnsave
add
leave
add
mov
wbinvd
jecxz
in
cwtl
inc
rcr
std
test
or
loopne
mov
lahf
add
cmpsl
and
jge
mov
xor
das
inc
add
add
add
add
adc
rclb
jns
add
mov
and
sub
add
push
inc
repz
xor
pop
lods
pop
mov
std
sub
idivl
lret
scas
jo
push
and
or
test
push
movsl
mov
fiaddl
push
mov
aam
add
sbb
mov
hlt
loope
subb
mov
adc
xlat
add
adc
mov
jge
cld
xchg
jae
rolb
add
das
jge
dec
imul
mov
cwtl
and
xchg
dec
push
loopne
and
out
add
add
xor
sub
pop
mov
fwait
push
adc
rcl
xchg
sub
ja,pn
or
mov
pop
or
add
dec
aad
movswl
and
rolb
add
pop
xchg
out
and
sbb
sub
add
fisubs
loopne
nop
add
adc
push
call
xor
push
add
mov
enter
dec
sbb
loop
jmp
or
mov
hlt
in
mov
sub
or
or
out
dec
and
sub
jecxz
mov
lock
lret
sbb
sub
rcll
fdivl
cvtdq2ps
or
adc
mov
xchg
scas
xlat
cmp
iret
sbbb
ficomps
lcall
jne
pusha
shrb
push
stos
add
and
fiaddl
aaa
test
xor
mov
test
mov
fldz
inc
mov
dec
pop
sbb
jno
fcoms
inc
stos
popa
dec
mov
enter
add
xor
sbb
mov
sti
data16
jne
fmull
push
int
sub
add
mov
cmp
in
scas
inc
fmuls
push
nop
test
imul
das
cld
sub
add
mov
bound
iret
jp
imul
pop
out
mov
xor
or
push
mov
jb
pushf
mov
int3
cmp
pusha
or
lret
ljmp
mov
dec
mov
in
fs
and
cmp
mov
and
js
xchg
pushf
fsubrl
inc
insb
lea
rcrb
add
adc
xchg
das
adc
loopne
push
movsb
shl
and
adc
jb
sub
shlb
pop
int3
adc
leave
ss
add
mov
jnp
xchg
mov
ss
add
push
xor
pop
adc
push
sub
pusha
test
push
inc
imul
or
adc
into
test
xor
lcall
cmc
nop
fbld
lret
dec
ret
cld
pop
call
adc
and
mov
sbb
push
loopne
sub
popa
clc
mov
aas
faddl
push
xor
xchg
gs
add
add
loopne
pop
flds
add
adc
push
jae
xchg
cmpl
cmc
int3
pop
fs
aad
addb
scas
pminsw
ret
lock
sti
sub
xchg
pop
pushf
add
mov
push
xor
or
push
inc
add
cwtl
adc
cs
fstps
pop
mov
divb
sbbb
sbb
repnz
fs
cwtl
fsubs
dec
cwtl
scas
div
add
sbb
cltd
adc
loopne
mov
mov
inc
or
sbb
add
mov
movsb
xchg
int
mov
cli
push
cwtl
call
adc
push
xchg
lods
cmp
push
sbb
xchg
outsb
jmp
pusha
xor
sub
lcall
mov
loop
je
lret
leave
daa
lcall
shl
les
cs
and
movsb
mov
pop
xlat
repnz
fnstsw
add
pop
xchg
cs
adc
ficompl
push
xchg
ret
jo
sub
and
not
add
inc
cmpsb
pop
add
mov
out
cwtl
addr16
sti
repnz
addb
mov
inc
int
add
aad
mov
cli
addr16
mov
add
bound
mov
int
cli
sbb
add
jb
rcrb
inc
sbbl
dec
jmp
mov
mov
push
add
jno
cmp
inc
xchg
sub
sub
in
addb
lcall
sbb
adcl
pusha
push
mov
js
js
into
add
test
rcll
sbb
iret
or
cmp
cmp
sub
pop
sbb
flds
je
add
loop
inc
mov
add
and
cwtl
fldl
repz
sub
pushfw
in
nop
test
fs
mov
mov
in
fwait
jbe
movsl
inc
aas
add
adc
and
sbb
adc
ret
pop
jnp
clc
ret
and
add
nop
cmpsb
fiadds
jne
mov
pop
inc
jae
pop
xchg
add
loope
push
in
sub
mov
dec
add
adc
cmpb
dec
out
pusha
andb
mov
add
xchg
sbb
cmp
pop
arpl
rorb
pop
inc
movsb
or
cmp
clc
fildll
iret
call
xor
sbb
adcl
testb
sub
js
add
fldlg2
cs
nop
dec
pop
pop
sarl
sub
xchg
or
shrb
and
pop
pop
inc
lahf
test
jno
push
in
add
movsb
sub
daa
xchg
inc
pop
je
jle
in
sbb
scas
imul
dec
add
cmp
adcb
repz
inc
add
in
add
add
mov
push
stos
and
mov
adc
inc
or
pop
mov
in
rcrb
add
xchg
jo
jle
popa
cmp
pop
add
pusha
mov
arpl
push
mov
movsl
incl
inc
mov
in
sub
dec
out
xor
push
and
add
mov
ds
andl
test
dec
jns
add
or
pop
cmc
orl
mov
ja
push
je
lret
and
sub
push
cmp
sahf
pusha
mov
call
aas
xor
adc
add
add
sbbb
js
sbb
sub
mov
orb
inc
add
fmulp
push
pop
add
or
inc
xchg
fistl
and
add
sbb
aam
std
jg
sbb
out
popa
pop
nop
and
or
add
ficoml
stc
sbb
std
and
imul
mov
push
rorb
sahf
jp
mov
out
add
sbb
or
add
call
mov
add
mov
cmp
mov
lret
add
push
add
adc
add
push
outsl
sti
add
inc
dec
mov
push
pop
test
dec
addb
pop
jle
pop
rorl
mov
stc
adc
or
mov
add
call
mov
cmp
add
pop
cwtl
sahf
stos
jnp
nop
movsb
add
sub
push
cld
out
add
adc
add
nop
movsl
ret
add
dec
lcall
js
add
pusha
ret
jo
or
pop
fcoml
jecxz
sub
inc
test
inc
nop
loop
mov
push
out
loopne
enter
vcmpps
lock
or
dec
mov
and
add
cmc
lds
rorb
add
inc
mov
add
dec
testl
out
out
rol
adc
xchg
adc
inc
pop
scas
xlat
pop
add
xchg
mov
test
lret
rcrb
movl
inc
mov
mov
das
std
sub
pop
ds
iret
adc
out
mov
add
lods
les
out
dec
push
std
add
jmp
pop
testl
test
mov
and
sbb
aaa
add
inc
movb
lret
test
iret
jecxz
jnp
dec
sti
icebp
add
rcll
aad
lock
cmp
inc
popf
pushf
push
iret
jp
insb
loopne
mov
or
push
cmp
jns
cmp
scas
add
fs
sub
add
and
add
jmp
mov
add
cmp
dec
cmp
push
and
sbb
jbe
mov
pop
pusha
pop
in
cmp
test
punpcklwd
jnp
aas
add
dec
mov
and
sub
fxam
rclb
mov
shr
add
clc
dec
push
out
add
or
mov
lods
mov
adc
push
aad
nop
cmp
cmp
mov
mov
sub
sbb
push
mov
xchg
lcall
js
fstps
push
xor
xchg
push
test
lods
cmp
add
push
jb
pop
push
xor
cld
sub
lods
push
in
add
mov
insb
filds
mov
cmp
push
cld
rol
add
aam
inc
aaa
jne
loopne
xorb
dec
jle
or
jp
adc
js
jb
rcr
pushf
mov
ret
bound
shll
fcomps
lods
adc
dec
or
sub
shlb
cld
push
fldl
and
cwtl
adc
inc
jge
mov
mov
xchg
pusha
test
add
out
cld
add
jle
mov
sub
movsb
fimull
mov
scas
dec
daa
sarb
dec
jbe
sub
out
jae
jmp
add
leave
das
xchg
cmp
add
pop
xchg
push
mov
dec
inc
cmp
out
sbb
divb
adc
shl
movaps
leave
movsb
mov
inc
pop
sbb
sbb
mov
in
adc
cmp
rcll
mov
push
add
inc
add
ret
push
jle
jg
xchg
nop
roll
insb
xchg
push
fisttps
out
jl
inc
mov
push
cmp
jo
sub
pop
insb
fldl
mov
jl
hlt
or
rcll
pop
cs
mov
push
push
loop
inc
lock
jne
lock
clc
add
xchg
xchg
jns
pop
cmp
pop
enter
add
aam
sbbb
or
out
mov
or
andb
in
inc
loop
pop
lds
popf
lret
clc
call
in
std
add
outsl
pop
cmp
sub
add
cld
in
je
aas
mov
cmpsl
mov
subb
mov
lds
push
addb
bound
xchg
arpl
cmp
add
cmp
in
add
mov
ret
pop
shr
add
xchg
sarl
clc
das
outsb
add
jns
repnz
adc
orb
bswap
xor
into
inc
inc
cmp
pop
mov
adc
lret
cmpsl
jg
daa
sub
leave
popf
roll
pop
dec
icebp
cmp
jp
add
int
push
in
or
scas
clc
add
pop
jge
sub
fdivs
xor
js
jne
pop
mov
xor
addb
sarb
push
fnstcw
adc
cli
add
mov
negb
loope
mov
add
ljmp
add
jecxz
aaa
xor
stos
mov
pusha
xor
enter
daa
adc
lock
dec
add
je
cmpsl
cwtl
dec
add
inc
and
adc
lock
xchg
xchg
aam
ret
add
paddsw
mov
inc
sbb
inc
cmpsl
adc
jmp
or
dec
and
sub
mov
adc
dec
jns
pop
xchg
xor
lods
mov
add
icebp
cmpsl
stos
pop
outsb
loopne
jne
add
shl
cmp
add
xor
and
dec
mov
nop
movsb
popa
cltd
arpl
mov
xchg
fadds
fmuls
push
push
cmp
add
dec
push
aam
stos
cmpl
mov
sbbb
mov
or
lds
mov
dec
inc
psllq
add
add
iret
inc
adc
mov
add
adc
ret
mov
stos
lock
jmp
std
loope
sub
mov
adc
outsb
mov
inc
cmpsl
test
mov
add
inc
add
mov
xchg
cwtl
mov
or
out
pop
pop
fcoml
andb
sti
in
add
fisttps
ss
sbb
add
or
add
jmp
loopne
lahf
pop
add
cmp
adc
jecxz
adcl
jg
cmpb
stos
mov
mov
xchg
enter
xor
dec
add
sub
leave
inc
add
push
rorb
ds
add
mov
daa
iret
pop
xchg
lahf
rorb
cmp
cs
aas
xchg
xchg
pop
je
sbb
dec
adc
pop
add
fiaddl
lahf
lea
add
divl
fadds
inc
xor
psubb
push
adc
fsubrl
addl
ret
loope
cmp
ret
add
cld
leave
cmp
pop
in
push
enter
mov
xor
adc
add
push
jle
or
cmp
stos
cmp
add
shl
dec
and
in
lea
mov
push
xchg
add
mov
pop
sbb
push
testb
decl
push
dec
std
mov
mov
mov
sahf
sbb
addb
jmp
or
mov
and
or
xor
lcall
push
add
fildll
jb
jnp
xchg
add
push
jl
add
mov
fcoml
addl
adc
addb
mov
nop
ret
in
daa
or
jo
mov
clc
outsb
roll
lea
and
sub
dec
in
inc
test
sahf
adc
mov
push
sub
jns
add
scas
add
int
into
or
fmul
mov
jl
mov
xchg
lret
dec
hlt
iret
dec
daa
mov
push
clc
scas
outsl
add
out
cmp
pop
mov
add
adc
int3
adc
adc
dec
iret
mov
scas
sbb
push
std
sbb
lahf
add
jecxz
push
fbstp
mov
cmp
sarl
mov
add
imul
push
loopne
cmp
pop
or
xchg
enter
pop
pop
insb
pop
negb
jns
mov
and
loopne
jae
jle
cmp
jge
cmc
jl
fldl
pop
pop
dec
mov
add
sbb
out
repnz
ret
and
aas
fdiv
add
decl
pop
andb
scas
and
test
sub
pop
daa
popa
adc
loopne
pop
je
rcrb
rcrl
pop
add
aam
add
xor
aas
jge
enter
in
add
arpl
insb
sub
cs
cwtl
add
out
addr16
rolb
fsubrp
pop
jl
add
mov
adc
pushf
adc
dec
pop
sub
mov
inc
cmp
not
jo
cmp
add
pop
mov
sbb
push
mov
adc
lcall
or
inc
andb
fisubl
or
leave
push
add
mov
sarb
pop
les
lods
loopne
push
add
push
icebp
jnp
aam
push
add
mov
adc
fstl
dec
cwtl
adc
push
in
jg
and
cltd
xchg
jb
sbb
push
inc
fpatan
icebp
loopne
sbb
enter
bound
push
rcl
add
insl
mov
addr16
iret
inc
sbb
add
rcl
pop
or
mov
test
mov
xchg
sub
nop
shll
mov
push
test
test
das
sti
or
pushl
shll
mov
or
orl
mov
add
lahf
pop
cwtl
add
sub
or
add
imul
orl
mov
mov
scas
fwait
or
jmp
out
and
adc
sub
clc
out
inc
cld
shr
lret
push
jg
add
xchg
xorb
add
mov
mov
mulb
sub
in
dec
or
jp
insl
gs
add
icebp
mov
lcall
js
mov
inc
dec
pop
cmpb
cmpsl
adc
add
dec
inc
mov
and
xor
leave
mov
outsl
pandn
daa
jno
pusha
cmpb
into
iret
popf
loopne
repz
pop
jno
xchg
rorb
and
sbb
mov
fcos
jbe
enter
push
xor
push
bound
add
pavgb
adc
jo
inc
sahf
xchg
jmp
xchg
cmp
ret
cmp
stc
add
and
xor
das
push
and
cli
cmp
aad
les
addb
cmp
sbb
subb
pop
loop
xchg
add
pop
mov
add
cld
mov
mov
fimuls
std
ja
mov
aaa
popf
inc
lods
and
sbb
adc
addb
xchg
pop
mov
rolb
std
sub
jno
imul
in
adc
add
push
add
mov
adc
add
sub
iret
cltd
sub
sub
lods
popa
imul
xchg
cmc
setg
call
mov
jp
add
lods
cmp
push
mov
xchg
inc
jp
dec
sub
fs
lods
sbb
clc
xlat
popa
cwtl
fisttpl
aas
mov
fisttpll
pop
daa
and
fs
rdmsr
lret
xor
add
adc
lcall
test
inc
outsb
add
xor
mov
adc
lcall
and
add
mov
or
add
nop
and
das
push
movb
pusha
imul
jbe
add
andl
cwtl
loope
in
inc
inc
mov
test
dec
andl
adcl
je
cli
mov
inc
add
pop
pop
dec
add
aaa
jae
daa
pusha
adc
cmpb
push
inc
xchg
push
xor
push
ljmp
int3
add
sbb
loopne
insl
add
jbe
in
jne
stc
shrl
jnp
inc
sbb
add
push
rcrb
bound
mov
jno
pop
nop
std
test
jecxz
mov
pusha
sub
mov
faddl
pop
mov
enter
add
inc
xor
ret
push
call
imul
dec
mov
daa
jo
out
cwtl
roll
add
lret
fwait
testb
repnz
add
jae
movsb
push
and
inc
pop
add
ljmp
dec
cmp
stos
xor
mov
adc
add
das
daa
xchg
in
fisubrs
mulb
je
ficoml
outsb
mov
scas
and
stos
ficomps
mov
xorb
fistps
push
xor
xchg
in
push
inc
repz
rcr
ret
mov
xchg
sti
or
jecxz
lods
hlt
pushf
loope
shlb
adcl
add
pop
mov
ds
sub
stos
ja
aam
ds
mov
fwait
inc
xchg
jns
add
lods
push
push
testl
adc
pop
inc
add
in
ljmp
and
ret
pop
inc
ja
sub
in
jp
jl
mov
pop
adc
icebp
cmp
cmp
dec
adc
cmp
push
sbb
sub
xchg
loopne
arpl
add
push
pop
scas
icebp
imul
xchg
fldl
repz
fisubs
stos
loop
cld
faddl
inc
shrb
dec
inc
mov
lods
outsl
xchg
repz
inc
fildl
cltd
sbb
fldenv
jo
add
sarb
push
add
ret
repnz
add
mov
test
data16
add
cmpsl
jecxz
adc
add
mov
out
add
cli
test
dec
pop
mov
rcrl
mov
add
arpl
lret
mov
mov
adc
std
cld
xchg
push
outsb
aas
pop
fsts
call
movlps
pop
fsubrp
addb
lret
sbb
cbtw
stos
sub
mov
push
je
jne
push
inc
and
xor
in
arpl
or
push
rolb
add
mov
mov
popa
rclb
push
sub
adc
mov
sbb
mov
push
inc
jo
cltd
loope
and
movsb
ret
add
pushf
add
xor
jne
push
sub
aam
or
mov
mov
icebp
out
movsb
add
mov
hlt
iret
sbb
lds
rclb
enter
in
jae
aas
and
sbb
mov
ret
push
rol
mov
jns
popa
xor
mov
enter
ror
and
lock
add
popa
inc
out
inc
stc
popf
add
pop
sub
and
cmp
and
push
add
dec
scas
push
shlb
and
cmp
mov
jle
jecxz
add
or
loopne
jae
pop
sbbb
std
jb
fstpt
mov
ljmp
cwtl
push
pop
inc
cmpsl
adc
aam
pop
add
inc
push
icebp
inc
js
loop
cld
push
add
dec
fcomps
pop
scas
mov
aad
pushf
mov
push
and
aaa
mov
fmull
lds
or
inc
xor
pop
or
sbb
add
jle
pop
mov
aas
push
cmp
sub
jns
outsl
movsb
xor
mov
mov
std
or
inc
adc
sub
jb
cmp
dec
fsubs
xor
insl
and
or
dec
jne
scas
sub
iret
repz
fld
push
xchg
push
enter
inc
jo
insb
sub
fwait
add
je
dec
fbstp
cld
jmp
out
xchg
push
mov
pushf
popf
or
mov
sub
xor
jno
xchg
gs
shlb
loopne
std
xor
aam
adc
iret
and
xchg
outsl
fidivl
cmpsb
sub
cmp
es
pusha
cmpsl
addr16
add
aad
popf
adc
pop
lret
shll
sub
pop
xchg
sub
add
jl
bound
mov
loopne
das
jns
add
sti
shrb
shll
orl
jb
inc
dec
outsb
cltd
hlt
jae
add
popa
rolb
and
lods
out
mov
fsts
pcmpgtw
inc
clc
rcll
les
movsl
xchg
ror
adc
fidivs
xchg
icebp
aam
push
lds
std
inc
mov
xor
loope
ret
shlb
testl
and
add
pop
sub
sbb
push
test
int3
dec
jnp
mov
push
mov
loope
push
push
or
mov
add
inc
cmp
mov
lock
aad
and
sbb
push
in
push
dec
mov
pop
dec
ffreep
sub
mov
andb
in
pop
js
cmp
jle
mov
mov
dec
dec
xor
flds
mov
xor
in
push
dec
iret
or
in
test
je
add
clc
mov
and
xchg
mov
sbb
sti
fisttps
add
xor
loopne
shl
fs
mov
dec
jae
scas
push
daa
nop
negl
add
aam
inc
adc
pop
jmp
dec
decb
xlat
mov
mov
fsubl
inc
push
sbb
and
ret
add
or
pop
add
insl
jge
add
pop
faddl
ret
sub
loope
or
int3
add
inc
loopne
enter
add
push
jb
pushf
xchg
enter
xor
pop
jmp
inc
mov
js
daa
mov
jo
adc
shlb
push
pop
fldt
pop
xchg
shrb
out
xchg
add
and
push
adc
out
add
test
mov
pop
mov
int3
das
arpl
adc
mov
ret
bswap
fiadds
adc
loopne
adc
adc
push
jne
add
outsb
iret
lret
xlat
adcl
mov
lds
mov
sbb
stos
int3
sub
adc
dec
fidivs
scas
outsl
push
push
scas
push
ja
js
fdivs
cmp
xor
or
gs
cmp
incb
cld
call
les
loopne
and
xchg
stos
cmp
xor
cmpb
gs
mov
pusha
stc
adc
inc
adc
dec
aas
shlb
jecxz
inc
mov
sti
cld
das
dec
ljmp
push
cmc
clc
xchg
jl
pushf
add
repz
pop
call
cmp
les
out
loopne
xor
jo
cmp
mov
inc
jbe
dec
daa
add
cmp
add
les
xor
repz
add
mull
or
mov
jbe
dec
les
xchg
jns
cmp
ss
or
push
loope
mov
mov
push
fcoml
shlb
sub
mov
lret
in
ja
and
or
das
jle
rcrb
xor
push
mov
push
xchg
punpckhwd
mulb
pop
jne
in
dec
or
pusha
movsl
lods
popf
addr16
and
or
push
or
add
add
xor
add
push
mov
pusha
sbb
add
mov
pop
add
pushf
shlb
out
jg
scas
outsl
add
js
mov
ljmp
mov
pop
mov
shlb
clc
add
cld
cmp
adc
push
mov
jle
inc
ret
enter
fs
add
jb
int
mov
mov
push
lahf
popa
xor
addr16
cmp
cwtl
movsb
pop
arpl
cld
xor
mov
or
inc
in
add
cmp
cmp
loopne
lahf
scas
cmp
add
mov
shlb
xchg
mov
and
mov
pop
gs
mov
inc
add
inc
xchg
push
mov
sbb
dec
mov
xor
jmp
jns
adc
scas
xor
pop
mov
mov
bound
sbb
js
outsl
fbstp
add
fstpt
adcb
fwait
into
aas
mov
mov
mov
add
mov
push
mov
add
mov
jbe
add
les
xchg
or
bound
add
jne
add
push
call
push
shl
xor
sbb
stos
lock
dec
loope
daa
jnp
or
sbb
and
add
sbb
je
aaa
dec
in
sub
cmp
andl
pop
movsl
add
inc
adc
inc
and
adc
dec
cmp
shlb
outsb
sub
pop
add
jl
jle
in
add
add
hlt
cmp
pop
sarb
xchg
add
lods
daa
and
pop
mov
rcrb
jecxz
jg
lock
add
mov
xor
stos
fsts
cmp
jmp
add
mov
in
lock
aam
cmp
mov
cmp
pusha
dec
and
adc
daa
das
add
add
enter
cmovbe
pop
sub
sub
pop
push
inc
pop
jbe,pt
push
add
sub
inc
add
xor
ss
arpl
cmp
jns
lcall
xchg
adc
hlt
daa
insl
jae
fnsave
add
subl
mov
ret
andb
dec
push
dec
sbb
popl
cld
mov
test
loop
daa
and
mov
fs
push
xor
das
mov
dec
pusha
je
add
dec
mov
and
jo
dec
shrb
cwtl
pop
insl
mov
jecxz
lcall
adc
sub
adc
pop
and
roll
data16
xor
shl
call
mov
shll
fistpll
mov
not
cmp
sbb
push
cli
add
jae
imul
push
xchg
mov
in
outsb
xchg
cli
hlt
push
push
push
add
sub
stos
xchg
cwtl
sti
add
adc
mov
lret
fwait
and
and
push
or
andb
or
push
or
mov
bound
jns
mov
rorb
mov
loope
mov
sub
fwait
hlt
mov
sub
fstpl
inc
popa
sahf
aad
cmp
lods
std
cwtl
or
push
jns
sahf
aas
sbb
icebp
outsl
mov
xor
push
mov
add
xor
sti
sub
mov
inc
cmp
data16
mov
adc
sahf
add
aas
pusha
imulb
xor
dec
sub
cld
stos
fstps
sbb
xchg
imul
imul
mov
and
xor
mov
movl
pusha
cmp
dec
sub
or
mov
pop
mov
shlb
inc
add
xchg
mov
mov
push
pop
data16
cmp
jmp
xchg
repnz
sbb
push
and
mov
push
pop
jb
pop
mov
arpl
popa
paddsb
sbb
test
notl
popa
lea
and
and
inc
andb
pusha
and
adc
sbb
shl
push
or
cmpsl
inc
test
inc
add
sbb
les
push
loopne
rorb
or
mov
mov
xor
add
adc
add
xor
and
in
push
das
mov
out
dec
jnp
and
aaa
subb
mov
jg
adcl
jns
gs
popf
aam
dec
add
sbb
sbb
incl
add
xor
inc
ret
ret
inc
pop
adc
and
icebp
and
insb
sub
inc
or
fcomi
xchg
jo
syscall
inc
pop
mov
rol
rolb
insb
ficomps
jp
sub
xchg
int3
jmp
mov
and
or
cli
xchg
scas
dec
add
loopne
dec
mov
andb
ja
inc
dec
insb
add
jno
fisttpl
cltd
or
fistps
aaa
clc
outsl
inc
adc
jae
xchg
sub
sahf
add
mov
xchg
arpl
hlt
or
out
pop
cmp
insb
dec
in
and
or
scas
andl
lods
jmp
add
add
or
add
push
sub
test
lea
mov
sbb
daa
xor
lock
nop
nop
pop
inc
mov
and
iret
jno
dec
or
dec
enter
pusha
pop
mov
xor
mov
push
es
cld
test
and
fimuls
sbb
stc
orb
pushf
sub
cmp
mov
cwtl
sub
je
in
cmpsb
cmp
and
enter
dec
add
sub
imul
stos
xor
dec
adc
popa
lds
and
add
shll
test
inc
ja
les
sub
and
jae
in
in
notb
push
shll
and
test
lds
push
jns
sbb
sbb
movl
sbb
fcompl
mov
add
aad
sbb
and
sahf
inc
or
xor
and
adc
inc
cld
aad
push
push
loopne
test
push
pop
lock
loop
add
movsl
push
hlt
lahf
cmp
push
dec
xor
mov
mov
xor
bound
adc
or
sbbl
xor
xchg
cmc
xchg
mov
add
push
lods
mov
dec
es
mov
pusha
sub
insl
add
cli
mov
out
push
cltd
stos
lds
push
imul
loop
insb
mov
hlt
or
jmp
jb
fimull
mov
mov
movsl
lret
lret
adc
test
lods
jl
ret
shlb
es
xchg
in
dec
les
cmp
inc
aaa
pop
mov
orb
aad
stos
xor
xorl
xor
mov
jns
sar
stos
xchg
add
add
popl
dec
sbb
pop
jns
add
sub
sub
mov
inc
into
fildl
imul
mov
aam
jle
or
inc
fwait
enter
sar
mov
cmpsb
xor
mov
fs
sub
lods
in
ss
test
cmc
insb
and
inc
stc
pusha
sbb
xchg
sbb
daa
sbb
js
sub
mov
popa
jmp
cmc
xchg
or
jns
xlat
adc
test
movsb
ds
ds
mov
out
nop
test
add
or
push
not
xor
mov
mov
stos
shrl
inc
mov
mov
adc
shrl
or
daa
lock
inc
add
out
lahf
or
sete
push
in
int3
test
inc
stos
inc
push
ss
add
add
cmpsb
inc
mov
lret
add
cvtps2pd
cmp
xchg
daa
inc
enter
call
inc
gs
jg
push
xchg
inc
xchg
sub
nop/reserved
dec
movups
je
inc
shlb
cwtl
ret
clc
int3
pop
mov
outsb
enter
rorl
sarl
adcb
fisttpll
lret
loopne
add
lahf
xchg
sbb
mov
jb
adc
add
popf
jo
mov
sahf
push
ret
mov
cmp
mov
sub
fs
cmc
mov
inc
lock
jo
push
mov
sbb
push
add
jno
iret
dec
mov
psllw
mov
mov
pop
pop
imul
int
jae
or
and
popa
add
dec
mov
mov
pop
pop
outsl
jg
xor
pop
xchg
rcrb
xchg
inc
inc
and
out
shlb
sbb
enter
add
movsl
mov
xor
call
xor
fmull
leave
cmp
in
out
sub
xchg
sub
jo
sub
dec
add
outsl
mov
dec
mov
subl
and
pusha
mov
adc
add
mov
dec
fdiv
mov
mov
dec
dec
cmp
jge
data16
inc
add
hlt
popl
pop
mov
in
fs
or
hlt
pop
or
and
sbb
mov
dec
add
add
xor
subb
add
mov
mov
insb
xchg
pop
mov
pcmpgtb
sub
mov
scas
and
xchg
lret
xchg
test
jae
ret
dec
push
adc
sbbb
cld
jne
std
sbb
push
mov
pop
adc
cwtl
sbb
xor
sbb
js
test
add
dec
jp
les
dec
mov
mov
movsb
lcall
cmpl
popf
mov
stc
pop
int
es
sbb
mov
lahf
xchg
or
loop
mov
mov
and
fwait
rcrb
das
jp
or
sti
cld
pop
jmp
adc
mov
or
call
insl
mov
test
jne
or
inc
test
jle
insb
cmp
push
fildl
ret
push
xor
jle
dec
repnz
mov
sub
sbb
sbb
mov
sub
mov
push
mov
add
rolb
mov
cmp
pop
and
push
aas
cmpsl
pusha
and
repnz
lret
orb
mull
pop
add
sar
in
lds
mov
add
cmpsb
and
and
test
mov
bound
das
add
call
push
fcoms
inc
mov
and
les
sub
jge
xchg
loopne
rorb
mov
or
das
stos
add
popf
add
enter
add
xorl
jmp
mov
lock
rolb
sub
cmp
and
test
lods
pop
ret
pop
into
or
in
mov
push
inc
stos
fcmovb
daa
pop
add
cmp
mov
push
sub
nop
sub
fdivrl
mov
push
inc
sub
cld
and
jb
add
hlt
test
fsubl
call
add
subl
xlat
dec
add
jno
lahf
xchg
jmp
adc
test
sub
ret
jg
popa
or
cltd
or
loopne
lods
les
cmp
add
gs
dec
adc
jne
test
add
aam
dec
mov
mov
js
ret
and
add
mov
mov
or
aas
sub
outsl
mov
adc
pop
pop
cltd
outsb
cwtl
in
cmp
inc
mov
sub
push
or
rol
outsb
xchg
push
imul
pop
bound
mov
test
or
mov
je
push
cmp
push
pop
in
add
lock
in
cmpl
pop
add
mov
sub
push
cwtl
xchg
std
sbb
pop
and
cmc
sahf
dec
call
jecxz
repz
cld
je
sub
jle
clc
enter
mov
movsb
pop
clc
adc
xor
in
fwait
add
call
dec
mov
and
add
sbb
nop
pop
dec
add
test
lea
mov
ds
mov
call
js
mov
pop
xchg
push
sub
lock
out
inc
mov
or
loope
inc
jb
and
or
push
in
inc
inc
mov
sub
data16
loope
pusha
cltd
outsb
push
jmp
xor
or
call
aam
inc
lret
cltd
add
movl
das
mov
aas
adc
dec
jns
lret
aam
popf
dec
adc
cs
jecxz
add
sub
outsb
setb
movsb
sub
pushf
and
and
rcrl
fdivs
jns
xchg
jg
mov
xchg
outsb
sub
sub
xor
insl
movl
ja
add
add
popa
shll
add
popf
sarl
mov
inc
and
push
pop
outsb
dec
push
cmp
mov
adc
sub
or
add
or
fldl
jo
lret
mov
je
add
cwtl
lock
or
rcl
dec
or
xor
add
lods
pop
fdivp
mov
adcb
jo
xchg
das
sub
fstps
add
or
sub
mov
mov
js
lods
mov
nop
pop
add
sahf
dec
loope
cs
mov
loopne
adc
and
pop
in
ret
into
or
lods
lods
add
mov
nop
es
inc
les
fisubs
sbb
cs
xchg
jae
push
inc
push
outsl
test
sbb
lods
daa
xchg
inc
sub
push
aam
adcl
mov
in
loopne
dec
inc
ret
add
push
pusha
cmp
xchg
pop
dec
arpl
sub
xchg
jo
adc
and
movsl
push
fimuls
push
or
fadds
je
add
xor
out
fwait
insb
or
addb
insb
in
pusha
scas
mov
lar
sub
cwtl
or
das
mov
int3
or
fs
cwtl
in
dec
xchg
inc
adc
pop
aam
xchg
add
sub
and
fcomip
xchg
pop
aam
stos
mov
inc
cwtl
in
stc
fmuls
xchg
jo
subl
shll
jb
pop
mov
pusha
outsl
and
sbb
push
cmpb
mov
rcr
sub
pop
mov
xchg
and
mov
xchg
or
sub
mov
sub
mov
out
popf
add
mov
add
mov
or
add
push
mov
sbbb
cmpb
sahf
rcrb
add
jno
mov
push
roll
sbbb
lcall
add
adc
enter
mov
dec
in
rcrb
sub
int3
fmuls
cs
dec
imul
pushf
mov
mov
lret
inc
rol
add
pushf
fstl
and
into
inc
xor
sub
xchg
add
add
mov
in
xor
divl
call
sbb
movsl
es
pop
push
sbb
pop
inc
jge
pop
inc
add
jnp
and
fldl
mov
mov
adc
and
nop
mov
imull
mov
lock
jns
repnz
dec
js
sbb
cmp
clc
xor
test
rorl
insl
jmp
jns
sbb
pop
hlt
pop
jle
cmp
aam
dec
andl
xchg
and
in
scas
orb
pop
inc
scas
add
lret
cmpb
aam
iret
push
push
call
js
or
pop
xchg
or
mov
inc
xchg
inc
sahf
pusha
xor
jbe
stos
xor
lea
jge
in
xor
pushf
pop
in
mov
loope
xchg
pop
xor
hlt
repnz
mov
add
push
and
lret
mov
aam
les
mov
ret
insb
movsl
aam
stos
pusha
pop
test
add
or
jle
and
mov
push
shll
ja,pn
leave
pop
adcb
sahf
rclb
and
sbb
std
adc
xor
add
jnp
dec
sbb
notb
mov
pop
cmc
push
xor
popa
and
leave
add
out
mov
iret
int
sti
xor
xor
addb
dec
add
push
xchg
jo
gs
xchg
sub
mov
xor
mov
repnz
mov
inc
aad
adc
mov
hlt
cwtl
pop
or
add
cmpsl
hlt
dec
and
inc
or
pop
jno
add
fucomi
or
or
add
out
aas
and
outsl
xlat
jnp
mov
xchg
sub
inc
jo
repnz
cmp
inc
mov
xchg
xchg
sbb
out
gs
data16
cld
jmp
push
outsl
sub
add
stos
rcrb
dec
das
popa
loopne
popa
add
in
mov
xor
add
popa
cmc
xchg
sbb
cli
fucomp
jae
pop
sub
push
sub
inc
pop
add
int3
cmpsb
cmc
pop
inc
add
std
jb
roll
in
ja
pop
cli
neg
repz
nop
sbb
pop
enter
mov
xor
add
out
pushf
mov
xor
loope
inc
xor
add
lret
dec
enter
hlt
sbb
add
and
adc
mov
add
mov
adc
std
adc
push
mov
adc
shlb
out
mov
xchg
movsl
nop
push
sub
call
inc
lds
add
shl
and
lret
int3
jns
sbb
add
xchg
push
xchg
and
cs
lret
dec
pop
and
adc
xchg
and
sub
mov
sub
das
mov
sbb
nop
add
cmc
in
push
cmp
rorl
dec
mov
pop
sub
notl
push
pop
mov
dec
sub
mov
sbb
mov
add
imul
pop
sahf
xorb
rcrb
sbb
xor
enter
dec
sub
cmpsb
add
lret
pop
pop
jle
inc
push
push
jge
fistpl
sub
shl
sub
shlb
dec
mov
lock
test
lret
stc
xor
xchg
rolb
mov
les
jg
es
ja
sub
or
movsb
fxch
xchg
mov
and
fsubr
add
in
loope
mov
sbbb
add
jle
lea
mov
xchg
sbb
ss
mov
cmp
xor
sub
mov
loopne
in
int
dec
lock
and
cld
push
add
pop
xchg
call
in
cmp
bound
les
mov
jno
add
daa
test
inc
pusha
stos
iret
push
shrl
js
mov
enter
mov
inc
lock
mov
inc
mov
sub
add
test
mov
fldl
adc
stos
add
cltd
xlat
adc
sub
push
in
sub
scas
xor
call
add
sub
loopne
inc
jl
add
stos
xor
icebp
clc
lahf
jmp
decb
push
int3
out
add
stos
fwait
lods
xchg
jno
jecxz
or
xchg
pop
or
pop
popl
je
out
call
pop
sub
outsb
loop
add
jge
xchg
jno
sbb
or
xchg
pushf
mov
dec
add
xor
jno
add
mov
xor
cmp
lods
rclb
and
pusha
mov
dec
sbb
mov
movsb
sbb
push
sbb
sbb
lods
adc
pop
jns
mov
sub
int
inc
lret
cltd
repnz
jmp
adc
sbb
push
rolb
cmp
pushf
out
xor
inc
mov
pop
mov
fldl
subb
mov
cmp
lds
in
pusha
or
inc
or
sub
dec
imull
call
mov
sbb
mov
xchg
jne
enter
dec
jns
rcrb
adc
dec
jo
insb
xor
dec
cs
mov
arpl
mov
push
pop
and
loopne
in
adc
faddl
es
adc
add
pop
loopne
imul
mov
mov
push
xor
jmp
push
adcl
sbb
test
popa
xchg
outsb
xchg
subb
push
inc
and
cltd
test
and
add
dec
xchg
bound
jo
adc
movsb
loopne
js
cmp
push
ds
mov
mov
push
clc
fiadds
out
and
inc
shl
pop
sbb
add
adc
sbb
cmp
lock
cmp
test
pop
xor
add
lret
shl
js
or
dec
push
aas
fsubrl
and
stos
mov
mov
inc
xchg
mov
movsb
and
inc
push
jmp
in
sbbl
mov
pop
pop
or
ret
adc
mov
or
or
call
push
test
cs
mov
pop
adc
dec
mov
orl
sbb
ficoml
mov
leave
insl
jmp
xor
push
mov
mov
inc
in
int3
nop
pop
in
outsb
adc
ficoms
or
sub
push
mov
lock
xchg
cmp
cld
pop
or
mov
inc
adc
push
or
lock
or
inc
rolb
rclb
jo
mov
and
shl
nop
dec
push
movsb
cmpsb
inc
pop
js
inc
fadds
push
adc
add
pop
xor
and
test
sar
inc
dec
insl
add
ss
adcb
imul
xchg
cwtl
xchg
and
jp
pusha
add
lahf
adc
xchg
addb
fimull
aad
push
call
addr16
in
aas
scas
call
mov
loop
xor
pop
add
orl
repnz
push
and
lods
int3
aas
fmull
sti
jo
inc
int
shlb
rorl
inc
lret
rorb
test
fld
cmp
and
inc
mov
push
in
add
xor
cmpsb
aad
add
fstpl
pop
sub
mov
test
push
mov
cmpsb
or
ret
mov
pop
int
in
jo
sub
cmp
adc
loopne
clc
adc
sub
fs
inc
lods
add
and
flds
fldenv
and
or
or
movl
xor
dec
xor
lods
pop
lret
pop
shlb
push
mov
pop
sbb
cmp
cs
clc
or
adc
or
ljmp
stos
pusha
movsl
popf
fldl
xor
lock
mov
push
pusha
mov
ret
mov
repnz
push
push
bound
das
es
popf
mov
out
xchg
das
or
nop
xadd
adcb
aam
push
adcl
addr16
cwtl
lret
and
push
add
inc
jg
shlb
add
fadd
into
je
pop
shll
sbb
scas
pop
push
mov
stos
arpl
aad
add
lcall
mov
shl
and
faddl
xor
and
dec
jmp
dec
je
jno
popl
dec
shlb
xchg
sbb
hlt
push
pop
push
shll
sub
sub
dec
xlat
add
int
cmp
jo
cld
and
xor
push
add
sbbl
add
mov
xlat
cli
rcr
and
fmuls
scas
test
mov
add
push
fisttpll
xor
cltd
hlt
add
inc
test
pop
sub
fnstenv
call
dec
xchg
adc
cmpsb
sub
and
xor
subl
or
sbb
mov
or
dec
pop
imul
sub
ret
outsb
and
xchg
aad
or
ja
sti
into
pop
mov
and
mov
out
and
pop
dec
pop
inc
sbb
pusha
or
sub
inc
stos
pusha
xor
jnp
inc
pop
xorl
aam
or
xor
shrl
mov
lock
nop
push
pop
test
ror
test
lahf
or
bound
js
pop
or
call
mov
inc
sub
clc
lea
add
loope
xlat
fisubs
push
test
outsb
mov
adc
add
push
cltd
gs
pop
sub
or
cmp
shll
sbb
mov
xor
pop
cmp
mov
jnp
lods
sub
mov
lock
or
mov
xor
clc
pop
jo
les
pop
cmp
push
add
loope
adc
or
cmp
hlt
enter
loopne
mov
or
add
dec
mov
das
xor
aam
or
cmpsb
mov
lds
xor
andb
test
ficoml
scas
adc
add
add
gs
mov
cld
mov
test
add
xor
push
add
sahf
test
adc
cmp
push
call
mov
pushf
shlb
dec
aad
mov
xchg
cmpb
test
ret
aaa
and
jo
sub
inc
call
or
and
and
pusha
sbb
out
add
mov
arpl
dec
test
rcr
test
cld
mov
out
nop
inc
jmp
addr16
add
push
in
pmulhw
lret
sub
fs
jl
mov
mov
add
pop
mov
lods
pop
cld
cmp
cs
xor
jecxz
lret
dec
add
jmp
lock
loope
sbb
in
out
jne
pop
xor
push
cmpsb
inc
ds
cld
sub
inc
mov
inc
cmp
data16
out
addr16
cmpsl
push
cmp
leave
mov
loope
add
ror
cmp
and
divb
sub
in
dec
iret
push
push
pop
push
out
or
mov
push
xchg
add
test
repnz
adc
stos
push
jle
add
pop
pusha
ss
loop
mov
cmpsb
add
mov
or
lret
enter
hlt
rcrb
popa
adc
aas
lret
int3
test
mov
repz
leave
inc
sub
add
icebp
aam
jb
mov
pushf
in
popa
or
jae
in
add
add
sbb
es
pop
and
xor
jne
stos
add
xchg
cmp
popf
rcrb
pop
pop
xchg
out
add
aad
mov
repnz
cmp
push
loop
jns
xchg
add
xlat
ficompl
fbld
xor
out
cmp
imul
gs
movsb
cmp
fcom
lods
cli
loopne
mov
jne
pop
sbb
cmp
push
or
movsl
jns
cmp
push
mov
fcmove
inc
sahf
dec
and
add
loope
or
pop
or
mov
mov
push
inc
lahf
inc
test
loopne
dec
repnz
jle
or
pushl
mov
mov
loope
dec
pop
push
andb
mov
add
movsl
cmpsb
out
subl
aad
mov
add
dec
xchg
add
mov
fmuls
or
inc
cmp
fs
add
ljmp
mov
out
dec
scas
insl
shrb
jae
sub
xchg
add
daa
push
push
ret
pop
outsb
mov
loop
xor
push
add
adc
fdivl
dec
mov
popa
popf
test
jmp
and
adc
test
in
shlb
sub
push
outsb
dec
sahf
add
outsl
push
stos
and
mov
jge
ds
lods
or
dec
push
xchg
or
dec
add
push
in
sub
add
icebp
jle
dec
xchg
leave
jns
test
and
mov
call
cmp
pushf
push
xchg
outsl
push
xchg
cmp
pop
jmp
mov
push
into
clc
and
rcr
in
or
lret
test
in
inc
inc
call
xor
fcomps
or
movsl
xchg
dec
out
and
jo
lock
fs
cvtpi2ps
loopne
adc
cmp
inc
bound
cmovbe
pop
stos
sahf
xor
push
sbbl
sahf
push
or
fadds
mov
add
popaw
dec
or
pop
lret
or
mov
inc
adc
test
add
pop
add
xchg
push
orb
test
push
pop
inc
orl
jle
jp
or
jecxz
push
imul
pop
xor
and
adc
mov
dec
sub
add
inc
push
sahf
cltd
add
test
jp,pt
add
xchg
jbe
orb
cmp
jl
xchg
dec
mov
sahf
sbb
ret
outsl
sub
fadds
test
inc
xchg
xor
push
stos
sub
adc
sub
mov
stos
xchg
adc
imull
es
xor
inc
cwtl
xor
jecxz
hlt
aad
add
jg
mov
fiaddl
jno,pt
mov
or
ficomps
or
repnz
in
or
push
jb
add
adcl
repz
addr16
jno
arpl
aas
add
add
and
fs
pop
out
loopne
xchg
pcmpeqd
aad
add
stc
jecxz
mov
aas
add
or
ja
add
cmp
jmp
lea
jbe
mov
daa
pusha
mov
xchg
mov
sahf
in
or
int
xchg
add
movsb
add
add
int3
add
dec
push
adc
sbb
push
pop
adc
movsl
js
push
movsl
add
jbe
and
cmpl
leave
xchg
jbe
insl
add
push
push
push
xchg
popa
fbstp
add
mov
mov
sbb
fdivl
or
jne
sub
mov
in
and
push
mov
shl
cmpsl
stc
xorl
dec
cmp
jne
push
ffreep
xchg
mov
shl
inc
ljmp
add
mov
and
insl
sbb
filds
shrl
popf
cmp
dec
ss
fcomps
and
add
mov
push
and
add
mov
sub
adcb
js
mov
out
cmpb
lcall
sarb
scas
jmp
cmp
mov
andb
mov
pop
and
push
leave
insl
xchg
bound
outsb
lds
into
adc
mov
mul
shlb
notb
sti
sbb
inc
inc
in
in
inc
rolb
add
and
fiadds
add
push
mov
jmp
lcall
cmp
addr16
dec
xchg
jp
out
jl
or
aas
shl
inc
add
subb
call
loope
jge
cmp
mov
jmp
adc
es
js
shr
mov
mov
int3
ss
xor
test
popa
mov
loopne
mov
or
sbb
or
add
pop
jbe
pop
pop
cli
cmpsl
add
add
sub
mov
mov
pusha
outsl
lea
in
lods
shl
mov
popf
negl
add
mov
pop
or
in
imulb
pop
pusha
or
adc
xchg
outsb
push
add
popa
js
add
aas
inc
shlb
icebp
sbb
lea
add
data16
outsl
bound
sbb
arpl
mov
sub
add
mov
mov
sub
inc
dec
xor
leave
mov
idivb
adcl
push
nop
shlb
jecxz
jbe
xchg
xor
mov
or
testb
pop
rolb
cmpl
je
aas
cwtl
insb
cltd
xchg
add
sbb
ds
and
andb
sub
inc
fadd
hlt
and
sub
mov
mov
inc
inc
pop
push
movsb
scas
cmp
cmp
inc
add
stos
fimuls
sbb
imul
out
pop
push
nop
xchg
add
fcompl
xor
push
add
jp
ret
and
sub
scas
jle
cld
dec
pop
cmp
rorl
dec
in
loop
and
test
loopne
sub
fadd
out
int3
lods
push
add
test
shlb
add
jno
sbbl
mov
cmp
mov
adc
out
add
rcrb
add
mov
std
and
cmc
push
sbb
pushf
pop
sub
mov
jmp
xor
lcall
ret
cmp
add
daa
in
add
mov
pop
mov
cltd
add
pop
push
scas
or
enter
dec
push
fidivs
fimull
and
add
cmp
pop
push
es
aaa
cli
loope
or
add
imul
je
add
inc
sbb
popf
jp
adc
add
add
sahf
pop
lock
adcb
add
cmc
scas
add
add
sbb
and
sub
sahf
lret
add
ret
aam
sbbb
xor
add
add
sub
mov
int
enter
pop
jl
push
test
or
je
in
add
mov
ss
push
inc
xorl
mov
add
leave
sub
push
add
push
inc
test
mov
cs
insl
pop
subb
dec
std
inc
jmp
movsl
add
push
mov
xchg
dec
add
test
or
popf
ds
xchg
out
mov
push
fcomp
stc
dec
loope
jno
sti
xor
inc
add
nop
add
daa
inc
sahf
jbe
xor
cltd
dec
xor
insb
sbb
imul
mov
popa
hlt
test
fidivs
xchg
mov
cmp
imul
or
jl
add
or
test
ftst
xchg
jae
pop
or
repnz
fmuls
push
cltd
add
push
push
dec
add
jno
rcl
add
xor
mov
push
cmp
adc
addr16
pop
mov
cmp
mov
rol
testl
je
subb
testb
add
add
pop
adc
cli
pop
fcom
mov
add
adc
xchg
or
or
add
jge
fstl
sub
adc
add
clc
mov
add
sub
cmpsl
mov
or
out
xor
cmp
scas
je
xchg
fisubs
in
arpl
sbb
leave
test
or
repnz
inc
cmpsb
pop
add
mov
out
add
mov
mov
das
jnp
sub
xchg
bound
adc
or
testl
fadds
and
lock
rcr
xor
mov
xchg
pop
xchg
add
cld
add
sbb
cwtl
movsl
clc
cmp
add
add
loop
mov
or
dec
pop
jnp
test
or
inc
mov
leave
jge
int3
mov
sub
cli
jmp
pop
stos
cmpsl
sbb
and
fisttps
sub
lock
inc
lcall
and
or
add
pcmpeqb
mov
adc
shr
mov
jae
outsl
pop
clc
mov
aas
or
sub
push
cli
sbb
or
jge
or
insl
adc
adc
add
pop
inc
out
mov
fst
or
push
jo
pop
add
int
nop
push
dec
mov
lds
loopne
rorl
ffree
insb
add
jns
sti
pop
fiadds
xchg
lahf
push
sarl
int3
sub
lret
nop
add
cmp
loope
cmp
add
lods
jl
dec
push
in
pusha
push
aaa
push
jnp
push
push
testb
xor
push
test
add
add
iret
cld
repnz
pusha
psrld
adc
nop
add
cmp
js
jbe
nop
xor
xor
hlt
jle
out
add
mov
pop
pop
adc
loopne
push
mov
or
adc
into
sbb
mov
adc
adcb
pop
mov
mov
cmp
xor
mov
push
push
and
add
adc
ja
fcomps
add
push
psubusw
rorl
and
xchg
inc
enter
push
sahf
mov
mov
add
inc
dec
fiaddl
cmp
push
and
fs
ret
dec
mov
add
add
scas
outsb
dec
test
addr16
xchg
dec
inc
inc
jmp
cmp
xchg
dec
sub
test
add
outsb
add
inc
mov
fdivs
ret
mov
sub
fnstenv
inc
cwtl
mov
add
jp
add
xchg
loope
lret
mov
ja
mov
pusha
enter
xor
push
cwtl
insb
xchg
adc
test
in
and
movsl
lods
add
xor
inc
pop
and
inc
xor
push
arpl
cli
popa
pop
div
xchg
sbb
test
add
adc
sub
fildll
pop
cmp
mov
or
sbb
lods
es
cltd
adc
data16
add
or
xchg
arpl
nop
mov
repnz
or
into
add
or
push
xlat
add
imul
test
pusha
aaa
cmp
ja
xchg
pop
fwait
xchg
insb
mov
xor
cli
add
pop
scas
pop
add
xchg
pushf
test
mov
jmp
ja
scas
or
je
pop
pusha
inc
loopne
cmc
cmp
sbb
jecxz
loope
sub
push
mov
inc
in
and
mov
push
loope
adc
xchg
adc
repnz
and
sarb
push
or
int
rolb
add
mov
dec
in
rclb
add
jp
cmp
or
ljmp
data16
pop
rcrb
push
cmp
nop
jno
push
push
xchg
mov
mov
push
cmp
jne
cmpsb
add
pop
push
loope
xor
aaa
inc
decl
iret
ja
arpl
pop
add
movsl
push
fistl
pop
testb
jbe
dec
mov
ret
add
insb
test
aam
add
fidivl
mov
xlat
loop
int3
sub
xor
faddl
popf
mov
pop
insb
jmp
frstor
aam
sub
mov
and
shl
xchg
jg
das
mov
rolb
std
rcr
mov
dec
jae
jno,pt
xchg
outsl
add
ljmp
xor
popl
int3
xchg
xlat
inc
imul
push
out
scas
inc
sub
pusha
dec
enter
int
loope
mov
cs
arpl
sub
add
ss
leave
fcompl
into
xor
adcl
jne
xchg
test
int3
leave
adc
lds
push
jl
add
inc
inc
cmovno
xchg
jo
inc
icebp
add
loop
add
mov
inc
sti
pop
sbb
xchg
fstpt
iret
add
or
mov
dec
nop
leave
int
lods
mov
add
pop
es
cltd
bound
fs
movsl
xor
ljmp
lahf
stos
dec
push
adc
pop
add
fstpt
pop
pop
outsl
cs
jl
xor
sub
iret
enter
fadds
shll
orb
adc
lock
or
insl
sahf
subl
jo
mov
nop
adcl
aam
imul
mov
jb
pop
in
jmp
lock
add
and
mov
sub
push
std
pusha
pop
loope
or
push
pop
mov
in
pusha
dec
xchg
cmp
add
cmpsb
cmp
sub
add
gs
xchg
pop
cs
mov
call
imul
cmpsl
pop
mov
out
aaa
xchg
bound
ja
jae
cmovne
test
insb
into
add
clc
cmp
push
push
shlb
cmp
fldl
cmpsb
mov
sub
cli
cld
inc
sbb
sarb
jne
add
out
shrb
clc
xor
xchg
and
inc
push
and
lahf
out
pop
cld
bndstx
lret
adc
shrl
lea
test
inc
fsubr
lret
and
mov
repnz
mov
test
cmp
nop
test
stos
mov
cld
fldt
and
pop
push
inc
mov
mov
jnp
dec
add
clc
repnz
in
inc
xchg
mov
rcrb
mov
jmp
or
push
xchg
adc
mov
push
add
rorl
loopne
das
orb
cld
xchg
or
fs
lahf
xchg
adc
imul
adc
hlt
addl
andb
sub
add
xor
jg
fdivl
pop
clc
pop
insb
insb
jle
mov
jnp
ja
dec
add
movnti
mov
xchg
faddl
add
pop
cmp
lods
cmp
lcall
popa
inc
adc
ror
mov
add
ljmp
add
xchg
fmuls
sbb
sarb
repnz
and
xchg
dec
mov
loop
mov
sbb
cwtl
xchg
subb
add
arpl
cltd
inc
lods
int3
mov
std
lret
lahf
cmpl
es
dec
xchg
adc
pop
add
sbb
jns
lock
sub
mov
out
stos
ret
rol
push
or
and
adc
out
stc
jecxz
test
xor
sub
jl
cmp
xor
sbb
out
fadds
dec
xor
inc
adc
jno
xchg
xchg
and
xor
cmp
cmp
test
fisubl
xchg
jno
jp
add
aam
or
xchg
add
pusha
sub
movsb
mov
xor
sahf
outsl
stos
jg
les
mov
cwtl
aam
dec
enter
xor
jecxz
stos
add
xor
lea
add
fs
in
mov
xchg
enter
jl
in
jo
wrmsr
movsl
pusha
inc
mov
pop
dec
sahf
pop
push
cmp
mov
push
jns
mov
lcall
sbb
mov
dec
hlt
add
sbb
outsb
imul
roll
mov
add
stos
sub
sub
in
rcrb
jmp
inc
or
fstpt
loopne
mov
ds
push
rcll
fistpll
jo
rolb
inc
int3
cmp
adc
sahf
sbbb
into
iret
pusha
call
int
nop
dec
stc
push
or
gs
arpl
pop
jp
out
in
and
xchg
add
inc
sub
pop
jo
test
repz
dec
jns
add
xor
ret
sub
repz
mov
cmpsb
pop
add
dec
xchg
add
pusha
rcll
pop
sarb
xor
or
mov
flds
jae
push
or
inc
add
jae
jne
add
mov
fs
adcb
add
mov
test
inc
cmp
es
add
inc
cmp
incb
icebp
mov
mov
cmp
sbb
movsb
ds
jecxz
and
mov
add
aam
jnp
mov
mov
jle
and
sbb
cwtl
mov
ret
nop
add
and
adc
push
xorps
lods
lret
aaa
add
mov
mov
push
lcall
or
mov
push
cltd
mov
ret
stos
jle
inc
add
pop
and
adc
inc
jb
sbb
dec
mov
and
aad
lret
sahf
push
push
cmp
movsb
mov
add
sbb
pusha
andb
mov
imull
push
add
mov
imul
push
andb
dec
arpl
add
jnp
cli
add
adc
pusha
inc
into
xchg
adc
or
xor
xchg
mov
sub
in
mov
ret
jg
out
mov
sbb
nop
push
add
stos
mov
add
insl
shlb
adc
cmc
pop
add
and
add
fnstsw
stos
adc
movsl
add
iret
je
int3
lret
add
mov
push
sub
add
iretw
inc
add
pop
inc
test
stos
push
and
data16
mov
outsl
adc
loopne
add
sbb
or
lret
sub
xchg
add
ret
icebp
pop
repnz
xchg
aam
dec
mov
pop
cmp
jae
ds
push
and
mov
nop
js
ds
add
out
gs
sbb
dec
unpcklps
sarb
push
dec
push
mov
pop
jp
push
mov
mov
xchg
jl
test
xorl
pop
subl
sbb
mov
rorb
or
in
mov
jbe
nop
test
mov
add
push
stos
inc
dec
push
dec
jne
jae
imul
sub
shlb
and
xor
inc
add
pop
aaa
mov
cmp
enter
lods
lea
sbb
repnz
test
pop
add
lods
stos
daa
hlt
lods
psubsb
cltd
inc
pop
mov
add
sub
xchg
out
dec
pusha
add
into
dec
dec
loope
in
movntq
out
mov
xchg
pop
or
sub
cltd
mov
pusha
ret
ljmp
mov
mov
pop
sub
test
push
jp
dec
popa
scas
lock
rolb
xchg
mov
add
pop
cmc
sbb
jg
add
xchg
rcrb
cmp
or
xchg
sbb
rorl
push
imul
cmp
addb
jg
cmc
jno
add
lret
and
repnz
dec
dec
lods
in
out
add
ss
sbb
push
lahf
sbb
mov
es
add
jge
cld
jecxz
arpl
inc
gs
or
aad
add
in
daa
ljmp
int
and
pop
push
fildl
push
pusha
or
cmp
andb
imul
xchg
cmp
jmp
mov
xchg
addb
movsl
add
in
adc
cmp
sarb
sbb
cwtl
jle
dec
jno
sbb
scas
stos
inc
clc
jecxz
add
add
mov
or
inc
add
push
inc
int
xor
and
push
and
or
in
add
aas
pop
push
rol
subb
adc
into
inc
movsl
gs
jne
add
mov
add
fs
lock
push
push
add
and
mov
pop
pop
xchg
add
mov
pusha
stos
sti
add
ficoms
add
or
xchg
in
mov
outsb
sahf
mull
add
push
cwtl
js
lcall
adc
add
inc
imul
inc
sahf
cmp
push
test
idivb
loop
mov
and
xchg
adc
in
add
mov
stc
filds
push
lea
in
add
cmp
jg
cmp
in
jbe
push
cwtl
mov
lret
imul
jnp
repnz
ljmp
xlat
add
out
jns
pop
je
add
data16
xchg
dec
out
test
cmp
sub
xchg
mov
or
lahf
inc
jl
out
jno
add
xor
pop
cmpsb
fsub
daa
cmp
sahf
ja
cmp
push
aad
fisttps
repz
stc
and
andb
decb
sub
add
fcompl
or
sub
popf
xchg
or
enter
adc
jno
mov
pushf
add
popf
cwtl
and
xor
jns
div
repz
sbbb
mov
das
add
pop
adc
dec
jbe
enter
ror
je
ljmp
psubd
pop
and
pop
ljmp
cmp
lcall
and
ret
xor
sub
jg
inc
mov
faddl
jecxz
sbb
in
jo
sub
bound
xchg
cmp
popf
cmp
movsb
mov
add
sbbl
sub
lds
rorl
pop
ljmp
data16
inc
add
or
aas
cli
fildll
adc
mov
mov
xchg
xorl
xor
xchg
add
or
add
push
mov
stos
dec
out
mov
prefetchnta
div
rclb
sahf
jne
nop
and
test
or
cmpb
sub
xor
adc
add
add
jg
addb
cs
lea
mov
aam
cwtl
push
push
out
data16
insl
sub
hlt
dec
cwtl
lea
push
clc
popf
inc
sub
adc
and
pushf
inc
push
out
enter
ja
cmp
adc
fdivrl
repz
add
sub
rcr
add
mov
cmpb
dec
pop
mov
leave
and
or
and
pop
cwtl
pop
dec
loope
ret
add
xchg
rcr
sahf
aam
mov
push
jmp
sbb
add
jne
inc
inc
sub
nop
iret
daa
dec
aaa
rolb
inc
flds
pop
push
andb
sar
add
pop
adc
and
mov
ljmp
cmc
jns
mov
loopne
rolb
ds
repnz
fnstenv
in
push
dec
mov
sbb
push
call
stos
sbbl
outsl
es
orb
sub
mov
fcomip
jg
add
inc
dec
lds
inc
cs
lahf
pop
or
sbb
add
xor
add
push
mov
fwait
sub
aam
dec
cld
add
inc
hlt
add
xor
scas
in
add
cmp
jne
ja
pop
xor
fcmovbe
testl
lds
cmp
dec
jl
and
add
repz
std
icebp
and
cmp
inc
aaa
add
and
je
rclb
lock
pop
pushf
cmp
push
popf
ffree
aam
fmulp
in
cld
add
cmp
cmp
add
ljmp
push
mov
cmp
aaa
cmc
sbb
lea
rorl
andb
les
jnp
hlt
jp
jle
push
adc
add
xor
mov
or
rorl
into
cmp
and
std
xor
mov
aam
leave
cmpsl
call
pusha
in
outsl
add
dec
xchg
inc
jecxz
dec
cmp
js
mov
and
or
ljmp
or
gs
insl
xor
and
bound
adc
incb
loopne
jbe
xchg
mov
icebp
in
iret
bound
adc
dec
xchg
mov
push
in
inc
xchg
or
push
jnp
pop
aam
xchg
loope
xorb
ja
dec
jo
aad
movsl
andb
iret
outsl
mov
add
dec
push
jb
sti
inc
mov
mov
add
pusha
adc
movsb
adc
add
xor
add
mov
dec
push
sub
adc
shll
push
ret
add
lds
push
nop
xor
add
bound
and
fsub
je
or
rcrb
cmp
adc
jle
xchg
rorb
andb
stos
or
jg
cmp
pop
mov
xchg
mov
adc
adc
jle
add
jmp
adc
imul
add
lret
jle
xor
xchg
sbb
mov
cmp
add
and
movsb
add
icebp
jns
shll
cli
and
data16
fdivrl
out
gs
mov
test
sbb
add
xchg
das
cli
or
mov
pop
cmp
enter
mov
or
push
inc
jmp
push
shlb
push
jnp
mov
pop
pop
and
dec
xchg
or
inc
inc
in
pusha
xor
jbe
out
jl
cmc
inc
clc
fs
or
pop
sub
sbb
das
nop
les
xor
cld
mov
repnz
mov
sbb
sarl
subl
sbb
sub
mov
in
les
inc
fnstcw
push
add
sarb
lods
std
cmp
cli
adc
lcall
jmp
ds
jle
fisttpll
inc
pop
inc
xchg
jbe
xor
dec
xlat
lods
movl
je
dec
cli
add
sub
popa
adc
fsubrp
push
clc
cltd
sbb
push
mov
sub
gs
xchg
out
xor
pop
jns
setns
mov
push
outsb
mov
xchg
and
xchg
push
shlb
add
jns
sbb
lods
data16
and
cmp
mov
sbb
shr
pop
sbb
xchg
xchg
xchg
add
outsl
add
dec
sbb
ja
or
xchg
sub
adcl
mov
into
xchg
push
clc
push
sbb
clc
in
adc
bound
popl
mov
lret
and
popa
cmp
sbb
scas
push
mov
sub
jl
out
dec
xchg
mov
mov
or
enter
adc
incl
dec
std
cmp
pop
or
sbb
cltd
or
push
cmp
call
dec
xor
xor
lret
xchg
jl
push
add
movhps
xor
add
push
xchg
enter
insl
shrb
addr16
mov
push
mov
mov
incb
xchg
ss
jmp
mov
ds
lock
cmp
inc
cltd
sbb
sbb
add
jo,pn
add
nop
cwtl
pop
add
jecxz
hlt
sti
mov
cmp
dec
push
xchg
pop
cmp
lock
cmp
add
into
adc
imull
xor
adc
pusha
test
inc
sub
cmp
adc
cmc
ds
jbe
out
jp
cltd
xor
cmpsb
lret
adc
cltd
inc
add
shl
nop
adc
cmp
sub
mov
push
jl
jmp
jo
sbb
add
popa
pusha
outsl
popa
enter
add
testb
imul
cmp
xor
inc
call
or
adc
pop
cmp
enter
mov
aad
outsb
cmc
fadds
xchg
lods
mov
aam
scas
pop
clc
adc
add
fmull
sub
enter
inc
aam
mov
jmp
and
loope
outsl
add
iret
xor
sub
loope
xchg
adc
arpl
push
movsl
mov
dec
xor
xor
push
add
lods
rorl
outsl
push
mov
or
adc
aaa
xchg
adc
adc
pop
pop
cli
imul
lret
in
add
mov
mov
or
jae
imul
out
adc
or
outsb
and
arpl
movl
jno
inc
mov
jae
mov
loop
add
shll
enter
int3
in
add
lret
or
pop
call
sahf
or
dec
nop
sub
add
add
add
adcb
xor
in
sub
inc
pop
mov
outsb
and
in
and
jne
cmp
or
popa
pusha
inc
loopne
loopne
repnz
fwait
rolb
add
adc
and
pushl
sbb
cwtl
movsl
lahf
sub
add
or
or
add
xchg
ljmp
adc
js
or
mov
push
in
stc
das
or
cmp
add
cmpb
ja
les
fistpll
sbb
jnp
cmp
pop
rcrb
mov
and
mov
pop
inc
push
cmp
divl
fcomps
sbb
push
push
es
cli
shr
shrb
sbb
mov
inc
sub
mov
xor
sbb
xchg
mov
and
andb
xchg
mov
inc
push
and
lar
lret
fidivl
out
mov
adc
adc
rcrl
sbb
inc
jno
xchg
xchg
dec
inc
cmp
push
mov
pop
dec
call
ret
mov
in
call
and
inc
call
xchg
mov
mov
pop
dec
jb
mov
arpl
xchg
push
add
repz
adc
roll
inc
call
int3
xor
add
pusha
jbe
leave
out
movsb
and
push
mov
cmp
addb
dec
les
xchg
push
lret
rolb
mov
pop
inc
cltd
sbb
iret
xchg
inc
aas
cmpb
ds
mov
lahf
push
or
cmp
loopne
mov
les
jmp
pushf
push
jg
xchg
popa
dec
addl
int3
adc
pusha
cmp
add
lds
outsb
jne
scas
rolb
pop
js
add
xchg
movsl
push
popf
orl
cwtl
sub
shlb
scas
jns
jns
sbb
mov
stc
dec
or
int
inc
mov
inc
adc
xor
hlt
adc
adcb
and
add
mov
xchg
jmp
mov
adc
pop
or
inc
cld
xlat
add
jo
out
or
jno
mov
add
out
and
add
inc
test
nop
addr16
jae
jle
or
loope
dec
xor
jb
add
xor
cmp
out
add
cmp
add
sbb
xchg
and
cmpb
adc
leave
clc
push
sbb
in
mov
fcompl
pushf
lcall
xchg
nop
imul
add
test
and
int
and
xchg
leave
push
cmpb
daa
sbb
add
dec
lret
cmp
and
inc
xchg
and
mov
lahf
popf
inc
adc
xorb
mov
xchg
and
sbbb
sbb
jne
lds
add
pop
pop
inc
and
jo
adc
adc
jae
jno
xor
popf
rcr
xchg
inc
mov
test
sbb
xchg
dec
std
arpl
mov
mov
mov
je
fdiv
cmpsb
xor
push
sub
dec
sbb
sbb
jne
iret
add
orb
lcall
push
jnp
xor
adcl
int3
mov
push
jp
cltd
cwtl
test
shrb
jo
sub
sub
sbb
pop
xor
sub
sub
rolb
cli
sub
pusha
or
jo,pn
mov
jle
dec
sub
jo
add
push
xchg
sub
mov
xor
addb
faddl
in
add
adc
and
jl
lods
or
xchg
mov
add
dec
mov
push
fwait
xchg
xchg
adc
ja
cmp
mov
mov
js
testb
and
rclb
outsb
nop
add
hlt
cmp
push
bound
push
mov
repz
xchg
loopne
sub
dec
pop
mov
mov
fsubrl
shrb
int3
pusha
cmp
mov
and
dec
pusha
pusha
xor
dec
and
dec
and
subb
add
add
stc
out
jle
cmp
inc
out
inc
fldcw
leavew
xchg
repnz
cli
mov
add
pop
mov
subl
std
sub
mov
jecxz
fildll
je
push
add
pop
call
mov
pop
pushf
cmp
add
mov
lcall
mov
inc
mov
into
dec
pop
fstpt
inc
and
in
jnp
mov
dec
push
add
pop
clc
std
cmp
add
nop
mov
negb
mov
cmpl
pusha
stc
arpl
js
push
jle
rcl
pop
inc
inc
shld
lods
icebp
inc
xor
pop
cwtl
sbb
mov
inc
push
add
popa
push
push
add
cmp
xor
cli
sub
add
dec
cmp
add
mov
fisubl
add
sbb
dec
add
pop
push
jo
pop
cmp
and
mov
cwtl
mov
mov
rcrb
dec
cmp
out
sahf
push
shlb
test
inc
nop
lods
in
imul
xchg
push
pop
cwtl
insl
mov
add
jae
inc
out
in
dec
and
inc
cmp
scas
arpl
cmpsl
loop
add
fadds
mov
inc
sub
and
arpl
call
dec
pop
adc
lods
cs
pop
subb
sbb
out
mov
xchg
cwtl
rolb
mov
hlt
push
adc
jo
mov
jae
aas
pop
sub
xor
lret
mov
and
mov
jno
push
dec
clc
or
add
out
cmpsb
je
push
cmc
loope
mov
and
cltd
lock
or
clc
ds
dec
js
add
fmull
and
inc
add
mov
sbb
push
jo
out
dec
mov
or
fs
pusha
push
push
outsl
inc
mov
and
inc
xchg
xchg
lods
xchg
push
sbbb
and
pop
mov
daa
cmp
sbb
xchg
sub
xor
pop
add
sbb
cmovg
enter
push
xchg
mov
lods
icebp
incb
loopne
xchg
ja
inc
leave
add
mov
inc
cmp
cmc
jo
cmpsb
xchg
dec
or
rolb
xchg
mov
xchg
lods
mov
inc
push
xchg
adc
js
orb
loope
xchg
and
imul
sub
mov
clc
aas
xor
add
in
adc
and
inc
and
enter
popa
push
dec
push
lock
faddl
mov
je
sbb
pop
hlt
movsl
and
mov
sbb
adc
push
pop
fcoms
mov
cwtl
push
mov
js
adcb
xor
inc
sbb
add
data16
push
dec
ljmp
int3
and
jnp
daa
fcoms
fisttps
pop
adc
sub
enter
adc
sbb
enter
pop
lret
shll
rcll
add
jo
or
lock
and
je
call
neg
cmpb
sbbl
push
add
insb
pop
cmp
sub
ds
mov
xchg
jge
mov
dec
fldt
ja
lock
push
sti
fisubrl
add
aas
adc
add
mov
popa
in
pop
mov
pop
push
dec
loop
xor
dec
test
xor
fmull
ljmp
pop
fwait
and
arpl
mov
add
xchg
add
jne
adc
mov
jne
mov
bt
push
xor
adc
pmuludq
pop
pusha
inc
fisubl
add
addr16
mov
inc
das
cmp
nop
dec
fs
adc
xchg
mov
adc
mov
sbb
mov
iret
and
es
nop
sbbl
sbb
sub
adc
cmp
push
jae
dec
mov
insl
cltd
jb
and
in
dec
mov
cltd
gs
and
mov
mov
int
xor
pop
or
push
pop
pop
sub
sbb
mov
push
jge
sub
pop
xchg
in
or
lcall
mov
dec
rorb
sbb
sbb
mov
lret
pop
les
jle
call
fcmovnb
cmpb
mov
mov
fsubl
jl
sbb
aam
sbb
jno
add
mov
add
sbb
inc
push
jo
jns
pop
push
sbb
push
add
jno
into
or
xor
notb
test
push
sub
iret
lock
cli
daa
in
and
pop
mov
loop
xor
cli
in
mov
int3
lock
pop
popa
fsubrs
sbb
xchg
xchg
pushf
ja
cli
xor
xor
sub
and
add
cli
xchg
loope
stc
add
outsl
dec
cli
dec
mov
xor
dec
shll
popa
push
mov
insl
add
sub
push
jnp
push
dec
jo
sbbb
xchg
cmpsl
cmp
jne
jl
xchg
push
jg
cmp
adc
jbe
cmpb
and
rorb
or
xchg
sbb
lds
jmp
pop
xor
popf
mov
mov
out
xorb
subb
add
dec
dec
mul
cld
sub
mov
lahf
inc
xchg
test
push
inc
and
mov
xor
insb
mov
repnz
out
loopne
sub
pop
sub
cmp
add
outsb
repnz
enter
punpckhdq
fidivrs
movsb
mov
js
cmp
cmp
mov
and
sbb
jo
leave
adc
in
push
shrb
xchg
movsl
adc
add
cmp
test
dec
sbb
jmp
call
inc
stc
mov
fsubr
movsb
mov
or
int3
mov
jmp
out
jg
add
pop
jmp
incl
mov
sar
xor
sbb
sub
data16
jmp
daa
lcall
jmp
xor
lds
fcoms
lea
jo
mov
loopne
cmpsb
add
sbb
pop
ds
or
push
fisubrl
js
pop
lret
mov
and
add
push
aaa
or
and
sub
cmp
int
or
rolb
jl
sbb
jmp
es
xchg
jo
movsl
lds
ror
int3
xchg
mov
push
popa
and
cmpsl
push
xchg
or
mov
das
dec
in
dec
mov
pusha
jecxz
xchg
pop
pop
lock
or
jbe
cmp
sub
xor
cmpsl
push
xor
adc
pop
lock
jmp
adc
repz
jne
push
ficoms
and
mov
shl
xchg
rol
push
mov
movsb
dec
iret
andnps
push
shr
xchg
xchg
hlt
cltd
and
add
negb
mov
adc
cmovnp
fs
ror
push
xor
fisubs
cmp
sbb
lods
pusha
sbb
out
shll
adc
cmp
add
mov
add
pop
pop
add
pop
in
xchg
ret
adc
repnz
jp
movlhps
jle
xorl
sub
insb
jno
sub
aas
arpl
insl
add
adc
iret
fstps
cmp
add
sbbl
add
cmp
in
adcb
shrl
lret
andb
cmpsl
jle
inc
push
arpl
sbb
cmc
sti
lock
inc
add
out
movsl
mov
int3
test
iret
xor
mov
inc
add
out
movsb
aam
and
add
pop
cs
repnz
add
lea
addl
push
add
imul
out
cmp
mov
inc
ret
sbb
jg
or
xchg
dec
sub
addr16
or
shlb
loope
or
jo,pn
das
xchg
cmpsl
aam
repnz
push
inc
nop
les
enter
call
mov
inc
divl
xor
out
cmp
adc
into
or
and
cmp
cmp
inc
push
ja
xchg
add
into
add
insl
movzwl
jmp
dec
mov
jl
add
stos
inc
xchg
insl
xlat
popa
scas
push
lock
xor
shll
xlat
bnd
mov
inc
push
adc
push
pop
inc
leave
sub
addb
pop
stc
pop
add
hlt
push
in
cmp
mov
ret
inc
cmp
add
out
jmp
les
ss
mov
lock
out
adc
sbb
loopne
cmp
add
mov
dec
sub
sbb
aam
push
xor
pop
cs
ja
je
movsb
add
mov
jle
or
jge
add
andl
das
and
xorl
loope
inc
xchg
icebp
and
test
add
jl
push
dec
jae
mov
cmp
shlb
mov
pop
sar
fmul
add
lea
pusha
ret
faddp
push
test
inc
test
sub
icebp
pushf
fs
imul
inc
mov
cli
sbb
mov
sarb
pop
ret
add
jnp
sub
or
sub
pop
mov
int
ss
xor
xor
xlat
sbb
cmp
add
or
rorl
or
and
mov
sbb
leave
lods
pop
add
cmpsl
aam
loop
pop
or
mov
push
inc
cmp
xchg
je
sbb
jb
addl
xorb
push
add
enter
dec
dec
fmuls
xchg
mov
cmp
add
in
sub
sub
pop
in
shlb
xor
xchg
add
je
cwtl
iret
mov
push
pop
dec
pop
jo
and
jle
sbb
or
int
popa
dec
and
or
or
rorl
sbbb
stos
push
xor
push
jmp
pushf
or
arpl
cld
subb
loop
push
add
loope
mov
daa
mov
pushf
add
xchg
adc
shl
sbb
sbb
pop
lea
insb
or
imul
aad
cwtl
pop
fs
add
enter
jecxz
pusha
and
mov
mov
add
push
dec
jmp
inc
in
push
imul
cmp
mov
pop
in
cmc
out
cwtl
dec
push
bnd
jbe
xchg
repz
hlt
adc
dec
stc
mov
mov
or
sbb
lret
cwtl
cmp
xor
test
andl
pushf
add
fists
cld
outsl
mov
mov
adc
adc
push
add
mov
mov
cli
and
mov
js
add
leave
test
adc
mov
mov
or
in
sub
subl
iret
inc
mov
lock
faddl
or
push
into
pusha
lds
add
loope
xchg
scas
pusha
adc
icebp
in
pushf
mov
mov
test
add
arpl
and
jno
fildl
mov
or
mov
in
add
dec
sub
das
sarb
addb
xchg
scas
or
es
mov
aas
mov
xchg
enter
aas
pop
and
mov
xchg
imul
xor
adc
add
sbb
cmp
pop
push
cltd
testb
and
jle
test
movsb
andb
imul
mov
or
sahf
fisubrs
xor
add
and
push
pusha
push
xor
cmp
pusha
mov
and
dec
inc
loopne
jp
flds
leave
sbb
jmp
mov
inc
pop
loop
mov
add
ds
sahf
add
jns
pop
scas
mov
std
jecxz
push
add
xchg
not
mov
enter
mov
pop
rclb
pop
dec
shr
icebp
arpl
imul
adc
cmp
jl
iret
leave
cmpsb
popa
xlat
jecxz
add
push
pop
mov
orb
mov
das
movsb
jns
sbb
insl
mov
insb
in
sub
mov
test
inc
push
subb
clc
enter
pop
add
pushf
mov
jb
and
inc
fadds
add
push
movsl
add
sub
daa
xchg
adc
adc
mov
shll
outsl
addb
test
ss
iret
addr16
pop
lods
adc
not
and
add
sbb
faddl
sahf
dec
pop
outsl
sbb
or
sti
inc
fsubs
iret
adc
loopne
inc
rolb
cmpb
loopne
test
fiadds
fldcw
sbb
insb
out
or
mov
inc
sub
rorb
fwait
cmp
fs
sbb
in
xchg
adc
jo
in
test
push
adc
punpcklbw
lea
adc
jmp
addb
loopne
inc
xor
ror
dec
es
sub
fadds
cli
pop
mov
call
mov
and
and
inc
add
cmp
push
push
js
stc
inc
pop
add
lds
mov
dec
and
sub
mov
mov
sbb
dec
pop
and
in
xchg
add
mov
inc
jnp
testl
in
mov
je
ficoms
cmp
and
test
mov
mov
xor
add
cltd
jg
jecxz
lock
aam
push
fsubl
adc
test
lea
out
mov
pop
jl
sub
fmuls
or
in
adc
lock
adc
mov
cmc
adc
and
add
lea
das
sar
addl
push
or
add
bound
adc
movsl
dec
imul
cld
in
add
fildll
pop
les
mov
and
and
hlt
push
and
loopne
cmp
lods
cmp
push
pop
dec
sbb
inc
in
ret
cmp
inc
add
sub
cwtl
and
sbb
and
mov
dec
pop
pushf
pop
leave
adc
out
clc
ret
lcall
xor
or
sahf
xchg
add
js
outsl
push
sub
sub
and
fcoml
stc
shl
mov
mov
out
in
xchg
pop
mov
pop
test
movsb
and
loope
pusha
jmp
adc
enter
les
loope
enter
fsubp
sub
inc
push
pusha
aad
leave
pop
sub
add
adc
rol
inc
dec
fwait
sbb
mov
push
cmp
inc
nop
pop
cmp
fndisi(8087
push
pop
pop
lea
imul
and
xchg
jl
push
or
loope
je
enter
imul
jecxz
add
and
mov
xor
fldenv
and
push
add
cmp
xchg
cwtl
xor
mov
loopne
test
mov
and
or
addr16
dec
incl
push
in
push
cmp
and
out
fcmove
add
cmc
adc
jecxz
sti
lock
gs
fst
and
mov
push
cmpsl
or
or
pusha
shrb
sub
add
or
add
and
insl
sbb
mov
das
add
testl
mov
fmull
lea
cmp
sub
cmp
mov
mov
xchg
pop
jle
jne
loop
xor
loopne
add
mov
dec
inc
push
push
add
std
jno
popf
adc
add
xchg
mov
dec
aaa
in
adc
pop
inc
adc
adc
add
cltd
sbb
dec
popa
or
xor
inc
into
pop
insl
or
bnd
fstpt
pop
enter
cmp
loop
pop
daa
enter
jmp
jo
mov
fs
jb
push
adc
sub
dec
pop
sub
les
pusha
loop
push
pop
mov
inc
push
mov
sbb
repz
push
cmpsb
push
popf
aad
dec
andl
xor
nop
inc
mov
in
sbb
xor
cwtl
shlb
aaa
sub
mov
inc
fcompl
xchg
mov
mov
andb
stos
xchg
dec
inc
dec
iret
sub
and
sub
xor
lods
jb
add
cmc
icebp
push
add
fidivs
gs
xchg
adc
mov
loope
cmp
add
xchg
adc
push
dec
sub
or
enter
pop
xor
add
enter
dec
int3
add
push
enter
aam
inc
cmp
sub
xchg
in
and
js
pop
ret
mov
adc
fimull
js
push
cmpsb
mov
pop
adc
fistpl
cmpsl
je
fsubl
aam
or
int3
pop
sbb
out
mov
arpl
popa
lods
pop
mov
xor
sbb
movsb
call
jl
adc
rcl
inc
test
call
adcb
das
jb
jnp
mov
push
ds
mov
lds
dec
gs
and
add
jp
pop
leave
out
or
pusha
xchg
test
pop
sahf
orb
daa
push
or
cmpsl
xchg
rcll
inc
fs
push
jp
or
loope
into
mov
inc
sbb
pop
sub
pop
cld
ja
out
int
gs
fldt
or
fadds
adc
xchg
aas
push
roll
jb
stc
lock
test
daa
and
in
adc
inc
mov
es
pusha
pop
inc
push
add
inc
push
lods
int3
jns
mov
pop
mov
and
dec
in
add
mov
dec
or
pushf
loopne
sbb
push
or
orb
push
jo
std
lret
shl
aaa
inc
xor
test
cli
sbb
and
mov
gs
sub
mov
dec
adc
bound
adc
repnz
cmp
xor
imul
sub
or
cmp
cmpsb
mov
sar
sub
jae
stc
pop
and
out
add
lret
aaa
pop
cmp
and
stc
sti
js
cmp
insl
jbe
adc
shrb
and
cmp
loopne
pcmpeqd
ficompl
cmovge
stos
pop
mov
addb
ret
push
lods
push
or
pop
cmp
add
outsb
fsub
jae
mov
cmpsb
faddl
repz
inc
push
sub
sbb
push
mov
fists
dec
push
mov
cmp
sub
add
lds
jno
cmc
ljmp
add
mov
and
pop
and
in
aad
pop
rcr
sbb
dec
pushf
jno
xor
fmuls
add
or
dec
movsl
lret
sub
mov
stc
pop
jo
inc
testb
pop
int3
mov
dec
and
xchg
or
mov
out
clc
stc
mov
loope
push
dec
push
les
and
ret
mov
add
into
push
or
or
dec
leave
xlat
inc
rclb
int
cmp
mov
clc
dec
xor
adc
add
rclb
and
in
das
xchg
pop
mov
mov
pusha
push
clc
movsb
inc
scas
rorl
dec
cmpsb
mov
ret
ds
sarb
fsub
loope,pn
fadds
pop
fs
inc
cmp
adc
inc
add
mov
pop
dec
mov
gs
adc
sahf
adcb
psubw
mov
leave
add
int3
add
ret
test
lea
dec
pop
push
mov
inc
rcrl
mov
test
mov
cwtl
loop
insb
xor
lea
or
add
cmp
xor
lods
or
pop
aaa
add
out
pop
scas
icebp
sub
or
adc
mov
sbb
or
inc
or
cmp
push
rclb
adc
pop
test
dec
cmpsb
mov
inc
cmpsl
or
out
mov
and
repz
stc
sarl
cmp
dec
js
push
mov
ret
or
cwtl
jno
push
add
les
pop
inc
sbb
xchg
aam
dec
mov
adc
and
push
push
or
sbb
mov
js
pop
fildll
call
je
xchg
jmp
cmp
mov
jb
pop
inc
and
dec
and
xchg
les
sbb
inc
mov
fdivl
inc
sahf
xor
in
pop
or
push
fcoml
arpl
imul
dec
sbb
add
test
out
sti
add
pushf
in
xchg
fcomps
jp
sub
sbb
adc
int3
call
data16
aad
addb
bswap
fidivrs
xor
mov
out
cltd
mov
push
leave
int3
in
shrb
lds
cmp
add
cld
pop
into
push
dec
inc
test
shlb
adc
sbb
mov
movsl
lds
and
jge
adc
push
jp
frstor
adc
mov
lret
jns
add
mov
xlat
and
popl
add
xor
daa
jg
cmp
push
push
and
add
ss
cmp
cmc
add
popa
mov
loopne
lret
loope
adc
fsubs
add
inc
add
sarb
movsb
imull
mov
lret
int3
xor
imul
iret
sub
mov
in
add
jmp
loopne
and
adc
js
js
cli
mov
dec
cmp
repz
mov
jle
prefetch
push
jne
sarl
sub
push
insb
pop
mov
shrb
pop
bound
adc
and
or
pusha
inc
mov
inc
lock
ja
dec
pop
mov
js
insb
mov
aaa
xor
push
jmp
sbb
push
jns
add
arpl
icebp
push
or
cmpb
pusha
add
rolb
repnz
push
mov
lret
cld
enter
pusha
out
jp
loopne
sbb
repnz
xchg
in
repnz
sub
sbb
je
add
xchg
sbbl
sbb
xchg
das
mov
jo
xor
ret
movsl
mov
push
xor
fidivrl
push
xrelease
jl
iret
ds
xor
adc
cmp
mov
scas
movsl
popf
add
and
adc
inc
test
adc
aad
add
adc
lds
pop
adc
inc
sti
add
popa
bound
add
jmp
inc
dec
test
cmp
xchg
cmp
lock
xchg
and
psrad
or
push
fildl
add
scas
lcall
or
imul
stc
sbb
stos
ret
inc
dec
js
fmul
adc
mov
mov
rcrb
or
xchg
hlt
cmpsb
dec
dec
or
adc
mov
ljmp
and
gs
jg
fnsave
rcrb
testb
xchg
pop
cmp
add
stc
bswap
cmp
cld
enter
sub
add
and
dec
and
and
leave
or
std
andl
cwtl
imul
push
stos
das
inc
lods
xor
mov
dec
inc
pop
jecxz
and
leave
xlat
lret
pop
insl
pop
dec
mov
add
testb
pusha
rclb
mov
inc
outsl
test
inc
and
fcmovu
shlb
fsubr
sub
orb
in
mov
dec
dec
and
pop
pop
cld
dec
cli
add
std
test
jmp
inc
xor
dec
xorl
mov
cmp
jno
cmp
enter
fs
mov
mov
mov
pop
add
lock
outsb
mov
or
rcrb
add
out
and
and
addb
sub
or
jb
cmp
and
sti
outsb
es
xchg
add
add
dec
out
xor
and
inc
add
insl
mov
sub
adc
add
jp
movsb
aaa
and
fdivrs
cs
in
lret
jb
add
and
iret
inc
inc
xor
mov
in
nop
inc
mov
mov
lahf
movsb
mov
insb
sbb
push
popa
scas
xor
jp
into
or
push
pop
pop
push
pop
jle
and
xchg
clc
and
cmpsl
lds
mov
xor
in
scas
fs
add
sbb
stos
ds
jg
cmp
mov
lds
test
cmc
mov
mov
insb
fistpll
std
cmp
add
gs
into
xor
call
sub
mov
popa
add
sbb
adc
hlt
jmp
sbb
pusha
syscall
add
test
fs
mov
adc
sub
pop
test
clc
sarb
in
mov
sub
enter
xchg
push
sbb
int3
loopne
movsb
int3
or
add
insb
imul
pop
pusha
xor
outsb
push
inc
std
adc
aad
loop
aaa
sbb
ret
pop
fadds
popa
fldl
nop
add
in
mov
and
loopne
insl
xchg
xchg
lds
dec
sub
lods
jl
push
dec
mov
inc
xor
mov
or
mov
divl
mov
lcall
push
aam
add
push
jns
cs
cmpsb
insb
loopne
andl
add
inc
icebp
jge
ds
mov
notl
fs
loopne
xchg
mov
fbstp
and
repnz
lods
xchg
cmp
sbb
fidivs
imulb
jle
jg
mov
test
bswap
stc
rolb
or
add
dec
and
std
pop
mov
mov
xlat
data16
aaa
xor
xor
jecxz
aam
in
fdivl
fdiv
inc
and
xor
sbb
cmc
ss
mov
add
call
or
adc
mov
adc
adc
cmp
or
pushf
inc
je
jo
and
pop
inc
popa
outsl
xchg
sbb
movsb
xlat
ljmp
aas
popf
jae
dec
or
push
adc
inc
xor
mov
pop
insb
add
pop
push
sub
addb
enter
jle
fs
mov
sbb
enter
testb
push
cli
sbb
arpl
test
add
xor
stc
add
cmp
cwtl
or
orb
cmp
push
pop
or
sbb
stos
sub
or
mov
loopne
and
sbb
outsl
test
jg
rorb
add
test
sub
jle
inc
loop
add
outsl
ficoml
loope
xor
cld
push
aas
nop
add
dec
movsl
repz
push
das
pop
aad
mov
mov
testb
cs
scas
push
test
popa
pop
xor
sbb
xor
daa
cmpsl
sub
fsubrs
out
mov
mov
data16
dec
dec
enter
ds
ss
sarl
in
inc
test
pushf
and
sub
push
xchg
adc
push
sub
dec
mov
xchg
pusha
mov
mov
lock
daa
add
imull
dec
stc
adc
sarl
mov
xchg
pop
out
sbb
lea
mov
jmp
xchg
mov
loope
outsl
loopne,pt
cli
mov
pop
sarb
xlat
pop
negl
mov
inc
sub
rclb
imulb
stc
cmp
mov
add
fldenv
popf
dec
cmp
xchg
insb
xchg
jo
movsl
push
cmp
xor
adc
addb
in
add
shrb
inc
cli
dec
pop
push
das
in
fldl
xor
fidivrl
jns
rorl
je
filds
xlat
sub
outsb
add
fdivrs
aas
pusha
iret
subb
testb
add
js
or
in
xchg
bnd
push
dec
shlb
mov
clc
lock
shrl
aaa
repz
mov
sbbl
in
orb
fmull
or
iret
jae
dec
ret
in
xchg
inc
cmp
jo
cmp
dec
in
daa
loop
loopne
test
es
sbb
jo
cmp
js
and
jo
xor
daa
jge
aam
pop
sub
shlb
push
mov
repnz
icebp
push
dec
scas
cmc
sub
inc
clts
add
push
sub
stos
das
and
or
xor
aam
bnd
jne
add
push
pop
imul
and
sbb
xor
js
xchg
loop
pop
dec
pop
fcom
fistl
stos
test
movl
inc
fs
mov
enter
pusha
das
imul
fwait
xor
xchg
dec
or
enter
in
mov
jp
pop
int3
jns
sbb
dec
mov
inc
fs
popf
and
mov
pop
je
rorb
add
push
jns
add
test
push
or
negl
cmp
sti
pop
aad
insb
xchg
imul
dec
popl
pusha
popa
es
add
loopne
lock
xchg
add
adcb
nop
and
adc
andb
ja
mov
mov
dec
outsb
rolb
and
cwtl
enter
fisubrs
inc
lods
mov
sub
xchg
out
jl
pop
inc
ret
or
cwtl
mov
cmp
enter
out
add
fcmovne
shl
xor
jo
int3
or
xor
stos
clc
sub
push
enter
in
pusha
scas
dec
pop
adc
test
sbb
and
pop
icebp
jb
push
inc
sbb
push
repnz
repnz
inc
incb
jecxz
jns
mov
dec
fiaddl
icebp
in
js
clc
cmpb
pop
out
fnstcw
push
pop
mov
sbbl
mov
test
or
outsb
insl
lods
add
push
ss
pusha
les
mov
leave
cmpb
add
dec
cmp
pop
and
push
cmpsl
adc
loop
pop
sti
cmp
and
mov
pusha
out
into
xchg
xchg
mov
hlt
jmp
cs
mov
arpl
int
pop
scas
shrl
adc
xor
icebp
mov
rclb
insb
jbe
sub
xchg
inc
jl
stc
pusha
movsb
imul
movl
mov
inc
dec
lock
xor
dec
mov
dec
jl
faddl
js
dec
sbb
mov
xor
stos
rorl
punpckhdq
lods
mov
lea
in
loope
fldcw
fistpl
mov
icebp
pop
popf
cmp
add
mov
add
pusha
into
repz
nop
rcrb
fwait
test
dec
cmpsb
shlb
imull
les
loope
push
imul
jl
mov
or
jmp
enter
add
aaa
cmc
pop
hlt
and
pop
xor
inc
imul
sbb
hlt
and
add
loopne
pop
mov
cwtl
mov
insl
adc
cmc
movsb
xor
pop
and
stos
inc
add
jns
or
arpl
cld
push
and
push
out
clc
lods
lds
je
xchg
out
adc
inc
xchg
lea
loopne
or
dec
adc
lods
sbb
add
add
sub
or
jecxz
jb
jns
daa
pop
sub
nop
add
mov
pop
inc
xor
add
shl
loopnew
daa
add
jecxz
les
xchg
sub
repz
popa
cli
insb
cmc
jp
pop
into
cmp
and
add
pop
in
arpl
or
sarb
testb
les
imul
adc
and
cmp
sbb
xchg
adc
fists
jns
mov
adc
or
dec
loop
repnz
xor
mov
out
fidivrs
std
sub
mov
lock
or
xor
in
loop
xchg
divl
pop
mov
fbstp
sub
outsl
jmp
mov
adc
icebp
mov
insb
push
daa
out
fldl
dec
or
or
adc
jae
pusha
test
inc
js
or
mov
in
ds
mov
adc
mov
lods
push
mov
sbb
pop
or
sub
sub
inc
or
pop
add
mov
xchg
pop
cmp
xchg
add
add
pop
pop
pop
aas
out
mov
movsl
in
or
dec
daa
mov
andb
sub
ficoml
adc
enter
mov
mov
ret
sbb
fs
pop
and
inc
adc
movsl
mov
and
pop
les
addr16
add
push
or
movsl
popw
or
pusha
ret
and
pop
repz
jl
insl
bound
add
jmp
jb
sub
rorb
mov
pop
add
xor
and
stc
js
add
in
xchg
xor
mov
jae
shl
cli
push
xor
loop
mov
lea
je
insl
movsb
cmp
ljmp
icebp
stc
add
lods
repz
test
icebp
aaa
dec
fs
push
mov
mov
jmp
adc
push
and
jecxz
mov
js
xor
push
or
push
xlat
and
push
xor
mov
push
fists
rcll
jno
sti
call
inc
push
pop
push
outsb
adc
popa
push
mov
shr
xor
xor
jl
lods
add
jge
sar
adc
xor
mov
shrb
adcl
dec
loope
pusha
push
jmp
ret
pushf
adc
jle
or
add
sub
fs
bound
pushl
scas
push
movsb
and
mov
or
xor
add
pushw
shl
xor
adc
xchg
add
add
in
jg
adc
mov
popa
shl
xor
mov
add
inc
hlt
mov
add
inc
cmp
pop
sarl
jmp
mov
inc
loope
xor
shll
dec
xor
mov
push
cmp
jo
jecxz
cmp
mov
push
xor
add
mov
rolb
jecxz
js
or
lods
add
mov
adc
mov
sbb
mov
cmpsb
xor
in
push
dec
or
lahf
cmpsb
add
shlb
add
stc
xchg
cmc
push
add
stc
loope
sbb
pusha
stos
mov
push
mov
repz
imul
js
nop
add
adc
inc
dec
mov
in
inc
test
inc
mov
rolb
xor
xchg
or
xor
xor
add
repnz
add
push
lret
add
add
inc
add
lcall
cmp
popa
mov
int3
test
nop
andb
cmpsl
or
xor
sub
or
mov
mov
xor
rclb
sub
pushf
jb
add
mov
sub
jo
lea
iret
sbb
in
fildl
stos
rcrl
xor
or
inc
and
sbb
or
pop
xchg
ffree
and
jecxz
sbb
push
sbb
cmp
add
scas
imul
push
pop
xor
cmp
xchg
sahf
add
mov
xchg
dec
push
xchg
std
sub
add
stc
nop
rol
dec
and
loop
test
sbb
sbb
push
mov
ret
sub
test
scas
xorb
pusha
adc
mov
sbb
push
and
stc
sbbb
lahf
inc
scas
dec
lock
ficoml
mov
ss
cwtl
mov
add
xor
mov
pop
mov
jne
xchg
pop
sbb
add
addr16
sub
es
shrl
push
xor
xor
add
mov
test
add
add
jae
mov
cmp
je
dec
and
add
sub
stos
xchg
mov
shrl
lea
xchg
add
and
iret
mov
aad
add
push
add
mov
lcall
sub
icebp
push
dec
data16
dec
adc
bound
insl
iret
popa
shl
xor
mov
add
mov
fs
lea
sub
negb
loopne
roll
lods
ja
and
cmp
and
fst
mov
fistpl
push
cmp
cs
mov
add
pop
adc
sbb
cwtl
mov
pop
idiv
or
sahf
mov
adc
lods
mov
orl
adc
outsl
test
andb
xor
in
adc
push
adc
dec
or
add
push
adc
sbb
or
mov
dec
dec
stos
and
ret
ret
popf
mov
xchg
test
dec
dec
inc
pop
test
out
fs
in
les
pop
stc
jbe
sbb
in
icebp
mov
sub
or
das
mov
cmp
add
mov
into
mov
dec
orb
adc
nop
loopne
insb
cmpsb
mov
push
mov
cmpsl
xor
push
aaa
mov
inc
push
jmp
jle
cmpsb
inc
mov
ja
pop
and
arpl
loope
int3
iret
je
sbb
in
repnz
int3
addb
ret
inc
pusha
dec
pop
pushf
outsb
mov
ret
sub
or
sbb
in
mov
xchg
xor
mov
mov
cmp
inc
lods
jmp
sbb
push
arpl
imul
jns
push
mov
cli
js
and
cmp
test
pop
mov
jb
out
popa
inc
mov
pop
mov
dec
sarl
xchg
notl
loopne
shl
and
insb
xor
push
jle
xor
cld
shl
dec
add
mov
loopne
mov
or
and
push
pushf
out
fdivs
scas
test
lods
pusha
push
loop
or
xor
jo
or
int
mov
mov
and
addb
and
or
je
fs
nop
and
mov
adc
fs
in
call
push
fcoms
and
pop
sbb
clc
add
sub
or
or
shl
lret
sbbb
adc
mov
mov
fstps
out
popf
fisttpll
cmpb
popa
sbb
xchg
pusha
dec
leave
sbb
xor
and
pop
push
jp
xor
add
lock
outsb
xor
push
hlt
jns
sbb
xor
mov
int
mov
outsb
andb
aam
mov
ret
dec
std
das
sub
movsl
add
add
lret
cmp
call
aas
pop
addr16
dec
mov
add
xchg
inc
push
inc
sbb
clc
mov
mov
stos
pop
xchg
clc
lds
push
sub
mov
dec
iret
sarb
inc
hlt
rclb
dec
nop
push
daa
fldl
mov
repnz
icebp
test
inc
mov
dec
das
leave
dec
and
loop
jns
xor
loop
inc
jo
jmp
cmc
push
adc
aas
and
clc
popf
test
aaa
pop
cmp
push
mov
sarb
imul
add
ror
lods
fstps
mov
jle
add
shl
xor
and
shlb
int3
inc
xor
fdiv
xlat
and
add
in
push
cmp
mov
insl
rolb
push
call
xor
and
xor
add
xor
mov
dec
in
popf
push
mov
rcll
stc
add
mov
loop
xchg
mov
and
fisubl
fadd
and
hlt
sub
popf
pop
adc
pop
sti
rcrl
das
andb
testb
and
fdivp
cmp
xchg
out
mov
sbb
and
sbb
loope
call
pushf
xchg
out
xor
in
cld
lock
hlt
out
movsb
test
mov
cmpsl
push
aam
out
pusha
mov
or
pop
xchg
pop
scas
pop
xchg
das
cmp
movsb
add
xchg
in
dec
rclb
test
adc
enter
ret
int3
add
sti
jmp
clc
lods
mov
push
push
mov
clc
fs
adc
fmuls
push
mov
lret
mov
adc
sbb
push
out
add
jbe
dec
xor
xchg
stc
xor
clc
mov
cs
inc
mov
and
xor
pop
lock
cmpsb
sub
test
mov
fsubrs
in
movsl
fcomps
shlb
pop
mov
mov
into
fadds
jg
push
xchg
aam
out
add
sub
or
sbb
add
fisubs
lds
int3
flds
ret
pop
xchg
cmpsl
xchg
push
push
mov
or
mov
mov
add
daa
int
adc
and
push
fwait
adc
ljmp
addb
in
and
mov
outsl
push
faddp
inc
mov
in
add
mov
dec
and
cmp
xor
push
xor
push
sbb
sub
xchg
mov
xorb
into
cli
or
add
mov
inc
add
icebp
sub
push
pushf
jb
out
dec
mov
dec
add
jae
add
xor
enter
cs
xchg
lods
sub
sbb
daa
jl
rorl
inc
inc
push
xor
fldenv
sbb
xchg
test
sbb
mov
xchg
scas
addl
dec
dec
repnz
arpl
es
push
pusha
subl
andl
aas
inc
pop
lods
push
fidivl
dec
dec
xor
or
lods
add
sbbl
inc
lret
shll
inc
pop
and
cld
pop
add
dec
jo
mov
shr
xor
das
hlt
and
add
sarb
pop
inc
mov
cmpsb
in
mov
add
dec
mov
push
mov
or
cmpsb
xor
add
mov
sbb
scas
push
inc
mov
sbb
out
cli
add
sbb
mov
int3
stos
dec
ss
or
addr16
in
ss
add
loop
insl
add
sub
sub
and
dec
addr16
nop
cmp
bound
stos
fstps
push
cmp
loop
loop
xor
sub
mov
int
sub
xorl
add
loopne
outsb
incl
mov
jne
pop
or
jle
jno
adc
and
adcl
test
shr
inc
icebp
rcll
cmp
hlt
or
xor
jne
push
add
scas
mov
xchg
cmp
cwtl
or
das
mov
mov
in
das
sbb
sbbb
pop
pop
mov
lock
pop
scas
xorl
mov
lods
xchg
shl
jl
add
fs
push
fimuls
daa
rcrb
lods
lcall
mov
sbb
rolb
je
pop
out
push
idivl
push
rcll
pushf
sbb
das
xor
or
xchg
and
scas
pusha
sub
mov
rclb
xor
test
lods
mov
lahf
mov
inc
mov
cs
fs
dec
xor
jmp
mov
movsb
and
mov
push
or
cltd
sbb
push
les
xor
jno
cmc
ljmp
xor
test
mov
in
add
pop
sub
cmp
add
test
xchg
fcompl
add
cs
negb
add
mov
pop
pusha
andb
data16
mov
jae
nop
int
mov
inc
ror
dec
sbb
add
ror
cmpl
and
call
mov
jmp
add
ror
cmp
rorb
jl
add
imul
fdivrs
popa
pop
mov
jle
pop
xchg
sbb
call
inc
mov
in
pop
add
cmc
push
test
in
jp
adc
enter
mov
add
pop
add
pop
and
jg
xchg
adc
out
in
pusha
shll
mov
int3
loope
cmp
daa
push
gs
mov
add
sbb
xor
and
pop
pop
dec
loop
popf
and
mov
dec
cmp
mov
push
outsb
sbb
and
adc
mov
inc
sub
lock
xor
lret
cs
sbb
mov
gs
sub
cwtl
and
js
mov
imul
or
into
call
and
mov
mov
cmp
pushf
push
sub
mov
add
mov
and
cmpsl
mov
cwtl
jnp
int3
adc
mov
xor
ja
or
mov
mov
jne
pop
cmpl
mov
shlb
lds
sub
xor
sub
loop
xor
push
and
dec
fcmovne
mov
mov
add
or
and
dec
les
xor
xor
fidivs
adc
test
out
iret
xor
adc
sub
shlb
mov
inc
test
cs
add
out
xchg
sbb
cmp
adc
mov
sub
mov
jb
sti
mov
lock
mov
aaa
fwait
test
call
xor
movsl
mov
ret
pop
adc
mov
cmp
cld
dec
sbb
mov
aaa
add
xchg
stc
xor
mov
pushf
mov
nop
add
jecxz
sbb
enter
mov
mov
stc
es
fildl
ja
push
xor
jno
inc
call
cmp
or
pop
out
cmp
fcoml
aaa
fistpll
xor
enter
call
mull
jecxz
xchg
xor
rcrb
aas
fldl
push
cld
test
rol
or
push
xor
out
jae
xor
fadds
pushf
mov
lret
cli
jno
push
mov
aas
divl
xor
into
jmp
ss
stos
sub
rcrb
add
lcall
popa
push
cmp
icebp
sub
push
mov
or
mov
enter
add
les
and
push
insb
idivb
mov
xchg
pushf
pop
dec
nop
and
xor
mov
jbe
mov
push
fsubp
jnp
outsl
movsb
add
in
daa
jmp
and
or
xchg
dec
pop
dec
test
fdivl
mov
lds
dec
lea
inc
add
jge
xor
mov
add
xchg
divb
je
lret
cmp
jno
decl
loop
in
xchg
push
test
cld
cs
lock
insl
pop
gs
sbb
pop
sbb
sub
push
mov
pop
cmc
xchg
sub
push
addb
sarb
sti
leave
adc
cmp
popf
and
and
xor
mov
fs
sarb
adc
mov
sub
mov
mov
dec
testl
mov
jle
sub
jmp
imul
je
adcb
adc
out
add
mov
cmpsl
rclb
inc
add
adc
mov
or
pop
sub
mov
cmp
je
icebp
mov
mov
testl
xor
js
int
xchg
xor
adc
mov
pusha
pop
jecxz
mov
and
mov
sbb
test
lea
roll
add
les
dec
pop
xor
mov
sub
jp
jo
nop
and
mov
inc
rorb
push
mov
imul
add
or
clc
add
test
jecxz
in
cmp
mov
jns
inc
jecxz
xchg
scas
add
and
cwtl
inc
sbb
mov
dec
sub
inc
add
daa
outsl
or
or
sbb
and
sub
daa
add
pop
shr
sbb
sub
mov
pushf
or
sub
add
jge
in
add
cmc
sahf
std
mov
test
dec
fmuls
xlat
fldl2e
adc
pop
sbb
pusha
mov
mov
in
mov
je
push
jle
cmp
stc
cmp
jb
daa
pop
mov
test
pop
les
mov
add
cli
inc
pop
fisubl
clc
clc
subl
mov
cmp
push
add
sarl
mov
mov
test
ds
pop
mov
fidivrs
push
fnstenv
stos
les
mov
add
fcomip
add
int
add
xor
push
sarl
test
xor
jne
lret
mov
dec
pop
sub
mov
xchg
in
les
in
scas
iret
mov
lock
dec
pushf
jl
and
xor
or
mov
rolb
or
jo
and
or
add
xchg
adc
sahf
enter
repz
imul
leave
test
sbb
in
cli
mov
sub
and
and
add
push
andl
adc
add
jp
call
and
mov
mov
je
lea
das
cwtl
and
add
sub
in
xchg
cltd
or
sbb
dec
mov
iret
mov
xchg
js
hlt
mov
sti
lret
add
movsl
xor
insb
pop
ss
xor
and
ljmp
mov
fisttps
sbb
je
mov
int
jnp
jecxz
pushf
nop
add
aaa
dec
and
in
and
insb
pusha
adc
mov
pop
in
aas
or
arpl
pop
in
sarb
nop
add
mov
xchg
insb
push
push
dec
jo
mov
and
push
call
out
loopne
sti
jp
jl
lods
mov
xchg
aad
lcall
rcrl
xchg
out
add
mov
in
xor
cmp
jae
les
lods
enter
jb
cltd
inc
jmp
out
adc
add
add
adcb
xor
mov
mov
add
adc
arpl
mov
push
jl
add
dec
adc
xchg
or
push
xor
cld
sbb
imul
mul
jmp
push
inc
imul
add
mov
in
lods
lcall
mov
or
pop
add
rcr
xchg
add
pop
pop
or
inc
popa
and
out
and
xor
repnz
mov
mov
mov
mov
mov
cmp
mov
cmp
jbe
mov
adc
pop
push
sbb
ja
outsb
pop
push
or
rclb
out
lahf
into
pop
add
enter
cmpsb
outsl
clc
fadd
xchg
std
xchg
sti
pop
jle
aas
or
inc
repz
mov
sbb
xlat
dec
push
pusha
jns
jno
add
push
shl
fiadds
cmpsl
pop
sub
cmp
xchg
dec
add
lds
out
lea
and
and
rol
and
pusha
mov
inc
mov
add
cli
movl
popf
push
xor
mov
push
xor
sbb
pop
sub
test
add
jmp
pop
or
test
and
push
push
cmc
punpckldq
xchg
mov
xor
test
pop
cmp
repnz
movsb
mov
add
and
fiaddl
mov
cmp
sbb
pop
mov
dec
ret
jge
es
setnp
push
in
stc
fwait
mov
or
scas
popa
movsb
bound
mov
or
insl
add
call
sbb
je
adc
mov
cmp
filds
leave
add
add
pop
xor
outsl
popa
jno
aam
jge
cmc
dec
movsb
dec
nop
test
mov
jmp
mov
das
xchg
add
cmp
insl
mov
mov
dec
or
fisubl
sbb
mov
jbe
imul
ret
mov
lea
icebp
sbb
lods
or
or
add
dec
jno
gs
add
ret
lea
sbb
pop
pop
or
jmp
out
or
hlt
popa
pop
and
imul
repz
repnz
test
fwait
add
xor
cs
push
mov
imulb
nop
pop
xor
filds
mov
cmp
or
add
push
push
pusha
mov
pop
xchg
adc
or
ss
jl
pushf
xchg
sub
push
daa
adcl
in
and
lea
mov
cltd
fdivrl
scas
outsb
mov
rcl
pop
pop
test
push
stos
test
gs
sub
bound
lods
pop
and
xchg
mov
or
std
add
lods
and
xor
sub
push
jg
cwtl
orl
sbb
mov
xchg
pop
stos
add
rolb
in
sub
ret
sub
mov
mov
addb
mov
mov
rcrl
addl
test
xchg
dec
or
int
and
add
sbb
add
test
push
fmuls
xchg
pop
mov
orb
or
leave
jmp
dec
sub
cmp
adc
lea
daa
xor
or
and
ja,pn
in
cmp
mov
sub
fstpt
xor
ret
sbb
ret
jle
nop
in
clc
push
xchg
shrb
iret
mov
test
or
sub
scas
xchg
push
pextrw
sub
xchg
je
mov
mov
adc
loop
lds
pusha
dec
or
dec
cs
aas
sub
mov
add
inc
or
aaa
or
mov
shlb
push
sbb
mov
sbb
das
mov
test
add
out
adc
inc
sahf
jp
andb
mov
cmp
dec
test
or
cli
cmpsb
mov
xchg
sub
lods
outsl
pusha
cmpsl
pop
gs
add
pop
ret
and
sub
add
mov
mov
nop
testl
push
adc
xor
mov
add
das
and
pop
mov
or
int
rcr
inc
pop
add
js
add
dec
repnz
jno
xchg
add
pusha
sar
subb
mov
add
mov
add
outsb
mov
or
imul
sub
js
mov
and
hlt
imul
stos
sahf
push
ror
fmuls
dec
xor
insb
iret
sub
cltd
stos
mov
mov
jo
pushf
nop
or
dec
in
push
mov
out
mov
pop
in
xchg
inc
bound
fldenv
mov
call
jmp
mov
push
out
mov
add
push
pop
sub
into
call
fimull
mov
cltd
popf
jo
sub
pop
pop
cltd
xor
add
jnp
mov
clc
inc
jp
xor
pop
notl
and
xchg
mov
mov
jmp
mov
inc
rclb
enter
in
jns
test
adc
xchg
pop
int
loopne
mov
add
adc
sub
lds
xchg
jne
and
push
dec
test
jmp
jb
call
pop
mov
sarl
add
out
add
sbb
adc
jne
mov
pop
popa
inc
scas
jg
and
adc
adc
jnp
push
push
shll
movsb
mov
inc
xor
cwtl
out
xor
mov
adcl
mov
jmp
adc
pushf
rclb
mov
movsb
add
in
jnp
sbb
loope
or
inc
mov
ret
xor
rcll
xor
loop
xor
nop
add
out
or
pop
aam
add
test
adc
outsb
movsb
ja
jl
push
jno
sbb
lret
mov
jecxz
or
movswl
push
inc
sbb
cmp
xorb
push
fwait
dec
popa
or
mov
xor
push
pop
insb
ret
mov
add
sbb
lcall
xor
or
enter
xchg
pop
es
mov
testb
mov
in
int3
pop
adc
adc
lcall
jge
fidivl
push
fisubrl
add
fidivrs
cmp
pop
neg
sbb
push
xor
addr16
jecxz
add
popf
mov
and
lea
or
add
jbe
and
xor
es
sub
or
mov
add
pop
and
lock
cld
stc
add
lds
flds
mov
popf
bound
out
jo
adc
xor
outsl
shr
fcom
adc
push
out
lods
cli
push
dec
adc
mov
push
ffreep
movsl
cmp
rorl
pop
ret
nop
int
pop
xchg
push
cwtl
cltd
shll
int3
sbb
or
lds
and
xorb
adc
mov
xchg
xlat
and
or
xor
push
pop
mov
loopne
adc
shr
inc
addr16
cld
fiaddl
jb
loope
push
test
call
cli
inc
or
push
ror
sub
dec
les
lret
xor
jb
aas
mov
push
adc
sub
lods
pop
out
or
das
out
pop
jg
push
andb
xchg
mov
xor
inc
dec
ljmp
or
sbb
add
add
inc
roll
adc
or
sbb
dec
in
call
stos
push
mov
fadd
dec
or
add
popl
sbb
dec
inc
mov
and
jne
add
inc
mov
outsb
add
xchg
inc
dec
sub
jmp
jnp
add
orb
jl
push
or
sub
mov
cmp
addl
mov
adc
outsl
cltd
add
test
add
shlb
test
xor
pop
add
shll
imul
jbe
or
popa
popf
jmp
addb
push
xor
pop
or
fistps
daa
add
inc
lds
cmp
fisubrl
sbb
rcrb
add
xor
cmc
sbb
daa
push
mov
roll
ffree
sub
pop
stc
stc
fucomip
cmpsl
add
adc
mov
dec
orb
pop
adc
jmp
pusha
adc
and
xchg
dec
cmp
aas
cmpsl
into
xor
dec
sarb
adc
ret
inc
cmp
inc
mov
add
test
mov
add
mov
mov
fwait
xor
enter
popa
xchg
jb
or
adcb
mov
ja
cld
sub
mov
mov
push
cmp
loope
or
shlb
mov
out
inc
pop
xor
test
sub
sub
xchg
call
jo
cmpsl
aam
add
in
mov
jmp
sub
mov
pop
je
fs
mov
adc
rclb
lea
push
sbb
psubd
enter
int3
mov
dec
xchg
inc
test
mov
adc
pop
ds
popa
or
mov
adc
mov
shlb
mov
lahf
push
jnp
xchg
mov
dec
shll
pop
lret
or
scas
js
xor
jbe,pn
test
int3
mov
or
es
aam
cmp
data16
std
cltd
add
adc
sbb
add
popa
nop
xor
lcall
lods
lods
push
sbb
mov
icebp
jle
adc
fbstp
cltd
shl
pop
out
scas
popf
jg
stos
mov
inc
sbb
mov
push
hlt
and
xchg
mov
or
xchg
pop
call
pop
inc
cwtl
add
stc
mov
add
test
and
popf
adc
xchg
adc
lahf
push
std
hlt
xchg
mov
sub
adc
adc
push
pop
jne
sub
lcall
das
mov
sbb
mov
sti
jecxz
outsl
mov
movsl
pop
inc
mov
mov
pusha
adc
xchg
lea
sub
int3
or
dec
inc
movsb
lahf
sti
cwtl
jp
add
push
sti
lahf
cmp
xchg
mov
addb
iret
sub
mov
and
outsb
and
divb
push
mov
test
xlat
test
call
mov
inc
and
mov
xchg
mov
ret
add
cmpsl
cmp
and
nop
mov
pop
adc
dec
pop
sub
fwait
inc
add
and
shlb
mov
sti
pop
mulps
push
mov
and
push
mov
out
jl
lahf
add
sub
sbb
mov
out
add
xchg
fwait
push
or
dec
inc
xchg
add
icebp
or
insb
lahf
add
lods
xchg
sub
pushf
and
xor
stc
add
mov
sub
and
mov
mov
push
andb
test
ss
jns
ja
add
adc
shll
push
popa
arpl
adc
add
lret
call
test
lret
push
mov
call
je
pop
xorl
sbb
mov
jo
jmp
pusha
mov
xor
movb
addl
cli
addr16
fbld
sub
dec
out
sbb
loopne
xlat
mov
lods
bound
xorl
jns
jl
inc
jmp
in
add
mov
adc
mov
and
out
add
push
out
popf
mov
mov
dec
loop
subl
xchg
enter
pop
and
in
sbb
inc
jp
mov
enter
dec
xlat
jnp
pop
sub
add
clc
sbb
xlat
mov
xchg
aaa
inc
negb
fisttpl
mov
addb
mov
jecxz
sub
frstor
shr
or
lods
jns
out
in
jle
subb
add
rclb
testl
cs
ja
out
cmp
imul
mov
das
cwtl
hlt
xor
stc
add
fsubr
sbb
push
add
xor
add
mov
add
ret
loope
inc
jbe
xchg
iret
rorb
add
repz
and
push
inc
rorb
mov
xor
sbb
and
and
push
nop
dec
add
xor
push
out
test
test
mov
cmp
dec
adc
mov
fcomip
push
jne
mov
xor
sub
outsl
mov
test
sub
mov
adcb
and
imul
cmp
daa
lea
std
mov
pop
push
mov
fwait
push
sub
test
dec
frstor
pop
inc
pop
cltd
mov
push
test
fldt
sub
and
push
and
clc
add
aaa
inc
sbb
fnstcw
std
mov
or
add
bound
int
sbb
jmp
lods
dec
shrl
push
fdiv
mov
add
rcrl
mov
and
push
cmp
test
adc
add
daa
or
pushf
mov
cwtl
mov
nop
aaa
lea
adc
ja
inc
mov
adc
pusha
cmp
dec
insl
and
fcompl
sbb
popa
nop
in
pop
rol
das
mov
inc
call
pop
cmc
xor
inc
cmpsb
enter
popa
mov
pop
mov
add
test
jae
and
or
enter
adc
cmpsl
mov
jne
lods
test
lcall
push
je
jl
cmp
sbbb
fidivs
sahf
or
mov
xchg
ret
shl
jl
test
jecxz
cmpsb
and
push
andb
xchg
out
es
xor
add
or
inc
sbb
pusha
adc
xlat
push
aam
xchg
rol
pop
or
xor
dec
push
ret
ficomps
shrb
cmp
test
mov
and
popa
xchg
mov
adcb
sub
ret
cs
inc
mov
sub
mov
sbb
inc
mov
or
mov
popa
push
rcr
xor
add
mov
lock
add
js
mov
xor
lds
std
into
pop
or
push
pop
cmp
mov
fiadds
adc
movsl
xor
and
mov
call
cli
lea
ret
out
or
nop
andb
adc
fldenv
push
jbe
mov
or
or
inc
ret
xchg
icebp
and
js
popl
mov
mov
clc
sbb
pop
pop
out
in
out
mov
cmpsb
call
xor
or
gs
cmpb
cwtl
jbe
sub
pusha
cltd
mov
nop
xchg
xchg
xchg
sbb
mov
push
pop
mov
jne
push
and
cmp
sub
jns
jnp
js
pop
xchg
xlat
nop
inc
cld
nop
mov
inc
xchg
pushf
aaa
mov
test
xchg
ds
aad
mov
add
lea
push
pop
fs
adcb
xor
add
fnstsw
add
in
insl
and
cmpsb
jns
mov
cltd
xor
lods
adc
push
pop
and
fsubp
add
loop
or
clc
sbb
rcrl
xor
add
sbb
scas
rcrb
rcll
dec
shlb
xchg
add
pop
or
push
adc
pop
push
jae
inc
out
cmp
sub
mov
pusha
sub
pop
or
inc
push
inc
xor
inc
add
mov
sbb
in
adc
rep
dec
xchg
jns
daa
loop
pusha
adc
imul
js
add
cmc
ret
dec
push
shlb
mov
and
cmp
dec
movb
mov
int3
adc
clc
aad
incl
mov
test
cwtl
push
mov
test
ljmp
hlt
add
dec
stos
push
and
xchg
fdivp
enter
and
fwait
mov
xchg
push
lock
aad
lds
add
inc
jno
jl
push
pop
adc
test
and
sub
nop
out
add
jns
mov
pop
pop
nop
add
iret
mov
add
aam
add
add
pusha
call
addr16
inc
lods
es
shl
add
or
add
loopne
nop
mov
xorb
pusha
mov
push
into
cmc
arpl
rorb
les
pusha
sub
dec
out
pop
stc
or
push
and
and
test
roll
enter
cmp
lea
push
jmp
inc
xchg
mov
push
pop
mov
dec
add
pusha
add
pop
add
inc
repz
and
cmp
stc
add
fabs
js
add
inc
add
mov
xor
addr16
loopne
mov
pop
pop
mov
dec
nop
and
adc
push
xlat
lea
std
lcall
cmp
cmpsb
mov
iret
dec
clc
or
sbb
arpl
popa
sub
mov
pop
lods
sbb
inc
add
and
push
adc
mov
dec
pop
nop
in
dec
lret
cmp
pop
movsb
lret
fbstp
xchg
pushl
mov
adc
clc
jmp
mov
jnp
xorl
xor
fldl
call
stc
pop
xor
push
push
pop
and
sub
dec
fwait
mov
dec
mov
pushl
jns
fldenv
cmp
lret
int3
mov
loopne
or
xor
test
or
test
stc
ret
xchg
add
adc
adc
lods
mov
add
xchg
jmp
icebp
das
in
cltd
stos
int
popa
fmul
xorl
rcrb
jno
inc
repnz
add
decl
mov
dec
adc
sahf
inc
addps
popa
inc
jae
in
xor
add
aam
adc
es
push
adc
popa
push
dec
dec
and
hlt
xchg
add
ljmp
test
or
mov
rol
pop
int
pusha
xor
add
stc
xor
push
inc
ficoms
add
sub
mov
orb
sbb
lds
outsb
ljmp
jo
push
andb
and
mov
fmuls
flds
xor
add
cmc
movsl
in
rorl
pop
in
and
mov
ret
int3
xchg
pop
xor
fiaddl
mov
cmpsb
xchg
jl
lcall
roll
fwait
or
ja
push
rcll
je
add
int3
jecxz
pop
sub
add
sbb
imul
ficoms
push
lcall
enter
inc
and
pop
outsl
xor
sbb
xlat
jne
mov
mov
pop
sbb
add
push
pop
lahf
mov
cmp
lods
pop
add
adc
daa
ja
cs
subb
or
mov
inc
add
sahf
fiaddl
insb
fucomip
mov
jl
xlat
mov
push
pop
push
sahf
adc
es
dec
xchg
mov
add
imul
js
xor
mov
imul
ficompl
push
dec
out
adc
mov
mov
sahf
daa
dec
mov
mov
dec
nop
outsb
into
add
adc
popf
mov
mov
pop
mov
fsubr
es
cmpsl
outsl
hlt
dec
test
aam
dec
dec
outsb
movb
add
xor
inc
jno
ja
sbb
add
push
fadd
mov
addl
ret
mov
pushf
dec
sarl
addr16
mov
loopne
and
add
pop
add
xchg
cmp
jmp
decl
popf
jge
test
inc
testb
shr
push
movsb
push
add
or
add
jmp
lock
fbstp
daa
lds
or
or
add
popa
ret
shl
pusha
xchg
inc
inc
dec
xor
sub
test
add
cmp
or
add
cli
mov
rep
xor
pushf
fwait
sub
mov
call
fsubl
mov
dec
mov
out
pop
sbb
add
test
push
pop
push
mov
subb
inc
jle
xor
icebp
adc
push
mov
testl
or
mov
adc
jo
add
cmpsl
cmpsb
das
cli
or
pop
call
add
adc
mov
jne
or
popf
adc
call
jns
clc
xor
dec
inc
int3
test
xor
mov
jge
rcrb
out
xchg
dec
sbb
pop
int3
fadds
nop
mov
nop
pop
rcrl
xchg
sbb
sysret
mov
mov
insl
inc
and
testb
jo
xchg
call
shlb
cmp
dec
rcl
add
mov
pop
mov
mov
add
inc
sbb
imulb
jge
xorb
cmpsb
xlat
loopne
js
add
pop
push
and
popf
hlt
xchg
sbb
mov
adc
test
or
cld
lret
jp
sub
or
inc
add
addl
in
inc
mov
mov
cwtl
fistpl
or
sub
dec
and
rcll
imul
mov
stos
into
lods
nop
dec
adc
mov
push
inc
xor
sbb
sbb
or
and
out
pop
ljmp
pop
inc
aas
and
sub
icebp
mov
aaa
push
or
jne
jbe
sbb
push
mov
sub
out
sbbl
nop
fsubs
mov
enter
mov
js
jmp
adc
xorl
loopne
rorl
add
cmp
mov
sub
add
mov
js
and
xor
dec
cli
imul
jmp
fdivrs
push
in
dec
int
js
scas
js
mov
out
ret
fdivrs
loopne
adc
xor
test
in
rcl
mov
pop
jle
jne
inc
negl
jl
add
mov
outsb
sub
pop
xchg
or
mov
jmp
pop
outsl
mov
xchg
or
popf
imul
mov
push
mov
add
in
mov
inc
mov
add
pop
sub
jg
mov
popa
xchg
mov
out
adc
push
pop
inc
jp
xchg
push
mov
fiadds
sub
test
lea
lock
mov
sub
adc
pop
notl
subl
test
imul
es
int3
add
cli
sub
addr16
adc
or
and
cmpsl
in
clc
rcrb
fwait
xor
pusha
and
test
cmpsl
shlb
shrl
insl
sti
lds
scas
mov
and
fsubrl
loope
sbb
inc
stc
js
mov
pop
xchg
arpl
add
or
andb
mov
cmp
xchg
adc
mov
sub
jp
rcl
mov
mov
adc
stc
xor
fldt
sub
adc
subl
or
or
fdivp
or
insb
fildll
enter
inc
nop
bound
das
jmp
dec
cmpsb
mov
sbb
fwait
test
mov
mov
test
dec
dec
aam
int3
jns
xchg
mov
push
ja
or
ss
and
sub
pop
into
push
clc
jne
daa
lods
sub
jnp
js
int
movlps
scas
rorl
ret
push
test
add
call
mov
shr
xlat
mov
mov
cmpsl
mov
lods
mov
pop
inc
in
dec
popa
jl
dec
push
push
or
inc
pop
cld
jp
dec
ljmp
lahf
faddl
cs
mov
cmp
aas
icebp
xor
imul
sbb
xchg
jg
cld
xchg
adc
add
imul
lahf
cld
scas
or
test
jnp
xorb
ret
mov
popa
inc
add
ficomps
movb
pop
mov
cmpsl
faddl
imul
inc
jp
mov
dec
mov
jge
xor
in
mov
repz
test
or
in
mov
or
jle
repz
cld
mov
xor
pop
mov
mov
cmp
inc
pop
iret
daa
lods
in
andb
mov
or
shll
daa
jno
es
in
popa
loopne
dec
in
add
andb
sbb
test
xlat
adc
mov
test
mov
jecxz
xchg
dec
loop
or
and
mov
pop
fcomip
in
lret
pop
shll
int3
dec
jb
pushf
pop
pusha
mov
mov
into
out
fdivl
xor
fwait
shll
jbe
inc
insl
or
cmp
insb
test
inc
add
sti
movswl
push
add
mov
xchg
enter
aaa
xor
fidivs
cltd
out
add
cmp
add
jbe
push
in
pop
in
cmp
in
pop
loopne
mov
jns
jecxz
out
mulb
or
popf
add
xchg
gs
sbb
pusha
mov
mov
mov
leave
popa
adc
aaa
add
imul
in
cld
push
jl
cmp
das
pop
jbe
sub
mov
comiss
xchg
es
das
add
adc
xchg
mov
adc
into
idivb
mov
adc
nop
mov
loopne
sti
add
popf
leave
or
scas
pop
mov
mov
nop
cmp
sbb
pop
call
lahf
add
xor
jnp
rol
mov
xor
or
jb
mov
jae
add
into
aad
mov
push
add
movsl
lret
jnp
inc
adc
ljmp
add
jmp
sub
xor
invd
popf
mov
dec
ret
sbb
mov
push
mov
sbb
call
das
insb
loop
mov
pop
lods
and
add
mov
popa
inc
xchg
mov
stos
xor
xchg
shl
inc
mov
adcb
add
movsl
dec
clc
and
or
test
push
and
sub
add
sbb
mov
push
pop
mov
repz
fstps
repnz
subl
cld
add
adc
push
decl
pusha
adc
std
movsl
add
sub
inc
pop
imul
subl
shlb
sub
jmp
push
test
out
ss
dec
je
cltd
or
mov
lahf
aam
pusha
jne
fidivrs
add
addb
mov
shlb
movsl
xor
xor
jmp
push
cmpxchg
mov
push
inc
lcall
pop
out
push
inc
loopne
or
into
fiadds
push
call
mov
mov
adc
jge
push
add
push
out
js
daa
cli
sar
jns
movsl
imul
mov
add
cmp
mov
mov
clc
mov
hlt
out
mov
add
cwtl
xchg
lock
inc
cmpsl
push
cmpsb
add
pop
jg
or
popf
sbbb
push
aas
add
lcall
mov
popa
lods
sbb
ret
clc
sub
or
mov
mov
add
andb
sbb
mov
add
xchg
daa
adc
adc
in
lahf
xor
sbb
rorl
shll
sbb
outsb
lea
cwtl
sub
or
sub
push
testl
lret
jle
pop
xor
push
xor
xchg
fdivrl
push
push
out
add
pop
mov
aas
or
jae
jo
jb
dec
lea
jmp
nop
lahf
and
xor
frstor
push
data16
fsubl
add
mov
push
jecxz
mov
adc
dec
add
das
rclb
mov
mov
outsl
ds
mov
callw
inc
jl
add
test
or
or
icebp
sub
add
enter
or
iret
and
dec
push
rolb
or
mov
aam
stos
outsb
jb
out
cmpsl
jl
jne
jp
add
cmp
ror
add
call
push
xor
dec
sbb
and
js
xor
shl
test
adc
adc
fnstcw
lret
mov
out
imul
fnstenv
push
mov
and
rcrb
and
add
mov
or
sub
push
sub
addb
int
mov
mov
nop
pop
and
xchg
xchg
mov
add
jns
cmp
and
add
dec
pop
gs
call
je
mov
push
pop
popa
xchg
mov
mov
push
cli
in
dec
push
cmc
gs
mov
pop
mov
mov
jge
and
out
sar
and
bound
jecxz
sub
sbbb
cmp
dec
pop
pop
fwait
lods
cmp
mov
je
aam
mov
mov
in
mov
cmpb
dec
int
lock
js
loop
add
outsb
leave
je
loopne
movsb
int3
pop
add
jno
jne
rol
add
imul
xchg
and
xlat
pop
es
cmp
cmp
cmp
pop
out
movsb
scas
sub
mov
xor
scas
mov
add
push
or
repz
and
daa
mov
mov
sub
pop
add
in
pop
stos
cmp
gs
call
fdiv
movsb
pop
lcall
sub
adc
mov
add
or
daa
xchg
push
pop
or
xchg
or
out
cmc
mov
cmp
adc
push
mov
aam
rcrb
pushl
mull
add
cmp
or
add
xchg
lret
jp
adc
call
clc
dec
std
fsubl
imul
fmul
inc
lahf
lods
push
testl
jnp
mov
mov
add
sti
lods
jno
loop
xchg
lret
in
movsb
shll
push
das
fsts
push
pop
push
push
mov
cmp
jae
fwait
clc
hlt
enter
test
mov
movsl
jecxz
lods
data16
mov
shrl
pop
out
adc
jno
mov
and
pop
popa
sub
popf
movsl
and
imul
aaa
test
add
loopne
xchg
ficoms
adc
adc
cli
lods
pop
xchg
adc
mov
inc
lahf
mov
rcrb
mov
lea
loopne
mov
es
xor
pop
inc
lock
call
leave
jle
and
out
ss
cmp
sub
and
sbb
add
mov
push
add
dec
jo
and
sub
movsb
test
xor
sbb
xor
daa
cld
arpl
dec
dec
sub
fiadds
mov
das
jecxz
bound
in
push
add
mov
inc
scas
fs
fndisi(8087
in
xor
cmc
data16
jl
add
xchg
mov
loope
imul
outsb
or
shlb
sub
add
pusha
jb
push
mov
cli
mov
push
mov
mov
or
add
mov
mov
or
add
mov
stos
lcall
dec
int3
inc
repz
ret
sub
cmc
movsb
ret
popa
adc
adc
mov
xchg
popf
out
or
push
scas
ret
out
or
inc
xchg
in
out
mov
sub
insb
fsts
mov
ret
xor
mov
mov
in
jge
dec
and
imul
xor
std
mov
pop
cmp
test
push
stc
into
mov
add
lods
and
in
ret
sbb
imulb
push
idivl
xchg
ljmp
jne
scas
lcall
add
add
pop
sub
mov
mov
roll
icebp
pop
ljmp
add
fildl
adc
inc
add
fnstcw
jecxz
dec
aad
mov
and
adc
push
xor
inc
push
mov
mov
pop
mov
cmc
aam
and
jo
add
mov
cltd
jno
sbb
daa
xchg
std
imul
xchg
or
wbinvd
mov
sbb
aad
in
xor
xlat
add
mov
jg
pop
xchg
in
rcr
pop
subl
jge
and
cmp
add
jle
ljmp
xor
in
xor
push
sub
inc
sbbb
pusha
or
mov
and
sub
or
inc
int
and
lea
dec
shlb
mov
repz
movl
in
stc
jae
cmc
add
in
jmp
add
lea
cltd
rcrl
inc
ret
cmp
fwait
mov
or
test
mov
call
ds
in
es
xchg
dec
sub
push
lods
or
or
cmp
aas
inc
jae
aad
call
pop
and
scas
jp
or
xchg
les
icebp
push
push
test
sbb
daa
hlt
scas
bound
pop
aaa
mov
shlb
pusha
arpl
sbb
fidivs
push
cmc
and
adcb
jo
inc
add
add
clc
lcall
mov
mov
imul
jo
mov
cmp
dec
push
lock
mov
sub
mov
add
adc
int
data16
lahf
cwtl
test
clc
call
cmc
in
or
jns
or
adc
in
int
out
fsts
add
add
xor
sbbb
adc
inc
jnp
cmp
iret
and
push
pop
cmp
sub
push
sub
addb
das
pop
dec
jle
mov
test
mov
or
jmp
leave
xchg
rcrl
nop
out
inc
or
lea
add
rcl
push
xchg
and
inc
sub
movsb
pop
xorb
mov
pop
nop
mov
addb
xor
xor
and
loop
inc
fwait
dec
aam
sbb
add
icebp
lock
enter
sahf
sarb
jno
and
mov
popf
xchg
adc
cmp
icebp
jo
or
rcl
add
mov
jb
jae
xchg
lds
rol
xchg
insl
adc
mov
ret
xchg
inc
or
push
shr
js
imul
leave
lea
loop
push
movsb
adc
in
sub
dec
fsubs
sbb
pop
push
add
dec
data16
subb
popa
sbb
jo
sbb
add
mov
sbb
push
lahf
sub
sub
xchg
mov
daa
jns
sub
mov
cmc
xchg
daa
or
popf
out
dec
rolb
lret
rcrl
mov
pop
jmp
sub
push
dec
rcl
subb
mov
xchg
cs
add
ficoml
adc
test
xchg
jmp
add
les
std
sbb
pop
mov
decb
mov
mov
mov
mov
idiv
faddp
dec
test
ret
xor
cmp
xchg
adc
sub
add
mov
daa
psubq
roll
cmpsl
loopne
push
std
js
mov
push
jnp
and
popf
or
sbb
lcall
sub
test
and
sub
out
adc
stc
and
and
cmp
mov
arpl
ss
xchg
arpl
add
scas
push
pusha
dec
mov
popa
or
sbbb
sbbl
sbb
jne
or
in
call
add
mov
inc
sub
sub
in
bound
pop
jne
decl
add
sbb
dec
cld
cmp
and
push
add
cmp
sbb
add
mov
loope
or
outsb
test
mov
test
test
imul
mull
pop
test
add
jno
xorb
push
cmp
sub
mov
mov
jp
aaa
cld
add
push
add
xchg
cmc
xchg
lds
cmc
adc
cmp
fdivs
xlat
dec
pop
xchg
jne
std
cmp
aam
adc
sub
fnsave
insl
dec
test
pop
daa
test
mov
mov
fistps
test
push
pop
popa
mov
cli
push
movsb
roll
jp
or
add
sub
push
pop
pop
xchg
jnp
repz
xchg
sbbb
sub
lret
xor
mov
mov
leave
inc
cmc
jns
movsl
nop
imulb
fstl
stc
add
xor
pop
mov
add
imul
cmp
pushf
icebp
and
out
jg
xchg
jo
push
sarb
loope
lret
and
das
mov
mov
sub
out
lock
fists
shlb
ljmp
filds
es
pop
xchg
pusha
mov
pop
push
jo
imul
dec
inc
cld
inc
cmp
pop
xlat
fidivl
jmp
hlt
mov
xchg
dec
fwait
clc
cmpb
call
aam
and
mov
mov
mov
ficoms
dec
je
subb
mov
pusha
cmpsb
pop
test
mov
mov
cmovs
xor
loop
jg
stos
inc
pop
ret
nop
dec
pusha
xor
std
push
add
clc
xor
scas
leave
sbb
push
orl
dec
scas
rcll
jb
nop
mov
xor
add
sub
adc
stos
rclb
sub
scas
call
xor
mov
pop
add
add
popa
sub
js
jl
aam
sbb
cli
jp
andb
or
outsb
add
mov
mov
dec
or
daa
addl
popa
xor
cwtl
lods
daa
dec
add
mov
adc
and
add
pop
insb
jp
pop
add
orb
fs
mov
mov
xchg
pop
decb
add
lds
inc
in
jne
pop
movsl
iret
mov
add
and
sub
stc
pop
outsl
imul
jbe
or
fsub
aam
pop
leave
loop,pt
dec
out
lock
test
adc
in
test
xchg
mov
int
mov
pop
mov
insb
add
mov
fldcw
pop
mov
outsl
insl
icebp
bound
lods
push
mov
mov
lahf
inc
mov
adc
mov
sbb
cmp
loopne
add
fwait
jb
outsl
stos
popa
push
in
in
jne
arpl
test
ljmp
push
cld
mov
icebp
jne
xor
rolb
shrl
pop
hlt
dec
add
xchg
fisubs
addb
test
adc
mov
sbb
lret
in
xchg
sbb
mov
clc
inc
add
mov
lods
inc
int3
into
sarb
sarb
fisubs
pop
pusha
mov
test
lock
dec
cmpsb
fcompl
add
in
sub
pop
push
and
sub
mov
out
loopne
fwait
sbb
ds
jnp
gs
sub
fdivl
xchg
cltd
pop
loopne
lret
cs
lods
add
xchg
mov
sub
fwait
repnz
loope
sbb
in
cmp
and
dec
mov
mov
loope
jge
xchg
loopne
mov
lea
cmp
inc
popf
mov
mov
add
cmpb
xchg
loop
add
lcall
lods
pop
hlt
xchg
pop
push
es
movsb
and
add
scas
pop
popf
imul
dec
adc
mov
clc
es
loopne
sub
popa
push
clc
sub
loop
add
das
scas
dec
pop
ret
mov
dec
adc
repz
cmc
in
adc
pusha
xor
dec
movsb
andb
and
or
hlt
xchg
jmp
loope
cld
das
sub
add
ss
in
jmp
cmp
dec
pop
adc
repz
push
push
inc
in
pop
dec
mov
mov
ja
mov
push
push
popf
jno
movsl
pop
cmpsb
imul
and
pop
push
jns
adc
mov
fildl
adc
hlt
outsl
mov
push
mov
out
inc
lret
sarb
stc
or
jno
xchg
andb
test
test
pop
es
into
cmp
and
aaa
push
xchg
adc
push
push
jl
jno
add
dec
dec
fidivs
icebp
in
mov
jmp
loopne
fnstcw
lahf
or
mov
or
sbb
xor
clc
fnsave
loope
inc
or
test
insl
dec
mov
aad
mov
xor
dec
sub
cwtl
imul
push
pop
adcl
adc
pop
pop
addl
popf
ror
js
add
in
add
enter
inc
testb
popa
push
aam
imul
cmp
pop
xchg
fistl
mov
dec
inc
das
xchg
negb
xlat
ja
or
inc
fldl
sub
inc
add
es
jp
inc
xchg
inc
lret
loop
hlt
fdivrs
add
and
addr16
outsb
or
jnp
pop
mov
pop
or
and
mov
push
popa
push
jmp
mov
xlat
in
maxps
stos
xor
xor
jmp
lea
in
and
push
pop
push
push
addr16
lds
in
rolb
mov
cltd
mov
push
sahf
jae
push
das
mov
mov
loop
jo
orl
push
cltd
mov
notl
cmp
inc
cmc
sub
ljmp
dec
jb
in
mov
ret
add
in
and
add
jo
fcmovne
add
push
mov
dec
pop
rcrb
fsubrl
mov
jl
mov
call
mov
add
shlb
dec
jo
lret
sub
jno
add
lea
in
popa
jns
aas
add
shll
das
cmovae
popf
repz
aaa
sub
or
add
or
jmp
daa
shlb
js
das
or
dec
movsb
lret
shrb
pop
js
shrl
xlat
sarb
test
clc
push
out
outsb
dec
cli
and
dec
sub
sub
out
pop
adc
add
mov
adc
jle
neg
sub
jge
or
divb
push
cs
xor
inc
fiadds
or
and
adc
push
dec
add
lea
sbb
xorl
popf
adc
add
test
pop
add
sub
loopne
orl
ror
xchg
iret
inc
inc
push
pop
dec
in
icebp
das
insl
inc
ucomiss
add
mov
xchg
cld
jge
mov
push
nop
mov
icebp
and
aam
jmp
out
sub
adc
lea
push
imull
add
xchg
pop
sbb
pop
jecxz
xor
jns
mov
dec
adc
push
push
cltd
dec
outsb
insb
mov
aam
jne
mov
repnz
inc
out
arpl
dec
lods
enter
mov
or
in
cmpsb
sub
mov
outsl
lock
pop
cmp
outsb
adc
lcall
xchg
cwtl
jae
jp
mov
das
sub
mov
imul
or
inc
add
push
jp
dec
test
inc
jmp
vpshlw
sub
sub
push
add
jns
jns
or
or
addb
repz
sub
dec
nop
push
pop
push
xchg
push
pushl
cs
in
adc
or
sti
lcall
repnz
aaa
mov
call
daa
dec
adc
xchg
push
pop
sub
addl
adc
sub
scas
int3
stos
loop
pop
jecxz
lcall
popa
scas
mov
stc
fsubs
int3
add
ffree
or
cmp
jl
loope
and
and
pop
cmpsl
push
pushf
jo
and
fistpl
push
ljmp
sti
pop
sahf
lods
addb
mov
xchg
lcall
pop
aaa
in
add
sbb
pop
fildll
je
aas
sub
sti
idiv
dec
jge
test
fidivrl
cmp
mov
fistl
cmc
fs
xchg
lods
or
pusha
mov
xchg
sti
add
stc
push
mov
popa
xchg
mov
jo
ds
ret
fldl
push
out
xor
pop
push
push
xchg
out
cmpsb
fwait
add
pop
adc
loop
popa
xchg
ss
cwtl
inc
mov
mov
add
mov
mov
loope
pusha
insb
mov
mov
add
imul
mov
test
xorl
push
in
add
daa
ds
xchg
iret
hlt
sub
shlb
sbb
cmc
sub
mov
xchg
lock
pop
inc
fisttpl
seto
xor
call
push
test
pop
mov
sub
leave
dec
loope
mov
ret
jb
mov
jg
add
add
lcall
mov
mov
stos
outsb
xor
notl
fstp
cmpsl
and
dec
jae
sbb
xor
add
lea
dec
nop
lcall
jecxz
sub
jmp
xor
push
cld
repz
scas
dec
outsb
movsl
add
sarl
sti
popf
rcrb
adc
add
fwait
clc
jns
inc
jae
adc
cmc
loopne
sbb
mov
mov
repnz
dec
mov
adc
jmp
xchg
mov
cmp
aam
xchg
ja
lahf
lock
push
test
cmc
xor
pop
pop
xor
add
movsl
add
in
dec
mov
jnp
repz
daa
sub
xchg
push
je
pop
xchg
pop
push
mov
sbb
pop
sub
popa
xchg
test
filds
and
stc
data16
xchg
popf
cmpb
frstor
out
dec
sub
dec
sub
out
push
sar
sub
jl
scas
jne
add
test
fsts
ljmp
xchg
pop
das
imul
sbb
mov
loopne
mov
or
dec
mov
dec
cmc
xor
ret
rcr
xor
jp
imulb
popf
push
sbb
test
das
repz
add
xor
popf
or
xchg
mov
add
mov
aaa
das
inc
sub
sbb
pop
adc
test
pcmpgtb
jne
add
jbe
xor
mov
and
repnz
lea
es
ret
ja
daa
push
push
add
add
lods
loopne
or
xor
mov
jg
or
jns
sub
sub
cmp
lahf
xor
adc
lods
xchg
and
pusha
ljmp
rcrb
daa
aad
outsl
inc
pop
xchg
outsb
pop
add
adcl
or
rorb
repnz
pusha
testb
mov
in
pop
jae
insl
inc
inc
mov
cmp
jo
shrl
stos
outsl
jge
xor
jno
and
pop
pusha
cli
fcoml
leave
adc
dec
and
pop
ljmp
pop
loop
jnp
xchg
xchg
xchg
mov
xor
mov
rorb
xchg
test
inc
cmp
outsl
test
push
incl
xor
push
cld
xchg
outsb
xor
dec
mov
test
ucomiss
and
out
push
movsl
or
push
rolb
sub
mov
std
lahf
call
js
xchg
adc
test
not
enter
xchg
inc
jo
mov
jle
add
fucomp
adc
inc
xor
jmp
outsb
fs
andl
push
sbb
add
mov
cmc
pushf
xchg
or
and
mov
pop
xchg
jmp
je
jg
das
fwait
loope
mov
decb
push
mov
repnz
jge
lret
xchg
js
test
in
push
push
sub
pop
psrlw
not
divb
push
clc
insb
icebp
repz
mov
mov
xor
das
mull
shrb
loopne
cmp
popa
test
rorb
inc
push
xchg
mov
jecxz
pusha
jo
nop
or
inc
xor
inc
adc
mov
ja
add
popa
push
imul
dec
push
inc
adc
add
shll
cmp
push
or
push
int3
insb
stc
inc
adc
fcomps
dec
rcrl
les
popa
xchg
inc
loop
fs
mov
mov
and
or
xchg
cld
push
movsb
mov
mov
loopne
xchg
mov
mov
in
inc
dec
mov
in
movsb
add
and
test
xor
jbe
add
ret
cli
or
jge
fimull
test
adc
scas
fwait
xlat
subb
ds
js
mov
mov
sub
mov
movsl
xchg
test
mov
lret
add
cwtl
imul
mov
jnp
jo
movsl
sbb
push
ss
pop
add
loope
fs
adc
lret
push
sub
pop
xchg
inc
in
and
cmp
imul
adcl
or
or
mov
or
fsubp
push
decl
inc
cmp
mov
mov
std
popa
pop
cmpsb
mov
cli
jns
mov
sti
mov
mov
jo
add
outsb
dec
es
lock
sarl
dec
dec
inc
addb
add
cmp
add
add
addr16
pusha
fwait
adc
xor
lea
sub
mov
mov
repz
and
xchg
add
push
sbb
jl
mov
mov
pop
ud0
out
in
aam
pop
test
fstpt
ftst
test
and
or
push
js
jmp
mov
cs
popf
cmpl
mov
sub
addl
lods
addb
push
movsl
and
adc
mov
popf
std
xor
inc
jne
dec
fcompl
add
fnstenv
nop
add
and
pop
in
adc
clc
cmp
les
pushf
dec
and
pop
arpl
mov
inc
or
mov
adcb
clc
neg
orb
je
pushf
sub
mov
mov
mov
xor
fwait
lea
leave
dec
sub
pushf
push
adc
test
jne
mov
mov
lret
call
xchg
notl
aam
stos
ljmp
les
sub
sbb
and
mov
cld
inc
dec
stc
inc
iret
inc
loope
stc
push
je
cmpb
pop
mov
lcall
or
xchg
sub
mov
test
ret
pop
call
outsb
jp
aaa
pop
xchg
sub
xchg
xchg
add
popw
mov
ret
sbb
pop
adc
int3
xchg
pop
xchg
mov
insl
or
in
loope
lret
in
push
stos
icebp
and
sarl
nop
adc
out
and
rorb
push
pop
aaa
adc
das
fdivrs
or
or
out
sarb
mov
fwait
ss
je
bound
mov
iret
shrl
dec
add
or
fcmovbe
enter
imul
mov
daa
cmpsb
nop
pusha
jg
inc
daa
push
pop
push
push
xchg
mov
pusha
das
call
add
mov
aad
add
push
neg
add
in
out
inc
popa
jo
emms
sbb
jg
push
movsb
mov
and
enter
testb
sar
int3
mov
jg
add
or
push
sbb
sub
mov
mov
mov
mov
mov
test
and
adc
iret
add
sub
out
loop
call
addr16
bound
or
pop
mov
lea
jg
int
das
xor
or
jmp
loop
push
inc
lea
adc
cmp
add
mov
iret
icebp
lods
add
out
clc
fldenv
add
and
push
xchg
fildl
xor
rcll
mov
jp
nop
jo
adc
fildll
loopne
cltd
sbb
push
bnd
icebp
adc
cmp
js
in
loopne
jecxz
lahf
stos
add
pop
pop
dec
js
mov
and
test
jae
jge
push
enter
dec
cmp
jo
mov
test
jne
adc
and
pusha
jmp
imul
das
jne
out
fisubl
add
sub
xor
in
arpl
pop
cmp
fucomi
clc
add
cmp
repz
jno
pop
fisttpll
add
sub
stos
or
mov
mov
adc
push
rorb
xor
jae
or
ja
in
mov
mov
dec
or
pusha
pop
sub
nop
sbb
in
push
nop
cmpl
or
jno
frstor
repz
clc
lds
shll
in
xor
push
sbb
dec
mov
nop
fbld
sub
inc
pop
mov
stc
fiaddl
cld
test
mov
ret
sub
push
lea
nop
sub
fdivr
adc
dec
push
xlat
xchg
fnstcw
lahf
mov
and
push
adc
mov
popf
add
addb
imul
cmpsl
mov
roll
out
xchg
pop
push
cmc
mov
pop
xchg
pushf
cld
inc
xchg
out
rol
je
sbbb
xor
aas
lea
scas
sub
cmpsl
rcl
push
and
dec
call
push
hlt
mov
popa
ret
mov
dec
xchg
dec
mov
pop
push
adc
cld
xchg
sub
cmp
and
mov
int
sbb
stc
hlt
subl
iret
mul
xor
push
bound
aas
xor
pop
sbb
out
lcall
jnp
jo
cmp
icebp
sub
outsb
pop
sbb
adc
flds
sbb
mov
aaa
add
shll
inc
xchg
mov
popf
pop
xchg
lods
shl
stc
sub
xchg
ret
jne
outsl
pop
inc
lret
pop
push
leave
aam
dec
notl
or
jnp
adc
cmpb
inc
dec
outsl
fneni(8087
sbb
sub
cmpsl
lret
sbb
bound
mov
sbb
sbb
xor
dec
or
test
or
adc
jno
inc
jno
mov
sub
push
pusha
gs
sarb
mov
xchg
out
mov
xor
fidivl
sub
xchg
mov
in
fildl
dec
loope
jecxz
sbb
roll
lock
push
mov
sbb
adc
daa
mov
lea
lahf
or
fwait
roll
mov
pop
clc
movsl
mov
add
mov
in
add
push
pop
incl
and
add
das
push
and
jbe
pop
imul
addb
fucomip
das
cmpsb
in
mov
aas
sub
and
int
inc
leave
pusha
push
inc
imulb
cs
addl
push
stc
adcb
in
outsl
imul
xlat
adc
lahf
pop
inc
addb
dec
push
push
nop
ljmp
jno
sbb
adc
stos
jmp
pop
neg
or
jne
mov
icebp
bound
out
add
sbbb
sub
test
sub
sbb
add
ss
imulb
or
rcr
or
repnz
dec
xchg
mov
mov
test
out
scas
int3
sbb
add
out
les
sti
mov
push
push
out
filds
cli
pop
cs
nop
movsb
fsubp
imul
shl
mov
dec
xchg
lret
dec
mov
xchg
jb
mov
enter
shrb
fnstsw
push
in
fwait
sub
std
or
sar
mov
fs
je
mov
shrb
out
xor
rcr
call
xchg
faddl
sub
cmp
call
pop
popa
cltd
jo
and
inc
lahf
sub
add
sar
xor
fs
leave
pop
push
push
icebp
inc
jmp
insb
std
daa
pop
push
cltd
hlt
pop
xor
jge
mov
xor
jnp
jo
add
ja
xchg
jp
xchg
push
xchg
je
popa
in
add
jne
inc
xor
stc
cmpsb
jbe
sti
xchg
or
and
loope
dec
dec
lea
or
push
loop
pop
mov
fbstp
add
dec
mov
push
pop
pop
outsl
cld
lret
mov
nop
mov
cld
mov
cli
inc
add
pop
fs
push
sbb
push
out
icebp
sti
std
scas
fcomps
add
xchg
sbb
add
cmp
dec
mov
fwait
push
out
int3
loopne
or
dec
stos
push
sub
pop
in
aad
stos
push
adc
clc
and
push
pop
push
xchg
pop
or
loopne
faddl
add
push
mov
out
ret
inc
loop
sarb
adc
popf
and
adc
inc
sub
mov
cmpsl
push
cmc
mov
test
in
pop
lret
xor
inc
mov
inc
icebp
mov
subb
fbld
push
sbb
fsubr
movsl
and
and
adc
add
sub
fildll
call
sbb
xor
add
lret
rcll
jbe
and
in
test
and
or
daa
pop
push
les
and
mov
in
inc
or
cltd
xor
dec
mov
cmpsl
movsl
std
test
inc
add
gs
sbb
pusha
addr16
stos
aaa
adcl
sub
mov
add
inc
adc
aas
in
cmc
and
pop
pushf
mov
call
insl
xchg
lahf
add
jmp
fimull
adc
xor
les
int3
and
pushw
jge
lock
jmp
jmp
filds
jns
call
sub
pusha
fcoml
push
ror
mov
dec
jb
dec
lret
mov
adc
arpl
aaa
jle
cmpsb
sbb
cmp
xor
out
popa
andl
mov
xor
adc
jmp
ds
xchg
cltd
sbb
mov
les
pop
addr16
add
add
gs
lock
inc
add
sti
xor
xor
xchg
mulb
mov
pop
add
dec
xchg
mov
ficomps
sub
sub
test
rcrl
mov
push
mov
outsb
ficomps
adc
ds
fmull
xor
inc
mov
mov
push
add
loope
adc
jl
jno
or
cmp
out
andl
mov
cwtl
cmpsl
dec
mov
int
lret
loopne
xchg
and
hlt
add
imul
cwtl
call
faddl
loopne
lcall
push
mov
mov
mov
and
jo
xchg
push
cmp
dec
lret
dec
cmp
adc
add
jne
call
ret
fucomi
aad
xchg
cmp
xchg
je
and
or
dec
andb
and
mov
xor
mov
push
and
add
jle
push
outsl
pop
or
in
sar
xchg
xchg
push
push
pop
pop
nop
insl
inc
loope
jle
scas
cmp
or
jno
jbe
jecxz
pop
jp
xchg
xchg
push
stc
orb
pop
test
adcb
mov
jne
pop
pop
imull
pop
mov
adc
mov
fiaddl
js
dec
pop
popf
jecxz
scas
leave
xor
popf
xor
sbb
add
or
fwait
mov
icebp
out
nop
jp
xchg
pop
pop
or
pusha
add
mov
cmp
out
mov
aad
xchg
lcall
in
insl
xor
sbb
mov
push
pop
mov
xchg
pop
xorb
or
mov
icebp
test
pop
xor
dec
mov
rorl
mov
insb
sub
mov
cmp
sub
add
cmp
mov
out
mov
cmp
xor
add
pusha
and
cmp
mov
imul
fsubs
inc
sahf
das
pop
mov
fcmovbe
mov
lret
das
pop
pop
in
sbb
in
rorb
add
pop
ljmp
jns
pop
mov
imul
and
dec
add
fldt
notl
add
lea
sbb
xor
sub
popa
outsl
xchg
xchg
lock
dec
pop
inc
pop
mov
pushf
je
push
sub
or
xlat
into
popf
sbbb
mov
in
and
cmp
dec
movsl
lcall
aad
xorl
xchg
cmp
or
push
or
rorl
into
sbb
jae
or
ja
xorl
inc
xor
cld
sub
imul
mov
add
mov
dec
or
adc
ljmp
insl
lock
mov
sub
mov
mov
popa
wbinvd
repnz
out
mov
mov
rol
mov
dec
cmp
xor
popf
add
xchg
cmpl
ljmp
subl
outsl
aas
adc
data16
adcl
repz
popf
jne
or
cmpsl
sub
sahf
pop
add
hlt
mov
ret
ljmp
mov
push
lock
leave
add
dec
xchg
mov
call
sub
xchg
sbb
rorb
xor
sub
mov
push
sbb
xor
pop
dec
std
cmp
into
popf
push
inc
pop
stos
adc
jp
cmpsb
xchg
and
pop
fisttps
aas
xchg
lret
cmpsb
xchg
repnz
xor
sbb
cwtl
jnp
and
mov
out
sub
pop
xchg
int3
inc
cmp
xor
mov
arpl
push
mov
pop
xor
jae
and
cmp
sbb
ss
add
xor
int
lret
in
push
in
add
loope
mov
popa
xchg
dec
push
int
dec
mov
cmp
and
test
xor
iret
adc
xchg
jle
lock
into
push
popa
dec
and
aaa
cmp
cmp
and
push
fsubr
and
add
adc
add
push
incb
into
and
imul
hlt
sbb
mov
or
mov
dec
arpl
shrb
or
imul
jmp
clc
pop
push
ret
je
imul
clc
mov
lret
jmp
repz
outsl
jnp
mov
sub
mov
adc
or
divl
jne
lods
daa
idiv
push
xchg
shlb
add
sbb
mov
push
add
pop
cmp
adc
nop
jp
jmp
cmp
mov
add
movsb
mov
dec
enter
scas
jle
pop
nop
pusha
pop
jno
push
push
nop
xor
andl
icebp
js
mov
shr
cmp
ror
scas
mov
lods
in
adc
pop
ljmp
repz
insl
mov
orb
add
or
mov
and
sub
pop
fucomp
jns
test
mov
lock
cmp
push
inc
push
mov
adc
inc
cmpb
and
lret
pop
faddl
or
in
pushf
gs
mov
std
sbbl
or
jg
mov
cmp
fwait
movups
test
sub
out
xchg
test
ret
fsubr
sub
push
xor
movsb
cmp
testb
push
mov
mov
mov
push
ret
or
popf
fnsave
or
sbb
inc
add
loope
mov
lods
adc
pop
jns
and
adc
testb
adc
push
pop
xor
mov
push
or
jb
iret
aad
iret
clc
cs
sub
shlb
or
bound
and
and
out
push
mov
cmp
jnp
mov
arpl
pop
xchg
loopne
mov
stc
rclb
lock
cmp
xchg
xchg
movsl
out
add
gs
das
and
call
outsl
dec
cmp
mov
fstpl
in
or
mov
test
mov
mov
daa
and
pop
sub
inc
rorl
fimuls
popf
sub
sub
push
popa
adc
add
push
shll
push
sub
and
add
movlhps
stos
jg
fbld
dec
dec
mov
cmc
sbb
aaa
int
js
mov
xor
pop
mov
sbb
xor
decb
lret
inc
inc
pop
adc
stc
mov
mov
pop
cs
add
mov
mov
sahf
sbbb
add
fnstenv
push
lods
dec
mov
adc
adc
stc
cld
sub
adc
or
mov
pop
or
add
xchg
and
scas
fbld
testl
xor
xchg
sti
jno
fldl
test
cmpsb
lret
mov
dec
or
arpl
adc
xor
sbb
and
adc
adc
push
push
xor
in
and
or
jle
mov
cmp
pop
mov
push
jno
out
shl
popf
stc
sbb
pop
repnz
sbb
and
add
pop
push
mov
xor
loop
cmp
sbb
or
icebp
mov
push
mov
into
mov
mov
xor
jnp
jecxz
clc
pop
icebp
fadd
push
in
and
xor
jb
jns
jbe
and
insl
adc
out
adc
or
dec
adc
les
imul
ret
push
add
sub
cwtl
or
mov
sbbl
inc
cs
mov
popa
push
sbb
ficompl
leave
jle
out
aam
mov
pop
lods
int
ret
push
xchg
scas
test
pop
lahf
sbbl
push
pop
push
cwtl
and
add
movl
insl
cmp
addl
sbb
mov
or
xor
aas
lea
sbb
xchg
push
push
adc
mov
and
mov
in
add
ds
pusha
repnz
xor
mov
pop
xor
and
sub
and
push
pushf
add
aam
adc
movl
test
push
test
mov
push
enter
and
mov
jb
lahf
fildl
mov
jne
movsb
lahf
test
mov
ret
dec
add
cmpl
or
mov
dec
sbb
mov
inc
dec
ret
sub
add
decl
aad
pop
add
adc
cli
ss
push
xor
fildl
xor
fwait
popa
andb
or
lds
pop
jmp
call
and
lcall
pop
in
jnp
mov
adc
mov
mov
mov
adc
ror
push
ret
das
fstpl
mov
add
or
aas
jecxz
repz
imul
pop
shl
ljmp
loop
and
mov
popa
hlt
lds
mov
pusha
call
add
negl
icebp
cmp
adc
dec
stc
and
pop
hlt
add
lret
push
movsb
xor
aad
xchg
insl
jno
dec
pusha
and
or
lods
movsb
popf
add
add
nop
cmp
mov
and
addl
movsl
inc
in
mov
pop
push
mov
cs
adc
faddl
add
enter
cmp
sbb
sbb
mov
add
int3
push
pop
push
mov
dec
xor
imul
jns
imul
clc
inc
frstor
xchg
mov
or
jnp
jle
push
push
dec
mov
xor
add
adc
jecxz
mov
or
jnp
rclb
faddl
pop
cli
dec
push
int
mov
pop
call
sbb
mov
addr16
scas
jmp
mov
sbb
adc
test
and
lret
cmp
jmp
movsl
lcall
pop
xchg
dec
xchg
add
adc
cmp
add
dec
xchg
push
add
mov
add
sub
sub
lock
sbb
mov
jmp
leave
fwait
inc
repnz
filds
fldcw
rcrb
dec
stc
js
imul
mov
js
or
push
sti
xchg
aaa
or
outsb
sbbb
sub
lods
cmp
lea
add
jle
mov
les
push
pop
xchg
scas
push
ret
or
xchg
jmp
jae
pop
sbb
fwait
pop
leavew
loope
iret
ljmp
sbb
lea
adcb
testl
enterw
add
pop
and
add
int3
imul
data16
mov
fisubrs
adc
mov
mov
in
out
mov
pop
inc
and
jno
scas
push
in
jmp
mov
inc
in
pop
shr
aas
dec
mov
pop
pop
mov
add
std
data16
pusha
cmp
cmpsb
stos
cmp
je
adc
mov
jae
push
in
mov
xchg
mov
popa
out
sub
xchg
stc
jo
cwtl
das
cmp
daa
push
pop
jbe
testb
pop
push
mov
test
fwait
test
mov
mov
xor
push
lahf
add
out
jb
ljmp
in
push
sbb
add
imul
dec
out
inc
loop
jle
stc
and
divl
sub
lret
sbb
push
shlb
adc
nop
or
sarb
dec
jb,pn
mov
gs
in
je
mov
test
hlt
leave
add
cmp
adc
cmp
mov
js
mov
rolb
iret
jns
or
stos
add
lcall
pop
outsb
roll
aam
stos
dec
or
fwait
sahf
mov
mov
fdivs
scas
or
movsl
push
mov
loop
jle
lods
in
sub
mov
insb
movsl
mov
es
aad
jne
add
adc
mov
add
xchg
aam
push
inc
cmc
daa
xor
popa
stc
push
repz
js
sbb
test
sbbb
or
shll
push
dec
clc
mov
shr
pusha
inc
push
or
add
push
out
add
push
or
aam
and
ljmp
and
jo
xchg
add
repz
ret
pop
xor
pop
outsb
xor
add
pop
mov
fstpt
stos
das
repnz
sahf
sbb
adc
int3
inc
push
adc
ret
pop
pop
adc
mov
out
xchg
add
jbe
xchg
add
stos
or
fidivl
imul
adc
loop
ret
int
imul
aas
add
push
loope
repz
mov
das
sti
jb
pop
sbb
jge
mov
cs
lret
adc
jns
mov
mov
or
or
xor
and
or
cmpsb
js
mov
mov
and
sbb
dec
add
lahf
add
and
inc
xchg
xchg
xor
or
stc
adc
add
sbb
adc
xlat
enter
shlb
jge
mov
pusha
cmp
popf
dec
add
jno
sub
xchg
out
insb
sub
lcall
sub
test
jnp
fmuls
add
loope
cmpsl
mov
fldl
gs
repz
cmp
nop
in
and
popa
inc
nop
mov
mov
cs
and
push
stos
loop
nop
insl
mov
sub
loope
jb
lahf
stc
sti
movsl
pusha
loop
dec
pop
xchg
pop
mov
fbstp
sbb
or
add
test
popa
das
mov
in
std
shl
jge
inc
mov
or
inc
lods
cwtl
call
std
cmpsb
scas
and
adc
mov
push
adc
pop
cmp
jle
jo
testb
xor
xchg
mov
cltd
xchg
repz
je
sub
pop
out
mov
push
or
lret
pusha
loopne
dec
adc
repnz
orl
pop
sub
xor
push
xchg
cmc
inc
or
xorl
stos
or
cmp
inc
inc
push
je
test
pop
out
mov
cli
xchg
cmp
hlt
xchg
pop
mov
pushf
add
pop
pop
dec
flds
jmp
leave
or
ljmp
pop
repnz
imul
push
sub
jle
movsl
and
mov
nop
stos
and
mov
popa
sbb
divb
add
je
inc
popf
xor
mov
push
xor
es
add
movsb
dec
sbb
sbb
push
xchg
mov
int3
call
adc
xor
lret
enter
or
inc
mov
cld
mov
sbb
or
mov
test
mov
or
lods
lds
sub
aaa
pop
xchg
movsb
cmpsb
mov
test
outsb
jecxz
mov
jbe
inc
or
cmp
add
aam
test
cmp
and
daa
push
mov
adc
cmpsl
xlat
dec
lret
mov
sahf
rclb
mov
arpl
mov
test
mov
cltd
xor
insl
lahf
iret
dec
popa
xor
imul
or
cld
int3
into
lods
inc
pop
cmp
inc
push
test
cli
fucomip
dec
cmp
popf
jmp
cmc
mov
cmp
push
mov
mov
in
or
mov
in
adc
xor
test
fs
pusha
mov
loope
lea
cmp
or
ret
and
inc
loopne
sbbb
out
sub
adc
fstpl
out
das
or
jp
das
mov
repz
shlb
inc
imul
mov
mov
in
xchg
adc
mov
add
jg
popl
and
popf
mov
sub
sti
aam
jl
popa
popa
pop
nop
xor
cltd
xchg
lock
cmc
push
rcr
inc
pop
xchg
mov
popa
lds
loop
movsb
roll
lahf
push
jmp
aas
iret
popa
insl
sbb
imul
bound
add
jmp
je
scas
enter
or
jecxz
adc
and
faddl
je
leave
idivb
call
inc
imul
mov
shr
std
ljmp
mov
es
adc
and
inc
sbb
orl
in
adc
sbb
movq
sub
sub
daa
mov
adc
add
xorl
pop
mov
push
add
cmp
test
push
sbb
gs
insl
inc
sub
imul
fwait
adcb
ja
in
imul
add
lea
jb
cmp
sbb
jne
cmp
icebp
dec
lods
jne
outsb
pop
mov
and
xchg
push
pop
xchg
cmp
sub
xchg
out
arpl
xlat
sarb
add
ja
lock
scas
xor
mov
push
add
lcall
or
cmp
lret
ljmp
cmp
data16
inc
add
xor
mov
icebp
insl
push
in
pop
nop
mov
jge
clc
outsl
in
test
stc
fs
or
and
clc
ss
ds
dec
mov
das
in
add
pop
iret
imul
dec
hlt
test
mov
roll
in
cmpsl
add
lret
sub
in
mov
cs
ret
mov
xchg
add
inc
add
and
adc
subb
lea
pushf
clc
dec
popa
shlb
cwtl
push
in
call
clc
and
sub
add
dec
lret
sbb
stc
movsb
adc
adc
push
cltd
jo
adc
gs
das
std
mov
scas
jg
bound
pusha
or
enter
lret
and
divb
jnp
sbb
add
push
popa
shll
xchg
mov
mov
add
fbstp
scas
jp
mov
dec
push
les
mov
adc
push
push
push
adc
sbb
add
cmp
cs
lret
mov
add
pop
add
mov
push
or
push
stos
shlb
jns
or
stos
lock
cwtl
call
dec
outsb
fcmovb
enter
out
out
loope
xchg
inc
or
popa
mov
outsl
lcall
dec
movb
adc
mov
adcl
and
mov
lahf
dec
jno
dec
sbbl
sub
jbe
notb
es
and
mov
jp
ret
mov
xor
or
data16
sbbl
out
xor
test
sub
sbb
cmp
cmp
stos
mov
jge
push
out
mov
sbb
in
inc
mov
sub
sub
sub
jbe
push
ja
test
fwait
or
cmp
or
or
xor
arpl
or
lea
ficoml
test
xor
repz
xlat
cmpsb
xchg
iret
popa
xchg
mov
push
xchg
popf
mov
add
mov
pop
outsl
ret
das
and
cli
push
pop
mov
daa
fwait
das
in
imul
adc
pop
in
sub
in
mov
cmpsl
add
loop
jo
xor
out
fwait
add
js
sub
test
cmp
push
ds
add
cpuid
pop
sti
mov
das
or
or
stc
int
xchg
mov
and
icebp
or
aas
add
pop
jl
outsb
inc
push
mov
add
cli
jle
cmp
daa
lret
test
sbb
cs
cld
into
outsl
add
outsb
xor
adc
push
stos
dec
mov
add
sub
cmp
add
dec
and
jno
lods
nop
mov
and
fsubr
xor
call
mov
pushf
mov
add
shlb
adc
jmp
add
aaa
mov
pushf
icebp
sbbl
fists
jecxz
insb
ljmp
adc
cli
loope,pn
cmp
mov
nop
mov
mov
jno
mov
clc
mov
nop
jnp
jnp
sarl
dec
add
std
fiadds
xor
fwait
aas
rcrb
enter
stc
xor
ret
fwait
push
jnp
jnp
inc
loopne
mov
and
sub
adc
jno
mov
mov
stc
test
rclb
loopne
int3
cmc
adc
out
or
ret
pop
clc
xchg
out
fidivs
sub
mov
in
adc
add
out
fcoml
inc
pop
das
adc
mov
add
dec
mov
or
mov
add
mov
cmc
inc
outsb
xor
push
loop
test
adc
fwait
clc
mov
mov
inc
fucom
sbb
jae
call
in
sbb
push
cmp
and
mov
daa
cs
inc
in
adc
je
inc
cwtl
pop
mov
and
orl
inc
or
jo
popf
pop
pop
inc
mov
clc
adc
and
or
sub
cld
xchg
sbb
test
inc
add
cs
inc
dec
or
add
mov
cmp
push
lcall
in
mov
fstl
xchg
call
add
pop
stos
jle
push
outsb
jmp
adc
cmp
push
rcr
mov
jmp
mov
into
xchg
aam
test
daa
mov
inc
scas
cmpb
jne
jb
mov
push
sub
nop
faddl
mov
out
sub
sub
adc
orb
mov
adcl
daa
pop
lods
outsb
idivl
cltd
push
cmpsb
aam
add
add
iret
loopne
jge
pop
repnz
mov
popf
das
notb
les
dec
insb
adc
adcb
dec
enter
mov
bound
and
fisubrs
sub
addb
cld
pop
data16
adc
rol
dec
movsl
mov
popf
bnd
dec
mov
sub
sub
sub
pop
das
imulb
jp
add
jo
lock
outsl
mov
mov
xor
pusha
sub
aaa
jl
ret
dec
xor
sub
lret
sbb
outsl
popf
dec
test
fucomi
xor
clc
aad
or
cmp
andb
xor
inc
push
incb
inc
stc
adc
inc
mov
adc
orb
or
mov
xor
nop
inc
push
mov
loop
js
sar
lds
popf
inc
and
out
lock
mov
add
mov
fcompl
inc
adc
cmp
flds
push
push
dec
rolb
add
cld
out
hlt
aad
xchg
mov
mov
mov
adc
rclb
mov
mov
lea
rcrb
add
and
faddl
sbb
dec
and
pop
adc
hlt
jo
or
mov
pop
push
pop
xchg
add
jns,pt
sbb
jl
sti
or
or
xchg
clc
xchg
clc
add
xchg
popa
cmp
lods
xor
xlat
test
jb
xor
loop
mov
push
call
cmp
mov
bound
shll
jle
leave
popa
sub
loope
fiadds
inc
icebp
test
dec
pop
adc
fldt
inc
cmp
scas
xchg
lret
push
add
rcr
movsl
in
or
add
test
scas
into
popa
ljmp
sti
xlat
int
rcr
popf
add
fadds
or
fsubr
xlat
pop
bound
into
xorb
into
push
imul
orb
aad
ret
jnp
rolb
jae
cld
cs
popf
adc
jg
add
fwait
scas
pop
mov
lods
fs
or
mov
push
addb
dec
or
popa
jge
das
imul
pop
xor
push
mov
sahf
dec
sub
shlb
popf
icebp
cmp
inc
loope
mov
xchg
add
xchg
call
movsl
out
aaa
mov
pop
jmp
jle
pop
pop
ficoml
nop
outsb
aaa
add
lret
es
cmc
mov
pop
int
lret
mov
hlt
stos
inc
outsl
sbbl
les
cli
lret
stos
push
pusha
push
repz
daa
pop
bound
mul
mov
and
xchg
div
push
adc
jmp
mov
imull
lods
sub
adc
mov
or
cmp
inc
in
loope
popf
mov
jo
xchg
push
mov
sti
sti
in
pusha
popf
sub
xor
jle
mov
xchg
xchg
push
xchg
js
jmp
cmp
gs
xchg
adc
mov
dec
sbb
frstor
pop
sub
mov
add
ja
out
mov
pop
or
inc
std
js
cmp
shl
cmpsb
loop
xor
xchg
clc
push
pop
push
sbb
popf
xchg
jno
mov
popa
jno
int
fs
sbb
dec
cmp
pusha
adc
push
xor
ficoms
pop
mov
shl
in
mov
fs
add
xchg
in
push
pop
mov
daa
fistpll
inc
adc
int
jle
test
lahf
add
fbstp
mov
inc
lock
sub
daa
jae
icebp
adc
stc
stos
enter
sub
bound
inc
xchg
add
dec
loope
leave
mov
test
push
test
jecxz
xchg
add
aad
fcmovu
repz
push
out
fs
enter
shlb
or
mov
stos
jecxz
aas
xchg
stc
cmp
pop
inc
outsb
jnp
aad
pushl
shlb
scas
add
test
adc
mov
xlat
adc
nop
out
lds
test
rorl
cltd
das
mov
xchg
or
add
mulb
pop
nop
outsb
inc
add
pop
sub
push
test
sti
mov
icebp
cld
cmp
lds
adc
push
jne
stos
nop
mov
inc
lds
jnp
add
sbb
and
or
dec
out
xchg
lcall
addr16
adc
in
inc
mov
or
cs
mov
mov
dec
sub
adc
cmp
jno
xor
pop
ficoml
sub
dec
and
icebp
xchg
sti
push
and
jle
movsb
sub
fldl
out
movsl
pusha
ds
adc
add
test
repnz
scas
ss
mov
repnz
mov
cmp
addb
push
clc
pop
adc
into
add
rcr
adc
or
dec
adc
rcll
sahf
xchg
les
repnz
sbb
iret
jns
mov
popa
fmuls
aaa
lret
aas
mov
stc
repz
jmp
fdivl
testl
cwtl
lods
pop
repnz
popa
push
lahf
pop
orb
imul
dec
scas
add
js
mov
std
and
jnp
pop
mov
adc
and
inc
rclb
xor
add
shlb
jg
sub
or
ret
xchg
pusha
xlat
adc
lahf
gs
mov
pop
in
fstl
mov
mov
sub
pop
jbe
fs
jle
aad
sub
jg
sub
aas
cmpsl
add
addr16
nop
dec
or
fsubrl
xor
jno
sub
aam
pop
push
inc
pop
test
in
xor
js
std
mov
aad
sub
adc
xchg
pop
mov
inc
add
enter
push
push
add
jle
mov
enter
stos
je
dec
mov
inc
cmc
cli
push
add
sub
xchg
mov
mov
bound
and
jb
js
in
xchg
shll
cmpsb
fdivl
push
mov
sub
mov
js
mov
out
les
popf
test
pop
notb
ss
fnstcw
int
inc
mov
iret
jmp
adc
and
and
xor
inc
popf
push
pop
mov
popa
dec
outsl
in
push
cmp
sub
jb
pop
or
pop
mov
inc
aam
outsl
aad
stos
outsl
repz
add
mov
xchg
pop
xor
xchg
pop
mov
dec
mov
and
punpcklwd
push
rorb
adc
insl
imul
pop
or
leave
mov
jecxz
push
dec
std
or
push
push
xchg
scas
mov
add
dec
add
out
cwtl
pop
lods
mov
cli
test
xchg
insb
scas
or
mov
pop
ja
dec
je
aam
scas
rcr
sub
sub
mov
xchg
int3
mov
sbb
mov
sahf
add
outsl
adc
daa
pop
nop
insl
xchg
push
cmp
pusha
or
pusha
mov
xchg
add
cld
loop
or
fucomp
imul
movsl
or
xor
gs
lds
jmp
imul
sbbb
cli
or
popf
sbb
or
push
push
loop
or
jl
int
mov
push
push
adc
dec
pop
mov
test
jle
sbb
push
mov
mov
cmp
lods
shr
ja
add
push
out
push
pop
xor
mov
pop
mov
pop
andl
push
dec
and
je
jnp
xor
scas
fsubs
pop
mov
fyl2x
add
dec
popa
les
cltd
cmp
pop
jg
xor
add
jnp
or
in
mov
out
daa
fsts
popa
in
mov
cmp
add
push
add
jecxz
jbe
mov
lahf
or
adcb
cmc
cs
testb
enter
push
cld
aam
add
jbe
inc
jge
test
or
mov
incl
and
xor
add
and
dec
ljmp
shll
or
jne
sub
mov
pop
das
push
sub
decl
mov
inc
add
in
adc
push
sub
movsl
mov
or
push
adc
je
xor
in
movsl
leave
stos
add
mov
mov
shl
mov
rcll
push
jb
xchg
imul
das
jo
cltd
add
mov
cmp
adc
insl
and
pop
inc
jns
mov
mov
mov
inc
push
fdivrl
fdivl
cmp
pop
and
push
xor
mov
xchg
sbb
mov
and
or
out
pop
das
icebp
fnstsw
call
lds
sbb
out
jg
dec
popa
or
repnz
mov
lcall
insb
xchg
in
or
pusha
js
pusha
jecxz
mov
or
jg
push
jge
aaa
in
fdivr
wbinvd
add
lahf
hlt
inc
and
adc
add
inc
lods
jb
inc
mov
int
cs
std
in
js
pop
and
add
cmpsl
inc
inc
sbb
adc
sbb
push
add
pop
xchg
idivb
shr
fwait
pop
clc
mov
xchg
es
add
cmp
pop
loope
enter
in
inc
sub
or
ret
or
and
int
loop
push
mov
mov
push
or
jg
and
mov
mov
aad
and
push
sbb
pop
outsb
aas
je
sub
or
jo
aad
mov
add
mov
jnp
adc
adc
mov
shr
cwtl
jno
cmp
add
scas
cwtl
je
daa
dec
ja
hlt
std
arpl
cli
xor
and
xchg
inc
sub
lret
jmp
iret
xchg
outsb
fcmovbe
iret
lods
xor
or
xorb
xor
and
xor
push
push
cmc
pop
mov
into
andb
dec
idiv
js
add
mov
je
inc
rcll
add
jle
shll
mov
xchg
sti
adc
mov
add
imul
rol
in
push
push
or
mov
lods
shrl
inc
xor
add
aad
mov
dec
add
ret
add
sahf
in
test
mov
mov
movsl
push
movsb
add
adc
and
lahf
iret
lcall
inc
dec
in
cmp
enter
add
or
leave
jb
xchg
dec
les
or
lret
dec
pop
mov
pop
loope
mov
push
movsl
sti
lret
inc
fbstp
lea
ljmp
jecxz
addl
aaa
mov
and
fbstp
adcb
pop
push
mov
jns
sbb
or
stos
scas
jnp
or
adc
mov
or
lret
push
adc
cmpsb
test
sbb
fwait
cmp
ljmp
cmp
std
inc
out
add
mov
cmp
mov
add
int3
in
fistpl
mov
dec
cmp
stc
dec
lods
dec
movsl
lret
out
stos
inc
pop
out
hlt
or
or
sbb
pop
xchg
inc
xlat
inc
idivb
adcl
cld
popa
fildl
subb
jno
add
xchg
gs
pop
test
push
js
push
mov
dec
ljmp
add
sub
jb
mov
and
lock
add
insb
mov
ja
add
pop
in
sbb
outsl
hlt
add
repz
mov
mov
pusha
mov
das
test
jnp
push
gs
in
inc
and
les
mov
cmp
xor
jl
add
sbb
gs
sub
leave
dec
push
and
xchg
add
sbb
mov
jae
repnz
iret
aam
lock
jmp
int3
gs
sbbb
jo
pop
ljmp
fnsave
aad
loop
subl
nop
outsb
pop
xchg
popf
mov
out
imul
mov
push
clc
imul
cmpsl
lds
and
jns
sbb
add
push
std
nop
cs
xor
xor
lods
dec
mov
movsb
mov
mov
lea
sbb
js
sbb
pop
incb
pop
out
inc
xor
add
dec
fiadds
call
pusha
jp
gs
mov
push
lds
xor
loopne
dec
je
xor
and
pop
xor
jecxz
adc
insl
cmpb
ja
js
push
arpl
add
cmpsl
push
iret
sub
iret
cld
rorl
dec
aas
push
dec
dec
xor
lods
scas
test
mov
mov
mov
mov
sub
fisttpl
js
test
pop
in
xchg
adc
pop
dec
int
and
test
mov
sbb
cmpsl
lock
jge
mov
bound
or
mov
push
mov
cld
pop
inc
mov
nop
mov
pop
mov
aam
jbe
mov
clc
jg
out
sub
pop
dec
or
lds
movsb
mov
mov
add
js
mov
repz
jmp
fstl
addl
call
mov
jmp
clc
jbe
add
adc
xchg
xlat
ljmp
popa
mov
sbb
sub
add
dec
cs
hlt
pop
lcall
mov
dec
je
sbb
dec
push
data16
fcoms
shll
or
pop
jnp
mov
das
out
bound
std
push
sbb
pop
into
push
les
pusha
out
xor
xchg
sti
adc
xor
push
sbb
mov
nop
xor
pop
add
fnstsw
inc
outsb
xlat
shll
xorl
jle
sbb
inc
fadds
into
cmp
mov
addr16
fdivl
test
add
lods
mov
xor
cmc
dec
mov
ficomps
push
dec
mov
pop
add
shrl
clc
cmp
cwtl
shr
sbb
xchg
adc
int
push
mov
and
pop
pop
or
dec
jns
mov
or
mov
mov
pop
addr16
sbb
filds
data16
push
mov
clc
pop
push
and
dec
les
mov
cmc
cmc
mov
xchg
sbb
xor
push
ljmp
adc
or
lods
aam
sub
add
pushf
xchg
push
mov
test
sbb
dec
inc
xor
movsl
mov
popf
popf
push
push
movsb
enter
cmc
nop
pusha
cmp
jle
out
je
jbe
add
adc
add
es
test
adc
mov
clc
fisttps
les
mov
xor
lahf
insb
jb
xor
mov
sar
test
fcoml
mov
mov
add
shlb
or
rcl
stos
ret
or
in
imul
jmp
push
les
push
mov
sbb
rorl
daa
sbbb
mov
testb
sub
xlat
cld
and
cs
pop
mov
out
pusha
in
test
aam
bound
jns
add
repz
rcr
mov
add
fidivl
add
in
inc
jp
adc
and
push
stos
pop
jo
or
mov
xor
and
xchg
aam
dec
lock
dec
das
push
ficoms
adc
inc
test
test
or
or
lcall
mov
frstor
cmc
popa
rcr
call
or
lock
mov
push
cmpsb
mov
pop
mov
les
fs
pop
push
arpl
jmp
adc
pop
jmp
xorl
add
push
sbb
cltd
das
add
sbb
or
les
clc
mov
dec
adc
movsb
adc
sbb
mov
jmp
dec
xor
sub
push
pop
inc
insl
mov
imul
xchg
decl
adc
sub
shlb
jae
aam
repnz
dec
jmp
jae
jo
or
add
dec
cmpb
test
inc
xor
ds
or
xchg
pop
mov
and
stc
pop
sbb
lds
add
or
pop
mov
push
stos
out
aaa
into
xor
filds
push
adc
cld
xchg
leave
pop
cmc
mov
xchg
sbb
enter
jmp
cmp
push
ja
jb
clc
mov
jmp
or
data16
sti
fisubrl
fdivrl
aam
fisttpl
pusha
repz
addb
insl
std
sub
jp
pop
or
mov
loope
pop
imull
loope
jle
xchg
lods
or
mov
in
mov
pusha
mov
lock
and
je
js
add
iret
push
dec
iret
add
lds
jmp
or
xchg
rclb
lods
inc
out
pop
roll
filds
in
add
sub
addr16
call
jecxz
lock
add
cmp
insl
push
or
sbb
gs
push
mov
pop
or
dec
dec
clc
xchg
sarl
mov
cmp
xor
push
push
mov
ror
stos
and
hlt
das
ffreep
icebp
xchg
push
pusha
outsb
push
les
leave
sarb
lea
jg
js
loopne
stc
repz
add
xor
jge
adc
xor
lret
push
add
aad
or
int3
sub
jl
pop
mov
push
ds
cs
adc
fnstenv
pop
cwtl
imul
or
lods
int3
daa
idivb
inc
jbe
repz
rolb
jmp
mov
ret
lock
popa
je
inc
pop
add
lea
stos
repz
add
dec
adc
cmpsb
jmp
add
jg
sti
shll
scas
xchg
fisttpl
fidivs
fists
adc
push
js
fldcw
push
mov
ds
mov
andl
sub
call
adc
mov
pop
or
sub
std
and
push
and
cmc
xor
pusha
test
loopne
add
and
jns
clc
adc
cmp
and
sub
dec
test
mov
adc
mov
mov
mov
es
sub
popa
aaa
stc
add
cmp
call
dec
dec
es
dec
and
add
mov
mov
or
sbb
es
jae
push
or
xor
cli
add
orb
fnstcw
adc
add
inc
out
inc
psubsw
cmpsl
fcomps
jl
or
std
xchg
sbb
or
mov
pop
std
in
push
cmp
mov
adc
mov
aam
out
dec
xlat
dec
mov
rol
or
roll
xor
fnstenv
fbld
aas
and
xlat
insl
sub
lds
jnp
add
fisubl
nop
pop
int
mov
cltd
into
mov
push
xchg
add
std
gs
push
push
fisttpl
test
mov
xlat
sbb
nop
jp
jns
push
xchg
hlt
notl
enter
test
bound
pop
pop
add
int3
enter
mov
cmpsl
adc
pusha
subl
out
mov
inc
daa
scas
mov
mov
cmp
test
lea
mov
mov
fimuls
mov
mov
jmp
push
add
jnp
sub
je
inc
lret
aad
or
sbb
xchg
xor
push
adc
cltd
and
cld
call
add
cmc
adc
add
das
jle
sub
out
pop
in
sahf
cmc
jae
sbbb
push
pusha
cwtl
popa
mov
xor
and
cmp
push
add
xor
out
jno
je
cld
mov
adc
stc
insl
lret
js
cmp
mov
adc
ljmp
insb
movsb
rdpmc
insl
shl
mov
mov
jbe
jmp
sahf
dec
push
cmp
call
cmp
je
pop
pop
add
add
push
stos
mov
mov
loop
or
je
les
xchg
dec
call
push
pop
rorb
fdivl
fisubs
das
sarl
jb
pop
stc
push
in
test
test
sub
mov
loope
rcrl
mov
dec
pop
mov
dec
repnz
fdivrs
stc
popf
cmp
movl
ljmp
pop
mov
inc
adc
shll
popa
adc
sub
pop
arpl
into
mov
rcrb
mov
fstps
pop
inc
push
loopne
rcrb
xchg
or
popf
cmp
xlat
mov
jne
je
dec
sub
xlat
lock
stos
mov
loope
lcall
out
pop
aas
xchg
mov
shll
mov
stc
pop
lret
xor
adc
jne
push
dec
roll
push
sbb
pusha
jg
dec
add
mov
leave
push
dec
clc
mov
mov
xlat
icebp
adc
enter
add
cmpsb
pop
jecxz
sbb
lds
mov
in
sub
cld
pop
mov
or
adc
inc
add
mov
fisttpll
enter
and
mov
sub
enter
sbb
sbb
sub
inc
iret
clc
and
mov
mov
ret
jle
addl
out
jae
add
inc
arpl
inc
pop
push
test
subb
rcll
aam
push
pusha
mov
and
aam
xchg
jmp
or
sub
sbb
rcll
cmc
fcompl
js
add
loopne
fcomi
cmpsb
loope
add
jg
sub
inc
cmpb
mov
lret
fistps
ret
dec
call
mov
sub
sub
out
outsb
add
add
rorb
lods
mov
or
xchg
add
mov
dec
add
ret
pusha
sub
mov
mov
cmc
rorb
lea
mov
insl
dec
addb
enter
push
adc
push
ret
cmc
and
into
and
notb
mov
jbe
ror
loope
and
push
imul
shll
pop
mov
rcrl
notl
stos
mov
inc
jmp
pop
and
cmc
pop
pop
inc
sbb
adc
pusha
push
mov
shll
int
cmp
and
jl
call
cmpsb
stos
push
cwtl
lock
inc
dec
shr
fcomps
aam
loope
push
leave
and
int
shlb
dec
mov
xor
fsts
sbb
fwait
mov
scas
dec
jnp
inc
add
and
xchg
xchg
xchg
pop
out
insb
loopne
test
popl
out
cmp
push
repnz
push
mov
lea
jae
push
adc
and
adc
fsubrl
jns
sbbb
adc
inc
outsb
mov
dec
imul
xchg
dec
adc
rolb
jp
xor
lods
icebp
mov
test
rol
dec
dec
mov
xor
test
mov
sbb
mov
mov
xchg
popa
or
cltd
fdivr
sbb
cs
mov
dec
les
mov
mov
aas
inc
xor
jmp
movsl
jae
add
test
mov
inc
shll
daa
mov
add
js
inc
sub
xchg
mov
int
ret
pop
jmp
adc
push
hlt
adc
outsb
testb
sbb
addr16
lcall
hlt
sub
push
pop
fbstp
sub
adc
fisttpll
sbb
mov
test
enter
shr
pushf
fildll
adc
dec
mov
add
push
nop
push
test
mov
and
inc
fildl
sbb
popa
mov
sub
mov
out
push
outsb
in
jmp
pop
pop
cli
and
lret
pop
adc
ret
mov
xchg
or
pop
mov
mov
movsl
dec
adc
repnz
hlt
notb
les
push
cmp
mov
xor
fs
dec
das
sbb
repnz
das
pop
jmp
pop
orl
aad
addl
repnz
sub
adc
enter
orl
xor
lahf
xor
cwtl
cmpsb
mov
push
aad
lods
aas
dec
adc
fdivrs
or
add
and
icebp
xchg
testl
jns
bound
aaa
xor
jp
and
std
into
imul
inc
outsb
scas
outsl
push
xchg
test
adc
push
popa
jne
mov
and
leave
jne
pushf
jle
out
sub
adc
inc
sarl
scas
mov
je
movsb
mov
adc
sub
or
in
mov
xchg
xchg
fldt
xor
mov
and
aam
pop
jmp
jne
jl
dec
inc
pop
loopne
insl
cltd
add
pop
cmpsb
mov
adc
imul
mov
xchg
and
push
fmull
arpl
and
jle
xchg
jle
es
pop
data16
rolb
add
fwait
sbb
test
xchg
loopne
into
rorl
and
sbb
add
pop
aad
sti
or
popa
mov
mov
es
add
and
es
movsb
mov
xor
push
mov
test
cmpsl
and
pop
sbb
nop
add
aam
les
outsb
pop
movsl
clc
jl
or
leave
popa
aaa
roll
std
jg
popa
sub
std
test
push
xchg
xlat
aaa
test
js
add
adc
push
nop
lods
lahf
mov
mov
divl
shlb
popf
popa
add
add
mov
movsb
fwait
lcall
rclb
out
add
adc
leave
add
jae
imul
les
add
add
dec
jnp
sbb
incl
lea
xchg
bound
push
pop
jb
std
xor
int3
dec
out
and
jge
fsubrs
dec
adc
popa
mov
jle
push
test
dec
jb
add
adc
adc
and
cli
lret
lcall
arpl
imul
dec
add
pop
std
sbb
cmc
jnp
xlat
sbb
inc
insb
mov
jg
add
test
stos
inc
stos
sub
lahf
and
mov
sub
arpl
add
fiaddl
sub
bound
or
add
cmp
sbbl
decl
inc
xchg
lods
es
add
push
sbb
pop
and
mov
ret
das
in
jle
add
push
pop
cltd
lret
imul
int
js
mov
je
inc
sbb
mov
loopne
xchg
hlt
mov
daa
pop
ud0
test
adc
push
stc
ljmp
cwtl
mull
add
ret
sbbb
push
xlat
xchg
sarl
stc
mov
mov
inc
add
mov
daa
pop
push
mov
idivl
popf
movsl
fidivs
jns
sbb
ja
xchg
or
push
pop
jns
inc
xor
mov
loopne
push
push
jns
lods
push
mov
sbb
mov
addr16
xor
fsubl
stos
stos
push
sbb
shr
sub
test
test
sti
fadd
fildl
dec
hlt
or
stos
cmp
mov
jnp
idivb
mov
mov
or
pop
les
ret
hlt
push
lds
movsl
in
inc
inc
pusha
mov
mov
into
das
push
adc
xor
mov
sbb
and
and
das
outsb
add
pop
mov
movsl
push
insb
adc
mov
mov
mov
mov
lret
roll
rcll
pop
outsl
cmc
xor
and
bound
xor
mov
ret
lcall
aaa
incl
cltd
insb
inc
nop
fwait
adc
popa
into
and
push
shlb
cltd
fwait
sbb
cwtl
pop
test
loopne
mov
fsts
loopne
sarl
cmpsb
or
hlt
pushf
loop
cs
call
or
fildl
insb
add
xchg
pop
xlat
push
and
or
mov
push
decb
mov
adc
cmp
sbbb
push
pop
adc
xchg
push
aam
loope
cli
loope
shll
ret
inc
imul
sub
xor
aaa
jo
insb
add
push
xlat
xchg
mov
adc
mov
add
or
push
add
popl
pop
mov
pop
add
cld
lret
jo
adc
pusha
rclb
add
dec
or
pop
and
nop
jg
pop
add
sbbl
sub
dec
lcall
imul
xor
add
fdivr
mov
push
mov
dec
int
sub
adc
outsb
into
andb
imul
jno
jnp
cmp
loope
cmpsl
jp
adc
nop
push
sti
adc
test
add
sub
xchg
sbb
push
clc
cmp
ljmp
shlb
out
in
pusha
jns
outsb
adc
xor
cmpsb
jl
mov
xor
lret
push
call
xchg
sub
mov
gs
inc
cli
in
lret
add
jno
adc
inc
leave
daa
je
bound
adc
mov
adc
jno
pop
scas
sub
pop
add
xchg
or
mov
mov
popf
inc
fstpt
cmpb
and
ljmp
mov
nop
inc
or
and
sbb
add
add
lahf
xchg
out
add
xor
lock
ds
or
sub
inc
dec
push
pop
in
clc
push
rolb
inc
in
dec
mov
lods
sbb
inc
cmpsl
adc
pop
lahf
ror
mov
call
aas
or
sti
inc
jge
fcmovnbe
add
sbb
mov
and
xor
push
dec
pop
cwtl
mov
add
inc
imul
flds
mov
push
mov
outsl
pop
popl
daa
out
enter
enter
xlat
mov
shrl
add
imul
adc
xchg
nop
pop
insl
and
cmp
dec
ffreep
push
push
push
add
in
jns
cld
int
out
shlb
insb
movsb
ja
call
fidivrs
repz
mov
add
ss
adc
sub
test
ret
stc
daa
or
or
inc
add
stc
pop
mov
les
mov
sub
sbb
cmp
rolb
mov
mov
adcb
fsub
daa
add
cld
jg
and
lods
dec
or
or
outsb
cs
cmpsb
mov
scas
and
rcr
and
xchg
xchg
popf
cltd
mov
std
popa
pushf
fdivrs
sub
in
jle
aad
jae
mov
mov
pop
popa
call
pop
inc
dec
cmc
mov
fsts
test
xchg
mov
add
add
rorb
mov
pop
shlb
popf
xor
pop
sbb
sahf
mov
push
push
sub
dec
pop
xchg
sahf
imul
jp
add
inc
decb
mov
add
stos
jnp
sbb
jmp
cmp
or
adc
mov
stc
cwtl
mov
std
jecxz
lods
add
nop
cli
mov
pop
cmpl
inc
pushf
cltd
mov
ret
test
pop
pop
loope
mov
icebp
fildll
stos
subb
aam
push
dec
add
xor
outsb
adc
rclb
mov
orb
repz
sub
xchg
fcoml
add
addr16
arpl
jecxz
pop
dec
mov
call
dec
mov
test
popf
sub
aad
lret
negl
in
add
sub
adc
and
sbb
cli
bound
jecxz
dec
or
mov
loop
mov
leave
add
mov
aas
xchg
add
and
dec
add
insl
testw
paddw
and
sti
jg
or
int
fildll
inc
int3
scas
mov
daa
lods
hlt
out
pop
out
pop
pusha
lds
je
iret
and
push
cmpl
add
mov
xchg
push
pusha
xchg
add
xlat
jno
comiss
jl
fdivr
loope
pop
mov
mov
jo
xor
movsl
sbb
mov
pusha
and
dec
pop
in
das
push
sbb
dec
cld
fistps
mov
push
jbe
xchg
mov
hlt
jo
sub
dec
xchg
outsb
cld
fchs
cld
or
xchg
pop
add
shrl
orl
push
jg
int
or
cmp
loope
jmp
push
cmpsl
roll
jbe
or
fs
or
push
dec
mov
enter
push
pop
pusha
dec
stos
filds
inc
btc
dec
add
fcmovnb
sti
cli
jno
and
jl
jne
bound
cmp
cmc
mov
and
mov
loop
repz
fsts
mov
cmp
loop
enter
icebp
adc
cmp
xchg
stc
add
pop
and
mov
leave
jns
inc
add
inc
dec
movsl
call
xchg
mov
es
pop
jno
mov
sbb
fisttpl
adc
adc
or
adc
outsb
pop
dec
cwtl
pop
mov
inc
dec
sub
pop
das
sbb
mov
das
pop
push
gs
add
mov
cmp
fsubrl
dec
in
and
les
popf
mov
push
popa
pop
or
push
shl
movsl
dec
sbb
das
lock
lods
lret
popf
mov
push
les
imul
add
ffreep
xchg
mov
dec
clc
mov
aas
and
mov
movsl
daa
aas
clc
sti
mov
jmp
mov
adc
mov
rorl
pushf
outsb
fwait
xchg
mov
add
ror
jne
adc
aam
mov
popf
cld
or
iret
lcall
repnz
and
outsb
and
fmul
mov
sub
mov
jmp
imul
push
push
inc
imul
sub
add
mov
cmp
and
mov
sti
and
sub
icebp
cmpsb
cmpb
pop
and
fs
push
adc
cs
add
fisubl
mov
xor
aam
jno
xchg
popf
std
xor
inc
mov
lahf
add
adc
add
mov
das
lods
mov
jmp
ds
idivb
and
sbb
fcoml
mov
xor
fnsave
xor
loop
pop
insl
xlat
in
mov
decl
aam
outsb
adc
sbb
in
pop
fwait
mov
aas
aad
arpl
bound
jmp
jnp
rcll
jmpw
sbb
mov
cld
jno
test
pop
dec
pop
pop
push
push
ljmp
daa
test
and
or
fsubrs
or
dec
je
mov
jmp
fs
or
dec
sub
inc
or
or
loop
add
call
test
movsb
cmp
mov
pop
fidivl
add
pop
dec
into
or
fucomi
pop
sbb
or
dec
add
inc
cmp
andb
negl
xchg
scas
dec
dec
pop
je
and
mov
add
sub
mov
lret
fstl
push
mov
mov
add
popa
mov
das
subb
add
inc
push
mov
or
popa
push
cwtl
mov
mov
ljmp
nop
or
scas
into
mov
adcb
mov
lahf
cmp
xorb
xlat
add
imul
push
jmp
lahf
aaa
cmp
inc
std
sbb
sub
dec
adc
shlb
jmp
xchg
test
or
cmp
movsb
sub
push
and
dec
pop
std
shrl
pop
sub
xchg
test
hlt
mov
sub
nop
testb
imul
punpcklbw
scas
add
ret
pop
nop
outsl
add
iret
idiv
out
shl
pop
add
adc
scas
pop
repnz
push
mov
cmpsb
push
lock
shll
add
je
cmpsb
sub
dec
out
pusha
and
testl
and
je
stc
push
or
jno
outsl
lods
sub
js
xor
adc
add
mov
adc
test
xor
or
out
or
mov
pop
dec
fwait
stos
pusha
cmp
mov
mov
mov
adc
push
sahf
test
dec
add
stc
sub
cld
lods
sbb
sub
xchg
or
cmc
xchg
xorl
jge
fidivl
adc
pop
daa
mov
mov
mov
pop
shr
es
jp
xchg
jecxz
xchg
mov
adc
cs
mov
cs
fdivs
jbe
or
inc
jg
and
das
iret
ficompl
test
enter
xor
pop
incb
push
into
push
sbb
pop
jmp
adc
add
xchg
mov
pop
daa
sbb
std
mov
jle
das
jbe
movl
adc
adc
xchg
or
xchg
cld
loope
outsb
aas
pop
mov
enter
sub
test
and
lods
testb
cld
repz
jo
ljmp
mov
sub
loope
adc
sub
aas
and
nop
and
push
cwtl
ja
pop
inc
add
arpl
test
mov
or
and
notb
inc
mov
stc
lret
repz
cmp
cmp
sub
test
into
in
cltd
movsl
push
dec
in
cmc
loopne
nop
dec
outsl
pusha
test
and
adc
dec
popa
lret
arpl
mov
and
sahf
pop
movsl
ficomps
mov
cmp
jecxz
aas
xor
ljmp
loop
pop
adc
add
fstps
jp
es
or
add
cmpsl
add
sti
fwait
dec
orb
mov
inc
pop
xchg
enter
lret
mov
add
xor
xchg
mov
or
mov
pusha
int3
outsl
mov
aaa
adc
mov
and
loopne
mov
loope
or
mov
out
pop
gs
ret
push
shrb
jne
iret
lds
das
push
insl
add
add
push
add
mov
loopne
cmpsb
xchg
or
loope
adc
sbb
xchg
add
cs
pushf
lock
xlat
inc
mov
xor
sbb
addr16
jmp
xor
cmpsb
xor
pop
add
lock
aam
sub
and
inc
adc
and
jp
xlat
mov
pusha
push
lods
rcll
add
and
or
pop
push
shl
dec
fcomip
jnp
mov
dec
aaa
ret
jmp
xchg
sti
jno
daa
negl
mov
je
jnp
mov
iret
nop
loopne
fbld
or
push
adc
xor
pop
cwtl
add
mov
inc
pop
add
das
daa
in
push
in
imul
out
sbb
test
in
jl
notl
lods
rorb
or
xchg
sub
xor
or
sbb
mov
xor
cwtl
pop
dec
sahf
mov
and
xchg
jle
faddl
dec
loop
cmp
mov
das
pop
pushf
mov
push
jge
lcall
fisubs
cmc
mov
ljmp
xchg
adc
lret
inc
cld
and
adc
and
add
dec
add
push
inc
sub
fimuls
and
jle
js
adc
adc
and
mov
sub
mov
lds
mov
jl
sub
fwait
pop
sbb
xchg
ja
pop
push
dec
inc
outsb
test
mov
and
scas
and
loop
rclb
arpl
inc
xchg
add
dec
and
or
inc
jg
mov
dec
add
sub
jmp
pop
and
popf
rcll
adc
subb
sub
out
out
push
pop
lock
les
and
aad
fiadds
shl
and
int3
add
pop
xor
stos
mov
movsl
lods
out
and
in
xor
sub
mov
outsb
test
inc
dec
push
sti
cmp
movsb
mov
push
sub
dec
mov
mov
mov
mov
cmpsl
push
mov
sti
cmp
sub
in
pop
arpl
and
adc
cmp
lcall
sub
add
sub
sti
jnp
fwait
or
sbb
pop
lods
sub
or
sbb
xchg
pop
jle
or
fnstsw
inc
xchg
fisttpl
push
pop
mov
sti
pop
sub
sbb
call
push
mov
adc
fstpl
enter
je
dec
adc
cmpl
pusha
dec
sbbb
jbe
cmpsb
stc
jae
pop
mov
xor
xor
push
mov
add
mov
lret
adc
xor
int
xor
add
cmp
icebp
adc
xchg
orb
ficompl
adc
call
std
jne
add
inc
cmp
out
and
ret
fildl
pop
inc
or
dec
aam
sub
das
jmp
divl
fisttpl
xlat
int3
adc
add
daa
es
int
rcrb
jmp
fs
sub
setbe
cmc
es
fbld
or
pusha
dec
pop
lea
rclb
and
cmpb
mov
out
xor
add
daa
imul
popa
push
mov
inc
rorb
pop
cmp
xchg
insb
pop
xchg
aam
icebp
pop
and
popf
sub
pop
push
mov
add
imulb
das
sub
jb
push
insl
mov
cmc
or
mov
xchg
pop
ss
repz
and
cmp
dec
lods
adc
pop
sbb
pop
idivl
inc
cs
or
jle
hlt
je
jp
and
sub
inc
int3
add
arpl
sarl
xor
pop
insl
add
cmp
in
pop
scas
idivl
xlat
insb
xor
popf
popa
adc
cmp
fs
push
fmuls
xor
sti
and
mov
jbe
add
xor
cltd
dec
lods
pop
popf
cmpsl
pop
test
mov
pop
std
outsb
shl
cld
cmp
jl
xor
fnsave
nop
loope
daa
pop
cmp
sub
push
js
dec
sub
mov
hlt
xchg
hlt
or
xor
dec
add
adc
iret
sbbl
pop
ds
adcb
pop
shl
lods
fnstenv
std
xorb
jle
nop
mov
fidivs
int
icebp
mov
mov
push
mov
adcl
fstl
cwtl
push
out
sub
aaa
dec
add
seta
loopne
push
mov
add
mov
xchg
pop
xor
nop
lret
les
jae
pop
std
ljmp
pop
push
xor
addl
push
lcall
fdivp
or
sub
imul
pop
mov
shll
pop
jb
mov
rorl
add
dec
jg
cmp
es
or
mov
jge
outsl
repz
jne
mov
and
sbb
add
mull
mov
add
adc
cwtl
movsl
sub
popf
and
movsl
sbb
pop
rcll
jecxz
pop
xchg
je
or
outsb
add
nop
loop
nop
add
jg
xor
push
je
adc
icebp
jle
arpl
pop
inc
add
xchg
test
cmp
dec
sub
stc
repz
fldcw
jb
or
clc
or
xor
pushf
push
fldcw
shr
add
mov
add
and
or
in
mov
xchg
mov
sahf
aas
test
flds
jno
pop
ljmp
das
mov
ljmp
rcll
sub
outsb
popf
out
fimull
std
xor
add
and
or
add
pop
rclb
mov
jo
sbb
mov
mov
js
push
cmc
adc
leave
adc
sub
mov
mov
or
psubusw
mov
xchg
and
xchg
test
adc
dec
mov
pop
jecxz
fdivr
into
or
shr
sub
push
daa
pop
pop
push
adc
stos
and
xor
test
test
or
imul
pmulhw
xor
fcmovnb
das
push
mov
jmp
test
add
add
lock
cmp
or
mov
adc
lods
lcall
xchg
popf
aad
xchg
je
push
fistpll
or
xor
cli
jb
leave
inc
and
or
fadds
add
xor
dec
xchg
test
mov
add
iret
and
dec
movsl
sbb
sbb
push
xchg
out
andl
loope
loop
fnsave
and
ret
pop
paddusb
add
pop
or
push
dec
frstor
lds
add
in
cmc
loope
ds
mov
adc
das
clc
or
pop
cmpsl
jl
fiadds
mov
rcrl
jg
pop
push
jecxz
nop
mov
sbb
mov
cmp
sub
or
pop
out
iret
lret
sbb
test
cmp
jbe
repz
in
aas
das
xor
jbe
vmread
mov
cmp
mov
leave
pop
mov
pop
sbb
xor
popf
je
lret
or
push
push
cmp
jl
ja
or
cs
pop
jge
push
sbb
sbb
and
dec
subb
push
insl
push
mov
lret
push
aaa
jmp
add
jecxz
cmc
jmp
adc
add
dec
or
dec
pushf
lods
lea
cmp
lcall
or
add
ss
xchg
xchg
sahf
dec
mov
mov
xchg
dec
loopne
aad
add
add
xchg
and
pusha
sub
mov
mov
pop
jnp
les
inc
dec
outsb
mov
and
adc
pop
nop
mov
popa
add
lret
ret
sbb
xchg
cltd
pop
andb
sbb
cmp
adc
push
cwtl
sub
lcall
loope
sbb
leave
push
inc
test
leave
pop
lcall
mov
jnp
jp
push
add
in
jl
push
push
mov
jno
push
cmp
daa
cltd
jp
andb
mov
mov
jae
xor
and
mov
subb
cli
push
mov
ds
or
add
fidivl
mov
popa
pop
adc
test
int3
xchg
out
jb
pop
fsubrl
sub
out
sar
int
jae
add
popf
mov
shrb
js
mov
mov
xchg
push
flds
mov
mov
test
sahf
and
andl
aam
cmp
xchg
or
mov
xchg
test
sbbb
add
test
sub
mov
and
pop
je
xchg
mulb
xor
loopne
inc
add
mov
add
or
cmp
pop
add
mov
int
pop
ja
data16
inc
jg
mov
decl
lahf
pop
pop
clc
jp
stc
pop
jmp
push
test
or
jg
jnp
scas
jae
pop
pusha
sbb
push
aaa
adc
xor
mov
pop
mov
jnp
pop
aaa
aas
or
scas
repz
mov
mov
and
xor
imul
jns
xchg
adc
ljmp
jbe
inc
sahf
cmp
add
dec
inc
pop
out
repnz
pop
loopne
cs
xchg
imul
das
test
jmp
push
jecxz
push
xor
ljmp
mov
add
push
cs
imul
cs
cmc
sbb
cmp
add
das
xchg
loopne
inc
mov
pop
jns
loopne
xchg
dec
adc
in
daa
in
xchg
sbbb
aad
dec
pop
rcr
popa
xchg
sti
lcall
xchg
iret
or
push
jns
jbe
mov
jno
push
clc
icebp
loop
sub
lock
and
xlat
cmp
mov
sbb
xchg
hlt
jno
jb
clc
imul
roll
fdiv
mov
clc
cwtl
cmc
iret
or
mov
inc
sbb
xchg
out
sub
fwait
mov
mov
pop
jge
sub
icebp
movsl
aaa
mov
mov
jbe
sub
pop
cmpsl
lods
jge
loop
add
mov
adc
frstor
xchg
faddl
mov
mov
aas
xchg
mov
popa
add
inc
out
push
sbb
insl
loop
jge
ss
scas
lcall
hlt
mov
jmp
xor
mov
sarb
outsb
movsl
push
mov
adcb
or
dec
arpl
aad
rcrb
mov
sbbb
jp
popf
pop
fisubl
add
dec
cli
jbe
mov
cld
pop
in
pusha
sub
lret
cmp
sbb
jge
lods
jp
in
and
gs
jno
jns
sarb
mov
adc
ss
data16
dec
dec
rorb
mov
ljmp
sub
pop
jmp
and
jo
pop
loop
arpl
bnd
sbb
and
or
je
imul
sub
mov
std
or
test
inc
add
dec
xchg
pusha
pop
orb
ret
andl
pop
sbb
repnz
popf
push
in
add
xchg
dec
lret
subb
popf
sbb
loop
pop
gs
or
cmpsl
cmpsl
rol
mov
jecxz
dec
adc
ret
adc
ror
dec
das
xor
or
fdivrl
mov
jge
push
pop
push
pop
ret
adc
fidivs
fwait
test
call
jbe
cmp
jge
ret
pop
push
dec
xchg
enter
jb
add
rorl
or
jmp
hlt
ds
stos
adc
add
or
mov
xor
add
out
lcall
je
fildl
jnp
imul
and
add
and
xor
inc
cmp
jns
popf
cmp
jmp
jp
mov
enter
inc
jo
idiv
mov
or
pusha
scas
stc
out
sbb
push
aad
mov
dec
pop
rcl
repz
adcb
xor
in
shrl
bound
ficomps
lds
sub
push
pop
mov
test
movsl
or
mov
adc
sbb
leave
sub
add
push
cmp
push
arpl
push
pop
mov
xor
mov
dec
mov
push
subl
add
test
or
orb
xor
daa
jb
repz
test
fbld
cmp
xchg
xchg
ret
push
pop
pop
stos
sub
cmp
or
pusha
dec
aad
subb
add
mov
mov
das
mov
andps
cwtl
shlb
xchg
kmovb
call
and
sub
mov
fiaddl
xchg
cmpsl
movsl
pop
fnstenv
cmp
popa
add
cs
dec
jmp
dec
xor
pop
outsl
lods
add
cmp
jo
jg
xor
aam
lcall
into
mov
les
loop
lahf
addr16
jle
xor
jno
add
jmp
loopne
push
aam
pop
jg
test
sub
notb
in
xlat
out
add
pusha
adc
mov
psrld
aad
pop
das
push
mov
mov
xor
jl
imul
jg
inc
pop
or
jmp
fnstsw
andb
mov
adc
jge
lds
call
cmpsb
je
and
cltd
sub
jp
jp
xor
jg
lea
jae
mov
adc
daa
push
mov
mov
jbe
add
loop
ja
or
rolb
jno
sahf
xor
jmp
sbb
aam
bound
sub
add
enter
pop
and
jmp
cli
pop
popf
fnstcw
les
repnz
inc
and
xchg
out
adc
nop
mov
leave
push
out
adc
or
cmp
popf
leave
lret
or
mov
jo
mov
pusha
jno
add
xchg
jmp
ljmp
or
addb
jae
lcall
mov
mov
out
inc
jmp
or
sub
pop
mov
les
andb
mov
sbb
imul
pushf
jo
xor
je
fiadds
adc
in
jne
mov
addr16
adc
mov
push
or
sbb
jl
loop
xchg
dec
mov
mov
push
cld
cmp
aas
inc
ret
je
fdivrl
ljmp
clc
pop
outsb
and
and
add
out
adc
mov
popf
jecxz
sub
sbbl
add
out
sub
hlt
mov
hlt
inc
pop
xchg
inc
sbb
push
inc
fucom
lret
or
iret
sbb
add
mov
lds
fildll
add
fs
adc
popf
sbb
lcall
mov
mov
mov
test
add
xchg
aaa
and
sbb
cmpb
popa
mov
mov
int
scas
fstpl
int3
pop
nop
pop
push
mov
dec
in
jb
and
dec
adc
mov
fs
pop
fisubrl
inc
cmovnp
fdivs
loop
nop
pop
cmc
test
adc
aas
lahf
in
cmp
cmp
sahf
push
mov
lret
test
scas
xchg
push
push
sbb
adc
fwait
xchg
xlat
sbbb
rclb
mov
aaa
fwait
daa
xor
cmpsl
add
jmp
fcomps
cmovs
jle
xorb
and
lret
pop
cwtl
das
xor
cmc
pop
mov
mov
addb
fisubl
out
add
mov
sub
shrl
icebp
or
enter
std
inc
sub
mov
xchg
and
jle
sbb
ret
dec
iret
xchg
sarl
or
xchg
jg
idivb
scas
sbb
test
add
xchg
pop
iret
pusha
add
inc
and
shlb
fists
add
sbb
jge
mov
pop
or
xor
add
sbb
xor
sar
lret
aad
enter
adc
je
or
push
mov
cmp
cmp
into
cmp
sbb
jle
into
xor
pop
das
push
into
sub
fs
jae
repz
push
pop
inc
pop
or
pop
xlat
icebp
movsb
andb
jl
js
mov
mov
faddl
jne
ret
popf
jne
cmc
xor
adc
xchg
or
fcomps
popa
call
pusha
mov
mov
push
lret
orb
and
push
sarl
ret
dec
push
gs
xlat
lods
mov
pusha
pop
fdivrs
outsl
cmp
int3
or
js
fisttps
and
dec
pop
daa
mov
and
out
lods
sub
xchg
mov
fisubl
fsubp
inc
or
add
xor
pushf
inc
popa
in
xor
mov
jmp
imul
mov
int3
jne
stos
cmpl
cmc
xchg
mov
inc
or
in
and
cmp
pop
bound
mov
cld
xchg
aam
adc
lret
das
lret
cwtl
jp
cmp
pushf
jnp
outsb
cmpsl
xor
movsb
or
jle,pn
and
fs
loop
jecxz
dec
cmpsb
lods
sti
mov
push
or
addr16
repz
or
sbb
adc
sti
pop
dec
jmp
pusha
pop
sub
cmp
cmp
addb
repz
cwtl
mov
pop
pop
sbb
repz
push
lods
mov
and
mov
adc
into
sbb
cmp
push
sub
sti
xchg
adc
mov
scas
inc
inc
ret
inc
mov
popf
clc
aaa
jno
es
aas
lahf
cs
out
xor
mov
popf
fptan
push
jae
pop
or
inc
or
scas
nop
xchg
cmpsb
dec
add
jl
cmp
pop
loopne
out
out
xchg
sbb
or
pop
stos
mov
add
inc
cmp
xchg
test
repnz
xchg
jne
push
mov
pop
push
push
out
fistpll
data16
sub
dec
add
xchg
or
cmp
xchg
lcall
inc
cmp
inc
push
jae
seta
xchg
test
adc
lret
dec
stos
or
inc
cmp
xor
xchg
popf
lock
sub
in
pop
mov
sub
mov
and
mov
jecxz
repnz
lcall
and
lock
fsubrl
fists
repnz
in
out
repnz
xchg
jmp
fldl
mov
repz
shr
out
test
sbb
push
sub
or
test
push
pop
insb
clc
mov
jo
mov
cmp
popf
mov
rclb
mov
mov
jns
popa
adc
lret
cmp
push
fbld
in
adc
dec
add
call
jmp
cmp
outsb
inc
add
and
pushf
out
add
inc
jbe
js
cmpsb
mov
out
jb
sbb
inc
xchg
push
cmpsb
das
lods
push
adc
bsr
dec
pmulhuw
addb
xor
xchg
cwtl
push
pop
daa
adc
mov
aam
stos
mov
lock
test
mov
jge
daa
or
xchg
ja
mov
and
cmp
in
mov
dec
movsl
jmp
out
sarl
cmpsb
lcall
and
inc
push
aad
and
pop
add
add
push
dec
inc
or
sub
ss
imul
and
sbb
mov
adc
into
jge
nop
pop
push
mov
cmc
lahf
cs
add
aam
and
adc
add
stc
cmc
clc
xor
mov
mov
out
fiaddl
push
nop
das
mov
das
lods
jne
int3
shl
add
jl
and
pop
jae
jmp
insb
shr
sub
xor
in
adc
mov
lds
pop
cmpsb
and
xor
sti
pop
in
jmp
lret
aas
std
pop
jo
test
jno
mov
xchg
push
push
pminsw
movsl
test
in
fcmovu
cmp
push
jecxz
dec
sti
call
jnp
adc
and
add
dec
inc
movsl
enter
mov
cld
pop
pop
stc
lds
mov
addb
mov
mov
adc
pusha
mov
imul
addr16
in
jo
test
adc
xor
repnz
xchg
or
push
iret
push
inc
out
lcall
xchg
cmp
mov
mov
out
add
cld
push
shll
repnz
dec
hlt
sbb
mov
popa
out
and
xchg
dec
sbb
cli
enter
sub
imul
xchg
mov
in
rcrl
aad
mov
cmp
lock
or
sub
and
push
imul
and
or
in
cwtl
adc
or
jno
dec
idivb
cltd
pop
add
pop
and
and
adc
sbb
add
jl
daa
adc
pop
in
dec
out
ficoml
dec
shlb
push
sti
mov
pop
jb
rorl
jo
loope
ljmp
push
hlt
cmp
push
xor
imul
imul
cmpsl
imul
out
fwait
push
call
jnp
jns
adc
xchg
pop
push
inc
add
in
popf
dec
push
sbb
sub
or
mov
mov
out
adc
sbb
pop
mov
andb
mov
jo
add
or
pop
cwtl
mov
add
mov
ds
jbe
cmpb
push
sbb
std
push
inc
fucom
test
mov
xchg
leave
leave
hlt
lock
inc
sbb
xchg
pop
pop
sub
into
mov
dec
jl
push
sbb
add
mov
dec
ljmp
xlat
lret
bound
stc
push
or
pop
lahf
inc
stos
aad
dec
pop
outsb
sbb
jp
cmp
test
jb
daa
mov
dec
or
stc
fdivrs
popa
or
sub
pop
cmp
pop
pop
stos
push
add
xor
mov
sub
enter
mov
mov
test
xchg
fstps
clc
lods
loop
sub
repnz
repnz
mov
mov
enter
aad
mov
pusha
cwtl
or
mov
xchg
xchg
in
ja
daa
push
push
leave
subl
xchg
imul
loopne
insl
push
mov
mov
outsb
mov
scas
int
sub
out
dec
add
dec
pop
push
push
out
mov
sbb
xchg
cwtl
xchg
stc
leave
dec
sarb
or
or
push
js
inc
push
call
push
sub
cld
mov
les
adcb
add
jle
aaa
mov
mov
xchg
push
into
mov
test
daa
cmc
mov
push
int3
outsb
xchg
jne
pop
pop
clc
mov
or
repz
lret
pop
pop
inc
ficoms
add
cmp
mov
adc
fisttpl
xlat
push
mov
dec
adc
push
adc
sbb
xor
dec
ljmp
int
shr
incl
loope
in
ret
mov
inc
lods
pop
hlt
cmp
jae
sbb
cmp
mov
sbb
lea
push
pop
push
lods
jmp
repz
push
jno
xor
dec
mov
fldenv
xlat
sar
push
mov
cmp
pop
inc
mov
and
jle
xchg
stc
or
and
lods
les
lahf
cltd
add
pop
lods
add
notl
mov
rorb
mov
scas
sub
xchg
mov
stos
add
lock
sub
push
xor
dec
roll
arpl
xchg
pop
int3
xor
jno
cmpb
cmp
dec
aam
hlt
int3
add
jl
sbb
cmpb
mov
lret
add
jno
xlat
jb
cmp
add
cld
imul
pop
les
and
jecxz
adc
pop
add
xchg
jno
jns
mov
cmp
pop
popa
pop
jecxz
movups
icebp
scas
enter
popf
in
pop
add
pop
stos
push
add
scas
lcall
fsubr
xor
dec
adc
and
xchg
dec
dec
jl
sbb
mov
dec
add
loopne
cltd
sbb
inc
inc
sbb
pusha
mov
mov
pop
and
xor
mov
push
addb
dec
hlt
dec
outsb
cmc
pop
cmpsb
sti
dec
mov
orb
std
push
xchg
stos
jne
xchg
and
dec
mov
adc
dec
cld
pusha
test
dec
in
les
and
shlb
push
popf
cwtl
mov
or
mov
pop
cmpsl
mov
insb
lods
popa
xchg
jecxz
test
aaa
dec
fs
mov
mov
pop
std
pop
lods
daa
add
and
ljmp
pop
sub
push
xchg
lcall
cmp
add
cmp
xchg
and
mov
sbb
js
dec
jg
jnp
xchg
fs
jle
push
pop
call
lahf
mov
test
lods
add
int3
and
adcb
sbb
stos
or
aad
das
cltd
dec
add
pop
xor
or
dec
popa
mov
jle
cmp
js
outsl
ja
add
jnp
stos
fwait
mov
push
mov
das
pushf
mov
add
test
hlt
mov
enter
adc
out
test
jnp
pop
pop
sbb
add
lea
sub
dec
call
add
lds
adc
icebp
dec
push
push
imul
lahf
pop
xchg
mov
ret
lds
xor
push
insl
cwtl
mov
nopl
or
sbb
sahf
add
xchg
pop
daa
in
dec
jge
stos
mov
xchg
xchg
mov
xchg
cmpsl
and
cli
push
mov
in
icebp
mov
clc
add
dec
std
xchg
mov
mov
cmp
push
daa
std
xor
push
leave
add
ffree
daa
pop
pop
mov
jae
fisubs
mov
sbbb
nop
sbb
dec
add
aam
shll
call
jle
xchg
mov
mov
daa
jmp
adc
add
inc
add
xchg
or
add
leave
cltd
mov
mov
and
add
mov
inc
sub
push
dec
into
adc
lret
xchg
or
jbe
pop
push
or
adc
or
pushf
cs
imul
sbb
sbbb
addl
push
mov
cmp
or
ss
repz
inc
test
cli
inc
or
mov
clc
push
pop
je
into
mov
pusha
ret
dec
sbb
ds
aas
aas
int3
jb
sub
pop
sbb
and
pop
push
push
jae
pop
push
fisubl
sbb
and
sub
pop
adc
cmp
pushf
in
push
inc
andb
or
mov
push
incl
adc
add
std
incb
xor
dec
mov
add
cmp
jge
out
add
movzbl
inc
mov
mov
push
xor
leave
sbb
xchg
mov
test
mov
add
jmp
inc
and
stos
or
inc
cmp
leave
adc
lcall
dec
out
enter
jge
xchg
adc
sbb
std
int
mov
jmp
dec
orl
sub
nop
imul
test
xor
lods
sbb
mov
adc
cltd
sub
cmp
ror
in
push
adc
shr
lods
xchg
enter
mov
mov
out
mov
add
and
mov
jbe
add
shr
test
rcrl
inc
mov
add
addr16
or
mov
xlat
rorb
loop
pop
es
data16
push
xchg
ret
jmp
mov
sbb
push
test
pop
push
push
cwtl
jmp
or
mov
leave
stos
cli
adc
or
jo
in
sub
mov
jmp
mov
cwtl
fisttps
push
mov
mov
leave
adc
or
add
rorb
adc
jmp
sub
or
xchg
sbb
push
push
add
or
outsl
jne
dec
or
adc
sbbb
pop
mov
mov
jbe
repnz
cmp
xor
sub
sti
jg
xchg
test
xor
cmp
xor
or
jmp
pop
mov
decl
pop
ret
and
xor
add
rcll
dec
xor
and
inc
stc
lcall
je
add
inc
or
mov
push
sbb
pop
mov
pop
jmp
ret
dec
dec
xchg
and
mov
enter
pop
jle
or
pop
leave
ret
add
enter
add
xlat
andl
pop
xchg
adc
sbbl
mov
cmp
pop
cmp
fsubl
dec
or
jecxz
popa
shlb
rcll
add
push
lods
addr16
ret
push
out
mov
cmp
mov
jo
shll
je
xor
xchg
int3
das
cwtl
out
or
mov
sbb
pusha
insb
cmp
xor
push
rol
add
cmc
mov
add
xlat
lock
mov
or
mov
pop
jo
jae
add
cmp
dec
in
repz
sbb
mov
jmp
loop
add
mov
inc
cmp
mov
lds
inc
mov
sbb
push
jg
test
jns
add
cld
cmc
aam
sub
imul
lret
or
std
mov
add
in
mov
pop
sub
adc
cli
add
inc
sbbl
pop
push
add
add
pusha
lds
add
jmp
decb
push
leave
pusha
jo
jne
mov
xor
and
add
push
dec
nop
jle
push
ja
xor
jmp
cli
outsb
loopne
leave
xor
das
movsl
push
jns
icebp
mov
aas
dec
and
push
loope
adc
sub
enter
dec
add
test
ljmp
call
ret
test
mov
hlt
inc
jbe
add
ret
lea
sbb
test
add
add
mov
mov
divb
push
daa
enter
dec
das
insb
fbstp
clc
hlt
add
xchg
shr
jns
cltd
mov
out
sbb
leave
adc
dec
in
cli
inc
mov
or
in
jae
out
jo
sub
sbb
pop
jp
add
add
mov
test
jmp
sahf
mov
inc
pop
push
decl
adc
adc
scas
stc
insb
arpl
imul
adc
or
add
jge
push
daa
rcr
cmp
sbb
mov
icebp
pushf
fistpl
enter
rclb
or
scas
mov
add
inc
mov
inc
cmc
jle
clc
xchg
ja
clc
pop
lock
cs
mov
loop
add
cmp
rolb
pop
mov
imul
shlb
rolb
push
jb
daa
push
add
xor
jp
xor
mov
test
aam
push
sarb
arpl
sbb
sbb
mov
imul
in
add
adc
push
mov
jmp
add
jb
lret
or
mov
pop
es
aas
mov
push
mov
inc
lods
loope
cmp
out
call
int
push
jecxz
jne
mov
and
or
ffreep
add
fldl
mov
pop
in
adc
push
jle
mov
add
jle
out
push
jns
jae
push
push
mov
cmp
push
adc
stos
in
mov
cwtl
cmpsl
dec
scas
clc
xchg
sub
sbb
fwait
jo
pushf
or
popf
push
shl
bound
add
dec
add
mov
push
scas
cmp
sbb
or
mov
in
add
aas
jnp
dec
xchg
mov
add
dec
popa
mov
sbb
dec
sarl
stos
xchg
test
rolb
adc
aam
rorl
push
data16
fwait
xorb
sahf
addl
cmp
dec
sbb
je
pusha
add
test
push
dec
cmp
and
sahf
dec
popf
mov
shlb
daa
xchg
insb
add
or
xchg
rorl
push
in
test
out
add
icebp
mov
cltd
in
push
add
push
cmp
pop
inc
aas
sub
rolb
je
xor
sbb
add
adcb
add
push
dec
lea
into
fdivs
push
ret
xchg
clc
add
adc
pusha
sarb
sbb
pop
add
outsb
scas
shll
call
ret
int3
or
in
add
mov
add
cltd
dec
and
scas
adc
inc
addb
sub
cs
mov
sbb
xchg
dec
mov
xorb
mov
lods
sbb
out
andb
push
sbb
sub
outsl
aas
push
add
mov
faddl
ja
xor
mov
mov
out
add
sahf
xchg
mov
jno
mov
dec
mov
mov
dec
xchg
xchg
imul
jns
out
loope
adc
mov
cmp
push
out
mov
push
lea
add
mov
add
add
mov
add
dec
cli
mov
roll
mov
mov
xor
mov
push
jp
adc
jns
and
add
xor
int3
xor
push
in
mov
std
shlb
push
rcrl
dec
push
fdivrl
push
xchg
cltd
or
and
jno
cmp
add
popa
jns
inc
push
std
add
cmp
or
push
push
and
pop
or
xchg
jecxz
push
shlb
lea
adc
dec
mov
add
shl
add
add
pop
sti
cld
add
call
mov
push
xchg
insl
push
xor
ss
adc
mov
sar
shlb
dec
rclb
and
mov
adc
pop
push
and
les
arpl
leave
sbb
out
add
push
xchg
mov
add
push
xor
add
add
outsb
sahf
jbe
dec
lret
lods
and
xchg
and
sti
paddd
and
cmp
push
fldl
fadds
xchg
pop
jle
out
or
in
cs
pop
jnp
xchg
das
std
and
mov
add
aaa
fnstcw
add
insb
sub
fadds
cmp
or
cmp
dec
mov
bound
and
insb
push
aaa
add
mov
jg
jne
pop
inc
push
ljmp
aam
push
inc
sub
adc
daa
js
out
mov
ljmp
popf
sub
and
or
add
add
sbb
cmp
push
fs
xor
cmpsl
mov
push
cmp
jae
lock
and
sub
in
das
rolb
test
mov
aad
pop
dec
fldenv
rclb
inc
mov
fidivs
and
add
and
sbb
inc
pusha
cs
xlat
arpl
dec
add
push
shl
and
mov
dec
xchg
inc
into
and
add
mov
sub
and
jns
hlt
addr16
jo
adc
icebp
xchg
imul
add
push
xor
fstpl
std
iret
dec
movaps
and
jge
xchg
test
imul
push
and
and
jge
sbb
pop
movsl
sti
cmp
std
mov
pop
faddl
and
add
fsub
xor
xlat
or
sarb
pop
call
inc
es
fdivrl
sahf
sbb
adc
cmp
jp
dec
test
pop
testl
lds
scas
aam
roll
adc
test
and
bound
xor
adc
cmp
add
sti
loopne
mov
add
rcrb
xor
and
fcoms
xchg
rorb
pop
cmp
inc
pushf
insb
adc
enter
jmp
add
and
xor
sbb
or
pop
lock
repz
dec
test
fcmovbe
jae
add
bound
cmp
popa
cmp
xor
shrl
pusha
push
cwtl
repnz
add
fistpl
inc
pusha
sub
addr16
add
and
shlb
subb
jae
je
mov
ret
add
push
sarb
cwtl
inc
insb
mov
xor
add
sbb
repnz
or
fld
dec
sbb
jno
js
out
ret
shrb
adc
notl
inc
lock
jae
sub
and
mov
cmpsl
xor
inc
add
add
icebp
out
ja
mov
or
call
cmp
mov
dec
sbb
sub
mov
adc
enter
loopne
adc
add
shrb
cli
sbb
push
add
mov
cmp
jae
nop
pop
icebp
cmp
in
shl
inc
aam
jns
and
jb
or
int3
test
jns
sbb
out
jne
or
xchg
xor
in
jnp
fistps
nop
test
shlb
mov
add
fwait
mov
lcall
fadds
mov
add
jle
aas
push
and
mov
scas
insl
add
mov
or
scas
add
and
ret
ljmp
and
aas
lret
add
mov
insl
ja
js
mov
pop
and
cs
hlt
add
sbb
je
inc
icebp
sub
add
jns
movsb
std
fstl
pusha
imul
xor
add
scas
pop
ret
dec
ljmp
loopne
or
dec
push
test
jns
enter
add
clc
daa
and
push
pop
mov
fiadds
imul
add
aaa
adc
push
test
jns
xor
or
gs
scas
loop
addb
cmp
pop
xlat
outsb
sub
out
and
paddusw
push
cbtw
push
decb
popl
sbbb
add
cmpsb
or
test
and
sar
rcrl
popa
lret
or
sub
rolb
add
mov
mov
mov
or
push
outsl
insb
int
ret
xor
sbb
jns
mov
sub
fists
stc
jno
and
mov
cltd
test
fs
ss
shlb
xor
xor
out
pop
mov
mov
jle
add
cmpl
xor
sub
xor
in
jo
xchg
xor
or
mov
xor
and
push
in
mov
adc
cmpsb
movsl
dec
jno
xor
sub
sub
push
or
inc
xor
divb
cmpb
add
inc
sbb
lock
xor
mov
fmull
pusha
sub
add
or
and
jns
cmpsb
push
xchg
mov
lods
mov
jae
or
in
movsb
cmp
mov
jae
sub
and
jae
add
sbb
fs
or
mov
dec
gs
xor
mov
hlt
sub
scas
arpl
and
hlt
and
cmp
mov
add
lret
sub
lahf
cwtl
repnz
push
dec
cmpb
mov
jmp
cmp
push
out
sbb
pushf
or
fwait
mov
sbb
pop
gs
pop
ficoml
mov
sub
sbb
push
sbb
and
hlt
jb
int
sbb
xchg
hlt
xor
xor
in
lods
jmp
jecxz
out
dec
testb
mov
xchg
nop
insl
in
add
mov
mov
and
es
mov
les
popa
mov
xchg
cmpsl
inc
add
sub
shlb
cwtl
sti
out
cmp
icebp
adc
les
dec
inc
and
mov
sbb
movsb
in
ljmp
test
sbb
jp
test
mov
aaa
dec
ja
adcb
xchg
xor
add
out
sub
outsl
loop
or
pop
fucomi
push
xchg
add
mov
gs
inc
in
mov
loop
sahf
cmp
sti
cli
in
xor
daa
and
add
sar
out
mov
push
nop
add
dec
sub
mov
xchg
add
stos
mov
fstps
mov
cmpl
push
movsb
xchg
in
xchg
add
jns
sbb
in
add
cmovae
push
add
scas
sub
mov
and
icebp
or
push
clc
das
push
lret
pop
inc
push
shlb
aaa
sub
push
mov
nop
and
test
jle
mov
in
frstor
cmp
outsb
nop
lea
filds
cmp
data16
cwtl
push
int3
push
shrl
es
xorb
out
adc
add
add
pop
pop
or
mov
add
movsl
mov
inc
xchg
xor
xor
add
cmc
dec
lea
outsl
cmpl
adc
cld
mov
add
cld
testb
test
dec
adc
mov
add
pop
mov
clc
sbb
push
idiv
jns
sbb
es
add
shrl
and
mov
fdivrl
popa
cmp
insb
enter
mov
clc
and
sub
lods
sbb
inc
push
sarl
loop
add
mov
in
pop
scas
jnp
sub
daa
cmp
add
dec
in
mov
lret
jle
mov
xor
out
out
push
add
inc
jmp
movsl
jns
inc
add
gs
add
push
ret
leave
pusha
mov
jns
cmp
mov
add
lea
sub
and
mov
xchg
pusha
xor
sub
mov
in
movsl
aam
push
mov
push
imul
lahf
mov
add
adc
mov
pusha
test
add
xor
add
pusha
dec
inc
push
testl
movsb
addb
pop
popa
jo
fidivs
mov
inc
and
and
aas
or
sbb
sbb
xorb
jl
cmp
push
and
dec
inc
add
repnz
add
cld
adc
jp
inc
push
sti
jno
call
in
lret
test
mov
mov
test
xor
outsb
in
mov
into
inc
dec
test
cmp
ds
rcrb
pop
fisubl
add
sbb
xor
jae
and
jl
and
add
cltd
dec
lock
fsubs
loope
pop
add
stos
call
pop
cmc
js
cli
mov
pusha
repnz
insb
push
pop
das
adc
adc
adc
jo,pn
jle
mov
mov
pop
xor
fs
leave
shl
mov
cli
mov
sbb
imul
inc
insb
push
xorl
or
or
aad
lock
xchg
mov
rcr
lods
pop
adc
xor
xchg
enter
xor
push
push
add
sbb
add
add
in
pop
out
dec
add
pusha
cmp
inc
test
adc
pop
mov
mov
jecxz
sbb
sti
cmp
pop
rcll
test
add
sarb
andb
pop
lods
in
aam
sbb
or
jecxz
cmp
and
repz
or
cli
or
vmread
lea
sti
add
xchg
ja
sbb
sbb
in
and
hlt
sub
shrd
fwait
mov
mov
mov
cs
pop
mov
into
inc
cmp
loop
int3
insl
or
sub
xor
pushf
xchg
xor
jne
add
dec
sbbl
sbb
adc
and
fs
xchg
adc
push
jge
adc
and
mov
push
insb
andnps
shlb
pop
mov
xchg
add
notl
add
ret
cwtl
gs
rorb
dec
pop
xchg
adc
jle
lahf
push
lods
sub
das
cld
cmp
push
fidivrl
dec
sub
xor
jg
xchg
mov
in
cmpsb
in
add
add
or
ja
stc
loope
push
pop
js
jle
fs
sub
and
xchg
adc
pop
adc
adc
adc
test
xchg
shlb
push
adc
and
push
scas
mov
loopne
add
xor
and
xorb
int3
dec
xor
jecxz
sub
add
mov
add
add
xchg
adc
ds
jno
mov
lock
repnz
and
adc
cmp
or
ja
jns
push
or
in
cmpsb
fwait
mov
xchg
pop
int
add
jmp
add
pusha
xor
outsb
sub
add
cltd
in
lods
stos
mov
mov
loopne
mov
flds
call
sub
or
xlat
mov
ljmp
mov
pop
and
or
xchg
adc
inc
inc
add
or
cli
mov
es
inc
stc
sbb
add
insb
mov
push
outsb
add
cwtl
mov
pushf
addr16
add
ds
cmc
add
push
repnz
mov
test
movsb
xchg
notb
mov
add
sub
shlb
add
cwtl
sbb
xchg
stos
inc
add
outsb
jnp
and
mov
aam
ljmp
aad
test
cltd
xchg
push
sub
out
xlat
mov
cmp
sbb
pop
in
cmpsb
sub
rcll
xor
push
insl
loopne
loop
sbb
xchg
add
ss
add
xlat
clc
stos
mov
addr16
movsl
movb
add
xchg
cmp
add
push
xchg
xor
or
pop
js
add
movsb
jo
aas
pusha
xorb
hlt
jle
add
adc
dec
jnp
add
jns
enter
dec
jl
add
cs
lret
mov
add
inc
xor
scas
pop
in
xchg
add
out
push
jnp
push
pop
push
push
adc
add
inc
cmp
mov
iret
test
cmpsl
ljmp
hlt
mov
inc
mov
into
fsub
fsubl
cmpsl
add
sti
xor
add
testl
add
inc
fs
es
xor
add
shl
jmp
sub
adc
cld
adc
or
rcll
aam
sbb
add
ds
movl
dec
stos
add
mov
add
lret
add
ret
mov
xchg
xchg
or
mov
mov
push
ljmp
add
out
jbe
cmpsb
mov
sub
inc
sbb
shll
add
and
shrb
cmp
dec
loop
jmp
cmp
mov
push
jbe
scas
adc
aas
inc
push
mov
int3
dec
out
ljmp
push
pop
adc
testb
int
movsb
adc
jle
mov
out
jg
sbb
nop
ss
push
xchg
inc
pop
in
or
les
adc
movsb
out
incl
add
test
in
xor
cmp
inc
add
inc
lret
sbb
add
imul
aad
dec
add
ss
sub
fsub
add
call
lcall
daa
sti
and
sbb
cmp
mov
sub
fwait
mov
mov
int
jns
add
lock
mov
mov
jne
add
lock
sub
cld
pop
push
repnz
add
add
jg
lret
fwait
in
add
sub
add
ja
sti
orl
stc
add
aam
sahf
loop
aas
sub
xor
jae
popa
push
and
stos
pusha
sti
jbe
inc
fwait
ret
loope
iret
call
sbb
add
adc
aad
inc
push
push
pop
fptan
sahf
imul
add
loopne
andps
sub
daa
pop
das
xchg
pop
fsub
cmp
add
mov
or
cmc
add
fldt
in
shr
roll
lock
clc
popf
adc
add
in
mov
popa
pop
add
push
push
sbb
cltd
inc
cmpb
mov
jae
jl
xchg
cmp
jb
jge
xchg
add
les
push
push
sub
loop
sbb
push
pop
add
arpl
shlb
insl
mov
cmpsl
je
rcl
movsb
push
add
mov
xor
out
add
fs
arpl
cltd
add
in
pop
xchg
dec
int
push
pusha
xchg
add
inc
cld
roll
loopne
xchg
mov
adc
lock
jns
or
jns
fsubrs
aad
mov
or
add
inc
adc
mov
and
and
out
shlb
negb
adc
inc
int3
iret
gs
mov
cwtl
mov
sub
jge
loop
or
fidivrl
push
test
outsl
jmp
in
jnp
sub
mov
dec
cmp
cmp
pop
lahf
sbb
jo
adc
mov
sbb
mov
shrl
shrl
sbb
lret
cmp
and
leave
lods
mov
sar
cmc
mov
seta
and
stos
or
scas
add
loope
scas
and
adc
and
repnz
sbb
jbe
add
and
loopne
mov
shrl
or
inc
xor
andb
add
xchg
fistpll
scas
add
xchg
push
mov
and
outsb
inc
pop
dec
mov
xor
sbbb
xchg
popf
jmp
icebp
pop
test
cli
addb
push
fimull
inc
pop
add
push
add
dec
mov
mov
nop
mov
inc
testb
clc
jno
and
test
mov
mov
push
add
addr16
andl
pop
jmp
es
adc
xchg
inc
loope
lods
sub
fidivl
cmpsb
pop
cld
adc
dec
xchg
int
ss
cmp
shrb
xchg
dec
jmp
jle
fadd
repnz
leave
ret
push
mov
jne
mov
xor
adc
test
add
lret
aam
nop
push
jne
add
pushf
push
cs
add
or
mov
ja
xlat
loopne
int3
inc
add
shlb
fmull
js
and
push
sti
cwtl
inc
data16
add
cmp
dec
ret
dec
mov
add
inc
sub
mov
jge
sbb
pop
cmp
add
xor
stos
mov
clc
mov
pop
pop
xchg
jns
decl
add
add
aas
and
add
enter
cmp
ret
aaa
dec
xor
ljmp
pop
cmpb
movsl
and
mov
arpl
inc
out
cmp
shlb
dec
stc
aad
cwtl
in
into
fwait
jmp
jb
cs
push
iret
adc
lahf
xchg
sbb
outsl
popf
cmc
int
insl
lods
pop
fdivs
cmp
loope
fldt
insl
mov
mov
popf
mov
xor
cmpsl
das
pop
and
jp
idivb
add
dec
push
push
aad
xchg
mov
shrl
jg
mov
nop
mov
add
dec
andb
add
lock
pop
push
mov
push
pop
ss
jb,pn
sbb
incb
dec
cmp
push
test
repz
add
cmpsb
mov
adc
add
pop
in
add
andb
add
push
push
adc
inc
loop
pop
dec
lret
add
add
mull
popa
aas
push
add
add
notb
mov
pop
lods
push
hlt
out
push
jo
pop
es
mov
pushf
sub
pop
jmp
pusha
les
jge
add
pop
adc
pusha
jns
dec
mov
cmpsb
je
dec
push
add
out
mov
and
xchg
or
filds
mov
mov
add
jbe
or
sbb
lods
mov
inc
test
pop
jle
adc
add
out
jg
fucomi
in
and
int3
je
pop
loop
sub
adc
add
or
xchg
add
mov
pop
dec
cmp
jg
mov
test
add
int
in
arpl
mov
add
inc
add
leave
ja
int
xor
cwtl
add
add
cmpsb
pop
adc
pop
mov
enter
jo
or
test
fimull
pop
inc
sub
sub
add
std
dec
xchg
xor
add
sub
fwait
jo
insl
loope
loopne
in
clc
cmp
mov
mov
lret
xchg
adc
loope
push
std
or
adc
add
mov
mov
add
push
add
dec
clc
jecxz
jo
in
cmp
les
jnp
mov
lcall
mulb
jmp
test
add
enter
pop
sub
add
mov
aad
loopne
xor
jl
add
sti
mov
outsl
scas
sbb
pop
jo
add
cmp
push
test
out
or
fnsave
rclb
pop
mov
dec
push
mov
dec
push
jge
mov
mov
add
jae
lret
aad
lock
repz
adc
stos
rorl
adc
add
jl
enter
mov
add
mov
cs
pop
xchg
add
pop
adc
leave
pop
andb
outsb
or
mov
push
mov
add
sbb
add
dec
or
das
int3
adc
add
mov
or
and
pusha
inc
in
lcall
xchg
ds
bound
sbb
insb
sbb
xor
stos
inc
hlt
fcmovbe
addr16
int
sub
mov
push
ljmp
xchg
adc
scas
add
fs
fsts
out
pusha
daa
jo
mov
enter
iret
clc
xchg
out
adc
add
pop
pusha
jae
es
push
ja
add
in
faddl
push
outsb
lds
or
xor
inc
cmp
add
and
mov
repnz
xchg
sub
jo
sbb
xchg
jle
stos
test
cmp
add
jg
add
test
pop
xchg
nop
cmpsb
xchg
lock
add
test
test
inc
push
pop
ret
lret
std
add
out
orb
adc
lods
xchg
cmp
pushf
mov
add
pop
mov
ja
add
fdivr
loop
fidivs
mov
pop
insb
jbe
add
sbb
add
mov
loop
lock
add
out
dec
add
add
or
cmpl
popf
add
outsb
insl
sbb
and
jnp
pop
sbb
sub
scas
cmp
adc
xchg
testl
push
sub
inc
es
ja
rcrl
adc
les
xlat
cltd
and
es
cwtl
test
adc
push
rcr
sbb
mov
int3
push
add
mov
out
loopne
add
cmp
pop
loopne
or
mov
arpl
adc
adcb
daa
cmp
idivl
xchg
enter
in
test
testb
inc
mov
lahf
aas
or
and
or
sbb
push
shll
push
pop
add
addr16
or
pop
ds
add
pop
jp
arpl
add
push
xchg
ret
hlt
mov
dec
ljmp
vfmadd231ps
stos
xlat
adc
je
cwtl
push
sti
fstl
or
push
insb
int3
andb
mov
shll
fwait
add
push
inc
xchg
add
cmp
addl
jns
test
jg
pop
insl
pop
aad
lock
inc
sub
push
cs
in
pmulhuw
add
cmp
mov
add
out
add
fidivrl
jns
test
cli
stos
jo
jbe
aas
jnp
loope
add
les
nop
jge
adc
inc
in
bound
sar
mov
bound
into
add
cmp
mov
mov
insb
or
in
outsl
xor
enter
pop
lahf
xchg
cmpl
cmpb
cs
add
icebp
cmp
ja
shll
dec
sbb
adc
and
mov
lock
in
sub
inc
add
mov
daa
dec
nop
and
mov
push
jmp
xchg
jns
mov
add
ficompl
xor
cltd
leave
test
mov
or
cltd
or
mov
movsl
mov
add
xchg
xchg
ret
daa
push
bound
cmp
mov
mov
cmp
jmp
pusha
iret
sub
sbb
add
fsubrs
fstl
jmp
movsb
pop
jo
adc
in
sbb
hlt
cmp
add
fstl
pop
aas
scas
mov
dec
dec
clc
mov
dec
and
pop
cwtl
or
add
ret
cmp
pop
into
test
notb
mov
lret
pop
mov
sbb
jg
fisubl
mov
pop
mov
das
and
movsl
cld
mov
fucomp
jb
mov
rcrl
add
stc
gs
add
push
cwtl
mov
sahf
addb
cmpsl
or
enter
jmp
daa
inc
rclb
and
sub
call
nop
fsubr
loopne
or
aaa
pop
shlb
mov
sarb
inc
xchg
push
insb
add
or
mov
call
or
icebp
sub
aad
sub
xor
cmp
cmp
shll
sub
cmp
mov
mov
test
mov
jb
mov
cli
cmp
pop
addb
popf
adc
and
inc
test
addr16
mov
mov
inc
stc
ss
push
orb
testb
cmpsb
gs
dec
mov
add
xor
mov
jl
adc
in
lret
cmp
adc
jns
lods
pusha
mov
sub
and
add
mov
mov
ja
xlat
cld
enter
stos
mov
and
cmp
adc
pop
je
ret
mov
mov
hlt
test
loopne
nop
mov
cmpl
jbe
or
addr16
shl
cmpsl
xchg
sbb
out
aad
inc
pop
ss
mov
xchg
inc
ljmp
adc
imul
mov
cmp
xchg
dec
jne
add
xor
enter
add
loop
imul
inc
adc
int3
insl
dec
je
add
pop
jno
xor
mov
roll
dec
clc
mov
sbb
clc
cmp
outsb
or
dec
ja
add
mov
mov
and
out
cli
mov
or
int3
adc
add
jp
dec
mov
mov
sub
cwtl
int3
and
popf
pop
add
data16
out
gs
lret
cmp
aad
xchg
cmpsl
jp
fldcw
add
sbb
adc
sbb
popa
xchg
mov
add
or
xchg
jo
jmp
subb
adc
sbb
add
jmp
notl
je
lock
int3
push
mov
pop
cmc
icebp
daa
loopne
sub
ficomps
fptan
scas
aaa
fnstsw
xchg
sbbl
and
loopne
cmpl
add
push
xchg
push
pop
and
cs
imul
outsb
pop
add
cmpsl
xchg
and
push
popa
cmp
add
mov
lods
imul
setb
mov
dec
ss
mov
push
icebp
enter
mov
add
jmp
jbe
pop
movsl
push
shrl
in
ret
add
ja
jge
cmp
add
lahf
pop
icebp
lds
jl
adcb
cmp
dec
dec
pop
cmpsb
mov
int
out
xor
pop
out
sbb
pop
xlat
lock
inc
cwtl
pop
add
lods
stc
jle
push
add
pop
sbbb
and
popf
shlb
push
inc
addr16
add
xchg
push
and
and
stos
test
sbbb
and
neg
jle
and
mov
or
add
jge
pop
push
add
fucomip
inc
adc
mov
mov
and
or
add
add
cmpsl
dec
jo
cmp
pushf
add
cld
sarb
inc
lret
jb
outsl
cli
jg
add
mov
movsl
cmp
and
mov
add
adc
dec
cmpb
fdivs
loope
inc
dec
add
lock
scas
pop
js
jno
scas
adc
xorb
xchg
ds
test
push
and
lea
pop
jmp
lock
fcmove
mov
inc
jl
cmp
mov
lcall
fildl
stos
xor
out
add
pop
insl
in
or
dec
imul
shr
stc
loopne
pop
add
ficomps
add
dec
call
in
adc
pop
loop
icebp
push
or
cmpb
lahf
nop
mov
adc
xor
hlt
push
clc
push
jno
or
jb
add
cmpsb
mov
enter
clc
in
adc
jnp
pop
aaa
push
jo,pn
lahf
xor
lods
inc
inc
loope
mov
inc
xorb
add
adc
sub
push
pushf
add
fistl
mov
and
js
jo
or
jp
icebp
rclb
add
push
cld
in
mov
in
cmpb
mov
xlat
aad
cmpsl
aam
int
add
or
xchg
and
xor
xchg
and
jmp
pusha
mov
pop
insl
movsb
add
out
lret
cmp
mov
add
and
add
jmp
sbb
cmp
int3
lods
fstps
popa
add
cmp
in
pop
add
shrb
ljmp
jp
push
cmp
fisttpll
ljmp
add
test
jmp
add
xorl
sbb
mov
cmc
sbb
jmp
sub
shlb
push
jmp
rcrb
jl
jnp
scas
leave
pop
pop
repnz
or
jmp
movsl
sbb
jno
xchg
repnz
sub
mov
xlat
adc
sub
adcb
lods
add
ds
into
cmp
cli
and
inc
ror
add
and
cmc
loopne
push
add
jno
adc
setg
subl
pop
psubsw
dec
loopne
and
sub
ret
rolb
cmp
jnp
and
pop
xor
dec
add
inc
mov
cmp
stc
sbb
fistpl
mov
inc
xchg
out
inc
sub
pop
fwait
sub
push
loopne
adc
xor
mov
lock
xor
test
sbbb
lcall
bound
shl
out
out
push
and
and
add
mov
loopne
movsb
cs
sub
add
jp
cwtl
xor
push
std
rcll
insb
push
add
loop
cld
adc
push
sbb
push
add
jno
sbb
and
cmpsb
das
or
adc
outsl
add
inc
repnz
ss
jmp
jo
ljmp
sub
cmpsb
dec
add
or
sub
shr
cmc
pop
mov
and
bound
arpl
mov
adc
xor
test
clc
jnp
add
cli
mov
fcompl
mov
adc
or
and
jg
add
punpckhwd
add
adc
mov
and
xor
popl
mov
inc
movsb
shrb
sbb
int3
test
sbb
adc
rorl
fwait
push
inc
pop
push
pop
pop
aaa
rcll
pop
and
fnstenv
add
nop
lds
loopne
scas
add
in
jmp
hlt
fsts
push
mov
scas
test
orl
inc
into
mov
jg
mov
add
das
testl
or
cmp
cmpsl
call
mov
add
adc
cltd
repnz
aam
enter
jno
cmpsl
insl
add
mov
cmp
sarl
mov
popf
dec
shrb
or
pop
mov
dec
mov
pushf
xor
jne
int
ss
roll
xchg
jp
push
sub
and
pusha
fisttpll
add
jo
test
stos
sub
pop
repnz
cmp
mov
cmp
jl
dec
inc
xor
push
sbb
push
push
mov
mov
scas
test
imul
mov
inc
cmpsb
xor
nop
cmp
add
xor
dec
and
add
icebp
jnp
ljmp
inc
arpl
sbb
inc
jmp
mov
mov
repz
add
shlb
in
push
outsl
add
lahf
sbb
cmp
adc
cmp
sbb
movsb
dec
lods
lock
jbe
add
mov
pop
daa
mov
add
sbb
lret
dec
cs
add
addr16
add
mov
pop
mov
orb
jle
mov
pop
icebp
pop
xchg
push
add
scas
data16
jbe
pop
fistpl
push
inc
pop
add
fildll
add
mov
add
pop
cmp
push
ja
imul
aas
nop
pop
shrb
xor
add
lock
xor
add
and
inc
int
mov
mov
clc
test
cmp
cmp
inc
stos
pop
add
push
jp
add
sbb
add
mov
es
add
or
cmpsb
test
sahf
scas
sbb
sbb
cs
rcrb
push
daa
enter
adc
mov
push
orb
and
hlt
jge
hlt
jbe
and
xchg
pop
sbb
pop
fsub
adc
jae
rcr
insb
xchg
adc
mov
inc
pushf
stc
xor
mov
jmp
jl
pop
xlat
cmpsl
rol
mov
cld
add
sbb
dec
mov
cli
add
gs
mov
mov
test
scas
add
imul
mov
sbb
cmc
pmaxub
cmp
stc
add
push
push
clc
add
or
sub
xchg
repz
push
jg
xor
adc
cmp
aam
jmp
xor
cmc
bound
inc
add
jecxz
mov
jo
fnstsw
enter
outsl
ss
test
movsl
outsb
mov
jle
lret
add
push
pop
add
inc
sub
cmp
repnz
arpl
cmp
frstor
sbb
stc
sbb
add
sbb
mov
cli
push
fsubr
cmp
push
xor
or
jne
insb
popa
jns
or
adc
ret
pop
enter
add
in
jp
clc
aaa
cmp
push
add
lds
inc
and
or
inc
das
xor
push
lock
mov
push
mov
mov
sub
pushf
fwait
or
pop
adc
jne
test
stos
push
or
popa
inc
imul
sbbb
inc
cli
in
cmpsb
push
push
mov
or
dec
push
xor
sbb
popa
ja
mov
push
add
cmp
add
or
je
in
aas
arpl
xor
add
aam
or
shr
icebp
push
xor
inc
jle
jge
pop
sbb
pop
into
not
push
or
add
cli
ficomps
add
imul
xchg
mov
mov
mov
sbb
outsl
loope
pop
jne
mov
es
imul
and
inc
sbb
pushf
or
movb
dec
aas
imul
and
jl
push
sub
fldenv
dec
jne
and
rolb
sbb
sub
push
or
cltd
mov
pop
scas
push
cmpb
push
dec
add
pop
cmpsb
jne
mov
add
mov
cwtl
dec
cwtl
nop
add
jo
xor
mov
xchg
subb
pop
into
pop
adc
fsts
inc
mov
mov
inc
pusha
fsts
in
jb
pop
std
jnp
sbb
dec
push
xchg
add
xor
mov
ds
cld
cmpsl
enter
xchg
js
int3
sti
add
pop
not
stc
mov
cmpsb
add
setnp
push
dec
add
jmp
add
mov
outsb
adc
jae
xchg
pop
cmp
cmp
daa
add
dec
neg
hlt
xor
jns
add
dec
sub
test
xchg
cmp
adc
xor
vpmadcswd
mov
jle
push
jbe
loope
dec
out
iret
pop
and
inc
inc
sahf
jb
int
incb
mov
sub
push
inc
add
pop
and
or
pop
cmp
and
pop
ss
mov
or
cmpsb
cmp
das
xchg
add
cmc
shll
fsubr
lock
xor
jge
mov
add
inc
add
add
roll
sbb
pushf
cmc
cmp
loope
mov
mov
dec
sub
pusha
lcall
and
xchg
sbb
lret
add
jns
cmp
sub
inc
shrw
loopne
mov
imulb
xchg
mov
icebp
mov
pop
sbb
add
inc
fs
sahf
inc
pop
cmp
add
imul
hlt
push
and
jecxz
iret
add
jb
repz
jg
fisubs
pop
pop
dec
addr16
adc
ret
jb
add
ds
ret
sbbb
adc
sbb
jnp
add
sti
mov
out
xchg
lock
int
rcll
insl
add
fcomps
push
mov
xchg
mov
add
xlat
pop
call
nop
test
sbb
jl
mov
xor
dec
dec
push
aaa
jns
incb
stc
hlt
push
ja
scas
ret
cmpsl
pop
mov
mov
add
xchg
sbb
mov
hlt
cs
sub
enter
inc
out
lcall
add
mov
fnsave
mov
jge
mov
jae
mov
pop
lea
sbb
xchg
popf
js
stos
cld
arpl
sbb
jmp
push
mov
push
pop
int3
add
and
push
mov
or
cli
pop
mov
adc
repnz
sbb
add
mov
and
add
mov
pop
cmp
add
push
aaa
and
sub
add
sbb
xor
pusha
jns
fisubrl
add
mov
shlb
or
jmp
cmpsb
pop
xor
rorb
push
add
in
cmp
fadds
jb
add
into
or
inc
xchg
mov
inc
push
lret
pop
add
stc
fsubrl
add
rcrl
mov
dec
inc
add
dec
push
push
stc
test
sbb
adc
adc
xchg
and
sbb
out
mov
dec
test
je
repz
add
sbb
adc
xor
or
and
sbb
aad
loope
cmp
orb
mov
stc
inc
inc
add
punpckhbw
shll
mov
xchg
jg
arpl
dec
repz
add
push
dec
ja
scas
jmp
xchg
data16
push
loop
add
mov
iret
pop
movaps
stc
loope
or
jno
add
loopne
shll
add
sub
in
add
data16
add
mov
adcb
or
nop
push
inc
nop
inc
add
jnp
loope
arpl
call
jmp
jae
sub
xchg
dec
pop
add
push
push
into
add
icebp
pusha
and
test
pop
adc
inc
mov
sbbb
inc
out
xor
push
add
sarl
mov
push
sub
jge
push
loope
mov
mov
repnz
ficoml
or
data16
std
out
jp
add
decl
test
sbb
and
mov
push
mov
mov
push
xor
cwtl
jge
ds
mov
pushf
out
aaa
mov
mov
sarl
pop
icebp
push
rorl
mov
mov
add
inc
sub
add
daa
pop
mov
mul
dec
ret
ss
fwait
pop
cmc
aam
xchg
inc
sub
jmp
sub
ret
inc
add
je
xor
jp
lods
xchg
pushf
popf
add
leave
sub
inc
xor
std
xor
add
inc
test
mov
mov
push
mov
cmc
xlat
ljmp
les
test
pop
enter
sub
aam
pop
leave
mov
pop
add
loopne
xor
sahf
addb
arpl
sbb
add
daa
cmpsl
lcall
in
add
sahf
push
fiadds
sub
mov
and
shl
stos
popf
xchg
outsb
cwtl
or
aam
pop
sbb
mov
loope
pop
clc
push
sbb
add
and
js
dec
inc
push
dec
push
and
jbe
cwtl
dec
insb
inc
add
push
int3
mov
adc
jo
dec
lods
sahf
pop
add
push
mov
clc
dec
sbb
rclb
imul
xchg
addr16
xchg
mov
jns
xor
jb
cmp
sbb
lahf
sub
ljmp
add
lcall
mov
mov
xor
push
xor
cmpsl
add
add
inc
adc
add
mov
jmp
jnp
add
cltd
push
and
repz
push
jp
or
test
inc
aad
cltd
adc
add
mov
adcb
lock
sbb
aam
psadbw
inc
mov
cmpsl
loopne
popa
cmc
bound
add
fidivrl
mov
fbld
push
xor
add
jl
hlt
mov
push
imulb
pop
mov
jno
mov
jb
mov
inc
fmuls
adc
dec
cld
fucomip
mov
sahf
mov
out
or
adc
mov
add
data16
cli
rcll
push
movsb
push
push
sbb
imul
cwtl
test
sbb
sbb
push
jnp
cmpl
add
and
push
outsb
mulps
pop
inc
loope
mov
xor
or
add
outsb
xor
sbb
std
mov
cld
ja
sbb
add
aaa
mov
pusha
lods
sub
add
mov
rcrb
inc
inc
cmp
mov
sub
repz
mov
add
dec
jecxz
adc
mov
adc
or
out
add
js
mov
dec
ds
add
lock
adc
mov
add
fwait
sbb
sbb
inc
call
insb
outsl
add
mov
add
push
jno
xchg
jo
jnp
xor
clc
loopne
repnz
mov
cmp
sub
or
push
add
mov
pop
or
enter
dec
out
andb
aas
data16
jg
das
mov
push
add
lea
loopne
add
or
insl
adc
into
mov
push
roll
add
adc
int
sbb
sbb
mov
enter
ret
xchg
mov
mov
adc
cmpsb
dec
add
ds
or
inc
mov
js
pop
jle
sbb
jmp
das
fldl2t
push
loopne
mov
jp
rorb
decb
fidivl
pop
stc
ja
mov
xor
pop
and
dec
or
dec
cmp
repnz
or
ret
cmp
in
stos
push
push
and
dec
add
andb
out
mov
cmp
scas
in
dec
nop
adc
lret
stos
xchg
or
cmp
push
mov
cmpsb
or
loop
or
fwait
test
cmpsl
mov
mov
add
cmp
lahf
push
and
and
xor
iret
lea
mov
xchg
xor
jb
xor
add
insb
adc
orb
movsb
sub
pop
and
int3
push
mov
mov
popl
movsl
cwtl
aaa
add
pop
leave
pop
adc
add
adc
jne
out
inc
mov
cmp
inc
aad
mov
nop
cmp
push
adc
mov
out
leave
mov
mov
shlb
jl
add
pop
in
or
lock
push
cmp
ljmp
mov
add
mov
and
lock
mov
mov
sbbb
js
jmp
push
push
je
negb
jbe
add
add
into
mov
addb
mov
jge
mov
sti
ds
js
add
nop
cld
inc
sub
jp
daa
pop
loope
add
push
shl
mov
mov
xor
lods
inc
add
addr16
push
mov
xor
adc
pop
pusha
lds
add
repnz
add
sub
ja
faddl
push
test
lcall
add
adc
mov
xor
cld
sub
adc
jg
jbe
imul
dec
add
daa
call
les
adc
mov
out
mov
xchg
test
push
sbb
lods
fwait
push
movsb
cmp
fiaddl
js
push
pop
xor
add
pop
add
dec
sub
xor
cmp
dec
push
push
pusha
mov
pop
cmp
add
push
jnp
roll
nop
xchg
add
adc
add
cmp
roll
add
pop
adc
or
sbb
repnz
push
loope
xor
nop
and
out
jbe
sbb
movsb
jnp
push
in
jbe
xor
fdivs
cli
rolb
adc
aam
xchg
pop
mov
sar
pop
imul
sub
xor
aad
outsb
mov
lcall
add
std
cmc
mov
xchg
ret
cmp
push
inc
or
rcl
mov
adc
mov
iret
mov
movsb
lods
les
inc
mov
test
sbbb
push
lock
test
cmpsl
aad
sub
adc
mov
out
das
rolb
xchg
sbbb
clc
test
xchg
lods
jae
sarb
inc
mov
int
xchg
add
cwtl
cmp
adc
fldcw
das
jo
icebp
repnz
cltd
sub
cmp
lods
daa
shrb
add
xor
sbb
pop
testl
out
subl
push
sbbb
cld
sbb
push
dec
scas
and
aad
frstor
sbb
cwtl
sbb
push
outsl
jp
mov
jg
add
jb
dec
xor
popa
lret
aam
xchg
jge
push
gs
bound
jae
xor
push
imul
add
mov
lods
dec
add
mov
iret
mov
cmp
hlt
jmp
adc
sub
andb
sbb
fidivl
xlat
lock
xchg
jb
enter
add
movsl
jo
lds
dec
mov
add
push
mov
cmc
imul
movsl
mov
dec
xchg
add
jge
into
aas
push
mov
jo
popl
push
jae
xchg
jp
fucomip
cwtl
mov
jb
sub
loopne
mov
mov
sbb
add
add
add
push
cmp
in
insb
pop
xchg
push
ss
inc
sbb
or
inc
xor
add
imul
push
jb
andb
in
adc
add
dec
jle
cltd
jb
mov
add
fcmovnb
loop
ret
jl
mov
and
in
xchg
add
xor
fidivrs
out
and
insl
mov
sahf
or
jmp
mov
pusha
addl
adcb
mov
mov
sti
pop
scas
dec
nop
call
push
adc
and
jbe
fwait
sbb
jge
xor
lahf
inc
adc
pop
add
pushf
jbe
or
mov
add
jmp
xchg
add
and
sbb
fsubs
dec
and
or
in
push
and
incb
and
imul
rcrl
xor
mov
or
mov
je
mov
mov
mov
fbld
out
fstl
add
popa
pop
mov
sub
test
cmpsl
push
and
xchg
push
xchg
jl
mov
mov
shrl
orb
xor
add
fstpl
xor
inc
aaa
lea
xchg
sbb
dec
mov
push
mov
and
cli
call
mov
jb
movsb
dec
cld
sbb
addl
push
cmc
push
sbb
cmp
dec
adc
jo
cli
add
faddp
xchg
add
push
add
dec
add
push
inc
push
push
jo
dec
mulb
in
jb
ljmp
add
test
lret
cmp
push
jno
xchg
inc
pusha
idivl
inc
dec
mov
jmp
js
and
jnp
adc
popa
mov
movsl
sub
jo
sub
xchg
dec
add
adc
les
add
inc
in
xchg
cwtl
test
jmp
aam
jno
xor
pusha
pop
gs
repz
lret
fists
sub
mov
outsb
pop
pusha
and
repnz
xchg
push
dec
leave
xor
xchg
sbb
faddl
clc
pop
dec
ljmp
daa
add
int
fmulp
sahf
xchg
add
xor
roll
cmc
jge
mov
dec
add
sub
cmp
mov
push
lock
xchg
lock
lcall
in
outsb
mov
push
cmp
loop
and
and
xlat
inc
mov
mov
sub
cwtl
roll
push
push
stos
dec
add
in
rclb
cmp
add
jb
dec
adc
cmp
xlat
mov
cmp
sarb
dec
inc
unpcklps
cmp
or
push
adc
push
and
jl
data16
push
fisttpll
filds
ret
xchg
inc
xchg
xchg
cltd
int3
xor
add
and
lea
or
pushf
add
sti
call
xorb
cmc
popa
adc
jne
sub
add
aam
add
dec
data16
add
jmp
pushf
call
inc
dec
scas
rolb
iret
das
lret
in
push
add
adc
mov
fldenv
pop
in
add
pop
mov
bound
push
pop
fdivs
add
lcall
cld
shll
dec
pusha
pushf
hlt
push
add
int
lds
in
inc
ret
insl
lea
das
mov
and
rcll
pop
shlb
fldcw
les
movsl
cltd
push
nop
stos
and
jb
nop
adc
and
shl
test
adc
out
add
hlt
mov
stos
cwtl
sub
cmp
popa
sub
xchg
lock
jnp
test
repz
dec
aaa
imul
pop
jl
mov
mov
js
testl
xchg
jno
sbb
insl
daa
xlat
add
push
std
add
popf
fsubrs
or
and
in
push
sub
inc
adc
dec
sbb
sbb
fistl
movsl
xchg
cld
lods
jbe
add
das
testb
pushl
add
enter
pop
pop
roll
add
std
mov
and
gs
clc
pop
jl
das
rolb
out
add
xchg
test
aas
pop
fldl
inc
int3
int3
outsl
pop
add
or
pusha
push
cwtl
in
add
cmpsl
jo
sti
movsb
lods
inc
cwtl
shlb
fwait
jl
enter
mov
aam
jns
mov
test
push
xor
or
push
cld
sub
rorb
nop
insb
jp
pop
xor
xchg
sub
fcoms
xchg
add
push
clc
lock
add
mov
jl
cwtl
mov
mov
hlt
push
add
cmp
pop
pusha
push
and
out
jb
inc
incl
ret
stc
js
mov
loopne
mov
movsb
push
or
jae
add
mov
js
add
imul
loope
push
jo
nop
add
popf
xorl
adc
andl
les
push
xorb
mov
enter
inc
in
icebp
gs
outsb
xchg
sbb
loope
xor
fildl
xor
rorb
rorl
mov
mov
fwait
popa
out
add
xchg
pop
aaa
pop
and
xchg
stos
mov
aaa
out
js
add
mov
insl
jl
add
xchg
enter
jecxz
adc
out
adc
add
testl
scas
daa
inc
popf
outsl
add
fwait
pop
popa
test
xor
xchg
enter
scas
je
and
xor
mov
fbld
jmp
ret
add
jnp
out
scas
popa
hlt
push
std
pop
int
add
into
or
lahf
sub
fcoms
adc
and
shlb
cld
hlt
enter
push
mov
dec
pop
scas
mov
int
push
rol
divl
xor
and
mov
and
fnsave
call
shl
jne
push
gs
ljmp
xchg
fdivrs
out
and
nop
inc
jle
add
nop
loop
push
repnz
jl
cmp
clc
push
outsb
hlt
or
cltd
sbb
addl
push
fcomp
repnz
daa
jo
or
sbb
sarb
or
push
sub
test
push
mov
sub
and
pop
add
jae
call
into
xor
inc
cwtl
mov
jo
sbb
bound
addb
adc
pop
pop
cltd
or
sub
xor
in
js
cmp
xor
push
call
add
test
pusha
xchg
xor
gs
in
adc
cmpsl
and
adc
mov
dec
add
or
and
fadds
repnz
out
call
es
test
dec
loop
stos
sahf
xor
mov
sub
add
xchg
and
flds
add
mov
movl
int
pusha
mov
or
sbb
out
mov
add
popa
pushf
pop
outsl
xchg
sub
xchg
pop
add
push
add
mov
aam
movsl
stc
pop
leave
lret
test
xor
mov
stos
divb
cmp
outsl
jecxz
sbb
lds
aaa
fimuls
addr16
imull
inc
adc
jae
push
rolb
into
sti
mov
cmp
or
scas
sbb
mov
jo
pop
lods
add
dec
imul
push
and
mov
cmp
cwtl
in
ja
inc
test
add
clc
push
push
lock
xchg
or
and
cmp
jmp
aad
xlat
mov
enter
pop
fisubl
mov
jno
add
xchg
iret
fdivs
js
or
popl
arpl
ret
rcrl
jbe
pop
loope
jno
cmp
shlb
and
cmp
mov
int3
cmpsb
imul
mov
faddl
push
cs
mov
add
test
sub
lods
sbb
dec
lea
add
loop
mov
add
or
mov
pop
cmp
shll
inc
add
mov
enter
stc
dec
sbb
mov
leave
scas
daa
xchg
pop
push
adc
and
stos
sbb
push
fisubrl
add
dec
add
subl
inc
test
pop
cli
cmp
das
les
aad
mov
pop
or
jmp
add
adc
inc
cmp
sahf
jle
push
clc
dec
lock
ja
mov
ficomps
and
jbe
faddl
dec
jno
xor
outsl
pusha
sbb
aad
push
cmp
jno
js
adc
dec
add
jmp
dec
dec
add
rcrb
sarb
test
inc
xor
mov
fiadds
cmc
and
mov
lock
add
sahf
inc
mov
into
pusha
hlt
lods
dec
add
mov
outsl
incb
ja
cltd
nop
add
int3
push
xchg
shll
add
mov
mov
daa
imul
add
repz
mov
mov
push
mov
xor
adc
cmpsl
sbbl
add
xchg
lret
rcl
jmp
movsb
push
add
shlb
sub
sbb
bound
cwtl
pop
icebp
in
fdivs
mov
addl
pusha
mov
add
loop
or
cs
je
cmp
std
lds
mov
or
cmp
sbb
push
loope
out
mov
jbe
adc
inc
adc
lahf
add
add
clc
xchg
and
rclb
aad
add
inc
mov
in
enter
jae
inc
lcall
add
mov
xchg
adc
add
loopne
cmp
add
xor
cmpsl
cmp
pop
or
call
clc
je
out
lds
addl
xchg
in
lods
cmp
test
add
je
push
stos
es
adc
hlt
add
lahf
jb
push
or
sahf
push
cmp
inc
or
xor
cli
lds
add
mov
mov
add
mov
add
lcall
mov
push
lret
dec
out
xor
add
fiadds
ds
loopne
push
jnp
xor
adc
ja
add
jecxz
sub
or
sub
cs
movq
mov
rcll
add
fwait
rolb
popa
mov
dec
jle
or
cmpsl
fisttpl
xor
shlb
nop
loopne
push
stos
imul
ljmp
pop
sub
aam
pop
add
sub
ja
in
ret
out
fwait
dec
mov
cmc
add
in
gs
ret
je
test
leave
jno
xchg
mov
sub
ret
mov
imul
pop
pop
adc
and
add
cmpsl
lock
lods
sub
roll
push
adc
and
push
adc
inc
inc
push
mov
xchg
dec
cwtl
mov
pop
jmp
lahf
and
push
push
add
test
or
daa
rolb
pop
mull
aas
outsl
jns
cld
scas
add
int3
into
inc
dec
rorb
lahf
sbb
mov
data16
mov
xchg
add
ret
gs
imulb
pop
pushf
mov
adc
ficoms
sahf
dec
lret
dec
xchg
mov
fwait
in
inc
insl
or
fldenv
cmp
xchg
dec
sbb
jge
hlt
outsb
add
fsub
push
push
cltd
bnd
or
clc
add
mov
fisubs
pop
iret
add
adc
or
hlt
fimull
orb
frstor
sub
add
cmp
or
nop
mov
lcall
ds
mov
push
pop
pop
cld
cmp
dec
roll
or
xchg
dec
dec
xor
add
sub
sub
ljmp
and
mov
rorb
lcall
jle
mov
out
add
inc
sbb
or
inc
add
fiadds
cli
jge
add
sbb
aaa
jae
push
pop
mov
inc
iret
mov
sub
imull
mov
jp
jno
data16
sub
cwtl
jge
mov
jmp
rcrl
fcom
cltd
add
fs
jo
aam
fwait
xchg
add
andb
pop
fmul
sti
pop
add
inc
and
mov
mov
add
lret
inc
cmpsb
cs
or
rol
sub
xchg
es
sub
dec
jmp
cmp
xchg
pusha
pop
jne
aam
ss
mov
pop
pop
inc
push
sar
add
scas
mov
icebp
stc
ss
xor
int
and
cmp
shl
out
cmc
loopne
into
test
add
pop
sahf
mov
es
and
cmp
mov
xor
xor
and
sarb
sbb
sbb
xchg
add
cli
dec
add
and
mov
ret
test
mov
sti
out
jg
lock
adc
pusha
xchg
sbb
into
mov
jbe
push
xor
loope
xor
lcall
add
lock
pop
popf
cld
arpl
cwtl
je
add
mov
pop
mov
pop
cwtl
cmpsl
nop
std
ficompl
addb
data16
add
insb
dec
bound
adc
fwait
xchg
cmp
dec
mov
dec
pop
and
jge
in
flds
pop
xchg
xchg
addb
jmp
cmp
push
arpl
and
push
pop
test
lcall
gs
nop
xchg
adc
xadd
add
and
sbb
clc
jae
fisubl
pop
add
xor
incb
and
inc
in
cli
cmp
negb
cwtl
add
faddp
dec
cs
lcall
iret
inc
scas
pop
mov
adc
stc
ds
xor
rcr
addb
imul
imul
push
fsubr
mov
add
gs
add
or
pop
add
mov
lret
shll
pop
xor
js
popf
mov
orl
inc
mov
stos
add
jb
and
mov
aad
das
sbb
mov
mov
cli
jae
les
setg
mov
dec
inc
adc
sbb
fiadds
mov
sbbl
xchg
cmp
mov
push
jge
mov
andl
add
add
je
outsb
dec
out
fadds
pop
nop
jb
adc
scas
sub
mov
mov
mov
cld
push
data16
add
rclb
jmp
mov
test
cmpsl
xchg
cwtl
xchg
test
test
and
lods
mov
cmp
pop
or
or
stos
mov
add
scas
movsl
popa
push
cmp
jge
jmp
stos
sub
roll
adc
xor
in
fldl
xor
movswl
add
xor
mov
je
jge
and
sub
pop
jmp
test
lock
add
mov
out
add
pop
dec
sbb
cmp
sub
push
add
sub
or
or
add
fstl
jno
add
test
dec
sbb
cmpsb
add
out
data16
sbb
or
movsl
ja
add
cmc
ficoms
add
cmp
pop
or
in
push
mov
dec
mov
sub
mov
add
jno
push
je
dec
cmp
add
loop
fwait
mov
sarl
jae
add
inc
jnp
add
xor
aas
add
mov
sub
inc
xor
jo
xlat
rcr
fisubs
adc
aad
push
das
inc
fisttpl
fs
movsb
fdivl
add
sub
inc
pushaw
add
lret
sbb
clc
and
inc
mov
gs
aaa
shll
sbb
mov
enter
and
add
ret
imul
popf
dec
icebp
mov
pop
mov
or
stc
in
loopne
xor
rorb
outsl
aad
cld
add
int
xor
je
pop
lahf
call
add
into
pop
dec
out
mov
xor
mov
and
scas
sub
sti
cld
jle
lcall
xor
fidivrs
mov
jl
adcb
je
add
int
push
or
test
cld
scas
sbb
mov
loope
pop
pusha
cmc
mov
add
push
pusha
pop
add
ud2
ja
cmpsb
pop
mov
aas
jg
push
sub
mov
das
stos
lock
add
or
enter
daa
or
in
pushl
sbb
ret
add
sbb
mov
test
or
jle
rcrb
addr16
add
cltd
add
mov
mov
subb
push
imul
cmpsb
xor
lret
cmp
jb
cwtl
inc
add
inc
cs
sbb
sub
push
test
sbb
xor
and
call
ja
sbb
add
sbb
into
add
pop
notl
xor
sbb
andl
dec
out
jl
push
mov
adc
sbb
ficoms
scas
jb
adc
ret
popfw
out
inc
jb
fldcw
cmp
and
inc
xor
inc
add
mov
ja
andl
pop
ss
std
add
into
fnstenv
out
outsb
xchg
add
xchg
cmp
inc
mov
icebp
clc
out
add
out
push
movb
jg
inc
sub
mov
in
mov
pop
cmpsl
sub
mov
jecxz
pop
mov
fisubs
shl
and
sub
add
movsb
or
in
mov
sbb
stos
notb
dec
aad
add
clc
mov
sbb
push
mov
xor
mov
out
push
mov
fcmovb
add
push
xchg
repnz
rcrb
imul
icebp
cld
fisubl
mov
mov
inc
cli
cmp
mov
pushf
sub
xchg
cmpsb
les
stos
popf
insl
and
shl
out
adc
mov
popf
aaa
sbb
adc
mov
jle
mov
inc
out
lret
push
jo
adcl
fwait
dec
add
ss
push
or
xor
mov
andb
mov
add
sub
xchg
pop
fists
cwtl
dec
jmp
mov
adcb
shl
jmp
adc
or
mov
xchg
sbb
xor
jne
or
push
mov
imulb
addr16
imul
repnz
bound
mov
cwtl
out
mov
adc
push
adc
mov
xor
push
xchg
scas
add
mov
sub
scas
sbb
jbe
inc
pop
pop
add
jecxz
xor
xlat
pushf
xchg
or
sub
jns
or
mov
add
repz
and
enter
cmp
fwait
sbb
cmp
push
and
nop
mov
push
pop
das
test
mov
and
iret
dec
mov
jb
movsb
sub
xor
outsl
add
out
test
mov
call
xchg
push
inc
xor
push
test
jbe
movntq
inc
adc
dec
mov
or
or
call
dec
imul
repnz
popa
jo
push
or
lods
push
and
enter
dec
add
push
xor
inc
jg
nop
add
repnz
aas
jmp
orb
push
pop
rcrl
loopne
filds
mov
popf
xchg
add
in
xchg
clc
imul
mov
sub
fildll
lret
inc
cld
mov
inc
sbb
or
xchg
push
xorl
andl
test
andl
sub
orl
stos
dec
mov
subl
mov
cmp
adc
sub
or
add
pop
out
jl
ja
cmpb
sub
loope
jge
mov
xchg
add
jno
cmc
rcrl
pop
add
pop
sub
inc
test
mov
push
or
enter
add
bound
fisubs
enter
lock
mov
pop
mov
add
sub
int3
push
sbb
add
cs
push
push
push
mov
ds
pop
out
loop
add
xor
add
pop
into
mov
add
das
xor
mov
pop
outsl
add
cli
push
aaa
adc
ret
add
mov
cmp
fnstsw
xor
ds
arpl
add
lea
or
and
popf
add
int3
dec
pop
inc
sbb
pop
cmp
sbb
loope
les
pop
adc
out
mov
mov
jnp
out
movsb
or
scas
mov
ja
loop
push
and
or
xorb
push
fsubrp
add
aas
rcrb
jle
sbb
into
leave
pop
xchg
shll
xorl
push
mov
gs
les
cmp
sbb
das
das
add
std
shl
pop
pop
insb
dec
xlat
leave
mov
data16
es
xor
add
push
xor
adc
loopne
mov
xlat
jg
es
into
cmovp
cmp
inc
out
rcrb
dec
mov
jnp
lock
cmp
push
sbb
shl
sub
roll
sbb
sbb
lock
add
pop
testb
push
sbb
ss
testl
leave
test
lea
sbb
mov
push
add
xor
inc
mov
cli
addb
rorb
or
popa
test
sub
jns
mov
mov
in
icebp
mov
pusha
or
mov
andl
pop
bound
adc
or
mov
cmp
test
adc
jns
lock
pusha
outsl
sbb
mov
push
pop
xor
cld
inc
cmc
mov
push
cmc
or
leave
dec
push
or
push
jb
cmp
and
stos
and
or
addb
mov
xor
js
mov
gs
or
add
jne
inc
daa
add
jp
in
cwtl
or
sbb
test
add
popf
jne
cmp
and
push
xchg
sar
daa
sbb
neg
dec
jne
add
into
outsl
dec
stos
fidivs
add
lret
loopne
mov
xor
xchg
push
add
xchg
dec
aaa
pusha
sbb
jns
adc
ljmp
and
ret
leave
sub
and
ja
inc
sub
inc
push
mov
dec
add
sub
xchg
lock
add
sub
fs
int3
sub
jno
and
inc
scas
es
sti
sbb
cmp
and
and
or
and
inc
mov
mov
jo
cmp
jne
fildll
pop
adc
les
and
ds
sarb
fidivrs
rcrb
jns
pop
lret
lahf
xor
cld
cmp
xchg
test
sbb
xor
push
push
aaa
adc
or
sbb
ss
shlb
mov
loope
fdiv
and
pop
dec
bswap
mov
imul
mov
ljmp
inc
and
and
dec
or
popf
pop
leave
jno
test
xor
setbe
adc
shlb
pop
lods
out
lea
mov
addr16
lcall
arpl
call
out
cmp
shrl
mov
mov
and
add
pop
loopne
cmp
incb
outsl
fcoms
adc
lret
mov
popa
sar
cmp
sbb
call
les
pop
incl
cwtl
sbb
fadds
add
test
enter
test
jb
mov
and
sti
fists
jne
adc
pop
and
les
pop
cmp
loopne
add
leave
adc
int
notl
mov
cmp
xor
or
cmp
xchg
orl
test
sahf
sub
add
push
sbb
adc
ljmp
cld
jns
sbb
sbb
add
mov
je
dec
pusha
js
leave
or
pop
jae
or
cwtl
dec
sub
lret
push
daa
xchg
out
sarb
xor
jnp
push
and
repnz
xor
inc
pop
dec
les
inc
out
pop
and
loopne
jmp
dec
or
xor
into
lahf
cmp
and
add
adc
dec
jmp
ljmp
xchg
add
fidivs
mov
lds
movl
cmpb
pushf
in
sbb
xchg
jmp
add
insl
xchg
push
add
sub
jmp
or
pop
lahf
pop
ficompl
ss
push
mov
mov
add
lret
push
add
imul
arpl
push
xor
bound
fwait
dec
push
popl
xchg
jp
bound
mov
or
sti
stos
mov
mov
jno
push
aam
and
popa
add
sbb
push
xchg
lock
cmp
pop
lods
push
bnd
or
inc
fdivr
add
lods
pop
or
dec
icebp
push
push
popa
dec
fmull
mov
add
movl
addb
and
xlat
and
jp
push
push
std
into
popa
cmp
mov
ljmp
inc
nop
dec
and
lret
pusha
dec
sub
inc
xchg
dec
xor
jae
push
jle
cmp
cmpsb
outsb
and
mov
shr
hlt
mov
rorb
jb
mov
dec
sub
js
sbb
cmp
push
rcrb
lret
dec
xor
xchg
mov
cmp
nopl
jae
dec
pusha
add
and
das
lock
add
or
push
add
in
sarl
jbe
push
jo
cmp
push
lds
xchg
sbb
add
fs
and
or
mov
pop
clc
roll
push
imul
cmp
mov
and
incl
cltd
and
push
mov
into
enter
enter
mov
data16
adc
jne
add
jge
add
insb
addl
xor
adc
in
xor
cmpsb
rcl
lret
add
and
pop
int3
xor
adc
ret
aas
repz
int3
sbb
les
aas
jmp
add
and
and
imul
xchg
inc
lods
loop
xlat
sbb
test
sbb
cmp
and
mov
dec
das
add
xchg
repnz
push
mov
iret
add
xor
and
jb
daa
call
or
pop
jecxz
lods
les
pop
add
or
push
cmpsl
or
push
cmp
sub
cs
sbb
add
push
mov
inc
iret
push
xchg
pop
inc
xor
pop
repz
jbe
iret
jb
xor
adc
aas
cmpsl
inc
pop
mov
shlb
inc
pop
pusha
call
pushf
adc
push
sub
add
pop
and
cmovp
insb
andb
mov
xor
xchg
add
aam
in
gs
jge
mov
out
adc
jns
and
mov
and
cmpsl
or
iret
popf
int3
cmpb
add
push
sub
std
add
dec
call
mov
filds
add
imul
dec
xchg
and
add
mov
popf
inc
xor
sub
mov
dec
lcall
or
gs
pop
lahf
stc
cmpsl
andb
shr
loop
cmp
addb
pusha
rolb
ljmp
jae
jmp
movsb
or
in
pop
outsl
ss
je
pusha
jl
imul
add
mov
jp
adc
pop
int3
sub
jg
push
loopne
mov
js
mov
pushf
pop
scas
hlt
popa
pusha
jmp
fisubs
mov
lea
mov
movsl
pop
inc
cltd
shrl
nop
dec
adc
adc
mov
enter
rolb
stos
imul
jle
lock
push
cli
mov
dec
pop
mov
int
add
sbb
ja
roll
fs
dec
in
popl
adc
cmpb
add
leave
fistl
cmp
fsubr
outsl
add
fs
cmp
push
jne
lret
adc
call
hlt
aas
add
mov
int
shl
xchg
mov
add
mov
faddp
push
push
rdtsc
nop
cltd
xor
rolb
mov
pop
jne
or
jmp
mov
pop
cmpsb
or
mov
iret
sbbb
sbb
subb
cwtl
xor
jge
stc
fnstsw
loop
inc
cmp
adc
fs
sub
mov
add
and
dec
and
or
jb
hlt
mov
loop
add
xor
adc
dec
sub
add
sbb
inc
push
xor
jnp
jno
and
jg
loop
mov
aaa
mov
inc
add
adc
or
add
fcoms
pop
xchg
rol
sbb
dec
sbb
push
xchg
dec
adc
js
push
xor
xor
lcall
scas
jo
sub
push
ds
add
jnp
cltd
pop
aam
inc
add
or
out
aaa
enter
pusha
jae
add
lret
sbb
les
aam
xchg
and
sub
and
sub
dec
pop
pusha
push
dec
add
or
repz
out
mov
cld
jecxz
sub
push
dec
sub
sbb
stc
pop
add
xor
sub
stos
arpl
cwtl
in
inc
add
xchg
dec
andb
paddb
xor
push
orl
and
xchg
jbe
inc
dec
inc
es
xchg
and
or
mov
mov
and
pop
push
xlat
adc
inc
jno
test
roll
jl
pop
add
xchg
int
pop
sub
inc
push
repz
loope
rcr
pop
push
add
iret
pop
xchg
mov
mov
test
jge,pt
add
jmp
cmpsl
outsb
jecxz
add
lcall
mov
iret
add
lods
outsb
cmp
stc
push
aas
scas
add
inc
add
xchg
orb
inc
cmp
jbe
adc
mov
inc
xchg
xor
sub
or
daa
and
icebp
or
mov
xor
lea
lcall
cltd
dec
test
cmp
popf
jg
xchg
jp
leave
mov
xor
mov
mov
inc
adcb
lcall
sahf
cs
push
and
mov
and
incb
mov
movsl
xchg
inc
cmp
add
xchg
enter
rcrb
outsl
push
mov
xor
mov
mov
mov
inc
out
cmp
jae
outsb
pushf
loopne
sti
mov
daa
add
sub
cmp
lret
or
mov
or
fadds
js
fnstenv
jae
inc
inc
pop
inc
fucomp
je
je
addb
cmp
lock
shl
out
icebp
test
cmp
scas
mov
and
add
cmp
sub
add
pop
mov
adc
dec
or
jmp
and
lahf
das
into
in
sbb
shr
mov
mov
adc
jmp
shlb
mov
out
lret
cld
pusha
and
lods
sub
add
adc
clc
in
test
and
dec
daa
add
inc
push
andl
dec
sbb
xchg
add
inc
insb
pop
push
mov
sbb
addl
lods
add
xchg
test
jne
jge
push
or
mov
inc
mov
mov
push
lock
rcrb
daa
adc
cmp
or
sub
sti
sbb
pop
es
lods
mov
jge
dec
jmp
jnp
pop
cmpl
mov
or
clc
jl
popf
add
lahf
ja
pop
push
push
add
fsts
lock
clc
scas
lcall
pop
ret
in
enter
cmp
int
fsubl
or
test
popf
fwait
mov
pop
pop
mov
popa
dec
nop
mov
sub
ljmp
pop
mov
jmp
mov
push
add
mov
mov
insl
or
xlat
mov
out
jp
repnz
pusha
fs
jae
sbb
shlb
dec
mov
bound
outsb
dec
add
ja
fadds
jle
pop
popa
fistl
fs
sub
icebp
cmc
cld
sti
pusha
cmp
add
fsubs
or
xchg
mov
xor
or
pop
jg
push
push
iret
movb
testb
inc
cmp
dec
adcl
mov
xorb
repnz
add
sti
xchg
hlt
mov
pop
pushf
cmp
loopne
cmp
es
pop
or
add
and
jg
mov
xchg
mov
in
data16
movsl
pop
push
xchg
scas
out
or
dec
nop
mov
jbe
xchg
cmp
add
add
movsb
mov
add
mov
lds
fistpl
jno
stc
push
sub
add
adc
fcompl
jno
gs
pusha
mov
enter
and
adc
sub
and
repnz
clc
add
jmp
aad
adc
mov
std
fildll
cmc
roll
out
xor
rol
pop
ret
sbb
lahf
pop
xorb
out
sub
or
subl
add
jo
xchg
shll
and
sahf
filds
mov
pop
jecxz
or
ds
loopne
jae
aas
fcomip
add
inc
rolb
xor
adc
in
inc
mov
inc
add
inc
loope
jb
popa
mov
cmp
sub
and
mov
jmp
sub
add
or
pop
and
or
sbb
xchg
dec
add
pop
cmc
adc
fmul
in
adc
mov
jnp
in
lret
nop
cli
mov
mov
lock
aas
xchg
mov
inc
push
push
shrb
mov
cmp
add
xchg
popf
lock
mov
jo
call
sahf
jo
mov
adcb
gs
data16
jb
xor
clc
out
add
in
shrl
mov
add
xor
clc
mov
cmp
add
sbb
sub
jp
pop
jecxz
add
inc
nop
cmp
push
dec
add
shlb
loopne
cmpsl
cmp
pop
push
das
ret
sub
push
jle
sbb
popf
inc
adcl
test
cmp
shrb
inc
loope
jle
pop
enter
ljmp
cld
repz
lods
add
jae
imull
push
test
stos
add
sub
das
jmp
add
lods
js
clc
cmp
or
lret
nop
pop
add
mov
push
jo
cmp
dec
out
push
xchg
out
or
int
xor
shll
movsb
pushf
movb
test
add
lea
cmp
out
icebp
pop
mov
adc
cmpsl
repz
push
adc
add
mov
or
imul
leave
addr16
cmpsl
lds
push
cmp
ja
outsl
dec
cmp
pop
sahf
sbb
push
and
push
push
add
test
shll
lds
dec
repz
mov
fdivp
add
daa
inc
cmp
cmpsl
inc
hlt
dec
str
xor
cltd
dec
nop
and
fists
dec
das
cmp
push
loopne
repz
mov
add
fistpll
es
in
int3
outsl
hlt
lock
dec
loope
lret
and
div
lcall
int3
add
fwait
sbb
inc
add
cmc
push
dec
add
lods
jbe
add
or
cwtl
data16
int3
add
mov
vmovhps
sbb
addl
mov
int
das
lods
mov
add
into
cli
test
push
mov
add
loop
xchg
shlb
cmp
test
adc
sub
pop
sub
test
pop
adc
push
mov
inc
imul
sahf
add
lret
addb
js
imul
xchg
mov
out
and
mov
dec
lret
pop
pop
or
roll
adc
clc
sbb
cmp
pop
cmp
roll
sub
xor
jne
pop
out
lds
pop
add
stos
std
cmp
lods
stc
pop
add
sub
nop
out
stos
daa
dec
mov
add
ljmp
push
pusha
subb
stos
popa
add
push
aaa
fwait
push
into
and
mov
add
ret
loope
sahf
aam
imul
push
int
adc
pusha
daa
push
jmp
xor
lcall
mov
add
adc
push
mov
fmull
ret
sarb
lahf
out
xchg
cltd
add
xchg
mov
test
mov
nop
ffree
jmp
shl
pusha
or
int3
and
push
popf
fadds
mov
pop
pop
nop
daa
mov
lock
add
fwait
jg
and
imul
add
cs
jp
jb
cmp
jge
inc
pop
cld
in
mov
lock
cmp
inc
add
jmp
jnp
mov
cwtl
pop
cld
add
xor
wbinvd
xchg
shrl
add
fldt
aad
pop
pusha
das
ja
push
jp
or
imul
mov
dec
mov
pusha
or
add
xor
sub
adc
out
inc
cltd
pushf
in
into
movsb
addr16
bound
add
mov
mov
sti
mov
pusha
inc
shlb
mov
cmpsl
mov
add
in
std
test
sub
outsl
pushf
pusha
out
or
imul
jle
sub
or
sbb
mov
add
subb
inc
add
add
daa
cltd
mov
push
push
popf
cmp
inc
add
add
insl
movsl
smsw
pop
dec
jns
mov
lds
fisubrl
jne
mov
add
out
jg
cmp
sbb
shlb
xchg
push
sbb
jge
jg
ljmp
mov
dec
mov
inc
ficompl
push
mov
andb
insb
push
stc
push
je
and
mov
out
cld
pmuludq
fisubl
dec
xchg
or
mov
inc
add
data16
clc
add
lods
adc
pop
movsl
sub
test
pushf
add
scas
negl
and
clc
xchg
nop
push
mov
jmp
push
sub
pop
fadds
mov
mov
lret
mov
loopne
popf
icebp
pop
pop
add
xor
in
mov
ljmp
cmpsl
loope
mov
ret
cli
xchg
sarb
add
repz
sbb
jo
jns
fwait
loope
cli
imul
pop
push
pop
mov
lods
sbb
in
add
js
pop
push
das
loopne
xor
clc
push
out
stos
sub
sub
add
sbb
mov
mov
add
lods
aaa
rcrb
add
cmp
jle
cmp
push
pop
mov
xor
cwtl
imul
in
jbe
ljmp
pop
rcll
add
bound
in
lea
mov
insb
out
mov
push
and
sub
adc
mov
xor
xor
xor
mov
cmp
add
cmp
sub
jl
je
push
out
das
and
jle
jl
add
mulb
or
sub
in
in
movsb
inc
pop
mov
cltd
jmp
sbb
or
subb
dec
cmp
add
mov
add
das
jecxz
enter
dec
jae
add
pop
or
push
int
push
enter
add
sahf
jne
rclb
mov
cmp
push
add
insb
inc
pop
fistpll
inc
mov
inc
into
cmp
xchg
xor
add
mov
imul
mov
pop
fwait
fs
faddl
or
and
cmp
push
push
or
jno
sarl
add
outsl
push
add
js
outsb
lods
lret
xchg
hlt
pop
cmpsl
mov
rorb
push
inc
cwtl
in
push
rol
adc
cmpsb
sbb
add
fldl
loopne
loop
add
out
pop
sub
cwtl
cmp
push
cmpb
pop
inc
mov
mov
adc
lahf
or
add
cmpsl
cmp
addl
ss
add
mov
in
add
xchg
push
push
fsub
cmp
mov
nop
cmp
pop
add
pushf
dec
xor
mov
mov
in
test
dec
push
and
jecxz
fwait
add
sarl
add
scas
ds
aaa
jle
cmp
dec
cmp
outsl
sbb
loop
cmpsb
mov
xchg
test
and
fiaddl
push
dec
add
add
imul
push
mov
add
or
sbb
mov
and
add
cmp
loopne
lds
dec
std
mov
mov
imul
lret
sbb
fstpt
add
in
sub
xchg
cs
jo
jno
mov
mov
loop
xor
add
and
stos
or
repz
and
mov
mov
outsl
jne
add
xchg
cmp
cmp
repz
out
dec
cmp
call
lock
add
aam
pusha
clc
je
leave
xor
cmpsb
add
dec
jo
push
adc
inc
add
inc
notb
aad
sbb
push
lds
add
jmp
mov
xor
add
lods
mov
push
cwtl
mov
add
addps
mov
push
inc
addl
popf
push
mov
mov
dec
mov
add
jmp
lock
dec
pop
pop
aam
ret
add
sub
xor
xchg
push
push
or
notb
ds
xor
sub
std
jnp
add
into
int3
test
daa
xchg
iret
ret
adcl
push
pop
lret
shlb
imul
inc
pop
pop
mov
clc
shrb
aas
xchg
data16
push
iret
push
stos
addr16
les
sub
gs
lds
cmp
dec
lret
and
mov
pop
cli
pop
add
popf
es
in
pushf
dec
cld
orb
lcall
mov
adc
pop
jo
and
dec
rol
into
pop
mov
sti
fxch
push
inc
mov
jge
sub
xchg
test
sbb
mov
outsb
xor
lret
jl
pop
push
xchg
push
and
mov
sbb
push
push
xchg
cmp
outsb
add
cmp
dec
mov
xor
lock
jno
repz
mov
sti
add
push
mov
roll
enter
out
ja
add
in
pop
int3
mov
leave
push
loope
aas
add
pusha
inc
adc
aad
jno
aam
inc
add
daa
scas
add
sbb
aaa
pop
mov
push
lods
fdivs
adc
add
lea
mov
xchg
adc
stc
jns
add
pushl
pop
sbbl
scas
test
xchg
shlb
into
dec
add
fistps
sti
push
cli
sbb
jnp
faddl
add
pop
and
xchg
repz
hlt
inc
mov
push
adc
shl
inc
cmp
sahf
lea
movsl
jns
add
dec
push
dec
lock
mov
ds
je
cwtl
cwtl
add
in
nop
lahf
sub
cld
pusha
sbb
dec
jmp
mov
jnp
xchg
test
int
es
idivl
push
add
push
clc
jecxz
shl
jbe
movsl
cmp
jae
xchg
repnz
add
in
mov
loopne
rolb
cmc
dec
or
ljmp
aaa
pop
sub
sti
or
inc
rorb
test
imulb
cltd
or
data16
add
iret
nop
int
push
jle
mov
mov
fdivrl
mov
cmp
xlat
pushf
ret
in
mov
mov
insb
es
fidivs
loop
add
leave
add
push
mov
rolb
hlt
jbe
adc
popa
dec
sbb
scas
idivl
mov
add
and
pop
pop
stos
jle
dec
in
jno
jbe
inc
nop
xchg
add
sbb
popl
jle
test
call
ljmp
mov
pop
cld
push
clc
arpl
mov
ljmp
repnz
mov
sbb
out
roll
in
repz
call
xlat
jle
stos
mov
fistpl
ds
pop
jae
sbb
pop
arpl
lock
rclb
pushw
test
push
pop
jo
cmp
dec
mov
test
xor
pop
pop
mov
inc
jne
fistpll
xchg
psubb
add
and
call
mov
stos
or
aaa
sub
adcb
jo
cmp
hlt
add
addr16
or
and
push
sbb
mov
es
cld
bound
cmp
popa
sbb
dec
icebp
inc
fsubrs
dec
inc
leave
enter
cs
jae
add
jmp
mov
loope
inc
in
shll
pop
pop
sub
idivl
test
sub
pusha
dec
xlat
das
fiadds
rcll
aam
arpl
test
cltd
ja
add
and
push
scas
pop
push
adc
dec
mov
xchg
fdivrl
jl
movsl
fwait
or
push
lahf
and
add
cld
scas
dec
adc
add
xchg
add
rclb
in
inc
jl
scas
dec
lcall
das
add
popa
mov
pop
dec
add
andb
add
jnp
cmpsb
add
pop
insb
cmp
imul
mov
pusha
sub
cmovo
cmpsl
imul
dec
mov
aad
add
sarl
and
negb
lock
cmp
cmp
inc
fidivrs
mov
pop
shr
and
pop
nop
xchg
cmp
loope
sbb
lret
lahf
int3
inc
jbe
and
xchg
push
ds
pusha
enter
jecxz
stos
scas
inc
and
pop
sub
or
add
adcb
xchg
dec
add
lret
jo
and
add
orl
mov
rorl
das
insl
cli
nop
cmpsl
xchg
dec
mov
cmpb
push
jb
sbb
add
clc
pop
mov
add
repz
add
out
push
add
shrl
das
dec
pushf
testl
inc
mov
loop
inc
in
jnp
ret
pusha
lret
daa
mov
mov
int
xor
adc
xor
pop
or
jmp
xorb
into
add
lcall
mov
or
fbstp
test
add
add
test
push
push
sahf
lret
aas
add
pop
mov
sbb
mov
out
ja
inc
or
fistpll
push
jne
mov
mov
dec
cmp
icebp
int
sbb
pop
pop
fs
mov
inc
xor
ljmp
adc
mov
pop
mov
add
mov
lds
pop
add
push
and
jecxz
add
inc
sub
ljmp
adc
roll
jnp
add
sarb
leave
add
aaa
and
mov
xchg
add
dec
mov
into
pop
fchs
cmp
xor
sar
sahf
subb
popa
add
iret
test
cmp
sub
mov
mov
push
mov
lods
inc
into
cwtl
mov
enter
push
mov
fiaddl
dec
test
cmp
add
push
fcmovne
out
andb
add
cmp
xchg
and
loope
roll
mov
fdivs
mov
lret
outsb
add
pusha
loop
orl
adc
insl
mov
add
add
pop
clc
pop
enter
loope
add
pop
lret
add
cmp
mov
cmp
iret
add
jmp
out
add
mov
push
and
cmp
add
mov
icebp
cwtl
aas
ja
or
lea
rorb
push
pop
cmp
add
stos
arpl
mov
ljmp
xchg
push
test
add
jns
adc
lea
sub
bnd
xor
sbb
push
out
out
dec
mov
popa
inc
cs
add
fst
stos
in
pusha
push
fdivr
or
mov
add
push
sbb
lea
aam
pop
out
push
lahf
in
inc
xchg
xchg
sbb
ret
jb
add
sbb
js
cli
out
adc
pop
jae
test
jp
push
jle
mov
insl
mov
lds
fisubl
flds
push
sbb
testb
inc
xchg
fimull
sub
test
cs
push
lock
push
movsb
add
out
ja
fs
pop
je
ffreep
cmp
jns
mov
add
pop
nop
mov
ja
push
adc
jecxz
add
jmp
mov
push
hlt
pop
stos
ret
mov
jno
and
push
push
pusha
ss
mov
outsb
xchg
and
push
adc
inc
add
sbb
fmulp
ret
loopne
jno
mov
sarl
sbb
push
jb
push
test
add
dec
and
push
mov
ja
pusha
enter
jle
mov
add
pusha
cmp
jbe
mov
add
aad
sbb
int
add
test
mov
roll
adc
int
loopne
insb
std
dec
stos
add
bound
push
add
rcrl
fcomps
push
mov
aam
lods
add
jo
cld
jle
add
pop
popf
shlb
sbb
int3
add
stc
fs
and
fsubr
iret
cmp
andb
push
xor
cmpsl
add
cltd
add
lock
xor
add
fyl2xp1
or
xor
mov
out
cmc
push
lock
dec
dec
add
pop
ret
ja
cld
push
add
insb
adc
testl
push
lds
cmp
dec
jns
push
add
add
mov
and
mov
push
fbstp
xchg
dec
add
std
adc
cld
push
outsl
call
add
mov
cmpb
pmuludq
dec
xor
push
pushf
int3
mov
dec
ret
pop
rolb
int
sbb
cmpb
push
inc
scas
push
loop
cmp
test
aad
testl
aaa
dec
test
xchg
sbb
enter
sahf
outsl
add
mov
movsl
js
pop
cmp
hlt
add
sbbb
mov
cwtl
cltd
pop
jp
pop
jg
push
add
inc
int3
push
enter
out
pop
jne
sbbb
fcmove
fs
xor
leave
jg
pop
test
pusha
fldt
pop
mov
and
add
mov
mov
add
test
push
outsb
cmp
pop
add
loopne
mov
in
push
enter
imul
orb
cli
mov
loopne
pushf
mov
cmp
call
mov
mov
cmpsb
iretw
add
xchg
and
dec
pop
and
enter
mov
les
test
and
adc
jbe
ds
bound
cmp
jle
ja
rclb
xchg
adc
je
ret
pop
fwait
dec
mov
cmp
inc
sub
add
add
cmp
sbb
xlat
inc
ds
and
fs
dec
or
pushf
outsb
pop
adc
or
cli
mulb
add
mov
mov
add
in
sbb
adc
add
lahf
jo
inc
mov
dec
cmp
xchg
popl
call
add
popf
ljmp
add
mov
xchg
or
push
jnp
adc
sahf
std
clc
es
nop
cmp
outsl
leave
loopne
lea
jns
and
lret
cmp
sahf
adc
pop
cmp
rcrb
inc
add
pusha
test
shll
adc
or
lods
adc
dec
pop
popa
mov
add
shl
cmp
rorl
push
das
pop
add
ret
xor
cltd
add
push
sub
jne
iret
add
xchg
cmp
add
jl
or
jno
addb
jne
cld
add
icebp
sub
inc
ss
xchg
dec
mov
mov
mov
pushf
in
loop
jg
ss
sub
mov
add
jnp
sub
sarb
xor
dec
add
xchg
imul
mov
insl
mov
dec
cmp
or
lcall
cltd
add
jp
ss
push
inc
and
mov
jno
inc
jge
xchg
adc
push
dec
inc
dec
push
sbb
add
add
adc
add
in
jae
mov
das
mov
jbe
xchg
add
mov
out
cmpl
pop
or
call
mov
xor
out
sbbb
ficomps
add
push
xor
popa
arpl
aas
stos
jo
adc
rolb
add
test
xchg
add
sub
das
cmc
hlt
int3
push
add
push
loope
cwtl
pop
add
pop
outsl
addr16
stos
test
add
add
mov
jnp
sbb
jb
pop
mov
sbb
add
fisttps
xchg
xchg
fwait
add
jg
push
mov
pop
adc
xor
add
inc
rorb
add
mov
adc
sub
xor
sbb
xchg
add
in
cmp
push
adc
lods
daa
out
add
nop
lods
aam
ficompl
mov
pop
and
hlt
push
and
mov
repz
lea
cmp
pop
dec
cmp
mov
dec
out
add
inc
jp
add
cltd
mov
cmp
cmp
dec
int
sbb
stos
pop
sbb
add
stc
out
push
cli
add
xchg
lret
fldcw
mov
imul
ret
loope
dec
movsb
pop
cmp
inc
inc
add
mov
stc
sbb
test
mov
ds
add
repz
jnp
pop
cmp
add
jge
pop
mov
add
aam
ljmp
jnp
test
imul
add
idivb
in
cmp
popf
iret
sub
rcll
xor
insl
mov
std
add
cmp
cmc
ja
push
pushf
add
pop
add
add
or
pushf
test
inc
add
xchg
les
stos
roll
add
int
test
rcrl
cmpsl
cmp
fwait
clc
mov
push
cld
add
out
mov
push
jae
out
mov
lcall
sbb
idiv
add
jp
and
stos
mov
mov
sub
push
mov
adc
loop
lods
push
sub
push
cmpl
fwait
in
leave
jge
sbb
lret
jnp
or
std
imul
rolb
push
cwtl
dec
jmp
cmc
fidivrl
cltd
and
fstpl
jno
adc
xor
jns
call
es
pusha
addr16
mov
add
or
mov
push
jge
add
out
jns
add
jp
jnp
test
incb
arpl
and
sub
or
sarb
inc
popa
cltd
repnz
add
scas
cmp
lock
mov
mov
sbb
imull
mov
push
cmp
add
mov
cmpsl
das
in
mov
aam
pop
dec
or
rorl
ret
imul
or
mov
add
loop
dec
cmpsb
aad
aas
aam
cmpsl
loopne
fidivl
cmp
outsl
popa
xchg
sub
andb
add
mov
ja
dec
push
rclb
nop
mov
push
cmpsl
shl
xchg
jle
adc
lods
or
jo
add
jge
imul
jl,pt
cltd
push
lds
mov
in
sti
inc
jae
outsl
and
or
lds
fwait
shrl
faddl
pushf
fmuls
ljmp
lds
push
mov
add
cltd
jl
jle
jmp
in
add
outsb
sub
je
leave
xchg
push
jle
add
cltd
or
and
xchg
push
sahf
loopne
loop
push
adc
cmc
inc
cmp
mov
add
or
pop
push
fcomps
jg
scas
call
lds
xchg
clc
push
loopne
loopne
sub
sbb
sbb
cld
or
jne
loop
xor
inc
cmp
idivb
mov
push
daa
xor
cmp
icebp
mov
ljmp
aam
insb
test
js
hlt
insl
movsl
sbb
fwait
cmp
imul
xchg
into
push
sub
cmp
xor
lea
push
les
sub
and
dec
add
mov
cmpsb
sbb
fildll
inc
sub
jns
add
into
aas
shl
cmpsb
jmp
loop
and
or
imul
jbe
add
add
push
fsubl
jo
outsb
mov
cmpl
add
in
lods
xor
cltd
imul
sahf
add
jnp
test
jno
and
lods
jl
sbbl
xor
dec
nop
sub
testb
lods
jo
jns
aas
in
mov
imul
repnz
lods
inc
xor
and
xorb
jne
and
jmp
loope
push
mov
jno
inc
mov
ljmp
cmp
pushf
enter
sbb
or
jns
fcoml
dec
or
movups
je
sbb
loopne
cmpsb
fisubl
add
adc
adc
pop
cmp
lock
add
and
out
testb
or
pop
add
push
popa
jl
sbb
sub
adc
cmp
inc
repz
mov
or
pop
push
cmpsl
and
adc
adc
mov
mov
mov
cli
les
scas
out
dec
push
and
or
adc
mov
pushf
or
inc
xchg
push
push
adc
mov
cmp
pop
jecxz
imul
mov
add
pop
add
add
mov
push
jg
cwtl
bound
lock
adc
scas
mov
xchg
adc
sub
lock
inc
shl
mov
in
shl
push
into
pop
add
mov
fldcw
fs
in
cmp
add
dec
aad
mov
insl
outsl
sbb
cmpsl
push
jno
les
jmp
in
int
or
bound
add
ljmp
or
mov
pop
add
xor
sub
subb
dec
fcompl
js
push
inc
dec
sub
add
testl
stos
and
add
adc
push
mov
sub
push
ljmp
in
popf
add
pop
popa
inc
pop
sbb
xor
cmp
jb
adc
aaa
into
out
sub
or
xchg
add
jmp
ret
test
fsts
adc
sbb
adc
dec
pop
inc
int3
xor
dec
in
jecxz
repnz
mov
xchg
jle
pop
outsl
mov
enter
outsb
hlt
adc
cmpb
add
mov
jl
cld
cmpb
bound
daa
add
sub
and
push
mov
ss
push
sub
movsl
sbb
cmpl
push
push
push
fcmovnb
loopne
mov
mov
push
nop
jae
cwtl
xor
inc
mov
aam
popa
push
insb
out
cld
dec
pop
sbb
orl
mov
add
pop
xorb
out
dec
popf
pop
mov
or
pusha
mov
or
cs
cld
sbb
int
movsb
add
mov
cld
bound
mov
in
fbld
and
movsl
xchg
add
jnp
xor
divb
stc
add
ret
jnp
add
ljmp
pusha
data16
int3
pop
sbb
inc
xchg
adc
mov
fsubrp
out
mov
subb
add
sub
stos
es
aam
push
xlat
decb
in
push
add
dec
lods
add
frstor
add
pop
addr16
ds
add
imul
dec
xchg
cwtl
add
out
lock
xor
ltr
les
enter
fdivrs
add
xchg
push
rorl
push
dec
mov
mov
enter
sbb
pop
andb
fbstp
inc
fdivp
enter
lahf
and
jmp
cmp
in
add
shll
and
xor
add
add
sub
xchg
lcall
cmpsl
xchg
add
daa
div
fistpl
add
leave
and
aaa
cld
into
fadds
mov
test
insl
out
pop
scas
add
dec
lods
push
bnd
sbb
shlb
fstp
mov
add
addr16
scas
inc
inc
movl
dec
fsts
repnz
rclb
add
mov
adc
jns
mov
pop
mov
popa
add
add
cmpsb
cld
or
cmpsl
in
daa
or
ja
testb
sub
enter
jne
pusha
cld
mov
push
add
out
js
xor
imul
xchg
sbb
in
add
inc
cmp
and
add
pop
jbe
lds
add
mov
sub
jp
out
xchg
xlat
sbb
fadds
jnp
movsb
out
adcb
ss
ljmp
fldcw
outsb
mov
popa
inc
adc
dec
aas
aad
xlat
or
mov
aaa
cmp
adc
enter
clc
push
cmp
rorb
mov
inc
mov
loopne
mov
mov
inc
mov
ds
dec
push
movsl
fnstenv
rclb
jns
add
add
lea
adc
xchg
fwait
add
cmp
xchg
loopne
enter
adc
and
mov
inc
sub
inc
adc
mov
sub
xor
xchg
push
fbld
xchg
mov
cld
outsb
repz
pop
push
sub
gs
mov
popl
addr16
cs
loopne
into
pop
add
lods
fistl
add
xor
mov
inc
and
gs
add
cltd
xor
add
xchg
cmp
cmp
fwait
add
lea
mov
cmpsl
jo
dec
ljmp
cmp
jge
mov
cmp
adcb
inc
jne
int
jb
xchg
lcall
imul
mov
int
inc
aas
fisubs
and
mov
add
test
std
sbb
add
jns
stos
insl
sub
xor
cwtl
adc
loope
jmp
pop
ja
inc
add
lahf
imul
sub
push
movsb
lock
dec
push
sbb
inc
mov
sub
and
xlat
inc
movups
dec
andb
or
sub
lcall
or
rcr
xor
mov
mov
test
movsl
scas
out
cli
sbb
sbb
push
xchg
fadds
sbb
out
add
cld
lret
in
and
add
pop
shrb
add
sbb
push
mov
std
inc
add
sub
cmp
add
shlb
and
clc
jnp
movsb
add
and
cld
into
das
jl
add
outsl
shl
sti
filds
pushf
pop
pop
xchg
aas
adc
add
push
test
insl
test
lock
mull
push
push
adc
popl
rol
sub
out
jle
loope
push
add
imul
cmp
adc
cmpsb
dec
add
pop
mov
cmpsl
dec
sub
loope
lret
mov
jae,pt
adcb
jns
int3
mov
cmp
es
in
jnp
lret
movsb
mov
arpl
push
cltd
add
data16
sbb
and
add
ret
or
jge
filds
imul
push
cld
out
aad
repz
add
pop
pop
mov
pop
cmp
mov
pop
xchg
sub
cmpsl
xchg
xor
inc
mov
popf
rcl
out
push
adc
mov
hlt
inc
pop
add
push
into
inc
mov
inc
pop
cmc
and
sub
push
dec
sbb
faddl
aas
mov
add
jge
in
sbb
add
loop
cmpsb
xchg
cmp
add
cmp
lret
add
in
pop
pop
pop
add
repz
push
scas
mov
jo
add
sahf
je
xchg
nop
mov
xor
sbb
add
sbb
stc
add
cwtl
mov
add
mov
ret
jp
dec
pop
sahf
or
pop
leave
inc
stc
test
add
xchg
and
add
and
cmp
mov
mov
pop
insl
rcl
loop
pusha
add
ja
es
repnz
mov
iret
sbb
pop
xor
lcall
mov
mov
stos
ficomps
lds
xchg
fdivs
jg
adc
or
andl
and
fs
pop
stos
cld
adc
xor
mov
jbe
int3
inc
mov
and
lcall
lea
pop
nop
outsl
icebp
add
xor
lcall
add
xorb
adcl
pop
push
cmp
adcb
aaa
add
mov
notb
cmp
adc
cli
dec
xchg
xchg
xorb
push
sbb
bound
add
cld
and
pop
mov
inc
test
add
movsb
je
sbb
repz
sarl
ljmp
cmp
mov
cmp
mov
xor
loopne
or
push
jns
ja
addr16
adc
cmp
add
pop
add
jne
cltd
add
or
jg
xchg
nop
mov
cmpsl
mov
ds
stos
xchg
xchg
add
inc
xchg
or
or
jne
xor
dec
gs
test
sbb
inc
lds
insl
nop
add
pop
rcr
aas
add
jo
add
mov
mov
add
cltd
jno
mov
add
dec
repnz
xor
push
sub
and
cwtl
ret
rclb
arpl
inc
into
add
lods
sbb
xor
sahf
cmp
test
add
arpl
les
insb
rorl
int3
sbb
mov
mov
movaps
mov
push
xchg
add
xchg
jle
pop
dec
add
adc
pop
out
mov
outsb
cmp
add
dec
pop
add
mov
leave
cs
sub
add
push
repnz
add
push
inc
adc
fistpll
jns
gs
xor
ret
cld
rolb
add
mov
mov
and
xchg
add
dec
jns
add
rcll
cmp
or
pushf
addl
add
sbb
push
andb
add
lods
mov
add
call
cltd
add
mov
push
addr16
pop
add
testb
mov
dec
add
leave
fwait
call
or
fs
cli
or
add
cld
xchg
aaa
mov
add
mov
ret
xor
cmovle
insb
adc
mov
ss
mov
mov
in
add
sbbb
and
jno
lods
add
adc
and
jecxz
sti
or
add
add
fnstcw
lahf
push
jge
lret
push
add
cmpsl
and
jecxz
add
test
lock
lret
push
jns
cmp
xorb
xchg
mov
outsl
add
idivb
addb
adc
pop
inc
es
jb
sbb
add
sbb
sbbl
push
mov
jno
add
xlat
out
aad
mov
adc
inc
mov
mov
std
add
dec
xor
cltd
mov
pop
neg
fxch
xchg
sarb
jg
cmpb
lcall
insb
rcrb
xchg
add
fsubrs
mov
test
mov
divl
prefetcht1
jns
add
mov
loopne
cwtl
xor
jb
add
test
sbb
dec
add
filds
out
aas
das
push
or
cltd
enter
dec
scas
add
pop
xor
movsl
sub
add
aam
sub
adc
push
enter
filds
ret
cwtl
fstl
add
loopne
cmpsl
push
jne
adc
and
sarb
push
cld
inc
dec
add
lahf
fnstcw
pop
cmp
or
jne
rorb
lods
out
loop
add
mov
pop
add
sub
icebp
add
dec
das
fsubl
add
jle
mov
sti
jo
push
mov
test
add
adc
mov
push
lock
in
dec
inc
inc
ret
push
in
or
fildl
sbb
inc
ja
push
sahf
bound
dec
xchg
add
movsb
jno
loop
cmp
add
lock
clc
call
and
jbe
add
pop
dec
and
add
push
aad
dec
jecxz
add
cwtl
ss
add
xor
rclb
outsl
push
add
pop
ficoml
arpl
dec
mov
jecxz
dec
bound
test
imul
xor
repnz
cmp
add
lock
in
out
adc
idivl
fists
jecxz
cmp
adc
xchg
mov
adcl
clc
cmp
addb
hlt
sbb
add
cbtw
mov
jb
cmp
scas
xchg
cld
adcb
or
mov
pop
in
mov
fmulp
push
add
cmpsl
stc
mov
fs
xor
jmp
push
add
fimuls
mov
push
add
pop
stos
test
or
test
or
cld
pop
out
add
inc
test
fcomp
shl
sbb
aas
ja
xor
incl
add
pop
mov
adc
pusha
mov
mov
imul
add
outsb
icebp
xor
mov
add
sub
add
pop
cmp
lds
or
cvtdq2ps
into
xor
jmp
sub
cwtl
movsl
ljmp
repz
nop
push
or
jbe
pop
add
or
adc
test
and
insb
scas
fldenv
cmpsl
das
icebp
pusha
pop
jp
mov
inc
cltd
orb
mov
pop
dec
adc
xorl
push
mov
dec
add
or
jo
scas
mov
inc
aad
cwtl
sbb
mov
push
cmp
push
add
enter
pop
or
icebp
sahf
jns
pusha
cmp
out
gs
lahf
pop
lock
rcrb
movsb
sub
jle
hlt
fcompl
mov
add
imul
adc
leave
add
das
sub
inc
and
fcoms
xchg
add
jecxz
and
xor
and
xchg
pop
loopne
js
push
add
jns
dec
pop
inc
in
fisubrs
cmp
push
mov
repnz
add
in
jo
mov
pop
sbb
inc
sbb
push
je
adc
sbb
dec
mov
and
mov
add
test
and
mov
shll
xor
xor
testb
cmp
pop
cmp
insl
jge
pop
add
movl
stc
fwait
xchg
int
and
test
pop
xchg
add
jnp
push
add
pop
clc
add
sbb
jno
xor
adcl
cli
dec
add
out
repnz
mov
enter
mov
pop
test
roll
roll
fstpl
sub
mov
lods
cvtdq2ps
or
lock
pop
pusha
in
sbb
repnz
jb
hlt
cwtl
sub
pushf
add
lock
movsl
or
mov
rcl
hlt
push
jmp
faddl
mov
adcb
test
fnstenv
add
sbb
add
roll
shrl
adc
add
jle
scas
rolb
insb
sbb
data16
mov
or
jo
outsb
cmp
dec
dec
add
cmp
lret
in
rclb
pop
call
add
shrb
movsl
fstps
xor
lea
gs
rorl
jg
and
push
daa
rolb
sub
mov
test
out
or
out
or
add
mov
mov
cwtl
aam
inc
add
lcall
mov
ret
add
cmp
adcb
stos
sbb
mov
and
jge
test
icebp
and
js
loope
pop
adc
shll
jno
leave
jne
shrb
cltd
test
sbb
ret
mov
push
ret
xadd
sub
xchg
adc
add
mov
sbb
pusha
adc
mov
mov
mov
popa
das
cwtl
sbbb
xor
jl
inc
aas
daa
xchg
adcb
add
shll
jb
lea
test
inc
sub
cmpsb
sbb
pusha
mov
mov
xor
lcall
lret
fldcw
jg
rolb
stos
stc
in
js
dec
jo
add
mov
mov
and
pop
cmp
add
repz
cld
mov
add
pop
popa
pop
add
shlb
fcompl
pop
jl
add
dec
fimull
jle
mov
mov
aas
push
out
cmp
mov
popf
inc
xchg
mov
add
insb
xor
into
push
or
iret
add
in
imul
sub
cmpsb
insb
or
adc
int3
roll
les
inc
mov
sbb
nop
stos
jae
sti
sbb
and
imul
sub
daa
cmp
lahf
pop
insl
xchg
mov
inc
pop
cmp
int
scas
addr16
inc
add
xchg
or
rolb
add
mov
jmp
add
in
movsl
sbbl
addr16
mov
jo
mov
cwtl
jmp
sub
mov
add
pop
pop
xchg
sbb
sub
cmp
outsb
pop
add
lds
add
out
cmp
sti
int
push
nop
mov
shlb
mov
or
jno
ds
mov
jge
jne
or
jno
ss
adc
push
aas
cmp
dec
ret
sub
jae
test
mov
shrd
push
in
sahf
add
xchg
jnp
call
sub
dec
cmp
mov
popf
add
mov
add
inc
loop
or
addr16
dec
push
inc
add
scas
fwait
enter
add
ret
aas
xchg
mov
dec
push
jb
cmovg
stos
add
jl
push
pop
sub
inc
add
inc
push
das
sbb
sub
add
out
pop
mov
das
inc
mov
dec
pop
xorl
adc
fsubs
std
pop
xor
ret
notl
sub
jmp
rcrb
jo
add
test
adc
jmp
jg
in
in
pusha
and
or
cmp
test
add
frstors
mov
xchg
ds
add
sub
ficoms
push
rolb
das
pop
pop
adc
ja
jle
pop
inc
add
stc
jmp
in
adc
call
xchg
or
jne
nop
dec
add
mov
call
sbb
inc
pop
ret
shr
mov
push
fcoml
repnz
gs
add
push
push
dec
mov
cld
int3
orl
add
mov
dec
xchg
xor
and
testb
inc
jne
xorb
xor
jo
jp
mul
cmp
cmpsl
cmp
sbb
pop
test
add
adc
out
inc
cwtl
pop
adc
clc
push
xchg
cmp
sbb
sub
fcomps
mov
push
pop
ficompl
adc
dec
jecxz
xchg
or
in
mov
sbb
cmp
js
es
pushf
jns
and
popf
xor
push
jae
sub
cmp
insb
add
js
std
or
add
jl
adc
or
add
imulb
add
shr
mov
pop
aam
sbb
or
jle
popf
add
loopne
cmp
xor
mov
xchg
das
imul
jp
pop
cmpsl
mov
std
inc
mov
sbb
mov
inc
leave
fcoms
or
imul
and
inc
or
pop
dec
add
xor
pop
int3
adc
pop
lds
cltd
jle
out
or
add
ret
push
and
add
arpl
fnsave
inc
dec
and
cmp
cmp
xchg
sub
mov
push
dec
lahf
xor
not
pop
inc
pop
pop
rolb
shll
adcb
jge
mov
add
push
mov
imul
jnp
dec
nopl
push
xlat
or
lea
sub
lahf
adc
inc
inc
or
add
subl
xchg
fwait
or
push
je
fsubr
test
push
sub
add
lret
sbb
add
hlt
xchg
jo
xchg
or
repnz
sti
adcb
lods
add
mov
jns
jecxz
repz
and
aam
call
out
shlb
out
cmp
mov
movsb
shll
pop
add
insb
push
out
sbb
push
pop
mov
mov
push
fsub
shlb
out
repz
mul
adc
clc
int
push
lock
test
decl
pusha
sbb
repz
pop
test
insb
mov
push
push
rorl
mov
push
lret
adc
popf
add
adc
add
call
mov
leave
icebp
gs
dec
inc
mov
in
add
int
sahf
mov
int3
sub
push
stc
mov
add
mov
add
add
xchg
jbe
fiadds
mov
enter
push
stos
add
lods
pop
xor
outsl
add
cmp
dec
add
inc
add
xor
loope
jg
add
mov
sbb
add
xor
jnp,pn
cmp
xor
sbbb
repnz
jb
xor
dec
push
pushf
add
out
shld
mov
mov
jle
pop
mov
dec
jbe
cs
sub
aam
arpl
call
cli
and
jnp
jb
mov
dec
add
ret
mov
push
sub
sbb
xor
popa
xchg
addb
int3
push
fisttpll
push
or
mov
push
add
test
or
test
fsubs
inc
std
sbb
iret
or
aam
mov
mov
arpl
clc
std
jle
mov
add
push
cmp
test
imul
xchg
ds
xchg
mov
add
int
int3
mov
sbb
aaa
test
popa
leave
aam
cmp
and
add
cmp
mov
jne
add
mov
mov
jae
dec
pop
sbb
and
aas
or
ds
and
enter
les
pop
test
lods
fmuls
cmpb
cmp
add
or
mov
add
mov
cmp
sub
pop
pop
js
push
add
out
into
popf
push
add
cli
aad
jle
pop
inc
in
data16
lret
push
cs
and
add
add
xchg
pop
mov
push
and
dec
scas
dec
aaa
jne
movb
jecxz
repz
clc
inc
add
out
jl
add
loop
cwtl
or
add
inc
cltd
add
or
inc
lods
inc
add
jl
sbb
aad
add
cmp
loope
jae
das
pop
cld
jbe
cs
popa
mov
psllw
ud1
jge
lret
addb
popa
fmuls
jb
mov
push
popf
enter
mov
xor
push
scas
or
cmp
js
popl
les
add
test
adcb
out
mov
loopne
jecxz
int
add
push
and
xchg
or
jge
fnstenv
out
js
add
ss
pop
addr16
sbb
push
cmp
add
dec
test
shrb
test
jg
xchg
leave
movsb
jo
int3
fdivl
lock
mov
sbb
mov
mov
or
mov
jb
mov
jbe
rcl
ja
add
mov
add
pop
ret
mov
or
add
cld
hlt
or
ret
pop
lods
and
sbb
shll
or
popa
push
scas
cmpsb
mov
insb
and
xlat
mov
gs
dec
and
jb
ds
add
insb
and
pop
rcrl
pushf
xorb
adc
in
mov
push
lret
es
mov
push
ret
idivb
es
shlb
scas
lock
pop
popf
pop
enter
jle
and
insl
push
xor
mull
adcb
aas
push
mov
cmp
fwait
outsl
rcll
push
out
pop
add
and
movsl
add
mov
push
xchg
mov
mov
add
or
and
sbb
or
sbbb
jne
dec
ucomiss
inc
or
mov
lods
push
cmc
test
push
jmp
subb
adc
jae
aas
add
add
adc
add
inc
dec
xchg
sbb
add
jecxz
sub
inc
out
fiadds
xor
not
pop
xchg
loopne
jg
add
adc
xchg
mov
jmp
ret
add
pop
out
mov
mov
mov
sbb
popa
lods
or
rol
add
aad
push
ljmp
movsb
jmp
imul
roll
nop
lret
fstps
jp
inc
mov
pop
mov
add
mov
loop,pn
sti
cmp
add
fistpl
mov
jg
iret
add
cmpsl
lods
sbb
imull
aad
pop
add
push
or
and
and
addr16
pop
sub
add
jg
add
adc
xor
jb
cs
lea
sbb
mov
mov
sbb
cmp
push
xchg
add
adc
hlt
iret
push
roll
cmp
shlb
sub
movsl
xchg
mov
aaa
cmpsl
shll
sbb
add
sub
sbb
mov
mov
es
insl
mov
mov
cwtl
shlb
jns
mov
jge
mov
subb
hlt
jmp
sti
imul
add
mov
mov
rorb
xchg
fisttpll
jl
pop
inc
sti
into
adc
add
xchg
inc
shl
mov
dec
xchg
dec
add
cmp
iret
in
lods
mov
cmpl
mov
mov
push
inc
ljmp
xchg
lret
add
adc
das
das
idivl
int
jmp
and
pop
push
and
add
cmp
je
jle
dec
jno
xchg
sbb
out
sub
mov
or
mov
inc
fisubrs
cli
enter
lret
sub
push
jmp
sbb
ss
inc
add
pop
cmpsl
pop
add
sub
lods
stos
ljmp
sbb
push
add
add
lret
adc
fwait
dec
pop
lods
add
lods
mov
xchg
and
jl
push
mov
loop
or
add
aad
repz
inc
enter
fsubrl
lock
pusha
add
outsb
mov
jg
jne
inc
xlat
std
adc
movsb
arpl
cmpsb
shrb
fs
pop
and
mov
add
sbb
add
adc
dec
add
jle
hlt
mov
adcb
mov
adc
insb
xchg
jo
xchg
pushf
sar
xchg
call
add
lahf
mov
mov
ret
jo
rorb
leave
add
inc
fisttpll
jae
dec
adc
adc
lret
and
stos
or
xlat
fnstenv
mov
add
bswap
mov
lretw
faddl
lock
rolb
icebp
cmp
inc
mov
js
test
inc
jae
xchg
pop
data16
mov
repnz
cmp
jle
mov
jge
inc
jo
cli
add
into
rcr
dec
clc
xchg
push
hlt
or
shll
out
pop
in
adc
sbb
int
ficoms
adc
jnp
adc
xchg
mov
lock
test
lea
fstpl
aad
pop
xor
jmp
adc
adc
add
add
xor
and
pop
xor
xor
movsb
clc
add
call
pop
jp
cmp
movsb
and
jb
and
aas
clc
sbb
dec
loop
xchg
adcl
push
pop
mov
in
out
jmp
mov
or
arpl
push
add
mov
stos
sub
add
xor
dec
shll
test
cmp
out
subb
pop
ret
clc
daa
mov
jp
jl
lock
lret
loopne
jne
jno
into
or
fwait
inc
jnp
dec
or
jecxz,pt
xor
add
pop
outsl
scas
fsts
pop
adc
adc
jnp
imul
lock
sarl
add
imul
or
dec
fisttpll
lea
roll
push
inc
sub
fld1
add
mov
pop
mov
add
cmpsl
jno
mov
mov
jns
cmp
jmp
das
jae
add
in
pop
push
add
inc
imul
mov
add
jg
add
fildl
push
mov
add
mov
lret
mov
add
lock
add
adc
sbbb
xchg
in
sub
cltd
ds
notl
jl
add
mov
leave
xlat
pop
mov
add
popa
mov
xchg
lds
add
ja
inc
mov
aam
push
and
jp
xabort
popa
sbb
cmp
adc
lods
neg
pop
clc
pop
inc
add
mov
pushf
or
movsb
lahf
in
dec
pusha
shlb
sbb
aas
mov
mov
mov
xor
pop
outsb
movsl
jecxz
xchg
sub
fcoml
cmp
in
mov
sub
cli
sahf
pop
icebp
add
repnz
add
dec
add
out
cmp
push
dec
test
imul
repz
subb
sbb
sub
inc
and
dec
pop
adc
fnstcw
movsl
int
enter
fs
imul
sub
xor
xor
adc
clc
shll
push
shlb
test
jle
jo
aam
cmp
add
dec
mov
rcrl
add
sub
add
iret
sub
test
pop
xchg
sub
andl
call
out
cwtl
roll
inc
sub
add
in
add
push
aam
stos
fwait
pusha
add
pop
add
enter
and
in
test
outsb
mov
dec
inc
icebp
dec
dec
mov
ljmp
mov
mov
add
inc
mov
call
call
cli
push
mov
mov
dec
repz
and
push
in
or
push
std
mov
cmp
jle
mov
push
lahf
popf
pushf
cltd
test
or
shll
jl
out
add
sbb
push
dec
mov
fsubs
xor
add
add
fwait
jae
jnp
int
notb
les
jg
dec
sbb
mov
bound
sbb
push
int3
or
adc
add
ret
xor
dec
testb
fadds
fcmovnbe
mov
incl
iret
in
xlat
xorl
push
pop
add
fsubrs
cmp
movsb
les
flds
mov
cmpsb
test
pop
daa
cmp
ret
xor
add
js
pop
pop
push
add
sbb
add
addr16
jnp
sbb
orb
adc
and
cmp
pusha
mov
adc
add
pusha
shll
add
xor
arpl
cmp
mov
pusha
mov
iret
add
lds
jne
dec
int3
outsl
scas
add
pushl
aas
add
int3
test
jne
mov
xchg
push
imul
mov
lcall
mov
test
scas
add
xor
xchg
in
adc
push
or
fwait
jp
cwtl
icebp
jo
ret
mov
lahf
hlt
xchg
cs
cwtl
mov
dec
mov
inc
add
test
clc
inc
xchg
xor
dec
inc
add
xchg
out
sbb
add
mov
mov
xchg
loop
sbb
sti
outsb
andl
orb
out
cmp
add
mov
nop
mov
and
ret
xor
cmpsb
es
lods
or
add
push
out
shll
jns
xchg
cmpsb
adc
fdivs
push
xchg
and
call
add
mov
add
inc
inc
and
lods
sbb
xor
sbb
or
add
add
push
mov
adc
push
arpl
xchg
maskmovq
imull
add
jle
add
jge
mov
je
add
lcallw
lock
dec
add
sub
push
je
mov
out
mov
mov
add
jmp
dec
mov
ja
out
call
aam
fs
fcmovb
push
mov
cmp
push
outsb
je
jl
rorl
in
cli
fidivrl
xchg
fwait
add
test
xor
cmp
add
mov
negl
pop
mov
arpl
xor
push
sahf
icebp
add
mov
call
sub
cmp
cld
mov
xorl
dec
jecxz
addr16
cmp
into
push
jae
pop
ret
cmp
push
jbe
jno
mov
pusha
loopne
or
sahf
popa
add
jge
loop
inc
repnz
xchg
adc
mov
cmp
daa
movsb
adc
mov
out
cs
add
xchg
lret
sbb
dec
jl
adc
loope
and
ret
hlt
add
shl
pop
adc
mov
std
and
cmpsl
push
leave
dec
fiaddl
push
jle
mov
mov
ds
fwait
push
push
pop
rorb
in
movsb
scas
cwtl
inc
lret
lea
add
xchg
pop
rorb
pop
lahf
cwtl
add
sub
add
mov
in
mov
adc
pop
pop
add
stos
mov
sub
in
cmpsl
aam
jg
in
add
insl
pusha
clc
popa
mov
push
fsubrs
adcb
push
cli
lods
xor
outsb
gs
xor
xchg
test
out
ja
lods
pop
into
mov
add
in
dec
mov
push
addb
ret
js
mov
sub
jg
pop
int3
loop
jle
leave
pop
pop
mov
pop
bound
cmpsb
or
lock
add
pop
nop
inc
mov
mov
adc
sbb
in
inc
rcl
push
push
adc
repnz
pusha
out
scas
shrb
push
in
sbb
mov
rcrb
pusha
mov
call
shrl
icebp
jbe
or
fnsave
jmp
pop
jne
pusha
rolb
push
xchg
rol
push
lahf
add
fdivs
cmpsb
outsb
push
xor
repz
dec
scas
pusha
std
stc
add
mov
fstps
add
pop
sbb
mov
mov
jl
add
pop
or
jo
and
dec
outsl
add
mov
mov
popa
in
std
bound
mov
or
jno
inc
add
repnz
cld
mov
add
sbb
femms
push
pusha
lea
mov
add
aad
jnp
hlt
pop
sahf
and
es
push
test
inc
les
lods
add
inc
jno
inc
add
add
test
ror
and
add
xchg
ret
jle
add
dec
cmp
sub
add
imul
add
sub
mov
inc
inc
and
rclb
inc
int3
sub
insl
xchg
test
or
out
mov
rorl
add
cmp
test
sbb
sbb
sbb
pshufw
stos
cs
mov
or
add
cmp
cld
add
sub
add
cwtl
mov
pusha
jg
add
test
xchg
vmread
ds
sbb
in
mov
push
xor
and
testl
nop
xor
inc
scas
push
mov
push
rorb
out
pushf
popf
pop
mov
lods
cmp
roll
xchg
ret
mov
pusha
sub
ja
dec
or
inc
sbb
mov
shlb
dec
add
loopne
xchg
sub
movsl
sub
rorb
pop
xor
adc
or
mov
and
ss
pop
xchg
mov
mov
popa
into
add
adc
lret
in
push
jno
push
push
js
fiaddl
inc
dec
insb
cld
xchg
and
fiadds
imul
push
push
sub
xor
mov
fmull
inc
dec
inc
add
pop
insb
cmp
pop
mov
sub
add
sbb
add
popl
add
stos
add
push
shll
mov
pand
mov
xor
inc
cmp
cmpsb
xchg
add
ret
sub
sub
loopne
lods
lods
inc
jle
inc
aad
mov
add
dec
pop
xor
rcrl
xor
xor
sbb
inc
pop
arpl
add
pop
out
es
add
mov
add
fwait
enter
sbb
ljmp
jg
xchg
add
push
push
mov
fstpl
roll
add
sub
fsubrl
stc
inc
mov
add
adcb
jge
xor
pop
xchg
adcb
outsl
cmc
shl
jmp
in
mov
jae
roll
mov
push
repnz
and
scas
inc
jno
add
and
mov
mov
add
sti
push
lods
ret
loopne
loop
mov
inc
dec
fadds
mov
mov
enter
add
imul
cmpsl
ds
add
fldt
xchg
jge
and
rolb
and
andb
loopne
push
dec
push
xor
lods
std
lock
jp
cmp
fmull
xchg
inc
loope
andb
dec
pop
mov
lret
mov
or
add
hlt
mov
cld
xchg
inc
jns
add
repz
das
sbb
inc
cmp
pop
pop
adc
lahf
faddl
pop
jge
push
pop
add
in
mov
in
cmp
outsb
and
xor
sbb
movsb
gs
add
ret
xchg
out
fwait
shrl
pop
mov
cwtl
xor
mov
add
pop
arpl
mov
cmp
in
add
mov
call
sub
add
repz
xchg
or
lcall
inc
add
scas
add
xchg
add
sub
scas
add
lods
out
rcl
jle
data16
movsl
sbb
push
and
aad
movl
and
lahf
pop
add
xchg
jns
mov
cmp
les
add
xor
or
ljmp
and
jne
call
test
out
scas
adc
push
clc
pop
jp
jno
mov
jae
shl
fildl
mov
call
adc
sbb
jnp
add
add
sahf
jp
add
add
xchg
psrld
pop
int3
mov
bound
setg
pusha
dec
cs
cld
add
xchg
mov
xchg
add
dec
dec
rolb
stos
lock
mov
arpl
mov
add
rorl
add
packsswb
aas
out
pop
jp
fldl
pop
cmp
repnz
ds
sub
test
cmp
mov
decl
ss
add
adc
outsb
mov
cli
add
and
xchg
sbb
lret
hlt
xchg
xor
mov
out
aam
adc
and
iret
ljmp
aad
pop
jb
pusha
sub
dec
out
jnp
add
pop
push
out
mov
or
adc
inc
divb
rcrl
in
add
or
dec
push
ret
sub
imul
pop
add
xchg
inc
mov
outsl
dec
pushf
pop
or
std
cld
pop
rcrb
into
add
orb
imul
and
push
pop
cltd
cmp
jle
jmp
mov
loope
and
data16
outsl
in
adc
xor
pop
adc
in
mov
pop
aam
js
divl
mov
test
call
into
das
add
repnz
push
adc
push
jecxz
popf
pop
mov
xchg
add
in
subb
repz
mov
orl
jl
dec
jns
xchg
adc
add
lea
insl
pusha
adc
pause
mov
add
iret
xor
push
in
xor
jg
add
outsb
push
inc
pusha
push
insb
add
cli
mov
pushf
inc
out
stos
cs
jno
cmp
add
repnz
adc
addr16
add
xchg
ljmp
insb
out
pusha
js
xor
scas
add
fdivrl
call
inc
cmp
mov
push
mov
jbe
add
nop
xor
dec
and
popa
inc
lods
xchg
xor
cmp
xchg
add
lret
inc
adc
lock
test
add
and
out
roll
out
cmc
sub
push
movl
pushf
outsl
loopne
aam
pavgb
jb
stc
mov
andb
xor
roll
mov
dec
lock
int
addr16
cli
vpcmpeqw
mov
add
adc
jp
outsl
sar
js
push
dec
sbbb
push
jns
mov
cwtl
mov
mov
add
inc
bound
pusha
and
js
out
mov
push
inc
pop
je
scas
cmp
mov
jle
jg
mov
add
scas
cmpsb
pop
or
test
inc
inc
cmpl
jno
xchg
sub
in
xor
mov
inc
pop
sahf
push
sub
inc
in
es
xor
rcll
es
test
test
enter
sub
mov
inc
frstor
inc
js
or
sub
mov
inc
mov
mov
jns
inc
mov
incl
sub
xor
and
into
pop
or
insb
sti
xchg
pop
push
lds
and
mov
pop
mov
add
ret
sbb
add
sarl
add
decb
adc
ret
icebp
add
add
rolb
cmp
cmc
jp
into
pop
inc
aas
loopne
icebp
ds
sbb
cs
mov
orb
int3
jnp
add
mov
lahf
cmpsl
fcmovb
dec
sbb
add
adcl
jg
into
dec
dec
mov
cmp
cltd
jmp
loop
push
xchg
fdivs
and
int3
cmp
push
push
push
nop
enter
insb
mov
add
rol
loop
mov
lcall
movsl
pop
mov
xor
loopne
and
sbb
add
mov
xchg
inc
hlt
xlat
fucomp
popa
call
add
or
dec
inc
or
push
add
mov
push
pusha
in
pop
cmp
ss
sti
and
loop
adc
outsb
sbb
or
out
mov
add
jbe
cmp
ja
mov
dec
push
xchg
add
pusha
pop
mov
sbb
jge
sub
dec
repz
xor
jmp
into
add
inc
mov
pop
repz
mov
adc
sbb
add
inc
aad
icebp
lock
mov
xor
add
movsb
mov
inc
cmp
add
dec
add
test
movsl
mov
sub
and
push
pop
mov
jmp
dec
scas
jnp
test
subb
xlat
ja
shlb
stos
fisubrl
pop
iret
push
cmp
or
add
insb
loopne
mov
add
movsl
xchg
push
aas
add
ret
into
das
pop
add
jb
ja
out
lret
fs
mov
cmpsb
add
mov
enter
add
sub
inc
lods
cmp
jl
out
mov
shlb
nop
cmc
adc
outsb
orb
popa
add
xchg
je
divb
jecxz
and
pop
arpl
add
imul
add
out
scas
add
dec
or
mov
push
pop
rcll
shl
add
icebp
xchg
cs
xorl
movsb
sbb
jl
in
inc
or
fisubs
imul
iret
xchg
add
xchg
xchg
push
sbb
pop
push
fisubrl
test
icebp
cli
cmp
pushf
add
enter
jno
andb
cmpsb
movsl
gs
in
xor
aas
jbe
push
rcrb
pusha
push
add
subb
adc
pop
push
pop
jmp
lds
or
ja
test
add
mov
scas
jl
or
les
out
pop
add
mov
inc
cmp
inc
jo
xchg
sub
add
aad
loope
rcrb
lcall
in
je
add
cmp
into
xor
xor
rolb
add
test
push
mov
cmp
shl
scas
or
stos
add
cmpsb
mov
pop
iret
pop
stos
add
cmc
aad
add
push
cmp
adc
jne
stos
add
stc
outsb
add
enter
scas
fadds
popa
fwait
sbb
cmp
mov
subl
and
jno
cmp
mov
mov
and
add
aad
jecxz
div
add
fsubs
dec
push
lds
add
stos
fwait
mov
fldl2t
or
sbb
ret
andl
push
loope
jge
inc
std
faddl
xchg
hlt
aaa
jno
add
cltd
lock
push
jmp
les
cmp
rolb
and
sbb
xlat
rolb
in
lods
mov
hlt
add
jbe
push
jle
add
pop
cmp
sbb
add
dec
pop
lret
out
add
or
sahf
dec
into
inc
pusha
int3
push
cmp
adc
outsl
push
loopne
mov
lock
xchg
jno
add
cs
adc
dec
loopne
or
cltd
sbb
mov
add
cwtl
mov
add
setg
into
shr
or
std
sbb
leave
es
popa
cmpsl
inc
aad
jl
loopne
add
jae
call
sbb
cli
ret
clc
sbb
fdivrl
xchg
mov
pop
out
lea
shll
leave
int3
add
mov
call
inc
pop
dec
leave
shrl
lock
jp
stc
cmp
push
cmp
mov
rcll
mov
inc
nop
inc
mov
and
loopne
push
inc
cmpsb
mov
subb
mov
sahf
dec
cs
xchg
sarl
clc
incl
jb
mov
or
dec
ss
and
add
subb
and
xchg
lods
clc
pushf
lea
repz
in
sbb
loop
cli
pop
gs
inc
pusha
sub
test
mov
cmp
or
jns
sub
imul
test
flds
push
mov
add
xor
adc
sti
paddb
imul
add
push
addr16
sar
int3
push
cmpsl
add
xchg
movb
xchg
dec
and
add
les
bound
jo
pusha
insb
jmp
xchg
in
sarb
inc
popa
inc
mov
mov
js
xchg
and
dec
inc
cmp
sub
add
xor
je
add
mov
push
cwtl
dec
out
aas
rcrb
addb
sub
rorl
fimuls
inc
inc
add
mov
mov
xchg
repnz
push
sbb
mov
testl
add
push
cltd
std
pop
jnp
mov
loope
mov
mov
mov
je
add
pop
repnz
adc
jo
adc
dec
clc
sub
sbb
xor
xor
sbb
jl
xchg
loopne
flds
jecxz
das
stos
scas
mov
sub
sbb
pusha
cmp
cmpsl
pop
mov
divb
adc
adc
pop
dec
sbb
add
lock
repz
into
inc
movsb
pop
adc
push
add
sub
add
xchg
mov
hlt
lahf
out
rorb
add
xor
mov
addb
add
mov
jo
mov
leave
ja
jae
push
and
pop
sub
ftst
rcrb
int
jne
in
mov
and
std
dec
aam
cmp
subl
cli
pop
jae
test
loope
test
add
fidivl
add
mov
pushf
aaa
and
add
jo
lods
inc
lock
add
and
mov
mov
add
scas
mov
dec
xchg
sbb
adc
jmp
leave
aad
inc
stos
xor
cmp
add
jb
jmp
mov
push
rorl
mov
cltd
sbb
jno
out
dec
pop
add
mov
cmp
jae
cld
shrb
or
pop
jecxz
add
fadd
inc
mov
push
jle
cmpsl
cli
add
mov
pop
imul
jbe
addl
fxch
dec
icebp
sti
andb
inc
add
inc
lret
out
adc
js
add
dec
xchg
pop
push
mov
jnp
clc
rcr
je
pusha
and
in
lods
fdivr
add
std
iret
test
cmp
lahf
icebp
bound
mov
scas
xchg
lea
sub
push
fcomp
jl
add
movsb
repz
test
pop
pop
ja
cmp
daa
jbe
ret
xchg
or
dec
test
aas
mov
or
addb
stc
dec
pushf
inc
jo
out
sbb
add
divb
or
or
and
stc
add
push
pushf
push
add
sti
shll
cmp
add
icebp
dec
push
pop
jmp
das
inc
hlt
lock
mov
mov
loop
add
pop
std
xlat
add
cli
rcrl
adc
jp
daa
test
pop
test
ljmp
test
add
inc
jb
add
and
xor
inc
cmc
pop
dec
nop
mov
test
fiadds
aam
add
leave
jnp
jmp
and
cli
idivb
push
sbb
pop
shlb
in
jg
xor
addb
mov
je
add
push
fcoml
jo
sbb
test
into
mul
lock
mov
sarl
push
cmp
lods
or
push
imul
mov
xor
inc
fwait
push
xlat
jl
pop
sbb
dec
jge
sub
fcomps
xchg
movnti
loopne
or
lock
pop
jle
andb
cmp
push
inc
mov
arpl
clc
popf
lods
mov
mov
sub
xchg
adc
lock
int
xor
in
rolb
fisubl
push
jno
and
add
loope
repz
xor
add
popf
adc
jmp
rolb
push
test
xchg
mov
stc
pop
jecxz
inc
outsb
sbb
and
add
repz
inc
ljmp
cmc
jb
xchg
mov
xor
add
test
add
inc
jge
cmp
mov
aam
dec
cld
je
or
dec
nop
addl
push
mov
test
sbb
in
ret
mov
mov
xchg
add
outsl
jmp
jle
push
fcmovne
outsb
pop
push
fidivs
jp
or
shll
call
xor
das
sub
rcrb
cmp
jle
add
push
punpcklbw
add
mov
add
lcall
test
in
mov
nop
lock
add
popa
jbe
in
enter
sbbl
pop
fstl
add
jle
and
inc
sbbl
jmp
push
xor
inc
rorl
lret
xchg
mov
add
sbb
push
pop
xchg
iret
mov
dec
cmp
push
push
dec
pop
xor
mov
jl
cwtl
or
xor
inc
cmp
push
pop
cli
lcall
iret
out
add
pop
cmpsl
add
aas
lret
sub
and
push
out
pop
pop
inc
sbb
pop
rorl
add
push
mov
cmpsb
cli
jns
adcb
call
sbb
rolb
cwtl
dec
js
or
pop
push
loopne
add
aaa
vprotb
fcoms
mov
mov
push
xchg
enter
adc
out
adc
add
aam
test
insl
mov
xchg
lods
loopne
in
lret
cmp
mov
jle
mov
sbb
jp
fst
sbbb
mov
aas
es
mov
sub
mov
test
jg
pop
xor
lock
popl
add
dec
dec
in
syscall
fidivrs
add
int
and
ljmp
and
dec
cmpl
int
cmc
adc
mov
bound
sub
pop
push
pop
jmp
shufps
add
or
lock
inc
dec
fmuls
mov
cmp
dec
shrb
sub
ja
adcl
mov
popl
std
cmp
add
sub
ss
lods
sub
into
xor
pop
push
lock
add
jbe
cwtl
hlt
xchg
les
test
mov
mov
inc
stc
jle
mov
add
pop
enter
mov
xchg
mov
push
xchg
jecxz
stc
divl
in
in
add
push
test
rolb
out
jo
dec
hlt
jg
mov
xchg
aas
sbbb
lds
je
js
cld
iret
add
outsb
imul
popf
xor
push
add
mov
and
pop
cli
hlt
inc
loopne
cmpsb
sub
adc
les
xchg
std
sub
dec
pop
add
adc
add
jbe
add
cwtl
dec
loop
movsb
pop
mov
lods
add
xchg
xchg
lcall
adc
rolb
add
movsb
cmc
fmulp
test
add
sub
gs
sub
and
shll
add
mov
pusha
lods
fcom
fldenv
sarb
push
arpl
and
jg
add
cmp
sub
xlat
pop
int3
xchg
out
pusha
jae
and
sahf
test
jl
add
xor
push
mov
add
mov
fdivrp
out
add
icebp
fnstenv
pop
add
int3
cli
cmp
in
push
or
enter
lcall
stos
add
push
mov
mov
xor
fisubrs
add
fcmovnb
shrb
in
fistps
and
add
dec
dec
ja
adc
sub
test
xlat
adc
fistl
xchg
flds
and
nop
cmp
sub
das
inc
add
stos
add
push
out
dec
jp
jb
mov
aam
sbb
cmp
popf
int
xor
xchg
sbbb
test
adc
add
scas
mov
xor
testb
test
nop
or
das
mov
sub
sbb
mov
sbb
xor
lcall
or
dec
or
add
pushf
jg
or
dec
inc
stos
add
cmpsl
mov
sub
sbbb
add
mov
ret
add
mov
cmp
inc
cmp
pop
aaa
insl
or
xlat
push
inc
push
lahf
ds
sbb
push
ret
int
sbb
jne
bound
mov
add
ret
mov
jb
enter
cmc
dec
add
xor
mov
jo
ds
or
push
xchg
pop
cmp
out
ret
jnp
lret
sbb
add
add
dec
add
bound
mov
mov
xchg
add
movsl
add
cmc
sbb
mov
sahf
inc
xchg
rcrb
movsl
dec
push
aas
and
or
pusha
aaa
mov
add
in
out
loopne
push
xchg
pop
sti
test
scas
sbb
arpl
push
push
add
or
rorb
adc
add
ds
out
dec
and
pop
sub
add
lret
and
nop
add
mov
push
das
int
add
and
or
xor
mov
daa
loopne
iret
add
es
sti
add
out
pop
pop
cmp
icebp
cmp
mov
xor
mov
cli
pop
pop
mov
xchg
in
sub
and
push
mov
jmp
out
pop
sbb
int
and
adc
push
rcrb
add
daa
mov
add
cmp
mov
pop
add
in
fiaddl
cld
mov
jg
cmp
mov
push
dec
mov
call
jb
add
negl
or
mov
pop
or
add
and
xchg
bound
lods
add
cwtl
addr16
add
scas
ds
push
xchg
sbb
xchg
jle
add
into
addb
add
mov
and
lret
test
adc
cmp
hlt
xor
movsl
pushf
dec
add
lods
add
sbb
leave
mull
hlt
xor
push
andb
fistpll
cmp
lret
xchg
nop
mov
pop
fnstcw
lret
add
mov
add
adc
push
adc
pusha
jbe
add
cmpsl
mov
sbb
mov
orl
add
loopne
mov
push
or
fiaddl
mov
xor
jo
or
gs
add
cmc
ljmp
push
sahf
push
xor
cmp
xchg
es
lea
push
adc
jnp
leave
fstps
add
pop
das
int3
lods
cmp
add
push
add
add
push
add
pop
adc
or
cmp
mov
loope
sub
jle
mov
mov
or
fsubrl
mov
stos
push
pop
lods
call
outsl
xchg
jb
jg
mov
loop
add
clc
fstl
push
pop
mov
and
jns
lcall
add
stos
add
xchg
jle
add
dec
mov
outsb
je
cwtl
out
jge
stos
rolb
push
xrelease
mov
mov
jmp
ficompl
or
clc
aas
add
call
add
mov
iret
icebp
sub
out
lods
mov
pop
int
xchg
fdivrs
or
dec
cmpsl
adc
bound
dec
mov
add
mov
mov
rorb
and
xor
outsb
gs
add
pop
in
es
mov
icebp
sqrtps
inc
iret
nop
xor
xor
adc
mov
cltd
aad
outsl
sub
jnp
divl
mov
ret
inc
movsl
mov
test
sbb
hlt
add
jno
insb
sbb
std
jecxz
decl
mov
sbb
sub
call
dec
mov
roll
and
in
iret
lods
enter
cmpsl
add
pop
insl
cmpsl
test
adc
push
fdivs
inc
in
lahf
mov
push
std
pop
adc
sarl
pop
mov
sub
loop
shrb
push
or
pop
fistps
jae
loopne
out
add
push
ds
cmpl
xor
add
cmc
and
outsl
aam
adc
not
gs
test
xchg
inc
scas
add
push
add
sbb
insb
in
pushf
push
push
cmp
imul
orb
hlt
pop
add
adc
dec
add
loopne
les
cmp
mov
inc
mov
or
add
loope
movsb
lea
mov
ljmp
lret
fs
fsubs
ficoml
or
loopne
pop
sbbl
jecxz
out
push
icebp
xchg
mov
add
outsb
popa
fcomi
cltd
add
push
mov
add
cli
ljmp
add
fildl
pop
xchg
mov
and
rcrb
sub
leave
xor
xorl
flds
arpl
sahf
movsl
add
xchg
inc
fsubr
lret
sbb
inc
adc
adc
cmp
in
xchg
faddl
mov
ret
arpl
push
and
shll
mov
daa
add
inc
or
jb
lock
push
sbb
add
outsl
daa
fs
call
sbb
add
fnstsw
mov
dec
cmp
inc
add
add
jmp
fldcw
mov
inc
fbstp
clc
ret
add
int3
xchg
adc
cltd
and
js
mov
dec
inc
mov
call
popf
mov
cltd
jge
add
push
fsubl
adc
inc
pop
shlb
jecxz
inc
xchg
add
adc
int3
sub
daa
mov
inc
add
inc
xor
add
push
andb
xchg
pusha
roll
lahf
cmp
in
push
fsubr
add
jecxz
aaa
mov
pop
mov
mov
pop
sbb
jns
adc
adc
sbb
push
xlat
add
fwait
adc
cld
xchg
or
jno
ja
add
or
inc
push
je
aas
or
xchg
in
loope
imul
fiaddl
pusha
add
fnstsw
dec
std
loopne
sub
add
or
testl
adc
icebp
and
adc
lcall
cmp
loope
jg
fistps
cmp
mov
outsl
inc
jnp
sbb
in
inc
les
enter
fcomps
add
lock
ret
mov
pop
or
sbb
je
dec
out
movsb
pop
lds
test
insb
add
push
mov
push
and
mov
es
lret
cmp
fs
shl
add
jecxz
cwtl
inc
scas
aam
sbb
push
movsl
popf
out
stc
mov
cli
hlt
jne
aaa
sub
add
xchg
add
gs
add
std
xor
rcr
aad
jl
fs
adc
mov
lds
jno
clc
mull
andb
sbb
xchg
xor
adc
add
jno
xor
add
sti
mov
or
pushf
lods
jmp
add
adc
xor
inc
stos
ljmp
incl
test
xor
icebp
sub
hlt
in
add
pop
cmpl
push
mov
es
jns
add
add
enter
movsl
loop
mov
sub
or
add
jg
adc
cli
jb
push
rorl
add
mov
xorb
add
pusha
add
pushf
pop
pop
js
std
movsb
clc
add
mov
and
mov
movsb
add
popa
xor
xor
aas
push
test
dec
stos
pop
aad
push
or
cmp
add
hlt
insl
xlat
test
dec
inc
add
mov
imul
fadd
movsb
clc
mov
add
xor
jae
sbb
call
sub
shl
nop
pusha
push
sub
lea
and
shl
es
add
cmp
mov
aad
in
add
ds
testl
aaa
push
dec
push
sub
cmp
mov
scas
adc
daa
repz
jecxz
add
add
xor
leave
popf
sbb
sbb
cltd
jnp
add
inc
sub
nop
rcrb
add
jmp
push
sbb
jge
jp
mov
add
sub
xchg
add
pop
subl
pusha
adc
and
or
fsubrp
insb
jp
add
icebp
add
aaa
das
add
je
gs
movsl
xor
sub
out
lock
xchg
pushf
mov
mov
aad
mov
add
mov
mov
lret
or
mov
mov
add
sbb
add
les
jno
shr
xor
jp
dec
inc
fcmovnu
mov
in
push
push
cmc
mov
push
in
pop
adc
mov
and
loop
mov
add
out
scas
inc
out
arpl
stos
lods
add
loopne
rorb
add
sbb
inc
movsb
lahf
ret
add
inc
push
movb
mul
add
and
in
add
cmp
jge
ds
jae
add
fwait
mov
outsl
inc
cmp
dec
stos
mov
and
jns
scas
and
inc
mov
es
xlat
insb
es
aas
hlt
enter
gs
and
add
sbb
and
mov
and
addl
aad
sub
sbb
push
mov
ljmp
mov
mov
das
dec
movsl
pop
mov
sbb
inc
mul
xchg
out
or
jl
cld
addl
push
mov
jmp
out
or
add
cmpb
push
out
push
push
pusha
jo
add
sub
sbb
mov
inc
jmp
ret
popa
arpl
sbb
cmp
fistps
in
xorl
sub
sbbl
mov
ljmp
mov
scas
or
mov
jno
push
adcl
or
icebp
les
add
fdivrl
adc
mov
add
dec
ret
inc
inc
es
sbb
insl
bound
test
sub
inc
lock
inc
adc
pop
jnp
test
xchg
test
iret
scas
add
add
fbstp
out
sub
sbb
pushf
test
jmp
in
xor
and
mov
add
out
lret
add
dec
cmc
dec
pop
xor
cmp
push
push
cwtl
mov
out
add
push
lods
mov
int
mov
add
scas
addr16
pop
stos
inc
mov
sahf
in
jge
sarb
rolb
push
jae
inc
pop
jno
sbb
sub
ja
and
stos
insb
add
xor
xchg
out
les
in
ret
call
outsb
sub
mov
mov
xor
add
jbe
jl
hlt
add
adc
add
mov
mov
ja
add
or
lea
and
ds
fs
movsb
push
clc
push
add
out
mov
scas
xor
pop
mov
rcr
mov
mov
or
sub
add
pop
mov
fld
adc
inc
std
cmp
data16
orb
fdivrs
add
mov
sbb
mov
cmp
pusha
pop
iret
xor
sbb
jne
jmp
add
daa
add
push
sarl
mov
sbb
xor
add
inc
testb
mov
sub
add
jbe
add
xchg
jmp
aam
add
negb
mov
jae
add
call
or
mov
daa
fcmovnu
movb
or
pop
cmc
fs
sub
aam
into
movsb
add
pop
sti
das
stos
sbb
add
mov
lcall
imul
lret
pop
mov
dec
sub
or
add
ds
les
xor
loopne
ljmp
push
shlb
adcb
mov
or
lods
ljmp
out
add
cmp
adc
add
lock
push
in
sbb
or
push
jmp
push
jns
insb
add
pop
cs
loopne
lcall
push
movsb
aaa
cwtl
xor
ss
add
fs
shlb
pusha
inc
pop
mov
ljmp
xchg
popf
popa
test
js
dec
add
dec
insl
ficoms
or
addl
mov
sbb
into
inc
scas
fstpl
and
mov
xchg
aaa
ficoms
mov
xor
pop
sub
sti
nop
sub
adc
mov
gs
int3
in
add
mov
or
xchg
xchg
insl
add
fsubl
dec
inc
aad
stos
mov
out
add
icebp
outsb
inc
add
es
add
lea
push
pop
or
adc
push
lods
sti
cwtl
push
jnp
or
test
movsl
xor
insb
push
nop
iret
add
pop
dec
lds
sub
add
xorb
testb
mov
js
nop
push
jmp
add
mov
pop
icebp
gs
push
dec
cmp
mulb
jo
rorb
out
fsubrp
add
roll
sub
lds
sbb
rcrb
inc
jp
pop
shll
movsb
add
shr
mov
pop
lahf
lods
clc
icebp
pop
and
orb
push
sbb
sti
push
ljmp
in
fsubrl
stos
pop
in
jp
jnp
adc
dec
cwtl
lret
sbb
and
push
iret
add
push
sbb
rcr
outsb
xor
inc
push
add
xchg
or
mov
cltd
mov
lods
mov
jo
xor
in
push
xchg
xchg
add
adc
pop
inc
dec
cwtl
dec
jl
or
inc
in
jno
push
add
cmp
jnp
loopne
fcom
mov
fstpl
add
stos
add
mov
adcl
es
cmp
and
jb
add
sahf
aaa
push
cmpsl
adc
movsb
add
cmp
jle
push
add
cmp
inc
lret
add
cmpsb
or
sbbl
dec
imul
adc
ficoml
add
ds
pop
outsl
movsl
xchg
xchg
sub
add
pop
cmp
fs
push
sub
negb
cmp
mov
or
sbbb
xchg
popa
mov
lock
mov
jno
cmp
lret
cs
pusha
testl
add
jp
mov
outsb
stos
jbe
pop
cli
test
std
mov
fidivrs
dec
mov
sub
jo
add
pop
outsb
and
into
sbb
das
add
add
mov
or
jl
pop
es
jae
xchg
pusha
insb
lock
xchg
cmp
and
mov
fwait
mov
cmpsl
and
daa
dec
pop
rorb
add
cltd
hlt
lahf
mov
mov
dec
add
cmc
or
test
jne
xor
or
cmpsb
das
pop
add
sbb
mov
test
pop
pminub
lahf
ja
imul
shl
add
and
aas
sub
push
pop
jmp
imul
in
sarl
pop
and
add
das
cmp
xchg
xor
ret
xor
fldt
pop
dec
enter
add
sahf
scas
lods
xchg
add
or
out
cmp
inc
lds
js
es
mov
add
pop
cmp
push
cmp
jns
adc
cltd
add
dec
jmp
adc
ds
fldlg2
pop
inc
mov
lcall
cmp
lret
push
mov
cltd
in
shlb
push
and
fisttps
mov
fwait
and
inc
push
push
jbe
imulb
add
daa
adc
mov
add
arpl
add
xor
js
dec
inc
add
cmpsl
out
imul
out
sub
fildll
scas
repz
adc
xor
sub
ficomps
xor
mov
cmpb
clc
cmp
fmuls
adc
xor
test
jb
and
jne
and
or
sbb
pop
punpckldq
sti
pop
jae
addb
rol
cmp
clc
ds
pop
pop
or
and
test
adc
ss
add
shlb
jns
jae
inc
movsl
inc
mov
arpl
add
aam
sub
pop
test
xlat
clc
leave
push
ljmp
mov
mov
or
or
push
inc
push
addb
mov
inc
add
and
inc
add
ja
sbb
dec
pop
pop
ficomps
and
sub
mov
nop
lds
int3
int3
push
cmp
add
movsl
mov
stc
hlt
rolb
es
xchg
jl
fadd
js
add
loopne
test
repnz
cmp
jo
add
loope
outsl
mov
shlb
loopne
add
ss
xchg
add
into
out
sub
test
or
or
cmp
in
shr
inc
es
jnp
add
out
pop
pop
pop
add
mov
mov
addl
push
dec
and
outsb
es
in
push
add
mov
or
and
pop
out
xchg
cmp
xor
call
pusha
test
ret
lahf
inc
dec
dec
mov
fiaddl
dec
add
inc
cmp
mov
add
out
loopne
ds
cld
scas
sbb
out
pop
js
add
ret
add
push
lock
and
imul
stos
scas
sbb
fwait
outsb
sbb
out
push
aam
add
pop
mov
push
jne
pop
add
sti
inc
lods
add
xchg
or
test
testl
push
pusha
xor
push
testb
pop
aas
xor
enter
adc
mov
into
cmp
loope
lock
ja
pop
jb
add
mov
push
sbb
pop
lea
push
movsb
stc
fwait
mov
sub
jp
cmpl
gs
sub
int
dec
icebp
xorl
add
mov
mov
pop
sahf
jecxz
or
xchg
into
ja
xor
inc
xor
xchg
add
loope
push
rcll
or
and
pop
ss
mov
in
push
icebp
test
lods
pop
jnp
jecxz
inc
arpl
popa
paddq
add
or
pop
faddl
pop
dec
pop
inc
or
sub
fsts
adc
aaa
add
insl
cltd
ljmp
fidivrl
aas
jns
imul
push
inc
adc
cmp
cwtl
add
push
mov
jl
or
add
cmpsb
sub
out
xor
mov
sbb
loope
cwtl
loopne
push
mov
call
mov
dec
sub
mov
xor
add
lahf
mov
ja
filds
add
sub
pop
int3
jge
xchg
jl
fdivrl
sbb
lcall
in
out
push
loop
add
inc
addb
roll
cs
dec
mov
scas
lds
inc
cmp
lods
mov
xor
scas
sub
iret
add
pop
faddl
dec
stc
hlt
jae
lar
out
pop
inc
aaa
adc
bound
scas
mov
je
movsl
pushf
and
mov
sbb
das
nop
mov
add
jnp
clc
sbb
movsb
sysenter
jne
neg
ds
sub
dec
or
loopne
mov
mov
sbb
out
dec
xor
adc
add
xchg
cltd
test
push
mov
adc
pop
pop
add
call
imul
dec
movsb
test
mov
xorl
sbb
jmp
inc
cs
and
call
imul
add
gs
pop
add
lods
loope
xchg
into
pop
add
out
mov
add
mov
add
add
inc
test
jbe
and
adcb
mov
test
adc
repnz
out
loope
enter
add
pushfw
stc
test
and
add
aam
add
out
test
cs
cltd
lret
mov
xchg
ret
add
mov
add
push
dec
repnz
lods
sub
sahf
mov
lahf
lods
xlat
enter
dec
ljmp
es
sub
and
mov
jmp
fsubrs
popa
cld
mov
add
or
int
scas
xor
cltd
and
xlat
stos
fnsave
lret
test
orl
dec
push
js
or
into
sbb
pop
shlb
pop
pushf
add
mov
xor
mov
cltd
sbb
xor
mov
push
cmpl
add
test
add
out
and
or
dec
add
adc
xchg
fadds
int3
jg
jb
mov
das
cmp
btr
out
sub
jecxz
lods
push
cwtl
enter
fs
push
adc
jge
dec
pop
pop
cmp
fnstsw
add
jbe
out
xchg
add
push
cmc
enter
xchg
sahf
mov
hlt
and
pop
sbb
enter
sub
lret
mov
movsl
loopne
add
data16
sahf
mov
fsts
add
or
dec
inc
mov
sub
pop
rolb
xor
sub
test
js
stc
and
nop
gs
sbb
idivb
pop
js
popw
arpl
mov
sub
mov
adc
mov
das
in
add
adc
mov
add
pop
rcl
rorb
testb
push
movb
add
lock
fdivs
out
adc
xor
dec
out
sbb
repz
fcomps
xchg
jne
xor
sbb
fdivl
sbb
push
push
clc
add
and
push
shlb
push
add
adc
clc
push
out
xchg
mov
mov
or
ret
es
xor
add
in
cmp
sbb
add
sub
inc
dec
sbb
mov
in
or
xor
jno
cmpsl
jecxz
add
ja
les
mov
mov
dec
xor
add
mov
add
pusha
pop
mov
nop
jp
or
mov
addb
add
mov
inc
or
stos
add
xor
pushf
and
push
sahf
xchg
rorl
xchg
int
test
sbb
in
repz
push
pop
add
and
lods
add
sbb
mov
mov
inc
sub
int3
adcl
lea
int3
insl
add
shll
cld
rclb
jle
rolb
add
and
enter
pop
sub
in
orl
push
add
aad
arpl
pusha
mov
or
insl
mov
test
pop
ja
mov
scas
pop
call
adc
bound
pusha
pop
jnp
lret
and
sbbl
adc
mov
sbb
mov
xchg
jns
lods
sahf
paddq
lret
push
test
sbb
lret
mov
xor
xchg
setbe
mov
stc
add
or
jecxz
mov
iret
mov
add
sbb
movsb
add
push
mov
inc
xchg
in
mov
jle
adc
add
push
add
sub
mov
lea
jae
pop
cmp
mov
dec
idiv
in
rcrb
insl
xchg
push
xor
fmull
sbb
aas
scas
mov
int
and
in
push
lgs
lcall
jnp
sbb
and
into
or
cmpsl
js
adc
cwtl
aaa
add
lods
mov
in
mov
fs
movsb
add
add
or
ret
mov
mov
leave
mov
push
add
jg
fimull
rclb
data16
or
pop
push
imul
dec
iret
ffreep
inc
mov
pop
push
lock
mov
sbb
shlb
pop
fldl
lods
pushf
out
cli
mov
cltd
add
mov
insl
sbb
dec
push
inc
and
cli
pop
or
push
xchg
lds
push
sbb
lods
fadds
inc
or
fwait
mov
gs
add
add
in
inc
rolb
and
test
and
jg
add
jl
mov
ret
clc
pop
pop
inc
xor
pusha
mov
mov
ja
jp
add
xlat
jbe
add
cli
repz
fcoml
pop
pop
movsl
bound
cmp
fadds
icebp
or
xorb
lret
add
pop
jmp
xchg
mov
incl
bound
fsubrs
and
sbb
add
xor
jnp
call
shrb
cld
in
sti
testl
loopne
ja
add
lcall
add
add
xchg
loope
pop
mov
add
xchg
push
add
add
mov
lahf
dec
adc
in
add
push
popa
into
mov
sarb
je
add
pop
cld
and
dec
insb
mov
lock
mov
push
mov
push
add
cwtl
sbb
push
add
out
lods
xchg
daa
data16
add
cmp
sbb
sti
pop
mov
fsub
dec
cwtl
in
add
mov
test
xchg
sbbb
add
insl
mov
unpcklps
jge
xor
loopne
fimuls
add
mov
xchg
test
or
out
out
das
add
sar
fldl
aam
movsb
mov
sbb
lret
pop
loop
inc
inc
gs
stos
ror
mov
arpl
sysret
repnz
clc
mov
sub
push
jae
sbb
out
ja
imul
js
add
shll
mov
enter
adc
pop
stos
addl
pop
push
pop
lret
cmp
add
rolb
dec
mov
insb
fadds
adc
fwait
lret
sarb
jg
add
push
jne
add
adc
push
inc
insl
jb
mov
mov
inc
sbbl
pushf
jmp
loope
or
xchg
iret
stos
rcr
enter
ret
sub
adc
cwtl
incb
sub
out
rcrb
fs
ljmp
pop
das
sub
inc
push
jns
fcmovbe
addr16
pop
cmpsb
lret
lods
push
ja
inc
je
and
cmp
ret
pop
mov
div
add
xor
mov
lret
test
cltd
enter
int
int3
nop
lock
ljmp
shr
jns
rol
sbb
or
xchg
and
adcb
pop
sbb
popf
or
add
call
test
leave
jge
fiaddl
adc
push
mov
inc
sub
mov
outsb
pop
pop
addl
inc
cmp
pop
add
out
xor
mov
xchg
sub
mov
lock
icebp
mov
jge
add
call
scas
add
cmp
mov
mov
mov
add
sbb
sub
dec
sbb
cmp
aam
shl
jmp
pop
mov
pop
cmpsl
out
push
in
insb
and
ret
adc
xor
push
dec
dec
daa
or
jo
in
cmc
mov
jg
add
int
cmpsl
in
pop
out
cmp
adc
imul
add
and
xchg
or
ja
xchg
cmp
ficompl
sub
test
jne
in
cli
xor
dec
add
orb
data16
iret
sti
aad
insb
cmp
xor
rcrl
loop
iret
and
adc
addb
sub
popf
mov
inc
movsl
push
xor
mov
stos
insb
lods
lcall
jne
dec
fimuls
add
nop
add
add
add
sbb
cmp
xchg
add
and
or
lock
out
push
jbe,pn
pop
es
jmp
aam
xchg
jg
add
jno
and
mov
add
pop
sbb
cmp
push
add
push
inc
aam
test
cmp
or
fwait
divb
gs
cmp
mov
xor
add
ljmp
sub
cmp
or
loopne
inc
cmp
scas
fidivl
inc
enter
mov
pusha
insb
xchg
inc
repnz
jnp
add
int3
dec
inc
dec
test
mov
push
popa
shrl
fsubrl
lods
test
cmp
xchg
or
and
repnz
inc
add
mov
mov
mov
nop
cmp
mov
cmpsl
fld1
divl
sti
adc
add
lock
add
sbb
movsb
mov
pop
sbbb
push
sbb
clc
les
or
dec
rcrb
add
mov
pop
loop
add
inc
fsubr
sbb
push
add
xchg
pop
imul
adc
nop
fwait
add
loopne
clc
test
add
xor
outsl
add
sarw
gs
mov
xor
das
lods
nop
cmpsl
lea
ds
mov
cmp
dec
sbb
addr16
add
xor
sub
sbb
cmp
mov
jae
fdivrs
cmpsl
add
lea
xchg
clc
xchg
adcb
mov
xor
mov
sub
and
or
xor
testb
and
and
pop
adc
adc
mov
add
cld
mov
outsb
cmpb
pop
jae
popf
les
add
das
test
add
fdivrl
pop
out
out
pop
pop
mull
add
fidivl
adc
adc
add
cmp
jnp
add
mov
cmp
add
test
dec
div
popf
jb
xchg
add
movsb
sar
xchg
pop
in
jnp
xor
xchg
testb
les
dec
call
mov
mov
and
adc
fcoml
and
cmpsb
add
or
push
dec
out
mov
add
pop
push
push
dec
jmp
push
pop
insl
dec
adc
push
mov
imul
inc
loopne
push
sbb
or
push
jl
adc
arpl
and
shlb
add
sbb
xorb
adc
adc
cmovo
jne
add
dec
inc
mov
stos
das
leave
rol
jp
jg
mov
cld
add
nop
scas
int
icebp
mov
sub
and
call
les
or
cmp
popa
add
fcmovb
jecxz
dec
imul
nop
jg
add
rclb
and
in
xchg
mov
fldl
mov
lods
dec
push
cmp
cwtl
mov
pusha
clc
sbb
popf
sub
cmc
stos
push
add
hlt
movsb
cmp
mov
inc
or
xorl
outsb
sbb
mov
in
mov
and
add
sbb
and
jbe
add
out
andb
add
inc
mov
inc
jns
out
add
cmp
dec
sub
xchg
add
movsb
jge
rcr
cmp
mov
ja
mov
cmc
and
ja
ret
push
test
mov
gs
or
jge
add
mov
iret
lods
dec
xchg
add
sti
xchg
mov
test
lods
add
fsqrt
mov
mov
in
sub
lock
lret
and
int3
xor
ds
cld
pushf
xchg
pop
cmp
ljmp
cmp
cmp
add
sbb
sahf
call
pop
pop
push
or
test
cwtl
adc
pop
pusha
ret
dec
sub
add
pop
je
fmulp
mov
add
mov
mov
icebp
popa
push
add
xchg
and
popf
mov
repnz
js
cmp
mov
mov
mov
jl
decb
add
add
inc
pop
std
pop
sbb
out
add
jne
or
movsl
js
inc
imul
mov
lahf
add
in
cmp
ss
jne
adc
fildl
add
das
aaa
cwtl
add
and
loope
btrl
mov
mov
sub
sahf
add
mov
push
sbb
add
pop
ret
int3
testl
dec
jp
add
mov
dec
jge
bound
out
add
divl
xor
jnp
mov
mov
sub
iret
mov
pop
mov
inc
les
cmp
hlt
jno
and
push
cli
cmpsl
add
sub
mov
lret
lock
add
adc
pop
jl
out
add
mov
repnz
addl
cmp
rolb
inc
sub
loope
push
aam
vmovlpd
pop
repz
cmpsb
sbb
and
pop
je
dec
sub
xor
inc
inc
add
mov
jb
mov
xlat
aam
call
dec
in
loopne
sub
mov
jge
push
sbb
scas
add
xchg
lret
xchg
cs
cmp
dec
aam
inc
adc
icebp
push
add
adc
cmp
cs
aam
sub
aas
testb
mov
mov
dec
add
stc
dec
and
adc
or
pop
xchg
pop
and
popf
pusha
xor
pop
mov
test
pop
xchg
or
xor
pusha
cli
and
jne
jno
sbb
inc
sub
sti
movsl
out
add
pop
cmp
or
lds
sub
adc
mov
jge
scas
add
loopne
pop
add
and
popa
xor
add
push
fadds
imul
call
rolb
mov
cli
lods
hlt
add
jmp
ljmp
jg
sub
push
xchg
mov
inc
cmp
pop
loop
inc
stos
xchg
mov
test
cmpl
add
test
outsb
fisttpll
lds
gs
cmp
aaa
xor
add
cwtl
sbb
add
lds
cmp
adc
fdivrl
jle
jno
pop
enter
push
aas
push
aas
add
mov
jns
pop
in
xchg
add
mov
stos
jb
aas
jl
or
mov
cltd
sub
nop
insb
add
adc
lea
pop
orb
mov
push
pop
add
add
out
push
test
add
add
sti
push
xor
hlt
dec
add
mov
mov
addr16
inc
sbb
jmp
sbb
xchg
lret
fdivrl
in
loope
cltd
and
clc
aam
add
jne
sbb
mov
test
cmp
mov
mov
aam
cwtl
inc
add
rcl
push
out
fs
outsl
mov
add
push
lret
adc
add
fxch
std
cmp
aaa
pop
pusha
inc
gs
fimuls
jmp
pop
popw
jp
inc
sbb
add
or
insb
mov
jmp
call
push
fdivrl
add
add
mov
cmc
dec
add
add
test
add
mov
not
add
imul
aad
out
or
subb
pop
sub
sti
clc
and
inc
cld
movl
lcall
stc
aaa
mov
insb
popl
mov
sbb
movsb
loopne
addb
into
icebp
mov
add
lock
call
outsb
or
testl
lcall
or
or
pop
out
push
test
xor
call
xchg
jp
add
or
iret
stos
or
pop
adc
fneni(8087
xor
and
xchg
add
test
out
jns
mov
push
push
xchg
xchg
and
sbb
cmp
rcrb
ficomps
adc
xchg
xor
cwtl
mov
xchg
mov
out
jns
mov
test
cmp
add
or
jg
sub
push
dec
imul
add
and
test
pop
rcr
js
sbb
loop
addb
add
stos
and
sbb
sub
rol
cltd
jge
sbb
lcall
fwait
cld
cmp
out
inc
iret
add
iret
leave
hlt
sbb
sub
loopne
jge
es
ljmp
jns
addr16
loope
xorb
sbb
js
sbb
loop
push
clc
push
sub
push
add
sub
idivb
scas
into
mov
ljmp
movsl
or
or
rolb
sub
fisttpl
and
add
jle
fnstcw
jbe
add
cmp
mov
sbb
push
pop
jbe
jns
jmp
inc
lret
adc
ds
psubsb
sub
mov
adc
add
jnp
or
rclb
sub
xchg
push
rcll
pop
lods
add
xchg
data16
insl
mov
cltd
xor
test
faddp
add
fildl
gs
sbb
push
repz
push
cs
add
sub
pop
sub
add
push
std
add
sbb
sub
out
dec
data16
popl
pusha
and
addr16
shl
adc
jno
repz
add
add
sbb
test
rclb
rorl
cmp
sbbb
add
stc
mov
mov
inc
push
push
popl
sub
mov
lock
fimull
addr16
inc
add
dec
call
push
jg
add
les
add
mov
mov
ja
add
dec
dec
cmp
sbb
shll
inc
pop
push
sub
cld
lock
repz
pop
inc
loop
je
xchg
ljmp
jne
mov
adc
dec
sbb
push
sahf
addr16
jge
adc
outsl
adc
inc
inc
scas
xor
movsb
add
push
inc
lods
out
lret
xlat
pop
rcll
sti
add
popa
dec
xchg
out
add
mov
jmp
ds
add
sub
shlb
lods
sub
pop
dec
cmp
mov
mov
sub
jl
cld
jge
leave
add
mov
sub
jae
dec
adc
rolb
stc
lret
push
cmp
insb
or
clc
sahf
dec
jbe
aas
repnz
mov
mov
sbb
es
pusha
pop
and
fiadds
mov
xchg
aad
repz
outsb
jo
xor
into
and
int
add
adc
push
lcall
cmp
in
movsb
sub
fildll
andb
push
or
divb
cmp
add
mov
add
aad
push
js
add
xor
sbb
mov
push
lret
aam
add
push
rcl
outsb
out
cmp
sub
cld
add
xchg
scas
jo
xor
pop
je
mov
loope
pusha
add
sahf
loopne
iret
nop
es
negb
or
cmp
or
sti
shlb
add
cmp
pop
jmp
pop
mov
ja
mov
leave
adc
ljmp
js
mov
aad
xlat
sbb
xchg
fcompl
jecxz
xchg
xor
mov
pushf
sbb
jp
clc
andb
mov
subl
pop
fldl
mov
inc
out
in
in
add
jg
popf
dec
add
subl
mov
pushf
jle
or
cmp
pop
mov
andb
push
cmp
shr
mov
rolb
mov
push
sub
or
pop
xchg
xchg
xor
cmp
pop
sbb
sub
loopne
mov
out
add
inc
pop
arpl
pop
loop
cwtl
addb
jle
scas
jnp
add
repz
cld
lcall
sub
mov
dec
or
pop
push
rcll
dec
and
test
ror
fimull
lahf
sub
xchg
jle
cli
lock
out
iret
gs
call
cmp
mov
inc
xchg
scas
fadds
cmp
adc
shrb
mov
fmul
lcall
add
cli
cmp
push
icebp
pop
sub
add
pop
or
rcll
pop
dec
ss
push
incl
mov
sbb
sarb
jbe
or
jmp
decb
jge
mov
add
in
xchg
enter
xchg
adcl
mov
pop
arpl
nop
jo
sub
leave
rcrl
lret
mov
fistl
or
mull
xor
int
adc
jmp
cmpsb
pop
add
adc
idiv
fidivl
imul
mov
dec
push
call
and
adc
mov
es
or
cltd
inc
and
testb
jae
and
popf
roll
cmp
cld
adc
rcr
jns
or
fidivl
js
mov
ljmp
out
ss
movsb
aad
push
sub
cmpl
test
filds
xor
repz
jl
mov
jo
in
jbe
push
xlat
dec
add
arpl
pushf
test
xor
mov
mov
lods
fsubrs
push
push
or
xchg
add
icebp
add
imul
sbb
ja
adc
and
lea
arpl
lcall
add
add
add
in
out
lea
inc
ljmp
mov
push
roll
incl
incl
adc
add
mov
loopne
mov
xchg
add
test
into
add
hlt
movl
mov
add
andb
adc
rcll
and
lods
sbb
test
fwait
add
shrb
cli
adc
ss
lds
in
daa
or
mov
cmpsl
das
jmp
outsb
aam
repz
add
stos
lret
dec
xchg
push
fbstp
add
aas
push
jle
loopne
das
stos
add
sub
fidivrs
imul
incl
fbld
push
push
enter
or
cmp
adc
lcall
fstpt
xchg
or
add
push
push
out
add
movl
cmp
mov
insl
jecxz
testl
pop
add
stos
in
cmp
add
out
jmp
cmpsl
or
inc
outsl
pop
jle
or
add
aas
cld
popa
pop
lds
in
jo
fldl
inc
cli
outsb
mov
add
call
js
roll
stc
into
sarl
jge
pop
xor
inc
addb
push
push
add
fsubs
fmull
xchg
hlt
pop
jno
stos
xor
es
pop
into
add
pop
add
dec
daa
outsb
jnp
xor
jl
or
arpl
add
ds
enter
mov
inc
aam
xor
or
add
lods
xchg
adc
jmp
dec
arpl
inc
cld
lods
insl
cltd
sbb
mov
add
repnz
or
test
add
in
aad
push
sti
pop
rcrb
or
xchg
test
insl
rolb
lds
mov
xchg
push
and
and
add
dec
add
loopne
xor
mov
imul
int
aam
sbb
out
ja
add
fstl
inc
mov
pop
outsb
jle
inc
hlt
fsub
sub
add
cmpsl
ja
sub
push
nop
sahf
mov
inc
pusha
ljmp
dec
rolb
push
sarb
add
inc
sahf
sbb
sub
nop
add
and
adc
inc
xchg
pop
sbb
pop
cmp
nop
adc
stc
jae
push
mov
add
or
xor
pop
mov
jo
pushf
loop
add
adc
jmp
or
add
addr16
dec
jge
scas
xchg
adc
push
inc
test
mov
and
fdivrs
pop
pop
xchg
fildl
mov
int3
add
jnp
mov
jne
add
adc
inc
pop
mov
cmp
enter
cwtl
add
lods
call
jle
or
sbb
mov
xchg
das
es
nop
ljmp
mov
aad
outsl
jno
popa
and
add
and
ds
shlb
outsl
push
clc
mov
xchg
pop
inc
push
cmp
pop
int3
idivl
lret
stc
pop
and
stos
cltd
fstpl
add
lds
lret
sub
dec
mov
cmc
add
cmpsb
sarl
mov
nop
sbb
or
lods
insl
loope
xchg
adc
lods
mov
out
push
add
add
push
cs
sbb
movsl
mov
stc
mov
mov
cmovae
add
adc
xchg
adc
mov
inc
out
insb
add
clc
jb
xchg
push
roll
xchg
mov
mov
or
and
xor
mov
adc
add
ja
pop
repz
xor
xor
adc
in
clc
inc
add
adc
pavgw
add
mov
jno
or
ljmp
mov
fisttpl
add
lds
loopne
mov
jmp
cld
gs
insb
sbb
cltd
ret
outsl
and
xchg
push
and
jl
mov
xor
lds
sbb
repnz
xchg
adc
insb
mov
add
add
bound
rorb
loopne
enter
jnp
rorb
or
add
push
in
mov
mov
out
fmull
mov
mov
cmp
andb
scas
call
cld
inc
aas
pop
inc
in
jno
xlat
pusha
inc
idivl
cmp
loop
jns
inc
or
jbe
or
adc
lock
xchg
cmp
aad
fs
sbb
inc
dec
rorb
pop
lods
mov
lods
pushf
add
dec
push
dec
out
inc
adc
scas
and
mov
mov
adc
in
push
daa
rclb
aas
sub
xchg
sbb
inc
addl
jge
cltd
inc
or
lret
mov
clc
bound
cmp
ljmp
xor
ja
mov
add
arpl
add
inc
jae
lods
fmuls
repnz
dec
inc
mov
loope
mov
rcrb
add
into
rcrb
scas
add
in
addr16
shrb
or
outsw
lods
adc
push
mov
nop
clc
add
subl
enter
lea
les
mov
push
mov
or
push
push
add
aad
rolb
add
pop
mulb
inc
pop
mov
sub
add
xchg
pop
neg
bswap
or
mov
xchg
adc
pop
xchg
rcrb
push
jnp
jmp
cmpsl
dec
ret
orb
scas
or
inc
sti
sub
dec
sbb
mov
jmp
push
nop
adc
sbb
pop
inc
gs
scas
add
fcmovnb
enter
nop
mov
mov
mov
addl
in
movsb
mov
xor
xor
sub
push
adc
loop
add
vcvtps2pd
push
push
push
jo
cmp
mov
mov
mov
add
cmp
mov
and
xlat
xchg
adc
jmp
call
hlt
push
das
iret
add
xchg
adc
xlat
pop
out
sub
mov
add
mov
popa
idivl
ja,pn
adc
lods
in
sarl
sbb
and
shll
pop
mov
add
adc
pusha
loope
pop
stos
cmp
sbb
test
int3
inc
inc
daa
add
in
popl
cmp
mov
jo
add
in
push
push
test
jbe
ret
in
xchg
test
mov
lods
add
pop
fmulp
push
add
ljmp
or
xchg
pusha
jno
pop
hlt
mov
xchg
or
xchg
shr
and
add
or
xor
sub
movb
adc
xor
mov
test
lahf
or
inc
sub
sbb
aaa
xchg
lods
pop
add
inc
or
mov
lds
pop
fstpt
int
mov
pop
inc
xorb
xchg
imul
xchg
popa
jmp
inc
xchg
add
cmp
or
cld
test
add
lods
sub
adc
pop
dec
lock
add
adcl
sbb
mov
aas
mov
add
mov
mov
add
jl
add
in
fstps
subb
cmp
sbb
adc
inc
fisttps
cmp
or
add
mov
and
pusha
sbbl
out
test
bound
mov
push
jno
sub
fistpl
jbe
fidivs
add
jmp
or
add
out
lock
dec
bound
jecxz
or
int3
mov
pop
xchg
xor
add
sbb
bound
xorb
xor
adc
stos
jmp
sbb
inc
xor
andl
jmp
pop
ljmp
cmp
add
mov
and
adc
jecxz
cmp
das
inc
and
outsl
out
js
adc
jl
add
movsb
mov
jecxz
cwtl
add
cld
push
lret
add
add
rolb
push
pop
jg
cld
sub
dec
pop
and
es
lds
dec
mov
inc
mov
clc
lret
add
lahf
cmp
mov
add
xor
stos
movsb
cmpsl
int3
and
pop
push
cmp
inc
gs
mov
inc
jecxz
and
mov
mov
mov
and
add
xchg
pop
jmp
or
inc
jecxz
push
pop
arpl
or
fwait
pusha
cmc
and
add
mov
ljmp
xor
sbbb
mov
lods
push
pop
add
lcall
jge
popf
andb
outsb
movsb
add
fdivl
sub
cld
push
aam
popl
inc
push
cs
and
sbb
cmp
pusha
and
aas
insl
jg
push
popf
js
xchg
push
clc
aaa
xor
add
stos
into
stos
sbb
inc
sub
cmp
add
add
and
pusha
pop
call
dec
cmpsb
pop
data16
pop
hlt
add
cmp
dec
xchg
repz
mov
fidivrl
adc
cwtl
fidivs
push
and
pushf
fadds
cmp
pop
test
adc
das
fsts
ja
mov
sbb
add
sub
jno
pop
in
icebp
sub
mov
sub
mov
jmp
enter
pop
in
dec
pusha
sbb
or
and
cmp
jae
adc
or
cwtl
add
les
add
pop
cltd
test
iret
fs
fcomip
loope
pop
pop
addr16
cmp
in
ud2
xchg
xor
loopne
in
sub
mov
mov
mov
add
xchg
or
jecxz
mov
test
xor
jnp
xchg
js
insl
in
clc
mov
mov
add
repnz
mov
jb
add
push
jae
test
push
sarb
pop
lock
push
test
addl
dec
loop
add
jecxz
inc
test
pop
sub
inc
repz
dec
add
push
inc
add
sarl
inc
push
ss
add
sti
pop
nop
add
push
dec
and
repz
in
into
mov
xor
pop
icebp
pop
mov
lcall
iret
push
adc
in
push
xor
fldcw
jae
jl
inc
mov
add
popl
lahf
add
out
push
jb
pop
inc
enter
ljmp
dec
sbb
inc
sti
mov
fstpl
test
xlat
push
add
cmpsl
mov
out
push
lock
std
seta
mov
jb
loopne
jp
test
add
lods
popa
lock
mov
gs
push
pop
xchg
fcoml
pop
cmp
and
repnz
jl
jecxz
fmuls
pop
pop
push
add
pop
nop
jae
outsb
loopne
and
mov
das
cld
iret
cld
lods
add
addr16
imul
add
inc
cmp
sbb
add
jl
and
mov
mov
cwtl
sub
fs
or
jge
mov
and
add
out
xorb
pusha
push
push
xchg
iret
in
add
addl
imul
test
push
push
std
add
fadds
or
fistpll
or
inc
xchg
js
fcomp
pop
or
out
cld
cmp
repnz
fs
or
push
pusha
add
shrb
iret
mov
sub
cmc
pop
lods
addb
imul
add
cmpsl
mov
dec
add
rorb
mov
add
shrb
cmpb
add
ret
pusha
loopew
or
add
and
add
leave
cltd
add
hlt
call
mov
js
jae
repz
fldt
cmp
or
add
subb
push
xchg
jl
or
add
sbb
dec
add
or
leave
push
enter
jnp
fs
sub
xchg
jo
aas
mov
test
js
clc
xor
xchg
sub
inc
xchg
push
cmp
popf
inc
push
xor
pop
or
fisubrl
stos
mov
add
inc
push
mov
shl
xor
scas
les
mov
mov
mov
or
add
push
push
fwait
add
std
xor
outsl
mov
test
adc
add
mov
and
jb
repz
push
mov
ljmp
aas
cwtl
or
and
dec
add
pop
aaa
jl
push
test
ds
sti
cltd
sbb
push
pop
sbb
ljmp
add
inc
ljmp
pusha
or
jl
sbb
add
sub
jg
xchg
cmp
ljmp
insb
cmp
scas
imul
stos
ret
or
or
mov
lds
insl
mov
ret
loopne
loopne
push
dec
sbb
jl
pop
sub
inc
adc
mov
js
adc
or
and
pop
mov
lods
add
sbb
xchg
sarl
fxch
pop
inc
pushf
jecxz,pn
push
or
inc
in
inc
enter
add
mov
xchg
in
pop
data16
push
sub
cmp
ja
add
lods
outsb
fwait
mov
push
add
sbb
cmpl
decb
jns
push
and
int3
or
jae
cwtl
jb
jge
add
and
lahf
xchg
repnz
loop
pop
nop
sub
out
add
jg
pop
pusha
push
push
and
add
nopl
lds
jmp
or
int
dec
mov
or
popa
add
icebp
stos
aam
xorb
jo
jg
adc
bound
xchg
in
jl
push
pop
insl
xor
into
or
shll
enter
mov
fmulp
adc
cmp
or
andb
lock
mov
mov
fcoms
das
xchg
imul
bound
xor
das
lods
push
aas
stos
popl
ljmp
sti
fisubrl
and
mov
jl
lods
xor
or
inc
mov
scas
xchg
in
dec
mov
cmpsb
lods
mov
and
hlt
test
sbb
push
add
mov
shll
cmpsb
loop
add
orl
mov
push
scas
test
jne
add
sbb
lea
and
enter
adc
gs
cmpb
rolb
or
inc
js
imul
repz
and
movsb
sarl
add
sbb
stc
sub
xor
jg
sub
mov
je
pusha
dec
and
sub
dec
add
cmpsb
fiaddl
andb
in
lods
inc
mov
adc
test
loopne
or
jl
add
repnz
mov
out
testb
inc
movsb
jp
not
adc
gs
lret
mov
mov
addl
jge
add
sub
jbe
push
inc
push
add
int3
add
cmpsb
out
mov
push
nop
loopne
or
jge
sarb
lds
push
add
stc
repnz
sub
test
and
mov
or
ficomps
leave
sti
or
push
push
shll
mov
insl
sub
pushf
sarl
clc
cltd
in
orb
es
pop
mov
pop
inc
mov
mov
push
or
into
ret
xchg
mov
sub
push
add
cmp
adc
hlt
or
mov
dec
cld
xchg
add
mov
add
or
mov
mov
pushf
or
add
and
add
in
fsubs
test
mov
jmp
jmp
cs
add
popa
adc
or
pop
sbb
cmc
sahf
std
mov
xor
pop
add
aas
cmc
sti
or
popa
sahf
ret
gs
sarb
sti
jg
mov
lods
loop
sub
sbb
lods
mov
dec
les
out
sub
inc
xchg
add
cmc
mov
scas
sub
jbe
or
xchg
insb
std
push
mov
ds
or
sub
cmpb
mov
lods
fsubl
ljmp
jno
sbb
outsl
pop
jae
sbb
ljmp
cwtl
cmp
data16
or
cmpsl
mov
cmp
or
push
push
icebp
in
add
addb
popa
xchg
rclb
jae
cmc
sbb
cld
sub
lret
or
rorb
aam
in
add
push
mov
je
mov
push
cwtl
cmp
and
enter
arpl
mov
cmp
scas
adc
repnz
inc
lods
aam
sub
xchg
add
pop
push
add
popf
sbb
pusha
fdivrs
sbb
imul
add
sub
js
xor
lods
dec
repnz
xor
test
into
cmpsb
jns
daa
add
jb
sbb
add
dec
mov
or
in
cmpsb
pushf
add
or
testb
dec
add
movl
push
iret
adc
pusha
in
inc
xchg
mov
insb
pop
sub
scas
sub
nop
mov
stos
xlat
lahf
flds
inc
inc
ds
addb
out
sbb
test
mov
mov
inc
add
cs
mov
sub
mov
dec
jne
lods
adc
xchg
sbbb
or
xchg
or
adc
xchg
jnp
leave
xchg
shr
inc
and
mov
pop
imul
out
scas
clc
jge
sbb
push
faddp
sbb
stc
clc
jns
loop
add
jecxz
imul
out
push
in
mov
lock
fcoms
dec
cmpsb
loopne
xchg
add
pop
mov
imul
add
test
shlb
or
push
shll
inc
ret
in
cs
movlps
xorb
add
adc
push
in
sub
pop
in
scas
aam
push
adc
notl
sub
add
jne
sub
push
mov
jnp
dec
lods
xchg
movsl
dec
ds
sahf
add
lods
xchg
or
orb
test
xor
add
push
push
add
pop
cmp
jnp
and
inc
sub
adc
andb
or
add
fwait
jb
call
stc
mov
adc
and
add
jg
xor
es
xchg
rcl
sti
dec
pop
sti
sbb
xorb
out
dec
cli
jl
mov
jno
jl
add
imul
shrb
pop
cltd
ss
mov
pop
jnp
in
xor
mov
lahf
arpl
fisubrl
cmp
sbb
xchg
adc
and
mov
xor
imul
mov
repz
push
dec
stc
xor
stc
test
push
adc
mov
pop
test
add
xchg
aas
cmp
insb
or
sub
xchg
push
cmp
lds
or
movsb
in
pushf
add
jne
das
mov
leave
mov
cmp
pop
push
test
sub
adc
lds
in
or
push
les
scas
pop
incb
outsb
jle
lahf
dec
push
push
mov
cmp
adc
fbld
inc
mov
add
jmp
push
adc
insb
lods
push
bound
push
gs
mov
xlat
subb
inc
stos
and
cmp
clc
add
jnp
decb
int
and
add
frstor
add
pushf
pop
lcall
lahf
js
add
scas
andl
gs
ss
push
pushf
clc
orl
lea
sbb
cmc
aaa
stos
sysexit
add
xor
stos
dec
xchg
add
pop
xchg
in
aaa
cmp
cmp
or
iret
sbb
and
push
add
push
mov
adc
insb
movb
iret
sti
pusha
or
xchg
flds
cmpsb
xchg
fidivs
adc
jb
cmp
add
or
les
nop
dec
mov
add
rorl
jbe
movsl
pop
add
pop
jl
lods
pop
cmpl
insl
cmc
jne
lds
sbb
adc
add
popa
dec
and
and
stos
mov
std
shll
je
imul
iret
mov
and
mov
mov
mov
andl
rclb
push
aad
fadds
and
fwait
push
or
inc
notb
or
adcb
lods
cmp
aaa
clc
add
inc
push
add
mov
jo
jp
movsb
sbb
pop
mov
push
xor
add
mov
mov
pop
scas
mov
inc
xchg
add
negb
addb
clc
jge
mov
or
adc
ret
daa
fildl
popa
jge
sbb
movsl
add
lods
xchg
xchg
outsl
adc
pop
sbb
in
pop
add
xor
les
lcall
popa
mov
xor
push
or
or
push
and
mov
cmpsl
or
stos
xor
inc
loop
movsl
mov
in
out
roll
sbb
dec
add
fistpll
or
xor
sub
jl
test
icebp
push
pop
push
dec
cmp
xchg
subl
xlat
nop
loope
loop
nop
pop
add
sub
bound
mov
xor
pop
sbb
add
mov
dec
call
out
in
stc
pop
inc
sub
xchg
jge
adc
movsl
adc
pop
mov
mov
ds
mov
add
or
mov
add
jecxz
jmp
add
pop
lods
pop
push
dec
adc
stos
sarl
mov
enter
mov
outsb
mov
add
push
and
loopne
inc
push
push
fs
incl
lret
mov
aas
dec
hlt
add
mov
movsb
insl
pop
add
lds
test
daa
mov
lea
cmp
adc
push
jne
cmp
cld
jb
add
lock
jae
aam
add
or
ret
add
aas
adc
adc
scas
add
xorb
call
aad
xchg
mov
mov
inc
dec
mov
add
and
push
popa
xchg
push
clc
inc
lea
ret
push
xchg
add
cmp
daa
popa
arpl
or
push
sbb
push
add
xor
imul
mov
mov
movsb
insb
repz
shlb
movsl
cmp
dec
cwtl
mov
test
ljmp
hlt
insb
cmp
fimuls
adc
fwait
push
pusha
loop
adc
pop
aaa
in
sbb
subb
xor
shlb
or
es
jnp
add
mov
call
xor
and
and
scas
inc
faddl
enter
mull
bound
movsb
add
subl
adc
or
test
xor
dec
fwait
sarb
xor
pushf
xchg
mov
test
inc
pop
rcll
mov
xor
sbb
and
sbb
mov
sub
mov
out
or
fsubrl
clc
push
push
mov
out
in
test
leave
mov
bnd
inc
cltd
and
jae
xchg
add
adc
mov
jecxz
add
pop
jg
xchg
pushf
mov
jo
or
mov
ljmp
in
adc
jg
inc
std
les
xchg
mov
lock
dec
mov
cli
data16
or
arpl
mov
push
stos
xlat
in
nop
aas
add
add
sbb
dec
insb
pop
subl
loope
mov
sbb
je
pushf
jnp
pop
add
push
sub
and
jp
pop
pop
mov
and
xchg
sti
push
add
push
movsb
xor
xchg
push
mov
pop
xor
inc
dec
ficomps
pop
add
lret
mov
test
test
cmp
inc
mov
sub
add
mov
pop
cmpb
jno
outsb
insb
add
and
mov
cmpl
cwtl
fldt
and
pop
insl
rol
cmp
jnp
adc
ret
mov
cli
cmp
movsl
pop
xchg
jne
add
xor
xor
pop
xchg
and
pushf
pop
push
dec
mov
mov
aam
enter
adc
pop
push
and
loopne
das
stc
lcall
cmp
rcrl
adc
aas
sbb
daa
pusha
fisubrl
test
inc
xchg
add
push
jmp
mov
cmp
cmp
xchg
jge
cmp
sub
add
cs
pop
cmpsl
mov
rolb
jnp
and
iret
add
ljmp
add
inc
nop
inc
push
mov
jle
xlat
cwtl
nop
adc
mov
xchg
mov
clc
push
aad
loopne
call
and
xchg
gs
hlt
pop
inc
outsb
int3
add
fldt
sub
mov
addr16
fistl
add
pop
in
lret
add
or
push
or
leave
push
fsub
add
dec
rorb
xchg
nop
mov
sbb
and
inc
add
in
add
aaa
sbb
in
add
out
push
push
cmp
lds
push
add
and
in
sub
mov
xor
jo
vmovaps
or
mov
lea
dec
fisttps
push
adc
imul
nop
std
sarb
sbb
dec
movsb
add
loope
ret
ret
faddl
lock
fs
rcrl
add
mov
dec
mov
sbb
lret
andb
cmc
ja
mov
or
jge
xchg
test
arpl
addb
inc
fcmovbe
pop
in
mov
jnp
in
sarb
out
adc
lcall
mov
pop
add
adc
push
fstpt
aaa
add
iret
leave
push
and
into
add
out
adc
sahf
pop
dec
iret
sbb
sub
mov
cmp
inc
inc
sahf
sub
xchg
mov
mov
add
jl
add
push
outsl
mov
dec
js
sub
aaa
add
aas
lods
adc
shl
mov
mov
shl
je
lahf
jae
jo
add
aas
call
pop
add
loopne
mov
xchg
push
bound
int3
adc
out
adc
int
adc
mov
jo
add
test
pop
dec
mov
sub
mov
in
add
pop
scas
push
jge
shr
xchg
sbb
into
clc
inc
mov
sbb
je
mov
mov
pusha
sbb
add
aaa
pop
lret
frstor
jno
pop
xchg
sub
clc
adc
cs
mov
add
xlat
jb
fcompl
pop
pop
sbb
movsl
and
inc
lods
orl
and
into
or
push
mov
push
mov
add
inc
lods
add
adc
sub
add
ds
cli
dec
and
and
sub
pop
sbb
mov
call
mov
and
loope
jg
push
pop
mov
inc
scas
and
jns
bound
adc
rol
mov
jecxz
pop
dec
mov
dec
into
jmp
cmp
push
fsubl
imul
push
and
mov
sarb
inc
pop
push
xchg
add
push
mov
test
push
out
jg
stc
loopne
pop
cmp
sbb
xchg
and
dec
xchg
in
aad
cmp
add
addb
mov
add
icebp
lret
mov
add
xor
push
aaa
aas
dec
movsb
add
out
sub
push
rolb
mov
loopne
iret
mov
jp
add
inc
push
push
subb
cmp
cmpl
add
sarb
ja
jmp
or
adc
popa
lret
sbb
add
jge
lds
add
sub
nop
jo
movsb
jnp
adc
jge
gs
inc
add
daa
inc
fimull
outsl
addl
imul
mov
daa
pop
or
adc
sub
sub
repz
arpl
mov
mov
addr16
push
std
pushl
cmovbe
sub
cmp
xor
mov
lods
adc
cmpsb
sub
test
sub
adc
add
cmp
xor
jmp
stos
cmp
mov
sub
lods
test
decl
xchg
stc
ds
rolb
sarl
xchg
call
pop
mov
lods
push
insb
cmp
cmp
test
xor
fmull
loopne
add
lret
fwait
das
xchg
add
mov
xor
shrl
lock
add
add
ljmp
add
dec
test
and
push
xchg
jb
lahf
gs
rorb
cwtl
xor
push
xchg
int
loopne
xor
sub
addr16
cmp
pushf
mov
add
fiaddl
movsl
in
sub
pop
add
fadds
add
jg
mov
fcomps
sbb
sbb
or
xchg
int
pop
xorl
cwtl
in
shlb
test
add
rcrl
jge
test
dec
orl
mov
push
pop
ja
push
fdiv
dec
scas
add
popa
xlat
in
add
outsl
mov
mov
loopne
xchg
movsl
nop
lea
xchg
sbb
loopne
inc
xor
add
sbb
jmp
stos
ljmp
jg
leave
adc
push
mov
clc
addb
jl
jp
xchg
pushl
pusha
inc
js
test
add
adcl
cmp
loope
add
mov
test
aad
call
scas
out
adc
ret
or
rcll
or
lock
ljmp
rcrb
push
or
test
add
lret
cmp
cld
xchg
sbb
and
leave
leave
adc
adc
lea
xlat
in
jns
and
enter
add
insl
loop
sbb
in
hlt
movsb
cmp
push
lret
fnstsw
cmp
sbb
in
jae
mov
mov
fcomps
mov
aam
jnp
add
push
hlt
popf
jno
mov
pop
xor
add
push
pop
jmp
xor
add
mov
les
nop
and
jno
or
loope
out
ds
mov
in
hlt
pushf
or
dec
mov
out
in
xchg
jb
push
jnp
call
mov
ljmp
and
and
jecxz
adc
inc
das
pop
mov
add
jge
push
daa
sbb
mov
pop
add
jbe
push
push
push
add
sbb
imul
loop
xchg
or
mov
cwtl
sub
push
add
sbb
jne
shlb
imul
cmp
cmp
push
push
mov
fstps
add
dec
pop
imul
add
dec
nop
mov
aas
addr16
aad
inc
push
sbb
pop
push
fmuls
rcl
rcrb
add
mov
mov
lock
lock
mov
mov
add
and
xor
cltd
fsubs
dec
addr16
stc
and
aam
sti
outsl
cwtl
aas
add
mov
cmp
bound
inc
test
call
popa
and
jnp
inc
repnz
inc
push
xchg
ja
imul
pop
je
lods
or
jl,pn
add
push
ret
test
mov
mov
shl
pop
iret
inc
data16
lea
mov
xor
pop
hlt
pop
add
test
mov
clc
out
or
mov
xchg
push
scas
xchg
or
xorb
sbbb
clc
popa
xlat
xor
cmp
push
fwait
and
mov
pop
sub
movsb
sbb
add
int
sbb
pop
das
sub
js
pop
inc
nop
mov
iret
aam
jae
outsl
mov
xor
sbb
push
dec
jb
adc
dec
sar
jp
add
std
rolb
test
add
xor
mov
dec
rclb
test
pand
add
rorl
sbb
inc
mov
push
das
push
rcll
pop
call
sub
test
jmp
xchg
adc
mov
out
mov
enter
sbb
push
js
in
inc
sarl
adc
fiadds
out
dec
sbb
aam
movsb
adc
fs
mov
shlb
scas
adc
call
add
push
int3
fmull
mov
movsl
clc
idiv
daa
roll
adc
push
lret
mov
jmp
add
ficoml
add
jae
sti
rolb
es
pop
add
lds
mov
push
xchg
addr16
fisubrl
xor
jnp
pop
enter
xchg
jl,pn
add
cld
jnp
outsb
push
add
inc
fstps
pop
and
aas
xor
fs
rorl
fdivr
xor
dec
cmp
pop
push
inc
fwait
and
adc
sbb
dec
add
fadd
in
movsb
fildll
push
insl
pop
cwtl
mov
es
movl
mov
cs
fiadds
or
stos
adc
pcmpgtd
jl
loopne
adcb
or
add
xchg
pusha
fs
incb
mov
fdivrs
mov
addl
xor
jmp
scas
adc
repnz
dec
daa
test
xchg
shll
push
sub
mov
sbb
lock
or
je
and
sub
adc
and
mov
sbb
lret
push
push
and
cmp
nop
dec
pop
inc
xor
mov
dec
cld
mov
sub
sbb
imul
and
add
in
fadds
in
add
add
xor
jb
pop
add
rcll
clc
arpl
cltd
and
inc
xor
cld
add
popf
push
pop
xchg
push
pop
aas
add
dec
xchg
out
mov
inc
adc
cmp
clc
cmp
addb
fwait
incb
insb
adc
push
adc
insl
pop
jns
sahf
pusha
inc
xor
xor
imul
add
in
adc
sbb
pop
jmp
ja
pop
shrl
inc
clc
mov
sub
mov
xlat
xchg
pusha
lock
ds
xchg
outsl
push
xchg
ret
ja
inc
push
add
fstl
stos
or
push
xor
clc
add
jl
iret
adc
repz
jecxz
xor
jmp
dec
pop
adc
xchg
xchg
js
jecxz
dec
xchg
mov
pop
mov
test
pop
stc
add
out
divb
mov
sahf
xchg
arpl
pop
stos
add
dec
xor
test
mov
push
and
cmp
cmpb
insl
mov
into
jns
inc
in
subl
std
or
mov
or
add
in
sub
sbb
lods
je
add
add
test
pushf
jno
add
loope
rcl
leave
or
gs
arpl
inc
pop
aam
inc
dec
outsl
mov
dec
sub
test
inc
and
add
mov
cmp
inc
icebp
mov
add
add
testb
call
in
loop
je
xchg
out
pop
add
stc
dec
add
inc
or
add
fistpll
add
cmp
adc
hlt
test
sarb
enter
inc
scas
inc
xchg
into
and
mov
movsl
jno
mov
xor
add
lods
or
inc
push
inc
in
add
xor
push
mov
fmull
loopne
cmpsl
cld
pop
add
xchg
cmp
adc
push
pop
dec
mov
cmpsl
testl
jb
mov
add
arpl
lods
scas
adc
fiaddl
inc
daa
mov
jle
add
mov
pushf
ja
cmp
pop
add
push
scas
cmpb
bound
xchg
push
jecxz
in
add
daa
xor
fildl
and
lock
xlat
and
jecxz
pop
add
mov
mov
sbb
push
jmp
cmp
jb
mov
jp
lods
add
lock
add
adc
and
pop
push
orb
mov
subl
in
int
add
pusha
movsl
int3
hlt
out
push
jnp
ds
cmpb
imul
test
and
xchg
push
out
loop
icebp
stc
je
fadds
xor
xchg
adcl
add
sbb
add
cmpsl
fsub
sarb
sarl
add
fcomps
cmp
repz
lahf
mov
sbb
and
fidivrs
fdivl
cs
push
mov
movsl
push
inc
push
insb
mov
adc
popa
out
popf
aam
adc
nop
mov
xor
insl
hlt
pop
pop
mov
xchg
dec
sahf
call
fadd
xlat
std
push
js
cld
inc
adc
dec
test
push
add
and
ficoms
cmp
call
aad
add
cmc
fldl
fstpl
scas
stos
aam
int3
pop
insl
sub
jb
pop
or
and
mov
test
psrlq
mov
adc
sbb
test
mov
add
lods
loop
add
and
jge
fidivrl
xchg
mov
mov
subl
test
sub
sub
push
test
pop
rclb
jnp
pusha
cltd
xchg
aad
mov
arpl
fsubp
popf
jge
insl
stc
and
jmp
out
mov
gs
in
sub
lret
ret
std
pop
and
add
sahf
sbb
add
fwait
add
clc
into
out
in
insb
fldenv
push
xchg
sbb
add
xchg
bound
sub
outsl
pop
sbb
outsb
xchg
push
outsb
mov
and
push
pusha
cmp
cmpsb
adc
sbb
cld
lahf
cwtl
in
adc
and
icebp
sub
add
pop
mov
dec
pop
cmp
and
pusha
sbbb
mov
repnz
fimuls
pop
ds
jmp
mov
push
adc
push
in
lock
xor
adc
inc
fimuls
stc
sub
je
lcall
push
cmpsl
inc
push
orl
sbb
js
cwtl
jns
mov
das
cmp
add
pop
cmp
stc
jg
testb
fildll
mov
xchg
push
sbb
jno
ljmp
loopne
test
and
sbb
rclb
add
mov
adc
inc
es
push
add
sbbb
add
repnz
sub
lock
scas
mov
movhps
rolb
cmp
sub
jg
pop
mov
cmpsb
cwtl
ja
str
push
cld
adc
inc
mov
outsb
or
lahf
jl
lock
out
add
add
sarb
outsl
out
dec
fstpl
mov
cmp
je
or
lahf
std
rolb
add
add
mov
pushf
sbb
mov
adc
pop
je
xchg
add
or
clc
mov
and
ds
pop
mov
call
pop
mov
cmpb
push
pop
xor
adc
add
outsl
fwait
sbb
pusha
loopne
test
mov
mov
outsb
sbb
add
add
add
jno
sbb
lods
fisubrs
pop
fsubs
popf
xchg
test
lcall
notl
int3
imul
rolb
shrl
js
add
popf
jg
jnp
inc
jmp
add
sub
sub
fidivs
xchg
add
add
call
sub
fisubrl
fcom
and
dec
push
mov
mov
into
imul
and
push
sbb
add
add
sti
jp
push
pop
ret
stc
clc
int
add
add
mov
add
shll
cli
movsb
push
lods
add
gs
clc
xlat
aas
mov
pop
or
punpckldq
xor
mov
pop
sub
aad
jecxz
add
sub
pop
jae
add
ja
enter
mov
jmp
dec
loopne
mov
pop
and
or
pop
cld
jbe
std
pop
fcompl
lret
bound
shrb
inc
sbb
out
je
ltr
sbb
inc
add
mov
or
lds
add
lods
cmc
outsl
add
jbe
lcall
popa
and
add
rorl
jno
add
mov
aam
or
inc
hlt
dec
js
add
jp
and
add
subl
fisttpl
add
ret
mov
popf
jnp
adc
or
pop
lcall
aaa
jmp
test
pop
ret
rorl
add
jb
or
fistpl
push
fwait
loopne
in
ds
sub
sarb
lods
cmp
stos
clc
add
mov
push
mov
arpl
add
xchg
lock
ds
aaa
nop
insb
add
cs
in
aad
mov
test
xor
add
xor
mov
fdivrs
lahf
fwait
dec
or
jp
mov
xor
aaa
in
les
mov
cmp
clc
mov
add
inc
ljmp
or
cmovnp
nop
adc
or
sub
inc
sub
inc
in
scas
mov
lret
fcoml
dec
push
test
outsl
xor
gs
fwait
push
cwtl
mov
jnp
sbb
addb
add
adc
add
hlt
cmc
imull
dec
std
jp
in
pop
sub
sub
add
mov
dec
fwait
or
sarb
inc
sahf
dec
and
sarl
adc
lea
add
in
andb
daa
mov
push
stc
xchg
and
jle
adc
add
leave
add
out
jno
mov
pop
and
roll
push
test
inc
dec
mov
repnz
notw
adc
sbb
movsb
movb
ret
sub
mov
lret
leave
shll
daa
mov
loopne
int3
add
out
or
add
xchg
inc
cmp
shll
add
pop
aam
jno
call
aas
fldcw
push
movsb
inc
pop
lock
and
xor
add
nop
mov
ljmp
add
xchg
push
jle
cmp
sub
lahf
cmpsb
mov
addb
aam
jne
mov
movsb
fistl
pushf
add
and
xor
jno
dec
and
aam
scas
loop
add
call
cmp
aad
dec
mov
loop
shr
aam
jno
sbb
in
sbb
push
fs
hlt
scas
add
add
stc
add
fwait
jg
push
clc
outsl
imul
mov
sbb
mov
pushf
mov
ds
cwtl
mov
inc
add
in
ror
sbb
xchg
add
fs
addr16
rcrb
push
sub
addb
or
jle
push
jmp
add
je
push
cmp
fdivs
jge
push
out
clc
mov
adc
ret
add
sub
pop
jo
shll
nop
pop
add
icebp
mov
xor
out
add
test
mov
pop
div
mov
lcall
nopl
cmp
push
mulb
test
movsb
repz
loop,pn
leave
add
jecxz
jnp
or
jmp
add
neg
xchg
hlt
add
jns
lret
jge
out
cmp
repz
add
or
pusha
push
fidivs
test
dec
cltd
jp
popa
ret
idivl
inc
insl
out
mov
jns
add
pop
xchg
mov
addl
addr16
add
cld
clc
mov
ja
test
and
dec
push
mov
lods
roll
js
fnstenv
inc
sbb
bound
mov
sub
repnz
addb
xchg
pop
and
xchg
movl
and
loope
mov
adcb
cld
add
ja
out
cmp
sbbb
xchg
pop
inc
pop
imul
or
ja
jo
fisttpl
add
or
cmc
jno
xor
add
sub
jae
lods
inc
push
inc
ret
out
and
cmp
jno
push
add
push
mov
xchg
jmp
and
pop
ja
pop
sub
fisttpll
leave
mov
mov
sbb
inc
inc
add
pop
add
sbb
add
dec
add
cltd
lea
lret
dec
or
or
negb
or
mov
insb
imul
shr
add
fimuls
add
sti
aam
xchg
int3
pusha
jmp
pop
lock
ljmp
cmp
lods
movsb
mov
insb
lock
mov
in
aas
in
jne
push
dec
sbb
push
stos
adc
fcompl
and
aam
pushf
mov
push
add
inc
and
cmp
jp
movsb
adc
add
fidivrl
add
and
xor
push
adc
sub
pop
dec
ds
push
xorb
xlat
add
addl
jo
sti
lret
loopne
scas
or
js
add
loopne
mov
inc
das
shlb
shlb
hlt
mov
fsubl
cld
test
sarb
sub
xchg
lods
pop
mov
mov
pop
cmp
add
xor
mov
inc
add
addr16
fistl
mov
dec
js
test
add
repnz
test
outsb
add
xchg
add
and
sbb
sahf
adc
push
xor
lods
clc
fiaddl
int
fcoms
mov
repz
add
enter
pusha
icebp
mov
mov
je
ds
add
pop
mov
cmp
add
push
sbb
jb
jo
add
mov
cmp
xor
xchg
push
std
dec
clc
std
je
sub
ljmp
pop
mov
push
addb
test
cmpsb
xor
push
js
add
add
mov
imul
sbb
sbb
loopne
dec
cmp
orl
pop
mov
lahf
push
pop
inc
xlat
jp
sbb
and
adc
lcall
or
enter
ret
jo
mov
roll
pop
jp
sbb
pop
mov
xchg
lods
subl
adc
add
push
cld
push
ja
lock
mov
bound
jns
test
out
or
ljmp
push
cmp
xor
mov
push
mov
pinsrw
jno
or
xchg
imul
dec
adc
in
test
scas
pop
mov
push
test
sub
add
outsl
hlt
loope
sti
iret
les
std
lods
or
push
pop
fsubs
add
stc
inc
sbb
mov
xchg
arpl
in
add
test
push
mov
pop
aas
lcall
ss
and
mov
out
ds
or
sub
fwait
xor
arpl
adc
and
dec
andb
int3
cli
sub
leave
in
pop
pushf
xchg
push
mov
xchg
in
iret
add
lods
xor
push
mov
mov
cmpl
add
mov
mov
shlb
add
sub
loop
dec
xchg
inc
mov
inc
aam
jne
sub
cmp
or
cmp
scas
in
ret
mov
enter
add
dec
add
mov
loope
pop
add
and
add
adc
push
or
jb
lcall
mov
sahf
xor
cmpsl
dec
mov
sub
addb
in
mov
push
cmp
mov
test
call
mov
imul
arpl
pushf
out
push
mov
into
add
lds
pop
pop
adc
or
add
jmp
pop
notb
mov
aas
mov
jecxz
movsl
and
ret
adc
orl
add
insb
ret
fdivs
nop
dec
sbb
and
ss
sbb
cmp
xor
xorl
stc
sbb
mov
shll
mov
push
in
adc
pop
shlb
dec
mov
add
out
inc
xchg
inc
pushf
not
cmpsl
add
shll
ret
add
pop
mov
js
ficompl
into
sahf
xor
gs
mov
xchg
aaa
add
mov
out
fstp
sbb
sarl
test
xchg
in
xor
pop
test
das
subb
xlat
imul
add
lahf
mov
add
addr16
jge
sarb
insb
jae
inc
dec
arpl
rolb
push
add
in
xchg
sti
adc
pusha
cmpsb
clc
jp
push
sub
andl
or
imul
rolb
adc
inc
push
xchg
add
outsl
mov
aaa
mov
sbb
and
insb
pop
stos
sbb
mov
repz
popf
pop
add
xchg
insb
jo
xchg
push
jmp
into
in
clc
jle
push
or
pop
xchg
and
sub
mov
xchg
mov
xor
and
xor
or
xchg
xor
pop
xchg
inc
sbb
insl
sbb
adc
loop
das
and
add
push
sbb
notb
pop
loopne
mov
dec
dec
xchg
mov
outsb
add
repnz
mov
cs
cmp
mov
adcb
fdivl
mov
roll
mov
rolb
xor
or
push
fs
and
shlb
ja
adc
inc
inc
xchg
and
cmp
jl
push
test
nop
outsb
mov
pop
xchg
les
jo
shl
ror
stos
sahf
or
sbb
imul
loopne
aad
dec
shl
jp
add
xchg
dec
sbb
add
roll
mov
jnp
adc
xor
sbb
cmp
add
mov
adc
add
cltd
dec
push
rolb
add
sbb
mov
cmc
add
daa
out
js
mov
ret
xchg
push
pop
add
aam
in
push
inc
into
clc
or
dec
mov
push
push
incl
rcll
jge
scas
sub
sbb
sub
mov
mov
stc
mov
in
out
pop
bound
pop
rorb
dec
add
or
orb
cwtl
pusha
jg
jmp
lods
pop
sub
int
inc
adc
pop
pusha
jecxz
lock
rcrb
mov
add
out
clc
push
and
cmc
xchg
xor
mov
or
rorl
lods
add
or
pop
jns
mov
in
add
sub
ret
cmp
cmp
cmp
lods
mov
fstpl
iret
pop
cmp
add
stc
jmp
mov
scas
lret
adc
push
inc
les
fcoms
and
add
stos
cmpsl
inc
stos
loopne
int3
inc
mov
es
or
sub
jle
push
ja,pt
inc
mov
cmp
or
add
out
jb
repnz
insl
bswap
popf
clc
test
xor
cld
cmp
xor
shrl
movsl
inc
or
je
int
ficomps
dec
and
mov
aam
mov
fists
xchg
add
sub
add
adc
rcrb
ficompl
push
push
popa
mov
xor
add
sub
lret
or
or
lcall
nop
test
pop
outsb
xor
subb
out
sbb
imul
cmp
mov
mov
loope
dec
mov
pop
mov
mov
ljmp
dec
sub
outsl
in
rclb
jge
ljmp
dec
or
add
sbb
add
fistpll
fisttpll
cmpsl
rcrb
dec
sub
push
xlat
xchg
push
addb
push
mov
imul
adc
cmp
add
and
mov
loopne
cmc
hlt
mov
test
cmp
std
jecxz,pn
sti
add
add
and
xor
pop
stc
jle
shrb
or
shll
pop
sti
mov
arpl
or
jle
rcrb
add
add
das
sbbl
loopne
pushf
add
push
push
stos
clc
or
aaa
xchg
xchg
fiadds
sar
test
stos
cmp
inc
mov
jb
hlt
and
daa
mov
push
cmp
mul
fcmovbe
push
push
push
or
or
adc
xor
movq
inc
inc
in
jno
movb
arpl
hlt
cli
lret
movsb
add
jno
sub
int3
in
inc
add
cmp
cwtl
mov
or
add
call
in
gs
lock
sbbb
mov
add
inc
push
add
scas
mov
or
orb
lret
and
mov
sbb
sub
addb
rorl
inc
call
xor
in
fidivrs
add
pop
test
or
cmp
mov
nop
adc
jo
push
loopne
add
jg
sbb
aam
and
arpl
int
clc
call
imul
cmp
test
imul
aad
idivb
or
int
addl
push
scas
push
fmull
bound
xor
and
notb
cs
int3
rorb
push
shld
mov
out
jns
insb
loop
xchg
cmp
sub
rclb
pop
xor
dec
add
pushf
outsb
xchg
pop
xor
icebp
stc
push
push
scas
shlb
fs
adc
pop
outsl
cmp
or
and
xchg
inc
lods
pop
sub
jae
push
dec
shlb
hlt
xor
enter
enter
daa
test
push
pop
push
rorb
bound
pusha
mov
add
pop
arpl
enter
adcb
ljmp
pusha
mov
pop
jle
adc
cmp
push
aam
addb
out
push
dec
or
inc
cld
pop
cwtl
fidivrl
or
dec
add
xchg
mov
inc
sub
inc
lods
mov
int3
mov
into
add
sub
mov
fsts
nop
lock
aad
jns
cmp
js
cmp
cwtl
add
sti
std
imul
subl
add
mov
mov
add
fbstp
push
shlb
add
sbb
jge
dec
xchg
jo
cmp
cmp
dec
cmp
sbb
mov
icebp
sub
push
sbb
lahf
sbb
repz
mov
jne
push
shll
fstps
test
and
sbb
test
xor
jg,pt
add
mov
adc
fistps
mov
fs
pop
sub
mov
cmp
orb
lock
lret
decb
stos
rcl
add
out
inc
dec
xchg
push
sbb
sub
ret
xchg
add
jecxz
pushf
xor
insb
xchg
loope
jne
psubw
call
js
lock
movsl
add
mov
or
adc
orb
leave
jp
adc
call
pop
jnp
nop
dec
push
jecxz
jp
and
jl
xlat
push
jae
fwait
sbb
rcrb
xchg
and
lcall
pop
jmp
mov
inc
clc
sbb
mov
add
cmpsb
das
add
aas
mov
mov
nop
or
mov
sub
test
xor
ds
or
add
or
fdivl
les
inc
lahf
adc
add
jns
out
fnstsw
scas
dec
add
adc
xchg
pop
pop
or
mov
mov
movsb
pushl
mov
outsb
add
cli
xchg
xor
add
lods
mov
mov
cmp
add
push
sbb
pop
ucomiss
sub
push
jmp
add
into
xchg
cmp
cltd
pop
aam
xchg
inc
push
push
dec
push
lea
sbb
cmpsb
ficoms
pop
dec
mov
mov
cmp
subb
je
je
add
adc
rcll
ficoml
push
repz
outsb
out
mov
push
mov
lods
add
lods
adc
pop
add
std
test
add
testl
mov
clc
fdivl
icebp
cmc
mov
mov
in
shrd
mov
adc
out
int3
loop
mov
dec
insb
adc
mov
sbb
sbbb
ret
sub
mov
das
lea
and
and
or
jbe
mov
cmp
jle
add
mov
addl
int
xor
in
add
lahf
xchg
lods
and
in
or
cmpb
inc
lret
add
cwtl
adc
or
les
fmul
test
sub
fistps
mov
and
mov
xlat
sbb
sbb
in
inc
or
jg
lock
add
fwait
mov
and
loopne
in
push
push
sub
mov
inc
adc
adc
xchg
ss
push
inc
or
das
inc
icebp
notb
or
cmpsb
mov
lock
sbb
inc
cwtl
add
mov
jp
add
test
add
repnz
inc
pop
or
mov
in
rcl
lds
loop
jne
test
or
jge
xchg
pop
rcrb
inc
testb
pop
movsb
sub
lret
fs
pop
or
mov
cmp
call
je
enter
xchg
cmpb
pop
add
aas
dec
clc
in
movsb
jmp
add
sahf
sbb
dec
es
lcall
cmc
mov
cmp
inc
stc
test
mov
ja
lods
imul
fldl
mov
nop
dec
mov
mov
add
sub
ret
mov
arpl
mov
jmp
sbb
push
repnz
xchg
pusha
add
xor
mov
jecxz
aad
cli
into
incl
dec
clc
pop
or
add
call
sbb
enter
pop
xchg
cmp
xor
bound
popl
xchg
and
test
cld
add
rcr
test
sbb
cld
mov
ljmp
pusha
cmc
push
or
xor
add
xchg
add
pop
add
loope
push
lods
add
push
add
shlb
in
pop
fadds
xor
and
cmpsl
xchg
inc
sbb
andb
pushf
add
dec
xchg
pop
dec
mov
push
jbe
rcrl
daa
xor
aaa
xor
dec
cmp
and
or
fwait
xor
add
add
add
shl
outsb
xor
xor
shlb
mov
sbb
cmp
sub
xor
mov
sahf
adc
mov
stos
or
or
sbb
js
dec
movsl
out
jl
ret
das
jno
adc
xchg
adc
stos
cmc
in
and
testb
adcb
adc
add
ljmp
leave
pop
pusha
aad
add
jmp
pop
cmp
imul
nop
mov
add
jae
mov
and
jno
aam
mov
fbld
iret
fsubr
add
pop
mov
cld
add
daa
xchg
insb
inc
sub
jmp
shl
adc
xor
push
sub
mov
clc
sub
ss
pop
cmp
rcrl
repz
test
mov
sub
stos
aaa
sbb
sbb
push
pop
pop
push
repz
jo
fadds
sub
and
call
jl
add
and
mov
mov
sub
push
dec
add
mov
inc
lahf
insb
sub
dec
cmp
test
adc
pop
and
adc
in
filds
aas
popa
dec
pop
mov
fcompl
fildl
rol
cmc
icebp
or
in
lds
push
nop
add
sbb
andb
dec
or
or
lcall
add
inc
mov
cmp
push
dec
add
mov
xchg
addl
arpl
bound
iret
add
pop
dec
scas
addr16
xchg
imul
cli
adc
and
inc
mov
aaa
adc
mov
mov
push
add
pushf
sbb
add
jae
pop
jge
dec
mov
or
testb
mov
add
es
in
hlt
mov
xchg
or
and
dec
data16
insb
and
xor
stos
jp
ud1
dec
in
mov
loop
fiadds
inc
hlt
or
pop
push
sti
cwtl
aam
cli
and
add
sbb
fmuls
call
jecxz
je
cmp
push
addr16
test
sti
jae
add
jge
aaa
add
push
lock
shlb
cmp
xor
lods
iret
sub
dec
jae
pop
repz
cmp
flds
add
lds
sbb
aaa
add
push
xor
xor
add
mov
mov
mov
and
add
ljmp
mov
cmpsl
and
sub
or
js
push
or
dec
test
adc
mov
add
jbe
pop
pop
ds
lea
sbbb
jo
mov
sub
stos
add
scas
fs
inc
fidivrs
cmp
xor
xor
dec
out
xchg
add
out
mov
add
in
push
aas
cmp
pop
les
or
imul
fwait
add
fsubs
inc
sbb
nop
mov
mov
sahf
add
fwait
xchg
mov
dec
test
fisttps
and
jmp
add
xlat
pop
je
dec
pop
xchg
ror
cmp
xorb
mov
pop
sub
mov
insl
cmp
adc
cwtl
call
invd
loope
cmp
cltd
sbbb
adc
mov
aam
roll
xor
dec
sbbl
push
loopne
lret
es
notl
sub
out
xchg
xor
inc
jge
add
xlat
gs
push
aas
add
add
adc
xchg
aad
arpl
and
cwtl
shll
jecxz
mov
lcall
inc
stos
sahf
push
mov
rolb
add
dec
stos
imul
or
add
ljmp
jmp
lods
pop
cmp
push
mov
or
cmpsl
add
xchg
shr
add
loopne
fdivrs
repz
dec
adcb
jbe
outsl
dec
push
into
cmc
mov
int
shld
cmp
push
dec
inc
jl
loopne
inc
add
loope
rdpmc
dec
sub
aam
in
loopne
pop
stc
std
add
pop
int3
mov
add
inc
cmpsb
aas
xor
outsl
pop
sub
or
mov
pop
adc
add
leave
mov
rcll
push
test
add
outsb
add
daa
pushf
insl
add
mov
lock
add
and
std
adc
bound
shrb
test
pop
test
rolb
filds
aad
or
cmpsb
movsl
lock
add
out
rcrb
movl
and
xchg
add
ret
loop
mov
push
call
mov
mov
inc
int3
xorb
pop
pop
add
std
ljmp
jmp
clc
enter
mov
imul
out
loop
add
addr16
dec
lods
ljmp
fmuls
push
add
das
push
insb
inc
adc
in
mov
sahf
mov
out
test
add
xlat
loop
jae
or
cmp
icebp
push
jecxz
mov
addb
fmull
add
push
pop
mov
roll
jmp
test
and
cmp
mov
cmc
mov
add
xor
inc
xchg
fisubl
movsl
add
hlt
jbe
adc
jp
add
mov
add
and
xor
mov
adc
adc
or
cmp
push
popa
mov
movsb
xorl
in
push
dec
add
mov
lods
adc
push
jne
inc
les
in
xchg
lahf
push
jnp
pusha
xor
lods
test
push
sub
int3
add
cmp
and
add
les
inc
xor
sbb
movb
fcoms
in
shl
lea
bound
push
add
push
lods
out
pop
mov
xchg
jmp
lock
push
stos
sub
hlt
cmp
repnz
mov
xor
lds
fcoml
shlb
or
popa
push
add
out
dec
call
sbb
mov
loopne
enter
xchg
lahf
mov
mov
mov
iret
adcb
add
roll
inc
mov
xchg
stos
mov
jmp
movsb
pop
cmp
add
cltd
lods
pop
mov
popa
sub
xchg
sbb
cld
aas
mov
and
shr
fcomps
test
lea
cmp
mov
jmp
jo
pop
js
cwtl
arpl
cmpsb
test
pop
add
fistl
mov
jae
add
ret
popa
add
pop
add
movsl
add
test
cmp
shr
mov
cs
sub
hlt
fcom
pop
in
in
xchg
pusha
repnz
scas
mov
xor
dec
jp
add
inc
mov
push
loopne
das
subb
sbb
mov
aad
cmpsb
aaa
cld
inc
mov
sbb
nop
outsl
dec
out
add
cmpsl
dec
jmp
cmp
jg
add
pushf
sti
sbb
enter
mov
or
mov
xlat
int
leave
outsl
mov
push
int3
sub
mov
push
add
mov
js
mov
or
add
mov
sbb
dec
shlb
sub
push
mov
shrl
add
leave
hlt
paddsw
pop
pusha
aaa
sbb
insl
xchg
or
dec
les
adc
jno
add
dec
mov
jo
pop
rolb
mov
sub
push
pushf
xchg
insb
add
mov
pop
adc
loope
scas
jg
jb
push
mov
adc
pop
mov
mov
pop
movsl
push
dec
or
cli
and
in
inc
dec
out
xor
iret
inc
mov
aad
popa
mov
add
pop
adc
mov
fnstcw
jbe
adc
pop
rep
add
pop
rol
pop
add
sbb
pushf
adc
test
lahf
movsb
mov
std
dec
mov
in
xchg
add
loop
btc
rol
in
int3
and
cmp
into
popa
or
lods
movsb
add
fildll
rorl
addr16
add
or
push
xchg
popf
add
jnp
rcrb
push
push
stos
jo
loop
outsb
inc
lds
divb
add
jbe
xor
cmpsb
stos
add
mov
adc
inc
adc
test
dec
cli
iret
mov
sbbl
sarl
mov
cmp
dec
cwtl
jnp
sub
adc
xlat
orb
or
out
lock
shlb
loop
add
test
mov
sar
xchg
pushf
sbb
inc
neg
mov
fdivrs
stos
add
sbb
sbb
ja
adc
pop
jo
push
mul
in
and
xorl
push
ret
add
int
pop
ret
lock
jnp
jae
add
call
dec
test
repz
fcoml
push
inc
mov
push
iret
call
sti
cli
cld
mov
addr16
sub
adc
xchg
hlt
add
out
pop
test
dec
pop
fiadds
mov
push
roll
pusha
add
jo
mov
nop
xchg
mov
clc
mov
loope
lahf
mov
cwtl
adc
lcall
or
test
ss
pushf
pop
out
jno
and
adc
mov
add
in
bound
add
aas
fcmovnbe
cmc
mov
lahf
dec
add
or
push
xchg
movsb
ljmp
add
adc
dec
movsb
data16
fisubrs
add
sarb
cmp
xor
cmp
sbb
push
fists
insb
jb
mov
inc
lods
fwait
cmp
add
sbb
es
cmpsl
sbb
xchg
addb
fcoml
idivl
add
push
add
pop
inc
add
das
aas
jl
popa
mov
add
scas
xor
add
jmp
out
mov
popl
push
ret
test
ret
daa
pop
popa
stos
imul
iret
aam
or
int3
mov
nopl
add
mov
call
mov
add
roll
dec
int
cs
sub
add
ds
adc
pop
xor
jbe
add
adc
jo
mov
sbb
inc
shl
scas
cmp
nop
or
dec
jge
add
shll
ror
es
enter
repz
in
faddl
pop
jmp
ret
mov
push
inc
push
add
aaa
mov
test
mov
leave
and
lods
ljmp
pop
jae
adc
add
and
divb
ret
dec
pushf
mov
and
pop
int3
insb
roll
arpl
sbb
pusha
lcall
cld
add
jle
inc
adcb
xchg
add
mov
dec
mov
lods
sbb
or
cmp
sbb
imulb
inc
loopne
xchg
sub
or
jns
add
pop
push
stc
xor
cmc
imul
xchg
lahf
xchg
js
inc
add
sbb
imul
and
pop
mov
jecxz
pop
call
jo
mov
into
mov
pop
out
cli
add
inc
sti
cmpl
std
sub
cld
rclb
shlb
aad
data16
push
in
pop
adc
add
mov
mov
and
ja
addr16
mov
mov
popa
fs
fisttps
pop
mov
push
xor
ds
mov
add
aad
adc
mov
mov
sub
xchg
call
scas
cmpsb
and
sub
cmp
daa
cmpb
push
sbb
test
loope
cmp
in
adc
xor
mov
pop
mov
push
aas
xchg
icebp
cmp
adc
jns
mov
faddl
add
les
gs
bound
fwait
xchg
add
inc
addr16
cwtl
loopne
jge
add
incb
sti
sahf
rcr
xor
adc
push
cli
sub
cmpsb
mov
mov
lods
imul
xor
add
fdivrl
pusha
out
mov
nopl
add
jle
push
sub
add
shll
jg
sub
lods
leave
add
daa
test
jl
aas
inc
je
dec
iret
inc
les
lret
sbb
add
fwait
shlb
iret
xchg
add
int
pop
add
cmc
sub
inc
and
push
add
xchg
mov
icebp
pop
add
arpl
lods
lahf
addl
push
add
inc
fidivrl
xor
mov
add
xchg
loopne
cmp
jge
jno
fs
push
mov
mov
push
cmp
xchg
jl
jge
clc
adc
andb
xor
jae
sahf
add
jmp
into
add
dec
faddl
inc
pop
popa
add
movsl
inc
repnz
add
add
lock
sbbl
popf
jecxz
sub
push
dec
pop
add
push
out
adc
add
fwait
enter
cmpsb
lret
daa
ret
gs
int3
movsl
mov
pushf
lds
fsts
imul
lods
loopne
int3
not
xor
pop
lds
dec
cmp
cmpb
mov
jno
enter
out
push
loope
jns
jecxz
mov
pop
repz
or
adc
sbb
pusha
sbb
stos
xlat
pop
and
lock
or
fnstsw
add
jns
aam
push
push
out
dec
sbb
pop
clc
out
dec
add
mov
test
mov
or
add
pushf
or
sub
add
cmp
add
cmp
mov
xor
aad
dec
mov
push
rclb
cli
jbe
xchg
cmpsl
xchg
sub
mov
pop
imul
js
add
jne
roll
xchg
stc
adc
loope
hlt
jge
and
push
pop
andl
faddl
shll
xor
mov
adcb
pop
shr
andl
call
pop
shr
xor
mov
imul
aas
das
jge
int
lret
xchg
push
add
xchg
cmp
arpl
mov
adc
jns
mov
loopne
loope
mov
orl
shlb
rolb
mov
or
popa
negb
add
mov
inc
in
dec
aad
adc
push
mov
or
jmp
mov
push
push
xchg
pop
sbbb
xor
push
adc
push
add
or
xlat
idivb
add
mov
jbe
jno
add
pop
sub
stc
clc
add
loope
adc
inc
mov
in
icebp
and
test
test
xor
daa
mov
add
insl
or
and
jle
push
pop
iret
cmp
push
pop
jo
insb
xchg
jl
push
dec
nop
popa
sbb
setle
pop
sub
outsl
cwtl
popa
ret
fisubs
add
add
and
addb
sub
dec
pusha
wrssd
pop
sbb
js
cltd
push
adc
sbb
repz
xchg
mov
xor
daa
push
adc
mov
stc
in
inc
and
pop
xchg
inc
add
pop
shl
lds
sbb
xor
aaa
nop
lods
pop
scas
addb
test
mov
mov
xchg
mov
les
out
xchg
pop
adc
xor
and
and
call
or
sbbb
cmp
mov
pop
adc
sub
mov
cmp
scas
mov
popa
inc
mov
add
clc
or
movsl
insb
add
xchg
xchg
pop
inc
add
pop
repnz
jae
hlt
andb
aaa
fiaddl
dec
xorb
jle
mov
sub
mov
mov
sbb
xor
inc
jbe
sub
mov
or
mov
mov
incl
jbe
dec
ret
aas
sarb
std
mov
out
push
pop
stos
popf
mov
cmp
fcompl
test
and
out
pusha
pop
pop
insl
loop
lods
hlt
push
pop
cmp
pusha
sbb
jo
sub
mov
pop
ljmp
out
inc
in
scas
dec
call
jmp
add
iret
in
push
add
jbe
push
flds
sbb
jle
inc
arpl
mov
in
stc
jbe
sbb
or
cmpxchg
pop
cmpsl
negl
jmp
popf
sbb
inc
insb
dec
test
clc
xchg
jmp
dec
fcoms
ja
cmp
jl
cld
rcll
and
push
cmp
sarb
test
adc
xor
lcall
pop
cld
cs
cmp
outsl
imul
test
cmp
adc
xchg
test
or
add
jb
or
or
test
or
pusha
les
stos
ds
add
imul
roll
cld
ficoml
and
lock
add
cmc
cwtl
xlat
sbb
outsb
jo
sub
sbb
or
fxch
in
add
mov
pop
mov
push
test
pop
bound
add
inc
mov
sbb
add
xchg
out
cli
pop
rolb
push
add
sbb
add
mov
add
mul
mov
cmp
sbb
loopne
ret
cmp
inc
dec
jle
sarb
add
cmc
pop
lret
add
lahf
mov
sbb
test
dec
sarb
pop
out
mov
les
sub
or
ror
mov
add
add
outsb
mov
inc
rolb
mov
lods
adc
mov
mov
mov
adc
and
push
in
cmp
add
push
mov
jo
sbb
mov
fidivs
test
jl
mov
test
and
scas
or
jg
mov
inc
test
loop
out
test
push
adc
mov
cmp
inc
outsl
incb
iret
add
xor
lret
push
rclb
ficomps
aas
dec
in
les
or
or
cmp
xchg
mov
pop
repz
lret
dec
decl
sub
inc
movsl
jmp
push
addr16
test
out
pushl
xlat
or
jno
scas
stos
pop
add
jns
insl
mov
idivb
sub
pop
frstor
int3
in
adc
negb
test
clc
ds
add
ret
stos
xchg
enter
add
xchg
mov
or
ss
sarb
int3
addr16
fcompl
aam
pusha
mov
clc
jnp
popf
xor
cmp
fcoml
outsl
add
dec
and
ret
loopne
cs
mov
push
dec
repnz
lret
iret
arpl
shrb
movsb
icebp
cwtl
filds
aad
mov
in
bound
cld
jb
iret
xchg
or
and
push
imul
xchg
divl
push
pusha
ljmp
sti
push
dec
xchg
in
in
dec
lods
cmovs
repnz
mov
incb
mov
movsb
adc
or
popf
push
imul
or
pop
fs
push
inc
stos
add
lahf
add
pop
mov
pop
bswap
mov
shrl
or
shll
cs
pop
sub
adc
mov
add
js
xor
mov
or
scas
rcl
mov
lods
inc
sbb
sbb
or
xchg
dec
inc
sbb
js,pt
add
aaa
mov
add
popf
pop
icebp
push
mov
cli
arpl
jg
aad
loopne
cwtl
or
test
dec
xor
stos
je
daa
add
mov
mov
adc
aaa
xor
add
stos
clc
dec
mov
nop
adc
inc
repz
mov
push
daa
and
pop
mov
fdiv
imul
in
cmpsl
and
mov
pop
mov
push
orl
stos
out
ret
imul
nop
aam
dec
into
xor
pusha
cwtl
mov
cwtl
and
sbb
push
pop
add
inc
js
icebp
fistps
ret
mov
and
jle
add
xchg
push
jg
and
mov
mov
cmpsl
sbb
imul
jl
rcrb
sub
jo
ret
jmp
stos
and
mov
sub
cld
pop
aad
xlat
and
push
movsl
frstor
icebp
ret
roll
jae
mov
outsl
jle
add
add
mov
test
add
insl
adc
mov
sbb
push
pop
mov
imul
ret
cmc
push
adc
mov
pop
das
xchg
add
aaa
iret
fwait
and
sahf
loopne
add
les
lahf
adc
out
loopne
jns
sbb
repz
inc
xor
int
add
inc
in
jns
add
test
subb
mov
mulb
mov
mov
adc
pop
insl
clc
add
pop
rolb
shrb
loope
adc
sub
movsb
add
sbb
and
popa
fisubl
mov
push
cmp
add
outsl
lahf
fistl
andb
pop
call
push
dec
cmpsb
mov
and
and
stos
cld
add
push
sbb
imull
pushf
mulb
sbb
movsb
jns
inc
cli
add
or
loop
pop
dec
add
sbb
pushf
scas
insb
mov
cwtl
loope
push
xchg
mov
iret
add
push
lds
xchg
hlt
mov
lea
jl
jmp
push
jno
dec
cmp
daa
hlt
pop
and
add
or
pop
xchg
cmpsb
sbb
fcmovbe
push
push
pushf
hlt
or
mov
push
mov
lock
fwait
or
and
mov
and
adc
pusha
loopne
mov
and
in
jp
mov
pop
inc
std
add
jb
xchg
add
mov
les
push
jl
push
sbb
add
pop
inc
dec
jl
and
jo
ja
repnz
xor
pop
pop
xor
cmpsb
data16
and
pop
js
add
test
fsubr
mov
add
add
lcall
sub
xor
adc
mov
idivl
rorb
adc
add
lock
cltd
push
pop
add
loopne
int
sub
mov
mov
xor
inc
addl
sub
lds
aad
sbb
pop
mov
pop
mov
scas
pusha
data16
add
mov
mov
mov
push
mov
add
xchg
sahf
out
mov
xor
push
std
add
jge
repnz
jae
fadds
nop
call
es
xor
xor
push
sti
pop
addr16
and
inc
jecxz
and
and
add
pop
arpl
repnz
mov
or
icebp
or
sbb
and
dec
andb
dec
xchg
add
mov
ror
jp
mov
stos
loop
jno
or
je
fcomp
addb
mov
push
add
shlb
clc
insb
aam
or
gs
add
repnz
cli
cmc
test
dec
sub
add
in
push
jl
add
mov
pushf
xchg
mov
jb
rorb
push
add
mov
or
lsl
sbbl
cwtl
sbb
inc
dec
cwtl
sbb
or
sub
lods
loop
sub
and
scas
inc
out
sub
xchg
cmp
nop
in
jl
stos
pop
add
push
mov
xchg
or
ret
mov
ret
dec
cwtl
enter
out
stos
add
cmpsb
inc
lods
shlb
add
pop
and
in
add
int3
adcl
out
add
cmc
dec
je
ja
pop
clc
add
jg
loopne
inc
add
jmp
into
outsb
addb
adc
aam
sub
xchg
add
sub
pop
in
outsb
fadds
jl
mov
in
test
les
dec
inc
subb
out
jmp
dec
jp
or
add
add
popa
xchg
insw
daa
xchg
jbe
cmp
jl
sahf
in
xor
xor
aad
mov
jnp
out
adc
lcall
xchg
push
test
add
xor
cltd
jg
fcmove
shll
pop
cmpl
dec
push
fwait
test
mov
stos
push
dec
push
stc
adc
out
add
out
cmc
jg
add
sub
nop
push
push
sbb
pop
add
shlb
into
int3
cmp
sbb
fstl
mov
mov
je
fbstp
jge
dec
repz
xor
or
into
add
dec
rcrl
mov
adc
pop
jp
add
adc
cmp
and
mov
add
lods
mov
dec
add
sbb
int3
xchg
stos
scas
mov
call
outsb
jo
mov
pushf
push
inc
pusha
bound
dec
jmp
and
daa
clc
aas
cmp
mov
xor
inc
or
add
int3
clc
sbb
pop
jecxz
mov
push
mov
xor
test
test
cltd
or
and
push
xorb
pop
xchg
pop
bound
dec
andb
add
les
inc
push
stc
add
jge
das
add
mov
lds
jne
pushf
ljmp
lahf
sub
ss
push
jb
loop
xor
inc
movsl
enter
cmpsb
fdiv
push
push
dec
mov
add
xchg
and
jg
rcl
and
sub
inc
jb
and
sbb
test
lahf
xchg
loope
jg
incl
xchg
cmp
sub
movsl
push
mov
lods
insb
add
sahf
push
loop
pop
add
out
scas
stos
aam
cwtl
push
sbb
push
pop
fisttpll
dec
pop
loope
cmp
in
adc
lcall
sbb
jl
rcl
add
call
scas
inc
sub
pop
push
es
ret
add
or
add
jecxz
and
xchg
mov
adc
pop
popf
fs
cmpsl
add
loope
sub
imul
cmp
daa
movsl
std
dec
les
add
jle
mov
ss
pop
cmp
std
mov
sub
cltd
call
fnstenv
fwait
bound
sub
sar
adc
xor
clc
mov
add
push
loop
add
mov
push
imul
mov
and
rol
popf
fimull
xor
and
jmp
jne
add
int3
mov
jo
nop
mov
and
mov
mov
jno
jae
xor
mov
dec
add
mov
mov
sti
jmp
dec
adc
jo
mov
or
pop
cli
add
adc
add
mov
and
cmp
mov
lock
pusha
std
daa
testl
pop
aam
ret
movsl
add
xor
xchg
add
cs
psubq
jl
push
mov
lcall
cmc
jo
xchg
add
fsub
jns
imul
ja
rol
pop
jb
test
imul
cmp
push
inc
test
xor
xchg
mov
shll
xor
push
icebp
lock
mov
incl
cmpsl
cmpsb
pop
mov
inc
xor
pop
int3
add
hlt
jecxz
test
shrb
lcall
jns
pop
cmp
jl
xchg
into
imul
add
push
adcb
add
clc
sti
push
lahf
jmp
xor
fcoms
loopne
ljmp
mov
push
xlat
jl
jecxz
xor
adc
push
sbb
jns
shl
jp
add
dec
ds
rep
cmp
into
jle
scas
jb
push
out
cs
lock
xor
xor
sub
das
inc
adc
movsb
icebp
mov
cwtl
insb
add
ret
sbb
fists
jp
mov
push
cmpsb
xor
or
sbb
xchg
inc
cs
xchg
add
loopne
cmc
adc
jle
and
fmuls
sub
mov
test
push
outsb
imul
rorb
jp
lea
ja
pushf
mov
in
add
out
mov
adc
xchg
push
adc
push
inc
sub
jae
dec
ss
sbb
loope
addr16
mov
sub
adc
aam
jge
push
jo
or
dec
mov
push
ss
mov
xchg
push
xchg
enter
push
jbe
add
pop
mov
pop
xchg
add
xchg
fsts
cmpl
mov
add
loopne
fstpl
or
inc
rolb
dec
add
lds
cmpb
jl
jae
imul
test
fdivrl
mov
popa
ret
mov
movsb
adc
xor
shrb
push
mov
nop
les
sbb
sbb
or
sub
jnp
pop
in
add
and
call
lea
cmp
dec
dec
cmpsb
add
pusha
int
sbb
cld
fnstsw
jns
repnz
push
add
pop
dec
adc
add
mov
push
popa
jmp
in
dec
add
inc
insb
pushl
popf
out
mov
xchg
mov
ret
pop
xor
out
cmp
out
pop
loopne
js
imul
nop
add
mov
push
add
aam
add
mov
cmp
pop
xchg
gs
and
cld
movsb
out
mov
pop
push
mov
faddl
out
mov
dec
ds
xchg
add
add
jmp
push
aas
push
addr16
push
xor
mov
adc
xchg
lock
xor
lock
incb
pop
push
inc
push
and
adc
test
add
and
add
mov
cwtl
mov
incb
js
or
xor
sub
mov
enter
pop
jl
in
cmp
lock
sbb
push
sub
mov
bts
dec
inc
push
movsb
pusha
adc
cmp
add
fs
mov
imull
push
add
outsb
add
add
pop
das
mov
and
repnz
dec
je
or
pop
clc
scas
and
sbb
or
loop
pop
mov
and
mov
pop
pop
sbb
cmp
jmp
sbb
cmpsl
push
addb
jb
mov
add
cmc
hlt
icebp
or
inc
cld
add
scas
jmp
sbb
repz
add
shll
or
mov
gs
mov
add
aam
aaa
mov
add
cmpsl
jne
jb
mov
mov
add
adcb
or
dec
leave
clc
cmp
ficoms
adc
cmp
push
out
jno
and
cmp
aas
inc
add
testl
test
movsb
add
add
dec
and
pushf
pusha
inc
sahf
in
pop
add
ret
out
dec
pop
cmpsb
xor
jge
dec
mov
xor
xor
push
add
shrd
clc
scas
pop
fwait
pop
call
shrb
sbb
loop
mov
or
repnz
or
dec
data16
inc
fmuls
pop
add
xor
xchg
jp
add
fidivrs
pop
mov
sbb
add
clc
push
or
cwtl
pop
jo
aas
sbb
fisubrl
xchg
inc
sbb
xchg
add
inc
aas
xchg
fistpll
dec
xor
or
inc
sti
add
ds
mov
or
mov
popl
or
lds
push
xchg
movb
js
insb
mov
lret
sbb
or
inc
fwait
add
std
or
or
add
pusha
mov
add
loop
inc
in
aas
pop
mov
shl
scas
xchg
adc
fmuls
cmp
dec
jmp
nop
xchg
dec
inc
push
test
cld
insl
imul
add
cmp
mov
clc
or
rcll
ja
push
pop
or
mov
test
in
add
push
push
push
stos
push
rolb
out
lds
or
add
ret
lock
cmp
aad
adcb
add
or
sbb
les
subb
or
andl
xchg
sub
mov
mov
jp
add
sbb
jbe
je
int3
insb
add
xchg
add
shlb
sbb
mov
inc
enter
ds
test
and
test
sar
push
setb
and
stos
or
pop
stos
push
jae
lcall
xchg
mov
add
sbb
ja
add
cwtl
loope
scas
xchg
add
stc
in
mov
xchg
mov
stos
add
pop
and
cmpsb
mov
xor
sub
dec
loopne
jl
or
push
addb
jae
ljmp
cmp
cld
stos
jno
add
out
cmc
daa
test
les
push
jle
sub
jge
sti
adc
mov
mov
lods
leave
pop
or
or
ret
dec
sub
or
lea
and
adc
and
lods
push
clc
jle
js
mov
fsubrs
gs
jne
es
pop
and
xchg
add
shlb
ja
or
mov
into
mov
cmpsb
mov
hlt
add
jnp
fcomp
mov
mov
in
mov
add
add
add
inc
mov
rolb
cli
inc
rolb
cwtl
lcall
ret
mov
mov
scas
add
stos
mov
std
lret
imul
mov
inc
cmpsb
andl
xchg
mov
loopne
outsl
sub
sbb
loop
aam
dec
pop
xchg
jns
dec
and
sarb
inc
pop
or
icebp
call
aam
add
fsubrs
push
xlat
shld
call
add
inc
dec
adc
out
sbb
cwtl
outsl
dec
outsb
push
movsl
xchg
mov
stos
rclb
imulb
popa
mov
lock
mov
repnz
mov
nop
pop
jl
fs
mov
lcall
mov
std
xchg
orl
xchg
fadds
xor
jl
adc
bound
xor
bnd
mov
sub
cmpsb
movsb
sbb
adc
popa
data16
jbe
insl
push
adc
xor
jp
jo
jo
mov
lods
and
sbb
aaa
nop
add
mov
clc
cmp
mov
fwait
out
scas
nop
push
subb
push
js
lods
jge
pop
jno
popa
and
add
stc
outsb
insb
es
mov
pop
in
mov
rorl
xlat
add
sub
or
jg
adc
add
ficoml
rcr
xlat
pop
lahf
les
mov
mov
jb
add
or
add
push
inc
and
sub
aaa
scas
outsb
sbb
cs
cmovae
std
add
pop
outsb
fs
jae
dec
cli
inc
adc
cmpl
xchg
testl
push
push
add
and
sub
clc
imul
mov
lods
push
push
mov
sub
loope
rolb
xchg
add
xchg
add
pop
inc
inc
outsb
sbb
movb
mov
xchg
xorb
push
pop
mov
mov
adc
push
xor
stos
add
push
xor
add
fwait
ret
cmp
dec
lock
daa
add
aad
jae
insb
mov
rolb
push
pusha
ljmp
arpl
lea
add
aas
movsl
test
add
push
jg
cmp
aas
push
dec
arpl
dec
mov
add
inc
mov
jg
add
xchg
ja
lahf
orb
xchg
inc
sbb
fisubl
clc
mov
inc
add
mov
fcomps
push
shll
lock
push
repz
pusha
mov
xor
test
sahf
in
pushf
addb
xor
cmp
add
add
or
shrl
rolb
pushf
in
mov
add
or
xor
shlb
nop
xchg
aam
sbb
shl
mov
stos
push
mov
bound
subb
std
mov
push
repz
jno
stos
cmp
je
in
dec
cld
test
sub
dec
jge
adc
mov
and
lcall
pop
cmovne
out
mov
iret
add
mov
and
loopne
adc
cmpsb
subl
push
jmp
mov
sub
adc
mov
sbb
or
shrl
ljmp
push
pop
cmc
jmp
add
pop
push
nop
test
lea
lahf
or
push
loopne
movsb
push
add
mov
and
jnp
push
add
add
loope
jp
test
ljmp
sbb
and
cmp
bound
popf
jnp
pop
jbe
sub
in
mov
inc
or
repz
aas
ss
dec
fdivrs
push
mov
sub
push
fs
cmpb
mov
add
pop
call
dec
repz
lods
rcrb
das
push
add
sub
cmp
jle
xchg
and
xlat
dec
mov
nop
mov
sahf
stos
mov
add
nop
mov
inc
aam
das
test
cmp
add
repnz
mov
pop
mov
lcall
sub
mov
leave
imul
ret
push
sub
popa
or
mov
lods
bound
in
dec
or
inc
test
mov
rolb
jl
clc
loopne
add
insb
and
pop
mov
insb
scas
xor
sub
call
nop
mov
icebp
or
int3
out
shll
add
daa
push
xor
mov
imulb
es
dec
enter
jae
into
mov
loop
jmp
in
or
adc
jns
popf
add
push
jnp
jb
shl
sbb
pop
sbb
mov
repz
add
scas
out
pop
mov
pop
insb
lock
add
inc
sub
pop
jbe
ja
jecxz
sbb
lcall
mov
jne
xorb
int3
orps
les
or
mov
cmpsb
or
cmp
fnsave
dec
lock
sub
inc
add
inc
sahf
repz
xchg
popa
dec
adc
cmp
outsl
inc
push
jne
or
fnstcw
add
add
xchg
cmp
cmp
inc
testb
cmp
div
rolb
pop
das
cmp
les
add
add
enter
imull
jl
add
mov
stc
sub
add
in
movsb
jnp
scas
mov
movsl
push
xor
insl
into
add
push
adc
mov
add
push
and
ds
add
push
adc
sbb
mov
xchg
sub
add
sub
test
std
jmp
push
insb
jp
mov
add
add
jbe
lahf
in
jbe
nop
and
mov
outsl
hlt
xchg
add
inc
sbb
jl
add
push
add
pop
fldln2
sbb
mov
mov
jmp
push
inc
mov
cli
jge
daa
inc
sarb
xchg
test
cmpsl
ljmp
iret
ss
add
test
jae
cli
clc
pop
rclb
inc
fsubrl
pop
or
add
mov
imul
aaa
clc
or
je
test
shl
push
test
cmc
daa
out
xchg
push
sbb
sbb
jno
js
push
add
sub
sub
xchg
out
and
dec
int
mov
insl
add
fildl
cmpsb
insb
add
sbb
hlt
test
gs
jnp
add
stos
les
mov
or
and
jecxz
jg
out
stos
push
mov
sbb
bound
jne
or
or
lret
out
cmp
push
int3
pop
pop
xchg
daa
xor
jne
adc
push
xchg
or
mov
cmp
or
xor
scas
fs
fcomp
test
add
jle
xor
adc
jo
enter
dec
filds
dec
repz
sbb
sbb
and
add
dec
dec
or
cli
add
xor
mov
stc
lahf
xor
out
xor
lea
scas
inc
das
sahf
insl
add
shll
mov
push
xchg
pop
aaa
orb
pop
mov
xchg
mov
push
outsl
fstpt
add
xlat
jae
add
pusha
or
aas
mov
sbb
pop
cmp
jle
add
push
xlat
fidivl
add
inc
pop
lret
jno
mov
add
js
iret
add
stc
fwait
xchg
fmul
cmp
popf
loopne
out
add
mov
dec
or
paddq
push
pop
sbb
push
cmpsb
mov
insl
mov
rorb
jo
nop
test
subl
imul
add
je
push
aaa
loope
pop
jecxz
dec
or
subl
adc
das
dec
out
test
shll
out
pop
bound
cmpl
loope
test
pop
xor
adc
mov
add
push
daa
ja
dec
xor
fmull
roll
stos
pusha
sbbb
rorl
add
in
cld
rcrb
js
pop
pop
push
shlb
std
cwtl
ljmp
pop
mov
adc
xor
lret
sbb
xchg
sub
addr16
mov
add
sarb
movsb
mov
jae
xchg
cld
sbb
mov
xchg
repnz
cmpsb
mov
inc
or
dec
inc
adc
sbb
aam
imul
mov
and
ret
or
imul
add
data16
nop
cmpsb
jns
dec
sub
add
pop
bound
imul
lcall
add
mov
and
daa
push
dec
rcr
js
rol
inc
push
out
adc
jle
ja
pop
dec
cmpsb
pop
mov
int3
sbb
jg
add
sub
aam
mov
stos
mov
cmp
sub
push
jb
mov
pop
add
andl
add
sti
xadd
mov
jnp
dec
cmc
xchg
sbb
cmpsb
add
loope
push
inc
cmpb
ret
imul
mov
pop
test
mov
pop
roll
mov
insl
mov
adcb
popa
icebp
mov
jl
test
cmp
leave
add
std
loope
or
pop
pop
mov
sbb
imul
es
jmp
int
scas
pop
cmp
add
out
pop
sbb
stos
add
sub
imul
or
add
and
sbb
pop
dec
dec
jg
sub
aas
in
add
push
movl
dec
int3
je
in
pusha
pop
jp
add
in
cmpb
dec
push
add
inc
add
das
push
mov
jg
sbb
add
hlt
adc
mov
popf
pop
fwait
xor
notl
mov
pusha
add
mov
gs
cmpsb
int
out
movsl
insl
xchg
cltd
arpl
push
xorb
pop
cmp
adc
and
add
ss
loopne
add
adc
outsl
add
jo
fimull
pop
or
fdivs
daa
and
incb
add
push
notb
mov
je,pt
dec
cmp
adc
sbb
hlt
jb
add
shll
adc
fsubs
inc
and
popa
cmp
sti
pop
dec
xchg
xorb
mov
xor
add
dec
outsb
add
mov
jae
sahf
cmovle
mov
xor
popa
mov
mov
enter
lea
stc
mov
sbbl
enter
add
jge
pop
fnstsw
cmpb
cmp
xor
add
dec
out
push
or
mov
jle
cmp
fsubs
add
and
or
or
cmp
mov
jb
add
push
mov
pop
pop
mull
cmp
rorb
into
add
aad
jmp
jno
fwait
mov
mov
out
push
xor
and
repz
or
xchg
addb
hlt
sub
sbb
cwtl
jns
add
jmp
jle
inc
lock
sub
or
and
cmpsl
dec
add
jnp
add
add
cmp
jg
dec
add
adc
lcall
subb
lret
gs
add
cmpsb
mov
stc
jnp
pop
sub
sbb
or
test
jg
jo
shl
jmp
int3
pop
mov
scas
jg
add
data16
mov
cmp
add
mov
xchg
enter
sbb
and
inc
mov
add
ficomps
sub
cs
stc
or
mov
popa
mov
add
js
hlt
aam
fwait
add
jno
and
dec
mov
stos
jl
sbb
sub
mov
rcrl
test
cltd
cmp
adc
rcrb
jns
add
jle
and
pop
xchg
or
mov
sub
push
adc
cli
mov
pop
add
cmpsl
les
lahf
bound
mov
in
movl
push
push
scas
fsub
mov
pop
fisubl
ret
cs
shlb
das
lods
out
inc
repz
fs
mov
add
fisubs
nop
ja
and
rcrb
add
inc
add
pop
loopne
adc
cmpsb
add
jne
sbb
adc
pop
cs
ret
mov
cmp
imulb
or
add
jecxz
cli
xchg
test
add
repnz
lock
add
out
xchg
jecxz
mov
enter
fisubs
or
push
mov
pusha
mov
in
or
xor
insb
cld
gs
repnz
loopne
add
mov
jo
dec
cmp
push
in
add
lods
jmp
add
jg
shrl
jne
sub
out
adc
repnz
lods
cld
or
add
dec
outsb
push
sbb
nop
and
sbb
dec
mov
jae
pusha
sti
add
pop
and
aam
fucomi
shlb
sbb
arpl
add
inc
mov
add
inc
dec
add
enter
lock
lcall
xor
pop
jno
cwtl
dec
sbb
xchg
popf
scas
sub
add
jecxz
stc
push
sbb
es
clc
add
fldenv
xchg
aaa
push
outsl
adc
cltd
jb
aad
add
je
or
sub
lods
fdivs
stos
jmp
outsl
out
fisttps
add
sub
push
or
loopne
dec
add
cmpsl
add
daa
jns
or
cld
push
fs
les
add
repz
stc
dec
cltd
add
jnp
dec
pop
adcb
in
icebp
add
pusha
mov
dec
imul
add
lock
sbbb
add
iret
xlat
push
add
cmp
sub
xor
add
int3
lahf
lret
out
mov
sbb
add
call
pop
jb
jo
sbb
add
xchg
adc
push
add
jo
add
adcl
cs
dec
icebp
cmp
dec
sbb
subl
out
add
mov
imul
test
adc
mov
push
bound
jo
xchg
and
iret
dec
inc
push
adc
or
pop
nop
divb
aad
fisubrs
fldl
sub
addr16
test
dec
and
dec
mov
mov
xor
cmpsb
fs
and
add
sub
in
push
daa
add
es
mov
dec
push
loop
dec
push
push
orb
rcll
loopne
idivb
stc
add
inc
pop
sub
push
repz
ljmp
jl
cs
rorl
jp
jns
mov
cwtl
sbbb
add
pop
in
pop
cli
hlt
pushf
add
lock
dec
jnp
push
std
addb
cmpsl
dec
rcl
and
pop
inc
push
add
mov
ljmp
ret
stos
ds
mov
sbbl
daa
push
mov
subl
fsubs
xchg
pminub
add
add
sar
mov
cli
mov
in
rolb
add
or
les
test
pusha
and
aaa
fists
sub
add
ss
mov
scas
adc
sbb
add
sub
aad
pop
pop
add
add
call
ret
addr16
inc
scas
roll
sub
icebp
shl
dec
in
jl
lret
jg
lods
push
popf
cmp
in
nop
and
sub
add
add
dec
dec
add
movsb
mov
dec
enter
fimull
cmp
and
cmpsl
cmp
sbb
imull
repnz
inc
jae
jecxz
ss
jnp
dec
push
fcoms
adc
lcall
in
jl
lea
js
cmp
add
xor
cmc
mov
xchg
dec
mov
or
divl
add
push
enter
addr16
add
cmp
jl
scas
mov
fstps
mov
out
imul
and
aaa
mov
int3
std
scas
frstor
or
out
push
andb
rorb
sub
stos
mov
cmc
sarb
mov
xchg
cmp
add
dec
jecxz
cld
loope
ret
cmp
scas
in
je
push
scas
add
insl
add
pusha
inc
jae
mov
mov
ret
xor
adc
lds
stos
adc
dec
mov
push
popa
fisubl
pushf
push
add
sti
push
hlt
mov
cmp
jns
cld
adc
in
inc
lock
les
sub
divl
mov
ss
pop
and
add
inc
out
adc
adc
pop
mov
mov
xor
add
and
gs
hlt
sub
inc
mov
incb
push
out
push
test
mov
sbb
inc
xchg
callw
mov
ja
pop
add
mov
xchg
scas
pop
dec
xor
sbb
loop
xchg
popf
push
mov
xlat
xor
call
incb
ja
adc
cmpb
xor
xorl
dec
push
clc
clc
jl
pop
xor
pop
dec
jecxz
jle
outsb
fmuls
push
adc
inc
sbb
hlt
sbb
pop
mov
dec
js
add
jae
xchg
notb
mov
dec
dec
xor
pusha
mov
push
mov
jl
xor
call
sub
dec
add
push
xor
mulb
aaa
decl
push
test
inc
inc
push
sub
ret
enter
lock
sbb
iret
mov
jecxz
push
add
push
test
cmp
cmc
sahf
out
add
lods
inc
in
xchg
xlat
and
sbb
push
imull
insb
rol
sub
and
shlb
iret
mov
inc
push
dec
addb
inc
and
jle
js
out
add
inc
mov
repnz
sub
xchg
adc
pusha
add
sbb
rolb
cli
aas
push
sahf
xor
bound
loop
or
lods
pop
sbb
outsl
ds
jnp
dec
shlb
xor
pop
lods
nop
cmc
pusha
jmp
add
pop
xor
xor
cwtl
add
repz
insb
xor
add
cmp
insl
dec
daa
adc
lock
mov
dec
aad
in
push
xlat
dec
mov
add
dec
ret
bound
es
ss
lds
xchg
mov
scas
sbb
add
xlat
inc
movsb
xor
sub
mov
add
movb
mov
push
lds
arpl
push
dec
cmp
fcomp
sbb
cwtl
sub
mov
les
mov
add
and
mov
add
pop
fsubrl
jle
add
mov
adc
inc
xor
rorb
pusha
fidivrl
addl
mov
dec
cmp
mov
jne
xchg
xor
and
test
int3
pop
adc
cs
es
scas
lea
push
movsl
andb
pop
mov
add
mov
sub
mov
call
sub
xchg
mov
sbb
test
sahf
adc
sbb
xchg
hlt
int
clc
dec
sti
add
ret
add
cmp
cmp
xor
shll
add
pushf
in
sbb
rolb
ficomps
mov
sahf
jecxz
jmp
fsubrl
dec
cli
mov
out
add
sbb
sub
cmpsb
or
add
mov
jno
gs
popa
imul
int
sub
add
xor
leave
jmp
dec
lods
loopne
push
push
or
pop
aas
jg
dec
or
mov
cltd
mov
ret
dec
sub
mov
test
xor
push
adc
jbe
jno
mov
call
and
inc
das
jo
lcall
mov
loopne
fs
sti
inc
inc
hlt
lock
add
push
jo
inc
sbb
enter
scas
push
xlat
jne
pop
pop
xor
lahf
add
ljmp
ja
cmp
leave
ret
or
test
popa
sahf
push
outsl
jle
sub
out
pop
push
hlt
add
inc
and
xchg
fstl
sbb
shr
mov
jae
or
add
sub
add
lret
dec
lods
addr16
jge
rolb
xchg
pop
jno
push
xor
andb
loope
push
adc
jge
push
iret
push
and
cmpsb
push
dec
daa
xor
loope
add
push
fcomip
add
sub
movd
add
sbb
sbb
add
cltd
sub
out
filds
int
xor
jb
in
jnp
ret
movl
add
or
adc
or
shrd
hlt
mov
jge
test
fidivs
jp
add
sub
mov
cmp
icebp
mov
pop
stos
hlt
mov
xor
mov
inc
sbb
sub
inc
aad
add
ds
jle
xchg
test
sti
mov
shl
dec
rcr
mov
arpl
push
push
cmp
cwtl
lods
sbb
xchg
movl
xlat
jecxz
aam
add
pop
loopne
cwtl
mov
adcl
pop
xchg
adc
pop
xor
mov
push
insb
and
ss
mov
cmpb
arpl
jo
adcb
xor
rcl
mov
xchg
add
inc
lcall
out
loopne
mov
addb
sbb
cmp
pusha
mov
cmp
roll
push
xchg
and
push
call
clc
add
nop
inc
xor
les
pop
mov
lods
dec
enter
hlt
out
add
cs
add
scas
pop
divl
sub
add
mov
and
sbb
sbb
add
xor
mov
pop
stos
imul
xchg
insb
add
mov
aaa
add
or
cwtl
pop
test
nop
jmp
add
and
push
push
int
lods
cmp
add
jmp
mov
stc
adc
jb
inc
add
lock
mov
pusha
mov
add
movsw
repz
or
lods
test
mov
or
outsb
js
mov
push
sub
leave
lahf
sbbl
mov
or
gs
addb
xlat
xor
rolb
xor
sbb
into
out
add
push
andb
shrb
addl
popa
push
xchg
mov
mov
sub
jo
mov
adc
sub
out
lock
mov
nop
push
sbb
aas
mov
cmc
testb
addr16
adcl
sub
inc
aam
mov
popa
fcoml
mov
outsl
mov
aaa
es
mov
inc
mov
mov
cmp
outsl
pop
push
loope
or
sahf
push
adc
jne
jb
mov
mov
xor
out
rorl
add
or
sbb
test
jge
push
cmpsb
in
push
xorb
imul
idivb
out
or
pop
subb
mov
nop
jno
mov
dec
insb
mov
add
repz
sub
xchg
mov
add
sbb
test
xor
iret
int3
push
ljmp
jle
test
add
dec
test
shlb
decl
add
sbb
mov
pop
add
mov
jl
mov
xor
andb
and
xchg
test
push
sbb
cmp
nopl
fidivl
out
cld
ja
aas
add
popa
xchg
cmpb
fucomip
rorb
mov
addl
add
xchg
outsb
stc
out
add
push
pop
into
fildl
add
hlt
push
aam
popa
mov
or
jl
roll
jo
add
jle
fsubrs
xchg
imul
mov
jno
ljmp
inc
or
cmpsl
cmpb
insl
adc
add
dec
push
or
mov
cli
inc
mov
in
xchg
faddl
pop
xchg
add
mov
in
sbb
adc
add
aam
mov
add
pop
add
pop
ljmp
outsb
lahf
cmp
je
inc
and
jae
push
add
insl
mov
mulb
adc
jecxz
dec
lret
mov
mov
repz
sbb
call
or
scas
push
sbb
sub
dec
popa
loop
and
insb
jno
mov
pop
sbb
cmpsl
mov
lcall
in
add
pusha
lret
inc
and
xor
stos
mov
nop
shl
fwait
pop
dec
fadds
cli
or
xchg
sti
imul
inc
mov
shrb
je
gs
mov
jb
push
out
sbb
add
mov
jnp
or
sbb
gs
ds
repnz
loopne
in
dec
inc
jo
add
fdivp
lds
repnz
rdmsr
aas
mov
or
stos
sbb
pop
mov
lods
shrl
test
pop
repz
rorb
movsl
out
mov
dec
mov
sbbl
xchg
or
je
push
shr
sbb
jnp
jle
jo
int3
xchg
sbb
pop
jb
mov
rolb
inc
imul
xchg
and
jno
xor
daa
inc
jge
jb
or
pop
into
orb
lea
and
push
add
jo
in
rclb
out
mov
jle
dec
testl
add
mov
cmp
fldt
cmp
addl
sahf
cmpsb
jo
cmp
ja
add
jnp
pop
cltd
add
cmp
addr16
cmp
out
sbb
call
push
add
dec
sub
dec
int3
mov
setb
jbe
jmp
push
or
mov
or
add
pop
out
in
xchg
add
std
inc
jle
cs
jl
test
dec
xchg
add
inc
pusha
lahf
adc
popa
adc
leave
test
in
xchg
aad
adc
into
pop
hlt
add
jle
icebp
dec
outsb
dec
cmp
mov
add
sub
std
dec
pop
xor
movsb
add
mov
add
pop
mov
jecxz
adc
aam
out
and
pop
sbb
sub
add
pop
out
jecxz
ss
shll
or
loop
mov
jmp
mov
adc
clc
pcmpgtb
mov
adc
inc
mov
jae
movsb
gs
cmp
push
cltd
push
sub
cmc
les
add
sub
in
add
jnp
fnstsw
sbb
nop
adc
add
sub
or
adc
imul
fs
push
add
lods
pop
loope
jmp
div
mov
add
cmpsb
mov
add
pop
js
jb
in
sbb
dec
sarb
jae
add
js
mov
stc
mov
lods
fmul
xchg
bnd
add
loop
cs
int3
jne
add
pop
fsubrs
pusha
lock
jle
iret
jp
in
popf
jb
sahf
or
cmpb
sub
mov
in
add
jno
testl
divb
jb
lods
mov
ljmp
fs
imul
mov
int
mov
into
leave
add
ret
out
jns
int3
fistps
pop
pop
inc
xchg
mov
int
add
fdivl
mov
and
cmc
inc
daa
pusha
arpl
leave
inc
add
notl
mov
loop
outsb
and
adc
lahf
aas
or
bound
mov
push
in
add
repnz
inc
pop
adc
push
xchg
cwtl
pop
scas
add
xor
jae
nop
or
stos
ds
shlb
push
mov
insl
cmpsl
fiaddl
das
js
or
add
stos
xor
mov
nop
shll
in
add
add
sub
cmp
cmp
arpl
add
stos
push
shr
sub
ss
je
pop
add
enter
jae
push
jecxz
sbb
xorb
adc
clc
push
popf
jno
scas
or
ret
ds
adc
or
xor
aam
pop
fcoms
or
sub
jg
packuswb
lds
add
sbb
pop
push
cmc
mov
or
inc
rorb
enter
cmp
shlb
icebp
jl
repz
sub
add
jg
std
add
mov
cld
lret
add
add
push
bound
add
sub
scas
push
inc
cmpb
adc
shr
and
jns
js
mov
pop
sbb
push
sbb
mov
pop
or
pop
adc
jo
xor
or
imul
leave
add
mov
push
icebp
inc
js
loopne
aad
int3
mov
jae
iret
fucomi
pop
push
add
adc
add
mov
lods
call
cmp
mov
add
jg
and
adc
push
nop
sub
verr
or
aaa
cmp
pop
xchg
test
add
mov
cld
pop
add
dec
lods
cld
loop
or
in
push
cwtl
filds
push
cs
movsb
add
push
aaa
add
outsl
and
jae
mov
adc
adc
mov
sbb
pop
add
loop
add
mov
jmp
test
mov
lahf
icebp
stos
ret
or
cmp
add
mov
jne
add
nop
and
cwtl
std
pop
cltd
add
fsubrs
data16
sbb
out
jns
mov
jecxz
xchg
lret
fimull
cmp
popf
or
lea
push
int3
push
pop
lret
pop
jge
sbb
mov
test
repnz
stc
or
arpl
movsl
mov
pop
faddl
ds
adcb
mov
jecxz
test
push
movsl
and
add
jl
bound
call
mov
add
insl
mov
out
popl
arpl
popf
test
int
pushf
xlat
mov
je
in
mov
lock
in
xor
sbb
xchg
mov
add
push
push
and
cmp
in
cld
daa
dec
jmp
imul
cmp
cltd
jns
mov
push
mov
and
cmp
jno
gs
shl
lods
add
jae
rcrb
mov
mov
add
inc
rclb
cmpsb
mov
out
roll
xchg
roll
xorb
movsb
popa
call
subb
outsb
cltd
cs
jno
add
sbb
push
adc
jne
pop
mov
shlb
add
ds
rcrb
fiadds
ret
push
loop
add
sbb
nop
test
xor
pop
jecxz
inc
inc
pop
jp
lahf
cli
sbb
jg
mov
int
add
stc
lcall
push
and
mov
test
loopne
and
pop
imul
push
add
fsubrl
outsb
jbe
rorb
mov
add
enter
test
add
shll
fdivs
shrb
add
gs
jg
popa
cmp
lret
sbb
push
xchg
add
xchg
fwait
arpl
add
fs
add
sbb
pop
out
jns
jp
inc
js
inc
sbb
jle
add
push
cs
popl
fistps
inc
adc
dec
sahf
jle
pop
sbb
add
mov
jo
pop
cmpsl
popa
add
xchg
push
lea
or
mov
mov
in
or
jae
xor
sub
std
outsb
mov
rcrb
jns
pusha
xchg
pop
cltd
push
cmc
push
cmp
in
mov
xchg
jbe
movsb
push
shlb
test
xor
push
shlb
xchg
icebp
iret
call
jl
pusha
mov
pop
incl
inc
arpl
mov
add
enter
incl
ret
paddw
sarb
lahf
xchg
call
test
push
dec
or
add
outsb
adc
lcall
ss
imul
xor
push
add
pop
les
mov
mull
sbb
or
push
popf
adc
mov
mov
pop
pop
imul
mov
shrb
push
add
mov
mov
jae
movq
sbb
add
jne
and
xchg
pop
or
xchg
cmp
xchg
in
push
jns
lock
add
inc
mov
xchg
lock
pop
pop
lret
sbb
add
stos
sarl
jne
add
out
mov
sub
jle
sbb
imul
inc
pop
add
data16
out
loopne
add
lret
pop
test
stc
fcomps
push
nop
cmpl
add
pop
sub
jmp
les
push
jb
rolb
mov
insb
frstor
xor
lcall
pop
mov
mov
pop
add
call
hlt
fisubl
cmp
add
xchg
adc
add
jbe
pop
sbb
mov
sbbl
lret
enter
lcall
mov
add
out
adc
fldenv
aam
nop
add
add
sahf
and
ja
sarb
mov
push
pop
dec
fistps
mov
inc
imul
push
stos
daa
arpl
lahf
fdiv
add
gs
cli
xorb
pop
out
aaa
decb
pop
orb
and
dec
gs
rcrb
sahf
add
cli
outsl
xchg
cs
cmp
pop
pop
jns
lret
jno
str
push
mov
sbb
dec
jp
or
les
add
xor
fsub
dec
or
mov
int3
add
sahf
pop
adc
mov
daa
insb
and
lds
mov
fidivl
incl
and
or
push
movsl
call
sarb
jno
add
cltd
xor
jmp
push
add
mov
xchg
cmpsl
push
aam
adcb
rolb
sub
cmp
mov
mov
addl
inc
scas
lods
mov
fisubrs
out
dec
adc
pusha
cli
insl
pop
test
jbe
jle
rsm
cmc
mov
inc
mov
inc
add
sub
or
cmp
aam
inc
mov
jne
dec
mov
in
add
inc
pop
imul
add
sub
jae
jb
add
mov
mov
orb
test
movsl
sarb
xchg
inc
sub
ss
dec
orb
add
adc
incb
in
aaa
into
mov
loopne
lods
add
ret
sub
adc
mov
add
mov
pop
lcall
sahf
gs
xchg
loope,pt
adc
sarl
add
outsb
repnz
sub
aas
dec
ret
or
fadds
fnstenv
repz
add
enter
sarl
or
int3
add
stos
mov
add
mov
mov
and
adc
xor
mov
sahf
push
shl
add
nop
js
push
pushf
pop
nop
adc
push
call
push
repnz
inc
pop
jno
sbb
movb
clc
shlb
lock
out
add
xchg
inc
adc
data16
sbb
cmc
mov
or
aaa
xchg
sub
sbb
push
pusha
add
lods
add
movsb
jle
imul
out
mov
jne
and
mov
in
cmpl
add
or
sub
rcr
mov
jle
jmp
dec
test
or
push
pop
and
rcll
aam
cld
add
pushf
jge
mov
cwtl
loopne,pn
xchg
insl
add
cmpsb
loopne
jl
add
call
add
data16
and
negl
loope
add
xor
addr16
inc
inc
mov
xchg
les
movsb
and
inc
aas
sub
push
in
je
add
jbe
push
outsb
into
scas
cmp
cld
sbb
paddd
push
mov
cld
cs
inc
inc
or
mov
in
imul
pop
fsubrl
bswap
jbe
push
lcall
mov
pop
inc
add
and
fnstenv
xchg
in
xchg
aaa
jge
xchg
loopne
addb
push
sbb
adc
pop
mull
mov
xor
or
mov
ja
pop
cli
lods
xchg
pusha
fs
insb
stos
push
push
leave
or
mov
rolb
pop
mov
xor
repnz
sub
fmull
add
xor
push
into
orb
adc
xchg
popf
jmp
movsb
cmp
repnz
fistps
outsb
fnstenv
mov
xchg
xchg
add
sub
inc
push
add
push
jne
test
js
pop
sub
fadds
fdivrl
push
test
add
lret
push
pop
scas
sbb
mov
xchg
pop
and
pop
pop
push
lock
int
adc
or
jno
inc
pcmpgtb
or
cmpsb
imul
aam
add
xchg
add
nop
pushl
add
push
mov
scas
jne
add
loopne
outsb
ljmp
faddl
enter
xchg
clc
mov
inc
js
push
add
dec
sub
pop
push
push
mov
dec
adc
insb
jl
sub
add
adc
push
enter
add
outsl
push
pusha
xchg
mov
mov
cmp
in
shll
not
mov
in
xor
popa
lods
enter
mov
lcall
scas
imul
nop
push
test
daa
pusha
pusha
hlt
enter
jl
aam
dec
or
inc
mov
mov
into
test
add
mov
fcoml
out
add
js
jnp
adc
xor
popf
jne
lcall
adc
xor
ret
xchg
jg
sarb
sahf
mov
add
call
mov
xlat
cmp
neg
loopne
sub
repz
popf
sub
add
add
pop
aam
mov
adc
clc
pusha
add
mov
mov
and
das
add
xchg
fldt
jae
fadds
dec
ja
dec
adc
pop
sbb
andl
sbb
out
dec
add
icebp
loopne
add
mov
dec
add
push
movsl
out
fadds
mov
mov
popa
add
aas
mov
lods
sarl
mov
std
pop
je
lock
test
xor
add
movsl
movsb
popf
xlat
xchg
in
lahf
jg
cmp
mov
scas
movsl
add
pusha
mov
xlat
mov
in
pop
adc
mov
std
pusha
jg
add
push
mov
sub
mov
sub
scas
pop
aas
mov
in
dec
ficomps
fs
jmp
cmc
sbb
fdivs
subl
pop
mov
sarb
jnp
call
dec
andb
add
xchg
mov
push
mov
and
stos
daa
add
add
test
hlt
cmp
cld
push
repz
addr16
add
stos
push
mov
insb
adc
mov
js
add
loopne
roll
inc
mov
mov
mov
adc
cmp
pop
incl
push
cli
into
xchg
cld
insb
outsl
pop
repnz
daa
imul
notl
ret
rclb
and
imul
lods
push
pop
push
inc
add
dec
lcall
adc
clc
sbb
dec
mov
imul
lods
jp
aad
mov
arpl
sbb
in
sbb
les
mov
sbb
lret
sub
sbb
shl
or
cmpb
repz
sub
pop
pop
xor
loope
mov
les
sbb
push
int
jns
push
outsb
je
lea
icebp
pop
add
insl
jo
add
or
in
add
aam
ret
adc
adc
cmp
dec
leave
add
iret
xchg
cmp
icebp
pop
and
jmp
pusha
in
int
push
add
popf
inc
add
mov
and
daa
xchg
bound
dec
cmp
in
add
data16
or
xor
sub
jg
or
add
std
sbb
cmp
dec
in
rol
jae
aad
add
sbb
pop
jne
pop
add
push
ss
cmp
nop
inc
fwait
pop
test
shrl
lret
shlb
addr16
inc
in
xor
iret
pop
pop
imul
out
in
inc
mov
add
cmpb
add
adc
jnp
adc
add
jge
outsb
sub
push
add
sub
shlb
and
sub
adc
and
cmpb
testl
dec
test
ret
cmp
and
adc
xor
insl
inc
dec
add
xor
sub
or
jns
add
mov
rcll
add
scas
push
stos
xlat
shl
cmc
cmp
add
jmp
out
mov
push
and
pop
je
stc
mov
sti
lret
fstp
js
punpckldq
mov
jmp
adc
mov
sbb
aas
add
jmp
clc
mov
repz
sub
add
rcr
pop
icebp
add
push
lret
das
add
movsl
xchg
sub
and
sbb
mov
into
in
aaa
testb
sahf
insb
sbb
fs
jne,pt
xlat
lret
inc
xchg
and
xchg
pop
pop
jo
xchg
add
adc
gs
or
mov
aas
jno
pop
push
push
lahf
xchg
mov
dec
repz
jne
pop
hlt
mov
inc
add
push
ja
dec
out
aas
jl
mov
cmp
sub
rolb
pop
xor
mov
and
aas
test
stos
ret
mov
faddl
xchg
outsb
jmp
scas
add
addr16
inc
idivb
push
add
xor
and
push
inc
js
pop
xchg
repz
xchg
push
pop
inc
cmpsb
sbb
sbb
mov
sbb
fildll
adc
xor
push
xchg
xor
sti
nop
add
xor
pop
or
data16
lods
mov
xabort
loopne
pop
popa
add
cli
adc
test
aaa
loope
mov
test
add
inc
or
sub
adc
decb
mov
and
or
push
jo
add
inc
xor
add
xchg
orl
fwait
incl
xor
pop
and
add
or
cmp
add
int3
pop
test
lods
jo
push
sbbb
xor
adc
mov
in
int
jbe
divb
pop
add
cmp
mov
into
std
jno
mov
mov
jl
inc
out
inc
jne
or
xchg
ror
pusha
cmp
sbbb
out
dec
icebp
mov
pop
pop
add
call
inc
fs
dec
sbb
cmp
add
fnsave
dec
add
sub
cmc
jno
test
gs
fld
xor
xor
and
xlat
fildll
xor
cwtl
mov
ss
xchg
lea
mov
icebp
add
inc
ljmp
adc
push
sbb
add
loope
mov
push
mov
out
sbb
pop
add
fcoms
push
push
pop
int3
cwtl
or
mov
push
add
adc
addl
inc
std
mov
add
cwtl
add
or
das
or
imul
loope
cmp
add
fisttpl
add
je
jae
testl
xor
xchg
xor
or
rcll
sbbb
or
add
imul
lahf
int3
and
mov
add
mov
push
add
sub
and
jbe
pop
xchg
mov
cwtl
movsl
ljmp
fnstsw
rcrb
add
xor
cli
mov
jp
test
sub
fwait
popl
fadd
test
aaa
add
xchg
cmpsl
dec
pop
adc
testl
out
mov
add
xor
in
and
add
push
jg
sbb
lea
cmc
mov
add
in
xor
mov
inc
add
jp
mov
mov
add
mov
pusha
in
adc
fldt
add
cmpsb
shl
add
cmp
push
push
xor
fwait
aad
lahf
adc
mulpd
ja
dec
clc
shll
pop
jbe
pop
sti
pop
icebp
shrl
add
fwait
jge
mov
add
sub
cld
mov
fdivrl
aas
outsl
loop
aad
or
jmp
adc
stc
or
pop
jae
xor
mov
cmc
pop
pop
fsubrs
push
scas
adc
ret
adc
and
rorb
pause
rclb
push
pop
mov
int3
test
mov
push
mov
and
add
ret
rcll
xchg
xor
jmp
out
pusha
pop
or
mov
aam
nop
addb
aad
sbb
push
arpl
push
shlb
ror
xchg
int3
jne
call
pop
or
or
cmp
pop
push
add
inc
jo
aad
dec
push
dec
out
les
inc
scas
int3
das
dec
mov
jecxz
mov
cmpsb
clc
lds
jo
cmp
popa
adc
lret
push
cwtl
insb
xor
dec
add
mov
jae
pop
xchg
cmpsb
sbb
mov
pusha
out
fstps
add
je
jno
jnp
pop
cmpsl
daa
in
cwtl
sbb
add
leave
das
addl
xor
add
out
call
inc
cmpsl
rorl
cmp
imul
xchg
inc
or
or
sbb
in
or
mov
shrb
mov
ja
sub
mov
mov
pop
pop
aam
imul
cmp
loopne
add
movsb
shlb
addb
mov
add
psubsb
push
add
cmpsb
psubsw
mov
nop
add
fxam
adc
add
cmp
cld
dec
add
pop
and
scas
mov
push
pop
add
andl
fnstenv
sub
add
add
rolb
cmp
jb
jg,pt
xor
push
adc
inc
mov
xchg
and
mov
adc
xlat
push
loop
popa
push
in
sub
mov
lods
insl
jns
and
imul
sarl
push
sub
push
xor
dec
jl
mov
ljmp
add
jecxz
mov
call
mov
nop
xchg
bound
push
and
pushf
mov
or
in
push
mov
out
lods
sub
aam
pop
int3
cli
and
lock
fdivrs
pop
idivb
stos
ret
pop
pop
cmp
xor
negb
mov
dec
data16
or
jle
inc
mov
stos
loop
add
add
or
add
lcall
add
pop
repz
test
hlt
cmp
lret
lods
sub
inc
nop
rcrb
mov
fstps
subl
push
add
clc
ds
jle
jecxz
push
and
add
cmp
push
mov
fiadds
jae
iret
pop
adcb
jmp
or
fstl
lcall
mov
daa
fmull
cld
fmuls
sbb
lea
sahf
outsb
scas
in
sti
clc
adc
stos
pop
pop
jmp
fsubr
or
les
out
dec
pop
add
jmp
nop
icebp
add
push
add
jo
sbb
xor
add
add
nop
dec
inc
pop
dec
imul
mov
repnz
xchg
cmp
addl
pop
mov
les
into
insb
push
pusha
sub
fsubr
or
cli
mov
xchg
cmp
pop
lods
loope
jne
jecxz
addb
stos
add
data16
mov
out
into
add
jnp
out
add
mov
cltd
pop
add
mov
push
jno
and
push
fadds
mov
jl
lds
in
rcr
lea
and
xor
decl
jo
ds
cwtl
aaa
inc
mov
in
xchg
or
gs
popa
enter
jno
leave
adc
in
xor
xor
sub
std
or
jl
lea
add
adc
add
mov
out
sarb
arpl
pop
pop
pop
mov
jo
inc
out
dec
andb
add
inc
daa
lea
add
ja
popa
inc
cmp
push
es
dec
imul
xchg
push
and
arpl
in
pop
test
popf
cmpsb
mov
mov
add
leave
inc
and
cmpb
push
loopne
out
lods
pusha
mov
pop
in
fcoml
xchg
cmp
outsl
ljmp
shlb
fcmovnb
xor
arpl
loop
loopne
icebp
xchg
decl
add
lods
jl
add
push
mov
loope
std
jbe
cmp
inc
sub
jb
add
cmc
xorb
push
push
and
out
add
nop
jo
sti
xorl
fildl
hlt
adc
add
lahf
add
into
fdivrs
mov
pop
int3
xor
push
add
out
push
in
mov
jnp
cmp
adc
push
jnp
lock
cwtl
lret
add
add
xchg
mov
adc
inc
stc
adc
enter
xchg
stos
cmp
ret
aas
adc
inc
add
test
movsl
mov
cmc
jge
cmp
js
das
adc
dec
add
push
rcrb
ss
mov
or
add
dec
adc
fcompl
mov
in
mov
inc
mov
xchg
add
aam
ret
fiaddl
gs
repz
and
out
sub
push
push
test
enter
pushw
mov
mov
or
xor
sbb
lods
push
arpl
movsb
je
add
mov
push
jbe
add
sub
sub
add
stos
adc
roll
pop
sub
jmp
and
stos
add
pop
rcr
add
lret
sub
lret
jp
enter
jae
mov
dec
jbe
inc
pop
pusha
shlb
add
js
ljmp
push
les
imul
sbb
jp
or
xchg
int3
add
outsl
into
es
std
cmp
or
pushl
push
cmpb
fs
int
pusha
scas
adc
sti
cmp
pop
das
inc
cmp
or
popa
jmp
scas
add
xchg
dec
sbb
or
sub
lcall
pop
push
mov
xbegin
aaa
jge
adc
add
stc
test
dec
lods
cmp
addb
pop
sbb
scas
cld
repnz
add
sbb
push
sub
outsl
add
pop
cmp
sbb
int
push
add
rorb
lds
pushf
mov
pop
adc
add
mov
sub
pminsw
in
in
and
pop
mov
call
xchg
outsl
fsubp
incb
ljmp
mov
scas
and
add
push
stc
clc
mov
lea
ljmp
or
sub
and
es
inc
pop
loop
cmp
xchg
pushf
scas
repz
cmp
cmpsb
inc
add
mov
gs
mov
add
ret
add
imul
inc
rclb
sbb
cmp
mov
pop
rcll
add
dec
fisubs
pop
sarl
rclb
loope
aaa
movsb
shlb
cmp
hlt
push
in
adc
incl
je
dec
cmp
test
inc
add
and
xchg
pop
add
js
or
add
jge
pushf
imul
or
mov
add
dec
sbb
inc
adc
jns
mov
xorl
add
dec
clc
enter
mov
sbb
and
pop
jae
les
mov
out
test
lea
add
dec
xchg
dec
cmp
dec
adc
fcomps
or
les
sub
add
adc
mov
xorb
push
fwait
jmp
imul
or
movsb
mov
push
test
mov
jo
lahf
lea
cmpsb
rolb
inc
out
adc
mov
loope
icebp
gs
ljmp
cs
nop
aaa
shr
xchg
push
je
or
add
sub
rcr
aaa
push
addr16
pusha
mov
out
xor
scas
or
lock
mov
iret
jl
pop
cmp
jmp
icebp
or
bound
cs
adcl
xor
pushf
mov
inc
mov
adc
nop
repz
or
test
fldt
jo
js
push
cmpl
jge
ljmp
popf
in
add
loope
or
ds
lcall
sub
cmp
jnp
or
lock
xchg
mov
movaps
xor
imul
sbb
rol
mov
pop
in
xchg
sbb
add
mov
cli
inc
rol
in
pop
jp
sbb
in
ljmp
inc
push
out
jle
push
pop
loop
push
or
push
inc
add
fucom
outsl
mov
adc
add
aas
adc
inc
push
repz
pop
mov
cmp
shl
fdivrl
das
cs
in
sub
inc
test
mov
inc
or
pop
fcomps
clc
jl
xor
fldlg2
and
xchg
and
test
sub
pop
jle
es
add
xchg
mov
in
mov
loope
bound
hlt
add
test
scas
push
arpl
ret
dec
mov
add
adc
push
popa
out
outsb
push
dec
or
cmp
cmpsb
scas
pop
xlat
add
pop
or
adc
jmp
fnstcw
inc
shlb
repz
cs
out
in
or
and
or
inc
sub
rcr
mov
pop
push
and
mov
cmp
icebp
mov
adc
daa
aaa
scas
dec
add
mov
xor
shlb
dec
add
push
orb
add
or
fdivrp
insb
mov
stc
cmp
push
sub
xchg
or
adc
lock
mov
add
repnz
xor
inc
xor
lcall
mov
add
dec
rcrb
call
xor
sub
fucomi
cmp
push
push
das
cld
add
add
xor
lea
push
and
inc
subb
jo
mov
push
fsubrl
sbb
push
adc
rolb
shrb
push
dec
sar
add
push
daa
sbb
in
call
mov
add
cmp
jnp
je
movsb
dec
daa
stos
imul
aam
sbb
scas
sub
arpl
or
pop
or
pop
pop
inc
and
clc
jb
fadds
pop
dec
mov
push
sbb
das
xlat
mov
jno
scas
pop
pop
je
push
adc
sbb
sbb
inc
call
cmp
shl
ljmp
enter
pusha
stos
mulb
adc
xchg
lahf
sti
add
test
inc
push
sbb
dec
lods
jb
add
mov
push
das
sahf
enter
cmp
lods
and
aad
cwtl
roll
mov
xlat
sti
mov
test
push
xchg
ljmp
add
xchg
mov
cmpsb
rcrb
pop
push
and
push
cld
sbb
in
filds
ret
sub
and
lock
das
add
bound
push
mov
dec
xor
and
xchg
inc
aas
push
mov
xorl
in
or
ss
inc
sub
sti
cltd
xor
int3
dec
and
add
insb
scas
push
push
jo
rcrb
pusha
stos
adc
mov
inc
mov
outsb
rclb
popa
fcmovnu
pop
cld
jb
js
add
inc
mov
add
sub
stos
or
scas
push
add
sbb
out
push
loope
dec
jmp
add
int
xor
dec
or
xchg
stc
mov
sarb
aad
pop
int3
ficoms
rol
into
test
fbstp
pop
pop
bound
add
insl
mov
pop
pop
and
daa
add
xchg
idivb
mov
ret
mov
sarb
ljmp
loopne
in
add
das
arpl
enter
cmp
and
pop
sub
xchg
cld
cmp
pop
into
xor
add
fisttps
leave
push
add
mov
jno
stc
or
fs
adcb
adcl
pop
js
cmp
and
jg
pop
addr16
test
mulps
sub
add
lock
mov
xlat
xchg
xchg
inc
pushl
sub
or
mov
cmc
push
push
lds
push
test
ret
insl
add
dec
mov
or
andb
ret
lock
xchg
bsr
das
outsb
lcall
subb
add
dec
fsubrl
je
add
test
dec
add
inc
xchg
sub
and
fstpt
cmpl
adcb
clts
decl
add
dec
mov
jae
xchg
pop
insl
pushf
adc
bswap
adc
xor
sahf
pusha
xchg
and
inc
add
push
sbb
sub
sub
xor
jg
loop
xchg
cmpsb
adc
pop
inc
mov
and
mov
fidivs
pop
pop
jmp
scas
add
outsl
pop
les
popf
lret
dec
dec
mov
js
or
sahf
loope
loop
mov
and
jno
push
das
add
inc
mov
subb
in
sub
xchg
bound
jb
mov
add
and
push
lods
call
repz
popf
lea
inc
or
xchg
lret
push
stos
out
adc
add
add
fs
push
add
mov
loop
push
adc
and
fsubs
cmp
jg
dec
ds
inc
dec
mov
push
mov
xchg
loop
test
int
sub
rcr
addr16
hlt
add
jl
cmp
lods
inc
mov
and
push
outsl
cmpsl
dec
jp
clc
loop
sub
mov
xchg
adc
test
enter
mov
mov
popl
dec
imul
add
out
dec
movsl
xorb
add
add
fwait
cmp
adc
cmpsb
xorb
and
jno
add
mov
xchg
and
dec
dec
lods
pop
pusha
push
and
mov
add
stos
daa
push
fucomi
add
cmp
sbb
inc
loopne
fiaddl
sti
cmp
hlt
test
mov
push
movsl
inc
jae
or
pusha
clc
dec
xor
inc
cmp
imul
xchg
sbb
jle
ja
push
lea
dec
inc
mov
loop
mov
pushf
shlb
jo
ret
outsl
add
insb
in
sbb
inc
test
cmp
mov
or
jne
mov
add
inc
lods
in
pusha
loope
add
and
push
pop
lcall
imul
idivl
pop
je
mov
in
xor
add
add
nop
js
xor
sub
imul
std
rorl
jae
loope
adc
push
sahf
pop
xor
sbb
daa
pop
lcall
add
xchg
jbe
adc
sbb
pop
add
pop
scas
cmpsl
and
xor
gs
add
pop
mov
in
nop
jbe
in
xor
add
pop
loop
and
push
les
adc
call
push
clc
inc
or
or
movaps
pop
jmp
ja
shrl
clc
adc
push
hlt
roll
scas
ret
arpl
sbb
sti
or
mov
add
sbb
stos
adc
movsl
jp
add
lret
aam
in
push
add
or
lcall
js
fs
mov
pusha
lret
xlat
filds
cmp
jmp
sbb
add
std
stc
xor
daa
push
mov
jae
sub
cmp
sbb
inc
cmp
and
mov
xor
mov
mov
pop
sbb
xchg
mov
jo
ret
loope
push
xorb
gs
jmp
push
jl
dec
mov
push
sbb
mov
shrl
stos
iret
nop
push
sarb
mov
add
sub
cs
fcoml
repz
add
ret
jmp
fcom
test
lods
cmpsl
jns
dec
test
mov
sahf
fidivrl
jns
sti
popf
pushl
add
sbb
outsb
leave
sbb
add
jae
in
test
imul
push
cwtl
aam
xchg
cwtl
fcoms
jo
nop
push
mov
popa
adc
xlat
jl
adc
outsb
push
add
arpl
xchg
cli
jle
add
shlb
cmp
add
int3
mov
xor
ret
arpl
rcrb
add
and
add
cmp
fwait
add
sbb
test
es
call
in
aam
in
xlat
fdivrp
xor
push
jno
fs
flds
rclb
fwait
mov
out
fistpl
xchg
cs
and
pop
pop
orb
adc
pop
pop
pop
pop
sbb
rorb
inc
in
push
jb
adc
fwait
nop
nop
int3
ret
inc
in
or
add
dec
cmp
sub
xchg
adc
ret
sbb
push
push
lcall
adc
and
mov
xchg
jecxz
or
mov
xorb
mov
mov
push
mov
leave
mov
in
pop
sar
add
call
subb
xchg
add
fiaddl
push
push
and
xchg
add
stc
cmpsb
pop
fsubl
cmp
call
dec
rcrb
xchg
cs
jge
jg
add
call
fldenv
or
xchg
mov
jg
cmp
xchg
in
subb
sub
adc
jbe
xchg
sarb
xchg
pop
or
pushf
inc
cli
test
adc
ja
ljmp
sub
insb
and
das
mov
xchg
add
pop
sbb
jb
jbe
mov
push
add
stos
or
push
push
pop
cmp
les
push
dec
push
adc
rcr
sub
outsb
es
lods
sub
mov
pop
out
add
dec
dec
das
out
repnz
and
mov
jge
mov
aam
mov
pushf
add
in
cli
aaa
and
add
js
aas
push
cmp
mov
rolb
aad
add
and
dec
jmp
outsb
mov
add
add
add
lock
sbb
add
ret
repnz
mov
push
mov
jne
mov
lock
arpl
lret
mov
fcoml
imul
jo
sbb
fcmovbe
shr
and
loopne
rcll
mov
pushf
aad
jl
add
int
mov
lods
lcall
pop
scas
mov
jb
int3
pop
stos
lock
cmp
addr16
test
sbb
jge
gs
inc
add
xchg
inc
sub
pop
ds
pop
sub
rorb
nop
ss
xor
push
mov
mov
ss
and
scas
sbb
outsb
in
dec
add
and
add
mulps
dec
lea
ljmp
addr16
ficomps
jl
icebp
xor
fs
cmpsl
mov
pop
aas
pop
in
dec
push
jmp
add
lea
ljmp
cmp
add
xor
cmp
jle
andb
mov
and
sahf
pop
and
orl
loopne
mov
pop
out
add
mov
movsl
add
adc
decb
cmp
push
jp
in
lret
mov
mov
hlt
aas
je
mov
addr16
xorb
push
cmpsl
add
adc
add
xor
push
in
jo
inc
loope
sahf
stos
or
add
lods
pusha
xchg
push
je
lods
add
scas
jne
sbb
jb
subb
and
mov
daa
jo
cmp
lret
shll
inc
pop
xor
div
ret
cmp
mov
pop
fs
popf
mov
shlb
push
cmp
and
adc
cmp
pushf
push
pop
mov
push
cli
cwtl
jecxz
popa
out
test
jae
sbb
rclb
popf
add
xor
cmp
cmp
mov
out
push
out
cmp
jle
rcrb
call
ljmp
and
icebp
insl
add
add
out
or
push
sub
bound
jg
fsubs
xchg
sarl
adc
cmpsb
add
jo
das
leave
clc
aaa
in
call
and
fs
lret
ljmp
inc
add
dec
pop
pop
inc
test
or
inc
xchg
pop
cmp
gs
sub
rcrl
and
dec
xchg
cmp
ret
sub
call
pop
cmc
pop
push
mov
sub
add
sub
push
mov
std
bound
cli
dec
add
je
mov
loop
aam
test
sub
push
stos
dec
add
pushl
test
fcmovnb
add
jmp
push
in
dec
outsb
mov
add
xchg
add
dec
movsl
dec
jae
push
adc
push
xchg
out
sahf
roll
push
mov
pop
shlb
inc
mov
xchg
inc
addb
rclb
mov
call
lahf
pop
lock
fstpt
dec
xor
pop
dec
mov
add
xchg
sbb
mov
push
sub
sbb
shl
lret
test
add
fimuls
bound
pop
out
movsb
sbb
mov
mov
loope
test
mov
sbb
out
daa
movsl
in
rolb
xor
dec
dec
add
xchg
mov
mov
mov
xor
fld
xchg
push
jo
inc
dec
sahf
rorb
dec
xchg
add
insb
pushf
incl
shrb
lcall
ja
and
out
insb
add
sub
mov
adc
pop
scas
or
mov
sub
hlt
mov
es
jmp
pop
loope
jecxz
push
inc
add
pop
mov
pop
add
lock
dec
shl
add
scas
pusha
adc
popf
mov
in
scas
mov
rcr
pop
sub
or
lahf
cld
loopne
enter
out
adc
add
scas
xlat
in
jno
mull
out
sbb
pop
enter
and
mov
sub
cltd
addb
dec
xor
add
sti
push
push
and
add
pop
lahf
cmpb
sub
inc
lods
add
adc
add
adc
aad
in
push
mov
xchg
and
test
add
arpl
lahf
mov
nop
sbb
lret
lods
out
sarb
scas
in
pop
jbe
pop
ljmp
notb
aad
fstpt
push
das
add
or
inc
mov
add
jge
mov
pop
add
push
movsb
mov
test
pop
pop
test
fiadds
hlt
js
pop
xchg
in
inc
jb
int3
dec
or
sbb
pop
sarb
jp
incl
icebp
aas
jns
push
popa
cld
cltd
add
movsb
test
dec
inc
cwtl
sub
scas
pop
sub
sbb
add
aas
mov
popf
cmp
lcall
add
dec
fisubrs
cmc
arpl
mov
dec
pusha
cltd
ljmp
fbld
jne
or
dec
sbbb
cmp
lgs
jo
rclb
and
or
ret
push
je
iret
adc
inc
shll
add
pushf
inc
adc
cmpl
test
push
xor
jmp
scas
jns
shld
mov
xor
imul
inc
loopne
lret
and
movb
je
add
cmp
cmp
add
cmp
stc
fildll
mov
push
fsubr
loop
rolb
mov
jno
out
insl
rolb
mulb
dec
aas
scas
push
xorl
negb
insb
data16
pop
or
clc
mov
in
add
and
add
enter
pop
jne
add
mov
push
adc
xor
xchg
dec
dec
sbb
pusha
add
fcmovnb
jnp
xor
dec
int3
or
pop
pop
in
add
jp
mov
xor
push
je
pop
in
faddp
arpl
in
ljmp
and
rcr
test
enter
daa
mov
icebp
sbb
dec
and
sub
mov
adc
les
mov
stos
mov
mov
or
push
jnp
cmc
push
add
sub
sub
jae
mov
add
dec
add
add
inc
jnp
mov
shrb
and
outsb
pop
sub
jecxz
test
push
lods
bound
popl
movsb
xorl
add
in
outsb
in
ss
add
out
push
pop
pop
aad
adc
pop
add
adc
xchg
xchg
push
adcl
jmp
or
sub
nop
sarb
jge
mov
mov
add
jbe
push
ljmp
add
inc
hlt
pusha
ret
sbb
out
into
mov
fwait
cwtl
push
arpl
psubq
mov
mov
cmp
sti
filds
adc
daa
scas
pop
negl
mov
popa
dec
mov
loopne
lock
data16
imul
incl
sti
jnp
dec
sub
pop
push
cmp
ret
inc
jg
pusha
dec
mov
es
hlt
out
loop
jns
cwtl
out
clc
dec
inc
pop
add
dec
add
icebp
pop
lcall
mov
jge
ud0
xchg
bnd
sar
iret
enter
add
jo
test
mov
sub
aad
int
outsl
cmpsl
in
adc
mov
dec
ljmp
into
mov
pop
in
in
lahf
movsl
xor
add
test
mov
sub
cmp
mov
xor
add
test
test
lret
sahf
daa
lahf
mov
cli
rclb
mov
cmp
outsl
mov
push
jo
in
test
add
je
stos
adc
pop
jp
sbb
jbe
loopne
inc
fwait
adc
pop
cmp
and
adc
fldl2t
inc
in
clc
aam
iret
adc
ljmp
imul
or
adc
loop
test
or
sub
stos
in
add
cmp
xor
pop
mov
sets
rcr
leave
call
cmpsb
repnz
inc
pop
cli
sarb
incb
ret
inc
cmp
sub
and
pop
enter
jbe
and
push
add
out
adc
out
add
mov
and
dec
les
mov
clc
test
jae
mov
add
pop
dec
mov
add
stos
mov
cmp
xor
leave
dec
repnz
add
negb
lds
cmp
addr16
push
lcall
sbb
imul
mov
bound
mov
movq
inc
inc
push
inc
cmp
rclb
sarb
subb
orb
imul
int3
fsts
and
mov
pusha
add
xchg
cmp
sub
clc
cld
add
xchg
je
add
pop
xor
nop
push
and
ds
xchg
out
mov
fldenv
mov
pop
cwtl
add
addr16
push
adcl
cmpsb
add
int3
cmp
xchg
xor
scas
sub
adc
jns
pop
imul
repnz
cwtl
mov
je
clc
adc
sub
pusha
jle
sub
cli
pop
add
or
add
lret
add
movsb
xchg
push
mov
ljmp
xor
mov
add
push
jb
add
xchg
mov
mov
std
cltd
sub
neg
jmp
adcb
sarl
cmpsl
adc
data16
dec
add
addr16
std
test
add
repz
cmp
cmc
xor
js
push
call
ds
cli
xchg
cmp
xchg
add
aaa
adc
pusha
xlat
subl
adc
push
jmp
mov
jnp
addr16
inc
push
les
jg
ja
stos
mov
xor
and
sahf
sbb
jge
xor
pause
xchg
test
jae
dec
dec
int3
cmp
cmpsb
mov
stos
xchg
in
hlt
add
sub
rorl
add
mov
jbe
add
daa
xor
push
cmp
addb
add
ret
xchg
pop
pop
add
aas
loop
test
xor
pop
mov
cmp
jl
flds
add
iret
dec
movsl
hlt
inc
inc
pop
aaa
mov
ret
andb
add
xchg
test
pop
and
sbb
shrl
stos
enter
std
mov
rcrl
add
test
repnz
mov
ds
in
in
add
and
clc
inc
mov
out
adcl
add
sub
pop
add
xor
sti
xchg
inc
enter
fadds
popa
add
out
inc
push
inc
mov
xlat
adc
jnp
or
mov
mov
adc
adc
dec
inc
sbb
out
jle
pop
add
sbb
mov
sbb
and
call
inc
les
xchg
add
pop
ljmp
lahf
push
mov
lds
xchg
fidivrl
sti
leave
add
int3
les
adcb
sbb
mov
sub
testb
sbb
fwait
add
xchg
fs
sbb
scas
xchg
ror
add
rolb
mov
filds
lcall
sub
push
leave
fwait
add
mov
das
fidivl
sub
add
incb
mov
or
mov
jg
xorb
es
mov
add
push
jo
push
sti
mov
push
xchg
fdivl
ds
mov
adc
sbb
jo
jl
mov
sub
xor
add
outsb
test
jbe
add
aam
sbb
and
push
pop
push
mov
inc
in
pop
pushf
adc
aas
add
cmc
and
push
rorb
xchg
inc
add
les
sbb
andb
and
jmp
sub
ffreep
sbb
xchg
sub
lcall
inc
insl
dec
add
daa
xchg
or
mov
add
mov
fsubs
jp
xor
cld
or
scas
jge
add
xor
or
int3
jbe
or
lea
dec
add
add
inc
stos
or
sbb
pop
and
lods
arpl
fldl
imul
and
push
add
adc
add
jno
or
fistpll
jl
add
jecxz
dec
fiaddl
or
pop
sbb
add
sub
jbe
fsts
mov
push
mov
jne
test
stos
addb
jg
adcb
fcoms
add
and
addr16
add
test
push
idivl
pop
fwait
movsl
xchg
mov
push
imulb
popf
pushf
or
cld
scas
xlat
inc
mov
pop
sbb
add
or
mov
adc
cmc
and
mov
mov
sbb
dec
add
rcll
push
xlat
cmp
dec
inc
lock
push
hlt
fnstsw
mov
jo
push
loop
in
gs
arpl
adc
jae
add
cmpsl
repz
sub
mov
aas
ja
pop
ficompl
ret
mov
add
mov
lahf
pop
mov
jg
dec
jnp
pop
dec
cli
rolb
sbb
push
add
sub
pop
or
dec
gs
mov
pop
mov
leave
jge
sub
sub
and
out
iret
addr16
add
cmp
and
fstpl
icebp
js
pop
xorl
in
loop
add
xor
xchg
out
add
cs
repz
cwtl
pop
add
pop
pop
adc
sub
xorl
cs
scas
sbb
cmp
jne
scas
push
push
lds
js
mov
jecxz
jae
adc
mov
and
insl
adc
orl
stc
aas
movsl
je
sbb
add
and
add
bound
cmp
pop
and
cmpsb
addb
jb
add
and
in
push
std
mov
stc
inc
adc
mov
notl
test
push
inc
outsb
xchg
out
pop
inc
add
fiaddl
movb
aad
fs
mov
in
add
jno
sarl
mov
fidivl
lcall
sbb
test
and
cmp
push
mov
lods
or
pop
test
sbb
in
stos
and
push
add
sub
mov
adc
add
arpl
stos
flds
mov
xchg
push
xchg
mov
mov
insb
movsl
inc
mov
testb
sbb
push
aaa
add
shll
inc
add
imul
jge
jns
cmp
lock
mov
mov
xor
ds
subl
inc
aas
popf
add
adc
mov
add
lcall
add
nop
rcrb
mov
sbb
outsl
dec
add
divl
lahf
loope
add
dec
jge
pop
push
inc
fcompl
enter
xor
and
add
xor
fstl
lcall
jae
jge
sbb
popa
add
sub
add
ja
negl
orb
adc
pusha
cmpb
repnz
jg
push
mov
push
xchg
lret
xor
push
add
loopne
inc
out
xchg
shlb
cltd
cli
mov
fucom
inc
xchg
lret
cwtl
add
movl
lods
sub
pusha
mov
push
jne
lds
call
sbb
adcl
sahf
xchg
testl
cld
loop
scas
pop
and
pop
int3
lock
sbb
addr16
pop
push
repz
stos
add
dec
dec
pop
mov
xchg
pop
inc
mov
mov
daa
adc
cwtl
test
es
pop
cmpb
repnz
add
jno
xchg
sbb
fsts
sbb
mov
sub
mov
add
std
mov
jno
xor
mov
movsl
add
ret
mov
in
and
and
mov
ds
mov
mov
or
add
mov
ret
out
push
jmp
lcall
in
loopne
cld
and
dec
jbe
ret
push
inc
push
add
dec
cli
pop
xor
fcomp
mov
sub
xor
dec
test
imul
loop
movsb
roll
adc
mov
or
fdivr
adc
mov
fistpl
add
xchg
sub
pop
mov
std
push
dec
xchg
sub
push
rolb
lcall
sbb
ljmp
inc
out
adc
test
push
add
andb
jmp
outsl
dec
out
jb
inc
stos
jne
xor
dec
add
mov
dec
sub
and
fisubrs
and
mov
pop
and
popl
out
jne
mov
add
in
sbb
sbb
cmp
rorl
cmp
mov
repnz
sub
pusha
or
dec
inc
ja
pop
test
add
ficomps
add
fs
or
jp
ljmp
bound
add
cwtl
add
mov
scas
cmp
mov
mov
xchg
ds
cwtl
add
sub
daa
mov
add
jo
rcrl
xchg
dec
add
je
aam
in
add
pop
add
outsl
pushf
lods
loope
add
mov
add
mov
add
sbb
test
add
push
inc
add
and
fst
xchg
jb
or
mov
ds
nop
adc
lret
scas
push
aam
out
inc
add
leave
int
cltd
lock
cmp
or
cmp
ss
inc
add
dec
cmovl
or
lock
flds
xchg
nop
add
mov
add
xor
push
dec
jns
add
repnz
pop
loope
jl
imul
lock
mov
out
das
iret
xchg
sbb
dec
lods
add
roll
add
cltd
push
and
jecxz
push
mov
inc
loopne
mov
jno
inc
sarb
add
scas
popf
jmp
enter
adc
imul
mov
loope
or
lahf
add
mov
es
pop
sar
in
lret
dec
push
jb
mov
inc
test
loop
mov
sbb
icebp
or
daa
lret
shll
es
enter
xor
mov
addb
mov
push
cmp
add
pop
pop
out
inc
test
pop
mov
mov
fstps
fsubrs
pop
jmp
xor
es
sarl
add
idiv
icebp
push
loop
int
xor
jns
push
push
lock
inc
cld
rorb
out
or
add
add
cmp
loopne
enter
outsb
add
inc
mov
xor
rolb
sahf
xchg
cmp
movsl
push
orps
scas
arpl
inc
cmp
mov
sub
add
jecxz
jle
mov
add
out
daa
out
lea
addr16
rcr
pusha
pop
imulb
dec
repnz
les
sar
cmp
loop
daa
mov
or
ret
add
add
push
xlat
mov
mov
adc
mov
jo
cmp
and
dec
push
add
hlt
mov
jo
fucom
jg
or
sub
add
aas
pushf
and
es
sbb
daa
xchg
sub
mov
ja
push
and
and
ror
sbb
add
pop
out
ljmp
js
lea
add
orb
setae
cld
pop
lahf
jns
filds
add
pop
stos
xchg
pop
test
out
mov
addl
push
movsb
or
sub
std
dec
jnp
pushf
jl
ds
test
xchg
sub
cs
push
jns
add
mov
fwait
and
int
add
mov
insb
add
leave
sub
inc
pop
add
inc
fs
mov
cwtl
inc
push
mov
push
aaa
add
lcall
jg
sub
pop
push
sub
icebp
fmull
mov
in
cmp
jmp
jmp
lcall
add
cmp
addb
dec
push
sub
add
sub
mov
cwtl
mov
jb
lods
adc
shll
popa
mov
dec
add
xor
sahf
or
fcoml
xor
pop
sbb
ljmp
sub
or
out
mov
jns
dec
jmp
inc
push
mov
cmp
xchg
jno
idivb
adc
mov
insb
xchg
adc
jae
call
pop
sbb
les
pop
ds
pushf
add
scas
std
cli
stos
mov
mov
dec
cmpsb
push
movsb
filds
repnz
insl
xchg
jmp
and
jnp
sbb
mov
fs
insl
push
mov
mov
mov
in
pop
movsl
repnz
lock
sbb
lcall
out
add
test
je
or
pop
mov
pop
mov
pop
fstps
aas
push
xor
mov
pop
aad
addr16
mov
add
into
fldt
loope
add
inc
jmp
cmc
mov
int
divps
sub
pop
pop
dec
aaa
adc
adc
and
je
addb
xchg
mov
add
sti
pop
jns
enter
add
jne
sahf
lret
loope
mov
outsb
mov
mov
ss
ljmp
fistpll
dec
push
imul
dec
mov
out
add
adc
xor
add
leave
and
mov
dec
adc
pop
jle
lcall
cmp
dec
sti
fsubs
or
fisubrl
xor
scas
mov
adc
push
test
je
cmp
jbe
pop
mov
or
mov
jnp
js
and
enter
jp
and
inc
add
push
fisubl
add
push
bound
push
adcb
iret
xlat
in
jbe
sbb
mov
sbb
cmp
mov
inc
mov
push
xchg
clc
loope
cmp
lahf
je
sbb
mov
loopne
rolb
aas
nop
and
mov
rorb
fists
imul
ja
sbb
and
pushf
lea
inc
cmp
adc
lods
loopne
loopne
out
notl
sub
insb
or
push
nop
mov
in
add
inc
int
sbbb
in
not
mov
sbb
xchg
cmp
sbb
inc
add
sbb
jp
jne
pop
mov
orb
pusha
je
and
daa
cmc
add
cli
fdivs
roll
scas
xor
pop
rclb
add
xchg
jbe
fsubs
loope
stos
pop
dec
add
insl
xorl
and
stos
or
in
out
cwtl
jno
ja
int
imul
add
decb
in
or
cmc
repnz
push
push
adc
add
add
mov
orb
add
cmpsb
xor
mov
sub
sbb
sti
scas
clc
or
pop
pop
add
or
inc
and
mov
mov
mov
sbb
push
mov
idivb
imul
mov
and
and
adc
jecxz
mov
mov
mov
sti
es
popa
jbe
lea
sbb
std
add
push
add
xor
mov
add
aam
mov
or
and
pop
lods
imul
inc
adc
xchg
pop
jp
add
hlt
pop
roll
out
dec
sub
add
loop
xchg
imul
add
and
in
cld
jp
cs
shll
lret
jecxz
push
xchg
and
inc
sub
xor
in
push
sbb
inc
or
pop
out
sbb
xchg
dec
jno
add
dec
mull
pop
add
js
adc
test
cmp
jp
pop
push
std
ds
mov
fucomip
sub
sbb
aad
push
inc
inc
inc
push
test
sbb
sub
cld
incl
data16
add
shll
inc
andb
out
xor
and
mov
rcrb
cmp
into
pusha
lcall
js
cld
fiaddl
addr16
mov
pusha
inc
js
mov
arpl
in
lock
scas
push
cmp
into
cltd
push
jae
xchg
sbb
xor
ljmp
ss
jne
mov
push
mov
xor
ret
in
dec
pop
add
sti
add
je
test
push
xchg
push
addr16
sbb
xor
mov
sbb
cmp
dec
mov
iret
jle
lret
or
and
mov
sub
and
ffreep
or
xor
xor
dec
rolb
pop
data16
lea
fcomps
dec
and
push
sbb
or
jmp
pop
dec
mov
and
add
adc
inc
les
add
subb
pop
push
lcall
mov
sub
push
fmuls
inc
mov
add
adc
adc
test
cs
sbb
je
cltd
add
leave
jbe
add
mov
add
out
pop
sbb
xchg
scas
mov
xor
aad
rorb
or
xor
push
sti
add
push
pop
mov
mov
add
push
aas
cmp
xlat
mov
or
dec
lret
xchg
ljmp
cmpsl
xchg
xor
or
stos
cmp
dec
adc
mov
subb
arpl
adc
push
inc
movsb
mov
mov
call
pusha
rorb
mov
std
test
popa
sub
outsl
roll
xchg
js
dec
push
adc
jae
negl
mov
aas
and
add
adc
js
cwtl
mov
arpl
stos
test
loop
dec
stos
xchg
daa
push
ds
inc
in
in
jb
sub
lock
jno
pusha
mov
dec
dec
shld
mov
inc
mov
adc
das
cmp
ds
xchg
push
arpl
sub
jb
pop
enter
ljmp
inc
lret
jbe
loopne
xchg
or
cvtps2pi
clc
and
or
mov
and
and
sbb
sahf
insb
rcrb
fiadds
call
pop
xor
add
cmp
sbb
sub
lods
push
jmp
loopne
mov
mov
xchg
push
xor
sti
cld
sub
in
lea
or
dec
xlat
out
repz
cwtl
negl
mov
mov
or
es
test
stc
pushf
in
xchg
add
jns
fwait
pop
cmp
outsb
ss
out
notb
leave
outsl
jle
xchg
hlt
push
lock
dec
add
rcr
jns
out
loope
lcall
addb
gs
add
adc
mov
and
jne
add
test
and
sbb
add
mov
cmp
pushf
adc
xorl
mov
cld
cmp
add
shlb
adc
iret
lcall
fs
add
add
das
sub
out
hlt
ror
nop
xlat
shrb
mov
lahf
mov
or
pop
out
add
cmpsl
mov
aam
inc
sub
jp
add
dec
inc
and
js
push
ljmp
xchg
mov
push
inc
inc
add
dec
adc
nop
hlt
mov
add
cmp
sbb
loope
add
push
push
xor
test
cmp
icebp
pop
loopne
or
jns
into
sub
faddl
inc
sbb
mov
cmp
hlt
add
mov
jbe
add
sbb
add
aaa
loopne
pop
ja
je
nop
jmp
enter
cmpsl
movsl
rcrl
cld
inc
add
lock
add
mov
xlat
fidivrs
mov
add
inc
fcomip
or
sahf
sbb
mov
push
ja
add
fnsetpm(287
sub
add
add
jmp
add
pop
xor
add
adc
push
and
mov
add
push
out
jae
add
mov
pop
add
jne
adc
mov
movsl
in
xlat
mov
push
imul
mov
jg
add
cmpl
push
add
add
stos
sbb
or
cld
jbe
dec
add
mov
push
movsl
inc
add
add
add
and
and
addl
jg
movsl
loop
out
shrb
dec
cld
jno
xchg
and
mov
lret
pop
aaa
pop
and
das
nop
or
loope
popf
jp
sbb
aam
cmp
pop
in
jne
cmp
dec
push
jne
add
aam
fstpl
add
sub
repz
and
fiadds
xor
sub
add
cmp
mov
adcl
andb
sbb
adc
fld
inc
sbb
in
adc
add
mov
or
scas
or
adc
test
ds
add
cwtl
lea
cmp
adcb
adc
mov
mov
sbb
daa
inc
push
mov
xchg
or
insl
bound
fistps
std
add
mov
out
cwtl
mov
ds
movsl
aam
aas
add
xchg
push
outsl
les
xor
pop
sub
sbb
nop
int
xlat
pusha
push
xacquire
rcll
mov
xchg
lock
fwait
adc
jp
add
in
ljmp
mull
add
add
leave
movsl
dec
lock
jo
mov
clc
add
pop
adc
sbb
dec
les
mov
inc
rcrb
roll
pop
insb
sti
gs
popa
sahf
or
mov
add
stc
cli
jg
add
pop
adc
imul
push
mov
sbb
dec
jmp
add
jge
icebp
add
pop
jecxz
cmpb
call
cli
jl
mov
insl
xor
adc
inc
mov
jo
std
add
ret
jl
cmp
xchg
andb
push
sub
and
push
add
divb
xchg
call
jae
jbe
aam
je
repnz
ficoml
std
push
mov
sub
hlt
cmp
pushl
inc
cmp
cmp
inc
jns
push
jb
aam
roll
jge
insb
jecxz
leave
xor
add
xorl
sub
pop
inc
jne
jl
inc
rcll
aaa
insl
mov
mov
jge
dec
mov
repz
faddl
insl
popa
mov
test
pop
mov
dec
adc
push
cmp
xor
into
dec
in
scas
sbbl
add
stc
push
push
push
cmpsl
test
cmp
notl
push
pop
loopne
mov
mov
cld
icebp
xor
push
daa
inc
mov
cltd
in
je
xor
imul
scas
xor
add
sbb
dec
movsl
mov
dec
test
lahf
xor
mov
xor
add
and
cmp
push
lcall
ds
or
int3
sub
mov
lods
frstor
lock
mov
jo
sbb
push
or
out
mov
jbe
add
mov
and
xor
popf
inc
mov
sbb
inc
and
sarb
es
clc
add
dec
int3
add
cmp
add
mov
popa
or
jb
pusha
shlb
mov
es
ds
inc
or
push
add
shlb
pop
mov
dec
and
or
loop
and
mov
pop
rol
arpl
dec
enter
in
ds
add
gs
mov
shl
xchg
lds
push
inc
push
fsubs
push
add
mov
cli
push
mov
inc
cmpsb
mov
cmpl
mov
cmp
mov
xchg
inc
sbb
fcomip
push
ds
movsb
jp
jo
cwtl
inc
jae
add
loopne
adc
mov
sub
or
adc
sbb
inc
shlb
pop
ds
add
ljmp
jbe
or
test
idivl
inc
add
int
shlb
ljmp
jmp
shll
mov
add
int3
loopne
lds
dec
out
cmp
jo
xchg
int
pop
or
ds
in
and
popa
filds
adc
aad
aaa
sub
mov
mov
add
sub
inc
js
insb
xor
mov
mov
pop
add
cmp
loopne
add
mov
icebp
cmp
stos
and
mov
xor
add
lock
add
dec
imul
xchg
es
loop,pn
negl
out
or
outsb
ja
pop
add
lcall
pushf
pop
push
aaa
bound
mov
test
addb
fcoms
outsb
or
jl
enter
and
add
mov
mov
adc
out
out
dec
dec
adc
xchg
jae
cld
aad
cmpsb
or
pushf
add
cmp
sub
mov
sub
dec
xor
dec
add
fildl
loope
add
das
dec
push
add
imul
icebp
ret
call
lods
cmp
dec
add
push
add
adc
adc
out
or
push
fs
dec
add
sub
sbb
aaa
fnstsw
andb
cmpb
add
out
lock
xchg
mov
loopne
nop
pusha
stc
lcall
movsl
mov
pop
adcb
lods
test
enter
js
cmpsl
cmp
dec
add
add
int
fisubrs
out
jbe
push
divl
rolb
fimull
mov
mov
pushf
in
ja
adc
pop
leave
jae
fsubs
sbb
ret
subps
xor
and
nop
mov
inc
cmp
inc
and
add
ret
mov
stc
mov
out
in
or
sarb
dec
cltd
shrb
test
or
stc
enter
push
enter
add
pusha
sarb
mov
add
mov
sbb
outsl
and
inc
pop
sbb
mov
test
fwait
dec
jbe
inc
and
ja
sub
pop
jmp
pushl
mov
in
mov
int
add
sub
lahf
pop
xchg
or
cli
and
lea
pop
ret
int
pushf
cmp
decb
xor
ret
add
cwtl
push
mov
mov
and
mov
jno
inc
fwait
jbe
js
add
jns
xlat
xor
in
scas
pop
add
lahf
sub
mov
sarl
cwtl
outsb
mov
loopne
rolb
dec
xchg
mov
cld
js
add
xor
bound
shrb
lahf
mov
push
lret
add
and
mov
lock
dec
nop
add
js
int3
rolb
xchg
subl
mov
add
gs
push
repnz
shrd
sbb
pushf
aas
andl
scas
in
or
adc
xor
out
cmp
call
mov
shlb
mov
int3
mov
xor
mov
aas
add
lds
dec
out
xor
loope
cltd
mov
jno
or
xor
inc
jmp
dec
cmp
sub
shl
mov
or
aas
add
lcall
add
nop
test
push
push
sbb
pop
pop
cli
out
mov
arpl
or
dec
and
add
mov
or
xor
mov
outsb
aaa
xchg
test
shrb
add
inc
stos
push
popa
or
pop
shll
jg
dec
loopne
mov
lahf
xchg
jb
push
enter
and
shlb
and
cwtl
sub
jns
jae
je
adc
dec
gs
mov
mov
dec
xchg
cmp
and
cs
clc
mov
cmp
std
hlt
push
mov
stc
add
movsl
xor
jo
icebp
xor
cmpsb
pushf
in
pop
out
or
adc
adc
push
push
adc
sbb
insl
stc
mov
xor
jecxz
mov
jnp
add
cmpsl
adc
cwtl
dec
add
xchg
in
scas
js
pop
add
mov
cmc
lea
add
mov
or
sbb
sarl
ret
idivl
cmp
repnz
inc
jecxz
into
ds
mov
dec
pop
xorl
mov
push
stos
rorb
insl
pop
fwait
mov
pop
dec
loop
add
sahf
insb
fs
in
sbb
out
mov
cwtl
stc
je
in
add
sbb
push
xlat
jg
and
jecxz
popa
mov
mov
pop
ja
add
mov
pop
dec
clc
aad
inc
or
outsb
sbb
lret
cmp
arpl
loop
pop
data16
testl
push
sbb
fildll
int3
cld
outsb
shrb
add
stos
ljmp
push
popl
roll
cmpsb
ret
data16
jne
add
pop
cmp
adcb
sub
negb
cld
ret
xchg
and
add
push
xlat
sarl
sbb
add
adc
sbb
test
outsb
adc
dec
dec
mov
cli
fdivs
add
into
adcl
rolb
push
mov
xchg
dec
jp
pop
int3
sub
jecxz
cmp
data16
adc
idivb
inc
js
pop
jne
add
out
push
xorl
cwtl
dec
cmc
test
xor
or
mov
aad
pop
jns
add
push
in
test
fs
cmp
add
fcoml
xor
sbb
out
add
pusha
or
add
mov
add
inc
cmp
sub
push
out
pusha
adc
sti
ret
pop
and
sub
mov
jb
mov
rcl
dec
in
hlt
add
sub
loope
push
inc
jp
add
sbb
add
push
les
lcall
and
add
std
roll
flds
out
cs
addr16
aam
sbb
sbb
clc
pop
jnp
mov
ljmp
xor
mov
stc
enter
xchg
gs
or
inc
aad
cmc
sub
popf
add
fisttpll
loope
mov
push
icebp
add
push
push
das
mov
lret
fisubs
xor
add
push
shrl
fmul
fidivrs
clc
repz
lods
cwtl
scas
mov
pop
add
pop
stos
aad
sbbb
les
push
test
add
repz
push
pushf
add
movsb
adc
sub
js
xlat
xchg
jnp
inc
jmp
lea
dec
iret
test
sbb
mov
cld
arpl
dec
cmp
add
in
add
in
inc
cmpsl
inc
jbe
or
and
mov
ss
adc
push
jb
sub
in
push
iret
adc
inc
mov
fiaddl
aam
montmul
cmpsb
inc
pop
and
add
mov
testb
push
mov
add
dec
add
add
jle
leave
sbbb
std
call
sbb
popa
in
add
mov
mov
push
pop
icebp
add
cmp
jmp
add
jbe
cs
sub
das
andl
push
sbb
xchg
add
mov
cld
insb
das
ret
and
cld
cmp
or
cmp
jge
push
mov
add
dec
mov
pop
jp
and
inc
mov
in
jmp
daa
arpl
add
das
xchg
sti
mov
xchg
add
imulb
inc
add
imul
addb
js
fucomi
sahf
and
sbb
xchg
rolb
pusha
xchg
inc
cmp
push
and
js
pop
cmpsl
mov
mov
outsb
mov
jp
or
rolb
adc
pop
add
push
pusha
cmp
cmp
mov
enter
fs
add
lods
inc
iret
incl
jnp
sti
inc
add
pop
push
add
lods
jecxz
pop
ja
inc
es
inc
cmp
pop
pop
sub
add
xlat
add
mov
push
add
aaa
rorl
add
ret
loop
lods
ja
cmp
xor
jl
mov
and
pop
rolb
add
imul
cmp
test
xchg
rcll
cld
rcrb
sbb
adc
sub
add
and
inc
out
push
data16
cs
lcall
lods
inc
sub
daa
jp
add
mov
mov
add
cmp
mov
lds
fcompl
lcall
arpl
bound
dec
rclb
jae
insb
mov
pop
or
inc
out
sub
leave
adc
dec
int3
nop
mov
mov
add
pop
jbe,pn
mov
add
aad
mov
jg
add
in
push
cmpsl
inc
or
mov
insb
add
mov
lcall
jb
mov
mov
add
pop
enter
add
pop
mov
adc
cltd
outsb
add
or
sub
cs
adcl
sub
push
fisttps
mov
loop
and
lock
jp
add
loope
ja
test
add
push
lock
ret
loopne
subl
je
push
or
xor
addl
aaa
mov
fldl
ret
cmp
jo
sub
sbb
mov
cmpb
or
shl
dec
sbb
push
xor
sub
xchg
stos
outsb
daa
pop
imul
sbb
cld
inc
add
or
adc
sub
push
xchg
cmp
pop
inc
jno
sub
xor
enter
add
dec
mov
xchg
xor
jo
insb
add
lret
inc
cmpsl
sbbb
or
out
xor
popa
mull
cmp
mov
insb
inc
in
test
flds
test
outsl
pop
xchg
sub
std
sub
pop
sbb
cmpsb
fstl
sub
and
adc
pusha
arpl
lahf
mov
testb
add
or
rcl
out
adc
popf
movsb
pop
lret
pcmpgtd
pop
dec
out
sahf
nop
mov
mov
or
sbb
dec
cli
adc
add
or
aas
add
mov
lds
cmp
dec
popl
fisttpl
and
add
xchg
int3
and
mov
lea
or
adc
iret
jns
cmp
adc
mov
dec
mov
mov
mov
add
pop
inc
sahf
add
in
cmp
push
mov
add
gs
sbb
pop
dec
int
jo
dec
add
cmpsl
repz
mov
flds
pusha
dec
push
div
add
mov
push
sbb
or
xchg
out
hlt
inc
arpl
in
add
ljmp
pusha
cli
stos
lahf
mov
aad
movsl
fwait
negb
add
into
push
cmp
add
clc
mov
or
in
mov
xor
add
lea
popf
add
and
cmp
cwtl
add
ds
loopne
scas
push
jmp
pop
lods
cmpb
xchg
mov
cmp
add
mov
mov
jg
call
sub
inc
addl
cmp
pop
mov
inc
popf
in
cli
lods
mov
imul
pushf
es
xchg
nop
js
sub
mov
in
out
adc
inc
pop
xor
fwait
or
fisubs
stc
mov
add
sahf
enter
add
cltd
hlt
sarb
js
cld
fsubl
popa
jmp
lea
fmuls
jbe
add
loop
aam
push
dec
sarb
add
ds
leave
inc
les
adc
or
sbbl
pop
fmull
lods
popl
aad
fldt
bound
into
add
aaa
faddl
mov
add
ficoml
add
push
popa
aam
ror
cs
les
lods
add
and
push
jl
mov
addb
xor
fsubr
repnz
mov
dec
push
sub
cli
add
and
lcall
ja
je
push
outsl
mov
jns
adc
pop
clc
cmpsl
mov
pop
jnp
add
mov
pop
jo
stc
push
push
test
out
adc
sbb
lock
out
cwtl
add
jo,pn
push
inc
gs
mov
addb
mov
ficoml
mov
flds
pop
aas
pop
pop
sahf
je
sbb
add
mov
jae
leave
sbb
nop
cmp
fisttps
mov
orl
fsub
cwtl
outsl
imul
adc
and
sbb
shl
ds
in
sbb
mov
cmpsb
popa
inc
int
std
je
repz
imul
decb
mov
mov
repnz
lret
xchg
dec
mov
incl
pop
subb
add
and
into
icebp
mov
push
pop
bound
in
mov
jbe
pop
push
add
adc
jp
add
scas
or
pop
sbb
adc
mov
jg
pop
mov
popa
mov
push
pop
cmp
je
inc
out
add
cs
and
lcall
sbbl
in
add
mov
mov
movsl
and
icebp
xor
mov
cmpsl
adc
dec
mov
int
jne
xlat
mov
fsubl
les
stc
xchg
add
ds
fadds
in
fs
shlb
movsb
cmp
lcall
and
add
pop
outsl
sbb
rep
faddl
adc
push
nop
push
inc
daa
cwtl
mov
sbb
ss
xor
dec
mov
add
outsb
adc
int3
add
ret
clc
push
test
mov
in
ja
dec
push
inc
icebp
fucomi
jecxz
inc
js
jno
xorb
mov
addr16
sub
fadds
inc
inc
flds
cmc
fidivrl
sbb
mov
mov
std
inc
fbld
push
test
mov
lock
mov
adc
addl
scas
xchg
cmp
pop
dec
sbb
add
aaa
xchg
jge
pop
dec
or
xlat
mov
clc
adc
or
or
into
cltd
sarb
test
add
lds
xchg
imul
sub
int3
cli
mov
jl
inc
pop
mov
xlat
jne
pop
pop
add
jge
out
jl
sbb
bound
test
sbbb
pop
or
lcall
jb
cmp
add
jno
mov
dec
xor
pop
sbb
fmull
and
out
test
icebp
mov
out
jge
mov
call
xor
in
int3
sbb
jno
cs
test
pop
push
cmp
and
xchg
notb
inc
xor
sub
sub
loopnew,pt
add
adc
pusha
fsubl
mov
mov
lods
xchg
fists
add
movsl
xchg
or
imul
jb
insl
push
je
rorb
ljmp
xchg
int
sbb
clc
fs
pop
repnz
add
sub
inc
lods
dec
add
ljmp
push
aaa
frstor
xor
push
out
xlat
push
sub
inc
sbb
sti
and
or
push
jns
test
bound
fwait
adc
test
mov
movsb
js
add
cs
adc
add
xchg
add
in
dec
mov
mov
gs
sar
jmp
pusha
sbb
adc
xchg
test
mov
scas
movsl
or
orb
clc
jae
inc
enter
push
and
subl
mov
int3
adc
sbb
sbb
fptan
popf
pop
mov
mov
xor
out
aaa
test
cmp
add
mov
je
test
cmp
jns
cld
loopne
cwtl
add
pop
dec
pop
sbb
mov
flds
jo
mov
stc
aam
add
icebp
jae
adc
mov
sahf
xchg
add
movsb
and
loopne
add
std
mov
and
dec
cmp
jne
test
jge
mov
imul
inc
jmp
enter
cmp
adc
ret
xor
dec
mov
cwtl
mov
in
popa
popa
jb
daa
or
push
in
jo
loope
jmp
aam
add
dec
add
inc
or
sub
out
imul
push
jnp
sbb
inc
cmp
hlt
arpl
adc
mov
pop
fsubs
and
xchg
mov
add
add
movsbl
jo
mov
xor
imul
in
jno
pusha
leave
fiaddl
push
mov
fsubp
push
add
cmp
pop
jp
je
jne
pusha
stc
push
ds
jl
push
pop
adc
sbbb
fwait
mov
add
mov
dec
out
dec
add
aas
mov
fnsave
imul
roll
xchg
lcall
jp
sbb
data16
and
adcb
lret
in
add
push
add
cmc
out
xchg
cmp
enter
add
loop
rcrb
lret
and
bswap
xchg
mov
lahf
add
lock
ja
and
xor
add
pop
lcall
fsubp
test
in
xchg
fwait
xor
cmpsl
xor
addb
cmp
adc
cld
push
xor
xchg
adc
addl
cmp
or
and
test
pop
daa
adc
adc
adc
sub
adcl
into
test
add
and
or
loop
movl
inc
cmp
and
mov
in
movsb
sub
imul
mov
inc
test
inc
inc
push
lods
mov
and
dec
inc
jbe
push
test
movsb
or
nop
inc
xchg
icebp
push
lock
inc
jge
mov
in
fsubs
cld
add
add
out
jae
or
in
aad
xor
adc
inc
add
push
insl
outsl
mov
add
out
std
lock
add
push
gs
add
aam
add
rcrl
add
adc
fsubs
in
cmpsl
icebp
arpl
cld
mov
add
fdivrl
lret
std
add
add
or
and
cwtl
mov
push
mov
adc
xchg
pop
sbb
into
jo
fstps
add
and
add
ret
mov
jecxz
add
shll
lods
pushf
jbe
sbb
mov
ret
add
mov
mov
cmp
dec
push
inc
mov
test
inc
lock
cwtl
sub
daa
sbb
ret
mov
sub
add
adc
mov
fisubs
and
inc
xor
loopne
lret
cmp
pop
fprem
loope
jp
jbe
rclb
inc
adc
sarb
sbbb
push
cmp
add
loop
sbb
stos
jne
cwtl
mov
xchg
add
scas
add
mov
push
icebp
jnp
enter
dec
inc
add
pop
cmp
add
lahf
sbb
push
add
outsb
xor
enter
in
add
stos
movsb
shrl
xlat
push
shl
inc
adc
in
add
add
stos
mov
sbb
or
fsts
ja
scas
in
arpl
add
pop
popa
sbb
push
add
jae
pop
cld
shrb
cmp
aam
fidivl
jnp
scas
mov
data16
cmp
shll
repz
and
pop
xchg
lds
incl
xor
pop
fdivrl
ret
push
push
jmp
mov
sbb
lock
sub
adc
lock
mov
or
lret
leave
add
jmp
cwtl
pop
cmp
cmpl
cmp
mov
pusha
das
add
je
popf
into
lds
mov
push
fmull
stos
mov
rcrb
xchg
sub
add
js
orl
xchg
xor
out
or
movsl
mov
add
dec
mov
sti
sub
xor
ss
adc
and
mov
push
fidivs
cmpxchg
movsb
jl
or
rolb
pop
pop
pop
aas
add
add
inc
adc
fucom
xchg
popl
push
ds
aam
push
jbe
add
pop
cmp
mov
push
dec
pop
popa
jno
jb
or
sbb
in
cltd
dec
in
push
mov
cmp
call
mov
fldl
shr
jb
nop
cltd
dec
les
cwtl
jg
xor
jge
xor
xchg
ja
add
fwait
bound
jo
sub
out
push
add
cmp
sub
ss
stc
cwtl
mov
mov
insb
pop
jbe
cmp
pop
scas
add
dec
ljmp
test
add
push
cmp
mov
pop
mov
aaa
add
cltd
roll
mov
leave
or
aaa
push
ret
jle
mov
add
push
hlt
sub
leave
mov
mov
jbe
push
cmp
addb
arpl
push
vmovlps
mov
movsl
cld
int3
add
mov
sbb
cmp
or
rcrl
cld
push
pop
sahf
jl
inc
or
or
cld
pop
fisttpl
adc
mov
sbbl
cs
add
pop
scas
mov
and
lret
clc
add
and
dec
adc
popf
jmp
cmpsb
xor
mov
cwtl
addb
iret
mov
cli
add
gs
mov
xor
dec
scas
cwtl
jbe
or
hlt
push
fsubrl
pusha
repnz
add
mov
mov
cmpsl
mov
inc
imul
scas
add
cld
fmuls
nop
mov
sbb
xchg
xchg
aaa
icebp
leave
cmpsl
clc
test
cmc
xchg
imul
cmpb
add
xor
lods
test
push
imul
dec
aaa
cmp
out
mov
jecxz
xchg
lds
jns
adcb
mov
pop
inc
pop
into
push
jbe
cmp
faddl
arpl
aam
out
jl
daa
or
divl
in
in
lea
adc
lds
rol
inc
add
dec
inc
cmp
xlat
mov
and
test
js
sub
add
data16
pop
jg
xchg
fs
adc
pop
mov
pop
add
dec
add
mov
popf
mov
inc
or
or
in
pushf
scas
mov
xchg
add
and
sti
inc
xlat
pop
xor
cmp
fcomps
movsl
imul
xchg
push
pop
test
aam
mov
add
mov
fistpl
mov
push
lret
sub
push
add
jecxz
lds
int3
adc
pop
xor
cmp
cmp
xor
rolb
push
out
sbb
rcll
aad
call
pop
add
xchg
mov
add
stos
fs
sbb
cmpsb
sbb
xchg
or
stc
jno
loop
mov
test
pushf
imul
add
in
test
xor
clc
js
outsl
add
add
jecxz
cmp
pop
or
stc
je
cmp
dec
add
out
push
inc
vmread
dec
add
add
loope
stos
jecxz
cmp
jle
xchg
arpl
ficoms
repz
sbb
jb
hlt
fsubrs
adc
xor
mov
or
or
inc
adc
mov
sub
pop
dec
fcompl
cli
ljmp
add
addr16
mov
loopne
loope
inc
mov
add
stc
and
mov
add
dec
push
add
push
out
push
out
out
cmp
shll
pusha
or
add
push
pusha
add
call
cmp
pop
add
sub
add
cmp
js
lock
pushf
add
iret
cwtl
out
orb
cld
push
inc
pusha
cmpsb
insl
jmp
and
lret
cmp
and
pop
mov
mov
add
dec
cld
fidivl
rclb
and
jle
in
jge
add
loope
sbb
js
adc
sub
push
pop
sti
add
push
add
mov
hlt
mov
push
stos
add
pop
sub
sbb
popf
movsb
cmp
out
in
lret
addr16
scas
shrl
pusha
adc
push
dec
gs
fsubl
bound
rcr
push
gs
js
pop
jbe
and
dec
fsub
mov
and
or
pop
cmp
idivl
add
jno
pushf
fld
pop
out
add
sahf
sarl
sub
add
in
xchg
xchg
mov
in
add
mov
fimuls
arpl
dec
jnp
mov
sarb
imul
add
pop
jp
ds
stos
sbb
lahf
push
inc
fcoms
psubusw
pusha
push
pop
lock
add
and
jle
cs
inc
jne
xor
lcall
bound
pusha
push
xchg
mov
outsl
add
subl
and
adc
notb
jb
or
jbe
cmp
sbb
sub
cli
inc
add
pop
jmp
shll
sub
loope
in
add
adc
movsl
pop
xchg
mov
sub
sbb
shrl
push
xchg
add
dec
add
add
or
mov
dec
jl
add
movsl
fisubl
xchg
xorl
add
or
enter
mov
xor
mov
mov
mov
add
dec
cld
pop
repz
test
icebp
cltd
xchg
push
cwtl
sbb
jbe
nop
repz
test
dec
pavgw
lret
cmp
leave
ss
imul
mov
mov
xor
lock
sub
stos
mov
inc
mov
add
pop
int
and
or
stos
das
js
add
inc
pop
sbb
loope
mov
jp
push
iret
aam
add
add
jle
mov
jmp
dec
sbb
leave
in
mov
add
add
add
and
dec
shll
add
push
fbstp
xchg
arpl
add
mov
add
mov
add
cmpsb
mov
or
rclb
xor
xor
cmp
fiaddl
je
add
movsb
mov
loopne
inc
sbb
xorb
movsb
add
cmp
push
push
add
mull
lret
loopne
test
rcr
pop
je
mov
push
test
cmp
pushf
or
insb
lock
push
fcomps
bsf
xchg
push
cmc
pop
cmp
jp
pop
scas
repz
mov
shlb
cmpsl
mov
sub
dec
out
sub
sbb
push
out
dec
mov
pop
jmp
popw
ljmp
adc
cs
jo
pop
in
dec
ret
add
adc
push
jle,pt
pop
faddp
hlt
cmpsl
fwait
sub
loope
mov
pusha
add
xchg
iret
sub
mov
test
adc
inc
lock
scas
cld
popf
or
insl
test
je
dec
int3
cltd
pop
lcall
imul
addl
mov
cltd
jge
rcrb
mov
pop
dec
fstpl
push
inc
enter
jecxz
cmp
call
popl
sub
add
ret
mov
cmp
or
test
sbb
ja
adc
in
jo
addb
bound
lock
and
xor
dec
sub
sbbl
cmp
jb
or
adc
cli
xchg
xchg
lahf
mov
dec
inc
hlt
jl
or
cmp
shlb
mov
inc
mov
je
xchg
add
out
icebp
dec
jp
add
mov
push
pop
bound
add
xchg
or
stc
es
push
out
add
sahf
jnp
cmp
fcompp
push
ss
cld
mov
sub
pop
push
dec
fwait
pusha
lret
enter
and
add
pop
and
fs
das
and
inc
add
rclb
cmp
mov
add
sub
test
mov
and
add
gs
dec
outsb
xor
sbb
popf
pop
shlb
and
aam
dec
add
sub
fdivs
push
lds
add
daa
pop
push
repnz
pop
push
or
dec
sahf
xchg
add
cmp
arpl
add
jb
jnp
aaa
sbb
and
daa
or
into
mov
mov
mov
and
hlt
shrb
out
dec
pop
pop
fsubrl
into
push
enter
cmp
xchg
push
and
fimuls
scas
add
ds
adc
inc
out
cs
sub
add
jge
sarl
lret
xchg
lds
rclb
aad
add
pushf
pop
dec
xor
loope
sub
test
push
cs
idivl
dec
pop
xchg
jmp
pop
lods
add
adc
pusha
cmp
push
sub
cwtl
push
shr
cmp
pop
lret
insb
mov
insl
cmp
rolb
stos
test
sbb
sti
ljmp
adcl
mov
in
mov
out
in
pusha
pop
into
xchg
xlat
sbb
enter
cmp
incl
mov
add
mov
sub
sbb
dec
es
add
insl
dec
lret
pushf
jecxz
xor
push
in
addb
movsl
ret
cmovb
hlt
jno
mov
mov
mov
je
pop
mov
cmpsb
adc
sub
or
inc
sub
mov
add
adc
je
mov
mov
cmpsl
add
xlat
std
add
inc
cmp
add
and
mov
jnp
add
out
and
aam
push
push
or
stos
call
pminsw
pop
outsl
add
je
jbe
mov
jmp
pusha
jne
xor
dec
pop
scas
std
add
push
cmp
enter
ret
arpl
in
scas
orl
or
jle
jmp
dec
cs
dec
ret
jns
mov
and
cmp
cmp
mov
pop
loopne
push
call
pop
add
and
jne
mov
aam
pop
sub
sub
xor
xor
mov
call
and
xor
sub
xlat
add
pop
sbb
cmpsl
dec
je
and
clc
and
pop
ljmp
ds
pusha
push
inc
jp
pop
int
mov
add
les
adc
popa
outsb
add
mov
adcl
movsl
adc
sub
mov
lret
insb
xor
sub
add
xlat
inc
sbb
mov
xchg
pop
lds
or
sub
add
dec
je
pop
inc
ret
pop
mov
and
sbb
mov
inc
ljmp
and
pusha
and
and
aas
bnd
xor
mov
mov
popf
add
jnp
pop
inc
or
add
pushf
fs
repz
sbbb
jle
dec
mov
stc
lods
and
subb
out
jl
lret
iret
and
sub
dec
popf
add
xor
add
call
xor
jnp
jb
mov
pop
add
or
mov
jecxz
leave
movsl
lods
jo
xchg
pinsrw
add
lahf
lret
add
push
in
mov
cs
mov
sti
dec
jno
add
and
sbb
adc
add
repnz
out
lock
add
jae
sub
or
and
mov
add
add
push
repnz
add
mov
scas
add
es
sub
push
ja
dec
neg
add
in
mov
mov
pop
lcall
mull
dec
imul
dec
push
mov
fdivl
push
mov
xchg
movsb
and
rcll
nopl
outsl
pop
and
sbb
daa
pop
pop
inc
repnz
xor
xchg
mov
lods
pop
mov
iret
je
call
push
mov
inc
xor
outsl
xchg
hlt
jnp
jbe
add
sub
mov
sub
xlat
jl
stos
adc
xchg
test
xor
sbb
inc
sbb
sbb
out
int
std
mov
cmp
lcall
add
jnp
dec
and
pop
inc
xorb
rcl
jg
aas
inc
mov
pop
adc
pop
jp
add
repz
das
rclb
mov
imul
jge
roll
cmp
movsb
cmp
std
xlat
inc
add
cmp
sbb
xchg
adc
into
call
pop
jle
mov
jmp
add
mov
jg
pushf
mov
psllw
sbb
or
sbb
lcall
or
out
xchg
add
int
mov
jge
mov
stos
addb
mov
dec
ss
pop
jp
movsb
dec
cmp
cwtl
inc
nop
jo
adc
or
sub
sub
ja
push
add
subb
or
and
mov
ds
add
in
mov
cmpsb
lcall
fisubs
cmp
push
mov
js
pop
nop
add
ja
sbb
test
xor
loop
pop
sti
scas
outsb
ret
test
loopne
xchg
add
add
mov
fsubrs
daa
in
clc
cltd
add
push
mov
sbb
xchg
ljmp
cmp
fisttps
mov
add
divb
gs
dec
add
out
adc
xor
stc
cmp
shr
imul
jge
rorl
repz
addl
movsb
cmp
jmp
leave
add
mov
add
ret
add
add
subb
cmp
es
inc
mov
xchg
scas
adc
add
pop
add
and
add
clc
test
and
dec
setl
mov
fiaddl
push
or
icebp
xor
mov
sbbb
add
cmp
push
stos
nop
cs
sbb
mov
je
xchg
jge
xor
sub
push
xor
enter
add
mov
adc
dec
mov
and
add
addl
add
push
sbb
push
repnz
jle
inc
fdivp
test
mov
add
cli
scas
lock
xchg
nop
xchg
mov
mov
push
add
xchg
idivb
mov
push
xchg
add
popf
cmp
xor
out
pop
stc
adc
pop
pop
test
xor
gs
adc
rorb
shl
rolb
push
imul
sbb
in
add
push
test
je
jo
lea
lock
fwait
mov
cmp
lds
cmc
pop
adc
repz
out
or
mov
sbb
flds
out
adc
loopne
ds
iret
sbbb
popa
push
and
in
pop
cld
jl
sub
mov
les
mov
aad
dec
movsl
pop
mov
dec
les
mov
loopne
ja
dec
movsl
cmpb
xor
inc
add
inc
inc
add
xchg
int
daa
add
mov
add
dec
xor
push
push
sbb
cs
add
imul
add
in
mov
xor
xor
xor
cmp
pop
mov
shr
inc
and
cmpsb
xor
push
add
add
mov
sbb
and
mull
loopne
add
and
repz
aas
ljmp
aaa
shll
fwait
aad
or
or
add
fdivl
dec
out
mov
cmp
dec
cld
fwait
add
sbb
imul
xchg
or
xlat
nop
mov
push
sbb
pop
jns
add
mov
lcall
mov
add
bound
push
push
mov
jo
sub
dec
cmp
or
xor
xlat
fldl
adc
fldcw
jo
ja
push
jnp
insb
mov
imul
sub
jmp
xor
mov
ljmp
cmpsl
xchg
dec
mov
stc
std
push
ss
mov
test
dec
pushf
add
adc
stos
outsl
and
sbb
int
hlt
lock
jnp
cmp
roll
loopne
xchg
fwait
sbbb
jnp
add
dec
cmc
incl
sub
xchg
mov
mov
outsb
or
sbb
mov
xchg
xor
inc
movl
add
pop
push
les
nop
clc
add
mov
sbb
fistpll
ret
add
push
mov
pusha
cmpsb
adc
cmp
or
mov
cmp
addl
stos
jecxz
push
cltd
popf
int3
jp
sbb
sub
inc
rsqrtps
mov
xchg
shlb
or
fld
in
nop
addps
add
sbb
add
pop
shl
sbb
mov
and
xlat
aas
add
dec
movsl
andl
leave
add
test
pop
mov
js
test
verr
jp
jbe
adc
mov
fnstenv
or
mov
add
inc
in
in
filds
sarb
jmp
aas
loop
jo
add
jnp
nop
rorl
movsb
mov
push
test
loopne
int
mov
and
and
addl
adcb
jge
in
add
arpl
clc
shll
inc
rcrb
lds
pop
xchg
iret
and
add
mov
orl
xchg
scas
testl
out
cmpsl
loopne
cltd
lcall
iret
dec
cli
mov
or
sub
lsl
add
adc
ljmp
add
in
lahf
sbb
mov
dec
mov
dec
movsb
scas
pop
outsl
sar
or
nop
in
in
int
jmp
pop
mov
insl
xchg
scas
xlat
shll
mov
jmp
pushf
or
daa
test
lods
sarb
mov
out
test
push
cmpsl
add
daa
add
push
flds
xchg
cld
push
xchg
pop
je
pop
int
orl
dec
add
test
jo
cmc
add
imul
movsl
add
ret
jp
xchg
xor
pop
mov
inc
fimull
rolb
xchg
mov
mov
sahf
push
insb
fwait
jnp
pop
add
dec
repnz
mov
fninit
jae
add
cwtl
xor
push
imul
dec
push
loopne
outsb
shrl
popf
pop
xchg
insb
jnp
cmc
lods
repnz
mov
adc
call
add
mov
xchg
adc
push
dec
lret
mov
jb
jne
sub
mov
mov
cmpb
call
push
fs
jns
add
cltd
shlb
xor
rclb
push
xchg
sbb
clc
pop
push
jbe
add
in
fbld
iret
add
mov
fcomps
cmpsl
add
mov
pop
scas
inc
pop
push
adcl
loop
add
mov
push
adc
cmpsl
sahf
fcoml
push
add
cli
clc
add
cmp
add
inc
sbb
sahf
adc
hlt
add
mov
fiadds
cmp
leave
cmp
sub
idivb
std
adc
xor
push
adc
lods
xor
cwtl
js
push
add
stos
shll
or
icebp
hlt
inc
scas
ss
add
mov
shlb
and
xor
xchg
movsb
lods
add
sbb
sub
xchg
xlat
push
add
dec
push
fsubr
pop
pop
mov
and
mov
shl
add
mov
add
inc
clc
ds
pop
fcompl
pop
int3
test
and
cli
lock
movb
sbb
dec
fisttpll
sub
or
sbb
add
out
iret
cmc
dec
add
jecxz
pushf
jb
xor
arpl
and
inc
repnz
xchg
int3
adc
sub
jmp
mov
shr
or
xchg
push
inc
xchg
ja
mov
xor
dec
or
mov
sarb
adc
push
dec
pop
xor
into
out
scas
ss
insb
add
std
notl
mov
mov
sub
inc
jo
dec
scas
mov
rcll
inc
sub
add
xchg
fiaddl
xchg
jp
jmp
lods
lds
int
mov
std
or
andl
dec
sbb
pop
sbb
push
mov
xorb
psubq
xor
cmp
leave
out
add
cmp
addr16
dec
add
mov
inc
hlt
xor
add
add
xchg
pop
and
in
sub
dec
addb
and
insl
adc
jmp
popf
sti
jns
and
cmp
adcb
ret
xchg
in
or
fdivrs
arpl
je
scas
insl
das
pop
push
daa
cld
mov
adc
mov
cmc
pop
sbb
push
jb
add
add
pop
les
pop
jl
call
js
jmp
test
add
jp
cmpsb
mov
pop
cmp
idivb
cwtl
nop
xor
es
mov
and
and
dec
addr16
mov
imul
imul
add
jmp
push
mov
add
lea
mov
cld
inc
cltd
pop
cmpsl
sbb
or
pop
jbe
mov
push
shll
dec
orb
add
cltd
pop
jae
shl
jo,pn
pop
dec
rolb
sbb
add
xchg
ds
sub
adcl
pop
lret
xor
movsb
add
fnstcw
add
dec
mov
add
fwait
fs
enter
je
push
mov
aas
mov
adc
lahf
mov
test
jo
pusha
mov
add
insl
fs
and
sarl
out
andb
sbb
adc
pop
mov
xchg
iret
pusha
aam
and
rolb
jno
cli
push
aad
fs
sub
movsb
and
mov
shlb
lcall
dec
popa
adc
jg
xor
xchg
in
sub
adc
loopne
pop
ror
aad
push
sbbb
mov
cmp
outsl
adcb
lea
cmp
sbb
mov
inc
add
loopne
nop
roll
andl
cld
add
add
xor
nop
sub
or
jno
adc
cmp
test
pop
pusha
push
fdivp
xchg
dec
push
mov
dec
cld
xchg
add
sub
cmp
inc
xchg
rclb
dec
inc
mov
jmp
adc
or
in
mov
add
js
add
addr16
es
sub
jo
add
xor
lods
xchg
fadds
rol
mov
aad
cmp
add
mov
push
xchg
xor
add
ja
and
xor
sahf
mov
sub
add
push
sub
lds
xor
nop
push
es
add
and
adc
sldt
lock
cltd
fldenv
and
stos
dec
pop
adc
sbb
and
or
rcrb
loopne
test
xor
mov
mov
dec
cs
stc
rolb
mov
divl
or
pusha
nop
faddl
cld
jmp
rcll
add
xchg
mov
sbb
mov
push
pop
rorl
and
aam
andb
sub
popl
rorb
push
scas
sub
fimuls
push
mov
mov
push
cmc
sub
in
inc
mov
pop
nop
add
stos
frstpm(287
adc
sub
dec
jne
xlat
mov
add
insl
or
push
repnz
xchg
or
push
call
pusha
inc
and
mov
fistl
adc
inc
adcb
push
fcoms
ror
mov
arpl
xchg
add
push
lret
out
xchg
pop
add
out
into
add
fsubl
push
outsb
or
mov
pop
cmc
cmp
add
test
lds
push
pop
ss
scas
push
clc
aad
mov
xor
cmp
mov
add
jnp,pn
add
jns
loopne
out
add
and
mov
bound
jg
lret
push
jbe
mov
push
test
js
adc
add
inc
sbb
mov
cmc
fcmovnbe
push
outsb
repnz
and
in
dec
je
pop
fsub
add
adc
fildll
and
aam
xchg
inc
add
xor
mov
ds
add
pop
cmp
pop
jmp
xor
jno
dec
sti
stos
lcall
lods
shlb
lds
jae
cmp
sub
lret
push
outsl
add
or
jne
test
fcomp
push
sub
mov
add
cwtl
mov
cmp
mov
das
fildl
in
xor
or
mov
sbb
cmpsl
shrb
fadd
xor
outsb
jecxz
imul
sbb
stc
lahf
add
popa
ret
jo
clc
pop
or
and
stos
add
cmovns
sbb
movsb
jg
add
sub
outsb
pop
stc
sarb
jbe
jb
pop
inc
pusha
fnsave
dec
mov
jecxz
jmp
xor
jmp
add
inc
or
in
in
mov
lret
mov
xor
adcb
cmpsb
jmp
out
and
fndisi(8087
movswl
dec
es
push
hlt
fs
mov
mov
aaa
xor
pop
inc
adc
imul
fwait
ds
movb
xchg
sahf
repnz
mov
out
stos
sbb
pop
pop
inc
add
push
icebp
sub
jo
add
mov
xchg
jb
fiaddl
pop
and
xchg
or
mov
sar
cwtl
mov
xchg
mov
out
aaa
ficoml
add
pop
sub
add
push
in
mov
sbb
fchs
dec
sbb
adc
add
iret
insl
adc
xchg
js
daa
popf
mov
add
and
ljmp
mov
cld
and
cmp
cmp
xorb
push
lret
add
rol
inc
add
popf
inc
icebp
push
pusha
shl
or
inc
andl
test
push
shl
adc
xor
jecxz
adc
inc
add
pop
leave
mov
add
mov
add
mov
icebp
jnp
outsb
cld
add
cli
bound
ficoms
addb
jo
sarl
insl
sahf
xchg
std
sarb
add
loop
push
lds
or
add
inc
popa
bound
mov
lret
cmovae
cli
lds
or
sub
and
or
lahf
dec
mov
sub
mov
sarb
and
in
and
or
popa
fisttpl
adc
shlb
add
outsb
push
shlb
ss
lods
insl
or
outsl
sub
cmp
sbb
shlb
repz
lock
mov
mov
shrl
mov
shlb
scas
adc
sub
popf
mov
ret
and
cmp
mov
and
fcmove
icebp
push
xchg
mov
add
insb
or
and
and
mov
fs
insb
adc
or
push
and
and
loopne
cmp
mov
aas
gs
push
call
into
adc
mov
daa
insb
add
ret
inc
lcall
mull
daa
jmp
cmp
xchg
fcoml
mov
flds
lock
push
int
fs
add
scas
loop
sub
in
or
decl
mov
mov
sub
mov
mov
dec
xchg
dec
je
and
repnz
adc
pop
push
dec
sub
or
dec
add
in
sbb
subb
cmp
jg
and
pop
add
jl
sbb
lods
shlb
shll
mov
insl
out
cmpsb
out
jmp
sbb
es
loope
fldcw
jo
pop
add
pop
scas
jno
adc
push
mov
rcr
sub
add
jne
sbb
push
jnp
lock
psrlq
lds
jae
mov
add
jle
jb
cmpsl
es
dec
or
test
add
cmc
cmpsb
lahf
dec
test
cld
jns
mov
pop
push
mov
ja
pop
lock
arpl
sub
sub
jl
cmp
add
shlb
stos
xorb
pop
rorb
lods
call
nop
jge
sahf
filds
test
mov
orb
jle
mov
gs
mov
cltd
fdivl
loope
sbb
out
test
adc
push
jae
sti
inc
cli
inc
iret
add
add
cmpsb
sbb
and
mov
or
pop
inc
inc
int
pushl
add
add
aaa
and
mov
sbb
add
call
jb
sub
in
mov
add
popf
les
dec
into
push
call
add
aam
jecxz
push
fisttps
cs
dec
pop
insb
push
in
jo
mov
inc
aas
dec
inc
mov
add
scas
xchg
add
cs
add
incl
pop
rol
stos
dec
adc
fstpt
test
xchg
xchg
and
pop
mov
jg
push
fcom
add
clc
dec
subl
call
cmp
and
shlb
mov
sub
pusha
shrb
cld
iret
push
jle
rcrb
xchg
and
std
push
and
add
jnp
add
inc
sarb
sub
pop
adc
mov
sti
andb
xor
add
push
xchg
mov
fsubrs
add
add
xor
repz
pop
test
mov
sbb
cwtl
pcmpgtw
scas
arpl
add
jle
fs
mov
mov
movsb
test
mov
inc
ja
adc
push
pop
xor
js
cwtl
fistpll
add
mov
sbb
or
aas
pushl
orl
add
fwait
xor
enter
jns
pushf
xchg
pop
pop
add
sarl
or
mov
pop
jae
cmp
outsb
push
leave
push
pmulhw
dec
sbb
inc
xchg
jmp
and
add
cmp
mov
jecxz
adc
mov
pop
fiaddl
addr16
icebp
jmp
aas
leave
add
push
fnsave
mov
std
and
mov
addr16
mov
sub
gs
ljmp
xchg
mov
pop
adc
add
lea
and
fucomip
add
lods
pop
sbb
mov
cmp
fdivrs
add
daa
jmp
stc
aad
add
inc
pop
sbb
add
sub
fsub
xor
sahf
push
cs
daa
sub
push
dec
adc
data16
sbb
push
add
push
add
ss
inc
add
add
inc
stc
xor
loopne
lock
add
mov
lds
subb
fs
mov
bound
xchg
and
sahf
push
repnz
push
mov
mov
add
ja
cld
out
add
mov
adc
xchg
clc
add
cmp
xlat
add
iret
and
fistps
lahf
mov
ss
xchg
popa
add
loop
jo
mov
jnp
pop
fwait
popa
push
sbb
push
xchg
inc
test
mov
fbld
push
js
je
inc
mov
mov
sbb
dec
es
mov
movsb
iret
xchg
scas
and
call
mov
add
add
push
mov
sbb
ljmp
leave
shlb
xor
add
ljmp
mov
push
pusha
addr16
in
mov
mov
add
imul
sahf
das
mov
out
add
push
adc
lds
or
sbb
add
xchg
jo
xlat
sbb
add
push
xor
or
push
inc
data16
movsb
or
cs
mov
dec
rorl
jae
fwait
xlat
repnz
adc
push
xorb
add
popa
xchg
cmp
mov
fldenv
xor
jo
sahf
add
or
clc
inc
pusha
movsb
sub
das
repnz
je
or
cmc
ficoml
mov
add
sub
repz
mov
mov
inc
movsl
shl
add
pop
xorl
lods
cwtl
push
and
in
add
adc
cli
sub
or
mov
inc
fs
adc
fwait
xor
xlat
das
xchg
in
mov
add
xor
jp
pop
add
dec
shl
cld
cmp
cmp
mov
scas
push
repnz
testb
add
pop
dec
and
jnp
add
fiaddl
sahf
add
cwtl
in
test
cmpsb
pop
or
add
sub
push
fisttps
sbb
push
lahf
test
mov
lsl
sub
in
fcoms
jp
add
shl
inc
xlat
pop
pusha
sub
add
dec
mov
lret
mov
cs
mov
nop
add
popf
add
stos
sub
pop
in
add
xor
push
ss
push
or
out
pusha
jo
cmp
push
int
mov
mov
shl
cmpsb
push
mov
nop
inc
add
scas
imulb
mov
xchg
repnz
add
add
xor
add
mov
ror
addl
pushl
add
repnz
enter
add
xorl
lea
push
inc
mov
dec
push
mov
les
jle
or
pop
and
je
cmp
insl
mov
xchg
fs
push
fdivrp
ds
int3
push
inc
push
and
add
jl
sbb
jnp
cmc
pop
pusha
pushf
into
stos
pop
xchg
xchg
jecxz
pop
inc
inc
and
push
repnz
or
cwtl
cmpsl
add
fmuls
rclb
jne
pop
jle
pop
pop
mov
imul
pusha
lcall
mov
lahf
sbb
mov
jnp
add
xor
aam
ret
or
xor
push
and
shrl
mov
es
dec
popl
mov
xor
sti
out
out
rorb
pop
add
aas
lcall
pushl
add
shlb
notb
xorl
sub
add
nop
js
cmp
dec
dec
push
insb
push
mov
mov
sbb
sub
pop
or
sub
xor
add
add
out
lods
mov
lea
add
je
or
iret
repz
js
add
aas
xlat
leave
dec
fsubrs
add
dec
inc
xor
inc
add
lods
or
lret
add
jge
xchg
test
xchg
pop
push
les
pop
adc
or
add
inc
outsb
cmp
and
or
nop
test
rolb
sbb
ret
xlat
mov
dec
add
pop
xchg
call
mov
sub
or
ret
pop
jle
adc
and
push
add
inc
and
ljmp
andb
cld
add
das
jb
pop
out
out
xchg
adc
pusha
push
dec
sbb
inc
jo
jecxz
in
fsubrs
add
mov
enter
add
and
test
add
outsl
imul
add
cmp
mov
test
outsl
xor
outsb
inc
sbb
mov
jno
mov
rcrb
mov
dec
ret
lcall
dec
stos
pop
scas
movsl
sub
iret
test
push
rolb
nop
ss
mov
add
cwtl
push
add
xchg
pusha
clc
push
add
lahf
orb
mulb
push
mov
ds
aam
cli
xlat
in
inc
add
inc
loop
pusha
clc
loope
add
lcall
shrb
mov
rclb
fmul
add
mov
jg
in
add
adc
subb
mov
dec
push
xchg
push
subl
insb
cmp
jge
adc
sbb
stos
push
sub
cmp
xor
loop
movsb
in
lret
add
mov
inc
add
mov
aad
jo
mov
test
jle
add
xorl
fwait
lahf
daa
mov
or
jbe
jmp
iret
ss
cs
dec
scas
inc
clc
add
lea
call
gs
nop
test
mov
cwtl
lret
jle
mov
sbb
std
xchg
mov
xchg
push
jg
mov
push
idivb
js
out
aam
dec
mov
fwait
cmc
pop
and
adc
testb
fsubrp
add
jg
fdivs
push
sbb
sub
iret
adc
arpl
hlt
imul
add
and
cmp
pushf
add
cmp
testl
sahf
dec
shl
ja
dec
cmpsl
add
xchg
rcrl
adc
and
les
push
std
or
xor
pop
sub
rorb
lods
inc
add
shl
adc
inc
xchg
push
sbbb
dec
push
add
and
aas
add
add
inc
ja
roll
push
sbb
cmc
mov
push
sbb
push
andb
lods
push
add
clc
lods
sub
inc
add
cmpsb
xlat
xchg
add
cmp
add
daa
adc
sub
jecxz
imulb
scas
imul
xchg
stos
repz
adc
leave
pop
jl
lock
jle
jb
lds
ljmp
and
adc
push
adc
pop
std
shrb
clc
pop
add
ret
repz
add
ds
lahf
adc
cmpsb
fmull
sbb
jge
push
mov
arpl
shlb
stc
xor
push
shll
cmp
ret
or
cli
sub
add
add
add
lea
jge
clc
out
outsl
aas
cmp
inc
mov
inc
insl
add
lahf
pop
shrl
cmp
mov
std
hlt
mov
imul
or
pop
fwait
mov
pusha
add
repz
pop
xlat
adc
add
add
pop
nop
add
in
sarl
fisubl
outsb
loope
aam
add
stos
arpl
jns
and
add
pop
cs
inc
test
xchg
xchg
xchg
cmpsb
cld
in
jge
mov
and
iret
in
lcall
push
outsb
xor
xchg
imul
test
aam
cld
cmp
xchg
mov
inc
cmp
pop
add
es
arpl
sbb
sbb
std
adcb
inc
into
test
dec
fsubrl
push
pop
push
movsb
pushf
adcb
mov
rolb
adc
cmp
sub
cwtl
add
sub
adc
mov
sbb
es
rcl
inc
mov
push
out
add
jne
push
out
popf
add
dec
dec
cmp
into
sahf
pop
mov
or
jb
ja
mov
sub
std
pusha
pop
mov
sahf
mov
mov
test
inc
push
hlt
adc
imul
scas
pop
add
cs
pusha
out
mov
inc
rcl
adc
push
mov
bound
sbb
gs
lock
inc
adc
shrl
cmpsb
les
and
ljmp
xchg
mov
fdivp
pop
push
pop
adc
push
push
pop
and
add
sbb
fdivp
xor
cmp
loop
inc
pop
push
sbb
mov
xor
mov
les
adc
addb
jae
test
ja
lds
mov
sbb
push
ret
dec
mov
int
sbb
arpl
jp
shll
mov
ljmp
jae
ljmp
in
cmp
mov
aam
and
ljmp
adc
add
leave
pop
cmp
movsl
in
jb
add
mov
dec
outsb
lods
sub
pop
cs
add
add
push
in
lea
lods
arpl
jmp
repnz
sbb
stos
lds
movsb
push
push
mov
in
repnz
mov
cs
push
cmp
xor
scas
xchg
cmp
sbb
xor
xor
jne
pop
and
pop
mov
rclb
lea
iret
add
in
leave
mov
mov
add
push
xchg
xor
ss
mov
cmpsl
movsb
lods
fnstenv
add
sub
dec
loope
leave
cmpsb
ficoms
push
fs
icebp
dec
call
mov
mov
or
es
mov
inc
cmp
cwtl
dec
push
pop
jle
sbb
pop
pusha
roll
sbb
aad
inc
inc
insb
mov
xor
jne
in
add
mov
jns
enter
cmp
outsb
add
mov
nop
mov
jl
subb
sbb
jmp
lahf
dec
je
arpl
cmp
adc
sub
shl
lods
pop
mov
call
leave
xor
mov
gs
pop
add
leave
out
fs
push
arpl
push
jbe
outsl
pusha
test
push
mov
mov
add
and
dec
mov
push
inc
repnz
test
insl
jge
or
hlt
loop
addr16
mov
sbb
fisubrs
mov
xor
das
js
add
add
mov
insl
sti
sub
adc
pop
ja
jl
daa
add
fcomp
mov
orb
push
sahf
push
cmpb
jecxz
lods
xor
ret
rolb
inc
or
cs
stos
push
insb
pop
add
add
add
mov
jge
jne
add
loope
inc
pop
lods
mov
push
and
add
fistpl
push
and
icebp
add
jg
sysret
ja
jecxz
sub
xor
leave
xchg
aas
push
mov
xchg
jno
push
and
sub
or
ja
dec
cmp
icebp
data16
inc
inc
fiaddl
jnp
inc
mov
inc
xchg
add
xor
outsl
mov
adc
test
repz
push
add
sarb
dec
stos
orl
push
loope
std
ds
inc
lods
fsubrl
fidivrs
add
jecxz
insl
add
pop
cmc
fcmovnbe
test
inc
pushf
add
icebp
sub
mov
test
out
or
add
loopne
mov
pop
aas
sbb
cmp
movsl
mov
mov
or
daa
pop
lods
inc
xor
sbb
push
pop
insl
enter
add
pop
ljmp
test
lds
shrb
mov
enter
xor
and
jae
rolb
dec
and
hlt
ds
add
or
cld
push
test
inc
push
adc
cmpsb
sub
sar
jo
mov
cli
xchg
mov
mov
lds
or
js
popf
adc
add
fwait
pusha
xchg
syscall
push
cld
pop
xchg
nop
jle
cmpb
add
shll
dec
scas
popa
xchg
add
adcl
or
test
sbb
lea
int3
inc
push
lahf
inc
hlt
inc
xchg
pop
adc
jmp
je
mov
dec
das
cmp
sbb
cmc
or
out
out
and
push
pusha
in
hlt
add
xchg
test
mov
fcomps
mov
insl
dec
xchg
fs
lods
in
add
mov
mov
mov
add
xchg
push
test
add
daa
lods
aaa
jecxz
push
cltd
add
dec
je
push
pop
cmp
sti
clc
add
mov
loopne
pop
cld
mov
jo
pop
mov
mov
or
push
mov
loop
xchg
mov
sub
pop
shl
push
subb
add
pop
or
add
xor
sti
jo
pop
add
mov
ja
push
jns
inc
sbb
or
or
adc
push
sub
mov
or
mov
nop
push
and
adc
je
adc
lods
out
lds
fsubl
mov
adc
inc
cwtl
ds
loope
stos
sub
and
ret
add
xor
and
add
cmp
add
adc
xchg
jne
lds
movsb
sahf
mov
lahf
lock
stos
insb
pusha
add
je
nop
mov
mov
orb
orl
aaa
lods
push
cmp
pop
add
sub
cmp
mov
popf
and
cmpsl
inc
xchg
or
test
test
test
lock
dec
ljmp
jnp
push
icebp
add
adc
cmpsb
mov
add
gs
rcr
mov
adc
add
fiadds
lods
mov
insb
sub
sti
adc
lods
int
add
negb
sbb
xorb
fnstcw
and
sti
incb
add
pop
fbld
xchg
add
mov
int3
sub
xchg
test
scas
jno
add
push
xchg
push
add
rol
sbb
jbe
pop
aad
mov
sub
pop
sbb
repnz
adc
movsl
add
sbb
xchg
jg
in
mov
cmc
popf
test
icebp
xor
or
pop
or
adc
xor
das
sbb
add
cltd
js
ja
add
adc
jne
or
sbb
xor
xchg
je
push
mov
mov
mov
push
and
push
sti
stos
ret
add
lods
fdivs
or
dec
mov
scas
mov
push
mov
jbe
xchg
pop
add
inc
mov
lock
loope
sub
push
fadds
mov
ret
fs
int3
in
xchg
lds
push
lea
dec
add
add
or
jb
and
xchg
mov
mov
jo
push
lcall
add
push
sub
iret
adc
insb
idiv
loopne
test
pop
jnp
pusha
dec
mov
lods
daa
int3
mov
push
pop
rcr
stos
fs
or
mov
push
mov
int
je
cs
or
mov
adc
in
inc
push
out
inc
pop
mov
fnstsw
dec
add
push
loope
mov
dec
mov
add
mov
xchg
or
cmp
jae
nop
xchg
jmp
rorb
mov
std
xchg
push
in
lea
mov
rorb
mov
or
cmp
and
ds
cmp
add
lods
mov
int
aad
mov
stc
or
fdivrl
mov
adc
lret
xor
shll
mov
pop
dec
cwtl
rorb
jmp
in
inc
jae
push
pop
rcl
push
sbb
mov
lods
or
ja
lret
xchg
stos
pop
std
add
mov
inc
in
pop
jmp
lahf
pop
andb
addb
popa
ficoml
xor
or
xchg
sbb
or
mov
push
test
inc
nop
xlat
clc
inc
mov
js
pop
nop
leave
out
popf
mov
add
fmuls
push
or
cmp
add
adc
das
aam
imul
imul
andb
leave
cs
sbb
sbb
loopne
sti
push
daa
inc
mov
jb
inc
fistps
add
jecxz
stos
or
mov
nop
adc
push
lods
xor
cmpsl
fsubs
jge
add
push
mov
add
int3
insb
aad
cmp
cmp
mov
inc
jne
shrl
add
stos
mov
cmp
push
mov
test
pushl
xor
adc
loopne
cmp
sbb
add
cli
mov
add
fwait
loop
or
push
cmp
adc
fdivr
push
cwtl
add
mov
push
aad
aam
movsb
add
adc
push
mov
cmp
subb
imul
jnp
add
jecxz
pop
adc
mov
inc
adc
adc
daa
cmp
scas
cmc
imul
add
fsubrl
push
xorb
mov
sbb
jns
or
mov
ret
pop
add
pushf
mov
cmp
arpl
xchg
add
rorl
ds
addb
nop
xor
fadds
mov
call
in
mov
imul
enter
inc
shlb
jo
in
outsl
and
add
stos
push
adc
pop
inc
test
xchg
inc
push
add
or
fidivrs
jae
add
lea
cmp
roll
pop
push
xchg
inc
sub
add
in
lds
cmp
jo
dec
xor
fcoms
jnp
jle
push
clc
test
aas
inc
jl
loopne
js
add
psubsw
cmpsb
adc
rorb
jb
enter
rcll
mov
mov
scas
jmp
add
sbb
cmp
dec
lods
cmp
punpckhwd
sub
xchg
add
repnz
sub
rorb
rorl
cmpb
add
cli
fistps
out
add
or
fcmovnb
cld
dec
ret
pop
add
in
add
test
or
push
pop
xor
jecxz
jp
bound
adc
insl
add
and
jb
mov
add
loopne
adc
push
jno
bound
fstps
xor
in
adc
xchg
add
shlb
add
test
add
add
pop
jp
mov
add
sub
int3
fsub
sahf
and
je
add
mov
mov
add
xchg
xchg
xchg
jl
or
mov
push
pop
dec
push
add
pop
add
adc
push
and
push
les
sub
xlat
pop
shr
pop
jmp
jno
dec
ja
mov
pusha
stc
or
scas
and
mov
cwtl
adc
and
mov
shrb
xchg
test
mov
jbe
out
cmp
pop
mov
add
insl
out
pusha
mov
mov
and
pop
fmuls
loopne
inc
mov
faddp
xchg
mov
rolb
add
loopne
mov
iret
ss
and
out
mov
adc
mov
sub
sub
push
stos
test
int3
add
add
sub
ds
ret
add
cmpl
rorb
lret
mov
je
mov
sbb
cld
rorl
scas
popa
out
dec
out
add
shr
push
sbb
sub
pop
int
push
sbb
dec
cwtl
sbb
iret
sub
sub
push
inc
in
faddl
adc
xchg
sub
aam
imull
xchg
jo
repnz
jg
out
sbb
fdecstp
ret
scas
cmp
jle
mov
lcall
inc
jno
add
and
push
int3
in
rcrb
cli
inc
add
arpl
and
push
add
or
loopne
les
add
movsb
jns
ret
and
stc
inc
andb
xchg
or
add
loope
and
cld
iret
movsb
sbb
nop
xor
stos
pop
sbb
push
rcl
xchg
rolb
sub
lret
add
fsubrl
mov
add
ss
out
aam
xorl
mov
in
aas
mov
sub
in
add
je
or
sbb
addr16
mov
aaa
inc
test
out
push
jle
das
ret
jb
mov
test
cmp
lea
lret
inc
and
inc
add
mov
aas
test
lock
shlb
ret
popa
jl
inc
mov
loopne
add
lds
inc
or
add
inc
stc
dec
add
pop
addr16
aas
fiaddl
int
into
mov
add
xlat
in
adc
leave
push
rolb
mov
cli
cltd
inc
jle
add
jno
sub
sub
xor
add
into
add
dec
push
psrlw
nop
add
and
out
mov
adc
sbb
mov
jns
dec
xor
push
mov
stc
popa
adc
ljmp
ja
fimull
pop
cld
loop
into
jmp
add
mov
cmp
invd
aas
mov
ss
pushf
inc
jp
aaa
xor
cli
cmp
adc
pop
int3
call
mov
pop
data16
dec
push
arpl
push
dec
dec
mov
lret
movsb
add
dec
jp
add
xchg
add
mov
adc
xlat
pusha
test
sub
push
adc
jecxz
xchg
sarl
lock
stos
cmp
aas
pop
into
js,pn
aaa
popf
outsl
mov
sub
mov
jl
ja
ds
ljmp
pop
stos
add
xchg
faddl
dec
shrd
add
mov
xchg
or
mov
dec
inc
and
iret
inc
cmp
enter
sub
adc
or
sbb
jb
mov
insl
das
xchg
ja
testl
enter
pop
pop
loop
inc
in
popf
jae
dec
add
jecxz
cwtl
fwait
scas
push
add
xor
push
adc
test
sbb
xor
push
push
mov
stc
test
fwait
adcl
xchg
testl
mov
les
movsb
sub
jnp
andb
mov
outsl
cmpsl
loopne
xor
inc
pop
pop
addr16
sub
push
add
sbb
insl
add
insb
rcrb
negb
scas
sbb
seto
in
mov
dec
add
mov
pop
call
mov
sub
add
les
adc
scas
nop
mov
pop
push
dec
inc
pop
loopne
mov
test
adc
or
sbb
cmp
add
xchg
je
push
jmp
xchg
add
cmp
in
push
mov
clc
inc
icebp
jne
or
mov
push
xchg
xchg
push
sbb
mov
mov
dec
mov
dec
inc
subb
shlb
cltd
and
mov
rcrb
sarl
inc
cwtl
movsb
sarb
pusha
add
rorl
add
xchg
cld
arpl
clc
inc
out
jo
or
xor
xor
sbb
add
int
es
inc
pop
nop
shll
add
aas
xchg
add
sahf
in
lcall
add
cltd
cld
pusha
stos
jns
sbb
xchg
shl
test
add
and
add
mov
pop
push
and
mov
jecxz
pushf
xchg
or
inc
xchg
xchg
pop
jl
push
add
and
lret
jecxz
add
dec
inc
jo
or
mov
fsub
add
bound
add
inc
movsl
inc
subb
icebp
fiaddl
sti
dec
adc
mov
cmpsl
es
mov
jne
js
rolb
loopne
pop
sbb
bound
jge
aad
adc
xchg
leave
dec
iret
lds
lret
push
rclb
jne
add
int3
fwait
lea
shll
add
lret
mov
out
dec
int3
out
cmp
outsl
add
pop
xchg
dec
subl
mov
and
add
shlb
repnz
push
out
mov
jo
add
scas
mov
add
jnp
or
rolb
sbb
sub
jo
icebp
jle
shrl
cmp
mov
cmp
xchg
inc
sbb
bnd
cmp
mov
shlb
daa
add
js
inc
subb
fldcw
push
adc
mov
js
and
repnz
or
and
push
mov
mov
jne
jno
fcmovnbe
add
cwtl
cld
rolb
push
pop
jmp
mov
fstpt
cmpsb
add
xlat
jo
in
movsl
adc
pop
sti
pop
cmp
mov
shrb
sub
cmc
fildl
lret
fs
clc
addb
xchg
add
xchg
cwtl
mov
mov
adc
das
push
add
lods
jl
jge
incl
xchg
pusha
pop
add
xlat
dec
aam
adc
rolb
imul
mov
jp
std
iret
outsb
sbb
xchg
movl
add
sub
inc
jbe
add
xchg
add
mov
loop
mov
add
xor
addr16
add
scas
fdivrs
hlt
iret
add
jg
adc
and
mov
push
lods
scas
pop
neg
and
mov
dec
xchg
shr
cld
filds
xor
data16
dec
scas
nop
mov
or
dec
add
cmpsb
shrb
cwtl
push
or
test
pusha
aam
mov
add
imul
mov
add
sbb
adc
or
cmp
add
push
arpl
jo
decb
or
jne
mov
mov
lock
inc
jl
add
aaa
cli
xlat
rclb
sbb
movsb
fmuls
imul
add
jmp
aad
fmul
add
pop
ja
cli
xchg
jns
add
mov
pop
cmp
scas
shlb
add
ja
nopl
sbb
pusha
aad
push
iret
icebp
pop
inc
add
leave
mov
mov
mov
add
sub
iret
add
jno
or
into
mov
test
out
add
stos
fimull
sbb
add
cld
loopne
daa
xchg
lcall
movsl
dec
iret
add
jns
pop
add
mov
jge
sub
std
out
xchg
add
mov
sub
add
fwait
inc
call
out
add
imul
xchg
rolb
je
insb
mov
dec
pop
add
mov
adc
add
stos
fsubrs
std
jle
repnz
pop
and
rcl
xor
fimull
cmp
jnp
les
add
and
and
mov
mov
add
daa
xlat
popa
push
push
je
add
mov
xor
xchg
xor
sbb
xchg
or
add
stos
and
push
dec
inc
push
leave
jae
inc
mov
roll
jecxz
and
iret
mul
adc
xchg
and
add
xchg
push
pop
cmp
xor
bound
add
mov
mov
hlt
and
add
test
xor
incl
inc
or
pop
idivb
daa
push
hlt
lock
jge
ds
orb
std
add
sbb
sbb
pop
filds
xor
add
outsl
mov
add
push
xchg
push
dec
add
out
bnd
fisttps
add
sbb
repz
jl
cmp
xor
and
jmp
call
push
or
loop
and
or
xchg
hlt
fldl
push
jno
sub
mov
jo,pt
add
jle
repz
adc
jge
mov
xor
stos
aas
mov
cmp
push
add
mov
add
lahf
add
sahf
arpl
add
dec
adc
xchg
outsl
sbb
add
dec
push
mov
dec
mov
negb
sub
add
add
dec
adc
mul
add
nop
cmp
ficompl
jnp
cmp
scas
xchg
out
idiv
pushf
test
mov
xchg
dec
sbb
or
sbb
and
outsb
add
inc
add
sub
ret
pop
loopne
lahf
les
es
andb
jbe
push
out
mov
testl
cmp
subl
ss
fadds
cmp
pop
sbb
sub
adc
pop
adc
jo
adc
arpl
and
pop
imul
mov
jle
icebp
adcl
repnz
fs
pusha
add
outsb
jae
cld
cmpsl
add
xchg
or
mov
push
rorb
add
xor
mov
add
cmpsl
sbb
mov
add
inc
sub
mov
dec
nop
sub
adc
adc
sub
lock
add
lock
pop
add
in
ja
test
add
xor
and
adc
call
imul
and
jl
inc
aad
sarb
cmp
push
xchg
mov
pop
adc
in
cld
pop
pusha
pop
js
jbe
xchg
mov
pop
lret
dec
js
jnp
aam
add
cmpsl
roll
out
push
dec
jmp
jns
inc
sub
mov
dec
mov
sbb
repnz
mov
test
cmp
cmp
mov
add
int3
mov
cmp
sub
jp
mov
pop
xlat
punpckhbw
mov
mov
jg,pt
add
mov
cmpsl
sub
add
dec
inc
test
add
push
ror
push
push
adcb
int3
pop
ret
cs
add
add
pop
push
sub
lret
sub
push
add
jl
cmpsb
aas
and
mov
sbb
push
dec
push
jmp
push
lds
call
testb
repnz
mov
inc
adc
fcompl
mov
leave
adc
add
fmul
call
pop
jb
mov
mov
add
popf
push
add
xchg
js
mov
test
add
int3
cmp
hlt
adc
scas
mov
rorb
in
lret
testl
test
js
int3
cwtl
pop
in
call
add
fcomps
cs
cltd
ret
jo
xlat
add
dec
lock
add
sbb
mov
clc
ljmp
sbbb
add
outsb
fildl
out
jbe
idivl
inc
in
bound
lods
or
scas
sub
xor
dec
repz
daa
jp
add
lret
sub
jmp
out
ss
dec
mov
jae
cmpl
xchg
cmpsl
in
mov
xchg
cmp
filds
std
add
push
add
add
dec
pop
iret
adc
imull
adc
les
shll
sbb
loopne
add
xor
push
inc
xor
mov
fcompl
jb
sbb
sarl
add
es
js
bnd
cmp
aam
fwait
add
adc
loopne
repnz
daa
and
fidivrl
add
loope
add
cwtl
push
xchg
pop
lcall
hlt
push
loope
scas
in
fdivrl
add
mov
add
ds
or
mov
jmp
jns
or
shrb
add
sub
cmp
push
dec
or
jecxz
cmp
jae
add
and
in
sub
mov
bsf
add
scas
popa
sub
add
inc
je
imul
add
ljmp
push
add
cmpsl
scas
sub
fwait
xchg
add
mov
mov
mov
std
fs
jno
roll
cmpsb
pop
cmp
cmp
xor
add
xchg
iret
sub
into
mov
sahf
jo
add
pop
add
pop
lds
inc
and
dec
scas
dec
sbb
sbb
pusha
fldenv
ds
jmp
adc
jg
jnp
mov
ret
inc
jo
stc
add
lock
lods
or
addb
dec
aaa
mov
push
adc
adc
rolb
pusha
leave
ss
pop
idivb
cwtl
mov
incl
test
popf
daa
insb
ds
add
sub
and
out
nop
ja
or
mov
out
add
rolb
bound
lahf
add
mov
cli
mov
add
inc
out
scas
outsb
pop
into
pop
ljmp
nop
adc
sbb
fwait
cmpsb
jae
add
scas
dec
popa
add
jnp
insb
or
jo
mov
push
shr
sti
pop
je
add
sbb
adc
movsb
addb
sti
jle
xor
sub
enter
insl
out
aam
add
ret
movsb
js
push
es
sub
lea
bound
loope
adc
insb
sbb
push
pcmpgtb
and
xor
cmp
jb
repnz
dec
pop
or
xor
insl
adc
loope
cs
sub
push
or
fisttpll
jb
fld
pusha
mov
sbb
es
stc
jns
add
sbb
addb
dec
cltd
pop
mov
xor
cmc
pusha
call
or
or
push
rcrb
negb
ret
sbb
inc
cmpsl
fwait
or
mov
mov
adc
mov
add
movsb
mov
and
add
jns
fs
push
outsl
push
and
adc
inc
push
dec
lock
mov
inc
add
insb
add
xlat
bound
outsl
add
stc
inc
jl
movsb
aad
aad
addl
mov
je
push
pop
loop
sub
pushl
lock
xor
mov
jns
inc
mov
gs
pop
sbbb
dec
mov
add
dec
jno
out
push
xchg
or
dec
push
or
cmp
hlt
add
mov
adc
add
pop
dec
xchg
shrb
cmp
jmp
mov
push
and
lds
pop
je
add
fistpl
xor
enter
mov
add
or
out
fisttpl
cli
or
mov
xor
negb
jmp
dec
or
jp
jl
call
push
and
sub
fwait
mov
in
mov
mov
jno
nop
mov
test
inc
or
push
pshufw
and
nop
sub
and
pusha
scas
and
add
sub
or
addl
popa
jg
add
xchg
sub
fxch
mov
lods
fsubrl
sub
mov
lods
les
scas
and
add
jle
xor
notl
and
add
aaa
enter
js
add
ss
loope
es
incb
dec
cmp
cmc
jae
sbb
aad
fisttps
lock
adc
add
mov
fistpll
sbb
or
pop
pushf
in
sub
lock
out
push
ss
add
ret
jb
sbb
add
int3
and
adc
dec
mov
pop
dec
add
aas
movsl
lea
pop
sub
add
jo
dec
mov
repz
aaa
insl
jmp
push
int
and
xchg
jge
add
inc
push
call
loop
add
in
lock
add
pop
nop
mov
cld
dec
add
sbb
pusha
add
ret
ljmp
fsubl
bound
mov
add
xchg
add
push
cs
pushf
inc
inc
leave
imul
cmpsb
cwtl
add
mov
cmp
in
sbb
pop
lds
int3
adc
sub
and
js
mov
movsb
or
movsb
push
shl
imul
add
push
xor
add
push
inc
call
sbb
pop
subb
pop
into
in
cld
cmpsl
insl
mov
and
cmpsb
pop
imul
add
adc
jno
pushf
lods
rcrl
mov
stos
out
cli
addb
xchg
jb
mov
add
scas
iret
jp
inc
insl
cmp
rolb
insb
mov
repnz
push
xchg
jno
add
cmp
ds
dec
mulb
add
sub
sahf
cmpsl
clc
cmp
xchg
add
and
push
pusha
pop
adc
inc
mov
xchg
and
ljmp
in
cmp
cvtdq2ps
adc
pusha
lock
leave
mov
xor
mov
sub
cltd
push
xor
cmp
xchg
enter
xor
aad
scas
lcall
push
pop
add
daa
icebp
add
in
popa
aam
les
ljmp
pop
lahf
push
cmp
bound
pop
mov
nop
aad
cmp
or
nop
sarb
add
dec
sub
int3
out
mov
push
add
add
xor
hlt
push
xchg
cmp
adc
mov
sub
fs
imul
ror
pop
adc
push
mov
cmp
in
dec
cs
jne
scas
or
hlt
sub
in
loop
stc
dec
push
aam
ljmp
popf
jecxz
add
mov
adc
xchg
push
push
shlb
mov
adc
add
loope
cld
push
jns
sbb
add
and
test
push
xor
push
mov
dec
and
test
rolb
add
jnp
pop
pop
sbb
clc
cmc
lahf
adc
lods
imul
orb
inc
xchg
mov
mov
repz
or
sbb
popa
iret
stos
cwtl
and
flds
dec
imul
ret
enter
xor
jo
push
popa
and
outsb
cmc
js
push
sbb
imul
cmpl
push
add
xor
sti
fadd
lock
pop
xor
jle
repz
subb
dec
mov
push
sub
add
insb
or
cmc
out
shl
mov
test
adc
scas
pop
push
mov
cmp
xlat
fdivrs
leave
mov
popf
es
hlt
cld
in
and
adc
add
repz
sbb
cmp
add
cmp
jne
add
and
jl
adc
mov
add
fwait
jb
addl
punpckhdq
xchg
inc
cmp
mov
jb
movsb
cmp
or
scas
addb
xchg
xchg
lahf
clc
sbbb
aam
bnd
jl
test
xor
cmp
pop
ds
sbbb
and
iret
loopne
mov
add
rorb
jle
jae
push
jp
in
xchg
inc
leave
loop
subb
adc
cs
sbb
aas
sbbb
sbb
jl
push
inc
push
inc
out
and
ret
lea
dec
arpl
pop
mov
repnz
test
mulb
sub
add
adc
or
dec
dec
push
fstl
add
sub
jb
scas
mov
add
xor
and
ret
fldenv
call
lea
add
ds
lcall
push
inc
mov
loope
lods
adc
outsl
mov
ja
add
or
pop
mov
pop
out
add
pop
les
pusha
pushf
mov
adc
clc
addl
inc
mov
xchg
add
xor
out
mov
pop
cld
mov
in
das
pushf
ljmp
mov
jle
ds
in
cmpb
scas
out
lock
mov
sar
add
dec
mov
inc
add
jmp
xor
jg
cmpsb
push
nop
stc
and
sub
imul
addb
gs
sbb
leave
out
dec
push
jns
pop
jae
aas
mov
dec
shlb
fsubrs
loop
sub
fisttps
add
addl
in
add
or
mov
insb
mov
push
lret
sbb
clc
sbb
push
out
add
sub
cmp
fsubr
mov
xchg
iret
mov
inc
adc
ss
rorb
jbe
add
leave
jb
insb
clc
in
cli
add
cmc
mov
dec
adc
xor
add
in
int
mov
push
adc
insb
jnp
lret
xlat
add
push
shll
out
pop
push
pop
ficoml
subl
in
shll
pusha
fdivs
sahf
gs
cs
jnp
dec
add
mov
movsl
clc
or
add
pop
lds
mov
outsl
repz
sahf
mov
or
sbb
dec
cmp
fiadds
jb
lret
sbb
ficompl
adc
add
add
xchg
mov
xchg
loopne
ds
add
les
aam
ljmp
repz
dec
imul
adc
aas
sbbb
fiaddl
add
lock
or
ret
add
add
pop
enter
inc
out
add
lods
std
dec
push
int
mov
xchg
and
mov
adc
inc
mov
and
mov
add
daa
inc
mov
pop
fucomp
add
mov
push
popa
movsb
in
jno
lock
add
xchg
mov
iret
imul
add
dec
fs
mov
push
sbb
and
add
jno
pushf
or
mov
idiv
loop
add
test
add
jae
push
dec
subb
mov
add
or
in
clc
sbb
enter
dec
shll
push
xlat
iret
lds
lret
loope
xchg
push
addl
lods
imul
push
inc
cmpsb
mov
pusha
ret
and
adc
imul
testl
xor
and
sub
jbe
lock
adc
popa
dec
push
add
cwtl
popf
js
mov
out
pop
out
add
pop
and
cmp
cmp
add
inc
setge
push
and
adc
mov
adc
jge
xchg
int
mov
sub
sarl
jl
add
mov
add
out
insl
inc
pop
mov
mov
inc
insb
pop
add
and
mov
push
add
jno
and
aad
nop
inc
push
cmp
inc
add
jnp
pop
imul
dec
hlt
mov
lods
ja
jle
adc
add
or
pop
arpl
cwtl
push
cmpsl
rorl
and
je
xor
testl
lahf
rolb
mov
bound
xor
movsb
jle
push
fs
add
pop
and
jb
push
lcall
cmp
js
adc
cmp
jns
sbb
inc
call
iret
lcall
pusha
push
popf
or
pusha
push
pop
pusha
jmp
add
adc
pop
inc
dec
pop
jge
cmp
loope
inc
adc
mov
insl
or
sbb
add
inc
jne
dec
popf
loopne
pop
fildl
mov
push
add
jnp
inc
pop
xchg
adc
add
dec
cld
dec
pop
xchg
xchg
push
das
add
popf
push
jmp
gs
mov
xor
mov
insl
dec
fwait
or
aaa
enter
cmp
lock
jb
jo
push
mov
pop
jmp
sub
push
mov
cwtl
add
xlat
dec
out
cmc
xor
sbb
xor
aad
add
ss
mov
cmp
xchg
pushf
data16
mov
sbb
or
xor
sub
aaa
rolb
in
sahf
aad
dec
movsb
mov
and
lahf
into
shlb
fsubs
sub
pop
push
push
popa
ljmp
push
rorb
pop
out
xlat
fs
push
out
and
mov
pop
add
push
shlb
pop
cmp
pop
sub
adc
icebp
je
sbb
scas
add
pop
adc
shl
outsb
jp
pusha
sbb
mov
test
add
cmp
faddl
xchg
dec
shrl
cmp
es
flds
lret
mov
add
cwtl
cld
loope
hlt
inc
rolb
push
shll
mov
sub
add
cmp
add
mov
mov
sub
aam
rol
cwtl
in
mov
add
fsubrl
fiaddl
sbb
mov
scas
or
push
mov
push
lcall
push
push
mov
inc
add
and
arpl
pop
jno
in
test
les
fs
subb
xchg
jmp
adc
jne
cmpsl
push
nop
popa
xor
push
and
call
es
and
xchg
push
mov
lcall
add
jg
nop
add
lcall
je
jge
inc
add
fcoms
out
pushf
xchg
or
fidivrs
mov
outsl
mov
xor
add
hlt
test
pop
in
sub
and
inc
mov
add
aad
mov
dec
xchg
and
lret
push
andb
test
and
xor
cmp
xor
clc
imul
pushf
xor
imul
mov
lret
leave
push
and
dec
lods
nop
repnz
movsb
movsb
shrl
adc
fbstp
push
fdiv
nop
test
scas
xchg
push
test
or
sbb
rcl
pushf
cmp
add
mov
adc
shl
dec
cwtl
movsb
adcb
addl
cwtl
push
xor
out
cmpsb
sub
or
xor
pop
adc
movsb
jmp
rcll
pop
fwait
andl
sub
divb
divl
stc
in
mov
sahf
adc
xlat
push
mov
in
popf
aam
test
xor
sub
fnsave
and
or
or
xor
xor
lods
test
shrb
xchg
xor
jo
cmp
in
aam
int3
loope
mov
sub
sarl
or
push
pushf
sub
push
fsts
mov
lcall
daa
pop
adcl
pop
mov
mov
popa
dec
xchg
jge
and
jno
scas
mov
lahf
lods
cmpsb
push
movl
sub
xor
test
push
loopne
cmp
imul
andb
cmp
sub
orb
insl
and
mov
mov
add
jle
xchg
add
xchg
and
xchg
push
mov
pop
sbb
aam
orl
incl
gs
arpl
leave
xor
xor
sbb
ror
mov
test
cmpsl
dec
push
pop
jbe
stos
rsqrtps
std
and
stos
insl
adc
dec
daa
lea
mov
icebp
cltd
add
adc
rcrl
sub
mov
add
jge
or
int3
mov
adc
and
lret
loopne
push
mov
mov
jno
add
loopne
fnstenv
enter
add
insl
out
jbe
adc
imul
add
mov
sbb
pop
call
fimuls
jbe
aad
adc
out
and
enter
ds
mov
sbb
cmp
push
adc
aas
xchg
add
les
repz
sbb
mov
or
and
jo
dec
bound
xchg
push
in
jnp
add
test
ret
inc
and
inc
imul
push
sahf
dec
jle
bound
clc
push
adc
jmp
xchg
or
das
push
push
insl
cmp
xchg
jl
adc
imul
fadds
adc
repz
mov
push
inc
xor
andb
mov
jno
roll
imul
push
loopne
or
pushf
into
notl
xorb
dec
mov
pop
pop
cmp
enter
xor
and
push
inc
insb
insl
xor
adc
xchg
clc
push
rcrb
jbe
jnp
es
mov
int3
push
ja
cld
and
aam
aas
xchg
test
fmuls
subb
and
stos
mov
sbb
repnz
jae
punpckhdq
jo
pop
stos
xor
clc
scas
mov
nop
xchg
add
ljmp
sbb
test
push
add
mov
imul
dec
inc
sbb
lret
add
pop
mov
aam
mov
lret
pusha
rcl
xchg
mov
push
je
fdivrs
mov
push
inc
mov
add
lahf
jbe
sbb
adc
movl
mov
dec
dec
and
xchg
in
lock
jle
or
ret
sarb
iret
loop
add
push
adcl
mov
and
lahf
fistl
out
fistl
lahf
cmc
test
daa
int3
inc
jmp
xor
lods
add
popf
lock
stos
adc
stos
test
cmc
mov
add
mov
and
rorb
jb
add
aam
dec
mov
cmp
xor
subl
mov
mull
pop
inc
mov
add
mov
scas
pop
or
xor
out
and
inc
cmc
fmull
push
mov
inc
push
add
inc
sahf
movsb
add
lds
and
rcrl
mov
movsb
push
mov
and
je
add
pusha
mov
loopne
sti
xchg
and
adc
insl
xlat
ret
push
push
inc
out
add
out
dec
daa
in
xor
sub
add
mov
jl
mov
mov
xchg
jmp
xor
nop
leave
mov
push
sbb
pushf
xchg
loopne
push
pop
mov
sub
mov
loop
js
adc
nop
push
lods
pusha
mov
dec
push
add
in
rorb
clc
add
xchg
sbb
add
pop
jmp
ss
adc
mov
inc
cmp
mov
inc
leave
and
add
clc
imul
mov
xor
pop
mov
dec
xor
fadds
repz
clc
xchg
sub
push
insl
dec
mov
mov
dec
call
nop
push
pop
aaa
and
add
stc
stos
inc
sub
repnz
mov
xchg
das
push
pop
xor
subb
push
mov
sub
enter
mov
adc
mov
dec
daa
adc
sbb
add
pop
inc
lock
cmc
mov
mov
sbb
lret
test
dec
daa
mov
fstl
ds
cmpsl
lock
call
aad
hlt
incl
movsb
mov
pop
mov
lea
xchg
jno
hlt
sahf
mov
rorl
add
sbb
pop
xchg
add
pusha
dec
push
xor
jmp
adc
loopne
imul
xor
adc
push
add
xchg
mov
dec
cmp
enter
je
inc
insb
in
jg
add
add
xor
cli
imul
mov
lahf
mov
pop
and
dec
out
add
or
fld
pop
rclb
shll
fdiv
or
fiadds
mov
clc
cwtl
dec
mov
add
std
pop
mov
faddl
xor
loope
xchg
roll
scas
adc
subb
mov
and
dec
pop
pop
and
ret
add
mov
adc
cmp
jmp
sub
cld
mov
out
insb
cmp
lods
push
push
ss
js
jbe
movsl
and
mov
sbbb
ret
cmp
mov
insb
add
mov
inc
fidivs
pop
inc
xor
shll
loopne
lcall
xor
shrb
js
scas
add
sbb
mov
insl
mov
and
or
mov
cmp
cmp
cmp
loopne
xor
mov
add
inc
scas
add
rolb
pop
cmpsb
xchg
jb
js
push
inc
push
fadds
push
mov
popa
mov
dec
nop
xchg
dec
mov
xor
jno
hlt
jo
add
mov
xchg
je
mov
cld
sub
adc
cli
cltd
pop
push
xor
and
pop
jl
mov
xchg
jb
cmc
std
jo
cmp
test
xchg
cwtl
sub
adc
adc
adc
lock
mov
es
fsubs
cmp
or
stos
in
push
cmp
cmpsl
add
imul
ficompl
inc
outsb
cwtl
mov
and
push
mov
cmp
mov
rclb
cs
pop
inc
sub
nop
sbb
mov
or
pop
or
xchg
loopne
ds
add
rol
sbb
xor
or
clc
fsubrs
mov
sbb
jnp
test
inc
dec
mov
lahf
cmp
inc
lret
inc
fmul
sub
xchg
xor
push
bound
mov
repnz
xor
jge
ja
mov
inc
clc
add
nop
inc
in
pop
mov
gs
rcr
dec
lock
jns
add
lea
or
inc
cmpb
lcall
mov
leave
xchg
jbe
fadds
jmp
inc
add
adc
sbb
imul
aad
mov
push
jnp
negb
inc
inc
and
inc
mov
and
xchg
call
or
dec
test
pop
inc
dec
cmpsb
stos
lret
scas
ljmp
rorl
mov
mov
adc
arpl
pop
dec
inc
xchg
in
stos
xchg
cld
ror
adc
xchg
out
scas
inc
add
jmp
cmp
add
pop
subl
inc
outsb
ja
add
es
std
gs
xchg
popf
and
xlat
or
dec
imul
push
jb
cmpl
loopne
xor
add
mov
int3
inc
mov
dec
adc
pushf
add
push
inc
scas
das
aas
lret
pop
mov
aam
loopne
fisubs
add
shl
add
enter
hlt
xor
pop
in
mov
xor
add
jmp
xor
dec
inc
gs
add
stos
loopne
mov
ljmp
aad
imull
jns
int3
mov
outsb
inc
inc
sbb
movsl
dec
jle
sbbl
xor
dec
mov
clc
sbb
loop
shrb
push
addb
sub
adc
addr16
sti
adc
jge
ret
fldl
or
jg
dec
sahf
stc
stos
xchg
jo
cld
push
ds
add
jnp
int3
ja
popa
std
adc
or
loope
cli
add
out
mov
jmp
les
xor
ds
js
mov
and
int3
and
cmpsl
pop
enter
cmp
pop
daa
ret
insb
mov
shlb
push
pushf
push
fisttpll
std
cmp
test
mov
movsl
and
adc
pop
pop
cltd
lea
les
push
mov
dec
adc
push
push
xor
pop
sbb
add
push
and
push
jne
add
shll
add
mov
rcl
cmp
stc
and
pop
push
xor
insb
adc
icebp
test
pop
inc
test
aaa
je
mov
daa
cli
stc
aaa
rolb
ljmp
jns
and
icebp
dec
xchg
int3
enter
out
loope
push
add
sub
mov
out
sbb
sbb
and
mov
cmp
les
inc
into
ret
xor
or
jbe
pop
cmpsb
cwtl
and
orb
fldpi
xchg
call
cld
mov
iret
adc
and
std
leave
popf
cs
sbb
add
and
rorl
jae
add
cmp
int3
jge
and
sbb
mov
add
xchg
fcoml
in
xor
movsb
test
cmp
aaa
add
adc
jno
loopne
in
jb
addl
nopl
and
and
inc
in
rcrb
test
add
movsl
fisttpll
out
xor
dec
sbb
jg
scas
in
add
cmp
pop
xchg
jno
push
aam
jge
je
or
popa
add
stos
add
lock
push
xlat
or
xchg
les
rolb
jge
add
test
or
xor
push
shlb
fbstp
adc
xchg
pop
fwait
popa
mov
popf
or
or
faddl
mov
je
data16
xor
ret
jnp
add
mov
dec
inc
test
gs
andb
add
dec
or
add
aas
rolb
ret
enter
lea
rcl
cmp
shlb
push
stc
in
into
sub
add
jmp
adc
rcrb
pop
mov
sahf
sbb
daa
call
xorb
sbb
jecxz
aas
inc
push
cmpb
xchg
fmul
adc
add
or
lods
xchg
sbbb
cmp
mov
jo
cli
pop
mov
loope
popf
mov
aaa
cmp
or
and
ljmp
xlat
scas
movb
shlb
jns
mov
xchg
test
sub
mov
or
dec
test
test
ret
jo
xor
int3
jle
mov
dec
xorb
cltd
mov
or
inc
or
xchg
adc
add
int3
inc
mov
or
imul
inc
mov
mov
sti
mov
or
loopne
xor
push
leave
jo
add
jbe
cmp
test
sub
or
inc
pop
add
aaa
jg
dec
idivl
inc
mov
iret
push
push
fmul
jmp
mov
int3
xchg
inc
aaa
add
mov
cmp
dec
test
sub
sub
aad
mov
das
add
pop
test
mov
jl
in
cmp
push
jnp
jmp
pshufw
lret
jecxz
mov
fsubrs
in
sub
xor
fbstp
test
and
xchg
stc
ficomps
add
cmp
and
push
in
int3
xchg
pop
in
es
jl
inc
sbb
inc
xor
xchg
dec
lods
pop
inc
ret
pop
mov
lock
les
aas
jg
enter
mov
mov
andl
ret
mov
inc
add
out
test
andps
xchg
dec
cmpsb
add
jne
mov
xor
aas
movsb
popa
sbb
inc
test
mov
rcll
xor
cmpsb
add
sub
sbb
int
xchg
pop
and
mov
popf
push
or
pop
inc
sub
xchg
mov
sub
aaa
add
outsb
cli
test
xchg
lret
xor
scas
xor
cld
pop
fcmovnu
stos
loopne
add
sbb
sub
inc
sbb
xchg
movsb
std
and
pop
movsl
dec
add
clc
jmp
mov
test
and
mov
xor
je
xchg
xchg
jb
add
sti
repz
add
clc
xor
pop
fldenv
movsl
adc
ret
pop
filds
je
jmp
in
addr16
mov
mov
call
arpl
aad
cld
loop
pusha
pop
fisttpll
sbb
adc
mov
xchg
adc
cmp
leave
sbb
addr16
in
dec
mov
inc
xor
xlat
arpl
incb
push
lea
pop
or
std
mov
mov
mov
es
mov
mov
and
push
jp
cs
pop
fiaddl
dec
xor
or
mov
mov
adc
test
sbbl
add
cs
loop
cmp
jmp
iretw
loope
adc
pop
rcl
or
sub
add
aaa
xchg
repnz
jo
pop
push
xchg
cwtl
mov
dec
xor
jecxz
lret
push
jo
sbb
in
dec
ja
fsubl
push
int3
mov
cmpsb
test
jl
loop
xor
jns
popa
push
int3
inc
adc
pop
scas
iret
insl
dec
movsb
jae
sbb
dec
jmp
leave
and
push
xchg
je
outsb
inc
sarb
adc
sahf
ljmp
add
insb
arpl
sbb
mov
dec
add
mov
shlb
lea
divl
or
cmp
add
xchg
in
outsl
pop
sbb
add
and
and
outsb
add
out
mov
scas
inc
xchg
cmp
cmp
or
sbb
adc
fs
adc
inc
divl
nop
xchg
cli
je
popa
adcb
push
xchg
pop
pop
adc
mov
sub
gs
pop
test
fs
ja
adc
jecxz
add
into
or
int3
or
pop
dec
push
orl
push
xchg
fwait
inc
mov
test
jb,pn
lret
repnz
cmp
or
xor
insb
dec
nop
notl
aad
fwait
loope
mov
lcall
mov
cmp
jmp
insl
insb
xor
pop
fldl
dec
mov
sub
jl
add
mov
xchg
jg
add
xchg
adc
or
inc
test
jno
rcrb
add
jg
jle
xchg
in
or
mov
loopne
fisubl
fistpll
mov
inc
and
xchg
sub
and
loope
aaa
mov
push
cmp
leave
inc
xchg
inc
subb
out
imul
int
dec
cmc
jns
repnz
add
sbb
xor
xor
sub
shlb
jnp
cmp
lcall
jp
add
scas
shl
and
add
add
mov
notl
mov
sahf
loopne
pushf
shrl
add
mov
push
je
cmpsl
cmc
movsl
jp
dec
dec
aaa
mov
add
sahf
push
stos
dec
xor
enter
dec
adc
add
andb
cmp
xchg
aam
xchg
mov
cltd
jmp
sbb
fstpt
ds
or
lcall
xchg
roll
mov
cmp
add
addl
xor
cmp
in
inc
add
les
xchg
ret
xchg
test
and
ds
jp
sbb
nop
pop
imul
dec
sbb
jne
or
pusha
addl
add
fisubl
or
mov
xor
cltd
and
and
add
pop
lret
dec
xchg
clc
popa
mov
repnz
cmp
int
or
scas
call
rcl
sbb
adc
adc
ljmp
jmp
pusha
loop
pop
dec
inc
or
cmp
xchg
push
scas
sbb
mov
test
pop
pop
push
mov
inc
fsub
pop
sti
es
xchg
add
insl
mov
pusha
push
in
mov
and
dec
xchg
pop
add
sbb
adc
dec
icebp
mov
sbb
loopne
jo
and
xchg
mov
test
lock
jb
xchg
cmp
fldl
sbb
aaa
jno
test
jo
mov
xor
data16
addb
fistpll
adc
arpl
rclb
repnz
xchg
or
or
nop
xor
add
inc
jmp
mov
icebp
mov
gs
movsb
cwtl
adc
mov
mov
daa
out
and
cs
adc
push
dec
test
int3
insb
push
shl
sbb
push
imul
sbb
out
cwtl
sbb
es
nop
add
addb
cld
cmpsl
jne
push
jb
and
mov
xchg
and
cmp
jmp
mov
out
sbb
movsb
movsl
sbb
pop
and
pop
dec
leave
test
pusha
xchg
pop
xor
and
into
inc
aas
mov
jno
push
cmp
mov
clc
shll
js
lret
ja
stos
fistpl
js
push
cmp
pop
call
dec
pop
adc
aaa
add
lods
jle
sbb
lret
cmp
les
inc
cwtl
pusha
pop
sub
and
push
fnsave
xchg
and
xchg
aad
lods
add
movsl
push
aas
push
cli
mov
add
popf
std
lods
jmp
jo
into
add
push
adc
add
sub
inc
pop
jo
mov
dec
in
es
or
sbb
test
add
fisttps
f2xm1
leave
lods
push
es
ficoms
xlat
and
cmp
push
aas
shlb
wrmsr
pusha
mov
push
inc
filds
adc
cltd
xor
add
cmp
sbb
int3
dec
add
imul
adc
add
aas
pop
les
mov
clc
notl
add
mov
roll
add
mov
push
mov
in
in
sbb
push
test
pop
push
sbb
adc
push
push
mov
int
js
push
sub
add
sub
in
add
scas
push
xchg
mov
je
add
addr16
cmc
xor
call
sub
mov
roll
cld
popa
jge
jg
pusha
js
pop
ret
sub
dec
sub
push
out
scas
daa
rorl
aas
push
push
sbb
dec
sbb
lret
subb
fldcw
cmp
dec
cmpsl
dec
mov
ror
mov
test
adc
mov
lahf
cltd
or
repnz
adc
loope
sahf
int3
xor
lock
hlt
mov
iret
xchg
outsl
pop
sbb
fldcw
pop
stos
repnz
or
sahf
andb
int3
and
mov
clc
mov
test
dec
cwtl
pop
aad
xchg
jg
sti
nop
or
loopne
dec
cmp
jns
data16
cmp
cmp
pusha
pop
mov
js
xchg
imull
adc
inc
push
add
lahf
fnstsw
sarb
hlt
cltd
rcrb
sbb
enter
or
pop
addb
add
mov
int
lods
pop
jmp
push
xchg
enter
adc
mov
and
xchg
pop
add
out
data16
mov
repnz
or
arpl
or
mov
in
mull
jno
inc
xor
or
cmp
or
arpl
xchg
popa
and
out
mov
test
popl
add
mov
loopne
outsb
fmuls
or
or
dec
gs
repz
pop
test
aaa
add
fimuls
cmc
data16
std
mov
add
lock
inc
iret
das
mov
cmp
cmpb
test
scas
pavgb
imul
push
inc
jno
test
sub
lods
jo
and
lock
lods
testb
repz
dec
sub
scas
inc
or
adc
xor
call
inc
inc
ljmp
rcrb
adc
xor
frstor
dec
mov
xor
mov
push
add
mov
int
pop
in
push
add
mov
add
add
fcomi
outsl
add
lcall
jns
or
loopne
or
jo
mov
cmp
aam
in
cmp
test
mov
call
je
or
int3
call
push
in
roll
add
dec
inc
notl
adc
add
dec
adc
push
jnp
mov
add
inc
xchg
mov
icebp
sarl
cmpsl
mov
lods
enter
cmp
mov
lds
mov
in
dec
inc
addr16
push
or
add
outsl
movsb
mov
add
imul
loopne
mov
outsl
scas
subb
insb
adc
add
iret
xchg
add
roll
mulb
adc
fstps
jmp
shlb
mov
popf
mov
faddl
adc
out
inc
ja
cvttps2pi
into
cmp
cli
rcrb
sub
xchg
add
es
std
cmpb
loopne
cmp
mov
mov
jl
loopne
inc
cmpsl
push
hlt
cmp
mov
adc
pop
into
mov
inc
vaddsubps
and
fnstcw
test
cld
sarb
loope
lods
vmread
adc
int
daa
enter
arpl
jmp
sub
mov
stc
push
xchg
dec
js
sub
mov
xchg
jo
loope
fnsave
jne
inc
stc
mov
inc
add
mov
int3
add
and
fstpt
fstpl
popa
xchg
and
or
in
mov
jp
jns
inc
mov
call
adc
pop
roll
ss
pop
mov
aam
pop
push
jmp
jo
aaa
fwait
add
mov
sub
xor
sahf
cmp
mov
lret
xchg
ljmp
add
xchg
outsb
or
in
mov
loopne
call
into
fldt
lcall
and
and
rolb
dec
pop
test
jmp
outsl
dec
lret
pushf
or
lds
out
jno
push
mov
sbb
sub
loope
mov
jle
daa
mov
adc
stos
add
lret
jmp
xchg
sahf
mov
dec
adc
daa
add
xchg
and
pushf
nop
loopne
mov
jge
nop
mov
push
mov
sbb
cltd
or
mov
jnp
mov
xor
inc
neg
int3
add
outsl
jo
xor
mov
cld
mov
cmp
adc
push
add
xchg
and
pop
or
in
daa
arpl
add
push
aas
add
xchg
mov
in
mov
jo
sub
sahf
test
adcl
add
inc
push
and
call
push
cld
stc
inc
cmp
aam
movsb
inc
stos
dec
xor
pop
stos
je
aaa
inc
mov
rorl
add
inc
mov
loop
dec
iret
adc
add
xchg
mov
mov
mov
lods
xchg
call
or
sti
popf
ljmp
arpl
repz
xchg
sub
daa
in
insb
jmp
push
test
adc
cmp
aad
aam
imul
fcoml
sbb
mov
or
add
outsb
les
movsl
test
nop
or
dec
mov
pop
xor
mull
movsb
jmp
test
sbb
in
imul
adc
test
inc
and
loope
and
aam
mov
cmp
or
dec
mov
subb
lock
test
add
pop
ja
inc
pusha
mov
stos
fidivl
test
and
dec
or
push
enter
hlt
sub
pop
fsts
popw
out
push
adc
popa
sahf
int
pop
sub
push
add
mov
in
pop
xlat
add
mov
and
andl
call
and
mov
cmpsb
sbb
dec
rolb
imul
mov
or
add
out
stos
fdivrl
loopne
insb
add
add
xor
cltd
pop
add
xorb
sti
mov
cmp
nop
in
pause
pushf
lock
mov
test
push
inc
inc
mov
jb
mov
xchg
mov
gs
test
pusha
mov
test
lds
out
push
insl
nop
or
mov
push
jmp
aaa
push
sbb
mov
jae
fists
jb
cmp
loopne
fucomi
add
out
inc
pop
cmp
add
mov
and
imul
xchg
outsb
inc
clc
jo
sbb
mov
cmc
ret
mov
imul
add
push
cwtl
scas
push
mov
adc
cwtl
mov
mov
outsl
mov
arpl
sbb
stos
insl
add
flds
pop
dec
and
pushf
xchg
mov
add
pop
and
and
sahf
repnz
jno
xchg
pushf
cmp
daa
push
sub
aas
leave
cmp
push
and
fnstsw
sbb
popa
add
gs
or
loopne
add
cmp
ja
lcall
pop
or
add
cwtl
test
stos
int3
aam
insb
sub
scas
xchg
arpl
add
imulb
insl
int3
in
les
jnp
call
inc
xchg
push
es
jno
lods
mov
loope
or
jnp
outsl
mov
fs
xchg
or
sub
insb
mov
xlat
sub
ret
hlt
dec
or
aaa
xor
cmp
cmp
rclb
lea
pop
std
add
bound
mov
mov
xchg
in
mov
jns
frstor
cwtl
or
and
mov
data16
enter
cmp
rolb
jl
enter
xor
fs
cmp
push
add
cmp
pop
imul
or
pop
cmp
push
repz
mov
xchg
push
fstpt
inc
adc
fdivrp
adc
sbb
add
cmp
and
mov
mov
add
repnz
push
cmp
cmp
ljmp
pushf
add
and
imul
iret
xor
jg
sarl
sarl
in
mov
in
add
aas
in
cmp
inc
out
lock
and
lods
cld
arpl
xchg
in
dec
add
or
mov
and
movsb
add
bound
cmp
push
dec
mov
in
inc
xor
add
cmp
jnp
jb
mov
sti
sub
or
ret
in
lock
insb
push
add
pushf
add
sub
xchg
add
ret
sbb
mov
frstor
or
lods
cmp
and
xor
fwait
aad
add
and
test
repz
lock
mov
jp
loopne
fldcw
xchg
loopne
dec
push
fs
mov
xchg
xchg
mov
les
loopne
repnz
mov
adc
add
mov
cmp
pusha
push
pop
push
cmp
push
dec
loopne
nop
es
lret
mov
inc
sub
sahf
xchg
and
jecxz
cmp
and
sahf
insl
sbb
add
mov
push
imul
scas
cmp
and
sti
push
mov
cmp
add
mov
dec
mov
or
fdivp
cld
adc
and
sbb
xchg
orl
dec
popa
pop
addr16
int3
arpl
filds
jo
xchg
mov
enter
mov
adc
adc
loop
add
test
mov
xchg
push
jo
sti
inc
xor
add
adc
add
in
out
negl
push
scas
cmp
fsubrl
inc
adc
mov
xchg
pop
lods
adc
sbb
pop
ss
je
add
inc
stc
insl
sbb
dec
pop
xchg
pop
imul
inc
insb
add
cmp
xchg
lods
add
push
dec
mov
cli
pop
adc
pop
test
int3
inc
rcr
insl
fbld
sub
paddusb
nop
imul
mov
js
mov
mov
mov
imul
sbb
and
shl
add
cmpsl
arpl
data16
xchg
push
hlt
ret
test
mov
cmp
orb
dec
test
cmp
fsubrl
inc
mov
inc
or
and
add
xor
mov
dec
fisttpll
adc
fldt
loopne
adc
int
inc
aaa
mov
xorb
mov
mov
and
push
mov
sbb
pusha
pop
out
dec
add
imul
loop
inc
push
add
mov
jmp
lods
shll
call
xchg
xchg
movsl
or
inc
pop
outsl
leave
incb
pop
fcoml
test
mov
ds
jo
clc
outsl
jecxz
ret
add
sub
imul
add
jmp
addr16
xchg
cli
mov
clc
xor
jnp
pop
mov
cmp
push
mov
and
mov
add
add
cmp
mov
push
fisubrs
sarb
sub
out
push
rcrb
enter
cs
sbb
sub
cmp
call
inc
inc
aas
out
lret
sub
mov
inc
clc
or
or
outsl
or
ja
add
mov
and
xor
jnp
or
pusha
int3
iret
pop
repnz
je
repz
js
xor
jno
dec
jb
fwait
xchg
lods
pushf
add
fs
faddl
leave
adc
or
mov
inc
daa
dec
int
sbbl
arpl
mov
jmp
pop
pop
outsb
cmp
or
lods
sub
mov
sub
and
rolb
xchg
lea
push
cmp
adc
mov
mov
add
pop
ret
or
icebp
ret
test
adc
add
cmp
rcrb
push
pusha
jmp
push
lods
adc
das
rol
inc
pop
enter
and
mov
jg
arpl
jo
jmp
pop
cmp
add
mov
cmp
push
dec
mov
inc
mov
ret
or
add
xor
mov
cmp
lea
and
pop
sub
add
xor
rolb
jb
add
mov
push
js
in
clc
jae
add
inc
mov
jne
mov
scas
jg
out
or
loope
sbb
and
enter
push
push
jmp
int3
int
imul
outsb
fs
sub
inc
ds
push
jle
andb
sahf
xchg
add
push
pusha
pop
leave
mov
or
pushf
sbb
loopne
test
das
lock
and
clc
pop
or
ljmp
clc
gs
add
inc
adc
sbb
and
imul
and
int3
push
int
cwtl
add
loope
pushf
dec
stos
lock
pop
aaa
push
add
inc
lret
sub
mov
cmp
or
or
fs
popa
pop
pop
cmp
or
scas
xchg
icebp
int3
add
je
sbb
cmc
jae
aas
cs
sub
inc
inc
stos
xor
movsb
rcrb
xchg
or
insb
out
jge
outsl
cmp
cmp
dec
fcoml
fstpt
sub
in
ds
adc
xchg
add
cld
imul
pop
imul
cmp
pusha
in
add
and
mov
push
insl
or
lret
jno
sub
cmp
push
movsb
add
cwtl
mov
xchg
add
outsb
push
dec
add
add
mov
and
mov
pop
pop
outsb
lret
lock
rol
add
inc
int
push
add
repz
nop
hlt
and
out
vmrun
int3
sbb
pop
sbb
enter
jp
test
inc
loop
add
add
pop
lock
jae
dec
add
lods
cwtl
mov
repnz
and
in
arpl
sub
dec
dec
and
dec
test
add
inc
jno
mov
pop
pop
cltd
or
aaa
aam
mov
xor
xchg
repnz
adc
lods
out
or
scas
jo
sbb
jb
adc
or
pop
inc
jle
rorl
mov
push
insb
out
push
loope
add
inc
imul
xor
lret
clc
adc
add
lcall
loop
test
js
mov
or
mov
daa
repnz
pop
fbld
xchg
insb
fmuls
int3
inc
mov
lret
shrb
popf
cltd
push
dec
jl
add
daa
mov
mov
aam
mov
xchg
nop
sub
add
cmp
cld
inc
mov
fildll
sbb
xchg
pushf
mov
jg
orb
insb
shll
add
jo
sarl
ret
sub
pcmpeqb
mov
test
fiaddl
movsb
add
lods
loopne
add
in
pop
subb
adc
adc
add
fimull
xchg
add
pusha
jmp
shlb
pushl
je
lods
add
shrb
mov
mov
add
nop
orb
jmp
fildll
aaa
imul
ljmp
cmc
add
pop
and
xor
mov
or
nop
cltd
pop
mov
fmull
inc
add
out
loope
mov
in
cmp
jl
pop
fs
dec
dec
push
sub
sarb
mov
rcl
cmp
dec
hlt
icebp
popa
pushf
je
mov
test
mov
icebp
cld
inc
in
xchg
fcomi
sbb
in
outsl
mov
int3
icebp
push
mov
sbb
inc
testb
dec
xor
mov
push
movl
xchg
out
into
dec
pop
inc
xchg
sbb
cwtl
inc
jb
mov
and
icebp
sub
rorb
sbb
and
lcall
add
roll
add
ja
adcb
mov
or
mov
jns
mov
add
pop
and
inc
fmulp
es
movsb
orb
les
jo
sarb
shl
inc
pop
xor
shlb
or
add
cmp
enter
jno
in
addr16
enter
add
dec
nop
add
mov
inc
lahf
adc
clc
push
sahf
jnp
cwtl
js
sub
imul
into
xor
sub
pusha
and
or
clc
cmp
jo
dec
inc
fsubrl
add
mov
fbstp
adc
adc
cmp
out
xor
fsubrl
dec
sub
dec
test
adc
mov
loopne
sarb
cld
das
inc
jno
mov
jne
dec
lahf
xchg
ret
in
cmp
or
add
adc
bound
xchg
rorb
cmp
xor
cmp
add
jmp
add
jle
mov
mov
shlb
add
test
pusha
rclb
clc
xchg
popa
dec
xor
cld
dec
lods
and
repnz
or
lret
add
pop
insl
adc
xchg
add
outsl
scas
sbbb
rclb
add
jne
add
jno
xchg
subb
call
cs
mov
sarl
roll
jb
in
daa
int3
mov
pop
pushf
sahf
or
into
adc
inc
psrad
int3
add
imul
inc
lcall
mov
inc
loopne
jo
dec
cmpsl
into
nop
push
cltd
sub
out
mov
mov
insb
mov
push
mov
inc
adc
movsb
dec
fucomp
adc
js
adc
push
clc
add
ljmp
pop
pop
enter
dec
sbb
inc
es
mov
fcoml
les
sbb
daa
pop
adc
jge
mov
cmpb
mov
stos
int3
adc
jp
add
pushf
insl
subb
mov
or
mov
sar
jno
push
js
or
cmc
xor
fs
jns
loopne
mov
or
inc
dec
add
outsl
call
pop
or
push
add
js
lods
ja
enter
xchg
sbb
out
inc
pop
clc
nop
add
adc
hlt
andl
pop
mov
inc
cmpb
nop
imul
cwtl
das
in
mov
cmp
fsubs
lods
xor
sub
imul
cmp
lea
loop
adc
aas
mov
jg
cmp
cwtl
daa
or
out
mov
shr
repz
nop
hlt
and
sahf
and
ds
mov
fcoms
adc
add
aaa
gs
inc
test
popf
sub
add
pop
test
loope
sbb
add
fsts
mov
mov
or
rorl
push
push
divl
xor
outsb
inc
shrb
lods
dec
adc
add
mov
push
mov
add
add
push
add
pop
lods
arpl
pop
aaa
push
mov
pusha
in
mov
push
inc
push
inc
test
adc
adc
and
xor
add
lock
mov
ljmp
addb
inc
das
push
sub
enter
and
outsl
pop
jecxz
cld
int3
movsb
loopne
mov
pop
dec
mov
rol
push
daa
dec
test
cmp
or
mov
xchg
out
add
cmp
rorl
sub
cmp
aaa
data16
adc
add
jg
mov
test
lods
enter
cs
mov
mov
pushf
mov
push
add
push
nop
sbb
mov
pop
xchg
sub
inc
adc
adc
add
jae
mov
cmpsb
adc
mov
les
jo
daa
inc
cmp
and
dec
add
push
push
leave
xchg
and
dec
pop
mov
aad
mov
add
xor
and
or
out
ret
imul
je
and
and
nop
les
daa
mov
pop
inc
cmp
stos
xchg
stc
mov
mov
dec
sbb
icebp
fs
jl
adc
add
mov
das
sbb
aaa
aas
fisttpl
adc
mov
test
xor
sub
dec
mov
aaa
shl
add
les
dec
and
mov
mov
loopne
jp
cmp
inc
mov
xchg
daa
psllq
pushf
pusha
sbb
rcrl
lock
push
insb
add
popa
sub
cmp
jge
and
aas
dec
aaa
enter
mov
inc
xor
rolb
mov
cltd
aas
iret
adcb
xchg
mov
adc
jecxz
and
lods
xor
push
xor
xchg
and
loop
shrl
cmp
mov
ficomps
add
call
insb
xorb
sub
add
lock
mov
dec
mov
js
or
repnz
xrelease
push
pop
xorb
aas
ret
jb
js
inc
mov
push
cwtl
mov
or
inc
mov
add
mov
inc
mov
xchg
mov
lds
test
adc
add
push
inc
mov
rolb
xchg
iret
or
int
lods
mov
sbb
loope
mov
xchg
add
jae
enter
jl
dec
pop
subb
push
fwait
jecxz
lock
dec
sbb
outsb
mov
cmpsb
mov
or
scas
les
mov
add
mov
or
mov
add
sbb
les
mov
xchg
add
shll
scas
cwtd
pop
loopne
sbb
xor
jb
lods
cmp
mov
add
imul
push
into
int
imull
xlat
test
ret
xchg
mov
adc
or
push
sbb
xor
test
mov
lock
cli
pop
das
in
mov
mov
negb
lret
or
mull
mov
out
jnp
int
dec
aas
addl
jbe
lock
test
push
cmp
mov
jno
test
nop
leave
adc
xor
fs
and
std
cli
jl
loope
push
xor
hlt
jl
dec
jo
insb
xorb
xor
jecxz
int3
mov
std
test
out
cmp
addl
int3
xchg
je
scas
and
pop
fdivr
insb
lcall
nop
and
mov
push
adc
in
adc
mov
cmc
add
cmc
jbe
mov
and
fisubl
pop
dec
repz
adc
mov
push
jbe
and
add
and
mov
and
push
adc
xchg
call
adc
push
aaa
push
int
loop
lds
sub
dec
mov
imulb
dec
mov
mov
and
and
daa
mov
inc
rolb
shrl
jns
pop
add
adc
subb
cmp
cmp
ret
xor
test
imul
scas
rorb
cmp
add
leave
jecxz
dec
rcl
jl
cmpsl
add
fstpt
jno
push
mov
icebp
lea
fsts
dec
mov
mov
hlt
adc
inc
add
popa
test
push
lcall
mov
inc
push
out
mov
add
cld
outsl
cs
nop
ljmp
mov
pushl
jmp
or
je
add
and
jl
mov
es
jbe
mov
int3
cld
sub
inc
scas
fcmove
daa
pop
pop
stos
leave
lock
test
xchg
psubq
jb
in
sbb
cmp
pop
push
jmp
jmp
jnp
add
out
inc
sub
aaa
push
jg
add
sbb
push
jno
popf
in
and
pop
mov
out
jb
inc
pop
add
lcall
mov
and
adc
xchg
and
js
jo
add
xchg
mov
lret
jmp
fs
cwtl
pop
enter
imul
xchg
dec
add
xchg
je
pop
dec
add
push
ret
sub
adc
or
add
dec
ljmp
add
inc
inc
pop
cmp
pushf
and
mov
scas
and
xor
sub
cmp
push
mov
mov
push
push
icebp
sub
mov
sub
add
xor
or
adc
test
daa
mov
xchg
and
clc
cmp
fs
int
js
fcoml
or
add
add
fcompl
ret
aas
or
push
inc
or
mov
js
xchg
into
jo
and
pop
js
add
and
fiaddl
cmp
adcb
add
add
testb
loop
xor
int3
add
movsl
xchg
xor
std
dec
cmp
hlt
mov
popf
adc
fldt
rorb
dec
fldenv
lods
xchg
push
shlb
sbb
push
ds
and
mov
xor
xchg
and
test
cwtl
fidivrs
pop
repz
test
test
js
sub
test
add
cwtl
lcall
outsb
add
pop
repz
loope
les
mov
lret
inc
cmp
scas
mov
cmp
rolb
mov
xchg
out
and
inc
call
andl
hlt
daa
pop
imul
and
xor
pusha
mov
mov
sbb
pop
iret
ret
xchg
aam
int3
push
gs
and
inc
push
fadds
add
mov
lret
pusha
sbb
pushf
mov
jne
xor
es
push
call
enter
enter
stc
xchg
sbb
pop
repz
sbb
insl
jle
pop
push
or
xlat
push
jl
cmp
mov
fadds
pusha
xor
xchg
mov
push
js
into
pop
mov
jno
add
pop
dec
lods
les
jl
adc
mov
mov
jle
and
mov
or
pop
or
mov
lods
or
adc
push
and
in
inc
rol
pop
or
nop
mov
out
clc
pop
test
add
xor
fcmovbe
sbb
cmpsl
sub
je
sub
sub
gs
shll
pop
insl
movsb
rcrl
cmp
mov
and
cmp
fs
cltd
inc
cld
sbb
add
fildl
shrb
aas
jne
call
jl
xchg
add
push
sub
lock
sbb
mov
loope
inc
and
jo
in
aas
and
movb
xor
scas
dec
fldcw
cmp
pop
loop
add
push
dec
movsl
push
add
fiaddl
pop
lahf
mov
adc
repnz
insb
and
fs
mov
add
xchg
in
cmp
mov
scas
int3
dec
adc
jl
aas
repnz
lods
dec
loop
pop
popa
mov
jge
push
movsl
jnp
cmp
mov
push
fdiv
aaa
xor
mov
sbb
cltd
rcll
xchg
cmp
cmp
adc
fstpt
xor
dec
add
adc
notb
pop
aaa
stos
loop
xor
call
ficompl
xchg
in
pop
inc
push
and
adc
dec
or
ljmp
jmp
repz
icebp
mov
icebp
andb
jge
cs
mov
dec
loopne
or
xor
adc
sub
mov
xor
shl
nop
cmp
std
inc
stos
xchg
inc
add
repnz
mov
outsl
scas
xor
call
mov
mov
lock
mov
adc
xor
cld
lds
arpl
mov
inc
mov
fs
jb
in
cmpsb
call
mov
loop
fmull
add
xchg
nop
hlt
nop
mov
sub
or
mov
dec
mov
add
dec
andb
and
pop
clc
mov
dec
cmpsb
lods
fstpt
add
add
out
mov
cmpl
bound
inc
sbb
mov
icebp
lods
in
in
lahf
inc
cltd
jge
pop
test
out
mov
insb
stos
outsb
repnz
push
cmp
enter
push
gs
outsb
mov
push
mov
dec
ret
xor
xchg
mov
outsl
rclb
lock
adc
js
add
sub
roll
inc
xchg
jb
fcoml
mov
aam
jo
xchg
mov
lock
push
add
outsl
sti
add
sub
add
popl
nop
jg
mov
fcompl
xor
and
popw
dec
in
subb
xchg
add
dec
mov
sbb
dec
adcb
lods
subl
xchg
nop
sbb
pop
repnz
push
dec
mov
out
aas
adc
inc
xor
xor
pushf
lock
add
ja
push
and
mov
leave
cli
push
cmp
or
into
or
push
and
outsl
cmp
xchg
xor
incb
push
xchg
in
add
mov
repnz
mov
aad
pop
mov
popf
pop
mov
hlt
xchg
add
ret
jge,pt
cwtl
push
jmp
adc
outsl
adc
aam
ljmp
mov
dec
outsb
push
sub
xchg
insl
xchg
call
inc
inc
jno
add
jnp
lock
aas
les
subl
mov
dec
mov
pop
add
add
inc
push
mov
inc
int
sarl
pop
add
xchg
popa
xor
xor
ss
repnz
add
in
mov
xorb
or
cld
testb
mov
movsb
jl
push
lcall
jo
or
fst
js
jg
and
push
adcl
fs
cmpsb
nop
add
cli
mov
cmp
insb
adc
push
repnz
add
xor
add
inc
enter
xchg
cs
mov
shrb
mov
pop
sub
data16
inc
add
cltd
and
call
or
add
stc
rcrl
test
dec
push
push
sbb
adc
call
stos
add
mov
pop
rorb
xchg
push
xchg
mov
nop
xor
lahf
cmpsl
icebp
aas
xlat
add
mov
vmovups
in
add
mov
or
cmpsb
and
scas
pop
cmp
and
adc
pop
stos
dec
push
xchg
in
add
xchg
aas
out
mov
repz
dec
cmc
bound
cmpsl
aam
aaa
xchg
nop
sub
lods
add
inc
jno
hlt
or
test
add
cld
mov
test
std
or
dec
lahf
or
dec
jge
add
negb
dec
mov
daa
mov
jo
test
outsb
and
add
mov
jbe
dec
mov
andb
ja
pop
fcoml
fcomps
movsb
inc
xchg
or
aad
andb
or
mov
int
rcrl
cmpsb
sbb
mov
loop
jecxz
mov
pop
adc
test
xor
adc
insl
std
fptan
fldl
nop
mov
jmp
jmp
pop
ret
jae
je
bound
sub
clc
outsb
and
pusha
push
push
fwait
xchg
dec
daa
mov
fistl
pop
mov
stc
fs
adc
jl
lods
mov
loopne
insl
mov
shlb
lods
inc
pop
jecxz
popa
sbb
cmp
clc
xchg
inc
jno
cltd
xchg
pop
mov
push
jnp
add
cmp
xorb
into
mov
sbbb
sub
sbb
scas
add
adc
in
nop
sub
js
sub
pop
push
pop
std
push
shrb
fdivl
and
or
sbb
in
bound
rclb
fsubs
imul
or
mov
stos
sub
cmp
hlt
pop
jne
int
sbb
jg
ret
sub
enter
stos
idivb
jl
cli
jne
push
jmp
daa
test
pop
or
int
test
inc
cmp
dec
imul
scas
adc
loop
loope
pop
xchg
sub
fwait
pop
aam
add
rep
xchg
lcall
mov
xor
inc
xorl
les
mov
mov
cmp
add
fst
es
std
aam
add
ret
dec
pop
add
mov
cmp
rorl
cmpb
adcb
stos
outsl
mov
xchg
ja
jg
adc
mov
in
inc
xchg
les
das
pop
mov
cld
stos
xor
mov
out
and
daa
outsl
fimuls
movsb
inc
xchg
mov
das
sub
loop
mov
inc
cwtl
add
mov
add
mov
and
push
clc
sub
or
out
or
cmc
ret
fldl
jo
sahf
fadds
stos
testl
inc
jo
jnp
adc
gs
inc
rcrb
xor
fmuls
mov
inc
int3
and
clc
fidivrl
sub
mov
cmp
mov
idiv
fnstenv
inc
adc
dec
pusha
movsl
mov
dec
in
test
pushf
ret
nop
fwait
mov
jg
or
stc
cmp
outsl
sub
rorb
out
add
inc
jo
pop
call
add
and
mov
xor
jp
dec
stos
cmpsl
data16
divb
insl
adc
daa
popa
jl
add
std
xor
mov
jb
xchg
mov
push
and
test
push
shrb
mov
setne
ror
rorb
sahf
adc
push
mov
repnz
dec
loopne
mov
mov
enter
xchg
filds
subb
mov
shrb
cmp
inc
add
mov
or
data16
inc
sbb
je
call
jl
cmp
and
jmp
cmp
mov
xchg
add
lock
or
inc
add
xchg
xlat
sub
mov
les
cmpb
je
adc
push
add
mov
lods
call
cmp
add
arpl
imul
daa
negb
add
push
xor
cmpsl
push
xchg
sub
daa
loopne
sbb
xor
add
xor
cmp
dec
cmp
mov
cmp
sti
jl
sbb
into
int
adc
cmp
mov
lahf
dec
rcl
mov
xchg
rolb
ljmp
mov
xchg
or
cmpb
cmovb
adc
adc
adc
das
add
cmp
movl
lds
daa
lods
cmpsb
jnp
loopne
pop
out
fmull
mov
stos
lods
pop
or
fcomp
repnz
jno
orb
sbb
daa
enter
adc
ret
inc
jmp
jne
pop
add
pushf
shlb
mov
inc
push
dec
into
push
imul
insl
cli
lret
dec
es
dec
leave
jns
loop
lods
cmpsb
inc
cld
icebp
call
lods
jb
nop
faddl
add
add
dec
xchg
sub
cmp
stos
cmp
icebp
movsl
mov
sahf
mov
jno
add
lret
jo
xchg
pop
jge
cwtl
and
pop
mov
cmp
jne
add
mov
daa
ds
xchg
cli
and
movsb
adc
fsubr
daa
sub
addl
add
cvtps2pi
les
push
popf
fldcw
test
pop
mov
xlat
std
adc
subb
inc
adc
scas
pop
nop
pop
xchg
aaa
pop
push
sbb
into
inc
sbb
add
or
jno
inc
int
or
lock
fstl
clc
das
lea
int3
xor
sub
mov
inc
daa
lcall
xor
or
xor
test
and
mov
ljmp
mov
mov
mov
jle
std
sub
repz
movsb
orb
fisttps
in
add
insb
faddl
sub
adc
pop
fdivl
sub
pushf
dec
mov
fdivrl
inc
cmp
push
xchg
and
fisubrs
xor
pop
push
iret
add
rclb
and
mov
sbb
mov
or
in
lods
push
xchg
or
shl
and
inc
dec
or
adc
push
add
scas
xchg
das
mov
aaa
jmp
fs
or
adc
and
fisubrl
pop
addb
or
sub
daa
daa
roll
in
fisubl
mov
cmpb
movsl
sbb
jno
testb
lea
push
pop
subl
and
add
push
pusha
in
pop
icebp
out
inc
inc
mov
push
dec
daa
sbb
nop
xchg
adc
aaa
insl
jmp
cmp
sub
daa
es
imul
das
push
jo
clc
in
stos
cmpsb
sbb
test
mov
xor
jle
nop
cwtl
or
testb
adc
jnp
mov
mov
jg
es
sbb
push
add
jo
mov
dec
mov
add
insl
rolb
adc
iret
add
jb
and
out
inc
inc
clc
daa
icebp
inc
cli
mov
sub
mov
aad
add
outsb
push
mov
pop
popf
push
outsl
cmp
in
imul
mov
and
repz
js
mov
leave
pusha
je
inc
das
or
mov
out
sub
mov
adc
dec
sub
outsl
and
pop
rol
cwtl
cli
push
mov
std
or
inc
ret
push
sahf
dec
clc
push
js
xor
icebp
adc
push
psrad
add
lret
aam
adc
aaa
outsb
cld
int3
mov
mov
jb
mov
jbe
and
enter
jmp
add
sub
sub
fdivrl
mov
push
or
pop
lods
and
repnz
add
lds
xchg
faddl
mov
add
ret
fwait
cmp
arpl
add
fisttpl
push
call
enter
pop
inc
out
mov
or
clc
or
movsb
ret
aaa
jge
lods
mov
add
gs
inc
into
pop
inc
add
push
add
test
bound
jg
fmuls
xorb
jne
repz
mov
mov
cmp
pushf
sub
nop
in
mov
outsl
dec
nop
push
mov
outsb
pop
call
add
daa
outsl
shl
cmp
int3
adc
mov
mov
xchg
inc
xchg
rclb
pop
fwait
push
add
pop
cmp
mov
xchg
or
js
out
pop
popa
insb
fisubrl
loopne
dec
push
add
dec
xor
add
bound
push
subl
test
mov
pusha
outsl
repnz
sub
lret
call
scas
adc
mov
call
aad
push
loopne
enter
add
mov
les
mov
insl
push
jge
inc
mov
hlt
sub
mov
mov
mov
add
daa
inc
jo
clc
in
push
mov
es
fcmovnbe
xchg
dec
lahf
pushf
addr16
imul
fwait
add
out
fs
fimuls
xchg
or
push
xor
daa
xchg
sbb
pusha
xor
sub
add
xor
xchg
adc
mov
nop
add
in
cmp
dec
aaa
jb
je
ljmp
cmp
int
and
sahf
add
and
mov
jo
and
sub
xorl
idivb
add
fwait
dec
arpl
or
and
jmp
repnz
jo
sub
sbb
cld
sbb
xchg
xor
bound
daa
xchg
and
and
std
cmc
roll
ret
fsubrs
inc
je
mov
aas
and
add
mov
jae
call
mov
mov
cmp
pop
push
xchg
jno
push
sbb
sbb
push
and
jbe
dec
stc
inc
fs
xchg
sbb
cs
aas
cmp
or
mov
call
xchg
lods
push
jmp
cli
pop
insb
mov
loop
xlat
or
repnz
arpl
call
mov
xchg
mov
fbld
add
test
adc
pop
wbinvd
imul
das
push
jmp
cmp
or
pop
and
cmpsb
dec
adc
push
jge
aas
lahf
je
add
push
mov
cmpsl
or
fs
inc
jb
lahf
dec
push
fstpl
push
sbb
scas
add
inc
lock
add
mov
loop
add
jmp
subl
add
ret
lcall
nop
adc
lcall
dec
jl
inc
out
loope
outsl
mov
dec
mov
arpl
pop
loopne
xchg
in
add
xor
aam
pop
add
inc
negl
imul
xchg
loope
xor
cmp
rcr
sbb
or
outsb
sbb
jns
sbbb
adc
mov
fidivs
jl
jecxz
test
fisttps
add
pop
repnz
mov
push
adc
add
aaa
fwait
loopne
mov
inc
fimull
pushf
mov
add
lea
dec
nop
or
shlb
and
add
fs
inc
sbb
add
jmp
or
and
or
jmp
imul
pop
outsl
icebp
add
stos
xchg
call
roll
pop
in
add
adc
popf
bound
cmp
pop
nop
popa
pop
xlat
out
lods
pop
xor
dec
add
data16
loop
adc
mov
das
cmp
inc
jl
jl
pop
jmp
sub
or
mov
sub
and
idivl
fldcw
loope
das
dec
push
call
in
add
sti
sbb
lret
ja
mov
xor
je
fs
inc
arpl
sbb
add
aam
inc
fdivr
push
into
insl
in
lds
xor
cltd
or
xchg
repz
add
cld
xchg
int3
mov
pop
fisubrl
stos
inc
outsb
stos
mov
xchg
or
lret
pop
push
fs
add
add
and
aam
faddl
mov
in
pop
add
lock
mov
in
int3
mov
mov
mov
popa
jl
adc
lods
loop
pop
cmpb
cmp
pusha
sub
cmp
movsb
cmpsb
xor
in
outsl
sarl
jb
mov
mov
and
shll
aam
cmp
mov
lret
loop
mov
xor
movsl
icebp
pop
outsl
subb
cmp
mov
rcll
sbb
mov
push
cmp
mov
cmp
imul
daa
cwtl
push
mov
cwtl
mov
in
pop
fsts
add
push
lret
mov
or
mov
mov
inc
xchg
sbb
pop
data16
xlat
pop
or
cmpsl
aas
fs
xchg
mov
ficomps
dec
add
data16
and
cs
les
std
mov
fldl
rcr
jg
jmp
inc
lods
dec
shrb
loope
push
ret
and
fnstsw
test
sbb
inc
lods
push
mov
loope
inc
jbe
leave
inc
faddl
jg
out
sbb
mov
lret
add
cmc
add
sbb
lret
jno
push
push
loopne
faddl
cmp
loopne
or
mov
fcomip
adc
pop
rolb
mov
add
nop
loopne
push
add
sub
adc
jge
or
xor
lret
icebp
in
dec
add
adc
mov
add
call
xchg
mov
pushf
arpl
add
cs
jno
aad
sub
mov
and
in
orb
fwait
pusha
aas
jle
cmpsl
mov
test
jmp
hlt
cld
pushf
mov
xchg
mov
sub
call
adc
sub
subb
push
pop
jo
mov
das
rorb
sbb
push
mov
ljmp
fwait
xlat
push
mov
ror
adc
adc
sbb
jecxz
push
dec
xor
mov
jg
add
js
adc
xor
pop
sbb
sbb
lods
push
add
popf
shr
and
and
fdivrl
sahf
in
mov
mov
lret
movsb
push
in
add
lea
mov
stos
insb
add
leave
xor
pusha
push
xchg
fiaddl
popfw
adc
out
and
cmp
addb
push
test
jno,pt
mov
mov
ret
mov
les
push
ret
or
aaa
shrl
arpl
jae
add
adc
dec
scas
jne
add
push
popa
sbb
out
leave
mov
push
dec
add
inc
mov
jb
mov
mov
add
fisubs
icebp
add
fidivrl
mov
call
sub
cmp
andl
sbb
add
xchg
mov
cmpsb
loope
sub
cmp
or
pop
and
mov
andb
lods
add
or
repz
xchg
jnp
cmp
mov
cmp
pop
xor
bound
movsl
sbb
mov
pop
outsl
stos
jl
pop
jae
cmp
jns
movsl
dec
call
inc
stos
push
and
add
adc
xor
dec
out
jle
adc
aas
or
mov
jb
std
push
ljmp
rclb
sub
pop
popl
out
mov
jle
inc
cmpsb
cmc
fisubrl
or
or
mov
les
dec
mov
push
js
cmp
test
add
xor
test
add
mov
std
jecxz
xchg
test
add
ds
sbbb
into
out
add
adc
mov
push
add
xor
test
or
mov
out
pusha
xor
push
inc
dec
popf
sti
push
or
jo
xor
mulps
stos
sbb
sbb
movl
in
lods
int3
pop
and
sub
dec
rorb
dec
cmp
mov
movsb
xchg
ds
int3
or
or
push
add
inc
jle
add
inc
mov
jnp
sbb
and
add
shlb
ja
adc
mov
push
scas
xor
inc
or
movsb
sub
add
ja
jbe
sbb
cwtl
add
notl
add
or
js
loopne
add
jae
stc
sbb
adc
in
add
sbb
stos
shlb
add
mov
lea
pop
fwait
jne
or
mov
int
rcrb
push
mov
mov
sbb
pop
dec
lret
dec
loop
sbb
mov
jge
fadd
sub
xchg
cmc
icebp
loop
and
xor
arpl
incb
pop
rolb
mov
outsb
shlb
out
or
mov
scas
fs
sbb
mov
addr16
inc
mov
sbb
into
testb
dec
clc
dec
loopne
add
sbb
adc
enter
test
imul
dec
out
mov
fstl
xchg
pop
inc
push
test
mov
mov
pop
outsl
aam
fstps
sbb
xchg
jne
dec
gs
lret
rolb
sub
fildll
push
enter
shlb
inc
sub
out
repz
lea
in
inc
fadds
cmp
jb
lock
inc
sbb
add
imul
inc
scas
ds
call
out
cmpsb
or
pusha
dec
jecxz
add
rcll
add
paddsw
sbbb
mov
pop
push
add
xchg
mov
je
jo
rorl
js
and
add
iret
inc
sbb
lcall
and
sub
ja
add
lahf
das
and
inc
xchg
hlt
xor
loopne
shr
xor
mov
mov
inc
outsb
mov
cli
ds
rcr
sarb
add
sub
in
cmp
inc
stos
jo
fnstcw
adc
cwtl
add
mov
xor
add
mov
xchg
sub
cmp
cs
mov
lock
adc
out
mov
rolb
dec
push
or
dec
xchg
lahf
mov
jp
push
ret
xchg
insl
xlat
sbb
int
nop
loop
cmp
sub
aas
jecxz
subl
dec
pushf
cmovo
xor
pop
dec
insb
subl
pop
adc
das
test
jp
out
push
std
inc
jl
hlt
xor
jbe
add
dec
add
push
sub
xor
popl
add
pop
mov
test
js
add
fcomi
lret
xchg
fldl
add
mov
mov
shll
xor
push
subb
aaa
add
adc
sub
xor
add
pop
jmp
add
outsb
scas
mov
xor
jo
pop
xchg
dec
mov
jg
jl
movd
aam
lahf
add
and
frstor
cmp
imul
pop
jl
cltd
lock
mov
and
mov
xchg
stc
sbb
sub
nop
mov
decb
sbb
sar
xorl
mov
sub
xor
cwtl
jecxz
adc
cli
inc
or
faddl
add
pop
push
mov
pop
add
xor
inc
add
push
int
mov
add
and
pop
icebp
and
sub
call
or
xchg
loopne
call
inc
arpl
cmp
add
mov
outsl
stc
ficomps
sub
adc
add
push
insl
movsb
aaa
sbb
xchg
cmp
imul
sbb
add
out
imul
ret
in
mov
loopne
xchg
mov
hlt
shrb
cmc
inc
lret
hlt
xor
add
xor
jle
pusha
cld
cmp
xor
out
adcb
js
je
add
xor
sbb
add
test
in
insb
aam
or
lods
sub
das
sub
mov
in
pushf
dec
add
lods
loop
add
fcoms
push
inc
subb
push
push
cmp
sbb
jbe
add
and
pop
ret
push
xchg
and
add
out
out
xor
add
jae
and
mov
adc
arpl
adc
clc
push
dec
jecxz
incl
cmpb
add
adc
cmc
mov
sbb
pop
test
cmp
mov
aaa
push
fucomip
add
shrb
cmp
cmp
add
push
ljmp
mov
jg
cmc
ss
in
ja
mov
mov
cmp
int
add
push
cltd
mov
jae
cmp
cs
mov
mov
ja
adc
mov
xchg
arpl
mov
scas
mov
add
mov
loope
pop
subl
mov
in
xor
sub
sbb
outsb
je
lret
andb
xchg
jns
add
and
ss
gs
add
fiaddl
jo
push
andl
pop
dec
add
add
std
dec
pop
sub
out
insb
insl
pusha
lret
rcrb
insb
sti
sub
test
sar
and
aas
cld
jbe
add
lret
xor
cwtl
dec
js
add
ljmp
ja
adcb
outsl
or
nop
jb
data16
out
add
fistl
and
or
and
jbe
adc
inc
imul
pusha
mov
jg
add
xchg
and
jmp
outsb
inc
add
or
mov
inc
inc
add
fiaddl
fistps
ja
add
push
loopne
and
push
sbb
cld
xchg
in
and
pop
xchg
cmp
jo
push
mov
mov
shlb
or
add
push
daa
mov
inc
add
shlb
shll
ds
cmc
subb
cmp
pop
xor
dec
jl
add
daa
adc
add
sbb
inc
add
addr16
sbb
cmp
icebp
incl
rcrl
pusha
push
mov
inc
add
push
jnp
or
add
ljmp
add
dec
std
xor
push
lret
insb
shr
icebp
add
mov
cwtl
mov
ret
adcb
and
ja
or
add
mov
adc
out
stos
cmp
in
daa
mov
cmpl
inc
lea
pop
sti
pop
sar
sarb
cmp
adc
sbb
cmp
push
adc
fsubp
ja
les
into
add
das
adc
stos
inc
mov
movsb
xorb
adc
add
push
mov
out
insb
out
bound
xor
jne
out
cmp
and
add
mov
test
inc
nop
inc
cmpb
adc
pop
test
adc
sbb
imul
xor
push
adc
mov
jmp
add
sub
in
xor
shlb
enter
add
add
int3
dec
imul
out
dec
inc
cmp
in
lock
jo
clc
mov
in
subb
push
jmp
dec
or
xorb
lahf
fs
fucom
add
pop
rcr
loope
sub
mov
out
cmp
es
out
sub
inc
cli
lret
ds
popf
cmpb
add
aam
ds
stos
addl
lock
mov
loop
pop
outsb
notl
add
and
aas
stc
call
add
ret
cmpsb
add
sbb
nop
sbb
add
add
fimuls
jbe
add
paddusw
xchg
fsubrl
das
pop
and
jmp
outsb
and
add
mov
jae
jecxz
jl
adc
jg
mov
loope
add
xchg
icebp
lds
jl
add
sbb
in
lret
sbb
jecxz
cwtl
sub
jne
fnstcw
adc
loop
cmp
jns
test
test
add
adc
cwtl
add
insl
lret
or
add
std
in
imul
add
aam
and
icebp
outsl
lods
mov
fistps
add
xchg
jmp
cmp
pop
mov
mov
add
jno
lods
sub
cwtl
inc
add
sub
loope
sub
test
test
inc
add
pop
xchg
mov
stos
add
jnp
cmp
cltd
and
movsb
in
pop
js
pop
mov
adc
add
mov
ds
arpl
add
addl
and
idivl
push
js
ret
jg
add
push
popl
daa
das
add
sub
sbb
nop
inc
jecxz
orb
cli
push
add
sub
std
or
and
push
int
add
xor
orl
pusha
sub
call
xor
push
sbb
cltd
xchg
adc
imul
dec
sub
add
fs
clc
add
sub
cmpb
outsl
sbb
add
dec
ret
add
cmp
xchg
add
adc
mov
mov
ss
sub
lret
xchg
ds
mov
add
push
jne
add
sub
testl
subb
mov
clc
jb
add
and
adc
call
add
xor
into
cwtl
popl
out
and
aad
push
mov
sub
add
roll
jle
adc
rcl
icebp
jo
insl
add
sbb
and
repz
aam
jbe
pop
pushf
xorl
das
push
shrl
loope
add
in
shrl
rolb
fisttps
shl
lods
add
js
sbb
incl
sti
negb
stos
icebp
dec
cmp
mov
jl
pop
adc
rolb
mov
gs
clc
movsb
add
adcb
or
data16
pop
jl
rcll
adc
loope
fwait
inc
add
mov
add
js
or
fwait
inc
mov
in
sbb
cwtl
pop
cmp
dec
pop
xlat
dec
inc
xor
jmp
add
fdivr
sub
ror
cwtl
repnz
cs
loope
hlt
aad
gs
or
out
xchg
add
icebp
xchg
cmp
add
loopne
jecxz
push
pop
sbb
inc
and
stos
stc
add
mov
pusha
and
rclb
loopne
cwtl
sbb
lret
pop
or
pop
inc
movsl
jo
inc
push
cli
int
mov
add
repnz
test
or
ss
pop
in
mov
mov
mov
cltd
jnp
pop
mov
cmp
movsl
pusha
lret
aas
adc
mov
stos
cmp
adc
push
jo
push
pop
adc
push
imul
xlat
add
or
cmp
pop
mov
gs
xchg
fsubrp
sbb
lods
xor
testl
adc
mov
xchg
jb
cmp
bound
adc
mov
rolb
pop
push
and
inc
pop
lahf
adc
xchg
iret
pop
adc
mov
fisubl
popf
xor
std
mov
mov
cmpsb
ljmp
lock
mov
push
jp
lods
mov
jbe
add
inc
jae
cmp
dec
add
inc
mov
fisubrl
push
cmpsl
cwtl
ret
add
xor
mov
mov
mov
mov
bound
or
or
or
filds
add
add
mov
out
add
cmp
cmp
add
sbb
js
add
imul
sub
rcrb
adc
xchg
add
xlat
add
ss
xchg
loop
jle
add
out
fisubrs
jns
jmp
movsl
hlt
mov
add
jbe
add
in
pop
pop
add
outsb
lods
out
pop
mov
scas
add
mov
arpl
add
cwtl
sub
add
stos
xor
adcl
inc
cs
into
ffree
xchg
xchg
push
and
sub
imul
mov
add
inc
dec
sbb
leave
lods
jle
call
xor
imul
lahf
add
pop
mov
js
mov
cmp
push
adc
pushf
inc
lock
add
les
xor
aam
stos
in
pop
jg
js
add
adc
lock
cmp
mov
lcall
mov
add
xchg
mov
xchg
adc
std
insb
lret
lahf
add
jp
lods
push
and
adc
dec
push
mov
test
adc
sbb
cltd
sub
pop
add
bound
wbinvd
cmc
in
xorb
sarl
icebp
push
pop
repz
aad
cmp
outsl
mov
sub
xor
xchg
add
sbb
add
mov
ret
lds
arpl
fdivrs
out
dec
clc
roll
test
cmpl
add
jmp
or
stos
pusha
mov
je
add
push
lock
faddl
add
addr16
jp
add
mov
push
outsl
xchg
or
inc
push
addl
xchg
pop
pop
sbb
mov
in
xchg
imul
add
dec
mov
add
ds
nop
gs
mov
and
shlb
add
jle
dec
add
daa
pop
test
jbe
push
mov
addb
fs
adc
loope
leave
add
jbe
xor
mov
dec
std
adc
add
xchg
sbb
mov
scas
mov
test
add
lret
iret
sub
add
or
gs
add
leave
imull
mov
add
mov
aad
dec
mov
cmp
push
bound
aam
sbb
mov
inc
adc
or
xor
cmp
xchg
add
xlat
xchg
stc
iret
pop
negl
cmp
sub
mov
mov
rcrb
clc
in
sbb
test
add
add
or
mov
push
dec
pop
ss
pop
pop
rorb
add
imul
mov
jle
bound
fmuls
push
dec
punpcklwd
pusha
pusha
inc
clc
gs
or
add
xor
add
pop
mov
test
mov
icebp
mov
call
adc
push
jb
push
dec
sbb
pop
repnz
js
dec
pop
add
cmpsl
push
cmpsb
jne
pop
outsb
add
inc
ret
dec
orb
xchg
dec
mov
rolb
nop
add
mov
popa
add
push
push
sub
mov
loop
add
dec
push
inc
xchg
mov
jne
add
sbb
add
std
push
ret
fsubrs
in
je
add
push
pop
mov
or
and
int
ljmp
add
and
add
mov
and
gs
mov
lods
and
xchg
xchg
mov
mov
cmpsb
mov
jbe
cld
cmp
fldl
mov
inc
push
push
cmp
add
mov
lret
loopne
cmp
mov
pop
add
push
jns
cs
xchg
add
jne
fsubrs
adc
mov
or
es
fadds
bound
iret
push
xchg
push
push
ss
xchg
hlt
arpl
clc
mov
cltd
rsqrtps
push
inc
add
xor
sub
loope
out
out
add
push
dec
add
xchg
ret
jne
cld
inc
test
or
int3
push
cmp
push
imul
and
and
pusha
and
xor
add
mov
sbb
setns
repnz
inc
pop
mov
imul
add
push
mov
les
popf
or
cmp
loopne
inc
dec
cwtl
jg
adc
loop
jns
hlt
cmp
push
cmp
cmp
xor
sub
decb
add
push
outsb
repnz
subb
cmc
rclb
sub
xor
cmp
cmp
dec
insl
fwait
imul
sub
mov
add
cwtl
fadds
add
addr16
ds
inc
and
repnz
inc
leave
gs
lahf
jp
movsb
mov
sub
sahf
mov
jne
add
pop
fwait
hlt
jg
xchg
test
add
add
adc
and
pop
mov
dec
fnstenv
das
cmpsb
inc
loopne
lahf
inc
add
lret
idivl
pop
add
push
in
xchg
int3
sbb
sub
mov
loope
andb
or
jo
dec
mov
add
cmp
mov
add
inc
sub
in
insb
or
dec
lock
add
push
stc
mov
cli
ja
adcl
push
cmp
add
or
adc
and
fs
add
push
in
icebp
into
add
mov
dec
add
push
mov
xchg
mov
or
adc
add
push
push
sbb
mov
add
mov
roll
cmpsb
icebp
test
test
sarb
iret
sbb
and
or
mov
cmpl
lock
shll
sub
xchg
je
jge
add
sub
dec
and
fwait
dec
add
scas
cld
sbb
inc
push
add
mov
mov
add
mov
ret
ficompl
push
js
add
fdivr
lret
add
dec
push
ret
xchg
jl
data16
andb
stos
rolb
add
sub
enter
jns
and
dec
movsl
test
add
shl
and
push
pop
pop
push
add
cmp
nop
mov
mov
pop
cmpsb
xchg
orl
std
pop
in
pusha
xor
jb
shr
lods
aad
jp
call
mov
add
or
adc
xchg
xor
arpl
lret
cmp
fisubl
cli
cwtl
mov
sub
test
pop
call
cmp
pop
xchg
rcrb
push
movsl
clc
pop
add
push
and
add
xlat
imul
or
jecxz
cmpsl
and
dec
xor
or
mov
add
stos
xor
subps
mov
sbb
pop
add
xchg
fwait
or
mov
xor
sub
jo
xor
push
pop
xchg
add
lea
in
sbb
xchg
or
insl
in
sub
test
pop
je
shl
out
lods
pop
lahf
jnp
in
pusha
sbb
rclb
or
or
mov
add
dec
dec
rclb
xchg
sub
add
lret
and
notl
sbb
je
lods
cli
repnz
sub
test
inc
nop
dec
aaa
loopne
fnstsw
add
popf
jle
fnstenv
add
push
roll
add
and
add
xor
mov
lahf
repz
roll
push
outsb
sub
sbb
add
or
lods
iret
push
rolb
mov
loope
das
xor
fiadds
mov
pop
out
jecxz
cwtl
push
dec
inc
mov
rol
cli
loopne
stc
rcrb
cmc
hlt
dec
mov
sbb
mov
mov
dec
or
and
mov
sbb
flds
mov
loop
dec
sub
in
add
lcall
mov
add
or
lea
das
repnz
add
mov
add
jnp
loop
cltd
xlat
jno
subl
lds
pop
in
sub
mov
ljmp
insb
fistpl
lea
sbb
sbb
add
rolb
call
rcr
popl
pop
push
mov
movsb
clc
mov
or
sbb
jmp
add
rolb
jg
inc
add
dec
cmp
jno
and
cmp
cmp
aaa
pop
cmp
add
push
jbe
xor
cmp
mov
int
sbb
cld
jne
lods
pop
sbb
ret
out
add
in
cmp
jmp
jp
pop
jl
add
push
cmpb
add
or
xor
fiadds
jo
dec
jno
inc
out
scas
add
sub
cmc
add
cli
ljmp
cmp
push
sbbl
xor
push
icebp
inc
addr16
dec
pop
scas
rorl
add
dec
xor
add
add
add
adc
outsl
pop
cmp
inc
sub
mov
inc
daa
add
movsb
cmp
mov
jge
and
cmc
add
jne
dec
lods
xorl
jae
add
jge
add
add
cmp
cmpl
mov
mov
add
or
sbb
adc
sbb
jo
hlt
push
inc
lret
lahf
mov
sub
xchg
mov
test
in
inc
sbb
and
mov
push
jmp
mov
adc
or
push
sbb
pop
mov
std
and
add
push
cmp
pop
pop
mov
fiaddl
mov
outsl
add
add
mov
push
lea
ret
lods
push
cmp
lea
jno
add
pop
ret
or
mov
xor
or
sub
inc
xchg
push
mov
stos
out
in
cltd
clc
test
nop
mov
into
movb
ljmp
xchg
sarl
xor
shll
jp
push
dec
add
push
faddl
stc
push
mov
scas
pop
dec
ret
int
pop
jbe
push
xchg
out
jecxz
inc
loopne
scas
idiv
sbb
clc
xor
repnz
adcb
sbb
testb
loope
and
sbb
shlb
andb
mov
mov
sbbl
or
add
pop
cmpl
pop
xor
lret
lcall
cmp
loopne
push
sbb
add
in
fdivs
daa
pop
call
jl
sub
ror
adc
adc
ljmp
inc
sbb
movsb
hlt
mov
cmpsb
call
pop
mov
pop
sbb
add
out
les
cmpsb
js
ja
arpl
cmp
xor
pop
pop
subb
push
inc
test
cmp
xchg
mov
pusha
ss
orb
inc
sbb
scas
ret
add
gs
sbb
dec
add
ficomps
rcrb
nop
out
aad
aaa
mov
pop
shrl
mov
jecxz
pop
lcall
lods
lods
cmp
mov
add
pop
nop
jo
mov
adc
add
notl
jno
sarl
mov
mov
xchg
scas
cltd
mov
xor
push
cwtl
mov
cmp
mov
or
pusha
les
in
mov
jg
adc
push
add
inc
add
popf
xchg
loop
mov
mov
sub
adc
and
testl
mov
pop
aad
in
cmp
xor
add
sbb
decb
inc
test
add
sbb
inc
cmp
add
inc
movb
jle
mov
jae
pop
mov
movsl
add
sbb
leave
mov
add
add
test
ljmp
lret
mov
sbb
add
loope
mov
mov
add
fisttpl
xor
lahf
add
cld
adc
pop
mov
xchg
adc
mov
pop
fadds
das
andb
add
out
test
pushf
addb
dec
jg
add
ja
add
bnd
add
cs
mov
add
xchg
into
xor
dec
or
flds
subb
cmpsb
push
cltd
sbb
mov
iret
xchg
push
adcb
in
add
adcb
repnz
add
mov
adc
add
xor
push
jle
pop
int3
adc
jle
mov
sbb
mulb
push
push
xchg
pop
mov
jae
insb
inc
or
mov
fldt
js
cwtl
or
int3
popl
pop
lret
mov
stc
pop
pop
xchg
jne
pop
dec
xchg
xchg
dec
mov
inc
add
push
orb
push
mov
fisttpll
sub
sbb
or
xchg
push
push
fiaddl
adc
into
lock
fistps
cmp
nop
les
push
in
pop
out
add
mov
jp
add
jb
mov
add
xchg
adc
das
loop
add
cmpsl
inc
dec
ss
shl
inc
sbb
add
inc
sbb
add
sbb
cmpsl
notl
ret
orl
mov
jae
pop
mov
rolb
imul
insl
in
mov
xchg
jecxz
mov
adc
daa
jle
add
adc
shr
mov
xchg
movsl
roll
jmp
add
imul
divb
xor
add
dec
popa
iret
movsl
sahf
mov
cmpl
and
mov
pop
shrl
sbbb
scas
int3
or
cmp
loopne
mov
xchg
pop
jnp
mov
inc
adc
jge
data16
aad
lret
mov
out
pushf
ljmp
pop
cs
lret
lock
jne
add
popa
fcoms
push
pop
cmp
and
push
sub
xchg
leave
add
add
pop
xchg
test
jmp
les
outsl
js
mov
popa
shll
incb
sti
cmp
and
xor
add
std
out
add
sub
cmp
adcb
or
scas
jo
mov
iret
jbe
xorb
cltd
inc
cmpsb
pop
mov
insb
lea
mov
cmp
mov
outsl
push
or
das
mov
inc
in
shrl
je
cwtl
lods
lahf
sbb
pop
cmpsb
pop
add
xchg
mov
jl
pop
jo
push
shlb
mov
gs
inc
jno
sub
push
push
ds
add
rcl
mov
cmp
in
subb
xchg
repnz
imul
add
push
dec
pop
mov
and
add
sub
jns
cmp
add
mov
std
mov
sti
add
jle
xor
lods
fldl
xchg
out
add
xchg
pop
add
or
jno
ja
jle
in
stos
adc
mov
xor
mov
mov
lcall
cltd
add
stos
iret
mov
add
jl
adcl
ss
add
mov
decb
xchg
out
cmovnp
push
loopne
pop
xchg
dec
lods
js
add
cltd
aam
add
into
cmp
andl
in
xchg
loopne
add
and
stos
push
add
pop
std
sbb
add
loop
xchg
push
jg
mov
add
data16
xchg
jae
mov
sub
cmp
mov
mov
xor
insb
or
add
fiaddl
jp
jo
jb
push
add
add
cld
and
in
rolb
mov
out
xor
cmc
xchg
stc
inc
pushf
ja
sbb
pop
push
call
mov
xchg
and
jae
cmp
pop
or
add
test
ss
lods
inc
add
sbb
stos
jge
ret
add
dec
scas
dec
add
and
popa
sub
rolb
mov
call
dec
pop
dec
add
sbb
inc
sbb
sbb
push
add
into
inc
mov
bound
or
out
xor
add
outsl
fcomps
add
inc
out
add
pop
xlat
push
nop
push
loopne
or
popf
test
jmp
mov
add
and
xor
sub
ljmp
aad
add
mov
icebp
xchg
push
into
cld
pop
push
in
add
adc
dec
jns
cwtl
jno
cld
add
xchg
sahf
mov
push
xor
jbe
xor
and
flds
mov
shlb
add
call
jns
cmpsb
mov
and
in
adc
jae
add
xor
dec
jns
xor
cmpsl
xchg
mov
mov
repnz
add
mov
cmp
jno
mov
jns
add
shrb
mov
in
and
xor
jne
cmp
add
mov
push
mov
add
int
pop
stos
jbe
je
mov
inc
mov
daa
add
sahf
int
pusha
sub
adc
iret
or
int3
add
mov
daa
add
dec
rcrl
fsts
test
into
arpl
add
imul
push
add
enter
sbb
and
pop
test
inc
stc
pusha
add
push
inc
inc
mov
int3
add
push
xor
ljmp
scas
sahf
lock
xchg
mov
or
add
ljmp
add
xor
dec
dec
cmp
outsl
mov
push
es
add
stc
push
mov
add
and
arpl
inc
pop
push
mov
pushl
pushf
mov
lea
xor
test
and
roll
push
mov
xchg
and
pop
lahf
add
jp
cld
cmc
push
or
mov
filds
and
cmp
cltd
add
test
xchg
xorb
xor
dec
ds
cmp
and
pop
cmp
sbb
adc
xorb
push
insb
cmp
ret
lea
dec
mov
test
decl
es
test
ret
cltd
cmp
mov
cmp
push
add
icebp
inc
movsl
push
ret
rcrb
inc
and
cmp
pop
mulb
pop
lret
jp
jns
mov
sbb
aaa
mov
push
add
int
lock
dec
call
sub
jle
inc
mov
sub
fisubs
and
mov
add
hlt
dec
inc
or
xchg
jae
add
pushf
jnp
loop
add
les
or
repz
pusha
dec
sbb
mov
and
out
rcrl
xor
pop
addr16
sbb
clc
arpl
dec
cmpsw
cld
mov
xor
arpl
popa
pop
lods
test
popl
in
xlat
cmp
mov
sbb
sahf
xchg
cmp
lds
mov
push
jnp
faddl
dec
mov
out
add
pop
out
add
add
test
repz
paddb
scas
loopne
dec
mov
mov
lahf
push
dec
stos
shrl
into
inc
add
push
stc
rclb
lret
jp
test
sub
mov
mov
outsb
jle
sub
mov
testb
popa
in
mov
inc
rcrb
jecxz
jo
cmp
jbe
hlt
add
mov
fwait
lret
stos
pop
add
stc
add
push
out
mov
pop
in
jo
mov
mov
lods
les
mov
jno
popa
xor
pop
xchg
add
das
gs
cmp
or
mov
jp
lret
shlb
mov
out
dec
iret
xchg
popa
loopne
push
jl
adc
add
xor
mov
ljmp
nop
sub
aaa
stos
push
inc
ret
xchg
add
xchg
pop
add
add
inc
add
mov
xor
lods
push
pop
cmp
or
inc
repz
fwait
inc
add
mov
adcb
aad
outsb
mov
in
add
cmp
mov
add
cmpsb
sub
or
jp
es
popf
mov
iret
push
sub
pop
and
jl
mov
add
xchg
std
mov
and
inc
pop
mov
loope
pop
adc
rclb
add
jmp
testb
out
fstpt
lods
pop
xchg
add
shl
fwait
cmp
xlat
push
add
lods
mov
inc
xchg
insl
adc
lret
popl
mov
and
mov
add
shll
cmp
xorl
xchg
adc
fidivrs
ss
loope
mov
loop
test
dec
bound
leave
or
add
jns
sub
xchg
xorb
jb
stos
adc
jl
add
aad
nop
aas
and
test
cmpb
roll
iret
mov
addr16
jne
out
es
push
mov
sub
xor
std
sbb
leave
push
add
ss
arpl
clc
mov
jbe
jmp
fwait
push
mov
sbb
cmp
pop
filds
add
mov
or
mov
es
adc
jge
test
int3
sub
repnz
aam
mov
or
dec
adc
js
loop
fstps
push
pop
loop
add
xor
mov
ljmp
in
inc
lds
xor
add
push
test
into
add
aad
sbbb
rclb
hlt
xchg
add
jns
sub
and
add
inc
adc
test
xor
shlb
xor
mov
mov
inc
xchg
imul
sbb
fiadds
adc
xchg
inc
sbb
inc
jp
jmp
int3
popf
add
push
das
pusha
pop
popa
cmp
mov
pop
test
out
and
test
and
mulb
mov
je
inc
das
pusha
repz
adc
lods
jbe
add
imul
ds
inc
std
pop
push
in
cmp
out
pop
cwtl
rcrl
sbb
ljmp
fldenv
scas
sub
push
mov
cmp
sbb
add
pop
pop
bound
roll
adc
inc
sub
les
and
mov
xchg
js
add
adcb
fstpt
dec
lds
loope
in
xchg
inc
enter
sbbl
dec
int
sub
mov
sub
into
icebp
xlat
and
leave
icebp
cmp
cmp
aam
mov
cmp
add
pop
gs
decl
daa
gs
mov
pop
test
push
seto
dec
test
add
xlat
outsl
add
cltd
iret
scas
sbb
test
cmp
stos
aad
in
xchg
pusha
sub
adc
in
add
clc
inc
scas
xchg
cld
add
test
mov
mov
inc
adc
ficompl
xchg
cmpb
mov
and
popa
roll
stc
adc
add
push
dec
or
or
bnd
add
xchg
inc
lea
pop
pop
xor
or
adc
pop
push
sub
pusha
pop
mov
adc
adc
lods
or
jo
add
pop
test
adcl
nop
or
push
mov
cmp
push
pop
pop
xor
xor
sbb
fadds
and
jae
imul
mov
inc
js
lret
push
or
iret
dec
xor
fldl
xor
adc
inc
imul
psubq
fsubl
fnstsw
cld
pop
jle
mov
decl
dec
lret
nop
sarb
mov
je,pn
test
scas
add
dec
rolb
add
push
outsl
xor
ficomps
imul
scas
addb
xor
sarb
cwtl
xorb
gs
mov
jae
sbb
jb
pusha
and
hlt
jbe
jnp
es
test
int
imul
inc
addl
inc
insl
pop
pop
add
pop
mov
popa
add
je
mov
push
incb
out
mov
lret
mov
nop
aad
cwtl
add
pop
ss
pop
add
adc
int3
pop
les
push
jecxz
push
adc
sbb
cwtl
mov
add
mov
push
mov
mov
mov
add
scas
pop
clc
mov
sub
inc
mov
clc
idivb
xorl
lcall
mov
add
sub
adc
mov
repz
fcomps
push
fidivrs
out
mov
decl
das
dec
xchg
and
xchg
add
pop
fistpl
add
jns
sub
push
ffreep
out
add
push
xchg
out
stos
dec
and
in
outsb
flds
fistps
fwait
lea
xchg
pop
push
mov
rcl
push
add
dec
outsb
fucom
pop
push
test
or
mov
into
jg
aam
add
adc
aam
pusha
or
mov
add
loope
out
aaa
jnp
fildl
xorb
mov
jecxz
es
dec
adc
cwtl
divl
push
cli
pop
jl
aas
loop
add
add
inc
es
cmp
pop
xchg
inc
dec
pop
push
mov
lds
aaa
cmpsl
add
mov
and
cmp
add
out
cwtl
sbb
mov
aaa
in
dec
pusha
add
ss
cld
test
imul
jo
and
xchg
add
bsf
mov
pop
stos
data16
in
xor
sahf
jge
out
mov
shr
pop
xchg
sbb
adc
cld
push
sbb
adc
stos
pushf
push
lea
sbbb
scas
inc
jae
testl
and
outsb
add
xchg
push
pop
jo
push
sub
xor
cmpb
mov
cwtl
xchg
test
xchg
dec
stos
adc
xchg
test
pop
add
aad
jo
mov
out
add
testb
mov
in
rorl
jl
sbb
call
repnz
inc
mov
xchg
nop
cmpb
gs
sbb
cmp
mov
les
add
adc
call
sub
cld
das
mov
enter
pop
mov
pop
lods
dec
xorb
push
fxch
adc
nopl
movsl
test
add
mov
loopne
popf
subl
jnp
mov
nop
leave
or
sub
mov
lcall
movsb
bound
pop
or
ja
mov
pusha
je
sub
sub
sbb
pop
arpl
push
cmp
and
shll
imul
inc
jno
jnp
or
mov
pop
rorl
shr
xchg
pop
roll
enter
add
dec
mov
add
sbb
test
ret
lock
mov
insl
cld
mov
pop
out
adc
jle
jno
push
add
arpl
les
scas
loopne
xor
mov
popa
shlb
add
or
out
adcb
mov
orb
xor
dec
sbb
lods
ficoms
into
insl
pusha
insb
push
inc
mov
push
sahf
call
out
jmp
dec
push
add
rolb
sub
cmp
add
and
xchg
jle
add
test
pop
jbe
inc
xchg
inc
rcrl
add
pop
add
xor
out
loope
rolb
mov
stos
dec
or
sub
enter
bound
jo
add
and
dec
sub
imul
leave
int
jge
add
data16
cmp
fisubrs
sbb
mov
add
push
cmpsl
sub
sub
sbb
pop
jge
pop
cld
pop
add
mov
jns
in
aaa
adc
push
pop
and
movaps
jp
out
pop
and
jl
cmp
cmp
jle
mov
mov
cmp
jecxz
mov
mov
cmp
xchg
add
add
pop
enter
add
dec
push
or
dec
sbb
stos
or
xchg
add
iret
mov
neg
incl
xchg
out
pushf
mov
or
test
jo
inc
adc
sbb
js
popa
or
into
jne
test
dec
ja
add
push
push
aas
pop
sbb
inc
mov
mov
in
and
insb
fcom
cmp
arpl
add
pop
jl
mov
pop
popf
ljmp
mov
xor
push
add
in
repz
outsb
mov
mov
xor
clc
add
add
cmp
sti
in
add
in
popa
pop
sbb
cmp
jo
mov
inc
or
pusha
test
inc
sub
jbe
inc
cmp
repz
pop
mov
sub
cmp
jne
mov
push
add
out
int3
call
add
lahf
dec
mov
cmp
pop
add
cmp
lret
jne
pop
stc
in
add
std
mov
fisubs
or
add
cli
lock
outsl
test
sub
mov
mov
sbb
lret
fcoms
sarl
add
jns
popf
clc
orl
add
add
xorb
sub
out
int3
in
jo
add
push
pop
movsl
push
fsubr
insl
add
adc
jns
ja
adc
stc
std
inc
mov
push
mov
xchg
mov
sbb
xor
out
mov
and
push
cmc
cmp
pusha
adc
mov
mov
adc
cmp
adc
lret
sar
or
inc
das
inc
pop
mov
inc
movsb
mov
mov
add
or
cmp
pop
add
push
int
je
in
dec
mov
cmp
xchg
jp
cwtl
inc
hlt
fidivl
scas
lret
add
outsb
jae
and
push
add
test
in
ja
and
and
cmc
add
es
mov
pop
sbb
into
cmp
add
mov
add
mov
loope
add
outsl
inc
mov
add
testb
add
xchg
push
fldt
ja
scas
inc
out
sbb
push
fldcw
push
and
pop
push
sub
mov
pop
jb
jle
dec
cltd
push
xor
pusha
jl
aad
lock
mov
loop
jl
sub
test
add
sub
call
sti
stos
ljmp
add
mov
ss
fwait
aas
enter
push
push
mov
lret
movsl
or
inc
ljmp
pop
adc
cwtl
dec
js
xchg
movl
rorb
inc
pop
add
imul
or
mov
sub
mov
nop
cmpsb
dec
mov
and
iret
hlt
mov
xchg
add
popa
rcll
inc
outsb
jmp
daa
pop
sbb
add
and
jl
add
out
ljmp
sti
dec
or
add
bound
add
mov
stc
pop
mov
add
pusha
inc
fadds
roll
out
mov
stos
mov
push
add
inc
shlb
out
out
or
add
lods
mov
inc
insb
ljmp
rcrb
cmp
lods
cltd
mov
add
xor
jno
cmp
xchg
dec
add
xchg
test
add
jge
pusha
repz
push
les
add
mov
cltd
mov
lea
scas
xor
loopne
and
xor
adc
push
jnp
jmp
in
mov
cmc
add
and
inc
push
xlat
add
sbb
pop
pop
pop
mov
cmp
pop
hlt
push
movsb
shrb
scas
dec
push
iret
inc
subl
pop
call
and
leave
orl
mov
xor
sbb
mov
and
sub
jge
inc
add
in
lea
add
je
push
jnp
movsb
add
pop
in
add
and
push
add
jns
fiaddl
jp
push
jge
jbe
lods
add
pusha
or
sub
or
sbb
jb
insl
sbbb
loopne
push
out
lea
mov
jle
negl
mov
add
xor
sub
mov
ret
flds
lcall
fildl
fwait
add
outsb
or
aaa
in
inc
call
jmp
push
cltd
add
adc
add
hlt
loope
in
std
dec
add
stos
js
mov
negl
lock
mov
jecxz
mov
push
xor
imul
ja
cmp
loope
mov
jae
pop
pop
xchg
pop
jle
lock
cwtl
jmp
sbb
cmpl
hlt
out
filds
mov
je
mov
inc
add
xor
mov
pusha
js
inc
ds
ret
pusha
push
add
xor
cs
dec
dec
cmp
add
inc
mov
aam
add
fcmovnbe
sahf
xor
out
and
adc
nop
sub
push
leave
push
inc
sub
outsb
clc
test
add
sbb
cmp
aam
imul
jnp
fwait
mov
mov
ja
std
add
stos
pop
mov
xchg
pop
sub
inc
dec
push
xor
lret
sbb
inc
gs
jnp
imul
inc
push
ja
test
lahf
fiadds
iret
scas
jae
out
push
hlt
add
cltd
or
test
add
jbe
sub
mov
cmp
dec
test
mov
inc
adc
pop
orb
push
push
imul
inc
xor
lods
cmpsl
mov
daa
add
pop
xchg
decl
das
cmp
jmp
js
add
scas
cmp
daa
jge
insb
adc
add
pusha
mov
jg
out
mov
into
out
cltd
in
inc
push
push
push
sub
add
je
adc
lcall
loope
add
bound
xchg
add
cmc
pop
dec
std
add
ss
ret
mov
inc
flds
jmp
and
hlt
in
push
out
jge
pusha
mov
and
aaa
jnp
test
add
cld
adc
jbe
add
jmp
insl
pushf
jnp
fiaddl
and
xchg
repnz
fldl
jp
sub
lret
mov
insl
jl
push
jge
std
out
nop
add
fstl
imul
ret
popf
push
mov
cmp
cmpsb
loop
jecxz
pop
inc
and
sbb
push
add
adc
pop
fisubl
repz
xor
dec
loopne
pushf
xchg
or
xor
fmull
push
pop
orl
cmp
in
xor
add
sub
inc
bound
cmp
dec
cmp
mov
dec
dec
or
adc
xchg
repz
loope
addb
ret
or
out
in
inc
hlt
adc
fdivrp
cmp
insl
mov
xchg
mov
push
mov
or
and
in
nop
les
jo
push
repz
dec
shlb
pushf
mov
add
fmul
mov
add
mov
sbb
stc
xchg
sub
sub
insl
jo
mov
xchg
icebp
movsb
int3
into
iret
pusha
shlb
addb
push
add
mov
fidivs
dec
adc
or
cmp
std
mov
sub
popf
call
lods
bound
hlt
push
xchg
pusha
push
out
ret
add
jge
xchg
add
gs
iret
pop
repz
inc
leave
add
test
pop
fbld
sbb
sar
add
or
mov
inc
inc
pusha
sbb
scas
jge
or
movsb
jno
add
add
std
and
pop
adc
mov
mov
out
jmp
in
outsl
mov
adc
add
sahf
xor
push
daa
cs
pusha
add
sub
jmp
popa
outsb
mov
les
sti
sbb
xor
mov
sub
das
loope
loopne
pop
add
mov
xor
enter
add
das
jecxz
mov
adc
jne
shrl
mov
dec
mov
adc
sbb
in
fdivrs
subb
into
pop
push
js
xor
jnp
shrb
es
xor
xchg
ret
int
insb
aam
and
mov
add
jne
scas
xor
dec
sti
repz
lret
mov
notl
rcrb
in
add
ds
ss
xchg
mov
imul
jae
pop
xchg
push
mulb
pop
inc
cld
or
adc
popf
cmp
dec
push
add
ret
and
addl
mov
pushf
mov
add
negb
sti
add
rolb
add
mov
xor
add
ds
pushf
loop
pop
jb
bound
add
ret
inc
filds
cpuid
adc
data16
add
aam
pop
add
mov
jmp
hlt
cmp
je
in
cmp
mov
add
mov
lock
adcl
add
stos
mov
outsl
add
fildll
xchg
pop
dec
cmc
icebp
sbb
stc
add
es
and
fcomps
mov
dec
xor
pop
mov
mov
push
in
xchg
dec
push
jmp
cwtl
lret
add
mov
in
mov
dec
movsb
cmpsb
add
mov
pop
test
movsl
fs
popa
add
aas
int
inc
mov
push
pushl
arpl
cltd
aam
mov
ja
add
popa
mov
sti
aad
add
jne
popa
add
rcrb
xor
add
adc
and
dec
push
add
pop
inc
fwait
push
push
add
mov
stc
push
xor
cmp
ror
or
ja
add
arpl
sbb
icebp
push
pcmpgtw
inc
daa
mov
mov
push
in
iret
xor
out
pop
cmp
cmpsl
xor
mov
jns
and
inc
pop
mov
or
insb
cmp
das
adc
addl
arpl
enter
add
add
jb
cld
sbb
add
jo
add
arpl
movl
sbb
jb
rcrl
hlt
add
in
mov
insl
test
inc
inc
les
jl
loop
add
inc
in
mov
int
add
fcomp
push
outsl
lock
lea
test
in
jns
sbb
fiadds
cmp
pop
dec
mov
das
mov
push
and
ret
jns
inc
in
jg
xor
add
shrb
cltd
std
mov
lldt
cmp
mov
or
lods
sbb
or
movsb
stos
cmp
ret
ds
enter
mov
dec
inc
imul
ret
add
shll
clc
jo
sub
popa
sarb
add
jne
inc
add
adc
fnstsw
sub
out
add
lcall
fnstcw
xchg
cmp
in
push
adc
ja
aad
faddl
out
cmp
stos
push
testl
push
mov
subb
test
pop
or
inc
cmp
xchg
unpcklps
jp
push
lret
movsb
jb
lcall
sub
xchg
pushf
out
cmp
inc
add
popf
xor
incb
fwait
cs
fisttpl
xor
roll
popl
jp
mov
dec
pop
cmp
scas
jle
jmp
in
xor
rcpps
xor
aaa
adc
scas
or
stc
mov
lock
pop
add
jae
xor
sbb
xchg
addr16
clc
jb
add
push
das
push
jns
dec
jecxz
jle
hlt
scas
mov
mov
sarl
dec
pop
sbb
mov
add
and
rcr
mov
add
fnstsw
xchg
nop
push
insl
and
dec
and
or
ljmp
sbb
int
fsub
add
out
xor
sbb
sti
add
push
ja
add
insb
adc
add
out
pushf
xor
enter
add
mov
out
sbb
clc
stos
pop
and
sbb
out
je
jb
cmc
loop
clc
mov
stc
pushf
clc
push
sbb
jb
adc
xchg
sub
xor
rcll
pop
pop
rorb
adc
jecxz
loopne
add
lea
push
pop
xchg
mov
sub
das
insb
inc
fcoml
sub
sbb
in
or
subl
pusha
xchg
pop
cmpsl
sbb
aam
insb
pop
or
jnp
jno
jmp
dec
das
call
enter
inc
stos
pop
mov
dec
mov
shl
lcall
cltd
ret
pop
mov
xchg
gs
mov
pop
mov
imul
mov
mov
adc
js
or
or
xchg
aad
arpl
mov
pop
sbb
rclb
andb
add
ret
cmp
jne
add
jmp
dec
push
add
in
mov
stos
dec
hlt
dec
call
lock
rolb
mov
loopne
pop
push
rcrl
in
jecxz
sbb
outsl
add
push
mov
test
sub
push
lock
das
cmp
xor
and
push
dec
add
je
mov
decl
or
dec
push
jo
mov
mov
mov
mov
add
push
outsb
out
push
in
pusha
mov
movsl
orb
fdivrl
mov
repz
leave
jbe
insl
xor
mov
jb
loopne
cmpb
pop
aas
adc
and
cmp
adc
add
xor
repnz
push
imulb
je
jle
inc
popa
pusha
arpl
add
add
cwtl
sbb
sbb
inc
sub
pop
xor
imul
sub
shr
ds
sbbl
dec
or
xor
mov
and
rorl
stos
push
lret
rolb
mov
iret
in
inc
call
cmp
arpl
pop
push
mov
inc
push
in
add
mov
sahf
outsl
pop
rol
and
inc
out
ja
jl
or
mov
out
add
add
pop
iret
cmpsb
add
mov
dec
or
inc
repz
nop
outsl
push
adc
adcb
cmpsl
insb
pushf
imul
or
aam
add
and
or
adcb
cmp
cmp
andl
call
xchg
mov
jmp
arpl
rorl
icebp
sub
mov
and
dec
add
xchg
scas
xchg
ffreep
pusha
lods
add
in
pop
inc
scas
and
add
imul
push
mov
inc
test
push
push
lods
clc
dec
or
cmpsb
or
push
inc
jno
jo
hlt
xchg
data16
clc
fldl2t
push
add
adc
dec
mov
jbe
in
or
jno
pop
push
xchg
jl
inc
adc
jle
ja
sbb
add
inc
xor
in
add
add
and
inc
movsl
add
inc
popa
jno
pop
mov
xchg
push
fisubrs
popa
cmpsb
enter
call
aas
mov
stos
sbbl
sub
cmpsb
mov
jmp
mov
lcall
sbb
js
repnz
out
scas
mov
cmp
push
in
pop
in
adcb
ljmp
mov
fsub
push
add
ret
sbb
movsb
imul
arpl
shlb
adc
pop
or
mov
mov
xchg
add
mov
pop
lcall
add
hlt
inc
lcall
cmpsl
out
xor
pop
ja
sbb
outsl
inc
push
pop
adc
mov
aas
push
sbb
add
add
adc
into
add
pop
repz
mov
movsl
enter
pop
in
cld
add
icebp
jns
or
subl
pushf
mov
adc
fwait
or
loopne
ret
aaa
pop
rorb
mov
xchg
adc
stos
test
inc
pop
or
xor
loopne
add
out
cli
cli
sub
in
addr16
into
int3
xchg
inc
int3
loop
daa
add
pop
push
ss
dec
xlat
jno
xchg
icebp
add
call
bound
pop
mov
fcmovb
movsb
xchg
incb
cld
xor
add
stos
dec
xchg
loop
in
sarb
ss
add
adc
imul
cmp
add
mov
cli
or
jno
and
cltd
or
dec
add
fdivrs
adc
mov
xor
dec
lret
add
mov
mov
push
add
es
push
inc
mov
mov
jb
sbb
cwtl
xchg
out
cld
or
movsb
repz
imul
popa
mov
testb
and
add
sub
add
scas
push
and
add
insl
inc
mov
jbe
add
icebp
sub
add
cwtl
jo
nop
pop
cmp
pop
out
xchg
aas
dec
repz
es
pop
cmp
add
xor
popf
sub
cmp
stos
inc
sbb
and
gs
stos
arpl
xchg
ja
jge,pn
cmp
add
outsl
mov
add
xor
stos
mov
xchg
xchg
adc
mov
dec
cmp
dec
cli
xor
jno
inc
stos
push
sarb
fisttps
sub
inc
mov
add
or
fadd
shrl
add
add
cmc
xchg
xor
pop
cld
push
stos
mov
shll
in
in
xchg
push
push
rcrb
inc
icebp
mov
and
lea
xchg
cmp
ret
mov
push
add
push
or
xor
nop
int
push
add
repz
scas
jnp
adc
inc
into
mov
xor
fwait
cmpb
inc
shll
fists
cmp
je
mov
xor
fdivr
mov
push
pop
es
or
stos
mov
add
sbb
pushf
mov
add
sahf
push
ja
jbe
add
mov
lods
mov
push
orl
dec
jne
or
add
orl
scas
dec
stc
pop
cmc
inc
add
cmp
insl
pop
pop
xor
xor
xchg
sbb
push
add
adc
jmp
arpl
les
into
dec
add
in
sbb
scas
cmpsl
push
adc
movsl
pusha
cli
xor
data16
xor
sahf
fildl
and
dec
es
rolb
dec
andb
mov
inc
imul
jbe
outsl
jecxz
mov
rol
icebp
test
add
leave
push
jo
xchg
je
repz
jmp
cmc
out
arpl
adc
dec
jns
pop
add
enter
loop
add
sbb
push
inc
or
xor
hlt
mov
jp
adc
and
adc
fldenv
rclb
xor
cmp
add
sti
scas
in
psubsb
loopne
xlat
pop
mov
imul
mov
js
hlt
push
add
jl
lret
dec
push
enter
push
movsb
jg
mov
push
loopne
push
shrl
in
jl
mov
fcompl
inc
insl
pop
mov
insb
or
sub
rolb
inc
not
cs
and
pop
orl
cmp
add
outsl
std
fs
loopne
add
jb
les
cld
fiadds
add
inc
cli
push
adc
shrb
add
mov
mov
jbe
add
sbb
dec
xchg
outsb
push
daa
inc
mov
rcrb
pop
mov
out
loopne
lods
add
pop
mov
cmp
pushf
in
add
pop
ja
push
xrelease
jbe
negl
js
cwtl
fs
shll
rcrl
dec
rol
jae
sbb
cli
shlb
sub
call
cwtl
or
les
data16
pop
push
rclb
mov
cmpsb
pop
dec
add
fstl
rcrb
test
cmp
popf
cld
jo
inc
add
sub
pop
or
xor
enter
push
push
call
jle
xor
jo
out
dec
push
or
int3
add
imul
arpl
incl
mov
fwait
push
mov
and
rep
roll
pop
sbb
les
and
mov
nop
pop
add
outsl
add
ljmp
int3
jge
jno
test
aad
cmc
fsubs
in
cmp
mov
mov
and
add
dec
jae
nop
pop
out
add
xor
xchg
repnz
outsl
xchg
mov
mov
insb
test
dec
jp
push
lcall
fisttps
dec
add
lods
xchg
sbb
dec
push
clc
add
or
lods
shlb
mov
sub
sbb
notl
psubw
sub
test
mov
mov
sbb
push
xchg
test
outsb
mov
xorb
dec
nop
test
adc
and
in
int3
pop
sub
push
and
loopne
mov
lods
cmpsl
stos
das
add
aam
xor
adcb
add
mov
push
jge
mov
fidivs
call
cltd
push
add
add
adc
nop
fistpll
lret
xchg
orb
dec
mov
cltd
daa
or
in
lea
sub
dec
lret
aam
xchg
movsl
xchg
adc
add
outsl
fs
push
sub
mov
inc
pusha
adc
lods
orb
inc
add
xor
mov
xorl
xlat
ljmp
pop
adc
and
int
out
add
sahf
fiadds
rolb
int3
stos
push
es
mov
jno
ljmp
add
xor
or
adc
and
or
and
dec
dec
sub
pop
dec
or
sub
sbb
movsb
mov
adc
fdivs
add
and
or
test
gs
imul
insl
sbb
fstps
enter
mov
mov
rclb
mov
push
xchg
icebp
repnz
mov
fwait
int
jae
jecxz
fimuls
add
jp
jge
mov
idivb
cmp
rolb
fidivrs
pop
out
add
or
fcmovnbe
add
in
mov
jl
xchg
lds
mov
popl
and
and
mov
pop
shl
dec
inc
mov
pop
aad
stos
in
add
xor
sbb
addl
loopne
xchg
hlt
dec
sub
rclb
aad
sub
or
mov
and
add
mov
fs
dec
lds
jae
incl
fbld
cmp
add
les
lods
jle
ljmp
in
push
shlb
jno
cld
rclb
add
outsl
push
xchg
mov
jb
shl
fbstp
jle
pop
inc
mov
mov
cmp
jnp
popa
inc
xchg
sbb
out
fwait
mov
add
xor
jb
add
push
pop
pop
lods
sub
mov
pop
shlb
xchg
std
inc
scas
arpl
xchg
xchg
add
cmc
lods
in
push
sub
xchg
add
xlat
int
scas
shlb
ja
mov
das
jae
add
test
inc
cmc
mov
or
mov
jae
insb
or
stc
push
pushw
sbb
in
adcb
sarl
test
push
jp
or
mov
fldt
cmp
outsb
xchg
repz
and
mov
js
add
rcll
movsl
je
cmp
mov
repz
sbb
stos
push
clc
xlat
lock
xor
adc
outsl
cwtl
adc
push
jp
xchg
xor
or
add
mov
add
xchg
mov
add
sbb
push
mov
add
add
sbb
dec
dec
outsb
es
xchg
add
pop
add
mov
sub
sti
in
and
es
xchg
pop
sub
add
inc
enter
sub
sub
icebp
and
or
fmuls
mov
test
je
xor
push
sub
mov
and
aaa
mov
cmp
adc
lods
dec
cmp
fdivrl
push
push
dec
push
outsl
sbb
ljmp
xchg
jle
add
xchg
ret
and
add
xchg
cmpsb
mov
nop
dec
add
mov
cmp
jecxz
pop
outsl
rclb
inc
xchg
add
jne
insl
sub
call
call
push
jns
iret
pop
xor
movsb
movsl
int
add
cmc
adc
aam
jo
enter
and
jbe
rolb
pusha
or
loop
adc
in
loopnew
adc
aam
inc
sub
sbb
push
mov
mov
lds
xor
hlt
in
add
dec
and
cmp
xorb
aaa
outsb
inc
adc
popl
jno
inc
cmp
adc
daa
push
push
leave
xchg
adc
sub
sub
xchg
nop
imul
jns
push
pop
decb
cwtl
aas
cmpb
sti
sub
xorb
adc
sbb
jp
mov
movsb
mov
add
cmc
add
adc
add
test
jg
sbbb
add
inc
jo
inc
add
cmc
aas
adc
xorb
add
ss
lea
outsl
cmp
in
add
std
push
xor
fldcw
pushf
addb
mov
sbb
je
rcll
outsl
loop
pop
dec
push
lock
mov
fidivrs
or
adc
adc
stos
push
pop
popf
cld
incl
sarb
pop
pusha
outsl
nop
adc
in
push
lods
pop
ret
pop
cmc
jp
mov
dec
mov
push
cmp
sbb
je
add
subl
movsl
call
push
pop
push
std
jecxz
sub
mov
inc
mov
les
repnz
dec
lock
add
and
jne
ja
mov
xchg
jl
cmp
mov
shrb
insl
cmp
dec
in
roll
mov
outsl
pop
sbb
jmp
and
jb
lret
int
test
add
out
mov
dec
sub
data16
mov
fstl
les
add
int3
and
pop
inc
test
aas
mov
xchg
rcrb
and
incb
add
or
call
imul
add
inc
xchg
pop
ret
ss
les
add
jecxz
lea
rcll
aam
cs
sbb
add
cwtl
test
in
cmp
fadds
jae,pt
pop
fsubl
push
adc
cltd
mov
push
or
pop
into
arpl
pop
imulb
or
jbe
out
cld
xor
and
add
std
or
and
stc
dec
add
pushf
shlb
ret
lret
add
cmp
lock
jg
mov
push
mov
inc
cs
dec
push
repz
loopne
mov
fcmovbe
jns
shlb
and
leave
mov
add
mov
mov
sbb
popa
popf
pushf
ds
jmp
mov
orl
movb
fisubrl
sahf
cmpb
iret
sub
and
addb
inc
inc
inc
pushf
inc
cmp
fimull
imull
fsubr
xor
iret
xchg
and
push
add
jle
dec
in
cmp
dec
adc
xchg
fidivrs
call
sbb
sub
push
add
lods
out
add
pushf
ss
test
sbb
mov
rorb
sub
pop
cmp
inc
cld
rorb
add
push
sbb
inc
add
mov
movsb
lods
sub
add
enter
mov
xchg
js
add
mov
inc
dec
shlb
add
jmp
xor
mov
sub
lods
shl
xchg
aas
pop
lods
push
outsb
xchg
mov
jge
mov
sbb
add
ss
pop
mov
mov
nop
test
imul
push
jg
shlb
add
push
sub
aam
add
add
inc
setle
gs
popl
mov
andl
bound
or
sbb
cmp
cmp
loope
clc
dec
aaa
push
ja
ds
adc
add
sub
or
movsl
shrb
add
add
sub
mov
jne
mov
xchg
popa
dec
or
pop
mov
ret
pop
and
clts
adc
pusha
movsl
cmpb
xchg
push
inc
add
cmpsl
pop
cmp
enter
outsb
adc
imul
cmp
addl
hlt
fisttps
jno
inc
popf
xchg
add
and
cld
mov
and
cmp
add
push
sub
xchg
ret
sahf
bound
lcall
jmp
sub
or
xchg
test
shlb
dec
testl
outsl
in
std
inc
add
mov
test
jecxz
and
sbb
add
xor
pop
xor
xchg
int3
sti
shl
sbb
hlt
ja
loopne
mov
pop
adc
rolb
in
shr
dec
mov
pop
pop
xchg
add
ficoms
mov
jb
or
in
mov
pop
sub
pusha
add
add
xchg
add
mov
mov
jo
xchg
cmpsb
movsb
mov
orl
into
add
push
dec
icebp
lock
or
orl
jmp
fadd
ret
in
loop
test
lock
sbb
setno
push
fimuls
pusha
dec
inc
jno
jmp
dec
dec
xchg
shl
mov
jg
pop
ja
test
push
add
add
cmp
test
add
lahf
in
adc
loopne
add
movsb
data16
push
push
pushl
and
add
lret
add
adcb
add
adc
inc
sbb
inc
out
add
jle
fstl
push
cmp
mov
icebp
cmc
in
pop
add
push
jmp
xchg
adc
in
add
popf
mov
test
lret
pusha
sbb
bound
cmpsl
xchg
mov
jns
jbe
xor
jb
jle
jne
inc
push
cmp
sub
out
sbb
xor
and
push
subb
xor
adc
push
add
cld
mov
adc
aad
pusha
pop
cmpsl
mov
je
pop
bnd
xlat
fcmovnb
lcall
sahf
int
les
jne
add
icebp
jnp
dec
push
fstl
add
jo
add
sbbb
fnstsw
add
jns
mov
test
add
add
mov
adc
mov
pop
test
sub
push
insl
sub
roll
pushf
jo
inc
clc
jg
add
test
je
xchg
sub
outsl
jecxz
jo
mov
add
push
loopne
jle
fwait
aas
mov
or
add
shr
xor
push
arpl
lock
in
cmp
maskmovq
sbb
or
movb
fisubl
ret
add
push
sub
xchg
mov
jl
mov
stos
push
inc
frstor
mov
cmpsb
add
jns
cmp
xor
aas
cmp
pop
pop
fiaddl
test
add
dec
and
cli
sbb
cwtl
arpl
mov
add
movsb
cmp
adc
addr16
loop
inc
add
test
stc
push
loopne
xor
and
mov
adc
sbb
add
stos
jne
out
and
dec
dec
cmpsl
jmp
arpl
int3
mov
outsb
fidivl
rcr
cwtl
jl
popf
jle,pt
mov
cs
call
add
adc
pop
test
out
sub
and
stos
call
pop
or
insl
sbb
rolb
pop
jecxz
fisubrl
ja
addb
adc
cmp
jmp
push
shll
lahf
inc
dec
push
sub
incb
mov
or
add
lahf
add
jno
pop
mov
mov
insb
add
pop
push
out
dec
xchg
cmpsl
loopne
adc
add
adc
mov
adc
test
scas
sbb
add
bound
add
fmull
jno
mov
add
xchg
dec
cmc
pop
xchg
xor
mov
fiadds
movsl
jb
mov
mov
inc
shrl
inc
add
lock
scas
sub
pusha
dec
call
xor
mov
in
clc
or
dec
jno
fsubs
or
sahf
inc
jg
add
rolb
pop
dec
jecxz
rcr
add
cltd
pusha
adc
mov
jle
add
jge,pn
xchg
jle
testb
syscall
xor
sub
stc
pusha
repz
sub
cmpsl
test
iret
inc
jo
pop
stos
int
xchg
inc
incl
in
int3
loopne
xchg
inc
add
jae
fdivl
mov
add
popa
add
loope
add
and
addb
pop
and
push
cmp
or
push
mov
sub
push
xchg
pop
enter
pop
callw
add
scas
adc
js
loope
aad
pop
insb
aas
mov
fcoml
xor
int
mov
or
mov
sub
pop
rorb
loope
xor
jge
sbb
sub
aam
xor
ja
jo
pusha
adc
in
cmp
leave
add
cmpsb
cli
inc
sub
sbb
fucomip
jns
add
mov
or
cmp
and
adc
add
add
shlb
aas
pusha
sub
push
or
xor
cmp
cmpsl
xchg
imul
fdivr
jmp
outsb
aad
inc
andb
push
in
jle
dec
rorl
xchg
leave
add
aaa
loope
xchg
sbb
ljmp
inc
push
mov
arpl
iret
bound
sub
add
add
pop
es
mov
dec
add
adc
sub
mov
push
nop
cwtl
addr16
aas
dec
push
xor
jge
jo
xchg
mov
xchg
in
mov
add
popa
dec
mov
mov
pop
add
push
xchg
cmp
xor
pop
aad
popf
test
push
add
rorl
std
add
xchg
sub
pop
enter
add
out
dec
pop
frstor
int3
mov
cs
ret
enter
or
loopne
mov
call
sarb
add
or
test
mov
out
cmp
pop
add
and
leave
add
sub
mov
shlb
dec
add
dec
aam
add
sub
and
xor
push
sub
in
mov
jg
or
jae
iret
pop
sbb
mov
mov
popf
stos
rclb
dec
mov
cmpl
and
test
and
pusha
lahf
cltd
and
orb
mov
orb
add
ja
sub
mov
dec
xor
dec
adc
or
jbe
xor
sbb
ljmp
mov
cmpsb
pushf
dec
mov
aad
add
fs
mov
add
sub
pusha
mov
lar
cld
inc
add
inc
pop
lods
out
sub
mov
xchg
bound
jns,pt
adcl
pop
ret
stc
push
add
cwtl
pusha
into
leave
or
in
sahf
sub
add
cmp
push
call
ds
mov
add
test
fwait
add
dec
mov
add
push
or
push
insb
bound
sbb
mov
inc
adc
clc
mov
push
cmp
xchg
add
pop
add
add
push
push
bound
fucomi
jp
stos
push
jle
add
test
dec
jmp
out
mov
jecxz
ja
dec
mov
xchg
stc
push
cli
aaa
pop
mov
or
adc
movsl
shl
jo
cmc
mov
cmp
mov
or
test
or
sbb
inc
push
in
idivl
mov
repnz
andb
push
sub
sarl
sbb
jo
imul
hlt
popw
rolb
and
je
dec
add
add
push
inc
xor
or
and
add
mov
js
jno
add
outsb
rolb
inc
xorb
and
push
pop
mov
rorb
mov
mov
cmp
mov
xorb
jmp
addr16
negl
test
mov
iret
pop
popa
add
sahf
xor
add
cmp
or
add
ror
add
js
out
add
mov
add
jae
add
mov
cli
mov
pop
jns
add
mov
je
push
stos
in
iret
add
clc
dec
push
aam
mov
inc
add
mov
jns
jae
aas
ret
cmp
jecxz
ret
dec
xor
adc
cmp
cmp
cwtl
add
into
jnp
add
mov
add
pop
rclb
inc
test
not
xor
sub
adc
ja
push
push
movl
dec
mov
pop
lret
dec
repz
das
push
nop
and
add
jl
in
mov
add
or
dec
add
and
out
cmp
jb
jl
ficoms
push
fstpl
inc
aaa
push
fwait
std
rcr
or
push
lods
mov
xchg
sbb
dec
lret
rolb
imul
sahf
cs
add
xor
leave
and
lods
cmp
clc
sbb
xor
mov
pop
sti
outsl
add
iret
and
add
test
mov
add
rolb
adc
pop
stc
cmp
jns
scas
out
add
jo
add
mov
dec
lock
test
xor
mov
xor
mov
push
shl
test
add
push
repz
sub
xchg
push
cli
jecxz
mov
cmc
jmp
inc
aas
dec
cld
stos
dec
xor
and
jle
dec
mov
call
inc
xchg
mov
cmp
inc
add
cmpsl
repnz
mov
dec
mov
adc
lahf
adc
add
aad
xchg
pop
inc
stc
es
push
aas
lods
sub
jbe
add
or
int
dec
add
sbb
xchg
add
test
xlat
mov
cmp
xchg
add
or
rcrb
lret
add
fists
loopne
push
movsb
or
jb
add
dec
rcrl
adc
sub
stos
add
lahf
addr16
mov
pop
sti
add
sub
mov
jae
inc
xchg
adc
mov
hlt
push
add
movsb
jmp
clc
fidivs
ret
dec
cmpsl
lcall
mov
push
xchg
and
mov
mov
xorl
pop
out
out
push
jb
mov
jbe
inc
outsb
add
lock
cmp
or
push
mov
stos
add
std
ror
ds
jne
cmpsl
out
pushf
pop
aas
lock
cmp
out
push
lcall
sbb
mov
popf
add
or
addl
pop
fwait
rclb
imul
jbe
ret
jb
aas
std
lret
cmpb
push
cmp
iret
orb
fsts
inc
das
xor
dec
loopne
dec
cmp
push
lret
xchg
dec
sarl
bound
jbe
sbb
mov
mov
sub
test
add
inc
xchg
push
add
ja
loop
dec
jnp
add
pop
adc
std
aas
dec
ret
jge
add
add
or
or
add
dec
jl
ljmp
or
inc
jl
sub
xor
or
mov
pop
add
inc
pop
dec
add
cmp
loopne
xchg
add
mov
pop
or
or
jo
add
call
scas
pop
add
mov
test
cmp
icebp
mov
test
mov
mov
add
frstor
idivb
imull
add
mov
mov
pop
dec
out
add
cmp
neg
pop
pop
cmp
ja
scas
mov
fnstcw
add
cmpsl
dec
mov
daa
add
pop
xor
mov
das
flds
lods
int3
add
jnp
xor
and
jle
lods
or
xchg
scas
xchg
adc
add
mov
enter
lods
mov
lods
pop
jecxz
movsl
ds
or
ss
xlat
repz
pop
sbb
call
xchg
and
xchg
or
rclb
and
insl
sub
fildl
pop
xchg
into
pop
loopne
shrl
shl
lea
popa
sti
pop
test
nop
pushf
push
add
xor
xchg
inc
scas
xchg
add
mov
in
mov
movsb
fildll
ss
pop
inc
add
loop
add
enter
test
jns
nop
add
xor
or
cmp
xchg
cmp
addr16
xchg
std
das
popf
fidivs
cld
ss
scas
mov
jle
push
in
outsl
pop
dec
les
insl
mov
out
idivb
mov
or
cld
sbb
pushf
add
cmpsl
cmp
dec
add
add
popf
sarl
outsl
lcall
addr16
jbe
pusha
sbb
xchg
data16
fimull
and
aam
jmp
cmpsl
ret
int3
clc
push
stos
add
adc
mov
or
mov
out
call
mov
sbb
xor
repnz
jmp
outsb
outsl
nop
mov
pop
jle
out
iret
and
jecxz
mov
lds
add
cltd
roll
xor
int3
sbb
xchg
int
fsubrl
cmp
sbb
xchg
sti
invd
outsl
into
mull
xor
add
sbb
mov
insl
adc
loop
cmp
sub
inc
inc
push
cmpsl
add
imul
add
jno
xlat
cld
aas
push
jo
pop
inc
jg
sub
jo
test
cltd
aam
sbb
scas
push
add
xchg
cmp
dec
popa
iret
dec
cmc
aaa
xchg
out
jp
pop
lret
add
sub
icebp
add
loope
jecxz
pusha
adc
mov
pop
inc
add
not
inc
dec
dec
dec
test
loope
xrelease
mov
mov
push
add
mov
out
add
inc
adc
into
push
pop
add
xor
popa
fdivrs
push
mov
cwtl
mov
sbb
mov
loopne
sbb
xchg
or
xor
inc
add
add
xchg
shl
add
add
ss
mov
ja
nop
mov
cmp
sbb
push
mov
push
mov
jp
shl
pop
repz
mov
mov
mov
mov
out
or
pop
out
add
insb
dec
sub
add
add
int3
lods
add
loope
cmp
xchg
pop
add
test
test
sub
inc
mov
xchg
or
scas
js
mov
pop
movntps
mov
and
pop
add
pop
fwait
xor
ljmp
add
sub
inc
mov
in
fwait
fs
int3
xor
adc
popa
orb
stos
cmp
xchg
cwtl
frstor
add
outsl
add
adc
add
cs
inc
notl
add
sub
inc
lcall
pop
xor
xchg
and
and
fsubrl
testl
add
or
mov
insl
ret
xlat
or
rcll
cli
or
xor
mov
fdivs
jne
add
stc
imul
mov
xor
push
sbb
add
bound
test
cmp
cmp
add
dec
push
movsb
scas
inc
cmpsl
pop
in
rcrl
andl
jne
in
mov
push
sbb
stos
cmp
loope
gs
xchg
add
mov
cmc
fadds
sar
adc
aaa
mov
lea
inc
cwtl
mov
adc
add
jns
and
out
mov
std
in
scas
addl
movsb
out
push
aad
sbb
mov
dec
inc
dec
adc
fcmove
js
and
push
add
sti
jnp
pop
inc
dec
mov
aas
and
push
aad
add
xchg
ret
stc
mov
fmuls
nop
mov
adcl
mov
lods
fs
add
and
sub
add
movsb
and
pop
mov
jo
pushl
add
push
xchg
test
insb
push
add
rolb
add
rcl
push
js
add
adc
xor
sbb
jp
aas
add
push
in
or
pop
add
lods
mov
ss
push
insb
add
mov
rsm
fdivl
push
fiadds
lea
mov
xchg
divl
aas
push
jge
jns
lahf
imul
mov
mov
loop
cli
out
mov
arpl
movsb
call
dec
out
je
xor
insb
pop
adc
dec
stos
ret
or
stos
add
mov
jnp
mov
xor
add
pop
leave
sahf
adc
cmc
push
movsl
cmp
popf
inc
icebp
add
xor
jae
add
cmp
dec
sti
jp
test
cmp
push
jb
push
fdivs
pop
sbb
cmpsl
iret
imul
popa
dec
std
loop
cmp
test
adc
xchg
or
fisttps
push
and
fisubs
movsl
lahf
stos
pusha
push
mov
and
clc
mov
jecxz
int3
sbb
stos
push
and
mov
lcall
dec
lock
adc
add
pop
in
jge
sbb
or
push
movsl
mov
push
loopne
pop
fs
mov
test
dec
mov
lret
ret
mov
inc
daa
shl
aas
out
push
das
js
push
adc
add
xchg
add
add
shrl
sbbb
or
cmp
jmp
fmul
stos
orb
jmp
dec
cmp
mov
xchg
xlat
xor
add
jbe
loop
lods
dec
mov
ss
data16
pop
jp
add
xor
outsl
add
cmpsb
mov
inc
sbb
jno
flds
add
mov
scas
nop
adc
add
push
dec
xchg
or
dec
jne
loopne
jle
cltd
movups
cli
shl
stos
xchg
packuswb
andl
ds
add
jl
pop
shrl
adc
push
xor
fimuls
and
add
xchg
rolb
inc
sub
push
sbb
pusha
add
sti
lds
xor
mov
pop
test
pop
out
push
cmp
mov
cmp
mov
shlb
dec
std
pop
fldcw
movsl
ss
jge
adc
cli
in
cwtl
jb
shlb
xchg
push
imul
movb
lods
sub
fcoms
add
call
mov
ret
add
mov
xchg
inc
stc
jae
add
sub
addr16
subl
jbe
xchg
add
hlt
idiv
cmp
enter
scas
pop
stos
push
mov
das
movsl
pop
adc
add
loope
into
cmp
lret
movsb
mul
or
les
xlat
mov
push
xchg
or
es
int3
inc
or
adc
xor
push
pop
and
jge
in
jbe
fcomps
dec
lret
andb
test
xchg
dec
loop
mov
pop
xor
adc
mov
mov
jno
add
xor
mov
sbb
mov
inc
stos
inc
orb
pushf
mov
jne
arpl
daa
movsl
xchg
js
les
fsubrs
rcrl
arpl
sbb
loopne
loope
out
out
pusha
and
sub
sub
fisubrs
push
dec
gs
mov
mov
add
popa
dec
cli
mov
adc
inc
xchg
leave
es
dec
test
add
movsb
outsb
mov
add
mov
xchg
mov
pop
cli
cmp
xor
lahf
out
sbb
xlat
repnz
imulb
imul
mov
mov
or
pop
push
imul
add
mov
jo
or
add
incl
mov
xor
clc
lahf
outsb
add
stc
mov
test
push
pop
enter
sub
add
mov
push
ret
loope
outsb
lock
add
mov
sahf
pop
xor
insb
in
jecxz
int
xchg
shlb
push
mov
jp
sub
mov
and
add
xchg
clc
add
inc
or
test
roll
jp
cmp
mov
add
jns
ret
mov
repz
jne
sbb
dec
and
add
xchg
lods
add
pusha
sbb
lock
addr16
mov
and
xlat
sbb
mov
pop
push
inc
loop
test
lock
add
inc
push
popa
lea
loope
daa
movsb
or
js
add
mov
lock
mov
add
cld
shl
sub
add
insl
addr16
push
imul
jle
movsl
wbinvd
push
mov
hlt
inc
mov
mov
pusha
out
cmpsl
add
pop
sti
jo
mov
add
adc
mov
add
jns
mov
scas
add
sti
test
push
mov
sub
addps
adc
daa
sbb
in
mov
add
addl
stos
pop
lar
sbb
push
popf
mov
sbb
xor
test
add
scas
sbb
in
adc
in
pop
add
fdivs
pop
adc
mov
insb
imul
ljmp
faddl
movsb
aad
mov
int
and
mov
add
mov
xchg
sahf
fistpl
rclb
xor
and
js
mov
cmp
sub
daa
es
jns
sbb
aaa
and
lcall
icebp
mov
jl
fiaddl
clc
cmp
nop
andb
stos
lret
pop
xadd
ljmp
inc
cltd
jb
sub
cmp
jp
mov
and
push
scas
stc
mov
adc
mov
sbb
pop
or
cmpb
mov
out
and
cmpsb
lea
mov
sti
push
add
or
addl
jecxz
dec
dec
nop
rcll
sub
hlt
add
leave
xor
dec
es
test
in
lahf
mov
jb
int3
movsb
cld
mov
add
add
loope
push
cmp
push
add
fcomps
xchg
mov
sahf
inc
add
mov
repnz
add
pop
fs
jmp
cli
add
jnp
push
add
sub
add
mov
jge
add
std
stc
and
bswap
shrl
inc
inc
adc
std
jp
fsubrs
mov
add
ficoms
shl
rcll
mov
jmp
and
popa
fnstsw
mov
dec
mov
lock
or
add
dec
push
cmp
add
iret
push
cld
sub
sti
xor
lock
sbbb
fiaddl
or
jp
inc
mov
int
lea
pop
fildl
xchg
movsb
in
es
add
xchg
push
dec
push
fdivrp
xor
push
jecxz
repnz
sub
and
test
mov
pop
pop
sub
leavew
sub
sub
jbe
add
jl
nop
add
or
add
jo
popf
adc
cmp
adc
loopne
or
push
add
sbbl
test
mov
adcb
xor
arpl
sub
adc
jno
pop
into
insb
test
int
and
jno
or
nop
fdivp
sbbb
push
xchg
orb
std
bnd
shl
cwtl
jmp
push
and
add
add
js
test
imul
cmc
adc
push
insl
insb
add
dec
xor
pop
and
push
insl
add
push
jns
fbld
inc
sbb
mov
nopl
pop
loopne
dec
jns
mov
nop
mov
fsubrs
pop
popa
add
sbb
inc
dec
dec
add
or
outsb
and
and
mov
cmp
or
jae
pop
add
dec
mov
fnstenv
dec
xor
adc
add
rclb
push
add
inc
popf
sub
sbb
in
lret
lcall
inc
mov
movsb
inc
jmp
sbb
add
pusha
dec
call
outsl
out
xor
shrb
roll
pop
popa
mov
in
mov
inc
insb
cmp
repz
pop
add
xchg
mov
orb
pop
push
sub
pop
add
clc
in
cmpsl
fwait
mov
dec
stc
xorl
ljmp
sub
lret
shrb
dec
adc
fimull
xchg
jo
inc
in
iret
mov
cmp
jno
lds
lea
add
mov
sbb
inc
clc
mov
leave
sub
ficompl
add
mov
add
mov
ds
add
and
add
pop
cwtl
inc
imull
ds
repz
ss
jge
mov
pop
sub
jb
out
add
add
lods
out
add
aad
inc
stos
popl
jmp
loope
pushf
pop
out
daa
add
loopne
cltd
popa
jbe
dec
adc
inc
push
mov
lock
les
je
jl
pop
mov
ret
rolb
xor
in
sbb
mov
cmp
jmp
jae
push
xor
xor
sbb
or
mov
sub
test
stos
push
subl
add
mov
mov
fcmovb
lods
add
iret
mov
mov
int
loopne
inc
or
pop
push
inc
sub
add
cld
add
popa
jl
inc
jo
push
cli
popf
imul
jle
pop
and
cmpsb
xor
mov
pusha
adc
xchg
ficoml
pop
test
sarb
jne
insl
jnp
jno
add
test
jmp
dec
pushf
add
in
repz
shlb
xchg
inc
fsubs
mov
dec
add
adc
add
test
std
jb
push
add
jmp
repnz
sbb
inc
int
and
add
push
pop
adc
out
pop
xchg
rcr
inc
rorb
int3
dec
loopne
mov
xorb
testl
xchg
clc
or
pop
outsl
cmc
rcl
xor
setno
or
jbe
imul
ret
orl
clc
nop
fs
or
adc
loopne
ljmp
cwtl
pop
add
xchg
sub
inc
push
add
pop
xchg
inc
sahf
jp
add
addr16
dec
add
std
cmp
pop
cmp
lcall
push
int3
test
rorl
fimuls
adc
pop
repz
inc
mov
and
xor
or
data16
and
test
pop
pop
in
dec
add
in
mov
lcall
xor
mov
add
mov
sarb
xor
jne
add
add
or
push
ja
lret
push
mov
pop
jle
sub
cwtl
repnz
cltd
mov
push
mov
sub
pusha
add
movsl
push
sbbb
cld
fmull
jo
xor
add
inc
gs
or
jmp
leave
or
out
and
adc
add
inc
inc
inc
push
data16
mov
sbb
fcmovnbe
inc
fldt
int3
push
add
ret
add
add
movsb
imul
in
cmpl
add
bound
and
push
int3
and
fcompl
jo
add
xor
or
aas
les
clc
xchg
cld
push
jae
xchg
enter
pop
jp
dec
add
idivl
xchg
mov
in
test
add
fcmovnb
rclb
int3
inc
lock
adc
lcall
add
inc
add
shr
jmp
push
int
pop
add
mov
inc
push
leave
enter
xor
add
pushf
pop
inc
ds
and
pop
add
int3
hlt
dec
add
xor
inc
add
push
mov
loopne
add
outsl
loopne
add
in
cltd
andl
pop
or
sbb
mov
aad
jnp
xchg
lahf
cmp
iret
sub
add
mov
sub
xorb
fldt
and
pop
shll
sbb
jns
movb
data16
out
mov
into
jns,pn
pop
dec
xchg
mov
push
nop
cld
add
adc
sbb
cld
jle
mov
add
mov
add
sbb
add
rolb
ljmp
in
adc
sarl
repnz
add
fs
out
jge
fwait
jp
pop
or
dec
cmpsl
andl
add
int
pop
add
or
dec
sahf
scas
add
mov
sarl
xchg
rorl
icebp
jmp
mov
mov
outsl
cld
cmp
push
sub
lret
adc
and
mov
stos
aam
adc
add
xor
shr
mov
cmp
aam
push
push
roll
stos
gs
repz
ret
mov
pop
data16
mov
lock
jbe
lmsw
popa
xchg
cmpsl
cmp
xor
mov
in
pop
pop
jmp
xor
jbe
jp
cltd
bound
test
push
add
cmp
jb
sahf
sar
sbb
adc
mov
and
add
ds
ss
pop
cmc
add
cmp
fwait
out
and
sbb
adc
fucomp
not
add
insb
js
or
mov
shrb
cmp
adc
icebp
repnz
inc
out
push
int3
ror
std
mov
dec
je
sbb
push
adc
push
pushf
arpl
add
in
popa
shrb
fsub
ss
aaa
sar
jns
fisubs
and
addr16
add
push
outsb
mov
clc
shlb
jo
repz
icebp
stos
popa
and
stos
imul
jge
xlat
fdivrl
std
imul
add
adc
cmc
sbb
shll
pop
lea
iret
push
test
out
add
cwtl
out
push
pop
das
repnz
add
jl
out
add
incb
mulb
sub
inc
adc
jbe
xchg
or
mov
decb
add
into
jle
jp
cli
fiadds
jmp
mov
js
pop
sti
stc
loopne
dec
pop
sbb
js
add
in
push
shl
pop
rcr
aaa
push
les
and
out
scas
jg
es
iret
push
sbbb
ret
add
push
testl
cltd
fisubs
inc
inc
mov
in
add
push
bound
mov
fdivs
xchg
xor
cmp
lock
jge
add
mov
rolb
cmp
loopne
jb
mov
dec
out
xchg
rcr
cmp
mov
adc
lcall
in
lret
dec
cwtl
push
sbbl
mov
xor
mov
rolb
dec
in
add
pop
hlt
clc
jns
into
cmpb
jbe
xchg
bound
lret
ljmp
orl
jae
add
xor
or
jle
adc
inc
sbb
das
sub
adc
test
add
inc
je
int3
mov
push
gs
movsl
sbb
loopne
jmp
or
repz
js
mov
dec
push
mov
pop
cmpsb
inc
loope
js
ds
or
addr16
subl
add
or
loope
sbb
pusha
mov
mov
mov
mov
leave
push
and
arpl
or
adc
test
fdivr
fnstenv
cld
out
add
xor
mov
popa
cs
ljmp
lret
add
xor
push
adc
add
es
inc
fldln2
sbb
aaa
add
xor
xor
add
or
fimull
test
or
xor
not
adc
and
add
lods
addr16
push
cpuid
inc
ret
push
jae
add
dec
dec
fwait
xor
pop
and
js,pn
ss
or
or
ja
xor
sbbb
jns
sub
ljmp
cs
add
adc
sbb
sub
inc
push
inc
mov
jmp
decl
cltd
or
inc
loop
adcb
xchg
dec
loopne
or
xor
repnz
xor
out
das
add
dec
or
add
andb
sub
fwait
mov
in
cwtl
popf
popa
add
inc
add
pop
push
adc
cli
mov
add
fstps
jl
dec
arpl
mov
sbb
xchg
jne
out
roll
cmc
lods
mov
cwtl
and
add
sbb
in
dec
pushf
add
jb
ds
xchg
add
mov
pop
dec
imul
adc
scas
outsl
push
fdivs
adcb
and
imul
mov
push
add
es
hlt
add
jae
add
into
jp
xor
lock
rcll
add
in
fwait
mov
pop
sarl
push
or
or
testl
sub
pop
movsl
ss
out
inc
jo
jle
xchg
add
pop
lahf
mov
xor
jge
add
das
ds
or
mov
or
fldl
lea
mov
mov
or
arpl
mov
jmp
js
jno
mov
add
jae
stos
add
stos
icebp
mov
scas
mov
loopne
lahf
sbbl
add
adc
push
add
dec
fidivs
xor
shlb
nop
imul
mov
in
out
leave
sub
xor
pop
jo
push
xchg
sbb
and
mov
shl
xor
sub
sbb
mov
or
leave
adc
add
out
xchg
and
mov
pop
out
int3
scas
or
shl
ror
negl
add
mov
push
add
imul
add
scas
mov
cmp
sub
nop
mov
dec
adc
clc
cmpsl
add
and
adc
push
rcrb
cmp
xchg
add
inc
scas
and
daa
cmpsl
loope
xlat
arpl
pop
sbb
dec
sub
fwait
mov
and
cmp
sarb
fldl
inc
mov
jb
daa
add
fiaddl
test
popa
add
test
mov
ja
and
stc
add
lods
cmp
xorb
lahf
loop
sub
jno
into
xor
int3
enter
sbb
rcrl
fildl
cs
out
sub
outsb
inc
loopne
sub
adc
fiadds
popf
jae
adc
xchg
add
pop
mov
dec
push
cmpl
add
clc
jmp
or
popa
add
rol
sbb
pop
scas
sub
adc
and
sub
std
jg,pn
add
mov
loopne
sbb
pop
mov
mov
pop
fcompl
add
lret
mov
in
add
dec
pop
in
add
fs
repz
mov
jnp
mov
push
daa
jecxz
add
rcll
cli
out
rclb
negb
jb
mov
adc
add
ljmp
push
js
mov
push
xchg
jnp
add
daa
std
cvttps2pi
data16
push
mov
sbb
jp
add
inc
sub
into
mov
add
xchg
aam
mov
lahf
adc
inc
xchg
add
xor
jno
test
mov
cmp
addl
rep
testb
xor
mov
pop
es
dec
int
mov
mov
or
in
cwtl
push
pushf
push
lock
push
stos
rcl
ret
or
push
jmp
push
add
fldenv
sub
into
mov
or
inc
xchg
dec
addb
or
lods
and
jno
adc
cld
je
adc
pop
add
movsl
mov
add
jns
cld
mull
lock
adc
stos
mov
testb
xchg
sbb
pop
dec
sub
ret
mov
rcr
add
gs
xor
jno
jg
and
push
sbb
insl
jge
mov
movsb
out
dec
pop
add
hlt
ffree
loopne
je
mov
dec
sub
loope
add
sub
bound
jnp
push
mov
add
pop
add
shrb
add
aaa
cmp
cmpsb
add
notl
mov
dec
jbe
or
add
pushl
sub
add
lret
xchg
cli
jge,pt
push
cmp
lock
dec
jo
push
adc
xchg
jle
add
jb
in
arpl
add
ljmp
ret
mov
add
pop
mov
mov
xchg
sub
loope
add
insl
lret
add
mov
nop
arpl
mov
sub
jne
stos
popa
rcrl
add
xor
or
popa
outsb
push
mov
mov
cltd
adc
aad
pop
push
repz
mov
rcl
or
jmp
mov
cltd
sbb
call
add
push
sub
inc
adc
dec
scas
shrb
pop
mov
mov
pop
mov
xor
gs
call
stos
pusha
insl
mov
dec
cs
sarb
movsl
js
dec
add
std
xchg
add
push
inc
xor
mov
xor
or
sbb
xchg
push
fiaddl
in
sbb
iret
int
roll
jbe
clc
pop
jle
divb
cwtl
push
mov
push
add
rorb
ret
pusha
adc
nop
les
push
add
and
add
inc
jl
add
cmp
test
add
adc
fwait
data16
popl
cld
and
jbe
mov
jl
test
inc
ss
rep
cmpb
pop
push
icebp
test
xor
fcoms
jno
push
sbb
mull
int3
test
bound
cmp
pusha
xor
ljmp
mov
shrl
inc
and
push
js
cmp
enter
inc
inc
lcall
enter
fimuls
cmp
mov
xor
push
xor
mov
sbbb
dec
stc
js
sti
aas
dec
xor
fcmovu
enter
leave
inc
jge
fcompl
insl
ljmp
mov
daa
jp
mov
repnz
addb
clc
push
fnstsw
dec
fisubl
and
add
pusha
xchg
sub
popa
stos
sbb
dec
or
or
adc
jnp
repnz
in
arpl
pushf
xor
push
add
xchg
movsb
inc
push
rcrb
lods
das
sbb
data16
jbe
pop
cli
ret
mov
push
pushf
cld
jmp
or
mov
stos
add
not
cmp
sbb
sub
movsl
pop
or
push
push
loope
setb
and
fcos
clc
mov
jo
iret
nop
xchg
movsb
mov
sbb
popl
jne
lds
and
sub
js
ss
mov
scas
fwait
add
inc
inc
cmp
push
dec
add
les
inc
rclb
out
inc
adc
push
sub
shl
inc
mov
fwait
sbb
int3
loope
shlb
pusha
cmp
aas
movsl
adc
xchg
lods
add
inc
jno
inc
lcall
data16
adc
add
mov
or
fldenv
add
jg
mov
popl
sbb
adc
paddb
add
pop
movsl
mov
bound
add
adc
js
add
add
push
scas
hlt
add
mov
inc
loop
mov
call
out
jp
gs
aas
pop
ljmp
pushf
les
imulb
push
pop
push
sub
xchg
pop
das
repz
xlat
mov
add
lea
add
aaa
push
push
fsubl
add
test
add
lret
scas
addr16
pop
into
add
or
add
sbb
cmp
cmp
sub
mov
or
int3
test
add
pop
fwait
lock
pop
add
test
hlt
add
jbe
cli
insb
push
imul
mov
add
xchg
push
movsl
xchg
ja
sbb
cmp
sub
mov
icebp
pop
sahf
data16
aaa
je
mov
sub
sbb
jae
sar
push
add
dec
cld
bound
sub
enter
push
rolb
cs
jbe
push
rcr
lods
add
pop
aaa
cmp
dec
xchg
hlt
fistpll
and
xchg
push
cmp
sbb
mov
out
mov
cmp
mov
inc
add
and
inc
int3
sub
call
cwtl
pop
int3
nop
aas
adc
addr16
mov
xchg
and
int3
jge
pop
inc
fs
inc
mov
push
jge
jle
cmp
xlat
adc
or
repz
add
data16
sti
cmc
scas
mov
adcl
js
int3
and
pop
jmp
xchg
cmc
popa
adc
shl
push
in
pop
sub
fst
fs
pop
push
inc
addb
iret
fdivr
jae
mov
pushf
aad
add
or
xchg
add
cwtl
jge
adc
mov
jmp
xchg
sub
dec
lock
outsl
pusha
aam
test
or
shr
mov
scas
mov
jl
addr16
enter
inc
pop
cmp
xor
lret
cmp
push
pusha
icebp
lahf
fistpll
jnp
add
hlt
jp
pop
adc
xchg
sbb
nop
dec
push
lret
inc
add
adc
xchg
jp
into
cltd
lea
dec
loopne
pop
in
flds
lock
pop
mov
fwait
or
push
cmp
incb
add
push
dec
sbb
push
add
pop
add
inc
add
mov
or
int
loop
lahf
add
sar
je
jno
jecxz
push
jg
lcall
inc
cmc
lock
mov
push
cs
adc
cmp
add
push
jb
enter
mov
pop
mov
imul
int3
cmp
into
push
xchg
pop
add
inc
cmpsl
mov
into
in
add
nop
add
dec
jb
js
dec
mov
mov
xor
lahf
mov
pop
mov
xor
lock
pop
mov
daa
and
xor
aas
jns
aad
cltd
addl
mov
nop
outsl
incb
and
cmp
mov
xlat
jge
pusha
daa
popa
mov
inc
sub
inc
mov
or
pop
mov
mov
jecxz
and
mov
xor
lcall
rorb
dec
test
push
ret
pop
sbb
xchg
xchg
es
dec
mov
out
mov
lret
add
jl
imul
out
add
xchg
add
lret
iret
jg
mov
and
push
rol
shlb
dec
je
pop
jae
or
bound
mov
scas
movsb
ja
jl
xor
cmp
fcoms
xchg
and
push
and
loopne
and
loope
lahf
fcoml
pop
add
sub
add
xchg
and
cwtl
sbb
xchg
mov
pop
inc
negb
cmp
jp
out
add
jae
inc
test
faddl
dec
mov
add
lock
scas
pop
add
xlat
dec
testb
sub
dec
jge
mov
scas
jns
ret
jle
pop
sbb
dec
mov
movsl
or
icebp
and
dec
add
add
loope
add
mov
stc
adc
pop
loop
jle
add
dec
mov
xor
out
cmp
aaa
add
sbb
adc
add
mov
enter
test
jno
or
mov
js
add
pushf
sbb
adc
add
xor
add
and
sbb
mov
lcall
mov
popa
cmpsl
loopne
addb
mov
jne
pop
add
nop
lock
cli
lods
add
sub
jb
add
mov
insl
repz
dec
add
mov
test
std
dec
clc
into
pusha
push
loopne
or
sub
js
add
pop
imul
and
ljmpw
cmp
inc
mov
pop
inc
pop
in
adcl
daa
xchg
and
and
mov
lret
pop
cmp
stos
dec
fiadds
fs
and
and
sbb
decb
mov
popf
addl
lds
add
cld
xor
jno
cmc
shr
cmp
mov
sbbl
subb
daa
stos
leave
mov
pop
das
dec
dec
mov
loop
add
fmul
ja
iret
stos
incb
or
cltd
push
cli
int
scas
in
mov
cwtl
add
fwait
jge
add
push
xchg
add
cmpsb
sbb
add
add
test
fsub
loope
jno
out
aam
mov
add
mov
ss
add
nop
jo
lea
mov
fdivrl
lock
jecxz
lock
adc
repnz
ret
clc
pop
sbb
mov
mov
pop
dec
add
icebp
out
mov
and
jne
pusha
leave
add
or
es
lock
inc
jb
inc
cmpsl
icebp
pop
jecxz
and
adc
mov
jl
add
sbb
sub
fidivs
aaa
ds
lods
add
divl
xchg
jno
push
addb
mov
inc
neg
outsl
les
xlat
mov
pusha
pop
xor
ja
icebp
outsl
in
inc
shrb
jb
sti
add
dec
daa
xor
pop
shrd
cmp
push
out
inc
rolb
adcb
adc
outsb
mov
or
add
sbb
mull
sub
aad
jns
es
cmc
jo
adcl
add
and
out
add
jnp
js
sbbb
stc
jmp
or
popw
cld
ret
test
dec
xor
jp
lcall
jno
loop
inc
scas
add
push
pushf
xor
mov
pushf
dec
inc
call
or
mov
nop
mov
ret
dec
aaa
fidivl
or
pop
ljmp
push
sub
int
xor
iret
add
lds
add
bound
mov
xchg
in
sub
mov
or
and
int3
xchg
testb
shlb
mov
mov
aas
iret
xor
int
cli
xor
dec
lods
out
jns
push
jo
lahf
sarb
or
and
mov
mov
test
cmp
push
fldenv
cltd
fstps
push
jle
jo
cwtl
xor
mov
jnp
add
fst
sbb
andb
xchg
out
adc
add
repnz
cld
add
push
in
cmc
mov
xchg
add
rcl
stos
mov
hlt
jp
aad
sbb
rol
and
mov
or
dec
test
sbb
sbb
xor
inc
pop
pop
punpcklwd
daa
pusha
cld
addb
idivl
add
cmp
in
sbb
and
inc
add
repnz
jmp
add
xor
lahf
jae
add
adc
add
in
into
pop
push
cmp
dec
add
mov
xlat
lock
mov
add
movb
dec
adc
xor
and
sub
cmpsl
fisubrl
push
inc
add
add
jecxz
add
pop
aas
mov
inc
in
jp
ret
aam
jle
push
movsb
pop
sahf
arpl
cwtl
sahf
add
sub
popa
push
dec
inc
xor
push
lods
in
cmpsb
aaa
movsb
cmp
cmp
add
add
and
xor
iret
xor
and
nop
test
jle
into
shrl
cvtdq2ps
test
add
pushl
arpl
cmp
data16
add
rorl
xlat
nop
jle
ret
add
sahf
cmpsb
cltd
mov
rorb
push
jno
or
sbb
pop
jle
insb
jbe
adc
ret
push
jge
or
pop
add
pop
pop
mov
jle
lret
dec
mov
mov
movsb
mov
xchg
ss
push
jo
and
jne
pop
push
cmpsl
inc
pop
and
mov
loopne
je
cmpsb
push
pop
sahf
iret
add
orb
cli
and
push
inc
cmp
sar
popf
mov
pusha
adc
xchg
lea
xor
xor
inc
pusha
mov
mov
daa
inc
outsb
sub
lahf
fisubl
shl
add
lret
sbb
mov
jecxz
or
jno
popa
xchg
cmp
adc
dec
std
push
pushf
sbb
fcomip
stos
repnz
xor
add
adc
push
clc
sub
lret
cwtl
jne
lods
cmp
pop
add
inc
push
shll
sub
and
add
movsl
mov
outsb
stc
adc
je
xchg
movsb
mov
dec
sbb
pop
adc
pusha
inc
rclb
and
leave
mov
push
xor
test
sbb
sbb
push
lahf
fdivrs
int3
sarl
filds
jno
and
notl
pop
push
add
dec
addl
adc
aam
pop
daa
and
jmp
std
rcl
cmp
mov
push
test
jb
shlb
mov
lea
push
or
flds
adc
xor
mov
mov
sbb
fsubrs
xor
leave
xor
dec
push
mov
scas
xor
push
rcrl
add
aam
sbb
adc
mov
dec
out
lret
int
into
test
aaa
rolb
scas
lret
popa
push
call
xchg
std
fcoms
loope
fadds
mov
jecxz
mov
mov
stos
xor
jle
pusha
xchg
cmp
je
mov
mov
popa
dec
cmc
or
mov
mov
lret
cs
out
cli
add
fldt
push
cmp
and
xor
adc
ja
mov
inc
mov
mov
jg
aad
hlt
xor
or
adc
mov
test
push
mov
pop
xor
cmp
lahf
fisubs
pop
add
nop
fstpl
mov
add
xchg
mov
inc
inc
or
sub
das
xor
and
jmp
xchg
out
dec
or
jbe
arpl
ror
and
pop
jae
mov
adc
or
sub
add
in
jo
inc
fisubs
inc
das
sub
sub
int
sbb
xchg
cmp
jl
scas
adc
fildl
adc
cltd
xchg
cs
sbb
cmpsl
sbb
lret
in
js
lcall
lock
out
xor
les
in
add
dec
mov
loope
xlat
scas
jb
cmp
and
pop
mov
inc
add
mov
cmp
mov
fisubrs
inc
add
mov
clc
les
sbb
jno
fucomi
icebp
dec
or
shlb
cltd
add
orl
xchg
xlat
xor
push
roll
pcmpgtw
pop
test
stos
pop
pop
push
in
loopne
jo
add
jge
xor
test
pop
ret
push
sub
jne
repz
push
add
add
movb
dec
inc
adc
rcrb
cmp
pop
xchg
lods
pop
add
das
insl
in
inc
adc
stc
xor
xchg
hlt
add
push
or
shrl
aas
ljmp
out
mov
scas
pusha
cmp
adc
nop
lret
add
cmp
call
push
xlat
je
rol
shl
aas
cmp
xchg
add
imull
add
call
pop
aam
and
aas
add
push
push
fisubl
imul
cmp
popa
stos
outsl
or
mov
sbb
repz
dec
ljmp
mov
or
and
stc
les
fdivrl
sbb
dec
adc
cmc
dec
mov
addr16
sbb
movb
push
sbb
sbb
std
aam
xor
cmpsl
add
cmp
out
jb
xchg
push
jp
or
mov
mov
dec
mov
lock
add
out
mov
dec
inc
loopne
call
sti
and
jne
aas
test
test
into
hlt
pop
mov
adc
push
xor
jp
inc
filds
or
mov
test
imul
int3
inc
mov
add
mov
aas
bswap
sub
pop
add
push
and
testb
nop
loopne
jp
out
add
repnz
nop
pop
add
mov
inc
aas
fs
js
pusha
loop
sbb
pop
mov
mov
cmc
dec
sub
hlt
mov
nop
adc
adcb
xchg
and
xchg
lock
rcl
xor
mull
hlt
add
popf
loopne
lds
adc
stc
push
or
es
fwait
inc
sti
clc
mov
cs
jbe
test
mov
sbb
call
inc
in
xor
movsb
adc
sarb
jns
mov
ss
in
mov
xchg
loopne
cmp
test
dec
xchg
sub
incb
pop
fsubrl
push
xor
mov
mov
sub
popa
cmpsb
add
dec
lds
jae
push
mov
aam
push
daa
inc
test
add
fisttps
out
shll
mov
xchg
popl
mov
dec
lock
add
leave
lea
add
dec
fwait
pop
mov
dec
pop
lds
xor
nop
cli
or
jo
sub
jo
movsb
push
dec
adc
lods
in
in
pop
ret
pop
dec
mov
and
sbb
out
cmpsl
pop
arpl
lcall
add
mov
fdivrl
mov
mov
cmpsl
nop
js
stos
popa
inc
adc
xchg
imulb
add
int
pop
adc
dec
and
xor
mov
mov
add
stc
iret
push
add
sub
lret
scas
inc
xor
mov
jl
stos
pop
sbbl
xor
stos
xor
pusha
movl
cmp
aam
aaa
cmpsl
add
sbb
jb
xorl
movsl
sahf
pop
setne
dec
lock
push
jge
sub
dec
add
dec
push
inc
sbb
loop
test
mov
insl
rol
int
aas
add
cwtl
inc
mov
cmp
xchg
add
lahf
ficoms
or
push
add
sub
add
dec
lret
or
jb
adc
popa
and
out
xchg
lock
pushf
dec
aam
jp
xor
mov
add
in
mov
mov
xchg
out
adc
cmpsl
dec
out
out
add
pop
cmp
ss
hlt
or
popa
add
adc
ret
dec
enter
mov
mov
rolb
push
aas
adc
cmp
jmp
lret
fisubrs
shrb
sbb
leave
les
xor
add
fldl
call
mov
pop
add
and
push
aad
sbb
pop
outsl
lahf
stos
add
mov
daa
ret
push
test
add
imul
add
bnd
dec
cmp
cld
jns
or
out
and
add
out
jp
cmp
fiadds
mov
cmpsl
ja
mov
add
fnstsw
add
xor
in
add
jbe
leave
sbb
insl
add
cmp
adc
mov
dec
and
sub
sbb
and
push
cmp
cmpb
stos
push
lods
ror
add
arpl
adcl
add
fisttpll
ficomps
fcmovb
mov
push
outsl
addl
sub
jp
cmp
clc
inc
adc
xchg
inc
mov
mov
in
rolb
lret
dec
icebp
lock
cmp
lods
and
repnz
mov
insb
nop
push
aas
adc
addb
loopne
cmp
outsb
or
jl
push
ds
in
add
js
enter
insb
xchg
aas
mov
pmaxub
pop
mov
icebp
xchg
pop
sbb
fbstp
jne
out
push
mov
add
jmp
cmp
push
ds
pop
cmpsb
pop
dec
push
lds
mov
mov
rorb
dec
sbb
repnz
and
addr16
xchg
lock
sub
pushf
adc
mov
and
fdivr
mov
or
xlat
repz
pop
add
aam
sub
decl
ficomps
bound
scas
daa
xor
lahf
jmp
or
popf
rorb
inc
cmc
xlat
sub
lds
and
ret
data16
loope
xchg
or
add
cld
popa
dec
add
cmc
sbb
addr16
inc
xchg
xchg
ds
scas
popf
fwait
lods
outsl
mov
pop
dec
sahf
nop
in
mov
jbe
pop
sub
das
and
adc
in
mov
aaa
fistpll
xor
aas
popf
cltd
lock
das
pushf
andb
xchg
adc
add
psubsb
xor
mov
and
mov
or
jo
pop
xor
add
sub
aad
sbb
push
push
cmp
lret
es
stos
mov
xor
xchg
push
nop
push
insl
xor
pusha
std
sub
rcll
lret
in
xchg
xor
mov
or
xchg
int3
xor
cmp
add
repz
dec
lea
xchg
sbb
icebp
xchg
or
adc
lret
test
add
mov
mov
pushf
cltd
add
xchg
mov
add
push
xchg
aad
subb
and
and
test
pop
sbb
mov
movsb
lret
push
cmp
jbe
mov
xchg
lea
xor
insl
sbb
icebp
outsb
divl
and
bound
seto
popf
mulb
test
mov
xor
jecxz
add
pushf
inc
mulb
and
pop
adc
add
push
xor
mov
das
add
std
in
xchg
add
sbb
loopne
cli
sub
sbb
mov
call
insl
adcb
add
fwait
add
push
mov
cmp
xor
cmp
movsb
add
cs
ret
jmp
mov
repnz
dec
adc
add
add
gs
lock
add
mov
jmp
or
xchg
outsl
stc
dec
push
in
add
and
add
sbb
push
movsl
adcb
pop
add
mov
sbb
aas
shrb
mov
popl
stc
inc
and
push
sub
mov
sbb
jb
outsb
inc
xor
nop
addb
xor
ret
int3
shlb
leave
fs
repnz
bound
push
mov
push
in
pop
sub
out
test
loope
add
movsl
insl
in
add
inc
fmuls
and
adc
cmp
repz
xchg
sub
sbb
mov
in
pop
daa
ret
loope
xorb
ljmp
ret
dec
subb
pop
mov
and
lods
pushf
pop
aaa
leave
adc
roll
cmpl
xchg
push
sub
sub
push
pop
xlat
add
pop
adc
and
std
pop
inc
lea
sahf
jo
pop
daa
imul
pop
insb
mov
adc
frstor
es
rcrl
int
lods
or
lock
cmp
pusha
sbb
lret
add
fnstsw
jnp
nop
add
lock
pop
test
cmp
iret
jg
insl
fildl
xor
test
fiaddl
add
pop
push
or
add
add
xchg
leave
and
jnp
loopne
shlb
in
pushf
xlat
adc
inc
imul
nop
xchg
in
add
mov
loopne
fldenv
add
imul
sbb
sbb
mov
data16
add
inc
sub
lcall
cmpb
dec
add
lret
ret
insb
mov
jno
inc
add
and
jb
aaa
pop
fldcw
popf
clc
cltd
cmp
ljmp
mov
cli
je
rcr
fldl
fiadds
hlt
rcl
insb
add
jnp
adc
and
add
addr16
adc
fmul
xor
jnp
add
cwtl
out
ljmp
xor
and
test
add
fadds
mov
clc
add
pushf
dec
mov
test
push
jp
pop
int3
push
xlat
push
adc
add
addps
nop
dec
xchg
xchg
push
ja
ret
cmp
inc
cmpsl
out
push
cli
xor
xchg
pop
test
nop
or
jne
int3
jb
dec
and
xchg
mov
idivl
add
mov
push
lret
add
lods
ds
into
add
jp
add
push
in
sarb
pop
or
sbb
outsb
push
movsl
add
mov
iret
mov
xchg
inc
shrl
or
adc
sbbb
pop
add
aas
es
mov
adc
insl
and
add
pusha
out
ds
je
xchg
int3
mov
hlt
arpl
nop
add
fadd
push
in
add
or
lahf
add
insl
cmp
adc
sbb
outsb
out
mov
daa
push
clc
cmp
add
add
lods
push
and
not
cmp
iret
adc
jmp
push
add
pop
xchg
mov
mov
dec
cmp
jle
sbb
cmp
jne
pop
xchg
inc
aam
pushf
mov
cmp
dec
cmp
pop
cwtl
jo
lcall
mov
dec
add
pop
repz
ffree
cli
xor
push
je
add
mov
push
jle
mov
cltd
imul
xor
mov
xchg
punpckhbw
xchg
mov
jl
incb
loope
idivl
dec
add
sub
cld
cmpsb
pusha
dec
mov
add
push
cs
js
add
inc
shrl
loopne
xchg
pop
add
lret
mov
and
and
into
xor
adc
shrl
cli
adc
mov
xlat
or
incl
adc
add
repnz
loopne
addl
aas
mov
cmp
imul
mov
in
adc
add
add
mov
add
mov
addr16
adc
inc
icebp
sub
or
addr16
nop
and
scas
jp
in
or
pop
es
xchg
mov
sar
std
pop
shl
scas
jnp
cld
bound
inc
icebp
int3
pop
pusha
pop
add
add
xchg
inc
or
pop
adc
add
xchg
pushf
shlb
pop
push
je
sbb
mov
bound
cmp
jb
add
inc
or
scas
dec
mov
rorb
lret
xor
hlt
jnp
add
mov
dec
add
paddusw
add
sub
xbegin
add
jo
push
aaa
pop
pop
push
hlt
sbb
aas
dec
adc
cmp
cli
bound
add
sti
xchg
jp
push
movsl
inc
in
stos
and
dec
cld
call
lret
mov
scas
add
xchg
addl
stos
outsb
call
sbb
mov
nop
push
xor
add
clc
sub
movsb
sbb
fcompl
pop
popf
sub
add
mov
stc
data16
add
sti
fcomip
pusha
mov
stos
add
jno,pt
add
mov
mov
fcoms
jo
inc
ljmp
add
insb
xlat
mov
xor
mov
push
and
mov
add
jecxz
in
xor
roll
add
jo
mov
push
fadd
mov
test
jno
fs
add
out
clc
dec
adc
sub
hlt
push
outsl
push
rolb
add
mov
add
jns
add
divb
roll
aad
sbb
push
pop
cmp
aam
pop
flds
push
jns
pusha
mov
mov
add
push
sub
cmp
bound
mov
add
ret
pop
pop
lock
push
push
movsl
push
test
add
imul
fidivrl
cmc
add
stos
std
lds
or
or
push
sbb
push
jne
jle
aaa
and
xor
sbb
add
mov
int3
or
sub
xchg
imul
add
lret
cmp
xchg
add
push
mov
adc
mov
in
add
add
jbe
out
lds
sub
mov
add
jne
rolb
push
ljmp
and
js
aad
loopne
add
lret
out
in
push
decl
xchg
pop
xlat
xor
cmp
std
insb
jecxz
xchg
ja
sarb
cmp
mov
jbe
ret
pusha
dec
movsb
add
iret
cli
mov
sub
push
inc
mov
loope
std
mov
dec
sub
enter
es
sbb
add
rcrb
pcmpeqw
fstp
xorb
cmp
pop
xor
and
stos
mov
pop
push
popf
frstor
jns
add
sub
in
inc
pusha
dec
cmp
or
adc
mov
leave
call
sub
out
mov
sbb
adc
mov
add
int3
pop
addr16
pop
rolb
pop
sbb
dec
enter
pop
pusha
add
mov
flds
xchg
xchg
and
addr16
mov
out
test
jnp
inc
jb
adcb
outsb
lret
jle
js
add
in
arpl
xor
pushf
stos
ret
mov
pop
mov
enter
xchg
mov
add
adc
mov
loope
add
xchg
shrb
icebp
dec
lea
dec
insb
loopne
repnz
and
sahf
add
pushf
pop
xchg
or
xor
add
stc
in
rolb
popf
mov
imul
ret
mov
and
ret
out
sub
xor
repz
lods
push
lret
addl
or
jge
pop
sar
out
push
push
loopne
sbb
jo
repnz
imull
dec
mov
movsl
stc
inc
xor
mov
lock
add
lcall
add
daa
push
cmp
enter
or
pop
push
test
and
cwtl
pop
jge
pop
test
clc
or
call
dec
or
xchg
mov
in
fidivs
add
or
mov
add
aas
lods
pop
adc
in
cmp
outsb
sub
cmc
cmp
push
dec
xchg
add
xlat
lods
add
sbbl
std
add
jmp
jge
pusha
inc
adc
fidivs
jb
add
add
cmp
dec
add
push
fs
lock
add
sub
daa
or
mov
cmp
pop
ss
adc
lods
cltd
lods
add
dec
dec
outsb
stos
add
add
inc
xchg
das
jbe
out
sub
in
mov
jg
imul
cmp
pusha
add
mov
and
xor
add
popa
ja
mov
pushf
or
loop
sub
xchg
xchg
mov
mov
lods
aam
ret
test
xchg
add
adc
dec
push
enter
test
lock
or
rorb
pop
mov
cwtl
jge
js
nop
add
icebp
cwtl
pop
pop
outsl
adc
inc
call
push
jge
loopne
sub
pushf
cmp
sub
imul
pop
ret
roll
xchg
cwtl
mov
xlat
shlb
mov
lret
pusha
sahf
loopne
hlt
clc
int3
add
jmp
adc
nop
xchg
shll
jnp
add
mov
mov
add
clc
in
decl
daa
xor
jno
sbb
cmc
add
add
adc
decl
pop
nop
add
dec
mov
add
fs
add
mov
xchg
nop
jbe
jne
add
mov
mov
sub
mov
sbb
xchg
cmp
inc
inc
cld
xor
lods
add
jnp
addr16
jecxz
mov
xor
xor
mov
in
outsl
push
das
mov
sub
adc
mov
lock
add
cs
mov
loopne
inc
in
dec
xlat
dec
add
sbb
xchg
icebp
pop
mov
push
shlb
sbb
sarl
xchg
out
mov
adc
sbb
test
dec
loop
idiv
or
enter
mov
add
mov
out
lds
add
dec
sbb
les
pusha
pop
or
fcomps
lock
add
sbb
imul
and
push
in
jno
bound
movsl
jnp
pop
add
push
fmull
fcmovb
mov
imul
adc
lods
sbb
push
clc
jno
in
jecxz
sbb
lret
fs
fidivrs
ja
dec
int
les
ret
iret
dec
fnstenv
test
clc
js
sub
loopne
mull
or
push
or
mov
cmp
jae
add
xor
xor
cs
pop
and
dec
add
adc
inc
dec
in
test
cmpb
sbb
sbb
pop
add
aam
adc
test
dec
push
dec
fdivrp
mov
mov
push
sahf
rolb
push
push
addr16
lret
jbe
popf
sub
jp
add
cmp
out
int3
pop
outsl
lahf
js
outsb
in
jmp
sub
int3
push
pop
mov
jecxz
push
arpl
push
ret
and
dec
dec
lret
into
loop
mov
cwtl
cld
jb
pop
jne
sub
mov
add
mov
sub
stos
jl
add
sbb
es
jo
add
rcrb
add
int
aas
add
push
cmp
mov
test
adc
mov
les
pop
aad
add
leave
pop
jl
ds
add
movsb
roll
xor
xchg
add
pop
jg
jno
mov
add
ret
add
push
jecxz
ljmp
lock
push
push
adc
fdivr
add
mov
incb
add
sti
jp
add
inc
mov
sbb
out
jae
test
fs
dec
lcall
or
mov
add
loop
in
mov
andl
sbb
pop
in
lock
dec
insb
mov
xor
inc
pop
test
xchg
mov
nop
jns
push
xor
aas
and
dec
sbb
add
and
jbe
and
dec
cmp
inc
jg
sti
cmpsb
out
in
add
shrl
push
xor
pop
lock
dec
push
add
pop
inc
push
sbb
out
addr16
pop
xorb
incl
push
out
mov
imul
psubusw
xchg
adc
fsubrs
add
and
sbb
inc
add
jns
jbe
add
inc
xor
xchg
sbb
out
add
sbb
push
pusha
popf
cwtl
sub
mov
cmpsl
pop
dec
pop
aas
popa
loope
mov
mov
xchg
add
cltd
fsubs
push
adc
adc
ss
icebp
outsb
dec
push
loopne
and
xchg
add
pop
bound
add
mov
adc
push
sbb
pusha
dec
or
mov
in
sbb
ror
cmp
xlat
lcall
add
adcl
gs
ja
pop
stos
mov
les
cmp
adc
test
pop
inc
cmp
insb
xor
scas
stos
imul
les
push
stos
pop
outsb
and
add
sub
icebp
mov
shlb
mov
adc
jbe
enter
push
xchg
adc
push
sbb
inc
cmpsl
add
jmp
add
xchg
cmp
mov
pop
dec
call
add
mov
inc
lods
jne
pushw
pushf
scas
push
inc
pop
out
ret
cwtl
cmc
dec
add
or
or
push
cmpsl
int
jg
rolb
ss
and
aam
pusha
lahf
sub
jg
imul
jp
add
fisubs
mov
push
fdivrs
jge
adc
add
bswap
mov
cmp
and
sbb
je
sub
add
push
jp
out
popf
ja
add
mov
inc
movl
inc
or
xchg
or
xor
cmpsb
leave
rclb
dec
jl
add
pop
shl
repnz
inc
add
mov
sahf
jl
cli
in
pop
xchg
sbb
insl
xor
daa
pusha
je
mov
fcoms
add
or
push
xor
clc
mov
sahf
inc
ljmp
xlat
and
inc
mov
add
jne
iret
repnz
je
stos
add
mov
cmp
shlb
xor
arpl
jg
daa
cmp
imul
pop
pop
mov
popa
outsb
mov
lods
sbb
fstpt
inc
mov
pop
xchg
clc
jp
add
fdivrl
enter
pop
das
je
add
inc
insl
outsl
push
pop
add
subb
xor
pusha
stc
adc
test
ss
clc
jae
mov
mov
fnsave
pushf
in
mov
outsl
sahf
ds
dec
cli
inc
cmp
aaa
jo
xchg
add
stos
sub
jp
arpl
repz
add
xchg
pop
mov
cmp
pop
mov
mov
add
push
sbb
mov
adc
pxor
data16
and
mov
dec
imul
loopne
xchg
sbb
cmp
cmp
mov
sti
or
mov
sub
cmp
jge
and
lret
or
push
sub
scas
xchg
loopne
pop
cltd
syscall
mov
jns
cmp
es
es
imul
add
pop
push
add
inc
sub
adcl
jnp
mov
inc
jns
stos
mov
out
fprem1
inc
jecxz
test
inc
push
xor
sbb
push
sub
inc
add
lret
dec
xchg
in
inc
lcall
iret
enter
jmp
imul
pop
inc
add
loop
sub
cmp
inc
je
icebp
sbb
add
jo
aad
mov
sbb
jmp
xor
inc
xor
push
outsb
pop
jg
push
in
push
sub
arpl
push
stos
ror
jno
ljmp
add
outsb
push
mov
sub
int
xchg
pop
scas
sbb
push
data16
mov
scas
clc
imul
jecxz
adc
add
push
sub
push
leave
add
mov
mov
stos
mov
sbb
add
xchg
shlb
add
jle
popf
or
adc
dec
imul
flds
mov
shrb
loop
mov
dec
test
adc
xor
mov
pusha
test
cwtl
sub
cwtl
pop
cmp
popw
add
mov
jne
cmp
xchg
mov
outsl
dec
cmp
test
dec
lods
add
and
ret
addr16
inc
jno
outsb
mov
push
jbe
je
aad
add
pop
hlt
lcall
fdivrl
xlat
cmp
mov
pusha
fiaddl
cwtl
and
adc
xor
sub
aaa
push
test
dec
loope
movsb
scas
mov
push
push
mov
dec
jns
sarb
rorb
gs
and
ljmp
mov
pop
test
push
mov
fisubrs
add
adc
sbb
dec
dec
jl
add
punpcklbw
out
pushf
test
add
lret
fstpl
inc
push
fcmovnu
in
xor
pusha
hlt
pop
add
sub
add
dec
push
cmp
mov
push
pop
int3
push
clc
cmp
movsl
cs
cmp
pop
pop
test
mov
dec
inc
add
arpl
inc
mov
add
add
xchg
push
in
loope
add
xor
bnd
jnp
add
test
adc
mov
sbb
js
shl
test
gs
lods
jbe
adc
repz
lds
pusha
pop
xchg
dec
out
rclb
ficomps
data16
sbb
adc
cmp
sbb
add
add
push
stc
pusha
arpl
xor
fidivrl
and
mov
or
mov
dec
add
xor
test
sub
xchg
ds
test
fs
push
enter
loopne
in
push
lret
push
add
imul
pop
cmp
iret
fdivl
push
sbb
ret
and
xlat
adc
xor
fcompp
mov
enter
ss
mov
add
lcall
rcl
lahf
add
mov
add
push
insl
add
pushl
mov
jmp
pushf
outsl
and
add
jo
add
js
das
lods
lret
push
mov
sub
loop
adc
lahf
jecxz
out
pop
cmp
loop
jb
stos
jl
add
mov
movsb
mov
jns
add
xor
jecxz
or
jge
mov
add
int3
aad
pop
sub
xorb
jmp
sub
dec
dec
xor
dec
mov
xor
mov
fs
test
add
and
jl
jns
mov
lahf
or
cld
syscall
or
push
or
out
lds
dec
jno
and
pop
sbb
lret
aas
sar
jl
bound
mov
loop
loopne
add
shl
test
jp
enter
lds
daa
loope
push
add
aad
sbbl
inc
mov
push
sbb
or
jecxz
cmc
or
and
cmp
int
dec
repnz
es
mov
cmp
movsb
add
outsb
aaa
popf
pop
int
and
cltd
scas
movsl
xchg
push
pop
sbb
mov
andb
dec
xchg
int3
and
aaa
mov
loopne
cli
push
clc
add
inc
xchg
xchg
add
in
imul
addl
dec
xor
add
cmp
inc
pop
xchg
sbb
nop
xor
inc
xchg
add
jl
pop
cmc
push
stc
sbbl
dec
mov
mov
sbb
in
xchg
es
roll
mov
jns
sbb
movl
lods
imul
cmpsl
sti
daa
out
test
mov
rorb
andb
mov
std
push
mov
sub
xchg
jo
xchg
mov
xor
add
sub
cltd
add
pushf
jns
mov
cwtl
ss
int3
cmc
stos
add
pop
cmp
or
add
push
repnz
pusha
sub
scas
jo
add
mov
add
in
ds
scas
test
xor
neg
shll
push
cmp
cmp
cmp
push
adcb
das
add
pop
loop
adc
in
movsb
add
mov
mov
hlt
push
add
jno
pop
pop
add
xchg
xorb
xor
popa
loope
je
add
and
insb
cmpps
add
pop
cmp
lret
pushf
nop
pop
add
test
sbbl
pop
imul
sbb
scas
mov
fldt
aad
aam
in
sbb
in
sub
cmp
es
in
jl
pop
lds
xor
xchg
data16
add
mov
sub
mov
leave
addb
cmp
inc
xchg
lods
jle
jecxz
arpl
pop
push
in
add
mov
leave
pop
mov
mov
jns
loope
add
leave
in
inc
adc
mov
movsb
loopne
jl
xor
or
int3
aas
mov
jo
xchg
test
mov
or
les
xor
or
dec
fidivrl
idivl
xchg
fcomps
add
mov
outsl
xchg
sub
push
aam
lods
xorl
pusha
int
shlb
pcmpgtw
inc
daa
cmp
add
xlat
testb
inc
mov
adc
pop
add
fistpl
pushf
mov
loop
orb
push
icebp
pop
cmp
shrb
repz
pop
fadd
xor
lcall
stc
enter
jnp
add
mov
dec
loope
jo
flds
add
jns
aas
sbb
ljmp
xchg
mov
cmc
lret
out
iret
outsl
push
jle
add
push
sub
mov
mov
cmp
outsb
mov
sub
adc
dec
ss
xor
or
aaa
addl
fadds
adc
shr
data16
mov
sub
data16
pop
add
xor
addl
popa
push
and
cmp
cli
sub
add
orl
movsb
fsub
dec
shrb
fldt
jb
and
in
rolb
cmp
dec
dec
test
frstor
aas
jne
sar
add
dec
or
mov
jbe
cli
mov
pop
and
int3
cld
adc
push
and
and
stc
sarb
mov
adc
sub
sub
test
sbb
xchg
ljmp
enter
jne
dec
in
cld
jno
dec
xchg
sub
mov
pop
jg
les
add
ja
push
push
test
loopne
add
popf
mov
lods
pop
incl
in
push
and
sbb
mov
pop
sub
inc
add
push
xchg
jbe
sub
push
add
jo
cmp
or
add
dec
arpl
pop
or
lret
dec
dec
pop
add
mov
xor
orb
pop
shrl
jo
dec
insb
lods
loopne
cmp
adc
pushf
jae
mov
add
test
stc
cmp
jmp
pop
cs
adc
iret
push
add
cmpsl
mov
xor
dec
aas
in
sbb
lods
mov
or
mov
push
xlat
mov
test
in
addl
inc
cmp
adc
mov
std
dec
xchg
testl
clc
push
push
jl
dec
sub
arpl
inc
fmulp
add
incb
xchg
adc
out
add
in
or
repnz
pop
in
hlt
mov
pop
sbb
add
xchg
inc
in
add
jo
cmp
bound
mov
jecxz
adc
mov
sub
adc
dec
into
add
hlt
xor
call
clc
test
shlb
add
mov
mov
jns
roll
cwtl
xor
inc
lods
ror
ret
mov
int3
cmp
cld
push
hlt
mov
mov
gs
insb
inc
addr16
fwait
add
xorb
test
pushf
mov
or
daa
roll
roll
aam
sbb
dec
and
addb
mov
and
fwait
dec
in
sub
sbb
insb
call
sbb
in
ss
xor
sbb
push
inc
loopne
dec
shlb
ss
jge
hlt
movsb
pop
lret
clc
push
les
mov
xor
mov
inc
pop
out
xor
inc
add
inc
les
mov
fld
xlat
mov
xor
lods
cmp
push
add
add
fsubs
lds
or
repnz
test
loopne
nop
outsb
adc
mov
mov
repz
mov
mov
cmpsb
add
add
pop
pop
imul
iret
cld
add
inc
lret
push
shrb
cltd
dec
enter
xchg
lods
sbb
pop
jbe
xor
sub
pop
xchg
add
mov
dec
out
js
adc
add
push
shr
mov
mov
scas
sub
xor
or
or
dec
mov
psubsw
mov
mov
mov
enter
mov
cmp
flds
insb
loop
call
das
inc
sub
push
or
and
or
cmp
arpl
aas
jle
pop
je
xchg
or
stos
push
add
sbb
pop
pop
sub
orb
adc
sahf
mov
xor
fisubrl
pop
in
inc
cli
lret
test
iret
mov
mov
rcrl
andl
mov
or
adc
mov
pop
testb
add
repnz
xlat
add
ljmp
and
in
adc
aas
mov
mov
mov
add
mov
inc
add
xchg
sub
pushf
in
cmp
add
fstpt
test
xchg
setb
pop
and
mov
pop
jo
out
mov
jae
xchg
add
cmc
lcall
or
scas
mov
jge
push
inc
adc
pop
je
lock
sti
mov
cltd
jno
mov
orl
bound
cld
add
test
sarb
and
xor
sub
sub
xor
push
or
lea
push
jns
shlb
nop
push
xor
icebp
inc
sahf
clc
out
add
clc
jne
aam
imulb
mov
and
jnp
push
jecxz
mov
rcll
jae
mov
xchg
pop
adc
add
inc
xchg
cs
fldcw
push
mov
and
add
into
push
sub
icebp
mov
or
fcomps
sbb
aam
and
sub
fsubr
outsl
pop
pusha
add
add
in
or
sbb
push
xchg
sub
add
jbe
jns
sbb
jno
xor
ds
pop
inc
xlat
add
dec
jmp
xchg
sub
xor
fs
and
and
and
xor
adc
adc
add
push
iret
cmc
imul
mov
nop
leave
mov
add
push
xchg
mov
lahf
aam
sbb
shl
xor
lret
push
int3
imul
add
mov
aam
stc
ret
jge
add
lret
dec
sub
or
sub
fdivrl
dec
xor
adc
nop
xchg
outsb
add
add
cmpsl
inc
jb
mov
pop
repz
push
inc
imul
push
clc
or
cmp
sub
mov
imul
xchg
dec
adc
aaa
pop
dec
or
xor
subl
scas
jo
and
js
inc
xor
cmp
adc
dec
add
push
lock
sub
mov
add
cmpsb
inc
outsl
sbb
cltd
in
add
aas
iret
jb
and
sbb
mov
addr16
gs
and
or
pop
inc
std
push
xchg
pop
xchg
mov
or
imul
adc
push
and
push
mov
pusha
popf
pop
add
add
mov
fcmovb
dec
insl
test
push
das
add
lods
inc
push
shll
addb
mov
or
repnz
movsl
xchg
fistpll
ss
loopne
xor
sub
sub
adc
cmp
xor
fstps
testl
stos
aad
int3
add
addr16
aaa
daa
xor
add
lods
xor
xchg
test
ror
mov
sub
lods
jno
fsub
dec
ja
add
fwait
movsb
outsb
inc
cld
lods
into
sbb
scas
or
mov
lods
cmp
add
shlb
imul
pop
add
pop
test
xlat
test
add
dec
sbb
bound
in
pop
jg
xor
xor
pop
cmp
and
int3
jecxz
xchg
test
lods
testb
push
jnp
push
lods
dec
lods
mov
and
aad
decl
sub
xchg
loope
push
mov
add
mov
clc
pop
sub
out
add
outsl
jmp
mov
and
or
rcl
sar
in
sub
dec
cli
mov
or
mov
push
push
pop
jl
inc
in
cwtl
test
repnz
out
dec
and
fldl
lcall
push
pop
push
mov
adc
mov
sbb
push
fistl
cmp
inc
add
jp
std
mov
fxch
aas
mov
ds
pop
lcall
lret
fnstsw
dec
or
ret
add
mov
sysenter
push
push
sbb
add
push
nop
inc
cwtl
pop
push
and
dec
sbb
cli
add
aaa
jnp
int3
lea
into
add
sbb
scas
xor
mov
fsubrl
push
mov
push
rorl
outsb
add
test
std
and
add
icebp
mov
pushf
jo
jbe
push
out
jo
xor
adc
add
popf
dec
call
ljmp
jno
add
das
jno
sub
fdivs
js
adc
or
mov
xor
int
sub
fmuls
or
and
cmp
int3
mov
push
pop
xchg
out
mov
adc
nop
mov
mov
sti
adc
or
adc
mov
jae
clc
stos
sbb
pop
add
fnstcw
add
xlat
incl
aaa
jge
push
das
pusha
mov
outsb
bound
cld
movsb
add
sub
lret
dec
imul
lods
cmp
mov
fs
inc
rorb
push
and
xor
mov
leave
add
movsl
push
icebp
xchg
sbb
push
add
sbb
arpl
push
int
mov
add
xchg
xchg
jnp
or
test
int3
and
in
fadd
insl
sbb
adc
dec
hlt
sub
repnz
nop
push
pop
rorb
imul
test
sbb
gs
movb
or
sti
jl
loopne
push
les
lods
test
cli
mov
and
mov
mov
push
pop
jnp
rclb
je
and
pop
xchg
sbb
lods
scas
jo
shr
les
pop
jb
shrl
add
jae
std
and
lret
jo
push
shl
into
mov
mov
lock
mov
mov
mov
or
xor
lcall
cmp
inc
sub
cmp
imulb
inc
lods
addb
xchg
add
shrb
test
add
push
cli
jnp
je
add
mov
add
outsb
jo
cs
lret
jp
mov
aas
nop
jl
lds
or
and
add
pop
push
mov
mov
push
cmpl
test
lea
add
mov
ja
lods
add
xor
pop
and
add
inc
push
mov
ret
dec
cwtl
icebp
mov
and
add
jecxz
xor
xchg
shll
and
sbb
fildll
or
jns
clc
sub
inc
sbb
and
fnstcw
mov
into
inc
mov
xor
push
add
mov
mov
scas
mov
ja
mov
mov
test
js
mov
mov
push
xchg
enter
or
jae
xchg
cmp
xor
jns
push
fs
and
mov
mov
jae
mov
lret
push
js
dec
push
dec
pushl
mov
sbb
test
sahf
sti
jnp
stos
ljmp
jl
jge
sub
and
popl
fstl
dec
push
jl
inc
add
hlt
cmpsl
jp
lea
std
xor
popa
adc
jmp
jnp
xchg
adc
sbb
fs
cli
add
fstpl
jne
push
pushf
cmp
cmp
outsl
add
addr16
insl
pusha
jo
rorb
add
aas
mov
sub
add
loop
in
cmp
pop
add
push
idivl
cmp
fmul
mov
or
mov
push
mov
js
jae
xchg
cmpsl
push
out
adc
add
jl
cmp
pop
stos
mov
mov
and
stos
xchg
mul
loop
add
inc
shrb
imul
cmp
sbb
mov
add
mov
aaa
jmp
ret
push
or
xchg
out
add
xor
add
sbb
and
unpckhps
ror
ror
mov
add
dec
ds
inc
fdivr
fldl
sub
jecxz
jg
xchg
sub
add
repnz
icebp
pusha
mov
aam
add
add
popa
add
push
in
push
mov
dec
or
xor
mov
add
pop
fcom
push
das
lods
fiadds
repnz
sub
out
andl
dec
ljmp
adc
pop
sub
movsl
xor
sbb
fstpl
cs
out
mov
jnp
add
aam
jns
mov
xlat
jmp
sbbl
pop
loopne,pt
hlt
aaa
cmp
mov
pop
cwtl
out
add
xchg
push
mov
adc
pop
test
push
mov
jne
add
or
push
jns
add
jmp
mov
test
ja
cs
fldl
cmpsl
add
mov
sarl
push
ret
mov
fsubrl
aam
xor
push
xor
push
ljmp
push
xor
xchg
add
mov
pusha
lock
sbb
pushf
sub
add
jle
mov
cmpsl
cld
hlt
sub
out
fidivrs
add
fcomip
js
repnz
jae
sbb
push
jns
enter
movd
inc
sahf
ljmp
adc
sbb
xor
add
int3
cmp
inc
or
es
jmp
cmp
sub
test
nop
dec
jo
fdivrl
mov
jmp
aam
imul
in
push
jo
adc
ljmp
jb
insb
into
add
movsb
clc
sahf
mov
int
cmp
push
lds
add
popa
jg
sahf
clc
cmp
add
cmpsl
and
stos
push
push
arpl
inc
std
add
mov
pop
push
inc
cmpsb
push
jno
outsb
adc
and
xchg
pop
or
add
cltd
xor
push
fistl
inc
or
sbbb
cwtl
js
mov
sbb
cld
mov
lds
inc
inc
mov
icebp
adc
or
clc
mov
dec
icebp
push
insl
ja
sbb
outsb
cs
or
test
rcrl
jns
mov
mov
aad
push
add
xorb
cld
add
xor
push
das
jecxz
pop
pop
dec
popf
add
rorb
xlat
push
imul
jbe
push
stc
mov
add
aad
pop
mov
pushf
pop
test
lock
cmp
insl
add
jo
sub
test
xor
popf
clc
and
leave
pop
loopne
andl
aad
and
sub
pop
mov
outsl
stos
add
sbb
pop
sub
sub
adc
add
test
jbe
lahf
imul
pop
inc
faddp
jno
mov
stos
mov
stc
ds
repz
or
mov
iret
add
xchg
out
cli
lds
scas
js
push
sbb
clc
sub
pushf
out
jns
add
fs
outsb
dec
lock
call
cmp
les
mov
dec
fistps
mov
add
xchg
lea
add
add
aam
test
mov
loop
lret
or
add
fadds
rol
lcallw
and
cmpsl
mov
nop
add
pop
mov
sub
sti
loop
popf
flds
jg
jge
add
sub
shl
ja
pop
dec
jge
sub
in
ret
hlt
ret
mov
sub
xchg
inc
adc
xor
test
jae
outsb
sahf
loopne
loopne
flds
adc
xchg
movsb
jb
mov
int
add
xchg
clc
icebp
dec
adc
mov
dec
ss
mov
stos
scas
outsl
pop
adc
test
out
cmp
dec
mov
dec
lahf
aam
inc
jecxz
mov
mov
fwait
add
nop
add
push
mov
xlat
add
iret
nop
in
adc
mov
arpl
add
mov
or
int3
pop
mov
repz
pop
fadds
addl
jle
mov
or
stos
and
xorl
rclb
cld
jae
jp
filds
cmp
mov
outsb
mov
dec
sub
pmuludq
add
filds
sub
cmp
sbb
jb
add
mov
pop
jb
sbb
jae
mov
cltd
out
xlat
mov
adc
mov
ret
add
insl
xchg
movsl
jns
sbb
repnz
rolb
outsb
adcl
and
push
subb
addb
pop
stc
mov
add
jo
push
add
cmp
mov
test
test
pop
and
mov
xchg
add
jge
sub
in
add
adc
dec
add
mov
test
xor
mov
call
jle
add
cmp
mov
iret
sti
add
pop
ret
fstpt
lahf
mov
dec
add
jp
and
add
rclb
xchg
jnp
add
sarl
fdivs
push
cmp
xchg
negb
pop
fstps
in
cld
sub
push
mulb
adc
add
lods
and
stos
sub
cli
mov
addl
push
add
shll
ror
adc
and
into
orb
push
shll
cmp
or
jge
dec
cmpsl
aam
scas
pop
stc
xchg
add
clc
cs
and
xchg
jg
testb
rcrl
flds
out
inc
lahf
ret
mov
cmp
icebp
call
inc
and
addr16
sub
filds
xchg
jo
add
mov
pop
cmp
jns
mov
push
inc
shlb
add
pop
movsb
add
pop
mov
jmp
inc
and
add
mov
imul
xor
call
dec
movsb
jno
fisubrs
add
cmpb
add
sbb
mov
dec
dec
nop
and
cltd
xacquire
add
xlat
mov
aas
pop
mov
outsb
pop
xor
stos
jg
std
lock
inc
add
mov
sub
test
cld
les
cmpsl
pop
or
push
movsb
mov
fwait
stos
mov
xadd
pop
ret
faddl
xorb
sbb
jmp
mov
fnclex
push
leave
cmp
xchg
mov
cmc
mov
mov
aaa
jne
ret
sub
pusha
xchg
adc
jg
pop
ljmp
cmp
call
mov
lret
push
shlb
inc
in
xchg
daa
fisubs
add
in
jge
add
inc
imul
mov
sub
sub
add
adc
xchg
mov
aaa
add
pop
sub
cltd
movsl
jg
add
sbb
pop
mov
xor
das
jg
negl
xchg
add
test
mov
add
out
aam
mov
and
mov
adc
mov
daa
shrb
roll
jg
aad
ss
test
add
add
enter
jne
jge
push
xorl
bound
inc
jl
arpl
jle
add
or
scas
or
inc
or
push
loope
adc
lds
cmpsl
fdivp
inc
loope
sub
pusha
add
add
sbb
add
sub
mov
sbb
or
push
add
jnp
jne
or
lret
xchg
inc
jge
je
cli
or
imul
and
mov
mov
cmp
rolb
lea
fildll
mov
test
dec
int3
cs
add
pop
movsb
js
xor
xchg
test
jno
pop
and
pop
clc
add
sbb
add
inc
stos
mov
fiaddl
jo
cld
orl
and
add
out
xor
dec
adc
pushf
pop
cmp
bound
in
inc
sbb
fs
jnp
sub
stc
xor
or
rcl
mov
movsl
jne
add
into
lcall
shll
push
mov
add
pop
pop
jp
sti
adc
dec
cwtl
and
fmull
add
inc
ds
jns
pop
sbb
inc
ljmp
repz
daa
es
inc
psubw
jo
or
lock
ljmp
mov
push
xor
push
sbb
aam
mov
loopne
lock
mov
and
scas
lods
add
fninit
mov
roll
int3
add
fwait
xchg
jo
or
insl
cmpsl
mov
lahf
pop
int3
dec
rol
scas
pusha
push
hlt
ljmp
jp
add
sbb
adc
test
scas
or
add
imul
jno
dec
add
cwtl
lock
cld
pop
ds
inc
lods
xor
push
push
sbb
xchg
xor
cmp
sub
arpl
lods
out
lods
sbb
inc
add
std
xlat
ret
imul
push
xor
push
cmp
clc
lock
fisubs
call
xchg
add
jecxz
mov
jl
push
js
jmp
ljmp
bound
lds
adc
insl
pop
add
push
fs
sub
dec
popa
cmp
jmp
cmp
loopne
ret
nop
sti
pop
lret
loope
xor
test
mov
mov
sub
test
loopne
cmp
loopne
add
xchg
add
packssdw
mov
push
adcb
mov
mov
jbe
and
push
or
leave
mov
repnz
addb
pushf
adc
aad
inc
jle
or
add
cmp
cltd
sbb
jecxz
add
lahf
jno
movsl
lret
psubsw
inc
data16
pop
je
ficomps
mov
and
mov
mov
insb
push
lock
flds
and
lea
push
jecxz
fidivl
pusha
cmpsl
add
push
subb
lea
orl
stos
pop
stc
les
dec
cld
add
and
add
jnp
addr16
push
stos
ds
pop
sarb
fsubrs
lcall
cmpsl
add
jns
or
pop
arpl
imul
pusha
dec
rclb
aad
roll
add
mov
out
daa
sbb
pop
fs
add
sub
jmp
or
rorb
and
imul
dec
int3
ja
add
lcall
fidivrs
test
dec
jmp
ror
fdivr
jecxz
mov
aaa
test
popa
shll
lret
ss
pop
fisubl
pop
cld
inc
fiadds
mov
stc
mov
mov
cmc
ds
add
addr16
out
mov
add
cmp
add
leave
xchg
xor
scas
adc
scas
movsl
xchg
jge
xchg
and
jle
add
repnz
and
jo
inc
sti
mov
add
call
fcoms
cmp
std
or
pop
iret
xor
mov
test
lcall
jle
mov
mov
mov
nop
cmp
adc
cwtl
fwait
and
add
int
clc
dec
jmp
cmp
mov
inc
add
and
inc
xchg
and
mov
add
test
sub
add
adc
cmp
xchg
imul
ficoms
pop
sbb
es
adc
and
add
pop
push
cwtl
jmp
mov
daa
lods
scas
data16
cli
sub
xchg
xchg
je
fmull
pop
fs
mov
insl
pusha
shl
mov
add
cld
mov
cmp
add
aad
dec
fildl
add
cs
pop
mov
jae
pop
cmpsb
stos
add
sub
lods
add
fchs
push
in
loop
push
pop
pop
xor
mov
cltd
loopne
mov
add
or
xlat
push
and
inc
neg
sub
pop
pop
mov
push
pop
sarb
fidivrs
mov
push
sbb
inc
and
add
pop
test
scas
jmp
and
push
lods
lea
insl
push
out
sub
jne
mov
lods
bound
js
inc
add
jo
ficompl
mov
into
inc
dec
dec
ds
add
xor
fcomp
test
add
xchg
cmpb
pushf
ds
add
adc
jmp
and
addr16
mov
hlt
outsl
mov
inc
mov
arpl
enter
add
xor
or
clc
mov
cld
and
loope
ret
pop
insl
or
jg
mov
pop
inc
xchg
pusha
mov
jl
stos
add
in
jae
sbb
push
prefetch
sub
mov
sbb
and
mov
lds
subb
push
mov
xor
shll
sbb
jo
insl
jp
cmp
test
je
out
adc
into
mov
fstl
inc
push
test
test
add
jne
and
add
jecxz
idiv
push
stos
mov
lcall
xchg
cltd
dec
repz
stos
cmpb
stc
cli
xor
pop
jl
xchg
fidivrs
add
mov
sbb
mov
cli
sbb
call
scas
sti
inc
add
mov
mov
mov
and
mov
inc
or
add
mov
adc
xor
xchg
adc
popa
das
push
mov
aas
and
add
jnp
and
pop
stos
clc
clc
add
decl
aad
pop
cmp
and
or
xor
xchg
imul
sub
sbb
sbb
jne
ja
lar
xor
cmp
shlb
sbb
lock
xor
fisttps
mov
push
test
mov
rcr
xor
rcrl
or
lea
jne
loopne
cmp
out
and
add
xchg
jg
xor
mov
out
inc
add
cmp
jns
pop
adc
out
aam
add
xor
call
in
add
dec
xchg
hlt
jne
dec
add
out
sarl
and
or
sub
add
rorb
sub
daa
push
mov
mov
xchg
xchg
fists
mov
sbb
cmp
jo
sqrtps
pop
push
pushf
adc
mov
jge
mov
xor
and
test
enter
lret
dec
cwtl
adc
out
loopne
add
pop
stos
push
aas
sbb
inc
xorb
dec
out
add
push
cmp
mov
mov
aad
mov
cmp
sbb
or
xor
adc
jne
add
and
into
add
ja
arpl
lret
inc
mov
in
push
ljmp
in
mov
add
jne
mov
mov
in
jns
repnz
aaa
pop
pop
add
pusha
out
mov
add
xchg
fucomip
jnp
repz
in
lret
xchg
and
add
or
dec
cwtl
leave
jg
add
sub
test
cwtl
fsts
pop
mov
fcompl
sbb
addr16
pusha
mov
sbb
gs
inc
mov
cld
mov
lea
hlt
adc
ret
add
imul
std
subb
cmp
xchg
in
add
call
pushf
pop
push
mov
sti
in
out
add
outsb
cmp
add
xchg
cwtl
mov
mov
jecxz
add
sub
pop
in
into
sar
mov
add
push
outsb
adc
or
mov
pop
add
pop
push
inc
or
out
mov
hlt
das
test
add
dec
dec
gs
icebp
cmc
mov
add
sti
pop
addb
add
testl
shl
inc
add
bsr
and
fisttpll
add
xor
push
add
or
xlat
push
mov
add
aaa
xor
jecxz
fiaddl
add
sub
test
cmc
orl
adc
out
sbb
pop
sub
mov
add
mov
pusha
ret
fdivrs
movsl
pop
stos
into
add
pop
out
shll
fisubrs
outsb
mull
sbb
add
js
xchg
pop
sbbl
cmp
add
or
inc
dec
aaa
cmpsb
add
xchg
hlt
jp
xor
mov
jnp
or
cmp
mov
inc
push
scas
mov
xchg
jmp
pop
cmp
enter
icebp
xor
incb
stos
adc
fwait
rcr
push
xchg
xchg
std
xchg
jno
loop
pusha
cltd
sbb
je
pop
inc
adc
cli
pushf
xor
shl
jo
negb
test
inc
mov
aas
jae
add
jl
filds
mov
push
inc
cs
add
lret
nop
push
pop
arpl
sahf
lret
stos
add
and
adc
push
or
pop
das
jne
add
add
lock
out
pop
pop
jecxz
scas
lret
cmp
pusha
push
xchg
enter
mov
jae
or
lds
inc
je
push
add
mov
add
lods
cmp
mov
in
cwtl
jp
add
repz
ret
and
nop
add
inc
sub
mov
dec
push
xorb
push
outsb
mov
ja
jno
add
test
jnp
ret
int
mov
popa
xchg
test
add
jns
add
or
mull
or
or
jg
adc
rolb
fimull
mov
enter
in
dec
sub
push
aam
out
daa
mov
loopne
stos
adc
add
xchg
movsl
pop
jge
incb
cmpsl
adc
flds
pop
xchg
ljmp
inc
popf
hlt
ret
pop
addr16
mov
add
pusha
test
jns,pn
add
sarl
cmp
add
xchg
test
lods
and
jo
pop
fnstsw
push
jge
popf
push
cmp
or
lcall
adc
add
mov
icebp
cmc
test
mov
dec
mov
mov
inc
mov
add
or
dec
jmp
jo
dec
dec
das
mov
mov
dec
adc
jbe
mov
pop
xor
rclb
xchg
in
mov
popa
add
fnstenv
add
fwait
mov
push
sbb
pop
xchg
shll
sahf
add
xor
pop
fimull
xor
pop
lds
pop
fs
ds
mov
and
jle
cmp
inc
add
test
sub
and
add
mov
jl
ss
imul
sub
mov
inc
cmp
adc
jl
push
xor
push
add
xor
movsl
cmpsl
out
stc
cmpb
fisubl
dec
add
mov
aas
inc
outsl
leave
sbb
scas
dec
mov
aad
fsubr
enter
add
nop
rolb
xor
push
add
push
jg
nop
sub
cmp
daa
lcall
and
int
cmp
add
sbb
fcomp
inc
adc
testb
mov
add
rorb
shlb
loopne
lock
add
int
pop
mov
es
stos
loopne
iret
cmc
fs
pop
jno
rcrl
outsb
xor
add
dec
lret
lea
push
in
inc
mov
data16
test
lds
pop
xchg
add
lahf
xor
scas
andb
popf
test
fidivrs
inc
loop
adc
scas
xorl
cld
push
jns
addb
mov
jg
add
dec
add
lahf
shlb
stc
pushf
add
jbe
sbb
inc
inc
push
sub
mov
cmpsl
push
xchg
das
into
sbb
pop
lahf
add
or
loope
pop
popa
adc
sbb
repnz
push
sti
jb
add
in
jne
jns
dec
adc
dec
sub
sbb
jecxz
in
int
add
cmp
xlat
repz
js
ds
fs
fldl
arpl
movsl
jne
dec
hlt
pxor
loope
sub
and
adc
mov
push
jne
xchg
lds
pop
faddl
push
clc
sbb
jns
js
and
sub
add
test
in
adc
add
mov
aam
sti
add
pushf
sbb
cmc
mov
push
sbb
insl
inc
cmp
ffreep
aam
adc
repz
jge
jns
xor
in
xchg
pop
insb
pop
adc
xlat
sbb
testl
cwtl
mov
leave
push
call
push
mov
xlat
jmp
loopne
pop
add
sub
sbb
pop
call
xchg
push
rolb
mov
and
je
ljmp
stos
and
and
movsb
out
push
add
fldl
mov
in
mov
fsubrs
lret
add
mov
pop
mov
cmpsl
pop
inc
cmp
stos
pop
jg
add
xlat
xchg
push
push
enter
pop
ss
cmp
dec
mov
imul
jb
repnz
push
xchg
xchg
and
insl
pop
int
fldt
and
lock
ja
add
pushf
scas
dec
add
lcall
jle
add
shl
lods
push
mov
add
inc
jns
enter
js
sub
sub
aaa
add
lock
sti
add
jmp
rorl
loopne
xor
sbb
imul
or
lret
add
mov
and
repnz
stos
cmpsl
in
loopne
gs
movsl
jb
sbb
hlt
fdivl
push
inc
sbb
pusha
popa
stos
mov
lret
adc
adc
lock
push
leave
push
dec
mov
adcb
imul
test
push
sub
add
divb
jb
xchg
in
add
daa
inc
cwtl
mov
and
fwait
add
movnti
repz
jnp
jo
fistps
mov
test
fstl
int
and
sub
jmp
fadd
jp
mov
aas
inc
cmpsl
pop
repz
add
in
popa
hlt
adc
cmp
lods
fwait
cwtl
lock
jmp
and
add
dec
ret
insl
pop
pop
jns
add
adc
add
pop
insb
pusha
xor
mov
jne
mov
jo
out
lea
fwait
dec
call
adc
or
imul
sub
mov
jl
sub
aaa
add
test
sub
leave
or
cli
mov
inc
or
pushf
xor
inc
add
mov
jl
dec
lcall
jmp
add
add
pop
pop
js
and
and
faddl
add
sub
jae
jo
pop
sbb
cmp
adc
inc
fstpl
std
add
inc
sub
add
push
or
mov
fimull
inc
add
xor
jecxz
jg
add
shl
in
aam
add
xchg
xor
ret
call
jmp
les
add
sbb
xor
add
jge
mov
jecxz
pop
add
in
ficoms
rorb
aas
orl
inc
fisttps
test
or
nop
or
imul
js
add
cmp
sub
pop
repz
sbb
jge
add
sarl
test
stc
hlt
adc
or
dec
pusha
xor
add
jge
add
pop
inc
push
or
xchg
lock
rcrb
repz
mov
test
or
sub
push
popf
add
mov
test
cld
push
add
xchg
inc
sbb
call
cltd
jb
in
gs
add
cld
daa
enter
cmpsb
in
cmpb
add
dec
lods
jl
push
rcr
repz
pop
or
inc
jl
stc
popa
and
push
mov
cmp
pusha
inc
sub
test
adc
lret
subl
movsb
aaa
inc
enter
add
gs
sbb
push
rcll
add
ds
mov
loopew
pushf
mov
pusha
fsubs
xchg
pop
add
jo
push
das
add
xchg
psrlq
pushf
xor
add
rclb
add
leave
mov
dec
pop
push
test
outsb
in
push
xchg
iret
out
add
fstpt
cmp
jmp
hlt
gs
jmp
test
mov
cmp
pop
add
dec
mov
add
in
inc
mov
mov
add
and
jle
adc
cwtl
or
pop
lahf
arpl
inc
xchg
mov
add
mov
fmulp
les
add
jg
in
int3
ja
testl
push
push
cmp
and
add
jp
sbb
xor
dec
adc
xchg
pop
test
xchg
and
inc
addr16
imul
inc
nop
mov
std
hlt
xchg
imul
bound
jo
ja
add
mov
mov
rcrb
cmp
shrb
les
test
ja
sbb
mov
loop
and
jae
pushf
push
mov
scas
sbb
fimuls
sbb
outsl
pop
pop
roll
mov
in
aas
mov
inc
and
jno
lods
and
push
roll
mov
inc
or
add
lahf
mov
pop
sub
mov
int3
repnz
mov
insb
lcall
or
jg
dec
and
in
jo
ss
orb
fcomi
test
jp
mov
out
das
xor
lock
adc
add
int
cmpb
add
int3
ds
daa
sub
shl
pop
lock
mov
jecxz
rcrb
adc
mov
cli
sbbb
movsl
loop
jle
or
sarl
lea
jns
mov
add
ds
add
mov
add
add
cmp
xchg
push
push
jo
add
sbb
add
mov
sub
ds
ljmp
out
shrb
add
fiadds
and
or
sub
lock
inc
ret
pusha
cmp
mov
mov
jle
add
jmp
pop
sbb
sbb
add
cmp
add
pop
repz
aam
mov
inc
rcr
pop
lea
add
adc
mov
iret
inc
add
dec
mov
add
or
xlat
xorl
in
fwait
je
or
test
sbbb
xchg
jnp
add
aas
rol
adc
jge
cmp
cmp
stc
int
data16
sub
add
mov
faddl
jle
jg
cltd
adc
sub
mov
mov
xor
test
xlat
out
into
cmp
push
fcom
test
insb
xor
mov
or
sub
je
dec
js
add
sbb
aaa
add
push
bnd
es
add
sahf
dec
xor
loope
clc
adc
and
jg
out
ret
outsb
and
mov
add
xchg
push
mov
add
aam
add
inc
or
adc
inc
inc
pop
arpl
lock
fcmovbe
icebp
mov
xchg
popa
sub
xchg
add
loop
adc
hlt
test
mov
aaa
leave
xchg
aad
je
jl
mov
or
int
xchg
add
mov
mov
call
aad
jb
add
and
fldcw
and
mov
mov
add
mov
xchg
nop
lahf
xchg
push
cmc
dec
sub
inc
lods
or
add
add
jp
add
and
adc
cmpb
jns
stc
xor
xor
mov
lret
add
stos
cmpb
sarb
jo
outsl
inc
jnp
or
add
pop
mov
shlb
cmp
out
loope
pop
jo
jmp
loopne
stos
leave
sti
fs
test
mov
mov
sbb
les
fisubrs
imul
or
stos
mov
pop
ljmp
and
imul
in
ficoms
adc
cs
cld
ret
movsb
push
adc
dec
rcll
or
dec
test
nop
inc
pop
add
movsl
or
test
call
mov
add
arpl
adc
cmp
lods
sbb
and
xchg
and
jg
clc
loopne
xor
sar
xorb
inc
pop
aas
incb
add
mov
or
cmp
add
add
add
stc
pop
jg
adc
sahf
loopne
and
repnz
add
andl
add
jns
shr
xchg
mov
cs
mov
imul
or
xchg
xor
vpmacswd
add
add
lods
add
repnz
jmp
inc
cmp
hlt
jo
pop
aaa
mov
add
or
test
std
aas
repz
add
mov
and
adc
sbb
scas
and
xchg
popf
repnz
push
mov
dec
or
cmpsl
and
push
jecxz
test
pushf
push
test
jp
hlt
nop
outsb
xor
xchg
data16
sbb
add
pop
push
inc
fiadds
add
shll
xor
push
lds
mov
cmp
hlt
scas
add
pop
adc
pop
add
aas
inc
shll
sbb
aaa
cltd
add
testb
pmaxsw
add
ret
rcrb
imul
mov
sar
push
add
ret
mov
clc
pop
into
sbb
adc
sbb
pop
add
adc
push
lea
enter
loopne
xlat
bnd
pop
cmpsl
in
add
scas
or
cmp
cmp
fisubl
in
lahf
ss
jmp
push
pop
mov
repz
cmp
add
fcompl
pop
loop
add
jmp
scas
adc
or
addb
and
and
add
push
add
mov
sarb
add
ss
jnp
add
add
sbb
cmc
jle
pop
or
andl
and
test
ret
xchg
scas
lret
sub
xchg
cltd
mov
add
stos
loopne
pop
faddl
cmp
call
enter
push
push
insb
push
aam
pushf
in
add
mov
cld
mov
jl
add
push
xor
pop
repz
xchg
jno
pop
push
sub
adc
or
and
add
add
xor
dec
cmc
add
loop
roll
clc
sbb
mov
add
xor
mov
lret
bound
add
gs
inc
test
mov
adc
int3
add
push
pop
mov
and
xchg
xor
cmc
xorb
inc
dec
loope
xor
add
int
ret
mov
add
lcall
adc
add
stos
add
cwtl
pop
or
dec
inc
mov
outsl
sarb
xchg
js
push
mov
add
push
mull
add
mov
mov
add
movsl
ret
xor
mov
leave
jo
add
mov
push
add
iret
fs
sarb
data16
repz
add
lods
and
sbb
sub
je
rol
jns
les
pop
repz
pop
jmp
add
jecxz
fs
or
fsubrl
popf
pop
jns
out
call
js
cmp
aam
mov
cmp
leave
or
jmp
nop
orb
cli
mov
pusha
pop
and
or
loopne
inc
pop
outsb
add
mov
aas
jae
jg
add
and
add
jno
pop
add
arpl
repnz
sub
pop
or
dec
add
mov
push
add
pusha
sub
adc
or
xchg
jp
add
lods
mov
sbb
int3
xor
mov
jns
bound
in
rcl
stos
repnz
dec
dec
imul
inc
and
lea
notb
push
mov
faddl
in
dec
cmp
adc
fldl
pop
xor
adc
pop
add
insb
jmp
mov
jo
push
insw
add
jp
add
rcr
mov
js
jmp
repnz
inc
xor
arpl
add
cmpb
push
inc
mov
cwtl
pop
cmp
rolb
push
mov
bsr
xorb
pop
mov
enter
or
mov
push
cmpb
enter
add
mov
dec
in
cltd
add
shll
dec
cmp
add
shl
fbstp
inc
pop
adc
or
andl
sub
push
mov
pop
push
inc
jle
inc
mov
test
mov
adc
idiv
jne
fiadds
movsbl
push
xchg
sub
add
push
aas
add
lds
in
nopl
fwait
jae
or
jl
add
mov
pop
mov
push
jne
or
inc
test
jmp
pusha
inc
pop
lret
dec
mov
pop
arpl
sub
inc
pop
sbb
cmp
push
aas
lret
adc
fwait
inc
shlb
test
push
sub
js
clc
lret
gs
cmpsw
pop
add
lock
stc
mov
test
mov
out
and
imul
add
je
das
es
jbe
mov
repnz
push
cmp
mov
loop
add
push
mov
add
xchg
cmpsb
mov
jle
paddw
or
addl
mov
and
enter
mov
sti
cmp
xor
xor
jno
add
dec
movb
mov
mov
cmc
or
dec
xorb
stos
mov
jl
add
shlb
inc
cmp
add
mov
testb
movsb
fists
shlb
sub
std
pop
lock
lds
js
add
or
adc
and
nop
xchg
ja
add
sub
lds
mov
jmp
jge
jne
sub
or
add
sub
inc
fists
adc
sbb
dec
xchg
lods
pusha
lea
bound
rclb
nop
mov
in
notb
cmp
aas
int
jns
inc
add
sti
mov
loopne
lods
add
mov
mov
pop
cwtl
pop
ja
out
sbb
or
dec
or
mov
cmpsl
cli
add
clc
shll
testb
sbb
cmpl
lock
dec
orb
popa
ja
sub
into
mov
nop
jmp
pop
daa
add
and
je
lds
or
jl
jae
add
push
and
xchg
lret
xor
jae
imul
popf
push
push
mov
call
ljmp
mov
rol
sbb
dec
lret
imul
ljmp
dec
cld
adc
idivl
shrl
lret
add
jbe
jns
ret
out
add
ljmp
jg
add
and
mov
pusha
cmp
in
jmp
jmp
lds
and
andb
add
imul
movsl
push
xor
repz
call
in
add
xchg
pop
fdivl
bound
mov
iret
add
sahf
sti
add
outsb
out
bound
pop
dec
hlt
mov
inc
jo
rolb
push
add
imul
mov
jnp
pop
jbe
insl
sbb
jns
cmp
sbb
testl
mov
lcall
xor
nop
ja
enter
int
repz
mov
add
pop
inc
int
xlat
push
add
xor
loope
aad
sbb
je
add
push
mov
clc
nop
les
dec
lods
pop
ficomps
xchg
stos
ja
add
shll
mov
repz
rclb
dec
pop
add
int3
inc
cld
mov
push
add
adc
push
xor
add
add
aas
cs
add
fs
cmp
add
mov
or
add
pop
add
fucom
mov
add
leave
mov
out
pop
sbb
std
rcrb
addb
stc
jle
xchg
daa
add
sbb
insb
add
mov
addr16
test
rorl
in
std
lock
test
sub
and
inc
mov
filds
test
mov
mov
clc
and
test
adc
or
cs
roll
clc
add
adc
out
mov
pop
xchg
dec
pop
sbb
lock
fwait
out
repz
rolb
fadds
ret
std
push
add
pop
loop
mov
pop
fistl
xor
adc
loop
inc
push
lcall
roll
push
fnstcw
arpl
add
rcr
push
mov
rcrb
out
mov
mov
lods
push
mov
cmp
xor
inc
push
jne
add
jecxz,pn
and
push
aad
add
add
and
sbb
adc
jmp
jle
cld
add
sbb
add
insl
cmpsl
lret
adcb
mov
mov
add
popf
push
rcrl
inc
and
mov
ret
pushf
scas
cld
cmpsb
inc
iret
sbb
adc
daa
mov
lods
nop
or
adc
add
clc
scas
int
cmp
or
gs
test
das
and
loope
push
add
orl
push
lods
jae
leave
cmpsl
dec
in
pop
xchg
pop
jno
out
add
push
cwtl
out
frstor
pop
xor
test
ret
push
cmp
mov
jb
xor
add
xchg
sub
add
sub
adc
data16
gs
jge
sbb
xchg
add
dec
xor
push
add
and
pop
sub
mov
fcomps
shr
dec
add
fs
push
or
lock
jmp
enter
jmp
jnp
mov
xor
add
cmp
sub
inc
push
add
je
mov
dec
outsb
pop
push
or
pop
and
cmp
or
je
arpl
cmpb
fidivrs
sbb
and
add
daa
cmpsb
les
pop
xor
fisttps
loope
je
xor
add
int3
mov
pop
xor
movb
xor
pop
and
pop
xor
xlat
scas
in
jb
add
mov
add
dec
imul
dec
lods
rclb
push
sbb
sub
pop
loope
jne
add
jns
push
add
mov
cmp
add
xor
xchg
repnz
cmpsl
into
add
daa
jmp
mov
add
mov
aaa
sub
jo
jae
lcall
inc
idivl
stos
aad
or
add
jae
add
mov
sub
add
jecxz
insl
or
outsb
add
push
in
rorl
adc
jle
hlt
pop
add
mov
mov
add
and
aam
adc
mov
pop
roll
fucomip
mov
xchg
and
call
out
ret
and
pusha
cmp
add
mov
repz
enter
data16
mov
test
shr
nop
add
cs
and
add
pop
push
cmp
stos
fidivrl
add
dec
pushf
inc
mov
insb
jecxz
fsubr
aad
add
icebp
cmp
shrl
aaa
iret
stos
pop
js
add
adc
arpl
mov
pusha
mov
out
or
int3
push
loop
addr16
jge
clc
push
adc
xor
cmpsb
dec
pop
inc
dec
mov
mov
push
jo
or
in
mov
jge
push
or
push
aaa
cmc
out
pop
xchg
mov
subl
pop
ljmp
add
xor
inc
sbb
or
inc
shrl
fstp
or
lock
das
pop
loope
pop
xor
nop
add
mov
les
and
lcall
aam
mov
mov
lea
insl
add
mov
in
push
popa
dec
pop
scas
and
and
push
aaa
pop
mov
push
push
mov
loopne
sbb
testl
pop
test
pop
xchg
rorb
test
xchg
add
mov
dec
es
inc
ret
push
out
ds
ror
scas
or
loope
or
adc
cmp
add
out
outsl
jecxz
loopne
jbe
add
lea
mov
sub
ljmp
add
and
out
sub
jb
fxsave
roll
pop
add
cwtl
jno
add
xor
push
sbb
std
lret
mov
into
pop
add
ss
mov
movsl
sti
xor
adcb
movsb
add
aaa
test
in
ds
mov
sahf
jns
add
adc
dec
add
lods
test
push
add
or
sbb
outsb
incl
jg
mov
xor
cld
adc
jge
and
fcompl
fiaddl
jmp
rorb
push
test
sub
out
push
imul
dec
xlat
test
adc
jnp
fs
xor
add
fisubrs
push
daa
leave
pop
out
add
and
mov
xchg
add
icebp
pop
shlb
pop
lds
add
jne
and
or
cmpsb
dec
mov
les
pop
add
mov
jo
and
scas
mov
push
add
xchg
fmull
adc
hlt
pop
push
dec
pop
add
and
add
xchg
mov
xor
or
xchg
repz
flds
add
or
push
pop
jp
fdivrs
pop
adc
sbb
rorb
rol
adc
sbb
jge
repnz
out
lock
sbb
cmp
les
jbe
jne
add
mov
push
jno
xchg
inc
cmpsl
mov
add
or
add
jno
stos
icebp
inc
jae
sbb
dec
adc
push
aas
jb
push
ja
add
outsb
mov
js
addb
aad
inc
ror
mov
sub
ret
jo
push
xor
mov
outsl
cmp
push
add
adc
push
add
fdivs
ja
pop
test
pop
adc
and
adc
cmp
xchg
addb
push
xlat
xchg
mov
outsb
mov
xorb
bound
push
cmp
stos
jg
dec
mov
jns
ljmp
rcr
lret
add
pop
nop
and
lock
cli
add
call
movl
aad
icebp
fisttpl
inc
push
adc
add
repnz
cmp
popa
add
ror
cmpsl
popf
loopne
add
sbb
hlt
loop
cld
dec
add
add
pop
inc
cmp
les
pop
ud2
lods
cmpsl
or
daa
lock
add
es
pusha
add
jb
add
xor
scas
inc
int3
mov
xor
xchg
jp
add
dec
movsb
cmpsl
jg
add
pop
mov
lods
add
repnz
pop
pop
dec
ret
push
add
push
jb
int
loopne
push
and
inc
mov
or
pop
scas
vandnpd
sarb
add
dec
clc
sahf
test
xor
movsl
xchg
pop
movsb
sub
pop
test
std
jbe
mov
in
push
dec
add
adcl
inc
clc
movsl
add
in
pop
and
mov
push
add
xlat
aaa
ja
cmp
cmp
rclb
cmc
sub
sub
fs
je
aaa
and
mov
lock
ja
addl
ficompl
jae
add
movsb
fists
daa
repz
add
cli
and
dec
dec
inc
push
add
mov
inc
sub
push
or
into
mov
mov
dec
lcall
push
scas
inc
fcmovu
adc
incb
ljmp
jae
pop
aaa
mov
sbb
loopne
mov
inc
imul
pop
pop
sub
lock
loopne
mov
out
jno
add
pop
shrb
loop
xchg
cmp
add
pop
cltd
iret
enter
ds
add
jl
cld
addb
or
mov
add
push
jecxz
jnp
test
xchg
je
pop
gs
repnz
cld
pop
loopne
jle
inc
add
clc
push
lock
add
daa
loope
sub
xor
cmp
jecxz
xchg
into
sub
lods
push
add
popa
push
mov
add
pop
dec
sahf
cmp
pop
xchg
inc
loope
cmp
jecxz
mov
subb
fldl
mov
push
nop
call
dec
add
popf
xor
aaa
test
loop
ss
pop
dec
sbb
rcll
adc
outsl
js
call
imul
push
add
and
repz
fdivrs
sub
add
mov
mov
cmpsb
dec
std
jg
leave
pop
fs
scas
add
inc
lcall
push
sbb
inc
xchg
test
or
js
loope
mov
jns
xchg
push
xchg
fistl
jne
add
in
add
cmp
mov
std
sub
andb
sarl
fcmovnbe
fadd
mov
mov
fstl
add
add
enter
add
lahf
xor
jbe
mov
sti
mov
pusha
mov
pop
dec
out
push
inc
cs
fwait
nop
add
and
mov
xor
adc
scas
xor
inc
add
cmp
addb
lahf
loop
std
mov
mov
rolb
ds
popa
add
dec
gs
addr16
and
dec
and
jbe
in
sbb
les
std
cmp
and
repnz
bound
xchg
add
data16
pop
out
cmp
add
xor
adc
ret
or
add
arpl
stos
add
xchg
sbb
fmuls
dec
decb
subb
add
sub
popf
je
mov
ljmp
clc
push
inc
add
cmp
cmp
xchg
cltd
dec
cs
iret
push
add
inc
ficoms
add
pop
sbb
lods
sbb
data16
les
pop
leave
ret
or
add
pop
xorb
push
push
dec
cmp
shlb
out
jnp
jae
jl
add
xchg
cmc
addr16
inc
xor
dec
cmp
das
sbbw
addr16
sbb
pop
push
addb
inc
movsb
sbb
pop
xchg
sbb
and
mov
aaa
mov
jmp
dec
lcall
scas
je
add
inc
sbb
fmuls
add
add
dec
adc
fdivrp
iret
fldenv
mov
inc
add
shlb
into
mov
or
and
add
cmc
cmp
jbe
pop
push
outsl
arpl
repz
mov
mov
and
cs
xor
in
ds
mov
pop
rorl
lock
xor
out
pop
aam
cmpsl
sbb
mov
sbb
add
loope
xchg
mov
dec
cmc
rorl
enter
cmp
cmp
inc
std
mov
add
ja
cwtl
mov
add
mov
jne
add
inc
mov
jae
and
push
jge
divb
sub
jmp
cmp
bound
rcrb
pop
pushf
and
xchg
cmp
imul
add
inc
sub
push
addl
pop
add
lds
lret
stc
in
in
ret
push
loope
pop
jne
leave
dec
add
add
mov
adc
fwait
punpcklbw
bound
mov
mov
mov
jmp
es
pop
adc
or
mov
int
add
dec
push
pop
push
bound
lea
loopne
jb
add
out
push
iret
daa
xchg
add
repz
jmp
mov
inc
pavgb
xorb
add
xor
add
sbb
push
add
push
lods
cltd
dec
ror
add
jb
pusha
xchg
ret
pop
scas
out
dec
push
fbld
dec
and
sbb
jge
or
inc
add
insb
pop
pop
clc
rolb
xchg
sub
daa
add
push
xor
cs
in
ss
out
cmp
cmp
ljmp
xchg
scas
repnz
add
sub
and
pop
fcmovne
shll
jmp
aas
mov
jo
mov
popa
jmp
add
lds
jne
inc
es
adc
and
dec
or
mov
aam
jl
sbb
sti
or
mov
sahf
mov
jo
add
push
add
popa
push
in
cld
or
xchg
pop
mov
add
xor
mov
mov
in
add
repnz
das
test
cmp
sarb
pop
lret
jg
xchg
and
testb
bound
loopne
adc
scas
jmp
in
fadds
es
mov
cmp
push
add
push
sub
pop
push
inc
mov
xchg
test
les
aam
pop
adc
push
jge
cmp
inc
nop
shlb
add
push
call
jnp
lcall
les
push
daa
repz
mov
outsb
pop
jp
add
loopne
inc
cltd
sbb
out
push
or
dec
popa
adc
pop
lea
add
inc
sub
sbb
mov
cmpsb
lea
push
stos
popl
fstps
push
out
stc
aaa
cmp
and
add
and
jmp
out
psubd
sub
hlt
cmp
pop
imul
add
aam
push
ss
outsb
add
insb
jbe
and
js
pop
and
stos
jo
lahf
push
cmp
in
add
cmp
fisttps
add
sub
fmul
add
jg
xchg
add
mov
data16
mov
pop
loopne
ret
mov
pop
lods
xchg
cwtl
and
ljmp
pop
dec
cmpsb
add
xor
add
jb
sbb
or
xchg
cltd
xor
cmpb
jmp
xchg
or
fdivl
add
inc
mov
and
add
lea
cmp
aas
xorb
or
sbbb
xchg
add
cli
insb
add
sub
icebp
xchg
into
nop
dec
mov
sub
addr16
fistps
dec
dec
dec
shl
scas
add
fcmovnb
in
call
test
icebp
add
in
adc
adc
repz
sbb
lahf
jl
sti
lds
cmp
cmpsl
push
add
inc
or
add
dec
lahf
sbb
call
xlat
push
push
pop
std
out
lea
cmpl
movsl
mov
xchg
repz
sub
jl
pop
xor
repz
add
xchg
lret
jae
sahf
enter
add
adc
add
jg
loope
sub
fstpt
mov
sbb
dec
rolb
mov
pop
mov
lahf
xchg
fwait
jae
or
popf
xorb
mov
or
lsl
fldt
mov
mov
mov
sub
push
mov
pop
adc
xlat
lock
inc
sbb
cmp
add
xor
fidivl
add
out
jmp
add
dec
pop
stos
movsl
stc
mov
ja
aaa
orb
cmp
dec
fstp
pop
push
imul
adc
add
xchg
ss
inc
in
push
add
dec
sar
loope
xchg
push
mov
popf
or
test
add
fsub
loopne
sbb
cwtl
sarb
sbb
mov
mov
cmp
push
mov
push
add
mov
pop
cmpb
pusha
sub
push
lods
cli
dec
cmpsl
in
mov
adc
in
rolb
pop
mov
repnz
add
fwait
xchg
jae
clc
bts
add
push
inc
lcall
dec
fs
add
jns
add
adc
xchg
pop
or
clc
pop
dec
pop
push
adcl
lea
lds
dec
notl
pop
adc
sbb
fucomi
jno
or
clc
mov
adc
and
addr16
ja
and
mov
andb
adc
pop
cmpsl
cmp
cmc
ret
xor
dec
enter
add
add
xor
jbe
adc
mov
outsb
inc
aam
mov
jl
xor
imulb
dec
or
inc
sub
frstor
xorb
add
adc
pushf
negl
enter
xor
or
lret
or
inc
fisttpll
xor
rcl
inc
lret
lods
mov
roll
cltd
dec
sbb
jp
or
nop
jns
cld
or
data16
mov
and
pop
adc
xchg
mov
and
jno
xchg
jb
dec
and
std
adc
loope,pt
add
je
scas
push
add
jo
loope
insb
das
stc
jb
mov
rcrb
enter
mov
lods
or
cld
sbb
nop
mov
jmp
test
mov
outsl
jno
inc
mov
mov
inc
stos
jle
adc
inc
and
sub
mov
mov
and
ret
rcl
adc
lock
add
pushw
adc
or
cmp
mov
lahf
ja
adc
mov
or
sarl
and
fimuls
test
hlt
aad
std
and
xor
icebp
lock
adc
mov
js
icebp
cld
adc
xchg
adc
inc
cmpl
sti
adc
hlt
or
sbb
testl
repnz
orl
xchg
mov
sbb
mov
add
and
dec
into
adc
subb
xchg
icebp
mov
ret
xchg
and
in
addl
loope
jl
xchg
repnz
popf
xor
ret
sahf
dec
push
in
xor
mov
xor
mov
sbb
add
lods
call
sbb
cmp
pop
aas
mov
xchg
enter
clc
jae
test
dec
enter
or
mov
jo
addb
sbb
fnstsw
pop
adcl
xchg
dec
subb
add
ss
loop
adc
add
add
popf
sbb
mov
jl
dec
xor
adc
jbe
les
and
mov
cmp
or
call
or
in
xchg
cmpsl
sbb
adc
cmp
hlt
psubb
adc
vmread
mov
push
sbb
adc
mov
or
jbe
and
cwtl
jl
aam
sbb
pop
push
test
mov
pop
nop
in
xchg
xchg
inc
orl
movsb
pop
jl
iret
or
add
test
cmp
movsb
inc
jl
and
adc
push
adc
push
jnp
mov
into
orb
xchg
and
fadd
adc
mov
in
mov
inc
pushf
add
adc
ss
mov
adc
adc
pop
test
cmp
cmp
adc
fcompl
or
inc
js
pop
push
xchg
adc
cld
xor
pushf
push
sub
xchg
ss
mov
pop
jne
cwtl
ljmp
pusha
and
ret
nop
pop
jl
push
jno
int3
pop
cmp
jae
fcoml
xchg
xor
lahf
sbbb
or
mov
dec
js
push
loopne
les
pop
cmp
bound
and
test
mov
rcll
sub
and
push
pushf
nop
dec
and
and
push
mov
fcomps
adc
jo
addb
inc
adc
jo
pop
test
jbe
shr
jns
xor
cwtl
movsl
adc
loopne
and
xchg
push
adc
aam
loopne
inc
stos
lret
xor
adc
ret
loope
ret
xor
fdivrl
mov
into
inc
hlt
add
dec
add
push
dec
fst
test
fiaddl
in
add
call
adc
test
icebp
repnz
loope
sti
pushf
sub
cmp
jns
and
movsl
adc
dec
sbb
xor
out
push
inc
inc
mov
xchg
mov
cltd
fwait
inc
fsubrs
int3
dec
xchg
clc
mov
adc
sahf
mov
xlat
xchg
sub
lret
xchg
lea
adc
inc
shrb
sub
out
fsubrs
or
movsb
fiaddl
dec
mov
std
mov
sahf
mov
lods
std
out
nop
cli
ficompl
mov
mov
mov
repnz
push
push
repz
shlb
roll
add
push
push
mov
jo
fdivp
sub
cmp
xor
push
loopne
nop
sbb
push
aaa
add
sti
inc
test
dec
xchg
cwtl
push
lahf
jl
adc
or
outsb
nop
bound
jp,pt
out
lahf
jnp
push
and
sub
adc
add
xor
xlat
test
add
and
adc
add
cmpsb
sti
bound
jl
mov
leave
mov
add
add
sbb
xor
mov
sbb
enter
iret
orl
jnp
xor
jp
cmp
xor
adc
add
adc
movsl
lods
pop
pop
and
dec
clc
xor
cmpl
stos
cmp
add
mov
cmovne
jo
dec
dec
add
inc
cltd
inc
pop
jbe
xor
push
sbb
mov
ljmp
sub
jge
out
aad
lods
xchg
cmp
mov
xor
jp
add
cwtl
push
test
pop
push
lock
pusha
stc
stos
mov
es
cwtl
mov
fucomp
roll
add
fimuls
mov
dec
es
lods
push
jne
std
cld
sub
jno
bound
fildl
and
inc
int3
sbbl
jae
mov
xor
fstpl
call
popf
add
pop
cmpb
and
mov
mov
lahf
and
jmp
add
pop
in
cwtl
add
mov
sbb
mov
ss
sti
cmpsb
lds
stc
jne
loop
xchg
pushf
clc
aaa
stos
add
rcrb
data16
jl
xor
test
cmp
arpl
push
and
lock
stc
inc
call
inc
and
mov
mov
fldenv
sub
nop
mov
popf
cli
mov
cld
bound
jo
mov
int
and
ja
andb
sti
idivl
in
into
subb
mov
je
dec
pop
xchg
add
mov
jle
mov
dec
cli
add
jmp
inc
shll
icebp
out
in
into
pop
jno
add
pop
sbb
lock
add
jo
jmp
cli
add
mov
push
add
out
addl
xlat
les
insb
mov
add
jmp
push
in
cli
add
pop
xlat
inc
push
out
dec
add
xlat
mov
add
out
jne
jo
add
inc
imul
hlt
stos
pop
pop
les
test
fmull
repz
fwait
addb
add
lahf
dec
mov
jle
pop
lret
dec
clc
addl
and
std
lock
sbb
cmp
add
mov
dec
push
xchg
add
leave
push
or
adc
fs
cwtl
cmp
pop
cmp
mov
or
push
ja
sub
in
lret
shlb
ret
add
sbb
xchg
hlt
mov
add
popf
aaa
mov
mov
mov
jl
pusha
mov
cmp
addr16
inc
stc
add
sbb
ja
push
cmp
arpl
jg
fwait
lahf
imul
sub
lret
xor
inc
ds
sbb
std
add
filds
test
push
roll
adc
and
nop
add
inc
cmp
sub
movsb
add
push
mov
xor
add
adc
outsl
cmpsb
loopne
and
rolb
fcmovne
mov
mov
jmp
in
add
mov
and
loop
add
aam
sar
pop
pop
dec
add
js
inc
test
mov
aad
data16
out
or
adc
outsb
add
cli
popf
movsl
push
xchg
or
pop
xor
add
mov
mov
in
loope
xor
cwtl
int3
dec
ret
dec
add
fists
mov
and
pop
aam
jmp
ja
cld
xlat
mov
cmp
cli
nop
out
sbb
ds
negb
add
push
mov
or
stc
mov
pop
add
jo
test
jns
xchg
hlt
faddl
je
scas
cmp
stos
sub
lods
pop
push
testl
fadd
call
popf
or
push
push
push
add
stos
and
xor
add
jecxz
cmp
outsb
sbb
sbb
xchg
inc
adc
lcall
push
sbb
insb
xlat
aad
in
or
movsl
in
and
orl
inc
adc
fisubrs
fwait
test
mov
mov
inc
mov
sbb
and
dec
nop
pushf
pop
mov
rclb
cmp
mov
cmp
add
negl
jge
hlt
sbb
xchg
int3
scas
xchg
test
mov
mov
cltd
leave
inc
mov
call
jl
cmp
inc
fwait
pop
int
loopne
xchg
fisubs
leave
popa
adc
test
mov
lock
into
and
push
mov
xchg
mov
ss
sbbl
jp
repnz
mov
add
ror
ljmp
shlb
or
sub
testl
cmpsb
inc
push
and
push
shll
cld
inc
push
cld
or
sub
add
cmp
push
push
lods
push
cmp
pop
clc
dec
ds
or
mov
addr16
shrb
push
inc
pop
sub
jne
and
ficompl
push
sbb
scas
ret
or
js
xor
jno
cmpsl
test
popf
pop
fidivrs
add
nop
sbbl
hlt
xchg
test
add
sub
add
shrb
jbe
mov
repnz
jl
fnstcw
mov
movsb
js
add
xchg
jg
andl
xchg
add
xchg
inc
fwait
or
add
mov
jge
push
dec
ds
in
xchg
inc
sbb
mov
jo,pt
xorb
je
xchg
cmp
or
mov
jno
fwait
jae
adc
insb
pop
stos
push
loope
mov
fmull
jg
leave
add
sar
add
mov
imul
sub
pushf
lcall
pop
push
arpl
cmp
les
out
cmp
add
ret
pusha
loopne
cmpsb
add
lods
cs
jno
jecxz
fwait
mulb
xor
aaa
mov
dec
rclb
outsb
mov
xor
mov
cmp
jg
push
and
sub
lock
add
jmp
jl
stos
addb
dec
sti
ljmp
pop
inc
adc
lock
mov
add
mov
adc
xchg
cmp
inc
pcmpeqb
mov
add
out
sub
and
dec
pop
add
adc
cmp
add
push
mov
xchg
into
ret
or
push
add
iret
popa
jae
mov
bound
or
mov
add
adc
cmp
int
push
mov
mov
std
mov
mov
jecxz
testl
adcb
or
xor
adc
stos
add
dec
jl
popf
push
scas
addb
cmp
pop
dec
push
loopne
add
or
push
cmc
push
in
mov
add
outsl
imul
xor
inc
mov
mov
mov
sbbb
jb
dec
pop
pushf
xor
shll
cmpsl
add
push
pop
movsl
add
mov
sarb
lahf
add
mov
pushf
xor
not
call
insl
push
dec
insb
adc
adc
nop
add
or
dec
and
sbb
inc
add
jnp
int3
flds
or
or
jno
adc
fwait
or
xchg
pop
ja
xchg
jge
add
sbb
imul
data16
stos
lock
jl
insl
psadbw
xchg
pusha
or
xor
ds
add
and
pop
ja
int
das
adc
mov
adc
mov
sbb
insl
add
xor
push
in
mov
sbb
mov
jg
pop
ss
pop
aad
lcall
adc
popa
out
ljmp
or
xchg
sub
sub
or
sbb
xchg
or
pop
xor
jp
test
ret
sub
fwait
sub
inc
mov
loopne
or
rolb
lret
mov
mov
push
imul
add
jae
jg
dec
dec
lcall
stos
xlat
js
push
cld
add
and
push
add
xchg
movsb
sti
out
lcall
outsb
std
add
in
jb
add
shlb
pop
mov
orb
adc
dec
scas
insl
data16
add
in
xor
imul
bnd
and
loop
cmp
jno
inc
sbb
mov
add
stc
adc
xchg
sbb
aas
inc
xor
pop
stos
mov
mov
push
fwait
add
xor
jnp
jb
jle
arpl
mov
cmpsb
add
lcall
loope
daa
les
mov
out
mov
adc
mov
jns
lcall
pushf
cmpb
and
ffreep
inc
sbb
mull
dec
add
sbb
cmpsb
add
xchg
cmovns
and
pop
insl
cmp
push
call
popf
mov
cmp
js
and
aaa
out
rclb
stc
subl
jge
cmp
xorl
xor
movsb
rorl
and
test
add
inc
sbb
add
mov
out
rcrl
pop
insb
sarb
xor
inc
add
push
push
cwtl
call
inc
data16
mov
xor
sub
orb
and
jecxz
pop
gs
sbb
inc
ja
push
lret
imul
scas
dec
sub
pop
std
lds
cmp
add
imul
sbb
in
jmp
pusha
dec
sub
xchg
popa
nop
xchg
loopne
push
push
divb
loopne
es
and
mov
mov
hlt
in
aad
scas
add
lret
lock
add
xchg
push
dec
gs
iret
jo
and
xchg
cmpsl
outsb
lock
jb
mov
push
scas
add
cmp
cwtl
jle
or
mov
adc
jo
ss
insl
pop
cwtl
or
iret
ret
pop
add
ja
filds
add
sbb
loopne
negl
clc
mov
adc
std
or
inc
scas
imul
shr
shlb
pop
dec
add
aad
enter
subb
stos
fadds
sub
add
cmp
cwtl
cmp
inc
mov
mov
data16
inc
add
pop
into
repnz
xchg
xchg
adc
sub
jbe
push
movsb
jge
cmp
sbb
add
or
inc
mov
dec
cmc
jo
out
add
out
in
lret
cmp
or
ja
xor
pop
mov
jb
sbb
dec
jb
clc
mov
lret
push
sbb
js
add
push
aad
insb
add
mov
inc
rcl
in
out
aad
pop
mov
add
cmp
cmpsl
or
cmpsb
js
mov
call
repz
cli
xchg
jno
and
cmpl
push
imul
and
aam
insb
mov
adc
jne
jmp
mov
mov
push
xor
sbb
stc
xor
adc
and
in
iretw
repz
adc
sbb
loopne
dec
mov
pop
push
test
pop
or
icebp
xchg
jmp
pop
pop
push
pop
movb
mov
xor
sub
mov
inc
es
clc
add
shlb
in
int
adcb
test
add
sub
aaa
cli
push
mov
jne
faddl
mov
push
push
fs
out
out
and
or
fiadds
mov
rcr
lock
add
jge
push
pop
ror
add
adc
lods
xchg
mov
cmp
pushf
loopne
aam
enter
or
aas
sbb
out
cmpsl
mov
aam
jge
ret
pop
jle
inc
sbb
xchg
mov
enter
xchg
pop
or
or
mov
sub
clc
add
inc
dec
pand
jmp
adc
clc
pusha
pop
mov
sub
add
cmp
or
es
sbb
data16
xchg
mov
cmp
pushf
mov
je
and
add
arpl
daa
and
inc
popf
mov
push
mov
adc
fdivs
add
cmpsl
or
insb
popa
mov
jg
imul
sahf
adc
xchg
daa
std
leave
call
mov
js
add
fnstcw
mov
add
pop
pop
enter
push
adc
push
ja
pop
divl
fbstp
or
imul
imull
imul
lods
mov
popa
jg
stos
testl
add
inc
test
push
pop
xor
adc
mov
add
xchg
xor
xchg
pshufw
ja
mov
lret
cmpsl
fidivrs
or
fsubrl
sub
ljmp
cs
mov
in
dec
pop
xor
push
ss
mov
pop
jmp
std
bound
add
lods
rolb
push
inc
popf
add
mov
inc
into
dec
mov
add
push
mov
push
rorb
add
push
or
ljmp
sbb
mov
inc
add
inc
add
xchg
shlb
mov
orb
mov
xchg
add
fimuls
adc
loop
add
cmp
cmpsb
and
pusha
sub
cmp
xchg
scas
add
cmp
sbb
aad
and
adc
sbb
cmpl
cwtl
arpl
aas
and
add
and
ficompl
xchg
add
push
pop
pop
scas
addr16
push
rorl
xchg
orb
jns
lahf
sahf
dec
xchg
add
pop
movsb
sub
dec
jge
sarb
loopne
mov
xor
push
sbb
mov
fdivl
add
ss
mov
and
call
inc
mov
xchg
lea
in
sbb
mov
inc
add
push
jb
icebp
out
loop
add
sub
fldcw
mov
xchg
jbe
add
inc
push
xor
sub
sbb
mov
enter
xor
push
jmp
pop
imul
add
clc
lcall
fidivl
mov
shl
hlt
daa
sbb
lods
imul
jmp
mov
lea
dec
imul
pop
dec
adc
cmp
and
inc
sbb
inc
repz
fidivs
es
adcb
addb
enter
arpl
pusha
insl
js
add
xchg
push
inc
jl
push
outsl
push
and
lock
pop
pusha
adc
push
daa
stc
mov
add
arpl
lahf
xlat
push
add
push
jb
imul
inc
popf
pop
mov
cmp
call
push
mov
xchg
add
test
inc
and
pop
repnz
xchg
fiaddl
add
inc
xlat
push
cmp
jno
pop
mov
inc
negl
lock
fisttps
arpl
pop
sub
cld
or
inc
pusha
mov
mov
data16
test
mov
outsl
cli
rolb
incl
or
lods
add
dec
and
iret
js
clc
hlt
push
jns
jo
add
adc
cmp
add
dec
xor
add
sub
test
cmpsl
sbb
out
jmp
pop
sti
stc
js
jp
sar
in
enter
add
lods
and
jbe
pop
push
lret
mov
xor
pop
popf
dec
mov
and
outsl
jo
sbb
js
pop
add
pop
rolb
push
mov
jl
mov
and
aad
call
push
jae
in
loope
or
sbb
js
xchg
dec
jge
pop
xor
dec
icebp
or
xchg
sahf
push
pop
loop
push
int3
add
out
and
mov
fidivs
in
inc
xchg
xchg
and
pop
rclb
inc
jmp
mov
jl
push
pusha
pop
inc
push
push
inc
dec
or
xchg
repz
mov
push
xchg
mov
add
sub
push
or
scas
lods
push
add
test
sub
in
cmp
lret
adc
out
mov
incl
inc
movsb
mov
adc
cmp
fsubl
xor
icebp
inc
and
xor
push
or
scas
sub
call
mov
leave
les
inc
mov
scas
js
sbb
adc
sub
push
scas
cwtl
lahf
xchg
mov
bound
and
jbe
inc
ljmp
fs
mov
pop
xchg
rclb
in
inc
inc
dec
push
bound
stc
add
imul
mov
and
mov
xor
popa
sub
pop
nop
push
xor
stos
shll
mov
push
and
lods
dec
addl
mov
mov
stc
dec
and
adc
imul
pusha
add
xchg
pop
push
jle
test
xchg
insb
pusha
sbb
adc
xor
andl
pop
pusha
add
dec
lcall
es
xor
gs
pusha
push
int3
stc
out
js
adc
mov
js
out
loope
popf
mov
jecxz
mov
mov
add
inc
lods
scas
test
and
inc
in
xor
test
dec
dec
int3
lods
xchg
sub
push
repz
cli
xor
and
subb
faddl
sbbb
xor
pusha
fildll
loopne
xor
mov
out
lret
xchg
push
sbb
push
loope
add
jge
xchg
and
or
xor
cmp
cltd
ja
jecxz
sbb
arpl
mov
sbb
andb
sub
mov
mov
rorl
dec
push
xor
or
scas
jecxz
add
sarb
sub
or
jl
cmc
adc
xor
nop
push
jb
movl
sbb
sbb
xor
xchg
dec
clc
mov
nop
mov
lods
pusha
mov
pop
in
ljmp
or
inc
pusha
mov
mov
and
loopne
cmpsb
out
test
or
lods
pusha
cmpl
sub
push
or
jb
int
inc
aam
pop
or
inc
rorb
ret
mov
jl
or
popa
cmp
and
movsb
adc
adc
xor
push
mov
xchg
xchg
or
adc
lods
lcall
or
test
sbb
cmp
scas
shrb
pop
into
pusha
mov
pusha
rorl
shlb
mov
icebp
fistl
lods
scas
xchg
loopne
js
in
int3
lds
dec
popa
insb
pusha
negl
jno
cmpsb
xor
rolb
adc
push
setb
cmp
mov
or
inc
in
int3
dec
shlb
outsb
add
cmp
fucomip
out
fldl
and
iret
inc
mov
jmp
push
jnp
inc
push
sub
stos
inc
mov
mov
and
xchg
pop
jmp
push
adc
mov
dec
dec
inc
punpckhbw
pop
mov
adc
push
pusha
outsl
pushf
shrl
inc
mov
xor
push
dec
roll
rclb
add
mov
adc
xchg
sub
sti
stc
and
adc
flds
sarl
adc
pusha
mov
mov
je
adc
dec
adc
adc
mov
mov
cmpsl
pusha
fsubr
dec
xor
punpcklwd
pop
pusha
add
add
xlat
ds
aaa
adc
shlb
cmp
test
loope
xor
xchg
movsl
lock
std
mov
shlb
inc
flds
pop
popl
adc
xor
lock
mov
sbb
xchg
lea
popa
and
pop
cmp
pop
or
fistl
jecxz
aad
mov
mov
pusha
fsub
mov
xor
or
lock
sub
loopne
and
cmp
xor
insb
pusha
xchg
adc
stos
sub
xchg
mov
ds
addr16
cmpsb
xchg
lds
hlt
mov
pusha
add
test
xchg
mov
mov
jmp
pusha
pusha
xor
lds
push
xchg
insb
pusha
push
sbb
pushl
je
lods
pusha
sbb
add
pop
push
repnz
mov
mulb
pop
sbb
mov
sahf
ficoml
sbb
jns
inc
popa
push
push
out
xchg
pop
and
pop
popa
sarb
pop
push
sbb
inc
loop
mov
xor
xor
scas
rcrb
jns
lock
and
cli
xor
pop
outsl
inc
subb
call
push
aad
fisttpll
sub
imul
enter
insl
shll
push
pop
adc
cmc
add
jle
ljmp
inc
xor
movsl
mov
popf
cmp
xchg
lcall
gs
aam
adc
movsb
xor
pop
push
cltd
add
xor
addr16
and
mov
pop
add
adc
lock
adc
add
dec
push
int3
inc
adc
jge
dec
popl
inc
stos
fisubrs
rclb
into
mov
pop
cld
xchg
shl
aam
pusha
push
jne
and
pusha
pusha
dec
ret
mov
pop
inc
in
push
loop
stos
mov
or
in
int3
jno
push
jecxz
ror
insl
sahf
int
adc
inc
popa
insl
and
repnz
bound
addb
add
mov
dec
or
lock
or
jae
xchg
jp
fcomp
out
testb
mov
cmp
push
adc
xor
lock
data16
push
mov
xor
pusha
add
inc
nop
adc
xor
dec
sbb
xor
push
or
mov
sarl
and
mov
adc
shl
jb
shll
xchg
rorb
addb
adc
jns
rcrl
add
cltd
xor
inc
jns
mov
ss
inc
xchg
ror
mov
cld
xor
xorl
push
jge
mov
popa
and
add
lods
sbb
hlt
push
daa
add
shlb
popl
daa
shll
adc
ror
addb
je
scas
rolb
adc
ds
mov
inc
dec
sar
push
push
or
loope
adc
mov
hlt
push
cld
pusha
ret
pop
inc
push
sub
stos
nop
pop
adc
cld
add
mov
and
inc
stos
aaa
mov
sahf
testl
pop
adc
sub
jno
xor
cmp
xor
and
fisttpll
leave
popa
aam
sbb
mov
rorb
sub
xchg
mov
adc
loopne
xor
xor
and
fsubrs
inc
sub
pusha
mov
add
push
and
dec
rcl
ds
adc
mov
jl
sbb
dec
loope
xchg
mov
add
lds
rcrb
mov
clc
pop
loop
xchg
rclb
jge
cli
xor
test
mov
and
pop
adc
jmp
mov
hlt
out
popa
loopne
jae
and
adc
inc
and
adc
cmpsl
or
adcl
push
cmp
adc
test
push
fimuls
add
mov
xchg
or
cli
and
inc
mov
xchg
movsl
dec
mov
test
xlat
cmp
and
ret
or
jae
push
adc
js
or
jae
clc
jne
cmp
mov
test
cmc
cmpsb
or
inc
call
xchg
shll
pop
xchg
dec
sbb
adc
pop
mov
fadds
mov
cmp
sbb
or
call
fsub
mov
push
ss
and
movsb
sub
shl
or
aaa
lods
xor
cwtl
enter
nop
xchg
lds
push
add
adcl
les
push
out
mov
lea
in
pop
add
xchg
cmc
out
jne
add
pusha
rorl
xchg
xchg
pusha
inc
loope
sbb
sub
adc
add
or
lock
in
and
js
or
adc
jge
xchg
push
repnz
loopne
in
in
shll
test
mov
or
mov
adc
mov
mov
out
sbb
push
pop
push
mov
shrl
imul
gs
icebp
and
jl
or
xor
subb
sbb
cmp
push
shrb
sbb
sbb
test
shlb
dec
push
xchg
stos
rclb
faddl
rclb
push
xor
inc
xor
add
and
and
push
add
ret
and
jl
or
out
sahf
inc
xchg
icebp
xor
sub
sbb
lret
cmpsl
bound
popa
test
pop
dec
imul
xor
clc
xor
adc
fs
js,pt
xor
pop
sbb
loop
movb
add
fs
movsb
rclb
ror
jecxz
and
lods
sbb
and
lret
mov
xor
stos
push
xor
inc
sub
pop
test
xor
fs
add
add
ret
fidivl
arpl
and
notb
fmull
loopne
out
xchg
inc
cmc
in
stos
sbb
mov
sub
adc
shrl
mov
xchg
mov
jecxz
xor
shll
fs
sbb
out
jge
cmp
shrb
ss
sbb
pop
rorb
scas
add
jno
inc
int3
add
xor
inc
inc
orb
movsb
enter
popl
and
test
cmpl
lret
or
clc
cld
mov
xchg
sub
ret
fstl
pop
xchg
cmp
arpl
imul
xchg
inc
leave
pop
push
pop
js
notb
cmp
lods
and
out
bound
pop
sbb
movsb
lods
dec
lods
shrl
pop
sbb
loope
shl
add
pop
add
add
push
inc
fwait
arpl
ja
jmp
rolb
jp
pop
adc
sbb
xor
inc
sti
add
fstl
or
push
movsb
mov
jl
or
movsb
mov
mov
les
push
pop
inc
mov
xchg
add
sbb
and
xchg
sub
xor
add
insb
sub
bound
int3
lea
sub
loopne
mov
xor
mov
icebp
sti
dec
mov
test
punpcklbw
pop
flds
and
dec
lea
out
mov
stos
int3
pop
add
inc
test
sahf
adc
dec
fbstp
popf
shl
or
mov
cmpl
or
int3
xchg
outsl
pop
jg
jmp
outsb
lock
jns
mov
rolb
jbe
aaa
sub
cmp
mov
fxch
pop
rolb
sbb
push
shl
repnz
sbb
insb
pusha
fs
inc
cmp
and
dec
popa
lret
shr
or
add
sbb
adcb
popa
je
ds
popl
out
and
xor
add
jae
push
shlb
jno
sub
rorb
lock
sub
push
and
hlt
test
lret
and
xchg
and
mov
ret
inc
or
pop
stos
push
mov
add
or
xor
push
add
xor
pusha
mov
xchg
movsl
xor
pop
inc
daa
test
adc
mov
pusha
add
por
adc
mov
hlt
push
aas
nop
ljmp
stos
bound
pusha
out
rclb
adc
es
inc
dec
outsb
jnp
test
clc
or
push
pop
pusha
add
add
das
ds
enter
sub
sub
rorb
es
inc
out
movb
dec
insb
lret
xchg
xor
es
xchg
or
js
adc
les
insb
dec
adc
sbb
xor
pusha
add
adc
or
mov
xor
les
rcrl
lret
fdivs
adc
lock
lods
lock
xchg
iret
inc
dec
mov
rcll
stos
clc
sar
mov
or
orl
pusha
pusha
inc
inc
pusha
dec
jmp
popa
mov
or
dec
loop
xor
xchg
and
xchg
xor
rol
lret
add
call
cli
jl
or
mov
pusha
jns
mov
and
call
jbe
rolb
pushf
imul
pop
popl
adc
lock
jmp
pushf
popa
sub
mov
or
lret
js
jae
bound
pusha
jnp
addb
push
loop
and
ss
or
and
adc
pusha
loopne
ljmp
sar
aam
call
lahf
and
hlt
insl
mov
xchg
dec
sbb
pusha
sarl
pop
adc
push
pop
cmp
popa
mov
mov
add
insb
ret
push
jnp
cmpl
movsb
add
mov
adc
lahf
adc
and
push
and
and
out
leave
xchg
sub
mov
and
sub
mov
ljmp
adc
and
pusha
pop
push
lahf
shlb
stos
jo
loopne
ja
and
loopne
dec
test
and
cmp
nop
in
and
or
movsb
cmpsl
test
xor
adc
push
xor
lock
les
mov
jb
dec
sub
and
pop
pusha
add
hlt
dec
pop
sub
dec
and
dec
das
clc
add
ljmp
cld
lcall
fsubrl
rcrb
pusha
cmp
cmc
es
jns
stc
insb
loopne
and
mov
jno
mov
rorl
mov
pop
sbb
mov
adc
insb
je
idivl
inc
popa
fwait
xor
jae
add
cs
mov
sti
adc
mov
mov
sbb
sbb
fdivrl
mov
xor
pusha
mov
jo
cli
aad
fistl
cli
arpl
clc
fwait
and
xor
ljmp
push
xor
rorl
or
loope
lods
sbb
cmc
in
sbb
sti
in
add
jne
mov
les
jg
shlb
enter
jo
jle
icebp
fistpl
shlb
jnp
ffreep
into
sbb
and
sbbl
cmp
lock
mov
pop
cltd
ds
lret
xor
sub
test
sahf
popl
stc
add
mov
rcrb
mov
mov
shlb
retw
shrb
or
in
mov
ret
sbb
in
mov
push
mov
pop
jno
std
inc
adc
fcomip
adc
je
mov
inc
lahf
sbb
push
xor
adc
push
test
or
pop
xchg
inc
add
mov
xchg
add
mov
pop
xor
push
or
sahf
and
inc
scas
pop
imull
test
out
popa
push
or
push
xchg
or
es
insb
stos
nop
push
dec
and
jmp
sarl
out
scas
aad
jo
adc
insb
push
neg
repz
test
jmp
andb
adc
add
or
test
jle
es
and
sub
mov
add
incl
cmc
inc
gs
xor
cmp
inc
sub
test
inc
pusha
and
add
imul
xor
lret
inc
mov
out
ret
int
ss
push
add
or
movl
sahf
ja
nop
sidtl
or
cli
faddl
sub
dec
fildll
push
data16
xor
sbb
pop
rcrb
add
in
jg
and
inc
mov
clc
mov
push
add
xchg
outsb
das
add
cld
or
sub
add
push
mov
add
mov
jbe
stc
ret
xor
dec
xor
cs
fs
pop
stc
pusha
imul
mov
xchg
sbb
sbbb
or
jae
ss
add
or
cmpsl
jmp
enter
shrb
pop
adc
testb
sub
in
inc
aad
lahf
insb
pop
inc
in
mov
inc
rorb
jno
pop
mov
dec
fmull
js
fadds
inc
push
loop
ja
jmpw
sti
lahf
jl
xor
adc
mov
int3
or
mov
push
xchg
sub
push
jbe
cmpsb
test
xor
call
movsb
and
add
shrl
and
push
test
mov
jecxz
in
xor
ds
push
add
pop
add
add
cmpsb
pop
sarl
jo
scas
movsb
outsb
ja
pop
sbb
into
decl
out
inc
add
js
cmpsb
lret
clc
sbbb
andl
mov
out
add
mov
and
lahf
and
aad
dec
loopne
sbb
xlat
mov
add
adc
in
mov
cli
sbb
inc
pop
icebp
add
arpl
ja
aad
add
in
mov
sub
pushf
mull
jl
sbb
repz
adc
cmp
pop
std
mov
pop
cwtl
adc
mov
mov
test
lock
xor
add
xchg
xorb
sub
aas
xchg
lock
into
push
mov
add
xor
cmpxchg
xchg
mov
adc
out
roll
nop
test
jno
inc
int3
loop
gs
test
xchg
and
push
or
jno
dec
push
cmpsb
shlb
popa
ret
xor
fcompl
mov
fnsave
loopne
dec
enter
pop
or
dec
add
lods
mov
inc
add
ja
pop
in
sbb
xchg
jbe
lcall
xchg
add
lock
cmp
shlb
ja
adc
arpl
call
add
sub
lahf
mov
add
or
enter
ja
repnz
push
dec
mov
out
xchg
mov
sarb
aas
and
mov
adc
lods
mov
add
xchg
jecxz
add
iret
mov
xor
movq
insl
add
dec
xchg
pushf
enter
setg
hlt
cmp
push
cwtl
xor
or
arpl
mov
stc
in
dec
sub
inc
lods
data16
movsb
sahf
shlb
add
xor
dec
xchg
add
es
repnz
adc
dec
xchg
popf
mov
fiaddl
repnz
mov
int3
sbbb
out
jns
aaa
add
pop
mov
jbe
mov
enter
cmp
add
lock
add
rcrb
adc
push
mov
idivl
mov
jl
mov
xchg
loop
push
xor
add
ds
xor
mov
adc
add
mov
inc
rcll
sahf
mov
adc
add
shrl
jns
or
fcompl
bound
fnstsw
add
add
add
mov
test
enter
jne
and
mov
xor
pop
jmp
sarb
add
pop
test
lea
push
add
movsl
pop
cmp
shl
adc
cmc
movsb
sti
cmp
scas
add
or
cmc
incl
add
call
cld
jg
jae
in
jnp
out
ja
add
jb
fs
mov
rclb
xchg
int
add
inc
cmpsb
push
pop
pushf
add
pop
movsb
push
jae
cld
pusha
jne
fwait
cmp
and
stc
pop
pop
pushf
into
loopne
lods
pop
shll
mov
decb
movsb
and
dec
mov
cmp
adcb
in
pop
enter
cmp
fsts
stc
adc
jae
add
repz
aaa
add
imul
movb
pop
cmpsl
sbb
imul
add
xchg
pusha
push
test
adc
jo
arpl
and
sbbb
das
dec
cld
cmc
pop
cmpsl
rorb
cmpsb
mov
push
lret
add
sbb
outsl
into
mov
xchg
dec
or
and
jg
hlt
mov
add
fnstcw
je
xchg
hlt
add
lcall
iret
mov
stos
inc
daa
insb
xchg
pop
xchg
mov
pmulhw
out
sti
mov
pop
push
xor
and
add
lds
and
jecxz
mov
cmp
adc
add
xor
aas
sub
lret
loop
mov
inc
inc
mov
sub
arpl
mov
mov
mov
xor
and
pop
and
cmpl
pop
push
mov
pop
inc
cld
loop
sub
sbb
or
addr16
addb
les
jns
into
sub
lds
in
mov
out
loopne
scas
incl
dec
sarb
push
or
fildl
adc
and
dec
test
cmp
ret
cmp
ret
fisttpl
addr16
sbb
ficompl
adc
mov
or
xor
lcall
stos
or
fs
inc
push
das
repz
movsb
jle
add
push
es
shlb
nop
test
hlt
jp
or
js
mov
out
cmp
xchg
adc
xlat
mov
test
and
movsb
push
ret
xchg
js
add
mov
sti
add
push
enter
push
inc
add
lock
sub
ffree
or
add
faddp
mov
or
popa
xor
inc
add
ret
shlb
test
out
lock
adc
add
out
rcl
xchg
cwtl
or
testl
sbb
jo
mov
sbb
in
mov
adc
mov
add
shll
mov
add
inc
aas
icebp
arpl
rcrb
test
cmpsb
stc
popa
mov
jecxz
gs
sub
jno
mov
pop
sbb
ds
cmp
jo
mov
add
sbbl
subb
push
in
cmp
aas
jnp
leave
enter
and
clc
fbld
int3
push
or
ljmp
jecxz
subb
test
pop
call
lods
xchg
dec
add
pushf
xor
mov
add
mov
fsubrs
nop
cmp
pop
stos
jl
sbb
jle
xor
mov
mov
icebp
mov
mov
rcrb
fdiv
add
push
cli
mov
push
ret
add
repz
sti
test
ror
add
cmc
dec
in
mov
cwtl
add
push
mov
aam
pop
incb
ljmp
adc
mov
in
in
test
sbb
out
aas
leave
add
mov
rcrb
inc
jp
imul
add
adc
and
or
insl
mov
push
pop
sbb
xchg
fldenv
stos
add
mov
cli
sub
mov
rcrb
in
stc
mov
sub
std
popf
jns
mov
leave
sbbb
loop
mov
adc
int3
add
and
add
pop
lcall
movsl
add
sub
pop
cmc
inc
push
and
pop
aas
inc
xchg
es
sub
sar
inc
mov
add
out
aas
pop
fmuls
sub
add
xchg
inc
dec
imul
imulb
mov
xor
in
int3
and
cli
lea
jo
mov
popa
sub
cli
add
repz
in
rolb
push
push
or
mov
and
dec
inc
adc
push
sbb
in
sahf
or
push
movsb
jmp
xchg
out
pop
shrb
iret
sbb
xor
lret
test
add
add
pushf
ljmp
cld
out
and
adc
fisubs
hlt
addb
bound
in
push
push
cmp
xchg
lods
dec
inc
int3
dec
jmp
fstps
inc
loopne
les
movsb
nop
add
es
out
mov
xor
adc
insb
inc
cs
lcall
sbbb
adc
and
xchg
ficompl
mov
fdivrs
mov
mov
dec
mov
and
xor
fsubrs
xorb
jp
mov
jecxz
adc
add
mov
fsubs
inc
dec
pushf
lds
lcall
out
aad
sbb
std
test
jnp
add
push
lock
lcall
mov
jp
fisubs
imul
jns
fsubr
cli
push
mov
dec
nop
cmp
dec
test
imul
add
mov
mov
pop
cli
shl
push
mov
push
popa
sub
add
add
dec
mov
mov
inc
push
leave
repnz
sub
sub
call
arpl
pusha
notb
xchg
fldl
adc
fs
scas
add
xchg
inc
mov
out
or
cmpsl
sbb
mov
add
stos
stc
jns
or
shl
inc
cld
add
outsl
adc
sar
movsl
aaa
add
mov
xor
jae
and
add
or
aas
sti
mov
sbb
sbb
int
jge
clc
cmp
pop
xchg
jecxz
mov
mov
rclb
mov
mov
cmp
call
pop
xor
pop
sbb
test
jb
and
pop
push
jne
popa
sbb
fucomip
and
add
sub
or
xor
enter
pop
push
mov
fs
pop
or
add
pop
pop
cmpl
add
daa
inc
xchg
fstp
outsl
add
sub
xchg
xor
add
clc
push
jge
add
dec
mov
jnp
adc
push
sbb
cli
add
enter
push
push
inc
clc
mov
loopne
adcb
inc
dec
out
add
cmp
fnstcw
mov
sub
inc
cmp
fcomps
add
mov
mov
mov
add
je
add
ds
mov
lret
add
fdivrs
add
mov
jno
mov
or
lods
or
pusha
stc
add
std
mov
or
lods
add
pushf
mov
inc
fcoms
add
repnz
call
fistl
fistpll
adc
mov
mov
pop
aam
xlat
pop
jnp
jb
out
mov
cmp
flds
xchg
lods
add
dec
jge
pop
movb
addr16
mov
sub
mov
jbe
sti
cmp
inc
cmp
enter
mov
lret
add
rcrl
add
sbb
push
and
dec
add
and
add
out
popf
mov
pop
scas
lds
iret
mov
fwait
and
cmpsb
add
in
inc
add
xor
sti
je
add
mov
cmc
sub
cltd
punpckhdq
daa
popf
pusha
inc
aam
push
mov
loop
int3
in
push
xchg
add
xor
pop
dec
les
mov
cmp
addl
mov
cmp
xor
cmp
std
add
imul
into
roll
stc
loop
push
lods
arpl
push
and
xchg
add
xor
lock
lret
pushf
subl
lret
repz
add
andl
jmp
add
and
add
mov
push
inc
xorl
add
push
roll
es
pop
xlat
mov
gs
std
sub
mov
aam
loop
mov
rcll
push
scas
repnz
pop
repz
stos
adc
add
scas
mov
cmp
mov
push
fildll
xchg
sub
xchg
cmp
into
stc
adc
hlt
test
fisubs
add
sar
ret
inc
rolb
mov
push
push
loopne
jecxz
aas
push
cmp
nop
jne
add
jo
lods
sbb
pusha
add
jge
or
adc
sbb
sbb
add
cmp
lods
dec
and
jmp
les
dec
jno
lock
idivl
loope
loopne
inc
cmc
add
pop
scas
mov
pusha
lock
jmp
add
push
xchg
xchg
jne
add
mul
mov
xchg
iret
xchg
add
and
std
out
mov
fcmovu
dec
test
mov
cmp
data16
les
add
dec
sti
rolb
pop
sbb
insl
jge
inc
add
aaa
insb
outsl
loope
push
sub
jb
rorb
shrb
lcall
in
add
popf
xchg
sbb
lret
ficomps
add
push
lods
rcll
scas
add
mov
xchg
insl
push
push
xor
jbe
xlat
mov
cmc
test
je
add
xchg
loope
adcl
add
repnz
add
mov
xchg
sub
movsl
xchg
negb
mov
js
stc
fistps
stos
test
scas
repnz
ror
xor
jbe
xor
dec
mov
incb
sub
mov
push
daa
aaa
cld
add
push
pop
rclb
adc
inc
pop
int
sbb
push
shrl
add
mov
pop
cmp
sbb
mov
inc
mov
test
cmp
call
pop
pushf
and
mov
stos
imul
leave
cmp
jge
add
dec
jo
test
or
cmpsl
mov
in
inc
xor
aaa
xchg
xchg
add
or
jb
mov
pusha
push
add
je
adc
cmp
sbb
clc
ret
mov
dec
sbb
std
fisubs
rorb
lods
cmc
add
std
and
add
or
jo
jmp
push
xchg
test
inc
inc
add
cwtl
xor
je
adc
mov
dec
add
cmpsl
insb
push
push
in
pushf
pop
mov
jno
mov
add
sahf
add
cli
sbb
rorb
leave
add
lds
rorb
fnstcw
daa
lods
inc
push
subb
dec
xchg
mov
mov
negb
imul
lret
mov
inc
add
add
or
jmp
mov
add
mov
cltd
clc
out
add
inc
mov
sub
faddl
std
cli
and
out
lock
pop
add
cs
mov
add
lcall
add
add
jbe
inc
enter
add
popf
lret
in
jb
movsl
xchg
pop
push
push
or
rcrb
lcall
pop
jo
test
add
pop
out
add
das
add
adc
pop
jno
adc
or
test
pop
lods
nop
imul
ret
xorb
nop
cmpl
xchg
incb
pop
push
ret
dec
hlt
sbb
or
cmp
cmp
adcb
and
std
outsl
mov
pop
js
nop
or
rcl
in
xor
jnp
cmpsb
je
mov
xchg
pushf
dec
insb
or
sub
jp
sahf
cmp
pop
jb
cmp
out
sbb
pop
or
aaa
icebp
push
jno
jl
cli
and
stos
popl
mov
stos
mov
mov
repnz
add
add
pop
fcompl
adc
dec
cmp
dec
add
cmp
bswap
ficompl
pop
ret
das
xchg
cmc
call
pop
and
in
ret
stos
mov
add
mov
add
cmp
mov
adc
xor
adc
and
fistps
jno
or
movmskps
mov
pusha
ret
pusha
in
aas
push
mov
imul
dec
and
add
and
add
mov
add
lret
push
hlt
jne
ficomps
and
fldl
xor
push
mov
lret
pop
roll
xor
addr16
nop
mov
push
add
cmp
cwtl
sub
add
sbb
loopne
test
add
cmp
pop
add
cmp
mov
sub
lds
nop
insb
js
add
cmpl
dec
sub
and
push
xchg
pusha
cmp
out
xor
mov
enter
inc
xchg
push
cs
push
sub
shl
jmp
add
mov
in
aas
aam
dec
add
pushw
scas
inc
sub
cli
mov
fdivl
ret
movsl
mov
imul
or
xor
xchg
fwait
inc
fadds
jbe
sbb
jl
inc
jo
scas
or
push
imul
or
rorl
out
movsb
add
cmp
push
inc
in
push
ljmp
out
pop
enter
nop
add
ja
jle
add
mov
push
ja
nop/reserved
pop
mov
and
dec
jno
xchg
sbb
jnp
ret
lock
adc
xchg
sub
add
add
dec
in
xchg
ds
push
xchg
mov
rorb
inc
das
xorb
mov
hlt
incb
arpl
ljmp
inc
lcall
jmp
push
decb
sub
push
cmp
and
inc
jo
sub
xchg
test
aaa
imul
out
fstps
add
adc
mov
sub
int
imul
fst
fcoms
add
scas
aas
pusha
call
addb
insl
or
clc
cmp
ret
movl
adcb
xchg
inc
or
jnp
in
cmove
out
adc
add
xchg
jecxz
pop
mov
je
push
inc
add
in
pusha
mov
sbb
cwtl
into
lcall
xchg
dec
call
sbb
pop
jae
xchg
in
shr
xchg
into
cmp
adcl
jne
cli
add
cmp
punpcklbw
sbb
cld
jbe
inc
adc
mov
into
mov
aas
adc
ret
mov
loop
insb
ja
pusha
testl
aam
gs
lret
sahf
push
mov
cmpsb
dec
inc
aaa
add
add
popf
loopne
arpl
push
into
or
je
mov
push
dec
pmuludq
nop
xor
pusha
add
popf
inc
and
and
sbb
ljmp
call
into
mov
fsub
xor
cmp
or
adc
cs
xlat
inc
xor
nop
and
test
imul
roll
push
push
jns
jg
mov
cmp
jecxz
ss
xchg
mov
lret
cltd
jge
loopne
sbb
call
enter
mov
or
movsb
add
xor
mov
pop
incb
mov
iret
dec
les
dec
mov
test
mov
add
pop
add
cmpsl
add
js
loope
xchg
call
pop
push
cmpb
add
pop
mov
adc
insb
pop
push
ljmp
inc
mov
xor
add
fdivrl
adc
call
imul
add
in
jb
cmp
mov
enter
nopl
jl
add
mov
mov
push
sti
cwtl
loop
add
add
sbb
out
adc
xchg
xchg
xor
loop
fs
in
andl
add
add
add
in
popa
jae
lock
cmp
xchg
dec
add
das
mov
aas
add
xor
mov
js
inc
cmc
xchg
add
push
bound
add
fsubs
push
nop
cmp
pop
ficoml
adc
adc
orl
addl
xchg
cmpsb
add
fistpll
pusha
outsl
cmp
jb
jp
inc
add
xchg
imulb
push
fisubl
xor
roll
inc
out
mov
adc
lock
jmp
aaa
inc
lods
add
subb
push
xor
outsb
push
cmp
mov
scas
xlat
inc
mov
cli
adc
mov
arpl
push
roll
pushf
out
add
mov
lcall
in
add
jl
mov
cwtl
add
test
dec
data16
inc
out
jg
sti
pusha
int3
nop
cmp
ror
inc
in
mov
cmp
adc
fbstp
add
mov
or
pushf
out
lock
inc
out
mov
cmp
add
mov
arpl
sbb
imul
test
notl
cmp
insl
mov
jge
push
lcall
lods
cmp
xor
add
xchg
icebp
adc
fsubrs
sbb
cmc
xchg
enter
out
jmp
or
lret
add
fists
xor
inc
sub
and
inc
adcb
mov
cmc
dec
add
push
shr
and
and
into
popf
shll
pop
cmp
add
test
mov
lock
fildl
pop
sub
arpl
ja
add
andb
ljmp
je
or
and
mov
lock
aas
nop
pop
push
cmp
pop
mov
xchg
inc
movsl
jo
es
pop
mov
shrl
insb
jnp
ret
sub
pusha
pushf
push
mov
enter
inc
sub
add
xor
and
sub
mov
sbb
rclb
add
in
test
pop
mov
mov
lahf
out
add
fwait
shrl
xchg
sbb
xchg
lock
adc
in
mov
add
cmp
jns
lahf
call
mov
testl
sub
jecxz
push
lock
sbb
xchg
scas
add
add
mov
push
iret
inc
push
test
cli
pop
aad
mov
jo
xchg
mov
in
mov
jne
mov
call
sbb
add
ja
mov
mov
pushf
pop
add
shrl
xor
mov
lea
data16
es
push
xor
add
ret
push
lcall
and
mov
add
sahf
add
ja
lret
mov
add
inc
adc
mov
test
test
lods
int
lret
scas
or
stos
shlb
sbb
add
popl
loopne
add
inc
das
push
add
pushf
ret
fistps
sti
jg
push
out
test
jne
in
sbb
ja
ficoml
sub
jno
jmp
dec
pop
jecxz
and
cltd
frstor
and
jo
cmp
cmpb
xlat
call
insb
xor
out
dec
add
loop
sbb
mov
cltd
inc
pop
and
out
cli
test
add
adc
test
mov
test
packssdw
cmc
and
mov
pop
outsl
pop
dec
cld
aad
dec
add
xchg
rorl
dec
sbb
inc
sahf
adc
daa
jo
mov
xor
cld
sbb
in
mov
adc
lahf
das
in
movb
sbb
or
mov
test
push
in
or
aaa
incl
xchg
pop
mov
call
add
sarl
mov
mov
ja
cld
inc
sbb
int3
add
lods
into
mov
test
jl
add
xor
add
dec
cld
mov
icebp
push
dec
mov
dec
sbb
rcl
ficompl
sbb
fists
in
pop
adc
fnstenv
cmpsb
js
or
lea
pop
gs
mov
push
pop
mov
sbb
jl
sub
jge
jmp
cmp
add
adc
jae
add
inc
xchg
mov
cmp
mov
or
out
ds
adc
add
dec
jnp
xchg
mov
push
dec
sbb
add
stos
adc
es
pop
aam
inc
imul
mov
shr
faddl
fwait
add
cli
gs
lret
lret
add
xor
pop
add
in
mov
mov
mov
mov
rol
sub
pop
lret
adc
jo
jno
xor
loope
mov
add
cmp
push
mov
out
fcom
inc
call
add
add
adc
add
repz
dec
cmp
aaa
imul
ljmp
cld
dec
rcr
repnz
aad
sbb
xchg
je
dec
in
aaa
fsts
mov
add
pushf
jg
add
je
mov
pusha
dec
repnz
add
sub
sub
inc
adc
ljmp
add
sbb
fwait
cmp
mov
add
out
outsl
sahf
pop
aaa
cmpsb
add
scas
call
mov
leave
xor
lods
xchg
add
dec
loopne
add
icebp
popa
pop
pop
lret
add
xor
sbb
push
arpl
push
add
imul
sbb
add
ja
outsl
in
add
ret
push
xor
lods
es
call
mov
cltd
add
add
arpl
xchg
push
and
or
push
add
cmp
cmp
es
and
js
insl
and
pop
stc
roll
push
inc
add
lds
jg
add
call
push
jmp
add
jns
mov
jae
out
in
mov
cltd
sbb
fcmovbe
int
sub
inc
ss
mov
and
push
outsl
fbstp
inc
mov
test
icebp
add
xchg
add
fbld
pop
pushf
test
or
rolb
insl
ss
in
xchg
fildl
call
arpl
les
add
fs
add
popf
aas
jne
and
cmp
add
cs
xchg
sub
mov
addr16
fdivrp
jge
psubusw
enter
popl
mov
add
mov
repz
mov
add
test
hlt
adc
push
or
ja
add
and
and
pop
or
jp
cmp
jmp
mov
neg
lret
add
jb
scas
adc
repz
adc
ret
pusha
mov
cmp
inc
cltd
mov
sbb
mov
incb
cmpsl
pop
dec
xchg
movb
leave
add
push
clc
lcall
std
out
aas
lahf
xor
add
test
int3
fdivp
or
xor
mov
mov
and
mov
sbb
inc
cmpsl
add
push
int
repz
mov
shlb
shlb
enter
add
dec
fcmovbe
and
jg
add
mov
cmp
add
add
or
pop
pusha
sti
cmp
add
lret
mul
andl
popf
movsl
mov
les
pop
std
pop
jmp
sub
dec
rcrb
xchg
inc
fsubs
inc
add
sahf
push
inc
roll
add
rorl
imul
xorb
cmc
cmp
and
daa
aad
add
push
mov
or
add
xchg
stos
adc
mov
loop
arpl
insb
jnp
popl
int
and
cmp
xor
call
lds
add
xchg
shrb
push
lock
dec
lret
adc
xchg
loopne
xor
outsl
js
pop
sub
push
pop
test
and
push
inc
push
pop
fnstcw
call
push
loopne
loope
pop
aad
or
repnz
idivl
fsubs
adc
fldcw
mov
pushf
xlat
std
es
inc
push
add
repnz
xor
inc
es
add
aad
and
ljmp
fmuls
aas
mov
xchg
icebp
ud1
sbb
pop
xchg
add
pop
pop
lret
bound
jecxz
cwtl
loopne
dec
jb
mov
std
lock
lahf
add
in
push
jg
push
inc
rcll
inc
mov
add
pusha
out
jp,pt
sbb
inc
cmp
test
sahf
add
clc
repz
pushf
dec
add
or
push
stos
jnp
push
mov
pop
pop
cmp
push
inc
stc
mov
push
and
ret
cmp
mov
and
fsubrl
add
repnz
icebp
push
in
mov
jbe
mov
inc
sbb
add
xchg
add
xor
mov
or
pusha
fimull
ljmp
fcom
int3
jge
add
sbb
add
sbb
add
inc
mov
add
xlat
push
dec
or
add
in
adc
popa
dec
xorb
push
fistpll
inc
nop
test
pop
xchg
test
jae
add
sbb
rcrb
ret
cs
push
pop
add
lret
add
stc
add
flds
xor
fiadds
pop
aaa
leave
shrb
ja
or
push
or
cmp
cmpl
fucom
sbb
cltd
rclb
add
loop
and
sbbl
mov
flds
roll
fsubrs
notl
sub
inc
mov
jo
or
push
inc
adc
push
lock
add
mov
adc
cmp
stos
pop
sub
arpl
cmp
enter
push
dec
notb
movsl
add
mov
sahf
rorb
add
push
push
lods
inc
outsb
jo
add
pop
lahf
andb
sahf
fwait
adc
div
add
cs
add
clc
push
fwait
sub
pushf
fildl
mov
pusha
ss
sbb
jno
add
adc
movsb
or
or
push
cmp
popf
xor
add
and
inc
sti
pop
dec
sbb
inc
lds
repz
and
pop
cmpsb
rcl
sbb
mov
mov
add
mov
das
jno
jo
add
pushl
lds
int
dec
stos
or
dec
dec
cwtl
push
nopl
cwtl
pop
dec
aad
add
test
lcall
mov
adc
iret
ja
add
jo
int
popf
sub
sahf
add
in
or
mov
sbb
mov
out
dec
xchg
add
dec
mov
or
mov
cmp
inc
mov
sbb
mov
js
movsb
jns
fcmovu
imulb
frstor
roll
sub
jae
add
sub
fiaddl
adc
pop
sub
xor
sbb
notl
in
jle
shlb
or
pop
es
pop
adc
add
add
add
xor
jne
adc
and
sub
notb
push
cmp
filds
xchg
xchg
add
scas
loopne
es
inc
outsl
or
pop
adcl
sti
scas
shrd
cmpsb
mov
add
xlat
mov
add
call
js
adc
rorb
repnz
insb
out
lock
push
or
mov
add
ds
call
loope
pop
push
xchg
push
adc
pop
insb
pop
std
lods
and
sub
ds
push
add
sbb
sub
or
dec
pop
sub
mov
nop
data16
and
das
cmpsl
adc
xchg
add
decl
rorl
dec
push
lahf
jo
test
dec
cmc
lret
inc
mov
mov
add
lret
fsub
add
ja
sub
sahf
out
aam
xchg
jp
push
je
push
xor
in
js
adc
inc
adc
jg
add
scas
push
adc
xor
add
sub
xchg
movsl
cwtl
and
add
mov
jg
fstpl
add
push
jp
lea
mov
add
add
popf
add
repz
sti
dec
pop
add
adc
mov
cmc
mov
sbb
nop
add
cmp
dec
pop
lock
jne
add
mov
test
rcrb
nop
in
imul
xor
pop
add
dec
aad
mov
add
les
loop
les
hlt
add
xchg
jne
pusha
hlt
bound
movsl
fbld
add
sub
mov
inc
sbb
cmp
fisubs
ja
push
scas
inc
push
negb
pop
xor
jns
cmp
or
cld
add
inc
pop
fst
out
stos
add
cmp
xchg
add
cltd
fimuls
fistpl
lea
dec
sbb
cmpsl
pop
jg
add
add
dec
pusha
cmpsb
push
add
mov
lds
nop
inc
cld
cmp
add
xchg
adc
sbb
cmpsl
adc
add
sbb
es
mov
add
cs
jno
push
or
lds
mov
jecxz
jge
add
and
js
cld
repnz
pop
cmp
das
pop
add
pop
jae
les
mov
sarb
fisubl
nop
push
xchg
pop
es
adc
fiadds
jg
scas
movsl
sbb
mov
add
cmp
or
add
ret
dec
setae
mov
add
repnz
add
je
adc
test
adc
addb
and
add
jo
inc
add
xchg
arpl
jne
jp
jb
ss
add
and
lods
cwtl
sbb
jp
daa
ljmp
sub
dec
repz
sub
lock
jmp
lahf
add
shl
fwait
add
push
int3
pop
out
mov
ja
and
mov
mov
push
add
ljmp
rorb
cmpl
and
xchg
push
add
stos
sbb
loope
push
test
adc
push
xor
sahf
add
roll
jo
push
xchg
hlt
ret
and
nop
and
add
int
jp
aam
stc
rorb
rcrb
mov
add
or
cli
mov
sbb
addr16
add
imul
test
lret
scas
inc
xchg
xchg
subb
mov
pop
rcr
js
mov
jb,pn
int3
or
add
jmp
inc
push
mov
mov
popa
add
lret
pusha
xlat
insl
and
dec
fistpl
sub
lret
rcrl
sub
push
and
insb
adc
hlt
add
pop
inc
cltd
fidivrl
add
push
mov
nop
jbe
jp
icebp
push
sub
jae
cs
mov
popf
push
pushf
out
sbb
jmp
sbb
mov
sub
cmova
mov
or
mov
mov
loope
xor
and
xor
test
imul
sbb
push
ret
ljmp
ds
subb
add
iret
push
outsb
nop
pop
xchg
call
lea
and
adc
xchg
lret
pop
inc
in
loope
add
xchg
xor
jo
sbb
mov
mov
icebp
pop
or
pop
lahf
inc
rclb
repz
ljmp
and
mov
leave
clc
call
add
fnstcw
cmpsl
jge
add
mov
aam
mov
cltd
stc
adc
push
ljmp
inc
cwtl
aam
or
sbb
aam
dec
fwait
les
shld
mov
add
das
aaa
add
cmp
sbb
adc
dec
xor
xchg
xor
ss
shlb
pushf
cmc
loop
add
pop
jns
out
add
insb
call
adc
jbe
add
hlt
dec
xor
mov
add
gs
push
lret
cmpb
adc
jp
adc
enter
and
adc
inc
push
mov
jb
xchg
add
xchg
or
mov
das
or
lret
dec
repnz
loopne
or
pusha
mov
pop
imul
add
fidivl
add
iret
and
add
pop
hlt
xor
je
pop
push
add
push
sub
icebp
or
xor
push
pop
or
adc
repnz
cmp
pop
test
add
mov
test
xchg
repnz
mov
ffreep
popf
lods
cmp
popa
addr16
stos
jg
add
std
lods
movsb
adc
mov
xchg
loop
fidivs
add
and
mov
mov
add
inc
icebp
mov
pop
sti
in
xchg
lcall
xor
or
push
call
add
repnz
test
mov
mov
outsb
je
dec
adc
jle
cmc
fistl
mov
xor
lds
lcall
mov
push
mov
push
cmpsl
enter
xor
roll
xchg
dec
add
aaa
js
adc
shrl
xchg
sbb
adc
and
mov
enter
test
pop
call
jge
out
cwtl
fs
sarl
ror
fstpl
adc
push
add
sbb
pop
cmp
xlat
decl
mov
popf
repz
adc
icebp
jb
shlb
pop
int3
gs
fisttpll
inc
test
fisubs
push
mov
inc
rolb
mov
iret
push
popa
mov
xorl
out
shlb
mov
add
in
mov
or
test
inc
nopl
cmp
add
outsb
repnz
or
jb
jmp
lods
dec
xchg
in
mov
mov
add
sbb
cmp
jne
add
sahf
dec
adc
add
cmp
or
aas
cmp
cmc
arpl
cltd
push
dec
lcall
mov
sahf
dec
repnz
cmpsl
ficoml
adc
scas
mov
mov
add
and
je
push
cli
add
cmpsl
mov
and
mov
sbb
mov
add
pop
int3
cmp
inc
clc
les
mov
jmp
push
fdivrp
std
mov
dec
cs
pop
nop
xorb
sbb
jle
ja
add
ljmpw
push
add
xlat
push
xchg
das
lahf
and
hlt
dec
inc
es
addl
lar
popa
sub
add
xchg
add
adc
mov
cmc
dec
loope
push
inc
in
add
daa
dec
pop
xchg
jge
or
loop
pusha
xor
testb
or
inc
adc
sbb
adc
dec
aam
and
cmpb
sbb
push
mov
in
xor
data16
fnstcw
jp
cmp
clc
pushl
outsb
cmp
or
mov
xor
add
rorb
dec
mov
xor
sbb
mov
out
sbb
ds
outsb
in
push
cmp
test
int3
jnp
mov
in
pop
pop
sub
cmpsb
push
add
shl
cmc
sbbl
popa
sub
pop
cwtl
pushf
add
fcmovne
fyl2x
rolb
mov
pop
mov
xchg
repz
lcall
sub
leave
jnp
or
add
rcrb
mov
pop
cmp
fwait
add
rol
rorl
js
xchg
ljmp
jne
mov
sbb
hlt
jnp
cltd
cwtl
add
inc
add
das
inc
or
in
add
stos
test
pop
int
inc
inc
or
inc
rcrb
ret
xor
and
or
or
jb
sbb
jo
or
or
andb
int3
add
imul
int
stc
add
popf
leave
or
cwtl
das
sub
in
les
daa
cmp
push
dec
sub
sbb
xor
lcall
pusha
mov
add
in
nop
ss
int3
fsubrs
push
jg
in
add
lods
les
mov
pop
sub
mov
subb
xor
pushf
mov
sti
movsl
inc
lea
adc
sub
push
subb
repz
mov
mov
fistpl
push
fs
add
xor
ret
xchg
inc
push
sbb
fsubrs
sub
cmp
aam
mov
sub
lret
jp
jl
and
pop
push
inc
icebp
gs
mov
dec
or
in
addr16
add
imul
or
add
add
and
add
jmp
mov
arpl
cmp
inc
ret
lret
xchg
push
push
add
imul
jns
lahf
push
cld
cmp
cmpb
cwtl
xor
add
and
adc
cmpsl
or
inc
ror
mov
push
outsb
out
cmp
add
call
jge
pop
cld
add
and
mov
mov
xchg
testb
dec
mov
lock
mov
ljmp
or
cli
iret
mov
scas
push
cli
mov
adc
and
sub
nop
or
cmp
sub
add
and
ret
push
push
lds
enter
popl
mov
xlat
imull
xchg
mov
xchg
jne
ss
loopne
aas
test
in
xchg
lock
les
rorl
inc
xchg
cmp
fbstp
and
sub
mov
sub
mov
sbbb
jb
adc
jno
add
sub
repnz
add
cmp
sbb
mov
jbe
sub
loope
cmp
data16
mov
xor
jns
push
hlt
xor
xor
fcomip
ret
push
loopne
cmp
sbb
inc
stos
xor
std
add
mov
cmp
shlb
pop
cmp
sbb
push
xor
push
dec
jmp
in
pop
int3
dec
scas
and
cmp
sbb
or
jp
xchg
cwtl
mov
jo
sarl
cltd
xor
stc
flds
insb
pop
xorb
sbb
adc
add
jge
jmp
dec
nop
cmp
or
das
xchg
stos
adc
enter
lock
adc
mov
out
xchg
push
fildll
xchg
stc
xor
sbbb
out
sbb
pop
add
lds
pop
fildl
inc
ret
popa
pusha
into
cmpsl
ret
push
cwtl
sbb
int
sahf
cmp
sbb
pop
sbb
sbb
add
bound
and
cmp
mov
xlat
add
add
push
dec
gs
nop
sbb
dec
or
inc
jle
sbb
fs
jbe
imul
jp
fisttpll
outsb
gs
and
gs
sbb
aas
dec
adc
and
test
lcall
mov
pusha
xchg
or
test
xchg
cmp
inc
and
inc
push
dec
push
data16
inc
and
dec
pop
jle
add
int
and
cld
inc
xchg
add
fst
pop
lea
cmp
lds
add
or
and
inc
push
test
jmp
aas
pop
xchg
rclb
jl
add
cmpsb
pop
add
add
mov
ss
mov
punpckhdq
inc
add
rolb
test
arpl
jle
out
mov
sbb
add
inc
cmp
inc
pop
loope
jo
dec
jb
sbb
and
out
or
inc
jle
imul
pop
push
pop
data16
cmp
adc
mov
adcb
push
int
imul
pop
push
push
push
stos
loope
rolb
and
js
push
shlb
and
push
clc
or
nop
mov
jae
adcb
cmpsb
insb
push
lret
pop
lods
repnz
scas
test
pushf
outsb
leave
add
and
mov
pop
mov
ffreep
jmp
fstps
mov
leave
orl
cmpb
sub
jno
ror
inc
clc
add
adc
mov
gs
clc
pop
psubsb
cld
sbb
push
lahf
sbb
jnp
int3
cmc
inc
add
or
add
lods
mov
loope
jp
and
sbb
in
into
sar
dec
xchg
sahf
add
pushf
rclb
nop
lock
lea
mov
rol
lret
and
or
nop
neg
add
repnz
and
mov
push
in
pushf
pusha
rcrl
int3
lea
mov
mov
jnp
inc
dec
gs
inc
and
addl
add
adc
in
xor
sbb
dec
lds
arpl
xorb
pushf
out
xchg
js
dec
test
push
and
or
stc
xchg
out
xchg
sub
sbb
movsl
sbb
sbb
call
and
push
aas
mov
or
or
or
pop
scas
enter
gs
mov
xorl
dec
xor
adc
xchg
push
push
aam
mov
add
xchg
mov
mov
pop
mov
ljmp
je
mov
inc
int3
cs
or
cli
in
jno
xor
out
pusha
repnz
stos
lahf
lea
test
push
lock
inc
mov
and
and
loopne
leave
sbb
inc
movsl
inc
in
pop
cld
ljmp
mov
add
ret
jp
cmpb
push
inc
or
push
or
fstl
fdivrs
cld
rolb
pop
pop
mov
and
into
lret
add
icebp
mov
sbb
test
pushl
rcrb
sub
in
in
fisubl
xor
sbb
mov
mov
in
or
adc
pusha
popl
or
cmp
pop
dec
or
or
or
sub
pop
push
sbb
test
mov
xchg
xchg
sub
js
orb
stos
out
rorl
add
jae
cli
stos
jecxz
push
xor
inc
test
inc
sub
or
inc
and
data16
loop
lock
sbb
ss
out
adc
add
sbb
lods
sub
out
cmc
push
popa
cli
xor
rep
add
int3
and
and
test
loopne
addr16
sbb
xor
push
inc
aam
or
popf
cmp
or
jg
roll
mov
xchg
in
xchg
jl
dec
inc
mov
mov
and
and
and
mulb
sub
or
add
pop
xchg
jae
lcall
sahf
fyl2x
out
outsb
out
adc
lcall
push
mov
xor
xchg
pop
mov
mov
dec
mov
dec
cmp
mov
ss
ficoms
nop
add
fildll
pusha
inc
cmp
add
js
dec
or
jp
jne
mov
add
std
test
and
cmpsb
loop
imull
and
or
inc
add
ret
test
test
les
in
mov
mov
adc
in
xchg
sbb
clc
jmp
xor
daa
das
pop
add
aam
aas
jb
add
push
adc
xor
jmp
xchg
pop
add
test
ss
adc
lock
and
in
loope
adc
add
rclb
imul
dec
xchg
loope
pop
add
or
add
bound
mov
aaa
js
add
movsl
sti
jmp
jns
push
add
das
xchg
ds
loopne
mov
and
inc
mov
std
mov
pusha
sbb
xor
sbb
jns
in
ret
rolb
jp
lds
in
jno
subb
add
xchg
push
das
jge
add
movsb
and
inc
mov
ret
je,pt
fnstsw
cmpsl
jg
adc
mov
push
xchg
sub
out
cltd
jne
sbb
testb
sub
out
add
cmp
sarl
sbb
cli
mov
or
pop
js
add
or
pop
and
mov
ret
fadds
mov
inc
les
dec
notl
out
mov
add
or
pop
dec
test
sub
adc
add
mov
mov
cs
pushf
insb
cmp
mov
popf
xlat
cltd
mov
rorl
inc
xor
out
and
and
inc
cmp
sub
push
mov
pop
xor
aas
fs
inc
adc
mov
mul
add
stos
add
pop
cli
cmp
add
sbb
sarl
inc
add
push
xchg
mov
lods
jns
pop
sbb
add
repnz
xchg
pop
dec
dec
add
insl
ret
push
add
push
add
mov
scas
fwait
je
repz
in
mov
push
push
addr16
mov
call
fwait
in
xor
add
or
ret
add
adc
xchg
jno
add
cld
add
jmp
clc
in
pop
ret
and
adc
adcb
loopne
jle
cmp
rcrb
add
xor
and
sbb
mov
lahf
mov
inc
sahf
les
and
insl
leave
add
push
in
sub
xchg
dec
xor
rcl
push
outsb
mov
fisubrs
add
test
adcb
sbb
lcall
mov
inc
int3
hlt
negb
pusha
bound
add
imul
xor
es
jne
add
movsb
test
sub
adc
dec
mov
jle
and
xor
aad
aaa
aas
dec
add
ret
stos
adc
iret
je
cmp
jl
push
jnp
movb
outsl
pusha
test
lods
lahf
dec
push
fisttpl
inc
add
int
xor
ja
adc
sub
xor
mov
push
sbb
xchg
push
mov
push
aas
add
xorb
addb
xchg
push
idiv
push
lods
cmp
adc
sub
cmc
cmp
mov
cmp
cmp
cmc
xlat
mov
and
sub
fmull
cmp
inc
lret
sbb
es
imul
faddl
movsl
or
ja
jge
push
add
hlt
cmp
and
mov
push
sub
mov
movsl
jl
mov
movsb
rcrl
inc
sub
jp
inc
and
cltd
or
pslld
add
out
dec
pusha
mov
rolb
mov
sbb
andb
mov
pop
jg
add
out
cmc
xchg
jbe
bound
add
dec
mov
add
lcall
add
adc
push
cli
push
out
sbb
cmpsb
push
jae
mov
in
cmp
add
push
bound
add
xchg
cltd
int3
in
lea
mov
jle
test
sub
jne
aad
add
mov
pop
push
push
xor
iret
push
fdivs
add
out
mov
movsb
clc
test
cltd
sub
pusha
repz
sbb
jbe
fwait
lods
adc
out
mov
pop
js
inc
inc
push
and
cs
add
xchg
push
pop
and
xchg
jecxz
fimull
xor
pop
adcb
add
mov
mov
dec
cmp
pop
sub
pop
lods
into
inc
addb
sub
adc
xchg
cwtl
jno
loopne
cmp
inc
mov
repnz
dec
js
mov
add
fisttpl
add
xor
andb
jbe
shll
test
sub
jle
add
cwtl
pop
push
xchg
dec
aas
out
hlt
cmc
lahf
test
sbb
jmp
add
or
mov
cld
loopne
data16
jnp
dec
je
add
insb
sub
daa
int
ror
mov
jb
add
sbb
bound
loopne
std
add
idivl
inc
icebp
shlb
ss
push
cmp
add
add
in
jl
mov
dec
cld
hlt
add
mov
xchg
cmp
sub
mov
pop
out
sub
inc
cmp
add
xchg
fisubl
cs
mov
add
rolb
stos
mov
or
pop
add
adc
jo
add
cli
aas
push
sub
imul
add
cmp
jecxz
fcomps
movl
shll
push
push
lret
mov
mov
adc
loope
dec
repz
jg
jmp
cwtl
rorl
jb
andb
cltd
cmpsl
insb
jne
push
add
xchg
cwtl
pop
fs
rolb
cs
mov
add
jno
fstl
dec
mov
add
add
shrb
sti
jp
ficompl
jg
cmp
lods
add
icebp
les
inc
and
mov
sbb
add
lods
jo
push
add
cmpsl
out
xchg
loopne
inc
mov
add
jns
data16
es
or
rcll
mov
or
leave
add
adcb
fwait
add
xchg
mov
pop
mov
jne
cmpsl
mov
mulps
or
rolb
sbb
inc
lss
ja
sbb
aad
and
aas
xchg
sbb
or
imul
sub
cltd
sbb
pop
movsl
add
mov
je
daa
pop
sub
sahf
push
jl
mov
jns
jmp
and
sub
cmp
test
repz
ret
dec
cmpsb
repnz
or
cmp
aaa
mov
mov
testl
jmp
and
in
popf
xor
shl
add
sbb
sub
icebp
pop
sub
add
dec
fwait
decl
mov
inc
inc
hlt
add
sbb
sbb
and
popf
push
orb
pop
jecxz
inc
and
dec
imul
bound
xchg
xor
add
pop
outsl
adc
in
xchg
movsb
aam
movsl
jnp
push
push
sub
fsqrt
into
inc
movsb
push
popa
jno
add
call
adcb
jmp
xor
out
mov
loopne
imul
sub
inc
mov
jge
add
dec
push
dec
movsb
add
scas
daa
and
fst
sbb
cmpsl
jns
imul
pop
xchg
dec
mov
mov
jmp
int3
cltd
push
rcrb
cld
add
lods
fstpl
add
testl
jae
lock
lret
add
xchg
xor
push
and
outsl
inc
nop
jb,pt
call
jne
push
mov
jae
mov
dec
negl
xchg
adc
dec
cmp
or
and
arpl
cltd
nop
out
add
mov
test
add
lahf
gs
sub
add
push
mov
pop
inc
mov
and
push
inc
psrld
add
leave
popf
dec
or
test
cmp
push
push
stos
pop
dec
dec
sbb
jg
outsb
scas
testl
pop
xor
mov
add
cmp
and
jmp
jle
add
inc
push
subl
cmp
xchg
and
mov
lea
sbb
mov
mov
jg
push
into
add
hlt
fidivs
sbb
cwtl
and
test
dec
jp
add
mov
adc
mov
jmp
scas
or
and
mov
add
and
or
loopne
xor
out
psllw
and
in
shl
xor
addr16
out
mov
aas
cmc
cwtl
adc
lock
add
dec
scas
mov
add
push
push
adc
cmp
add
shrb
push
int3
in
inc
pop
dec
cmp
sahf
or
mov
pop
or
leave
inc
outsb
ja
bnd
add
rclb
mov
push
add
out
je
daa
js
mov
add
pop
mov
mov
pop
add
rcrl
ret
loop
mov
dec
addl
add
lret
mull
sub
aam
cld
jmp
add
out
into
dec
pop
dec
call
push
sub
pop
rol
ja
sbb
add
popa
mov
cmp
sub
pop
or
test
lahf
pusha
subb
pop
lea
js
scas
inc
jnp
inc
mov
add
insl
xor
movsl
arpl
push
scas
xor
mov
add
cmp
in
add
inc
test
xchg
push
xchg
hlt
dec
and
mov
jl
sti
lock
fs
jo
add
push
pop
imull
das
cvttps2pi
add
mov
xchg
add
js
mov
dec
add
int
jg
jge
repz
push
mov
xchg
add
ds
jle
xlat
lods
or
xchg
or
adcb
fdiv
add
les
int3
orl
data16
cwtl
add
into
mov
pop
inc
xchg
xor
lods
pusha
out
rolb
mov
add
adc
cmp
jg
orb
jo
nop
push
add
xor
cmp
dec
test
imulb
dec
dec
add
jb
mov
push
dec
cmp
bound
adc
jl
mov
orl
addl
push
lods
lret
pop
cld
xor
mov
in
jl
repnz
out
or
imul
decb
pusha
dec
outsl
in
pop
ja
add
or
add
lock
ljmp
push
mov
jnp
add
jl
push
mov
shlb
sbb
loop
lcall
push
lahf
push
add
insl
xchg
imulb
mov
aaa
sub
adc
sbb
je
add
sbb
inc
sahf
add
cmp
adc
adc
mov
add
scas
jnp
mov
sbb
ja
and
pop
mov
aam
js
xlat
mov
xchg
push
add
inc
pop
fdivs
add
adc
pusha
sub
mov
add
jl
inc
add
fucom
repz
iret
xorl
sbb
add
sahf
adc
pushf
mov
cmpsb
xchg
test
aaa
dec
jae
pop
ljmp
cli
dec
cmp
inc
or
pop
pop
and
imul
daa
loop
mov
add
shlb
sub
subl
dec
xchg
int3
nop
stc
cmp
add
mov
cmp
fiadds
adc
ffree
sbb
cmc
out
lods
add
adc
adc
dec
rorb
add
enter
cmc
dec
add
sbbb
add
in
sub
push
cmp
mov
iret
loop
mov
shr
sub
sbb
je
add
out
mov
add
sub
fcoms
sbb
ja
jnp
add
clc
cmp
add
pop
add
aad
push
loopne
sub
xchg
adc
add
mov
adc
mov
pop
aaa
or
sbb
inc
xlat
and
cwtl
roll
push
dec
lds
mov
push
orl
sub
pop
sbb
push
xchg
adc
loopne
dec
xor
scas
jne
out
add
loop
not
into
add
pop
jl
and
mov
pop
sbb
icebp
sbb
addl
rorb
add
insb
call
add
jae
adc
add
vmovapd
xlat
or
out
xor
or
pop
scas
pop
push
sahf
xchg
das
pusha
mov
mov
add
xchg
jb
lods
lret
jno
cmp
popa
dec
adc
sbb
dec
jnp
add
icebp
sti
add
cmpsb
pop
pop
sbb
aas
in
data16
adc
or
pop
push
jg
test
aas
inc
mov
ret
mov
cmp
addl
sub
sarl
mov
lret
int
aam
rolb
into
add
test
and
stc
push
push
arpl
sbb
jecxz
repnz
shlb
and
stos
push
psubd
lea
sbb
cmp
xchg
aas
adc
mov
arpl
imul
sarb
mov
loopne
jae
add
fildll
hlt
call
fnstcw
dec
ficompl
push
loope
inc
xor
cmpsl
inc
add
mov
inc
pop
jg
sub
insb
test
pop
push
sar
scas
clc
stc
movsb
inc
shr
hlt
inc
pop
fildl
sub
push
lds
shlb
cmp
orl
lock
add
aam
test
pop
push
ja
add
inc
or
sub
mov
jge
mov
sbb
scas
insb
push
int
xorl
xor
stos
add
stc
addb
mov
or
jne
or
add
cs
rcr
mov
push
or
gs
add
mov
lock
xor
insl
clc
mov
xor
xchg
cs
adc
fbld
jp
mov
push
dec
adc
fstps
mov
add
lea
push
add
xor
loop
rorb
ret
subb
fcmovne
loopne
push
into
cmp
jae
test
inc
inc
scas
xchg
movsl
dec
lcall
inc
add
push
add
add
pop
sub
add
jge
pop
scas
lret
xor
mov
data16
stc
rclb
scas
push
mov
jae
adc
dec
add
jno
inc
inc
sub
mov
cmp
lock
nop
dec
push
mov
data16
push
add
lahf
sbb
push
cltd
adc
mov
add
inc
cmp
push
add
jns
pushf
sbbb
add
mov
sbb
add
clc
mov
aam
das
repnz
shrl
add
out
mov
aaa
cltd
ret
add
fnsave
push
mov
js
dec
xchg
aaa
fildl
fucomp
xor
cmpsb
jle
pop
adc
dec
daa
in
lahf
nop
rolb
adc
inc
mov
stc
adc
fdiv
push
jne
frstor
pop
enter
adc
adc
add
int3
xchg
jmp
mov
inc
rorl
jae
jmp
sti
test
mov
cmp
xorb
bnd
lods
jp
fsubr
mov
push
out
cmp
leave
insl
add
mov
jbe
pop
inc
push
inc
pop
cmp
roll
sbb
test
push
stos
pop
or
int
popa
mov
pop
jae
stc
pop
lcall
sub
sub
add
adc
fisubrs
push
push
leave
mov
cmpsb
and
mov
dec
out
movd
and
lods
fs
xchg
add
test
ss
mov
or
xchg
push
cmp
sbb
and
pusha
in
inc
enter
pop
push
aam
inc
orb
cli
fcomi
pop
xor
push
dec
pop
add
enter
jbe
adc
int
orb
add
imul
pop
or
xor
pop
and
pop
outsb
dec
bound
pop
add
mov
add
fs
lahf
sbbl
and
adc
outsl
or
movsb
add
data16
xor
popa
add
inc
pusha
addb
xchg
in
push
mov
js
adc
push
inc
jne
add
repz
cmpsb
cmc
add
pop
adc
push
push
rcll
inc
loop
inc
int
outsb
nop
test
and
push
in
mov
jecxz
add
lret
sbb
cs
cmpl
cmpb
cmpsb
out
fldl
rorl
aaa
ljmp
adc
arpl
out
mov
cmp
sahf
inc
sub
add
dec
push
sbb
mov
stos
jno
add
daa
pop
mov
add
sarl
out
xchg
xorb
fisubs
mov
sub
mov
cmp
add
sbb
xchg
addl
stos
add
imul
mov
sbb
cwtl
inc
insl
cmp
add
jg
jae
cmpb
dec
add
es
push
jge
add
dec
sti
cmc
add
mov
jne
xlat
loope
push
mov
stos
pusha
push
mov
and
int3
xlat
sahf
addr16
adc
pop
jno
add
dec
stos
add
fisubrs
lods
scas
in
jno
mov
fdivrl
call
adc
adc
shll
lods
add
jns
pop
stc
cwtl
sbb
jg
add
loopne
rcrb
loope
pusha
cmp
jmp
les
call
add
mov
jl
push
cmp
loop
testl
fwait
or
adc
mov
pop
dec
sbb
addb
adc
in
inc
and
push
into
add
int
jbe
dec
adcl
idivb
dec
sub
rolb
fcompl
fcomp
scas
lds
sbb
push
shr
or
add
xchg
mov
sub
cmp
es
jge
mov
add
test
pop
fidivrl
sub
dec
les
add
pop
push
add
sbb
mov
cld
rol
sub
jmp
dec
pop
in
repnz
mov
aad
or
push
adc
inc
int3
mov
inc
pop
mov
jl
add
inc
mov
mulb
test
jns
rcrb
pop
out
ret
adc
inc
faddl
and
or
adc
fimuls
sti
loopne
lods
out
push
mov
in
xor
nop
jo
testb
add
addb
jmp
pop
enter
cmpsl
addl
jmp
sbb
cmp
mov
sbb
insb
add
push
imul
dec
mov
test
sbb
cmpsb
imul
pop
shlb
and
inc
xchg
add
mov
cmp
push
and
cld
sbb
sbb
inc
adc
test
in
addl
mov
adc
add
add
mov
loope
mov
lds
mov
cmp
incl
xchg
test
adc
xor
add
mov
stc
ficomps
jne
loop
nop
sbb
add
xchg
in
flds
enter
jecxz
call
cmpb
pop
imul
andb
xchg
add
inc
mov
rorb
dec
in
add
pop
xchg
repnz
push
fcoml
daa
or
push
cmp
or
ds
mov
add
popf
js
das
in
aaa
add
push
std
pusha
push
cmp
or
ss
mov
xchg
pusha
sub
jp
pop
inc
lock
xchg
add
bound
test
mov
or
ja
jne
notl
sub
xchg
or
adcb
add
ss
lret
inc
out
cmp
fstpl
nop
jg
loope
inc
mov
sub
ficoml
jo
mov
push
mov
jge
add
sub
ds
add
and
xchg
add
adc
lods
pop
xor
int3
sbb
jno
sub
out
or
and
add
or
dec
sbb
push
inc
nop
add
stc
mov
das
xor
leave
add
push
decb
mov
enter
add
xchg
lods
addb
sbb
add
mov
in
int
xor
add
ret
in
lret
adc
xchg
sbb
dec
push
sti
mov
and
sbb
dec
xchg
test
add
xchg
push
xor
aas
pop
and
jmp
orl
adc
fidivrs
xchg
xchg
imul
jb
mov
and
dec
aaa
jne
sti
mov
rcll
xchg
push
clc
mov
mov
sbb
mov
sbb
orb
fsubrs
ss
add
add
fwait
pop
jo
test
in
pop
aad
cmc
mov
or
jl
scas
inc
add
pop
popa
mov
insb
addr16
int3
addb
out
sbb
loopne
mov
clc
js
ja
inc
cmp
xlat
stos
les
pop
jecxz
cmpsl
add
rcll
orb
jmp
mov
ret
inc
sub
inc
outsb
add
testl
rolb
cli
mov
lods
je
jo
add
movsl
sub
or
ds
pop
add
in
push
addl
inc
out
test
shll
hlt
test
push
in
aaa
sub
fld1
jnp
fcoms
dec
xor
cmpsb
inc
loop
icebp
inc
pop
ljmp
dec
stc
push
mov
aaa
add
xchg
lock
les
add
push
test
nop
rolb
fidivrl
mov
call
mov
add
inc
lret
mov
push
popl
fwait
mov
dec
add
mov
fst
push
adc
cmp
mov
push
nop
fadds
icebp
sub
mov
dec
add
jge
mov
call
outsl
pushf
rorb
lock
pop
cltd
pop
pusha
mov
pusha
dec
nop
push
daa
rcll
mov
in
aad
lds
cmp
jo
or
inc
std
push
lock
inc
loope
xorb
aaa
out
add
cwtl
shrb
add
mov
lods
je
iret
lea
add
dec
jg
mov
add
jne
mov
fcmovne
inc
pushf
rorl
cmp
mov
mov
sbb
in
and
jne
add
mov
inc
std
pop
int
popf
add
mov
aaa
add
lock
jmp
jb
or
outsl
lods
scas
call
movsl
push
xchg
inc
cwtl
cli
cmpsb
fld
add
daa
fdivs
je
arpl
hlt
mov
ljmp
inc
mov
in
mov
inc
cvtdq2ps
popl
mov
xor
push
std
sbb
xorb
mov
sub
push
jae
jle
or
out
jo
mov
xchg
test
and
mov
add
hlt
stos
out
and
add
aas
add
jne
xor
lcall
imul
jns
push
cld
push
jmp
inc
sti
jmp
insl
out
int
loope
mov
and
pop
inc
add
or
xorb
sti
loopne
mov
ficoml
adc
add
cmova
add
scas
adc
jmp
bswap
jecxz
mov
push
add
pop
into
in
jl
sbb
add
add
mov
rcrb
aas
jne
or
fisubs
pop
or
push
loop
movsb
sbb
cmp
test
jmp
test
stc
push
mov
add
xchg
jp
icebp
cmc
nop
popa
add
jle
adc
mov
out
xor
add
stc
dec
fs
mov
xadd
mov
mov
cld
clc
and
jecxz
sub
sbb
scas
add
mov
sub
add
xor
adc
dec
sub
stos
or
in
out
sbbb
inc
pop
inc
call
add
das
lock
add
push
inc
imul
xchg
add
ret
mov
movlps
pop
out
sbb
jmp
sub
subl
adc
mov
ds
les
jbe
xchg
add
xchg
mov
notl
aas
cmpb
add
cltd
sbb
xchg
push
sbb
pusha
mov
push
stos
aas
test
shll
jne
mov
push
stc
sbb
xchg
sbb
inc
incl
sbb
mov
add
and
sub
icebp
cmp
stc
ds
daa
das
add
add
fstpt
inc
or
mov
ret
adc
inc
or
jl
inc
addr16
cmp
mov
enter
test
ss
adc
inc
push
mov
push
movb
mov
call
adc
adc
stos
mov
fucom
repnz
enter
mov
add
stc
dec
into
push
sbb
xor
shrl
popf
sbb
push
mov
pop
sti
mov
xor
subl
add
lock
add
sub
ljmp
jo
cmp
sub
push
or
push
adcb
xchg
lahf
add
aas
shlb
sbb
xor
mov
add
je
paddsb
sub
idivl
pop
rcl
or
mov
jbe
or
sub
enter
sub
aam
shr
shr
aas
in
pop
dec
xchg
inc
loop
or
bound
mov
sbb
lcall
cld
adc
je
mov
dec
js
stos
add
mov
or
movsl
test
jl
add
lods
imul
or
and
scas
stos
clc
mov
push
sbb
xor
push
loop
or
add
mov
cltd
add
jg
test
add
add
mov
mov
push
repnz
or
add
add
mov
xor
add
ja
fidivl
pop
cmpsl
push
roll
mov
mull
shlb
add
mov
cmpsb
push
xor
lahf
add
out
sahf
mov
mov
lods
negl
aaa
lret
add
int3
sbb
add
shlb
or
mov
mov
push
adc
mov
sbb
cmp
test
adc
or
push
and
jns
pop
inc
add
dec
jl
adc
add
sbb
je
adc
ret
push
out
dec
out
mov
xor
imul
xchg
mov
rcll
mov
sub
inc
hlt
stc
cmp
leave
add
cmp
ss
xchg
enter
sbb
scas
mov
fimuls
pop
shlb
pop
fwait
push
mov
pusha
dec
int3
mov
cli
dec
jl
adc
inc
sbb
arpl
pop
cmp
hlt
sbb
and
mov
add
aam
loopne
mov
mov
and
pop
push
xchg
arpl
sbb
out
add
pop
ret
mov
call
rcll
pushf
dec
dec
mov
inc
clc
fwait
aas
xchg
out
adc
cmpsb
jns
cmp
add
inc
int
shll
jg
sub
call
add
imull
test
cli
xchg
outsl
and
xor
insb
cmpsb
push
mov
inc
push
cmpsb
mov
out
stos
adc
sbb
jo
xchg
mov
pop
xor
sbb
shrb
cmp
jbe
add
aam
imul
push
xor
inc
jg
loopne
inc
sub
jle
mov
add
push
dec
rolb
cmp
jmp
cmp
mov
js
sbb
ja
xchg
mov
lods
jmp
punpckhbw
pop
push
or
stos
fbld
add
dec
test
into
and
mov
insb
and
sub
adc
add
aas
push
pop
and
pushf
roll
jge
mov
jle
dec
add
jb
lods
add
hlt
and
or
dec
int
and
jnp
pusha
loope
xchg
sarl
lea
es
sub
cmp
cmp
orps
and
push
sub
mov
sbb
pusha
add
xchg
adc
sbb
ret
mov
mov
cmp
cmp
push
and
adc
dec
mov
pop
fistps
push
test
cmc
xor
rclb
cld
push
add
xchg
mov
or
sub
inc
add
jecxz
jmp
mov
jl
push
mov
lods
cmp
inc
add
shlb
inc
rcr
in
cwtl
jo
add
and
mov
inc
add
aam
xchg
jne
add
mov
push
or
stos
stos
xchg
jge
inc
add
add
gs
mov
inc
shll
inc
dec
sbb
push
xlat
in
jb
add
sahf
subb
and
or
js
add
orl
outsl
pusha
je
adc
push
jne
jae
dec
stos
dec
jle
ja
push
jno
cmp
mov
stos
dec
cmp
mov
push
hlt
jmp
in
rcr
dec
adc
mov
mov
add
fdivr
jmp
jmp
or
sbb
xchg
add
sti
mov
adc
cmpb
mov
ror
out
ja
xchg
dec
mov
xchg
add
or
mov
out
lds
mov
and
add
xlat
sub
sub
mov
imul
dec
adc
or
pushf
mov
jae
insl
in
and
add
mov
jne
mov
lock
outsl
stos
xor
inc
sahf
nop
das
daa
add
mov
orb
dec
icebp
push
outsl
pop
bound
inc
xorb
push
iret
sbb
xor
loopne
inc
mov
cmpsb
or
jo
mov
push
jecxz
shld
mov
mov
mov
and
fadd
sbb
pop
jne
mov
out
add
in
xchg
mov
clc
clc
movsb
cmp
dec
test
cmp
imulb
sbb
xchg
pop
xor
int
push
xorb
mov
add
scas
clc
inc
out
jns
aas
dec
sarl
pop
leave
add
lahf
pop
push
fwait
xor
in
sahf
int3
add
in
clc
filds
xchg
sub
push
insb
xchg
lock
int
pop
lahf
mov
outsb
mov
push
push
cwtl
xor
push
shlb
pop
ja
add
imul
imul
add
pop
ret
and
jl
inc
sub
stos
mov
adc
dec
dec
loop
fistps
mov
jne
push
xchg
addb
shll
test
xchg
enter
cmpsl
mov
lods
and
clc
js
fdivl
push
popa
add
inc
push
xchg
insl
scas
enter
jmp
xchg
pop
xor
pop
dec
idivl
scas
push
mov
pushf
mov
push
incl
lods
fistps
test
mov
fwait
mov
xchg
or
and
or
movsb
adc
inc
cld
subl
fsubrs
mov
ljmp
cmp
cwtl
add
ss
add
dec
xor
add
loop
pusha
fxsave
and
cmp
mov
call
add
sub
dec
and
dec
fadds
mov
push
bound
sub
loopne
js
je
push
movsb
adc
clc
outsl
pop
ret
jnp
mov
out
loopne
rolb
add
outsl
push
push
add
fists
add
js
push
pop
call
dec
sbb
xor
xchg
push
push
mov
std
adc
rorb
mov
add
popf
mov
dec
add
scas
out
loop
rclb
push
mov
add
push
xor
inc
dec
mov
inc
scas
push
dec
or
or
test
cld
pop
jl
or
add
mulb
push
cmp
pop
loopne
icebp
jl
and
pop
je
icebp
mov
xchg
and
dec
mov
pop
dec
jb
sahf
xchg
fcomps
inc
push
mov
lahf
mov
mov
pushf
test
shl
pop
mov
test
push
in
jg
fbstp
jae
test
mov
icebp
jle
cmp
rorb
cmpsl
push
dec
shl
fmull
icebp
mov
push
es
sbb
mov
js
push
adc
xor
and
xor
rorb
jo
push
pop
cmp
add
push
repz
add
les
and
rolb
addr16
andl
xchg
sub
inc
or
push
add
mov
addr16
cmp
pusha
sbb
cmc
add
and
sub
inc
add
cli
wrmsr
dec
out
into
cmp
xchg
push
shr
shrl
sbb
xor
or
cmp
addr16
add
mov
adc
mov
stc
or
outsb
cmc
sbb
adc
in
enter
mov
inc
jne
jo
ret
xor
fwait
inc
sarl
mov
pop
sub
sbb
sub
ror
pop
push
add
jl
aas
imul
test
xor
int3
or
add
aaa
test
dec
mov
imul
sarb
in
add
pop
mov
arpl
mov
icebp
push
jge
cs
lods
adc
pop
movsb
sarl
jne
fcoml
mov
cmp
mov
hlt
and
or
lea
ret
mov
into
inc
test
push
jnp
or
cmc
nop
mov
lcall
inc
adc
jo
stc
mov
test
sbb
sbb
scas
cmp
enter
sbb
aam
sbb
cmp
iret
add
out
jno
cmpsb
jns
adc
sub
mov
xchg
scas
add
add
data16
daa
out
into
lock
jmp
dec
xor
add
inc
les
lahf
add
mov
jmp
cs
and
jo
or
stos
xor
mov
add
pop
sbbb
xchg
pop
jne
mov
xchg
shll
xlat
shlb
push
test
push
aam
lods
add
fnsave
xchg
inc
xor
mov
sub
mov
sbb
jnp
addr16
sub
lcall
pop
adcb
add
adcl
mov
mov
test
xor
push
ja
mov
mov
add
pop
sub
sahf
ja
bound
xor
ja
sbb
jmp
mov
pusha
adc
pop
js
or
in
lret
add
cmp
cmp
pop
cmp
je
mov
aas
cmp
in
or
aam
rcll
js
mov
or
pop
popa
fsubl
mov
jns
stos
shr
dec
in
or
pop
jmp
cwtl
loope
and
push
push
mov
hlt
clc
repnz
pushf
lods
pop
shll
and
imul
stc
ss
xchg
xchg
sub
gs
std
shl
cmpb
pop
add
xchg
mov
or
add
insb
mov
cmp
imul
mov
xchg
in
push
add
cwtl
loop
les
add
inc
and
addl
mov
mov
cmp
mov
insl
pop
add
mov
adc
dec
ret
add
insb
jmp
pop
loop
insb
rorb
inc
cmp
ret
mov
enter
fdivrl
aam
scas
xchg
sub
ja
adc
lahf
int
stos
adc
inc
stos
or
ret
daa
xorb
hlt
out
dec
jecxz
xchg
nop
iret
dec
and
stc
push
and
enter
or
add
add
cmp
testb
cltd
js
jl
idivl
clc
enter
scas
adc
jbe
sbb
mov
push
inc
pop
punpcklwd
sbb
jo
adc
addb
dec
cld
cmp
and
es
push
loope
mov
fcomps
cwtl
hlt
inc
sbb
in
or
movsb
out
jbe
pop
and
sahf
mov
mov
je
add
mov
jle
mov
stos
add
loop,pn
adc
and
jo
test
add
jbe
push
mov
add
lock
pop
popf
out
push
cwtl
mov
inc
mov
xor
call
dec
push
add
mov
in
xchg
jl
or
push
cmpsb
outsl
add
cmp
jg
test
out
adc
inc
push
popf
leave
xor
lock
and
lods
dec
setge
dec
insl
scas
xor
and
int3
pop
repz
and
push
lods
into
lds
sbb
enter
add
jo
ret
out
mov
and
shrb
jge
inc
aam
inc
jae
cwtl
sub
sub
sbb
and
xor
mov
es
mov
adc
adc
clc
sub
mov
mov
enter
cmp
add
out
adc
lods
in
add
adc
jns
mov
or
fadd
push
and
add
cli
movsb
ds
pop
or
cmp
in
pop
js
orb
add
inc
xchg
out
lock
sbb
dec
test
jo
lahf
aam
stos
int3
xor
sbbb
fisttps
sbb
jge
adc
or
sbb
out
adc
add
mov
pop
dec
jb
add
loope
popf
xchg
hlt
dec
xchg
adc
or
mov
cmp
adc
repz
jb
jbe
or
or
sbb
mov
add
cmp
jg
int3
mov
xchg
movsb
push
xchg
cwtl
cwtl
ds
or
ret
sub
pop
adc
push
push
pop
sub
orl
add
mov
in
dec
clc
dec
sub
jbe
je
jg
or
inc
rolb
jns
adc
je
ds
cmpsl
call
inc
push
pushf
mov
or
and
imul
addb
psubd
adc
xlat
mov
popf
and
xor
sti
inc
movsb
jns
jecxz
or
paddw
movsl
add
stc
mov
inc
test
and
int3
icebp
adc
mov
and
and
add
or
cmp
fs
lahf
pop
jns
test
mov
fs
pushf
xchg
push
push
aam
inc
add
inc
and
or
pushf
dec
add
add
rolb
push
bound
icebp
xchg
jecxz
aas
loopne
inc
mov
inc
je
aam
test
mov
pusha
dec
stc
lock
adcb
add
jle
mov
push
pop
pop
adc
inc
movsl
mov
and
dec
mov
filds
mov
insl
sub
mov
dec
fadds
or
mov
pop
cmp
daa
mov
add
or
rorb
inc
sbb
nop
sahf
adcb
sbb
out
add
adcb
insb
jns
add
xor
fnsave
add
mov
adc
xchg
fldl
cli
xor
jle
ljmp
rclb
dec
movsl
add
fdivrp
pop
mov
xchg
adc
or
ss
mov
adc
bound
loop
hlt
xchg
std
add
outsl
in
movsb
dec
add
xorb
mov
bound
pop
cmp
enter
cld
pop
cmp
aas
pop
push
sbb
pop
sub
add
jae
rcrl
je
add
clc
clc
and
cmp
shl
jl
jns
push
add
test
lock
cmp
xchg
and
adcb
cmp
push
add
xchg
lea
sub
test
stos
push
cwtl
les
fistl
push
push
call
cmp
xor
addb
insb
and
dec
pop
lods
push
jl,pn
mov
sahf
jecxz
cld
cmp
sub
jg
inc
fs
jne
sahf
sub
enter
scas
add
mov
and
or
cmpsl
dec
clc
jp
and
neg
jb
pop
insl
mov
add
push
jo
adc
outsl
mov
sub
aam
or
decl
fisubrs
jg
jl
daa
xchg
add
xor
adc
add
jecxz
sub
mov
pextrw
sub
and
mov
mov
int3
push
cmp
cmp
sub
add
sub
jo
pop
fimull
cli
sbb
ss
vmread
jnp
adc
pop
inc
dec
pusha
scas
std
xor
cmp
sbb
push
mov
push
or
xchg
fwait
enter
mov
mov
insl
out
leave
pop
lea
pop
inc
lcall
lret
jne
add
dec
sbb
push
pop
fucomip
mov
add
xlat
mov
add
shll
add
xchg
inc
pop
pop
jo
or
inc
repnz
mov
push
push
pop
inc
adc
sub
rcl
aas
icebp
cmpb
inc
mov
xchg
mov
mov
mov
sub
xor
pop
cmc
outsb
adc
inc
fimull
les
or
shl
lock
add
pop
pop
mov
and
aam
mov
int3
add
mov
pushf
push
mov
shrb
cmpsl
mov
add
inc
outsl
mov
repnz
js
shlb
popa
xor
add
jns
add
stos
sbb
mov
fwait
adc
dec
pop
push
mov
jmp
xchg
adcb
cwtl
test
pop
mov
dec
and
pusha
or
dec
fs
add
fistpll
cli
xchg
mov
adc
mov
gs
push
dec
aad
ja
add
cli
adcl
scas
mov
add
mov
xchg
pop
dec
or
mov
adc
pop
xor
cmp
and
dec
movsb
adc
notb
sahf
in
outsb
adc
lret
adc
mov
aam
sahf
cld
jmp
adc
xor
leave
fisubs
bound
xchg
pushf
inc
jl
mov
jg
add
sub
cmp
popa
adc
addl
call
and
xlat
hlt
nop
cwtl
mov
into
lock
inc
inc
and
clc
pop
addr16
jns
mov
jne
jb
add
adcl
xchg
mov
adc
dec
orl
inc
sbbb
mov
addb
adc
cwtl
mov
sub
addr16
js
xor
dec
mov
mov
add
sub
mov
jnp
add
shlb
stos
add
push
and
lds
pop
test
xchg
lret
xchg
cmp
sbb
jge
add
cmpsb
sub
jno
inc
loopne
lods
add
mov
adc
mov
dec
pusha
adc
xor
mov
mov
mov
dec
cwtl
mov
les
loope
test
scas
fsub
andb
add
shufps
adc
ret
dec
out
dec
add
mov
jg
xor
stos
je
push
pop
fadds
inc
adc
sbb
dec
cmp
cwtl
adc
inc
dec
aam
cltd
inc
push
adc
pop
adc
popf
and
push
mov
xchg
push
cmp
add
xchg
xor
xor
jecxz
dec
mov
inc
mov
sub
pop
fbstp
pop
add
xor
loope
mov
pop
jae
repz
add
stos
pop
int3
mov
aas
and
dec
mov
mov
insl
cmp
dec
add
pop
jecxz
pop
pop
pop
sub
test
cld
add
orl
les
shrb
mov
stc
icebp
add
or
adc
add
loope
mov
or
pop
sbbb
movsb
cmp
lods
aas
cmp
fadds
cld
adc
lret
xchg
and
cmp
test
jo
popa
pop
mov
adc
add
dec
inc
push
dec
jle
movsb
or
xchg
sub
imul
pop
mov
fcompl
rolb
cwtl
xor
and
test
ja
jp
pop
cwtl
dec
mov
xor
int3
inc
jo
xchg
or
faddl
mov
in
add
ss
call
fistpll
cmp
sbb
stos
mov
je
mov
cwtl
roll
lea
or
jns
aas
mov
add
xchg
dec
adc
cmpsb
shrl
int3
xor
rorb
aas
sarb
popa
mov
in
test
pop
pop
or
or
jns
popf
shrl
add
dec
addr16
das
jns
mov
mov
shl
mov
pop
insl
es
xor
fsubrs
add
pop
push
lret
lock
test
pop
adc
push
iret
jo
lcall
aas
rcrl
lahf
xor
pop
dec
mov
mov
mov
movsb
test
enter
ljmp
jp
out
lods
adc
jmp
and
hlt
add
arpl
lea
xor
jl
das
pop
popf
mov
aas
xor
test
sbb
inc
enter
cwtl
les
add
mov
movhps
adc
cmpl
iret
fcompl
add
add
cmpsl
jmp
outsl
fsubrs
jb
jecxz
or
push
add
leave
mov
jl
jge
or
pop
out
fmul
in
pop
jae
mov
mov
xor
xlat
xor
dec
fwait
test
pusha
fiadds
clc
enter
test
shlb
and
in
push
inc
jl
add
fimuls
bound
inc
add
das
pusha
loop
and
in
sub
fdivr
fdivs
pushf
repz
jo
outsb
mov
xor
mov
cmp
idivb
sub
pop
and
leave
ja
xchg
repnz
xchg
and
and
fwait
enter
dec
iret
sbb
and
jge
add
mov
inc
or
test
andl
outsl
nop
xchg
mov
jl
lret
push
adc
add
lock
cmpl
mov
inc
lcall
push
neg
pop
in
pop
xor
and
add
push
fisubrl
pop
mov
rep
js
daa
dec
and
lcall
add
cmp
stos
int3
sbb
push
cwtl
cmpsl
fsubrl
sbb
enter
aam
out
js
lahf
jbe
or
adc
mov
mov
cltd
scas
cmp
push
popa
out
dec
test
fsubs
pop
jmp
clc
add
sbb
leave
in
add
icebp
sarb
les
movsl
shlb
inc
mov
jb
or
add
mov
shlb
adc
xchg
and
pushf
xor
cltd
pop
test
xor
lock
xor
xor
hlt
aam
aas
ljmp
pushf
xorb
push
xor
or
fs
mov
adc
mov
mov
enter
jge
jno
leave
add
mov
pusha
sub
idivb
enter
cmp
int
cltd
clc
or
in
xchg
adc
iret
fistpl
inc
mov
stc
mov
je
lahf
add
js
sahf
mov
out
nopl
pop
imul
mov
in
std
add
pushf
push
sub
sbb
adc
xchg
mov
dec
les
push
pusha
mov
pop
cld
push
jl
pop
adc
and
mov
js
jecxz,pn
mov
mov
push
sbb
mov
pop
cmp
inc
mov
fmull
mov
add
jp
mov
jp
aam
push
fisubs
sub
into
pop
out
es
shl
dec
inc
push
in
je
sub
or
adc
mov
dec
sarb
mov
inc
imul
and
jle
or
xchg
and
cld
orl
xlat
loop
push
xchg
daa
dec
loope
inc
inc
cmc
shlb
mov
mov
cmp
lock
add
sub
enter
and
shlb
add
add
and
jno
lods
mov
inc
ror
cmp
stc
gs
xor
mov
lret
out
and
or
add
push
or
rclb
sub
push
lods
and
sub
pop
adc
pop
clc
inc
lahf
shrb
sub
cld
pop
lds
lret
pusha
add
icebp
sbbl
or
adc
push
and
or
pop
fadds
inc
add
pushf
jne
mov
push
mov
add
mov
sbb
jecxz
push
dec
pop
in
jb
mov
pop
and
cwtl
test
leave
scas
cmpsb
sbbb
bound
enter
aad
movsl
aas
or
ret
lods
lea
cmpsb
pop
xor
cwtl
outsl
mov
cmp
cmp
add
xor
jb
mov
mov
stos
pop
rcrl
mov
loopne
out
cmp
into
fsubl
mov
outsl
and
test
add
pusha
sbb
dec
cltd
mov
and
out
loopne
adc
add
add
call
fsubs
std
add
int
cmp
in
push
lret
sbb
add
xchg
pop
je
out
and
dec
je
jg
add
push
add
or
sub
push
test
pop
xchg
nop
push
jmp
iret
jecxz
hlt
push
pop
ja,pt
mov
daa
shr
inc
adc
mov
pushf
cwtl
fidivrl
cmp
inc
shlb
bound
xchg
aam
pop
shrb
pop
add
out
movd
lcall
int
pusha
add
xlat
mov
mov
inc
test
mov
inc
dec
sub
add
lods
push
int
dec
js
dec
and
cwtl
mov
das
hlt
jle
inc
sub
add
gs
js
or
je
push
cwtl
pusha
cmp
fwait
sub
mov
xchg
loop
inc
mov
sbb
repnz
add
js
push
call
jae
push
add
mov
cli
das
enter
pop
add
mov
int
ss
push
push
sar
cmp
repz
es
ss
adcl
sub
mov
adc
dec
and
sbb
in
loopne
dec
repz
enter
int3
mov
arpl
or
and
inc
inc
xchg
inc
shlb
add
lahf
out
push
mov
add
jp
fldenv
sbb
adc
cwtl
add
out
fcomi
mov
shlb
mov
cmp
cwtl
lock
iret
cwtl
adc
xchg
dec
and
popf
hlt
cmp
mov
fcomps
sahf
push
mov
xor
inc
sbb
mov
shlb
stos
jns
ss
mov
int
adc
ja
leave
sbb
and
sub
movsl
aad
mov
pop
push
add
dec
xor
scas
mov
jmp
test
adc
pop
inc
loopne
inc
jno
cmp
add
dec
adc
jecxz
call
stc
push
rol
repz
repz
arpl
cmpsl
les
sbb
xor
aam
pop
add
cmp
hlt
fstps
mov
dec
lret
mov
sub
or
scas
add
inc
fcmovu
sbb
fistps
dec
stos
add
mov
xchg
adc
push
add
sub
or
jp
add
and
cmp
mov
xchg
push
push
loopne
mov
lock
add
test
push
cmp
nop
add
fstpl
mov
push
add
scas
push
or
jb
mov
push
pop
stc
xchg
and
andb
enter
push
adc
insb
repnz
aas
lods
aas
lods
in
inc
rclb
loope
ljmp
sahf
roll
sub
or
nop
jl
mov
les
mov
sbb
fs
dec
lock
addb
daa
outsl
fldenv
pusha
xor
inc
mov
enter
add
push
fldenv
das
mov
and
jecxz
or
call
lock
cmp
sbb
mov
das
jnp
add
mov
pop
mov
enter
xor
clc
lock
std
pop
loop
mov
into
cmpsb
inc
add
rcl
rcr
pop
inc
rclb
cld
rclb
movsb
add
mov
icebp
xchg
lds
fmuls
add
push
loopne
insl
mov
xor
adc
add
and
jge
gs
push
mov
adc
enter
shrb
xorb
jne
add
addl
rorl
sbb
inc
cmc
div
add
pop
or
sub
mov
jg
push
fcomip
and
outsl
les
inc
rcrl
add
lods
mov
pop
nop
dec
xchg
mov
mov
mov
out
ljmp
js
call
ret
add
cmp
lds
add
and
mov
mov
dec
mov
adc
mov
cmpsl
cmpsb
scas
add
add
fnstsw
mov
pop
lret
int3
pop
dec
out
mov
or
into
cld
loopne
int3
cmp
mov
xchg
movsl
sub
mov
pusha
aas
jne
int3
xorb
push
jo
cmpsb
data16
sti
pop
add
jecxz
or
aas
lea
shrl
cwtl
xor
and
cltd
pop
and
jo
jae
in
mov
cmpsb
sbb
mov
xchg
sub
jb
adc
xchg
add
jnp
sub
call
punpckhdq
in
sub
xorb
inc
mov
add
das
aas
out
add
lock
and
lcall
adcl
popf
push
lahf
add
rcrl
ja
add
mov
dec
lods
mov
cmp
push
jbe
pop
stos
dec
adc
inc
add
js
ds
jecxz
inc
pop
ljmp
adc
add
mov
mov
adc
rcll
fistpl
fcom
repz
jo
pmulhuw
sub
sub
dec
call
mov
cmp
xor
ret
add
das
fwait
sub
adc
sar
leave
sahf
inc
mov
add
out
adc
mov
cmp
cmp
push
add
push
inc
test
addl
xor
cmc
pushf
fs
andb
jl
ss
adc
xor
xchg
jle
dec
jae
dec
cmp
push
lods
add
add
cltd
add
push
dec
out
jo
iret
add
sub
adc
and
add
mov
and
lea
int
ja
push
or
mov
dec
or
mov
adc
inc
jp
push
adc
push
adc
out
adc
dec
and
and
and
movsb
mov
add
mov
push
push
mov
xchg
xor
repnz
and
xlat
dec
int3
mov
icebp
adc
sarb
cwtl
nop
cmp
roll
cwtl
daa
insb
ret
xor
cmp
add
mov
jo
and
pop
int3
adc
xchg
sub
xlat
push
mov
lahf
jns
inc
ret
leave
stos
add
cmp
add
mov
adc
lds
mov
mov
ljmp
cltd
lods
push
cmpb
bound
sub
pop
fwait
dec
xorl
mov
adc
add
mov
xchg
stos
ret
or
pop
push
les
jae
mov
mov
call
mov
push
sbb
add
je
dec
popf
pop
adc
mov
pop
cmp
push
nop
add
add
or
adc
popf
in
jns
fwait
ss
pop
xor
fadd
in
inc
jge
fwait
cmp
rol
lea
pop
repnz
add
pop
sub
add
jg
mov
jl
cltd
sbb
and
clc
dec
int3
fwait
pop
movsb
push
add
lea
sbb
enter
or
inc
stac
cmp
out
mov
outsb
xor
push
outsl
pop
jae
jecxz
add
icebp
sti
ror
rolb
les
and
jnp
iret
sbb
or
mov
add
test
ss
cmp
or
sub
dec
into
push
and
cmp
icebp
jle
cwtl
push
pop
filds
or
jmp
jns
orl
adc
clc
add
in
push
mov
fcoms
inc
mov
xorl
add
lahf
xchg
nopl
rclb
cmp
cmp
flds
mov
popf
lods
lret
dec
rcr
dec
jns
push
dec
in
lock
popf
mov
xchg
add
data16
mov
ds
jns
add
push
outsb
mov
add
push
subb
adc
ja
lods
arpl
sbb
mov
mov
ret
xchg
adcb
outsl
jecxz
or
add
sub
sbb
mov
sub
ljmp
fsubr
jge
stos
fmull
mov
dec
in
add
shr
mov
pop
mov
add
pop
fwait
sub
mov
cmp
cld
movsl
pop
fs
or
sbb
pop
mov
inc
mov
and
lods
ja
dec
add
push
jo
mov
sub
cwtl
adcb
push
pusha
xlat
out
cmp
cs
outsl
pop
shlb
and
sub
jae
mov
cwtl
leave
add
shlb
mov
loopne
sbb
and
lcall
pop
dec
and
outsb
adc
ds
sbb
lods
push
xorb
xchg
std
push
stc
test
add
push
dec
in
lods
lock
pop
mov
mov
fildll
dec
add
dec
dec
or
daa
in
inc
or
add
rcrb
or
fcoml
popf
sbbl
cwtl
enter
sub
sar
jno
push
movl
cmp
lcall
subl
pop
jmp
out
sub
and
and
jae
add
sub
outsl
mov
rol
or
shlb
cs
adc
scas
dec
inc
add
dec
js
fwait
pusha
mov
xchg
mov
and
sbb
mov
dec
lods
add
fs
shlb
cmp
shlb
daa
and
fmul
or
adc
icebp
faddl
xor
and
mov
jb
mov
and
test
mov
inc
lock
js
jg
icebp
adcb
cmp
add
js
mov
mov
enter
stos
sub
xor
mov
je
mov
mul
call
clc
fistl
add
mov
sub
subb
sahf
push
ret
jae
call
pop
xor
mov
mov
cmp
int3
in
add
rclb
nop
cmpsb
cld
pop
dec
call
pop
faddl
rorb
inc
push
xor
std
cwtl
dec
cli
shlb
js
add
mov
lods
enter
aam
nop
pop
inc
and
add
mov
std
sbb
js
loope
jg
mov
gs
xchg
mov
push
mov
call
push
mov
jne
loope
fdivrs
addb
scas
sub
cmp
pop
pushf
daa
lar
mov
clc
push
stos
pop
adc
xchg
pop
arpl
lcall
cld
adcb
cmpsb
lods
push
inc
mov
and
mov
lea
push
out
xchg
test
cmp
mov
pop
in
mov
js
dec
xor
test
enter
or
dec
inc
shl
mov
dec
mov
pop
daa
add
cwtl
add
test
subl
outsl
sbb
dec
add
stos
xchg
daa
fcmove
jg
clc
aad
and
aam
cmp
dec
jl
xchg
shlb
dec
and
lahf
inc
or
xchg
cmp
je
sarb
mov
aad
jbe
jne
push
pop
or
nop
fbld
xchg
jb
mov
repnz
xchg
testb
mov
jecxz
les
cwtl
add
aad
cmp
fs
xchg
enter
fwait
hlt
test
andl
mov
loopne
jb
cmp
fiadds
dec
out
xlat
or
mov
addl
mov
xor
lock
mov
mov
adc
jnp
jns
movsb
sbb
daa
xchg
push
adc
add
lods
push
jp
add
cli
idivl
push
jl
call
pushf
ret
hlt
mov
adcb
jle
add
cld
imul
mov
inc
xor
sbbl
fnsave
pop
data16
and
mov
ds
sbb
mov
add
cmp
out
add
xchg
mov
sub
mov
adc
divps
cmp
sub
cmpb
pop
and
and
inc
out
rclb
adcb
mov
test
repz
scas
outsl
filds
jae
lea
add
xor
imul
cmc
sbb
xchg
inc
fisubs
adc
add
adc
sbb
add
mov
scas
add
dec
ja
add
mov
fdivrl
inc
adc
jp
push
pop
aas
push
adc
mov
or
cs
ret
adc
add
sbb
insb
push
test
sti
mov
mov
dec
inc
loop
add
xchg
sub
inc
add
mov
adc
mov
xor
and
jp
and
add
mov
sarb
add
sbb
adc
cmp
sub
and
jl
add
pop
push
hlt
cld
push
sub
call
push
lock
push
dec
out
mov
cmpsb
adc
sub
inc
add
lret
push
and
std
lret
je
dec
jbe
in
leave
jl
fs
jnp
ds
jp
shll
mov
pop
or
pop
jo
mov
sarl
imul
jmp
sbb
push
dec
shlb
cmp
mov
adcb
test
or
inc
sub
test
fwait
push
int3
xor
icebp
dec
faddl
sbb
jle
aas
sbb
test
sub
frstor
adc
or
shrl
dec
xchg
ds
stos
or
xor
pop
adc
push
xor
scas
fbld
dec
add
xchg
mov
add
in
testl
add
jnp
pop
js
pop
cwtl
mov
loope
or
mov
cmp
in
mov
leave
mov
popf
hlt
pop
rcrb
rclb
ja
jg
xor
pusha
mov
mov
icebp
aam
ja
add
ja
ds
enter
mov
lcall
js
sbb
lock
or
out
loopne
mov
push
and
test
inc
das
addb
xchg
push
xchg
push
ljmp
pop
int
and
push
int3
and
cmp
sbb
xchg
inc
mov
mov
negb
add
or
mov
inc
push
or
pop
sub
mov
bound
gs
xchg
dec
into
rcr
inc
jl
sbb
or
cmpsb
ret
shl
subb
add
clc
dec
enter
cmp
imul
adc
rcll
dec
mov
lea
push
mov
in
pop
leave
inc
mov
lcall
mov
adc
mov
adc
cmp
int
jns
fs
jae
cld
inc
mov
test
jns
adc
stos
fsub
sub
mov
mov
xor
es
mov
pop
mov
andb
dec
sub
enter
insb
mov
sbb
push
add
lea
testb
pushf
cwtl
push
int
dec
and
dec
add
jb
xchg
add
das
ret
add
jl
mov
sbb
inc
int3
jbe
mov
mov
add
jle
sahf
sbb
pop
inc
jo
testb
clc
and
stos
aam
loope
lods
xchg
ss
or
hlt
clc
add
and
dec
loope
sub
pop
lret
cmovns
cwtl
in
pop
fnsave
adc
sbb
mov
xchg
push
inc
in
add
lret
jg
adc
sub
ja
mov
push
fstpl
pop
int3
sarb
push
jne
ret
cmp
push
jns
add
mov
and
test
sbb
flds
pop
movsl
mov
mov
rcr
out
sarb
push
clc
lods
clc
add
rcl
and
cwtl
clc
mov
push
add
inc
dec
in
add
jmp
cmp
pop
test
mov
mov
adc
data16
or
loopne
and
dec
mov
movl
jno
fucomip
jmp
fcmovnb
test
jo
add
cmp
stos
add
cmp
jg
cmp
sub
pushf
ret
adc
mov
add
icebp
pop
imul
sub
add
cmp
jg
xor
rorl
loope
roll
xchg
mov
inc
js
mov
call
or
adc
dec
mov
loopne
add
or
xor
mov
pop
je
jns
and
fdivrs
dec
cli
xchg
add
lret
inc
icebp
xchg
scas
inc
lds
les
xor
adcb
mov
sub
dec
lea
jle
inc
cmp
stos
icebp
and
test
leave
pop
rolb
sub
test
mov
ja
insl
sar
push
dec
xor
shrl
dec
mov
jbe
jge
mov
dec
and
insl
int3
mov
les
mov
push
push
push
sub
mov
mov
cmp
ret
pop
cmpsb
push
mov
ja
leave
sub
into
sbb
fwait
jne
xchg
lock
pop
outsb
js
outsl
jecxz
stos
movsb
mov
and
mov
int
add
adc
ret
out
push
mov
mov
loope
mov
cld
aaa
psraw
pushf
in
sbbb
inc
addr16
je
mov
lods
jns
outsb
outsl
push
mov
call
or
test
fadds
pushf
movsb
sbb
add
and
xchg
mov
mulb
movsb
dec
inc
adc
add
dec
mov
outsb
mov
mov
cmp
and
js
add
cmp
call
jge
mov
sub
in
mov
cmp
add
dec
cwtl
and
or
dec
mov
sub
cmc
and
sbb
mov
mov
jle
sub
jl
add
stos
add
cwtl
negl
xchg
add
add
out
leave
test
rcrl
fwait
dec
mov
or
add
lret
out
stos
adc
and
add
jnp
push
jo
add
pop
loope,pt
push
int
daa
hlt
or
dec
add
xchg
test
cld
add
mov
or
cmp
xor
mov
or
test
xor
mov
sbb
in
mov
je
or
xchg
aad
rorl
iret
xor
js,pn
aam
push
sub
mov
addr16
loop
sbb
ds
sti
sbb
cmp
cmp
add
cmpsl
mov
in
jge
add
daa
pop
xor
in
add
and
sahf
ret
jmp
mov
xor
jae
aas
mov
mov
fs
xor
push
clc
mov
mov
sbb
mov
aam
xchg
mov
push
cmpl
or
adc
add
mov
fs
mov
xchg
movsb
or
das
fsub
in
add
mov
push
mov
addb
filds
cmpsl
stos
or
mov
pusha
nop
repz
pop
add
jg
movsb
xor
push
das
nop
mov
js
shlb
into
lea
jne
xchg
popf
xor
fstpt
mov
inc
adc
dec
add
fisubrl
xor
cli
add
pop
add
pop
adc
adc
or
notb
fs
cld
in
out
add
adc
test
mov
adc
insl
sub
pop
inc
add
adc
or
cwtl
inc
cmp
lcall
aas
and
lahf
add
and
mov
negb
and
add
pop
inc
adc
inc
dec
stos
sub
dec
jl
adc
lea
fs
jne
ss
lcall
sbb
call
add
push
mov
inc
clc
dec
or
add
add
mov
mov
xchg
popa
push
cmp
inc
mov
xor
dec
xor
icebp
jl
ret
mov
jg
fisubrl
and
orb
les
mov
and
dec
sub
inc
and
xchg
push
and
jbe
inc
fwait
ret
xchg
out
push
fs
movsb
push
mov
add
adc
pusha
push
lcall
inc
in
add
or
inc
push
mov
sub
jno
dec
jmp
dec
or
out
nop
pop
inc
cltd
faddl
faddl
testl
mov
mov
mov
call
xor
lahf
sti
pop
inc
std
add
adc
add
xchg
and
pop
rorl
cltd
mov
faddl
xor
jle
pusha
sub
jns
and
add
inc
dec
stos
and
fcomi
nop
add
inc
add
addr16
rcl
inc
add
cmpsb
mov
dec
stc
movlps
lahf
sub
xlat
das
jg
out
add
fdivl
push
pop
out
ja
pop
ss
cmp
sub
sbb
shrb
inc
xchg
add
cwtl
cmp
add
call
test
push
out
dec
mulb
popf
add
ja
pusha
add
out
add
lds
inc
lahf
loopne
cmp
pop
aam
mov
ss
popa
jnp
add
or
aad
cld
add
sti
js
ja
add
or
shlb
loopne
dec
add
std
mov
aad
jb
sti
mov
adc
repnz
sbb
jns
cmp
shlb
add
pop
les
in
dec
inc
dec
icebp
dec
stos
lret
push
mov
movsb
cwtl
daa
lods
pop
pusha
sbb
scas
mov
and
fs
ljmp
mov
std
sub
push
enter
jb
testb
pop
leave
insb
repnz
fmuls
popa
sbb
pop
add
pop
or
sbb
addr16
out
fsubp
sbb
xchg
add
ret
mov
add
sub
out
push
push
or
pusha
loope
jno
add
sbb
or
add
negl
rcrl
mov
add
add
add
push
test
xchg
pushf
cmp
add
aad
mov
insb
mov
mov
stos
or
stos
test
sub
inc
test
ret
nop
lahf
roll
sti
call
sbb
pop
sub
jne
mov
add
mov
xor
sub
sub
sahf
in
roll
orb
bound
fsts
sub
lahf
cli
leave
inc
stos
fsubl
and
cmp
adcb
mov
jecxz
xor
inc
jb
js
add
mov
je
enter
and
add
pop
jne
sbb
decb
ljmp
adcl
mov
or
mov
xor
pusha
lcall
cmp
push
das
out
jmp
jo
enter
adc
movsb
shrb
xchg
pop
dec
jnp
xchg
hlt
add
pop
testb
add
adc
lods
xchg
push
xchg
fdivr
pushf
add
adc
loop
push
pop
dec
stos
icebp
xorb
fisttps
dec
das
mov
jb
xor
addr16
pop
popa
insb
int3
shll
data16
adc
dec
aad
jno
cld
les
sub
xor
ds
lcall
push
sub
stc
aam
enter
add
cltd
mov
out
enter
add
rcrb
add
cmp
daa
clc
xchg
orb
inc
hlt
adc
and
insl
hlt
dec
jle
cmpsb
xor
jns
pop
sbb
adc
push
dec
test
rcll
call
clc
addb
or
xchg
mov
in
sbb
sub
add
ja
adcb
push
imul
pop
das
mov
dec
xor
loop
insb
mov
icebp
pop
inc
xor
fstpl
add
je
ret
das
inc
addb
arpl
inc
loope
fadd
cmp
mov
cmp
inc
mov
sub
or
push
bound
or
lret
mov
lahf
andb
idivl
pop
sahf
movsl
test
test
dec
clc
mov
mov
andb
add
pop
inc
fwait
in
lds
mov
push
popf
data16
pusha
push
xchg
and
mov
adc
orb
call
enter
fadds
aam
adc
popl
add
pop
inc
clc
lret
pop
scas
ret
pop
lock
xorb
mov
add
loop
or
push
xor
addb
add
mov
scas
adc
cli
xor
cmp
daa
clc
lea
popf
add
pop
ret
stos
insb
int3
cltd
call
lret
and
push
roll
inc
es
xchg
test
jns
add
lock
add
pop
mov
lods
push
testb
sbb
out
into
cld
xorb
lret
lds
int3
add
push
cmpsb
or
clc
jecxz
imul
or
fs
dec
xor
add
mov
incb
mov
mov
fiadds
loop
mov
stc
jo
adc
outsb
mov
subb
notb
inc
loop
add
sbb
and
loopne
fwait
xlat
scas
xchg
movsb
adc
xor
pop
inc
cli
adc
xor
and
or
push
add
push
adc
pop
sbb
mov
sub
lods
js
inc
in
xchg
xor
adc
jae
inc
push
sbb
mov
jo
adc
cwtl
leave
or
pop
faddl
inc
je
or
jo
xchg
lods
mov
stos
xor
popf
sbb
out
fadd
int3
or
or
cmp
int3
push
nop
xor
stc
and
cmpb
add
adc
add
dec
jne
pop
pop
or
dec
dec
mov
xlat
xchg
xorb
js
jmp
sbb
xor
and
xchg
jg
and
movb
jg
add
cmp
sbb
popf
xchg
xor
ja
roll
or
ror
mov
clc
push
adc
add
lods
mov
or
in
dec
loop
lahf
sarb
push
or
push
mov
dec
add
inc
mov
dec
adc
scas
adc
mov
sbb
mov
adc
out
jge
add
fmuls
sbb
pop
add
mov
mov
in
jmp
push
rcl
sbb
sub
test
add
dec
jns
loopne,pn
pop
es
int3
adc
les
push
and
add
out
or
cwtl
pop
mov
ret
pop
dec
xor
sub
aas
ret
cltd
les
sahf
xor
popf
xor
or
sarb
into
pop
sbb
outsb
loopne
xchg
or
add
andl
ret
add
dec
push
mov
add
or
push
cmp
hlt
scas
lcall
mov
sbb
test
lock
adc
inc
rorb
pop
xor
cs
cmc
and
cmpsb
jge
add
xchg
mov
les
xchg
in
mov
or
xor
adc
add
or
int3
jae
in
scas
jp
mov
clc
sub
test
inc
adc
add
xchg
orps
xor
stos
daa
dec
jo
shlb
or
cmpsb
cli
mov
and
nop
cmp
mov
int3
or
test
mov
fiaddl
test
mov
icebp
mov
fs
sub
jo
outsl
and
add
mov
imul
sbb
and
pop
enter
inc
int3
or
mov
outsb
pop
jl
lods
inc
ja
cmp
push
add
add
out
or
sbb
je
inc
mov
test
lock
jo
cmp
mov
sbb
loope
cs
adc
add
pop
insb
xor
push
xchg
push
lahf
dec
jl
jo
and
adc
add
push
lods
and
jge
je
js
and
lret
mov
subb
ds
add
and
ret
jbe
popf
mov
jnp
dec
mov
shlb
mov
inc
mov
and
dec
xchg
fs
or
test
inc
mov
stos
bound
pop
adc
jno
inc
or
fdivl
xchg
aam
add
pop
cltd
into
mov
call
loopne
inc
push
notb
das
inc
xor
add
push
lods
in
mov
test
inc
xchg
popa
adc
push
add
add
jmp
jl
add
leave
jecxz
and
stos
inc
js
dec
pop
addl
test
lea
mov
or
and
stc
mov
imul
adc
push
push
mov
fmull
stos
add
cmp
call
outsl
das
xchg
and
sub
cmp
pminsw
out
movsl
scas
rorb
inc
js
or
fwait
shll
push
pushf
push
adc
fwait
or
jno
out
sbb
fs
loopne
cmp
add
jb
mov
mov
xlat
add
push
test
dec
fdivl
jbe
pop
pop
pop
add
pop
outsl
dec
sbb
hlt
push
inc
xorl
arpl
inc
cmc
outsb
adc
add
mov
jp
enter
xchg
or
mov
pop
pop
adc
and
aaa
add
mov
loop
xlat
mov
pop
mov
add
in
and
int3
jo
mov
pop
jp
repz
inc
std
lea
clc
mov
and
les
sbb
add
mov
push
sbb
sarl
sub
shlb
cwtl
ret
cmp
mov
test
aaa
jle
xchg
dec
or
xchg
add
pop
fnsave
loope
ljmp
pushf
add
lods
pop
iret
fldcw
xchg
and
mov
xchg
sbbb
lret
int3
cmp
mov
loopne
push
popa
jle
add
sub
sub
and
rcll
mov
pushf
call
imul
pop
xlat
xor
jo
pusha
je
xlat
les
repnz
xchg
shrl
cmp
or
pop
mov
jnp
add
cs
jmp
and
enter
xor
mov
adc
pusha
push
adc
add
popl
test
or
lahf
mov
nop
cwtl
xchg
push
enter
cmp
sub
dec
adc
inc
and
mov
test
inc
adc
xchg
sbb
outsl
or
lahf
fcmovu
int
jns
dec
jnp
ret
mov
inc
mov
sbb
lods
xor
mov
push
push
inc
xchg
test
and
shlb
push
or
aad
fwait
and
sbb
sub
testl
in
rorl
mov
xor
jo
or
nop
movsb
add
push
add
ret
sub
mov
out
xlat
and
daa
inc
movsl
sub
nop
clc
icebp
dec
add
test
fdivrs
mov
pop
test
test
adc
xor
lods
pop
out
pop
cmp
mov
cwtl
fdivrs
jmp
lods
or
dec
call
or
mov
inc
push
or
lock
hlt
and
adc
cwtl
nop
cmp
and
push
mov
mov
popa
and
xchg
clc
outsb
and
adc
mov
popf
add
adc
in
mov
inc
lods
dec
and
mul
rclb
out
mov
add
inc
js
loopne
inc
jecxz
adcb
cmp
push
adc
ljmp
mov
add
cli
jmp
ror
push
add
dec
out
fmull
add
and
pop
nop
jbe
push
sbb
dec
popf
add
fdiv
cli
es
movsb
add
pop
ss
pop
clc
cmp
mov
aas
xor
jl
dec
xor
out
sub
add
jle
pusha
mov
std
lock
rorl
adc
in
push
js
push
jno
fstl
add
outsb
adc
add
add
loope
ds
in
mov
test
int
mov
popf
movsb
cli
movsl
add
jno
mov
xor
leave
ja
pop
sbb
add
das
mov
icebp
mov
fwait
subb
leave
dec
stos
aad
stos
call
inc
inc
sbb
mov
inc
and
cmp
xor
xlat
repz
test
addr16
mov
cmp
or
loope
jg
adc
push
outsl
sub
and
and
imul
inc
push
sbb
lock
lods
mov
pop
jbe
add
jmp
cltd
jl
cmp
data16
insb
ljmp
adc
add
inc
dec
test
push
enter
adc
aam
ljmp
add
sub
and
inc
fstps
cmp
out
nop
nop
xchg
dec
add
sbb
push
cmp
enter
adc
lcall
dec
in
aam
add
xchg
inc
mov
jle
inc
add
outsl
push
shlb
push
mov
mov
xchg
jb
mov
inc
lock
and
inc
sub
mov
xor
cmc
jecxz
loopne
cltd
xchg
or
cli
pusha
inc
push
mov
add
cwtl
in
mov
mov
sub
out
add
push
mov
sbb
sbb
lcall
fsubr
pop
sbb
mov
add
fbld
scas
add
xorb
cmp
lods
in
lcall
pop
repnz
add
push
testb
adc
icebp
inc
xor
sbb
or
mov
shlb
out
jmp
insl
clc
cli
mov
in
xchg
sub
dec
sub
mov
leave
cs
pop
adc
or
inc
int3
sbb
add
lret
inc
test
stos
push
call
mov
aad
xlat
xchg
aas
and
popa
dec
mov
sti
adc
or
add
push
adc
iret
icebp
add
sub
out
xchg
adc
loop
enter
fldenv
mov
in
pop
xor
outsb
push
fcoms
mov
jecxz
cmpsb
jo
test
lcall
adc
and
loopne
inc
je
stc
fcoms
mul
jg
inc
ret
int3
adc
xchg
popf
sub
and
jle
sub
shrl
sarb
inc
movsb
mov
dec
rorl
sbb
mov
add
mov
add
cwtl
call
test
sub
inc
inc
adc
mov
mov
lods
ljmp
pop
mov
in
inc
push
iret
stos
pop
sub
sbb
enter
or
pop
jge
adc
adc
fnstcw
adc
xorps
mov
lret
pop
loopne
repnz
ret
pop
icebp
sbb
mov
mov
pop
mov
jo
pop
andl
cmp
mov
pusha
inc
adc
fiadds
out
ljmp
inc
mov
or
test
or
push
lods
mov
lcall
xchg
int3
push
sbb
iret
imul
clc
inc
enter
repz
dec
xor
mov
and
scas
in
leave
mov
and
test
rolb
and
push
cmp
or
imul
rorl
jb
outsl
and
mov
call
loopne
rorb
fs
xlat
stos
lea
stos
sub
add
dec
out
orl
cmp
test
or
lret
sub
cmpsl
sbb
xchg
jno
repz
pop
mov
icebp
push
dec
cmp
test
nop
sbb
jg
pop
add
mov
cmp
loopne
add
jg
jl
out
xor
mov
popf
mov
or
pop
insl
xorb
and
repnz
aad
aam
or
xor
call
les
lock
adc
mov
je
scas
es
in
mov
cmp
jecxz
roll
pushl
xor
or
fistl
orl
fs
pop
pop
imul
dec
mov
das
clc
pop
and
jo
and
sbb
stos
xor
xchg
pushf
sbb
push
clc
xchg
jno
les
xor
mov
cs
loopne
adc
push
rcr
movb
pusha
orb
scas
dec
inc
loopne
adc
xor
and
or
sbbl
push
mov
repz
pop
push
bound
xor
push
out
add
mov
pusha
int
js
add
lods
cmp
movsb
leave
sarb
adc
aaa
jg
sbb
add
sub
adc
mov
jns
clc
add
add
jno
js
int3
test
sahf
les
sbb
rorb
push
dec
dec
ljmp
add
mov
decb
jl
repnz
mov
enter
ljmp
push
rorb
inc
shl
mov
decl
sbb
pop
testl
inc
popa
les
add
cmp
mov
jo
cmp
ret
mov
outsl
mov
xchg
testl
xor
nop
loope
call
lock
sub
mov
scas
lods
pop
add
xor
ret
push
dec
mov
adc
and
adc
adc
push
cmpsb
pop
adc
mov
and
or
cmc
rol
sbb
in
inc
movsl
testb
pop
fwait
add
sub
mov
pop
mov
inc
pop
and
in
push
sbb
movb
mov
lea
jae
call
popa
orl
out
int
data16
sbb
or
or
in
nop
add
jg
add
xor
stc
jo
pop
mov
dec
loopne
repnz
and
fsubrs
cli
aad
mov
cmc
sbb
shl
sub
and
adc
add
ret
and
cmpl
das
inc
mov
adc
dec
loop
add
cmp
or
js
xor
xchg
ja
add
stos
pushf
fidivrl
jge
cmp
pop
ret
mov
pop
mov
rorl
inc
inc
hlt
and
jmp
add
xchg
idiv
push
jb
rcrb
mov
add
xchg
cltd
cmp
ja
fidivs
add
mov
cmpsb
rcl
clc
jo
xor
sbb
shlb
repz
xchg
in
movsl
or
shrl
enter
and
loopne
push
cmp
std
xor
or
loop
int3
mov
js
mov
pop
and
testb
movsb
nop
stos
add
repnz
loopne
sti
stos
cmp
xorl
lods
popa
push
enter
or
or
xchg
in
pusha
and
cmp
pushf
xchg
mov
lods
mov
pop
sbb
inc
sub
add
mov
das
cwtl
ret
inc
bound
enter
dec
add
stc
cli
dec
add
inc
and
popf
and
fldcw
fnstsw
and
dec
push
inc
outsb
sahf
fwait
sbb
pop
add
icebp
jl
outsl
cmp
sub
mov
xor
inc
mov
test
lods
and
sarb
mov
xchg
inc
pushf
loopne
adc
fxtract
sahf
cmp
add
cmp
stos
sbb
push
stc
dec
shll
outsb
loope
nop
jns
mov
cmpsl
js
dec
dec
pushf
sar
xor
fwait
add
pop
movsb
aam
ret
and
je
xor
pusha
pop
mov
pusha
ds
pop
notl
sbb
xor
jmp
aad
sub
pop
jne
enter
test
fs
mov
dec
add
dec
filds
cld
in
nop
enter
mov
shrb
push
mov
push
in
or
mov
pushl
adc
pop
xchg
jne
mov
pop
sub
dec
faddl
cmp
dec
push
jnp
xchg
jmp
xor
or
add
add
or
int3
call
repz
outsb
jb
jmp
mov
js
or
inc
cmp
jbe
aam
inc
test
jl
roll
jmp
dec
mov
mov
sub
push
rorb
or
je
adc
fildl
and
jmp
inc
jl
sub
mov
xor
sub
les
or
push
mov
pushf
dec
cmpsl
lods
shll
mov
add
hlt
popa
mov
pop
sti
mov
repz
movsb
mov
lods
push
and
bound
cli
or
mov
add
mov
int3
add
and
sub
imul
cs
test
dec
or
cli
out
bound
dec
pop
mov
dec
jecxz
jnp
mov
loopne
andb
jle
jl
push
add
pop
in
or
mov
repz
faddl
push
dec
dec
lahf
jg
fbld
pop
xchg
fs
cmp
in
lods
pop
imul
dec
loopne
jb
mulb
aaa
mov
call
mov
add
out
in
push
dec
enter
test
sub
std
insb
fsubs
add
inc
dec
stos
mov
comiss
addb
ror
mov
ror
sub
repnz
add
and
push
xorb
hlt
les
ds
adc
ljmp
and
rol
lcall
ja
and
test
inc
test
nop
cmp
pop
pop
adc
inc
push
out
and
jg
fwait
popf
sbb
fstps
mov
andb
adc
add
push
movsl
cmp
mov
jns
cld
les
pop
mov
dec
sbb
cwtl
mov
pushf
add
stos
cmp
insb
jp
pop
sbb
xor
mov
sahf
in
nop
add
pop
push
push
sub
loop
ret
clc
sbbb
popf
not
xchg
cmp
xor
jg
cmp
popf
in
pushf
add
aam
push
fldenv
xor
decb
loop
cmp
or
mov
test
mov
add
out
xor
and
mov
lcall
mov
or
and
cwtl
jo
shrb
iret
cmpsl
mov
daa
clc
inc
add
jae
or
data16
jle
in
inc
mov
subb
pop
pusha
ljmp
mov
or
in
sub
mov
ret
pusha
jno
jo
push
inc
add
sbb
orb
mov
push
add
or
dec
add
ljmp
cmp
sbb
lock
loopne
inc
lcall
insb
add
arpl
push
pop
sbb
dec
xchg
pop
or
aam
insl
lcall
cmp
hlt
cs
push
jb
jbe
inc
xor
pop
or
adc
xor
fidivl
or
or
mov
dec
push
ja
sbb
adc
and
ja
sar
xor
loope
xor
hlt
or
xchg
and
xor
cmp
add
cmc
dec
nop
pop
inc
nop
jge
imul
fcompl
sbb
mov
push
or
dec
ja
sbb
sbb
and
cli
inc
push
mov
clc
test
outsb
sbb
add
ljmp
add
xchg
add
xchg
pop
mov
sub
std
mov
aad
xor
nop
inc
and
add
cltd
sbb
sbb
popa
sbb
or
add
sahf
sub
pop
paddd
lret
mov
js
push
adc
hlt
push
adcl
imul
push
dec
cmpb
stc
fwait
inc
lock
fsubrs
and
dec
loopne
loopne
or
mov
xor
mov
jecxz
aam
jo
pop
movsb
lock
dec
add
scas
adc
mov
mov
mov
call
test
nop
enter
jae
cld
push
xor
mov
add
lock
je
jp
add
mov
imul
outsb
push
scas
xorb
add
into
jae
add
push
clc
hlt
dec
and
jge
push
mov
mov
pop
sbb
jno
xor
clc
push
fmul
inc
sub
sub
lahf
ss
movsl
cli
stos
aam
add
pop
cs
inc
nop
sub
sbb
sahf
xor
sbbb
aaa
sub
popa
jo
cwtl
jmp
clc
test
add
and
dec
cmp
adc
add
dec
jno
cmp
sbb
dec
add
ret
adc
adc
or
xor
push
les
sub
sbb
cmp
or
adc
xchg
and
mov
mov
movb
incb
mov
ret
jae
out
jge
mov
and
sbb
clc
rorb
push
jns
pusha
sub
lds
sub
js
loopne
add
negl
and
inc
add
pop
add
or
pop
dec
push
negb
inc
or
add
xchg
xor
push
xchg
enter
cmp
mov
xor
sub
lahf
shlb
add
lret
add
and
stos
movsb
subb
inc
push
imul
mov
or
inc
or
pop
adc
add
pop
push
add
mov
mov
adc
movsl
adc
adc
pushf
lret
ret
add
cmp
or
les
js
clc
flds
fists
orb
popf
outsl
add
movsl
outsb
sbb
mov
mov
push
in
roll
add
push
jns
addr16
cs
sbb
loopne
xchg
add
enter
inc
sbb
cmp
inc
or
xor
cmp
adc
fwait
push
mov
mov
pop
add
push
loopne
shrb
add
cmp
mov
and
and
sbb
pop
fucom
dec
movl
push
rorb
push
in
and
sub
out
inc
xchg
jge
jae
adc
push
add
pop
xchg
punpckhbw
aam
push
aad
mov
js
xchg
or
inc
sbb
jmp
inc
mov
pop
into
sbb
sbb
fisubs
jl
sub
je
xor
xor
mov
in
jp
adc
inc
repnz
mov
pop
mov
add
jnp
addl
sub
add
sbb
call
and
and
mov
add
cli
add
jo
call
sbb
or
pop
sub
pop
sahf
or
call
cltd
add
sub
nop
les
dec
dec
jne
lods
xor
mov
mov
ss
movsb
add
cmc
pushf
jle
je
jl
and
in
mov
mov
pop
mov
sub
inc
aaa
add
sbb
xor
xchg
jmp
arpl
mov
mov
test
pop
lock
cmpsl
push
push
push
cmc
jmp
jae
add
xor
jae
clc
out
cmc
mov
insb
mov
ja
and
bound
subb
mov
shlb
or
int
pusha
add
lahf
mov
out
fsubrl
jmp
shl
cld
mov
jbe
outsb
sbb
sti
cmp
add
ret
pusha
lahf
sbb
rcl
mov
xor
aam
aaa
repnz
dec
clc
push
add
xorb
jb
sbb
ret
sbb
jp
and
addb
jo
pushf
adc
imulb
in
lret
pop
aad
leave
loopne
pushf
xchg
popf
cwtl
push
mov
stc
and
adc
push
loop
pop
cs
dec
adc
dec
pushf
sub
sbb
and
mov
mov
cmpsb
negl
cmp
imul
push
mov
jae
nop
pop
inc
cltd
inc
inc
jo
add
js
mov
push
push
add
dec
mov
and
or
xchg
mov
cmp
hlt
inc
jno
xor
dec
pop
mov
mov
enter
lahf
xchg
xor
inc
notb
add
dec
ss
mov
aaa
add
inc
aam
int
xor
adcb
xlat
pop
mov
pop
icebp
clc
add
loopne
dec
push
or
xchg
cmp
test
pop
adc
push
mov
mov
add
cltd
mov
addr16
fs
aad
cmpsl
pop
add
out
insl
adc
cwtl
insb
or
cmp
insb
cwtl
insb
pusha
jae
in
inc
mul
dec
cltd
dec
test
jbe
jle
loopne
mov
jp
shrb
jmp
sub
rolb
and
cmp
xchg
push
add
sbb
js
lcall
cmp
xor
aam
repnz
imul
xlat
fimull
push
add
mov
dec
lahf
aam
adc
or
sbb
sbb
dec
or
paddsb
push
mov
mov
push
nop
rorl
out
push
jnp
test
xor
in
or
mov
testb
incl
inc
inc
adc
icebp
js
xchg
or
or
fsubl
outsl
arpl
push
sbb
jmp
enter
shlb
and
pop
in
push
icebp
test
repnz
je
push
push
insl
add
sarl
aad
call
xchg
adc
orb
xor
add
add
movsb
loopne
call
testl
adc
insb
mov
ret
imul
xchg
sbb
xchg
out
adc
push
or
fidivrl
test
movsl
add
test
jle
popa
out
add
testb
adc
insb
stc
enter
sub
out
adc
mov
stos
enter
cmp
scas
mov
or
push
sbb
adc
into
jb
int3
inc
dec
popf
add
aam
shll
mov
inc
add
jg
push
xchg
mov
cmp
xor
inc
sahf
add
fiaddl
scas
in
add
and
clc
das
adc
add
nop
push
xor
push
mov
mov
push
cmp
enter
inc
hlt
mov
push
and
xor
aad
sub
imul
loopne
pop
jl
jno
lcall
cmpb
js
or
or
dec
cli
sbb
pmulhuw
sahf
sbb
dec
aam
sub
adc
dec
push
mov
aas
adc
or
pushf
outsb
and
push
cmpl
movsb
and
mov
xor
cld
pop
mov
es
and
add
rcl
addl
jae,pt
push
aas
popa
les
pusha
adc
nop
inc
nop
outsb
xor
sbb
mov
aam
adc
aam
push
rolb
mov
push
xor
add
out
add
outsl
int3
stc
js
inc
and
add
or
mov
pop
aam
lock
or
xlat
int3
cmpb
inc
pop
jo
cltd
mov
andb
enter
lods
pop
in
or
and
aas
adc
subl
jecxz
mov
cmc
mov
sbb
flds
or
les
int3
out
movsb
hlt
hlt
add
pop
sub
sahf
push
test
inc
dec
and
insb
sbb
loopne
cmc
pop
mov
jb
insl
mov
dec
cwtl
sub
test
insb
inc
adc
pop
and
ja
xor
xorb
cmp
inc
popf
cmc
mov
xor
xor
int3
icebp
adc
adc
xor
dec
mov
adc
in
or
mov
sarb
dec
xorb
dec
cmpsb
mov
sub
pop
xor
and
fcomp
iret
stos
lea
sbb
imul
repnz
lret
jle
enter
cmpsl
inc
and
test
lock
mov
mov
and
shlb
fs
and
add
inc
mov
inc
lcall
dec
in
lret
sahf
insb
pop
mov
scas
daa
int
push
adc
xlat
inc
push
lock
pusha
add
hlt
push
lods
bound
add
scas
dec
pop
cmp
imul
aad
sub
xchg
ljmp
test
dec
push
js
add
push
mov
sahf
popf
mov
in
xchg
outsl
imul
inc
jb
pop
les
pop
pop
pusha
into
popa
xchg
imul
stos
jmp
and
or
mov
lret
stc
popf
in
mov
jge
mov
movsl
cwtl
xor
je
lock
mov
cmp
and
xchg
mov
mov
jbe
or
jp
rolb
das
sahf
push
and
sub
lods
adc
enter
push
mov
cmp
test
mov
insb
jno
push
lock
ficomps
ja
hlt
or
jb
aas
cwtl
test
mov
push
jecxz
inc
orl
in
and
cli
add
insb
mov
sti
add
mov
fsub
aam
sahf
pop
inc
inc
cmp
add
inc
fisttps
inc
lods
push
lock
nop
insb
test
pop
cmp
jo
inc
jmp
sti
add
outsb
fcmovnbe
add
xorl
lret
pop
adc
jnp
add
loop
or
pop
daa
xchg
add
inc
hlt
cmp
mov
inc
rcr
and
dec
pop
and
mov
popf
mov
add
lea
les
jb
or
and
and
loopne
scas
add
fcompl
shlb
xchg
sahf
mov
add
pop
mulb
pop
inc
cli
add
add
out
or
negb
xchg
ljmp
dec
dec
xor
insl
mull
ss
or
stos
add
int3
ret
push
in
fidivl
jno
dec
inc
fadds
ds
inc
sbb
push
fsubs
jecxz
pop
sbb
je
xchg
jnp
cmpsl
ret
cmp
pop
popf
popa
inc
enter
or
lcall
pop
aaa
fs
push
js
in
rorl
sub
push
and
jge,pt
hlt
rorb
or
pop
push
cld
shl
and
cmp
mov
inc
insl
mov
push
xor
or
mov
add
push
mov
add
cmc
xchg
aas
cmpsb
and
lcall
cmpb
xchg
sbb
dec
movsl
shlb
mov
repnz
in
sbb
cwtl
add
inc
sub
add
test
ljmp
push
es
testl
xchg
mov
pop
add
ret
faddl
mov
adc
dec
in
into
add
lret
jns
test
sbb
push
inc
fcoms
or
pusha
jmp
iret
mov
adc
stos
and
cmp
enter
add
mov
add
add
loope
in
add
or
in
jb
push
push
xor
xchg
cmp
fs
jne
add
sub
add
lret
push
insb
jle
aam
es
imulb
sbb
test
test
mov
inc
add
sub
add
mov
lret
mov
into
add
jno
test
add
les
add
data16
je
int3
sub
mov
mov
mov
add
add
dec
inc
pusha
loope
imull
ss
add
movsb
movl
inc
add
jnp
ror
leave
jb
or
push
jne
sti
push
cmp
in
int3
or
and
inc
adc
add
jae
push
add
add
mov
cmpsw
loope
scas
sbb
repz
test
add
pop
ljmp
mov
dec
fdivrl
testb
dec
mov
lods
mov
inc
ljmp
xor
in
inc
nop
jo
mov
xchg
mov
aas
push
inc
ret
cli
xor
lds
xchg
andl
jl
sbb
scas
mov
in
rorb
insb
loopne
repnz
cmc
jmp
jo
sbb
outsb
mov
xchg
cmp
fs
jbe
mov
xor
outsb
nop
lea
popa
and
mov
jo
mov
shl
int3
add
stos
add
fldt
test
stos
enter
test
xchg
cmp
push
push
push
add
incl
inc
xorb
iret
dec
popf
and
les
pop
addr16
jl
cmp
mov
clc
sarb
or
out
sbb
das
or
push
dec
jnp
jl
rorb
add
test
mov
jmp
ret
into
mov
push
xlat
xchg
cltd
sub
jb
fucomp
ja
cmpsl
pusha
cmp
lret
or
mov
add
push
push
xor
into
sbb
dec
push
gs
clflush
repz
mov
out
jg
lock
jae
jne
mov
or
mov
inc
shlb
mov
add
xor
add
push
cmp
xchg
insl
loope
push
outsl
mov
add
sbb
push
push
addr16
pop
sbb
jbe
push
daa
sub
ljmp
push
rcrb
cmp
add
das
bound
jle
jmp
ljmp
mov
test
into
cmp
mov
adc
mov
sbb
or
std
cmc
add
lahf
dec
pop
hlt
sub
loopne
add
in
pusha
xor
dec
lds
inc
inc
lock
or
jmp
shl
jns
sbb
xchg
sbb
mov
pop
pop
push
jmp
imul
repnz
add
int3
pusha
pop
outsb
fnsave
lods
or
test
fsubrl
mov
aam
femms
sub
sbbb
or
or
and
lea
mov
xor
lock
scas
xor
les
stc
dec
fiaddl
add
add
imul
pop
js
pop
sub
lahf
mov
mov
gs
fsubrs
data16
pop
mov
add
mov
or
mov
pop
lcall
and
mov
addr16
into
decl
stos
imul
lret
mov
sbb
outsb
out
pop
sbb
jge
in
pop
xchg
dec
mov
pop
sti
cmp
cltd
popa
loopne
and
lods
testl
popf
and
jno
xchg
mov
in
rcrb
adc
jmp
imul
inc
lods
push
or
or
or
push
xor
adc
cmp
rcl
push
jae
insb
andl
xlat
cli
testl
mov
clc
test
and
in
jg
and
les
into
add
or
test
loope
push
cld
or
les
add
cmp
popf
mov
mov
add
mov
les
test
adc
nop
mov
sbb
jecxz
pusha
addl
sbb
push
push
cli
ret
mov
cmc
xchg
cmp
xor
pop
jo
add
pop
aas
dec
mov
or
mov
jo
jb
in
add
push
push
test
pop
stc
cmpsl
in
add
jmp
out
sahf
pop
mov
push
aam
pop
push
in
pop
cmp
mov
enter
les
inc
push
cmpb
push
push
pop
jno
movb
inc
push
pop
enter
das
sbb
sbb
les
inc
mov
pop
test
cmp
add
mov
add
jae
pop
outsl
mov
xchg
sub
pop
cmp
imul
sub
cmp
mov
mov
cwtl
pop
les
push
fcoml
add
cmp
cs
out
shlb
outsb
lret
mov
out
xchg
popa
add
sahf
sbbl
lret
pop
xchg
cmp
leave
iret
push
cwtl
lods
cmp
jg
xchg
jno
aaa
inc
icebp
dec
dec
orb
addb
ret
jo
mov
mov
call
add
push
inc
loopne
in
add
hlt
in
add
jecxz
or
sub
mov
stos
loop
cmp
or
fildl
lods
pop
bound
hlt
out
lea
cwtl
lahf
inc
adc
cmp
mov
push
or
pusha
shll
push
clc
jge
int
cld
aam
and
outsb
cmp
xor
xor
jp
rolb
aas
outsl
add
fbld
pushf
aam
test
arpl
adc
dec
add
sbb
dec
add
add
sub
pop
shll
jmp
xor
in
mov
icebp
add
xchg
jbe
push
data16
dec
ljmp
les
add
push
fisubrl
popa
xlat
ret
fimuls
xor
xor
popa
shll
add
int
bound
add
dec
push
or
push
add
pop
test
ficomps
dec
insb
rorl
cwtl
push
add
mov
scas
andb
pop
push
lods
sbb
add
test
inc
fidivrs
cmpsw
or
cltd
sahf
lods
add
mov
pop
dec
add
test
and
xor
mov
dec
push
add
icebp
jg
inc
mov
mov
mov
fldt
cmp
bnd
add
int3
and
add
pop
roll
jp
popa
pop
fidivl
dec
out
imul
xchg
push
mov
je
enter
filds
xlat
xchg
ret
test
pop
adc
push
xor
rcll
xor
aad
aas
mov
mov
cmp
mov
adc
aaa
sbb
mov
jnp
xchg
pop
mov
push
scas
xchg
and
mov
bnd
inc
inc
es
add
js
into
add
add
and
enter
mov
loopne
adc
lock
cmpsl
insb
adc
add
pop
cmpsb
cmp
add
and
dec
xchg
add
or
push
shll
jl
pushf
push
es
add
xchg
pop
mov
js
js
push
and
inc
cs
mov
shl
add
mov
je
dec
add
lods
xor
and
repnz
push
sub
outsb
clc
loopne
push
or
lret
cmp
jge
ret
add
and
xchg
or
pop
xor
test
lock
dec
bound
sub
aas
out
sti
add
loop
jmp
or
leave
pop
sbb
inc
scas
shll
xor
inc
or
mov
lods
adc
mov
pop
lods
dec
xor
xchg
xchg
push
cmpb
pop
inc
rolb
xchg
mov
repnz
jmp
rol
inc
in
mov
movl
les
pusha
push
sbbl
dec
adc
cmp
fmull
iret
mov
aas
and
add
jp
or
mov
inc
cmp
pop
int3
clc
in
sbb
mov
xchg
dec
push
jo
nop
sbb
dec
loop
bound
or
je
sbb
orl
leave
sub
xorb
dec
enter
out
sub
scas
add
cmp
test
test
lret
daa
and
test
and
dec
jns
add
popl
out
add
sahf
lret
movsl
add
fsubrl
and
pop
and
jge
insl
fsubr
mov
xlat
and
test
sub
enter
lods
sbb
lods
sbb
sbb
mov
push
xlat
adc
add
cmp
sub
sub
ror
xor
mov
xor
push
js
icebp
idiv
scas
ffree
rcrb
mov
sbb
cli
or
and
or
xchg
dec
cwtl
test
mov
add
push
fucomi
mov
bound
dec
cld
add
adc
or
mov
add
xchg
mov
dec
out
lock
negl
pop
ret
or
push
or
in
bound
and
cmpb
mov
lcall
xchg
sar
push
call
outsb
addr16
pop
repz
adcb
xor
mov
rclb
xor
push
dec
mov
mov
cmp
stos
jae
mov
and
push
xchg
cmpsb
mov
add
sub
popf
fiadds
push
repnz
bound
mov
pusha
inc
dec
adc
cmp
add
sub
icebp
enter
loope
pop
imul
test
mov
mov
lods
adc
inc
dec
xor
jg
mov
pop
ret
xchg
sbb
mov
ficomps
jb
sub
cvttps2pi
push
pusha
jnp
lds
pop
add
add
hlt
or
adc
add
mov
pop
push
jns
stc
loop
pusha
jnp
mov
imul
or
mov
movsb
sbb
dec
sub
pop
int3
mov
add
sbb
orl
jp
ret
mov
lcall
cmpsl
inc
mov
faddl
sbb
andl
dec
xchg
repnz
jns
add
sbb
mov
ljmp
dec
sahf
sbbb
push
jno
adcl
xor
fidivrs
add
data16
stos
sbb
sahf
dec
jb
popa
sub
insl
and
mov
adc
mov
or
stos
mov
lcall
in
in
jecxz
shl
jb
addl
fsub
jmp
mov
xor
sbb
fsubl
loopne
bound
insb
int
add
ljmp
aaa
xor
xchg
in
js
push
adc
mov
in
push
dec
mov
mov
ljmp
dec
mov
sarl
sub
push
or
inc
in
mov
pushf
dec
add
jp
loopne
mov
mov
dec
cmpsl
pusha
idivb
push
xchg
or
sub
daa
fdivl
push
push
sbb
in
or
repz
cmp
imul
add
sti
dec
mov
mov
test
adc
add
aaa
icebp
dec
xor
dec
mov
mov
ss
mov
add
mov
sub
lock
andb
and
inc
add
xchg
test
mov
mov
xchg
xorl
xor
gs
in
repnz
or
pop
lret
mov
les
mov
clc
push
jno
pop
repnz
inc
outsl
cmc
mov
scas
xor
sbbb
jecxz
mov
ret
mov
pop
push
mov
stos
pop
xor
cmp
jmp
nop
add
sub
jo
or
gs
sbb
jp
rcr
xchg
add
pop
or
cmp
fisttps
enter
and
ficoml
out
or
rclb
xor
jecxz
jp
mov
sbb
pop
jmp
adc
xor
imul
leave
jge
inc
add
adc
push
shlb
jb
movsb
das
sbb
mov
sbb
xchg
ficoms
xor
adc
dec
add
mov
inc
das
loope
xchg
call
adc
lds
fimull
out
aad
pop
stc
inc
call
pop
add
xchg
mov
mov
xor
sbb
dec
mov
test
fcoms
cwtl
add
bound
into
enter
mov
ret
ret
out
fisubs
add
repz
shlb
add
seta
mov
adc
jp
jecxz
pop
push
sub
sbb
and
adc
in
js
shlb
mov
pop
rcr
cmc
cltd
stc
mov
mov
xor
fisubs
scas
sub
arpl
push
pop
push
pop
cmp
xor
cmp
sub
xchg
sub
mull
cwtl
adc
xor
fsubs
mov
sub
adc
mov
dec
pop
aad
and
js
aas
insb
sbb
rcrl
jae
dec
xchg
ffreep
loop
rcrb
lods
shlb
out
inc
add
out
mov
leave
adc
mov
bound
xor
pop
push
aas
daa
dec
fwait
shl
jo
add
cmc
inc
xchg
in
mov
or
push
icebp
scas
pop
and
cwtl
out
add
mov
mov
adc
roll
push
bound
push
loop
aas
pushf
cmp
adc
sbb
ret
xor
xchg
bound
push
push
clc
or
or
xor
and
in
mov
fwait
push
push
sub
add
ret
inc
adcb
xor
repnz
inc
insl
out
mov
cs
inc
mov
pop
and
ja
mov
fsubrs
and
mov
jnp
stc
imulb
push
and
loopne
pop
hlt
dec
subb
arpl
adc
pusha
mov
dec
out
xor
add
sub
dec
dec
je
dec
inc
insb
mov
add
bnd
lret
ds
mov
adc
xor
push
scas
dec
mov
and
roll
sbb
loopne
lock
fabs
push
jne
add
popa
pop
out
inc
pop
push
dec
ss
or
mov
dec
xchg
mov
imul
lahf
pop
sbb
pop
orb
test
push
adc
cld
inc
movsl
add
sbb
or
cmp
mov
inc
add
ds
xchg
adcl
into
outsb
in
cs
add
jp
mov
push
or
dec
ljmp
cs
add
sub
dec
mov
add
sti
jge
data16
mov
inc
mov
js
jp
jne
das
and
lea
enter
dec
js
aas
cmp
or
dec
and
movsb
loop
add
minps
adc
or
mov
or
roll
ss
add
pop
add
call
pop
cmp
xchg
fisttpl
mov
icebp
add
fmull
mov
lods
out
andps
sub
sarl
xor
cmp
push
fbld
shrb
xchg
movsb
mov
fucomi
sbb
mov
sbb
gs
add
inc
xchg
popa
adc
aas
out
push
add
add
mov
mov
xchg
mov
and
call
subl
xor
clc
or
cmp
or
dec
lock
jp
mov
in
mov
jl
test
pop
lds
inc
xchg
imul
dec
push
xor
or
sub
sbb
xchg
mov
scas
sbb
ret
push
hlt
sti
add
addr16
lods
stos
into
js
jns
push
cmc
inc
les
jg
jmp
sbb
cwtl
add
insb
jmp
aas
jo
in
pop
push
xchg
fimull
pop
fistpl
pusha
rorb
add
cmp
and
xor
add
sbb
mov
adc
sbb
xchg
mov
test
int3
jnp
add
add
call
mov
adc
xchg
jge
or
repnz
push
leave
pusha
addr16
lea
mov
fidivs
out
andb
add
bound
push
xchg
pop
mov
adc
xor
pusha
mov
or
sbb
jo
es
adc
mov
and
sub
inc
add
push
fs
jp
sahf
dec
gs
cmp
xchg
xor
adc
xor
jno
jle
add
jg
mov
imul
jp
adc
xor
clc
rclb
xor
jmp
out
sbb
mov
test
fdivs
xorb
cli
sbb
jmp
add
jb
cmpsl
ss
test
leave
lock
adc
mov
outsb
rorb
cmpsb
jo
mov
leave
and
pop
pop
or
sbb
xor
cmp
add
jae
test
xor
push
bound
xchg
sbb
add
sub
add
dec
adc
push
insl
aam
mov
insb
mov
xor
adc
je
call
rorb
sub
mov
xor
out
xor
fsub
aaa
adc
inc
and
insb
cmp
test
imul
clc
push
psllw
dec
xchg
add
adc
aaa
xchg
enter
and
dec
mov
repz
dec
loope
mov
in
aam
sbb
mov
es
dec
lock
add
xchg
in
push
inc
call
rclb
xchg
sub
adc
push
fisubl
inc
imul
push
popa
test
jl
or
push
fcmovnu
cwtl
enter
mov
dec
scas
inc
and
add
xchg
xchg
jle
incb
mov
cld
inc
mov
or
ss
clc
inc
push
and
xlat
sub
sbb
sub
shlb
add
xor
ja
add
mov
add
popa
test
repz
xchg
xlat
mov
dec
lods
rorl
loopne
xchg
jp
dec
ret
xor
push
mov
add
xor
add
mov
jecxz
je
fistpl
rol
aaa
add
daa
sarb
xlat
or
push
int
into
jl
lock
fdivl
cmp
insb
fidivrl
inc
mov
jp
sbb
add
sarb
adc
repnz
push
push
push
loopne
mov
int3
push
test
xchg
imul
mov
call
adc
sub
mov
pusha
inc
ret
mov
call
lcall
and
pop
movsl
adc
inc
cmp
jo
sub
xchg
mov
fildl
or
mov
and
cmp
mov
push
mov
adc
outsb
mov
rcll
cmp
add
mov
xchg
test
mov
arpl
rclb
cwtl
adc
aad
mov
mov
pop
adc
fnstenv
adc
add
in
mov
add
loopne
jl
pop
inc
hlt
roll
cmp
repnz
pushf
sub
xchg
xor
mov
inc
inc
dec
mov
adc
out
mov
add
sti
mov
add
jmp
aam
dec
cmp
stc
xchg
out
testl
add
in
push
inc
adc
push
add
daa
fnstcw
mov
filds
imul
sbb
add
inc
sbb
fs
dec
mov
add
and
xor
and
je
mov
mov
pop
push
adcb
inc
clc
mov
xchg
bound
cmp
inc
mov
mov
push
lret
mov
ss
mov
aaa
cmc
imul
mov
mov
mov
xor
andb
rcll
push
js
clc
inc
cmovno
test
cmp
inc
mov
pop
pop
add
nop
pop
sub
mov
pop
vpunpckhbw
pop
push
pop
popa
push
sbb
mov
xor
sub
push
ja
adc
aas
std
or
mov
test
adc
push
xorb
sbb
shl
add
mov
data16
fdivrl
jno
inc
sbb
test
clc
jb
dec
xchg
pusha
mov
mov
cmp
movsb
fsubl
inc
loop
add
stc
sbb
shlb
lods
adc
cmp
sub
mov
das
push
enter
xchg
or
outsl
test
and
cmp
lods
push
cli
pop
repz
addb
sbb
dec
leave
mov
clc
fistpl
out
or
xor
divl
into
and
lahf
mov
shr
xor
stc
or
dec
icebp
test
jae
jo
jb
in
insb
add
add
insl
xchg
pop
pop
xlat
fildl
mov
cs
pop
add
jo
enter
daa
test
daa
test
lods
inc
jo
aaa
or
add
lods
dec
popa
push
adc
xor
jns
jp
push
dec
mov
imul
in
inc
dec
push
add
add
adc
xchg
test
sbb
xor
cmpl
pop
cmp
leave
dec
push
testl
test
nop
push
dec
mov
sub
loope
push
push
lds
pop
popl
xchg
add
dec
shlb
xchg
ficoml
movsb
scas
jp
inc
ja
enter
imul
addr16
cwtl
mov
sbb
add
outsl
loop
leave
sbb
xchg
and
mov
adc
aas
xchg
xchg
mov
dec
add
in
cmp
dec
rcrl
or
ljmp
push
ds
or
ret
out
or
push
mov
call
mov
or
push
adc
sub
mov
cltd
add
aad
in
add
lcall
or
cs
pop
mov
adc
add
stc
pushf
jmp
xorl
xor
hlt
adcl
push
or
sub
in
imul
xchg
data16
xor
push
pop
sub
pop
test
cmp
out
add
jp
xchg
mov
rclb
or
test
lock
sub
xchg
push
in
and
test
mov
cld
loopne
xchg
jmp
fiaddl
jae
push
ret
ds
lods
pop
dec
shr
scas
mov
and
filds
jmp
xchg
or
add
rcl
outsl
into
xchg
mov
mov
mov
hlt
dec
jl
or
xchg
imul
or
lret
pop
jle
mov
mov
dec
jnp
pop
flds
outsl
cli
push
fisubrl
jb
imul
test
push
lahf
or
mov
loopne
mov
add
xchg
fildl
mov
sbb
push
add
jb
test
xchg
aam
testl
call
enter
and
xchg
add
or
out
or
xchg
dec
sub
pop
push
add
fimull
enter
add
fdivrl
dec
mov
pause
rclb
movsl
xchg
aas
lea
scas
cmp
xchg
push
fidivl
out
or
test
enter
stos
in
js
repnz
sub
inc
sub
cltd
mov
sub
jb
add
xor
imul
sbb
mov
pop
xchg
rolb
pop
push
add
xchg
arpl
sub
jecxz
and
cwtl
sbb
outsl
add
int3
stc
dec
popf
and
add
in
mov
mov
sarl
in
pusha
addr16
idiv
mov
mull
inc
mov
test
inc
sbb
lret
pop
sahf
mov
inc
add
mov
je
jns
inc
mov
nop
cwtl
add
push
sbb
movsl
jns
add
mov
push
dec
push
pushf
xchg
loop
pop
sti
mov
fistl
dec
mov
push
adc
fiaddl
pusha
inc
jp
adc
aaa
add
mov
jns
add
call
add
cli
and
push
ret
push
xlat
add
out
out
pop
test
xor
mov
rcl
addl
lock
pop
scas
push
js
loop
mov
mov
pop
pusha
testl
orb
and
movsb
sti
mov
loop
mov
mov
jns
js
faddl
or
inc
nop
pop
test
adc
push
enter
push
mov
dec
arpl
int3
movsl
pop
pop
push
pop
mov
hlt
das
loopne
mov
pop
and
inc
inc
jnp
inc
mov
xchg
push
or
add
pop
mov
mov
cmp
sbb
xor
add
in
fdivl
push
inc
dec
popa
and
repnz
rorb
pop
or
fs
mov
dec
mov
movsl
das
fsubl
xchg
cmp
mov
add
clc
fcmovnu
enter
pop
cmp
lcall
add
cmp
and
ja
adc
out
dec
push
repnz
subb
outsb
cmp
add
rorl
movsb
repnz
mov
mov
and
les
ja
mov
lock
arpl
push
adc
mov
lods
sbb
sbb
push
loop
ret
dec
cmp
lea
enter
push
lods
adc
xchg
and
xor
fsubrl
setno
add
es
mov
int
mov
mov
mov
inc
push
scas
ffreep
add
adc
add
nop
or
aad
push
mov
aas
add
cmc
lods
cmp
add
mov
mov
aam
inc
add
mov
adc
mov
add
aad
push
add
push
mov
add
std
pop
mov
sbb
add
dec
xor
add
dec
dec
mov
mov
fstps
shl
int3
fnstsw
daa
pop
pop
pusha
mov
std
inc
add
mov
repnz
sub
cmp
jl
and
xor
xor
repnz
imul
add
lret
rcrb
adc
in
mov
add
xchg
lds
pop
mov
pop
cmp
add
inc
mov
fimull
int3
lock
cmp
mov
adc
mov
pop
pushf
addb
xchg
or
dec
inc
add
ss
daa
push
ds
sub
adc
fiaddl
ss
out
adc
stc
sahf
adc
adc
and
adc
aam
adc
nop
fnsave
outsl
cltd
out
loop
mov
sbb
adc
and
cli
xchg
nop
loopne
ds
push
add
shrb
test
mov
push
adc
lcall
enter
add
or
mov
sub
add
push
adc
fwait
add
xor
add
add
std
dec
cmp
mov
pop
dec
add
out
push
sbb
mov
and
sub
xor
or
mov
addl
incb
idiv
mov
ss
imul
cs
add
pop
aas
xchg
rorb
and
call
repz
dec
xchg
aaa
sti
push
iret
enter
push
dec
je
fstpl
mov
test
adc
xor
xchg
testl
adc
sbb
mov
js
shlb
and
push
lcall
stos
mov
rorl
push
outsb
mov
sub
push
adc
mov
xchg
add
sub
sbb
push
pop
add
xchg
dec
jo
lock
xchg
sub
dec
pusha
cmp
fldcw
xlat
push
es
or
push
sbb
or
fs
jmp
adc
inc
fstpt
dec
cmpb
data16
push
mov
fldl
inc
popf
mov
inc
stos
aad
mov
add
aaa
sbb
je
mov
movsl
xchg
xchg
adc
push
xchg
pop
push
dec
sahf
cmovl
mov
xorb
or
cmp
mov
push
cwtl
xchg
loopne
mov
add
sbb
or
dec
addl
imul
mov
pusha
xor
in
or
push
add
xchg
rcll
cmp
xor
xor
cli
or
rclb
xor
pop
ret
nop
jmp
jecxz
bound
dec
addl
int3
cmp
add
call
dec
sbb
jecxz
cmp
xlat
dec
mov
and
out
dec
and
sbb
stos
jno
jo
stc
rcrl
outsl
pop
xchg
push
pop
sbb
ljmp
les
inc
js
fs
pop
and
cmp
call
das
popf
into
cmp
fsubrl
pushl
repnz
mov
adc
pop
or
inc
mov
movsl
push
std
jnp
dec
loop
nop
cmp
cmc
mov
cmpsl
shl
push
pop
lock
add
adc
cmp
jp
fsubrl
add
xor
in
mov
shl
push
or
jns
cltd
adc
dec
mov
cmpsl
scas
add
pop
add
cmp
inc
sbb
je
pop
call
xchg
data16
fdivl
pop
mov
or
jbe
add
inc
dec
mov
xchg
inc
dec
call
mov
aaa
aam
jg
and
mov
xor
sti
add
test
xor
dec
imul
es
cltd
add
scas
xchg
neg
cmp
mov
loopne
sbb
jo
jnp
adcl
xchg
stos
cltd
add
shll
push
aaa
xchg
divl
cmc
cmc
rcrb
xchg
es
adc
xor
push
test
jl
add
mov
cli
adc
push
hlt
add
cs
mov
sbb
add
adc
popf
cwtl
in
mov
fsubl
daa
dec
neg
xor
mov
push
je
dec
pop
sbb
out
adc
push
push
hlt
xor
mov
or
cmp
dec
xchg
in
jno
adc
sbb
inc
pop
push
aaa
jp
out
and
fistl
push
and
je
std
imul
cmp
mov
lods
adc
das
pushf
inc
and
pop
jnp
mov
add
add
rorl
outsb
push
cmp
lods
out
jle
add
jb
xchg
shrb
pop
fildll
sub
adcl
mov
sub
out
clc
daa
add
mov
add
or
inc
mov
jb
dec
clc
jne
pop
mov
fstpt
push
add
lods
out
adc
dec
mov
movsb
int3
push
adc
xchg
daa
dec
cwtl
mov
lods
mov
inc
push
xchg
xchg
daa
push
xchg
xor
out
in
sub
pusha
sbb
pop
lahf
mov
cmpsl
xor
sub
daa
mulb
iret
push
adc
cmpsb
add
sbb
jnp
test
testl
adc
fs
mov
out
ss
jmp
push
and
hlt
pusha
jo
in
ret
cmp
jb
pusha
out
jae
js
cmp
cmp
cmp
add
not
mov
mov
jns
nop
dec
cltd
cmp
in
sahf
ret
sub
dec
xchg
enter
insl
mov
cmp
lock
imul
ret
push
loop
insl
nop
dec
push
xlat
or
aaa
add
repz
loopne
add
lcall
faddl
arpl
xchg
fisubl
lods
nop
sbb
sbb
add
and
and
add
xchg
or
adc
add
movsb
xchg
push
je
push
inc
and
pusha
mov
sub
mov
aas
shll
imul
jl
in
hlt
dec
jnp
sbb
pop
mov
inc
imul
xor
js
or
lock
xchg
pop
ret
mov
pusha
sti
xor
out
xor
inc
add
sub
cmpsl
inc
shlb
mov
sub
cwtl
xchg
and
in
imul
or
jo
mov
loope
cld
sahf
add
ficoms
mov
jbe
pop
cmp
fidivl
dec
fwait
add
dec
mov
les
jo
cwtl
inc
add
loopne
ret
xchg
stos
cld
mov
push
inc
or
lahf
adc
cld
pop
out
scas
icebp
lock
rolb
sub
hlt
rclb
loope
loop
nop
inc
add
jb
sub
xor
fstpt
call
cltd
mov
jmp
xor
cmp
outsl
cmpsb
pop
add
sub
sbb
jle
inc
add
fnsetpm(287
andl
loope,pn
inc
sub
stos
or
daa
dec
fsincos
mov
adc
rol
movsb
dec
pushf
xor
push
dec
or
mov
or
dec
movsl
jle
add
lods
pop
lahf
aaa
ficoms
mov
push
stos
loopne
lods
add
in
cmp
sbb
inc
push
sbb
mov
add
mov
addr16
gs
mov
out
js
xchg
mov
out
mov
mov
stos
imul
mov
test
in
out
push
push
jns
or
frstor
mov
add
push
adc
sbb
loop
inc
add
inc
sbb
fiaddl
jp
mov
mov
add
sub
push
mov
add
test
mov
mov
and
jae
cmpsl
aam
mov
mov
fdivrs
pop
mov
and
sbb
sar
xor
rclb
ficoml
leave
sbb
pop
and
lods
inc
or
xlat
pop
shll
call
shr
les
mov
testl
sbb
jb
ljmp
add
insb
cmpb
fistps
add
sbb
ds
call
adc
mov
inc
fs
mov
xchg
and
xor
call
sbb
add
fcoml
mov
nop
ret
add
lcall
sub
lock
mov
insl
test
dec
addb
push
mov
popa
arpl
les
xchg
mov
mov
test
rcrb
pop
add
stos
rclb
cmp
dec
sub
faddl
repz
aaa
add
fbld
daa
pop
loop
jl
sbb
lret
mov
mov
cltd
jl
sbb
iret
adc
and
xchg
mov
xorb
js
stc
add
pushf
sti
movb
dec
push
adc
mov
push
lods
xchg
rcrl
adc
xor
xor
push
mov
cltd
mov
lock
mov
mov
add
subb
sbbl
pop
jo
push
and
jp
es
shr
push
loop
jbe
xorb
fs
sbb
add
js
mov
loope
add
mov
and
jp
ret
dec
mov
push
test
scas
shll
movd
cs
mov
mov
push
cltd
xor
hlt
aam
push
pop
and
sub
insb
dec
mov
lods
cld
pop
cmpsb
push
add
repz
mov
ret
dec
sub
ss
rolb
pop
adc
push
mov
mov
jb
pop
dec
lock
jmp
inc
dec
add
jp
clc
mov
pop
adc
rorb
pop
mov
push
aam
iret
add
add
repnz
enter
test
and
jge
adc
shlb
mov
shlb
jecxz
je
push
dec
lds
xor
imul
mov
sub
je
xchg
subb
inc
aaa
loopne
lret
inc
adc
mov
and
cmp
sub
sbb
jae
add
les
fsubl
in
lods
addl
loope
or
xchg
bound
xor
xor
in
subl
add
add
sbb
mov
and
lock
outsb
outsl
iret
or
test
les
push
mov
inc
add
std
jo
out
pop
jno
dec
push
sub
test
lods
and
lods
fstpt
in
push
sub
mov
push
push
sbb
addr16
dec
mov
push
jbe
pusha
fwait
aas
cmp
ljmp
xchg
repz
add
cltd
ret
adc
imul
mov
and
jmp
xor
xchg
dec
lds
and
ds
pop
jmp
loop
mov
and
xchg
add
adc
repz
or
in
jg
push
sub
mov
adc
mov
sub
nop
push
je
adcb
add
enter
out
add
shl
clc
sbb
leave
repnz
test
mov
rcr
push
mov
fcomps
lods
outsl
es
xchg
test
cmpsb
jg
pop
lods
add
push
xor
cwtl
das
mov
aad
in
ds
xchg
int3
incl
sbb
lea
jb
cmp
arpl
shlb
sub
stc
les
rcrl
add
inc
sbb
aas
clc
or
fs
inc
lock
dec
fnstenv
add
testb
push
jle
xchg
add
pop
das
and
sbb
mov
rol
bound
pop
jbe
jo
cmpsb
push
push
add
rclb
sub
imul
mov
repnz
fcompl
ljmp
sub
jb
dec
fnsave
lods
push
imul
adc
rolb
test
and
xchg
add
jg
sub
pushf
sub
stos
push
push
add
adc
sbb
cmp
jp
outsb
out
cmp
sub
pusha
jle
push
adc
fbld
pop
mov
in
inc
add
mov
jbe
call
shlb
xchg
inc
push
sub
lret
lds
xor
loop
dec
cmpsb
sub
mov
mov
dec
lods
mov
cmpsb
inc
jge
or
nop
push
ss
sub
aas
mov
pop
sub
int3
add
pushl
jb
mov
add
xchg
pop
ljmp
mov
ret
lods
lock
xchg
mov
pop
testl
xchg
popa
push
and
xchg
cmp
out
es
aam
jbe
inc
add
xlat
into
mov
sbb
push
cmpsl
and
add
addb
loope
cmp
aas
movlps
pop
test
pop
sub
jae
add
mov
cmp
adc
ss
sbb
jbe
test
pop
dec
add
push
pop
jecxz
sub
pop
das
jnp
or
ljmp
out
or
inc
test
jge
dec
add
fldcw
lods
lock
out
int3
add
mov
mov
sub
jnp
and
in
add
je
in
jmp
adc
shlb
shll
dec
mov
loop
sub
nop
and
out
out
ja
adc
in
cmp
mov
pop
pop
sub
aad
inc
mov
mov
sub
mov
jnp
movsl
mov
or
sub
aam
inc
stc
scas
aam
or
scas
xlat
leave
dec
fldl
mov
subb
pop
adc
and
pop
ret
mov
enter
mov
out
inc
xor
fcompl
test
fs
mov
jno
mov
or
xor
and
js
mov
or
into
and
nop
or
inc
add
out
sub
and
in
adc
popf
add
ret
dec
mov
add
pop
lods
pop
inc
jle
nop
out
or
cmp
rol
or
stos
pop
pusha
mov
std
push
or
sarb
dec
dec
loopne
ljmp
call
mov
pop
add
imul
pandn
sbb
mov
jmp
lret
add
scas
mov
add
adc
stos
jbe
div
ds
stc
add
push
push
popa
and
push
jmp
add
addl
cld
fdivs
sub
and
hlt
fs
incl
mov
cwtl
xor
pop
cmp
and
in
and
inc
inc
cmp
adcb
mov
lods
or
inc
ret
sub
jnp
add
mov
bound
in
mov
add
inc
xor
dec
loop
or
ret
test
cmp
clc
test
xor
xor
push
loope
cmpsb
js
add
or
mov
pop
fildl
adc
test
and
rolb
jp
sbb
xor
fdivr
jae
and
cmp
lds
add
mov
add
sub
arpl
sub
clc
sarl
lret
test
pop
jge
shlb
fisubl
or
add
nop
mov
xor
or
push
lods
pusha
lock
les
movsb
aas
lods
sbb
mov
adc
inc
jo
or
sbb
inc
add
mov
sbb
cwtl
dec
adc
pop
cmp
enter
in
orb
push
add
jle
arpl
adc
lock
add
dec
adcl
stos
jle
xor
mov
iret
cmc
sub
into
inc
pusha
cmpsl
push
ret
add
push
push
mov
wrmsr
loop
xor
hlt
dec
je
push
cltd
enter
cmp
mov
and
je
add
sbb
cmp
add
aam
fcmovnb
mov
xchg
das
push
les
lods
addb
xchg
cmp
mov
imul
repnz
sbb
add
xchg
inc
jne
push
xchg
enter
jo
ljmp
add
fiadds
cmp
adc
add
or
out
add
bound
cltd
fistl
pushw
mov
sbb
pop
test
cmp
lds
imul
push
pop
pop
push
arpl
inc
nop
xchg
int
adc
cli
jb
add
clc
sub
push
add
add
push
loope
add
repz
inc
or
mov
mov
movsl
add
or
push
xor
cvtps2pi
add
incl
xacquire
xlat
or
sub
pop
cmp
adc
sbb
mov
mov
or
jbe
arpl
jl
add
sub
adc
lock
or
cmp
add
or
add
xchg
mull
sbb
in
mov
fidivrs
shr
xor
sbb
add
jnp
fdivp
mov
dec
jb
sub
jl
mov
add
addb
push
in
incb
fnsave
movsb
roll
jecxz
xor
cld
push
cmp
mov
and
icebp
scas
stc
int
mov
jno
decl
addl
dec
nop
nop
out
adc
popf
fistpll
jns
and
xchg
fadds
mov
mov
xchg
xor
movb
cs
push
in
or
push
pop
add
test
sbb
gs
jb
and
mov
and
push
stos
push
ret
push
adc
sti
hlt
iret
inc
nop
insb
add
lcall
shlb
or
push
fstpt
add
mov
outsl
add
mov
out
add
push
xchg
add
mov
lret
adc
nop
in
mov
add
cld
repnz
add
xchg
adc
pop
scas
test
and
icebp
out
loop
xor
aam
mov
sar
repz
cmp
push
popl
enter
jo
push
xchg
mov
fistpl
adc
lret
dec
mov
ret
out
xchg
jae
xchg
repz
and
dec
sub
or
dec
or
fwait
test
add
add
insb
fsubr
in
dec
aam
movsl
dec
rorb
or
add
les
pop
inc
insb
addr16
pop
inc
enter
push
repnz
add
add
cmp
mov
loopne
fistps
shlb
mov
dec
enter
mov
inc
add
pop
pop
das
jecxz
cmove
mov
cmc
mov
int3
cmp
shlb
pushf
faddl
push
insb
cmpb
in
hlt
mov
pop
clc
fcom
mov
mov
in
pushl
push
xchg
pusha
add
jge
lret
sbb
dec
push
ds
push
les
mov
or
cmp
adc
xorps
fs
jecxz
cmp
mov
jmp
adc
lods
cltd
or
add
mov
pop
adc
mov
push
push
jp
repz
xor
pushl
fs
jecxz
and
add
int
inc
xchg
sbbb
add
or
aam
sub
aad
adc
mov
neg
xor
mov
xchg
push
and
adc
js
pop
int
stos
adc
jo
xchg
pop
jnp
cmp
mov
sub
leave
inc
andl
push
lock
sub
cmp
mov
std
pusha
dec
push
add
mov
xchg
sbb
add
fwait
xlat
ja
movsb
cwtl
mov
add
mov
arpl
push
dec
js
add
mov
dec
cld
inc
add
nop
aam
mov
rcr
add
repz
mov
inc
out
jle
test
enter
mov
or
cmp
xorb
mov
lret
orb
add
loope
push
cmpsb
xchg
sbb
pop
xchg
dec
std
add
repnz
adc
adc
dec
outsb
add
pop
cld
or
jo
mov
sahf
adc
xchg
addl
jbe
lock
pusha
sub
orb
xchg
mov
xchg
sarb
push
out
mov
stos
cwtl
mov
gs
push
sub
lods
loopne
roll
rorl
and
mov
mov
fistps
pop
pusha
push
sbb
addr16
pop
push
repz
scas
in
sarb
pop
push
ret
fadd
mov
dec
jo
iret
cmp
mov
pusha
movl
push
sbb
push
add
rcrl
popa
add
insl
sbb
add
es
shlb
ljmp
cmp
or
add
daa
sub
mov
push
sub
mov
mov
add
dec
es
outsl
shrb
add
jp
clc
mov
test
gs
sbb
imul
push
jmp
xchg
test
dec
pop
mov
mov
hlt
mov
dec
mov
add
mov
and
sub
adc
adc
outsl
add
and
lods
adcl
xlat
pop
shlb
or
jne
popf
fdivrs
ss
or
mov
dec
int3
pusha
aas
out
xor
test
add
roll
mov
insl
add
xchg
shlb
mov
push
cmp
ficomps
inc
add
leave
insl
push
add
dec
call
mov
addb
sahf
pusha
fildl
add
mov
into
jb
dec
dec
pop
sbb
flds
or
int3
cmpsl
nop
or
stos
fwait
push
ja
dec
and
mov
test
add
add
sbb
out
repz
loope
push
outsl
or
inc
jl
movsb
mov
cmp
lret
pop
repz
xlat
pop
xchg
xor
mov
xchg
mov
mov
adc
inc
out
fnstcw
cmp
mov
imul
add
xchg
mov
jbe
add
shll
xchg
mov
pop
add
sub
lret
inc
test
sbb
out
add
ret
orb
mov
add
jg
lds
xor
out
test
jg
hlt
jg
testb
adc
or
jg
add
and
data16
sub
jp
gs
imul
jnp
repz
mov
cmp
jb
movsl
rcll
or
cltd
lret
inc
inc
shrl
icebp
test
outsl
cld
divl
rolb
or
pop
loope
xchg
fists
shlb
add
loope
xor
imul
sub
das
addr16
popl
pop
cmp
adc
dec
mov
xchg
add
dec
cwtl
add
and
test
pop
nop
adc
adc
fnstsw
add
jb
pop
jbe
sahf
add
std
inc
xchg
scas
mov
add
jo
pop
in
int
outsl
ret
ljmp
and
inc
and
cmpsb
push
rcrb
push
and
push
inc
cmc
mov
dec
xchg
lods
mov
cmp
dec
pop
jle
cmp
mov
add
fwait
fs
jns
push
shlb
pop
mov
hlt
fwait
jo
scas
leave
mov
pop
mov
xor
xchg
inc
stc
clc
test
out
repz
jno
add
pop
cmp
add
inc
mov
jg
out
add
in
adc
popa
inc
aaa
cmp
or
inc
mov
jmp
dec
push
lret
push
cli
ss
aam
xchg
add
fdiv
rcll
clc
andb
xchg
testl
fs
icebp
test
out
clc
je
push
das
sub
xchg
xchg
stos
xor
adc
enter
stos
cmc
xchg
andb
add
adc
sbb
mov
add
pop
cli
addr16
push
leave
jl
or
or
cmp
xor
clc
fs
mov
cmp
lods
and
into
sbbb
or
cmpsb
in
pop
adcb
fs
jge
add
mov
mov
add
and
add
adc
xchg
add
call
ja
sub
and
cmp
pop
js
add
out
adc
push
clc
cmp
fimuls
mov
sbb
nop
lcall
aaa
inc
pop
pop
subl
xlat
aas
cmp
or
cld
xor
ficomps
mov
or
add
shlb
jg
jno
jp
push
loopne
inc
jmp
push
push
push
add
jl
arpl
sbb
push
fisubl
shl
pusha
fs
aas
adc
loop
sbb
xchg
sbbl
cmpsb
add
push
lret
cmp
rcrb
xlat
xor
cmovne
pop
or
sbb
cmp
add
adc
movsb
jp
in
xchg
dec
aam
test
inc
in
cmp
mov
enter
call
cmpsl
les
rcrb
dec
xlat
scas
sbb
xchg
push
xor
enter
inc
inc
jns
add
or
iret
dec
push
jmp
sub
test
mov
nop
xchg
add
pop
dec
add
incl
jle
pusha
mov
out
cmp
fmuls
sbb
ret
xchg
icebp
lea
and
nop
dec
movlps
mov
icebp
add
fiaddl
sub
jle
inc
mov
loope
insl
cmp
or
lock
add
xchg
cwtl
rcrl
loopne
scas
push
imul
in
dec
add
sbb
nop
xchg
aam
jae
add
fnstcw
or
add
push
add
cld
pushf
mov
rclb
es
negb
fstl
sub
out
cmp
add
nop
pop
ljmp
mov
or
xchg
scas
add
sub
jecxz
daa
arpl
inc
add
scas
sub
imul
and
push
mov
std
xor
xchg
shrb
xlat
add
mov
inc
mov
mov
cli
data16
sub
adc
and
or
mov
mov
mov
ficoms
dec
or
or
ret
adc
pop
pusha
nop
cmp
jle
cltd
bound
out
mov
mov
adc
pop
mov
mov
ja
scas
dec
in
add
mov
popf
sbb
add
xor
cmpsb
fwait
testl
sub
inc
cmp
faddl
int
add
lret
adc
cmp
cmp
mov
out
add
add
data16
jmp
add
mov
outsl
add
mov
pop
add
dec
jns
int
fmull
and
out
jl
gs
add
mov
dec
add
out
popa
std
push
dec
scas
data16
push
scas
xor
cmpb
jb
das
int3
cmp
add
adc
jo
adc
shlb
jp
mov
xor
cmp
cmp
filds
cmpsl
scas
aad
das
adc
add
ficoml
and
add
je
mov
pusha
or
push
push
or
sub
pop
sbb
xor
xor
inc
add
popf
pusha
sub
roll
push
dec
and
lret
xor
adc
sbb
adc
push
mov
shrb
mov
addr16
xchg
repz
lock
push
test
cmc
mov
push
mov
leave
push
aaa
pop
mov
and
mov
movsb
mov
fsubl
lret
sbb
arpl
lock
ss
pop
jb
adc
popf
sub
call
inc
push
imulb
mov
and
sar
jecxz
addb
cld
adc
xor
repz
mov
and
push
nop
adc
test
and
je
jp
add
add
into
int3
or
add
lods
pop
jnp
in
jno
pop
jbe
rcrb
out
xchg
push
mov
sub
data16
pop
ja
enter
adc
popa
add
fisttpl
or
jo
add
cmpsb
pushf
rolb
or
pop
add
mov
adc
mov
and
xchg
loope
imul
xor
mov
adc
add
call
and
add
in
add
xchg
adc
scas
lds
add
pop
add
inc
mov
pop
sbb
enter
mov
add
test
pusha
adc
rcrb
add
fidivrs
or
jle
xchg
and
add
xor
pop
les
pop
adc
inc
xor
cmp
xchg
sti
sbb
stos
fs
and
xchg
jl
into
mov
inc
sub
je
add
jmp
dec
jp
pushw
cmpsl
push
push
inc
fsubrs
rolb
mov
out
nop
mov
clc
fwait
push
inc
scas
xchg
inc
add
in
add
scas
jmp
sub
sti
insl
lret
and
push
imul
and
test
inc
xchg
add
addr16
sti
aad
cs
stos
sub
sbb
xlat
jge
std
rclb
or
rclb
add
imul
fimuls
lret
pop
and
add
and
xor
mov
push
inc
adc
or
lock
aaa
les
nop
rolb
fwait
dec
dec
add
jo
idiv
add
adc
out
cmp
or
jae
xchg
or
dec
in
pop
push
fcmovb
and
mov
pop
push
mov
mov
cwtl
data16
mov
mov
dec
cmp
push
and
add
in
mov
flds
aaa
hlt
xchg
jae
aas
dec
mov
sahf
add
push
stos
ja
repz
pop
cmpsl
ljmp
xchg
push
xor
adc
cmpsl
fbstp
jl
in
or
add
mov
dec
rcrb
push
mov
pop
add
imul
pop
cmpb
and
xchg
lcall
xlat
pop
sahf
mov
add
push
mov
loope
out
mov
movsl
or
clc
sti
sahf
dec
and
aam
addl
add
icebp
rorb
and
dec
aas
lods
aam
xor
fwait
cmc
add
stos
push
daa
add
and
pop
lds
push
roll
add
cmp
dec
les
dec
and
subl
cmp
jno
sahf
ret
push
sbb
adc
pop
popl
in
jne
rol
stc
hlt
add
cmp
cld
cmpsl
jne
pop
push
cwtl
add
pop
enter
push
fwait
dec
or
pop
cs
popa
and
mov
call
pusha
or
pop
rdmsr
dec
movsl
sub
mov
mov
cmp
push
nop
inc
aam
loop
pop
pop
std
and
lcall
push
loopne
xor
in
push
out
pop
add
xor
out
aad
jae
push
movsb
loope
imul
add
leave
imul
and
push
lods
xchg
inc
and
add
mov
out
icebp
add
inc
pop
inc
lods
lea
stos
or
es
xor
add
stos
insb
add
cld
aaa
push
xchg
in
mov
dec
inc
inc
test
mov
loop
out
stc
lret
repnz
push
incl
dec
pushf
add
cltd
pop
mov
add
movsb
xor
add
push
inc
imul
pop
add
push
nop
aam
mov
cmp
add
xor
inc
add
pop
add
sub
pusha
cmp
mov
mov
decb
sub
cmp
lock
lret
fsub
data16
mulb
add
std
in
adc
add
mov
sbb
fisttpll
jbe
mov
in
je
rol
mov
push
ret
shlb
into
pop
jl
sbb
mov
push
aas
and
gs
notb
fdivrl
pinsrw
popa
or
jae
jns
cmp
arpl
fucomip
mov
mov
pop
roll
add
mov
movsb
add
add
ret
sbb
rorb
jmp
cmp
or
rcrb
lea
jnp
movb
jl
push
popf
leave
out
add
xchg
addl
incl
mov
inc
pop
testb
repnz
add
cltd
mov
push
bound
cmp
and
movsl
shll
jp
je
xchg
pop
aam
arpl
or
inc
inc
add
push
fldl
pop
add
jno
push
add
out
xorl
movsb
inc
rcrl
xorb
imul
add
cmp
adc
xchg
sub
mov
jge
add
pop
cwtl
add
xor
sarb
shrb
mov
jle
les
nop
push
cs
rorb
daa
add
and
mul
dec
insb
add
xchg
sbb
aad
add
in
fstpl
test
das
sbb
dec
jns
in
sub
enter
out
pushf
sarb
mov
push
add
inc
sete
xor
and
xchg
mov
mov
jns
and
mov
mov
fs
stos
add
add
testb
ja
cmpl
das
add
sub
inc
xor
jae
add
dec
shll
std
sbb
shl
enter
nop
jg
in
sbb
cmp
repnz
fs
ret
pop
hlt
repz
in
xchg
jo
mov
pop
dec
push
mov
fs
push
jmp
pop
sub
adc
cltd
cmp
mov
call
dec
adc
repnz
lods
mov
push
push
xchg
pop
sub
add
mov
mov
sahf
mov
and
movsl
inc
ret
xor
mov
jp
pop
push
xchg
push
mov
add
pop
icebp
jo
call
nop
aas
mov
add
push
andb
jg
add
mov
out
push
sbb
xor
sbb
test
add
adc
mov
aam
pusha
add
dec
data16
sbb
pop
pop
push
imul
dec
and
add
sub
and
pop
mov
leave
push
cld
testb
out
stos
xchg
jae
movsb
in
pusha
pusha
inc
add
and
sub
cmp
fiadds
imulb
lcall
daa
aaa
jb
cpuid
xor
stc
ret
cs
addr16
ret
inc
add
pop
in
add
andl
loopne
add
enter
insb
fs
inc
adc
pop
incl
ljmp
or
jg
sbb
adc
adc
adc
and
pop
dec
inc
or
mov
call
int3
loopne
test
pop
cmp
hlt
cmp
add
test
cmp
inc
add
fdivl
iret
inc
ljmp
or
stos
mov
and
lcall
aas
lret
cmpsb
sahf
inc
mov
or
sub
ds
cmp
mov
dec
rcll
push
negb
sbb
pmaxub
push
mov
dec
sbb
data16
add
and
sub
xor
maskmovq
notl
repz
incl
daa
mov
mov
js
sbb
nop
out
es
ljmp
inc
inc
inc
xchg
lcall
and
repz
cmp
add
cmp
jmp
push
pop
popf
pop
nop
fdiv
inc
inc
fiadds
mov
dec
cmp
xor
sub
mov
adc
clc
rcrl
dec
mov
mov
xor
addr16
addb
mov
cwtl
hlt
jp
pop
iret
cmp
clc
push
mov
pcmpgtd
outsl
out
push
dec
ds
jae
pop
ret
mov
jae
idivb
pusha
enter
xchg
xor
test
orl
fcomps
dec
fcomip
xor
push
mov
ljmp
add
and
in
sub
push
inc
mov
sbb
xor
in
mov
repz
or
leave
bound
fsubs
cmp
jge
push
or
sub
fwait
cmp
sbb
pop
mov
loope
dec
sub
stc
test
loop
ljmp
cmp
dec
fildl
loopne
inc
add
add
in
scas
add
and
rcr
mov
cwtl
adc
rolb
dec
jo
movsb
sarb
cmc
pop
cmpsl
add
out
push
fildl
pusha
jmp
push
dec
fnstenv
mov
xor
cmp
xchg
shrl
push
lcall
inc
test
in
fimuls
xlat
out
mov
dec
mov
push
imul
pop
add
adc
push
xlat
mov
add
ja
out
das
pushf
add
push
addr16
pop
and
fnstsw
jo
xor
sub
xchg
pop
and
getsec
add
and
add
rcll
idiv
sbb
clc
pop
in
inc
mov
ss
inc
mov
mov
stos
mov
adc
adc
inc
test
fsubl
pushf
in
ja
and
sbb
inc
jmp
add
jge
lahf
cmp
pop
xchg
add
lock
adc
cmp
sbb
inc
mov
inc
sbb
daa
adc
push
fstpt
cs
loop
sub
lret
xor
aad
loopne
shrb
push
adc
sarl
popa
std
adc
add
mov
mov
add
addr16
dec
mov
inc
lock
shll
add
jno
lret
lods
iret
nop
repnz
pop
and
mov
adc
add
mov
jo
incb
push
jecxz
ljmp
fsubrs
call
sti
or
mov
and
add
and
pop
lods
sti
out
or
or
adc
clc
pop
sbb
mov
cmpsl
popf
mov
or
adc
mov
or
mov
xor
rorb
and
jns
cmp
sahf
aas
mov
popf
outsl
arpl
mov
xchg
ficompl
push
ret
sbb
push
clc
jns
jp
out
dec
rorb
add
add
add
pop
call
push
add
cmp
vaddsd
xlat
sbb
lock
add
or
push
jnp
test
pop
movsl
adc
inc
pop
rcrb
jno
mov
leave
popl
inc
add
fnsave
test
adc
cmp
add
inc
mov
repz
cmp
std
cld
shrd
ljmp
add
dec
sub
pop
push
cwtl
jne,pn
add
lock
xchg
dec
mov
outsl
cmpsl
jbe
mov
add
add
jnp
cmp
or
mov
push
lret
aas
add
int3
mov
push
jae
cld
test
and
inc
out
add
sahf
xchg
push
popa
std
shlb
cmpsl
sub
sbb
or
or
push
add
mov
cmpb
lock
xchg
pop
and
pop
js
movsb
adc
mov
cmp
rcll
push
ret
xor
xchg
cmp
stc
or
pop
jnp
add
fldt
dec
add
pusha
loop
and
add
add
and
mov
clc
jg
in
push
add
jae
fxch
movsl
dec
pushf
add
sbb
cmp
or
sub
test
cmp
lahf
inc
xlat
jnp
adc
sub
add
sbb
pop
push
push
sub
mov
mov
fildl
add
xor
mov
sub
jmp
xor
add
or
and
mov
and
cmp
inc
subb
push
into
inc
aad
adc
pop
repnz
xchg
jmp
mov
imul
add
movsb
sahf
add
adc
mov
aad
pushf
mov
mov
stos
fmul
push
fidivrs
jle
add
arpl
insl
leave
outsb
andb
add
test
inc
push
pop
add
js
push
mov
mov
enter
xor
mov
cmp
ret
pop
jnp
fcoms
add
push
sub
daa
js
jge
add
popf
push
fldl
mov
pushf
xor
mov
in
pop
xchg
mov
loopne
push
out
add
test
sub
push
nop
add
mov
inc
sbb
cwtl
pop
aaa
xchg
add
push
enter
ret
les
push
das
and
loop
mov
cmp
xor
jb
xor
cwtl
or
out
xchg
mov
sub
add
sbb
or
mov
jno
jl
popf
and
or
rorb
add
lods
lcall
test
inc
inc
sub
jne
add
lds
mov
jno
stos
xchg
daa
sub
mov
cmp
cmpsl
imul
adc
or
and
inc
jno
out
xor
cmp
cmp
mov
test
insb
jns
pop
int
call
add
push
and
popf
aas
xchg
add
ffree
and
mov
adc
movsl
daa
ret
outsl
aam
pop
xchg
push
fcmovnb
sub
adc
and
add
outsb
loop
hlt
or
push
test
xchg
mov
jae
mov
xchg
pop
add
in
subb
les
lcall
push
ds
cmp
nop
inc
dec
push
mov
pop
dec
mov
add
mov
lods
rcrb
fwait
mov
test
add
push
clc
cld
mov
cli
gs
sbb
cmp
sti
push
cmp
notl
ds
nop
and
and
adc
lcall
adc
push
movsl
xor
and
add
inc
pop
and
dec
xchg
adc
add
and
xlat
adc
add
ds
push
mov
scas
pusha
inc
xchg
adc
shlb
aad
loopne
loope
jmp
repz
loope
dec
fsubs
repnz
add
inc
fsubrl
nop
les
mov
std
popa
adc
sti
add
lcall
fs
sub
mov
enter
pop
scas
fwait
push
fiaddl
ja
inc
leave
lock
dec
cmp
loope
mov
test
pop
jb
and
movsl
add
push
xchg
jmp
sbb
rcr
xor
dec
out
mov
jbe
lret
add
outsl
mov
jmp
jl
enter
in
mov
loope,pn
add
cmp
cld
and
push
cwtl
fisubs
out
add
inc
jge,pt
sbb
inc
mov
mov
adc
add
xor
inc
push
filds
push
pop
ja
add
adc
xor
and
dec
xchg
push
adc
or
mov
fsubr
lock
cmp
lods
mov
adc
int3
cmc
add
stc
pop
gs
add
jno
inc
out
jns
xchg
pusha
add
mov
insb
orb
mov
inc
fmull
sub
inc
xchg
pop
jp
ret
cwtl
mov
out
rorb
pop
call
xor
fwait
mov
cmp
mov
sub
roll
and
loopne
in
test
movsb
in
push
shll
add
ds
mov
pop
push
add
fs
sub
shl
sahf
sbb
rclb
inc
stc
insl
xchg
mov
mov
jb
add
sbb
and
pop
clc
fidivl
xor
push
pop
jnp
adc
mov
add
and
jp
mov
gs
xlat
adc
xchg
aam
add
jecxz
xor
repnz
sti
rcrl
lahf
jmp
jmp
clc
insl
shrb
hlt
int
xchg
popf
out
hlt
sti
mov
adc
pop
dec
mov
rcrb
mov
mul
mov
jp
fisubs
and
pop
ss
add
push
daa
jae
inc
popf
aad
test
jge
pop
adc
sbb
push
pop
dec
mov
ss
inc
mov
cli
mov
test
add
cwtl
jae
pop
stos
outsb
add
inc
push
add
fistl
xchg
gs
divl
fidivrs
dec
mov
loopne
sub
add
popf
hlt
mov
pop
add
push
pop
cmp
mov
lea
mov
psubb
mov
jp
sub
pop
sahf
add
adc
sub
push
loopne
movsl
jmp
xor
insl
das
loopne
repz
adc
sbb
sarl
sub
fdivrp
xlat
les
jge
cwtl
add
jl
xor
and
adc
int
ljmp
dec
mov
adcb
add
mov
push
jae
push
add
lret
pusha
addr16
add
dec
cmpsb
out
add
iret
mov
and
xor
sbbb
mov
xchg
add
push
nop
repnz
cmp
imul
sub
xor
inc
add
out
in
fmuls
enter
loope
pop
lldt
jmp
outsl
in
js
add
out
scas
add
fisttpll
js
add
push
jmp
add
gs
lret
mov
rcrl
imul
add
imul
lahf
cmp
sub
add
ja
sarb
stos
or
xor
inc
aam
test
jb
and
fidivl
or
jecxz
mov
call
adc
push
jg
add
arpl
sbb
and
push
ficompl
add
cld
fimuls
push
fnstcw
pop
dec
and
add
or
adc
and
jecxz
xchg
xchg
mov
inc
cmpsb
xchg
add
sub
jns
mov
sbb
pop
ficoml
lock
ja
filds
orb
les
xchg
or
popa
std
inc
ljmp
dec
rorb
add
mov
add
xchg
mov
cltd
push
cmpsl
pushf
cmp
popa
add
xor
inc
loope
mov
dec
cmp
rcrb
xor
test
xor
cmc
aaa
in
sub
mov
dec
jg
adc
hlt
add
jns
push
inc
xor
pop
and
add
arpl
out
subl
addr16
call
enter
addb
xchg
jo
add
lret
aas
lods
inc
mul
divb
xchg
ja
or
xlat
roll
push
int3
loope
xor
sbb
bound
mov
sbb
cmp
add
adc
divl
add
ds
pusha
or
lret
mov
out
jp
mov
roll
push
js
repnz
sub
bound
push
shl
scas
pusha
cmpl
cmp
mov
repz
cli
fcmovb
xor
push
fdivs
mov
sbb
xor
inc
js
sub
ja
stos
std
subb
and
aas
scas
jle
mov
rolb
inc
outsb
mov
mov
sbb
dec
cwtl
or
js
add
add
icebp
adcb
cmpsl
rcrl
mov
push
call
jnp
xor
push
dec
pop
sub
insb
imul
mov
cli
js
stos
add
adc
push
repnz
rclb
out
divb
mov
mov
add
leave
xchg
adc
es
add
xor
mov
jne
lds
pusha
mov
cld
out
sub
mov
sub
popf
or
orb
inc
and
addr16
xor
add
rorl
aam
lods
lods
add
fistps
xor
stos
bound
out
xrelease
xlat
or
pop
push
loopne
fdivs
nop
hlt
xor
ljmp
adc
xorl
mov
pop
je
in
cmp
neg
cmpb
add
in
xor
addr16
jne
int
ret
and
and
lahf
in
push
jecxz
ficompl
inc
and
faddp
add
sbb
inc
jmp
add
test
cmp
and
xorb
lods
test
pop
or
shll
hlt
in
mov
mov
js
lcall
push
add
mov
add
adc
in
push
pop
jle
add
gs
insl
jb
sbb
or
daa
clc
and
add
mov
add
and
push
jp
jp
dec
inc
cmp
inc
test
and
pop
mov
ja
sbbb
jb
sub
add
lods
cs
mov
adc
sbb
call
cld
push
cltd
push
idivb
mov
gs
mov
jg
pop
add
mov
mov
push
jnp
jno
mov
cmp
jns
pop
fcomi
cmpsl
and
xorb
push
loopne
fdivr
rclb
dec
push
adc
fcomi
add
mov
fucom
add
in
into
out
sbbl
fwait
scas
fdivr
pop
xorb
rcll
movb
lahf
add
pop
daa
testb
push
subl
add
js
sarb
mov
push
mov
sbb
hlt
lcall
xor
loopne
mov
add
clc
out
add
stc
clc
pushl
xorb
or
out
jno
pusha
lret
xchg
and
test
or
incb
cli
inc
imul
test
pop
arpl
inc
scas
jmp
and
push
mov
insl
movsb
push
lock
mov
js
dec
add
addl
inc
xchg
movb
cmpsb
and
cmp
adc
lock
add
inc
xorb
insb
push
jns
xchg
mov
or
movb
cmp
add
cwtl
inc
jge
nop
adc
out
fstl
pop
push
call
pop
iret
adc
ret
mov
lods
add
and
scas
pop
and
add
sbb
imul
or
inc
jo
mov
xchg
add
mov
dec
aas
or
enter
push
daa
xor
mov
pop
add
adc
ss
push
cs
das
add
pushf
cmp
add
sbb
ret
push
xor
ffree
cmpsb
cmp
pop
pop
adc
incl
mov
cmp
adc
test
inc
add
jg
daa
add
jg
imul
add
pusha
xchg
mov
shrl
mov
mov
push
bound
inc
or
cmp
ja
lret
or
cmp
mov
push
scas
ret
lds
or
aam
xchg
dec
cmp
rorl
jle
jl
addb
js
push
rorb
negb
popa
add
clc
add
jge
sub
ljmp
out
lods
cwtl
outsl
aas
dec
cmp
xchg
subb
fldt
mov
add
int3
push
xchg
xor
pushf
inc
pusha
dec
and
scas
adc
dec
shlb
add
pop
pop
xchg
cmp
xchg
adc
dec
sub
or
lahf
int3
mov
add
aaa
pop
and
repnz
je
add
sub
es
lods
sbb
popf
mov
in
add
push
mov
dec
push
pop
in
pop
add
mov
btl
xorb
push
ljmp
and
add
sar
push
aas
add
mov
mov
cmp
lret
mov
pusha
or
push
mov
pusha
lret
and
in
jbe
repz
mov
sahf
push
adcb
lret
sub
mov
fildl
push
in
mov
mov
mov
add
sub
cmp
lret
dec
mov
loop
pop
dec
cmpb
sub
xchg
push
adc
cs
push
pushf
popf
rolb
and
and
sbb
lret
jg
sahf
xchg
test
xor
cmp
inc
add
and
and
cmp
inc
shr
push
jp
add
mov
das
dec
in
lock
in
cmp
pop
ret
mov
lock
nop
jnp
jns
pop
mov
rcll
inc
cld
add
or
xchg
add
xor
mov
ficoml
fcoml
mov
cmp
nop
add
pop
add
mov
mov
leave
pop
sbb
pop
mov
push
add
adc
add
mov
push
lock
cmpb
jb
mov
add
pusha
repz
push
aas
and
inc
fs
pusha
sbb
and
add
int
lods
repz
rolb
jae
add
cwtl
or
and
stc
add
xchg
xor
cmp
adc
cmp
aad
into
lods
pusha
dec
cmpsb
inc
insl
repz
repnz
cwtl
daa
in
and
ret
mov
push
and
imul
mov
aaa
sub
das
movsl
daa
je
mov
insl
sub
aas
sbb
and
lods
or
hlt
pop
stos
subb
push
mov
subb
cmp
shrb
sub
lock
inc
add
mov
out
pop
add
sub
sub
jo
add
cmp
fld
mov
pop
xor
pop
dec
int
cmp
add
movsb
cmp
mov
inc
out
cmc
xlat
sahf
xchg
pop
std
scas
cmp
dec
seta
mov
imul
es
adc
loopne
int
add
jg
pop
add
xchg
xor
js
int
mov
dec
xchg
cmp
outsl
mov
push
lret
cmpsl
mov
inc
mov
int3
lahf
jo
add
jle
sub
nop
js
add
sbb
cmp
pop
pop
push
inc
add
filds
fdivs
sahf
xchg
cmpsb
sbb
jno
add
scas
xchg
cmp
outsb
push
add
imul
inc
in
sbb
orb
loope
cli
and
push
inc
jnp
add
std
fbld
inc
jno
sahf
xor
and
adc
pusha
sub
jecxz
loope
sar
aas
lea
pop
or
push
add
sub
gs
out
sub
das
pop
jo
push
jle
clc
add
in
imul
lds
add
mov
and
adc
add
inc
sarb
add
jnp,pt
adc
mov
sbb
shlb
add
jge
mov
rolb
loopne
cmp
add
mov
leave
inc
add
rcll
fwait
loop
mov
lahf
xchg
shl
mov
scas
add
and
sahf
sub
daa
enter
lds
insb
cld
fsub
in
clc
mov
inc
outsl
loopne
movsl
sub
pop
mov
and
xchg
mov
imul
aad
repnz
dec
aaa
add
mov
subl
xchg
or
sti
fisttpl
lock
mov
lock
add
dec
pop
clc
jnp
sti
mov
sub
hlt
add
iret
or
fs
cld
or
faddl
sub
or
in
aam
repz
pop
jg
mov
stos
outsb
cmc
jae
jp
lahf
clc
sub
nop
inc
or
sub
sar
sub
add
sti
xchg
pop
sub
adc
cmpsb
mov
push
or
jae
add
roll
cs
je
xchg
jle
add
outsb
mov
test
cltd
les
test
call
test
jle
clc
insl
sub
dec
mov
shlb
fcoml
xchg
mul
scas
inc
ret
in
hlt
sbb
shlb
mov
jp
mov
mov
scas
jne
sbb
mov
and
sbb
outsb
pop
sbb
xor
in
andb
jne
mov
bound
inc
add
pop
int3
xchg
sbbl
and
enter
mov
inc
int
xchg
aad
idiv
fsubs
out
loop
ljmp
add
fldl
add
and
dec
xchg
mov
mov
add
std
adc
cmp
xor
sbb
shlb
inc
and
rol
add
lods
in
dec
ror
mov
add
xchg
test
dec
jne
into
jae
stos
sub
sbb
dec
mov
inc
or
stc
test
inc
xchg
jl
lahf
sub
paddw
arpl
mov
ja
lods
popf
dec
cmp
orl
or
add
stos
sbb
clc
loope
insl
sbbb
rolb
imul
leave
orb
or
cmp
push
cwtl
mov
mov
inc
cld
ds
mov
sbb
loope
pop
xor
into
lock
pusha
adc
mov
fbld
mov
mov
add
adc
outsb
das
pop
sbb
in
push
xor
loop
pop
sbb
cltd
jns
pop
add
les
fmull
pop
adc
scas
add
mov
add
xchg
int3
leave
add
mov
imul
or
fisttpl
outsl
mov
imul
lret
pushf
inc
push
mov
pop
pop
icebp
push
or
jns
add
aam
dec
jle
jl
rol
stc
mov
mov
xchg
jo
sub
sahf
dec
mov
pop
loopne
pop
nop
test
pop
sbb
xchg
xor
push
cld
fs
cmp
imul
repz
sbb
and
add
adc
inc
jno
add
cmovge
stos
mov
stos
jecxz
cmp
lods
xor
mov
pop
mov
int
ss
cs
xlat
out
test
sti
adc
jb
lahf
lcall
rsqrtps
sbb
jmp
cmp
faddl
cmovle
sbb
xchg
out
mov
mov
sbb
jns
sbb
scas
cwtl
je
add
in
xchg
push
push
addr16
add
pop
nop
insl
add
dec
inc
pop
imul
xor
mov
pop
repz
sbb
push
lahf
pusha
jbe
addb
test
mov
fbld
loope
sbb
sbb
jo
push
mov
inc
xchg
aaa
inc
adcl
sub
jnp
fs
cmpsl
push
cwtl
add
xor
pop
lea
xchg
arpl
and
loop
addb
inc
add
pop
shr
in
push
add
adc
adc
adc
inc
movb
xchg
xchg
mov
das
insb
add
sbb
movl
repz
stc
sbb
add
jle
xor
add
adc
sub
push
jg
fsubs
inc
or
adc
push
outsl
inc
dec
inc
cmp
adc
adc
loop
subl
mov
cmc
adc
lcall
pop
pushf
jnp
or
or
mov
or
add
js
jns
push
add
rorb
lods
cwtl
push
icebp
sub
mov
and
imul
sbb
mov
mov
pusha
scas
lock
movsl
xchg
add
stos
loopne
cmp
pop
mov
and
and
ficoml
jns
push
pop
les
lock
fists
into
sbb
rorb
repz
fsubr
and
push
orb
mov
or
cli
lods
add
adc
add
or
shlb
push
push
push
in
adc
mov
add
mov
rcr
enter
pop
jae
push
xchg
xchg
mov
sbb
rolb
lret
sbb
add
imul
xlat
imul
inc
bound
xchg
mov
shlb
sbb
out
loope
lret
jl
or
pop
adc
out
xor
mov
shrb
jo
outsb
repz
call
pop
rolb
mov
add
sarb
loopne
pop
dec
out
xchg
add
jg
push
pusha
stc
cmp
xchg
ja
fwait
sub
pop
xor
pop
loop
add
rorb
in
stc
add
and
lods
call
mov
js
ret
cmpb
jae
loopne
push
and
clc
addb
sbb
icebp
imul
add
mov
mov
iret
dec
cmp
inc
pop
cmp
xor
shlb
mov
add
add
cltd
push
lret
or
addl
sbb
jle
xchg
pop
add
pop
arpl
sahf
xchg
sbb
or
cli
add
lods
xchg
mov
or
add
out
testl
stos
arpl
leave
push
mov
or
and
sbbb
mov
add
test
mov
jle
imul
sbb
outsl
adc
out
dec
pop
cmp
fadds
adc
fidivrs
cmp
pop
inc
cmp
xlat
lret
fsubrp
dec
jp
adc
mov
test
xchg
ss
add
add
push
xor
mov
jo
js
add
shrl
sub
jge
push
in
cmp
push
in
imull
das
imul
aam
hlt
scas
dec
fidivl
std
fadds
das
push
pop
sbb
and
lret
fwait
in
notb
dec
and
cwtl
push
sbb
aad
mov
ljmp
mov
gs
cmpsl
data16
add
fbld
cmp
loope
leave
fdivs
dec
mov
xchg
sbb
inc
shr
cwtl
sarb
scas
fldl
sbb
cmpsl
xchg
xor
sbb
xchg
enter
push
and
jns
push
jg
je
xchg
or
lret
add
jne
std
inc
in
push
add
int
add
push
pop
mov
test
xlat
add
test
mov
add
and
adc
adc
inc
push
mov
add
sarl
jg
add
xor
lods
push
inc
movsb
fs
mov
fstpt
push
push
je
pop
ja
cs
cmpsb
jnp
mov
sub
hlt
aad
mov
mov
roll
stos
rcl
imul
imul
jle
test
add
ljmp
add
mov
rorl
cmpsl
add
loopne
shll
push
jmp
xor
aaa
cwtl
pop
sub
cld
aam
out
mov
insb
and
push
add
fisubrs
insl
mov
stos
mov
filds
cwtl
out
fnstcw
add
add
and
scas
and
rcr
cwtl
into
or
std
ret
pop
sub
pop
fcmovne
dec
loopne
jbe
inc
jns
cmp
bnd
sbb
rcrb
add
inc
and
sbb
add
stos
out
ficoml
stc
add
mov
pusha
loop
add
and
jo
test
cwtl
mov
push
mov
xchg
pop
loope
xor
push
dec
mov
shlb
clc
ja
cmp
mov
and
aaa
cld
inc
lret
loop
rcrb
mov
ret
test
orb
dec
cmp
sub
add
aaa
mov
adcb
pop
inc
aad
add
sub
dec
repnz
and
cmp
mov
jmp
cs
sub
cmp
xor
jne
mov
push
add
fcompl
jl
pop
inc
enter
test
or
mov
sti
cmpsl
inc
divb
cli
incl
jae
xlat
or
scas
fcoms
xor
mov
lret
or
push
pop
adc
add
sbb
into
mov
and
mov
rolb
push
ss
inc
shlb
lret
in
add
aam
pop
mov
mov
sbb
leave
adcb
mov
jle
in
mov
into
pop
scas
sbb
xlat
cwtl
xor
loopne
push
in
xor
shrl
mov
repz
data16
rolb
add
sbbb
les
mov
pop
add
cld
adc
mov
jle
xchg
add
out
adc
lods
add
aam
clc
lcall
mov
shll
add
shll
xor
daa
push
outsb
add
and
loope
icebp
mov
pop
cmp
pop
ja
scas
adcl
mov
dec
lahf
jle
sbb
or
add
mov
and
sbb
lock
dec
aad
setns
cwtl
add
mov
sub
xchg
pop
jnp
dec
inc
mov
into
jmp
pop
inc
aam
jl
iret
mov
repz
stos
sbb
or
insb
mov
mov
lock
test
and
sub
or
std
inc
add
rcll
xor
cmp
xor
sti
sbb
js
jo
decl
fwait
aam
sub
imull
dec
inc
add
pop
dec
xor
fs
adc
add
mov
add
hlt
movsb
mov
mov
inc
dec
cli
jbe
add
fdivp
xor
push
pop
xor
or
bound
sub
fsubr
inc
mov
xor
mov
mov
sbb
out
arpl
and
in
pop
inc
mov
push
sbb
gs
dec
jge,pt
sub
sub
cwtl
sub
add
fdecstp
adc
mov
loop
cwtl
dec
add
mov
sub
subl
xchg
test
add
xor
add
mov
mov
mov
sbbb
arpl
adc
pop
push
pop
fmuls
inc
jmp
ljmp
mov
add
aaa
xor
xchg
mov
mov
sar
add
je
inc
pop
jnp
xchg
add
popf
sarb
cld
scas
jle
mov
add
les
popa
daa
lcall
inc
pusha
mov
add
xor
xchg
mov
aam
mov
decl
sahf
in
push
icebp
shl
or
and
int
inc
sub
pop
mov
dec
es
dec
fadds
lcall
in
and
imul
mov
test
mov
add
jle
insl
inc
dec
loop
sbb
imul
add
xchg
ret
cmovle
sbb
or
out
testl
or
sub
daa
and
adc
pop
jo
add
je
test
add
jmp
hlt
andb
fsubrl
xchg
jle
sbb
sbb
in
cmp
std
pop
mov
call
cld
sbb
xchg
or
jb
cmp
or
int3
popf
add
arpl
xor
and
jno
add
inc
add
and
cwtl
jbe
mov
loopne
xorb
out
arpl
jmp
mov
push
sarb
push
pop
es
inc
sarb
rorl
div
adc
and
adc
lods
xchg
add
bound
fcompp
xor
add
lea
jno
enter
add
in
pop
loope
jnp
or
mov
jp
std
aam
and
add
fisubrs
or
mov
dec
nop
pusha
leave
cmp
mov
out
pusha
or
cltd
add
andb
in
push
mov
mov
xchg
dec
jbe
sbb
push
cmpsl
push
jae
out
mov
sbbl
pop
insl
mov
inc
adc
sbb
out
aas
rcr
popa
and
pop
sub
mov
adc
stos
mov
mov
rol
adc
xor
add
insb
gs
pop
faddl
add
cmp
pop
add
dec
cmpsl
mov
add
scas
inc
lds
int
ss
sbb
cmpsl
test
mov
mov
cmpsb
or
sub
rcll
sbb
mov
aas
cltd
arpl
fsubrs
add
addr16
and
stos
fildl
outsb
aad
das
jo
mov
arpl
subb
add
jl
notb
pop
sub
add
jo
cmp
push
cld
xchg
mov
mov
test
add
mov
pop
sub
stc
adc
nop
xor
mov
xchg
cmpsb
mov
fildl
sub
popa
or
push
add
adc
or
jno
xor
inc
inc
pop
inc
sub
je
pop
jo
ret
xchg
xlat
mov
loopne
add
mov
dec
addl
pusha
aam
test
add
add
lds
roll
lret
mov
jae
add
push
adc
dec
xchg
int3
nop
push
sbb
adc
dec
aad
sbbb
invd
in
add
gs
jp
repz
or
test
jecxz
lock
push
add
out
jl
mov
xchg
xor
add
add
jo
and
in
mov
ljmp
outsb
push
mov
push
add
mov
arpl
add
ret
lea
leave
xchg
cmpsb
or
sub
lds
lods
adc
mov
jno
add
inc
mov
pusha
sub
es
outsl
les
in
lret
push
fcoml
inc
or
std
add
aaa
push
pushl
lds
nop
or
or
inc
inc
add
push
mov
nop
movsl
leave
sub
pusha
jmp
aam
mov
push
sub
sub
xor
mov
sarb
xlat
aaa
std
cmpb
jmp
jl
mov
movsb
dec
mov
paddsw
mov
arpl
pusha
imul
fisubs
add
xor
add
je
bnd
add
push
mov
nop
pop
add
and
dec
fadd
pop
add
sbb
inc
jo
push
mov
jb
outsl
push
ja
push
sbb
cmp
pop
fs
cmp
aas
adc
call
ja
push
fadds
jp
add
mov
xor
iret
sahf
cmp
add
push
arpl
out
sbb
icebp
lret
call
sarb
mov
dec
das
push
outsl
xor
mov
pusha
and
leave
outsb
sti
flds
out
pop
sbb
sbb
decb
getsec
add
lock
daa
nop
add
push
iret
add
xchg
negb
xor
ret
mov
mov
rorb
inc
int
lret
and
push
cmp
xchg
adc
cmp
mov
lock
ret
sbb
dec
push
push
icebp
add
lods
cld
pop
cmp
add
add
inc
stos
movsb
loop
jge
add
cs
adc
pop
jns
shll
push
add
ljmp
push
popa
inc
lods
inc
mov
popl
into
je
adcb
sti
insl
xchg
cmp
rol
addr16
dec
popa
add
lods
daa
icebp
add
cwtl
mov
add
cmp
jecxz
cmovs
pop
loopne
xlat
mov
fcompl
inc
std
xchg
jne
or
adc
xor
rcr
sub
push
sub
lcall
test
add
fabs
mov
sbb
adc
insb
push
stos
dec
and
dec
rolb
pop
cmp
xchg
aas
mov
cld
jnp
or
pusha
data16
ja
jle
mov
xorl
imul
ss
into
cwtl
movsb
and
mov
in
and
int3
arpl
sub
std
add
xchg
repz
mov
mov
xchg
inc
stc
and
test
gs
push
or
in
stc
dec
push
xchg
out
cmp
imul
xor
jnp
mov
mov
in
fildl
pop
xor
pop
and
loop
pop
ja
call
pop
pop
cld
sbb
mov
int
insb
add
xor
cmp
movsb
in
cmp
in
sub
pop
repz
mov
xor
add
aad
add
inc
xchg
fstp
sbb
mov
fldt
int3
mov
hlt
idiv
test
push
or
sbb
and
mov
sub
aam
cmpsl
pusha
jl
ljmp
mov
mov
sub
pop
insl
nop
pop
aaa
xchg
xor
inc
mov
into
scas
inc
adc
test
out
les
xchg
andb
or
daa
mov
push
pop
add
push
pop
mov
xorl
push
dec
inc
add
dec
xor
add
jp
add
add
add
out
outsb
or
pop
movsl
sub
add
xor
lods
nop
insb
daa
mov
add
sbb
mov
or
mov
fldenv
cltd
add
jne
jle
incl
mov
sbbl
add
pop
das
add
sub
and
push
popa
xor
sbb
adc
out
sahf
add
xchg
xchg
pop
pop
add
movsl
clc
and
add
xchg
mov
pop
jp
or
rcll
clc
or
imul
fisttps
mov
pop
icebp
or
std
xor
pop
add
jbe
inc
mov
pop
cli
jl
mov
jg
outsb
lods
daa
jmp
scas
lahf
xchg
add
mov
mov
sti
sbb
arpl
fcomip
les
ljmp
pop
inc
add
xchg
or
ret
add
clc
sub
sbb
aaa
xor
pop
add
jb
or
inc
push
fsubrl
jno
subl
mov
jge
and
sub
sub
or
push
and
shlb
fiadds
int
sahf
push
dec
iret
xchg
or
mov
mov
mov
mov
push
popa
ja
push
inc
add
add
xchg
sub
mov
in
mov
cmp
cmp
dec
jb
add
push
nop
bound
mov
rolb
add
movsb
out
sub
in
and
push
lahf
or
and
add
add
std
cwtl
js
cmp
roll
jg
add
jns
in
lahf
mov
mov
mov
adc
stos
cmpsb
add
sub
adcb
ret
jl
and
movsb
imul
add
and
fwait
nop
inc
push
decb
add
int3
and
data16
or
repz
xor
out
add
sbb
mov
in
pop
lds
aas
rcll
lock
out
sub
cmpsl
add
mov
stc
add
rolb
pop
nop
int3
pop
mov
call
push
pop
adc
leave
cld
mov
loop
mov
sub
pop
cli
or
insb
xchg
jl
push
sbb
dec
xor
cmc
jg
mov
movsb
inc
push
jle
adc
scas
sbb
add
inc
lods
jg
adc
add
cltd
sub
push
gs
add
pop
cli
push
add
scas
push
js
mov
lods
add
clc
stc
inc
ds
ss
mov
add
mov
dec
add
stc
jne
mov
or
sub
push
fstps
jbe
add
xchg
sahf
cmp
add
cmpsb
jnp
mov
push
and
mov
in
add
cltd
jle
add
mov
or
xchg
cmpsl
sub
mov
sub
pop
lods
push
mov
push
pop
mov
pusha
xor
pop
aas
outsl
add
mov
add
movsb
jp
mov
jb
sbb
fiaddl
sub
pusha
cmp
jae,pt
out
dec
cmp
inc
add
mov
lcall
pop
mov
mov
sub
xor
mov
adc
add
mov
mov
add
dec
das
xorl
pop
addl
sub
inc
aam
lcall
test
insb
stos
lcall
sub
ss
mov
add
mov
mov
outsl
fists
sbb
or
inc
lea
jnp
adc
mov
mov
movsl
mov
add
fcmove
xchg
xor
test
jg
imul
and
or
jae
push
mov
lock
sub
mov
pop
mov
scas
rcr
cmc
jecxz
mov
data16
sbb
add
fcomps
enter
cmp
js
pop
std
sbb
fiadds
sbb
arpl
sbb
add
mov
add
inc
imul
add
or
add
cmp
test
xchg
or
mov
cmp
movsl
dec
addl
lret
cld
adc
add
xlat
mov
jge
add
push
adc
sbb
mov
es
add
ja
push
inc
test
lds
or
add
sub
add
add
das
pop
popa
aaa
add
dec
jmp
add
shll
mov
mov
mov
pop
arpl
shlb
inc
and
mov
je
pop
cmpsb
adc
or
andb
cmc
add
pop
and
xor
xchg
movsb
add
adc
fldl
mov
dec
repnz
ljmp
mov
pop
xchg
cwtl
je
mov
inc
add
and
repz
pop
jmp
add
lcall
int3
dec
adc
inc
aas
or
push
mov
xlat
shl
mov
pop
add
clc
sbb
test
enter
popa
in
inc
cmp
sub
scas
dec
add
adc
fwait
jae
loope
add
push
out
roll
xchg
js
in
jb
jecxz
mov
inc
inc
stos
insl
scas
inc
add
iret
xchg
sbbb
jae
mov
cmp
jb
cmp
dec
data16
mov
sbb
loope
cmp
adcb
add
sub
repz
jg
pop
mov
add
outsl
pop
sbbl
jo
ret
sti
call
mov
lds
shlb
xlat
dec
test
fcomps
mov
xchg
jns
out
sub
sub
testl
jl
fnstcw
arpl
in
in
mov
fcomps
fstpl
mov
push
ret
push
dec
jno
push
add
fs
inc
pop
add
jnp
cs
adc
sarb
adc
adc
in
mov
push
fwait
mov
inc
push
adc
add
dec
int
das
in
jg
cmp
lods
mov
shl
lods
stos
pop
mov
inc
xchg
es
jb
mov
cltd
pusha
int
sti
sbb
mov
sarb
repnz
add
aam
insb
cmp
add
pop
nop
push
mov
les
xchg
and
sbb
mov
dec
mov
cwtl
lock
jo
sub
add
pop
add
xchg
mov
enter
pop
jb
fadds
pop
push
mov
add
mov
add
xchg
inc
cmp
stos
add
xchg
mov
add
prefetch
aaa
insl
call
andb
in
clc
popl
push
jle
pop
and
testb
iret
add
popf
leave
mov
mov
and
aaa
data16
bound
sbb
call
jns
pusha
clc
xor
inc
loopne
lods
call
inc
sahf
jbe
jne
movsl
add
lea
dec
or
shl
sub
add
fisubs
enter
addb
sub
xor
popf
clc
int
bound
fdivrl
arpl
or
xor
idivb
add
adc
pusha
adc
fwait
ret
cwtl
sbb
in
roll
stc
jo
sbbb
add
pop
aaa
dec
jno
fcoms
mov
andb
rolb
dec
leave
inc
xor
and
aam
into
adc
dec
xor
stos
jp
pop
fiadds
jns
outsl
arpl
mov
adc
cmpsb
dec
pop
xor
xor
stos
xchg
mov
fbld
push
push
icebp
add
data16
push
enter
outsb
mov
jo
add
loopne
sub
cmp
test
cld
je
jnp
jg
add
push
bound
mov
cwtl
mov
adc
xchg
xor
insb
nop
add
fildl
sahf
inc
fs
mov
cli
cmp
movsb
xchg
add
inc
jle
gs
loop
rol
add
and
icebp
bound
or
enter
mov
pop
adc
or
sub
roll
rolb
add
flds
mov
shll
sbb
mov
mov
sbb
xor
inc
and
add
sub
xor
insl
jb
imul
das
xchg
inc
xor
add
sbb
dec
and
and
inc
fiaddl
sbb
data16
add
lahf
cltd
mov
cli
push
push
or
mov
push
and
mov
pop
movl
push
push
xor
or
add
dec
push
test
add
add
jb
stos
dec
pop
clc
lahf
loopne
push
jp
and
cmp
out
pusha
stos
sub
mov
inc
mov
xor
cwtl
add
fucomp
outsb
out
roll
xchg
add
adc
mov
out
aad
mov
repnz
push
cmp
jno
mov
aaa
inc
lock
imul
xor
xor
xor
mov
aad
xchg
cmp
ja
and
jg
pop
call
jge
mov
xor
or
inc
mov
cmc
sbb
pop
add
xor
jns
test
movsl
and
add
mov
int
xor
cmp
mov
mov
movsl
imull
sub
sti
sub
cmp
rcrb
push
mov
ret
and
add
sbb
push
into
jmp
popa
xchg
mov
sarl
cmp
xchg
ds
rcrb
pop
lea
xchg
push
fmul
out
adc
inc
and
sbb
mov
add
dec
repz
in
cmp
pop
push
and
mov
push
shl
gs
push
xor
sub
and
add
xchg
dec
cmp
subl
iret
inc
xchg
pushf
push
add
mov
dec
xlat
cltd
lock
xor
bound
outsl
nop
test
cwtl
mov
cltd
and
and
pop
scas
je
push
mov
pop
dec
out
fprem
push
sahf
add
int3
jo
add
mov
add
std
fwait
inc
ds
add
stos
sub
outsl
and
add
inc
dec
jae
inc
les
cli
stos
jbe
pop
mov
nop
and
adc
ss
rolb
mov
in
les
pop
movsb
shl
testb
imul
scas
xor
adc
iret
jle
inc
and
sbb
xchg
maxps
sub
adc
add
ljmp
push
add
sbb
movl
je
mov
flds
add
fcmovb
adc
push
lahf
jbe
ficoms
jge
lock
mov
bound
add
pusha
lret
sub
adc
add
cmpsl
test
push
shl
add
jae
ds
adc
sub
in
xor
ljmp
lock
mov
or
cmpl
loope
xor
aam
fdivrl
sbb
pop
xchg
out
push
sbb
sub
mov
mov
std
mov
popf
jne
je
es
push
iret
add
mov
pop
imul
pop
mov
out
sbb
jmp
fadds
jo
rcrl
xchg
or
iret
mov
dec
repz
xchg
mov
lds
test
pop
and
add
or
add
jmp
loope
repz
shrb
mov
nop
test
pusha
rorl
xorb
js
add
jns
inc
and
adc
cmp
sub
cmpsl
xchg
push
push
mov
jg
mov
xor
and
xor
cmp
or
adc
jnp
ds
repnz
arpl
fbld
mov
adc
inc
add
pop
pop
out
rorb
xor
mov
mov
jo
push
xor
call
mov
jl
popf
jle
rorb
add
lret
pop
sub
mov
jb
ja
out
dec
pop
arpl
ss
sbb
xlat
or
dec
movb
cmp
push
pop
pop
cli
jb
sbb
flds
popa
mov
jnp
push
out
inc
adc
jmp
mov
cmp
clc
stc
int3
xchg
inc
stos
jl
xchg
sbb
rorb
push
ret
add
mov
add
mov
outsb
in
pusha
push
ds
push
jecxz
scas
lods
or
and
cmp
jbe
nop
xor
sar
xor
repz
outsl
cmp
jns
add
stc
into
add
mov
ljmp
mov
daa
add
or
lcall
and
sub
loop
daa
out
addb
insl
call
add
test
adc
add
pop
icebp
shl
or
cmp
or
ds
and
es
xchg
or
loopne
call
add
adc
add
pushf
mov
mov
or
mov
scas
outsb
xchg
stc
rol
daa
jmp
pusha
mov
mov
xorb
sub
adc
mov
cli
loopne
pop
ficompl
xor
fs
and
sahf
cwtl
sub
fdivrp
push
mov
addr16
xchg
or
lods
setnp
call
lock
sub
call
cmc
fwait
cmp
test
lock
dec
jo
bts
fldenv
lods
in
adc
test
addl
icebp
mov
in
pop
push
int3
push
push
mov
adc
lods
adc
fstp
sub
sbb
add
into
add
xchg
push
mov
add
push
adc
mov
test
dec
mov
add
test
fstps
xchg
pop
filds
in
mov
pop
pusha
and
jmp
mov
imul
jo
cld
adc
xchg
mov
add
lock
rcrb
sbb
mov
shrb
pop
mov
cmp
sahf
sbb
mov
rolb
cmc
repz
adc
ds
into
movhps
pcmpgtd
fidivrs
or
xor
ja
inc
fs
addl
push
add
and
fildl
add
stc
push
adc
in
roll
push
fdivrl
cld
add
lea
repnz
fsub
int3
xor
dec
push
nop
add
stc
pop
xchg
push
push
add
jo
jnp
and
inc
scas
std
les
das
push
loope
ret
iret
dec
orb
inc
lods
add
loopne
ret
out
mov
sahf
add
movsl
ss
mov
js
lods
cld
nop
in
dec
nop
aam
jns
dec
ja
and
mov
fcoml
push
or
mov
fistpll
cltd
dec
adc
push
test
out
xchg
call
inc
adc
inc
mov
test
shll
pop
add
jmp
ljmp
dec
mov
icebp
mov
add
add
insl
pusha
test
pop
ss
sbb
test
int3
and
or
mov
in
ja
adc
add
pop
lret
sub
stos
and
into
dec
das
std
add
pop
push
pop
add
mov
fadd
mov
cwtl
xor
add
xchg
inc
inc
ljmp
ret
sbb
cwtl
sbb
dec
std
push
imul
inc
ja
jecxz,pt
pop
add
test
sub
shrl
pop
xor
mov
dec
add
mov
aas
popa
add
and
sub
orl
call
mov
add
or
add
daa
xor
add
and
mov
jae
add
outsb
cmp
rorl
dec
push
mov
jb
pusha
pop
xor
add
leave
test
sbb
pop
outsb
push
dec
int3
loopne
adc
add
call
or
add
mov
aas
outsl
xchg
jb
ret
repz
or
sbb
insl
add
es
mov
dec
rorb
inc
outsb
xor
mov
add
xchg
jp
loop
adc
faddl
lcall
jae
inc
adc
push
fisubl
adc
jbe
sbb
lahf
mov
ret
add
or
mov
enter
jecxz
mov
iret
jno
pop
pusha
stos
and
pop
int
pusha
aaa
imul
and
cs
cmpb
sarb
mov
and
add
enter
loop
movsl
fnstsw
andl
in
clc
nop
insb
aas
je
or
loope
pusha
cmpsl
inc
push
sahf
dec
xor
push
xchg
repz
cmp
out
lea
cltd
push
addl
sahf
sarl
inc
pusha
dec
fs
loope
repz
rcrb
add
insl
inc
and
jnp
xchg
add
arpl
out
mov
jo
push
and
stc
xchg
xor
add
and
fadds
jmp
or
xor
push
sti
test
mov
xchg
sbb
icebp
bound
aas
repnz
dec
add
sbb
scas
shl
fwait
add
inc
call
mov
rcl
pop
jl
mov
cmc
push
jo
mov
mov
sbb
and
aad
roll
mov
in
sub
jge
nop
and
movsl
movb
inc
addl
lret
pcmpeqb
jo
loop
xor
cwtl
sbb
roll
loope
aam
mov
fdivs
add
fbld
adc
iret
xor
mov
push
xor
push
jns
mov
sub
leave
jae
movsb
pop
add
add
test
mov
add
bound
xchg
push
cltd
mov
add
in
mov
int3
stos
stos
or
iret
push
orb
or
adc
lods
mov
cwtl
popf
jne
sar
test
and
je
hlt
cmovo
xorb
mov
cmp
loope
pop
or
das
mov
in
mov
sbb
cltd
mov
pop
mov
adc
arpl
div
sub
int
add
and
mov
xor
add
inc
or
push
aas
jo
and
outsl
xor
xchg
xchg
inc
adc
jbe
or
push
lcall
push
cmp
rcl
add
ffreep
enter
add
xchg
lock
insb
add
les
sbb
fcmovu
mov
push
fwait
cmp
jbe
cmp
pop
and
in
xchg
xor
jno
push
and
clc
pop
add
mov
std
adcl
ds
mov
ret
mov
fs
test
mov
cli
dec
add
inc
push
nopl
adc
adc
fdivr
add
mov
nop
mov
or
and
adc
push
gs
push
in
add
jmp
adc
shrb
sbbb
sahf
sbb
movsl
mov
add
push
sbb
fistpll
mov
add
fsts
jp
out
shl
xor
cmpb
jnp
adcb
sbb
xchg
insb
adc
sbbb
popf
aad
mov
in
mov
jp
jp
les
js
enter
add
or
push
xor
and
pop
pop
pushf
dec
jmp
xchg
or
pusha
jb
push
std
dec
leave
cmpsb
rorb
xor
popa
ret
sbb
xchg
aam
add
icebp
mov
add
lods
popa
into
xchg
shl
rclb
lea
stos
add
mov
mov
test
push
sbb
rclb
add
push
mov
dec
xchg
pop
inc
and
add
and
cmp
cmp
cmp
jl
mov
popl
fiadds
lods
jo
cwtl
push
out
or
add
ss
cvttps2pi
test
adc
sbb
test
fmull
fwait
add
push
cmp
lret
mov
roll
mov
ds
mov
push
lds
dec
mov
je
jnp
fsubrp
add
cmp
lock
imulb
xchg
jp
adc
cli
add
and
mov
subb
out
xor
pop
dec
mov
or
jae
mov
jle
cwtl
add
mov
add
gs
add
into
enter
xor
inc
push
imul
cmp
push
int3
add
adc
lock
add
fldcw
jl
roll
and
fld
inc
lea
hlt
jnp
shlb
add
pop
mov
cmp
jl
test
dec
outsb
into
add
or
mov
add
lret
loop
mov
xor
jl
jg
push
pusha
subb
pop
xor
add
shll
sbb
rclb
sub
add
pop
data16
and
sbb
cld
dec
movsb
stos
lret
clc
jmp
push
inc
push
jp
xchg
mov
lock
mov
fisubs
sub
ret
daa
mov
lret
les
mov
jb
loope
rcl
mov
std
sub
pop
aam
sbb
adc
scas
in
in
jb
mulb
leave
or
inc
rolb
out
xor
jp
adc
pushf
add
pop
lret
dec
or
dec
jmp
and
mov
out
outsb
dec
test
cltd
dec
add
and
cmpsb
mov
sbb
movsl
push
add
adc
scas
nop
push
sub
xchg
std
add
loopne
dec
and
or
mov
jp
fstpl
push
dec
stos
cwtl
cld
add
scas
into
jge
pop
int
xchg
andb
loopne
rcl
sbb
xchg
xchg
pushf
loopne
ja
jo
xchg
inc
push
loopne
mov
add
mov
cmp
inc
and
xchg
dec
sub
mov
pop
pop
add
lcall
sbb
sbb
and
out
xchg
dec
sub
and
adc
push
les
sbb
fidivrl
or
inc
or
xorb
dec
ljmp
or
and
sahf
inc
roll
in
hlt
popf
add
gs
pushf
adc
call
sub
mov
cmpl
sub
pushf
pop
mov
popf
ljmp
cmc
mov
clc
lds
test
jmp
stos
pop
out
sub
popf
mov
lcall
cmp
push
lahf
cmpb
pop
insb
add
mov
call
and
adc
inc
adc
test
shrb
ret
dec
fwait
das
add
shl
jg
js
scas
lds
and
add
fwait
test
pusha
lock
mov
jno
dec
addl
push
test
inc
aam
mov
dec
pop
sub
cltd
or
inc
sub
in
clc
mov
jae
add
jmp
shrl
mov
hlt
xlat
push
xchg
dec
mov
or
hlt
sub
fdivs
out
cmp
jg
ss
pushf
mov
icebp
push
fwait
stos
pusha
inc
add
jbe
pusha
imul
add
xlat
adc
rcrl
xchg
cmp
add
lock
test
or
adc
lcall
xorl
test
sbb
stos
xor
mov
mov
mov
sub
decb
mov
inc
jg
adc
pusha
out
mov
pop
repnz
adc
add
xor
divb
jb
lahf
fwait
cmp
push
mov
add
inc
je
lods
stc
call
add
out
jle
xchg
mov
mov
movsb
cmp
and
pop
mov
xchg
inc
scas
xor
mov
and
add
sub
jg
rcrb
leave
sbb
xor
sbb
push
adc
xchg
xor
sbb
xor
ljmp
adc
mov
add
mov
dec
sbb
cmp
push
xor
leave
mov
pusha
xchg
add
rolb
enter
inc
push
pushf
adc
ds
cmp
pop
fadd
out
or
lcall
inc
inc
pop
mov
into
mov
inc
mov
push
mov
daa
js
dec
xchg
or
pand
int3
add
push
jbe
push
push
xchg
xchg
jmp
jbe
rcrb
sub
xor
sbb
and
sub
pushf
cmp
or
adc
mov
add
mov
pop
roll
mov
enter
push
lods
jnp
inc
sarl
xor
mov
mov
mov
into
and
inc
pop
out
cwtl
mov
xor
add
jl
gs
lret
lods
push
ljmp
pop
xchg
ret
movsb
inc
call
add
xor
lret
and
loope
push
popa
flds
out
cltd
fisttps
jecxz
mov
mov
or
test
dec
repnz
call
jl
ja
cld
sbb
iret
nop
jne
gs
push
cmpsb
cmp
jmp
nop
leave
sbb
dec
cli
sub
xchg
into
xor
and
mov
cmp
call
mov
adc
cld
test
aam
in
adc
cmpsb
or
sbb
enter
cmovs
add
or
push
add
cmp
jmp
xor
dec
jl
andb
sub
inc
insb
test
sub
mov
xor
inc
clc
enter
out
outsb
mov
push
mov
sbb
dec
test
mov
cltd
das
add
mov
orb
sahf
inc
dec
push
add
mov
push
sub
xor
gs
rcl
mov
add
imul
loop
imul
add
sub
lds
add
dec
popf
addb
push
add
adc
int3
iret
sbb
jnp
dec
cmpsl
lret
bound
popa
jae
pop
pop
addl
out
or
push
lret
outsb
fbstp
scas
bound
add
mov
mov
dec
icebp
or
out
and
dec
cli
fistpl
sbb
push
pop
sub
sbb
add
inc
mov
cmp
int3
or
push
mov
jns
sub
cmpl
add
cmp
or
pusha
mov
std
repz
lds
cmp
cs
mov
in
fdiv
into
repnz
mov
fs
sbb
repnz
adc
int3
xchg
add
out
xor
pop
dec
push
sbb
and
or
push
cmp
lcall
push
add
xchg
aam
sbbl
jp
inc
int
pop
and
and
insl
ret
aas
adc
sub
or
mov
scas
scas
sub
cs
aad
das
push
mov
aas
add
jl
lods
idivb
xor
xchg
mov
mov
sahf
mov
push
out
mov
ret
cmc
mov
jnp
sbb
and
jg
inc
push
push
fisubs
inc
add
cmp
stos
fistpll
les
pushf
and
add
xor
ljmp
dec
pop
cmp
and
sbb
mov
lea
dec
inc
or
adc
adc
pusha
or
or
adc
pop
jns
or
aaa
mov
pop
daa
add
sub
repnz
xlat
addr16
and
loopne
mov
enter
or
cwtl
repnz
or
sbb
je
xor
shlb
jp
push
or
jns
inc
jmp
dec
orl
jge
fmuls
dec
xor
adc
xchg
sbb
stos
and
or
scas
mov
test
ret
sbb
jecxz
mov
adc
sbb
and
adc
and
mov
dec
pusha
or
pop
sbb
cli
jg
lods
test
xchg
inc
subb
mov
mov
mov
test
pop
add
push
mov
sbb
mov
adc
js
sbb
sub
sbb
ret
push
ds
sbb
clc
pop
dec
and
mov
test
add
rorb
adc
jp
pop
mov
lea
nop
xchg
cltd
or
and
mov
mov
in
shlb
std
or
push
sub
mov
inc
ja
outsb
add
nop
cmp
and
outsl
jle
pusha
jl
icebp
fwait
ljmp
or
and
and
sbb
cmpsb
addl
and
mov
inc
daa
adc
daa
les
sub
or
subb
push
pop
dec
loopne
es
shrl
test
inc
sbb
cmp
xlat
push
pop
jg
dec
cmp
lcall
jo
cwtl
sub
jb,pt
lahf
movb
sub
cmp
and
loopne
sbb
clc
dec
sbb
sbb
das
ja
pushf
pop
shr
cmpb
jne
add
adc
push
imul
xchg
xlat
jmp
pusha
add
call
or
sub
cmpsl
cltd
sbb
pop
call
and
pusha
jge
xor
cmp
inc
cwtl
xor
testb
imul
and
and
mov
stc
cs
in
jns
std
xor
and
mov
inc
add
add
fs
xchg
jge
pop
mov
or
push
les
in
sbb
sbb
daa
jmp
push
or
sbb
mov
mov
sbb
sbb
sbb
or
fsubrs
mov
adc
cwtl
or
mov
shll
shlb
cmp
aaa
push
test
jmp
cmpsb
or
pop
and
shl
inc
add
cmp
movsl
jo
stos
add
jp
lcall
add
insl
movsl
leave
inc
stos
cmc
es
in
hlt
xor
jl
and
jbe
fucom
cmp
insb
int3
pop
cmp
pop
pop
jg
lea
clc
scas
push
pop
add
call
and
cltd
lods
pushf
inc
xchg
add
dec
ja,pt
imul
js
int
sbb
iret
dec
aaa
pop
outsb
cli
inc
pop
adcl
cwtl
push
sbb
rol
sub
pop
fnsave
stc
mov
cli
nop
out
add
adcb
mov
and
es
xor
cwtl
pushf
loop
sub
add
out
mov
mov
inc
cmovae
das
popa
orb
scas
out
push
push
jge
mov
out
pcmpeqb
js
inc
jle
push
jns
inc
mov
push
stos
bound
and
jmp
cmp
leave
test
mov
add
xchg
int3
inc
test
xor
mov
ss
add
stos
add
mov
lret
iret
add
push
pop
jnp
xchg
sbb
repz
add
outsl
cltd
mov
in
testl
or
fisttpl
sub
mov
inc
pop
lds
insl
rol
sbb
mov
mov
fnstsw
mov
ficoml
pop
bound
test
imul
jmp
mov
leave
sahf
scas
mov
mov
push
add
jle
filds
pmaxsw
push
add
pop
sub
inc
add
ss
js
add
push
addb
das
xchg
mov
out
mov
jae
pusha
stc
sub
aad
rcrb
sbb
jge
sbb
das
add
push
popf
in
call
jnp
jge
push
xor
cs
sbb
mov
pop
add
dec
call
icebp
iret
lock
add
rorb
aad
push
or
push
inc
ficoml
cmpsl
dec
cmp
clc
stc
cld
xchg
lahf
int3
cwtl
in
mov
xor
add
xchg
sbb
movsl
add
jns
inc
or
rorb
and
sarl
pop
adc
fimull
mov
add
out
call
add
mov
js
mov
mov
adc
push
notb
dec
outsl
add
mov
lret
xor
jo
add
movsl
cli
jmp
rorb
mov
push
adc
and
mov
roll
gs
adc
dec
sub
mov
and
add
xchg
cmp
add
loopne
or
dec
add
fcomps
add
dec
sub
pop
xor
aas
pop
icebp
add
mov
sbb
pop
lret
jns
repz
int3
sub
inc
xchg
xchg
sti
jbe
ljmp
test
jecxz
add
xchg
pop
pop
pusha
imul
or
sub
icebp
xchg
push
cwtl
inc
add
jne
or
fisttps
add
stos
cmp
mov
mov
sub
push
push
add
lcall
sub
cmp
jb
lret
in
pxor
test
icebp
mov
jl
rcr
andl
addr16
mov
mov
icebp
cmp
jbe
pop
inc
mov
add
popf
xor
add
insl
add
gs
divl
mov
add
mov
cmp
sbb
adc
add
jmp
stos
movsl
movsb
pusha
dec
pop
add
or
xor
loopne
pop
pop
orps
loopne
enter
mov
sbb
pop
adc
out
xchg
mov
into
int
popa
or
sub
rclb
add
pop
fdivr
hlt
dec
add
into
cmpsb
add
jge
add
jne
xchg
cmpb
int3
loopne
sbb
jg
inc
inc
dec
nop
dec
icebp
bound
or
dec
ja
cmpsb
jmp
outsl
inc
adc
pop
dec
add
add
adc
gs
add
mov
bound
scas
jecxz
hlt
jle
jmp
std
imul
xchg
testl
jecxz
fs
sbb
mov
stc
cmp
and
or
push
pop
add
inc
inc
or
iret
cmpsb
xchg
sub
and
add
and
dec
in
hlt
add
ror
lea
sarb
inc
ret
pop
std
jge
clc
cmp
mov
loopne
sub
or
enter
int
cmp
call
js
hlt
rcr
inc
adcb
add
das
fistpll
inc
test
pop
add
iret
cmpsl
cmp
es
cltd
jne
xor
test
add
cmpl
nop
xor
fists
out
adcb
xchg
ficoml
sbb
pushf
popf
xor
mov
or
jp
cwtl
sbb
jl,pt
xorl
dec
cld
push
js
and
cwtl
and
nop
call
or
sub
popf
sbb
xor
dec
dec
xor
iret
pop
dec
dec
popa
adc
subb
jnp
lahf
add
sub
inc
and
add
out
in
fcoms
inc
je
in
xor
pop
sub
call
inc
dec
xchg
add
and
dec
stos
xor
and
pop
cmp
and
cmp
dec
sbbb
fisttpll
sbb
and
and
jo
add
je,pt
andl
add
sti
jae
iret
inc
push
out
mov
xor
dec
add
cmp
push
xchg
jnp
sbb
ds
or
xchg
or
and
loop
cli
aaa
push
rolb
mov
or
in
lahf
dec
ss
mov
or
les
sub
mov
add
pop
or
pop
iret
adc
push
mov
adc
inc
cmp
and
ja
add
lret
dec
cmp
add
rolb
add
push
movsl
sbb
mov
imul
dec
mov
sbb
mov
pop
shlb
add
nop
adc
cmp
push
loop
dec
mov
rorb
push
fildl
mov
jo
rcll
fildl
sbb
imul
add
jecxz
psubusb
out
dec
jns
add
jg
rcrb
xor
pop
add
sbb
dec
addr16
fiaddl
mov
add
sub
int3
push
loope
aam
push
jbe
jle
pop
jmp
xor
shrb
adc
add
jnp
mov
adc
popa
sub
sbb
mov
cmc
or
push
xor
sti
push
sti
out
test
shlb
pop
movl
add
inc
mov
fldcw
and
fldl
adc
cld
lret
pop
adc
cli
or
sbb
sub
movsl
inc
jmp
imul
sbb
pop
stos
shlb
cltd
pop
enter
push
mov
jbe
fdivl
or
int
sbb
mov
fsts
mov
add
ds
jge
inc
push
xchg
jno
or
xor
inc
or
cli
and
in
adc
mov
shll
xchg
dec
mov
testl
or
jl
jmp
leave
inc
adc
inc
add
mov
insl
jecxz
mov
adc
cld
adc
fmuls
mov
sub
in
sti
mov
imul
mov
adcl
in
imul
inc
mov
call
fidivs
push
xchg
cmp
cmpsl
pop
cs
pop
or
js
out
icebp
cli
faddl
jg
in
jb
ds
int3
xchg
cmp
sbb
roll
data16
inc
add
xchg
and
shlb
sti
aam
pop
add
pop
imul
jnp
cld
add
sbb
add
mov
repz
clc
add
test
nop
leave
mov
lods
loope
fstl
insb
arpl
fcoml
dec
push
mov
ror
dec
cmp
fsubrs
movsb
xchg
jp
cwtl
push
lahf
mov
daa
stos
je
add
stc
arpl
jae
cli
sarb
cmp
fdivr
lret
push
mov
cmc
sub
rclb
adc
xor
andl
insl
push
lods
bound
jnp
ret
jbe
sub
in
fidivrl
gs
aam
enter
jbe
lahf
or
fadds
fwait
add
mov
dec
jb
cmp
pop
stc
mov
jo
shl
add
dec
mov
fldenv
xor
fmul
and
push
sub
sti
and
daa
add
add
lea
test
mov
loop
shlb
add
ja
int
roll
mov
or
mov
jp
push
fmull
pop
push
sub
repnz
mov
sbb
inc
lret
dec
xor
dec
test
push
cmp
loope
jnp
push
jne
add
xchg
jo
lock
add
cmp
in
jl,pn
add
cmp
inc
adcb
fsub
cs
pop
icebp
loop
mov
lock
scas
cmp
sub
into
rol
sahf
add
pop
or
popf
xor
mov
lods
out
shlb
add
icebp
shlb
ret
inc
pop
mov
loopne
cli
fiadds
push
dec
cwtl
and
je
and
mov
cli
mov
leavew
dec
daa
pop
aas
mov
pop
push
repz
sub
add
xchg
pop
out
pop
in
cmp
add
lds
pop
pusha
test
xor
pop
clc
fwait
mov
lret
int
popf
push
adc
push
or
mov
mov
pop
mov
into
push
cmpsl
pop
cmpsb
sbb
lods
stos
sbb
push
adc
mov
jl
outsl
lret
lods
push
out
push
mov
test
mov
cmpsl
pop
inc
jg,pt
cs
incl
sbb
sub
movsb
push
cwtl
sbb
add
ja
sub
call
pop
aas
cmp
xchg
jo
and
inc
jnp
inc
dec
mov
into
mov
js
incl
je
xor
push
sub
mov
add
inc
mov
call
mov
dec
test
push
xchg
andb
enter
pop
dec
jb
imul
cltd
test
inc
inc
push
inc
xchg
push
je
sti
lret
enter
sub
jle
test
scas
mov
in
int3
sub
adc
pop
add
inc
or
lock
fs
adc
test
pop
jle
fmul
sbbb
add
push
scas
cmc
add
mov
xchg
sti
call
rolb
xor
pop
jbe
pop
xchg
adc
loope
cwtl
test
jno
leave
mov
sbb
jne
adc
push
inc
inc
and
sbbl
dec
and
test
popf
repz
add
aaa
test
sub
pop
dec
pop
pop
imul
mov
loopne
notb
imul
sbb
or
jae
sub
add
adc
jns
mov
push
jle
sbb
std
inc
add
mov
add
sub
adc
test
fsubrs
xor
out
add
inc
insb
lcall
push
mov
and
jp
add
ret
or
ffreep
lods
mov
dec
push
mov
movsb
mov
mov
and
outsl
ja
pavgw
cmp
inc
mov
out
notl
xchg
jne
pusha
icebp
mov
mov
inc
xor
cltd
insl
add
mov
in
sbb
mov
xchg
lods
rorl
push
or
sbb
subb
out
mov
xor
pusha
cmp
cli
lahf
rclb
xchg
fildll
sbb
adc
aas
add
imul
sbb
aas
pop
jmp
inc
xor
lret
outsb
ret
call
shlb
inc
outsb
stc
pop
xor
pop
mov
and
jecxz
jae
testl
scas
cld
or
push
cmp
out
push
mov
lds
or
sbb
bound
xor
dec
out
or
jmp
mov
dec
nop
cltd
or
pusha
mov
repnz
cs
inc
outsl
ffreep
andb
push
inc
dec
aam
xor
imul
aaa
ja
mov
bound
pop
rorb
sbb
adcb
div
out
add
in
sbb
ja
xchg
shll
xor
pop
es
andb
xor
or
test
or
mov
inc
test
rcrl
or
leave
sarb
out
and
and
cmp
cltd
jp
sbb
add
or
dec
pop
mov
jle
mov
rorl
popf
inc
xchg
push
inc
pop
mov
jb
sub
fwait
cwtl
add
loop
int3
scas
rclb
out
in
dec
cmpsl
jmp
or
stos
iret
call
push
adc
adc
mov
jle
adcb
aas
enter
scas
dec
stos
insb
xchg
push
inc
pop
jge
std
dec
adc
aaa
out
mov
xchg
out
inc
inc
rol
xchg
jo
movl
faddp
imul
cwtl
add
add
shr
adc
iret
sti
adc
lock
jl
add
fildl
adc
mov
enter
movsl
or
aam
cmc
xor
nop
lret
cmp
xor
jle
cmp
pop
push
pusha
add
add
dec
xchg
adc
mov
jmp
fs
mov
jp
lea
call
fs
xchg
outsb
push
xchg
int3
sub
add
sbb
and
outsb
or
push
add
add
repnz
je
ja
pusha
xchg
jno
bound
add
add
inc
sub
sbb
add
hlt
dec
push
iret
xchg
jbe
sub
jecxz
jne
adc
loope
or
sarb
push
add
xor
adc
adc
pop
fdivrs
stos
shll
jmp
pop
jl
or
mov
mov
adc
dec
gs
dec
xchg
xor
xchg
fwait
iret
pusha
jecxz
and
add
call
jne
adc
sub
dec
fistps
lret
or
out
in
es
adc
mov
pusha
arpl
add
sbb
test
dec
loop
imul
sbb
rolb
insb
cmp
mov
add
cli
outsb
iret
jge
dec
xor
mov
lret
push
je
sub
add
bound
shrb
clc
jb
add
jmp
adc
push
sub
mov
rcll
outsb
loopne
pop
insb
add
and
xor
rorl
fwait
or
mov
sub
push
xchg
adc
sub
or
in
les
dec
push
inc
add
out
lret
insl
mov
dec
mov
movsb
subl
std
subb
fidivs
in
add
sbb
mov
fistpl
pop
xchg
lret
cwtl
mov
jmp
add
or
hlt
add
loopne
jg
add
mov
xchg
js
jp
out
inc
push
pusha
inc
aam
mov
sub
cmpsb
hlt
add
lds
adc
add
scas
sub
sub
and
sbb
fadds
lds
shlb
xchg
inc
and
sbb
sub
ret
jne
rolb
stos
sub
aas
fcoml
or
je
bound
pop
jo
mov
js
std
xchg
jb
cmp
push
pop
mov
in
sbb
inc
fwait
add
ss
xchg
clc
push
xor
push
mov
add
mov
in
je
mov
push
or
add
pop
adc
push
loopne
js
andb
cld
dec
lahf
or
jg
add
xlat
mov
call
in
pusha
push
movsl
adc
push
dec
and
jmp
ljmp
pop
push
sar
or
mov
jl
add
mov
int3
xchg
sbb
pop
aam
push
sub
cld
mov
xchg
shll
test
jno
xchg
rcrb
dec
inc
mov
into
cmp
or
adc
orl
sbb
enter
loope
outsb
xorb
add
push
and
xor
or
lds
adc
add
pop
out
xor
adc
out
hlt
and
fldt
jle
xchg
pop
dec
push
adc
in
cmp
pushf
push
and
sar
pusha
cltd
adc
lds
add
cwtl
roll
xchg
and
cmpsb
adc
xor
push
int
pop
clc
push
mov
cmp
add
shrb
sti
loope
xchg
dec
andl
cmp
xchg
add
hlt
sub
add
stc
loop
jae
lcall
inc
mov
add
repnz
int3
test
icebp
add
sub
xor
adc
cmp
test
aad
adc
pop
mov
push
xlat
xor
pusha
ja
jae
jg
add
aaa
sbbl
xchg
pop
xchg
fstl
add
pop
cmpsb
icebp
fildl
dec
fwait
sbb
add
cli
xchg
test
popa
pop
sub
test
add
ljmp
bound
test
scas
fiadds
cmp
jbe
pusha
popa
add
scas
xchg
lcall
stos
xor
pop
mov
and
add
and
sarl
mov
aaa
loop
push
push
inc
ds
ss
imul
dec
int
inc
outsl
mov
fcomi
dec
and
inc
add
push
mov
aas
pusha
call
sub
adc
outsb
add
xlat
pushf
imul
dec
shrl
xor
jnp
add
push
jno
add
lods
push
fcomps
push
sbb
cmc
cmp
cmp
call
test
dec
inc
sar
and
int
add
sbb
or
sbb
subb
ds
pop
adc
sbb
dec
rcrl
inc
pop
mov
nop
xchg
cwtl
xchg
push
jmp
imul
inc
mov
clc
dec
or
stc
into
enter
jge
jno
add
xor
sub
xlat
sbb
stc
jns
cs
mov
cmpl
sub
jecxz
dec
add
pop
in
rcll
push
inc
sbb
or
adc
aaa
cwtl
or
std
nop
outsl
cmpsl
aas
subb
clc
sbbb
push
adc
shrb
jns
aas
rcrb
pop
cwtl
or
sub
mov
rolb
jecxz
dec
mov
in
into
test
cmp
cmc
dec
sub
push
xlat
or
imul
addr16
push
sub
and
add
in
xor
and
inc
popf
add
rorb
cmc
lds
inc
push
repz
push
xorl
xchg
lret
lret
mov
cmpsl
push
inc
xchg
add
lret
adc
stc
push
adc
cmp
inc
jle
clc
jmp
or
inc
adc
filds
test
and
movsl
xchg
pop
add
rcrb
fstpl
add
test
lock
shll
cwtl
ljmp
push
lods
call
stos
push
arpl
cmp
xor
mov
or
mov
mov
adc
andb
icebp
out
add
push
pop
sub
outsb
mov
and
loope
icebp
dec
xor
jecxz
push
mov
fldcw
cltd
add
push
shl
xchg
loopne
jbe
sbb
scas
xor
push
fdivr
xchg
sahf
cmp
jb
or
enter
xchg
mov
pusha
sahf
sbb
inc
fmuls
cmp
in
sbb
pop
daa
mov
xchg
inc
dec
nop
pop
aad
or
add
add
inc
mov
icebp
dec
xor
xchg
xor
imul
outsb
xchg
push
nop
rcrb
push
pop
mov
shl
adc
or
pop
pushf
pop
in
shll
test
push
in
into
jp
pop
aam
sub
pushf
add
push
inc
add
orb
xlat
arpl
and
in
ficoml
sbb
and
out
lock
fisubrs
daa
adc
sbbb
mov
shrl
xor
cwtl
cmp
mov
in
push
arpl
sbb
dec
dec
push
xchg
aam
rorb
cmp
pop
fwait
jl
or
rcll
push
inc
sar
pop
jg
loope
bound
out
fneni(8087
mov
or
push
or
add
or
je
sbb
clc
dec
daa
shll
jo
inc
stc
popa
inc
sbb
dec
scas
mov
pop
mov
jg
jns
sub
lods
add
push
and
add
cwtl
mov
add
int
sub
add
adc
cmp
aam
loopne
lock
sarl
loopne
mov
and
iret
stos
jecxz
repz
push
cmp
sbb
mov
mov
mov
rcrl
mov
cmpl
mov
add
arpl
push
mov
mov
push
pop
scas
rorl
and
xor
cltd
xchg
xchg
or
lahf
aaa
and
inc
jmp
ret
loope
pop
xor
rcrl
popf
mov
jne
and
or
dec
jl
ljmp
rorb
jmp
in
dec
adc
enter
cmp
or
loopne
ret
mov
sbb
inc
std
mov
and
inc
sub
mov
add
mov
sub
pop
test
mov
ljmp
lsl
fucom
mov
movsb
mov
and
add
adc
sub
add
xor
imul
imul
gs
add
incl
xchg
add
repz
sbb
jmp
inc
cwtl
loopne
inc
ljmp
sub
push
lahf
add
ss
repnz
frstor
sub
xor
rcrb
clc
mov
das
add
mov
adc
popf
add
loopne
stc
inc
popa
adc
test
mov
and
je
add
or
pushf
icebp
gs
add
ud2
cmp
xlat
or
or
adc
xchg
sahf
push
sub
xor
scas
or
stc
pop
cltd
add
xor
fistpll
fdivl
xor
or
inc
pop
sub
push
into
add
xor
inc
scas
rolb
pop
mov
adc
push
adc
push
lret
push
add
jle
aas
pop
pushf
adc
js
add
mov
pop
mov
pushf
add
or
mov
ret
and
imul
shll
mov
in
call
inc
push
test
cld
xor
add
add
faddp
ss
add
pop
push
dec
sbb
adc
test
and
or
jo
lods
xchg
xor
add
test
adc
loop
cld
outsb
xor
jbe
daa
nop
mov
or
roll
mov
jmp
add
mov
dec
add
sub
mov
push
add
xchg
xor
add
and
loop
inc
outsl
adc
mov
int3
add
test
fldcw
add
jnp
aam
pusha
add
pushf
jg
enter
or
lock
add
adc
mov
int3
popa
jecxz
call
rolb
test
and
jb
pop
shl
sbb
cmc
adc
push
mov
cmp
push
add
cmpb
add
dec
scas
fwait
jmp
es
fdivrl
loop
inc
xor
out
in
icebp
push
inc
jns
sub
cmp
jecxz
clc
pusha
popa
insl
and
jnp
add
mov
rcll
and
pop
iret
sub
jle
or
xchg
dec
inc
out
lods
and
aas
push
inc
clc
and
inc
dec
jo
out
push
adc
data16
dec
or
push
inc
xor
movb
das
mov
and
sti
je
testb
add
xchg
xchg
add
data16
clc
js
cmp
adc
push
sbb
ja
inc
xor
add
incb
pop
stos
lock
mov
jb
lcall
sub
sbb
mov
add
inc
das
sbb
scas
data16
test
repnz
add
cwtl
iret
flds
test
or
fcoml
jns
cwtl
orb
pop
outsb
push
call
jno
into
mov
sub
icebp
inc
rcrl
push
sub
mov
add
aad
sar
xor
add
in
movsb
jno
cwtl
cmp
add
xlat
lods
cmp
cmpsb
xchg
fcmovbe
sub
sub
inc
inc
fists
fcoml
subb
cmpsb
es
xchg
cmp
inc
adc
dec
lcall
repnz
pop
jl
out
orb
enter
dec
hlt
and
mov
xchg
inc
in
sub
jae
push
daa
enter
adc
dec
or
shld
adc
push
and
add
adc
xchg
push
pop
pop
inc
add
jne
fisttpll
or
ljmp
xor
pop
mov
mov
mov
sti
test
test
pushf
xor
insl
inc
inc
clc
int3
push
add
or
pushf
adc
out
leave
psrad
push
sub
popa
add
sbbl
stos
add
cmp
xor
xchg
aad
fimull
pop
xchg
push
shll
enter
test
hlt
mov
cmp
filds
ljmp
ficoml
xchg
and
mov
mov
mov
mov
xchg
cmp
popf
mov
rorl
sub
lret
adc
and
or
adc
jmp
pop
jb
jnp
inc
lods
dec
jb
add
in
push
add
pop
pop
mov
cmp
rcll
test
in
repnz
cmp
sbb
pop
call
shlb
mov
pusha
icebp
jnp
add
xor
lods
in
fnstcw
ss
xchg
xchg
mov
xchg
xchg
push
or
adc
iret
mov
call
ja
push
push
dec
mov
dec
adc
fidivrs
cmp
stc
aas
addb
sbb
dec
sub
addb
adc
je
iret
shlb
xor
les
add
xor
lock
add
ret
loope
sub
jbe
imul
push
cmp
insb
pop
fidivrl
and
in
data16
pop
sbb
push
sti
adc
int
pushf
cmp
lock
pushf
clc
int3
test
lret
rcrl
jo
adc
enter
dec
mov
xor
sub
insl
scas
cmc
or
in
pusha
add
mov
inc
imul
ljmp
insb
xor
and
add
in
sbb
inc
inc
push
dec
popf
and
jecxz
fcomps
loopne
pop
sub
lds
xor
and
add
jmp
sub
das
or
shlb
jns
add
add
loop
jmp
and
and
push
jns
add
ljmp
out
push
or
pop
inc
inc
adc
jo
push
mov
sbbl
je
and
pop
mov
add
fcompl
icebp
add
sub
lret
in
jbe
je
add
inc
xchg
inc
cmovle
inc
shll
pusha
sbb
std
add
scas
shlw
insb
fwait
ja
imul
int
mov
pusha
inc
repnz
nop
sbb
or
je
jp
loopne
mov
cmovb
adcl
add
add
lea
outsb
aaa
test
daa
jne
nop
push
sbb
movsb
faddl
lea
push
xor
mov
mov
add
add
enter
subb
lcall
mov
and
or
pop
xor
dec
dec
mov
adc
push
jmp
subl
push
lret
mov
adc
dec
xchg
fldl
inc
cmc
arpl
lds
nop
jmp
jo
xchg
shlb
mov
cmp
addb
ja
inc
in
call
sub
pusha
sbb
enter
xchg
shr
imul
inc
gs
mov
mov
cli
pop
add
ja
stos
fisubl
xor
sarl
ret
and
lret
fiadds
sbb
in
outsb
inc
xchg
lods
dec
mov
out
pop
pop
dec
pop
add
sub
push
nop
jae
inc
add
sbb
loopne
lea
jecxz
mov
pop
aad
imul
jns
and
mov
fiaddl
imul
cmp
pop
sbb
dec
sti
mov
mov
inc
out
mov
test
push
inc
and
pusha
maskmovq
negl
push
je
pop
mov
sbbb
mov
mov
mov
push
out
int3
add
push
rorb
call
dec
movsb
dec
std
push
imul
lahf
inc
cmpsl
pop
lret
inc
sub
jo
popa
push
inc
enter
hlt
xchg
cli
in
popa
js
gs
lock
aaa
add
pop
dec
pop
outsl
in
jle
inc
in
inc
and
cmpsb
jbe
add
imulb
shl
gs
add
dec
dec
imul
inc
lret
mov
xor
add
sub
inc
stos
fnsave
cld
pop
and
mov
mov
add
mov
and
add
movsl
cmp
mov
loope
or
sarb
sbb
dec
imul
sbb
fdivs
xor
popa
test
flds
cltd
loop
ds
inc
add
jg
imul
pop
add
mov
cmp
imul
sbb
jg
cmp
addb
gs
dec
nop
clc
pusha
push
sub
aad
mov
adcb
in
mov
push
fwait
je
mov
mov
cld
lock
add
xorb
pop
mov
cmp
inc
sbbl
stos
rclb
in
and
test
sbb
cmp
push
outsl
ds
add
push
and
jl
notb
xchg
shl
mov
add
and
repz
ljmp
mov
mov
cmp
sub
lcall
and
cwtl
pop
mov
ja
int3
cmpsb
add
sbb
inc
scas
sbb
out
add
mov
stos
or
cmpl
sbb
addr16
jmp
fsts
addr16
lret
icebp
pop
push
adc
cmc
jo
outsl
or
cmpb
pop
cmp
scas
mov
jle
rcll
movsb
add
jo
xor
pushf
pop
loopne
js
mov
dec
inc
mov
inc
out
add
inc
lret
jae
jo
xor
arpl
adc
mov
add
fwait
mov
imul
clc
out
mov
mov
je
add
xor
adc
jns
pop
add
repnz
mov
xlat
adc
scas
mov
gs
jecxz
inc
into
adc
push
fnstsw
mov
repnz
jo
ja
dec
sub
ret
cltd
outsb
xchg
in
int3
jge
pop
mov
dec
and
add
lods
shrb
mov
mov
inc
cld
mov
shrb
mov
mov
add
scas
dec
cmp
arpl
adc
add
pusha
idivl
icebp
mov
sbb
or
cmp
test
pop
add
mov
in
add
fcoml
push
fdivs
add
call
mov
push
ljmp
pop
push
push
enter
loope
add
fisubl
inc
jg
cmp
jecxz
jmp
dec
call
inc
pop
mov
pop
dec
jbe
or
mov
test
push
stc
movsb
xor
push
add
into
rcll
push
aad
mov
lods
outsb
cltd
mov
add
and
mov
cmp
cmp
sbb
push
stos
cli
add
adc
frstor
pop
call
jnp
push
or
gs
xchg
xor
adc
add
mov
and
add
push
clc
mov
mov
dec
push
fimull
loope
push
loope
adc
pop
sbb
cmpb
loopne
mov
add
in
daa
or
add
push
pop
mov
je
mov
mov
das
dec
in
mov
jmp
add
cld
mov
hlt
movsl
sub
pop
inc
adc
loope
mov
jne
inc
outsl
adc
cld
inc
bound
enter
cltd
inc
sbb
jmp
mov
add
movsb
sti
xchg
stc
mov
pusha
mov
xchg
add
sahf
movsb
lock
inc
arpl
xchg
pop
call
jne
loope
jns
cmp
xchg
rolb
mov
dec
arpl
mov
mov
dec
sub
shlb
add
inc
insb
add
push
movsl
rcll
cmp
int3
add
scas
jne
and
adc
mov
dec
mov
xchg
iret
test
cld
rcrl
inc
loope
add
mov
repz
push
mov
mov
jg
xor
pop
adc
inc
dec
xor
cmp
mov
push
add
sub
cmpsl
movsb
inc
adc
out
add
sbb
add
pusha
mov
add
out
mov
add
or
mov
or
xchg
add
dec
fld1
sub
sub
call
push
stc
or
shlb
lcall
outsl
hlt
sbb
xchg
mov
jge
testl
mov
add
pop
and
pushl
pop
xor
test
xchg
sub
mov
stc
ret
mov
orb
mov
imul
push
jg
es
lods
cmpsb
mov
in
jb
inc
cmc
add
aaa
insb
jmp
sub
gs
sti
cs
cmc
ss
fstl
dec
adc
pop
mov
mov
add
xor
fadds
mov
inc
sbb
lea
sarb
bound
shrl
loope
jb
sub
adc
push
sbb
nopl
roll
dec
fld1
push
or
sbbb
dec
stc
or
fnstenv
mov
adc
andl
clc
xchg
inc
pop
inc
push
dec
shrb
dec
lock
pop
mov
jno
add
push
test
mov
push
clc
sbb
int
push
dec
jmp
nop
insb
aaa
jnp
sub
push
shr
and
fs
mov
pusha
xor
or
add
ja
and
add
xor
inc
adc
add
mov
popl
jbe
or
outsl
push
or
shlb
popf
sub
and
xlat
fwait
jge
add
pop
fldl
mov
and
pop
enter
mov
adc
inc
test
cli
adc
movsl
or
adc
xor
mov
in
ljmp
rolb
loope
add
add
dec
sub
cmp
out
gs
mov
repnz
dec
imul
inc
mov
into
and
fisttpl
movl
cmpsb
mov
mov
cwtl
js
enter
lcall
inc
ss
push
sarb
jl
clc
dec
pushf
loopne
lock
stos
jo
inc
scas
lret
nop
xchg
test
hlt
add
add
mov
arpl
mov
pop
fadd
std
lea
and
stc
or
push
or
xchg
test
addr16
iret
in
lcall
popa
and
rolb
sub
dec
xor
jg
cmp
shrl
sub
sbb
pop
adc
gs
or
sbb
sbb
enter
push
add
repz
xorb
and
push
sub
mov
and
add
cmpsl
dec
daa
cmovns
gs
mov
xor
cmp
popf
inc
mov
loop
add
mov
adc
pop
mov
pop
sbb
inc
and
js
adc
sub
add
pop
sti
loopne
cmp
mov
shlb
xor
add
adc
gs
insl
inc
sbbb
popf
rorb
dec
mov
add
call
daa
cmp
adc
push
add
rcrl
jo
push
cs
mov
or
jle
push
or
sub
add
popa
adc
dec
and
adc
push
insl
inc
rclb
adc
addr16
clc
push
jl
add
sbb
movsl
pop
lret
xchg
rcl
xchg
je
testl
aam
push
xorl
mov
jnp
rclb
pop
cmp
sbb
bound
test
xorb
cwtl
into
sub
push
jle
and
test
sbb
out
add
ss
mov
cmp
iret
and
push
dec
push
add
push
pushf
roll
xor
test
pop
clc
lret
and
add
xchg
push
mov
mov
pusha
cli
mov
or
add
lods
stos
ret
imul
arpl
push
lods
sbb
dec
add
je
pop
lahf
and
clc
lahf
inc
and
stos
icebp
fst
mov
or
hlt
xorb
mov
test
adc
fmul
or
sarb
push
add
addl
call
lods
loopne
movsl
mov
or
mov
add
inc
inc
add
mov
cli
imul
out
pop
repz
mov
push
cmp
inc
nop
push
add
dec
add
jge
out
sbb
mov
arpl
jae
adc
or
movsb
sbb
inc
or
arpl
mov
push
jecxz
and
xchg
and
xor
lods
add
mov
push
in
mov
popf
std
xchg
add
xchg
pop
xchg
mov
sbb
mov
cmp
mov
ret
add
das
jecxz
pusha
fcmovbe
fwait
mov
aam
cwtl
sti
orb
xor
js
add
mov
mov
das
inc
cld
ljmp
mov
cmpsb
mov
pop
xor
int3
xorb
popf
aad
popa
lcall
arpl
nop
and
jmp
adc
out
add
adc
pop
jns
add
sbb
incl
aam
dec
or
add
jno
inc
loopne
icebp
movsl
roll
xor
arpl
imul
adc
push
aaa
int3
orb
pop
in
inc
xchg
push
dec
add
andb
sbb
lock
push
xchg
add
push
or
rcl
aaa
cmp
add
push
lret
mov
lea
sub
pop
or
aam
pop
push
imul
sub
mov
aas
xor
and
test
push
add
jle
in
mov
inc
int3
add
mov
push
pushf
jae
and
xor
push
cwtl
pop
dec
icebp
flds
mov
in
test
cmp
fisubl
mov
shrl
je
mov
mov
mov
hlt
pop
out
jae
cld
loopne
mov
ret
in
mov
cmp
sub
dec
push
out
cmpsb
jmp
sti
add
mov
and
and
mov
das
lea
dec
hlt
xorb
ret
aaa
jmp
and
inc
loopne
sahf
popf
mov
inc
pusha
inc
mov
xchg
add
test
fucomi
pusha
inc
sub
mov
sbb
fcmove
dec
adc
push
mov
daa
dec
outsb
push
add
mov
pop
add
and
add
sub
sti
add
insl
and
in
sbb
stc
shll
andb
xor
add
sbb
mov
sub
out
push
mov
lods
aam
push
pop
stos
cmp
jp
call
jnp
dec
hlt
mov
fwait
pop
cmp
imul
mov
jae
cld
mov
add
sub
jmp
dec
and
fwait
add
in
nop
cmp
sub
daa
adc
sbbb
mov
out
je
mov
sub
add
daa
insl
inc
jl
into
mov
sub
push
sbb
pop
cli
mov
jne
pusha
xchg
sub
sar
cmpsl
addl
cmp
in
add
fdivs
cmp
xchg
and
sub
sbb
loop
mov
popf
jmp
or
pop
jo
icebp
jle
mov
add
mov
inc
push
sub
loopne
dec
xor
xor
popf
fidivrl
add
loope
pusha
jge
add
mov
pop
pop
mov
xchg
jno
add
je
shll
andl
adc
inc
pop
std
add
sub
loopne
aas
cwtl
add
add
pop
add
jge
push
dec
scas
mov
inc
addr16
dec
add
sbb
icebp
sub
test
jmp
push
mov
mov
pusha
add
call
cmp
add
test
clc
adc
fdivr
stos
sbb
dec
xchg
and
in
mov
out
jae
push
call
daa
jge
push
mov
pop
mov
inc
mov
in
fdiv
in
and
jmp
das
addb
inc
loop
cmpsb
addr16
push
add
pop
mov
jae
into
sbb
psubb
lret
es
test
xchg
push
xchg
sub
addb
adc
mov
add
sahf
lods
orb
adcb
pop
popa
in
movsb
sbb
pop
add
jo
stos
cwtl
insb
add
mov
jae
dec
add
pop
xchg
hlt
xor
push
adc
ficoml
in
sbb
pop
mov
es
mov
orb
pop
gs
dec
movsb
js
sbb
stos
mov
inc
cmp
jo
sahf
pop
add
inc
or
xor
cmpsb
cmp
pop
push
inc
lahf
test
and
inc
pop
pushf
call
les
fistps
outsb
mov
pop
js
mov
xchg
mov
subb
adc
fcos
xor
cmc
loope
sbb
sti
mov
shr
and
popa
fnstsw
shlb
adc
int3
shlb
mov
jl
or
cmp
cmc
mov
sbb
add
jo
enter
and
jmp
pushf
sbb
mov
enter
testb
jp
fwait
pop
sub
fcomps
xor
addb
call
inc
cwtl
addl
mov
je
shrl
jo
sbb
pop
cmp
add
push
ds
add
pushf
mull
fiaddl
adc
sbb
add
fldt
inc
and
movsb
lods
adc
nop
pushf
push
movsb
push
ljmp
sub
jg
test
orb
xor
add
adc
loopne
adc
lahf
pop
lods
jb
repnz
test
fs
and
enter
cmpsb
notb
push
fcomps
xor
add
push
and
jp
dec
test
lods
cmc
nop
in
pusha
pusha
lods
sbb
out
dec
and
sbb
data16
adc
mov
mov
mov
divl
sub
push
cmpsl
inc
inc
pop
add
ret
xor
call
imul
scas
sti
or
enter
loop
add
insl
pop
mov
ret
xchg
hlt
or
loope
test
xchg
arpl
adc
xor
xchg
mov
sbb
xor
add
pushf
jl
jecxz
outsb
dec
push
nop
test
mov
mov
call
add
or
or
cmpsb
sub
add
dec
xor
xor
mov
addr16
add
shll
sahf
mov
push
repz
in
adc
mov
mov
pop
sbb
nop
insb
adc
xchg
fisttpl
xchg
insl
jae
mov
cwtl
mov
add
std
adc
popa
mov
xorb
cmp
pusha
xor
dec
sbb
ljmpw
cmpl
shlb
stos
jmp
pop
mov
nop
add
sbb
repnz
push
jnp
add
ret
ds
dec
xchg
sub
mov
imul
push
add
cs
mov
mov
sbb
sbb
or
ret
mov
add
pop
adc
mov
sub
or
add
sbb
call
in
popa
out
faddl
push
pusha
mov
mov
jne
adc
inc
mov
add
sub
outsl
jno
loope
push
test
pop
mov
daa
or
pusha
sub
in
adc
add
test
cli
mov
and
in
add
xchg
fldt
scas
shrb
rcrb
jae
andb
xor
sub
into
sti
lcall
fstps
sub
cli
mov
iret
cmp
lea
mov
in
lret
and
inc
add
loopne
mov
dec
movsb
add
jb
add
sbbb
vpmulhuw
inc
inc
xor
sub
mov
js
add
inc
in
add
loope
push
jns
dec
push
test
mov
mov
mov
and
mov
loope
cmp
mov
test
jp
es
lcall
cmp
sbb
sbb
xchg
dec
sbb
popf
adc
lcall
and
sub
sbb
cwtl
not
adc
ret
insb
loop
inc
inc
je
icebp
jecxz
pop
xchg
fldt
push
or
stos
cmpsl
pop
fists
jb
sbb
pusha
and
mov
lahf
sbb
mov
xchg
push
xchg
inc
popa
jg
mov
hlt
mov
mov
jl
pop
add
stos
sbb
xchg
mov
push
decl
scas
sub
pop
rorb
cwtl
add
jp
pusha
adc
test
sub
cmp
sbb
orl
fcmove
adc
add
pop
je
push
pop
adc
std
adcl
pop
repnz
jge
test
hlt
mov
mov
adc
sub
and
inc
js
mov
adc
dec
pop
fsub
lods
loopne
push
add
push
negl
fwait
cmp
add
fisttpl
rorl
adc
mov
hlt
sbb
mov
imul
int3
add
ds
popf
aas
adc
push
sahf
lea
sbb
add
dec
pusha
lds
and
sbb
sbb
mov
sbb
aam
mov
jg
and
icebp
cmpsl
lret
adc
inc
pusha
xor
mov
inc
mov
xor
in
pop
fwait
mov
movsb
add
xor
mov
lods
xor
adc
push
inc
add
mov
mov
pop
in
cld
mov
jg
pop
or
dec
incl
nop
jns
popf
in
mov
rorb
out
pop
stos
inc
pop
dec
sub
xchg
inc
and
cld
push
push
in
xor
jns
bound
and
mov
shlb
mov
and
dec
push
sbb
add
xchg
loope
push
xor
inc
cmp
cwtl
xchg
add
jne
stos
or
addr16
add
cmpsl
jo
jno
scas
mov
je
sbb
jb
lsl
dec
int3
mov
adc
mov
lret
sbb
inc
sbb
jecxz
mov
enter
pushf
add
xchg
and
add
cli
int
adc
enter
das
xor
pop
aad
imul
loope
ss
call
xlat
jns
xchg
lret
aam
out
pusha
int
pop
mov
imul
testb
sbb
add
mov
lods
ret
and
fdivl
dec
mov
push
cld
mov
xchg
add
push
lods
mov
sub
dec
mov
lds
lret
dec
es
sahf
adc
test
add
mov
js
cld
mov
lret
sbb
fsts
mov
push
mov
push
popf
mov
jp
adc
mov
rcll
enter
xor
mov
mov
imul
xchg
addr16
or
inc
dec
push
sbb
out
add
inc
add
popf
js
dec
add
leave
cmp
xchg
iret
pop
push
arpl
rclb
mov
pop
cmpsl
xchg
jns
popa
out
mov
jle
lock
stos
andl
lds
adc
repnz
inc
cmp
mov
pop
mov
jno
aad
sbb
test
dec
mov
js
cli
rcrb
std
rorl
jmp
fwait
cmp
sbb
popfw
pop
stc
sub
lods
xor
pop
sti
orb
jl
and
ds
sub
das
add
lock
scas
sub
sub
inc
aas
xchg
or
out
rol
add
mov
imul
add
and
dec
shlb
add
push
inc
mov
pop
xchg
xor
xchg
imulb
popf
jecxz
je
xchg
sub
or
or
adc
push
mov
fiadds
cs
mov
insb
jmp
mov
inc
adc
cwtl
sbb
and
ljmp
hlt
fsubs
inc
movsl
shlb
ret
push
xor
dec
pop
inc
jns
pop
add
cmc
loop
and
lock
dec
xor
pusha
mov
adc
or
mov
adc
or
es
imul
cmp
incb
les
xor
sub
bound
add
xor
mov
ret
jo
rcll
jne
and
add
sbb
lock
cltd
push
icebp
and
cmp
add
push
jecxz
clc
add
movsl
popf
pop
or
cmp
sub
cmp
andl
sbbb
sub
rorb
sub
loopne
test
inc
add
enter
or
xor
insb
add
mov
lock
and
adc
enter
scas
add
push
lock
sbb
pop
enter
test
xor
jl
mov
dec
cltd
xchg
pusha
adc
add
ret
in
shlb
repnz
testl
xchg
mov
jnp
adc
push
sbbl
stos
movsl
sbb
pmaxub
dec
xchg
and
lods
add
aam
aaa
jg
inc
xor
pushf
push
add
xorb
sbb
add
imul
and
cs
add
movsl
flds
mov
adc
lock
int3
push
fdivr
data16
test
jl
add
pushf
mov
add
rcrb
mov
add
xchg
add
mov
shl
pusha
mov
fcompl
pop
rclb
adc
or
mov
and
adc
daa
xor
aad
adc
es
ljmp
push
pop
add
getsec
rorb
inc
iret
pop
cltd
add
cmp
mov
xor
xchg
mov
mov
pop
movsl
cmp
add
sbb
dec
sti
jns
jno
or
ret
popa
adc
xchg
aaa
sbbb
add
mov
push
sub
inc
test
adc
mov
mov
mov
daa
dec
push
add
lahf
push
outsb
sti
inc
enter
jl
push
pop
insb
adc
add
ss
and
sbb
clc
add
sti
sbb
jbe
test
repz
add
sub
mov
xor
cwtl
adc
mov
add
faddl
pop
shl
aas
dec
lret
ret
cmpsl
pop
sarb
pop
addb
push
cmpsb
repz
add
jmp
adc
sbb
jmp
and
fs
adc
cwtl
lea
cmp
jecxz
test
hlt
cltd
adc
xchg
mov
shl
loopne
cmp
sub
dec
sbb
xor
sti
dec
ss
add
je
enter
or
xorb
repz
cli
inc
mov
nop
pop
cltd
jb
lock
cwtl
shl
test
add
in
cmp
cmpsl
je
dec
jp
faddl
adc
jmp
push
cli
popf
sbbl
loop
pop
or
adc
xchg
dec
cmp
sbb
xor
and
fmuls
lods
push
test
xor
xor
loope
dec
jo
add
push
push
pop
flds
rorb
pop
adc
push
inc
mov
add
popf
frstor
test
cmp
movsl
loopne
cmp
jle
hlt
pusha
cmpsb
and
movsb
das
lcall
les
dec
add
cli
xor
push
mov
lahf
cltd
add
lret
jo
pop
or
mov
sbb
adc
loop
add
out
mov
les
mov
shlb
cmp
push
jmp
imul
pop
ljmp
cmpsl
adc
pop
mov
out
and
add
adc
push
mov
jae
shlb
loope
lahf
sbb
fmuls
aas
les
andb
cmp
or
and
jge
jo
adc
mov
ret
dec
or
out
mov
push
and
sbb
and
mull
addb
scas
cmp
or
xchg
dec
mov
sbb
push
stos
push
dec
jbe
adc
mov
xor
aas
mov
lahf
orb
loopne
xor
and
enter
sbb
and
add
xchg
add
add
push
dec
sti
add
mov
dec
sbb
call
fbstp
sub
mov
xchg
xor
lahf
das
jb
add
add
lock
insb
or
rolb
xchg
pop
jo
mov
pop
jp
and
push
sahf
add
imul
sbb
add
or
flds
inc
inc
push
mov
mov
add
xor
xor
scas
inc
rorb
mov
sub
add
xor
mov
scas
addb
andl
dec
or
popa
cmc
xchg
xor
outsl
add
xchg
jnp
shlb
inc
dec
incl
cmpb
sbb
subl
lock
mov
dec
cltd
cwtl
add
xor
mov
adc
leave
add
test
enter
push
inc
and
insl
and
stos
push
scas
fcoms
mov
loopne
and
fwait
es
mov
ficomps
fs
rcr
mov
daa
in
cmpb
into
push
mov
push
dec
roll
fnstenv
sarb
loop
lcall
in
dec
and
push
imul
and
inc
arpl
push
add
mov
fmuls
movsl
fnstcw
jns
add
dec
stc
out
aam
in
hlt
sbb
pop
mov
pop
int3
add
xor
pop
xor
mov
cmp
sub
loopne
dec
xchg
push
movsb
lcall
lret
fiaddl
cmpsl
movsl
sbb
mov
std
xchg
adc
cmp
dec
pop
or
scas
js
test
ss
dec
cmpsb
sbb
scas
pop
call
sbb
mov
add
cli
sub
cmp
add
mov
add
and
mov
pushf
cmc
jae
inc
and
pop
out
test
add
lret
dec
adcb
jp
pop
mov
dec
inc
or
add
lret
jo
enter
or
into
cmpsl
jecxz
sbb
sbb
lods
mov
mov
dec
adc
test
mov
ret
test
xor
jae
and
add
fs
jmp
int
test
add
fiadds
sbb
pop
add
lret
adc
mov
pusha
adc
jl
subb
adc
rcl
mov
ret
loopne
add
mov
pop
push
aam
push
mov
lods
add
dec
mov
add
push
out
cmp
adc
pop
pop
lock
pop
cmpsl
dec
imul
sbb
arpl
mov
jo
leave
push
pop
dec
imulb
decb
repz
shlb
or
jns
inc
sbb
mov
add
push
dec
lcall
lea
mov
shl
fbld
je
add
cmp
inc
fs
add
aad
and
hlt
sbb
lock
mov
xor
mov
jae
add
test
push
ds
and
test
cmp
xor
dec
cmp
dec
dec
add
mov
sbb
lds
fcomps
pusha
movsb
dec
and
dec
cmpsl
push
cmp
sbb
push
or
jge
repnz
pop
add
add
mov
pusha
add
and
inc
xchg
inc
push
sub
cmpb
loopne
xor
mov
inc
or
push
cmpsl
lret
mov
add
pop
lret
hlt
dec
add
xchg
mov
cmp
or
adc
xchg
arpl
adc
xchg
sbb
shlb
dec
js
or
inc
sarl
fsubl
xchg
stos
sbb
xor
add
jl
lock
push
mov
mov
daa
mov
in
inc
add
test
cmp
pop
cwtl
sub
shlb
xor
subl
ja
int3
movsl
pop
add
arpl
push
gs
fsub
fyl2xp1
push
hlt
test
mov
pop
outsb
jae
mov
lock
sarb
stos
sbb
adc
adc
xor
add
dec
sub
dec
xchg
incb
jns
lret
shrl
mov
int3
mov
scas
or
lods
or
add
out
icebp
call
es
out
mov
fdivrs
mov
and
cmp
subb
cmp
xchg
into
xor
inc
daa
add
sbb
xor
cmp
or
inc
js
inc
fadds
pop
xor
push
add
cmp
pop
lret
movsb
or
cltd
pop
xor
add
sbb
push
push
push
filds
jmp
sub
dec
test
ja
and
xlat
movsb
popa
movsb
adc
add
iret
jg
adc
xor
push
in
sbbl
daa
adc
cmp
clc
iret
cmc
fisubrl
mov
add
dec
test
in
dec
stos
xchg
jns
dec
pop
add
mov
enter
inc
add
imul
aas
mov
xorl
lods
dec
andl
push
cwtl
insb
adc
dec
jg
add
cmp
and
xchg
paddw
jp
mov
data16
lods
xor
push
out
add
or
sub
mov
xor
cmpsb
nop
fdiv
adcb
ds
shlb
vpmuludq
dec
shll
sub
xor
xor
add
lock
or
sbb
adc
ja
out
push
dec
and
add
fadds
pop
sahf
add
pop
and
cmp
repnz
ret
dec
sarb
testb
out
out
pop
cmp
popa
sarb
mov
xchg
xchg
add
xchg
ja
in
outsb
mov
lock
pusha
cmp
cld
movsb
pushf
add
mov
jo
bound
jl
dec
jecxz
sahf
pop
inc
out
sub
or
lret
ret
cmp
add
sbb
mov
out
pop
adc
es
sahf
cwtl
add
push
and
xchg
in
sub
push
loopne
mov
sbb
jmp
mov
iret
enter
rcrb
gs
aas
mov
mov
or
adc
and
jns
xor
cmp
pop
imul
lcall
xchg
add
jno
push
into
jmp
mov
lods
pop
add
sbb
clc
cmp
adc
cmp
test
mov
mov
adc
inc
xlat
and
add
iret
push
fadd
mov
popf
roll
cmpb
jbe
sub
idivb
call
fsubl
adc
ror
ror
mov
stos
fwait
mov
shrl
mov
es
pop
dec
inc
jb
cmpsl
pop
cmp
mov
inc
pusha
adc
mov
inc
clc
test
sbb
cli
inc
and
cld
repnz
lret
je
rcll
jno
cwtl
cmp
int
daa
lock
pusha
inc
bnd
inc
cmp
pop
fnsave
sub
pushf
loopne
fidivl
dec
add
add
pop
arpl
pushf
call
mov
xor
loope
add
inc
test
test
push
andb
enter
mov
movsl
push
scas
ret
inc
orl
push
adc
adc
int3
add
add
dec
add
xor
xchg
push
dec
add
inc
dec
