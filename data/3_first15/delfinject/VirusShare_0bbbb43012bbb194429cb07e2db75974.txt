xor
add
add
add
add
add
mov
pop
add
jo
add
adc
add
add
add
add
add
add
add
pushf
mov
add
movsb
mov
pop
add
mov
pop
add
mov
pop
add
add
add
mov
add
push
mov
add
sub
add
xor
add
cmp
add
dec
mov
add
pop
mov
add
insb
mov
add
andl
pop
add
add
add
add
add
pop
add
add
and
pop
add
mov
pop
add
mov
pop
add
pop
add
mov
add
push
mov
pop
add
pop
add
mov
add
push
pop
add
mov
add
jbe
pop
add
mov
add
andl
add
mov
pop
add
mov
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
push
inc
push
dec
xor
cs
dec
dec
add
dec
inc
inc
push
xor
cs
dec
dec
add
dec
xor
cs
dec
dec
add
push
inc
push
xor
cs
dec
dec
add
inc
inc
push
push
xor
cs
dec
dec
add
inc
dec
dec
xor
cs
dec
dec
add
dec
push
inc
push
dec
cs
dec
dec
add
dec
dec
dec
dec
cs
dec
dec
add
inc
push
xor
cs
dec
dec
add
dec
dec
dec
inc
push
cs
dec
dec
add
dec
inc
dec
xor
cs
dec
dec
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
push
gs
jo
outsb
dec
gs
add
add
jo
jb
popa
je
inc
popa
jo
jne
gs
imul
add
push
popa
je
insb
je
add
dec
inc
dec
jo
outsb
add
add
jae
jb
gs
je
imul
push
js
arpl
gs
add
add
je
inc
imul
jae
add
add
dec
inc
outsl
ja
insb
outsl
popa
fs
outsl
inc
imul
gs
inc
add
add
je
jb
gs
gs
outsl
outsb
outsb
arpl
push
je
je
add
add
outsb
add
add
adc
je
push
test
add
add
pop
add
add
call
decl
adc
cld
decl
test
add
movb
mov
sub
mov
add
lea
add
pusha
push
push
push
push
call
test
je
mov
call
pop
mov
add
push
push
call
popa
mov
mov
add
mov
cmpl
jne
add
mov
jmp
mov
add
add
cmpl
je
add
mov
add
push
push
push
push
pushl
pushl
mov
mov
mov
add
call
pop
pop
pop
pop
cmp
je
add
jmp
push
push
pushl
call
lea
mov
lea
mov
mov
cmp
je
mov
inc
sub
cmp
ja
mov
cmpb
je
mov
cmp
jne
mov
shr
rol
xchg
jmp
mov
xchg
rol
xchg
sub
add
mov
add
sub
mov
loop
call
lea
mov
cmp
je
mov
sub
je
mov
lea
mov
lea
mov
cmp
je
mov
add
mov
jmp
mov
add
mov
xor
mov
inc
or
je
cmp
ja
add
add
jmp
and
shl
mov
add
or
jne
mov
add
jmp
xor
xchg
mov
cmp
je
lods
or
je
add
add
jmp
xor
shr
lods
or
je
add
add
jmp
lea
mov
lea
mov
cmp
jne
add
push
push
push
push
push
push
call
pop
pop
cmp
jne
add
mov
rep
sub
sub
push
pushl
push
push
call
push
pop
sub
xor
mov
cmp
je
inc
lea
mov
push
push
push
push
push
pushl
pushl
mov
add
push
call
pop
pop
pop
pop
add
loop
mov
cmp
je
popa
popf
mov
ret
popa
popf
jmp
mov
or
je
mov
add
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmpb
jne
inc
mov
and
mov
movb
push
push
pushl
call
pop
pop
pop
pop
cmp
je
mov
mov
pushl
popl
add
inc
jmp
clc
ret
jmp
push
mov
mov
mov
cld
mov
movsb
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
ret
push
call
ret
mov
adc
push
add
or
inc
cmp
add
or
ret
mov
add
adc
mov
cmpl
adc
or
push
and
rolb
add
call
enter
add
shl
or
dec
mov
jne
pop
sbb
add
mov
xor
fildl
or
sub
in
ljmp
jb
sub
or
add
adc
out
xor
inc
out
clc
dec
jne
pop
mov
bound
jp
mov
ret
pop
addr16
cs
ret
push
movzwl
mov
or
movl
jae
mov
mov
sbb
sarb
cli
sar
add
cmp
sbb
lahf
adc
loope
jno
data16
jb
jmp
inc
sub
sahf
clc
fistl
scas
mov
or
int3
shr
sahf
ret
inc
test
ds
add
in
push
push
jbe
jge
sub
jle
mov
xorb
int3
or
xor
aas
std
add
int3
dec
cld
sbb
pop
ret
add
shl
pop
pop
or
sub
cmp
jbe
mov
xchg
inc
cmp
mov
notl
jle
push
lret
inc
pop
or
call
mov
push
or
inc
cmp
jl
adc
leave
popa
fcomi
xor
inc
xchg
outsb
enter
test
or
jo
xchg
mov
push
pop
mov
sar
sub
les
jne
mov
shr
sbb
loopne
add
jbe
aaa
call
or
cmp
sti
inc
inc
shr
sbb
sbb
jbe
pop
mov
xor
adc
mov
test
push
sbbb
icebp
call
es
sub
push
lea
pop
call
cmp
icebp
xor
push
jne
lret
and
mov
lahf
and
add
push
clc
mov
inc
adc
sub
jl
cmp
or
orb
enter
mov
sbb
leave
cltd
dec
hlt
nop
push
call
movsb
data16
orl
push
in
inc
lock
shl
add
xor
dec
dec
into
cmp
cmp
push
adc
fdivl
push
sbb
mov
xorl
fcompl
rep
adc
retw
jne
inc
add
cli
cld
inc
mov
add
xchg
pop
mov
and
mov
adc
hlt
test
fwait
ret
push
les
mov
jbe
sbb
test
movsl
mov
sub
inc
add
movsl
inc
pushf
mov
add
and
leave
push
adc
jge
push
gs
push
jmp
and
or
cmp
or
movsl
sbb
into
pusha
or
divb
pusha
clc
lcall
push
sbb
push
insb
out
add
mov
fsub
mov
iret
push
sbb
push
repnz
scas
adc
add
test
cmp
sbb
sub
sahf
das
mov
inc
dec
inc
xchg
add
rorl
call
pop
cmp
je
sub
incl
setge
sub
clc
lea
xchg
hlt
shll
add
decl
mov
jmp
mov
inc
xor
xchg
jmp
sub
mov
lock
jne
leave
adc
push
mov
cmp
insl
sbb
fldl
test
fwait
push
aad
cltd
jle
mov
or
jmp
lock
in
rorl
sub
mov
xor
or
call
add
mov
add
sub
jp
dec
push
andl
sub
leave
loop
and
sti
dec
repnz
popa
mov
sub
pop
jge
dec
push
in
sub
pop
dec
pop
add
pop
jo
jmp
add
ret
psubq
ds
add
and
inc
adc
imul
nop
leave
dec
xor
dec
cmpb
cmp
sbb
rcl
inc
test
mov
addb
inc
adc
rolb
jle
cmp
icebp
icebp
iret
rorb
nop
stos
mov
shrb
int3
pop
outsb
sbb
movsb
jne
cmpl
lock
adc
jb
mov
orb
shl
dec
add
les
xchg
sbb
push
cs
sub
jb
xor
mov
mov
negb
rcll
rcrl
dec
jne
cmp
jne
dec
sbb
cmp
add
sub
add
popa
jecxz
iret
push
pushf
dec
sbb
jecxz
lcall
inc
mov
sub
mov
cmp
dec
mul
sbb
inc
outsb
addb
xchg
rolb
add
les
xor
insb
mov
adc
adc
add
pop
add
inc
add
nop
pop
add
add
jmp
dec
adc
mov
xchg
stc
out
in
adc
lds
cmp
dec
mov
leave
mov
fnstcw
jecxz
and
push
loopne
sbb
jne
loop
clc
mov
jg
push
fidivs
loop
pop
push
mov
fdiv
inc
or
pop
or
ret
jbe
mov
push
lods
mov
loope
sbb
adc
mov
pop
add
sub
loope
sahf
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
neg
or
mov
or
xor
push
lcall
push
sub
and
popf
mov
lods
sub
mov
pop
sub
sbb
jae
jae
mov
mov
ss
adc
test
popa
daa
and
jnp
mov
daa
fnstenv
std
testb
mov
cli
push
lea
xchg
lahf
mov
mov
jae
fstpl
jecxz
stos
mov
cmp
sbb
jmp
cld
iret
pop
mov
shlb
sub
mov
aaa
dec
out
daa
cmp
in
mov
inc
dec
aam
cld
scas
int3
in
jae
jg
scas
call
adc
pop
shlb
stos
repz
and
adc
inc
lahf
sbb
sti
sbb
xchg
mov
mov
or
nop
sti
arpl
add
imul
xchg
push
fistl
lcall
cs
mov
mov
inc
in
test
and
out
cmpsl
in
mov
or
xchg
inc
push
push
ljmp
dec
mov
cld
popf
and
mov
or
mov
inc
and
stc
arpl
pop
addr16
popf
stc
pop
xchg
cld
push
pop
dec
push
inc
cld
add
cmpsl
xor
pushf
mov
sahf
jge
sub
orl
imul
shlb
xchg
push
xchg
stos
adc
movsl
push
mov
test
mov
repz
outsl
add
inc
outsl
repnz
jg
shll
xor
add
adc
dec
out
jp
jno
xchg
rcrb
lahf
repnz
in
mov
push
sub
aas
int3
push
aaa
mov
mov
imul
daa
jne
hlt
cwtl
outsb
cs
loopne
or
push
xchg
jno
push
jbe
push
mov
retw
ljmp
jl
lahf
mov
xor
movsb
test
push
aad
inc
test
cmp
mov
mov
jl
mov
mov
mov
and
lret
int
shl
in
subl
loopne
divl
adc
and
push
sar
aaa
lods
sbb
insl
jno
jmp
call
xchg
xchg
cmc
jnp
leave
daa
dec
iret
jb
sbb
call
cmp
mov
int3
pushf
mov
mov
sbb
xchg
xor
lahf
scas
paddd
inc
mov
call
hlt
add
insb
xor
mov
dec
es
cmc
stos
lret
les
sbb
inc
mov
cmc
mov
rolb
cwtl
addr16
jp
mov
mov
aaa
push
lds
cld
mov
icebp
pop
repnz
aad
arpl
jle
rcrb
adc
push
add
jo
cmpsb
adc
mov
xchg
jl
mov
mov
push
pop
ja
cmp
and
subl
or
jno
test
insb
sbb
jb
aam
xor
les
daa
out
push
fs
xchg
and
lret
leave
mov
or
mov
xor
inc
dec
in
cs
movsl
outsb
sub
and
adc
or
dec
mov
xchg
mov
shlb
xchg
inc
stos
sarb
ret
cmpsb
dec
cmpsl
out
jbe
or
in
mov
lcall
sbb
add
pop
adc
push
xchg
push
lods
stos
aaa
fcmovb
decl
mov
sbb
nop
roll
cmc
mov
fbstp
les
jno
insb
mov
test
insl
sub
ficoml
mov
rcrl
mov
mov
mov
pop
xchg
mov
cmp
std
cmpsb
jb
inc
and
lret
adc
fbld
push
stos
jo
cmp
test
push
pop
in
inc
jo
ja
cmp
adcl
jb
pop
push
and
add
mov
or
lcall
loopne
data16
inc
arpl
xchg
pop
pop
lret
jno
push
mov
pop
ret
mov
stc
adc
mov
insb
jmp
aam
jbe
cmp
ja
xchg
xchg
hlt
pop
pop
xchg
pop
call
ja
mov
pop
xor
sahf
add
call
stos
and
or
fmul
shrl
inc
inc
fdivs
xchg
cli
dec
inc
rcl
cs
arpl
scas
sub
inc
pop
in
js
add
dec
aaa
cltd
pop
inc
xchg
shr
insl
pushf
jo
ret
inc
outsl
cld
or
test
mov
inc
dec
pop
dec
xchg
cs
sti
lahf
data16
adc
js
cwtl
add
cmpsb
int
cmp
insl
mov
les
ja
testl
xor
mov
push
dec
mov
lods
icebp
sub
cld
xchg
push
ret
add
jmp
shrb
lretw
aas
daa
sub
jg
mov
test
mov
out
loopne
sbb
insl
rcll
add
xor
jne
sbb
idivl
test
popa
xor
jbe
pop
xchg
jno
addr16
mov
mov
outsb
xor
lock
lock
in
insb
cld
pusha
and
mov
xor
cmp
addb
cmpsb
pop
scas
mov
inc
cltd
mov
outsl
out
daa
ljmp
push
pop
pop
jb
cmp
xchg
mov
test
rorl
loope
incl
or
pop
test
adc
dec
ja
outsl
das
test
push
dec
fcompl
test
pop
pushf
imul
out
mov
clc
call
cmpsl
push
out
or
mov
repz
or
push
xchg
lret
cmp
mov
mov
pop
ret
fdivrl
test
inc
xor
xchg
fwait
pushf
call
and
dec
dec
cmpsb
test
int
mov
dec
cmp
ret
sub
fdiv
fwait
out
adc
jbe
jp
and
testl
int
inc
add
cld
pop
sub
pop
inc
sub
xchg
or
cmp
adc
sti
cmp
ljmp
push
repz
mov
rcl
hlt
mov
push
das
or
subl
mov
push
sub
scas
mov
mov
add
lcall
fwait
dec
and
bound
movsb
imul
fwait
add
in
scas
pop
subl
inc
mov
ss
and
mov
jl
dec
je
rcr
jmp
fildl
ja
iret
pop
inc
jl
cmovae
and
sbb
jp
xchg
jge
add
cmpsl
pop
dec
mov
vpunpckhwd
inc
mov
sbb
scas
add
lret
jge
pop
dec
out
into
xchg
mov
push
loop
lea
xchg
adc
loopne
loopne
lahf
mov
lods
push
jge,pt
mov
adc
std
pop
stos
std
insb
data16
xchg
mov
outsb
ljmp
loopne
mov
lret
stc
dec
mov
jg
jbe
dec
adc
imull
jge
cs
inc
mov
fldcw
mov
xor
test
popa
mov
call
icebp
int3
push
sub
test
ret
lret
mov
ss
cmpl
xchg
push
mov
mov
icebp
pusha
js
pusha
add
jnp
dec
or
sub
ds
push
clc
mov
rcrb
cmpsl
fistl
shrl
mov
xchg
dec
xchg
jnp
adc
mov
mov
xor
pop
pop
xchg
bound
push
ror
loopne
mov
cmp
int3
icebp
icebp
ja
dec
inc
rclb
aam
scas
mov
out
in
dec
stc
ficompl
cld
outsb
out
and
jb
and
shll
sti
pop
sbb
dec
mov
xchg
insb
inc
cwtl
in
dec
push
outsl
aaa
sahf
lahf
dec
mov
xchg
adcb
inc
ja
xchg
sub
cmpl
loopne
cmp
fs
ljmp
and
repz
inc
bound
push
xor
enter
sbb
cmp
cmp
mov
shr
test
call
cmpsl
sbb
xor
cmp
mov
push
dec
ljmp
mov
dec
in
daa
mov
fucomip
pop
pop
jl
fs
movsl
daa
imul
dec
vpcmpgtd
mov
adc
xchg
vshufps
cmp
sub
test
and
pusha
cmp
sbb
out
push
scas
stos
enter
xor
aad
rcll
daa
jmp
cmp
jg
inc
lahf
or
adc
into
jo
mov
xor
mov
roll
insl
not
pop
sbb
cmp
hlt
loope
dec
pop
adcl
mov
mov
xor
mov
adc
push
in
sti
jmp
lret
loopne
movsb
pop
cmp
dec
mov
movsb
call
add
in
inc
ss
add
data16
mov
add
sub
cmp
lahf
jnp
and
pop
adc
pop
sbb
inc
cld
or
lcall
push
cmc
dec
xchg
cmp
sbb
jno
pop
imul
loop
lahf
ficomps
test
lods
cmp
jl
add
mov
mov
dec
stc
jae
cwtl
flds
push
push
ds
jo
xchg
push
push
fs
cmp
mov
inc
mov
jo
js
cmp
add
xor
scas
sbb
mov
mov
loop
ret
mov
sbbb
sbb
cwtl
pop
dec
add
popf
in
enter
faddl
cmp
inc
mov
xor
xchg
dec
mov
int
mov
add
lock
jne
and
cltd
scas
outsl
sti
xchg
xor
or
pop
mov
xlat
cs
add
or
lods
cld
loope
push
mov
je
lea
jno
mov
mov
jne
jne
pop
pushl
pop
add
add
mov
out
xor
jle
push
testl
push
push
push
sahf
fbstp
mov
adc
outsb
pop
pushf
mov
mov
fs
cwtl
in
lds
pop
cwtl
cld
decl
inc
movsl
sub
in
imul
fwait
test
ljmp
aaa
mov
xlat
push
pop
add
daa
loopne
cltd
cmpsb
adc
loop
fidivrs
adc
lock
mov
xchg
out
inc
fisubrl
cmp
fadds
ffreep
ret
cmp
loope
push
addl
nop
fstps
jnp
sbb
inc
ss
fimuls
clc
dec
cmp
xor
sbb
cltd
push
lods
dec
or
stos
add
clc
cli
adc
xor
iret
cmp
clc
and
movsl
gs
pop
cmpsl
sub
or
sub
xchg
cmpsl
xor
jo
sub
sbb
mov
adc
stos
sub
and
xor
inc
mov
mov
push
pop
sbbb
push
sbb
cmp
add
jmp
pop
dec
xlat
mov
cmp
negl
ss
xchg
clc
repz
xor
movsl
pop
movsb
or
fildl
sbb
sub
xchg
pop
pop
and
arpl
in
test
pop
dec
popa
imul
icebp
xchg
xchg
push
stos
jge
js
sbb
ret
jl
pushf
daa
repnz
xchg
test
mov
lret
inc
shlb
andb
sahf
divl
jmp
or
push
loope
es
inc
enter
pop
pusha
push
ret
inc
in
lret
pop
rclb
pmulhuw
inc
push
mov
mov
dec
or
dec
sub
mov
mov
lods
inc
lock
jmp
adc
mov
mov
imul
in
ljmp
push
and
cmpsl
mov
mov
repz
pop
push
mov
sub
xchg
js
push
je
repnz
jnp
in
jns
fistps
mov
or
pop
jmp
pop
andb
jle
bnd
lds
jg
hlt
inc
mov
xchg
out
xor
lea
xlat
sahf
mov
xchg
shr
out
stos
adc
mov
in
imul
arpl
lds
mov
mov
inc
inc
imul
and
cmp
outsb
cli
cmpsl
adc
rorb
sbb
mov
fs
inc
mov
cmp
int
sbb
jle
jb
sahf
jmp
daa
mov
test
aaa
or
in
ljmp
or
inc
mov
fdivrs
adcl
seto
movsb
mov
xor
lcall
das
or
insl
aaa
rep
lods
sbb
mov
icebp
inc
les
test
insb
mov
imulb
or
call
mov
out
jl
and
dec
mov
mov
add
lods
inc
dec
imul
pop
mov
fwait
sub
jg
or
sbbl
mov
mov
or
sbb
aad
pop
je
inc
cmc
inc
sbb
or
cmpb
loopne
idivb
cmc
add
adc
inc
lds
sbb
xor
jp
in
lret
adc
gs
addr16
sub
mov
out
pop
incb
xchg
jecxz
fisubrl
xchg
fcomp
mov
push
nop
ss
cmpsl
ret
jnp
pushf
stos
iret
sbb
mov
push
nop
jne
adc
imul
cmp
int
cmp
jmp
push
aam
out
pop
out
lods
out
push
mov
in
cwtl
jecxz
push
pop
dec
ffreep
mov
push
mov
js
xchg
gs
jecxz
sbb
cmp
fbstp
and
jp
iret
das
rclb
aaa
dec
fimuls
mov
jle
pop
xchg
push
ficomps
sbb
out
sub
jg
push
mov
xchg
shll
jbe
in
push
in
shll
imul
cmp
and
mov
dec
add
mov
stos
lret
sub
in
mov
jmp
arpl
push
mov
pop
test
dec
aas
ljmp
add
lock
ficoml
push
sahf
xchg
or
dec
pushf
sub
mov
das
imul
dec
or
int
add
push
sub
jmp
inc
into
js
enter
pushf
mov
cwtl
iret
fcmovnb
jle
fisubrl
hlt
in
sub
mov
rcll
clc
jecxz
in
jecxz
pop
mov
outsl
jo
dec
dec
into
push
jae
loope
jl
pop
jae
sahf
jno
loope
daa
push
add
mov
lcall
enter
sbb
rcr
fadds
subl
pushf
int3
out
mov
push
or
lea
mov
mov
xchg
cmp
fcomip
jae
sub
fwait
icebp
stos
ficompl
sub
clc
adc
movb
mov
enter
negb
cltd
push
subl
and
fdivl
inc
fidivl
jl
mov
aaa
mov
stos
push
mov
sar
sub
push
rol
jne
push
pusha
or
lret
push
fisttpl
xchg
imul
push
push
xchg
out
cmpsl
lcall
xchg
dec
repz
xchg
xor
xchg
jle
sarl
cmp
in
mov
mov
shrb
das
mov
imul
dec
push
sar
loop
mov
mov
arpl
int
pop
sarb
push
in
in
xlat
jmp
adc
pop
aas
xor
mov
or
lahf
fisubrl
dec
jecxz
clc
call
or
int
aad
ss
jge
xor
xor
pop
dec
test
outsb
shrb
fcomps
jbe
je
rcl
nop
jae
mov
jecxz
xlat
cld
iret
xor
mov
test
addb
in
or
pop
repz
fidivs
scas
or
sub
and
lods
aad
jl
push
pop
aad
daa
inc
sbb
jnp
mov
pop
sahf
outsb
sbb
push
sarb
out
mov
mov
insb
sub
mov
fs
in
dec
mov
sub
lods
mov
mov
popf
adc
sti
or
jecxz
dec
add
push
and
inc
aam
fildll
dec
jne
cmc
or
dec
pop
xchg
pop
and
pop
frstor
jl
incb
addr16
jecxz
pop
bound
ret
es
pop
insb
test
push
xor
jae
or
cmp
push
es
jge
fnstenv
orl
mov
adc
enter
in
fst
and
icebp
mov
test
mov
ja
fwait
pop
pop
pop
rorb
enter
mov
adc
sahf
sbb
test
sti
and
inc
ffree
push
repz
jne
repnz
fcmovnbe
imul
mov
daa
jg
leave
pop
loope
push
out
dec
ret
jl
ss
cmp
lret
pop
and
xor
ds
movsl
and
xchg
lahf
mov
inc
inc
mov
dec
loopne
sbb
sub
pop
subb
into
pop
ret
sub
aaa
daa
dec
jle
mov
xor
push
jns
sbb
fiaddl
xchg
leave
stc
sub
cmp
add
dec
lret
xor
jg
mov
adc
and
cltd
or
ljmp
gs
adc
add
je
push
xor
mov
inc
sbb
push
xor
mul
stc
ja
ret
fsubs
mov
lcall
popf
rcr
repz
mov
sbb
call
ja
mov
out
or
and
iret
mul
shll
add
mov
sarb
pop
push
out
sub
xor
sub
xchg
ljmp
sub
add
sbb
and
lahf
jge
cli
push
xchg
mov
pop
testb
fidivrs
negl
mov
ret
ret
int3
hlt
aam
and
jnp
inc
push
daa
cli
test
gs
in
sbb
andb
insb
inc
jne
addr16
ret
and
sti
inc
mov
mov
sar
test
sub
xor
dec
adc
ficompl
xorl
dec
push
lods
lcall
inc
rcr
in
ss
stos
out
movsl
sbb
cmp
cmp
pop
mov
mov
inc
outsl
pop
stc
inc
or
add
xchg
dec
cmp
push
xor
mov
imul
push
insb
inc
vandnps
or
mov
pop
lret
jns
add
aad
xchg
cmpsb
les
leave
insl
es
cmpsl
mov
pop
aam
xor
inc
fwait
push
andl
sbb
call
jne
scas
inc
add
or
xchg
sub
mov
add
mov
notl
lret
dec
bound
addl
sub
mov
mov
mov
push
fdivrl
test
mov
mov
push
push
icebp
sbb
fidivl
sbb
and
daa
bound
cmpsb
cmp
pop
enter
xor
gs
adc
mov
int
imul
jnp
mov
adc
xlat
ret
lock
ret
xchg
or
dec
and
into
cmc
mov
sbb
js
aas
adc
jecxz
xor
vpunpcklbw
filds
stos
or
sbb
sub
push
jge
xchg
das
fcoms
xchg
std
push
pusha
popa
xor
sbbb
or
jbe
mov
lods
sbb
mov
leave
in
inc
fcom
sbb
xor
dec
cwtl
push
mov
cs
add
dec
fdivr
sti
mov
jg
inc
lahf
mov
fbld
ds
test
ds
icebp
push
inc
shll
xchg
fwait
mov
pop
fstpt
test
mov
cld
popa
cmpsl
pop
loope
cmpsl
push
test
loop
in
push
sub
shr
mov
or
inc
push
mov
xlat
mov
pop
or
sbb
divl
mov
stos
call
mov
sbb
dec
jne
daa
nop
bsr
aad
xor
loope
sub
shll
test
lea
fcomi
and
or
enter
cli
cs
xchg
aas
mov
sbb
sbb
test
loopne
cmc
sub
add
je
cmp
scas
push
or
pop
mov
shl
fstpt
cmpsl
jmp
push
ss
loope
out
ds
cld
cmc
add
or
mov
sub
push
xor
inc
jno
sub
fidivl
mov
dec
incb
mov
mov
and
jo
inc
adc
in
cmp
fdivs
cmpsb
jge
push
fnstenv
fstp
xchg
adc
mov
icebp
cmp
movntq
out
cmpsl
pop
rolb
pop
cld
mov
push
cmp
addr16
mov
fcmovne
xlat
mov
cmp
add
dec
mov
sbb
hlt
xor
adc
dec
pusha
out
sub
pop
mov
jg
adc
mov
movsb
imul
bound
std
inc
out
xor
pop
push
or
fdivs
push
xchg
sbb
adc
pushf
adc
or
aam
and
das
push
hlt
lods
shll
test
dec
xchg
push
iret
inc
push
xchg
mov
outsb
push
fwait
xchg
and
jnp
incb
int3
rcrl
mov
iret
rclb
ss
mov
cmp
push
cltd
cld
jae
pop
mov
or
and
cld
sbb
add
push
xchg
pop
sbb
fisubrs
mov
pop
mov
or
cld
sub
sahf
dec
popa
in
cmp
and
add
mov
sti
int
loope
mov
repz
aad
and
mov
xor
or
cmp
xchg
xlat
cwtl
dec
adc
push
std
pop
sub
and
pop
jmp
sbb
dec
mov
and
or
out
jbe
ljmp
fcoms
leave
mov
clc
aaa
inc
sub
sbb
in
arpl
in
and
stos
jae
inc
add
jne
or
inc
sbbl
cld
push
test
lretw
shrl
inc
and
lcall
or
mov
insb
imul
repnz
xchg
mov
pop
ret
or
loope
out
ret
orl
jle
xor
mov
jae
mov
mov
clc
aad
repnz
in
mov
jg
sar
jmp
fsub
mov
fiaddl
dec
push
add
cld
fs
icebp
mov
sub
enter
cmp
xor
fiadds
ret
test
mov
shll
data16
mov
leave
inc
jp
cltd
dec
popf
in
sbb
xchg
push
stc
mov
pop
jle
push
stos
cmc
loope
inc
jl
cmp
mov
lcall
daa
inc
jmp
push
pop
sub
insb
push
inc
fs
push
sti
outsb
jae
es
pop
mov
aas
enter
in
loope
testb
sbb
fmuls
sub
sub
sti
inc
sub
mov
sahf
cwtl
push
movsb
mov
fcompl
ljmp
in
and
push
xchg
sbb
push
lret
pop
sbb
addr16
mov
jne
sbb
lea
enter
rorl
ret
sti
insb
sbb
sbb
xchg
pop
xlat
mov
in
inc
push
cmpsb
adc
mov
insb
mov
sub
flds
cmp
sub
push
enter
clc
sbb
and
fdivrl
push
xlat
mov
rdtsc
and
scas
dec
cmp
aas
mov
leave
and
scas
mov
mov
into
sbb
call
or
inc
lods
mov
add
push
and
push
lock
jne
push
outsl
jg
cmp
fnop
cmp
lds
xlat
pop
es
mov
push
test
ss
fcoms
fsubs
out
lods
es
test
mov
jecxz
cmpsb
je
clc
rol
mov
popf
jbe
add
fs
test
mov
movsl
push
cmp
xchg
mov
jne
or
pop
or
inc
mov
inc
push
mov
sub
lods
xchg
cmpl
mov
testb
pushf
aaa
idivb
cmp
mov
lcall
movsl
push
cmp
into
popa
pop
pushf
and
test
fs
mov
stc
lods
std
enter
jmp
rclb
jmp
jmp
xchg
popf
pop
xor
scas
call
loopne
and
mov
pop
or
sbb
loopne
addr16
or
hlt
cmp
cmp
aaa
jecxz
icebp
repz
mov
and
ljmp
pop
mov
mov
jle
xchg
dec
mov
push
cld
dec
pop
leave
pop
adc
mov
add
jae
pop
mov
rol
adc
rol
aaa
fs
mov
cmp
dec
loopne
dec
shrl
shrl
mov
and
js
adc
xor
or
test
loope
or
fildll
jo
and
imul
inc
xchg
ss
xchg
push
or
mov
push
icebp
pusha
lcall
int3
or
add
sbb
adc
movsb
lret
fsubrp
shrb
scas
mov
sarb
mov
xor
aad
sbb
loope
mov
cmp
and
cli
dec
mov
cs
xor
push
stc
mov
xor
cmp
sbb
repnz
dec
dec
fldt
lahf
out
in
sbb
dec
dec
test
in
push
lcall
xchg
sbb
xchg
xor
imul
sbbb
int3
in
jne
test
xchg
mov
jbe
pop
sbb
push
dec
out
jecxz
shll
adc
lret
mov
stc
jl
stos
push
jbe
push
mov
out
dec
xor
cwtl
ret
and
ds
aam
test
push
aaa
sub
pop
aaa
and
pop
xchg
and
adc
cmpsl
in
adc
jge
add
inc
aaa
stos
lcall
mov
int3
sbb
stc
inc
sub
in
and
adc
jmp
xlat
pop
loopne
pop
out
dec
outsl
jmp
and
xchg
xlat
xchg
and
stos
cld
aad
fcompl
rorb
mov
mov
clc
or
mov
push
xor
mov
sub
call
lret
jp
sub
jns
sarl
lret
add
or
xor
vmaxss
push
mov
jmp
inc
ss
cmpsl
push
cmc
loopne
and
test
mov
shrl
xor
xchg
pop
ss
push
jge
push
sbb
mov
sub
sbb
push
stos
cmpsb
movsb
pop
out
xchg
mov
fstpl
test
out
and
or
push
pushf
cmp
xchg
sti
icebp
sub
cld
in
push
push
inc
pop
push
arpl
fsubrl
xorb
roll
mov
and
inc
out
and
addr16
sub
in
cmp
cmp
xor
test
adc
mov
mov
jo
sub
push
pushf
adc
fistpl
mov
loopne
sti
pop
adc
jno
out
aaa
cmp
shll
xchg
daa
arpl
and
sbb
sbb
aaa
xlat
add
cmp
icebp
xor
mov
lods
nop
in
mov
and
call
lods
push
outsb
jae
push
adc
shrl
xchg
les
ds
fnstcw
push
pop
ret
test
lods
or
dec
fwait
jmp
popf
sahf
sbb
and
fucom
or
and
inc
cmc
pop
cmc
ficompl
inc
lds
cwtl
pop
loop
mov
cld
lock
xor
jne
xor
aaa
or
nop
sub
leave
sbb
sub
test
cmp
jmp
sbb
adc
rorl
filds
inc
xlat
xchg
mov
cmp
lock
dec
ja
sbb
call
mov
sbb
add
mov
sbb
out
in
push
jne
xor
std
xchg
inc
push
out
insb
push
pop
cld
popa
or
cmp
jle
adc
mov
out
pop
or
sahf
into
jnp
adc
pop
xchg
popl
test
in
lahf
addr16
gs
out
jle
xchg
popf
mov
inc
fs
imull
cmp
push
pop
arpl
jl
xchg
mov
and
xchg
and
mov
mov
xchg
pop
in
je
inc
shl
dec
fbld
imul
pop
pusha
xchg
jmp
shlb
aam
in
inc
add
adc
push
cmp
jnp
cmp
and
sti
daa
fcompl
jl
aaa
and
or
hlt
lock
sub
push
rorl
imul
insb
dec
out
fucomp
pop
add
fildl
sahf
sbb
imul
xchg
jl
or
jmp
xchg
sbb
dec
add
sahf
imul
lea
xor
stos
rcll
jnp
jns
jns
in
adc
sbb
mov
add
mov
in
pop
xor
data16
mov
int
sti
arpl
xchg
sub
adc
sub
stos
sbb
mov
push
jno
pop
jg
mov
xor
and
imul
int3
jns
out
test
bound
mov
dec
jno
mov
add
jb
adc
popa
dec
enter
dec
int
mov
je
lock
jne
clc
setle
pop
mov
inc
stos
stos
mov
loopne
imul
xchg
mov
xlat
scas
pop
mov
movsl
inc
gs
flds
ret
in
or
inc
xchg
clc
sbb
jnp
and
cmp
lds
adc
aaa
jbe
in
dec
cwtl
js
scas
mov
jecxz
cmp
jne
push
and
push
sbb
fistps
xor
or
stc
mov
mov
lods
inc
sub
popf
mov
cltd
pop
int3
lahf
push
sbb
test
test
cmp
pop
mov
leave
pop
lret
sbb
stos
and
xchg
adc
dec
pop
pop
and
dec
ss
add
mov
sub
push
push
lock
jo
pop
std
sub
lds
mov
jno
push
mov
xorl
add
push
jle
bound
jg
int3
daa
and
xor
sbb
imul
test
sar
or
les
cmp
out
outsl
icebp
adc
jbe
push
cmp
testl
xor
fdivrl
mov
jp
aad
jo
mov
in
stos
movsl
cmp
dec
clc
roll
outsl
cwtl
mov
stos
outsb
jne
out
xchg
jle
pop
cmp
and
pop
sbb
xor
xchg
cmc
push
lea
cli
into
scas
or
adc
sub
pop
gs
sbb
or
aad
je
sub
push
fst
pop
adc
shlb
lea
dec
shl
dec
xchg
cwtl
out
lcall
rep
in
mov
out
xchg
loop
je
ja
inc
push
rorl
xor
pop
scas
add
sbb
cmpsb
mov
stc
adc
nop
push
pushf
mov
push
test
adc
xchg
mov
iret
xorb
int3
jecxz
leave
sub
cmc
and
lods
add
pushf
adc
shll
je
scas
inc
mov
insb
iret
or
dec
stos
or
pop
cli
inc
mov
push
ja
shrl
push
push
ror
jne
rorl
aam
add
nop
pop
push
jno
mov
xor
mov
into
sub
pop
jno
mov
jbe
mov
insl
xchg
inc
popa
xorl
sub
popa
xchg
lret
int
insl
scas
imull
sahf
lds
cmc
popa
xchg
add
sub
repz
negb
jle
sarb
ret
shl
add
xor
cmp
or
sbb
ds
or
adc
mov
jo
enter
adc
jle
fistpl
mov
popf
mov
aam
repnz
and
mov
jno
fiaddl
mov
mov
lret
paddsw
xchg
push
push
mov
inc
adcl
out
adc
clc
xor
xchg
rcrb
stos
or
push
xchg
popa
fucom
jl
jecxz
mov
jmp
dec
stos
cld
inc
loop
push
xor
xchg
mov
push
ss
jecxz
clts
mov
stos
sub
or
nop
fisubl
adc
frstor
mov
mov
cli
push
arpl
or
and
ljmp
mov
push
popf
pop
push
dec
mov
inc
lods
je
rcl
out
lcall
xchg
or
mov
in
es
iret
dec
cmpsl
dec
pop
mov
stos
pop
lcall
inc
push
aas
mov
xchg
fadd
cli
lds
jne
jg
cmp
clc
mov
stc
mov
lds
xor
int
fwait
mov
pop
jle
aam
das
add
bound
mov
fsubl
aad
cmp
push
mov
and
mov
mov
shrb
roll
xchg
pop
orl
lds
mov
test
mov
inc
mov
jo
xchg
or
pushl
sti
loope
ss
mov
lea
push
daa
stos
lods
aaa
push
pop
das
fsubs
test
outsb
inc
or
jae
aaa
rcrb
jne
pusha
mov
fildll
mov
push
jbe
les
push
ss
lahf
cltd
js
sti
cmpsb
cltd
pop
or
clc
sbbl
out
aaa
in
jb
je
je
xchg
add
pop
pop
ja
ja
xchg
stc
sub
xchg
pop
pop
mov
adc
dec
mov
mov
add
out
adc
jl
pop
imul
mov
mov
mov
xor
nop
cwtl
fisubrl
ds
sub
inc
pop
pusha
jnp
in
jno
dec
imul
aas
div
xlat
frstor
or
repz
pop
popa
sub
fldl
xchg
sbb
pop
outsl
inc
stc
adc
fs
jae
cmp
cmp
jle
test
dec
mov
inc
and
js
push
stc
mov
mov
iret
ljmp
sub
shll
sahf
insb
add
mov
aas
and
dec
and
xchg
std
pop
xor
pop
adc
push
add
xchg
push
sbb
mov
add
inc
iret
sub
inc
nop
cmp
push
add
out
mov
xchg
popa
pop
cli
fdivs
icebp
je
enter
sbbb
lods
loopne
in
test
cmc
push
daa
out
lds
rcrl
and
repz
cmp
subb
push
aas
stos
sub
inc
in
cmpsb
or
lret
sub
stos
xchg
sbb
mov
mov
repnz
cs
sub
push
push
xchg
lods
jns
xchg
out
test
xchg
sbb
jnp
pop
push
ds
fsubs
xchg
push
repz
dec
rcr
ret
insl
sbbb
dec
xor
add
jo
jnp
out
movsb
cmpsb
adc
into
jge
jb
inc
lock
push
dec
mov
out
stos
addr16
inc
adc
andb
stos
mov
inc
inc
lods
pop
sar
icebp
inc
and
push
dec
nop
xor
jp
push
fwait
and
popa
push
xlat
or
rolb
das
xchg
push
adc
cltd
jecxz
getsec
test
or
cwtl
dec
out
inc
mov
jge
int3
mov
inc
loopne
mov
dec
in
in
jae
ret
sub
push
mov
mov
repnz
fiadds
in
xchg
ficomps
mov
xchg
and
xlat
push
ss
mov
jno
push
fdiv
les
mov
ja
pop
les
jmp
xor
mov
or
mov
jg
nop
and
xor
push
pop
pop
dec
mov
cmpsl
jp
push
cwtl
and
lret
lcall
cmp
clc
les
cwtl
xchg
dec
shll
dec
mov
mov
aaa
mov
fsts
jge
sub
sub
mov
and
adc
rcll
in
jne
mov
ja
hlt
nop
inc
bound
test
xor
mov
xchg
pop
xchg
xor
jl
and
xor
jb
cs
ret
add
pop
jmp
das
and
jb
icebp
jge
adc
fwait
outsb
in
pusha
fwait
lahf
mov
and
cmp
and
inc
mov
inc
stos
pop
outsb
lret
imul
repnz
push
cmp
and
jns
lret
cmpsb
sub
adc
push
cmpps
mov
scas
dec
lcall
mov
mull
add
js
loop
inc
or
out
popf
cli
lods
cwtl
movsl
mov
jl
sbb
and
add
int
push
jp
add
mov
inc
xor
imul
xchg
xchg
jge
cmp
adc
fwait
imul
mov
lret
sarl
mov
testl
inc
imul
pop
lret
and
pop
repnz
xchg
dec
lcall
sarl
int
push
mov
sbb
xchg
mov
out
inc
jecxz
jg
sbb
aam
roll
push
mov
cmp
in
or
je
mov
fbld
int3
add
je
cmc
cmp
or
movsl
dec
stc
loop
mov
add
pop
cmp
cltd
fiadds
xlat
push
push
mov
loopne
loope
test
mov
and
lret
xlat
pop
lods
jnp
xor
je
push
add
popa
lods
inc
jae
sbb
pop
icebp
aad
cld
lcall
and
mov
jmp
roll
out
mov
pop
es
mov
or
iret
push
or
movsb
mov
stos
cmp
jne
and
push
xchg
dec
lds
inc
cld
in
or
clc
push
mov
adc
ret
divb
mov
bound
les
add
dec
ret
fdivrs
xchg
jl
insl
pop
and
sub
lods
lea
xchg
out
jg
aas
cmp
push
cld
sbb
lahf
sub
adc
test
addb
xchg
fidivl
lea
pop
fisubrs
mov
mov
sbb
push
out
dec
xchg
add
dec
shrl
adc
cld
pop
aas
sub
ffreep
hlt
inc
out
dec
push
mov
ret
jmp
test
fstl
cwtl
mov
push
xchg
imul
sub
mov
and
pop
stos
cmp
movsb
aad
leave
xchg
mov
or
pcmpgtd
mov
nop
rclb
int3
mov
add
aam
dec
imul
sbb
inc
xchg
cmc
lcall
cli
mov
fnsave
bound
dec
sbb
lock
xchg
push
mov
xchg
sarb
add
fwait
lret
popa
lods
push
xor
lea
leave
push
enter
mov
stos
cmpsl
xor
cmpsl
inc
xor
mov
xlat
inc
popa
xlat
shll
pop
add
icebp
lock
mov
lds
mov
pop
xor
stc
sbb
pop
fldenv
dec
cmc
dec
data16
pop
fimull
subl
cwtl
icebp
cwtl
cmp
into
insl
mov
fidivrl
iret
or
push
fidivrl
shlb
div
leave
mov
movsb
xchg
or
xor
inc
sub
sahf
pusha
inc
or
push
ss
cmpsl
cs
rorb
xor
movsb
adc
test
sub
or
lret
stc
loopne
sbb
jecxz
rcrl
shll
and
arpl
ja
cmp
stos
add
or
xor
pop
mov
pusha
into
insl
lcall
clc
sbbb
and
jge
xor
mov
andl
push
iret
call
out
sbb
xor
mov
lea
dec
les
or
mov
sbb
popf
arpl
cmp
lcall
jg
dec
xchg
bnd
mov
andb
push
inc
mov
jecxz
daa
cmpsl
sbb
inc
jo
mov
scas
push
inc
inc
pop
out
add
lods
subl
stc
subl
addr16
rorb
push
fmul
das
mov
ret
rcrl
mov
or
je
pushf
es
push
dec
jp
arpl
adc
movl
inc
add
adc
inc
mov
sbb
std
fsubrl
shl
notb
lods
mov
cmpsl
xorb
add
adc
cld
nop
and
rorb
movsl
cld
popf
pushf
jmp
mov
mov
aam
mov
and
addr16
loopne
call
xchg
lds
out
xorb
ljmp
test
lods
mov
in
push
cld
sti
call
leave
xchg
and
mov
int3
shl
and
cmovp
fildl
lea
sahf
cmp
pop
or
xchg
lods
pusha
movsl
mov
cmp
jle
jg
lods
pop
jl
lods
jns
je
cs
es
cmc
pop
xchg
push
add
test
and
sarl
and
adc
adc
cwtl
jg
cmpsl
loop
cmp
mov
fpatan
lret
cmp
cwtl
scas
jo
in
lock
sub
adc
lock
jg
fidivrs
ja
xor
dec
push
xchg
notl
repz
xor
cwtl
stc
nop
xchg
xchg
fsub
cmp
xchg
cmc
and
mov
push
cli
sub
add
rcl
and
imul
lea
notl
mov
loop
ret
rcrl
imul
pop
sbb
loope
or
aaa
and
mov
mov
xchg
nop
mov
push
repnz
jl
dec
or
andl
adc
mov
and
pop
dec
hlt
pop
je
pop
aas
sub
les
sub
xchg
sub
outsb
lcall
in
mov
mov
cmp
and
cltd
inc
push
jbe
dec
mov
nop
aad
add
shl
test
push
ret
lahf
xor
dec
sub
sub
sbb
jg
pop
mov
adc
mov
mov
repnz
pop
sub
jecxz
or
lcall
adc
outsl
lret
ljmp
cmpsb
inc
inc
mov
pushf
inc
test
hlt
sub
stos
movsl
and
push
jecxz
sbb
lahf
push
xchg
fwait
stc
imul
cmp
push
lahf
add
xchg
inc
adcb
jg
sarb
mov
dec
stc
out
fsubl
inc
push
test
mov
popa
pop
lods
sbb
xchg
cmc
xorb
cmpb
cmp
and
repz
sub
adc
adc
test
pusha
iret
ljmp
sub
fnstenv
mov
mov
hlt
orb
pop
es
cli
push
aaa
out
shrb
leave
adc
push
add
sub
je
cmpsl
pusha
cld
dec
ss
push
cli
xchg
scas
xlat
mov
jmp
push
adc
lds
mov
mov
jmp
cltd
mov
repnz
mov
idivl
in
inc
push
cmc
jg
jnp
jns,pt
cmp
fcmovne
sbb
add
xor
sub
lods
xchg
fsubrp
cli
xchg
les
sbb
clc
push
dec
incl
pop
into
mov
cmp
idivb
xchg
aad
add
rcrb
repnz
jo
sbbl
mov
and
jge
fisttpl
or
les
cmpxchg
in
ret
sbb
sbbl
stc
stc
push
or
jno
arpl
jns
iret
mov
test
mov
mov
xchg
jp
xor
fcoms
sub
pop
pop
sub
xor
add
sti
test
mov
cmp
or
aam
stos
lret
mulb
js
sti
in
int
pop
hlt
das
mov
pop
ljmp
xlat
add
inc
lock
inc
pop
sub
scas
and
clc
xor
pop
mov
dec
rcrl
bound
mov
push
sbb
das
push
gs
fs
push
cmp
aas
jae
push
daa
or
inc
lcall
out
sti
pop
test
push
aas
insl
dec
and
outsl
mov
shlb
in
outsl
lret
rorl
sub
xlat
inc
icebp
jl
mov
test
add
icebp
xchg
cmc
jmp
rolb
jge
dec
lahf
out
rorl
mov
push
lods
hlt
pop
gs
xchg
cmp
shll
aam
xlat
push
outsl
or
xlat
dec
pop
push
call
sbb
lds
setns
imul
adc
scas
lret
stos
xor
pop
lret
out
xor
push
loope
add
inc
pushf
sahf
insl
idivb
pop
push
mov
in
sbb
data16
ljmp
xchg
in
dec
or
bound
add
mov
mov
rolb
dec
dec
pop
cmpsl
aam
push
dec
sbbl
mov
mov
fbstp
inc
jecxz
sahf
sbb
pop
hlt
fadds
mov
pop
cmpsb
mov
je
or
adc
sbb
add
xchg
adc
xchg
dec
hlt
inc
outsl
jae
push
into
je
jbe
sarl
xor
in
enter
jg
pop
push
ret
les
xchg
pusha
fisubrl
or
fistl
xchg
leave
mov
sbb
xchg
pop
sbb
mov
fdecstp
sti
pusha
andl
push
das
push
testb
mov
xor
add
lret
and
lret
pop
int3
dec
jmp
cmp
outsb
jno
sbb
fdivl
lea
push
pusha
out
xchg
lahf
in
cmp
sub
add
ret
inc
mov
enter
mov
jae
sub
jno
std
dec
mov
sbb
adc
shll
cmp
enter
mov
fmulp
sbb
clc
sti
fldenv
rcrl
push
out
and
arpl
inc
nop
cmpsb
adcl
adc
out
xchg
xlat
cmp
mov
jmp
and
or
jbe
insl
jne
pop
push
or
mov
arpl
into
push
and
cmpsl
popf
or
mov
sub
lcall
mov
insb
lea
jge
inc
mov
in
or
xchg
push
out
mov
mov
mov
dec
jle
mov
mov
jge
jae
popa
add
xor
shlb
int3
mov
sbb
lret
push
mov
rorl
loop
sti
shll
aam
clc
push
sbb
pop
xlat
sti
call
aad
icebp
xor
dec
jno
dec
cs
aam
popf
xor
and
call
iret
mov
sbb
mov
mov
mov
lock
xlat
xchg
add
inc
movsb
stos
xor
dec
adc
mov
outsb
aaa
and
mov
mov
addr16
sub
loop
clc
mov
andb
arpl
lea
test
and
xchg
gs
mov
push
jae
shll
push
aas
mov
sub
outsl
popf
arpl
add
inc
add
cmpsb
dec
ss
lods
and
adc
pop
flds
sbb
mov
testb
xorl
aam
dec
cltd
rclb
popa
add
notl
fsubp
mov
or
jge
ret
movsb
mov
cmpb
imul
jecxz
jne
in
imul
jno
xchg
fs
aas
jmp
cld
mov
out
bound
sbb
mov
or
pop
xchg
out
in
cmp
mov
aam
xchg
add
mov
adc
sbb
inc
add
stos
adc
cmp
ficoml
cltd
int3
pop
sbb
xchg
pop
add
jnp
push
push
xor
sub
push
jne
cmp
push
push
aas
add
data16
icebp
orb
inc
mov
outsb
mov
adc
repz
stos
es
adc
xchg
aam
adc
loope
mov
push
arpl
mov
nop
les
and
add
push
inc
rclb
jp
inc
dec
fcompl
lods
je
cmpsb
pop
pop
pop
call
shll
push
out
cmp
notb
hlt
or
adc
clc
mov
and
adc
gs
mov
push
iret
sub
stos
int3
xchg
mov
das
sbb
jmp
lret
xor
cld
sbb
xchg
add
loope
js
adc
mov
into
jo
xchg
scas
mov
gs
mov
dec
mov
lock
rolb
sub
jns
sub
pop
push
mov
jle
inc
fcoml
sbb
js
and
sub
cmp
cwtl
sbb
and
inc
xchg
inc
cmpb
push
dec
xchg
cmp
xchg
mov
es
add
sub
pop
iret
fs
lock
int3
orb
pop
xor
arpl
mov
sub
add
shll
imul
mov
sub
ficoml
push
inc
cld
jnp
loope
mov
cmp
sbb
pop
push
sub
jno
icebp
repz
mov
push
push
jl
sahf
pop
pop
pop
loop
cltd
mov
dec
mov
inc
shr
lea
mov
es
cltd
mov
sub
adc
fwait
push
mov
push
or
push
orb
int
lahf
and
movsb
cld
test
loopne
lea
fistpll
mov
inc
fistpll
cmpsb
jbe
repnz
pop
clc
sbb
sar
xchg
push
xchg
cmp
test
mov
or
loop
and
adcl
or
test
dec
and
jge
addl
inc
and
mov
pop
jge
lret
mov
or
pop
shlb
int
sub
je
sbb
jb
call
pop
xchg
aaa
leave
loop
rclb
and
jbe
loop
xor
jp
inc
cmp
fwait
mov
adc
insb
lea
push
mov
mov
push
jle
setnp
push
push
jb
hlt
sub
or
cmpsb
xor
outsl
and
insb
jns
fiadds
xor
gs
orb
dec
subb
mov
ret
repz
mov
mov
push
jo
inc
aad
jle
lock
roll
sub
call
mov
push
leave
and
and
fisubl
inc
jecxz
movsb
mov
es
cmp
jb
inc
adc
and
cmpsb
jp
push
xchg
imulb
jle
mov
xchg
stc
jbe
jp
icebp
outsl
loop
imul
add
jecxz
mov
pop
mov
pop
dec
push
pop
sarb
insl
repnz
xlat
cmp
jle
sub
loope
push
rol
sbb
mov
in
mov
and
inc
out
cmp
outsb
lret
imul
add
adc
icebp
mov
test
mov
push
mov
not
frstor
mov
repz
idivl
aaa
sbb
dec
addr16
add
xor
int3
std
out
dec
insb
jl
pop
pop
lds
mov
clc
jg
out
inc
mov
add
jnp
sub
cmp
push
pop
add
test
xchg
lea
dec
mov
jecxz
ljmp
mov
add
cmp
fcomip
xchg
adc
pop
out
repz
ljmp
jecxz
cmp
mov
mov
cmp
test
push
pop
pop
push
lret
mov
adc
add
dec
cli
inc
ljmp
inc
out
xchg
mov
add
push
daa
in
dec
mov
add
stos
sub
popa
jge
stos
imul
or
jbe
rolb
and
jae
add
loope
iret
and
jae
mov
adc
aaa
fdivrl
imul
insb
dec
push
add
mov
inc
outsb
cli
popf
hlt
xchg
push
dec
mov
jbe
cmpsl
lds
ja
test
jl
sub
xchg
jmp
das
inc
ljmp
jecxz
repnz
inc
test
je
inc
ds
pop
lock
mov
mov
sbb
test
mov
cmpsb
push
add
mov
add
out
sbb
xor
sbb
lret
fstps
leave
dec
push
insl
shlb
or
dec
sub
sub
dec
cmpsb
pop
add
outsl
sti
movsl
xchg
scas
cli
and
sbb
daa
loope
cmp
cmpsl
sbb
cmp
fisubrl
inc
cmp
push
icebp
inc
shll
addr16
cld
push
scas
xchg
xchg
cmpsl
insb
aaa
pop
into
and
mov
fs
pop
inc
lea
popa
stos
ret
push
adcl
gs
ss
push
loopne
push
fs
iret
int3
clc
mov
js
add
mull
ds
in
loope
xchg
rcl
mov
push
lods
jecxz
jl
inc
lahf
add
lcall
lds
outsb
mov
in
rorb
iret
rol
out
test
jge
mov
outsl
add
push
xchg
idivb
insl
in
sbb
lock
test
dec
cmpsl
js
adc
addb
or
push
xor
xchg
popa
lock
arpl
sbb
xchg
fs
inc
cwtl
fcoms
ret
mov
and
pop
je
jp
inc
mov
inc
movsb
gs
loop
and
push
pushf
test
sub
enter
pop
in
test
pusha
shll
loope
add
xchg
xor
stos
adc
xchg
and
mulb
test
in
test
cmovo
mov
push
mov
mov
push
jg
push
imul
lret
adc
fs
in
push
dec
jae
cwtl
jo
jp
repnz
push
and
inc
lock
idivl
sahf
add
ds
out
fnstenv
mov
call
or
pop
push
cmp
cmp
dec
test
xorl
les
loopne
popa
inc
mov
cli
mov
mov
mov
add
or
inc
pop
subl
das
lahf
jo
inc
jge
xor
or
enter
sti
lea
pop
mov
mov
add
sub
clc
aad
lods
pop
lahf
popf
lods
cmc
jae
cld
into
fstl
mov
jne
push
outsb
adc
jmp
andl
lods
out
mov
mov
pop
aaa
icebp
and
cs
scas
xor
mov
jo
cmp
es
loopne
xor
jno
add
add
arpl
mov
sub
fstl
xor
aaa
iret
mov
mov
ret
pop
dec
adc
jnp
push
jge
pop
mov
jo
or
lods
jns
out
lret
jae
in
loope
mov
dec
mov
xchg
divl
pop
push
shll
sti
int
daa
inc
jno
in
push
in
push
and
loope
stos
sbb
cmp
arpl
mov
mov
scas
ret
data16
xchg
out
loopne
dec
adc
int
int
or
stos
cmp
ja
rcll
xor
xchg
insl
shlb
clc
jne
push
sub
inc
mov
sarb
repnz
fldln2
data16
cmp
xor
bound
push
jb
mov
mov
inc
iret
mov
mov
fnstenv
mov
lcall
ficompl
or
je
jae
leave
xor
out
xchg
das
mov
add
push
lret
out
test
in
sub
pop
popa
sub
dec
iret
into
cmc
sbb
fwait
mov
test
inc
icebp
mov
arpl
adc
add
jnp
mov
dec
xor
in
dec
adc
pop
mov
sub
and
push
repnz
pop
mov
mov
jb
hlt
xchg
subb
and
fidivrl
enter
mov
pop
outsl
pop
xchg
mov
mov
stos
stos
or
inc
pop
xor
popf
shlb
imul
mov
packsswb
roll
lock
xor
enter
ret
sub
pop
push
icebp
leave
adc
cwtl
mov
out
add
lock
and
mov
mov
push
push
jne
jle
sbb
mov
sarb
jns
shrb
jp
mov
outsl
push
jecxz
scas
and
push
addr16
lods
sbb
out
js
enter
dec
mov
push
shlb
cmpb
repnz
fldcw
mov
cmp
push
jge
cld
mov
lods
sub
cmp
movsl
jae
push
dec
ss
lock
xchg
lcall
popf
inc
mov
jmp
push
push
in
jb
scas
fnstenv
hlt
inc
ret
aam
imul
je
faddp
sbb
pusha
cmp
sub
sub
add
ret
gs
ret
js
cld
mov
cltd
adc
or
shlb
add
or
insb
add
dec
xchg
push
pop
fidivs
lea
fsubr
fwait
or
xor
mov
add
ljmp
push
push
xor
pop
decl
sbb
push
js
push
imul
and
sbb
jp
aas
jl
push
ss
inc
shlb
sbb
mov
mov
pop
sti
cmp
fsubl
sbb
repnz
jp
cs
mov
or
ljmp
push
and
mov
cs
inc
jne
sub
xchg
sbb
or
adc
or
or
call
data16
repz
xor
or
rorl
repz
sub
push
sbb
mov
insb
pop
addr16
ret
cwtl
mov
cmp
mov
clc
push
test
andb
addr16
out
pop
inc
jecxz
dec
lods
mov
cmp
imul
sarl
xchg
scas
imul
divb
lcall
shl
push
xchg
mov
imul
push
cmp
loopne
data16
in
fnstcw
sbb
addr16
sub
lret
bound
or
xchg
outsl
movb
pushl
fld
iret
inc
sub
scas
cmp
or
inc
iret
pop
iret
cmp
jmp
shlb
jno
gs
pusha
cmp
jge
mov
mov
aam
adc
in
pusha
cwtl
jb
stos
add
adc
divl
outsl
jecxz
mov
mov
cmpsb
jmp
mov
lods
addr16
add
negb
ss
jge
inc
mov
out
and
mov
popa
jecxz
xor
cwtl
xchg
repnz
fildll
cwtl
scas
movsl
pop
xor
fdivp
sub
hlt
insb
enter
icebp
in
shlb
data16
test
popa
mov
in
jb
add
xchg
or
xchg
imul
adc
lock
dec
std
lahf
mov
daa
mov
call
and
lret
lcall
mov
xchg
xchg
sbb
popf
mov
mov
adcb
dec
pop
mov
jne
and
mov
sub
sub
mov
mov
cltd
cld
mov
enter
sub
pop
jge
mov
cmp
js
adc
mov
and
stos
jmp
mov
lret
mov
mov
pop
dec
pop
lahf
pop
xchg
into
cli
pop
adc
mov
cmpb
cmp
dec
cltd
daa
mov
hlt
pushf
cli
les
rorb
push
scas
arpl
aas
jbe
shll
fmul
jbe
popf
out
xlat
in
adc
into
cltd
sub
loop
pusha
push
xor
enter
daa
inc
fcmovnb
and
call
push
and
sti
jl
xchg
cmp
lods
xchg
ds
mov
shlb
inc
hlt
loop
repnz
pop
push
dec
jg
ss
jne
pop
jno
fs
pop
ss
faddp
lret
jmp
cli
mov
sub
cmp
pop
push
std
je
xor
cmc
push
in
scas
cmp
xchg
repnz
xchg
sbb
dec
cmpsb
out
les
cmp
mov
adc
cmp
pusha
mov
stos
outsl
xchg
mov
sbb
dec
hlt
stos
jno
mov
pusha
xor
imul
out
addb
sbb
int3
push
jnp
adc
das
jge
inc
int3
jns
data16
adc
mov
pop
gs
insb
push
sarl
xchg
add
and
push
enter
mov
int3
xor
rcr
cmp
add
aad
cli
xchg
inc
cmpsl
pop
jno
push
lcall
orb
cld
prefetchw
or
lret
sub
in
leave
inc
in
jecxz
lret
adcl
pop
mov
lods
xchg
sahf
pop
sub
pushf
hlt
int
popa
mov
insb
cwtl
mov
push
pop
dec
cmp
shll
es
orb
cld
cmp
xor
adc
cmpsl
in
cltd
mov
dec
jae
dec
lds
jne
xor
fadd
jns
xchg
sub
test
push
out
and
dec
shl
movsb
fs
js
sub
insb
outsb
out
xlat
jno
pop
and
mov
pusha
lret
scas
leave
sarl
inc
pusha
push
or
movsb
leave
stos
pop
inc
sbb
ds
push
ror
mov
out
je
out
xchg
push
lock
xchg
xchg
stc
jnp
aaa
adc
cmp
jmp
lcall
ret
push
popf
sub
dec
push
mov
ds
xchg
bound
subl
mov
fs
into
add
popf
outsb
mov
gs
jge
jge
in
dec
jle
ds
outsb
mov
lret
ljmp
mov
mov
sarl
cmp
std
sub
lds
jmp
into
push
or
cwtl
icebp
sbb
adc
movsl
cmpsl
test
dec
xchg
clc
testb
dec
or
rcrl
inc
aas
aad
pop
std
lea
lods
pop
imul
lods
xchg
and
mov
sub
sahf
mov
cmp
sbb
lret
xor
sbb
xchg
adc
and
push
xor
push
ret
aas
mov
adc
adc
sar
add
iret
push
fldenv
inc
adc
mov
adc
cmp
mov
push
push
inc
stos
jp
pop
into
mov
jno
cmp
pop
insl
fidivl
add
inc
imul
xchg
push
je
inc
jge
fbstp
out
pop
stos
iret
cmpsb
and
lea
cmp
dec
aas
mov
icebp
cmpsb
or
mov
pusha
and
add
fwait
push
sbb
push
and
repz
pop
dec
cltd
es
fists
jecxz
mov
rep
scas
push
movsl
xchg
shr
into
mov
inc
inc
dec
lods
mov
insl
clc
cmpsb
popa
mov
xchg
mov
into
cmp
idivb
mov
ret
xchg
test
cltd
cmc
adc
das
dec
pop
add
cltd
loope
pop
jl
cmp
jp
in
imulb
inc
sub
in
cmp
fcoml
inc
sbb
fisubrl
movsb
rcrl
and
nop
pop
out
mov
loopne
idivb
mov
push
ljmp
cmc
aad
mov
push
cmp
jle
int
push
dec
fildl
das
rcll
adc
and
das
adcb
mov
inc
inc
repnz
push
cmp
or
rorb
jge
dec
lea
and
inc
stos
mov
je
cltd
hlt
jo
or
das
inc
or
cmp
xchg
sub
xor
mov
test
cmp
jae
inc
aam
test
cmc
das
call
addb
cmpsl
aas
xchg
pop
dec
out
mov
outsb
sahf
add
sbb
daa
rorl
adc
xchg
imul
cmp
loop
pop
jecxz
aaa
mov
adc
dec
fs
ds
sbb
cmc
mov
dec
pop
xchg
bound
test
pop
add
js
push
call
popf
add
cmc
push
jb
inc
add
pop
mov
sbb
sti
jecxz
mov
cwtl
xor
hlt
stos
fwait
pushf
sarl
or
push
test
pop
fs
mov
insb
xor
adc
jg
inc
enter
mov
iret
cmova
movsl
dec
inc
outsb
jl
mov
popf
rclb
mov
mov
inc
xchg
lret
in
shlb
and
push
add
mov
in
xor
negb
popf
cltd
imul
cmp
mov
lcall
int
test
push
dec
das
adc
pcmpeqw
rcr
insb
fwait
scas
testb
pop
xchg
js
dec
cmp
push
add
mov
aaa
sarl
xchg
sub
mov
mov
in
pusha
push
aaa
mov
pop
aad
imul
lods
sbb
push
mov
dec
and
jmp
icebp
jl
daa
sub
mov
mov
cwtl
mov
push
add
faddl
pop
mov
push
mov
jg
iret
adc
and
cs
pusha
cmpsb
cltd
test
jbe
jge
xchg
loopne
leave
cwtl
mov
xchg
out
sahf
orl
sbb
pop
cmp
dec
ret
sti
pop
jp
movsb
xchg
std
mov
mov
or
jns
fcompl
data16
xchg
lock
loopne
dec
cwtl
sbb
inc
inc
popf
daa
cmpsl
and
pop
dec
andb
popf
pushl
pop
sarb
adc
sub
xchg
mov
es
pop
xor
push
jecxz
stos
loopne
add
jecxz
popa
mov
mov
push
xchg
in
push
push
sti
cmpsl
and
test
imul
movsb
sbb
pop
aam
pop
add
mov
rolb
je
dec
repz
cltd
clc
movsl
add
es
adc
stos
pop
push
imul
clc
adc
in
lcall
mov
mov
test
out
mov
mov
fcoms
sbb
mov
ror
mov
push
dec
add
cwtl
push
fstpt
pop
notb
xchg
jmp
jge
jae
aad
sub
mov
stos
mov
lds
inc
movsl
sbb
xor
pop
sti
inc
cmpsl
insl
dec
mov
or
pop
xor
divl
sub
cmc
inc
outsb
inc
push
sub
jne
xlat
mov
lret
rcrb
imul
mov
and
or
in
jne
push
mov
mov
or
dec
test
push
dec
imul
mov
es
adc
mov
test
scas
jecxz
rorb
add
pop
test
int3
adcl
adc
frstor
lret
inc
jbe
jne
sbb
sar
adc
mov
cltd
aam
xor
nop
xor
cmp
stos
xchg
jo
sub
lods
ret
dec
fdivrs
dec
sar
movsb
xchg
test
xchg
call
xor
loope
pop
in
xchg
aaa
in
fistpll
jns
sahf
adc
pusha
rorb
and
xchg
in
insb
scas
push
aaa
dec
rcrb
xchg
std
pop
mov
jbe
call
fbld
jp
jnp
adc
jp
imul
movsb
arpl
jmp
cmc
movsl
mov
jg
rep
lods
cmpsl
sub
pushf
mov
mov
ljmp
xchg
mov
inc
mov
mov
shll
mov
repz
insb
in
sbb
mov
jl
js
push
shlb
scas
frstor
icebp
cwtl
popf
lcall
push
cmpsb
mov
sub
pop
mov
cmp
jns
pop
ljmp
inc
mov
fidivl
mov
jnp
push
inc
push
add
outsb
and
test
in
pop
decb
imul
in
pop
mov
mov
sbb
jno
push
lahf
cmp
cmpb
out
lcall
adc
dec
and
push
push
pusha
pop
or
pop
daa
mov
adc
cltd
jne
mov
mov
pop
cs
push
test
cmp
into
sub
pushl
push
sbb
push
clc
ja
adc
movsl
push
insl
push
pop
push
and
cmp
sub
scas
lea
out
data16
inc
adc
test
pop
push
out
mov
enter
popf
out
jp
sbb
jecxz
pop
push
cmp
mov
jb
es
cmp
les
ds
loopne
rcll
sub
gs
xor
stos
nop
pop
add
mov
mov
jecxz
mov
pop
add
mov
stc
cmp
pop
push
sub
insb
popf
mov
fcmovbe
jg
fcomps
sbb
hlt
cmp
push
call
daa
inc
mov
or
int
xor
fdivs
aas
cmpsb
repnz
adc
test
xor
fisttpll
adc
xor
outsl
mov
stc
and
jmp
jbe
popa
les
inc
ret
inc
mov
fimuls
lret
cmp
lock
js
add
cmp
cmpsb
cld
repz
lret
fildll
lahf
fucomp
shll
shll
mov
insb
push
dec
aas
add
jbe
jge
mov
sub
movswl
mov
mov
adc
fidivrl
jne
add
push
mov
jl
in
inc
and
lods
lahf
clc
fdivrl
sub
popa
cmpsb
or
sbb
clc
ficoml
sbb
jno
push
cpuid
cmp
out
mov
xlat
xchg
pusha
cmp
dec
imul
jmp
je
nop
add
mov
cmp
push
inc
push
xchg
mov
xor
pop
mov
jnp
mov
xor
out
nop
ja
sbb
jmp
xlat
push
dec
jnp
sarl
or
clc
stc
cltd
je
adc
fucomi
push
pop
pushf
xadd
shll
push
mov
cs
add
sub
lret
mov
cmp
or
and
movb
mov
hlt
shrb
repnz
movsb
scas
out
pop
sub
mov
mov
jns
leave
sub
sbb
push
adc
inc
ljmp
lds
fdivl
insb
fsts
mov
outsl
sar
stos
ret
and
push
pop
lea
in
xchg
adc
jbe
test
jecxz
push
test
mov
mov
xor
test
pop
xchg
jbe
stc
push
adc
sub
pop
sub
xlat
mov
push
movsl
xor
rcrb
pusha
cmp
cmp
in
vcvtpd2dqy
push
adc
xor
lods
pop
iret
test
mov
add
sub
fisttpl
test
fcompl
pushf
jecxz
int3
icebp
xlat
cli
jmp
iret
adc
fsts
xor
sarb
cld
jne
sub
int
add
jg
sub
ljmp
sbb
xchg
dec
and
lret
out
bound
mov
ds
pop
fstps
jle
pop
jg
xor
loopne
cmp
insl
int
lea
orl
xor
popf
pop
xchg
rdtsc
push
loop
dec
clc
inc
popf
mov
insl
cmp
roll
mov
lods
lds
adc
mov
ss
adc
lds
scas
int3
in
or
jge
mov
repz
outsb
xchg
mov
or
cld
or
stos
xor
xchg
popa
lods
dec
sub
fdivrl
movsb
out
pop
imul
div
sbb
dec
call
mov
push
pop
pop
pop
ja
cmpsb
xor
rcll
aas
adc
dec
mov
out
fmuls
in
aas
insb
xor
and
mov
in
mov
leave
adc
jmp
jle
test
mov
inc
push
jp
pop
jp
push
js
outsb
inc
push
mov
pusha
popf
mov
and
aad
rcl
leave
push
or
xor
sbb
out
push
pop
stos
xchg
outsl
not
inc
push
fldt
sbb
push
sbb
sahf
ss
adc
mov
xor
mov
add
stos
xchg
cmp
push
mov
addb
mov
xchg
sub
movsl
mov
das
std
ret
mov
and
or
andb
dec
aas
sbb
push
pop
test
jp
dec
sub
repnz
sti
cmp
stos
es
mov
push
mov
pop
xchg
and
push
pop
arpl
std
in
push
sahf
aaa
mov
stos
add
mov
inc
cmp
sub
stc
mov
pop
clc
add
push
divl
mov
enter
add
aad
xor
lret
shl
cli
xor
lret
fcmovnbe
add
jno
push
fidivrl
jno
addr16
outsb
xlat
xor
xor
pop
mov
push
mov
adc
cwtl
je
cmpsl
imull
or
mov
repnz
inc
adc
sub
shlw
and
test
jg
lods
sbbb
adc
push
push
in
jmp
subb
and
jmp
xchg
xchg
pop
in
mov
xor
push
nop
jge
lret
push
and
data16
popf
jne
xor
mov
mov
incb
xchg
jmp
sar
adc
shll
sub
mov
out
push
arpl
push
mov
mov
nop
lock
insl
sbb
fs
mov
ds
dec
jno
pop
loope
bound
mov
inc
lds
in
sti
pop
shrl
ljmp
incb
mov
lds
pop
mov
or
fldl
inc
cmc
jmp
and
push
sarl
mov
incb
mov
or
movsl
mov
mov
sub
jg
jle
cmp
test
sbb
push
subl
pop
jle
xor
shrl
push
fstpl
fs
jle
jnp
mov
bound
fiadds
lds
cmp
sub
fsubs
or
mov
mov
pop
sbb
out
and
sti
pop
mov
xor
divb
dec
push
bound
pop
enter
cmp
or
mov
xor
push
fcom
cmp
xlat
arpl
arpl
jno
es
popa
sub
inc
fst
cmp
insl
inc
mov
out
enter
fimuls
pop
daa
sub
scas
into
enter
pop
outsb
pop
div
test
add
roll
out
or
mov
stc
subl
push
shr
jo
aas
mov
fidivs
add
dec
test
xchg
xor
and
jge
xor
scas
add
mov
mov
push
cmp
cmp
mov
mov
jbe
jge
mov
aas
jge
dec
lods
sbb
adc
callw
or
sub
and
into
mov
mov
mov
dec
sub
sbb
lret
mov
lahf
and
xchg
cli
or
sbb
loop
xchg
repz
dec
sarl
out
sbb
jl
mov
aaa
cmp
mov
cmpsb
inc
pop
pop
xchg
xchg
adc
test
push
aad
pop
xchg
xchg
sbb
data16
stos
insl
adc
sub
mov
inc
fisttpl
insl
aam
push
je
imul
subl
mov
movsl
movl
cmp
xor
jno
cmpsb
in
xor
enter
idivb
sbb
or
inc
fsubs
jmp
sbb
cmc
adc
cmp
adc
sub
inc
int3
add
jp
pop
fadds
ss
xlat
int
xor
aas
xchg
insl
int3
push
lret
test
push
rorl
ss
sbb
mulb
aas
add
mov
std
out
or
insl
xchg
sar
mov
subb
jbe
mov
lods
adc
xchg
nop
es
and
ja
popa
pop
stos
cli
xchg
add
loop
jge
push
jb
mov
push
xchg
cmp
aaa
xor
lods
pop
xchg
inc
aaa
aas
push
insb
mov
lods
mov
xor
in
jp
jns
int3
lahf
xchg
dec
jmp
cmp
and
adc
je
mov
outsb
add
push
or
mov
adc
rep
fbstp
adc
cwtl
mov
lahf
add
lahf
dec
lock
push
cs
sbb
inc
popa
movsb
xchg
lcall
aaa
mov
sbb
pop
mov
push
cmp
mov
stos
jge
arpl
movsl
adc
sbb
test
pop
ss
movsb
sbb
jne
adc
ljmp
or
lret
out
xor
jg
sbb
rcr
cs
movb
sbb
sub
inc
lds
sub
jmp
or
gs
xor
outsl
cmpsl
adc
int
or
mov
mov
xchg
hlt
cwtl
fidivrl
scas
pop
add
and
lds
xor
mov
jecxz
jg
mov
lods
jl
dec
rclb
pop
inc
mov
or
cmp
push
ds
push
adc
pop
xor
ljmp
cmc
lahf
imul
inc
push
sub
add
hlt
mov
movsl
imul
ret
and
cmp
xchg
adc
inc
scas
cmc
cmp
push
aaa
call
inc
ds
push
inc
inc
hlt
mov
les
ror
pop
pop
sub
mov
and
shll
scas
xor
mov
pop
inc
into
lock
fstpl
in
jp
sub
xor
movsb
mov
adc
cmpb
in
mov
lcall
rcrb
jno
jmp
js
rorl
sbb
xor
push
sub
orb
cltd
inc
sub
outsl
aas
fnstcw
cmp
adcl
repnz
insl
and
loop
movsl
outsb
aaa
xor
fcoml
pop
loopne
jbe
pop
add
bound
ljmp
jl
push
leave
call
lret
stc
call
flds
jbe
pop
hlt
cmp
jp
icebp
mov
data16
fists
and
pop
mov
and
ss
pop
das
rorb
aaa
testl
jmp
xchg
xchg
loope
popa
sub
xchg
hlt
cmp
jp
outsb
in
push
movsb
repz
out
sbb
jecxz
mov
jge
sub
dec
jecxz
subl
out
adc
adc
les
mov
insl
xchg
incl
push
push
sbb
js
push
jmp
inc
test
push
fwait
in
cld
add
bound
imul
mov
pop
xchg
dec
xchg
cmp
out
das
xchg
xchg
mov
mov
cwtl
je
push
sub
lcall
inc
and
jne
pop
mov
fildl
jmp
lock
inc
sbb
scas
fdivs
pop
dec
adc
adc
scas
jmp
pop
jmp
ss
or
leave
cmpsl
je
jl
enter
clc
add
mov
scas
scas
mov
test
sbb
pop
sub
push
dec
sub
and
lods
subb
out
inc
pop
rcll
ljmp
cmp
jle
xor
lcall
hlt
cmp
inc
scas
jecxz
sub
mov
mov
call
cmc
push
incb
imul
daa
jp
jmp
sub
sbb
out
cwtl
fsubl
fnstenv
stc
stc
sti
dec
add
adcb
mov
sub
in
mov
adc
xchg
mov
mov
shll
mov
out
out
movl
mov
cmp
fisubs
repnz
shll
pop
mov
std
out
add
inc
outsl
push
push
mov
mov
push
sti
loope
stos
adc
xlat
mov
rolb
pop
mov
cmp
ja
cwtl
mov
inc
pop
imulb
push
jl
call
push
adc
test
sbb
lret
jl
mov
jns
push
hlt
xor
and
popf
cmpb
xchg
or
lret
shll
mov
fimuls
inc
jp
mov
enter
sbb
pop
cmc
cmp
cltd
int
dec
es
mov
mov
adc
xchg
movsl
lret
scas
mov
cmp
mov
out
mov
ss
ljmp
dec
mov
cmp
fstpt
mov
pop
cmc
repnz
insl
sbb
cli
push
pop
add
dec
out
xchg
jmp
sarl
in
shll
outsb
outsb
insb
pop
test
subl
push
xchg
push
dec
add
jb
std
jnp
and
pusha
notb
pop
add
shrb
mov
xlat
daa
pop
push
sub
aaa
lds
fmul
nop
cli
add
push
call
xchg
into
mov
clc
mov
xchg
mov
scas
jbe
stc
lea
jge
nop
xor
es
pop
mov
push
xchg
sbb
movsb
cs
cwtl
push
dec
fninit
push
mov
pop
mov
aaa
add
iret
adc
in
rcr
sub
push
dec
aaa
adc
scas
lods
mov
or
pop
push
lcall
sbb
outsb
aas
lret
jns
push
jge
js
test
imul
push
jbe
data16
sub
rcrb
pop
subl
pusha
enter
clc
icebp
or
jge
incl
push
pop
push
ss
in
jp
in
add
js
and
pop
inc
movb
insl
fisttpll
fstpt
mov
push
push
dec
push
mov
outsb
movsb
inc
adcl
dec
xchg
fyl2x
mov
sbb
pusha
mov
sti
lods
mov
cmpsb
inc
push
inc
add
and
mov
mov
mov
js
into
inc
push
pop
shl
fwait
cltd
loope
scas
xlat
imul
cmp
jl
dec
inc
xchg
pop
mov
cli
mov
sub
popa
xor
adc
jo
sub
mov
sti
movsb
jl
jl
adc
imul
ret
stos
cltd
inc
add
movsl
clc
inc
inc
add
xchg
jl
mov
sbb
loopne
icebp
repz
and
xor
cmp
imull
mov
xor
test
test
mov
or
mov
incb
inc
inc
dec
lods
lcall
mov
mov
mov
jbe
xchg
xchg
addr16
insl
insb
push
ja
and
sti
lds
sub
stos
std
loopne
and
xchg
fdivrs
cmp
lcall
and
hlt
pinsrw
adc
fisubl
inc
pop
and
pop
sbb
dec
in
cmp
int
xlat
xor
mov
jno
push
push
jne
dec
inc
adc
sbb
loopne
push
pop
dec
gs
adc
and
fucompp
nop
lret
add
movsb
mov
fidivrl
or
testl
int
mov
gs
cmpsb
dec
fcmove
aas
outsb
in
cli
test
mov
jecxz
aam
lret
mov
popl
adc
push
rolb
xor
mov
adcl
jnp
rolb
xchg
push
mov
enter
pop
sbb
mov
test
imul
das
pop
incl
push
add
jge
dec
cmpsb
icebp
sub
repnz
les
add
pop
xor
aam
call
enter
or
rcr
and
push
cmpsl
je
nop
insl
ja
out
xchg
inc
mov
adc
ud2
mov
leave
aas
sub
dec
xchg
dec
insb
scas
push
imul
adc
outsb
add
test
aaa
sub
inc
rcll
cmpb
sar
inc
inc
add
cmc
movsb
pop
mov
xchg
hlt
cli
push
testl
sub
lods
inc
xchg
push
mov
or
xor
or
out
jbe
pusha
outsb
out
sub
test
vmwrite
out
stos
mov
cmc
inc
inc
ret
stos
popa
mov
adc
paddq
out
mov
push
inc
pushf
sbb
push
es
push
repnz
stos
cmp
test
cmp
dec
and
and
cmp
push
push
aaa
sbb
and
jo
int
sub
jcxz
dec
pop
xchg
mov
xor
pushf
lods
rorl
bound
jbe
mov
pop
inc
push
dec
adc
outsb
das
dec
or
cli
enter
sub
jne
push
adc
in
cmc
jo
iret
mov
mov
or
mov
loopne
push
jmp
mov
ret
out
stos
vpaddusw
add
lea
mov
add
xchg
inc
fnstcw
cmp
daa
fiadds
insb
aam
out
pop
mov
call
lds
daa
stos
daa
mov
test
adc
sub
and
dec
insb
int3
stos
mov
add
outsl
inc
add
cltd
xor
stos
sbb
adc
int
push
js
jb
ds
test
sub
cmpsl
inc
jb
jecxz
in
push
sbb
mov
test
mov
sbb
push
dec
push
and
cwtl
test
xchg
pushf
popf
ds
je
xchg
dec
cmp
push
lea
imul
jnp
xor
sbb
dec
shrl
cmpsb
sti
es
jnp
aad
push
push
test
sub
push
pop
or
test
ret
xchg
shl
bound
fidivrs
push
pusha
cmp
iret
mov
xchg
test
push
add
mov
in
add
jb
jmp
jb
aad
shrb
add
and
adc
icebp
scas
lock
mov
in
outsb
fnstcw
nop
dec
je
sti
aaa
popa
mov
push
adc
icebp
xchg
popf
sbb
jecxz
jne
test
insl
leave
js
rcl
aad
dec
mov
mov
cmpsl
loope
shlb
dec
add
scas
add
push
jmp
testb
mov
sub
into
scas
jecxz
jecxz
shlb
push
rcl
or
fs
clc
pop
lock
cld
out
fsubs
push
in
mov
ss
lahf
enter
mov
loop
jecxz
cld
push
lret
cmp
adc
xlat
adc
cltd
std
sbb
or
add
dec
loope
push
daa
dec
xor
rol
cli
push
sub
mov
fwait
rorb
pop
stos
inc
sub
and
pop
in
add
jno
outsl
jae
cmpsb
imul
xchg
in
ret
add
sub
adc
inc
sbbb
push
mov
or
pop
sbb
sbb
cmc
das
push
mov
mov
sub
mov
xor
cwtl
repnz
rol
mov
icebp
push
in
inc
mov
loopne
dec
sahf
sbb
sub
lock
aad
sahf
pusha
std
xor
or
pop
add
repz
js
fisubrs
stc
xchg
jl
push
add
imul
sub
in
inc
xchg
mov
inc
cmp
cltd
xor
out
cmp
push
ja
mov
and
cmp
or
mov
out
das
and
cli
inc
sub
pop
stos
sub
mov
fsubrl
jg
mov
movl
mov
sahf
out
loop
mov
aas
xchg
test
stc
call
push
cmp
dec
mov
aaa
sbb
xor
dec
vmovdqa
mov
test
xor
cwtl
xlat
xchg
cmc
pushf
or
and
mov
insl
push
fnstenv
xchg
into
cwtl
or
xor
decl
push
adcl
sahf
cmpsl
push
xor
jnp
adc
ret
sbb
sbb
push
xchg
ret
popa
jl
inc
loop
popf
inc
pop
scas
xchg
push
idivl
in
xchg
stos
enter
test
push
and
jle
shll
stos
fmulp
dec
pop
lahf
lret
stos
outsl
hlt
jo
shlb
mov
jmp
leave
xchg
ret
addr16
jecxz
jne
dec
lds
fldt
inc
fsubl
push
outsl
cmpsb
add
addr16
jecxz
gs
xor
and
mov
jle
outsb
js
sbb
test
cmpb
mov
data16
or
jns
lds
push
scas
mov
decl
stos
sahf
out
mov
mov
jecxz
sbb
les
aaa
mov
nop
popl
pop
lret
dec
mov
and
sub
sti
aam
test
push
jo
scas
imul
insl
pop
lret
jbe
imul
je
mov
dec
mov
jge
jnp
pop
stc
lock
fdiv
add
addl
jg
add
sub
dec
leave
adc
push
pushf
inc
lock
inc
xchg
mov
aas
add
jo
pop
jecxz
lock
xchg
addr16
push
js
lods
popf
ror
pop
sahf
add
push
inc
xchg
addr16
arpl
loope
jnp
arpl
sarl
add
fdivrl
push
mov
fidivs
aad
and
out
push
mov
lock
sbb
cs
mov
and
or
stos
mov
mov
test
mov
imul
mov
mov
inc
aas
insb
jae
testl
or
shrl
aam
lret
lahf
inc
cmp
jo
cmpb
stos
pop
mov
pop
jl
js
pop
inc
fists
adc
inc
mov
movsl
dec
or
fwait
hlt
jg
insb
iret
daa
lock
sahf
pop
loop
cmp
mov
mov
sub
add
aas
xor
and
outsb
mov
inc
dec
movsl
mov
sub
cmpsl
lcall
js
pop
jbe
aaa
loopne
lret
add
and
dec
in
add
shl
mov
cmp
mov
stos
jno
test
adc
adc
out
push
xchg
in
jae
addr16
test
in
rcll
fnstenv
stc
scas
std
pop
outsb
or
and
push
jg
or
push
fcmove
pop
cmp
out
fs
out
sti
sub
stc
cwtl
fnstcw
jp
out
cli
push
pop
rorl
jne
test
mov
xor
lea
pop
ss
pop
aaa
sbb
push
cld
mov
pop
ficomps
adc
cmp
pop
fsts
test
cmc
inc
je
jb
test
mov
or
push
cmp
pop
cmp
ret
repz
int
pop
sbb
mov
js
pop
pop
lcall
adc
xchg
xchg
push
je
xchg
inc
jle
mov
adc
lret
fbstp
stc
mov
daa
xor
inc
mov
ljmp
lock
inc
pop
mov
jno
push
jbe
dec
jbe
mov
or
fwait
xor
aaa
lea
shlb
push
xchg
popa
mulb
xchg
jno
or
push
imul
out
xor
lcall
les
dec
adc
das
push
mov
scas
mov
out
xchg
cltd
bound
sub
push
sbb
and
sbb
mov
daa
pop
sbb
andl
addr16
xlat
repz
xchg
sbb
loop
pop
inc
in
orb
add
jo
notl
rorb
testb
lea
cmpsl
dec
icebp
out
or
pop
lods
sub
push
sbb
push
pop
pop
pop
mov
pop
inc
insl
adc
sub
aam
mov
push
or
mov
pop
loopne
cmp
sti
inc
clc
add
push
lcall
test
stos
sub
push
aas
imul
sub
int3
ljmp
add
pushf
fiadds
pop
stc
ret
pop
scas
adc
fistps
daa
test
stos
xor
ss
and
or
push
icebp
ss
mov
jns
mov
fbstp
dec
jo
cs
lds
push
iret
cmp
sub
and
sbb
inc
inc
out
cwtl
fs
xchg
inc
sbb
sbb
aas
stos
out
cwtl
je
jno
insb
mov
jae
cmp
rol
pop
or
or
sbb
xor
ds
inc
cli
and
mov
pop
sbb
jmp
xchg
jge
dec
movl
push
jns
xchg
pop
lds
pop
add
hlt
test
ja
sub
jmp
sbb
push
jg
fsubrl
sub
xchg
sub
imul
jl
and
sub
data16
repnz
jbe
xchg
mov
xor
sub
xor
sub
je
test
les
les
popa
mov
push
mov
inc
fs
push
add
lods
aam
pop
xor
ret
stos
lahf
stos
fisubrs
jbe
mov
lods
movb
nop
sub
xor
mov
mov
decl
lcall
subb
mov
aam
ljmp
xor
daa
leave
cmp
mov
mov
mov
pop
lock
fwait
jmp
add
rolb
fisttpll
int
icebp
dec
mov
mov
sbb
insl
movsb
inc
sbbl
dec
inc
cld
in
xchg
or
in
push
cmc
call
ret
lods
xor
mov
test
mov
or
test
lea
gs
sarl
sbb
mov
outsl
ss
or
ret
stos
addr16
dec
daa
push
and
and
cltd
push
mov
pop
rorb
inc
addr16
out
sti
push
cmp
insl
xchg
mov
cmp
aaa
out
xor
out
in
sbb
inc
mov
lods
xor
mov
repz
and
rorl
fcomps
iret
inc
adc
ret
push
sbb
adc
fcomip
inc
mov
mov
jge
push
mov
cmp
sub
sbb
mov
movsl
dec
ds
lcall
call
inc
jmp
cmp
inc
call
sti
popa
in
inc
jge
mov
xlat
mov
inc
xor
enter
imul
hlt
scas
cmpsl
xor
jb
into
fs
lock
pop
repz
sarb
and
xor
ficompl
pop
data16
jb
sub
call
push
xchg
fdivrl
dec
cmp
mov
loopne
test
push
popf
loope
ss
imul
xchg
jmp
inc
test
ret
inc
sbb
gs
vpsubusb
int3
sbb
push
sub
leave
jecxz
xor
push
data16
decl
pop
pop
mov
lods
sahf
push
xchg
or
int3
pop
test
adc
f2xm1
jecxz
shl
mov
mov
shll
xchg
adc
jl
jo
test
icebp
data16
xor
adc
scas
xchg
pop
push
mov
or
pop
outsl
dec
xchg
into
leave
inc
mov
shl
mov
fimull
lcall
es
sahf
dec
inc
or
push
mov
dec
sub
fldl2e
and
orb
xor
jl
xor
dec
aam
sub
add
les
or
dec
ret
addb
dec
mov
scas
lahf
pop
sbb
cmpsb
decl
sbb
ss
ret
out
fucomi
stc
dec
lcall
addr16
daa
mov
mov
enter
xchg
cmp
scas
call
mov
arpl
scas
pop
adc
adc
cmpsb
ds
test
movsl
cmpsl
mov
push
xor
mov
lods
out
into
dec
dec
mov
pop
mov
or
push
repnz
test
jmp
pop
aas
rclb
in
pop
and
mov
pop
sub
or
fcoml
adc
xchg
cltd
insb
sbb
lret
rcr
imul
and
sarl
and
sbb
loop
sbb
jecxz
fildll
mov
pop
hlt
das
mov
lds
or
loopne
mov
into
bound
mov
ljmp
iret
repz
adc
stc
fistl
xchg
xor
cmp
push
frstors
sbb
xchg
pop
dec
xor
testb
std
inc
les
ret
dec
int
scas
adcb
inc
jl
jbe
jo
fstpl
sbb
sbb
rorb
mov
fcmovbe
mov
and
push
loope
pusha
inc
mov
cmp
es
fiadds
lahf
in
fs
icebp
in
pop
stc
and
add
push
inc
pop
pop
xchg
jno
pop
std
jno
mov
sbb
idivl
call
iret
repz
test
add
sbb
mov
loopne
pushf
and
hlt
pushf
movsl
mov
enter
inc
test
sub
dec
or
repz
decb
mov
jbe
add
mov
sahf
mov
ljmp
mov
scas
mov
xchg
fsubrs
push
sub
sahf
stos
adc
stc
popa
adc
jno
mov
sbb
pop
cwtl
repz
and
jae,pn
cmp
popa
mov
pop
jmp
mov
sahf
pop
fstl
mov
movsb
sbb
dec
hlt
cmp
mov
xchg
test
and
jecxz
sbb
test
xlat
and
jns
out
fucom
es
mov
sbb
outsl
jl
inc
inc
or
add
add
incb
push
xchg
pushf
cmp
je
fwait
dec
sub
mov
cmp
lods
sbb
or
fdivrl
pop
and
lock
lods
lods
pop
pop
mov
arpl
jecxz
or
inc
leave
addl
shl
sti
push
frstor
loop
inc
mov
popa
jae
cli
sbb
aas
pop
xor
mov
movsl
xlat
in
mov
sub
gs
inc
jle
out
imul
int3
xchg
push
jo
fiaddl
shlb
jnp
aaa
lock
xchg
dec
aam
insb
out
push
stos
int3
push
repz
xor
or
mov
js
test
inc
es
cmp
xchg
sub
int
sbb
imul
popf
cmp
cs
dec
jns
pop
cmc
sub
cwtl
into
or
ds
pop
in
decb
jle
sbbl
in
pop
in
pop
aad
data16
cmp
and
mov
icebp
push
mov
cli
sub
lea
aad
pop
mov
inc
negb
add
insb
pop
pop
jns
mov
fisubl
cs
xchg
jb
sub
and
imulb
stos
incb
mov
out
out
lcall
mov
popa
insb
xchg
jo
sub
dec
inc
loop
data16
sub
xchg
insb
das
mov
pop
lret
push
sbb
gs
push
mov
stos
xlat
lock
sbb
js
daa
cvtdq2ps
mov
pusha
sbb
dec
jmp
cmpsb
fwait
mov
jb
int3
xchg
dec
ja
mov
jb
lods
mov
lcall
inc
fstp
addr16
stos
add
dec
test
push
ds
xor
cwtl
dec
and
xor
xor
das
cli
adc
lods
or
pop
popa
xchg
mov
push
sarb
mov
sbb
or
push
aad
mov
ds
mov
js
jbe
xor
inc
mov
jg
out
outsl
testb
mov
adc
and
cmp
push
imul
es
ds
cmp
pop
outsl
pop
dec
jno
nop
mov
push
mov
test
jo
adc
pop
xor
xchg
clc
inc
fwait
lcall
xor
xchg
xlat
sbb
xor
fstpl
push
cli
stc
movq
adc
jg
lret
sbb
mov
mov
jge
loope
jp
addr16
jg
stc
mov
dec
mov
xlat
lock
jnp
test
ret
cmp
pop
or
pop
adc
pop
push
inc
mov
pop
adc
jne
add
in
cmp
mov
outsl
inc
mov
in
mov
inc
cmc
mov
adcb
stc
sbb
icebp
shll
mov
sub
popa
dec
xchg
add
shl
pop
outsb
lods
push
imul
bound
jg
mov
add
lret
push
mov
jmp
icebp
loopne
int
mov
test
mov
cs
das
out
sarb
outsl
inc
clc
cmp
jle
cmp
icebp
lea
aas
faddl
push
nop
test
test
dec
pop
int3
call
and
xchg
lret
and
mov
scas
rorb
mov
mov
lret
sbb
out
xchg
lods
push
lods
fisubrs
lret
inc
lea
out
or
addb
or
sub
stos
mov
xchg
mov
or
xor
or
das
and
xlat
sub
pop
into
xor
cwtl
and
ss
add
je
inc
mov
ret
jbe
mov
jle
xlat
cmpsl
and
push
out
adc
or
adc
and
mov
outsl
xchg
jo
and
rcl
nop
push
arpl
shlb
ret
test
dec
push
mov
mov
sbb
rcl
imul
outsb
sbb
mov
push
negl
pop
icebp
lea
mov
adc
and
jnp
mov
insb
push
jne
pop
jbe
xor
pop
lock
or
cli
mov
mov
push
inc
cmp
adc
sbb
cmc
xchg
movsl
lock
dec
pop
imull
ja
es
add
out
cli
lret
jnp
xor
inc
out
test
std
lods
push
mov
fistpll
sbb
mov
cmp
frstor
rcrb
mov
add
mov
mov
inc
out
es
push
pop
fdivl
mov
sub
pop
pusha
and
add
mov
stos
jp
dec
aaa
jns
or
sub
repz
dec
bound
addr16
adc
mov
lret
stos
adc
adc
loopne
sbbb
adc
jecxz
mov
jp
fs
hlt
pop
imul
or
cmp
dec
imul
mov
sub
mov
popf
mov
xchg
dec
xchg
loopne
cmpsb
adc
sbb
sbbb
lcall
mov
repz
and
xor
mov
rorb
hlt
imul
push
mov
mov
mov
dec
ret
dec
subb
mov
shrl
repz
mov
int3
push
xchg
cltd
pop
mov
sti
jg
inc
sbb
popf
scas
xchg
sub
pop
lcall
call
mov
push
hlt
and
dec
or
enter
in
pop
inc
fildll
and
cmp
ds
sbb
push
jb
stos
lods
mov
dec
mov
outsb
xchg
pop
xchg
sub
test
jns
pop
sbb
loopne
mov
pusha
or
addr16
sbb
icebp
inc
ror
lods
shlb
mov
ja
inc
jmp
cwtl
je
rcrb
sbb
pusha
hlt
jg
test
fstps
fldenv
lods
addl
cmp
call
pop
sub
xor
and
xlat
add
cld
mov
into
or
jecxz
xchg
fwait
and
mov
mov
jmp
push
fwait
pop
shll
lcall
fs
shll
je
ret
in
cmc
int3
test
mov
push
xchg
hlt
fistpl
lods
int3
xor
add
pop
mov
jle
test
push
pop
int3
cmp
push
or
pop
push
and
pop
or
jo
test
andl
rclb
ret
sbb
shl
inc
lret
sub
inc
jl
jle
lock
jb
push
sub
jo
mov
jg
sbb
mov
shll
push
into
dec
mov
shll
shl
mov
mov
xchg
cmp
and
sbb
jnp
pop
push
shll
js
push
jb
xchg
cli
out
adc
out
imul
inc
xor
gs
jns
dec
and
mov
pop
mov
insl
nop
inc
clc
sahf
rclb
mov
push
push
lahf
push
xor
pop
cmp
sub
outsl
jae
js
or
push
loop
xchg
aas
add
mov
xchg
pop
mov
jg
shlb
xchg
inc
das
xor
inc
adc
adc
push
mov
xor
xchg
jmp
movsl
out
inc
imul
mov
cli
and
sub
pop
gs
cmp
arpl
cmp
and
inc
cld
pop
shlb
test
inc
leave
add
xchg
jg
hlt
out
fcoms
cmpsl
mov
xor
gs
test
loope
in
lods
push
sub
js
sub
pop
testl
fbstp
lods
cmpsb
push
stos
xor
inc
push
push
pop
xchg
mov
jo
xor
push
lret
push
add
out
int3
sbb
push
test
push
and
mov
lea
xchg
mov
sub
out
data16
shrb
mov
imul
je
inc
out
add
ljmp
push
inc
fcomip
in
into
clc
xchg
push
mov
notrack
fcomps
imul
add
push
jl
mov
inc
xchg
push
cmpsb
mov
mov
shl
and
xor
mov
push
xchg
pop
cmp
mov
push
ljmp
or
dec
ret
xorb
fucomp
in
sub
movl
cli
adc
xor
xchg
jecxz
in
ret
int
sahf
or
mov
into
cmpsl
jp
push
xchg
out
fs
shlb
and
adc
cs
sbb
or
push
adc
dec
add
pop
pop
les
or
pop
pop
movsb
clc
jne
jne
pushf
xchg
sub
scas
ss
int3
xchg
jg
cmpb
cs
sub
pusha
inc
inc
lds
repz
sarl
jecxz
add
iret
push
mov
jo
jns
push
pop
loopne
into
adc
dec
jmp
ja
nop
rol
mov
xchg
loopne
sbb
es
loopne
mov
cmp
inc
push
in
ja
mov
shl
ljmp
push
sub
mov
lret
call
cmp
adcl
xor
ja
pop
sbb
inc
outsb
dec
push
sbb
sub
push
mov
pop
pusha
sub
out
sahf
ds
jle
stc
ss
pop
pushf
mov
mov
sbb
ficoml
pushl
cmpsb
aas
inc
jg
cmc
nop
nop
push
orb
outsb
pop
xchg
sbb
imul
mov
sbb
xchg
pusha
notb
xor
ss
dec
rclb
push
add
jne
notl
popf
or
loopne
add
dec
lock
gs
adc
push
mov
loopne
jno
jl
mov
jmp
cmp
jae
mov
cli
mov
add
rcll
int
jo
test
ret
pushf
dec
aaa
and
xchg
pop
sbb
call
movsl
xor
pop
xchg
dec
repnz
ror
adc
out
jle
jno
inc
dec
lret
shrb
add
cmc
loopne
ds
sbb
fimuls
push
inc
incl
xor
scas
sbb
lods
push
jle
stc
adc
cli
int
push
repnz
gs
movsl
outsl
es
rclb
cmovl
adc
ret
lods
test
add
add
ret
jmp
or
mov
aas
sub
lret
cmp
xchg
adc
xchg
decb
popf
sub
insl
std
xor
jne
movsb
jbe
iret
sbb
sbb
orb
iret
jns
add
xchg
in
lret
rolb
lea
mov
or
stos
negb
std
into
enter
add
push
sbb
xlat
dec
mov
sub
dec
xor
cmp
rcr
pop
pop
mov
jnp
mov
and
int3
xor
mov
mov
jge
jnp
push
push
cmp
add
mov
or
inc
xchg
cmp
mov
and
fldt
out
mov
xchg
js
jnp
lock
out
push
mov
adcb
dec
lret
fiadds
inc
cmc
cmp
mov
push
adc
in
stos
dec
push
loop
scas
orb
xchg
stos
mov
test
add
dec
xlat
repnz
insb
or
mov
repnz
in
sub
test
fs
lock
mov
bound
jle
lahf
mov
testl
jle
rolb
call
out
or
xchg
out
xor
mov
lods
movsb
cmpl
lahf
rcrl
push
sub
popa
push
jbe
and
nop
push
pop
clc
or
scas
fwait
int3
or
push
ret
and
into
mov
push
xchg
sub
test
push
das
mov
sbb
mov
imul
sahf
cmp
fs
mov
hlt
inc
add
jb
iret
pop
scas
out
adc
cmp
ds
jp
add
les
mov
movl
push
xor
mov
loop
jb
addr16
xchg
mov
int3
mov
popfw
xchg
xor
enter
cli
pop
data16
inc
pusha
arpl
xchg
aaa
push
loope
dec
pusha
pusha
push
jl
dec
mov
sbb
mov
xchg
test
pop
xor
mov
inc
and
mov
call
adc
sbb
jmp
pop
push
xor
clc
adc
js
scas
pop
pop
sub
pop
xchg
and
jo
fstps
clc
std
test
cmpsl
aaa
mov
outsb
pusha
ss
pop
cmpl
es
xlat
inc
mov
inc
fwait
std
mov
mov
pushf
adcl
xor
dec
sahf
imul
int
mov
and
pop
xchg
adc
add
mov
cmp
mov
jg
adc
outsl
mov
push
add
add
insb
mov
lods
leave
loope
ret
push
inc
dec
jns
mov
push
aaa
pop
jns
adc
jg,pt
das
push
pop
stos
fildl
mov
xor
xchg
mov
nop
mov
lds
mov
mov
mov
mov
push
flds
mov
arpl
notl
cmp
pusha
jge
cwtl
sbb
and
fcmovnb
loopne
out
dec
cmp
mov
mov
or
xor
inc
outsb
xchg
bound
add
inc
jno
les
je
sub
je
mov
out
ss
dec
push
enter
icebp
or
leave
daa
aaa
add
pop
mov
mov
testl
sbb
call
mov
mov
daa
mov
int
sub
jb
add
fwait
lods
cld
xchg
inc
adc
mov
repnz
dec
fimuls
fldt
repz
enter
pop
insb
shll
cs
fadd
ret
xchg
scas
mov
push
sbb
xlat
pop
out
pop
mov
or
mov
jns
and
out
fcompl
pop
mov
ljmp
push
addb
test
lds
les
hlt
push
or
lods
or
jne
insb
push
popa
xchg
pop
nop
rcr
sbb
into
aaa
and
out
dec
out
ja
sahf
pop
std
sti
or
add
fwait
mov
aam
insl
inc
and
push
xchg
hlt
orl
inc
or
adc
insb
sub
mov
ja
insl
into
inc
xlat
mov
xchg
inc
divl
out
in
jge
push
push
int3
lods
mov
les
int3
pop
jbe
adc
ficomps
push
mov
mov
ret
cwtl
sbb
shl
nop
rcll
lods
jo
lcall
mov
js
loope
jmp
xor
jmp
clc
out
lods
jb
int
stos
scas
std
ds
in
mov
sbb
sub
movsb
leave
loope
mov
jl
and
lret
mov
fsubrl
add
clc
mov
mov
pop
pop
and
mov
add
xlat
mov
js
rcr
xchg
mov
cmpsb
aas
js
pop
imul
inc
jae
in
add
sub
adc
sti
sahf
movsb
jp
xchg
jne
push
sti
lods
aam
lods
mov
or
mov
jbe
and
xor
cltd
jg
jns
in
sub
fwait
mov
fisubs
xchg
mov
rcll
xor
mov
gs
ss
xchg
sub
mov
in
mov
or
cmp
imulb
jecxz
ror
cmp
mov
sub
xchg
call
lock
stos
xor
lods
popa
std
jb
mov
sbb
pop
jo
inc
call
stos
mov
cld
cwtl
nop
mov
inc
arpl
arpl
pop
movsb
jl
pop
addr16
ret
cmpb
and
dec
or
pushf
mov
addl
insb
stc
movsb
insb
adc
and
in
sbb
pop
repz
cmc
int
cld
jp
mov
ljmp
sarb
fidivl
dec
inc
pop
leave
push
das
xchg
dec
push
jnp
aaa
scas
mov
jle
cmpsl
cmpsl
aas
jle
aaa
andl
xchg
push
jo
fidivs
mov
jno
dec
mov
sarb
cmp
mov
ja
pop
mov
pop
repz
push
mov
lahf
adc
dec
jg
in
mov
out
mov
cmp
pop
adc
cmpsb
je
mull
adc
out
cs
ret
mov
out
and
cmp
jne
push
dec
rcrl
lret
int
insl
ljmp
ljmp
xor
pop
xor
test
xor
daa
sbb
jnp
pop
jge
pop
loope
sub
popf
out
lret
jnp
adc
hlt
mov
rcll
movsl
xor
lea
cmc
jl
cltd
xchg
and
mov
pop
aam
lock
in
ljmp
pop
pop
sub
test
lods
mov
cwtl
testl
add
inc
pop
add
inc
add
out
cmp
mov
adc
imul
and
mov
shl
add
out
rcrl
outsl
dec
jo
imul
inc
mov
sub
add
jmp
mov
xchg
ljmp
sub
mov
sbb
test
mov
inc
and
mov
mov
dec
icebp
mov
mov
icebp
xor
inc
cwtl
mov
push
push
adc
sbb
adc
adc
xor
push
push
outsl
icebp
repz
stc
daa
pop
popf
out
xchg
das
dec
xor
lods
pop
data16
lods
out
out
psrlq
xchg
test
insb
mov
ret
std
dec
daa
or
lds
aam
clc
inc
sub
and
js
clc
or
or
repz
fwait
stos
subl
clc
cmp
gs
pop
mov
or
aam
popa
xchg
ljmp
and
in
xor
mov
mov
or
or
stc
loop
xor
loopne
popa
mov
mov
test
sbb
sbb
push
orl
mov
push
dec
mov
inc
scas
jp
rclb
xchg
mull
xchg
shr
adc
mov
idivl
and
in
cmp
adc
xor
pushf
sbbb
dec
push
stc
adc
and
xchg
push
ret
ds
repnz
add
mov
ds
and
es
cmpsl
mov
xchg
mov
stc
and
and
in
jbe
pop
cmpsb
sbb
daa
cmp
jp
mov
sub
rcrb
dec
xchg
sbb
or
add
or
dec
adc
hlt
shll
fwait
iret
adc
mov
xlat
pop
push
mov
add
sub
mov
hlt
mov
repnz
shr
sbb
cld
and
leave
call
xchg
pop
pop
imul
enter
and
jecxz
xor
xlat
sbb
ds
mov
pop
dec
mov
mov
push
aad
pop
pop
xchg
cmpsl
es
dec
pushf
fstps
ss
idivl
xor
add
in
stos
xchg
or
sbb
mov
cmp
aaa
inc
lahf
mov
pop
push
or
dec
mull
jo
add
lods
comiss
ja
jnp
test
inc
or
mov
icebp
push
subb
ds
or
in
fsubs
imul
lret
add
loop
jmp
push
ret
mov
cmp
shrl
outsb
xor
sub
test
stos
cli
ret
lds
pop
call
lea
push
sbb
es
bound
mov
or
js
sbb
div
and
jb
mov
cmp
lds
jg
test
mov
xchg
push
xchg
ficoms
fisubrl
and
jo
jmp
ss
jae
cmp
pop
fs
push
xlat
cmp
ficoms
clc
loope
lret
shr
aas
sahf
pop
inc
in
es
jmp
or
jo
aas
xchg
lock
dec
mov
adc
xchg
push
pop
inc
jge
jg
fnstcw
lock
pop
inc
fs
mov
rcrl
inc
add
out
repz
xchg
pop
es
adc
pushf
ret
std
sub
icebp
rclb
lret
cmpsb
and
pusha
scas
xor
rclb
fiadds
xor
outsl
pusha
xor
fs
xchg
or
pop
les
and
jbe
sbb
loop
mov
fidivl
or
movsl
mov
stos
push
push
xchg
sub
lods
jl
pop
cmp
cmp
add
std
xor
gs
test
mov
in
mov
cli
mov
jmp
mov
out
sbb
push
dec
add
lahf
enter
jbe
inc
test
ja
scas
and
push
or
inc
fs
addr16
fldt
nop
and
mov
pop
outsl
lahf
iret
rcr
shl
ret
cmp
sbb
mov
out
es
stos
leave
inc
int
mov
adc
push
and
sub
xchg
adc
dec
inc
mov
in
inc
fsubs
pop
push
movsl
js
std
dec
push
add
push
jns
sub
push
cwtl
movsb
jp
jb
mov
inc
lea
xchg
and
sub
jo
out
lcall
flds
cmp
repz
ljmp
sub
in
mov
das
pop
mov
dec
lods
scas
dec
in
cltd
sub
lret
addr16
xor
cmp
push
mov
xchg
mov
mov
add
mov
outsb
popa
cltd
add
mov
imul
sbb
fisubl
jecxz
jg
int
cmpsb
lcall
mov
outsl
mov
jmp
lods
stc
mov
mov
mov
nop
ficompl
dec
and
xchg
push
in
daa
gs
cmp
in
push
lock
inc
pop
movsl
xchg
push
cmp
out
add
add
dec
test
fwait
and
fwait
std
pop
sub
stos
mulb
push
out
and
fidivrs
popf
lret
xlat
jp
pop
lods
in
or
notb
loope
daa
xchg
xor
pause
sbb
jl
mov
push
addl
pop
jge
and
fisubl
lret
or
push
loope
fs
sahf
add
aas
jmp
rorb
mov
xchg
loope
pop
imul
pop
mov
les
jno
outsl
or
cmpsl
mov
data16
aaa
in
pop
mov
pusha
rorl
aaa
cmp
adc
cmp
or
mov
jno
js
or
lock
xor
imul
and
ds
push
pop
jl
sti
dec
mov
hlt
mov
jl
xor
into
xlat
test
outsl
jno
ljmp
xchg
movsb
dec
mov
int3
mov
fisubrs
mov
push
pop
mov
xor
dec
pop
enter
imul
fisttpll
push
aad
mov
xchg
xchg
sub
push
outsl
mov
aad
cmp
mov
arpl
inc
test
pop
test
rcll
jb
dec
outsl
jno
inc
jl
clc
sbb
jno
pop
repnz
int3
daa
sbb
loop
jbe
cmp
pop
xchg
push
dec
or
xor
jno
leave
mov
push
push
push
xchg
inc
ret
fistl
inc
lods
xchg
std
jno
push
popa
push
mov
fcompl
ret
loopne,pn
mov
adc
dec
bound
rclb
popa
scas
roll
xor
inc
inc
out
nop
and
call
lods
addr16
inc
jmp
or
sbb
xchg
fidivrl
test
lcall
and
gs
xorb
and
mov
negb
bound
mov
in
inc
xchg
imul
xchg
bnd
xor
dec
xchg
mov
pop
and
stos
mov
add
jae
pop
add
arpl
rorb
movb
and
sbb
js
and
into
xchg
in
push
xlat
pmaxsw
ficoml
aam
xchg
fimuls
pop
stos
add
shll
pop
mov
adc
cmpsl
push
push
jp
addr16
repz
lea
add
ss
inc
dec
ss
cmp
mov
inc
int3
inc
jns
stos
fldt
sub
negb
mov
mov
loop
aas
lahf
cmp
ret
mov
in
or
dec
lea
xchg
cli
lea
sbb
mov
inc
xor
imull
mov
sar
push
scas
add
push
jne
popl
inc
adc
or
push
jp
out
dec
mov
pop
mov
pop
in
sti
push
mov
or
fmuls
xor
testb
into
fwait
push
push
stc
mov
and
mov
movb
cmp
dec
add
jno
mov
iret
pop
fprem1
cmp
loope
inc
mov
out
sti
inc
push
adc
int
call
enter
jecxz
jns
xchg
jmp
push
cmp
mov
cmp
mov
fs
xchg
mov
test
lret
cmp
push
jb
push
mov
add
rol
outsl
inc
mov
leave
ret
or
scas
pushf
sbb
aas
js
mov
leave
or
jb
repnz
inc
adc
xchg
and
or
adc
adcl
pop
movsl
xchg
pusha
cwtl
sub
stos
lcallw
lds
and
pop
outsl
es
pop
je
imul
js
xchg
outsl
ret
hlt
ds
es
data16
daa
rorb
cmp
cmp
jbe
das
jne
jb
arpl
inc
cs
int3
sbb
stc
or
inc
pop
fisttps
dec
pop
jb
int
imul
pop
lret
and
inc
loop
pavgw
jb
add
dec
addr16
cmpsl
lods
jle
jae
push
aad
add
jno
mov
outsb
mov
xchg
mov
dec
jnp
pushf
mov
shll
push
lock
xor
push
insl
cmp
xchg
and
cmp
push
xchg
imul
gs
stos
mov
dec
fs
xchg
rolb
lea
jg
movl
jg
stos
lock
clc
pop
pop
ret
retw
jecxz
gs
ret
mov
test
icebp
in
dec
outsb
out
bound
add
adc
nop
cwtl
adc
cmp
adc
sahf
mov
repz
cld
xor
sbb
sub
in
cmp
mov
mov
enter
and
loopne
and
dec
xor
andl
sbb
xchg
mov
pop
mov
jno
mov
or
sbb
addr16
fstpl
lcall
daa
lods
repz
jle
ror
popl
mov
scas
inc
mov
mov
pop
mov
ret
out
jle
cmp
fdivs
pop
mov
imul
ss
daa
cltd
loop
in
sub
jae
imul
or
xor
int3
adc
scas
jl
cwtl
mov
daa
push
lods
add
push
sti
dec
int
movsl
inc
jg
arpl
std
mov
inc
insl
push
or
test
cmp
jle
std
and
dec
ja
xchg
xor
leave
adc
jle
push
dec
fnstenv
sub
sub
mov
add
addr16
mov
lret
ja
jnp
outsl
xchg
pop
jns
sti
dec
fmull
xor
pop
sbb
adc
daa
int3
loope
lock
fistl
xchg
adc
sarb
scas
and
adc
sbb
int3
cmc
push
lods
mov
stos
hlt
jmp
popa
inc
cmp
or
outsb
push
lds
and
and
xchg
jecxz
add
outsl
add
adc
je
sub
out
mov
dec
fwait
cmp
sub
fs
push
mov
push
add
mov
xchg
aad
fs
subl
mov
scas
sub
jbe
repz
arpl
adc
lods
mov
dec
mov
ficomps
aad
test
bound
into
jecxz
inc
xor
add
xor
xor
in
scas
imul
inc
pop
repnz
jbe
and
pop
inc
jl
aaa
pop
add
loop
xchg
out
and
subl
ljmp
pop
bound
ss
cs
or
add
jae
sub
icebp
fwait
xor
mov
fs
lock
gs
jg
xor
test
push
popf
cli
jmp
addr16
in
sub
sub
inc
mov
imul
adc
in
pop
adc
add
stc
mov
mov
out
sbb
lret
jbe
jae
push
fimull
add
inc
aam
mov
xor
push
xchg
cwtl
in
bound
pavgb
xchg
jbe
test
es
test
sbb
lahf
mov
cmpsl
jb
pop
pop
mov
jae
push
je
and
das
sub
int
xorl
jle
jl
jne
xor
outsl
idivl
cmp
es
xor
push
cmpsl
xor
into
jo
lahf
sub
das
push
fwait
das
lret
xor
pop
mov
xor
mov
mov
xchg
dec
test
push
xor
pop
pop
test
in
inc
ret
fs
or
arpl
dec
jno
shlb
cmc
inc
lea
scas
mov
xchg
inc
pop
sahf
fcoms
addb
imul
dec
test
add
test
mov
inc
mov
jp
mov
mov
mov
or
in
fsincos
into
test
mov
jb
ret
pop
lahf
aaa
test
pop
mov
es
fwait
mov
cli
std
mov
cwtl
ja
adc
push
inc
mov
gs
xlat
sub
in
cli
cltd
lods
into
push
hlt
stc
lea
bnd
dec
call
inc
pop
ret
adc
jne
call
es
sarl
xchg
adc
fimull
sub
pop
xchg
loop
sub
das
and
dec
jo
aad
ret
cmp
jge
sti
ss
daa
in
pop
addr16
jecxz
imul
xor
aam
jecxz
sub
mov
inc
fistl
jns
cmp
push
imul
mov
es
out
pusha
xor
push
xchg
inc
mov
aaa
fisubrl
jbe
pop
outsb
cwtl
xor
bound
cmpb
cmc
movsb
and
cltd
dec
xchg
or
adc
xchg
push
push
inc
ret
sarl
stc
push
and
sbb
xor
mov
std
xchg
rclb
loope
add
jmp
ss
ljmp
leave
add
je
xor
jne
insl
sti
jmp
pop
xor
and
cmp
ficomps
lret
dec
nop
adc
fcompl
aam
mov
push
xor
fisubs
ret
xor
ret
jl
jle
mov
or
xchg
iret
cmp
mov
and
ljmp
add
cmp
mov
fucom
push
jmp
adc
jno
add
pop
popf
push
mov
mov
arpl
mov
scas
lea
sar
pusha
ret
sub
mov
rcll
pop
mov
mov
xchg
add
gs
sub
dec
xlat
pop
push
dec
rorb
dec
rcrl
ret
lods
push
out
push
pop
dec
and
insb
xchg
shll
add
imul
movsl
jge
lahf
out
pop
inc
inc
push
sub
and
in
jns
adc
sub
cmp
jno
cmp
out
shlb
adc
out
adc
mov
mov
ljmp
mov
pop
pop
ljmp
push
add
and
lcall
roll
jae
or
adc
jecxz
les
stos
xor
ljmp
cmp
adc
mov
testl
push
mov
jg
lods
inc
das
call
push
fists
lcall
shl
test
pop
xor
push
lret
insl
mov
sbb
lods
sbb
cmp
jle
loop
test
ret
shll
stos
clc
push
mov
and
repnz
add
or
sbb
popf
and
js
mov
jno
mov
fildll
test
xchg
pop
icebp
pop
call
sti
xor
mul
xchg
mov
call
rclb
jmp
scas
mov
and
jecxz
jmp
lds
out
mov
sbb
dec
popf
jle
out
cmp
out
jbe
rcrl
stos
imul
ljmp
pop
mov
push
negl
das
xor
ljmp
ret
inc
pop
sbb
in
sar
scas
inc
pop
aam
xor
sbb
subl
imul
cmp
jno
or
xor
jecxz
fadd
inc
cmpsl
cmp
adc
xor
ja
lods
ja
pop
repnz
cmp
mov
in
xchg
inc
nop
jae
fisttpl
sbb
fcmove
imul
cld
sbb
sub
jle
inc
pop
shll
jg
aam
inc
loope
mov
mov
jecxz
pop
addr16
cmp
ret
add
in
xor
fdivrl
mov
sbb
scas
lock
jecxz
lea
imul
and
ljmp
fcmovb
cmp
sbb
mov
leave
cmp
jge
idivb
popa
jbe
pushl
outsb
push
mov
imul
cmp
int3
xchg
adc
cmp
sti
stos
scas
ja
jne
pop
lret
dec
adc
xor
loop
cmpsl
shlb
cltd
in
push
nop
stos
pushf
sahf
sub
loope
mov
mov
cs
cwtl
push
sub
in
cmp
xchg
and
lret
push
rcrb
adc
mov
dec
test
aas
dec
push
lock
push
push
mov
mov
scas
xor
daa
sub
andl
push
sub
push
mov
adc
stos
fistps
aad
sti
pop
xchg
jne
outsl
lods
subl
mov
in
push
mov
and
jp
xor
sub
stos
data16
adcl
mov
cmpsl
in
out
insb
pop
lahf
add
or
xchg
out
inc
xchg
sbb
sbb
dec
out
sbb
ficompl
mov
mov
push
dec
shlb
or
adc
jecxz
jo
mov
pushf
adc
iret
inc
mov
std
jne
dec
hlt
pop
std
stos
into
xlat
xchg
popa
repz
mov
es
lea
int3
push
mov
sub
mov
mov
xor
outsl
loop
cltd
push
ja
sbb
arpl
fdivrl
enter
mov
push
lret
aas
adc
enter
mov
cwtl
call
in
out
out
mov
add
xlat
cmp
cmp
jnp
lods
daa
jbe
rcll
notl
and
rorb
sti
cld
and
mov
sub
pop
icebp
test
dec
pop
mov
sbb
sahf
mov
loopne
mov
in
dec
push
push
mov
xchg
lea
xchg
sbb
int3
inc
fcoms
adc
call
fcoms
mov
aaa
adc
dec
pop
addr16
repz
jbe
mov
add
sbb
or
mov
int
addl
add
bound
xchg
arpl
mov
idivl
xchg
out
mov
andb
lcall
leave
test
int
test
sbb
insb
int3
and
lret
and
test
rcl
repz
nop
inc
and
mov
test
mov
sbb
out
push
cmc
leave
scas
add
sub
fildll
jl
mov
test
inc
testb
and
out
outsb
loope
in
ljmp
adc
inc
pop
notl
addb
xor
out
sub
or
push
xchg
sub
aad
loopne
lret
daa
add
xchg
clc
sub
jno
sbb
push
inc
ret
dec
push
dec
xchg
data16
lock
cwtl
jne
ja
ret
pop
aaa
or
mov
xchg
ljmp
adc
sbb
idivb
push
jne
push
push
mov
or
aad
adc
scas
shrb
xor
jns
stos
fcmovnb
xchg
xchg
pop
mull
pop
fdivrs
push
movaps
aam
jg
pop
cmp
jp
popf
push
rorb
std
imul
cwtl
outsb
cmc
sarb
pop
insl
movsb
lea
addr16
in
and
mov
fidivrs
mov
lcall
xchg
dec
xchg
mov
daa
popa
mov
sub
pop
outsl
dec
lcall
cmp
push
aas
mov
fisubrl
push
jmp
les
cwtl
jmp
insb
test
cmp
adc
or
outsb
cs
mov
fbstp
pop
cli
mov
mov
adc
mov
jmp
xor
fstp
jle
into
adc
sbb
pop
cwtl
pop
sbb
lock
scas
fcmovnbe
sbb
lods
lcall
cld
mov
cld
cs
out
pop
dec
pop
loope
pop
lock
iret
call
cld
pushfw
int3
pusha
fisttpll
rclb
or
add
imul
jbe
push
and
mov
lds
imul
inc
xor
cmp
dec
sbb
bound
jno
enter
les
fistpll
or
scas
mov
repz
inc
or
inc
pop
mov
cltd
push
cld
call
mov
xchg
xchg
lahf
add
jl
mov
loope
pusha
add
inc
mov
sarl
movsb
inc
adc
fcompl
or
push
lock
xchg
test
shl
add
fsts
jecxz
movsb
cmp
sbb
mov
mov
and
mov
push
jle
enter
pushf
je
fisttps
push
aad
js
pop
outsl
mov
xor
jmp
mov
pop
je
mov
icebp
pop
jo
sti
jae
or
inc
mov
stos
cmpsl
inc
out
mov
pop
inc
and
arpl
das
aam
insb
sbb
xor
sub
fildll
roll
js
jns
push
push
cmp
cmc
mov
lock
push
jp
mov
jae
and
pusha
pop
cmp
ss
and
mov
add
in
mov
adc
dec
mov
xchg
and
sar
in
mov
ljmp
push
popa
jne
movsb
lods
dec
shl
in
out
ljmp
ret
xor
mov
or
lods
push
mov
mov
mov
in
ja
xor
std
mov
add
jge
sbb
lock
lea
jo
lods
aam
mov
mov
and
push
addl
pop
xchg
adc
xchg
ret
fdivl
dec
incl
fisubrs
mov
rcll
jae
mov
and
push
loopne
sbb
mov
and
bound
lret
and
fcoml
cmpsl
notb
cmp
sahf
sub
dec
std
cmp
hlt
lret
inc
sub
orb
mov
and
mov
pop
out
cmp
xchg
cli
add
fildll
mov
ss
cmp
or
and
ret
lods
lods
xchg
ret
mov
roll
sbb
jne
sbb
dec
push
push
sub
out
cmpsb
mov
mov
add
push
cwtl
or
xchg
cmp
cmpsl
addr16
scas
cmp
outsl
ds
insl
repnz
pop
in
in
aaa
popa
cltd
jb
adc
xchg
push
xor
orl
ds
es
lret
and
mov
jl
and
adc
cld
cmp
pushf
xor
scas
jl
jl
loop
jo
cltd
cld
xor
test
ljmp
mov
cmp
into
es
push
mov
sbb
pop
sarl
dec
into
sub
cmpsb
or
jne
pushf
bound
test
imull
lods
and
xor
jecxz
sub
jae
mov
das
std
mov
inc
jl
pop
lods
and
lods
jbe
cs
stc
dec
dec
xor
lret
pcmpeqb
inc
pop
test
push
fimull
fs
call
test
loope
mov
mov
mov
pop
and
dec
rol
mov
dec
lea
jg
pop
mov
xchg
shrl
xlat
shlb
inc
loopne
jb
jle
mov
push
mov
cmc
pop
pop
adc
shrb
dec
test
or
inc
dec
sbb
and
pop
mov
into
iret
test
mov
stc
mov
and
into
sbb
std
and
nop
aaa
push
fcmovnu
sbb
pop
pop
cmovge
xor
and
lods
xchg
adc
sub
icebp
bound
add
icebp
push
dec
imul
and
xchg
cwtl
out
nop
adcb
push
or
mov
insb
xor
sub
daa
cmpsb
xchg
sarl
loopne
movl
daa
and
int3
test
sub
ss
fstpl
leave
adc
mov
in
das
int
jno
dec
nop
aam
xchg
loop
xchg
xchg
into
aas
je
sub
mov
mov
cmp
sub
push
sub
loopne
mov
sbb
ss
inc
jmp
pusha
test
pop
inc
into
std
mov
es
dec
mov
lea
lret
or
inc
ror
dec
or
xchg
add
xor
gs
inc
stos
in
jne
out
and
jmp
xor
inc
faddl
mov
sub
popf
push
std
je
xor
mov
adc
cmpsb
repnz
out
pop
shlb
cmp
adc
xor
mov
adc
std
cmpsb
inc
je
test
in
mov
or
dec
cmp
pop
push
outsb
add
mov
pop
push
test
dec
add
cmp
stos
pop
cltd
sti
mov
jle
out
jmp
enter
jbe
mov
or
adc
push
mov
push
in
cmpsl
mov
dec
fsubs
lret
push
jecxz
addr16
dec
jmp
and
out
enter
and
lds
sbb
stc
push
mov
roll
pop
sbb
mov
dec
pushf
and
xchg
xor
leave
in
push
jnp
fiadds
mov
shll
orl
aaa
iret
subl
jns
pop
divb
jno
fistl
mov
test
sub
sbb
iret
imul
cmpsl
adc
je
cmpsb
hlt
fmulp
es
in
repnz
xchg
lret
inc
and
jb
pushf
push
jno
inc
data16
lock
in
xor
mov
repnz
sbb
jle
push
pusha
shl
fsubrl
lods
mov
shr
int
xlat
add
jecxz
hlt
xchg
mov
jae
xchg
xor
push
outsb
push
divl
insl
movsl
mov
mov
pop
adc
test
sbb
xchg
in
out
scas
scas
jb
mov
mov
insb
jle
cmc
adc
leave
cmp
push
mov
movsl
and
lods
mov
cmp
jno
mov
and
fbld
cld
enter
xchg
fidivrs
cltd
cmpsl
lock
mov
out
bound
ss
mov
fcompp
mov
pop
addb
cmp
insb
pop
das
jmp
out
sbb
sbb
call
dec
adc
icebp
mov
or
sbb
xchg
fidivrl
out
mov
mov
jle
test
aas
ljmp
shl
scas
mov
xor
into
push
stos
mov
dec
std
movsb
and
sub
add
sub
in
sbb
rorl
push
cmp
out
addr16
inc
lcall
mov
in
jp
in
add
mov
sahf
inc
imul
hlt
stos
js
xlat
rcll
sub
ror
sub
add
lods
int
dec
adc
ss
mov
xor
sbb
daa
mov
mov
out
adc
xchg
mov
rclb
add
xor
cmpsb
mov
les
es
mov
stos
mov
xchg
jl
mov
scas
sub
dec
and
cmpsb
loopne
jl
movsl
andl
jecxz
nop
leave
repnz
aam
pop
hlt
sub
push
test
aas
jmp
mul
add
cli
fcoms
xlat
xor
pop
xor
xchg
inc
inc
in
mov
pop
into
mov
daa
rclb
es
cwtl
into
cwtl
cmp
push
loope
ret
ljmp
add
mov
rol
cli
aaa
mov
jle
cs
inc
dec
mov
repz
pop
ret
or
sbb
loop
lret
xor
mov
lods
loop,pt
mov
or
jno
xor
fcomip
sbb
sbb
lods
mov
loop
repnz
loop
sub
cmp
jb
mov
jmp
outsb
push
inc
cmp
imul
mov
sahf
movsl
xorl
fcomps
fists
cli
scas
inc
sub
mov
fstp
adc
fsubl
in
inc
hlt
mov
je
or
adc
mov
cmpsb
sub
mov
testl
shll
pop
jb
int3
test
sub
sub
mov
rcrl
dec
jnp
icebp
rolb
sbb
xchg
outsb
cld
pop
or
inc
or
sub
lock
imul
loopne
orl
sub
lods
xchg
enter
and
jmp
xchg
push
les
push
inc
cli
lret
scas
pop
pop
fisubs
fcmovb
xchg
mov
xor
loop
loopne
divl
outsb
cltd
out
jno
jle
xchg
rcl
mov
scas
aaa
pop
add
and
add
xor
xchg
xchg
scas
je
xchg
mov
push
xchg
xchg
mov
mov
add
testb
and
pop
push
dec
pop
gs
fsubl
in
daa
push
icebp
adc
jg
or
sub
cmpsl
sarl
pop
mov
aas
and
and
xchg
test
add
fs
mov
dec
add
push
cli
jecxz
pop
xchg
dec
mov
dec
aas
mov
bnd
into
data16
leave
lret
inc
cmc
pop
dec
mov
iret
xor
xchg
gs
xchg
lds
push
jl
ret
fistpll
jecxz
insl
push
sarl
movsb
pop
in
sbb
out
cmp
mov
in
or
mov
lret
loope
cmp
bound
sbb
scas
dec
cld
lods
mov
inc
xchg
cmp
jg
jecxz
cmp
adc
inc
ja
xor
iret
jl
outsb
dec
iret
mov
sbb
es
and
mov
mov
je
and
adcl
push
mov
sarl
adc
repnz
mov
dec
and
cmpsl
pusha
test
jl
stc
rcll
cmp
nop
jns
into
hlt
out
outsl
popf
add
scas
iret
add
mov
stc
into
test
sti
mov
cwtl
daa
and
pop
leave
cli
adc
push
mov
std
xchg
xor
mov
push
insl
xchg
cltd
and
push
out
sub
je
rol
iret
inc
xchg
rcr
mov
mov
xor
mov
lea
mov
pop
mov
xor
pop
inc
imul
mov
inc
push
adc
inc
int
outsl
dec
outsb
mov
fwait
mov
nop
ds
andl
js
ljmp
adc
daa
fisubrs
ret
xchg
pop
fwait
mov
pop
rcr
jae
in
adc
or
pusha
sahf
inc
push
lahf
sub
int3
es
repnz
cmc
sub
data16
pusha
test
lds
inc
in
and
cmpsl
aas
outsb
dec
test
dec
push
lods
es
shlb
inc
movsl
mov
add
dec
cmpsl
and
and
push
xor
and
dec
lcall
mov
push
sti
push
inc
je
outsl
mov
outsl
sub
sbb
xor
jne
movsl
repz
inc
or
inc
and
jbe
imul
scas
mov
xor
dec
mov
adc
fbld
inc
and
mov
fnstenv
inc
xchg
pop
dec
fld
inc
stc
out
sbb
inc
mov
hlt
pop
xchg
in
inc
mov
sti
ljmp
pop
jb
hlt
add
mov
out
pop
dec
mov
ds
jecxz
sahf
int3
sub
dec
nop
fbstp
imul
adc
push
js
cmp
lea
outsb
lods
popa
scas
xchg
mov
fstl
push
jno
push
mov
or
mov
mov
add
lock
and
inc
push
dec
mov
daa
mov
gs
rol
lret
mov
jne
pop
push
xor
adc
inc
mov
adc
sub
xor
lods
jecxz
inc
mov
dec
inc
mov
js
or
cmpl
jb
sub
add
mov
mov
jns
jno
arpl
pusha
and
dec
inc
cmp
mov
or
pusha
push
outsl
jle
xor
adc
xchg
mov
pop
jmp
dec
xor
imull
lret
pusha
lret
repz
shlb
lock
and
js
inc
pop
bound
out
inc
mov
das
jo
cmpl
pop
movsl
fucomi
rcl
push
mov
sub
pop
ss
and
and
rclb
push
sbb
or
push
push
add
lcall
jno
roll
and
outsb
jo
mov
mov
fisttpl
test
cld
lea
sub
aam
xor
test
push
movsb
dec
mov
rcr
push
pop
xchg
sbb
or
popa
fsubs
pop
orl
fldenv
push
scas
movsl
lret
in
adc
mov
jecxz
sbb
or
pusha
lods
aas
hlt
or
mov
ret
mov
roll
adc
sub
shll
jl
call
mov
push
push
ja
nop
jmp
adc
outsl
hlt
cmpsb
mov
jns
imul
push
dec
jbe
mov
mov
sbb
repz
cltd
test
mov
dec
pop
rorl
or
clc
ja
mov
js
dec
mov
pop
pop
sub
xlat
in
mov
icebp
lret
and
jno
loop
mov
mov
inc
jmp
cmp
cs
push
add
fists
pop
popf
inc
lds
aad
push
das
sar
filds
int
pusha
cmp
mov
jecxz
test
ret
int
mov
mov
sub
mov
xor
mov
insb
jmp
jne
mov
inc
dec
icebp
push
jle
shll
mov
push
popa
gs
js
jne
pop
in
hlt
pop
sahf
inc
mov
sbb
sbb
dec
std
jmp
sti
cmp
fiaddl
xchg
add
mov
jns
pop
orb
push
js
inc
xchg
xlat
shlb
ret
dec
dec
inc
rcrl
sbb
out
pusha
cmovbe
and
je
decl
cmp
daa
loop
push
pushf
imul
es
jno
xor
or
adc
daa
andl
repz
xchg
push
test
outsl
push
arpl
mov
lcall
in
fldt
inc
mov
jb
test
adc
popf
lods
gs
loope
sbb
xor
mov
outsb
or
xchg
pop
sub
ljmp
jge
push
inc
call
cmp
sub
jl
shlb
in
jne
es
je
test
mov
pusha
lock
pop
aam
test
cmp
adc
pop
sbb
inc
mov
iret
outsl
inc
jle
mov
nop
add
adc
ret
push
xorb
je
pushf
mov
add
push
cli
push
icebp
incb
jbe
dec
sub
test
jg
andb
or
das
push
test
fbstp
push
push
sbb
lret
lods
in
or
flds
jle
nop
cmp
shll
mov
outsb
dec
push
mov
stc
sub
mov
and
dec
and
xor
test
mov
sbb
ljmp
xor
cltd
dec
sbb
fwait
mov
push
mov
sbb
mov
pop
xlat
mov
fistpll
and
outsb
dec
push
dec
lods
out
dec
push
xchg
xchg
fwait
mov
mov
mov
lcall
cmc
jo
fnstsw
xchg
xor
or
adc
sbb
push
cltd
mov
mov
pop
adc
jbe
and
insb
xchg
pushf
add
in
pusha
std
in
inc
rcrl
mov
int3
adc
cwtl
out
insb
clc
ljmp
or
or
and
jbe
sbb
jno
in
cwtl
pop
pop
and
or
inc
mov
xchg
test
scas
enter
sti
adc
popa
cltd
aaa
jo
fcmovnb
pushf
pusha
mov
ficoms
pop
jnp
mov
lods
mov
je
push
ret
enter
data16
sbb
push
cwtl
arpl
lret
clc
lcall
xchg
test
in
inc
mov
out
xor
call
sub
mov
sbb
mov
ds
mov
xchg
shll
mov
jg
xchg
dec
xchg
call
sbb
sahf
aaa
shl
and
je
fmuls
insl
iret
cmp
xchg
xor
xchg
sub
je
in
stos
adc
sahf
ljmp
jo
dec
adc
loopne
push
stos
lods
mov
adc
jmp
sub
xchg
cld
sahf
add
xor
push
fimuls
das
jp
imul
ja
fnstenv
js
push
mov
push
push
xchg
leave
cmp
xor
dec
sbb
iret
dec
xchg
gs
xlat
out
cs
je
sti
add
mov
insb
xor
pushl
cmpsb
ljmp
cmp
mov
xchg
dec
out
stos
pop
inc
in
dec
fs
push
mov
fstpt
movsl
es
arpl
mov
test
rolb
loopne
adc
xor
jl
ljmp
iret
lret
pop
les
push
add
std
dec
hlt
jb
jl
shlb
mov
mov
jl
pop
fisttps
sti
mov
jecxz
jnp
pusha
and
data16
pop
or
inc
jle
dec
cmp
pop
fsubrs
xchg
pusha
das
fwait
jb
jnp
orb
div
in
mov
outsb
fs
iret
or
sub
xchg
push
xchg
add
mov
out
out
jbe
dec
jp
movb
jl
inc
pop
je
test
jbe
nop
cmp
cltd
test
iret
inc
dec
je
movsb
shlb
out
cmpb
dec
jnp
loope
cmpsb
and
lret
adc
mov
cli
lea
add
mov
sbb
loope
sub
inc
sub
add
inc
adc
stc
push
inc
adc
mov
sbb
dec
fcomp
or
xor
adc
in
jle
cmp
int
aas
mov
sbb
in
add
fbstp
movsb
mov
fadds
cmp
push
cmp
inc
lock
jb
pop
sbb
lods
str
out
in
push
lret
or
mov
or
sbb
ds
repz
jl
mov
cltd
addr16
pop
sub
addr16
outsl
push
dec
cli
pop
sub
xchg
adc
popa
inc
pushf
ret
add
fcmovbe
sub
aaa
ss
xor
insl
inc
pop
mov
sbb
mov
dec
nop
sub
push
filds
lods
adc
arpl
xorps
mov
movsb
xor
cmc
in
inc
loopne
xor
add
adc
mov
jp
push
adc
mov
out
dec
push
ror
ret
sub
and
add
mov
imul
aad
cs
repz
call
or
iret
xchg
addr16
daa
pop
jp
in
push
dec
sbb
popf
mov
mov
divb
push
iret
or
sub
or
xlat
aad
js
leave
shll
pop
sub
lahf
cmpsb
inc
fnstsw
sarb
sbb
dec
xchg
and
int3
sub
dec
sub
cmp
outsb
out
std
push
and
test
lds
sbb
imul
in
dec
iret
sti
pop
mov
add
cld
inc
sbb
or
push
outsl
dec
add
in
or
jno
int3
mov
sbb
sarb
push
in
lods
or
fstps
or
stc
fstps
push
and
cmpsl
dec
ret
fisubs
loopne
mov
pop
mulb
das
pusha
fadds
mov
jae
lahf
rorl
je
inc
stos
mov
mov
inc
daa
std
or
cmp
dec
popf
dec
loope
ljmp
ficomps
adc
les
pop
enter
and
cltd
mov
sbb
sub
xchg
inc
loope
popl
cmpsb
jno
dec
push
bound
dec
aam
cli
sbb
sbb
mov
icebp
xchg
xor
sti
stos
xchg
jne
daa
mov
enter
sub
cwtl
add
sub
sbb
adc
jo
imul
sarb
mov
pop
xchg
addl
mov
inc
pop
loop
repz
push
rcrw
test
add
notl
cmp
jo
sahf
adc
pop
cmpsb
xchg
cmpsb
dec
loop
aas
dec
ljmp
sbb
cs
mov
mov
jmp
clc
sub
mov
arpl
aam
mov
dec
sub
data16
inc
push
mov
mov
repnz
pop
push
ss
adc
inc
out
xor
call
loope
aaa
in
xor
sub
push
jae
xlat
jb
push
and
push
mov
pop
jae
or
cmp
or
mov
inc
stc
lret
xchg
lahf
popa
lret
add
xchg
xor
push
stos
aam
in
lods
mov
sarl
push
sahf
xor
cmpsl
xor
push
roll
mov
mov
icebp
push
mov
not
or
xchg
nop
loopne
xor
add
add
inc
jno
test
mov
lock
icebp
jp
int
push
add
push
cmp
adc
lods
mov
jg
jno
mov
scas
xor
xchg
out
sbb
add
push
lcall
mov
jle
jl
pop
add
mov
cmp
sahf
loopne
inc
sbb
and
ret
jb
rcrb
fcomps
pop
andl
mov
std
loop
out
hlt
dec
jp
sbb
dec
xor
xor
testb
cmc
sub
movsl
adcl
mulb
gs
bound
pop
jnp
sub
jecxz
dec
mov
fcmovne
cmp
or
cmp
jg
test
fdivs
pushf
cli
clc
mov
adc
idivb
ret
xchg
outsb
jg
fmull
xchg
jno
cmp
cmp
adc
jle
in
scas
out
scas
cmc
cmp
sahf
test
jp
jb
jge
std
das
fbstp
jb
movsb
xor
fwait
and
fnstsw
scas
lret
dec
xchg
mov
in
inc
dec
add
jns
popa
xor
dec
push
dec
dec
xor
into
or
sbb
mov
scas
xor
pusha
test
pop
pop
shrb
outsl
mov
pop
insb
xchg
fiadds
pop
test
xchg
mov
lahf
push
orb
je
add
mov
dec
mov
add
pop
sbb
sti
js
push
roll
and
int3
lcall
fisubl
sub
pop
mov
idivl
testl
adc
out
mov
loope
dec
loope
insb
mov
push
sahf
mov
and
scas
lock
lods
bswap
jb
pop
sub
gs
push
push
dec
sbb
pop
dec
xor
xor
mov
faddl
pop
sub
orl
lcall
sahf
sbb
jge
pushf
imul
pop
jb
shll
enter
jne
in
dec
push
or
pop
fwait
lret
add
subb
iret
jl
adc
pop
sbb
push
push
movsl
ret
add
xchg
mov
imul
and
push
js
popa
cmp
fsubl
loope
cmp
popa
and
fcom
aaa
pop
adcb
jne
ss
mov
mov
in
sbb
mov
movsl
clc
fs
mov
cmp
scas
call
mov
push
cld
rcr
mov
fsts
addb
mov
out
xor
hlt
orb
add
imul
fs
dec
dec
in
arpl
addb
test
stc
push
jnp
lcall
dec
xchg
fcomps
imul
int
js
dec
xlat
push
inc
pusha
push
nop
cmp
xchg
into
push
sbb
aad
insb
fnsave
sbb
inc
adc
out
cmp
std
add
popf
mov
and
mov
sbb
cli
pop
pop
add
ret
fsubrl
out
loopne
aad
movsl
negb
inc
imul
sbb
or
sub
push
xor
push
mov
stos
pop
push
loopne
int3
aam
inc
push
das
xchg
fmull
add
adc
mov
jo
xchg
stc
mov
pop
pop
inc
in
sbb
adc
fsubl
sub
imull
sbb
push
rcll
arpl
dec
loope
cmp
cmp
cld
icebp
add
into
ret
push
mov
inc
lea
adc
dec
shlb
inc
inc
xchg
cmp
add
push
int3
adc
cmp
push
outsl
pop
fbld
cmp
cmpsl
add
cmc
aam
sbb
ds
cmp
sar
dec
adc
sbb
scas
inc
cmpsl
int3
inc
mov
mov
jb
ljmp
shrl
mov
out
je
add
shl
movsb
cmc
jo
lret
in
xor
ja
mov
out
and
cmp
in
icebp
mov
aam
cmc
js
mov
enter
mov
dec
rorl
sub
repnz
jne
cmp
inc
stc
mov
push
and
insl
adc
cmp
addr16
mov
lahf
inc
fwait
xor
mov
stos
pop
or
xchg
xor
sub
sub
mov
cmpb
inc
out
pusha
xor
popa
sbb
subl
mov
xchg
push
jge
push
xor
inc
mov
arpl
pop
dec
mov
inc
xchg
xor
xchg
int3
adc
outsb
cmpsb
mov
lds
push
lods
icebp
loopne
sbb
sub
sbb
sub
pusha
xor
jae
inc
test
in
sub
pushf
je
fdivl
jne
jo
jecxz
adc
mov
loopne
xchg
inc
stos
cmp
mov
out
cmp
or
into
mov
notb
inc
sub
dec
inc
cmc
les
arpl
mov
push
inc
out
int
push
movsl
movsb
xor
pop
dec
movsb
fucomip
mov
stc
neg
cli
xor
inc
sbb
dec
ret
mov
movsb
mov
and
add
cmpsb
sub
xor
mov
and
ret
push
arpl
insb
or
jne
add
xor
push
shl
xchg
fdivrs
inc
mov
scas
xor
std
jl
or
in
push
push
cmp
and
cmp
adc
jns
adc
add
lds
sub
adc
cmpsb
insl
cmpl
fdivl
sbb
inc
push
insb
dec
shlb
mov
xor
sarl
bound
inc
stos
push
xor
jbe
inc
cmpsl
and
mov
fwait
jbe
pop
in
dec
mov
enter
insl
mov
fsub
lret
sub
repnz
dec
mov
xchg
in
xor
das
xchg
or
cmp
addr16
shll
mov
cmp
mov
xchg
sbb
pop
push
inc
inc
popa
ds
insl
outsb
fsubrl
cmp
mov
dec
mov
lcall
lods
and
and
leave
and
fwait
and
data16
mov
dec
xor
fcmove
dec
ret
scas
push
shrl
popf
test
xorb
pop
test
xchg
add
jnp
or
add
mov
or
cmp
cmp
je
mov
xor
jbe
repz
or
stos
sub
xchg
repnz
jecxz
stos
mov
pop
int3
sub
jmp
cmp
orb
outsb
popf
call
ds
add
lock
add
mov
adc
adc
pop
loope
mov
add
int
popa
aad
and
inc
jo
xbegin
inc
hlt
sub
jno
mov
aaa
push
jb
jbe
mov
nop
movl
ljmp
fsubs
sbb
push
shll
or
or
inc
push
into
mov
addl
gs
pusha
pop
leave
cmp
mov
adc
xchg
sti
or
dec
stos
xlat
add
pop
arpl
push
push
push
movsl
inc
xor
xchg
jae
add
xchg
iret
sbb
xchg
sbb
xchg
mov
ss
loopne
push
stc
fcomi
into
mov
jge
aaa
cmp
pop
cmp
repz
pop
or
mov
ljmp
ret
mov
iret
push
dec
pop
mov
dec
ljmp
xchg
inc
cmp
stos
dec
xor
mov
mov
rcr
rolb
lret
pop
inc
and
xchg
mov
sbb
pop
inc
xor
icebp
popa
insl
ja
xchg
xchg
scas
pusha
fidivl
xor
push
mov
jnp
sub
mov
mov
cmp
pop
inc
xchg
xlat
inc
js
xor
and
or
fwait
loop
lret
aad
pusha
cmc
jae
mov
dec
push
or
lea
mov
incl
cmc
xor
dec
fwait
cmp
leave
mov
add
jmp
and
mov
cwtl
and
adc
clc
pop
out
mov
mov
xlat
inc
sbb
inc
loope
dec
dec
and
testb
mov
add
jo
sbb
push
adc
mov
lahf
cmpsb
pop
xchg
jecxz
pop
pop
push
pop
mov
mov
test
sub
jl
pop
mov
mov
lret
push
mov
sar
sarb
pushf
add
adc
push
pushf
pop
inc
repz
mov
in
test
shrb
lds
dec
call
add
fdivr
shll
jp
mov
jl
dec
jno
aas
sub
enter
fs
lret
pop
dec
add
and
gs
adc
push
mov
jo
incb
jns
ja
sti
insl
dec
outsl
lahf
aaa
push
sti
mov
push
jecxz
test
stc
in
into
or
or
push
mov
mov
xor
test
jle
loop
mov
das
imul
mov
jg
lahf
idiv
lcall
inc
push
xchg
out
lea
cmp
jmp
jae
cmc
jle
enter
or
push
mov
push
pop
bound
les
mov
inc
push
enter
push
pusha
and
and
sahf
inc
ret
adc
stc
leave
jge
or
sbb
sub
enter
sbb
or
orl
cwtl
imul
mov
addr16
lahf
decl
sbb
and
insl
mov
jmp
scas
xchg
fisttps
xor
mov
jb
jns
std
popa
mov
loop
aad
mov
lods
ja
out
setae
sbb
mov
enter
mov
jnp
je
push
addr16
shll
jns
push
push
pop
addb
adc
fildl
insl
scas
popf
push
xlat
xchg
inc
sar
lea
bound
sahf
addr16
fwait
arpl
cli
add
push
shl
inc
xorb
or
xor
sbb
cmp
lock
jmp
push
push
in
dec
lcall
out
dec
inc
clc
or
test
push
dec
jle
jbe
andb
or
pop
mov
int
fildl
mov
and
and
pop
fsubs
mov
jae
push
aad
cld
movsl
jae
mov
nop
dec
outsb
jns
mov
xor
mov
push
and
lea
data16
lods
inc
or
cmp
xor
and
lods
push
lods
out
shld
add
xchg
mov
fs
add
xchg
dec
xor
jg
enter
out
cmp
adc
hlt
adc
data16
xchg
adc
inc
insl
scas
scas
lahf
mov
push
inc
add
lahf
clc
fs
int3
out
out
pop
xchg
hlt
dec
dec
dec
push
mov
mov
repnz
cli
mov
ljmp
lods
cmpsl
popf
sbb
jle
bswap
lahf
aad
jl
mov
addr16
adc
cwtl
mov
stc
gs
jb
jno
fmul
data16
xchg
sub
aas
loop
and
imull
stos
pop
pop
pop
stos
hlt
and
and
mov
out
dec
pushf
fucomip
enter
jmp
cmp
inc
add
repz
in
in
jl
adc
xlat
jmp
movsl
imul
adc
add
movsl
ljmp
icebp
sbb
gs
pop
cmc
jne
lock
pop
test
mov
mov
lods
or
pop
sbb
push
or
bound
pop
jmp
js
mov
xor
push
cmpl
mov
les
ficoml
sahf
test
dec
rol
imul
sbb
sahf
rorl
lods
push
mov
aaa
out
push
pop
dec
xchg
xor
scas
cs
out
dec
xchg
jle
lds
push
xchg
fcmovu
fistpll
xorb
fidivrs
in
lock
stc
add
mov
mov
repz
mov
cmc
lea
mov
pop
pop
or
or
cwtl
ds
lods
inc
movsl
iret
subl
or
add
mov
test
rcrb
inc
andl
and
mov
jae
cmp
sbb
mov
sti
leave
int
repnz
mov
inc
xchg
inc
sub
lock
ret
in
lcall
fs
mov
insb
out
repz
aam
push
xchg
scas
push
ja
imul
push
imul
test
pop
jno
and
dec
sub
pop
fdivl
int
mov
inc
sahf
add
push
sarl
call
jbe
pop
daa
mov
xchg
pushf
aad
xchg
adc
ljmp
dec
fwait
mov
mov
in
fsubs
xor
push
or
cwtl
pop
test
mov
std
fcomps
andb
ljmp
popf
cmpsl
mov
jbe
stos
dec
repz
mov
push
cmp
cmp
mov
ljmp
insl
inc
push
gs
mov
hlt
jo
mov
add
mov
in
gs
insl
sahf
dec
inc
daa
or
sbb
pop
sti
adc
pusha
movsb
in
iret
and
scas
mov
inc
andl
dec
xchg
adcl
xchg
arpl
sub
and
or
dec
push
sub
xchg
mov
out
test
xchg
rclb
mov
and
aam
enter
mov
inc
imul
cld
xchg
les
loopne
xchg
sub
shlb
add
mov
addl
push
push
xlat
inc
imul
adc
fidivrl
test
xor
insb
sub
inc
push
movl
inc
jmp
cmp
ret
mov
cli
loop
cmpsl
addr16
add
repz
pop
add
pop
in
lahf
adcb
leave
xchg
fidivl
push
or
shll
ljmp
mov
cmp
inc
repz
aaa
scas
mov
mov
fdivr
fdivrs
test
in
iret
mov
stos
repz
test
int3
dec
dec
jecxz
ret
mov
into
cs
mov
outsb
outsl
sarb
fidivs
mov
pop
fs
shll
mov
push
sub
test
jbe
sbb
repz
xchg
and
mov
add
sub
fs
cmp
add
inc
mov
or
fldl
aad
xchg
and
dec
out
inc
and
or
and
jno
dec
outsb
or
dec
push
push
cmp
es
rcll
mov
pop
js
sub
cwtl
push
ficomps
fld
mov
dec
push
add
and
loopne
inc
pop
inc
cmp
cmp
pop
or
or
pop
arpl
add
inc
decl
aas
divb
repnz
mov
cmp
sbb
sarb
adc
rcl
test
push
pusha
and
not
adc
out
xchg
fwait
das
jne
in
enter
push
sbb
mov
pextrw
or
mov
scas
adc
add
mov
ja
ds
sbbl
test
in
loope
inc
push
sub
xor
pop
negl
push
stos
adc
and
xor
sbb
rcll
das
outsl
fwait
mov
mov
repnz
int3
add
jbe
subl
mov
pop
and
cltd
fisubl
sahf
xor
mov
lods
mov
push
leave
inc
lahf
push
dec
pop
push
dec
push
rcrl
mov
flds
xor
into
fs
add
in
mov
inc
shll
push
in
cltd
mov
movsl
repnz
mov
push
jbe
xchg
or
iret
out
pop
mov
lahf
shrl
mov
je
cwtl
scas
add
xchg
subl
adc
or
and
outsb
pop
jecxz
in
iret
sbb
pop
cmc
cmp
or
repnz
lods
fsub
popf
jge
and
jne
daa
es
xchg
imul
test
cld
pop
mov
inc
sub
sbb
or
stos
dec
mov
scas
mov
test
pop
jbe
pop
nop
popa
cmp
mov
movsl
aad
loop
jb
mov
add
dec
push
pusha
and
xchg
mov
jns
sub
rcl
pop
push
aad
lret
sub
insl
stc
add
dec
or
repz
jg
push
jno,pt
inc
bnd
or
or
mulb
lret
clc
mov
mov
push
cmp
cmp
inc
rolb
rcll
mov
cli
iret
sbb
aaa
and
hlt
mov
sbb
mov
shlb
push
push
jo
jmp
loop
mov
scas
mov
call
or
popa
sub
lahf
repnz
out
adc
mov
mov
push
and
ljmp
lcall
cmp
jmp
jb
inc
push
cmpsl
mov
mov
sub
mov
iret
adc
jno
imul
nop
xchg
negb
pop
stc
int
jo
ret
mov
outsl
stos
and
inc
outsl
cmp
dec
lcall
sub
cmp
out
mov
dec
stc
out
dec
or
pop
or
cmp
loop
mov
xlat
xchg
lahf
and
aaa
dec
lods
mov
outsb
mov
adc
cmp
loopne
push
addl
rclb
xlat
jae
repnz
jnp
scas
inc
clc
and
xor
xlat
jno
and
stos
dec
cs
push
inc
cmp
out
xor
cmpsb
imulb
mov
and
pop
in
sub
mov
mov
xchg
mov
dec
subl
pop
outsl
cmpsl
sub
push
orb
out
xchg
jp
or
hlt
test
ret
push
push
and
jge
mov
inc
nop
xchg
ret
pop
push
fsubp
ljmp
cmp
and
mov
and
mov
jl
cmp
mov
jecxz
movsb
push
mov
cmpsb
enter
or
pushf
mov
cmc
push
inc
enter
add
jle
pop
xchg
sub
stos
ja
sub
iret
lock
jge
mov
dec
loope
call
cmp
push
popf
xchg
jge
std
mov
xchg
push
mov
dec
jae
arpl
lret
lock
cli
aaa
popf
inc
lods
xor
push
out
xchg
and
or
jo
in
sub
pusha
fstps
into
and
xchg
mov
dec
sub
sub
cmp
push
dec
xor
test
or
lods
and
lea
stc
test
out
testb
fwait
cwtl
test
jb
and
push
pop
mov
pop
jbe
cmp
xor
cmpsb
xchg
mov
push
xlat
movsl
xchg
into
in
repnz
in
sti
lahf
inc
sub
xchg
xchg
or
sbb
jae
xorl
outsl
shlb
shr
xchg
and
mov
xor
dec
add
push
dec
cld
mov
data16
aaa
gs
push
or
subl
xorl
shlb
push
mov
mov
inc
pop
add
ss
negl
out
jecxz
js
aam
roll
mov
out
mov
fucom
mov
add
pop
loop
ret
int
movsb
sub
mov
call
rorb
xor
addr16
push
fdivrl
inc
mov
pop
int
push
lock
adc
sub
call
mov
arpl
das
xor
adc
dec
mov
aad
cs
pop
inc
ror
test
iret
jecxz
lock
clc
js
pop
dec
nop
loopne
add
cmp
push
sti
sub
jno
pop
dec
std
std
sub
in
cli
aad
fwait
dec
data16
loope
sbb
mull
mov
in
jno
jecxz
dec
cs
pop
inc
mov
jecxz
mov
pop
js
sbb
fucomp
sbb
lret
mov
test
imul
xorl
roll
popa
sub
aas
mov
shrl
mov
xchg
xor
int3
and
lds
add
pop
inc
push
scas
addr16
mov
stos
mov
push
inc
cwtl
insl
xchg
in
sbb
mov
xor
arpl
xrelease
cs
shll
lods
sub
fists
mov
sub
push
cld
xor
lea
test
mov
cmpsl
aaa
jnp
pusha
cltd
mov
xor
jg
fmuls
mov
cs
dec
xchg
mov
mull
jns
stos
stc
enter
les
pop
orb
xchg
mov
sbb
sub
mov
leave
fs
imull
dec
testb
mov
scas
or
xchg
xchg
icebp
pop
lods
test
jo
ret
and
mov
xchg
fidivrs
scas
aas
shl
rolb
clc
in
dec
loope
fdivp
adc
mov
xor
dec
push
out
jmp
or
sbb
xchg
gs
push
sub
test
pop
mov
jne
mov
fistpl
dec
cmp
sub
test
cmp
xchg
outsb
xchg
and
dec
xchg
aas
cld
aam
shlb
into
ret
pop
mov
xlat
push
xchg
push
cli
jnp
pop
xchg
and
sbb
enter
and
push
fwait
push
dec
push
or
or
push
xorb
out
mov
repz
cwtl
cmp
dec
lcall
jl
mov
or
add
add
lret
aad
movsl
sbb
ret
push
xorl
cmp
sbb
andb
inc
xlat
jae
mov
push
test
js
sarl
xchg
jmp
clc
inc
ret
lret
imul
pop
ret
pop
inc
sti
inc
mov
arpl
mov
cmp
xchg
mov
cmp
mov
cmp
popa
mov
mov
mov
cmpsb
inc
mov
dec
mov
push
nop
popf
ljmp
fucomip
fistpl
mov
mov
stc
daa
sar
inc
xchg
push
ss
push
push
inc
pop
jle
jnp
mov
mov
jnp
xlat
mov
sbbl
gs
push
pop
int
pop
adc
inc
jmp
xor
xchg
xchg
cwtl
test
jne
jg
xor
loop
stos
movlps
negb
xchg
test
inc
sub
popa
outsl
sub
or
movsb
push
shl
imul
push
xchg
mov
inc
or
sbb
or
mov
fcomps
cmp
aam
dec
sar
in
mov
pop
push
dec
cmp
movsl
out
stos
pop
fcomps
outsb
fs
cmp
pop
scas
jne
incb
lds
add
xchg
imul
sub
dec
pop
pop
jle
lret
and
stc
add
int3
mov
or
imul
jge
sahf
imul
dec
fiadds
lock
stos
cwtl
adc
outsl
stc
shld
stos
cmp
fstpl
cmp
ljmp
clc
push
mov
dec
inc
or
xor
push
sbb
outsl
test
or
lock
push
dec
stc
loopne
or
dec
mov
inc
aaa
xchg
mov
push
rolb
psrlw
dec
ret
xor
xchg
jg
push
lods
xorb
fnstsw
inc
in
movb
imulb
fsubr
and
gs
test
xor
adc
and
xchg
cmp
imul
js
mov
dec
jbe
iret
pop
fcmovu
int
cmp
push
lret
aaa
in
data16
incl
fistpl
cs
pop
popa
xor
sbb
adc
pop
xchg
repz
sbb
cmc
add
jo
fildl
xchg
or
jmp
dec
es
imul
iret
sbb
sti
loopne
inc
mov
in
sbbl
scas
push
mov
lock
sub
push
xor
insl
inc
aam
inc
imul
dec
out
ja
pop
stc
lahf
add
cmc
fmulp
add
jns
sub
bound
pushf
fisubrl
insb
and
loope
and
and
sub
ljmp
mov
mov
mov
mov
mov
nop
sbb
cmp
test
test
or
jecxz
jg
cmp
cmc
scas
pushf
mov
adc
outsl
sbb
cmpsb
popa
int
popf
mov
mov
iret
xchg
jae
ret
repnz
leave
sub
out
mov
nop
inc
sbb
ret
pushf
pop
or
push
repz
or
movsl
pop
mul
cs
cmp
mov
lds
addr16
inc
mov
add
clc
or
inc
xor
mov
test
and
das
cmp
cwtl
adc
push
in
xor
test
jmp
ret
push
push
int3
push
mov
jo
into
mov
imul
fs
add
test
movsb
pop
test
leave
fcoms
mov
cmp
push
push
subb
js
pop
jmp
sub
sub
add
sub
insb
push
sbb
dec
inc
fstpl
xor
jns
in
out
xor
push
scas
loope
xchg
and
dec
lcall
mov
inc
push
pusha
fiadds
fwait
jle
clc
nop
ret
add
xchg
out
fwait
lahf
insb
fs
mov
and
lret
fisubs
imul
jg
arpl
mov
push
cli
cmpsb
pop
cmpsl
in
shll
dec
scas
int3
leave
add
mov
sbbb
scas
inc
xchg
cli
call
mov
or
pusha
pop
jb
pop
pop
or
sub
mov
xchg
mov
mov
lock
int3
mov
sbb
test
ds
sbb
cltd
jb
rol
inc
dec
dec
xchg
stos
or
push
lds
movsl
bound
enter
jae
aaa
jmp
jae
cli
cli
andb
fisubrl
and
cltd
lret
popa
inc
add
pop
je
push
dec
orl
xor
daa
jp
xchg
in
mov
dec
data16
aad
dec
adc
mov
xchg
sbb
and
outsb
xor
ja
add
xlat
cmp
pop
sbb
enter
ja
inc
sub
es
push
and
mov
outsl
ss
out
adc
imul
fbld
sub
pop
jbe
cs
test
push
xor
std
ret
lret
stos
xchg
inc
test
popa
fisubrl
insb
adc
fadds
or
jmp
or
lea
and
gs
cmp
mov
addr16
jmp
hlt
add
add
dec
out
mov
movsl
lods
adc
xor
leave
adc
int3
out
subb
adc
cmp
cmp
incb
popa
cmp
mov
mov
fistl
aas
sbb
jns
lret
arpl
add
and
pop
jbe
dec
dec
stos
xchg
outsl
leave
out
ffreep
push
call
mov
fisttps
lea
mov
popf
testl
and
xor
les
shrb
fisubl
int
sub
fwait
pop
scas
push
adc
stos
pop
xchg
inc
ljmp
xchg
adc
mov
or
sub
js
out
mov
hlt
sarl
mov
adc
mov
mov
fstpl
loopne
jmp
jge
icebp
xor
movsb
mov
jle
je
subb
daa
add
push
lcall
mov
ret
fs
sbb
push
mov
mov
adc
out
loope
push
iret
cmpsb
pop
dec
cli
dec
add
popa
lods
sbbl
and
pop
loope
push
dec
mov
lahf
cltd
mov
inc
push
mov
dec
je
xchg
jp
xchg
jnp
adc
xchg
adc
iret
mov
push
loop
cmp
imul
xor
dec
jb
movsl
pop
test
addl
movsl
jg
push
rorl
sti
jbe
ret
and
jmp
xchg
aas
mov
lret
addr16
sub
or
loopne
addb
popf
nop
movsl
jmp
fsubrl
out
dec
outsb
push
xchg
push
sbb
xchg
test
sub
xchg
enter
jl
gs
pop
dec
mov
xor
dec
mov
popa
insl
push
fstpt
mov
cld
mov
mov
cwtl
leave
cmp
aas
test
bound
or
cmpb
scas
popa
push
out
cmpsb
pop
xchg
pushf
faddl
sub
pop
push
pop
mov
les
mov
or
fwait
dec
mov
mov
les
repz
add
xor
enter
fstpl
inc
rclb
sbbb
mov
push
mov
push
sub
aad
mov
or
mov
outsb
aad
mov
mov
push
rorl
lea
mov
xchg
xorb
mov
test
aam
jge
push
mov
push
cs
inc
mov
push
or
xorl
push
pop
jp
gs
ficompl
insb
sub
test
push
or
ret
jbe
lods
pushf
les
pusha
add
stc
add
cmpsl
aad
mov
or
or
push
in
outsb
lcall
out
push
mulb
xchg
insl
repz
sub
testb
or
add
sahf
adc
je
movsb
divb
imul
ljmp
adc
lcall
sub
pop
jnp
les
jl
dec
jmp
sbb
mov
jne
bound
adc
je
jne
mov
imul
cmp
xor
in
nop
mov
or
fistl
inc
les
mov
std
ss
into
dec
into
fldl
lock
mov
dec
xchg
xor
popf
xchg
mov
mull
cmc
push
xchg
aad
add
pop
pop
mov
testl
pop
es
dec
xor
test
xor
inc
mov
add
movsb
pop
inc
and
jo
push
out
int
cmp
jg
xlat
or
data16
xchg
push
out
xor
mov
push
fsubs
mov
in
push
out
test
xchg
mov
or
mov
lock
cmc
leave
daa
test
fmull
jmp
andb
add
out
and
fstpl
bound
idivb
inc
pop
pop
clc
and
fcoml
pop
pusha
xlat
mov
mov
add
dec
ljmp
adc
loop
gs
lods
ror
dec
int3
cltd
push
mov
insl
mov
adc
xor
or
mov
mov
pushf
mov
nop
push
add
push
test
icebp
cmp
testl
pop
sbb
fiaddl
fldz
push
sub
stos
aaa
mov
andb
xchg
xchg
mov
lret
addb
fisubs
mov
push
mov
cs
adc
cwtl
scas
sbb
mov
xchg
aas
or
fcoms
pusha
ja
xchg
add
xor
pop
fisubs
and
push
jp
xchg
test
mov
adc
lahf
stos
mov
pop
aad
shlb
cmp
push
loope
ret
int3
imulb
pop
add
fstl
mov
pop
xor
int
outsl
or
lods
xchg
lcall
inc
inc
outsl
adcb
mov
nop
and
fisubl
movhps
dec
popl
xchg
push
cli
cli
sbb
mov
add
or
xchg
out
push
xor
stos
push
mov
repz
ljmp
sub
stos
mov
sbb
movsb
daa
cmp
bound
mov
ljmp
imul
push
jle
fldl
cmp
inc
xor
fwait
sti
cwtl
mov
mov
into
dec
pop
dec
jmp
scas
popa
sub
clc
stc
adc
xchg
fwait
insb
dec
cmp
mov
call
mov
jl
mov
aam
es
int
jae
mov
dec
rorb
jae
xchg
je
mov
push
mov
sbb
test
sbb
push
mov
lds
xchg
or
jo
add
inc
gs
movsl
fnstenv
sar
mov
jle
push
jecxz
and
jnp
stos
jge
mov
mov
push
inc
add
into
hlt
xor
pop
out
push
sub
lcall
andl
outsl
mov
mov
imul
xor
xchg
and
in
mov
lahf
sub
mov
dec
dec
roll
pop
pop
pop
ljmp
push
test
mov
mov
out
and
sbb
clc
out
sub
sahf
movsb
jp
into
fistps
xchg
and
lods
or
rolb
adc
fbld
out
cld
scas
into
push
stos
rolb
shll
jge
icebp
jns
add
jge
sbbl
mov
stos
mov
mov
jl
hlt
cmp
cmpsl
and
rcrl
push
sbbb
hlt
jecxz
into
int
test
mov
inc
push
rcll
es
sub
and
or
xor
mov
push
sub
inc
fsts
lahf
push
fwait
push
push
sbb
pop
lcall
popa
scas
sbb
shlb
jecxz
insl
in
pushf
xor
or
cwtl
test
imul
mov
je
pop
and
mov
sbb
dec
mov
lds
mov
stos
jle
lret
pop
jmp
mov
mov
cmpsb
sbb
jne
dec
add
mov
shll
jcxz
cmp
sbb
adc
scas
add
mov
outsb
lods
cwtl
mov
fnsave
mov
imul
xor
orb
inc
pop
and
jp
push
stos
jb
or
imul
addr16
mov
mov
or
repz
faddl
popf
dec
xor
js
cmpsl
cmp
rcr
dec
mulb
inc
jg
mov
pusha
jp
stos
enter
xchg
rcr
arpl
mov
push
xor
mov
or
cmp
pop
rol
fistpll
pop
jmp
mov
les
roll
xchg
mov
push
movsl
rcl
dec
andl
or
addr16
lods
jae
pop
jp
ss
sub
add
cmp
inc
inc
into
ja
xor
sbb
std
fwait
mov
mov
dec
sarb
das
lahf
push
sti
xchg
and
pmaddwd
ret
stos
scas
or
cwtl
xlat
cs
add
icebp
pop
mov
jmp
ret
jae
and
mov
mov
and
arpl
lea
pop
shrb
jne
add
sub
movups
inc
ret
decb
push
fdiv
out
fmul
iret
iret
xor
fldt
mov
pop
add
aam
mov
aam
sbb
iret
mov
pop
mov
lret
adc
or
sti
fdivs
shrb
and
scas
push
movsb
add
in
cmp
imul
gs
xchg
xchg
sbb
subl
cmp
cmp
int3
loop
cmc
data16
scas
inc
inc
dec
jns
mov
scas
jle
jo
jmp
mov
add
cmp
inc
jb
out
fldl
out
dec
lock
in
cld
jno
jl
loopw
mov
shl
aam
std
mov
out
xor
sbb
cmp
jo
pop
cwtl
lods
adc
xchg
xchg
lods
jmp
jns
out
or
dec
xchg
repz
lods
imul
sub
or
xor
icebp
cmp
jno
aas
stc
sahf
push
adc
sbb
pop
les
pop
jnp
push
sub
mov
fmull
add
push
leave
je
dec
mov
scas
pop
leave
out
lods
cmp
dec
orb
and
mov
xchg
aad
cltd
xchg
in
ror
mov
ds
aas
xor
mov
insb
or
jo
xchg
rorb
lea
mov
lds
mov
scas
adc
xchg
add
fidivrl
and
or
into
and
js
data16
jp
jno
mov
jo
mov
cmpsb
or
addr16
cwtl
sub
or
cltd
shlb
mov
cmp
ds
ljmp
scas
or
jecxz
fs
fwait
mov
mov
lock
arpl
inc
inc
push
push
popa
cmp
lea
idiv
push
shll
or
pop
add
push
insl
xchg
xchg
add
sbb
cli
sbb
pshufw
es
xchg
into
adc
rcll
sub
test
push
push
jecxz
test
pop
push
std
cli
pop
aad
pop
test
jmp
sbb
int
loop
popa
std
fnstsw
mov
jbe
or
adc
push
mov
jecxz
pop
cmp
out
sub
mov
fs
insl
lea
ret
mov
xorl
mov
adc
cmp
xlat
imul
call
out
push
inc
sub
rol
sti
lahf
or
adc
imul
xchg
cmp
mov
or
shl
push
out
rcl
ret
in
mov
lcall
cli
loopne
pushf
jae
hlt
cmpl
pushf
es
mov
or
mov
inc
sahf
clc
test
mov
sub
cltd
jno
int3
push
cwtl
imul
pop
or
dec
cmp
cltd
scas
out
sarl
nop
or
iret
jge
mov
stc
mov
iret
mov
sub
out
cmpsb
aas
push
jmp
andb
pop
push
sub
ret
fadd
jne
mov
xlat
xchg
pop
das
popf
and
imul
and
push
movsb
or
cld
pop
lcall
stos
pop
andl
jl
inc
lcall
sahf
mov
cmpsl
mov
scas
lcall
fsubrs
push
fildl
xchg
pusha
pop
push
ror
fwait
mov
arpl
clc
fsubrl
loopne
rcrl
sbb
iret
jmp
lods
adc
imul
mov
fstl
adc
rcll
cld
lds
imul
mov
cmpsb
sub
gs
pop
inc
fs
push
nop
fnsave
lods
push
sub
hlt
push
cmp
ja
faddl
ja
mov
dec
out
inc
fstpt
add
push
add
aas
outsb
jae
adcb
and
dec
rolb
dec
jae
mov
out
and
sub
cmp
mov
add
mov
lds
sub
push
pop
cmp
popa
xchg
mov
scas
add
jb
test
and
int
fptan
dec
je
das
pop
add
dec
pop
ja
lcall
movsl
outsl
cli
sti
inc
inc
filds
mov
inc
test
mov
mov
scas
aad
cmp
jg
xchg
scas
fcoms
xchg
mov
mov
cmpsb
xchg
fists
outsl
pop
push
fdivp
pop
js
push
fnsave
out
jmp
aas
insb
les
iret
hlt
outsl
mov
pop
mov
mulb
sub
and
sbb
push
mov
sbb
popa
nop
call
or
push
push
lcall
mov
dec
or
jmp
leave
ss
imul
mov
leave
stos
push
repz
cmpsb
mov
incl
xor
mov
movsb
int
dec
jnp
push
sub
xchg
sbb
adc
add
dec
and
dec
inc
es
dec
lock
fidivl
mov
jge
in
lods
inc
xchg
imul
rclb
mov
lea
or
sti
jg
mov
movsl
adc
leave
in
aaa
push
and
std
fmuls
xor
inc
sub
fisubrs
mov
mov
add
movlps
adc
push
mov
push
test
jb
hlt
jae
outsb
mov
sbb
mov
pusha
daa
adc
loope
shr
and
lds
xor
test
ffreep
jle
mov
push
xorb
and
mov
in
lea
mov
enter
insb
sahf
sti
sbb
push
mov
popa
push
xor
fucomp
gs
push
pop
lahf
mov
xchg
sbb
mov
push
xchg
loopne
dec
sti
inc
push
dec
test
push
sbb
sub
xor
pushf
cwtl
stos
mull
fistl
test
lret
ljmp
pop
adc
jb
mov
add
outsl
movsl
or
andb
or
aas
jmp
cmp
rcl
or
cmpsl
pop
rcl
repz
push
mov
fimull
push
mov
mov
js
pop
xor
bound
or
imul
inc
mov
cwtl
xlat
pop
popf
call
add
inc
mov
aad
jg
out
js
mov
int
or
pop
popf
mov
movsl
push
rcr
daa
stos
pop
sldt
std
fcmovnb
sub
lcall
push
sbb
cmpb
shll
scas
mov
xchg
insl
push
xchg
outsl
leave
mov
fimull
jge
pop
mov
push
xor
mov
inc
xor
mov
lea
or
jg
adc
rcl
inc
push
test
fwait
add
addr16
sbb
jg
mov
fs
jbe
pop
fidivrl
sti
jnp
into
fbstp
dec
dec
and
push
xchg
cmp
add
imul
daa
mov
mov
in
add
ret
fld
adc
mov
sbb
out
cmp
cmc
push
stos
mov
inc
push
xor
rorl
lcall
das
in
icebp
rcr
sbb
lret
or
sub
or
and
sarb
arpl
orl
pop
mov
sti
mov
push
aam
pop
lock
mov
aaa
jecxz
push
dec
ret
sub
cmc
mov
jnp
sahf
pop
mov
int
mov
sub
inc
pusha
adc
cmc
push
sbb
mov
push
call
inc
jns
loop
sbb
outsl
inc
or
cmp
adc
movsl
xchg
repz
and
lock
sub
push
js
out
rcrl
fmul
imul
les
les
inc
jo
sbb
mov
or
push
jns
rolb
xor
call
push
fsub
imul
je
mov
xchg
insb
gs
mov
dec
mov
int3
int
hlt
xor
clc
lock
lock
and
lret
cli
iret
ret
in
dec
pop
addr16
add
imul
lods
hlt
adc
ror
in
int
add
sbb
sbb
add
or
test
lds
ror
nop
cmp
cmp
fs
fcoml
sahf
sbb
cmpsb
jb
std
negl
sub
mov
jg
cmp
outsl
aam
std
test
sbb
sbb
push
out
cld
adc
sub
lcall
rcrl
or
out
mov
js
mov
mov
pop
inc
aam
pop
aas
xor
mov
adc
mov
add
dec
les
xlat
cmp
rcrb
sbb
fidivrs
arpl
mov
or
adc
sbb
daa
mov
jnp
lods
les
add
in
fsubrs
or
xchg
pushf
mov
push
inc
int
push
mov
aad
sbb
xor
ficompl
test
call
jno
cwtl
loopne
aas
fwait
mov
jge
loopne
push
lcall
jg
dec
xor
xchg
popf
mov
jge
or
mov
fnsave
shrl
dec
dec
loop
mov
fistpll
xor
jle
ljmp
sbbb
mov
fadds
int
jg
mov
cs
push
push
cwtl
lahf
fisttpll
xor
jmp
add
stc
sub
jmp
lret
push
shlb
ret
mov
mov
push
loope
mov
push
repz
xchg
push
aam
jno
loop
gs
dec
fs
nop
jmp
pop
jae
inc
sbb
inc
dec
mov
inc
jmp
mov
je
cmpsl
push
movsb
xchg
fwait
daa
add
lods
in
sbb
repnz
jne
pop
jne
cmp
stos
sbb
es
les
cwtl
mov
sub
sbb
imul
bts
push
cwtl
faddl
js
xlat
hlt
fldcw
mov
add
cli
fwait
xorb
lock
outsl
js
pop
jnp
in
or
mov
pop
and
std
xchg
in
sbb
shr
lahf
mov
outsb
or
cltd
push
arpl
mov
xor
sbb
sti
outsb
imul
sahf
jbe
mov
pusha
sub
adc
dec
ret
sbb
sub
xchg
adc
mov
jle
sarl
in
stos
inc
loope
xchg
sub
xchg
push
movsl
ror
outsl
dec
add
pop
jne
dec
leave
add
xchg
or
lea
add
adc
rcl
mov
cmp
or
in
icebp
movsb
popf
sahf
das
fstpt
pop
xlat
jae
lds
and
mov
mov
dec
cmc
inc
in
leave
aaa
call
pop
inc
sahf
sbb
mov
dec
inc
mov
jne
push
leave
lret
jae
rcrl
mov
es
pop
add
mov
xchg
push
xor
xor
add
sbb
pop
pusha
es
or
shl
push
int
cwtl
out
in
push
mov
lret
outsl
push
jae
xor
testl
popf
das
jnp
or
sti
xor
push
fldenv
lahf
mov
xchg
or
fmuls
mov
jecxz
jno
rolb
jne
add
imul
sbb
loope
dec
fs
cli
aas
cmp
gs
js
arpl
clc
lods
jb
aas
imul
jg
enter
mov
and
loop
dec
cld
fists
push
mov
lret
sub
aas
aam
mov
sbb
int3
sub
pop
xchg
jae
push
ficoml
sar
pop
or
test
bound
or
fs
xor
lea
in
push
shl
movsl
imul
xlat
inc
mov
fcmovbe
jo
push
sub
lea
mov
xchg
cmp
xchg
cld
and
ljmp
iret
movsl
ror
jae
xchg
sub
test
mov
sub
mov
rorl
xchg
and
add
and
rcrl
jnp
cs
in
cmp
shlb
mov
jns
pop
xor
jno
xor
jge
pop
lret
loopne
aaa
inc
shlb
lods
mov
insb
aad
neg
xor
sub
dec
inc
ljmp
sbb
sbb
add
adc
adc
fsubrs
test
es
in
pop
int3
lcall
call
sbb
pop
scas
mov
pop
int
jb
pop
push
test
test
hlt
or
ss
out
inc
and
loopne
imul
nop
and
int3
cmpsw
cwtl
cmpsl
ljmp
mov
xor
into
aaa
xchg
push
cmp
ret
xor
dec
pop
jl
icebp
cwtl
or
jbe
or
dec
jle
call
sbb
dec
xchg
pop
pop
add
jg
add
push
test
in
mov
push
movl
adc
mov
imul
iret
sarl
sub
jbe
imull
and
and
out
and
dec
popf
jb
loopne
movl
int3
cld
scas
pusha
fsubs
test
mov
cmpsb
leave
mov
cli
mov
ss
jb
cmpsb
sbb
sti
xor
dec
mov
inc
aaa
mov
in
adc
and
hlt
dec
sahf
or
or
inc
aam
repnz
or
mov
fwait
xor
les
popa
mov
scas
addr16
sbbb
inc
daa
shrl
xor
sub
mov
lea
loopne
sbb
mov
adc
jle
dec
mov
mov
mov
mov
or
popf
mov
xchg
sti
data16
out
push
push
xchg
test
sub
mov
or
cmp
push
xor
mov
mov
aaa
push
sbb
xor
or
fmuls
push
jae
pop
fstpl
mov
pop
adc
and
notb
mov
test
fadds
mov
mov
lods
sti
inc
lret
xchg
testb
jns
and
adc
sbb
sub
xor
iret
xchg
xor
fsubrl
jns
sub
jo
sbb
xchg
loopne
mov
sti
loopne
xor
sbb
mov
jge
inc
in
sbbb
push
data16
cmp
mov
jno
lea
sbb
inc
mov
xchg
ss
rcll
sub
int3
sub
add
fiaddl
bound
leave
loop
xor
push
in
mov
std
sti
js
imul
fs
xlat
roll
fsubr
push
lret
xchg
adc
pop
outsl
jg
lret
and
imul
add
add
jmp
mov
add
nop
rcrb
std
add
leave
cmp
pop
adc
or
push
loopne
or
adc
mov
das
mov
test
lret
xor
cmc
loop
sahf
pusha
pop
jg
add
gs
mov
xor
jno
jl
std
jo
stos
adc
push
or
cs
repnz
loopne
ficompl
sbbl
jbe
add
nop
fidivl
js
inc
pop
shrb
outsb
je
adc
test
lods
sbb
in
sarb
mov
ljmp
in
lods
stos
cwtl
sbb
xchg
mov
pusha
insb
inc
xchg
xor
lea
dec
jg
mov
popa
dec
icebp
sbb
adc
or
aaa
fmul
mov
dec
aam
shlb
jno
pop
jae
into
push
push
cmp
movaps
mov
sti
pushf
and
mov
int3
in
or
outsb
push
mov
lret
push
jge
dec
js
data16
arpl
mov
cmp
stos
outsl
in
in
test
shrl
cmpsl
jg
movsl
insl
add
adc
mov
and
int
or
lock
mov
jae
popf
fcomip
mov
jge
fldt
fucom
jnp
mov
lret
out
sub
out
inc
rclb
fdivrl
mov
sbb
pop
inc
mov
orb
pop
sbb
fs
adc
jl
or
xor
jecxz
out
rorl
push
popa
pop
fsubs
orb
movsl
xchg
sahf
xor
add
scas
mov
dec
xchg
jns
inc
sarb
jecxz
mov
push
push
stos
mov
lcall
inc
adc
fcomps
movsl
fisttpl
imul
scas
jg
loop
push
inc
pop
in
mov
mov
xor
jbe
adc
int3
imul
xchg
sub
inc
out
shr
movsl
or
je
clc
or
inc
cwtl
mov
fdivrp
fstl
cmc
and
inc
jmp
lods
loope
mov
cmpsl
cs
sub
cmp
xchg
xchg
aam
inc
lds
mov
hlt
clc
call
sub
mov
mov
xchg
sarl
xchg
mov
sti
inc
imul
out
sub
insb
aad
mov
fidivrs
out
rcrl
xchg
iret
stos
bt
iret
or
mov
loopne
mov
mov
iret
push
enter
pusha
imul
sub
and
sub
rolb
inc
lds
rolb
outsb
mov
jbe
push
jnp
add
add
gs
mov
cmp
pop
pop
mov
es
push
icebp
mov
loope
jnp
push
mov
pop
fwait
gs
test
or
fstps
enter
addl
mov
pusha
leave
mov
loop
fadd
inc
dec
xchg
cwtl
into
jmp
rorb
xchg
add
mov
outsl
dec
es
push
push
xchg
push
dec
push
scas
ds
loopne
xchg
fsubrs
outsb
mov
adc
sbb
mov
nop
push
jo
das
mov
aas
inc
pop
ret
sbb
push
mov
xlat
or
cmp
inc
repz
push
scas
jmp
push
out
add
jmp
fs
movsl
loope
fisttpll
popa
rcrb
in
or
push
movsl
mov
cltd
popl
adc
dec
jo
popa
dec
stos
test
mov
push
in
repz
add
ret
rcll
push
mov
mov
xchg
in
mov
mov
lock
mov
sub
mov
sbb
ret
push
pushf
pop
sub
sub
rcrl
jbe
addl
dec
adc
pop
sbb
lret
mov
dec
pop
popf
mov
jg
sbb
mov
inc
pushl
add
jnp
jns
sub
mov
popa
jg
cmpsb
out
mov
inc
mov
jge
sbb
mov
mov
push
sbbl
add
cmp
ljmp
sub
xchg
mov
popa
mov
mov
lret
filds
jne
adc
nop
or
lcall
jge
scas
xor
je
testl
in
mov
adc
imul
mov
dec
push
add
inc
sahf
cmp
pop
inc
sub
shrl
and
in
in
pop
add
daa
mov
enter
and
mov
out
jge
xor
ret
aad
data16
sbb
push
sub
fwait
popa
mov
xor
adc
fidivl
mov
test
das
shrl
xchg
cmp
insl
and
shr
lret
loopne
mov
test
dec
sbb
cltd
bound
mov
aas
xchg
inc
pop
stos
jns
ret
loope
jg
and
adc
bound
adc
push
jae
pop
out
xor
sbb
jl
push
mov
sahf
sbb
push
pop
ficoms
out
mov
and
loop
fcmovu
jne
and
pop
scas
ljmp
or
or
adcl
imul
stc
inc
dec
push
iret
outsl
movsl
dec
imull
and
cmp
dec
stos
pop
jecxz
out
push
push
cmp
ljmp
ja
lds
adc
dec
movsl
mov
cltd
jp
pop
add
ret
pushfw
mov
sub
adc
dec
push
repnz
movsl
xor
or
jmp
push
bound
shr
clc
loop
mov
fs
mov
jns
shrb
pushf
adc
stc
arpl
out
mov
push
mov
movsb
sbb
mov
gs
insb
pop
xor
add
subl
push
jnp
in
cmp
dec
mov
lret
dec
sbb
repz
aad
popa
pcmpgtw
and
rcl
mov
test
mov
aad
add
cli
das
outsb
jl
and
dec
xchg
push
mov
push
dec
pop
sbb
push
xchg
fistpll
pop
test
sbb
lds
dec
negb
cmp
iret
pop
fildl
jecxz
jge
outsb
daa
dec
lcall
xchg
add
iret
sbb
xor
mov
sub
push
outsb
in
pop
out
je
sub
iret
dec
adc
hlt
jb
pop
mov
fsubrp
das
addr16
aaa
push
mov
push
popf
sbb
lret
ds
hlt
xchg
popf
es
fstps
adc
cmp
je
or
pop
xor
inc
cltd
and
adc
push
out
inc
dec
insb
cld
inc
sub
mov
or
in
movsb
lret
xchg
lcall
int
fbstp
inc
clc
rep
test
xlat
push
push
jae
or
scas
andb
jno
scas
jae
in
das
mov
xor
jo
mov
mov
imul
jp
sub
movsb
ret
cld
sarl
je
dec
xor
ds
dec
xor
mov
lret
stos
pop
dec
cmp
mov
stos
inc
sbb
jg
xchg
pop
push
xor
jg
inc
adc
mov
enter
lcall
and
lods
mov
sub
popf
xor
cmp
cmp
sbb
lcall
test
mulb
mov
test
addr16
mov
xor
ret
aaa
mov
and
xor
push
rcl
data16
push
clc
repnz
ret
pop
xchg
lods
xor
cmp
jne
add
mov
mov
sbb
sbb
fisubs
sbb
fcmovne
mov
sbb
test
arpl
or
push
sub
iret
test
popf
pop
inc
out
xchg
push
lea
cmp
rcll
xor
cmpsb
dec
pop
addr16
lahf
xchg
push
dec
movsb
data16
outsb
mov
mov
stc
inc
cs
inc
inc
aas
arpl
iret
sub
mov
mov
jnp
fmull
in
icebp
imul
pop
inc
pop
xchg
jmp
shl
dec
scas
mov
sub
iret
cmpsb
dec
pop
stos
xor
mov
mov
pop
pop
in
mov
stos
sarb
mov
notl
mov
bound
inc
mov
push
in
gs
xor
sbb
shll
mov
adc
mov
mov
rorb
pop
jnp
pop
sbb
movsl
sub
jecxz
insl
orl
int
cwtl
adc
lcall
xor
fmul
push
data16
pop
shr
enter
sub
mov
pushf
cmp
mov
jb
xor
mov
xor
mov
fldl
mov
rclb
jecxz
test
ljmp
fisttpll
lahf
int
inc
mov
ret
addb
mov
mov
in
push
rcrb
jne
sub
addr16
dec
push
adc
jg
test
test
push
icebp
adc
add
nop
xor
fwait
mov
dec
mov
mov
mov
cmp
push
or
rcrb
xchg
inc
inc
fs
loope
push
sub
aas
adc
pushf
xor
xor
mov
xor
jo
mov
jb
test
fbstp
xchg
dec
pop
outsl
adc
lds
test
out
popa
test
pop
mov
cwtl
nop
xchg
movsb
push
adc
sbb
fbld
mov
jbe
cmc
imul
fwait
test
test
adc
push
jge
arpl
and
and
fs
xorb
popl
inc
mov
jle
cmc
push
lock
rcrl
scas
in
push
pop
pop
fldl
mov
mov
rorl
or
mov
nop
xor
jg
xchg
ds
push
or
sub
mov
mov
testb
inc
jecxz
mov
pop
push
sbb
push
mov
sti
mov
fs
ljmp
xchg
ret
xor
adc
mov
sbb
push
sbb
imul
lds
fstl
fs
dec
es
xor
push
xor
inc
mov
xchg
test
pop
js
inc
sbb
movsl
mov
and
jmp
push
or
addps
js
cld
xor
in
ljmp
ljmp
out
mov
mov
test
adc
mov
xchg
les
gs
cs
xchg
lods
test
out
mov
mov
pop
mov
leave
int3
fucomip
iret
inc
shrl
or
mov
adc
scas
xchg
push
into
lret
arpl
stc
and
pop
jno
mov
xor
outsl
pop
sub
add
mov
mov
jae
cmp
aam
xor
movsb
pop
xchg
add
jmp
mov
insl
arpl
add
or
mov
mov
xor
stos
mov
out
out
dec
jo
and
and
call
add
out
cmp
cli
hlt
xchg
fistpll
xchg
pop
ret
fisttpl
xchg
sahf
mov
xchg
mov
pushf
and
ss
cmp
sub
jb
jo
adc
sbb
and
lahf
xlat
int
ret
add
outsb
enter
cmp
lea
push
int3
sbb
cs
jl
fnstenv
nop
jae
mov
insb
or
fs
in
sub
scas
mov
cmp
fldl
cld
push
mov
inc
xchg
lcall
jb
mov
pushf
les
clc
inc
inc
int3
adc
sub
sub
jne
leave
adc
jge
enter
cmp
aaa
hlt
in
orl
push
jle
inc
add
jecxz
and
mov
push
adc
cmp
push
dec
mov
jecxz
arpl
in
mov
out
insb
addr16
add
int3
push
dec
das
dec
push
andl
lock
stos
mov
mov
push
sub
pop
in
sbbb
imul
mov
testl
repz
insl
pop
or
fdiv
dec
xchg
push
rcll
cltd
scas
xor
sbb
outsl
int3
popf
or
mov
adc
and
shll
and
cmp
inc
test
or
push
sub
fidivrs
clc
add
test
push
jbe
dec
jnp
xchg
ret
mov
out
jle
fldenv
sar
loop
je
xchg
jbe
movsb
mov
inc
rolb
repz
mov
mov
cmp
inc
add
lahf
inc
adc
adc
sub
adc
lock
inc
cmp
mov
cld
sbb
or
sbb
lahf
jnp
arpl
loopne
clc
jbe
adc
scas
insl
sbb
mov
scas
or
into
inc
add
mov
fwait
inc
ljmp
jbe
sbb
dec
aad
ret
out
adc
mov
sbb
or
out
add
into
inc
fs
mov
arpl
fmull
mov
popf
lahf
std
push
or
insb
jnp
push
inc
pushw
inc
jmp
lock
js
stos
xchg
mov
repnz
cmc
mov
subl
xor
shrl
sub
test
adc
dec
push
adc
cmpsl
mov
stos
xor
mov
mov
insl
fldt
ficompl
test
fwait
inc
insl
ljmp
icebp
daa
add
fildll
pop
arpl
incl
pop
push
xor
mov
outsb
xor
js
inc
inc
adcl
adc
jns
imul
or
arpl
sub
shl
fdivrs
push
flds
cmpsl
dec
add
push
mov
jl
pusha
sub
stos
add
hlt
lret
xorb
movsb
into
shll
mov
sahf
orl
push
push
mov
mov
xor
pop
test
ret
lea
cmp
fmull
stc
or
and
dec
rol
scas
cmp
xor
mov
lods
mov
mov
popa
mov
xor
xlat
aad
icebp
cli
add
jbe
je
adc
cmpsl
and
subb
cmpsb
lcall
or
mov
sti
add
lock
and
popf
mov
xor
dec
jecxz
or
jns
int3
out
call
mov
mov
jge
andl
or
cli
pop
inc
sbb
out
inc
popf
dec
mov
add
mov
and
inc
stc
rorb
sub
loopne
cmpsl
popa
insl
cmp
xchg
sub
mov
cld
loop
cld
mov
push
mov
addr16
in
xor
ret
dec
cmp
push
popf
xchg
in
nop
test
and
sbb
dec
adc
inc
mov
push
test
repz
jb
sbb
push
inc
or
push
jo
inc
or
pop
mov
es
negb
pushf
test
push
es
mov
testl
or
loopne
add
fildll
inc
outsl
jmp
push
xor
add
pusha
call
loope
push
pop
sbb
imul
push
insl
mov
or
dec
xchg
and
sub
and
adc
and
pop
mov
or
jmp
sub
sbb
add
jmp
test
push
gs
out
lods
pop
popf
shrb
and
je
or
rorl
iret
ret
inc
sub
in
outsb
repz
out
loope
add
jg
cmc
or
jo
and
fimull
mov
es
pop
mov
jns
lds
xor
jo
mov
in
adc
outsb
es
cmp
lahf
mov
ja
xor
add
push
pop
movsb
mov
fisubrl
xchg
push
mov
xchg
jmp
cmc
and
ret
and
stos
xor
dec
lahf
mov
aam
push
jo
and
icebp
rorb
push
xchg
flds
stos
movsb
in
dec
sub
xchg
cmp
dec
ljmp
push
imul
sbbl
les
adc
and
mov
out
sarb
or
mov
push
in
in
mov
stos
mov
dec
push
xchg
enter
lcall
ljmp
fidivs
push
out
cmpl
jbe
bound
push
lret
mov
int3
cmc
fwait
jl
xchg
mov
mov
outsl
adc
cmp
sbb
clc
inc
jo
ja
mov
movl
fsubl
outsl
or
aaa
or
lret
ja
cmc
mov
xchg
adc
pop
mov
or
add
dec
jno
iret
test
or
sbb
mov
ja
mov
push
shlb
sub
enter
stc
outsb
fcmovnu
out
push
in
hlt
scas
call
jecxz
jecxz
adc
jmp
stos
loope
lret
ret
xchg
ds
insl
cmp
cli
or
std
std
jge
lret
fldl
mov
das
add
sbb
pop
jmp
inc
or
into
pop
ret
popf
mov
push
cmc
adc
mov
js
aas
dec
fldenv
inc
mov
fiadds
mov
pop
cmp
add
mov
pop
jle
xchg
hlt
bound
test
outsb
adc
xorb
loope
xchg
shrb
sbb
pop
mov
dec
push
jmp
and
dec
mov
mov
or
adc
mov
scas
lea
rcll
and
stos
je
subb
inc
mov
imul
mov
movsl
call
mov
cs
xrelease
mov
fiaddl
mov
pop
push
fldt
cli
loope
xchg
inc
and
lahf
lock
or
sub
cmpsl
scas
add
push
jp
mov
mov
idivb
popa
dec
shlb
inc
sbb
push
mov
popa
cli
fwait
sub
enter
daa
push
les
out
rorl
ljmp
dec
fistpl
aaa
dec
cmc
mov
fs
repz
push
ja
sub
loope
in
cmpsl
cmp
and
xlat
sub
inc
xor
icebp
mov
push
inc
stos
stos
insb
xchg
subb
sbb
sbb
mov
sbb
xchg
addb
dec
data16
sbb
std
jle
es
scas
sbb
sub
rclb
dec
pop
movsl
xchg
dec
pop
lret
and
sbb
iret
mov
add
decb
adc
stc
inc
data16
xchg
inc
imulb
inc
jge
movsb
lret
mulb
movsb
push
inc
test
addr16
stos
rcll
xor
pop
addr16
fsubl
jl
cmc
movsb
lea
lods
stos
loopne
jl
mov
xchg
test
lret
dec
in
iret
pushf
jle
enter
jge
lea
paddd
push
adc
xchg
pop
push
xor
xor
inc
roll
cltd
leave
jnp
xlat
jmp
adc
fcoms
cmp
sarb
mov
jbe
mov
insb
mov
sbb
xor
mov
cld
dec
fimull
or
sbb
fstps
jge
loop
not
cmp
jns
or
mov
and
mov
xchg
outsl
je
cmp
nop
mov
in
loope
popf
mov
lock
mov
mov
sbb
sbb
je
mov
movsb
pop
ljmp
cmc
insb
push
sub
loope
mov
mov
push
arpl
shrl
inc
ja
notb
dec
adc
lcall
cmc
call
jg
and
add
aas
push
pop
jne
mov
pop
stos
hlt
cld
push
pop
sbb
in
std
jge
sti
movhps
push
mov
aas
loope,pt
decl
decb
rcrl
and
add
sbb
lahf
fcomi
in
test
cs
mov
stos
outsl
aam
cmp
leave
jnp
xchg
xlat
aam
xrelease
repz
into
mov
test
aas
dec
inc
and
mov
daa
dec
mov
fisttps
jmp
mov
inc
je
sar
aaa
adc
and
outsb
mov
cs
shll
jno
xor
stc
cmp
cwtl
jl
mov
dec
popa
imul
stos
leave
aad
push
fcmovbe
test
jae
mov
xor
and
movsl
mov
lret
xlat
in
insb
jae
pop
in
sub
cli
inc
jle
cmp
push
outsl
lret
clc
lcall
mov
inc
mov
es
ds
sahf
mov
adc
xor
imul
mov
in
and
cmp
loop
dec
out
ret
jecxz
cs
add
lret
lods
insl
jmp
adc
push
pop
out
dec
in
roll
and
call
xchg
cmp
mov
and
rorb
pusha
stc
push
xor
insb
fs
sub
out
andb
inc
fimull
jge
adc
mov
frstor
jb
cld
push
out
insb
das
pop
mov
fidivs
add
jg
fadds
sub
xchg
and
mov
mov
stc
sub
aas
or
je
insl
fidivrl
arpl
int3
pop
lea
mov
rorl
je
jae
leave
mov
mov
nop
in
lds
subb
aaa
push
movsl
fcomps
daa
cld
sti
jmp
and
std
lcall
hlt
mov
loop
leave
lret
mov
test
pop
imul
lea
and
dec
push
in
sar
outsb
mov
pop
imul
out
test
test
rcr
jle
mov
xchg
mov
or
addl
aas
mov
fmuls
mov
jle
imul
jle
cmpsb
inc
jp
jl
in
pop
pushf
movsb
pop
mov
push
rcl
sbb
insb
ja
adc
adc
mov
bnd
xchg
in
mov
add
xchg
fucomp
adcb
sar
sub
push
sub
addr16
push
je
pop
push
xchg
xchg
sahf
stos
jle
into
cmp
inc
cmp
mull
cs
inc
dec
inc
and
pop
arpl
ss
xchg
sub
dec
das
mov
lret
jne
mov
lcall
in
pop
xor
sbb
mov
testl
in
lahf
in
sahf
movsb
cmp
mov
sbb
inc
leave
roll
into
test
bound
rcll
lods
movsl
adc
shrb
lret
jno
mov
adc
mov
pop
iret
loope
out
add
mov
mov
lds
fstl
in
cmp
ficoms
daa
sti
xor
rcrb
jmp
std
or
popa
cmp
sbb
jo
mov
cmpsb
or
fs
jb
fisttps
outsb
xchg
into
rorl
xchg
dec
out
dec
pop
xlat
daa
mov
loop
push
dec
push
jns
scas
cli
out
adc
sub
inc
das
test
rcr
mov
js
fbld
mov
clc
shrl
enter
cmp
ja
xor
pop
int
push
dec
cmp
inc
pop
movsb
mov
add
push
sbb
lock
and
frstor
mov
or
inc
mov
mov
data16
mov
sbb
xchg
lods
cli
pop
sbb
sbb
std
xlat
ret
inc
dec
test
lods
mov
pop
sub
imul
outsl
inc
lock
ror
jecxz
imul
jmp
aaa
cltd
loopne
pop
sbb
nop
mov
in
popa
rcrb
or
push
dec
dec
lahf
or
dec
or
test
pop
outsb
mov
pop
in
push
sub
cwtl
ror
and
stos
dec
push
hlt
imul
push
ret
pop
mov
jmp
ret
push
add
dec
cmp
jae
stos
cmpsb
aad
out
push
in
insl
mov
pop
jb
movsl
out
lahf
les
ja
mov
out
mov
sbb
and
popa
lods
aad
out
pop
aam
dec
leave
adc
rorb
adc
pushf
xor
jmp
aas
shrb
scas
adc
ds
mov
sarl
and
stos
test
daa
pop
addb
fmull
xorb
outsl
cmp
movsb
add
arpl
jp
shlb
xlat
sti
stos
movsl
cmp
jecxz
xchg
pusha
data16
scas
add
push
js
pop
lods
lret
ret
xlat
xor
push
js
leave
or
sarl
adc
or
xchg
sti
lret
push
jb
imul
adc
mov
adc
lea
mov
lea
test
inc
pop
int3
out
pop
insb
jns
sub
xchg
adcl
jns
adcb
lods
cmp
sbb
cmpsb
adc
icebp
ss
adc
rclb
jle
popa
pop
scas
ja
in
push
and
call
cltd
enter
loope
mov
sti
push
ja
cmpsb
mov
inc
fs
outsb
mov
fldl
cld
push
cmp
pop
mov
pop
and
add
int
rolb
lods
add
adc
add
pop
ret
lcall
add
fistl
adc
int
xchg
push
rclb
enterw
fs
adc
jmp
fists
add
push
fmuls
rorl
or
iret
fdivl
xchg
add
hlt
or
dec
rcrl
or
push
push
or
ret
adc
roll
das
cmp
scas
in
push
imul
xchg
stc
sbb
pop
rol
loop
sub
and
fildll
cmp
test
cltd
dec
ss
push
mov
fbld
add
inc
mov
or
pop
inc
mov
inc
clc
into
pusha
adcl
push
decl
adc
movsb
cmp
pushf
mov
sub
les
jge
fwait
repz
ljmp
sbb
jle
out
pop
mov
cmpsl
and
fnstenv
out
inc
outsl
adc
and
inc
mov
orb
into
insb
scas
adc
mov
sub
adc
mov
mov
int
fisubs
imul
movsl
cmp
into
subps
sub
ret
jne
mov
lcall
inc
fcoml
mov
jmp
and
fildl
je
mov
inc
push
in
rorl
je
mov
xor
jo
dec
lret
cli
dec
jae
sub
add
dec
jo
test
sbb
rclw
ret
pop
jp
clc
xchg
xor
jg
clc
pusha
outsb
adc
mov
sbb
pop
loopne
add
fidivrl
fidivrs
xor
je
push
test
leave
xlat
mov
push
cmp
cmp
movsl
testb
or
lcall
popa
aad
push
dec
add
sahf
jmp
jb
and
clc
dec
mov
or
mov
jp
mov
fldenv
test
movsl
std
bsf
lods
imul
testb
xor
jg
jno
mov
pushf
jb
shl
and
call
dec
pop
outsl
xor
and
cmp
and
push
repnz
fstl
or
push
pop
cld
jle
repz
mov
frstor
cltd
test
dec
pop
or
rcl
repnz
sbb
addb
jns
nop
dec
imul
ss
daa
mov
int
popf
or
adc
mov
ds
repnz
or
mov
out
sub
movsb
or
mov
daa
push
stc
lea
adc
jnp
push
movsb
sti
mov
xor
push
xchg
clc
pop
cld
imul
stos
mov
fadd
jecxz
repz
incl
push
cmpsl
sahf
mov
pusha
stos
cmp
xchg
out
aaa
add
loopne
sub
test
jmp
fistl
andb
pushf
pop
jno
fistpll
lods
xor
xor
test
cmpsb
inc
push
loop
adc
pushf
stos
mov
das
mov
add
btr
and
out
or
sub
and
cmc
mov
andl
mov
mov
sbb
mov
jnp
dec
iret
cmpsl
shl
neg
mov
mov
xor
out
nop
in
out
inc
int
sbb
insb
xor
push
jbe
movsl
arpl
or
in
push
stos
push
imul
icebp
jb
lret
and
jb
int
mov
daa
lcall
xchg
test
cltd
sbb
sarb
lcall
movsb
cmp
pop
push
jb
mov
sbb
lret
mov
rcrl
lods
fnstenv
or
in
data16
outsb
pop
jmp
lock
out
sub
xchg
jno
ss
cmp
repnz
ds
decb
aas
in
xchg
push
mov
add
mov
inc
rcl
dec
ja
and
je
clc
loope
loope
mov
push
pusha
gs
repz
push
jno
jae
adc
ja
imull
push
lods
push
mov
adc
ss
xchg
out
aas
ret
mov
jbe
mov
jl
fmuls
int3
xor
lret
jae
pop
sub
pop
cmpb
int3
loope
pop
inc
pop
or
pop
mov
movsb
les
ja
and
xor
adc
repnz
add
pop
push
out
cwtl
cli
cli
fucomi
dec
xchg
xlat
ja
dec
movl
stos
leave
sub
mov
adc
mov
cmp
roll
repnz
pop
mov
jae
mov
xchg
loop
cltd
imul
imul
xor
stos
xor
mov
dec
xchg
mov
pop
adc
push
insl
dec
adc
dec
mov
int3
mov
inc
cmp
js
mov
outsl
adc
lcall
adc
cld
pop
jbe
int3
mov
lcall
mov
outsl
leave
sbb
or
and
sub
divb
mov
push
out
pop
xchg
push
adc
xchg
inc
hlt
xchg
les
das
dec
mov
ret
cmp
mov
aas
cmp
fstpt
cmp
pop
sub
jnp
pushf
push
xchg
xor
data16
xchg
outsb
js
xor
sbb
or
fwait
fwait
inc
ss
add
imul
mov
mov
leave
and
shll
stos
xor
and
fstpl
jns
fnsave
add
insl
pop
mov
jge
flds
shr
sub
dec
addr16
clc
inc
gs
negl
sub
enter
jl,pt
pop
cwtl
lret
adc
cmp
lock
push
fildl
leave
cmc
sub
sahf
mov
cmp
dec
and
xlat
stc
aaa
mov
into
fildl
fstl
je
jecxz
bound
mov
arpl
adc
loope
out
repz
mov
adc
mov
inc
jg
and
loop
push
popa
mov
dec
pop
mov
cmp
lods
pop
imull
pop
outsl
mov
pushl
jg
jl
push
lret
das
mov
mov
pusha
jp
and
add
out
or
add
arpl
xor
movsl
int
lock
jae
pop
mov
sub
pop
jae
movsl
outsl
pop
fstps
sahf
push
mov
dec
rcr
adc
cmp
and
pop
out
push
jb
dec
and
cmp
hlt
pop
lock
pop
xchg
mov
or
in
lret
sub
dec
add
std
rcll
sbb
jle
xor
repnz
aaa
adc
or
mov
in
ja
or
roll
push
dec
ficoml
push
xchg
fwait
repz
leave
adcl
loopne
pop
psrlw
leave
rorb
cmp
add
arpl
pop
movsl
lret
adc
xchg
ret
or
inc
dec
outsb
sub
or
not
insb
dec
xor
icebp
data16
fdivr
dec
mov
cmp
and
push
fidivs
cli
inc
subb
sbb
mov
into
push
jecxz
loope
mov
dec
jno
insb
mov
call
jmp
lds
xchg
fs
imul
arpl
inc
stos
adc
out
pop
sti
fs
sbb
xlat
and
repz
out
cmpsl
pop
aam
mov
push
insl
shl
fsubs
mov
mov
sbb
pusha
mov
fsubl
out
ljmp
sub
sub
idivl
add
jecxz
rcr
xchg
fisubrl
hlt
gs
lcall
lods
mov
push
movsl
loop
movsb
push
jo
es
push
stc
pop
and
adc
pop
std
movsl
loope
sub
mov
lods
xchg
fwait
jnp
pop
int
push
fldt
mov
jg
mov
mov
pop
pusha
ficoms
add
mov
cmp
push
pop
cmpsl
cwtl
loopne
cmp
cmp
push
add
aad
pop
je
popf
mov
mov
outsb
enter
iret
push
fs
cmp
sbb
xor
jecxz
clc
in
js
mov
pop
inc
fidivl
push
add
lock
mov
xorl
gs
mov
pusha
mov
xchg
fidivrl
xchg
ss
clc
and
mov
fs
out
pop
mov
lret
sbb
mov
ds
push
xchg
jle
pop
lea
xchg
push
cli
bts
fcom
testl
roll
sub
pop
out
fnstenv
lds
jns
stos
jns
and
sub
push
loope
jg
mov
inc
ljmp
push
ds
cmp
std
mov
rcl
int
jo
mov
push
pusha
sbb
mov
fists
jbe
shr
mov
repz
call
jnp
stc
enter
push
repnz
jns
data16
in
repz
mov
cmc
cltd
xchg
sub
xor
pop
mov
jae
xor
pop
nop
xor
push
xor
pop
ret
fidivrs
fcom
sub
mov
out
lds
or
scas
adc
lods
mov
js
shll
xlat
inc
inc
decl
and
outsl
mov
test
scas
sbb
ds
mov
mov
mov
out
jb
sbb
or
repz
push
sub
mov
mov
pop
sub
mov
cwtl
or
cmp
cmc
ja
dec
imul
or
mov
mov
jg
inc
push
mov
cmp
ss
test
sub
popf
push
outsl
xchg
hlt
xchg
jge
adc
jle
cltd
adc
push
lea
outsb
out
sbb
mov
and
push
cld
jecxz
pop
jle
adc
mov
xor
mov
push
stc
data16
fildl
push
dec
lcall
lea
inc
push
pop
enter
test
test
idivl
and
ret
fdivs
aad
add
repnz
adc
jmp
cmpb
sbb
test
sti
js
icebp
inc
cmpsb
adc
ds
inc
jmp
into
ret
jle
push
mov
sbb
aas
or
subl
sub
pusha
or
sbb
leave
ljmp
xchg
jl
imul
jae
mov
pop
arpl
inc
scas
rclb
cmpsl
mov
imul
add
push
jbe
repnz
cmp
lods
call
cmc
movsb
jecxz
fstp
je
dec
pop
loop
push
dec
mov
pop
jl
loopne
xchg
daa
pop
in
std
insl
aam
sbb
mov
fs
jno
fistps
and
mov
pop
jp
adc
cmpsb
xor
inc
xor
xor
repz
and
int3
and
iret
pop
or
push
enter
or
and
out
lcall
in
cmp
das
test
fisubrl
push
ror
roll
and
lea
cmp
jns
fstp
cmpsl
lcall
stos
icebp
std
in
add
pop
divl
and
iret
pop
test
mov
sub
scas
leave
ss
int3
outsl
gs
cld
add
jno
enter
jg
std
push
pushf
std
xchg
repnz
cmpsl
dec
popa
sarb
fisttpl
leave
and
bound
or
inc
das
cmp
and
lret
fwait
inc
stc
dec
mov
xchg
dec
push
repnz
sub
push
leave
in
repz
repz
loope
outsb
jnp
rcl
stc
mov
shl
mov
test
mov
mov
icebp
in
xchg
jo
lea
xlat
mov
jb
insl
adc
fwait
in
shrl
fiadds
mov
outsl
repnz
cltd
ss
or
icebp
mov
popa
int
stos
dec
pop
mov
clc
ds
dec
lret
fcoml
imul
push
jle
divb
fldt
push
xor
ret
dec
xchg
jns
push
out
loope
ret
movsl
mov
mov
lss
mov
cwtl
xchg
mov
jbe
rorb
jb
enter
js
test
data16
in
ljmp
mov
mov
mov
or
and
mov
jle
ret
call
dec
in
dec
cltd
add
adcl
sahf
jle
insb
mov
sub
call
cmpb
xchg
enter
dec
aam
sbbl
arpl
loop
in
mov
movsl
xor
dec
lret
inc
outsl
xchg
mov
lods
icebp
and
aas
push
add
sub
mov
mov
test
sbb
lods
or
cmp
mov
mov
aam
les
clc
xchg
ret
fwait
jae
andl
scas
xchg
dec
adc
arpl
test
clc
nop
lret
push
and
out
mov
mov
testl
and
add
push
aaa
mov
loop
mov
mov
insb
stos
fildll
int3
xor
gs
stos
into
inc
fidivl
sarb
popa
jb
out
loop
push
jae
adcb
call
jb
int
in
push
sbb
and
in
gs
test
or
enter
lahf
push
cwtl
sub
in
mov
nop
scas
jecxz
inc
icebp
inc
lret
ror
loop
push
mov
xor
cmp
jb
push
call
and
or
pop
push
mov
mov
cld
daa
in
jb
rolb
pop
sarl
jecxz
std
iret
insb
cmp
add
or
rcrb
mov
insl
mov
push
mov
mov
js
fidivrl
xor
push
mov
cmp
adc
or
jo
xchg
pop
lcall
inc
or
rcr
insl
rclb
jmp
mov
icebp
shll
adc
clc
es
mov
push
arpl
lcall
sahf
pop
sbb
out
xor
int3
outsl
clc
or
mul
mov
dec
xchg
push
sbb
aas
ja
push
stos
or
fstpl
sub
ficoml
fsubrl
sti
mov
or
mov
push
ds
sub
int3
cmp
ss
jae
jo
das
xchg
rclb
adc
or
ss
ret
aas
int3
xchg
or
das
rcrb
pop
cmpsb
cmp
imul
adc
and
mov
pushf
leave
push
xlat
jl
test
and
out
and
push
subl
cli
push
mov
sub
shrl
data16
insb
sub
test
and
insb
dec
or
dec
insl
das
or
fwait
leave
push
add
sbb
cld
outsl
ret
dec
xchg
frstor
dec
xchg
mov
inc
rclb
mov
mov
cmp
in
fsts
cmpsb
cmp
fdivrl
adc
scas
jle
out
mov
outsb
scas
sbb
pop
andl
cld
ret
pop
sub
into
loopne
movsl
ss
cmp
iret
sbb
xchg
mov
mov
aaa
cld
iret
mov
inc
mov
leave
or
xchg
push
idivb
sub
mov
arpl
mov
cmpsb
mov
frstor
push
addb
xchg
cmp
xchg
mov
aam
or
rep
inc
pop
push
mov
push
cmp
mov
push
test
ss
repnz
push
mov
xchg
out
cmp
xchg
int
jns
jle
pop
fldcw
addb
cmpsl
sbb
sub
mov
mov
inc
lret
push
cmpb
mov
aad
jge
test
jae
data16
adc
sbb
cmc
jmp
add
or
add
popf
test
fsub
or
add
fimull
dec
adc
ja
sub
ret
sti
jnp
pop
pop
lcall
pop
cmp
inc
push
mov
sub
dec
xchg
data16
rorb
test
push
addl
insl
add
sub
outsb
icebp
cmc
adc
mov
in
cmp
pop
scas
mov
cbtw
lods
cli
jnp
andb
and
loopne
dec
imul
push
lret
jecxz
mov
dec
aaa
fstp
cmp
pop
cwtl
mov
sub
sbb
test
jl
enter
mov
mov
inc
outsb
sub
inc
cli
or
lcall
mov
ljmp
cltd
ss
push
jnp
int3
daa
aaa
mov
in
jge
pop
in
into
xor
xchg
dec
xor
call
adc
rolb
subl
call
call
push
sbb
mov
add
sahf
jo
clc
imul
ds
dec
jmp
mov
sbb
popf
sub
sub
rorl
jmp
fidivl
or
mov
fadds
mov
fdivrs
xlat
add
jp
into
sbb
out
scas
insb
jmp
xchg
das
icebp
daa
jo
mov
mov
dec
into
push
mov
mov
cwtl
jne
scas
repnz
sahf
bound
push
mov
cwtl
ds
dec
stos
or
add
popa
js
inc
lret
push
test
scas
enter
add
or
or
cs
inc
jno
lcall
icebp
in
sahf
out
gs
in
and
insb
out
arpl
sbb
cmpsl
fisttps
iret
mov
push
lcall
push
test
mov
sub
and
jnp
jle
push
xchg
movhlps
movsl
mov
pop
mov
mov
push
pop
pop
sbb
pop
in
and
dec
jne
icebp
lret
mov
or
xlat
fwait
push
lahf
push
cwtl
loop
sub
pop
jno
insl
mov
std
and
clc
adc
test
cmc
and
fsubl
movsb
dec
fisubs
out
outsb
test
jno
int
push
pop
in
xorl
sub
inc
loope
dec
cli
cmp
jge,pt
jnp
dec
dec
fisubrl
push
cmp
sbb
and
ret
hlt
movsl
cmp
or
imul
add
push
mov
test
rolb
pop
repnz
push
cs
cmp
shl
negb
sti
and
add
jg
jns
jae
xchg
cld
das
les
cmpsl
push
sub
pushf
hlt
fcompl
and
xchg
and
cmc
mov
leave
xchg
out
mov
jo,pn
mov
add
dec
jo
fistpl
in
inc
sub
scas
test
test
xchg
xor
xchg
stos
mov
dec
and
movsb
jmp
sbb
jmp
psllw
shrb
mov
push
test
mov
sub
pop
pop
push
jo
add
dec
xchg
cld
sbb
mov
cmc
sub
std
fdiv
xor
or
jb
stos
movsl
fmul
mov
scas
popa
aas
jmp
sbb
mov
in
cmpsb
sub
push
imull
insb
mov
imul
mov
mov
inc
fwait
adc
data16
mov
lods
jne
scas
add
out
movsl
push
mulb
lods
push
movsb
push
je
arpl
mov
pop
sbb
stos
js
ljmp
cmpsb
shll
out
aam
mov
adc
mov
nop
fldl
nop
clc
sbb
push
mov
aad
pop
add
dec
frstor
xchg
pop
movsl
stos
and
rolb
mov
sarl
push
lcall
dec
xchg
inc
xchg
gs
push
les
sbb
lea
out
xchg
xchg
jbe
dec
jg
and
push
ds
stos
jmp
out
xor
repz
dec
push
dec
xchg
fstpl
pop
addr16
fcom
push
jns
xor
mov
xor
xor
rcrb
pop
add
popl
jno
cmpsb
into
adc
inc
js
mov
into
aas
lret
and
push
sbb
sub
mov
rcrb
dec
mov
adc
sub
xor
cmc
popf
movsl
jnp
mov
dec
movsl
adc
gs
dec
push
in
adc
pop
add
xor
rcll
enter
push
pop
pop
out
aad
dec
mov
jnp
loope
sahf
leave
xchg
outsb
cmp
aad
sbb
xlat
push
lcall
fcmove
shrl
test
ret
divb
cltd
xlat
adc
je
shlb
or
sbb
inc
mov
jnp
cmp
lods
mov
lock
pop
out
pop
xor
pop
notl
xchg
fdivs
divl
jns
xchg
divb
xchg
pop
inc
xchg
cmpxchg8b
cmp
push
icebp
pop
push
jg
sbb
stc
rcll
in
pusha
nop
stos
mov
pop
push
lods
pop
mov
test
xchg
pop
cmpsb
xlat
test
icebp
push
lcall
dec
add
or
inc
push
fwait
pop
inc
lods
sbb
flds
shld
pop
rcrb
inc
test
mov
iret
imul
cmpsl
jle
cld
add
stos
mov
jecxz
gs
mulb
cltd
inc
push
mov
ja
lret
aad
test
pushf
jmp
cmp
jnp
jle
sbb
adc
push
xchg
je
mov
pusha
icebp
iret
xchg
jl
lods
out
jge
negl
xor
sbb
push
jo
test
mov
sub
or
out
mov
and
and
dec
or
les
fldl
insb
pop
pop
xchg
addr16
mov
xor
mov
je
push
mov
mov
and
sub
add
repz
idivl
into
pushf
ss
roll
mov
push
sub
push
push
fwait
sub
push
lahf
movsb
stos
outsb
xchg
repz
lret
cmp
pop
mov
icebp
dec
push
xlat
mov
popa
jb
lcall
push
test
jnp
mov
and
mov
sarb
cld
cmp
jmp
push
mov
pop
fstpt
push
dec
mov
jno
mov
stc
pushf
cmp
lods
sbb
pop
push
addl
cmc
rorb
push
jno
ds
cmp
mov
adc
in
dec
xor
ficoml
mov
mov
dec
or
inc
or
and
stc
add
stos
out
in
lret
push
mov
mov
mov
ret
mov
aam
mov
aad
sub
mov
and
sarb
cli
pop
pop
ljmp
fiaddl
mov
jl
xor
pushf
data16
sbb
push
les
repnz
in
insb
cli
mov
and
and
mov
hlt
scas
mov
fstpl
addl
andl
mov
xchg
push
into
mov
or
std
and
stc
stc
jb
arpl
jmp
mov
inc
push
imul
ficoms
aam
pop
xchg
push
dec
cs
cmp
daa
lcall
xlat
xor
lea
int
mov
push
push
ret
jno
ss
ror
lcall
pop
inc
xchg
int
jp
jo
aaa
fsubr
ret
mov
jae
mov
cld
adc
scas
sub
fcmovnu
and
aaa
shlb
out
inc
aaa
movsb
jns
repz
icebp
jecxz
cmpsb
imul
and
in
sub
sub
jg
sbbb
jle
mov
sbb
jecxz
push
scas
push
shll
js
ss
mov
in
int3
sub
or
js
js
loopne
sarl
push
pop
shrb
jmp
cmpsl
adc
xchg
fadd
cmp
loopne
pop
push
std
inc
inc
jb
mov
shlb
repnz
push
mov
jmp
pop
fucomi
pop
mov
push
call
cmp
cmp
cmc
sbb
popa
nop
or
inc
idiv
mov
mov
pop
or
sbb
jg
pop
gs
repnz
jp
adc
enter
sbb
cli
pusha
int3
cli
xchg
adc
ret
enter
jae
cmpsl
fcmovb
or
popa
fidivrl
outsb
lds
test
loopne
adc
mov
jp
loopne
sub
xchg
or
shr
in
fs
mov
push
gs
and
pop
and
mov
jo
inc
or
mov
lcall
aaa
in
add
dec
cmc
inc
les
ret
and
fst
adc
add
orl
or
xchg
mov
addr16
push
and
dec
mov
add
mov
bound
adc
adc
sbb
jns
mov
xor
pop
insl
ljmp
jmp
cmp
dec
outsl
xchg
xchg
xchg
orl
lods
lcall
arpl
mov
gs
addl
mov
push
xorl
jge
jle
sarl
cwtl
icebp
dec
ljmp
scas
lret
pop
stc
mov
sub
call
leave
loopne
pusha
cmp
outsb
out
mov
or
mov
dec
sti
movsb
push
adc
insb
clc
sub
in
mov
loop
cmp
sbb
add
inc
xor
jnp
adcb
fs
dec
push
in
cltd
and
shl
out
mov
clc
jns
xor
add
jo
dec
mov
arpl
sub
push
push
clc
pusha
jo
cmp
mov
mov
and
pop
pushl
xchg
bound
aas
imul
aaa
sbb
je
loope
push
mov
lcall
inc
cmp
out
aam
mov
jbe
xor
scas
sbb
xchg
aad
js
dec
inc
insl
lods
xlat
sar
das
jo
mov
mov
pop
bound
and
dec
cltd
inc
ds
inc
imul
cmpsl
mov
jbe
mov
cmp
ficoms
mov
pop
outsl
and
mov
imul
jae
xchg
or
popf
and
xor
cmpsb
vpcmpgtb
faddl
rcl
or
inc
sbb
jle
inc
cmp
jl
les
nop
stos
mov
pop
push
pop
sub
cmp
rclb
add
and
cld
xor
jbe
sub
inc
and
jecxz
jnp
adcb
jge
lods
xchg
js
mov
test
insl
dec
hlt
pop
mov
pop
cmp
hlt
arpl
xchg
pusha
sti
fucomi
ficomps
mov
leave
pop
scas
repz
andl
and
loopne
dec
int3
jp
sbb
or
movsb
or
repz
jp
shrb
nop
and
roll
jbe
mov
ret
sbb
movsb
popa
insb
in
dec
push
fdiv
or
dec
dec
outsb
pop
and
aaa
insl
pop
mov
mov
notl
pusha
lods
shll
aad
mov
pop
mov
loop
nop
xchg
prefetcht0
dec
inc
add
dec
test
mov
inc
sub
push
ds
lcall
cs
pop
pusha
rcrl
xor
lcall
imul
fcoml
aas
cli
mov
adc
call
fs
popf
pop
pop
les
lds
mov
mov
dec
push
loop
stos
arpl
cmp
or
add
or
and
mov
xchg
int
mov
and
xor
aad
sub
and
dec
imul
mov
push
adc
jmp
stos
jo
hlt
inc
filds
pusha
iret
cmp
lret
pop
sub
ss
lahf
mov
mov
adc
sbb
iret
je
data16
add
inc
mov
clc
test
xor
subb
sbb
movsl
shlb
inc
or
movsl
dec
popa
mov
sti
lock
int3
and
aas
out
jno
add
imul
mov
repz
shl
in
loope
add
shlb
mov
sbb
sahf
aaa
adc
leave
fisubl
push
rcll
loope
jge
mov
pop
jge
sbb
add
lahf
aas
sbb
sbb
cmc
int3
inc
xor
adcl
pop
jle
push
aas
jmp
inc
and
lods
scas
or
pop
pushf
mov
sbb
clc
cmpsb
in
lahf
loopne
jp
and
lret
add
movsl
jne
ficoms
into
xor
sub
sub
outsb
xchg
in
aaa
jnp
test
xchg
xchg
aam
cs
push
test
ljmp
jnp
sbb
scas
push
sub
cmpsl
jb
push
out
pop
mov
push
repz
and
icebp
stos
vshufps
clc
cmp
ret
pop
jno
scas
xchg
pop
icebp
adc
sti
dec
nop
in
dec
push
test
leave
rcrl
mov
xchg
hlt
push
mov
call
sub
int
iret
imulb
pop
in
lret
and
xchg
mov
cmpsb
mov
mov
and
mov
add
and
ret
jmp
jbe
cmp
dec
aad
push
cmc
xchg
out
lret
mov
jp
dec
pop
pop
cmp
js
mov
addr16
inc
popf
mov
mov
icebp
leave
adcl
fsts
or
shrl
inc
test
pop
sub
and
ret
mov
lds
sbb
dec
loopne
mov
adc
xlat
adc
jno
jle
and
stos
mov
inc
jmp
dec
xor
stos
dec
sub
mov
push
xchg
fstpl
or
aam
cli
ja
sbb
imulb
mov
sub
add
test
scas
aad
jne
dec
sahf
decb
push
test
or
das
mov
cmpsl
outsl
cld
mov
faddl
aas
or
xchg
test
decb
loope
loope
sahf
mov
data16
inc
je
icebp
push
cltd
lods
xchg
jge
int3
shlb
dec
mov
adc
loop
or
fiadds
fldenv
pop
xor
mov
fistps
or
inc
push
mov
mov
adc
add
out
jg
daa
push
nop
data16
stos
imul
dec
mov
jmp
or
jb
mov
scas
test
adc
sbb
pushf
cmp
mov
cli
dec
ficomps
pop
orps
xchg
cmp
ja
lret
fisttps
mov
jp
inc
sbb
push
push
lret
pop
stc
aad
jmp
mov
xchg
in
fs
xor
mov
dec
pop
jl
fdivp
lods
pop
push
sbb
cmc
lock
in
sub
leave
push
mov
jns
mov
push
mov
addl
decl
dec
dec
lea
mov
je
shrb
in
mov
pop
pop
fistps
xchg
adc
ss
js
push
in
push
es
push
pop
repz
rolb
test
mov
lcall
xor
and
lret
sahf
clc
roll
mov
cs
out
add
pop
or
dec
inc
fldln2
imul
fstpt
xor
add
lret
cmc
call
out
dec
jge
arpl
rorl
xchg
cld
or
or
pop
mov
mov
out
jbe
psubq
mov
dec
sti
fldl
das
push
or
cmp
inc
dec
jmp
mov
mov
sub
dec
inc
xchg
dec
mov
dec
dec
sub
rcl
negl
notb
aaa
out
in
hlt
push
jno
mov
xchg
test
test
fidivrl
pop
fiadds
fnstcw
sahf
mov
fs
mov
aam
cmc
mov
js,pn
xor
aas
sbb
inc
cmp
jp
ljmp
cmp
mov
enter
std
mov
pop
cmpsl
ja
cmp
add
mov
xor
bound
leave
dec
data16
aad
fiadds
pop
stos
sbb
and
adc
mov
xor
sti
popf
aaa
xchg
lock
loope
mov
add
cmp
push
or
dec
inc
pusha
psraw
jmp
test
outsl
in
loope
in
cmp
rolb
inc
mov
test
add
jge
xorb
sub
aam
sbb
jb
cld
add
push
xchg
aas
push
adc
andb
mov
jns
jo
mov
insl
push
sbb
in
mov
sub
loope
dec
xor
nop
pop
fstps
push
jno
fisubs
push
mov
iret
jg
fisubl
aas
repnz
scas
divb
jg
push
or
mov
sbb
cwtl
ja
loopne
xchg
xor
inc
sbb
cmp
inc
inc
mov
rcr
out
shl
xchg
in
sbbl
es
mov
add
outsl
cli
xlat
jmp
test
pop
sbb
ds
js
stc
je
xchg
inc
mov
lret
addr16
add
xor
inc
inc
push
mov
ljmp
adc
dec
dec
sbb
lret
shl
push
jo
jle
sbb
mov
pop
loopne
repz
xchg
add
mov
jge
sub
inc
ja
dec
fisubl
push
dec
data16
pusha
and
jb
scas
mov
mov
das
sub
sti
cld
fucomp
imul
adc
in
icebp
orl
sbb
pusha
inc
clc
pop
loopne
jne
add
into
pop
test
jb
mov
pop
stos
dec
stos
adc
fwait
mov
lcall
mov
daa
pop
inc
or
mov
adc
imul
popa
scas
movsb
test
adc
sbb
mov
sub
mov
pop
movsl
fs
xchg
push
les
fisubl
das
fsub
stos
adc
mov
dec
andb
das
enter
into
negl
xchg
jno
cmp
sub
xchg
imul
out
cmpsb
mov
nop
xor
or
popa
mov
cmpsl
mov
daa
xchg
pop
cltd
mov
or
mov
leave
push
clc
dec
inc
dec
pop
enter
repnz
lcall
push
adc
arpl
cmpsb
popf
mov
push
pop
mov
push
outsb
aas
mov
aas
lods
pop
imul
add
mov
jb
gs
push
aas
add
xor
mov
les
stos
jbe
add
movsl
movsb
ja
jnp
in
stos
scas
jecxz
add
jecxz
jmp
hlt
mov
add
and
repnz
scas
add
insb
or
sub
leave
mov
mov
repnz
mov
mov
and
adc
fisubs
xorl
pop
mov
xchg
adcb
xor
mov
xor
testb
dec
mov
hlt
add
sub
scas
xchg
stos
dec
pop
in
mov
sub
and
and
sub
test
adc
push
lcall
inc
inc
insl
cmpsl
ret
xchg
cmpsl
setbe
push
popa
ret
jne
and
call
jne
test
divps
mov
adc
test
sbb
shlb
push
pop
push
pop
push
pop
aaa
sbb
dec
scas
mov
cmc
pop
lods
cld
mov
adc
test
sbb
gs
pop
dec
sbb
lock
mov
or
xchg
push
stos
in
mov
inc
xor
mov
jmp
xlat
dec
out
pop
mov
out
arpl
sub
fistpll
mov
sub
xchg
inc
xchg
jge
inc
xchg
add
sub
and
or
xchg
je
scas
jno
int
outsb
mov
or
dec
or
cmp
adc
jl
jp
jg
jg
movsl
pop
mov
sub
push
dec
xchg
in
leave
ret
xchg
aam
test
shrl
loope
ficompl
mov
mov
adc
mov
stc
mov
fdivrl
shll
shrb
push
imul
mov
sbb
popa
lahf
push
lahf
fistl
repnz
xor
mov
inc
lahf
adc
nop
inc
xlat
test
cmpsl
jbe
push
adc
scas
pop
ret
or
mov
mov
enter
mov
push
hlt
hlt
xchg
cmp
mov
out
inc
cmp
cmp
popa
movsb
jnp
pop
loopne
cmpsl
and
xor
xchg
mov
ret
loopne
sbb
int3
cmpsb
movsl
or
out
or
cmp
xchg
insl
out
push
test
aaa
lods
sbb
test
xchg
xchg
loope
mov
mov
cli
add
sub
lcall
fucomip
ljmp
iret
mov
xchg
aaa
insb
iret
cmpsl
xchg
inc
inc
pop
jbe
mov
jne
add
fs
or
inc
test
imul
dec
push
mov
cmp
rcrb
test
adc
or
push
mov
test
inc
call
mov
es
mov
dec
xchg
and
addr16
or
les
ret
xchg
cld
add
push
cld
sahf
cmp
adc
fisubrs
inc
not
add
lock
out
mov
mov
sub
jle
xor
in
rcll
jmp
mov
or
adc
mov
pop
xor
mov
dec
jge
lods
cmp
lahf
add
insb
and
fwait
insb
push
idiv
mov
cld
maxps
jl
testb
xor
push
ret
leave
ds
fcomi
dec
pop
dec
pop
xchg
cmpsl
mov
add
jae
pop
js
pop
jge
mov
testb
push
stos
cmp
gs
mov
or
jmp
pop
loop
inc
mov
sub
call
js
push
cmp
mov
inc
push
push
addr16
cmp
shll
adc
cli
subb
xor
stc
sub
loop
mov
dec
fstps
insl
dec
ret
add
inc
data16
cmp
dec
ret
push
and
sbb
mov
out
bound
fiaddl
fmull
mov
out
nop
test
mov
nop
ficoml
mov
test
out
mov
fadds
mov
xchg
test
shlb
pop
or
mov
addr16
movaps
push
stc
dec
and
pushf
dec
xchg
or
out
in
sbb
mov
cmp
psllw
mov
hlt
ja
push
jns
outsl
add
and
push
jl
and
mov
mov
xchg
sub
adc
dec
mov
push
add
fdivrs
mov
adc
lds
test
xor
cltd
add
adc
out
push
and
mov
stc
mov
in
jno
xor
sbb
dec
lea
xchg
fcmovnbe
mov
xor
in
loope
cmp
push
sbb
or
popa
xor
ss
mov
xor
xchg
ret
cmp
jbe
ljmp
pushf
scas
add
push
jbe
popl
pop
xchg
xchg
xor
inc
add
fisubl
es
fs
or
mov
push
cmpsl
xchg
push
iret
outsb
xchg
pop
jge
lea
mov
in
push
pop
sbb
daa
add
pusha
mov
dec
inc
jo
roll
pop
xchg
cmp
sbbb
lea
pop
push
or
test
dec
sbb
popa
dec
inc
ja
sbb
jnp
xchg
cmpsl
push
div
jne
stc
popa
insl
push
add
dec
out
hlt
loop
ljmp
adc
adc
dec
pop
insb
sbb
push
nop
hlt
lret
jg
mov
sar
adc
jge
popa
into
push
jl
sub
mov
xchg
push
add
stc
adc
push
push
in
lret
pop
xchg
xor
and
cmp
pop
call
cmpl
sbb
jae
dec
push
test
mov
scas
popf
pop
je
or
xchg
xchg
adc
je
xlat
xchg
sarl
dec
lock
gs
lahf
pop
dec
pop
xchg
lea
arpl
ret
mov
icebp
and
scas
sbb
shrl
stc
ficompl
cmp
fiadds
adc
cmpsl
xchg
ljmp
pop
loop
negb
imul
lret
lcall
lea
rorb
mov
add
andb
add
and
pop
int
fs
jbe
jae
mov
mov
pop
popl
sub
pop
aas
pop
stc
inc
push
lods
int
mov
push
sahf
js
fidivl
int
stc
lods
movsl
gs
in
dec
lcall
push
cld
xor
and
rcrl
mov
jo
lds
sub
mov
sarl
fcoms
adc
lea
jecxz
clc
movsl
add
pop
pop
cwtl
mov
popa
mov
mov
xor
dec
pop
jmp
adc
sub
shrl
mov
call
cmp
jle
mov
and
test
in
aas
aaa
ljmp
cmpsl
push
data16
push
mov
lods
cmp
js
fildl
jl
lret
clc
in
lret
sar
das
cltd
push
mov
ljmp
cwtl
iret
jmp
and
js
and
js
xlat
addr16
xor
stc
jbe
sub
popa
out
pop
das
sub
sub
in
mov
sub
int
ret
pop
cmpsb
mov
out
inc
movsb
cmp
jnp
lds
in
lods
push
insb
mov
cmp
arpl
mov
nop
in
fwait
pop
cmpsl
add
sub
repnz
adc
sbb
ljmp
and
inc
loopne
aam
in
stos
fiadds
rcl
pop
adc
sarb
or
outsb
fisubl
sub
cmp
sahf
push
and
dec
movsb
or
xor
mov
fisttpl
add
movsl
movsl
push
jo
dec
adc
pop
add
cli
sub
call
imul
mov
and
aas
into
das
push
gs
or
call
add
mov
or
or
rorl
jnp
nop
cmp
jmp
mov
xchg
arpl
in
movsb
cmp
pushf
negb
stos
je
ret
std
and
inc
rol
in
and
clc
pushf
sbb
push
xor
pop
inc
in
or
inc
ror
mov
add
push
push
push
xor
rcrb
fadds
shl
scas
aaa
xchg
daa
mov
ljmp
std
mov
or
dec
mov
sar
xchg
imul
xor
pop
in
inc
push
jne
pop
aaa
mov
clc
xchg
sti
push
pop
pop
ret
in
jae
scas
lea
and
dec
lods
xor
fcomi
or
mov
or
mov
mov
cltd
insb
and
xchg
mov
movsb
mov
adc
sub
jb
divb
or
or
mov
inc
sarl
je
mov
cmp
lds
pop
aas
jo
inc
lret
or
pop
push
push
shlb
repnz
pop
cltd
mov
or
mov
call
mov
enter
inc
xor
push
sbb
ficomps
mov
jp
pop
mov
in
repz
addb
lret
adc
xor
rolb
cmc
aad
lea
enter
rorl
add
dec
clc
pop
jg
aas
push
jno
pop
jmp
and
or
jb
out
sti
mov
daa
or
js
ret
cmp
inc
shr
push
pop
cwtl
insb
js
int
dec
cmpsl
pushf
dec
mov
fidivs
iret
jl
fs
je
loop
dec
iret
jl
jb
sbb
xchg
sbb
jbe
push
stc
jge
adc
push
xchg
mov
cmp
add
push
in
incb
adc
push
dec
pop
out
sar
pusha
cwtl
jb
out
enter
sub
adcl
je
mov
inc
repz
loope
sbb
jbe
or
push
jmp
push
rclb
lods
mov
fsubs
ret
inc
in
in
pusha
sbb
xchg
loop
enter
std
adc
pop
insl
into
rolb
les
icebp
adc
cwtl
push
add
pop
lret
inc
push
sahf
dec
push
xchg
arpl
scas
xchg
lods
cmp
fcompl
incl
jle
rcll
test
pushf
ljmp
jg
push
int3
lcall
add
adcl
in
sahf
mov
jo
push
and
mov
add
fcom
jge
sbb
mov
xchg
or
push
and
lcall
adc
adc
xor
push
xchg
test
or
cmc
std
or
ja
adc
fwait
in
pushf
ljmp
std
adc
lea
iret
cmc
dec
into
mov
cmp
mov
adc
or
cmp
gs
ja
xlat
andb
sbb
icebp
ret
dec
popa
sub
xchg
sub
in
rcll
lret
jne
cmpsl
dec
sbb
adc
or
fdivs
adc
xor
jge
cmpsl
fs
jb
outsb
and
rol
test
mov
cmp
cmp
add
jmp
or
stos
mov
xor
int3
adc
addl
pop
mov
xor
aas
pop
scas
addl
stc
and
bound
pop
dec
sub
and
imul
xor
fs
adc
mov
sarb
mov
mov
pop
pop
pop
sub
mov
push
cmp
dec
mov
push
daa
xor
inc
out
inc
mov
dec
pop
into
cmp
sub
or
sbbl
cmp
add
mov
leave
stos
inc
fs
add
cmp
xchg
nop
pop
incl
in
or
fcmove
mov
lahf
mov
xor
loop
aas
ret
mov
push
add
adc
lods
pop
push
nop
data16
shll
iret
push
pop
push
es
ret
adc
pop
mov
sub
pop
pop
mov
in
adc
xchg
dec
fldenv
addr16
cmpsl
fs
lcall
and
or
inc
mov
xchg
sbb
inc
mov
scas
mul
mov
loopne
daa
popf
andb
cmpsb
mov
je
pushf
aas
fldl
mov
adc
pusha
pop
rolb
xchg
std
scas
push
adc
aas
stc
lea
sub
add
fmul
jae
push
mov
cmpsb
pop
pop
loope
inc
dec
test
mov
adc
inc
movsl
imul
incb
js
lcall
imul
dec
cmp
sbb
leave
add
sahf
in
jno
pop
or
in
movl
lods
push
or
je
fidivl
ficoms
popa
xchg
ret
les
cmpb
pushf
mulb
mov
aam
scas
lods
lds
movsb
sbb
in
jns
test
inc
add
arpl
addr16
and
test
and
lret
jno
in
mov
xchg
sahf
xchg
call
adc
cmp
ja
call
movsb
ss
mov
outsl
insl
iret
adc
out
hlt
rorl
int
mov
add
mov
rcll
jp
out
leave
inc
dec
mov
lods
cmc
xor
cmovg
and
sub
cmp
cmc
repnz
push
enter
incb
add
sbb
loopne
mov
push
adc
cmp
lods
adc
jns
xor
test
shrl
pop
adc
xor
ljmp
sub
std
stc
mov
testl
push
or
and
int3
mov
push
xchg
cltd
aad
arpl
add
or
or
test
jmp
movsl
mov
push
adc
movsb
dec
jecxz
push
mov
jp
int
scas
mov
pop
sbb
mov
dec
inc
js
mov
dec
clc
fmuls
mov
lea
lahf
adc
cmc
rcl
jecxz
ljmp
pop
cmpsb
xchg
sarl
fdivrp
or
arpl
push
inc
dec
mov
adc
xor
inc
cmp
sub
mov
pop
movsl
enter
popf
push
pop
jo
lods
xchg
push
sub
in
inc
pushf
fdivl
mov
add
aas
cmp
sarl
add
xor
mov
and
jb
jg
in
cmpb
dec
insl
dec
imul
or
xchg
aad
popa
ljmp
push
cmp
aad
or
mov
lods
ret
inc
sahf
jae
lahf
and
sbb
rcpps
popf
mov
sub
add
loope
cmp
jle
pop
xchg
sbb
and
jbe
sbb
scas
or
fwait
xlat
push
xor
sub
and
xor
push
jmp
jnp
lds
cmp
and
mov
xor
mov
add
lea
pop
lret
mov
icebp
push
int
out
mov
mov
addr16
xor
enter
les
ja
add
adc
pop
imul
movsl
int3
push
cmpsl
and
out
push
pop
subb
inc
sub
cli
xlat
inc
cmp
jbe
test
rolb
push
push
cmc
js
and
movsl
out
mov
pop
fdivr
and
scas
stos
cwtl
lods
movsl
dec
mov
sub
push
adc
pop
xchg
leave
sbb
movsl
cmp
adc
loope
adc
or
clc
decb
stos
mov
pop
outsl
stos
mov
jo
sti
dec
and
int3
aam
mov
popf
popa
jle
shrb
jnp
inc
sahf
xchg
adc
ret
sub
es
push
xor
jecxz
ja
push
mov
shll
out
cmc
sub
movsl
sbb
fs
fsubp
loop
jl
pop
scas
ss
hlt
clc
inc
nopl
stc
inc
inc
shll
mov
dec
xchg
roll
xchg
xor
xor
gs
or
cmp
jmp
loopne
int
push
arpl
lea
ss
fwait
mov
jle
test
jecxz
stos
sbb
mov
push
xlat
scas
push
add
lret
sub
mov
sub
sbb
jne
pop
fs
dec
lret
outsl
mov
inc
add
jle
add
xchg
lret
pop
push
mov
cltd
adc
lods
sbb
mov
cli
scas
add
movsb
icebp
dec
out
inc
mov
jo
jns
mov
push
cmpsl
test
data16
notb
lea
adc
xor
dec
adc
es
xor
add
hlt
std
mov
js
pop
adc
hlt
jecxz
cwtl
lcall
xor
jg
lret
pushf
sar
mov
into
shrb
and
xchg
dec
inc
leave
lods
jge
push
nop
out
push
fstpl
mov
lods
and
out
in
xor
out
arpl
xchg
and
add
cs
mov
mov
push
sti
daa
jnp
stos
dec
mov
cltd
pusha
fmull
subl
pushf
call
lods
in
lret
jae
mov
fstl
fisttps
pusha
add
mov
pop
icebp
arpl
xor
cmpsl
jecxz
es
repz
cltd
sahf
fstpt
cmp
push
stos
inc
mov
fimull
dec
push
es
out
cwtl
inc
lods
ja
scas
sbb
cmp
sbb
fmuls
rcll
fldt
cs
aam
stos
jbe
mov
pop
xchg
loope
fwait
jecxz
jns
in
pusha
lret
inc
cmp
xor
bound
inc
cs
cmp
fwait
push
xchg
int
add
mov
popf
aaa
jmp
mov
loope
out
jns
movsb
cmc
add
fldcw
inc
add
imul
adc
int
fisubl
fistpll
repnz
mov
mov
sub
cmpsl
and
adc
popa
rcll
data16
in
js
mov
dec
mov
and
push
sub
cmpsb
subps
jp
cwtl
add
mov
cltd
xor
cmp
push
xor
jg
test
pop
jne
fwait
inc
push
cmc
lcall
jbe
aas
cltd
js
mov
xchg
lahf
jg
shr
jg
ret
iret
or
or
dec
push
cmpsb
pop
test
add
rclb
jns
sub
push
cld
mov
push
aad
je
je
cltd
push
paddusb
outsl
lret
sahf
fwait
jae
mov
pop
repz
out
outsb
jp
push
mov
pop
repz
xchg
adc
sbb
pop
adc
rorb
cmp
int
mov
inc
js
in
mov
inc
xor
lahf
xor
add
mov
dec
add
arpl
cli
mov
out
cli
jmp
sub
dec
loopne
es
jae
shlb
outsl
dec
xlat
sbb
push
lcall
push
mov
cld
scas
movsb
pop
cmp
and
sbb
mov
push
sbb
xchg
out
mov
arpl
es
mov
xlat
sub
add
jmp
sub
lea
shlb
sbb
jecxz
repz
push
cld
sbb
sahf
cli
loop
or
mov
jne
pushf
aaa
movsb
sub
test
movl
rcll
aad
dec
jns
stc
int3
les
dec
pop
and
cli
mov
repz
insl
add
and
cmp
xor
pop
loopne
popf
fs
ss
pop
adc
loop
and
or
lds
cmpsb
outsl
sti
mov
mov
movsl
rcrl
add
sahf
and
lcall
js
iret
pop
add
mov
sub
xlat
out
clc
sarb
and
dec
fwait
decl
jnp
sti
mull
out
out
enter
fcompl
push
insl
test
push
mov
xchg
xchg
lret
fs
rolb
clc
and
js
push
not
sbb
pop
push
xchg
mov
and
daa
jecxz
push
bound
xchg
ss
push
sbb
and
je
push
fs
push
out
icebp
sub
add
and
repz
and
loope
ja
int
scas
orl
arpl
inc
push
mov
pop
inc
bound
aad
push
add
jb
call
in
cmp
ljmp
sbb
repz
xchg
sub
jb
rolb
cld
xor
mov
cmpsl
out
sti
mov
sbb
push
dec
fstpl
dec
daa
and
xchg
lret
jbe
push
hlt
xor
or
shrb
mov
movsb
bswap
fucomip
shlb
mov
pop
insl
loope
xor
jo
xlat
mov
ret
popa
mov
xor
or
cmp
shl
mov
mov
sub
imulb
pop
arpl
cmp
jle
leave
dec
nop
fimuls
ljmp
adc
xor
jbe
outsl
ret
push
inc
fldl
ret
or
adc
cmpsl
add
int3
in
add
xor
test
pop
or
dec
ljmp
movsb
outsb
sti
fwait
jb
das
adc
mov
jp
fisubs
fnstsw
pop
and
fwait
add
adc
inc
xlat
dec
inc
mov
add
xchg
mov
repnz
lds
adc
icebp
xor
mov
mov
scas
fsub
decb
int
scas
outsl
xchg
jns
xlat
roll
je
shl
xor
and
test
mov
pop
jbe
xor
xor
add
add
aas
inc
xchg
outsl
insb
das
repz
fstps
push
out
dec
and
es
mov
xchg
daa
xor
cmp
adc
cmpsl
adc
cmc
in
cmp
sbb
insb
jns
pop
scas
ljmp
inc
repnz
dec
popf
loop
icebp
hlt
fcmovu
in
stos
xlat
ret
xchg
and
inc
nop
pop
push
les
and
mov
loop
cld
xor
fimull
ja
jmp
and
fcoms
pop
hlt
push
sbb
rcrb
std
xchg
sbb
mov
dec
clc
loope
add
stc
pop
inc
loop
adc
iret
test
fs
and
jmp
mov
fs
mov
icebp
test
cmp
pop
mov
push
rcll
pop
and
je
mov
push
out
jne
or
and
rcll
cmp
mov
jbe
aaa
stc
dec
out
mov
lds
aas
fistl
and
lock
out
xchg
jbe
mov
sub
or
adc
jb
sub
pop
movsl
mov
lcall
stos
or
push
das
fs
shll
clc
cmc
jg,pn
out
lret
es
adc
add
in
loopne
call
int3
pop
pop
out
lea
repnz
push
pushf
pop
cwtl
pop
pop
sti
fildl
jl
lds
push
mov
ljmp
icebp
and
daa
stos
dec
xchg
push
rcrl
and
adc
shl
std
lods
dec
xor
call
inc
mov
push
cmc
push
mov
mov
movsb
jmp
mov
pop
pop
add
jmp
pop
mov
inc
data16
repnz
jmp
pop
or
and
ljmp
imul
sbb
fldt
jno
or
add
push
ret
ret
in
cltd
cmp
push
cwtl
cwtl
xchg
and
xchg
inc
inc
into
jo
and
jp
mov
rolb
int3
push
cmp
adc
fdivr
movsl
je
dec
loop
dec
loopne
or
jo
clc
pop
cmc
push
popa
jbe
stc
out
cmp
outsl
aad
adc
movd
cmp
push
mov
xchg
rclb
xchg
mov
ret
cltd
mov
andb
lock
mov
rcl
adc
ljmp
xchg
mov
leave
repnz
inc
push
and
jmp
mov
call
and
int3
xchg
jb
repz
cmp
leave
dec
adc
adc
mov
in
jne
outsl
sub
rcll
lret
imull
int
inc
jle
push
ret
jbe
jo
ret
or
ret
xor
test
mov
dec
push
push
push
sti
sub
data16
push
cli
ficompl
xchg
out
stos
stc
andb
inc
pushf
arpl
or
mov
out
and
pusha
xchg
and
mov
or
js
adc
add
inc
ret
sbb
jns
daa
jmp
xchg
cs
js
aas
add
je
jo
or
mov
stc
pop
sbb
sbb
or
lock
cmp
cmp
adc
loop
cmp
mov
and
fisubrs
enter
xchg
dec
in
cmp
jo
scas
aas
pop
stc
js
jne
mov
dec
test
insb
xchg
jb
pop
jg
inc
pushf
test
push
nop
xchg
pop
inc
push
ret
stos
shrl
fs
int
push
repz
mov
sub
mov
push
jns
in
cmp
xchg
test
ret
lock
or
aaa
mov
or
sbb
lahf
inc
mov
add
ror
push
repnz
aaa
xor
leave
mov
mov
adc
out
scas
arpl
jecxz
scas
fwait
push
xor
jle
xchg
jmp
cs
aaa
adc
decl
repnz
lods
ja
stc
out
in
orl
je
ds
hlt
mov
or
and
sbb
jp
fildll
test
das
cmp
je
outsl
or
into
mov
inc
int
roll
fsubrl
pop
lret
repnz
ret
pop
mov
mov
inc
xchg
add
movsl
cmp
fs
sahf
in
push
mov
mov
insl
cld
push
rorl
dec
pop
pusha
int3
dec
mulb
mov
into
xchg
pop
outsb
cmovbe
mov
adc
fcmovnb
nop
inc
gs
push
dec
jmp
sbb
jne
out
jg
cmp
cmp
jne
jnp
inc
bound
das
loope
jl
repz
aad
inc
push
sub
mov
rcrb
lret
mov
xchg
sarl
mov
mov
jl
dec
outsl
cmp
inc
dec
mov
jl
aaa
pop
mov
mov
ja
mov
pop
aas
jp
repnz
stc
iret
sbb
aas
mov
sbb
data16
adc
inc
hlt
popf
test
mov
mov
and
subb
std
scas
inc
test
mov
scas
rcll
inc
jne
dec
adc
mov
pop
shrb
xor
repnz
xlat
or
mov
js
sub
inc
je
pop
xchg
add
or
sub
leave
fwait
popf
xor
adc
jmp
cwtl
push
sub
jg
push
mov
test
cmc
mov
je
mov
xchg
xor
xchg
push
rolb
add
xor
or
xchg
cmp
adc
div
mov
or
daa
push
ret
lea
push
push
imul
popa
jl
pop
movsb
scas
cltd
out
jp
pop
sub
dec
test
addr16
cs
xor
push
idivl
sbb
pop
movsb
pop
jo
push
mov
push
ljmp
xchg
mov
cltd
mov
mov
or
popf
lock
mov
out
pop
and
xor
and
inc
out
mov
jge
sub
loop
xchg
pop
mov
lahf
and
lds
in
out
outsb
or
xchg
fisttpl
loop
fldl
fldl
jg
inc
imul
xchg
cli
push
cmpsb
and
push
sub
cs
push
std
push
ret
adc
inc
mov
push
sub
fildl
ret
shll
pop
nop
popf
jl
lahf
cli
or
ficomps
cmp
lcall
or
add
mov
fsubl
adc
jo
cmp
inc
add
clc
shrb
movsl
cmc
push
xchg
js
jnp
inc
mov
xchg
mov
hlt
pop
inc
and
pop
xor
add
sahf
inc
pop
fdivl
subl
insl
adc
movsb
pop
and
out
jl
xor
push
call
bound
enter
mov
xchg
and
dec
mov
mov
fsubrs
lds
dec
popf
pop
sub
jmp
scas
in
xor
pop
dec
loop
stos
push
fadds
ja
cmp
xchg
cwtl
ret
push
mov
cld
add
lret
sub
xor
adc
iret
out
xchg
fsubl
loope
lahf
xchg
daa
adc
lret
inc
pop
mov
inc
rcrb
push
in
inc
jns
es
inc
adc
xor
xchg
push
mov
mov
lret
sub
imul
in
add
rcrb
sbb
dec
adc
cmpb
jnp
mov
mov
jno
jge
jo
mov
mov
xchg
xor
scas
into
movsb
jne
mov
adc
lahf
popa
jmp
xor
and
lret
cs
sub
or
jecxz
shll
adc
das
lds
mov
dec
arpl
xchg
xor
popf
fdivl
add
pop
cmp
ljmp
pop
nop
scas
notl
repnz
adc
enter
jmp
test
xchg
clc
das
ljmp
xchg
xor
lods
push
in
popw
popf
jmp
xor
cmp
mov
pop
jbe
subl
mov
mov
daa
std
out
sub
push
mov
imul
ret
arpl
dec
jl
sub
repz
and
xchg
push
ret
lcall
jmp
sub
jge
mov
mov
cmpsb
andb
loop
xchg
aas
jp
sbb
cmp
mov
fwait
xor
cmp
data16
lret
dec
inc
stc
inc
repz
scas
lret
insl
push
cli
inc
repnz
and
clc
cmpsl
dec
fcmovnu
pop
std
dec
negl
adc
push
fbstp
andl
scas
aaa
and
into
sbb
and
sbb
dec
xchg
iret
mov
movsl
lds
lods
or
xor
daa
sub
jecxz
int
insl
pusha
or
jo
movsl
sub
je
dec
es
add
mov
push
cmp
stos
lret
in
xchg
push
push
mov
daa
fsubl
arpl
adcl
in
stos
int
and
pop
mov
test
pop
pop
loope
mov
data16
repnz
dec
xor
add
mov
fsubr
aad
sbb
aam
push
jb
repnz
adc
xchg
add
dec
inc
mov
jg
leave
sbb
mov
repz
lds
dec
cmp
fs
pop
mov
popf
jecxz
add
mov
pop
orb
dec
and
and
cwtl
inc
iret
cli
ret
imul
hlt
loop
popf
lods
xchg
mov
push
popf
decl
lea
cwtl
jg
fstp
adc
sbb
push
or
mov
out
push
add
out
cs
mov
test
shll
xchg
and
inc
hlt
push
xchg
mov
sub
dec
mov
adc
pop
xchg
mov
mov
fistpll
xchg
xchg
ret
pushf
mov
stos
mov
jl
flds
jnp
mov
jle
inc
ffreep
sub
mull
dec
xchg
popa
mov
cmp
std
imul
fisttpll
sbbb
loopne
arpl
insl
xchg
sub
std
mov
jge
ja
popa
inc
cmp
sbb
fisubrs
fsubr
or
adc
mov
xchg
xchg
cltd
mov
out
xchg
or
inc
rolb
clc
xchg
xchg
jge
icebp
daa
mov
aas
mov
test
xor
sahf
rcr
aam
cld
xchg
and
hlt
lods
mov
mov
insl
popw
cmp
jb
lock
shll
push
mov
lcall
iret
xor
loop
lds
lock
xor
pop
mov
fldcw
mov
mov
xor
imul
mov
sub
sub
pop
ljmp
jbe
xor
popf
mov
movsb
mov
dec
or
addr16
incb
inc
roll
pop
shl
and
xor
ficoms
or
mov
inc
std
inc
dec
push
mov
push
dec
stos
mov
insb
icebp
dec
inc
cwtl
arpl
jno
xlat
cmp
pop
loopne
in
shl
pop
ret
pop
enter
dec
jmp
dec
and
jge
sub
push
push
ja
lods
xchg
fidivrl
sbb
mov
mov
sub
pop
arpl
add
popa
pushf
mov
jmp
xchg
aaa
mov
aas
push
dec
cli
fildll
mov
adc
or
pop
adc
cs
int
xor
mov
xchg
movsl
rolb
test
js
fwait
jb
lcall
aad
vcvttsd2si
mov
and
imul
loop
das
leave
cmp
rolb
cld
aam
mov
jb
popf
xchg
jbe
subb
sbb
cltd
xchg
push
xor
dec
sub
repz
lea
dec
dec
stc
loop
adc
xchg
pop
sub
fwait
call
push
sub
insl
cmp
dec
ja
mov
xor
out
shl
insb
push
or
cmp
fistps
inc
sub
aas
enter
pop
std
xchg
ljmp
gs
das
jp
jns
jne
enter
je
movsb
xchg
or
addr16
add
lods
loopne
popa
mov
lods
mull
les
mov
jl
add
scas
popa
cld
out
das
test
fdivrl
or
shlb
decb
repnz
sbb
xor
cs
sbb
jmp
lods
test
gs
lahf
fs
mov
in
stc
mov
jno
clc
sub
imul
icebp
test
adcl
jle
jb
sbbl
in
mov
pop
jg
scas
mov
fs
jg
xchg
push
pop
loop
les
pop
mov
mov
jns
jg
push
pop
shrb
lret
pop
into
outsl
sbb
push
fldt
jge
cmp
in
das
loop
sbb
fdivl
sar
mov
mov
pop
enter
jecxz
rorl
lcall
fsubl
nop
test
movsb
stc
lret
jmp
fmul
cmpsl
test
scas
dec
jnp
cltd
fwait
sbb
lods
adc
jns
pop
cld
jbe
scas
or
jno
sahf
mov
mov
sub
fs
pushf
pop
sub
stos
and
jmp
aad
shlb
cli
popf
in
ds
into
jg
sub
imul
cli
std
inc
cmc
outsl
mov
outsl
dec
jl
mov
xchg
repnz
add
int3
stos
inc
add
ds
and
xor
or
xchg
jo
inc
xchg
ja
aaa
testb
pop
xchg
jmp
dec
and
jp
mov
aad
push
mov
loop
mov
push
xchg
inc
les
push
push
and
mov
das
cmp
flds
cmp
mov
imul
dec
fimuls
and
movsb
xchg
mov
mov
leave
or
ljmp
std
addr16
jle
sar
rcr
pop
insl
in
sub
add
mov
cmp
and
or
mov
cmpsb
push
jle
in
push
fldlg2
outsb
lea
test
inc
in
push
xor
or
dec
xchg
and
xor
divb
ds
add
pop
movsb
fdivrp
test
jmp
mov
mov
or
push
clc
sub
add
sbb
jmp
addr16
int3
outsl
pusha
sbb
mov
test
subl
xchg
stos
es
cmp
mov
push
xchg
mov
push
shlb
or
mov
imull
cmp
xchg
xor
jo
je
mov
mov
jmp
mulb
nop
popl
pop
pushf
outsl
and
xchg
hlt
pop
jecxz
adc
mov
dec
mov
fwait
fs
int
int3
ljmp
xchg
scas
pop
scas
sbb
insl
mov
mov
push
pushf
or
mov
adc
mov
leave
cwtl
and
push
movsl
ret
add
xchg
and
or
mov
cmpsl
icebp
pop
adc
test
sti
jp
icebp
loope
mov
orb
mov
stos
inc
dec
call
jl
add
leave
lahf
push
dec
adc
incb
js
scas
hlt
mov
bound
sbb
adc
mov
sub
xchg
out
ljmp
or
mov
mov
rcr
adc
jae
inc
and
inc
and
lea
in
adcb
push
fbld
pop
lea
inc
sub
pop
std
xchg
cmpsl
fs
pop
test
inc
lret
rcrb
cltd
jp
sub
outsb
adc
cmp
and
decb
push
inc
pop
sub
fwait
arpl
or
scas
mov
bound
inc
mov
aam
xchg
xor
lods
fnstenv
adc
push
fsubrl
rcll
clc
imul
cwtl
ret
loope
loop
and
imul
xchg
pop
outsb
test
xor
repz
mov
icebp
dec
and
pop
mov
add
jb
sub
rorb
repnz
cltd
addr16
out
iret
std
aad
jg
lahf
lret
mov
ja
xchg
cltd
jl
dec
jge
sub
hlt
push
xchg
popf
add
hlt
xchg
mov
nop
out
cmp
cmp
mov
pushf
xor
mov
les
stc
xchg
stos
mov
out
push
inc
mov
fldenv
add
dec
mov
sub
add
cmp
sub
aaa
mov
pmovmskb
jge
lahf
sbb
daa
outsb
push
test
adc
mov
xor
and
stos
and
repnz
ss
inc
ljmp
lea
ficoms
mov
mov
test
out
dec
mov
repnz
test
mov
outsl
dec
push
pop
xor
bound
ret
repz
mov
scas
sbb
adc
add
cmp
repnz
aaa
dec
mov
jg
xor
cmc
lahf
sti
scas
dec
xlat
cs
mov
lea
arpl
pop
inc
push
mov
leave
icebp
push
in
ljmp
cmovge
push
and
ret
fsubl
jbe
sub
loope
test
stos
lret
lds
inc
loope
ljmp
imul
stc
cltd
mov
xchg
mov
lods
adc
xor
sahf
or
mov
sub
movsb
pop
xchg
jbe
mov
or
test
fadds
inc
cmpsb
test
pop
push
pop
jno
aad
adc
xor
pop
xchg
shl
adc
and
test
adc
hlt
add
sysexit
in
pop
gs
ja
fs
dec
sbb
sahf
or
push
pop
dec
xor
test
xchg
sub
out
cld
les
fmul
ret
and
add
in
loopne
rcrb
jno
scas
hlt
xchg
sub
inc
int3
fwait
in
and
sub
adc
xchg
out
test
push
scas
fsubrs
sbb
sarb
xchg
cltd
sbb
hlt
in
push
jg
xchg
and
mov
repnz
inc
jge
popf
and
jl
repnz
shlb
xor
jg
add
pop
or
and
mov
xchg
nop
lret
repz
xchg
out
in
test
xor
inc
mov
or
iret
sub
rcrb
mov
in
mov
xchg
arpl
into
add
mov
inc
movb
test
test
add
mov
add
inc
cmp
cwtl
xchg
mov
sbb
and
dec
cmp
enter
mov
xor
jno
xchg
mov
pop
pop
inc
stc
lods
mov
mov
jo
je
cmp
shrl
shr
imul
ja
cmc
in
pop
xor
or
xor
pop
mov
lods
add
sub
dec
aas
sti
sub
xchg
jo
xchg
jae
push
nop
mov
pushf
adc
test
jbe
pop
adc
mov
xchg
rorb
jl
inc
dec
scas
fmulp
mov
and
scas
push
adc
and
popf
push
adc
sub
sub
movsl
enter
cwtl
inc
jge
out
mov
pusha
stc
movl
sub
mov
add
pop
mov
jle
jecxz
xor
daa
dec
and
cmpsl
jnp
inc
out
inc
mov
jns
pop
inc
lahf
push
movsb
sub
ret
dec
push
icebp
jp
dec
push
jb
leave
aaa
fucom
movsb
faddl
jb
fwait
pop
jge
bound
int3
xchg
xchg
pop
xchg
scas
dec
stos
jbe
cmp
lods
popa
adc
inc
mov
loope
jns
out
das
adc
xor
mov
ja
pusha
mov
aaa
in
mov
mov
mov
cmpl
jg
fidivl
fwait
mov
mov
xchg
test
xchg
pushf
sbbl
loope
and
and
sbb
leave
dec
sbb
pop
cmp
or
add
fnstsw
sub
xor
rorb
lcall
js
aaa
add
push
mov
pop
mov
aaa
push
iret
push
xchg
pop
mov
adc
ja
je
push
mov
cwtl
pop
push
xchg
add
mov
les
sti
xlat
imul
outsb
pop
and
and
mov
push
popf
adc
add
loop
inc
mov
test
pop
xchg
arpl
push
sarb
andl
mov
shlb
cmp
cmc
je
data16
loope
jo
or
xor
pop
insl
fidivs
ljmp
cld
out
popf
nop
call
inc
inc
xlat
cmp
mov
cmp
pop
add
shr
sub
fsts
cmpsb
xchg
push
sub
mov
insb
sub
push
adc
daa
loope
adc
repnz
push
jnp
or
into
pop
adc
mov
mov
scas
stos
pop
sbb
je
add
in
mov
shll
js
add
je
mov
test
imul
test
rorb
lock
xchg
and
out
pop
fimuls
out
push
add
icebp
ja
mov
lcall
cmp
std
adcb
xorb
ja
mov
xor
subb
repnz
cmc
xchg
add
int3
es
enter
cs
mov
es
leave
stc
inc
inc
lods
xbegin
cltd
sub
mov
jno
pop
xchg
adc
mov
sti
lods
xchg
pop
jnp
rcll
fdivrl
xor
test
mov
hlt
xchg
xchg
inc
pop
sahf
mov
adc
fistl
or
mov
in
ljmp
je
rorb
icebp
es
or
insl
add
ja
sbb
std
stos
pop
loopne
sbb
push
cmp
iret
lods
xor
xor
cs
repz
outsb
cwtl
imul
or
add
xor
repnz
bound
dec
enter
cwtl
and
lret
mov
stc
xor
gs
loop
in
jge
mov
push
jno
stos
pushl
jmp
xor
mov
outsb
jg
repnz
iret
in
adcl
mov
data16
ret
jl
xchg
mov
ljmpw
or
mov
scas
ja
push
cmpl
sarl
sbb
mov
in
mov
push
sub
jne
inc
add
jb
movsl
sub
ljmp
movsb
jp
das
and
pop
hlt
mov
inc
std
iret
sub
pushf
jb
mov
sbb
aam
insb
jge
sub
push
loop
stos
cmp
fsubrs
cmpsb
xchg
lods
or
cli
mov
jmp
sub
xchg
mov
mov
jo
outsl
stos
decl
inc
inc
adc
add
mov
lahf
popf
sbb
popa
inc
pusha
xchg
call
js
aaa
or
stos
dec
or
or
icebp
mov
adc
sub
mov
test
pusha
and
xchg
add
jp
fwait
nop
sub
fstps
enter
sbb
fcmovbe
jmp
pop
cs
push
jle
push
and
pop
pushw
orb
inc
into
nop
push
xchg
cmp
add
xchg
inc
fmulp
into
push
fsubrp
ljmp
scas
and
mov
rol
insb
pop
addr16
scas
leave
and
pushf
xchg
xchg
pushf
sti
cld
xchg
mov
loope
in
xchg
xchg
and
mov
cmp
mov
hlt
addr16
inc
cltd
ret
mov
pop
mov
sub
test
mov
inc
call
popf
pop
dec
int3
in
dec
sahf
shlb
and
fdivl
adc
fbld
jne
stc
lret
add
repnz
mov
lds
or
push
hlt
movsl
inc
bound
outsl
je
fisubl
xor
xchg
stos
cmp
rclb
clc
stc
adc
inc
xchg
lcall
jg
jp
add
push
aaa
lods
insb
jb
xor
aad
mov
add
int
mov
incb
mov
out
mov
xor
loopne
mov
decl
stc
sti
das
or
sbb
lcall
nop
jnp
fwait
test
adc
push
lret
sub
cmpsl
jg
add
pusha
loop
loope
popa
mov
movsl
mov
insl
call
mov
out
subl
pop
xchg
or
sbb
pop
jmp
in
pop
pusha
in
icebp
add
inc
test
mov
ret
jge
add
repz
pushf
enter
lea
or
movsb
inc
add
aad
add
bnd
push
test
cmpsb
or
out
and
dec
lods
mov
ret
out
dec
lock
jle
mov
ja
es
xor
inc
ljmp
int3
addr16
lcall
pop
sbb
inc
mov
add
out
test
sub
xor
inc
hlt
mov
or
decb
rcll
xor
or
fwait
orb
mov
aad
insl
loope
imul
push
loop
jecxz
clc
idivb
mov
add
notb
outsl
mov
outsl
imul
cmp
iret
cwtl
jae
xor
add
je
pop
sub
mov
dec
push
push
or
jns
inc
or
jo
dec
jecxz
cmp
repnz
test
push
je
in
or
sub
jnp
out
fndisi(8087
mov
repnz
xorb
xchg
loopne
lock
xchg
iret
sub
cmp
int
data16
push
test
mov
push
jg
iret
add
fisttpll
daa
xor
add
xchg
cmp
pop
xor
add
out
lods
xlat
movsb
mov
iret
add
push
sub
push
lods
insl
imul
lods
xchg
mov
cs
out
enter
dec
call
push
or
dec
std
sub
push
mov
jbe
push
mov
stos
outsl
scas
insb
jb
pop
movsb
icebp
and
push
fidivs
xor
js
jnp
mov
in
push
push
cli
mov
push
push
jle
rclb
jg
ds
fnstsw
push
sbb
ja
in
out
jne
pusha
pop
jns
inc
mov
add
cmpsb
outsb
cwtl
fdivl
test
and
push
out
sbb
hlt
pop
in
in
push
add
push
out
adc
sub
dec
into
fisubrs
mov
pop
je
movsl
mov
pop
in
lcall
sbb
dec
jbe
jns
mov
outsl
jmp
xchg
cltd
cmp
push
mov
ss
mov
xor
ja
arpl
and
cli
ret
pop
bnd
bsf
mov
not
push
neg
movsl
js
push
fwait
push
xor
or
pushf
sub
cld
xor
cmpsb
popf
movsl
xchg
nop
in
clc
xor
or
in
inc
out
insb
lea
jne
pop
ror
popa
stc
inc
and
jg
aas
pop
mov
outsl
mov
hlt
mov
push
mov
cwtl
push
jb
lock
or
mov
dec
es
sub
aad
xor
movl
push
mov
adc
xchg
clc
jp
cwtl
dec
fsubrp
scas
stos
in
mov
das
je
movsb
sub
lds
add
sub
xor
subl
adc
icebp
jb
mov
mov
jmp
popf
scas
push
fbld
fdivrs
lods
in
mov
sub
mov
cmp
sub
stos
push
push
sbb
jp
clc
inc
sti
sub
repz
mov
or
stos
inc
ret
lds
sub
mov
cwtl
fs
nop
push
jne
jbe
es
in
sti
sub
jge
sub
and
pop
or
jg
dec
cmpsl
and
in
mov
jbe
gs
nop
sub
test
sbb
add
dec
std
cli
or
push
cmp
repz
inc
cmp
and
cmpb
movsb
mov
sbb
or
push
mov
daa
adc
insl
or
fisubs
aam
mov
push
imul
test
cs
cmpsw
cmp
mov
aad
repnz
and
cmp
jle
cmp
loope
insb
or
or
xlat
dec
sub
or
xchg
push
hlt
enter
and
call
mov
ret
cmpb
loope
mov
add
fildll
mov
push
lods
daa
es
mov
mov
lock
in
or
jo
mov
or
dec
jno
mov
jmp
xchg
cs
mov
xor
hlt
push
inc
je
sbb
inc
and
mov
nop
cmp
in
imul
lods
shll
cmp
clc
scas
sahf
loope
mov
aaa
rclb
fsubrl
mov
push
mov
es
ficomps
inc
insb
and
shl
gs
sbb
mov
ss
test
aad
or
lret
push
pushw
inc
inc
xchg
cmpsb
cltd
pop
mov
ds
mov
pop
cld
lret
clc
outsb
inc
mov
fldenv
or
push
adc
data16
jb
cmc
sti
sub
cmpsb
leave
pop
push
lods
pop
ss
jge,pn
mov
xchg
popa
push
popa
cmp
outsl
lret
jle
adc
fldt
lret
pop
subb
outsl
mov
jbe
inc
pop
movsb
outsl
stos
mov
das
js
inc
mov
mov
repnz
fidivl
add
adc
adc
stc
sub
mov
sub
lds
in
jns
adc
push
loop
inc
stos
push
sub
mov
xchg
ja,pt
mov
repnz
or
pop
cmp
ja
sub
mov
fdiv
cmp
loopne
lds
push
cmpsb
into
push
mov
inc
stos
mov
xchg
xchg
repnz
xchg
xor
stos
pop
cli
xchg
int
js
sti
dec
jecxz
popa
out
test
rcr
mov
sbb
into
mov
push
inc
jg
xor
xchg
adc
xor
mov
dec
cld
rorb
sbb
push
gs
aam
jo
or
inc
sub
sbb
mov
push
xor
xchg
mov
lret
repnz
lock
xchg
mov
repz
xor
rcl
add
rolb
insb
pop
cmpsl
out
jne
add
adc
lcall
jp
fldenv
dec
push
shl
out
dec
mov
jp
or
cwtl
adc
outsb
pushf
jmp
in
jbe
orb
push
cmpsb
or
mull
fldl
je
inc
sub
scas
mov
and
adc
mov
xchg
and
mov
setle
int
sbb
lret
in
fldcw
add
pusha
add
mov
out
mov
inc
jnp
int
cli
arpl
out
mov
cmp
lret
or
or
divl
mov
inc
push
lea
mov
inc
hlt
out
jne
mov
add
dec
jl
cld
xchg
aad
pop
mov
negl
data16
adc
int
inc
xor
popf
in
adc
sbb
inc
cmp
mov
sbb
xor
push
mov
adc
loopne,pn
xlat
lahf
sub
pop
lret
sub
lcall
daa
ss
rcrl
test
aas
jmp
add
add
mov
jg
jmp
lods
and
rolb
pusha
into
in
and
in
pusha
aas
and
loope
imul
addb
xorl
test
ss
xchg
inc
sub
icebp
ljmp
push
push
mov
call
cs
test
cltd
mov
sarb
popf
xchg
into
cmp
add
jge
jp
mov
lret
pop
add
cmp
pop
insb
or
outsl
cltd
jp
int
fdiv
lcall
dec
pop
bound
sar
and
notb
push
sbb
mov
mov
jmp
push
adcb
sub
jne
mov
xchg
mov
adc
cmp
bound
movb
inc
dec
pusha
push
sahf
in
ds
mov
xchg
dec
stc
lret
adc
std
test
add
iret
sub
cmp
or
add
insb
add
pop
lock
xchg
lcall
pop
cmp
mov
dec
divl
pop
dec
adc
aam
std
mov
pop
xor
mov
imul
pop
jne
loop
pop
mov
xor
lcall
push
pop
pop
movsb
jmp
push
test
xchg
pushf
clc
movl
xchg
fists
inc
loop
int3
xor
cld
lea
mov
cmp
xchg
xorb
pop
cmpsb
mov
lds
pop
or
mov
nop
cwtl
faddl
adc
lods
enter
inc
ret
push
xchg
sbb
sti
hlt
andl
scas
mov
cld
test
scas
jnp
scas
xor
iret
mov
fwait
notb
add
lret
dec
stos
jp
dec
add
fxtract
pop
setnp
sahf
xchg
fcompl
movsb
imul
lea
inc
movsl
xchg
mov
nop
das
cltd
xchg
ds
jbe
push
in
in
nop
lret
decl
push
int3
adc
jl
sub
cmpsb
sbb
xchg
or
lods
sub
cmp
ret
call
nop
dec
enter
xchg
xchg
out
lods
mov
shlb
cmpsl
lock
addl
sbb
cmpl
xchg
gs
shrb
pop
push
fsubr
dec
insl
push
ss
sbb
fistps
xor
insl
data16
into
or
clc
push
in
and
fstp
fwait
test
inc
repz
dec
and
mov
test
dec
test
shrb
sub
push
ss
jno
mov
jl
stos
or
sbbl
inc
mov
pop
push
xchg
and
jo
mov
data16
add
dec
push
stos
jno
xchg
imul
jne
outsb
rcll
in
or
push
sbb
cmp
lahf
cld
xchg
sti
sar
loop
adc
sbb
or
pop
jbe
insl
out
rep
xor
jne
or
pop
pop
rcll
mov
popf
aam
add
loopne
mov
or
adc
pop
in
and
mov
mov
push
mov
sahf
lods
inc
repz
sub
mov
mov
jbe
lods
and
and
lahf
dec
stos
stos
mov
std
insl
scas
xor
inc
aas
adc
out
in
lea
aas
arpl
push
test
sbb
push
or
mov
add
adc
push
orl
add
shll
loope
and
xchg
jmp
mov
mov
mov
stos
mov
cmp
lods
mov
adc
out
je
out
or
mov
les
inc
push
xchg
lds
loopne
es
std
ds
sbb
inc
jae
and
cwtl
sbb
out
das
push
xor
fsubs
fidivl
popa
push
test
sub
pop
mov
std
and
mov
les
cmpsb
cli
mov
xor
aaa
cmp
imul
aaa
sbb
push
jae
repnz
mov
jne
pop
add
enter
sbb
cmp
or
and
sbb
sub
int
nop
push
cwtl
out
insl
cld
or
ret
ja
pop
pushf
ret
mov
push
push
in
pop
inc
je
in
lock
adc
out
cmpsl
adc
mov
movntq
popf
push
mov
aad
push
insb
jle
scas
jne
jmp
test
rorl
adc
mov
std
loopne
lods
xchg
xor
xchg
dec
cmp
outsb
out
lock
sahf
or
sbb
test
sbb
jge
or
ja
aas
std
jle
inc
test
loop
jae
test
adc
mov
test
cmp
xor
test
mov
loope
loop
sbb
sub
lock
ret
adc
lret
outsb
aad
or
jp
movsb
xchg
mov
add
pop
out
inc
lea
mov
mov
dec
sti
icebp
fsubl
gs
leave
add
enter
outsb
das
nop
je
loop
pop
sbb
inc
gs
pushf
or
pushf
mov
push
cmp
jmp
xchg
ficoml
or
clc
or
push
pop
cmp
xor
inc
inc
jl
cli
xchg
testl
sbb
xor
dec
ds
int3
mov
and
repnz
pop
divl
leave
out
test
and
shll
push
push
ror
sahf
cmp
dec
iret
dec
pop
loope
insb
std
push
notb
rorb
stc
lods
fsubrl
dec
xchg
xchg
jbe
cmp
psadbw
bound
xor
xchg
mov
gs
stos
sub
mov
jl
mov
inc
in
sahf
cmp
mov
movsb
ja
xchg
push
cmp
xchg
ds
dec
insb
lret
mov
clc
xchg
divb
xchg
xor
mov
xor
popl
dec
pop
lds
pop
inc
add
sub
or
jmp
imul
pusha
mov
jb
or
outsl
ret
jbe
test
movsl
aas
stos
adcl
ret
sarb
pop
leave
and
inc
mov
jp
inc
mov
push
scas
mov
into
pop
insl
fcmove
cmpsl
xor
sbb
jae
jno
push
cli
arpl
adc
mov
sti
pop
mov
add
popa
filds
test
inc
arpl
das
xlat
andb
cmp
in
jp
lock
aad
sbb
sti
jl
out
pushf
arpl
push
sbb
jecxz
mov
daa
nop
cltd
aad
repnz
xchg
pusha
ret
fwait
int3
and
push
sub
xor
cmp
mov
jae
dec
add
divb
and
and
push
iret
dec
imul
pusha
incl
nop
adc
fidivs
mov
into
dec
inc
inc
bound
adc
testb
aas
pop
or
ret
decb
cs
fldt
mov
lret
push
aaa
leave
mov
pop
mov
cmp
addl
les
mov
inc
js
mov
add
cmp
adc
push
dec
cmp
jnp
loope
mov
test
xor
aad
out
jg
xchg
dec
mov
sti
ja
mov
incl
out
jb
mov
cwtl
xor
testl
int3
fstpt
scas
movsl
enter
and
clc
lock
lcall
pop
nop
and
jg
mov
in
repz
jmp
aam
fcmovbe
ds
mov
fbld
scas
add
movsl
mov
jg
fistpl
test
xor
adc
loop
pop
jnp
push
ret
jge
nop
test
add
lock
subl
movsl
arpl
inc
divl
fs
popf
cltd
mov
add
cmp
fimuls
push
pop
repz
gs
gs
mov
das
adc
imul
fmuls
cmp
dec
jbe
sub
push
test
in
loope
jno
or
xor
cld
push
jp
cwtl
je
mov
rol
enter
repnz
bound
test
mov
push
dec
insb
lods
or
dec
jb
sti
call
cmp
dec
xchg
out
push
pop
jmp
nop
sti
in
cmpsl
push
mov
mov
icebp
sbb
stos
sti
push
fcompl
scas
mov
iret
repz
xor
leave
jbe
daa
fstl
shll
adc
add
sbb
ljmp
movsb
dec
ret
into
ss
mov
xchg
lcall
push
ret
adc
jmp
insb
or
jg
pop
jb
leave
test
jae
add
leave
sar
out
imul
loope
push
push
push
test
inc
mov
outsl
jle
pushf
jns
js
mov
lcall
pop
push
xor
iret
or
mov
push
mov
ds
std
movb
in
mov
outsl
pop
mov
jecxz
cmp
sbb
add
addb
xlat
dec
adc
or
fs
data16
out
dec
in
test
xor
in
cwtl
ss
inc
movsb
mov
sbb
hlt
cmp
ja
nop
or
stos
adc
sti
add
mov
fnstcw
loop
xor
cmovp
mov
int
cwtl
sub
arpl
je
mov
jnp
fwait
mov
xor
pop
cmp
pusha
jp
outsl
push
stos
rclb
sub
repnz
fwait
aas
push
fdiv
sti
mov
test
mov
cmc
fcompl
xchg
sahf
ja
xchg
adc
and
fstpl
repz
mov
jo
std
fldenv
fidivrl
dec
fs
cld
push
pop
sbb
xchg
cs
test
inc
add
insb
aad
xlat
pmaddwd
and
pop
xchg
stc
ja
fwait
and
out
and
mov
push
or
rcrl
push
negl
sbb
dec
fnsave
mov
inc
jg
or
sub
hlt
ret
faddl
jnp
jmp
ljmp
call
out
lea
xchg
dec
inc
adc
jle
jno
and
mov
in
sti
mov
pusha
jae
xchg
stos
push
or
push
push
or
insl
dec
cli
sbb
ljmp
inc
jae
and
loopne
mov
push
pop
pop
push
and
fists
xchg
mov
xchg
not
sbb
push
test
cmp
dec
les
dec
aam
ret
daa
fsubl
and
lods
sti
loopne
xor
repz
or
add
xor
and
repnz
out
mov
stc
mov
insl
inc
popa
xor
ss
jle
repnz
lahf
cltd
jbe
cwtl
int
mov
sub
add
or
xchg
pushf
xor
clc
or
test
push
push
sub
popf
jmp
mov
cmc
movsl
dec
ja
xchg
sub
push
pushf
xchg
inc
inc
add
jge
mov
inc
imulb
incl
mov
fiaddl
or
test
xor
and
xor
je
jmp
jl
jae
lahf
imul
add
mov
mov
ss
jecxz
repnz
in
in
insl
dec
jmp
push
ret
cmp
icebp
mov
push
inc
cltd
pop
push
sub
repz
lock
push
mov
data16
push
jp
cltd
adc
sub
mov
sbb
popa
jg
xchg
push
fsubrl
cwtl
sub
idivl
int3
pop
push
push
cmp
es
sti
mov
cmp
push
jecxz
jae
test
and
lods
mov
or
jmp
mov
icebp
mov
inc
shlb
scas
test
jmp
in
repz
mov
adc
mov
or
mov
xor
addr16
into
shll
jmp
cmp
nop
scas
jne
push
or
pop
clc
mov
cltd
mov
cmp
das
jns
add
fsubl
jne
adc
push
js
lods
test
and
loope
mov
jae
mov
mov
inc
push
inc
pop
pop
mov
sbb
or
sbb
mov
sbb
xchg
mov
and
into
ret
shlb
jne
pop
adcb
ljmp
into
inc
mov
mov
pusha
sbb
pop
int3
xchg
inc
movsb
add
jns
mov
loope
inc
and
clc
aaa
cwtl
mov
and
movsb
sub
bound
sbb
cmpb
dec
mov
or
xchg
imul
jge
popf
mov
dec
jmp
or
leave
xchg
mov
pop
mov
lret
jno
or
mov
in
pop
jae
pusha
sub
leave
jne
mov
hlt
mov
in
cmpsl
out
xor
dec
mov
sbb
lock
push
add
les
jmp
sub
mulb
lret
cwtl
into
fstpt
lret
imul
sbb
push
aad
cltd
movsb
sub
mov
ss
mov
or
in
ret
inc
repz
xchg
repnz
and
sub
xor
jns
sbb
pop
inc
xor
and
test
adc
push
mov
lcall
stos
xchg
xchg
stos
ret
add
jl
testb
loop
push
mov
int3
lock
stc
adc
jae
repnz
lahf
jns
dec
mov
aad
pop
push
mov
lds
xchg
outsl
movsl
push
push
mov
add
mov
jns
stos
js
pop
es
std
insb
insl
sti
js
je
jbe
cs
mov
fdivr
in
mov
fstps
inc
add
fsubrl
or
or
data16
data16
sti
and
sar
jb
xor
and
inc
sbb
sub
movsb
mov
movsb
stos
filds
out
cld
into
add
testl
or
into
roll
jae
into
mov
cwtl
mov
loope
test
adc
scas
push
filds
call
andb
sub
xor
lods
test
xor
aad
fadds
repnz
ret
jle
fadds
or
or
iret
jnp
addb
stc
mov
pop
es
jo
and
jnp
push
scas
adcb
inc
adc
push
jmp
lods
lods
aam
lcall
xor
xchg
leave
smsw
jp
adc
sub
ret
sbb
ss
fidivl
adc
ret
fiaddl
mov
add
pop
lock
cmc
ret
mov
adc
inc
jnp
dec
ljmp
pop
pop
cmpsl
dec
sbb
inc
adc
adc
daa
loope
adc
push
mov
jne
jecxz
das
test
test
or
dec
pop
jne
inc
stc
jae
addr16
push
pushf
mov
xor
es
fnstenv
lret
pop
mov
and
mov
test
iret
rep
imulb
jecxz
push
enter
ret
jnp
or
dec
push
loopne
subb
dec
sbb
fnstsw
jns
pop
adc
pop
iret
pop
imul
dec
jbe
sub
cmp
fbstp
push
xor
mov
ljmp
mov
cmp
mov
loopne
mov
jno
fcmove
lock
icebp
shlb
mov
sbb
mov
push
shrl
mov
xor
pop
test
xchg
shlb
int
inc
es
lods
dec
dec
dec
sub
adc
adcb
xor
mov
lcall
cwtl
or
rclb
jge
mov
pop
lea
nop
dec
gs
ficompl
xchg
stos
in
dec
lods
test
sbb
out
pop
pushf
mov
jge
sbb
int3
or
icebp
jge
and
lods
dec
addr16
lea
pushf
mov
rcll
mov
sub
pop
pop
add
cmp
mov
mov
dec
push
mov
js
cmp
scas
stc
push
pop
repnz
sbb
leave
test
shll
out
into
sarb
lcall
mov
cld
cmc
ljmp
fsubp
andb
jns
cmpsl
or
xor
jmp
loopne
and
lock
sub
push
loopne
sub
popf
fstpt
bound
jmp
ss
pop
sarb
sbb
mov
add
lock
mov
test
test
mov
mov
mov
cmpsl
xchg
mov
adc
push
lods
mov
mov
or
mov
lods
lods
mov
mov
pop
jne
je
cmp
and
std
pusha
outsb
sbb
mov
lcall
pop
popa
inc
leave
and
repz
cwtl
decb
gs
add
lret
jnp
ret
sub
adc
fisttps
iret
xchg
in
inc
mov
sub
loope
or
xchg
lods
xchg
cmp
into
and
mov
mov
stc
cs
fwait
sub
lcall
popf
repz
bound
xor
fsub
cmp
xchg
stos
call
andl
enter
mov
addr16
xchg
add
pop
sbb
and
cmp
mov
outsb
jno
mov
popl
in
lcall
or
xor
cmpsb
and
jno
cmp
fisubl
mov
inc
stos
xor
roll
cli
push
loop
adc
and
sub
jns
stc
ret
jae
add
fdivr
into
jecxz
lods
sub
jp
stos
mov
inc
cmpsl
dec
test
or
mov
adc
lret
repz
cwtl
sub
mov
scas
mov
push
xchg
js
inc
mov
add
or
dec
mov
fidivrs
pop
mov
adc
mov
sub
stc
mov
aam
jecxz
pushf
rcl
ss
mov
vprotd
fdivrs
mov
test
push
cli
ret
push
std
mov
daa
xchg
jbe
iret
data16
leave
jnp
jb
add
fstpt
mulb
lea
or
test
adc
and
or
mov
xchg
push
and
jnp
cmpsb
inc
and
xchg
sti
jnp
inc
lods
cwtl
shr
pop
mov
addl
insb
pop
lea
add
jno
fs
jae
repnz
mov
push
sub
push
shrb
out
xor
xchg
push
sub
aas
mov
test
ja
shrb
inc
sbb
imull
mov
inc
ds
shll
ret
sbb
adc
dec
pop
rol
push
ror
rcl
mov
popf
jbe
push
add
inc
xor
lock
das
and
repz
aas
loopne
imulb
mov
jecxz
xchg
add
or
pop
xchg
xchg
pop
jb
and
jmp
push
out
ds
fisttps
cmpsb
mov
xor
sti
or
xchg
cmp
repz
ss
jne
cs
jnp
ds
movsb
or
jge
cli
jbe
mov
leave
inc
lock
push
roll
fucom
lods
inc
sub
pushf
mov
or
mov
testl
pop
decb
xchg
inc
inc
bound
das
aam
or
xchg
cs
cs
movsl
jbe
mov
ficoms
stos
mov
lret
insb
loop
jg
xor
pusha
and
xor
dec
imul
cmp
fisttpl
js
loopne
fs
push
aas
push
xlat
call
shrb
lock
stos
addr16
popa
and
or
sub
xchg
je
jle
sbb
popa
leave
aad
push
mov
pop
mov
or
in
or
notb
aam
add
pop
jl
dec
shlb
sub
mov
adc
or
xorl
nop
popf
js
lods
call
out
in
insl
pop
mov
inc
or
sub
hlt
jge
jl
out
cmp
cs
arpl
pop
mov
xchg
and
cmpsb
test
stos
mov
mov
loopne
cld
int3
stos
pop
push
das
pop
hlt
push
mov
xor
inc
add
ds
ds
mov
xor
mov
scas
adc
xchg
sarb
xchg
push
xor
dec
lcall
cld
movsb
ret
fsubl
lock
cmpsl
gs
adc
push
cmp
mov
jb
scas
jae
jge
jnp
jg
lret
orb
pop
outsl
add
push
adcb
xchg
inc
push
mov
in
test
call
jb
and
mov
cmpsb
xchg
fmuls
addr16
xor
pop
dec
jmp
fistpll
lret
leave
rorl
inc
fldl
jbe
cmpsb
je
sub
aaa
ja
pop
mov
pop
sub
or
mov
push
cmp
mov
or
popf
imul
je
rclb
iret
popa
add
les
stos
nop
cmp
push
xor
cmp
mov
lods
and
mov
mov
in
aam
dec
lods
rcr
cmp
fmuls
jns
and
stos
dec
pop
fiadds
fidivrs
xorb
and
stc
jae
sub
and
daa
sbb
mov
loop
push
enter
sbb
imul
sbb
and
pusha
das
insb
mov
popf
mov
jg
rcl
pop
aaa
xor
mov
sbb
mov
sub
stc
dec
movsl
loop
push
adc
flds
xchg
push
cmp
sbb
and
es
scas
bound
popf
aas
loop
mov
adc
data16
xchg
jl
movsl
inc
jg
stc
xchg
test
pop
andl
test
arpl
push
mov
jns
dec
mov
shr
pop
sub
xlat
scas
dec
sub
jle
fcmovnu
inc
add
mov
jo
pop
in
sarb
mov
mov
cmp
mov
mov
xchg
rorl
out
xorl
outsl
stos
jl
jg
repz
lods
pop
adc
inc
add
sbb
xchg
xor
mov
mov
push
sbb
ret
sub
pop
push
push
jne
or
xor
ret
or
fiadds
movsl
popa
int3
mov
mov
daa
outsl
jb
cmp
sub
cmp
sub
jg
push
cmp
mov
mov
lock
mov
popf
adc
stos
lahf
bound
jl
push
push
mov
movsl
push
subl
div
jecxz
dec
sbb
add
mov
mov
xchg
jbe
dec
js
lcall
dec
mov
sub
dec
lahf
or
fildl
dec
mov
imul
push
sbbl
das
movntps
rclb
sbb
sbb
fs
push
imul
mov
and
insb
aaa
mov
push
mov
jae
incl
adc
sub
mov
cmp
add
inc
outsb
sub
cs
rcrb
mov
jmp
loop
call
clc
fisttpll
sbb
cmc
inc
mov
inc
cmpsl
or
or
cltd
out
inc
fidivs
mov
add
leave
imul
hlt
lea
outsb
movsl
xor
push
shlb
mov
dec
movb
jp
push
xor
xchg
add
std
add
xor
sahf
push
mov
mov
jg
pop
push
push
shlb
or
test
cmp
sbb
mov
mov
dec
icebp
inc
in
orb
pop
out
fdivrs
jg
outsl
addb
insl
aam
and
testl
out
add
leave
mov
outsb
sbb
jnp
xchg
xchg
push
fwait
daa
les
dec
dec
or
or
cld
or
pop
sub
into
xchg
xchg
out
gs
xor
test
adc
cmc
stos
pusha
sti
je
aad
lret
cmp
pop
add
xchg
shll
xor
sub
lea
push
inc
and
aas
sbb
or
mov
mov
stos
jg
mov
cmp
mull
fnstsw
add
adc
pop
cwtl
pop
adc
sbb
xchg
aaa
aam
push
aas
mov
outsb
icebp
push
hlt
mov
dec
cmp
pop
add
icebp
gs
push
stos
imul
inc
hlt
cmp
sbbl
ljmp
inc
push
out
mov
cmp
push
les
cli
stos
sub
cmpsb
sbb
xor
mov
or
push
movsl
mov
int3
pop
daa
adc
scas
dec
cmpsl
adc
sub
cmp
sbb
neg
lea
mov
inc
imul
ss
pop
mov
pop
jmp
or
fcomps
ljmp
stos
in
or
cmp
stos
mov
nop
repnz
addl
push
les
stc
dec
int3
js
movsl
mov
cmp
mov
and
idivb
push
jbe
test
stos
insb
int3
pop
mov
xor
dec
rcrl
sub
pop
lahf
mov
push
and
int
mov
or
push
jmp
nop
sub
sub
popf
psubd
sub
aas
or
mov
sub
xor
cmp
inc
sahf
mov
push
test
push
xchg
or
hlt
add
jno
aad
xchg
adc
negb
test
add
jb
sbb
push
leave
sbb
addr16
mov
and
cmp
clc
push
add
sub
mov
mull
insl
xchg
xor
lea
fsubrs
outsb
sub
test
push
push
pop
xor
jmp
cmp
push
and
lret
popf
rorl
jmp
fnstenv
into
push
lea
in
sbb
cld
ja
mov
cmc
cmp
sbb
inc
adc
cmp
outsb
cmc
mov
pusha
shr
lods
xlat
xchg
out
sub
xchg
movsb
ret
push
arpl
cmpsb
jmp
shrl
aad
fildl
mov
nop
xchg
push
xor
adc
movsl
andb
nop
cmpsb
pushf
cltd
jbe
sbb
mov
mov
daa
mov
mov
and
sub
inc
inc
mov
iret
push
lock
outsl
mov
or
inc
and
pop
in
mov
add
notl
add
xor
cwtl
es
lret
test
xchg
inc
int
aas
adc
popf
inc
movsl
int3
test
mov
orl
data16
in
push
lret
sub
push
lret
xchg
sub
mov
mov
leave
xchg
xchg
pop
sbb
sbb
out
or
out
testl
sub
pop
mov
adc
push
popa
lahf
cld
inc
jns
pop
sub
mov
dec
pop
add
push
adc
sub
xor
lock
xchg
mov
dec
cmp
repnz
inc
adc
mov
int
jne
mov
inc
add
cs
mov
aam
push
or
mov
and
or
faddl
in
push
pop
cmp
push
in
cmp
add
sbb
mov
stos
pusha
adc
fadds
inc
or
ss
fwait
int3
ljmp
je
scas
or
cmpsl
sub
cmp
dec
and
xchg
sbb
sbb
pop
or
pop
aam
cmp
cli
push
push
sbb
stc
movsb
int3
out
adc
xchg
mov
rcl
fucom
xchg
aad
xchg
ja
mov
ja
sbb
ret
xor
in
inc
sub
fs
mov
fs
data16
dec
stc
int
mov
xchg
scas
jo
xor
stc
pop
mov
mov
arpl
dec
sbb
loopne
xor
fs
sbb
push
add
xchg
pop
imul
faddl
dec
lcall
ret
add
mov
cli
rep
in
lock
aas
mov
scas
leave
jmp
fstl
or
sahf
lods
add
inc
mov
adc
fdivrl
pop
pop
xchg
gs
shl
or
jb
mov
lcall
or
rcrl
loopne
rcrl
test
movsb
les
lods
das
xchg
pop
add
leave
dec
xor
inc
loop
testl
cld
fsub
xor
or
inc
push
pop
int3
add
cmp
ss
jnp
push
and
inc
into
fs
push
cs
nop
jae
imul
pop
lahf
xchg
cmp
scas
hlt
jle
sbb
sbb
into
dec
out
inc
mov
pusha
mov
hlt
bound
rcr
dec
rclb
test
pop
sbb
shlb
mov
orb
clc
nop
push
push
sub
jnp
adc
mov
popa
cwtl
sahf
sbb
test
xchg
cmpsl
les
and
leave
dec
es
les
adc
sub
inc
cmpsb
push
and
test
rolb
cmp
fabs
push
adc
dec
ret
movsl
sbb
sbb
cltd
out
ret
inc
cltd
jmp
jp
out
testl
xchg
outsl
frstor
in
movsb
sub
inc
aas
pop
dec
pop
xor
lcall
leave
mov
pop
sub
pop
ret
push
sbb
shrb
lret
in
cmp
data16
ja,pt
lods
insb
enter
insl
out
cltd
lret
jmp
out
pop
loope
into
shll
call
jmp
aam
inc
scas
inc
aas
or
mov
inc
xor
sub
xchg
mov
fwait
les
stos
sbb
lcall
cmpsl
pop
adc
aaa
in
adc
adc
insl
enter
sub
das
xchg
lods
loope
and
push
fildll
fbstp
insb
jns
mov
sub
xchg
adc
jmp
xlat
jmp
adc
stc
repz
adc
ds
mov
push
adc
fiadds
stc
jmp
sbb
mov
xor
jne
ret
xor
movsb
rcll
pop
ret
rcl
in
cmp
cmp
pop
mov
ss
setp
int
les
ds
movsl
xor
and
mov
cmp
jns
mov
xchg
cld
sbb
push
jp
jb
mov
mov
pop
mov
mov
cmpsl
and
mov
cmp
in
fstps
ret
mov
les
test
pop
xchg
cli
jo
mov
test
insb
pop
dec
popf
adc
mov
dec
dec
cli
inc
push
push
dec
das
aas
xchg
sahf
mov
cmpsb
push
inc
pop
in
cli
js
shll
cmp
mov
out
xchg
and
mov
ja
mov
pop
fimull
push
lret
ret
jp
les
jns
xchg
repnz
call
push
in
les
xchg
pop
gs
and
adc
add
cmp
lds
ja
testl
popl
jno
cmp
xor
cmpsb
adc
test
pop
cmpsb
mov
mov
push
mov
adc
mov
lahf
dec
inc
mov
mov
xchg
lret
mov
imul
enter
pop
mov
pop
mov
inc
movsb
stc
ja
jne
dec
lcall
add
jae
pop
adc
xor
outsl
lods
pop
iret
adc
inc
mov
cmp
push
ret
lea
pop
push
repnz
lods
mov
push
nop
arpl
adc
mov
cmp
fadds
adc
cmpsl
cwtl
insb
xchg
mov
mov
sbb
xor
rorb
dec
dec
insb
push
add
push
sub
inc
fsubrl
xor
mov
sub
fadds
test
adc
mov
mov
jmp
insl
out
dec
int3
mov
push
mov
ds
gs
cmp
loopne
loopne
mov
xor
in
mov
popf
loope
mov
addr16
jbe
aam
cmp
adc
and
cmpsb
mov
dec
adc
or
mov
in
movsl
jle
xor
xchg
hlt
jo
mov
movsb
ret
adcl
lret
push
jno
fsubrl
out
jmp
imul
fildll
daa
aaa
fsubrl
mov
ja
xor
push
cmp
cmpsl
lds
pop
mov
scas
sbb
add
out
fidivs
loop
pop
dec
pop
xchg
xchg
and
jne
xor
ficoml
fadds
test
push
mov
leave
pop
cmp
pop
shrb
inc
mov
cwtl
jbe
popf
aaa
mov
adcb
xchg
xlat
mov
dec
test
add
nop
mov
das
cld
cmpsl
pusha
fisubs
mov
xchg
push
add
movsb
pop
jne
jne
shrb
mov
insl
insl
loope
or
aad
mov
jae,pt
loopne
xor
xchg
dec
inc
and
sbb
inc
mov
push
push
notl
mov
mov
stos
adc
mov
jg
test
ret
inc
leave
pop
xor
cmp
xor
or
push
mov
mov
xorb
jns
adc
lahf
sub
push
mov
mov
movsl
cmpsb
push
loop
inc
push
inc
rcrb
inc
aas
call
xchg
xor
mov
stos
cld
sub
lds
scas
insl
sti
rcll
idivb
cld
and
jmp
movsb
lds
or
imul
mov
aaa
fldcw
gs
sub
aaa
fs
jecxz
dec
fdivrl
push
cltd
mov
mov
aaa
xchg
or
icebp
inc
or
stos
and
mov
shrb
sub
insl
out
or
es
lock
jbe
out
mov
mov
mov
sbb
xor
xor
pop
pop
loop
mov
add
lods
dec
cmc
je
dec
pop
cmp
mov
or
fldt
pop
mov
push
or
test
jle
xchg
xchg
cmpsl
je
testl
mov
out
insb
xchg
std
inc
subb
pop
andl
push
pop
outsb
add
ret
js
insb
loopne
push
xor
test
sti
cmc
jnp
sbb
pop
jl
dec
inc
pushf
mov
out
mov
and
pop
add
shl
mov
sub
ret
popf
pop
mov
push
movsb
and
pushf
fnstsw
popf
cmc
out
push
shlb
das
int3
dec
inc
cwtl
aam
dec
or
lret
adc
nop
xchg
mov
xchg
sbb
cmp
lods
data16
sub
mov
in
jle
pop
aaa
jns
ss
imul
mov
inc
lods
push
sub
das
imul
xchg
xor
outsb
adc
add
fwait
adc
gs
ja
aam
xorb
jns
test
rolb
daa
jl
push
lahf
jge
fdivp
adc
ljmp
loop
pop
leave
xor
cmp
mov
jmp
sbb
enter
add
test
dec
sub
ret
inc
sub
xchg
cwtl
jb
dec
aas
adc
shlb
pushf
jmp
mov
das
and
xor
leave
std
orl
cmp
add
in
xorl
push
push
je
iret
xchg
or
dec
test
pop
fists
push
sbb
jno
push
test
push
inc
fisubrs
stos
loope
cmpsb
cld
pop
push
mov
push
fldt
daa
and
dec
fildl
push
jle
iret
mov
mov
jmp
test
stc
mov
add
gs
xchg
dec
bound
lcall
sti
mov
xchg
mov
xor
inc
call
sub
insl
sub
push
mov
push
out
jmp
pop
adc
add
lret
loop
push
ss
add
sahf
dec
outsb
lds
js
sub
pusha
aam
lahf
adc
mov
mov
lea
fcomps
shlb
push
cmp
push
xor
ret
jmp
xor
pop
push
add
hlt
sbb
mov
cmp
mov
dec
enter
sbb
push
pop
adc
subl
cmp
ljmp
sahf
test
mov
shll
repnz
ljmp
add
mov
add
xlat
xchg
xorl
sti
dec
jl
in
les
andl
cmpsb
jle
ret
jnp
movsb
jno
sub
out
push
outsb
and
insb
xor
cli
pop
mov
fs
fidivrs
ja
xchg
adc
add
mov
cmp
test
push
dec
pop
cld
pop
jecxz
aam
mov
ficoml
sub
not
mov
xchg
div
add
inc
mov
adc
push
or
cs
add
aam
adc
cmpxchg
sbbb
cmp
sub
pop
or
int
push
lods
shlb
push
aas
pushf
and
dec
fs
pop
aad
push
ja
cmc
xor
scas
jo
js
aas
add
subb
mov
imull
add
mov
js
xor
scas
fcom
rol
ficomps
aad
jae
repz
jne
pop
push
lea
iret
lret
sbb
outsb
cmp
cmpsl
bnd
lret
cmp
or
mov
sbb
add
dec
aaa
aam
scas
pushl
push
sarl
push
sub
pushf
pop
dec
adc
fs
mov
outsb
scas
test
and
lods
fstpl
jno
add
mov
shlb
xor
or
xchg
mov
mov
adc
cmp
or
cmpsl
xor
jbe
lods
adc
test
cmp
lret
aam
andl
dec
pop
test
aam
dec
movsb
mov
roll
push
movsb
push
cmc
mov
stc
test
inc
leave
push
mov
sahf
xchg
mov
test
jge
call
xchg
ret
jmp
loop
jmp
push
sti
rorl
add
xor
jle
or
cmp
push
sub
pop
iret
ret
cmpsb
sbb
stos
pop
inc
hlt
sbb
dec
les
xchg
cwtl
adcb
jno
add
daa
mov
cld
sti
ss
push
out
daa
xchg
mov
mov
inc
dec
xlat
push
mov
in
pop
jnp
mov
pop
pop
dec
lahf
sbb
cmc
cltd
sbb
push
js
pop
mov
in
imul
daa
repnz
xchg
cwtl
lock
lcall
fidivrl
mov
fldcw
dec
fcmovne
leave
cmp
pushfw
psubd
and
sub
add
mov
lods
dec
into
add
xor
push
jmp
xor
xlat
ljmp
clc
ja
fidivl
addb
jg
sub
sahf
addb
fsubrp
fnstcw
nop
bound
inc
movsb
push
pusha
jne
mov
sbb
xor
leave
sbb
mov
cmp
repnz
int3
xlat
int
int3
and
jb
mov
xorl
mov
inc
add
adc
ficompl
daa
jae
push
enter
mov
push
dec
in
sbb
inc
sbb
pusha
pop
loopne
push
lahf
xchg
fchs
sarl
mov
mov
pop
jno
sub
pop
bswap
pop
or
xchg
adc
push
mov
aas
pop
decl
lahf
and
aas
adc
xchg
imul
in
jge
mov
push
push
xor
mov
sbb
adc
pcmpeqd
test
ds
andb
or
js
jecxz
mov
jl
or
pop
outsl
iret
leave
jns
mov
rol
xchg
movsb
je
pop
or
iret
test
iret
mov
pop
sub
mov
sbb
push
stos
fwait
mov
les
or
mov
je
cld
cmc
jb
mov
dec
lea
repnz
ja
adc
sub
inc
dec
push
mov
sub
fdivl
mov
fucomp
push
push
sbb
fs
xchg
orb
add
loopne
call
mov
mov
rorl
xor
mov
cmp
and
dec
scas
mov
adc
cld
add
and
sbb
outsb
push
fstps
mov
push
adc
jle
push
lret
pusha
add
enter
aad
lock
out
jnp
leave
outsl
sub
test
or
pop
jmp
adc
in
push
jecxz
add
jge
add
xor
insb
shll
lods
arpl
es
fs
xchg
jae
ret
mov
dec
xor
shl
negb
push
test
outsb
lock
push
mov
xor
cli
push
pop
xor
out
cmp
aam
or
mov
adc
xchg
aam
push
test
test
inc
scas
mov
adc
sbb
cmp
mov
lods
xlat
je
in
push
cld
and
cmpsb
sbb
stos
mov
adc
mov
sti
jl
mov
mov
inc
leave
jl
mov
jns
shll
fs
xor
xor
pop
dec
ss
enter
cmp
hlt
stc
shll
jo
xor
loopne
mov
icebp
xor
push
outsb
jns
lea
fwait
pusha
inc
in
mov
mov
xor
jle
into
bound
jmp
pop
pusha
les
enter
movsb
inc
dec
mov
mov
push
pop
xor
pop
out
xchg
pop
enter
push
adcl
add
mov
add
scas
out
mov
sub
jae
gs
mov
ret
mov
ficoml
mov
icebp
and
sub
jnp
lret
jge
mov
adc
mov
pushf
mov
pop
add
sbb
xor
jmp
jge
std
jbe
add
xchg
cmp
add
nop
loop
and
cmp
sub
sub
pop
or
lds
cmp
sbb
fisubs
xor
add
int3
push
xor
adc
dec
mov
push
fucomip
add
jg
loop
lock
xorb
gs
fcmovnbe
vpavgw
mov
lock
movsb
and
hlt
or
xor
adc
sub
jo
pop
gs
cwtl
sbb
inc
ss
shlb
repnz
dec
sub
dec
cmp
jb
fucomip
sub
sub
pop
mov
mov
scas
mov
cld
in
xchg
test
dec
ret
cs
xchg
add
jecxz
xor
inc
mov
iret
mov
insb
xor
cmc
idiv
jo
insl
or
inc
mov
js
inc
lea
mov
add
flds
lret
sub
push
int
xchg
fwait
ljmp
sbb
in
cmpsl
hlt
push
enter
pop
fidivl
lcall
jl
ss
mov
stc
or
inc
inc
stos
sbb
dec
daa
push
es
or
cmp
ja
lcall
adc
push
or
test
lahf
test
stos
cmp
addb
or
cmpsl
push
add
arpl
out
push
test
and
sub
cmc
sub
pushf
mov
fimull
hlt
std
fdivrs
daa
loope
and
ljmp
fstpl
mov
shlb
mov
jb
cmp
and
cmp
inc
cltd
addb
out
xor
popf
push
enter
rcrb
dec
or
in
dec
cmp
lea
xchg
test
sbb
push
and
stc
xchg
or
insl
push
repnz
stos
ret
mov
fbld
mov
test
shr
push
sub
fiadds
xchg
and
loopne
lret
push
sub
push
ror
fcomps
and
sbb
jno
mov
sahf
in
fmull
fwait
push
out
insb
ljmp
inc
sbb
sahf
sub
mov
ljmp
popa
xchg
shll
bound
sti
out
pop
cmp
outsb
call
in
lcall
pop
cmp
test
pop
xchg
xlat
stos
movsl
jbe
stos
test
fildll
aad
movl
shrb
pop
negl
sub
scas
es
call
out
fldenv
sarl
jg
sub
mov
fs
test
dec
ficoms
pop
clc
scas
mov
xchg
push
sbbb
pushf
iret
gs
xor
pop
out
aaa
pop
lea
xchg
cld
jns
pop
js
push
test
roll
out
dec
push
push
inc
insb
mov
xorb
dec
mov
mov
jp
mov
pop
hlt
insl
xchg
stc
adc
inc
nop
call
mov
push
lods
add
shrl
lcall
jne
outsl
pop
cmp
bnd
sub
daa
lahf
pop
lock
sti
leave
clc
pop
js
xor
add
mov
cwtl
dec
cld
lock
mov
lds
js
cltd
insb
popa
imul
inc
aas
fwait
jmp
jecxz
stc
mov
xor
adc
inc
cmp
cmp
out
out
in
push
in
sti
pop
je
inc
jne
xor
adc
xchg
mov
loopne
les
jecxz
adcb
mov
and
fistpll
ljmp
arpl
lret
add
shll
cwtl
adc
add
add
xchg
inc
movsb
add
mov
mov
adc
pop
jle
hlt
inc
loop
or
add
or
pop
push
xor
sbb
jo
pop
arpl
push
jo
repz
add
adc
lds
xchg
cmc
clc
shrl
aaa
cld
pop
fwait
pop
mov
out
adc
jmp
pushf
cmpsl
add
or
out
insl
push
js
mov
xchg
cmp
cmp
sub
cs
lahf
hlt
xchg
dec
inc
add
fs
pop
sti
ret
push
mov
sbb
mov
push
arpl
xchg
dec
jno
jle
in
inc
sarl
addr16
arpl
push
mov
sub
or
jmp
test
add
mov
cmpl
dec
mov
and
mov
das
rorl
add
imul
mov
xchg
xchg
fwait
clc
into
pop
inc
out
pusha
dec
out
nop
enter
imul
imulb
jmp
cmp
js
sbb
mov
mov
das
sti
fists
xchg
fisubrl
fbstp
cmp
cmp
lcall
xor
imul
dec
fdivrs
adc
stos
int3
aam
inc
add
jmp
jmp
pop
or
inc
rcr
mov
adc
pop
cmc
rolb
jae
add
in
pop
adc
or
jge
xchg
or
and
ds
push
inc
enter
scas
icebp
mov
jne
stos
rol
scas
in
orl
sbb
jno
negl
cmc
in
fsubrs
add
mov
mov
push
dec
rclb
add
arpl
pop
or
decl
test
ljmp
pop
push
pop
mov
xlat
inc
scas
sahf
xor
cmp
rcr
xor
mov
mov
mov
mov
mov
fnsave
xlat
ljmp
pushf
dec
test
ljmp
pop
test
clc
jg
lret
addr16
loopne
in
lods
cmp
and
shr
out
inc
ja
cmp
sti
adc
test
stos
movsb
test
xchg
fs
jnp
repz
fistl
jne
xor
fcmovb
fs
mov
or
jo
mov
pop
dec
test
jb
cltd
mov
movsb
mov
sbbb
out
or
decb
jp
inc
xchg
inc
pusha
cmpb
add
dec
adc
bound
xchg
cmp
push
gs
fwait
dec
xchg
and
push
mov
inc
dec
shrl
push
sbbb
inc
dec
bound
inc
adc
insl
mov
aam
in
jl
lods
andb
int3
xchg
and
dec
pop
sbb
xor
int3
call
pop
ficompl
dec
cmp
cmpsb
xchg
and
xlat
loope
xchg
sub
push
inc
push
daa
clc
clc
into
sbb
adc
in
js
pushf
lods
push
adc
mov
jb
int
shlb
aaa
cwtl
mov
pop
and
fstpl
stos
push
imul
rclb
add
dec
mov
mov
or
jl
lahf
rcrl
jp
in
das
or
push
mov
in
mov
inc
push
mov
jle
cmpsl
pop
sbb
sbb
mov
std
sbb
or
sbb
add
add
add
add
addb
add
js
add
js
add
sbb
add
pop
add
addb
add
xor
add
push
add
addb
add
add
add
push
je
add
add
add
add
add
add
add
sldt
fadds
add
add
add
sub
add
push
add
addb
add
add
add
add
add
add
add
add
add
enter
jl
add
lock
add
add
add
add
add
add
add
add
lock
add
add
add
add
add
add
add
add
add
add
add
sbb
add
inc
inc
add
pusha
add
add
add
add
add
add
add
add
add
inc
add
add
add
in
add
add
add
add
add
add
add
push
dec
add
mov
add
add
add
add
add
cwtl
add
andb
add
lods
add
xor
add
add
add
add
add
add
add
add
add
mov
dec
add
dec
add
add
add
add
add
add
add
add
add
loopne
add
adc
add
add
add
add
add
add
add
add
add
add
or
add
and
add
add
add
add
add
add
add
xorb
add
add
add
add
add
dec
add
add
jb
add
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
add
add
mov
add
in
jb
add
add
in
add
add
add
add
inc
add
add
add
dec
add
dec
add
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
or
dec
add
dec
add
dec
add
dec
add
add
add
add
add
and
and
add
add
test
add
xor
cmp
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
and
jae
insl
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
and
or
jne
je
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
and
and
arpl
imul
and
and
and
gs
gs
gs
jb
jbe
insb
gs
and
and
and
and
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
jne
jb
inc
fs
imul
je
jb
das
and
and
and
jb
jno
gs
gs
jb
jbe
insb
gs
and
and
jae
arpl
imul
das
je
jne
je
outsb
outsw
and
jae
gs
bound
and
sub
add
and
add
inc
add
add
add
add
add
add
adc
add
movb
mov
mov
add
mov
mov
add
add
test
add
mov
mov
add
incl
mov
add
test
test
add
incl
incl
incl
incl
test
add
movb
mov
mov
add
test
mov
add
mov
test
add
incl
incl
incl
incl
incl
test
add
add
test
add
incl
incl
add
incl
incl
add
incl
incl
add
incl
test
add
incl
incl
incl
incl
test
add
mov
test
add
test
test
add
test
test
add
add
test
add
incl
incl
incl
incl
test
add
mov
mov
add
add
test
add
incl
incl
incl
incl
test
add
mov
mov
add
add
test
add
incl
incl
incl
incl
test
add
mov
mov
add
add
test
add
incl
add
incl
add
incl
add
incl
add
incl
add
test
add
mov
add
mov
mov
add
add
test
add
incl
incl
add
incl
incl
add
incl
incl
add
incl
test
add
test
test
add
add
incl
add
incl
add
incl
add
incl
add
test
add
test
add
mov
add
mov
test
add
test
add
add
test
add
test
test
add
add
add
test
test
add
add
test
add
incl
add
incl
add
incl
add
incl
add
incl
add
test
add
test
add
test
add
mov
add
add
test
add
mov
add
add
test
add
incl
mov
add
test
add
add
test
add
test
test
add
add
incl
add
incl
add
incl
add
incl
add
test
add
test
add
test
add
test
add
test
add
test
mov
add
test
test
add
add
incl
add
incl
add
incl
add
incl
add
add
add
test
add
test
add
test
add
test
add
add
add
test
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
test
add
test
test
add
incl
incl
incl
incl
test
add
test
add
test
add
add
add
mov
add
mov
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
test
add
test
test
add
incl
incl
incl
incl
incl
add
add
mov
add
add
add
add
add
add
test
add
test
test
add
test
test
add
test
test
add
test
test
add
test
mov
add
test
test
add
movb
mov
incl
add
add
test
add
test
add
mov
test
add
add
add
movb
test
mov
add
mov
test
add
mov
incl
incl
incl
test
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
test
add
test
mov
add
add
test
add
mov
test
add
mov
mov
add
add
add
test
test
add
add
mov
add
mov
incl
incl
incl
incl
incl
incl
incl
incl
mov
add
test
add
add
test
add
add
add
add
test
add
mov
test
add
add
add
incl
incl
incl
incl
mov
add
test
test
add
test
test
add
incl
mov
add
test
test
add
mov
test
add
incl
incl
incl
mov
add
add
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
test
add
mov
test
add
incl
test
add
test
test
add
add
add
add
add
incl
incl
incl
incl
incl
test
add
mov
test
add
add
test
add
add
incl
add
test
add
incl
incl
incl
incl
test
add
mov
test
add
incl
test
add
add
add
incl
incl
test
add
incl
incl
incl
incl
test
add
mov
test
add
incl
test
add
add
add
incl
incl
test
add
test
add
test
add
test
add
test
add
test
add
test
add
mov
test
add
incl
test
add
add
add
incl
incl
incl
incl
incl
add
add
incl
add
incl
add
test
add
mov
test
add
incl
test
add
add
add
add
add
add
add
incl
mov
add
test
test
add
add
test
add
mov
test
add
incl
test
add
test
test
add
test
test
add
test
test
add
mov
test
add
incl
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
test
test
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
test
add
movb
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
incl
test
add
test
test
add
test
test
add
test
test
add
test
test
add
jg
aas
sarb
pop
rcrb
xadd
loopne
rolb
add
add
inc
add
inc
add
xadd
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
pavgw
add
repz
ud0
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jmp
add
