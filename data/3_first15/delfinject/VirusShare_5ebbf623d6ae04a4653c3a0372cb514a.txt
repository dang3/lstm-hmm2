loope
xchg
imul
xchg
add
jne
xchg
fwait
loopne
enter
or
jae
dec
add
shll
inc
sub
ja
xor
cmc
lahf
lods
pop
fldcw
inc
inc
imul
out
jp
and
outsl
and
jmp
les
in
adc
dec
out
nop
movsl
sub
ss
or
frstor
fisttpll
jecxz
pop
mov
sub
mov
popf
mov
out
daa
jecxz
jno
add
and
mov
sub
lods
or
in
mov
add
and
inc
loop
pop
rcll
dec
test
sbb
dec
jl
cmp
xor
lock
mov
stc
in
and
mov
pop
subl
xchg
in
and
pop
outsl
lahf
lods
gs
sbb
in
lret
stc
ja
rcrb
cmpsl
xchg
scas
inc
pop
loope
fistl
adc
loop
jecxz
mov
sahf
push
insb
add
mov
or
jmp
push
xchg
xor
lret
lahf
out
push
sbb
xchg
mov
jge
jg
or
sub
in
loopne
mov
cmpsb
cmpsb
outsb
clc
jne
or
pop
andb
jnp
inc
pop
or
cli
jb
data16
inc
out
and
mov
lret
imul
das
imul
or
sub
sti
imul
movb
xorl
jbe
test
sbb
jge
sub
sub
pop
les
xchg
cltd
aam
and
in
mov
mov
movsl
mov
or
jmp
jmp
mov
and
mov
rorl
cmp
jle
inc
in
popf
xchg
and
insb
test
xor
pushf
cmc
inc
iret
push
dec
or
test
jb
mov
inc
popf
out
sub
lods
and
sbbb
sbb
outsl
bound
ss
cmp
jbe
out
popa
jmp
scas
fstpt
jl
xor
mov
pop
xor
push
in
movsb
xchg
and
mov
loope
cltd
sub
mov
pop
xchg
cmp
push
int3
pop
add
lds
xchg
rolb
or
test
repnz
enter
or
cmp
aam
loopne
test
lds
xor
mov
mov
and
fsubs
push
add
outsb
sub
jb
inc
outsl
mov
push
addr16
int3
mov
dec
movl
cltd
cmp
cltd
mov
shll
sbb
mov
jle
cmp
loop
fcmovnb
push
shrl
xchg
scas
add
push
dec
mov
inc
stc
pusha
shrb
fwait
aas
lea
and
imul
mov
loope
cmp
data16
sbb
sub
ret
sbb
xor
fists
loope
xchg
mov
popa
insb
jg
jle
clc
negl
mov
scas
inc
dec
push
aas
cltd
and
mov
add
dec
movsl
lret
imul
or
pop
test
mov
cmp
pop
mov
lods
jno
leave
pop
in
das
aas
jo
adc
add
xor
inc
sub
fcomps
add
es
inc
pushf
loope
cmp
inc
xlat
pop
jno
add
shrl
imul
xlat
mov
dec
add
sahf
sub
incb
jmp
in
sbb
movsl
out
jmp
dec
dec
hlt
sub
mov
cmp
cmp
pop
in
xor
dec
cmp
inc
jo
push
fsts
lea
fsubl
sub
mov
gs
shll
mov
pop
rcrb
adc
fwait
mov
mov
stc
out
jae
cmpsb
fwait
hlt
lret
cmpsb
test
jae
mov
adcl
cltd
add
xor
add
leave
xchg
xchg
cmpsb
jno
xchg
push
jmp
jle
into
sbb
fiadds
inc
xchg
repnz
fsubs
xchg
mov
adc
push
jle
mov
add
std
insb
mov
pop
push
jle
adc
lock
mov
xchg
push
xor
out
out
xchg
sub
mov
out
fisubrl
or
in
jns
add
ror
sti
mov
push
and
push
jne
inc
addr16
push
movsl
xchg
or
leave
and
xor
repz
inc
test
aaa
fdivs
popf
pop
jnp
lds
jge
mov
ljmp
daa
popf
xor
add
out
test
jmp
add
lds
das
sarb
xchg
add
outsl
jmp
aaa
sub
xchg
sbb
cmp
adc
adcl
push
jmp
aam
ds
imul
js
sub
push
out
sub
std
repz
push
mov
or
inc
push
in
stc
inc
sahf
ret
add
andl
pusha
jo
rcll
mov
lea
movsl
sub
lahf
cmp
xchg
mov
cmpsl
std
and
sahf
xchg
mov
mov
sbb
in
test
daa
cmpl
je
mov
push
mov
daa
sbb
les
cmp
cli
jecxz
sub
sbb
add
aam
ds
mov
ficoms
mov
rol
ja
mov
xor
repnz
push
xchg
ds
fidivrl
pop
dec
js
or
add
xchg
pop
mov
pop
in
jbe
in
insb
and
or
mov
mov
ljmp
mov
xchg
xor
add
shrl
jecxz
mov
xchg
insl
dec
and
les
xor
mov
es
xchg
jmp
in
insb
lds
fistpll
movsb
loope
sbb
inc
repz
mov
fldl
add
loop
pop
ret
cld
mov
aaa
push
shll
jae
pop
sti
loopne
fcoml
mov
aaa
lret
mov
xchg
push
insb
sub
add
push
inc
rcrb
xor
mov
mov
mov
push
rcll
shl
mov
push
adc
or
dec
andl
aam
daa
pop
cmpsl
cmpsl
dec
outsb
pop
push
dec
call
add
scas
xchg
pop
lods
fwait
and
std
pop
ds
lock
je
bound
pop
mov
mov
push
jno
lea
push
dec
and
pop
adc
les
imul
js
fst
les
push
push
mov
fbld
mov
iret
imul
test
mov
dec
pop
movsl
xor
es
pop
loop
cmp
xchg
lret
fisttpl
xor
and
lahf
orl
inc
fwait
jae
in
or
test
pop
cmpb
addr16
mov
data16
xchg
dec
inc
idivb
fldcw
bound
test
jo
and
lea
jno
sub
jp
and
fwait
and
add
pusha
sbb
and
jns
pop
pop
and
pop
jne
sub
mov
das
movsb
out
outsb
loopne
jo
add
push
and
stc
pusha
or
repnz
pusha
push
iret
adc
adc
rep
fs
out
int3
or
mov
fwait
jecxz
ss
lea
lock
lock
out
stos
out
ljmp
enter
sub
mov
add
mov
pop
lods
scas
fisubs
push
jle
jno
push
mov
push
fidivrl
lea
sbb
dec
adc
rcll
mov
repz
or
lds
js
jno
jo
inc
aad
xlat
sub
dec
xchg
outsb
aam
adc
push
aad
lock
jecxz
sbb
divl
loope
inc
stc
dec
out
addr16
push
cwtl
loopne
jo
pop
mov
sub
addr16
lret
std
pop
in
loop
or
popa
pushf
insl
arpl
insb
mov
xchg
sub
push
mov
inc
push
imul
or
xor
gs
adc
and
outsb
xchg
dec
loop
test
icebp
adcl
sub
in
jle
popf
jns
das
push
rorb
xchg
push
xor
push
jle
std
push
xor
mov
jp
in
std
xchg
ljmp
jo
pop
mov
movsb
lds
cmp
lods
mov
jbe
sbb
scas
adc
cmp
inc
mov
loope
mov
xchg
mov
movsb
lcall
jge
outsb
mov
testb
sbb
mov
sub
popf
xchg
ljmp
sbb
outsb
dec
adc
in
std
lods
scas
push
mov
shll
dec
ja
enter
packsswb
lea
push
and
mov
xor
xchg
ret
pop
insl
lock
sahf
and
rclb
pop
loope
int3
mov
and
pushf
and
shr
cmc
xchg
add
xor
sbb
push
test
xor
insl
push
repz
mov
sub
or
fcmovne
bound
stos
mov
ret
fbld
aaa
fcoms
aad
xchg
cmp
and
jp
scas
fcmovbe
mov
adc
sbb
pop
adc
jmp
push
sub
shll
xchg
ret
hlt
jmp
insb
and
inc
movsb
aad
dec
jmp
or
arpl
dec
mov
jle
mov
adc
ja
pop
in
nop
jmp
pop
xchg
jno
popf
inc
test
push
add
out
clc
rolb
pop
cmp
sahf
arpl
aad
fldcw
pushf
movsb
cmp
sbb
and
das
or
dec
clc
repnz
lods
or
fdivs
xchg
mov
cmpsl
xchg
aam
jmp
pusha
jo
mov
adc
jecxz
xorb
mov
pop
aad
ffree
sub
jb
xchg
xchg
out
jbe
popa
pop
loop
mov
or
inc
add
push
gs
push
mov
jbe
outsb
push
and
mov
fsubs
mov
cltd
mov
sbb
jl
aaa
rolb
sub
inc
adc
outsl
sbb
rcl
push
mov
fildl
pushf
fcmovb
add
notl
in
popa
lods
xor
sub
leave
and
cmp
or
and
adc
lods
lahf
jg
fbstp
lock
pushf
in
stos
fistpl
cmp
je
pop
fmull
inc
mov
lahf
add
lea
and
push
loop
push
dec
orl
cmp
inc
mov
sub
enter
test
out
cmc
repnz
outsb
mov
insb
adc
sbb
jae
scas
cmpsl
mov
push
jge
scas
jmp
ja
cmp
pop
sub
rcrl
jge
mov
test
leave
and
jbe
pop
aas
add
pop
jns
adc
negl
mov
add
push
js
push
test
rorb
pop
dec
xchg
cmc
mov
jo
xor
sub
add
mov
das
rcrl
jo
cmp
inc
sub
in
addl
inc
incb
dec
mov
push
sbb
insb
jg
jo
test
cmpsl
mov
fstpt
sub
ss
out
int
inc
xlat
xor
inc
fidivs
cmpsb
ljmp
lods
pop
cld
mov
sti
push
adc
outsl
jg
and
push
pop
scas
loope
or
push
adc
mov
fdivrs
sbb
xor
imul
mov
jns
daa
xor
jno
loope
jmp
xor
adc
add
xor
fistl
imul
sbb
dec
scas
stos
mov
stc
xchg
movsb
and
es
inc
and
sub
mov
mov
add
out
movsl
pop
out
cli
push
test
js
int
insb
pusha
movsl
jmp
mov
lods
loop
ljmp
mov
jbe
jmp
das
test
pop
jg
mov
cltd
dec
dec
push
xchg
pusha
mov
in
mov
inc
stos
jmp
icebp
test
iret
add
and
cli
call
adc
jecxz
movsb
jecxz
icebp
sbb
cltd
leave
gs
outsl
aad
pop
or
pop
mov
and
jge
insl
out
insl
jl
mov
out
sub
mov
xchg
cld
out
push
int
data16
ds
pop
push
sahf
mov
cmpsl
jnp
in
push
lret
pop
js
jb
push
sub
shl
movl
outsb
rorl
imul
add
adc
push
and
and
inc
fbstp
push
pop
mov
call
and
push
les
push
jle
xchg
pusha
scas
stos
sbb
mov
push
fs
int3
scas
dec
or
scas
jne
inc
andl
fsubrl
cmp
xchg
rol
sub
jl
cmpsb
mov
mov
scas
mov
mov
loope
insb
xchg
mov
insb
mov
mov
lds
inc
arpl
jne
mov
mov
cld
sub
imul
sub
int
enter
pop
xchg
arpl
cmp
mov
mov
daa
shrl
jmp
or
push
xor
imul
jno
addps
js
dec
push
sub
repnz
lea
outsb
loopne
mov
int
push
add
subl
cmc
push
mov
ds
and
lods
adc
dec
push
sar
xor
dec
sub
lret
and
orb
sarb
or
sbb
cmp
test
push
sbb
and
shrb
xchg
scas
shll
push
loop
andb
dec
insb
movsl
js
scas
mov
add
lahf
flds
dec
sbb
shlb
mov
gs
mov
mov
test
out
scas
sub
loopne
xchg
cmpsl
cli
pop
arpl
cmp
aam
rcrb
addl
mov
lea
pushf
pop
nop
gs
fistpl
jge
out
sbb
push
std
sub
pusha
lods
mov
or
cmp
and
or
sbb
push
pop
dec
sbb
inc
and
adc
jg
lahf
cmp
adc
xor
cmp
mov
xchg
push
inc
xor
ret
cmp
mov
outsb
repnz
or
inc
aaa
jns
adc
frstor
sub
or
dec
cltd
add
cmp
add
mov
movsb
pop
lds
mov
jge
jnp
add
inc
lret
jmp
lcall
jb
je
pop
push
fs
sbb
sbb
jmp
dec
dec
or
dec
aaa
inc
dec
fwait
aaa
xor
call
dec
cmp
or
inc
aas
and
fcomps
dec
insb
ss
pop
jb
jg
adc
and
cli
or
cmp
or
mov
stos
orb
pop
js
pop
or
in
sub
mov
push
cmp
sub
pop
mov
and
xchg
pop
movsb
cmpsl
loope
stos
mov
std
push
out
pop
ret
icebp
movsb
xor
lock
pop
out
lds
adc
adc
pop
mov
xchg
add
bound
mov
push
mov
xchg
mov
sub
adc
sbb
movsb
loope
loopne
jge
rcrb
lahf
mov
out
lea
jg
fst
sub
in
ror
insl
dec
shr
jae
inc
loopne
jle
andl
xor
ret
sub
add
pusha
fs
push
push
cld
dec
push
in
xor
inc
push
xchg
loop
lcall
pusha
or
shll
mov
cmpsl
lock
jp
bound
sub
push
loope
rclb
dec
lods
lods
loop
loopne
and
and
lock
cmpsl
add
out
es
in
inc
mov
negb
mov
fwait
xchg
bound
mov
jae
loopne
rolb
jp
mov
lret
call
gs
sub
nop
jg
mov
pop
loop
insb
rcll
popa
in
push
adc
ja
call
pop
and
lcall
jbe
mov
das
push
or
scas
push
mov
movsl
lret
insb
sub
and
push
call
inc
sbb
jns
or
pushf
insl
pop
call
jecxz
mov
pop
imul
mov
call
arpl
sbb
daa
out
and
mov
mov
imul
mov
jo
aad
fcomps
loop
in
sbb
aaa
clc
rorb
lods
pop
mov
sbb
pop
stos
faddl
push
mov
popa
push
and
mov
out
stc
lcall
shrb
mov
jno
stc
scas
mov
xchg
hlt
jbe
sbb
rorb
jl
ljmp
jnp
cmp
int
jns
xor
lahf
stc
pop
xchg
jne
shll
lret
jecxz
sub
pop
loope
out
mov
test
in
xlat
in
daa
stc
int3
aam
inc
push
call
cmp
jne
aad
jle
imul
movsl
loop
lea
dec
jp
and
xlat
xor
dec
mov
call
mov
jge
daa
fwait
loopne
pop
dec
jo
cmc
xor
mov
xor
inc
jns
movsl
jns
andl
jnp
mov
or
jns
jbe
js
in
insl
test
aas
mov
imul
lea
out
sbb
mov
dec
mov
adc
aaa
lods
mov
xchg
testb
mov
data16
test
inc
int3
and
out
sub
add
sbb
rorb
add
arpl
sbbl
cmp
sub
push
arpl
and
push
push
sbb
pusha
or
jl
popa
ss
cmpsb
push
inc
jno
movsl
mov
sbb
mov
lahf
pop
jmp
lock
cwtl
ret
cmpsb
jle
sbb
jle
int3
shr
out
mov
data16
jmp
addr16
outsl
stos
pop
test
cmp
xor
jmp
pop
jmp
xor
jecxz
insl
pop
enter
cmp
xchg
repz
cmp
call
xor
cmp
movsb
leave
and
addb
rclb
jg
loop
jo
notb
in
jmp
mov
mov
xor
push
pop
stos
lcall
sub
sbbb
adc
jno
push
jle
data16
jge
repz
xchg
xlat
adc
hlt
sbb
mov
lds
push
mov
sbb
cltd
xchg
aaa
movsl
sub
inc
scas
loope
cmp
pop
fwait
push
mul
dec
outsb
cwtl
jbe
push
mov
stc
or
stc
sti
xor
jmp
cld
push
loop
fldt
xchg
pusha
shlb
xchg
ljmp
mov
stos
loope
lret
mov
fndisi(8087
xlat
dec
mov
mov
add
sub
jnp
mov
inc
sbb
push
rclb
cmpb
mov
in
out
pop
lcall
inc
mov
popa
pop
sahf
and
ljmp
cmpsl
out
lods
pop
into
fcoml
adc
in
jle
leave
ja
pop
add
or
mov
notl
in
mov
cmc
lock
dec
and
mov
sbb
sub
and
arpl
adc
cltd
sbb
inc
test
inc
jmp
lock
cmp
repnz
jnp
in
out
cli
in
mov
xchg
cmp
jno
xor
mov
das
jbe
jecxz
cli
lret
stos
jb
es
rclb
xor
mov
loope
fistps
xor
loop
inc
adc
std
inc
cltd
sub
ja
test
out
sbb
xorl
jb
xchg
or
pause
sbb
add
insb
jle
ljmp
jno
aad
sbb
test
inc
pop
sub
cmp
pop
outsb
or
and
jg
jae
jle
cmp
sub
sub
scas
sub
imulb
ljmp
xor
mov
pushf
mov
insb
insl
sbb
ss
push
hlt
inc
xor
sbb
cmp
scas
bound
fs
fsts
cmp
test
cmp
jg
das
lods
lahf
shrl
adc
cltd
adc
inc
das
mov
mov
sbb
out
pop
flds
out
cmp
test
adc
xchg
adc
xchg
mov
xor
lahf
jecxz
adc
and
das
jno
js
xchg
lock
cwtl
das
sub
lds
push
jno
arpl
ja
pusha
daa
xor
adc
mov
mov
inc
adcl
daa
jo
push
mov
rolb
or
lds
insb
pushl
xor
xor
sahf
loope
mov
js
das
dec
dec
sbb
sbb
sub
xchg
push
push
xor
xchg
push
icebp
frstor
mov
add
adc
sbb
sub
out
adc
or
adc
sub
psrlq
aas
insb
xchg
daa
inc
adc
clc
in
movl
dec
mov
movsl
cwtl
jmp
and
jbe
shlb
cmp
es
pop
inc
cmp
add
rcrb
pop
clc
adc
xor
std
fwait
or
shll
cmp
add
push
xchg
adc
popf
sti
lds
in
lret
addr16
mov
test
lods
fsubrl
push
jle
fsubs
xchg
das
lret
ficomps
jmp
jno
shrl
sti
push
push
jae
xchg
cmp
lcall
mov
and
loope
pop
repz
sbb
mov
insb
imul
mov
cld
xchg
cmpsl
fistps
and
push
insl
xor
bnd
adc
cs
mov
fildll
int3
sub
shr
jmp
sti
les
cmp
mov
add
test
cwtl
mov
and
lea
adc
loopne
add
in
mov
mov
lcall
sti
and
sbb
xlat
jae
and
mov
or
popl
push
rorl
xor
adc
int
daa
add
loope
pop
sti
and
out
sbb
inc
xor
or
push
setg
lds
lea
jb
rcl
cltd
adc
lcall
test
cli
rol
ret
orl
in
icebp
or
divl
cmp
aam
loopne
add
cmp
jae
mov
sub
add
in
mov
or
pop
jnp
mov
xchg
repnz
pop
in
dec
and
movsl
popa
mov
pop
cmp
add
test
lret
push
popl
xchg
roll
jg
jg
out
loope
mov
jae
pop
push
or
sahf
adc
jge
xchg
xor
out
out
mov
sbb
jp
fwait
sub
ja
jp
ljmp
pop
stc
cmp
jne
dec
loop
mov
filds
fisubrl
aas
faddl
xchg
mov
mov
popf
mov
push
lods
pop
cmp
jmp
xchg
mov
in
xlat
pop
dec
jae
outsb
push
push
and
xchg
xchg
mov
add
imul
mov
mov
aaa
ljmp
int
test
aad
adc
jae
mov
pop
and
xor
ss
mov
pop
mov
mov
repz
and
icebp
rorl
or
popa
pop
stc
push
and
push
scas
loop
test
lcall
sahf
and
jae
sub
sub
in
mov
xor
imul
cmc
stc
test
loop
add
iret
je
scas
fldcw
add
sub
cwtl
push
in
pop
or
cmpsl
out
inc
sub
sbb
hlt
dec
aam
in
fwait
scas
adc
repnz
bound
jae
das
and
dec
xlat
mov
mov
and
lea
std
aam
stos
xchg
xchg
loopne
mov
insb
pop
std
mov
nopl
ds
shlb
and
rolb
mov
jb
jno
xlat
dec
dec
lret
sub
insb
or
insb
inc
push
adc
xchg
sarb
dec
dec
pop
dec
pop
jle
xchg
dec
lea
jecxz
lret
add
and
rcl
mov
dec
std
add
je
and
fldcw
out
push
testl
sub
push
push
arpl
movsl
dec
dec
pop
inc
nop
jne
dec
sub
outsl
push
fs
push
jae
ss
jno
mov
enter
sbb
testb
call
mov
and
into
or
shrl
xor
push
and
add
aad
arpl
stc
inc
out
pop
cmpsl
adc
outsb
addb
insb
cmp
cli
lcall
xlat
mov
xchg
addb
in
add
rorl
mov
js
andb
xchg
sbb
arpl
jp
ss
insb
jg
movsl
cmc
cs
and
ret
dec
call
dec
xchg
jne
pushw
jae
sbbb
cmpl
or
lods
xchg
jo
mov
fwait
mov
cmp
push
push
fidivs
cmp
cmp
jmp
mov
stc
and
movl
call
movsl
xor
out
or
insb
mov
leave
out
push
stc
ljmp
icebp
or
ror
fcoms
and
jbe
cmc
mov
scas
jns
rcrl
mov
lds
pusha
jo
mov
cltd
mov
mov
out
rol
fwait
sbb
push
mov
mov
pop
xchg
jno
adc
xor
pop
les
scas
sbb
inc
das
movsb
push
movsl
aam
mov
call
fs
imul
xrelease
pop
and
insl
or
lock
mov
add
int
stos
outsb
shll
imul
int3
insb
les
out
mov
jmp
add
fisttpll
push
ss
call
mov
rolb
rcrb
int
push
pop
incb
jle
fs
call
xorb
pop
neg
xchg
or
lahf
into
int
lahf
jmp
outsb
pop
fldenv
fnstsw
rcrb
ret
jo
cwtl
int
mov
push
popf
or
mul
xor
daa
cmp
ret
cmp
repnz
out
mov
cmp
mov
addr16
pusha
jmp
loope
ja
lods
mov
in
daa
sbb
jle
roll
sbb
mov
sahf
push
sub
xchg
sub
dec
pop
or
into
movsl
mov
sub
push
inc
push
jecxz
ret
shrb
inc
cmc
or
push
and
mov
sub
fs
aam
subl
rorb
dec
movl
and
mov
add
cmc
sahf
pop
inc
add
ss
or
pop
inc
dec
xor
test
movsb
add
cmp
xchg
xlat
cmp
sub
push
data16
xor
jne
mov
in
jecxz
cltd
cmp
lds
jo
stos
adc
cltd
daa
call
daa
inc
sub
sbb
add
fiadds
push
pop
push
adc
mov
sbb
jbe
xchg
aad
rorl
jge
imul
cltd
add
inc
movsl
fistps
pushf
loope
lahf
loope
and
and
mov
je
daa
push
xor
imul
jp
fisttpl
mov
lahf
xor
lea
loopne
movsl
add
ret
push
movsb
jnp
test
imul
loop
addl
aaa
xor
adc
sbb
loope
push
insb
dec
pop
aam
pop
in
sub
rol
pop
and
pop
jmp
jg
jns
sti
fucomi
xchg
lahf
cmp
push
nop
jns
cmp
out
mov
pusha
dec
dec
pop
aas
and
imul
fwait
int3
ret
dec
test
inc
push
mov
addr16
cmpsb
loop
in
cmp
outsb
and
push
lret
test
call
data16
out
lods
xchg
dec
xor
das
or
dec
cld
ja
les
fnsave
loopne
mov
aad
xor
movsb
xchg
aad
cs
mov
loopne
clc
xchg
and
test
les
adc
xchg
in
shrl
ja
cs
fidivrs
add
cmpsb
push
sub
aam
cmp
dec
cmp
xorl
in
cmc
cmp
int
leave
sahf
inc
enter
push
int3
outsl
mov
popa
fs
int
xchg
popa
cmc
pop
add
test
push
and
jle
call
outsl
ds
or
dec
push
mov
ror
adc
xchg
fnstenv
lds
xor
aas
mov
jo
add
mov
push
addb
jno
lds
in
lea
mov
mov
loop
outsb
and
jge
sahf
cs
jmp
fsubr
roll
cmp
mov
push
jne
pop
popa
aam
insb
mov
mov
mov
jno
stc
push
rcrl
and
imul
sahf
xchg
roll
out
or
in
sbb
push
jecxz
jge
mov
mulb
push
add
std
scas
bound
sub
scas
add
lret
or
mov
stos
mov
jecxz
add
cltd
and
sub
mov
mov
pop
mov
mov
jmp
mov
imul
ja
or
iret
stos
jle
mov
xor
insl
fwait
stos
xor
arpl
pop
jnp
mov
sub
or
mov
jns
cmp
in
inc
outsb
dec
add
ret
jnp
add
test
cmpsb
pusha
mov
fs
insb
in
push
inc
and
xor
loope
lods
insl
pop
outsl
mov
jg
js
mov
roll
dec
xorl
or
test
jnp
mov
popa
stc
add
add
push
roll
in
inc
cmp
fsubrl
pop
dec
push
jno
dec
push
mov
sub
mov
out
fst
mov
mov
mov
outsl
out
out
push
xor
scas
add
orb
xchg
pushf
cli
mov
mov
jo
mov
adc
add
inc
mov
sub
shl
xor
shll
in
cwtl
out
lea
jae
out
mov
jecxz
shll
out
andb
mov
cltd
mov
add
cs
js
sahf
nop
fists
jns
sub
jbe
mov
lea
add
sbb
cli
xor
sbb
mov
popf
xchg
ljmp
fxch
out
ror
sub
mov
xlat
int
mov
test
cmp
cmpsb
xor
lds
cmp
mov
daa
ror
and
hlt
sub
pop
aas
mov
sub
ret
pop
test
mov
jmp
lods
ret
sbb
jno
add
add
sub
fwait
or
cmp
imul
jno
and
and
insb
lock
bound
test
adc
in
fwait
in
shrd
xchg
pushf
xchg
sub
shll
jo
xor
addb
stc
ljmp
inc
lret
pop
add
mov
imul
lahf
and
cltd
fs
mov
push
in
sbb
adc
sub
push
or
add
arpl
fadd
cmp
shrl
loope
ljmp
stos
rolb
or
sub
sub
mov
stos
mov
xchg
push
jbe
test
shlb
xor
jg
xor
sarl
push
mov
xor
push
cli
stos
rcr
cmp
aas
inc
sbb
push
inc
daa
and
lods
ss
mov
jg
call
xor
adc
jns
push
nop
std
movsb
or
sarl
xor
pop
cmpsb
mov
mov
ret
push
mov
jecxz
lea
stc
mov
mov
pop
loopne
scas
loope
in
push
sti
lods
inc
jmp
and
xchg
popa
sbb
mov
push
xlat
fnstenv
loop
xchg
sbb
insb
jb
xlat
inc
hlt
mov
sub
enter
test
xchg
push
loope
mov
in
add
pop
cs
sbb
test
lods
fdivl
lea
jle
mov
dec
xchg
cltd
jbe
cli
das
cltd
mov
ja
adc
pop
out
sub
in
xor
sub
sub
jge
cmp
gs
clc
mov
std
ljmp
mov
in
cltd
pop
call
subb
sub
insb
jbe
fisubl
jne
jo
sub
je
jp
daa
sbb
xchg
dec
pop
push
into
jmp
pop
adc
adc
mov
jg
and
scas
inc
or
bound
aam
or
lds
sbb
les
lcall
ret
push
mov
hlt
xor
xor
andb
cmpsl
push
fsubrs
mov
push
jbe
xchg
sub
adc
jns
mov
lahf
pop
out
lea
push
xchg
test
mov
adc
mov
fisubs
in
notb
roll
loop
test
dec
mov
fnclex
jns
jns
jbe
ja
mov
mov
ja
pop
in
out
aas
lea
xchg
jge
sbb
sub
jmp
je
outsl
rorb
sub
xchg
jl
daa
aam
popa
fadd
aam
cmp
dec
adc
dec
jle
fwait
lock
gs
stos
pop
test
inc
mov
lcall
aad
aas
call
and
imul
jne
outsb
int
mov
push
and
mov
stos
imul
dec
adc
mov
mov
xchg
ljmp
sbb
jl
sahf
cltd
loop
mov
push
aad
and
jo
jmp
push
mov
jo
testl
and
jno
sub
inc
jle
into
addr16
out
or
or
push
or
push
dec
fistps
cmp
insb
fstps
pop
orl
bound
ss
pop
jmp
jnp
mov
popa
jp
cmp
data16
sub
push
cwtl
mov
fsubl
call
and
movsb
shll
pop
das
int3
jno
jle
xchg
push
fiadds
xchg
inc
in
push
inc
and
and
pop
cmp
idivl
int
jg
push
lods
jg
push
in
or
xor
loop
and
sub
pop
mov
test
push
mov
aad
mov
mov
ss
out
aaa
push
faddp
daa
xchg
js
pop
mov
lds
aaa
jnp
lock
test
int3
outsl
mov
mov
negb
sar
pop
sbb
mov
dec
rcll
jecxz
ficompl
mov
movsb
xchg
dec
xchg
mov
lea
adc
or
push
jmp
rcl
xchg
gs
cmp
das
icebp
sub
out
outsb
jne
frstor
aam
pop
jle
test
mov
push
sub
sbbl
mov
xor
jecxz
out
mov
adc
add
outsl
sbb
add
mov
dec
aaa
cld
lcall
xor
inc
fdivrl
pusha
loopne
mov
je
mov
cmpsb
pop
xchg
inc
ds
mov
das
insl
lahf
movsl
mov
mov
sub
clc
mov
inc
into
pop
jno
popa
adc
popa
dec
mov
mov
pop
ret
outsb
xlat
scas
mov
mov
sub
mov
int
sahf
iret
push
jle
out
mov
mov
jmp
call
les
pop
push
dec
das
insl
adc
in
stc
enter
test
out
lret
mov
push
lds
and
je
lea
lods
icebp
outsb
inc
stos
rcr
ret
or
dec
dec
sub
xor
mov
cmpsl
mov
pop
push
aam
subb
cmp
ljmp
xchg
es
adcl
jmp
sbb
enter
sub
daa
inc
ss
jg
push
mov
xor
popf
rorl
pop
cmp
push
leave
sub
cmpsb
sub
mov
in
inc
sahf
filds
loop
add
dec
dec
std
push
in
int3
notb
stos
pop
mov
push
mov
add
out
pop
sarb
pop
jbe
pushf
pop
mov
mov
leave
mov
xor
mov
es
xorl
into
jbe
hlt
data16
int3
fildll
outsb
jae
sub
int3
xchg
ds
add
mov
xchg
sahf
scas
leave
push
out
fcoml
add
inc
aas
push
clc
and
je
cmp
pop
sbb
imul
rcrl
shrl
xor
xchg
inc
adc
cmp
push
fisubrl
cmpsl
mov
and
xchg
pushf
pop
mov
xchg
jns
pop
push
enter
sahf
ficoml
or
mov
insb
cmp
enter
mov
and
rcrb
dec
fisubrl
fisubrs
stos
fidivrl
mov
push
pushf
sbb
sahf
cmp
fldcw
xchg
push
cli
jno
sub
xchg
in
cwtl
pop
jno
pop
lahf
popa
sarl
add
gs
push
add
dec
daa
js
in
jnp
mov
push
repz
sub
push
leave
int
cwtl
mov
jg
pop
cmp
dec
lods
outsb
push
xchg
bound
adc
cld
and
dec
and
dec
jo
iret
adc
cmp
xchg
add
inc
dec
sub
sub
cmp
inc
xchg
pop
pushl
jp
addb
stos
cmpsb
ja
stc
fnstcw
xchg
adc
shll
inc
lock
clc
std
addr16
into
stos
cwtl
mov
js
gs
cmpsb
sub
adc
out
sub
lea
lds
addr16
adc
lahf
andb
lock
push
imul
or
or
popf
push
ss
jg
xchg
xor
es
inc
sbb
sub
sub
ret
sbb
out
mov
xor
xchg
jo
cmp
jg
enter
jo
ljmp
ljmp
loope
lods
in
jne
stos
rcr
std
cwtl
fsubs
jo
out
mov
and
and
dec
repnz
jne
cs
jbe
lret
mov
adc
leave
xchg
push
dec
gs
roll
dec
les
std
out
or
lea
mov
pusha
lods
data16
in
cs
fdiv
jae
or
sbb
mov
outsb
adc
mov
mov
jecxz
int
mov
inc
xchg
push
test
sbb
cwtl
mov
xchg
inc
push
mov
nop
decb
cmp
std
or
mov
loop
inc
pop
dec
je
jb
xchg
jle
jns,pn
insb
xor
shlb
add
push
repz
loope
pop
in
cmpl
das
emms
mov
pop
lahf
int3
js
and
pusha
loopne
xchg
aaa
push
jecxz
cmpsl
lret
das
and
in
inc
xchg
shll
cwtl
cmpl
pushf
fmull
lret
bnd
jnp
mov
lea
fstpl
ja
inc
add
add
test
adc
clc
xor
pushf
and
je
add
jbe
add
jb
hlt
shl
or
int
pop
xor
sahf
ret
mov
scas
xor
out
mov
cli
das
js
adc
popa
cmpsb
inc
push
jns
into
test
imul
jge
jo
and
xchg
and
jne
call
push
sub
lea
stos
push
out
fists
push
cmc
scas
mov
fisubrs
pop
adc
sbbl
jns
clc
adcl
scas
popl
jge
out
mov
xchg
push
push
lea
mov
out
mov
sbb
dec
cmc
sbb
jl
insb
das
test
adc
mov
clc
xchg
jmp
mov
push
int
mov
jmp
mov
into
lret
pop
sbb
and
and
popf
jmp
or
add
out
aaa
ss
sub
daa
jbe
push
bound
mov
test
pop
mov
inc
add
lock
push
inc
cmp
loop
jb
sahf
xchg
out
mov
int3
sti
clc
pop
xchg
scas
cld
mov
leave
insb
inc
stos
fistl
or
push
push
cmpsl
sbb
mov
aaa
xchg
mov
bound
cltd
loope
jp
int
mov
js
out
jne
and
sub
and
xorl
add
nop
pop
daa
cmp
xchg
sbb
push
mov
cmp
push
mov
and
mov
arpl
mov
cmp
mov
and
gs
sbb
dec
cmpsl
add
jnp
popa
sbb
pop
iret
push
jnp
sub
jle
call
out
pop
mov
mov
push
lea
add
sbb
mov
int3
jae
daa
mov
xchg
cltd
icebp
fstpl
mov
mov
icebp
pop
in
rcll
push
call
inc
std
dec
adc
loope
movsb
adc
not
flds
lea
idivl
cmpsl
out
pop
cld
rcr
data16
repnz
jmp
std
inc
add
pushl
es
stc
ja
xchg
mov
outsl
lods
lock
mov
xor
dec
mov
mov
sbb
and
les
and
arpl
aam
or
call
add
pop
lds
push
test
xchg
or
push
xor
xchg
inc
pop
mov
mov
loopne
out
gs
inc
xchg
pop
pusha
mov
inc
mov
lret
push
or
sbb
jmp
roll
xchg
rcrb
in
jg
pop
inc
pop
adc
nop
mov
rolb
fcmovbe
adc
movsl
pop
push
pop
mov
sub
fldcw
roll
ret
push
imul
jb
mov
cli
das
jmp
add
push
sub
mov
lret
sub
loope
xchg
inc
or
sahf
mov
inc
jg
cli
mov
cmc
testl
shl
dec
test
data16
add
pushf
push
out
nop
jae
xor
paddq
sbb
std
sbb
arpl
push
mov
and
xchg
sarb
sbb
insb
push
dec
inc
and
hlt
xchg
add
scas
xor
fstps
or
xor
out
cmc
aad
sub
xor
sub
jmp
rclb
mov
dec
in
jecxz
mov
mov
cmp
pop
lret
adc
or
jnp
push
cmp
xchg
ja
jno
jae
or
popf
push
enter
orb
jae
push
test
xchg
and
xchg
jmp
jmp
sti
mul
into
xchg
fadds
and
sbb
test
push
xor
adc
loope
xorb
in
cmp
ljmp
fs
aam
pop
nop
push
in
loope
xor
inc
sbb
push
divl
pop
shrb
aam
insl
nop
and
sub
andl
jl
test
out
sbb
ljmp
lods
cmp
jne
lret
popa
mov
mov
inc
sub
loopne
dec
inc
lea
cmpsb
pop
insl
push
insb
sub
popa
mov
jg
mov
adc
or
out
jle
dec
push
xchg
bound
inc
cli
cmpl
jle
xor
xchg
pop
loopne
jno
fiadds
adc
mov
popa
std
jno
test
add
aam
out
iret
jmp
enter
hlt
ret
popa
aad
pop
movsl
testl
int
roll
ret
xchg
xchg
aad
jg
rol
push
mov
ror
sbb
adc
sbb
jo
popa
cmp
jno
push
leave
pushf
xor
sbb
outsb
mov
aam
enter
xor
faddl
ret
loop
or
push
shr
out
xor
mov
cmpsl
mov
ja
lea
movsb
xor
sub
pop
inc
dec
inc
cmp
push
xchg
out
push
in
mov
ds
mov
cmpsl
push
or
fmul
stos
insl
and
cwtl
and
sub
pop
vmovupd
adc
mov
repnz
leave
orb
ret
insl
les
xor
iret
dec
sti
insl
movl
add
pop
push
mov
jmp
cmp
and
mov
pusha
ror
and
pop
fsub
mov
ds
jmp
fcoms
mov
out
lods
loope
test
jnp
add
comiss
pop
jns
out
repnz
add
or
cwtl
out
std
dec
and
sub
iret
stos
scas
xor
adc
xchg
std
sarl
mov
push
stos
xor
sub
es
adc
int
and
sub
ror
mov
pushf
andb
sub
cs
insb
out
pop
test
fs
inc
pop
es
in
in
andl
pop
cmc
call
inc
pushf
push
cmp
lret
in
jae
shrb
sbb
adc
test
push
leave
inc
push
sub
mov
shl
mov
es
int
mov
cltd
adc
out
in
cs
mov
fidivrl
leave
fcompl
flds
dec
ja
pop
push
mov
in
xchg
mov
adcl
fists
xchg
push
scas
leave
and
jo
pop
push
scas
test
sub
fcompl
and
js
adc
cmp
xchg
xchg
fistpl
movsl
outsb
gs
pop
push
mov
ret
jbe
out
repnz
jae
jmp
rcrb
pop
insb
call
mov
mov
rorb
imul
popa
aam
cmc
sar
sub
cmp
fnstsw
fnsave
pop
mov
adc
sti
adcl
fldenv
shll
mov
lret
pusha
mov
pop
adc
loop
fwait
arpl
sub
pop
dec
cmp
arpl
inc
outsb
adc
add
sti
mov
pop
xlat
mov
adc
and
cwtl
add
mov
mov
icebp
stos
int3
sub
push
daa
orb
push
in
arpl
or
pop
das
jp
das
lods
fcoms
jne
push
xchg
push
cmpsb
pop
sub
cli
ds
push
repnz
test
mov
shll
fistps
sbb
sbb
lods
sbb
ficompl
sub
inc
adc
inc
cmpsl
inc
dec
push
xchg
andl
ss
loope
ficompl
push
jnp
inc
faddl
mov
mov
aaa
gs
decl
negl
scas
movq
xchg
scas
xor
push
dec
cmp
gs
mov
and
sbb
clc
rcll
or
fstpt
xchg
outsl
rcrb
add
aas
mov
add
lods
or
loopne
mov
pop
stc
es
orl
and
pop
mov
mov
clc
out
pop
dec
push
dec
fnstsw
sub
addr16
xchg
xor
pop
cmp
push
xor
xor
ret
call
xchg
mov
fadds
insl
rclb
das
cs
mov
cmp
into
mov
mov
pop
jp
sub
lea
ljmp
mov
imul
mov
jno
inc
test
jae
insb
lea
push
xorl
js
cltd
mov
jo
testl
mov
cld
jns
les
jg
loop
arpl
jp
xchg
test
cmp
mov
clc
mov
fadds
es
or
mov
mov
scas
and
pop
data16
pusha
mov
pop
add
imul
push
inc
scas
add
rcl
xor
push
loop
insl
jne
and
xor
cltd
push
dec
and
cmp
sub
scas
outsb
xor
inc
mov
out
mov
mov
jo
pop
les
sbb
sub
push
mov
sub
cmp
int
mov
jbe
jp
jmp
pop
sub
lret
inc
sub
jne
adc
insl
sahf
push
aam
sahf
and
add
lret
xchg
cmpsl
call
repnz
enter
bound
gs
fwait
jle
lds
in
pop
inc
inc
insl
mov
inc
mov
xchg
mov
cwtl
subl
and
popf
shl
aas
shrl
repnz
add
imul
fdivrs
cmp
push
sarl
loope
dec
jl
loope
lds
lods
jno
ret
stos
leave
leave
xchg
les
sahf
cmpb
imul
lahf
shl
sbb
cmc
mov
out
popf
and
cmc
xor
cld
movsb
cmp
xorl
daa
cltd
aaa
cmp
cmp
mov
inc
mov
mov
adc
loopne
inc
adc
jns,pn
popa
insl
mov
xchg
sub
ljmp
cmp
jp
mov
arpl
nop
in
xor
inc
sub
jb
in
movsb
mov
insb
add
addr16
xor
je
cltd
test
jl
cwtl
bound
mov
mov
sub
cmp
fs
push
jb
pusha
sub
pop
outsl
fwait
loopne
outsb
pushf
push
loop
addr16
mov
cvtps2pi
jecxz
add
add
mov
and
je
cmovp
xor
aam
int3
push
jnp
cs
cmp
lods
mov
aad
inc
add
jmp
in
call
test
inc
dec
lods
in
xchg
popa
pop
xchg
imul
or
xchg
rcrl
daa
and
outsl
xchg
cmp
mov
xchg
enter
movsl
scas
or
ret
pop
test
pusha
push
xchg
push
andl
btc
dec
lock
cmp
ficoml
push
daa
hlt
push
data16
pop
or
lods
and
in
and
push
inc
lds
pusha
or
and
xchg
mov
nop
mov
sbbl
dec
mov
cs
cmp
and
cs
mov
push
daa
int
and
jecxz
inc
xor
cmpsl
jmp
jae
hlt
sbb
into
ja
or
add
fs
inc
ret
test
fimuls
lcall
push
add
and
xorb
adc
fbld
pop
inc
mov
mov
into
enter
cmc
les
hlt
mulb
cmp
mov
cmpsb
jg
and
out
dec
cmpsb
shlb
int
out
cmp
xchg
sbb
lods
xchg
push
int3
push
orb
add
testl
rcll
outsb
mov
xor
int
push
sbb
xchg
or
pusha
test
sbb
rclb
push
or
pop
jg
cmpl
xchg
push
loop
mov
mov
repz
and
addr16
mov
repnz
movsb
sbb
fdivrl
mov
jb
jge
cld
mov
jle
add
or
and
bound
fbld
pop
test
out
mov
incl
fidivrl
pop
int3
dec
out
outsl
adc
movsb
lret
frstor
mov
lcall
mov
test
in
shl
pop
cmp
lret
movsb
in
mov
pop
loopne
cmp
fwait
mov
adcl
adc
mov
fwait
and
mov
in
ret
cmp
or
loop
sbb
pop
orl
add
sbb
call
negb
sbb
pushf
cld
push
insb
scas
lods
in
stc
mov
sub
insb
outsl
stos
pop
or
stos
add
enter
loop
insb
shlb
xlat
or
mov
imul
mov
xor
insl
test
dec
pop
gs
popf
rcll
int
lret
xchg
movsb
scas
rcl
cmp
cltd
cmp
repnz
jne
adc
adc
divl
mov
inc
mov
pushf
int3
cwtl
nop
das
lret
xchg
xchg
mov
das
movb
add
rcrl
or
xchg
add
push
dec
pop
aad
dec
or
imul
pop
jbe
mov
inc
jno
push
pusha
mov
aas
fs
imul
outsl
mov
adc
insl
and
ja
les
sbbl
pop
into
mov
mov
sub
or
jle
pop
popf
xchg
adc
inc
out
adc
dec
jno
inc
dec
loop
adc
cmpsb
iret
sbb
cld
mov
nop
cmpb
fists
cmp
leave
inc
out
ficoml
cmp
sbb
jnp
add
adc
jae
or
push
lea
mov
ljmp
mov
jne
or
pop
pop
push
sbb
xchg
push
add
subl
xchg
cmpsl
out
mov
and
dec
add
and
push
xor
into
aaa
pusha
sub
out
pushf
ljmp
loop
and
mov
pop
out
fldenv
xchg
andb
sahf
fsub
movsb
fwait
and
repnz
ja
sub
fs
dec
inc
or
fwait
or
dec
cltd
jb
pop
pop
fs
inc
pop
call
mov
pop
inc
jo
fstpl
xorb
cmp
inc
cmpb
testl
pop
pop
push
arpl
xor
push
jmp
stc
rcrl
push
sub
out
dec
out
imul
and
sub
lcall
cmp
loope
sub
or
loopne
cmpsl
adc
lock
std
xor
add
xlat
nop
adc
lods
xchg
shrb
scas
ror
mov
iret
fnstcw
sarb
fmulp
int3
mov
mov
push
sub
or
cwtl
cld
imul
or
loopne
mov
fnstenv
add
lret
mov
call
ja
mov
popa
mov
fisubrs
int3
scas
sub
pop
test
lds
lahf
sub
cwtl
pushf
imul
or
pop
mov
add
jmp
aam
mov
clc
mov
popa
inc
js
mov
dec
sub
pop
dec
jae
mov
rolb
pop
pop
jp
mov
aam
xchg
mov
lahf
out
jb
jno
or
inc
mov
in
imul
imul
jmp
push
aad
pop
push
aas
jne
or
jp
aaa
iret
mov
pusha
push
addr16
jp
inc
movsl
add
stc
fs
and
sub
xchg
das
in
pop
jge
add
movb
data16
jmp
xchg
sub
in
fsubr
mov
insb
and
inc
pop
ja
adc
mov
pop
lahf
fstpl
jmp
lods
popa
jle
cltd
pop
pop
dec
jmp
push
dec
loopne
dec
daa
and
inc
jo
xor
aam
sbb
adc
andb
mov
dec
int
es
cmp
mov
sub
and
and
push
insl
lret
gs
mov
adc
iret
xor
loopne
popa
xchg
cmp
xchg
sbbl
adc
jg
jnp
add
mov
jecxz
add
dec
inc
jmp
mov
lret
mov
inc
or
mov
js
scas
testb
mov
lahf
push
popf
pop
pop
adc
sbb
sbb
aaa
fidivrl
ljmp
pop
leave
jmp
cmp
loope
sbb
aad
fisubrl
orl
mov
mov
xor
movsl
insl
stc
xchg
insb
add
and
dec
sbb
sbb
lds
pop
dec
sarl
addr16
or
xchg
fld1
pop
mov
add
ret
test
enter
dec
lds
rcrl
add
ret
ja
jnp
lcall
mov
movsl
das
push
and
push
add
and
jae
mov
and
dec
inc
mov
lret
adc
push
fistpll
sub
notl
sbb
sub
pop
jbe
orb
or
lods
data16
stos
or
test
aas
jbe
outsl
mov
imul
int
lea
and
jnp
fsubs
addr16
sarb
pop
sbb
gs
xor
popf
hlt
jle
popl
xchg
and
js
cmp
cmp
jmp
lea
ret
dec
jae
inc
cmc
mov
and
and
mov
cwtl
push
cltd
xor
test
add
pusha
popa
shll
fadd
insb
js
pop
mov
mov
jl
sub
scas
adc
sub
jne
ds
ja
xchg
jge
in
inc
mov
inc
add
inc
mov
int3
mov
in
xlat
rol
mov
js
sbb
imul
mov
daa
sbb
jmp
subl
aaa
mov
push
in
gs
imul
sahf
inc
sbb
adc
cmpsb
or
aaa
xchg
add
fwait
adc
lds
sbb
jbe
fcom
jnp
jnp
loop
jae
mov
inc
mov
pop
cmp
mov
mov
push
mov
scas
subl
add
ret
stos
xchg
xchg
stc
inc
dec
jno
mov
ret
and
push
test
js
add
leave
das
mov
dec
lahf
xor
mov
xchg
sub
lahf
cmp
or
dec
rorb
jns
sub
insb
cmp
push
sub
mov
int
add
jb
xlat
leave
dec
mov
push
stos
fxam
push
add
loop
push
mov
ljmp
cs
gs
push
out
sub
les
aad
xchg
sub
aad
mov
fistps
into
mov
xor
es
loope
stos
adc
mov
or
fisttpl
xor
loop
adc
orl
jp
lahf
push
jnp
bound
cmp
pop
sub
sti
out
sbb
fimuls
std
sahf
imul
or
xchg
add
xchg
cmp
dec
add
push
lock
pop
lods
hlt
ss
call
jecxz
jmp
jp
sub
adc
cld
fs
jle
lock
nop
cli
sbb
push
out
in
adc
xor
jbe
dec
cmp
adc
cltd
pop
and
bnd
scas
js
ds
test
rcrl
or
xor
xorb
jno
jmp
je
test
mov
loope
push
dec
pop
push
or
jle
mov
mov
mov
push
jmp
xchg
adc
lahf
mov
add
out
stc
jg
pop
sub
decb
js
out
jle
push
xor
adc
sub
add
loop
dec
loop
or
int
pop
xor
scas
jno
and
mov
ds
inc
push
jmp
in
loope
mov
jno
mov
and
ret
push
sbb
mov
addr16
sub
xchg
adc
sbb
fwait
inc
aas
jnp
mov
inc
mov
adc
dec
repz
mull
xor
insl
mov
call
pop
loope
and
and
shlw
mov
loop
xchg
push
pop
repnz
jg
fisttpll
cmp
iret
insb
test
push
scas
pop
out
dec
stos
pop
cs
xor
enter
xor
fsubs
mov
call
jecxz
add
lods
data16
leave
roll
gs
and
adc
int3
scas
add
notb
fnstsw
xchg
lea
cmp
sub
popf
arpl
lahf
push
cli
dec
cmp
iret
mov
lea
adc
rcll
pshufw
cmp
pop
popf
testb
jo
sbbb
xor
push
mov
scas
xor
je
add
xchg
lods
fildll
clc
cltd
jo
pop
fildll
int3
bnd
pop
fistpl
insb
gs
jg
fldl
push
mov
adc
iret
jae
vrsqrtss
clc
pop
imull
inc
rcll
ljmp
insl
sbb
imul
clc
std
push
and
int3
daa
xchg
mov
dec
mov
lret
or
and
jo
aas
out
fwait
mov
jmp
xlat
sub
or
popa
push
fnstcw
filds
inc
pop
xchg
jmp
jbe
out
jbe
mov
inc
jmp
pop
fcoms
daa
ja
xchg
shlb
pop
call
pop
and
addr16
leave
adc
pop
mov
pop
out
divl
sahf
add
sbb
popl
sahf
push
mov
into
dec
pop
gs
in
popa
jae
sbb
adcl
loop
pop
jbe
cmpsb
test
jae
in
xchg
out
test
loope
sub
mov
sub
lods
es
lret
ficomps
jnp
dec
pop
pop
movsl
out
pop
mov
jg
into
gs
cmpsb
sub
sbb
insb
mov
rcr
jnp
jl
jg
je
or
sub
inc
movsb
mov
lahf
or
and
push
xchg
push
sahf
adc
cwtl
cld
lea
add
push
inc
dec
jae
gs
mov
int
or
and
pop
scas
ficoml
add
ja
sub
cld
repnz
jae
xlat
outsl
jno
sbb
pop
mov
iret
jecxz
pop
mov
mov
leave
sbb
cltd
inc
sub
fcmovnb
out
fxch
call
sbbb
jmp
pop
testb
push
push
mov
fldt
test
pop
and
jmp
push
inc
out
mov
aad
jo
popa
insl
sub
xchg
je
out
xchg
inc
sub
push
xchg
popa
movsl
divl
popa
cs
or
es
jmp
mov
repnz
xlat
mov
inc
adc
xchg
mov
jecxz
insl
xor
stos
inc
repz
pop
mov
mov
fwait
inc
pop
stc
jnp
int
mov
jo
dec
ds
ds
push
pop
adc
mov
jecxz
ss
jmp
mov
jg
mov
mov
xchg
xor
frstor
lea
sub
and
adc
shl
test
bound
mov
push
cmp
loope
mov
iret
scas
inc
inc
jmp
push
daa
icebp
cs
int
fdivrl
mov
inc
sub
icebp
stos
ret
lods
loope
jnp
jl
push
les
popl
imul
push
add
dec
mov
sbb
xorl
inc
jecxz
outsl
enter
jmp
inc
icebp
push
inc
fadds
lock
adcb
lods
adc
inc
addl
addr16
mov
ljmp
aaa
scas
cmp
lret
xlat
jp
sub
lods
lods
pop
fistpll
mov
xorl
ficompl
mov
pop
sub
aaa
or
cmpsl
aad
mov
test
mov
insl
bound
push
jno
shll
and
sub
pop
mov
lret
xchg
mov
das
iret
xchg
xchg
nop
xor
jge
cwtl
inc
xchg
jmp
rcrl
adc
pop
test
cmpl
std
fs
test
imul
push
out
adc
call
pusha
pop
push
js
xchg
adc
fmul
mov
push
iret
ret
dec
das
arpl
testb
aaa
loope
push
mov
add
dec
andb
push
ret
hlt
popa
cmp
lods
xchg
int3
pop
lcall
or
inc
mov
nop
cmpsb
pop
aad
into
lock
pop
js
xchg
fwait
inc
in
and
fs
push
and
adc
mov
or
and
push
sbb
inc
mov
add
add
mov
mov
or
add
jnp
scas
cmp
out
mov
cmpsl
push
xchg
sub
xchg
pop
pushf
push
imul
lea
fdivl
movsl
jb
pop
sub
neg
pop
jge
enter
jmp
pushf
stc
inc
jnp
mov
add
dec
lds
mov
sub
or
rolb
or
xchg
push
xlat
mov
inc
xlat
fimuls
mov
fcoms
xchg
adc
loope
dec
pop
out
pop
pop
popf
mov
daa
mov
mov
cli
jno,pn
sbb
out
xchg
adc
imul
mov
dec
xchg
das
or
out
add
outsb
loope
fidivrs
jno
mov
mov
push
es
dec
adc
lock
outsb
add
mov
movsb
and
push
pop
inc
cmpsl
in
scas
mov
outsb
jmp
mov
push
js
pop
lea
lahf
xlat
xchg
xor
cmc
push
jle
sbb
push
mov
jg
fs
add
faddl
jg
popa
cmpsb
loop
xor
popa
pop
add
mov
popa
rorl
repnz
add
aaa
lock
aas
dec
inc
mov
es
cmpsl
cmp
loopne
mov
dec
rcl
mov
mov
cmpsl
xchg
stos
hlt
cld
jg
outsb
cmp
mov
sbb
gs
mov
repnz
arpl
unpcklps
cmp
jo
fxch
rcrl
xchg
sub
sbb
ljmp
inc
push
dec
cwtl
pop
sbb
mov
insl
into
fadd
flds
fists
sbb
lds
mov
fcomps
xor
add
mov
dec
mov
or
mov
jle
push
sarl
outsb
push
stc
and
inc
jg
outsb
jecxz
jmp
adc
out
rcr
aad
scas
sahf
shrl
mov
dec
pop
hlt
cmp
jecxz
shrb
fldl
pop
mov
sbb
inc
mov
jae
cli
push
push
xor
cld
mov
fidivs
mov
ror
lret
in
mov
ds
jnp
cmp
sbb
sub
imul
and
xchg
or
push
and
fnstcw
fisttpl
push
xor
mov
mov
jle
cmp
jae
mov
jmp
fimull
stc
and
and
mov
cs
jno
cmp
cmc
cmp
xchg
out
mov
adc
arpl
popf
sbb
in
add
adc
push
cmp
add
cmpsl
push
mov
sbb
mov
imul
or
xchg
add
cmpsl
mov
push
cmp
inc
daa
mov
sarl
aam
sti
mov
jnp
adc
cmp
cwtl
fstps
xor
xor
insl
aad
out
mov
push
xlat
into
imull
push
dec
dec
imul
mov
push
cmp
mov
gs
in
dec
subl
mov
mov
dec
mov
popf
push
nop
inc
lods
xchg
push
aaa
mov
push
repnz
inc
dec
xchg
bswap
inc
std
scas
mov
mov
sarl
dec
mov
adc
movsl
and
dec
sbb
inc
fisttps
and
add
pop
fnstsw
pop
pop
shlb
add
jo
push
inc
cltd
jno
insb
fscale
idiv
cmp
push
test
dec
inc
icebp
inc
jecxz
popa
mov
jo
cmpsb
movsl
and
push
icebp
aaa
rolb
inc
push
pop
cmp
lods
cwtl
mov
dec
push
adcb
mov
and
jle
xchg
aad
pop
sbb
insl
fwait
mov
cmp
add
push
dec
xchg
sbb
fs
orl
jle
icebp
adc
inc
insl
push
scas
mov
jae
sti
and
ljmp
repnz
dec
sub
orb
in
nopl
adcb
jg
cwtl
lods
push
or
xlat
inc
sbb
and
je
addr16
push
test
push
out
ret
cmp
in
shll
out
pop
xor
dec
xchg
xchg
dec
mov
xlat
es
sub
int3
js
adc
jmp
mov
shlb
mov
dec
adc
mov
out
inc
sub
out
lahf
loopne
pushf
jp
idiv
clc
psrlq
scas
sub
gs
test
in
daa
pop
jne
test
jno
adc
int
mov
in
shl
dec
add
push
aam
hlt
and
and
cmp
std
ljmp
mov
stos
mov
mov
jae
xchg
jecxz
push
mov
dec
repnz
fistl
leave
repz
adc
ja
push
insb
shrb
out
and
pop
adc
dec
adcb
push
movsb
clc
fidivl
and
mov
cs
jl
movsb
inc
push
jno
ret
pop
pop
fisubrs
popf
stos
sbb
jmp
dec
cmp
sti
in
sub
ficomps
xchg
jecxz
jae
sub
lahf
shlb
add
into
shl
rcrb
jge
jno
and
adc
lret
push
push
cmp
pusha
iret
jb
es
insl
clc
ljmp
orl
ljmp
cmp
xchg
mov
inc
bound
mov
lret
xchg
mov
scas
imul
js
add
shll
jp
loop
or
test
push
test
insb
xor
arpl
ja
test
out
imul
or
add
cmp
and
push
mov
mov
add
xchg
sub
mov
push
popf
pop
out
ret
push
jo
jbe
mov
adc
push
js
push
adc
push
scas
out
xchg
pop
jmp
into
call
xchg
rcrl
jbe
daa
pop
push
adc
lea
mov
xor
mov
sbb
bound
jb
dec
fdivrl
lods
sahf
aaa
fsub
sub
mov
scas
lahf
pop
xchg
lret
aad
mov
test
pop
adc
mov
mov
or
pop
les
in
jmp
lret
adc
add
js
dec
in
mov
insb
push
cmpsb
add
push
jnp
mov
mov
orl
push
mov
push
ret
fldl
xchg
mov
loope
jo
popl
cltd
ret
pop
mov
and
in
and
mov
push
loopne
lea
and
mov
xor
xchg
sbb
sub
add
bound
cld
push
fistps
je
adc
out
sub
sbb
out
push
and
inc
clc
jge
iret
mov
sbb
addb
aad
jnp
scas
out
hlt
stc
loop
sbb
dec
test
popa
int3
jge
cmp
xor
stc
adc
sbb
push
adc
lahf
js
in
push
sub
push
inc
push
int
sbb
inc
add
into
aam
push
xlat
cld
ss
push
aas
lods
inc
or
fsubr
mov
pop
das
mov
les
pop
jno
jp
xchg
insb
cwtl
outsb
cld
cs
repnz
push
scas
outsl
sbb
loope
subps
jl
xchg
enter
cltd
sub
jmp
mov
popa
sub
cmp
dec
push
inc
je
insb
dec
negl
inc
xchg
out
sbb
push
fdivs
loope
xor
loope
sbb
lea
adc
push
jge
roll
subb
xchg
jmp
std
out
in
pop
push
cmc
outsb
mov
bound
xchg
or
sahf
pop
add
and
aaa
jge
test
xor
adc
fmull
jle
adc
movsl
xor
jns
xlat
js
pop
rclb
mov
das
addr16
cmp
jns
push
mov
push
xchg
xor
xchg
out
inc
int3
lcall
mov
mov
push
jno
pop
sti
sti
fildl
adc
lret
std
repnz
aaa
push
out
les
fists
shll
jmp
cmc
movsb
jge
lahf
mov
push
xchg
into
jle
xor
mov
iret
inc
adc
xor
sub
cwtl
xchg
orl
js
push
mov
ds
pop
jnp
mov
icebp
ficoml
xchg
inc
vpsubd
test
xor
push
icebp
pop
lea
jns
and
dec
pop
xchg
sbb
sbb
cld
loop
xor
dec
in
push
std
mov
dec
mov
sub
addl
les
and
mov
mov
adc
js
stc
insb
add
fmuls
jmp
ss
rclb
xchg
fldln2
jae
lods
or
sub
mov
and
out
int
xchg
loop
test
adc
mov
je
sub
insl
mov
in
gs
cs
or
ret
dec
inc
sub
pop
stc
add
outsb
movsl
insl
sbb
mov
inc
fwait
lea
test
and
repz
cwtl
mov
mov
popa
jo
stos
push
movsl
or
adc
inc
das
ja
xlat
push
or
arpl
data16
xchg
das
ja
sbb
xor
scas
adc
dec
cmpsb
mov
loop
mov
jbe
xor
inc
push
jecxz
insb
mov
jmp
out
add
das
pop
icebp
out
cmp
cmp
fwait
jle
test
jb
xchg
adc
das
mov
cltd
mov
sbb
push
lcallw
call
mov
mov
mov
sub
push
push
addr16
pop
or
sub
in
andb
and
or
out
jns
mov
filds
test
push
stos
pop
outsl
pop
pushf
loopne
mov
xor
ror
and
outsb
push
scas
movsb
and
pop
and
es
mov
dec
inc
repz
fucomi
scas
mov
outsl
cmp
popf
jne
pushf
into
jmp
movsl
loop
out
insb
outsl
xor
das
mov
jns
xchg
push
and
xlat
sub
xchg
dec
mov
push
mov
inc
dec
jno
rcrb
sub
mov
cs
xchg
data16
pusha
mov
mov
mov
xor
cmc
subl
adc
stc
jle
test
or
and
push
stos
icebp
or
in
jae
fucomip
fwait
in
scas
pop
sbb
mov
dec
aas
inc
xchg
mov
push
outsb
pop
fildl
inc
rorl
mov
xor
out
subb
mov
es
hlt
cmpsb
xchg
mov
std
fildll
out
ds
mov
jle
sbb
push
decl
mov
mov
int3
jae
sub
popa
clc
or
mov
loopne,pt
dec
cmp
pop
lea
mov
mov
cld
sub
in
cmpsl
and
pop
jecxz
decl
repnz
lock
int3
xorb
xchg
fst
aad
and
int
outsl
insl
jmp
jp
push
les
ss
in
dec
ja
mov
popf
ficoml
jmp
js
push
shll
sbb
out
mov
lcall
sbb
xor
sbb
ret
pop
cmp
adc
fidivrl
and
pop
push
test
adc
jns
shll
popf
inc
sub
bound
sahf
fs
push
cmp
fwait
cmp
sbb
cli
clc
mulb
and
call
and
inc
movsl
mov
iret
mov
pusha
rol
push
es
mov
jo
adc
push
mov
roll
out
scas
dec
in
jno
lahf
out
push
pop
pop
xchg
inc
leave
jo
int
jle
cmp
out
sbb
sub
int3
das
loope
sarl
lcall
mov
xchg
jge
and
sahf
int3
push
ret
fsubr
or
out
aas
jbe
gs
cli
pop
mov
rcr
pop
jmp
push
push
call
outsb
jle
out
mov
nop
sbb
adc
push
mov
rorl
std
movsb
and
mov
test
dec
jecxz
pop
js
fistl
inc
cmp
mov
stos
xchg
lds
daa
xchg
jo
lods
mov
mov
divb
outsb
sub
lahf
in
sub
stc
das
outsb
fwait
jns
mov
bound
fs
fistpl
testl
sar
jl
mov
jecxz
xchg
cmp
iret
divl
push
je
divl
xor
out
fsubrp
andb
xchg
ficompl
xor
mov
les
movsb
sub
das
and
dec
xchg
in
test
rclb
insl
pop
xchg
pop
rolb
in
scas
icebp
push
shll
test
xchg
push
push
loopne
xchg
out
call
jge
sub
pusha
fimuls
bound
and
jl
or
mov
pop
sub
arpl
and
mov
sub
mov
insb
jo
scas
jg
mov
and
mov
mov
xchg
dec
aad
data16
or
in
jecxz
test
mov
insb
fwait
imul
sbb
push
mov
adc
out
movl
pop
mov
lds
add
xchg
ljmp
dec
and
mov
mov
in
out
ds
or
xchg
push
ljmp
mov
xor
xchg
stos
mov
int3
ljmp
fdivr
cmpsb
loope
std
lods
inc
mov
test
imul
cmp
sbb
sub
xor
xchg
and
into
adc
ret
aas
push
inc
push
inc
jne
in
lods
ficompl
push
xchg
pop
pop
push
xchg
sbb
add
mov
or
cld
outsb
leave
stc
jo
es
insl
negl
sub
loopne
data16
in
pop
jge
daa
popa
cmp
mov
jecxz
jmp
pop
or
and
pop
mov
xor
fadd
cmpl
cmp
test
call
popa
out
out
push
adc
cmp
fsts
notl
ss
stc
aaa
lret
mov
rol
jl
imul
fisubl
in
iret
mov
lods
in
mov
mov
cld
jecxz
ja
inc
popf
outsl
lcall
inc
test
inc
ja
mov
xor
aad
sbb
daa
inc
iret
xor
dec
or
enter
rcrb
push
push
pop
mov
clc
fisubrs
out
mov
adcl
mov
add
mov
in
jns
lret
aam
in
into
fildl
stc
lcall
jne
jmp
sbb
mov
into
outsl
mov
cmc
inc
lcall
xchg
sahf
xchg
adc
inc
test
and
iret
mov
push
and
int
adc
push
cmp
loope
add
pop
adc
adc
xor
sbb
and
jle
ret
popf
mov
cmpb
fwait
cli
push
frstor
jg
xchg
mov
sti
push
arpl
in
loop
sub
incb
mov
add
filds
and
push
data16
imull
fldenv
scas
sti
mov
fsubr
test
or
mov
inc
xchg
pusha
pop
mov
std
dec
mov
sbb
adc
addr16
xorl
mov
xchg
add
int3
cmpsl
adc
fwait
loopne
jnp
mov
mov
mov
icebp
jae
daa
out
mov
std
aam
insb
outsb
sti
fiaddl
scas
cld
jb
push
out
jns
int
in
mov
jle
das
cmpl
test
imul
enter
adc
sti
inc
sub
push
fwait
fs
cmp
test
popf
jecxz
jl
or
and
ljmp
cmc
fwait
and
sarl
mov
dec
dec
cmc
xchg
xchg
imul
insl
and
xchg
lods
imul
push
xchg
lds
sub
out
mov
lcall
shl
xchg
outsl
inc
and
fdivs
js
dec
mov
sti
int
mov
test
sbb
add
mov
push
movsl
push
or
leave
sbb
imul
mov
jmp
adc
movsl
into
mov
pop
mov
adc
out
movsb
cmp
cltd
mov
test
orl
adc
xchg
cmp
cmp
rcl
cmp
shll
int3
aas
push
pop
std
std
icebp
testl
mov
mov
jb
bound
sbb
jmp
roll
in
push
add
add
fwait
cmp
jmp
int
jmp
or
jnp
mov
mov
jnp
cmp
aas
into
mov
movb
xchg
stos
sub
js
call
mov
in
in
ja
mov
stos
jno
hlt
mov
push
mov
inc
adc
test
sub
aaa
push
inc
cmc
subb
int3
cwtl
pusha
sbb
enter
mov
dec
sbb
mov
add
cld
movsl
insb
xchg
cltd
orl
addr16
sbb
mov
and
js
fld
movsl
dec
push
push
test
cmp
or
mov
call
loopne
and
mov
cmpb
in
sahf
jecxz
add
add
sbb
and
sub
loopne
inc
dec
imul
mov
mov
jl
loopne
test
push
cmp
sub
xchg
jo
lret
push
jnp
fwait
std
nop
pushf
jecxz
add
scas
fucom
sti
jp
pop
sub
in
daa
inc
inc
cmc
ja
aaa
aas
jp
mov
sahf
push
in
out
test
mov
and
jno
aaa
adc
jg
lods
push
inc
jl
adc
push
or
dec
shl
mov
jne
int
push
jecxz
push
les
nop
rclb
cmp
inc
sub
pop
add
xchg
in
add
inc
mov
sahf
in
sub
aam
mov
rcll
adc
stc
pop
stos
popa
scas
loope
fistl
lods
mov
shll
int3
das
ror
setg
sbb
pop
mov
jle
cld
push
pop
adc
add
iret
jp
jbe
adc
in
out
jle
pop
test
loop
lods
repnz
cltd
xchg
push
aad
xchg
test
lds
ret
pushf
int3
xlat
jecxz
pop
and
pop
cwtl
jmp
clc
out
sub
fwait
push
movsl
and
xchg
mov
aam
subb
shlb
xor
das
pop
aad
pusha
loope
pop
arpl
mov
jo
jo
imul
iret
sub
pop
pop
loop
ljmp
cmp
addl
jnp
and
loopne
loop
cmpsl
mov
arpl
ljmp
popf
jmp
and
sahf
movsb
sub
and
and
popa
hlt
in
sahf
movsl
ljmp
jecxz
movsb
cwtl
js
dec
pop
ret
fldlg2
test
mov
sbb
in
dec
int
lcall
loop
push
orb
inc
lods
or
and
arpl
daa
mov
daa
cmp
pusha
xor
in
pushf
xchg
push
mov
repz
dec
bound
adcb
lods
mov
inc
gs
out
mov
fwait
mov
pusha
mov
mov
fdivr
lret
xor
push
lea
shl
ret
aam
lcall
xchg
test
dec
cmp
sbb
xor
test
ds
inc
iret
mov
insb
dec
js
pop
push
and
sub
scas
xor
and
mov
and
lods
cmp
aad
xchg
sub
mov
scas
push
or
scas
scas
aas
daa
cwtl
lods
mov
mov
adc
out
stc
icebp
mov
outsb
ss
mov
lods
stos
rorl
sbbl
pushf
fsubr
mov
lcall
dec
popf
xchg
pop
sub
mov
popf
addr16
pop
mov
ret
mov
fisttps
in
fwait
imul
aas
in
filds
xor
push
sub
push
mov
and
ret
ret
mov
cwtl
fistps
push
jmp
cmpsl
jle
loopne
dec
les
jmp
lret
jg
inc
rol
push
lfs
shll
and
pushfw
sub
stos
clc
into
cmp
in
push
clts
xlat
xchg
jo
aaa
sbb
cmp
nop
pusha
or
cwtl
sbb
int
push
adc
stos
sbb
cmp
lcall
lods
xchg
inc
lods
push
stos
call
cwtl
xchg
push
lea
loop
push
movsb
les
repz
dec
mov
cmp
cltd
subb
aam
add
hlt
hlt
fsubrl
adc
xchg
in
mov
popa
jle
pop
test
push
clc
insb
cld
jl
pushf
sbb
pusha
mov
lods
mov
dec
pop
inc
inc
rcrb
push
hlt
scas
rolb
mov
xor
mov
cli
adc
fcmovbe
shrl
and
dec
sub
sbb
insb
out
mov
jae
mov
inc
addr16
xchg
cmpl
add
gs
dec
cmp
and
mov
insl
inc
jmp
push
jno
xchg
out
jbe
mov
fcmovnu
pop
adc
jne
mov
sub
jmp
rcl
or
into
int
sbb
dec
test
rorl
ds
lcall
stc
scas
jnp
aas
shrl
push
hlt
xchg
mov
cmp
mov
jp
mov
sbb
mov
pushf
xor
xchg
sub
mov
sub
aad
lahf
std
sahf
xlat
repnz
jb
imul
cmp
cmp
push
loop
aas
mov
lea
push
xchg
or
sub
adc
js
iret
insl
xchg
mov
lods
jno
enter
and
inc
lods
mov
mov
xor
push
push
scas
sub
pop
loop
lret
sbb
mov
push
mov
and
ja
mov
out
int
addr16
pop
xchg
mov
in
gs
xchg
pop
cwtl
ss
and
mov
stos
enter
xlat
aaa
inc
sub
jno
push
jno
push
lret
notl
loop
loopne
aam
mov
mov
sbb
call
cmp
cld
dec
mov
pmaxub
filds
mov
mov
fwait
xchg
in
mov
es
mov
jecxz
add
xor
in
cltd
cmp
pop
lods
add
stos
fst
cmpsl
mov
shrb
ficompl
insl
addl
insb
xor
loop
jns
dec
push
mov
or
sub
ficoms
scas
push
xchg
stos
push
adc
xlat
lods
imul
movb
xchg
aaa
sti
fiadds
push
and
mov
mov
rorl
clc
jge
xchg
inc
and
pushf
mov
scas
mov
scas
mov
adc
scas
push
jae
and
cmp
sub
jo
or
inc
jns
enter
mov
inc
int
and
add
cld
stc
es
andb
dec
mov
cmpb
xor
xchg
ja
sub
mov
cmp
cltd
sbb
out
pop
xchg
add
icebp
sti
jnp
loopne
add
dec
jp
test
lods
scas
jg
pop
push
insb
movsb
rcl
jl
scas
dec
call
outsw
jge
fstl
repz
popf
xchg
sub
fdivrs
pop
sbb
cmp
sub
shl
movsl
lahf
add
loope
lret
jmp
sub
shr
sub
in
test
movsl
jecxz
movsb
sub
push
shrb
jge
add
hlt
mov
mov
jmp
jmp
fistl
jno
subb
cmpsb
inc
ss
adc
cmp
xor
in
notb
sarl
loop
adc
shlb
insb
subb
insl
jbe
dec
cmpl
ret
outsb
in
or
adc
inc
xchg
jns
mov
call
push
fiaddl
sub
cmp
leave
pop
adc
orb
push
mov
mov
cmp
cmpsl
fwait
ss
adc
xchg
or
mov
popa
dec
sub
mov
loop
jb
int
mov
aad
mov
mov
roll
sbb
adc
mov
xor
xor
sub
sub
das
add
stos
dec
std
sbb
mov
fstps
daa
data16
por
lcall
cmpl
add
mov
mov
scas
pusha
add
outsb
mov
jne
data16
pop
gs
cmp
sub
add
cmp
cwtl
or
popf
imul
and
fnstcw
pop
and
pop
inc
and
int
mov
pop
push
popa
lahf
pop
popa
add
mov
adc
inc
cwtl
sbb
in
icebp
push
and
gs
xor
push
lret
jmp
push
sarl
ret
add
mov
sbb
mov
repnz
out
fisubl
pop
std
xchg
call
push
sti
imul
out
adc
and
mov
int3
iret
lahf
mov
mov
xchg
sti
mov
nop
sbb
pop
int
sbb
nop
iret
and
adc
mov
popa
pop
cli
sub
jecxz
mov
gs
mov
mov
adc
lods
pavgb
cmp
pop
lods
jle
rcl
ret
xor
add
cmp
sti
mov
pusha
push
jb
or
andb
push
xchg
inc
popa
std
add
mov
pop
or
imul
out
add
pop
cmpsb
popf
in
mov
cmc
scas
inc
jb
mov
inc
push
gs
xchg
xorb
mov
and
pusha
pop
jmp
ret
fisubs
leave
mov
cli
js
flds
jae
dec
ds
xchg
mov
mov
jle
fdivrs
mov
test
pop
insl
insb
rcl
or
cmp
aad
xchg
add
rcrb
js
call
rolb
test
pusha
jnp
insl
lock
in
imul
pop
sub
mov
fimull
test
mov
adc
cmp
fisttpl
cs
out
jno
dec
jl
cmp
adc
mov
in
cwtl
or
or
sub
mov
push
nop
js
mov
jo
push
pusha
sub
aaa
daa
xor
mov
xor
pop
addr16
rcr
stos
mov
pop
cmpsl
push
adc
daa
xchg
jns
pop
sbb
adc
pushf
push
std
inc
es
inc
or
out
cmpsb
daa
lods
imul
xchg
cmp
mov
xor
dec
std
mov
jo
call
out
test
popa
jp
dec
mov
lcall
lret
jp
pop
stos
insl
in
adc
add
add
mov
out
dec
dec
and
movsb
cs
and
int3
ja
pop
mov
lods
clc
subl
js
xor
pop
adc
jle
mov
and
test
insl
pushl
dec
loopne
mov
xchg
xchg
orl
call
imul
mov
int
test
or
jo
mov
inc
sbb
and
sbb
fildll
push
lret
pushf
jno
mov
popa
pop
shrb
loope
stos
in
out
xchg
adc
push
je
nop
adc
add
arpl
mov
xchg
inc
adc
mov
xchg
mov
loope
outsl
dec
lahf
xchg
les
cs
mov
ficomps
cmpsl
scas
push
mov
iret
fsubrs
and
inc
cmc
loope
mov
repz
sub
scas
xchg
out
mov
xchg
sub
cwtl
mov
push
in
ss
inc
imul
mov
ljmp
sub
sub
push
sets
in
outsb
outsl
lea
popa
fwait
xchg
push
insl
arpl
iret
lods
gs
xor
cmpsl
aas
insl
sbb
xchg
add
xor
add
movsl
divl
mov
and
roll
and
lock
addr16
pop
das
imul
in
lods
lahf
out
pop
mov
or
xchg
mov
jae
or
mov
jnp
leave
into
sahf
and
js
cmp
mov
and
mov
push
ja
jmp
lds
ljmp
cmp
jg
inc
mov
sbb
or
add
outsb
xchg
dec
inc
popa
mov
mov
cmp
ss
pop
outsb
mov
lahf
jne
and
bound
cmpsb
fwait
lret
ret
adc
imul
jnp
adc
and
loope
jo
mov
lds
scas
vshufpd
js
push
fisttpl
and
add
and
mov
dec
and
jge
es
jne
mov
fidivl
lock
orl
out
faddp
je
pop
cmp
repz
pop
ja
sbb
xchg
or
sbb
sbbb
inc
ror
mov
adc
sbb
fs
xor
jle
or
mov
aas
lea
sbb
js
xor
xor
xor
fldpi
sti
test
push
lret
repnz
push
test
add
xchg
pop
pop
test
sti
xor
pop
lds
das
mov
aam
and
and
dec
lods
ljmp
les
jp
jae
pop
xor
xlat
pop
push
mov
rol
es
add
sbb
jns
popl
fwait
pop
mov
mov
add
sti
pushf
sti
or
cmp
dec
and
test
dec
loope
add
push
mov
out
mov
ja
xchg
shll
iret
repnz
and
out
xlat
mov
lea
push
sbb
mov
sbb
and
sbb
mov
xor
fsubp
mov
sahf
popa
mov
cs
or
cmp
sub
jle
mov
push
sbb
popf
mov
mov
xchg
repnz
out
pop
sub
mov
inc
fisubrl
jmp
and
mov
push
mov
mov
jge
inc
adc
insb
cli
push
cltd
call
imul
idivb
push
fwait
pop
mov
pop
xor
clc
rclb
aad
mov
aaa
lea
cpuid
pop
bound
ljmp
fs
popa
js
rcrl
mov
xchg
jge
repnz
cmp
arpl
ljmp
stos
clc
sahf
mov
push
pushf
repnz
dec
jno
hlt
inc
sub
adc
jp
pusha
sbb
mov
roll
or
test
push
jae
mov
scas
xchg
loop
lods
jnp
insl
subb
xor
js
lods
imul
sub
dec
pop
adc
fsubl
sub
das
inc
push
cltd
shll
lahf
data16
jge
add
bound
mov
xchg
out
stos
in
push
xchg
sbb
jo
movsb
cmp
add
aad
add
addr16
xchg
mov
mov
das
push
xor
sub
add
icebp
mov
push
aad
jne
push
dec
mov
pop
push
gs
imul
sub
les
sub
xchg
dec
xlat
cwtl
shll
fnstsw
xchg
xor
loope
loope
cmp
xchg
arpl
roll
add
movsb
out
fxch
ret
fsub
adc
and
test
jp
jns
imull
mov
dec
jecxz
sub
loope
adc
mov
or
loop
mov
adc
cmc
xchg
shrl
jae
stc
mov
shrd
mov
inc
into
pusha
daa
test
dec
rep
pop
inc
inc
lret
push
pop
mov
xchg
or
inc
fs
pop
jnp
stos
clc
pop
nop
push
es
dec
push
mov
jg
insl
and
pop
xchg
jo
dec
mov
fstl
mov
pop
aam
bound
pop
lea
shll
cwtl
imul
loope
loopne
out
cmp
ja
imul
and
ljmp
push
cli
addb
and
nop
add
lcall
es
xorl
dec
xorl
cltd
sbb
stc
cmp
jle
xchg
mov
push
pop
add
icebp
in
add
xor
jae
adc
pop
jmp
das
fs
sbb
xchg
lods
mov
prefetcht1
out
xor
shrb
pop
insb
or
cmp
xchg
sub
mov
daa
gs
cmp
sbb
inc
ficompl
jne
dec
xor
scas
mov
pop
sub
cmp
add
mov
sub
jecxz
mov
push
xchg
popa
xor
ja
pop
adc
pop
pop
pop
mov
inc
imul
lods
adc
push
pop
push
hlt
dec
add
and
hlt
insb
leave
shl
xor
inc
and
mov
mov
pop
push
mov
cmp
mov
pop
shrl
movsb
popa
out
mov
lret
popf
jmp
daa
jbe
jns
xchg
dec
cld
fcmovnb
push
push
inc
daa
xchg
dec
xor
cld
inc
cli
cmc
es
lahf
push
push
bound
shl
fs
std
add
dec
jb
pop
dec
data16
outsb
sbb
hlt
adc
sbb
or
fisubs
cmp
add
xchg
mov
xchg
xor
cmp
or
lods
and
pop
ljmp
pushf
and
mov
or
loopne
mov
lahf
add
das
mov
pop
inc
test
push
call
mov
sbb
fcomip
in
daa
mov
cli
in
xchg
cmpl
popa
in
lea
inc
mov
negb
out
mull
mov
js
popf
push
filds
hlt
mov
int
mov
sarb
pop
and
ds
les
xchg
int3
mov
mov
add
xchg
ja
fsub
es
aaa
push
sub
or
cmp
lock
inc
cmp
add
xlat
mov
xchg
in
in
aad
andb
filds
cmp
out
sub
mov
jne
faddl
les
loopne
mov
cmp
test
sub
jns
xchg
mov
jle
in
mov
inc
sbb
or
data16
fcompl
pop
pop
std
jne
ds
push
in
inc
jbe
sbb
pop
popl
aas
cmpsb
dec
and
cmc
outsb
arpl
pusha
repnz
clc
or
imul
pop
arpl
test
scas
sbb
mov
add
cli
sub
fdivrs
ss
in
jb
inc
pop
scas
sbb
daa
jge
mov
push
push
lock
jecxz
sub
pop
pop
mov
pop
movsb
aad
incl
pop
push
sub
sti
mov
xor
sbb
fiadds
lds
mov
leave
push
les
gs
jl
sub
sub
sti
pop
pop
add
xlat
test
adc
dec
jecxz
outsb
flds
sbb
ffree
jno
xchg
add
cmp
stos
xlat
or
sub
ret
pop
inc
scas
jne
movsb
sarl
iret
nop
mov
push
aam
out
sahf
adc
push
dec
bnd
add
inc
data16
mov
sahf
mov
mov
pop
inc
testb
xor
push
mov
sbb
jp
test
data16
mov
call
adc
out
mov
mov
fdivrl
add
pop
xchg
xor
imul
cmpb
pop
fldcw
js
push
xchg
sub
mov
cmpsb
add
insb
in
mov
sub
xchg
in
mov
imul
test
stos
push
jns
aaa
mov
cwtl
repz
mov
xchg
iret
pushf
inc
sbb
fs
stos
mov
fsubs
test
xchg
sbb
lods
popf
out
cmp
iret
cmpsb
int3
adc
pop
rcr
inc
aad
inc
popf
insb
out
scas
or
mov
data16
sahf
xor
addl
imul
pusha
add
loop
fistps
or
and
lea
pop
in
mov
stc
add
cmpsb
js
clc
aad
add
adc
sbb
scas
daa
lret
jmp
xchg
mov
test
mov
push
ret
pop
xlat
push
insb
loope
lret
pushf
mov
mov
pop
adc
enter
jl
dec
cmpsb
loop
cmpsb
pop
and
adc
cmp
cmp
inc
js
pop
arpl
aas
subl
cmp
jg
aaa
push
sub
jmp
mov
dec
xchg
push
pop
sbb
inc
ret
jno
inc
jne
sub
addb
and
clc
add
xor
dec
aad
adc
aam
mov
je
ds
and
aam
add
out
outsl
push
mov
pop
daa
test
fdivrl
hlt
mov
pop
push
push
push
add
xor
pop
adc
adc
leave
aaa
iret
fiadds
xor
push
mov
or
inc
xchg
sub
pop
shl
adc
das
mov
xchg
lods
fs
dec
add
sub
aas
push
jge
js
inc
pop
add
cmp
bound
mov
mov
adc
xor
mov
pop
mul
xor
psubusw
rclb
add
xchg
pop
push
adc
shrl
pop
or
cs
fstp
mov
ljmp
cltd
mov
mov
lahf
insl
jno
xchg
dec
inc
xor
loop
or
rcrl
xor
jo
or
mov
scas
sbb
insl
inc
jno
mov
add
in
loopne
jno
cmpsb
mov
movsb
test
jle
hlt
and
adc
jo
ja
mov
push
lea
and
into
loopne
fcompl
arpl
lods
xor
call
in
mov
push
js
mov
out
lahf
out
pop
mov
cld
jo
sbb
rcrl
and
je
bound
pop
in
ret
ds
mov
add
add
push
scas
xchg
jb
andl
adc
es
repnz
jmp
out
cmovp
jnp
fwait
cmp
cltd
pop
fisttpll
scas
cmovno
imul
ret
or
lret
leave
cmp
push
test
adc
sub
add
in
mov
subb
mov
sbb
mov
push
and
mov
idivl
lods
rclb
ret
hlt
nop
loope
push
shrl
cmp
mov
pop
jecxz
rcrl
ja
push
leave
mov
inc
dec
in
movsl
sarl
dec
inc
jo
pusha
or
push
sub
addl
es
js
mov
sbbl
xchg
fadds
mov
imul
mov
add
cmc
out
mov
cld
les
xchg
or
iret
or
mov
mov
mov
cmp
cwtl
aas
roll
pop
sub
jns
sbb
out
push
xor
shrl
and
mov
mov
aam
call
and
mov
cld
sarb
push
xor
loope
cmp
mov
push
jns
lods
out
mov
push
mov
jbe
mov
lods
push
mov
cmp
jp
inc
mov
jnp
mov
aam
enter
test
cmp
out
mov
cmp
mov
es
inc
jl
subb
mov
lahf
outsl
andb
cmp
adc
push
insb
or
xchg
and
pop
lret
or
cwtl
test
sub
imul
push
pop
fcomps
cld
sarb
mov
mov
lds
lods
jecxz
lds
mov
pop
fadds
jecxz
lcall
push
in
cmp
cmp
shlb
and
loope
pop
aam
aas
add
popf
jb
rcl
mov
ss
or
dec
push
xchg
out
stos
sub
dec
in
xor
mov
outsl
mov
push
mov
std
mov
jb
mov
lcall
sbb
stos
das
ret
jno
mov
push
shrl
fistpll
mov
inc
pop
inc
xor
dec
aam
fwait
xor
outsb
mov
fimuls
xchg
push
es
and
mov
sbb
and
rol
aaa
test
fldl
pop
cld
fisubrs
ret
dec
les
jmp
pop
pop
or
lods
and
dec
outsl
ja
sub
popa
jbe
push
sbb
cmp
pusha
call
sub
dec
jo
inc
or
ret
push
mov
lods
fstpl
loopne
fldt
movsb
push
and
cwtl
gs
imul
jbe
inc
lea
pop
roll
push
shlb
and
jo
or
xchg
ds
sbb
pop
das
xchg
ss
jno
jo
pop
fstl
push
cld
or
pop
xchg
or
ljmp
shrl
jg
xor
jns
inc
xorb
shlb
insl
cmp
push
lcall
jne
and
xor
mov
cmp
clc
fwait
pop
loope
mov
xorb
sti
jp
lods
test
xchg
mov
jp
incb
jecxz
mov
aaa
and
into
inc
cwtl
add
cmpsl
cwtl
mov
cltd
out
outsb
xor
and
jbe
push
ret
popa
enter
call
push
mov
push
push
push
jo
xlat
mov
pop
xor
inc
fsubrs
add
ret
std
add
dec
adc
cmpsb
call
sahf
sbb
sbb
insl
xor
stc
jmp
pop
sbb
out
cmpsl
adc
push
pop
imul
mov
mov
fsubs
lcall
sub
xor
xor
push
fisubl
add
xor
jp
jns
ljmp
jae
lret
shr
popf
cmpsl
mov
es
nop
adc
lods
xchg
dec
push
fldenv
add
pop
mov
fisttpll
int3
xabort
mov
arpl
out
jo
aaa
mov
mov
pop
out
inc
jbe
scas
pop
push
push
pop
add
sti
stos
cmpsl
jmp
leave
or
daa
ljmp
mov
subl
loope
xchg
add
push
shrb
sbb
xor
gs
push
mov
or
sub
ds
je
popa
data16
mov
rcll
ret
aam
cmp
add
jnp
mov
xor
pop
dec
into
lds
cmp
int
dec
stos
sahf
mov
fstpt
jo
dec
lahf
lds
loop
outsl
sti
mov
jmp
in
dec
mov
outsb
inc
mov
pop
or
push
mov
iret
out
push
enter
dec
pushf
add
mov
adc
inc
jp
mov
cmp
lret
repnz
cmp
inc
mov
mov
ljmp
xlat
hlt
pop
push
cmp
sbb
test
add
push
mov
inc
call
stos
xchg
call
fwait
ja
inc
lret
ret
xor
pusha
xchg
imul
arpl
loopne
mov
lods
rcrb
cwtl
mov
sbb
fidivrl
pop
pop
add
and
inc
lds
jl
in
mov
jno
int3
jb
pop
ss
jp
cmp
sarb
jle
das
cld
int
js
lds
jae
xor
or
mov
dec
inc
add
pop
pusha
imul
pop
dec
cltd
xchg
pop
xchg
dec
inc
mov
dec
lret
ds
adc
and
add
icebp
sarb
out
in
sbbl
mov
jecxz
lret
pusha
and
scas
sub
nop
xchg
shll
xorb
push
mov
cmpsl
lret
xor
or
leave
adcb
fildll
and
dec
add
mov
scas
xor
psubsw
cmp
pop
sbb
mov
cltd
sub
stos
insl
mov
std
sub
or
cwtl
sbb
xorb
fisttpl
xor
and
loope
dec
aad
mov
push
cmpsb
push
inc
popa
and
inc
aam
xor
aaa
pushf
mov
rorb
xor
inc
mov
daa
or
fisubrs
sar
pop
and
mov
and
mov
jae
lret
or
loopne
scas
cmovbe
pop
rorb
addr16
lods
xchg
call
or
aas
adc
shll
lea
and
mov
jp
adc
fs
mov
addr16
std
adc
loopne
sbb
test
push
cmp
pop
mov
push
xchg
mov
mov
lds
cmpsl
push
outsl
cli
sbb
stos
sub
pop
jae
cltd
inc
movl
xlat
ret
and
hlt
mov
loopne
push
shrb
cmp
or
xchg
out
sbb
mov
scas
test
mov
add
and
test
sti
mov
lcall
arpl
cmp
fidivrl
lret
fistpll
cmp
aas
add
pop
pop
enter
xor
test
out
cmp
hlt
pop
jno
xor
cmc
mov
cmp
lcall
cmp
call
push
loopne
das
mov
xchg
pop
pop
adc
scas
cmpb
in
mov
mov
daa
xchg
loope
pop
adc
pop
inc
mov
test
and
jns
inc
add
dec
sub
cmp
pushf
mov
and
mov
mov
and
push
cmp
mov
popf
in
fdivrl
lahf
aam
xchg
sbb
sub
in
loope
or
cmp
jl
shr
and
and
aas
dec
icebp
jge
push
shll
add
dec
rol
jns
andl
fnsave
subl
xchg
jno
mov
xchg
cmp
cmp
xchg
stc
mov
outsb
and
xchg
rcl
mov
mov
jmp
jne
cmp
test
stos
mov
dec
jnp
pop
inc
jp
pop
cmc
testb
cltd
push
cmp
adc
jno
imul
popa
mov
addr16
sbb
into
dec
les
out
sarl
in
cwtl
sahf
in
popa
das
sub
in
or
inc
ljmp
shlb
das
lods
test
test
push
sarl
je
push
jmp
popa
pop
mov
mov
lds
mov
sub
mov
cmpb
clc
mov
xor
popa
outsb
imul
push
xor
and
xchg
out
push
inc
mov
xchg
jns
pop
push
cmp
das
inc
adcb
mov
les
jl
aam
fnstsw
divb
lahf
or
jo
out
xlat
loopne
pop
popf
das
gs
fdivrs
xchg
subw
and
ss
push
and
in
mov
xchg
daa
xor
loop
and
aam
and
pop
mov
rcr
sub
shll
sub
sbb
pop
mov
jg
enter
push
push
jae
sysenter
xchg
loop
lea
jle
jp
addr16
mov
enter
mov
xchg
out
rcll
js
and
xadd
jb
fcomps
in
mov
xchg
aad
push
lahf
jnp
xchg
loope
mov
fwait
loope
dec
xchg
test
ret
xchg
push
and
int
pop
stc
fmulp
xor
fidivrl
xchg
std
leave
pushf
mov
ficoml
js
in
cltd
jmp
out
dec
daa
xchg
in
rorl
mov
les
stc
pushf
push
nop
jo
dec
aam
sub
movb
cs
aaa
daa
les
movsl
or
fcomip
jno
push
mov
pop
daa
insb
rorb
xor
push
pop
insl
push
clc
stos
daa
jb
pushf
sbb
add
jg
mov
and
subl
scas
xchg
sahf
shl
bound
test
jae
sbb
and
sub
push
insb
sub
in
push
mov
int3
xchg
cs
push
pop
xchg
cli
xor
xor
pop
scas
mov
adc
aam
fcoms
jne
and
fadds
push
insb
ret
cmp
cmp
loope
xor
out
add
pop
mov
pop
mov
mov
push
xchg
pop
jmp
pop
pop
dec
fldcw
lods
es
test
mov
jnp
or
xchg
out
mov
sti
mov
repnz
push
push
in
outsb
insl
cmp
pop
or
aad
imul
pusha
insl
jp
mov
insb
or
lods
xor
nop
imul
cmp
imul
mov
stc
jns
cmp
fistps
jg
outsl
xchg
xchg
jne
inc
cld
aas
jmp
aaa
nop
cwtl
xchg
adc
sub
sub
mov
cmc
dec
inc
pop
dec
scas
out
cmp
jl
daa
mov
mov
cwtl
call
and
das
xor
sub
insb
in
pop
test
add
test
lahf
push
shll
andb
xor
pop
cmpsb
dec
jno
ja
push
xchg
aad
mov
pop
xlat
subl
pop
daa
sub
ds
push
cmp
stos
xchg
popa
aad
xchg
adc
sbb
pusha
lret
xor
sub
fldenv
stos
dec
mov
out
sub
pop
call
es
pop
lahf
sub
pop
lea
xor
xchg
mov
pop
sbb
sbb
jecxz
adc
mov
flds
sbb
and
and
push
test
ja
and
sub
cmp
cmp
xor
lea
dec
fistl
pushf
add
jmp
movsl
int
clc
mov
cmp
pop
ret
sbb
loop
add
nop
ror
out
inc
adc
inc
push
or
dec
mov
pop
mov
jg
pop
loope
add
mov
sub
lea
out
or
mov
jge
leave
and
popa
and
insl
push
hlt
mov
clc
scas
and
inc
dec
iret
mov
jno
jmp
jecxz
roll
xchg
leave
mov
mov
int3
cltd
push
sub
or
inc
add
and
pop
movsl
in
arpl
cmpb
or
stos
and
addl
out
sub
inc
out
dec
dec
xor
ret
inc
dec
or
inc
and
pushf
movsb
xor
mov
jnp
and
jae
cwtl
movsb
das
int3
les
xor
xchg
mov
mov
notb
test
mov
das
and
jle
pop
sub
xor
shrl
mov
xchg
cld
mov
nop
mov
add
or
in
mov
in
sbb
imul
stc
adc
pop
mov
cmp
lods
dec
out
jbe
cmp
xor
daa
cmc
pop
mov
repnz
insl
jecxz
xor
jmp
cmp
loopw
test
scas
and
daa
sbb
aaa
les
jno
inc
lea
pop
movsb
jne
push
xchg
cmp
sahf
cmc
cmpsb
ret
xchg
aas
cmpsl
jb
mov
push
popa
lea
test
scas
popf
call
sbb
mov
sub
xchg
popf
sarb
and
lock
push
sbb
fwait
adc
xchg
xchg
and
cmpsl
lds
shl
mov
xchg
jnp
popa
mov
outsb
add
mov
in
int
adc
pop
push
push
push
andl
push
pop
clts
lret
jge
fldl
mov
sbb
xchg
and
jecxz
mov
outsb
test
ja
mov
jl
mov
mov
and
sbb
loopne
add
shrl
mov
pop
orl
add
add
lret
cmc
adc
dec
ljmp
push
jecxz
inc
mov
popa
push
out
jnp
jmp
cmp
sub
adc
fistpll
or
add
cltd
xchg
mov
mov
imul
imul
popa
xchg
movsl
loope
cmp
cmp
jo
rol
xchg
movsl
shrb
fimuls
dec
cmp
fldl
xchg
cmp
out
xor
and
out
sbb
jbe
popa
iret
imul
jge
xchg
pop
sbb
inc
out
fistpll
inc
push
in
mov
pop
jge
aam
nop
in
pop
leave
flds
hlt
mov
shll
adc
pop
and
ret
movsb
adc
inc
aaa
mov
dec
sub
add
or
lock
jmp
pop
mov
jb
cwtl
add
popf
insb
push
imul
lods
rorl
loop
in
push
dec
sbb
in
xchg
xchg
jb
jno
cmp
and
cmpsl
pop
enter
rolb
out
ljmp
shl
scas
call
add
push
jno
sub
lea
lret
xchg
mov
ljmp
pop
popf
jns
loope
js
es
sub
add
movl
xchg
fnstenv
xchg
test
icebp
aam
jae
or
lods
out
sbb
pusha
push
sub
sti
xchg
mov
dec
jno
jg
pop
stos
test
pop
add
out
sbb
sub
fs
lods
mov
pop
mov
scas
push
aam
cmc
pcmpgtw
test
and
mov
aam
xchg
mov
push
ja
pop
push
aad
int3
es
jnp
pushf
shl
mov
pop
mov
test
mov
lea
mov
call
adc
sub
mov
imul
shl
pop
lret
fistps
push
jno
leave
push
dec
rcrb
push
out
popa
sbb
loopne
ret
push
mov
xor
xlat
jg
cmp
out
int
add
cmp
xor
cmp
mov
lods
repz
xlat
mov
cltd
push
dec
out
sbb
jbe
pop
sub
add
inc
in
jo
addr16
sti
push
aad
lea
mov
insb
aad
pop
cltd
or
dec
inc
jb
imul
jle
or
and
lea
xchg
test
inc
mov
dec
std
push
inc
ljmp
pop
ja
and
pushf
lods
pop
sbbb
adc
add
jbe
shr
cli
outsl
mov
push
std
fdiv
push
sbb
aad
les
lret
xchg
and
mov
mov
insl
ds
jbe
out
lcall
popa
lret
addr16
es
pop
les
add
daa
faddl
adc
mov
push
fcmovne
enter
sbb
mov
in
dec
ljmp
pop
aaa
xor
cmpsl
ds
sub
mov
mov
xchg
daa
adc
scas
lahf
insl
dec
mov
lcall
fistps
cmpl
jl
shll
xor
mov
cmp
sub
cmp
popf
xor
mov
stos
xchg
in
bound
gs
jns
jmp
std
mov
in
icebp
push
mov
addr16
push
test
add
inc
sahf
cmp
js
mov
xchg
or
dec
insb
jne
mov
push
aad
andb
xchg
mov
adc
shll
xchg
cmpsb
sbb
int
sub
pop
insw
sub
std
cwtl
xchg
xchg
loopne
fnstsw
ret
sub
out
xlat
out
add
int
mov
push
test
aad
lods
jl
imul
push
inc
iret
leave
add
pop
cmc
insl
mov
inc
call
mov
xor
jb
push
movsb
inc
icebp
enter
push
mov
sub
pop
aam
mov
cmpsb
mov
out
xorl
cmovl
lret
int
test
inc
lret
ret
jnp
add
scas
in
in
roll
and
inc
pop
mov
xor
sub
xchg
sub
mov
lret
mov
push
daa
jb
shlb
mov
loopne
sub
icebp
pop
ljmp
addl
push
cmp
fsubl
and
mov
push
push
sub
mov
dec
rcrl
fucomip
and
adc
loop
lea
mov
or
loop
je
les
outsb
movsl
scas
cmp
gs
insb
cmp
rclb
xor
in
int
out
sti
insl
xchg
mov
nop
hlt
rcll
mov
sbb
push
sti
cmp
sbb
jb
loopne
je
loop
loopne
lds
rcl
xchg
inc
insb
add
sub
jbe
mov
jecxz
into
pop
and
pop
push
and
or
pop
movsb
inc
sub
fs
fisubrs
adcb
in
mov
clc
in
xor
icebp
in
jg
lea
das
xchg
push
pop
mov
pusha
jns
scas
cld
adc
adc
lret
add
mov
mov
xchg
mov
dec
repnz
les
aas
mov
lea
jge
inc
and
cmp
jmp
xchg
xchg
loopne
jle
push
add
cmp
int3
dec
jb
pusha
pop
pop
dec
jge
jb
ljmp
shll
xchg
insb
pop
leave
les
jno
mov
and
popa
in
aad
xchg
xor
repnz
push
sub
test
adc
jo
pusha
mov
icebp
cs
push
jg
adc
ffreep
or
ss
clc
pop
jmp
xchg
cmp
push
insl
rolb
in
ret
int3
mov
jb
mov
sub
mov
movsl
ds
addr16
jno
mov
shll
sub
inc
push
mov
addr16
and
xor
std
sbb
call
xchg
daa
call
mov
andl
xchg
jno
outsl
das
loope
sub
fisubs
or
push
xchg
mov
or
mov
and
xorl
cmp
lsl
cmp
fldenv
pop
sbb
out
int3
outsl
or
js
inc
les
call
popa
aaa
dec
push
arpl
jmp
mov
jge
pop
mov
popa
sti
pop
jmp
xor
pop
pop
and
cmp
popf
pop
dec
lret
stc
mov
outsl
inc
ja
push
cmpsb
insl
jle
mov
arpl
or
xor
sbb
or
lods
shrb
mov
setne
sbb
pop
push
pop
jbe
or
mov
loopne
sub
push
and
nop
xchg
ficoms
shl
mov
pop
enter
popa
in
push
adc
call
push
movsb
outsb
fstpt
and
and
jl
call
jno
lea
mov
out
mov
shlb
cmp
xbegin
roll
pop
and
cmpsl
xchg
lcall
cmpsb
inc
jb
inc
mov
xchg
jge
mov
add
cmc
testb
or
dec
pop
add
mov
cmpsb
int
jns
and
xor
and
and
jae
push
jo
push
add
pminsw
sbb
mov
cwtl
cmp
mov
inc
inc
add
adc
mov
jbe
xor
testl
push
ljmp
pop
or
push
test
push
jle
mov
mov
nop
xor
andl
imul
sub
xchg
and
scas
mov
fs
data16
aas
mov
mov
into
or
mov
xchg
mov
jl
lcall
sub
add
jno
test
stc
cmpsb
lods
out
ret
xor
es
test
aas
xchg
xor
dec
mov
jne
cmpsl
adc
lahf
jle
xchg
dec
subl
mov
mov
ljmp
ficoml
pop
andb
xor
xchg
or
mov
push
xchg
and
data16
push
xchg
and
mov
xor
outsb
cmpsb
push
sub
cmpl
insl
adc
sbb
and
pop
rorb
fwait
dec
je
cs
insl
push
out
imul
xchg
xorb
or
sbb
cltd
loope
sarl
test
cmc
adcb
std
jb
inc
mov
mov
pop
lret
fistl
xchg
lea
mov
cmp
mov
xlat
jp
popa
xchg
sub
subb
aam
hlt
pop
testl
or
test
mov
xlat
pop
or
sbb
insl
jmp
je
xchg
add
add
pop
stos
mov
xchg
scas
pop
mov
insb
lds
ret
pop
mov
insb
stc
fcoml
mov
push
imul
sahf
push
jnp
into
cmp
dec
push
inc
mov
les
jl
cmp
push
and
xchg
insb
jecxz
or
mov
sbb
jno
sbb
nop
mov
xchg
mov
enter
pop
daa
popa
xchg
inc
js
sbb
adc
loope
dec
shl
out
add
mov
lahf
shll
add
mov
xor
loope
mov
loopne
lcall
insb
add
mov
addr16
lret
aad
jmp
dec
sbb
aaa
sbb
lcall
cmpsl
xor
imul
scas
inc
in
cli
push
push
fcompl
and
cwtl
mov
mov
es
mov
jl
cltd
and
fistpll
pop
lret
leave
repz
in
pop
rcrl
add
loopne
mov
arpl
mov
outsb
std
push
imul
ret
loopne
jae
dec
add
or
insb
inc
ret
je
movsb
cmp
sbb
pop
dec
pop
jno
mov
push
mov
sahf
outsl
jge
cmpl
jno
insl
pushf
add
lods
daa
jecxz
jo
push
mov
sub
and
dec
aas
mov
sbb
xor
dec
push
pop
or
mov
hlt
or
inc
xchg
in
add
ljmp
inc
dec
or
aad
push
ja
or
or
lds
mov
pop
jl
aad
pop
bound
jge
lods
sub
fldenv
sbb
in
dec
ds
mov
push
arpl
adc
push
into
rcll
dec
clc
jmp
push
outsl
adc
int
xchg
mov
or
cmp
rcrl
or
insl
das
aam
test
mov
icebp
test
mov
push
out
mov
out
and
sbb
stc
lret
xchg
flds
adc
aam
mov
enter
fdivl
mov
lods
ja
fstp
lahf
xchg
push
xchg
daa
repz
mov
mov
in
and
sbb
ret
pusha
sbb
fs
xchg
pop
into
call
imull
std
jnp
pop
dec
xchg
adc
push
push
inc
add
faddp
mov
inc
test
push
lret
aaa
mov
lea
aas
loopne
mov
aaa
fwait
sti
adc
subb
cmpsb
xor
ljmp
ljmp
jmp
outsb
ret
ja
jnp
mov
inc
imulb
sbb
or
adc
jg
add
shll
xchg
mov
jns
and
scas
push
testb
movsl
sbb
popa
or
addr16
xor
jecxz
cltd
mov
rorl
and
xchg
adc
into
fldenv
jbe
mov
into
mov
push
jle
jno
mov
test
jecxz
aad
insb
cmpsb
and
std
insb
adc
xchg
dec
nop
xor
in
das
imul
push
push
cld
loop
insl
pop
insl
mov
cltd
cmpsl
in
add
movsb
cmc
cmp
mov
das
fidivl
out
sub
mov
mov
jg
gs
out
int
push
xchg
mov
into
push
and
ret
adc
loope
jl
mov
movsb
adc
xchg
mov
stc
imul
jg
push
aad
lods
lods
shll
aaa
mov
jmp
or
jbe
sbb
int3
and
push
and
lret
adc
sti
aam
mov
and
mov
outsb
rcr
pop
cmp
fwait
in
jo
daa
lds
pusha
imul
xchg
pop
xor
inc
xor
into
loopne
xor
or
aaa
subb
cmpsb
popa
imul
push
sbb
xchg
cltd
mov
lcall
addr16
and
dec
int3
pop
add
cmp
lods
pop
xor
pop
push
and
pop
std
mov
or
out
pop
outsb
insb
popf
js
jae
jmp
xor
pop
adc
jle
pop
aad
scas
lods
inc
jno
bound
cmp
fs
sub
into
jnp
aaa
lahf
push
aad
mov
cmc
in
mov
mov
push
test
inc
jns
and
mov
inc
bound
push
fcomp
push
xor
sbb
cwtl
int
aam
xchg
and
pop
jnp
xor
ljmp
push
popf
lcall
jo
push
ret
iret
pop
movsl
arpl
int
lods
imul
dec
mov
daa
jb
ds
aas
imul
and
and
out
pop
sub
sbb
add
sbbl
xchg
jbe
adc
lahf
xchg
and
insb
inc
leave
div
cmpsl
shlb
outsb
mov
fnstsw
mov
push
aad
mov
stos
scas
adc
push
push
adc
push
mov
adc
add
adc
lods
lock
cmc
push
popa
pop
js
mov
sub
pusha
jae
mov
push
push
sub
movsb
cmp
cltd
mov
dec
das
shr
push
ret
das
js
inc
jmp
rolb
mov
test
inc
imull
in
cmp
pop
adcl
mov
or
out
int3
je
cmp
and
std
popf
data16
xor
xchg
mov
leave
sbb
pop
push
mov
aam
inc
int
dec
data16
xchg
aad
imul
inc
sahf
repnz
lea
and
subl
pusha
or
shl
add
jle
rol
fistps
loopne
out
add
mov
sahf
pop
and
jecxz
sbb
mov
jge
call
test
scas
xchg
je
pop
inc
xorl
and
call
sbb
xchg
mov
xchg
ret
lea
int
jbe
stos
fnstcw
das
dec
rorb
xor
jmp
cmp
xor
in
mov
sbb
and
xor
xor
fwait
scas
cmp
inc
sub
and
test
movsl
outsb
dec
scas
xchg
push
xor
ficoml
movsl
push
xor
sahf
fadds
out
stos
cmp
adc
sub
sub
cmp
xor
xchg
pop
cmp
and
imul
enter
add
and
sub
test
aad
cmpsl
ret
jp
xchg
xor
dec
pop
nop
gs
or
frstor
cmp
add
sbb
testb
dec
xchg
test
and
out
sub
jp,pn
out
ljmp
sbb
mov
xchg
mov
xor
push
scas
and
push
mov
pusha
pcmpgtw
xchg
push
xchg
jmp
push
pop
pop
mov
add
out
dec
dec
in
mov
pop
mov
ljmp
cld
mov
pop
sub
mov
xorl
js
leave
cmpb
out
sbb
xchg
gs
or
outsb
mov
clc
jg
shr
push
pop
lret
jbe
rcl
insl
in
lahf
out
cmp
fadds
out
push
into
mov
fistpll
sti
shll
or
adc
loopne
out
mov
loope
pop
repz
cmp
push
dec
mov
test
fcompl
inc
pop
push
adc
jae
clc
push
repz
sahf
shrb
es
addr16
pop
add
orb
fwait
mov
andb
aad
subb
xor
pop
shll
mov
fs
popf
dec
or
arpl
sub
je
jae
mov
push
insb
loop
js
icebp
out
stos
push
aas
and
daa
popw
cltd
arpl
push
es
adc
mov
sub
int
add
sub
jle
cs
lods
insb
mov
fs
push
out
sbb
fwait
cld
rcll
fwait
stos
lret
mov
lcall
es
lea
cs
iret
inc
mov
negl
adc
dec
adc
adc
dec
mov
rol
ss
arpl
pop
daa
data16
lea
or
aaa
int3
fdivs
inc
in
xor
cmp
adc
dec
or
pop
xchg
popl
int3
lret
aam
shr
or
pusha
cmp
jmp
sub
mov
testb
fdivl
pop
mov
xor
das
mov
cwtl
jae
fcompl
inc
jmp
shlb
aad
int3
dec
pop
push
loopne
test
popf
test
cmp
dec
in
loope
pushf
sub
adc
imul
pusha
mov
sbbl
pop
fcoml
jg
cmp
push
sub
scas
clc
idiv
sbb
jge
mov
jo
push
add
fstp
mov
aad
mov
xchg
fbstp
scas
push
cmp
inc
or
pusha
xchg
or
push
icebp
aas
out
dec
faddl
je
mov
mov
add
jmp
rcrl
xchg
leave
rcrb
cltd
arpl
jecxz
outsb
fwait
xlat
test
aaa
xor
rorl
inc
data16
fwait
popf
fcom
aad
pushf
xchg
sahf
sbb
aas
and
xchg
mov
mov
push
insb
jg
das
lahf
jle
jo
movl
lret
jnp
push
jl
loope
das
in
mov
pop
idivl
inc
sub
inc
aaa
cwtl
lret
push
lods
out
xor
idivb
inc
xor
ja
inc
sub
or
aam
call
mov
mov
roll
or
push
jp
push
test
into
add
xor
mov
mov
in
ficompl
dec
inc
cs
jne
inc
pop
sub
dec
sub
dec
xchg
mov
fwait
or
jl
aaa
jae
fs
pop
jb
ds
xchg
or
aad
push
mov
xor
in
jge
outsb
dec
insb
push
cmpsl
cmp
dec
inc
loop
shrl
dec
add
add
in
movl
inc
fstl
push
stos
out
popf
inc
sbb
jl
jbe
xor
add
pop
or
insb
lods
pushf
xchg
adc
aas
push
xor
push
cmp
and
ljmp
mov
inc
cltd
dec
sub
inc
cmp
mov
dec
push
insl
push
loop
sub
sbb
jecxz
add
jne
or
push
xor
cmp
loopne
ss
mov
xorl
sub
or
cmp
mov
iret
ss
mov
adc
jmp
add
push
add
push
and
dec
pop
cmp
leave
jb
inc
cmp
enter
xchg
insb
cmp
mov
mov
push
cmp
dec
pop
push
mov
sbb
insb
les
xor
pop
cmp
repnz
test
aaa
mov
mov
mov
xchg
add
mov
push
and
outsl
jnp
xorps
pop
sbb
add
mov
and
outsl
pop
icebp
jo
pop
icebp
jmp
out
pop
or
inc
cmpsb
sub
fadd
inc
mov
cmp
cmc
bound
fs
push
incl
lods
dec
xor
sti
jo
loope
stc
clc
and
inc
xchg
inc
jbe
imul
jne
pop
adc
mov
bound
inc
lods
jnp
dec
xchg
pop
stc
xchg
cmp
ds
cmp
fbstp
jne
rolb
inc
lret
jle
movsl
or
pop
test
enter
test
sub
shr
sbb
xchg
mov
outsb
push
dec
imul
mov
addb
xchg
insb
dec
xchg
dec
aad
inc
aaa
push
cmp
push
lahf
jge
loopne
scas
lods
pop
adc
dec
adc
int
out
push
enter
int3
dec
sbb
in
jne
jecxz
or
je
cmp
lods
xor
sahf
push
sub
jecxz
push
cmp
in
or
notl
and
fstl
sub
push
pop
int
add
lret
shlb
mov
xlat
and
test
pop
enter
add
nop
in
add
sahf
add
pop
cmp
leave
push
sub
mov
sub
in
push
push
pop
mov
jmp
cmpsl
xor
test
mov
xor
mov
enter
and
pop
mov
divl
outsl
pop
lds
call
xor
fstpt
inc
jge
inc
pop
les
insl
lods
or
cmp
js
test
jmp
and
out
cmp
mov
mov
enter
inc
pop
cld
or
movsl
popa
stc
cmp
leave
lods
lds
cmp
iret
lds
sbb
in
push
mov
insl
frstor
rolb
push
insl
sub
xchg
rcl
int
mov
pop
in
jns
add
mov
cld
xchg
cmp
rcl
mov
std
xchg
mov
mov
mov
jae
gs
shl
pop
dec
bound
jbe
xchg
mov
inc
addl
out
xor
cmp
mov
add
cli
stos
mov
sahf
add
scas
aad
jecxz
out
sbb
dec
aad
pop
std
movsb
movsb
dec
push
arpl
insb
lods
cmp
inc
outsl
inc
mov
mov
xlat
rcr
and
out
jo
mov
lahf
xchg
inc
xor
jmp
jnp
mov
and
in
addr16
mov
in
ja
push
xchg
and
push
jp
or
pop
mov
aad
test
mov
or
and
aad
jge
mov
cmp
in
xchg
popf
and
subl
loope
imulb
cmp
or
jg
push
xor
or
and
push
in
inc
insb
daa
sahf
rorl
lds
lods
cmpsb
in
jae
loop
xchg
in
mov
pop
mov
mov
loope
imul
cmp
andb
mov
inc
mov
sub
xchg
aad
outsl
pushf
xchg
pop
push
xchg
loope
mov
mov
fcmovne
mov
inc
daa
icebp
dec
lea
push
push
pop
xor
imul
inc
xchg
stos
push
mov
test
mov
xchg
adc
or
shr
insl
mov
xchg
andb
jge
ss
push
push
mov
sub
mov
xchg
loope
rorl
mov
iret
lods
or
outsl
sbb
bound
xor
rol
adc
lahf
sbb
mov
lahf
push
pop
xchg
adc
fwait
adc
xor
pop
adc
xchg
arpl
mov
bound
lods
jb
adc
clc
and
js
or
push
fistps
dec
data16
imul
inc
xchg
int3
cmpl
in
imul
call
sahf
xchg
bound
fwait
xor
pop
loope
add
test
jge
rcl
push
push
fbstp
les
in
cmp
cmpb
fnsave
xor
xor
mov
mov
fiaddl
pop
jno
xchg
jmp
sub
push
push
sbb
pusha
jl
outsb
push
push
pop
add
sub
pushf
xlat
xor
mov
mov
imul
push
xchg
vcvtdq2ps
in
jmp
dec
push
andb
pop
mov
insb
pop
xchg
in
rolb
mov
lods
jbe
and
into
sub
leave
and
xor
pop
jle
xor
jp
or
mov
inc
sbb
jecxz
aad
les
jne
ret
jle
aas
cmp
into
add
add
xchg
cmp
insl
inc
cltd
jne
out
and
push
xchg
loop
pop
in
or
pop
out
jge
add
sbb
jg
loop
push
les
push
les
fstps
and
sbb
mov
sub
test
je
dec
call
mov
mov
and
mov
xchg
pop
sub
jbe
mov
shlb
fcomp
dec
or
or
lods
push
addr16
addl
adc
pop
mov
roll
xchg
xchg
sbb
adc
dec
mov
cltd
in
popf
cmpsb
xchg
ja
xchg
push
sti
push
inc
arpl
mov
push
aaa
sub
cmpsl
cs
mov
dec
test
or
std
sub
inc
inc
pop
mov
daa
push
addr16
call
gs
mov
into
mov
and
into
xor
jg
sub
fsubrl
and
mov
enter
cmp
cmpsb
sti
fdivr
scas
std
aam
xchg
call
icebp
xchg
icebp
aam
aam
or
div
mov
mov
add
aam
pop
loope
lods
adcl
mov
mov
cltd
fsubr
js
cmpsb
push
mov
mov
das
or
mov
mov
mov
ficoml
xlat
aas
mov
sub
xchg
xchg
sbb
jge
cmp
dec
testl
jno
xchg
xor
add
sub
mov
aad
roll
dec
dec
or
into
fs
lcall
xchg
push
sub
dec
pushf
std
jl,pn
iret
lds
push
cltd
push
mov
test
in
cltd
rcrl
stc
dec
jb
ljmp
jmp
mulb
ds
inc
pop
mov
in
movsl
sub
or
sub
test
mov
add
mov
inc
rclb
xchg
adc
dec
rclb
in
jge
sti
push
add
sbb
ss
push
inc
sti
push
inc
int
inc
insl
outsw
int3
push
jecxz
jl
mov
cmp
jp
sub
adc
and
adc
in
mov
cmp
bound
jo
popf
dec
fnstenv
mov
or
push
jne
jbe
push
and
lea
push
frstor
int3
das
mov
sahf
pop
in
in
aam
int
paddq
faddp
out
lods
mov
pusha
xor
mov
in
scas
dec
sbb
add
cmc
inc
adc
xor
add
lods
cli
call
jns
and
leave
jle,pn
and
movsb
xor
ror
mov
stc
push
jo
jae
and
jbe
xchg
cmpb
mov
notl
xchg
jb
cmp
push
fwait
lret
nop
scas
mov
cmc
into
or
ds
aaa
clc
pop
mov
scas
xchg
xchg
jbe
push
stos
sbb
xor
inc
lahf
and
pop
clc
mov
sbb
lahf
in
fs
inc
add
xchg
aad
add
fwait
jnp
popa
popa
pop
mov
prefetch
test
jle
mov
aaa
xor
xchg
mov
mov
adc
jg
xor
or
int3
sub
int
mov
xchg
fsubs
movl
in
scas
jmp
outsl
xchg
lds
inc
sub
loope
dec
fcomps
pop
jno
daa
inc
fs
and
inc
sbb
jle
push
gs
fdivrl
push
mov
iret
push
call
aam
add
movsb
call
cld
test
insb
test
fidivrl
xor
jp
scas
sub
or
insb
pop
lcall
pop
in
out
pop
cmp
sti
mov
imul
jb
repz
add
or
pushf
or
cmp
mov
pop
nop
stos
fs
sub
popl
bound
add
pop
nop
repz
or
mov
test
shll
push
or
xor
fsubr
jnp
cmp
jl
aad
jge
int3
jae
test
push
enter
xchg
and
sbb
ja
popa
out
sub
fldenv
fnstenv
enter
int3
adc
jo
jne
cmpsl
pop
sub
mov
and
adc
movsl
outsl
mov
cmpsl
mov
cmp
nop
xor
xchg
bound
loope
mov
aas
jae
adc
cmc
and
inc
aad
call
sub
into
jge
les
jmp
mov
add
jbe
jno
insb
das
dec
xchg
lret
lea
jnp
dec
jmp
das
insb
inc
hlt
sbbb
inc
mov
xor
adc
xor
mov
test
mov
shlb
pop
cmp
push
pop
add
nop
sahf
in
jno
cmpsb
dec
or
out
inc
dec
pop
repnz
xchg
inc
inc
stc
cmp
xchg
cmp
outsb
fwait
mov
fdivl
jo
xchg
mov
in
pop
outsb
jae
outsb
je
in
push
xor
rorb
aam
mov
loope
fildll
pop
in
inc
sbb
cmp
stc
xchg
dec
and
add
jae
and
movsb
aad
test
aam
negl
mov
add
sti
in
lock
mov
sub
ljmp
pop
mov
lods
add
jge
jae
pop
movsl
lock
js
lock
mov
adc
or
dec
cmp
xlat
inc
test
xchg
mov
and
and
sub
pop
sub
xchg
jnp
push
mov
in
push
out
jmp
cmp
fiadds
add
mov
inc
int
push
sbb
sbb
enter
imul
mov
repnz
call
add
aad
popa
fwait
loope
stos
pop
nop
mov
stc
pop
cmp
cltd
xorl
push
scas
addr16
sbb
test
add
cmp
mov
pusha
and
mov
movsb
js
and
addr16
fsubs
cmp
cmp
xchg
rolb
adc
outsl
pop
fcoml
or
sbb
cmpsl
xchg
jg,pt
sub
stos
ds
test
inc
xlat
or
xchg
dec
xchg
ljmp
int3
aad
add
and
out
xchg
xchg
rolb
aas
popf
xor
cld
out
add
ss
sahf
mov
xchg
jle
stos
scas
arpl
sub
mov
sbb
mov
mov
leave
mov
xchg
cmp
mov
xor
ret
xchg
adc
lea
in
out
sbb
add
push
jle
xchg
jmp
std
stc
sahf
insl
or
into
in
mov
sub
bound
lahf
in
add
enter
mov
out
clc
or
mov
mov
lahf
std
rorb
clc
xchg
imul
int
cltd
testb
std
clc
sti
inc
icebp
xor
or
int3
sbb
rcrl
leave
pop
dec
push
popa
sbb
aam
js
lahf
mov
xchg
xchg
hlt
fcoms
sti
jg
sbb
and
pop
fldenv
or
push
or
and
fisubrl
push
adc
cwtl
mov
push
cmp
lret
add
mov
sbbb
and
fcomps
and
mov
push
stc
xchg
loope
icebp
ljmp
les
lahf
cwtl
divl
push
and
stc
lods
jge
pusha
mov
cmpsb
add
repz
in
adc
js
in
sub
loope
cmp
pop
jmp
cmpb
or
sbb
adc
in
repnz
stos
out
aaa
lcall
daa
outsb
lods
sbb
cmp
in
inc
mov
push
cltd
decl
mov
packsswb
push
xlat
ljmp
adcb
rolb
lret
jl
jbe
xor
pop
loope
mov
xor
jbe
cli
xor
repnz
aaa
repz
push
fistps
push
xchg
mov
xchg
mov
adc
les
nop
aad
repnz
mov
xor
int
sub
cmp
jge
jo
call
dec
pop
and
push
scas
cltd
dec
push
adc
jno
xchg
add
mov
push
out
js
flds
pop
mov
ret
pop
mov
add
xor
push
push
jmp
mov
mov
call
aad
mov
daa
test
adc
jmp
cmpsb
push
mov
fdivp
fucomip
cmpsl
ret
inc
call
and
xchg
shll
fistl
inc
and
add
mov
cmpsb
negb
int
loopne
repz
xchg
out
insb
enter
adc
pushf
lods
push
popf
lret
mov
push
rcl
push
je
sar
push
jbe
pop
cltd
scas
aad
insb
sub
jl
jecxz
iret
imul
ds
push
pop
xor
add
cmpb
and
mov
out
jge
jg
adc
push
and
daa
fs
inc
loope
mov
push
fnstcw
testl
imul
fildll
pop
popf
add
push
subl
cmpsb
lods
push
imul
jnp
outsb
orl
rclb
pop
outsb
maskmovq
and
mov
cltd
or
insb
xor
push
lahf
jecxz
stos
in
push
into
fisttpl
dec
jmp
in
or
addl
xor
dec
aad
imul
add
test
fildl
test
bound
pop
faddp
and
ds
pusha
dec
add
pop
inc
mov
in
bound
js
cmp
add
adc
int
or
rcll
inc
cli
icebp
ss
imul
sbb
and
pop
in
inc
jne
pusha
jp
scas
dec
jecxz
mov
mov
popf
rclb
mov
adc
xor
mov
add
loop
push
sub
in
stos
dec
test
xchg
inc
enter
imulb
add
jecxz
mov
push
jae
xor
fimuls
mov
xor
lahf
into
pop
pop
pop
mov
xor
cmp
jo
mov
stc
roll
dec
jmp
notb
shlb
ja
pop
cmpsl
pop
push
out
mov
repnz
scas
out
in
push
sbb
lea
in
push
pop
lahf
xchg
or
in
or
and
jge
jb
mov
fistl
or
outsb
and
jp
repz
inc
lods
push
rolb
out
mov
and
int3
mov
and
jmp
addr16
lds
jl
in
test
mov
fdivrs
stos
push
mov
imul
push
sbb
stos
sahf
jle
mov
pop
incl
mov
add
push
pop
pop
dec
jnp
jmp
mov
mov
push
push
cmpl
xor
mov
sbb
popa
and
repnz
in
aaa
jmp
pop
mov
mov
js
aad
les
imull
addb
out
mov
push
and
out
sub
pop
adc
jns
sbb
push
pusha
jne
push
out
and
jecxz
loop
aam
lods
and
cli
dec
xchg
mov
xchg
inc
loop
cmp
sbb
es
lock
lods
or
sbb
sub
xor
mov
xor
aas
jp
fwait
cmp
fs
or
push
test
gs
int3
mov
ret
inc
adc
jle
mov
pushf
cli
shr
iret
mov
lods
jo
pop
xchg
nop
pop
js
pushw
cwtl
andl
jmp
test
imul
mov
sbb
fidivrl
mov
jmp
scas
xorl
aad
mov
mov
out
test
push
mov
push
fs
andl
mov
aaa
jg
bound
mov
add
call
lea
xchg
push
xchg
pop
mov
jae
jnp
jb
mov
imul
test
pusha
sub
sub
call
aad
rorl
clc
pop
xchg
jp
pop
mov
xor
sub
enter
mov
lcall
jo
int
ss
jecxz
or
rcrl
cmp
sub
fbstp
pop
dec
sub
mov
sub
scas
data16
cmp
fwait
rcrl
pop
popa
shll
jo
jg
push
ds
aam
cmc
sub
add
xlat
mov
insl
ljmp
jg
jae
lds
jno
xchg
cmpsl
xchg
aaa
mov
fildl
or
cltd
jo
test
or
addb
and
shlb
push
js
flds
pop
aaa
mov
enter
jge
out
xchg
add
push
bound
xchg
inc
lahf
das
cmp
cmp
and
xor
mov
sahf
and
cwtl
aas
popf
push
and
rcl
lret
stos
rolb
popf
daa
inc
mov
cmp
sbb
pop
pop
je
ret
out
push
xchg
adc
and
test
test
mov
imul
test
cld
and
repz
inc
int3
fisttpl
and
movsb
jo
sbb
push
cli
inc
lahf
sub
sub
adc
test
add
nop
push
int
addr16
addl
mov
popfw
int
and
xor
lahf
rcrb
inc
xchg
ljmp
mov
jns
push
call
xor
inc
mov
jo
dec
lret
mov
pop
out
rclb
test
fwait
hlt
sbb
scas
sbb
fdivr
cltd
adc
jo
outsb
test
jmp
gs
test
sbb
iret
jp
add
ja
mov
movsb
pavgb
cmpsl
call
jns
xlat
mov
test
out
shll
ret
aad
sbb
and
mov
push
pop
add
cmp
push
sbb
or
daa
cwtl
stos
xchg
jecxz
pop
leave
dec
testl
push
fsubrs
filds
test
loope
movsb
test
daa
push
pusha
mov
mov
orl
mov
fistpll
add
inc
les
sbb
and
lcall
les
and
and
xor
sbb
jb
dec
repnz
push
cwtl
dec
dec
and
in
cltd
push
cmp
adc
sbb
mov
repz
enter
sbb
inc
insb
popf
push
in
scas
rcrl
and
addr16
jg
in
dec
jo
push
xchg
out
and
mov
ret
lret
push
sub
xchg
fcoml
push
xchg
mov
lret
sub
xchg
sbb
mov
ss
xor
jecxz
jp
aas
sub
lds
sub
leave
out
sbb
scas
cmpsl
inc
xor
push
dec
and
dec
out
xlat
loopne
or
bound
ror
shll
pop
jmp
xchg
in
imul
aas
or
out
mov
pushf
cmp
xchg
mov
sarb
xor
mov
addr16
mov
cmp
lock
xchg
jnp
loop
imul
mov
pushf
inc
xchg
pop
adc
xchg
nop
xchg
mov
fldenv
sbb
adc
xchg
ret
cs
mov
dec
xchg
pop
sarb
push
pop
and
xor
jb
ftst
fdivrl
enter
popf
sbbb
loope
adc
nop
and
inc
push
mov
cltd
dec
and
js
lds
test
aaa
pushl
adc
ret
push
aad
add
xlat
sarl
xchg
sbb
adc
mov
pop
cs
enter
pop
jmp
aaa
mov
push
fsubr
repz
dec
xor
jae
mov
mov
mov
and
mov
sub
mov
leave
cmp
outsb
or
pusha
or
jp
jne
cmp
mov
pop
adc
cmc
sub
les
movsl
aam
test
mov
shll
sbb
mov
add
mov
xchg
fsubrs
cli
loope
cmp
lock
adc
inc
mov
int
andb
insb
jp
movsl
das
movsbl
sahf
and
cmp
mov
sbb
xchg
lret
mov
or
daa
sahf
jbe
xchg
fucomip
xlat
mov
inc
push
data16
or
fstps
std
adc
pop
adc
inc
mov
dec
jns
add
loopne
rorl
dec
lds
test
subb
jns
sub
sarb
lret
add
xlat
push
mov
add
sbb
fstpl
mov
adc
sarl
add
stos
mov
sub
sbbb
mov
ljmp
mov
mov
mov
push
popa
addr16
clc
xchg
add
leave
int3
push
gs
in
inc
pop
or
push
inc
sbb
mov
xchg
rol
das
jns
jmp
adc
fidivrs
fmuls
pop
add
fcomi
xor
push
and
inc
lret
popf
dec
push
sbb
loop
sbb
test
add
stc
pushf
lock
cmp
or
xchg
mov
sahf
jmp
mov
cmp
push
stos
adc
in
jnp
xchg
nop
test
sahf
inc
outsb
inc
je
mov
stos
push
movsb
cmpsl
pop
je
sbb
pop
lods
sbb
push
lds
pop
adc
dec
jbe
ss
add
dec
fstpt
and
mov
addr16
fidivl
popa
daa
add
les
ljmp
rcr
imul
push
shl
pop
fidivs
fstpt
sub
dec
arpl
pop
sub
mov
pop
and
ss
sub
scas
push
ss
fstpl
push
icebp
shlb
pushf
jo
ljmp
add
push
xor
jo
xchg
in
jae
mov
push
push
test
ret
lcall
out
inc
mov
jmp
dec
push
sub
gs
insb
imul
lds
fdiv
je
push
mov
push
mov
inc
cmp
and
sbb
ret
cmp
fisttpll
xor
imul
int3
jle
fbld
shlb
inc
mov
ljmp
mov
inc
push
aad
in
repnz
mov
out
loopne
or
mov
inc
and
push
or
sub
rcrl
andb
test
int
sbb
mov
scas
xor
mov
subl
leave
dec
rcrb
xor
cld
lods
popa
in
adc
les
into
inc
dec
call
mov
adc
jp
xchg
pop
scas
sub
lret
dec
xchg
std
cmpb
icebp
enter
dec
push
cmp
add
jbe
push
in
outsb
sub
fbstp
aaa
aad
pop
out
pop
stc
xlat
outsb
cwtl
sti
sarb
pop
adc
pusha
ds
pushf
cwtl
xor
fidivs
add
adc
push
jg
aas
call
mov
lods
jmp
rolb
ja
les
dec
pushf
mov
push
cmp
pop
xchg
xchg
ljmp
shrl
shrb
pop
xlat
negb
jno
dec
xchg
stos
mov
scas
aaa
push
add
pop
cltd
xor
pop
icebp
xor
jb
mov
sbb
shll
add
scas
int3
test
add
out
negb
test
add
std
mov
xchg
xchg
fisubs
lea
jne
mov
cmp
mov
mov
sbb
adc
mov
loopne
rcrl
movsl
popa
xor
pop
add
das
into
add
stc
mov
je
lret
test
pop
pop
sbb
xchg
enter
xchg
enter
mov
xlat
push
subl
xor
sub
dec
dec
roll
adc
mov
in
mov
inc
rcrb
jae
mov
pop
sti
sarb
jmp
pusha
mov
jecxz
mov
or
xchg
sti
icebp
rcl
dec
add
push
enter
stos
lret
or
mov
xchg
push
fsubr
sub
mov
hlt
mov
cmp
push
jge
dec
out
fsub
dec
mov
lahf
xchg
jg
dec
sahf
jns
mov
inc
fistpll
xchg
jmp
notl
pop
bnd
xor
loope,pt
cli
jle
xchg
sub
dec
pop
addr16
cs
shrb
out
push
or
lods
ret
lret
sub
mov
mov
cld
test
inc
dec
ljmp
daa
inc
int
repz
mov
sub
push
sub
push
stos
gs
sbb
sbb
jbe
xchg
jne
stos
aam
push
or
adc
cmp
mov
ficoms
clc
xchg
clc
jnp
pusha
sbbb
sbb
cld
xchg
movsl
inc
adc
sub
stos
clc
inc
mov
and
fisubs
fmull
xchg
jl
and
popa
dec
push
adc
or
xlat
imulb
adc
push
mov
adc
cltd
enter
icebp
or
lods
enter
out
fmuls
lret
movb
cmp
cmp
call
mov
pop
loop
sbb
sbbb
repnz
sub
xor
dec
jns
adc
and
enter
mov
nop
lds
add
lds
jns
pushf
sub
jo
gs
pop
std
xchg
and
adcb
jg
fld
sbb
xchg
iret
scas
jmp
test
mov
icebp
fcoms
jnp
xchg
shrl
mov
cmp
jns
lret
dec
imul
shr
jp
jae
in
pop
jge
gs
mov
lahf
mov
aad
aam
jp
inc
andl
sub
and
inc
and
inc
adc
push
pop
pop
jno
cmp
aaa
movb
xor
and
inc
popa
aaa
cltd
xlat
icebp
icebp
daa
sbb
and
mov
sub
mov
jmp
adc
xchg
dec
jg
push
cmp
daa
pop
pop
shll
sbb
xor
mov
shrb
rcrb
jmp
les
cs
shll
dec
ffree
push
xchg
bound
std
or
fstl
clc
sub
xchg
pop
or
dec
stos
ss
mov
sbb
test
mov
xlat
mov
or
pop
fsubl
adc
inc
pop
mov
aad
xor
mov
insb
jnp
push
mov
js
ja
out
negb
mov
rorl
jp
or
inc
movsl
push
inc
rcll
pop
aad
xor
fnsave
pushf
push
shlb
rclb
popa
loopne
aas
shrl
mov
insb
hlt
fwait
xchg
xchg
push
mov
icebp
jae
sbb
daa
stos
sub
and
leave
add
add
pop
enter
mov
fsts
lahf
mov
xchg
cmp
mov
cmpsb
dec
frstor
xor
addr16
fstps
subl
inc
or
icebp
mov
addr16
push
insl
in
lea
fidivs
mov
or
inc
fidivl
jmp
cmp
pop
dec
mov
pusha
decw
out
pop
sbb
imul
movsb
ja
enter
mov
loopne
fcomps
lock
sub
adc
sbb
adc
and
jp
rorb
inc
rclb
adc
adc
jne
shlb
insl
pusha
gs
das
and
gs
xchg
in
iret
int
adc
mov
or
sub
data16
push
pop
jnp
ret
gs
push
jnp
push
aad
and
xchg
inc
mov
adc
movsb
sub
hlt
imul
mov
adc
push
push
and
clc
adc
jnp
lods
ret
mov
cwtl
je
loopne
dec
or
rclb
lcall
adc
cltd
nop
shrb
sbb
xchg
xor
insl
xchg
int3
lock
sbb
adc
sub
fwait
or
enter
call
mov
out
cld
rclb
in
cmp
pop
in
jb
mov
lahf
mov
sub
fnsave
lret
arpl
jmp
pop
sub
mov
pop
sbb
jmp
out
mov
decl
sti
xor
mov
mov
ss
insl
loop
aaa
sti
dec
push
cmp
outsl
add
loopne
shrl
jnp
out
movsl
lret
dec
dec
imul
mov
stc
pshufw
adc
popf
cli
pop
pusha
dec
cmp
addr16
add
scas
in
or
jmp
call
cs
pop
lea
aaa
fimull
insl
sub
test
notl
mov
push
ds
and
cmpsl
loopne
add
or
pop
jecxz
data16
ficomps
lods
push
pusha
add
dec
mov
lods
arpl
lock
xchg
enter
cmpsl
and
clc
mov
and
inc
or
sahf
sbb
pop
lods
xor
xchg
jge
divb
dec
push
pop
mov
aas
imul
lea
sbb
cs
popl
sub
cmp
inc
sub
rcll
and
xchg
in
fsubs
jo
mov
cmp
mov
inc
popa
roll
pop
dec
sbb
movsb
arpl
xchg
sbb
daa
pop
and
and
jno
push
into
ljmp
sbb
mov
jge
lods
and
dec
jns
mov
mov
xlat
adc
fwait
in
jo
jb
setg
pop
insb
in
pop
fiadds
mov
mov
or
dec
adc
cmp
sbb
pop
in
dec
pusha
sub
xchg
iret
daa
cmp
jae
lds
sbb
scas
lods
adc
pop
xchg
outsb
fistl
mov
inc
js
ds
movsl
add
gs
subl
xchg
das
aam
jmp
popa
jmp
xchg
fnstenv
mov
into
ror
mov
shll
push
loope
lods
xchg
inc
sti
stos
push
je
dec
scas
mov
in
cmpsl
aas
jecxz
call
cmp
rcrl
stos
int
out
add
xor
icebp
fnstcw
jl
fisttpll
xchg
dec
hlt
xor
int3
int
loopne
aam
mov
dec
fisubrs
cmp
push
in
verw
das
lea
mov
fnstenv
shlb
sbb
adc
in
scas
out
int3
notl
xchg
push
repnz
outsb
cmp
test
add
cmp
jnp
and
xchg
mov
xor
addr16
pop
cmp
inc
mov
sbbl
mov
pusha
jg
add
jae
jae
sub
dec
push
and
dec
outsb
adc
movsl
sub
call
cmp
in
dec
jno
cmp
imul
cmp
sti
add
push
ss
cld
std
mov
loope
pusha
mov
fwait
jg
ljmp
jbe
lods
mov
cld
mov
xlat
lcall
dec
arpl
mov
jno
data16
xor
out
rol
dec
arpl
out
faddl
insb
aad
jns
movsl
adc
in
ficoms
jo
gs
in
jp
int3
push
cmpsl
int3
icebp
lods
sub
ds
and
sbb
imul
cmp
fmuls
dec
lock
jae
cld
lds
or
adc
mov
sub
push
push
js
int
inc
divl
adc
sub
sti
cmc
jbe
and
jge
lods
repnz
cmc
pop
lds
inc
cmpsb
inc
mov
fwait
pop
orl
mov
or
test
xor
jbe
jg
sub
add
jmp
int3
loop
or
lods
adc
mov
stos
scas
inc
test
decl
push
xor
add
push
fildl
int
push
and
scas
mov
rclb
pop
pop
push
sarb
repnz
cmpsb
and
sbb
jo
mov
adc
ret
mov
adc
inc
in
repz
mov
scas
aas
insb
adc
in
cmp
jbe
jo
add
lods
in
push
push
dec
adc
cmpsl
clc
pushf
lcall
pop
data16
js
insl
lcall
movsl
add
insb
mov
ljmp
inc
lods
push
mov
cltd
sarl
fsubp
sbb
mulw
adc
fwait
cmp
push
sbb
or
mov
sub
loope
int
inc
jbe
dec
int
xor
jno
lods
mov
or
je
pop
icebp
cmp
cmpsb
add
mov
mov
sub
adcl
push
addr16
in
xchg
addr16
jbe
mov
popa
adc
mov
dec
aad
gs
pop
repnz
enter
scas
mov
mov
add
adc
and
in
inc
inc
mov
jmp
dec
sbb
aam
or
insl
xchg
sub
dec
pop
sbb
adc
popf
in
jecxz
inc
popf
pop
dec
push
and
pop
mov
fsubl
andl
mov
cltd
insl
mov
icebp
mov
xlat
addr16
arpl
jl
and
jae
xor
push
jae
shlb
les
aas
pop
das
push
fidivrs
stos
rolb
call
adc
push
and
ficoms
nop
fldenv
sub
in
dec
sbb
loop
clc
xchg
jnp
mov
pop
mov
popa
pop
pop
rclb
or
cs
ds
clc
sub
jmp
xor
hlt
sub
dec
sub
rcrb
lcall
fisubrl
and
subb
xchg
push
lea
fwait
pusha
xlat
push
js
pop
inc
push
fmuls
jp
imul
mov
pop
andl
mov
repz
lret
mov
call
aad
inc
jne
inc
xchg
shrb
sub
xor
sbb
enter
cmp
arpl
mov
lock
add
adc
sarb
mov
mov
push
xor
xchg
sub
cmc
sbb
fdivr
mov
fnstcw
sahf
mov
and
aad
aad
push
stos
mov
push
pusha
and
push
mov
scas
aas
mov
jge
loopne
lret
fwait
rcrl
dec
ljmp
sti
jle
pop
lea
fwait
out
sbb
xor
pushf
inc
das
adc
xchg
in
cmp
mov
aas
aas
push
mov
xchg
sub
mov
sbb
inc
cli
xchg
decb
inc
fwait
mov
mov
out
cmp
lahf
mov
sub
sti
iret
in
js
mov
imul
aas
in
loop
leave
pop
mov
repnz
hlt
jl
dec
and
iret
std
xchg
cmp
cmp
sub
mov
cltd
mov
fwait
bnd
mov
dec
dec
jp
inc
sbb
lods
jge
or
or
add
enter
insb
int
int
outsl
je
sahf
loope
lahf
cltd
sub
sbb
jg
inc
call
test
fwait
dec
fs
or
inc
mov
adc
xchg
mov
repz
xlat
cmp
addr16
sbb
nop
jmp
jne
or
lods
push
cmp
mov
add
movsl
shlb
negl
imul
xor
addb
mov
push
mov
cwtl
mov
test
adc
out
dec
insb
es
lret
adc
orl
xor
out
test
addb
mov
mov
pop
inc
or
cltd
loop
in
clc
out
sub
add
loop
cmp
and
shll
lods
jg
or
sbb
xlat
jge
or
inc
dec
subb
in
push
and
push
sbb
sub
daa
sub
imul
rclb
cltd
dec
loop
jge
pop
in
mov
je
jbe
mov
sub
xlat
cmpsb
jge
lods
jge
xchg
jno
jmp
inc
aad
ljmp
ds
ss
mov
lahf
or
push
jns
jg
jnp
push
mov
fsubrs
nop
xchg
rorl
mov
jbe
lahf
dec
test
lcall
daa
cld
and
dec
push
pop
stc
push
popa
jno
inc
push
and
sbbl
shr
imul
push
adcl
push
enter
in
or
xchg
nop
jge
in
stc
xchg
mov
push
insl
adc
add
mov
xchg
xchg
subl
cmpsl
add
inc
push
stos
xchg
cs
loopne
push
fsubrp
xor
xor
jg
jnp
jne
stos
das
sub
aad
and
adc
push
sbb
dec
pextrw
jne
and
dec
pop
fisubl
sub
mov
icebp
lcall
shll
dec
jo
subl
popa
call
xchg
sub
pop
push
arpl
and
xor
xor
call
movsb
movd
cmp
out
sbb
lock
add
mov
aaa
sub
push
jp
dec
xchg
cmp
cmpl
jne
jge
jge
sbb
int3
sub
insl
ss
icebp
lret
or
cmpsl
movsl
mov
jl
xor
in
dec
inc
jge
pop
cli
mov
aad
fstps
mov
mov
mov
mov
sub
mov
and
fstps
arpl
das
xchg
push
enter
movsl
fadd
mov
sbb
sar
or
or
cmp
sub
ss
lahf
add
sub
loope
mov
push
incb
or
dec
jecxz
xchg
adc
mov
sub
out
jge
mov
mov
fisttpll
cmp
lods
addr16
jno
cltd
xchg
push
hlt
cmpsb
inc
jo
add
cmp
sub
cmp
dec
mov
out
xor
cmp
or
arpl
insb
ret
fwait
andl
outsl
jo
mov
test
cmpsl
cld
cwtl
lret
scas
iret
pop
mov
test
and
fnsave
pop
cmpsb
les
shrl
test
mov
and
ja
jg
fincstp
mov
cltd
mov
int3
fwait
inc
push
mov
mov
xchg
cmpsl
mov
mov
and
ror
roll
xchg
sbb
test
xor
inc
pop
xor
xor
add
stos
mov
es
dec
ret
dec
lahf
call
push
sbb
xchg
lock
ret
pushf
int
mov
aam
paddw
push
stc
pushf
cmp
jecxz
out
sub
ljmp
insb
jns
push
aam
enterw
sub
pop
pop
mov
and
lea
pushf
mov
rol
cmp
or
xchg
std
xchg
or
int
das
icebp
or
mov
into
loopne
cmp
fucom
imul
repnz
xchg
testb
pop
loop
scas
inc
jge
pop
push
inc
mov
jae
outsl
inc
int3
ss
cltd
loop
dec
adc
mov
out
pop
push
out
cmp
and
cmp
inc
out
addr16
mov
mov
or
xchg
inc
xor
test
imul
ret
mov
xchg
test
add
add
push
xchg
inc
das
outsl
filds
xchg
jmp
fsts
pop
sub
addr16
loop
push
mov
adc
cmp
or
shlb
enter
push
sbb
movsl
popf
push
lods
fprem
pop
pushf
jb
icebp
jecxz
dec
stc
cmc
xchg
mov
push
xchg
cmp
mov
mov
sbb
push
pop
in
pushf
xor
shll
sarb
int3
mov
cmp
ljmp
sbb
push
xchg
inc
outsb
xchg
leave
dec
mov
jmp
sti
loop
loope
mov
jbe
cmp
into
inc
icebp
lahf
adc
jnp
inc
sbb
push
xchg
inc
pop
in
mov
les
loop
pop
cmpsb
out
mov
lcall
jecxz
cmpsl
inc
movsl
enter
push
js
mov
fnsave
pop
aaa
getsec
loop
cmp
dec
jp
gs
inc
xchg
rclb
int3
push
mov
jne
or
jns
and
dec
call
mov
and
mov
sub
dec
mov
jae
push
arpl
push
sbb
fsubr
test
insl
sbb
and
call
idivl
xchg
das
mov
in
jp
popf
dec
add
inc
mov
fsubrs
jecxz
test
test
lods
idiv
cmp
cmp
sub
lock
aam
xchg
adc
mov
mov
mov
sbb
jae
pop
fcoml
cmp
mov
pop
dec
jbe
sbb
cmp
movsb
sub
scas
jge
adcb
and
in
outsb
cld
xor
lret
popa
or
out
jle
ljmp
mov
scas
int3
seto
jmp
inc
dec
inc
add
and
int
or
mov
enter
das
add
dec
xor
mov
push
loopne
and
dec
dec
xchg
and
jb
push
mov
fldt
sarb
lret
adc
fistpll
scas
cmpsl
das
adc
mov
push
fmull
sbb
and
cmc
test
paddsw
hlt
lret
pop
shlb
mov
pop
pop
aam
repnz
cld
mov
inc
out
push
daa
in
pop
aad
cmp
rorl
sahf
xchg
fcoml
mov
int3
sub
out
mov
add
shlb
repnz
mov
lret
and
mov
jmp
inc
andl
mov
aad
xchg
pop
cmovs
stc
test
mov
dec
xor
add
mov
push
add
cmp
mov
and
js
mov
dec
pop
xor
add
adc
jge
rorb
cmpsl
inc
shlb
jmp
scas
xor
or
sbb
pop
incl
rcl
jg
or
test
xchg
or
sub
sub
test
xlat
mov
dec
or
push
movsl
cmp
cli
pop
test
in
adc
mov
pop
sub
adc
xchg
push
mov
xor
sbb
adc
imul
nop
xchg
inc
xlat
mov
test
aaa
in
mov
fldt
rol
push
add
sub
nop
loope
dec
test
std
jg
add
test
popa
jae
or
dec
or
lret
lcall
and
mov
clc
fimull
push
push
clc
adc
inc
pop
cmp
adc
cs
sub
shll
jp
ja
and
fcoml
inc
jo
or
or
repnz
cs
adc
xchg
ror
shll
hlt
jmp
scas
stos
hlt
loop
fucompp
lods
pop
mov
adc
adc
and
test
xchg
pop
mov
in
rcrb
js
leave
xchg
pop
mov
pop
inc
in
repnz
nop
loopne
jge
jbe
mov
das
mov
xchg
cmpl
fs
nop
push
bound
das
inc
mov
sbb
popa
lret
add
aam
mov
or
pop
jmp
add
icebp
inc
add
or
shlb
jb
jb
sub
push
scas
jmp
or
or
aad
mov
inc
jg
outsb
cmpsb
mov
nop
sbb
mov
push
pop
push
dec
mulb
repnz
mov
and
add
std
xor
jecxz
lods
mov
gs
ljmp
push
cmp
cli
insl
mov
cli
popa
cmpsb
cmc
out
or
add
sbb
cmp
xchg
push
out
repz
adc
jp
and
or
jge
sub
and
xor
cmp
lahf
pop
iret
js
jg
inc
add
sbb
mov
mov
dec
notb
popa
lods
add
xlat
test
stos
adc
inc
pop
lret
mov
jl
adc
cs
mov
pop
dec
aas
adc
orl
adc
sbb
loopne
xchg
out
and
lahf
and
add
xchg
popa
int
mov
bnd
ss
arpl
push
lret
push
sbb
sbb
hlt
ret
in
int3
mov
enter
popa
xlat
xor
add
inc
xchg
or
xor
aas
in
outsl
idivl
lcall
out
xor
sub
push
sti
inc
adcb
xchg
mov
jo
pop
xchg
adc
jg
sbb
fisubrs
fwait
sub
dec
aad
push
movsl
lcall
lods
xchg
sbb
mov
lcall
xchg
pusha
je
mov
enter
push
sub
sub
jge
aad
jmp
cmc
mov
mov
pushf
mov
pop
in
dec
mov
movsb
test
push
mov
ds
ja
out
mov
adc
dec
mov
ficoml
xor
xchg
or
stos
xorb
ret
dec
dec
push
ds
mov
je
xchg
sbb
push
repnz
cmp
dec
pop
mov
cmp
or
movsl
sarb
jno
shll
inc
add
adc
pop
adc
push
mov
in
jne
and
fcoml
movmskps
xchg
outsb
dec
arpl
data16
cmp
je
dec
push
ds
xor
adc
popa
jmp
imul
cwtl
jb
ficomps
test
loop
lods
orb
xlat
flds
pop
jmp
arpl
push
xchg
adcb
mov
push
adc
or
int
gs
xor
push
imul
push
aaa
outsl
mov
pushf
loope
faddp
int3
int3
dec
mov
pop
adc
sbb
inc
scas
iret
xchg
add
cli
cmp
mov
aam
rcrb
jl
jmp
and
pop
inc
cmp
xorb
scas
fucomp
jns
mov
daa
xlat
push
add
push
cli
ja
lock
lds
fnstcw
dec
push
push
in
insl
lods
clc
xchg
add
arpl
mov
sub
push
sbb
inc
or
lahf
pop
jno
add
dec
or
stos
fadds
int3
or
fbstp
cmpsl
roll
sub
fcmovnu
shlb
pop
aad
jns
es
movsl
xchg
push
pop
cmp
mov
sbb
and
in
stos
jl
mov
nop
std
stc
sbb
push
adc
fiadds
dec
pop
movsl
je
out
orb
or
lahf
dec
xor
out
and
xchg
or
shlb
int
ja
lcall
scas
or
sub
movsl
scas
fs
mov
adc
pop
int
dec
mov
pusha
add
test
and
sbb
in
add
xchg
scas
scas
xchg
adc
mov
lds
mov
data16
sbb
in
dec
add
sbb
mov
mov
inc
je
aam
shrl
repz
stc
pop
xchg
sbb
insl
mov
arpl
inc
nop
or
pop
rcl
mov
push
add
cmp
pop
fiaddl
int
rclb
movsb
rclb
jl
jmp
sahf
loope
mov
insl
inc
sbb
imul
push
filds
cmp
rcrl
movsb
push
repz
mov
push
pusha
push
pop
or
fsts
push
xlat
cmp
fnsave
cmp
hlt
mov
clc
outsb
setb
dec
sub
jne
cmp
push
cmc
adc
mov
push
mov
adc
pushf
popa
push
loop
int
inc
sub
arpl
sub
pop
popa
lcall
mov
shll
jmp
sub
mov
mov
fs
sbb
repz
outsl
aas
aad
incl
mov
cwtl
dec
data16
and
push
ret
into
xchg
xor
ja
jns
jb
fimull
lret
xor
inc
movsb
flds
imul
mov
sarl
dec
fsts
andb
stos
pop
mov
push
and
movsl
or
mov
add
shlb
jl
nop
pop
xchg
ficoml
xor
cltd
fwait
mov
lret
jno
adc
or
cmp
int3
xor
nop
inc
gs
sbb
push
mov
xor
sbb
push
mov
mov
cmpsb
jl
test
ret
outsb
push
mov
mov
shrb
mov
dec
fsubrl
pop
mov
pop
enter
xchg
push
sahf
pop
xor
leave
pop
xchg
sbb
inc
push
cmp
dec
push
xchg
scas
xor
js
pop
jge
mov
cmp
push
je
out
iret
adc
mov
push
popf
ret
fists
addb
ljmp
out
and
aaa
or
mov
jg
lods
push
mov
test
mov
inc
imul
lcall
fstl
xor
xchg
shll
adc
mov
leave
ret
mov
stos
jle
cmp
cmp
add
pop
test
fcmovne
std
aam
jg
loopne
enter
ljmp
mov
dec
cmp
sub
push
inc
arpl
dec
mov
insb
cmp
cmp
lahf
popf
cmp
fwait
cmp
stos
adcb
pop
jno
jg
push
sbbl
in
stos
mov
popa
in
roll
mov
inc
push
popa
insb
lds
aam
sbb
loope
call
loope
jmp
movsl
xor
and
adc
fs
inc
lock
aam
in
add
xlat
adc
outsb
mov
ds
add
sub
sbb
in
lcall
call
jp
sbb
xchg
dec
cmp
push
adc
popa
out
lock
xorl
cmc
pop
cmp
pop
lret
insb
cmp
mov
mov
fcoms
in
jbe
gs
cmpb
dec
sbbl
sbb
ficoml
mov
cmpsb
cmp
or
sub
imul
sbb
in
insl
lret
sbb
mulb
insb
push
mov
lea
popf
adcb
xchg
mov
mov
movsl
sbb
mov
cmp
pushf
jo,pt
sahf
aad
mov
xchg
adc
mov
fs
mov
cmp
ljmp
lock
sbb
and
xor
cmp
cltd
or
fdivl
leave
mov
rclb
jbe
xchg
insb
xor
cmp
insl
mov
push
mov
sub
iret
mov
out
pop
cmpsl
sbb
aam
ds
pushf
popa
rcrb
aaa
in
sub
stos
fiadds
fistl
mov
loope
stc
dec
sub
int
das
ss
lea
jmp
pop
jb
rcll
push
mov
outsb
push
and
push
shl
xor
addr16
pushf
pop
push
xorl
popa
stc
dec
ds
mov
xchg
mov
popa
dec
mov
ret
bound
fstpt
addr16
addr16
pusha
rcrb
sub
push
xchg
mov
mov
fcompl
sub
nop
jg
inc
mov
js
iret
pushf
sub
gs
cmp
arpl
fildll
lea
mov
inc
xchg
movsl
mov
in
cmpsl
inc
repz
mov
clc
mov
pop
sub
ret
inc
imul
xchg
or
rcrb
jp
outsb
sbb
fdiv
xor
mov
dec
and
xor
pushf
mov
push
push
call
int3
cli
sbb
xchg
xchg
push
insl
sbb
lret
or
dec
xchg
les
xchg
outsl
mov
mov
push
pop
sbb
cli
mov
je
dec
add
es
mov
mov
inc
add
stc
loopne
imul
and
icebp
mov
adc
jnp
or
pop
xchg
inc
pop
push
incl
out
and
lods
mov
mov
dec
stos
adc
pop
std
negb
sti
jo
popa
js
pop
std
pop
cmp
jnp
adc
jp
mov
pop
fidivrl
mov
jbe
popf
jns
and
mov
out
daa
fnsave
cmp
or
xor
inc
mov
fildll
in
nop
mov
lods
and
jns
stos
pusha
daa
mov
jmp
mov
jno
sub
cltd
adc
cmp
cmpb
adc
sub
mov
test
clc
mov
push
rcrb
jecxz
lahf
je
std
imul
lcall
out
ret
decb
sbb
adc
dec
lahf
sbb
and
ja
dec
pop
mov
jge
mov
push
pusha
xchg
bound
mov
cmp
pusha
push
lods
rclb
lods
scas
mov
leave
jo
jmp
add
add
mov
popf
into
pop
cmpsb
cld
cmp
adc
loop
xchg
cwtl
inc
mov
push
and
pop
ljmp
push
xchg
jns
dec
enter
loope
adcl
loopne
ljmp
cltd
shr
jle
aaa
mov
mov
add
and
and
jo
inc
insl
loope
out
in
nop
outsl
sub
xchg
icebp
inc
mov
or
aam
jne
xor
aas
pop
or
lods
sbb
dec
cmp
pusha
sub
popf
mov
cmp
sub
insb
loopne
es
mov
add
aaa
pop
cmpsb
pusha
inc
push
mov
add
fldz
dec
pop
sarl
pop
test
adc
and
sbbl
jb
xor
ja
dec
out
jnp
mov
mov
sbb
inc
dec
sub
insb
mov
pop
data16
add
adcl
rcrl
lods
pop
das
loope
sbb
rorl
sbb
stos
and
sbb
into
adc
imul
dec
xor
inc
or
fstpt
push
or
dec
push
or
cmp
dec
push
cmp
adc
in
jp
sub
inc
add
xchg
rcll
cmpsl
xlat
lods
cmp
mov
sub
lds
sarl
mov
fisttps
mov
test
sbb
sbb
jno
daa
and
fistpll
mov
and
mov
fwait
pop
mov
mov
mov
cltd
push
jg
mov
movsb
jb
int
std
nop
dec
pop
add
push
inc
loopne
std
fs
mov
or
or
add
dec
jl
add
fidivs
add
in
inc
xchg
mov
push
es
jae
mov
bt
mov
sbb
mov
stc
and
pop
cmpl
out
maskmovq
divl
push
test
mov
arpl
cmpsl
sbb
push
sub
outsl
in
lea
sub
std
push
jne
bound
ds
mov
mov
mov
mov
jg
dec
mov
ljmp
cmp
rcr
xorl
and
xor
popa
or
cmp
xchg
jge
stos
mov
mov
dec
stos
xlat
or
stos
mov
popa
test
xchg
iret
outsb
or
daa
sbbb
mov
xor
mov
sbb
xor
add
dec
test
mov
shrl
pop
shl
adc
bound
adc
mov
and
xchg
and
ret
mov
xchg
orl
sbb
add
add
cmpsl
dec
pop
add
int3
jp
ljmp
mov
lds
xchg
and
test
mov
mov
cli
bound
jg
sbb
jnp
testb
and
dec
and
sbb
mov
and
iret
fcomip
cmp
sbb
jecxz
imul
scas
test
xchg
in
ret
rorl
scas
sub
scas
hlt
inc
dec
pop
jmp
test
shr
mov
lahf
mov
sub
push
jl
fmul
pushf
cmp
scas
ds
inc
pop
fnstcw
and
aaa
mov
mov
xchg
adc
cmpsb
or
xor
roll
in
sbb
fistl
mov
pop
adc
jo
dec
imul
jg
jecxz
nop
nop
adc
fldenv
pop
mov
xchg
iret
cmc
decb
sbb
aam
xchg
xchg
jmp
fisubrl
jp
ficoms
mov
lea
adc
stos
fwait
int3
push
lahf
lahf
arpl
sti
mov
sub
and
rcrb
frstor
test
lds
or
mov
jp
jnp
sbb
add
ds
adc
add
aam
xor
shrb
mov
push
sub
imul
dec
popfw
mov
enter
mov
daa
lds
mov
sbb
jg
int
sub
movsl
dec
lods
xor
mov
pop
xor
inc
xchg
inc
pop
mov
mov
pop
mov
jecxz
xlat
gs
lahf
pop
push
shl
sub
pop
divl
ret
jge
icebp
push
leave
jb
repz
mov
xchg
lcall
push
jo
push
sahf
test
push
push
inc
mov
in
mov
stc
imul
ljmp
movsl
pop
inc
xor
inc
push
scas
rcl
sbb
mov
dec
sbb
out
ret
stos
sbb
push
sahf
add
mov
das
pusha
popf
mov
sbb
cld
and
daa
filds
mov
cmp
cmp
pop
push
push
ret
mov
daa
inc
xor
ljmp
test
insb
sub
push
adcl
pop
push
sbb
push
rclb
xchg
shll
sbb
enter
lcall
adc
repz
cli
jb
sahf
sbb
mov
in
pop
adc
xchg
aas
jmp
icebp
mov
add
lock
xorb
jle
dec
leave
repz
or
xchg
push
push
addl
sbb
sub
das
shr
loop
mov
jbe
mov
pop
inc
pop
jecxz
push
and
push
push
decb
sub
dec
mov
iret
lcall
fisubs
inc
xor
sub
dec
xor
notl
pop
xor
push
pop
cwtl
das
imul
punpckldq
sahf
fldcw
jns
stos
pop
sub
insb
push
loope
jg
inc
das
sub
push
ja
adc
jmp
call
mov
pop
mov
mov
push
pop
adc
sub
push
jo
jb
scas
int
fistpll
push
mov
or
jbe
xchg
add
pusha
and
int
loopne
das
push
hlt
jnp
stos
out
iret
sub
inc
cmp
loope
jl
inc
loop
mov
bnd
scas
gs
dec
lods
rcl
in
enter
imul
pop
daa
mov
sub
sub
enter
subl
dec
ds
dec
std
inc
lods
and
ds
stos
das
idivl
dec
push
xchg
aam
cli
stc
stc
xchg
xor
or
fwait
pop
cmp
rcrl
pop
mov
lret
cmpb
es
sbb
adc
fdiv
dec
js
pop
cli
fldt
lods
mov
mov
pop
mov
call
fldt
fsubr
hlt
push
pop
and
decl
lods
shlb
push
testb
adc
cmp
sub
or
stc
adc
fwait
adc
xor
xchg
rorl
mov
sbb
inc
add
lea
push
xchg
sbb
test
xor
iret
std
fucomp
iret
push
pop
mov
jl
dec
cmpl
jge
cmp
dec
rolb
enter
xor
jmp
jae
lahf
dec
scas
pop
je
xchg
cs
ljmp
or
jb
mov
pushl
mov
cmpsl
adc
xchg
pop
ljmp
rolb
mov
cmp
js
sbb
mov
dec
inc
mov
ret
imul
repz
xor
jecxz
flds
mov
stos
mov
out
mov
andl
dec
dec
fdivl
inc
jp
fwait
mov
sbb
in
scas
dec
cmp
sub
sub
sarl
mov
sahf
test
cli
sub
mov
in
call
das
les
dec
in
mov
aam
pop
ljmp
inc
jno
jo
push
xor
in
sub
bound
add
mov
std
mov
lret
and
push
in
movsl
adc
dec
jns
lods
push
rcll
repz
lock
or
xor
and
rclb
dec
sar
mov
pop
mov
insl
scas
sbb
add
enter
and
pop
aam
dec
inc
int3
imull
enter
repz
add
arpl
jns
push
xorb
leave
sbb
or
lret
in
cmp
mov
subb
leave
andl
jmp
mov
xor
popf
int3
sarb
pop
in
cs
in
inc
inc
repnz
mov
call
push
in
mov
pop
fs
mov
int
sbb
mov
and
push
jns
lds
shlb
lea
rcrl
and
and
fs
test
mov
movsl
gs
xor
fwait
lahf
out
cli
pusha
leave
cltd
imul
icebp
popf
push
ss
jbe
scas
lods
xchg
mov
lahf
push
jl
inc
idiv
in
inc
cmp
xor
and
insb
push
in
cs
repnz
es
mov
mov
lods
cmpsl
xchg
cltd
inc
test
mov
jge
mov
in
dec
jecxz
adc
sub
jecxz
mov
or
pop
jbe
aam
enter
pop
add
mov
pushf
in
sub
xorl
jg
push
cmpsl
push
mov
cs
out
dec
fadds
push
aam
daa
js
and
sbbb
or
call
jg
popf
and
push
mov
pop
in
dec
in
imul
mov
jns
jg
outsb
pop
test
inc
xchg
jp
loopne
insb
int
mov
or
mov
mov
js
jno
push
mov
negl
xchg
mov
mov
insb
je
mov
mov
scas
mov
daa
rol
xlat
mov
sub
pop
fdivs
push
jne
xor
mov
dec
mov
adc
xor
push
stos
xchg
dec
imul
xchg
pop
icebp
pop
cmp
in
fs
cli
sbb
jo
popa
sub
popf
loope
cli
push
or
mov
sub
les
push
jp
inc
sarb
inc
je
xchg
mov
das
mov
call
pop
popa
mov
loopne
mov
adc
int
inc
jp
idivl
xor
test
imul
inc
or
xchg
add
ss
aad
and
popa
or
ja
xor
repnz
dec
mov
pop
pop
ret
call
xchg
aam
push
je
xchg
cli
dec
das
ja
push
test
mov
je
lea
push
dec
popf
or
mov
test
add
loopne
jne
push
xchg
xor
frstor
lock
sbb
sbb
or
jbe
and
mov
and
pop
mov
testb
jbe
pushf
jne
push
js
xchg
ret
mov
cli
and
push
out
and
mov
dec
push
jg
frstor
jo
stc
sub
mov
pop
ret
shll
aas
ds
push
popf
mov
jno
jl
xchg
aad
jle
adc
jecxz
dec
inc
and
dec
shl
loopne
lahf
pop
dec
push
fwait
insl
test
or
add
jo
out
xorl
ljmp
ljmp
stos
xchg
and
mov
pop
lcall
mov
pushf
arpl
sbb
leave
aam
cmpsb
ljmp
mulb
sub
clc
push
mov
pusha
ds
popa
jnp
xchg
outsb
inc
insb
xor
lahf
out
cmp
inc
xchg
xlat
shlb
adc
xor
jns
and
mov
xchg
lds
cmpsb
jae
movsb
dec
js
lds
and
adc
pop
rorl
cmc
jo
inc
mov
sbb
adc
add
inc
cmp
xchg
dec
test
sbb
cmpsl
mov
cmp
sbb
jg
lahf
ror
inc
cmpsb
aad
jno
or
fcoms
push
sti
sub
push
mov
lret
add
fwait
std
imul
bound
mov
mov
outsb
popa
adc
inc
loop
pop
pop
mov
aam
pop
cld
out
xchg
jle
jne
repnz
fdivs
xchg
mov
and
push
pop
test
mov
repz
cmp
xchg
jae
icebp
and
int
test
pop
mov
outsb
sbb
or
cmpsl
push
xchg
imul
jl
jns
or
sub
pop
in
lods
jle
out
pop
lcall
dec
sbb
cmp
mov
nop
insb
js
jl
dec
stc
stc
xor
mov
outsl
cwtl
jecxz
cmp
notl
mov
and
into
jmp
scas
sub
test
inc
pop
adc
fucomip
fs
mov
shl
mov
push
loop
cmp
dec
jg
aad
sbb
les
and
xor
ret
dec
jno
mov
mov
and
mov
pop
test
insb
addr16
lea
cwtl
mov
push
or
mov
jle
and
mov
pop
and
jo
das
insl
jmp
jnp
mov
mov
enter
fcmove
pop
dec
rclb
adc
orb
mov
dec
adc
int3
stc
or
mov
dec
add
mov
fwait
loop
movsb
inc
cmpsb
fwait
pusha
push
xchg
out
rorb
test
fadds
or
lcall
sbb
jg
hlt
in
leave
and
xor
andl
ljmp
mov
outsb
or
sahf
push
jnp
pop
add
stos
inc
dec
out
shlb
rcrb
popf
bound
sti
xchg
mov
mov
jmp
cmpsb
jo
or
dec
int
inc
push
mov
jae
push
fnstsw
pusha
jo
sti
dec
mov
das
add
movsb
dec
xchg
jle
xlat
enter
sub
rcl
psubsw
stos
and
jb
enter
xor
jg
xchg
popf
adc
cmp
cmpsl
cmp
push
sub
and
in
jae
or
loopne
ds
mov
shl
adc
mov
fldt
xor
xchg
cmp
xchg
mov
test
jae
gs
add
jge
mov
sbb
cmpsb
xor
pop
out
popf
mov
dec
pop
pushf
aaa
fs
mov
insl
mov
ss
bound
in
outsl
pop
lods
mulb
rcll
inc
mov
mov
cmp
iret
or
jmp
test
pusha
mov
stos
push
xchg
adc
fs
sub
and
mov
push
iret
in
xor
roll
cmp
and
pop
jnp
hlt
int3
inc
sbb
jp
mov
popf
es
fnstsw
jno
fildll
out
pop
pop
pop
or
cmpl
mov
lock
andb
mov
push
out
ret
inc
mov
or
fstpt
stos
mov
mov
xchg
dec
sahf
push
xor
jle
xorl
outsl
adc
test
dec
mov
sbb
popa
arpl
test
stc
dec
and
xor
rcrl
imul
popf
in
xor
test
pushf
mull
dec
push
lcall
jmp
push
mov
add
out
jns
sub
enter
mov
sbb
and
int3
pop
dec
jp
mov
div
loopne
dec
pop
test
inc
popf
js
jno
push
inc
test
sbb
cmp
pop
popa
jg
jecxz
and
pushf
dec
test
inc
js
sbb
xchg
loopne
push
lahf
and
mov
fidivrl
sbb
jl
daa
out
int
push
adc
add
ds
loopne
lret
jae
push
pop
cld
fcompl
shlb
add
test
push
fnstsw
ret
jmp
int
popf
mov
lret
jl
xlat
jmp
push
lds
sub
dec
mov
popf
std
adc
xor
cld
xor
sbb
or
push
jo
mov
adc
fwait
xchg
out
sub
xchg
jg
add
nop
mov
mov
push
ja
movsl
movsl
aas
mov
mov
stos
jecxz
push
cltd
inc
test
push
aam
fistl
cmp
bound
cmp
pop
mov
jmp
rol
fistpl
cli
sbb
sbb
je
jns
sahf
fcomps
leave
jle
rcl
or
fnsetpm(287
fisubrl
sub
dec
movsl
pusha
or
xor
push
repnz
push
cs
data16
push
xchg
loop
mov
and
sbb
sub
xchg
gs
fs
mov
push
add
mov
das
mov
xor
inc
mov
xchg
pop
jno
ficompl
add
mov
cmp
pop
cmpsl
fsts
mov
push
jnp
adc
shrb
adc
test
pop
frstor
xchg
ss
jmp
shrl
aas
sub
jp
dec
insl
insl
jp
lods
addr16
and
sub
ss
pop
mov
call
mov
adc
js
and
push
or
or
cmp
pop
test
out
int3
push
test
jle
test
push
inc
fstl
movsb
pop
dec
adc
fwait
test
xor
xchg
roll
add
or
loope
or
in
dec
xchg
imul
rep
add
push
mov
and
and
mov
pop
ss
sahf
stos
dec
loopw
and
into
sbb
rcrl
sbb
fldenv
adc
sbb
ja
jg
xchg
xchg
or
jbe
scas
scas
out
scas
and
shlb
fidivl
and
sub
enter
cld
mov
cmpsb
dec
outsl
sarw
cmp
icebp
add
push
aam
test
push
icebp
add
pminsw
sbb
pusha
sbb
jne
imul
lds
cmpsl
cs
aaa
dec
in
lret
jo
ficoml
in
lret
dec
push
inc
sbb
arpl
cwtl
sbb
xor
jnp
lods
in
dec
aaa
mov
imul
mov
jle
scas
push
fstp
sbbb
dec
push
ffreep
popa
out
cmp
mov
xchg
outsb
xchg
adc
cmp
sarb
aas
dec
dec
add
inc
aam
loop
pop
popa
push
mov
iret
adc
and
push
mov
inc
mov
dec
rolb
and
push
pop
enter
push
adc
adc
das
xor
lods
xchg
xor
stos
jne
inc
fs
jmp
insl
std
mov
push
jno
pop
adcl
adc
repnz
mov
out
bound
fdivrl
and
out
push
imul
adc
rorl
push
imul
int
and
bound
pop
cmp
pop
cmp
outsb
cmp
ja
push
cmp
imul
shll
fisubrl
xchg
outsb
xor
scas
xor
cmp
arpl
aas
mov
xor
push
fwait
cmp
ret
sub
pop
scas
cmp
out
mov
ret
cmpsl
movsl
xor
inc
and
test
aad
push
mov
lock
fwait
jbe
or
dec
and
push
cmp
ds
iret
adc
pop
shlb
loop
cmp
out
gs
pop
inc
mov
ret
cmc
push
jnp
pop
loop
data16
push
loopne
leave
cmpsl
sub
adcl
aas
push
dec
jp
dec
bnd
or
adc
loop
outsl
and
bound
xchg
nop
sub
mov
jns
push
cmp
adc
mov
mov
enter
in
rorb
shll
popa
fisttps
mov
mov
xor
mov
add
shlb
adc
jbe
iret
sahf
or
push
jo
shrb
iret
xlat
push
pushf
xchg
loopne
pop
lea
dec
mov
int3
aaa
inc
ret
test
mov
sub
mov
addb
xchg
out
xchg
jbe
mov
test
daa
out
frndint
int3
pop
dec
adc
aaa
mov
and
scas
int3
cmp
or
cwtl
and
jae
mov
add
sub
and
jp
das
in
test
cwtl
pop
inc
mov
mov
sbb
addr16
adc
les
push
mov
dec
xchg
rcll
push
sub
adc
and
in
add
xor
dec
es
mov
clc
aaa
popf
out
mov
pushf
jbe
cmp
push
sub
aas
or
lds
add
test
lret
and
icebp
lret
dec
lcall
out
addr16
pushf
fstpt
cmpl
fldenv
mov
out
xchg
int
icebp
mov
daa
cmpsb
mov
arpl
xor
mov
push
add
mov
bound
cmc
or
mov
hlt
mov
mov
popf
sbb
mov
and
add
addr16
shlb
add
and
mov
popa
pop
cmc
jg
icebp
inc
pop
xor
push
loopne
in
jae
outsb
lds
dec
leave
dec
cmpsb
ja
aas
mov
push
daa
and
pop
inc
loop
aam
and
pop
ds
pop
jae
xchg
push
repz
test
sub
pop
xorl
cmp
pop
cmovns
in
and
jo
mov
test
insb
movsl
lods
aas
aaa
xor
cmpl
int
ret
jo
xor
and
cld
aas
int
xorb
jne
bound
sbb
mov
or
movsl
imul
sub
xchg
mov
inc
cmpsb
mov
loope
rcl
mov
xchg
adc
lcall
and
jg
lahf
add
push
loop
loopne
ficompl
and
jg
jecxz
xchg
inc
cmp
fisubl
xor
xchg
push
sahf
les
ds
pushl
xchg
jmp
scas
rcrl
push
lcall
nop
xchg
xor
adc
dec
scas
mov
xchg
add
inc
push
dec
push
stc
xorb
lret
mov
sahf
jmp
mov
fcoms
hlt
xchg
ja
xor
js
sbb
mov
dec
repnz
cmp
leave
cmp
cmp
pusha
pop
mov
and
mov
dec
sbb
push
push
ror
rorl
mov
push
mov
rcll
cli
mov
in
jno
mov
test
jmp
into
mov
mov
out
loopne
dec
sub
dec
add
xchg
or
mov
ret
arpl
sbb
movsb
and
xchg
movsl
jo
and
pop
mov
sub
adc
xor
mov
int3
and
in
leave
cli
dec
mov
sbb
jecxz
fsub
xchg
dec
js
and
movsb
or
pop
subl
mov
fsubl
jmp
inc
stos
or
shrl
popa
notl
mov
aam
sub
mov
not
inc
mov
mov
xor
mov
pop
cmp
push
push
dec
add
sub
jae
fmul
jae
sub
int3
in
adc
add
sahf
or
sbb
aas
outsb
movsl
adc
int
jecxz
fdivp
imul
es
test
mov
push
mov
mov
sahf
jns
mov
pop
dec
sub
cmp
lcall
cwtl
jmp
rol
inc
out
adc
loopne
jl
aas
sahf
xchg
cmovle
xchg
sbbb
dec
insl
flds
popf
push
in
xor
adc
dec
jb
je
add
lret
mov
jge
xchg
jb
xlat
pop
push
imul
cmp
jne
test
mov
cmp
mov
add
mov
lds
sub
fs
pop
cmpsl
adc
test
pushf
test
movsl
data16
xchg
xor
call
sbb
cmp
dec
mov
test
pusha
stos
jp
cwtl
gs
xlat
adc
lods
js
insb
inc
loop
and
fidivrl
ud2
mov
mov
pop
xchg
push
push
sahf
mov
loopne
call
gs
pop
aaa
cmp
jl
sub
push
out
sub
notl
xlat
rclb
dec
les
mov
xchg
xor
sub
arpl
push
cmp
fidivrl
aas
ss
mov
aad
enter
dec
int3
stos
testl
adc
dec
sub
inc
test
cli
jo
fisubs
lods
aas
mov
push
dec
fldl
popa
jno
mov
pop
lods
daa
test
and
adc
daa
sub
mov
in
or
bound
jb
jno
bound
cs
ficompl
xor
aad
xchg
sbb
js
jle
hlt
push
jecxz
lods
sahf
mov
int
xchg
xchg
movsl
jnp
outsl
dec
bound
xchg
mov
repz
sub
xlat
in
mov
cwtl
mov
xchg
mov
imul
push
lods
outsl
into
xchg
movsb
xor
dec
mov
leave
xor
hlt
sti
roll
push
xor
adc
dec
hlt
sub
das
or
js
enter
sbb
sub
adc
js
sti
sub
lret
xor
pusha
lods
mov
add
aad
shll
mov
xor
adc
mov
dec
arpl
stos
pop
fisubs
sbb
scas
jne
in
imul
pop
insb
jp
xor
pushf
stos
jae
sub
getsec
inc
insb
loop,pn
andl
mov
std
sbb
ficoml
je
push
mov
pop
fmul
add
sahf
push
cld
jge
cmp
xlat
add
stos
pop
pop
mulb
adc
jecxz
xlat
sbb
mov
fcoml
inc
push
jnp
sub
adc
xlat
mov
in
fistpll
cmpsb
movaps
inc
cs
imul
inc
fldt
lea
jle
out
push
add
sub
mov
sbb
pop
call
imul
jp
fucom
cli
push
adc
cmpsb
sbb
cmpsl
pop
in
lods
jno
sbb
jae
call
jmp
push
adc
xchg
xlat
push
xchg
push
test
stos
cmp
lock
les
daa
jns
insb
es
and
mov
mov
es
arpl
fidivrl
sub
fiadds
push
cltd
enter
insl
or
inc
fdivrs
xchg
testl
outsb
mov
fistl
shlb
in
inc
inc
xchg
jne
push
outsb
or
jns
sbb
jl
mov
inc
cmpb
movsl
mov
clc
dec
cmp
lods
fisttpl
lods
mull
gs
shrl
pop
xchg
testb
fwait
fwait
in
xchg
outsb
mov
pop
pusha
jecxz
pushf
sbb
mov
push
adc
icebp
mov
push
das
stos
push
roll
cmp
mov
pop
mov
adc
aad
jbe
add
and
and
xchg
movsb
inc
pop
sub
mov
in
mov
jge
push
xchg
leave
int3
jbe
add
or
stc
les
adc
shrb
popa
pop
xchg
push
dec
lock
fidivrs
push
lahf
loope
mov
xchg
xchg
js
mov
bound
lea
jp
cmp
xchg
push
lea
xor
faddl
mov
push
sub
imul
cmp
rcrl
sub
add
pop
test
stos
cli
mov
icebp
test
daa
std
cmp
outsl
mov
leave
dec
inc
inc
and
sahf
pop
scas
lret
popa
ds
add
xchg
lods
xor
jecxz
push
int3
scas
push
push
lahf
roll
fmull
pop
ja
pop
push
lock
aam
andb
loope
inc
sbb
mov
int
sbb
mov
push
xchg
jle
or
jnp
lret
and
pushf
pop
mov
into
pop
and
push
xchg
xchg
push
int
sarl
negb
ret
int
mov
mov
adc
pushl
mov
std
jmp
scas
std
mov
hlt
and
sbb
push
mov
push
sub
leave
push
inc
cld
mov
in
shrl
pop
cltd
pop
std
mov
jbe
int3
inc
xchg
mov
mov
inc
cmp
mov
dec
pop
sub
je
repnz
cmp
adc
movsb
xchg
pop
sub
push
roll
cmpsb
xchg
loope
insb
aaa
cmpb
test
xor
js
adc
lea
or
scas
cmp
inc
bound
xchg
jo
adc
mov
in
shlb
sub
movsb
cmp
adc
insl
dec
jmp
mov
pop
mov
dec
adc
popf
insl
leave
mov
aaa
sahf
inc
pushf
xchg
jbe
inc
pop
cmp
jae
fs
dec
lahf
repz
lret
inc
push
or
fdivr
aaa
aaa
movsl
jbe
jmp
mov
and
mov
push
xor
adc
test
fnstcw
and
xchg
in
push
test
xchg
inc
gs
xchg
clc
xchg
mov
leave
imul
xchg
inc
orl
pop
mov
pop
out
rcr
jp
out
push
jo
lea
cli
shl
inc
cmp
or
in
dec
or
sub
push
gs
dec
jge
push
in
leave
pop
or
cmp
sub
fmuls
test
sub
mov
cld
popa
orl
sti
push
fs
mov
jae
or
dec
je
call
mov
dec
inc
pop
pusha
pop
sbb
insl
adc
xchg
dec
push
sbb
shl
popa
ljmp
xor
inc
mov
daa
and
push
push
mov
add
mov
mov
jmp
inc
pop
mov
mov
cmp
addr16
ds
dec
in
into
adc
add
shl
pop
out
jmp
push
enter
loopne
sub
sbb
mov
push
cltd
xchg
lock
stos
mov
ljmp
rcll
adc
xchg
jle
popf
bnd
scas
js
xchg
jno
xchg
or
add
cld
pop
adc
lds
outsb
es
into
pop
mov
and
scas
fisubl
imul
lods
outsb
or
idivl
cwtl
repz
in
inc
outsb
mov
sahf
mov
cld
mov
lods
mov
movsl
rcll
sub
shr
or
sub
ficoml
mov
mov
int
imul
test
pop
dec
into
sahf
cmp
out
sub
mov
mov
xchg
xor
mov
sbb
push
pop
movsl
and
dec
sub
push
int
mov
add
xchg
or
add
popf
push
xchg
lret
lock
push
ds
lock
add
jp
cmpsl
test
sbb
push
fcoml
dec
pop
xchg
cltd
and
cs
pusha
movsl
sub
mov
test
jb
pop
stc
mov
cmc
or
in
mov
xor
mov
jns
add
pop
mov
sti
push
loopne
sbb
int3
data16
push
cmc
adcb
mov
pop
in
pop
sub
fcmovbe
xor
gs
fstl
push
lahf
cwtl
cltd
sub
insb
and
les
nopl
add
hlt
popf
std
and
fcomps
or
mov
add
mov
xchg
out
outsb
xor
lods
incb
in
mov
mov
jns
popa
add
sbb
cmpsl
aas
lret
daa
dec
aaa
fisubl
lds
imul
sti
loop
shr
push
or
push
jmp
mov
sub
call
xlat
sub
xor
out
jp
xchg
hlt
or
mov
fbld
xor
jo
popf
push
ror
push
dec
insb
mov
sbb
insb
inc
outsb
ja,pt
inc
fwait
ret
hlt
js
push
nop
inc
sbb
loop
imul
push
sar
cwtl
sbb
lcall
jo
cmpsb
mov
jmp
pusha
xor
ds
push
outsl
xchg
jmp
and
mov
icebp
cmp
xor
nop
sub
push
push
mov
push
insl
loop
pop
jo
adc
fsubp
cmp
cli
sbb
push
sahf
xchg
adc
shll
pop
popl
movsb
inc
mov
ds
fdivrs
iret
int
dec
fstps
sbbl
xlat
aam
shll
in
nop
xor
int3
or
orb
adc
mov
andl
mov
mov
mov
sub
adc
jns
into
push
mov
adc
xchg
push
bnd
xlat
repz
lret
call
xchg
mov
mov
cmp
es
imul
pop
loop
fildl
sub
in
inc
lods
cmp
sbb
and
cs
sbb
pop
mov
xor
and
mov
jmp
xchg
jnp
mov
cmc
std
adc
or
pop
cmpsl
popa
out
sub
mov
test
sub
mov
out
ja
aad
pop
mov
or
loopne
adc
lret
orl
pop
cli
fidivrs
stc
popa
es
xor
adc
mov
xchg
sar
repz
jae
and
es
adc
lret
movsl
loope
pop
mov
lret
out
js
daa
push
xchg
and
adc
arpl
cwtl
jmp
mov
lea
mov
movsl
cmc
mov
and
lcall
repz
pop
pop
movsb
stc
das
pop
or
cltd
pop
inc
add
mov
aaa
and
jle
fcoml
xor
jae
into
pop
push
call
loope
pop
inc
cld
mov
and
inc
sbbl
and
je
fstpl
mov
push
pop
icebp
adc
mov
sbb
pop
orl
cmc
mov
dec
clc
push
inc
outsl
fsubr
repz
out
push
mov
cmp
jnp
mov
insl
lahf
adc
nop
aam
cmpl
add
cmp
xchg
in
pop
jge
dec
mov
fldenv
gs
sbb
out
mov
out
int
mov
xor
jnp
add
add
mov
pop
and
xlat
pop
popf
cmp
dec
pop
int
xchg
mov
sbb
or
fsubrl
jno
or
mov
pinsrw
ret
cmp
test
dec
pop
xor
pop
dec
mov
daa
jp
adc
sti
push
cmp
stc
push
mov
push
xor
add
mov
dec
lcall
xor
xchg
es
repz
sub
dec
xchg
dec
jbe
cwtl
sbb
and
pop
inc
out
ja
ljmp
jecxz
mov
sub
push
imul
push
jp
jns
addr16
jnp
data16
add
adc
lods
cmp
inc
ja
mov
popa
or
dec
mov
or
ja
or
mov
push
dec
sub
jb
dec
cltd
jno
pop
pop
or
sbb
inc
xor
add
adc
lods
pop
shll
mov
rcr
inc
pop
popa
js,pn
mov
sub
mov
xor
mov
and
sbb
subl
pop
imul
push
mov
pop
lds
xor
jnp
add
mov
add
in
outsl
mov
xchg
aad
divb
imul
ds
js
sahf
scas
outsl
mov
mov
xchg
insb
pop
cmp
cmpsl
jl
addr16
cmp
dec
mov
mov
lea
xchg
adc
pop
jae
mov
jmp
xchg
in
pop
loope
test
loopne
ds
ja
sahf
fcompl
xchg
add
ja
notb
dec
xchg
cmp
popa
hlt
clc
mov
loop
out
int
xchg
mov
cmp
push
pop
xor
fdiv
jb
xor
jmp
lret
mov
shr
sti
mov
mov
mov
pop
clc
test
pop
arpl
jo
bound
fstpt
mov
xchg
call
adc
into
mov
add
cmp
push
cmc
push
xchg
das
insl
insb
insb
pop
jg
inc
xchg
lds
mov
pusha
aad
cs
xor
shll
imul
xor
and
popl
out
pop
andl
lea
xlat
cmp
jo
xchg
sbb
int
push
aam
test
jne
and
loop
sbbb
inc
or
and
push
mov
mov
pop
jecxz
test
les
inc
loope
ljmp
sub
sarl
push
int
ja
inc
es
test
stc
jno
loopne
int3
std
cmpsl
shll
jbe
dec
loope
cmp
ja
outsl
in
mov
adc
dec
dec
pop
out
sbb
insl
shrl
sbb
and
data16
stc
push
sbb
bound
outsl
arpl
push
cmp
cli
lcall
aad
mov
orb
outsb
mov
jae
in
fisubs
in
outsl
jo
dec
and
js
add
aaa
in
push
xor
and
cltd
int3
aaa
dec
lret
xchg
stc
mov
repz
gs
xchg
adc
pusha
adc
aad
cmpsl
sti
jge
nop
push
xchg
push
adc
sub
aaa
mov
push
push
xor
lahf
lret
mov
jle
push
or
call
push
hlt
push
ret
dec
fcompl
sbb
and
mov
or
arpl
mov
repz
sub
cmp
ret
mov
push
add
jge
mov
je
push
cmp
cmpsl
cmpl
out
mov
fstpl
bound
leave
das
pop
loopnew
sub
or
shrl
daa
push
lods
xchg
pop
and
insl
movsb
ja
dec
test
shll
add
enter
fstp
test
pop
push
push
xchg
dec
sbb
movsl
cmp
pop
popf
xlat
cwtl
mov
mov
adcl
or
inc
inc
or
in
cmp
daa
mov
inc
xchg
jns
mov
sti
testb
and
pop
add
dec
in
insl
movswl
xor
subl
sbb
jb
fwait
cli
pop
sub
pop
aad
jne
rcll
cli
add
jb
arpl
xor
jmp
jno
mov
ljmp
mov
dec
fdiv
inc
scas
jnp
mov
pusha
jne
test
or
in
add
addr16
loopne
add
mov
xor
jne
dec
lds
dec
pushf
loopne,pt
ljmp
and
es
data16
adcb
and
shll
loopne
popf
fcoml
mov
and
je
sub
out
lcall
jge
and
inc
jb
push
aas
adc
out
jnp
shr
jo
jmp
daa
call
inc
sbb
push
sbbl
fidivrs
sahf
push
fidivrs
call
daa
dec
pop
ljmp
addl
dec
xchg
cmp
sbb
jo
out
jnp
jns
pcmpeqw
fwait
jecxz
xchg
jnp
jnp
addr16
pop
hlt
ds
scas
and
cmp
aas
jmp
sub
sbbl
cmpl
outsl
aaa
xchg
jo
icebp
fwait
gs
mov
lock
js
notl
in
jge
push
inc
push
aam
hlt
and
xchg
sbb
sub
fs
cmp
push
rcr
mov
les
or
cld
mov
push
and
push
adc
adcl
cmp
pop
insb
imul
inc
into
pop
pop
test
leave
xor
insl
inc
sbb
jmp
push
movsb
aam
dec
and
sbb
and
pusha
mov
xor
in
dec
scas
lahf
mov
pop
push
std
mov
adc
mov
insl
sbb
outsl
adc
push
adc
mov
sub
shll
mov
pop
aas
fwait
ljmp
mov
xor
push
movsb
mov
scas
sbb
int3
cmp
in
dec
arpl
jne
mov
popa
jnp
and
rcr
xchg
lahf
mov
cmpsb
add
jmp
sub
push
push
orb
bound
mov
or
roll
rol
sbb
push
pusha
lahf
cmp
les
pop
add
pop
sub
jno
aaa
imul
sbb
sbb
inc
sub
and
sub
in
jecxz
imul
nop
lock
mov
and
jle
and
into
inc
cs
and
push
mov
mov
push
daa
jae
out
cli
jnp
notl
dec
jne
cmp
or
add
daa
iret
dec
push
sub
mov
ret
and
xchg
adcb
xlat
into
mov
xor
or
popf
inc
adc
imul
in
jmp
sbb
adc
int3
mov
bound
cmp
loope
rorl
movsl
mov
mov
mov
jle
ftst
xor
test
pop
or
inc
jbe
mov
cmc
inc
imul
dec
dec
sub
nop
push
push
jp
nop
and
pop
jno
xor
pop
inc
sub
pop
out
lahf
loopne
inc
pop
lahf
cmp
cmp
inc
dec
and
xor
loope
repnz
push
cwtl
add
jge
or
inc
ds
je
stos
cltd
insb
cs
jb
jecxz
out
adc
jle,pn
ljmp
out
dec
iret
repz
mov
xor
jnp
cmp
dec
aam
loop
or
dec
stc
mov
pop
mul
mov
cmp
mov
inc
mov
nop
jg
sarl
aam
fildl
inc
mov
add
fwait
in
aaa
roll
subl
add
mov
pop
mov
cmp
sub
jno
dec
cld
inc
insl
lret
sbb
int
fdivs
push
and
jne
in
cmp
fwait
pop
aaa
inc
es
mov
adc
sub
iret
mov
cmp
rcrl
loop
add
in
cmp
cs
mov
jae
xchg
jb
adc
dec
xchg
insb
pop
dec
pop
stos
aaa
ljmp
jo
pop
incl
mov
fwait
or
sub
xor
sti
push
jo
pop
pushf
jge
sahf
mov
add
daa
mov
loope
sbb
popf
mov
jge
movsb
mov
cmpsb
sbb
hlt
sub
dec
pop
popf
addr16
xchg
rcll
stc
xchg
jo
mov
in
xchg
mov
push
sti
bound
dec
jne
pop
cmpb
out
addr16
fldenv
push
sbb
add
push
dec
sub
ljmp
flds
pop
pop
fwait
dec
popf
sahf
cltd
test
mov
outsl
xor
inc
dec
inc
mov
adc
add
inc
lahf
inc
xchg
pop
fucomip
pop
inc
fistl
push
lahf
lds
mov
daa
in
loope
jge
dec
mov
cmp
inc
jns
std
pop
sahf
and
aad
xor
cmp
cli
pusha
pop
fxtract
mov
mov
je
cmp
inc
jno
cmp
pusha
rorl
dec
cwtl
popf
aad
lods
adc
sub
fadds
loop
lods
sti
insl
push
in
gs
or
arpl
push
in
jnp
mov
jle
in
lods
mov
rorl
shlb
in
xchg
sbb
pop
add
test
cmp
lret
inc
daa
imul
inc
das
in
and
popf
gs
xchg
daa
adc
dec
or
xchg
push
xchg
sub
nop
popa
xchg
adc
xchg
sbb
hlt
xchg
in
rclb
push
mov
or
push
jno
cld
cmpb
sbb
jne
sahf
jne
std
cmp
mov
push
popf
test
pushf
andl
sbb
lret
bound
addl
xchg
sahf
lret
out
test
dec
adc
push
mov
dec
inc
cwtl
mov
adc
push
aas
movsl
xor
movsl
je
lds
leave
ja
loop
insb
inc
fnstenv
and
lcall
or
dec
cmpsl
sub
pushf
ljmp
or
nop
add
mov
test
aam
icebp
jp
jg
ret
es
fidivl
out
leave
bound
andl
in
adc
jge
test
js
js
jo
jl
stos
inc
xor
in
or
movsb
mov
rorb
ljmp
add
and
mov
ret
mov
sarl
insb
cmp
add
mov
xor
pop
call
gs
xchg
repz
inc
in
out
adc
mov
inc
out
stos
adc
pop
je
mov
xor
daa
in
or
fmul
cmp
xchg
xor
repz
push
fcom
lods
in
test
sti
xor
and
xchg
clc
sub
xor
push
in
test
fcmovne
loop
dec
inc
push
add
fidivrl
fwait
testl
mov
adc
adc
fsubl
subl
fists
cmp
pop
jecxz
sub
sbb
out
cwtl
pushf
pushf
mov
jmp
sbb
outsb
or
sbb
imul
pop
das
lret
in
ret
or
andb
insb
xchg
out
dec
out
dec
fimuls
sarl
orl
out
xchg
inc
test
cmp
mov
stc
lret
ret
mov
cs
clc
jns
loop
leave
test
jno
xchg
out
rcr
jne
cmc
fcmovbe
lods
and
insl
addl
adc
xor
cmc
repz
imul
enter
sbb
cmp
test
stos
mov
mov
sub
pop
shl
adc
mov
mov
andl
push
mov
jbe
fists
std
and
popf
cmp
in
mov
xchg
pop
pop
mov
xor
imul
mov
jge
stc
int3
xor
in
lds
add
pop
mov
cli
mov
jle
orl
lahf
cmp
push
push
xor
pusha
js
jbe
xor
lods
add
push
and
cmp
loope
pushf
dec
ja
cmp
mov
jl
or
adc
dec
push
add
fiadds
jbe
test
and
xchg
faddl
adc
jno
inc
xchg
adc
rolb
cmpsl
mov
or
sbb
dec
into
clc
or
inc
vsqrtsd
jbe
mov
xchg
loopne
jbe
inc
inc
and
je
add
add
aad
out
gs
loope
cmp
jl
cmp
and
lea
pop
push
jnp
jnp
jno
sbb
jbe
or
sbbl
and
xchg
lret
cmp
mov
xor
es
adc
dec
jmp
pop
or
mov
inc
dec
pop
popf
mov
mov
jae
mov
mov
pop
pop
pop
sbb
testb
call
pop
mov
icebp
call
insb
add
fwait
mov
sub
les
or
aas
mov
add
dec
lods
pop
stc
inc
push
aad
fcmovne
mov
sbb
jmp
imul
xor
in
ja
inc
or
movsl
mov
cmp
jmp
jae
jg
fneni(8087
mov
fstpt
push
in
sub
sbb
lds
sbb
push
xor
add
mov
xchg
lret
cmp
daa
jg
cmp
xor
pop
sub
pop
and
out
xchg
aam
adc
xchg
dec
inc
ss
push
push
fidivl
fwait
shll
xor
lods
int3
gs
lahf
jns
adc
dec
int
and
push
pusha
aad
cmc
popa
fbld
outsl
sub
push
pop
sub
push
sbb
xchg
ficomps
push
dec
test
sub
push
inc
loopnew
and
mov
popa
sub
sbb
leave
inc
ret
push
popa
and
xchg
sub
add
jge
jmp
mov
xor
ret
cmp
sub
outsl
mov
mov
sub
stc
inc
push
mov
pop
add
inc
pop
jle
mov
sub
inc
jno
sti
lcall
or
or
test
repz
mov
dec
lods
cmpb
lds
pop
arpl
scas
mov
cmp
inc
push
push
lret
dec
cmpsl
jp
inc
inc
inc
aam
lock
xchg
mov
and
ja
jl
stc
ds
mov
fiadds
pusha
shlb
push
push
mov
vucomisd
dec
scas
test
xchg
shlb
sub
test
inc
call
xchg
ljmp
lea
xor
mov
push
into
cwtl
nop
or
sarb
pop
pop
pop
subb
test
inc
sahf
aad
int
lcall
subl
pop
xchg
jnp
stos
test
loope
out
xchg
mov
push
xchg
jmp
fnstenv
pop
pop
movsl
sti
sub
mov
jne
icebp
lcall
add
mov
dec
fnstenv
outsb
mov
pusha
add
xchg
nop
adc
mov
js
repnz
mov
and
xchg
dec
mov
cmp
outsl
push
xchg
xchg
daa
cltd
mov
leave
sbb
std
jecxz
sbb
stos
mov
push
repz
aaa
pop
pop
add
xchg
push
aaa
and
xor
or
adc
push
jl
push
pusha
out
popf
or
popa
inc
fcomps
jbe
adc
adc
mov
movsl
cmp
mov
in
gs
jecxz
arpl
push
sbb
in
stc
dec
mov
shrb
das
lock
sub
sub
popl
rcrl
xlat
inc
popf
pop
fistpll
jg
xor
push
inc
xlat
jo
push
lcall
mov
test
add
push
int
sub
mov
cmp
push
mov
add
popf
fs
loop
repnz
insb
lret
cmpsl
xchg
jle
movsb
pop
pusha
mov
testw
es
popa
adc
mov
mov
push
movsl
and
pop
test
in
lods
and
in
mov
cmp
mov
out
pop
mov
ss
sbb
add
pop
nop
imul
clc
mov
mov
inc
mov
call
jge
sub
push
xor
xchg
sbb
repnz
movl
dec
cmp
call
psubb
pop
jae
xchg
les
daa
mov
movsl
and
fcoms
xchg
ret
inc
sarl
inc
lds
inc
aaa
shl
push
insb
daa
inc
jp
daa
jo
or
cmpsb
add
adc
insl
loop
mov
or
jo
inc
insl
out
cmp
cmpsl
das
adc
push
jmp
nop
icebp
loop
jle
test
push
das
inc
cmc
and
lahf
mov
jmp
adcb
in
jns
lds
les
and
dec
sbbb
out
xlat
cmc
icebp
movsl
orb
add
stos
insb
mov
dec
cltd
or
xorl
sub
bound
mov
mov
cltd
add
clc
fmulp
in
xor
rcll
mov
stos
add
sbb
xchg
xor
gs
nop
pusha
mov
ds
dec
loopne
xchg
arpl
mov
push
les
pop
enter
leave
ja
mov
xor
jne
sbb
lds
fwait
arpl
jp
dec
inc
int
xor
xchg
in
fwait
lods
dec
sbb
into
jg
lods
mov
pop
and
dec
xorb
push
or
fsubrs
sub
push
loope
jno
aaa
test
xchg
mov
add
mov
add
outsl
pop
ss
jno
adcl
xchg
lahf
repz
mov
cmp
add
xchg
rdmsr
nop
adc
stos
pop
xor
sbb
push
cmp
cmp
ficompl
xchg
jecxz
loop
in
add
aaa
cli
or
dec
mov
fiaddl
outsl
in
or
mov
xchg
psubusb
pushl
mov
adc
insl
je
lods
fldcw
imul
in
scas
pop
aad
ljmp
imul
adc
pop
pop
sub
int3
jmp
cmc
pop
mov
mov
in
adc
mov
inc
aas
int3
insl
inc
mov
hlt
dec
roll
jns
xchg
add
mov
push
or
test
addl
int3
loopne
push
or
lcall
lret
lods
div
xchg
xor
push
je
add
fwait
lock
sbb
xchg
and
outsl
stos
pop
sub
adcl
stc
pop
jmp
mov
mov
xor
js
stos
or
or
mov
mov
or
ljmp
xchg
lods
mov
and
push
test
scas
or
insl
imul
sbbl
inc
adc
fistpll
bound
loopne
or
fwait
cmp
andb
jb
jg
cmp
inc
scas
sbb
outsb
cwtl
outsb
scas
inc
aad
lahf
imul
into
cmp
fistl
cld
cmpsl
mov
push
rcpps
mov
jl
test
movsl
pop
repz
cld
xchg
std
popf
aas
repz
in
mov
push
lock
sbb
lcall
mov
and
dec
pushf
sti
sub
imul
xchg
test
jmp
std
fwait
adc
pop
mov
ljmp
cmp
hlt
outsl
xchg
jo
inc
cmp
jae
xchg
sub
push
xor
and
repz
adc
in
loope
rcrl
cmc
sahf
fsubrl
in
lds
xchg
das
push
xchg
adc
inc
adc
sahf
icebp
jmp
fmull
push
aam
outsl
xchg
andb
and
cmp
pop
imul
adc
stc
sub
jl
sub
in
fcoml
cmp
jb
ss
add
adc
aam
ret
xchg
push
ljmp
outsl
inc
idiv
or
xor
and
cmp
pop
into
mov
aad
jge
mov
aam
xchg
xor
daa
shrb
ja
or
sbb
daa
dec
sti
jg
mov
loopne
adcb
xor
std
loop
cmp
sub
mov
lock
xchg
insb
xchg
outsl
and
lahf
adc
mov
aas
or
lahf
arpl
jo
pop
lret
ret
and
js
mov
into
ficoml
stos
xor
es
jle
dec
and
jmp
test
not
sub
jmp
mov
adc
mov
aad
inc
fcompl
push
sbb
add
mov
push
jno
xlat
mov
test
push
jecxz
sbb
sbb
adc
push
outsb
popa
movsb
addr16
lret
xor
mov
shlb
testl
push
dec
mov
leave
es
pop
arpl
jne
add
cmp
in
repnz
fists
aas
sbb
test
adc
test
cld
mov
insb
imul
pop
mov
adcb
adc
aas
jno
incl
mov
adc
addr16
sbb
push
and
and
adc
push
daa
lods
dec
jno
push
imul
add
stos
test
sub
dec
js
add
test
push
les
adc
mov
pop
ds
xor
add
sbb
in
xor
mov
lods
dec
in
mov
and
add
insb
stc
cltd
scas
mov
repz
lea
movsl
inc
idivb
insl
lods
mov
adc
jnp
js
out
sbb
push
mov
les
mull
scas
ret
mov
push
lret
popl
in
lret
ds
jmp
pop
mov
stos
jl,pn
or
out
push
jb
mov
iret
mov
jmp
xor
inc
es
xchg
lods
in
pop
cmp
ja
pop
fs
mov
jo,pn
test
lea
dec
mov
mov
jg
out
cmp
push
adc
sbb
mov
mov
daa
and
aad
daa
mov
inc
and
sbb
and
jbe
pop
inc
inc
jp
xchg
dec
int
dec
test
fsubrl
ljmp
movsb
insl
popf
in
in
mov
jg
push
mov
sbb
push
jge
scas
das
xchg
fcompl
pop
repnz
mov
mov
inc
test
jge
jge
pop
das
addb
jno
cmp
mov
lahf
std
jae
test
dec
cmpsl
sub
fdivs
repz
shrl
jmp
out
lds
sbb
loope
out
xor
cltd
jbe
xchg
xchg
imul
pop
movsl
push
out
ja
jo
in
lret
into
jb
push
cmp
gs
inc
outsb
sbb
js
push
mov
mov
adc
call
or
outsl
sbb
shrl
or
lods
insb
jp
xlat
mov
jmp
fwait
cmp
out
xchg
pop
sub
push
jnp
subb
jg
sahf
int
push
cmp
sub
mov
mov
mov
and
insl
fwait
inc
aad
inc
ljmp
hlt
push
jle
ja
xchg
push
sbb
cmp
pop
jbe
push
decb
xor
jno
cltd
mov
insl
call
push
jmp
in
lods
jecxz
adc
or
movsl
outsl
cmp
lahf
adc
jnp
nop
mov
xor
shll
movsl
sarl
loope
add
jbe
sub
adc
push
add
divl
mov
xchg
or
push
mov
xchg
xor
sbb
sti
into
jecxz
cmp
test
stc
sahf
cmp
and
test
out
xchg
push
push
std
in
and
mov
push
cmp
mov
addr16
into
fadd
gs
or
and
cli
aad
add
lret
stos
inc
push
jg
xchg
xchg
loop
mov
psubusw
loopne
adc
jl
fnstenv
inc
mov
std
sbb
xchg
jg
cmp
lahf
adc
mov
add
test
dec
and
cld
ret
into
sbbl
ja
add
push
scas
enter
xchg
sbb
mov
xor
mov
rcll
int3
arpl
pusha
mov
xchg
es
stos
int
fcomps
xor
lret
mov
xchg
add
sbb
in
iret
xlat
mov
je
xchg
sar
out
lret
adcl
call
jp
stos
dec
push
ror
cmpsb
incb
mov
dec
mov
lock
aam
cs
ljmp
jnp
push
lahf
push
hlt
dec
add
xorb
push
cmp
loop
pusha
std
and
xor
pop
int
adc
jg
mov
jecxz
out
addr16
mov
xor
addr16
in
into
xchg
daa
mov
pop
in
loope
fidivl
mov
sahf
test
push
lea
out
int
lret
movsb
xor
xor
mov
lods
cli
test
mov
pop
adc
sbb
in
pop
sub
lods
out
dec
push
pushf
pop
scas
mov
sub
test
push
enter
jle
add
mov
xchg
mov
mov
inc
outsl
mov
lds
inc
jmpw
mov
aas
arpl
out
sub
push
xchg
int
cmc
cld
fnstsw
push
xor
xchg
pop
sbb
fimuls
fistps
loop
pop
dec
dec
cs
imul
pop
scas
sub
sar
cmpsb
and
sub
pusha
and
push
mov
mov
push
fsub
bound
bound
inc
test
xchg
loope
pop
or
stc
xchg
arpl
or
mov
push
mov
cmc
movsl
sti
rclb
sti
lcall
jmp
stos
jo
pop
pop
adc
xchg
bound
push
loop
das
and
mov
test
repz
xchg
dec
jo
repz
xlat
push
sti
out
sub
mov
cli
insb
in
pop
sub
rcrl
cmp
fisubl
fprem1
pop
push
push
cltd
hlt
xchg
and
es
sub
mov
xor
adc
push
lods
mov
rclb
mov
mov
push
lahf
mov
dec
stos
jmp
adc
push
lret
leave
out
xchg
jmp
movsb
mov
lods
push
negl
add
cs
adc
push
adc
aam
out
push
inc
mov
cwtl
xchg
xlat
insb
xchg
mov
mov
rcrb
mov
mov
push
xor
xchg
cmp
and
sbb
gs
insb
scas
mov
loop
jo
push
rcr
popa
lcall
jg,pt
add
test
and
into
jge
jne
xor
pop
cltd
inc
xor
mov
fwait
and
outsl
and
arpl
movsl
fidivs
ja
xchg
insl
mov
pop
push
iret
jg
shll
jnp
clc
cmpsl
clc
adc
inc
and
jle
jbe
mov
fcoml
mov
shl
loopne
push
data16
xchg
push
lret
aad
scas
adc
push
mov
mov
int3
and
and
testb
lret
aaa
das
test
adc
push
lods
pusha
xchg
lahf
cltd
cmc
cmpsb
mov
mov
or
add
lock
cmpsl
test
add
int
test
sahf
out
push
sub
popa
pop
enter
push
int
lahf
push
in
fs
dec
xor
rcrl
jp
xchg
pop
cltd
mov
push
cmpsb
dec
lods
push
lret
mov
fcmovbe
mov
push
sub
bound
adc
mov
dec
jle
xor
subl
push
mov
jae
outsl
push
mov
adc
mov
inc
in
pop
mov
fbstp
mov
xchg
ds
xchg
adc
push
cmp
inc
jae
sbb
mov
xorps
ret
xchg
sarl
sbb
mov
mov
mov
addr16
sub
jg
push
and
imul
adc
xor
lea
pop
sub
add
pop
jmp
mov
cwtl
sbb
mov
mov
pusha
movsb
dec
mov
adc
inc
mul
clc
cltd
xor
cmpsl
push
adc
std
xor
int3
pusha
mov
arpl
loop
ja
inc
push
fists
push
adc
add
or
and
xchg
push
jne
imul
aad
stos
fdivs
ja
pop
lret
into
add
outsl
jnp
xchg
adc
jecxz
fstps
xor
pop
inc
xlat
xlat
xor
jle
dec
jmp
mov
jg
mov
jecxz
mov
jo
das
sbb
mov
cwtl
jo
mov
sti
adc
ss
push
cmpsl
mov
jmp
ds
data16
data16
test
popa
xor
fists
fcoms
subb
xor
ja
sub
push
xor
add
orb
xor
inc
clc
push
xchg
loop
sub
jmp
or
lret
fsubp
cmpsb
fwait
ljmp
add
mov
cmp
and
mov
lret
mov
test
jle
mov
fs
and
inc
push
inc
xor
add
sbb
inc
ljmp
shr
sub
lock
call
into
pop
out
gs
iret
pusha
pcmpgtw
jecxz
inc
movsl
adc
enter
mov
lds
lock
dec
loope
aad
xor
push
mov
scas
gs
mov
test
jl
jne
cmp
fldcw
push
test
xlat
int3
add
mov
jo
cmp
push
sub
or
dec
sbb
out
jns
cld
fwait
cld
rol
fbstp
pshufw
push
mov
push
push
lret
shll
inc
push
add
popa
jmp
aad
enter
mov
nop
outsl
fistps
jns
lret
clc
std
push
sbb
add
movsb
xchg
add
mov
mov
lods
je
dec
test
repz
ret
and
mov
rorb
out
jl
movsb
lret
enter
fdiv
add
xchg
daa
jmp
js
fdecstp
and
add
and
jge
and
js
jbe
sahf
and
xchg
jb
fbld
ja
stos
loopne
loop
push
sarl
jae
gs
add
xchg
sbb
test
push
jl
or
cwtl
inc
lds
lods
xchg
lock
xchg
sbb
sbb
loopne
lea
lods
push
xchg
pop
lret
add
mov
inc
arpl
jnp
fucomip
data16
call
jg
jge
push
xchg
addr16
lret
lret
dec
mov
mov
mov
test
aam
loop
push
xchg
out
leave
imul
jg
leave
fs
mov
out
xor
mov
mov
int
andl
mov
in
push
loop,pt
sbb
and
pop
mov
cwtl
pop
and
loope
in
adc
add
and
lahf
dec
insl
push
pushf
jge
add
aad
push
test
jecxz
jb
mov
test
test
push
sub
dec
fstpl
and
push
mov
stos
jns
mov
xchg
jns
iret
lock
clc
jnp
lahf
std
in
push
inc
add
and
sbb
cmc
sub
mov
lods
jno
mov
or
imulb
les
call
jmp
out
jecxz
loop
sbb
ret
jnp
movsb
dec
jp
mov
or
jmp
pusha
inc
roll
aad
pop
pop
test
inc
aas
jge
or
pop
jle
orb
sub
mov
lea
mov
leave
leave
and
icebp
icebp
ret
push
sub
mov
and
push
mov
mov
mov
pusha
cmp
pop
mov
popa
fistpll
sbbl
xchg
or
pop
movsb
or
pop
or
xchg
lock
xchg
leave
lods
mov
dec
mov
test
rcl
test
stc
mov
or
mov
cli
test
loopne
and
mov
push
enter
cmc
mov
in
xchg
das
je
mov
pop
cmp
add
push
sub
inc
pusha
lret
shll
loop
outsb
cmpsl
or
push
outsb
sub
xor
jbe
inc
xchg
les
xchg
shr
cmp
shl
jge
pop
push
test
in
push
gs
lret
int
movsb
push
insb
pushf
dec
call
gs
shrl
in
lods
dec
out
xchg
call
mov
mov
icebp
inc
adc
fmul
dec
mov
cmc
cltd
sbb
rolb
dec
out
icebp
cltd
mov
movsb
out
mov
std
loopne
dec
or
cmc
fwait
ror
jle
sub
ja
sbb
mov
lock
les
xor
mov
ret
enter
xchg
dec
pusha
and
rol
adc
mov
in
jo
xlat
fists
cmp
data16
xchg
shrl
jo
mov
inc
clc
mov
js
jo
jb
stc
dec
or
pop
in
out
adc
pop
jnp
sub
shlb
push
mov
jg
sbb
mov
mov
mov
movsb
inc
lret
repz
hlt
call
mov
sub
pop
outsb
cmp
adc
lods
xchg
add
mov
jmp
sbb
jl
lret
xor
shrl
aad
inc
adc
out
or
xchg
lock
in
xor
dec
push
xchg
xor
jo
out
add
sbb
sub
lods
mov
jg
aad
add
ret
push
mov
fcmovne
loopne
inc
mov
repnz
push
inc
jb
sbb
pop
mov
push
jl
adc
add
in
and
dec
mov
out
dec
dec
mov
mov
movsb
orb
xor
sbb
pop
cmp
adcb
cmc
into
pop
push
fisubl
shlb
aad
inc
in
dec
add
dec
loope
jp
pusha
or
mov
stos
fidivl
ret
lahf
ljmp
xor
nop
fdivr
xor
pushf
sub
inc
test
xlat
xor
jecxz
or
jo
mov
test
or
mov
or
pop
sahf
int
popf
sbbb
mov
mov
movsl
push
mov
dec
mov
jge
xchg
andb
xchg
sbb
std
in
push
cmp
lods
jge
push
mov
inc
sbbb
outsl
enter
mov
insb
cmp
insl
cmp
sbbb
sahf
push
cmp
pusha
mov
movl
or
les
insl
xor
cmpsl
adc
jb
sarb
pop
pop
aad
pop
mov
insb
push
mov
pop
out
jnp
gs
or
xor
dec
and
cmp
jbe
pop
and
lods
pop
int
aaa
jge
inc
or
pusha
jns
and
repz
fwait
repz
inc
push
js
jne
fs
int3
xchg
in
aam
in
call
cs
call
jle
mov
nop
mov
fldt
gs
loopne
lock
cmp
sub
push
sub
pusha
shll
mov
in
outsl
or
outsb
repnz
dec
lret
paddq
les
and
lea
hlt
scas
cmp
xchg
mov
cltd
and
ret
xorb
shlb
xor
mov
shrb
add
insb
cmpsl
cmp
and
in
cli
push
cmp
arpl
ja
xchg
fisubrs
and
aam
mov
pop
shll
jae
jno
xor
mov
inc
mov
mov
xchg
cmp
lret
inc
add
mov
inc
mov
and
daa
test
out
lods
lret
sbb
movsl
xchg
xchg
sahf
sahf
pop
dec
jg
sbb
leave
xchg
xchg
cmpsl
lds
pop
iret
in
add
out
lret
andl
fcmovne
addr16
mov
or
push
ret
outsb
adc
ds
pop
sbb
push
es
mov
fldcw
cmp
sub
mov
and
dec
insl
xchg
sti
add
daa
xchg
mov
jl
sbb
or
testb
jge
icebp
imul
cmp
into
inc
cmp
xlat
stos
rolb
xorl
inc
or
xor
scas
xchg
dec
ds
into
jg
cmp
push
cmp
les
dec
jmp
clc
or
dec
mov
cmpsb
dec
mov
je
out
jmp
ljmp
leave
jp
inc
cmp
lret
mov
mov
jns
and
sbb
and
stc
add
mov
dec
mov
inc
mov
push
lret
int3
push
pop
pop
jns
nop
stc
fmuls
push
fadd
lcall
aad
mov
xchg
loop
xchg
daa
insb
dec
xchg
jns
mov
pop
cmpsl
adc
and
cmp
mov
sub
into
out
pop
mov
inc
sbb
inc
add
mov
pcmpgtd
rcrb
lcall
cltd
mov
jns
bnd
or
push
dec
into
inc
adc
and
xchg
repnz
mov
and
clc
fcomps
ror
push
aaa
and
call
sbb
sti
xchg
out
sub
in
out
es
shrb
clc
add
sbb
xchg
pop
dec
adc
dec
jnp
or
xchg
push
into
mov
shrb
adc
cmp
dec
or
or
mov
test
test
adc
mov
cmp
push
aam
jnp
cli
pop
test
mov
fcom
and
es
in
fisttps
and
mov
icebp
mov
mov
leave
ljmp
cmp
xor
mov
mov
adc
loop
movsl
movsl
xor
out
inc
lds
and
pop
push
and
xchg
adc
add
fwait
pop
in
imull
xor
adc
or
xchg
int3
push
test
movsb
dec
movsb
adc
add
pop
inc
aaa
sub
mov
pop
push
sbb
xchg
pop
gs
xor
rcl
push
cmp
xchg
lahf
scas
test
mov
das
cmpsb
les
aas
sub
mov
aaa
decl
stos
sub
dec
jg
scas
xor
sbb
aam
mov
scas
adc
insb
lea
sbb
mov
ss
mov
xchg
ljmp
out
in
fildl
adc
fsubrs
or
xchg
dec
in
inc
jbe
sub
cltd
insl
add
lods
jo
sti
in
insb
adcb
inc
add
adc
rolb
in
loope
adc
jg
int3
loop
add
into
negb
add
lea
leave
outsb
insl
insl
push
mov
lcall
aaa
das
mov
xchg
jbe
adc
adcl
pusha
or
sbb
jle
xchg
sub
sbbb
daa
mov
data16
data16
mov
out
cs
sti
ret
cmp
repnz
ficompl
inc
mov
inc
cli
loope
dec
xchg
test
lods
adcl
inc
es
movsl
insl
adc
cmp
push
lahf
inc
add
or
ja
and
mov
js
pop
inc
pop
sbb
in
lahf
shll
ss
dec
dec
add
fwait
cmp
and
xlat
inc
lea
sti
mov
xchg
sub
sahf
jno
rcrb
insl
xor
pop
push
xorb
test
fnstsw
inc
jno
jnp
outsb
mov
inc
xor
mov
add
xchg
pop
fdivrs
mov
xor
insb
xor
pop
jb
mov
mov
repnz
and
xlat
bound
icebp
xor
imul
xchg
adc
test
cmp
fbstp
fdivrs
out
xor
mov
push
subb
add
jns
mov
fnstcw
das
push
xor
mov
sub
sbb
xlat
mov
fstpl
sti
imul
ret
pop
cwtl
lcall
enter
mov
sbb
ret
cld
loope
sbb
lret
ret
inc
lcall
rorb
cmp
imul
push
add
sbb
dec
insb
push
jecxz
fsubl
test
xlat
test
and
pop
loopne
popa
cmc
jns
pop
loopne
mov
push
sub
jg
dec
jmp
popa
push
int
pop
fdivrl
ja
xchg
enter
pop
ret
push
push
cmp
bound
std
cmpsl
jle
aaa
enter
xchg
cmc
rcrb
pop
out
pop
not
sub
mov
fstpl
arpl
or
fists
cmp
fildl
shll
int3
arpl
in
mov
xchg
pusha
inc
neg
lret
sub
pop
sub
and
into
mov
or
shl
hlt
push
xchg
inc
int
jp
sbb
sahf
incl
stos
or
insl
mov
mov
lods
testb
and
mov
mov
add
out
pop
lds
fdivrs
outsb
cmpl
aad
xlat
and
add
and
mov
sbb
xor
outsb
popa
mov
dec
aad
pop
inc
cld
stc
cld
and
jmp
add
out
add
ss
or
imul
lahf
std
out
sbb
test
mov
jle
sub
xor
jb
xchg
inc
push
or
decb
xor
ret
push
test
xor
or
scas
xchg
nop
inc
mov
loop
movsb
rcll
add
cwtl
add
mov
mov
ficompl
je
cmpsl
jo
and
mov
addl
adc
and
loop
xchg
test
lea
rcrb
icebp
jmp
out
lock
sahf
inc
lods
mov
cmp
insb
data16
js
leave
in
jne
lret
dec
xchg
roll
stos
xchg
pop
insl
jo
dec
int
in
xor
mov
jp
jp
sbb
pop
jmp
mov
insl
out
inc
jo
pop
or
daa
xchg
sbb
mov
in
dec
mov
xchg
ficoml
push
push
jo
jae
and
stc
adc
cli
adc
in
cmp
and
jb
push
pop
out
pop
push
cmc
mov
add
pusha
rep
in
xchg
inc
stos
fistpl
pushf
mov
mov
xchg
sti
dec
cld
fisubrl
inc
mov
in
jmp
out
cmc
mov
movsb
out
js
iret
inc
loopne
sub
jne
xchg
leave
js
loopne
in
inc
mov
into
mov
xchg
adc
cmp
rolb
xor
outsb
xchg
ret
mov
or
cli
sub
mov
sbb
sbb
add
sbb
sbb
and
fdivrs
rcrb
mov
in
shlb
addl
cltd
pop
stos
push
mov
sbb
mov
add
jne
cs
mov
pop
lcall
sub
push
sub
les
lret
cli
xor
mov
sbb
loop
sbb
lret
rorb
sbb
push
cmp
push
fstpt
jae
xchg
test
lcall
xor
lock
pop
mov
sbb
in
dec
vpcmpeqd
inc
dec
cmpsl
adc
sbb
pop
xchg
and
xchg
std
mov
inc
xor
fcmovnb
sbb
cmp
outsb
lds
rcrb
adc
xchg
or
fadds
push
jmp
adc
dec
sub
push
ljmp
sbb
or
lods
sbb
ljmp
and
inc
fldl
ret
lret
dec
andb
pop
fisubs
mov
loopne
jne
cmpsb
cmp
xchg
mov
push
enter
outsb
push
ljmp
sbb
sbbb
xor
push
shlb
sbb
pop
call
test
sbb
adc
or
fucom
and
pushf
cmpsl
jg
xchg
sahf
push
lahf
enter
dec
movsb
test
xchg
xor
cmpsl
inc
xlat
add
sub
ljmp
or
mov
loopne
adc
mov
jno
lret
dec
dec
jno
cwtl
jmp
popa
into
scas
jno
push
dec
add
adc
pop
mov
inc
aad
imul
imul
ret
pop
js
pop
dec
sub
loope
mov
pop
cwtl
and
jbe
daa
push
clc
sbb
sarb
ljmp
pop
daa
dec
push
jns
sahf
fstpt
stos
repnz
test
dec
sub
add
arpl
lahf
mov
ljmp
mov
aaa
loope
je
pop
fldlg2
stos
clc
push
ret
jno
jge
call
mov
lods
xchg
xchg
movsb
mov
add
adcb
cmp
inc
sub
sub
bound
xchg
jle
add
and
fisttpl
int3
decl
stos
aad
jbe
fmull
push
shrl
sub
xor
jb
pop
ret
gs
clc
dec
es
in
dec
aam
roll
shrd
jmp
dec
lds
inc
sub
lods
jp
sub
rol
jne
popa
pop
add
call
push
lret
xor
shlb
sbb
adc
fcompl
sbb
sub
sub
int
adc
popa
int
fnstcw
push
cmp
or
sbb
add
stc
xchg
sub
pop
mov
pop
bound
jo
test
push
fsubp
jg
and
mov
sarb
in
cmp
and
inc
cs
mov
jmp
jns
js
mov
inc
pop
fldl
mov
out
popa
ret
in
mov
roll
shlb
enter
pop
xor
mov
test
add
jmp
jns
pop
add
cmp
sub
dec
icebp
fnsave
addr16
out
int
aam
imul
fs
fnstcw
out
mov
sub
jge
xchg
dec
xor
stos
nop
and
xor
xor
mov
adcb
pop
shr
dec
push
cli
cmc
cmc
sub
sub
cmc
xchg
xchg
fadds
cmc
dec
cmp
and
sbb
xor
add
or
adc
insb
and
sub
xchg
jecxz
scas
mov
sarl
and
loopne
pop
jae
push
dec
repnz
mov
push
xchg
adc
or
pop
outsl
loopne
mov
dec
repz
lret
pop
sbb
adc
mov
add
cli
cmp
ja
adc
lods
pop
ficoml
lret
push
test
arpl
sbb
inc
xchg
inc
jo
jge
hlt
jle
enter
mov
jle
popa
jno
in
inc
cltd
not
jp
mov
ja
xor
fildll
das
adc
xchg
fsub
jge
aas
adc
sbb
fnstenv
push
cli
mov
inc
outsb
lret
or
mov
fs
sarl
rorl
in
push
aam
aam
rcr
xor
pop
xchg
add
pop
xor
nop
fs
jne
les
pop
popa
inc
jmp
clc
std
cmc
out
pop
pop
ljmp
ja
pop
insb
push
or
mov
mov
fidivl
in
cmp
jmp
subl
ret
push
lahf
push
bsr
js
dec
adc
subb
je
mov
insb
dec
push
loope
mov
inc
dec
fisubs
inc
dec
adc
fwait
into
add
out
in
add
mov
data16
mov
loope
push
pusha
cmpsb
mov
adc
and
mov
xor
lsl
dec
jbe
test
call
jg
add
or
ds
jl
vcvtps2dq
and
jmp
xor
jae
arpl
adc
mov
insl
jno
push
adc
xor
fiaddl
xchg
mov
stc
gs
fstpl
mov
arpl
into
xchg
lds
insb
add
daa
sub
cli
inc
jno
xor
cmpsl
jo
add
cwtl
hlt
fs
cmp
push
adc
inc
dec
loopne
aad
out
inc
xchg
rcl
or
jg
insb
mov
fdivrs
ret
mov
xor
scas
outsl
repz
pop
pop
inc
ljmp
dec
jge
pop
pop
sub
sahf
jnp
add
movsl
inc
loopne
cmp
adc
pop
sbb
jge
mov
lock
inc
cmp
add
dec
daa
cld
inc
insb
xor
fwait
jo
cmpsl
cwtl
push
add
xchg
outsb
inc
stos
frstor
cwtl
fstpl
add
mov
mov
sub
sub
pop
out
mov
jecxz
cwtl
xchg
inc
cmpsl
dec
popa
dec
sbb
xchg
xor
mov
sbb
loop
vmovdqa
jae
adc
jnp
push
add
imull
ficoml
lds
in
in
jae
jbe
push
enter
and
hlt
jg
mov
xor
lret
out
mov
cmp
inc
rcll
add
mulb
jno
jo
adc
push
lea
inc
testb
insl
pop
jmp
push
pop
mov
out
add
je
int
in
ljmp
out
push
in
ljmp
inc
sahf
aad
rol
inc
jnp
pop
mov
aam
jmp
pop
sbb
push
push
in
mov
lea
out
mov
repz
inc
lea
ljmp
or
mov
add
sahf
jmp
ds
or
les
mov
ja
daa
lods
and
addb
xchg
pusha
insl
xor
mov
adc
mov
iret
mov
mov
xchg
repnz
in
cmp
mov
mov
mov
and
cmpsb
mov
jne
xor
xchg
popa
decb
sbbl
cmp
mov
fnclex
sti
sub
insl
jl
orl
or
hlt
sbb
adc
or
mov
test
or
loop
shrl
jae
outsb
xor
rolb
adc
insb
arpl
nop
cmp
leave
xor
jp
cltd
cli
add
popa
popa
out
adcb
pusha
adc
push
inc
lds
fwait
mov
jl
das
lock
mov
xchg
nop
aam
scas
sbb
pop
mov
jb
je
arpl
push
fmulp
icebp
dec
xor
lods
sub
or
push
or
adc
mov
mov
sub
sub
arpl
xchg
adcb
bound
sub
push
repnz
inc
jae
shrl
jae
aad
pop
mov
lahf
fs
rcrl
rorl
scas
mov
adc
ljmp
pop
mov
movsl
fisubs
fdivrl
pop
mov
std
test
fdivr
jne
sub
mov
cmp
loop
fnsave
pop
arpl
and
out
add
lock
or
cmp
mov
mov
clc
addb
out
les
int
and
adc
and
adc
jbe
push
inc
sub
inc
xor
icebp
jns
xor
jmp
clc
les
movsl
mov
aad
and
push
and
cmp
add
xchg
sub
les
sub
scas
mov
jb
cs
or
jno
int
mov
xchg
sub
jb
fwait
jnp
aas
xchg
orl
shlb
xchg
rclb
cmpsl
sbb
pop
insl
inc
jmp
mov
sub
sub
xchg
ds
cmp
xor
stc
ljmp
mov
cmp
mov
xchg
fwait
stos
das
lret
dec
xchg
mov
les
popf
push
lret
push
and
push
mov
popf
mov
add
mov
jle
adcl
push
pushf
sbb
sahf
push
lods
movsl
and
jo
sbb
mov
daa
mov
sahf
popf
adc
cmp
inc
sub
sbb
push
sub
test
adc
xchg
sbb
inc
and
pushf
cmp
push
sub
push
dec
mov
xchg
popf
pop
push
mov
imulb
aad
loopne
or
std
in
mov
fmull
push
xor
cmp
push
out
jb
mov
divl
cmc
cmp
lcall
jp
xchg
xchg
adc
and
movsl
xor
push
mov
stos
out
fsubrl
mov
cmp
jb
imul
ret
and
jge
mov
mov
loop
arpl
das
outsb
cmp
add
addr16
cmp
add
mulb
jecxz
xchg
jo
pop
aas
jp
sarl
sahf
ds
sahf
in
test
add
call
jmp
in
cs
pop
in
push
loop
fsubl
lds
lahf
lcall
xor
xor
mov
mov
cmp
mov
sarl
jbe
push
push
hlt
or
xchg
pop
movsl
or
add
outsl
repz
and
mov
outsb
pop
xchg
mov
int3
push
pop
test
xchg
shlb
pop
add
add
aaa
inc
pop
in
xor
lods
mov
adc
adc
mov
cmp
lock
inc
push
fistps
jo
stos
xor
pop
fwait
xlat
jp
add
clc
push
inc
cmc
jb
fstps
bndcn
in
or
call
and
out
adc
and
add
nop
inc
add
jns
lcall
insb
shlb
dec
inc
pop
mov
ja
jnp
loop
sbb
xor
sbb
mov
lea
xchg
addr16
pop
add
cmp
and
bound
cmp
mov
and
adc
mov
add
pusha
push
cld
test
ret
xor
inc
pop
xor
pop
fistl
xchg
mov
loop
xchg
xchg
int3
int3
pushf
sbb
mov
or
inc
ret
and
dec
ss
ja
xchg
lds
pop
enter
leave
leave
pop
mov
les
sub
jecxz
divb
mov
fstps
pusha
sbb
cmp
int
push
mov
xor
lret
fisubl
xchg
adc
jmp
xchg
stos
sub
and
dec
mov
mov
jge
adc
jl
mov
out
psadbw
rol
in
inc
mov
and
gs
sti
test
imul
mov
shrb
int
fwait
loop
ds
ret
sub
and
and
add
or
cmpsl
adc
inc
sbb
mov
adc
movsl
outsb
jae
and
ror
in
and
scas
pushf
inc
pop
cld
hlt
mov
insb
iret
pusha
clc
aaa
sub
xor
mov
sbb
dec
inc
mov
addr16
lods
movsl
out
jne
jl
lock
cmpsl
rcrb
call
sbbl
sub
sub
push
sub
cmp
jae
faddl
lods
imul
dec
and
jne
movb
imul
xor
mov
lcall
in
fdivl
xor
xor
mov
jo
mov
fwait
inc
inc
mov
jae
shll
adc
add
int
lret
sbb
in
jecxz
sbb
pushf
subl
mov
jp
lea
push
sub
in
push
pushf
fiaddl
and
cltd
mov
cmp
sbb
mov
jbe
sub
pop
mov
sub
jg
sbb
add
jg
xor
popf
bound
cmc
test
xchg
pop
mov
mov
jge
push
ss
add
fcompl
stos
or
fbstp
gs
xchg
xchg
mov
jne
fmuls
das
dec
in
and
daa
xchg
add
jne
fldcw
popf
mov
ret
cmpsl
lahf
jmp
scas
mov
repnz
lock
adc
rcrb
sub
cmp
les
jmp
add
addl
add
mov
int
push
pushf
lds
mov
pop
arpl
in
pop
sbb
in
bound
rclb
mov
jmp
lock
inc
add
jge
insb
push
cmpsl
mov
fs
adc
imul
popf
xor
sub
stc
dec
out
fdivs
pop
insb
fmul
fmull
jo
fwait
out
dec
int
inc
int
cli
pop
inc
ror
jb
pop
loopne
xchg
xchg
jmp
mov
lods
jle
cmp
and
sbb
jae
sbb
aad
and
xlat
dec
cmp
mov
por
test
sub
int
inc
inc
bound
inc
push
xchg
scas
std
dec
loop
cld
push
mov
fs
push
pushf
mov
sub
mov
incb
arpl
pop
test
sbbb
ss
ds
sbb
cmp
aaa
shrb
aad
mov
aad
adc
aaa
mov
outsb
in
das
sbb
rcrl
push
adc
dec
and
mov
jg
push
and
out
mov
iret
sbb
or
mov
popf
ret
add
out
sahf
popf
ret
sub
xor
push
jns
xchg
jo
arpl
pop
pop
cld
pop
cs
fnstcw
add
mov
xchg
movsb
pop
xor
push
es
mov
out
or
cmpsl
aaa
pop
scas
out
push
stc
mov
cwtl
cs
jle
mov
dec
rol
mov
insb
test
sub
clc
xchg
xchg
insb
stos
adc
sbbb
xchg
push
aas
inc
mov
inc
cs
cmpb
sbb
stos
push
fldcw
sti
sub
out
xor
aas
push
mov
mov
xsave
fadds
dec
add
jle
xchg
leave
adc
sub
lock
call
mov
mov
sbbb
or
sbb
sbb
loope
mov
addb
or
mov
addr16
dec
shll
ss
add
dec
mov
push
adc
sti
xchg
insl
adc
and
inc
push
cmp
xchg
push
insb
jle
sub
outsl
iret
mov
iret
lea
mov
test
mov
jne
add
ret
roll
push
mov
jae
mov
fisubrs
push
iret
push
sub
add
sbb
lahf
xchg
aam
jecxz
orl
cmp
sub
sbb
push
clc
push
sbb
pop
std
mov
xchg
and
arpl
lods
add
mov
sbb
jle
pop
roll
lods
or
fcompl
outsl
push
shl
mov
pop
adc
cmp
jp
or
sub
cmpsb
push
pop
pop
mov
and
mov
push
jge
push
rorl
pop
pushf
push
and
rclb
sub
add
inc
test
jg
push
sbb
lret
dec
call
movsb
jbe
scas
cmp
mov
loopne
jmp
xchg
mov
mov
movsb
pop
xchg
mov
add
adc
fwait
insb
pop
aas
add
add
inc
mov
gs
adc
adc
push
test
inc
cli
addr16
xchg
mov
rclb
inc
pop
and
addr16
lds
push
push
xor
int
cmp
mov
imull
mov
inc
aam
push
cwtl
jg
xor
pop
xchg
in
pop
inc
or
jg
sbb
mov
mov
jp
mov
jmp
in
mov
dec
jg
sar
mov
aad
mov
lods
sahf
sub
add
out
xchg
ds
cmp
loopne
and
shl
mov
repz
adc
xchg
pop
aad
jo
push
push
mov
int3
xchg
ficompl
repnz
mov
add
jp
lods
pop
add
data16
mov
jns
mov
cwtl
push
cmpsl
or
rcrl
sub
test
test
in
sbb
data16
popa
dec
mov
push
jl
fwait
arpl
mov
aad
subb
nop
dec
adc
push
shlb
dec
cmp
xchg
leave
aad
divb
cmpsl
shl
sub
movsb
and
mov
jmp
dec
popl
sarl
daa
add
push
shll
bound
xor
lcall
push
inc
sbb
data16
mov
jge
or
scas
jnp
sbb
cmp
jmp
sbb
add
adc
daa
fldcw
add
push
dec
add
jae
popl
adc
cmc
unpcklps
stos
push
mov
xchg
lods
jle
mov
cwtl
lret
iret
cmpsb
xor
and
add
and
mov
xchg
outsb
xchg
mov
mov
out
fsubrl
pop
adc
cld
fists
test
out
dec
and
rorb
or
outsl
int3
jecxz
mov
cld
cmp
lds
sbb
jp
inc
dec
cmp
push
jl
rcrb
lret
push
cltd
fsubr
shrl
mov
and
mov
mov
fs
call
push
adc
jno
adc
in
lret
fcoms
pop
jp
cmp
push
dec
push
pop
xlat
imul
in
scas
movsl
cmp
jle
outsb
insl
rolb
adc
cmc
sbb
add
inc
mov
addr16
or
je
sbb
push
scas
push
mov
pop
cmp
shlb
insl
jnp
jp
sbb
mov
jg
and
jmp
daa
lea
mov
cmc
dec
mov
iret
aam
stc
and
and
imul
xor
aad
jmp
pop
ds
cmp
mov
xor
mov
push
mov
int
sub
sub
fsubs
in
stos
in
outsb
sbb
push
push
sub
pop
fadd
sarl
addl
xor
ficoml
push
scas
shrd
mov
push
push
push
xchg
mov
js
lods
in
jbe
nop
jmp
push
mov
sbb
jle
cmp
cmpsb
clc
movsb
mov
loop
ljmp
pop
int
mov
in
pop
rorb
insb
cmp
sub
ss
pop
add
mov
rcr
xlat
mov
cmp
icebp
loop
or
push
jb
or
jb
aam
sti
mov
cmp
lods
das
ficomps
and
sahf
mov
icebp
popa
mov
repz
in
sbb
and
fwait
mov
mov
fwait
lret
lods
addl
mov
mov
pop
cmp
jo
inc
and
mov
jbe
lods
mov
movl
out
dec
sarb
or
lcall
xor
or
outsl
imul
mov
lcall
jmp
loopne
jne
xor
add
pop
lahf
xchg
jmp
cmp
mov
mov
push
fldcw
scas
or
sbb
xchg
pop
out
dec
mov
popf
inc
sbb
mov
jmp
rolb
iret
lea
outsl
add
add
ret
hlt
mov
gs
mov
or
addb
and
mov
lock
movsb
cmp
or
xchg
mov
push
sbb
pop
inc
int3
push
movsb
lds
lret
push
push
popf
lret
jmp
add
push
push
mov
lret
xlat
ljmp
xchg
cmp
addb
sub
inc
aam
rcrl
mov
inc
and
sbb
sbb
sub
out
pop
in
ja
cmp
dec
cld
dec
cmp
addb
les
out
pop
jbe
jl
add
push
int
jno
xchg
xor
dec
sti
pop
popa
and
jo
lods
push
enter
aaa
inc
mov
or
xchg
or
or
dec
add
mov
xchg
rorl
mov
add
jbe
lea
sarl
inc
imul
xchg
nop
pushf
mov
loope
pop
pushf
iret
xor
push
adcb
stc
pop
shll
pop
insl
jg
and
ja
cmp
loope
and
pop
pusha
aad
out
dec
adc
fucomp
or
leave
pop
lods
lea
scas
adc
sub
inc
xor
addr16
filds
nop
and
push
insb
dec
hlt
leave
inc
xor
jns
push
cmp
sub
push
mov
out
xchg
xor
scas
fbstp
xchg
and
cmp
xor
and
sbb
xchg
fsubrl
ret
fs
sbb
push
add
enter
mov
sub
test
jns
pop
dec
addl
es
mov
repnz
and
sub
and
inc
sahf
aad
adc
cmpsl
pushf
int3
pushf
pop
leave
push
xchg
out
leave
mov
into
sarl
outsb
sub
xor
sub
rorl
int
movsb
cld
imul
out
pop
pop
imul
fcomp
add
add
mov
into
xchg
cmp
mov
lock
lods
out
inc
shll
mov
outsl
jecxz
cmp
push
adc
cmc
cmc
and
pop
jg
jbe
jbe
popf
cltd
add
incl
iret
xchg
icebp
mov
lret
imul
cmp
jl
pop
pusha
sbb
roll
testl
mov
mov
and
leave
push
adc
inc
push
mov
sarl
jo
sti
mov
mov
sbbl
cmp
and
lods
je
mov
out
jl
rorb
xchg
cs
add
add
fbld
jbe
ficoms
or
cmc
insl
fstpl
ss
mov
inc
add
jl
mov
lcall
fldl
test
push
pause
mov
in
sahf
outsb
pop
cld
gs
pop
pop
cwtl
mov
fsin
or
pop
cli
jp
mov
aad
shr
inc
xor
out
or
out
test
push
cmpb
cs
ret
fsubs
or
xchg
insl
cmp
jp
dec
pop
outsl
pop
pop
pop
sbb
jns,pt
fldcw
push
inc
jno
daa
adc
test
mov
es
inc
pop
xchg
jbe
cld
aaa
sub
icebp
mov
dec
add
push
jge
mov
enter
lock
adc
lds
negl
xor
mov
test
adc
and
fdivl
fimull
dec
adc
lcall
mov
push
rcr
jmp
adc
jo
sbb
sub
xchg
xchg
jnp
jle
loop
insl
xchg
xlat
or
cmpsl
jge
outsb
xor
repz
xchg
pop
sahf
fcomps
inc
ret
xor
insb
mov
mov
dec
in
fiaddl
fcoml
mov
push
inc
popa
xor
xlat
xor
adc
popa
sub
adc
outsl
repz
cmp
inc
int3
pushf
mov
mov
mov
pop
enter
or
sarb
pop
fwait
jno
mov
scas
inc
push
mov
leave
inc
cmpsl
cwtl
and
lea
xchg
and
and
sub
dec
mov
mov
scas
add
or
adc
loopne
bound
lods
xchg
movsb
mov
jp
data16
pop
mov
js
xchg
and
hlt
in
xchg
jmp
shrl
insl
cmp
mov
mov
jns
xor
rorl
adc
add
gs
cwtl
inc
xchg
scas
jp
dec
cvttps2pi
shl
stc
loope
sbb
pop
icebp
pusha
or
push
aaa
xor
pop
icebp
outsb
clc
mov
pop
inc
inc
dec
inc
sti
mov
scas
pop
fidivrs
sub
push
push
push
out
mov
sub
nop
sub
orl
insb
pushf
outsl
fdivs
lcall
jo
mov
xor
sti
sti
les
pop
pop
push
cmp
or
dec
lock
repnz
dec
jmp
popf
adc
aaa
mov
jp
push
fdivrl
sbb
lea
vpmacssdql
and
leave
xchg
jb
scas
lea
ret
andb
push
in
mov
mov
jns
xchg
iret
jo
mov
sbb
inc
add
pop
sbb
lods
xchg
ljmp
in
cmp
lcall
mov
pop
pop
dec
mov
xorl
in
testb
sub
push
mov
push
lds
lcall
push
lock
lcall
pop
in
or
xor
decb
pop
fcmovne
mov
pop
adc
sub
xor
mov
pop
clc
inc
inc
or
aam
and
lods
sub
jmp
mov
sbb
jbe
jle
xchg
jmp
push
and
sub
repnz
and
dec
push
popl
mov
jl
mov
movsl
cmp
pop
add
push
xor
cmp
icebp
fstps
arpl
dec
or
daa
pop
test
mov
push
sbb
jbe
mov
aad
or
imul
push
imul
outsl
add
pop
push
sub
cli
mulb
arpl
mov
and
inc
mov
leave
rcll
repnz
popa
adc
adcl
add
xor
or
cmp
dec
mov
adc
aas
mov
sarl
in
das
mov
add
sti
cmp
bound
pop
or
stc
int
adc
loop
inc
div
and
out
js
sahf
jmp
jmp
ljmp
subb
xchg
mov
addl
pushf
xor
pushf
xchg
imul
aad
xchg
fcmovu
dec
cltd
imul
rol
xchg
fldcw
and
pop
xchg
mov
pop
in
mov
imul
mov
shll
leave
add
adc
and
pop
mov
fldl
bound
int3
inc
push
dec
jge
int3
pop
mov
push
sarl
cmp
data16
dec
sbb
adc
in
aad
xor
lret
xor
sbb
push
loope
outsl
out
shrb
inc
mov
pop
aam
in
aad
pop
inc
push
popa
js
adc
insl
test
ja
imul
lcall
mov
push
xor
sbb
fsubrl
ret
pop
sbb
and
ret
xchg
jmp
ret
mov
lret
xchg
int
push
popa
outsb
popf
mov
xchg
mov
dec
in
mov
popa
leave
jbe
cmp
jl
insb
sub
mov
mov
test
aam
sub
test
std
sahf
adc
aad
imull
sub
and
and
lods
and
orl
add
and
in
cmp
loopne
inc
aad
insl
add
outsl
cltd
insb
popa
pop
test
sub
pop
pop
pop
les
mov
push
mov
pop
imul
add
xchg
subl
push
popa
popa
test
outsb
and
mov
aad
mov
in
inc
popa
popa
shll
cmpsl
jnp
mov
add
cmp
add
ljmp
and
cmp
lock
xchg
test
pop
sub
push
cltd
lret
inc
jnp
sub
hlt
insl
fisubl
jbe
dec
xchg
jp
mov
or
fisttpll
mov
xor
or
inc
pop
stc
aam
aas
cmpsl
or
mov
aas
mov
rcrl
inc
push
sbb
dec
mov
mov
pop
lds
dec
inc
lahf
xchg
push
loopne
xchg
jbe
push
jmp
or
cmp
pop
lods
or
add
call
sub
fprem
scas
in
movsb
adc
enter
out
xchg
xor
and
inc
std
inc
aam
jmp
dec
jo
cli
jl
mov
lea
mov
adc
cmp
inc
add
cmpsl
pusha
xor
aas
push
mov
push
mov
inc
jne
push
popa
int
xchg
je
inc
mov
cmp
push
jbe
lods
cmp
push
xchg
or
jb
mov
jbe
loope
loope
inc
adc
je
push
mov
and
and
sub
rcl
xchg
push
cwtl
insl
addr16
jae
stos
adc
icebp
js
dec
mov
jp
int3
add
xor
js
jnp
cli
mov
dec
jo
std
sahf
cmp
je
popa
pop
push
sti
das
jge
mov
repnz
ljmp
and
mov
test
fdivrs
sbb
ljmp
outsb
sub
push
mov
add
add
daa
jecxz
push
push
sbb
mov
sub
jp
popa
gs
jo
dec
je
sbb
sbb
shrb
mov
fwait
lret
andb
cmp
and
and
lods
lret
std
push
sbb
ljmp
aad
pop
imul
sub
push
push
pop
lcall
inc
sbb
out
fmuls
sbb
jmp
insl
mov
xchg
cvtdq2ps
mov
adc
and
testl
sbb
addr16
push
add
mov
adc
add
test
lahf
or
cmc
movsl
pop
push
mov
push
popaw
lods
fcomps
test
add
mov
movsl
jno
gs
mov
push
and
add
adc
push
jp
jl
mov
mov
dec
cmpsb
daa
jbe
and
xchg
mov
fnstenv
jne
sub
insl
xlat
mov
popl
test
and
or
push
pop
fcmovb
test
dec
mov
add
mov
jnp
lea
js
es
lret
inc
cmc
ss
pusha
sbb
stos
and
pop
das
fidivrs
jg
daa
mov
scas
sahf
jne
imul
push
mov
and
lds
std
dec
gs
push
xlat
out
fdivrl
or
ja
pop
test
and
cmp
dec
imul
int3
dec
mov
jo
and
fsub
in
rcll
cld
xchg
es
xlat
out
mov
pushf
das
sub
pop
in
mov
mov
out
and
adc
and
cmp
jg
jecxz
sti
je
push
outsb
dec
mov
pop
or
gs
add
jmp
and
adc
adc
add
jge
xchg
adc
cmp
inc
sbb
insl
pop
cmp
jle
cmpsb
jecxz
decl
cli
xor
add
je
push
out
cmp
loopne
out
pushf
mov
xchg
cld
pop
lods
pop
test
jmp
in
sbb
adc
dec
das
lods
inc
xchg
dec
cmp
pushf
test
or
inc
xchg
shll
jmp
out
xlat
jle
test
mov
lret
into
aad
push
xor
dec
push
movsl
scas
pop
icebp
into
ds
inc
and
clc
xchg
mov
xchg
insl
dec
js
ds
aaa
dec
sbb
pop
adc
add
jp
rcll
arpl
inc
xlat
adc
lea
pop
mov
leave
out
mov
xchg
ds
loope
jns
lret
sahf
icebp
dec
repz
cs
pop
insl
or
movsb
sub
shl
loope
mov
dec
adc
inc
es
movb
and
pushf
xor
sbb
mov
or
in
xlat
out
and
pushf
sub
jne
jl
mov
jno
fucomip
lea
jnp
mov
cltd
adc
push
xchg
cmpsb
cli
fisubrl
ficoms
imul
icebp
xchg
sub
push
push
sarb
add
jb
or
jl
jmp
inc
pop
or
popa
inc
addl
and
stos
or
test
pusha
daa
repz
popa
das
into
fwait
xchg
test
jo
gs
repz
in
and
cmp
push
jo
and
pop
add
and
js
and
add
daa
inc
pop
push
or
inc
sub
add
cmpsl
rcrl
or
jecxz
pop
repz
cmp
cltd
pop
insl
test
pusha
xchg
ss
push
aas
bound
imul
xor
sub
je
in
or
and
and
and
or
or
pop
mov
xorl
data16
add
aaa
xchg
daa
scas
dec
mov
std
pop
daa
adc
call
cs
mov
pusha
adc
jns
xchg
shll
adc
ljmp
push
jnp
and
sub
or
bound
pusha
int
or
fisttpll
push
or
dec
jecxz
mov
adc
xor
daa
out
cltd
pop
cmp
sub
xor
jo
pop
xchg
and
lods
shlb
ss
rcrl
inc
jl
sbb
inc
test
mov
add
push
xor
sbb
adc
or
cmp
sbb
test
mov
frstor
xchg
stos
jp
add
pop
and
add
in
cmp
aas
jno
fiadds
ja
cld
lds
aad
ss
rorb
sbb
xchg
xor
sub
xorl
fnstsw
and
adc
sbb
xchg
shrl
stc
mov
mov
icebp
push
in
cmp
les
pop
xchg
daa
fxch
fs
adc
pop
out
ja
cltd
in
sub
movsl
movsl
add
xchg
aad
dec
mov
sbb
fwait
andl
dec
inc
mov
mov
xor
les
cmpsb
icebp
cmp
or
in
popf
adc
jmp
sub
push
sbb
daa
fsubl
sti
es
mov
je
dec
mov
pop
xchg
xlat
add
and
out
test
ja
push
lds
dec
sub
sbb
in
fwait
jns
insl
aas
gs
pop
jge
gs
inc
scas
lods
or
in
inc
loope
mov
xchg
in
pop
mov
pop
std
mov
push
loop
dec
inc
daa
dec
or
add
pop
cmp
pusha
iret
xor
xchg
push
icebp
push
cmp
aaa
jecxz
and
mov
xor
popa
push
mov
in
lahf
lds
mov
xchg
loope
cmp
push
pop
lret
mov
jmp
and
mov
pushf
in
pop
sbb
jne
out
add
jle
adc
lods
mov
jnp
mov
add
mov
negl
push
xchg
jecxz
mov
cmp
fcomi
cmp
repz
insl
out
in
push
xor
xchg
and
inc
movsb
enter
andl
xor
or
insb
loopne
lds
roll
pop
xlat
in
cmp
xlat
fldl
pushf
cmp
jecxz
jne
mov
icebp
sbb
jb
pop
rcl
insl
fdivrp
repnz
fcoms
or
adc
fiaddl
dec
or
and
mov
pop
push
mov
in
out
push
bound
in
jmp
jno
hlt
jl
cld
push
fiadds
into
mov
or
fisttps
outsb
ret
mov
jmp
int3
jne
lret
and
push
je
mov
add
jge
jno
pop
les
pop
cmp
movsl
xchg
cld
mov
push
out
jnp
js
xchg
or
dec
jne
idivb
fistl
scas
mov
xchg
popf
and
mov
sbbl
mov
jp
sbb
inc
mov
mov
sub
cmpsb
test
mov
aad
add
adcl
add
mov
push
pushf
jmp
lcall
rorl
js
lods
mov
jp
push
addr16
push
mov
test
mov
xchg
jmp
jecxz
pop
mov
pop
mov
pop
jg
movsl
imul
fs
jne
out
jmp
jecxz
push
rorl
test
sub
and
mov
xor
mov
mov
cmpsl
cmp
es
loopne
push
mov
out
push
ljmp
mov
dec
aam
or
cmp
pop
and
mov
xchg
fwait
lcall
jecxz
gs
shr
test
dec
aam
stos
mov
in
outsb
repnz
les
sbb
lods
dec
loope
int3
sbb
mov
outsb
mov
and
loope
jae
xor
push
pop
dec
cmpsb
pusha
shll
aad
xor
add
cwtl
popa
mov
jecxz
xor
jbe
ficoml
fcoml
stc
in
and
sub
xchg
in
push
test
lods
iret
scas
shlb
ret
mov
das
loope
mov
out
jne
gs
and
aas
lret
stc
add
fsubrl
push
in
add
loop
jmp
xor
jb
test
xchg
xor
pop
rcrl
leave
lods
lods
rolb
insl
push
imul
pusha
add
out
inc
clc
cmp
pop
into
jl
adc
mov
les
add
daa
stc
sahf
cmp
pop
sbb
ja
in
pusha
imul
mov
rorb
xchg
mov
cmp
xor
sub
push
mov
out
jbe
sub
data16
cmp
aam
nop
js
add
dec
jmp
xchg
cwtl
add
mov
mov
mov
push
cmp
outsl
push
mov
data16
mov
pop
xchg
inc
in
jns
mov
in
mov
cltd
mov
data16
shlb
add
fbld
push
xchg
xchg
mov
jo
pop
dec
add
push
push
lea
popa
cmp
pop
rclb
sub
sub
lcall
adc
sbbb
rol
insb
dec
sbb
sarb
dec
adc
cmc
pusha
mov
adc
popa
enter
xchg
xchg
adc
add
das
lea
or
lahf
std
sub
lods
push
ljmp
sbb
pop
cmc
or
call
subb
adc
add
mov
arpl
fsubs
pop
dec
mov
mov
mov
js
cli
out
test
sub
dec
cmp
stos
adc
sub
fldl
lret
pop
out
pop
jl
mov
pop
test
in
adc
jbe
pop
pop
mov
rcrb
fwait
adc
mov
and
dec
mov
loopne
sub
or
push
dec
pop
or
movb
adcl
jecxz
lods
mov
mov
sahf
jmp
adc
sti
pop
push
rcrb
jo
jns
insb
les
or
out
sbb
push
decb
ds
pop
push
mov
and
push
mov
cmp
cltd
push
out
xor
push
mov
mov
sti
ja
mov
dec
sub
rorb
jle
in
push
adc
negb
das
out
loope
mov
adc
insl
mov
fnstcw
out
add
mov
and
adcb
hlt
cmp
xor
mov
add
lahf
out
fimuls
lcall
std
push
daa
shll
popa
sub
jns
xchg
inc
cwtl
fbstp
mov
mov
xor
cld
push
out
aad
sbb
cmpsb
rcr
push
sub
mov
ja
fsubrp
ficoml
bound
sbb
cmp
les
outsb
mov
lcall
lea
mov
mov
mov
push
fisubs
mov
gs
jmp
adc
pop
or
decb
push
pop
mov
fidivrs
pop
inc
pusha
aaa
sub
jnp
gs
push
insl
stos
std
xchg
fsub
xchg
jno
sub
add
into
adc
cmp
aam
test
ffree
rep
push
xor
pop
mov
test
jo
mov
push
adc
xchg
inc
nop
inc
sub
mov
movsb
and
add
mov
push
rcrl
in
addr16
daa
fstl
nop
pop
outsl
subl
sub
imul
inc
arpl
jmp
idivb
insl
xor
push
mov
fnstsw
inc
mov
jmp
lods
cmp
arpl
pop
cmp
cmp
push
mov
mov
jo
mov
scas
inc
movsb
pop
inc
lea
leave
or
xchg
xchg
ljmp
xchg
inc
mov
jle
push
outsb
cmp
mov
or
imulb
jmp
aaa
cmp
pusha
mov
mov
add
rcrb
add
mov
shlb
push
push
aaa
into
fdivl
xor
leave
pop
fsubs
ret
add
or
mov
add
aad
lods
and
hlt
bound
and
mov
js
jbe
lret
addr16
adc
dec
daa
ljmp
push
aad
cld
je
orb
mov
pop
stos
mov
mov
fstp
inc
xor
xor
inc
mov
xor
pop
stc
cmp
and
cmp
iret
in
stos
ficompl
into
push
fsts
andb
repz
jmp
push
sub
ret
leave
xchg
xor
sub
jno
sub
popa
in
ds
aaa
lods
mov
jbe
lds
xchg
adc
orb
aas
jb
testb
sub
imul
shr
and
xchg
xlat
pushf
arpl
add
in
scas
xchg
pusha
mov
add
mov
mov
adc
sbb
sbb
mov
push
mov
cmp
mov
cmp
sbbl
sbb
dec
aas
mov
in
add
in
gs
adc
mov
mov
xor
into
xor
push
movb
xchg
out
jne
and
pop
jmp
mov
adc
inc
sbb
daa
nop
jmp
cwtl
push
jns
and
lahf
xor
js
sub
test
flds
movl
shll
std
mov
xorb
movb
stos
pusha
mov
cmp
insb
mov
rcl
cmpsl
sbb
xchg
pusha
jmp
pusha
inc
cmp
shlb
insb
or
sub
mov
sbb
xor
sbb
mov
xchg
xchg
add
lahf
nop
push
ret
sbb
aaa
push
cmp
es
xor
imul
inc
cltd
enter
sub
xchg
cs
shlb
in
or
out
call
dec
sbb
je
insl
or
or
adc
xor
loope
aas
adc
mov
insl
mov
and
mov
xor
jmp
jp
daa
push
pop
lods
adc
or
xchg
ficompl
mov
pusha
nop
inc
lods
pop
xor
insl
mov
test
sahf
jnp
dec
dec
sarb
add
call
int3
aad
xchg
ss
sub
addr16
inc
xchg
iret
or
or
or
nop
sub
sub
mov
div
sbb
jns
push
outsb
xchg
lfs
xchg
mov
inc
insl
dec
hlt
out
fildll
je
xor
adc
insl
or
insb
cwtl
andl
mov
loopne
insb
and
shll
lods
push
outsb
mov
adc
mov
mov
xor
rol
cmp
incb
aaa
push
jae
lahf
mov
xor
add
push
pop
outsb
les
adc
jge
fistpl
sub
fs
mov
adc
rol
dec
fdivrs
aad
je
pop
lret
in
jg
jmp
insb
addr16
out
out
std
sbb
sbb
mov
sub
ja
sub
pusha
cs
xchg
fcomps
jo
lock
xchg
arpl
inc
dec
stc
inc
or
sub
lcall
or
pop
aad
nop
arpl
sbb
xorb
mov
jae
push
pop
daa
call
cmpsl
cmp
push
jne
push
fisubs
xor
jg
inc
cs
ret
jne
jge
or
xchg
inc
add
movsb
pop
jno
je
xchg
adc
xor
sub
inc
mov
xchg
inc
lock
gs
or
dec
fnstcw
inc
shll
xor
rcll
inc
test
mov
adc
cmpsb
inc
inc
pop
push
pmulhw
filds
lea
push
add
fidivrl
pop
dec
cmp
enter
pop
mov
fs
sub
adcb
jne
pop
fisubs
mov
outsl
inc
mov
or
xor
imul
jmp
je
inc
push
repz
gs
sub
mov
xchg
jns
and
and
adc
aaa
gs
pop
fs
add
dec
jns
push
pop
inc
xchg
push
pop
jle
cmp
arpl
sbb
sti
sbb
sub
cmp
clc
inc
add
dec
inc
sahf
or
push
inc
enter
mov
xor
and
dec
or
enter
test
jb
inc
orl
inc
or
push
ror
pop
rcll
jle
or
cmp
adc
gs
xor
gs
nop
xor
sub
cmp
inc
jmp
inc
ja
ljmp
mov
jg
iret
push
push
filds
inc
add
or
sub
popf
rorb
sub
pop
cs
orb
jnp
sarb
ja
mov
dec
pop
lahf
adc
sti
pop
or
aad
fyl2xp1
sahf
mov
nop
inc
addb
outsl
jb
dec
pop
adc
lock
dec
inc
dec
and
sub
outsl
cmpsl
sub
and
leave
fdiv
mov
iret
xchg
leave
sbb
aad
cmc
cmp
jb
xor
push
lahf
mov
test
jo,pt
sub
test
xchg
sub
mov
ds
mov
outsb
sbb
cmp
xchg
sub
jns
mov
pusha
cmc
xor
daa
das
or
jae
xor
ret
mov
push
test
push
add
aas
outsl
xor
ja
mov
mov
jmp
sbb
fisttpll
popa
cld
mov
aad
push
movsb
aad
ret
dec
push
ret
xchg
push
insb
in
lods
xchg
rclb
mov
push
or
or
loope
adc
daa
inc
jnp
sahf
mov
out
pop
and
add
mov
aam
in
mov
push
pop
jae
jge
mov
push
mov
outsb
loopne
mov
jl
repz
push
outsb
jne
cmp
mov
sub
idivl
mov
add
cs
rorl
cmp
cli
test
inc
repnz
sub
icebp
out
adc
leave
inc
addr16
inc
sub
push
mov
push
test
cmpsl
setns
repnz
xchg
inc
mov
mov
sarl
fdivl
mov
inc
arpl
xchg
or
inc
jno
and
jbe
pmullw
mov
push
or
ljmp
mov
cmp
push
push
pop
push
icebp
and
cmp
cmc
xor
pop
adc
xor
add
int
inc
test
mov
push
sub
and
xchg
xchg
xchg
fwait
cli
lahf
inc
or
fisttps
pop
xchg
cmpsl
jno
rolb
or
sti
adc
mov
xchg
inc
jbe
cwtl
rorb
inc
sub
inc
lahf
rorl
pusha
mov
cmp
cmp
xchg
or
imul
cmpsb
dec
sarb
sub
adc
sahf
xlat
outsb
push
sbb
jge
push
iret
aad
test
lret
shr
jno
pop
sub
mov
fwait
sub
sbbl
sbb
sub
jb
and
mov
cmp
pop
aad
cwtl
mov
loope
sti
cmp
mov
bound
roll
pop
iret
fistl
cmp
ja
das
rcrb
add
xchg
xor
mov
stc
aas
mov
insb
call
addb
rcr
nop
iret
stc
sub
pop
lcall
cmp
xor
jg
arpl
mov
outsb
shl
inc
ss
ljmp
frstor
addr16
jnp
pushf
in
add
mov
jmp
int
or
into
mov
hlt
sub
or
cmc
mov
loopne
lods
jns
xor
jp
mov
idivb
test
sbb
jno
rcl
lods
jl
xchg
lahf
ret
hlt
and
mov
mov
mov
xchg
je
mov
sbb
xor
sbb
rep
xorl
cmp
jmp
jno
test
ja
stos
das
mov
xchg
sub
sub
cltd
int
popf
pushf
mov
lds
mov
add
lods
jge
sbb
add
push
loop
xchg
lods
pop
imul
mov
enter
mov
dec
lahf
out
addr16
jns
mov
test
sbb
jbe
out
and
shrl
lods
pop
cmc
push
loopne
loope
adc
gs
das
insl
dec
xlat
push
jae
inc
fs
dec
mov
outsb
inc
xchg
sarl
fnsave
aad
jb
lea
xor
rcr
xchg
arpl
jmp
insl
mov
inc
add
cld
xor
mov
aam
adc
aam
lods
sarl
jmp
lds
pushf
dec
mov
movsl
inc
lret
mov
imul
mov
lea
pop
icebp
leave
dec
rol
pop
and
xor
dec
test
lds
fisubrs
outsl
loope
loop
addb
mov
or
add
mov
mov
and
xchg
cmp
sbb
imul
cmp
cltd
pop
jg
cld
stos
jae
out
ja
fisttpll
cmp
or
mov
test
lock
movsl
jae
and
pop
ret
shlb
cld
std
lahf
scas
stos
and
call
fs
fxch
mov
mov
insl
add
loop
lea
pop
dec
cmc
iret
and
mov
jmp
jns
ds
cs
xchg
or
add
pop
mov
sbbb
sub
clc
mov
xor
into
es
sahf
or
mov
fldl
jae
mov
lock
xor
adc
mov
scas
xchg
nop
hlt
sahf
lret
and
out
adc
push
stc
mov
jg
mov
movsl
test
or
rorl
dec
mov
mov
sahf
push
mov
or
mov
sbb
mov
stc
cmp
out
xchg
arpl
cmp
je
sub
mov
and
xchg
fsts
mov
xor
scas
sti
popf
pop
das
sbb
sbb
xchg
andl
outsl
mov
mov
in
mov
cld
sbb
test
push
sub
movsb
gs
xchg
push
adc
cltd
aam
je
mov
ja
lret
and
xchg
pop
jecxz
scas
jle
int
xor
mov
xchg
cltd
jno
gs
push
sbb
jl
bound
xchg
hlt
xchg
lods
aad
mov
mov
jecxz
mov
push
loope
lret
jge
inc
xor
xor
xor
xor
insl
jl
sub
sbb
dec
dec
cli
jo
lods
mov
sub
std
lods
pop
imul
je
dec
dec
lods
iret
aad
push
adc
cld
sbb
sahf
jp
sbb
fldenv
icebp
cmp
add
or
je
jne
xchg
pop
push
pop
xor
pop
in
jno
jno
jne
xor
je
and
imul
xchg
loop
iret
xor
pushf
imul
sbb
rol
inc
push
movsb
dec
jnp
test
add
mov
jmp
pop
int3
jb
sbbl
lret
sbb
int3
mov
and
xchg
aam
pusha
xchg
push
mov
xchg
inc
mov
cmp
jmp
mov
cli
add
out
ds
scas
popa
mov
xchg
and
inc
mov
mov
in
push
push
std
pop
or
sub
sti
xchg
pcmpgtw
inc
daa
fcompl
enter
jo
pop
mov
push
in
scas
out
cld
jns
into
in
insl
lret
shll
cmp
push
pushf
insb
sub
imul
add
xor
add
jle
cmp
psrld
pushf
add
pop
jmp
adc
pop
push
cmpsl
pop
outsb
adc
cs
out
dec
into
daa
jnp
sbb
in
ret
aad
inc
sub
popf
xchg
mov
shll
jg
clc
and
inc
lock
pop
fs
and
jl
xlat
imul
outsl
mov
inc
or
ja
sub
mov
push
das
push
mov
sbb
inc
jle
cmp
insb
and
mov
dec
and
xchg
ja
jne
mov
fstl
xchg
aaa
mov
pusha
scas
js
lea
xor
or
mov
shll
sbb
sbb
xchg
mov
push
ss
imul
or
add
inc
scas
cmp
sub
dec
pop
xchg
mov
pop
pop
scas
cmpsl
push
ds
je
jns
sbb
mov
sbb
push
mov
test
or
xchg
icebp
roll
cmp
je
sbb
jp
and
inc
add
sub
xchg
and
add
cmc
push
test
hlt
pop
add
shlb
xchg
insl
fcomip
add
inc
negb
xchg
lods
insl
pop
mov
push
lcall
jmp
mull
imul
icebp
pop
insl
cmp
dec
out
arpl
xlat
pop
loope
sbbb
leave
lods
mov
imul
or
xor
inc
ss
cmc
adc
jle
sub
xorb
lods
push
jbe
pop
push
mov
jmp
jge
or
pop
pop
cmp
loopne
fisubl
pusha
jne
int3
sar
or
xchg
jns
pop
cmp
fistpl
icebp
daa
push
mov
cmp
shll
xchg
mov
sbb
push
clc
inc
pusha
cmp
aad
push
fstl
and
adc
or
mov
push
outsb
xchg
dec
jnp
sub
pop
inc
pop
cmp
xor
in
fdiv
jl
mov
dec
xchg
testl
add
xchg
fldl
loope
mov
add
scas
movsb
adc
adc
scas
les
ret
fs
out
and
js
test
cmp
dec
incl
fsubs
icebp
fs
fstpl
pop
test
jae
popa
mov
inc
push
das
test
cli
in
inc
daa
adc
jno
shl
dec
push
cs
lret
cwtl
mov
test
xchg
cmpsl
sarb
lds
stos
lcall
and
dec
fistpl
imul
fsubrp
lods
adc
xchg
mov
mov
in
xlat
mov
mov
stos
sti
mov
dec
cmp
mov
push
stos
sahf
iret
add
mov
jo
mov
ss
mov
dec
xchg
lcall
xchg
push
jp
shr
jae
mov
xchg
gs
fstl
dec
stos
adc
xchg
daa
jmp
mov
sbb
sub
pop
xlat
enter
lods
push
data16
ss
push
iret
sub
push
inc
xor
push
sub
xchg
and
lods
adc
loope
push
insb
aaa
mov
cmp
cmp
orl
jne
and
add
leave
outsb
xchg
sbb
scas
jno
fidivrl
lsl
mov
or
adcb
lds
mov
sbb
pop
xchg
add
mulb
hlt
xor
in
pop
int3
imul
jmp
mov
pop
sbb
dec
push
ror
sbb
mov
in
push
dec
and
sub
pop
sub
pop
das
mov
ja
pop
xor
cmpsl
fs
mov
out
xlat
popf
loop
sbb
pop
jmp
pop
in
ja
mov
rorb
adc
dec
mov
loopne
hlt
inc
inc
push
and
lret
jb
lods
adcl
popa
rolb
je
jecxz
mov
add
arpl
ss
sub
push
mov
int3
mov
xor
cltd
int3
mov
push
push
and
and
mov
xchg
arpl
mov
or
fildl
gs
dec
aaa
test
mov
xlat
cmp
cmp
outsb
movsb
xchg
and
lcall
sti
cmpsb
outsb
xchg
pop
pop
and
sub
cmp
dec
jp
imul
outsb
sub
lahf
xlat
outsb
jecxz
push
sub
inc
jo
in
and
fbld
adc
scas
repnz
adc
ljmp
cmp
jecxz
and
xor
xchg
out
dec
push
shlb
fnstsw
dec
sahf
movsb
cs
xchg
push
sbb
dec
das
mov
gs
jo
movsb
rcll
movl
xchg
pop
nop
cmp
int
jb
push
jnp
push
cmpl
jbe
testb
sbb
adc
insb
dec
adc
cwtl
shlb
in
lahf
pop
repnz
pop
andb
lods
loop
loope
in
rcl
test
sbb
xchg
pop
sti
pop
sbb
gs
sub
jo
cmp
jns
loope
mov
inc
push
lods
adc
inc
cld
lea
sahf
xlat
insb
add
and
adc
sub
sbb
ljmp
sbb
scas
pop
arpl
sbb
or
in
mov
mov
jle
aad
or
push
dec
lea
hlt
pusha
imul
dec
jnp
or
pminsw
add
fmull
lods
mov
mov
out
aas
push
in
subl
sbb
out
sbb
sbb
push
xor
and
test
add
lahf
shr
ret
lahf
stc
lds
sarl
popf
push
fnstenv
test
adc
dec
sahf
mov
mov
adc
xor
and
adc
out
outsb
call
lahf
and
ljmp
pop
scas
sahf
adc
icebp
add
add
sbb
xchg
sub
test
cld
jmp
inc
cli
adcl
cs
jecxz
jp
xlat
or
and
sub
cmp
mov
xor
inc
or
addl
movsb
inc
xor
push
test
mov
test
lods
lcall
push
shrb
in
fwait
adc
jecxz
mov
sti
loop
insl
dec
cli
push
push
mov
mov
ljmp
fcompl
aam
cwtl
or
and
sbb
mov
shrb
inc
cmpsb
sub
pop
cmp
xor
ljmp
dec
jl
insb
insb
pop
jmp
and
inc
insl
test
push
or
sbb
shlb
hlt
mov
js
mov
jno
push
rcl
add
cmc
dec
test
mov
lret
dec
fdivl
push
mov
inc
pop
andnps
mov
pushf
inc
ucomiss
popf
sahf
bound
ljmp
lea
scas
jno
notl
sub
sub
mov
movsl
jmp
xor
gs
aad
addb
mov
inc
mov
jmp
hlt
test
ja
pop
adc
and
scas
inc
mov
push
or
lcall
add
cmp
out
fists
cwtl
pusha
insl
add
jge
and
mov
incb
add
pop
in
sub
mov
rolb
daa
mov
cmp
cmpsb
shlb
xchg
mov
mov
dec
push
loope
and
cmpsl
pusha
dec
stc
sti
push
mov
and
xor
dec
cmp
icebp
int
jns
andl
jg
leave
push
or
fisubrs
mov
sub
mov
dec
jno
loope
fs
insl
push
ret
cmpsl
adc
xlat
push
mov
mov
or
fbld
and
mov
jecxz
cwtl
cmp
xchg
or
mov
rol
in
xchg
pushf
dec
hlt
mov
dec
add
inc
aad
or
jnp
popa
sbb
push
mov
push
adc
sub
lret
pop
insb
leave
sahf
pusha
jmp
shr
jae
int
orl
sub
mov
stos
out
cli
cli
xor
and
sbb
mov
daa
jecxz
and
in
scas
mov
adc
jmp
sbb
sbb
push
out
shl
testl
pop
movsb
sbb
loope
pop
int3
aam
xchg
cmp
pop
pop
je
out
push
addr16
mov
and
fisttps
out
or
nop
mov
shl
dec
stos
fucomi
pop
shrb
push
stos
mov
inc
add
lahf
fwait
sbb
insb
into
and
loopne
inc
aas
mov
mov
fistl
loop
lea
xor
sbb
dec
pop
leave
lods
xor
mov
lret
mov
sbb
mov
mov
push
push
inc
sub
cmc
arpl
pop
sub
or
cmpsl
rcrl
aad
ret
stos
pop
pop
jo
xor
lods
jb
out
dec
pusha
jae
int
sbb
pusha
and
sbbb
mov
xor
leave
aas
sbbb
mov
das
fcoms
push
sarb
sbb
xor
push
out
data16
sbb
mov
and
rol
inc
push
test
stos
pushf
fstps
and
xor
jp
and
fs
sub
psrlw
dec
jae
fiadds
sti
mov
add
and
sahf
mov
shld
pop
es
adc
adc
inc
xchg
xchg
test
adc
insb
and
lods
jno
pop
ror
lahf
cmp
lahf
or
sbb
inc
dec
dec
jnp
pop
add
add
jnp
xchg
and
sub
xor
mov
sub
mov
fldcw
mov
xchg
arpl
sbb
aam
in
sarl
xor
and
mov
frstor
loopne
int
pop
xor
xchg
xchg
and
push
test
sbb
pop
lods
mov
add
mov
div
adc
inc
jge
aas
pop
movsl
pop
es
pop
out
lea
int3
js
pop
adc
push
cmp
movsl
or
pop
and
fmull
loope
scas
sub
ljmp
lea
adc
mov
pop
sub
cltd
xor
push
repnz
rolb
xchg
add
xchg
cmp
xchg
repnz
movsb
push
mov
fimuls
inc
adc
idiv
push
add
addr16
adc
and
add
pop
mov
mov
fcmovnb
xchg
mov
sub
push
movswl
jecxz
imul
inc
mov
jg
je
insb
mov
js
test
and
xchg
lea
mov
xor
pusha
fwait
jb
fdiv
mov
push
into
sub
call
jp
jle
das
sub
lds
or
insb
lock
jb
jmp
pop
inc
int
push
mov
push
int
pop
test
mov
xor
dec
jnp
jno
mov
add
xchg
sub
push
cwtl
push
daa
push
pop
jp
mov
outsb
popf
mov
dec
add
xchg
jg
pop
subb
mov
movsb
aam
xchg
les
mov
or
test
inc
inc
imul
imul
dec
ja
out
xchg
out
pusha
mov
lea
mov
xchg
xor
sar
sbb
rorl
dec
fcmovnbe
push
out
jbe
jmp
lahf
es
aam
std
mov
dec
mov
int3
add
xor
movsb
stos
inc
dec
fisubrl
in
add
jmp
mov
sahf
out
out
push
pusha
cmp
sbb
push
sub
into
filds
jmp
or
fs
pop
sub
dec
add
int
sbb
bound
dec
popa
jmp
xor
sub
je
sahf
add
fdivl
sbb
arpl
pop
jmp
and
push
pop
aam
inc
jns
sbb
sub
mov
sub
jmp
push
in
push
js
imul
push
add
testb
addr16
int3
xchg
adcl
frstor
in
lods
rcr
mov
jmp
dec
sbb
rorl
pop
shl
push
insb
sub
leave
jo
cwtl
add
test
mov
jo
int
jge
jns
rol
inc
test
or
mov
inc
xchg
push
insl
xchg
out
aam
int
stos
ljmp
bound
cmp
jecxz
push
cmp
push
ja
and
adc
mov
inc
popf
and
sahf
or
adc
movsl
xchg
stc
xchg
divb
in
jmp
nop
add
test
cld
sbb
or
fdivrl
and
inc
jo
cwtl
or
lods
add
jge
in
mov
gs
js
shrb
mov
pop
cmpsb
mov
mov
cmp
out
jns
scas
subl
mov
stc
pop
jnp
sar
mov
lea
adc
addb
fs
push
jecxz
ret
out
xchg
stos
mov
lea
aas
and
inc
dec
les
sub
aas
adc
aam
inc
jg
xor
xchg
call
sbb
mov
leave
xchg
push
sbb
push
jo
stos
xchg
outsb
cmc
jae
mov
pusha
xor
in
call
mov
ljmp
and
ret
fistps
outsb
pop
lahf
xchg
xchg
xor
inc
inc
int
inc
lods
dec
imul
es
scas
adc
and
mov
sub
sbb
in
outsl
xchg
mov
mov
iret
add
sbb
sahf
stos
pop
mov
dec
sbb
int3
mov
jge
add
das
or
flds
sub
push
rcrl
popa
arpl
lahf
mov
popa
push
jns
inc
inc
sub
les
xor
mov
leave
ret
push
jl
ds
das
push
dec
shll
mov
push
call
clc
mov
cmp
fucomip
cmp
and
clc
inc
dec
std
mov
scas
repnz
mov
sub
pop
out
movsb
loope
out
fmulp
mov
stos
ja
mov
push
das
sti
dec
lret
push
das
and
add
sub
xchg
xchg
cmp
incl
pop
inc
mov
push
push
sarb
gs
movsl
jecxz
or
inc
into
cmp
dec
aad
dec
inc
icebp
add
sarl
stc
jno
les
sti
jo
shlb
sbb
mov
jb
lahf
cmp
jno
xchg
pop
jg
mov
popl
or
incl
and
mov
xchg
mov
das
push
orl
lahf
xor
dec
and
mov
pop
pop
cmp
loope
cmc
add
inc
rcll
andb
add
mov
and
in
out
out
sbb
int3
adc
add
stc
loope
test
es
mov
vmread
int3
lret
ljmp
push
arpl
les
pusha
mov
popa
inc
cli
push
js
nop
lods
stc
sbb
jp
cmp
movsl
lret
enter
cmp
js
mov
lds
add
xor
loope
std
pusha
xor
gs
in
push
adc
movsb
sahf
sbb
inc
xchg
loope
in
gs
and
aam
out
mov
and
mov
push
pop
inc
mov
sub
dec
sahf
pop
inc
js
imul
in
mov
bound
aaa
jb
insl
outsl
repz
cltd
fistps
mov
int
and
lahf
push
pusha
inc
jge
adc
mov
adc
inc
insl
orl
outsl
dec
mov
xchg
and
sbb
cmp
inc
test
jmp
add
shlb
test
xlat
lea
dec
rolb
push
push
cmp
pop
xchg
cmp
bound
push
mov
subl
xchg
hlt
andl
mov
pushf
out
call
in
icebp
xor
fnstsw
js
sahf
sti
aas
subl
lahf
insl
inc
sub
jp
arpl
mov
shll
xchg
imul
aad
outsb
xor
movsl
push
mov
xor
inc
jmp
mov
push
sub
jle
test
popa
daa
aad
dec
dec
cmp
pop
sbb
andnps
add
add
sbb
pop
mov
mov
and
es
scas
sbb
lds
and
std
andb
imul
mov
out
dec
xchg
sbb
cmpsl
push
push
mov
mov
or
pop
add
xchg
mov
jl
jmp
mov
inc
dec
movsl
sub
loop
xchg
jns
loopne
add
test
push
xlat
pop
mov
testb
rclb
xor
sbb
pop
loope
xor
cmp
jmp
std
adc
inc
pop
mov
mov
fmull
repnz
push
xchg
xor
jns
mov
aam
lcall
push
enter
gs
xchg
cmp
cmp
imul
xchg
dec
or
shl
xor
inc
test
in
sti
lods
cmp
xor
adc
ja
cmp
in
shll
inc
shl
mov
roll
jmp
adc
inc
ffreep
call
and
rcrl
test
loope
fiadds
das
jne
xchg
loope
jae
or
cmc
sub
cmp
xor
pop
movsb
xchg
push
sahf
int
jns
xorl
sub
cwtl
sub
mov
jns
pop
pop
cmp
stc
js
flds
stos
jmp
mov
mov
mov
notb
xor
xchg
adc
mov
sbb
jecxz
arpl
daa
mov
dec
in
pushl
sbb
pushf
test
and
popa
js
lahf
mov
and
es
and
aaa
pop
mov
mov
mov
and
and
push
test
scas
enter
lock
cli
inc
dec
sbb
pop
xor
xor
std
outsl
sbb
add
cmp
mov
dec
inc
jg
mov
mov
jmp
adc
push
dec
cs
and
cmpsl
test
rol
jmp
xor
or
lret
push
mov
mov
insl
jnp
jns
orb
sub
inc
xchg
adc
xchg
ret
in
adc
adc
cmp
lods
in
pop
xchg
pop
imul
mov
mov
imul
push
jno
jl
fnstsw
mov
and
mov
push
push
aas
mov
cmp
inc
mov
jbe
stos
pop
fistps
imul
cmp
shl
leave
jae
mov
pushf
pop
cmpsb
cmp
xor
insl
jmp
lcall
scas
push
sbb
xor
mov
mov
lea
int
loopne
sub
xor
add
push
enter
sbb
lcall
push
es
pop
dec
and
adc
jg
cmp
imul
mov
dec
outsl
mov
mov
lcall
cli
popa
pop
cmpsl
gs
pop
sub
repnz
insb
push
dec
or
cmp
out
jno
pop
inc
inc
xor
mov
cmpb
sbb
ljmp
mov
pop
jns
fidivrl
pop
xor
xlat
in
cs
fisttpll
xchg
mov
shrl
pop
sub
add
das
cmp
je
and
mov
cmp
dec
sbb
cmp
pop
jo
or
lods
imul
sub
call
call
fwait
pop
jp
jnp
xchg
shrl
cmp
adc
and
sbb
xlat
pushf
fs
add
xor
xabort
and
mov
mov
adc
xlat
dec
inc
xchg
fwait
std
in
sbb
mov
jbe
aaa
xor
jl
cmp
lods
xchg
mov
sahf
jne
and
sub
add
repnz
adc
or
jae
pop
scas
lret
pop
and
pop
jecxz
add
xchg
dec
test
mov
jge
jp
out
pop
and
add
jb
test
sub
movsb
setno
adc
test
out
xor
xchg
filds
ret
mov
rcrb
pop
fcmove
sarl
jecxz
inc
movsb
fnstenv
push
test
push
lahf
inc
cmp
shld
jmp
cli
dec
popf
or
lea
fnstcw
adc
pop
jmp
stc
and
cmp
sub
sbb
push
es
adc
fisttpl
or
stc
and
in
sahf
xor
enter
adc
push
lcall
stc
inc
pusha
cmp
xchg
lahf
lea
out
test
mov
jmp
mov
pushf
mov
loope
sbb
aad
lods
and
rolb
inc
mov
push
pop
aam
loope
lods
popf
arpl
leave
gs
dec
out
cmp
roll
jbe
loopne
ret
negb
mov
daa
rcrl
xor
mov
or
dec
xchg
sbb
push
mov
sub
cmc
xchg
mov
inc
xchg
cmp
pop
out
mov
and
mov
xlat
lock
fcmovnbe
rolb
xor
jcxz
outsl
rcrb
cmp
dec
pusha
adc
ds
jns
rcrb
movsb
push
roll
sub
es
push
data16
in
mov
xor
sbb
mov
bound
inc
test
sub
sub
dec
push
jae
dec
pop
ja
xor
push
es
fcompl
rorb
or
bnd
rcrb
je
rolb
xor
out
lock
out
into
aam
je
mov
test
mov
sub
int3
mov
cs
push
jp
mov
ret
jnp
dec
cmpsl
and
pop
dec
test
cwtl
sbb
ja
cmp
push
shl
xor
or
cmp
insl
out
rorb
xchg
push
sti
js
sub
les
fs
or
jbe
mov
adc
lahf
xchg
nop
inc
jno
cs
adcl
push
loope
pop
testb
xor
popa
ror
fs
xchg
pop
xor
sub
jmp
or
arpl
sub
push
sbb
js
in
mov
imul
pop
pop
int3
fisttpl
fistps
push
mov
xchg
arpl
out
add
xchg
sub
lods
out
outsb
mov
mov
jb
nop
sarb
cmp
daa
roll
test
lcall
mov
or
call
lahf
inc
mov
jl
adc
mov
pop
sbb
data16
add
jge
add
cltd
testl
mov
sub
inc
inc
addr16
pop
dec
sbb
mov
mov
pop
and
icebp
hlt
xlat
inc
lret
popa
push
adc
lcall
mov
xchg
mov
cld
nop
xlat
mov
out
mov
popa
xor
into
cmpsb
outsl
xchg
popa
xchg
adc
gs
inc
fsubrl
pop
ds
ret
aaa
sbb
xlat
aad
fidivrs
add
les
mov
adc
cwtl
xchg
push
xchg
pop
lods
dec
mov
into
data16
sbb
lret
lret
xor
pop
cmp
in
inc
lahf
add
push
push
xlat
daa
lret
or
js
gs
sub
aad
les
or
stc
mov
sub
sbb
inc
mov
cmp
sahf
xchg
adc
push
insb
or
sub
mov
rcr
pushf
and
or
aaa
inc
call
out
in
pop
lret
je
dec
xchg
in
push
xchg
xchg
in
cwtl
lock
dec
mov
aas
jg
rcrb
fmull
jmp
arpl
in
push
inc
mov
push
in
mov
in
pop
fs
dec
jecxz
pop
jns
in
push
js
inc
lret
fucomip
das
mov
xlat
cmp
cwtl
pmulhuw
inc
daa
push
testb
and
lahf
in
mov
jg
pop
lock
xor
and
in
in
sarl
sbb
pop
jp
push
lret
daa
xchg
jge
fidivl
ja
jge
insl
jmp
in
xchg
jo
mov
pop
lods
call
lea
sub
push
jmp
mov
push
jae
imul
push
daa
pop
andl
push
jge
ds
mov
mov
cmpsb
sub
sbb
lds
nop
nop
shlb
popa
cmp
push
mov
xchg
mov
mov
push
dec
sub
adc
xchg
sbb
mov
imul
int
je
sarl
or
mov
xchg
push
fiadds
ds
pop
in
xchg
push
push
mov
and
shlb
mov
std
mov
sbb
push
jmp
jle
push
mov
dec
mov
in
stc
xchg
sub
in
sbb
and
cltd
ds
test
out
test
scas
dec
les
js
and
adc
mov
xor
fisttpl
cmp
xchg
imul
fcom
sbb
mov
daa
dec
ret
mov
fistpl
out
roll
loopne
dec
sub
dec
jecxz
std
jmp
gs
cmp
cmp
push
jae
lods
inc
and
inc
lcall
lahf
out
mov
add
in
mov
shrl
mov
xchg
call
xor
in
cmp
jbe
lahf
arpl
push
sbb
popa
xchg
out
pop
insl
add
adc
push
adc
hlt
mov
dec
mov
mov
jb
aam
adc
daa
lds
pop
push
cwtl
popf
rcll
popa
sub
scas
imul
sbb
xchg
add
pop
mov
cmpsl
aad
pop
adc
cwtl
insl
cmp
dec
mov
and
negb
cmp
or
into
aaa
mov
pop
inc
imul
subl
inc
or
lahf
sbb
js
adcb
xchg
movsl
enter
mov
pop
aad
insb
xchg
shl
adc
lahf
mov
adc
cwtl
enter
fmull
push
ffree
movsb
insl
xor
pop
jge
sbb
inc
insl
mov
lock
in
mov
xor
roll
test
ss
sbb
shlb
mov
ds
popf
push
leave
inc
data16
mov
imul
pop
test
cs
push
sbb
jno
sbb
mov
mov
or
jge
and
xchg
imul
pop
bound
pop
test
data16
mov
in
mov
jnp
push
shll
mov
shrd
es
jecxz
popa
cmp
pop
imul
outsl
iret
sbbl
in
mov
jmp
dec
in
std
mov
and
add
cmp
adc
cmp
lcall
fstpt
adcl
jae
push
cmp
mov
cmpsl
pop
loope,pn
xor
dec
sbb
shlb
cld
xor
inc
inc
pushf
and
jno
xchg
test
incb
jl
scas
mov
out
pop
jmp
sub
lods
insl
inc
stos
es
out
add
pop
pop
popa
add
cli
sub
cmpsb
das
jg
out
mov
aad
shrl
int
and
adc
adc
test
sub
subl
adc
mov
sbb
push
ror
cmp
push
fldcw
and
imul
mov
jne
pusha
out
fists
or
lods
lock
dec
push
xor
filds
fistps
jb
pushf
adc
push
lods
es
push
mov
rol
pop
adc
lret
dec
inc
fnstcw
addr16
sarl
imul
cwtl
pop
loope
std
shld
pmuludq
shll
xor
sub
outsb
mov
ror
mov
sub
repnz
test
pop
jecxz
data16
shll
orl
push
fbstp
out
cmp
jne
paddsw
insb
sbb
shl
pop
xorl
xchg
add
in
lret
push
addr16
sbb
push
gs
insb
dec
jne
fidivrl
dec
in
test
and
es
jb
cmp
sbb
xchg
int
or
push
ljmp
adcb
mov
repz
and
add
jbe
addr16
jno
pop
sub
fsubrl
iret
icebp
adc
shlb
sbb
cs
xchg
pop
mov
fcomps
push
shrl
pop
sti
lods
das
xlat
inc
inc
ds
cli
or
leave
test
or
jb
sbb
mov
popa
xor
jp
xor
add
xchg
loope
negl
stc
lea
popa
jl
cltd
gs
jno
cwtl
sub
repz
idivl
pusha
or
cmpsl
mov
or
test
mov
sbb
aam
pop
xlat
ljmp
insb
sub
sbb
sahf
iret
popf
push
sub
popf
js
daa
dec
fwait
jo
fcomip
popf
outsb
movsb
xchg
jnp
adc
in
adc
push
push
xor
addl
scas
sbb
aad
les
int
mov
mov
and
jb
jl
in
je
int3
scas
loope
into
cmp
ret
jnp
mov
pusha
push
mov
adc
adc
dec
lret
push
pop
mov
mov
div
daa
xchg
pushf
jne
pop
mov
jg
jmp
dec
or
mov
jg
jmp
jle
xor
jbe
jno
xchg
in
inc
xorb
gs
in
adcl
test
xchg
ljmp
add
movl
sarb
mov
jnp
push
adc
ljmp
shl
cmc
push
or
adc
or
push
sub
mov
ret
lods
fsubrs
jo
mov
xchg
cwtl
lret
lods
roll
rorl
push
aaa
popf
adc
js
aas
push
in
call
hlt
movsb
in
jnp
stos
stc
xchg
push
fidivrs
fsubl
int3
ljmp
mov
call
imul
in
jo
sub
in
cwtl
shll
int3
sub
cltd
shll
push
cmp
scas
push
jmpw
cmp
nop
shl
movsl
loope
or
mov
gs
xchg
push
pop
hlt
repnz
xchg
stc
out
mov
loop
je
inc
and
shll
mov
stos
push
jg
pop
adc
stos
arpl
scas
fwait
cs
dec
cmc
out
in
sti
dec
push
xchg
xor
addr16
mov
icebp
dec
mull
add
je
or
mov
xorl
mov
add
cmovb
mov
in
sbb
insl
xlat
pop
fs
adc
cli
daa
inc
mov
adc
push
pushf
es
arpl
or
pop
sbb
jl
js
popa
fbld
insl
push
xchg
imul
faddp
mov
and
loopne
scas
push
push
mov
push
or
or
cmp
test
mov
xchg
pop
jle
divb
out
imul
jl
sub
inc
dec
cmc
jmp
arpl
clc
ficoml
lahf
loop
test
pop
in
ds
pop
inc
lods
and
lock
out
lods
frstor
pop
sub
xor
add
add
les
xchg
dec
in
xor
add
ss
mov
test
push
ja
sub
in
xor
inc
ret
dec
hlt
int3
cltd
aam
push
shrl
pushf
xchg
xchg
jno
add
mov
in
mov
sub
cmp
aam
js
xorb
jo
ficoms
pop
sbb
and
xor
lcall
jge
lcall
push
ret
mov
fs
jo
push
inc
nop
stc
xchg
repnz
sbb
and
subl
and
test
pop
sbb
in
jae
rorl
sub
jo
add
repz
loopne
roll
das
and
xchg
popa
cmc
jns
and
scas
ljmp
pop
popa
jle
lea
loopne
lcall
lods
jmp
rcrl
pop
loop
pop
mov
aam
les
pusha
mov
std
jecxz
lds
jge
sbb
pusha
sbbb
rcr
sbb
add
fistpl
sub
stos
xor
or
sub
dec
mov
popf
outsb
packsswb
movsl
lahf
mov
jle
mov
lods
or
push
and
xchg
jp
and
test
sbb
out
or
rorb
mov
out
lret
filds
or
inc
test
jecxz
push
push
xlat
xchg
pop
loopne
push
insb
int
push
js
ja
rorl
jecxz
xor
sbb
sarb
dec
add
sti
lret
push
sub
mov
push
in
ret
sub
rclb
mov
lea
fstps
test
push
cmp
mov
call
lock
rorl
push
add
daa
out
mov
push
adc
rcl
daa
sub
mov
xor
adc
fmuls
mov
iret
mov
xor
pusha
pushf
sub
iret
hlt
and
fbld
enter
cmp
popa
cmp
mov
and
out
rclb
dec
cmp
stc
out
and
sbb
sbb
mul
sahf
mov
mov
add
jnp
jmp
jg
dec
cmp
in
mov
xchg
out
popa
imul
lret
xor
test
push
rorl
xchg
push
stos
cmp
mov
jp
movsl
sbb
add
test
cmpsb
xchg
movsl
in
push
dec
xlat
icebp
jae
xchg
pop
and
push
fs
cmp
imul
xchg
outsl
jnp
hlt
push
shll
jecxz
push
hlt
call
mov
ficompl
push
jl
pop
movsl
jo
hlt
dec
sbb
inc
arpl
cmp
sti
push
fs
jecxz
addr16
les
sbb
gs
and
iret
mov
pushf
and
loope
mov
cmpsb
cmp
outsl
test
mov
movsb
push
out
pop
jge
test
sbb
sub
ret
rclb
scas
shll
fcoml
pop
or
push
jnp
bound
imul
pusha
inc
leave
or
dec
jle
mov
pop
sub
adc
pushf
xor
ss
add
loopne
in
cld
cmp
sbb
push
jmp
add
sub
xchg
test
cli
test
jno
outsl
cwtl
addb
add
jge
sub
and
pop
pop
mov
xor
outsb
or
enter
jg
sbb
mov
mov
xlat
je
sbb
insl
nop
pusha
scas
icebp
das
add
or
sbb
repz
into
pop
inc
inc
inc
cmpsl
insb
lds
into
xchg
in
cmp
inc
je
test
mov
pop
arpl
or
aad
mov
cltd
jecxz
or
ret
sahf
mov
xchg
cmp
or
out
inc
data16
xlat
adc
adc
out
pop
fs
sti
jb
cmp
inc
jecxz
repnz
push
push
lods
adc
fidivs
xor
mov
cmp
sub
xchg
jl
cmpl
in
sub
cmp
cmpsl
dec
inc
fdivrs
inc
scas
dec
xchg
xor
and
test
nop
jge
jno
idivb
popf
dec
xor
iret
cmp
int
add
inc
std
sahf
stos
movsl
shll
jecxz
or
xchg
fwait
loope
cli
sbb
cmc
insb
mov
mov
adc
lods
cmc
int
loop,pn
mov
das
jle
negb
fstl
movsl
push
xor
cmp
lods
mov
in
outsl
cmp
test
and
sbb
and
xchg
lahf
sbb
mov
sub
cmpsl
push
mov
xchg
lret
pop
cmp
dec
cmp
jns
fildl
cmpsb
scas
cli
fisubrs
rorl
push
mov
mov
xlat
in
outsl
sub
push
and
sbb
shlb
push
inc
scas
xor
scas
cs
inc
xor
lret
inc
dec
call
adc
and
cmc
mov
in
or
lcall
lea
lret
nop
sub
test
fcoml
lock
enter
cli
xchg
outsb
cltd
int
daa
mov
jecxz
lret
paddb
ljmp
rorb
mov
int3
mov
outsl
mov
jno
nop
stc
pop
cmp
dec
das
pcmpgtw
lds
insl
fiadds
pop
rolb
sarb
addb
ds
jae
insb
jle
mov
xlat
mov
das
pop
push
fstpl
sti
fwait
mov
leave
into
mov
cmp
pop
mov
push
test
mov
or
adc
cli
sub
jecxz,pt
scas
lret
inc
sarl
dec
xchg
arpl
stc
cmp
push
xchg
nop
ljmp
pop
int
jne
inc
add
cmp
xlat
insl
jg
ret
pop
lods
push
mov
inc
dec
jns
icebp
call
jmp
les
mov
arpl
js
dec
fcomps
mov
notb
aam
jecxz
mov
and
test
loop
mov
movsb
xchg
dec
add
push
mov
jp
sbb
test
add
out
xor
inc
cmovg
aas
jno
dec
push
mov
push
jnp
je
into
int
mov
pop
data16
dec
lea
leave
cmc
mov
icebp
into
enter
jns
ja
dec
es
adc
push
aad
mov
stc
mov
cs
push
lahf
and
adc
and
push
and
mov
stos
das
jne
xor
pop
push
or
xlat
jp
filds
dec
rcr
mov
cli
jno
ljmp
sbb
rcrl
icebp
repnz
and
nop
inc
inc
daa
xchg
lods
leave
dec
popf
pusha
push
sbb
cmpsb
sbb
or
mov
mov
xor
pop
xorb
iret
push
and
cltd
add
cmpl
scas
lods
push
inc
xchg
int
mov
push
sub
outsb
movsl
into
cmc
je
mov
sbb
dec
sub
sub
scas
into
scas
jge
aaa
push
cmpsl
push
xor
int
mov
cmpsl
rorl
fnstsw
repnz
popa
loope
scas
es
jle
lahf
pop
inc
dec
js
pop
sahf
adc
add
scas
xchg
clc
lret
add
fwait
hlt
pusha
jmp
sub
fs
mov
or
xchg
xchg
fdivs
add
cli
lock
idivb
xchg
test
mov
mov
sahf
ret
test
aam
add
xchg
and
not
shlb
data16
xchg
ja
dec
in
lcall
jmp
mov
test
sub
jns
mov
push
inc
sbbb
sbb
into
mov
mov
pop
jne
mov
sahf
or
hlt
dec
in
or
mov
cmpsb
movsl
jge
popf
jmp
into
scas
jle
out
test
sbb
fdivr
sub
stos
lods
push
sti
sbb
cmp
sub
push
cld
add
mov
mov
dec
js
push
sti
insb
clc
pop
fs
lahf
sbb
in
arpl
or
mov
nop
lods
shlb
cmp
hlt
xorb
addl
sub
std
scas
sbb
push
adc
imul
hlt
rol
dec
and
loop
mov
ljmp
imul
push
or
iret
shrb
cmpb
pop
and
pop
enter
jbe
jae
imul
xor
mov
fimuls
xchg
jns
adc
bound
mov
mov
xor
subb
pop
xchg
outsl
adc
cld
iret
nop
fcom
fcmovnbe
lahf
fs
jge
test
insl
scas
xor
inc
inc
add
jae
aaa
inc
pop
sbb
jnp
inc
dec
mull
mov
in
and
inc
mov
push
mov
nop
leave
xor
inc
shrb
aas
gs
pop
mov
dec
sbb
and
push
popa
fcmovb
pop
mov
xor
jns
add
jl
mov
jns
in
jl
jne
and
cmovge
fsubr
movsb
xchg
popa
movsb
lock
movsb
std
adc
and
mov
js
data16
lods
pop
mov
mov
and
aas
test
insb
pop
pop
repnz
dec
mov
jae
or
mov
out
adc
and
or
mov
lcall
and
jno
out
mov
mov
negb
add
push
rcrb
or
sbb
out
mov
ss
shr
stos
lods
arpl
fs
ja
inc
mov
pop
inc
jnp
les
cwtl
shl
jo
push
imul
mov
dec
pop
in
pop
jns
xchg
test
mov
inc
push
js
and
pop
xchg
adc
pop
hlt
and
xchg
je
xor
cmp
sbb
cmpsb
negl
xor
sbb
mov
push
cmp
mov
cmp
mov
iret
sub
jle
jno
mov
and
mov
cmp
fisubrl
lea
cmc
mov
mov
sub
into
adc
jmp
cmp
lds
cwtl
iret
push
push
mov
jns
testb
fwait
cmp
ficoms
cmp
push
dec
add
out
mov
jae
inc
insl
xor
fwait
pop
pop
mov
popa
pop
mov
rol
add
and
cmpsb
mov
pop
xchg
inc
cmp
ljmp
mov
lods
cli
je
lea
hlt
test
lea
popf
lods
mov
aaa
pushf
push
add
aad
scas
push
lods
push
flds
push
jo
arpl
adc
adc
es
ljmp
jecxz
push
mov
movsl
shll
lods
movsl
pop
xor
imul
shlb
jge
cmp
mov
enter
mov
adc
test
int
xchg
mov
and
jne
pusha
bound
xchg
dec
mov
addr16
bound
roll
fisttpl
mov
ljmp
clc
es
jnp
shlb
test
push
jne
into
stc
pop
movsl
cmpsl
insb
cltd
jo
mov
push
mov
xchg
pop
aaa
inc
iret
ljmp
or
lret
fcoms
loope
xchg
push
sub
sbb
leave
iret
inc
mov
pop
lret
adc
jg
mov
repz
xchg
sub
pop
adc
daa
lds
loope
jl
xor
cs
xchg
cmp
sbb
icebp
in
in
leave
jg
jg
mov
in
cmc
aad
call
add
or
adc
sub
pop
movsl
cltd
dec
cltd
iret
ljmp
xchg
addb
push
cmpsl
popa
lcall
mov
cli
xor
nop
push
jns
mov
push
dec
ret
add
sbb
adc
test
divl
and
loope
add
outsl
xorl
insb
std
mov
sbb
xchg
xchg
cltd
stos
or
movsb
mov
jno
push
mov
popa
test
bound
lock
clc
add
cltd
lods
cmp
and
cmp
adc
pop
sub
decb
add
push
mov
jae
xlat
jbe
daa
and
jns
push
jne
pop
cmp
ja
push
out
test
and
icebp
jg
jnp
push
addr16
inc
and
mov
inc
mov
cmpsl
pop
loopne
sbb
jb
sbb
xor
xchg
pop
sbb
pop
pop
dec
repz
xchg
cmp
mov
push
sbb
pop
repnz
adc
push
xchg
adc
or
insb
lods
sbb
rolb
cmp
adc
and
loope
cwtl
fstpl
jae
add
adc
aad
lods
sbb
inc
es
js
insl
out
fcmovne
negl
test
pusha
xchg
lret
jp
cli
rorl
popa
mov
addr16
leave
mov
mov
adcl
lock
pop
jecxz
xchg
mov
in
dec
jmp
pop
enter
xlat
movsb
outsb
inc
jb
rclb
mov
dec
fsincos
sbb
mov
mov
mov
add
iret
jo
mov
mov
cmp
push
mov
flds
popa
sub
fisttpll
test
stc
aas
mov
xor
std
xchg
cltd
mov
sub
inc
jno
sub
push
je
cli
jb
std
fists
mov
and
adc
fadd
cmc
push
push
cmp
dec
push
pop
lods
leave
stos
xchg
pop
xor
data16
cmp
xchg
scas
aaa
adc
stos
out
sti
loop
mov
adc
xchg
adc
das
cmpsb
add
lods
aas
shll
and
xchg
in
sub
xor
rcll
or
xchg
popa
loopne
sbb
xor
mov
jb
cli
daa
xchg
sbb
jns
movsb
adc
movsl
jne
inc
loop
daa
xor
lahf
sbb
bound
mov
movsl
mov
fstpt
pushl
push
dec
push
pop
dec
adc
mov
shll
cld
je
icebp
push
in
repz
scas
imul
in
ss
ja
out
lea
and
lret
mov
or
outsb
cli
adc
das
test
xor
outsl
cli
xchg
rcrl
jns
mov
dec
mov
out
sub
sbb
push
inc
xchg
outsb
fdivrl
cmp
js
int3
sub
stos
pop
cmp
xchg
mov
test
sarb
ret
aam
inc
mov
dec
adc
push
sbb
jo
pop
mov
inc
push
bound
sbb
cli
lds
rorb
aam
or
loop
bound
call
test
inc
iret
inc
adc
fxch
push
xchg
and
jo
das
lods
jnp
sub
mov
push
mov
xchg
leave
stc
inc
adc
out
jo
lods
mov
aas
xchg
js
fcomi
rclb
and
pop
inc
fstps
push
rorb
mov
rcll
icebp
push
dec
test
clc
sarl
leave
push
inc
cmc
or
and
pmullw
dec
or
jmp
cmp
or
lahf
push
mov
aam
mov
stos
jo
jae
ljmp
push
pop
jmp
push
fcompl
bound
and
sbb
push
sbb
cwtl
lods
jae
js
dec
iret
fs
cmpsl
je
adc
mov
push
mov
sti
outsb
mov
in
rorb
out
sub
sub
dec
mov
idiv
cltd
dec
lods
mov
mov
pop
ljmp
insl
jb
cmp
sub
movsb
insb
jb
cmp
jg
pop
xor
jmp
mov
addb
lods
popl
pop
sbb
loopne
sti
jb
mov
icebp
mov
cmp
aas
cli
shl
xor
test
scas
add
xor
in
fsubrs
and
es
add
pop
jns
xor
adc
ret
daa
scas
push
xchg
notb
outsl
mov
gs
ljmp
cmp
mov
xor
and
notb
mov
add
pop
jne
jge
mov
adc
ds
xchg
xchg
ds
shrb
cli
push
xchg
cwtl
fidivl
daa
lea
aam
jo
cmp
shlb
mov
dec
or
mov
int3
js
jmp
push
cs
in
lods
lods
xor
cmp
pop
inc
aas
push
dec
jmp
sbb
cwtl
dec
dec
mov
rorb
rolb
movsl
lods
jl
gs
pop
or
movsl
inc
hlt
add
scas
jg
les
jae
fisttps
shlb
cmpsb
fsts
pop
out
mov
lret
popf
outsb
scas
dec
xor
cwtl
mov
fsubs
leave
cmp
or
dec
and
pop
out
pop
inc
jnp
pop
jecxz
jno
insl
sbbl
mov
inc
mov
mov
loope,pn
imul
mov
pop
pop
ljmp
adc
pop
jno
ss
mov
out
add
push
mov
jb
mov
fstpt
xchg
jae
pop
jl
dec
scas
jg
and
cmp
dec
jo
repnz
add
jns
imul
jp
out
rcrb
push
orb
addl
test
jns
test
aaa
loop
mov
inc
xor
cmp
dec
sub
mov
outsl
xor
add
jbe
add
push
outsl
mov
xlat
add
xchg
notb
sar
adc
loopne
ffree
popf
aaa
insl
jg
loope
fs
mov
test
fdivl
test
rcll
outsb
push
int3
xor
push
xchg
xchg
push
push
xchg
pop
dec
jne
push
imul
enter
imulb
mov
rorl
add
xchg
cs
ret
dec
push
shll
add
jae
aad
jl
mov
or
outsb
and
test
call
aad
int3
fs
mov
movsb
dec
mov
fdivr
std
add
pop
cmp
mov
xchg
in
loopne
dec
jmp
dec
push
in
add
lods
in
les
mov
enter
or
scas
mov
xor
arpl
push
inc
pop
mov
adcb
aas
mov
iret
je
adc
cmpsl
mov
mov
lds
jmp
fmul
int
dec
scas
out
push
popa
adc
enter
rclb
mov
fdivrl
rolb
push
fdivrs
xor
out
ds
mov
push
add
sbb
dec
push
mov
jno
cmp
imul
mov
mov
or
xor
fs
cmp
or
arpl
movsb
popf
rcrl
and
cmp
add
inc
leave
adc
aas
push
popf
cmp
test
aad
in
aad
jns
jno
addl
adcb
out
xchg
cmp
push
stos
jo
adc
cmpl
inc
xchg
add
cmc
in
and
pop
dec
jmp
push
xor
pop
adc
dec
adc
push
fsubl
fisttpll
and
enter
cld
addb
mov
testl
push
xchg
or
sbb
das
cs
pop
cwtl
xor
subl
sub
lods
ja
imul
mov
ljmp
aam
les
mov
dec
daa
mov
movl
adc
jb
inc
jg
into
lea
xchg
lcall
lods
pop
cld
xchg
and
mov
test
lahf
xor
mov
jecxz
cmpsb
cli
in
nop
xor
stos
daa
fildl
les
icebp
lcall
pusha
mov
stc
insl
ret
addps
outsl
and
cld
stc
jo
pop
ljmp
loope
dec
cld
aam
push
test
out
xchg
add
les
push
and
sbb
mov
outsb
mov
sbb
xchg
inc
cmp
xor
sbb
push
xor
mov
addr16
inc
jle
jecxz
adc
aaa
mov
mov
cmpb
mov
mov
xchg
push
icebp
dec
mov
cmp
jg
pop
adc
sbb
and
addr16
add
or
fidivrl
mov
stc
jno
push
sbb
ja
and
jnp
pop
adc
in
push
mov
test
loope
mov
and
mov
hlt
orb
inc
lods
sti
sbb
mov
mov
aaa
lret
enter
in
adc
mov
pop
aad
mov
xchg
add
jge
std
test
mov
sub
add
push
rcrl
jno
lret
mov
cmp
cli
scas
bound
or
loopne
xchg
daa
int
test
hlt
inc
xor
cmpl
mov
aad
in
fnstsw
roll
shlb
xor
ljmp
push
inc
mov
xchg
aam
aad
xchg
testb
popf
js
mov
cmp
pusha
add
and
adc
mov
inc
or
pop
std
xor
hlt
lcall
push
aaa
data16
ja
andl
jg
and
xor
adc
popf
arpl
bound
adc
scas
das
cmpl
imul
pop
dec
loope
pop
xchg
cmp
add
cmp
filds
cmp
pop
sbb
stos
sti
push
mov
bound
adc
mov
lods
pop
push
jecxz
fcmovne
icebp
je
addb
in
xchg
mov
orl
cmp
xchg
lock
icebp
lahf
aaa
push
mov
loop
clc
aas
inc
stos
push
xchg
dec
pop
jg
push
test
cs
repz
sub
or
mov
and
fsub
jbe
lea
pusha
scas
pop
mov
rolb
mov
sti
andl
fstp
outsb
and
xor
mov
jns
cmpsb
aad
leave
fidivrl
test
jo
mov
loope
xchg
aas
and
fldt
pop
shrb
mov
insl
out
popa
and
xrelease
sbb
xor
or
sbb
and
pop
js
in
jle
arpl
jns
insb
jb
xor
ret
inc
push
sbb
lret
jbe
cmp
pop
cmp
mov
xchg
enter
cwtl
shll
add
popa
cmpb
jb
nop
sti
loope
xor
mov
mov
shr
xlat
dec
adc
js
cmp
outsb
lahf
cmp
int
sub
mull
jno
iret
mov
pop
ds
or
fnstcw
xor
mov
push
andb
fildll
ss
cmp
jle
popa
cmpsl
xor
or
sbb
push
in
sbb
ss
or
cmp
aad
cmp
mov
data16
xchg
cmp
cmpsl
int
lock
ds
mov
cmp
leave
clc
divb
pop
mov
mov
ret
xor
sbb
sbb
push
aad
and
in
xchg
dec
ja
cmp
jb
sub
push
sbb
mov
mov
add
ja
dec
xlat
inc
lahf
daa
scas
in
or
inc
jge
xor
fdivrl
mov
push
out
or
or
fsubrs
pop
mov
jmp
xchg
clc
mov
sbb
jb
fmull
sub
rcrb
add
sub
aaa
into
pop
inc
outsl
mov
stos
sbb
lret
leave
xchg
imul
cmp
arpl
lret
fwait
push
subb
out
cs
push
xchg
popa
mov
jecxz
nop
inc
cmp
out
adc
std
mov
mov
lds
lds
push
jmp
mov
ficomps
cs
jno
lock
imul
xchg
xchg
sti
stc
add
push
clc
or
add
sub
lret
mov
adc
inc
cs
xor
mov
loope
popf
aas
fmuls
inc
pop
fldl
inc
xchg
test
mov
hlt
adc
xor
push
lock
mov
push
in
shll
iret
call
mov
fisubrl
pop
sbb
leave
imul
xchg
cmp
lahf
fdivrl
push
mov
mov
and
mov
mov
aam
out
lcall
test
lea
out
loope
adcb
int
std
aas
lds
test
sarb
inc
sti
fcompl
sbb
test
push
in
and
pop
jmp
leave
andl
pop
mov
imul
adc
sub
push
jne
ss
pop
xchg
daa
hlt
insb
xlat
pop
es
xorb
and
pop
mov
jae
xchg
lret
movsl
lea
fisttpll
cmpsl
shr
jge
notl
cwtl
jns
test
ud1
mov
xchg
lret
pop
sbb
movsb
mov
sbb
mov
data16
cwtl
sbb
std
lods
push
cmp
pop
push
paddw
cmp
push
lcall
outsl
in
jae
pop
or
jbe
jns
adc
subb
jmp
negl
or
add
jmp
inc
adc
outsb
popa
sbb
movups
pop
dec
stc
adc
imul
hlt
push
into
movsb
test
pop
shrb
leave
aas
jnp
cmp
and
dec
add
pushl
jne
jno
jne
pop
orl
xlat
jp
nop
jecxz
addb
cli
sub
push
cwtl
popf
dec
cmpsl
jo
push
xor
xor
mov
pop
ret
movsl
ja
push
cs
ficoms
out
mov
cs
and
and
and
and
addb
mov
fstps
dec
sub
pusha
adc
adc
js
stos
out
xor
xchg
adc
add
add
in
test
xchg
mov
lret
mov
jmp
leave
cwtl
xchg
das
into
push
push
and
sub
mov
mov
dec
cmp
xlat
mov
sbb
adc
jmp
stc
push
cmc
mov
adc
mov
inc
sbb
int
dec
popa
repz
addr16
movsl
cmp
mov
loope
xor
jg
cld
push
mov
fldcw
loop
imul
addb
push
xchg
pop
cltd
lock
cmpb
sbb
fxch
in
cltd
adc
fcmovnu
mov
imul
into
sub
lahf
add
cmpsl
pushl
jle
pop
jle
and
imul
sahf
cmp
mov
mov
mov
mov
icebp
out
mov
pop
imul
pop
or
pop
insl
cmp
daa
hlt
push
negb
out
mov
imul
stos
movsb
sub
mov
popf
negb
mov
lock
push
mov
test
xorl
xchg
pop
addr16
xchg
dec
loopnew
ffree
cmp
xchg
test
jp
push
mov
dec
test
test
sub
arpl
aam
out
sbb
mov
adc
push
cmp
mov
pop
cmpsl
xor
in
test
mov
call
xchg
pop
call
adc
ret
int3
fwait
movsl
or
pop
xlat
sbb
jmp
or
add
loope
outsl
sub
push
xor
adc
stos
fstl
jmp
ss
mov
push
sbb
xchg
cwtl
inc
push
dec
int
into
fcomps
lahf
gs
push
das
lds
fistpll
lea
pop
test
inc
push
xor
dec
shll
fsub
or
fcoms
idivl
jmp
push
loop
scas
test
shrl
xor
pop
outsb
in
mov
aas
insb
sbb
cmp
icebp
hlt
pop
ljmp
cmp
sbb
xor
push
lea
fdivrs
int
adc
stos
lods
add
ficomps
cmpsb
cmp
nop
dec
push
mov
push
daa
insb
sbb
das
pop
test
scas
pop
imul
jo
add
syscall
adc
sub
mov
push
int3
pusha
in
push
jmp
arpl
sbb
cmp
das
push
aad
mov
cmp
repz
sbb
cmp
sbb
adc
push
jb
push
adc
xorb
mov
and
movsb
xchg
fisubrs
mov
decb
inc
out
or
dec
mov
xchg
in
mov
mov
xchg
push
lods
rorb
fidivs
addr16
insl
sti
and
sarl
pop
popa
bound
mov
mov
jle
sub
sbb
cld
jns
fs
pop
push
mov
pop
int
sbb
adc
xchg
scas
stc
ret
mov
fidivl
ds
insb
test
cmp
ds
xchg
jmp
inc
daa
not
lea
pop
in
insb
jg
into
push
cld
push
cmpsl
mov
and
fcoms
pop
xchg
clc
insb
adc
jecxz
fwait
test
cmc
mov
xchg
fildl
sbb
movsl
jmp
pop
dec
xchg
rolb
bound
mov
fldcw
sbb
das
lock
mov
sub
lods
pop
sub
xchg
xchg
mov
sti
fdivrp
jb
adc
mov
iret
inc
xchg
or
pop
jb
fadd
and
adc
ds
lods
jp
add
push
nop
movsb
mov
mov
jg
cld
addr16
xchg
push
in
rcrl
je
xor
push
pop
mov
lods
push
test
test
pop
add
mov
cltd
mov
lock
mov
xchg
je
dec
sbb
popa
mov
insl
adc
push
xlat
adc
int
sub
sahf
or
add
iret
sbb
lcall
movb
fidivl
mov
not
lret
movsb
cmp
faddl
nop
ja
sub
add
ljmp
inc
popf
jnp
and
or
mov
pop
fisubs
jecxz
stos
js
rorl
cli
xchg
fstps
pop
push
cmpsl
ljmp
sub
mov
ljmp
fimuls
mov
loope
pop
fwait
sub
push
cwtl
and
pop
inc
push
out
stos
lds
das
dec
lods
sub
cmc
mov
or
or
lods
sub
cmp
in
subl
lret
xor
cmp
xchg
andl
cli
lahf
mull
cwtl
jo
shlb
and
jecxz
pop
inc
stc
int
sub
cmc
pop
ljmp
icebp
mov
add
inc
jmp
mov
subb
cmovae
stos
lods
xchg
test
lea
outsb
inc
sbb
rorb
mov
mov
imul
mov
notb
insb
je
jb
or
gs
les
xchg
icebp
push
pushf
cld
lahf
cmp
add
mov
mov
in
sbb
fists
or
sbb
scas
sub
xor
sub
push
fwait
dec
xchg
xchg
jns
sub
push
mov
addb
stos
push
and
in
movsl
orb
and
push
in
test
lds
test
mov
std
adc
rcrl
cmp
movsb
xor
sbb
mov
imul
mov
pop
insl
fwait
lods
sbb
dec
sahf
outsb
movb
das
cld
add
inc
cli
arpl
mov
sbb
test
jecxz
xchg
iret
push
pop
mov
call
mov
jmp
ja
cltd
sbb
sbb
fsubs
pop
and
cld
pop
in
or
sub
ss
adc
scas
into
std
fs
or
sub
outsl
adc
dec
cmp
repz
insb
mov
sti
rclb
sbb
jmp
ret
sbb
cmpsl
in
and
xor
jge
out
in
push
rcll
pop
into
jmp
mov
bnd
and
mov
sbb
push
cs
test
lods
push
mov
lds
ds
int3
mov
shrb
scas
pop
in
mov
mov
jo
sbb
daa
popf
xchg
movsl
push
je
outsb
ss
ret
cld
add
lea
imul
jo
mov
insl
xor
pushf
shl
dec
pop
imul
xchg
mov
adc
or
ja
in
jno
xchg
push
pop
jmp
xor
data16
vpaddusb
adc
loope
shlb
pusha
inc
sbb
mov
cs
addb
out
dec
int
xor
aam
jl
and
cltd
int3
loope
push
adc
int
sahf
insb
push
cli
in
sbb
pcmpgtb
mov
adc
mov
lahf
mov
xchg
or
lods
scas
jo
ret
loopne
gs
inc
jg
inc
inc
in
or
mov
push
jbe
mov
rcrl
add
sbb
inc
fdivrl
imul
or
out
negb
sub
jmp
sub
mov
jl
inc
cmpsb
loope
xor
into
stos
mov
mov
and
cld
cltd
mov
int3
adc
cmp
fnstcw
aad
jecxz
xchg
mov
xor
notl
fsubrs
popf
sbb
xchg
adc
clc
pop
xlat
and
popa
ffreep
adc
xor
jge
mov
adc
sub
arpl
fistps
xor
pop
cltd
mov
ret
jmp
aaa
call
ss
xchg
ret
dec
jno
test
mov
pop
lret
sub
bound
in
jb
insb
cmc
push
ljmp
iret
repz
in
xchg
out
push
fucomp
mov
jmp
cmovs
xchg
push
div
inc
adc
mov
cmc
mov
movsb
scas
bound
adc
add
aaa
lret
cwtl
cmp
push
mov
jg
sub
and
sbb
cmp
jbe
push
mov
cmpsl
xchg
sub
arpl
nop
daa
fldenv
jno
xor
adc
adc
es
and
pop
enter
jno
mov
aam
leave
cld
enter
aam
je
xor
lret
push
cmp
xchg
test
loopne
fidivl
pop
adc
add
rcrl
mov
cltd
lock
sbbl
jmp
dec
data16
adc
xchg
gs
cmp
jp
xchg
mov
add
out
daa
ret
or
push
or
or
scas
xchg
stc
mov
scas
outsl
sbb
mov
push
sub
push
loopne
pushl
bound
movsl
fimuls
pop
sub
push
and
cmp
out
bswap
shlb
xor
pop
jbe
lret
out
push
mov
repz
and
rolb
int3
stc
add
fsts
imul
nop
mov
andl
pop
pop
rol
sbb
jle
mov
inc
jno
jne
rcrb
inc
jge
pop
bound
mov
fimuls
aad
mov
sbb
loop
mov
in
andl
and
adc
mov
loope
push
cmp
lcall
in
imul
addr16
dec
mov
fwait
daa
bound
cltd
jno
xchg
adc
pop
jl
std
in
jo
mov
mov
jge
jp
adc
or
popa
cmp
movsl
in
or
les
out
mov
lods
inc
pop
lea
adc
stc
sahf
jae
out
add
push
fst
jecxz
je
xor
pop
andl
das
lret
dec
and
jne
ja
imul
jmp
rol
imul
addr16
mov
lds
cmp
cmpsl
stc
adc
cmp
or
xor
or
in
pop
mov
in
mov
xchg
mov
or
push
sahf
xor
fs
lcall
call
and
sub
shll
jno
xor
adc
jno
mov
xchg
xor
or
ficomps
lret
std
or
cmp
inc
fsubs
shll
pop
sahf
cmpsl
out
and
mov
jns
sbb
adc
push
rclb
xchg
jecxz
fistl
test
mov
std
or
pop
ljmp
mov
cwtl
add
sbb
ljmp
jle
push
int
aaa
ss
hlt
ret
outsb
in
xchg
std
xor
arpl
push
cmp
add
inc
sete
fistps
xor
pop
gs
cmp
scas
xchg
mov
xor
sar
in
or
ljmp
decb
bound
inc
aas
adc
imul
cmpsb
pop
adc
test
iret
fimull
es
js
add
movsb
xchg
xor
in
inc
or
cmp
stos
sub
xchg
stos
mov
fisttpll
or
sbb
js
sbb
std
lea
xchg
add
outsl
mov
mov
push
mov
sub
xchg
je
mov
mov
xchg
adc
sti
and
fst
pop
movsl
fldcw
xor
les
sarl
xchg
mov
mov
loopne
and
and
mov
add
cltd
aam
cmp
dec
cmp
ds
arpl
sbb
push
aam
lahf
pop
cmp
mov
je
shr
aad
insl
das
push
scas
and
shr
imul
add
mov
aam
jge
cwtl
in
adc
addr16
movsb
pop
adc
jge
rorl
cmpsb
out
test
pop
out
push
push
mov
lods
jns
push
dec
daa
test
cltd
insl
dec
sub
negb
lods
ljmp
add
in
add
notb
inc
cmpb
pop
push
dec
fildl
cmp
mov
xor
pop
mov
movsb
xor
push
jno
fmul
cmp
mov
fucomi
in
adcb
jo
xchg
mov
cmp
insl
xor
std
or
xchg
mov
and
mov
lea
pop
cmp
imul
outsb
shll
jb
pop
push
pop
icebp
mov
lahf
cwtl
in
jecxz
mov
and
mov
pop
mov
aam
mov
adcl
sbb
mov
push
xchg
push
int
jnp
push
mov
add
cmp
shrl
out
aaa
dec
xchg
and
sti
dec
lret
cmpsl
push
mov
add
mov
add
dec
add
loopne
jnp
mov
mov
xchg
aam
push
inc
loop
push
mov
push
add
push
stos
pop
outsb
inc
dec
cmpw
lret
adc
add
dec
dec
fidivrs
or
mov
inc
insb
jecxz
aad
mov
sahf
inc
out
xlat
sbb
ljmp
outsl
pushf
cwtl
dec
popa
leave
push
rorb
or
jmp
stc
jge
jg
mov
inc
mov
inc
nop
shll
add
sub
and
jae
jo
loopne
pop
sub
or
shlb
jp
sub
sti
mov
pushf
sub
test
jp
rolb
movb
inc
ljmp
dec
clc
inc
push
cmp
mov
cmp
fiaddl
aas
pop
andb
daa
xorl
in
jge
push
pushf
jge
lahf
inc
data16
sbbl
xor
sub
test
mov
or
inc
inc
and
xlat
shrb
or
inc
lahf
mov
push
mov
int3
mov
fldcw
loope
rol
jne
adc
sub
movsl
xchg
adc
mov
xor
in
jge
inc
ret
jns
mov
xlat
loopne
dec
out
mov
push
push
imul
test
test
jge
sbb
mov
pop
in
cmpsl
mov
ljmp
aaa
dec
pop
adc
rcrb
loope
leave
in
xchg
insl
shll
fdivrs
aam
fs
scas
dec
scas
loope
loope
imul
aad
adc
or
shrl
imul
jmp
pop
xchg
pop
mov
sahf
cli
jge,pt
sub
mov
cmp
pop
push
mov
js
xchg
or
int
sub
pushf
sub
mov
sti
add
adc
push
aad
dec
xor
inc
arpl
std
jno
in
aad
jmp
and
or
cmp
mov
and
and
xor
or
jne
or
jne
mov
loopne
insb
push
out
sub
mov
orb
pop
xchg
lahf
gs
or
aad
and
and
incb
sbb
cmp
dec
daa
push
cli
aam
and
pop
and
fwait
in
es
inc
stos
ljmp
out
pop
sub
lock
jg
testb
loop
fstps
push
jne
xchg
xchg
mov
adc
imul
add
stc
add
jp
pop
mov
add
mov
aam
in
jo
push
test
dec
cmp
sub
mov
out
inc
in
loop
loope
xor
clc
adc
jnp
shlb
push
mov
pop
test
js
sbb
sub
lods
in
int
movsl
jns
push
push
push
mov
in
movb
loopne
or
jmp
jecxz
xchg
inc
jne
pop
push
dec
mov
pop
push
int
push
lock
icebp
in
outsl
repnz
mov
insl
xor
inc
lods
mov
push
add
sub
or
push
lea
pusha
call
cmp
shrb
fsubs
fwait
adc
cwtl
arpl
repnz
cli
scas
dec
mov
pop
insl
push
andl
icebp
mov
js
outsl
or
and
dec
ja
lods
pop
je
ret
push
inc
pop
push
data16
sub
mov
or
rolb
pop
jo
cmp
out
jge
jl
int3
pop
in
inc
lcall
out
add
dec
mov
fldl
daa
aam
and
aam
cmp
sub
inc
pusha
xchg
in
inc
lret
pop
push
es
jecxz
es
leave
xor
fisttps
es
jne
sub
cmpsl
in
mov
sbb
inc
pop
sub
stc
cmp
and
lcall
jne
shlb
inc
push
cmp
loopne
sbb
das
dec
add
das
push
pop
sub
xor
sub
push
subb
or
adc
push
insb
or
lret
shrl
lock
jle
test
sbb
insl
mov
mov
lea
mov
in
adc
pop
jb
inc
jae
nop
mov
mov
cmp
je
jno
jg
out
add
mov
inc
movsl
push
idivb
orl
jp
das
jb
icebp
sbb
xrelease
int3
mov
ljmp
adc
das
xchg
dec
dec
popa
add
cld
out
call
fistpl
loop
loopne
stos
out
daa
xchg
jae
cltd
jmp
cmc
test
or
hlt
orl
fxtract
mov
mov
or
xchg
clc
testl
lea
iret
fldl
stos
ret
fldl
stos
fstpl
stos
fcmovnu
popf
stos
fstp
xchg
stos
xchg
stos
rcr
xchg
stos
rcr
xchg
stos
aad
std
stos
test
jno
mov
data16
imul
fwait
xchg
mov
pop
mov
push
in
aaa
movsl
and
and
push
insb
rcll
daa
inc
jnp
push
rcrl
test
daa
cmc
and
movsl
or
cmp
xorb
sbb
aas
add
mov
jnp
ficompl
cmpps
cwtl
and
dec
scas
out
jno
lods
ficomps
ja
sbb
xlat
xchg
sub
sahf
lea
cmc
sbb
insb
mov
xchg
cmc
push
xchg
lock
fs
cmpsb
jmp
lcall
xor
xchg
in
add
and
ret
imulb
in
push
enter
push
ror
jg
push
jns
and
test
rolb
sti
dec
mov
out
push
sub
xchg
pop
rorb
mov
and
push
jo
sub
loopw
sahf
lcall
jge
adc
pop
scas
stc
stos
popf
cltd
mov
lcall
jge
out
mov
outsl
imul
jecxz
mov
icebp
adc
mov
jo
pusha
stc
sub
mov
sub
jp
cmp
sub
xchg
cmp
pop
jmp
mov
pop
and
sub
dec
sbb
and
mov
dec
add
cwtl
rcrb
int
icebp
add
rclb
outsl
rorl
std
lea
xor
test
hlt
xor
jecxz
flds
mov
shr
jbe
cltd
and
jle
ss
cmpl
stos
xchg
test
xchg
in
clc
jno
scas
cmp
sarl
clc
je
stos
lret
dec
inc
cmp
cmp
inc
inc
jno
inc
shll
jp
inc
inc
flds
jo
pop
xchg
add
pop
cmp
loopne
insl
xchg
dec
aas
or
mov
jg
out
cmp
loop
scas
jne
xchg
out
in
push
lret
cmpsl
into
imul
inc
lret
inc
mov
std
bound
cltd
lock
ljmp
xchg
adc
pop
dec
into
dec
inc
xchg
push
insb
pop
xchg
gs
dec
mov
mov
arpl
dec
lods
adc
xorb
test
cmp
xchg
jge
xchg
aam
inc
cmp
and
ljmp
pop
insb
rcrb
int3
cwtl
add
out
mov
sbb
jbe
lods
addr16
xchg
pusha
add
fwait
cmp
addb
in
sub
movsl
outsl
xor
and
ds
cmp
test
xor
jns
aaa
ret
mov
stc
jl
add
addr16
call
lea
stc
fs
imul
mov
pop
pop
ljmp
pop
inc
sub
jmp
pop
fadds
in
pop
aam
ljmp
cmp
mov
test
pop
push
adc
clc
xchg
stc
ljmp
pop
add
cmpsb
pusha
in
pop
add
test
mov
jge
sbb
jmp
pop
sub
out
sub
loope
and
pop
and
pop
pop
aas
icebp
jae
ja
jns
inc
pop
mov
mov
sub
pop
mov
inc
jne
pop
test
daa
loope
cltd
imul
push
dec
cmp
adc
insb
movsl
fisubrs
xlat
iret
sbbl
inc
pop
cltd
dec
jmp
repz
in
mov
inc
pop
dec
jge
cltd
push
mov
sbb
in
ffree
xchg
mov
add
sahf
mov
mov
or
inc
out
imul
in
xlat
or
aaa
aaa
jno
or
leave
dec
pushf
dec
fisttpll
add
sbb
divl
push
out
mov
dec
mov
inc
pop
and
jns
mov
ret
jmp
mov
push
int
aad
dec
sbb
sub
insl
insb
push
dec
test
push
ja
cli
pusha
nop
lods
into
in
adc
cld
add
ficoml
xchg
mov
aad
pop
pop
fdivrl
in
mov
cli
cld
test
mov
cmc
call
ret
add
movsl
pop
jmp
dec
sub
mov
lds
rolb
in
xchg
into
aaa
and
sbb
insl
add
iret
sbb
add
mov
shlb
push
outsb
adc
push
inc
inc
sbb
push
dec
xchg
daa
add
cmp
and
aas
gs
cmp
sahf
arpl
sbb
lea
mov
in
xor
jecxz
cmp
test
and
mov
push
pop
xchg
inc
jmp
sbb
pop
jl
sub
clc
test
push
test
test
pop
jb
dec
adc
xchg
mov
in
sbb
mov
out
cli
adc
testb
bound
cmpb
pop
dec
xor
mov
mov
aam
mov
mov
std
rcrl
pop
adc
andl
in
lcall
ret
mov
push
aas
imul
jmp
xlat
imul
push
jno
out
fnsave
out
or
add
movsb
push
aam
xchg
mov
fadds
and
in
aas
cmp
ja
dec
lea
xchg
loopne
in
sub
fstl
mov
test
fisttps
and
pop
in
imul
ds
out
fsubs
xor
cmp
ss
push
xchg
fs
jecxz
in
jecxz
mov
xor
cmpsl
cwtl
xor
imul
xchg
clc
mov
pop
lcall
xchg
or
adc
popa
div
cld
jmp
cmpsl
and
stos
xchg
mov
sbb
jge
lds
inc
lods
loope
daa
sub
pusha
xchg
cmp
ja
loop
pop
js
addr16
rolb
jle
jo
xchg
and
in
jmp
and
push
ficoml
dec
sub
jl
mov
cwtl
loopne
rclb
ds
inc
inc
in
jbe
stos
xor
pop
in
popa
jo
jb
xor
es
cmpsb
push
cmpsl
int3
les
adc
fldl
movsb
or
das
add
jo
stos
in
add
inc
mov
sbb
ds
pop
loop
jecxz
int
inc
mov
fcom
jecxz
cmp
fstps
rclb
movsl
outsb
jb
imul
or
or
inc
add
aam
int
pop
in
inc
lock
push
hlt
jle
mov
int3
test
push
mov
cmp
pop
mov
into
or
add
sahf
xchg
mov
push
sarl
jno
pop
add
and
jne
pop
mov
fs
scas
inc
add
insl
and
or
sub
push
pop
mov
ret
mov
mov
popa
push
daa
dec
inc
jno
xorb
mov
adcb
push
add
cltd
js
inc
inc
or
iret
sub
push
fcmovb
movsl
cmpsl
xchg
cmp
pop
mov
push
or
cmp
ret
out
les
sbb
mov
dec
mov
nop
lea
xor
mov
xchg
stos
aad
insb
cs
xchg
push
out
xchg
scas
inc
cmp
xor
rolb
push
mov
int
mov
stos
fstpt
sub
aaa
cmpsw
sub
lret
adc
shl
inc
mov
pop
push
js
jge
lock
arpl
mov
js
xchg
pop
mov
and
push
mov
lods
in
dec
pop
lcall
fwait
jp
out
fucom
fcompl
mov
outsb
mov
ds
mov
int
add
push
sub
pop
lea
int3
xbegin
mov
lea
mov
data16
lea
add
mov
xor
sub
pop
lods
cmp
cmc
stos
xor
movsl
cmpsb
fstpl
sahf
push
fdivrl
dec
shrb
jp
cmp
adc
push
lahf
dec
ljmp
movsb
jg
movsb
xor
cwtl
sbb
push
or
pop
je
mov
arpl
jmp
sbb
idiv
adc
push
pop
cmc
push
insl
lods
das
xor
adc
xor
sarb
loope
sub
rcrl
xchg
insb
and
jb
xchg
cmpsl
lods
andb
repz
das
loop
pop
lahf
std
mov
lock
mov
jl
insb
or
push
repnz
pop
insl
rcrb
dec
pop
cmp
mov
int3
sti
into
or
mov
fisttpll
cli
fucomp
fcompl
js
cmc
or
lret
mov
mov
or
mov
call
test
test
jmp
setns
xor
jg
nop
push
fs
ljmp
fmul
aad
xchg
sub
aad
jb
rcrl
xor
outsl
xchg
add
mov
cmp
imul
popf
ss
inc
xchg
rcrl
jo
xchg
pop
push
adc
push
add
loopew,pt
and
xchg
or
ds
bound
mov
mov
adc
pop
mov
mov
push
jne
cmpsb
inc
ret
pop
mov
mov
jp
jno
pop
bound
mov
dec
mov
pop
es
inc
mov
fucomi
cmp
in
xor
inc
shrb
adcb
jmp
test
xor
xor
js
ficoms
sub
arpl
adc
xchg
cmp
jo
adc
js
or
jg
loope
jo
add
sbb
add
outsl
leave
sar
pop
adcl
fldt
outsb
dec
addr16
shlb
jecxz
push
lret
mov
inc
icebp
mov
loope
dec
decl
sub
adc
or
add
outsb
mov
dec
into
mov
and
pop
iret
out
xlat
mov
lahf
push
mov
insb
inc
repnz
ja
lods
mov
xchg
push
xor
jns
pop
mov
into
pop
mov
cmp
inc
sbb
sub
je
mov
push
stos
push
out
mov
mov
pop
stos
add
pop
insb
cltd
cmpsb
lds
ja
fildl
pop
mov
cltd
mov
jmp
movsl
or
mov
lea
and
sarb
push
jae
cmpl
repz
and
adc
or
inc
lock
mov
xchg
lret
call
cmp
mov
and
jns
adc
jl
arpl
sbb
popf
or
insb
rcr
adcl
jb
mov
pusha
inc
int
adc
adc
ds
mov
mov
es
shll
pop
xchg
pop
les
stos
or
mov
insl
jle
pushaw
jo
xchg
push
addb
pop
lret
and
imul
test
pop
jmp
pop
mov
test
sbb
cmp
xchg
sbb
sub
lds
out
arpl
rclb
sbb
dec
mov
imul
ret
lcall
jb
shr
mov
push
push
dec
aad
enter
repnz
inc
in
fnstcw
mov
adc
mov
xchg
inc
xchg
inc
push
sbb
lret
mov
shll
push
mov
xlat
mov
cmp
stos
jmp
mov
lock
pop
test
xchg
lret
jp
outsb
push
pop
and
ss
mov
scas
cmp
push
mov
ss
pop
sub
dec
add
je
xor
mov
inc
and
push
ja
jl
call
cmp
cmp
loope
xchg
test
cmp
adc
pop
frstor
aas
inc
imul
sti
lods
add
xor
fsubl
mov
add
push
lea
sub
les
sub
inc
into
xchg
sub
movsl
push
jno
mov
or
xchg
in
jno
push
xor
pusha
push
dec
mov
cmc
mov
mov
idivb
gs
lods
push
notl
bound
pushf
jbe
jg
mov
imul
sti
jbe
popa
pushf
jle
mov
push
cmp
xchg
add
lcall
dec
dec
or
aad
add
fnstsw
mov
mov
pop
lcall
cltd
imul
ficompl
into
sahf
mov
es
stos
lea
ljmp
push
shl
shr
jecxz
jle
mov
imul
mov
sbb
inc
push
imul
lahf
loopne
psraw
test
movsl
inc
pop
imul
inc
adc
bound
dec
stos
testb
sti
adcb
scas
jnp
push
push
dec
leave
inc
xor
orb
cs
push
jns
xor
sbb
sub
outsl
stc
or
test
ja
arpl
mulb
stc
push
and
fiaddl
aas
mov
cmp
out
ret
ret
ss
fs
fwait
test
and
lds
mov
push
imul
jg
iret
ljmp
mov
repnz
mov
push
insl
shr
sarl
ret
inc
aad
popf
insb
popf
jnp
sub
adcb
aam
adc
lods
cmp
sub
loopne
mov
out
mov
fcomps
ds
fwait
out
cmp
test
sub
push
out
dec
jge
aam
sub
aas
jnp
testb
add
int
lds
add
lods
fsubs
inc
imull
fs
popa
aad
aam
lea
ret
cmp
cmpsl
mov
mov
dec
mov
cmp
inc
fsubr
xchg
jecxz
gs
jno
jb
xchg
mov
lds
sub
insl
inc
pop
cmpsb
jl
hlt
int
push
adc
sub
std
xchg
pop
xor
dec
out
inc
out
aas
imulb
jns
adc
insb
mov
mov
call
lds
adc
shlb
daa
push
pop
dec
pop
pop
loope
mov
insl
in
sarl
sahf
sbb
jg
or
sub
jle
shll
jge
cs
popa
ficomps
xor
popf
dec
cmp
aam
cmp
push
mov
iret
leave
aaa
cmp
xchg
shll
xchg
out
adc
int
adc
arpl
jb
push
in
sbb
xchg
or
jp
pop
cmp
lods
jnp
pop
jmp
mov
rorl
jns
xchg
add
jp
daa
cmc
lods
in
rclb
rcrb
add
jecxz
and
insb
mov
inc
xor
pop
lods
pop
frstor
imul
fldcw
mov
lea
jmp
add
add
orb
arpl
push
pop
loopne
push
xchg
leave
and
jecxz
mov
insb
stc
aaa
sbb
int
imul
movsl
arpl
aam
loop
repnz
ficoms
pushf
mov
fwait
nop
loope
add
out
testb
dec
out
scas
push
pop
inc
incb
adc
cmc
dec
push
add
mov
lds
mov
xor
call
mov
sbb
push
jmp
das
and
xor
iret
test
lcall
fwait
adcl
push
sbb
jae
cmp
in
add
pop
insb
jb
xor
incb
mov
fiadds
int
xor
shrl
aas
lea
pop
ret
add
cld
int
aaa
fcoms
mov
clc
repz
xor
mov
les
mov
ret
jle
jns
rolb
push
loope
std
pushf
push
push
aas
xor
loope
inc
test
addr16
xor
xor
imul
jo
gs
dec
xor
push
cmp
inc
adc
cmpsl
inc
xchg
mov
lcall
mov
mov
sbb
pusha
mov
jle
in
jmp
sub
mov
shl
xor
lcall
mov
mov
sbb
loopne
pop
aaa
or
dec
insl
adc
adc
mov
mov
ret
jo
fdivr
push
jge
cmc
cli
add
pop
shr
mov
int3
outsl
push
bound
fldcw
subb
xor
das
inc
add
daa
push
xchg
pop
push
adc
cmp
jecxz
fwait
xor
or
int
cmp
sbb
sub
int
mov
add
cld
mov
add
inc
mov
addr16
leave
xchg
scas
xchg
add
mov
scas
leave
adc
and
insb
push
lret
mov
lods
nop
int
inc
fs
ja
lret
out
ja
lock
and
ret
arpl
push
loop
outsl
out
js
cli
xchg
xchg
idiv
lock
rcll
in
or
mov
pop
mov
xor
jo
fucomip
add
leave
or
and
sarl
and
xchg
push
and
lret
mov
in
pop
imul
in
or
cmpsl
xor
pop
sbb
and
ss
mov
xlat
add
es
push
pop
stos
lods
popa
mov
jne
pop
gs
adc
orb
mov
test
jecxz
jo
mov
mov
xor
mov
dec
mov
push
cmpsl
or
shr
pushf
data16
and
pop
scas
mov
outsb
mov
pop
jae
clc
inc
les
push
mov
jns
mov
xchg
out
mov
addl
mov
xor
lods
shll
sub
cs
dec
inc
mov
cwtl
rcrl
vpavgb
in
ss
and
in
jp
adc
jns
sub
xchg
loope
and
adc
sub
sub
or
lcall
cmp
mov
push
mov
mov
in
out
aam
jl
jb
push
fldt
pop
mov
addb
loope
sub
push
lret
and
xchg
mov
scas
loopne
inc
jl
addr16
lcall
dec
pushf
jns
shlb
hlt
xchg
das
sbb
mov
cld
or
mov
imul
ret
inc
xchg
hlt
sub
xchg
test
clc
pusha
inc
sbbb
xor
sahf
push
nop
enter
adc
fcmovbe
mov
and
push
mov
add
pop
xchg
in
mov
pop
cld
dec
inc
les
inc
pop
lds
xchg
cmpl
popf
mov
fldcw
adc
daa
cmc
out
fsubrl
jno
popf
repz
cmp
dec
xchg
cmp
sti
push
jbe
mov
scas
fisttpl
ljmp
pop
pop
cmpl
add
and
adc
loop
inc
comiss
push
xor
dec
lret
or
xchg
pop
inc
mov
stos
xchg
cmp
sbb
lahf
inc
orb
popf
ljmp
adc
repz
mov
cmp
orl
push
cmpsb
sbb
mov
out
pop
xchg
sub
test
cmp
add
lods
rorb
test
sub
xchg
add
cmp
and
mov
inc
lret
idivb
sub
push
mov
mov
int
lods
add
mov
fs
xchg
xchg
push
out
sub
addr16
inc
addl
movsb
test
fstl
test
out
push
outsl
roll
sub
add
sbb
int
inc
mov
pop
jecxz
xor
cwtl
dec
jle
test
fistps
xor
jecxz
int3
jmp
sbb
ds
imul
mov
movsl
push
lods
test
rol
sbb
inc
int3
testb
mov
cld
cmp
pop
mov
pusha
pop
enter
lock
pop
pop
shr
xchg
dec
vdivss
cltd
add
pop
pop
stos
jecxz
pop
pop
jmp
stc
popa
adc
mov
ja
insb
cwtl
push
loope
inc
cmp
int3
dec
test
xor
push
jmp
adc
mov
push
test
bnd
mov
add
into
popa
js,pn
sub
in
leave
sub
ss
add
pop
mov
mov
test
adc
push
icebp
loope
xchg
lcall
or
xchg
adc
ret
xor
pop
into
mov
jl
cmpl
clc
lds
jns
jbe
js
decl
jo
call
sti
bound
mov
xlat
adc
rcll
fcompl
and
push
push
jno
jmp
xor
add
or
mov
fs
pop
and
jno
xchg
lret
xchg
or
daa
sub
enter
pop
jns
sub
add
xchg
mov
daa
push
xchg
in
lods
fists
add
pop
pop
add
xchg
ds
in
enter
jne
mov
xchg
xchg
sbb
mov
lret
mov
sub
nop
and
xchg
push
xchg
in
int3
imul
and
repz
imul
fs
das
inc
in
pop
pop
sbb
pop
pop
mov
cmpsb
psllq
or
lcall
add
cmc
ja
ds
pop
in
dec
inc
dec
std
aam
pop
xor
out
adcb
rol
test
movsl
out
test
inc
push
lcall
int3
push
mov
rcl
jl
and
sub
sub
fwait
jns
or
int3
icebp
pushf
dec
popa
xor
and
movl
ds
hlt
pop
or
mov
cs
add
and
cmc
sbb
enter
add
inc
icebp
sbb
xor
push
ficoml
and
es
es
adc
xor
in
jo
loop
xchg
jl
push
movsb
sub
push
movsl
sub
movsb
ja
out
cmpsl
mov
bound
neg
dec
fstps
adc
scas
mov
jge
pop
cltd
or
fs
leave
mov
inc
push
rclb
iret
frstor
inc
shll
lds
xchg
cld
xchg
cli
cld
pop
push
aad
das
cmpsb
pop
dec
add
adc
fadd
jbe
in
add
jns
dec
dec
cwtl
ds
pusha
into
add
andl
mov
pop
mov
jno
cmp
dec
adcl
aam
pushl
lahf
repz
lods
xchg
mov
clc
mov
int
jl
sahf
push
sub
inc
xchg
or
hlt
adc
cmp
and
mov
adc
scas
push
aad
mov
nop
xor
inc
push
xlat
aad
dec
pusha
cli
je
jo
xor
mov
dec
std
in
addr16
xor
orl
jae
jg
add
mov
dec
sub
adcb
leave
and
mov
pop
xchg
inc
idivb
mov
or
stc
movsb
mov
adc
lock
repnz
lods
xchg
and
push
push
les
and
lods
sub
shll
inc
pop
scas
jle
ss
xor
or
test
dec
aam
pop
pop
test
pop
jmp
aad
cmpsl
jnp
fs
sub
rcrl
pop
mov
sbbl
pop
loopne
xor
xor
std
movsb
mov
mov
sub
mov
mov
sti
mov
inc
pop
pop
loope
and
pusha
inc
jecxz
outsl
dec
sub
adc
pop
push
movlps
std
mov
in
adc
mov
and
mov
gs
inc
stos
adc
push
sbb
push
clc
outsb
icebp
bound
dec
xor
in
jle
pop
outsb
es
stos
aaa
shrb
dec
popa
sbb
push
xor
mov
jge
loop
add
xchg
xor
inc
idivb
ds
push
sub
dec
xchg
test
cltd
lret
cmc
test
comiss
adc
xchg
pushf
pop
lods
inc
cltd
sub
fsubs
mov
iret
in
das
imul
daa
movsb
sub
popf
dec
jno
lahf
mov
das
add
sarb
jp
adc
sahf
insb
and
bound
push
hlt
push
daa
enter
mov
jae
mov
mov
add
cmp
dec
mov
mov
sub
lds
lret
fistl
pop
popf
push
aaa
jns
xor
daa
cmp
shlb
add
popa
addl
and
stos
lret
imul
insl
lret
arpl
dec
xor
aad
les
lods
sahf
jge
push
lods
gs
fucomip
xchg
xor
xchg
xlat
jge
cmc
inc
hlt
cltd
lods
jge
inc
jg
and
fs
pop
and
xchg
xchg
xchg
arpl
ss
jg
in
cmp
data16
sbb
or
imul
gs
scas
jno
lods
out
xchg
sbb
cmp
xchg
lea
shll
cmp
cmc
int3
cmpb
and
dec
int
pop
mov
sbb
xor
and
js
xor
ret
es
xor
or
adc
repnz
jb
arpl
pusha
scas
push
lcall
mov
das
ret
sub
insl
and
cs
fdivs
mov
lahf
adc
in
lods
gs
mov
xor
mov
and
lods
jmp
add
lahf
cmp
imul
mov
lds
test
xor
cmp
loopne
mov
jne
dec
adc
dec
sub
cmp
icebp
lret
mov
sub
fldt
cmp
shll
out
dec
fsqrt
hlt
sub
icebp
sarb
in
test
aas
jno
dec
js
pusha
sbb
push
decb
sbb
or
xchg
ja
jb
sbb
cmp
cmp
lahf
es
or
sbb
dec
insl
inc
aad
lea
icebp
aam
cltd
push
popa
adc
push
out
lret
xchg
push
sub
enter
int
call
push
xor
inc
adc
ret
pop
push
outsb
fimuls
iret
pop
aaa
mov
std
scas
mov
xchg
inc
pop
inc
cmp
in
cwtl
xor
and
pop
fisubs
cmp
mov
mov
out
add
mov
fwait
or
pop
and
jge
sahf
pop
xchg
dec
mov
aad
adc
cmp
mov
scas
arpl
jle,pn
sub
mov
jecxz
adc
iret
test
jecxz
cld
and
inc
neg
xorb
add
sbb
leave
cltd
icebp
mov
cmpsl
xchg
cmp
mov
lods
rorb
out
lods
lea
enter
mov
adc
adc
xchg
loope
into
lret
jmp
add
outsl
inc
daa
pop
sti
push
je
rcrl
jae
test
jae
or
pop
jg
pop
jl
cmpsb
sbb
mov
push
mov
mov
sub
xchg
sbb
imul
jge
arpl
and
mov
popa
add
push
or
xchg
insb
arpl
das
mov
fsubrs
xchg
cmpsl
adc
or
jmp
stc
stc
out
inc
push
jb
fsubl
in
cmc
push
daa
dec
sti
mov
lods
rcrl
dec
fildl
adc
pop
jge
jle
or
fwait
xchg
ja
scas
sub
daa
js
jno,pn
popf
jae
cltd
loope
lea
push
mov
lock
and
popf
dec
ljmp
add
adc
ja,pt
test
cs
shrb
jno
mov
xor
insb
add
dec
ds
adc
aad
push
sbb
and
mov
cli
lea
not
mov
mov
add
pop
cmp
ficomps
and
push
int
dec
std
std
xchg
mov
mov
and
test
rcl
lahf
sti
movsl
mov
data16
inc
xor
jge
jmp
outsl
out
mov
add
cmp
or
dec
mov
daa
lahf
insl
fs
add
std
lret
notb
data16
pop
fmul
xor
jae
scas
or
int
cmp
push
or
dec
jnp
aas
lds
mov
scas
cwtl
stos
sub
sahf
xchg
or
sbb
inc
rcll
lods
jge
inc
aam
sbb
xchg
addl
in
push
xor
aaa
pop
lret
inc
ret
and
push
jno
fcomi
lret
popf
pop
int
in
xor
dec
push
push
and
lahf
add
sub
imul
dec
push
add
aad
mov
lret
xchg
les
nop
cmpsl
and
xor
cmp
test
out
repz
scas
aaa
loope
mov
and
jo
out
cltd
iret
stos
arpl
out
inc
subl
inc
mov
xor
mov
and
mov
mov
mull
and
out
popf
mov
sub
fidivl
gs
cmpl
pop
jp
push
xor
push
cmp
sub
cmp
mov
cmp
in
adc
in
outsl
inc
push
inc
push
ret
cld
pop
mov
cmp
lcall
xlat
ret
and
and
sub
and
jmp
je
clc
or
mov
loopne
nop
imul
mov
add
sahf
cmp
pop
ljmp
test
cld
cli
aad
insb
aam
shll
and
xchg
mov
xchg
mov
and
xchg
popf
inc
push
xchg
pop
loope
out
inc
jmp
or
add
dec
ss
fcomip
inc
insb
call
push
mov
out
andl
push
scas
clc
mov
popa
cwtl
jno
xlat
dec
cmp
mov
dec
xor
fildll
ja
stc
arpl
fadds
jno
aad
scas
popf
cltd
xchg
jae
sahf
adc
in
mov
mov
cwtl
jae
mov
ja
mov
daa
mov
shrb
mov
mov
or
pop
lcall
rep
xlat
xor
add
lret
push
das
lock
ret
jb
mov
cmpsl
les
add
mov
pop
sar
fs
shlb
mov
dec
inc
pop
fxtract
cmpsl
jmp
push
idivl
rcrb
sahf
sti
addl
testl
stos
loope
adc
aad
pop
sub
jns
cmp
or
add
loope
pop
ficompl
pop
jno
ficompl
or
sub
pop
out
lods
jne
pop
mov
sub
fcompl
fistpl
and
popf
mov
sti
mov
sbb
and
jle
pop
test
push
sub
fnstsw
and
fildll
xchg
rol
icebp
fnstsw
pop
pop
xchg
gs
push
sbb
pop
in
out
lcall
push
loop
jnp
sahf
push
cmp
scas
ret
mov
es
push
faddp
mov
jmp
roll
or
inc
inc
clc
add
data16
mov
inc
inc
lock
mov
adc
popf
xchg
sub
cmp
cmp
or
push
add
shrl
jmp
gs
xchg
adcl
pop
push
mov
jo
mov
mov
inc
push
cmp
lahf
dec
mov
stc
jg
inc
sub
sbbl
cmpsl
pop
lea
cwtl
repz
sub
out
js
daa
push
test
std
sub
add
cmp
cmp
push
mov
and
les
cmp
inc
pop
lret
rorb
stos
mov
or
mov
sarl
add
mov
mov
add
sub
mov
pop
dec
push
cwtl
imul
xor
imul
lods
or
adc
push
sbb
jo
enter
adc
mov
xchg
test
mov
loopne
test
xor
mov
inc
adc
jle
and
push
cmp
xchg
call
icebp
add
repnz
xchg
push
or
xor
ds
call
xchg
xchg
shll
lahf
and
int
pop
mov
in
push
inc
rcrb
mov
popa
out
ret
mov
sub
fldl
mov
pop
cmp
inc
in
insl
pop
push
lds
cmpsb
rolb
rorb
fwait
and
cmp
push
sub
jecxz
push
stos
stos
mov
xor
adc
mov
test
jbe
jne
dec
lods
cmpl
sub
adc
xor
cmp
mov
xchg
test
xchg
out
int
and
test
les
xor
xchg
mov
mov
mov
imull
push
outsb
and
out
add
ret
test
cmp
orb
xchg
xor
lock
jnp
xor
push
data16
fcompl
sahf
jnp
sbb
mov
addr16
add
ficomps
mov
add
aam
xchg
shll
imul
in
js
int3
jns
aas
mov
mov
cmpsl
xchg
addb
xor
movb
and
addr16
loop
jb
scas
xchg
aad
push
sub
push
pusha
cmp
or
aaa
xor
dec
aaa
dec
adc
mov
aam
fbstp
cmp
cmp
and
push
jl
mov
into
sbb
mov
xchg
cmp
rcrb
sub
push
lahf
je
sbb
stos
mov
mov
xor
mov
lcall
jns
mov
rorb
cmp
aas
testl
xchg
or
dec
jb
and
arpl
out
sub
push
mov
mov
insl
in
sub
adc
xchg
cmc
jl
sub
fistpl
aam
xchg
imul
jae
jne
and
gs
in
lea
out
cmpsl
dec
rorl
fistl
inc
jnp
xchg
mov
scas
push
jae
dec
sub
sbbb
cmp
or
lea
aas
push
mov
mov
ss
cwtl
popa
or
loope
roll
dec
outsb
ror
bound
jbe
dec
in
inc
pop
adc
add
mov
pop
jno
mov
cmp
and
mov
inc
push
xchg
sub
rcrl
adc
xchg
dec
dec
cmpsb
test
outsl
mov
std
rorb
in
mov
jno
out
push
sbb
fdivl
mov
cmp
incb
mov
fists
hlt
dec
cmp
pop
test
mov
jp
jb
mov
inc
in
inc
xchg
sub
scas
dec
cld
mov
jp
mov
sub
stos
pop
insl
popw
js
sub
mov
cmpl
inc
mov
movsb
mov
jle
movsb
or
loopne
jl
xor
cmc
iret
jno
mov
xor
pop
mov
inc
cltd
iret
xchg
popa
pop
ret
push
mov
repnz
testl
in
cmpsb
iret
dec
lcall
pop
imul
xor
mov
loope
xchg
popf
sub
push
mull
aad
icebp
lods
or
inc
movl
popa
stos
jo
pusha
fcmovnb
pop
clc
scas
mov
lods
push
js
mov
add
jmp
ljmp
out
insb
call
cmpsl
out
test
enter
jo
dec
psrld
mov
pop
out
jo
push
ljmp
popf
xlat
scas
or
xchg
cli
dec
xchg
mov
sbb
stos
sbb
jo
sbb
pop
push
cmp
dec
popa
xchg
outsb
ds
xor
cmp
test
xor
lds
xor
out
pop
test
aas
mov
jp
ljmp
push
add
mov
inc
outsb
xchg
adc
adc
jmp
shrb
xor
repnz
int3
mov
in
jmp
dec
cmp
test
and
and
fwait
cli
mov
add
xlat
mov
xchg
lea
cmp
fstl
jl
popa
mov
imul
push
dec
mov
arpl
pop
sub
fstpt
jg
sbb
adc
and
and
pusha
bound
xchg
sub
lds
xor
xor
cmp
loopne
out
mov
jecxz
sub
cmp
jge
loop
fbld
orl
xor
shll
addr16
xchg
adc
stc
xor
jmp
iret
cmpsl
mov
imul
mov
leave
call
push
inc
inc
lahf
imul
cltd
jecxz
lds
loope
xchg
inc
inc
cs
xchg
fsubrl
xchg
lea
xchg
or
and
jg
and
inc
jns
push
out
negl
das
xor
pop
jo
dec
xor
xor
rcrb
insb
adc
gs
mov
lret
fstps
xchg
sbb
mov
jbe
hlt
or
mov
pop
and
cmp
xchg
jne
dec
jnp
cmp
mov
test
and
iret
sub
push
lahf
pop
ret
mov
adc
inc
fwait
and
add
iret
test
jle
loopne
sub
pop
xchg
push
int
push
xchg
addl
xchg
sub
les
stc
out
aam
lea
test
sbb
ror
test
aam
xchg
ficoml
adc
dec
add
pop
ljmp
adc
rolb
clc
mov
lea
sub
ret
dec
cmp
fisubrs
insl
insb
aad
movsl
mov
jo
sub
pop
add
inc
add
and
orl
jge
xchg
jnp
das
mov
or
or
lods
fdivrl
mov
icebp
cwtl
cmpb
lret
mov
dec
dec
cmp
adc
insb
int
lret
push
mov
jno
cmpsb
xchg
movb
pop
in
pop
cli
push
stos
out
lret
lret
leave
dec
ljmp
mov
in
popa
push
insl
test
dec
sbb
dec
dec
dec
outsb
orl
mov
popa
popf
add
insb
jle
mov
mov
add
lret
inc
pusha
add
mov
ds
cs
jge
cmp
mov
into
ds
mov
cmp
cmp
je
scas
jnp
cmc
inc
cmpsl
rcrb
xlat
in
inc
inc
jo
mov
push
js
pop
stc
std
fwait
mov
insl
add
or
mov
jb
rcll
test
pop
cltd
push
test
popf
lds
pop
or
inc
movsb
sti
btc
pop
mov
cmc
mov
aas
sbb
fadd
dec
dec
inc
lcall
xor
insl
jg
nop
fwait
clc
add
mov
cmpl
pop
nop
jae
cltd
xchg
push
or
mov
xchg
push
jb
or
hlt
shrb
xor
xor
daa
daa
movsl
jns
inc
loopne
sbb
sahf
jmp
inc
arpl
pop
loop
jno
mov
mov
test
js
mov
push
add
ret
mov
aas
data16
xor
js
xor
push
mov
cwtl
mov
sbb
push
jbe
cmp
and
popf
adc
jmp
jns
test
mov
insb
ret
je
cmp
mov
cmp
imul
and
subl
in
shll
jecxz
sbb
or
mov
fisubrs
mov
and
cmp
imul
push
cmpsb
or
loopne
int3
testb
enter
rorb
daa
test
fsubl
sbb
jo
ss
fistl
mov
push
mov
xlat
xchg
bound
add
enter
cmpl
mov
xchg
pop
popa
aam
mov
jle
lods
lret
frstpm(287
lcall
mov
in
jno
adc
ds
xchg
add
lea
mov
cld
jp
or
insb
das
dec
and
pusha
jb
jecxz
pop
xor
ja
add
das
loopne
jo
and
xchg
add
sbb
movsb
fcoms
cmpsl
aam
test
or
cld
fadd
and
repz
stos
scas
pushf
rorl
les
test
scas
out
test
out
push
std
xchg
aaa
rorb
addb
imul
les
sub
xchg
aaa
xchg
add
add
and
push
sub
adc
dec
and
mov
fucomip
popf
xchg
aam
subl
or
inc
push
inc
mov
nop
xor
adc
sti
loopne
or
popf
lret
shrb
xor
addr16
adc
sub
inc
push
sbb
mov
jmp
mov
and
xor
push
pop
or
test
mov
pop
in
ljmp
icebp
or
inc
clc
addb
mov
cmp
sub
add
push
mov
sub
jmp
xor
add
subl
add
arpl
push
ret
js
stos
sub
add
arpl
xchg
mov
cld
push
dec
outsb
mov
aaa
push
out
out
inc
xor
lcall
aad
adc
aad
and
mov
jns
push
push
cmp
leave
jle
shrb
repnz
aas
roll
pop
lds
js
mov
and
addb
test
dec
lahf
pop
mov
pop
mov
adc
aas
out
xchg
mov
mov
fldcw
push
subl
fistl
cmc
mov
xchg
cmp
and
jge
scas
add
push
xchg
jmp
pop
or
and
push
inc
stc
or
and
pop
push
test
pop
xlat
sbb
cmp
mov
roll
popa
es
repz
mov
xchg
in
rcrb
and
mov
sub
loope
clc
addr16
xor
mov
xor
daa
push
push
pop
jmp
popa
jge
add
adc
dec
test
aam
ret
scas
mov
push
cmp
out
pushf
cmp
and
sarb
cltd
dec
sbb
fnsave
pop
xchg
notl
xchg
inc
add
mov
cmp
pop
cmp
jmp
ljmp
add
cltd
adcl
push
xor
lret
call
sbb
or
push
test
sub
out
scas
add
loopne
jo
dec
mov
int
imul
insl
addl
mov
gs
loope
lea
push
inc
aad
add
pop
mov
aas
aad
out
and
je
or
insb
repnz
rolb
cmp
loopne
das
arpl
inc
lea
lcall
mov
push
cmpsb
imul
out
or
sub
pop
jecxz,pn
pop
sub
pop
or
add
andl
loop
and
subb
les
cld
mov
or
fistpll
inc
das
pop
sub
in
mov
movsl
ljmp
push
jl
mov
fsubrs
nop
das
mov
gs
test
or
push
dec
and
ds
lds
add
mov
mov
mov
jle
or
int
rorl
icebp
push
pop
data16
std
rolb
fwait
lods
pushf
mov
adc
ja
lods
push
f2xm1
rorl
push
dec
fs
and
mov
cmp
inc
lcall
push
xchg
fwait
shr
stos
popa
pop
jl
and
mov
mov
std
mov
jmp
pop
pop
rclb
jle
mov
mov
lds
push
es
mov
stos
sbb
or
jp
inc
inc
add
sbb
sbb
negl
mov
sbbl
jle
test
dec
out
mov
cs
and
lea
dec
in
jno
push
xor
or
test
notb
xor
iret
subb
dec
mov
ja
lcall
xchg
ljmp
push
movl
sub
jb
push
arpl
sub
sbb
rcll
mov
adc
ds
loopne
in
enter
mov
pop
test
jnp
pop
movsl
cmp
mov
cmpsl
push
popa
adc
push
lods
inc
jns
popa
fbld
insl
insl
mov
cmp
roll
mov
outsl
adc
setae
push
imul
mov
ljmp
fisubrl
pop
imul
fstps
cmp
lret
loopne
shll
and
aam
pusha
inc
loope
jge
in
jmp
ffreep
insb
stc
mov
dec
xchg
mov
cmp
and
subb
scas
adc
notl
xchg
push
mov
scas
loope
add
mov
cltd
jne
rolb
lcall
jno
les
jge
jmp
inc
addr16
imul
push
movsb
hlt
jecxz
xor
and
mov
lods
sbb
outsb
jmp
out
stos
or
xchg
xlat
push
and
cmp
lods
aaa
out
sub
negl
shrl
mov
sbb
stos
inc
fdivrs
xchg
pop
push
or
aaa
xchg
nop
mov
xor
and
shll
ret
cltd
aad
sub
sub
jae
add
jmp
push
jecxz
fs
push
dec
imul
xlat
inc
popa
add
push
ficoms
repz
cmp
cmc
aam
xor
fisttps
cmpsl
mov
das
add
shrb
lea
mov
cmp
sub
insl
and
and
repz
lcall
jmp
es
lods
es
add
sub
xchg
sti
popf
push
addr16
cwtl
scas
cmc
pusha
adc
in
data16
pop
sarl
cmp
fwait
je
dec
popa
dec
fmuls
xchg
repnz
ds
sub
stc
insb
mov
enter
push
loopne
imul
mov
add
out
pop
xchg
mov
mov
arpl
jge
adc
jl
fidivrl
jo
xorb
aas
jmp
push
pop
dec
inc
pop
bnd
mov
push
push
pop
push
out
bound
mov
jo
pop
mov
rcrl
xorl
lds
js
int
das
rclb
add
mov
movsb
xor
mov
in
out
add
dec
movsl
add
sub
mull
scas
sbb
aaa
push
popa
pushf
jg
cmpsb
or
jnp
orl
cmp
jbe
adc
mov
pusha
es
repnz
mov
sub
sbb
imul
stos
shrl
inc
insb
jecxz
fidivrl
xor
inc
or
lahf
sbb
pusha
mov
arpl
das
repz
xor
ror
add
cmp
jns
fdivrs
jno
adc
ja
psrld
gs
shl
cs
sbb
xchg
or
pop
bound
jne
xchg
in
cltd
xchg
mov
das
pop
xchg
insl
and
cmpsb
push
lahf
mov
adc
loopne
xor
pushf
xor
sub
outsl
outsl
test
jae
push
rcrb
ret
test
adc
test
das
push
sahf
shrb
repz
call
mov
out
sahf
push
movsl
data16
fcomip
pop
xchg
ljmp
adc
les
pop
movsb
pop
jo
jne
leave
xor
mov
loope
divl
in
ret
nop
sbb
cli
and
sahf
mov
rorl
sub
js
cld
cmp
imul
fdivl
ds
xchg
es
adc
push
and
jbe
pop
movsb
xchg
xchg
cmp
xchg
xchg
dec
int3
call
ds
je
sbb
fwait
jo
bound
sub
ret
andb
sbb
scas
pop
insl
lcall
in
out
out
out
cmp
stos
adc
int3
in
je
mov
mov
jns
jmp
jne
mov
and
xchg
movsb
mov
jbe
and
mov
add
dec
cmp
mov
int
andl
lahf
int
adc
sti
xchg
je
push
jno
or
inc
in
mov
adc
shll
pop
xchg
addr16
inc
fs
xchg
fsubl
in
ret
mov
and
icebp
imull
fisubrs
push
ret
sub
xchg
fistps
leave
xlat
leave
or
push
or
iret
iret
sbb
xchg
or
test
fimull
jbe
dec
push
xlat
mov
sub
outsb
sub
push
bound
xchg
lods
adc
roll
daa
pusha
sahf
adc
mov
in
adc
out
clc
loopne
add
call
push
xchg
mov
push
cld
and
adc
adc
dec
mov
and
xorl
mov
cwtl
pop
bound
add
cmp
leave
cmp
jne
mov
push
mov
fidivs
jae
sbb
pop
pop
xor
sbb
sbb
inc
aaa
ljmp
in
pop
lcall
lock
xchg
hlt
mov
pop
arpl
mov
and
mov
into
inc
xchg
aam
sub
sub
mov
in
push
xchg
loopne
movsl
mov
gs
pop
pushf
jns
andb
cld
fiadds
xor
addr16
jg
fs
int3
or
mov
xor
adc
pop
sub
aad
pusha
jmp
jb
int3
mov
lods
jl
mov
jmp
repnz
popf
xchg
pop
pusha
jno
inc
imul
sub
or
and
test
mov
pushf
loopne
push
shrb
test
adc
les
ljmp
rcrb
xchg
jbe
fnstsw
pop
ja
sbb
nop
inc
aam
push
adc
add
iret
imul
mov
sbb
mov
jbe
addr16
mov
mov
adc
mov
add
push
and
psrld
cmp
add
loop
jns
cmp
mov
popf
gs
fsts
push
pop
rcll
aas
iret
and
mov
out
repz
pop
stc
mov
xchg
and
sub
mov
inc
lods
pop
fwait
push
repz
cmc
pushf
add
not
push
jmp
stc
inc
pop
xchg
push
shlb
and
outsl
mov
xchg
out
and
les
out
int
xchg
mov
xlat
cmp
mov
sbb
cwtl
push
push
inc
insl
js
adc
lea
jo
imul
rol
xchg
mov
sar
dec
pop
mov
cli
jmp
xchg
mov
lret
ja
in
shrl
jp
push
xchg
pop
xlat
sbb
mov
int
push
mov
jmp
int3
sbb
data16
aaa
cltd
jb
mov
mov
mov
bound
mov
loopne
into
popa
pop
add
mov
in
out
sahf
out
arpl
loope
push
jl
inc
mov
data16
and
add
add
cmc
mov
cmp
lods
jo
leave
jo
rcrl
imul
sti
inc
ljmp
mov
and
call
adc
mov
int
xor
loop
mov
mov
aad
sbb
xchg
aad
shlb
xchg
push
push
gs
inc
push
xor
lock
push
pusha
pop
lahf
movsb
gs
pop
adc
and
mov
add
pop
adc
insl
lcall
pop
push
loop
scas
cwtl
push
xchg
mov
ljmp
out
mov
out
xchg
lock
int
ret
xchg
std
nop
sbb
add
or
ss
daa
and
xlat
push
mov
add
sbbl
ret
fs
mov
test
inc
lds
jl
xchg
icebp
mov
mov
inc
pop
lods
jmp
mov
sub
cmp
or
or
pop
jp
xchg
or
inc
jno
loope
in
mov
nop
cmp
jo
sub
adc
dec
cmp
sbb
push
sub
mov
adc
ljmp
push
add
lret
int3
negl
push
clc
dec
pop
stc
ljmp
mov
xor
stos
sbb
stos
fmuls
movsl
loop
js
js
aas
iret
mov
cs
or
call
xchg
push
mov
bound
fcoml
adc
xchg
pop
and
push
jb
xor
fists
sub
xorl
sar
sub
pop
mov
pop
cmp
push
enter
movsl
xorb
nop
ljmp
inc
xchg
addr16
jge
adc
or
dec
push
insb
das
out
in
insl
cmpsl
pop
adc
cmp
lcall
aaa
dec
lock
xchg
sub
cmp
adc
roll
loop
xor
xor
xchg
xchg
or
movsb
sub
mov
dec
push
push
rclb
inc
lret
in
addr16
jae
push
push
sub
dec
lods
or
pusha
mov
js
cmp
jns
and
enter
jno
cmp
scas
sti
add
sbb
jo
inc
lret
adc
cmpsl
pop
pop
insb
push
jecxz
xchg
outsb
popa
ja
outsb
insl
ja
insb
imul
mov
in
xchg
daa
ja
mov
sub
cmpsb
fdivrl
in
adc
jae
mov
imul
mov
xchg
imul
adc
cmp
cmc
pop
hlt
pop
inc
insl
fxch
mov
adc
sahf
add
js
leave
jecxz
push
inc
and
inc
aad
movsl
add
out
and
push
dec
jne
inc
dec
xchg
roll
lret
xchg
mov
out
jns
cmpsl
out
fdivrl
pusha
subb
jge
shll
loopne
mov
pminub
lret
mov
jmp
popa
dec
mov
pop
fldcw
jg
add
test
or
test
mov
push
mov
dec
jbe
popf
inc
cli
mov
sbb
dec
push
in
lea
movaps
mov
das
cmpsl
cmp
or
idivl
lcall
fwait
xchg
dec
jmp
mov
push
mov
push
mov
and
bound
xor
loopne
movsb
jp
xor
or
inc
inc
sbb
mov
push
jmp
jl
movsl
cmp
out
aad
push
orl
jp
xchg
and
inc
stc
setl
shl
inc
xchg
rcrl
stos
dec
inc
xchg
shrb
popa
mov
inc
gs
aam
push
push
and
pop
add
xchg
mov
outsb
mov
sbb
jmp
test
pop
aaa
sub
mov
gs
add
mov
scas
sarl
shr
and
sbb
pop
ror
inc
add
mov
xchg
adc
es
inc
dec
fdivs
push
adc
jae
repz
mov
jno
test
pop
sub
ret
clc
scas
jae
mov
jnp
or
lock
mov
repnz
int
out
adc
daa
mov
std
fldl
je
adc
inc
inc
xor
hlt
jns
inc
pop
and
push
ss
lret
or
rcrl
insl
push
jo
fcomps
mov
add
dec
jmp
jbe
cmp
push
xchg
fists
shll
aad
js
adc
mov
lret
inc
mov
pushf
mov
pop
in
scas
push
add
lods
mov
stc
xchg
arpl
jmp
mov
aam
mov
cmc
sub
scas
lds
ss
les
dec
into
rorl
flds
and
mov
add
sbb
lret
jecxz
xchg
cmc
aaa
repz
sub
pop
aaa
and
fmull
loope
jl
dec
mov
shl
lock
jge
call
or
imul
and
add
xchg
fisttps
out
lea
jg
pusha
pop
jp
je
xchg
lods
lods
lret
mov
lods
dec
in
ret
std
jns
rclb
mov
ljmp
hlt
mov
sub
jae
rorb
pop
inc
pop
and
pusha
stos
sub
call
pop
loop
mov
popf
mov
ljmp
jno
fnsave
daa
and
cmpsl
add
dec
mov
sub
dec
lds
ja
cltd
mov
inc
jg
push
aaa
cmpsl
add
push
inc
loopne
push
push
push
dec
mov
or
lret
sbb
or
in
mov
ret
pusha
jo
lods
cmp
xor
sti
cltd
loope
lods
xchg
mov
ret
jnp
popa
push
push
dec
insl
daa
lret
into
mov
enter
test
jb
mov
cmc
out
sbb
ja
mov
pop
push
sbb
and
cmpsl
scas
cmp
mov
xchg
mov
sub
cmp
add
jge
mov
and
xor
lock
adc
sub
fwait
out
insb
lahf
cmp
dec
loope
inc
mov
shl
pop
test
mov
push
or
and
push
ljmp
insl
movsl
or
ret
xchg
push
in
xlat
imul
mov
sbb
sarb
scas
popf
xchg
call
dec
lock
leave
into
outsl
int
les
cmc
adc
movsl
mov
repnz
shll
lds
outsb
test
pusha
dec
inc
sbb
aam
out
push
xchg
jae
fcoml
adc
jno
mov
sbb
stos
lods
inc
push
jb
jbe
push
xchg
sub
movsb
outsb
std
mov
hlt
mov
ljmp
div
rclb
popf
add
jno
inc
mov
dec
popf
divb
scas
xor
orl
jae
cmpsb
jmp
and
lea
mov
jns
inc
notb
mov
dec
subl
int3
or
test
xor
pop
data16
testb
lahf
jle
and
push
cs
push
push
out
dec
mov
cld
dec
xchg
or
cmovns
and
mov
mov
scas
in
xchg
rorl
stos
clc
dec
ret
fisttpl
inc
lret
mov
iret
fwait
and
ret
rorb
aaa
les
das
std
pop
adc
cmp
out
ficoml
icebp
out
stc
movsl
stc
stc
mov
and
std
and
stc
popa
dec
sbbb
dec
in
popa
xchg
dec
sbb
into
pusha
xor
sub
jno
xchg
jecxz
gs
jnp
jns
stos
inc
mov
adc
xchg
dec
rcl
fmuls
xchg
jo
in
jl
cmp
sbb
dec
dec
loop
mov
repz
loope
aad
out
dec
fstl
ss
adcl
add
pop
inc
pop
test
inc
cld
push
push
push
dec
sub
mov
nop
out
aam
subl
in
pop
jp
clc
pop
push
in
adc
loope
mov
jg
jecxz
dec
adc
inc
fisttpll
imul
dec
setae
clc
add
aad
fwait
lods
movsl
jns
leave
pop
mov
mov
mov
dec
pop
cmpsb
sbb
jae
scas
xor
pop
mov
jae
sbb
in
sub
cltd
out
sahf
ret
test
pop
push
cmp
xlat
mov
jae,pt
mov
pop
jl
jnp
add
ret
rcll
mov
push
mov
mov
fs
and
pop
repz
test
insl
push
mov
repz
xchg
mov
pop
mov
pop
sub
pusha
or
push
jmp
cmpsl
mov
adc
insl
bound
cmp
pop
push
js
int3
sub
clc
aad
mov
mov
add
pusha
jecxz
adc
mov
pop
dec
add
xor
aas
test
cmp
sarl
in
lods
fstpl
jecxz
push
lret
xor
sub
es
fwait
dec
or
lds
fmull
clc
and
outsb
shll
imul
cli
clc
ss
xor
loop
imul
roll
push
imul
push
push
xchg
ret
gs
call
mov
test
ds
cwtl
ljmp
in
loope
in
mov
xor
stos
pusha
aam
mov
push
or
jno
imul
xchg
pop
fidivrs
mov
leave
and
mov
pop
mov
lret
repnz
scas
test
ret
add
aad
pushf
insl
mov
mov
sub
cwtl
adc
enter
or
fbstp
pop
xchg
xor
sbb
sbb
sub
xor
iret
incb
dec
pop
and
xlat
cs
scas
or
cmp
mov
sub
cltd
push
insb
pop
sub
in
cmp
inc
popf
or
scas
lods
xchg
outsl
lods
add
lahf
xor
sub
fnstcw
imul
dec
das
mov
cmp
jle
adc
idivb
stos
inc
cli
mov
mov
or
cld
int3
xchg
cmp
mov
adc
nop
cmp
push
cmp
mov
cld
sahf
repnz
mov
daa
movsl
shll
fldenv
mov
int3
sub
mov
and
in
shll
filds
subl
xchg
stc
ret
pusha
and
inc
scas
dec
lahf
scas
rorl
pop
dec
adc
sti
aaa
mov
pushf
pop
pop
cmp
mov
in
mov
in
adc
lds
mov
outsl
dec
or
cmp
imul
repz
push
lods
and
shlb
xchg
dec
mov
jmp
and
sarl
push
insl
xorb
jo
out
push
and
movl
lahf
jecxz
inc
clc
or
xchg
mov
push
icebp
cmp
clc
adc
invd
fwait
jle
mov
pop
pushf
mov
xor
loopne
mov
pop
inc
pop
mov
aam
pop
inc
daa
ljmp
inc
rcrl
rorb
sub
xor
xorl
das
jle
push
push
mov
jge
lea
test
inc
cmpsl
popa
scas
mov
pop
and
addl
mov
jmp
inc
stos
xchg
xchg
aad
push
stos
fsubp
rorb
and
ficoml
xchg
leave
lds
adc
push
cmp
test
cmp
lret
xchg
xlat
insb
sahf
mov
data16
mov
mov
arpl
stc
pshufw
push
clc
cmpsb
iret
sbb
in
adc
lret
out
mov
scas
add
cwtl
cs
xchg
push
mov
arpl
pop
sub
inc
in
jmp
stos
mov
cltd
adc
imul
movsl
and
fdivl
adc
pop
rolb
and
fs
mov
xor
jns
xor
and
dec
and
roll
push
sbb
subb
out
mov
cmp
popf
shrb
sar
mov
mov
lea
jno
orl
mov
jl
mov
adc
push
out
push
jne
cmpsb
out
arpl
ja
mov
call
cmc
pushf
sbb
jo
jb
pusha
adc
movsl
sbb
pop
aad
xchg
ds
mov
pop
cmp
bound
mov
and
das
popf
sub
sbbb
cs
in
inc
ds
push
jl
push
sti
aas
fistps
push
sbb
test
lods
jb
and
pop
jbe
test
into
cmp
push
adc
pop
or
aam
lods
outsb
leave
mov
cmpsb
fbstp
sub
sar
pushf
in
inc
gs
cmp
mov
ljmp
imul
xchg
mov
fidivrl
fsubs
ljmp
mov
sub
je
notb
add
inc
test
xchg
mov
test
out
in
push
sub
and
xlat
add
std
outsl
mov
insb
dec
leave
or
lds
in
xchg
or
xchg
scas
ds
jle
mov
in
cmp
mov
add
in
or
addr16
mov
sarl
xor
adcl
inc
mov
cmp
pop
mov
xor
add
dec
push
mov
adc
cmp
adc
and
adc
imul
mov
mov
xchg
sbb
lahf
mov
xor
push
cmp
cmp
test
inc
cmpsb
imul
jle
jb
lea
sarl
les
pusha
add
sub
lea
fldt
cmp
push
test
xorl
cmp
adc
div
pop
pusha
aad
sub
aad
int3
adc
out
insb
sub
ffreep
filds
cltd
pushf
aaa
insb
inc
dec
jg
daa
push
mov
jl
cmpsb
out
xor
jl
cmp
lock
stos
sub
gs
inc
pop
or
ja
xchg
xchg
or
mov
sahf
dec
cmp
dec
xchg
xchg
jecxz
ljmp
pop
dec
and
push
fsubrp
aas
inc
mov
or
aam
pusha
xchg
push
cmpsl
pop
mov
or
adc
jp
push
push
xchg
rorl
ret
mov
std
loope
shr
stos
mov
adc
mov
cmp
jl
xor
call
adc
inc
lods
shrl
cmc
pop
test
adc
mov
push
xchg
xchg
push
xchg
xorb
jg
test
movsl
inc
cmp
mov
loope
sti
mov
cs
sbb
lods
insb
pop
in
jae
and
jno
test
mov
sahf
jnp
xchg
jno
xchg
bound
ret
out
mov
xchg
cmp
int3
and
test
stos
mov
jg
push
out
cmp
dec
ret
lahf
das
arpl
or
push
xchg
std
testb
pop
ret
lods
mov
enter
mov
xor
sbb
int3
xchg
pop
cmpsl
mov
test
inc
mov
adc
lea
stos
jg
sti
inc
pop
add
mov
jecxz
xchg
fs
gs
jb
aas
stos
outsb
daa
xchg
sbb
jae
fwait
pop
pop
iret
jbe
sbb
xchg
fnstcw
xchg
imul
ficompl
iret
rcll
enter
add
ja
add
pop
icebp
xchg
xchg
lcall
daa
sbb
mov
addl
pop
ret
jb
mov
sub
jmp
cs
daa
mov
shrl
pop
add
mov
add
jnp
clc
lea
sub
and
mov
fisubrl
sbb
arpl
xor
rorb
das
scas
mov
rorl
and
sub
fcomip
sahf
mov
jp
inc
fnstenv
es
sub
or
fnstcw
mov
push
mov
push
mov
cmp
push
sub
repz
fistps
fimull
popa
push
xchg
loopne
dec
rorl
mov
negl
jbe
cmp
sbb
cmp
stos
out
inc
fdiv
out
je
lret
xor
jmp
rorl
xchg
xchg
or
mov
xor
cmpsl
insl
sbb
lea
mov
jne
pop
pop
lcall
divb
mov
shrb
scas
xchg
jbe
movsl
jns
lcall
rcr
stos
xor
sbb
nop
sbb
xor
cmc
sahf
enter
dec
mov
repnz
sub
mov
mov
fldcw
lret
in
cli
testb
sbb
or
xchg
in
test
cmp
mov
sbb
popa
mov
and
cli
mov
test
xor
enter
subb
mov
aam
into
loopne
jns
clc
rol
cmp
cmpsb
cmp
ret
out
nop
jle
push
out
aad
push
inc
add
imul
xchg
lods
pop
outsb
push
mov
or
in
lds
jge
cmp
xchg
mov
push
jl
xor
ss
pop
lea
xchg
lods
repz
adc
lods
push
pop
mov
push
sub
mov
xor
fwait
sub
fdivr
lds
pusha
mov
call
inc
shrb
fbstp
mov
je
pop
not
out
out
jmp
subl
lea
inc
insb
dec
jp
adc
pop
jecxz
faddp
into
cltd
aam
sub
dec
test
push
dec
aaa
test
sbb
jl
stos
cmp
int3
xchg
jmp
sub
jmp
es
psrlw
or
out
int
rclb
mov
jl
jne
jb
pop
mov
inc
add
add
leave
test
dec
data16
in
dec
adc
sbb
call
pop
ja
xchg
arpl
push
add
sub
aas
dec
pop
movsl
jg
fisttpll
mov
stc
popa
aad
or
fdivs
shlb
push
ret
or
xchg
pop
insb
and
jmp
or
rcr
daa
ss
arpl
rol
jge
cmpsl
das
pushf
mov
ljmp
xchg
cmp
stos
movsb
xchg
test
rclb
jg
jl
shrl
test
push
negb
and
cmpsl
popa
mov
mov
aaa
mov
sahf
mov
in
loope
jae
movsl
dec
mov
xor
xor
int
adc
or
pop
lcall
add
jle
sub
xchg
out
faddl
xor
cmp
xlat
sub
pusha
in
movsl
sahf
xchg
pop
fstpt
sbb
insl
test
stc
lods
xor
and
cmpsl
subl
rcrl
add
ficoml
push
adc
sti
push
shrb
dec
xor
lahf
mov
mov
dec
cmpsl
pop
leavew
sbb
push
dec
inc
push
shll
push
movb
cmpsl
xchg
das
rcll
imul
push
cmp
jne
js
hlt
jnp
rcrb
scas
xchg
sub
imul
push
xchg
push
in
aam
mov
fcomp
xor
cwtl
shrb
mov
sbb
jmp
xchg
sarb
lods
in
cmp
adc
xchg
dec
jnp
xor
add
cwtl
out
adcb
out
fisubl
out
xchg
dec
push
adcb
outsl
inc
lods
cmp
test
das
lea
clc
pusha
xor
mov
es
rol
ljmp
je
dec
cmp
sub
mov
ja
pop
or
sarl
xchg
fcoml
les
add
mov
aaa
jne
lds
ret
out
jmp
test
sub
scas
popa
push
and
adc
push
sbb
daa
data16
pop
mov
mov
pop
syscall
mov
lret
dec
inc
or
or
xor
ds
inc
test
inc
cmp
mov
aas
and
adc
ret
mov
sbb
pop
mov
aam
js
and
nop
jno
adc
in
imul
int3
push
jb
das
test
cltd
mov
adc
or
mov
dec
add
fxch
jnp
popa
xor
sbb
enter
pop
dec
jmp
lcall
mov
inc
and
pop
cmp
out
or
inc
lahf
int3
clc
test
mov
mov
jecxz
jmp
das
and
mov
stc
js
in
and
xchg
jo
lcall
iret
popa
add
enter
inc
sbb
xor
aam
and
clc
in
sbb
cmp
enter
sbb
fwait
insl
int
xchg
mov
nop
cmp
lea
std
aad
cmpl
push
pusha
mov
leave
push
loopne
sub
mov
add
cli
cmpsl
insb
ret
mov
popa
push
mov
and
shll
mov
insb
xchg
popf
shrl
inc
inc
ret
mov
mov
ja
mov
fimuls
mov
inc
mov
loopne
out
mov
push
imul
rcrb
loop
popa
xchg
icebp
ja
mov
mov
popa
sub
dec
mov
and
outsl
sarl
pop
ja
and
add
fs
lahf
adc
sarb
aas
or
das
and
cmp
or
adc
xchg
cmp
je
nop
aad
fiadds
adc
lods
arpl
mov
rcl
inc
fisttpl
jmp
int3
rcrb
loopne
flds
push
out
test
pusha
loope
pop
pushf
mov
insb
out
sahf
cltd
sbb
xchg
in
push
out
jno
fsubr
xchg
adc
outsb
push
ret
dec
mov
loope
lret
es
imul
subl
rcl
push
in
add
sub
lcall
mov
test
imul
adc
rclb
jno
xor
pop
loop
pop
dec
sbb
mov
sarb
dec
in
call
and
mov
mov
push
sbb
adc
sahf
scas
in
pop
rolb
icebp
cwtl
test
xchg
sbb
insl
cwtl
movsb
push
add
sub
pop
aas
fistl
dec
daa
inc
mov
rorl
es
jge
les
stc
sub
cwtl
js
jl
pop
jmp
jo
mov
pop
xor
mov
into
loop
xor
aaa
push
add
add
rcll
inc
sbb
inc
pop
js
repnz
jns
test
fisubs
or
sti
and
insl
scas
pop
in
cltd
adc
xchg
daa
imul
lods
jg
xchg
aas
and
mov
xchg
pop
jg
push
jnp
pop
je
mov
loop
push
xor
stc
not
xchg
mov
jnp
mov
xor
dec
int3
push
cwtl
mov
cmp
sbb
enter
cmp
movsb
mov
sahf
nop
jle
sbb
xchg
iret
daa
loopne
mov
pushf
push
jmp
xchg
or
adc
popf
xor
adc
mov
push
stc
adc
xlat
into
lret
push
mov
cmpsl
and
loope
xchg
jno
pop
and
shll
mov
dec
jg
xadd
sbb
add
fisubrs
stc
adc
add
fs
sahf
pop
fstpt
les
jp
shlb
aas
cwtl
js
add
jne,pn
fs
cmp
xor
sbb
into
hlt
fdivrl
sbbl
xchg
ljmp
lahf
je
aaa
xchg
adc
aas
fists
inc
fstpt
lods
fnstsw
fisubrl
xchg
dec
cmp
sbbb
out
aaa
pop
push
int
and
fdivrs
cmp
adc
aam
mov
inc
xor
dec
mov
and
jns
or
lods
pop
dec
lahf
adc
push
fcompp
inc
mull
outsl
sub
cmc
jmp
in
or
and
dec
mov
daa
lea
or
ja
sbb
inc
imul
mov
xor
insb
lods
pop
rcrb
insl
mov
mov
pop
hlt
sbb
nop
mov
aad
push
mov
pop
sti
imul
adc
enter
sub
push
hlt
add
jne
and
mov
jmp
sub
sbb
xchg
aaa
or
dec
mov
xchg
mov
out
inc
adc
sub
lahf
pusha
fsubl
movsl
mov
xchg
test
push
sub
data16
xor
mov
sbb
ret
in
push
scas
je
fs
xchg
mov
popf
push
mov
int
repnz
xchg
fldcw
mov
add
cwtl
ljmp
xchg
jns
pop
jns
xchg
repz
out
shl
popa
notl
dec
andl
andl
sbb
lret
cmp
adc
icebp
loop
movsl
pop
std
sbb
dec
pusha
sbb
or
mov
push
xchg
ja
or
std
test
sub
fistpll
ficoml
cmpb
enter
cmpsl
mov
or
fiadds
leave
pop
lret
sbb
andl
dec
xor
mov
pop
jnp
sbb
jo
adc
arpl
insl
sub
shl
lret
xor
cmc
mov
mov
sbb
push
jae
cmpsb
enter
mov
dec
push
clc
push
andl
push
mov
cli
sahf
adc
xchg
mov
gs
xor
aaa
sbb
sub
push
data16
loope
aaa
int
test
mov
inc
cmpsl
mov
xlat
xor
test
out
dec
sub
inc
adc
jbe
pop
adc
adc
add
pop
pusha
out
dec
inc
or
fildll
mov
js
sub
mov
pop
jbe
mov
enter
sub
in
xor
fldenv
sahf
aaa
sub
adc
lret
js
out
lods
sahf
xor
adcl
popa
rcl
insb
mov
lods
daa
movsl
jns
mov
pusha
jl
dec
filds
fistl
cmp
jb
cmp
ret
mov
sub
mov
jne
mov
add
pop
andb
adcl
in
sbb
add
xchg
xor
sub
test
cmp
push
mov
call
dec
sbb
or
sub
push
lods
cmp
pop
dec
int3
pop
jle
aas
scas
nop
jae
out
iret
cltd
or
pop
add
int
test
and
adc
dec
xor
mov
cltd
repnz
or
aad
jns
or
sbb
and
orl
out
mov
iret
and
xchg
pusha
ljmp
mov
fisttpl
cmp
sti
xchg
add
stc
lcall
bound
xchg
imulb
mov
stc
dec
icebp
or
mov
out
push
loopne
inc
stos
or
dec
scas
aam
test
fildll
test
pop
and
inc
aad
pop
add
adc
fsubrl
imul
mov
scas
cmp
scas
and
inc
mov
out
mov
sbb
fcoms
aad
cwtl
cmp
jnp
lret
mov
sbb
scas
sub
loope
popa
mov
mov
pop
repnz
mov
mov
sbb
xchg
ljmp
fs
pop
xchg
enter
mov
xor
sub
dec
test
xor
mov
rolb
nop
cmp
std
or
sbb
in
cs
or
adc
nop
mov
or
lcall
sub
loopne
pop
lcall
and
ret
add
movsl
push
daa
pop
or
pop
dec
xlat
cmp
cwtl
and
cmp
jo
pop
inc
and
adc
push
dec
xchg
insl
and
movsb
popf
lcall
and
cwtl
push
int
inc
fimull
sub
xor
int3
xchg
push
mov
in
mov
and
and
inc
xchg
mov
or
xchg
inc
dec
pop
ficomps
jge
cmpsl
push
and
push
jl
leave
shlb
roll
and
mov
and
mov
das
xor
jmp
sbb
daa
clc
xor
jne
dec
test
arpl
jne
stos
out
sti
sbb
and
cs
bound
shr
ss
in
push
sub
inc
cmp
fistl
adc
ds
aad
mov
xor
mov
mov
pop
cwtl
frstor
cltd
ljmp
jp
roll
nop
cmp
inc
xchg
enter
xrelease
jbe
pop
xchg
ficompl
addl
xchg
test
les
rclb
cmpsl
jmp
mov
add
loopne
or
sub
popa
inc
pop
jno
fisttps
pop
ljmp
pop
aaa
out
add
or
push
imul
jb
aas
repnz
fs
mov
rcrb
shrb
cli
aam
addl
mov
inc
bnd
mov
dec
sti
stos
shlb
mov
shll
pop
jp
rolb
imul
sbb
xor
lret
xchg
jg
iret
arpl
pushf
repnz
test
out
jp
xchg
inc
xlat
jge
jns
push
sbb
cltd
lcall
not
lea
pop
test
arpl
es
lods
pop
repnz
loopne
aad
xchg
mov
test
push
test
push
leave
fucomp
cmp
mov
cld
sahf
jno
test
clc
aad
imul
adc
or
and
je
xchg
es
xor
enter
mov
sbb
rorl
xchg
sub
mull
imul
cmp
rcll
adc
xor
jo
xchg
movsb
add
push
jns
movsl
aaa
jbe
inc
xchg
cmpsl
sahf
aad
mov
push
sbb
xchg
sub
jns
das
in
lea
iret
dec
fwait
jl
jecxz
lds
push
jno
push
imul
outsb
lods
inc
mov
add
ficomps
xor
fldenv
ds
cltd
arpl
insb
pushf
mov
outsb
pop
fldt
in
or
lret
push
push
dec
popf
dec
out
es
cli
push
xchg
xchg
enter
stos
xor
mov
jo
dec
pop
dec
pop
mov
or
inc
adc
aas
pushf
cwtl
pushf
xor
sbb
sub
int
lea
add
jns
leave
outsl
aad
adc
dec
aad
xchg
pop
mov
adc
aaa
or
fnstsw
rcrl
rcr
and
mov
sahf
push
shrl
mov
aam
cwtl
insl
mov
fcom
mov
xchg
push
sbb
xchg
inc
int
cmp
inc
dec
popl
mov
adc
mov
jge
push
push
mov
jno
insl
lahf
pop
sahf
or
xchg
data16
stc
outsl
icebp
push
lea
mov
xchg
in
mov
mov
inc
push
and
iret
cmp
cmp
out
lret
cmp
pushf
adc
push
push
fisubl
mov
aas
rcl
cmc
add
js
mov
in
scas
enter
fs
xchg
outsl
sub
dec
gs
ds
mov
mov
out
xor
sbb
xor
pop
jecxz
out
ror
mov
insl
xor
fildl
imul
ja
push
jne
mov
push
pop
lds
std
lret
inc
decb
mov
sbb
inc
sub
mov
jg
shrl
sahf
stos
xlat
test
cmp
aas
fbld
jle
and
sbb
and
xchg
cmp
push
pusha
pop
xor
cmpsb
fnsave
pop
test
mov
or
pop
push
sub
mov
pop
lock
dec
jo
jmp
lcall
cld
xor
lahf
lahf
and
xor
cli
jno
add
or
mov
aad
ds
int3
jle
pop
cmp
call
mov
dec
xchg
rolb
sub
out
adcl
xor
add
push
mov
mov
xchg
pusha
add
in
sahf
in
faddl
pop
push
clc
jp
and
fwait
cmp
sahf
dec
cmp
adc
sub
enter
nop
inc
add
addb
mov
daa
jno
xor
lcall
jnp
in
mov
aam
mov
incl
jp
dec
push
mov
adc
insb
clc
xlat
sbb
scas
pop
xchg
pmullw
mov
out
popa
por
fwait
stos
jp
xlat
mov
sbb
jecxz
sbb
cs
int3
xlat
sub
push
mov
stc
xchg
stc
popa
sbb
rolb
cli
rcl
push
lahf
cmp
inc
or
imul
and
les
jns
mov
adc
push
jno
enter
mov
sub
aam
pop
out
sub
jne
ds
shrb
out
cmp
lea
xchg
je
cmp
jl
rcll
jmp
jl
arpl
jb
roll
fidivs
mov
mov
mov
popa
inc
pop
faddl
fcompl
sbb
push
test
inc
sbbl
loop
outsl
cmp
test
aad
rol
ret
insl
jns
and
sbb
jne
or
sub
pop
aas
xchg
pop
xchg
outsb
aam
loop
mov
sub
and
subl
rolb
les
and
cmpsb
adc
xlat
fbstp
or
nop
sbb
ljmp
sti
aaa
das
pop
mov
push
int
call
inc
ja
xor
xchg
push
jae
lods
out
jae
pop
fisttpl
mov
je
in
xor
sbb
add
mull
cmpsl
lret
roll
loope
xchg
mov
pushl
pop
jmp
fcmovu
shl
jb
mov
sti
jmp
fstps
insl
cmc
sbb
in
xor
mov
mov
xor
shlb
orps
jno
loop
add
cmpsb
or
xor
jge
push
insl
outsl
loope
setbe
adc
test
adc
lds
mov
cmpl
jmp
inc
inc
mov
xlat
test
push
call
std
dec
cltd
push
or
div
test
ret
pop
inc
pop
int
rcrl
mov
shrl
loope
ficoml
loopne
or
xchg
xlat
mov
or
jmp
mov
jg
push
jae
repnz
sub
ret
or
pop
in
adc
sub
jle
ficomps
inc
dec
or
dec
and
mov
jae
stos
push
lock
and
ds
cmp
and
mov
test
popf
xchg
jno
inc
or
popa
pusha
shl
pop
testb
add
sub
out
int3
cmc
imul
repnz
ret
in
lahf
sbb
mov
shr
pop
mov
rolb
push
in
dec
mov
mov
syscall
and
xor
test
pop
jge
jbe
dec
pop
int3
sbb
jle
pusha
xor
sbb
inc
fwait
add
push
add
jne
xrelease
mov
arpl
and
int3
add
in
jns
jmp
imul
dec
cwtl
jns
sbb
mov
test
clc
sub
ljmp
call
roll
mov
movsb
movsl
fnstenv
int3
mov
mov
repnz
mov
es
mov
ja
out
sub
sbb
cmpsl
ss
jle
mov
mov
mov
push
das
cwtl
hlt
sbb
stos
aad
rcr
or
into
push
inc
test
mov
push
lcall
cltd
aad
or
jmp
addl
or
pop
in
adc
jnp
mov
idiv
mov
push
pop
out
fs
xor
mov
je
int
bound
fistpll
sub
int
loope
shl
xchg
mov
loopne
jbe
jge
pop
ja
stos
push
xchg
inc
cs
dec
aas
pop
fwait
mov
aad
bound
subb
inc
push
push
scas
sub
xchg
lret
dec
adc
icebp
xchg
sub
cmp
xchg
xor
sub
sub
add
stos
sahf
out
cwtl
add
mov
call
jmp
jecxz
aad
xchg
mov
mov
shl
loopne
test
inc
fildl
mov
sahf
add
lahf
frstor
xchg
je
test
fldenv
mov
inc
jnp
xchg
or
stos
movsb
sbb
popa
outsb
fdivl
sub
loopne
jo
push
add
data16
jns
incb
aad
and
mov
les
test
das
scas
call
inc
test
mov
scas
xchg
mov
jno
adc
pusha
sub
outsl
loopne
add
cs
adcl
xchg
and
xor
inc
xor
shlb
dec
push
sub
mov
rolb
daa
test
addr16
push
repnz
pushl
adc
ret
xor
mov
sub
in
cwtl
mov
mov
adc
sub
and
rclb
roll
cmp
pop
aam
push
mov
jmp
add
jnp
lahf
xlat
mov
cmp
or
mov
lret
loopne
ret
pusha
stc
sbb
dec
hlt
lcall
pop
jae
aas
xchg
dec
inc
cmpsl
imul
shlb
stos
gs
repnz
or
int3
outsb
in
pop
lock
push
add
cli
jmp
sbb
dec
mov
loope
add
shrl
flds
not
in
mov
pushf
inc
dec
icebp
fcoml
insb
mov
dec
int
xlat
in
cmp
fistps
insb
cli
and
jg
js
xchg
xor
xor
and
and
jg
inc
in
ss
aas
outsb
sub
std
loop
jg
mov
sub
rcrl
pop
jmp
leave
pop
and
inc
mov
add
aas
and
in
arpl
imul
test
stos
xor
xchg
jae
push
dec
add
scas
dec
inc
xchg
sbb
sub
pushf
and
pop
adc
mov
shll
jno
mov
xchg
lcall
jp
stos
lcall
and
jge
inc
in
lods
push
cmc
jnp
sbb
pop
js
push
sub
aas
push
cmp
adc
cmpl
aas
push
repz
jmp
insb
jo
xchg
jno
iret
sbb
rcll
or
rcrl
loope
push
xchg
bound
ret
decl
push
andl
xchg
pushaw
ret
repz
jecxz
das
push
mov
xlat
xor
leave
jmp
mov
jns
xchg
insb
lods
adc
cli
out
xorb
repnz
or
fwait
xchg
push
mov
inc
test
mov
rclb
fsubl
clc
addr16
ja
leave
pop
mov
sbb
lret
mov
dec
test
pop
ss
add
dec
lods
sbb
cld
shl
mov
fisttps
call
jo
xlat
lret
cmp
add
fwait
or
jmp
xchg
aaa
shrl
dec
je
pop
int3
lods
add
idivb
cmp
xor
xchg
add
sbb
pop
in
adc
loope
adc
in
ja
xor
xor
ret
rcrb
xor
cmc
xor
mov
sbb
jmp
mov
xchg
adc
aad
lret
gs
jl
das
mov
sub
rcl
mov
divl
pop
jo
sub
mov
push
sub
or
stc
inc
pop
sbb
nop
mov
inc
mov
push
xchg
gs
mov
mov
jne
xchg
movsl
ficoml
popa
mov
xchg
jl
and
test
jp
clc
jg
lods
cmp
sub
out
push
jmp
inc
leave
inc
xchg
jne
adc
adc
push
arpl
cmpsl
int3
movswl
ja
jnp
pop
or
pop
loop
and
jmp
or
fidivrl
jae
mov
out
mov
and
xchg
fdivs
aad
mov
arpl
arpl
mov
pusha
cmp
test
imul
jno
adc
sub
adc
pop
pop
adc
and
push
rep
inc
jno
insb
aas
pop
shrb
adc
push
loope
jne
cmpsb
push
outsb
in
frstor
mov
movsb
pusha
in
add
enter
push
and
jge
movsl
scas
scas
mov
push
sti
sbb
xor
cmp
dec
pop
mov
in
cmp
xlat
adc
mov
out
mov
or
add
inc
dec
sbb
int3
andb
pop
out
xor
test
mov
idivb
push
sub
in
addb
mov
out
addb
sti
dec
loopne
movb
inc
cwtl
cmp
andb
add
dec
mov
fcmovu
inc
int
lea
insl
xchg
adc
xchg
sub
sub
minps
shlb
sbb
lcall
int
cmp
add
mov
je
test
inc
repz
je
repz
xchg
das
subl
aad
hlt
jecxz
inc
lea
fidivrs
cmpsb
mov
adcb
jge
faddl
je
cmovge
xor
hlt
xchg
jge
dec
lods
inc
int3
dec
ret
xor
cld
fwait
adcb
insb
or
sarb
xor
std
ljmp
jmp
adc
ljmp
inc
repz
jge
and
hlt
lret
fwait
push
inc
pop
xor
xchg
sbb
sub
dec
sub
xchg
xchg
insb
stc
inc
cli
roll
sub
fdivrl
add
mov
ja
inc
stos
imul
addl
xchg
mov
or
aad
add
cld
loop
mov
mov
xorb
mov
push
aam
mov
nop
test
aaa
call
dec
in
jb
mov
jmp
jecxz
mov
cs
xor
push
sub
shll
fisttpll
mov
xor
out
sub
dec
mov
jmp
pop
into
jmp
scas
mov
in
lods
repnz
add
sahf
and
push
ret
xchg
repz
ja
push
xor
gs
jecxz
jge
push
leave
decb
test
test
lret
jle
ret
or
pusha
mov
cs
out
jns
push
stos
or
lahf
jle
test
ret
shrl
mov
stc
pop
mov
pushl
shll
and
jmp
dec
adc
insb
shl
mov
jmp
sub
add
mov
into
ficomps
mov
mov
and
add
repnz
fsubrp
in
and
gs
insb
or
imul
xor
aaa
mov
in
mov
ds
fbstp
sub
movsl
adc
pop
in
jg
mov
jle
or
xchg
scas
cmp
ret
je
in
jp
std
insl
dec
mov
shlb
add
add
dec
loope
nop
idiv
mov
jno
dec
insb
add
ljmp
xchg
mov
mov
outsl
fwait
loopne
sbbb
dec
dec
and
aaa
and
cmc
adc
lea
stos
cmp
jo
insl
and
pop
xchg
and
pop
jmp
mov
cmp
out
sub
xchg
mov
and
fimuls
pusha
call
inc
pop
cs
mov
cmp
sarb
mov
scas
mov
pusha
jno
cmp
lret
or
fs
inc
cmp
or
sbb
push
rcll
sbb
mov
das
jbe
sarb
call
stos
and
fldcw
outsl
fstps
fnstenv
cltd
cmpsb
es
into
xchg
pop
jmp
mov
mov
push
out
cmp
mov
cwtl
mov
and
pusha
adc
int
mov
and
mov
dec
cli
push
or
out
cwtl
leave
and
scas
or
flds
cmpsl
sub
dec
jg
sarl
shlb
sub
lret
inc
popf
mov
aad
or
jmp
push
icebp
pop
in
push
add
shlb
fadd
sub
xchg
lahf
in
cmc
adc
dec
sub
lods
scas
push
pop
pop
div
daa
xlat
mov
inc
or
jo
sub
cmpsl
data16
loop
sbb
xchg
xor
call
xchg
in
xchg
mov
jp
out
dec
push
lds
jmpw
dec
int
or
dec
ljmp
cwtl
test
jbe
cmp
push
mov
jnp
mov
adc
cmp
testl
cmp
aam
aam
lods
popf
jg
in
in
jecxz
add
and
cld
jle
ds
sub
sbb
orb
insb
jg
push
aad
mov
popa
xchg
es
out
vmovd
enter
jp
mov
mov
in
andl
out
inc
mov
pop
es
add
cmp
or
pop
xor
fmul
pmaxub
test
lods
fwait
arpl
mov
ds
and
sbb
mov
pop
outsl
imul
cltd
out
enter
adc
sbb
adc
jp
adc
jecxz
jg
leave
sub
mov
mov
enter
fwait
or
mov
push
jge
popa
insb
jnp
dec
mov
push
in
dec
faddp
pop
push
sti
cwtl
pop
cltd
arpl
in
lret
fsubs
lds
mov
xchg
ret
mov
sbb
inc
sbb
dec
int
jne
push
inc
into
sub
push
mov
popf
add
mov
xlat
add
pop
xchg
inc
out
xchg
mov
and
andl
sub
sub
xor
mulb
sti
outsb
dec
xchg
lods
xor
outsl
loop
xor
out
movsb
shl
sahf
imul
stos
pusha
popa
out
icebp
addr16
mov
sub
in
pop
push
and
call
rcrl
sahf
fldt
sti
dec
int
jo
push
test
or
cmc
push
rorl
popf
and
ljmp
roll
rorb
xchg
sahf
jno
repz
xchg
out
scas
sub
int3
lret
jmp
fwait
mov
imul
dec
adc
clc
fdivrs
jo
cld
push
xor
add
in
cmp
jne
mov
je
rcll
repnz
aad
clc
scas
jns
cmpl
mov
jecxz
and
jno
fbld
cmpsb
cmp
mov
mov
and
pop
int
dec
mov
mov
xchg
icebp
xchg
enter
iret
xchg
aaa
push
jbe
lcall
pop
sbb
int
mov
sbb
lret
mov
mov
imul
or
jmp
cmp
mulb
lret
add
lahf
cmp
nop
loopne
jb
mov
ds
in
lcall
jns
dec
js
out
addr16
dec
daa
mov
push
push
rorl
shll
mov
lahf
xor
sbbl
mov
movsl
int
imul
xor
movsl
es
pop
xchg
push
pushf
mov
xor
pop
pop
mov
sub
sbb
inc
out
int3
outsb
cwtl
rcrb
inc
push
insb
xchg
jle
js
enter
icebp
inc
mov
cld
xchg
or
lret
lcall
adc
sti
popf
lret
mov
jns
xchg
cld
inc
sub
call
or
mov
roll
test
xor
scas
std
pop
cmp
and
mulb
arpl
jg
cmp
testb
and
rcll
mov
js
mov
test
negb
cmp
jecxz
add
mov
jmp
iret
notl
add
and
xchg
mov
and
ss
stc
dec
mov
jns
aad
int3
adc
pop
cmp
xor
js
jo
inc
mov
or
fwait
mov
cwtl
in
movsl
xchg
sub
mov
mov
shlb
or
jbe
lea
lret
dec
movl
lds
dec
cmp
in
aas
xchg
std
push
sub
mov
aad
mov
mov
sub
adc
insl
lahf
cmp
aas
mov
js
and
daa
gs
adc
adc
lods
jl
xchg
and
jmp
fwait
out
pop
push
cmpsl
push
popf
lret
lods
aam
dec
test
jno
xor
mov
xchg
jle
and
aam
pushf
sub
push
stos
pusha
cltd
sbb
mov
inc
mov
sti
std
mov
sub
cltd
lea
loopne
and
jmp
add
mov
gs
aas
repnz
out
push
pop
mov
lds
fistps
sub
sahf
sub
mov
sub
xchg
xor
mov
sub
add
pop
mov
adc
mov
imul
push
push
push
dec
insl
scas
inc
dec
aas
mov
fimull
pushf
xchg
and
jg
mov
xchg
ret
sub
mov
hlt
popa
lcall
popf
call
push
loopne
cwtl
jae
jo
jne
leave
jg
call
nop
mov
fmull
daa
push
loopne
lods
mov
lahf
popf
js
dec
pusha
jmp
dec
in
mov
loopne
stos
lods
enter
inc
das
or
inc
mov
out
pop
push
fistl
xchg
fdivl
mov
push
jle
shrl
in
mov
and
or
ds
mov
lea
add
lods
sar
aam
xchg
jae
ret
mov
mov
dec
inc
lahf
push
xchg
popa
mov
jnp
stc
mov
das
ljmp
jp
push
ret
int
ret
bound
das
ss
sub
jo
pop
bound
outsl
andb
sbb
shl
cwtl
push
xchg
fimull
out
inc
jg
sbb
cmp
push
pop
test
je
sbb
and
mov
jmp
ret
out
sub
mov
jp
das
scas
xlat
stc
xor
scas
push
cmpb
notl
gs
fsub
cmp
lds
cmp
mov
nop
dec
stc
cmp
loop
and
out
enter
js
subl
and
mov
inc
and
and
mov
daa
pop
gs
sub
sub
pusha
gs
cmpsl
jne
stos
out
je
iret
push
inc
movsl
dec
jge
stc
cmp
into
mov
pop
lods
and
adc
es
outsl
jo
or
shrl
adc
push
ss
mov
out
push
ret
sbb
fstpl
lock
out
es
xor
imul
dec
popf
pop
ret
cmp
cmpsl
mov
inc
xchg
and
pop
stos
sub
xlat
test
xor
xchg
sub
push
cmc
push
int
lahf
and
imul
pop
test
sub
xchg
sti
cmp
xchg
xchg
imul
adc
mov
fs
cmpsl
imul
std
insb
addb
aaa
adc
add
aam
scas
and
push
je
xchg
and
cmp
cwtl
sub
loopne
inc
scas
std
pop
lds
cmpsl
movsl
nop
xchg
xor
hlt
cmp
je
fdivp
xor
xchg
add
push
sbb
inc
addr16
and
sub
mov
inc
xchg
cld
jb
or
fstps
xor
ljmp
and
fldcw
cmp
into
pop
jg
dec
ja
gs
adc
insl
jae
lods
xchg
xlat
cwtl
add
inc
and
fisubs
add
pop
fisttpll
insb
adc
push
push
movsb
popa
sti
push
push
es
leave
and
mov
push
stos
out
mov
cmp
lea
ja,pt
imul
in
mov
lock
cmp
or
cltd
inc
imul
xchg
adc
repnz
add
push
test
es
out
jmp
and
dec
aaa
xor
xchg
icebp
iret
cmp
jo
mov
sbb
cmp
jmp
sahf
or
mov
call
dec
std
inc
int3
shrb
ret
adc
pushfw
es
out
arpl
mov
xchg
xchg
int
outsb
and
xchg
mov
lods
sbb
mov
push
enter
fcomps
cmp
jns
cltd
jmp
les
mov
std
sbb
sbb
cmp
pop
xchg
push
insl
inc
sti
je
jl
and
dec
inc
pop
int3
sar
mov
test
push
bound
lahf
out
and
cltd
cmpsb
mov
dec
sbb
xchg
imulb
sub
xchg
lods
pop
push
adc
sbb
insl
andl
addb
and
cmc
leave
push
ret
imul
mov
pusha
int3
cmp
xor
ja
adc
into
jnp
fldenv
push
push
icebp
add
dec
clc
and
aam
xor
rorb
push
fs
jl
dec
cmpl
add
sbb
sbb
hlt
mov
fbld
leave
fisttps
cmp
imul
pop
idivb
add
xor
sbb
lea
jnp
subb
cmp
jge
mov
cwtl
scas
cmpsb
imul
jo
cmp
je
and
push
std
pop
or
pop
pop
jl
js
inc
gs
xchg
cmp
leave
and
divb
mov
fisttpl
or
je,pn
arpl
xchg
cmp
dec
dec
shlb
xchg
cmp
dec
shrb
pop
out
mov
int3
jns
outsb
mov
sbb
add
fwait
add
push
lahf
imul
add
sti
into
js
inc
inc
mov
mov
mov
push
adc
xchg
xor
cmp
cmp
lods
xor
rorl
sub
roll
jmp
jle
lcall
push
cmp
movsl
pop
push
pop
mov
pop
xchg
inc
popf
loope
dec
outsb
pushf
adc
xor
jnp
inc
aaa
shrl
jo
add
cmp
and
out
jo
xchg
push
and
lea
pop
xor
xor
mov
arpl
dec
push
sub
push
popa
sub
mov
push
mov
mov
testl
sahf
lds
data16
ljmp
dec
imul
push
xor
sub
das
pop
insb
mov
pop
jmp
or
daa
int
lret
pop
out
adc
lcall
pop
dec
outsb
mov
fsts
sarl
cmp
roll
mov
mov
mov
adc
or
js
jnp
ret
xor
pop
inc
fists
jns
dec
pop
scas
ss
mov
mov
or
in
lret
mov
sub
leave
sub
mov
push
cmp
and
imul
in
pop
jno
jns
iret
movsb
test
dec
mov
xchg
inc
imul
daa
push
repz
negl
xchg
or
stc
sahf
sbb
sub
inc
xchg
test
inc
lock
rorl
and
out
jmp
and
rcrl
jnp
loope
sub
push
pop
push
jg
in
sub
icebp
and
cs
mov
mov
sub
cld
sub
insb
aad
jo
mov
popf
or
mov
icebp
out
mov
pop
or
and
xor
jb
mov
sub
and
xchg
lahf
inc
cmp
dec
jge
cmp
lret
js,pt
outsl
int3
sub
xlat
adc
jo
jne
xor
shrl
scas
jmp
add
dec
inc
sub
pop
jo
into
cmpl
fildll
fisubrs
cmp
popa
jmp
stos
mov
pop
mov
in
cli
mov
push
mov
pmulhuw
xchg
clc
data16
dec
mov
jno
stos
dec
loop
mov
out
lea
sbb
fiaddl
sbb
push
sub
inc
dec
scas
cs
push
cmp
lret
scas
push
loopne
and
in
aas
mov
in
xor
jo
lret
notb
outsb
cmp
imul
sti
xchg
lods
mov
jge
sahf
sahf
sub
lcall
lret
jle
and
pop
sub
pop
jp
rcrl
mov
es
add
mov
xor
and
mov
inc
das
pop
xchg
xchg
sub
das
cmp
faddl
add
push
mov
ja
and
aad
inc
jmp
out
jb
add
pushf
adc
or
mov
push
pop
je
push
popa
ja
jg
iret
daa
push
push
sarb
gs
mov
cmp
std
lds
in
stos
jbe
sbb
pop
shrl
dec
pop
les
out
xchg
lahf
adc
xchg
es
xchg
cmpsb
mov
enter
mov
lods
sub
and
pop
jns
inc
stos
sub
and
or
mov
xchg
mov
inc
jp
push
lea
inc
jp
push
das
ljmp
inc
jnp
das
or
ss
andb
and
jae
jno
cmp
xor
or
mov
adc
adc
jno
add
cwtl
mov
out
dec
aaa
decl
imul
pop
daa
push
test
jecxz
int
jb
inc
fdiv
xchg
pop
addl
stc
lods
lock
std
cmc
clc
mov
jbe
xchg
lds
arpl
clts
sbb
data16
arpl
cmp
add
pop
sahf
mov
cld
movsb
mov
mov
cmp
lahf
inc
jb
pop
jmp
pusha
mov
fnstcw
ret
lahf
out
xorl
xchg
loope
mov
jmp
mov
or
orl
xor
je
punpckhdq
push
imul
shrl
push
pushf
rcll
stc
push
int3
cltd
cltd
jb
aaa
insb
adc
adc
dec
imul
mov
testb
inc
jecxz
int3
das
data16
and
int3
adc
jg
pop
das
adc
xchg
jnp
repnz
mov
pop
lods
push
rorl
pop
cmp
push
and
stos
sbb
repnz
mov
xor
mov
pop
in
std
xchg
js
push
mov
jne
push
leave
pop
dec
xchg
lret
in
fsubr
aas
cmp
mov
mov
push
mov
int3
ficoms
mov
mov
mov
aaa
popa
cmp
inc
mov
add
nop
fcoms
push
popa
in
ret
rol
fnsave
bound
adc
cmpb
addr16
add
dec
cwtl
out
rep
lds
and
jmp
push
addr16
add
mov
dec
jno
loope
into
and
insb
jb
cmp
xor
inc
ret
cwtl
dec
mov
lret
mov
add
add
mov
scas
in
jno
jb
lret
push
out
or
jno
sti
cs
jp
cmp
cmp
int
fidivs
adc
jge
daa
jne
jge
add
inc
and
sub
inc
sub
xor
xor
fadd
mov
dec
lds
mov
dec
sti
jecxz
xchg
jmp
mov
insb
scas
jns
dec
subb
add
inc
sbb
icebp
decl
rcll
pop
cmc
pop
pop
and
fidivl
shlb
rcr
pop
test
popa
ret
sbb
aaa
lea
mov
arpl
mov
sbb
addr16
pop
lock
inc
mov
add
xor
js
cmp
and
xor
mov
inc
icebp
push
and
mov
dec
dec
iret
stos
mov
mov
mov
pop
insl
fwait
cmp
xor
pop
movsb
and
daa
jne
out
sti
adc
nop
dec
pop
cmp
pusha
clc
pop
mov
push
adcb
xor
mov
jl
jg,pt
xor
gs
or
or
mov
pop
jmp
and
jno
push
sarl
cli
ror
cmp
in
dec
push
or
cmpsb
cmp
pop
mov
in
repz
dec
lock
push
dec
out
lahf
into
mov
int3
add
push
adc
mov
cs
xchg
add
daa
sub
nop
js
shrb
in
test
insl
test
mov
sub
lods
bound
repnz
scas
cmp
scas
xlat
lret
lea
sarb
xchg
xchg
repz
movsb
cmp
and
pop
ds
xor
insl
and
mov
mov
fisubs
inc
or
icebp
enter
cmp
xor
mov
mov
dec
in
aas
xchg
ret
xor
xchg
dec
stos
or
idivb
mov
out
es
cld
test
lock
in
and
adc
add
fwait
pushf
mov
push
cld
outsl
cmp
movsl
inc
pop
aas
shll
or
pop
cmp
ljmp
jp
test
xchg
or
push
jmp
or
popf
es
add
mov
dec
divb
insb
xor
aam
mov
aam
jmp
pop
insl
cmp
jae
scas
sub
outsb
dec
pop
dec
int3
inc
xor
dec
add
fstpl
jmp
dec
add
push
jb
or
jle
int
sbb
mov
xchg
icebp
insb
push
jo
jg
lret
insb
xor
dec
mov
xor
jno
inc
xchg
js
jae
adc
push
pop
lret
push
inc
sarb
into
mov
adc
out
pushf
les
int
mov
sub
sub
mov
repz
add
std
mov
ljmp
cmp
or
dec
adc
add
jnp
inc
pop
inc
mov
iret
idivb
xchg
testl
fildl
ret
push
xchg
or
cmp
popf
popa
xor
repnz
jecxz
xor
xor
subl
fsts
xchg
cmp
mov
sub
mov
xor
imul
add
push
loop
mov
mov
add
jecxz
jp
fidivs
pop
ljmp
and
mov
imul
jns
jmp
call
mov
cld
adc
insl
push
jae
dec
xchg
mov
and
and
or
sub
rcl
lods
insb
fsubs
jns
aam
mov
cmp
adc
in
sub
test
and
xor
enter
ljmp
clc
jo
subl
mov
lret
sbb
fnsave
out
std
cli
lock
pop
cmp
pushf
add
int
jbe
sahf
daa
scas
mov
cmp
stos
rcl
jnp
inc
mov
arpl
mov
adc
push
sbb
das
jns
cmp
cs
pop
adc
mov
mov
mov
fwait
sub
xor
push
mov
cmovae
sub
jle
in
ficoms
jle
cmp
fnstsw
ds
fidivrl
xchg
stos
and
push
add
jle
scas
pop
mov
cmp
or
insl
arpl
xor
push
jg
or
cmp
cmpsb
push
pop
in
mov
cmpsl
mov
test
mov
outsb
lea
cmp
mov
sti
icebp
or
lret
loopne
jmp
mov
and
mov
sbb
cmpl
adc
int
ds
push
aad
mov
dec
fisttpll
out
sub
add
lock
mov
ficompl
andb
mov
pop
insl
lret
fnstcw
xlat
or
addb
ljmp
push
js
orl
inc
loop
je,pt
daa
cmpsl
jbe
adc
je
adc
jg
mov
jno
jecxz
xor
insl
idivb
xchg
jle
movsl
mov
lds
lret
pop
lods
mov
rorl
pop
xchg
inc
xchg
ss
mov
pop
sub
push
aam
or
daa
dec
lds
aaa
pop
mov
popa
and
pop
mov
or
jmp
push
push
jno
cwtl
push
push
movsl
or
stc
push
xchg
xchg
xchg
call
pusha
mov
jo
rcrb
mov
aaa
lret
jo
icebp
sub
sub
jne
push
idivb
fimuls
outsb
or
pop
xchg
adc
sbb
data16
inc
daa
mov
cli
bswap
js
sub
enter
xchg
insb
xor
or
lds
nop
loope
bound
popf
push
mov
daa
mov
mov
sub
jbe
push
les
scas
cmpsl
mov
jae
mov
mov
push
js
xor
out
cmp
mov
mov
adc
sub
fmuls
cmp
inc
pop
jmp
jmp
lds
dec
mov
jnp
mov
js
adc
out
pop
mov
lcall
ljmp
dec
mov
ud2
sahf
in
aam
mov
pop
add
cmc
insl
dec
add
mov
addr16
lret
cmpsb
stos
daa
cmpsb
aam
syscall
lods
pop
adc
sub
or
dec
sbb
stos
mov
or
shrb
repnz
sub
push
out
sub
adc
lock
and
pusha
xor
pop
loopne
jg
dec
pop
push
pop
test
repz
inc
arpl
xor
mov
cmc
insl
push
jbe
sub
add
sub
sbb
adc
repz
adc
mov
sbb
sbb
jl
cmp
jno
lods
adc
and
xchg
outsl
imul
and
xchg
pop
sub
popa
aad
iret
popa
scas
sbb
or
cmpsb
in
sbb
int3
mov
test
int
jnp
lcall
push
enter
aad
xchg
int
jecxz
add
xchg
mov
sbb
in
fisubs
test
push
fwait
mov
sub
xchg
pop
lret
pop
jl
pop
in
mov
shrb
pop
push
cmp
out
cli
gs
out
fstl
adc
scas
pop
mov
test
add
das
xchg
filds
addb
inc
call
scas
in
test
sarb
in
loopne
pop
mov
and
mov
in
mov
mov
lahf
outsb
add
sti
nop
loope
xchg
aas
out
sub
dec
notl
sub
xor
lcall
add
movsl
adc
xor
pop
and
enter
shlb
movsb
inc
out
movsl
mov
mov
xlat
flds
shl
imul
push
jl
insb
pop
add
std
mov
mov
shll
inc
rclb
add
jb
je
std
mov
sbb
sbb
imul
data16
mov
xchg
mov
sbbb
dec
push
in
mov
test
dec
movsl
and
lea
ret
push
dec
adc
mov
mov
jp
jb
lahf
pop
pop
cmp
dec
mov
hlt
aaa
jl
into
rolb
lret
xor
pop
sub
adc
cli
adc
lea
sub
aaa
js
jbe
clc
push
mov
inc
ljmp
lock
pushf
push
les
hlt
or
pop
xchg
in
fldl2t
jno
push
pop
cmpsl
push
mov
mov
dec
int3
mov
mov
fldenv
fwait
lret
out
inc
fs
push
insb
mov
mov
sub
push
fs
add
loope
in
xchg
clc
cli
adc
xor
sbb
sub
mov
pop
fucomp
in
pop
out
and
stc
mov
gs
std
out
jbe
loope
mov
leave
xchg
inc
sbb
mov
mov
and
fld
xchg
xchg
jns
and
les
daa
bswap
fdivs
push
inc
or
dec
pop
adc
shlb
mov
xchg
mov
mov
dec
push
jo
pop
xlat
push
inc
dec
mov
xchg
mov
les
ljmp
ret
inc
push
push
pop
xor
out
sbb
push
push
adc
pop
pushw
mov
push
in
test
xchg
cwtl
xor
jnp
arpl
stos
jno
outsl
push
leave
leave
pop
push
nop
sarl
mov
scas
mull
sub
inc
outsl
aad
cmpsl
add
cltd
incl
pop
imul
xchg
orb
in
jecxz
xchg
shlb
shll
mov
push
jmp
mov
mov
jns
cmc
aas
iret
jge
das
outsw
loopne
or
js
roll
push
scas
pop
cmpsl
fiaddl
push
jp
aad
faddl
mov
fs
int3
adc
sub
mov
inc
andb
pop
inc
jecxz
jne
sbbb
shll
ja
jns
es
mov
imul
insb
shll
scas
jg
xchg
cmp
xchg
mov
int
cwtl
xchg
jmp
inc
cmp
je
dec
or
movsl
xor
pavgw
out
lods
pop
xchg
sbb
mov
or
cwtl
imul
or
push
pop
imul
int3
into
xor
call
or
push
add
jne
mov
jb
push
xchg
mov
or
dec
test
and
xor
outsb
and
sbbb
push
sbbl
nop
sbbl
hlt
inc
pop
test
call
movsb
adc
cld
in
std
inc
int
add
lret
cld
fildl
and
add
fdivs
movsb
int3
sbb
and
sbb
or
loopne
aad
sub
mov
movsb
pusha
mov
xor
pop
dec
cld
mov
sbb
outsb
inc
aaa
mov
sbb
loope
test
jne
arpl
jp
divps
data16
dec
int3
xor
ret
mov
lret
hlt
jmp
rcrb
int
push
scas
popa
jo
jo
gs
sbb
mov
insl
and
add
push
ss
add
xor
insb
sub
pop
out
pop
cld
stc
adc
sbb
or
mov
pop
gs
repz
icebp
mulb
mov
sub
sub
je
shl
xor
dec
sahf
insb
nop
jnp
xchg
sub
imul
add
rol
mov
jns
inc
scas
or
push
rcll
jmp
das
fwait
lsl
add
aad
inc
aaa
xchg
jmp
mov
sbb
push
ret
lcall
pushf
out
mov
cmc
jne
mov
addr16
inc
fdivl
movsb
iret
or
in
sti
add
por
aas
daa
mov
insb
cmp
mov
jg
mov
mov
insb
subb
in
and
fcmove
sub
sub
rorb
pop
in
push
pop
iret
push
jnp
pop
scas
pop
mov
xchg
xor
mov
stc
mov
sbb
dec
and
push
dec
fidivrl
outsl
fbld
xchg
or
pop
aam
xor
xchg
adc
fsubrs
lods
sbb
std
mov
mov
cmc
sahf
pop
add
cmpsl
lahf
sub
add
sbb
je
xchg
iret
xor
inc
mov
and
mov
std
ret
adc
repnz
adc
mov
in
int
fmull
mov
loopne
sub
ja
adcb
sbb
out
iret
add
pop
mov
int3
push
call
pop
jne
aaa
adc
and
ret
shll
aas
cltd
imul
mov
das
push
push
mov
add
lcall
xchg
gs
xchg
jg
fnstcw
mov
nop
sub
stc
movsl
in
adc
das
lret
iret
mov
sbb
jne
imul
mov
xchg
insb
insl
cmp
les
fcoms
or
inc
xchg
mov
aaa
dec
test
shll
insb
sbb
aaa
jbe
imul
add
paddsb
jmp
test
jg
cmc
cmpsl
jbe
dec
ds
stos
in
adc
cli
jo
jns
js
dec
push
xchg
xchg
xchg
cmpsl
icebp
cmp
test
cli
sahf
jl
lcall
and
int3
lods
rcll
jnp
ljmp
fcoml
xchg
std
test
inc
aas
mov
flds
push
or
mov
xchg
mov
js
mov
pop
jbe
adc
jmp
push
inc
imul
jo
adc
mov
or
xchg
cmpsl
pop
xchg
sub
dec
pusha
lods
and
xchg
test
pop
insl
cltd
lcall
mov
push
and
test
and
popa
and
or
lods
mov
sbb
mov
clc
rcr
dec
pop
addb
lods
dec
mov
mov
sub
lahf
test
aad
add
in
and
addr16
pop
shrb
out
inc
ljmp
jg
aas
adc
ljmp
in
pop
fs
stc
pop
sbb
stos
stos
and
inc
mov
and
inc
jne
mov
xor
sub
sub
aaa
popa
jns
cmc
jle
or
frstor
mov
and
bound
clc
shll
jmp
sbb
clc
fildll
mov
jo
xor
enter
pop
or
jo
pop
popf
mov
jl
lds
test
ret
jg
loope
dec
negl
lock
push
ss
xchg
std
adc
mov
stc
xchg
stos
jmp
adc
sbb
cmp
inc
mov
int
pop
clc
insb
arpl
test
jae
sarb
shlb
sbb
sahf
or
push
cld
mov
arpl
add
xor
add
push
sub
or
sub
mov
mov
lcall
pop
fs
ds
leave
xor
inc
inc
xor
push
in
jb
fcomps
fs
pop
fsts
inc
cmpsb
js
fidivl
sahf
mov
sub
fstpt
movsb
shlb
add
sub
pop
mov
mov
out
jmp
cld
imul
jne
mov
mov
imul
sbb
mov
pop
popa
mov
jecxz
sahf
aam
aam
jg
enter
fmull
xchg
test
jns
out
fucomip
push
jmp
jns
push
xchg
daa
jle
inc
add
jns
cs
scas
fwait
and
or
frstor
js
cmp
sub
or
mov
or
xorl
shrl
loopne
std
sbb
adc
adc
loopne
ffree
mov
cmp
in
adc
arpl
cmc
rorb
adcb
fwait
enter
pop
mov
mov
push
lret
dec
adc
lret
movl
cwtl
or
cmp
sub
jp
cmp
xchg
sbb
ss
mov
mov
mov
jmp
call
es
or
jbe
mov
pusha
sub
divb
scas
nop
sub
out
pop
xchg
mov
insl
outsb
sub
push
add
dec
fimull
test
ja
lcall
mov
xlat
jge
loopne
push
cmp
pop
mov
lods
sub
mov
xchg
shlb
mov
adc
jae
sbb
test
je
lods
mov
int3
leave
test
push
xchg
sbb
xchg
in
call
pop
pusha
popa
fs
and
mov
rcll
mov
out
popf
fstl
push
jns
xchg
push
jne
or
xchg
sarb
fs
xchg
pop
adc
mov
enter
push
mov
push
pop
fdivr
xchg
push
stos
add
sub
xchg
xchg
xor
sbb
mov
pop
in
add
fisttpll
mov
mov
mov
xor
cmp
push
stos
stos
aaa
or
add
cmp
inc
mov
fnsave
hlt
sbb
sbb
lods
ss
stos
mov
addr16
pop
fstps
add
stc
and
sbb
jecxz
fdivrl
jge
fwait
roll
nop
adc
pop
sti
das
jo
lock
pop
mov
and
movl
loop
int3
mov
outsl
loope
xchg
insl
or
test
jmp
add
jg
fcoml
xchg
cmpsl
jp
dec
dec
arpl
cld
in
sub
popf
sbb
scas
push
lcall
jno
push
add
js
mov
fldt
sub
push
lds
mov
test
aad
mov
xchg
out
cs
mov
push
das
mov
loop
mov
adc
stos
stc
test
adc
int3
jae
insl
fidivrl
popf
out
pop
mov
out
mov
inc
push
sahf
jne
leave
outsl
lcall
jmp
push
mov
jb
jmp
arpl
ljmp
rorb
add
jmp
sub
jg
loop
xchg
ret
adc
stc
aam
repnz
roll
mov
jnp
push
shlb
dec
in
ds
push
push
loopne
xchg
call
inc
mov
mov
and
and
sbb
pop
mov
shl
out
inc
jno
dec
dec
arpl
fcoml
dec
jae
pop
sahf
dec
dec
addr16
lods
aas
or
stos
imul
iret
mov
xchg
mov
sbb
lea
pop
pop
xor
stos
push
fwait
movsl
sub
call
hlt
adc
lret
pop
or
sahf
xchg
mov
mov
lea
fsubrl
nop
andb
icebp
fsubrl
adc
mov
mov
jle
xchg
test
or
mov
add
mov
or
orb
jecxz
inc
ss
pop
icebp
mov
pushf
shrl
inc
xchg
and
cmpl
out
data16
gs
jg
stos
push
dec
ficoms
and
insl
add
mov
add
pop
mov
out
pusha
add
mov
roll
mov
stc
arpl
adc
shrl
jo
xlat
scas
outsb
outsb
sub
jns
mov
cwtl
and
mov
sbb
lcall
sahf
loopne
dec
repz
push
mov
cltd
js
push
and
lret
clc
jg
pop
call
mov
cmp
push
shrb
out
fcoms
sbb
jmp
jge
push
dec
leave
sahf
outsb
leave
jae
lret
insb
or
pop
mov
pop
iret
mov
sbb
insl
dec
sbb
add
lds
int
lret
mov
jmp
mov
inc
sbb
fwait
add
dec
ret
sub
outsl
in
mov
cmc
add
sbb
push
xchg
add
cmpl
out
cmpsl
dec
fsubrs
fisubrl
pop
inc
or
wbinvd
sub
pop
xchg
push
out
aas
int
mov
mov
rcl
fimuls
dec
cltd
popf
rcl
lret
loopne
push
or
in
inc
lret
outsl
push
push
cmc
pop
aam
add
xchg
pop
out
and
mov
adc
add
test
push
mov
xchg
xchg
shll
shl
fwait
jmp
jno
lret
push
mov
and
jb
iret
jge
int
lret
imul
fistpl
ljmp
xchg
xor
mov
mov
fcmove
imul
sbb
aas
popf
dec
sbb
mov
and
por
mov
stos
jmp
cltd
inc
sbb
call
xorl
inc
clc
test
outsl
mov
pop
sbb
or
jmp
add
jae
out
jae
aas
inc
pop
xchg
mov
push
adc
rolb
inc
adc
mov
pop
repz
mov
inc
pop
or
lods
xlat
insb
pop
and
xor
pop
cltd
or
icebp
into
loop
xor
cmp
call
dec
xor
aam
je
int3
xor
and
dec
shl
dec
push
arpl
push
lods
jnp
inc
popf
pop
ljmp
xor
lret
gs
aad
data16
pusha
fstpl
push
xchg
lcall
inc
inc
pop
mov
inc
pop
jbe
add
nop
pop
sbb
out
pop
mov
mov
ds
je
addl
xor
pop
imulb
sub
dec
int3
cmp
gs
xorl
xchg
das
pop
stos
cltd
call
adc
int
sbb
jg
push
jo
cmpsl
xor
dec
fwait
mov
loop
in
push
mov
pop
pop
sarb
xchg
insl
push
adc
adc
sbb
dec
cmp
pop
mov
mov
call
bswap
negl
repz
or
dec
and
mov
outsl
je
and
xor
jg
adc
cs
pop
data16
mov
mov
js
out
call
mov
push
nop
adc
sbb
aam
xor
or
imul
js
xchg
and
cmp
movsl
jns
pop
mov
mov
ljmp
fdivrs
sahf
cltd
ret
hlt
adc
pop
xlat
rorb
sbb
pusha
cmp
cmp
and
add
mov
pusha
push
sbb
mov
hlt
cmp
lods
sub
cmc
sub
jmp
mov
pusha
int3
push
pop
dec
jp
push
leave
test
push
punpckhdq
cmc
loop
add
and
cltd
aam
mov
mov
cmpsl
lock
and
pop
inc
xchg
andb
jns
movsb
mov
sub
xor
mov
mov
pop
fwait
movl
lcall
in
mov
shl
seta
xor
inc
fildll
xlat
or
or
in
pop
lods
push
lret
jbe
sub
out
inc
int
dec
mov
lea
cmpsb
xorl
daa
mov
inc
add
and
inc
jne
dec
daa
shlb
jb
sub
dec
push
cmp
cltd
cmpsl
cmp
popa
ljmp
stos
add
cmp
jp
cmp
test
nop
pop
mov
loope
mov
push
dec
in
ds
stos
fdivrl
rol
out
dec
mov
jmp
jmp
pushf
mov
cmp
subl
xor
adc
jno
add
push
outsb
popa
xor
lcall
insb
sarl
sub
ficoms
leave
jmp
xchg
and
out
test
in
neg
fldl
shll
cmpsb
adcb
les
inc
jae
inc
or
sahf
mov
fs
and
and
pop
sbb
cmp
mov
jg
mov
xor
xor
pop
cmc
dec
jbe
lcall
dec
in
in
cli
dec
cmp
out
lods
cmp
lea
push
xchg
out
ret
imul
loop
insl
addl
sahf
fsubs
xlat
and
or
push
lds
popf
sbb
mov
int3
dec
push
jl
pushf
pop
jbe
shl
mov
and
cli
test
fdivrl
pop
fwait
mov
add
out
cmp
enter
or
and
adc
enter
outsb
addr16
cmp
sub
mov
imul
push
in
roll
cmp
aas
xchg
inc
lret
int
sub
in
xchg
jne
mov
test
mov
xchg
sbb
adc
xlat
das
ss
arpl
out
add
mov
sub
mov
sub
and
std
sbb
fadds
in
icebp
pop
mov
cmp
jmp
stos
or
jmp
jmp
push
xor
cmp
push
cwtl
jae
or
sub
push
sub
push
ret
or
test
aaa
addr16
sbb
add
push
inc
dec
inc
xor
test
cmp
pop
shr
loopne
test
lods
jne
dec
inc
faddl
xchg
inc
and
loope
jge
dec
dec
add
lea
addr16
fadd
push
dec
scas
inc
push
mov
and
sub
mov
dec
xor
jg
aaa
daa
pop
inc
int
scas
pop
inc
xchg
pop
jle
mov
pop
out
cmp
jbe
and
leave
inc
xor
mov
lahf
in
sub
jl
test
in
jnp
inc
sub
pop
pushf
test
xchg
pop
ja
fxch
inc
mov
leave
pop
aad
mov
rorl
lea
popf
push
mov
sub
xchg
repz
sarl
bound
mov
add
jg
mov
push
inc
cmpb
movsl
push
es
pop
xchg
mov
pop
aaa
lcall
cmc
ficoms
xchg
lods
cmp
cmc
cmp
fwait
add
js
out
pop
jae
jns
jb
xchg
mov
fwait
orl
scas
sub
cli
popa
outsb
lea
cmp
and
scas
adc
iret
cmp
pusha
test
jle
or
inc
pop
or
jno
jge
add
mov
insb
add
add
cmp
xor
pop
inc
aaa
imul
jno
dec
xlat
out
jns
pop
and
sub
nop
mov
cmp
pop
daa
and
push
mov
jmp
and
mov
and
xlat
jno
jne
aam
iret
cmp
xor
test
cwtl
aaa
js
cmc
add
and
out
aas
cmp
pop
into
int3
stos
xchg
rclb
stos
aad
scas
ret
loopne
xor
mov
and
outsb
pop
mov
pop
int
repz
mov
and
add
scas
cmp
dec
add
dec
or
lods
insl
jmp
out
stos
cs
jl
std
lea
dec
leave
and
mov
xchg
jecxz
cwtl
daa
inc
fwait
movsb
xchg
and
xchg
xor
pop
rcrb
lea
loopw
dec
or
push
add
outsb
stos
loop
inc
jge
jmp
sbb
xchg
test
dec
xor
cmp
cltd
in
out
loope
loopne
push
in
test
pop
scas
cmp
cmpsb
insl
out
mov
fcomps
enter
stc
push
out
or
outsb
loopne
xchg
iret
popf
gs
aas
leave
mov
insl
sbb
inc
mov
dec
cs
mov
ret
hlt
out
das
je
je
je
je
je
je
and
xchg
or
jns
insl
rorb
xorl
jae
xor
je
or
js
xor
mov
mulb
sub
push
push
or
cmc
insb
mov
sub
pop
mov
and
push
insb
push
sub
or
adc
mov
stc
add
mov
je
sbb
push
cmpl
adc
or
pusha
xchg
jecxz
insb
mov
pop
jge
adc
mov
js
in
push
mov
gs
ljmp
mov
and
pop
out
insl
aam
cli
das
jmp
js
cmp
pop
lahf
insl
pushf
cmp
cmp
lahf
sub
aaa
aam
insb
and
xor
in
or
adc
call
fistl
xor
sbb
cmp
mov
sbb
push
imul
pop
xchg
insl
cmp
lahf
mov
cmp
push
pop
aam
fistps
pop
rcrb
xorl
inc
lret
neg
pop
xorb
inc
push
ljmp
mov
ss
dec
popa
bound
cltd
cmp
pop
pusha
in
fdivrs
or
fildl
xchg
lds
push
sub
vmload
imul
lahf
dec
mov
adc
in
inc
fisubs
fcomps
faddl
out
js
outsb
sbb
lods
and
mov
lea
inc
mov
leave
jae
jg
mov
push
lahf
loope
jg
fiadds
cli
xchg
push
js
inc
iret
lret
xor
negl
or
sbb
lods
roll
mov
push
test
rcll
cmpsb
std
xor
push
xchg
sbb
icebp
mov
icebp
xchg
mov
int3
and
enter
adc
push
sub
cmpsb
mov
fsubs
mov
inc
push
roll
pop
fxch
movsl
js
sbb
loop
test
mov
movsb
out
jno
bound
test
mov
pop
iret
lea
dec
aad
push
adcb
xchg
in
fmul
pushf
movsl
adc
lods
push
mov
jne
sahf
mov
outsb
jecxz
adc
sub
outsl
push
scas
stc
notl
or
pop
mov
mov
fcompl
addb
fnsave
jae
in
and
pusha
mov
gs
addl
inc
jge
xchg
cmp
mov
jg
jg
rol
in
shll
sbb
or
xchg
dec
xchg
rol
outsl
out
mov
adc
dec
or
mov
sbb
in
sub
cmc
inc
mov
lret
scas
lods
leave
lcall
xor
sahf
adc
mov
adc
in
mov
or
mov
lahf
pop
int
pop
lahf
mov
int
bound
pop
hlt
test
jns
cmp
or
clc
ret
adc
sub
xchg
cmp
scas
mov
xchg
mov
lahf
pushf
xlat
aam
aam
xor
loop
int
dec
ds
jecxz
lds
sub
and
mov
mov
sbb
mov
cmp
test
mov
jp
or
push
hlt
dec
out
sub
dec
jmp
subb
lret
pop
dec
sbb
test
inc
and
std
push
stc
dec
push
dec
fwait
adcl
fistl
jge
popf
fdivrl
inc
and
imul
or
call
sahf
lcall
cmp
inc
test
fistl
jo
aad
sbb
repz
repnz
popa
jns
call
pushf
and
xor
cmp
stc
push
test
fldcw
pop
fsubl
xorb
fs
mov
call
pop
push
jmp
lods
dec
or
cltd
outsl
in
or
xor
in
ret
aad
push
in
test
lock
fwait
adc
in
inc
jo
mov
push
shlb
cmp
sar
cmp
sbb
sbb
pushf
pop
sbb
sbb
dec
mov
push
cmp
xor
icebp
push
jne
or
call
iret
out
enter
cmpl
pop
stos
nop
push
add
cmp
popf
lret
insb
add
imul
or
notl
mov
adc
sub
popf
lods
je
lret
lea
dec
sbb
mov
leave
pop
clc
sub
jg
aad
adcl
clc
data16
mov
push
loop
mov
dec
clc
sub
flds
jo
xchg
fdivrs
dec
pop
imul
push
mov
jge
or
in
aaa
xor
jnp
insl
jg
adc
jne
lcall
movsb
imul
jmp
leave
jo
call
pop
mov
jo
dec
sbb
cmp
lret
mov
cmp
xchg
scas
les
fwait
sub
sbb
movl
pop
mov
or
aas
outsb
and
mov
loope
xchg
mov
mov
sub
push
sbb
leave
pop
adc
andb
mov
rcll
scas
push
shll
cmc
mov
imul
dec
push
lock
sbb
out
test
pop
and
lret
clc
inc
test
add
pushf
int3
inc
inc
mov
mov
stos
lcall
push
arpl
inc
push
aas
inc
ss
xchg
jge
ljmp
or
xchg
add
mov
adc
xchg
out
and
imul
cs
sti
scas
in
or
jmp
xchg
jae
jno
inc
imul
lods
or
mull
out
iret
mov
ja
popa
enter
mov
xchg
or
repz
or
add
mov
fwait
cmpsl
nop
insl
add
xorb
cli
mov
aam
add
mov
pop
xor
int
js
push
push
adc
mov
cli
insb
adc
test
xlat
and
mov
js
jp
ds
jmp
mov
aam
cli
add
insb
je
mov
lods
bound
dec
fwait
ds
jg
shlb
clc
dec
pushl
dec
mov
cmp
es
int
dec
out
add
and
mov
lret
xchg
push
in
bndldx
push
xor
pop
xchg
daa
push
jno
jp
mov
inc
sahf
jg
cmp
pop
mov
aas
cs
and
sub
xchg
xchg
push
xchg
lods
and
cmpsb
aam
fs
lock
pop
mov
inc
test
insl
lret
inc
pop
add
lea
cli
pop
mov
out
iret
ret
adc
cmpsl
and
push
das
push
push
sub
inc
xchg
outsl
test
popf
faddl
sbb
js
sahf
movl
fistl
scas
sub
lods
loopne
inc
leave
in
stos
sbb
adc
jnp
ret
adc
cli
imul
in
stos
pop
fwait
cmp
sbb
in
dec
neg
iret
lock
in
shrl
pop
loope
xor
movsl
repz
push
jmp
hlt
mov
out
inc
dec
and
inc
sbb
mov
mov
jmp
shrb
pop
aaa
cmc
sahf
orb
scas
adc
adc
test
xlat
jle
jmp
sahf
xlat
clc
xchg
fwait
mov
stc
in
pcmpeqw
testl
aaa
sbb
inc
nop
adc
inc
push
jge
ret
lcall
jmp
js
dec
and
mov
popa
bound
aas
lock
insl
rolb
mov
cltd
xchg
pusha
jle
jbe
inc
fiadds
cwtl
nop
and
sbbl
push
cmova
into
insb
inc
mov
iret
lahf
sub
fcmovbe
lret
je
shrl
sti
rol
in
movsb
pop
out
jle
or
std
repnz
aad
aam
aad
inc
mov
cmp
or
cwtl
scas
push
mov
mov
sbb
subb
sub
xor
add
cmc
f2xm1
aaa
lea
stc
mov
lods
push
and
jae
inc
sbbb
ljmp
rcll
and
enter
inc
sbb
stc
mov
sbb
scas
pop
xchg
pop
pop
inc
push
push
sahf
jae
push
fdivs
xchg
push
lods
jl
sub
cmp
or
push
add
jl
mov
xor
xchg
xchg
mov
rorl
inc
pop
or
orl
adc
xchg
jno
xor
and
int
lret
dec
add
arpl
fwait
mov
outsl
or
ror
ja
cmp
mov
test
fdivl
or
daa
adc
fldl
xor
daa
stos
test
imul
daa
push
cld
add
popa
int
mov
cs
ja
jp
mov
int3
shll
inc
mov
pop
lods
sbb
or
ret
push
mov
pop
loope
in
les
lret
inc
adc
daa
imul
movsb
push
lods
cmp
daa
pop
inc
mov
push
bound
sbb
mov
jo
in
fstps
dec
jo
shll
in
dec
jnp
out
popa
fwait
jge
cltd
pop
jg
in
xor
xchg
out
jno
inc
cs
fimuls
xchg
push
shrl
inc
stc
lret
jne
sti
pop
sbb
jle
jecxz
mov
or
repnz
movsl
inc
or
loopne
xor
dec
orb
jne
xchg
and
test
aad
repnz
lcall
mov
mov
test
xor
popa
jb
scas
and
xor
or
lods
aam
cmp
loope
mov
sub
outsb
mov
mov
ljmp
nop
xchg
inc
sbb
out
das
hlt
xlat
jne
pushl
sti
xor
adc
sbb
repz
add
push
cmp
mov
imul
daa
jno
inc
pop
repnz
jp
rcr
mov
fidivrl
loope
pop
adc
in
insl
and
sub
icebp
out
data16
dec
adc
cmp
adc
push
adc
xchg
shl
sbb
jnp
xchg
push
mov
daa
cmpsl
xorl
dec
mov
jmp
lock
inc
cli
mov
into
pop
mov
icebp
inc
xor
fimull
dec
sub
adc
push
aas
xchg
stc
adc
scas
sub
adc
imul
fistps
push
daa
mov
jno
sbb
cmp
mov
inc
in
bound
sub
nop
push
and
xchg
sbb
cmp
pop
ss
mov
comiss
ja
pop
and
cmp
int3
jl
pusha
pop
jne
push
sbb
add
dec
insl
les
in
fs
mov
rolb
sbb
xor
imul
int
je
sub
fdivrs
test
mov
test
mov
call
adc
lods
incb
push
jmp
inc
outsl
mov
dec
ja
lock
push
adc
test
xchg
pop
cmpsb
xchg
xchg
aam
cwtl
rorb
shlb
fadds
insb
sbb
mov
rolb
cli
mov
add
inc
jno
pop
cmc
cmp
mov
int
dec
xor
jmp
mov
mov
sub
dec
xchg
fnstcw
sub
lock
stos
adc
inc
fidivrl
cmp
movsl
in
xchg
cmpsl
stos
adc
sub
aaa
pop
imul
sbb
aad
pop
mov
daa
jne
cmc
in
sub
inc
sbb
sbb
xor
jl
push
shll
lea
jp
aad
call
push
adc
jbe
and
dec
mov
popa
fimuls
sbb
sub
mov
cs
fwait
add
pop
xchg
aam
subl
in
pop
negl
pop
add
lods
sbb
jmp
push
fwait
gs
sub
fcmove
scas
xor
addb
mov
out
ds
fs
adc
xchg
cltd
or
cmp
sub
sarl
push
clc
lods
cmp
sahf
lret
xchg
adc
pusha
cmp
xchg
test
inc
std
sub
sub
dec
insb
xor
inc
imul
jb
clc
sub
sub
cmp
inc
mov
popa
mov
sbb
lods
sahf
jno
ficompl
test
shl
or
pop
fucomi
or
adc
outsb
dec
xchg
cmp
imul
icebp
lcall
insl
mov
arpl
mov
aad
andl
add
out
adc
hlt
adc
fdivs
pop
mov
jle
push
js
and
gs
movsb
sub
sahf
loop
sbb
xor
add
sahf
arpl
mov
lcall
push
and
repnz
pop
cmpb
jmp
sbb
movsb
int3
mov
cmp
cmc
lods
xchg
push
aaa
lahf
popf
sub
inc
lahf
cmc
mov
sbb
push
or
mov
cmp
stc
test
stos
add
mov
jle
mov
sar
cmpsl
fstpl
cmp
push
mov
in
jnp
in
int3
mov
test
mov
mov
loope
dec
adc
mov
arpl
push
roll
inc
cs
pop
imull
mov
jbe
jl
lahf
jmp
scas
lret
inc
repnz
jmp
fisubrl
movsb
adc
icebp
insb
movsb
jmp
cmpsb
pop
or
jecxz
sbb
push
test
sub
mov
add
inc
mov
orb
xor
mov
sub
stos
xchg
lock
xor
mov
and
outsl
movsl
mov
mov
mov
push
and
dec
sub
popf
cmp
scas
lds
je
bound
dec
push
or
jnp
rcll
dec
shr
fs
fstps
inc
cmp
lds
ss
push
pop
or
pop
addr16
arpl
call
ret
aad
adc
insl
lret
shlb
nop
popa
loop
std
outsl
outsl
cmc
cwtl
or
mov
stc
cmp
testl
cmp
roll
das
jae
iret
mov
sub
icebp
shr
mov
add
aam
in
ja
pop
repnz
mov
mov
les
imul
leave
cld
lods
inc
mov
testl
ljmp
mov
jbe
xchg
cmp
cmc
jns
jns
cld
or
in
cmpsl
adc
scas
pop
push
xor
loope
in
adcb
jne
mov
sbb
jne
jmp
dec
js
dec
outsl
xchg
popf
loop
jne
movsb
clc
sbb
int
jae
and
mov
in
das
in
sti
jmp
lret
insl
out
inc
test
call
icebp
lea
js
xor
sti
xor
xor
jnp
imul
jge
fstpt
dec
scas
xchg
test
sbb
and
sub
sub
and
mov
adc
out
push
lea
stc
sbb
push
out
jns
pop
add
int
rorb
cs
jbe
mov
jae
jecxz
fistpll
stos
jp
arpl
mov
std
jns
icebp
xor
mov
repnz
pop
mov
dec
outsb
lds
shr
hlt
lods
rorb
mov
int
adc
addr16
dec
test
daa
clc
xor
fnstenv
fadds
sbbl
or
imul
and
or
sbb
je
inc
inc
xchg
test
xchg
inc
adc
test
add
add
into
fcomps
insb
js
xor
test
inc
pushf
stos
bound
xchg
outsb
mov
jle
jnp
fstpt
data16
popa
mov
test
add
test
mov
outsb
adc
pop
xchg
jnp
push
or
shll
sbb
push
push
jo
jmp
aam
push
xchg
cmp
xlat
cmpsl
or
jmp
into
ja
and
dec
insl
mov
in
jge
outsl
mov
push
shrb
sti
xchg
aas
in
xchg
mov
push
xchg
adc
adc
mov
pop
cli
mov
mov
jnp
ljmp
cmp
xchg
pushf
pusha
mov
mov
pop
std
mov
ja
test
or
push
dec
xor
les
fucomp
sub
push
jp
jnp
xor
rorb
out
sbb
mov
push
ljmp
aad
xorb
in
pop
lret
add
in
sbb
out
or
cmp
outsl
push
xor
add
mov
dec
mov
lahf
xor
cmp
pop
push
inc
mov
and
jnp
pusha
jnp
cwtl
inc
loopne,pt
daa
fistps
ficomps
add
int
push
lahf
sub
and
push
inc
mov
and
push
ret
out
dec
sbb
push
das
movsb
push
fildll
lods
aam
or
in
lds
push
cmp
mov
outsl
arpl
push
and
fldcw
push
fwait
add
xor
das
adc
fwait
addl
mov
nop
sub
cltd
jecxz
icebp
call
iret
cmpsl
andl
movsb
pop
mov
xor
orl
nopl
rorb
inc
mov
or
pushf
into
xchg
mov
and
fiadds
adc
int3
add
adcl
addb
std
fsubs
sbb
add
mov
jecxz
mov
push
incb
lds
and
inc
inc
aam
xchg
mov
cmc
leave
xor
loop
fisubl
lods
sub
aaa
add
lea
sub
push
adc
pop
lds
sbb
jnp
cli
gs
in
adc
mov
inc
and
inc
aad
push
mov
int3
cltd
loop
push
pop
mov
dec
mov
test
xlat
es
jno
ret
popf
movsl
je
push
std
les
clc
inc
add
add
cmp
test
jno
cmpsl
adc
sbb
sahf
int
pop
pusha
insb
into
sbb
mov
jg
push
pop
jmp
lds
mov
sub
xchg
test
fbld
push
mov
sbb
dec
repnz
adcb
mov
mov
rcll
aas
dec
dec
lcall
and
sarl
lds
or
lods
fsts
xchg
fidivrl
pop
outsl
cmp
mov
jno
cmpsl
mov
mov
xor
sub
mulps
in
push
cmpsl
sbb
mov
ds
pop
shrb
in
pusha
pop
mov
addr16
testl
nop
shlb
in
imull
xchg
cmc
bound
sub
fcomps
xor
clc
and
adc
and
xorl
sub
in
push
sbb
inc
aas
mov
insl
add
jbe
bound
jp
adc
ds
fbld
xchg
enter
stos
jno
push
test
push
add
mov
push
scas
mov
mov
repz
or
xchg
jbe
push
cmpsl
jb
sbb
pop
lret
aas
roll
push
mov
stc
jnp
arpl
xor
ljmp
xchg
imul
pop
xor
adc
int3
push
je
xchg
scas
sbb
dec
and
xchg
scas
mov
scas
cmp
popa
dec
dec
pop
mov
btc
xchg
insb
jnp
xchg
sbb
fistpll
imul
lods
lods
mov
in
push
into
sbbb
cmpsb
cmp
cld
xchg
iret
and
bound
shr
call
ds
fisttps
shlb
jge
andb
sub
je
adc
xchg
jecxz
outsl
inc
pop
cmp
imul
pop
fisubl
dec
lock
push
pop
jnp
or
adc
int3
out
mov
push
test
fstpt
push
and
adc
cs
dec
jge
pop
repz
push
sub
ljmp
pop
pop
dec
xchg
sahf
scas
mov
aad
lret
insb
aam
mov
pop
jecxz
mov
ret
repnz
push
imul
xchg
ret
cld
lods
test
int3
lahf
mov
rcll
sub
pop
inc
ss
loopne
mov
xor
scas
scas
popf
pop
push
add
lret
adc
or
les
pop
inc
fyl2x
mov
movsl
and
xchg
dec
xor
fs
clc
hlt
mov
lods
pop
ret
lcall
lock
cs
or
in
pop
mov
sub
jecxz
nop
arpl
add
cmp
stos
inc
or
lcall
mov
mov
sbbb
int3
cmp
jp
leave
aam
lcall
test
mov
pop
call
xchg
int3
xor
je
loopne
xor
lods
mov
mov
enter
in
lcall
in
movl
xor
or
sub
fistps
loope
or
loop
jecxz
sub
cmpsb
js
add
in
outsl
loope
out
inc
mov
cltd
jmp
lcall
es
ror
jb
add
cmp
rorb
add
and
dec
dec
pop
mov
addr16
inc
int
jae
xchg
lcall
cmp
sti
daa
inc
xlat
popf
inc
cmp
ljmp
cmp
pop
cwtl
cmp
ljmp
lahf
xorb
cltd
out
adc
mov
int3
mov
push
sub
sbb
shrb
lea
sub
lea
mov
out
mov
roll
adcl
addr16
xor
pusha
mov
jle
jno
jno
daa
add
mov
and
and
jb
pop
mov
fxch
iret
add
or
movsb
or
push
andl
and
in
pop
sub
xchg
adc
test
xchg
xchg
xor
lret
cld
mov
mov
mov
outsl
out
repnz
orl
lea
sub
sbb
sbb
popa
stos
test
cmp
js
sub
pop
cmp
imul
xor
xchg
sbb
sbb
push
xchg
sub
sub
and
icebp
push
cmp
dec
lock
adc
in
or
neg
bound
jbe
jmp
inc
jle
jbe
cmp
mov
pusha
mov
pop
dec
fsubrl
xrstor
in
xchg
mov
add
test
dec
leave
sbb
subl
ds
sub
xchg
cmp
mov
loop
lahf
dec
aad
pop
std
test
dec
push
mov
das
pop
dec
inc
adc
xchg
jge
shrb
push
in
imul
inc
ja
cwtl
jmp
inc
test
mov
sbb
addr16
out
loopw
sub
dec
inc
xchg
cmp
jge
xorb
push
push
fs
jne
push
mov
out
dec
mov
sub
adc
cltd
and
dec
jb
fldenv
test
or
jmp
pop
enter
leave
pop
and
push
out
dec
testl
and
in
pushf
mov
push
xchg
mov
frstor
pop
or
dec
fwait
ljmp
jmp
or
mov
xchg
pusha
aad
add
es
testl
pusha
sub
xchg
push
xchg
jecxz
mov
mov
sub
pop
lea
mov
mov
cmpsl
and
and
jne
mov
cld
pop
fs
xchg
sbb
xor
negb
mov
sub
push
aad
add
cmp
or
mov
dec
aaa
xchg
push
sub
pop
add
bound
lods
add
sub
mov
ds
lods
inc
add
jmp
dec
dec
pop
rolb
pop
and
or
das
in
or
hlt
inc
add
mov
test
jo
jl
lods
dec
stos
jbe
ret
stos
icebp
xchg
sub
inc
mov
jmp
mov
xor
pushf
jb
jecxz
pop
inc
cs
jnp
stc
scas
or
in
push
dec
cmp
push
or
sub
pop
and
pop
inc
je
dec
insb
mov
sbb
andb
dec
xor
sub
sub
pop
sub
enter
cltd
inc
popa
dec
lahf
cmp
cmp
xor
out
cli
xchg
jb
orl
arpl
mov
aad
ja
out
pop
sub
cltd
mov
ror
insl
add
mov
add
mov
in
cmpsb
or
ret
in
data16
sbb
pop
xchg
adc
pop
mov
mov
frstor
push
pop
sub
sub
or
add
stos
inc
leave
ret
xor
or
jne
xor
sbb
xorl
adc
pop
adc
mov
or
movsl
loope
popa
push
ret
sub
inc
or
aam
insl
adc
ja
pop
ljmp
pop
xor
sbbl
movb
test
mov
jle
das
fwait
leave
and
jbe
mov
sahf
mov
jne
mov
jo
out
test
xor
jno
or
jns
mulb
imul
repnz
negb
fdivrp
out
bnd
cmc
or
or
dec
hlt
or
dec
hlt
or
andb
ror
cltd
add
cmp
mov
xorl
js
andl
pop
leave
test
adc
cmpsl
test
jecxz
add
cmovno
scas
and
ret
lods
out
orl
cltd
sbb
cs
cltd
adc
sti
faddl
lret
push
cwtl
adc
fsubr
jmp
pop
cltd
push
or
pop
cmp
aaa
push
jl
jecxz
jmp
mov
mov
aam
imul
sub
mov
mov
fldcw
xchg
and
fstps
adc
fwait
jne
mov
stos
or
movsl
xor
aas
add
andb
fistps
cmpsl
loop
jae
enter
and
jno
out
dec
add
push
fnstenv
pop
cmpsb
xor
repnz
mul
mov
lods
test
push
inc
sub
add
fimuls
dec
test
lods
call
sahf
dec
mov
xor
and
sti
es
xchg
inc
mov
out
fwait
add
je
mov
cmp
dec
fs
popa
and
mov
pusha
movsb
mov
repnz
push
int
int
sub
xor
cltd
mov
ss
jne
inc
outsb
mov
push
adc
or
rcr
xchg
rorb
jo
fs
xchg
into
jecxz
pushf
test
xlat
lea
and
jb
adc
in
or
mov
xor
testl
dec
setg
add
daa
jbe
and
in
fisttpll
fwait
mov
dec
addr16
stos
mov
int3
les
jnp
aas
sbb
push
xor
pop
es
adc
in
ficomps
mov
jecxz
add
mov
dec
insb
sub
xor
or
int3
scas
jle
sub
mov
fs
add
mov
push
les
jne
int
fistpl
lea
pop
insb
popa
adc
cli
mov
pop
push
sbb
test
xlat
jl
pop
pop
fisubrl
xor
lds
push
sub
les
mov
enter
adc
je
js
ret
jl
test
sub
setb
test
push
adc
inc
xor
fldt
out
stos
adc
sahf
adc
dec
orl
jge
pop
jb
jp
cmp
sub
stc
andb
addr16
orb
repz
lock
push
push
add
add
mov
push
pop
inc
hlt
push
idivb
mov
mov
aas
stos
jmp
mov
sbb
push
sub
montmul
cmpsb
inc
in
xlat
xchg
sbbb
mov
add
stc
sarb
sbb
sti
adc
pop
les
icebp
sub
xor
or
inc
stos
clc
jle
inc
and
movsb
cmpl
mov
pop
pop
add
popf
rclb
inc
inc
int3
cli
cli
aaa
insb
xchg
aad
inc
xchg
push
add
ret
xchg
jle
or
insl
jg
inc
push
cld
int
mov
ret
inc
or
sub
jg
test
push
int
lock
ljmp
pop
add
and
pop
les
xor
add
data16
outsb
adc
add
or
add
adc
add
in
push
mov
push
jmp
repz
ret
sub
ja
or
dec
sub
hlt
mov
and
jle
and
pop
in
cli
jns
xor
movsb
fs
add
add
xchg
xor
into
daa
hlt
outsl
test
xchg
scas
pop
sbb
test
outsb
xor
mov
xor
pop
jno
aas
outsl
mov
sbb
jl
lea
push
xor
aad
mov
pop
add
test
in
inc
xchg
add
mov
test
push
call
push
imul
es
fsubs
xchg
test
mov
sahf
mov
or
ja
test
insb
push
pop
mov
lods
daa
sub
add
or
test
daa
pop
cmpsl
pop
jg
and
test
jb
les
and
movb
loopne
inc
mov
add
mov
pop
shll
add
aas
roll
pop
adc
and
jecxz
es
push
pop
cmp
cwtl
jle
shl
mov
and
ss
dec
push
push
xlat
dec
cmc
sub
mov
in
inc
sbb
inc
in
mov
and
add
mov
dec
cltd
pop
lds
push
test
scas
jmp
sbb
push
mov
jg
outsb
sbb
fistpl
in
mov
cmp
or
fstpl
stos
sbb
jecxz
sub
add
data16
pop
mov
and
ja
push
pop
mov
imul
dec
andl
sub
pusha
add
and
pop
add
xchg
aam
jae
daa
lea
sbb
and
jg
lock
mov
pop
inc
dec
orb
inc
jbe
pusha
das
mov
xor
push
jle
jl
lahf
lds
xchg
mov
cli
mov
call
mov
sub
scas
lret
or
dec
lcall
lds
fdivrs
cli
dec
addr16
cmpl
and
daa
jmp
xchg
adc
push
outsl
xchg
sbbb
jmp
jmp
jb
sub
popf
rcr
pop
psrad
test
in
rclb
mov
mov
jmp
xchg
pop
push
pop
into
jbe
xorb
cmp
mov
insb
jae
add
and
push
xor
outsl
addr16
xor
cmpl
divb
daa
aas
cltd
int
pop
fwait
movsl
je
es
dec
leave
dec
jb
push
adc
sub
or
cmp
in
out
push
sbb
scas
jmp
pop
jae
mov
enter
or
xor
clc
outsl
mov
dec
loope
xchg
dec
hlt
jbe
pop
mov
in
movsb
or
and
aaa
in
add
into
dec
out
jecxz
adcb
and
cwtl
ret
mov
cld
cmp
jns
in
shrl
aam
pop
ja
mov
add
outsb
xlat
or
into
and
rclb
xchg
movsl
dec
mov
into
and
data16
sbb
sub
mov
icebp
mov
shrl
pop
push
in
or
mull
jo
xlat
pop
test
hlt
arpl
outsb
xchg
shrl
mov
repz
dec
dec
mov
xor
sub
cld
push
das
stos
xchg
mov
and
add
imul
test
test
cltd
sti
scas
test
mov
scas
xchg
sub
xchg
adc
pushf
push
mov
insl
xchg
xor
into
cli
pop
jbe
outsb
sub
cmp
xor
pop
inc
enter
adc
mov
rcl
sbb
fbld
les
xorb
mov
in
loope
test
int
outsb
mov
pop
mov
gs
xchg
in
dec
cltd
movsl
insb
sub
xchg
jbe
jge
daa
xor
push
sti
cmp
mov
lret
add
mov
mov
aad
lret
sub
dec
jge
add
jo
inc
xchg
push
jecxz
pop
cmp
mov
adc
adc
rcrb
mov
sub
jmp
inc
je
popa
ret
es
cmp
cltd
adc
mov
popf
or
clc
mov
loopne
jg
mov
push
inc
push
adc
push
inc
pop
mov
cltd
push
mov
sbb
out
jo
imul
popf
jl
mov
in
adc
nop
cmp
testb
js
movsl
mov
andb
bt
ret
inc
push
dec
insb
mov
mov
mov
rclb
push
int
orb
xor
jb
sub
nop
in
pop
jmp
lock
lahf
jle
ret
lods
add
xchg
lods
cli
cmp
mov
lcall
dec
lods
jle
movsb
pop
subl
jno
es
jmp
mov
sub
jbe
call
jb
and
xchg
test
jo
cmp
xchg
cld
pushf
mov
jo
out
test
rorl
out
stc
inc
lds
in
mov
nop
loopne
inc
jnp
lods
jo
lahf
and
shl
jmp
andl
pop
cmp
std
pop
gs
in
push
cwtl
adcl
int
sti
inc
cmc
ss
fists
cmpsl
xchg
scas
xchg
cmp
jns
stos
inc
insb
je
dec
loope
aad
rorb
mov
sbb
mov
pop
mov
dec
push
or
xchg
push
stos
add
shrb
imul
pop
jne
loopne
sub
in
xchg
or
jne
shll
in
push
add
xchg
std
jmp
mov
pop
mov
outsb
inc
loope
hlt
shrb
mov
testb
add
and
sarl
out
cmp
leave
rol
lea
push
jno
lahf
pop
and
sbb
sbb
and
push
call
stos
enter
stos
push
add
mov
add
jp
mov
xor
pop
in
or
mov
or
jl
sahf
mov
add
push
jecxz
in
add
cmp
sbb
movsb
subl
dec
test
sub
mov
lahf
and
mov
mov
fdiv
pop
sbb
adcl
dec
add
dec
pop
andl
and
fs
faddl
fdiv
xchg
and
clc
xor
sbb
clc
xchg
add
out
mov
push
mov
inc
fs
pop
mov
push
rcl
push
xchg
push
adc
out
hlt
jge
mov
scas
mov
dec
pusha
push
test
stc
rcrb
mov
repnz
insb
and
jecxz
xchg
push
lahf
fbld
fsubs
repz
jne,pt
fs
mov
and
cltd
mov
test
push
orb
sub
xor
lds
mov
cwtl
icebp
les
inc
repnz
xor
cwtl
gs
mov
mov
in
mov
xor
mov
rorl
inc
xor
or
lcall
andl
lcall
aam
jge
ljmp
pop
and
pop
mov
gs
ds
loope
xlat
mov
das
in
in
and
cmp
pop
icebp
out
inc
mov
and
mov
inc
idivl
movsb
pusha
xchg
jp
xor
or
push
or
ret
dec
add
cmp
jp
add
in
int3
bound
inc
cmp
popf
arpl
sahf
lods
push
decl
lock
sub
xchg
rcl
mov
mov
aas
inc
mov
es
jmp
js
insb
rolb
popf
sbb
scas
sub
mov
cmp
call
mov
inc
icebp
mov
in
inc
lds
cmc
mov
mov
sahf
neg
rorb
pop
popf
mov
mov
adc
sub
and
lds
and
sub
movsl
sub
insl
jg
xor
push
mov
stos
sahf
mov
cli
fiadds
aam
fisubl
sub
mov
aaa
aad
mov
sti
frstor
xchg
cwtl
out
fs
insb
mov
loop
sbb
imul
outsb
pop
mov
adc
addr16
push
sbb
pop
mov
dec
sub
mov
adc
imul
jae
dec
ret
ja
lcall
dec
and
mov
and
sub
xor
jns
dec
shll
stos
stc
dec
push
cli
movsb
jmp
push
loop
movsl
pop
ljmp
pusha
insb
add
xchg
add
adc
popf
leave
loopne
daa
cmp
cltd
jae
in
pop
lea
gs
add
pop
xor
pushf
and
and
cmpsl
aam
push
int
iret
pusha
movsb
leave
and
sbb
into
jg
xor
inc
mov
outsb
mov
inc
xor
or
push
es
xchg
xor
in
xor
popa
xor
repnz
jg
je
aaa
pop
xchg
roll
subb
mov
shrb
int3
es
cmc
add
in
loopne
shlb
xor
cmc
ficoms
daa
std
jbe
aad
mov
popl
xchg
out
dec
lods
std
addr16
add
mov
mov
icebp
xor
cmp
jae
push
mov
inc
adc
xchg
iret
aaa
in
pop
js
pop
push
sub
jns
shrl
fdiv
cmp
adc
xchg
adc
into
dec
loopne
repnz
sbb
jo
fldenv
imul
cmpsb
xchg
das
loopne
or
cmpsl
out
or
dec
ja
jp
adc
jecxz
enter
inc
imul
xor
jmp
cmp
test
jmp
in
leave
cmp
mov
jns
cmpl
inc
call
pop
xchg
cmp
bound
jo
pop
xor
cmc
ffree
pusha
sbb
cmpsb
test
jg
pusha
xor
add
test
xlat
jle
pop
add
push
pop
dec
or
mov
std
mov
dec
jo
das
dec
clc
lret
or
mov
add
lds
arpl
xchg
sbb
lahf
or
sbbl
fcmovnbe
frstor
push
push
or
in
ljmp
test
xorl
les
call
mov
pop
cmc
add
jmp
sbb
pop
push
adc
arpl
mov
mov
cmp
mov
push
mov
cltd
insb
dec
mov
int
xchg
pop
fiaddl
jecxz
mov
jmp
shlb
mov
mov
jge
dec
movb
test
add
jo
js
cmp
in
aam
subb
xlat
push
inc
push
pop
cmc
jns
js
push
dec
lea
dec
leave
mov
insl
xchg
and
push
mov
pop
xorl
testl
rorl
call
inc
pop
mov
cmp
enter
xor
cwtl
test
fisubrl
scas
repz
mov
popa
popa
jle
jbe
xchg
mov
daa
les
dec
loopne
jge
dec
push
dec
stos
dec
int
push
xor
jecxz
mov
lea
aam
filds
push
or
test
cmp
mov
mov
mov
adc
add
call
rcll
test
stc
xor
lcall
into
stos
out
stc
fsubl
cmpsl
cmpsb
pop
cltd
dec
adc
mov
cmp
leave
fdivs
sub
mov
aas
insl
orl
jb
xchg
dec
lock
xor
in
add
sbb
stos
loope
ret
sbb
stos
pop
loopne
mov
mov
push
push
mov
sub
sbb
push
cmp
or
insb
int3
lods
arpl
fsubs
inc
arpl
sbb
mov
xchg
scas
mov
xor
sti
dec
arpl
roll
xor
iret
jo
mov
jne
xor
dec
xor
addr16
jbe
outsl
bound
test
outsl
popa
dec
loopne
out
cmp
xchg
gs
out
adc
cmp
adc
scas
pop
pop
test
rcll
push
test
data16
cmp
push
xor
test
jmp
in
sbb
lods
sbb
xor
sbb
jg
stos
xchg
push
jmp
push
in
push
cmpb
stc
xchg
fs
or
add
xor
aam
fwait
pop
mov
xchg
dec
into
sarb
fidivl
insl
adc
adc
mov
add
hlt
jmp
push
mov
jle
aam
clc
pop
jo
pop
out
dec
insb
mov
test
jns
in
jae
cmp
adc
test
mov
or
insb
repz
mov
int3
adc
adc
mov
xchg
iret
rorb
clc
add
cmp
aad
pop
mov
dec
jle
and
push
jmp
jae
frstor
ja
gs
and
dec
test
fwait
mov
insb
stos
cmp
add
mov
je
adc
sahf
adc
dec
or
sahf
jmp
push
iret
and
add
pop
rol
movb
pop
adc
daa
inc
in
jo
ds
push
xchg
shll
mov
ret
loop
adc
sbb
cmpsl
xlat
or
enter
add
rcr
cwtl
ficomps
cmp
fists
mov
cmp
imul
cmpsl
int3
cwtl
cltd
cmc
fiadds
icebp
call
mov
jp
out
in
mov
clc
dec
add
jnp
xchg
cltd
repnz
idivb
cmp
jl
pop
in
cmpsb
jp
dec
wrmsr
outsl
in
sbbb
sub
jnp
push
pusha
inc
jle
xor
scas
hlt
outsb
sti
and
mov
push
xchg
stos
mov
insb
mov
aam
sti
or
add
sbb
pop
data16
sub
mov
mov
add
rclb
ja
gs
mov
stos
repnz
ret
push
xlat
cmp
sahf
or
jo
imul
adc
cmpsl
daa
mov
mov
xor
mov
addr16
fisttpl
mov
dec
imul
adc
mov
sti
pusha
and
pop
in
dec
cli
mov
push
mov
adc
rep
sbb
pop
and
lods
push
mov
jge
inc
fistpll
xor
lea
div
iret
push
les
cmp
jno
insl
xchg
adc
push
mov
fmuls
cmp
mov
cli
sbb
int3
jnp
inc
xchg
add
out
inc
fidivrs
pusha
cmc
push
jbe
mov
mov
scas
fdivrl
popl
fisttps
int
sbb
xchg
repnz
je
adc
mov
in
jne
adc
cltd
imul
jl
jbe
insb
adc
jnp
lock
xor
jnp
lods
xchg
stos
fldt
xchg
outsb
mov
ficoml
mov
enter
aam
lret
pop
loopne
inc
rcrl
lea
and
xchg
scas
and
jecxz
cmp
jmp
or
arpl
xor
dec
fwait
movb
xchg
pop
pop
and
mov
and
orl
xor
jl
lock
cmp
ret
insl
mov
and
push
mov
xor
mov
and
inc
and
cmpsb
add
dec
gs
mov
cld
push
loope
pop
jl
pop
dec
mov
jmp
pop
call
mulps
popl
stos
jno
cmp
pop
test
xor
xor
addr16
out
js
inc
dec
adc
in
out
pop
sub
repz
pop
test
jbe
pop
fistpl
aam
in
pushf
jl
lahf
in
in
xchg
std
push
and
test
sarl
and
sbb
sub
int3
dec
enter
roll
gs
pop
addl
push
mov
fstpt
insl
rorb
imul
loope
rcrl
das
icebp
ljmp
dec
cmp
out
movups
jmp
xor
insl
stc
pop
push
mov
or
scas
mov
inc
adc
mov
mov
insb
add
xchg
sarl
adc
mov
leave
sub
in
clc
lods
movsl
push
in
je
adc
addr16
xchg
pop
arpl
es
xor
rcrl
les
out
jne
push
push
mov
xor
pop
pop
push
cmp
fldenv
push
adc
xor
push
push
mov
std
arpl
dec
aaa
cmpsl
lods
js
in
repnz
xchg
pop
adc
xor
push
loope
cmp
jno
add
loope
mov
sbb
mov
pop
inc
sub
xchg
pop
mov
jp
js
daa
lds
sahf
in
stc
cmpsl
cmp
bound
pop
jge
sub
in
dec
inc
loope
sbb
jmp
inc
xor
shlb
jbe
pusha
sub
xchg
mov
push
lret
lods
test
inc
in
push
push
jmp
in
out
aas
pushf
leave
pusha
popl
adc
inc
dec
fwait
rcll
int
subl
data16
aas
and
push
loopne
or
adc
jl
lret
mov
insl
dec
test
sub
gs
aam
pop
add
add
fdivr
sti
dec
push
inc
add
aad
hlt
and
fwait
sub
mov
mov
mov
sbb
pop
pop
sbb
jmp
dec
mov
scas
rcll
pop
cmp
jb
pop
shll
cwtl
popf
loope
je
lds
rcll
cmc
movsb
push
lea
ds
daa
sbb
mov
sbb
insb
icebp
jecxz
jo
pop
inc
push
call
cs
jle
hlt
call
inc
xor
xor
fcompl
xchg
lret
pop
ret
cmpsb
hlt
lods
pop
arpl
xchg
lods
insb
sbb
decb
add
inc
bound
jns
xchg
dec
fldenv
insl
add
test
fsubs
jmp
stc
fcomps
pop
movsl
insb
xchg
dec
pop
push
jae
xchg
jbe
ljmp
repz
ja
mov
jno
inc
fsubl
mov
lret
test
test
mov
imull
scas
sahf
mov
and
inc
pop
pop
test
fcomps
sub
dec
mov
xor
and
ljmp
xchg
mov
mov
adc
sarb
pop
lcall
lret
sub
outsb
das
add
in
sahf
mov
add
cmp
es
into
jp
jle
cmp
or
lods
ss
in
cmp
sbb
xchg
sti
sbb
inc
and
loop
inc
loop
add
stc
add
mov
es
mov
mov
ret
xor
cmp
sbb
xor
add
adc
push
arpl
cmp
push
lods
outsl
sub
das
std
mov
adc
pop
lcall
fmul
lret
ficomps
lea
add
lret
ud1
lea
int
int
dec
mov
test
mov
jne
add
cmp
jnp
mov
pop
lods
sub
sti
mov
jmp
out
insl
jo
xchg
mov
sbb
xchg
sbb
sti
in
pusha
notl
push
aam
push
mov
movl
mov
jo
dec
pop
inc
mov
lods
pusha
in
lock
sbb
jns
jae
adc
cmp
mov
xor
das
dec
insb
outsl
mov
lahf
push
test
xor
jmp
outsb
and
push
hlt
cmc
enter
andl
and
fimull
and
pop
aad
mov
mov
lcall
in
fwait
cmpsl
inc
aaa
imul
add
mov
movsb
call
inc
pusha
xchg
ss
test
mov
dec
stos
or
ret
xor
cmp
test
subb
scas
mov
mov
adc
cwtl
xor
fidivl
mov
xlat
or
rorb
mov
mov
add
add
dec
jae
dec
aad
loop
popf
js
andl
mov
lret
sbbb
xor
popf
jno
addb
loopne
xchg
mov
dec
mov
test
pop
push
bound
jmp
mov
push
repnz
out
sbb
outsb
cmp
stc
push
add
lods
sahf
sbb
rol
incb
fisubs
adc
dec
je
test
popf
bound
mov
loopew
pop
jb
jo
and
pop
adc
pop
inc
jp
leave
into
out
jbe
dec
mov
popa
xchg
sub
xor
add
outsb
adc
leave
push
push
xchg
inc
out
sti
mov
daa
dec
mov
mov
lods
orb
sbb
add
jg
repnz
outsb
mov
jmp
cltd
lods
dec
or
cmpsb
insl
out
cmp
stc
push
push
sub
call
mov
xorb
cli
rep
aad
jns
and
xchg
in
xchg
addr16
xchg
jbe
outsb
and
mov
movsb
bound
bound
out
scas
jns
jmp
cmp
mov
insl
mov
jbe
mov
xchg
and
insl
mov
jle
negl
fisttpl
lret
shlb
mov
fbstp
or
push
dec
les
iret
fmul
jb
in
imul
jo
pop
inc
dec
jns
sbb
add
xorl
popa
cmpsl
mov
test
jl
in
lret
sub
mov
add
popf
loope
cld
inc
push
subb
mov
jg
aaa
lods
sahf
inc
loope
cld
sub
xchg
push
jecxz
dec
mov
and
adc
ss
dec
sub
xchg
cmp
es
mov
in
iret
mov
movsb
rcrb
notb
and
ss
imul
daa
std
push
test
rcrl
pop
push
and
std
adc
xchg
test
adc
in
jnp
inc
jl
sarl
adc
pop
int3
jo
loopne
xor
push
arpl
shr
scas
sbbl
jo
aad
lock
sub
add
pop
jp
or
mov
nop
sbb
cmp
jl
jl
flds
push
sbb
jae
jno
lods
xor
mov
add
lods
push
xor
jmp
loopne
in
ja
jge
mov
fwait
int
mov
aad
mov
pop
inc
xchg
xor
push
or
insb
lods
mov
and
jae
loopne
xlat
pop
pusha
outsl
aam
inc
mov
scas
push
cs
ds
out
mov
rolb
out
lea
xchg
adc
mov
int
arpl
or
push
jl
inc
lahf
or
inc
fwait
incl
loope
in
in
dec
gs
in
pop
dec
lret
rolb
jb
or
shlb
pop
imul
stos
xchg
loopne
test
divl
xor
xchg
pushf
and
loope
movsl
movl
xchg
cmp
pop
add
sub
sahf
mov
lret
pop
dec
call
and
cmp
test
and
inc
aas
dec
das
or
jle
sub
adc
iret
cmp
repnz
cmp
push
ss
fldl
movsl
fisubrs
jb
jg
nop
and
jns
daa
pop
mov
mov
lea
cmp
sets
loop
dec
pop
stc
jp
incb
jmp
add
lods
imull
jne
pushf
pop
sti
and
sti
xchg
jns
cltd
lock
out
test
pusha
jnp
jns
jbe
fsts
outsb
jns
jmp
xchg
loope
fcomps
fadds
bound
movsl
dec
adc
lds
pop
and
cmp
pop
jmp
sub
pop
popf
dec
jle
stc
stos
loop
in
or
cld
pop
mov
or
cmpsb
fcoml
push
add
push
fwait
lods
mov
aam
ljmp
mov
xchg
jmp
or
lahf
adc
imul
or
pop
or
lret
jno
sti
hlt
in
mov
sbb
mov
daa
cmp
cld
flds
push
pushf
dec
pop
mov
jg
les
movb
mov
nop
xchg
cmp
cld
inc
pusha
inc
sbb
pop
cmp
int3
cmp
pop
and
mov
and
cmp
outsl
jge
cmp
ret
subl
es
movsl
aaa
pop
scas
in
hlt
ficoms
fsubrp
xor
and
popf
data16
xor
dec
aas
stc
inc
dec
pop
jnp
incl
xchg
mov
outsl
mov
cmp
push
and
mov
mov
xorl
ss
ljmp
cmp
mov
insl
lahf
lods
std
movsl
pop
jmp
cmpl
push
in
xchg
pop
nop
lret
pop
aas
dec
mov
dec
enter
repnz
add
loopne
push
stos
lods
ret
and
push
in
xchg
jo
adc
sbb
lahf
and
inc
sbb
test
nop
rcll
mov
cmp
xchg
arpl
cld
nop
mov
push
fstpt
in
mov
ljmp
mov
scas
in
pushf
loop
pop
cmp
loop
jne
mov
sbb
xor
dec
push
adc
dec
jae
xor
push
aaa
xor
jbe
sahf
and
xor
ja
data16
lods
pop
fs
cmp
scas
cli
fmull
mov
mov
mov
xchg
lahf
lcall
into
imul
sti
ds
xchg
loope
leave
sub
cmpsl
mov
out
arpl
xchg
andnps
xchg
add
cwtl
xchg
imul
lock
fs
lock
cmp
or
test
xchg
addr16
pop
addl
xor
sti
js
push
jno
xchg
mov
out
mov
mov
imul
or
lahf
lods
pop
xchg
mov
pop
imul
cltd
cmp
int3
push
ss
mov
xchg
or
arpl
push
mov
ljmp
cwtl
mov
push
mov
in
loopne
adc
xchg
cmp
sbb
aad
mov
fidivs
xor
loope
mov
cltd
xchg
dec
jbe
loopne
mov
lahf
xor
mov
addr16
popf
sahf
dec
stc
out
shl
in
inc
fcomip
and
push
mov
or
jge
subb
inc
dec
inc
xchg
cmp
cmpl
mov
cli
in
mov
sbb
xor
nop
fistl
shr
js
dec
out
inc
lods
mov
dec
adc
movsb
sub
das
les
test
aaa
pop
xor
mov
jne
adcl
or
sub
pop
jle
leave
and
xchg
push
sbb
lahf
mov
out
inc
mov
pop
cltd
mov
jle
sbb
in
push
xchg
xor
xor
cltd
lds
xorl
aad
cmpl
lahf
xchg
shl
adcb
dec
cs
push
mov
cmp
into
jp
xor
push
and
jnp
out
jle
or
stos
int3
xor
pop
push
pop
scas
cmp
inc
xchg
xor
cltd
xchg
sub
ds
icebp
sbb
xor
rcr
jg
das
insl
je
mov
fcoml
mov
or
faddl
in
or
sub
mov
je
movsl
aad
pop
shlb
sti
mov
lea
inc
test
aam
dec
sahf
mov
sub
orl
pop
sub
fcmovnbe
jecxz
push
call
orl
xlat
iret
push
add
fisubs
cmp
das
mov
int
inc
mov
bound
push
shll
lea
movsl
icebp
mov
adc
adc
or
sub
stc
mov
inc
add
pusha
pop
dec
mov
mov
orb
mov
adc
jmp
and
add
jne
mov
sti
lock
mov
aam
das
push
inc
dec
ja
adc
or
inc
xchg
and
xorb
mov
shrl
sbb
popf
dec
lea
lock
xor
push
ffreep
jo
mov
mov
dec
lea
inc
or
sahf
leave
mov
fistpl
psraw
xchg
sub
push
daa
into
jae
lods
pop
sub
inc
cmc
mov
push
push
aaa
mov
ret
data16
fistl
jo
mov
mov
rol
dec
adc
and
xor
lea
mov
lahf
sub
sti
cvtps2pi
mov
cmpsb
cmpsl
sub
xor
lds
in
pusha
lret
pop
lcall
movsb
add
jge
and
jge
jl
xchg
mov
popf
and
decl
mov
es
in
adc
mov
xor
inc
push
mov
daa
push
pop
mov
add
movsl
hlt
cmp
pushf
fsubrs
in
mov
aad
mov
pop
lea
imul
mov
sub
in
mov
cld
cmpsb
mov
sahf
js
sub
inc
push
fisubrs
ljmp
jnp
loope
into
les
and
lahf
enter
jle
and
mov
jp
test
dec
mov
leave
out
loope
xchg
inc
frstor
or
xchg
adc
rclb
insb
mov
test
imul
in
out
pop
sbb
loop
push
fnstcw
aam
or
aas
lret
fldl
sbb
push
shlb
and
sbb
dec
xchg
int
mov
xchg
out
jge
imul
push
cmp
mov
pop
and
jno
addl
fwait
jecxz
and
notl
jbe
in
inc
sub
and
insl
add
ffree
pop
mov
push
outsb
cmp
jmp
cli
xlat
sbbl
inc
fcos
push
testl
cmp
push
sbb
pop
jno
je
mov
dec
mov
lea
and
mov
mov
aam
jae
push
mov
outsb
mov
and
push
sub
xor
insb
cmp
cmp
sub
jbe
jae
sub
ss
push
mov
stos
aad
add
rcll
pop
sbb
inc
out
pop
daa
loop
xor
out
xor
cwtl
or
pop
shr
sub
push
and
mov
lods
cmp
or
aam
and
xor
loopne
cmpsb
cld
jo
out
fldcw
test
orb
in
mov
loop
test
sysenter
pop
sub
sub
xor
and
xor
sbb
xchg
insl
out
in
rorl
aam
mov
fsubs
xlat
sbb
icebp
int
cmp
mov
mov
into
jbe
add
lahf
out
fisubl
jg
sbb
aaa
push
lret
add
in
dec
push
or
enter
xlat
popl
inc
orl
jns
jmp
aaa
adc
sub
mov
jno
cmpsl
pop
push
or
adc
outsb
loope
jnp
andl
push
call
loopne
lcall
push
jmp
lods
cld
lret
dec
fsts
xor
popf
mov
and
cmpsl
sbb
jmp
adc
push
cmpl
js
lods
xor
negb
jmp
mov
and
mov
aad
mov
and
ja
cmp
bound
jo
mov
nop
xchg
mov
sub
xor
lea
push
lds
mov
test
in
lods
jecxz
aam
stc
inc
pusha
xchg
repnz
mov
testb
int3
jp
std
push
push
es
pop
mov
sbb
pop
mov
or
jg
mov
and
mov
dec
mov
in
adc
mov
xchg
push
in
push
jnp
hlt
test
arpl
repnz
push
rcrl
sub
ret
sub
mov
inc
cmp
adc
cmpsb
daa
add
nop
mov
or
sbb
ss
inc
pop
add
out
int
fwait
or
xchg
ficoms
sub
out
or
push
les
popl
dec
mov
add
arpl
sarb
sub
sub
aam
mov
sub
mov
cltd
sub
mov
aam
push
mov
dec
fbstp
fdivs
mov
cltd
fistps
out
lods
pop
int3
out
cmp
lret
lahf
xchg
push
sub
mov
ret
pop
cmpsl
fs
lods
mov
sub
roll
pop
mov
int3
fsubrl
dec
pop
jno
ss
pop
add
jo
or
inc
ss
idivb
dec
sbb
cmpsb
enter
jb
repnz
jle
or
and
loop
outsl
ds
mov
jb
test
pop
test
out
and
pop
pushf
insb
out
lahf
sbbb
push
call
xchg
add
lods
push
mov
pop
cmp
jecxz
ss
call
dec
push
scas
je
movsb
scas
lret
fildll
dec
add
push
pop
mov
aam
outsl
xlat
popf
mov
fisubl
iret
mov
andl
push
push
pop
xchg
sub
mov
xor
jno
imulb
xor
nop
add
pop
sub
sbb
pop
repnz
jb
mov
mov
loope
in
nop
jmp
pusha
xchg
out
loope
inc
sbb
insb
gs
out
or
inc
mov
sarb
cmp
ja
push
cmp
stos
cmp
test
bound
sbb
jae
mov
fldlg2
lret
in
lahf
dec
jge
int3
add
dec
jl
movsb
or
push
iret
dec
je
jmp
cmp
mov
sbb
insl
or
and
inc
adc
jmp
popf
xor
pushaw
jne
mov
loop
cwtl
sub
adc
mov
add
mov
ss
xchg
inc
or
mov
inc
xor
inc
pop
cmc
or
hlt
into
sbb
dec
test
rcr
mov
sbb
sub
in
sub
inc
cmc
push
xchg
push
notl
sub
inc
push
jecxz
aam
mov
ds
cmc
and
fcomps
or
cmp
push
aad
xor
push
xchg
mov
mov
aas
test
in
aaa
lods
xchg
es
mov
adc
in
push
aam
vpcomb
pop
pop
stos
cmpsl
cmpsb
jmp
sbb
mov
nop
push
test
pop
xor
xchg
out
xor
push
add
stc
xchg
mov
lret
pusha
imulb
popa
sbb
stos
adc
xor
inc
jg
cmp
lods
jge
or
movsl
cs
push
inc
bswap
andl
sarl
lea
and
daa
cld
mov
xchg
pop
pop
test
ret
cmpsl
es
call
mov
shl
rcl
sub
roll
lea
call
out
mov
ret
call
push
push
out
cld
ds
in
vmread
stc
adc
test
aad
lahf
aas
dec
fnstsw
fstps
jo
inc
daa
pushl
lds
std
dec
push
jno
mov
add
xor
insl
test
dec
mov
jnp
jg
xchg
jmp
xor
insl
lret
insl
push
clc
push
fisubrl
loope
movsb
inc
xor
pop
subl
arpl
jle
xchg
jge
sahf
rorb
jle
mov
xor
nop
popf
push
fidivrl
test
sub
and
push
pop
nop
sahf
push
sti
lods
inc
mov
jecxz
rclb
les
adc
repnz
ds
mov
jp
push
jb
bnd
loop
cmp
add
inc
fwait
adc
pop
lds
or
push
xor
pusha
adc
push
jle
dec
pop
dec
es
mov
xor
or
and
or
mov
jae
inc
lods
and
add
addl
jbe
jbe
stc
mov
pop
jbe
ss
pop
or
movsb
outsb
out
xchg
mov
sub
addr16
mov
sbb
test
adc
inc
outsl
je
loopne
jle
sahf
leave
ds
xor
hlt
mov
scas
gs
fs
daa
int
lret
enter
rolb
bswap
cmpsl
or
dec
iret
fs
test
jnp
dec
imul
pop
jo
mov
jns
fsubs
mov
cmp
sbb
dec
mov
movlps
movsl
sbbb
pusha
cmpb
fsubrl
lods
adc
or
pop
lea
adc
pop
daa
testb
xor
loope
sbb
lea
negb
into
mov
xorb
mov
pop
loop
sbb
adc
push
and
nop
cmc
add
out
xor
iret
mov
cmp
mov
inc
ja
icebp
roll
andb
rcll
jns
lahf
pop
hlt
adc
leave
push
pop
xor
outsl
insl
inc
xchg
dec
imul
xchg
xor
popa
fwait
push
xor
imul
icebp
sub
jbe
ljmp
insl
movsl
dec
in
fists
lods
nop
push
subl
adcl
jo
hlt
push
movsl
add
inc
push
test
ja
sbb
in
push
jns
push
into
fisubl
xor
pop
push
into
dec
xchg
jl
test
add
pop
mov
out
cltd
pop
inc
push
push
repz
xor
add
xchg
pop
add
mov
out
stos
dec
pusha
popa
popf
push
xchg
cmp
out
mov
stos
adc
xchg
dec
lret
dec
sub
movsb
mov
mov
jne
push
xchg
mov
jns
jb
aaa
test
scas
sub
cmp
sbb
xchg
dec
and
fmuls
iret
push
stc
andl
inc
cld
into
and
jae
dec
jecxz
jp
int
outsl
xchg
mov
sub
leave
data16
mov
addr16
shll
verw
mov
fs
bound
lods
ja
mov
ds
jo
mov
inc
inc
addr16
in
je
mov
xchg
aas
cmp
mov
out
and
pop
test
pop
fists
data16
jne
nop
mov
xor
xlat
rorb
and
dec
mov
mov
in
or
sti
mov
inc
lcall
pop
cmp
and
xchg
int3
sbb
sbb
jb
pop
jo
outsb
sbb
add
xchg
imulb
sarl
cltd
in
xchg
xor
loope
rorb
and
jp
sbb
out
das
mov
ret
xor
addr16
mov
xchg
dec
ss
enter
jge
rolb
or
insl
mov
jg
xchg
call
cmp
mov
cmpb
test
sub
mov
imul
jge
jp
test
jo
mov
es
imul
sbb
and
loope,pt
nop
dec
sub
inc
arpl
pop
adc
push
notb
add
addr16
stos
inc
add
fnstsw
loopne
roll
cmp
and
sub
push
jmp
xchg
sub
xchg
popa
cmp
add
aas
lea
xor
stos
insl
jo
fcompl
jno
and
loopne
push
add
insb
xchg
ja
rcrb
aad
out
imull
add
pusha
inc
cltd
aaa
dec
scas
leave
out
push
arpl
jne
jne
mov
push
push
mov
dec
push
repnz
xchg
pop
or
js
loope
cli
xchg
mov
popa
push
lock
repz
xlat
divl
adc
mov
add
mov
xchg
and
mov
jno
popf
paddusw
mov
into
mov
cpuid
xchg
popf
mov
adc
jmp
addl
leave
es
push
push
jno
insb
lock
insl
fisubs
loop
outsl
pop
add
xor
add
lods
call
or
dec
imul
movsl
mov
add
dec
and
pop
jecxz
leave
add
scas
stc
xlat
sub
mov
andl
xchg
cli
fs
ja
sub
inc
sahf
clc
push
mov
or
xchg
cmp
push
jmp
in
rclb
pop
cmp
std
cs
xchg
inc
xchg
loop
xchg
sbb
stos
fiaddl
xchg
jmp
mov
ja
mov
fdivr
jg
and
sub
push
mov
lods
test
push
sub
jl
pop
xchg
mov
jecxz
mov
sbb
pop
mov
or
movsb
das
in
sbbb
loop
inc
mov
jne
mov
jno
push
or
sub
out
sbbb
filds
pop
mov
shll
jg
mov
jb
inc
or
popf
push
or
lods
ret
and
pop
jb
xor
and
dec
mov
and
call
xchg
sbb
inc
xchg
stc
sub
ljmp
cmp
inc
adc
pop
push
add
int3
push
shlb
mov
call
ljmp
cmp
mov
dec
pop
pushf
jmp
sbb
add
imul
adc
xchg
mov
or
dec
lods
out
lcall
sub
push
movsb
data16
jl
adc
cltd
xchg
xchg
jns
jp
cmpsl
outsb
dec
fwait
jns
jo
or
jg
jl
adc
hlt
add
mov
mov
push
sahf
and
pop
lock
daa
ljmp
fsubl
lret
or
movsl
or
push
mov
cli
fwait
mov
and
out
ljmp
ret
test
das
out
popf
adc
sbb
adc
incl
inc
and
and
lods
adc
int3
cmp
lcall
adc
pusha
or
sub
sub
push
xor
rcrl
shlb
sub
ljmp
add
mov
pop
les
lret
out
inc
sbb
outsb
sub
mov
daa
test
sbb
or
aad
leave
and
xchg
or
push
icebp
sub
scas
loop
out
pop
jl
mov
iret
fcmovb
and
push
popf
insl
add
lret
lret
test
out
pop
sbb
inc
push
adc
cltd
out
or
mov
sti
loope
movsb
mov
dec
leave
call
pop
dec
fwait
sbbb
ficoms
push
sti
gs
push
dec
and
xchg
pop
out
loope
aaa
and
xor
imul
mov
and
jb
mov
arpl
orb
in
out
fcomps
inc
gs
ljmp
add
push
adc
int3
cld
rorb
sbb
adc
jne
in
mov
dec
sub
sub
fidivs
add
inc
push
ss
add
inc
dec
mov
push
fiadds
push
pop
jbe
cmpsl
pop
ret
call
adc
dec
or
call
fnstenv
loop
mov
inc
mov
aad
adcb
aas
test
sahf
xor
loope
jbe
popf
jecxz
inc
pushf
dec
and
cmpsl
sub
jb
mov
sub
ret
dec
leave
lock
lret
jb
xor
pop
cmc
loopne
faddp
out
mov
dec
fdivr
add
jns
mov
stc
or
and
in
or
out
cmpsb
popf
sub
jbe
aad
and
xchg
mov
mov
addr16
sub
out
mov
fisubs
mov
cltd
loope
push
jmp
test
nop
loop
inc
cmc
sub
pop
or
sbb
mov
das
rolb
scas
sbb
cmp
dec
dec
ss
fbstp
div
jg
push
mov
dec
cmp
jg
xor
ss
jb
out
lds
fwait
xchg
jle
or
lahf
push
js
add
or
scas
lds
stc
pop
dec
out
das
adcb
adc
jnp
fisubrl
movsl
jns
rcll
stos
shlb
or
test
jno
cld
dec
es
lret
mov
cld
push
aam
test
xchg
lds
lcall
bound
jbe
pop
mov
les
push
cmc
push
push
xchg
test
int
icebp
enter
dec
jge
xlat
shl
cltd
push
sti
or
jle
test
add
add
pop
mov
dec
js
out
dec
mov
add
pop
or
mov
pop
repnz
popa
scas
das
sbb
inc
push
push
roll
xor
daa
inc
mov
or
ds
pop
push
inc
aam
push
xchg
mov
ret
mov
repnz
ss
test
dec
xor
xchg
inc
cmpsl
mov
add
pop
add
gs
or
dec
cld
push
cmpsl
jo
inc
jl
stos
jmp
or
shlb
xlat
mov
call
cld
pop
inc
lret
push
adc
cmc
dec
scas
mov
loop
xchg
and
test
call
mov
lahf
mov
xor
clc
std
call
jbe
sub
cld
pop
stos
add
sbb
xchg
sbb
or
adc
test
inc
fcmovnb
pop
ret
inc
jbe
movq
fwait
add
lods
dec
xchg
xor
in
jno
sbb
sub
add
imul
imul
popf
decl
lods
movsb
push
leave
pop
mov
cmp
xor
mov
xor
sub
hlt
je
xor
push
mov
insb
cld
ds
pop
mov
sub
lea
test
cmp
insb
inc
xor
out
adc
sub
sub
mov
aam
mov
or
push
or
inc
mov
push
jb
pop
jg
in
jnp
mov
xor
xorps
in
popa
sbb
mov
inc
je
xchg
cltd
xchg
adc
ret
xlat
xor
pop
inc
mov
aaa
imul
test
mov
push
fstpt
jnp
push
imul
fidivrs
stos
nop
fwait
mov
xlat
shll
xchg
insl
jnp
mov
xor
jb
jne
andl
lahf
push
decb
jcxz
dec
sub
sahf
dec
iret
jg
adc
fcmovb
int3
mov
rorl
mov
dec
outsl
cs
xchg
push
cli
ja
xor
cmp
cmp
pop
jbe
outsb
leave
mov
fwait
push
loop
loope
lea
xchg
iret
idiv
pusha
loop
aad
or
push
std
ret
in
gs
out
push
cmp
jmp
inc
daa
mov
imul
outsl
push
or
stos
jnp
adc
xchg
sbb
fisttps
aaa
or
je
and
test
xor
lahf
sti
shlb
and
pop
mov
ljmp
push
scas
call
stos
sub
test
lret
cmpsl
mov
inc
sub
lcall
xchg
xor
lret
ret
cmpsl
or
jo
dec
sub
xor
aad
inc
mov
and
xor
push
xor
lods
and
xchg
int3
mov
jmp
stos
ds
xchg
dec
jl
mov
pushf
cwtl
inc
mov
adc
lcall
dec
jo
xchg
je
or
js
xorb
addb
icebp
and
jno
add
mov
sahf
pause
shlb
pusha
mov
leave
out
mov
test
adc
jbe
and
xchg
and
dec
xor
jns
add
sub
popf
jb
lret
ret
push
out
pusha
fstpt
mov
je
dec
jo
inc
insl
in
mov
sarl
std
adc
loop
xchg
in
fildl
jo
dec
push
dec
jge
cmp
cmpsb
stc
loopne
enter
movsl
xchg
adc
loop,pn
xchg
pop
into
hlt
clc
pop
rcll
lds
add
in
loope
pusha
imul
lods
aam
add
cmp
jnp
vpaddb
test
ja
jns
adc
gs
xchg
and
mov
vpsubusb
aad
xchg
dec
jg
jg
mov
outsb
arpl
sub
imul
sahf
mov
pushf
mov
data16
and
lret
xor
jge
insb
in
aad
xchg
xchg
ja
fstps
mov
jmp
or
fsubr
fsubr
mov
mov
mov
sbb
pop
jp
sub
setg
dec
mov
and
lods
subb
in
or
xchg
jp
insb
add
add
pop
sbb
int3
into
dec
lods
adc
imul
loop
fwait
mov
lcall
int3
sbb
cmp
fistpll
aad
ja
lds
dec
outsl
mov
jo
cmovs
adc
jmp
aad
insl
or
pop
dec
push
gs
mov
push
fwait
les
hlt
outsl
int
dec
cld
repz
std
xchg
jmp
cmpsl
in
cwtl
push
pop
iret
adc
bound
movsb
push
xchg
inc
jmp
test
push
dec
adc
in
imul
sti
add
add
xor
mov
ss
inc
add
inc
fs
cltd
mov
pop
sti
lods
adc
pop
fisttps
stos
sbb
ret
dec
inc
inc
xlat
dec
out
mov
movsb
shl
js
rcl
mull
lret
push
cmp
push
sub
sarl
mov
lods
mov
pop
mov
push
xchg
mov
js
test
std
mov
aaa
aad
ret
clc
sbb
lea
lock
inc
mov
in
pop
sbb
orl
ljmp
xchg
js
cli
push
xor
adc
xor
jecxz
int
push
in
popa
pop
adc
incb
fisttps
add
pop
je
in
cld
pusha
cmp
outsb
mov
sub
jle
imul
cmp
or
fldt
mov
stos
fldenv
scas
or
pop
outsb
mov
clc
xor
repnz
cmp
cld
push
sub
jg
jg
sub
movsl
xchg
stos
rcrl
cmp
movsb
cs
cltd
push
add
pusha
sub
xor
nop
ficoms
mov
test
hlt
inc
scas
xor
outsb
pop
pop
xchg
lods
lcall
push
jecxz
outsl
maskmovq
idivl
mov
xbegin
push
and
add
das
push
imul
pop
lock
test
or
dec
pop
lds
mov
cmp
in
fstpt
fmul
push
test
cmp
scas
mov
flds
lds
adcb
adc
sahf
jno
dec
add
add
enter
and
pusha
hlt
aas
repnz
mov
push
movsb
lret
add
jne
jmp
rcll
xchg
or
mov
cmpsl
fstpl
call
out
fisttpl
aas
push
xchg
xchg
mov
sbb
inc
mov
div
nop
shr
aad
xor
pushf
cs
push
sbb
or
scas
xchg
sub
dec
push
pop
loopne
mov
mov
jl
cmp
enter
cs
testl
das
int3
xchg
jge
mov
jo
testb
mov
jg
and
cs
mov
aas
or
mov
int3
jmp
mov
mov
movsb
subb
add
cwtl
mov
loop
xchg
sub
jecxz
jno
cmpl
add
ret
popa
ja
shll
les
xchg
jecxz
mov
add
dec
mov
rep
into
imul
int
pop
push
mov
or
int
mull
addl
rcl
dec
xchg
lahf
sub
out
cwtl
push
xchg
mov
mov
outsl
sar
cmpsb
out
nop
shrl
scas
popa
push
cld
gs
mov
push
mov
roll
lret
xor
mov
mov
pop
loope
mov
pushf
mov
cmp
xor
in
pop
das
in
cmpb
xchg
xor
enter
decl
out
jnp
lea
mov
scas
ds
fwait
cmpxchg
insb
adc
mov
test
scas
cmp
shll
andl
mov
cmp
loope
dec
ds
or
enter
cmc
xor
mov
test
stos
jl
in
nop
inc
icebp
nop
lds
repnz
jg
fsubrl
add
sbb
dec
pop
dec
inc
insb
pop
ret
mov
call
je
jbe
je
es
scas
add
pop
or
scas
mov
lods
rcr
icebp
stc
pop
imul
xchg
pop
lods
outsb
clc
ficompl
js
mov
shrb
int
movsl
add
into
shr
aas
push
jmp
mov
adc
mov
and
add
mov
lea
xchg
pop
je
lods
dec
mov
add
aam
and
jb
int3
xchg
out
cmp
stos
dec
push
scas
cmp
popf
test
jae
jecxz
out
mov
mov
pusha
xchg
mov
ja
jmp
scas
cwtl
insl
xor
or
push
sbb
lret
les
xlat
les
mov
mov
pop
push
stc
inc
lods
sbb
int3
adc
push
hlt
gs
sbb
jle
insl
pop
loop
push
shl
jno
xchg
and
xchg
sbb
or
xor
cli
xchg
je
std
cmpl
jecxz
rcr
or
lcall
nop
sub
testb
sub
push
lret
in
movsb
pop
sub
imul
js
fiaddl
call
cwtl
sub
rol
ficompl
gs
icebp
lea
mov
push
pop
dec
jecxz
lahf
mov
insb
into
jp
dec
sbb
adc
out
pop
add
fistl
adc
mov
js
rcll
orl
push
sbb
add
lock
in
hlt
pop
cmpsl
push
repz
in
push
daa
pop
mov
pop
popf
hlt
jg
adc
sub
lods
test
mov
adc
imul
iret
pop
pop
xorl
lret
call
fistpl
cmp
aad
ret
cmp
jo
clc
shlb
loope
mov
jl
sarb
sbb
and
insb
aad
and
insb
outsl
mov
fcoml
and
adc
fldl
fwait
or
les
dec
shl
movsb
adc
aas
in
xor
jl
daa
pop
loope
and
or
lret
sahf
lret
xor
mov
ja
or
xchg
jecxz
jl
or
fdivrl
jbe,pt
out
stos
sbb
and
mov
lret
out
mov
cmpsb
mov
fbld
xchg
cmp
and
and
bound
fdivl
or
lea
out
orb
out
add
adc
mov
fwait
pop
xchg
jl
cld
icebp
enter
cs
movsl
mov
aam
lods
fiaddl
loope
ja
dec
cltd
test
mov
mov
ljmp
cmp
ds
adc
pop
add
jp
add
shll
imul
dec
pop
ja
push
or
movsl
outsb
mov
pusha
fisubl
inc
movsb
fdivrl
shrl
aaa
and
popf
stc
or
rclb
aad
jg
adc
aam
mov
movsl
insb
mov
stc
mov
shr
mov
cmpsl
in
pop
cmp
mov
loopne
ss
orl
xor
imul
ds
mov
mov
xchg
sbb
outsl
push
sub
xchg
int
arpl
mov
add
adc
cld
mov
cli
push
inc
hlt
fucomp
or
cli
add
call
daa
mov
jbe
mov
xchg
mov
shll
out
dec
push
push
inc
outsl
outsl
jno
pop
or
pop
lret
pusha
test
mov
adc
pop
fs
loopne
adc
adc
fistps
mov
add
jae
jp
jecxz
cmp
adc
lcall
adc
adc
inc
and
add
dec
pop
shl
aam
icebp
inc
pusha
mov
rcl
jnp
inc
inc
lds
dec
leave
lahf
gs
hlt
sarl
dec
nop
mov
cmpl
cs
fisubl
mov
out
mov
fistps
fldt
rcrl
xor
fstl
test
jb
dec
std
add
add
pushf
cmp
movsb
mov
sete
addl
add
cmp
inc
xor
lods
mov
mov
pop
aad
mov
inc
imul
das
aad
cltd
cmp
xchg
xchg
loopne
int3
movsl
or
iret
xchg
mov
fdivrl
xchg
xor
inc
int3
jno
jg
and
sub
hlt
add
and
mov
xchg
arpl
xor
jg
sub
cmp
push
cltd
out
or
push
stos
sbb
rolb
daa
cmp
push
add
das
or
dec
mov
gs
pop
add
in
add
arpl
push
xor
lods
pop
lock
push
cli
inc
lret
repz
mov
mov
les
repnz
ss
mov
or
dec
inc
dec
fidivs
aaa
adc
sbb
cmc
insl
pop
xchg
sbb
cltd
jbe
or
xor
jecxz
scas
pop
mov
iret
cmp
or
test
sbb
mov
push
pop
lahf
insb
psraw
scas
cltd
test
jl
mov
outsl
sub
adc
aad
mov
jmp
fucomi
xor
mov
or
insb
and
aaa
and
in
nop
xor
push
or
pop
mov
adc
or
scas
mov
adc
mov
xor
and
cltd
xlat
sub
dec
loop
outsl
mov
jp
and
loopne
dec
cmp
adc
sub
mov
pop
dec
dec
jle,pt
lods
ja
mov
int
shrl
mov
insl
pop
dec
jl
stos
jle
jecxz
cmp
mov
inc
jl
fistpl
lds
stos
ret
arpl
mov
sub
inc
adcb
paddd
or
add
jns
xor
fldt
jecxz
rcrb
jmp
jp
push
stos
in
and
inc
in
test
aaa
dec
shll
fisubrs
movsl
mov
mov
mov
sbb
xchg
xchg
push
lahf
inc
xor
aas
outsb
sbb
outsl
push
or
sub
dec
xchg
add
push
or
sbb
mov
push
iret
fsubrl
adc
mov
adc
jns
aam
pop
xor
mov
push
adc
push
pop
sub
lock
ficompl
pop
pushf
pop
mov
mov
jbe
or
rcrb
xlat
xor
mov
adcb
adc
add
shll
xor
jg
push
enter
shll
sbb
test
and
inc
sbb
cwtl
sahf
fbstp
sub
insb
push
xchg
jne
xor
dec
sub
lahf
popf
or
in
jle
scas
std
out
xor
sbb
call
cmp
xlat
mov
addl
jge
pop
jns
fmul
les
daa
fbld
paddw
cmpl
dec
scas
rorb
xchg
push
lods
sbb
in
imul
xchg
std
xor
sbb
mov
clc
inc
popa
mov
cld
mov
lods
jle
andl
add
nop
xchg
push
nop
dec
popf
cld
adc
jecxz
test
add
xchg
pop
insl
js
or
imul
sub
mov
mov
lahf
subl
popa
pop
push
xchg
mov
cltd
jo
and
jno
inc
rorl
por
mov
in
mov
es
adc
mov
scas
insb
daa
jnp
sub
mov
repz
data16
je
in
fisttpll
mov
add
push
fs
dec
sbb
inc
pop
add
cmp
aaa
orb
push
mov
outsb
mov
movsl
mov
stos
mov
loop
test
mov
stc
inc
dec
adc
fdivrl
adc
repnz
xchg
adc
inc
mov
js
xor
bnd
mov
adc
addl
push
cmpsl
mov
xor
or
jg
mov
adc
in
jae
pop
inc
rcl
lds
adc
add
jnp
jecxz
jp
test
push
xor
jl
aas
cmp
imul
mov
xchg
and
repnz
cmp
pop
aam
xorl
lods
xor
rcll
sahf
push
mov
mov
hlt
sub
fdivrs
inc
adc
mov
push
adc
pop
cmp
push
aam
xor
fiadds
mov
lds
or
push
aaa
or
and
test
insl
xor
xchg
mov
xchg
in
popa
sub
jne
add
jnp
mov
push
pop
scas
pushf
repz
into
loope
push
push
sbb
pop
fwait
push
outsl
jns
dec
call
testb
mov
pop
hlt
add
loope
xor
sub
loopne
dec
cmp
iret
adc
sti
xor
enter
movsl
ds
imull
pop
inc
xor
dec
movsl
jmp
xchg
movsb
sub
adc
cli
or
and
pop
mov
mov
fwait
lods
jp
push
jg
ret
data16
mov
jo
lods
fcmovb
add
xchg
sbb
push
pop
je
js
xchg
pop
inc
ds
dec
pop
nop
push
cmp
div
pop
jns
jle
xor
sub
dec
dec
bound
pop
inc
shll
outsl
sbb
fmull
xchg
lcall
jmp
sub
lods
or
mov
cmp
jo
and
push
clc
mov
loope
xchg
ja
in
mov
fidivl
adc
and
cwtl
fidivs
push
sbb
scas
mov
iret
dec
mov
mov
xor
mov
lahf
add
mov
adc
cmp
jle
stos
sar
in
loope
adc
rolb
movsl
leave
push
iret
mov
addl
sbb
push
and
inc
add
push
adc
mov
insb
imul
push
in
mov
sub
divl
push
jo
adc
in
daa
test
clc
sbb
xorl
dec
push
xor
and
cwtl
jle
mov
add
fs
pushf
mov
jg
dec
out
fs
pop
test
xor
fs
arpl
clc
rol
imul
or
out
call
mov
push
outsl
xchg
push
aas
inc
push
test
inc
clc
cmp
adc
mov
dec
sub
sbb
shll
cmp
rorb
mov
jmp
daa
xor
inc
cmp
sti
sbb
cmp
aad
leave
cmp
sub
or
pop
sub
shrl
mov
outsb
sbb
jmp
pusha
jo
addr16
dec
inc
pop
addr16
subb
pop
test
xor
inc
out
fldt
mov
xlat
xchg
sti
push
or
cmpsb
decl
jno
test
andb
fiadds
or
and
pop
fcmovne
pushf
pop
lock
pop
lahf
mov
push
mov
gs
les
xchg
adc
jmp
or
sbb
inc
mov
rolb
mov
inc
into
mov
or
add
fnstsw
cmp
stos
stos
scas
out
mov
ret
mov
cmpsl
std
and
std
mov
push
mov
push
push
mov
js
push
inc
pop
mov
sbb
clc
lcall
movsb
jae
dec
xor
xchg
xchg
pop
push
hlt
jno
sub
popa
gs
xchg
mov
pop
mov
jg
ret
and
call
adcb
jb
or
loopne
inc
js
sbb
mov
sahf
jae
xchg
lods
xchg
lock
fiaddl
insb
fstl
add
push
mov
xchg
pop
push
mov
push
dec
cwtl
sub
sbb
and
es
pop
jo
sti
pop
rcrb
addr16
jbe
daa
jp
ds
inc
mov
imul
mov
and
sbb
int3
das
cmp
mov
fcomi
xor
xchg
sbb
fistpl
rep
jo
xchg
movsl
add
in
add
sbb
ja
out
js
dec
into
rorb
cmp
cmp
mov
cmp
icebp
shr
adc
adc
sbb
cmpsl
mov
adc
insb
dec
xchg
mov
adc
push
rolb
push
xor
push
call
lock
mov
std
imul
jle
cmp
dec
dec
and
xor
jbe
ja
out
loopne
rcll
outsl
and
negb
inc
cwtl
xor
fstpl
cmp
pusha
push
cld
stc
push
fstpl
loope
mov
imul
loope
sub
pop
mov
shll
add
into
jmp
xchg
cmp
movsb
add
repnz
aaa
mov
jb
sahf
movsb
and
fsubl
inc
aad
adc
call
scas
push
out
or
dec
ljmp
int3
pop
dec
mov
jecxz
cmp
dec
sub
jge
xchg
and
dec
jmp
lea
stos
mov
arpl
sbb
xor
scas
jb
xchg
sub
leave
xchg
and
rclb
insl
ficoms
lock
out
clc
ljmp
push
cltd
xor
cmp
pop
adc
ret
repnz
mov
lea
xchg
pop
mov
lods
lods
jno
sub
dec
mov
les
lahf
arpl
cld
in
gs
dec
mov
cmpsl
inc
pushf
sbb
push
insb
and
and
fld
lds
pusha
lds
cmp
fcmove
sbb
leave
push
out
leave
jl
jge
or
aas
cmp
inc
fldt
add
stos
mov
push
lret
dec
xor
in
int3
pop
cli
shr
pop
jnp
jbe
int
push
push
mov
mov
out
fmuls
mov
popa
sbb
loopne
mov
cwtl
scas
sar
sbb
and
lds
xor
cmp
xor
jno
fbld
pop
xor
mov
xchg
cmpsb
pop
push
iret
dec
push
pop
jne
pop
pop
adc
les
or
roll
mov
dec
test
mov
mov
cmp
jl
js
adc
jmp
mov
nop
popa
lods
mov
in
into
loop
pop
rcrb
xor
aad
cmc
xchg
aas
dec
and
popa
xchg
and
scas
add
rol
cs
popf
aad
adc
daa
stos
data16
cmp
jge
and
shrl
cmpsl
mov
rcrb
loop
push
sub
inc
push
xor
data16
xor
mov
push
lods
fs
sub
cmp
mov
mov
sti
push
mov
iret
bound
cwtl
lret
sub
outsb
dec
inc
adc
pop
aas
scas
jbe
xor
and
scas
insb
out
fmul
fprem
dec
jle
aam
outsb
lea
sub
pop
adc
pop
les
inc
push
xlat
popa
inc
data16
pop
lods
test
inc
pop
neg
daa
loope
add
add
fildl
push
icebp
std
inc
push
mov
insl
mov
cltd
push
sbb
lahf
pop
das
jbe
in
gs
push
ljmp
mov
sarl
fidivrs
jnp
sub
xchg
out
icebp
in
mov
dec
cmc
jp
test
aad
jnp
sahf
fidivl
dec
pop
jb
push
inc
fcompl
jecxz
pop
mov
insb
sbb
xchg
xorb
cmp
push
call
int
fists
fs
arpl
inc
lea
std
dec
jle
mov
xchg
gs
sub
push
or
mov
sub
aas
idivl
push
js
mov
mov
push
and
or
sbb
mov
lahf
lahf
std
jb
insb
int
add
lahf
test
dec
or
addr16
sbb
mov
arpl
inc
cmc
outsb
mov
inc
push
lds
loop
jp
jl
or
aad
xchg
mov
ss
rcrb
add
mov
imul
mov
lret
xor
or
cmpsl
repnz
pop
sub
test
push
add
inc
or
adc
sub
jb
shlb
scas
es
cmp
es
shl
js
cmpsl
adc
lods
dec
out
out
mov
loope
mov
outsb
inc
mov
data16
mov
xor
jo
bound
mov
mov
cmp
lods
and
add
push
cmp
inc
adc
fisubs
icebp
pminsw
sub
lods
and
push
push
mov
cmpb
adc
bound
dec
xor
insl
jno
sbb
push
cmp
push
sub
popf
sbb
icebp
mov
pop
test
xor
sub
or
js
ret
hlt
xlat
xor
sahf
mov
hlt
in
sub
or
ret
movsl
push
sbb
out
jmp
mov
mov
jg
pop
je
subb
imul
lcall
out
mov
or
dec
decl
jle
jge
cmp
ja
add
pop
stc
in
daa
add
cmc
fdivl
stc
adc
stos
aaa
loop
dec
lods
dec
push
xchg
mov
cmp
mov
mov
mov
in
mov
add
jg
cmpsb
xor
jns
pop
mov
cmp
pop
imul
jge
jl
sbb
sahf
lods
test
or
mov
mov
fs
lds
xchg
loop
xchg
cmp
pop
and
xchg
rcrb
test
xor
fwait
fs
xchg
enter
inc
mov
adc
push
xchg
mov
test
pop
out
xchg
lea
jg
mov
adc
daa
les
dec
sbb
in
dec
iret
pop
pop
jle
nop
cmp
sahf
sbb
popa
outsb
enter
jb
push
or
cltd
or
jbe
or
pop
sub
aas
and
mov
pushf
ljmp
push
xor
lods
adc
push
stos
mov
jmp
dec
pusha
icebp
xor
dec
pushf
pop
popa
add
je
js
call
in
sub
das
inc
imul
hlt
push
or
inc
xor
in
rolb
mov
fmuls
rclb
fsubl
dec
leave
imul
mov
push
adc
adc
jmp
mov
jmp
mov
mov
shlb
add
xor
sti
lret
pop
jb
fcoms
popf
add
int3
adc
or
popa
mov
in
push
orb
int3
imull
jg
dec
adc
stos
lods
addb
adc
rorl
pop
in
jns
push
sub
xor
mov
outsl
xchg
sub
pop
jmp
mov
stc
lahf
add
add
mov
lcall
out
mov
das
mov
xor
test
cmp
and
das
add
out
mov
jecxz
or
cmp
jle
or
cli
jnp
loopne
jno
ljmp
divl
lods
push
jp
loopne
push
iret
pop
jo
adc
loope
sahf
test
sbb
add
shlb
sub
arpl
cmpsl
push
repz
jle
and
or
mov
xchg
add
aad
cld
fiadds
shr
xchg
sbb
mov
mov
ss
push
dec
inc
pop
aad
pop
out
cld
xchg
es
stos
std
xor
dec
mov
xlat
or
imul
lahf
pop
mov
lods
loope
push
sahf
xchg
xor
sahf
mov
das
xchg
push
shl
cmc
cmpsl
sub
pushf
fisttps
aas
or
mov
retw
mov
jns
push
xlat
cltd
sub
xor
shlb
fwait
repnz
clc
test
lock
mov
cmp
sti
mov
xchg
cmp
les
xorb
sti
stc
ljmp
call
xchg
jbe
mov
cmp
daa
out
mov
mov
js
pop
pop
clc
dec
sbb
xor
gs
pop
imulb
xchg
mov
xor
pop
cli
xchg
and
xlat
xor
jbe
sub
xor
mov
pop
fcmovne
cld
and
pop
out
xchg
sbb
and
mov
test
dec
jg
adc
and
sarb
mov
sub
hlt
sbb
xorl
mov
rcll
pop
aad
je
mov
push
mov
ss
stos
mov
mov
sbb
mov
in
iret
lcall
pop
mov
inc
add
and
cltd
in
pop
fmuls
push
jb
jl
jae
movsl
sbb
or
and
fiaddl
les
pusha
xchg
call
jns
xchg
test
les
or
mov
loope
push
dec
pop
aaa
leave
lods
divl
shrl
test
mov
jno
imul
faddp
aam
fdivrl
mov
xorb
insb
rcrl
dec
jno
cmp
mov
shlb
sarl
push
loopne
mov
into
pop
fs
cmp
adcb
cmpsb
or
popa
xchg
in
shrd
mov
shl
mov
cld
das
mov
rorl
add
lcall
mov
cmp
scas
sub
jmp
adc
mov
aas
out
cmpsl
lahf
daa
scas
mov
cltd
jb
mov
in
xchg
inc
xchg
fs
or
mov
repnz
cmp
sub
pushl
xorb
or
mov
and
inc
and
xlat
and
lahf
mov
int
xlat
and
out
sbb
lea
sbb
add
into
xor
pop
mov
jae
ret
jg
lret
ret
fistpl
pop
inc
push
xlat
mov
aad
pop
dec
cmp
popa
mov
mov
data16
mov
mov
aam
stc
xchg
add
or
and
jmp
push
adc
jmp
xchg
push
jno
fidivrs
pop
jne
push
je
icebp
arpl
outsb
repnz
xchg
in
jmp
fidivs
sbb
jp
add
xor
xchg
xchg
xor
dec
adc
and
pop
inc
pop
mov
nop
cmpb
push
in
popa
aam
cmp
aam
imul
push
or
repz
or
and
ret
popa
mov
ret
test
lahf
jge
insb
xchg
gs
sub
mov
inc
out
in
cmp
ljmp
cmp
popf
test
pop
xchg
xchg
jnp
ret
lret
xchg
or
mov
orl
imul
or
mov
cld
pop
movsb
loopne
gs
mov
dec
aam
icebp
dec
xchg
cmpb
jno
daa
push
xchg
bound
dec
test
cmp
jge
xor
out
mov
enter
movsb
pusha
sub
das
adc
test
pop
mov
stos
push
adcb
mov
popf
cmp
xor
fldl
roll
and
hlt
mov
push
les
or
movsb
fdivl
sbb
out
stos
fldcw
add
std
add
les
repz
dec
loopne
lcall
or
data16
adc
mov
arpl
dec
andb
call
mov
imul
jecxz
and
adc
loope
jnp
xchg
int
aaa
xor
push
pop
rcll
sbb
jle
and
es
pop
mov
cmp
pop
sbb
dec
and
adc
daa
mov
sbb
push
out
insl
cmpsb
cmp
notb
adc
aas
out
jb
cmp
mov
mov
es
cmp
lea
or
pop
xor
fcmovnb
in
adc
pop
xchg
mov
or
mov
mov
xor
push
int
cmpsb
sub
outsb
or
cwtl
mull
scas
sbb
jns
xchg
dec
ds
mov
adc
shlb
adc
mov
sbbb
adc
es
xchg
call
sbb
fidivrl
aas
clc
xchg
mov
cltd
imul
repnz
xchg
rcr
mov
andl
je
xorb
xchg
pop
std
xchg
out
push
jecxz
lea
adc
sub
cmpsl
lret
daa
adc
lods
test
inc
sahf
insl
jo
cmc
insb
sbb
repnz
fcompl
push
dec
push
aaa
data16
repz
jno
jmp
dec
or
int
nop
jae
js
loopne
aaa
pop
mov
push
xor
cmpsl
aas
loope
decb
dec
jae
jp
sbb
xorl
cmp
leave
in
pop
pop
dec
movsb
sub
in
pop
xor
out
cli
pop
rcl
and
mov
sti
mov
add
push
xor
jecxz
mov
mov
push
cmpsl
fisttpll
jp
rcl
push
iret
aam
mov
adc
pop
mov
jns
shlb
cmp
xchg
dec
mov
mov
mov
stc
xchg
pop
sbb
jmp
or
stc
xchg
fldcw
cmp
dec
or
pop
mov
xor
xor
push
dec
sbb
push
js
rcrl
pop
mov
lret
test
jns
dec
shrb
lcall
mov
test
xor
jo
test
and
rcrb
mov
fisubrl
dec
icebp
push
outsb
scas
xchg
inc
or
scas
pusha
leave
js
daa
andl
push
inc
mov
iret
mov
mov
fs
mov
cmc
sahf
xor
push
sbb
dec
push
cli
pop
pop
mov
adc
mov
in
int
les
jae
lea
call
adc
repz
idivb
push
lret
insb
mov
rcll
ja
pop
sub
mov
in
sbb
daa
xlat
fwait
jecxz
push
out
pop
inc
aad
lahf
hlt
adcb
cld
push
lock
and
repnz
insb
pop
sbb
mov
add
rol
or
outsb
js
jne
daa
mov
jnp
imul
mov
mov
lods
inc
enter
out
fwait
pop
mov
xchg
mov
xchg
dec
mov
jecxz
insb
sub
insb
mov
pop
push
mov
cmp
shrl
or
mulb
mov
adc
addl
bound
mov
adc
outsl
mov
mov
mov
cld
testl
push
xchg
loopne
mov
insl
push
add
sub
bound
mov
mov
and
pop
push
lret
mov
dec
pop
lds
imul
cmp
mov
cmp
push
push
xor
cmp
add
mov
push
xchg
int3
jnp
or
pop
and
cmc
and
addr16
jns
inc
jecxz
aas
dec
pop
dec
push
push
inc
and
in
addr16
dec
std
ss
pop
test
dec
lahf
cmp
xor
inc
outsl
pusha
lea
xor
mov
jo
sub
rorl
test
mov
or
adc
mov
jge
pushf
loope
mov
xchg
and
or
add
mov
dec
daa
xchg
or
ljmp
push
dec
rolb
dec
jle
jge
loope
scas
xor
mov
mov
sbb
hlt
popf
sbb
test
out
movsb
jg
push
add
dec
imul
inc
push
ret
jecxz
das
gs
add
das
mov
mov
pushl
fcoms
mov
jns
js
popa
cmp
mov
int
popa
push
stc
out
sub
xchg
and
sahf
inc
loope
mov
dec
out
aad
repz
cwtl
pop
sub
xor
sbb
call
sbb
mov
rorl
lods
jl
mov
icebp
popa
out
pusha
jg
call
shl
cmpsl
push
fldlg2
outsl
rcr
adc
in
verr
fists
in
sbb
daa
bnd
rcl
inc
and
push
sub
aam
loop
sarl
cmovae
inc
lods
and
aas
and
cmp
rclb
clc
cmp
ja
insl
push
bound
or
lods
movsl
mov
dec
loop
arpl
cli
mov
ret
aaa
adc
add
out
cmp
mov
aas
adc
or
imul
jmp
push
lret
pushfw
inc
mov
ficoms
bound
out
clc
decb
pop
sbb
sahf
ficoms
xchg
shll
pop
aaa
test
jno
insb
loopne
imul
mov
outsl
push
loope
callw
xor
int3
mov
cmpsb
data16
fdivrl
xlat
dec
mov
xor
add
mov
and
pop
or
mov
test
add
push
pusha
in
dec
sbb
in
mov
dec
aas
decl
scas
jne
call
fstl
adc
in
incl
or
pop
cli
mov
adc
cmpsb
jno
cs
test
fwait
adc
int3
dec
insl
mov
loop
outsl
xchg
outsb
in
sub
test
pop
mov
push
shrb
sub
loopne
lea
sub
pushf
pop
stos
fwait
movsb
imul
xor
fadds
cmp
dec
ficomps
fnstsw
xchg
shl
xor
jae
roll
pop
push
add
nop
jae
add
sub
jecxz,pn
lahf
mov
das
data16
sbb
xor
inc
push
cmp
fiaddl
in
mov
pop
mov
mov
adc
pop
and
repnz
inc
or
ja
jp
xchg
inc
jno
clc
inc
iret
out
mov
mov
mov
jl
lea
notb
lcall
xor
dec
in
jp
cmp
cmp
loope
popa
mov
aad
movsl
xchg
pop
mov
fsubrs
mov
mov
push
popa
inc
cmp
pop
call
mov
sti
add
fstl
gs
mov
xchg
stos
xchg
xor
ds
fldl
mov
in
mov
xor
mov
add
mov
xor
mov
ljmp
out
lock
movsl
sbb
xor
mov
dec
pop
mov
sbb
inc
test
lret
jmp
test
out
lods
out
push
mov
cmp
jne
popf
mov
pop
lret
mov
aam
in
push
pop
jbe
loop
rcl
popf
mov
ja
mov
movb
mov
dec
push
sahf
movb
sbb
icebp
aad
aas
and
sbb
rclb
pop
movb
rcl
jae
and
setns
fcom
inc
fcomps
loop
les
mov
out
jg
subb
mov
loopne
mov
dec
and
or
lods
mov
es
mov
dec
cwtl
shrl
test
add
pop
dec
inc
jp
rclb
divl
or
cmpl
in
pop
pop
xor
sarb
or
scas
sbb
in
dec
dec
push
lods
out
add
daa
pusha
push
and
mov
push
sub
and
lret
shr
jl
aad
jnp
daa
popa
outsb
in
mov
lret
ret
out
insl
dec
popf
lods
faddl
pop
movsl
jns
mov
xor
aad
push
xor
and
or
imul
in
cmp
add
or
aaa
fiadds
mov
mov
test
cmp
loopne
daa
xchg
lret
inc
loope
aas
lret
mov
push
dec
jo
sbb
mov
das
test
push
loope
outsl
pop
sub
aam
fdiv
stos
xor
and
inc
push
sub
mov
mov
es
mov
fildl
or
jnp
dec
aad
leave
es
fimuls
mov
in
mov
lahf
xor
sub
sbb
loopne
aad
nop
sbb
cwtl
pop
arpl
pop
inc
aas
push
aam
popa
sub
int3
sbb
fildll
scas
movsb
out
mov
pop
pushf
lods
lret
and
jo
mov
shll
pop
xchg
vmread
lret
scas
js
mov
adc
sbb
jns
push
test
nop
adc
inc
push
aad
or
add
or
or
pop
and
cli
push
lret
mov
mov
mov
andb
pop
cmp
arpl
dec
or
aaa
jnp
lods
ds
mov
mov
lods
ljmp
bound
sbb
pop
movsl
fadd
jno
repz
and
daa
fcoml
jle
loop,pn
and
out
cmp
xchg
cld
or
ret
scas
cmp
sub
dec
mov
imul
adcb
fsubr
sub
jp
call
jle
je
jo
push
xchg
push
adc
xchg
test
or
shl
mov
push
fadds
loope
fnclex
cmp
pop
inc
inc
add
mov
test
jae
leave
enter
lret
inc
xchg
mov
enter
stos
rcll
in
inc
or
inc
call
and
adc
cmp
cmc
pop
or
shll
lea
jae
cmp
insl
icebp
dec
mov
fstl
rclb
ror
xor
gs
jecxz
jns
inc
jns
or
and
pop
movsl
push
jb
scas
rcl
mov
pusha
jmp
addr16
mov
xchg
push
mov
cmpb
xor
das
inc
mov
push
sbb
pop
int
pop
xchg
in
ljmp
icebp
sub
cmp
mov
in
jnp
dec
inc
sarl
icebp
or
mov
test
adc
pop
ret
icebp
std
jbe
xor
sarl
rorl
lahf
or
push
or
test
insb
fldl
ljmp
xchg
push
loope
cli
or
mov
sahf
shll
xchg
cmp
cltd
popa
adc
dec
push
insl
mov
dec
imul
push
pop
pop
insb
mov
in
xchg
cmp
push
in
and
test
js
xlat
adc
gs
pop
ja
test
cltd
sbb
rcrb
xchg
std
cmpsl
dec
into
and
sti
push
pop
scas
jg
lea
inc
or
mov
jne
loope
inc
mov
les
cmp
jmp
push
lds
pop
mov
sbb
or
das
jp
dec
rcll
dec
jns
push
cmp
mov
test
mov
imul
add
shr
cmp
dec
lea
in
test
sbb
cmpsb
fdivs
lods
ficoms
fs
stos
push
add
icebp
xchg
mov
pop
les
xchg
cmp
xchg
xor
xchg
insl
lods
xchg
dec
pop
and
aad
outsb
shlb
testl
jge
es
hlt
xchg
int3
adc
sub
push
std
cmp
pop
in
xchg
ja
adc
push
cmpsb
mov
aaa
divl
sbb
pop
mov
adc
int3
mov
push
enter
or
xor
shrb
push
pop
jl
jb
sbb
ljmp
sbb
cli
and
jo
aad
out
jp
push
push
sub
test
sub
loope
push
jmp
orb
aam
push
enter
jne
insb
xor
test
xor
xchg
daa
call
ret
pop
and
jae
sbb
xor
das
mov
push
jp
cs
jbe
jg
lods
xor
sbb
lods
push
inc
aam
sub
dec
and
mov
in
xor
dec
stos
clc
sti
push
push
in
outsb
dec
or
scas
jne
inc
sbb
jmp
call
rcl
push
xchg
enter
dec
testl
cmp
jbe
scas
mov
mov
leave
daa
rcrl
jp
iret
sti
sbb
and
or
inc
inc
js
test
and
mov
push
jns
loop
cmp
nop
stc
loope
dec
push
xor
jne
pop
shlb
out
prefetchw
mov
int
push
add
cmp
cmc
rcrl
syscall
push
jo
clc
adc
jmp
jne
in
ds
leave
imul
cmp
ret
push
movsb
in
pop
insl
add
and
sahf
cwtl
cs
adc
imul
mov
or
aam
jo
pop
xchg
sbb
ret
fmul
xor
stos
test
xor
jne
mov
sbb
xorl
rcrl
addr16
xor
pop
call
mov
inc
fsubr
fisubs
movsl
arpl
cld
in
mov
cmc
mov
and
arpl
pop
mov
cli
pop
xor
pop
stos
scas
cmp
in
leave
inc
aad
stos
mov
and
and
leave
mov
pop
jle
inc
pop
jge
loopne
fscale
nop
adc
pop
adc
fsubr
mov
popa
dec
pop
xor
outsb
inc
push
outsb
stos
inc
add
mov
jns
mov
sub
or
add
sub
std
dec
xchg
cmp
out
push
das
stos
push
nop
shlb
sub
js
aad
and
loopne
pushl
pop
ret
lret
enter
inc
cmc
inc
ss
xorb
add
es
inc
test
push
and
pusha
aam
lock
sbb
adc
cmp
roll
test
pop
sub
mov
gs
add
pop
mov
push
sbb
mov
stos
sbb
dec
fcmove
xor
push
ret
jae
out
add
lahf
mov
cmp
mov
mov
jo
mov
sbb
and
inc
outsl
or
jbe
fldenv
xchg
mov
push
fisttpl
sbb
pop
gs
sbb
filds
insl
cs
push
cld
and
jns
hlt
pop
push
int3
cmpsb
adc
mov
push
ret
aaa
add
push
pop
dec
sahf
nop
gs
add
mov
jne
scas
jp
sbb
in
mov
mov
cmp
cmp
xor
pop
out
jns
in
das
outsb
or
dec
xchg
or
testb
stc
fdivp
sbb
jno
cmp
dec
pop
mov
sbb
inc
out
push
cmp
pop
or
cmc
cli
jae
inc
jae
jle
arpl
jp
pop
dec
or
popf
in
ds
insb
pop
jp
repnz
pop
cltd
insb
iret
xor
dec
enter
insl
or
fidivrl
push
push
lea
int3
shlb
fisttps
inc
lret
push
push
inc
stc
mov
and
or
fsubrp
inc
add
xchg
pminsw
into
xchg
js
gs
jmp
insb
pop
pop
dec
icebp
inc
scas
mov
outsb
inc
and
or
jg
cmpsl
faddl
das
test
fcom
jo
fildll
jb
adc
cld
mov
xor
push
repz
cmp
icebp
add
ja
or
or
jmp
jp
notl
pop
popa
inc
popa
mov
lds
test
xor
mov
sub
inc
sub
mov
test
cwtl
test
dec
adc
pushf
pop
daa
fs
inc
pop
inc
fidivrs
loope
popa
xor
dec
leave
xor
mov
int
add
cld
jno
mov
pop
jno
insb
mov
jo
movsb
xor
loope
in
mov
insb
pushf
jle
inc
stc
gs
mov
mov
jb
daa
fistpll
fucom
std
shlb
fsubl
jb
mov
out
push
mov
lea
das
std
std
repnz
sar
inc
int3
popa
add
jns
cmpsl
shr
and
inc
fiadds
mov
jp
int
pop
cmpsb
inc
outsb
push
push
pop
pusha
filds
or
or
lret
les
add
scas
add
and
mov
fsts
sahf
pop
jmp
je
dec
inc
mov
lock
jo
sarb
lock
dec
sbb
adc
xchg
mov
add
mov
cmp
cmp
pushf
bnd
and
int
push
fimull
cmp
lds
inc
jns
js
sub
out
insb
jecxz
fnstcw
repz
dec
mov
fsin
push
fcmovbe
daa
sti
adc
pop
inc
test
pop
scas
mov
popf
insb
into
fwait
xchg
repnz
add
ficoml
fucom
or
jnp
and
ja
mov
shrb
jb
lds
mov
aas
outsl
divl
xchg
and
mov
xchg
and
xor
rorb
dec
mov
push
in
add
mov
popa
pop
orl
pop
ss
and
xor
or
insl
sahf
iret
or
xor
inc
or
in
add
addr16
pop
or
enter
sbb
lods
in
sarl
and
xor
xorb
jmp
add
pusha
push
addl
cmpsb
pop
std
test
insl
sbb
jne
xor
subb
push
jg
jo
push
inc
insl
inc
das
mov
dec
or
aad
mov
sar
pop
jnp
pop
lods
psubb
inc
cs
push
push
xchg
or
jns
hlt
jge
int3
sbb
jo
ljmp
test
mov
mov
ss
inc
sarb
jb
lcall
xchg
aad
lea
adc
jbe
sbb
cmpsl
pop
pop
loop
inc
mov
pushw
outsb
cmpsb
mov
adcb
jo
pop
aad
fwait
pop
push
adc
cmp
pushf
pop
or
cmp
pop
js
repz
outsb
mov
mov
add
cmp
adc
cmp
adc
out
fistl
popa
xchg
cmpsb
jmp
and
test
sbb
jmp
dec
mov
pusha
repz
int3
push
pop
cmp
repnz
outsb
fnstcw
lds
insb
cs
or
lahf
movsb
and
leave
call
repnz
stos
pop
push
ja
dec
sub
inc
out
hlt
roll
xor
push
aam
jnp
cmp
add
add
sbb
fcomps
sub
sbb
mov
neg
xchg
jbe
ret
cmp
ds
aad
iret
inc
mov
push
arpl
add
repz
or
in
inc
jo
popf
jmp
dec
lret
dec
mov
dec
test
pop
jbe
jg
popf
pop
out
dec
insb
loopne
movsb
pop
insl
push
sbb
outsb
push
mov
rorb
adc
sub
sysret
es
xchg
push
pop
mov
and
mov
push
pop
push
mov
icebp
lods
ret
test
jns
and
fdivl
add
into
jno
aaa
xchg
js
movb
dec
shrb
dec
fnstcw
mull
pop
mov
or
jmp
jne
dec
mov
inc
clc
mov
addl
inc
cmp
aad
mov
push
mov
cs
mov
xchg
jbe
inc
pop
jne
leave
dec
jl
cmc
aad
rclb
aas
mov
dec
inc
sbb
dec
popa
out
fcmovb
ret
sbb
mov
ljmp
js
push
xchg
cli
sbb
shrb
repnz
pop
inc
lret
loopne
xchg
push
out
jns
imul
subb
icebp
std
je
cltd
and
int3
loopne
pop
pusha
aas
or
cmpsb
test
pop
loopne
lea
mov
outsl
sahf
sub
inc
outsb
xchg
imul
call
fs
lret
cmpsb
sub
das
sub
cs
lea
add
sbb
push
test
ja
js
push
pop
jne
and
insl
inc
pusha
stc
mov
sub
push
arpl
lock
pop
xor
daa
mov
cmp
jno
movsb
test
and
loope
jo
addb
add
add
xchg
enter
jnp
addr16
ja
mov
adc
mov
xorb
pop
jmp
mov
dec
enter
int3
punpckhdq
xchg
xor
stos
ds
clc
mov
mov
adcl
pop
jo
decl
int
or
jns
jbe
mov
mov
jecxz
std
rorl
and
push
mov
lods
loope
mov
shlb
cmpsl
sahf
arpl
add
stos
jbe
push
daa
aaa
nop
cmp
mov
mulb
jmp
loopne
mov
xchg
mov
xchg
out
add
and
xor
sbb
mov
jg
and
rolb
fildll
fisubs
push
mov
incl
cmp
dec
sbb
subl
mov
sbb
mov
dec
mov
xor
jg
stos
mov
push
push
sbb
dec
pusha
dec
cwtl
ret
call
mov
mov
sbb
xor
xor
loop
lods
jge
hlt
int3
les
adc
jns
out
test
push
cmp
arpl
lea
xchg
inc
mov
xlat
inc
push
scas
xchg
sub
push
mov
inc
mov
lret
outsb
rcll
fs
stos
mov
loopne
lcall
fists
sbb
xchg
mov
stos
loop
iret
lahf
test
scas
outsl
pop
mov
mov
xor
lea
sbb
push
rcl
jns
mov
mov
rcr
mov
push
pop
sub
mov
sub
add
mov
xchg
inc
mov
xor
shlb
popf
mov
adc
shr
mov
mov
adc
dec
dec
add
mov
mov
jne
fiadds
test
lahf
xchg
popa
gs
lea
xorl
cs
dec
xchg
mov
push
fcomp
mov
insl
stc
and
add
sub
jns
inc
xor
je
add
jne
scas
je
adc
push
outsl
sahf
mov
rcrl
xchg
xchg
jg
mov
jg
xchg
scas
cmp
in
dec
pop
jnp
xor
jge
jecxz
js
fildl
adc
xchg
xor
fstpt
cmp
sub
mov
outsl
js
pop
filds
pop
cmpl
arpl
fs
add
mov
push
test
xor
ja
inc
push
iret
mov
aas
push
test
sbb
push
stc
push
xchg
pop
adc
pop
inc
add
mov
js
and
xchg
mov
cltd
ffreep
fwait
xchg
cmpsb
xchg
test
cmp
repnz
movsl
dec
in
shll
pop
inc
sub
xchg
and
xlat
inc
push
jmp
les
nop
addr16
jl
out
lahf
inc
scas
push
ss
or
int
test
es
fwait
add
sub
and
lahf
lods
pop
mov
push
ss
jo
out
cld
sub
std
out
sbb
js
aam
inc
jg
pop
imul
mov
out
jae
scas
ljmp
sub
andb
xchg
lahf
into
mov
iret
push
hlt
xchg
adc
out
clc
dec
leave
pusha
int
ret
sbb
leave
addr16
mov
sub
call
sbb
push
mov
pop
dec
pop
loop
jbe
jae
mov
nop
or
js
aaa
test
pop
sub
inc
jbe
jnp
xchg
leave
cld
aaa
push
mov
jmp
fwait
cs
out
or
inc
loop
push
out
push
sarb
inc
imul
jmp
inc
js
sbb
xor
jo
aas
sbb
mov
cmc
dec
dec
aaa
js
into
daa
ljmp
mov
sbb
jmp
push
cmp
test
mov
imul
jne
and
je
loopne
pop
in
insb
pop
mov
mov
xor
jae
cmpsb
add
scas
pop
jg
out
push
push
and
inc
inc
xchg
movsl
inc
add
rcll
pusha
popa
arpl
sub
xor
xlat
cmp
dec
jne
insb
lods
sahf
pop
sarl
insb
push
xor
ljmp
sbb
xor
or
pop
jmp
fildl
shll
xchg
int3
fisubrs
cmpsb
stos
jl
xchg
inc
imul
add
sahf
mov
xchg
int
imul
sub
push
xor
decb
adc
mov
cld
xor
insl
iret
test
xchg
mov
pop
dec
lea
clc
push
xchg
mov
or
ljmp
jb
aaa
out
popf
jecxz
jle
lcall
push
orl
clc
stos
pop
fucom
inc
aaa
jns
insl
insl
dec
sbb
aad
xlat
insb
mov
sub
call
es
lret
stos
aam
xchg
pop
xor
nop
inc
fcoml
jnp
or
jl
sbb
flds
adc
jae
mov
aad
loop
loope
xchg
xor
mov
shlb
xor
aam
sbb
movsb
and
cmpsb
outsl
and
loopne
mov
dec
xor
ret
lds
sahf
mov
ret
scas
cmp
jmp
js
js
and
mov
arpl
inc
xor
fnstenv
mov
xor
dec
out
pop
mov
adc
hlt
cmc
xchg
mov
call
lcall
pop
sbb
loope
pop
dec
pop
shlb
xchg
sbb
aas
pop
jnp
jno
xchg
ficoms
and
xchg
adc
cmp
in
test
push
outsl
jo
das
xor
jg
aaa
fdivrl
sub
roll
or
ja
xor
ljmp
psraw
pop
ljmp
mov
xlat
sbb
jmp
daa
test
and
push
mov
les
test
aam
inc
sbb
jl
lret
pop
adc
jno
roll
jg
daa
pop
xlat
dec
mov
sbb
pusha
cmp
mov
or
add
arpl
or
pop
mov
and
movsl
nop
loopne
fucomp
jo
roll
mov
enter
ljmp
out
loopne
lods
pushf
pop
jg
aas
in
mov
dec
cltd
ret
inc
fwait
jo
cltd
repnz
shlb
call
arpl
jno
das
and
xchg
sub
add
adc
das
cmovg
fdivrl
sahf
aam
xchg
loope
push
leave
mov
das
out
dec
sbbl
and
icebp
call
or
mov
lahf
fdivl
loope
movsb
pusha
sub
inc
cli
push
push
dec
inc
ret
gs
push
imul
out
je
arpl
in
out
dec
push
inc
ja
mov
or
jnp
dec
add
jecxz
add
dec
rcrl
mov
outsl
or
call
mov
out
xchg
rcl
cmp
jb
or
lcall
jmp
scas
jge
jb
sbb
sbb
adcl
cmp
adcb
cmc
adc
js
and
jbe
enter
sarb
pop
movsb
and
and
scas
jecxz
pop
decb
sub
sub
inc
and
inc
sbb
sub
sub
and
into
jno
loope
mov
ds
add
ss
inc
jecxz
jb
push
mov
pop
xor
cmpsb
and
sub
negb
mov
push
pop
fxch
stos
dec
and
loop
adc
adc
xchg
es
xor
xchg
add
aam
jne
dec
pop
cs
daa
xchg
xor
jl
mov
insl
or
daa
mov
fiadds
pop
enter
inc
and
daa
daa
iret
xchg
test
orb
xlat
cmpl
int3
jnp
loopne
sub
pop
ja
cmp
push
add
sub
idivb
data16
jle
cmp
jge
in
push
mov
adc
lock
fwait
or
daa
or
inc
test
lock
xchg
repz
test
cmp
push
push
fs
and
dec
adc
mov
test
xchg
test
push
movsl
lods
mov
inc
push
push
cmp
adc
repnz
sbb
cmp
cwtl
aad
pop
add
or
mov
xor
mov
adc
pop
scas
pop
cs
adc
or
mov
call
lock
dec
jge
and
cmp
jno
or
push
lahf
sahf
arpl
movsb
jmp
cltd
pop
dec
scas
ud2
ss
sub
mov
loope
stos
scas
ret
mov
inc
and
bound
push
jne
and
mov
test
push
sub
int
lds
addr16
aas
lds
mov
jne
movsb
and
in
mov
or
out
into
adc
popa
lcall
push
test
inc
push
sub
inc
or
iret
jg
out
inc
lahf
mov
outsb
mov
gs
push
stos
push
jmp
xchg
sub
ljmp
subb
mov
aam
xchg
adc
movsb
jl
xchg
jg
xchg
mov
sbb
mov
pop
cwtl
mov
cmp
lods
sbb
sub
mov
ljmp
mov
cmpsb
fistpl
loop
inc
movsb
mov
push
leave
adc
push
jns
insb
insb
adc
shr
mov
loope
adc
sbb
jns
outsb
sub
jne
sbbl
insl
jge
fidivrs
into
lahf
lods
daa
filds
xchg
and
nop
leave
movsb
add
daa
aas
cli
mov
sub
fwait
lret
fnsave
call
jbe
sbb
xchg
insl
and
in
jmp
leave
loope
lods
sub
out
jmp
imul
mov
jb
lahf
in
mov
lea
arpl
xchg
lea
inc
sub
rcrb
or
mov
ret
jns
cli
xor
movsb
movsb
bound
shll
int
adc
push
inc
dec
sbb
mov
icebp
jo
mov
xorps
in
sbb
movsl
imul
enter
add
addr16
xchg
addr16
xchg
pop
push
aam
movsl
pop
inc
adcb
xor
in
inc
xchg
lcall
ss
lahf
mov
add
jle
stc
adc
sub
jge
inc
daa
repz
stc
jl
xchg
popa
cmpl
ss
adc
jecxz
outsl
cmp
nop
loope
pop
lods
add
test
sarl
inc
shrl
popa
mov
in
or
cmpsb
cld
cwtl
mov
iret
sub
inc
xor
pop
mov
ret
or
cmp
pop
ficoml
imul
les
das
add
push
js
arpl
insb
outsb
inc
cmp
and
lock
inc
jbe
arpl
cmp
adc
mov
mov
daa
cwtl
andb
xchg
imul
cwtl
sub
mov
sub
les
das
test
nop
pop
es
std
cltd
popa
mov
cmp
mov
outsl
testb
push
push
xchg
loope
xlat
mov
pop
jno
mov
lret
and
add
out
pop
mov
jae
push
mov
mov
sbbl
mov
or
cltd
sti
mov
push
sub
icebp
insb
outsb
sub
xor
mov
shr
cmp
dec
icebp
mov
pop
dec
add
jle
mov
jmp
jae
xor
jge
data16
call
andb
rorl
add
mov
inc
repnz
inc
xchg
mov
xchg
outsb
inc
sub
cmp
movsl
cmp
cmc
roll
out
cs
inc
popf
aaa
adc
loop
out
xor
aam
subl
gs
xor
xchg
shll
dec
aad
jae
mov
sub
fstl
pop
cmpl
movsb
or
fsubrl
pop
and
adc
dec
scas
xchg
pop
mov
hlt
shlb
push
inc
jmp
xchg
fwait
sbb
cli
pop
fistpll
adc
push
lea
fs
icebp
adc
decb
xchg
adc
push
subb
sub
stos
repz
mov
and
mov
push
jp
sbb
incb
xchg
aad
subl
inc
mov
test
sbb
add
movsl
mov
push
push
stc
inc
mov
bound
xor
lods
sbb
lcall
xor
sub
ret
adcb
jbe
push
aad
push
push
xlat
pop
jns
mov
adc
mov
mov
cmp
int3
negl
cmp
fsubrs
shll
mov
xor
inc
fldcw
jmp
dec
mov
mov
fistps
popa
cmp
xor
out
cltd
out
xor
jb
sub
xchg
push
adc
push
cmp
ljmp
test
or
aam
jno
into
mov
popl
leave
mov
testl
es
jl
mov
cwtl
sahf
popl
mov
inc
test
pop
dec
mov
dec
cmp
cmp
jo
and
clc
jle
ret
sub
mov
inc
sti
jp
mov
jbe
cli
or
and
flds
call
das
imul
mov
imul
sbb
dec
jecxz
and
aad
push
jp
dec
push
push
and
jle
pop
out
int
call
dec
xor
pop
mov
in
xor
fstcw
dec
and
adc
scas
lock
mov
sbb
jp
add
pop
test
and
fnsave
cltd
das
rolb
pop
ds
mov
sarb
push
imul
pop
call
push
mov
inc
jp
inc
and
xchg
cmp
xchg
insl
xchg
adc
adc
xchg
dec
fidivrs
aaa
rorb
cmp
mov
movsl
in
lret
push
out
outsl
xchg
fisubl
roll
mov
fcompl
sbb
xlat
push
in
shrl
fprem
dec
adc
lods
mov
popf
subl
cmpsb
adc
into
mov
enter
and
push
cmp
push
sub
pop
movb
cmp
jb
call
enter
pop
lea
and
nop
fcmovbe
jmp
dec
popa
sti
les
rcll
xor
in
daa
pop
fnstsw
and
push
arpl
push
loop
rorl
lahf
les
add
dec
xor
jg
or
mov
mov
mov
js
cmp
popf
mov
das
and
pop
in
mov
add
sbb
push
mov
in
ja
hlt
pusha
das
outsl
sub
or
inc
adc
rorb
add
mov
xor
mov
ss
mov
daa
inc
push
lcall
jbe
mov
sub
in
sbb
mov
dec
imul
mov
push
outsb
decl
inc
push
cmp
cltd
js
jp
inc
fnstenv
outsl
shl
pushf
decb
lcall
xchg
pop
out
mov
clc
adc
jg
dec
fisttps
cmpsb
out
daa
add
pop
lods
pop
inc
fiaddl
sbb
adc
cmp
repnz
cmp
lods
jne
cmpsl
push
loope
lds
notl
mov
mov
aas
mov
jbe
or
mov
inc
repnz
test
adc
cmp
js
dec
push
dec
mov
sbb
and
mov
or
jl
ja
mov
push
pushf
push
aad
sub
ror
xchg
orl
xchg
pop
test
cmp
xchg
pop
adc
mov
adc
daa
mov
sub
cmp
jecxz
outsb
out
mov
pop
xor
add
ds
and
popf
or
and
lea
loope
jno
rcrb
mov
cmpsl
call
jb
dec
lea
loope
push
pop
and
cmp
andl
shll
sub
jns
mov
or
xchg
sbb
je
cmpsb
mov
aam
dec
mov
outsb
mov
xchg
call
xor
fstpt
jg
pusha
int3
inc
push
out
out
push
pop
out
gs
xchg
cmp
inc
jbe
outsl
aas
push
or
sub
out
xor
aad
mov
add
dec
loop
mov
test
pop
or
inc
wrmsr
xchg
sub
lods
and
popa
or
push
add
or
repnz
and
and
adc
sbb
add
out
mov
xchg
dec
loope
mov
in
cld
and
js
dec
mov
mov
outsl
movsb
cltd
mov
outsl
in
mov
divb
sub
in
jmp
xchg
imul
in
or
loope
and
imul
cmp
sub
inc
outsb
xor
cli
mov
lcall
in
push
mov
hlt
loopne
loopew
and
orb
out
fdivrl
lcall
sub
mov
popa
hlt
inc
loopne
into
es
rcr
ljmp
int3
das
mov
test
ljmp
jp
push
sbbl
mov
lock
and
loop
lock
lock
aas
aaa
or
icebp
adc
cld
and
mov
aas
lea
iret
and
lcall
into
das
xchg
mov
movsl
insb
das
xchg
adc
push
daa
into
movsl
loope
aam
xlat
cmpsl
push
mov
pushl
cltd
mov
inc
loop
inc
dec
outsl
or
insb
loope
pushf
sub
ret
push
popl
mov
roll
cltd
movq
and
jg
and
arpl
addr16
inc
iret
sbb
inc
ja
push
shl
pop
nop
push
lret
pop
mov
inc
ss
in
sbb
push
jo
mov
mov
cmpsl
or
mov
lcall
mov
mov
out
xchg
cmp
scas
fistl
dec
mov
imul
pop
in
push
mov
mul
sarb
in
or
roll
es
jbe
fs
xchg
push
sahf
push
sbb
jecxz
cli
sbb
mov
lods
push
cmp
mov
hlt
mov
mov
jb
bound
lahf
int3
aam
roll
adc
mov
inc
fnstenv
aam
pop
push
ljmp
adc
push
sub
andl
jbe
sbb
sbb
mov
int3
jmp
jge
push
insl
sarl
fs
cmp
fistpll
sub
cmp
cs
and
jb
add
mov
rolb
adc
mov
jecxz
cmp
aaa
and
cmp
and
out
lret
icebp
movsb
and
clc
pop
sbb
outsb
lahf
mov
mov
push
and
ss
fcompl
sbb
js
sbb
das
push
aaa
and
cmp
dec
push
int3
popf
neg
and
sahf
notb
pop
popa
pushf
sbb
aam
int3
cmp
lods
add
testl
cmc
mov
shrb
mov
ss
push
jmp
cli
jnp
and
scas
fldt
cmpsb
adc
fwait
sarl
js
inc
sub
pop
push
and
adc
call
jl
jmp
aaa
addr16
lret
xlat
mov
jmp
sub
xchg
mov
cltd
sub
lods
sbb
inc
mov
fcomp
cwtl
xchg
push
loopne
hlt
xchg
xlat
lret
mov
sahf
mov
ds
jle
into
lods
arpl
movsb
mov
push
fnstenv
lret
enter
mov
push
ja
fdivrl
scas
fwait
loope
fs
add
out
sub
cmpsl
call
aad
aam
pop
jb
mov
dec
in
scas
or
dec
pop
testb
or
jbe
mov
test
arpl
or
push
jle
shll
sbbl
jecxz
xorl
jmp
fs
lcall
xchg
mov
int3
mov
test
ljmp
ret
jne
mov
mov
enter
inc
fstpl
pop
sub
mov
sub
movsl
loopne
stos
bound
jb
jne
mov
inc
and
in
cmpsb
cmp
dec
mov
movsl
fistpl
fcoms
jbe
sub
adc
les
cmovns
mov
mov
lea
xor
andb
lods
sub
inc
mov
adc
aam
fldl
dec
mov
clc
mov
movsb
pop
lods
sub
cmc
cmp
test
stc
add
jle
fbld
mov
push
pop
inc
xchg
out
cmp
into
sbb
mov
rolb
add
lahf
jae
add
imul
orb
pushf
jl
stos
cld
sahf
cmp
dec
mov
sbb
or
and
push
dec
inc
and
ret
iret
fldl
jg
adcb
mov
sbb
cmp
mov
mov
jl
sahf
loope
push
lock
fbstp
jno
leave
dec
push
add
cmp
int3
aad
push
cmpsl
xlat
sbb
sub
in
sub
mov
cmpsl
push
arpl
push
leave
push
sub
jno
inc
dec
cmc
and
xchg
sahf
cltd
jg
inc
xchg
sub
pop
notl
loopne
aam
mov
outsl
cmp
sbb
sahf
addr16
popf
lret
popa
xor
sub
insl
out
ljmp
xchg
out
mov
popf
lock
insb
int3
xchg
mov
xchg
call
mov
jecxz
xchg
loopne
pushf
pusha
je
mov
dec
in
push
push
jns
rep
or
cmp
test
mov
mov
out
jbe
or
add
insb
popl
and
ds
aas
dec
std
dec
dec
sahf
lock
push
sub
testb
lea
addb
lods
divl
pusha
fcmovb
mov
pop
inc
or
enter
leave
and
xor
inc
jb
jge
imull
pusha
push
rorb
movsl
pop
fisubs
loope
xchg
mov
add
fnstcw
enter
mov
subl
les
pusha
cmp
stc
call
cmp
in
scas
xor
xchg
cmp
mov
inc
sub
clc
xor
lea
pop
add
add
jle
test
bound
xchg
or
fadd
sbb
in
push
in
xchg
imul
inc
insb
jge
outsl
pop
cmp
cmp
fwait
int
rol
push
ds
jmp
xor
sti
aad
ljmp
sbb
xor
sbb
xor
pushf
fbld
push
outsl
sbb
lods
cld
shll
inc
xchg
sti
loope,pt
cli
inc
mov
aad
cmp
pop
cmpl
mov
mov
xor
mov
cs
out
call
mov
mov
xor
clc
sub
jae
loopne
repz
cs
es
inc
dec
cmpsl
mov
inc
rclb
sub
dec
in
ret
aam
and
fiaddl
lea
sub
jmp
inc
dec
adcl
cmpsl
jl
test
pop
in
cmp
lahf
popf
cmp
mov
xchg
movsl
ret
mov
in
movl
sub
sub
outsb
mov
mov
jb
mov
dec
pop
xchg
xchg
xor
inc
loope
lods
cmpsb
sahf
imul
test
push
xchg
cmc
mov
addr16
fldl
nop
addb
xorb
fadds
sbb
mov
int3
jb
push
add
jb
mov
popf
dec
std
leave
lret
stc
lahf
pop
out
push
stos
cmp
iret
sahf
ljmp
call
fisubl
and
xchg
sub
mov
dec
dec
push
int
daa
mov
inc
arpl
mov
js
sbb
dec
call
shrb
adc
je
inc
sbb
push
scas
jge
test
sbb
mov
push
fldcw
imul
mov
adc
call
popf
addl
pushf
xor
aaa
mov
mov
xchg
cmp
and
pop
sbbl
je
sbb
subl
mov
icebp
scas
shlb
pop
mov
mov
js
popa
xchg
sar
insb
mov
xchg
inc
fnsave
sbb
std
fldt
ljmp
add
sub
cld
add
xchg
jle
push
pop
ja
cmpsl
jne
xchg
in
pop
jnp
in
sbb
push
and
insb
xor
and
cwtl
popa
jmp
push
sub
imul
sbbb
sub
int
sub
sbbl
adc
loopew
outsl
mov
push
mov
loopne
cmpsb
add
or
in
and
arpl
inc
sbb
mov
push
out
insb
inc
loope
cmp
arpl
xchg
frstor
insl
mov
cs
xor
std
mov
aad
jle
adc
cmp
and
dec
pushf
dec
adc
cltd
jns
out
push
push
scas
call
pop
cmp
test
xor
mov
in
dec
cmp
inc
xlat
xchg
mov
pop
test
sbb
aas
les
push
scas
xlat
mov
cmp
scas
xchg
xlat
stos
and
adc
fs
ret
or
ja
jl
repz
nop
sub
lret
xor
jmp
lahf
push
push
mov
mov
jecxz
and
fnstcw
dec
mov
inc
lods
adcb
cmpsb
adcb
popf
loope
lods
push
daa
inc
xchg
into
pop
add
int
add
mov
es
xchg
les
and
mov
inc
adc
push
jge
sub
push
mov
jnp
jb
dec
mov
roll
pop
jb
cli
jo
fwait
or
adc
addb
leave
push
clc
jp
and
dec
xchg
mov
push
jmp
retw
daa
std
pop
add
jmp
mov
mov
je
pop
mov
push
out
out
xchg
mov
loopne
xor
pop
cltd
nop
jb
push
mov
add
jnp
out
sub
enter
inc
in
test
test
decl
cmpsb
push
sub
scas
nop
xor
pushf
lods
nop
sahf
aas
jo
mov
mov
int
cmc
pop
imul
insb
jmp
std
mov
add
into
add
push
jecxz
outsl
fimull
outsl
icebp
mov
rclb
lods
dec
jp
pop
or
ja
mov
and
push
push
std
les
ljmp
dec
jo
fisttpl
add
iret
int3
scas
sbb
push
xorl
lahf
std
pop
adc
test
mov
jmp
out
inc
addr16
xor
xchg
leave
inc
rorl
push
jg
or
push
push
inc
cmp
test
add
push
arpl
mov
xchg
enter
not
inc
and
xor
addl
divl
xchg
or
imul
sub
mov
getsec
push
pop
push
jecxz,pn
mov
push
pop
mov
mov
dec
adc
xchg
adc
inc
clc
popf
pushf
lcall
das
in
dec
inc
cli
out
out
cwtl
xorl
jno
cwtl
repnz
icebp
pusha
outsb
adc
mov
shll
add
sti
pop
stc
bound
test
ficoms
pop
stos
adc
and
pop
mov
in
mov
mov
mov
rolb
fists
and
scas
imull
adc
pop
mov
dec
lret
out
loop
cmp
gs
adc
inc
push
lds
push
insl
xor
push
test
scas
mov
add
sbb
and
loopne
mov
jg
sbb
add
andb
pop
cmp
test
jl
mov
push
cwtl
add
xor
cmp
iret
addr16
aad
xor
out
daa
cltd
das
sbb
mov
arpl
sub
mov
stc
push
stos
cmp
pop
outsl
in
add
inc
mov
pop
es
into
fmull
mov
idivl
outsl
inc
cli
int3
bound
push
sbb
adc
inc
out
addr16
lds
or
xor
mov
add
in
in
shlb
adc
mov
inc
and
cmp
xchg
and
jbe
cmpsb
mov
xor
xorl
mov
scas
scas
mov
aad
lods
out
loopne
sub
or
or
xor
aas
jle
mov
lahf
add
cmp
clc
push
jae
pushl
and
fsubrl
sar
sarb
jg
dec
jecxz
popa
sub
sbb
test
das
pop
inc
jmp
vpmovsxbw
sahf
cs
mov
inc
adc
push
lret
pop
sbb
mov
ljmp
sbbb
scas
dec
adc
insb
or
ljmp
mov
leave
aad
test
aad
bound
jbe
adc
ja
subl
xchg
push
sbb
test
outsl
push
push
das
clc
cld
movsb
or
and
mov
out
popa
or
enter
cmp
loope
xchg
or
aas
mov
jmp
jno
lahf
adc
out
pop
adc
aaa
mov
cmp
sbb
sub
insb
cmp
daa
lret
mov
movsb
mov
addl
xor
or
jo
pop
out
cmp
xchg
xchg
cwtl
sbb
insl
jno
mov
xchg
or
insl
and
jp
rcr
mov
xor
push
jle
sbb
sub
int3
inc
jne
inc
fisttpll
mov
fldt
jmp
cmp
mov
mov
aad
iret
xchg
add
out
das
xchg
cmp
dec
xchg
push
sub
shlb
mov
jmp
repz
mov
sbb
xchg
pusha
lods
test
push
sub
inc
cli
in
push
mov
add
mov
sbb
mov
std
mov
out
movb
insb
and
sub
fnstsw
jmp
decl
aaa
xchg
cwtl
pop
loop
sub
into
inc
lea
xchg
xchg
or
lea
xchg
arpl
push
loope
mov
or
insl
popa
rcrb
sub
push
lds
arpl
stc
das
mov
popf
test
jl
mov
mov
cmc
outsb
inc
pop
inc
insl
leave
mov
cmp
and
mov
and
inc
out
pop
xchg
out
pop
fidivl
loop
call
jg
lret
cmovnp
push
push
pop
mov
sti
repz
sarb
and
lds
xchg
jp
adc
add
xor
ss
xchg
bound
loop
jg
dec
mov
pop
outsl
adc
mov
push
and
stc
push
movsb
adc
and
out
enter
sbbb
lds
je
jecxz
xorb
sbb
scas
jns
sbb
and
jg
popl
sbb
jg
dec
loopne
pop
push
and
sub
scas
das
call
xor
ljmp
xchg
aas
push
test
push
mov
pushf
add
stos
sub
jg
add
xchg
int3
mov
push
dec
sub
push
jmp
outsl
xor
sbb
push
test
jmp
sub
jg
jne
push
imul
push
mov
xchg
stos
jge
popa
fsubrs
push
pop
jl
pop
outsb
aam
rorl
mov
mov
std
mov
and
push
mov
dec
add
aaa
lea
sahf
pop
jle
mov
push
dec
mov
or
mov
mov
push
or
and
pop
test
xchg
nop
xor
out
scas
add
jle
fsubr
and
sub
addr16
and
inc
mov
mov
sub
adc
ret
ret
insb
daa
push
lods
push
loopne
enter
pusha
fstpl
fwait
xchg
shrl
in
jno
bswap
mov
fwait
fwait
inc
mov
scas
jnp
xchg
lods
stc
cltd
pop
std
add
aam
sbb
mov
leave
cltd
iret
out
xchg
sbb
and
scas
cmpsb
cld
popf
add
int3
out
int3
sub
ja
test
imul
or
in
jmp
push
sbb
in
adc
mov
sub
lods
int3
scas
mov
jno
and
inc
pop
cmpsb
mov
test
cmp
xchg
sbb
and
sti
and
mov
xchg
icebp
lret
sbb
in
test
les
cmp
jbe
shrl
cmpl
cmp
or
jb
mov
and
les
mov
cmc
sub
dec
jo
sub
jne
push
movsl
or
sahf
pusha
xchg
test
jae
aaa
adc
push
and
scas
shlb
dec
repnz
stos
scas
push
insb
into
pushf
outsb
in
mov
push
daa
mov
imul
pop
int
sarb
out
push
or
and
les
jne
loop
ret
sahf
cmp
pusha
xchg
in
xor
mov
pop
adc
xor
in
push
or
imul
ficomps
popf
outsb
mov
xchg
sbbb
sub
lods
lods
sub
fisttps
and
and
xor
fwait
jno
roll
jb
ret
repz
out
test
icebp
icebp
jno
cs
jg
add
sar
sub
mov
int3
js
jbe
pusha
in
dec
mov
mov
jge
mov
loope
sbb
mov
push
ds
popf
aam
subl
roll
push
push
jno
mov
jmp
pop
xor
xor
rol
faddl
jg
fidivrl
mov
cmc
mov
sahf
fcompl
dec
inc
sbb
loopne
mov
stos
movsl
mov
cli
push
xorb
sub
roll
xor
adcl
sbb
mov
incb
out
incl
fildll
jp
loope
loopne
loopne
push
and
xor
jmp
mov
repz
fwait
in
or
and
out
outsl
sub
cmp
imul
jne
fwait
mov
and
ret
out
adc
adcl
imul
mov
movsl
xchg
lea
sarl
mov
bound
adc
and
fisttpl
lods
lea
clc
das
roll
pop
cmp
or
je
out
xor
jns
mov
add
cltd
jecxz
xor
out
fucom
pop
jmp
pop
rcrb
and
idivb
fcomps
fildl
sti
stc
pusha
in
sub
movsl
pusha
mov
push
cmp
mov
popa
jp
fisubrl
mov
aas
inc
stc
add
ss
xchg
mov
and
int3
add
clc
mov
inc
and
popf
andl
xor
sbb
mov
add
dec
aad
sbb
call
mov
int
or
rol
adc
jl
test
pop
loope
test
movsl
enter
and
jecxz
scas
adc
icebp
inc
push
inc
out
sub
in
mov
mov
and
dec
in
rcll
addr16
cld
inc
and
sub
in
and
inc
popa
outsb
insb
stc
inc
xor
and
imul
push
outsb
add
sub
test
mov
test
xorl
add
adc
dec
sahf
sub
pop
inc
in
ds
insb
push
arpl
daa
pop
add
or
int3
inc
dec
and
dec
and
int3
xor
pusha
mov
dec
daa
pusha
mov
daa
es
or
dec
push
or
xchg
pop
mov
xchg
pusha
out
pop
jno
dec
lahf
mov
pop
in
jae
mov
fistpll
andl
lea
push
out
jbe
cmp
lods
push
and
adc
loope
pop
lods
pop
les
test
jle
cmp
jmp
push
dec
add
test
mov
push
add
adc
pop
sahf
sub
pop
inc
in
ds
insb
xor
pop
add
rcrl
bswap
inc
mov
dec
push
int3
cmp
imul
insb
adc
mov
daa
insl
sub
or
cmp
or
xchg
adc
pop
mov
lods
and
in
pop
in
daa
lea
fbld
lea
mov
lea
arpl
jbe
cmp
lods
push
and
adc
loope
pop
lods
pop
les
test
jle
cmp
jmp
insl
fs
in
shlb
sub
mov
sbb
in
andb
add
sbb
outsl
or
jg
addb
pop
or
lods
ret
iret
jbe
dec
mov
aas
fidivl
dec
jmp
jbe
dec
leave
jns
xor
dec
xor
jmp
adc
sbb
xor
mov
into
andl
pop
cmp
outsl
add
inc
mov
icebp
push
push
push
pusha
dec
in
xor
jl
gs
or
pop
movsl
push
push
imul
xor
fnstsw
das
cltd
sahf
aad
aad
mov
loopne
mov
push
push
mov
stos
inc
fistpl
pop
mov
outsb
test
or
outsl
stos
lds
nop
cwtl
push
inc
push
mov
lods
es
cmpsl
add
sbb
bound
sbb
imul
popa
pop
xchg
imul
mov
fucomp
pop
movsl
std
jge
into
aaa
and
js
daa
pop
test
pop
inc
push
mov
xlat
dec
js
incb
pushf
in
std
outsb
jg
movsl
loop
pop
mov
popf
sahf
imul
pop
popa
jae
adc
cs
sahf
cmpsb
mov
fstpl
mov
add
push
sub
jbe
outsb
xor
jns
lds
add
sbb
pop
in
fwait
outsl
outsb
insl
jbe
daa
icebp
test
das
cmovo
popa
pop
sbb
mov
pop
xchg
mov
rcll
or
popa
jbe
push
jbe
mov
add
cmp
push
insb
jl
jmp
outsb
lds
mov
xor
jle
arpl
ffree
add
fs
push
cltd
fwait
mov
out
test
xchg
and
push
cltd
das
outsl
dec
inc
jge
adcl
pop
dec
push
je
iret
pop
xchg
push
lds
sub
das
ss
cmpsl
pop
inc
dec
roll
mov
push
leave
inc
mov
inc
inc
leave
push
std
inc
pusha
sbb
jne
push
clts
sub
sub
inc
jno
arpl
or
push
enter
mov
cmp
push
aas
xchg
ja
testl
pop
daa
inc
adc
pushf
add
mov
pop
and
ja
repnz
push
jecxz
pop
shlb
mov
sbbb
cmp
adc
inc
push
pop
jmp
lea
daa
cmp
jl
sub
popa
shll
jno
mov
gs
push
cs
jg
xor
mov
dec
mov
in
testb
int3
sarw
cs
xchg
pop
pop
jb
popf
xor
or
jecxz
pop
loopne
and
les
sarb
clc
push
out
inc
insb
movsl
inc
push
fmul
outsb
das
aas
std
imul
popa
or
add
and
adc
sbb
aam
cmp
sarl
xchg
sahf
mov
jecxz
adc
in
jno
outsl
pop
xor
hlt
xchg
sbb
inc
sbb
dec
in
je
imul
stos
push
xchg
lods
mov
dec
sti
loop
out
stos
mov
andb
jl
dec
push
ds
inc
adc
cmp
xchg
lcall
jge
adc
aas
outsl
mov
pop
subl
stos
adc
insl
add
mov
test
out
outsl
lret
mov
out
daa
pop
xor
out
jb
pop
nop
cmp
or
cwtl
into
cmp
mov
jmp
push
pop
xchg
jge
outsl
rcr
xchg
rorl
ss
jb
pop
pop
sub
or
xor
inc
push
mov
inc
push
jb
and
dec
xchg
aas
sub
adc
and
ja
leave
sti
subl
lds
imul
sbb
lods
xor
clc
ror
je
mov
mov
jo
decl
std
sbb
inc
adc
dec
lods
pushf
dec
jb
stos
lcall
and
pop
cmpsl
sub
es
inc
inc
mov
xor
pop
xchg
dec
add
loopne
sub
iret
push
or
mov
and
mov
outsl
inc
push
pop
fs
jns
addr16
repz
xchg
out
cs
pusha
lahf
cmp
pop
out
adc
xchg
sar
movsb
and
jae
pusha
sub
repz
sub
xorl
cmp
push
iret
xor
xchg
test
jne
adc
mov
in
cmp
pop
out
out
lret
sbb
scas
mov
add
sub
jns
les
cmpsl
pop
fs
shr
and
int
clc
push
mov
pusha
mov
mov
pop
push
aad
test
lods
mov
jbe
test
out
sub
leave
mov
loopne
xor
sub
iret
out
add
inc
adc
dec
shlb
dec
push
shr
and
les
cmp
mov
mov
fistl
jno
test
cmp
and
test
addl
xchg
dec
sbb
jae
mov
push
lea
aaa
cmp
cltd
imul
push
xchg
fisubl
loop
out
loope
loopne
scas
and
pushf
adc
lods
add
and
jmp
xchg
mov
ja
mov
lods
push
popa
bnd
mov
sub
pop
clc
jne
pop
cli
jb
mov
push
mov
jb
ds
sarb
imul
or
loopne
mov
mov
mov
adcl
dec
test
sub
pop
lret
das
inc
push
ret
push
adc
inc
sahf
pop
outsl
int
hlt
xorl
rorl
dec
sub
dec
add
insl
xor
xor
insl
and
inc
or
cs
or
dec
das
ret
clc
arpl
push
out
sbb
xor
pop
dec
push
push
rcrl
inc
pop
jo
push
addr16
push
stos
out
jge
sbb
inc
inc
cmp
push
ljmp
aam
cld
push
xchg
jbe
pop
jno
lds
aaa
jge
daa
inc
xchg
xchg
data16
xchg
sarb
dec
loop
and
inc
fs
inc
fs
or
sbb
cmp
je
or
aad
mov
jae
dec
inc
adc
mov
dec
aad
test
into
jns
adc
clc
sbb
ficoml
push
pop
xor
xchg
in
repz
adc
stos
cld
push
iret
and
or
push
cmp
add
mov
sub
dec
test
lods
fiaddl
jo
jmp
xor
cmpsl
mov
sbb
jo
jmp
or
xchg
and
subb
aad
jae
pop
sbb
mov
xchg
mov
das
push
stos
sub
das
dec
mov
inc
push
mov
aaa
pop
notl
je
loopne
pop
mov
outsl
inc
sub
push
stos
out
clc
xor
jns
insb
cli
xorl
movl
mov
ret
lea
inc
lahf
xor
movsb
sub
mov
add
pop
xchg
inc
and
jae
mov
adc
rcrb
xchg
sub
lock
mov
pop
pusha
imul
lret
loope
ljmp
cmpsl
push
mov
cmp
test
rclb
pop
mov
inc
mov
mov
mov
rcll
cli
test
sub
cmp
dec
sub
xchg
aam
push
xor
cli
add
test
fstpl
mov
xchg
mov
jae
jne
push
adc
adc
add
pop
fnstenv
sahf
dec
mov
inc
out
stos
pop
mov
clc
cmp
jmp
xor
or
and
pop
xor
addr16
adc
test
stos
mov
xor
and
adc
cli
push
aam
jb
sub
mov
add
orb
fldenv
into
stos
sbb
adc
mov
addr16
stos
mov
fildl
xchg
cmp
rorb
push
popa
jmp
xor
pop
inc
pop
insl
pop
mov
and
jb
adc
movsb
idivb
adc
push
sub
push
pop
mov
inc
in
adc
daa
cmp
xchg
cmp
push
fcmovb
or
mov
loop
inc
stos
mov
inc
lcall
dec
insl
repnz
sbb
xlat
in
in
adc
xchg
scas
es
inc
addr16
and
jbe
jg
jbe
jne
mov
adc
filds
xchg
jo
cs
xor
add
push
or
std
push
jns
insb
insl
mov
aam
xchg
cmp
inc
pop
jne
jge
leave
scas
jno
inc
cld
and
outsl
or
xor
mov
lahf
add
in
mov
loopne
pop
jae
and
push
push
inc
lahf
js
mov
cli
add
or
mov
fs
cwtl
xchg
xchg
test
ja,pt
dec
outsb
jne
loopne
jmp
arpl
out
xor
mov
inc
popa
jp
inc
mov
mov
fsts
cmpsl
loop
mov
test
and
in
mov
in
pop
rolb
or
cli
sub
imul
mov
dec
dec
movsb
loop
gs
jnp
xchg
out
out
cld
aad
stc
cmp
adc
dec
sub
loope
adc
and
stos
shll
imulb
xor
test
push
cmp
add
nop
jno
xor
adc
sbb
mov
movb
loopne
mov
sub
mov
pop
and
cmp
std
sub
movsl
into
sahf
jmp
js
scas
mov
iret
xlat
inc
pop
fcoms
jecxz
add
jo
sbb
jge
aas
out
js
stos
or
push
sbbl
add
sub
sahf
or
pop
mov
push
fidivrl
xlat
mov
clc
mov
mov
jmp
cmp
xorl
dec
cld
push
adc
movsl
jno
mov
push
cld
test
adcb
inc
lds
lds
call
daa
adc
jo
shl
dec
sub
jl
loopne
mov
or
fstpt
addr16
fwait
or
addr16
mov
mov
jecxz
loope
mov
mov
jp
div
mov
sbb
push
int
add
mov
cmp
jnp
dec
push
pushf
or
xor
mov
dec
movsb
mov
cmc
vhsubps
rcrl
add
inc
dec
ljmp
pusha
xor
fwait
rol
xchg
ljmp
pop
inc
insl
aaa
jbe
dec
iret
scas
mov
incl
dec
mov
inc
pop
cmpsl
push
arpl
fadds
dec
repnz
mov
pop
xor
int
fsubl
rcr
sbb
repnz
andb
inc
movsb
data16
and
push
fsubs
popf
ficompl
jl
cmp
sarb
fstps
pop
xor
push
sub
enter
lods
mov
dec
in
sbb
mov
add
aad
push
sahf
repnz
in
cmp
xchg
stc
mov
mov
mov
adc
jmp
shl
loope
insb
out
lods
dec
pop
and
cltd
mov
and
lret
rcl
mov
cli
aam
xchg
es
adc
xchg
adcl
mov
fcompp
push
das
sti
mov
push
loope
mov
xchg
dec
and
ret
aas
push
cmp
pusha
and
popa
sbb
sub
add
ss
cs
outsb
lea
mov
aad
xor
cmp
icebp
imul
test
mov
popa
rep
sbb
push
mov
mov
cmp
shl
test
and
cmpl
icebp
add
fstpl
mov
dec
loopne
addb
inc
idivb
jnp
pop
mov
xchg
jno
call
cmp
push
test
xor
sub
mov
and
fists
pop
pusha
out
mov
cltd
sbb
ror
or
lahf
mov
lds
adcl
adc
sub
cltd
imul
lret
lahf
movsb
sub
movsb
int3
adc
je
cmp
pushf
jle
mov
loope
pop
rcl
cld
sub
stos
mov
int3
lock
fs
aaa
push
test
jl
rcrb
adc
cmp
push
test
je
pop
jg
jmp
inc
sbb
xchg
jl
and
bound
push
xorb
pusha
mov
push
pop
pop
adc
xchg
outsl
jno
xor
or
rorl
loop
jmp
and
xchg
test
inc
mov
push
push
push
shll
or
xlat
inc
loope
fs
outsb
sub
jbe
bound
ss
cmp
stos
adc
test
out
xor
into
sub
es
or
add
fwait
mov
aad
jg
mov
sbb
daa
sub
outsb
push
jbe
mov
lret
pop
int
inc
push
mull
into
aas
mov
xor
es
sbb
frstor
xchg
in
push
test
jl
sub
xor
jp
push
fcomip
jge,pn
shl
dec
adc
je
out
cli
test
dec
ss
rcrb
lea
dec
xchg
xor
and
and
lods
sahf
and
test
outsb
insl
fistpll
inc
dec
jb
lods
dec
and
fiadds
inc
cmc
push
gs
gs
mov
test
js
int
subl
pusha
add
ljmp
sahf
scas
outsb
dec
lea
push
in
xchg
inc
xchg
adc
push
xor
loope
insb
sbb
push
aas
cmp
pushf
call
fmul
push
add
or
fildl
fld
in
sbb
shll
lcall
ljmp
test
add
arpl
jno
subl
jno
dec
mov
fdivrs
ret
pop
scas
inc
mov
leave
adc
imul
sahf
xchg
int3
or
lret
pop
int3
loope
sub
cmc
pop
fwait
mov
or
shll
cmp
xor
dec
in
jp
imul
mov
xor
jmp
and
inc
lock
jo
mov
or
fnstenv
leave
sarl
js
in
sub
inc
outsb
mov
stc
in
push
mov
cmp
das
lret
xchg
imul
scas
int3
int
xchg
mov
sub
call
jge
pop
daa
pop
fcoml
aam
cmp
stos
dec
lea
or
mov
mov
call
push
enter
jo
sti
cs
xchg
push
dec
cli
cli
into
hlt
lods
xchg
out
pop
jmp
pop
add
in
sbb
jge
divb
push
xchg
sub
inc
sti
xchg
push
scas
lods
jae
add
test
mov
movsb
inc
stos
mov
movsb
jo
xchg
insl
roll
pop
lds
ja
sbb
fsubrl
mov
mov
sbb
sub
fldt
jl
jecxz
inc
fabs
pop
popf
fildl
daa
cltd
or
out
imul
gs
insb
sub
test
aaa
cld
imul
imul
or
and
jne
and
mov
pop
jns
loop
cmp
or
fmul
and
lahf
jae
pop
dec
xchg
mov
std
sub
mov
sub
cmp
mov
sti
movsb
dec
aad
push
scas
scas
nop
cmp
push
cli
outsb
rol
inc
inc
ds
xchg
mov
mulb
aad
sub
mov
and
push
dec
sbb
lods
icebp
mov
in
adcl
inc
xchg
xchg
adc
push
out
pop
les
testl
xchg
add
mov
arpl
dec
jns
push
mov
aad
mov
call
xchg
add
stc
ds
rcrb
sbb
into
mov
cld
addr16
out
xor
xchg
loop
or
scas
outsl
dec
nop
scas
jmp
mov
mov
psrlq
cltd
in
repz
mov
pop
push
push
mov
ds
das
imul
adc
test
out
push
xor
addr16
mov
jle
xor
js
inc
xchg
push
mov
aam
fcomps
xor
insl
clc
cmp
jo
in
sub
inc
pop
xchg
cmp
loope
or
rcrb
jge
xor
jmp
dec
call
pop
mov
repz
lods
xchg
into
orb
lock
cmp
mov
xchg
sbb
add
std
aas
scas
arpl
xchg
mov
arpl
out
mov
int
xor
push
je
xor
inc
insb
cmp
clc
xor
mov
push
inc
cmovp
xchg
mov
adc
push
scas
cmp
in
xchg
mov
rorl
imul
mov
lds
xchg
roll
xchg
cli
mov
adc
jp
rcll
jge
jo
arpl
mov
cmc
cmc
xlat
cmpsl
jg
sub
adc
std
lods
pop
fsubl
js
sub
fiadds
sub
mov
roll
outsb
xor
push
xchg
sbb
and
mov
movsb
adc
fdivrl
sbb
icebp
int3
into
imul
push
lret
cmc
pop
imul
xchg
loopne
jb
lock
xor
stc
lea
daa
fistps
xchg
inc
outsb
jo
adc
add
xchg
sbb
cmp
jmp
add
mov
aam
cmp
xchg
repnz
jle
aas
shrl
pop
data16
cmp
or
pop
in
dec
push
xor
int3
iret
popa
jbe
test
mov
xor
mov
and
lds
dec
cs
loope
jno
cmp
jbe
inc
and
mov
xchg
aas
dec
dec
ret
aad
pop
daa
popl
loopne
lea
xlat
std
insb
adc
push
push
cli
adc
js
repnz
mov
push
lret
and
pop
sub
jb
jmp
sbb
sarb
in
pusha
and
lods
daa
into
push
dec
inc
shll
cmovns
xchg
roll
push
mov
pop
jne
aad
and
rcl
nop
mov
jmp
fadds
cltd
mov
int3
addr16
gs
dec
scas
pushf
xchg
adc
mov
xchg
cmp
dec
mov
fldl
mov
jbe
mov
push
ljmp
push
or
push
punpckhwd
jnp
xlat
cmp
cmp
jge
fistl
push
jecxz
dec
lret
dec
pop
add
sub
adc
in
aas
jne
xchg
sub
mov
out
xchg
add
jg
cmp
pcmpgtw
xchg
outsb
and
inc
dec
roll
shrl
sub
and
sbbl
jnp
dec
jl
xchg
inc
jno
mov
or
outsb
int
mov
filds
clc
out
repz
cmp
in
xor
and
jb
cmp
sub
mov
add
dec
aaa
xor
in
gs
pop
xor
mov
pop
mov
aaa
leave
inc
mov
mov
nop
adc
sub
aaa
repz
ret
pop
inc
imul
pop
fidivrs
fisubrs
push
les
xchg
aad
adc
pcmpgtw
cli
cmp
sti
cmp
arpl
sub
jae
loope
popa
pop
dec
and
loope
xor
mov
popf
lahf
cmp
or
sub
jns
rcrb
mov
add
dec
out
insb
lea
imul
dec
push
pop
fbld
xor
sbb
and
lret
lods
outsl
and
cmp
pop
add
xor
push
jge
bound
jmp
pop
or
and
pop
movsl
clc
sbb
test
sahf
mov
scas
dec
xor
outsl
add
jnp
adc
mov
aas
cwtl
out
cmp
pop
add
adc
outsl
add
mov
incl
pop
outsl
dec
push
out
inc
mov
aas
mov
pop
or
xchg
and
test
pop
mov
lds
cltd
lcall
pop
xor
cmp
mov
imul
jo
test
mov
mov
movb
lods
daa
jecxz
jg
sarl
dec
das
push
cli
mov
xchg
movsl
stc
mov
add
xlat
sahf
sbb
scas
bound
push
enter
mov
add
and
or
cmp
lods
test
rorl
cmp
pop
pushf
nop
in
ret
in
push
inc
push
arpl
sub
daa
mov
imul
cmp
xchg
pusha
pop
sub
xor
jns
push
subl
push
loope
mov
repnz
lock
xchg
push
hlt
sub
jl
adc
sub
iret
pusha
jg
dec
enter
fnsave
inc
mov
adcb
outsl
mov
cmp
jns
inc
sub
sar
imul
js
jo
xchg
sbbl
ljmp
jbe
fnstenv
lods
outsl
lea
js
sub
shll
xor
mov
ror
shll
jno
push
ret
imul
cmp
pop
jo
outsb
push
jo
fcmovnu
scas
pop
sub
movsb
jb
imul
or
push
inc
and
scas
insl
in
cmp
and
inc
xchg
mov
in
xor
sub
js
aaa
loope
stc
sbbl
or
arpl
pop
and
lods
ficoms
je
jmp
jmp
es
xor
pusha
daa
cmp
mov
jp
js
scas
popa
js
jns
in
pop
add
mov
fxch
mov
scas
and
pop
insb
mov
inc
popf
inc
popa
movsb
insl
daa
addl
cmp
aad
mov
mov
mov
fsubr
mov
mov
lcall
lock
sub
aas
push
imul
sub
pushf
or
xchg
sbb
jbe
sbb
stc
lods
daa
xorl
loopne
pop
movsl
push
xor
ja
jmp
and
ja
test
inc
sahf
sbb
in
imul
jmp
lahf
aaa
push
mov
and
push
lret
sub
lods
bound
fcoms
xchg
add
adc
jp
cmpsl
les
xor
jmp
in
sbb
imul
adc
cmpsl
push
xor
loop
and
pop
int
xor
pop
jb
pop
cwtl
std
outsb
outsl
jge
dec
insb
addr16
jl
jl
push
xchg
adc
ret
fsts
adc
xor
data16
ja
add
push
in
pop
popa
pop
adc
push
movsl
xor
cltd
push
pop
or
lahf
outsl
and
adc
dec
push
or
sub
or
lea
loopne
pushf
adc
ret
pusha
sub
lods
test
xchg
sbb
lret
sub
dec
insl
inc
xchg
mov
dec
mov
pop
mov
dec
mov
adc
pop
xchg
lcall
int
push
dec
popa
cmp
pop
jecxz
iret
push
pop
xor
jp
mov
insl
pop
push
inc
mov
outsl
sbb
inc
lods
adc
cli
nop
clc
add
pop
push
pop
pop
dec
rorl
popf
mov
mov
push
xor
sub
or
repz
pop
fbld
inc
jmp
jmp
push
sub
pusha
push
and
and
jns
or
dec
jne
xor
pop
cmp
popa
outsb
icebp
jns
mov
sub
iret
xchg
jno
add
jno
or
test
lds
jno
cmp
jge
andl
das
lds
cmpsb
jl
mov
mov
scas
stos
inc
inc
pop
jns
push
inc
scas
push
mov
nop
dec
adc
aas
test
mov
loope
pop
mov
rcrl
sbb
mov
clc
sarb
add
aam
or
imul
jb
sub
in
test
push
pop
adc
andl
dec
nop
pop
fadds
stc
lock
push
jns
lods
sub
sub
out
les
push
insb
cmpl
mov
xchg
push
jno
sub
add
rcrl
daa
sti
adcl
leave
mov
xchg
aam
push
or
outsl
and
mov
mov
roll
es
add
sub
ss
mov
outsb
mov
mov
push
adc
xor
outsl
xor
jmp
xor
mov
xchg
push
push
stos
rcrb
je
cmp
bound
insl
sarl
or
and
add
andl
adcl
jae
pop
pop
xchg
mov
lods
mov
iret
jmp
jns
mov
mov
mov
jmp
imul
lret
mov
add
jno
cltd
pop
sub
int
xchg
testl
mov
push
add
adc
jbe
cmp
out
mov
mov
pop
outsb
jl
mov
push
test
lods
insl
lods
rcrb
dec
mov
into
jbe
int3
fisubl
js
mov
out
dec
imul
dec
ror
lcall
dec
ret
mov
fsubrp
pop
shrl
mov
lods
push
outsl
imul
call
insl
gs
fldenv
leave
cmp
mov
or
mov
adc
lret
pop
cmc
push
popf
mov
fdivs
dec
jae
imul
int
lock
mov
jp
test
minps
push
sub
jbe
inc
aam
test
dec
test
push
xor
mov
imul
ret
js
xadd
xchg
pop
les
push
les
adc
rcll
test
cmpsl
adc
pop
jno
imul
cmc
loopne
pop
mov
and
lods
push
add
lods
cltd
add
lods
roll
mov
or
imul
or
push
xchg
xchg
xlat
inc
pushf
xchg
xlat
sbb
sub
jae
push
test
jp
push
xchg
jp
push
popf
js
pop
aam
xchg
pop
fdivl
xchg
cmp
add
cmc
cmpsl
stc
xor
and
adc
stc
outsb
mov
stc
cld
pusha
out
fwait
insl
insb
jae
in
popa
jno
jmp
popa
stc
cmp
xor
pop
mov
rol
or
xchg
rorl
aaa
leave
mov
aaa
xor
imul
insb
mov
push
insb
fsubr
push
insl
insb
jg
enter
lods
aas
movsl
jno
cmp
adc
jns
pop
jmp
jno
lret
call
lods
and
sti
aaa
add
shll
xchg
pop
call
das
cmpl
xchg
sbb
popa
ds
jno
aas
and
sti
mov
ror
mov
pop
mov
pop
mov
aaa
inc
xchg
mov
jmp
sbb
xchg
push
sbb
mov
push
mov
pop
xor
test
jns
lods
aam
andl
mov
sbb
popa
ffreep
mov
jmp
inc
inc
fsubrs
mov
addr16
in
stos
mov
popa
sub
push
cmp
aam
push
lods
dec
jno
add
and
dec
pop
jb
dec
stc
cmp
aaa
push
popa
sbb
mov
popf
cmp
shr
sub
add
into
aam
inc
call
push
lock
xor
leave
es
jmp
jno
jo
push
or
xchg
fistps
addl
pop
shlb
scas
push
jmp
or
lcall
stc
cmpsl
inc
cmp
or
mov
sbb
sbb
es
cmp
fstpt
pop
add
push
push
sbb
rol
fwait
mov
inc
adc
aaa
push
push
cmp
xchg
sbb
sub
jno
lds
imul
nop
popf
aad
iret
jns
lcall
insl
add
mov
in
pop
add
pop
cmp
lret
nop
cvttps2pi
mov
inc
mov
add
fbld
push
cmc
lcall
mov
and
xlat
loope
mov
mov
in
cwtl
jle
loop
insl
sub
fwait
push
jbe
jb
cwtl
iret
cmp
scas
cld
dec
sub
andl
std
mov
shrl
or
stos
mov
int
fwait
adc
push
dec
pop
mov
mov
adcl
push
insb
fs
adc
push
lods
insl
push
inc
cmpl
inc
cmpsl
add
loop
mov
sub
push
ret
jl
adc
xor
movsl
clc
cmp
and
movsb
repnz
mov
xor
or
shlb
dec
inc
cltd
cmpsl
mov
loope
pushf
lea
mov
mov
test
push
mov
add
fimuls
jmp
data16
ds
mov
pushf
loope
cs
jge
adc
inc
addb
dec
mov
insl
or
jns
xchg
es
addb
cmp
aad
enter
jnp
in
mov
adc
or
das
test
movsl
jge
lds
dec
xchg
mov
fwait
aam
pop
jmp
pop
fsubl
push
lods
stc
test
push
pushf
xor
mov
inc
and
mov
jmp
fnstcw
int
xor
stos
jno
inc
pop
in
aas
inc
dec
mov
fadds
or
push
mov
pop
sbb
xor
mov
clc
aad
inc
push
pushf
jmp
dec
sbb
cmc
in
mov
sub
pop
dec
jne
cmp
lret
jg
pop
mov
mov
js
dec
repz
cli
push
stc
loopne
stc
inc
mov
in
loopne
dec
mov
mov
repnz
adc
fists
lahf
and
in
adc
data16
dec
adcl
fmull
orl
inc
loope
adc
mov
or
cmp
lock
push
inc
pusha
inc
aad
sub
push
or
cmp
loopne
push
or
scas
jg
fsubs
fsubrs
cmpsl
pop
lods
mov
loop
jp
in
in
or
lcall
sti
mov
hlt
pop
mov
xchg
mov
andb
sarb
jl
daa
cltd
add
cmp
jp
jecxz
mov
lret
out
std
in
xor
sahf
popa
mov
roll
adc
std
test
jo
inc
sub
ljmp
loopne
cld
fdivl
mov
sahf
add
int3
cli
hlt
xor
sbb
cld
mov
and
bound
imul
push
mov
sub
jle
and
lcall
stc
fs
mov
xlat
pop
sbbb
push
fwait
xlat
and
jmp
mov
mov
cld
xor
pop
pop
hlt
and
mov
add
xchg
push
push
inc
shr
insl
cwtl
mov
test
stos
xchg
hlt
mov
aas
es
mov
push
cmpsl
xchg
xor
loopne
das
in
mov
enter
cwtl
outsb
jl
loop
iret
add
sub
outsb
sahf
outsl
mov
xchg
push
and
jo
std
xchg
mov
push
push
aad
pop
mov
aad
aaa
mov
adc
cld
inc
lods
jae
push
mov
sti
stos
idiv
sub
fnstenv
or
mov
ret
fnstcw
repz
js
and
mov
push
xor
sti
sti
scas
push
pop
cmp
lods
movsb
loop
mov
push
into
lahf
add
sahf
xchg
int3
cmp
cs
out
lret
inc
push
and
je
in
rcrl
or
lea
imul
inc
pop
jle
xor
dec
sbb
hlt
push
aas
data16
out
fs
mov
add
rorl
test
pop
movsl
arpl
mov
fs
test
ret
push
das
aas
cmc
flds
push
mov
sbb
add
lret
pop
mov
or
pop
rorb
lahf
adc
xchg
mov
pop
xor
mov
cmpsb
cmp
sbb
leave
inc
daa
pusha
cld
fst
aam
in
insl
sbb
testl
xchg
or
ljmp
jno
push
jnp
outsb
jnp
pusha
dec
push
daa
push
stos
pop
cltd
sbb
xor
insb
adc
insb
push
xlat
add
xchg
fbld
xor
mov
adc
pop
cmpsl
push
rol
out
or
stc
imul
pop
xor
movsl
ljmp
movl
cmpl
in
xchg
data16
sbb
popa
xchg
and
and
ljmp
adc
cmp
lahf
call
pushf
mov
sarb
icebp
sub
push
lret
insb
cmpsl
mov
pop
jge
cmp
xchg
lahf
aam
popf
add
xor
adc
outsb
aam
xchg
insb
fldl
scas
sbb
or
and
in
adc
insl
mov
fsubr
sub
insl
in
cltd
sahf
xlat
push
xchg
fldenv
popa
in
lret
push
push
mov
stos
jle
jae
lahf
mov
lods
aam
inc
jns
xchg
cmp
mov
daa
add
nop
pop
xchg
cmpsl
xor
mov
push
and
mov
xchg
pop
cmp
mov
rolb
xor
call
sbb
pop
addr16
xor
bound
mov
dec
jno
pusha
jmp
popa
insb
jmp
xchg
lret
es
mov
mov
fstpl
push
push
dec
shll
mov
add
sti
jns
jge
sub
in
push
lock
pop
dec
mov
test
insl
mov
add
mov
cmp
cld
shrl
lods
cmc
or
or
hlt
mov
dec
xor
lcall
mov
add
mov
int
call
pushf
lret
in
and
xchg
sti
cmp
xor
sub
adc
inc
sbb
fldl
xchg
mov
mov
addr16
repnz
data16
out
movsl
test
mov
push
pop
or
push
daa
xchg
jb
jmp
cs
add
das
outsb
int3
push
popf
push
repz
lods
stc
aaa
push
dec
fstps
mov
in
stc
addr16
es
aad
insb
xchg
fadd
inc
jbe
or
pusha
lods
sub
jnp
pop
push
cmp
mov
sbb
jp
mov
cmp
xchg
sbb
movsl
test
sbb
push
popa
dec
pop
jmp
inc
or
or
push
and
xor
lds
lods
sub
mov
lods
inc
test
pop
or
mov
xchg
fisttpll
andb
stos
mov
jmp
imull
addr16
xchg
inc
fs
cmp
mov
inc
scas
arpl
mov
and
lds
push
out
iret
push
or
pushf
aaa
mov
in
sti
call
jno
jle,pn
adc
scas
cmp
ljmp
fcmovnb
cli
aas
inc
int3
and
sbb
and
dec
and
popa
pop
mov
sbbl
mov
dec
and
mov
lcall
add
js
leave
lods
sub
or
dec
inc
enter
ja
mov
xchg
push
popf
push
mov
or
dec
and
leave
out
and
ja
sub
out
vxorps
aas
insl
sahf
or
popf
adc
xchg
jp
lods
out
sub
sbb
stos
mov
mov
popl
pusha
or
test
lds
lds
lds
dec
sbb
rcll
mov
add
xchg
jecxz
shr
maxps
imul
int3
stos
jmp
jns
insl
push
rol
mov
mov
icebp
in
icebp
lods
stos
insb
xchg
cld
pushf
insl
mov
and
jmp
xchg
mov
mov
loope
jns
movsl
lcall
ret
and
insb
outsl
sti
pop
sub
fildl
sub
jle
mov
ret
dec
pop
andl
sub
or
rorb
sub
cmp
rorb
pop
out
fisttpll
scas
cmp
adc
jmp
mov
sub
mov
mov
and
mov
loop
inc
mov
pop
xor
xchg
xchg
mov
mov
fsubs
pop
push
nop
push
ficoms
pop
ret
sbb
cmpl
push
stos
jmp
pop
jmp
test
adc
cld
and
push
arpl
ret
cld
gs
idivl
lret
xor
setns
xor
sub
sub
and
inc
add
mov
xchg
iret
ror
sub
cli
lcall
sarl
and
jo
jb
jmp
xchg
inc
shl
jae
pop
cmpsb
in
and
or
xchg
mov
sbb
xor
fstps
ja
add
xor
repnz
mov
jle
sbb
sub
shll
fldcw
sub
mov
loop
cmp
fstps
les
xchg
std
dec
adc
inc
loop
rcrl
loope
xor
int3
ud1
je
js
xchg
jnp
dec
mulb
out
int
dec
sbb
mov
ljmp
xor
inc
es
aam
mov
or
inc
stc
adc
or
popf
xchg
test
add
push
sahf
xlat
cmpsl
push
out
or
in
ss
out
fdivl
push
ja
sub
lret
mov
scas
mov
divl
xchg
fwait
stos
pushl
in
and
cwtl
xchg
mov
idivb
xchg
iret
push
idivl
jnp
mov
js
mov
cltd
ret
in
stos
mov
into
fidivrl
and
aas
mov
ret
inc
jnp
enter
or
dec
ret
push
push
pop
test
xor
lods
dec
adc
je
fadd
jmp
scas
in
jnp
pop
jno
push
js
inc
cmpsl
sti
pop
fisttps
fisubrs
aam
push
xchg
mulb
lahf
jnp
outsl
outsb
push
mov
xchg
fisttpl
rclb
sub
imul
xchg
call
add
nop
dec
dec
enter
arpl
cs
cld
push
push
push
adc
push
test
sbbl
ret
mov
shll
or
mov
push
lds
lcall
pop
pop
dec
lods
jns
mov
leave
outsl
iret
in
push
lock
popf
adc
push
ds
dec
pushf
pop
push
xchg
shrl
stc
xor
lods
sub
das
sub
adc
pop
push
pop
xorl
adc
stos
adc
sub
push
jae
xlat
fisubrs
mov
aad
call
stos
push
scas
negb
inc
pusha
add
mov
fld
mov
cwtl
cmp
aad
rclb
scas
lds
pop
pop
inc
sbb
vorpd
jg
jp
or
mov
fdivs
decb
add
add
push
sbb
pop
adcb
sub
pop
lods
stc
les
decb
pusha
sbb
lret
mov
lock
loop
mov
loope
fnstenv
inc
fldcw
xor
push
movsl
mov
xchg
rolb
out
push
mov
loop
mov
push
push
pop
xor
lcall
lahf
xor
inc
inc
aad
xor
mov
cmp
fildll
insb
jno
pop
shrd
mov
lcall
sti
xchg
push
push
or
popf
jle
pop
sub
cld
xchg
xlat
inc
pop
ss
xor
cmp
jb
inc
popa
repnz
sub
lds
xlat
aas
push
sti
movsb
mov
adc
xor
sbb
inc
jnp
popa
insl
pop
pop
xchg
cmpsl
and
inc
fldt
adc
xor
gs
adc
sub
sbb
imul
lret
mov
aad
or
push
jle
adc
frstor
xchg
fsubs
fs
iret
adc
in
inc
xchg
jns
adcl
mov
imulb
inc
cld
ds
das
dec
divl
arpl
cmp
dec
loope
call
mov
stos
mov
incb
dec
cmp
mov
jg
cmpsl
nop
add
fmuls
pop
sbb
pusha
pop
mov
outsb
push
sbb
xchg
mov
inc
push
popa
push
cltd
jo
xlat
mov
das
das
test
adc
mov
mov
mov
dec
push
fwait
mov
jmp
nop
mov
mov
cmc
int
js
jne
dec
mull
cmp
push
sub
dec
and
ret
xor
or
into
cmpsb
call
ret
or
xor
ljmp
das
xor
cmc
and
sbb
movsl
mov
mov
sti
movsb
cmp
mov
mov
pop
popa
sbbl
cli
dec
out
loop
jne
addr16
jmp
mov
pop
dec
dec
dec
shrl
pop
pop
cmp
test
jg
mov
pop
and
mov
push
sbb
sub
mov
or
mov
cld
push
xchg
call
je
aaa
sbb
jle
loope
shr
mov
daa
adc
bound
xor
adc
mov
mov
outsb
pop
sbb
mov
dec
or
aas
dec
out
fistl
test
dec
movsl
xor
int
aad
xor
sbb
push
or
bound
test
enter
cmp
fdivrs
hlt
enter
loopne
mov
icebp
cmp
push
pop
sbb
and
push
mov
rcrb
inc
sub
repnz
mov
outsl
jns
outsb
adcl
stos
or
add
mov
in
jge
adc
ret
mov
aaa
or
sahf
xorb
in
mov
jge
in
push
jns
pop
insl
jns
insl
ljmp
push
jns
mov
adcb
pushf
lcall
mov
aas
insb
je
subl
and
das
pop
test
cmc
xor
lock
stc
fadds
pop
sub
nop
mov
adc
int
cltd
pop
push
pop
pusha
aas
adc
mov
lea
fs
add
gs
nop
fisttpl
xchg
cmp
jb
mov
pop
nop
add
stos
mov
or
jmp
mov
mov
mov
push
stos
mov
lahf
mov
dec
adc
mov
adc
and
aad
push
pop
jo
andl
stos
pop
icebp
cmp
jmp
push
cmp
pop
cmp
aaa
pop
fwait
adc
mov
sbb
test
sahf
mov
jmp
mov
sahf
popa
stos
loop
xlat
add
mov
mov
or
xchg
outsb
fbld
mov
jmp
pop
mov
inc
bound
pop
aam
xor
pop
sub
mov
mov
mov
les
in
mov
jle
sbb
addl
ret
aad
xchg
lods
sbb
movd
mov
add
jno
mov
call
mov
jnp
jo
test
aam
mov
inc
nop
data16
pop
xor
jae
mov
mov
pop
test
mov
aam
pusha
out
cli
lcall
and
jae
dec
xorl
popl
call
lea
pop
pop
xor
push
shrl
pop
jg
dec
jmp
fucomp
mov
pop
adc
mov
out
in
sbb
outsl
sub
and
dec
cli
pop
mov
xchg
xchg
jnp
mov
movsb
pop
dec
nop
int
mov
adc
sti
std
or
xchg
ficompl
mov
push
rolb
dec
lret
loopne
scas
fstpt
shll
insb
and
int
movsb
mov
and
sbb
or
xlat
sub
imul
mov
push
inc
out
outsb
push
xchg
leave
stc
inc
lret
pop
ficompl
xchg
test
jnp
mov
mov
sub
xchg
mov
sbb
dec
test
jmp
sub
dec
pop
xor
jnp
fcomps
mov
negl
or
mov
add
sarl
xor
ljmp
in
nop
or
pop
inc
or
leave
cli
lods
xchg
jno
jge
aad
scas
into
popa
add
fists
xchg
fucomip
pop
test
notl
and
hlt
das
or
sub
jae
stc
jb
divb
push
test
xchg
arpl
clts
add
cld
xor
pop
pop
ret
in
push
mov
xor
mov
adc
sub
xchg
jo
add
ds
xchg
aas
mov
xchg
cmpsl
inc
fcmovnbe
lea
out
mov
and
adc
iret
push
dec
cmp
sti
mov
or
inc
insl
sub
xchg
xchg
das
loope
loopne
out
cmp
cmpl
sub
jmp
daa
push
pop
adc
dec
xchg
loop
mov
rolb
mov
shll
prefetcht2
out
xor
leave
inc
cmpsl
stos
xchg
cmc
fwait
ret
and
inc
lock
movsb
repnz
jbe
icebp
out
jle
adc
movsl
mov
or
ljmp
inc
push
repnz
cmpsb
mov
int
jbe
fnstcw
mov
mov
bound
stos
cmc
lahf
push
lahf
enter
popf
fs
lret
shll
mov
mov
mov
push
adc
out
push
dec
xor
adc
dec
or
mov
leave
scas
nop
mov
mov
aam
inc
enter
inc
push
sub
pushf
inc
mov
push
lret
iret
xchg
xchg
adc
aaa
add
adc
stos
add
sbb
pop
aam
sbb
aam
sub
rdtsc
push
enter
mov
sbb
mov
loope
pop
push
sub
ja
das
aam
or
xor
lahf
pop
push
xchg
mov
dec
jae
cltd
mov
roll
and
mov
arpl
test
fldl
sarb
fwait
into
xor
popf
shll
push
cmpsb
mov
lcall
gs
lahf
inc
xor
test
iret
add
jo
fs
sub
in
adc
loopne
or
std
xchg
mov
cmp
lods
cmp
push
pop
ret
adc
and
sub
push
repnz
outsb
cmpsb
in
sbb
xchg
push
bound
jo
sbb
cltd
das
add
call
sbb
lret
mov
jg
aas
jno
and
cmp
xlat
xchg
push
imul
and
ljmp
in
mov
cmp
stc
pop
pop
popa
pop
lods
pusha
xchg
sub
jnp
out
movaps
jle
and
cwtl
sub
scas
lea
icebp
push
xchg
outsb
mov
add
and
loope
test
mov
shl
jnp
push
aaa
pusha
jnp
mov
or
int3
jnp
pop
xchg
xchg
outsb
and
mov
fnclex
or
xchg
ja
inc
jne
pop
shlb
je
out
jl
in
rcrb
inc
xchg
xchg
imul
add
mov
out
int3
xchg
divb
insb
mov
je
xor
aad
or
jne
ficoml
pavgw
filds
out
shr
or
cmpsb
in
hlt
js
push
add
jb
push
cmpsb
fcmovbe
in
mov
jo
loope
fnsave
sub
aad
cmp
shrl
or
les
test
adc
fidivl
das
push
in
movsb
cmpl
push
cmp
ret
sbb
jne
cmpsl
inc
pusha
pop
test
sub
out
loope
fmull
pusha
pop
jbe
dec
xchg
mov
inc
mov
cs
xchg
sbb
or
push
jge
add
mov
or
shl
cmpb
adc
mov
pop
sahf
movsl
pop
mov
lret
scas
mov
sbb
outsl
daa
inc
sti
add
outsw
loope
iret
add
push
xchg
jmp
loopne
adc
insb
aad
jl
cmp
adc
mov
add
mov
add
outsl
aas
cmp
enter
in
mov
mov
mov
pusha
jg
stc
ret
inc
iret
mov
pop
add
bound
jne
push
sbb
mov
movsb
fwait
loope
pop
push
push
xchg
in
leave
sbb
pop
jo
fwait
or
pop
cmc
or
and
mov
imul
addb
adc
xchg
mov
aaa
movsl
sub
pop
insb
scas
dec
mov
inc
mov
popf
enter
movsw
jnp
incb
aad
xor
popa
pop
mov
andnps
or
pop
in
sbb
xor
add
mov
in
push
push
cmp
sbb
lds
mov
push
popa
dec
lds
arpl
mov
popa
out
jg
leave
pushf
int
inc
rcrl
jmp
popa
loope
sub
add
sub
imul
mov
jno
pop
lods
mov
cltd
inc
in
scas
xor
in
mov
clc
mov
lret
mov
rcl
popa
sti
out
shrb
in
int
add
xchg
mov
lods
cld
push
cmp
inc
out
in
pop
xor
pop
pop
outsl
push
inc
adc
inc
pop
dec
pop
in
cwtl
cmpsl
popa
jns
scas
add
js
mov
sbb
sarl
cwtl
fwait
mov
outsl
jp
shld
adc
call
jecxz
mov
lret
ds
cwtl
insl
ret
push
out
sub
xlat
lods
mov
jno
add
inc
shll
movsb
daa
jne
into
in
mov
insb
and
sahf
shrl
fsts
xchg
mov
xor
and
mov
pop
or
sub
idivb
fdivs
scas
or
lahf
popa
xchg
fldt
jae
leave
mov
scas
repnz
xchg
sub
add
pop
in
gs
imul
sti
icebp
js
xor
fildl
fs
imul
mov
lods
inc
add
das
test
push
adc
cs
insl
pop
sbb
in
xchg
xchg
jbe
bound
test
mov
test
mov
rol
and
add
rcrb
jl
fcoms
xchg
mov
dec
adc
push
test
jge
aam
jp
fists
roll
mov
cmp
rcrl
jmp
popa
loope
adc
add
pop
jne
add
sbb
iret
outsl
jecxz
out
add
inc
push
xchg
pop
mov
mov
jns
push
push
xchg
stos
in
sub
adc
xchg
pop
int
mov
sahf
adc
mov
aas
cmpsl
jmp
popf
in
int
inc
push
mov
cmp
pop
leave
std
outsl
add
rcll
mov
stos
mov
xor
mov
push
pusha
lods
dec
adc
mov
gs
mov
xchg
aaa
repz
pop
rclb
andl
outsb
pusha
div
hlt
fidivs
jp
sbb
sti
mov
jb
sub
or
dec
dec
push
push
stc
fistl
ret
bound
mov
xor
cmpsl
aad
andb
lahf
adc
rol
es
xor
lods
lds
push
sbb
addr16
daa
mov
jge
push
pop
loopne
ljmp
jo
dec
arpl
inc
ret
push
mov
pop
xlat
xor
ja
test
in
and
push
movsw
mov
mov
outsb
icebp
jns
jmp
lahf
mov
aas
or
ret
adc
ret
jmp
dec
xlat
push
mov
xchg
cmp
fisttpl
fsubrl
popa
int3
mov
lods
jb
sti
es
aas
insl
sbb
test
test
in
pop
loope
jno
popf
mov
mov
sbb
je
pop
aad
xlat
fldl
aad
and
mov
adc
lods
sbb
icebp
mov
adc
and
xor
les
leave
pusha
sahf
rorb
sahf
jg
jo
mov
and
lea
or
sbb
shlb
sub
test
je
test
mov
into
les
xchg
push
and
outsl
xchg
jne
pop
adc
aas
lods
push
jmp
adc
iret
push
imull
daa
jg
inc
and
imul
hlt
dec
bts
mov
adc
ss
pop
aam
loope
inc
mov
push
mov
jmp
and
xchg
pop
gs
and
mov
xor
and
mov
mov
dec
add
lds
adc
shrb
mov
xor
xor
int
lock
in
jmp
dec
jge
jo
and
sbb
in
pusha
jo
in
shll
mov
mov
std
sub
mov
or
stos
xor
xor
hlt
sub
scas
adc
pop
push
loope
outsl
adc
pop
mov
lds
test
dec
rcrb
jge
jno
dec
xchg
fs
mov
adc
xor
push
mull
sbb
jo
dec
mov
mov
test
fcomps
lahf
mov
push
xor
or
sbb
lret
jb
iret
jle
imul
outsl
jb
and
bound
xor
cmp
and
mov
outsl
adc
out
aad
sbb
adc
cmp
jnp
sar
pushf
outsl
stos
fdivrp
gs
rep
test
nop
push
xlat
xchg
sti
inc
lods
xor
sbb
gs
cmp
mov
jns
sti
orb
fs
xchg
mov
repz
and
jnp
mov
adc
cmp
in
sub
sub
mov
adc
nop
pop
adc
ret
jne
lods
sbb
sahf
test
xor
inc
push
jl
dec
mov
fisubrs
loopne
or
xchg
es
ljmp
mov
push
jmp
test
bound
dec
jg
insl
test
add
jo
pop
jp
inc
jae
jl
in
pop
stos
jle
sbb
outsl
push
jae
xchg
adc
mov
jge
cwtl
out
add
jno
je
add
mov
lret
bnd
sahf
std
dec
adc
loop
inc
sbbl
inc
aad
insl
out
popf
jg
mov
outsl
and
pop
cltd
fdivs
clc
inc
aas
es
stc
mov
mov
jns
add
inc
shl
cltd
movsb
sbb
sbb
xchg
stos
mov
push
out
scas
lret
shlb
inc
shll
pop
stc
movsl
loope
sub
arpl
bound
imul
sahf
shlb
xchg
adc
sti
stos
xchg
add
aam
sbb
bnd
jle
pusha
test
daa
mov
mov
cli
shl
mov
cli
push
das
mov
insl
mov
sti
sub
cli
xor
dec
rorl
mov
shll
xchg
enter
in
and
sbbb
sbb
sub
jle
mov
and
lahf
lahf
test
addr16
cwtl
dec
fcmove
push
lock
das
cltd
sbb
sbb
or
or
cwtl
fstpl
lahf
in
out
sbb
addr16
mov
daa
xor
pusha
lods
data16
movsl
cmp
adc
lret
adc
dec
mov
out
enter
aam
sarl
adc
orl
fcompl
shll
xchg
push
xchg
imul
sti
es
or
xor
into
dec
in
xchg
insl
push
addr16
pcmpgtd
lret
add
in
xor
sti
and
stc
cli
add
pop
insl
pop
out
imul
pop
adc
test
aaa
cmpsl
mov
and
jns
xchg
dec
insb
addr16
cmp
add
push
lods
adc
mov
pop
dec
sub
and
das
nop
out
xchg
sbb
xor
push
out
icebp
bndldx
inc
cmpb
cltd
shl
inc
lods
data16
cs
adc
fisttps
aad
lock
and
lods
int
xchg
fmuls
sub
dec
sbb
xchg
cmp
movsb
push
pop
add
xor
pop
out
pop
fcompl
push
jge
out
outsl
mov
addr16
xor
xor
jg
les
rcr
loop
ror
scas
scas
pop
pop
sbb
mov
and
es
popf
out
iret
jmp
push
inc
jo
daa
dec
mov
pop
jmp
dec
dec
mov
sbb
inc
lods
sbb
lea
inc
xor
sub
xchg
pusha
int
insl
pop
es
jmp
sub
pusha
add
call
out
xlat
iret
jg
dec
sti
cmpb
fcompl
outsl
mov
push
lods
sahf
test
xor
pop
mov
shll
cmp
mov
aad
adc
xchg
lea
in
cwtl
imul
xchg
in
sbb
fsubl
insb
cwtl
adc
cmp
iret
aam
call
dec
lock
inc
adc
daa
push
push
orb
dec
pop
cli
cwtl
mov
sub
or
sbb
sub
add
pop
jmp
xchg
idivl
es
ja
xchg
jl
out
cmp
ja
js
in
neg
rol
dec
jl
and
in
dec
cmp
std
sub
mov
rcrb
loop
movsb
or
push
les
out
out
movsb
addr16
lret
adc
lret
xor
std
cmp
fcomps
and
adc
ret
and
jecxz
dec
mov
adc
adc
cmp
add
adc
sahf
movsb
jne
cmp
nop
mov
sbb
add
test
jl
sarb
std
and
call
jns
sarb
mov
mov
rorb
push
imul
mov
pop
dec
insl
fcompl
cmp
out
cltd
sahf
mov
sbb
js
and
arpl
push
fisubrs
push
dec
and
dec
push
lahf
cmp
insl
rorl
xchg
adcb
into
not
fimull
jae
push
lds
test
cmp
sahf
shrb
pop
push
adc
lods
fcmovb
cmc
int
xchg
scas
jnp
ljmp
fnstcw
repz
bound
mov
jnp
adc
enter
jmp
inc
cmp
das
dec
mov
mov
mov
xor
out
cmp
hlt
push
mov
push
cmc
rcrb
mov
aas
push
sbb
scas
adc
lods
test
test
push
lret
jecxz
cli
jmp
and
mov
and
dec
data16
ds
cmpl
pop
cmp
dec
stos
jno
xor
adc
andl
movsb
scas
test
cmpsl
dec
out
scas
mov
mov
sahf
sahf
cmp
sbb
call
lret
cmpsl
pusha
push
push
cltd
push
hlt
ss
cmp
mov
sub
mov
push
outsb
je
mov
push
inc
cmp
mov
mov
sbb
lds
xor
std
cmp
shl
push
xchg
dec
jo
in
and
mov
xchg
jno
mov
xor
pop
divl
je
pop
mov
psrlw
sub
test
test
sbb
push
cld
jb
mov
jle
pop
fdivl
inc
sbb
sbb
pop
adc
ds
in
in
popa
insl
pop
xor
and
mov
addr16
lret
mov
or
stc
lea
xchg
push
scas
insb
shlb
in
insl
pop
mov
in
pop
jecxz
in
insl
xor
out
lds
xor
shrb
test
jns
shlb
jl
in
pushf
lds
cmpsb
xchg
popf
jb
leave
xor
sbb
into
sub
or
lahf
push
inc
das
test
sarl
movsl
mov
ss
pop
xchg
mov
adc
push
bound
xchg
cld
lcall
enter
sarb
sti
pop
xor
pop
jp
dec
mov
sub
pop
insl
xor
xlat
and
lods
xor
fs
scas
sub
inc
inc
push
or
inc
push
gs
push
mov
xor
xor
mov
push
adc
sbb
cmpsl
dec
adc
cmp
add
inc
jns
out
push
add
imul
enter
jmp
xlat
adc
dec
aad
int
mov
mulb
dec
outsl
outsb
outsb
movsl
jns
adcl
inc
inc
inc
mov
add
inc
mov
cli
test
jg
cli
inc
jae
or
jne
add
xlat
rcll
mov
arpl
adc
push
xorl
cmp
shll
mov
adc
sub
cmp
xor
mov
loopne
leave
mov
xchg
ljmp
push
adc
pop
testl
push
xchg
out
and
lret
stos
adc
fwait
aas
aas
xchg
add
pop
inc
out
enter
mov
je
ds
jg
cli
mov
int3
fldl
push
push
sbb
and
scas
inc
cmpsl
ja
jo
shrl
mov
push
pop
enter
jbe
jo
push
les
int3
les
inc
and
cwtl
sbb
push
dec
jmp
or
inc
ret
dec
dec
inc
sbb
jnp
jl
jmp
mov
and
inc
cmp
push
xor
lret
sbb
push
inc
sbb
lds
insb
push
int
pusha
xor
mov
notl
add
jae
outsb
or
push
and
bound
cmpsl
pop
push
xchg
int
mov
jecxz
pop
mov
pop
addr16
cld
sub
mov
push
sub
ret
lds
jbe
je
fmuls
jmp
mov
mov
xchg
jmp
scas
add
mov
in
inc
sarl
cmp
adc
pop
jecxz
push
mov
mov
into
in
xchg
popa
insb
add
sti
pop
mov
inc
lods
adc
negl
push
jmp
cltd
sahf
jl
ja
inc
mov
pop
sbb
mov
cwtl
mov
lods
rolb
cmpsb
test
fildl
popa
bound
dec
test
fnstcw
ja
sub
aas
inc
sti
or
fistpll
mov
andl
mov
push
dec
and
jnp
fidivl
jb
mov
jmp
mov
adcl
sub
addr16
insl
int
test
arpl
pop
mov
dec
pusha
fwait
out
push
mov
fistpll
push
call
and
inc
and
mov
pop
xlat
push
mov
adc
dec
into
test
dec
pop
xlat
call
lahf
sahf
lcall
dec
mov
lret
pop
mov
jp
push
push
insb
inc
andl
mov
push
bound
mov
scas
lret
and
adcb
jge
sbbl
hlt
sub
int3
mov
and
push
mov
mov
stos
movaps
in
push
cmpsl
imul
push
cmp
pop
xlat
inc
pop
jmp
sub
pop
iret
push
xor
test
adc
or
add
xchg
jno
ja
dec
or
pop
xor
ret
inc
outsb
mov
sub
out
scas
enter
sub
pop
nop
jb
mov
push
into
sub
xorl
or
cmpsl
mov
and
add
loop
fists
out
rol
ja
mov
popa
stos
jnp
mov
leave
xor
jecxz
mov
orb
out
or
jmp
jno
mov
lea
mov
ret
inc
and
and
movsb
lds
jmp
inc
mov
mov
inc
inc
xchg
mov
imul
fsubl
stos
and
add
dec
push
push
pop
add
dec
test
jl
sbb
int
xchg
cld
pop
imul
cmp
loopne
in
fwait
stos
outsb
mov
cmp
shl
loop
cmp
mov
push
sarb
or
sub
xor
jb
xlat
je
enter
mov
rorl
call
adc
and
gs
sti
sbb
sbb
jbe
mov
jnp
rcrl
jmp
aad
push
out
pop
in
mov
pop
mov
andb
pop
jb
jle
outsb
and
lahf
stc
lock
jmp
cmpsb
insl
sub
out
int
mov
push
stos
icebp
and
pop
xchg
jb
sbb
mov
aam
push
xor
xchg
pusha
pop
mov
lock
outsl
add
movsl
adc
cmc
jbe
mov
push
push
dec
call
fstpl
jo
pop
cmp
inc
daa
mov
inc
add
test
mov
nop
sahf
cli
stc
shr
rcr
lds
data16
enter
imul
iret
div
ja
aaa
mov
js
push
testb
push
cmp
cmpb
add
sti
jmp
xchg
lret
xorl
sbb
or
adc
adc
jp
jmp
out
and
jnp
dec
dec
repnz
int3
push
rclb
mov
xor
or
movsb
or
test
inc
push
mull
and
icebp
int
mov
orl
adc
fwait
mov
xchg
popf
cmp
jno
push
adc
mov
xchg
add
repz
andb
jno
test
imul
xor
xor
loope
or
dec
jge
mov
mov
jno
mov
fwait
jle
testl
jge
iret
sub
ss
lea
inc
scas
pop
cmp
mov
cmp
push
pop
clc
lods
mov
xor
fs
in
les
les
xchg
xor
xchg
push
sub
aas
mov
andl
inc
adc
sti
pop
lahf
jge
and
push
push
cmp
push
mov
inc
testl
ret
hlt
mov
mov
sbb
inc
add
shll
mov
push
adc
mov
xlat
loope
jle
nop
and
push
cmp
and
mov
arpl
sbb
mov
stc
pop
addr16
repnz
mov
adc
dec
xchg
dec
aad
test
insb
or
pop
std
cld
insb
sahf
insl
sarl
enter
xor
xchg
lea
es
data16
dec
push
xor
inc
push
jle
popl
rorl
in
mov
jo
xchg
cmp
das
mov
test
movsb
scas
and
jl
mov
xlat
in
test
popa
xchg
add
xchg
subb
ret
pop
pop
fimuls
jae
popf
pop
mov
and
or
lds
cmp
inc
icebp
xchg
in
addb
jmp
add
inc
mov
gs
cmp
call
bound
dec
sahf
icebp
lret
mov
xlat
imul
cmp
push
sbb
mov
scas
data16
pop
jmp
scas
mov
cmp
inc
sub
jle
pop
jne
cmpsb
fmuls
in
cmp
and
cmpsb
push
jns
jae
xchg
aaa
push
aas
add
add
loop
mov
aaa
shlb
inc
out
fstpl
jle
lea
pushf
jmp
testb
fcomip
mov
cmp
aam
lret
mov
addb
fimuls
mov
mov
inc
stos
sbb
xchg
rcrb
pusha
mov
ss
dec
cmp
and
mov
mov
jl
or
clc
push
adc
orb
aaa
or
xchg
sbb
mov
add
inc
inc
negl
in
sbbb
pop
push
pop
adc
xor
lods
push
push
xorl
stos
jge
mov
fidivrl
cmpsb
mov
push
insb
icebp
inc
jns
into
inc
mov
pop
int
das
test
dec
cmp
cwtl
lods
stos
add
sbb
xorl
sub
jnp
sahf
mov
leave
fsts
mov
sub
repz
xchg
xchg
or
int3
or
aad
lods
adc
dec
push
mov
aad
inc
and
scas
mov
rolb
fwait
subb
sub
pop
cltd
subl
lret
xchg
mov
out
mov
call
out
push
mov
sbb
sbb
aas
imul
push
xchg
push
xor
mov
mov
sbb
jmp
imul
aad
inc
sti
inc
in
cld
dec
xchg
add
mov
pop
pop
or
dec
push
sub
mov
popa
cltd
xchg
aas
inc
test
pop
loopne
dec
add
lret
aaa
sub
mov
jae
out
inc
or
iret
in
push
dec
aad
dec
mov
movsl
cli
adc
pop
dec
lcall
rorl
jle
mov
jns
push
xchg
and
mov
lds
insb
pop
jb
sub
mov
inc
mov
push
fiadds
adc
mov
in
and
xor
xor
repz
outsb
push
adc
sub
iret
insb
push
xchg
or
cltd
imull
pusha
push
xchg
mov
push
sub
sbb
scas
mov
and
xchg
movsl
push
fldenv
fdivrs
inc
pop
mov
xlat
sub
mov
lcall
push
mov
pop
mov
into
fs
scas
sub
rcrl
insb
dec
les
sbb
aaa
nop
enter
and
jae
sub
fsubs
lods
nop
jle
loop
aad
mov
dec
push
fsubl
sbb
repz
xchg
mov
add
bound
jbe
jae
and
nop
lahf
in
in
xor
leave
cli
pop
mov
mov
outsl
in
xchg
cs
dec
adc
cld
xchg
mov
mov
inc
les
fs
dec
inc
or
andl
lahf
shrb
popa
xchg
xlat
loop
push
inc
adc
xor
and
in
mov
repz
cmp
jmp
lds
test
jge
push
arpl
imul
adc
push
jne
cltd
int3
dec
fwait
pop
addl
mov
jne
and
ficomps
xor
inc
nop
push
cmc
andb
xchg
cltd
push
test
mov
or
loop
ja
xchg
pusha
pusha
adc
sbb
das
mov
xor
push
shrb
fisubrl
lret
push
dec
mov
jle
mov
dec
mov
subl
inc
sub
cmp
test
dec
push
loope
push
in
std
shlb
mov
dec
add
cs
inc
push
xchg
xor
das
pop
into
pop
or
pop
cld
test
inc
mov
push
pop
mov
pop
push
ds
hlt
arpl
pop
xchg
sub
in
int3
aam
xchg
xor
sarb
pop
fdivr
push
push
in
lods
jecxz
call
loop
xchg
loop
jmp
int
sub
cmpsl
xchg
nop
roll
jbe
loope
jl
lods
data16
inc
sub
jbe
push
pop
or
subb
data16
xchg
push
scas
shll
mov
pop
pop
sbb
ret
insb
sbb
mov
pusha
sbb
mov
ljmp
loope
sbbl
inc
std
xor
mov
pop
push
sbb
or
lcall
mov
aaa
push
cmp
ja
xor
push
push
push
sbb
mov
mov
aad
cld
gs
mov
fidivs
pop
sub
pop
fmul
call
js
pusha
xorb
fwait
lock
or
movsb
popa
inc
pop
mov
aam
jne
aad
stos
inc
sbb
adc
adc
insb
adc
adc
sahf
sub
scas
xchg
dec
lods
idivb
dec
lahf
inc
nop
xchg
lods
fs
int
sub
jg
addr16
cltd
xlat
jns
pusha
cs
fsubrl
cs
daa
jecxz
arpl
mov
inc
jb
push
xor
fcompl
push
add
loopne
sbb
shrl
mov
mov
notl
repz
lods
mov
fcomps
aaa
sub
data16
mov
popa
dec
clc
imul
aam
mov
sub
mov
mov
js
mov
mov
dec
ljmp
subb
lods
or
inc
test
mov
popa
jl
inc
add
xchg
lods
sub
fldcw
and
ret
push
jne
pop
int3
push
dec
cld
lcall
in
jno
pop
xchg
xor
push
fldl
jae
stos
addr16
add
cmp
jbe
sub
test
out
pop
mov
xor
pop
inc
lret
scas
bound
hlt
insb
sub
mov
sbb
push
jle
subb
add
enter
add
mov
movsl
into
inc
loopne
sub
inc
in
xchg
out
dec
or
xor
stos
mov
cmp
xor
jne
pmaxub
divl
or
mov
sub
lcall
mov
sbb
pop
push
inc
aaa
adc
repnz
xor
out
lods
outsb
out
cltd
mov
jecxz
ja
mov
jnp
fnstenv
mov
loope
out
loope
int
pusha
test
pop
sarl
lods
mov
pop
shl
cmp
pop
faddl
add
ljmp
cmp
push
dec
jo
in
outsb
sbb
mov
into
roll
movsl
xchg
push
cmp
addb
lea
mov
and
mov
push
and
ds
mull
mov
xchg
pop
test
movsl
push
push
jno
call
and
jnp
loopne
scas
cmpsb
pop
into
pop
gs
pushf
sbb
and
aaa
out
inc
jo
jb
pop
sub
jge
clc
or
inc
xchg
insb
jge
dec
pop
je
pop
aas
or
lahf
or
and
out
arpl
xchg
pop
lret
dec
outsb
and
sahf
dec
in
pushf
jno
cltd
pop
iret
pop
xor
jo
mov
ja
xchg
sbb
and
testb
subl
dec
imul
daa
sahf
std
or
mov
mov
cmpsb
xchg
and
js
sbb
and
test
xor
imull
pop
dec
lock
pop
mov
pop
subb
mov
add
in
aam
fwait
and
insb
mov
andl
imul
or
lock
adc
scas
mov
fdivl
cmp
inc
lahf
or
ja
setge
shrb
ja
jge
daa
add
ret
aam
pop
imul
andl
jg
and
mov
es
fwait
lahf
out
push
cmp
sti
and
and
sbb
rclb
cmp
dec
aam
arpl
addr16
xor
mov
cmp
shl
es
addr16
test
cmp
lahf
push
js
je
scas
adc
push
jno
pop
mov
popf
and
subl
test
or
cmp
pop
adc
mov
add
jne
jnp
insb
ss
int
dec
mov
adc
insl
out
imul
jno
bound
mov
out
pop
pushf
test
dec
adc
cmp
jno
cmp
jns
ljmp
pop
movsb
outsl
push
aas
dec
inc
and
lea
xchg
arpl
xlat
dec
inc
xchg
shlb
ds
sar
ficoms
xchg
negb
add
sub
xchg
dec
dec
add
call
pop
fcomip
arpl
clc
inc
sub
loopne
sbb
push
adc
test
insb
addl
cmc
xchg
push
mov
lea
shll
jno
pop
movsl
push
jo
xchg
es
dec
jle
cld
aaa
sbb
adc
data16
out
pop
push
in
push
lea
out
fwait
push
in
push
xchg
sub
dec
cmp
sbb
shrl
lahf
jns
mov
xor
pop
rorb
stc
cmc
add
testl
mov
xchg
mov
jg
xchg
mov
mov
loope
lret
aas
xor
pop
mov
cmp
mov
jne
mov
mov
pop
jae
push
mov
and
lea
cli
mov
imul
mov
sbb
pop
sahf
and
mov
jg
shr
adc
jl
lods
dec
fbstp
int
int3
add
rcl
mov
subb
jno
lods
mov
scas
or
loope
sub
repz
ret
hlt
fistpl
das
loope
outsl
rcl
xor
mov
cs
cli
cmp
mov
mov
fdiv
repz
scas
shrl
ja
dec
insl
test
sub
jp
mov
ss
xor
ret
or
push
ficoml
lret
out
mov
js
mov
outsb
pop
mov
lods
cwtl
adcl
fwait
ds
sbb
dec
leave
ret
jmp
cli
push
out
aad
xor
pusha
jge
orb
lret
pop
mov
dec
xchg
lea
es
dec
outsl
jnp
xchg
and
dec
push
insl
clc
les
pop
pop
mov
loopne
or
cmp
xor
xor
fimuls
mov
mov
mov
add
xor
jns
ret
jbe
mov
leave
rcl
outsb
mov
xchg
inc
sub
in
xchg
daa
mov
cmp
and
out
sti
sub
adc
shr
xor
cmp
inc
inc
pop
jl
jge
sub
mov
das
das
mov
ds
test
and
mov
and
fistps
mov
xchg
sbb
out
jae
mov
aad
and
xor
rolb
les
rcrb
or
loope
sarl
incl
inc
xchg
xchg
into
jae
cmpsb
sbb
out
decl
hlt
jge
or
mov
lock
mov
add
in
and
das
lods
mov
pop
dec
mov
sar
mov
mov
push
add
lahf
mov
fwait
xor
adc
dec
ljmp
leave
push
sbb
out
insb
clc
lret
cmp
stos
and
adc
pop
mov
cmp
push
notb
inc
int3
test
inc
sub
sub
daa
sub
and
sahf
fnsave
mov
lahf
jl
pop
fnsave
push
lret
jo
mov
inc
jg
test
mov
std
mov
mov
lcall
outsl
pop
and
not
sub
mov
fcoms
scas
sbbb
and
xor
jno
addr16
mov
test
sahf
sub
sub
repz
xchg
add
out
nop
push
movsl
mov
inc
cmp
push
xchg
pop
iret
rclb
lods
pop
cwtl
cmp
cmp
fidivl
repz
cmpb
rcrb
jl
push
xor
mov
je
or
jl
xchg
mov
push
lahf
daa
sbb
repnz
bound
lea
sbb
scas
outsb
sti
ss
test
cwtl
mov
xor
push
test
out
or
lcall
enter
mov
movsl
inc
mov
sbb
inc
cmpsl
addr16
in
jno
mov
in
std
jae
inc
gs
andb
aad
mov
and
test
iret
test
int3
fwait
cltd
or
sbb
pop
pop
or
popf
andb
lea
insl
andb
mov
push
dec
stos
mov
sbb
sarb
andl
movsl
subl
dec
xlat
call
jecxz
cld
jmp
xchg
js
shll
cmovp
shrl
pop
test
pop
and
xchg
dec
pop
call
cmp
mov
ja
data16
jb
iret
cli
into
jp
adc
xor
jge
daa
hlt
aas
or
sahf
int
sbbl
mov
pop
xchg
sub
jp
push
int3
cmp
mov
jecxz
adc
pop
dec
mov
les
push
mov
and
cmp
mov
enter
sub
cli
dec
outsl
mov
xchg
hlt
enter
lahf
lods
sbb
xchg
or
fldl
ljmp
add
movb
mov
pop
and
incb
and
lds
jmp
rcll
xchg
xlat
cli
movsl
jbe
icebp
loope
mov
or
push
daa
pop
pop
mov
add
mov
popa
inc
in
std
movsl
pop
mov
pop
xchg
insl
dec
sub
inc
and
jle
xchg
xchg
les
or
scas
mov
push
xor
fdiv
aaa
and
cltd
pop
jbe
inc
and
pusha
mov
mov
mov
lret
push
push
add
aaa
out
cmp
subl
pop
sub
out
divl
fs
pop
roll
icebp
push
add
mov
push
iret
sbb
sti
fnsave
test
adc
mov
pop
call
fisubs
xor
insb
jnp
popf
icebp
hlt
add
stos
addb
push
loopne
cmc
jne
add
pop
xor
rol
cmpb
sub
jmp
bound
gs
cmp
jle
aas
aam
mov
in
sub
xchg
out
mov
arpl
or
pop
in
dec
and
scas
sti
pop
fsubrl
shll
mov
mov
pop
mov
ds
je
negl
push
dec
jbe
sub
out
jo
in
adc
movb
std
adc
mov
push
inc
jecxz
lea
shlb
scas
inc
leave
test
rol
addr16
call
sub
outsl
push
jbe
inc
jmp
jns
pop
sbb
adc
outsb
inc
or
jle
dec
jl
mov
in
shlb
movsb
pop
push
and
fwait
adc
xchg
inc
sbb
xchg
xor
cmp
and
jns
test
push
int
out
mov
jae
and
test
shl
cmp
xchg
addr16
xchg
stos
pushf
mov
movsb
pop
fiadds
xlat
lret
icebp
xchg
aaa
or
jge
jne
insl
ja
mov
dec
sbb
xchg
fcoms
sub
lcall
daa
or
daa
inc
adc
sub
push
xlat
jo
out
daa
jp
adc
mov
jns
jge
lcall
sub
leave
arpl
mov
mov
add
lret
pop
jge
jge
xchg
xchg
add
adc
lcall
shr
lahf
mov
add
or
imul
sbb
xchg
adcl
mov
jle
ss
dec
aad
les
lods
mov
shrb
lds
out
gs
sahf
shll
shr
js
inc
out
mov
mov
in
adc
or
loop
ss
cltd
js
movsl
fstl
fiadds
xor
mov
adc
fdivrl
popf
xchg
scas
mov
pop
loope
xchg
push
fninit
into
mov
xor
jnp
dec
loopne
aad
mov
sti
mov
inc
and
or
mov
xchg
cmp
jbe
lock
cmp
pop
jo
mov
int
in
notb
jbe
adcb
adc
fiaddl
mov
and
mov
sub
js
adc
mov
mov
js
int
add
int
mov
out
push
add
repz
enter
inc
repnz
arpl
lods
cltd
shrb
rcll
call
hlt
scas
xor
xchg
or
in
xor
pop
std
in
iret
mov
xchg
cmp
lret
fsubl
add
add
jbe
cmpsl
popf
cmpsl
movb
icebp
pushf
mov
mov
enter
cmc
xchg
lea
or
fistpll
adc
shlb
dec
sbb
add
pop
data16
insl
ljmp
lods
icebp
or
sub
push
aaa
loopne
sbbb
push
in
arpl
test
insl
enter
int3
add
pop
xor
xor
roll
orb
push
jne
pop
xchg
fs
xchg
jmp
fisubrs
out
js
pushf
aas
std
mov
ds
out
daa
mov
test
add
daa
jb
in
mov
outsl
push
enter
cmc
pop
jae
stos
add
iret
inc
xor
push
mov
filds
jbe
mov
jge
int
inc
cwtl
test
adc
and
sub
roll
pop
scas
inc
aaa
xor
jae
jmp
mov
push
xchg
push
in
mov
xchg
test
pushf
xchg
je
rcll
lods
out
sub
lcallw
add
mov
or
and
jne
and
lds
leave
mov
jo
xor
push
lds
shlb
hlt
aas
aaa
push
popa
shll
cmp
lahf
dec
xchg
jne
dec
shlb
xlat
jmp
dec
mov
xchg
adc
arpl
jnp
push
adc
ds
rol
pop
jo
movsl
xor
je
cmp
push
hlt
cmpsb
push
pop
xor
movsb
scas
data16
pop
int3
mov
int3
repz
pop
jo
or
adc
outsl
mov
mov
xor
push
sub
inc
jle
cmp
xor
jp
iret
fiadds
mov
dec
sbb
or
lret
sbb
mov
ret
xorl
jg
packuswb
xor
pop
jge
ds
cmp
xor
in
frstor
xchg
lret
div
add
xchg
push
fdivl
mov
xchg
or
fildl
push
xchg
mov
movsl
cmpsl
jecxz
jge
push
and
stos
add
mov
out
jmp
push
cmp
xchg
mov
loopne
test
dec
dec
lds
fstpl
fdivrl
lcall
sbb
xor
clc
adc
mov
dec
xchg
cmpl
faddl
sbb
and
jle
test
sti
pop
sbb
pop
push
pop
xchg
xchg
mov
mov
sbb
mull
outsl
jl
inc
popa
lahf
into
xchg
int
scas
mov
in
unpckhps
and
cltd
pusha
mov
insl
xchg
int3
adc
loop,pn
insl
add
sbb
push
out
sub
or
out
or
mov
pop
sarl
adc
add
adc
xor
shll
mov
adc
mov
jg
and
rcr
pop
insb
mov
adc
mov
pop
jo
push
iret
jns
daa
cwtl
push
push
dec
and
sti
stos
in
lea
mov
repnz
add
lods
push
push
dec
and
push
out
dec
pop
and
xor
pop
pusha
into
scas
outsb
subb
outsl
lret
mov
pop
mov
dec
xor
push
int3
in
call
ljmp
and
sbb
dec
jns
mov
inc
imul
pushf
imul
push
push
cmp
aam
pop
clc
mov
insb
punpcklwd
lea
mov
pop
out
dec
jns
movsb
insb
test
adc
lds
leave
addr16
icebp
cmp
stc
ds
data16
popa
nop
xchg
mul
scas
inc
pop
jbe
mov
pop
xchg
push
jle
aaa
std
jnp
push
js
jo
add
push
pop
push
daa
sub
jo
in
leave
pop
loopne
sbb
lret
shll
rorl
pop
ret
idivb
mov
aad
movsl
mov
sahf
pop
fnsave
cmp
push
iret
inc
pop
sbb
pop
in
adc
or
scas
orl
pop
arpl
ja
mov
cltd
js
mov
cmp
add
into
aas
fstpt
inc
dec
inc
out
aad
xor
jb
test
les
and
call
or
and
cwtl
cmpsl
adc
imul
push
pop
enter
mov
stos
add
xor
movzbl
ffree
adcl
ret
enter
xchg
mov
or
mov
pop
insl
cmp
pop
mov
in
push
sbb
hlt
clc
mov
lea
dec
imul
inc
add
fimull
push
inc
dec
mov
insl
aad
xchg
in
cmp
aaa
notl
xor
mov
loopne
mov
and
sbb
sub
je
popf
cmp
pop
cmp
adc
fisubrl
cmc
jno
mull
xor
les
testb
int3
push
or
nop
aam
mov
or
push
scas
rcr
dec
lahf
test
cmc
sbb
mov
ds
imul
mov
xchg
fucom
inc
and
outsb
sahf
movsl
dec
mov
lcall
cmpsl
addr16
cmc
jnp
inc
insl
xchg
cmp
addb
mov
inc
xor
test
divb
push
add
rclb
divb
fnsave
lret
bound
iret
jnp
orb
cmp
adc
adc
add
popa
jbe
cmp
cmp
cmpsb
and
mov
sbb
dec
pop
stc
pusha
stc
cs
xchg
xchg
mov
popf
push
int
xor
inc
int3
push
fnstenv
popa
lock
adc
adc
ret
xchg
out
mov
jl
popa
and
jmp
fsubrl
mov
sub
adc
lods
sub
cmp
add
pop
adcw
int3
sub
ficompl
cmp
popa
mov
data16
repz
jnp
into
movsl
lods
aam
mov
test
mov
jo
frstor
push
das
pop
mov
lret
cli
sbb
aad
cmp
testl
adc
adc
and
inc
xchg
sbb
pop
pand
sub
shrb
add
push
xchg
mov
shll
daa
dec
or
in
arpl
sbb
xor
addr16
jp
ds
push
jae
sub
xorb
orb
fmull
sti
pop
cmc
push
xchg
xchg
imul
hlt
mov
or
cmpsl
sub
push
sbb
pop
insl
lahf
and
and
or
aad
cmp
pop
mov
sbb
cmp
popf
outsb
in
xor
lahf
jne
fdiv
jmp
mov
sbb
loopne
scas
add
int3
cltd
pop
xchg
jge
push
fisubrl
push
or
pushf
lcall
fwait
lds
imul
int
cmc
push
test
dec
cli
mov
inc
pop
lea
lea
inc
cmp
mov
push
roll
mov
aad
sub
mov
jo
pushf
in
sub
cmp
xchg
sarl
test
pop
jbe
imulb
sub
mov
pop
xchg
push
sub
pop
adc
in
popa
xor
adc
lahf
xor
fcmove
mov
imul
cmp
xlat
ljmp
aas
test
add
xchg
insl
mov
or
out
fwait
mov
and
adc
and
pop
jg
jge
jl
and
and
sahf
mov
jb
gs
test
in
or
movsb
mov
sbb
js
imul
xor
xor
cmp
inc
add
fadd
aam
jno
or
les
jmp
xor
mov
push
lcall
inc
lock
addr16
imul
xchg
test
inc
ss
js
pop
cmp
adc
mov
pop
insl
and
dec
mov
push
lret
xor
call
push
dec
cmp
add
push
lock
sbbl
rcrl
jp
adc
xchg
or
pop
xor
test
xchg
cltd
jmp
in
adc
xchg
xchg
lea
leave
mov
xchg
int3
cmp
mov
call
xchg
jns
xchg
les
cmp
leave
pop
and
enter
cs
test
or
inc
pop
stc
cmpb
add
sahf
mov
add
adc
je
and
int
or
sbbb
les
out
ds
ljmp
adc
jbe
adc
cmp
lods
sub
push
push
xor
lea
xchg
outsb
aam
insl
mov
fwait
pop
aad
push
inc
pop
pusha
mov
gs
stos
xor
xchg
cmp
notb
shr
lods
sub
mov
jne
cltd
xor
out
pmulhuw
xlat
inc
sub
andb
mov
mov
subb
js
pop
int3
into
jo
push
jecxz
mov
js
in
movsl
cmp
mov
dec
cmc
cmpsl
push
inc
pop
ljmp
in
sbbb
sarl
push
mov
aas
sbbl
jo
push
jno,pt
ss
leave
jp
popa
xchg
aas
cmp
pop
cmc
jg
test
lods
mov
mov
stos
jle
and
pmaxsw
cld
dec
or
push
sbb
sub
or
jno
cmp
push
aas
dec
faddl
sbb
dec
sbb
mov
push
fcoml
mov
hlt
mov
cmpsl
add
stos
out
push
lcall
mov
ds
push
sbb
jmp
push
adc
hlt
add
ret
mov
jo
lods
inc
push
shll
xor
stos
adc
lds
sub
xor
push
dec
mov
faddl
lods
and
jns
pop
cmpsb
lcall
stos
stos
cmp
int3
shlb
xor
ret
cli
fmull
fdivs
lods
push
lahf
push
test
jp
adc
insb
add
jge
and
xor
aam
outsl
and
out
pop
cwtl
mov
mov
pushf
jno
ror
rclb
push
arpl
into
insw
in
jl
adc
push
int3
int3
add
jp
and
ds
pop
in
ss
aad
pop
notl
sti
imulb
mov
push
dec
in
loope
xor
out
in
mov
pop
pop
and
sub
shll
jno,pn
stos
in
ret
jg
pop
cmp
cltd
jns
pop
clc
jecxz
mov
pop
sbb
lea
xor
mov
ja
popf
xchg
push
sub
jno
jb
stos
pusha
nop
popf
rcr
mov
pop
cmpsb
cmc
fsub
sub
scas
inc
cmp
test
fs
mov
xchg
cmp
cmpsl
xchg
jo
dec
dec
jo
push
enter
cmpsb
dec
jbe
sub
andl
call
iret
cmc
or
mov
mov
or
clc
negl
xchg
hlt
stc
mov
adc
psubsw
adc
aam
in
jne
fmulp
mov
add
lds
idivb
ret
incb
mov
xor
and
call
bound
jle
pop
mov
loopne
cmp
stos
sbb
mov
sbb
cmp
sub
adc
sub
mov
mov
pop
sbb
xchg
mov
jge
addr16
or
mov
pop
sbb
sbb
gs
cmp
mov
jo
insb
xchg
sti
sbb
and
insl
shr
sbb
js
or
xchg
cmp
fwait
push
fldt
xchg
or
inc
cmp
ss
sarb
out
repz
ljmp
dec
cmp
mov
outsb
push
or
push
orl
adc
xlat
mov
enter
movsl
mov
jno
jl
inc
cld
loope
scas
test
sbb
inc
aam
rolb
xchg
loope
cwtl
push
int3
xor
test
in
and
cmp
mov
in
xchg
mov
bound
js
dec
sbbb
leave
xchg
cld
es
call
pop
popa
xchg
sti
add
add
cmc
cmp
and
mov
aaa
loop
int3
sti
loope
push
jg
pop
mov
mov
loopne
shlb
inc
xlat
push
mov
das
fyl2x
mov
push
popf
and
enter
mov
add
fidivrs
pop
xchg
cmpsb
sub
mov
or
and
sub
lods
leave
fdivr
out
rolb
sub
fisubl
fisttps
imul
add
pop
outsb
pop
clc
lods
aam
mov
lahf
test
js
xor
add
cmp
add
xchg
cmp
std
shlb
outsb
mov
inc
stos
aas
pop
mov
and
incb
popf
outsb
mov
cmpsl
mov
loop
fcomps
sub
and
roll
and
mov
dec
mov
negb
daa
adc
lods
push
jbe
mov
clc
and
sti
add
out
cs
out
xor
lea
adc
ret
es
stos
mov
xchg
xchg
mov
xchg
push
xchg
clc
mov
les
aad
pop
out
rcrb
mov
mov
xchg
daa
jp
pop
cwtl
adc
jmp
mov
and
divl
lcall
mov
cli
sub
scas
and
jmp
sbb
out
jno
movsb
xchg
mov
popa
jle
insb
sti
subb
xchg
sub
and
test
data16
jb
mov
and
jnp
cmpsl
lcall
clc
pop
std
icebp
mov
in
int
aaa
mov
push
scas
dec
sub
popa
jmp
outsl
jl
push
insl
cs
fldcw
add
and
pusha
inc
xchg
cmp
lods
cmp
fdivrs
stos
fistpl
mov
in
add
or
adc
adc
jg
mov
mov
pop
xchg
pop
add
lcall
fcmovnb
push
adc
in
sahf
adc
dec
sub
and
push
dec
jl
add
cltd
stc
addr16
lock
mov
sbbb
pop
sbb
scas
or
in
fnsave
insb
xchg
xor
cwtl
inc
rcrb
mov
xlat
mov
mov
adcb
lahf
pushf
ss
push
jns
fimull
sbb
test
add
jnp
or
xor
sub
loope
stc
mov
int3
jns
push
jns
out
mov
adc
mov
pop
in
jg
or
test
or
jmp
sub
xor
cmpsl
sub
jmp
ja,pt
mov
jecxz
add
and
inc
add
add
insb
insl
shl
mov
notb
jns
mov
sub
imul
add
notb
sub
xor
sub
push
add
lcall
dec
movl
cmp
dec
jmp
push
pop
mov
fsubr
movsb
sub
sub
test
xor
cwtl
lret
je
insl
inc
inc
lcall
and
xor
testl
pop
repz
sub
dec
les
cmp
mov
sti
rcll
mov
xchg
add
mov
pop
insl
loopne
insl
jmp
rcr
ret
xchg
dec
fwait
jns
movsb
mov
outsb
mov
imul
ss
cmp
shll
mov
iret
data16
ja
xor
xor
out
cmp
aas
clc
push
popa
push
cmp
stos
lock
jno
cwtl
sarl
cmc
es
jns
xchg
sbb
dec
sub
sti
inc
movsb
ljmp
aam
jno
out
lods
xchg
xor
xchg
out
lods
lret
ss
and
das
lds
jle
dec
mov
adc
rcll
cmp
xchg
jbe
mov
cmp
xchg
bswap
dec
mov
fwait
mov
lods
andl
ret
jmp
pop
addr16
push
hlt
pop
dec
sahf
or
into
cmp
cltd
mov
sbb
pop
out
sahf
mov
sub
testb
mov
xchg
mov
pop
inc
sahf
and
mov
push
sub
call
mov
xlat
dec
xchg
hlt
repz
mov
jo
xchg
jnp
sbb
or
mov
mov
adc
cli
in
addr16
or
sar
rcrl
push
sbb
or
push
popa
and
mov
cmpsl
test
shlb
mov
cmp
lret
cmp
jecxz
scas
or
pop
xchg
mov
adcl
popf
shr
loope
dec
gs
pop
mov
cs
sbb
jg
push
push
jle
pop
pop
xor
sub
data16
sub
ret
dec
ret
and
add
push
or
cld
data16
fisttpll
sti
cmpsl
fstpt
add
sbb
dec
daa
std
scas
test
add
adc
sahf
adc
adc
loopne
mov
ret
mov
push
push
movsl
mov
inc
insl
xchg
clc
mov
xchg
mov
and
dec
insl
ds
addl
aas
dec
xchg
aam
dec
in
add
jno
and
push
je
xor
psubw
mov
adcb
icebp
mov
adc
cmp
dec
inc
jg
lahf
rcll
setns
sbb
sahf
xchg
or
popa
sti
js
cmp
add
sub
push
outsb
lcall
xchg
adc
test
cmp
mov
sbb
sbb
jne
shrl
aad
sub
sbb
shr
into
shlb
mov
push
sbb
push
mov
rcl
fisubl
and
inc
fiaddl
jbe
subb
loopne
push
dec
lds
sbb
jns
sahf
xorl
cmp
aad
rorb
shl
cmp
in
out
insl
jno
push
jne
push
sub
in
mov
fiaddl
or
sahf
mov
aas
mov
dec
push
pop
and
cmp
pop
xchg
inc
add
mov
mov
add
mov
aas
jb
jecxz
jne
pusha
cmp
aad
and
rep
xchg
lcall
or
sub
pusha
insl
xchg
and
mov
daa
fstpl
cmp
pushf
loopne
adc
lahf
fisttpll
lcall
inc
outsl
mov
stc
mov
inc
and
rorl
stc
inc
das
ds
pop
sbb
roll
mov
js
mov
jns
nop
push
lock
imul
imul
cmp
push
and
jns
xchg
loope
mov
jmp
call
fcomps
pop
inc
ds
push
adc
add
testl
cmp
addl
insb
loopne
movsb
sahf
push
mulb
cld
push
and
outsl
jo
adcl
iret
scas
lret
rclb
mov
not
out
sahf
mov
push
add
ret
xrstors
sbb
pushf
and
sub
fidivrl
and
lret
hlt
imul
mov
sub
sbb
pop
xlat
pop
cmpl
xchg
inc
xchg
pop
pop
dec
je
mov
ja
test
inc
add
rcr
inc
arpl
push
ret
jle
frstor
push
xor
adc
jecxz
repz
cmc
ret
sbb
xor
xor
pop
add
jl
mov
jl
cwtl
dec
pop
and
stos
decb
rcrl
add
push
aaa
fnsave
mov
or
lea
jae
jmp
inc
dec
ja
mov
or
mov
lret
insl
jecxz
imul
iret
xchg
repnz
inc
cmp
dec
outsb
xchg
shr
dec
insb
fimull
lret
out
or
in
mov
inc
lahf
xchg
mov
roll
mov
int
dec
sub
sbb
data16
stos
push
pop
imul
xchg
pop
pop
jb
cmp
or
sub
mov
pop
dec
jp
jmp
lods
stos
mov
test
les
xor
mov
daa
inc
repnz
mov
leave
lods
mov
pop
sbb
sti
inc
out
inc
gs
and
dec
lret
dec
lret
and
mov
cvtps2pi
push
lods
add
push
enter
negb
testl
mov
popa
pop
cmc
fsubl
push
mov
pop
sub
pop
aad
fbstp
data16
scas
adc
and
gs
jne
jo
bound
mov
test
jo
cwtl
insl
xchg
aas
fwait
aaa
adc
pusha
stos
push
insb
decb
in
shll
xor
or
movsl
scas
pop
fistps
pop
fimull
roll
or
push
lea
pop
xchg
subl
mov
aad
insb
cmp
xchg
sub
sub
adc
jge
scas
ret
jg
or
sub
hlt
faddp
adc
push
xchg
xchg
lods
scas
repz
and
mov
inc
sahf
in
xlat
lock
fwait
dec
push
push
bound
js
cld
shlb
sub
inc
xlat
mov
push
test
je
jmp
jle
pop
gs
fwait
test
sbb
sub
pop
inc
in
dec
and
repnz
es
movsb
sub
jmp
std
sbb
sarb
das
xchg
hlt
lcall
scas
mov
jnp
xlat
out
xchg
in
das
mov
inc
lret
xchg
jne
lahf
popf
sub
or
bound
inc
mov
cmp
inc
into
fdivrs
inc
fwait
sub
dec
mov
jbe
aas
int
mov
and
push
fwait
and
and
loopne
add
iret
mov
ds
ja
xor
jno
sahf
out
mov
jb
scas
xchg
jnp
or
jmp
enter
sti
hlt
dec
mov
daa
aam
aam
out
xor
mov
nop
shl
out
fcomp
adc
push
mov
cmpsb
xchg
sarl
adc
out
inc
fadds
test
xchg
jbe
ret
fs
lret
fdiv
xchg
test
ret
repnz
pop
inc
ficompl
jge
aam
pusha
mov
add
xchg
lea
lret
into
in
xchg
add
ss
xchg
push
sahf
add
mov
mov
mov
xchg
mov
aaa
call
xchg
fcmovbe
sub
cmpsb
mov
fldenv
mov
scas
call
stc
mov
and
pop
fnstsw
mov
add
ret
lahf
fbld
dec
cmpl
ds
inc
jge
push
mov
aad
mov
bound
xchg
mov
arpl
lahf
mov
inc
je
cs
lods
in
mov
aam
cmp
mov
adc
aam
jecxz
hlt
in
pop
xor
adc
xchg
xchg
mov
mov
pop
mov
addr16
pop
stos
cli
mov
pop
fidivrl
sub
add
popa
sahf
pop
jo
and
pop
in
mov
adc
sub
mov
rcll
ds
dec
jmp
je
in
mov
mov
jo
push
xchg
andl
es
cwtl
push
jo
js
cmp
int3
hlt
jno
ljmp
adc
mov
mov
mov
stos
test
cmp
xchg
stos
outsb
test
imul
push
daa
inc
pop
repz
mov
repz
dec
mov
inc
pop
popf
int
or
dec
pop
shll
pushf
mov
pop
call
lahf
outsl
movsb
vpcmpgtb
mov
dec
das
loopne
adc
sub
mov
sub
repz
icebp
mov
pusha
mov
mov
fwait
into
icebp
testl
imul
add
out
or
shrb
push
test
xchg
jge
adc
std
rorl
inc
pop
push
xchg
mov
imul
add
add
movsl
ficomps
cmp
push
lret
and
fldt
mov
stos
mov
scas
xchg
in
mov
popa
xchg
and
mov
gs
idivb
arpl
add
dec
push
js
and
jae
lds
mov
je
inc
loopne
mov
out
dec
and
xchg
in
std
lods
in
test
andl
or
in
cmc
cmp
pop
loopne
ret
jg
and
out
js
daa
mov
or
lcall
addb
push
jge
or
int
int3
add
hlt
call
mov
and
pushf
push
cs
je
xor
push
outsl
mov
add
fistpl
mov
mov
dec
or
mov
mov
xchg
xor
imul
push
js
js
insb
andb
mov
mov
loop
inc
js
cmp
lret
pusha
lods
nop
out
out
pslld
lret
and
add
adc
jns
xchg
loope
cmp
mulb
mov
nop
mov
xchg
lahf
mov
inc
inc
roll
mov
cwtl
mov
pop
cmp
dec
out
xchg
inc
mov
mov
xor
sbb
inc
push
and
aaa
lret
jmp
cmp
lret
std
dec
mov
push
cmp
adc
push
out
sbbb
clc
pop
dec
pop
out
insl
sub
mov
out
push
std
ljmp
add
xchg
popa
clc
xchg
scas
mov
ret
fsubs
jmp
outsb
jbe
js
mov
xchg
inc
sbb
add
fnstsw
jge
repnz
movsl
stos
sti
pop
xchg
lods
xchg
movsb
pop
pusha
dec
cmp
and
adc
cmpsl
int3
jp
je
pusha
imul
xchg
cld
std
idivb
aas
into
cltd
ds
or
cmpl
mov
sbb
lahf
cmpsl
cltd
lcall
outsb
mov
stos
inc
sub
inc
aam
andl
mov
aad
xchg
idivl
sbb
mov
aad
push
xchg
repnz
xor
xor
stos
cmp
pop
xchg
and
or
orl
mov
xchg
mov
dec
aad
sub
jge
aaa
pop
dec
and
mov
or
cwtl
icebp
push
fidivs
cwtl
inc
xor
loop
dec
jp
inc
and
mov
repz
popa
push
jne
push
mov
or
test
shrb
mov
or
dec
xor
es
ret
mov
fsubl
stos
mov
movsl
ret
fldl
lahf
dec
mov
inc
lahf
rcrb
shl
jo
pop
mov
mov
pop
iret
out
mov
dec
push
out
push
sar
xor
pop
cmp
jbe
mov
lret
sub
cld
and
shll
mov
out
pop
lds
inc
jnp
ja
test
push
or
shrb
sarb
add
xor
push
fidivs
pop
je
rcrl
sub
mov
adc
leave
insl
and
mov
clc
scas
jns
ret
xchg
daa
jge
cmp
mov
std
sub
adc
add
je
cwtl
add
icebp
hlt
jae
test
push
outsl
fldenv
xchg
mov
jp
cmp
adc
xchg
lea
xchg
hlt
fadds
pop
sbb
sarb
and
cmp
cmp
out
andb
lahf
aas
adc
daa
mov
push
bswap
mov
pop
push
pop
xchg
adc
mov
mov
dec
imul
repz
lods
xlat
stos
leave
daa
mov
xchg
sahf
in
jl
or
jge
mov
lods
dec
lret
mov
filds
pop
mov
ret
in
in
lahf
cmp
add
lcall
inc
xchg
in
fst
mov
movsb
cwtl
push
popf
cld
pop
add
arpl
push
lret
repnz
xchg
mov
and
cmp
cmp
aas
scas
pop
sub
and
in
cmpsl
push
imul
add
mov
pop
or
sbb
push
adc
sub
popw
xchg
or
jle
mull
and
pop
push
iret
dec
aas
push
add
mov
movsl
xor
testb
sbb
xchg
or
lods
cwtl
mov
or
mov
sub
pop
int3
push
jp
xchg
push
rcl
xor
outsl
je
mov
lcall
mov
sub
inc
jno
push
out
xorb
push
leave
adc
sub
add
cs
push
mov
subb
loope
push
jo
dec
jp
lods
ficompl
dec
adc
das
outsl
add
popf
pop
pop
les
popa
iret
lds
out
scas
sub
inc
fdivrl
jmp
out
out
lahf
lds
iret
stos
mov
out
xchg
out
in
adc
stos
sub
xor
data16
mov
add
mov
insb
loopne
jecxz
lds
cmp
mov
lods
cmpsl
popf
addl
adc
adc
sbb
iret
cmpsl
mov
mov
pop
ljmp
lret
push
jecxz
push
jae
aad
in
divl
sbb
jns
sbb
dec
dec
jb
cmp
mov
mov
mov
sahf
jge
jmp
dec
adc
jle
push
sub
adc
arpl
je
xchg
int3
sti
sarl
mov
mov
push
pop
push
xor
cs
insl
xchg
cmp
mov
cmp
nop
or
dec
or
jl
cwtl
addr16
and
out
fistl
mov
in
ret
inc
sub
aaa
mov
sub
out
fisubs
mov
cmp
push
ficoms
aad
aad
pop
xchg
aaa
pop
and
xchg
jp
icebp
pushf
mov
jb
jle
cwtl
sub
mov
adc
stc
adc
dec
mov
jb
outsl
sarl
xor
imul
sbb
lahf
fmull
push
insl
hlt
fldenv
jae
std
mov
clc
cmpsl
in
dec
ror
dec
mov
push
push
and
lods
lea
shrl
lret
fists
test
scas
mov
out
xor
cld
cmp
cmp
add
fimull
imul
inc
cmp
mov
test
mov
jae
mov
xlat
push
inc
add
popa
fcmovne
add
mov
add
add
jl
and
and
pop
mov
add
subb
mov
out
les
fimuls
lea
pop
ds
mov
mov
aam
mov
pop
std
dec
xor
shlb
pop
enter
popa
sub
and
push
shll
dec
jbe
pop
cwtl
pop
movsl
mov
stos
int
inc
inc
push
sbb
add
js
test
les
sub
clc
adc
ret
insl
lcall
dec
js
cwtl
in
repz
test
mov
adc
jbe
sbb
lods
lods
jecxz
push
out
dec
ficoms
xchg
xchg
jbe
repnz
mov
nop
add
in
jo
sbb
sbb
pushf
loopne
push
xchg
mov
adc
cmc
dec
dec
mov
sahf
jo
repnz
and
leave
xchg
insl
aad
int
mov
xchg
je
sub
cli
fwait
or
or
inc
xor
push
jmp
movsb
fidivrl
push
mov
ret
add
pop
fstpl
push
divb
jns
cmc
mov
push
adc
push
leave
jle
popa
es
setbe
xchg
std
adc
xchg
lea
repz
jnp
pop
mov
repz
mov
and
jle
xchg
aaa
and
out
scas
add
ret
mov
dec
imul
and
sub
pop
movsb
mov
mov
les
testl
xchg
pop
mov
sti
cld
push
inc
sub
ss
cmp
jecxz
jne
jmp
popf
pop
popa
in
ja
pop
and
mov
mov
or
pop
inc
cmc
cmp
scas
cmc
jp
cmpsl
ficoml
in
add
mov
nop
jnp
xchg
cmp
mov
mov
addl
jle
add
rcr
add
out
sbb
add
lcall
lahf
xchg
jae
and
fsub
gs
hlt
and
popf
rcrb
pop
mov
fstpt
shll
pop
inc
inc
add
mov
mov
mov
push
xchg
fdivrl
xchg
fcoml
ret
adc
push
aas
adc
pop
adc
sub
inc
or
mov
xchg
je
inc
stos
xchg
sbb
fiaddl
xchg
icebp
sbb
or
jo
mov
xchg
insb
out
pop
mov
data16
sub
sub
cmpsb
push
addl
popf
push
insb
bound
jnp
leave
aaa
and
xchg
jmp
sub
imul
stc
lcall
pop
int3
sub
rcrb
add
out
pop
aas
jno
cmpsl
add
mov
rcrl
inc
push
dec
sub
cmp
sarb
mov
iret
fsts
insl
mov
test
xor
or
stc
sbb
rorb
rcll
pop
mov
pushf
int3
mov
pop
popf
sub
out
inc
lahf
add
lahf
pop
pop
cli
rolb
xchg
subl
lret
scas
out
addr16
pop
stos
jne
data16
mov
xor
sahf
dec
jecxz
int3
xchg
push
jo
lods
jge
das
mov
imul
xlat
sub
lret
mov
lcall
cmpb
and
inc
jmp
cmp
jbe
mov
mov
iret
outsl
inc
jb
adc
sbb
enter
mov
xchg
cld
jno
xchg
stc
movsb
inc
enter
xchg
nop
scas
push
imul
outsl
stos
test
xchg
ss
push
fstp
sub
std
hlt
ret
sub
sub
xchg
xor
sti
sahf
ret
inc
xor
and
rcrl
shll
adc
pop
mov
fidivs
inc
pop
sub
add
nop
pop
add
insl
js
aas
lods
xchg
mov
fs
int3
mov
loope
jmp
mov
adc
cmp
lcall
ja
sbb
push
cmpsl
xchg
das
xchg
lea
xchg
sbb
subb
cwtl
insb
sub
adc
js
mov
jle
dec
cs
jecxz
jno
dec
incl
xor
lds
aaa
or
popa
xchg
add
dec
add
cmp
dec
sbb
int3
stos
inc
sub
sub
and
push
mov
arpl
xlat
adc
mov
orl
adc
icebp
je
cmp
sub
jo
mov
mov
notl
inc
adc
push
push
or
mov
mov
dec
gs
jbe
pop
sti
sub
test
cmpsb
inc
jbe
mov
std
jo
ret
test
inc
xchg
dec
cld
test
sub
cli
jno
or
adc
cmp
sbb
lods
test
xchg
sbb
pusha
push
xor
dec
cmp
add
adc
mov
loope
loop
outsb
jns
lea
jl
insl
add
pusha
xor
push
sti
stc
mov
mov
mov
sbb
xchg
xor
mov
and
jo
jmp
mov
into
shll
lods
das
xor
sbb
paddq
mov
pop
sub
adc
sub
cli
lock
adc
gs
add
ret
jo
push
xor
dec
test
ljmp
dec
lret
scas
sbb
jo
add
xchg
mov
inc
dec
imul
movsb
addr16
lret
idivl
aam
outsb
push
fisubrs
nop
mov
or
movsb
loope
sbb
dec
pop
loop
dec
js
shlb
aas
shl
cmpsl
leave
int3
mov
mov
dec
add
mov
lods
addr16
out
inc
pop
inc
test
cmp
mov
jge
pop
push
mov
insb
pop
call
push
mov
adc
rcrl
adc
loop
mov
sbb
rcrb
jno
es
cmp
sti
mov
mov
pop
add
add
std
mov
jns
sub
ret
fs
ret
leave
pusha
pop
xor
jns
inc
lods
repnz
shlb
cld
rcll
sbb
jmp
sub
loope,pn
outsl
popa
and
int3
mov
pop
cwtl
or
lret
cld
adcb
ret
dec
into
test
mov
insl
jg
daa
loop
sbb
lret
and
pop
aas
fisttpl
jbe
subb
imul
xchg
decl
call
in
pop
pop
addb
push
pushf
andl
xor
cmp
pop
sbb
pusha
jb
or
inc
stos
aas
xchg
sti
or
jb
push
movsl
inc
lds
mov
frstor
xor
or
adc
stos
pusha
outsb
pop
popa
mov
call
adcb
pop
ss
pop
xchg
xchg
jbe
mov
sbb
loope
imul
bound
je
mov
and
pop
push
xor
xor
lods
adc
jmp
jb
nop
out
push
into
lock
jmp
jo
adc
aad
jne
and
sbb
sahf
xchg
and
push
rcrb
je
daa
bound
mov
mov
pop
mov
int
inc
testl
repz
cmpsb
and
push
test
mov
mov
add
jae
out
push
in
inc
pop
jp
shrb
jge
add
mov
pop
call
inc
xor
mov
mov
xor
and
sbb
pop
out
je
out
lods
ds
in
insb
push
jge
mov
dec
arpl
das
sahf
mov
jg
mov
repnz
fs
jns
pop
jbe
lods
sti
add
out
loopne
imul
data16
add
and
fstpt
lret
mov
xchg
arpl
xchg
mov
sub
pop
rcl
push
ret
xor
int
repz
mov
push
xchg
loopne
testl
lcall
call
add
les
xchg
dec
mov
push
push
aad
or
int
ror
imul
fs
and
out
push
cmp
push
push
sub
in
notb
push
mov
adc
push
ss
and
cmp
mov
fidivrs
mov
fistps
aad
xor
sub
mov
mov
xor
fcompl
inc
xorb
sbb
das
ss
dec
test
lods
xor
pop
shlb
inc
sti
dec
insb
adc
push
out
arpl
dec
lea
pop
adc
jg
mov
jmp
jb
pop
or
push
pop
push
and
mov
mov
cltd
xchg
in
xlat
dec
push
sbb
xor
inc
jno
cmc
movsl
scas
iret
sbb
pop
daa
cmpsl
negl
or
fimull
xchg
sub
aad
sub
xor
mov
daa
ret
sbb
mov
or
xchg
das
pop
xchg
daa
movsl
outsl
jno
push
clc
mov
lcall
rol
cmp
call
or
lds
stos
popa
jbe
jmp
mov
pop
loop
insb
sti
sub
mov
lret
ret
aas
mov
dec
push
loopne
fs
fdivrl
call
mov
nop
loope
cltd
adc
mov
ret
sbb
test
out
data16
lods
cltd
push
fwait
int
or
or
outsl
jmp
push
out
rcrb
loop
jmp
mov
dec
icebp
jne
sbb
mov
out
jp
lcall
imul
pop
add
inc
loop
mov
mov
mov
jns
insb
push
push
adc
sub
loop
pushf
outsl
repz
add
mov
pushf
adc
inc
loopne
aaa
pusha
rorb
in
pop
jle
fldcw
sub
lret
repz
scas
stos
jbe
int3
dec
fsubl
loop
loope
inc
xlat
pop
out
call
clc
inc
xchg
inc
pushf
cmpsl
mov
xchg
rol
add
mov
lods
movsl
fisttps
inc
in
bts
add
sbb
cld
add
sarb
and
push
jge
lock
test
neg
adc
mov
xor
bound
adc
stos
sub
jmp
mov
jl
rcll
jmp
cmp
pushl
push
push
pop
pop
fisttpl
jge
pop
nop
jmp
add
stos
jbe
dec
inc
mov
pushf
jl
int3
jp
xlat
arpl
sarl
cmpsb
push
xchg
and
push
adc
sub
stos
mov
sub
mov
push
mov
aad
ljmp
sub
scas
mov
icebp
and
mov
fnstcw
cld
mov
in
outsl
call
or
adc
pop
ds
sbb
jmp
and
je
pop
lods
dec
pop
cmp
xor
jo
adc
insb
stos
lods
cmp
push
inc
iret
aad
adc
and
inc
mov
inc
jo
stos
sub
fldl
fcoml
imul
add
fimuls
fstps
ljmp
insb
pop
mov
pushf
int3
mov
sbbl
push
mov
mov
in
aad
sbb
insb
dec
push
mov
sahf
adc
sbb
mov
xor
mov
dec
loopne
sahf
sbb
pushf
scas
daa
mov
push
hlt
pusha
cmpsb
test
cmp
repz
xor
popa
jns
aaa
jns
test
out
addr16
mov
outsl
jns
subb
clc
hlt
loope
mov
jnp
std
arpl
push
inc
es
je
jecxz
scas
sub
mov
movsb
mov
mov
jno
or
sbb
fldl
mov
lret
mov
rorb
popa
sbb
or
outsl
lock
push
xchg
daa
in
fsts
add
pusha
addr16
stos
sub
jo
iret
inc
gs
shl
pop
rcrb
xlat
dec
add
leave
add
xchg
jmp
les
add
pop
mov
mov
popa
pop
repz
popf
push
or
mov
pop
dec
gs
xchg
mov
inc
inc
hlt
ja
cmp
movsb
out
pusha
outsb
sub
aaa
lret
cmp
adc
mov
testl
mov
sti
cli
push
and
pop
pop
mov
cwtl
in
xor
sbb
jle
xor
dec
lods
leave
dec
daa
in
fadd
aaa
adc
orb
push
sbb
mov
adc
push
or
mov
inc
inc
std
cwtl
add
mov
inc
movsl
test
push
cmpsl
lret
or
nop
insl
push
loope
xor
pop
mov
adc
lods
in
rclb
out
push
icebp
dec
and
ret
es
add
pusha
sbb
in
xor
adc
dec
mov
pop
enter
xor
adc
cmp
dec
sti
push
sbb
mov
in
and
and
pop
dec
lea
add
jg
fdivrs
push
sub
sub
test
ss
mov
sbb
jl
push
sub
jle
xchg
sub
inc
cltd
pop
sbb
push
bound
mov
cmc
adc
imul
pop
ss
adc
aaa
adc
sbb
popf
jae
add
or
int
lea
mov
dec
lret
dec
mov
xor
adc
push
rcrl
mov
notl
pop
jno
out
and
mov
arpl
push
dec
xor
xor
inc
dec
cmp
pop
hlt
inc
pop
js
loopne
ficoml
pop
sub
bound
lods
jg
into
and
pusha
popa
inc
movsb
jge
push
subl
cmp
daa
add
dec
adc
inc
lret
jb
repnz
pop
push
add
leave
pop
hlt
insb
xchg
rclb
aad
cmp
int3
jo
outsl
test
cmp
arpl
shll
and
cmp
out
std
addr16
aaa
add
sbb
add
arpl
sbb
sub
add
push
cmpsl
jb
outsb
ljmp
je
cltd
sti
inc
mov
lods
sar
jge
inc
loop
pop
jbe
ja
insl
cmp
push
mov
scas
xor
sbb
jecxz
add
outsb
mov
push
xor
mov
inc
xchg
cmp
shrb
jp
inc
fwait
inc
lods
aad
mov
nop
out
bound
and
lds
inc
fcoms
les
pop
pop
jg
clc
int
sarb
sub
adc
dec
pop
pop
jp
jmp
cmp
ja
sub
pop
test
shlb
add
pop
push
or
sbb
ss
pop
lahf
ja
loope
jl
ljmp
inc
dec
add
or
insb
push
imul
dec
imul
inc
arpl
mov
in
jns
lea
loop
ret
or
xchg
ret
push
xor
cmp
in
xor
lods
hlt
jo
mov
sbb
and
mov
pusha
cmp
insb
jne
sbb
push
outsl
xchg
inc
pop
insb
mov
cmp
cmp
fs
push
addr16
enter
scas
push
shll
outsb
test
popf
lret
pop
lods
xor
pop
push
mov
add
jmp
and
sbb
and
lea
mov
scas
fisttpl
lods
dec
mov
xor
fisubs
insl
mov
push
cmp
pop
int
test
mov
xlat
or
ret
pop
mov
and
sbb
in
mov
int
cmp
repnz
insl
adc
push
mov
fadd
xor
aam
movq
sub
dec
dec
pop
mov
or
dec
xor
aam
loope
ffreep
mov
adc
jnp
or
pusha
sub
jo
sbb
push
leave
clc
shll
mov
pushf
outsb
and
mov
in
cmpl
adc
lods
inc
imul
and
mull
pop
inc
test
dec
je
jb
pop
movsl
xor
pushf
mov
es
push
inc
add
push
adc
aaa
and
sbb
sub
xor
inc
mov
call
ljmp
jmp
sti
xchg
fcmovnb
pop
or
enter
nop
dec
sbb
ja
jg
xor
fwait
les
cmp
test
mov
data16
call
add
mov
mov
fildll
je
pop
cmp
jb
xor
or
sub
sahf
jmp
push
out
jne
pop
das
mov
dec
xorl
adc
jp
sbb
jge
cmc
js
imul
xor
push
mov
test
mov
adc
ljmp
or
aaa
arpl
adc
mov
adcl
adc
lods
iret
or
cmp
dec
in
add
adc
mov
mov
adc
xor
movsl
xor
cmp
outsl
add
and
add
mull
xor
mov
lcall
xchg
mov
mov
add
andb
mov
jnp
insl
pop
or
inc
or
and
sbb
jne
mov
inc
push
dec
pop
enter
int
imul
stos
sub
pop
mov
ljmp
jg
pop
cmp
ret
push
push
gs
mov
jno
dec
bswap
ficompl
ret
add
ja
inc
push
aas
enter
sbb
aas
jg
dec
es
fdivrl
sahf
cmp
inc
inc
push
jns
aas
dec
add
jno
inc
xor
push
xor
aaa
adcb
sahf
jge
insl
dec
and
imul
xor
sbb
mov
pop
ss
push
mov
xor
mov
enter
adc
dec
mov
and
push
adc
xchg
adc
out
pop
imul
cwtl
int3
xor
or
xchg
mov
hlt
and
rcll
xor
enter
fisttpl
outsl
add
cmpsb
pop
push
jns
popa
pop
pop
sub
lea
ljmp
push
push
lods
sub
mov
mov
adc
add
mov
lret
test
adc
adcl
shrl
shll
push
ss
lret
xor
outsb
cmp
lods
sub
popa
mov
cld
jecxz
subb
bound
out
popf
mov
adc
xor
lods
sub
pop
sub
inc
xor
fistpll
jle
sub
aam
cmp
ljmp
inc
std
push
jns
mov
cli
iret
incl
aaa
adc
mov
aad
jne
dec
pop
rorb
mov
leave
and
sbb
aas
push
lods
insb
inc
insl
xor
mov
mov
xor
outsb
outsl
xor
xchg
add
push
mov
sub
xor
or
cmp
insl
mov
xchg
cmpsb
mov
mov
adc
jbe
leave
sub
aam
mov
inc
sub
inc
lret
adc
clc
mov
mov
mov
and
pushf
pop
mov
cmpl
jecxz
pop
mov
sbb
cwtl
test
inc
dec
inc
sti
jge
stc
clc
lods
mov
or
xchg
cmpsb
scas
pop
stos
mov
movsl
pop
bound
sub
xor
adc
int
cmc
mov
orl
sbb
adc
cmp
push
leave
sbb
jae
jns
hlt
inc
jbe
jmp
ret
and
sarl
mov
mov
outsb
cmp
lret
dec
xchg
inc
pusha
pop
add
pop
push
shll
mov
jmp
inc
inc
xlat
jbe
add
scas
push
pop
shll
adc
out
xor
jmp
dec
enter
or
xor
hlt
adc
inc
adc
push
enter
pop
push
sub
xor
xor
cmp
dec
push
pop
fisttpll
add
mov
or
inc
into
insb
cmp
sbb
push
pop
mov
out
pop
mov
into
xor
cmp
xchg
shl
sbb
jno,pt
or
fisttps
adc
mov
push
pop
push
icebp
adc
inc
lods
test
or
adc
cmp
adc
pop
jns
hlt
or
sub
xchg
cmp
sbb
sub
jno
dec
mov
xchg
gs
test
pop
mov
jl
lcall
xor
nop
enter
call
cmc
mov
ret
sub
jp
gs
adc
imulb
dec
jnp
adc
mov
outsb
js
xchg
inc
pop
or
pop
pop
cmp
sbb
sti
pop
sbb
insb
jnp
test
inc
push
xor
xchg
sbb
push
fs
imul
sub
jo
jb
pop
into
outsl
lods
inc
rorb
pop
inc
inc
xlat
pop
adc
hlt
push
or
or
aad
mov
mov
sub
and
fsubrs
adc
or
cmp
hlt
push
jp
jno,pn
and
or
lcall
inc
inc
call
inc
aas
bound
jl
cli
jb
and
xchg
int
add
jno
cmp
sbb
add
add
sti
push
inc
adc
push
stos
jg
lahf
lods
add
pop
inc
aaa
inc
mov
jp
pop
add
add
adc
std
jp
adc
sbbb
sub
sub
jne
cmpsl
repz
in
cld
mov
push
fldcw
and
aas
int3
sbb
push
sub
fsubrp
arpl
and
inc
jle
mov
inc
cmp
adc
dec
cmp
xor
mov
add
cmp
std
das
mov
sbb
add
adcl
insb
daa
pop
mov
jnp
rorl
cmp
mov
neg
push
mov
ret
sbb
dec
test
les
jbe
pop
xor
push
clc
mov
pop
mov
fdivl
mov
pop
sbb
jl
or
dec
movsl
loope
mov
rcrl
inc
inc
mov
mov
adc
pop
imull
sbb
sti
test
cmp
xchg
daa
cmp
push
jnp
jbe
mov
push
push
cmp
jnp
pusha
mov
mov
fucom
xchg
mov
fisubs
dec
test
clc
cmpsl
cmp
mov
lahf
mov
movsb
mov
xor
pushaw
jnp
je
push
ss
repnz
pop
sbb
pop
adc
cmpsb
loope
aas
shll
push
or
jbe
sbb
cld
cmpsb
and
outsl
sub
movsl
inc
pop
add
mov
dec
push
sbb
out
in
cld
mov
dec
mov
jmp
push
dec
insb
ret
adc
xchg
pop
inc
dec
or
std
jns
outsl
sbb
fstpt
mov
pop
insb
lds
fnstenv
sbb
pop
mov
xchg
shr
adcl
mov
mov
and
imull
push
movsl
into
fistl
jmp
adc
xchg
shrb
outsl
nop
and
fisubrl
std
lret
std
sar
cmpsl
imul
bound
inc
and
into
js
cli
hlt
out
leave
rcll
ss
cli
jae
subl
push
imul
mov
push
sub
xchg
inc
push
jl
mov
jbe
fwait
test
enter
nop
and
cmp
adc
andl
lahf
leave
fdivs
adc
sbb
xchg
outsl
mov
pop
add
int
pop
or
dec
pushaw
jp
cs
sub
sub
sbb
mov
test
std
stos
pop
test
jne
enter
daa
pop
jnp
ja
adc
pushf
mov
adc
pop
or
cmp
rclb
sub
cmp
pusha
pusha
xchg
jp
cmc
je,pn
dec
les
dec
adc
cltd
rclb
sbb
add
bound
stos
clc
fsubrs
mov
mov
push
mov
mov
cs
hlt
outsb
fbld
mov
or
test
pop
into
mov
sbb
pop
icebp
sub
notl
add
pusha
inc
arpl
and
add
cld
mov
jg
sbb
fs
adc
push
or
inc
cmp
push
sbb
pushf
outsb
push
outsl
ret
ret
rorl
push
jmp
sarb
inc
jp
into
jg
jge
pop
push
mov
mov
or
xor
jl
xor
or
inc
and
inc
push
test
sub
and
jl
rorl
bound
popa
sarb
jnp
adc
js
inc
std
pop
jnp
adc
lcall
in
mov
jge
push
xor
push
or
aas
xchg
jl
cmp
sbb
ljmp
and
mov
cmpsb
stc
sbb
adc
or
inc
sbb
pop
xor
scas
add
icebp
adcl
jnp
adc
dec
pop
cmp
xor
push
lods
rcrl
push
mov
ljmp
out
push
push
shr
ret
jge
test
mov
adcl
push
mov
and
femms
mov
xchg
scas
fldpi
mov
sbb
sbb
add
adcb
push
jb
fld
je
push
mov
cltd
mov
sbb
insl
pusha
insb
xor
insb
jbe
outsb
in
xor
adc
sbbl
xchg
loope
dec
mov
das
cmp
xchg
mov
inc
outsl
pushf
xor
inc
jp,pn
sub
sahf
mov
xor
outsb
outsb
dec
cmp
adcl
jge
outsb
pushf
inc
push
jecxz
or
mov
sub
sub
in
jl
daa
push
stos
push
sbb
ljmp
push
pop
shrl
push
je
xchg
roll
mov
int
lea
mov
stc
imul
inc
or
xor
lahf
cmp
iret
fcmovbe
xchg
xchg
inc
jle
mov
sbb
inc
push
popa
cmp
sbb
imul
jge
mov
inc
push
pusha
adc
fidivrl
or
lea
and
cmp
popa
xor
addl
or
lahf
ret
insl
jge
lret
pop
mov
fldcw
jg
cmp
inc
aaa
mov
inc
or
dec
inc
jno
xor
jl
test
and
inc
jg
outsl
inc
push
cmp
addr16
in
inc
add
testl
mov
sti
push
ljmp
ja
xor
dec
cmp
movsl
lods
fsubp
sahf
roll
jmp
and
jno
lea
push
adc
test
cmp
jnp
adc
xchg
ja
imul
imul
push
imul
and
rcr
or
repnz
xor
dec
push
das
ss
mov
enter
mov
mov
xor
mov
sbb
fnstcw
pop
jno
fnstenv
dec
out
add
xor
enter
lcall
insl
aaa
in
imul
sub
mov
add
pushf
push
push
inc
jno
mov
mov
orl
inc
pop
sub
sub
add
sbb
pusha
testl
divb
prefetch
mov
enter
mov
iret
in
stos
mull
shr
push
mov
dec
icebp
and
cld
inc
enter
xchg
or
dec
or
jb
leave
aas
mov
and
inc
push
popf
arpl
mov
mov
or
fimuls
add
jle
jnp
fimuls
xchg
push
sahf
mov
mov
inc
movsl
or
outsl
ss
mov
or
push
insb
xor
popa
insb
mov
and
sbb
mov
sub
cmp
lret
lods
imul
mov
inc
push
fnstsw
and
inc
inc
das
sub
lea
daa
popa
inc
inc
lahf
xor
xorb
insl
jne
add
adc
imul
cmp
fcompl
xor
les
imul
push
insl
stc
adc
roll
dec
lret
cs
insb
mov
and
mov
dec
mov
pop
jo
lret
shl
mov
aaa
jne
jecxz
sbb
pop
add
jbe
sbb
push
adc
cmpl
dec
jbe
push
subl
add
data16
call
sahf
push
cmp
jmp
lahf
scas
dec
pop
xor
es
sbb
jl
mov
mov
mov
inc
jne
imul
push
out
or
inc
enter
mov
sbb
dec
push
xchg
int3
std
loopne
sti
sbb
popa
or
push
mov
sbb
mov
xor
clc
lahf
sub
je
daa
push
xchg
pushf
rorl
cltd
push
int3
sub
cmp
int3
fs
sub
shll
loopne
popf
vpunpckhbw
push
mov
mov
jg
or
sub
ficompl
mov
add
flds
test
aad
fdivl
loope
cmpsl
fs
clc
sarl
popa
adc
loopne
mov
xchg
and
icebp
aam
inc
mov
xor
pop
sub
js
outsl
test
xchg
pop
daa
cwtl
lahf
add
lret
pop
or
sti
jae
mov
mov
xchg
dec
mov
dec
sub
sub
pushf
mov
aad
out
add
addr16
lret
mov
jmp
jns,pt
pop
or
inc
fsubrl
mov
or
insb
add
iret
dec
popf
cmp
jo
insl
or
aas
insl
push
cwtl
fadd
dec
shll
shlb
push
adc
cmp
cmp
sub
stc
xchg
js
lods
mov
jo
cmp
mov
clc
shrb
arpl
xor
mov
push
pop
js
xchg
aad
into
inc
leave
add
out
daa
ds
pop
jo
mov
push
inc
jle
rol
arpl
insb
daa
movsb
add
or
add
gs
mov
out
out
add
pop
sub
xorl
pop
inc
test
cmp
push
das
fs
test
cltd
mov
rorb
in
loopne
xlat
fimuls
idiv
xchg
cmpb
out
pop
scas
inc
out
lock
and
in
fimuls
and
daa
mov
and
jb
sbb
push
addl
xor
push
hlt
push
mov
push
mov
loop
dec
add
nop
ss
cmpsb
xorl
sti
lods
stos
sarl
sub
inc
cmpsb
in
mov
xchg
mov
scas
sub
mov
addl
inc
cltd
xor
sti
xchg
and
jno
aaa
into
scas
dec
mov
sub
jecxz
pop
adc
lods
dec
aaa
sahf
jbe
mov
clc
out
sbb
and
mov
mov
stc
or
cmp
inc
cmpsl
andl
jbe
ficoml
lds
inc
sub
sbb
jp
dec
or
jecxz
adcl
sbb
movsb
insl
mov
or
in
aad
sub
jl
cmp
insl
mov
fs
jecxz
pusha
loop
adc
sbb
sub
sti
lahf
rorl
jb
mov
int
outsb
popa
fmull
jb
push
sbbl
push
and
bound
lock
ret
inc
test
jbe
mov
movsb
ret
mov
aaa
aam
ja
pop
sub
outsl
loopne
xchg
mov
sub
insl
pop
aam
mov
jae
xchg
das
or
mov
pusha
cmp
pop
sub
test
imul
popa
push
popf
adc
xchg
lea
xchg
loopne
call
and
mov
pop
lds
rcr
lret
je
or
mov
leave
ja
fwait
sbb
cmpsb
dec
xchg
inc
push
aad
int3
int
cli
pop
loopne
push
mov
adc
xchg
mov
cmp
add
fcomps
push
leave
jbe
inc
add
pop
adc
add
adc
orl
and
push
pop
jmp
cwtl
loop
lahf
repz
lret
jle
mov
pop
dec
push
jle
xchg
xchg
and
icebp
shll
mov
ficompl
or
imul
ret
xor
xchg
cmp
ret
sbb
and
mov
jns
mov
pop
cmp
leave
xchg
into
cmp
push
addr16
sbb
mov
push
cmp
out
pop
cwtl
stos
dec
inc
mov
sub
push
pushf
ss
mov
mov
xchg
add
sbb
stc
mov
fadds
mov
shll
dec
mov
sbb
inc
mov
iret
pop
addr16
adc
and
lods
ds
xchg
and
cs
movsl
mov
pop
rclb
fsubrs
loope
pop
iret
mov
hlt
pusha
aam
mov
cmp
sbb
test
cmc
cmc
jmp
or
test
push
and
in
rolb
inc
aas
sahf
mov
push
jns
sti
add
pop
or
lock
add
and
adc
inc
push
ljmp
cmp
out
mov
in
jge
mov
xchg
imull
je
sbb
aad
inc
das
jbe
out
jle
test
mov
mov
xchg
add
xchg
rol
push
fnstcw
mov
rcr
mov
in
dec
idivl
stos
shlb
adc
out
cmp
ret
js
test
loopne
jp
hlt
inc
pop
mov
ret
subb
jns
push
popf
adc
lcall
daa
push
jns
popa
push
int
sub
stos
sti
sub
push
mov
fisttpl
or
mov
test
lock
adc
jns
pop
arpl
push
pop
js
iret
rclb
dec
fsubr
push
repnz
loope
js
out
inc
and
mov
ljmp
dec
xchg
out
fmulp
push
in
lret
ficompl
leave
push
in
inc
push
pop
jl
repz
xchg
add
js
out
add
lds
mov
pop
int3
aad
fldl
mov
mov
xchg
stc
icebp
sahf
leave
dec
std
xchg
outsl
xchg
dec
pop
or
mov
xor
mov
sbbb
mov
xlat
and
sub
xchg
cs
dec
push
jp
sbb
jns
notl
and
pop
jno
pop
xor
lods
and
add
jo
mov
in
pop
cmp
jae
mov
arpl
int3
cmpsl
in
lret
ret
shr
iret
hlt
sub
mov
or
push
int
jp
imul
imul
andl
jne
or
add
mov
mov
aaa
int
es
arpl
pop
lahf
cmp
push
push
xchg
mov
sub
sbb
ljmp
inc
dec
outsl
mov
pop
push
dec
sub
and
or
adc
roll
in
sub
ret
mov
sub
and
sub
iret
mov
jnp
xor
jb
insb
mov
push
dec
insl
push
leave
xchg
loopne
add
insl
sub
or
or
push
cli
in
xor
andb
movsl
jns
test
mov
push
jg
fldl
loope
es
push
fdivl
xor
adc
add
xor
mov
aam
and
in
ljmp
popa
dec
loope
mov
std
add
and
loop
pushf
mov
add
mov
mov
lea
inc
add
mov
ret
in
mov
dec
leave
addl
dec
push
mov
or
in
lcall
push
test
push
inc
sub
mov
cli
jmp
push
lds
push
out
out
add
jmp
sti
adcl
xchg
mov
mov
mov
nop
out
sbb
add
inc
ss
aas
ds
das
les
daa
dec
rcrl
inc
insl
mov
dec
into
mov
pop
sub
out
sub
fcomps
pop
rorb
aas
lods
popf
xor
int3
mov
out
adc
rorl
data16
jo
push
mov
mov
mov
xchg
fwait
stc
ljmp
aam
mov
in
jp
fimuls
mov
cmc
push
pop
popa
mov
push
inc
jno
clc
xor
dec
iret
fidivs
pop
int
adc
sbb
stc
xlat
xor
dec
fs
gs
arpl
jbe
jg
push
sbb
xor
scas
cmp
loope
out
sub
mov
push
sbb
insb
stc
out
ret
mov
inc
mov
and
xchg
xchg
lret
test
shrb
xchg
add
mov
mov
xchg
add
add
addr16
adc
push
jne
je
jle
mov
add
sbb
or
je
pop
mov
iret
daa
aam
shrb
push
and
sbb
cmp
push
inc
or
test
pop
in
ljmp
or
push
cmp
mov
orb
ljmp
inc
movsb
pop
push
in
xchg
cmp
gs
sub
adc
cmp
push
icebp
mov
dec
push
cltd
js
inc
int3
int3
into
jecxz
iret
es
inc
cli
mov
js
xchg
icebp
mov
mov
xor
cmp
movsl
ja
imul
icebp
dec
dec
sbb
insb
xlat
sub
jno
js
dec
adc
adc
jns
xchg
xchg
inc
add
add
in
or
dec
fildll
mov
jnp
movb
mov
sub
dec
or
jno
pop
loopne
jecxz
ss
inc
mov
push
jo
or
jbe
clts
jno
xchg
comiss
jo
aaa
popa
sti
not
mov
les
shll
add
jne
fiadds
jb,pn
daa
cld
leave
fmul
xor
lcall
es
lods
insl
sbb
orl
test
jbe
or
aas
imul
xor
lret
pop
and
int
mov
mov
jp
pusha
xor
add
ja
mov
inc
outsl
in
movsl
mov
popa
fnstcw
mov
jecxz
in
aam
dec
scas
movsb
fnstcw
jo
sub
jge
inc
xchg
sub
scas
pop
scas
mov
or
je
xchg
loop
mov
pop
roll
mov
in
sbb
call
sub
shrb
and
xor
movsl
adc
pop
bound
and
push
std
rolb
cs
mov
sbb
scas
pop
je
sub
mov
mov
mov
push
daa
push
jmp
jmp
dec
inc
dec
push
aam
jg,pt
push
aam
fidivrl
and
xchg
pop
fucomip
inc
or
cmc
in
inc
icebp
dec
sarb
xchg
jmp
inc
xor
pop
popf
pop
cmp
mov
sub
jp
cmp
jb
xor
mov
or
cmc
xchg
movsb
jne
cmpsb
mov
leave
jecxz
jae
out
pop
mul
aaa
jae
imul
mov
repnz
mov
mov
jg
xor
mov
je
and
xchg
shll
dec
scas
stc
out
insb
push
int
inc
int3
cmp
icebp
or
test
and
stos
mov
aas
mov
mov
scas
stos
aad
aas
xorl
movsl
sub
lea
das
push
jnp
je
inc
mov
iret
int3
aas
js
inc
push
ljmp
push
pop
cmc
pop
bound
psubsw
cmp
add
push
rclb
incb
vpunpcklbw
sbb
jle
fcoml
jnp
jne
and
jle
aaa
xchg
int
shll
sbb
aad
xlat
adc
jno
lret
push
ss
aas
popa
aaa
jae
sub
xor
pop
hlt
mov
add
mov
test
push
stc
repnz
cli
dec
sbb
xchg
pop
pushf
push
call
inc
fwait
mov
int
jge
bound
call
cmc
shl
lea
adc
mov
cltd
mov
pop
stc
pop
flds
add
outsl
mov
insl
pop
mov
test
mov
out
test
sahf
and
lods
sub
push
dec
bound
inc
mov
scas
lods
mov
pop
fnstcw
add
dec
dec
test
out
push
js
push
inc
jp
ja
ss
dec
ds
mov
ljmp
xchg
mov
mov
add
ror
shll
jl
stos
and
cmp
mov
popf
push
cmp
cwtl
test
ljmp
adc
nop
pop
push
cmpsb
cmp
movsl
add
adc
mov
adc
ret
daa
dec
lahf
std
adc
fwait
and
gs
clc
mov
les
and
jo
test
test
jnp
loope
add
sbb
jnp
out
cwtl
jno
sub
jmp
int
adcl
ret
dec
insb
pop
decl
cmp
mov
inc
and
push
or
insb
test
sub
xchg
call
shlb
in
into
sub
jbe
pop
or
fistl
pop
adc
dec
in
push
cmp
into
cld
imul
dec
loopne
cmpl
mov
jbe
xchg
mov
rclb
push
xor
mov
sbbb
adc
rcll
push
insb
and
xchg
sub
sbb
std
daa
sub
add
mov
cmp
push
push
ss
fstpt
sub
jmp
nop
jecxz
xor
sub
xor
jne
sub
mov
pop
pop
js
in
lods
xor
push
mov
pop
xor
incl
stc
mov
pop
xchg
or
repnz
aaa
sub
xchg
mov
jmp
add
ja
sub
aad
pop
popf
jg
jno
mov
ja
mov
mov
dec
mov
cltd
inc
je
out
call
xchg
push
sub
adc
cltd
stos
adc
lods
scas
push
imul
orl
ljmp
gs
jle
popf
sub
insb
push
dec
mov
mov
pop
lods
cmpsb
gs
test
push
fs
xchg
daa
cltd
icebp
jnp
in
ja
pop
insl
sbb
loope
imul
jl
aad
lds
jmp
gs
add
leave
jp
fs
je
add
jmp
scas
push
out
add
out
mov
add
outsl
xchg
and
adc
pop
push
mov
jp
pop
out
inc
pop
sahf
adc
jmp
or
cmp
pop
std
iret
nop
pop
in
and
xchg
mov
shlb
fwait
jecxz
push
inc
and
xchg
out
imul
and
sbb
je
scas
loopne
sub
fdivrl
pop
aad
pusha
adc
popa
mov
stos
adc
rcll
stos
cmp
into
sahf
popa
inc
lea
xor
inc
stos
roll
fisubrs
mov
jp
rcr
popf
movsl
jle
xlat
gs
icebp
jp
pop
jbe
and
inc
addr16
cmpl
pop
dec
dec
add
lret
mov
fdiv
test
lods
stos
jns
inc
bound
pusha
push
dec
jmp
rorb
xor
push
scas
enter
xchg
data16
fstps
sahf
cs
fstpl
sub
pop
std
loop
lcall
scas
daa
dec
sub
pop
rorb
test
xor
call
mov
push
jbe
movsb
mov
push
mov
cli
cltd
ja
push
call
cmpsb
cltd
push
jmp
int3
rolb
stos
out
dec
xor
pushf
stos
pop
int3
fsubr
scas
xchg
or
xor
cli
mov
lahf
pop
xchg
nop
repz
adc
nop
adc
das
jmp
fsin
jo
pusha
jg
mov
outsl
sbb
pop
clc
dec
pop
xchg
sahf
sbb
push
mov
arpl
int3
add
shl
and
cli
xlat
sbb
jns
push
popa
xor
cltd
js
and
int3
pop
jo
jmp
add
pop
je
add
mov
stos
cmpsb
pop
sub
lock
repnz
repz
pusha
stc
jl
lahf
std
inc
in
or
arpl
or
orl
mov
out
sbbb
stc
inc
sbb
sub
sub
je
fistps
shrb
mov
cmp
inc
fdivs
pushf
xchg
xchg
mov
push
hlt
jge
mov
pop
xlat
mov
or
mov
lahf
inc
bound
int3
xlat
fstpt
mov
mov
popf
and
imul
push
cwtl
outsl
clc
sbb
ljmp
push
repz
nop
push
sub
dec
fisttpll
mov
enter
imul
sub
in
jge
call
push
xor
cltd
addr16
lcall
loope
inc
enter
iret
rclb
mov
jo
dec
push
sahf
rcrb
cli
push
push
mov
mov
mov
xchg
sarb
mov
pop
loopne
push
or
dec
mov
jns
adc
cmp
pop
cwtl
or
fld
jge
shl
ret
repnz
inc
xchg
scas
loop
push
mov
xchg
inc
add
stos
test
lea
clc
dec
cli
mov
mulb
ds
inc
mov
add
cld
aas
test
in
push
mov
mov
lds
sbb
das
loopne
xchg
pop
xchg
jmp
bound
cmc
rorl
inc
popa
bound
ljmp
adc
sbb
pop
sub
jno
test
sti
and
cli
das
mov
icebp
add
addr16
sub
iret
mov
pop
daa
fcoml
push
or
into
incl
dec
sti
je
hlt
stc
xchg
push
push
popf
pop
out
aad
mov
xor
ret
add
jge
adc
movsb
nop
cmp
xchg
and
jmp
mov
pop
cs
jg
insl
xlat
outsl
push
popa
inc
into
loop
cmpsl
push
fsubs
cmpsb
popf
divb
rol
mov
and
pushf
and
add
inc
ljmp
movsl
add
cmpsb
out
fcoms
dec
push
iret
push
mov
xchg
adc
scas
mov
pop
jo
inc
ror
gs
adc
aas
push
repz
mov
bnd
mov
pop
movsl
cmp
pop
push
ljmp
mov
aas
push
and
les
cltd
gs
mov
popa
or
sbb
test
pop
ss
sbb
lcall
outsl
mov
mov
jecxz
dec
lahf
das
dec
pop
xchg
test
test
push
test
lcall
daa
in
pop
pop
test
pop
dec
dec
ja
repz
add
jns
pop
ja
inc
out
mov
cmp
rorl
lea
insb
and
mov
addr16
aas
mov
xchg
push
mov
xchg
push
adc
fldenv
pop
jo
cmc
mov
add
aaa
ss
pop
rcrl
cmpsl
adc
push
xchg
xchg
sub
stos
scas
cld
adc
test
jle
popf
lods
mov
cli
pop
bound
inc
cmp
inc
jo
lret
xor
imul
cmp
mov
bound
mov
std
push
jo
outsb
jmp
pop
popf
stos
mov
mov
stos
fldl
dec
inc
cmp
mov
add
js
push
dec
xchg
jo
ljmp
and
or
mov
push
mov
loopne
repz
pop
out
popa
popl
insl
and
inc
jne
sarb
and
insl
shrb
into
stos
jne
scas
cmp
and
out
rclb
mov
leave
pop
push
pop
jmp
sar
inc
insl
or
test
lods
out
call
data16
mov
rcrb
push
cli
imul
cltd
push
pop
xchg
and
xchg
cmpsb
test
cld
cld
or
jb
shlb
rolb
add
fcompl
xchg
int3
xor
repnz
mov
into
and
jl
mov
adc
dec
mov
fs
xchg
and
push
or
sbb
xor
les
xchg
das
sbb
outsb
fstl
outsl
loope
sahf
sub
push
loopne
cs
and
lahf
fs
lods
or
lods
sarb
out
movb
mov
sub
push
pop
lret
pop
push
mov
jl
movsb
mov
cli
inc
mov
pop
insb
pop
sub
adc
loope
in
mov
nop
push
add
mov
rcrl
aas
sbb
cmpsl
in
mov
xlat
xchg
push
fdivs
adc
ljmp
cmpsl
mov
ja
jmp
adc
cmpl
mov
je
sbb
inc
mov
mov
sbb
inc
es
out
inc
cmp
lahf
add
inc
fldenv
mov
int3
push
push
or
jne
mov
adc
push
add
dec
imul
push
in
and
sub
lods
insb
rcrb
sub
lret
scas
iret
std
rcll
jb
sahf
mov
adc
jp
and
jecxz
outsl
sub
jo
icebp
mov
call
leave
std
sbb
ss
sbb
popa
add
pop
stc
sub
cmp
xor
loope
dec
out
cwtl
popf
lcall
pop
mov
test
and
icebp
lret
xchg
outsb
test
outsl
push
rorl
out
xor
iret
inc
insb
cmp
jge
push
inc
mov
sahf
pop
push
and
push
adc
xchg
xor
negl
outsl
pop
mov
loop
jb
ret
pop
pusha
cmp
pop
cmp
pop
or
fiaddl
mov
stc
xor
add
into
sbb
xor
in
adc
adc
dec
mov
movsb
cs
test
cmp
inc
imul
xor
popa
mov
sbb
lods
push
xlat
mov
xchg
nop
pop
stc
movsl
xchg
cmp
in
jns
jmp
xor
mov
mov
aas
dec
sub
mov
aaa
xchg
push
mov
rcrl
xor
cmp
cltd
in
adc
pop
pop
push
ljmp
sub
sub
insl
jecxz
pop
jb
push
sub
push
dec
and
cmp
jp
lret
push
movsb
sbb
scas
inc
shrb
inc
xor
ljmp
xchg
mov
inc
fwait
insl
flds
fidivs
mov
lea
stc
adc
adc
push
jae
jnp
orb
rorb
aad
sarb
pop
roll
inc
outsl
cmp
adc
ret
cmp
sahf
in
or
add
xor
push
xchg
and
push
add
mov
mov
decb
xor
mov
int
pop
xchg
xor
lock
lods
aam
or
xor
lods
mov
loope
shlb
mov
add
je
pushf
ret
call
rolb
sbb
inc
adc
sub
out
sbb
mov
dec
sbb
mov
dec
pop
lcall
mov
std
push
movsb
in
and
call
icebp
fisttpll
fwait
mov
popa
stc
sub
or
jnp
sbb
jne
ds
inc
sbb
add
daa
iret
dec
test
movsl
jns,pt
mov
cmp
data16
outsb
mov
repz
test
xor
push
imul
cmp
push
test
push
stc
and
dec
fs
outsb
mov
sub
jbe
jnp
fsts
cmc
daa
jle
and
add
jp
ret
sub
mov
cli
mov
jo
in
push
xchg
pop
stc
pop
jno
mov
pop
dec
daa
inc
add
ss
dec
or
jno
push
rorb
jmp
lea
aas
pusha
icebp
jmp
aam
nop
stos
int3
push
insl
fmull
or
les
and
dec
stos
dec
push
jle
fmull
xor
inc
jg
inc
jl
sub
ljmpw
xchg
adc
adc
mov
pop
shll
dec
adc
inc
dec
pop
push
das
inc
jecxz
int3
aam
frstor
and
and
addr16
test
jg
dec
in
adc
jo
xor
inc
add
dec
inc
xlat
and
in
jne
ja
jno
jo
jle
jl
mov
cmc
shlb
adc
mov
mov
pusha
sbb
mov
cwtl
sub
popf
push
fs
sbb
rolb
test
xchg
inc
dec
lcall
mov
cmp
mov
inc
movsl
in
fildll
cli
adc
cmp
jns
insb
aad
inc
adc
and
inc
push
loope
dec
addr16
test
or
add
lock
popa
aas
rcrb
sti
xchg
movsl
jns
out
xor
xchg
dec
cmp
cmp
mov
xlat
sub
pop
aas
mov
pop
addl
inc
icebp
rol
xlat
pop
and
and
loopne
xor
stos
jp
jg
jp
push
inc
add
push
jle
or
mov
hlt
add
lds
xchg
das
int3
and
mov
push
xchg
xchg
add
jge
adc
popa
mov
push
test
pop
ficompl
inc
stc
mov
push
mov
movups
rorl
sub
scas
pusha
aas
mov
cwtl
iret
mov
xchg
mov
mov
fbld
lahf
push
test
dec
pusha
call
aad
lods
sub
jno
add
sub
hlt
cmp
push
imul
aam
jmp
adc
lcall
cmp
stc
sbb
shrb
or
or
cmpsb
insl
cmp
in
iret
mov
mov
mov
test
mov
je
lea
dec
jmp
sahf
movsb
mov
lret
and
call
int
pusha
insl
jne
xor
sbb
jne
mov
and
mov
push
subb
mov
std
mov
mov
lret
imul
inc
sub
shlb
mov
jmp
cmp
jo
inc
stos
mov
nop
sbb
cmp
mov
enter
mov
mov
sbb
frstor
add
fs
push
and
fmuls
das
fldt
push
sub
lds
lock
movsl
jbe
addr16
or
rorb
cmp
xchg
sub
into
aad
mov
sub
pushf
sbb
jns
or
lock
sub
push
mov
rorb
xor
xor
leave
xchg
push
mov
cwtl
inc
leave
sahf
push
fs
in
xchg
mov
shl
cmpsb
mov
xchg
jp
cmp
pop
sub
adc
dec
cli
jp
cmpsl
lds
inc
push
xchg
or
dec
lret
and
fsubrs
popf
cmp
imul
jb
jb
xchg
adc
mov
xor
mov
in
mov
mov
stos
jmp
pop
jle
data16
mov
jecxz
mov
xchg
sarl
push
pop
call
ret
fcmovu
aas
lret
fs
push
mov
pop
sbb
fidivrl
adc
js
popa
dec
pop
lahf
mov
fwait
xchg
insl
jp
adc
lahf
sbb
and
cmpsb
sbb
insl
add
fldcw
fisttpl
and
lret
shll
sbb
lahf
int
dec
imul
push
cmp
push
sub
xchg
adc
insl
and
lcall
jnp
mov
pop
xlat
sarb
push
std
insb
cwtl
lret
mov
dec
sub
repz
sarl
mov
dec
stos
jecxz
fadd
or
subl
popa
xor
push
sqrtps
into
adc
mov
test
cs
arpl
mov
in
sbb
pop
ljmp
aam
cmp
mov
push
rorb
aaa
xchg
push
bound
mov
mov
mov
jno
cmp
adc
xor
jge
push
xchg
mov
xor
push
mov
enter
jae
mov
aaa
stc
dec
hlt
add
outsl
rolb
mov
inc
cmc
push
jno
inc
jb
mov
cmpsb
push
jae
dec
add
stos
ficoms
dec
clc
adc
dec
xchg
jne
jmp
mov
ficomps
jmp
stos
cli
lods
icebp
sub
insl
pop
addr16
aaa
rclb
jl
leave
insb
xor
lahf
xchg
cmp
sbb
sbb
sbb
iret
sub
mov
out
cwtl
inc
cld
dec
sbb
loopne
mov
jle
ljmp
lds
or
arpl
in
movsl
jp
cmp
xor
cld
push
dec
lods
jnp
pop
and
jne
clc
in
mov
sbb
dec
aaa
in
and
lods
mov
inc
rorb
ljmp
lahf
movsl
jmp
mov
add
cmpsl
inc
syscall
jns
insb
mov
stc
lcall
xchg
and
jl
sub
jno
data16
shll
cwtl
out
jne
xchg
sbb
cmp
stc
popa
insl
les
xchg
sub
les
cmpb
lock
into
into
pushf
inc
mov
leave
loop
cmp
in
lahf
mov
jle
mov
stos
inc
xor
xor
jne
cmp
xchg
adc
mov
mov
jnp
or
adc
dec
mov
xchg
enter
cmp
inc
popf
les
insl
mov
fimull
enter
stos
or
jns
arpl
mov
adc
lea
aaa
cmp
jnp
addr16
sbbl
pop
loop
xchg
and
push
push
inc
inc
ret
inc
push
push
out
xor
gs
ffree
adcb
insl
xor
je
nop
sbb
in
subb
es
or
xorb
aad
adc
fcmovne
push
sbb
lahf
xor
or
mov
adc
sbb
xor
or
inc
push
jb
lods
dec
pop
xor
into
and
sbb
jl
dec
cmp
add
dec
lds
mov
lcall
test
and
bound
sar
orl
inc
xlat
cmpsl
in
sbb
mov
out
or
pop
in
insb
das
sub
pop
sub
pushf
xor
mov
rorb
sub
es
addr16
loopne
sbb
js
popa
loopne
jecxz
xchg
int
testb
push
cmp
ja
aad
and
pop
cmpsb
int
pop
out
loop
cmp
rcll
cmp
pop
pop
sub
andl
ret
imul
lods
stc
test
jnp
xor
cli
std
in
jg
fsts
js
out
adc
cwtl
or
rorb
sarl
andl
or
or
mov
repnz
mov
js
sbb
pop
addl
add
push
mov
sbb
mov
sbb
cmp
ret
stc
jb
sub
xor
adc
sarl
lret
xchg
loope
dec
gs
xchg
xchg
into
lods
lods
and
pop
lods
into
data16
push
jb
in
or
pop
mov
push
or
xchg
sarl
adcl
or
int3
push
in
add
xor
dec
std
mov
pop
xlat
adcb
xchg
push
test
mov
test
mov
shlb
mov
lret
mov
xor
ficomps
adc
daa
add
dec
mov
fcomp
push
test
cli
lret
xor
lret
lea
test
dec
jp
shrl
or
loope
cmp
out
shlb
loope
mov
in
pop
outsl
rcl
pop
or
in
xchg
xor
lcall
rorb
mov
push
js
mov
es
pop
bndstx
fistl
mov
push
nop
mov
int
pop
inc
out
imul
jne
jbe
inc
xchg
in
adc
and
jl
shlb
push
xlat
sti
xor
int3
pusha
loopne
lret
int3
add
je
xor
popa
repnz
fsubr
imul
loope
mov
mov
jecxz
sbb
pop
add
push
aad
nop
rolb
fiadds
iret
rcll
sti
xchg
dec
or
test
or
scas
xor
les
jp
pop
fisttps
gs
popf
clc
adc
pop
push
ja
pop
mov
xchg
popa
lret
jne
push
outsl
adc
cwtl
xchg
mov
pop
pop
js
dec
lret
jge
and
sub
or
push
pop
mov
adc
push
mov
or
aam
and
jg,pn
out
icebp
popa
push
and
mov
jle
mov
popa
jp
shll
inc
mov
add
pop
test
adc
mov
imul
jmp
jle
cmp
nop
int
lcall
pslld
lods
lea
hlt
rcr
add
mov
xchg
lret
and
leave
xchg
pop
push
icebp
mov
pop
ss
jp
insl
xchg
dec
fnstenv
lds
mov
stc
jmp
outsb
sub
out
ds
jbe
mov
jns
daa
mov
je
jae,pn
out
pushf
mov
dec
add
jp
adc
pop
test
jo
or
mov
fistl
mov
in
fwait
scas
xor
jp
inc
jp
mov
out
jmp
fwait
pop
out
sub
inc
lods
jl
lcall
test
sarb
mov
inc
in
mov
pop
dec
aam
outsl
lods
clc
into
testb
lods
pop
cli
pop
stc
mov
andl
jmp
xchg
or
mov
pop
rcrb
mov
scas
sbb
fists
sub
repz
cwtl
pop
pop
shll
jl
and
inc
js
jns
sbb
jo
ret
ret
adc
adc
jae
dec
xor
and
pop
in
ds
imul
push
xor
imul
mov
sahf
jle
pushl
xor
popa
mov
sub
enter
insl
leave
aas
int
pop
adc
hlt
push
or
adc
cmc
subb
andl
out
mov
ljmp
push
in
sub
xor
mov
movsb
test
or
gs
stc
fldt
sub
push
cmp
loope
push
in
cmc
cmp
gs
sub
leave
cmpsb
sbb
in
mov
add
add
push
sbb
push
lret
or
aad
mov
or
fsub
xchg
aaa
aam
enter
and
clc
push
ljmp
jle
jbe
sbb
push
inc
sbb
jno
add
cmp
push
imul
xchg
pop
sbb
outsl
jge
dec
shrl
imul
cmp
cmpsl
inc
jl
xor
dec
mov
popa
or
lock
test
pop
and
movsb
xor
sbb
push
pop
ljmp
fsub
icebp
cmc
xorl
sbb
das
and
rcrl
jbe
jp
fildl
push
aas
loop
test
sbb
out
xchg
jae
dec
push
cmp
push
popf
es
push
inc
push
push
adc
lahf
mov
dec
out
lahf
aas
ds
in
popa
lods
jmp
idiv
out
mov
sbb
rcll
cld
sub
sub
cwtl
push
mov
inc
mov
inc
scas
ja
mov
std
inc
xchg
push
push
pop
gs
shrl
fwait
mov
adc
jns
cmp
negl
push
jbe
int3
inc
dec
lret
pop
aaa
inc
pusha
push
lods
in
lods
xor
xchg
scas
notl
add
adc
imul
xchg
adc
icebp
fnstcw
scas
stos
mov
push
imul
rcr
cmpsb
aas
fbld
insl
int3
xor
add
pop
xchg
xor
xchg
pop
or
lahf
int
out
ret
roll
les
cmp
aaa
adc
out
jl
inc
xlat
dec
enter
jmp
push
std
scas
ljmp
sub
popa
sarb
jge
mov
push
test
mov
push
or
popa
jnp
fs
mov
rep
sub
fiaddl
jp
in
xlat
or
je
xadd
bound
cmpsl
dec
insb
adc
std
and
dec
rcrb
inc
pop
inc
add
rcrl
add
je
lret
mov
ret
fimuls
inc
loop
add
and
dec
cld
in
xor
in
movsb
es
jmp
or
and
inc
cmp
arpl
jb
mov
adc
int
repz
test
hlt
add
and
cltd
repnz
jnp
shrb
fldcw
jmp
das
dec
adc
pushl
out
add
sbb
lods
pop
in
pop
outsb
dec
mov
into
shl
inc
or
xor
mov
shlb
inc
push
add
jge
stc
jp
jmp
fnstsw
jae
or
mov
or
into
jg
mov
push
rol
lahf
fcomip
dec
cmp
imull
dec
in
xor
fst
push
cmpsb
add
dec
jg
mov
mov
dec
mov
loop
cmpsb
push
mov
das
pop
sti
jne
mulb
pop
push
and
mov
lret
jg
out
lahf
jmp
aad
and
pop
lea
and
lret
push
jecxz
rcr
and
push
cltd
repz
xor
popa
cmp
adc
inc
cmpb
out
adc
inc
sub
and
jecxz
out
mov
sub
dec
push
pop
inc
inc
push
xchg
push
sub
sbb
adc
inc
xchg
push
inc
outsl
outsb
lret
das
dec
sahf
pop
mov
arpl
sub
les
repnz
out
insl
mov
shrl
icebp
cmp
cmp
jne
mov
fbld
lcall
mov
or
sbb
pop
adcb
push
inc
lods
push
mov
pushf
shll
pop
cmp
int
sub
xchg
rclb
jnp
leave
pop
jg
jle
push
loop,pn
in
cltd
mov
or
loope
jb
adc
sahf
stos
enter
sub
fiadds
nop
in
push
out
pop
adcl
daa
call
dec
jo
enter
push
dec
adc
jnp
inc
shlb
dec
pop
push
lods
push
addr16
leave
aam
cli
inc
int3
in
gs
pop
lods
adc
lcall
mov
sub
lea
mov
cltd
mov
push
mov
das
jb
test
jg
std
add
aad
rorb
and
mov
add
rcl
das
adc
mov
inc
stc
enter
lret
and
push
cltd
sub
filds
mov
out
ja
dec
push
push
fisttpll
jae
adc
arpl
or
or
jns
nop
fidivrs
daa
mov
xchg
dec
xor
pop
cld
sub
inc
data16
mov
mov
lock
js
add
cld
lods
mov
xor
pop
lea
sub
fs
repnz
sahf
orb
dec
loope
pop
add
push
mov
lods
les
adc
mov
scas
cltd
mov
push
cmp
jno
dec
jb
bound
out
xchg
aam
clc
sbb
inc
mov
xor
arpl
divl
mov
fsts
lcall
mov
xor
fsts
sti
and
mov
in
popf
mov
and
sub
mov
xchg
movsl
test
loop
loop
xchg
adc
inc
mov
inc
loop
ljmp
std
std
scas
daa
into
out
adcl
cmp
movsl
or
cmpb
clc
jns
addr16
xor
jl
stc
lock
fisubrl
cmpsb
push
fdivrp
lods
mov
ss
dec
cmp
outsl
xchg
dec
dec
cld
lea
mull
mov
es
rorl
jmp
in
push
loop
jnp
inc
sbb
jecxz
xchg
jge
and
mov
loop
mov
cli
mov
cmpsb
adc
pop
add
xor
adc
push
or
jb
jnp
mov
pop
push
test
pop
out
mov
mov
sub
push
inc
inc
inc
cmpsb
hlt
ror
in
add
mov
hlt
or
dec
xor
and
call
es
pushf
pop
insb
fldl
js
mov
lods
mov
mov
ds
shrl
mov
pushf
push
or
jmp
into
dec
and
sub
mov
xchg
enter
in
cmp
xor
push
xchg
in
int3
push
mov
icebp
std
call
mov
lahf
sbb
add
cmp
xor
mov
aad
pop
popf
jge
stos
jo
lock
jo
andl
insb
sahf
jne
test
adc
aad
and
loope
lods
sub
jmp
and
mov
pop
xchg
mov
lret
js
and
cmp
ret
shll
jmp
inc
and
inc
and
push
pop
add
dec
ljmp
ficomps
inc
sub
xor
fndisi(8087
cmpsb
push
shrb
fnsave
loope
adc
push
out
pushf
mov
scas
mov
pop
push
or
int3
adc
jns
add
rcl
loopne
mov
xchg
xchg
movsl
jo
js
pop
and
int
jae
lds
lea
xchg
cmpb
jns
sbb
sub
imul
cltd
cmp
notb
mov
rcrb
sti
sub
stos
push
xchg
fnstsw
or
in
push
loopne
sbb
fcoms
adc
push
push
xchg
mov
fs
mov
jnp
dec
xchg
rcll
jae
cwtl
int
sbb
repnz
mov
fisttps
jbe
dec
out
cmpsl
mov
and
cmp
test
mov
enter
out
add
test
xchg
ds
cmp
lahf
fs
mov
es
sbb
fidivl
ljmp
fisubrl
fistpll
daa
in
fs
cmpsl
dec
test
in
lods
cltd
pop
cmp
dec
mov
cmp
and
sbb
or
pop
xchg
jae
inc
les
cmp
push
inc
inc
adc
loope
dec
filds
stos
cwtl
push
and
mov
dec
testl
mov
cmp
cmpsb
cli
dec
loope
push
inc
enter
xchg
std
push
pop
pop
int
pop
push
push
sarb
clc
add
adc
pop
mov
shlb
mov
cmp
push
push
hlt
shll
je
sbb
push
jnp
fdivrs
test
stc
divb
daa
mov
stos
dec
lods
and
adc
dec
leave
pop
pop
push
xor
jbe
sub
negl
and
jmp
in
cld
adc
inc
mov
lods
push
or
push
arpl
icebp
test
jbe
cs
add
cmp
pop
add
loop
nop
outsl
pop
pusha
std
test
mov
xorb
out
mov
mov
repnz
insl
or
test
bnd
dec
daa
stos
clc
sub
sbb
add
aaa
adc
cli
sbb
or
jns
insb
push
aas
ds
mov
loope
fs
rorb
adc
dec
mov
loop
cmp
fwait
push
dec
pop
jmp
add
maxps
push
mov
test
jl
lcall
xchg
iret
push
mov
cmp
insb
ljmp
cmp
outsb
add
dec
sbb
cmp
in
lods
xor
sbb
rolb
int
xor
or
notl
dec
mov
stos
xchg
adc
inc
sti
inc
push
sub
std
mov
and
call
inc
inc
jg
xor
dec
fsubl
out
jns
fldenv
push
inc
lods
iret
jg
or
or
lods
test
loop
jno
out
jno
je
mov
movsl
push
mov
mov
out
push
icebp
sbb
xchg
aaa
add
xchg
cmp
jp
popa
and
ljmp
aad
aad
movsl
stos
jl
jl
lds
cmpsb
pop
sti
fnstcw
lahf
stos
insb
notb
push
call
leave
stos
fs
ret
cli
or
out
jns
pop
xor
push
push
movsl
imul
cltd
cmp
mov
pop
mov
xchg
in
adc
sbb
dec
inc
adc
mov
mov
xor
add
push
pusha
sbbb
inc
cmp
push
out
mov
or
dec
pop
pop
icebp
sbb
mov
inc
push
loopne
jnp
das
out
loope
pop
adc
stos
pushf
sub
xor
loope
popf
pusha
cmp
xlat
adc
std
sub
inc
push
lds
xchg
inc
cmp
cltd
xorl
jo
je
fstps
mov
dec
pop
jne
jno
jge
scas
push
int3
pop
in
mov
mov
or
shrb
icebp
divl
pushf
lcall
jnp
fistps
dec
call
push
pop
test
pop
stos
xchg
rclb
sub
mov
ja
pop
push
mov
xchg
or
sahf
lea
mov
fisubl
add
xchg
aas
repz
jne
jge
movsb
xchg
or
loope
iret
rorl
fidivrl
nop
and
sbb
push
je
xor
pop
aad
inc
repnz
cmp
inc
fwait
pop
mov
mov
pop
push
mov
pop
jnp
pushf
fwait
outsl
enter
lcall
and
xor
flds
fldl
dec
loope
pop
inc
jecxz
sarb
xchg
sbb
add
and
adc
add
lcall
jne
jne
pop
sbb
mov
pushf
lcall
subb
push
mov
int3
popf
adc
fsubr
and
and
push
or
aas
sub
mov
insl
cmp
sub
push
lods
jns
sarl
xor
cmp
and
adc
testb
push
ljmp
loopne
sbb
xor
mov
insb
sub
imul
cmpsl
insb
mov
pop
repnz
dec
mov
fcomip
adc
mov
neg
lcall
fadds
pop
mov
int
lds
es
xchg
orb
and
mov
fidivl
add
adc
popa
lret
fcomi
sti
aad
outsb
ljmp
push
xchg
stos
xchg
jnp
fsubs
clc
stc
lds
xchg
pop
lds
cs
jne
leave
mov
test
jne
test
pop
lds
cs
mov
loope
cld
sbb
cmpsl
in
xchg
andl
scas
mov
pop
jg
cltd
sbb
lahf
sbb
and
cs
imul
mov
cmp
test
roll
mov
packsswb
sbb
aas
push
jnp
mov
pop
or
out
jmp
sahf
sahf
stos
movsl
mov
add
sbb
inc
pop
testb
pop
cli
jnp
mov
rcrb
push
adc
icebp
mov
rcll
js
xchg
xchg
test
js
pop
push
jno
icebp
mov
lods
cmp
jns
push
sahf
inc
insb
fbld
xchg
test
pop
jae
dec
push
mov
loope
pop
iret
mov
add
gs
push
sub
adc
and
push
cmc
dec
stos
mov
fcompl
int3
faddp
sbb
push
movsb
loopne
addr16
mov
xchg
in
add
mov
adcl
adc
cltd
mov
leave
inc
push
mov
or
lds
mov
or
pop
or
ljmp
hlt
fnsave
lods
mov
fistpll
fcmovnu
pusha
outsl
sub
cmp
jbe
or
mov
fs
movsl
stc
testb
cmpsl
popa
fcom
adc
cmc
jbe
popf
icebp
xor
pop
lret
cmp
pop
mov
add
decl
mov
xchg
jno
push
test
xchg
fadds
or
push
pop
jmp
sbb
filds
xchg
cmp
jns
xor
mov
jmp
addb
sub
mov
inc
popl
xor
mov
scas
ja
xchg
or
add
insl
fldl
fmuls
mov
lods
cmp
fimuls
add
pop
data16
hlt
enter
lea
ficomps
cmp
pop
sbb
add
push
cmpsl
enter
adc
clc
gs
rcrb
adc
and
dec
dec
stos
cmc
or
lods
mov
sahf
mov
push
in
sarl
cld
xor
cli
and
xor
lds
mov
cmp
pop
pop
shr
and
xor
mov
dec
adc
jp
inc
or
push
outsl
das
test
loope
aad
push
mov
fcomp
xor
inc
test
or
dec
test
sahf
sbb
sub
arpl
shr
leave
adc
add
inc
hlt
jl
inc
data16
dec
sbbl
rcrb
stos
or
or
std
ficomps
lds
mov
outsl
jns
ret
push
int3
sbb
aas
dec
mov
push
mov
inc
push
scas
mov
out
cmp
lods
bound
shl
movsl
imul
mov
lret
ds
shll
cli
push
insb
dec
and
and
pop
cs
sub
push
movsb
xor
sub
fstps
jl
xorb
insb
gs
push
sbb
imul
mov
push
xchg
sbb
lea
sar
daa
fistl
adc
add
inc
fiadds
lahf
push
mov
inc
fistps
mov
les
imul
lret
enter
mov
rol
sbbb
sub
subb
pop
push
xchg
mov
icebp
jae
mov
mov
mov
sub
cmp
in
mov
nop
or
xchg
mov
pop
jl
fstpl
jb
repz
iret
aam
pushf
and
fwait
jnp,pn
sbb
sbbl
cli
movsb
cmpb
divl
sbb
cs
xlat
cli
or
shll
arpl
jmp
aas
mov
and
nop
insb
insb
int
sub
lods
dec
or
rcrl
int3
mov
xchg
cmp
or
pop
xor
roll
faddp
test
inc
push
dec
jg
cmp
enter
xchg
dec
push
add
inc
sub
addr16
iret
test
mov
mov
gs
xchg
shrb
sub
cmp
mov
fldenv
cmp
test
sub
push
and
push
addr16
add
rclb
insl
mov
or
or
shl
lcall
negb
push
shll
mov
jno
cmpsl
lods
adc
stc
vcvtps2dq
mov
jb
leave
mov
enter
lret
in
mov
les
sbb
mov
cwtl
out
xchg
in
mov
scas
xchg
fdivr
xor
sbb
frstor
nop
inc
and
insl
call
cmovg
stc
sbb
fistpll
shr
rcl
sub
jns
shll
negl
adc
cmpsl
sub
jecxz
cmp
or
jb
mov
xchg
and
test
pop
movsl
arpl
or
mov
and
add
push
jnp
lods
push
add
dec
xor
jmp
xchg
sub
mov
xchg
mov
inc
subb
inc
stos
mov
mov
daa
cltd
aam
dec
adc
mov
xchg
mov
xchg
lahf
mov
aad
push
lret
push
cmp
mov
push
bound
adc
repz
shlb
insl
and
jl
outsl
pop
xchg
mov
fisttpll
jb
pslld
or
movsb
stos
add
movsl
jge
mov
popf
and
mov
and
sub
in
inc
sbb
gs
lds
arpl
bnd
leave
cmpsb
push
lcall
pop
hlt
cs
pop
mov
shl
shlb
mov
cmpsb
dec
mov
mov
push
pop
xlat
adc
jb
mov
sbb
iret
cmp
imul
out
aad
xchg
in
xchg
mov
aad
lds
jo
lahf
dec
rcrb
ficoms
adcb
js
lods
fisubrs
jns
jge
ror
in
rorl
jnp
mov
mov
push
insl
push
lods
cwtl
inc
or
sti
mov
dec
fimull
stos
cmovo
lea
xor
mov
xor
pop
mov
aaa
je
out
lahf
push
cmpl
add
add
inc
or
insb
in
jb
pop
popf
push
hlt
lret
daa
mov
gs
pop
jg
dec
push
cmp
in
mov
pop
in
ljmp
and
and
add
sbb
aaa
nop
cmpsb
or
cli
mov
jne
insl
stc
xchg
jo
pop
into
mov
push
repz
ja
loope
and
cmp
sub
insb
jge
dec
ljmp
sti
push
push
mov
cwtl
inc
lods
sbb
xchg
jmp
data16
push
mov
imul
push
ss
ret
je
sbb
sub
sub
sub
jo
or
cmpsl
and
cmp
rcrb
push
adc
aaa
decb
xchg
in
push
bound
mov
add
mov
ror
add
dec
mov
test
dec
cltd
pop
jge
aad
jns
mov
loopne
call
or
cmp
cwtl
dec
arpl
repz
pop
movb
lcall
push
fwait
popa
test
jae
roll
sbb
inc
adc
out
fisubrs
int
pop
jge
sarb
data16
or
mov
jl
mov
or
cwtl
mov
inc
leave
pop
icebp
xchg
mov
test
f2xm1
add
test
sbb
cltd
jp
mov
xchg
adc
int3
jne
xchg
xchg
cmp
mov
jecxz
fstp
fs
loop
sub
test
push
mov
pop
outsl
notb
stc
mov
jnp
ds
out
pushf
out
push
sti
hlt
jg
mov
aad
rcrl
mov
fwait
mov
inc
sti
lock
test
sub
cmp
cmp
xor
hlt
icebp
xchg
xor
mov
or
mov
xchg
jae
push
mov
mov
mov
inc
int
mov
test
bound
ss
mov
and
mov
sbb
cmp
push
sbb
cmc
mov
outsb
mov
ljmp
fnsave
xchg
and
jp
mov
lahf
je
add
pop
pop
jecxz
movsl
cld
jbe
push
fldl
pusha
xchg
fmulp
pop
mov
xchg
shlb
xchg
dec
pop
into
sti
jns
into
cmp
add
in
cmpsl
lcall
mov
mov
and
dec
xchg
jns
outsb
test
or
repnz
mov
rorl
pop
xchg
mov
in
inc
or
adcb
add
scas
aas
lds
stos
mov
cmp
xor
arpl
pushf
push
js
adc
jbe
cmpb
dec
inc
insl
xchg
xchg
addb
mov
pop
outsb
loop
aas
imul
loopne
stos
das
loopne
jg
sbb
and
xor
mov
lahf
or
inc
ja
stc
ret
pusha
mov
ds
in
fwait
pop
mov
shr
jo
or
and
out
xchg
or
mov
inc
pop
cld
mov
test
jns
enter
and
sbb
outsl
jae
sahf
aam
inc
add
daa
add
and
sbb
lock
pop
out
add
push
add
mov
das
or
dec
mov
fimull
cltd
xchg
ljmp
mov
push
mov
popa
jmp
sbb
add
inc
jnp
andl
jl
jno
or
jne
mov
in
jno
or
ret
int3
cmc
fldenv
repz
mov
xlat
test
mov
pop
mov
mov
test
add
or
cld
mov
add
lret
dec
dec
cmc
or
orl
jmp
or
add
out
jbe
pop
or
mov
aam
mov
int
test
test
adc
mov
iret
mov
xor
ja
in
clc
inc
xchg
call
mov
mov
mov
sbb
push
popa
idivb
inc
pop
dec
mov
popa
add
push
int3
mov
scas
in
popf
sar
cltd
pop
aad
jg
and
mov
xchg
inc
test
jns
test
adc
ret
adc
inc
out
adc
jle
xor
sahf
popf
xrstors
xchg
insl
imul
sbb
addr16
fidivrs
test
pop
bound
xchg
inc
dec
cmpsl
push
and
in
arpl
xchg
lds
es
inc
fwait
inc
outsb
sbbb
xchg
mov
imul
ret
mov
cmp
test
adc
test
filds
clc
sub
jns
sub
sbb
inc
pushf
sub
and
or
mov
xchg
pop
push
mov
adc
xchg
inc
insl
mov
arpl
or
out
repz
aas
daa
jo
test
and
inc
nop
pop
mov
mov
lret
icebp
cmp
mov
mov
adc
jge
inc
iret
test
lahf
outsb
mov
dec
mov
std
sbb
mov
shll
push
pop
fsts
push
stc
jg
sub
xor
lcall
push
and
xchg
cmpsl
jb
cmp
cmp
aam
jecxz
or
and
pop
sbb
repz
out
xchg
sbb
fs
std
inc
pop
fiaddl
mov
xor
mov
scas
stc
imul
inc
adc
mov
cmpsb
in
xor
ja
pop
jge
shlb
xor
or
fwait
xor
aam
push
xchg
pop
or
pop
loopne
test
lock
adc
pop
lret
fistpl
insl
es
and
fwait
cli
push
popa
cmp
mov
out
and
lods
adc
cmp
mov
xchg
js
idiv
pop
daa
push
enter
lea
sbb
inc
jp
mov
dec
lret
mov
xchg
xchg
sbb
mov
xor
pop
rorl
jp
add
out
insw
inc
je
fisubl
gs
je
dec
pop
ds
sbb
je
mov
call
addr16
lock
xorl
pop
cli
shl
jns
cmp
adc
sbb
pop
das
mov
in
outsb
push
push
gs
pop
add
pop
xor
testl
dec
rcr
sub
addr16
adc
push
mov
mov
mov
xchg
mov
std
mov
ds
push
fisubs
xchg
inc
xchg
pop
adc
cmp
pusha
xchg
pop
std
mov
imul
mov
mov
lods
outsb
rcrl
sbb
cmc
out
aas
sbb
ret
ds
lods
sbb
stos
insl
jo
dec
mov
fs
xchg
inc
or
inc
cmp
cmp
fmull
clc
lds
xchg
lahf
dec
iret
mov
jge
data16
push
call
fcoms
divl
inc
movsl
adc
inc
push
in
cmp
lret
add
aaa
aas
sub
and
lods
stos
add
dec
push
xor
mov
mov
lods
sti
clc
pop
cmp
jno
je
jbe
jecxz
and
sub
pop
sahf
stos
sub
rorl
icebp
les
cld
lds
iret
xchg
fstpl
mov
or
out
daa
dec
jnp
insb
push
xchg
add
fstpl
jmp
outsl
add
xor
sbb
xor
stc
popf
push
and
jbe
fdivrp
addr16
push
add
jns
daa
test
fsubrl
jg
test
push
in
les
cmpl
hlt
mov
movsb
jne
sub
mov
repnz
push
into
adc
jl
repz
fmull
add
sbb
sbb
loope
in
scas
lret
push
mov
sub
ja
inc
sbb
in
mov
jp
cmp
mov
fldl
pop
cmp
stos
fimuls
lods
dec
push
jle
inc
sub
cs
je
cltd
xchg
cmpl
mov
scas
pop
fwait
int
nop
loope
dec
pop
outsl
sub
jnp
imul
mov
imul
sti
pushf
xor
popa
sbb
mov
cwtl
inc
daa
sub
andl
jg
rolb
shl
pop
push
je
adc
jle
filds
adc
mov
mov
bound
sbb
xor
lahf
push
and
shl
cld
push
in
ret
outsl
call
jbe
mov
adc
cmc
pop
stc
adc
pop
jge
xor
sub
and
sub
jmp
inc
inc
xor
lods
mov
lods
lahf
ficomps
mov
mov
sti
dec
rorb
dec
into
adc
sbb
jge
pop
push
shlb
lods
inc
sub
xchg
nop
jge
xchg
fidivs
std
jns
push
out
jl
test
call
mov
inc
aad
and
fiaddl
cmpb
stos
jg
xor
jae
mov
push
lcall
pop
and
push
and
sarb
mov
push
loopw
jo
icebp
fistl
cmp
and
out
jo
faddl
pop
lret
stc
pushf
cmp
pop
lods
out
pop
outsl
lods
cwtl
lret
popa
xchg
stc
popf
out
mov
or
pushf
and
mov
dec
cmpsl
je
mov
jg
or
aas
inc
mov
lcall
rol
shrl
roll
add
dec
mov
and
in
xchg
in
aam
push
fnstcw
pop
in
xchg
lret
xor
mov
rorl
xor
lcall
cmc
and
mov
jae
cmpsl
mov
fcmovnb
xlat
subl
jbe
add
or
test
in
lods
inc
pop
std
xor
cmpsb
push
jge
das
testl
dec
jmp
in
push
mov
xchg
mov
and
stc
or
psrlq
iret
pop
lods
fcmovb
rolb
jl
mov
jge
pop
rclb
incb
nop
xor
mov
or
or
js
sbb
mov
cmp
cmc
in
mov
lds
push
daa
adc
xorl
lods
sbbb
nop
inc
stos
sarb
jns
jecxz
xorb
arpl
cmpsl
sub
movl
std
test
popa
int3
mov
call
std
sbb
jmp
out
ljmp
sbb
mov
rcll
inc
stos
stos
mov
push
dec
arpl
jl
push
scas
jns
addr16
push
or
mov
js
mov
mov
data16
loopne
add
xor
mov
mov
scas
mov
push
aam
fs
adc
dec
mov
cmp
xchg
cs
dec
mov
pusha
mov
fstpt
xchg
rcll
pop
push
imul
int3
mov
mov
mov
pop
inc
cs
push
fs
rorl
je
out
sub
cld
push
sub
jecxz
cmc
pusha
jno
out
adc
pop
mov
dec
mov
fs
pop
inc
add
es
outsb
mov
subl
pop
into
mov
mov
popf
mov
mov
popa
shll
inc
test
inc
add
movsb
aas
jnp
jne
mov
loopne
aad
mov
ljmp
dec
push
or
ret
mov
outsb
scas
out
daa
mov
adc
lcall
shl
frstor
sub
push
decb
push
roll
and
adc
pop
inc
leave
imul
ss
aaa
sbb
pop
push
dec
test
sub
fildll
sub
int3
pop
inc
inc
mov
in
sbb
stc
shrl
addb
outsl
dec
mov
sub
stc
fs
sarl
jge
cmp
rorl
xchg
out
xchg
jb
add
add
or
inc
sub
mov
sub
test
rorl
loopne
pand
xor
jg
cmp
jo
pop
fsub
pushf
lds
lds
sarl
xor
in
sarl
add
sbb
jle
sbb
inc
into
push
fisttps
push
outsb
leave
mov
xor
mov
xchg
loope
lds
int
outsl
in
dec
scas
shrb
xor
fiadds
dec
in
nop
mov
sub
mov
xchg
adc
cmp
mov
cmpsl
cwtl
ja
icebp
test
repnz
js
int
jns
bnd
dec
or
mov
in
int3
inc
cmp
jecxz
xchg
add
test
mov
outsb
sbb
lods
cmpsb
pop
or
jo
sbb
shlb
or
dec
cmp
mull
jno
add
add
fisttpll
xchg
pop
sub
and
push
arpl
scas
es
mov
sbb
cmp
pusha
sub
xor
jb
cld
xlat
lock
jns
lahf
dec
push
mov
pop
sti
les
dec
aas
inc
fsub
out
mov
nop
pop
jmp
mov
ljmp
mov
daa
fnstsw
movsl
mov
xchg
ss
sub
mov
gs
in
add
push
insb
sbb
lods
cmpsb
in
movsb
lock
cmp
stos
pop
sti
add
stc
rol
inc
and
push
cmp
bound
sub
test
inc
push
jns
incl
push
dec
std
jle
push
push
jle
pop
scas
insb
cwtl
xchg
jns
dec
out
movsl
pop
jae
clc
mov
inc
dec
dec
sub
fwait
mov
popa
repnz
mov
jge
adc
jnp
cmp
mov
bound
lods
xor
gs
fiaddl
popa
lret
fmuls
arpl
xor
icebp
cwtl
push
insb
inc
stos
pop
xchg
cld
ret
jp
or
cli
jmp
mov
mov
std
dec
xor
hlt
push
or
mov
movl
jo
cli
or
mov
mov
mov
or
or
jae
stos
and
pop
mov
leave
xchg
jae
jno
out
lods
cmp
pushf
je
leave
lea
pop
fidivrs
jmp
sub
ljmp
lea
data16
jp
sub
xor
cmp
popf
aas
insl
lcall
inc
repz
outsb
adc
ljmp
mov
sub
movsl
sbb
add
shll
cmp
sbb
adc
clc
xchg
pop
jb
cmp
in
outsl
inc
or
mov
inc
out
incb
scas
dec
in
dec
aad
mov
outsb
loopne
das
ret
aaa
mov
pop
iret
xorl
pop
push
mov
in
iret
std
push
cmpl
aad
enter
add
fidivl
pop
push
xchg
pop
in
insb
xor
push
icebp
leave
fs
jno
and
js
inc
stos
stos
push
cmp
inc
loop
ljmp
addr16
sub
or
movsl
sub
mov
test
cmp
lds
jbe
stos
mov
ljmp
sub
sti
mov
test
jmp
mov
aam
cs
mov
mov
lock
push
inc
xchg
insl
jns
data16
mov
mov
lahf
shll
lcall
out
jbe
or
add
cmp
xchg
xorb
adc
es
and
movl
js
adc
push
xor
test
push
test
mov
mov
fsubrp
mov
push
push
es
sbb
mov
mov
negl
and
das
filds
add
xchg
out
out
out
push
cmpsl
sbb
xor
fstps
arpl
xor
shrb
mov
xchg
cmp
test
pop
mov
insb
mov
pusha
xchg
adc
lea
or
pusha
cwtl
mov
jg,pt
mov
leave
cmp
jmp
lds
in
aaa
dec
and
pop
fdiv
scas
or
dec
lcall
mov
ret
xchg
jl
xor
and
fs
lds
add
inc
out
and
je
jg
movsl
enter
push
dec
cmp
xchg
subl
movsl
hlt
cmpsl
dec
pusha
pop
inc
sub
dec
in
mov
push
rclb
sub
dec
popa
jne
jg
sahf
cmp
jb
test
push
in
fdivrl
ret
pop
addr16
lods
push
add
aam
pop
jl
and
outsl
mov
jno
and
mov
pop
sub
popa
adcl
and
out
rorl
scas
mov
insb
pop
imul
pop
xchg
lods
sub
sbbl
bound
jmp
sti
add
push
clc
xor
or
ds
js
mov
iret
xchg
pop
mov
pushf
sbb
in
call
or
addr16
push
aad
subb
insb
imul
jns
js
daa
pop
loopne
cli
push
pop
sbb
dec
daa
xchg
aam
sbb
jnp
outsl
in
daa
arpl
lahf
stc
and
sbb
cli
lret
jl
mov
mov
lahf
movsb
push
scas
push
iret
fwait
sarb
sbb
pop
fsubrs
cmp
std
dec
cmp
push
xor
lahf
sbb
clc
cmp
sbb
xchg
push
dec
push
bound
inc
gs
jns
cmp
loop
sub
push
mov
xor
mov
movsb
pusha
decl
test
sub
pop
or
jp
bound
dec
adc
jl
sub
mov
out
bound
arpl
jae
inc
and
sbb
outsl
loopne
xchg
push
inc
and
mov
hlt
adc
insb
mov
dec
test
push
mov
ret
xchg
mov
inc
call
mov
out
mov
mov
pop
push
cwtl
or
and
jne
sarl
push
push
or
mov
add
test
mov
aad
add
test
lret
ljmp
pop
xchg
push
pop
sbb
jl
aam
sub
ret
add
dec
in
adc
inc
cmp
inc
cmpsb
pop
jae
inc
jnp
push
pop
iret
in
enter
std
flds
outsb
leave
inc
pop
gs
mov
out
stos
jecxz
cmpb
push
pop
fbld
loopne
or
adc
lret
xchg
sbb
cmp
aas
test
xchg
add
int
aad
sarb
add
fdivl
test
xchg
bound
leave
pop
test
cmp
push
insl
das
stos
fists
ds
roll
flds
subb
sahf
pop
mov
enter
cmp
lahf
shrl
call
test
add
imul
stos
or
das
test
test
cmp
sub
stos
popa
mov
mov
jno
lods
jg
sbb
pop
adc
imul
sub
cmp
cmc
xchg
xor
mov
inc
jmp
pop
icebp
sbb
fs
aaa
in
xchg
adc
mov
dec
dec
cmp
sbb
int
xor
int
pop
mov
sbb
out
pusha
cmp
push
in
ja
xchg
pop
sbb
insl
outsl
insb
cltd
push
in
cmp
popa
cmpsl
in
lahf
adc
cltd
cmp
push
inc
lock
jno
in
das
mov
pop
dec
mov
int
xchg
jae
fisttpll
add
je
popa
dec
into
or
in
shr
shl
test
imul
rcrl
gs
shll
pop
into
fcomi
push
mov
mov
jne
lret
sub
push
mov
jns
cltd
xor
sbb
sbb
xor
jae
xor
xchg
mov
push
scas
xchg
jmp
pushf
imul
jl
xlat
sbb
js
je
pop
stos
aad
xlat
dec
cmp
adc
std
es
push
inc
pushf
sbb
or
jnp
xchg
test
sbb
ljmp
out
rcll
xor
or
in
pop
loope
mov
fwait
pop
jnp
and
sub
fldl
ja
adc
dec
mov
sbb
loope
xchg
jmp
ret
jb
pop
loope
xchg
sub
xor
inc
mov
and
cltd
outsl
and
dec
int3
adc
mov
iret
mov
jo
ret
dec
cmc
dec
sbbl
cmpsl
jg
sbb
cmp
and
fisttps
insl
xchg
lds
inc
pop
add
pop
pop
pop
add
rcl
or
sub
adc
or
mov
aam
cmpsb
in
and
out
cmpsb
lcall
adc
pop
stos
sarl
mov
push
jae
rorb
imul
ds
push
xchg
lds
outsl
out
adc
andl
sbb
lods
xor
cmpsl
cmp
lcall
sbb
add
stos
insb
sahf
mov
pop
stos
lds
rorl
clc
outsb
iret
xchg
mov
out
nop
in
ljmp
lods
and
sahf
sub
popf
push
test
aam
inc
sbb
call
dec
lods
dec
stos
cs
add
sbb
stos
sub
pop
pop
stc
adc
xor
rorb
jl
bound
mov
jmp
data16
dec
xor
call
roll
in
fs
add
movl
lret
stc
sub
ja
pop
ljmp
pop
pop
cmp
sub
sbb
cs
pop
jo
shlb
les
add
inc
shlb
push
cmp
dec
jmp
adc
jecxz
cltd
addr16
mov
loop
dec
je
out
pusha
mov
data16
or
adc
mov
addr16
imul
sti
fwait
jns
mov
rol
and
arpl
sub
fidivrs
js
test
fsubrs
push
mov
popf
insl
xchg
and
sti
push
icebp
jnp
shl
add
dec
sbb
xorb
loope
add
and
scas
lods
push
dec
aas
rcll
mov
pusha
mov
xchg
sub
add
aad
mov
loopne
pop
leave
loopne
insb
jle
fs
hlt
cmp
push
lret
imul
aam
mov
mov
int
and
mov
gs
out
jns
cwtl
loop
test
out
leave
popf
mov
mov
cs
orl
jg
clc
andb
stc
icebp
push
fisubl
movsb
or
jmp
bts
gs
or
and
xchg
and
loope
and
int
out
je
out
cltd
mov
mov
add
mov
sub
jo
xchg
mov
and
or
xchg
sbbl
adc
aaa
xor
test
dec
out
xchg
push
cmpsb
dec
mov
scas
stos
jnp
push
in
and
and
or
push
insl
xor
lahf
sub
es
push
loope
jo
int
insl
mov
push
hlt
pop
cmc
nop
jl
or
and
cli
mov
hlt
daa
sti
jbe
pop
lret
xor
sbb
mov
bswap
clc
mov
ljmp
push
sub
shrb
fcomps
imul
stc
jg
jb
scas
adc
pop
jmp
scas
iret
fidivs
add
sub
mov
push
xchg
ror
jecxz
push
das
arpl
push
lds
mov
ret
leave
adc
ret
and
dec
adc
stos
cmpb
sbb
xor
mov
or
shl
pushf
pop
mul
cli
mov
in
sbb
push
roll
les
jae
jb
jne
sbb
in
xchg
adc
mov
lods
xor
iret
rclb
push
incb
sub
adc
or
push
mov
sbb
in
nop
fldcw
pop
popf
mov
out
scas
sbb
inc
mov
push
test
and
ds
sbb
push
add
push
jo
adc
mov
pop
push
imul
cmp
das
push
or
or
mov
or
clc
out
in
xor
bsr
int3
shl
lret
mov
data16
stos
mov
jo
in
hlt
push
fwait
jno
add
mov
push
loopne
pop
jmp
shrb
add
cmp
sti
ds
scas
push
inc
daa
mov
cmpsl
lret
sub
nop
jb
sbb
inc
leave
rcrb
pop
in
in
inc
cs
push
out
sbb
subl
loope
and
dec
es
xor
ret
clc
cltd
jno
jne
inc
push
xor
cmp
cmpsl
add
lret
and
adc
out
jns
mov
sbb
sub
push
mov
and
inc
je
loope
pusha
jg
jg
testb
push
pusha
outsb
aad
push
and
stc
push
mov
jp
lahf
sahf
test
mov
or
adc
and
loope
sub
xchg
xor
stos
bound
loope
imul
push
xorl
rcr
add
call
fucom
loopne
jl
cmp
cwtl
adc
js
xor
xchg
adc
mov
mov
dec
orb
cmp
addb
cmp
sbb
mov
je
cwtl
sahf
bound
dec
enter
push
sub
cmpsb
dec
pop
insl
inc
push
in
jle
into
xor
popa
in
cmp
and
jecxz
adc
adc
xchg
lods
int
movsl
inc
mov
fistps
or
scas
push
scas
cmp
std
push
add
rcrl
lea
imul
lahf
in
mov
fdivl
insl
in
xchg
push
add
sub
fldt
dec
jmp
or
xchg
mov
daa
mov
daa
sub
std
fsubl
stc
aas
out
mov
cmp
scas
cmp
mov
out
test
push
mov
inc
add
cwtl
popa
out
inc
jb
add
xchg
adc
rcll
mov
push
lcall
leave
lret
fsub
shll
sbb
pusha
xchg
movsb
loop
mov
pop
das
insb
cmp
jp
mov
aad
loop
insb
loop
mov
jecxz
fwait
xchg
xchg
xchg
cmc
lahf
and
data16
pop
popa
mov
mov
cmp
clc
sub
aad
xchg
je
loopne
aam
mov
gs
mov
pushl
adc
cmpxchg
xor
fst
arpl
dec
rorl
add
mov
in
out
outsl
cmc
outsb
lods
stos
fdivs
pop
mov
xor
pop
push
push
xchg
pop
ljmp
jnp
mov
jle
mov
pusha
iret
lock
push
mov
sub
push
or
sbb
mov
out
notb
pop
test
inc
outsb
mov
roll
cmc
xlat
shlb
rcr
insl
aas
sbb
add
int
push
aas
daa
jl
push
jnp
imul
inc
in
cmp
dec
push
ja
sub
inc
add
stos
stos
push
int
mov
jp
loopne
lods
rorb
fistl
cld
pop
sub
fadd
push
sbbb
mov
repnz
sbb
dec
jno
adc
sarl
test
bound
dec
lea
mov
fisubrs
aaa
js
in
out
xlat
fdiv
adc
insl
or
sub
mov
int
xchg
push
fs
mov
out
mov
pop
addl
cmpsl
fists
loop
dec
mov
mov
push
loope
xchg
xor
jle
lods
arpl
jbe
sub
jecxz
xchg
decl
jge
add
xchg
or
inc
cmc
jp
xor
mov
sbb
jecxz
lcall
xchg
mov
dec
ljmp
mov
lret
xchg
sub
lea
nop
xchg
adc
aam
push
cmp
mov
mov
inc
pop
xchg
pop
cwtl
loope
lret
cmp
stos
outsl
mov
push
fcoms
fistpl
mov
cltd
pop
mov
adc
xor
cmpsb
out
mov
xor
jle
and
imul
je
xchg
xchg
and
mov
cmc
sbbb
dec
sub
mov
mov
in
fdiv
pop
fcompp
das
cwtl
ds
mov
and
jo
or
xchg
std
mov
push
or
repz
or
push
dec
lea
sub
jge
pop
sub
pushl
fstpl
mov
mov
test
psubusw
xor
push
lahf
leave
jns
loope
out
pop
rclb
in
mov
xchg
add
xchg
out
pop
mov
mov
mov
adc
pop
xor
inc
jbe
imul
insl
add
lods
fwait
lods
fdivl
and
iret
inc
test
sbb
mov
pop
cwtl
inc
pusha
rcr
das
popf
xchg
leave
push
jno
sahf
and
jno
xor
test
aaa
and
or
iret
inc
dec
pop
inc
sbb
pop
cmp
sbb
outsl
bound
adcb
hlt
inc
rcr
inc
popf
lds
leave
push
sub
and
jno
xor
pop
cmp
int
orb
ficomps
jp
xor
jl
xchg
mov
dec
and
loopne
adc
lock
les
addr16
adc
dec
leave
cmp
cltd
out
add
sahf
pusha
push
inc
xchg
sbb
mov
or
repz
xor
push
fldt
insb
lock
xor
dec
ss
popa
add
lock
mov
loope
inc
test
mov
mov
nop
add
fs
mov
xchg
add
icebp
mov
cmc
les
arpl
test
sbb
pop
popa
aad
mov
pushl
test
xchg
loop
fisttpll
add
ret
out
lock
push
shll
and
add
ret
add
pop
and
orb
mov
in
xor
push
clc
mov
jbe
push
jnp
cmp
inc
mov
mov
inc
mov
in
jle
outsb
lea
push
aas
mov
mov
aaa
dec
sub
adc
xchg
rcr
sti
pushf
dec
dec
sub
movmskps
lods
je,pt
or
jmp
adc
sub
les
outsl
bound
and
subb
mov
and
mov
nop
call
dec
repz
push
outsb
call
imul
jg
int3
sub
xor
sub
pop
das
enter
fimuls
dec
loopne
mov
push
fcoml
add
call
mov
fbld
sbb
xor
scas
mov
mov
xorl
push
loop
pop
push
push
push
in
lds
ret
outsl
jle
adc
sahf
int
jge
bound
es
je
insb
push
xchg
shll
jbe
jp
jbe
jl
fndisi(8087
subb
aam
jb
push
adc
js
sbb
adc
in
jno
or
aas
add
push
sahf
sub
and
xor
outsl
cmp
dec
xchg
in
call
push
fwait
mov
mov
mov
int
xchg
int3
roll
xchg
fsubl
cmp
mov
arpl
inc
jle
in
pushf
lods
gs
adc
sub
test
jl
aas
dec
jmp
inc
enter
push
cld
dec
loopne
mov
cs
jns
leave
mov
jmp
mov
popf
stc
mov
in
loop
int
mov
pop
mov
mov
cmpsl
jb
fs
pushf
movsl
pop
lea
xchg
leave
dec
decb
or
xchg
dec
popf
pop
mov
pusha
mov
dec
jb
pop
shll
leave
add
push
scas
mov
std
xor
mov
ss
loopne
sub
movsl
negl
outsb
mov
cmc
jl
jecxz
std
ds
cmp
insl
inc
lods
push
xchg
js
pop
int3
push
in
pop
xor
scas
inc
loop
and
cld
mov
or
add
push
inc
mov
stc
xor
test
icebp
lret
add
movsl
sbb
and
mov
xor
and
jae
xchg
stos
std
inc
mov
shrl
jmp
jo
ffreep
lods
mov
es
jp
or
iret
scas
cmp
xor
stc
fbstp
xorb
sub
lods
xor
xor
cmpsb
mov
push
pop
insl
cmp
sti
popa
add
xchg
jb
fistpll
and
or
mov
dec
lods
std
or
add
sbb
jne
mov
popa
push
pop
and
les
and
hlt
std
sbb
mov
nop
cwtl
pop
je
sub
das
jae
stc
jp
mov
mov
push
push
jp
mov
rorl
stos
aam
out
out
cmpsb
sub
insl
dec
pushf
mov
daa
lcall
aam
xorl
lret
insb
leave
mov
rol
stos
dec
outsb
fldl
xor
int
cs
adc
adc
lahf
popf
cltd
lcall
mov
sbb
add
cmp
adc
or
stc
dec
fnstenv
mov
mov
nop
xor
jo
decl
mov
push
push
mov
shll
insl
xchg
cmp
push
popa
shl
out
bound
call
popa
out
xchg
adc
cmp
aaa
shr
dec
and
je
jo
dec
inc
lahf
push
mov
clc
stos
lods
or
cld
cltd
mov
scas
dec
mov
les
push
jns
test
push
dec
test
jl
ja
jns
imul
jl
and
sub
push
sbb
sbb
jmp
add
test
cmpsb
jmp
xor
push
aad
pop
pop
pop
mov
xchg
ficoms
call
add
outsb
fstps
std
mov
xchg
add
movsl
adc
jo
add
mov
loop
inc
je
pop
into
pop
xor
add
xor
sbb
adc
inc
xor
rclb
fsubs
imul
mov
test
xor
pop
push
mov
std
daa
xor
xor
mov
mov
imulb
es
or
imul
mov
leave
pop
push
adc
add
loop
xchg
out
xchg
fcomps
add
xor
popf
out
adc
mov
aam
mov
ret
and
jle
mov
and
or
push
inc
add
aam
std
adc
xchg
add
xchg
sbb
movsb
mov
push
xor
add
xchg
mov
mov
icebp
mov
mov
in
inc
and
add
lcall
in
push
cmp
sub
jne,pt
cmp
dec
push
push
outsb
adcb
pop
inc
mov
in
push
das
mov
mov
iret
mov
clc
aam
fs
lock
push
nop
push
arpl
loope,pt
imul
popf
dec
in
insb
xlat
xchg
sbb
insl
fnstsw
adc
fucomi
loope
mov
and
insb
mov
mov
ds
mov
sub
mov
stc
pop
inc
and
insb
mov
xchg
jp
jno
and
loop
dec
xchg
mov
sbb
xor
out
pop
cmp
adc
mov
push
popa
push
adc
in
movsl
scas
mov
jnp
idivb
mov
out
into
adc
mov
sbb
daa
js
gs
mov
aas
or
aas
push
ret
in
jnp,pn
adc
das
xchg
shll
js
xor
add
lods
add
dec
cmp
xor
inc
loopne
pop
xchg
adc
rolb
dec
aam
popa
xchg
jge
fnstsw
adcl
dec
xchg
xchg
nop
hlt
sarl
out
xor
adc
fcoml
jge
je
das
into
mov
out
mov
inc
shlb
popa
mov
jle
jl
push
push
sbbb
pop
dec
inc
int3
push
jp
jge
jg
jmp
addr16
inc
inc
pop
inc
pusha
xchg
xor
mov
arpl
sbb
addl
mov
jae
cld
cmp
jmp
or
shrb
pop
test
and
les
loope
pop
adc
daa
ret
sarb
fsubs
insl
aad
out
test
mov
mov
fdivs
push
cmp
and
inc
xor
lods
outsl
xchg
adc
cmpsb
and
mov
popf
lds
lret
imul
cmc
lds
pop
lahf
jne
or
test
xchg
dec
pop
icebp
bound
cli
lods
adc
push
fstps
or
mov
mov
cmpsl
and
adc
cmp
data16
scas
sub
scas
mov
inc
scas
sbb
mov
and
sbb
mov
pusha
outsl
int
fiadds
xchg
in
cmpsl
mov
xor
fildll
xchg
outsb
jg
pop
mov
pop
jmp
add
rcll
enter
cmp
cmpsb
shll
loopne
iret
in
cmc
call
sahf
adc
lods
cld
negb
mov
aam
mov
ljmp
jbe
inc
mov
addl
jg
dec
xor
insl
sbb
jns
add
testb
sbb
shll
inc
or
outsl
jg
mov
jl
pop
cltd
inc
add
or
push
lahf
aaa
stos
push
rorl
adc
jo
xor
xchg
jg
lcall
add
icebp
inc
incl
dec
mov
mov
bound
scas
mov
mov
jno
xor
jg
xor
add
inc
push
jbe
fbld
inc
mov
dec
outsb
leave
mov
mov
sbb
and
add
ret
lods
fwait
dec
fldl
mov
ret
dec
pushf
pop
adc
mov
ret
imul
dec
pop
popf
sbb
int
jle
mov
pop
inc
js
mov
add
add
insb
fsubl
imul
jnp
lods
xchg
mov
nop
xchg
addr16
test
dec
mov
inc
push
jno
cmp
mov
int3
xor
repz
int
lgdtl
cwtl
shl
fwait
test
pop
enter
cld
mov
aad
daa
hlt
in
lea
push
incb
dec
dec
leave
push
in
data16
iret
inc
sub
fistpl
pop
adc
pop
push
and
in
mov
pop
jge
loop
or
pop
mov
ljmp
xchg
rcr
mov
xor
jb
outsl
bound
sbb
adc
test
dec
aam
sbb
jle
push
out
shll
xchg
cmpb
sbb
sbb
adc
std
or
inc
sub
push
dec
dec
xchg
sub
andl
jg
frstor
mov
clc
jp
jecxz
or
sub
mov
push
sub
icebp
add
inc
je
pushl
cmp
sub
cmpsl
pop
jne
mov
mov
cmp
sbbl
jns
add
lret
push
pusha
lret
pop
rcll
dec
movsb
push
sub
inc
hlt
mov
nop
je
insl
bound
test
rcl
mov
dec
mov
sub
pop
stos
clc
mov
mov
pusha
jne
cwtl
es
loopne
mov
or
fwait
outsl
jo
mov
fistl
pop
into
xchg
mov
insl
xor
in
int3
mov
int
jns
mov
mov
dec
test
out
jmp
jecxz
sbb
xchg
and
or
jne
pop
in
test
les
dec
push
pop
adc
aad
push
imul
mov
pop
repz
fldl
popa
sbb
lcall
idivl
inc
stc
scas
jge
and
jno
fdivrl
jae
jl
pusha
cltd
stos
jmp
adc
in
pop
adc
pop
sbb
and
mov
or
sub
ljmp
jno
les
pusha
dec
int
nop
mov
cmpsl
and
or
inc
adc
mov
or
rorl
cmp
add
insl
jo
push
adc
xor
dec
pop
pop
and
jb
subb
mov
sub
pop
fwait
inc
adc
inc
sbb
mov
xor
sbb
push
mov
push
dec
stc
inc
pusha
pop
pusha
cld
dec
xchg
in
jb
ljmp
inc
pop
xor
and
or
and
push
andl
adc
ror
push
ljmp
aad
aam
jne
shl
ret
jl
add
push
pop
lods
ds
pop
jne
arpl
pop
mov
es
das
nop
push
cmp
popa
add
cmpsl
pop
aaa
insb
push
outsl
add
dec
test
daa
popf
mov
dec
leave
push
or
jno
iret
inc
inc
add
ljmp
test
pop
adc
pop
test
mov
dec
fldl
aad
xor
fists
outsl
bound
jnp
and
and
and
xor
fisttpll
negl
mov
cli
je
lahf
popa
arpl
or
cmpsl
inc
ja
daa
and
and
outsb
or
outsl
leave
xchg
inc
pop
adc
or
pushl
rorl
pop
push
ja
cmp
jge
mov
fwait
aam
or
js
scas
cmp
jmp
aaa
pushl
jmp
sahf
pusha
jo
pusha
xor
popa
lahf
mov
into
jmp
sbb
sub
push
sbb
outsl
and
push
repnz
ljmp
or
mov
leave
js
es
js
decb
subl
pop
lods
lds
lret
fiadds
cld
decb
sahf
decl
mov
mov
mov
shr
xchg
outsl
frstor
mov
fsub
ja
xor
cmpsl
jp
cmp
mov
aam
or
aad
inc
mov
lods
fwait
xchg
mov
popf
aad
dec
mov
imul
lcall
sti
pushf
shlb
cmp
fwait
rcr
mov
xchg
rcr
setge
and
test
fildl
jns
fisubrs
xorb
dec
push
pop
imul
flds
test
fcoml
popf
rorb
leave
punpcklbw
nop
mov
xor
insl
mov
mov
out
push
push
ret
cmp
pop
mov
push
mov
jno
outsl
fsts
mov
je
ljmp
int3
sbb
mov
mov
int
push
arpl
adc
cld
fidivrl
aad
lods
es
adc
adc
mov
cmp
and
push
pop
in
mov
lds
jg
mov
insb
fwait
jae
pop
out
add
xchg
jno
es
cmp
and
out
xor
test
xchg
psrlw
adc
lods
ss
xorl
imul
cmp
xlat
pop
andl
andb
xchg
out
mov
jo
jmp
mov
adc
int
mov
int3
call
arpl
and
mov
incl
push
gs
jae
inc
cmp
push
les
test
sub
xor
fimull
loop
dec
mov
sbb
std
call
mov
sub
sub
mov
daa
aad
inc
filds
xchg
cmp
push
out
add
repz
cmp
mov
adc
pop
inc
in
pop
cmp
in
les
aaa
leave
in
xlat
inc
dec
jns
pop
inc
scas
pop
aad
fsts
cltd
push
lcall
pcmpgtd
lcall
mov
xor
jle
mov
outsb
sub
lahf
or
mov
mov
ja
es
es
cmp
pop
bound
insl
push
aam
sbb
jnp
les
adc
cwtl
aaa
jp
ljmp
sub
cmpsl
or
xchg
nop
stos
adc
pop
lock
jnp
jge
stos
loope
movsl
std
sbb
popf
mov
ret
inc
xchg
shlb
and
pop
dec
stos
arpl
xchg
or
cmpsl
in
mov
mov
mov
icebp
mov
mov
pushl
test
mov
xor
call
scas
daa
cmp
and
mov
imul
push
insb
jge
and
add
lods
fwait
in
push
mov
test
pop
push
dec
test
sub
sahf
pushl
mov
mov
pop
fs
cmp
cwtl
lods
loop
lahf
pop
mov
punpcklbw
mov
inc
outsb
pop
xchg
and
dec
push
out
int3
sub
pusha
cmp
xlat
bound
cmp
mov
jae
std
popa
cmp
and
lods
inc
push
push
xchg
das
mov
sahf
scas
sub
mov
out
mov
loope
cmp
mov
enter
popa
jle
rcrl
mov
sbb
lods
outsb
xor
jnp
and
xchg
lea
add
dec
orl
add
test
dec
ljmp
cmp
shll
or
repnz
jl
decl
js
insl
mov
ss
imul
mov
sbb
femms
xor
sub
pop
loope
scas
xchg
shlb
adc
pop
insb
inc
adc
pop
mov
cwtl
dec
jge
inc
mov
call
xor
pop
movups
pop
das
sbb
inc
pop
push
mov
push
dec
test
shr
cmp
daa
xor
mov
nop
mov
in
xor
jb
sbb
sbb
push
dec
daa
bound
jb
or
mov
push
and
mov
stc
les
xlat
sbb
mov
adc
shrb
hlt
cmp
frstor
cmp
xchg
lret
ss
sbb
jle
dec
mov
sbb
loop
jnp
imul
cs
cmc
mulb
lods
fdivrl
adc
dec
xchg
ja
adc
mov
inc
pop
adc
jnp
mov
xor
jg,pn
cmpsl
stos
mov
hlt
cmp
pop
lea
lahf
mov
push
mov
aad
aam
xor
daa
das
rorl
outsb
inc
sbb
push
les
xchg
mov
insl
in
pusha
ret
mov
loopne
out
xor
cmc
sub
repz
ficoml
jl
mov
std
pop
das
mov
pop
push
mov
mov
insb
add
sti
test
xor
cmp
iret
mov
pushf
int
pop
sbb
jns
mov
lea
cwtl
loop
sbb
jbe
sub
les
push
push
xor
daa
int3
push
jle
pushf
push
imul
sub
mov
popa
adc
test
nop
dec
sub
addr16
jb
push
mov
inc
mov
es
fdivrl
aad
insb
fcoms
cwtl
ljmp
sbb
mov
cmp
sahf
jnp
cmp
ljmp
jl
sarl
test
fisubs
mov
push
lret
cwtl
in
cmpsb
jbe
cmc
and
jno
sub
xchg
sahf
jns
insl
mov
adc
in
aad
or
lcall
mov
adc
stos
scas
fs
xchg
mov
into
pop
cltd
sbb
jbe
or
and
out
gs
lret
push
in
inc
aas
cld
pop
push
sbb
xchg
aad
cmp
cmpsb
jno
add
sub
jne
jl
adc
push
dec
aas
lods
out
in
shrl
cmc
sub
jno
pop
cmp
lods
sahf
push
xchg
lods
mov
scas
inc
stos
mov
xor
pop
mov
pusha
xchg
mov
ficompl
mov
ja
or
jnp
cmp
adc
int
iret
loop
jb
sub
in
int3
scas
add
pop
push
rdtsc
fldt
add
mov
xchg
or
xor
cmpl
clc
sbb
push
enter
loope
ret
pop
sub
jge
popa
inc
cmpsl
imul
xor
push
jne
les
loop
pop
arpl
jb
or
push
sub
lods
mov
loopne
std
inc
repz
sbb
in
jb
movsb
jb
leave
adc
mov
test
inc
add
xchg
pop
jo
fildl
mov
fbstp
clc
sbb
pop
lahf
jbe
movsb
mov
cmp
and
push
in
movsl
jmp
lea
pop
pop
cli
nop
repz
test
jge
push
inc
insl
mov
pop
push
cli
ffreep
repz
test
out
lret
insb
arpl
lcall
insl
pop
sahf
pop
das
pop
or
mov
mov
adc
sbb
dec
test
dec
mov
pusha
cmp
jb
jp
movsl
orl
or
cmpsb
ror
outsb
cmp
loope
xlat
add
or
cmovl
xor
mov
cwtl
inc
dec
pop
jb
cmp
jno
pop
sahf
ja
jbe
jo
inc
pop
mov
adc
mov
cmp
dec
lods
sbb
xchg
iret
adc
adc
jb
fldt
xor
popa
pop
incb
pop
push
or
jl
pop
pusha
adc
xchg
aas
iret
add
sahf
testl
pop
xor
pop
jb
xchg
pop
jo
dec
pusha
dec
fisttpll
mov
roll
es
cmp
and
int3
je
jae
or
mov
jbe
jno
fadds
leave
add
aad
cwtl
dec
ss
and
mov
mov
aad
test
pop
push
jecxz
mov
dec
cmp
xchg
mov
and
out
inc
iret
inc
aam
push
ret
push
jl
push
push
jns
sbb
pop
mov
adc
jb
mov
nop
mov
mov
jbe
jle
iret
sbb
popf
sbb
test
aad
mov
dec
push
nop
pop
sbb
push
mov
adc
and
mov
inc
dec
je
daa
jo
pusha
push
adc
mov
fnsave
jp
jg
outsl
push
cpuid
dec
pop
cmp
sbb
push
mov
xor
push
jo
dec
pusha
dec
rorb
in
ret
xchg
popa
cmp
xchg
mov
ljmp
push
mov
out
outsl
sub
xchg
fs
xchg
fs
mov
gs
xchg
pushf
sub
xchg
jnp
jecxz
outsb
sub
mov
jno
add
xchg
pushf
loop
aas
insb
mov
jb
dec
sbb
cltd
hlt
movb
std
cmp
inc
xor
sbb
testb
insb
mov
insl
mov
add
aas
dec
dec
adc
push
lahf
adc
jnp
jbe
int3
sbb
mov
sub
pop
adc
stos
lods
pop
lret
push
xor
stos
jae
inc
test
incb
mov
rclb
shll
scas
cmc
cmp
outsb
add
nop
and
aas
mov
cltd
xlat
scas
stos
xchg
mov
outsb
outsb
sub
adc
mov
gs
popa
mov
mov
pop
xor
andl
test
jecxz
outsb
sub
stc
gs
fisttpl
leave
sbb
pop
pop
mov
add
lret
stos
arpl
add
push
adc
in
dec
cmp
sbb
pusha
dec
popa
outsl
pop
daa
inc
xor
sub
and
das
pusha
xchg
push
das
jmp
pop
add
mov
push
stos
test
lods
cwtl
mov
pop
mov
roll
das
mov
sub
fimull
pop
mov
or
daa
cmp
add
mov
cwtl
lods
outsb
and
sub
adc
cmp
pop
pusha
dec
lcall
mov
roll
dec
and
inc
mov
and
push
push
xchg
sbb
pop
xchg
cmp
cmp
adc
pop
inc
cmp
sbb
bound
fidivrs
ret
pop
or
daa
pop
xor
and
sbb
out
pusha
out
pusha
mov
jae
jmp
ljmp
pop
inc
psubsw
or
mov
sti
add
idiv
hlt
fs
es
jae
cmovae
lcall
out
clc
sub
adc
test
test
and
pusha
xchg
add
jecxz
outsb
and
lods
movsl
into
xchg
popa
inc
fistpl
mov
and
jno
xor
loopne
lds
pushl
lods
popf
add
fcmovnb
jb
ds
mov
mov
mov
daa
decl
test
add
push
scas
pushf
push
popf
nop
cs
add
pop
imul
push
pop
mov
aas
pop
or
pop
xor
adcb
sub
adc
popa
add
pusha
arpl
gs
aaa
insb
mov
mov
enter
mov
adc
xor
sub
sbb
dec
iret
xchg
dec
popa
jge
inc
add
andb
mov
cmp
pop
movsb
es
lods
int3
or
in
or
in
add
cmp
cltd
cmp
sub
mov
push
lods
cmpsl
mov
add
pusha
adc
and
cmpb
and
push
ret
nop
in
lods
sub
gs
pop
xor
mov
cmpsl
mov
and
sbb
les
inc
js
xor
or
add
movsb
and
jno
xor
pop
test
xchg
jl
and
add
xor
mov
xchg
xlat
lcall
cwtl
lods
andb
xor
inc
and
jbe
mov
outsl
out
scas
sbb
adc
in
dec
jp
fnstsw
iret
test
xchg
xchg
aam
pushfw
dec
cmp
or
arpl
outsb
and
mov
push
mov
mov
test
mov
in
les
cmp
mov
roll
and
dec
push
insl
adc
add
dec
xchg
cmpsl
push
pop
xchg
sbb
out
dec
lret
in
aad
adc
and
mov
cmpsl
int
shrb
cmp
daa
mov
fisubs
dec
inc
xor
dec
ss
outsl
outsl
pop
mov
sbb
clc
aaa
test
xchg
aad
imul
sti
mov
push
or
out
or
pop
inc
aad
test
shrb
sbb
sub
cltd
outsb
lcall
cwtl
lods
push
and
cmp
ljmp
sti
xchg
or
push
cmpsl
out
adc
push
outsl
dec
mov
cmp
inc
mov
ret
inc
pop
cs
ret
insb
or
add
inc
cmp
add
ss
insl
bound
lods
dec
and
xor
into
adc
lods
fwait
jns
stos
or
test
icebp
add
sbb
xor
leave
add
movsl
mov
push
push
push
mov
cmp
ss
outsl
add
jmp
jnp
cmp
xor
mov
pusha
aad
or
lcall
ljmp
inc
mov
mov
add
shll
pop
sbb
or
cwtl
lods
andb
es
push
in
outsl
popa
nop
call
cmp
scas
inc
cmp
in
insl
pop
mov
mov
std
cmp
mov
sbb
popa
aad
cmpsl
push
bound
int
shll
test
repz
xchg
int
in
cltd
lds
mov
adc
dec
cltd
cmp
lock
mov
mov
cmp
aad
insb
push
pop
cmpsb
aad
add
push
dec
aad
test
inc
enter
inc
xchg
test
jnp
push
pop
movsl
jmp
push
fstpl
int
sbb
sub
fs
xchg
or
les
inc
imul
cli
xchg
or
push
sub
lods
fwait
xchg
fldl
scas
xchg
les
daa
in
jmp
sub
adc
mov
mov
pop
ss
popa
je
add
push
in
rcr
sti
pushf
adc
leave
push
inc
outsw
jno
iret
inc
mov
enter
lfs
adc
dec
push
ss
mov
js
scas
movsl
iret
sbb
jmp
jge
cmp
push
frstor
jae
add
fcoms
fmuls
in
xchg
fwait
inc
xor
jl
stos
mov
jmp
int
adc
xchg
icebp
jae
sahf
loop
push
popa
mov
inc
pusha
mov
daa
inc
xchg
add
clc
push
mov
lahf
mov
or
in
mov
popf
add
push
sbb
add
or
mov
xchg
fucomp
pop
popa
insl
and
ja
mov
repz
adcl
jo
hlt
stos
test
mov
loope
mov
test
xchg
mov
xchg
xchg
in
sahf
lret
sub
pop
add
fst
or
bound
push
jnp
add
adc
mov
mov
pop
jecxz
jo
jbe
adc
pop
mov
or
jne
rcr
out
mov
push
mov
sub
in
jne
push
bound
jae
jge
mov
push
out
outsl
outsl
add
aam
or
push
dec
aad
mov
cmp
outsb
hlt
aad
test
les
mov
jg
add
cmp
insl
hlt
inc
aas
test
out
fcmovnu
adc
xchg
jne
pusha
popa
jmp
pusha
cmp
shr
adcl
cmpb
xor
test
push
or
xlat
and
lret
mov
insl
add
add
dec
mov
nop
xchg
les
xchg
adc
xchg
pop
outsb
ljmp
sub
cmp
stos
push
insl
pop
pop
xor
inc
mov
mov
xor
cltd
xor
adc
sub
xchg
push
pop
adc
inc
int3
xor
adc
test
push
inc
cmp
imul
sbb
xor
and
mov
push
mov
add
sub
sbb
mov
bound
mov
pushf
les
push
pusha
cmp
rcrb
cli
sbb
mov
lods
jae
fnstcw
ja
inc
fstps
push
mov
xchg
ds
xchg
imul
push
jbe
mov
dec
sub
xor
dec
inc
rcrb
adc
adc
repz
push
ucomiss
xor
sbb
xor
test
pusha
cmp
rcrb
dec
adc
jbe
sbb
xorb
fdivl
mov
jns
mov
xor
jg
jae
insb
pusha
dec
out
nop
mov
jns
pop
pop
xchg
dec
mov
jae
mov
pop
pop
mov
dec
jno
pusha
cmp
adc
push
pop
mov
inc
stos
xor
insl
test
dec
pusha
sbb
cmp
mov
sti
std
ret
dec
mov
cmp
push
mov
repnz
dec
mov
imul
adc
outsl
mov
insl
cmp
jno
gs
dec
sub
mov
add
cmp
jbe
sbb
bound
fdivl
dec
movsb
fs
xor
lahf
ja
adc
sbb
sub
jae
test
dec
in
arpl
scas
pop
fistps
rcrb
bound
jbe
sbb
nop
mov
les
out
sbb
or
or
mov
xchg
xor
scas
cltd
and
add
jbe
add
call
or
push
enter
test
push
adcl
cmp
mov
inc
outsl
iret
in
mov
ds
mov
push
fmul
pop
dec
push
jmp
popa
inc
push
in
xor
inc
or
push
jb
stc
xchg
cmp
clc
stos
cmc
fisttpll
nop
jne
enter
xor
lret
push
push
lea
jo
pushf
adc
in
ds
sub
xor
jae
dec
in
cld
push
and
stc
das
push
jge
mov
lea
pop
lods
shll
adcb
mov
adc
insl
xor
popa
in
pop
popa
outsb
sub
cmp
jns
cmp
push
inc
push
xchg
lock
mov
mov
in
cmp
jmp
fcompl
and
daa
in
jnp
loope
ror
xchg
sbb
cmc
fimuls
int3
pushl
and
push
in
in
cmpsb
das
mov
mov
mov
mov
idivl
dec
add
andl
mov
pop
mov
add
sbb
sti
sbb
adc
mov
add
ja
movsb
in
cmp
xor
repz
sbb
push
xor
addr16
xor
movsl
inc
in
jg
in
inc
in
cltd
push
and
int
in
lods
lret
loope
mov
jae
or
push
sub
or
mov
lds
fldenv
xor
stos
fdivl
lea
mov
pop
adc
mov
or
adc
dec
test
and
and
push
cmp
cltd
test
imul
sbb
pop
outsb
add
and
pop
test
out
or
movsl
jo
and
jns
cmp
aas
lret
push
ds
push
sub
pop
push
xchg
pop
xchg
add
xchg
sti
pop
nop
imul
mov
cmpsb
loope
das
push
fdivp
jae
pop
cmp
add
pop
aam
and
push
mov
cld
dec
lret
push
push
dec
sub
int
inc
frstor
add
in
gs
sub
mov
lods
mov
add
outsb
and
mov
pop
sub
sub
mov
add
imul
ret
cltd
cmp
daa
and
inc
xchg
divl
jmp
fwait
aam
xor
jo
aad
int3
sub
jmp
xchg
mov
jmp
xchg
inc
in
lret
pop
mov
popa
mov
xchg
push
aad
popa
and
in
mov
enter
lods
jecxz
adcl
out
mov
push
cmc
lret
and
enter
push
sbb
out
inc
lea
adcb
int3
das
add
icebp
ja
andl
shlb
cwtl
in
mov
fstpl
xchg
add
orl
stos
pop
fucomi
ljmp
xor
sub
sbb
jle
or
jp
cmpsl
ret
adc
sti
cli
mov
cld
outsl
pop
cltd
jo,pt
dec
sub
mov
jecxz
icebp
js
ds
in
icebp
lea
cmp
add
loop
cmpsb
ds
and
pop
mov
jne
test
cmp
pop
pop
sbb
jb
and
push
icebp
mov
and
cmp
mov
cltd
xchg
xor
jmp
pop
lds
jmp
call
inc
xor
popa
xchg
insl
dec
iret
das
jne
mov
pusha
jge
int
insl
iret
das
sbb
bound
mov
jl
lcall
and
movsb
lret
pop
pop
and
ja
mov
lock
in
xchg
mov
pop
mov
sbb
mov
inc
mov
jmp
int
js
pop
jae
emms
jle
mov
int3
popa
out
mov
or
popa
ret
lahf
int
test
mov
cmp
cmpsl
ja
mov
xchg
or
mov
pop
out
mov
in
sbb
test
sbb
ds
cmpsb
es
imul
dec
hlt
fidivrs
dec
push
movsb
mov
stos
pop
push
cmpsl
mov
adc
xor
mov
in
ret
jnp
lock
loopne
xchg
outsl
outsl
cmp
sub
mov
nop
mov
mov
xor
call
pusha
insb
rcl
xchg
pop
inc
lock
mov
subl
jne
cmpsl
mov
roll
insb
movsb
insl
jne
xorps
and
aas
out
in
aaa
lea
xchg
aam
out
add
push
xchg
mov
out
pop
push
mov
or
mov
or
nop
jno
dec
mov
rolb
lahf
and
push
aam
sbb
inc
lret
dec
scas
out
xor
fdiv
ja
mov
pop
xchg
cltd
shl
outsl
movsl
push
xchg
sarb
test
cmp
push
inc
imul
xchg
cmp
int3
cld
test
in
test
sbb
pusha
cmp
pop
fisttps
mov
pop
add
jb
add
call
pop
je
or
imul
adc
mov
pop
das
sub
and
fldcw
in
cmc
mov
pop
bound
jp
sub
xor
inc
fidivrl
mov
mov
mov
mov
add
aas
jb
pop
repz
pop
test
push
jne
add
cmp
sub
repz
xor
mov
test
rcrl
xor
arpl
ss
jmp
mov
and
push
cmpb
xchg
jbe
push
jecxz
adc
xchg
test
imul
pop
rorb
push
push
dec
mov
insb
in
test
cmp
filds
adc
push
and
xor
add
push
push
sbb
adc
setae
add
xchg
lahf
loopne
and
bound
cld
xor
inc
xchg
adc
add
in
in
dec
sbb
xchg
stos
ret
mov
loop
arpl
loop
xchg
mov
aas
lods
outsb
push
test
sub
xor
push
cltd
or
push
jo
in
mov
scas
loope
les
je
adc
xchg
push
popf
sbb
loopne
adcl
adc
into
bound
lea
flds
mov
push
xchg
lods
in
gs
or
inc
mov
mov
fnstsw
mov
outsl
leave
insl
ljmp
or
test
mov
push
or
xchg
add
mov
lods
mov
mov
insl
fcomp
iret
xor
aad
cwtl
fdivr
je
insl
jo
sti
cmp
outsl
adc
pusha
inc
fldl
leave
test
sub
xor
jns
xchg
jmp
inc
mov
xchg
adc
mov
insl
cmp
cmp
add
adc
inc
insb
inc
pop
outsl
shl
incl
and
mov
mov
mov
aad
addl
jno
in
pop
jno
clc
dec
and
daa
mov
test
addr16
das
adc
add
cmp
int
mov
sbb
setbe
cmpsl
imul
pop
lods
xor
xor
push
lods
test
iret
xchg
outsb
outsl
fs
dec
and
imul
jmp
xchg
cmp
mov
adc
repnz
mov
jae
dec
ficompl
inc
lahf
fmull
test
fcompl
jne
cmp
jns
or
or
les
pusha
movsl
pusha
jg
daa
adc
jg
or
andl
push
xor
nop
call
pop
lret
invd
jo
jbe
sbb
fisttpl
test
fisttpl
or
lcall
lret
mov
mov
lret
mov
popa
pop
sub
sbb
rcl
pop
in
jecxz
addr16
negb
or
mov
or
jbe
xor
cltd
cwtl
lods
pop
movsb
cwtl
cmp
push
fwait
jno
ret
push
or
ret
sub
xchg
mov
and
add
sbb
repz
and
andb
xchg
push
cmp
sbb
rorb
add
dec
fbstp
pusha
pop
pusha
mov
fcoms
aad
adc
lret
inc
mov
in
xor
fcomps
jae
repnz
jno
mov
jb
nop
mov
popa
hlt
jae
daa
mov
shlb
das
popa
mov
imul
call
icebp
lret
lods
jns
repz
mov
daa
mov
leave
nop
test
mov
in
cld
lea
std
daa
mov
mov
daa
test
dec
popa
mov
fisttpll
xor
les
and
add
outsl
ret
mov
test
inc
xchg
rorl
shlb
pusha
cmp
xor
push
hlt
or
jbe
mov
mov
xchg
lds
arpl
in
add
in
roll
xchg
dec
shl
hlt
outsb
xlat
in
and
xchg
cmp
mov
sahf
daa
mov
pop
icebp
xor
mov
mov
imul
xchg
adc
in
xchg
das
call
cmc
mov
sarb
jmp
ja
mov
roll
xchg
add
loop
xor
mov
cmp
sbb
sbbl
fildl
push
rolb
popf
cmp
dec
leave
or
rcl
pop
in
test
popa
cmpb
inc
push
ds
cmp
pop
xchg
cmp
jbe
ds
add
les
nop
jno
mov
hlt
pop
adc
xor
cmpl
add
and
xchg
push
push
hlt
inc
cmp
cmp
aaa
mov
ror
jg
cmp
les
jno
mov
xacquire
mov
mov
mov
jbe
cmp
les
pop
adc
pusha
cmp
dec
and
aas
imul
test
push
and
dec
lahf
sub
and
adc
sub
popa
or
imul
in
ret
xchg
push
cmc
xchg
aas
mov
xchg
cmp
imul
adc
imul
cmp
mov
push
cmp
mov
xchg
and
outsl
cmp
jbe
cmp
out
adc
daa
cmp
push
nop
test
xchg
jne
test
daa
inc
pop
xchg
imul
add
call
pusha
xchg
test
jecxz
dec
jmp
rorl
xchg
xchg
mov
aad
xchg
jbe
cmpsl
mov
push
arpl
pop
jle
popa
repnz
push
sbb
call
inc
cmp
push
int3
xchg
iret
stc
loopne
out
fcmovnbe
cmp
sar
sti
test
mov
test
call
pusha
xchg
stos
aad
cmp
mov
leave
pop
aaa
outsb
int
xor
ret
xchg
add
adc
xor
xor
iret
lock
das
and
int
lods
mov
out
add
daa
imul
adc
cmp
in
call
mov
cmp
or
daa
xorl
pusha
xchg
insb
jmp
outsl
pop
pop
and
jns
aaa
jge
xchg
outsl
bound
outsl
bound
je
pop
and
out
push
outsl
int
stos
out
pusha
xchg
out
idivb
pop
and
ret
jns
sbb
rcr
arpl
add
mov
pop
out
sbb
in
mov
jmp
dec
andl
shl
out
pop
sbb
add
imul
mov
sbb
mov
imul
daa
or
mov
repz
nop
popf
mov
test
xchg
ja
scas
andb
inc
xchg
adc
mov
daa
mov
in
in
test
sahf
jmp
cwtl
orl
fsubl
addl
arpl
lcall
and
int3
les
and
mov
jmp
js
lea
add
mov
push
add
dec
stc
and
ret
and
pop
jbe
adc
daa
sbb
or
cmp
add
inc
int
sahf
pushl
imul
imul
cmp
rcr
rcrl
aam
pusha
hlt
loop
mov
out
test
pop
ljmp
mov
and
lea
lahf
pop
cmovnp
loopne
mov
jecxz
test
jecxz
and
stc
and
pop
int3
and
jbe
and
mov
jmp
jae
sub
dec
popa
adcl
movsl
in
sbb
out
mov
loope
test
pusha
cmp
and
dec
scas
adc
jno
xor
loope
adc
fs
adc
popf
nop
pop
lret
fsubl
daa
stos
pop
aad
stos
pop
loopne
sahf
popf
jmp
insl
fwait
mov
loopne
and
out
jecxz
outsb
out
pop
sub
leave
or
jbe
jmp
jnp
xor
ret
addl
fildl
fwait
enter
out
fcomi
and
xchg
cs
loope
mov
leave
jmp
cmp
cwtl
imul
or
loope
xchg
add
jecxz
outsb
out
int
out
dec
shrb
xchg
and
adc
insl
push
jbe
lods
adc
cli
adc
jns
xchg
pop
mov
jno
arpl
into
dec
push
and
and
and
add
mov
outsl
bound
popa
filds
incb
pusha
aad
xor
aad
pushl
sbb
mov
out
lods
incb
js
and
in
mov
inc
push
arpl
add
daa
in
push
nop
adc
cmp
pop
incb
sbb
sbb
ret
xor
sbb
out
out
jp
mov
aad
sbb
xor
cmpsb
jnp
cmp
jge
mov
mov
pop
xchg
lret
popf
cmpsl
ret
cwtl
lods
mov
cld
sbb
inc
pop
mov
call
dec
push
lahf
imul
mov
lcall
inc
call
push
xor
outsb
or
or
movsb
jmp
in
arpl
xchg
outsb
ficoms
outsl
cmc
outsb
sub
lds
outsb
aad
mov
jecxz
xor
dec
push
mov
adc
out
adc
lcall
popa
adc
stos
movb
outsl
bound
and
xchg
jns
ljmp
hlt
ss
mov
leave
lahf
mov
xor
mov
inc
dec
jbe
es
in
in
rcll
les
in
lods
test
inc
outsl
in
push
push
aam
adc
mov
jmp
lret
shr
cltd
xchg
movsb
cmpsb
aaa
dec
mov
arpl
mov
jp
inc
mov
repnz
cltd
mull
sub
jns
test
lods
notb
sbb
in
or
in
inc
xor
adc
cmp
cwtl
scas
test
insb
dec
jg
and
mov
sub
sub
add
test
sti
xor
jecxz
outsl
add
add
inc
stos
dec
mov
adc
lock
push
fidivl
lods
scas
and
cmpsl
mov
mov
call
sbb
cmp
punpcklbw
addl
push
cmp
xchg
andl
jp
and
mov
jns
mov
adc
mov
xchg
adc
rorb
subl
mov
sub
add
into
fstps
push
adc
inc
adc
cmp
out
push
xchg
xchg
les
insb
fisttpll
add
cmp
push
popf
sbb
sub
sti
stos
dec
inc
xorl
aaa
ja
xchg
stc
sbb
and
add
ret
lods
add
loope
xchg
jp
cmp
addr16
shll
jg
or
push
pusha
mov
jne
popa
pop
xchg
adc
loop
aad
nop
cmpl
push
sbbb
lea
insb
ja
jl
shrb
cmpsl
imul
lods
xlat
mov
loope
sti
mov
xor
mov
cmp
sub
ljmp
cmpb
aad
sbb
inc
cmp
ss
cmp
stos
pop
xlat
call
cli
pusha
mov
inc
sahf
mov
sub
aam
call
xchg
cmp
cmc
push
fmuls
xchg
lds
cld
or
andl
stos
inc
stc
iretw
jbe
cmp
sub
inc
and
es
sbb
daa
lea
xchg
push
xlat
nop
mov
jle
rolb
rcrl
push
fucomip
jg
or
arpl
inc
cmp
fs
out
lret
pop
shll
call
mov
mov
rorl
push
insl
xor
rcll
lods
les
nop
sbb
jbe
daa
popf
xor
mov
pushf
lods
pop
mov
mov
adc
and
mov
add
out
push
xchg
and
pop
cmp
mov
popa
jbe
mov
jnp
pusha
sub
je
call
xor
in
mov
pushf
or
in
out
arpl
sahf
cmp
hlt
mov
lea
adc
fists
add
popa
xchg
xor
sbb
out
adc
daa
push
jbe
in
push
jbe
mov
lea
cmp
pop
ret
mov
dec
mov
xchg
push
push
leave
add
jg
mov
aam
xchg
pushf
icebp
js
mov
xchg
pop
call
mov
add
add
add
je
in
ljmp
lret
lds
sbb
lods
dec
fisubl
and
pop
mov
jns
push
insl
fnstsw
dec
stos
sub
cmp
test
fadds
ja
jns
outsb
push
sbb
cmp
jne
loopne
xor
cmp
add
leave
daa
andl
lahf
add
xchg
or
xor
inc
xor
pop
sbb
sub
ss
adc
aas
in
jl
pop
add
cmp
roll
ret
or
roll
imul
xchg
daa
xor
sbb
jnp
cmp
mov
sbbl
pop
lahf
add
xchg
or
sahf
xor
lea
stos
arpl
lods
cmp
lahf
sbb
adc
cmp
xchg
mov
mov
push
ret
in
ja
push
popa
or
push
cmp
test
cmp
leave
sahf
imul
adc
dec
xor
jg
sbb
mov
lahf
dec
leave
ss
fwait
sbb
xchg
pcmpgtd
lret
pop
scas
push
fucomip
sarl
push
inc
cmpl
push
jnp
jo
lahf
fs
jne
cli
mov
icebp
rcr
out
outsl
rcrl
xchg
lret
or
filds
fnsave
cmpsl
ret
mov
pop
cmpb
aad
lods
push
push
push
and
lcall
insb
lret
data16
sbb
pop
cli
outsb
push
jbe
mov
iret
xchg
jmp
das
xchg
cmp
leave
clc
add
fwait
sbb
lods
sti
push
pop
cli
adc
inc
sub
pop
xchg
jge
pop
aaa
data16
cmp
das
loop
clc
arpl
xor
push
mov
inc
sahf
or
mov
and
sbb
pop
js
or
in
int
pusha
addb
inc
and
mov
cwtl
arpl
lss
mov
jle
mov
loop
inc
in
outsb
push
sub
lahf
sti
mov
and
insl
ret
mov
push
xor
cmp
adc
pop
xor
stc
inc
ds
mov
loopne
xchg
stc
and
stos
aam
icebp
ss
and
inc
rorb
and
push
fnsave
jmp
xor
stos
mov
sar
mov
mov
cmc
leave
mov
aas
fdiv
mov
stc
and
cmpsl
rcl
mov
dec
ljmp
mov
into
movsb
inc
sub
jp
and
dec
ja
fucomi
and
pop
out
and
not
jmp
pop
filds
jmp
push
lock
xchg
cmp
out
mov
movsl
and
mov
addr16
leave
fbld
negb
xchg
mov
out
mov
mov
dec
or
and
movsb
daa
cmp
jb
les
enter
push
jns
movsb
stc
ss
stc
xchg
test
sbb
clc
fists
test
dec
outsb
jno
jnp
adc
fwait
sbb
cwtl
add
jg
fimull
and
mov
add
test
stc
inc
pinsrw
add
mov
clc
push
in
ret
sbb
in
sub
jbe
daa
shll
or
inc
mov
xor
lret
cs
stc
ljmp
cmpsb
fadds
adc
mov
push
fiadds
loope
mov
clc
jl
insl
leave
aam
cwtl
test
stc
pop
pusha
fs
sar
mov
pop
sbb
fcoms
add
cmpsb
vmaxpd
xchg
mov
leave
aam
fcomi
stc
xchg
js
cmp
lret
sub
xadd
sbb
imul
mov
adc
lret
mov
enter
test
stc
dec
and
stc
subb
pop
cmpsb
repz
cmp
and
jmp
stc
stos
jae
aad
imul
jecxz
adc
int3
loopne
cmpb
out
add
shrl
pushf
and
loopne
mov
adc
mov
inc
ja
jecxz
mov
push
sarl
mov
lret
aam
ja
dec
mov
clc
sub
test
stc
leave
hlt
and
xchg
out
ljmp
hlt
dec
jg
aad
lcall
lcall
imul
fcmovnb
stc
nop
cmpsb
or
mov
xor
xchg
lds
pop
hlt
ds
add
mov
jl
clc
and
xchg
mov
xlat
adc
cmc
dec
hlt
inc
mov
loope
leave
aam
mov
pusha
jo
sub
lods
cmpsb
pop
mov
mov
lea
push
pop
pusha
pop
les
aas
mov
jge
clc
cwtl
ja
clc
fsubrl
fldcw
adc
sar
dec
push
subb
ja
push
int
arpl
sub
cmp
inc
movsb
loope
mov
jmp
outsb
jnp
outsl
stos
jmp
pop
jnp
leave
xchg
push
jle
push
out
adc
mov
in
xchg
sar
cmp
cmc
jnp
ret
jecxz
data16
data16
mov
out
sub
sti
pop
pop
hlt
xchg
sbb
jl
adc
xchg
or
lahf
ja
adc
sbb
xor
pop
fdiv
mov
clc
out
push
xchg
test
lret
icebp
inc
cmp
imul
clc
mov
xor
insb
je
fnstsw
sti
fwait
jle
test
xchg
int
fwait
addr16
ret
aas
daa
in
aaa
sbb
cmp
mov
stc
lret
std
mov
std
lret
jbe
js
mov
int
rcrb
mov
es
xchg
add
aam
or
int
in
pop
pop
scas
or
mov
out
cmp
into
aam
adc
pusha
arpl
add
adc
xor
ja
cmpl
test
inc
pop
jl
push
xor
imul
adc
dec
jae
test
notb
out
scas
cwtl
int
xchg
push
pop
pusha
sbb
pop
lahf
lods
cmp
xor
mul
lods
lcall
jns
cmpsl
lds
adc
and
scas
fstpt
jp
jg
loop
mov
aam
push
push
cs
inc
cmp
jno
mov
and
pop
les
jmp
and
sub
cmp
jb
jp
lcall
int3
mov
stos
inc
out
xchg
pcmpeqw
mov
cmp
mov
mov
mov
sbbb
movsl
les
mov
mov
aam
outsb
pop
jbe
cmp
or
add
dec
lahf
push
lods
daa
jecxz
movsb
cmp
subl
xlat
sbbb
in
dec
outsl
or
add
rcrb
or
mov
lcall
mov
sbb
sbbl
inc
jg
jecxz
dec
pop
movsb
in
xorb
inc
mov
dec
in
xchg
or
ret
rol
xchg
sub
jne
mov
cmp
xchg
popf
popf
les
cmc
cwtl
push
fistl
adcl
stc
pop
loop
gs
adc
and
aaa
cmp
cmp
jge
lods
in
ret
mov
outsl
pop
jmp
aam
add
pop
and
js
setbe
and
or
and
cmpsl
insb
repnz
out
mov
rcl
inc
ljmp
pop
mull
cmp
cmp
cmp
push
test
add
jecxz
pop
push
inc
cmp
aas
ljmp
sahf
inc
inc
aad
shlb
and
push
popa
sbb
daa
lret
push
dec
nop
cmp
mov
mov
out
lret
inc
pop
popf
insl
les
test
bound
xchg
xor
mov
in
xor
mov
xorl
ja
xor
sub
aam
push
mov
jle
lock
mov
ljmp
in
xchg
call
or
sub
sbb
xlat
xchg
add
push
les
stos
insb
stos
jns
js
pop
push
or
inc
xchg
cmp
test
test
sub
out
cmp
xor
out
aad
and
inc
and
adc
mov
cmp
cwtl
cmp
cmp
out
stc
rol
out
push
movsl
pop
add
push
cmp
mov
scas
das
out
clc
fcoml
jne
loop
sub
rolb
hlt
mov
shrl
cmp
int3
lret
outsb
jns
mov
js
push
out
into
pop
aas
or
orb
int3
ret
xchg
jno
jge
mov
add
mov
cmp
dec
shlb
out
dec
aas
fnstsw
jmp
push
nop
and
mov
mov
mov
inc
inc
popa
mov
cmpsb
ret
dec
repnz
xlat
popf
inc
andl
xor
daa
mov
in
lret
cmp
add
push
and
movsb
jmp
rol
jne
cmpsb
movsl
stc
sbb
cmp
mov
and
mov
iret
lods
xchg
stos
loop
push
int3
cmp
jle
adc
loop
shrl
jno
xchg
out
or
xor
js
pop
push
mov
inc
xlat
mov
pop
mov
and
add
and
jae
call
addr16
fiaddl
std
mov
cmp
insl
popa
pop
xor
cltd
daa
adc
xchg
dec
je
jnp
mov
popa
pop
imul
mov
push
pop
mov
adcl
cmpsb
adc
adc
dec
out
jp
pusha
inc
add
dec
icebp
xor
sbb
lods
xchg
movsl
jbe
outsl
sbb
inc
imul
mov
insb
xor
mov
pop
lahf
or
cld
mov
mov
daa
mov
addr16
fsubrs
dec
mov
cmp
mov
int3
pop
inc
push
mov
mov
insb
out
sub
jb
insb
std
cmp
xlat
inc
int3
cltd
cltd
push
xlat
cli
test
popa
jg
or
adc
js
mov
fnstcw
pop
lds
subb
addl
in
dec
imul
mov
pop
pop
loop
gs
mull
mov
test
negb
out
es
pop
xor
cmp
mov
clc
mov
adcb
test
dec
jbe
inc
cmpsl
ja
sbb
popa
push
dec
pop
push
mov
mov
and
aam
outsl
cmp
sbbl
adc
jl
add
xchg
mov
jnp
mov
jl
adc
xchg
mov
dec
sbb
and
dec
or
sub
dec
aad
or
jbe
ja
jno
push
inc
jmp
jmp
daa
jle
or
push
sub
insb
push
and
lock
push
daa
lods
jl,pn
jbe
cmp
das
sahf
pavgb
fwait
add
pop
push
test
jmp
push
jg
aam
and
jbe
lods
std
cwtl
addl
add
movsb
push
pop
xor
addb
test
and
sti
mov
out
dec
cli
mov
lods
jmp
adc
xchg
sbbb
fnstcw
idivl
jo
popa
mov
cmp
andb
outsb
pop
cmp
and
es
add
and
xor
sbb
rcrb
xorl
jns
inc
mov
cmp
pop
dec
add
scas
aad
dec
mov
or
dec
sbb
and
jo
in
xor
xchg
xor
rcrb
shll
xlat
rcrb
cmp
sahf
mov
insl
mov
shlb
and
cmp
movsl
cwtl
lds
cmp
or
jmp
fstpt
inc
dec
and
daa
xchg
ljmp
xchg
adc
lahf
stc
pop
aad
mov
and
pop
hlt
add
cmpsl
mov
xchg
call
mov
or
cmpsl
pop
out
jbe
add
outsl
cs
jns
scas
in
dec
jmp
mov
test
cmp
loopne
xchg
adc
fists
lret
mov
ret
stos
cltd
ljmp
cmp
sbb
add
and
lret
mov
out
es
rorb
sahf
aam
nop/reserved
pop
cld
aam
jns
cmc
movsw
loopne
cmpsb
daa
dec
cs
sub
mov
stc
push
lcall
rcpps
es
fnstcw
xor
test
imul
sbb
scas
fs
fsubl
fucomip
fildll
call
sbb
stos
xchg
scas
cmpsl
cs
shll
movsb
aad
imul
ret
cwtl
aam
xchg
push
popa
cmp
pushl
in
insb
outsl
rorl
test
not
dec
mov
bound
daa
sbbl
push
sub
xchg
nop
push
inc
rcl
lods
gs
lods
cltd
lods
jmp
push
test
or
mov
and
or
mov
ret
sub
cmpsb
mov
xor
lods
clc
movq
movsb
xchg
dec
neg
push
inc
aas
sub
pop
add
fs
ja
shrl
mov
into
orb
dec
add
je
cmp
sbb
outsb
cmc
adc
xchg
and
dec
arpl
cld
out
aas
mov
dec
and
push
scas
mov
into
mov
and
xchg
loop
push
mov
push
mov
xchg
les
stc
xor
test
lods
cmp
push
jbe
mov
mov
cld
add
cmp
mov
xor
inc
mov
jne
jl
lods
push
out
insl
test
stc
mov
xor
xlat
sti
clc
fcmovu
les
and
cmpb
jbe
loope
xchg
lods
imul
xchg
add
adc
xchg
das
push
movsb
stos
daa
cld
mov
ffreep
sub
ja
fdivs
sub
sub
cmc
xchg
orl
es
stos
aam
out
shll
push
in
jns
xchg
sbbl
xchg
in
sbb
xchg
or
aad
cmp
jge
sub
xchg
movl
lahf
mov
hlt
cwtl
mov
xor
mov
and
and
ret
pop
adc
call
jno
dec
inc
lds
xchg
dec
jno
mov
and
lret
add
pop
loope
es
mov
push
mov
mov
enter
stc
out
mov
jecxz
jns
sbb
imul
add
dec
or
das
insb
cwtl
xchg
adc
aas
call
sbb
test
cmp
jp
pop
je
lcall
jns
lods
test
sub
jmp
lods
jp
pusha
popf
or
push
lea
shrb
js
in
pop
xchg
mov
int
insb
adc
mov
mov
jne,pt
jge
gs
insl
push
push
pop
sbb
cmp
fnstsw
rclb
dec
cmp
inc
pop
loope
insl
and
mov
mov
and
imul
lahf
pusha
dec
or
dec
and
and
aad
jge
popa
movsb
bound
mov
ret
das
in
mov
out
add
out
or
cmp
inc
xchg
dec
jmp
subb
in
or
rorl
push
adc
cmpsl
movsl
mov
or
pop
cmc
xchg
setg
aas
and
test
and
fwait
pop
and
loope
fcomi
in
cmp
jno
inc
pop
bound
push
lods
and
sub
cmp
filds
dec
daa
int
jecxz
in
and
lods
call
ss
xchg
and
or
mov
adc
int
pop
pushf
or
cld
xchg
pop
push
lahf
orl
jg
cmp
push
pop
cmpsl
movsl
mul
lods
scas
mov
push
lds
cmp
inc
jecxz
aas
mov
test
loope
test
aad
test
cltd
js
rcl
std
sub
jmp
mov
iret
je
push
mov
pop
adc
out
inc
insb
jmp
pop
cmpl
shll
aas
lea
popa
stc
out
or
jge
cmp
jbe
loope
jae
pusha
movl
adc
push
or
out
pop
and
shrl
insl
shlb
sub
push
orl
cmp
pop
and
insl
in
add
and
sub
pop
lds
in
subl
lret
push
lahf
or
test
xchg
pop
gs
int3
push
arpl
fnstsw
pusha
xor
pop
add
insb
stc
xchg
push
shl
mov
and
and
fwait
pop
icebp
mov
push
mov
ja
movsb
push
dec
or
call
dec
movsl
cmp
movsl
shrl
out
push
mov
jmp
sahf
pop
dec
push
rcr
out
xor
in
ror
out
mov
lret
mov
dec
dec
mov
imul
sub
clc
jns
movsb
insb
mov
xchg
sbb
mov
cli
loop
inc
shll
aad
jns
sbbl
into
pop
int
xchg
mov
pop
fldenv
lock
aaa
ljmp
sahf
popf
imul
xchg
xchg
ret
cltd
xchg
stc
mov
xchg
mov
shll
sahf
int
jae
cmp
out
insl
dec
sub
xchg
fldenv
add
es
xchg
mov
pop
push
loopne
mov
in
loopne
test
cld
aam
fistl
mov
add
mov
lahf
stc
and
pop
push
outsb
mov
pop
push
fldl
xlat
gs
jae
and
out
and
cmp
test
cmp
call
and
insb
mov
mov
fisubl
add
dec
lahf
in
insb
aam
cwtl
lahf
cmp
aam
mov
aas
inc
dec
mov
int3
in
pusha
push
cmp
mov
cmp
sub
pop
test
pop
jae
or
adc
mov
mov
outsb
pop
and
aam
in
in
mov
test
push
movsl
sub
xchg
imulb
lret
add
and
add
or
push
mov
inc
imul
sarb
leave
mov
xchg
sti
aaa
add
aas
jns
stc
jl
xchg
aas
int
sub
mov
je
add
cmp
cmp
push
xchg
jl
push
jne
aam
inc
movsb
xchg
sub
shr
inc
jp
in
and
lock
mull
fisubl
fcoml
insl
push
mov
addb
mov
aam
xlat
or
push
and
add
enter
xchg
das
mov
sub
enter
clc
data16
lock
push
or
sbb
mov
fs
inc
xchg
outsl
lds
aaa
cmc
mov
rol
rorl
icebp
sbb
and
add
loop
mov
inc
mov
jne
arpl
lahf
subl
adc
and
push
pop
imul
dec
push
xchg
cmpsb
loopne
insl
aas
mov
sbb
aas
outsl
jnp
iret
lea
jne
push
xchg
mov
das
test
aas
aaa
xchg
nop
jns
sbb
xchg
movsb
cmp
sub
pop
fistpl
daa
add
xor
fxch
cmp
and
outsb
mov
aas
movsl
ret
xor
aam
and
daa
lods
mov
mov
mov
sbb
push
jmp
cwtl
aam
scas
scas
fildl
ds
gs
stos
xchg
fcoml
icebp
rorb
xchg
xchg
xchg
sbb
xchg
aas
lret
inc
mov
rcll
cmp
adc
in
xchg
call
fstpl
sub
dec
sahf
jecxz
out
sub
daa
test
pusha
stc
push
jmp
add
sbb
in
imul
aaa
addl
jge
mov
mov
loope
fstpl
and
bound
sbb
mov
rclb
sarb
inc
es
icebp
push
push
pop
push
inc
lcall
scas
jne
sbb
jae
aam
das
mov
out
pusha
xchg
adc
aaa
xor
lods
fwait
inc
xor
mov
sub
adc
pop
in
adc
ds
loope
xor
shl
sbb
pop
and
cmp
mov
xor
lock
and
mov
xchg
aam
stc
cmpsl
int
sti
or
pop
cld
mov
add
lods
andb
stos
mov
idivl
pusha
hlt
or
push
cmc
pop
stc
fldcw
xor
mov
mov
mov
xlat
and
rorb
mov
loope
dec
sbb
inc
mov
fcomi
insl
sbb
mov
cmpsb
out
dec
mov
push
rcll
cmp
pop
in
cs
insb
in
mov
mov
and
shlb
pop
rcrl
mov
jecxz
xchg
and
fsubl
loope
loopne
sub
pop
mov
imul
stc
negl
cltd
jno
pop
mov
imul
lahf
push
sub
repnz
loope
ljmp
mov
ret
jne
pop
das
pop
shl
add
add
and
jmp
roll
mov
and
out
pop
out
aas
popa
imul
arpl
cmp
js
jl
stc
stos
mov
inc
xchg
and
jp
pusha
popf
or
push
lods
pop
lds
mov
into
xchg
sbbl
mov
ss
fcmovu
stos
mov
sbb
xlat
fsubrs
jbe
xlat
shrb
inc
int3
dec
ja
adc
xor
outsb
sahf
es
push
sbb
mov
dec
jmp
sub
cmp
mov
jp
fdivr
movsb
call
and
adcb
rcrb
mov
into
push
cmpl
sbb
aas
out
lea
mov
sub
push
loope
loopne
fs
jne
loope
cmc
test
adc
xor
aaa
insb
jbe
sbb
push
lods
dec
push
push
sub
in
mov
or
jecxz
in
insl
jmp
ja
sbb
shr
std
push
fisttpl
push
test
orl
pusha
loope
jmp
pop
sub
lahf
mov
push
mov
test
add
or
jne
in
addr16
and
pop
js
push
jmp
add
dec
jno
aam
pop
jge
ja
leave
and
mov
push
outsl
and
push
push
outsl
sub
cmp
add
lahf
inc
mov
cmc
xor
imul
cmp
xchg
gs
imul
push
inc
loopne
mov
popa
pop
and
rorl
and
xor
xor
fistps
adc
mov
popf
repnz
imul
or
dec
imul
pop
test
add
in
inc
sub
mov
push
cmp
cs
cltd
outsl
imul
pop
pop
or
es
shll
add
adc
lods
add
ja
mov
popa
adc
movsl
out
shrb
insl
push
mov
popa
add
mov
arpl
scas
adc
jae
mov
push
adc
jb
cmp
cltd
sbb
cmp
sub
push
mov
mov
shr
ss
popa
les
mov
and
ret
push
dec
xorb
or
push
cmp
cltd
ljmp
dec
loopne
mov
imul
repz
dec
adc
movl
pop
xor
or
cmp
lods
loopne
and
mov
mov
pop
adc
and
testl
pop
push
faddl
aas
xchg
pop
in
and
imull
mov
mov
inc
sub
data16
mov
sub
or
mov
xor
add
adc
lods
inc
rcl
dec
pop
insl
shrb
xlat
mov
and
cltd
bound
mul
sbb
scas
stos
push
adc
mull
mov
popa
ljmp
fxam
cmpsb
and
lods
stc
out
test
clc
lahf
push
repz
dec
test
stc
imull
cmp
mov
mov
fildll
fisubrl
clc
fldt
pop
test
fcmovu
out
push
fdivr
lea
shrl
fbstp
sub
test
in
mov
sti
mov
sub
shl
aad
mov
sti
rcr
sbb
xchg
cmp
sub
sti
cltd
fcmovu
cmc
sub
hlt
repnz
cmp
es
push
push
and
mov
push
or
jp
pushf
jge
adc
fisttpl
ret
xchg
adc
pop
add
add
aad
cmpl
pop
lods
and
mov
cmp
and
cmpsl
out
shrl
jbe
insl
jecxz
inc
cmp
push
push
sub
pop
loop
xor
mov
daa
subb
fnstcw
push
push
or
rorb
or
sbb
daa
jl
or
dec
pop
stos
jbe
add
ljmp
and
outsl
add
jns
int
inc
push
jmp
cmp
data16
push
push
push
or
jnp
mov
movsb
jb
les
xchg
sub
shlb
ja
ret
xor
jo
adc
push
test
dec
mov
and
mov
adc
pusha
sbb
aad
loop
add
or
xchg
popf
mov
mov
mov
and
insb
loope
call
and
jge
nop
mov
popf
pop
push
and
push
jne
inc
cmp
repz
push
pop
jg
jecxz
sbbl
push
ljmp
or
testb
inc
jne
daa
sbb
cmp
jl
jo
aam
shl
mov
mov
fsubl
ss
insl
hlt
sub
mov
sbb
stc
cwtl
pop
out
push
adc
pop
outsb
cmp
loope
xchg
rcr
push
lods
js
cmp
push
and
xchg
fsubrl
mov
jmp
cmp
arpl
aam
mov
lret
cmpb
mov
popf
mov
faddp
in
add
xchg
js
jecxz
mov
aaa
int
xchg
adc
imul
mov
lea
test
cs
imul
cs
imul
aas
dec
cltd
sub
in
insl
adcl
stos
shr
sub
xchg
loopne
jo
cli
in
out
push
cmp
fisubrs
and
or
movsb
cli
and
pop
popf
scas
xor
scas
jne
cmp
fdivrp
int3
cmp
mov
sub
jno
xchg
sbb
push
movsl
mov
icebp
push
mov
mov
imul
mov
repz
fsubr
and
lret
out
sub
in
adc
ret
into
sub
adc
mov
nop
add
int3
mov
mov
call
data16
cld
mov
aad
pop
xchg
and
mov
xor
jp
mov
out
inc
mov
cwtl
call
xchg
push
sar
insl
pop
adc
or
cmp
xchg
cmpsb
pushf
add
inc
lods
xor
sbbl
cltd
mov
lret
cmp
aad
outsl
mov
push
insl
xchg
sbb
test
inc
cmpsl
mov
push
sbb
imul
aas
js
xchg
ljmp
dec
mov
movsb
xchg
lds
fs
inc
jbe
push
lret
lods
add
js
mull
les
sbb
xchg
dec
out
xchg
arpl
xlat
pop
insb
out
fs
push
xchg
dec
xor
nop
sbb
mov
test
adc
or
nop
enter
mov
mov
fisubl
xor
pop
aas
in
pop
fsubl
dec
orb
cmpb
mov
loopne
loopne
out
out
adc
clc
xor
and
mov
mov
sahf
rorl
jbe
cmp
sbb
arpl
ss
add
insb
push
mov
xchg
xor
jmp
loope
and
mov
xchg
or
push
xor
ja
jb
shlb
mov
imul
mov
and
push
rolb
push
pushf
add
fld
dec
jae
psubsw
ffree
add
jno
or
xor
lret
lret
in
fs
mov
popa
leave
and
pop
pop
roll
xor
sub
pop
or
jne
aas
cmp
dec
sar
jmp
or
cmp
cmp
sbbl
inc
inc
hlt
das
js
or
leave
cmp
cltd
mov
jns
inc
fs
and
sbb
cld
sbb
cmpsl
and
aad
scas
scas
fnstcw
add
imul
add
mov
push
imull
xlat
out
sub
adc
mov
frstor
es
imul
ret
js
sbb
sahf
xor
push
call
lds
in
adc
inc
mov
ds
jnp
pusha
movsl
or
push
test
cmp
mov
or
jns
insb
mov
xchg
cmpb
fwait
cltd
popa
int
mov
test
setae
push
mov
insb
add
pop
xorl
pop
mov
test
insb
in
push
in
cmp
and
jge
imul
leave
insb
stc
xchg
aas
adc
pusha
gs
sbb
mov
sub
and
pop
daa
cmp
push
jno
gs
adc
shll
aas
fnstcw
insl
and
insb
pop
xlat
sbb
loopne
mov
sbb
insb
arpl
pop
push
pop
xorl
mov
push
jmp
push
adc
daa
mov
mov
or
xor
sbb
xor
pop
insl
mov
out
xchg
stc
sarl
aas
sarl
and
insb
pop
xlat
sbb
call
icebp
push
xchg
mov
dec
adc
das
mov
ds
jp
pusha
icebp
push
jmp
imul
mov
mov
cmc
lcall
and
push
jns
push
pop
or
xchg
scas
cmp
sub
xor
test
movsb
insb
notl
fldcw
add
fnstcw
insl
adc
repz
and
xchg
push
insb
jl
and
call
jmp
cmp
gs
pop
mov
test
insb
loope
in
cmp
sbb
pop
pop
cmpsl
jne
popa
or
xor
insb
mov
imul
cmpsl
andl
leave
pop
movsl
mov
popa
test
roll
fcomp
lahf
or
sahf
mov
and
das
andl
movsb
jecxz
and
push
dec
addl
sbb
or
pop
stc
mov
in
push
cmpl
jno
push
mov
mov
mov
or
pusha
push
push
add
mov
sub
insb
stos
xchg
and
cmp
jns
insb
imul
add
xchg
push
rcrl
adc
rcrl
mov
sti
sbbb
mov
adc
adc
ds
jp
in
arpl
xor
ds
or
push
stc
outsl
xchg
lahf
movsb
pop
xor
sub
pusha
gs
adc
clc
insb
mov
xor
mov
push
imul
int
scas
mov
mov
adc
insb
lods
xlat
jno
in
mov
xor
insb
outsl
xchg
popa
shll
inc
push
pop
cmpl
mov
or
xor
or
add
sbb
xchg
mov
rcrb
test
xor
jge
and
popf
push
filds
mov
in
addr16
insl
rorl
push
das
andl
mov
or
pop
stc
mov
outsl
mov
imul
push
popf
pop
int
insl
cmpl
pushf
js
daa
and
pop
jns
insb
sti
xchg
xchg
rcr
icebp
push
cmpsl
cltd
sub
rcrl
insb
aaa
xchg
pop
rcrl
mov
jecxz
xchg
and
int3
cmpsl
std
mov
xchg
mov
jmp
rcrl
push
aaa
adcl
sbb
test
nop
xor
push
mov
pusha
jne
gs
imul
in
mov
fnstcw
ja
sbb
push
andl
pop
mov
movsl
jp
pusha
cltd
or
pop
and
mov
mov
insl
test
roll
xchg
test
insb
push
xchg
shll
pop
push
pop
cmpl
pop
aad
test
or
mov
aas
sbb
pusha
gs
adc
in
mov
fxch
andb
xchg
addr16
push
outsb
jns
jns
cmp
popa
mov
or
pop
and
insb
stc
andb
sub
push
adc
lock
cmpsl
xchg
and
pop
push
mov
push
ljmp
xlat
movl
daa
xor
insl
sbb
insb
lods
xlat
jno
lock
cmpsl
test
insb
outsl
xchg
popa
shll
inc
push
adc
cmpsl
movsl
mov
or
pop
in
loop
jae
sbb
push
mov
ds
jnp
pusha
mov
insb
loope
xchg
andl
pusha
pop
push
or
movb
popa
sub
inc
push
jne
imul
push
sahf
mov
sub
or
in
mov
sub
insb
insb
xlat
dec
addl
mull
ds
js
in
jae
sbb
jno
sub
pop
mov
or
aaa
ret
insb
test
fsubl
lds
mov
jno
insb
mov
out
jmp
stos
mov
mov
rcll
xor
cmp
push
insb
setae
insl
xchg
aas
leave
jns
insb
jne
insb
pushf
xlat
iret
sbb
aam
xor
push
push
jno
insl
mov
rcll
xor
sub
pop
insb
mov
out
in
sub
push
sarb
imul
push
pop
orl
mov
std
out
sbbl
aas
mov
lods
jp
pusha
std
push
xchg
cld
aam
adcl
pushl
cmpsl
movsl
mov
or
pop
sarl
int
cmp
cmp
push
pop
push
or
dec
xchg
mov
xor
fists
cld
mov
loope
xchg
sbb
and
cmpsl
jne
jns
insl
inc
in
xor
sahf
jae
xor
stos
pop
into
push
fimull
in
movsb
popf
addr16
add
ret
and
mov
andb
in
adc
ffree
jmp
int3
imull
inc
iret
mov
mov
mov
insb
mov
xor
push
stc
ret
fisttpll
ret
jmp
repz
icebp
pop
pop
adc
sbb
or
mov
pop
mov
jg
mov
or
ret
shll
repz
or
xor
mov
jbe
mov
in
sbb
cmpsl
lods
shlb
in
xchg
pop
xor
jmp
les
sub
aam
stc
mov
xchg
cmp
bswap
sbb
push
gs
out
nop
cmc
mov
mov
jmp
fs
adc
loope
mov
insb
or
mov
out
aaa
cmp
mov
cli
or
mov
negl
es
mov
mov
popa
inc
loopne
jae
pop
xor
pop
pushf
add
dec
std
rclb
ds
cmovbe
inc
pop
sarb
mov
fstp
xor
test
push
ljmp
adc
sahf
cmc
pop
or
test
xlat
adc
sar
lea
xor
arpl
aad
mov
std
inc
mov
push
and
cmpb
xchg
jns
insl
in
jmp
adc
jge
add
cmc
popf
ss
cltd
inc
je
stos
enter
xchg
adc
gs
cmp
and
mov
leave
data16
add
xor
or
incl
dec
mov
ds
inc
lods
imul
jge
ss
fisttpl
cmp
gs
adc
sbb
mov
jno
in
imul
std
sbb
cmp
jmp
test
sahf
fnstsw
cmp
idivl
lahf
stc
cld
hlt
or
and
pop
jl
pop
mov
jecxz
sbb
mov
adc
movsl
xchg
insl
outsl
sub
leave
hlt
insl
je
sub
out
inc
ret
mov
cmpsl
popa
xchg
inc
jg
imul
pop
call
or
cmp
cmpsl
sub
mov
cmp
sahf
test
lods
or
adc
and
xor
cli
addr16
or
out
lahf
xor
fistl
adc
fimull
jle
mov
adc
aas
jne
test
fs
push
pop
pop
mov
sub
inc
xchg
or
cmp
mov
mov
sub
in
xchg
enter
nop
xor
and
fs
and
addl
lds
xchg
ret
sub
sub
jmp
inc
and
ss
mov
or
sahf
in
sbb
push
mov
and
sbbl
ret
xchg
in
pop
stos
xor
fisttpl
mov
sbb
idivb
inc
push
lea
mov
aam
jp
mov
jns
icebp
pop
xchg
inc
mov
pusha
jmp
icebp
loopne
and
push
cwtl
pop
mov
inc
insl
insb
insl
fisttps
push
mov
pop
pushf
xor
addr16
add
or
push
or
dec
push
les
and
daa
inc
or
inc
adc
fwait
jne
pop
sbb
adc
mov
or
mov
mov
int
and
shlb
sahf
popf
inc
sub
test
xor
mov
enter
in
mov
in
in
cmp
sbb
jne
mov
in
daa
mov
mov
xor
xchg
inc
adc
daa
inc
ss
dec
insb
lcall
bound
sub
push
popa
add
mov
popa
sbb
mov
inc
dec
andb
pop
popf
jns
daa
loope
sbb
daa
insl
jnp
xchg
dec
or
jbe
pop
jmp
cmp
cli
mov
in
fsubs
fwait
and
lods
and
sbb
lods
and
sbb
lods
and
sbb
lods
and
sbb
mov
or
movsl
push
lahf
cmp
fstpt
sbb
cmp
jnp
add
push
mov
mov
mov
xor
pop
jmp
xchg
jle
push
popa
xchg
das
inc
popa
xor
popa
imul
inc
push
push
adc
cmp
ret
jp
dec
nop
insl
js
popf
mov
addr16
xchg
out
cmp
push
mov
lods
jle
adc
dec
les
adc
mov
cld
mov
sar
sti
fdivr
stos
sti
sar
xchg
stc
scas
xor
sub
xchg
jne
sub
push
mov
and
pushf
add
lock
rolb
into
shrb
outsb
mov
aas
popa
dec
cs
sbb
subb
push
rcrl
inc
rorl
jb
jg
rcrl
rorl
sarl
rol
lahf
mov
repnz
loop
out
ficoms
enter
loope
mov
push
sarl
shrl
iret
pop
push
out
leave
shl
mov
adc
jno
cli
mov
enter
fbstp
xchg
int
cmc
scas
loope
ja
jno
jae
jge
jg
jns
jnp
and
xchg
cmp
in
dec
mov
mov
jmp
repz
mov
push
sub
inc
push
movlps
pop
adc
pushl
push
pop
mov
jb
mov
imul
not
mov
jl
popa
mov
hlt
mov
je
jmp
push
jae
test
xchg
or
dec
leave
nop
cmc
lahf
mov
push
cmp
imul
int3
xchg
mov
hlt
inc
cmp
je
gs
sbb
dec
push
cs
push
shrb
sti
cmp
insl
xchg
jnp
add
xchg
adc
or
out
adc
mov
fwait
adc
gs
fs
mov
scas
stos
add
jne
aaa
adc
and
pop
cmpsb
pop
shlb
idiv
icebp
xchg
icebp
cmc
push
int
mov
cmc
inc
icebp
das
std
cmpsb
stc
clc
clc
ljmp
jae
jno
jle
pop
iret
or
xor
loopne
ret
cmc
lret
push
mov
in
shlb
popf
mov
shll
stos
imul
xor
mov
xor
mov
inc
xchg
pop
les
jo
outsl
lcall
cmp
stos
mov
mov
into
sub
fwait
and
and
pop
jecxz
push
and
and
cmc
test
mov
push
icebp
cld
lahf
stc
mov
mov
sub
mov
popf
jb
or
mov
aam
les
int3
mov
mov
mov
ljmp
and
xor
cmp
mov
cwtl
mov
or
mov
xor
js
push
stc
insl
stc
mov
stc
xabort
stc
xchg
clc
or
xor
adc
or
push
inc
out
or
bound
inc
add
outsb
mov
clc
push
in
fucomi
push
fisttpll
mov
jmp
in
or
or
popf
jmp
xor
mov
push
mov
dec
subl
sbb
xchg
mov
repnz
jne
cmp
and
orb
bound
ja
cli
mov
push
outsl
add
repnz
lds
xorl
jg
jns
jnp
stos
jnp
xchg
jnp
data16
jnp
shrw
popf
dec
pop
jno
jg
jge
jnp
jns
addr16
out
call
pop
adc
xchg
sub
aas
add
int3
int
cmpb
test
or
repnz
dec
into
dec
cmpb
subb
sbbb
xchg
mov
fldl
fnsave
stos
fstl
stos
neg
repz
sub
jecxz,pn
cmp
ret
adc
stos
and
inc
lret
stos
stos
sbb
mov
stos
cld
aad
lods
in
mov
mov
test
mov
movsb
xlat
rol
xchg
ret
jnp
adc
push
stc
stc
inc
stc
jb
xor
inc
stc
and
push
stc
adc
mov
stc
hlt
clc
cmp
clc
xchg
stc
aam
loop
clc
repnz
mov
ret
clc
sar
xchg
clc
and
xchg
pop
rcll
adc
xor
push
imul
push
ja
jae
imul
pop
imul
daa
imul
push
imull
jl
pop
test
xor
jne
add
gs
adc
push
push
bound
push
jb
xor
jg
pop
adc
aaa
stos
mov
daa
stos
mov
adc
stos
adcl
repz
xor
imul
ret
jne
mov
je
mov
or
pop
xor
push
stos
adc
mov
stos
hlt
aad
stos
in
xchg
stos
aam
loop
aad
stos
mov
ret
aad
stos
xchg
and
xor
xor
cmpsl
fs
push
repnz
testb
xor
in
in
and
repnz
div
icebp
xor
icebp
xchg
not
dec
adc
xchg
into
xlat
mov
mov
or
jnp
lods
cwtl
cmpsl
subb
into
jb
xor
inc
andb
adcb
push
ja
ficomps
sbbb
fdivr
cli
cld
int3
sti
lret
sti
lods
sti
sub
pushf
lea
aas
lea
sbb
cmpsb
aad
xchg
push
aam
xchg
inc
aam
xchg
jbe
jae
data16
xchg
push
mov
inc
or
sub
push
aad
stos
mov
ret
aad
stos
xchg
fidivrs
pop
test
imul
ljmp
bound
xor
inc
stos
and
push
stos
adc
mov
stos
hlt
aad
stos
in
xchg
stos
aam
loop
aad
stos
mov
ret
sub
rcrb
in
mov
shlb
test
jge
jp
jns
callw
data16
jnp
enterw
fdivrs
les
popa
push
test
push
movsl
push
push
push
imul
cmp
sbb
inc
les
mov
cmp
movsl
sub
xchg
fdivr
test
int3
stc
cmc
ret
cld
add
lahf
mov
and
push
sbb
pop
into
js
dec
into
dec
cmpb
pop
subb
test
push
add
sahf
pop
adc
and
stos
popf
adc
stos
lea
pop
in
sub
push
int
mov
cmp
adc
ja
stos
es
push
stos
push
mov
stos
imulb
add
sub
push
in
add
pop
lea
fidivs
and
hlt
test
adc
hlt
adc
pop
hlt
sbb
dec
hlt
or
mov
test
lods
pop
xchg
std
cmp
jge
jg
jns
jnp
addr16
dec
addr16
xor
jnp
addr16
jnp
addr16
sti
data16
cwtl
das
jmp
jmp
mov
xbegin
aas
pop
cltd
adc
loope
in
into
arpl
xchg
out
ror
pushf
into
fldcw
cmp
add
and
pop
stos
sub
movsb
stos
loop
pushf
add
cmp
movsl
jle
int
mov
jmp
mov
xor
jbe
or
jle
add
jmp
addr16
jnp
addr16
jnp
addr16
jnp
addr16
sbb
ljmp
stc
lods
shrl
mov
mov
push
ja
jno
jae
stos
or
xor
les
jno
jl
jns
fs
popa
les
les
inc
les
lods
sub
xchg
sar
popf
fdivr
test
sar
int
mov
add
shrb
and
mov
shll
shrl
rcll
rorl
cwtl
fcmovne
clc
lock
mov
enter
sar
clc
fdivr
lcall
xor
push
cs
addb
repnz
into
mov
orb
mov
repnz
cmp
addb
int
andb
rolb
fwait
mov
popa
pop
add
aam
or
mov
adc
inc
or
pushf
imul
icebp
xchg
test
fdiv
scas
icebp
aam
fwait
mov
and
xchg
cmp
mov
add
pop
bnd
dec
bnd
xor
dec
idivb
repnz
mulb
repnz
negb
repnz
loop
cwtl
imul
icebp
nop
not
icebp
call
jnp
inc
int3
jno
jmp
sahf
fstp
cwtl
inc
mov
mov
or
adc
jns
gs
jg
stos
fcmovbe
loopne
ret
xchg
xchg
cltd
xchg
xlat
adcl
dec
add
add
fisubrl
fldl
test
fnstsw
pusha
fstl
sbb
dec
test
fstl
lret
stos
sti
fsub
outsb
in
int
mov
mov
pop
cltd
movsb
mov
hlt
mov
or
dec
hlt
xor
mov
cmp
mov
imull
lds
add
pop
mov
sbb
cmpb
inc
sarl
shrl
mov
or
mov
repnz
mov
cli
clc
fdivr
mov
pop
cmp
stc
data16
mov
ja
lock
imul
jb
cvtdq2ps
popa
std
dec
stc
ja
pusha
adc
fadds
dec
pop
and
iret
bound
sbb
push
vmovups
in
jg
mov
mov
lds
cmpsl
pop
out
adc
outsb
and
cmp
loope
mov
jo
or
push
clc
sbb
inc
jmp
jecxz
rcl
stos
leave
aad
test
jecxz
pop
xor
fwait
sahf
fcomp
cmp
mov
mov
outsl
mov
xchg
inc
sbb
imulb
scas
sub
ds
pop
aam
pushf
push
jnp
or
ret
inc
mov
push
inc
xor
dec
cmpsl
lods
mov
iret
pop
xor
scas
mov
nop
mov
mov
add
imul
xchg
aas
mov
aad
push
arpl
jns
shlb
lock
cmp
xchg
cmp
jae
dec
push
dec
push
inc
stos
and
pop
add
jo
jl
xlat
fs
fbld
shlb
cmp
adcb
mov
cmpsl
fmull
imul
adc
cmp
push
push
enter
cmp
jmp
xchg
sbb
insl
xor
or
mov
clc
lock
jae
jno
push
int3
xlat
push
cmp
outsb
stos
jne
push
cltd
jnp
push
jnp
push
sbb
mov
push
aad
int
mov
cmc
cmp
lods
mov
ret
iret
cld
mov
cwtl
push
cmp
sbb
test
mov
in
xchg
sbb
mov
aaa
xchg
dec
sbb
mov
cld
out
popf
mov
push
mov
adc
sbb
jbe
ja
imul
lods
jne
mov
sbb
cmp
push
std
xchg
addl
add
pop
shrl
push
adc
jg
imul
shrb
xchg
fnstcw
scas
push
add
outsb
lret
sub
and
sub
xchg
cmpl
push
das
sub
fildll
imul
ljmp
out
xor
cld
push
cld
adc
scas
int
movsl
movsb
rorb
sti
pop
mov
xchg
in
clc
ljmp
clc
iret
stc
mov
in
sub
and
and
adc
add
cmp
movsl
cmp
test
xchg
push
lahf
xchg
leave
xor
je
pusha
lea
leave
test
mov
mov
dec
pop
cmc
adc
bound
or
mov
jecxz
loop
nop
leave
push
pop
sbb
les
das
sub
mov
daa
fisubrs
scas
cld
stc
sti
cltd
cmp
movsb
mov
mov
inc
aaa
pop
sub
push
subl
not
out
pop
and
rclb
dec
lea
aam
pushf
int
cmp
lods
sub
xor
push
mov
jo
arpl
fbld
test
push
inc
xchg
cmpsl
shl
mov
sub
and
stos
jne
or
or
stos
or
mov
mov
xchg
aaa
cli
int
mov
xor
push
lea
popa
cmp
pop
push
xchg
adc
hlt
popa
test
adc
cmp
sbb
bound
cld
pop
iret
add
loopne
or
outsb
dec
adc
fnstenv
mov
xor
push
fs
inc
insb
jbe
dec
jne
jno
js
gs
fldt
adc
pop
mov
inc
je
add
stc
xchg
fdivr
test
int3
stc
mov
lock
std
mov
adc
je
ja
lods
xchg
imul
sub
dec
arpl
jo
ja
adc
dec
dec
scas
or
mov
icebp
add
mov
movb
adc
jmp
cmp
cmp
xor
inc
stos
sub
push
and
adc
pop
aas
jecxz
mov
cmp
mov
lret
stos
cli
fsub
outsb
xchg
mov
lret
inc
jne
sbb
outsl
sub
mov
jge
push
out
daa
iret
fistl
out
push
xchg
push
sub
xorl
jnp
jmp
cmpb
mov
lret
in
mov
outsl
cmp
jecxz
std
inc
stc
jl
aaa
cmp
and
imul
iret
adcl
stos
rcr
popf
stos
rcr
scas
nop
stos
cld
adc
jnp
xchg
mov
or
pusha
cmpsl
sbb
push
mov
bound
je
stc
and
stc
lods
stc
push
stc
mov
adc
mov
stos
test
lcall
xorb
jae
inc
pop
ljmp
out
cmpsl
xchg
test
aam
jb
sub
pop
xchg
aad
xchg
push
mov
mov
lds
repnz
bnd
jnp
data16
cwtl
ljmp
aad
sbb
scas
and
cmc
jp
xchg
adc
stos
add
inc
dec
daa
int
les
push
scas
xor
clc
in
pop
jns
in
jp
shr
mov
test
vaddps
jns
pusha
push
flds
xlat
test
sub
mov
sbb
jl
cli
inc
mov
data16
cmp
push
stc
sbb
push
pop
mov
pop
cmp
sub
pop
sti
clc
sbb
enter
into
add
inc
mov
shl
xchg
or
jg
sbb
jmp
call
popa
xchg
xchg
ljmp
pop
pop
sub
je
xchg
pslld
fidivrl
mov
loop
or
loop
xlat
jl
outsb
pop
push
arpl
and
loopne
mov
jp
inc
push
faddl
jmp
or
jmp
mov
sub
push
insb
repz
or
adc
sbb
sbb
pop
cmc
idivb
inc
mov
inc
add
sbbb
ljmp
jecxz
xchg
xor
mov
es
lds
xchg
add
push
mov
out
aaa
mov
sbb
jno
adc
mov
pop
jns
cmpsb
pop
iret
insl
sub
mov
arpl
in
das
icebp
test
pop
pushf
loop
icebp
mov
mov
and
les
cmp
lea
dec
push
xchg
push
mov
cmp
mov
adc
stos
test
aam
cmp
movsl
hlt
cmp
cmp
jae
arpl
les
test
test
xchg
adc
inc
mov
xchg
jmp
stos
lahf
jge
push
jnp
xchg
or
jp
pop
xchg
sbb
neg
xor
inc
sub
ljmp
xchg
outsl
jno
mov
adc
outsb
orb
leave
jb
pop
icebp
mov
jecxz
lods
sub
add
fldt
push
aas
push
mov
scas
roll
mov
mov
neg
mov
jno
xchg
sub
fldenv
mov
cmp
mov
je
sbb
inc
subb
push
sbbb
movsb
orb
mov
cli
adc
mov
cmp
mov
test
leave
inc
out
push
cmp
gs
out
xchg
in
dec
fnstcw
push
push
pop
inc
sbb
pop
jp
add
insl
and
jge
addr16
sbb
jmp
sub
push
les
pop
sub
push
loope
and
jmp
fs
pop
lcall
sub
mov
xchg
dec
dec
stos
shr
pushf
dec
dec
pop
movsl
ret
je
jge
cmpsb
test
push
add
jmp
mov
clc
lock
mov
mov
stos
adc
outsb
test
cmpsb
push
sub
push
stos
xor
push
lods
sbb
jnp
stos
mov
pop
iret
jne
test
int3
stos
mov
aad
stos
scas
sub
test
bound
push
movsl
imul
lods
add
sbb
jl
dec
into
inc
sbbb
insb
decl
test
icebp
out
fs
and
xchg
out
rcrl
adc
or
mov
jecxz
mov
mov
adc
cld
mov
packssdw
xor
mov
leave
ss
insb
stos
cmp
sbb
or
pop
mov
add
mov
shl
in
adc
lahf
in
sub
jb
mov
cwtl
pop
mov
mov
pop
jae
mov
jnp
mov
or
xor
add
cmp
add
cld
jle
cmp
cwtl
cmp
movsl
nop
cmp
movsl
leave
cmp
inc
mov
adcl
flds
add
idivb
repnz
and
xor
mov
icebp
sub
test
out
cmc
stc
mov
lods
dec
mov
cmpsb
daa
mov
jg
jge
stos
lods
clc
dec
aam
xchg
jo
jge
outsb
mov
pusha
cwtl
xor
stc
mov
mov
xchg
mov
mov
push
xchg
int3
inc
xor
add
int
loope
in
addr16
cs
push
xor
inc
adc
in
ret
sbb
jo
adc
jbe
fsubrs
test
adc
in
sbb
and
lods
ret
push
rcll
pop
test
fildll
mov
sbb
es
pushf
xlat
out
xor
xchg
mov
pop
sbb
add
push
outsb
fs
xor
inc
dec
rorl
dec
test
push
enter
fsubrs
jae
shlb
push
into
jnp
dec
xor
sarb
mov
sti
and
dec
lret
xchg
or
shrl
cltd
mov
out
inc
dec
gs
sbb
add
add
mov
lods
sbb
ficomps
mov
rcrl
push
jecxz
enter
and
push
lcall
stc
mov
sbb
add
mov
sub
inc
lods
inc
pop
int3
and
lock
xor
enterw
mov
cmp
mov
gs
mov
aad
nop
out
cwtl
rclb
jno
sbb
aad
or
or
scas
add
int3
jb
sub
pop
daa
test
push
lahf
in
xabort
mov
shl
int
mov
xchg
inc
xorb
pop
dec
sbb
jne
jno
jge
mov
popf
popa
in
jmp
push
ret
xor
xchg
add
push
push
fs
pusha
fsubrs
push
test
lds
mov
mov
fwait
jbe
add
fstl
sbb
test
lock
mov
jle
jecxz
fdivs
mov
icebp
ror
out
pop
adc
add
les
or
pop
ds
rcll
lods
addr16
push
fcomi
clc
pushf
stc
clc
stc
lret
mov
xor
test
movl
les
mov
mov
cmp
push
jne
cmp
adc
mov
fisubl
mov
rclb
inc
ljmp
jg,pn
dec
insb
mov
xor
fstp
sbb
sub
test
inc
jnp
ret
lods
test
pop
inc
sub
ffreep
icebp
popf
mov
pop
leave
jle
or
xlat
loopne
stos
mov
adc
stos
cli
inc
lcall
lret
push
inc
rcrl
add
pop
xchg
cld
inc
sub
nop
mov
cmp
cmpsl
jne
adc
sub
jl
adc
sub
push
inc
sub
or
mov
stc
mov
cwtl
push
fsubs
adc
jge
push
ret
push
loop
fwait
xchg
sbb
or
movl
adc
xor
ljmp
popf
cli
jo
lods
mov
int
ljmp
enter
imul
lock
outsl
cltd
jns
adc
in
fadd
push
iret
loope
mov
mov
fstpt
cmp
iret
nop
loope
jae
pusha
pop
push
xchg
lds
jne
jns
mov
dec
mov
add
ljmp
push
push
jp
lea
stc
sbbb
dec
leave
mov
int
data16
stos
cmpsb
scas
mov
pop
sbb
stc
imul
data16
rorb
xchg
or
jno
dec
outsb
je
jne
ds
pop
sti
inc
add
and
test
mov
gs
in
int
insb
xlat
pop
arpl
out
int
inc
adc
mov
subb
sbb
push
adc
repz
sbb
xchg
xor
inc
jl
scas
xor
dec
lods
inc
mov
and
mov
adcl
sbb
pusha
aad
xchg
mov
ror
pop
orl
clc
xchg
rcrl
pusha
push
clc
in
inc
out
sbb
xor
cmp
lock
adc
sbb
adc
cmp
lds
out
jno
inc
mov
mov
fldpi
dec
sahf
scas
into
mov
adc
insb
daa
xor
sbb
sbb
xchg
sub
adc
or
dec
lds
mov
mull
cmc
xor
test
das
cli
call
testl
inc
cld
int3
adc
or
pop
aaa
add
jno
jle
sub
pop
jmp
aad
testb
add
cmp
push
stc
xchg
jg
mov
call
mov
repnz
push
and
dec
xor
or
lahf
xchg
jnp
mov
aad
mov
pop
aaa
push
mov
pop
add
or
mov
or
pop
sub
add
imul
cmp
cmpsb
xchg
xlat
sarl
cmpsl
push
xchg
jg
xor
jge
fcoms
mov
mov
int
push
out
mov
mov
sbb
lret
aad
mov
popa
stc
mov
pusha
xor
shlb
jp
xor
in
xor
pop
xchg
leave
shlb
leave
or
out
inc
test
scas
sub
inc
push
std
sbb
cmp
dec
pop
cs
or
leave
adc
out
mov
fisubs
test
fisubrs
xchg
push
push
and
hlt
inc
mov
hlt
dec
mov
stc
adc
mov
sti
inc
ja
dec
xor
cmc
push
dec
ljmp
cmpsb
cld
mov
test
xor
adcl
inc
push
movsl
pop
jbe,pn
sahf
adc
or
jae
pop
je
mov
stc
add
mov
xor
ret
rorl
push
jmp
mov
je
mov
daa
jno
rcrl
cltd
cmpsl
and
fs
addr16
pop
std
test
cmpsb
mov
and
sub
pusha
and
loopne
in
mov
mov
dec
sub
xchg
sub
mov
stc
fwait
pop
add
imul
mov
mov
pop
out
inc
xchg
es
pop
jnp
push
pop
or
mov
mov
xor
push
and
outsb
dec
add
cmp
push
arpl
outsl
push
mov
iret
popf
nop
cmpsb
in
mov
pusha
sbbb
test
push
lods
inc
mov
xchg
jae
jmp
in
mov
xchg
hlt
cmpsb
cli
shlb
out
js
cmp
cmp
xlat
hlt
cmp
ret
movsl
shrb
loopne
or
fs
je
loope
pusha
aam
jl
dec
dec
xlat
sti
enter
fsubrl
je
add
test
mov
lar
sbb
push
dec
xchg
mov
subl
mov
icebp
jl
pop
push
pop
cwtl
fwait
xor
dec
cmc
cmp
inc
mov
xchg
pop
dec
inc
adcb
scas
das
sbb
adc
push
xchg
sbb
pop
or
out
das
mov
rol
xor
imull
pop
sbb
jge
dec
xor
cmp
sbb
dec
out
nop
mov
test
out
cmp
xchg
nop
add
pop
pop
xchg
and
fiadds
cmc
hlt
add
in
and
fmul
outsb
push
dec
repz
repnz
mov
sub
add
das
mov
mov
push
repnz
cmp
icebp
pop
mov
jb
xor
xor
push
mov
add
popa
out
cmp
in
cmp
or
xlat
arpl
or
and
push
data16
fimull
xchg
mov
push
fdivrl
popf
xor
movsl
sahf
cmp
jecxz
cltd
xchg
imul
dec
mov
mov
xchg
sub
stos
jge
cmpsb
fwait
cmp
loop
mov
cs
add
jnp
sub
xchg
xchg
leave
out
mov
addl
aad
sbb
push
es
jge
jnp
push
lock
lds
push
add
inc
popa
or
jns
push
xchg
dec
jge
lcall
dec
dec
mov
mov
ljmp
mov
mov
ret
jno
cvtps2pd
or
insb
outsl
call
sbb
mov
mov
fstl
mov
sub
mov
mov
cmp
jmp
lea
insb
fdivr
jb
and
jo
or
mov
push
mov
mov
aad
sbb
xlat
jmp
into
pop
mov
sbb
andb
mov
popf
cwtl
movsl
shrb
xor
outsl
sbb
popf
adc
xor
fcompl
and
lock
addr16
pop
out
jae
jno
push
inc
out
and
jo
xor
or
arpl
push
jp
arpl
lock
dec
out
cli
nop
sbb
xor
or
out
cltd
xchg
mov
jmp
in
es
daa
pop
mov
adc
std
fidivrl
stc
push
es
xor
fdivl
stos
pop
xor
add
incb
add
xor
das
icebp
les
xchg
cmp
adc
sbb
sbb
jmp
leave
xor
aaa
mov
mov
out
pushf
cmc
aam
mov
adc
movaps
cwtl
imul
cmc
cwtl
gs
shlb
sub
lcall
sub
flds
xor
fcomps
xchg
test
shl
xchg
repnz
add
cs
and
test
into
dec
jb
loop
mov
push
adc
jno
adc
pop
add
cmp
mov
push
stos
movsl
test
pusha
push
fxrstor
and
sahf
add
pop
sbb
popf
ror
pushf
frstor
push
adc
cmp
cmpsb
pop
lret
pop
mov
inc
cmpsb
fstl
movsl
lds
sarl
fsts
sbb
sbb
sbb
adc
push
adc
into
mov
je
cmc
push
loope
xlat
mov
aaa
lods
loope
xchg
mov
aam
push
fistps
mov
inc
lret
mov
cmp
mov
mull
push
cmpsl
and
cmp
loope
in
pop
in
pop
push
ds
aam
mov
inc
fimuls
lahf
out
cmc
inc
cld
nop
sbb
cmp
adc
mov
dec
lods
movsb
sub
jo
jge
xchg
sub
push
les
stc
mov
and
jg
mov
popa
cmpsl
jb
or
mov
mov
imull
test
jp
rolb
xor
scas
xchg
or
out
jge
test
je
push
stos
cmc
repnz
ds
mov
sahf
pop
imul
sub
mov
xchg
mov
xor
in
xchg
push
mov
mov
and
lea
faddp
push
test
jecxz
or
dec
inc
or
dec
cs
and
push
loop
xchg
inc
lret
test
mov
adc
popa
mov
mov
lret
dec
mov
stos
addr16
and
gs
adc
ficomps
mov
or
repnz
pushf
hlt
xor
out
jg
pushf
cmp
xchg
push
push
or
fsubl
out
popf
inc
cmp
test
lds
pop
nop
or
fdivrl
loope
jg
ljmp
mov
sub
testl
daa
xor
mov
mull
outsb
sbb
jae
adc
or
lret
fildll
int3
lahf
dec
mov
bound
test
stos
xchg
popa
das
mov
inc
dec
and
aas
add
push
stc
gs
mov
inc
idivb
mov
add
sub
pop
stos
push
pop
xlat
push
dec
sbb
jg
stc
add
xor
fistpll
jne
lods
mov
bound
ret
imul
cmp
jnp
das
mov
mov
add
pop
xor
push
push
mov
mov
in
mov
or
addr16
add
mov
leave
fsubrl
mov
jle
in
test
push
mov
filds
frstpm(287
dec
xor
adc
scas
testb
add
add
pushf
cmpsl
dec
out
fstps
repz
xchg
or
call
loopne
inc
outsb
sysexit
push
mov
movsb
sub
add
dec
lods
cmp
rorl
fdiv
jo
loope,pt
scas
mov
fldz
shr
lods
lret
xor
int3
pop
pop
jp
ja
fildll
ret
aam
mov
movsb
enter
push
negb
mov
lds
jne
lahf
inc
jae
xchg
in
stos
in
ss
sub
arpl
xor
out
xchg
lea
push
push
roll
push
sub
fs
data16
aaa
sbb
xor
les
es
mov
push
cmp
or
aas
aaa
mov
pop
jecxz
xchg
xchg
aam
jnp
inc
push
push
inc
les
out
outsl
push
fimull
shlb
add
ret
mov
shl
mov
ja
xor
and
xchg
faddl
sbb
push
and
push
fidivs
mov
icebp
and
scas
pop
xlat
push
pusha
in
sub
sbb
sbb
add
add
scas
lods
mov
xchg
imul
sbb
mov
out
inc
loopne
repz
ret
insb
pop
icebp
sahf
push
add
stos
imul
iret
aad
push
pop
jle
mov
add
cmp
cmc
rol
jmp
jg
into
das
ss
repnz
stc
repnz
dec
xlat
mov
pop
ss
xor
popa
inc
stos
cmp
jl
enter
dec
cld
and
sub
xchg
push
les
out
sbb
test
xlat
xchg
xchg
fldt
dec
into
shrb
adc
xor
dec
arpl
cmpsl
lods
mov
test
sahf
add
cmp
sub
test
adc
pushf
and
fsubrl
pusha
hlt
into
mulb
dec
lret
jns
adc
dec
mov
jno
jae
pusha
out
or
add
lock
adc
dec
lcall
sub
mov
mov
and
insb
jns
sub
sbbl
lods
in
add
add
xchg
test
cli
sub
ja
xorb
out
fistps
scas
and
outsl
adc
mov
xor
ja
jp
pusha
xor
das
out
popf
sub
cmc
cs
xchg
movsl
out
pop
xchg
dec
popa
jl
sbb
adc
push
ret
imul
pushf
xchg
mov
sti
lret
cld
mov
movsb
mov
mov
xor
sbb
mov
or
repz
xor
jmp
addl
out
xor
sbb
daa
xchg
test
cmpsl
pop
sub
inc
pop
mov
or
adc
adc
add
aad
repnz
jo
fwait
add
mov
aad
mov
mov
movsb
push
mov
pop
addr16
mov
out
mov
stc
shll
sub
push
jb
movzbl
imul
stc
pop
jecxz
inc
cmc
dec
sti
ja
out
mov
fdivl
aad
mov
std
and
int
andb
adc
loope
iret
or
mov
std
in
xchg
imull
testl
jae
scas
cwtl
inc
into
lds
sti
hlt
test
cmpsb
pop
add
fbld
mov
and
mov
les
pop
es
ds
out
shlb
in
rolb
cmc
mov
stc
and
jnp
cmp
mov
jnp
and
mov
jnp
jne
xchg
push
sbb
rcrl
or
xchg
ret
cli
fcmovu
push
cld
mov
pop
movsl
inc
int
adc
imul
scas
dec
and
mov
or
enter
lret
mov
aas
add
add
mov
ljmp
jns
fsubrs
pop
jnp
sub
xchg
mov
push
dec
movsl
cmpsl
pusha
enter
bound
xlat
int3
lahf
nop
orl
add
popa
iret
outsb
gs
xor
shlb
inc
mov
jp
imull
and
mov
out
shll
les
jl
dec
or
jecxz
sbb
sub
sub
repnz
xchg
dec
aas
jp
or
aas
push
xor
fstpt
or
orl
jle
in
repz
push
outsb
in
inc
pushf
aad
push
xor
aaa
jmp
in
inc
xor
cmp
mov
cs
pop
push
jmp
jno
lds
adc
dec
aaa
aad
movsl
rclb
xor
dec
scas
mov
add
stc
add
jnp
mov
sbb
gs
loopne
inc
popa
test
jge
pop
mov
push
ljmp
leave
pop
orb
subb
pop
or
xchg
mov
cmc
rcrb
mov
scas
shr
outsb
push
adc
es
jmp
in
in
idivl
lea
push
jae
xchg
mov
test
cmp
mov
and
inc
jne
jmp
aad
pop
mov
sbb
sub
push
in
lret
enter
je
inc
pop
data16
cmp
mov
sbb
pop
mov
loop
cmp
popf
or
xor
jnp
lds
cmp
adc
repnz
sbb
mov
imul
test
push
mov
jp
shl
dec
dec
mov
shlb
jnp
pusha
pop
mov
pop
pop
cmc
inc
cmp
subb
push
jmp
mov
test
cmp
ror
xchg
testl
popf
inc
rcll
add
jge
inc
call
xchg
movsb
loop
ljmp
iret
cmpsb
mov
roll
out
shl
fstps
push
ljmp
push
hlt
dec
out
lahf
out
pop
popf
jo
lret
loope
xchg
jnp
dec
add
cld
mov
sbb
jp
out
in
push
negl
shl
sbb
movsl
rolb
xor
pop
mov
inc
mov
das
fidivl
push
pusha
adc
loop
jmp
rolb
dec
leave
push
cmp
push
stos
sbb
out
sbbl
not
pushl
decb
ja
dec
and
lea
or
xlat
xchg
push
bound
into
aad
add
je
or
hlt
pop
xor
pop
or
push
arpl
jl
clc
std
xor
cmp
sub
stos
sub
ret
pop
mov
frndint
xchg
sti
and
mov
movsl
or
imul
lea
mov
xchg
fbstp
cmp
cmp
cltd
fnstenv
sbb
add
mov
xor
cmpb
mov
and
dec
leave
out
dec
cmp
xchg
xor
push
insb
mov
iret
in
stos
mov
ret
data16
xchg
jle
cmc
and
mov
popa
xor
pop
push
gs
push
mov
lock
in
aaa
aas
aas
xor
jbe
or
push
sbb
ljmp
ret
mov
dec
xlat
or
out
loope
and
dec
cmp
or
push
mov
and
aam
or
cmp
jge
popf
pop
shl
xchg
cld
subl
mov
mov
sbb
mov
in
push
lods
or
gs
pop
icebp
inc
ds
dec
dec
jns
cmp
cmpsb
mov
cld
mov
add
sub
xchg
sbb
sub
xor
adc
xor
aas
xor
jecxz
add
enter
jl
gs
xor
rcll
xchg
dec
lret
jbe
fimuls
sbbl
pop
jns
push
xchg
ljmp
clc
or
test
test
lds
loop
popa
pop
imul
ljmp
mov
jnp
aaa
mov
push
std
cmc
jl
add
in
sbb
adc
into
insl
pop
jo
stos
fldt
test
dec
out
fnstenv
lcall
lret
pushf
test
xchg
aad
pop
sti
cld
cltd
dec
adc
inc
bound
and
daa
inc
xchg
cld
loopne
cmp
inc
mov
cmp
mov
cmp
fdivrs
and
gs
shll
outsl
movsl
dec
and
add
out
cmp
test
ja
xor
lea
adc
lds
out
mov
outsl
or
push
repz
xchg
js
lods
jecxz
push
jne
jno
pop
iret
stos
aas
out
movsl
and
xchg
hlt
adc
outsl
outsb
push
pop
es
sbb
mov
push
inc
inc
daa
sbb
cmp
mov
push
xor
addb
push
push
mov
push
lds
test
rcrl
sbb
xchg
and
push
adc
int3
inc
jmp
sub
push
add
imul
adc
lds
adc
cmp
sbb
in
sbb
fisttps
out
push
xchg
mov
sahf
push
into
inc
aad
push
sbb
scas
je
add
test
and
dec
sub
movsb
sbb
push
add
mov
outsl
add
mov
push
cmpsl
adc
jns
das
lock
push
repnz
sbb
arpl
push
mov
cmpsl
stos
fabs
pop
stos
xchg
es
in
or
icebp
and
cmp
icebp
cmp
mov
test
and
mov
inc
int
outsl
mov
inc
int
repz
pop
fs
inc
pop
mov
pop
push
int
xor
jns
push
ja
and
and
xchg
jno
xchg
test
loop
cld
cmpsb
leave
fcomi
sbbb
cmp
adcb
xor
mov
mov
cli
mov
xchg
rcrl
sbb
jmp
mov
mov
cmpsb
push
mov
js
sbb
aam
in
ret
xchg
ret
mov
out
sbb
mov
test
out
jecxz
inc
xchg
rcrb
cli
ret
jmp
sub
test
mov
imul
add
mov
addr16
push
mov
push
call
dec
push
lods
add
cs
sbb
push
push
jbe
xchg
loopne
icebp
push
mov
int
out
xchg
mov
xlat
add
shll
adc
inc
add
ds
inc
ret
inc
adc
cld
mov
out
cltd
rol
fcoml
cli
cld
insb
cmp
dec
xchg
in
rorl
pop
ss
cmp
dec
loope
push
sub
mov
push
faddl
clc
jmp
addr16
inc
daa
cmpsl
mov
test
insl
push
rcll
pushl
mov
hlt
repnz
enter
icebp
jmp
or
pop
icebp
xor
out
push
sbb
dec
sahf
and
push
mov
pop
cmp
notl
cmp
jmp
and
mov
arpl
and
mov
jmp
cld
ret
sti
stc
add
test
enter
add
outsb
in
bound
adc
rorb
loope
rclb
cmp
push
xchg
cmc
push
es
insb
adc
loopne
in
mov
jmp
or
inc
add
push
int
dec
inc
push
cmp
inc
adc
in
dec
in
loope
or
loope
mov
loop
jecxz
jmp
loopne
xchg
sub
sbbl
push
gs
push
jnp
inc
push
test
aas
sub
jo
adc
fdivrs
xor
enter
in
inc
jnp
loope
repz
pop
or
mov
fiadds
sahf
cli
lcall
and
sub
xchg
scas
or
out
ret
sub
aas
andb
xchg
xchg
test
lock
jno
jp
jns
add
mov
loop
stos
int
mov
dec
je
pop
loope
mov
loopne
stos
push
into
add
jle
mov
pop
addb
xchg
push
in
bound
jne
or
or
dec
and
dec
push
fnsave
jge
in
test
idiv
cmp
xchg
icebp
fidivrs
adc
cs
inc
mov
jne
aad
inc
xor
push
mov
adc
leave
cmpb
inc
mov
test
insb
and
orb
mov
push
sbb
iret
fisubl
xchg
loopne
push
rolb
out
stc
cld
sti
xchg
in
cmp
sub
test
xlat
xchg
daa
xchg
xor
cmp
test
scas
fists
mov
cmp
hlt
or
js
add
test
adc
scas
sbb
les
stc
mov
fisttpll
cmp
pushl
negb
push
subl
stos
cli
cmpsb
loop
jecxz
ljmp
stos
lcall
scas
mov
icebp
push
mov
xor
imul
dec
sahf
pop
inc
imul
cld
and
sbb
lcall
sub
aaa
push
pop
notl
pushf
cld
add
mov
adc
int
inc
adc
enter
adc
aam
pop
stc
es
dec
xor
pusha
adc
cmc
push
add
sbb
sub
repz
loop
mov
icebp
push
mov
add
rorb
movsb
shll
ret
lock
xchg
loope
adc
adc
imul
int
call
dec
addb
rcrb
fsubrl
lea
dec
jl
mov
rolb
dec
bswap
cld
movsl
xor
sbb
sub
xorl
hlt
into
aad
das
pop
push
testl
insb
fs
shrb
sub
jnp
push
jbe
loopne
ror
jmp
sbb
sub
or
scas
mov
xlat
mov
mov
decb
lcall
pop
mov
and
inc
rclb
push
lds
or
xor
mov
push
ds
push
ret
mov
mov
and
outsl
xor
add
fninit
add
aaa
mov
pop
or
cmpsb
mov
xchg
mov
xchg
push
jmp
inc
cmc
inc
pop
das
xorb
or
stos
mov
pop
cmp
dec
sbb
adc
inc
jge
mov
xchg
jne
or
addr16
inc
jnp
outsb
cmp
pop
jo
aam
outsb
push
adc
pop
push
cmp
cmpsl
dec
imul
pushf
jno
lea
or
cmp
inc
sbb
sub
hlt
movsl
into
xchg
pop
fsubrp
push
or
or
std
jp
xor
dec
stc
aas
sbb
iret
add
loop
test
fstl
fisubs
xchg
dec
mov
and
adc
cmp
mov
sub
sub
scas
mov
leave
lods
js
adc
repnz
and
rcrl
or
mov
jns
fwait
lods
pusha
and
fildll
mov
and
jo
push
mov
xchg
jp
sbb
and
outsl
sbb
imull
cmc
mov
in
loope
loop
sbb
outsl
mov
shrw
cmp
xor
mov
lret
shl
daa
push
addb
sahf
mov
sub
or
fildl
adc
jmp
out
loop
ficomps
pop
popf
mov
add
inc
mov
les
hlt
fs
notl
cmpsb
rorb
cwtl
in
imul
out
mov
loope
jle
arpl
add
or
lcall
xor
push
cmp
jecxz
pusha
jmp
rcll
push
jnp
fs
mov
xlat
push
cmp
addr16
fsubrp
wrmsr
fs
shrb
mov
ds
ljmp
addr16
shrb
sbb
pop
dec
imul
hlt
add
adc
pushf
xchg
out
lahf
fdivp
scas
cmp
mov
movb
cmp
je
jo
bound
push
ja
push
cmpsb
cli
cmp
mov
add
xchg
loopne
adc
pop
and
add
pop
and
lea
or
mov
mull
mov
ljmp
imull
cmp
sbb
dec
pop
popf
or
fwait
jl
aaa
jmp
pop
sbb
lods
loope
aaa
out
cmp
jns
popa
push
cmpb
jp
fld1
and
jp
jge
imul
mov
jno
insl
hlt
pop
push
out
repnz
stc
test
pop
bound
ljmp
int
adc
test
daa
lds
mov
fidivl
xor
inc
dec
lahf
lock
popf
pop
push
inc
xor
inc
fsubl
cmpsl
mov
push
jecxz
pusha
outsb
mov
mov
lret
push
mov
pop
sub
mov
loopne
adc
push
xchg
in
sub
inc
les
add
fstpl
aaa
mov
bound
inc
movl
cs
jl
sbb
sbb
push
mov
and
out
push
xchg
pop
fcomps
adc
test
fnstsw
fcomp
loop
cmpsb
repz
cmp
adc
dec
cmp
pop
fsubs
ret
push
ret
imul
fmul
mov
add
sub
fisubrl
leave
imul
push
mov
jno
add
mov
scas
add
bound
pushl
imul
adcl
loop
xor
cmp
mov
fsubl
aad
xchg
lcall
js
loope
sub
pop
pop
nop
lahf
out
and
mov
daa
in
loope
cmp
push
adc
pop
test
sbb
mul
jecxz
push
cmp
sbb
cmp
mov
lods
add
lcall
jno
xlat
sbb
cmp
imul
cmpsl
ss
xor
stos
loopne
pop
add
pop
into
xor
and
xor
daa
dec
adc
sub
jns
mov
add
push
mov
push
xchg
push
jno
xlat
mov
inc
push
fldcw
mov
adc
popw
mov
dec
push
lea
popl
popa
mov
lock
adc
stos
insb
orl
lret
stos
rcr
out
jmp
ret
inc
icebp
scas
inc
fwait
mov
flds
and
jae
pop
icebp
pop
loope
xor
mov
cltd
mov
stos
orl
xor
sbb
inc
jno
rcrb
pop
pop
cltd
jge
call
cmp
and
xchg
insl
mov
sub
inc
fwait
outsl
pop
sbb
imul
cltd
inc
mov
lods
insb
mov
icebp
xchg
hlt
inc
push
sbb
jnp
jns
sahf
ja
add
sub
mul
cmc
scas
imul
aaa
push
push
ret
mov
ljmp
dec
ret
jp
movsl
dec
dec
adc
test
cmp
mov
or
cmp
sbb
cmp
xor
adc
fldl
ja
jno
jae
test
lds
push
cltd
mov
out
lods
imul
pop
sub
jns
lods
pop
dec
cmc
jle
mov
push
addr16
call
lret
out
cmp
inc
movsb
hlt
mov
outsl
adc
and
shrb
mov
push
inc
cmp
sub
out
sub
iret
sub
aaa
push
mov
add
adc
mov
mov
cmp
aaa
imul
fwait
xchg
inc
mov
add
rcrb
jb
daa
cmp
add
cmp
rcrb
jmp
test
pop
push
xor
lods
add
adc
shll
cli
cltd
mov
cmp
fsts
das
inc
stos
pop
pop
pop
addr16
sub
push
and
sbb
mov
xor
cmp
mov
sbb
lods
jo
dec
dec
sbb
sub
xor
cmpsb
push
jmp
pop
clc
icebp
es
mov
add
outsb
in
push
pop
inc
pop
push
push
xchg
mov
rcl
fsubr
mov
sbb
outsb
sbb
sbb
cmc
notb
mov
push
rcll
or
adc
sub
ret
cwtl
das
out
and
scas
dec
add
add
push
mov
xor
aaa
ss
push
stc
inc
lret
lcall
sahf
inc
adc
dec
cmp
js
dec
movsb
xchg
or
xchg
mov
push
dec
or
rcll
dec
popa
adc
or
sub
mov
mov
add
popf
in
loopne
aam
pmaxsw
shrl
sbb
cmpsl
jg
sbbb
add
lret
push
jmp
pop
hlt
cmpsb
mov
lret
inc
cmc
cmp
dec
imull
jno
pop
outsl
and
sarl
cmp
es
push
sarb
xlat
shlb
cmp
mov
rol
dec
adc
loope
insl
mov
arpl
lret
mov
icebp
dec
mov
mov
out
ds
filds
xor
inc
jae
mov
aam
cmp
inc
mov
addl
cmp
fsubrs
xchg
sbb
sub
mov
pop
sarl
int
xchg
mov
clc
sarl
dec
fwait
mov
pop
std
lret
cmpsl
call
cli
xor
push
mov
push
lods
sbb
push
add
sub
mov
aam
add
jb
jae
bsf
mov
jmp
loopne
loopne
out
mov
vcvtss2sd
or
mov
mov
add
shrl
mov
or
pop
push
aam
nop
mov
xor
sub
pop
xor
popf
out
int
subl
iret
nop
and
lods
iret
mov
popf
lods
daa
fwait
clc
xchg
rorb
mov
ret
or
out
pop
imul
pop
out
mov
cld
jle
dec
jns
lret
inc
add
repnz
notb
repnz
negb
repnz
jns
jae
cld
loopne
lcall
mov
bound
das
shrl
repnz
imul
mov
lret
jno
pushf
xchg
push
test
ss
add
bound
pop
inc
pop
pop
adc
jg
lea
lds
daa
cs
sub
jp
push
jl
push
fnsave
push
sbb
mov
push
adcb
lret
aad
mov
inc
mov
lods
mov
mov
xchg
lcall
lahf
sbb
mov
jecxz
daa
test
test
sub
outsl
jge
jnp
jns
xchg
out
enter
jae
sbb
dec
adc
xor
gs
int3
cmpsb
pop
and
lods
stos
rcr
dec
ret
ds
xchg
jmp
jecxz
cmc
mov
por
aam
mov
aas
stc
popf
cmpsl
mov
fimuls
xchg
inc
dec
gs
test
lods
aas
jne
mulb
dec
xor
xor
xchg
lods
ja
cmp
dec
push
jne
aaa
jg
mov
fdivs
add
test
lds
push
fs
xchg
fwait
mov
ljmp
jb
jp
xlat
push
das
popa
add
inc
xchg
scas
roll
push
cmpsl
sbb
ficompl
inc
in
cmc
and
aam
outsb
mov
sarb
sub
in
sti
movsb
lret
and
and
xchg
sbb
mov
loope
hlt
rcrb
roll
xor
gs
in
cmp
imul
pop
int3
dec
aaa
das
repz
and
ret
push
jne
inc
outsl
data16
push
fimuls
daa
jmp
inc
jns
call
ret
or
bound
punpckhwd
adc
rolb
ret
daa
cmp
cmc
arpl
sahf
dec
sbb
lea
mov
rcr
cmp
push
call
cs
mov
shrl
std
xlat
sub
mov
loop
xchg
out
jmp
or
scas
scas
inc
dec
dec
mov
in
cmp
loopne
gs
call
data16
fmuls
push
shll
decb
jge
sbb
icebp
jnp
pop
jl
adc
add
push
add
test
xchg
mov
ret
mov
scas
out
subl
arpl
adc
cli
and
xlat
and
xor
std
icebp
js
pop
jno
cmp
aad
mov
lahf
iret
push
out
add
inc
cli
ret
lret
in
mov
jle
inc
jecxz
xchg
enter
mov
sub
divl
sahf
cltd
jp
mov
pop
jp
sbb
sahf
pop
fwait
ret
scas
rclb
adc
cs
gs
cltd
lds
cmp
test
push
lds
out
test
xor
cmc
sbb
popa
ss
or
lahf
clc
std
dec
push
shrb
mov
xchg
push
or
sbb
popf
mov
xchg
xchg
outsb
pusha
scas
pusha
xchg
sahf
movb
shll
push
sbb
cld
fsubs
arpl
inc
enter
notb
frstor
adcb
push
cmc
aas
mov
xchg
jne
popa
mov
jno
mov
inc
sub
push
sub
jmp
push
mov
gs
lret
dec
cltd
and
inc
pop
pusha
push
jle
push
pop
adc
push
jl
push
push
stos
daa
fists
sub
lea
mov
cmpsl
ljmp
imul
jo
scas
bound
sub
rolb
idivl
xchg
mov
inc
xchg
adc
push
dec
push
fists
sbb
fadds
xor
inc
stos
mov
jg
cmpsb
fadds
sbb
sub
shrl
inc
xchg
loopne
fistps
push
xchg
lahf
jp
mov
outsb
stos
add
jb
mov
data16
imul
rol
je
pushf
das
xchg
or
cmp
mov
mov
jne
shl
test
lods
fs
les
push
mov
shl
test
mov
add
xchg
and
sub
inc
aam
pop
sbb
xlat
lret
clc
call
xchg
push
mov
jmp
jl
cmp
je
mov
or
push
outsb
jae
sbb
pop
fs
arpl
inc
ret
jno
shll
or
popa
ds
test
pop
mov
in
inc
jmp
and
addr16
outsl
orl
insl
rcrl
mov
xor
jge
push
into
xor
into
mov
pop
gs
mov
or
movsl
adc
loop
sub
sbb
adc
and
dec
or
xor
movsb
fildll
sub
andl
inc
cmpb
sub
mov
std
sub
dec
cmc
add
movsb
mov
sub
xchg
inc
sub
es
and
xchg
sbb
sbb
stos
adc
scas
or
scas
scas
adc
aas
scas
loop
xchg
cmp
movsl
into
shll
fsts
enter
inc
adc
push
jns
daa
aam
jnp
clc
sub
push
faddl
inc
cmpsl
push
push
loope
mov
push
arpl
rorl
ds
das
mov
mov
aad
lret
mov
xchg
mov
or
inc
jb
mov
loop
sbb
push
ret
notb
sbb
aam
mov
nop
jmp
shlb
lds
xchg
pop
inc
sub
daa
push
mov
icebp
js
or
pop
lock
sahf
jg
jge
jnp
adc
add
cmp
addr16
xchg
mov
lcall
in
cmp
scas
push
push
mov
adc
add
lds
add
xor
mov
pop
mov
mov
shl
cwtl
fisubs
ret
dec
mov
loop
or
dec
loope
mov
cmp
mov
mov
cmp
ret
call
ret
insl
add
pop
mov
aas
test
lea
xor
movsb
aad
add
cwtl
adc
insb
add
popa
jecxz
jbe
xchg
and
gs
in
hlt
sub
inc
fucom
in
mov
inc
push
dec
ret
aam
adc
lret
pop
cmpsb
adc
mov
ret
daa
repz
insl
pop
lods
dec
pushw
out
push
add
fadd
inc
inc
mov
mov
push
sbb
cmp
movsb
pop
aaa
xor
fmuls
pop
mov
fisubrl
lret
adc
add
shl
push
pop
mov
popa
and
xchg
jo
cmpsl
and
inc
lea
inc
out
shr
hlt
push
rolb
les
hlt
outsl
xchg
xchg
enter
enter
and
inc
or
add
push
mov
pop
xchg
or
jnp
sahf
gs
and
out
out
push
add
jp
sahf
push
xchg
adc
aas
mov
xchg
push
ds
pop
lds
push
xchg
xor
inc
movsb
push
imul
imul
ljmp
les
lods
mov
cmp
movsl
fsub
jmp
lret
es
rorl
cmpsb
mulb
lea
aas
add
mov
mov
ret
mov
xor
stos
xor
jle
cld
cmp
je
mov
or
jno
repnz
cmp
xor
xor
push
insl
or
frstor
xchg
repnz
leavew
jo
add
scas
push
jmp
xor
test
popa
into
jbe
xchg
cmp
cltd
mov
mov
popa
insl
mov
or
push
add
aam
outsb
mov
aas
and
shlb
clc
pop
mov
jge
cmp
mov
fs
inc
pop
cmp
inc
push
and
cwtl
rolb
dec
push
loopne
push
lods
mov
shr
lret
dec
or
loop
cli
adc
jl
int
pop
xor
scas
add
aaa
push
test
aaa
xor
in
pop
pop
daa
sub
push
adc
inc
out
lahf
xor
sub
dec
lret
out
bound
adc
cld
pop
les
sub
sarl
les
cmp
aas
insb
or
test
js
pusha
repz
xlat
mov
dec
sub
and
test
push
inc
jecxz
ss
mov
lock
mov
shll
cmp
jbe
cmp
movsl
aas
aam
insl
mov
testl
divb
cmp
mov
push
mov
out
mov
adc
notb
or
dec
push
mov
or
xchg
loope
in
mov
sbb
sbb
xor
lahf
fdivl
jg
sub
aam
or
int
ljmp
xor
insl
int3
insb
jae
push
iret
mov
fisubrs
das
dec
shrl
das
pop
push
xchg
adc
test
xchg
xchg
push
mov
mov
shrl
dec
arpl
xchg
divb
shrb
add
in
and
repz
and
ret
inc
pop
aam
add
outsl
push
insl
mov
js
sti
loopne
inc
cmp
sbb
sbb
mov
mov
ljmp
and
cli
xchg
call
jmp
mov
inc
xchg
cwtl
inc
scas
in
mov
push
and
mov
es
sahf
popf
push
stc
sahf
xchg
data16
lcall
add
out
andl
cld
js
and
add
out
ret
in
and
push
inc
or
lret
sahf
push
jae
add
int
aaa
sbb
xor
jecxz
aam
xor
push
dec
je
sub
shrl
test
add
and
add
push
std
faddl
imull
lods
popa
cmpl
clc
in
lcall
sar
jl
pop
sub
ret
add
lods
ds
xchg
lods
xchg
pop
scas
js
xor
cs
and
rorl
lcall
fwait
mov
cmp
jmp
mov
arpl
add
popf
pop
int3
jp
push
push
add
inc
ss
and
sbb
call
repz
mov
jmp
mov
inc
stc
in
out
adc
std
cs
bound
imul
ljmp
pop
mov
inc
int
insb
or
jg
cmp
xlat
cltd
mov
mov
or
sub
xchg
push
jl
mov
in
push
mov
cmp
sbb
pop
and
andb
xor
or
cmp
sbb
push
jecxz
aad
xchg
loope
sub
cmp
jp
mov
aaa
pop
insl
cmp
cmp
lahf
mov
push
stos
jmp
hlt
xchg
lds
aaa
iret
sub
scas
daa
js
outsl
sub
data16
add
testb
repnz
ds
scas
adc
or
mov
das
outsb
jo
pop
dec
imul
test
outsl
add
mov
lret
mov
aad
inc
pop
adc
cmp
pop
push
sbb
mov
push
imull
bound
push
push
xchg
mov
nop
psllw
pop
lahf
dec
push
enter
push
inc
wbinvd
push
or
xchg
sbb
and
and
pop
lods
cltd
insl
rcrl
pop
adcl
cwtl
push
testl
mov
clc
jne
push
fbstp
in
dec
data16
sarb
and
stos
loop
inc
inc
mov
lret
cmc
cld
int
inc
jns
test
mov
mov
stos
neg
negl
or
xor
je
add
or
clc
js
jns
or
insl
jno
jl
ljmp
adc
mov
push
iret
int3
stos
mov
lcall
test
in
jecxz
mov
in
sub
adc
dec
pusha
icebp
addr16
dec
shl
out
test
and
jmp
hlt
mov
popa
aas
leave
lcall
inc
dec
dec
and
push
jl
jge
bound
mov
ret
aaa
popf
aam
bound
iret
xor
rcll
aas
mov
jle
sub
test
cli
mov
loope
or
shlb
xor
daa
mov
push
idivl
add
js
orl
jle
sbb
add
mov
sub
mov
daa
and
mov
mov
gs
shrl
and
sub
jmp
daa
roll
lds
stos
js
push
sbb
xchg
sub
fsubrs
dec
jmp
movsl
std
ror
int3
and
sub
nop
pop
shl
movsl
push
mov
pop
lods
lock
movsl
push
xchg
xor
sub
mov
iret
pop
add
cmpl
rclb
cmp
sbbb
jecxz
add
lods
or
fimull
adc
mull
clc
std
cmpsb
adc
stos
inc
insb
call
mov
stc
out
push
lret
sbb
xchg
jns,pn
mov
sarb
loop
mov
mov
cmpsb
fadds
daa
dec
jns
sub
pop
xchg
hlt
lods
cld
in
sbb
popa
add
inc
sbb
popf
cmc
xchg
jnp
mov
dec
jp
fildll
mov
xchg
pop
mov
hlt
xchg
xlat
jo
xchg
pop
pop
jo
fbld
push
imull
sbb
inc
push
add
sub
lea
hlt
xchg
shll
insl
pop
repnz
jns
hlt
xchg
iret
jo
out
fadds
mov
in
cltd
mov
js
jp
sub
jae
das
cld
hlt
in
or
rclb
scas
arpl
xor
clc
pop
repz
fisubs
push
adc
push
sub
pushf
testb
adcl
push
mov
mov
mov
pop
inc
or
fidivrs
stos
pushf
cmpsb
rcl
fwait
xchg
mov
in
cmpsl
mov
pop
pop
and
bound
sub
jle
shrl
icebp
fwait
stos
imul
cmp
mov
or
js
push
das
sbb
inc
dec
or
daa
out
das
fidivl
push
sub
jb
mov
inc
aaa
adc
inc
in
pop
ret
jg
roll
mov
enter
insl
dec
lret
hlt
pop
inc
adc
push
xor
pop
pop
xchg
insb
push
cmp
cmc
lods
sub
pop
fldl
xor
push
lret
push
cmc
add
jb
add
push
ljmp
andl
add
lea
mov
xchg
filds
adcl
dec
std
jl
push
add
jno
add
adc
pop
jecxz
cmc
xor
lods
leave
adc
daa
out
hlt
add
movsb
enter
dec
push
and
mov
push
bound
out
test
stos
and
aam
test
mov
push
addl
mov
xchg
add
arpl
popa
cmpsl
idivl
mov
jge
pop
aam
cld
out
movsl
out
mov
iret
add
dec
cmc
or
xchg
dec
ja
or
sbb
dec
ret
cmp
imul
mov
loop
xor
cltd
aad
mov
dec
cs
mov
fwait
arpl
mov
add
in
sbb
shrb
sub
mov
or
lock
xchg
out
repz
adc
cmc
add
mov
and
jo
jnp
mov
cli
jge
scas
rcrl
out
in
jo
or
xchg
sti
or
xor
lods
stos
or
out
jecxz
and
jno
pop
and
adc
jl
arpl
ljmp
and
xlat
sahf
fmul
inc
dec
mov
push
iret
mov
arpl
xor
pop
pop
push
or
mov
jo
jae
stos
rolb
mov
rcll
aaa
in
scas
sub
sub
shl
and
jno
jg
sub
ret
add
inc
je
ret
inc
fimuls
pop
into
and
push
outsl
gs
pop
gs
jbe
xorl
mov
xor
jne
mov
mov
insb
sbb
xchg
mov
sbb
jne
and
add
fs
add
fsubrp
jp
es
mov
or
jp
test
int
pop
mov
cmpsl
cltd
cs
stos
stc
aad
orb
jl
pop
mov
adcl
push
ficoml
or
ret
ss
cld
or
push
or
ljmp
push
bound
rcr
hlt
pusha
cmp
fcompl
mov
mov
cmp
jo
mov
push
enter
adc
lods
lock
aaa
test
and
repz
and
in
outsl
mov
push
popa
cmp
cs
pop
add
stos
xchg
xor
out
pop
mov
les
lcall
cmp
mov
jb
ds
cli
sub
xchg
mov
push
jecxz
lods
das
inc
loope
shll
ret
jge
imul
inc
jae
xchg
movsl
dec
mov
sub
rolb
pop
addr16
push
mov
add
aas
test
pop
and
fmuls
cs
xchg
dec
fdivs
push
inc
repz
pusha
gs
sub
enter
sti
bound
adc
jmp
sbb
dec
jmp
jne
xchg
inc
jno
jg
jge
push
mov
push
fstl
cld
sub
mov
fnstsw
mov
inc
sbb
xchg
mov
mov
leave
pop
cmp
clc
pushf
roll
mov
fmuls
xchg
in
jg
mov
test
xor
mov
imul
shrb
pop
cld
das
enter
inc
daa
inc
or
enter
and
cmp
repz
mov
daa
bound
push
and
mov
pop
cmp
push
push
sbb
mov
add
cs
sbb
jns
add
xor
pop
push
fcompl
nop
lret
jp
movsl
scas
dec
mov
cmp
xorb
daa
fists
pop
subl
insb
pop
mov
movsb
and
inc
addr16
mov
inc
mov
cmp
mov
sub
pop
lret
out
inc
sub
push
dec
add
shr
mov
stc
xorl
sub
mov
xchg
test
and
das
test
xor
scas
add
xor
xchg
or
inc
inc
push
xorb
push
xlat
imul
xlat
sbb
cmp
adc
std
enter
jnp
or
loope
lds
jmp
xchg
fistps
lcall
fsubrl
sbb
jle
es
xor
inc
xchg
test
xchg
mov
pop
js
jnp
aad
rcrb
adc
mov
mov
dec
push
loope
inc
pop
cld
jae
int
cmp
or
je
mov
xchg
sub
xchg
xchg
hlt
mov
imul
hlt
ljmp
fiaddl
adc
or
xchg
fs
adc
aam
cld
mov
mov
adc
or
adc
enter
pop
pop
or
dec
xbegin
sbb
aam
mov
adc
ds
mov
lds
pushf
in
fs
and
mov
xor
test
ret
mov
adc
cmp
mov
incl
adc
cmp
dec
and
in
scas
jne
daa
call
divl
jg
daa
mov
dec
sahf
xchg
push
stc
cli
sahf
inc
mov
cmp
dec
icebp
sbb
xchg
or
out
xor
icebp
js
sbb
jp
mov
fdivr
cli
aaa
xchg
adc
fs
jge
sbb
mov
push
mov
sbb
lret
mov
in
fcomps
negb
dec
popl
cmc
stc
mov
mov
inc
inc
mov
push
insl
or
cwtl
aaa
shr
outsl
shrb
adc
dec
jnp
sub
push
adc
and
xor
in
hlt
lahf
imulb
negl
pop
sbb
push
push
dec
cmp
push
rcr
mov
push
push
pop
addr16
outsl
xor
cmp
popa
stos
inc
add
and
nop
mov
test
fsts
sbb
lock
js
push
lock
out
cmpsb
or
xchg
pop
orb
push
lahf
movsl
shr
jae
sbb
aam
stos
out
out
inc
or
cmpsb
xchg
push
scas
xor
dec
push
cltd
push
mov
mov
xchg
sub
fldl
jb
aas
aas
sbb
jno
mov
mov
lea
in
pop
stc
xchg
int3
addr16
es
enter
pop
push
xchg
push
mov
ljmp
sub
stc
xorb
inc
out
inc
je
adc
cmpsl
test
mov
sbb
inc
and
int
and
cmp
cwtl
push
pop
jge
das
dec
in
pop
xchg
mov
dec
das
cmp
pusha
and
xor
filds
cli
lods
cli
adc
subl
ja
sub
dec
mov
ja
dec
and
cli
ss
int3
cld
mov
cmp
adc
mov
xchg
aam
cwtl
das
loop
shrl
rcl
xor
add
xchg
fimuls
cld
or
out
lahf
push
add
clc
and
cmp
jo
insb
sub
push
add
mov
jo
mov
orl
cs
fcoml
adcl
sbb
jno
das
je
fs
jnp
mov
sub
xchg
imul
jle
lret
ss
ja
std
data16
fcom
aad
adc
arpl
cmpsb
xchg
lret
jge
or
jmp
jno
sar
push
in
jg
addr16
test
xlat
pop
pop
lods
dec
lret
rcrb
add
dec
mov
ja
sub
stos
jb
mov
and
or
mov
push
scas
shll
xchg
pop
movsl
outsl
int
mov
add
lds
mov
inc
sbbl
push
ret
push
cld
scas
mov
cmp
jae
popa
adc
stos
xchg
sbb
mov
push
and
out
fstps
iret
fnstcw
adc
jne
push
mov
scas
xchg
fcmovnbe
sub
lods
xchg
fidivrl
sbbl
jae
pop
and
push
mov
cmp
push
adc
aam
xorb
xor
iret
xor
mov
sub
andl
or
pop
jne
xor
insb
adc
ret
push
mov
mov
lret
and
cltd
or
std
inc
add
hlt
insb
jl
or
add
sub
cmp
ud1
gs
insb
sub
out
data16
ficoms
dec
or
or
pop
arpl
in
or
psubsb
pop
das
leave
pop
xor
out
negl
arpl
inc
push
dec
push
and
push
fimuls
outsl
rol
leave
cld
lods
sti
and
sahf
jmp
cmc
addb
sub
mov
ds
outsl
iret
arpl
lret
icebp
cmc
adc
data16
negl
push
dec
add
insl
mov
std
push
sbb
pusha
add
shr
push
sub
adc
xor
outsl
fnstenv
in
jp
and
lcall
add
int3
int3
mov
lods
sub
stos
or
rcl
test
lcall
cmp
aas
mov
and
ja
je
icebp
data16
aam
mov
cmp
push
movsb
and
add
mov
in
gs
jnp
lock
mov
inc
sbb
nop
and
sar
hlt
dec
and
or
leave
sub
mov
fldt
push
nop
sbb
insl
xor
push
scas
loope
cld
xorb
adc
xor
or
dec
push
mov
cli
fdivl
dec
cmpsl
test
xchg
push
push
dec
int
pop
jne
xchg
mov
cmpsl
dec
ja
bound
mov
and
les
clc
push
ret
ret
lods
mov
lea
loope
rorl
pop
push
lods
das
sbb
addr16
xchg
adc
push
adc
testb
insl
adcb
loope
xor
mov
fnstcw
adc
test
fnstenv
int3
mov
mov
or
je
and
or
cmc
popf
mov
test
sahf
ss
std
ss
push
ret
cmp
sbb
lcall
xchg
stos
aad
scas
jae
stc
pop
pop
insb
mov
cmp
mov
xorb
adc
fcomp
sub
mov
nop
xor
lea
sarb
pop
jge
outsb
lret
std
aas
scas
mov
or
lods
push
adc
sbb
push
dec
sub
sbb
aas
pop
out
or
jmp
lret
sbb
nop
dec
xchg
jb
add
or
pop
sti
sbbl
test
outsl
jns
sahf
fwait
ljmp
lret
add
mov
shlb
aad
scas
jge
or
jnp
addr16
shll
mov
insl
pop
xlat
les
pop
cmp
sub
mov
push
sbb
mov
jmp
bound
out
icebp
jae
mov
aam
hlt
dec
mov
jnp
pop
adc
xorb
mov
add
sub
pusha
mov
xchg
test
rolb
xchg
push
pushf
leave
jns
inc
jle
scas
lods
stos
mov
shlb
fcoms
in
jnp
mov
or
popf
mov
addr16
mov
sub
inc
mov
cmp
xchg
add
pop
mov
sub
and
adc
pushf
rol
push
imul
push
test
and
data16
xlat
mov
lock
cmpsb
cld
and
in
xor
mov
rep
push
inc
popf
cmp
pop
jns
shlb
mov
xchg
adc
es
mov
and
add
xchg
pushf
pop
fsubrs
jg
pop
jge
jnp
jns
sahf
or
mov
inc
int
mov
push
pusha
imul
loopne
or
xchg
dec
mov
paddw
popl
dec
push
push
insl
cmp
push
pop
cmp
test
cmp
mov
ljmp
jge
jo
pop
add
sub
mov
imul
aaa
xchg
mov
gs
cmc
mov
mov
mov
insb
lods
shlb
jns
mov
loopne
push
push
cltd
insb
fsts
jge
cltd
mov
or
int
mov
roll
inc
add
lcall
ljmp
pop
iret
lcall
lret
popa
in
mov
and
movsl
iret
sti
into
std
lcall
add
push
mov
cmp
dec
jl
and
push
jae
dec
and
stc
or
xchg
or
add
sub
cmp
xchg
ficoms
inc
dec
mov
inc
sbb
jnp
adc
dec
adcb
test
xchg
inc
aas
std
movsl
mov
mov
push
add
inc
test
fwait
jp
lock
jp
orl
test
in
mov
mov
lahf
cmpsb
out
lds
mov
dec
jnp
inc
sbb
mov
mov
sbb
ss
aas
xor
mov
pusha
in
test
or
cmp
es
in
mov
cmpsb
ficomps
jne
aas
and
cmpsb
jb
mov
sbb
add
push
xchg
aam
or
cwtl
cmpsb
and
adcl
scas
out
hlt
sar
or
mov
imul
and
inc
movsl
lahf
jnp
sbb
push
test
pop
jmp
test
add
jle
aaa
idivb
mov
stos
push
mov
imul
out
xor
repz
mul
clc
mov
pop
das
cmc
mov
leave
orb
xchg
lods
fwait
inc
cmc
loop
in
aam
sub
mov
xor
loopne
aam
mov
xchg
adc
or
and
pop
pop
xchg
fistpl
iret
jl
imul
lahf
jl
mov
ja
and
push
cli
cmp
loopne
pushf
fildll
mov
hlt
mov
loope
mov
ds
mov
mov
fs
ficompl
xchg
sarb
loope
pop
scas
adc
dec
inc
repz
adc
int3
mov
mov
imul
mov
stos
sub
cmp
rcll
cltd
mov
or
or
outsl
cmpsl
and
cmp
jnp
into
stc
test
enter
push
jb
mov
ss
imul
pop
sub
cltd
push
push
or
fadds
add
popf
popf
xchg
popl
fnstenv
or
push
inc
aas
fstp
outsb
lret
ret
sub
push
shll
mov
and
loopne
jg
xor
cmp
addr16
sbb
arpl
dec
daa
xlat
stos
mov
popa
dec
cmpsb
adc
cld
aam
movswl
sub
or
mov
mov
jg
cmpsb
add
lods
test
daa
in
mov
xchg
jne
mov
bound
fbld
leave
dec
stos
imul
repz
and
lea
lea
fldl
and
lods
pop
mov
cs
lcall
and
fnstcw
push
stos
or
push
fstl
or
ds
repnz
nop
fisubrs
pusha
bound
lods
ja
ds
mov
jp
mov
xchg
mov
cld
push
sti
sub
mov
lods
fadds
mov
arpl
push
inc
lret
jp
lods
imul
adc
push
add
mov
mov
mov
lods
stos
add
mov
clc
lret
out
je
push
adc
outsl
out
mov
mov
fucomp
mov
int3
cwtl
sarb
push
sbb
ficomps
pop
jl
addr16
insl
mov
mov
add
cld
jnp
pop
int
fisttps
ffree
out
das
jge
in
mov
pop
dec
adc
sub
dec
cmpsl
cmc
loopne
push
cli
test
icebp
icebp
sub
or
scas
addr16
lds
cmc
shr
adc
pushf
mov
jbe
data16
push
mov
test
pop
les
shrb
stos
xchg
out
aaa
mov
jge
lods
mov
repnz
adc
js
insb
jae
xchg
dec
test
fsubr
hlt
push
test
push
ss
in
scas
fs
cmpsl
or
subb
stc
push
mov
xor
data16
add
push
ja
loop
jno
sti
cmp
add
adc
cmp
fnstsw
sub
pusha
mov
pop
jae
sbb
bound
stos
jae
scas
pusha
xlat
push
adc
sbb
xchg
enter
es
jg
push
cmp
insb
aad
sub
mov
add
popf
js
insl
in
jmp
inc
jmp
sbb
lea
dec
push
test
lds
out
pop
cltd
and
fldenv
or
notrack
cs
jmp
cmpsl
scas
pop
push
repz
stos
test
hlt
les
fwait
lods
out
stc
dec
enter
daa
mov
sbb
aad
in
dec
jns
xchg
sub
dec
ficoms
ret
subb
fcomip
idiv
out
sub
iret
push
mov
xlat
repnz
out
xchg
cmpsl
imul
sbb
popa
and
inc
inc
inc
lods
pusha
sahf
in
push
jp
sbb
lock
lods
mov
mov
dec
mov
mov
mov
sti
xchg
xchg
sbb
adc
pop
jns
stos
out
aam
outsb
xor
jb
mov
fisttps
pop
insb
lret
cs
std
shll
scas
mov
std
hlt
cs
popa
nop
sahf
cmpsb
mov
mov
mov
daa
out
mov
xlat
aam
gs
imul
mov
cli
mov
jmp
sub
lahf
jge
cltd
mov
xchg
hlt
and
jno
jae
les
push
andl
xor
repnz
jl
outsl
neg
fwait
sahf
cwtl
sahf
rcl
add
adc
inc
icebp
xor
lods
add
rolb
sbb
lret
lock
jae
pushf
cmc
push
int3
fsubr
mov
mov
lret
push
stos
xlat
shlb
jb
pop
iret
cmp
sahf
cmp
push
jge
sub
xchg
out
mov
cmp
add
stc
clc
out
fcoml
lea
and
sub
ljmp
mov
in
mov
into
cwtl
popf
xor
mov
or
daa
lea
xor
cmp
pop
fcomp
xlat
jne
and
xor
int3
rolb
sbb
test
cmc
jb
mov
ja
lods
jecxz
add
jp
inc
lahf
ror
bound
jmp
cs
mov
sub
fldcw
dec
cmpsl
fldl
dec
roll
xchg
push
sbb
aam
push
ret
add
mov
cmp
movsb
adc
fnsave
sbb
cmpsb
sbb
and
and
loopne
cs
sbb
ror
xchg
fsub
dec
push
jae
lcall
scas
std
movsl
into
mov
in
mov
sbb
out
mov
adc
or
lds
cmc
js
xor
stos
gs
push
aam
addl
jne
jne
pop
aas
in
imull
adc
fisubrs
add
test
and
push
fistps
lret
mov
inc
fimuls
mov
imul
fdiv
cli
jne
stos
lret
mov
sbbl
ret
dec
xchg
pop
cmp
pop
push
scas
fs
jg
je
pop
sbb
lods
test
rorl
add
cs
and
sub
ficoml
cmp
xchg
jae
xchg
out
mov
cmpsb
add
pushf
adc
dec
adc
pop
test
sub
xchg
jbe
scas
jmp
dec
dec
adc
stos
out
ret
subb
fdivrl
test
xor
sahf
xchg
jge
jge
sbb
imull
sub
pop
nop
aas
bound
outsl
aaa
mov
sub
test
xlat
push
push
repz
loope
xlat
ljmp
movsl
aad
inc
jns
shll
or
pop
mov
ret
enter
xlat
add
mov
cmp
test
xor
and
add
sbb
inc
mov
sub
pop
jmp
and
cmp
cmp
xchg
rcrl
scas
call
jne
stos
add
pop
add
and
lea
daa
dec
lock
mov
jmp
and
mov
fsubr
sbb
cmc
lret
mov
aas
ret
hlt
lret
mov
pop
test
shlb
sti
xor
in
int
les
rcrl
add
scas
push
xchg
repnz
adc
loopne
xor
lcall
fucomi
shlb
jnp
pop
pop
orl
jecxz
xor
pop
hlt
hlt
jl
xchg
add
push
iret
sahf
xchg
mov
addr16
aas
je
mov
out
pushl
mov
xor
roll
shll
lret
xor
fdivrp
push
icebp
inc
ljmp
push
fildl
jae
mov
pop
inc
sbb
test
cmp
xchg
xchg
inc
mov
sti
xor
jle
imul
out
inc
rorl
out
adc
jecxz
mov
dec
and
into
and
sti
in
push
jb
pop
push
fs
xor
push
jecxz
or
jl
lds
mov
adc
xchg
xor
stos
rcll
rclb
xor
cmp
stos
scas
sbb
and
shll
loope
out
mov
mov
filds
xchg
add
mov
push
enter
dec
rcll
shr
ss
sti
xchg
pop
cmp
orb
mov
fists
adc
xor
push
insl
push
cld
sbb
mov
sub
or
lds
int
cmpsl
ret
push
xchg
rcr
aad
lret
in
insl
call
inc
addr16
pop
sbb
inc
imull
dec
cld
jb
add
pusha
ret
es
jg
push
popa
setno
cmpsb
mov
cmp
cwtl
add
fwait
sbb
ljmp
adc
lock
jl
mov
xchg
rol
mov
mov
out
addr16
ror
in
ret
cmpsb
xchg
and
mov
jmp
xlat
mov
mov
dec
stc
mov
xchg
imul
fidivrs
push
lahf
xor
mov
bound
and
jg
imul
repz
mov
jbe
xorb
aaa
incb
or
or
push
in
ljmp
fldcw
lods
lods
mov
imul
push
cmpsb
xchg
test
testb
dec
dec
stos
outsl
sbb
mov
adc
inc
push
xchg
fxtract
xchg
lahf
sbb
mov
aam
roll
sbb
in
dec
mov
ss
push
or
movsl
and
sbb
push
xor
mov
mov
mov
cmp
js
add
mov
aas
sahf
pop
jl
push
xorb
andb
adc
push
jns
push
shl
or
adc
cltd
cmp
xchg
jae,pt
lea
shrb
inc
mov
xor
shl
cmpl
sub
xchg
jno
les
sahf
mov
jb
mov
data16
scas
and
push
das
pop
and
jno
in
imul
xchg
sbb
adc
imul
repz
sbb
aas
dec
cmp
adc
mov
dec
fidivl
pop
cli
ss
pop
test
ficoms
push
and
jnp
stos
pop
movsb
test
sbb
or
inc
out
xchg
pusha
aam
xchg
mov
add
adc
inc
insb
and
or
or
or
inc
lahf
pop
mov
les
mov
fbld
add
xlat
cmp
cltd
jecxz,pn
cltd
mov
push
mov
mov
repnz
dec
inc
imul
adc
aam
push
aas
mov
inc
leave
in
dec
jmp
pop
sbb
jle
out
je
enter
push
mov
xlat
aad
xor
std
cmp
jno,pt
repnz
fstps
xchg
in
push
sbb
and
and
xchg
es
jnp
jns
aam
dec
addr16
xor
add
xchg
sldt
add
add
pusha
or
je
call
pop
add
cmpb
jne
popa
jmp
fldt
cmp
add
pop
and
xor
mov
add
cmp
jne
movzwl
add
mov
add
cmp
je
sub
jmp
mov
mov
add
mov
add
jmp
mov
mov
push
push
call
call
pop
sub
mov
sub
mov
movb
popa
jmp
insb
sbb
adc
test
pusha
xor
mov
shr
je
pop
cs
or
sbb
adc
test
pusha
xor
mov
shr
je
pop
cs
or
sbb
adc
test
pusha
xor
mov
shr
je
pop
cs
or
sbb
and
jl
sub
mov
mov
inc
mov
inc
mov
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
mov
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
mov
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
mov
jmp
sub
mov
popa
ret
jmp
jmp
add
jecxz
test
mov
popf
fcompl
dec
cmp
inc
and
add
push
jge
xor
loopne
jle
sub
pop
mov
scas
lock
ja
loope
out
mov
push
push
popa
loope
mov
adc
or
xchg
pop
and
inc
xor
and
mov
jns
cmc
es
insl
pop
ja
call
mov
gs
popa
jo
cmp
pop
push
jle
push
std
xor
sarl
pusha
and
sub
jbe
adc
adc
sbb
lds
sbbl
or
or
test
and
or
call
mov
inc
and
ds
inc
push
push
inc
call
push
je
pop
xchg
fisttps
pop
and
aad
jmp
hlt
add
in
add
mov
pop
adcl
mov
movl
inc
mov
aas
cmpl
lahf
and
int3
subl
inc
adc
loope
fsubl
mov
inc
add
jno
or
add
pop
or
test
sbb
lea
add
ret
mov
inc
mov
push
pop
or
daa
push
lea
orb
pop
mov
aas
rcl
xor
or
imul
scas
adc
inc
inc
dec
xchg
inc
mov
inc
mov
popa
mov
mov
or
ja
sub
in
popa
jmp
inc
adc
mov
and
push
or
or
jl
adc
pop
cmpsb
dec
sbbb
push
xor
add
into
xor
sbb
mov
mov
test
bswap
cmpsb
mov
push
call
fcomps
push
ret
push
rorl
add
add
xorb
or
cwtl
ret
sub
xor
loopne
rorl
xchg
sub
xor
add
push
or
and
sbb
mov
mov
or
dec
adc
movb
test
loope
jns
aaa
mov
popf
adc
pop
lea
je
lret
adc
and
push
jmp
fimuls
mov
and
xor
add
push
dec
mov
repz
cmp
add
xor
lahf
lret
sarb
je
test
push
jge
mov
dec
shlb
add
cmpb
jne
and
rcl
and
pop
fimull
imull
repz
fadds
test
sbb
xor
ret
out
sub
int3
adcb
pop
mov
pop
divl
arpl
push
in
add
test
cmpb
xor
xor
cmpb
inc
sbb
or
adc
inc
adc
pop
mov
mov
clc
int
sub
jge
cmpl
or
dec
cld
inc
or
movsb
jmp
pop
clc
push
pop
insl
and
lock
hlt
mov
lock
or
cmp
loopne
ret
sub
fisttpl
int3
lock
cmp
shr
fimuls
adc
cli
or
mov
or
or
dec
fisubs
adc
pop
lock
hlt
in
xor
jb
mov
shlb
fs
es
sbb
jbe
cwtl
jge
cmp
jb
shrl
or
mov
mov
cmova
sbb
mov
mov
xorb
add
popa
or
push
gs
ss
fmull
in
pop
imul
xchg
add
mov
jb
add
inc
xor
sbb
dec
pop
les
xchg
add
addr16
mov
sub
enter
pop
les
mov
add
mov
leave
test
das
xor
push
adc
cmpb
pop
jbe
adc
mov
cmp
pop
sbb
adc
nop
push
jle
test
add
fwait
push
cmp
mov
add
sub
jne
xchg
adc
repz
adc
aaa
jo
in
or
mov
int
mov
dec
mov
xorl
mov
adc
sbb
cmp
js
sub
add
xor
sbb
stc
xor
or
xor
xor
cltd
inc
in
les
inc
or
mov
les
inc
add
stos
stos
mov
inc
cmpsl
pop
rolb
pop
subb
movsl
aad
jbe
adc
and
inc
movsl
or
ret
pop
les
inc
push
les
mov
jo
or
and
add
enter
dec
or
and
lods
add
adc
push
bound
sub
xor
pop
add
iret
scas
xor
insb
push
pop
rclb
pop
les
mov
sbb
out
sbb
aaa
and
sbb
add
out
adcl
ljmp
repnz
sbb
xchg
mov
sbb
push
cmp
adc
sub
add
jo
fisttpll
push
xor
daa
cmp
pop
add
inc
pop
cld
mov
inc
les
cmpsl
or
pop
adc
jne
ret
or
jne
adc
pop
pop
dec
add
imul
or
pop
pop
ret
gs
aad
dec
dec
es
push
hlt
addb
sti
cmp
xor
mov
push
testl
std
push
mov
dec
nop
or
fisubl
jmp
aas
and
pushf
push
add
or
rcrb
xchg
sbb
std
pop
bound
xor
xlat
push
fcoml
sbb
dec
dec
push
sub
enter
and
push
pushf
add
pusha
push
movsb
lret
sbb
xlat
push
popa
inc
sub
test
jb
add
push
mov
scas
jmp
mov
sahf
andb
ja
cmp
add
popa
jo
shrb
imul
and
jne
in
cmpb
inc
cmp
pop
and
xor
insl
add
lods
ds
pushf
jg
sbb
pop
xchg
dec
aam
mov
mov
jno
fwait
pop
int3
test
push
mov
rol
mov
add
pusha
rclb
movsl
cmp
cli
jnp
or
rorl
stc
add
xchg
inc
sbb
sbb
mulb
adc
sarl
rcl
test
aaa
repnz
fadd
call
sbb
add
xorb
sub
dec
in
mov
inc
inc
je
sahf
or
les
and
fucom
pusha
and
test
jl
add
fisubrl
push
push
lret
adc
sbb
in
mov
shlb
adcb
sub
mov
into
int3
jae
sub
es
outsb
mov
adc
pop
push
xor
out
mov
add
xchg
mov
cltd
test
adc
flds
jge
loopne
pop
add
aas
push
or
jmp
scas
hlt
mov
jo
rorl
loopne
stc
ret
lods
and
test
adc
push
push
daa
adc
data16
fildll
inc
ds
xchg
add
sbb
add
jns
negb
pop
pop
push
js
mov
outsl
loope
cmpsb
pusha
inc
fistpl
mov
addr16
jo
adc
dec
dec
orb
ret
orl
mov
sarb
add
dec
inc
sarb
add
pop
gs
mov
hlt
push
and
adc
mov
pop
inc
std
cs
pop
addr16
cmp
xchg
and
sbb
mov
mov
cwtl
mov
shl
add
daa
and
idiv
out
movsl
add
mov
inc
sub
inc
fcomps
dec
push
push
xchg
ljmp
inc
sub
adc
outsb
push
mov
pop
nop
inc
push
sub
inc
add
test
sub
jge
sbb
pop
adc
cmp
push
push
add
inc
in
adc
aad
lsl
jno
nop
dec
mov
add
jmp
and
or
les
xor
push
ds
mov
fmuls
dec
mov
orb
or
push
and
mov
and
lock
ss
mov
inc
mov
and
loope
xor
mov
sub
dec
xor
outsl
add
dec
stos
pop
sub
test
lret
cmp
mov
in
or
leave
test
sub
add
pop
pop
sub
ja
xor
xchg
add
mov
or
popa
jmp
dec
mov
and
xor
cmp
js
push
adc
adc
call
mov
in
stos
mov
imul
aas
add
bound
or
push
sub
push
les
jo
cmp
aam
mov
enter
mov
aas
sbb
jmp
pop
test
cmp
rcll
mov
pop
in
jge
xor
ss
shrb
jns
add
cltd
ficomps
inc
dec
rorb
sbb
mov
fwait
pushf
jb
dec
inc
arpl
and
push
lods
sub
inc
in
setae
mov
out
sbb
and
fwait
push
gs
push
pushf
fidivrs
popf
sub
add
int3
or
clc
or
rclb
or
adc
adc
test
push
les
mov
adc
add
ret
test
daa
adc
movb
dec
dec
xor
aad
push
xchg
dec
lods
fistpll
add
mov
fcmovbe
aaa
popa
cwtl
mov
xor
rcll
inc
in
dec
add
xor
jne
jbe
out
lds
nop
cmpb
cwtl
outsl
dec
pushf
push
rorb
paddsw
out
imul
hlt
push
xlat
cmp
test
sbb
aam
arpl
cmp
mov
push
std
xchg
dec
out
cwtl
push
fwait
push
add
and
scas
testl
loop
fldl
cmp
cli
dec
add
xchg
xchg
and
cmp
or
ret
iret
mov
in
dec
cwtl
ljmp
addb
lret
add
stos
arpl
cmp
mov
push
jo
movsl
incb
or
and
xchg
add
jl
mov
shl
add
ss
or
push
pop
mov
shrb
jae
pop
out
push
push
xchg
push
call
xor
lcall
inc
xor
or
push
lock
push
mov
cmp
or
mov
dec
cwtl
xchg
in
mov
stos
cmp
andb
inc
sbb
lcall
bndstx
sbb
add
xchg
sub
aas
adc
pop
mov
rcl
fidivrl
inc
mov
subb
add
dec
es
and
out
inc
scas
cmp
push
mov
test
ja
insl
scas
int3
outsl
inc
pop
mov
ret
jno
sub
add
adc
adc
pop
inc
jo
loop
mov
into
out
adc
sub
sbb
add
mov
into
in
nop
push
mov
ljmp
ficomps
adc
rclb
roll
insb
lret
test
cltd
movsb
inc
nop
push
xchg
imul
mov
add
or
sbb
mov
fdivr
push
xlat
jle
mov
int3
ret
ret
add
inc
push
xchg
pop
loopne
inc
cwtl
cmp
imul
test
pop
mov
lret
cli
and
insb
xor
and
cmpb
adc
hlt
lods
addl
mov
push
outsl
in
push
add
sub
rcrl
cmp
xlat
out
int
sub
and
nop
cwtl
rol
add
pop
int3
mov
sti
mov
xor
popa
pushl
xchg
add
shr
mov
mov
dec
imul
cmc
das
daa
add
testl
add
add
call
dec
les
push
and
out
pop
aaa
outsl
push
jno
mov
pushf
jmp
and
adc
xchg
add
je
sub
and
adc
pop
push
aam
xor
jo
xchg
pop
inc
mov
jbe
or
dec
mov
jl
add
add
cmp
sub
jl
and
insl
inc
jno
mov
outsl
sbb
gs
inc
je
addr16
ret
and
mov
aaa
pusha
insb
fsubp
pop
xchg
cld
es
mov
int3
sbb
ds
fiadds
add
mov
inc
add
xor
push
inc
andl
subl
inc
mov
popa
ljmp
mov
and
movsb
sub
fs
lods
ret
es
or
ret
xor
call
sbb
scas
mov
inc
frstor
or
mov
push
mov
nop
lock
and
in
sbb
or
jecxz
cmp
mov
or
mov
xor
adc
mov
mov
add
dec
jg
add
daa
movsb
pop
enter
cmp
mov
mov
jge
pop
pop
mov
push
mov
mov
xchg
mov
sub
jnp
inc
pop
add
sbb
faddl
lret
xor
stos
adc
fmuls
push
imul
adc
push
sti
cwtl
dec
add
cmp
xor
sbb
mov
fiaddl
sub
xchg
cmpsb
jecxz
mov
add
cmp
popf
in
mov
push
dec
jmp
out
push
jecxz
xor
push
shll
add
mov
dec
sarb
mov
loope
xchg
loop
std
mov
mov
inc
sbbl
movsb
and
mov
inc
test
dec
pop
scas
pushf
roll
test
rorb
pop
test
inc
fmull
rcrl
add
mov
outsb
stos
push
pushf
mov
cwtl
in
inc
xor
pop
bound
pop
jmp
add
mov
push
aad
or
mov
push
bound
sbb
xor
cmpsl
in
pop
cmp
and
fs
enter
or
push
cwtl
sbb
jecxz
inc
xchg
adc
or
fsincos
jmp
add
leave
push
test
int
jns
sub
push
jge
test
in
add
push
lods
push
cmpb
sbb
aad
pop
dec
ljmp
ds
int3
ret
inc
cmp
xchg
inc
mov
xor
ljmp
jl
mov
movsb
inc
in
xor
outsb
xor
xchg
xor
mov
mov
xchg
sarl
in
dec
inc
cmp
int3
sub
mov
ret
popa
mov
cmp
and
cmp
daa
push
adc
pushf
push
push
or
push
jle
pushf
inc
inc
shrb
cmp
mov
jo
push
in
inc
and
pop
insl
mov
xchg
aas
popa
xchg
and
jne
inc
mov
test
xor
addl
out
dec
xchg
or
add
arpl
test
shll
stos
loopne
pop
dec
mov
and
into
xor
mov
cs
mov
xchg
movsb
mov
sarb
dec
push
mov
subl
addb
jl
add
sbb
push
xchg
and
mov
cwtl
fcomps
jb
clc
or
adc
arpl
sbb
xchg
add
std
push
clc
in
push
adc
scas
add
ret
aas
or
ja
pop
xchg
add
jl
pop
loop
cmpsb
mov
mov
cmc
push
sahf
inc
pop
pop
inc
inc
rorl
add
cmp
cs
xchg
add
stos
lods
adcb
roll
push
mov
mov
add
dec
xor
jae
movsb
push
setbe
jne
adc
inc
add
cmp
and
add
add
xchg
mov
xchg
xor
std
fadds
scas
xor
clc
xor
sbb
jge
push
add
adc
mov
add
pop
mov
add
out
aas
pop
mov
in
pop
arpl
add
inc
pop
xchg
lret
and
mov
add
sar
and
cmp
cmp
les
stc
add
int3
and
push
push
int
add
arpl
push
add
xor
mov
pop
mov
daa
dec
idivl
and
fcomp
ret
arpl
dec
test
cmp
lods
aas
dec
mov
scas
testl
mov
cmp
fs
xlat
mov
xor
pop
incb
mov
xor
out
aas
lods
add
inc
jl
add
mov
inc
push
lea
in
lods
adc
add
test
and
outsl
add
rclb
sub
sub
aaa
int
jo
sub
and
sub
adc
fiadds
jae
aaa
sbb
inc
out
out
jecxz
pop
and
adc
inc
adc
mov
ret
pop
sar
or
lret
aam
cmp
aas
mov
pop
addl
cmpsl
and
xor
sub
dec
in
js
add
bound
pop
mov
loopne
loope
xchg
clc
pop
sbb
push
pop
mov
or
mov
rclb
cs
inc
lahf
sub
es
xor
jle
push
add
or
sbb
ret
int3
add
outsl
or
leave
cmp
sarb
pop
aas
jle
lahf
mov
mov
test
movups
ficompl
xchg
jo
add
sbb
pusha
fisubs
daa
push
xchg
dec
pusha
out
paddsw
ljmp
ljmp
lds
jnp
les
or
xchg
repnz
push
call
popf
xchg
rclb
add
insb
and
mov
xchg
cmp
cmp
out
lcall
adc
and
or
incl
sub
and
mov
add
scas
pop
xchg
test
dec
pushf
int
shlb
cltd
outsb
lock
xor
cwtl
adc
pop
push
loope
lret
push
add
sbb
mov
mov
dec
jl
inc
rclb
in
xchg
and
xorb
lea
test
aaa
sarb
mov
daa
adc
sbb
pop
add
and
mov
and
inc
jo
or
mov
les
sbb
mov
sub
pop
add
or
shll
repnz
add
sahf
ret
sub
cmpsb
fnstcw
imul
and
rcll
adc
out
pusha
mov
loop
inc
xor
imul
adc
and
ds
out
pusha
cmp
xchg
test
mov
nop
push
int3
push
push
jno
call
ficoms
mov
lods
je
push
lcall
pusha
or
sbb
into
push
rcrb
andb
xchg
adc
adc
pusha
xchg
cmp
das
jns
mov
daa
out
iret
enter
cltd
lods
adc
or
mov
leave
fwait
jp
fstpt
mov
lds
les
push
movsb
addb
push
mov
and
subl
cmp
bound
add
mov
xchg
pop
sbb
popa
cmpb
iret
xor
cmp
inc
nop
push
fs
add
jecxz
call
hlt
les
mov
in
in
aas
sti
xlat
sub
cmp
adc
xor
and
decb
test
and
inc
ljmp
mov
sbb
or
push
gs
movsb
pop
push
and
pop
rol
add
sbb
out
mov
loopne
movsb
mov
aaa
and
add
push
repz
pop
dec
mov
loope
daa
fiaddl
pop
mov
and
mov
cwtl
adc
imul
js
cld
add
push
and
movsb
arpl
loope
lods
pop
mov
test
les
mov
int
or
pop
mov
cmp
and
pop
loopne
fldl
sbbl
fnstenv
cwtl
inc
push
or
xchg
add
push
mov
push
fldenv
cltd
xor
ljmp
cmp
or
cld
push
test
loope
push
or
mov
in
xor
adc
in
mov
mov
mov
cmp
divl
adc
pop
dec
xor
push
movsl
shll
mov
pushf
and
out
mov
out
aam
int
lcall
outsl
pop
in
rclb
icebp
add
sbb
sbb
jns
mov
imul
int3
pop
and
popa
and
sub
cltd
std
test
mov
mov
dec
lods
pushf
or
inc
lcall
call
in
loop
cmpsl
mov
jb
xlat
or
aam
push
lahf
push
add
fscale
cmp
and
daa
test
add
ret
imul
mov
push
cld
dec
lea
pushf
paddsw
aam
rclb
cpuid
or
in
into
rcr
sub
jp
js
dec
cmp
add
movsl
pop
jo
xor
insl
cwtl
fmul
add
call
sub
adc
pop
add
clc
jo
sbb
mov
adc
pop
jge
bound
shl
pop
or
sub
sbb
adc
inc
adcb
pop
or
inc
sbb
xchg
cld
xor
dec
mov
int3
cli
bound
shl
add
mov
xchg
jnp
out
push
dec
add
adc
mov
dec
ret
rep
mov
cmp
movb
cmpsb
aad
aam
mov
inc
push
insb
fisubrl
push
jle
lcall
jg
add
inc
xchg
cmp
add
adc
xchg
inc
inc
in
pusha
mov
push
or
push
mov
loopne
mov
test
mov
dec
fcoml
inc
loope
lahf
adc
adc
dec
addb
mov
test
in
adc
and
mov
push
mov
gs
mov
es
xchg
or
mov
and
or
adc
and
mov
insb
push
xchg
jo
test
mov
les
pop
sarb
add
pop
test
pushf
outsl
xor
ret
jmp
andb
add
int3
mov
dec
xor
insb
add
rep
pop
test
sbb
adc
jmp
testl
xchg
in
shlb
and
or
lcall
mov
je
imul
roll
pop
loopne
push
adc
rolb
push
adcb
push
xor
add
addb
sbbl
dec
iret
xor
adcb
into
push
loopne
sbb
lret
test
mov
cmpsb
insb
mov
ss
cmpb
mov
push
lret
lods
enter
cwtl
cltd
ss
loopne
add
jns
ljmp
addr16
in
inc
sbbb
add
test
ret
aas
pusha
mov
pop
adc
mov
call
adc
subl
and
cmp
or
lds
xchg
jmp
pop
add
push
pop
inc
cwtl
sbb
xchg
xor
push
add
or
mov
into
outsb
and
mov
stc
sub
push
add
push
bswap
pop
push
shrl
push
test
rclb
add
add
shlb
sub
jae
les
cmpsb
push
mov
dec
out
ret
xchg
xor
fucomp
lds
dec
add
mov
add
sahf
nop
andb
loopne
xlat
cmp
jecxz
jns
xor
out
inc
cmp
in
dec
lahf
mov
jl
sbb
movsb
addb
cmp
and
push
inc
icebp
cltd
dec
in
add
pusha
add
pop
mov
fsub
ljmp
iret
inc
and
clc
pusha
add
inc
or
mov
sub
add
mov
sub
or
mov
mov
or
mov
aam
stos
dec
jo
mov
daa
movsl
or
imul
xor
add
add
nop
jb
ljmp
in
add
mov
es
jb
ja
cltd
pop
adc
mov
and
sub
cmc
call
fbstp
pop
pop
mov
add
or
pusha
mov
fisubrl
ret
and
and
rorl
sar
adc
into
enter
nop
inc
mov
shl
push
pop
dec
clc
xor
aas
ds
roll
clc
insl
cmp
lods
add
imul
mov
call
mov
inc
add
cs
add
int3
add
stos
addb
jo
sub
push
mov
inc
pop
popa
lahf
sub
cltd
jmp
dec
incb
mov
mov
mov
add
xchg
ds
and
xor
mov
je
sar
arpl
pop
adc
rolb
sbb
xor
adc
adc
cld
push
and
add
sbb
outsl
pop
gs
pmaxsw
cwtl
fs
sub
mov
add
adc
adc
test
outsb
dec
enter
test
or
andb
sub
mov
xchg
xchg
pop
adc
fldt
pusha
add
mov
addr16
add
mov
jecxz
ds
pusha
cld
push
mov
arpl
out
pop
mov
jo
dec
shlb
outsb
mov
jbe
loopne
in
ficoml
push
js
cmp
jl
xchg
icebp
js
dec
sbbb
fdivl
add
mov
in
or
fidivl
mov
test
les
fld
or
add
push
mov
int3
fldl
bound
xchg
cmp
fcom
mov
rolb
fiadds
add
push
or
add
or
mov
mov
cltd
pop
lahf
test
add
xor
std
and
xor
jmp
es
sub
xchg
or
test
arpl
mov
push
lock
shr
lea
xor
sarb
repnz
nop
xor
fcoms
lock
jo
sbb
jns
movsb
adc
adcl
and
jbe
in
push
adc
imul
enter
sub
push
sbb
stc
call
xor
rorl
icebp
hlt
xchg
sbb
mov
add
xor
adc
jno
mov
sbb
xchg
dec
cmpsb
mov
jge
or
push
out
sub
sbb
rcrl
pop
int3
add
in
into
bound
scas
xor
lds
roll
out
fisubrl
cmp
dec
mov
aas
mov
fcomps
in
push
cmp
test
mov
mov
cmc
sbb
jl
rcrl
sbbb
xchg
les
cld
and
out
mov
jg
fadd
rcll
fldl
das
sub
filds
jge
mov
adcb
mov
adc
clc
fs
jmp
mov
xchg
insl
setle
ror
inc
and
ljmp
fists
mov
shrl
int3
pop
and
out
mov
sarb
or
adc
push
push
gs
inc
push
outsl
js
dec
cmp
adc
mov
mov
out
add
daa
mov
dec
and
xchg
pop
sbb
sbb
nop
je
cmp
xchg
mov
push
cmpsl
xchg
add
sbb
iret
adc
fsub
dec
bound
inc
dec
jo
dec
xor
mov
loopne
xor
mov
lods
xchg
adc
adc
pop
xchg
jo
xor
adc
pop
xchg
adc
aaa
and
cmp
dec
cmp
pop
and
mov
xchg
lcall
add
insb
bound
in
popa
add
push
and
nop
stos
inc
test
aaa
pop
jmp
push
push
jecxz,pn
jno
test
cwtl
fstl
dec
xor
js
insl
les
sti
fistps
or
clc
cmpsb
pop
shl
enter
mov
sbb
imul
add
test
jae
jo
sti
adc
mov
int
out
or
bound
std
mov
mov
popl
sub
cmpsb
sbb
out
add
or
add
jo
pop
cmpsb
mov
enter
sub
hlt
outsl
movsl
xchg
test
cmp
stos
add
addr16
test
dec
std
adc
aad
in
adc
sbb
dec
pop
adc
xchg
inc
or
adc
xchg
or
shrl
xchg
jmp
inc
cmp
jge
and
loopne
lret
pop
nop
mov
in
inc
cmp
xor
add
arpl
loopne
inc
push
mov
pop
jae
iret
notb
push
or
push
or
lods
loop
xor
jnp
jo
sub
or
clc
aaa
pop
sbb
push
test
adc
or
sub
or
das
jo
push
inc
add
sub
pushf
sub
jo
test
xor
adc
adc
mov
hlt
repz
push
and
enter
inc
int
xor
fisubrs
addr16
or
mov
stc
add
mov
movups
dec
add
pop
cld
scas
mov
inc
add
dec
sar
xor
pushf
cwtl
pop
inc
dec
add
sbbb
jp
rorb
cmp
dec
in
ror
cmp
movsl
push
loopne
clc
mov
cmp
add
bound
push
sarl
int
and
mov
xor
mov
and
and
add
cmp
andb
xchg
fsubl
dec
into
int
shlb
push
sahf
mov
adc
subb
out
add
testl
inc
mov
push
mov
xchg
or
mov
in
add
cmp
xchg
add
jnp
hlt
add
mov
test
and
stos
or
in
enter
test
xchg
out
outsl
leave
je
and
in
or
push
lods
insb
in
rorl
and
sbb
cmpb
and
xchg
or
xor
push
sbb
popf
cltd
imul
sub
inc
dec
sbb
out
inc
nop
inc
fsubr
mov
add
sahf
pop
pop
ds
sub
aad
sarl
or
inc
mov
dec
cmpsl
and
lock
cmp
out
shll
add
insb
sub
xchg
push
addb
jo
jb
sub
xor
test
sbb
mov
pop
pop
fs
addl
sahf
daa
xor
add
sbb
jp
insl
add
jne
mov
sbb
loop
sub
add
cmp
mov
pop
cmpsb
es
add
test
or
ret
adc
mov
pop
aas
test
add
xor
inc
mov
cmp
aad
mov
test
add
aaa
xor
pushf
mov
ds
cmp
movsl
mov
jo
add
std
aas
cmpsl
pop
dec
add
outsl
fimull
mov
ds
inc
adc
subl
mov
les
fwait
shl
jbe
jae
adc
int3
sbb
mov
test
pop
and
or
inc
add
aaa
sub
jle
fisubl
jo
subb
mov
sbb
or
int
int3
or
out
cli
push
lds
fcomps
and
pop
mov
js
and
sub
mov
rorb
sbb
adc
out
lods
adc
adc
adc
sub
cmpsb
add
push
and
jne
pop
push
adc
hlt
sbb
xchg
jg
cmp
jmp
inc
jo
into
adc
pop
int3
in
jb
inc
and
push
xorb
out
cmp
ds
shlb
push
mov
pop
cmp
jmp
mov
and
lock
cmp
inc
popa
mov
add
dec
test
jp
xor
mov
aam
inc
pop
sbb
inc
add
loopne
into
jb
jne
inc
aaa
and
inc
inc
cmp
jns
mov
push
jmp
sarb
stc
push
adc
ljmp
inc
push
jb
xchg
xor
mov
mov
xchg
xorb
or
xchg
pmaddwd
or
adc
xchg
loope
call
pop
lock
add
sub
dec
clc
xchg
cmp
dec
loop
aam
inc
clc
subb
xchg
dec
and
arpl
xchg
add
lock
or
push
cld
repnz
xor
ss
mov
lods
lahf
rclb
filds
inc
add
mov
movsl
mov
jbe
or
sub
or
add
push
call
and
push
clc
gs
pop
cwtl
jno,pn
push
inc
shrl
adc
adc
scas
mov
pop
int3
pop
or
push
mov
or
fldcw
and
test
les
add
dec
stos
lods
sub
add
mov
je
add
cli
pop
imul
pop
push
das
jl
aad
je
mov
lahf
stos
mov
push
loopne
sub
sbb
mov
shrl
mov
aas
pop
insl
out
pop
xor
xor
xchg
into
cs
jnp
push
enter
or
jo
popa
and
and
outsl
ljmp
mov
inc
insb
fidivrl
lock
inc
and
or
adc
pop
push
and
add
dec
and
stc
or
fiaddl
dec
cmp
xchg
mov
cmp
int
mov
fsubl
mov
jb
sahf
aam
icebp
lock
subl
fmuls
pop
dec
vandps
fs
adc
fdiv
je
pop
add
testb
mov
xchg
xchg
pop
sub
or
push
mov
movsl
enter
mov
add
inc
mov
loopne
jae
mov
inc
push
rcr
pusha
add
ds
es
and
xor
mov
cmc
insl
andl
add
inc
push
pop
idivb
dec
add
into
sub
sub
add
fs
loopne
jmp
mov
xor
pop
daa
outsb
sub
ljmp
lods
insb
sbb
or
rclb
aas
sub
js
es
enter
outsl
fs
add
inc
ljmp
xor
mov
adc
and
push
inc
pop
ret
pop
sbb
cmp
ficomps
sbb
data16
inc
sbb
movsb
cmp
ret
or
push
inc
xor
shll
sbb
cli
cli
push
cmp
mov
iret
add
orl
adc
pop
add
adc
xchg
cmp
dec
das
clc
and
add
cs
outsb
mov
inc
mov
sbb
dec
ljmp
je
imul
pop
push
out
test
pop
and
ret
push
push
not
sbb
lcall
or
out
rorl
add
xchg
out
adc
push
jae
mov
mov
or
insb
fistps
subb
mull
push
pop
mov
or
mov
decl
lret
xchg
enter
pop
inc
dec
add
inc
cs
ss
mov
hlt
aad
psllq
or
daa
mov
inc
mov
push
xchg
push
push
cmp
and
push
dec
scas
and
push
test
shll
ds
add
dec
mov
popa
pop
push
ret
sbb
mov
or
mov
mov
and
je
cmpb
rorb
sub
cmp
or
jl
lahf
adc
sarb
mov
xchg
and
pop
js
loopne
mov
lock
jmp
std
add
xor
cwtl
add
nop
js
mov
mov
shlb
mov
push
add
add
mov
push
add
jns
sub
and
ja
imul
adc
and
ret
incb
jmp
cmpsb
mov
mov
insb
call
adc
and
es
lock
dec
and
and
aas
movsb
xchg
push
js
nop
es
shl
push
sarl
push
int
es
jecxz
mov
mov
jnp
mov
loopne
sbb
out
mov
loop
or
mov
add
into
in
cmc
mov
or
out
test
out
xor
fdivs
and
xchg
push
faddl
es
iret
mov
popa
dec
imul
mov
movb
dec
cli
xor
in
push
inc
addr16
shl
add
mov
outsb
daa
xlat
les
and
aas
jbe
std
inc
and
adc
dec
hlt
dec
das
imul
xor
mov
in
cmpb
mov
pop
sti
add
cmc
popa
adc
xorb
stc
int
inc
enter
jo
cmp
xchg
cwtl
jmp
inc
jp
jmp
cwtl
add
icebp
out
and
and
ljmp
lods
and
loope
cld
mov
or
add
mov
mov
push
call
adc
mov
pop
int3
lds
mov
or
ret
add
stos
pusha
mov
cmpsb
pop
repnz
imul
rolb
int
jecxz
out
xchg
push
jno
cmp
add
imul
aad
lcall
jo
dec
cmp
xchg
or
dec
pushf
jl
jl
pop
scas
sub
push
nop
jae
outsl
loopne
xchg
cmp
sub
add
outsb
jns
dec
xchg
xchg
mov
mov
xor
cmp
aas
shlb
mov
dec
call
inc
push
add
insb
js
loop
and
lahf
pop
add
fadds
xchg
mov
or
stos
push
dec
inc
add
jnp
mov
push
and
fs
pop
pop
outsl
insl
les
pop
int3
sub
add
inc
xchg
cwtl
dec
iret
lock
out
jle
ja
add
cli
clc
mov
mov
andl
xor
inc
movsb
cmp
mov
js
nop
aam
xchg
in
and
lods
ds
ljmp
mov
rolb
inc
lds
test
clc
imul
and
dec
clc
xchg
nop
and
imul
inc
cmp
cmp
fstpt
adc
call
mov
fldt
adc
adc
popf
pop
mov
jl
pusha
lret
xor
adcb
into
cmp
popa
std
push
mov
inc
mov
sub
ds
test
loope
and
addr16
rorb
push
mov
xchg
mov
fs
sub
and
les
in
pop
mov
movsb
mov
lods
andl
nop
pushf
mov
xor
cmp
hlt
jo
pop
mov
dec
inc
add
xor
mov
cmp
out
xor
int
mov
mov
dec
cmp
fs
clc
mov
test
icebp
xor
jb
add
push
enter
lock
push
rolb
xchg
or
call
andb
data16
ficomps
jmp
repnz
shll
sahf
test
mov
mov
stos
cwtl
dec
mov
and
mov
sbb
ds
push
loopne
sahf
addr16
sbb
scas
lock
pop
int3
mov
pop
testl
adc
xor
insb
out
bound
mov
adc
lcall
dec
mov
loope
adc
imul
push
sub
ljmp
lods
mov
cmp
add
bnd
jne
inc
mov
sbb
inc
mov
jns
ds
test
roll
bound
cmp
aam
adc
inc
and
dec
into
inc
fdivrs
cmp
pop
cmp
xchg
fcompp
xor
ljmp
sbb
add
pop
popf
adc
enter
ljmp
xor
fstl
xchg
pop
outsl
adc
mov
test
cmp
xchg
loopne
stos
fiadds
leave
imul
xor
cmc
inc
and
add
dec
mov
push
mov
sub
xor
inc
notl
xor
cmp
imull
add
mov
xor
inc
mov
in
mov
cmp
stc
add
outsl
iret
jg
mov
test
dec
sub
fisubrs
adcb
pusha
pop
into
xor
inc
push
clc
insb
enter
nop
fsubl
sbb
mov
dec
movsl
xor
adc
push
sub
cmp
and
lret
jl
xor
jb
scas
hlt
mov
xchg
cwtl
dec
fs
xlat
jo
mov
aaa
sbb
add
push
in
std
sti
aas
mov
push
addb
cs
and
cmp
int3
es
cmp
pop
add
mov
adc
dec
and
xchg
and
test
out
pop
test
pop
inc
in
dec
add
push
mov
out
int
mov
sbb
out
add
push
fisubrl
mov
push
ss
xor
lret
js
add
in
dec
inc
mov
sub
push
cmc
call
sub
sbb
out
ret
mov
filds
push
fcmove
sub
js
add
clc
dec
pop
push
mov
ret
jl
out
mov
or
ljmp
sub
addb
data16
xchg
push
rclb
in
gs
aaa
pusha
insb
mov
sarb
out
fldcw
in
sub
mov
cmp
add
xchg
and
andb
add
dec
sbb
out
add
cmp
pop
aad
rsm
lods
and
adc
push
loopne
pop
in
sbb
mov
test
aas
out
std
loopne
mov
pop
jo
mov
and
int
sbb
push
or
fcmovbe
jo
push
mov
icebp
lea
movsl
add
xchg
and
cmp
dec
jmp
and
xor
sub
or
lods
in
in
sahf
xor
dec
lret
ret
ficoms
mov
mov
adc
and
popa
ljmp
push
bound
jl
rclb
sar
mov
in
sub
clc
fisttps
nop
into
pop
in
ss
cmp
subb
pusha
pop
roll
iret
nop
xor
push
jnp
les
aad
aam
xchg
sbb
xchg
lret
jnp
push
and
imul
rcr
bound
movsb
inc
sbb
out
xor
xchg
popf
xor
cmp
clc
outsb
out
sarl
cmp
nop
imul
sbb
faddp
pop
cld
adc
xchg
fsubs
ds
sub
push
push
ss
push
addr16
das
nop
dec
testb
test
pop
xor
int3
pushf
test
jo
add
fwait
clc
nop
roll
push
bound
out
sub
pop
adc
add
sbb
push
imul
dec
xor
lock
inc
mov
rorb
enter
add
lods
test
mov
xor
fdiv
daa
out
bound
call
int3
pusha
push
lahf
adc
aas
adc
cmp
cwtl
aad
adc
lock
jno
adcb
lock
push
ds
test
and
rolb
add
pop
inc
sbb
ljmp
in
xchg
sbb
or
xchg
in
sbb
pusha
add
pop
jle
and
and
push
sbb
mov
push
sbb
add
loopne
out
aas
stos
cltd
dec
push
and
dec
outsl
and
jle
inc
loope
and
add
imul
mov
adc
mov
jne
lret
loopne
faddp
cld
mov
mov
andb
inc
mov
sbb
in
cmp
xchg
cmpsb
ss
pop
ficompl
add
addr16
pop
insb
xchg
jo
add
sub
cmp
cwtl
pop
inc
cwtl
adc
addr16
out
or
rclb
push
push
enter
inc
mov
pop
faddl
push
clc
cmp
insb
cmp
push
mov
pop
repnz
ficoms
sahf
in
dec
repz
adc
repnz
dec
icebp
je
mov
arpl
aaa
and
shll
sarb
mov
mov
adc
shll
int3
bound
add
add
rclb
shlb
sarl
or
xlat
or
and
mov
xor
daa
push
test
std
mov
adc
nop
mov
out
add
lock
clc
push
push
faddl
and
test
mov
out
mov
mov
xor
add
lcall
inc
xchg
loopne
scas
in
andb
sub
add
test
in
jno
xchg
outsl
test
test
xchg
mov
clc
jmp
sub
push
lods
outsl
add
dec
test
xor
insl
adc
push
jmp
mov
jmp
dec
pushf
lds
popa
push
rorb
mov
sbb
or
pop
add
data16
test
daa
enter
push
xchg
mov
mov
inc
stos
add
jl
ljmp
fadds
icebp
loop
repnz
sbb
push
insl
sbb
sbb
jns,pt
lods
subb
cmp
in
fildl
pop
mov
cld
movsb
add
mov
xchg
clc
cmpb
adc
sub
movmskps
inc
pop
rorl
xor
inc
cld
fadds
jns
test
push
sti
pop
mov
movsb
shll
cmp
push
mov
icebp
test
rorb
mov
fsts
jg
jnp
adc
in
push
movsl
adc
daa
sbb
call
adc
adc
int
cld
icebp
jb
mov
and
movsb
repnz
jnp
push
inc
inc
and
push
inc
cltd
insb
cmp
sbb
xor
mov
adc
gs
sti
or
add
rorb
or
fs
js
jl
mov
xchg
pop
add
cmp
lea
movsb
andb
sbb
test
mov
stc
ljmp
mov
outsl
inc
ja
dec
test
ret
and
subb
push
jge
lods
test
daa
lcall
xchg
pop
and
sbb
ret
jne
add
mov
andl
clc
dec
out
dec
adcb
jle
mov
loopne
int3
or
lods
push
sbb
jp
test
int3
daa
push
popl
cltd
add
adc
inc
gs
int3
jne
cmpsb
rcll
sbb
loop
inc
loopne
dec
pusha
cltd
repnz
loopne
enter
fs
xchg
fmuls
aam
pop
loop
ja
pusha
adc
add
xor
daa
or
mov
mov
push
cwtl
add
or
push
mov
and
adc
and
pop
daa
enter
and
data16
into
or
clc
aas
dec
jno
mov
pop
adc
les
xchg
pop
or
cld
shrb
popa
ret
je
ja
mov
cmp
mov
stos
mov
imul
and
sub
jbe,pt
pusha
pop
mov
adc
das
or
xor
adc
adc
and
mov
imul
adc
push
xorb
pushw
xchg
ret
dec
mov
cmpb
inc
imul
mov
mov
inc
pusha
and
mov
cli
in
sti
jl
mov
sub
mov
cmpsl
mov
pop
dec
int
lock
cmpsl
adc
cwtl
jl
clc
push
pushf
adc
int3
xchg
into
push
mov
ja
jge
inc
add
rolb
pushl
add
jmp
mov
movlps
daa
pop
dec
inc
clc
cmpsl
jecxz
js
add
sbb
gs
or
sub
jl
adc
and
sbb
pusha
push
aas
mov
sbb
pop
int3
or
sbbb
dec
sbb
negb
rorb
enter
sbbb
push
aam
ljmp
arpl
sbb
mov
add
or
and
add
cld
adc
cltd
adc
dec
and
loope
movsl
add
push
jge
fistps
jno
in
or
lods
or
add
mov
adc
mov
or
shll
mov
adc
sbb
mov
pop
jae
sbb
cwtl
popa
fadds
movsl
test
aas
xchg
mov
loop
or
stos
nop
pusha
rorb
cmp
adc
mov
data16
or
bound
popa
bnd
mov
cmp
test
stc
aaa
adc
and
sahf
les
lods
ss
hlt
sbb
or
and
jae
cwtl
and
or
jmp
cmp
call
adc
xor
stc
aam
mov
inc
ljmp
cld
or
adc
pop
hlt
fldl
jno
push
fsub
dec
add
mov
push
sbb
push
sti
nop
sbb
cwtl
imul
and
push
mov
lods
inc
xor
inc
popa
jb
mov
sti
sub
adc
sub
loopne
xchg
repnz
les
mov
or
xchg
sbbb
les
test
add
lea
out
mov
jne
sub
testl
in
sub
fcoml
mov
fisubs
leave
and
adc
ret
loop
and
les
dec
mov
cmp
and
xor
pop
lea
fcmovnb
or
cmpb
dec
shrl
xor
fmuls
int3
ret
stos
pop
push
xor
mov
int3
or
mov
cltd
pop
mov
add
xchg
rolb
mov
mov
or
sub
and
sub
aad
jae
in
push
or
jno
pop
pop
mov
sbb
cmpsb
pop
inc
rolb
data16
std
jecxz
xchg
arpl
xor
addl
ficoml
cmpb
sbb
out
jg
cvtpi2ps
int3
cs
movb
xchg
dec
test
notl
in
or
mov
jns
push
mov
mov
add
add
icebp
call
nop
push
movsl
and
hlt
sub
xchg
shll
mov
rorb
scas
cltd
repnz
push
mov
jo
inc
stos
les
and
mov
xsha256
cmpsb
roll
negl
bound
pushf
pop
pusha
nop
cmp
pusha
orb
adcb
pusha
jecxz
mov
jg
push
ds
add
xchg
inc
and
pusha
les
pop
xchg
sbb
jnp
jo
aaa
iret
sbb
xchg
rclb
cmp
lret
mov
xchg
inc
icebp
in
fdivrs
inc
mov
or
outsl
std
inc
mov
js
negl
sarl
rol
cmp
inc
cs
clc
or
lret
jne
inc
cmp
xor
add
mov
in
lods
jbe
lcall
rorl
scas
lahf
loope
inc
or
sbb
fwait
into
mov
and
mov
or
mov
push
scas
add
leave
ret
inc
xchg
dec
adc
out
adc
and
pop
push
inc
clc
cld
push
mov
inc
add
and
push
add
not
xchg
leave
mov
add
sbbl
mov
int3
decb
inc
dec
xchg
fcoml
push
add
insb
mov
popl
jle
dec
mov
push
pop
mov
mov
cmp
mov
pop
cld
add
shlb
sub
cmc
stos
adc
mov
or
cwtl
sbb
cltd
cmc
jbe
loopne
inc
pop
sbb
adcl
sbb
rcrb
add
or
inc
shrb
bound
adc
mov
adc
push
push
add
or
ret
aas
xchg
hlt
test
inc
sub
mov
dec
add
push
ja
orb
pop
in
cmc
cmovl
push
ja
add
repz
adc
mov
popf
loopne
push
ror
push
jns
cmp
or
pop
xorb
xchg
adc
sub
imul
addl
repz
inc
dec
loope
inc
or
xor
mov
leave
pop
pop
movsb
mov
mov
loopne
mov
mov
xor
icebp
push
movsb
out
inc
sbb
cmp
jle
int3
jns
mov
add
jl
test
cmp
cwtl
jo
cmp
ds
scas
mov
data16
adc
into
sbb
sarb
and
lock
dec
lea
adc
pusha
push
insb
push
add
mov
mov
dec
or
adc
fwait
jp
outsl
xor
inc
lods
imulb
cltd
sub
rol
push
pop
stos
imul
and
popl
push
adcb
xchg
sbb
cli
mov
push
add
std
cmp
jle
dec
addl
sbb
mov
rcl
mov
sub
dec
add
cltd
push
push
sti
mov
add
sbb
xor
cmp
int3
nop
loopne
inc
int3
addr16
xor
out
sbb
pushf
enter
sbb
in
and
dec
add
pop
and
test
or
jg
lods
jmp
andl
pusha
int
jl
push
aad
sbb
jmp
lret
cld
movb
out
pop
rcrl
cmpsb
dec
movsb
shr
stos
cmpl
in
ljmp
mov
addr16
ret
mov
dec
add
addr16
inc
sub
popa
pop
jl
lea
sub
adc
mov
xchg
dec
add
call
ss
inc
pop
out
fs
add
xchg
call
or
or
xchg
ds
pusha
inc
dec
adc
mov
clc
xor
and
scas
xchg
cmc
push
into
mov
subb
aad
repnz
and
sbb
push
dec
hlt
loopne
js
sub
adc
cmp
sbbl
nop
in
popf
and
sarb
scas
jo
sub
ret
dec
xorb
outsb
xchg
sub
pop
sub
add
test
movsb
enter
fwait
stc
pusha
pop
pop
add
xchg
les
or
dec
mov
into
pop
shl
sti
test
shrb
cs
pop
sbb
jns
sub
jnp
andb
cmp
pop
in
dec
push
test
mov
pusha
mov
pop
xchg
xchg
cmp
inc
ret
jo
imul
xchg
into
stos
hlt
jne
sbb
stc
pop
push
nop
mov
and
mov
xchg
out
pop
inc
cmp
and
inc
adc
and
inc
inc
fsubs
add
cld
test
call
imul
lods
hlt
rorb
sub
fs
push
xchg
adc
clc
lds
mov
movb
or
pusha
sub
bnd
lods
push
adc
outsb
dec
rolb
psllq
push
add
mov
and
movl
push
or
mov
mov
add
or
cwtl
push
lock
adc
test
ret
mov
dec
pusha
in
subb
loopne
test
inc
popf
orl
cmpsl
dec
or
add
adc
imul
jno
or
out
mov
push
inc
rclb
mov
lretw
add
jno
pop
xor
push
or
jl
add
sbb
dec
mov
mov
ds
sbb
jp
leave
fmul
mov
scas
lock
jge
and
out
lods
into
pusha
or
pop
dec
or
leave
insl
xchg
loop
pop
in
pop
adc
pop
mov
je
mov
mov
in
pusha
sbb
adc
mov
and
adc
add
js
xor
insl
mov
adc
adc
xor
js
cmc
in
pop
dec
pop
inc
enter
nop
adc
inc
imul
dec
sarb
sbbb
pusha
in
mov
out
adc
jne
les
sbb
inc
and
adc
xchg
test
insb
leave
adc
mov
shr
es
in
aaa
popf
clc
cmp
pcmpgtb
out
aaa
pop
out
aam
mov
and
gs
pop
icebp
adc
jmp
movl
mov
add
mov
in
adc
les
ds
sti
cmp
jno
mov
or
rolb
mov
sbb
adc
push
fsts
mov
inc
mov
add
bound
popa
mov
stos
sub
ret
in
addr16
inc
out
stos
push
call
pusha
adc
jmp
stc
daa
hlt
mov
sbb
aaa
and
jo
add
sbb
inc
lods
adc
jecxz
push
and
sbb
fcoms
pushf
jl
adc
addb
adc
mov
dec
icebp
sbb
std
and
cwtl
xor
rcrl
push
outsb
or
and
hlt
push
into
cltd
inc
cmpsl
adc
push
or
dec
sbbb
subl
pop
jnp
inc
daa
or
xlat
out
adc
dec
cmp
je
or
mov
sbb
mov
jge
pop
push
lret
les
out
or
mov
mov
and
inc
cmc
and
add
cmpsb
pop
pop
cmpsb
call
movb
cmpsl
mov
repz
dec
aaa
add
push
clc
test
mov
lcall
je
pop
sbb
lret
jae
push
and
faddl
dec
ss
sub
xchg
std
pusha
cld
insl
add
cmpsl
cwtl
jle
xchg
jl
mov
jne
cmovnp
and
shrb
sbb
or
mov
shrl
cltd
pop
std
xchg
cwtl
je
jg
sub
add
add
jp
into
nop
rorl
mov
push
andb
ret
imul
out
inc
jle
inc
pusha
pop
jno
pop
das
jecxz
stos
shll
mov
hlt
ss
jnp
and
popf
and
adc
or
adc
jno
pop
add
push
pop
cmp
in
fisttps
add
xchg
cmp
pop
dec
adc
fwait
push
loope
clc
push
push
dec
or
cmp
or
gs
lcall
bound
xchg
jl
ret
jecxz
inc
shll
sahf
popa
ds
sbb
pop
add
out
es
shlb
ffree
dec
pop
addr16
mov
adc
push
daa
aaa
fwait
xsha256
cmpsb
push
sbb
add
cmp
sub
pushf
and
add
or
stos
xchg
nop
imul
push
jno
pop
es
xchg
sub
jns
in
xor
mov
clc
sbb
and
ret
add
das
and
inc
adc
je
mov
in
sbb
adc
mov
call
xor
sahf
les
pop
add
or
adc
jmp
push
sbb
out
out
repz
cwtl
add
arpl
jp
clc
push
jg
sbb
dec
add
negb
mov
shl
les
mov
imul
stos
stc
test
push
cld
jae
xorb
sbb
cmp
fnstenv
add
enter
add
cli
inc
pusha
and
add
cmp
inc
sahf
fsubrl
jmp
sar
fs
cld
cs
fwait
push
adc
repnz
shl
add
je
add
mov
leave
mov
div
cwtl
cltd
pop
inc
xorb
push
or
lahf
and
out
call
push
loop
adc
jo
pop
bound
insl
sub
xorb
popl
std
mov
out
xor
rcrl
inc
in
add
or
add
mov
test
shll
xchg
adc
or
mov
add
ja
les
scas
cli
dec
add
and
out
sti
int
pop
add
dec
js
out
inc
inc
or
add
imul
gs
mov
insl
lret
insb
xchg
pop
cs
or
add
int
add
jae
lds
mov
in
mov
mov
push
mov
in
packsswb
roll
inc
jl
js
into
in
xchg
test
adc
test
add
dec
shlb
inc
jae
dec
in
xor
mov
lcall
fs
orl
cld
push
add
push
mov
pop
pusha
or
push
mov
iret
out
add
dec
lret
add
shlb
or
add
in
repz
add
nop
in
imulb
int3
sub
dec
call
pop
adc
pushf
and
adc
xor
call
scas
mov
data16
sti
cwtl
rorb
xchg
lret
adc
scas
mov
or
aad
mov
enter
adc
add
fiadds
mov
int
out
loope
xchg
rolb
lods
aam
xchg
adc
orl
out
inc
shll
mov
mov
shlb
adc
xor
int3
nop
shll
cmp
xlat
bound
sbb
bnd
les
push
sub
dec
cwtl
adc
test
nop
cmpsl
addr16
loopne
push
cltd
xor
enter
pop
testl
inc
lret
push
cmp
jmp
and
stos
xor
pop
lock
insb
in
mov
push
cltd
inc
pusha
js
rcr
dec
add
xor
mov
adc
adc
hlt
pop
cmpb
add
xchg
adc
sbb
push
push
pop
mov
push
adc
pop
cwtl
pop
orl
pop
lret
nop
cmp
add
mov
ja
addl
loop
in
sub
cmc
mov
sbb
add
out
cmp
jmp
xchg
int3
cmpb
pop
inc
or
test
adc
ss
pop
or
pop
sbb
sub
xor
nop
hlt
rorb
push
out
es
mov
add
mov
add
enter
add
xchg
cmp
lea
inc
mov
sbb
mov
and
aad
jp
sarb
ror
and
dec
xor
xchg
cmpb
cs
out
loop
leave
lock
adc
push
xor
mov
in
dec
sub
add
fildll
or
add
lods
inc
cmc
imul
in
add
popf
cmp
fs
dec
int
or
or
cwtl
rcll
in
nop
pop
sbb
sub
mov
cld
or
mov
adc
frstor
cmc
addb
enter
clc
mov
shlb
inc
cmp
sub
cmc
jp
mov
test
fsubs
leave
inc
push
and
add
cltd
sti
and
gs
xor
inc
mov
adc
inc
xor
sbb
sub
out
mov
mov
pop
inc
repnz
mov
daa
jl
inc
fs
sub
rorb
cs
mov
inc
mov
aam
in
add
outsl
cmpsl
test
and
xor
sti
out
std
inc
in
enter
add
cltd
fldt
cmp
sub
xor
loope
lods
js
and
repnz
sub
sbb
loope
icebp
inc
imul
ret
inc
xchg
nop
sbb
cmp
lret
push
push
insb
cmp
xchg
pushf
outsl
mov
inc
mov
push
jmp
outsb
stos
cs
pop
add
fcoms
jg
xor
cltd
clc
roll
lea
add
mov
xchg
xor
cmp
in
or
lock
mov
aaa
sub
dec
add
cli
lds
pop
repnz
or
cld
add
out
push
xchg
push
and
add
xor
adcb
nop
push
lahf
call
roll
jg
mov
add
xchg
fistl
adc
ja
add
popf
movd
cwtl
dec
adc
mov
loopne
movsl
inc
sbb
sbb
adc
add
adc
add
aam
test
sbb
in
jmp
nop
sbb
dec
decb
cmp
jb
cltd
xor
mov
clc
pop
sbb
xchg
and
stc
sbb
xchg
aam
mov
nop
cmpsl
sbb
and
psubsw
in
flds
out
int3
rcrb
cmp
adc
mov
fsub
or
dec
sbb
rolb
leave
and
or
or
rorb
xchg
add
inc
xchg
pusha
and
adc
lahf
jl
inc
mov
pop
iret
inc
nop
add
pop
cmpsl
push
sbb
test
pushf
mov
pop
les
adc
inc
paddsb
addl
xchg
dec
inc
ret
idivb
dec
push
les
movsb
push
adc
jmp
fnstsw
mov
orl
or
clc
insb
or
mov
inc
sub
pusha
clc
movsl
nop
sbb
sbb
cmpsb
xchg
xor
insb
clc
push
addr16
add
mov
addb
cmc
add
xchg
inc
sub
inc
mov
lds
mov
cltd
sbbb
adcb
add
jp
inc
mov
mov
add
push
data16
jo
cltd
dec
sub
xor
call
aam
push
inc
jae
pop
jo
add
pushf
js
mov
cmp
cs
cmp
sub
in
rcrb
insl
ds
repz
subb
cltd
pusha
lods
and
push
inc
hlt
adc
maskmovq
dec
or
add
xchg
loop
and
testb
fstpl
enter
push
fistl
adc
ds
rolb
mov
xor
sbb
fcomps
sub
or
mov
mov
std
push
dec
inc
jp
std
in
aas
xchg
push
cmp
add
sub
xchg
inc
inc
daa
mov
nop
pop
cltd
or
aam
adcl
pop
nop
fldcw
mov
in
mov
push
repz
add
mov
cs
adc
pop
mov
inc
pushl
and
push
pop
sarb
push
les
mov
loope
mov
les
dec
add
jge
add
jno
xlat
adc
cltd
sub
xchg
adc
lock
dec
add
mov
and
add
inc
mov
sub
cmp
adc
push
mov
xor
ret
xchg
sar
inc
mov
in
subb
sub
lock
sub
ret
dec
mov
ret
nop
sbb
lds
mov
pusha
out
jno
add
xor
popa
jae
clc
nop
mov
cmpsb
imul
gs
mov
mov
clc
mov
insb
adc
jmp
jge
out
loope
aad
mov
hlt
adc
jo
add
dec
push
add
int
or
sbb
push
or
dec
mov
loop
or
add
xor
push
cmpsb
lds
mov
lret
pop
push
jecxz
aas
xor
in
adc
dec
cmp
add
xor
fwait
cmp
out
sysret
sub
mov
or
cwtl
adc
adc
cli
add
xchg
lock
cmp
add
shlb
mov
jge
pop
cltd
sbb
pop
jmp
dec
or
xchg
jp
add
sub
jo
dec
pop
leave
lods
mov
add
jge
inc
jg
orb
cmp
lods
loop
push
insl
jg
or
popf
mov
push
jl
jne
sbb
popa
add
ret
fistpll
push
xor
xchg
sbb
inc
nop
xchg
pop
sub
add
out
mov
rcrb
mov
cmc
mov
ret
pop
adc
inc
test
call
dec
adc
jecxz
ljmp
enter
push
int
and
mov
or
dec
mov
jge
cwtl
aam
xchg
sbb
sbb
lods
sarl
das
and
movsb
fildll
mov
add
pusha
test
add
pop
pop
pop
or
pushf
pop
cmp
lahf
pop
add
insb
adc
pop
inc
movlps
xchg
xor
add
add
mov
in
out
push
xchg
xchg
clc
adc
out
mov
subb
inc
sub
sahf
cld
inc
dec
bound
and
pop
adc
lcall
bound
mov
and
je
adc
orl
clc
out
and
mov
insl
loop
pop
mov
out
or
and
test
push
std
inc
mov
and
sub
ljmp
adc
cmp
or
iret
pop
in
aas
mov
mov
sbb
sub
insb
lret
bound
push
int
lahf
daa
push
call
push
add
cmp
and
adc
sub
cmc
adcb
dec
repz
scas
hlt
fimuls
inc
testb
dec
and
cmp
add
movb
rclb
dec
adc
pop
xchg
fwait
add
test
jb
inc
scas
and
pusha
inc
inc
or
mov
mov
pop
outsl
mov
and
hlt
pusha
add
push
out
pop
adcb
loopne
es
xchg
aam
lock
sbb
cmp
in
sbb
loopne
xchg
cmp
scas
sub
cmpsl
addb
cmc
dec
adc
mov
xchg
adc
push
push
sbb
inc
pop
pop
scas
loopne,pt
mov
int3
rorb
js
pushf
test
sbb
xor
inc
push
mov
cmpsb
sbb
sbb
cmp
repnz
pop
dec
jmp
ljmp
loopne
add
dec
sarb
jne
sub
stc
iret
rolb
ja
add
cmpsb
xchg
testl
pushf
add
aam
mov
push
cmp
xor
out
inc
enter
out
ja
jl
cmp
clc
adc
or
and
call
inc
adc
push
in
dec
cwtl
push
movsb
repz
gs
mov
test
nop
xchg
and
add
scas
call
xchg
add
add
and
jmp
hlt
mov
mov
leave
sub
xchg
js
inc
iret
rcrl
lds
jne
pusha
xchg
push
outsb
into
adc
cmc
cwtl
mov
sbb
cwtl
addb
pusha
jo
lds
mov
outsb
popa
adc
loopne
sarl
addr16
sbb
pop
cmp
sbb
popa
call
mov
clc
push
stos
sar
stc
out
xor
or
mov
invd
lods
add
mulb
test
adc
addr16
aaa
pushf
ret
popa
inc
mov
loopne
mov
test
lea
repnz
adc
mov
or
and
push
aam
sub
stos
push
sbb
nop
bound
iret
add
mov
push
push
insb
popa
pop
popf
push
sub
sbb
leave
js
inc
out
lock
or
and
jbe
mov
add
inc
or
inc
addb
stc
jp
loop
lds
mov
out
and
ret
dec
lods
int3
add
and
int
dec
cmp
das
xor
sarb
out
lahf
adc
add
movsb
mov
and
adc
xorb
adc
adc
add
and
sbb
pop
sbbl
mov
sub
add
add
fsubrp
adc
cs
movsl
sub
add
dec
add
or
push
xchg
lds
addb
push
adc
adc
iret
rorb
and
jnp
icebp
sub
test
test
or
rolb
push
xchg
mov
xchg
icebp
mov
daa
scas
mov
and
mov
inc
mov
addl
pop
adc
mov
add
clc
imul
les
ror
cmp
and
jo
adc
sbb
and
sub
ret
mov
notb
or
mov
adcl
loopne
push
add
push
push
cltd
in
add
xchg
in
pop
dec
out
xor
outsl
add
movsb
sbb
sbb
nop
cmp
fs
in
rcll
cwtl
add
ficompl
add
jbe
sub
push
mov
fsubs
pop
repnz
mov
add
or
mov
add
test
nop
mov
call
and
lcall
hlt
jbe
sbb
cwtl
jns
lods
sahf
mov
or
inc
sbb
insl
repz
inc
jo
pushf
cld
enter
inc
push
add
or
nop
xchg
mov
sbb
add
mov
pop
rol
cwtl
sarl
add
pop
add
add
adc
jl
ja
pop
mov
test
aad
xchg
adc
movsb
pop
clc
jle
mov
cmp
leave
adc
dec
add
cld
out
xchg
or
icebp
out
sbb
sub
shlb
cwtl
xchg
in
rcrl
lret
cltd
mov
int3
data16
fs
push
in
xor
sub
xor
add
mov
pop
xchg
cmpb
std
movsl
sub
add
xchg
test
ss
cmp
addb
ret
inc
out
mov
pushl
bound
xchg
dec
enter
call
ret
lock
add
lds
bound
aam
cmp
mov
movsb
pop
stos
hlt
adc
hlt
pop
enter
andb
pop
lret
out
sbb
jb
lock
imul
jo
test
xor
ret
lret
push
adc
lock
or
adc
add
dec
or
mov
push
push
clc
sub
mov
subps
xor
stos
aas
addl
add
dec
or
xor
add
adc
scas
ljmp
arpl
push
test
add
mov
cs
xor
cmp
jnp
mov
outsb
jo
mov
add
hlt
rolb
xor
orb
ds
sub
popa
ret
inc
dec
mov
lcall
push
in
rcrl
and
cld
sub
add
jno
cmc
pop
inc
mov
mov
add
mov
cmp
daa
cwtl
dec
aam
add
call
push
repnz
or
adc
mov
cwtl
cmp
push
xchg
cmpl
fldt
in
xor
fisubl
pop
rorl
sbb
lods
and
mov
rol
aad
das
and
or
adc
rorb
sub
fsubs
movsb
or
mov
es
jne
addl
fnstenv
ljmp
xchg
and
xlat
sbb
add
cmc
push
jb
sarb
push
sbb
pop
js
aam
or
jbe
adc
and
and
inc
push
mov
and
imul
xlat
adcb
outsb
add
incl
int3
mov
push
movsb
and
pop
leave
sbb
jge
pop
sbb
xorl
add
das
fs
jae
xor
mov
fwait
cwtl
adc
addl
lcall
pusha
clc
mov
cmp
inc
jle
xchg
ret
or
fmull
add
mov
inc
fadd
pop
sbb
xchg
cmp
lret
das
aas
add
adc
lahf
cli
mov
psllw
sbb
and
mov
shll
cmp
andl
add
rcrl
lcall
rclb
xor
mov
pop
dec
into
sbb
orb
mov
repz
pusha
adc
add
pop
sbb
dec
call
es
pusha
sbb
push
fs
cltd
and
flds
call
cmc
xor
sub
add
sub
xor
push
xor
cmp
add
push
fcomps
mov
and
stc
adc
movups
fmull
test
adcl
js
sub
dec
xor
lock
cmpsb
or
push
dec
pop
test
sbb
xchg
xchg
push
pusha
inc
lea
or
jns
dec
test
sbb
adc
cmovb
ds
push
fs
leave
ljmp
sbb
sbb
xor
addb
xchg
add
inc
roll
cmp
xchg
sub
mov
sub
lar
int3
aam
addr16
ja
cmp
into
daa
and
mov
nopl
mov
popf
dec
inc
add
loope
in
movsl
orl
pusha
sbb
mov
sub
xchg
call
or
rorb
leave
rcrl
xor
adc
xlat
inc
aam
ss
xor
mov
push
push
sbb
xorb
adc
popl
jne
mov
gs
sti
inc
es
rclb
insb
shll
fsub
push
aas
pusha
arpl
pusha
nop
mov
or
cld
sbb
xchg
test
jno
jl
adc
adc
push
movl
push
in
pop
int3
or
jns
jle
jnp
ret
fidivl
add
inc
out
adc
mov
adc
rolb
or
negl
cmc
add
ficoms
aas
and
push
jns
das
mov
add
fcmovnu
xor
cmp
cmpsl
inc
dec
add
xchg
inc
or
fwait
mov
fdivr
aam
gs
cwtl
into
cli
mov
push
outsb
pop
sub
jg
mov
and
inc
out
insb
pop
inc
call
shlb
leave
shrl
add
mov
pop
les
sti
inc
jne
shll
les
outsl
mov
mov
rclb
xchg
add
lods
mov
sbb
fiaddl
hlt
addr16
cmp
mov
pop
dec
mov
or
mov
xor
mov
sbb
cwtl
shrb
push
adc
jb
or
adc
or
fnstcw
or
push
clc
loopne
insb
push
pop
lock
scas
xor
adc
pushf
into
sub
lods
adc
lock
pop
adc
sbbb
jle
adc
movsb
mov
je
xorb
xchg
cwtl
xor
in
lahf
hlt
mov
or
jl
xchg
adc
pop
push
push
adc
add
cwtl
inc
sbb
shlb
and
insl
mov
test
add
mov
mov
movsl
pop
xchg
jnp
mov
fsubs
adc
std
out
mov
push
jo
adc
add
mov
enter
hlt
pusha
adc
sbb
or
dec
lods
mov
xchg
cmp
inc
and
push
test
arpl
fwait
sbb
int
or
sbb
or
les
repnz
and
and
lds
lods
pop
les
addr16
cld
inc
repz
hlt
mov
aam
ja
out
push
add
xlat
dec
add
and
dec
mov
repnz
inc
adc
mov
and
sub
imul
roll
adc
push
mov
sbb
in
cmp
rorb
mov
xchg
test
pop
mov
sbb
push
in
sbb
jg
xor
aam
push
push
cli
jg
movsl
data16
add
mov
dec
mov
and
or
xor
std
jmp
mov
scas
sahf
pop
or
mov
add
les
test
xorl
lods
lds
sbb
or
and
pop
adc
in
mov
stc
cwtl
lock
cmovs
pop
shl
ret
and
dec
add
sub
push
adc
test
out
push
mov
push
shl
jns
sub
pushf
adc
arpl
sbbb
inc
cmpsb
xor
hlt
mov
shrb
and
scas
in
add
mov
clc
adc
adc
outsb
shrb
mov
add
ret
push
or
orl
test
inc
mov
mov
or
lods
push
xor
push
je
lret
mov
pop
dec
mov
clc
sbb
adcl
aaa
sub
jo
rclb
std
push
movsl
add
addb
cmp
cmp
mov
pop
mov
movsl
add
pop
pop
jp
inc
add
int3
xchg
mov
cmp
jle
test
mov
in
xchg
sbb
fcom
or
mov
dec
jo
mov
xor
pop
mov
dec
xchg
test
adc
aas
outsl
fwait
lcall
lds
cmp
mov
clc
pop
ja
and
popf
insl
rolb
add
mov
daa
mov
pop
push
push
mov
mov
subb
in
js
adcb
nop
sub
cwtl
lret
push
and
stos
add
mov
add
sub
nop
push
push
out
cmp
test
pop
cli
daa
mov
push
in
push
dec
dec
pusha
cmp
mov
xchg
fsubs
add
lds
xchg
or
dec
xchg
push
addb
test
lcall
rcl
add
xor
bound
sbb
test
sbb
insb
data16
add
sub
mov
nop
lds
sbb
out
sbb
sbb
movsl
imul
inc
pop
add
pushf
lahf
arpl
jecxz
adc
shrl
js
and
add
push
lds
add
dec
int3
or
add
jbe
in
mov
push
and
sbb
mov
pusha
cmp
mov
add
push
sbb
push
test
sbb
ss
adc
sub
or
cltd
movsb
cld
and
fsubp
bound
add
int3
popa
xchg
cmp
rolb
pop
movsl
pop
or
and
add
outsl
nop
inc
xchg
pop
pop
and
push
clc
fsubl
add
lds
mov
repnz
cwtl
and
sub
nop
add
ss
adc
fsubrs
pop
cs
test
shl
mull
add
mov
sbb
fs
or
mov
mov
pop
fadds
repz
insb
cmpsb
wbinvd
outsl
adc
inc
cltd
jl
and
xor
flds
push
push
cli
pop
inc
adc
sbb
mov
xchg
adc
adc
adc
and
add
pop
or
shrl
enter
fstpt
pop
xor
hlt
mov
lock
ret
xor
xor
xlat
mov
cwtl
push
or
push
pushl
pop
jae
ljmp
mov
sub
ret
mov
adc
in
push
das
in
jmp
fcompl
jecxz
pop
mov
jmp
mov
add
jle
or
pop
aas
pop
jmp
push
mov
mov
rcrl
icebp
js
add
add
xor
pop
jmp
push
push
int3
js
sbb
cld
mov
inc
adc
ret
out
adc
push
add
jmp
mov
push
mov
dec
mov
sub
and
insl
and
or
push
xor
push
popf
pop
popa
pop
mov
pop
stc
lahf
sbb
sbb
int3
jnp
lods
push
ljmp
and
sub
push
or
nop
or
rorb
jmp
cmp
sub
push
stos
mov
dec
or
adc
add
jmp
and
sub
jl
loopne
push
mov
cmp
or
into
adc
jo
test
out
xor
xor
shl
mov
mov
stc
push
sbbl
incb
jmp
mov
jmpw
shlb
mov
jnp
nop
mov
pop
xor
sbb
movl
inc
inc
dec
out
push
push
mov
add
mov
pop
mov
inc
sub
add
adc
push
clc
xor
add
push
add
inc
cmp
xor
bound
lods
stos
lret
cli
rorl
sub
adc
add
add
xor
sub
or
and
mov
fwait
loope
andb
icebp
jmp
sbbl
outsl
packssdw
dec
ret
adc
cld
dec
push
add
lcall
pop
add
pop
cmpl
jmp
jecxz
cmp
sahf
and
push
or
jmp
pop
jb
neg
mov
and
ret
mov
mov
add
push
mov
call
shl
jmp
sub
inc
cmp
jl
stc
js
sub
dec
cmpsb
mov
mov
imul
mov
or
add
int3
pop
addr16
add
pop
pushl
incl
pop
not
rclb
jae
jo
mov
and
les
enter
inc
add
inc
and
and
repnz
or
add
in
mov
nop
roll
mov
neg
lret
out
test
loop
dec
xor
push
add
not
cmpl
int3
jo
jbe
shlb
and
add
and
mov
dec
inc
mov
movsb
add
out
arpl
outsl
int
add
mov
cmpl
rolb
inc
jne
shl
repz
push
or
jmp
push
add
pusha
ja
shl
dec
sbb
sub
sub
push
lret
rorl
out
and
pop
pop
popa
jmp
clc
std
lcall
repz
push
push
rcrl
popa
loop
and
pop
add
adc
or
fimull
sub
lcall
fiaddl
mov
subl
jmp
daa
cmp
add
sbb
rcrl
jmp
jae
in
lds
jle
lods
pop
jp
pop
mov
orl
sub
dec
cmp
shlb
xchg
sub
jp
ficomps
and
and
lock
cmc
sub
inc
dec
add
fcomps
push
int
and
jb
inc
push
dec
nop
jmp
pop
scas
cmpsb
and
lods
pop
xor
push
leave
xor
loope
pusha
arpl
int3
cmp
add
pop
out
mov
push
mov
pop
push
lds
lret
push
hlt
loopne
add
or
xor
xchg
push
fadds
dec
xor
adc
sub
adc
adc
jmp
adc
or
pop
or
dec
mov
into
push
in
xchg
xor
mov
add
push
dec
push
or
mov
ret
or
or
or
rcr
add
fdiv
mov
into
dec
fnstcw
pop
mov
rclb
pop
sub
add
push
daa
sbb
in
and
or
push
mov
push
sub
sbb
inc
add
add
jecxz
jmp
and
ss
in
dec
jle
and
push
push
pop
add
xchg
pop
add
and
ret
lock
xor
outsl
dec
mov
test
and
cli
cmc
and
es
xor
es
rolb
pop
iret
xchg
orl
icebp
ficoms
pop
pop
mov
push
or
jmp
mov
or
adc
or
mov
dec
mov
pop
or
arpl
shrb
jmp
adc
push
adc
adc
dec
dec
dec
or
add
popf
shll
inc
sbb
sbb
test
pop
loope
fs
jns
inc
push
rcr
adc
jmp
pop
dec
add
push
push
xor
pop
sub
enter
jle
scas
adc
dec
rcrl
adc
xor
adcb
add
inc
dec
push
dec
dec
push
outsb
or
jnp
sub
subl
jmp
pop
xorb
and
xor
test
adc
xchg
inc
xchg
out
adc
xor
adc
popf
rcrb
pop
add
push
pusha
jnp
das
rcll
mov
adc
out
push
ret
mov
movb
cmp
pop
jecxz
mov
imul
jb
sub
xchg
ljmp
mov
xor
adc
daa
xchg
add
jb
sbb
push
mov
ss
jge
jae
push
mov
push
jne
sub
adc
adc
stc
add
das
popa
les
push
inc
iret
dec
hlt
addl
sbb
inc
pop
push
add
fnstcw
dec
rolb
push
jmp
ljmp
mov
xchg
add
adc
jmp
mov
pop
mov
cmpsb
jle
int
lcall
push
push
pop
mov
jl
or
pusha
xchg
es
rolb
int
xor
fisubrl
bound
inc
jbe
cmp
sbb
adc
jmp
pop
mov
sub
cwtl
and
out
sub
pusha
jne
pop
cmp
insl
int3
outsl
pusha
adc
and
loopne
sbb
sbb
sbb
sub
ficoml
jmp
sub
inc
adc
push
mov
out
shll
sub
rcrb
sbb
mov
cmp
jmp
std
pop
push
negl
out
dec
pop
aad
cmpsb
lock
fdivr
xor
out
xor
xchg
push
mov
lret
rclb
cmp
shr
push
sahf
jl
xchg
sub
test
test
mov
push
pop
mov
sbb
ret
and
push
xor
mov
add
add
mov
pop
add
push
xor
movsl
cmp
push
mov
or
shrl
or
imul
or
pop
nop
sub
xchg
sub
push
mov
cmp
pop
loop
orb
movsb
addr16
pushf
cmp
inc
leave
sbbl
adc
and
dec
out
clc
sub
pop
cmc
rcll
hlt
adc
add
cltd
fsubrs
pop
add
sbb
pop
jno
pusha
mov
stos
repnz
hlt
xor
and
pusha
pop
adc
mov
push
or
push
test
mov
sub
jne,pn
fistpl
orb
xchg
xor
orb
and
or
iret
test
jge
out
inc
xor
cmp
shr
dec
push
test
inc
xor
or
rcll
in
mov
repnz
push
inc
push
xor
and
call
mov
mov
ds
pop
xor
rcrb
pop
pop
or
fisttpl
test
add
dec
push
lcall
jnp
into
or
xchg
mov
pop
mov
aaa
jecxz
push
inc
sbbb
dec
nop
and
or
sti
cmp
jg
mov
test
xor
add
mov
add
mov
int3
out
neg
mov
lds
jmp
xlat
cmp
popf
dec
in
rcr
xchg
int
ja
popf
xchg
mov
xchg
out
lret
add
add
leave
icebp
pop
stos
dec
inc
loop
cmpsb
push
dec
mov
dec
leave
dec
add
xor
push
xor
jne
je
add
rorl
loopne
int3
call
xor
or
rclb
jle
ja
add
xchg
jnp
stc
jmp
or
add
dec
mov
stos
add
pop
sub
inc
or
dec
inc
fimull
insb
imul
and
lock
add
mov
flds
shr
cmp
ret
mov
push
fisubl
mov
sbb
adc
icebp
xor
fsubl
push
jbe
inc
fcoms
arpl
and
pusha
dec
cmpsb
psubsw
sbb
push
mov
cmp
pop
lahf
sub
sbb
add
and
and
test
add
movb
arpl
sbb
mov
inc
add
inc
movsb
cmp
in
xchg
out
shlb
add
pop
push
andb
push
rolb
aaa
arpl
repnz
lret
pop
sbb
cmp
push
push
pop
leave
lods
lret
sbb
not
fwait
add
inc
push
pop
fsts
test
dec
xor
leave
jl
inc
pop
sub
bndldx
rorb
jp
sub
cmc
sub
and
out
mov
imul
andl
push
adc
cmpb
push
cltd
lret
or
sahf
push
push
clc
out
add
inc
push
repnz
fidivs
gs
adc
push
and
mov
or
mov
add
dec
orb
push
xor
pop
add
adc
or
js
xor
ffreep
es
push
bound
and
imul
dec
or
js
es
mov
xor
pop
cs
add
pop
dec
loop
cwtl
jnp
mov
mov
shr
pop
js
jp
mov
jge
adc
insb
movsb
or
pop
movsl
mov
cltd
cmp
mov
imul
icebp
mov
ss
addb
add
cmovnp
dec
insb
add
xor
or
lret
xor
mov
ss
mov
nop
mov
xchg
push
outsb
cmpsl
or
xor
and
mov
fidivl
or
inc
mov
inc
cmp
and
cmc
inc
jmp
push
test
cmpb
xchg
test
or
inc
neg
xorb
dec
mov
ljmp
xchg
cmp
cmpsl
mov
adc
lods
test
enter
mov
or
xlat
adc
sub
inc
lahf
pop
movsl
sbb
or
sbb
out
pop
fs
rcrl
inc
adc
sbbb
and
roll
sbb
cs
test
push
adcb
ret
lods
insb
jmp
outsl
add
or
or
or
outsb
lock
test
je
or
sub
sahf
aas
lods
testb
jbe
sub
inc
lret
mov
add
and
or
repz
test
out
pop
push
push
pop
cwtl
ret
hlt
movsb
sub
or
pop
sub
es
not
dec
push
enter
pop
in
add
add
push
repnz
adc
sbb
or
mov
add
notb
fists
or
dec
loop
pop
lods
or
jge
cltd
inc
pop
pop
adc
push
fnstenv
test
sbb
sbb
cmp
xchg
hlt
sbb
inc
jne
ss
push
arpl
rolb
push
pushf
jmp
mov
sub
and
loope
add
inc
out
aaa
sub
imul
inc
or
push
ja
push
pop
mov
addb
or
repz
or
pop
pusha
cmpsb
cmpsl
or
out
push
xor
push
push
push
push
sub
mov
repz
lock
add
clc
pusha
xchg
and
pop
mov
cltd
imul
or
sbb
mov
sub
movsb
filds
mov
inc
or
or
pop
add
loopne
inc
jno
dec
lcall
mov
inc
fmull
mov
mov
pop
iret
lea
xchg
ss
cmp
std
rcll
add
jns
dec
rcr
inc
loop
mov
push
sysenter
cmp
lret
stos
or
push
rorb
sbb
dec
add
push
jae
sub
int3
inc
sbb
sub
sbb
sub
aad
movsb
xchg
add
ja
shll
mov
xor
pop
push
jle
jmp
adc
jno
pop
pusha
aaa
cli
int3
aam
mov
add
out
popf
repnz
testb
pop
adc
and
andl
fadd
add
pop
sub
cwtl
pop
dec
add
lret
push
int
add
and
out
sub
pop
push
jb
ret
cmp
mull
shrb
jmp
in
cmp
lahf
mov
js
test
test
sub
mov
or
ds
or
pushf
clc
jb
loopne
mov
fs
add
cmp
imul
imul
flds
or
mov
push
xchg
or
jb
jo
add
jp
jne
jns
pop
jl
ret
or
jmp
push
inc
adc
add
fcoms
stc
pop
fadds
pop
cmp
fbld
inc
mov
jo
stc
not
mov
pop
mov
das
adc
mov
cmp
jecxz
ret
sub
ss
or
add
rcrl
lock
adc
ret
pop
and
jb
push
lock
xchg
sub
push
mov
data16
pop
sbb
or
dec
insl
popw
add
pop
stos
push
lock
xor
ja
add
filds
push
shll
add
mov
sub
nop
mov
ret
jecxz
nop
mov
xor
mov
add
movsl
or
add
loop
dec
and
jge
sbb
and
jp
data16
jl
jbe
push
inc
push
addr16
fidivs
sbb
dec
js
movsb
mov
enter
or
push
idivl
mov
jno
ljmp
pop
xchg
enter
xchg
cmc
roll
push
imul
enter
sbb
pop
call
push
imul
mov
jmp
push
xor
push
mov
mov
hlt
out
push
xor
iret
xor
rcrl
push
imul
sbb
dec
sub
int
scas
cmp
pusha
inc
mov
psrlq
sub
hlt
sbb
daa
inc
stos
cmp
add
cli
or
and
sbb
cmp
rorb
push
rorl
lahf
fmulp
out
test
pop
fsubr
movsl
or
icebp
jmp
pop
xor
xchg
pop
push
sbb
mov
fsub
mov
inc
pushl
sub
add
add
mov
sub
and
inc
jp
sbb
cmp
push
cmp
and
add
mov
roll
dec
jbe
mov
dec
orb
and
adc
add
push
pop
rcr
imul
push
mov
shr
aam
add
cmp
xor
add
dec
pop
add
lods
subb
add
push
jecxz
add
add
leave
je
mov
push
pop
imulb
push
cmp
xor
es
push
xorl
pop
cltd
pop
jge
xor
movsb
and
ljmp
aas
pop
push
sbb
jecxz
bound
push
push
pop
cwtl
iret
xor
jo
sbb
add
sbb
pop
movsb
test
std
pop
xor
lds
out
jp
jne
in
out
shlb
xchg
int3
addb
fcomps
inc
sub
push
cmp
inc
push
mov
push
mov
add
ret
pop
and
cwtl
repz
repz
adc
andb
and
clc
ficoml
add
sbb
orb
dec
inc
jecxz
enter
repnz
pop
cmc
pop
cmp
ficompl
into
test
push
mov
loope
shrb
jne
and
or
mov
jbe
outsb
pop
pop
lahf
xorb
sub
xor
inc
pop
dec
xchg
push
xchg
in
or
pop
jg
cmp
xor
pop
add
mov
adc
or
insb
andl
sbb
sub
insl
jmp
mov
and
lret
pop
sub
rcrl
stc
mov
das
loopne
adc
pop
or
clc
cmp
nop
lds
pop
xchg
mov
in
or
jmp
int
jl
jb
mov
or
mov
dec
dec
faddl
or
fsub
stc
add
mov
mov
cmpsl
jnp
test
add
test
test
stos
cmp
js
adc
ss
mov
in
enter
pop
push
lock
push
xor
or
stos
loopne
xor
js
xor
push
xchg
roll
mov
loopne
and
fs
add
jl
rcr
sub
xor
or
dec
add
pop
mov
mov
inc
fnstcw
mov
cli
out
clc
repz
insl
xor
fdivrs
icebp
xchg
sub
movsl
and
mov
loop
mov
aas
jmp
pop
adc
insl
dec
dec
jno
sbb
pop
ret
push
leave
fldenv
subb
stc
je
and
test
cmp
or
std
dec
and
push
ret
cld
fldpi
stos
add
inc
into
imulb
nop
and
fistpll
add
xor
push
push
jo
outsb
or
jmp
ret
fld
sbb
jmp
mov
mov
or
adc
icebp
inc
jmp
push
dec
pop
jg
hlt
neg
add
cld
orl
jbe
push
inc
dec
inc
or
je
cmpb
ss
fwait
js
andb
into
xchg
enter
scas
data16
add
sub
sbb
movsl
icebp
adc
add
pop
xchg
add
cld
sbb
jmp
xchg
mov
jecxz
outsl
xchg
test
jge
ret
inc
inc
out
or
adc
push
addr16
pop
sahf
ficoms
cli
nop
int3
xor
mov
or
rcr
dec
dec
and
sub
daa
aas
or
push
lock
or
mov
out
imul
les
test
xor
sahf
mov
pop
add
mov
mov
mov
add
and
mov
popf
xchg
add
jmp
inc
nop
and
cmpl
jbe
inc
shr
fidivs
sub
sti
in
loopne
mov
dec
daa
sbb
adc
int3
jge
mov
out
push
push
xor
mov
fists
mov
adc
stos
jmp
and
pop
sbb
outsl
sub
mov
pop
pop
pop
mov
shll
sub
ret
imul
adc
int
cld
cmc
dec
xor
out
jmp
mov
ds
das
sbb
in
dec
add
mov
stc
add
jmp
dec
movl
or
jae
imul
ljmp
push
stos
or
push
not
in
mov
mov
loop
add
dec
shll
add
adc
or
ja
pop
dec
cmpl
test
hlt
sbb
pusha
mov
ret
iret
jo
leave
mov
dec
pop
dec
or
test
push
push
scas
add
dec
repnz
je
mov
leave
mov
adc
xor
cwtl
mov
dec
into
cmp
lret
cmc
pop
mov
add
cli
clc
les
jle
hlt
add
or
in
adcb
mov
jo
dec
cmp
jge
test
ds
pop
mov
push
push
inc
jl
push
dec
inc
jno
jmp
lret
leave
pop
add
js
jp
jmp
jae
lods
lret
add
in
addr16
out
jmp
mov
dec
push
pop
shr
inc
push
mov
sub
pop
mov
xchg
pop
in
movsl
shlb
xor
mov
pop
mov
pop
push
and
push
inc
xchg
rcrb
jle
pusha
cmc
mov
sub
jg
add
fbstp
and
sub
lds
jge
mov
pop
stos
fstpl
popa
pop
add
sbb
add
sbb
addl
xchg
inc
pop
cmp
mov
jns
pusha
cld
std
adc
or
fimull
jg
jecxz
out
scas
or
pop
outsb
xor
mov
inc
add
ss
pop
inc
cltd
jmp
pop
push
push
flds
push
testb
and
push
shlb
out
pop
jmp
xchg
sarl
mov
inc
xchg
jecxz
mov
adc
inc
sarb
not
or
and
out
dec
ret
inc
sub
jg
stos
daa
clc
hlt
shr
cmpsl
jmp
mov
fsubl
inc
dec
jbe
lock
or
sbb
adc
sub
jmp
subl
pop
push
cwtl
cltd
pop
into
les
inc
rol
sub
mov
and
cltd
jo
orb
push
pop
mov
shl
sub
addr16
or
je
mov
and
test
sub
sub
cmc
jmp
inc
lret
xchg
sub
xlat
pushf
aad
add
or
repz
cwtl
in
push
xorb
out
hlt
aaa
add
jp
iret
lret
imul
xchg
mov
jno
inc
dec
jg
xchg
cld
in
add
push
or
movb
cwtl
cmp
jp
inc
jnp
mov
pop
and
in
add
add
lahf
fadds
mov
adcb
enter
aaa
and
sub
mov
add
cmpsl
xor
mov
sbb
cmp
orb
sub
dec
mov
add
popa
scas
adc
or
push
inc
add
push
and
push
push
xchg
push
movsb
imull
or
jnp
mov
or
andl
sete
test
push
adcl
mov
xchg
push
jae
out
mov
cltd
and
push
xchg
add
push
sbb
aad
stc
cmpsb
dec
sbb
jns
xchg
or
loopne
jne
out
push
pop
pusha
push
lods
addr16
scas
data16
das
mov
aam
andl
subb
sarl
add
pop
push
dec
add
cmp
add
fcom
call
cmc
add
test
ret
add
jmp
mov
rcrl
loope
inc
or
test
pop
bound
xor
icebp
add
pop
and
out
xchg
and
push
add
xor
fcoml
pop
adc
and
mov
push
in
adc
mov
xor
adc
fsubrs
ljmp
xor
or
push
stos
enter
lret
inc
add
jmp
ljmp
mov
dec
pop
cmp
or
cmc
cmp
dec
push
loop
ficomps
pop
aam
es
jp
jbe
add
icebp
jge
fnstcw
xor
int
mov
push
sbb
xchg
inc
test
or
sub
dec
sub
add
imul
mov
mov
sbb
and
pop
or
psrld
sbb
jnp
frstor
notrack
cmp
mov
cmpsl
sbb
addb
cmp
adc
repnz
adc
movsb
pushf
imul
xchg
jb
jns
dec
data16
push
and
xchg
mov
fmuls
jmp
xchg
sbb
or
or
leave
mov
stc
sbb
sbb
not
shll
call
imul
ljmp
push
inc
loopne
insb
stos
add
inc
not
shl
jmp
pop
mov
push
mov
pop
inc
add
nop
xor
pop
cld
out
jmp
in
push
mov
leave
repz
mov
sub
xchg
adc
or
adc
dec
add
cld
jno
test
push
in
mov
add
sub
pop
mov
dec
pop
test
and
push
push
jmp
mov
das
sub
and
cmp
cwtl
lret
lret
int
inc
int3
inc
mov
loopne
adc
xor
lock
pop
add
ret
xor
pop
neg
add
loopne
sub
repnz
add
mov
add
adc
inc
xor
fs
rcrl
cmpsl
mov
push
das
rcll
faddp
xchg
and
add
fsub
sbb
sbb
stc
add
cmc
je
pop
std
jo
sbb
cld
pop
pop
lods
aas
push
inc
rolb
jmp
and
addr16
mov
sbbl
push
jns
push
or
xchg
adc
ja
xor
jmp
mov
or
comiss
add
sub
add
lock
xor
or
dec
in
xchg
inc
mov
xor
mov
sub
inc
sbb
shlb
test
ficomps
push
ja
jns
lcall
sub
or
pusha
pushf
pop
je
sbbb
jnp
out
push
cwtl
mov
push
out
mov
sub
neg
inc
ret
or
mov
call
adc
mov
lock
jae
mov
adc
shl
jle
into
xchg
push
add
cmp
js
xchg
xor
xlat
gs
mov
xor
xchg
je
dec
dec
pop
int
and
or
in
and
or
pop
mov
pop
mov
pop
adc
imul
add
sub
loopne
add
mov
add
fcompl
loope
roll
pop
pop
popa
jmp
push
mov
sub
push
mov
fwait
mov
pop
das
inc
inc
dec
lods
inc
xlat
or
sbb
jmp
xchg
sbb
push
outsb
sub
mov
xorb
cwtl
cmpsl
sub
mov
jnp
mov
out
or
push
nop
adc
gs
lret
ss
insl
dec
add
inc
mov
sbb
sarb
pop
mov
push
mov
test
sahf
adc
daa
gs
adc
shrb
mov
pop
call
data16
pop
cmp
fldcw
jbe
mov
stos
frstor
mov
pop
sub
popa
imul
inc
pop
or
fidivs
cwtl
mov
pusha
jmp
nop
out
test
dec
adc
leave
push
out
jmp
jb
outsl
pop
xchg
cmp
jae
xchg
out
mov
sub
repz
push
pusha
scas
in
or
mov
shl
adc
lock
rorl
in
pusha
decl
xor
pusha
cmc
xchg
pop
cld
and
push
mov
dec
into
add
jo
aaa
xor
out
jno
adc
pop
sub
les
mov
add
push
push
mov
or
in
pop
cwtl
lret
or
jmp
xchg
push
test
pop
std
jmp
sub
push
addr16
jns
ret
loop
jmp
pop
push
push
shr
imul
dec
add
push
sub
sub
inc
mov
mov
inc
jge
inc
mov
adc
and
mov
sbb
or
cmp
mov
xor
sbbb
push
inc
cmp
adc
mov
aaa
jns
out
sub
mov
pop
gs
mov
sbb
ret
sub
fcomps
int
jo
adc
jae
fs
sub
pop
test
stos
divb
dec
imul
lret
adc
scas
inc
scas
sub
mov
sub
daa
dec
mov
enter
pop
call
test
lcall
pop
fmuls
pop
hlt
fadds
push
sbb
sbb
iret
das
add
add
sub
dec
pop
leave
fwait
ja
add
jmp
js
xchg
push
cltd
cmc
pop
inc
cmp
sbb
inc
ret
out
pop
xchg
pop
popf
ret
enter
jmp
sbb
call
mov
adc
les
push
orb
sbb
inc
push
push
je
adc
nop
insl
or
imul
mov
inc
add
popa
add
adc
add
test
sub
cli
test
xor
pop
or
movsb
call
add
iret
add
push
push
jmp
mov
mov
push
mov
inc
adc
push
jae
or
shl
push
add
add
mov
dec
neg
xchg
mov
add
pop
js
xor
movsb
pop
movsl
inc
xor
loope
mov
push
push
lds
or
push
push
mov
add
add
xor
push
neg
inc
add
popa
mov
xorl
dec
into
inc
mov
adc
cmp
fstps
jmp
js
sbbl
add
pop
aas
adc
addl
inc
push
push
shlb
cmp
pop
sub
mov
cmpsl
mov
cmpsb
movsl
sbb
mov
aaa
add
add
mov
scas
jae
or
not
mov
lock
dec
jmp
ret
push
fisttpll
xor
push
xlat
add
xor
lock
jp
xor
stc
xor
out
and
xor
jbe
loope
pop
mov
fsub
or
sarb
jae
jecxz
jecxz
movsb
fimull
mov
mov
std
push
pop
iret
xchg
and
add
mov
push
pop
pop
jg
leave
fmuls
cmpsb
mov
push
sbb
jno
jmp
fnstcw
sbb
adc
or
pop
jp
and
add
mov
stc
or
dec
jae
inc
dec
push
jae
inc
enter
jle
xchg
push
outsl
push
test
and
adc
sub
jle
xor
popf
dec
and
shll
daa
jp
and
xor
push
outsb
add
xchg
pop
jl
adc
sub
mov
jmp
mov
push
lods
mov
pop
adc
mov
in
movsb
es
pop
pop
scas
dec
test
and
mov
pop
shr
inc
in
xor
out
dec
fmull
push
sub
sbb
movsb
mov
nop
mov
mov
sub
rcrl
mov
ds
cmpsl
jle
adc
and
add
push
push
repz
or
xor
mov
push
add
and
inc
sahf
xor
fsubrs
jmp
lret
negb
and
out
cld
aas
sub
push
add
add
sbb
rcrb
push
adc
jae
insb
popa
shrb
and
jmp
adc
add
and
pop
repz
xchg
jno
rcrb
xor
adc
dec
and
inc
or
sub
rcr
movsl
mov
leave
jmp
or
sub
pop
sub
push
test
xchg
add
push
jmp
in
pop
in
push
push
mov
and
pop
loopne
jmp
int
push
jp
adc
neg
add
mov
loop
inc
xor
xchg
int3
in
pop
pop
sub
adc
or
push
adc
dec
test
andl
xor
int3
push
xchg
pop
testl
add
inc
mov
cli
jmp
add
pusha
addr16
mov
adc
rclb
cmpsl
adc
or
mov
dec
pop
rdtsc
pop
xchg
ficompl
xor
or
test
mov
mov
fs
lret
inc
or
and
movsb
dec
insb
dec
pop
push
push
rorb
mov
nop
mov
push
in
inc
mov
shr
sub
sub
mov
test
or
and
inc
inc
je
push
or
pop
or
cmpb
ljmp
rcll
cmp
add
push
hlt
sbbb
lahf
sbb
dec
and
pop
mov
lea
jbe
add
inc
sbb
and
inc
xlat
mov
pop
in
xor
mov
add
dec
clc
sub
push
flds
jmp
mov
popa
out
test
out
neg
roll
push
mov
sbb
or
mov
sub
adc
add
cmpsb
and
test
stos
sub
jmp
les
adc
cmpsl
inc
dec
add
imul
or
add
ret
push
rorl
loop
adc
pop
mov
ds
pop
jae
cmp
dec
pinsrw
stos
in
imul
in
pop
add
push
jmp
mov
testb
inc
xchg
in
mov
jecxz
fcmovnb
add
ret
in
lds
nop
test
rcrl
test
fnstsw
or
pop
ss
inc
ret
inc
push
arpl
hlt
mov
out
inc
add
hlt
das
add
xchg
adc
test
or
pop
pop
add
scas
clc
and
test
movsb
and
push
movsb
stos
ds
loop
lods
imul
mov
and
adc
sar
xchg
ret
jmp
and
mov
jge
sahf
stos
iret
mov
push
shrb
addl
add
jl
adc
add
out
inc
or
dec
xchg
fstl
add
ja
push
or
sub
arpl
lods
jmp
dec
lock
pusha
fldt
mov
or
push
push
add
sti
mov
or
pop
lock
inc
movsl
adc
inc
nop
xchg
fsubl
rolb
add
xor
sub
sub
and
sbb
repz
sbb
gs
or
adc
aad
cs
popa
cmp
mov
fiaddl
and
lods
fildll
mov
and
sarl
loope
fldl
xchg
mov
sbb
lock
outsl
sahf
adc
pushf
aad
xor
lret
dec
jge
or
xchg
adc
dec
xor
cmp
xchg
iret
inc
iret
fisubl
mov
jbe
or
call
add
cli
cmp
xchg
dec
je
jmp
lods
cmpsb
iret
out
ja
and
sbb
sbbl
lock
add
pop
jmp
xor
cmp
add
pop
sub
adc
stos
xchg
mov
shl
sub
jmp
push
inc
add
cld
pop
mov
mov
mov
xchg
inc
int
lods
punpckldq
mov
cmp
shll
inc
pop
in
dec
test
fisttpll
or
dec
add
call
ret
je
pop
sarl
add
ret
sbb
stos
sbb
fdivr
dec
pop
aam
pop
jmp
daa
sub
xchg
add
lret
loop
xor
imul
or
std
mov
inc
sbb
sbb
ret
adc
or
pusha
pop
jle
push
roll
xor
xor
or
xchg
addr16
dec
insl
add
cltd
loop
pop
addl
jmp
mov
dec
mov
daa
pop
insb
inc
mov
and
inc
pop
jbe
inc
fisttps
add
or
neg
pusha
jg
sarb
xor
popa
mov
dec
rorb
cmp
leave
pusha
das
in
insb
in
ds
movsl
out
addr16
fs
mov
test
mov
nop
push
and
push
sub
or
in
das
add
das
mov
pushw
cmp
sub
insb
push
leave
ret
or
je
push
leave
adc
popa
ja
inc
pop
or
mov
xor
insl
test
adc
mov
push
fimuls
sbb
repnz
imul
loop
or
jge
sahf
pop
xorb
adc
or
adc
cltd
addl
imul
dec
ret
stc
push
sbb
pushf
push
push
fsubrs
andl
push
mov
hlt
add
xchg
lahf
add
fmuls
ljmp
out
stc
js
dec
mov
daa
adc
or
xchg
lahf
adc
out
cwtl
sub
pop
pop
xor
inc
pop
jmp
adc
lret
rorl
into
push
pop
cmpsb
js
nop
test
mull
lds
pop
jae
fiaddl
cmp
add
fcoml
sub
loopne
jg
sub
or
sub
mov
mov
push
dec
pop
lock
jmp
mov
js
and
call
xchg
adc
or
jmp
stos
and
push
inc
mov
leave
jecxz
push
xor
push
jge
push
int
aad
das
or
imul
dec
push
add
push
rol
cmpsl
push
scas
add
and
into
push
push
mov
loope
test
dec
repz
inc
push
pop
sub
fldenv
insb
dec
or
adc
lret
pop
imul
pop
jns
out
mov
negl
bound
subb
mov
std
mov
xchg
movsl
push
lcall
push
sbb
mov
add
or
sub
add
rep
repz
add
mov
xor
movsl
addr16
xchg
lret
enter
std
imul
push
mov
jns
mov
sub
add
or
add
loope
push
shll
js
xchg
or
in
pop
dec
sahf
pushf
pop
push
stc
out
negb
neg
jl
test
dec
and
or
scas
mov
push
das
mov
popf
inc
mov
js
movsl
push
inc
pop
cmc
or
ljmp
jmp
push
pop
nop
mov
or
xorl
stos
or
cmpsb
add
leave
xor
mov
jl
pop
adc
pop
mov
jl
pop
fisttpll
rolb
out
inc
bound
jb
jns
dec
daa
add
jmp
sub
test
in
or
into
in
pop
adc
inc
sbb
pusha
pushf
and
push
mov
and
add
ror
sub
ret
jmp
add
cwtl
sub
shr
testl
fstpl
sbb
test
adc
cmpsl
xchg
pop
or
inc
inc
xchg
dec
xchg
das
cld
notb
lret
pop
mov
cmc
test
pop
or
int3
lds
popf
adc
mov
cmpsl
mov
loope
fdivrl
shlb
lahf
rcrl
sbb
mov
push
jmp
mov
sub
xchg
cmp
cmp
notl
lret
or
out
mov
es
in
jg
sub
lock
push
xor
dec
inc
dec
xor
sbb
cmp
xor
rorl
sti
xor
dec
stc
add
adcb
xor
pop
adc
negl
push
pop
pop
daa
cmp
push
hlt
add
mov
xchg
es
lcall
repnz
lret
inc
loopne
mov
or
and
ret
icebp
pop
push
aas
jae
outsb
jmp
aad
movsl
neg
or
scas
jle
addl
or
pop
and
pop
mov
shl
movsl
pusha
adc
shr
adc
mov
xchg
cmovge
jg
sub
add
pop
sub
jle
enter
add
jl
xor
gs
pop
inc
icebp
sub
mov
jne
aam
push
movzwl
icebp
dec
ss
inc
jmp
or
or
pop
xor
cmc
ret
xor
pop
cmp
bound
das
cmc
push
pop
or
push
lock
pop
fs
mov
mov
sub
or
pop
clc
or
pushf
pop
fsubrs
ds
cmp
icebp
shrl
rorb
inc
cmp
sub
mov
inc
jle
xor
sub
push
pop
hlt
dec
mov
pop
filds
mov
pmaddwd
ja
sbb
add
adc
inc
sub
adc
push
nop
mov
xchg
dec
or
test
jnp
dec
icebp
icebp
insb
dec
or
push
pop
mov
dec
ds
sbbl
imul
push
push
hlt
push
add
push
add
dec
and
add
add
sbb
cmpsb
inc
outsb
cmp
jg
jbe
cmp
es
cmp
into
and
ret
hlt
sbb
outsl
or
inc
inc
inc
shl
fsubrs
dec
popf
pop
sub
fwait
test
roll
fnstcw
bound
fisttpll
int3
jmp
dec
inc
aas
push
push
push
arpl
ffree
lea
pop
or
call
dec
loope
sub
jg
scas
inc
bound
mov
or
push
inc
add
sub
sbb
repnz
sub
test
and
in
xor
xor
mov
xchg
push
dec
and
outsl
push
lea
sbb
adc
xor
cmp
push
mov
rcll
icebp
dec
mov
add
push
nop
inc
out
rclb
ret
jecxz
enter
xchg
subb
or
pusha
mov
dec
or
xchg
leave
pop
push
jp
lods
lret
xor
and
scas
pusha
rolb
jbe
jp
roll
push
or
cmpb
in
sbb
mov
or
xchg
xor
adcb
dec
push
addr16
insb
std
sub
push
loope
xor
sbb
xor
add
pusha
mov
mov
push
and
outsl
or
or
sbb
or
and
push
ret
shll
mov
adc
or
or
inc
push
mov
push
jmp
test
mov
arpl
mov
out
push
repnz
jle
mov
lock
mov
push
or
ret
aam
add
pop
or
pop
neg
mov
push
sub
je
or
dec
test
mov
push
inc
je
add
shlb
xor
ljmp
push
andl
xchg
push
adc
dec
push
and
inc
nop
addl
inc
stos
push
jo
setnp
fucom
pop
ss
addl
dec
mov
add
dec
sbb
and
ljmp
aas
mov
pop
jmp
out
mov
movsl
xchg
or
xorl
or
lret
xlat
or
inc
jo
mov
imul
xor
push
lret
cmp
inc
mov
dec
pop
lds
mov
jge
sub
rcl
dec
rcrb
hlt
mov
lret
sbb
test
out
add
pop
inc
mov
push
shrl
movsb
mov
dec
mov
adc
dec
icebp
hlt
test
add
ret
jae
and
push
cmpsb
repz
and
jp
jb
jmp
bound
stc
subb
add
mov
loope
ja
lds
mov
fsubs
and
add
push
add
daa
pop
adc
pop
pop
stos
shl
insl
push
pop
movsb
arpl
lock
bound
or
or
xchg
mov
mov
outsb
ret
pop
clc
or
into
ljmp
add
into
sbb
insb
xchg
push
or
add
incb
shlb
aam
ret
pop
dec
sub
jmp
xchg
sbb
movsl
orb
dec
out
pop
negb
mov
xor
cmpsl
nop
jnp
xchg
sbbl
lahf
lods
mov
mov
mov
out
fistl
movsb
sahf
aas
mov
mov
add
mov
gs
mov
dec
pop
inc
dec
xchg
mov
or
pop
fsub
fptan
bnd
cmp
pop
and
jo
cltd
or
or
and
cmp
loop
xor
test
mov
jp
inc
sub
dec
add
jmp
pop
inc
and
int3
jge
or
lock
jne
inc
jle
mov
addl
mov
addl
pop
cltd
clc
sbbb
aaa
adc
adc
pop
insl
ret
dec
add
mov
cmp
inc
pushf
mov
mov
xor
rorb
cmp
jmp
aaa
inc
xchg
dec
dec
dec
adc
mov
inc
sbb
inc
push
out
adc
je
imul
pop
add
mov
clc
test
push
loop
push
sarl
sub
dec
sub
adc
add
aad
inc
push
push
pop
jmp
enter
test
cmc
mov
das
inc
xchg
cld
mov
push
icebp
mov
bound
jmp
adc
clc
shlb
sub
or
xchg
pop
jnp
popf
ljmp
pop
jb
test
stos
inc
sub
xor
cmp
movb
sub
mov
pop
inc
dec
xor
inc
push
or
and
hlt
les
js
add
cli
inc
popa
ss
shl
xor
dec
sub
hlt
js
mov
fcmovbe
test
pop
lahf
jno
aas
and
pop
add
sub
pop
mov
dec
push
or
ficomps
adc
xchg
push
dec
cmp
add
mov
and
ret
sub
mov
adc
ljmp
in
cld
xor
xor
mov
jmp
jmp
jmp
pop
sti
adc
pushf
rcll
test
add
cmp
fidivs
shr
xorb
pop
add
nop
dec
lock
and
or
mov
dec
mov
cmp
or
sbb
and
pop
cmpb
bound
adc
sub
sub
cmp
fwait
in
add
cmp
icebp
ds
adc
lea
sbb
movsb
leave
push
icebp
movsb
xor
mov
add
pop
add
xor
lock
test
orb
shl
ret
mov
pushf
rorl
loope
adc
cld
cmp
adc
push
lds
adc
hlt
imul
push
cltd
push
mov
repnz
subl
push
dec
lcall
sbbl
pop
sub
adc
jno
mov
push
or
dec
lret
xchg
in
mov
mov
jle
and
clc
add
icebp
rcrb
inc
cmc
jge
jae
adc
insb
addb
js
add
xchg
subb
sub
rorl
sbb
jle
pop
and
add
push
or
adc
sbb
push
xor
out
push
jle
pop
push
xlat
lret
push
das
adc
cmp
pop
popf
in
das
fldenv
dec
add
lock
data16
cs
lret
push
mov
je
aas
xor
jno
xor
jmp
sbb
fstpl
call
cli
jl
mov
ljmp
xchg
mov
add
sbb
mov
inc
jo
ret
push
movsb
fcmovbe
lret
imul
add
jno
jae
insb
dec
ljmp
mov
lds
cwtl
push
nop
ss
push
add
mov
xor
shll
cmp
idivb
clc
inc
mov
pop
sub
mov
ja
add
test
jecxz
aad
sub
or
pusha
shr
inc
add
add
xchg
jmp
pop
fisubrl
sub
fmuls
push
xor
dec
pop
sub
andl
dec
add
push
sub
add
in
pop
inc
sbb
push
jmp
push
push
mov
in
jne
or
pop
jmp
sub
loopne
dec
mov
jle
add
ds
movsb
add
stos
sub
shlb
aaa
sub
xor
jb
xchg
add
rol
jmp
add
push
push
mov
call
shrb
push
shl
sub
popa
jmp
add
and
push
test
dec
test
scas
xor
jno
cmp
mov
inc
jp
mov
dec
fs
xchg
es
mov
data16
rsm
dec
rol
xchg
dec
ret
dec
cwtl
push
cmp
push
clc
push
cmpsl
imul
cmpsl
dec
and
in
sub
mov
sbb
into
add
jnp
jge
mov
cltd
orl
nopl
adc
enter
pop
enter
idivl
push
push
sbb
imul
inc
pop
add
mov
push
pop
repnz
push
test
scas
or
push
add
leave
jbe
sub
cwtl
sbb
sbbb
scas
pusha
stos
shr
mov
sbb
pushf
and
add
push
xor
rolb
mov
add
pop
in
mov
pop
cli
insb
jo
dec
inc
push
xchg
adc
jp
or
inc
fs
stos
test
sbbl
xor
sub
xchg
sbb
scas
jle
mov
ffree
cmp
int
movsb
adc
push
dec
in
dec
mov
xchg
rcl
movsb
pop
push
mov
push
jmp
or
pop
mov
pop
sahf
xor
mov
mov
sub
aas
pop
or
rolb
test
dec
mov
cmp
mov
mov
das
fstpl
in
xchg
mov
jae
xchg
and
xchg
loopne
testl
divb
es
and
lds
mov
out
in
push
mov
and
mov
outsl
sub
jle
pop
test
or
cmp
inc
rclb
inc
neg
or
or
cmp
inc
js
sti
adc
lret
or
lret
pop
aas
mov
lret
pop
aas
jmp
aad
adc
jmp
cmp
sbb
add
bound
lret
inc
add
inc
jmp
popf
shlb
inc
aam
push
push
cmp
out
cmp
ret
lcall
push
push
jmp
add
mov
lahf
push
jl
in
and
aad
test
jo
rcrb
xor
es
pop
and
inc
test
popf
pop
popf
sbbb
unpckhps
out
and
mov
push
mov
shlb
push
neg
cmp
pop
jae
mov
add
jns
jg
lcall
xlat
jge
mov
rolb
test
cld
cmp
dec
mov
insl
fcompl
push
or
push
rolb
repnz
test
add
pop
fimuls
into
sub
mov
in
add
addb
lret
push
adc
sti
or
lea
movb
dec
adc
add
adc
adc
push
in
ret
scas
fildll
lret
cs
add
nop
or
pop
dec
sub
dec
fwait
pop
add
int
jmp
sub
movsl
test
or
dec
cmp
add
sub
push
ret
nop
mov
jmp
sbb
orl
enter
mov
push
inc
push
xchg
daa
es
xor
daa
pop
sub
xor
rorl
jae
pop
sub
mov
andb
sbb
xor
clc
clc
sub
add
fwait
mov
or
push
jmp
stos
push
pop
or
mov
cmc
dec
lcall
pop
sub
jmp
lahf
xor
pop
push
xchg
test
sbb
cmovo
inc
mov
xchg
lcall
xlat
mov
scas
push
pop
cmpsl
push
jmp
flds
mov
inc
decb
add
es
add
dec
js
xor
dec
sub
xor
loop
sub
and
add
mov
pop
pop
test
inc
loopne
add
in
ja
jbe
test
inc
jmp
mov
sahf
pop
push
add
pop
repnz
xchg
imul
jbe
daa
xchg
pop
lds
push
dec
or
or
jecxz
std
in
cmp
or
mov
out
or
push
add
dec
xor
pusha
pop
sub
sub
push
faddl
xor
xor
push
inc
mov
sbb
and
adc
sbb
sbbb
pusha
pop
lret
xchg
insb
test
mov
in
sub
out
nop
xor
or
push
dec
test
in
add
stos
mov
in
mov
fcoms
sbb
mov
adc
adc
idivl
loope
in
and
test
inc
pop
cmc
cmp
in
rcrb
mov
or
and
add
add
inc
pop
pop
int
and
dec
aam
pop
aas
pop
test
out
or
pop
dec
jmp
mov
repnz
mov
adc
mov
push
mov
cmp
testl
cmp
add
mov
shll
jnp
cmp
test
cmpsl
loop
mov
popa
adc
dec
sbb
pop
loopne
movl
jmp
fnstcw
cmp
dec
int
add
in
mov
or
neg
xchg
jg
adc
fiadds
jmp
clc
sahf
les
cli
inc
jno
insb
mov
loop
test
mov
jo
add
push
pop
inc
repnz
inc
xchg
cmp
scas
inc
idivb
cltd
popl
stos
dec
sbbb
pop
fcmove
clc
or
out
jge
pop
and
jmp
push
pop
push
mov
shrb
xchg
loop
push
frstor
mov
mov
pushf
pop
and
mov
movl
mov
in
jmp
push
shrl
push
sub
push
sbb
cmp
xchg
inc
sbb
and
in
and
sub
fisttpl
xchg
add
mov
cli
push
mov
or
sub
dec
xchg
or
ss
add
mov
xor
hlt
sbb
or
pop
aas
and
cmpsl
repz
scas
jmp
or
dec
jmp
mov
mov
lods
inc
adc
adc
jnp
xor
call
loope
and
out
and
push
mov
mov
cmp
dec
jecxz
adc
dec
mov
adc
je
push
pop
push
inc
dec
pop
ja
mov
inc
into
adc
xor
and
xlat
lods
iret
adc
int
mov
mov
mov
cmp
divl
xlat
dec
inc
mov
sub
cmpsb
mov
mov
fidivl
aas
lahf
js
shrb
jmp
iret
mov
jge
jl
cwtl
inc
cmovnp
cmpl
sti
in
xlat
xor
jle
pop
or
add
loope
insb
call
cli
inc
pushf
adc
sbb
add
push
daa
inc
addb
aam
imul
push
push
addb
jb
call
pop
loop
dec
xchg
aas
loopne
js
pusha
adc
and
inc
sbb
jmp
dec
cwtl
and
or
sub
sub
sbbl
leave
pop
into
push
inc
jbe
or
jmp
add
xor
insl
aam
repnz
shrb
mov
adc
lret
adc
movsw
mov
xchg
jl
xor
sub
mov
xor
push
xchg
scas
mov
test
adc
icebp
and
push
shr
push
nop
dec
dec
mov
dec
sub
push
enter
jecxz
mov
sub
and
push
xor
adc
mov
mov
sub
fldt
fs
and
sbb
filds
loop
pushf
lock
jmp
pop
ljmp
ljmp
jbe
add
shrl
add
inc
jae
jge
test
insb
mov
fmul
xchg
cmp
ss
ror
or
push
jmp
mov
es
ss
pop
mov
pop
imul
cmc
inc
mov
cld
nop
ret
and
adc
pop
dec
or
scas
sbbl
push
adc
xor
sbbb
js
inc
fdivp
dec
jbe
pop
mov
fists
lret
lret
sbbb
push
pop
sbbb
cwtl
jecxz
cwtl
xor
sub
mov
push
dec
in
or
insl
adc
cltd
mov
sbb
mov
pop
mov
add
roll
adc
dec
insb
mov
push
jg
xor
jmp
aas
dec
xor
push
in
repnz
xchg
jecxz
cmp
or
mov
jmp
jl
loope
xor
mov
push
dec
iret
add
xlat
shr
pop
imulb
mov
popf
fstps
inc
fildl
inc
fs
pop
decl
or
push
shlw
sub
xchg
ljmp
xchg
and
movsl
pop
mov
fldl
jle
adc
adc
sarl
icebp
and
cmp
int
inc
add
push
mov
jmp
pop
test
iret
pushf
lret
cld
addl
adc
out
lea
inc
ljmp
orb
adc
mov
dec
cli
cmp
lret
dec
push
inc
cmp
xor
jmp
adcb
push
or
and
jmp
cmp
aas
setb
pop
add
add
or
lea
push
push
push
mov
or
testl
rcrb
push
xchg
popf
jo
adc
pop
mov
jecxz
out
jbe
and
dec
pop
xchg
inc
ret
sbb
sub
or
addl
lahf
sub
cmp
lods
sub
pop
xor
xchg
adc
rcr
push
in
xchg
shll
inc
aas
or
jmp
stc
pop
push
adc
mov
push
mov
orl
or
push
add
jp
pushf
pop
mov
sub
sbb
pop
sbb
jecxz
lods
push
loop
or
testl
ret
flds
mov
push
pop
pop
outsb
stc
jnp
es
xchg
sub
xor
and
and
dec
loopne
or
jmp
push
push
mov
push
mov
xor
lods
jle
stos
dec
and
sub
push
inc
push
add
jmp
pop
or
add
shrb
jle
dec
les
pushf
adc
rorl
test
pop
mov
sub
dec
or
pop
lods
xor
fadd
push
aas
inc
jmp
fwait
in
fnstcw
and
shlb
push
pop
cwtl
orb
sub
xor
jnp
jp
mov
dec
loope
ficoms
inc
jl
neg
or
jmp
shrl
inc
sub
add
push
pop
mov
add
dec
push
mov
sub
or
dec
sub
aas
push
inc
out
jle
pop
out
push
inc
std
outsb
rclb
inc
out
jl
fisttpl
xor
or
orl
lret
jle
nop
dec
outsl
in
sub
pop
xchg
or
sub
mov
ljmp
cmc
stos
or
sbb
and
ror
xor
mov
test
popf
jae
dec
fsubrs
xchg
mov
mov
cmp
cmpsl
in
aam
or
mov
push
xchg
jp
add
xchg
pop
hlt
mov
test
push
add
or
lods
mov
pusha
push
mov
jle
add
inc
ljmp
sub
loopne
adcl
jno
adc
arpl
inc
pop
or
mov
pop
adc
push
popa
or
jmp
mov
inc
sbb
adc
inc
lea
jmp
mov
xor
addb
push
inc
add
jbe
and
mov
and
or
jnp
dec
stos
pop
je
add
loope
push
xor
pop
aad
adc
lock
cmp
adc
inc
icebp
jae
pop
jmp
in
lahf
pusha
test
rorb
out
push
mov
adc
mov
call
les
pop
and
pop
inc
pushw
lods
jmp
icebp
jmp
pop
shll
fs
mov
dec
inc
mov
in
out
pushf
je
pop
xchg
sti
add
xor
push
dec
out
pop
jmp
or
sbb
mov
pop
lds
lea
and
xor
or
xor
inc
sarb
mov
sub
mov
jnp
fidivs
ds
es
aaa
cld
nop
mov
mov
push
sti
cmpsl
jmp
shr
jo
and
in
add
cmp
xor
sub
in
and
and
sub
movsl
fwait
lock
push
ja
int3
push
pop
push
add
cmp
std
xchg
ret
xor
aas
or
movsl
cmpsb
rolb
xor
iret
mov
loop
pop
rep
les
jno
push
push
inc
push
mov
imul
cmp
clc
insb
cmp
leave
mov
and
notl
aam
cmp
or
sti
pop
cmp
pop
push
lret
sub
jmp
stc
sbb
mov
daa
repnz
dec
sub
aaa
push
push
outsl
shl
push
jl
sub
cmp
sbbl
cmp
push
and
cwtl
mov
inc
imul
int3
push
mov
cmp
int
mov
lods
add
push
daa
jl,pt
lahf
inc
mov
btr
mov
rcll
xorb
adc
xchg
and
mov
mov
cmp
mov
mov
or
not
push
mov
icebp
ss
add
sbb
push
fsub
cs
jne
cmp
xor
and
pop
and
and
add
sbb
aas
ds
fdiv
and
fstl
sub
cwtl
int
cmp
push
mov
pop
test
out
adc
xor
les
lods
pop
mov
pop
push
mov
jne
mov
lcall
push
push
push
fisubl
xor
fbld
push
push
xchg
mov
mov
push
inc
or
mov
js
outsb
xchg
and
lods
stos
or
test
push
ja
sbb
add
jecxz
test
in
push
aas
ret
push
or
jge
ror
int3
add
or
push
daa
js
dec
mov
das
push
add
xor
fs
shlb
or
or
mov
clc
arpl
shr
push
mov
loopne
pop
mov
jbe
call
dec
xchg
and
fidivs
ret
mov
xor
xlat
pop
jl
jae
sbb
sbb
push
xlat
sbb
cld
unpcklps
ret
jmp
lods
push
or
xlat
movsb
and
sti
lea
or
pop
adc
js
pop
and
test
mov
testb
adc
dec
push
subb
mov
mov
ds
sub
or
aad
xchg
arpl
nop
test
mov
je
das
mov
mov
xor
push
lea
or
mov
xchg
push
popf
pop
xor
daa
mov
or
dec
jge
mov
loope
mov
jno
adc
out
pop
mov
cli
add
push
mov
push
loopne
fisttpl
arpl
aad
cmpsb
push
dec
mov
or
dec
push
jns
cmp
push
pop
cs
arpl
out
jmp
test
dec
pop
jne
and
push
mov
adc
clc
inc
rclb
pop
decl
jmp
push
mov
in
je
jmp
xchg
pop
and
out
fmull
adc
add
gs
aam
fstl
dec
or
pop
dec
pop
lret
sub
push
inc
jmp
xchg
xorl
jmp
cs
xor
sbb
push
pop
adc
mov
add
rcll
das
enter
sbb
in
pop
cld
xchg
call
mov
movsl
cmpsl
mov
hlt
repnz
rcrl
dec
push
or
imul
orb
xchg
lods
sub
mov
cmp
adc
pop
push
mov
mov
mov
sbb
popf
movsb
or
stc
pop
pusha
pop
pop
das
out
es
inc
xor
aad
ficomps
js
inc
or
xchg
xchg
pop
pop
mov
xor
lret
lods
or
add
fbstp
loope
hlt
fdivs
mov
or
imulb
shlb
ljmp
psubsw
lods
pop
pop
cmpsl
sti
cmp
dec
cwtl
lret
mov
imul
or
iret
pop
test
or
arpl
popa
jmp
and
cmp
and
outsb
dec
mov
or
dec
cmp
mov
lahf
jae
mov
inc
out
fsubs
push
dec
or
mov
out
call
shl
ljmp
sarl
sub
mov
adc
push
mov
mov
sub
pop
push
mov
add
or
rcl
loop
out
lret
xor
mov
subb
inc
xor
ret
sub
fldt
jl
mov
loop
xchg
lods
mov
push
in
push
rolb
aaa
dec
enter
inc
int3
je
mov
and
hlt
cmp
xor
lahf
test
and
push
loope
mov
addl
add
outsl
rcrl
jnp
out
idivl
jmp
loop
and
orb
sbb
push
or
jmp
and
dec
inc
cmpsb
add
mov
jge
sahf
add
push
out
push
and
rorb
dec
rorb
call
add
lret
adc
adc
sbb
pop
pop
add
adc
xor
dec
mov
or
adc
add
sub
push
mov
in
scas
mov
or
xor
adc
les
pop
mov
es
push
addr16
push
aad
add
jnp
jge
sub
push
out
xor
mov
nop
and
push
daa
sbb
sbb
daa
xchg
pop
push
mov
out
fbld
or
jmp
dec
sbb
pop
imul
out
add
sbb
add
inc
xor
pop
mov
pop
fldenv
fisttpll
mov
mov
mov
xor
pop
jb
xchg
add
aam
lods
dec
cli
jmp
jl
fisubrl
sbb
dec
ss
call
mov
movb
xor
inc
push
cs
popf
and
xor
sub
mov
inc
inc
add
ds
movsl
cltd
fdivs
lret
cs
sbb
pop
loopne
mov
fiadds
adc
xor
popf
mov
in
xchg
loopne
push
dec
les
adc
scas
or
lea
xor
movsl
shll
dec
xor
out
cld
aam
repnz
sbb
sub
fs
mov
mov
dec
in
loope
das
shlb
sub
push
and
in
rolb
aas
and
or
cmp
add
push
fwait
loope
sbb
or
insl
js
push
push
in
or
movsl
sub
or
jecxz
pop
mov
adc
cmc
rol
subl
and
jno
xor
daa
inc
nop
mov
lret
dec
lcall
aam
sbb
arpl
cld
push
cmp
push
mov
push
pop
jbe
jnp
jmp
mov
jg
inc
jne
adc
jo
std
xchg
mov
sti
popa
cmp
je
pop
sbb
shlb
pop
fs
stc
xchg
fs
mov
jle
out
ss
xchg
shrb
out
add
jmp
xchg
test
cld
loope
and
mov
mulw
adc
pop
push
xchg
out
ds
cmpsl
jmp
outsb
pop
test
jnp
mov
xchg
mov
test
lret
push
sub
test
xlat
push
dec
and
daa
lods
enter
sbbb
int3
inc
sbb
mov
or
dec
daa
mov
cli
not
push
mov
xchg
fwait
adcb
test
push
push
jp
mov
pop
in
push
shr
in
inc
and
int3
push
pop
shrl
adc
fcomip
pop
sub
inc
push
dec
or
dec
pop
mov
cs
push
popl
cmp
insl
sub
sarb
jecxz
ret
ss
popa
mov
jecxz
sbb
je
insl
xlat
mov
out
dec
std
add
push
mov
push
stos
mov
fs
mov
aad
jmp
les
lret
dec
and
pop
mov
in
pop
cwtl
les
pop
repnz
cltd
adc
hlt
jae
sbb
cld
jg
and
xchg
or
mov
pop
mov
test
idivl
fdivs
cmp
cltd
int3
xor
call
pop
push
mov
lock
mov
jle
push
inc
push
mov
xor
mov
test
pop
lods
out
ret
cmp
cli
push
mov
dec
add
into
lock
ljmp
cmp
fmull
mov
xor
cmpsb
add
gs
ds
add
sbb
jno
jne
cwtl
jno
add
xchg
jnp
cmc
xchg
jg
pop
daa
jmp
mov
ret
and
sbb
cwtl
mov
push
dec
dec
pop
test
or
sub
stc
push
mov
sbb
sarb
or
mov
add
repnz
adc
mov
adc
sub
ss
and
stos
pop
push
lods
or
iret
inc
enter
cs
pop
xchg
add
ja
or
xchg
lcall
jne
pop
xchg
adc
repz
add
xchg
ljmp
adc
or
adc
xor
add
pop
and
add
push
sub
clc
mov
push
repnz
mov
add
jmp
out
mov
icebp
mov
pop
adc
mov
in
leave
jno
inc
adc
add
stos
ja
inc
shrl
stos
and
push
mov
jnp
sbb
and
push
or
pop
and
sub
adc
mov
and
mov
lods
push
stos
mov
mov
mov
or
test
xorl
mov
jp
xor
shrl
inc
add
arpl
mov
jg
adc
or
jne
mov
inc
sti
pop
mov
imul
cmp
mov
jg
mov
sbb
aaa
and
adc
pop
jmp
mov
aam
and
jge
and
sub
and
mov
ret
out
sbb
add
jns
loopne
sub
aam
xlat
or
add
das
adc
add
hlt
adcl
push
data16
inc
push
stos
js
test
imul
rcrl
adc
test
xor
xor
nop
fisubl
cmp
loop
push
fcoms
jmp
call
icebp
shlb
push
in
xor
in
aas
not
adc
or
push
ds
adc
das
jmp
cs
xor
ja
jo
dec
xchg
fucom
add
push
mov
shlb
ja
ret
or
and
cld
test
dec
mov
inc
inc
push
dec
xchg
je
xor
sub
movsb
sub
test
lret
jno
push
cmp
push
cmp
rorl
adc
push
inc
rcl
aas
dec
sub
xor
mov
mov
loopne
add
ljmp
mov
std
or
sbb
xchg
pop
and
pop
push
add
out
pop
pusha
adc
or
psubsw
arpl
inc
test
mov
popa
cmp
cmp
nop
push
fildll
cmp
xchg
call
push
xor
adcb
aad
lods
jb
clc
adc
sahf
push
sti
lcall
xlat
addr16
jno
mov
adc
dec
jnp
lahf
jnp
ja
fidivl
adc
fucomi
push
add
fs
push
pop
call
jmp
add
mov
push
fdivr
jbe
dec
jp
ss
sub
pop
or
js
adcl
pop
out
xchg
loope
mov
jne
cmp
inc
movsb
loop
mov
not
xor
das
jmp
or
insl
arpl
add
sub
add
sub
jecxz
pusha
imul
add
loopne
mov
fsubrs
dec
mov
pop
pop
ja
mov
aad
fistpl
xchg
pusha
imul
xchg
pop
outsl
or
orl
xor
inc
jmp
dec
test
jo
in
test
push
ffreep
mov
fisubrs
add
loope
loop
dec
push
add
lahf
sbb
inc
jno
mov
push
shrl
pop
loop
outsl
loopne
pop
adc
inc
dec
in
add
inc
test
jnp
jb
mov
push
or
out
jmp
loop
jmp
sub
add
push
push
and
or
cmp
pop
push
pop
mov
mov
and
bnd
ss
test
or
inc
push
ljmp
pop
les
es
ss
inc
sub
jmp
and
xorb
sti
mov
and
mov
inc
popf
ret
pop
pop
scas
into
mov
dec
jp
fisttpll
mov
and
popf
dec
call
flds
add
ret
les
cltd
xchg
push
push
lds
out
push
mov
ljmp
and
or
dec
cwtl
daa
add
xlat
jmp
lret
pop
and
and
dec
daa
clc
enter
push
dec
rcll
fisubl
in
imull
or
xor
jp
and
nop
cmp
fs
push
jnp
add
sahf
adcl
cmp
mov
xor
pop
bound
add
rcll
fldl
je
push
and
aam
sbb
pop
push
mov
mov
adc
sbb
sub
push
pop
jle
inc
dec
testb
jge
je
xchg
aas
mov
add
sbb
dec
push
jae
or
sbb
pop
in
pop
ror
les
or
scas
sbb
inc
cwtl
shlb
jb
call
je
mov
pop
cmp
test
mov
shl
cmpb
movsl
xchg
mov
stos
mov
in
or
push
add
push
xor
jo
sub
xor
add
arpl
adc
in
daa
and
nop
dec
psrlw
test
dec
xor
mov
mov
jmp
mov
mov
daa
push
in
stc
pop
jge
pop
mov
fcomip
test
out
sub
inc
loop
lcall
enter
xorb
and
pop
add
aad
lds
mov
adc
add
out
not
cmpsl
mov
push
fwait
arpl
ljmp
mov
sbb
pop
sub
mov
xor
mov
push
push
lods
jl
dec
cltd
xor
mov
mov
bnd
mov
adcb
int3
out
shlb
mov
mov
or
cs
push
xor
cld
in
adc
add
inc
jg
les
cwtl
ret
pop
ret
lds
jmp
mov
cmp
outsl
lcall
jmp
test
js
dec
hlt
sti
inc
ret
aaa
ljmp
mov
jmp
rcll
lea
aad
inc
stc
mov
mov
sub
or
xchg
adc
push
call
ja
test
lds
leave
fisubs
adc
sbb
sub
add
ljmp
push
jns
dec
pop
test
add
add
in
pop
push
sub
add
sbb
xchg
bound
xchg
ds
repz
stos
pop
popa
add
dec
outsl
mov
lret
or
push
adc
lock
push
das
sub
jmp
mov
je
push
jne,pt
adc
aam
sbb
push
pop
out
or
test
inc
xorb
pushl
mov
arpl
jle
add
sbbb
pop
add
mov
ficoml
mov
mov
inc
insl
and
xchg
pop
inc
jl,pt
scas
nop
test
rorb
inc
addb
aad
jnp
adc
dec
inc
movsl
add
xor
sub
jg
jnp
push
inc
sbb
stc
movsb
add
sub
cmp
add
pop
ret
sub
or
mov
push
add
sar
adc
and
lds
cwtl
adc
mov
mov
jne
daa
shr
ror
jmp
xor
push
sbb
push
lds
in
jmp
pushf
subb
pop
push
push
push
jmp
out
pusha
test
cwtl
ds
aaa
add
or
cmp
fildl
incb
jp
sub
adc
push
pop
inc
jb
or
or
clc
jns
add
add
xor
pusha
sub
cmp
movsl
mov
add
cmp
jmp
xchg
jl
cld
dec
push
add
cmp
aaa
and
pop
pop
lret
and
cmp
nop
mov
add
in
out
sub
xchg
add
pop
shr
cld
mov
push
push
pop
push
pop
mov
add
test
xchg
mov
mov
je
das
shlb
push
hlt
imul
out
sahf
push
jno
insl
jmp
pop
cmpb
arpl
dec
pushl
outsb
push
shll
mov
cwtl
mov
push
mov
adc
adc
jp
orl
pop
cmp
add
dec
call
pop
jb
pop
and
ror
mov
divb
add
dec
ret
or
lret
push
cmp
pop
mov
and
rcl
cmpsb
outsb
or
or
pop
hlt
popl
adc
mov
fmuls
and
aad
inc
movsb
movsl
dec
lcall
mov
mov
dec
push
and
adc
mov
push
loopne
mov
and
or
push
jmp
mov
adc
pop
addr16
mov
data16
inc
pop
mov
pop
add
jg
fildll
add
cmc
js
sahf
test
pop
test
pop
xchg
or
sahf
dec
sub
insb
ret
add
push
pusha
repz
loope
in
repz
inc
loope
int3
or
xor
inc
lods
and
and
out
mov
ret
add
mov
repnz
das
xor
push
push
mov
jns
ljmp
lret
jne
mov
btc
scas
add
icebp
insb
sub
orb
xchg
jge
add
pop
xor
mov
xor
test
add
bound
add
jmp
add
mov
dec
test
cmp
sti
mov
push
stos
dec
leave
ljmp
xor
stos
or
xlat
imul
pusha
dec
push
pop
lret
inc
lods
arpl
push
lock
leave
scas
testb
jmp
popf
and
fwait
inc
subb
lret
or
sbb
mov
or
jmp
inc
inc
mov
and
pop
in
xor
push
pop
mov
icebp
loopne
mov
in
movsb
ret
jmp
pop
sub
notl
jnp
outsl
adc
xor
not
je
shr
xor
jg
mov
jb
std
shlb
and
mov
jns
cmpsb
pop
ss
iret
stc
ret
sub
ja
mov
sub
in
adc
adc
and
sbb
push
cmp
addr16
pusha
pop
and
or
xor
addb
sbb
or
fsubrs
xlat
loop
inc
cmp
xchg
adc
clc
daa
push
cmp
lret
sbb
es
pop
push
jmp
and
pop
pop
call
cmp
mov
sbb
les
jae
cli
push
cmc
or
bound
scas
sub
jno
mov
shr
push
pop
push
mov
mov
jmp
and
mov
xchg
push
pushf
arpl
fstps
push
ja
push
lock
fstps
xor
push
or
add
not
shl
ror
outsl
testl
clc
pop
aad
adc
push
jo
pop
shrb
das
mov
pusha
fdivrl
movsb
call
xchg
add
orb
push
jmp
cmp
dec
adc
add
pop
in
push
lods
jmp
sub
mov
daa
addb
hlt
xor
fisubrs
or
pusha
pop
inc
adc
out
pop
mov
cmp
push
leave
out
cmp
push
fucom
push
test
das
repnz
jb
dec
das
dec
dec
lret
cld
gs
push
jo
add
cli
orb
repz
ss
stc
loop
adc
adc
sbb
inc
pop
aad
add
into
daa
sahf
repz
cmpsb
repz
mov
or
add
pop
neg
and
xor
cmp
pusha
cmpsl
push
cmp
push
push
and
adc
mov
ja
loope
pop
jo
push
jmp
addr16
fcoml
das
mov
push
clc
insl
pop
inc
in
xchg
roll
clc
sub
or
jmp
inc
mov
cld
or
aas
adc
sub
pop
inc
inc
push
add
sub
cmp
xor
in
ret
lock
jg
mov
or
jmp
add
mov
add
jb
daa
dec
scas
fsubrs
in
cmpsl
shll
mov
fadds
push
mov
movhps
sbb
jnp
dec
insl
push
leave
arpl
int
bound
dec
jmp
inc
rcrl
and
add
imul
cmpsb
aas
pop
shr
pop
lahf
ja
jbe
in
movsl
lret
rcll
aaa
adc
xor
adc
aaa
or
aam
push
sub
jmp
mov
jnp
into
or
pop
jg
cmpsl
imulb
add
cld
mov
std
mov
mov
rcll
push
jo
push
xorb
shr
not
sub
cwtl
icebp
aas
inc
mov
sbbb
mov
add
dec
or
imul
push
add
pop
cltd
rclb
or
inc
daa
cmc
dec
push
nop
mov
jo
add
lcall
ret
add
adc
and
out
or
mov
mov
lods
mov
sbb
xchg
and
mov
imul
push
adc
test
pop
lcall
shr
sbb
pop
dec
jecxz
xchg
clc
xchg
roll
es
xor
push
cmc
sub
dec
test
inc
or
stos
cmp
jmp
pop
mov
adc
ret
mov
call
enter
stc
add
pop
mov
daa
sti
mov
lods
pop
in
jecxz
xchg
add
xor
in
sbb
jl
dec
mov
sarb
adc
pop
pop
mov
and
sbb
xor
sti
cltd
cmp
leave
add
add
push
seto
inc
insl
xchg
push
add
iret
icebp
jp
mov
push
dec
xor
and
or
dec
push
jle
iret
fists
pop
mov
or
ja
je
push
lret
pop
pusha
sub
test
adc
add
sub
pusha
jmp
dec
hlt
mov
or
loopne
add
add
push
and
test
mov
roll
pusha
imul
mov
push
xchg
repz
cwtl
jecxz
push
jmp
pop
dec
or
es
insl
call
adc
xor
addb
sub
je
xor
enter
and
das
adc
xlat
push
mov
add
sbb
std
jmp
sub
jno
arpl
push
pop
dec
or
pop
jo
in
imul
dec
fnstsw
cltd
or
pop
add
lea
fimull
jmp
jo
sbb
adc
mov
andl
insb
sbb
mov
pusha
in
and
add
sub
pop
adc
xchg
cmp
push
cmpsl
out
into
pop
loope
or
out
push
mov
xor
pop
clc
jmp
jmp
lods
or
orb
cmpsl
add
es
jmp
pushf
rorl
daa
daa
rorb
mov
and
xor
push
mov
rorl
jg
xchg
sub
pop
add
shll
adcl
lock
repnz
mov
xchg
sbb
pop
leave
test
ja
xor
and
insl
xor
out
pop
sbb
movsb
cs
loopne
pop
clc
ds
pop
sbb
addr16
inc
sbb
insl
and
lret
dec
jg
mov
mov
jmp
inc
bound
xor
and
add
test
jns
clc
jo
icebp
dec
sub
mov
mov
jl
jle
sub
insb
rorb
cld
xchg
aas
dec
movsl
fsub
imul
sbb
mov
lds
sbb
stc
out
les
mov
push
leave
mov
out
nop
dec
dec
add
dec
stc
dec
loop
xchg
scas
sahf
xchg
push
and
add
xlat
push
pop
dec
sub
cwtl
fildl
jge
xlat
sbb
lret
push
loope
lret
push
loop
loop
movsl
nop
aam
mov
jmp
sbb
mov
mov
daa
fidivl
sub
or
mov
test
dec
cli
clc
adc
adc
incb
or
and
in
vpshab
cmpsb
dec
incb
testl
nop
dec
jb
insb
lods
das
sti
push
push
sbb
mov
and
adc
popl
jo
adc
das
imul
aad
adcl
push
jecxz
dec
sub
jge
sti
xor
not
sbb
pop
sarb
pop
aas
push
push
movsl
mov
pop
xor
mov
aaa
and
ss
pop
pop
std
loopne
iret
ret
cmp
dec
mov
pushf
jmp
xchg
out
rolw
lds
arpl
pop
test
pop
sbb
pop
rcll
mov
fdiv
mov
addl
pop
or
icebp
enter
xchg
in
andb
and
std
jmp
add
and
or
mov
dec
pop
call
push
dec
inc
inc
decb
pop
lods
lds
sti
cmp
inc
dec
int
sub
shl
gs
rolb
push
outsb
add
popf
testb
or
jmp
mov
inc
cmp
mov
pop
fcom
cmp
push
lret
push
mov
push
mov
jo
pop
icebp
jmp
jno
inc
and
dec
and
dec
ss
pop
jmp
add
inc
push
mov
jle
push
imul
push
enter
or
or
or
and
insb
mov
dec
out
or
adc
xor
nop
jno
inc
jne
sub
adc
hlt
faddp
xor
or
or
push
jp
cmp
mov
dec
mov
push
int3
or
aas
jb
xor
rcr
add
push
pop
in
ss
ja
pusha
or
jmp
sub
sbb
div
out
daa
mov
and
fstpl
imul
or
inc
xor
jne
cli
aad
mov
enter
dec
cmp
sbb
stos
cmp
mov
dec
add
add
fwait
xchg
cmp
std
or
ret
pop
dec
pop
adc
imul
lock
pop
pop
push
cmpsb
subb
cld
cmpsb
add
sbb
push
push
inc
int
aam
dec
pop
popa
jne
or
loop
test
out
loop
js
out
adc
dec
mov
add
xor
es
ficoml
push
mov
or
xchg
cmp
mov
in
sbb
cmc
dec
cmp
inc
xchg
shrl
mov
addb
pop
or
lods
fsubr
mov
pop
or
xor
xor
xor
dec
lcall
hlt
cld
mov
jns
addr16
mov
insl
xchg
mov
cmp
sub
enter
mov
pop
pop
lret
jmp
lds
cmp
fldl
xchg
inc
andb
push
push
in
dec
push
test
xor
add
stos
inc
sahf
sub
pop
jmp
xchg
dec
pop
insb
dec
mov
xlat
in
leave
test
dec
push
les
scas
cmp
jmp
mov
shl
mov
mov
add
stos
test
js
push
inc
andl
inc
mov
add
stc
push
push
add
mov
or
ret
or
movsl
dec
cmp
fiadds
or
cs
mov
or
cli
inc
in
nop
ret
cmp
mov
xor
adc
and
arpl
sub
jmp
xchg
not
invd
add
lret
inc
pop
push
mov
testb
mov
mov
es
out
pushf
xchg
push
dec
fs
ret
sbb
inc
jp
pop
mov
lret
out
or
outsb
push
cmp
mov
scas
adc
mov
sub
pop
dec
movsl
fsubl
mov
add
jge
pop
test
lods
insl
loop
pusha
mov
sub
jp
cld
dec
cmp
popa
dec
inc
xor
mov
std
pop
sub
rcrb
add
push
or
dec
fs
dec
nop
xchg
inc
inc
cli
lret
xchg
sub
jmp
imul
rcll
inc
push
nop
push
aas
mov
addr16
sub
repnz
pop
mov
insb
cmpsb
or
pop
jmp
orb
pusha
subb
push
jg
xchg
pop
dec
test
pushf
notl
push
insl
or
add
mov
sbb
jmp
and
pop
cli
dec
mull
mov
mov
jmp
shl
and
or
jno
xor
pop
sub
jmp
push
pop
jmp
add
cmc
bound
mov
insb
and
mov
es
test
rolb
xchg
or
sub
hlt
or
repnz
push
pop
pop
nop
scas
cmp
jg
mov
sbb
xor
cmc
hlt
aam
mov
jge
mov
mov
mov
mov
cltd
add
stos
mov
mov
xlat
dec
je
mov
das
push
sub
pop
mov
and
or
add
aas
dec
sbb
pusha
or
push
gs
mov
add
push
push
push
adc
movsb
mov
ds
sbb
xchg
dec
dec
movsl
arpl
adc
inc
add
xchg
shr
add
sub
xor
stc
or
mov
and
cs
ss
dec
xor
shrw
pop
add
adc
sbb
cmp
cmp
add
sbb
xor
or
xchg
lahf
stc
nop
jmp
mov
mov
add
push
add
mov
and
stos
gs
pop
rcl
add
adc
repz
pop
push
mov
dec
sub
fildl
mov
cmc
in
xor
add
pop
xchg
jle
mov
jmp
clc
sub
nop
xchg
pop
mov
pop
add
sub
dec
cmovp
call
imul
inc
jae
pop
mov
shr
jmp
jp
mov
dec
and
mov
inc
shl
push
pop
out
pop
mov
sbb
push
adc
sbb
arpl
jle
std
push
push
mov
mov
out
pop
cmp
or
jmp
push
scas
insb
les
stos
in
mov
and
pop
int
fstpt
in
leave
push
push
shll
test
dec
inc
jp
cmpsl
outsl
inc
stos
cmp
leave
or
jno
jo
jmp
and
push
add
iret
dec
test
sub
sbb
add
xor
push
rep
add
gs
ss
insb
popa
repz
xchg
ret
lret
inc
fnstcw
adc
push
jne
sub
push
and
rcll
fbstp
test
add
pop
sub
pop
jo
popa
dec
mov
pop
into
jo
movl
jmp
jp
sub
sub
mov
push
rcrl
mov
outsb
les
push
pop
pop
adc
add
stc
and
or
mov
pop
pop
xchg
jae
shll
shr
neg
mov
mov
mov
data16
or
xor
fcmovne
out
or
pop
in
xor
sbb
vmovlpd
sbb
xchg
sub
fmull
cld
sbb
or
aam
adcb
inc
std
pop
int3
lret
loop
cltd
not
sbb
mov
or
pop
inc
fldl
mov
cld
sub
or
add
fsubs
in
pop
pop
in
lea
xchg
notl
jnp
jbe
arpl
xchg
lods
cmpsl
add
add
and
jno
add
sbb
nop
sbb
jae
push
jno
sub
mov
js
test
jp
inc
outsb
repnz
and
ds
cld
push
or
adc
cmp
xchg
sub
inc
push
in
pushf
mov
inc
pop
dec
jmp
or
lock
xchg
inc
inc
adc
stos
cli
or
inc
imul
mov
dec
jb
icebp
mov
push
pop
jp
inc
cs
xchg
push
jl
lock
and
scas
sub
call
inc
cmp
lds
xor
sub
inc
xor
add
rcl
nop
and
jmp
dec
add
add
mov
dec
cmp
adc
fs
xchg
jmp
xor
mov
in
jp
xchg
mov
jmp
pop
popf
sbb
pop
jae
lock
popa
add
or
mov
fisttps
inc
test
jb
jl
lret
cwtl
xchg
jb
xor
mov
out
repnz
pop
adc
int
into
andb
or
xor
dec
arpl
out
bound
mov
xchg
loope
or
or
stos
loop
cli
inc
imul
sbb
jbe
das
repnz
dec
push
sub
iret
push
add
inc
dec
adc
out
or
inc
add
test
dec
sarl
loopne
sbb
dec
adc
std
adc
std
shr
and
mov
pop
shlb
dec
neg
sub
xchg
sub
fstl
dec
xchg
or
add
ret
xor
aam
xorb
ljmp
dec
div
pop
clc
pop
in
popfw
rcrl
sub
ret
das
sub
jmp
aam
es
icebp
xchg
dec
push
out
push
ret
mov
or
ja
into
mov
xchg
arpl
adc
in
sub
fisubs
imul
bound
inc
mull
inc
repnz
dec
leave
pop
ljmp
or
inc
mov
sub
jae
dec
add
mov
jecxz
sub
mov
xor
mov
inc
fcompl
push
adc
dec
mov
xlat
fcomps
mov
inc
add
sub
clc
add
sub
enter
fs
out
push
dec
arpl
int3
in
mov
mov
mov
inc
push
hlt
pop
iret
or
add
je
mov
jp
ljmp
movl
mov
push
lahf
push
add
in
jmp
sub
or
in
sbb
inc
dec
jae
aam
xlat
mov
rorb
dec
adc
mov
ret
orl
sbb
cmpsl
push
cmpsl
outsb
les
mov
sub
push
out
add
xchg
pop
add
and
nop
mov
jge
repz
test
loopne
add
inc
pop
pop
xchg
inc
ficoms
or
dec
sbb
sub
rol
into
cmp
pop
mov
iret
jp
lcall
jbe
adc
sub
imul
cmpsl
andb
xor
pop
dec
push
lock
add
xor
cmp
cmp
out
adc
or
pop
sbb
sar
ss
push
push
pop
or
push
aaa
pop
bnd
dec
das
xor
and
jb
sub
push
test
pop
cli
adc
adc
aam
sub
jb
add
jns
jg
mov
pushl
add
dec
sub
or
scas
push
dec
xor
jmp
inc
xor
push
rcrb
xchg
jecxz
mov
push
add
and
push
mov
add
mov
in
mov
scas
and
aad
rolb
lea
sbb
popa
mov
adc
dec
pushf
iret
ja
cli
sbb
push
ss
pop
jmp
and
push
daa
pop
add
daa
xchg
xor
push
inc
mov
in
jg
call
pushf
and
xlat
das
sub
push
xchg
mov
push
or
rcrl
mov
add
add
aaa
cmp
jae
mov
or
xchg
and
in
test
cmc
or
in
jns
inc
cmp
sub
xor
add
lods
pushf
xchg
mov
pop
sub
push
arpl
ficoms
xchg
aam
ljmp
ds
add
inc
mov
jne
xorb
into
mov
icebp
adc
cmp
sub
push
cmp
lock
repnz
mov
ret
adc
adc
dec
imul
dec
sbb
out
inc
jp
jle
jns
cwtl
roll
sbb
add
xlat
outsb
scas
je
les
cmp
cltd
push
cs
mov
fsts
imul
sub
jns
mov
cmp
xlat
push
push
pop
insl
pop
adc
in
shll
orl
je
ljmp
incb
aas
push
jae
adc
jecxz
mov
test
mov
push
sub
pop
sub
jmp
and
push
push
sarb
or
xchg
loop
fiadds
sbb
bound
add
pop
cmc
inc
xor
pusha
out
pop
lahf
and
fistpll
xchg
fsubr
out
mov
mov
cmp
sbb
adc
arpl
pop
mov
push
lock
sub
pop
mov
pushf
imul
inc
or
daa
add
pop
adc
inc
mov
add
std
mov
int
mov
add
push
mov
xchg
loope
add
movsb
mov
mov
idivb
inc
jmp
fwait
pop
icebp
mov
cmp
xchg
out
add
push
mov
movsl
xor
scas
mov
lods
xor
and
inc
cmp
cli
in
xlat
idivl
and
add
xchg
andl
sbb
je
jmp
cmp
pop
test
lock
cmp
push
add
xor
jle
add
mov
or
pop
dec
push
xor
clc
adc
fwait
adc
mov
or
lods
xchg
cwtl
imul
mov
in
mov
sub
mov
rorb
rclb
mov
shr
pop
neg
or
ds
pushl
mov
push
in
cwtl
sbbl
jns
mov
xor
or
push
mov
not
in
rcrb
xchg
mov
xchg
jno
push
das
lods
xor
jne
mov
mov
cmp
frstor
nop
sub
add
pop
jo
pop
mov
mov
pop
inc
dec
add
hlt
adc
lock
rcrl
add
test
icebp
test
push
xor
jmp
mov
sbb
leave
push
clc
jle
add
jns
push
jmp
inc
or
xor
lsl
jno
mov
push
mul
pop
mov
jno
popa
sub
inc
cwtl
shll
mov
loope
sub
rcl
ror
adc
push
xchg
push
movl
inc
cmpsb
ljmp
dec
mov
adc
stos
adc
add
cmp
inc
sub
repz
cmp
xchg
jle
cs
daa
adc
nop
or
jmp
imull
jb
rcl
ljmp
test
mov
lods
jg
fimuls
mov
inc
add
push
stos
nop
add
push
pop
andl
pop
adc
or
xor
addr16
push
movsb
cli
mov
pop
mov
pop
sbb
pop
dec
and
pusha
and
or
dec
call
shlb
xchg
insl
xlat
sub
mov
add
jb
les
inc
jno
xor
cmp
scas
xchg
sti
pop
fiadds
pop
inc
dec
add
or
add
push
loope
fldenv
sti
dec
add
jle
pop
jmp
lahf
lods
jbe
push
mov
pop
inc
inc
xchg
push
cmpsb
jno
pop
pusha
jp
mov
sub
shl
mov
mov
test
lea
or
int
pop
int
stc
push
js
pop
mov
shr
or
int3
repnz
add
shlb
push
mov
jmp
and
mov
mov
int
dec
jle
arpl
and
push
pop
pop
inc
and
xchg
pop
push
jp
dec
sub
ds
loope
pusha
jge
in
mov
scas
mov
push
add
nop
or
jmp
rclb
enter
push
push
inc
pop
add
stos
outsb
mov
xchg
pop
mul
popf
xchg
mov
sbbl
push
mov
jne
test
or
add
push
adc
ret
or
scas
adc
jecxz
addb
out
sub
add
xchg
mov
jns
xorb
push
shll
pop
lret
xor
push
jmp
stc
sub
ds
cmp
add
mov
shrl
imul
jge
test
add
push
leave
push
push
mov
fisubrl
mov
dec
inc
inc
xor
shr
incl
lahf
add
xor
mov
ret
rcr
xchg
cmp
dec
xor
mov
pushf
ret
cmp
push
mov
jae
dec
aad
cs
mull
cmc
loop
jne
xchg
jmp
jg
loopne
lret
in
or
test
push
xchg
filds
or
ds
adc
dec
add
loopne
mov
imul
dec
jmp
push
xor
push
add
jae
in
or
jno
aad
mov
paddusb
std
adc
leave
mov
mov
sub
dec
and
stos
and
jno
das
jbe
dec
push
jmp
dec
and
mov
push
andl
aad
cltd
jl
pop
mov
decb
mov
mov
je
add
fabs
push
xor
jl
jne
sti
push
jle
pop
dec
cmp
mov
inc
mov
hlt
push
dec
clc
ja
mov
loope
rol
add
call
jecxz
clc
pop
out
popf
push
dec
mov
dec
mov
js
pop
and
jg
lds
out
lcall
lods
imul
jae
addr16
or
mov
push
test
adc
jbe
inc
and
xchg
xchg
aam
bound
cli
sarl
pop
sub
pop
icebp
test
scas
rclb
add
cwtl
ja
fs
sub
jmp
mov
push
lods
add
hlt
cmp
cmp
jecxz
out
cmpsl
ret
sbb
and
inc
jmp
add
stc
xchg
aam
stc
mov
jae
shr
rcrl
pop
popa
inc
mov
shr
inc
inc
lods
popa
mov
sbb
ljmp
popa
sahf
movntq
iret
inc
sub
pop
sub
aam
insl
mov
inc
subl
enter
aas
int3
add
jle
pusha
sti
add
xchg
jg
pop
aaa
ror
fiaddl
add
sbb
or
adc
mov
in
ficoms
sub
add
xor
jmp
sbb
popa
je
inc
mov
pop
sbb
into
mov
ja
sbb
sub
or
jne
xor
neg
add
movsl
std
jmp
add
xor
pushf
outsl
push
mov
mov
cmp
leave
daa
cltd
mov
das
test
out
push
add
clc
cmp
add
insb
dec
repnz
loope
xor
mov
sub
lock
cld
jp
dec
loope
cmp
and
out
cmp
cmp
push
arpl
pop
sub
ja
and
cmp
jns
add
and
repz
negl
push
bound
ljmp
jmp
into
push
and
shr
lahf
mov
cmp
call
mov
or
mov
add
jo
jbe
notb
fisttps
push
push
push
jmp
cmp
popf
andl
in
and
movsl
pop
fwait
and
rolb
push
sub
mov
jp
jg
stc
das
in
mov
xchg
fldcw
push
dec
cld
hlt
arpl
les
xchg
mov
sarl
add
pop
bound
xchg
dec
mov
or
or
add
stos
rclb
add
mov
psubq
jmp
inc
loop
cld
push
cmpb
cltd
xchg
imul
jmp
pop
gs
imul
in
fdivrs
xchg
imul
leave
data16
jnp
popf
stos
mov
adc
outsb
adc
das
pop
jno
inc
jmp
outsl
pusha
mov
icebp
or
out
add
xor
inc
nop
inc
daa
loopne
mov
jb
push
out
sub
shrl
scas
cwtl
jns
dec
aad
dec
xchg
loop
cmp
mov
pop
push
push
inc
push
and
ret
adc
xchg
jnp
xor
push
push
mov
jmp
and
jns
xchg
das
and
adc
js
add
sbb
push
imul
add
sub
xor
dec
push
jmp
lock
xchg
pop
pop
pop
pop
test
adc
xchg
mov
add
push
mov
mov
push
dec
cmp
out
sub
xorl
xchg
not
push
push
pop
outsb
aas
ret
in
mov
scas
filds
stos
ds
adc
add
inc
scas
inc
or
jmp
push
mov
repz
pop
mov
ljmp
sti
movl
insb
push
jno
mov
fmulp
fsubrs
or
dec
icebp
js
mov
int
sbb
adc
pop
rcll
sub
cmp
sbb
pop
sub
dec
xor
addr16
add
push
push
inc
push
inc
std
add
cmp
push
outsb
pop
nop
testb
pop
movsl
jecxz
cwtl
add
push
xchg
push
xor
sub
aam
mov
repnz
jmp
andb
push
sub
sarb
or
lret
xlat
mov
inc
xchg
sub
sub
or
dec
jge
add
pop
xchg
out
jmp
pop
inc
xor
jmp
xchg
divl
mov
popa
add
cmp
or
and
jecxz
xlat
mov
xor
mov
jno
call
fstps
add
rorb
add
or
and
test
into
push
add
cmpsl
or
fs
push
cmpsl
js
jecxz
push
mov
sbb
lock
mov
loopne
xchg
push
mov
sbb
outsb
and
fcompl
mov
adc
ret
adc
pop
daa
test
push
fmull
and
push
popa
jns
mov
add
push
fadd
sub
adc
jno
adc
fistl
into
out
mov
rorl
in
xchg
andb
push
adc
dec
sbb
leave
adc
lea
int
add
les
push
xor
and
add
ret
clc
and
xor
int3
test
aaa
adc
and
daa
mov
push
sahf
pop
mov
ret
add
sbb
jne
or
mov
or
xor
pusha
push
and
inc
add
dec
xchg
pop
xor
push
xor
dec
mov
pop
es
fcompl
sbb
xchg
push
xchg
or
mov
loope
or
pop
add
adc
mov
sbb
add
push
repnz
jmp
and
dec
cwtl
sbb
push
leave
fstp
pop
lahf
fidivl
jae
jge
sub
dec
push
mov
jns
push
push
enter
sbb
leave
sub
lds
out
push
or
out
pop
jns
not
inc
or
andb
aas
sub
ljmp
push
stos
or
pop
sub
and
adc
jecxz
addl
jmp
xor
push
repz
adc
sub
jmp
jnp
icebp
repnz
pop
sub
dec
adc
lods
aam
dec
hlt
call
adc
pop
dec
cmp
add
push
add
outsb
inc
icebp
push
shlb
cmp
dec
insb
les
lds
pop
and
sub
nop
push
xchg
out
lret
call
jecxz
in
and
les
sub
sub
jbe
pop
mov
callw
push
icebp
ret
xor
adc
imul
sub
inc
in
adc
daa
sub
adc
dec
popf
lcall
outsb
insl
les
imul
add
dec
lea
sub
andb
sub
xchg
mov
sbb
dec
and
roll
scas
cmp
stos
dec
call
iret
pop
sbb
adc
sub
push
adc
int3
lahf
add
jp
insb
push
inc
sub
or
outsb
xor
rol
fwait
push
icebp
ljmp
in
mov
negl
inc
int3
icebp
push
jle
and
sub
add
sahf
and
in
sbb
cmp
mov
or
insl
ljmp
call
adc
cli
aas
sub
imul
gs
sub
mov
pusha
sbb
add
mov
dec
sub
inc
aam
or
scas
xor
xor
outsb
int
and
add
mov
outsb
pop
lret
and
jl
loop
jecxz
push
dec
and
inc
mov
loop
mov
inc
mov
rcll
mov
mov
xchg
xchg
dec
lcall
cmpsl
mov
cmp
dec
dec
pop
pop
fidivrs
xor
leave
mov
cmp
pop
test
shl
add
push
je
rcrl
call
xchg
ljmp
xchg
jge
jns
inc
clc
mov
mov
and
push
or
push
xchg
je
sarl
push
adc
pop
xor
jge
push
adc
push
pushf
sub
movsl
fcoml
or
ljmp
push
xchg
test
add
mov
imul
ljmp
and
xor
pop
push
pushf
jmp
adc
xor
mulb
pop
mov
and
add
sbb
das
sub
imul
dec
bound
mov
jno
test
and
mov
inc
cmp
lret
sbb
or
mov
xchg
enter
pop
pop
loope
out
pushf
push
push
adc
lahf
and
adc
xor
out
in
push
iret
push
and
fldt
lret
push
add
mov
shrb
pop
mov
call
dec
or
add
push
or
or
pop
push
mov
add
loop
cltd
and
out
movlhps
add
adc
xchg
mov
in
es
test
and
pop
loop
fistps
cmp
push
ret
fcomps
jg
aas
pop
pop
arpl
addr16
adc
aad
mov
mov
sub
loope
jp
adc
cmpsb
sub
nop
or
fcoms
aad
mov
mov
sub
push
adc
push
cmp
mov
xchg
push
adc
xor
xor
adc
mov
iret
xor
ljmp
fcoms
ficoml
mov
fildl
lds
cmpsl
pop
cmpsb
add
add
sbb
jecxz
inc
mov
sub
jbe
addr16
jnp
xchg
add
push
jl
imul
jns
out
lret
in
jmp
xchg
lret
leave
fldcw
jecxz
leave
pop
fsubrs
dec
push
mov
das
mov
jae
push
jmp
lods
faddl
jnp
mov
and
mov
inc
xchg
cs
dec
or
add
icebp
xchg
add
xor
mov
mov
shll
pop
cmp
out
xor
inc
sbb
les
dec
push
mov
sub
pusha
loope
jmp
jmp
sbb
sbb
dec
mov
repz
or
ret
or
xchg
daa
nop
aas
mov
lds
adc
mov
sbb
jmp
add
out
out
push
pop
cmp
pop
js
mov
std
dec
adc
fs
push
test
sub
xchg
and
shll
rcr
lods
sub
xchg
mov
xor
xor
xor
or
push
push
jmp
mov
fsubs
int
jbe
dec
popa
aas
push
and
pop
dec
dec
adc
add
or
jbe
cmpsb
or
shl
pop
mov
lds
jmp
out
sub
lea
jo
add
aam
in
mov
lret
jecxz
xchg
xchg
fisubs
stos
cli
xchg
mov
ds
xor
add
mov
es
dec
mov
jl
dec
adc
mov
adc
repnz
xchg
xchg
push
inc
dec
out
daa
loope
out
jp
popf
icebp
insl
outsb
xor
and
or
insl
fbstp
pusha
leave
stos
bound
dec
jmp
call
iret
pop
outsl
or
jbe
pop
push
mov
and
loope
imul
pop
xchg
mov
jne
pop
ljmp
dec
mov
sub
mov
inc
pop
jecxz
cmovle
pop
lock
mov
xor
dec
mov
add
pusha
mov
and
imul
nop
ds
cwtl
loopne
test
aad
clc
repnz
push
mov
loopne
daa
in
cli
ret
clc
aad
mov
pop
xor
cli
loope
cmp
xor
inc
andl
neg
out
std
sbb
ret
in
cmp
and
pop
repz
mov
mov
shlb
ds
bnd
icebp
xchg
mov
stc
arpl
loope
clc
dec
jmp
test
push
insl
dec
adc
dec
cmp
sub
inc
or
fdivr
mov
daa
pusha
mov
std
xor
or
jle
ret
fs
jecxz
adc
pop
dec
cmp
or
or
adc
xchg
add
or
inc
fsubrs
adc
mov
movb
mov
cmp
in
push
jl
sub
pop
xor
xchg
cmpsl
hlt
ljmp
jmp
and
test
jnp
add
pop
aaa
int3
loop
cmp
sbb
jl
mov
mov
scas
push
inc
xchg
mov
loop
hlt
iret
pusha
int3
out
in
iret
adc
add
jmp
not
mov
outsb
sub
add
cltd
jne
jne
mov
bound
enter
sbb
xchg
sub
add
pop
xor
xor
outsl
movsb
pop
and
movsl
es
cli
sbb
cwtl
add
and
jmp
jo
call
dec
in
cwtl
rol
nop
cmpsl
mov
xor
popa
add
mov
mov
inc
es
xchg
adc
cmp
mov
cmp
in
mov
rcll
sbb
hlt
adc
sub
decb
sub
mov
add
jmp
pop
dec
cmp
pop
jmp
not
int3
cmpsl
sub
dec
fiaddl
xchg
pop
loopne
or
mov
mov
bnd
inc
inc
xchg
mov
add
xlat
stos
and
push
popa
dec
add
sub
adc
ja
imul
aaa
add
out
add
push
mov
xchg
fsubrs
inc
fstpl
idivl
xchg
cmp
sub
lret
mov
jecxz
or
jmp
or
sub
jbe
inc
imul
adc
call
stos
pusha
mov
jae
mov
cmpsb
subb
or
jmp
lahf
pop
sarl
aad
cld
insb
add
xlat
cmp
mov
push
cmp
shlb
pushf
push
das
fld1
ja
push
dec
mov
cmp
mov
push
fld
mov
lods
enter
imul
xchg
insb
ficomps
pop
push
xor
pop
mov
jno
popa
jmp
cmp
shlb
addb
add
rcll
movsl
filds
scas
iret
ret
aad
pop
dec
jae
sbb
push
mov
xchg
rclb
js
jl
test
aad
mov
out
mov
leave
int3
repz
adc
decl
add
stc
pop
dec
roll
repnz
push
and
test
frstor
sbb
adc
sbb
pop
loop
xor
jmp
push
in
adcb
enter
lock
hlt
dec
test
pusha
in
jae
dec
sub
inc
inc
jmp
and
add
cmp
cmp
jbe
pusha
in
adc
insl
xor
jmp
push
jg
rolb
ljmp
and
loop
sbb
ja
nop
jns
cmc
inc
icebp
cs
lahf
outsl
mov
adc
and
je
push
loopne
jnp
popl
mov
mov
jp
push
popa
jmp
cmpl
sbb
js
cmp
push
cmp
cmp
test
fs
in
pop
mov
add
adc
iret
xor
pushf
jmp
xor
cwtl
mov
jg
xchg
sbb
pop
sarl
sbb
jae
xor
cmp
inc
neg
sahf
out
add
sub
sbb
ret
aad
mov
in
mov
test
add
mov
sub
push
push
push
inc
pusha
testb
sbb
popa
lock
xchg
aad
jo
jge
insl
hlt
ret
jmp
incl
push
stc
lret
test
pop
mov
mov
das
dec
lds
push
cmpb
hlt
ljmp
jle
mov
call
lcall
jp
xor
pop
sub
push
test
aam
jecxz
movlps
add
adc
repnz
movsb
mov
push
xor
dec
daa
data16
cmp
mov
and
je
ffreep
xor
xchg
cli
mov
movb
and
adc
jle
xor
sub
xchg
inc
add
outsb
mov
push
mov
pop
pop
jecxz
lahf
mov
adc
push
mov
xchg
mov
push
or
adc
je
push
lods
leave
pop
push
rclb
sub
push
mov
jge
inc
scas
adc
mov
xchg
mov
pop
mov
lock
add
pop
mov
cmp
jne
mov
sub
pop
jmp
adc
inc
sahf
jne
aas
mov
enter
adc
cmpsl
in
jmp
pusha
inc
das
ja
xor
mov
stos
je
repnz
jge
mov
push
sub
rolb
loopne
pop
mov
imul
cmpsb
call
enter
cs
mov
push
lea
out
popa
in
mov
shl
sub
not
push
mov
lret
lock
outsl
xchg
inc
mov
sbb
sub
push
jb
xchg
hlt
inc
pop
or
xor
sub
in
inc
jecxz
das
addr16
sbb
mov
movl
sub
mov
mov
js
add
sub
pop
push
test
xchg
cmp
in
jmp
std
pop
and
inc
push
jmp
call
les
in
ret
xlat
xchg
or
lods
push
push
ret
movsb
es
sub
push
xor
sbb
xor
xor
icebp
xchg
ds
xor
or
or
mov
xor
pop
mov
sarl
dec
sbb
adc
cmpb
add
xchg
mov
mov
orb
push
andl
and
lea
push
je
or
dec
mov
in
es
pop
xor
mov
jmp
mov
outsb
mov
pop
xchg
rol
in
outsb
mov
cmpsl
or
int3
imul
mov
jns
pop
in
daa
mulb
mov
daa
fistpll
mov
int3
add
lret
fwait
cs
out
jmp
mov
es
testl
lret
jbe
adc
addr16
enter
enter
daa
pop
dec
je
leave
pop
add
lods
rolb
dec
adc
mov
add
test
lods
push
call
pop
int3
sahf
out
pop
hlt
push
add
mov
jmp
inc
xor
adc
stos
int3
inc
push
or
push
and
call
idivb
push
inc
add
jmp
pop
popa
and
int
cmp
fsubrl
cmp
xchg
sub
icebp
add
push
push
xor
cmp
out
and
jno
add
jo
mov
sub
neg
shr
mov
loopne
daa
pop
rorb
into
loopne
or
push
and
pop
mov
das
pop
and
sub
dec
push
mov
or
mov
pop
notl
lods
fisttps
rolb
mov
mov
pop
push
sar
adc
push
movsl
mov
pmaxub
bound
or
adc
and
jmp
pop
sub
mov
gs
mov
jno
cmp
fwait
or
adc
push
jmp
cltd
sbb
pop
jg
push
mov
adc
xchg
aad
les
lods
mov
loopne
push
sub
fsubr
fwait
pusha
jle
mull
sbb
xlat
lcall
jo
cmpl
mov
push
loopne
dec
push
cmp
aas
lds
outsl
add
ljmp
mov
aas
add
push
add
pop
fsubrs
into
cli
sbbb
lahf
jbe
sub
adc
gs
jns
pop
add
sub
pop
jmp
xlat
adc
add
daa
lock
incb
pop
jmp
vmovupd
mov
add
inc
inc
fucomp
aam
dec
jge
cs
mov
movb
cli
rcll
or
pusha
mov
sbb
pusha
lea
loope
jmp
adc
popf
xor
dec
xor
push
mov
mov
add
push
cmp
xor
add
cmp
and
cmpsl
inc
lds
mov
xor
shrl
pop
lods
mov
or
mov
repnz
pop
lods
dec
mov
sub
je
cmpl
jns
jno
and
icebp
add
mov
shr
dec
pop
jns
push
movsl
test
clc
pusha
imul
dec
inc
sub
sub
sub
pop
push
xchg
lcall
push
sub
mov
or
jb
out
or
push
int
adc
std
dec
add
mov
lahf
pop
into
les
fistps
xchg
fdiv
test
mov
scas
pop
loopne
add
jmp
mov
lret
or
js
outsl
mov
andl
cwtl
push
aaa
jb
rclb
inc
push
xor
jbe
xchg
inc
shrb
movsb
adc
dec
adc
pop
add
dec
arpl
sub
pop
adc
rcll
pop
xor
adc
pop
scas
sub
mov
fs
adcb
enter
jb
es
pop
adc
mov
cmp
add
sahf
dec
pop
sahf
cmp
test
pop
inc
aam
xor
test
orb
std
jbe
pop
jo
jb
push
dec
neg
add
fs
mov
ljmp
out
test
mov
mov
ss
add
gs
push
test
or
call
pusha
inc
and
xor
dec
out
sub
add
loope
rcll
je
imul
call
push
test
lahf
jmp
and
loop
cwtl
aam
fcoms
xor
jb
pop
pop
push
mov
dec
lods
dec
es
daa
and
fisubs
mov
or
cmc
mov
pop
push
jmp
and
fists
fstpl
push
test
mov
cmp
pop
add
adc
ljmp
cmp
shr
bound
loopne
stos
aaa
daa
cltd
inc
push
inc
mov
nop
out
in
xchg
add
mov
out
add
outsl
push
push
sub
je
or
inc
push
popf
shrl
dec
add
in
shll
rorl
jmp
mov
ficoml
dec
sub
xchg
jmp
daa
iret
outsb
movsb
cld
push
ror
mov
and
pop
or
daa
loopne
jle
sbb
inc
push
jbe
clc
pop
mov
sub
rcrl
ret
jmp
sbb
and
or
jnp
sub
pop
xor
mov
sahf
or
ret
sub
mov
sub
mov
stos
es
adc
jmp
jp
fcmovbe
scas
mov
cmc
ljmp
mov
fnsave
cmp
mov
xor
call
adc
lcall
les
sbb
xor
adc
add
mov
push
dec
shr
add
jo
lahf
push
sbb
pop
mov
aas
lds
stos
rolb
ds
push
aad
pop
lret
or
arpl
xor
es
push
mov
xor
punpckhbw
jae
jg
mov
push
pop
cmp
or
mov
inc
les
mov
les
out
xlat
mov
jge
mov
std
std
pop
cs
push
jmp
fsubrl
pop
push
lds
inc
adc
mov
pop
ror
fildll
sub
adc
in
push
xor
mov
sbb
loope
pop
sub
sub
add
mov
push
push
jmp
repnz
sub
xchg
ret
pop
dec
cmp
mov
mov
ret
insb
jg
popf
js
repnz
fcoms
push
push
pushf
aad
gs
movups
mov
jp
and
insb
or
jbe
fwait
push
cmc
push
and
jbe
mov
inc
cltd
rcrl
mov
pop
fcom
out
ret
cwtl
xchg
push
add
lea
inc
rolb
jns
mov
pop
cmpsb
cmp
aam
cmpb
or
jge
add
rcll
add
sbb
daa
push
loopne
adc
daa
sub
test
or
iret
bnd
mov
jmp
stos
cwtl
lahf
rolb
test
mov
push
test
loop
lock
jmp
ljmp
cmc
sbbl
and
pop
sbb
xor
out
or
xchg
mov
inc
jne
or
add
push
fdivrl
or
jmp
aam
out
nop
out
or
push
add
stos
xlat
mov
or
nop
cmp
mov
shrb
or
imul
cmpsb
cmp
pusha
stos
dec
jmp
xor
jp
lds
loop
movsb
add
cmc
shrb
jmp
cs
push
ljmp
push
ds
dec
or
xor
push
inc
fsubrl
addb
nop
add
mov
cmp
sub
add
lret
mov
sar
cmp
jl
or
or
and
xor
pusha
lret
and
or
out
cmpb
sub
push
xor
div
push
rclb
dec
pop
add
je
pop
push
lods
mov
outsl
mov
imul
sub
fldt
pop
in
jmp
xchg
and
mov
fs
push
sbb
out
vmovd
push
fmull
mov
jge
mulb
pop
cmc
das
push
inc
popf
rcrl
jmp
out
arpl
pushf
xor
gs
es
sbb
inc
cld
daa
cmp
shl
int3
dec
nop
mov
adc
scas
mov
bound
jecxz
int3
das
mov
or
push
incb
mov
std
movsl
and
in
int3
pop
sub
loope
xor
test
rcr
movsb
xor
mov
cltd
add
repnz
enter
sbb
loop
lret
ljmp
sub
add
push
push
mov
int
push
std
sbb
mov
rcr
mov
sbb
loopne
je
rol
or
sti
ja
bound
xchg
arpl
push
mov
into
xchg
stos
mov
movsl
push
or
xchg
push
sub
push
mov
jmp
pop
pop
adc
cltd
aad
addr16
cwtl
mov
cmp
lret
data16
xor
add
push
popa
xchg
dec
xor
test
mov
pop
xor
mov
iret
mov
stos
fcmovnbe
dec
lea
repz
pop
insl
sub
xchg
add
add
leave
xor
sbb
push
nopl
xor
sub
movb
bound
cmpsb
aam
or
adc
in
inc
pop
mov
xchg
mov
jmp
ss
cmp
sub
out
leave
pop
mov
xchg
push
dec
or
mov
and
aad
xchg
mov
or
mov
dec
xor
cli
jmp
and
mov
pop
mov
pop
nop
push
loop
clc
icebp
push
or
add
adc
jmp
rolb
pusha
mull
jbe
dec
inc
sub
in
pop
inc
jge
out
add
fs
or
test
cld
sub
xor
pop
imul
jno
xchg
pop
inc
mov
pushf
loopne
cmp
or
dec
sub
out
cld
arpl
xor
imul
or
sbb
xor
test
dec
add
jnp
mov
push
int
pop
inc
lock
lds
and
aam
out
cmp
push
popa
cmp
popa
ds
not
inc
or
ret
jb
add
rcrl
jne
pop
xchg
xor
xor
add
loopne
xchg
adc
sbb
test
repnz
mov
jmp
lret
gs
dec
rcrl
push
inc
lret
cmpsl
push
nop
inc
mov
add
mov
jg
aas
or
dec
or
jo
adc
push
int3
push
jmp
push
test
pusha
and
stos
mov
jbe
pop
pminsw
idivb
cld
lcall
and
fwait
adc
cli
or
jb
and
pop
insb
sub
mov
dec
ljmp
pop
cmp
or
pop
push
push
lods
xchg
pop
ljmp
inc
je
or
ja
jns
jnp
pop
das
dec
movsb
test
inc
xchg
inc
incb
or
xor
jmp
push
lret
xchg
sbb
nop
jae
cmc
not
adc
test
jne
pop
shl
push
cli
ret
dec
adc
mov
jae
ret
mov
sub
outsb
mov
test
and
pop
jno
lret
adc
lock
sbb
xor
nop
sub
enter
arpl
sbb
sub
push
mov
xor
iret
fidivs
pop
pop
xor
jmp
icebp
pop
adc
inc
scas
pop
inc
mov
mov
and
adc
or
pop
xlat
dec
xor
pop
add
les
sub
shrb
or
es
push
stos
cmp
jo
push
jge
push
cli
or
insb
sub
xchg
lret
pop
mov
push
mov
mov
or
pop
ss
inc
or
pop
add
aad
test
xor
lock
xchg
incb
inc
jmp
mov
pusha
neg
push
adc
adc
lret
cmp
pop
push
lea
inc
jns
daa
dec
test
lock
xor
lahf
iret
mov
loop
xchg
call
push
xor
das
add
jae
xchg
ror
adc
adc
rclb
add
jbe
xor
push
out
adc
add
or
loop
cmp
fidivl
pop
mulb
jge
xchg
popa
dec
inc
outsl
inc
cwtl
sar
adc
ror
adc
je
dec
sbb
sbb
mov
or
xchg
xor
push
cmc
jp
test
mov
arpl
xor
mov
orb
mov
mov
dec
xor
adc
add
enter
hlt
pop
test
and
xchg
xorl
push
inc
sbb
sbb
leave
or
jnp
mov
rcl
dec
sub
sarl
sub
mov
fnstenv
push
or
sbb
xorb
lret
sub
and
cmp
in
out
pop
add
sub
xor
or
pop
xor
and
sbb
add
dec
push
or
pop
adc
cmp
pop
jmp
cmp
pop
mov
mov
shlb
and
mov
xor
icebp
pop
add
cmp
cmp
not
shl
popa
dec
fisubrs
movsl
push
cmp
xchg
push
repnz
dec
adc
add
cmp
repnz
jmp
stc
xor
ljmp
push
sbbb
xor
jle
insb
sub
jmp
inc
add
daa
inc
push
mov
jge
mov
andl
jl
push
pop
jne
js
xor
outsl
push
mov
pop
fsubr
jl
or
inc
sahf
add
add
jae
ss
ret
scas
add
inc
addr16
das
dec
bound
inc
or
movsl
pop
or
sarb
jae
inc
mov
pop
addr16
call
xorb
or
sbb
ficomps
movsl
adc
dec
cmp
pop
mov
sbb
xchg
and
stc
loopne
mulb
push
jb
inc
and
sbbl
jmp
pop
ret
rclb
push
xor
int3
mov
enter
pop
je
jmp
insb
cmpsl
add
cmc
mov
sub
movsl
sub
iret
or
jle
cmp
and
ret
or
fldl
jo
icebp
sti
inc
push
xchg
adc
js
push
push
out
mov
jb
sbb
sti
xchg
add
sub
inc
mov
jecxz
inc
mov
dec
add
fs
push
push
mov
pop
in
ret
lret
sub
mov
sbb
adc
and
push
imul
loopne
lret
or
adc
call
cwtl
shl
mov
in
xchg
push
add
add
jecxz
mov
in
cltd
sti
lods
and
push
lds
in
pop
adcl
nop
lock
xchg
push
pusha
inc
push
adc
outsb
pusha
sbb
mov
sub
inc
addr16
inc
mov
les
ficompl
test
lock
xor
mov
fsubrs
push
sub
mov
jae
jo
or
repz
nop
ss
pop
dec
lock
pusha
push
loopnew
js
push
push
mov
not
mov
out
add
or
rcrl
mov
push
lret
mov
jae
cmpsb
dec
outsb
int
icebp
lret
lods
mov
mov
int
add
push
add
stos
clc
cmp
call
cmp
add
mov
xor
sub
push
jmp
jmp
loopne
out
popf
lds
aas
mov
xor
stos
sub
mov
scas
addr16
ljmp
in
dec
leave
ja
fsubl
add
xchg
dec
cmp
data16
int3
jmp
add
mov
daa
add
pop
inc
push
push
sub
stc
inc
pop
lret
pop
scas
push
mov
adc
je
sub
push
pop
mov
pushw
push
mov
not
roll
push
lods
xchg
stos
sbb
adc
out
nop
popf
dec
or
rorl
imul
mov
adc
icebp
jmp
addr16
popa
gs
in
shr
fisubrl
or
cmp
jbe
and
adc
into
or
fiadds
div
popf
sbb
pop
into
mov
ss
lds
lds
insb
sub
xor
adc
xor
nop
enter
pop
test
sbb
mov
rcll
imul
cmp
jno
mov
lods
scas
dec
scas
in
sbb
pop
jb
and
xor
adc
dec
inc
mov
pop
push
cmpsb
aam
test
mov
sahf
sbb
dec
retw
cld
jle
inc
jnp
push
pop
push
inc
or
or
call
stc
fcoms
dec
imul
add
sti
cmpsl
enter
push
adc
mov
sub
cmp
cmc
popa
pop
xchg
inc
xchg
jo
add
jp
das
inc
or
mov
xor
mov
xchg
enter
adc
imul
test
or
icebp
cmc
mov
enter
sbb
testb
orl
add
nop
iret
xor
in
out
sbb
xor
add
and
push
push
rolb
cmp
sub
jmp
lea
mov
sub
jo
push
das
add
jle
add
add
mov
inc
sub
jmp
clc
push
add
adc
sbb
or
fisttpll
add
sub
jmp
cmpl
je
popf
adc
jcxz
adc
out
sub
xor
inc
or
adc
mov
adc
cmp
sbb
and
inc
in
cld
lds
popa
and
cs
cwtl
les
out
je
lock
and
pusha
out
xchg
and
pop
aam
bound
dec
mov
inc
jge
daa
mov
clc
inc
out
mov
jge
dec
push
test
popf
popf
popa
xchg
xchg
pop
das
pop
ret
rcrl
out
je
or
das
into
addr16
mov
or
adc
and
mov
push
dec
sub
ds
or
add
adc
lret
mov
jmp
pop
push
add
mov
sbb
cld
push
xlat
sbb
inc
jb
fiaddl
push
xchg
xor
incb
pop
push
push
mov
xor
or
xor
icebp
js
aaa
ljmp
lock
and
xor
xchg
adc
cs
push
outsb
jmp
pop
inc
mov
imul
pop
add
cmpsl
jae
pop
cmp
fdivs
fnstcw
ret
sub
popf
fldl
movb
ds
leave
mov
pushf
fsubr
mov
stos
repnz
fimuls
cmp
adc
push
cmp
or
dec
negb
xor
ret
aas
push
push
and
push
pop
pop
push
popa
subl
push
adc
fwait
cmp
ret
cmp
mov
add
push
adc
jl
mov
add
lcall
sti
adc
call
sub
push
adc
sub
stos
lret
adc
push
fs
testb
pop
cmp
out
jns
es
push
or
dec
mov
aam
in
stos
push
pop
lea
shl
movsb
dec
jg
adc
call
mov
mov
mov
jno
or
ss
scas
shll
jo
in
mov
popl
pop
push
outsl
inc
pop
cli
mov
or
movsb
idivl
or
and
fistpl
std
popf
inc
push
push
and
outsb
add
adc
xchg
rorl
sbb
pop
push
pop
add
xlat
pop
int3
and
pop
and
or
nop
mov
lods
inc
xor
pop
sub
mov
inc
loopne
rcll
js
in
leave
cmp
add
mov
hlt
sub
push
scas
add
not
pusha
xchg
mov
sub
fs
inc
hlt
sub
enter
push
adc
adc
push
push
mov
cmc
test
pop
out
pusha
dec
sub
inc
add
add
mov
nop
push
jb
and
cmp
dec
jmp
push
stos
push
mov
xchg
and
fdivs
lods
sbb
add
mov
mov
push
and
dec
or
cld
cmp
and
cmp
cmpb
jg
in
or
and
sbb
stos
xor
jnp
cltd
loop
push
jmp
popl
adc
ret
pop
sub
out
repz
insb
xor
clc
jmp
out
int
pop
xchg
jno
imul
mov
test
pop
adc
push
xchg
add
sub
pop
clc
sti
push
mov
cltd
subb
sarb
xor
or
in
int3
push
jmp
int3
adc
in
xor
rcrl
call
mov
mul
js
dec
dec
xor
xchg
scas
inc
jge
push
inc
xchg
stc
insl
movsl
mov
xchg
cli
fcoml
cltd
int
outsb
adc
dec
mov
xchg
cwtl
jo
or
outsb
xchg
add
fwait
jmp
xchg
push
or
xor
pop
jmp
xor
out
pop
cmpsb
xchg
scas
ficoml
jne
mov
sub
lcall
mov
cld
lret
push
out
les
repz
add
popf
icebp
nop
and
xchg
mov
test
shl
adc
pop
push
sub
adc
dec
imul
imulb
jae
pop
test
adc
stos
sbb
jb
or
xorb
add
into
jmp
fsubs
cs
les
lret
mov
ficoms
sbb
nop
inc
push
push
adc
sbb
xor
ror
jmp
fdiv
rcrl
cs
adc
cmp
push
sbb
push
sub
outsl
sbb
sbb
lds
mov
jae
add
fiadds
cmp
inc
test
fxtract
stos
ds
rcrl
mov
gs
jle
push
pop
pushf
push
xlat
xchg
in
and
jge
mov
fiadds
dec
push
mov
or
mov
dec
out
lds
mov
add
pop
push
mov
jmp
pop
mov
add
ret
jp
out
jecxz
add
movsb
push
xor
cld
inc
pop
xor
shlb
les
pop
stos
push
loopne
addb
pop
mov
pushf
cmpsl
cld
push
loopne
iret
xor
push
and
aam
pop
jbe
push
mov
cmp
mov
xchg
addr16
test
loop
sbbb
aad
xchg
iret
jl
movsbl
shll
add
mov
nop
jmp
or
daa
sbb
sub
xlat
dec
sbb
dec
xchg
push
pop
call
aas
add
add
jne
outsl
mov
adc
adc
adc
pop
xor
mov
negb
sub
shll
movsl
fs
outsl
mov
sub
push
pop
mov
test
mov
scas
enter
adc
dec
insl
cmp
fwait
lahf
add
into
lock
cmpsb
add
pop
push
mov
ret
push
jo
bound
mov
mov
icebp
hlt
fnsave
fs
adc
ret
dec
push
jmp
jl
xchg
mov
jmp
loopne
jp
push
sub
in
fs
xor
sti
sub
jo
or
imul
add
scas
and
out
dec
push
jle
add
lea
dec
and
pop
repz
sub
mov
xor
xchg
pop
sub
cmp
pop
scas
or
adc
andnps
pavgb
les
sub
addr16
leave
pop
mov
test
lret
add
push
mov
mov
pop
sub
mov
add
out
xchg
push
rcl
jl
add
shlb
dec
push
ss
push
add
dec
aaa
cltd
shrl
pop
jo
sbb
adc
pop
push
dec
call
les
scas
sub
and
mov
xor
pop
and
bound
dec
sub
add
pushf
int3
or
add
outsl
in
repnz
mov
jne
nop
pusha
sub
or
pop
sbb
leave
or
loope
sbbb
xchg
cmc
inc
incb
sub
insl
je
fnsave
mov
xchg
test
adc
dec
sbb
add
xchg
or
fimuls
ret
sbb
sub
adc
movsl
jno
pop
xor
rolb
je
add
cmp
sbb
jmp
dec
pop
push
cs
mov
jle
pop
outsb
repz
lret
or
and
mov
loopne
inc
push
sbb
popa
push
jns
sarl
xchg
out
pop
adc
push
mov
push
inc
dec
push
call
push
std
fsubs
out
mov
cmp
sbb
cmp
in
add
or
mov
or
pop
jge
lcall
dec
movsl
or
dec
push
nop
orb
loop
push
pop
stos
mov
insb
pop
mov
inc
or
test
and
sahf
inc
dec
dec
lea
add
adc
cmp
lock
enter
sbb
mov
push
xor
cmp
popf
jmp
adcb
lods
jg
pushw
or
cltd
and
sbb
pop
mov
xor
stos
fisubrl
cmp
mov
and
pop
xchg
push
out
es
or
dec
jge
jns
and
fdivl
push
jnp
xchg
push
cltd
ja
icebp
pop
loope
xor
popf
inc
pop
mulb
stos
mov
cmp
dec
out
jge
into
pop
xor
dec
add
mov
or
int3
mov
push
stos
push
leavew
pop
jmp
loopne
test
and
jg
adc
mov
sbb
idiv
dec
dec
shr
andnps
cmp
and
popa
or
rcrb
jmp
push
push
popa
xchg
stc
adc
movsb
sub
dec
mov
pop
ja
divl
pop
pop
pop
aam
jmp
pop
add
testb
xchg
ja
inc
jne
bound
dec
and
cmp
pop
ret
xchg
bound
sub
popa
push
xlat
adc
stos
fs
push
jecxz
cmp
cmp
orb
inc
xor
push
cs
lret
jb
dec
hlt
imul
mov
stc
es
cmp
mov
push
or
mov
and
addr16
push
and
mov
loope
bound
jp
sahf
out
icebp
in
push
movsb
sti
inc
xchg
mov
dec
in
add
aas
mov
add
fidivrl
lret
std
xorb
js
mov
lcall
pop
push
push
cmp
xor
frstor
shlb
cli
inc
mov
das
daa
mov
sbb
cmp
insl
jbe
pop
xor
pop
stos
frstor
pop
sub
orb
hlt
je
lret
or
adc
subl
std
inc
cld
push
iret
push
inc
ret
pop
adc
mov
jb
pusha
push
or
out
or
bnd
iret
movsb
mov
add
test
loope
add
movsl
jbe
xor
push
int
aad
rorl
jmp
neg
adc
pop
iret
fs
dec
xor
mov
add
sub
add
sub
ljmp
pop
inc
mov
ret
add
push
mov
not
push
repz
xor
cmp
or
out
pop
or
clc
pusha
adc
inc
xor
pop
in
jg
or
cmp
out
pop
in
mov
push
mov
adc
icebp
sub
add
xchg
lcall
cmp
push
cmp
das
jmp
loope
push
cmpxchg
out
cmpsb
hlt
aad
loopne
adc
inc
test
jbe
sub
cmc
es
adc
sub
ja
add
pop
jle
lods
push
js
xchg
jae
dec
xchg
mov
jb
jg
and
and
pop
test
cltd
loope
pusha
outsl
out
and
insl
ret
or
push
pop
pusha
adc
add
push
loope
xor
xlat
mov
jns
movsb
ds
add
sub
rol
pop
adc
sbb
sbb
and
xchg
xor
aam
or
push
or
cmpsl
hlt
cmp
cmp
pop
sahf
push
das
mov
test
dec
mov
sub
fiaddl
scas
lock
icebp
jns
adc
ret
or
add
cmpl
jnp
pusha
mov
jno
sub
pop
sub
jnp
adc
pop
add
mov
mov
mov
pop
jecxz
and
push
insb
mov
add
jge
adc
and
mov
mov
push
shlb
dec
pop
cltd
mov
pop
test
out
push
nop
in
lds
movsb
jno
sub
outsb
repz
push
outsl
and
out
ret
inc
or
popf
das
jl
not
add
inc
mov
or
jp
popa
or
test
mov
pop
jg
push
repnz
pop
xchg
pop
cmp
pop
sub
jle
ud1
movsb
sahf
cmp
leave
fsts
push
pop
out
out
push
jo
adc
mov
and
cmp
inc
popf
ljmp
imull
rclb
int
xchg
pop
cli
inc
xor
xor
fidivl
int3
or
int3
dec
pop
and
cmp
pop
jl
es
xor
jge
inc
ffreep
mov
fwait
adc
sub
fistpl
sbb
rcrl
js
sbb
test
inc
xchg
lock
jne
pusha
sub
pushw
mov
lahf
pop
mov
add
push
cmp
dec
in
into
and
sahf
jp
mov
mov
cmp
pusha
push
mov
push
pop
sbb
out
jns
pop
or
xor
mov
sub
lcall
adcl
pop
add
cmp
aad
dec
xchg
aad
sub
mov
je
push
inc
and
push
add
jnp
dec
push
cmpb
dec
fcoms
jge
rorl
in
inc
sub
out
repz
pop
enter
lods
xchg
repz
pop
outsl
in
inc
xlat
xor
and
jl
dec
mov
decl
jmp
jmp
adc
push
mov
mov
add
pop
mov
cwtl
or
fiadds
and
push
in
jle
sub
clc
inc
addb
dec
test
repz
testl
ljmp
pop
stos
iret
cltd
fsub
dec
cs
popf
xchg
pop
lcall
mov
dec
cmpsb
add
lds
adc
and
js
lods
scas
ror
dec
inc
in
sub
jae
es
outsb
jmp
push
push
mov
into
mov
testl
cmp
xchg
sbb
and
or
or
adcb
lds
mov
jmp
adc
mov
in
pop
and
pusha
addl
fdivrp
inc
popf
pusha
jle
addb
jns
loop
mov
push
push
ret
cltd
or
shll
test
sbb
or
inc
sub
ret
stc
mov
add
sbb
loopne
xchg
rcrl
and
pop
xchg
rcrl
sarl
std
mov
fnstcw
xor
pop
xor
loopne
es
rcrl
movsb
aas
es
test
aad
mov
inc
xchg
ficomps
jg
pop
pop
call
mov
or
lret
pop
xor
jbe
jecxz
ds
les
push
and
sahf
aad
pop
hlt
mov
xchg
push
ljmp
bound
in
cltd
int
inc
test
loopne
fists
sbb
lods
inc
and
jmp
dec
pusha
jns
div
jp
nop
dec
in
popl
lret
into
adc
sbb
jmp
pop
xchg
pop
insl
jb
addl
xor
mov
xorl
icebp
inc
push
push
pusha
idivl
into
fisubrs
out
testl
pop
push
mov
add
mov
or
into
pop
mov
int3
cwtl
into
push
inc
and
adc
jl
sbbl
mov
sub
leave
add
out
pop
push
inc
jmp
jmp
sub
daa
mov
fs
aad
sti
dec
popf
andl
add
sub
lret
push
add
xor
mov
xchg
push
lock
ss
cmp
lods
inc
push
mov
jmp
addr16
xchg
jp
into
loopne
mov
cltd
cmp
dec
imul
adc
gs
clc
push
daa
jno
pop
out
push
mov
xadd
add
xchg
hlt
pop
pop
sub
xchg
sbb
jae
imul
mov
mov
mov
cmp
lret
cltd
pusha
es
add
sub
cs
xor
push
scas
test
mov
daa
ja
mov
add
jbe
adc
arpl
or
mov
ss
ds
in
add
xchg
fadds
aas
clc
mov
jle
shll
pop
out
cs
add
cli
jbe
xchg
mov
inc
scas
adc
xchg
cmp
cmpsb
inc
xchg
test
test
shlb
sub
sbb
dec
popa
pop
and
pushf
mov
pop
mov
xlat
loop
loopne
mov
xor
add
cmp
jmp
popl
inc
dec
mov
dec
push
push
insb
enter
leave
rolb
nop
push
push
outsl
mov
jmp
push
push
adc
pushf
or
push
out
inc
into
dec
rclb
mov
popl
pop
push
out
jl
sub
enter
push
mov
or
pop
sbb
or
and
sub
mov
sub
or
leave
adc
mov
push
push
jb
jp
pop
and
cmpsl
je
imul
sbb
into
xor
dec
call
push
mov
jns
cltd
sbb
or
outsb
lcall
push
and
dec
mov
insl
dec
dec
or
mov
inc
xor
out
fs
shlb
pop
pop
arpl
push
addr16
cli
inc
mov
or
cmpl
jmp
mov
cmpb
xchg
pop
xlat
nop
or
mov
inc
insl
icebp
and
adc
push
add
or
aam
aas
jns
jmp
push
and
sbb
popa
mov
and
adc
push
addps
in
add
cmc
mov
int
xchg
adc
clc
mov
fstpl
jge
jg
jno
pop
sbb
or
xor
pop
test
or
xchg
push
jmp
pop
and
cmp
or
or
add
add
pop
pushf
clc
inc
pop
sbb
dec
adc
rolb
mov
add
push
pusha
into
repnz
cmp
loopne
adc
push
xchg
inc
push
shl
dec
push
repz
dec
and
mov
and
jle
lock
mov
bound
mov
test
jmp
aam
push
test
sbb
sbb
loop
inc
fs
outsl
mov
cmp
fwait
or
outsl
jg,pn
ret
or
repz
mov
jg
xchg
mov
mov
hlt
lock
xor
je
dec
rcll
sub
push
lret
xchg
enter
ret
or
fwait
adc
mov
add
add
ja
movsb
in
dec
adc
dec
shl
dec
adc
inc
add
push
clc
xchg
int
adc
test
add
add
push
js
push
and
iret
jnp
jmp
xchg
add
lret
or
in
popa
inc
or
sbb
cmpl
or
sbb
cmp
sbb
pop
add
adc
xor
adc
test
jecxz
adc
sbb
fimuls
lcall
movl
mov
ss
push
and
mov
add
fimull
arpl
or
or
cwtl
dec
push
bound
mov
add
add
push
sub
add
rolb
and
enter
gs
add
enter
inc
or
les
mov
arpl
dec
mov
pushf
aaa
or
xor
or
in
fwait
lret
adc
into
sbb
push
bound
cltd
add
sbb
cwtl
pop
and
add
mov
adc
nop
xor
add
out
sahf
cwtl
sub
mov
mov
sbb
xor
sub
adc
inc
sub
pop
add
sub
sub
and
jns
orb
add
test
inc
push
sub
dec
adc
jle
inc
push
inc
adc
mov
or
sub
cwtl
mov
adc
enter
test
out
loopne
inc
mov
fistl
add
fidivrs
lahf
add
or
xor
push
xlat
test
rorb
sbb
cmp
mov
and
adc
sbb
mov
xor
dec
sbb
jno
inc
mov
push
sbb
les
and
pop
xor
icebp
mov
dec
fnstcw
faddl
pinsrw
sub
lods
push
push
or
xor
scas
inc
aam
add
xlat
pop
loopne
adc
add
ret
push
cld
call
push
dec
test
cmp
push
cmpsb
adc
inc
add
sbb
mov
add
dec
dec
or
jne
mov
mov
add
mov
and
sub
push
faddl
loopne
push
xor
xor
loop
int3
lahf
fcomi
add
push
mov
sub
ljmp
add
gs
sbb
insl
push
push
inc
pop
pop
shlb
fnstenv
push
pop
std
xchg
adc
jmp
or
push
add
in
dec
push
mov
mov
xor
sub
mov
adc
arpl
stos
jno
push
jo
loope
mov
test
scas
ret
xor
jns
dec
das
jmp
bound
mov
dec
sbb
mov
add
jbe
inc
les
pop
dec
clc
in
jno
clc
add
mov
pop
push
mov
and
bswap
mov
insb
pop
hlt
sub
or
mov
jbe
mov
xchg
xor
ds
xchg
iret
mov
pop
push
popf
bound
loopne
mov
or
fildll
repz
mov
and
add
mov
addl
lahf
and
filds
mov
jl
leave
inc
pop
sub
ljmp
clc
pop
rolb
shll
jle
cmp
loopne
or
call
mov
fimuls
test
rorl
sub
push
mov
cwtl
add
xchg
or
scas
lea
and
pushf
repnz
icebp
out
push
movsb
or
loope
and
mov
jle
and
xchg
loope
popf
pop
fistpll
dec
sub
jbe
clc
popa
pop
mov
ds
push
xchg
std
cmp
jb
jbe
xor
insl
or
stos
imul
sub
push
mov
sbb
flds
fstpl
add
sbb
into
cmc
shr
popf
jnp
jp
adc
xchg
cmp
ja
jns
cmp
movsb
add
inc
sbb
pop
mov
push
jo
je
adc
xchg
imul
pop
sti
or
pop
add
cmpsb
mov
push
push
pop
mov
and
adc
mov
and
jl
aas
outsl
jbe
mov
add
cltd
sub
scas
fwait
or
outsl
and
lods
aad
or
test
mov
bound
pusha
hlt
add
pop
pop
mov
verw
jbe
incb
sti
jmp
jne
pop
pusha
imul
push
jae
xor
fwait
and
push
lods
dec
xchg
pop
scas
cmp
cli
dec
pop
cwtl
outsl
dec
xchg
andl
xchg
ljmp
cmp
inc
or
pop
add
cmp
dec
add
xchg
mov
out
rcrb
jmp
sbb
jp
push
cmp
or
ficomps
cwtl
loop
sub
pop
outsl
in
ret
and
jmp
fcoml
jg
mov
shl
lock
pop
cmp
push
jp
sub
das
sbb
sub
xchg
push
loopne
mov
sub
pop
in
fwait
outsl
or
stc
and
inc
jbe
aaa
mov
inc
push
xchg
sbbl
add
into
pop
push
enter
jno
call
xchg
sbb
add
or
pusha
in
xor
fdivrl
add
jle
xor
jbe
test
int
add
in
aad
jb
popa
scas
adc
pop
or
cmp
and
shl
hlt
lea
aad
xor
andb
dec
jmp
adcl
ret
repz
mov
or
fisubs
mov
push
inc
bound
adc
pop
cli
mov
test
dec
mov
shl
andb
push
testl
and
out
mov
popf
xchg
outsl
popf
and
mov
jle
inc
push
icebp
add
scas
sbb
adc
or
pop
add
imul
lds
xchg
neg
mov
rcrl
sti
jno
adc
mov
andl
xor
sbb
nop
add
aaa
inc
fsubl
xchg
in
shl
xchg
rclb
sbbb
cmp
or
sub
cmp
es
sub
pusha
nop
cmpb
sub
pop
xor
and
or
nop
pop
jp
mov
shll
lods
nopl
adc
loopne
jb
push
lahf
test
cmpsb
hlt
or
xchg
test
int3
popf
shrb
sub
xor
push
cmp
inc
mov
inc
mov
cmp
jo
mov
clc
jmp
push
push
push
adc
adcl
inc
jb
mov
std
repz
scas
icebp
fwait
xchg
clc
sub
cwtl
daa
jo
push
cmp
jo
pop
or
jge
cld
add
addb
inc
rclb
xor
sar
repz
cs
and
mov
pop
scas
or
dec
and
idivb
pop
ja
and
pop
dec
pop
or
sahf
sbb
sbb
adc
test
or
into
daa
jg
movsl
or
pop
sub
orb
and
lods
jae
subb
add
cwtl
cmc
lock
call
jmp
out
mov
dec
lret
xor
jmp
outsl
lret
insl
pop
mov
arpl
and
pop
mov
pusha
xor
call
cli
mov
daa
mov
adc
xchg
dec
dec
add
mov
add
testl
cmc
push
fcoms
jmp
pop
mov
popf
loope
sahf
sbbb
hlt
data16
pop
ds
lods
sbbl
in
push
mov
dec
add
adc
dec
or
ja
sub
jmp
mov
rcl
dec
xchg
push
or
adc
push
jmp
lret
js
int3
sbbb
push
enter
or
cmp
shl
pusha
in
or
mov
adc
jmp
or
and
pop
mov
cwtl
sub
int3
or
xor
cmp
and
sti
cmp
sbb
inc
push
mov
mov
lock
mov
mov
int3
mov
fnstenv
in
lock
repz
fiadds
mov
subl
sbb
popf
inc
loope
inc
jge
mov
mov
in
popf
js
sti
xor
cmp
add
outsl
pop
loopne
out
mov
and
ret
inc
repnz
add
ss
add
notl
mov
push
sbb
lahf
and
repz
adc
push
sub
add
and
mov
pop
lret
push
jnp
sub
sbbb
pop
push
mov
div
mov
push
dec
loopne
sub
or
sbb
scas
fiadds
aas
mov
mov
pusha
popf
lock
jne
jno
add
jmp
pop
int3
test
xchg
mov
lcall
into
push
xchg
add
adc
loope
fisttpll
mov
adc
adc
inc
mov
jnp
add
and
add
fs
and
loope
sub
ret
mov
sbb
test
pop
jecxz
pop
cmp
inc
adc
pop
inc
outsb
in
jmp
popf
pop
jns
mov
inc
leave
ja
insl
mov
scas
mov
test
mov
stc
mov
sbb
stc
cmp
jg
mov
inc
repnz
inc
pop
xor
mov
and
mov
jns
xor
mov
dec
dec
dec
daa
pusha
push
pop
xor
movsb
ret
frndint
mov
adcb
cli
lret
orb
inc
and
bound
jae
call
das
pop
cmpl
sub
mov
pop
in
loopne
mov
je
rorl
lock
push
sbb
neg
xorl
bnd
mov
leave
test
add
hlt
cmp
push
ja
mov
pop
sub
xor
addb
out
mov
cmp
pop
push
int
xor
pusha
not
scas
sbb
daa
jle
js
xchg
ficoml
sbb
fildl
inc
push
mov
push
jnp
mov
dec
mov
in
adc
out
pop
pop
ljmp
sahf
orb
sub
add
rorb
adc
std
rclb
push
jecxz
push
cli
pushf
jbe
ljmp
jmp
mov
mov
jbe
inc
arpl
jg
sarl
adc
xor
pop
sbb
rcrl
insb
adc
xor
int3
mov
jo
xor
inc
add
leave
cwtl
cmove
cli
mov
mov
jbe
pop
push
daa
into
lods
outsl
push
mov
pushf
inc
jl
aad
adc
push
push
and
adc
fiaddl
test
pop
data16
push
jmp
fdivl
add
cmp
xlat
stos
add
xchg
fiaddl
mov
mov
dec
add
ror
in
xor
pop
xchg
jg
push
mov
cltd
popf
dec
jnp
pop
enter
sub
jg
scas
jnp
fmull
cwtl
ss
dec
pop
hlt
inc
push
inc
cltd
push
and
and
loop
shl
and
cli
jnp
sub
call
adc
jae
cmpsl
xchg
out
flds
sti
sub
sub
lret
es
xchg
mulb
jg
dec
pop
clc
cmpsl
add
adc
stos
nop
xor
or
jo
loop
pop
fimull
pop
shll
adc
sbb
xor
je
mov
or
pop
incb
or
test
cmc
push
cmp
inc
xorb
shl
pop
neg
ret
popa
aaa
gs
neg
std
or
sbb
mov
xor
push
imulb
inc
sbb
xlat
add
sub
or
aas
jnp
xor
in
mov
dec
sub
xor
enter
push
cmp
xor
lods
rcrb
outsb
add
add
jge
adc
jbe
or
jnp
jg
push
xchg
cmpsb
mov
clc
or
add
mov
filds
addr16
dec
xor
jg
rorb
adc
addr16
mov
mov
xchg
fisttpl
or
adc
xor
out
out
adc
shlb
pop
enter
aaa
dec
sti
sbb
adc
ret
or
mov
pushf
push
popf
jle
and
mov
xor
and
int
add
popa
push
pop
je
cmp
aas
sub
add
jmp
into
or
jp
testb
inc
push
mov
add
mov
test
fiaddl
sbbl
repnz
fcomps
add
movsl
push
mov
sub
xchg
in
dec
cmc
sbb
add
loope
aam
in
out
addl
scas
out
pop
mov
fistl
xor
mov
fistl
aas
adc
in
or
jl
add
outsb
and
or
jno
psllw
scas
inc
add
scas
call
mov
std
out
std
xchg
in
lahf
mov
repnz
pop
lea
adc
add
pop
inc
or
jae
adc
push
jmp
pusha
adc
cltd
insb
and
movhps
or
ljmp
les
out
jmp
test
popa
push
dec
push
push
shlb
int3
pop
xor
sub
fists
lock
jmp
mov
add
mov
dec
jle
push
mov
sub
idivb
mov
movsb
rcll
or
adc
leave
adc
jmp
push
push
adc
or
jg
mov
mov
imul
dec
adc
arpl
inc
push
mov
inc
push
adc
ret
push
cltd
mov
repz
test
add
xor
add
push
jge
cli
inc
push
mov
mov
call
daa
pop
aad
arpl
cmpl
call
je
xlat
mov
cmp
jmp
mov
loope
pusha
hlt
and
ret
adc
cmp
mov
push
mov
imulb
subb
pop
sub
cld
inc
fcompl
cld
mov
or
dec
add
or
int3
xchg
lcall
adc
sub
lds
mov
add
or
sbb
ljmp
push
neg
or
sbb
pop
sub
or
push
sbb
sbb
adc
add
addl
inc
adc
icebp
es
notb
sbb
xor
add
icebp
ss
dec
mov
daa
jo
sti
jl
jmp
mov
pop
test
jecxz
loopne
pop
push
add
lea
paddd
pop
cmp
jge
lods
jle
pop
sbb
mov
fbld
jl
cmc
adc
mov
cmpsb
sub
dec
pop
cmpb
jge
inc
adc
je
jns
push
jg
sub
xchg
gs
ret
repnz
jmp
jmp
subl
fimull
xor
rcrb
push
pop
mov
xor
mov
jno
ret
aas
lahf
and
inc
pop
or
pusha
and
pop
sub
dec
nop
in
jg
cmp
testb
inc
ja
xchg
add
repz
adc
bound
mov
mov
cld
jo
mov
sub
push
fstl
jp
dec
sub
daa
add
pop
add
xor
dec
jnp
dec
adc
inc
sbb
popf
push
imul
xchg
test
pop
in
jno
and
xor
aad
not
jecxz
in
or
clc
push
ret
std
ret
lds
sub
jmp
push
addr16
mov
pop
loop
ret
push
jno
mov
dec
xor
xchg
or
test
xchg
mov
movsb
jns
and
xor
xchg
jo
add
push
mov
pop
push
adc
pop
sbb
mov
pop
fs
pop
and
or
xlat
mov
add
lds
mov
dec
movsb
jecxz
inc
das
mov
fdivr
stos
das
test
push
mov
aaa
sarb
ds
out
in
cmp
mov
jae
mov
and
out
js
shrb
sbb
notl
mov
or
jbe
aam
adc
mov
mov
sbb
push
push
cmpsb
arpl
push
pop
pop
movsb
or
dec
test
lea
fsubrp
test
sbb
movsl
je
jb
adc
fisubrs
adc
and
sub
dec
aas
sub
clc
icebp
or
neg
int3
jg
arpl
fcoml
and
scas
push
nop
leave
jg
adc
out
xor
pop
xchg
and
mov
je
mov
xor
pop
sbb
cs
sub
das
movsb
add
inc
shrb
pop
in
lret
clc
pop
jl
rcrl
and
cmp
mov
fcomip
lods
lahf
arpl
cli
movsl
imul
repnz
add
add
bound
dec
aad
fs
jb
cmp
popa
test
adc
sbbb
inc
mov
hlt
and
roll
clc
xor
jno
cs
add
add
xchg
repnz
add
jae
shrb
loopne
hlt
sub
mov
or
add
ret
cwtl
inc
pop
andb
pop
mov
pop
xchg
data16
aam
xor
outsb
sarb
xchg
push
fisubs
dec
aas
lcall
xchg
jmp
pop
out
pop
jmp
outsl
mov
jmp
shlb
mov
sbb
insb
movl
sub
inc
mov
test
xchg
inc
std
ret
dec
adc
std
sbb
pop
dec
push
int3
jb
popa
sbb
cs
aaa
add
roll
lcall
daa
inc
push
fcoms
sub
add
sub
add
push
adc
and
jl
inc
pop
jmp
jo
call
fadd
test
push
sub
rcl
inc
jnp
addl
sub
repnz
fisubrl
inc
outsb
rorb
sbb
and
mov
aam
pop
pop
jmp
jmp
ret
fdivrl
pop
fs
fists
mov
hlt
roll
push
add
jl
cmp
pop
push
int3
inc
add
fiaddl
sub
out
pop
dec
and
or
frstor
dec
inc
pop
adc
test
jp
cmp
in
mov
rcrl
in
aam
mov
cs
sbb
mov
mov
iret
mov
mov
pop
ror
pop
sub
fistps
or
scas
sub
adc
pop
out
adc
es
cwtl
aam
cli
xchg
xlat
sbb
mov
arpl
mov
push
ret
gs
push
mov
insb
cmp
sub
fildll
and
add
mov
dec
sbb
pop
ss
lea
adc
sub
rorb
fs
dec
or
xor
dec
icebp
mov
das
decb
sbb
jecxz
add
xor
ret
insb
or
outsl
add
add
or
or
xor
inc
test
xchg
push
ret
addr16
out
repz
lahf
mov
add
aam
loope
aam
data16
push
jno
mov
inc
push
pop
cmpsl
idiv
mov
je
inc
add
mov
pusha
imul
xor
mov
or
decb
pusha
adc
addl
pusha
imul
fadds
popf
shrb
ds
dec
imul
jl
push
sbb
ret
in
pop
push
out
pop
nop
cltd
xchg
js
cmp
mov
and
push
pop
sar
add
mov
mov
mov
push
enter
mov
daa
insl
loope
sub
push
rclb
add
dec
xor
test
push
push
shl
adc
rolb
cmc
cmp
mov
add
push
pop
pop
pushl
cwtl
movsb
and
add
xor
cli
fiadds
mov
cs
jge
push
sub
jmp
and
gs
cmpsl
sub
add
inc
pop
lock
not
popf
jl
sbbb
inc
add
mulb
cld
push
gs
sbbb
jl
add
and
xor
push
test
stos
in
shrb
shrb
out
shll
xchg
inc
fldenv
outsl
inc
lea
dec
inc
jae
dec
and
xor
sub
bound
fstps
loop
jne
cli
push
iret
add
into
and
movsl
repnz
xor
aas
pop
in
mov
xchg
aam
ja
xor
push
push
mov
roll
or
inc
psllw
cmp
mov
xchg
paddusb
jecxz
rcl
repnz
add
push
mov
mov
imul
xchg
cs
loopne
jnp
xchg
jnp
jp
ror
add
xchg
push
cli
or
and
push
out
add
mov
imul
scas
sarb
pop
daa
sbb
movsb
and
add
test
or
inc
cli
add
lods
push
shlb
ret
addr16
inc
mov
insb
pop
cmp
adc
push
or
sub
sub
stc
not
or
push
mov
jge
lods
push
push
scas
mul
aas
fdivl
push
jno
mov
dec
push
jns
arpl
push
test
mov
adc
sbb
outsb
lret
sbb
dec
and
fs
xchg
mov
test
icebp
xchg
sub
and
rolb
test
push
pop
push
mov
cs
dec
cmpsl
punpckhdq
sbb
adc
and
cli
add
adc
outsl
ljmp
add
add
and
push
or
dec
or
loopne
loopne
mov
neg
shrl
dec
mov
movsl
out
int
sub
seta
xlat
outsb
hlt
adc
lret
gs
pop
and
cmp
repz
sbb
inc
push
xchg
cmc
cmp
push
ja
shl
or
imul
or
sbb
pop
jmp
push
inc
push
leave
jmp
dec
mov
adc
loop
dec
hlt
insb
in
jb
ja
aaa
pop
push
ljmp
push
mov
sub
dec
mov
lcall
mov
or
fucom
xor
lahf
jnp
add
mov
dec
popf
hlt
aas
mov
cld
jnp
mov
in
cmp
sbb
stc
pop
push
push
cmpb
push
outsb
enter
testl
out
addr16
xlat
push
mov
push
and
pop
push
mov
dec
ret
xor
jmp
mov
pop
pop
mov
gs
out
ret
pop
pop
add
inc
cmp
pushf
psubsw
sbb
xor
sbb
iret
aas
mov
xchg
testl
xchg
pop
rcll
add
mov
pop
dec
mov
and
lcall
or
fs
cmpsl
adc
jl
sub
int
aas
cld
shl
xor
and
jl
adc
xchg
arpl
rcrl
xchg
push
pop
cs
lahf
dec
je
mov
xor
push
movsl
add
jns
adc
mov
mov
loope
out
mov
pop
pop
push
xor
pop
icebp
das
dec
out
mov
xchg
ja
mov
in
addl
test
loope
cmpb
or
pop
lret
mov
push
sbb
push
dec
pop
out
mov
pop
mov
sahf
pop
add
jg
addl
pop
cmpsl
add
loop
adc
ret
sub
add
inc
addl
jnp
insb
push
xchg
dec
popa
push
jno
loopne,pn
jmp
cmp
lds
testl
xchg
mov
jno
sub
jmp
push
sub
orl
mov
in
xor
jne
and
or
mov
negl
add
inc
dec
jne
jmp
inc
fstl
jp
inc
pop
in
push
pop
mov
sti
pop
repnz
jmp
inc
cld
pop
add
adc
insb
or
inc
add
dec
aas
fwait
das
and
nop
or
rcr
ficoml
mov
jecxz
push
loop
sub
xchg
push
push
mov
das
clc
and
adc
mov
lcall
int3
dec
mov
adc
mov
leave
inc
sub
xchg
orl
ljmp
fcmovbe
mov
iret
pop
cmp
or
lods
mov
fmul
add
push
cld
test
jns
cs
data16
mov
sbb
dec
or
lret
sub
js
add
or
arpl
test
leave
jae
je
cld
hlt
mov
arpl
aas
and
ss
sub
or
test
cmpsl
int
jb
scas
inc
mov
mov
jge
mov
xlat
add
mov
mov
fdivrl
adc
adc
or
add
add
stc
dec
test
outsl
mov
out
xor
jmp
gs
xorb
cmp
iret
cld
jmp
adcb
repz
xchg
push
xor
pop
aaa
add
jge
flds
scas
pop
add
pop
call
add
xor
rolb
arpl
sub
push
jg
int
add
gs
insb
jno,pn
popl
sbbb
xor
leave
rcr
xchg
mov
sub
pop
mov
mov
mov
sbb
jmp
rcll
pop
and
sub
les
cs
jmp
shr
dec
out
mov
loopne
mov
outsb
xchg
pop
ret
or
xchg
dec
loope
ret
jge
loope
push
lock
dec
sbb
fisubs
out
movsb
outsl
inc
sar
or
fstpl
mov
add
imul
mov
xorb
mov
sbb
adc
hlt
inc
pop
aad
fstp
push
pop
xchg
cld
pop
push
andl
cmp
sub
push
mov
call
sbb
xor
add
sub
sarb
inc
pop
xor
imul
jmp
xchg
add
xor
shr
inc
lods
pop
dec
lret
sub
or
ljmp
adc
sub
in
sbb
gs
adc
cmpsl
adcb
lret
and
pop
sub
pop
sub
jp
jmp
add
negl
and
or
xchg
push
or
jne
aaa
out
push
inc
sub
das
sub
lcall
mov
sub
outsb
cld
loope
inc
sarl
call
mov
push
xchg
adc
jne
mov
or
mov
dec
mov
adc
and
pop
into
cmp
push
js
dec
xchg
adc
push
rcl
shrl
and
sbb
jecxz
jns
dec
rcrb
inc
push
sbb
nop
ja
xchg
jecxz
push
scas
jmp
or
sbb
mov
mov
mov
mov
adc
cltd
scas
pusha
xor
xor
add
mov
or
hlt
movsb
sub
popa
mov
or
adc
enter
xchg
push
icebp
inc
cmpsb
adc
dec
fldl
pop
xchg
or
push
jno
cmp
arpl
movsl
add
cwtl
adc
pop
gs
mov
repnz
mov
sub
fldt
clc
mov
sub
add
mov
dec
jg
push
test
dec
sbb
jae
jnp
mov
call
fs
mov
loop
subb
or
xor
out
cmp
mov
jge
sub
sbb
push
push
inc
andb
loopne
xchg
mov
dec
insb
sbb
js
sbb
lret
shrb
pop
repnz
mov
mov
imull
or
ret
pop
jl
add
outsb
cmp
sti
mov
add
mov
and
imul
outsb
jge
aas
cwtl
mov
sbb
xchg
jp
add
fcoms
add
or
pop
lcall
mov
push
cmp
lods
fldenv
inc
jbe
push
icebp
cmc
daa
imul
sbb
mov
into
adc
repnz
lods
out
mov
leave
in
push
add
lock
fstpl
jmp
pop
dec
mov
sbb
movsl
jb
mov
and
clc
sub
mov
pop
ljmp
inc
sbb
mov
inc
dec
movsl
cld
and
inc
or
repnz
mov
repnz
aam
mov
or
pusha
inc
rorl
rcr
sbbl
pop
cwtl
add
sbb
push
orb
dec
adc
fdivs
adc
xchg
push
stc
outsl
add
jmp
fnsave
adc
and
jge
fisubl
movsl
cli
and
ret
push
adc
in
shl
sub
in
mov
cld
lds
dec
sub
adc
testl
out
dec
mov
imul
sub
outsb
push
add
and
adc
aas
mov
xchg
or
mov
push
rcrb
pop
popf
fs
in
sub
dec
movsb
aam
mov
sti
dec
in
enter
loop
pop
or
fsts
adc
cmp
sbb
push
push
xor
adc
xlat
cmpsb
std
jae
cmp
adc
sar
and
mov
std
stc
add
push
fcoml
and
sub
out
subb
jno,pn
repnz
arpl
lret
rorb
xchg
inc
push
jmp
pop
dec
hlt
or
dec
das
push
or
adc
pop
mov
sahf
push
mov
add
icebp
scas
leave
add
fimuls
dec
dec
sub
jae
call
jmp
cmp
pop
or
shll
push
cmp
push
mov
clc
int
push
and
ret
push
push
pop
test
dec
out
mov
jmp
lret
rcl
pop
add
mov
mov
jne
hlt
xchg
aad
fstpt
int3
test
dec
jmp
inc
mov
jmp
sub
in
sahf
xor
cmp
mov
jmp
xchg
addr16
negb
push
or
or
pop
push
cmp
roll
push
jno
cmp
sarb
push
add
adc
pop
pop
push
inc
les
xor
mov
pop
shl
bound
inc
ret
or
aas
int3
js
je
add
insl
jmp
popa
or
aas
sub
sbb
cmp
sub
add
and
mov
jns
push
lods
test
push
leave
fs
mov
push
mov
ret
cs
cmpsl
add
add
or
xor
dec
std
stos
loopne
test
sub
xchg
inc
xchg
fdivrl
jmp
sub
cmp
push
and
std
out
sub
jne
and
scas
fmull
inc
repz
pusha
rclb
sahf
pop
fbld
mov
addl
push
pop
and
add
movsb
and
jle
add
in
cltd
jnp
cmp
mov
sbb
mov
dec
xchg
pop
mov
rcrl
cmp
mov
pop
mov
jno
popa
jmp
push
pop
pop
adc
int3
add
in
xchg
pop
add
test
je
xor
lds
jnp
divl
add
das
mov
or
mov
cmc
inc
jo
lret
or
xchg
push
leave
daa
repnz
adc
jp
add
loope
inc
in
xor
dec
outsl
dec
mov
push
xchg
shll
repz
sbb
loope
push
jge
dec
fstpl
dec
pop
push
mov
jno
movsl
mov
jne
cs
add
dec
icebp
es
sahf
movsb
ljmp
std
xchg
xor
rcl
out
xor
push
cmc
or
ficoml
jl
sbb
fcos
gs
movsl
fsts
push
mov
pusha
pop
ja
xlat
or
cmpsb
mov
lds
sub
xor
add
add
mov
into
sti
cmp
or
icebp
fildll
fadd
and
rorb
mov
add
jge
mov
inc
popf
icebp
add
push
cltd
mov
ret
mov
lods
mov
and
mov
add
pop
cmp
push
movsb
icebp
lret
sub
daa
dec
lret
lret
pop
mov
add
pop
cmc
push
in
pop
or
out
aad
fsts
daa
xchg
jp
dec
ljmp
pop
push
add
adc
test
lcall
iret
mov
es
sub
out
sbb
jp
push
nop
cs
iret
mov
jnp
jnp
inc
test
mov
std
fmuls
add
add
lods
adc
shr
xchg
jo
or
js
sub
pop
cltd
xchg
push
data16
insl
js
sub
sub
xor
adc
cmpsl
jb
add
adc
add
sub
push
dec
push
fs
adc
mov
inc
xor
add
jl
xchg
push
dec
or
pop
lahf
add
push
sub
popf
ret
pop
pop
or
insb
mov
adc
push
inc
push
in
and
adc
mov
lahf
xor
xchg
jae
or
das
dec
loopne
mov
xor
jg
daa
bound
dec
ret
outsb
shrl
cmp
push
jno
jns
shl
mov
add
push
push
mov
add
xor
and
push
fwait
mov
js
aaa
nop
adc
adc
xor
sbb
add
jbe
rorb
into
in
jo
lds
push
ret
add
loop
mov
dec
fdiv
push
push
popa
mov
or
test
lds
sub
and
cmp
das
adc
pusha
pop
add
nop
jo
add
push
rcrb
sub
sbb
or
into
or
jp
or
inc
cld
adc
add
mov
mov
add
pop
daa
pop
sub
cmp
jmp
push
leave
or
lret
or
mov
rolb
jno
loopew
mov
fsts
nop
das
dec
out
insb
incl
jle
xchg
rclb
dec
dec
imul
add
js
daa
jmp
scas
imul
lahf
add
sub
jne
insl
dec
rorb
pop
cmp
lret
xor
lret
pop
in
hlt
lret
inc
xchg
int3
add
xor
xor
cmp
js
pop
mov
xchg
shlb
inc
fwait
cmp
cmpsb
or
add
push
cld
imul
mov
pop
fisttps
add
jmp
add
andl
adcl
inc
inc
dec
hlt
or
adc
or
adc
pusha
test
dec
and
scas
sarl
mov
pop
push
add
pop
mov
jmp
cmp
push
paddd
sarb
jmp
push
inc
pop
add
hlt
mov
mov
fsubrl
push
inc
lea
xor
adc
or
inc
push
lret
mov
push
mov
fsubrl
andb
iret
test
or
lock
mov
loop
iret
cli
sub
outsb
stc
mov
add
pop
xchg
jae
fninit
decl
mov
and
je
cmp
ja
xchg
mov
fidivrl
clc
mov
add
js
sub
pop
push
and
mov
xor
inc
or
cs
push
pop
in
inc
das
fld
imul
push
add
test
xor
push
adc
push
and
pusha
jmp
addps
pushf
jno
scas
jmp
xor
daa
jmp
rcll
jmp
out
adc
lret
insb
mov
jmp
cmc
in
pop
add
cmp
pusha
mov
or
imul
or
adc
in
mov
push
lahf
lcall
jle
mov
fcmovne
push
loope
in
push
mov
orl
push
testl
adc
pusha
inc
sbb
xchg
sbb
jno
and
je
sbb
pusha
or
or
out
in
sbb
add
into
adc
jbe
add
cmpsb
cmp
inc
sub
dec
movsb
add
xor
bnd
sahf
out
addr16
push
push
shr
or
mov
xor
ljmp
push
das
clc
sbb
mov
shl
xor
add
pop
push
out
inc
mov
jo
or
iret
push
sub
std
lcall
push
jmp
mov
sub
and
scas
mov
jnp
sub
add
push
mov
or
pushf
mov
shl
andb
adc
into
aaa
add
mov
xlat
test
pop
pop
push
or
lea
xor
mov
xchg
enter
loopne
frstor
mov
xor
xor
push
dec
jo
push
adc
out
ret
in
shl
and
add
add
cld
sbb
dec
sbb
sbb
popa
xchg
jg
jae
xor
jns
testl
xchg
f2xm1
pop
mov
mov
xchg
in
xlat
call
mov
jmp
mov
xor
xchg
insb
adc
mov
adc
repz
rsqrtps
mov
pop
pop
and
add
xchg
hlt
add
loope
rorl
popa
push
and
ret
mov
jmp
in
inc
pushl
int3
stc
xchg
mov
outsb
mov
jne,pt
jmp
lods
das
xchg
cld
push
pusha
js
xor
mov
mov
es
stos
mov
bound
sub
out
jp
js
inc
or
fistps
sub
fmull
out
jne
mov
push
imul
push
jg
outsb
das
pop
pop
adc
pop
jecxz
inc
jp
in
mov
movsl
xor
ja
filds
lods
or
xchg
push
or
pop
into
xchg
mov
sbb
mull
jp
jmp
sbb
leave
push
jg
out
lahf
fmuls
shll
fucomp
xor
and
out
cli
push
add
not
jle
dec
and
js
insl
jmp
pop
sbb
adc
push
ret
add
icebp
jp
shlb
mov
xchg
addr16
inc
lock
sbb
push
inc
aas
add
cwtl
push
sbb
dec
pusha
xor
pop
andl
lds
cli
cmp
incl
dec
and
jnp
shrb
outsl
dec
jae
xorb
enter
and
test
lahf
or
sub
testl
inc
insl
dec
and
lea
pop
xchg
hlt
cmc
push
ret
or
mov
das
std
dec
push
loopne
or
leave
in
sbb
jle
fstps
loopne
insb
jp
or
pop
or
das
je
jo
orl
jns
fists
inc
or
dec
push
push
pop
xor
sbb
jnp
xchg
push
call
xor
ljmp
cltd
push
pop
lods
ja
or
add
mov
adc
inc
or
pop
push
jae
add
jl
add
inc
jge
inc
jle
fbld
jl
add
fldl2t
pop
sub
dec
or
jne
push
add
xor
data16
cwtl
iret
jg
mov
mov
mov
jle
adc
dec
add
push
push
mov
int3
add
jne
es
inc
add
jae
inc
xchg
jg
std
or
lahf
dec
pop
cld
jo
sti
fmuls
int3
sbb
inc
adc
vunpcklps
faddp
add
add
or
popa
xor
vucomiss
pop
ljmp
cmp
gs
sub
nop
popa
lcall
inc
dec
call
cwtl
add
fwait
push
movsl
dec
jns
and
xchg
xor
xchg
in
add
mov
iret
xor
mov
jmp
subb
pop
xor
sarb
add
pusha
xor
pop
jle
jbe
jl
and
add
jbe
pop
inc
sub
movsb
push
insb
fcoms
sub
sub
imul
fisubrs
dec
push
sti
jecxz
add
adc
cmp
jns
gs
mov
outsl
repz
jmp
and
pop
inc
mov
dec
add
rclb
pop
xor
cs
dec
inc
xchg
jmp
aad
pop
lds
stos
sub
add
mov
xorl
in
sub
jmp
iret
sub
std
out
pop
mov
jmp
or
cmp
pop
sub
pop
mov
mov
pop
or
sub
inc
inc
push
or
je
cmpl
xchg
sub
xchg
inc
and
shl
mov
repnz
int
add
je
std
xor
dec
cmpsb
pop
cld
mov
fsubs
call
sub
out
jb
push
push
jmp
into
out
sub
jno
sbb
call
push
and
leave
jo
push
push
add
pop
add
not
rcl
lea
das
clc
mov
and
je
fstpt
inc
repz
mov
xchg
sub
popa
xchg
gs
add
imul
pusha
sbb
test
mov
cmp
xorl
pop
bound
push
dec
stos
dec
mov
imul
adc
add
pop
scas
negl
pusha
arpl
pop
sbb
push
adc
fwait
jbe
push
adc
decb
movl
or
dec
add
cmp
inc
cmc
mov
out
pop
int
cmp
rolb
sub
push
mov
jmp
leave
add
xchg
push
sbb
inc
sub
xchg
or
sbb
icebp
aas
cmp
stc
xor
lds
mov
movb
mov
movb
js
push
gs
dec
sub
pop
movl
sbb
fcompp
incl
push
frstor
pop
pusha
icebp
mov
clc
arpl
add
lret
mull
call
sub
lock
xlat
nop
shrb
sti
inc
or
sub
mov
gs
mov
std
scas
mov
xchg
inc
les
daa
mov
dec
inc
mov
sub
mov
stc
sub
inc
not
push
jg
call
mov
daa
jp
jge
dec
xor
or
mov
jae
repz
pusha
dec
sbb
aad
sbb
jge
or
ret
xchg
fcmovb
insl
adc
out
jl
dec
data16
sbb
cmc
xlat
cwtl
aam
or
dec
jnp
add
in
cmp
leave
dec
xlat
jo
pop
mov
loopne
ror
and
jno
push
or
jg
pop
and
ret
dec
xor
repnz
xchg
or
jae
add
push
pop
mov
cmp
jmp
pop
mov
and
pop
movb
ja
jg
sub
inc
mov
or
sub
cs
adc
xlat
in
stos
dec
add
jg
orb
dec
xor
dec
je
fildll
cmp
jmp
in
enter
xchg
sbb
lods
jmp
hlt
or
lahf
mov
clc
sbb
shll
push
pop
pop
mov
push
cmp
add
loopne
jmp
test
add
fldcw
stos
inc
mov
aas
jb
imull
ljmp
sub
rolb
int3
das
clc
cld
cmpl
addr16
jne
test
cmp
mov
mov
cmp
cmp
mov
test
jl
push
mov
popf
push
in
stc
push
stos
sbb
add
test
sbb
and
dec
sbb
popa
jecxz
pop
sub
ds
test
aas
lods
or
mov
xor
mov
cmc
mov
shrb
shufps
lret
stos
jge
enter
push
push
cwtl
clc
mov
jg
and
and
push
nop
xchg
adc
sbb
gs
sub
cmp
out
push
push
xor
adc
in
cli
xor
cs
sbb
mov
add
pop
add
sub
sub
loopne
pop
push
outsb
int3
cmp
adc
pop
jne
call
loopne
jle
addr16
cmp
cmpsl
stos
popf
or
jl
pop
in
inc
pop
xorb
push
push
fbstp
mov
cmp
mov
mov
lret
add
jmp
pusha
dec
sahf
and
add
add
fs
adc
in
add
stos
mov
xor
out
mov
in
adc
xor
jo
mov
lods
outsb
pop
adc
test
pop
jmp
add
jae
notl
in
cmp
pop
mov
push
pop
or
sub
jmp
jl
movsl
je
or
out
shrl
mov
or
inc
sbb
add
and
push
inc
jmp
push
mov
ficoml
add
je
dec
jmp
add
inc
mov
mov
loop
sbb
pop
mov
cmc
dec
sub
cltd
mov
negl
fadds
or
add
and
jno
insb
xor
pop
push
ljmp
dec
lods
and
mov
adc
xor
cltd
dec
xor
ret
xchg
dec
cmp
sbb
push
mov
daa
mov
adc
mov
add
dec
aaa
adc
xchg
xchg
xor
add
mov
stos
repnz
test
mov
xor
loopne
stc
decb
jbe
sub
xor
jl
dec
mov
xor
hlt
or
mov
or
js
shlb
jae
add
pusha
push
mov
das
jmp
add
fldcw
push
dec
sub
scas
in
cmp
mov
add
imul
xchg
push
lret
cmp
inc
bound
imul
xchg
inc
test
sbb
js
cmp
xchg
pop
std
push
pop
jle
xchg
inc
test
inc
push
push
add
pop
or
inc
lret
pop
stc
movsb
gs
lods
inc
or
add
add
in
and
insb
addr16
test
mov
pop
xor
or
mov
ret
xor
sub
or
xchg
sbb
add
jmp
sub
loop
rol
add
jbe
or
jl
aas
js
mov
and
out
insl
lcall
cli
push
movsb
orb
and
jae
inc
inc
push
hlt
or
or
mov
loop
inc
mov
push
out
dec
xor
pop
sub
xor
mov
inc
lahf
pop
inc
popf
pusha
sub
add
push
das
jmp
mov
push
jb
lcall
pop
xchg
jns
add
sub
mov
jmp
dec
scas
jns
sub
shrb
pop
pop
movsb
ficoml
add
dec
dec
xor
jle
cmp
bound
jp
inc
add
icebp
shrb
or
call
push
pushf
adc
sarl
mov
sti
and
dec
push
pop
jmp
mov
adc
in
add
add
insb
sbb
test
pusha
adc
inc
xchg
and
mov
xor
sub
popf
pop
xlat
push
push
xor
or
xlat
out
inc
mov
push
or
pop
pop
int
push
leave
icebp
fldcw
sub
out
lea
add
scas
lcall
les
adc
les
ds
stc
in
pop
or
popa
jmp
or
loope
test
neg
jne
and
movsb
or
sub
inc
ficoml
lret
js
jmp
rorl
jbe
jne
pop
push
jnp
add
dec
pop
sti
out
jmp
dec
out
das
aam
and
pop
pop
mov
cmp
xchg
xchg
stos
lret
adc
or
add
add
in
in
mov
mov
incb
dec
mov
test
sti
scas
cwtl
mov
dec
ret
push
pop
jl
or
mov
lahf
adc
addl
and
and
iret
dec
int
repnz
cltd
mov
divl
adc
mov
daa
dec
js
xchg
int3
sbb
aas
pop
outsb
and
adc
adc
out
mov
jnp
mov
sub
fwait
xchg
pushaw
pop
pop
jmp
xchg
scas
sub
xor
xchg
loope
js
pop
fmull
pop
or
fnstcw
cmp
lds
fisttpll
and
subl
add
test
lret
xchg
push
cmp
mov
and
addl
jmp
not
add
shrl
sub
stos
mov
jbe
pusha
test
scas
inc
jle
sub
or
sbb
stos
pop
cld
and
ret
mov
cltd
pushf
push
clc
in
mov
cmc
lahf
sub
push
mov
add
sahf
mov
mov
or
add
decb
in
pop
add
jmp
stos
add
xor
sub
not
jmp
out
stos
and
ljmp
call
test
pop
repz
cs
cmp
push
add
cmp
dec
inc
and
mov
fnsave
cmp
or
add
insb
and
dec
movsbl
sub
add
mov
or
mov
mov
daa
not
shll
out
sbb
fadds
sub
xor
inc
jno
jno
into
mov
lock
cli
push
push
lret
std
sar
mov
cmpb
mov
fcoml
fldl
sub
stos
adc
cmp
push
push
pop
jle
int3
out
and
lock
cmp
push
mov
nop
sub
pushf
pushf
xchg
xor
or
jge
xchg
or
shl
arpl
sbb
repz
adc
cmpsl
and
adc
jmp
xorb
mov
pop
decl
adc
stos
jecxz
xchg
push
aas
out
enter
or
nop
movsb
sbbl
nop
xchg
js
jo
cmp
adc
loopne
cwtl
cmp
sbb
or
adc
sbbb
std
pop
testl
push
loopne
jae
dec
xor
arpl
into
ljmp
pop
sub
sar
popa
in
sub
push
jbe
daa
aaa
and
shll
push
add
add
sub
mov
cmp
cwtl
icebp
cmp
ficomps
ret
cmp
inc
mov
aas
sub
out
pop
or
sti
fbld
jmp
push
movsb
sarl
pop
jae
sbb
arpl
push
sbb
adc
jnp
xor
sub
lret
cs
popa
jne
mov
xchg
jp
jo
jmp
testl
pop
push
lock
add
sahf
xlat
enter
pusha
inc
sahf
ret
adc
pop
push
mov
cmp
cld
sahf
pop
inc
jae
and
jecxz
sti
xchg
inc
mov
pop
clc
test
lcall
mov
and
jl
xchg
outsb
icebp
sub
add
negl
fstps
idiv
or
adc
adc
stos
fwait
decl
dec
ficoml
mov
mov
hlt
xchg
rorb
mov
nop
sbb
es
add
push
lea
xchg
xor
push
add
dec
inc
inc
mov
addr16
inc
xchg
test
push
jns
mov
mov
aaa
add
sub
nop
out
fdiv
rcl
loope
stc
jnp
pop
shl
gs
fnsave
jne
pop
and
mov
fimuls
pop
push
ljmp
mov
pushf
adcb
add
ret
loope
cmpl
xor
mov
inc
scas
adc
mov
push
jns
enter
ss
adc
addl
movsb
lret
ljmp
insl
shl
or
out
ja
mov
inc
sbb
sti
add
cltd
sarl
push
imul
mov
shl
icebp
mov
or
push
jmp
in
push
push
hlt
and
leave
mov
push
jbe
dec
dec
jne
int3
jnp
ja
notb
iret
rolb
push
mov
mov
xor
or
andb
imul
xchg
or
adc
sar
add
add
aam
pop
or
imul
fwait
sub
sti
inc
xor
loopne
jae
add
dec
jmp
dec
mov
idivl
cmp
or
add
sub
aas
addb
pop
mov
push
movsb
add
jmp
pop
mov
or
sub
rorb
push
adc
inc
jge
ja
fcoms
add
pop
push
mov
ss
pop
cli
xchg
xor
mov
add
int
jns
test
jecxz
shlb
andl
fdiv
add
sub
in
mov
add
mov
inc
pop
mov
sbbl
add
add
adc
push
jbe
es
pop
js
mov
les
in
inc
fcomps
jmp
pop
add
add
mov
pop
incl
add
and
dec
es
jo
mov
push
sub
fstpt
idiv
xchg
dec
mov
adc
xchg
add
shl
jmp
dec
push
push
imul
jno
jb
adc
push
in
test
stos
jne
pop
adc
xor
jmp
jecxz
shll
fmul
ja
cmp
ret
mov
push
clc
pusha
pushf
jp
dec
cmp
bound
pop
scas
push
lcallw
add
lods
cmp
dec
mov
cmp
nop
add
push
add
jmp
lea
mov
mov
jmp
std
dec
adc
repz
aas
std
sub
pusha
popf
jmp
dec
xchg
sti
loope
ror
pop
fmulp
shr
cmp
dec
gs
stos
inc
or
clc
inc
lods
sub
mov
or
clc
call
clc
xchg
mov
nop
icebp
jp
cmp
ffreep
mov
xchg
or
fsubs
mov
xchg
mov
leave
repnz
push
sbb
sahf
addr16
jp
push
jmp
sbb
jmp
call
inc
add
addb
and
pop
mov
pop
push
in
js
pop
mov
es
movsl
adcb
adc
dec
or
push
jmp
add
jne
or
xor
sub
shrb
ficomps
jbe
and
and
sub
sub
fsubl
and
dec
xor
push
movsl
push
add
xchg
push
push
loop
test
jl
in
testl
sub
lock
lock
xchg
jl
pop
jne
dec
xorb
sar
sub
inc
stos
ret
adc
pop
push
lret
std
mov
push
imul
cmp
popf
or
fmull
lods
and
add
and
add
cmp
dec
push
or
sub
imul
inc
je
add
insb
leave
xchg
add
insb
cmp
in
xchg
jbe
ja
push
icebp
jno
or
jmp
fs
cmpl
sarb
fidivl
and
nop
lock
inc
xor
sbb
imul
stos
mov
sub
daa
xor
push
and
sbb
das
mov
pop
jmp
add
cmp
mov
mov
mov
push
out
cmc
cltd
xor
incl
adc
and
jge
mov
testb
mov
rorl
pusha
sub
loop
xor
xor
push
enter
xor
dec
les
insl
cmpb
daa
lods
xorb
loope
xlat
pusha
mov
sub
fwait
mov
pop
sarb
jg
pop
jge
inc
bound
xchg
add
cmc
xchg
or
loope
div
sti
outsb
or
pop
push
mov
testl
sbb
jle
repnz
ljmp
sub
push
xchg
testl
jle
mov
mov
push
bound
cmpsb
xchg
sbb
pop
push
shl
lret
stos
repnz
jmp
dec
lds
add
sub
fstpl
mov
xchg
jnp
xor
scas
adcb
rorb
jno
ret
dec
sarl
push
adc
push
scas
pop
popf
ret
mov
fisubl
or
adc
pusha
jno
or
notl
pop
repz
adc
or
ds
mov
fsubrl
shrl
jnp
xchg
lcall
lcall
lods
sub
lods
sbb
bound
insb
sub
pop
stc
xor
bswap
je
imul
test
pop
pop
pop
stos
fnsave
pop
jmp
rolb
sahf
sub
push
outsb
sub
pop
ja
into
jg
pop
inc
jmp
ret
jne
push
fildll
test
mov
push
popa
jmp
in
movups
add
ret
pmaxsw
sarl
mov
add
and
orb
xor
adc
jp
and
adc
or
lahf
sbb
cmp
call
jp
xorl
jo
mov
sti
adc
sti
dec
pusha
xchg
add
mov
sub
xchg
clc
stos
hlt
dec
mov
imul
xchg
insb
jmp
add
pop
fchs
cli
imul
add
ffree
lods
adc
jns
or
xor
push
pop
repnz
loopne
sub
daa
fnstsw
pop
lcall
push
testl
sbb
pop
icebp
add
push
jl
xchg
and
dec
push
in
jecxz
pusha
sub
sbb
test
fwait
mov
inc
xor
shl
pop
out
mov
test
movl
ljmp
sub
push
je
in
push
sti
cwtl
sub
subb
add
push
xchg
sbbl
xor
sbb
dec
mov
jmp
add
mov
scas
lret
inc
xor
nop
cmpsb
pop
sbb
ja
add
test
xchg
push
roll
mov
pop
mov
decl
jg
jl
nop
orl
daa
shufps
scas
clc
ja
push
cmpsb
add
fldt
fwait
push
mov
and
xor
or
arpl
sub
clc
aam
or
push
mov
push
pop
xor
add
pusha
add
and
sub
adc
mov
xor
out
mov
rorl
or
outsb
in
add
ds
mov
inc
in
add
adc
xchg
in
sarb
push
mov
dec
add
in
sbb
subl
add
cmp
sub
sbb
dec
inc
jmp
nop
and
iret
push
sbb
dec
outsl
cmc
test
lcall
cmp
add
jmp
testl
ss
sub
push
and
pop
fidivrl
pop
ret
js
or
xchg
mov
pop
or
and
dec
or
gs
adc
jb
mov
fnstenv
and
dec
dec
std
mov
push
daa
ret
sahf
xor
lcall
aad
dec
fsubs
rclb
ja
lea
cmp
ljmp
ret
les
push
fs
sbb
and
mov
lret
ret
and
jle
rorb
or
jae
pop
or
sti
push
imul
pop
push
orb
stc
xor
add
cmpsb
lds
adc
lcall
inc
scas
fmuls
icebp
leave
repnz
or
lret
mov
xlat
or
pop
mov
dec
repz
sarb
sub
cltd
sub
cmc
dec
aaa
pop
and
pop
inc
sbb
jmp
mov
shll
add
daa
sarb
adc
mov
inc
pusha
test
in
or
or
xchg
mov
add
adc
pop
jge
add
insl
lret
ja
add
sbb
xchg
pop
aam
gs
aam
mov
xchg
jno
jg
ja
mov
pop
mov
add
mov
push
xchg
xor
mov
add
aam
push
pusha
mov
es
jb
push
rol
dec
push
mov
sbb
jno
pop
push
jecxz
sbb
scas
negl
push
cmpl
mov
mov
pop
flds
scas
xchg
adc
iret
push
inc
push
enter
xor
dec
into
or
cwtl
push
mov
repnz
addl
xchg
or
and
or
xrelease
les
push
rol
aam
cmp
rcrb
call
xchg
call
sub
mov
push
das
sbb
and
mov
outsb
xchg
jge
in
push
mov
sub
jmp
loopne
adc
cmp
aas
sahf
dec
imulb
adc
out
xor
ja
xchg
aaa
imul
shlb
cmp
dec
xchg
push
xlat
dec
mov
mov
jmp
loope
pop
cs
imul
inc
pop
mov
add
push
lret
cmp
cmp
popl
mov
mov
push
xchg
dec
clc
insl
xchg
or
fidivl
cmc
pop
icebp
pop
cmp
push
pop
test
inc
adcb
pop
les
add
or
sbb
or
popf
add
mov
add
push
pop
add
call
push
cmpb
pop
popf
orb
nop
enter
add
inc
sti
xchg
mov
pop
jp
outsb
fs
in
icebp
sub
enter
mov
add
dec
insb
bound
out
or
xor
sub
or
xor
xor
add
jecxz
push
inc
negl
or
jge
push
clc
push
addl
ja
dec
shrl
mov
mov
mov
inc
pop
sbb
fidivrl
sbb
popf
cli
pop
test
popf
mov
pop
loopne
test
xchg
ja
and
mov
das
data16
pop
push
jne
pop
push
add
pop
sub
icebp
aas
mov
mov
addr16
or
sbb
xchg
in
adc
clc
or
lret
mov
repz
stos
pop
jmp
ror
mov
fists
jo
js
ret
xchg
pop
xchg
ret
dec
sbb
mov
jmp
jo
sbb
jg
icebp
xchg
cmp
gs
cli
cmp
fadds
add
jae
push
sub
dec
add
xor
popf
mov
or
cmp
neg
jle
pop
aad
and
pusha
push
fs
gs
push
movsb
push
repz
xchg
mov
jns
dec
loopne
into
mov
popf
push
xchg
push
or
sub
fidivs
push
push
push
int
adc
loope
and
filds
mov
aam
sub
push
daa
mov
fimuls
cs
je
std
jb
out
lods
fidivs
imul
add
mov
lahf
je
lods
sbb
push
cmp
mov
and
push
inc
std
int
and
ja
pushf
xchg
pop
cltd
adc
enter
mov
push
dec
xchg
outsb
fidivl
bound
push
jmp
incl
push
addb
and
pop
push
mov
push
xor
dec
push
in
lods
das
jo
cmp
lret
ljmp
sub
push
jae
sub
js
push
mov
pop
and
btr
dec
aas
or
pop
dec
cmp
jbe
int3
push
in
push
pusha
pop
dec
cmp
pop
dec
mov
sub
pop
adc
jne
or
ret
inc
sub
mov
jmp
out
and
aas
cmp
add
push
jmp
and
jle
or
cmp
dec
fldcw
mov
add
jae
jge
push
std
stc
lret
pop
xor
fisubrs
dec
fldcw
std
inc
push
bound
je
jno
pop
xchg
lret
add
or
cmp
out
lea
jg
or
jmp
jne
xchg
mov
cmp
mov
push
dec
xchg
or
and
push
jb
xchg
pop
rcrl
subb
in
call
dec
push
insl
add
out
jmp
mov
loop
xchg
inc
mov
push
jmp
imul
inc
cld
rolb
mov
jl
arpl
cwtl
sub
push
sub
addb
cmpsb
add
pop
mov
sarl
xor
push
jnp
pop
pop
sub
dec
out
mov
popa
pop
jmp
xor
in
cld
testb
sti
push
cli
cld
clc
xchg
jmp
bound
mov
ja
sub
data16
push
adc
test
nop
mov
jnp
add
lret
add
xor
push
add
es
mull
mov
xor
jae
pop
jns
imul
dec
ja
xchg
fwait
sbbb
lret
subb
pop
pop
mov
jmp
adc
pusha
or
jo
addr16
pop
repz
adc
in
adc
or
loopne
mov
shrl
or
pop
jbe
push
sti
add
and
call
outsl
pop
je
pushl
jmp
sahf
dec
orb
filds
or
pop
lock
jmp
push
sub
or
xchg
mov
mul
adc
jb
jns
out
enter
into
mov
mov
add
dec
jge
ss
inc
iret
lock
or
and
inc
mov
jo
mov
add
out
jmp
jp
out
mov
mov
mov
push
mov
inc
leave
je
in
mov
sahf
mov
mov
and
or
ret
int3
enter
add
adc
je
xor
cltd
cmp
cmp
jmp
xlat
pop
sub
mov
imul
stos
cwtl
out
inc
pop
mov
sub
sbb
repnz
imul
cmp
nop
pop
pop
mov
or
sti
stos
or
or
ds
iret
dec
mov
les
ja
and
xchg
lahf
sub
insb
cmp
loop
daa
stos
testb
and
and
or
mov
ret
or
dec
je
xchg
pop
xchg
mov
mov
inc
jo
mov
cld
push
or
notl
gs
insl
lea
mov
fstl
sub
cmp
or
push
mov
pop
jmp
add
pop
loop
lods
pop
icebp
jge
add
xlat
testb
dec
mov
or
jmp
push
push
mov
dec
cmp
sti
jl
sub
orl
daa
mov
ret
fsub
pusha
stos
das
mov
lods
mov
pop
sbb
cltd
add
enter
outsb
mov
dec
aas
rolb
int3
mov
pop
xchg
inc
lods
incl
xor
cmp
adc
or
jmp
xchg
xchg
push
sbb
lds
push
mov
mov
adc
subl
inc
inc
add
and
test
jg
jnp
sbb
add
jg
jo
pushf
pop
adcl
test
xor
mov
push
or
jns
repnz
mov
leave
add
jmp
divb
or
fs
push
add
xlat
jno
adc
hlt
inc
dec
cmovns
pop
push
jo
mov
call
les
sub
jmp
jecxz
daa
leave
cmc
inc
add
push
jo
pop
mov
cmpsl
stos
pop
cmp
not
lret
xchg
lock
gs
xchg
int3
lods
mov
fxam
push
pop
xchg
cmp
insl
add
sbb
pop
lea
sarb
add
inc
add
sub
sub
repnz
xchg
dec
lahf
outsb
js
in
sub
ds
pop
xchg
or
cs
and
adc
xchg
aad
inc
add
psrlq
shll
loope
stos
cmpl
pop
pop
pop
or
and
inc
add
mov
ficomps
add
imul
push
push
movsb
pop
adc
xchg
bound
sar
sub
push
sub
jns
xor
es
xchg
or
dec
pop
popf
rcll
push
leave
jge
or
movb
push
jmp
inc
loope
aam
cmp
les
in
add
cli
out
cmp
pop
lret
dec
pop
movsb
dec
popf
adc
push
xchg
scas
cmp
in
repnz
pop
stc
popa
mull
loopne
cli
ja
or
xchg
pop
pop
push
dec
nop
enter
sarl
inc
cmp
inc
mov
jle
sbb
sub
cmc
scas
mov
test
jp
pop
mov
mov
push
mov
sbb
leave
inc
rol
push
mov
das
mov
pop
mov
xor
mov
jno
js
ret
or
jmp
or
xchg
inc
mulps
adc
cmp
cmpsb
in
adc
mov
lahf
js
pop
xor
push
or
add
aas
hlt
push
inc
or
xchg
pusha
daa
sub
xor
adc
mov
std
dec
aam
xor
xchg
into
cmpsl
fistl
test
sahf
adc
jl
pop
push
and
jb
lret
test
mulb
popa
push
add
or
adc
jmp
mov
shll
inc
mov
inc
xor
cmp
cltd
mov
mov
jp
push
mov
test
test
out
sbb
or
jecxz
xchg
mov
ljmp
xchg
sbb
enter
jae
or
and
dec
imul
mov
aad
cltd
pushl
fcmovb
popf
jae
cmp
mov
inc
jmp
in
jg
dec
xchg
xor
sub
sub
push
add
push
mov
imul
pop
mov
inc
mov
mov
sub
sub
aad
aad
nop
dec
mov
mov
ljmp
imulb
rcll
jmp
jne
and
adc
push
push
mov
test
mov
mov
mov
test
push
jno
repnz
push
mov
jmp
pop
test
push
jmp
aaa
out
push
das
sub
cmpsl
push
inc
addr16
pop
add
xor
sub
fldenv
xor
repz
push
sub
or
js
pop
pop
jl
mov
shr
cld
mov
sbb
out
pop
mov
lahf
and
out
mov
das
repnz
sbb
cmp
mov
in
push
add
leave
mov
jbe
dec
rolb
incl
faddp
scas
mov
loope
ljmp
add
jl
enter
sbbl
lods
sub
jno
push
jmp
rcrb
mov
or
out
mov
jmp
pop
xor
mov
push
aam
popf
push
pop
inc
rcrl
sti
sub
mov
inc
imul
sbb
mov
arpl
mov
leave
jp
pop
push
push
pop
loope
inc
sbb
or
fisttpl
movsb
add
in
repz
stos
push
jecxz
and
stos
nop
stc
pop
and
sub
das
mov
sub
and
add
outsb
testb
pop
mov
lahf
sahf
mov
mov
lret
daa
mov
inc
jbe
das
xlat
mov
rcll
mov
push
dec
sbb
xchg
adc
cli
scas
popa
pushf
loope
test
shl
mov
cs
aas
xorl
cmp
xchg
inc
push
aas
push
jge
push
or
jge
data16
fwait
adcl
sub
or
ljmp
mov
sub
lret
int3
pop
idiv
rcl
andl
cs
out
pop
test
sti
xor
aaa
sbb
jge
repz
shlb
nop
rclb
cld
add
sbbb
push
sub
inc
or
ja
xchg
push
mov
icebp
stos
jnp
sbb
int
mov
hlt
sbb
push
inc
pop
popa
scas
sbb
add
mov
pop
fs
jl
mov
or
dec
sub
sub
fsubrl
dec
fisubrs
mov
sub
jecxz
mov
mov
xor
ss
ja
pop
mov
mov
cmpb
cwtl
arpl
sub
pushf
add
cmp
pop
stos
mov
xchg
jmp
lret
pop
shrl
pusha
movsl
jo
or
mov
dec
loop
fistl
orl
test
out
push
pop
aaa
sbb
add
push
mov
cli
dec
push
or
das
mov
sahf
outsb
mov
inc
and
mov
call
push
mov
std
adc
mov
mov
inc
mov
popa
ja
pop
out
push
rorl
push
sarl
out
jne
out
sub
push
div
outsb
mov
sub
or
xlat
in
jmp
dec
in
lcall
iret
or
mov
out
mov
sub
pop
int3
aas
push
lds
orb
je
jmp
sub
pop
jmp
add
add
loope
clc
push
dec
cmp
push
dec
fdivrl
mull
sub
inc
idivb
inc
mov
aam
adc
imulb
call
mov
fists
xchg
jns
movsl
outsb
iret
cmp
or
inc
push
rcrb
or
push
sub
call
inc
push
sbb
mov
or
push
xor
jmp
divb
mov
stos
inc
mov
mov
test
push
xchg
jns
enter
out
add
jbe
adc
cmpsl
cmp
lcall
xchg
adc
sub
scas
fstpt
xchg
add
push
cli
into
sbb
ja
pop
xchg
add
dec
sbb
lahf
cmp
sub
push
jmp
or
push
mov
jge
scas
out
dec
sub
mov
cmp
push
ds
adc
inc
push
mov
sub
mov
imul
clc
rolb
lods
inc
test
xchg
pop
not
test
push
push
jmp
push
pop
jmp
push
ret
xor
add
shlb
xor
jecxz
aas
mov
sarl
and
es
push
adc
dec
mov
inc
add
push
addr16
push
std
jmp
add
or
pop
dec
sub
mov
jmp
loop
push
push
xor
jbe
scas
xor
sti
jmp
or
loop
loope
and
push
pop
outsb
std
sbb
jbe
out
imull
je
pop
inc
ja
jp
aas
bound
inc
xchg
dec
bound
lret
mov
pushf
ret
sbb
pop
mov
push
dec
add
add
gs
jp
xchg
sub
sti
sub
xchg
adc
xor
or
pop
sti
xchg
adc
cmc
xor
popa
jg
cmpsb
mov
pushw
dec
and
jo
xchg
pop
push
shll
int3
inc
jge
push
stos
dec
xor
out
or
cmp
shr
pop
pop
jmp
loopne
push
lds
cmpsb
mov
fwait
adc
neg
and
cmpl
and
loopne
xor
push
arpl
mov
dec
jmp
add
pushl
mov
mov
mov
push
jp
popf
adc
sbb
in
or
daa
jecxz
shll
sbb
cli
cmp
pop
not
xchg
and
pop
push
mov
sbb
jmp
shl
dec
neg
hlt
ret
imul
adc
fdivl
mov
jo
cwtl
xor
jmp
sbbl
jne
pusha
cmpsl
xor
mov
push
mov
or
rcrl
sbb
les
nop
pusha
pop
stos
and
push
push
loope
or
jecxz
push
js
add
not
xor
ret
into
or
aam
sarl
push
pop
out
sti
mov
push
mov
lods
sarl
dec
xchg
popa
stos
dec
mov
pop
loope
mov
iret
inc
lcall
gs
test
shr
mov
xchg
stc
pop
add
push
mov
jae
sub
mov
cmpsb
leave
je
movsb
cwtl
push
mov
xchg
or
jne
test
xlat
adc
subb
arpl
or
lds
inc
stos
mov
out
scas
pop
mov
pop
outsl
scas
pop
or
pop
cli
pop
ja
sbb
inc
aad
flds
sbb
sub
xchg
dec
add
or
aas
xor
jg
push
or
push
push
cmp
sarb
add
add
push
or
stc
and
lahf
and
out
xchg
es
inc
cmp
ss
negl
and
js
add
lds
rol
in
add
jp
sub
js
sbb
icebp
popa
sub
jb
mov
mov
jl
jge
test
jmp
sarb
stc
push
mov
and
jae
mov
jb
stc
pop
pop
loope
cmp
out
fisttpl
ljmp
or
mov
pop
pop
popa
pop
and
loop
fbstp
jnp
or
mov
test
imul
cmp
loop
and
hlt
xchg
pmaddwd
sub
aas
sub
jbe
pop
push
movsb
inc
lds
xor
xor
sbb
sar
adc
push
pop
daa
xchg
push
sar
outsb
sbbb
or
cld
in
and
inc
jp
data16
add
in
in
lret
lret
sbb
mov
adc
repz
shl
adcl
icebp
pop
cli
outsb
cmp
test
pop
xor
jg
andb
mov
repnz
mov
sub
jmp
sub
repz
push
jecxz
pop
stos
sub
and
popa
test
push
rcrb
cwtl
push
mov
lock
neg
jmp
and
aas
mov
mov
pop
add
xchg
and
add
faddl
out
sub
clc
sub
xor
or
pushl
cmp
jecxz
jle
push
hlt
dec
inc
out
cmp
pop
add
pop
jecxz
mov
cld
testl
dec
cmpsl
fldln2
mov
fbld
add
loopne
pop
pop
cs
mov
mov
dec
inc
or
jmp
mov
dec
rorl
dec
call
xchg
cmp
jg
mull
icebp
dec
test
arpl
jb
sub
xlat
daa
sbb
lret
inc
in
out
roll
sub
and
add
and
inc
rcrl
pop
push
pusha
lock
loopne
sbb
dec
movl
mov
sub
mov
jge
jno
incb
ljmp
ret
sahf
std
lods
in
pop
daa
xorb
mov
inc
in
add
test
add
pop
jmp
dec
pop
test
cmpsl
add
int3
pushf
sub
push
test
cmp
cli
lahf
mov
out
call
jl
push
or
stos
sub
js
and
cld
add
das
jmp
pop
lahf
rorl
adcl
in
mov
xchg
mov
lret
enter
mov
cli
mov
call
pusha
nop
xchg
or
sti
cmp
mov
xchg
std
add
das
xor
mov
inc
cwtl
or
repz
inc
sbb
aaa
pop
and
bound
jecxz
push
leave
dec
push
xchg
push
lock
outsb
pop
mov
and
pop
mov
icebp
sub
pop
sub
adc
push
test
shlb
jecxz
repz
lret
push
push
or
not
fstp
movsl
xchg
addr16
pop
xchg
test
mov
dec
inc
iret
cltd
ret
test
bnd
adc
testl
and
jmp
ret
imul
jl
std
push
lods
sti
jg
push
add
sub
pop
sub
fisubl
loop
stos
movsb
ljmp
jno
in
inc
adc
popf
push
pop
test
mov
jmp
jns
add
mov
sti
jg
mov
outsl
push
mov
out
test
mov
mov
sub
mov
mov
push
cld
push
xchg
jno
outsl
in
fidivrl
mov
sbb
pop
gs
repz
mov
clc
mov
iret
dec
fisubl
push
jno
mov
jecxz
outsb
add
cmp
ret
pop
test
xchg
ret
add
aad
jl
push
cmp
sbb
out
mov
push
scas
adc
or
out
fldl
adc
xlat
xchg
cmp
pop
mov
sbb
fistpl
lods
mov
add
mov
das
mov
mov
stos
pop
xorb
cwtl
pop
mov
mov
xchg
aad
icebp
ror
sti
std
scas
fstpl
lea
jg
in
imul
shrb
cmp
pop
fcom
adc
leave
aas
insb
push
das
hlt
push
stc
or
jae
or
sub
stos
xchg
push
pushf
push
xchg
jge
pop
das
rolb
pop
xchg
adc
icebp
mov
xlat
push
scas
mov
and
push
mov
xor
roll
add
and
mov
lock
lods
cmp
or
repnz
lahf
jmp
ds
fsubs
add
mov
call
adc
daa
mov
pop
call
push
shl
adc
lcall
ss
mov
outsl
inc
sub
cltd
push
sti
pushf
clc
add
jle
pushf
stos
add
jmp
jg
push
aaa
xchg
mov
out
call
push
sbb
and
lahf
add
pop
push
mov
mov
jno
popa
arpl
fs
icebp
mov
sub
cwtl
sbbb
dec
stc
pop
bound
pop
ror
or
xchg
jb
stos
stos
adc
sub
lret
xrelease
mov
dec
adc
cwtl
rcrb
dec
in
lds
pop
xor
push
pop
or
shr
pop
iret
add
mov
adc
pusha
inc
sub
and
dec
pop
loope
mov
adc
sbb
movsb
ret
icebp
dec
pop
xor
out
mov
test
xor
push
mov
sub
je
jg
ja
rolb
dec
mov
popa
mov
mov
outsl
jno
loope
push
je
jbe
xchg
lock
push
aaa
push
or
and
mul
jle
shrl
and
add
cmp
cs
xor
or
rorb
sub
sub
lods
mov
push
or
stos
pop
pop
add
sub
nop
sub
cli
fcmove
lahf
cmc
xchg
cmc
mov
push
mov
jle
mov
or
scas
loop
xorl
jbe
pop
or
popa
sub
arpl
adcb
mov
loope
mov
jnp
and
jg
dec
arpl
ds
jecxz
inc
testb
mov
insl
mov
xchg
sub
jmp
dec
add
ret
pop
push
push
lds
shll
fcom
mov
cmp
inc
cmc
push
in
push
mov
pop
outsl
rorl
out
aam
clc
test
cmpsb
es
loop
mov
sbb
clc
in
jl
popf
stos
xchg
imul
divb
xchg
add
inc
pop
out
les
sub
fsubrp
int
and
shl
ret
test
dec
cld
pop
jne
jmp
mov
sbb
shlb
mov
imul
ja
gs
pop
sti
cltd
sahf
insb
mov
pop
or
dec
dec
sbb
lds
insl
push
shlb
orb
xchg
pop
adc
adc
mov
pusha
adc
rcrb
out
or
pop
rorb
sub
lods
pop
push
call
bound
push
adc
aas
pop
jmp
imul
mov
sub
dec
subb
cmp
aad
stos
subb
sub
push
adc
cmc
cwtl
pop
test
das
fwait
and
out
mov
out
sbb
mov
inc
and
in
mov
and
sbbl
jg
and
movsl
aad
pop
lea
xor
add
out
or
pop
sub
mov
les
jne
fnstcw
cwtl
jae
es
movhps
in
std
sbb
and
or
jecxz
push
mov
enter
xchg
jns
loop
dec
add
push
mov
imulb
adc
mov
or
iret
push
mov
jne
or
ljmp
lret
cs
mov
cmp
or
sbb
add
mov
arpl
sub
jp
xchg
out
ds
add
js
sbb
jmp
mul
and
or
fldl
daa
mov
imul
xor
movsb
push
push
push
shrb
push
ret
or
mov
mov
dec
repz
jmp
lcall
and
stos
in
and
int3
pop
lock
add
js
sbb
cli
cwtl
add
pop
out
sub
loopne
cmc
xor
imul
xor
mov
jmp
ret
mov
cld
lret
pop
and
out
xchg
jmp
stos
pop
std
lret
shlb
push
adc
sub
loopne
jmp
add
test
call
insl
jnp
cmp
inc
pop
jnp
pusha
mov
iret
mov
mov
add
cs
pusha
and
outsl
or
and
sbb
adc
orb
pop
nop
jg
or
mov
xor
jmp
pop
or
addr16
push
pop
adc
jnp
gs
mov
mov
jmp
mov
lds
leave
mov
jmp
inc
jnp
fstpl
fbstp
jmp
jo
xchg
cmc
adc
and
add
jne
or
push
insb
cs
incl
adc
jns
lds
push
xchg
and
sbb
daa
push
in
enter
adc
mov
push
jg
and
pop
push
adc
ja
popa
pop
lds
ficoml
pop
stos
iret
pushf
or
xlat
pop
push
push
push
push
pop
lock
cwtl
ss
push
push
push
pop
pop
fnstcw
sub
dec
sbb
xchg
pop
nop
jmp
pop
movsb
ret
sub
and
push
out
leave
cld
mov
adc
in
filds
jmp
test
pop
push
cwtl
xor
cmpb
xchg
pop
push
sub
addr16
adc
mov
jmp
mov
cmc
dec
pusha
call
mov
jmp
loopne
call
mov
dec
xchg
and
stc
call
aam
jmp
sbb
sub
fidivrs
inc
dec
sbbl
and
bound
nop
sub
les
ret
lret
out
push
test
subb
imul
inc
dec
inc
test
popf
ret
sbb
sub
xchg
add
inc
mov
pop
pop
rorl
inc
out
dec
sbb
ret
add
addr16
lods
push
rcr
dec
scas
repz
out
add
sbb
mov
lea
mov
push
sbb
clc
lret
or
data16
in
push
je
jmp
pop
or
inc
sbb
sbb
pop
not
stc
push
add
sbb
dec
jle
and
pop
or
dec
fldl
fiaddl
ljmp
or
int3
rclb
rorl
pusha
in
xchg
fdivl
dec
into
xor
adc
dec
roll
sub
scas
ljmp
dec
testb
outsb
imul
adc
outsb
clc
in
pop
add
repnz
mov
add
or
jnp
push
test
sbb
jmp
mov
sub
out
lods
fisubrl
jo
popf
in
inc
jmp
push
sub
ret
pop
loopne
clc
push
lds
push
pop
clc
es
or
or
xor
inc
xchg
inc
into
mov
nop
dec
sub
shlb
mov
add
das
imul
vdivss
sbb
pop
jo
jne
ja
das
push
jmp
mov
stc
cmp
dec
jb
repz
and
pop
pop
test
test
mov
scas
xlat
push
push
inc
inc
push
add
pop
sub
push
popf
pop
mov
or
xchg
inc
inc
and
cmpb
pop
lds
xchg
mov
popa
sub
xor
stc
iret
pop
push
int
mov
add
push
ja
push
loopne
or
dec
xchg
negl
xchg
sbb
out
sub
insb
sarl
or
clc
mov
and
lahf
pusha
fstl
cmp
sub
sub
mov
fcomps
adc
add
add
cmp
into
sti
sub
fs
xor
lar
in
lods
addr16
cld
in
andl
ficomps
aaa
mov
cmpl
push
out
push
xlat
or
scas
pop
cmpsl
cmp
jg
in
sub
fmull
xor
pop
fcomp
and
dec
cmp
mov
inc
ja
xchg
xor
xor
incl
pop
add
cmpsl
or
jge
xor
cmp
dec
inc
adc
loop
push
mov
jl
and
daa
xlat
cmp
pop
pop
inc
cmp
adc
push
add
mov
out
jp
rolb
mov
jg
cs
imul
inc
xchg
xchg
add
loopne
clc
arpl
and
js
push
adc
sbb
sbb
shrb
cmp
pop
inc
out
pop
stos
jb
pop
frstor
cmc
in
dec
fbstp
repnz
hlt
push
jmp
inc
xor
mov
out
mov
pop
mul
sub
push
cmp
jmp
push
lods
jb
or
dec
pop
mov
cmp
cmc
data16
ja
lea
pop
pop
sub
push
sub
sbb
outsb
stc
fildll
jbe
add
sbb
push
dec
es
int
sbb
or
add
out
mov
xor
pop
sub
cltd
jb
add
xchg
iret
mov
add
shr
aam
add
mov
or
out
push
dec
push
hlt
add
cmp
rcrb
mov
ret
fidivrl
or
or
add
mov
lcall
sub
lock
add
add
mov
or
jo
cs
shll
or
sti
adc
adc
dec
aaa
call
mov
pusha
cwtl
pop
aad
jle
push
and
mov
lds
daa
dec
ss
xor
call
mov
adc
fdivrl
ret
andps
jge
pop
xchg
dec
lods
push
int
mov
mov
test
and
or
push
loopne
jg
clc
sub
int
lock
incb
lcall
dec
and
in
mov
repz
pop
adc
sbb
push
or
jnp
xchg
fidivrs
add
sarb
jmp
push
push
push
adc
push
scas
stc
jge
push
lea
and
jg
movsb
xchg
xchg
xlat
stc
test
jae
sarb
lcall
js
les
rorb
or
sub
shlb
dec
ss
xchg
pop
mov
dec
mov
into
imul
push
pop
push
pop
in
outsb
in
data16
ficomps
fcoms
sub
fnstcw
inc
movsb
lock
mov
inc
dec
xor
repnz
mov
mov
pop
roll
xor
adc
popa
lock
jb
out
test
sub
daa
pusha
mov
cmpb
icebp
push
and
jle
or
mov
out
js
addr16
or
and
sub
sbb
push
add
mov
xor
pusha
les
xchg
les
das
push
jl
xor
lahf
pop
dec
repnz
jmp
pop
les
or
adc
icebp
repz
outsb
call
fs
mov
sub
int3
cltd
push
popf
add
mov
mov
pop
ret
xlat
dec
outsb
outsl
mov
push
or
push
cmp
inc
pop
jge
lcall
add
js
iret
adc
adc
lds
or
and
sub
jecxz
in
call
subb
stc
daa
jp
es
add
je
jle
mov
dec
mov
xor
dec
dec
jmp
pop
push
push
cmp
adc
push
jne
dec
sub
popf
jne
int3
add
push
lock
jmp
pop
fists
imul
fwait
aas
cmp
xchg
sub
fiadds
sub
mov
mov
or
or
aam
push
scas
mov
jg
push
fistpl
test
mov
xlat
dec
clc
das
pop
push
and
sbb
in
lret
in
cmp
mov
mov
js
push
inc
addr16
pop
mov
push
ja
outsb
mov
push
jmp
in
into
push
mov
dec
jmp
push
mov
jmp
jnp
jg
jbe
push
ror
es
or
lcall
dec
inc
rorb
add
jmp
scas
mov
mov
xchg
pop
ret
stc
nop
das
add
mov
dec
dec
scas
movb
xchg
or
sub
ficompl
or
and
fcompl
bound
sub
dec
jne
pusha
out
cmp
in
add
adc
mov
dec
jge
das
xor
add
jns
push
add
sub
rcr
aam
sub
mov
sbb
mov
shrb
aad
inc
fwait
loope
cmp
scas
daa
pop
movsb
je
jns
and
xchg
push
loope
jnp
hlt
xor
lcall
pop
aam
inc
or
dec
and
cmp
scas
fidivrs
mov
imull
daa
and
push
xor
dec
arpl
mov
push
push
fdivrl
outsl
push
adc
jmp
lds
xchg
int
pop
test
stos
mov
add
repnz
adc
push
pop
ret
fcoms
fisttpll
pop
or
push
cwtl
and
jmp
push
push
lods
roll
pop
mov
inc
pop
xlat
loopne
call
ss
add
ds
dec
jmp
jno
cwtl
push
inc
xorl
fadds
jmp
insb
pushf
mov
test
add
mov
inc
and
das
pop
mov
mov
pop
push
xchg
inc
and
mov
incb
xchg
push
push
push
xchg
or
lahf
sbb
sub
and
scas
ficoms
ss
add
sub
xchg
or
xchg
insb
cwtl
enter
and
inc
pusha
stos
sbb
psubusw
shl
push
xchg
xchg
inc
mov
repz
lcall
scas
pop
mov
sub
xor
cs
add
push
sbbb
cmp
add
in
inc
xchg
rolb
jo
mov
ret
mov
adc
pop
inc
and
or
fwait
rclb
add
test
mov
adc
enter
aam
pushf
sub
pusha
iret
movsl
sbb
in
xchg
jae
imul
or
adc
mov
pop
cmc
in
call
add
test
mov
stos
jle
decl
out
pop
inc
pop
add
add
xchg
push
mov
jns
popf
clc
insl
mov
pop
xor
fstps
insb
or
daa
pusha
gs
ja
bound
popl
out
xlat
dec
mov
xchg
and
mov
jnp
dec
xchg
sub
imul
jmp
add
lock
pop
enter
imul
push
pop
jb
xchg
inc
addl
pop
push
mov
sbbl
and
pop
icebp
movsl
xor
daa
mov
add
and
outsl
mov
and
and
add
or
cmc
sbb
sbb
cmpsb
jb
mov
ds
in
add
or
jg
es
rcrb
outsl
xor
jo
or
mov
cmpsl
cmc
std
xor
mov
arpl
or
imul
fst
xor
xlat
xchg
and
pop
in
pop
mov
push
push
jp
or
pop
out
add
and
push
ret
pop
shlb
add
jb
jno
mov
movsb
std
mov
add
xchg
cmp
mov
push
push
pusha
push
jo
out
or
dec
mov
jne
xchg
outsl
cmpsb
scas
ss
mov
push
fisubl
aas
iret
cmp
push
aam
add
clc
ret
loope
mov
lds
stos
mov
pusha
jmp
dec
enter
jg
pop
xchg
cwtl
mov
add
loop,pt
pop
test
aad
xorl
shl
shrb
test
mov
or
push
jmp
add
jp
sahf
xor
aad
xchg
lods
cld
or
push
je
call
iret
or
test
call
jmp
adc
and
mov
scas
cli
faddl
inc
xor
aas
jns
pop
mov
and
clc
outsb
loopne
fbld
out
add
xor
push
addr16
dec
je
adc
mov
jp
popf
and
les
add
sbb
insb
leave
xchg
sub
divb
aaa
loope
or
hlt
mov
rcr
imul
push
add
jmp
mov
stc
add
lds
lods
add
pop
dec
add
adc
mov
add
push
jbe
leave
jno
cmp
mov
add
push
mov
pop
jmp
sti
adc
cli
les
xchg
cmpsb
pop
lods
add
mov
mov
or
or
mov
mov
ljmp
push
add
in
add
push
mov
inc
and
sub
inc
mov
adc
add
or
les
mov
rclb
lret
dec
pop
adc
repz
clc
nop
xchg
add
repnz
arpl
jns
sbb
jb
xor
pop
imul
out
add
addr16
addl
clc
pop
dec
cmp
cmp
lcall
das
pop
or
out
inc
cmpsb
cwtl
mov
mov
ds
xchg
mov
add
loop
shlb
dec
push
ja
mov
add
rclb
push
je
test
xchg
mov
inc
jno
mov
lods
xor
jmp
js
jp
ret
dec
dec
add
das
fwait
dec
subb
jle
std
and
push
movsb
insb
push
loopne
or
xor
xor
fiadds
dec
pop
xor
les
xchg
mov
mov
adc
shrl
inc
push
divl
cmp
cli
fstl
dec
sub
sbb
or
icebp
push
imul
mov
cmpsb
call
jno
cli
lea
sub
test
cmp
shrl
pop
aam
mov
xchg
sub
add
xor
mov
sub
lock
or
sub
jns
and
adc
pusha
out
mov
fisubrs
int
adc
or
ret
inc
mov
das
adc
mov
hlt
pop
icebp
mov
jmp
popf
mov
jae
cld
or
sub
adc
jle
add
xchg
stos
mov
mov
data16
sub
dec
xchg
mov
sarl
lret
lock
subb
cmp
add
add
and
iret
repnz
push
add
fcomp
add
push
jmp
xor
cmc
pop
scas
mov
sarb
cmp
dec
in
jecxz
test
and
xchg
and
and
xchg
add
dec
mov
mov
and
xchg
xlat
sahf
pop
cwtl
sbbl
xor
pop
in
out
inc
xor
cwtl
mov
inc
jnp
or
dec
cmp
pop
add
add
mov
sar
xor
sarb
dec
jmp
mov
stos
aam
add
lea
sub
cmp
imul
jns
popa
pop
jne
lret
and
adc
jb
xchg
into
pop
jno
dec
hlt
in
shrb
mov
or
insb
mov
pop
jecxz
xchg
scas
dec
aad
jmp
mov
std
sub
adc
test
sub
jge
ds
shrl
push
orl
sbb
sbb
in
ljmp
lods
pop
subl
push
cmc
mov
cld
inc
push
inc
cmp
pusha
xchg
das
jle
sbb
jge
jecxz
movsl
jnp
inc
jl
adc
vmovdqa
adc
mov
mov
adc
xchg
fdiv
fsubrl
std
or
icebp
cmp
imul
dec
sub
gs
and
cmp
leave
push
and
add
mov
test
or
cmpsb
sbb
xor
icebp
jge
or
inc
lea
in
mov
dec
push
cltd
adc
loopw
out
or
bound
or
pop
add
mov
stc
xchg
lahf
mov
push
pop
or
pop
pop
cmpsb
add
aam
push
dec
pop
loopne
sub
adc
idivb
scas
adc
pop
or
es
push
lret
pop
pop
xchg
lcall
xchg
fdivs
shl
sub
cmp
dec
pop
cli
leave
jno
or
xor
dec
mov
and
adc
xor
xchg
aaa
fldenv
dec
lods
mov
or
lret
add
push
inc
add
adc
mov
cmp
int
imul
inc
neg
hlt
sarl
lock
imul
pop
cmpsl
je
pop
pop
push
mov
arpl
out
inc
int
add
xorb
cld
mov
mov
sub
sub
sub
or
fdivrl
xor
sbb
dec
mov
cmpsb
or
stos
jns
dec
pcmpeqw
or
test
pop
inc
push
push
or
sub
sub
scas
mov
dec
shl
movsl
or
jecxz
sar
push
jmp
push
or
je
lock
leave
pop
pop
std
mov
sub
mov
popa
and
cmpl
daa
pop
bound
lret
inc
sbb
cltd
mov
out
mov
gs
loopne
push
shl
into
and
adc
daa
cmp
pop
test
xor
adc
pusha
data16
stos
mov
roll
test
jge
or
jmp
dec
lea
inc
pop
das
scas
and
adc
jmp
mov
and
mov
aam
orl
adc
inc
int3
mov
or
and
inc
add
ds
pusha
pop
lds
jmp
lods
pop
cmpsl
mov
xchg
pop
sbb
jmp
or
ds
testl
xor
pop
repz
jge
and
out
arpl
jne
and
mov
call
lock
add
xor
sub
roll
ss
dec
les
out
es
sbb
mov
add
pop
jne
xlat
loop
je
inc
xor
adc
jmp
push
bound
jg
sub
adc
push
and
into
out
push
dec
insl
mov
mov
jmp
pop
pop
orl
fdivs
out
mov
ja
pop
outsl
mov
stc
pop
pop
pop
push
bound
decb
sub
adc
mov
sub
add
pop
mov
inc
dec
mov
jne,pt
sbb
lahf
jbe
push
dec
lret
xchg
push
sub
sub
push
pop
xorb
mov
push
cli
adc
repz
pusha
gs
and
lock
lds
xor
imul
out
jbe
adc
fimull
std
fs
adc
push
jne
ret
jp
or
or
repnz
push
push
push
mov
insl
dec
mov
fucomip
jbe
add
add
scas
js
idiv
mov
xor
adc
jg
sbb
rclb
jmp
popf
lock
mov
ss
ret
sbb
mov
pop
mov
xor
fildl
dec
inc
adc
sub
add
arpl
insl
repnz
dec
sub
mov
cmp
pop
sub
imul
daa
movsb
std
pop
xor
xor
mov
jmp
mov
cld
mov
push
loope
leave
sub
mov
xchg
push
xlat
mov
insb
mov
inc
or
dec
test
arpl
add
sbb
push
loopne
adc
cld
std
popf
or
in
popa
jmp
repnz
cmp
sbb
lock
cmp
xlat
add
pop
scas
test
mov
jp
pusha
frstor
mov
push
out
mov
add
mov
int
mov
popa
pop
test
or
jb
mov
mov
jb
add
pop
push
mov
push
inc
out
inc
lods
pusha
inc
push
pop
orl
hlt
jb
in
mov
iret
adc
fs
lcall
sub
inc
sbb
in
inc
jbe
movsl
mov
xlat
lret
jg
pop
add
mov
call
dec
xchg
jno
jp
cli
xor
mov
dec
in
or
arpl
out
mov
pop
mov
or
push
cwtl
and
pop
daa
arpl
or
or
pop
std
les
mov
fdivrl
push
loop
or
roll
mov
jg
inc
xchg
inc
push
nop
stos
add
mov
fimull
negl
scas
or
jns
lods
fistps
cmp
push
daa
push
pop
fstl
jne
sub
pop
outsl
and
cmp
fstps
xchg
pusha
ljmp
call
mov
test
push
push
jns
inc
mov
pop
popf
loop
dec
pop
jg
shrb
arpl
jmp
jl
mov
jp
add
cmp
add
not
into
clc
mov
lcall
stc
fimull
decl
jne
jno
subb
fs
fidivrs
enter
cmp
jmp
inc
lret
push
push
iret
add
dec
pop
inc
xchg
jecxz
cmc
filds
push
add
inc
adc
nop
mov
pop
push
ss
inc
pusha
cmp
mov
push
push
adc
jmp
jo
push
in
pop
sub
xchg
ss
iret
and
pop
pop
mov
pusha
jle
subb
sbb
scas
clc
inc
cmc
stos
fadd
add
push
bound
mov
and
mov
out
jae
fildll
call
xor
rcl
mov
xchg
sub
adc
xor
ljmp
add
push
sbb
dec
ss
inc
add
jbe
shl
and
incb
dec
or
mov
add
in
jae
mov
ljmp
sub
ds
pushf
jnp
and
jmp
enter
dec
test
dec
mov
divb
jmp
or
cmc
jb
add
push
inc
push
jg
test
or
jbe
add
int
push
pop
push
jae
adc
stos
push
mov
jecxz
inc
push
and
and
or
jmp
sub
lods
inc
mov
sahf
and
push
mov
ds
pop
xchg
rcrb
or
push
jbe
sarb
jle
mov
push
lcall
lods
and
add
fdivrl
push
repz
cmp
mov
pop
ja
shll
pop
imul
repnz
in
test
pop
in
aaa
mov
popf
and
push
push
push
sbb
pop
and
jp
cld
or
ljmp
add
ret
icebp
call
cmp
shlb
sub
xchg
fimull
sub
adc
adc
mov
and
adc
jg
jo
inc
cmp
adc
and
push
sub
int
mov
lods
mov
neg
or
icebp
sub
xchg
pop
jl
loope
dec
std
jne
enter
sbb
aaa
cmp
jns
jmp
sti
pop
push
cmp
popa
hlt
into
icebp
cmpsb
repnz
push
push
js
sub
scas
gs
push
mov
daa
ljmp
dec
and
mov
jge
add
cmp
stos
jl
fsubs
scas
and
push
outsb
add
shr
mov
mov
xor
push
add
xchg
loop
sbb
pop
fldl2t
int
imul
xor
mov
xor
sbb
push
sbbb
ret
xor
loopne
daa
pop
sbb
adc
or
dec
dec
test
mov
jns
sub
mov
and
cmpps
fs
lahf
pop
test
je
stos
cmpsl
and
pop
pop
adc
pop
int
push
stos
cmp
sub
repz
dec
icebp
movsl
cmp
sub
push
stos
pop
jmp
push
xor
pop
xor
adc
jle
dec
mov
add
lods
cmp
inc
xchg
daa
lret
or
ret
jle
and
mov
pop
push
add
or
fs
ret
jecxz
jo
stos
cmpsl
cmp
push
mov
aaa
jns
mov
pushf
xchg
loope
addl
es
test
jecxz
mov
addl
jl,pn
add
pop
add
nop
mov
popa
xor
pop
jne
add
shl
mov
and
jno
repz
or
and
in
mull
adc
fwait
or
pushf
push
dec
xor
int
add
out
fsub
ret
movl
pop
ret
xchg
sti
jns
roll
pop
js
rclb
xchg
jnp
jne
and
inc
adcb
add
dec
add
inc
testl
das
mov
add
test
push
je
or
shlb
addl
jle
inc
jne
rol
movsb
imul
in
pop
inc
ja
jle
adc
jns
insb
xchg
push
cmp
xchg
pop
test
push
push
loope
add
sub
mov
out
xchg
and
jl
jae
sub
xor
pop
mov
push
dec
cmpsl
cs
jmp
pop
lret
test
push
call
pop
and
ficompl
fcmovnu
mov
dec
rclb
addl
nop
outsl
push
push
add
and
mov
sar
inc
mov
cmp
jle
push
insl
push
adc
daa
push
or
or
xor
clc
pop
and
and
xor
adc
test
adc
mov
daa
push
js
jg
adc
cmp
xor
dec
mov
cmp
mov
out
sbbl
dec
loope
xchg
add
mov
jne
or
xor
push
or
add
adc
dec
not
xor
pop
xchg
add
jmp
mov
lret
mov
jmp
out
dec
dec
callw
jne
adc
insl
jecxz
mov
push
jmp
dec
pop
cli
testl
repz
and
push
les
xor
xchg
adc
pop
cmpsl
add
loop
icebp
and
xchg
cwtl
test
lret
fmulp
push
movsl
push
push
ret
inc
xchg
out
or
loope
xor
dec
jnp
xor
and
mov
lea
divb
inc
adc
sarb
dec
imul
test
mov
push
leave
sbb
aas
push
or
out
jp
dec
pop
dec
ds
jp
nop
jg
mov
push
popl
push
cwtl
ja
jbe
pusha
adc
int
popa
aaa
ljmp
push
add
ljmp
cmpsl
lods
lods
daa
jne
mov
dec
sub
rclb
mov
add
popl
insl
mov
outsb
lock
mov
pop
mov
aad
ret
pop
push
movsb
push
ljmp
out
pop
inc
mov
mov
in
filds
daa
adc
jle
sub
sbb
xor
das
insb
add
pushw
shrb
pusha
aad
out
cmp
or
imul
pop
push
rolb
neg
and
push
pusha
ror
sub
scas
pop
sbbb
sub
jae
into
pop
push
jnp
jle
int
xor
xchg
and
add
xchg
adc
adc
push
cwtl
push
or
arpl
jge
fnstcw
push
dec
dec
sub
cmpsb
or
jg
xor
dec
test
movsb
add
add
add
clc
jecxz
mov
add
jmp
xchg
sahf
fistl
add
lea
push
cmp
cmp
add
hlt
rclb
in
stos
jbe
add
lret
add
add
pop
pusha
push
in
lahf
ret
pop
jmp
xchg
adc
jno,pn
dec
in
add
filds
imul
xor
int
ret
add
je
add
push
into
lahf
adc
cmp
std
and
or
sub
adc
and
arpl
push
cmp
mov
inc
int3
sub
xchg
or
fstl
xor
dec
mov
inc
pop
xlat
fs
and
arpl
idiv
xchg
and
insb
nop
dec
mov
loopne
int3
out
mov
scas
out
das
mov
pop
jecxz
lcall
inc
adc
ffreep
mov
pop
sbbb
add
mov
inc
ret
fiadds
pop
push
add
iret
and
movl
pop
dec
inc
push
xor
push
orb
pop
adc
pop
leave
xor
mov
push
and
adc
popf
call
or
shll
scas
movsl
push
cmp
mov
xlat
fldenv
jae
adc
int
xor
fildl
lods
pop
adc
push
push
ljmp
sbb
incl
push
xor
pextrw
jg
sub
xor
das
cli
jne
mov
jmp
adc
and
sbb
clc
xchg
sbbl
add
push
stos
filds
push
and
pusha
iret
adc
push
dec
jbe
push
jmp
shl
rorb
push
mov
loopne
jne
jmp
mov
dec
sbb
and
push
and
xor
clc
test
pop
adcl
pop
xor
out
push
adc
sub
dec
test
icebp
movsb
sbb
xor
cmc
outsb
push
loop
pop
or
sub
shlb
xlat
pop
jg
sub
jmp
decb
in
sbb
xor
subl
mov
and
jae
mov
mull
or
dec
cmp
cmp
and
xor
ret
filds
mov
mov
sub
out
mov
popa
add
push
pop
xchg
mov
dec
aas
push
add
shr
mov
cli
xor
pop
pop
scas
out
movsl
mov
pop
push
mov
jmp
pop
or
and
jmp
stos
xchg
popa
imul
pop
pop
xor
pop
add
mov
movsb
lock
dec
inc
push
sbb
xor
jmp
mov
pop
fadds
lret
mov
outsl
add
and
or
push
and
loope
jp
cmp
jae
push
mov
mov
pop
popf
jg
and
mov
cld
cmp
mov
mov
es
stc
add
adc
mov
call
lods
cs
add
and
mov
inc
xor
push
pop
test
jle
fsubrs
add
add
and
jle
pop
mov
mov
xchg
ljmp
mov
leave
push
cmp
cmpsb
loope
pop
cmp
or
push
dec
cmp
lcall
jns
int3
ret
nop
ds
adc
test
mov
inc
mov
jae
add
sub
leave
add
lods
push
or
jp
cmpb
addr16
aaa
pop
fadds
and
arpl
adc
stos
dec
xlat
movsb
aas
addr16
rcll
add
adc
jnp
int
cmc
enter
jnp
mov
pop
cmp
add
xor
loop
lret
cmp
or
ret
cmpsb
pusha
mov
pop
dec
in
jno
pusha
xor
in
popf
xor
xorb
les
out
mov
fisubrl
pop
mov
cmp
dec
push
test
rorb
push
inc
inc
mov
or
jmp
scas
add
das
adcl
xchg
fs
call
sub
add
jmp
sbb
lea
hlt
mov
out
inc
in
ja
mov
push
std
mov
pop
mov
hlt
in
sub
push
scas
ret
ja
shr
fldt
or
cwtl
rcll
cwtl
push
jmp
or
stos
cli
fsubrs
dec
inc
lods
push
mov
les
daa
adc
shl
and
or
movsl
jge
sub
mov
outsl
and
in
shll
inc
inc
jmp
mov
out
adc
cmp
mov
rorl
add
dec
add
ret
sbb
or
or
pop
xor
cmpb
lods
jnp
mov
jle
xchg
icebp
ds
inc
push
cld
sub
and
pop
dec
inc
mov
mov
sahf
dec
inc
mov
push
jmp
inc
mov
aam
ja
push
or
into
in
out
or
in
mov
movsb
jae
fs
fidivl
lods
or
pop
cmp
sbb
xor
xchg
ret
push
pop
mov
and
stos
or
outsb
mov
push
inc
mov
xor
jo
push
gs
out
test
loopne
shrb
sub
add
out
sbb
in
scas
insb
leave
push
sub
pop
or
pop
mov
or
inc
adc
shll
shll
jmp
notb
std
shrl
or
sub
xchg
sub
nop
inc
or
mov
xor
jmp
ja
inc
int
imul
pop
push
add
ret
or
nop
xchg
pop
add
add
repz
lock
subb
jmp
xchg
popf
repnz
shlb
push
push
jmp
push
inc
ljmp
mov
fs
out
cld
push
les
outsl
out
xchg
ljmp
or
pop
xchg
push
jne
push
lods
mov
push
xchg
push
xchg
loop
test
pop
or
mov
and
xchg
shll
xchg
push
out
add
or
pop
out
aam
push
or
or
fsubrl
push
mov
add
in
aaa
jl
push
mov
push
std
ljmp
loopne
mov
push
sbb
cmp
es
push
jg
rcrl
mov
lret
jmp
add
divl
dec
push
mov
add
jmp
divb
add
sub
cmp
add
add
pop
push
scas
inc
mov
loopne
pop
mov
hlt
ret
xor
out
loope
enter
or
ret
test
loop
mov
lea
ss
inc
in
push
inc
mov
js
pop
pop
mov
popa
test
jbe
mov
icebp
lret
add
rclb
push
or
je
jo
jnp
popa
loopne
addr16
xchg
jne
mov
inc
push
je
rcll
sub
in
test
lret
dec
pop
jmp
andl
shlb
sub
cmc
js
ds
aam
mov
jne
push
test
inc
lahf
sub
pop
cmc
push
dec
sar
lds
cmp
jmp
pop
xor
ss
jb
pop
shl
cmp
mov
dec
push
lods
mov
sbb
pop
pop
cmpsl
pop
xchg
sbb
fcom
repz
adc
xchg
or
inc
dec
cmpsb
pop
cmp
popa
divl
inc
pop
cmp
mov
push
out
mov
pusha
mov
mov
push
mov
dec
jb
mov
jae
pop
sub
xchg
mov
aaa
inc
adcb
pop
insb
cmp
sub
into
out
mov
pop
and
in
neg
mov
lret
xor
push
sbb
push
pop
sbb
negb
out
lds
in
cli
jnp
in
sub
xor
cld
ds
pop
lret
mov
ret
aas
popa
pop
xchg
fisubrs
pop
cmpsl
adc
or
and
and
ja
xchg
add
mov
leave
push
inc
xor
cs
or
mov
ficoms
arpl
dec
adc
adc
add
and
jo
add
inc
xor
stos
mov
sub
ss
push
pop
mov
add
pop
aam
in
push
jmp
fiaddl
daa
push
clc
test
pop
sub
pop
aas
xor
xchg
pusha
mov
neg
stos
rolb
sbb
mov
xor
mov
loope
mov
sub
push
xor
and
xor
imul
clc
cmpb
lock
push
add
stos
mov
xchg
sbb
xchg
in
push
push
sub
lret
sbb
cmp
dec
inc
sub
or
jmp
xchg
daa
inc
pop
ret
inc
lcall
fiaddl
in
int3
jle
xchg
call
nop
dec
adcb
aaa
sbb
fs
push
mov
push
xor
or
jns
in
jle
in
or
jno
xor
sbb
mov
lds
outsl
dec
jnp
nop
filds
dec
add
push
mov
mov
lds
insb
jb
adc
out
data16
dec
fsubs
jle
mov
pop
test
cld
sub
decl
call
jnp
xchg
repnz
dec
aaa
aad
cmc
inc
std
dec
pop
xchg
xchg
xor
jmp
stos
cmp
loopne
mov
scas
or
movsl
fnstsw
js
cwtl
loop
jae
lods
jl
or
cld
aaa
cmp
push
adc
push
sbb
sub
orb
ret
or
cwtl
pop
out
xchg
jge
jb
adc
add
add
ja
int3
jns
sbb
jg
sarl
or
xor
pop
pop
pop
mov
ss
iret
xor
xor
out
jmp
int3
mov
cmp
pop
jge
ret
cli
mov
mov
add
inc
mov
lahf
xlat
cmpsl
pop
lods
shrl
sbb
push
inc
movsb
push
imul
sub
pop
scas
jo
push
test
pop
rcrl
adc
jno
arpl
fcompl
push
ljmp
cltd
or
mov
roll
pop
push
aad
ljmp
test
mov
add
into
cvtps2pi
push
jl
cmp
ret
sarb
dec
sub
xor
sub
mov
pop
cs
lods
sub
jno
and
adc
out
cld
cmp
or
pop
pop
in
inc
fbld
cmp
rcl
cwtl
ficompl
test
pop
jo
pop
push
enter
inc
xor
das
shlb
pop
cmp
sub
les
fimull
or
jo
or
mull
add
lock
daa
sub
lret
or
popa
add
dec
cmpsl
inc
ror
jmp
repnz
movsb
dec
push
add
add
add
mov
xor
xor
pop
bound
ljmp
ret
adc
pop
jle
imul
and
ret
rcr
and
aas
lahf
jno
mov
aad
lds
sbb
test
push
xor
adc
cs
mov
sete
push
xchg
adc
sub
pusha
jo
nop
ficompl
aas
add
cmp
imul
fidivs
inc
dec
shrl
daa
js
aam
insb
mov
imulb
scas
jp
xor
nop
fisubrl
fldl
insl
dec
xor
arpl
mov
sub
jo
cmp
mov
repz
fisttps
daa
mul
and
inc
mov
add
out
gs
insb
pop
inc
push
loope
mov
mov
sub
int
and
push
movsl
xchg
popf
inc
lea
mov
inc
add
mov
repz
push
push
sbb
fstl
imul
pop
lods
jbe
cli
cmp
sbb
xlat
jne
scas
mov
mov
cld
or
xchg
insb
pop
adc
inc
mov
adc
push
jle
lock
aad
push
push
add
ret
pop
or
pop
jno
mov
and
addr16
arpl
sub
aaa
mov
in
daa
inc
clc
lds
xchg
or
add
loopne
sub
dec
jle
push
jge
je
or
ja
jno
or
mov
mov
mov
inc
adc
xor
and
jb
inc
inc
or
xchg
jmp
subb
ja
jp
jmp
sub
sub
movsb
inc
pop
jge
rcrb
loopne
out
dec
and
ja
cwtl
pop
or
sub
ljmp
push
and
clc
xchg
sbb
mov
shlb
lahf
loope
xlat
ret
out
clc
push
addr16
ffreep
pop
inc
les
loope
sbb
jl
add
jns
push
add
enter
inc
sti
test
imul
mov
fisubrl
clc
jmp
xchg
das
pushf
mov
cld
aas
addr16
sbb
roll
mov
pop
xor
out
or
dec
adc
stos
inc
iret
mov
pop
xor
sub
ret
dec
nop
cwtl
push
jmp
ja
add
add
add
pop
pop
add
js
sbb
inc
inc
add
pushf
xor
or
jge
mov
jmp
ljmp
in
lahf
push
mov
stc
xchg
mov
lock
or
adc
jmp
sub
xchg
mov
dec
outsl
out
insl
adc
imul
out
sub
jp
iret
mov
adc
push
jg
jmp
push
cmp
pop
push
popa
mov
adc
loopne
lea
loopne
jnp
mov
xor
pop
insb
stos
sarb
cmp
jl
ret
cmp
repnz
jmp
push
sbb
inc
add
cmp
pop
sub
mov
lock
mov
sarb
fldl
push
shll
mov
jmp
mov
dec
xor
xor
or
cmp
mov
out
pop
add
and
mov
dec
jmp
loopne
rclb
ljmp
dec
push
int3
pop
mov
outsb
or
pop
stc
sub
scas
mov
mov
lcall
pop
outsb
mov
lods
mov
or
movl
jp
sbb
lock
daa
das
push
sar
adc
cld
fwait
dec
enter
in
push
push
push
rcr
push
adc
addr16
jo
dec
push
mov
pop
pop
jne
mov
lods
cmp
adc
sub
es
jb
pop
jno
dec
cld
fwait
jmp
add
fstps
jl
inc
mov
xlat
pop
xchg
icebp
dec
add
movsl
sbb
bnd
hlt
cmp
ds
lahf
mov
inc
in
jno
call
pop
or
jne
lahf
orb
push
mov
xor
in
pop
in
adc
test
pop
sub
lret
push
pop
stos
add
push
cmc
fbld
push
arpl
into
inc
mov
cld
push
push
lds
daa
or
add
sbb
push
scas
mov
pop
mov
dec
cli
cmp
sub
dec
adc
sub
inc
xor
sbb
out
adc
push
idivl
ss
iret
push
repnz
inc
icebp
pop
mov
push
shl
adc
and
sub
add
mov
call
popf
rcrl
ljmp
mov
mov
inc
push
cmp
pop
cltd
ljmp
ss
sub
outsb
shlb
rcl
add
out
inc
pop
movsb
sbb
leave
dec
lock
ljmp
bound
cmp
xorb
xchg
leave
mov
cltd
mov
dec
jl
add
lds
xchg
aad
or
push
fstl
rolb
or
test
movntq
aam
out
cld
rol
sub
dec
pop
jmp
jne
push
sbb
sbbb
mov
add
push
mov
pop
loope
aas
mov
push
push
jmp
xlat
leave
mov
inc
dec
lcall
pop
jmp
cmp
rcrb
jg
ret
jbe
pop
dec
xchg
pop
fcomps
jge
call
sbb
push
add
dec
xchg
sub
and
xlat
add
sbb
or
pop
cmpsb
sar
add
jmp
or
pop
mov
pop
adc
dec
test
mov
lret
push
lock
and
sbb
mov
daa
iret
test
xchg
std
adc
sub
outsl
mov
in
stc
out
sub
jo
lea
jns
sub
adc
es
icebp
cmove
or
add
jmp
and
imul
xchg
pop
sub
adc
mov
lds
out
lret
add
pop
test
xchg
stc
adc
stos
mov
adc
decb
scas
and
or
or
jo
leave
add
add
lds
xor
bound
cld
jb
shl
add
lret
inc
sbb
push
inc
add
xor
jo
mulb
loop
jne
movsl
pop
add
mov
push
or
dec
clc
adc
addb
and
cmp
lcall
or
not
inc
shl
jne
mov
lret
or
sbb
arpl
push
cmp
or
and
dec
call
aas
pop
shll
pop
pop
mov
insb
xor
sub
mov
xchg
add
jbe
or
test
mov
imul
shrb
or
repz
mov
ret
push
jle
push
jge
cmp
test
jg
pop
jge
inc
iret
addb
mov
icebp
hlt
leave
xlat
pushf
xchg
adc
and
or
mov
push
repz
pop
shl
pop
not
insb
pop
cli
insb
cmp
sub
mov
int
jmp
movsl
xor
cmp
loop
mov
jge
or
adc
xchg
dec
or
jo
jne
jle
inc
adc
inc
and
and
mov
cmp
mov
sub
out
aas
repz
ja
jae
mov
add
adc
adc
or
ret
cmc
pop
pop
ljmp
jae
adc
xor
add
insb
pop
inc
push
dec
js
rclb
sti
and
dec
lds
jmp
mov
popf
aad
add
and
pop
andb
loope
adc
push
add
movsl
sub
stos
xor
test
ret
jne
xchg
xchg
imull
ret
clc
out
js
or
or
pushf
outsl
cmp
popf
clc
push
pushf
iret
or
idivl
push
xlat
xchg
lret
sti
movsb
xchg
loop
xor
inc
push
pop
push
loopne
sbb
pop
mov
cmc
cmp
movsl
je
dec
push
lret
adc
sub
cli
rolb
sbb
outsb
mov
mov
cmp
xchg
dec
lret
mov
js
movups
pop
clc
fiadds
jle
cmp
pusha
test
mov
mov
xchg
cmpsb
dec
dec
xlat
or
jbe
out
sbb
aam
sbb
push
es
add
add
cmc
mov
das
subl
mov
lret
mov
nop
add
ljmp
rorb
adc
add
repz
jmp
mov
adc
lds
and
or
sub
cmpsb
ret
test
pusha
sbb
push
es
sub
pushw
cmp
mov
inc
hlt
cmp
or
in
adc
cmp
and
or
xchg
or
pop
fisttps
mov
sarb
rcrb
mov
xchg
pusha
orb
mov
xor
sub
or
mov
xchg
rcrb
push
decl
mov
add
es
inc
mov
test
push
out
andb
sbb
push
jns
push
sbb
push
inc
xor
arpl
std
adc
xchg
inc
ja
push
push
xchg
push
pop
lcall
sub
xchg
pop
add
cli
nop
and
cmp
xor
adc
popf
jno
fs
pop
repnz
subb
out
jne
cs
ret
mov
or
cmc
mov
or
adc
push
ret
das
push
cmp
sbb
push
in
pop
sub
xlat
bound
shlb
sbb
out
jno
sub
cmp
fistps
push
jl
into
sub
push
jo
jmp
push
ret
or
and
or
mov
stc
push
add
ljmp
mov
jmp
loopne
jp
arpl
jmp
test
ror
dec
fwait
rorl
stc
icebp
pop
pop
lar
cmp
xchg
not
cmp
sbb
loope
mov
notb
dec
ret
mov
stc
mov
mov
pop
sub
popa
jmp
push
mov
mov
mov
cs
fucomp
pusha
jo
sbb
lock
dec
mov
jns
sbb
aam
push
cld
test
clc
adc
into
in
push
or
pop
pop
mov
into
mov
pop
jbe
bound
hlt
jnp
dec
aaa
das
ja
ja
add
mov
sbb
fxch
sub
sub
scas
inc
das
dec
or
gs
adc
mov
xlat
xor
loopne
rol
or
fs
lret
movsb
pop
lods
stc
jo
or
xor
mov
cld
push
das
pop
pushf
mov
xor
icebp
lock
pusha
lcall
lods
mov
dec
jge
pop
pop
roll
pop
push
add
popa
add
orl
jmp
and
jmp
mov
outsl
hlt
mov
popf
mov
sub
notb
push
pop
test
and
out
mov
popf
addr16
cmp
lods
bound
push
lock
sti
pusha
js
daa
addr16
or
push
mov
lds
jmp
xorl
jmp
rorb
das
in
pop
inc
or
mov
or
enter
add
sub
call
hlt
aam
or
sub
sub
push
ds
or
ret
ds
dec
xchg
sbb
and
push
out
adc
mov
or
sub
xor
fwait
push
mov
ss
test
aas
pop
dec
adc
jmp
jmp
icebp
in
and
iret
push
fs
xor
hlt
jne
pop
mov
unpcklps
je
stos
cmc
push
andb
das
add
fcoms
inc
adcb
adc
and
add
pop
mov
push
in
mov
xor
sub
inc
xor
push
inc
shlb
out
jmp
jb
pop
cli
pop
lcall
add
inc
dec
mov
dec
pop
pop
push
push
ss
in
das
dec
jmp
push
imul
out
or
leave
sub
je
and
lea
dec
mov
push
hlt
push
pop
lahf
mov
add
movzwl
insl
repnz
pop
lahf
lock
inc
dec
pushf
addr16
xor
cwtl
rorl
sub
jmp
xor
lds
lret
in
or
lods
push
mov
adc
aaa
js
orb
enter
lret
adc
or
cmp
or
pop
pop
jmp
push
imul
cmp
cmp
add
sub
std
addb
jbe
dec
dec
cmp
dec
les
mov
cwtl
cmc
cs
js
imul
gs
push
out
jb
adc
cli
cmp
jmp
cmp
fisttpll
nop
imul
inc
push
das
xchg
lahf
dec
pop
cmp
push
jmp
mov
lret
mov
push
jmp
mov
pushf
dec
push
fadds
cmc
jmp
into
mov
sbb
jecxz
jb
mov
add
mov
jmp
sarb
fsub
jae
out
aaa
inc
or
cli
add
pop
std
insl
mov
mov
mov
mov
and
pop
xor
push
cmpb
pop
xor
cmp
rolb
sbb
negb
pop
xor
push
out
cmpsl
cmp
adc
test
jmp
lods
cmc
pop
mov
inc
movsb
mov
mov
addr16
dec
sub
scas
mov
jl
sbb
cwtl
jno
jmp
notl
mov
pop
icebp
mov
pop
int
movsl
fcomi
add
icebp
push
sub
jae
jmp
rcl
std
shll
lods
ljmp
mov
xor
add
sub
xor
pop
adc
enter
outsl
lret
push
jne
mov
adc
shl
push
push
std
shrb
push
and
xor
xor
cmpsb
nop
cmp
aad
adcl
lea
cmpsl
lock
cmpsl
lea
cmp
sub
adc
pop
dec
lret
xor
lds
out
push
rorb
push
enter
pop
inc
test
mov
dec
pop
pop
and
pop
mov
push
cs
adcb
mov
sbb
add
stc
or
pop
xor
loop
push
int3
push
sbb
mov
in
out
and
jno
and
adc
adc
jbe
xor
lock
leave
jecxz
in
neg
shl
and
or
movl
cmp
jp
pop
and
sbb
sbbb
jnp
rorl
test
ljmp
je
inc
push
mov
push
xlat
adc
data16
adc
int3
jno
adc
or
inc
inc
cs
pshufw
add
jmp
leave
jns
mov
inc
jbe
adcb
mov
pop
daa
jge
xor
jmp
dec
ficomps
sub
pop
mov
fcoml
adc
mov
jmp
ret
mov
and
inc
or
gs
dec
jle
sahf
push
stc
insb
fs
js
les
push
adc
mov
inc
xor
int3
out
inc
and
or
clc
adcl
hlt
or
pop
cmp
ret
cmp
lret
addb
prefetchwt1
xorb
mov
shr
mov
in
stc
push
add
mov
stos
ret
lcall
clc
jge
rclb
adc
inc
sarb
sub
mull
sub
cwtl
dec
or
pop
or
add
pop
mov
clc
push
push
sbb
ret
std
add
adc
aad
xlat
dec
cli
mov
inc
stos
pop
sarl
jg
loopne
aas
das
xchg
pop
adc
leave
das
imul
ss
xor
push
sti
bound
or
pop
cld
mov
cmpsl
mov
fnstcw
fwait
add
insl
shrb
sar
fwait
scas
mov
decb
shrl
or
jg
inc
mov
dec
dec
add
push
shl
cmc
repz
cmpsb
cltd
or
fucompp
add
jae
add
cld
sub
pop
add
push
popf
mov
fwait
das
stos
lret
fs
lahf
and
outsl
inc
testl
mov
and
lods
mov
mov
icebp
lret
cmp
lock
dec
test
dec
das
jecxz
xchg
add
rcrl
insb
arpl
outsl
imul
inc
dec
sarl
bound
mov
and
fsubl
into
movsb
pop
jbe
xchg
sarb
mov
add
push
and
push
push
enter
andb
mov
or
loope
jmp
jecxz
sub
popf
test
jp
fmuls
ret
push
and
jle
mov
lret
loopne
ljmp
roll
xor
mov
fwait
out
repnz
mov
negb
sub
mov
sbb
or
adc
scas
xchg
aad
cli
cwtl
jle
iret
lds
xchg
iret
dec
jge
fnsave
lcall
mov
push
add
mov
add
xchg
pop
or
cwtl
loopne
xor
imul
adc
pop
and
jg
sbb
ds
or
xor
roll
lret
ljmp
inc
cmp
mov
dec
das
add
pushf
lods
clc
add
iretw
adc
outsb
mov
cmpsb
sub
ret
sub
jp
popa
push
mov
clc
idivl
or
hlt
fdivs
inc
into
and
or
out
dec
mov
pop
or
test
sti
mov
or
push
mov
fbstp
push
imul
dec
mov
or
add
lret
or
xor
in
dec
das
inc
push
cwtl
ror
dec
loope
cmp
or
cwtl
jg
loopne
pop
push
bound
sub
sahf
xchg
push
test
in
popa
popf
pusha
loope
jne
sub
aas
xchg
xchg
and
dec
mov
aaa
test
scas
hlt
ds
cwtl
mov
jecxz
xchg
xchg
cld
mov
icebp
jg
mov
loopne
jmp
pop
sub
loope
jle
aam
jecxz
xor
push
mov
jmp
mov
jb
leave
pop
add
enter
mov
ret
jmp
fnstsw
fsubl
push
pop
push
jp
or
xchg
pop
mov
mov
push
mov
aad
sub
cltd
mov
out
hlt
gs
js
push
ds
and
adc
add
dec
pop
dec
jmp
pushf
push
fdivrl
lahf
push
daa
andl
cs
add
pop
out
adc
sub
inc
mov
push
pushf
or
dec
pusha
in
jae
sub
lds
jns
add
ror
jmp
mov
add
bound
fists
jp
subl
sbb
sub
or
ja
lds
inc
shr
cmp
aaa
add
arpl
push
daa
pop
inc
jp
jge
inc
push
and
add
fstps
icebp
lods
or
out
mov
inc
push
push
inc
insl
test
mov
dec
pop
stos
xor
imul
xor
and
call
sbbl
xor
mov
add
adc
pop
std
faddl
out
out
dec
push
or
clc
js
cmp
inc
movsb
cmp
and
sbb
dec
cs
adcl
add
jmp
mov
ret
andb
aam
rcrb
sub
inc
inc
jl
mov
push
inc
push
push
out
mov
inc
push
sub
mov
mov
popa
arpl
adc
lret
mov
push
shl
inc
jo
fdivrs
mov
aas
mov
adc
jnp
dec
mov
and
lret
out
int
cltd
nop
sub
add
cmp
and
or
sub
push
mov
jmp
add
sar
add
in
fnstenv
frstor
or
push
mov
popf
aam
fsubs
push
ret
movzwl
je
adc
aaa
scas
push
pop
push
sub
cmpsl
xlat
in
push
pop
int
and
and
pop
push
ds
jbe
pop
push
jmp
mov
mov
or
add
jge
jecxz
push
mov
add
dec
push
mov
outsb
and
push
sub
adc
inc
clc
pop
inc
pop
rcrl
or
movsb
push
add
jnp
dec
dec
or
xor
stos
repnz
insb
or
jmp
add
clc
mov
out
std
test
add
jae
sub
mov
adcb
rdtsc
cmpsb
out
sbb
in
dec
xor
mov
js
test
enter
jb
fcomp
nop
pop
testb
or
mov
ja
leave
lods
push
inc
out
push
inc
fisubl
cmc
adc
dec
dec
movsb
cli
lods
add
pop
dec
ljmp
sub
dec
and
or
or
je
sub
mov
add
jb
out
mov
filds
jmp
pushf
or
leave
mov
cli
jge
pop
lock
popf
push
push
leave
pop
add
fildl
sarl
leave
jbe
cmp
sbb
jns
cmp
jmp
cmpsl
test
pop
jmp
sti
xchg
jmp
and
lods
aad
push
cld
cmp
syscall
jg
es
dec
mov
notb
and
sti
adc
mov
aam
ja
sbb
jnp
lret
or
sub
push
pop
lock
dec
jmp
push
sbb
inc
adc
jnp
sbb
jae
mov
push
xor
cwtl
pop
cmp
cmp
ds
mov
outsb
mov
outsb
ret
fsubr
add
and
or
xor
std
pop
subl
test
and
mov
inc
pop
push
orb
ljmp
dec
pop
cwtl
xchg
add
jb
dec
jmp
lock
dec
push
jp
repz
xchg
mov
add
xchg
adc
inc
shrl
pop
fsubl
jle
add
jl
dec
xorl
in
or
mov
pop
push
addl
pop
ret
pop
pop
in
unpcklps
mov
adc
jb
mov
or
push
push
push
mov
in
and
push
mov
xor
movsb
es
imul
pop
test
mov
pop
jmp
add
mov
das
lret
or
adc
add
dec
push
and
test
or
pop
subl
push
cmp
push
pop
sbb
ss
aad
daa
aam
xlat
add
xchg
aaa
mov
and
mov
shl
xor
push
sarb
fidivl
adc
mov
repz
scas
out
adcl
push
insb
mov
mov
lods
pop
fldt
dec
push
sbb
dec
out
dec
in
cmc
adc
inc
das
mov
xchg
mov
pop
dec
out
fcoms
add
mov
rolb
dec
repnz
sahf
fiadds
loopne
sbb
je
mov
dec
xor
mov
loope
mov
int3
xchg
jg
ljmp
in
movsl
cmc
add
push
loopne
lahf
and
cli
pop
jno
orl
cld
mov
jmp
mov
fs
xor
adc
ds
cwtl
and
jnp
add
xchg
or
neg
dec
add
dec
mov
lret
insl
cs
dec
adc
loop
mov
movb
pop
dec
and
lods
or
dec
or
mov
repz
addr16
sbb
sbbl
lcall
mov
sub
mov
orb
and
into
lock
in
adc
push
pop
bound
sub
push
push
out
test
adc
pop
xor
mov
add
repz
insl
push
mov
or
fs
mov
pusha
push
jmp
and
sub
sahf
out
test
leave
inc
mov
push
pop
push
bnd
ja
bound
imul
dec
pop
jmp
add
fcoms
or
stos
call
adc
mov
jle
lret
lahf
mov
xchg
stos
pusha
lahf
ret
loope
add
test
or
adc
movsl
sti
adcl
jnp
ja
dec
sarl
fbstp
pop
sbb
sbb
dec
je
ret
xlat
dec
dec
push
pop
orb
repnz
sbb
sub
in
jl
push
hlt
popa
add
inc
inc
push
pop
inc
add
xor
or
and
jae
inc
add
enter
pop
jmp
loopne
push
mov
or
mov
out
and
add
xchg
lret
jb
add
mov
popf
out
and
std
cmp
adc
sbb
out
in
adc
pop
inc
pop
mov
cwtl
jno
cld
jle
inc
stos
in
add
xorb
jmp
sub
add
ret
pop
mov
add
dec
push
shr
rcll
add
ds
sub
jnp
sbb
push
sub
orl
or
cmp
or
sub
lea
movsl
bound
jmp
ja
rcrl
mov
xchg
pop
sbb
dec
push
and
jae
mov
pop
jb
pop
and
aad
xchg
mov
call
xlat
or
jge
or
push
outsb
cmp
jge
std
nop
in
sti
enter
cmpb
xchg
push
cld
fdivs
or
add
and
jp
inc
andl
lds
movsl
mov
or
mov
cld
mov
out
je
scas
lret
xchg
xor
es
aad
daa
xchg
sub
ret
or
sub
stos
adc
loop
rolb
fs
sbb
dec
xor
cmpsl
jne
cmpsb
daa
sahf
cmp
inc
mov
stos
add
dec
jmp
sbbb
loop
jge
cmp
jge
jae
push
and
add
sti
xor
out
sub
inc
nop
jb
sub
cs
xor
shl
push
add
into
daa
pop
adc
negl
or
xor
add
sar
lret
int3
sub
add
jmp
stos
mov
jmp
fldt
test
mov
adc
push
and
insl
adc
sbb
filds
xor
push
adc
sub
jbe
ret
jne
stos
adcb
jmp
stos
fs
mov
loope
jmp
xchg
insl
sub
adc
xchg
mov
push
lahf
mov
pop
mov
push
inc
add
fisttpl
test
push
push
pop
push
jmp
bound
adc
arpl
out
or
xor
cmpb
or
mov
mov
xlat
das
xchg
inc
xchg
adc
sbb
adc
daa
scas
push
sbb
dec
jge
xchg
sub
in
adc
inc
rolb
or
js
add
sub
loopne
lret
lock
jo
jne
pop
inc
mov
leave
icebp
ljmp
out
xchg
pop
sbb
mov
sbb
fdivrs
dec
pop
push
mov
cmp
cld
popa
subb
xchg
ja
mov
add
sbb
or
mov
mov
jne
mov
xchg
fsts
push
dec
and
dec
test
dec
inc
into
and
sub
push
clc
xchg
xor
xor
and
movsl
js
dec
scas
jns
rep
mov
xor
dec
push
test
or
fisttpl
or
inc
fimull
jecxz
push
pusha
add
and
pop
jmp
push
jo
in
cmpsl
ja
or
jg
or
shl
adcb
lcall
push
mov
inc
push
out
hlt
shr
xor
nop
jp
and
xchg
bound
gs
push
sbb
xchg
xor
adc
sbb
or
hlt
daa
and
in
inc
sarb
inc
inc
cmp
movq
add
out
das
sahf
xor
jmp
pusha
insl
sub
jne
xor
mov
out
push
xchg
dec
fs
cmpb
outsb
push
sub
into
or
pop
ljmp
jno
leave
xlat
cli
dec
btc
icebp
push
stos
je
dec
lret
adc
mov
mov
jmp
push
jo
jg
shrd
pop
pop
ret
adc
cmpb
lock
sbb
xor
sub
clc
fmull
jmp
or
fs
fildl
cmp
scas
cmp
cmp
loop
das
jmp
xchg
pop
bound
push
lret
adc
test
jmp
pop
js
pop
cld
or
or
cmpsl
mov
add
xchg
test
adc
jno
xchg
add
add
out
or
xchg
xor
jmp
scas
xchg
add
adc
leave
test
add
jge
mov
sub
xor
jmp
adc
popf
dec
pop
lds
jmp
clc
pop
out
inc
push
sbbb
adc
imull
fdivrl
inc
daa
repz
repz
push
dec
jnp
test
push
loope
pop
cmp
inc
sahf
mov
out
lret
ljmp
mov
lods
testb
xor
push
sbbb
mov
mov
dec
out
stc
add
outsb
jno
sbbb
mov
imul
push
mov
addr16
add
sbb
fucom
cwtl
outsl
xor
adc
push
push
bound
xorb
lods
jne
mov
insb
das
int3
ss
lds
iret
shll
or
sbb
cwtl
lret
add
dec
sti
xor
mov
cwtl
pop
outsb
pop
sub
jp
xlat
inc
rclb
dec
xchg
imul
adc
sbb
movl
stc
mov
rcl
jmp
jne
adc
push
inc
mov
lods
fs
add
or
aaa
jnp
jl
push
jle
hlt
insl
jp
mov
xor
push
bound
fstpt
adc
push
push
repz
or
mov
enter
sub
adc
test
ds
lods
ud0
mov
dec
adc
test
lea
jbe
dec
push
stos
add
xchg
and
enter
daa
push
pop
std
mov
or
scas
inc
xchg
stos
lret
or
mov
lcall
push
sahf
push
cwtl
jmp
repnz
xor
popa
jns
or
pop
and
or
divb
mov
outsb
das
into
jp
in
popa
or
pop
jmp
je
stos
icebp
mov
inc
jle
fildl
ja
pop
cmpsl
lds
movsl
add
subb
gs
or
and
inc
mov
pop
std
pop
test
mov
adc
or
fdivrs
push
dec
lahf
push
mov
adc
outsl
xor
push
push
mov
jnp
push
mov
add
es
je
dec
pop
inc
scas
cmp
pop
xor
std
or
inc
push
mov
inc
push
pop
mov
int3
cmp
pop
nop
mov
adc
inc
cs
idivb
and
rolb
call
daa
sub
inc
cmp
jg
and
cmp
out
mov
push
jle
dec
insb
sub
adc
jle
pop
ss
push
or
flds
mov
cmp
xor
adc
lahf
xchg
add
imul
or
add
lock
inc
scas
fwait
sub
jmp
cmp
add
int
add
rcll
incl
pop
jmp
push
or
mov
jl
add
loop
jle
mov
stc
and
add
adc
or
xchg
pop
cmp
push
dec
aad
jne
xor
xchg
cmc
jb
xor
insl
fmuls
add
mov
scas
out
ja
mov
lret
stc
incl
clc
mov
cmp
jmp
sub
shl
cmp
sub
sbb
inc
das
insb
inc
rcrb
pop
and
ret
xor
or
jecxz
into
jl
lea
add
jmp
inc
rolb
push
lock
jmp
shll
xorl
add
jmp
imul
shlb
mov
mov
mov
xchg
gs
out
les
test
adc
mov
push
jo
cmc
lods
jbe
sbb
mov
pop
aad
mov
mov
mov
add
mov
add
mov
xchg
movsl
mov
xchg
add
clc
pushf
testb
jae
shlb
enter
xchg
jg
leave
imul
and
inc
loopne
cwtl
add
adc
xor
push
outsb
push
in
jge
dec
sub
sti
xchg
inc
pop
pop
mov
jmp
add
mov
inc
ficoml
ljmp
cld
shrb
sbb
add
hlt
cs
adc
and
push
outsb
xchg
mov
mov
pop
and
repnz
neg
pop
mov
or
xor
mov
push
pop
push
or
push
lock
push
xchg
and
xor
pop
pop
dec
insl
adc
dec
add
jp
add
mov
scas
add
cs
mov
mov
sbb
jge
xor
xchg
jl
imul
lock
jmp
out
add
shl
dec
not
hlt
dec
and
inc
jbe
in
shr
pop
mov
addr16
mov
lods
clc
and
std
push
dec
mov
mov
daa
cmp
pusha
pop
sub
cmp
sub
movsb
or
loop
jnp
insl
outsb
mov
je
lds
push
mov
test
jle
xor
out
dec
mov
aaa
inc
lret
out
adc
cmp
add
xor
daa
les
push
xchg
xlat
or
jo
sbb
inc
sbb
dec
test
jb
gs
jg
push
jl
into
scas
and
imul
xlat
das
lcall
mov
aam
shrb
and
mov
into
cmp
and
fdiv
lcall
fcomps
hlt
inc
cli
and
pop
rol
fstpl
jmp
sub
ret
dec
imul
loop
ffreep
into
call
incl
jmp
das
cmp
add
push
dec
add
ja
add
pop
gs
sarl
outsb
dec
movsb
or
loopne
xor
and
lahf
movsl
or
fisubrl
pop
shrb
sub
mov
subb
xor
das
leave
loopne
sbb
rorl
cld
dec
lock
push
add
dec
add
add
scas
adc
cmp
mov
jmp
pushf
pusha
mov
sbb
fisttpll
fidivrl
add
dec
or
ret
mov
jle
pop
pop
pop
dec
fisttpll
jb
lret
pop
and
push
jns
xchg
fsubs
pop
sub
pop
movsb
mov
adc
sbb
cmpsl
or
lea
push
shll
xchg
push
je
in
mov
sar
pop
push
movsb
scas
daa
loop
jg
dec
or
jmp
mov
mov
cmp
fimuls
int
ja
cld
call
outsb
lods
add
pop
in
and
das
push
jbe
pop
dec
and
jbe
cmp
jae
imul
sarb
push
push
dec
pop
dec
xorb
fsubl
addr16
sub
pop
in
push
mov
and
sub
push
xor
add
pusha
xchg
insl
mov
jae
xabort
xor
cmp
divb
jo
push
add
aam
adc
bound
adc
cmp
cmpsb
and
dec
add
mov
push
movsb
daa
mov
stc
xlat
sbbb
or
mov
and
pop
push
jmp
in
outsb
clc
into
push
mov
stos
add
cmp
push
nop
repnz
sarl
insl
adcl
jmp
sub
adc
jle
push
push
push
pop
shr
mov
xchg
xor
adc
pop
adcl
pusha
lret
cmp
push
and
nop
or
rorb
daa
shl
fbld
sti
push
mov
inc
adc
inc
and
xchg
mov
push
dec
pop
out
inc
xor
dec
rcl
mov
aas
sbb
call
subl
pop
inc
neg
nop
mov
inc
push
push
cmp
push
ret
daa
jno
lods
jg
add
mov
dec
or
mov
shl
xchg
pop
add
hlt
push
or
or
push
inc
sbb
pushf
sub
dec
nop
xchg
pop
xor
xchg
hlt
push
leave
sarb
xchg
divl
inc
sbbl
or
cmp
insl
cmp
shrb
jge
sub
vmread
xor
cmp
adc
ja
pop
adc
or
outsl
adc
cmp
inc
stos
ja
cmpsl
push
xor
inc
out
arpl
inc
add
push
xor
adcl
add
inc
push
movsl
cltd
jecxz
add
clc
xlat
sub
xor
je
pop
add
add
adc
cmc
dec
mov
jl
aas
daa
fsubl
lcall
dec
cmp
shlb
inc
jmp
sbb
push
push
out
fdivrl
jbe
jbe
push
neg
jp
and
pop
lods
push
mov
xchg
push
cmp
adc
dec
pop
mov
inc
fisttpll
lds
add
push
add
adc
or
mov
cwtl
mov
pop
mov
test
sub
aam
bound
pop
push
daa
mov
movl
inc
sub
mov
or
pop
jno
enter
mov
pop
mov
data16
sub
dec
lods
pushf
ret
mov
mov
xlat
jp
outsl
add
sub
jmp
repnz
cmp
jmp
push
or
cmp
jg
js
xchg
repz
daa
push
push
mov
jl
xor
push
cmpsl
cmp
imul
stos
pop
scas
sub
add
testl
xchg
popf
je
shrb
push
popw
push
mov
and
sbb
jg
std
inc
add
adc
icebp
adc
mov
push
enter
and
testl
mov
loop
ja
inc
js
mov
add
sbb
ljmp
lock
jmp
pop
add
push
sub
jno
mov
outsb
sub
cmpsb
jl
mov
pop
cmp
icebp
iret
fs
jmp
adc
jne
dec
mov
add
out
or
add
in
lds
gs
mov
and
ret
hlt
and
orb
in
lcall
and
add
nopl
ljmp
adc
and
add
jmp
pop
fstl
xchg
inc
sti
push
add
dec
mov
jmp
loop
add
xor
xor
inc
shr
pop
or
into
stos
subps
add
fyl2x
mov
inc
mov
pop
scas
shrb
push
xor
jno
dec
push
jmp
mov
jl
or
push
fsub
sub
lret
pop
fiadds
jae
dec
jmp
movsl
mov
stc
nop/reserved
add
sti
pusha
jns
pop
jmp
inc
dec
imul
adc
popa
imul
xlat
jnp
dec
xchg
pop
pop
aas
sub
addr16
ss
rcrb
push
add
mov
or
ffreep
dec
mov
js
jge
pop
or
jmp
add
inc
cmp
ret
rcl
and
call
dec
mov
pop
test
lahf
jmp
dec
test
mov
arpl
pslld
adc
push
icebp
cmp
ret
clc
movsl
pop
push
mov
pop
or
pop
cmp
je
daa
fstl
es
xor
insb
mov
into
xchg
xchg
inc
dec
cmpl
pop
mov
test
ret
test
popa
fstps
mov
mov
pop
stc
ja
jmp
pop
or
jmp
nop
popf
push
push
xor
lea
scas
pushf
or
or
in
sub
nop
add
cmp
sub
and
mov
imul
pop
inc
aam
ret
pop
fidivrl
das
push
mov
or
xor
jge
int
pop
jb
inc
rorl
scas
cs
js
in
adc
inc
es
lcall
punpckhwd
xchg
jp
sub
push
fucomi
cmp
sub
loope
or
or
sbb
or
stos
add
add
pop
jns
or
dec
pop
jp
loop
pop
cmp
das
icebp
repz
negb
sbb
ror
mov
mov
out
xor
cld
and
pop
sub
shl
cmp
fcoml
jmp
fisttps
mov
add
clc
adc
out
test
mov
cld
lcallw
insl
sub
push
ror
das
mov
nop
inc
imul
out
jbe
push
out
loope
sahf
or
push
mov
int3
negb
push
rclb
jmp
leave
cmc
outsb
inc
add
in
cmp
in
jnp
xor
insb
stos
jbe
jnp
mov
mov
fldcw
adc
mov
je
faddl
leave
es
in
test
sub
cltd
and
sbb
push
mov
incl
mov
mov
add
xchg
cmpb
dec
push
push
pop
jecxz
mov
push
mov
jp
dec
jne
add
adc
jmp
add
clc
xchg
gs
and
add
inc
push
pusha
mov
sbb
fiadds
shrb
fidivrl
jnp
dec
pop
js
xor
or
pop
fsubr
cmp
sub
dec
cmpsl
push
nop
mov
dec
aas
cmp
add
gs
data16
pop
xor
data16
or
das
movups
jne
insl
cmc
cmpb
or
pop
xor
push
jno
adc
lahf
rorb
and
pop
dec
xor
or
aam
imull
push
mov
or
adc
rol
les
outsl
sbb
push
mov
loop
jle
es
fyl2x
and
add
or
je
into
inc
jl
insb
shll
xchg
lock
inc
jne
dec
cs
adc
pop
lret
jle
adc
mov
mov
lcall
cmp
sub
push
orb
add
bound
outsl
orl
push
adc
mov
add
movl
pop
pop
push
add
jl
sub
shll
call
out
lahf
pop
mov
popa
or
mov
push
or
adc
push
lahf
cmpl
xor
pop
sbb
mov
mov
dec
or
and
test
or
adc
mov
sbb
add
jne
xor
fistps
js
pop
lret
jmp
mov
pop
pop
mov
int3
push
jle
pop
cmp
mov
xor
cmp
pop
fldl2t
out
dec
mov
inc
xor
xor
mov
sub
push
clc
push
push
push
out
imul
and
faddl
push
cli
jge
aas
bound
je
fs
adc
add
pop
pop
sub
popf
in
jmp
cli
push
jecxz
jno
dec
andb
sub
xchg
and
pushf
adc
or
sti
and
cmpsl
repnz
pop
jmp
push
nop
cmc
nop
dec
or
mov
jb
mov
rol
mov
cmp
in
cmc
adc
stc
dec
mov
int3
mov
or
test
mov
pop
mov
pop
push
test
roll
ljmp
fs
mov
sub
pop
add
jg
repnz
xor
jbe
jmp
stos
stc
push
xchg
xlat
adc
and
push
shr
je
fistpll
push
outsb
add
test
or
das
add
iret
arpl
or
cmpsl
lds
sub
jne
dec
clc
clc
mov
stc
add
fsts
jmp
xor
adc
xchg
mov
pusha
xchg
mov
dec
mov
push
pop
movsl
push
sarb
pcmpgtd
sbb
dec
out
nop
mov
lret
pop
frstor
xlat
fmul
jmp
push
sub
hlt
es
ret
jno
mov
loop
repz
out
inc
imul
sti
and
pop
mov
testb
jmp
xchg
fidivl
sbb
and
int
and
cli
inc
dec
lret
jg
ror
sbb
push
jmp
push
cs
sbbb
mov
mov
js
in
and
aam
jg
sub
mov
xchg
clc
cmp
inc
flds
repnz
xchg
pusha
xchg
push
cli
insl
inc
hlt
cmp
push
jmp
sbb
in
adc
add
or
mov
sahf
leave
ds
ja
dec
push
push
push
or
or
testb
push
xor
sbb
sbb
sbb
mov
lods
pop
dec
inc
out
shl
adc
mov
fstp
jnp
dec
fwait
inc
fdivrs
xor
loop
fisttpll
scas
rolb
hlt
xchg
xchg
mov
movsl
sub
pop
pop
addr16
aas
adc
cmpl
repnz
xchg
xor
and
test
xor
dec
mov
pop
sub
pop
repz
js
dec
lahf
pop
iret
fiaddl
enter
cmp
push
push
mov
xchg
fdivs
roll
sbb
jle
cmp
push
jl
sub
mov
cwtl
add
add
cmp
add
mov
mov
lods
and
or
stos
rcrl
push
lds
push
mov
testb
pop
xor
jge
sti
and
pop
push
mov
adc
orl
das
pop
fists
pop
shrb
scas
xor
imul
jle
aaa
sub
cwtl
sarb
add
popf
fs
adc
loopne
ljmp
incl
sbbb
scas
loop
mov
xlat
xchg
dec
cs
xor
inc
or
sub
pop
add
jae
int3
and
pushf
pop
pusha
stc
or
mov
or
addb
jle
mov
out
xor
loop
add
push
jne
popf
andb
inc
cmp
mov
push
mov
pop
push
rolb
into
insb
pusha
test
push
or
pop
int3
inc
pop
mov
or
fsub
in
add
lea
sahf
fisubrs
subl
lea
cld
lahf
mov
jecxz
jb
xchg
inc
popa
dec
jo
in
and
sub
jmp
sub
pop
jbe
fwait
icebp
cs
push
test
inc
mov
rclb
push
icebp
out
cmc
jnp
sub
or
cmp
nop
ja
call
adc
inc
imul
jmp
or
jp
out
push
adc
lret
sbb
pop
loopne
pop
dec
sub
fisttpll
add
cmp
sub
jo
jl
add
jnp
adc
and
stos
push
and
pslld
int
adc
adc
or
es
ds
and
faddp
mov
das
lods
mov
int3
pop
cltd
js
cmp
xchg
mov
push
or
test
loop
movsb
or
inc
das
xor
cmp
pop
mov
sub
push
pop
add
inc
or
mov
jge
scas
rorl
das
mov
pop
jl
andb
jg
mov
in
xor
cmp
daa
inc
xor
pop
xchg
jl
fldcw
push
xchg
mov
and
repnz
cmp
pop
xor
cmpsl
add
setne
and
jbe
sbb
push
push
xchg
add
cs
mov
push
repnz
cwtl
ljmp
mov
cmc
mov
or
bnd
in
imull
cmp
jmp
mov
dec
adc
repnz
insb
or
cmp
and
lods
mov
mov
adc
je
add
cmc
dec
and
xorb
ret
xchg
andb
stos
sbbl
movsl
repnz
sub
mov
sub
jg
pop
inc
push
in
dec
repnz
dec
les
adc
and
xchg
loopne
cmp
mov
out
dec
ljmp
test
mov
mov
pop
sbb
or
and
lds
push
mov
or
mov
xchg
mov
pop
jmp
adc
mov
addr16
adc
std
cwtl
jmp
push
popa
fldl
idivb
or
pop
add
xchg
dec
jmp
pop
notl
inc
in
cmpsb
or
push
dec
inc
insb
aas
clc
or
mov
call
push
jae
add
daa
dec
pushf
outsb
pop
pop
mov
jecxz
adc
jmp
pop
ds
adc
add
lods
enter
push
xor
std
mov
push
std
lret
dec
push
jmp
pushf
jbe
fldt
fdivrl
jmp
cmp
adc
mov
clc
jle
inc
xchg
lret
rcrl
and
incl
and
push
inc
dec
or
loop
jle
push
inc
pop
inc
xchg
loop
loope
xlat
gs
dec
jne
sbb
push
imul
push
mov
mov
push
adc
sub
xlat
sbb
push
mov
add
push
jge
mov
daa
push
cmpsl
loop
or
add
enter
into
dec
pop
clc
dec
xor
pop
jmp
pop
jne
jmp
sahf
movsl
mov
xorl
dec
mov
insl
out
std
clc
xor
mov
mov
push
sub
jmp
jg
mov
push
mov
dec
das
push
add
or
jl
stc
mov
shrl
cmp
dec
mov
sbb
cs
add
jo
add
jg
cli
popa
mov
mov
imul
dec
mov
mov
fnstcw
or
or
xor
mov
pop
negl
push
jnp
xchg
int3
andl
adcl
lds
push
pop
lods
outsl
mov
lret
add
and
ret
adc
dec
jmp
pop
push
in
adc
sub
repz
push
dec
pop
daa
adc
pop
xor
rorl
mov
shr
or
add
pop
push
sbbb
or
dec
cmc
jnp
sbb
dec
add
push
sbb
add
jmp
add
mov
int
popf
sub
in
stos
out
sub
icebp
jmp
push
jo
push
inc
xor
fmuls
cmpsl
into
and
push
ja
adc
pop
push
enter
dec
leave
fcompl
add
cmp
aaa
sti
xlat
mov
jmp
jo
cmp
pop
fsubs
outsb
sub
add
in
out
in
lds
cmp
mov
push
aas
add
jmp
cltd
fadds
cmp
pop
dec
sub
mov
jle
dec
jp
dec
add
push
cmp
rolb
dec
pop
cmp
cmp
or
dec
mov
cli
repnz
sub
js
in
cmp
add
push
dec
jmp
or
loope
inc
lds
mov
popf
dec
inc
fwait
cltd
jo
or
cmc
xor
ret
fsubr
mov
cmp
test
push
loop
dec
add
lret
add
jge
jp
out
pop
pop
push
mov
test
cmp
pop
inc
mov
loopne
outsl
mov
fs
and
mov
test
or
insl
sbb
sbb
rcrl
mov
add
jmp
xlat
pop
neg
subb
in
add
add
mov
push
push
mov
push
dec
mov
jb
pop
mov
lahf
gs
lcall
add
jge,pn
cmp
loopne
or
jl
or
es
adc
hlt
outsb
add
add
jmp
xor
sbb
adc
daa
fmulp
adc
adc
ret
sbb
js
add
pop
into
push
out
push
sub
imul
xchg
notl
mov
push
cwtl
xchg
test
jbe
pusha
sbb
out
add
sub
and
add
neg
popf
fdivr
ljmp
pop
test
out
inc
lahf
sub
nop
xchg
rcl
sbb
rcrb
inc
sar
push
sarl
shr
adc
add
sub
das
shrl
lret
add
aas
std
xchg
dec
jecxz
inc
adc
idivl
in
pop
jmp
xchg
pop
sub
fdivr
sub
pop
and
std
shll
and
sub
jns
mov
std
add
inc
xor
roll
das
mov
subl
xchg
icebp
aam
inc
mov
imul
loope
les
cmp
jmp
aad
push
cmc
cmc
or
and
add
pop
sub
cld
jg
or
pusha
pop
js
lock
lds
jg
idivb
shll
orb
les
into
add
add
rorb
add
sub
rorb
fmuls
fstpl
or
popf
das
fdivrl
add
daa
mov
shr
sbb
push
mov
sti
cmp
rorb
add
cli
jae
stc
out
lahf
loopne
mov
jp
test
mov
addl
int3
push
repz
cli
shrl
mov
adc
push
mov
mov
mov
add
mov
mov
popa
insl
int3
xchg
push
mov
jmp
lret
icebp
jnp
jno
pop
ljmp
cmp
xor
dec
daa
ror
jp
call
inc
loopne
add
jp
in
push
inc
enter
sub
jbe
pop
mov
jnp
cltd
movsl
inc
jns
add
or
adc
adc
mull
rclb
inc
enter
mov
shrb
aaa
in
pop
shll
loopne
sub
or
inc
dec
cmpsl
inc
icebp
sti
push
sbb
cmp
pop
push
xor
scas
mov
fisttpl
jmp
pop
stc
in
mov
or
sub
vmovsd
sbb
adc
clc
cmp
rclb
cmp
push
pop
push
outsl
sbb
inc
mov
xlat
inc
add
call
outsb
ja
in
xchg
sub
aam
icebp
inc
jnp
fwait
mov
insb
and
push
pusha
imul
pop
pop
mov
push
ljmp
xor
pop
jmp
inc
imul
std
cmp
iret
lcall
arpl
jl
pop
dec
lods
popa
andl
jbe
inc
sub
push
mov
xor
push
ljmp
xor
xchg
adc
add
ljmp
movsb
sbbl
mov
push
pop
mov
sbb
repnz
xlat
jae
dec
mull
insl
or
loop
push
push
icebp
iret
adc
mov
jmp
jmp
data16
out
daa
jb
adc
fstpl
ljmp
stc
add
in
out
mov
aas
cmpb
and
or
das
add
xor
mov
in
mov
orb
loope
mov
or
or
cmpl
add
xor
cmp
sbb
pop
repnz
adc
aas
lret
pop
and
sti
mov
daa
mov
sub
in
adcb
test
pop
mov
hlt
testb
dec
cmp
or
xor
mov
adc
jge,pt
sub
push
call
push
cwtl
cmp
es
or
xor
inc
int
jo
jp
mov
ljmp
cmp
and
popa
mov
enter
xchg
dec
cmpps
add
pop
cli
call
mov
sti
lds
sarb
add
add
mov
jg
cltd
loopne
jae
jmp
nop
mov
es
scas
mov
dec
call
movsl
pop
adc
cmc
loopne
pop
push
and
addl
jp
dec
or
push
mov
add
jmp
push
push
mov
pop
popa
dec
pusha
sbb
xor
add
in
mov
ret
pop
sub
stos
inc
add
loop
stos
cmp
pop
inc
xchg
mov
xchg
pop
sarb
pop
add
shr
js
iret
cmp
or
lahf
jecxz
add
repnz
mov
add
inc
mov
or
cli
test
in
xor
sti
add
xor
sbb
out
nop
ret
or
lret
int3
lods
adc
push
in
cmp
test
scas
jo
mov
negl
pop
or
cli
jge
sub
dec
push
cmpsl
push
popf
shll
jmp
mov
dec
jmp
or
pop
jge
mov
dec
cmp
pop
dec
adc
out
jnp
cmp
push
dec
in
mov
jg
xchg
outsl
add
icebp
sbb
imul
cld
sub
fwait
or
pop
daa
sar
dec
shl
gs
loopne
imul
out
outsb
mov
or
cmp
sarl
addr16
out
add
inc
dec
jg
fmul
push
push
push
add
mov
sub
andb
mov
jnp
inc
incb
mov
sub
sbb
or
notb
push
cmp
pop
mov
push
lldt
sub
push
cwtl
jns
dec
xor
inc
xor
push
jne
pop
dec
std
mov
stos
dec
or
push
push
push
mov
and
das
test
notb
shll
sub
ret
call
adc
adc
pop
xor
jno
xchg
arpl
sub
ds
mov
popf
add
orl
dec
inc
out
xchg
xchg
das
aad
dec
inc
xor
incb
fucomip
lea
mov
mov
push
mov
addr16
lret
push
pop
push
cmp
lds
mov
adc
add
add
mov
loope
stc
outsl
mov
xor
adc
push
insb
roll
add
push
inc
jmp
pop
pop
sub
jp
mov
stc
sti
test
jns
and
repnz
aad
fists
loop
icebp
push
jg
out
daa
sub
lahf
jb
push
fmuls
shll
les
daa
flds
test
sub
das
nop
add
mov
jmp
sti
pop
mov
loope
add
rcrb
mov
cmc
or
add
jle
loop
jg
xchg
sbb
pop
xor
sub
sti
cmpsl
imul
fsubrp
out
imul
jmp
sarb
call
add
push
mov
add
sub
inc
adc
mov
movsb
sbb
imul
lock
jecxz
push
dec
mov
pop
sbb
xchg
cwtl
mov
pop
mov
nop
xlat
dec
add
inc
add
and
sub
lock
mov
push
xor
popa
in
neg
and
adc
xor
push
shr
loop
pop
testb
sbb
push
xor
sub
or
pop
add
or
cmp
xchg
and
and
scas
xchg
lock
jns
stc
dec
inc
les
inc
mov
dec
jle
sub
or
pop
jge
or
add
push
inc
or
add
pop
sub
push
icebp
inc
xor
stos
movsb
dec
iret
mov
loop
pop
jle
pop
cld
fcoms
cmp
iret
das
inc
or
push
pop
jmp
dec
scas
lods
jg
adc
fdivl
stos
pop
adc
imul
mov
cmpsl
xchg
add
int3
adc
loopne
dec
xor
cmp
lret
mov
out
fistpll
cmp
push
inc
push
cmp
xchg
sbbl
xchg
int
jp
cwtl
jecxz
fldenv
imul
imul
or
mov
inc
std
in
clc
mov
add
call
sti
repz
cwtl
dec
dec
and
mov
sbb
adc
add
cmp
mov
sub
fnstsw
mov
adc
lret
and
fstpt
sub
xchg
cmp
jb
pop
sub
je
jmp
xchg
leave
and
pop
jg
insl
loope
cmp
popa
repnz
addl
jle
xchg
xchg
pop
pop
add
jb
mov
fdivs
movsl
orb
inc
js
popa
pop
es
cmp
lds
push
aas
adc
or
pop
jns
fs
xor
jmp
mov
test
iret
dec
xor
mov
out
jg
xchg
stc
pop
outsl
stos
xchg
pusha
inc
mov
aas
and
jb
xchg
inc
add
push
sub
and
mov
mov
dec
movsb
mov
mov
out
sbb
es
mov
mov
sbb
mov
cmpb
loopne
adc
add
mov
mov
mov
pop
pop
push
push
jge
cmp
pop
pop
pop
les
cmp
mov
push
mov
lds
rolb
hlt
inc
int3
enter
aas
in
lret
test
add
std
nop
mov
jmp
mov
or
dec
jnp
add
pusha
and
ret
push
ja
mov
mov
mov
mov
repz
jp
pop
push
xchg
dec
xor
mov
fsincos
mov
movsl
orl
or
adc
orb
adc
mov
cwtl
push
push
push
mov
arpl
jl,pt
scas
je
lods
add
popa
lods
add
pop
pop
mov
fsubl
roll
cmp
mov
in
dec
pop
mov
sub
add
xchg
or
mov
pop
jl
ja
lock
sub
pop
jp
cs
inc
sub
pushf
add
push
mov
hlt
jbe
jecxz
xor
lret
push
pusha
mov
shlb
mov
ja
push
cmp
decl
repz
pop
pop
lahf
cmpsl
jl
shrb
stc
push
je
rcrb
shrl
and
xor
fwait
rolb
sub
inc
and
movsl
add
es
movaps
stc
mov
stos
add
mov
jbe
in
and
or
sub
orl
mov
rdtsc
pop
xor
in
add
cs
repnz
jbe
and
inc
sbb
cld
cmp
in
test
xchg
jno
stos
bound
and
fbstp
or
push
mov
inc
pop
inc
cld
or
jl
loop
and
jmp
loopne
bnd
pop
cmp
lock
or
jmp
outsl
je
push
add
or
mov
add
daa
in
aaa
cmpl
in
jmp
pop
add
imul
dec
ss
imul
and
or
sar
pop
stc
into
mov
inc
call
push
clc
xorb
mov
jmp
vmovsldup
lret
inc
psubb
add
pop
test
push
dec
sub
scas
push
pop
xchg
and
mov
push
into
aas
mov
int
loopne
mov
push
mov
dec
xor
push
jno
ljmp
adcb
and
pusha
and
pop
mov
or
dec
test
mov
sub
fdivrl
pop
cltd
popa
mov
shlb
shlb
push
jmp
push
add
je
and
xorb
cmp
jno
dec
pushl
imul
sar
or
jmp
jo
aad
cmp
loop
iret
mov
cmp
dec
vdivpd
lea
jmp
shr
clts
or
aad
cmp
xor
jae
xor
pop
sub
mov
jmp
jbe
fimull
call
jl
das
pop
or
mov
fisttps
pop
push
fiadds
mov
and
dec
pop
scas
mov
leave
xor
aad
add
xchg
pop
xor
in
xorb
std
mov
cmp
pop
push
lahf
clc
inc
mov
pop
jg
jnp
mov
je
out
fxam
fld
rclb
xchg
or
jno
or
ljmp
in
repnz
cs
pop
cmp
out
insl
adc
mov
in
ds
add
scas
dec
mov
mov
outsb
int3
outsb
mov
es
les
or
push
mov
sub
ja
fstpl
insl
lret
sarl
leave
cmp
frstpm(287
or
popa
and
pop
std
mov
sbb
pop
hlt
testl
or
cmp
stos
xchg
and
push
pop
daa
add
add
push
popf
jge
ficoms
inc
add
jge
mov
imul
mov
inc
xchg
test
outsb
mov
jmp
pop
xchg
or
cmpsw
mov
dec
pop
rcl
push
push
xor
not
xchg
mov
cmp
in
test
jecxz
add
test
test
nop
or
enter
scas
std
orl
cmp
push
pop
mov
nop
lods
movsl
daa
pop
outsl
xor
rclb
femms
bound
loopne
aaa
inc
int3
push
iret
push
fldl
jno
mov
dec
dec
inc
orb
push
pop
fildll
or
add
dec
stc
mov
push
outsl
adc
lods
jmp
mov
mov
cli
add
or
pop
and
jg
std
pop
push
lock
sarl
negb
or
rcrb
into
ss
mov
popa
test
hlt
and
dec
dec
lahf
add
int
sub
cmpsb
adc
or
dec
cmp
pop
xlat
inc
pop
cld
dec
movsl
and
test
jae
pop
movsb
add
pop
push
js
xorl
xor
mov
cmp
or
inc
mov
lds
ficoms
add
add
xchg
add
push
mov
mov
hlt
testb
jmp
cwtl
sub
jbe
cmp
add
rcrl
mov
jmp
test
in
sbb
repz
mov
or
aad
lret
pop
pop
pop
bnd
call
push
sub
sbb
xlat
pop
test
or
sub
pop
daa
jmp
push
js
dec
mov
sbb
or
sbb
pop
fcmovne
or
or
popa
add
push
loopne
les
outsb
inc
pop
in
xchg
ror
insl
test
loopne
mov
sub
sarb
xchg
pop
ret
pop
jbe
sub
shlb
or
test
or
pop
sbb
lea
scas
cmp
mov
sub
daa
push
mov
adc
popa
aam
inc
in
in
xchg
mov
and
enter
inc
fistpl
or
in
push
hlt
add
or
out
jl
add
dec
jl
popa
arpl
pop
enter
sbb
push
inc
push
push
mull
xchg
push
inc
lock
in
sub
in
loopne
in
jg
mov
cmp
mov
push
addr16
mov
pop
sub
add
mov
add
xchg
push
and
push
jge
movsl
pop
sub
scas
pop
jl
or
rclb
enter
pop
pop
xlat
push
jbe
and
leave
mov
sbb
add
adc
sub
mov
sub
ror
cmpsl
enter
int
popa
dec
and
add
pop
pushw
pop
xchg
mov
mov
jns
pop
pop
push
test
add
dec
xchg
fnsave
aam
pop
leave
push
mov
fwait
add
icebp
lods
dec
test
scas
mov
mov
das
frstor
or
std
fdivr
xchg
dec
jnp
imul
push
push
pop
push
lret
ja
mov
enter
andb
inc
rcll
sbb
add
inc
gs
jmp
dec
xor
and
pop
aad
inc
movsl
cld
imul
pop
mov
mov
push
fsub
add
mov
add
repnz
rclb
push
call
sub
dec
dec
and
push
xor
in
pusha
jbe
jns
mov
inc
scas
int
jge
dec
jg
dec
mov
fwait
sub
jmp
orl
lret
add
test
add
pop
sub
or
jbe
jmp
or
shr
fldl
repnz
pop
cmp
push
cmp
and
or
mov
mov
xchg
push
pop
cmpsl
push
das
sar
stc
shr
jo
or
and
xor
dec
js
and
incb
les
cmp
pop
fidivrs
and
pop
adc
les
or
fdivrs
out
or
bound
cwtl
cwtl
or
pusha
jo
jle
push
test
xchg
mov
adc
pop
pop
pop
jle
lret
das
loopne
cmp
insb
mov
adc
sub
repnz
push
and
or
cmp
inc
xor
xor
xchg
inc
mov
stc
push
cmp
xlat
mov
jne
sarb
imull
aam
pop
add
cwtl
aaa
add
add
arpl
jp
xchg
inc
jbe
dec
pop
dec
jge
mov
xor
test
pop
sub
add
lods
pop
adc
and
cmc
ljmp
add
fs
mov
in
dec
pop
push
aas
cmp
inc
xor
jmp
mov
add
ljmp
lret
and
inc
adc
out
push
or
push
testb
data16
loop
pop
addb
les
mov
out
pushf
cs
pop
mov
add
jl
add
lcall
mov
adc
sbb
imul
and
or
mov
sbb
inc
loop
cs
push
add
mov
enter
xchg
jmp
fs
in
inc
pop
lods
popa
imul
mov
pop
in
or
mov
lods
pusha
sub
jmp
mov
aas
adcb
dec
sub
cmpsb
jle
sbb
das
outsb
dec
mov
inc
pop
lea
cmp
jge
daa
xchg
sbb
push
mov
or
jo
loope
mov
xlat
jmp
dec
in
inc
sub
scas
xchg
loop
cmpsl
adc
sub
add
inc
and
lds
iret
jecxz
xor
push
mov
sub
incb
out
mulb
adc
xchg
cmp
scas
pop
dec
sub
lahf
je
lods
leave
mov
cmc
fiadds
movsl
dec
lret
add
add
pop
sub
mov
xlat
fiaddl
dec
push
hlt
out
jbe
aam
add
out
add
add
jg
das
orb
nop
mov
adc
out
leave
jmp
pop
clc
mov
and
inc
inc
cmp
mov
push
ljmp
mov
sti
data16
lret
dec
and
lods
and
scas
cwtl
xor
push
push
jmp
iret
int
shl
add
xor
lods
and
dec
xor
jp
add
adc
or
xlat
out
xor
cmp
loope
and
or
jnp
push
sbb
loop,pn
xlat
pop
popf
xchg
bound
push
inc
sub
subb
xor
stos
inc
arpl
in
les
test
add
adc
and
sub
cltd
pusha
mov
gs
or
incb
xor
mov
stos
test
ja
or
out
rolb
inc
cs
sbb
and
mov
test
fistpll
adc
das
xor
add
sbb
enter
xchg
push
mov
subb
idivb
les
xchg
add
cltd
add
mov
mov
sub
ds
adc
push
popf
pop
sub
loop
aaa
pop
inc
adc
cwtl
or
mov
sub
add
sbb
scas
push
or
mov
aam
sbb
cmp
std
addl
xchg
or
push
loopne
sbb
or
push
enter
dec
in
lods
fdivr
shrb
adc
and
inc
push
loopne
dec
shll
add
xor
inc
lea
lods
add
cmpsl
gs
sbb
dec
lock
rclb
pop
jne
adc
inc
xor
cwtl
or
xor
dec
and
sbb
enter
inc
adc
ljmp
or
sbb
dec
inc
inc
pop
push
test
test
lods
lea
adc
push
mov
js
fmull
or
sbb
js
cltd
jmp
or
test
or
in
adcb
mov
movsb
inc
and
mov
inc
sub
inc
cs
inc
dec
mov
or
subb
and
test
dec
add
sub
inc
popl
dec
adc
out
sub
rcll
push
incl
adcb
sbbl
mov
sbb
shrb
outsb
cmp
jae
fmuls
xor
enter
std
mov
mov
leave
inc
movsb
dec
and
jno
pusha
and
sbb
mov
adc
inc
inc
jle
out
sub
jnp
loop
popl
push
xor
dec
adc
and
lea
stos
pop
in
or
push
in
das
clc
popa
das
mov
test
popa
jge
pop
push
std
test
mov
scas
pause
js
add
sub
scas
adc
or
pop
add
das
and
fwait
xchg
or
stos
mov
test
popa
stos
adc
repnz
push
imul
mov
jb
mov
mov
loopne
cmpb
dec
mulb
push
dec
mov
pop
enter
mov
dec
jb
cmp
sub
cs
cmc
or
jmp
in
leave
mov
sti
iret
mov
in
add
mov
inc
fwait
jmp
outsb
mov
jl
or
or
sbbl
jp
lcall
adc
popa
out
push
add
push
jge
loopne
push
cmp
adc
sub
pop
icebp
xchg
jmp
inc
icebp
pop
test
dec
add
in
sub
lock
or
inc
jl
sbb
insl
loope
aad
mov
fdivs
mov
jbe
sub
pushf
xlat
popf
test
adc
pop
cld
mov
dec
xor
test
or
out
jbe
das
jmp
or
sub
or
jno
mov
sub
pop
scas
push
addl
mov
cmp
clc
xchg
idivb
push
fbld
aas
das
jmp
push
push
lcall
dec
and
pop
adc
ficompl
lds
sub
dec
cmc
dec
cmp
ficoml
xor
test
sub
scas
daa
es
dec
push
mov
xchg
rorl
xor
stc
aam
out
xor
push
or
fcoml
pop
lcall
xor
jns
cmpsl
jl
lret
xlat
mov
cmp
push
test
jmp
cmp
sbb
jmp
inc
aad
add
hlt
repz
sub
rcl
jns
pop
sub
test
or
cs
mov
mov
test
jnp
scas
jg
push
scas
inc
nop
push
jp
cmpb
dec
ja
lcall
loopne
lea
imul
adc
lcall
pop
and
dec
pop
inc
lock
adc
sub
loopne
std
imul
aas
lods
hlt
daa
push
cmp
iret
sub
test
mov
add
fcoms
jmp
sub
mov
mov
jno
sbb
xchg
lock
push
mov
pop
or
pop
xor
insb
ror
call
sarb
loop
testl
adc
sub
cltd
mov
ror
retw
push
lods
and
shrb
pop
imul
cmp
mov
add
inc
hlt
int
push
push
sub
xchg
gs
sahf
std
push
mov
daa
sbb
iret
jg
pop
faddl
scas
push
dec
sbb
popl
scas
xor
fildl
dec
cmp
and
push
mov
ret
push
lock
jle
push
mov
movsb
cld
mov
add
out
and
ljmp
xchg
in
add
mov
test
lea
push
sub
push
pop
stos
xor
icebp
aas
cmp
push
mov
pop
push
hlt
mov
and
fdivrs
mov
add
or
pop
push
inc
inc
lret
cmp
jle
inc
jmp
push
mov
push
mov
adc
push
cmp
dec
lcall
dec
sub
cld
push
lods
sbb
outsl
mov
mov
stc
or
sbb
fldt
aas
xor
adc
ja
jns
mov
cmp
inc
repnz
lret
xchg
jle
push
push
jmp
mov
mov
ret
rcll
push
insb
mov
in
lods
mov
popa
stc
ds
push
ja
xchg
test
aas
bound
lods
xchg
popf
push
shlb
bound
stos
adc
mov
mov
sub
pop
sub
cwtl
pop
pushf
xchg
push
rcll
add
sub
jge
dec
das
fistps
lods
mov
fdivs
jmp
arpl
fnstcw
icebp
iret
aas
sbb
or
jle
dec
dec
push
push
add
xor
push
pusha
push
or
lods
ds
mov
adc
inc
xchg
jecxz
inc
jb
subb
ja
dec
jp
popa
loop
jmp
enter
sarb
subl
push
dec
pop
das
mov
jb
fldl2t
cmp
mov
pop
adc
mov
loop
and
adc
jmp
in
inc
push
add
cmc
cmp
mov
fsub
push
cs
jmp
test
clc
inc
or
jg
mov
bound
inc
add
cltd
pop
add
inc
push
jmp
ja
pop
outsb
sbb
sub
or
clc
jle
popa
dec
push
mov
test
repz
add
push
sub
mov
es
pushf
sub
push
or
clc
das
bound
pusha
push
cmc
pop
pop
sbb
or
mov
jle
loope
or
add
out
pop
dec
ret
popa
movsb
xor
adc
pop
xor
call
inc
or
xorb
dec
repz
punpcklbw
mov
rcrb
fisubs
pop
lcall
add
dec
out
jmp
stc
scas
inc
xchg
inc
lcall
sbb
jmp
lds
push
sbb
cmpsl
and
jb
insl
sub
popf
push
fs
popf
outsl
or
imul
sbb
xor
push
sub
ret
shll
add
add
push
leave
rcll
add
divl
cmp
and
mov
or
shlb
mov
xchg
cs
jbe
adc
push
sbb
stc
add
sti
add
je
scas
clc
lods
lds
dec
fsincos
aam
sbb
je
repnz
dec
and
sbb
push
or
inc
shr
orb
adc
ja
lcall
orl
shr
mov
dec
add
mov
xor
dec
jmp
sub
loop
push
ja
jmp
xlat
pop
inc
outsb
pusha
loopne
jmp
in
sbb
nop
lods
testb
push
jl
fprem1
jns
cli
dec
ficomps
add
cmp
sysexit
out
scas
push
dec
pop
mov
jmp
popf
mov
repnz
xchg
xchg
addr16
sbb
movb
jno
add
dec
out
lret
inc
pop
test
adc
dec
push
add
stos
jmp
imulb
pop
jne
push
sbb
push
mov
rorb
mov
sub
inc
adc
jae
mov
jno
test
pushl
loopne
add
push
or
popf
add
and
jbe
add
daa
subb
in
dec
rcl
add
add
int
jle
gs
fmuls
xchg
add
xchg
add
pop
fisttpl
inc
jmp
xor
hlt
xor
pop
lea
jbe
push
testb
sbb
or
add
clc
inc
and
mov
pop
shl
imul
jmp
mov
xor
sub
rcrb
add
add
dec
xor
jmp
mov
pop
dec
rcrl
into
jno
arpl
ljmp
aaa
aas
rcrl
movsl
jmp
lds
push
mov
pop
or
or
push
lret
and
add
mov
iret
sub
loope
stos
inc
sar
mov
sbb
lret
in
insl
cmp
fcmovnbe
adc
push
daa
outsl
cmc
push
dec
sahf
adc
test
hlt
jmp
sbb
insl
sbb
ficomps
cmp
enter
adc
cmc
out
xor
jmp
pop
repnz
je
in
mov
adc
push
sti
bound
dec
add
pop
push
or
inc
adc
outsb
dec
cmpsb
add
xchg
fisttps
loop
jge
jge
in
addr16
fstl
add
xor
sbb
in
push
stos
sub
jle
inc
push
lret
adcb
cmp
push
test
mov
pusha
mov
push
rolb
add
rorb
xor
sbb
add
push
cli
inc
daa
add
stos
xchg
add
mov
or
and
cmp
and
push
add
stos
xor
loop
test
and
lds
dec
cld
in
shll
pop
pop
fnstsw
lret
inc
mov
push
mull
add
sub
jae
push
sub
test
nop
mov
adc
sub
repz
sbb
push
or
insl
push
push
stos
sub
dec
stc
add
test
xchg
clc
xorb
jmp
addl
add
mov
sbb
jbe
pusha
add
jae
ljmp
jno
sub
xchg
cmp
mov
add
rcl
push
mov
icebp
aam
xchg
fidivrl
es
seto
pop
dec
pop
ret
lea
cmp
push
hlt
repz
mov
jno
test
pop
and
pop
add
add
aam
mov
pop
scas
cmp
add
add
add
sbb
xchg
incl
ss
pop
addb
adc
push
ret
xor
jns
pop
mov
adc
push
popf
ja
aaa
fildll
stos
push
mov
adc
test
pushf
jg
fdivs
push
and
icebp
adc
add
xor
mov
add
or
inc
mov
cld
daa
movsb
sarl
push
pop
insl
adc
push
or
push
jmp
jmp
into
inc
bound
repnz
shr
sub
mov
adcb
mov
add
dec
mov
inc
mov
mov
loope
cmp
je
or
fisubrs
mov
fisubrs
jmp
call
cmpb
and
push
lock
out
inc
and
jmp
push
test
jle
xchg
inc
ficompl
and
add
xlat
or
jmp
xor
xchg
push
aad
push
setnp
insb
and
les
sub
and
ret
jo
add
push
or
hlt
inc
repnz
pusha
pop
sub
mov
mov
adc
or
pop
mov
sbb
rcrb
add
mov
and
rolb
test
push
pop
add
and
push
mov
loopne
push
aad
fists
mov
push
dec
inc
mov
dec
pop
cld
xchg
cmp
xor
push
ret
xchg
outsl
cli
mov
push
sbb
mov
push
push
fstpt
fcomps
jmp
push
inc
push
cmpl
xchg
adc
loop
xorb
and
cmc
push
dec
fwait
sub
xor
int3
and
adc
int
xor
sbb
fstpt
repnz
lods
pop
mov
xchg
cltd
push
shl
shl
roll
xor
mov
and
sub
rolb
or
mov
dec
and
pop
push
test
xor
pop
pusha
dec
mov
es
sub
dec
mov
mov
or
sti
push
pop
and
adc
lret
pop
push
fwait
cmpsb
mov
cmp
mov
jno
mov
pop
call
and
sub
sarb
in
je
mov
rolb
add
mov
pop
mov
and
rcrl
addb
inc
fldl
add
mov
daa
and
mov
nop
xlat
inc
add
inc
inc
sysret
andb
aam
jmp
and
mov
xor
push
and
push
pop
push
lods
mov
data16
xchg
inc
clc
shll
sbb
pop
ficompl
xchg
cli
cmp
out
std
adc
dec
push
xor
push
or
ror
pop
pop
ds
aas
pop
mov
out
sub
or
push
sbb
clc
jne
inc
xchg
pop
cltd
fdivrl
sbb
xchg
cmp
insb
jg
insl
lods
mov
pop
ror
in
js
repnz
rolb
out
dec
scas
mov
dec
dec
mov
push
test
fistpl
sub
push
mov
jbe
adc
pop
xor
sbb
dec
cmp
inc
add
add
js
inc
test
add
ja
data16
xchg
dec
push
aam
mov
sbb
pop
mov
mov
mov
jle
add
lods
imul
and
xchg
inc
rorb
mov
mul
test
jmp
push
icebp
or
or
or
ds
add
push
xor
xchg
cld
mov
lds
fimull
xor
lods
push
push
out
pop
lea
pop
sarb
jmp
mov
pop
adc
push
add
outsb
cmp
push
popf
jecxz
jbe
nop
aas
push
insb
mov
jne
test
mov
adcb
pusha
add
roll
xor
insl
sub
cmp
sbb
dec
inc
xor
ljmp
clc
cmp
imul
jp
das
ret
stc
jle
ficompl
add
mov
jbe
scas
jae
push
sti
sahf
adc
push
push
push
loopne
movsl
adc
inc
or
push
out
sbb
fmuls
sub
add
xchg
adc
roll
cmpsl
xor
push
lods
and
push
adc
in
jne
adc
faddl
or
jne
je
sub
aam
mov
mov
movl
ds
cwtl
sub
or
lret
adc
cmpb
jmp
push
jnp
mov
jnp
xor
xor
inc
test
bound
shlb
das
cmp
cmp
popa
andb
mov
popf
outsl
add
dec
jmp
mov
shl
xor
xor
neg
xor
cs
dec
scas
xchg
cmp
xor
aas
add
adc
mov
mov
mov
out
ds
or
mov
scas
lret
roll
adc
stos
test
or
mov
push
sbb
jmp
cltd
add
stos
sahf
or
jmp
cld
pop
mov
cmp
mov
inc
push
rclb
sub
aad
cltd
jle
int3
mov
shlb
xor
xor
add
jecxz
jnp
cmp
and
cwtl
pop
xchg
jo
or
jns
add
dec
or
lret
sub
add
fistl
hlt
sub
or
jns
subb
cmp
lds
sub
into
push
jmp
ljmp
das
test
xchg
sahf
pop
in
lea
push
and
cmp
mov
xor
pop
sub
hlt
push
mov
dec
xorb
incb
and
jb
inc
lcall
das
shlb
mov
outsb
int
add
lahf
pop
scas
push
sub
movsl
inc
pop
icebp
push
or
nop
xor
dec
add
mov
stos
or
mov
pop
and
cmp
inc
or
mov
jns
cmp
cmp
fnstsw
lock
xchg
lock
mov
and
jge
loopne
mov
pusha
in
or
jno
push
and
and
sarb
jmp
hlt
sahf
or
mov
cmp
lretw
pop
mov
pop
leave
push
cmp
push
add
jl
repnz
mov
inc
push
mov
inc
or
pop
cmp
push
out
dec
adcl
xor
fidivrl
and
jns
inc
mov
xchg
orb
cltd
adc
dec
pop
jbe
test
or
insl
or
lcall
jmp
mov
jp
sbb
dec
push
sar
outsb
fs
or
daa
cmp
shlb
add
mov
andl
xlat
pop
sahf
shll
popa
push
pop
add
sbb
xor
adc
inc
mov
push
nop
outsb
hlt
jbe
add
mov
jmp
xchg
pop
add
ljmp
xchg
aas
xchg
test
loop
xchg
mov
jmp
stos
insb
inc
push
jno
bound
or
add
xchg
mov
add
je
es
mov
and
subb
or
xor
outsl
test
adc
sub
mov
jmp
stos
mov
jg
mov
rorb
sahf
push
mov
jmp
push
aam
xor
add
jmpw
insl
cmc
sub
pushf
add
xor
sub
outsb
dec
mov
dec
fs
andb
movsb
mov
adc
pop
inc
pusha
and
loope
cmc
jo
mov
test
mov
gs
jmp
out
ljmp
or
adc
jo
mov
add
dec
jo
xchg
pop
dec
xor
xor
mov
sub
pop
push
push
inc
in
xor
lds
cs
loope
push
idivb
dec
cmp
out
add
pop
push
mov
jmp
cs
jmp
push
fwait
mov
pop
push
jmp
xor
enter
push
add
js
dec
ljmp
addb
out
cs
pop
and
fldl
pusha
ds
pop
xchg
aad
push
cmp
fbld
mov
mov
mov
push
and
sub
push
lea
push
pop
not
mov
sub
popa
pop
outsl
push
les
push
mov
lcall
scas
sbb
lods
or
cmp
outsl
es
dec
leave
ljmp
ds
xchg
dec
pop
sub
add
into
fwait
sub
jg
add
sub
pop
and
mov
ret
xchg
shlb
xor
dec
ds
adc
add
scas
adc
jne
sbb
pop
push
cmp
imul
sub
sub
or
fists
mov
add
loopne
add
jmp
cmpsb
out
dec
and
xorl
loopne
xchg
pop
pop
add
jmp
push
xchg
sti
xor
dec
and
push
push
mov
rcrl
scas
mov
add
mov
sub
dec
xor
xor
push
dec
inc
sbb
ret
jne
and
mov
add
push
test
loop
mov
pop
push
push
pop
jge
sbb
js
inc
leave
xchg
out
xlat
add
jge
mov
test
loopne
dec
dec
xchg
cli
fs
std
cmp
jg
jmp
pop
cs
pushf
adc
pop
push
in
adc
dec
popa
mov
rcrl
icebp
and
pop
movsl
sub
addr16
sbb
jmp
xchg
adc
adc
sub
ret
jmp
push
bound
add
mov
dec
inc
sarl
lea
hlt
gs
adc
push
dec
push
fimuls
pop
mov
mov
aaa
inc
jne
pop
hlt
movsb
adc
xchg
lods
sub
push
mov
add
lret
negl
pushf
pop
fs
mov
mov
pop
imul
adc
mov
cmpsb
cmp
push
add
mov
stos
fiaddl
inc
xor
js
dec
sahf
sub
push
inc
mov
mov
in
jg
push
nop
mov
fs
in
push
sub
jge
rol
adc
inc
mov
push
lods
cmpsb
or
add
in
out
push
push
fs
sarb
loope
out
sub
cltd
cmpb
imul
add
mov
sbb
add
loop
loope
xor
in
mov
fisubrs
mov
inc
int
push
push
and
push
adc
mov
pop
lahf
rclb
xorps
out
in
jae
or
jmp
push
mov
or
add
jmp
pop
mov
pop
mov
pop
loopne
mov
dec
dec
clc
insl
jbe
fsubl
inc
push
or
cmp
pop
out
or
xor
jns
gs
rclb
std
pop
nop
jnp
push
cmp
cmp
jne
clc
fbstp
push
shr
neg
or
sub
mov
lret
enter
push
xchg
pop
sub
in
jo
movsb
ret
dec
mov
dec
dec
loop
cmpsb
addb
and
pop
into
push
add
mov
adc
and
push
sub
mov
push
add
loop
mov
dec
sub
cltd
shll
push
into
push
adc
pop
xor
adc
inc
icebp
pusha
xor
pop
push
aas
mov
lods
push
sbb
or
xlat
int3
repnz
xor
and
push
sub
or
pop
ss
sarb
pop
cli
dec
mulb
ret
push
arpl
fists
add
cmp
or
add
insl
push
adc
mov
or
sahf
mov
push
rcrb
gs
pusha
and
add
push
adc
mov
or
xchg
fdivl
mov
push
sub
adc
inc
push
dec
rcr
ljmp
mov
addr16
das
jmp
jno
rorl
pop
icebp
sbb
ds
daa
and
sub
hlt
dec
cmpsl
adc
mov
ret
and
pop
sbb
and
xor
iret
sub
mov
xchg
adc
jl
xchg
iret
insb
push
out
mov
sub
test
call
xchg
inc
lods
sub
outsl
les
jg
adc
out
bound
mov
lret
cwtl
pop
movsl
push
jp
inc
rcr
add
stos
test
adc
mov
adc
ds
sub
or
inc
or
add
push
pop
incl
mov
jecxz
adc
xor
push
or
adc
sbb
pop
ret
adc
cli
inc
mov
insl
imul
push
add
dec
mov
adc
xlat
cwtl
in
dec
pop
loope
imul
repz
dec
pop
jp
push
and
xor
push
add
sub
imul
faddl
dec
add
outsb
or
cmp
and
lret
testl
pop
shr
lahf
repnz
push
cli
outsb
std
add
aam
mov
ljmp
sbb
inc
pop
pop
jmp
lods
push
or
sbb
or
pop
ror
mov
inc
or
push
pop
outsl
dec
imul
xchg
std
and
loope
push
ljmp
pop
cli
iret
inc
or
sub
adc
sub
xor
mov
pop
sbbb
pop
notb
shr
out
add
jae
imul
and
cltd
jle
jmp
ss
jo
jbe
mov
sahf
push
push
inc
sti
mov
dec
add
inc
adc
mov
pop
mov
pop
add
lcall
jmp
push
cmp
add
sbb
pop
insb
imul
cmp
dec
adc
jb
es
xchg
add
pusha
jp
repnz
jmp
mov
add
jl
imul
cmc
jmp
jns
subb
xlat
dec
mul
test
pusha
scas
subl
das
adc
mov
or
out
outsb
dec
outsl
outsl
jns
je
shl
popf
xchg
mov
cli
popf
loop
push
fcmovnu
bound
negl
xor
pop
enter
std
xchg
out
fsubs
les
push
adcl
push
mov
jmp
test
inc
cmp
imul
push
pop
lods
or
aam
fdivrp
call
mov
bnd
pop
mov
push
mov
sbb
add
xor
sub
mov
mov
in
push
andb
jo
pusha
gs
lods
push
pushf
dec
in
into
add
sub
inc
jmp
xrelease
not
sbb
pushf
nop
sbb
data16
sub
push
pop
stc
ss
ja
add
pop
push
sbbb
mov
or
inc
pop
push
lret
std
das
xchg
jecxz
rcr
or
jno
xor
lds
xchg
pop
xchg
shlb
fnstenv
jmp
mov
mov
push
mov
jmp
neg
and
inc
notb
das
inc
test
jp
xor
xor
sub
dec
pop
cmpb
mov
push
clc
testb
mov
gs
or
sbb
inc
inc
adc
or
adc
and
or
and
inc
cmp
jp
orb
inc
add
inc
neg
jmp
mov
mov
pushf
sub
daa
push
jnp
stos
subb
add
sub
test
jle
dec
adc
xchg
adc
sub
add
xchg
lds
push
sub
out
cmp
pop
stos
sub
jmp
ret
or
aad
and
or
pop
jns
negb
ds
loop
lods
add
or
neg
push
or
push
jmp
test
ret
fs
add
push
stos
fstps
sub
das
jmp
shrl
insl
mov
dec
pusha
cmp
dec
cmpxchg
cmp
xor
sub
inc
pop
jbe
push
call
add
xor
ja
loopne
stos
fs
clc
xlat
add
add
imul
jge
add
dec
movsl
pop
adc
add
outsb
jb
outsb
inc
add
sub
sub
sub
jmp
adcb
pop
das
pop
mov
dec
loope
sub
in
add
xchg
int3
sarl
cmp
mov
test
rolb
inc
push
in
add
jecxz
in
lret
out
dec
mov
add
das
and
jl
push
subb
cli
mov
adc
inc
sub
orb
gs
cli
mov
and
data16
roll
adc
imul
and
testl
dec
mov
cmp
dec
push
pop
in
xchg
mov
add
loopne
mov
mov
popf
mov
add
mov
mov
xor
and
cmpsb
adc
or
and
outsl
imul
adc
outsb
add
das
xchg
ror
rcrb
dec
mov
test
and
xchg
sbb
fsubl
sub
shrb
fldl
rcll
and
pop
pop
ljmp
mov
mov
or
mov
out
mov
pop
adc
mov
test
stos
inc
lret
loop
jp
add
jo
push
push
mov
pop
scas
cmp
dec
aad
imul
pop
jbe
jecxz
gs
mov
leave
pop
hlt
js
pop
mov
or
nop
out
and
mov
adcb
stos
jne
cmpb
aad
xchg
aaa
sub
mov
orb
and
pop
cmp
rcrl
pop
outsl
leave
mov
leave
mov
std
mov
sbb
mov
repnz
xchg
lret
nop
stos
push
cmc
ljmp
jae
pop
push
push
sbb
xlat
lods
in
xchg
iret
aam
mulb
xchg
sbb
lahf
clc
insl
jne
xchg
loop
push
add
push
sarl
add
std
dec
pushw
jmp
jecxz
push
jae
xor
or
das
loop
jge
cmpsl
jae
repnz
and
je
pop
xchg
mov
dec
stc
dec
or
add
jg
bound
fmulp
push
loope
xchg
inc
or
ljmp
xor
adc
or
fcoml
jb
mov
sub
xor
xor
icebp
mov
pop
xchg
ficompl
es
leave
mov
sbb
loope
xor
loope
inc
gs
imul
push
inc
sub
sbb
aaa
pop
sub
ret
or
and
or
jp
mov
pop
pop
sub
add
jnp
pop
mov
mov
push
fnstcw
rcrb
sub
test
in
inc
xchg
fists
data16
in
mov
mov
and
scas
inc
jbe
jmp
jmp
cmp
sbbl
push
aas
pushf
icebp
shll
ret
loop
es
mov
dec
push
mov
ds
pushf
mov
int3
shl
jo
xchg
mov
pushf
loopne
pop
ret
les
or
icebp
jns
repz
hlt
dec
jg
sub
adc
add
push
mov
shr
andb
mov
cld
xchg
cld
aad
add
push
mov
lods
les
jmp
cs
dec
add
inc
scas
jmp
outsl
mov
fxam
sub
sub
and
fisubrl
sub
mov
dec
add
cs
mov
xor
jp
and
aad
and
push
or
cmp
pop
mov
es
jbe
pop
movsl
bound
clc
xor
lret
das
pop
pop
xor
les
stc
pop
stc
or
xor
jg
aaa
mov
dec
add
sbb
add
fisttps
pop
mov
and
or
mov
dec
pusha
jne
xor
dec
xor
pop
or
push
mov
xlat
sbb
nop
test
stc
in
in
pushf
cmpsb
push
fs
inc
and
push
sub
add
push
js
mov
cli
fdiv
dec
and
leave
jmp
cmpsb
mov
push
out
xor
ret
or
cmp
in
in
adc
mov
stos
push
repz
or
push
fs
jae
addl
sub
jbe
inc
jns
inc
inc
cmp
jecxz
or
pop
sub
adc
and
pop
pop
xor
push
mov
nop
xchg
outsl
jge,pn
int3
push
dec
test
jmp
adc
mov
pop
imul
je
sbb
adc
mov
pop
xor
push
loopne
out
out
clc
scas
push
jmp
dec
push
mov
aam
jne
push
fwait
movsl
jns
jb
rcll
mov
fisubrl
out
bound
cmp
ficomps
mov
sub
jge
sub
or
and
neg
movsl
add
jne
push
add
mov
incl
mov
lahf
jns
gs
pop
dec
pop
add
push
mov
aas
dec
pop
repz
ret
and
mov
shrl
loopne
mov
fwait
sub
xor
xor
jmp
test
sub
jmp
dec
popa
jmp
pop
xchg
inc
xchg
pop
xchg
jb
adc
ja
jle
or
dec
unpcklps
lret
leave
test
pusha
xlat
fidivrs
or
dec
pop
cli
nop
int3
and
push
and
cmpsb
jmp
out
jo
out
mov
dec
sub
out
or
pop
cmpb
pop
inc
sahf
lock
ss
inc
call
add
xchg
xor
in
jnp
sub
mov
pop
mov
jl
daa
pop
arpl
repnz
cmp
sahf
xlat
push
and
fsubl
cmp
cmc
ret
stos
adc
test
pop
sub
xor
je
js
out
pop
cmp
pop
inc
nop
scas
repz
into
sahf
mov
sub
adc
jle
and
out
iret
bound
cwtl
adc
dec
or
pushw
push
sbb
sti
adc
insb
sub
cltd
cli
inc
aam
in
and
rcrl
xchg
pop
shr
sub
adc
cmovae
sbb
adc
adc
shl
add
and
es
mov
outsl
dec
dec
mov
sarb
cmp
or
xchg
jmp
jb
sbb
xor
add
sbb
lods
add
pop
mov
ja
mov
lock
and
popf
pop
insl
dec
push
mov
jge
cmp
jns
mov
pop
push
mov
xchg
jmp
push
or
push
push
int3
loope
imul
mov
jb
pop
and
stos
or
daa
lods
add
leave
jmp
shlb
sbb
testb
xor
call
ds
loop
or
jae
mov
dec
adc
lea
mov
repz
push
clc
stos
mov
and
mov
mov
xor
add
jb
shll
sub
or
cmp
jp
das
pushf
ds
mov
adc
jmp
sti
cmp
iret
ret
mov
negb
mov
push
cs
and
push
push
mov
push
mov
lret
and
pop
jae
or
pushf
adc
inc
jb
jno
or
fstl
jmp
and
push
push
faddl
add
jmp
iret
cli
adc
mov
pop
push
inc
jmp
cmc
leave
dec
stc
jno
rcrb
adc
call
jne
popa
xor
sub
aam
push
add
add
and
daa
jne
or
xchg
outsb
jno
movsl
jno
mov
xor
push
xchg
mov
fwait
out
xchg
repnz
ds
jle
mov
in
push
push
mov
dec
or
mov
clc
add
mov
adc
scas
lret
jb
leave
cmpsb
sub
or
push
movsl
lret
cmp
sub
aad
inc
ds
into
and
dec
outsb
push
push
popf
bound
icebp
in
popa
cmp
fneni(8087
fwait
rorb
mov
rcpps
xchg
push
sub
dec
inc
shl
testb
xor
incb
push
mov
xor
xor
pop
and
aad
xchg
jl
dec
shll
mov
push
repz
cmp
out
fucomp
sahf
loopne
mov
outsl
pop
xchg
imul
jae
pop
lcall
mov
xor
mov
es
je
jle
loope
fbld
les
xchg
ja
sub
lds
ss
je
test
xchg
pop
loope
push
ret
push
jmp
leave
jnp
push
rorl
loope
jnp
or
xchg
cs
or
aas
lcall
mov
out
je
and
jo
fwait
inc
add
sar
test
cmc
pop
scas
sbb
in
rolb
add
lret
inc
rolb
ljmp
push
push
and
push
or
pop
add
jnp
mov
sub
or
pop
pop
scas
stc
das
gs
or
movsl
or
adc
lcall
adc
pop
add
jo
enter
fucomi
dec
dec
add
clc
adc
sbb
loope
jmp
jp
cmpsl
pop
adc
into
sub
ljmp
sub
dec
add
sub
outsl
add
push
mov
cli
mov
int3
lods
adc
adc
xorb
shrb
push
pop
add
or
lock
repnz
scas
cmp
adc
cmp
xchg
lock
fcomi
loope
xor
mov
or
jg
pop
adc
pop
cmpsb
imul
shr
cmp
enter
jmp
lret
push
pop
sub
sbb
jns
push
push
add
mov
dec
ljmp
xchg
cmp
out
je
jle
bound
mov
pushl
fs
scas
adc
or
pop
les
cs
xchg
daa
mov
or
sub
shrl
add
out
jge
jbe
add
and
subb
shrb
cld
lods
jmp
icebp
pop
adc
push
dec
stc
inc
mov
daa
negb
sbbl
adc
and
je
ret
jmp
add
xor
cli
inc
movsb
pop
add
push
ret
pop
jmp
cld
out
push
subl
out
adc
push
cmp
icebp
mov
inc
and
pop
push
js
repz
fbld
push
adc
aad
lods
lret
loopne
jno
xchg
push
fiaddl
and
adc
push
cmp
fildl
add
and
or
inc
in
es
xor
dec
mov
pusha
and
jnp
pop
mov
neg
out
loop
pop
clc
pop
pusha
in
mov
cli
popf
lock
pop
mov
xchg
in
loop
lds
ret
pop
pop
and
dec
ret
jp
sahf
adc
sub
inc
adc
add
in
test
pop
xor
scas
fdivs
push
push
dec
stos
in
repz
call
adc
jmp
fcomp
adc
out
stos
push
xor
jne
push
mov
imul
sub
or
stos
dec
add
mov
les
mov
popa
sub
sub
ja
pop
test
inc
sbb
outsl
jmp
ss
mov
loop
test
and
mov
cmpsb
popf
lahf
add
mov
jmp
orb
sub
das
jmp
pushf
xlat
jp
xchg
fcom
jmp
ret
cmp
dec
sub
push
push
push
je
decb
mov
adc
mov
push
daa
dec
mov
sub
push
pusha
ret
jp
loop
push
cmp
dec
and
gs
adc
cmp
add
enter
xchg
test
cs
xor
push
leave
int3
inc
data16
mov
dec
push
add
pop
mov
int3
rorl
mov
jle
dec
pop
sub
adc
xchg
dec
aad
jecxz
add
std
inc
int3
mov
xor
ljmp
es
insl
push
mov
jmp
repnz
push
mov
or
icebp
ja
cmpsl
jbe
mov
sbb
mov
lahf
dec
shrl
in
add
xchg
inc
push
or
pop
mov
add
int
fs
jo
popf
push
cmp
adc
std
dec
je
orb
sub
jno
mov
daa
mov
cmp
repnz
dec
adc
dec
dec
adcb
jns
sub
jle
adc
inc
push
mov
xchg
inc
incb
jmp
sahf
mov
das
xor
rcr
outsl
xchg
loop
bound
or
or
hlt
or
call
add
dec
icebp
into
cmp
xchg
jle
xchg
lret
jl
mov
inc
sahf
adcb
les
addr16
add
fisubrs
stc
iret
rol
lahf
xchg
or
cld
push
jns
daa
jg
pop
pop
jbe
es
mov
sub
aas
out
imul
int3
dec
mov
inc
push
push
jmp
jge
cmp
cmc
ret
es
sbb
sub
inc
push
push
add
mov
test
daa
sub
jl
sub
push
repnz
cwtl
mov
cmp
or
stos
sub
xor
pop
push
fdivs
pop
dec
add
jp
repnz
push
orb
pop
imul
mov
sbb
lret
push
inc
xchg
aad
cmp
inc
sub
pop
adc
xchg
shl
mov
fwait
lock
push
lcall
dec
jecxz
lret
aas
adcl
push
sub
mov
push
inc
ret
es
sbb
sub
xor
or
stc
inc
adc
stc
addr16
push
ss
xchg
in
add
inc
scas
push
ljmp
in
mov
cmpsl
jecxz
xchg
pop
xchg
cltd
jo
sbbl
mov
leave
sub
xchg
adc
loope
or
in
mov
out
dec
xchg
or
push
push
mov
pop
rclb
push
sbb
sbb
xor
mov
xchg
pop
test
push
enter
fstpl
push
push
and
cmp
repz
jmp
pop
gs
sti
push
repnz
fimull
jo
and
loop
jle
add
add
enter
out
push
dec
dec
jae
jae
mov
inc
dec
and
xchg
popa
loop
or
mov
push
sar
cmpsl
and
push
shr
sbb
int
shrl
sub
enter
xlat
adc
les
pop
outsl
ja
adc
rcrl
repnz
fdivs
mov
push
and
pop
and
push
out
mov
jecxz
or
aad
loop
in
popf
push
rcrb
dec
movsb
es
jns
cmp
add
inc
xor
and
dec
xlat
adc
rorb
jl
and
jae
js
mov
add
inc
pop
add
mov
push
mov
xor
in
cwtl
mov
data16
mov
push
jg
hlt
fsubs
dec
loop
aam
dec
add
cmp
and
xchg
test
pusha
inc
hlt
mov
sar
fsubp
sub
push
fwait
rorl
shlb
outsb
test
mov
mov
imul
sti
arpl
jmp
subl
sarb
vandnpd
xor
loopne
ds
test
adc
fidivrl
and
pushf
les
mov
push
xlat
inc
aam
ret
in
and
pop
pop
sbb
pop
add
test
dec
sbb
clc
mov
imul
mov
pop
cmp
lds
xchg
xchg
cwtl
or
sub
sbbb
push
or
xchg
pop
push
out
js
lock
jle
pushf
orb
cmp
dec
xchg
add
hlt
sbbl
or
sbb
add
shr
jmp
mov
adc
sbb
leave
call
inc
mov
out
clc
xchg
jbe
jbe
fisttpll
xor
in
mov
sub
clc
bnd
push
lret
clc
movsl
mov
xor
insl
cmp
or
lods
in
mov
jmp
dec
adc
jae
add
js
and
and
mov
pusha
jp
imull
idivb
ret
or
push
jbe
out
and
add
scas
xor
or
std
cmp
pop
sub
add
sbb
inc
loope
jae
bound
sbb
jne
cmp
sub
push
xchg
pop
pop
cld
insb
lods
xchg
jmp
push
mov
sbbb
mov
mov
adc
ret
add
add
scas
outsl
jge
ret
mov
mov
xchg
cli
aas
xchg
cmpsl
add
xchg
sbb
sbb
inc
in
jmp
lret
and
aam
add
cs
fsts
or
cmc
xor
pop
push
sub
aad
clc
mov
clc
mov
adc
lds
sub
in
int3
sub
jge
jge
pop
lods
mov
sub
fdivr
in
icebp
pusha
mov
scas
xchg
icebp
add
test
mov
xchg
pop
xor
mov
insb
stos
adc
ljmp
in
jb
dec
and
mov
cmp
adc
shrl
imul
ret
cmpsl
mov
movsb
scas
ljmp
cmp
ret
cli
mov
or
pop
jmp
pushl
lds
push
outsl
daa
cmovb
and
leave
or
rcrb
push
repnz
enter
sub
mov
jns
push
mov
xor
aaa
inc
pop
sub
mov
adc
dec
fcomp
add
jmp
rolb
push
shlb
test
xchg
fcomps
dec
cmp
outsb
inc
aas
cld
out
fcoms
xor
adc
jbe
rorl
enter
ret
daa
add
xlat
shl
add
inc
ret
shll
dec
jl
jp
sarl
cli
jns
lods
jge
pop
xchg
rcrb
fs
es
push
xor
adc
loopne
sub
pop
sub
or
jo
adc
mov
fcomps
adc
test
add
lea
stc
push
rcll
ficoml
insb
fildll
insb
xor
pxor
add
in
inc
or
dec
cmpsb
stos
testb
lret
cmpsb
bound
in
xor
es
adc
xchg
cmpsl
lock
xchg
and
mov
mov
push
mov
mov
cmp
test
pop
aas
xor
cwtl
cld
mov
mov
jle
mov
mov
and
adc
adc
js
andb
stos
notl
stos
adc
enter
ljmp
imul
shll
and
xor
sbb
cltd
out
mov
add
in
push
push
mov
cmc
inc
sub
xor
pop
pop
sub
inc
sarb
into
inc
mov
push
inc
jns
div
pop
and
dec
pop
fwait
subb
in
sub
jle
fcoml
jne
jnp
push
jmp
addr16
movsl
mov
jns
mov
dec
loop
dec
nop
inc
addl
xchg
mov
clc
mov
mov
mov
xor
mov
lret
push
jle
lods
pop
sub
push
and
jle
jmp
mov
sub
pop
mov
notb
cmp
mov
lock
jge
pop
jmp
subb
cs
push
dec
sub
sbbl
mov
jle
test
inc
push
jns
inc
jbe
pop
add
cmpsl
mov
adc
iret
cmp
daa
outsb
jnp
gs
pop
add
stc
sub
gs
cmpsl
xlat
dec
and
test
cli
stos
movsl
daa
repnz
mov
dec
pushf
adc
push
cmp
rcll
mov
and
sub
xor
lret
sub
imul
mov
xor
leave
cli
mov
scas
xor
daa
cmc
sbb
filds
in
jmp
out
or
jns
ljmp
cmp
add
add
or
jno
fisubrs
ds
shll
inc
stos
cmp
out
xor
test
lock
mull
add
push
fsubrs
mov
dec
mov
fimull
pop
test
push
rcrb
and
push
orb
add
imul
push
cmp
mov
xchg
cld
mov
imul
fidivrl
clc
mov
subl
mov
inc
cli
lods
insl
icebp
push
push
mov
dec
test
aas
sbb
add
xor
jae
dec
push
int3
cmp
data16
sub
jmp
push
pop
leave
aad
mov
icebp
loopne
mov
pop
push
and
add
shl
jle
xchg
push
ds
or
cld
out
fwait
lods
xor
ficomps
adc
es
adc
scas
mov
pop
add
push
inc
pop
scas
enter
mov
jecxz
shl
mov
nop
or
daa
loop
mov
xchg
mov
add
xor
xchg
add
xchg
jg
push
mov
jecxz
andb
add
test
dec
jbe
or
pop
xchg
and
stos
fs
mov
xor
out
ljmp
ret
testb
pop
xchg
in
and
mov
loopne
mov
fsubl
jae
mov
in
popa
lods
ret
cld
iret
loop
push
pusha
ficoms
fadds
and
clc
pop
push
push
add
inc
popw
xor
inc
pushf
dec
les
inc
push
negb
pusha
push
and
test
lock
in
pop
lds
jno,pn
daa
or
fnsave
nop
cmpsl
cmpsb
scas
or
push
decl
lahf
sub
test
pop
not
adc
stc
out
enter
out
mov
fildl
and
lock
shl
cld
imul
mov
push
or
jmp
cwtl
mov
adc
mov
jne
or
dec
jg
jae
dec
or
shrb
sbb
cmp
insb
sub
sub
inc
xor
pop
jmp
iret
xlat
orl
gs
ds
cmp
adc
push
pusha
jp
cmp
ljmp
mov
mov
add
mov
sbb
pop
ficoms
lret
sbb
daa
outsl
es
or
clc
inc
fs
scas
fiadds
push
leave
ss
add
xchg
ljmp
clc
mov
fdivs
cmp
push
xchg
mov
das
dec
xchg
inc
out
data16
add
mov
jmp
mov
cld
dec
mov
inc
mov
enter
or
inc
dec
mov
sbb
adc
int
inc
jg
test
jle
mov
sbb
mov
sub
mov
mov
or
add
lret
mov
and
sti
imul
and
stc
movl
mov
scas
xor
ret
add
popf
movsb
movsl
aad
adc
mov
push
mov
push
push
xchg
mov
in
stos
dec
sti
into
fstpl
jmp
pusha
mov
xor
lock
pop
or
mov
mov
cwtl
xor
sub
cmc
pop
shr
mov
in
test
cmp
cmp
and
xchg
fistpl
cmp
ret
sub
mov
test
std
and
pop
or
loope
push
dec
sbb
in
or
or
and
mov
mov
out
jo
cmp
jp
sub
push
jmp
cld
popl
fbld
sub
insl
roll
mov
sub
les
out
push
cld
mov
imul
jl
dec
jne
jl
rcl
ljmp
sub
dec
or
int3
out
fdivrl
sub
test
enter
lret
jo
aam
push
mov
fidivrl
popf
fsts
add
cmp
xchg
add
iret
and
cmp
mov
sbb
stc
fmull
push
or
adc
shl
or
sub
sbb
in
clc
mov
xchg
add
clc
pop
add
jmp
dec
or
xor
jge
bound
shrb
push
inc
ja
sub
ljmp
sub
popf
pop
cli
mov
fs
mov
and
sbb
cs
or
inc
out
daa
popf
clc
jg
fstl
or
or
sar
es
and
mov
sub
out
in
fwait
incb
xor
dec
das
add
popf
bnd
and
popl
sbb
push
dec
cmp
imul
dec
push
pop
cmp
adcb
js
cmpb
cli
add
pop
push
jmp
mov
inc
mov
imul
or
daa
dec
jbe
rcll
mov
and
mov
test
fstpl
mov
movl
pop
fcos
mov
add
leave
inc
pop
out
mov
aad
cwtl
or
les
sub
mov
xlat
stc
nop
outsb
sub
ret
inc
jecxz
ja
inc
test
mull
repnz
jle
dec
and
xor
and
add
jmp
push
add
out
movb
mov
sub
jmp
and
xor
xor
pop
lahf
in
cmpsb
sbb
and
push
jmp
pop
xor
cltd
ret
in
adc
mov
push
mov
lods
pop
imul
sbb
lods
dec
loopne
je
push
sarl
ss
inc
jns
add
stos
or
sub
cmp
shr
jge
fistpll
and
adc
sbb
adcl
aam
dec
adc
insb
jbe
frstor
xor
mov
xchg
mov
mov
bound
flds
add
call
xor
sbbb
jbe
shrb
das
dec
inc
add
cli
jle
or
dec
xor
les
dec
add
pop
add
or
popa
xor
fmuls
shll
push
xor
or
dec
push
fstps
inc
xchg
cmp
push
push
push
pop
rclb
fidivs
xor
mov
cmc
sarb
lret
dec
stos
enter
hlt
std
adc
mov
pusha
addr16
incl
ds
sbb
in
inc
pop
and
adcl
sub
mov
dec
or
pushf
lret
cmpsl
sub
idivb
push
mov
daa
or
pop
lods
dec
es
sbb
or
adc
pop
jno
mov
sub
insl
pushl
sbb
fsubr
or
cmc
in
adc
inc
or
lahf
fildl
cmp
dec
test
adc
xlat
and
icebp
adcb
dec
jmp
pop
scas
sub
das
into
cmp
aas
jnp
fists
subl
insb
test
pop
or
hlt
scas
shl
xchg
jmp
cmp
mov
adc
adc
sbb
sbb
pop
out
push
inc
sbb
movsl
test
icebp
mov
mov
shlb
cmp
mov
fdivrs
jns
cmp
adc
and
daa
flds
ret
jns
das
add
data16
mov
mov
xor
adc
test
dec
je
es
divl
push
sub
add
xchg
inc
jmp
std
ret
loope
stos
add
lds
leave
subl
xor
in
std
call
mov
pop
aaa
lock
dec
cmpsb
fs
out
sti
push
push
arpl
pop
rolb
dec
lahf
fisubrs
arpl
pop
loopne
loop
ret
sbb
add
sub
sbb
push
add
pop
jb
clc
push
add
inc
mov
xchg
test
push
cs
ror
jmp
bound
dec
mov
push
mov
out
inc
mov
add
shl
mov
jbe
add
push
fs
jb
xchg
fs
das
push
mov
outsb
mov
test
jb
and
jle
push
mov
sbb
add
repnz
es
adc
je
dec
xchg
jb
jmp
ss
push
pop
push
mov
rcl
dec
adc
dec
nop
rcll
push
pop
not
shl
aaa
jmp
xor
sub
cmpsb
sub
jmp
xor
and
push
xchg
roll
inc
cmc
ret
popl
test
std
mov
add
adc
or
ds
cs
or
dec
adc
pop
and
dec
xchg
pop
scas
push
push
and
cmc
test
in
or
mov
mov
inc
mov
cmp
fisubrs
stc
sub
mov
in
ror
pop
xchg
push
arpl
mov
in
mov
cmp
dec
pushf
push
sub
fwait
sub
cltd
insb
sub
mov
adc
out
or
add
in
ret
xor
ss
or
add
or
mov
hlt
sub
mov
jp
sub
shlb
je
test
addr16
mov
aaa
cmc
ljmp
xchg
sub
and
popf
jle
mov
leave
pop
sub
lds
mov
sub
insl
adc
mov
jns
or
and
cld
test
rcrb
out
or
movsb
pop
push
lcall
mov
movsl
xchg
dec
orb
jge
dec
mov
addr16
lds
shrb
pop
pusha
or
bound
add
leave
cmpsl
push
sbb
inc
push
sti
lods
mov
and
ret
cltd
mov
je
mov
das
push
mov
test
and
subl
lret
ret
mov
push
push
jo
push
sahf
loope
lock
lods
imul
push
pushf
dec
jmp
add
mov
xchg
in
and
dec
sbb
cmp
not
push
jmp
mov
or
inc
sub
lret
cmc
mov
fs
pop
inc
cmp
andl
and
bound
aad
es
jmp
ret
es
in
push
fs
sub
imul
cld
fnstcw
mov
shlb
sbb
arpl
loope
jg
rol
mov
ds
push
in
xor
jmp
pop
leave
lret
mov
arpl
jecxz
sbb
or
mov
movsb
outsb
in
jno
scas
js
xchg
insl
dec
adc
rclb
lret
shll
sub
cmpsl
push
xlat
pop
push
jae
in
shll
cmp
and
add
das
push
push
add
out
xor
mov
pop
mov
inc
adc
add
add
and
pusha
lret
shlb
mov
push
pop
jmp
hlt
inc
pop
push
xor
mov
dec
adc
add
adc
imulb
inc
ret
aas
add
xchg
pop
mov
jg
xchg
sahf
push
lret
ljmp
add
popf
or
inc
add
add
adc
popa
or
ficompl
jg
sbb
sub
jnp
mov
and
push
adc
out
adc
inc
sub
or
clc
sbb
and
andl
xor
rorb
mull
inc
push
push
sub
or
ja
inc
test
adc
adc
sbb
cmp
add
aad
imul
fnstenv
xchg
pop
mov
ss
add
stos
pop
lahf
or
mov
push
xchg
out
xor
pop
int3
int3
mov
add
scas
mov
stos
sub
fildl
inc
jl
adc
pop
or
and
cld
outsb
jmp
mov
push
cs
nop
sub
sub
popf
ficoms
popf
jle
shr
xchg
jg
jmp
pop
mov
iret
pop
push
sub
mov
call
pop
push
dec
aam
xchg
sti
xchg
xor
cmc
int3
fdivrs
inc
dec
inc
mov
push
lahf
inc
dec
in
jmp
dec
loop
clc
xlat
xchg
js
out
ja
mov
jb
xor
sti
push
cmpsb
add
mov
jmp
xor
pop
add
mov
int
or
mov
lea
fistl
push
pop
pop
neg
shrl
aas
std
fadd
adc
adc
sub
mov
pop
jno
add
and
es
cmc
adc
push
push
das
mov
fcomps
ljmp
mov
cmp
lds
push
xor
cmpsb
add
mov
out
add
lods
cmp
adc
and
cld
repz
sub
orb
data16
dec
pusha
adc
cli
or
jns
lds
push
push
and
dec
rorb
rcrb
and
rolb
pop
add
enter
stos
stc
je
cld
add
mov
jmp
pop
xchg
int
jmp
mov
inc
and
rcll
lret
jbe
pop
cwtl
mov
shlb
gs
test
lret
mov
cltd
mov
sub
fdivrs
mov
pop
pop
cli
sub
jmp
ljmp
jnp
xor
out
or
outsb
add
test
data16
push
loope
std
cmp
dec
add
push
adc
inc
imul
pop
scas
mov
ret
jle
mov
cmp
lods
dec
sbb
shll
add
push
mov
push
jecxz
adc
lea
xchg
cmp
mulb
dec
pushf
lret
mov
pop
push
dec
dec
out
inc
jno
add
push
mov
ret
out
fs
ret
aas
mov
fucomip
adc
jne
sub
sub
jmp
xchg
repnz
ds
dec
and
and
xchg
mov
rcrl
ficoms
call
push
xchg
pop
xchg
testl
and
sti
xor
sbb
outsl
mov
mov
jne
inc
sub
ds
scas
nop
iret
pop
stos
push
xchg
xchg
imul
xchg
cmp
or
fs
xchg
js
lock
xchg
fsubr
jo
lret
pushf
andb
cmp
fsts
fdivr
cli
dec
inc
sbb
das
addl
jp
cmpl
jle
add
dec
loopne
add
ljmp
lds
push
rorb
and
or
das
ret
or
ds
mov
and
gs
pop
xchg
mov
fidivrs
jno
sbb
adc
jno
push
pop
push
add
lds
out
ss
add
mov
jecxz
or
dec
mov
lret
cmp
cmpsl
fadds
add
addr16
loopne
rorl
mov
out
or
lahf
sbb
jecxz
popa
cld
cmp
movsb
leave
fwait
mov
lret
out
call
loope
adc
add
stos
outsb
es
dec
sub
mov
adc
sub
test
push
inc
mov
or
dec
rdtsc
dec
psrad
das
fs
repz
xor
stos
and
filds
imul
sub
fdiv
push
pop
sub
and
mov
out
ret
call
dec
cs
cltd
push
push
jmp
mov
push
pop
cmp
mov
jns
xchg
add
mov
mov
jle
ret
fs
add
movsb
and
imul
mov
iret
aas
push
jmp
ja
aam
mov
pop
lahf
icebp
aas
inc
push
jmp
add
sti
mov
push
lds
mov
xchg
adc
xchg
mov
jle
lahf
mov
ret
pop
loop
pop
jg
push
cltd
adc
icebp
xor
ret
inc
add
lahf
xor
ret
mov
sub
outsl
nop
ljmp
add
and
and
jmp
mov
xor
es
push
jge
cmp
data16
dec
lds
call
imul
jp,pt
out
jle
mov
inc
or
lret
cmc
mov
lock
lock
dec
sub
rolb
xorb
dec
cmc
sbb
cmp
mov
and
pop
push
in
cli
dec
test
jne
or
mov
into
dec
dec
imul
adc
add
stc
outsb
push
adc
mov
push
inc
or
pop
insl
pop
add
xchg
jg
loope
mov
xor
push
lahf
lret
sahf
test
mov
mov
or
pop
or
lds
and
mov
sbb
pop
add
push
repz
scas
out
adc
fstps
inc
shl
out
pusha
cmp
xor
arpl
dec
fldenv
gs
mov
int3
sbb
ret
aaa
inc
sbb
push
add
jo
jl
mov
sub
mov
aaa
pop
in
aad
test
mov
popa
lds
pop
push
aad
dec
ss
daa
pop
lds
jo
push
push
inc
inc
adc
mov
pop
mov
jl
testb
jae
mov
pop
sbb
pop
or
int
push
mov
pop
icebp
sbb
insl
popa
push
cld
xorb
ss
jmp
push
xchg
xor
xchg
mov
icebp
bound
adc
mov
sub
mov
add
pop
jecxz
mov
bound
dec
int3
arpl
pop
or
sbb
push
pop
dec
icebp
cli
ja
out
cmpsb
jno
cmc
or
inc
and
stc
sahf
inc
jg
jle
mov
pop
pushl
add
fwait
aas
rol
jl
cmp
adc
test
or
xlat
pushf
iret
cmc
push
pusha
push
faddp
ljmp
cmp
push
leave
push
sub
cli
cld
mov
lret
add
mov
std
jnp
add
pop
push
mov
xchg
scas
call
add
enter
ret
cmp
mov
ret
sbb
cmp
ja
jno
ds
aas
lock
cmc
gs
or
std
in
fistpl
add
adc
pop
sub
mov
rolb
inc
mov
jl
fs
mov
enter
inc
pop
pop
and
mov
loop
ficompl
add
pop
push
jp
rorb
out
or
cli
mov
adc
mov
dec
lret
adc
and
mov
xorb
loopne
xchg
push
dec
mov
iret
std
add
jnp
and
jbe
inc
in
inc
cmpsb
push
les
push
int
push
mov
inc
in
dec
xor
xchg
add
adc
mov
sub
call
pop
jmp
pop
cmp
add
lods
mov
fisttps
loop
loopne
jnp
xor
push
or
push
mov
fisttpll
bnd
shl
jle
mov
and
fimull
dec
sub
adc
add
insl
inc
adc
adc
cs
stos
push
and
cld
inc
test
cmpsb
fidivrl
fnstenv
or
lret
pop
test
dec
lods
out
inc
sbb
loop
pusha
add
jmp
pop
lcall
lds
sub
lock
add
clc
cmp
je
dec
push
add
mov
insl
cmp
rcl
pop
outsl
aad
cli
sub
dec
scas
add
insl
out
repnz
ret
in
shl
or
addr16
leave
dec
pop
call
add
lahf
and
mov
jns
adc
inc
push
mov
cmp
fucompp
dec
pop
movsl
pop
out
sub
inc
push
push
outsb
sub
test
xchg
push
jmp
add
data16
ret
jne
inc
aaa
or
sbb
push
movsb
adc
mov
push
mov
jp
ljmp
sub
imul
adc
jnp
shll
aad
and
mov
or
sub
fildl
and
add
or
jae
lret
add
and
aas
jmp
es
jmp
call
rorb
push
sub
inc
pop
aam
fstps
pop
pop
pop
or
ds
pop
dec
pop
pop
pop
aam
jb
sub
mov
jmp
or
sbb
jecxz
add
in
lock
jnp
out
xor
mov
or
shrb
sarb
sti
fisubrl
and
mov
mov
test
add
mov
jle
imul
fnstsw
dec
xor
push
adc
push
dec
in
adc
imul
cmp
adc
int
lock
test
mov
mov
test
cmp
sub
add
mov
push
mov
adc
dec
mov
ja
out
test
fnsave
inc
orl
loop
push
int3
cmp
xchg
decb
roll
inc
or
cmpsl
out
cmpb
into
fildl
jmp
imul
popa
push
lcall
sub
mov
push
inc
cltd
std
loope
aam
imul
cmp
jnp
add
add
cli
fdivr
mov
cmp
inc
pop
lods
dec
lock
popf
add
cwtl
lahf
mov
inc
push
aas
xor
jo
push
push
leave
mov
jne
add
push
and
aad
mov
out
gs
test
das
sub
dec
jmp
adc
sbb
and
mov
je
bound
leave
in
sub
repz
rcrl
push
cltd
mov
or
jmp
inc
je
ret
js
or
rolb
xor
out
xchg
lock
subb
cs
icebp
enter
fdivrl
cli
adc
mov
stos
ror
inc
push
mov
add
das
jno
xor
dec
sub
pop
stos
xor
aam
cli
mov
and
out
adc
pop
popa
aas
xchg
repz
in
xchg
pop
decl
push
outsb
shl
dec
outsl
jl
pop
jp
inc
test
cmpl
mov
neg
add
xor
scas
int3
cmp
sub
inc
repnz
xchg
orl
les
test
sbb
imul
inc
roll
or
outsl
cmp
lret
dec
adc
mov
pusha
repz
xor
lahf
or
repz
ret
adc
lods
xchg
xchg
add
xor
psubsb
push
jle
adc
rcrl
popf
inc
mov
mov
mov
inc
lock
push
mov
push
mov
mov
leave
imul
pusha
shl
testb
sub
ficompl
ljmp
mov
jmp
push
add
add
push
jecxz
dec
js
lods
or
lret
pop
loop
cmp
pushf
ret
or
adc
add
jmp
and
mov
mov
mov
jp
shr
inc
mov
jmp
int
loope
mov
test
and
loopne
adc
data16
gs
addl
jnp
jmp
pop
adc
lock
jb
xchg
pop
outsb
inc
int
push
rcr
outsb
add
jmp
pop
nop
pop
or
into
sbb
xor
jmp
mov
dec
gs
imul
out
nop
push
jne
sub
pop
ret
jno
cmc
out
push
dec
inc
push
push
mov
jle
roll
cld
daa
int
xlat
loope
xchg
cmp
mov
scas
mov
adc
push
iret
sti
mov
xor
icebp
cmp
int
negb
sbb
push
aas
pushf
jl
fistpl
and
pop
das
movsb
jg
add
mov
cmc
mov
add
add
push
outsb
icebp
dec
int3
enter
jg
push
or
xlat
add
int3
cmp
dec
add
fucom
cmp
test
cmp
out
dec
bound
test
and
sti
pop
jle
add
sub
sub
pop
add
jecxz
sbb
adc
cmp
mov
inc
cmpsl
jecxz
xor
pusha
out
sbb
or
aad
push
sub
mov
das
gs
jae
add
jo
bswap
push
dec
pop
outsl
popf
and
jne
xchg
hlt
push
js
xchg
mov
xor
shrl
sbb
loopne
daa
xor
push
jae
cwtl
in
pop
notl
dec
push
lods
mov
or
test
fiadds
push
jmp
mov
inc
xor
cmovs
adc
imul
and
inc
pop
push
mov
pop
test
test
jp
inc
test
js
dec
nop
repz
or
mov
lret
mov
mov
push
and
out
leave
sbb
lahf
imul
mov
dec
add
xor
mov
sub
loope
fs
adc
or
adc
pop
push
add
cwtl
jl
push
shl
pop
hlt
movsl
dec
pop
icebp
enter
sbb
cmp
add
xchg
pusha
sub
aas
test
mov
sub
or
add
add
cmp
roll
xor
pop
push
sub
popf
dec
push
testb
sarb
fists
lock
iret
jo
icebp
rolb
add
mov
inc
mov
sbb
mov
add
push
out
add
push
icebp
out
mov
movsl
rcrb
pusha
xor
lock
addr16
pop
push
jo
or
sarl
add
gs
sbb
mov
push
add
stc
xor
jge
and
dec
cld
fwait
xorb
mov
xchg
sub
jae
mov
mov
ret
cmpsl
lahf
push
decb
push
mov
rcrb
data16
cmp
sbb
addr16
jnp
icebp
idivb
add
adc
xchg
and
xor
outsb
sti
daa
or
int
les
pop
sahf
pop
push
out
cmpsl
jne
mov
mov
gs
mov
and
loope
sub
cmc
in
pop
cmp
push
cmc
mov
movsb
lds
jmp
repnz
cwtl
loope
or
andb
mov
cmp
sti
test
cmp
push
jne
dec
or
dec
cmp
mov
cmp
jle
inc
out
sub
and
inc
aad
or
into
dec
push
adc
ret
dec
jb
cmp
dec
adc
mov
jmp
dec
sub
jne
movsl
ret
push
aam
dec
jno
in
and
ljmp
cmc
cli
loop
jmp
xchg
push
or
inc
lcall
not
popf
add
fwait
cmpsl
xlat
sbb
sub
loope
dec
jmp
out
imul
inc
jns
gs
test
jge
sub
mov
pop
frndint
inc
xchg
loop
mov
inc
cmc
aas
fwait
das
push
push
jo
mov
dec
ss
cmp
clc
inc
sbb
mov
das
out
adc
pop
icebp
add
test
adc
add
add
xor
xor
jns
add
shl
test
notb
faddp
push
pop
jmp
ss
and
js
icebp
adc
ja
sub
push
hlt
and
pop
xor
movsl
mov
out
orl
in
push
xchg
lods
lret
sarb
adc
mov
test
pop
shrl
dec
pop
mov
das
pop
les
inc
mov
sub
adc
jbe
cmp
out
or
cmc
pop
xlat
and
mov
and
inc
xchg
jmp
jp
adc
das
in
pop
in
mov
sbb
sbb
es
mov
jns
stos
push
rolb
sub
test
add
or
sbb
dec
and
in
jno
inc
leave
in
and
mov
bound
jmp
cld
movsl
out
sarb
inc
ret
mov
jle
in
mov
mov
icebp
add
add
jbe
add
dec
test
adc
push
pop
stos
add
out
or
inc
sbb
dec
fs
or
cmp
lods
inc
cs
mov
jno
jmp
stc
pop
repnz
adc
jecxz
mov
jbe
out
pushf
fucomip
dec
lret
enter
inc
in
data16
cmc
xchg
daa
mov
push
fiaddl
jp
adc
lea
or
insb
adc
and
dec
cmp
pop
push
in
xchg
xchg
jbe
movq
jl
push
pop
insb
aam
test
add
and
and
shlb
xchg
mov
daa
inc
lcall
push
bound
mov
mov
pop
sbb
dec
mov
sub
push
into
bound
xlat
add
rcll
or
pop
out
dec
add
fdivr
mov
jmp
fs
xor
mov
decl
leave
lods
rorb
jb
adc
sbb
mov
in
sub
inc
mov
cltd
jae
sbb
add
add
sub
push
sub
cltd
rorb
jno
xchg
in
dec
pop
clc
jg
cwtl
adc
jae
loope
pushf
ss
incl
packssdw
lock
push
push
pop
mov
jmp
ds
and
stos
lret
jmp
push
mov
jmp
mov
mov
pop
dec
mov
in
pop
xchg
pop
inc
add
pop
pop
jns
and
push
mov
add
mov
pop
inc
sub
jl
data16
xchg
mov
jae
xor
lahf
fdivs
notb
jne
cmc
jns
lods
inc
add
jae
femms
or
or
or
add
jmp
leave
loop
scas
mov
and
aas
push
ja
sbbl
cmp
pop
lock
aad
aad
scas
lret
in
push
cmp
pop
pushf
mov
inc
pop
or
pushw
cli
push
sub
aaa
add
push
mov
imul
sub
and
popf
cmp
or
in
mov
test
mov
mov
mov
aaa
add
mov
sub
ror
cwtl
add
sub
cli
xchg
pop
xlat
cltd
push
into
into
jno
push
push
cli
cmp
cmp
stos
and
inc
leave
sbb
fcom
fwait
pop
cmp
adc
adcl
pusha
addb
andl
test
or
add
add
cmp
lock
movsl
lods
sbb
dec
dec
push
std
pop
mov
mov
mov
mov
sub
lods
jl
jns
int
addl
ret
push
sarb
ljmp
sub
popf
jne
mov
dec
out
out
push
jge
imul
shll
or
roll
sub
mov
push
push
lock
jp
mov
cmp
mov
and
push
test
and
mov
out
or
faddp
sub
mov
adc
mov
or
adc
inc
add
cmp
cmp
shrb
add
sub
mov
mov
aaa
mov
mov
sub
and
mov
pop
aad
add
push
pop
adc
mov
mov
dec
mov
mov
into
lock
and
add
cld
cmp
mov
aad
add
push
dec
std
jmp
out
lret
jb
add
in
scas
or
cmp
push
pop
push
xlat
in
cld
sub
mov
sbb
bnd
push
pop
add
repnz
or
mov
repz
test
enter
inc
mov
in
push
loopne
mov
cli
popa
into
call
xor
shrb
inc
jmp
or
dec
mov
pmulhuw
push
lea
add
jmp
sub
add
pushf
or
push
pop
repz
fcmovnbe
sti
lds
pop
pop
std
adc
xabort
ljmp
mov
stos
cmp
jmp
scas
mov
add
sub
js
mov
cltd
imul
push
aam
sbb
mov
mov
add
push
sbb
and
imul
imulb
mov
jge
or
fwait
mov
and
mov
sbb
cwtl
jae
ljmp
test
push
or
xchg
bound
sbb
imul
pop
das
mov
jbe
ja
push
pop
xchg
and
add
repz
in
jl
popa
push
lret
cmpsl
mov
pop
bnd
scas
bnd
mov
test
xor
mov
pop
scas
inc
rcrb
outsl
inc
scas
adc
mov
xchg
add
neg
pusha
jl
xchg
push
and
mov
sub
rcrb
xchg
pop
cmp
mov
sub
pop
jmp
push
sahf
lahf
inc
or
fs
mov
lret
orb
mov
pop
xchg
push
repnz
push
inc
loopne
loop
aas
sbb
or
out
scas
sub
sub
mov
cmpb
out
int3
stos
pop
inc
in
clc
inc
hlt
ljmp
ljmp
jae
mov
je
mov
add
jg
mov
inc
cmc
test
ljmp
mov
xor
insl
push
cli
jecxz
xlat
mov
nop
repnz
orl
adc
sub
pop
scas
mov
pop
mov
scas
clc
push
dec
mov
gs
arpl
imul
xchg
jno
std
cli
fmul
mov
or
mov
push
scas
out
fistpl
push
mov
xlat
adc
add
popa
pop
mov
sub
mov
fnstsw
movsl
inc
enter
adc
mov
jmp
cmp
es
dec
imul
stos
adc
mov
test
mov
cmpsl
push
dec
dec
outsl
jg
add
int
cs
ljmp
and
xchg
neg
lret
pop
mov
cmp
test
data16
mov
jmp
push
arpl
mov
jne
push
xor
adc
mov
mov
inc
xlat
mov
add
stos
and
dec
sub
shr
xor
add
and
sub
loop
and
push
sbb
add
rcrb
pop
sub
or
or
inc
lods
roll
test
popf
outsb
add
neg
dec
adc
sbb
cmp
std
fucomip
add
lds
popl
add
jmp
cmp
stc
adc
add
or
mov
jle
nop
not
and
or
dec
pop
movsl
dec
int3
jns
jo
rcll
pusha
in
add
inc
push
in
jecxz
dec
jmp
out
mov
mov
int3
cmpsb
imul
mov
jg
loopne
dec
loopne
and
dec
sub
mov
outsb
add
out
or
scas
adc
jno
sub
cmp
rcpps
das
or
jmp
fadd
repnz
popl
mov
xor
pop
and
push
pop
cmpsl
mov
or
jmp
push
orb
mov
cmp
jbe
add
jae
loop
or
push
jbe
add
out
jmp
daa
stc
cmp
push
and
leave
jmp
daa
push
fcomi
mov
inc
and
pop
mov
in
pop
jg
xor
or
adc
setp
lret
jmp
pop
nop
add
pop
pop
cld
fwait
pop
icebp
imul
push
jne
sub
add
sahf
pushw
pop
pop
testl
std
xchg
pop
lods
jno
xor
cld
lods
leave
out
addr16
jge
inc
and
pop
cld
cs
lods
jle
rcll
add
xor
and
test
fcoml
outsl
sub
inc
cltd
orb
cmp
out
pop
ret
xor
or
mov
or
push
sbb
add
jmp
ja
insb
xor
orl
loopne
push
fistl
lods
or
jle
repz
adc
les
ret
sti
loop
push
mov
jl
mov
inc
or
and
mov
cmp
sbb
shl
add
lahf
les
ljmp
aam
xor
pop
add
loop
push
mov
popf
adc
and
in
dec
pop
stos
aaa
inc
add
pop
repnz
pop
dec
push
or
push
sub
xor
add
mov
scas
cmp
pop
adc
push
jecxz
test
test
add
ret
inc
stos
mov
dec
aam
jae
push
leave
or
inc
or
rcr
add
jp
jmp
filds
in
ljmp
rcrl
test
pop
in
call
and
out
mov
lahf
mov
movsb
repz
mov
mov
rcll
mov
push
lcall
mov
push
out
popf
jg
arpl
or
out
push
mov
push
mov
xchg
sti
inc
inc
or
in
lock
cmp
mov
stos
sahf
mov
push
push
jmp
cltd
sbb
fstl
inc
sub
sbbl
push
push
and
int
aas
cmpxchg
sbb
or
lock
sub
pop
sub
push
add
add
dec
mov
mov
push
lret
push
cli
mov
and
sbbb
push
mov
sarw
mov
mov
es
mov
pop
adc
jae
arpl
rolb
mov
push
jmp
aad
fwait
ret
dec
popf
lahf
mov
addr16
imul
xor
cld
mov
stc
lret
in
add
jno
adc
in
xchg
add
pop
mov
push
ret
xchg
push
push
jo
shr
cmp
mov
jecxz
mov
ds
xor
sbb
adc
test
bound
imul
sarl
inc
loope
dec
arpl
xlat
add
lahf
xchg
inc
dec
ljmp
dec
inc
inc
pop
subb
add
jmp
dec
pop
testl
inc
pusha
pop
jbe
fdivrs
rclb
cmp
mov
mov
roll
sbb
mov
sbb
add
les
lea
sbb
stos
lret
sbb
ret
lock
fcoms
pop
lcall
and
push
scas
add
inc
adc
and
rorb
jg
mov
sub
sahf
test
xor
jno
adc
sub
mov
jp
xor
divb
pop
jmp
pop
adc
xchg
jmp
ret
push
ret
push
sbb
jmp
mov
lods
aam
sub
pop
dec
mov
inc
dec
xchg
add
stos
cmp
lds
ja
aas
push
jmp
or
xchg
aad
imul
adc
or
jle
jb
and
and
inc
loopne,pt
imul
xchg
xor
ds
push
aas
inc
jne
dec
popa
sub
cld
mov
subl
sbb
repnz
pop
testl
out
fistps
stos
fimull
rol
push
fstpl
es
or
dec
add
imul
jb
js
ljmp
and
pusha
add
clc
mov
rcrl
in
outsl
mov
adc
testl
mov
add
cmp
pop
imull
insb
xor
test
pop
pop
out
xor
ficompl
lret
out
in
subb
je
jae
push
jmp
mov
jb
cltd
cmp
outsb
ret
jl
and
push
inc
mov
pusha
mull
fadd
and
inc
xchg
sbb
sbb
or
adc
dec
xchg
mov
dec
scas
test
mov
jge
dec
inc
pop
inc
cltd
mov
pop
xchg
cltd
loope
out
xor
adc
pop
in
insl
les
into
and
fiadds
push
out
jge
xor
pushf
daa
popa
out
icebp
icebp
mov
test
jge
mov
mov
sub
push
mov
jmp
mov
mov
push
cwtl
xchg
dec
sti
jmp
mov
repnz
enter
leave
pop
push
gs
fcomps
xor
dec
cmp
adc
dec
jl
add
addr16
dec
decb
adc
sbb
mov
xor
inc
inc
push
ja
inc
pop
xchg
lock
mov
push
and
xor
push
bound
sbb
xorb
dec
push
inc
mov
xchg
shlb
mov
lods
jns
xorb
ficomps
add
mov
int3
add
es
filds
into
pop
sub
adc
xor
mov
lock
mov
cmp
cmp
repnz
sbb
jecxz
clc
call
sahf
mov
pop
and
push
in
fcomi
stos
push
and
push
pop
pop
mov
add
adc
std
push
inc
sub
imul
jl
adc
or
sub
pop
inc
jmp
shl
shl
adc
sub
jmp
nop
mov
add
dec
lods
mov
repz
mov
pushf
shlb
das
mov
jbe
divb
mov
aam
or
mov
push
dec
push
mov
cld
push
jmp
add
mov
or
ja
hlt
call
scas
repz
vphadduwd
enter
and
mov
sahf
aas
aaa
and
and
cmp
sub
add
adc
stos
fists
mov
xor
stos
adc
orb
fnsave
add
aas
add
sbb
addr16
jmp
data16
pop
push
mov
xchg
mov
mov
add
jmp
jmp
push
and
cs
add
push
cwtl
lock
adc
mov
and
xchg
mov
or
cmp
xchg
pushf
mov
iret
dec
ret
push
jmp
cmp
pop
dec
enter
je
pop
adc
pop
sbb
mov
jmp
push
fbld
and
mov
mov
dec
push
xchg
pop
xchg
test
orb
push
sbb
mov
iret
xor
lods
cmp
pushf
inc
sbb
and
inc
or
and
lea
mov
faddl
jbe
adc
cmpl
imul
add
insl
add
jp
je
jne
mov
xchg
hlt
and
add
xor
stos
clc
or
jmp
cmp
adc
cmovl
or
lods
testb
sub
push
pusha
sbb
std
jbe
sub
xor
push
xchg
add
out
fisubrl
pop
test
inc
test
push
and
cmp
fisttpl
imul
and
inc
and
jo
fdivrl
push
clc
xorb
ja
sarb
inc
mov
clc
lea
pop
test
cld
fucom
sub
leave
or
loope
inc
jae
in
add
aaa
imul
sub
das
fbld
adc
repnz
mov
xor
sbb
push
dec
int3
in
jmp
decl
pop
hlt
and
ja
pop
sub
or
add
std
out
ljmp
dec
aaa
test
and
or
cld
jmp
ljmp
pop
daa
aad
shlb
rcrb
ljmp
add
add
lret
push
pop
or
mov
mov
bound
add
jmp
jge
aad
mov
jmp
mov
mov
mov
lahf
inc
stos
mov
loope
std
dec
nop
mov
mov
adc
lahf
rolb
sub
and
ljmp
inc
orb
fs
jbe
sbbl
pop
or
jb
mov
fincstp
mov
jne
shll
xlat
cwtl
xor
cmp
adc
fisubrl
in
imul
pop
pop
sub
sbb
notl
lods
pop
jp
pop
pop
cmpsl
xlat
xchg
aad
pop
mov
fiadds
out
pop
push
loopne
or
aad
call
pop
mov
pusha
and
imul
adcb
push
inc
in
push
scas
add
or
das
shr
inc
testb
dec
repnz
movsl
mov
fcoms
add
fs
scas
and
leave
mov
ficomps
push
dec
sub
mov
xor
scas
adc
cmc
xchg
cmp
dec
pop
repnz
out
or
sub
sub
mov
push
pop
cwtl
adc
pop
pusha
clc
pop
jge
and
mov
or
sbb
pop
jmp
pop
pop
loopne
inc
xor
pusha
add
adc
addr16
test
lahf
push
aaa
movsb
movsb
add
add
push
rcrb
and
and
daa
jmp
mov
pop
and
mov
stos
jmp
dec
in
xchg
std
xor
mov
out
push
pop
mov
repz
sbb
or
inc
daa
or
enter
pushf
xor
pop
xor
push
inc
test
jo
mov
adc
loop
push
cwtl
sub
pop
dec
insl
pop
cmp
nop
add
ds
pop
jmp
add
pop
shl
subb
dec
sub
jmp
jle
mov
add
shr
lock
jne
lock
aad
xchg
or
mov
mov
sub
xchg
ret
pop
pop
stos
pusha
xchg
testb
inc
mov
loope
jle
subb
adc
and
jg
mov
add
out
add
add
nop
and
mov
mov
nop
push
js
mov
sbbb
rcr
imul
mov
xor
push
add
scas
repnz
push
sub
ror
xorl
shll
movntps
and
and
arpl
mov
push
sub
into
out
jns
jmp
test
sub
adc
jb
xor
fstps
fs
and
cmp
movb
sbb
popa
lcall
ds
clc
add
stos
int3
les
inc
outsb
push
sbb
rol
add
test
or
mov
mov
mov
dec
xor
sbb
shll
ret
in
mov
fcoms
pop
dec
jg
js
adc
mov
js
inc
negl
stos
dec
loope
sbb
outsb
pop
and
movsl
lods
lret
mov
push
cmpsb
imul
xchg
xchg
jmp
addb
adc
into
pop
negl
mov
icebp
and
cmp
stos
fs
out
sbb
leave
and
xchg
in
jle
push
jno
hlt
mov
pop
shll
dec
or
push
adc
fcomps
mov
pop
lock
and
sahf
add
adc
xorb
push
jle
test
adc
cmp
jae
dec
mov
adc
add
mov
or
mov
lods
dec
shrl
pop
push
ss
push
push
add
adc
xchg
fs
xor
popl
lret
xor
leave
jl
jb
sti
stos
xchg
jns
xor
jb
jle
daa
ret
adc
cli
lds
mov
pop
cmpsb
adc
jbe
js
adc
loope
and
mov
pop
and
jmp
push
mov
xchg
cli
xchg
daa
jmp
and
sarl
pop
movsl
popf
mov
jg
sub
hlt
lret
xor
jl
sbb
scas
pop
movsb
cmp
into
shl
add
scas
add
cwtl
cmp
cmp
cli
xlat
jmp
mov
sub
out
jg
and
in
imul
call
or
pusha
sub
rcrl
dec
sub
shrl
sbb
jo
cwtl
jo
mov
mov
pop
sar
test
mov
inc
adc
cld
and
sbb
jae
xchg
mov
jge
jg
inc
pop
inc
call
sahf
in
sahf
dec
aam
aaa
mov
cwtl
jp
xchg
sahf
inc
cwtl
test
stc
inc
fstpl
push
xor
inc
mov
rolb
xor
and
test
jmp
lods
push
into
or
xor
add
addb
add
out
pop
add
xor
cmpsl
mov
push
jo
cmp
jae
movsb
dec
push
sbb
insl
or
dec
jbe
imul
add
push
aaa
push
jo
sbb
mov
test
pop
lods
insl
xchg
cltd
dec
jp
aad
dec
in
mov
rorl
loop
sarl
sub
adc
xor
mov
aad
int3
loop
mov
jmp
lods
xlat
hlt
jbe
sahf
sub
loop
mov
sbb
mov
push
loop
jge
shl
push
inc
loopne
add
sbb
dec
cmp
cmp
nop
out
mov
sbb
pop
out
inc
mov
daa
push
fildll
jp
jle
inc
mov
stos
pusha
lock
lahf
push
mov
out
addr16
add
mov
push
hlt
stos
lahf
pop
xchg
xorb
popf
ret
or
or
push
mov
out
or
out
pop
sub
or
mov
cwtl
or
or
jmp
push
cli
ds
pop
pusha
negb
fnsave
loop
jmp
push
out
mov
mov
push
mov
fnsave
dec
pop
mov
daa
sub
aam
ds
pop
inc
rclb
push
xchg
cs
xchg
xor
rcrb
movsb
or
lahf
notb
push
mov
add
xor
imul
fcmovu
into
push
jmp
mov
inc
push
repnz
ficompl
sbb
jae
adcl
add
in
shr
jmp
cltd
push
jmp
lds
add
dec
lods
and
dec
adc
sti
add
pushf
gs
xor
push
pop
sub
dec
dec
clc
lods
dec
clc
sahf
mov
push
roll
push
mov
cmp
mov
push
adc
mov
fistl
loope
add
dec
sub
or
imul
or
sahf
in
outsl
es
std
adc
scas
xchg
jne
push
xchg
stc
in
mov
shlb
add
pop
xchg
inc
iret
cld
lock
pop
pop
mov
cmp
mov
mov
imul
aam
xchg
orl
inc
sub
pop
sub
imul
lahf
test
xchg
decl
mov
push
jmp
shll
add
sub
sbb
or
mov
add
mov
mov
mov
repz
sbb
push
cwtl
in
dec
push
lea
outsb
in
push
test
ret
lods
cmp
idivb
pop
fbld
imul
pop
mov
or
idivb
jp
out
push
xor
jno
ficoms
gs
test
cmp
outsl
push
pop
push
ret
aad
lods
jge
push
pop
jmp
or
jle
fisttps
xor
push
loopne
xor
sti
pop
and
xor
hlt
dec
lock
mov
mov
mov
cs
pusha
and
pop
push
or
add
mov
ja
jno
sahf
add
mov
iret
pop
mov
aaa
sub
loopne
arpl
std
das
bound
cld
js
jge
cmpb
addb
das
pop
add
or
push
in
fisttpll
fwait
lret
inc
cmc
scas
ret
insb
in
stos
std
test
mov
adc
adc
jne
incb
in
dec
jl
sbb
sub
add
jmp
add
loop
pop
fbstp
ret
pop
outsl
dec
lret
in
test
movsl
jmp
popl
pop
lock
mov
pop
or
pop
pop
add
and
pop
push
mov
ja
jmp
push
mov
mov
or
or
mov
xor
cmc
pop
add
jb
bound
je
add
adc
add
pop
dec
dec
loopne
jecxz
adc
adc
xchg
ret
aam
jmp
cmc
dec
stc
dec
push
divl
cli
sub
xchg
cmpsb
cs
mov
jne
hlt
mov
dec
sbb
arpl
add
and
lock
fildll
xor
pop
inc
fs
dec
enter
in
out
xchg
xchg
sbb
pop
mov
daa
mov
and
jmp
push
push
sbb
repnz
cwtl
inc
push
cmp
cmp
xchg
and
mov
lock
sub
jge
xor
rclw
sub
dec
dec
xchg
xor
and
jg
addl
cmc
xacquire
stos
and
push
push
call
cs
push
push
pusha
mov
sarb
test
mov
cli
jo
jmp
mov
cwtl
push
dec
push
push
cmp
mov
fmul
add
in
xchg
in
push
mov
add
fldl2e
cmpsl
js
and
or
int3
sub
add
out
aam
or
sbb
imul
imul
adc
pop
xor
loopne
mov
pop
jl
cld
mov
adc
lea
stos
enter
push
xchg
jne
pop
push
aam
out
add
pop
sub
cld
add
jg
jae
add
cmp
push
xchg
test
pop
call
jmp
and
or
test
inc
fdivl
xor
pop
les
loope
sub
dec
xchg
inc
push
jge
xchg
lock
pop
mov
lahf
mov
and
aad
pop
gs
faddp
lds
in
in
pop
add
movsl
mov
sti
mov
xor
popf
loopne
xchg
repz
push
inc
pop
ficoms
in
push
sahf
add
arpl
mulb
jae
shl
pop
mov
iret
rol
pop
xor
sub
fists
mov
mov
mov
xchg
jo
adcl
adc
or
jmp
pop
inc
pop
adc
test
or
add
mov
mov
aam
mov
sub
scas
mov
in
mov
pop
es
mov
push
dec
lret
and
fnstsw
sub
mov
shrl
jmp
sub
and
fldenv
add
movsl
and
inc
xor
fsubrs
loope
add
jmp
xorb
loopne
inc
pop
mov
testb
call
cmp
fsubl
sub
movsb
adc
or
lret
arpl
lds
test
push
jmp
sub
xlat
push
push
pop
pop
inc
lea
mov
in
adcb
dec
add
jmp
repnz
dec
daa
pop
stc
fdivrs
add
popa
inc
lds
inc
pop
loopne
fisttpll
xlat
jae
movsb
negl
inc
push
mov
push
leave
or
dec
lea
sub
pop
push
repnz
sbb
mov
cmp
or
inc
popf
push
or
outsb
pop
add
add
sbb
add
inc
xorl
adc
xchg
push
jp
data16
fildl
cld
xchg
fs
dec
push
mov
imul
cwtl
or
inc
add
xor
sub
mov
pop
push
and
add
out
dec
or
xor
outsl
or
leave
enter
adc
outsb
cmpsb
xchg
cmc
mov
add
xor
fisubrl
mov
push
cmp
scas
and
sar
xor
sub
fs
clc
lea
xchg
repnz
and
mov
jns
pop
xchg
mov
in
arpl
fnstcw
das
gs
add
dec
dec
rorl
insb
add
or
int3
add
mov
push
mov
mov
rolb
pop
jmp
xor
mov
add
xchg
dec
pop
or
test
mulb
icebp
push
cmp
xor
pop
push
or
pop
pop
stos
sub
jl
sbb
adc
sbbb
icebp
pop
sbb
or
push
dec
popa
nop
jne
xchg
outsb
push
inc
inc
inc
gs
pop
add
pop
xchg
test
xor
fs
fdivs
xchg
sarb
and
sarb
pop
popa
loope
dec
adc
and
sub
rclb
cmpsb
add
call
cmc
testb
mov
dec
or
aam
inc
imul
jae
test
pop
mov
push
dec
add
clc
jmp
roll
push
and
not
add
mov
jnp
jbe
loope
xor
pop
lods
mov
adc
imul
jle
add
add
out
cmp
lock
leave
testb
or
loop
fstl
mov
pushw
or
cwtl
movsl
add
inc
sbb
sub
pop
sub
cmovo
test
in
push
mov
neg
jno
and
pop
sub
stos
and
vsubps
xchg
xchg
and
xor
lea
and
sbb
dec
xchg
push
pop
jecxz
or
stc
in
jno
jg
fimuls
mov
scas
adc
cs
mov
enter
mov
push
add
mov
call
sbb
in
imul
inc
inc
inc
in
mov
mov
jle
popa
pop
rcrl
dec
dec
jne
out
push
int3
insl
rorl
shlb
sbb
pop
dec
mov
or
pop
test
aas
mov
push
xor
push
leave
push
js
mov
repz
inc
push
adcb
push
sbb
jne
sub
testb
test
imull
inc
xor
jmp
mov
or
sbb
xchg
int3
mov
add
adc
xchg
mov
or
das
jno
daa
xlat
movsb
mov
push
jno
imul
shrl
ret
test
imul
punpckhbw
cli
xor
lds
sub
cmp
sbb
outsl
cmc
jge
or
mov
incl
jmp
xorb
arpl
cmpl
push
sti
inc
or
jmp
xor
gs
fsubrl
shll
mov
xor
mov
rcl
enter
lret
lods
cmpb
pop
stc
out
jl
inc
and
push
pop
pop
jb
mov
pop
xor
push
leave
ret
xchg
cmpl
sbb
das
inc
jmp
xor
hlt
int3
or
xchg
loopne
xor
add
vprotw
adc
mov
jge
pop
in
push
movsb
or
ret
or
addr16
ret
imul
adc
pusha
dec
shlb
jmp
and
rolb
xor
mov
dec
jmp
mov
pop
in
pop
cmp
jb
pop
pop
and
xor
jns
cli
pusha
and
jecxz
out
pushf
dec
xor
in
test
or
mov
mov
push
add
sub
mov
adc
inc
or
jo
or
nop
cwtl
mov
add
shrl
mov
push
icebp
std
scas
mov
inc
xchg
mov
lret
push
stos
push
push
cli
inc
fdivrs
push
cmp
adc
xor
pop
lock
cmpsl
sub
mov
mov
adc
inc
repz
pop
decl
push
and
dec
mov
addl
lock
adc
lock
loop
lret
add
and
ret
or
or
bound
shlb
and
sbb
and
dec
jnp
add
inc
sbb
mov
mov
ret
sbb
pusha
out
xor
int
sahf
sbb
xorl
sub
roll
loope
jecxz
movsl
mov
xor
mov
int3
or
aad
stos
cmpsl
fimuls
shll
push
xor
mov
loop
xchg
stos
int
mov
cmp
push
pop
mov
insb
push
cmp
xchg
jns
ficoms
jmp
mov
xor
dec
outsb
lcall
inc
fwait
adc
btc
pop
push
xor
or
repz
add
jnp,pn
xchg
sub
dec
add
mov
jb
add
popl
jmp
mov
or
ds
xor
add
sub
or
sbb
pminsw
sarl
xor
xchg
mov
add
jne
mov
rorl
cmpsb
fs
jmp
roll
adc
aas
push
jmp
lock
add
dec
cli
cmp
push
aaa
cli
aas
or
jecxz
fcmovnb
sbb
insl
adc
xor
push
mov
xchg
jno
daa
lahf
inc
jno
out
mov
mov
sbb
sub
jo
xor
in
add
imulb
ljmp
out
cld
test
clc
jmp
popa
pop
cli
pop
sub
mov
or
adc
mov
sbb
push
pop
iret
psubsb
pop
dec
push
imulb
daa
pop
pop
aad
testb
inc
icebp
push
xor
ret
lret
rcl
andb
jg
jne
pop
pop
sbb
inc
ret
out
sub
sti
and
test
out
cltd
inc
sbb
dec
push
cwtl
inc
rcrl
pop
push
or
popa
daa
and
or
push
push
pop
or
or
or
push
xchg
fadd
outsl
test
mov
xchg
pop
add
pop
pusha
adc
pop
das
std
push
jmp
sub
push
addr16
mov
pop
jp
lock
stc
push
adc
sbb
jb
jne
nop
insb
lahf
mov
test
fdivs
jne
add
adc
loop
cltd
cmp
xchg
dec
or
fildll
es
fstps
jle
and
ljmp
int3
and
fnstcw
sahf
push
mov
pop
mov
fstpl
pop
dec
push
mov
out
xorb
xor
fisttpl
icebp
cld
cmp
test
inc
add
xor
rclb
lcall
pop
fbld
and
gs
out
cmc
pop
jae
or
push
pop
sub
add
mov
dec
pusha
pop
xchg
popf
sti
xchg
xor
shr
stc
pop
scas
push
xchg
sub
and
and
push
call
xchg
xor
ret
push
add
jb
xor
loopne
inc
dec
push
aaa
shl
xor
push
mov
dec
icebp
lods
jno
pop
dec
loop
lret
push
stos
hlt
push
lcall
addr16
in
scas
in
inc
lock
ret
repz
sbbl
je
notb
bound
xchg
aad
inc
and
push
pop
jmp
cwtl
jmp
jmp
fdivp
xor
jmp
movsb
in
add
inc
scas
dec
test
lods
mov
mov
dec
pop
cmp
jno
leave
mov
push
adc
stos
rcrb
sbb
sbb
push
popa
jmp
fdivl
insb
pusha
adcl
inc
pop
pop
mov
sub
jg
mov
jmp
cmp
fcomps
inc
mov
movsl
fwait
adc
add
enter
mov
lret
lea
push
or
jl
adc
dec
jecxz
pop
and
in
add
dec
cmp
loope
adc
pop
inc
pop
jmp
adc
push
xlat
mov
xor
add
out
pop
push
pop
pop
fsubrs
out
and
pop
or
mov
dec
mov
rolb
jle
push
inc
dec
jmp
add
mov
cwtl
lds
mov
pop
icebp
cmpsl
dec
pusha
adc
rcr
and
mov
and
sub
mov
std
or
sbbb
enter
cmpsb
je
test
clc
or
push
lret
pop
add
pop
enter
cs
dec
int
outsb
loop
pop
adc
in
bswap
or
test
sbb
push
insb
je
jmp
mov
push
sti
daa
popa
out
push
xor
xchg
stos
adc
pop
or
xor
ljmp
pusha
jge
and
mov
ss
cmpb
push
or
fiadds
dec
rorl
popa
rorb
outsb
mov
je
jnp
mov
insb
mov
repz
jne
ror
popf
enter
push
outsl
xor
decb
ret
mov
cmp
mov
scas
pop
cmpl
jg
and
or
dec
xchg
xchg
lcall
popf
test
dec
or
and
out
mov
pop
dec
add
ja
xchg
sub
jmp
in
jb
cmp
orb
jg
out
je
cwtl
daa
pop
xchg
in
decb
lahf
fdivl
sahf
cmpb
xor
mov
lods
mov
loope
lock
pop
mov
cmp
xlat
xchg
ret
fsubrl
jmp
lods
das
and
push
add
mov
sahf
out
repnz
mov
mov
push
add
jmp
subb
push
pop
ret
inc
subb
mov
sub
add
pop
daa
push
jmp
add
nop
xchg
sbbl
add
adc
daa
dec
fcmovne
ret
popa
push
test
cmp
pop
or
shlb
dec
jbe
rorl
mov
add
jne
xchg
lret
icebp
movsb
stos
mov
cmp
lcall
cs
test
aam
inc
xchg
jbe
add
jns
sub
cmpsb
adc
jnp
pop
inc
add
or
loop
dec
jno
orl
popa
or
cmpb
dec
sub
pusha
insl
test
add
sbb
push
faddl
add
add
ret
inc
lcall
push
sbb
imul
je
bound
add
pop
lods
pop
adc
xchg
inc
jnp
scas
bound
cmp
sub
out
lea
jb
adc
xor
dec
sub
jb
ja
jo
mov
in
popa
inc
or
out
loop
pop
sub
mov
or
push
cli
lret
pop
fsubrl
or
add
out
rcll
push
inc
je
add
sbb
dec
out
xor
mov
or
pop
mov
es
shr
jge
adc
pop
cld
loope
inc
mov
push
push
mov
pop
ret
add
push
dec
adc
repz
xor
inc
mov
lods
lcall
mov
dec
decl
mov
push
mov
mov
imulb
push
sub
cmp
jle
pop
pop
loopne
rcrl
fwait
lahf
jb
sub
or
or
inc
jno
pusha
loop
and
mov
mov
add
test
je
mov
clc
sub
data16
xor
xorb
jmp
dec
xchg
ret
ja
test
jg
add
inc
dec
insl
daa
sub
pop
popa
fnsave
insl
pop
aas
pop
fsubrp
je
and
popf
ret
xor
push
pop
pop
xor
fisubrs
shrb
xchg
scas
imul
push
mov
xor
lcall
cwtl
dec
lods
punpckhbw
data16
pusha
and
jo
add
stos
lret
int3
adc
nop
or
loopne
aad
xor
inc
add
out
lahf
cli
in
loopne
jp
dec
add
sub
push
mov
shl
sub
rcrb
xor
es
iret
jne
xchg
mov
push
mov
mov
popf
xor
adc
leave
out
push
cld
lods
fucomp
cs
out
pop
mov
add
sbb
lret
push
xor
or
dec
lea
js
xchg
push
leave
icebp
add
jbe
push
lahf
pop
jge
add
adc
ret
cmc
pusha
lods
or
faddl
insb
sbb
out
add
lea
xchg
adc
mov
insb
loop
sbb
push
dec
push
aad
mov
lods
pop
in
push
or
mov
dec
clc
mov
add
pop
or
lcall
push
jge
mov
mov
xor
mov
mov
or
mull
xor
nop
or
stc
and
sbb
movsb
or
push
andb
je
pusha
adc
push
scas
icebp
add
or
shl
dec
jmp
adc
ficoml
js
mov
inc
push
jp,pn
imull
jmp
jb
push
je
add
insb
je
jp
test
xchg
mov
and
rclb
stc
dec
scas
mov
insb
repz
gs
push
jmp
jo
adc
pop
and
or
call
insl
gs
inc
jmp
in
inc
lods
popf
pop
and
mov
jecxz
dec
out
mov
aaa
lret
fisttps
stos
add
lcall
lea
inc
cs
test
add
inc
test
bswap
fs
ret
shl
add
mov
pop
rorl
sbb
and
ljmp
mov
adc
inc
xor
in
mov
push
popa
inc
push
add
sub
jle
ds
and
and
mov
leave
aad
out
xchg
jp
xor
ret
jns
das
mov
popf
clc
xorb
sub
push
cmp
or
mov
jae
xor
pop
in
pop
int3
sub
jmp
mov
mov
jecxz
xchg
or
mov
ret
jle
call
adc
pop
into
in
xchg
sub
pop
pop
pusha
mov
sbb
leave
dec
dec
cmp
sub
int
hlt
pop
addr16
mov
sub
fists
pop
push
sub
ljmp
inc
adc
clc
sub
leave
or
fnstenv
bnd
mov
add
push
daa
jg
scas
pop
mov
jnp
add
sub
sub
out
push
dec
or
jge
lcall
mov
cs
fs
es
mov
jno
pusha
push
jmp
xor
icebp
aam
add
fs
fiaddl
pop
push
into
outsb
sub
jo
sub
in
inc
mov
inc
jo
pop
push
rol
sbb
addl
jmp
sub
mov
adc
pop
lret
pop
shr
add
lcall
cmpb
add
gs
test
clc
cld
inc
or
jmp
jae
cld
pop
icebp
pop
dec
add
repz
mov
xor
fs
shr
add
stos
sarl
mov
cwtl
pushw
inc
dec
jb
sbb
pop
pop
adc
push
fldcw
push
ret
incb
hlt
add
mov
sbb
cs
mov
das
pusha
pop
pop
jg
or
sbb
insb
cmp
sub
daa
pop
or
lea
cmp
mov
rclb
inc
pusha
cmp
bound
sub
or
xor
xor
adc
xchg
or
jne
filds
jno
ja
shlb
jl
mov
mov
push
dec
cli
test
mov
bnd
push
lcall
add
stos
imulb
adc
mov
mov
inc
inc
xor
xchg
add
sub
push
notl
dec
cli
xchg
fistps
lahf
fwait
test
add
push
jmp
nopl
jbe
clc
out
adc
pop
push
in
in
or
fstl
or
fldt
ret
sub
stc
jmp
in
or
sbb
add
sub
lds
aad
shr
std
or
push
nop
jge
push
cld
inc
add
dec
xchg
jo
pop
dec
imul
movsl
sbb
lods
clc
test
inc
mov
adc
sti
cmp
jo
mov
aam
push
into
out
inc
in
cld
icebp
cmp
or
pop
pop
jo
mov
or
pushf
push
pop
loop
sub
sub
rclb
mov
sub
icebp
pop
outsb
or
adc
mov
xor
ret
mov
or
ja
in
test
pusha
sbb
rcrl
push
and
adc
lds
xor
call
cmp
pop
adc
add
shlb
orw
jg
btr
je
clc
icebp
dec
mov
push
inc
jae
fmull
xor
cmp
lea
hlt
xor
lds
push
call
ret
xchg
add
ret
mov
imul
jo
arpl
stos
fsubrs
ret
rorb
add
and
sbb
sub
sbb
mov
jl
sbb
or
mov
add
outsl
rclb
movsl
iret
lahf
inc
pop
adc
sub
orb
sub
push
iret
loopne
pop
mov
nop
or
icebp
push
add
lahf
dec
pop
mov
cmp
mov
add
int3
in
adc
xchg
inc
push
test
int
cpuid
dec
xor
inc
scas
int3
popa
loopne
movsl
ss
seto
or
ljmp
push
adc
jno
ret
add
sub
push
xchg
xorl
out
push
cmpsb
imul
idivl
data16
sub
pop
testb
jmp
ljmp
lds
adc
roll
bound
test
popf
jne
xchg
fldcw
add
arpl
mov
dec
call
inc
iret
xchg
jne
cmp
hlt
lahf
push
pushf
cmp
loop
jns
in
push
into
shlb
jbe
jle
out
add
icebp
cmp
jo
mov
pop
mov
scas
mov
xor
call
in
stc
and
cmc
add
js
test
cmp
repz
jg
fiadds
aas
nop
pop
out
or
mov
adc
mov
stc
loopne
dec
push
add
pop
cmpb
jne
add
ret
shlb
loope
push
aam
jo
or
push
add
mov
test
push
fidivs
ret
in
xor
sub
fs
cmp
pop
mov
add
das
in
mov
add
leave
cli
cs
mov
add
jb
sub
lahf
popa
push
mov
mov
je
xchg
std
mov
sub
popa
in
add
cmp
insl
int3
push
dec
addr16
jae
and
add
xchg
sbb
sbb
iret
aam
addb
sbb
xor
xchg
add
fidivrl
rolb
in
pop
sub
lods
out
sub
mov
add
push
das
jo
mov
pop
inc
daa
pop
imul
roll
xchg
fidivrl
movsl
xchg
mov
dec
lret
mov
orl
aas
les
xchg
outsb
xchg
jne
adc
out
stc
enter
mov
xor
jno
addb
je
pop
shlb
adc
pop
js
les
add
aad
rep
pushf
rolb
loop
in
shll
add
sbb
hlt
cmp
das
inc
repnz
xchg
inc
aas
out
aad
mov
mov
and
xchg
stc
push
mov
scas
nop
sub
pop
pop
sti
adc
or
or
jmp
int3
mov
adc
jns
loop
aad
add
cld
and
in
mov
fsubr
iret
nop
add
adc
test
in
cld
jg
add
fisubl
idivl
or
popa
or
xchg
or
sar
bound
fs
and
mov
clc
sbb
ror
lods
cmp
mov
das
add
mov
incl
movsb
sub
cs
subl
add
mov
ret
lahf
shlb
jae
push
shrl
stc
cmp
pusha
cmpl
mov
add
jg
jle
push
push
fstps
outsl
ds
in
add
loopne
push
cmp
adc
sub
aas
push
sbb
inc
rorl
adc
cmpsb
out
shlb
xor
push
mov
mov
ret
sahf
mov
lret
dec
add
sub
xor
xchg
pop
add
ja
out
jle
pop
jno
add
xlat
outsb
add
mov
dec
or
pop
rcrb
add
push
arpl
lea
mov
mov
es
ss
push
push
sbb
xchg
iret
loopne
add
push
xchg
into
add
sub
test
popa
inc
subl
pusha
out
add
mov
xchg
js
ret
inc
mov
int3
add
in
lret
inc
lcall
sarb
fwait
test
jl
mov
faddl
jmp
dec
negl
inc
arpl
add
cmp
pop
imul
in
xchg
rclb
mov
add
push
sarb
jl
aas
add
jmp
xchg
lea
inc
xchg
push
dec
cmp
xchg
out
cld
or
test
push
jmp
sbb
sti
adc
scas
inc
mov
push
add
mov
fmul
cmp
xchg
adc
xchg
add
mov
movb
lret
push
xlat
les
add
push
neg
cli
flds
add
or
icebp
jae
sahf
cmp
cmp
lret
xchg
inc
or
mov
into
add
in
je
or
andl
push
adc
rcrl
push
les
push
sbb
dec
add
and
mov
jns
jno
es
add
in
pop
inc
pop
xlat
add
in
or
mov
add
imul
xlat
add
js
out
sub
add
aam
in
subl
out
je
repnz
pop
pop
dec
mov
subl
enter
add
loop
arpl
or
clc
add
insl
imul
test
shll
inc
arpl
addb
shll
std
subb
rcr
stos
xor
add
cwtl
mov
add
dec
movsb
fwait
aas
imul
lea
adcb
sbb
sbb
movsl
popf
fildll
data16
loope
cmp
push
push
xor
aaa
adc
int3
jno
or
sbb
sbb
cmpl
test
and
inc
inc
in
add
les
add
pushf
iret
and
lods
ret
jo
add
sub
movsl
ja
lret
xchg
jo
add
daa
or
pop
mov
add
add
xor
push
mov
js
repz
sub
jae
frstor
lcall
inc
push
jns
jmp
sbb
incb
push
cmp
movsb
int3
mov
ret
add
and
call
add
int3
mov
lods
add
push
notl
xchg
mov
pop
add
insl
adc
in
ss
pop
jne
dec
cs
adc
pop
add
dec
add
pop
movsb
jbe
jp
jmp
sbb
testb
movl
popa
in
pop
add
loop
sub
pop
add
mov
cmp
and
rcr
xor
iret
mov
pop
fisubrs
sldt
push
insl
mov
cmp
push
cmpxchg
out
and
xor
xor
out
cmp
mov
sub
add
loope
adc
out
cmp
sbb
sbb
xchg
je
roll
mov
cs
into
mov
sub
push
pop
sarl
pop
imul
add
pusha
pop
pushl
add
cmp
sub
mov
push
imul
inc
jmp
int
xchg
cli
ds
ja
mov
xor
and
lea
outsl
add
sbb
ret
iret
imul
enter
mov
cmc
adc
add
xlat
loopne
mov
adc
push
fwait
mov
test
sbb
aaa
movsb
xor
jo
add
pop
addr16
call
inc
jl
and
add
mov
sbb
mov
es
fwait
add
jbe
inc
adc
jle
push
pop
push
rcr
sub
dec
pusha
push
add
pushf
jmp
dec
add
lret
subb
add
cmp
or
shlb
stos
pushf
add
sbb
sbb
in
and
sbb
out
int3
loop
cmp
popf
enter
mov
popa
insl
inc
mov
test
add
mov
call
cmc
push
pop
lret
jecxz
loopne
jno
shl
dec
repnz
xchg
cmp
cmpsl
mov
ror
or
push
and
add
in
dec
push
mov
fs
xor
add
outsl
mov
add
cmp
lea
add
and
orb
loop
test
add
cltd
sti
adc
dec
cwtl
pop
dec
dec
or
and
es
add
enter
cmpb
dec
inc
ss
in
push
sbb
push
not
pop
es
popf
sarb
mov
mov
rolb
push
add
aaa
out
call
fimull
clc
inc
ds
mov
les
inc
adc
dec
test
pop
out
hlt
or
cmpsb
inc
nop
pusha
and
mov
add
push
icebp
js
out
out
push
pextrw
inc
xchg
add
jo
sub
cmp
or
add
test
ret
add
lock
sbb
ja,pn
dec
dec
inc
adc
mov
or
mov
mov
out
pop
mov
stos
dec
inc
ret
cmc
push
or
or
pop
cli
add
sub
xor
js
add
pushf
das
add
mov
outsb
add
iret
jge
mov
sbb
jle
shll
and
xor
mull
push
pop
fdivrl
dec
pop
add
outsb
xchg
sbb
cltd
jb
test
dec
mov
icebp
push
shrl
pusha
jae
jge
test
lods
xchg
ja
add
pop
push
and
xor
jmp
rcl
cld
aas
out
data16
lock
adc
gs
imul
mov
mov
movsb
lahf
test
insb
shlb
jecxz
clc
int
lods
sub
sbb
scas
ror
xor
and
aam
add
rcll
mov
pusha
mov
loop
xchg
loopne
inc
popa
add
sti
xchg
sbb
and
inc
push
jmp
mov
pop
daa
cld
mov
daa
mov
or
lods
add
scas
lds
test
cmpb
aam
jns
out
sub
test
repz
outsl
loopne
mov
cmp
out
jns
mov
lahf
data16
test
outsl
push
adc
jbe
xor
pusha
shll
cmp
cld
mov
loopne
inc
add
sarl
dec
lock
add
dec
outsb
js
inc
adc
aaa
push
dec
sbbb
arpl
xchg
cmp
or
mov
jge
cs
add
addb
jg
les
push
movsb
add
ljmp
pop
jecxz
popl
cmp
fistpl
xor
jnp
cs
cmp
clc
mov
out
adc
loope
and
cmpb
popa
mov
insb
add
sub
shrl
push
shrb
adc
xchg
and
add
subl
cmp
push
mov
add
rcll
mov
out
cld
jmp
xchg
add
int
jo
push
pusha
sbb
fucomi
andb
add
scas
and
fdivs
cli
mov
mov
into
les
adc
jno
inc
ljmp
sub
rcrb
fdivrl
pop
mov
push
and
in
dec
jecxz
sbb
push
xor
add
dec
lea
pop
cwtl
pop
sbb
xchg
ret
adcb
stos
add
aaa
aam
adc
xor
sarb
sbb
ficoml
push
fmuls
sub
aad
and
jge
jp
dec
xor
jb
and
enter
scas
mov
add
std
mov
pop
sti
das
ds
outsb
or
rolb
add
fmull
xchg
mov
int3
out
add
inc
push
fnop
and
inc
add
je
mov
sbb
or
orb
nop
out
leave
mov
xchg
rorl
dec
add
sbb
xchg
or
push
repz
subl
pop
cld
jge
add
xchg
mov
pop
outsb
int
xor
inc
cli
insl
shll
aad
test
cmp
jge
or
sub
mov
imul
shrl
and
ds
sbb
leave
pop
push
fcoms
scas
push
cmc
add
push
xlat
sbb
pop
sub
bound
inc
test
mov
mov
add
xchg
mov
cwtl
sbb
test
cmp
xchg
aad
fucomi
ljmp
lock
cmp
insb
xchg
sbb
jns
push
adc
xor
pop
lcall
fwait
add
add
shrb
es
dec
and
add
inc
pop
jb
or
and
subb
leave
std
mov
cmp
push
sub
mov
mov
lods
jg
mov
add
dec
or
jbe,pn
push
in
adc
pop
leave
jb
sbb
adc
movsl
aaa
jnp
add
dec
sahf
call
jecxz
push
xchg
jg
jns
jmp
cmp
and
mov
ss
add
xor
lods
add
dec
fwait
pop
inc
cmp
push
push
popf
add
nop
test
aaa
pop
and
fcomp
out
add
and
fcompl
pop
shl
dec
or
add
cmp
dec
repnz
add
adc
pop
jo
jp
inc
insl
add
sub
hlt
fcos
sbb
dec
test
es
and
inc
add
push
popf
add
movsb
gs
add
sbb
add
sbb
mov
pop
jae,pn
sub
or
add
push
sbb
paddb
sbb
push
int
push
mov
fldt
cld
inc
lock
add
scas
aaa
dec
xchg
add
outsl
sarb
je
inc
dec
cmp
add
ljmp
add
dec
and
outsb
and
inc
sahf
lret
add
push
je
or
pusha
movsb
imul
pop
jb
mov
data16
mov
jbe
add
push
pop
mov
jne
jp
mov
sub
lods
add
ret
aas
sbb
mov
and
fcmovnb
aas
sbb
ss
popf
jae
dec
cwtl
inc
pop
or
rcrb
or
add
ds
cmpsl
cmp
inc
pop
lock
cld
pop
lds
mov
jle
ret
push
xor
enter
xlat
movnti
lods
loopne
arpl
roll
push
jnp
insb
cmp
xchg
sbb
notb
xchg
sbb
mov
inc
jmp
sbb
add
sahf
sub
cs
out
and
fsubrs
in
pop
or
daa
mulb
mov
dec
add
bound
outsb
divb
cmp
sbb
add
pushf
or
add
sub
jmp
mov
test
sti
adc
aaa
cmp
sbb
or
stos
lret
loope
jb
sbb
mov
and
pop
lcall
mov
pop
mov
sub
lret
add
pop
int3
shlb
add
loope
jecxz
jo
xorb
sub
scas
push
jne
add
mov
int
cmpsb
fwait
add
xchg
lds
or
test
cmp
decl
push
xchg
add
or
add
mov
sarl
or
add
add
mov
or
movsb
test
test
or
push
scas
clc
adc
xor
mov
aas
scas
les
adc
shll
mov
mov
push
stos
or
inc
mov
cmpl
lods
dec
call
adc
push
sbbb
int3
push
adc
loopne
dec
pusha
pop
jno
in
mov
push
adc
cli
js
xor
mov
mov
test
or
dec
adc
dec
adc
jmp
or
into
pushf
xorb
test
inc
adc
inc
ljmp
sbb
cmc
sub
or
xor
mov
inc
and
jmp
xchg
into
lahf
add
jecxz
stos
daa
mov
cmp
cmp
inc
pusha
lds
xor
add
jno
ret
rorb
add
jnp
cld
out
scas
push
test
or
inc
cwtl
in
adc
pop
pop
xchg
adc
cmp
sbb
mov
cmp
add
mov
mov
or
sbb
lea
pop
cwtl
or
adc
push
scas
dec
scas
lock
add
imul
adc
dec
adc
in
sbb
clc
test
add
mov
xchg
ffreep
jno
dec
out
outsl
xchg
mov
int3
int
add
shlb
push
enter
jecxz,pt
add
fbld
adc
clc
jae
sbb
out
adc
rcrb
xor
push
scas
add
ret
es
imul
out
cmp
sub
lds
push
push
outsl
aas
pop
add
loop
jge
call
and
test
and
adc
mov
or
wrmsr
xor
call
out
add
enter
inc
sub
pop
and
out
add
add
push
push
hlt
lods
sahf
aam
sbb
fsubl
dec
cmp
das
or
sbb
scas
imul
inc
mov
and
mov
addb
jb
ja
loopne
aas
fidivs
in
xor
add
cltd
inc
push
add
aam
mov
aaa
loope
or
aas
adc
outsl
arpl
cmp
add
fs
les
adc
sub
xchg
stos
cmp
and
js
sbb
jb
jg
or
mov
xchg
pusha
and
dec
pop
jg
add
push
int3
add
or
ds
and
movsb
add
aad
jl
mov
jle
xchg
add
push
push
adc
sbb
or
fldl
shlb
add
insb
pop
inc
sub
inc
xor
lret
cmp
loopne
rorb
inc
lock
or
push
subl
addl
lock
sub
cmp
sub
popa
mov
xchg
pusha
js
add
adc
out
or
mov
cli
rcrl
lcall
adc
aas
add
inc
rclb
movsl
lds
jo
jns
or
fwait
es
mov
cmpb
fldl
lret
rol
nop
hlt
jp
in
pop
into
fsub
or
push
cs
popa
nop
and
shl
xor
nop
mov
rclb
sub
mov
xchg
add
mov
dec
shr
cmp
adc
dec
push
iret
rclb
add
popf
cli
add
sbb
add
mov
push
testb
add
sbb
jmp
nop
cmp
mov
cld
cmpsl
adc
xor
mov
or
and
lret
jne
or
and
add
pusha
out
mov
and
add
ret
add
jbe
xchg
outsl
pusha
and
and
pushf
test
fwait
xorb
call
jb
or
and
jbe
add
mov
or
insl
test
add
mull
xor
xor
xchg
mov
cltd
add
xorb
add
sbb
adc
in
dec
inc
sbb
sbb
fisttps
and
add
adc
or
sti
fimuls
mov
rclb
stc
out
rorb
push
rclb
inc
pop
sbb
or
add
and
adc
inc
cmp
mov
pop
jns
loopne
add
fsubp
int
outsl
cli
or
mov
add
cwtl
mov
or
roll
insb
or
add
inc
mov
cs
inc
mov
jb
loopne
ds
imul
dec
out
sbb
fsubl
sub
push
mov
mov
push
in
sbb
push
loope
ds
pushf
add
inc
clc
hlt
js
fsubl
cmp
or
or
inc
pop
add
lret
js
ds
fs
das
or
out
add
cmp
inc
push
push
xchg
loopne
jb
xor
cmp
and
and
or
jg
mov
add
cmpb
cmp
int3
xchg
cmp
xchg
or
imul
xorl
sub
add
andb
movsb
mov
cld
stc
pop
add
test
nop
cmp
push
mov
jp
mov
es
shl
mov
cmpsl
add
pop
mov
in
or
push
movsl
sub
xchg
loop
mov
mov
sahf
add
and
and
ds
jle
pusha
adc
adc
loop
mov
es
cmp
mov
add
xchg
sub
imul
test
ret
hlt
or
inc
pop
jmp
inc
pop
adc
inc
clc
ret
push
add
add
mov
or
or
scas
pop
faddp
add
push
jne
cmp
test
pop
jg
and
idivb
or
outsl
sahf
pop
mov
sub
and
cwtl
popf
out
sbb
imul
cmp
xor
mov
mov
push
mov
pop
pusha
movsl
xchg
mov
xor
lods
inc
in
dec
push
dec
mov
xor
cwtl
add
pushfw
lods
mov
call
out
aam
icebp
filds
rcll
je
add
enter
aam
ret
icebp
call
mov
rcrl
sbb
aad
or
mov
mov
xchg
mov
and
in
out
mov
int
scas
cmp
inc
shr
inc
dec
or
dec
daa
xchg
cli
or
mov
mov
lret
sub
mov
jge
adc
pusha
aam
push
add
or
fbstp
cmp
pop
aas
leave
cmp
add
lahf
or
mov
ja
mov
test
movsl
cmp
inc
or
or
pushf
add
add
add
movhps
jns
inc
cmp
dec
out
push
lahf
popa
hlt
add
or
gs
push
jnp
jge
push
inc
lret
add
test
ja
loop
dec
push
xchg
pusha
popf
and
jnp
inc
icebp
xor
fsubs
adcb
sbb
or
lret
add
and
sbb
adc
pusha
sub
nop
adcb
fwait
outsb
enter
or
dec
enter
scas
xor
sub
rorb
dec
call
addb
fwait
addb
cmpsb
inc
test
addl
push
add
addr16
mov
popa
es
push
aad
or
and
add
adc
mov
lret
call
push
xor
rcrb
push
lods
cld
add
jg
or
daa
and
jg
add
mov
cmpb
push
repz
ja
cld
in
add
or
data16
psraw
add
idivl
das
clc
insl
pandn
dec
pusha
push
add
stc
add
jnp
es
mov
fldcw
and
jmp
andl
out
push
cmpb
ficompl
in
pop
mov
add
call
testl
sbb
nop
pop
add
or
pop
lods
inc
ror
or
cld
popa
adc
dec
rcl
pop
or
out
fstpt
bound
rorb
xor
repz
pushf
pop
add
jns
mov
imul
sub
mov
add
sbb
push
pusha
xorl
arpl
clc
stc
sarb
sbbb
adc
cmovle
fwait
pushf
pusha
shl
push
pusha
or
sub
jecxz
pop
jb
rcrb
or
and
pop
dec
cli
orb
cwtl
pushf
cwtl
pop
jl
push
insl
js
sub
repnz
inc
mov
and
fstl
jmp
and
push
sbb
subb
pop
mov
inc
insb
les
test
in
xchg
mov
out
mov
lods
fbld
rorb
ret
push
in
adc
sbb
pop
in
movsl
xchg
sbb
push
or
mov
out
sub
sarl
adc
movl
dec
and
fs
dec
je
mov
clc
sub
loopne
add
pop
adc
push
add
aam
pop
rcl
hlt
dec
mov
imul
nop
cwtl
jp
nop
xor
mov
sub
lock
sub
clc
dec
out
and
fwait
mov
stos
adc
add
push
inc
or
adc
mov
je
jecxz
bound
repnz
xchg
mov
add
add
inc
arpl
sub
enter
loope
xor
sbb
mov
icebp
xchg
sbb
xlat
inc
sub
fs
addb
push
in
push
mov
inc
mov
iret
rol
sub
or
xor
sub
sub
ret
enter
sub
dec
dec
adc
adc
lret
pop
sub
adc
push
lock
and
xchg
xchg
mov
test
xorl
pop
xchg
in
pop
inc
in
sub
cmpb
jp
stos
movlps
lea
jbe
subl
imul
imul
inc
imull
inc
enter
or
mov
repz
out
xor
jmp
lret
add
js
int3
xchg
sbb
in
ret
rorb
pushf
adc
cmp
adc
call
pop
test
dec
je
cmp
ret
cmpb
add
sar
ret
sbb
sbbb
rcrb
cmp
mov
in
inc
lods
sub
aam
xchg
or
outsb
inc
mov
and
dec
je
iret
arpl
push
out
xchg
mov
mov
mov
ret
cld
mov
jg
mov
and
iret
xchg
sub
pop
inc
out
sbb
aam
mov
jns
add
mov
sub
sub
fiadds
push
cwtl
nop
loope
sub
subb
cmpsl
mov
jae
jns
popa
jle
js
sub
and
jb
lret
add
push
mov
int3
inc
add
loope
push
cltd
mov
aam
add
movsb
jno
clc
ljmp
push
and
or
xor
shl
add
adc
mov
cmp
sbb
add
add
rolb
adc
push
sbb
outsb
lds
fldt
mov
add
mov
add
fnstcw
lods
mov
fs
and
daa
cmp
xchg
push
push
mov
fwait
rcll
xchg
fisubs
fcomps
mov
sub
loop
add
inc
repz
add
faddl
add
mov
mov
jle
stc
pop
sub
das
iret
test
incl
push
shl
cmpsl
pop
sub
and
push
addr16
mov
jns
cltd
aam
mov
mov
loopne
enter
mov
outsl
add
dec
mov
cltd
jo
movsl
push
cmp
int3
add
mov
insl
jl
xor
jge
repnz
or
add
pop
mov
flds
int3
mov
in
jmp
add
ja
lret
add
lea
push
sarb
jns
add
add
mov
out
pcmpeqw
xor
mov
out
enter
add
add
pop
add
scas
xchg
mov
jb
sbb
loope
inc
add
loopne
dec
lcall
rorb
fildll
test
jno
movhps
decl
push
in
mov
aas
out
add
xchg
jb
pop
rclb
ficompl
dec
add
cli
sbbl
xor
add
cmp
xor
cltd
mov
je
setl
jno
mov
loop
jl
pop
ss
test
add
jno
add
pop
add
out
sbb
lret
inc
pop
adc
jno
add
shlb
mov
in
sbb
mov
push
jne
jmp
add
xchg
lods
sub
pop
and
shl
test
pop
xchg
mov
xor
filds
lret
xchg
int3
jo
add
loopne
mov
cmp
cmp
daa
and
int3
gs
xchg
mov
in
add
xor
sub
in
or
mov
fsqrt
loopne
push
add
mov
fwait
in
pop
push
cmp
in
fxch
hlt
cmp
add
cmp
cmp
ret
ficomps
or
or
fcomi
popa
add
enter
fadds
pop
add
add
jmp
call
sbb
sbb
adc
sub
mov
or
in
cmpb
imul
inc
xchg
add
insb
pop
bound
or
lret
add
aas
jl
push
push
imul
cmp
lcall
stos
xchg
iret
dec
dec
sub
clc
in
scas
ss
add
xchg
jecxz
in
cmc
xor
fs
sub
aas
add
shll
pop
pusha
dec
dec
inc
faddl
jle
sbb
add
in
mov
jnp
xchg
ret
mov
arpl
or
inc
add
int
in
inc
pushf
repnz
xor
fld
push
movsb
xor
push
push
add
mov
inc
js
fstpt
adc
add
xor
es
loopne
rcr
add
jo
sbb
into
cld
call
rolb
test
fiaddl
fadds
out
aas
movsl
int3
add
sub
cmpsb
out
ret
lret
add
fdivrl
push
sahf
call
pusha
lret
roll
dec
cmp
ficompl
jmp
push
das
mov
ja
testb
mov
mov
pop
inc
pop
lock
aam
jmp
ljmp
lods
sbb
mov
mov
test
mull
pusha
xchg
out
rcrb
arpl
dec
push
and
sti
mov
cld
test
mov
jnp
jecxz
clc
xchg
sbb
pop
mov
xchg
jl
cld
cmp
inc
xorl
pusha
add
sub
adc
stc
addl
mov
ret
cld
loopne
xchg
add
push
mov
add
fnstsw
roll
ficoms
mov
or
mov
inc
push
xor
pop
add
mov
cli
nop
aas
pop
fnstsw
hlt
test
imul
pop
dec
out
cs
dec
out
push
negb
adc
psrad
push
dec
xor
sbb
dec
push
inc
sub
cli
imul
jns
adc
inc
jl
push
fwait
std
cmp
test
cmpsl
in
mov
aas
mov
dec
in
pop
push
mov
pop
push
xor
adc
push
jb
or
mov
cmp
pop
pop
orl
push
idivl
sbb
inc
or
mov
sub
nop
rcrb
or
cmp
notl
mov
mov
rorb
mov
and
fcomps
push
bound
test
sbb
jns
sub
outsb
adcb
scas
jae
movsl
in
xchg
jp
add
out
clc
sub
daa
mov
pop
sar
or
adc
pusha
mov
mov
mov
inc
inc
add
fs
cli
or
mulb
and
jl
add
movsb
subl
dec
addb
orb
xchg
inc
xor
add
rcr
lock
or
mov
icebp
out
ret
add
repz
add
lock
dec
adc
stos
mov
dec
adc
iret
inc
push
fiadds
out
cmp
mov
add
decl
sbb
sar
pushf
push
cld
mov
test
pop
hlt
sti
movsb
in
lods
cmc
fcoms
and
aaa
mov
or
sbb
aas
js
cli
push
jb
mov
test
in
sbb
les
test
mov
push
rcrb
dec
fmuls
out
rclb
mov
bound
xor
int3
rcrb
nop
xor
jns
addr16
xor
jp
cmp
dec
pop
shlb
inc
push
cmp
movsl
add
rclb
pop
neg
pushl
call
out
adc
jmp
add
xor
movsl
negl
pushl
in
sub
adc
mov
in
movsb
out
movsl
stos
mov
out
ret
xlat
shlb
cmp
roll
fmull
mov
mov
scas
lods
sti
adc
out
sti
xchg
popf
in
cmpsb
orl
sub
inc
add
push
out
jecxz
leave
stos
add
test
jg
xchg
rorb
mov
out
pop
push
rcll
rol
or
jno
fidivs
xlat
clc
sarl
add
jp
adc
fistpl
das
mov
pop
adc
xchg
push
cld
cmc
add
adc
in
add
push
fidivrl
hlt
js
mov
cmp
aad
and
mov
adc
push
fwait
dec
call
lock
fadds
push
and
mov
jno
push
push
push
daa
popf
nop
addr16
and
bound
mov
adc
cwtl
inc
out
pop
pop
mov
push
mov
lcall
jns,pn
or
xchg
add
jno
aam
into
dec
sub
pop
add
sbb
daa
sub
loopne
fs
xor
push
movsl
cld
add
aas
add
push
test
call
hlt
out
shll
js
mov
out
dec
jmp
lock
cmp
add
hlt
inc
mov
out
pusha
add
cmc
jecxz
lods
add
es
fstl
or
or
mov
repz
std
and
data16
push
shrl
cmp
nop
xor
cltd
or
dec
cmp
fldlg2
popf
pop
fsubrs
adc
jbe
push
and
or
xchg
xchg
mov
adc
ss
clc
sbb
pusha
pushf
les
mov
add
sbb
or
and
or
and
inc
lret
mov
adc
and
dec
cmpsl
xchg
test
lods
inc
scas
ret
decb
cwtl
dec
push
jno
xlat
ljmp
push
add
pop
gs
inc
or
cmpl
pop
and
out
or
scas
jmp
jmp
mov
pop
mov
js
jg
jge
cmpsl
add
dec
ret
inc
mov
sbb
jmp
mov
out
jo
aad
fsubl
andl
and
addl
cmc
jecxz
aad
inc
aam
and
das
add
mov
popf
sbb
jp
or
push
pop
test
cmp
cmp
test
setae
sbb
and
clc
loop
xor
test
pop
mov
add
sub
rcpps
and
fadd
or
mov
into
stos
cwtl
lock
pop
loope
test
fildl
fnstcw
call
add
pop
icebp
in
roll
cmpsl
out
into
mov
cmpps
jmp
loopne
in
fdivs
cmp
fwait
clc
inc
xor
hlt
add
mov
and
idivl
adc
sbb
mov
cmc
movsl
xchg
cmp
lods
call
call
jecxz
fbstp
inc
test
lret
cltd
call
iret
or
rolb
test
xor
sbb
lret
lods
hlt
repnz
dec
in
pop
and
or
mov
or
inc
inc
push
shl
ret
cli
cmpsl
test
mov
loope
add
sar
pop
sbb
shll
mov
testl
jno
in
cmpsl
jae
andb
add
mov
jae
add
loopne
xchg
push
cli
pop
add
add
pop
add
call
pop
lret
sub
xor
xor
sbb
pop
pop
push
push
bound
or
sub
dec
subl
jecxz
shrb
mov
jo
inc
sub
and
movsb
sbb
add
sbb
mov
mov
popa
xor
or
mov
out
sbb
push
repz
enter
dec
xchg
adc
push
xor
push
lods
test
pop
test
pushf
jb
sti
inc
sbb
push
jmp
pop
outsb
and
sbb
dec
adc
cs
sub
cmp
in
sbb
xor
push
movsb
lods
test
insl
and
inc
frstor
dec
pop
ds
or
push
adc
adc
sub
sbb
in
and
inc
bound
pop
mov
call
push
jl
push
hlt
inc
xor
pop
aam
adc
inc
and
xor
jb
adc
out
pop
mov
cmc
push
int3
and
lahf
sub
push
jno
and
xor
aad
aaa
and
sub
jb
mov
adc
mov
mov
stos
les
popl
shlb
inc
adc
adcl
add
push
or
cltd
rorb
shrl
fcomps
loopne
dec
xchg
push
pusha
push
inc
in
cli
mov
add
test
dec
fsubs
pop
pop
nop
inc
jno
mov
movsb
adc
dec
addr16
inc
sub
pop
test
rclb
outsb
loop
unpckhps
into
adcl
sbb
fldl
adc
jno
fsubs
mov
neg
insb
cmpsb
icebp
cs
stos
cmp
std
pop
mov
ss
cmp
add
cmp
lock
cmc
inc
lcall
stc
mov
inc
mov
mov
sbb
lret
lds
xor
out
pusha
mov
pop
lds
add
out
add
cltd
fnstenv
cmp
mov
add
adc
out
xor
movsl
inc
mov
ss
add
dec
sub
cmp
pop
das
in
sahf
sub
in
xlat
fbstp
push
sbb
add
jg
sbb
sbb
cmp
int3
jg
adc
or
stos
dec
fiaddl
call
xlat
dec
xchg
movsb
jp
clc
enter
and
les
cmc
call
adc
pop
xor
inc
adc
fmuls
adc
cwtl
cld
or
sti
xchg
dec
out
adc
cmpsb
push
shrl
ret
loopne
cmpsl
adc
or
insb
filds
scas
xor
nop
in
js
dec
or
int
xchg
sahf
pusha
test
ret
inc
xor
mov
jmp
inc
fs
nop
pop
stc
xlat
adc
shl
ret
or
call
repnz
rorb
cmpsl
xor
add
inc
in
inc
das
mov
mov
mov
or
add
out
popf
inc
cld
icebp
dec
adc
and
inc
cmp
xchg
pusha
add
pop
inc
out
or
inc
adc
stos
inc
jmp
loopne
icebp
imul
out
adc
inc
in
xchg
dec
or
sbb
add
test
dec
fiaddl
int3
or
pusha
xor
add
dec
ljmp
jmp
or
icebp
or
push
cltd
das
adc
movsl
repz
stos
inc
jmp
jl
jecxz
xorb
call
stc
pop
clc
mov
fiaddl
mov
push
jecxz
xor
mov
cmp
fdivrl
fwait
or
popf
add
fcompl
xor
fisttpl
sbb
cmp
or
test
sub
inc
lret
push
cmpsl
and
ss
adc
test
lds
inc
mov
sub
inc
cmp
orb
inc
adc
dec
adc
stos
jecxz,pn
int3
mov
adc
int
sbb
add
mov
xchg
add
clc
jg
sbb
test
adc
loop
pop
sbb
cmp
ds
addb
inc
xlat
fmuls
das
ret
mov
xor
xchg
cmp
adc
cmp
fcomps
xchg
inc
xor
dec
lock
mov
clc
dec
in
mov
xchg
sub
loope
xor
pop
stos
dec
das
and
shr
psubusw
add
pop
dec
in
xchg
adcl
xor
movsb
sbb
pop
out
adc
mov
sbb
xchg
xor
xor
push
adc
dec
hlt
ficoml
stos
mov
or
popf
xchg
adc
xor
or
lods
ss
sbb
das
push
call
inc
test
add
out
das
xlat
addl
out
hlt
testl
in
mov
ficoml
test
cmp
add
xor
sbb
inc
jmp
xor
sahf
mov
xchg
or
enter
dec
out
cwtl
lahf
or
xchg
sub
jle
call
inc
faddl
pop
pusha
nop
and
inc
in
call
ret
hlt
sub
les
notl
inc
mov
fcomi
or
cltd
xor
add
daa
mov
mov
adc
inc
mov
sahf
inc
out
add
sub
add
mov
das
test
test
lock
icebp
add
sbb
rcrb
jmp
stc
pop
dec
lock
dec
fstps
xor
adc
cmp
and
nop
inc
sub
mov
push
js
and
test
and
inc
clc
mov
xor
adc
cmp
lock
xor
sub
cmc
or
lcall
fcomip
xchg
inc
mov
repnz
ret
jl
xchg
cs
and
out
rcl
ftst
bound
lcall
mov
gs
xor
push
aam
lret
sub
jp
inc
xchg
xor
and
pusha
and
ljmp
pop
jae
lds
daa
enter
mov
mov
shrl
xchg
fdivl
jg
clc
pop
leave
int
and
inc
sbb
xchg
add
and
or
dec
mov
cmp
push
xchg
fmull
popa
out
add
fs
orb
pusha
xor
add
and
sbb
add
add
rolb
mov
aaa
mov
mov
jae
and
aam
clc
fisubs
push
iret
ret
pop
je
inc
loop
add
popa
or
mov
sbb
xchg
jo
xor
testb
xchg
and
ja
icebp
jmp
adc
push
pushf
push
dec
mov
sub
and
pop
cmp
add
push
cli
inc
xor
and
and
inc
arpl
jge
adcl
int
push
cmp
clc
and
adc
xchg
scas
pop
mov
push
ss
jmp
rolb
mov
mov
and
outsl
mov
sarb
or
cmp
pop
icebp
push
adc
je
sbbb
add
push
sbb
subl
mov
dec
bound
andl
fxch
xchg
mov
mov
mov
lds
add
sub
shrb
je
jecxz
xor
cmp
daa
imul
aam
mov
clc
repz
xchg
out
mov
lahf
rcrb
mov
pop
insb
add
jbe
sub
sub
mov
push
shll
sbb
cli
daa
lret
inc
lods
sub
fwait
dec
rol
push
ret
and
cmpsl
loopne
icebp
arpl
and
in
mov
push
aaa
ret
sbb
adc
fsubs
inc
add
mov
mov
lods
mov
push
sbb
out
repz
add
xlat
xor
nop
cmp
xchg
dec
incb
add
adc
nop
test
inc
fsubl
xor
test
mov
jecxz
xchg
pop
aam
push
xchg
imul
jo
add
jmp
fwait
add
add
add
add
xchg
mov
add
sub
or
push
gs
sub
aaa
pop
je
fnstenv
cmp
mov
add
repz
test
scas
nop
in
test
adc
mov
ret
rolb
pop
out
adc
sbb
pushf
rcr
scas
sbb
or
xor
or
aad
pusha
xor
or
dec
cli
js
cmp
in
jmp
in
ret
cmp
stc
cmp
mov
dec
or
js
addb
shl
daa
testl
cli
xor
jle
ror
mov
pop
add
xchg
cmpsl
ret
aad
add
sbb
sahf
mov
adc
jbe
mov
mov
xlat
push
and
cmp
cmc
jbe
shrb
mov
into
mov
nop
cmpl
and
scas
xchg
int3
add
test
mov
add
ss
add
pop
dec
insb
inc
int
cltd
inc
pop
sbb
fs
or
inc
xor
adcb
aaa
mov
loopne
sub
dec
fmul
add
lret
shl
mov
pop
fs
mov
insl
fdivrs
movlhps
pusha
cmp
pop
pop
dec
lds
arpl
cmp
popa
mov
dec
nop
daa
sbb
sbb
inc
dec
iret
cmp
dec
pop
and
into
sub
cmp
jle
push
test
push
lret
push
test
andb
cmp
mov
adc
and
xor
jg
push
pop
and
xchg
add
loop
mov
sub
jae
adc
xchg
inc
enter
arpl
lods
jle
mov
jae
subb
jmp
xor
repnz
push
out
ret
mov
adc
aad
and
pusha
lods
and
and
std
sub
pushf
fld1
and
add
mov
adc
or
ret
sbb
lock
add
orb
cmp
mov
fucomp
push
adc
cmp
call
and
add
insl
dec
es
addr16
lock
or
cmpb
jbe
jl
add
push
ret
iret
mov
add
cmp
cmp
xchg
add
andl
inc
and
into
loope
add
jns
sbb
lahf
add
mov
cmp
ret
adc
faddl
push
das
enter
jno
xchg
mov
out
rcrl
push
cltd
addl
mov
or
mov
enter
xor
sub
sbb
pop
mov
ret
sub
cmp
test
xchg
add
cmp
loope
and
sbb
sub
jbe
pop
mov
jns
push
ret
lods
xchg
jge
mov
stos
pmaxub
xchg
mov
push
mov
addr16
xchg
add
sbb
xchg
adc
popa
add
js
mov
loopne
and
sbb
cmpsl
pusha
push
fs
xor
cwtl
sub
test
xchg
mov
sahf
jno
and
gs
enter
sub
add
mov
test
mov
inc
ljmp
mov
add
push
jns
test
cmp
cmp
xchg
cld
or
push
lods
lcall
xor
popa
adcb
adc
push
leave
popa
clc
inc
add
sub
dec
jl
ja
sbb
sub
pusha
ljmp
scas
dec
cs
lock
mov
test
data16
adc
sbb
dec
rol
push
dec
and
jnp
repz
popl
adc
push
lock
cli
scas
in
and
and
daa
nop
pop
lock
jmp
dec
mov
xor
divl
jmp
sbbl
scas
bound
popf
or
adc
flds
xor
imulb
mov
daa
dec
popa
jg
xor
inc
ds
dec
mov
int
pop
sub
mov
inc
mov
inc
enter
test
bound
mov
dec
and
lds
inc
xchg
iret
mov
push
lods
cmpsb
pop
xlat
hlt
pop
movsb
jmp
mulb
mov
jge
sbb
dec
test
adc
aaa
nop
adc
sbb
mov
mov
push
add
mov
rcll
ds
xchg
cmp
pushf
jbe
adc
lock
add
mov
inc
es
lock
incb
imulb
push
xchg
je
outsb
mov
cmpb
pop
jnp
cmp
and
cmc
xor
jbe
lret
repz
pop
jmp
test
adc
negl
sub
inc
out
pop
sbb
push
jno
or
insl
repnz
add
xchg
cli
sbb
xlat
enter
bnd
add
data16
inc
xlat
jl
int
leave
test
jecxz
push
mov
jp
mov
mov
fmuls
mov
mov
bound
stc
add
andb
cld
cwtl
lock
cmpsb
add
cli
in
popf
mov
fdivl
or
push
mov
les
repnz
daa
bound
loope
ljmp
add
or
in
mov
xlat
jl
push
mov
insb
bound
aas
or
pop
or
xor
or
out
lock
clc
cwtl
lcall
xchg
rcrl
and
add
sbb
into
inc
xchg
push
mov
ljmp
ss
mov
pusha
movsb
cmp
and
add
sub
lret
or
ss
and
cmpsb
or
rolb
frstor
fs
jns
lret
dec
enter
or
loopne
pop
pop
in
xchg
inc
mov
inc
sarb
pop
mov
aas
movsb
ja
mov
call
or
in
roll
xlat
pop
cmc
into
rcrb
mov
test
orb
mov
cmp
add
xchg
fsubr
out
add
jno
insb
add
leave
jmp
jg
push
push
add
adc
pop
cmp
dec
jge
add
aad
cld
mov
xor
and
or
adc
jo
add
pop
cld
pop
push
pusha
je
aaa
addl
inc
ljmp
pop
cmp
cmpsl
xor
outsb
sub
add
out
lcall
rcrb
rcll
clc
mov
mov
push
gs
insl
xor
mov
clc
cmp
mov
nop
ret
popa
mov
dec
lea
inc
pop
jg
add
mov
pop
mov
jg
and
jns
pop
add
xor
add
loopne
movsb
mov
in
dec
lahf
add
je
adc
aad
xor
cmp
cmp
cmpsb
adc
fdiv
cwtl
mov
sub
or
sbb
cmp
adc
sti
sahf
clc
add
mov
fnstsw
cwtl
inc
out
andb
imul
pop
pop
jno
je
in
mov
sbb
enter
test
add
cmpsl
aad
xorb
mul
xor
leave
aaa
test
mov
icebp
dec
sbb
iret
push
dec
mov
jecxz
sbb
ss
or
jle
enter
inc
xlat
mov
rclb
andb
mov
popf
pop
orb
popa
xchg
test
dec
inc
rclb
push
xchg
fstl
dec
fdivs
sbb
lods
and
mov
mov
in
stc
test
je
loopne
dec
cmp
and
push
inc
pusha
and
jecxz
stc
sbb
and
add
cwtl
sbb
in
les
shl
jae
mov
adc
dec
cmp
mov
dec
faddl
xchg
add
or
ss
or
jbe
outsl
xchg
addr16
add
ljmp
inc
cld
cmp
push
dec
je
inc
pusha
and
hlt
xor
cwtl
aad
xor
dec
mov
adc
mov
cmp
aaa
in
fsubr
xor
cltd
call
addr16
pop
dec
call
adc
js
stos
ds
in
roll
cmpsb
fisubs
and
pop
lods
aad
sbb
fimull
sbb
dec
insl
out
leave
jl,pt
enter
inc
cmp
adc
sub
divl
rolb
mov
aam
xchg
or
loopne
mov
inc
outsl
jecxz
int
mov
pusha
pop
add
pop
cmp
inc
mov
and
aad
or
ss
fnsave
cmpsb
int
xchg
loope
idiv
sbb
add
ja
mov
and
mov
scas
jnp
js
sbb
cmp
inc
add
movsl
pop
sub
sub
call
jae
inc
ret
xor
xlat
jno
sbb
mov
cmp
mov
xchg
mov
adc
aad
inc
call
push
pushf
mov
add
mov
test
stos
add
mov
in
add
pop
xchg
push
cmp
and
or
or
and
or
add
adc
jo
mov
mov
push
xor
repnz
int3
add
add
lea
add
lds
divl
xor
cmp
rcll
inc
pusha
inc
cltd
or
bound
mov
mull
dec
xchg
dec
hlt
mov
ror
pop
test
inc
sub
jge
and
in
in
shlb
dec
clc
pop
pushf
pop
call
inc
push
mov
mov
push
out
jo
sub
or
cltd
jecxz
in
sub
lods
dec
pop
in
imul
mov
push
push
push
nop
fsubl
or
ret
and
orb
inc
cmp
notb
cmp
xor
xor
mov
sti
xchg
mov
or
shl
jge
sub
mov
jno
xor
mov
orb
inc
mov
inc
mov
rclb
xchg
pop
xchg
inc
push
mov
adc
jnp
inc
je
dec
jns
aad
aad
and
push
mov
pushf
add
clc
outsl
and
lods
xchg
fldenv
in
test
repz
push
in
out
test
les
mov
ds
cmp
jl
cmpsl
and
push
mov
rcr
sbb
sbb
fstpl
mov
xlat
jl
jne
jno
ret
add
cmp
not
fisubs
pop
dec
rorb
shlb
push
adc
cmp
ja
fwait
pop
cmp
add
lods
mov
adc
ljmp
orb
loop
stc
sbbb
adc
add
mov
test
mov
bound
mov
mov
orb
inc
fsubr
xchg
insb
and
fcoml
mov
mov
inc
cmp
test
mov
adc
fsubs
mov
xor
outsb
ret
pusha
add
xchg
inc
nop
adc
xor
pop
inc
jae
or
mov
cmpsl
hlt
mov
xor
jae
mov
mov
aam
push
fcoms
or
jae
dec
inc
je
cmp
mov
pop
and
rol
aam
dec
cld
push
rorb
dec
andb
push
push
jge
cmp
into
daa
test
rolb
or
inc
add
push
in
inc
xchg
xor
and
dec
jae
add
ss
repz
outsb
jmp
js
mov
cmp
jl
sub
iret
es
stos
xchg
insb
add
pop
jmp
mov
aaa
sbb
sbb
pop
push
inc
shr
test
mov
dec
xchg
roll
aaa
sbb
and
push
and
xor
fmuls
pop
les
push
mov
mov
call
inc
pop
test
ljmp
loop
lods
inc
or
in
push
les
inc
sub
stos
out
sub
clc
inc
dec
cmp
sub
dec
inc
arpl
inc
lods
add
xchg
inc
lods
or
mov
mov
cmpsl
fistl
lea
test
jg
popf
fwait
pop
sbb
and
add
fcomps
jle
jno
pop
cs
adc
mov
mov
ss
and
loopne
add
jbe
pop
test
jns
push
subb
sbb
dec
fisubs
aaa
ror
nop
add
shll
xor
pop
sub
mov
add
mov
cmp
in
and
bound
and
add
or
aaa
and
mov
cmpsl
movsb
lock
dec
or
sbbb
pop
xor
daa
mov
jae
push
rolb
fcoms
rcrl
add
push
insb
xchg
mov
aaa
adc
jno
mov
mov
adc
pop
cmp
ret
ret
movsl
pop
xor
mov
cmpl
or
movsb
cli
divb
mov
adc
add
and
in
inc
jae
in
dec
sbb
mov
ljmp
ss
lods
mov
hlt
cmp
dec
orb
and
add
inc
cmp
add
pop
jns
cld
push
jo
sbb
pusha
lret
test
mov
inc
or
int3
push
rcll
mov
jge
push
stos
add
movsl
dec
ret
fmull
mov
push
jmp
sub
or
hlt
jmp
cmp
cmp
mov
or
stos
cs
or
cwtl
les
int3
and
or
cmp
pop
and
jmp
inc
mov
rorl
push
dec
out
orl
inc
pop
push
inc
hlt
mov
mov
jp
int
sub
es
add
pusha
xchg
orl
addb
mov
cld
lret
mov
repnz
outsl
ret
pop
push
in
sti
popa
xor
add
call
add
popa
dec
test
out
mov
adc
out
pop
nop
cwtl
jp
fmul
in
add
add
ss
jle
xchg
mov
dec
shlb
jns
sbb
jp
add
push
jnp
xchg
cmp
test
push
or
jmp
or
fmull
adc
push
mov
icebp
xor
test
pop
adc
scas
push
cmpsl
call
icebp
cmp
sub
sub
pop
adc
stos
ret
pusha
mov
cmp
push
inc
pop
adc
mov
pusha
dec
xor
pop
mov
or
dec
inc
dec
mov
add
push
rorb
wbinvd
fsub
arpl
pop
adc
aad
insb
fmull
inc
es
sbb
in
adc
dec
push
ficoml
pop
mov
dec
mov
fs
hlt
fistps
sbb
mov
sub
cmpl
sbb
jmp
dec
or
mov
mov
xor
cltd
repz
add
cmp
adc
mov
sbb
sahf
adc
inc
jbe
or
or
adc
test
jo
jmp
jl
into
jg
dec
inc
cld
add
dec
arpl
adc
loopne
pop
jae
and
pusha
adc
inc
nop
push
rcrb
pusha
mov
and
lea
pop
stc
and
out
add
jg
mov
pop
adc
cmpsb
xor
xchg
add
test
mov
ljmp
pop
mov
je
dec
add
fdivrs
add
jae
xchg
cmp
fimuls
ret
mov
adc
and
je
fsubl
icebp
lahf
dec
inc
inc
pop
add
hlt
popa
add
and
fs
rorb
xor
sbb
push
dec
or
fadds
push
and
lea
movsl
fnstenv
push
jl
fwait
push
sub
jnp
inc
ss
adc
mov
cmp
or
es
mov
xorl
sahf
aaa
insl
test
movsb
mov
outsl
rclb
pop
inc
sar
bound
insl
iret
jns
add
dec
or
or
adc
inc
sbbb
test
inc
hlt
xor
test
dec
shr
mov
xor
gs
lock
inc
sub
mov
mov
in
rcrb
xor
mov
popa
cld
adc
scas
mov
mov
or
push
out
sub
stc
pop
dec
pop
nop
sbb
sub
imul
inc
sub
insb
or
cwtl
enter
cmp
xor
adc
mov
sub
push
jecxz
mov
stos
inc
cmp
add
adc
int
mov
sub
pusha
clc
arpl
insb
mov
dec
cmp
xchg
push
add
test
jno
add
add
into
ja
xchg
push
call
popa
inc
or
out
sbb
jecxz
push
dec
push
add
aad
mov
rolb
and
adc
or
adc
popa
pop
xlat
aaa
inc
push
sub
mov
or
nop
cmp
mov
inc
push
adc
pop
and
mov
outsb
sub
sbbl
mov
push
mov
adc
das
dec
cmp
add
hlt
and
loopne
movsl
enter
lret
inc
ja
adc
cmp
dec
ror
fstps
add
dec
add
movl
lods
push
pop
jne
in
pop
fisttpll
jmp
mov
es
push
cmpl
xor
or
mov
adc
jmp
add
add
and
xor
and
ret
add
jle
or
loope
pop
lahf
pop
addl
js
push
mov
mov
or
lods
fs
and
or
sub
sub
lods
push
test
repnz
add
or
scas
mov
inc
add
mov
mov
pop
push
adc
test
sbb
or
and
push
push
cmp
leave
jno
mov
sub
and
pop
inc
and
mov
pop
mov
aas
mov
push
repz
push
mov
pop
ret
lret
stc
les
sarl
jg
add
adc
f2xm1
mov
push
xor
in
inc
dec
and
and
push
sbb
aad
shr
push
sub
or
adc
sbb
adc
cmp
add
xor
add
sub
push
add
adc
mov
xchg
lcall
push
xor
adc
ret
or
adc
mov
mov
ja
dec
or
mov
mov
sbb
movsl
cmc
psllq
or
addb
dec
inc
or
jmp
add
or
push
incb
popa
adc
adc
push
push
push
into
je
or
xor
mov
adc
pop
inc
inc
cmpsb
ja
arpl
call
jns
xlat
les
sbb
ja
xor
sub
pop
jmp
cltd
or
dec
push
ss
add
out
xor
pushl
lret
nop
push
pop
pop
jmp
cli
inc
push
push
ror
fidivrl
adc
adc
insl
pusha
push
mov
pop
jmp
fcomps
mov
add
sbb
mov
ds
push
mov
pop
ret
adc
ret
add
shll
fsubrl
es
push
jle
dec
aad
adc
add
pop
and
xor
enter
mov
cli
cmpl
adc
sub
popf
loope
dec
push
jl
push
or
xorb
sbb
mov
inc
lods
sti
in
and
sbb
fdivrs
les
dec
mov
cmp
sub
mov
xchg
test
int3
mov
pop
ret
adc
jl
loopne
push
ret
add
fs
mov
inc
inc
outsl
inc
insl
add
mulb
push
mov
push
js
adc
cmpsl
add
lahf
in
adc
sbb
mov
jmp
outsl
pop
pusha
nop
xor
push
xor
or
push
xor
shlb
mov
mov
dec
and
sub
mov
scas
sub
cwtl
pop
or
mov
pop
xchg
addl
jo
lea
push
adc
inc
dec
imul
pop
mov
add
mov
push
or
addr16
pop
aam
xchg
push
sbb
adc
jmp
aad
or
sbb
push
mov
sbb
rolb
aaa
sub
push
mov
aam
pop
shl
in
add
dec
fidivrl
fstps
pop
mov
add
mov
push
lds
lods
sbb
outsb
mov
adc
and
setne
lock
xor
or
inc
push
pusha
jl
or
adc
inc
push
adc
clc
jmp
adc
add
and
adc
je
pop
call
in
push
or
inc
xor
xchg
out
popl
es
cmp
jg
push
mov
pop
ret
adc
je
loopne
push
ret
add
jns
push
mov
mov
pop
fstps
sbb
jmp
or
lea
std
es
out
dec
push
dec
gs
adc
add
xor
xor
add
das
add
rorb
adc
xlat
cmpl
test
in
cmp
and
jecxz
rolb
pushf
out
imul
fistl
incb
ljmp
cmp
lcall
adc
push
movsb
out
inc
sbb
movsl
enter
scas
lods
push
call
sbbb
inc
sub
fcomps
fdivrs
xor
add
or
in
icebp
pop
cmp
mov
and
popf
sub
add
add
adc
pop
mov
sub
sub
xrelease
icebp
mov
push
nop
es
xor
xchg
orb
add
mov
test
mov
mov
sbb
add
mov
mov
in
jb
sub
pop
jb
cld
push
cmp
or
pop
mov
add
add
movhps
and
fistpll
push
or
pusha
mov
mov
sub
mov
add
and
push
add
fmuls
or
or
out
iret
ljmpw
scas
outsb
out
jbe
sub
clc
jmp
lods
adc
pop
cmc
andl
jg
add
insb
push
stc
popl
mov
shlb
dec
lock
mov
inc
cmp
push
add
pop
inc
sub
sub
call
aas
pmaddwd
push
ret
cmp
push
add
inc
sub
sbb
das
mov
repnz
popf
insl
sbb
push
call
pop
popa
xchg
push
arpl
mov
dec
popf
lar
sub
into
sbb
mov
and
fdiv
fcomip
inc
stos
adc
mov
out
pop
ret
sub
fwait
add
xchg
jmp
iret
jns
sub
outsl
lea
mov
inc
es
mov
dec
shlb
sub
dec
or
or
mov
inc
rclb
adc
push
dec
repz
shlb
pop
xor
dec
movsl
inc
pop
hlt
inc
sarl
ret
inc
jmp
subb
hlt
lods
mov
and
bound
aam
add
mov
dec
dec
das
and
push
add
test
lods
loope
arpl
repnz
nop
fnstcw
or
mov
stc
fcomip
mov
mov
cld
push
mov
mov
test
test
or
adcl
ret
add
shlb
add
cmp
cmp
daa
pop
push
xor
cs
mov
cmp
fsubrp
and
xchg
inc
push
pop
push
test
push
adc
pusha
push
sbb
xchg
mov
dec
cmpsl
add
adc
and
scas
dec
add
enter
nop
mov
add
or
dec
stos
idivb
subl
jmp
subb
fiadds
test
push
dec
faddl
ret
lea
push
cmp
aam
and
movsb
inc
loope
xchg
sub
add
jo
cmc
imul
add
ret
pop
and
or
pushf
push
scas
mov
mov
push
jmp
push
sub
repnz
les
mov
push
add
das
mov
ljmp
sbb
and
or
sub
icebp
sbb
ret
lret
add
fs
xor
mov
in
add
out
rclb
testb
lock
adc
add
pop
cld
mov
or
icebp
pop
and
xor
std
push
inc
mov
xchg
sub
xor
cmp
and
add
xchg
jmp
scas
pusha
adc
and
lret
xor
xchg
sub
inc
adc
mov
stos
or
sub
daa
cltd
add
bound
jb
add
scas
and
rcrl
xor
icebp
or
test
or
add
mov
daa
int
stos
decl
inc
adc
inc
or
jne
mov
add
xor
or
scas
push
pop
imul
nop
mov
add
incb
fiadds
mov
dec
test
nop
popa
mov
pusha
loopne
js
add
fstps
xchg
xor
add
add
aas
mov
fincstp
aam
add
or
jmp
sbb
xchg
inc
ficompl
add
das
outsb
xor
sbb
mov
mov
jns
mov
fimuls
mov
pop
mov
pop
cld
and
pop
jae
test
dec
roll
add
dec
jg
mov
call
and
xchg
push
xor
jmp
out
inc
outsl
pop
pop
adc
out
xor
movsb
push
mull
add
push
xor
inc
popa
push
or
push
pop
jo
jmp
add
mov
repz
xchg
sbb
aad
mov
je
dec
cmp
call
aad
add
xacquire
push
jle
jo
pop
push
push
inc
and
test
inc
es
cli
or
add
fcomi
ret
add
das
xor
mov
dec
notl
or
mov
dec
or
test
cmpsl
add
mov
mov
xchg
test
lods
sbb
cmp
add
lock
dec
push
rclb
sarb
sub
sbb
inc
push
fldt
cmpsb
rolb
rorl
leave
sbbb
mov
add
inc
leave
scas
push
adc
movsl
mov
inc
or
add
adc
cwtl
mov
push
xor
mov
sub
test
inc
push
sbbb
push
or
adc
cmp
rolb
call
dec
xor
lods
mov
repnz
and
fildll
pusha
add
mov
and
or
movsl
fs
fstps
outsl
lcall
xlat
ret
mov
sbb
icebp
add
jb
xchg
das
push
test
add
mov
sti
inc
sbb
cltd
mov
mov
and
hlt
popf
lcall
lret
sub
jmp
mov
or
mov
or
and
dec
lds
sbb
push
adc
xchg
cmp
xor
cmpsb
mov
adc
sar
adc
pop
mov
mov
and
and
dec
sbb
push
jae
xor
sti
jo
test
fidivs
aam
lahf
add
or
rcll
call
xor
scas
push
cltd
roll
or
andl
add
adc
mov
aaa
or
or
dec
push
mov
pop
inc
sub
pop
dec
mov
popf
mov
testb
lea
les
cs
sbb
mov
pop
scas
or
ja
cli
pop
dec
mov
cmpl
add
or
xchg
mov
je
pop
cmp
dec
push
jne
xchg
or
pop
jb
test
sbb
int
loopne
add
test
sbb
pop
add
mov
clc
sbb
ret
inc
lret
xchg
mov
inc
mov
mov
xor
mov
popw
xchg
mov
and
popf
add
adc
mov
enter
cmpsl
mov
pop
or
repnz
dec
pusha
inc
mov
popa
sub
rcl
enter
sbb
fldl
addl
pop
ficoms
test
rclb
rcll
pop
xor
loope
dec
sub
and
jbe
adc
jb
push
add
outsb
gs
ud2
mov
fadds
scas
incb
push
jno
cmpl
sti
and
push
sbb
movsb
jecxz
addr16
lds
add
and
add
sub
loopne
add
mov
or
iret
jno
fstps
sbb
sbb
mov
xchg
jge
pusha
xchg
or
push
add
stc
push
cld
popf
daa
and
lea
pop
xchg
jo
cmp
jp
pushf
sub
add
out
push
call
push
enter
pop
pop
in
pop
stos
shll
push
inc
mov
or
cmp
lds
jge
or
push
lea
xor
add
push
xor
pop
adc
sub
sbb
and
mov
leave
dec
add
inc
adc
xor
sub
addr16
loop
add
sub
mov
or
loopne
mov
and
gs
cs
shrl
add
inc
and
add
inc
leave
push
insb
inc
inc
nop
jmp
lds
sub
add
pop
pop
in
xchg
push
mov
cwtl
dec
xor
push
mov
into
pop
mov
cmpb
adc
xor
jne
and
add
pusha
mov
popa
push
xchg
lock
ds
pop
pop
pop
cvtps2pi
push
out
cmovno
popa
cmp
xor
mov
jns
add
mov
pusha
lahf
arpl
mov
pop
sbb
mov
dec
imul
and
or
into
movsb
notl
adc
loopne
test
or
cmp
push
notb
into
ljmp
pop
popa
adcl
mov
inc
es
add
xor
adc
add
mov
push
pop
jge
xchg
je
inc
inc
js
gs
pop
imul
popa
jb
popa
inc
or
push
insb
gs
int3
sub
inc
arpl
lahf
mov
sbb
jmp
adc
ds
mov
xor
imul
es
addr16
inc
jae
fcoml
popa
jge
jge
jnp
aaa
or
sub
xorb
push
push
cmp
fldpi
js
inc
inc
xchg
fs
sbb
jnp
jns
or
call
sub
inc
inc
push
rcr
cmpsb
lahf
fistpll
inc
add
dec
dec
pcmpgtb
dec
push
push
sbb
aas
jb
rcrl
bswap
repz
sub
mov
mov
adc
push
dec
sbb
je
js
add
jo
mov
and
pop
mov
inc
mov
mov
inc
inc
xor
andb
mov
dec
push
sbb
pop
jb
lret
and
pushf
and
lcall
jp
nop
outsb
loop
xor
xor
xor
xor
xor
adc
xor
jmp
add
pop
int
sbb
mov
cmpsl
roll
add
shlb
push
xor
inc
ret
aam
cmp
stos
or
inc
push
push
ret
dec
loope
dec
mov
adc
inc
enter
cmp
test
enter
push
sub
cmc
or
or
enter
jle
jp
jbe
inc
push
xchg
jb
outsb
bound
pop
sub
adc
cmp
pusha
sub
pop
sub
push
in
adc
sbb
add
rolb
pop
xchg
add
mov
or
cmp
add
pop
aad
pop
xchg
add
sbb
icebp
push
and
add
lock
jg
add
push
outsl
pop
or
les
mov
unpckhps
sahf
out
mov
add
dec
rcrl
pop
pop
mov
jmp
mov
dec
cli
jns
add
dec
pop
xor
cld
adc
jne
add
stc
sbb
and
in
ds
loop
dec
clc
or
test
inc
sbb
imul
pop
testl
pop
test
adc
pop
mov
mov
popl
fs
sbb
inc
roll
inc
aad
aas
scas
pushf
jl
add
cmp
add
rcrb
sub
sbb
icebp
jg
pushf
mov
outsb
mov
add
jmp
pusha
lea
popf
add
sub
out
aaa
jmp
and
add
cmp
test
fcmovnu
xor
sahf
pop
mov
call
dec
adcb
and
and
jno
and
add
lret
mov
call
movhps
add
push
inc
inc
rolb
sti
sub
dec
add
mov
js
add
mov
or
xorl
mov
jo
xor
ret
and
push
sub
lahf
sahf
and
cld
add
adc
pop
xor
movsb
enter
add
xchg
and
sub
int3
or
int
pop
jo
sbb
mov
rcr
mov
ret
test
ja
cwtl
add
add
jg
lea
pop
sub
xchg
mov
dec
xchg
mov
ds
shlb
aas
pop
add
loopne
xchg
ret
xor
lea
into
add
add
xor
imul
loopne
lock
daa
cs
jo
xor
dec
mov
loope
cwtl
push
cmp
scas
outsl
gs
add
xor
jno
xor
sub
nop
jb
addr16
cmc
out
movsl
sub
jne
jo
pop
call
push
orb
add
out
cltd
push
mov
icebp
pop
daa
imul
mov
pusha
shrl
push
out
jae
mov
dec
xor
and
pop
out
add
xchg
aam
mov
enter
sub
movsb
xor
xor
xchg
push
add
mov
inc
out
js
sbb
mov
insl
xor
sbb
ret
pusha
xor
sahf
add
iret
jp
imul
faddl
and
icebp
loop
into
inc
and
xchg
je
mov
in
adc
xorl
out
rorb
dec
sub
in
lock
sbb
or
adc
add
ljmp
push
addr16
icebp
jo
dec
sub
hlt
insb
movsl
xchg
add
jb
pop
mov
addb
out
in
fcmovbe
add
fdivr
xor
mov
push
sbb
dec
adcb
xor
outsl
jne
push
lret
fisttpl
insb
bound
negb
popl
stos
test
sbb
out
dec
mov
add
rorb
rorb
test
jo
pusha
dec
adcb
push
adc
pusha
jbe
inc
shl
dec
push
or
inc
and
stc
cmp
pop
and
popl
loopne,pn
call
add
add
sub
or
fiadds
cmp
add
adc
out
xor
mov
cli
repnz
sub
push
sahf
nop
ljmp
jns
es
dec
cmc
xor
lock
data16
cmp
sahf
test
rorl
or
in
cwtl
lods
or
and
lcall
adc
adc
xor
stos
jmp
cmp
jnp
rcrb
in
pusha
shll
iret
lret
and
mov
or
add
mov
and
push
jg
push
orl
out
rcrb
sbb
or
sbb
cmp
into
lock
push
lea
lock
xcrypt-ofb
pop
add
sbb
push
nop
or
mov
or
lcall
pushf
and
sub
cmp
add
addl
xchg
and
and
mov
and
enter
repnz
mov
mov
or
and
dec
std
enter
inc
scas
adc
adc
in
xchg
push
mov
je
inc
inc
andl
out
das
aaa
mov
pop
adc
pop
cmp
in
jne
xchg
in
imul
dec
lahf
in
sahf
cs
stc
sbb
sub
add
in
pusha
xchg
sbb
out
dec
mov
jle
out
mov
daa
ja
add
mov
mov
add
fiaddl
pusha
fsubrs
inc
jecxz
jbe
pop
xchg
rol
sub
into
and
sub
roll
dec
int
add
and
dec
push
nop
inc
cmp
push
stos
aad
xor
cmp
fstl
push
inc
loopne
mov
cmp
add
rorl
cmp
lods
das
mov
lods
add
jo
sub
cmpsl
daa
add
cwtl
and
int3
or
and
sbb
and
popf
test
scas
das
dec
pop
pushf
pop
inc
pop
stos
jns
sub
aas
xor
lcall
int3
pop
or
loopne
lea
adc
int3
mov
dec
loopne
in
mov
std
push
inc
in
mov
jmp
or
mov
add
shl
icebp
add
or
inc
inc
call
adcb
sbb
add
mov
mov
ds
out
ret
mov
push
testl
ret
sub
add
loop
cmpb
daa
cli
pushf
and
andl
dec
addb
cmpsl
hlt
insl
add
xor
shll
cli
adc
push
mov
mov
pop
jns
lock
add
push
sub
shlb
nop
sub
add
cmove
int
lock
stos
fiaddl
pop
jl
sbb
sbb
bnd
mov
and
or
pop
es
mov
adc
add
or
aam
jmp
pusha
cmpl
in
and
mov
aas
xchg
pop
jb
dec
and
or
xchg
inc
and
push
aad
adc
pop
mov
mov
lock
or
jl
ret
mov
push
dec
mov
test
sbb
cmp
ret
out
sub
mov
lock
int3
subl
adc
jno
pop
jg
mov
test
inc
rcrb
pop
and
adc
rcrl
mov
fcoms
in
in
xor
sbb
sbb
jb
aam
cwtl
adc
test
sub
sbb
int
xchg
adc
sbb
dec
dec
xor
movsl
xor
add
push
scas
ljmp
sub
pop
or
xor
adc
movl
lods
addl
add
mov
out
or
dec
fcmove
cltd
push
movsl
pop
leave
iret
sbb
dec
jae
pop
jb
or
add
pop
rclb
cmp
ret
inc
mov
adc
les
daa
and
rcrl
sbb
push
insb
pop
pop
or
xor
test
sbb
pop
scas
add
gs
icebp
lock
push
push
loopne
dec
mov
test
in
test
fimull
sbb
xchg
dec
call
hlt
sub
push
sarb
out
sub
push
and
and
outsb
sbb
int3
add
add
iret
add
dec
pop
xchg
push
inc
or
add
xchg
outsl
ds
popf
sub
lds
adc
dec
mov
push
pop
ret
jmp
inc
in
adc
pop
popf
imul
adc
int
or
or
ja
cmp
ret
dec
xchg
lcall
sbbl
dec
add
inc
xchg
shl
mov
vmread
mov
lret
jno
and
or
add
pop
test
add
lods
add
or
xchg
pop
and
cmpxchg
pop
and
test
sub
shl
adc
xor
push
ja
push
data16
add
lods
lds
repnz
add
fadd
loop
xchg
rorb
add
pop
push
stos
pop
cmp
push
inc
mov
mov
lcall
cmpsb
sti
movl
data16
pusha
pop
add
mov
out
lock
aas
jmp
cmpsl
out
ret
mov
mov
pop
inc
scas
nop
loopne
pop
push
cmpsb
scas
add
jnp
and
out
add
xor
mov
xchg
sub
add
call
xor
fsubrp
dec
add
insb
jo
sbbl
jns
hlt
xorb
add
je
adc
xchg
dec
clc
jns,pt
jno
or
pop
cmp
lret
loopne
push
jmp
insb
in
rcrb
sysret
cld
jg
loope
pop
fs
lock
mov
or
sbb
adcb
addl
add
xor
test
orb
add
lcall
push
shll
std
ja
and
add
mov
cmpsb
push
jne
mov
addr16
pop
mov
ds
data16
fadds
cwtl
inc
mov
mov
mov
test
pop
repz
das
decl
mov
or
in
mov
cmp
add
add
shlb
jbe
dec
cmp
add
pop
mov
xor
inc
jecxz
std
cld
mov
cmpsl
call
pop
lds
outsl
es
mov
add
lret
push
sub
ds
jmp
mov
cmp
pop
aas
inc
andb
push
test
dec
jg
add
adc
pop
or
mov
sub
sbb
add
dec
push
aas
int3
popf
sbb
pop
xchg
cld
cmpsl
paddusw
mov
inc
icebp
mov
testb
fstpl
cwtl
add
add
add
mov
repz
push
adc
add
rolb
jg
add
movsb
xchg
add
add
shrb
in
and
xchg
in
push
out
add
inc
in
cmp
add
xchg
xchg
jp
cmp
add
add
rorb
sub
mov
pop
inc
test
mov
push
pop
pop
orb
and
pusha
repnz
lea
aad
nop
mov
inc
popf
mov
int3
add
repnz
mov
or
jne
sbb
push
and
push
mov
outsl
sbb
push
jnp
movsb
adc
fs
cmpsb
shlb
xor
testb
or
mov
repz
add
in
add
pop
push
movsl
sub
xchg
in
add
pop
pop
mov
es
add
pushl
pop
stos
imul
test
inc
sub
aas
stc
push
add
pop
cwtl
rolb
sbb
fwait
push
sbb
orb
add
scas
add
pusha
cmp
add
cwtl
dec
cmp
inc
hlt
cmp
push
cmp
add
sub
sbb
aas
test
sub
mov
rclb
ror
pusha
test
dec
xor
or
mov
gs
frstor
xor
xchg
xlat
dec
add
data16
dec
shrb
lret
lods
sub
int3
lfs
ds
add
sub
push
scas
stos
inc
mov
enter
outsb
add
xorb
addr16
jmp
mov
jns
jbe
out
clc
or
mov
jne
or
cmovnp
jp
or
sbb
inc
jno
or
xchg
rclb
subb
in
scas
pop
jle
add
rcll
ret
in
jno
push
popf
jmp
jns
ljmp
and
and
addr16
add
and
loope
inc
mov
dec
hlt
push
add
mov
test
add
xchg
sub
fstpl
add
sbbl
xchg
rcr
add
mov
adc
rorb
fcmovbe
shll
les
add
aaa
ffreep
push
xorb
sub
cltd
nopl
jmp
repz
lods
and
add
hlt
call
leave
cld
inc
sub
add
push
mov
fwait
add
jle
add
out
adc
add
jle
int
add
add
sbb
test
lds
aas
add
aad
shr
xor
add
jno
or
in
push
push
add
lahf
leave
add
out
fcompl
andl
xchg
mov
sub
push
push
icebp
push
add
add
xor
mov
imul
icebp
sti
add
inc
xchg
add
xchg
fs
push
fwait
shr
call
and
mov
add
push
push
pop
cmp
bound
test
loopne
mov
or
jno
add
xchg
cmp
xchg
pushf
add
lods
jp
incb
xchg
add
cmc
jb
rcrl
mov
inc
sub
adc
int3
push
cwtl
and
or
lret
test
cmp
pushf
insb
sbb
roll
addb
jge
movb
rcrl
mov
fnstenv
mov
pop
popa
cmp
in
lcall
insb
adc
add
out
jnp
and
jb
fadds
add
fcompl
outsb
ret
sbb
sub
push
inc
enter
and
dec
or
fildll
sbb
mov
cmp
sub
arpl
movsl
sbb
cld
and
mov
shrb
xchg
push
lods
data16
in
sbb
into
fsubrl
icebp
jo
jg
test
add
push
pmullw
sahf
nop
adc
ja,pt
xchg
push
mov
sbb
mov
incl
adc
mov
lret
add
mov
xor
or
inc
mov
pop
inc
mov
test
cld
mov
stos
imul
jmp
scas
inc
popf
mov
flds
sbb
adc
pushf
sbb
sti
push
repnz
rcrl
and
imul
mov
inc
sahf
lret
and
shl
add
aam
inc
and
push
add
pop
popf
dec
add
cmp
cmp
mov
xchg
pop
add
fwait
and
sbb
dec
lods
andb
shll
pop
sarl
adc
ja
jle
xlat
xchg
add
jp
pop
push
adc
rorb
out
ljmp
gs
xchg
sbb
xor
jae
es
mov
mov
jle
sti
clc
cwtl
adc
mov
push
clc
mov
loop
add
sub
shl
mov
pop
adc
and
xchg
clc
jg
add
data16
mov
lds
cmp
popf
stc
dec
scas
lea
or
sbb
outsb
xchg
add
mov
push
or
mov
cmpl
out
arpl
mov
dec
add
arpl
and
xchg
fcomps
adc
nop
fs
pop
shrb
les
mov
daa
ret
adc
rclb
clc
dec
sub
fbld
add
mov
mov
push
or
push
mov
imul
in
cmp
xor
xchg
add
xchg
add
mov
push
pusha
inc
hlt
ds
daa
js
adcb
sahf
xor
shll
icebp
test
add
mov
repnz
mov
or
mov
sub
dec
jbe
add
add
dec
xor
cmp
lock
movlps
push
mov
push
mov
mov
sbb
push
push
jae
cwtl
testb
push
jbe
rcrl
and
dec
shlb
adc
cli
mov
and
dec
enter
add
leave
bound
stos
mov
cmpsl
mov
or
pop
loop
add
std
mull
popa
cmp
leave
and
int3
sub
or
xchg
rcrb
pop
add
or
pop
dec
adc
push
push
popa
push
jmp
mov
mov
ret
xor
inc
add
cmpl
add
pop
scas
pop
stc
xchg
iret
and
pusha
lea
jecxz
arpl
cmp
daa
pusha
jl
or
jl
scas
sarb
pop
fcmovbe
js
ficomps
or
jb
pop
andb
and
pop
inc
test
jp
lods
lods
movsb
cmpsl
push
in
inc
rolb
sbb
cmc
inc
in
or
or
or
xor
and
lods
xchg
cmp
fisttps
loopne
faddl
xchg
and
push
add
or
mov
add
xorb
test
insl
mov
mov
fistpl
push
cmpsl
push
shrb
push
pop
or
adc
cmp
in
add
jle
xor
je
pusha
lcall
add
add
sbb
pop
add
dec
lods
push
pop
dec
push
nop
and
mov
add
add
ds
xorb
scas
cmp
lock
stos
insb
shrb
fcoms
sub
add
sbb
dec
addl
in
leave
icebp
test
push
pop
insb
and
ret
scas
ss
mov
nop
sub
test
push
dec
cltd
xorb
fisubl
ret
cmpsl
push
bound
xlat
xor
loop
xorb
or
insb
lahf
add
push
mov
xchg
push
sub
add
xor
mov
add
les
pop
shlb
or
call
lret
lcall
pop
fbstp
movsl
cmpsb
pop
add
loope
popl
pop
scas
sub
jmp
mov
jp
mov
adc
fldenv
bound
das
ds
leave
push
in
xor
pusha
adc
sub
inc
jo
stos
xchg
or
mov
arpl
cwtl
sub
inc
out
push
fcoms
leave
push
lds
pop
sar
pop
mov
add
test
scas
movsl
xchg
add
sub
push
sbb
pop
dec
popa
mov
push
out
lret
sbbb
test
cli
cltd
cmp
cmc
and
lret
dec
nop
out
addl
jmp
add
loopne
in
and
xchg
insl
xor
enter
outsb
loop
inc
test
push
clc
sarb
or
fcomi
cmp
push
test
addr16
jbe
push
out
pop
pop
shrl
pop
jmp
roll
negl
sbb
or
out
mov
mov
xor
xor
add
cmp
mov
pop
addr16
add
mov
cwtl
out
sub
andb
ret
cmp
mov
ss
inc
add
rorl
bswap
cmp
mov
shrb
fcom
ret
ja
push
sbb
pop
xlat
daa
add
enter
ljmp
xchg
add
or
pop
mov
add
dec
add
sbb
sbb
add
dec
pusha
cmp
lock
mov
negb
fisubrs
add
xchg
cmp
verr
cs
movsb
xchg
add
popa
int
and
test
jno
add
xchg
jmp
sub
aaa
and
lret
xor
cmp
into
jnp
mov
mov
cmpsb
mov
rorb
loopne
mov
xchg
pusha
pop
sbb
lret
push
pusha
inc
mov
loop
daa
hlt
add
imul
or
and
leave
gs
sub
xorl
add
lahf
fcomps
js
add
ror
cmp
adc
mov
into
pop
add
in
dec
mov
push
pop
add
push
adc
xlat
sub
lret
mov
or
ja
pop
jmp
xor
shlb
insb
mov
clc
push
fbld
in
leave
push
fsubl
test
add
inc
pushf
test
les
rclb
mov
add
inc
add
mov
add
rcrb
push
out
add
cltd
in
nop
in
js
pop
add
mov
and
pop
scas
sub
addb
arpl
imul
xor
lahf
inc
xchg
pop
out
jne
add
rol
rclb
mov
xlat
into
or
ja
scas
sbb
push
inc
add
rcrb
ja
add
fidivl
decb
pushf
cwtl
jecxz
cmp
js
adc
loop
add
icebp
lock
adc
cmp
cli
mov
pushf
and
push
push
add
clc
js
sbb
pop
adc
push
and
std
mov
jbe
add
add
push
leave
push
nop
mov
inc
mov
add
movsb
sub
fldcw
rolb
sbb
xchg
push
mov
add
xchg
sarl
or
mov
test
cmp
jae
loopne
sbb
repz
loopne
mov
jae
add
shll
test
adc
shrb
push
mov
add
cmp
pop
movsb
push
lods
sub
stos
mov
add
ret
loope
dec
add
dec
add
adc
es
adcl
std
outsb
and
jl
loop
cmc
ds
mov
jbe
or
pop
mov
fildl
lock
add
shlb
pop
xorl
push
add
xor
int
inc
pushf
pop
add
add
loop
scas
cmpsb
pop
stc
test
imull
xchg
insb
outsb
es
xor
sub
bound
add
push
mov
add
sub
test
add
out
mov
add
shll
sub
mov
leave
lods
pop
cltd
out
sbb
add
lea
sti
dec
push
loopne
sub
ret
hlt
push
sahf
adc
cwtl
stos
add
clc
lods
in
lahf
repz
dec
clc
js
push
sub
ds
add
out
into
push
pop
add
sbb
dec
fcmovnu
add
mov
adc
xchg
addb
pop
push
fistpll
flds
sbb
push
fmuls
in
rcl
pop
addb
xchg
pop
push
inc
lea
sub
sbb
mov
xchg
and
loop
fsubrs
popa
stos
fiaddl
cli
jb
push
inc
and
adc
mov
add
ret
xchg
inc
ds
xlat
add
daa
jbe
arpl
fsubs
jo
roll
sub
xor
sbb
cltd
xor
shl
sub
inc
lret
ret
and
clc
lds
sbb
fwait
pop
push
cs
lcall
in
add
mov
adc
add
adcl
inc
mov
stos
add
mov
fsubs
add
jle
enter
cltd
add
mov
insl
addb
nop
or
cwtl
in
xchg
push
stos
cmp
jge
fsubrl
cmp
xor
subl
xor
or
or
stos
xor
inc
sbb
fistpl
sarl
bound
add
adc
add
sbb
std
cltd
lea
lock
and
in
push
jg
adc
test
add
push
adc
jo
cmp
in
add
pop
and
rolb
sbb
out
rolb
cmpb
inc
push
or
sarb
adc
cs
inc
jo
fldl
dec
mov
jmp
mov
push
cmovbe
rclb
xchg
in
sub
xor
nop
jmp
loop
xchg
outsl
das
lods
fadds
pusha
add
lret
jg
fcompl
imul
pop
pop
mov
adc
push
pop
mov
pop
push
pop
inc
pushf
imul
pop
mov
xorb
add
ret
or
or
mov
cmp
test
ret
mov
cwtl
jmp
je
cwtl
add
dec
adc
in
sti
in
cld
push
je
pop
xchg
hlt
pusha
inc
adc
sbbl
pushf
sbb
hlt
inc
inc
in
call
add
frstor
inc
xorb
add
insl
xchg
es
inc
add
push
mov
cmp
sbb
dec
and
jbe
sub
loop
adc
xchg
dec
inc
mov
xor
sbb
ja
adc
cli
addb
adc
inc
mov
cmc
jl
in
inc
mov
int
jno
dec
subb
repz
push
xchg
call
xor
inc
aas
jno
add
mov
mov
jb
clc
add
push
lcall
or
js
sbb
sahf
pop
xor
pushf
add
dec
mov
and
fistps
insb
dec
and
pop
or
xor
add
mov
lret
cmc
dec
ja
add
mov
lcall
mov
push
inc
mov
pop
lock
shll
xor
adc
test
pop
orb
xchg
call
mov
push
stos
cmc
xor
aad
add
addr16
mov
dec
out
test
mov
fisttpl
pop
and
popa
das
xchg
jmp
aad
xlat
insl
scas
jle
add
jge
mov
ja
sub
xchg
test
add
aas
xchg
arpl
cli
cmp
lea
fstpl
sbb
cs
xchg
incl
xchg
cmpb
pop
loope
pop
add
jb
pop
xor
jo
xchg
movsl
mov
xor
int
jne
addr16
sub
lods
sbb
xchg
outsl
pop
xchg
pop
bound
inc
pop
dec
cmp
push
add
rorl
add
imul
int
jle
add
mov
or
jno
inc
cmp
insb
adc
cmp
or
imul
inc
mov
imul
inc
add
movsl
incb
mov
add
lds
mov
add
pop
xchg
ret
pusha
cmp
nop
fidivrs
pop
scas
int3
iret
sub
lds
xor
stc
sbb
add
or
ficoms
repnz
pop
add
fstps
cli
idivb
nop
lsl
inc
clc
inc
push
daa
and
add
xchg
push
mov
sub
test
lds
cs
in
mov
mov
mov
pop
imul
cmp
xor
and
out
mov
flds
jae
pop
scas
pop
faddp
call
mov
push
stos
scas
imul
scas
or
add
test
or
test
mov
add
mov
or
mov
sub
inc
subl
xchg
stos
push
out
dec
int3
adc
jae
cwtl
mov
loope
sub
sbb
mov
ja
add
push
or
cmpb
add
icebp
shlb
cmp
testl
or
mov
jb
fs
and
loop
xchg
xchg
xor
movsl
push
fidivrl
je
cmp
dec
adc
bound
inc
push
add
std
mov
movsb
lret
push
insl
gs
dec
sub
or
inc
push
jae
rcr
test
inc
ss
cmpl
xlat
add
ds
add
rorl
gs
or
sub
add
cmpsl
testb
and
pushf
sub
and
sbb
in
inc
mov
or
and
inc
ljmp
jae
nop
xchg
adc
cmc
cmpsb
or
sub
mov
pop
lret
jno
enter
movsl
fbld
mov
push
add
dec
and
nop
bound
leave
mov
jmp
push
decb
inc
pop
xchg
and
and
adc
xor
xor
pop
adc
adc
add
mov
add
jb
mov
add
js
mov
add
and
rorb
jns
push
outsl
sub
push
mov
inc
pushf
dec
xor
add
clc
sbb
scas
and
mov
xor
add
dec
or
push
js
insb
fadd
mov
jo
fucomp
adc
inc
xor
inc
arpl
lret
mov
pusha
lea
ret
add
hlt
inc
xchg
sbb
ficoms
and
dec
add
dec
lret
fwait
mov
daa
or
cmp
mov
pop
add
cmp
sarb
add
inc
jns
add
stos
push
mov
sub
filds
jb
and
sti
cmp
nop
xor
xor
pop
cmpb
or
fwait
adc
insb
call
sbb
inc
dec
mov
dec
jge
xchg
inc
cmp
add
nop
mov
ret
push
lock
add
cmpsl
outsl
xor
lahf
fldl
sub
fsubp
pop
xor
add
inc
jecxz
sbb
loopne
out
jns
fld
xchg
xor
fldl
gs
jne
mov
mov
inc
add
aad
cmpsb
xlat
cwtl
cwtl
adc
iret
push
into
add
lahf
je
add
mov
stos
add
shrl
jno
test
pop
rclb
add
and
repnz
lret
js
inc
cmp
cmpsb
cmp
out
add
andb
add
add
or
cmc
sub
clc
loop
mov
lcall
adc
in
add
adcb
pop
cwtl
pop
ds
aas
faddl
or
out
jle
adc
pusha
cmp
pop
xor
xor
xorl
push
arpl
mov
jecxz
adc
sbb
in
outsl
jb
add
mov
dec
or
test
add
cmp
loopne
vpsrlw
lods
cs
cmpl
push
call
outsl
add
repz
mov
jp
mov
outsb
inc
hlt
inc
xchg
loope
add
cmc
sbb
sti
pop
mov
and
out
ret
scas
xchg
pop
fidivs
popf
xchg
push
mov
ror
add
lret
dec
jl
add
mov
pop
mov
xor
push
call
sbb
cmc
lea
jb
cmpsl
je
jbe
mov
push
repnz
les
aam
jnp
and
push
ljmp
pop
sbb
add
jne
sbb
fmull
rclb
mov
adc
ret
mov
loope
lock
xchg
hlt
ds
add
mov
or
or
sahf
mov
test
xchg
test
and
les
cmp
add
sbb
push
inc
pop
test
and
mov
cmpsb
inc
mov
mov
cs
fmuls
xchg
aam
jg
lods
mov
add
mov
repz
push
icebp
xor
add
or
mov
add
inc
cmpsb
sub
imul
xor
add
in
mov
dec
test
fisubrl
cmp
jmp
xor
cmpl
cwtl
adc
sbb
out
dec
nop
lods
add
enter
jbe
fildl
xor
sub
add
push
add
pop
fsubs
arpl
adc
push
lea
adc
mov
push
repnz
cmp
js
lret
mov
xchg
and
add
lret
fs
int3
jge
xchg
ficoml
ds
add
aas
xchg
xor
dec
dec
mov
les
inc
std
mov
push
xor
repz
mov
test
lcall
test
cmp
jo
jg
add
shlb
cld
add
mov
ja
pop
call
mov
mov
repnz
add
popa
add
adc
push
dec
stos
jbe
pushf
iret
jo
jle
mov
add
sbb
aaa
sbb
test
leave
adc
mov
and
adc
shrb
into
or
push
hlt
inc
movsb
push
data16
inc
lcall
push
leave
mov
mov
mov
add
mov
dec
in
cmpsb
mov
es
out
mov
insl
jp
pop
push
cmp
clc
aas
add
repz
bt
fwait
sarb
sub
xor
cli
mov
mov
adc
add
dec
je
popa
cmc
andl
xchg
in
inc
pop
enter
repz
sbb
imul
push
cs
in
jecxz
dec
rolb
dec
cmpsl
xchg
add
ljmp
mov
cmp
mov
imul
dec
add
in
scas
and
mov
add
and
and
out
rcrl
sub
adc
and
sub
sbb
add
jbe
testb
add
sub
jns
rclb
dec
jge
rorl
test
xchg
rorb
dec
je
gs
pop
out
jnp
shll
jle
stos
add
inc
cmc
mov
das
jae
push
roll
add
mov
insl
dec
lds
pop
mov
sahf
fisttpl
pop
cmp
inc
mov
xor
adc
xchg
xchg
cli
dec
jb
lock
xor
push
add
cmpsl
or
lods
es
cmp
add
lahf
adc
and
out
mov
out
mov
dec
loop
add
pop
mov
test
fildll
dec
push
subl
mov
test
sarb
sbb
fldl
movsl
inc
sub
jecxz
jle
add
add
cmp
movl
incl
jbe
mov
icebp
add
inc
jnp
mov
mov
lods
xorl
pop
popa
sub
add
push
jo
jl
mov
xor
pop
in
sbb
xchg
mov
pushaw
jo
pop
add
dec
in
inc
sub
ficompl
add
add
shrb
jbe
les
add
cwtl
int3
mov
xor
jo
push
cwtl
add
sti
rol
test
callw
cli
cmp
sub
add
pusha
adc
jecxz
icebp
add
mov
mov
or
lret
inc
mov
add
clc
push
fistpl
mov
jmp
or
cmp
notb
add
push
stos
and
nop
cmpsl
mov
xchg
jne
loope
sub
aas
rcrl
pop
bound
pop
sbb
ds
sbb
pop
and
out
enter
imul
pop
sbb
add
xchg
pop
rcl
addb
jbe
xchg
pusha
add
lods
dec
adc
paddw
ficomps
subb
jmp
sbb
aam
les
lcall
add
xchg
daa
mov
cld
fmuls
and
add
inc
movsb
test
jp
sbb
jmp
movsb
sbb
dec
ror
scas
dec
stos
scas
xchg
js
inc
push
adc
sub
push
loope
jo
add
mov
and
mov
mov
jl
push
jle
sbb
les
add
cmp
or
mov
mov
jl
dec
jnp
push
mov
add
sub
mov
add
aam
lds
notl
or
out
add
jg
xchg
repnz
sub
or
cmp
mov
test
cli
cmovp
pusha
pop
push
mov
repnz
add
out
sub
add
pop
mov
add
es
add
or
pusha
mov
and
push
mov
jb
add
or
jbe
push
jns
cmp
popl
pop
loopne
mov
sub
push
insb
jl
sti
mov
pop
popf
pusha
repz
es
mov
add
sbb
push
lds
outsl
mov
add
add
mov
mov
pop
cld
shrb
in
es
push
and
add
or
lods
add
xchg
mov
mov
stos
or
mov
loop
adcl
push
lcall
add
inc
mov
imul
orb
pop
or
out
nop
add
cs
jno
add
mov
loop
sub
repnz
xchg
out
xor
pop
arpl
aam
jle
add
cmp
ja
or
rolb
sub
mov
andb
pop
pop
add
cmp
sbb
push
das
mov
pop
push
dec
jp
and
nop
push
or
pop
loope
adc
arpl
test
cmp
aaa
pop
cmp
frstor
in
add
xlat
ret
and
arpl
jl
fwait
test
nop
jmp
or
or
leave
dec
sub
mov
test
mov
or
cmp
and
push
rep
call
jnp
jns
jg
or
ljmp
dec
push
sub
mov
lds
lods
leave
addb
sbbl
imul
mov
dec
xor
pop
push
sahf
enter
add
cmp
test
and
sbb
in
ret
adc
and
and
insb
add
mov
add
aam
fildll
add
enter
jmp
sub
and
outsl
adc
test
pop
daa
sub
sahf
ja
xor
orl
xorl
shrb
cmp
mov
add
imul
add
leave
sub
jecxz
lret
mov
clc
scas
stc
add
inc
rcl
ret
push
jg
push
adc
add
mov
jnp
ljmp
adc
pop
mov
data16
and
js
test
cwtl
mov
add
dec
movsb
sub
outsb
inc
adc
movl
pop
insl
mov
mov
enter
incl
and
aam
mov
mov
push
pop
cmp
dec
xor
test
andl
inc
inc
and
sahf
in
les
pop
add
scas
sar
out
fadds
leave
inc
push
dec
and
hlt
xchg
loopne
out
add
mov
repnz
sbb
dec
scas
std
inc
clc
icebp
shrb
stc
loopne
into
add
aam
ret
loop
aas
cltd
cmpl
mov
lea
cmp
and
mov
imul
iret
push
cmpsb
fwait
sbb
cmp
ror
sbb
mov
mov
out
pop
mov
adc
adc
cmp
add
iret
loop
das
cld
cld
sahf
add
push
pop
and
mov
pusha
inc
mov
das
adc
insl
add
test
pushf
out
add
aaa
dec
std
stos
inc
add
dec
jle
jle
punpckhwd
pusha
call
dec
jnp
push
add
push
inc
fstps
fidivrs
jl
xor
add
cmp
mov
adc
testl
mov
aaa
mov
sbb
idivl
add
xchg
xchg
sbb
add
push
shlb
add
xorl
cmc
in
add
cmp
xchg
in
jno
cmp
mov
mov
addr16
fistpl
sub
les
cmpsb
cmovne
call
nop
js
pop
rolb
les
shlb
add
push
filds
movsl
notb
cwtl
pop
add
roll
lret
sub
in
add
ljmp
dec
mov
and
outsb
std
inc
push
inc
sbb
in
sub
loopne
pusha
mov
cltd
pop
mov
mov
in
mov
add
ror
xor
dec
stc
mov
and
xor
mov
add
xor
dec
sti
add
add
push
add
add
jne
adc
imul
pop
fidivrs
add
jo
jge
and
sub
cmc
pop
std
sub
pop
push
lcall
xlat
jns
adc
xor
mov
xchg
and
pop
push
mov
iret
push
bts
cli
jae
jno
js
inc
add
xchg
outsl
out
out
dec
pusha
pop
rcrb
ss
xlat
or
into
push
mov
push
out
sbb
and
rcll
movb
and
les
or
fidivl
jno
daa
fldl
adc
push
pop
mov
mov
jnp
mov
push
jns
ja
sbb
mov
cmp
dec
jmp
push
add
xlat
xor
gs
shl
fisubrl
sbb
mov
popa
pop
aas
cmp
cmpl
inc
and
mov
jecxz
or
sbb
rcrl
xchg
cmp
add
inc
adc
imul
jg
ss
add
cmp
push
test
les
cmpsl
cmp
lods
jae
mov
add
in
out
or
shl
orb
outsl
add
loopne
fidivl
jno
call
dec
lret
xchg
xchg
enter
push
sub
jecxz
aam
cli
sub
test
pop
push
xchg
push
test
scas
mov
and
imul
cmp
xchg
add
inc
sahf
and
aas
nop
int3
pop
add
jns
mov
xor
cmp
add
out
dec
mov
out
movsb
add
or
jg
add
punpckldq
adc
pop
fcmovnb
lock
add
push
or
add
sbb
mov
test
lods
add
mov
dec
gs
pop
or
in
xor
add
cmp
mov
fcoml
lods
and
jo
out
add
xchg
xor
stos
pop
pop
pop
add
movsb
xchg
add
mov
enter
sub
outsl
add
xchg
mov
dec
pop
sbb
fimuls
xor
inc
negb
add
loopne,pt
mov
mov
push
or
add
rcll
mov
sub
jb
popa
push
mov
add
bound
jp
orl
loop
jae
lds
test
xchg
mov
sbb
xchg
lock
aas
add
std
inc
fs
loop
dec
add
unpcklps
add
lods
and
push
cmpsb
xor
outsb
mov
mov
dec
inc
add
push
xchg
aaa
push
in
cltd
aas
lahf
mov
adc
repz
add
xchg
lds
in
pop
arpl
lods
add
ljmp
push
cmp
jne
pop
out
ss
push
cmp
xlat
push
add
mov
test
popa
sbb
or
and
movl
push
rclb
data16
jmp
jecxz
inc
testl
dec
or
add
insb
jmp
leave
and
add
nop
cmpl
adc
xor
cmp
mov
clc
mov
dec
js
test
push
add
pop
add
push
insl
push
mov
jbe
pop
jbe
sbb
andb
aas
add
add
jmp
or
adc
xchg
ja
test
ror
sub
push
push
movsl
or
pop
adc
enter
or
lahf
testb
xchg
leave
or
fwait
jno
cld
lods
add
inc
movsb
inc
push
mov
add
cld
sbb
lods
iret
cmp
or
pop
jp
loopne
dec
nop
pop
sbb
clc
cmp
les
loope
xor
inc
fwait
cmp
shlb
xlat
push
pop
out
sub
jae
or
fistpl
jb
sarb
add
std
mov
into
mov
cmp
add
xor
in
cmp
shrb
or
add
or
mov
sub
test
add
dec
jle
in
mov
lock
mov
mov
add
push
arpl
mov
lahf
jbe
stos
add
cmc
push
sbb
dec
sub
imul
testl
push
add
lds
cs
mov
inc
sub
ficomps
add
xchg
pop
outsl
inc
in
and
pop
jg
sub
xlat
push
in
add
cmp
scas
add
mov
pop
lea
or
pop
sub
jne
std
inc
mov
sub
add
imul
fadds
cld
cmc
mov
xor
loop
add
ret
inc
stos
mov
imul
adc
push
pop
add
test
outsl
pusha
jnp,pn
shl
imul
sub
or
int3
pop
cmp
cmp
addb
pushf
and
sub
into
cli
out
sbb
cmp
xchg
stos
add
rcll
notb
add
je,pt
sbb
insb
xor
pop
fnstsw
xor
adc
pop
jmp
rolb
pop
mov
in
dec
fstpt
out
push
mov
jb
inc
cwtl
js
roll
leave
cmc
pop
mov
mov
add
in
out
cmp
xor
or
test
lock
adcb
cs
push
aad
loopne
cmpb
je
shr
out
mov
jo
xchg
mov
jb
lret
pop
push
rcrl
scas
stos
sbb
mov
push
pop
clc
cs
sbb
loopne
mov
add
xchg
inc
push
mov
jl
iret
mov
lret
cltd
das
lret
sub
push
cld
sub
add
dec
and
insl
movsb
shlb
pop
mov
popf
add
lcall
cmp
and
out
mov
hlt
int3
faddl
jo
rcll
mov
aad
pop
add
enter
mov
movsb
lock
add
mov
xchg
enter
mov
add
push
or
aad
iret
add
sbb
inc
andl
cli
inc
and
mov
sub
jle
or
push
leave
adc
xchg
jae
add
mov
mov
aas
testl
mov
stc
ja
rcrl
fisttpl
and
push
add
pop
ja
mov
stos
shlb
int3
add
add
push
add
jg
inc
push
mov
jno
pop
pusha
or
scas
adc
sbb
push
xorb
xor
call
rcr
add
sbb
loope
xchg
adc
js
lods
add
push
out
test
loopne
aas
jl
hlt
sub
cmp
subb
in
testl
jns
outsb
loopne
leave
nop
and
pop
dec
aaa
or
das
imul
sub
stos
imul
iret
out
jb
add
repnz
insb
cmp
fildl
cmp
mov
shrb
iret
cmp
add
nop
inc
adc
mov
jo
add
add
add
jmp
fnstsw
pop
aas
dec
insl
addl
cmp
adc
inc
pop
punpckhdq
or
nop
jmp
push
nop
in
pop
xlat
adc
jae
dec
das
mov
lahf
jg
cmp
shrb
jns
xlat
mov
sbb
out
add
push
das
in
fmuls
push
push
popa
std
andb
scas
sub
dec
xchg
ret
dec
mov
loop
sbb
int3
movsb
adc
adc
add
push
push
push
fdivs
jno
push
inc
adc
add
fstl
pop
inc
add
pop
mov
lds
nop
sarb
test
cmp
loope
sbb
sarb
aam
dec
pushf
sti
xchg
xor
enter
pop
mov
sub
push
jmp
mov
in
mov
mov
inc
les
add
add
cmpb
add
arpl
pop
xchg
dec
in
std
jp,pn
das
ret
sbb
xor
or
sub
pop
or
imul
loope
adc
cltd
fcmove
das
push
xor
add
push
ja
rolb
add
inc
push
jge
push
mov
shl
add
add
and
popf
jle
add
sub
inc
cwtl
enter
mov
push
ret
fnstcw
sub
cmp
push
loopne
inc
sub
xor
jl
dec
jbe
mov
add
test
rcrb
and
xchg
sarl
gs
lcall
sub
add
sub
jmp
rcrb
add
jno
in
sub
lret
mov
ljmp
add
jg
fcomi
aam
adc
mov
add
std
mov
xor
add
sbb
hlt
cmp
add
cmpsl
mov
ret
add
mov
sub
add
icebp
repz
fadd
mov
mov
inc
sub
shlb
sbb
fsubl
jno
mov
lretw
sbb
and
dec
mov
add
repz
add
mov
ret
add
adcb
gs
and
cwtl
adc
push
in
cmp
loop
inc
inc
jno
lock
cmp
push
cmp
push
loop
xor
out
xor
pop
mov
add
jb
shr
inc
add
jl
and
xchg
xchg
popf
mov
ljmp
inc
pusha
mov
es
fmull
push
fstp
sub
add
mov
pop
in
lods
cmp
mov
leave
sti
adc
add
roll
test
pusha
add
out
push
das
adc
ret
or
pop
sub
mulb
push
lret
cmp
dec
push
xor
add
add
jo
mov
cmp
loope
fisubrs
inc
cwtl
call
add
push
pop
aaa
inc
sub
pop
cmc
cmp
out
popl
bound
xlat
cmp
pop
add
dec
and
ljmp
sub
add
jle
mov
xchg
sbb
mov
lods
and
add
negl
mov
or
sbb
nop
xorl
sbb
add
aaa
fsubrl
push
push
popa
add
pop
clc
sub
mov
jl
and
fcomps
sahf
or
jp
mov
les
les
mov
lret
add
iret
rorb
add
and
loopne
jle
sub
adc
mov
xor
inc
and
push
jno
add
repz
adc
jne
and
movsl
sbb
popf
jo
inc
out
ret
js
jmp
subl
pop
push
pop
jbe
add
sbb
arpl
loop
xor
sub
movsl
std
lods
rorb
mov
je
mov
rolb
call
add
int
addb
enter
mov
stos
sub
add
add
pop
mov
mov
add
add
mov
ja
inc
or
jle
pop
jb
pusha
lea
jge
cltd
loope
lock
cmp
fmull
cmp
bound
jns
add
mov
sub
addb
daa
dec
sbb
add
out
dec
fwait
inc
fadds
sub
leave
rolb
cmpsl
jmp
mov
pop
cli
inc
loopne
adc
insb
dec
jne
bound
data16
pop
out
and
fldenv
scas
testb
and
cmp
add
sub
xor
ret
cmc
inc
jbe
or
xor
roll
sbb
cli
mov
imul
rcll
movsw
mov
cld
dec
jle
je
xchg
xor
jle
push
movsb
sbb
dec
popa
out
inc
xor
push
stos
hlt
push
jmp
call
jno
js
add
arpl
clc
push
mov
icebp
cs
sub
cmp
aad
jge
test
mov
fidivrs
add
cld
aaa
icebp
fisttpll
or
add
mov
scas
leave
xor
stos
add
or
test
and
pop
pop
loope
mov
push
push
jnp
call
cltd
test
pop
push
repnz
mov
add
mov
pop
jge
mov
inc
or
das
mov
add
mov
int
add
sti
inc
xchg
ret
aam
rolb
mov
add
or
js
icebp
dec
sbb
int3
and
sbb
sbb
lea
sbb
adc
inc
pusha
dec
xchg
popa
arpl
fiadds
adc
mov
aam
dec
out
cmc
mov
add
adc
pushf
int3
bound
pop
shl
shll
inc
add
push
mov
cmp
mov
and
mov
add
inc
cmpsb
loope
push
notl
pop
repz
add
shr
fcoms
addb
mov
xor
scas
xor
push
sahf
sub
xor
pop
mov
in
push
imul
cmp
subb
mov
xchg
add
insb
jecxz
cmp
pusha
popf
repnz
mov
fsubs
add
adc
jne
mov
xlat
pushf
in
dec
add
xchg
or
cld
movsb
pusha
rclb
push
cmpl
or
repz
add
mov
add
in
jecxz
das
daa
mov
mov
out
stos
sub
push
jge
filds
stc
and
and
dec
rol
bound
sbb
int
or
mov
push
js
pop
fadds
int
std
push
sub
shlb
sbbb
inc
inc
dec
fldl
xor
mov
or
push
scas
add
jl
int3
rol
adc
push
enter
xor
add
jmp
shlb
add
adc
pop
xor
cld
test
xor
mov
mov
rolb
or
add
jbe
out
popa
in
jle
les
ret
mov
jns
fcmovnbe
cmc
lcall
xor
xor
and
inc
add
push
or
mov
testb
cltd
mov
addb
sbb
jno
aam
sub
lods
inc
les
xor
adc
pop
pop
orb
inc
sub
add
jl
adc
or
jb
pop
dec
rolb
fs
inc
movsl
in
pop
xchg
mov
hlt
and
sub
shrl
add
push
xor
icebp
into
scas
push
int3
jo
jbe
mov
sti
sahf
add
ljmp
add
lea
jmp
cmp
stos
cmp
push
movsb
nop
aad
dec
add
ja
ret
lds
cmp
cld
outsl
lcall
mov
add
sbb
jl
loopne
roll
and
ds
fwait
xor
and
into
mov
imul
pop
mov
sub
and
mov
add
fildll
push
andb
jnp
pop
mov
or
dec
or
mov
sbb
sbb
and
xor
or
test
fiaddl
adc
sub
xchg
nop
dec
adc
lcall
mov
aad
pop
mov
sub
and
adc
dec
xor
fnop
out
movl
mov
jo
jle
cmovle
rcrb
add
insb
mov
lods
or
add
sub
mov
add
int
repnz
mov
movb
fildl
iret
push
push
push
xchg
pop
jp
mov
cmp
jle
insb
inc
fdivr
jmp
push
lret
das
sbb
and
sub
push
or
mov
enter
roll
ljmp
es
std
ret
xchg
add
cmp
xchg
cmp
fistl
jnp
add
xchg
sar
ds
fsubs
jo
or
cmp
add
mov
call
fwait
subb
cmpsb
pop
divb
dec
push
adc
test
mov
mov
fdivrl
pushf
addb
mov
pop
dec
dec
sbb
mov
inc
add
push
inc
lret
ret
add
ja
add
popa
out
cmpsl
jl
mov
sti
push
stos
or
loope
adc
push
cmc
xor
add
or
jno
cld
adc
add
out
add
mov
sbb
das
arpl
xchg
orb
jns
or
push
inc
loopne
cmc
inc
add
mov
in
xor
out
or
jmp
cmc
push
lret
pop
sub
push
sbb
xchg
lock
movb
rorb
push
aam
scas
adc
mov
rcll
xchg
jecxz
shl
je
repnz
pop
fld
adc
bound
sub
lock
dec
jp
sbb
ljmp
ljmp
mov
fwait
lea
rol
inc
sub
xchg
add
por
pop
mov
jmp
dec
in
xor
daa
add
mov
cmp
roll
fdivs
movsl
add
push
mov
pop
pusha
sahf
and
movsl
inc
cmp
inc
js
mov
jle
or
in
sbb
popa
mov
lods
or
leave
dec
les
lret
out
sub
push
add
jbe
str
mov
pop
inc
jnp
lds
or
enter
adc
xchg
sbb
lods
sbb
in
lods
mov
pushf
mov
ds
adcb
mov
push
in
verw
adcl
or
cmpsb
fmuls
inc
jg
loope
add
rcr
das
fiaddl
push
imul
cmp
rcrb
lret
out
xor
add
add
xchg
fcmovnb
xchg
pop
out
dec
xor
or
mov
ljmp
stos
std
inc
outsb
ja
adc
rolb
test
je
mov
ljmp
inc
xchg
pop
pop
lds
pop
and
xor
fs
jl
jnp
clc
jg
jno
adc
mov
mov
cmp
add
inc
add
addr16
movsb
cmp
pushf
add
and
fwait
adc
mov
cmp
or
inc
lods
sahf
mov
push
jge
lcall
or
lret
and
add
mov
gs
fldl
fs
or
xor
mov
in
and
gs
adc
sub
sub
jp
or
fsincos
insb
sbb
add
jns
adc
xor
add
inc
jns
sbb
mov
rcll
cmpsb
push
dec
push
sysexit
mov
add
out
push
popf
push
add
sbb
sbb
cmp
mov
lcall
adc
jl
jnp
mov
mov
imul
mov
fwait
jecxz
js
add
ja
leave
addb
or
rol
add
lea
inc
adc
repnz
add
pop
inc
mov
test
adc
xor
scas
aas
bsf
or
mov
xor
cmp
push
add
xchg
pop
pop
testb
push
push
outsl
add
xchg
mov
in
pusha
pop
sbb
pop
push
add
xor
jg
es
xchg
add
stos
sbb
mov
int
out
xchg
add
dec
cmc
cmpb
orl
sbb
stos
xor
add
or
aad
sbb
popa
mov
faddl
addl
cli
jns
sub
add
aam
add
cld
pop
fisttps
jle
cmc
add
jge
xchg
sbb
xor
lcall
add
mov
add
xor
mov
pusha
mov
negl
xor
call
outsl
add
jb
add
ret
aad
aas
shrl
push
jge
jne
test
or
mov
pop
or
icebp
dec
and
xor
mov
int3
lahf
je
out
jecxz
mov
mov
fwait
mov
mov
inc
aam
pop
lcall
sbbl
idivb
enter
or
xor
into
jae
or
push
xchg
in
cltd
rolb
in
into
shlb
mov
ja
test
mov
jge
adc
loopne
fs
cmpsl
sub
jnp
xor
or
stos
xchg
and
push
and
test
jl
call
sub
mov
pushf
add
pusha
mov
xchg
dec
rolb
icebp
push
dec
scas
or
cmpsl
clc
pusha
shlb
int
je
add
or
inc
inc
ret
rolb
sub
mov
sbb
mov
dec
mov
push
jne
rol
inc
xor
or
inc
test
jae,pn
in
cwtl
push
cmp
dec
mov
pushf
repz
sub
mov
and
jg
cmpsb
movsl
out
adc
jp
jge
int
nop
fisttps
nop
mov
add
mov
inc
adc
jle
je
mov
out
cwtl
mov
and
mov
in
in
and
jle
push
mov
pop
out
cmp
or
decb
leave
repz
xor
punpckhdq
popl
xchg
sbb
xor
add
test
add
pop
mov
mov
ret
pop
mov
add
outsb
sar
inc
cwtl
addb
mov
in
dec
mov
sarb
xor
stc
outsl
clc
and
jo
or
add
pop
jo
adcl
mov
push
or
sub
cmpsl
cmp
xor
or
rdpmc
fsubl
loop
std
mov
add
mov
jb
xchg
push
rorb
js
mov
loope
fldl
movsl
test
lea
mov
or
in
xor
aam
dec
add
outsb
push
inc
mov
xchg
fcom
loopne
test
fimuls
enter
add
fsts
xchg
push
es
dec
sub
dec
shlb
das
imul
sbb
sbb
sub
out
push
xchg
insl
pop
mov
add
out
add
aas
into
lcall
jbe
ja
push
push
pop
faddp
dec
popf
in
xchg
clc
sbb
loopne
insb
or
lock
jg
sbb
je
out
test
push
inc
ficoms
or
jne
add
inc
into
out
popa
mov
add
inc
xchg
addb
and
pop
xchg
adc
or
sbb
sub
inc
xlat
lret
cli
xchg
cmpb
add
mov
pop
add
sub
mov
jno
sahf
cmp
pushf
or
push
ljmp
or
and
lahf
sub
xor
cltd
adc
ret
arpl
loopne
add
cld
adc
or
mov
add
int
lcall
and
or
sti
jb
adc
adc
add
add
push
movl
pop
fwait
enter
add
mov
push
push
xor
inc
jbe
xor
push
push
or
lock
add
and
inc
les
adc
cmpsl
push
pusha
dec
sub
push
pop
mov
test
xchg
fbstp
mov
int3
add
adc
jl
repnz
jg
lock
mov
add
and
mov
and
pop
or
push
mov
mov
sbb
inc
rolb
jne
inc
xchg
push
shl
sbb
dec
movsl
xchg
xlat
and
cmp
sbb
mov
cmpb
mov
add
ja
add
sub
pop
inc
sbbb
or
dec
je
mov
andb
pusha
adcb
call
add
pop
jnp
testl
add
push
iret
add
fcoms
jb
push
xor
jno
ja
add
inc
aad
cmp
icebp
hlt
cli
call
shl
inc
jecxz
jne,pn
add
add
or
pop
jg
or
jl
popf
out
out
inc
and
and
bound
dec
shl
fidivs
addr16
add
pop
add
add
outsb
mov
test
jecxz
inc
js
orb
mov
add
aam
mov
push
stos
int3
out
enter
add
dec
sbb
call
jle
imul
loope
dec
addb
add
fdivs
ss
in
add
jbe
or
add
mov
mov
xor
std
lds
es
xchg
fsubr
cmp
mov
jmp
popa
push
sbb
mull
push
pop
fs
xchg
sbb
add
and
jg
or
sub
cmp
inc
jb
inc
jg
dec
pop
dec
add
cld
sahf
daa
shrb
add
fwait
jo
sbb
ljmp
and
push
push
adc
jp
xchg
xchg
or
inc
loope
aam
xchg
outsl
inc
loopne
jecxz
mov
add
add
jo
dec
add
jg
pushf
ja
std
sub
stos
adc
dec
aas
add
pop
pop
sbb
cwtl
mov
ljmp
push
push
push
jae
pop
shlb
and
push
sbb
aam
push
mov
pop
cld
test
add
repz
out
dec
or
or
rclb
cmpsl
movsb
ret
or
dec
sub
std
test
adcl
or
adc
mov
mov
stc
push
mov
add
ret
adc
dec
pop
fsubs
cmc
inc
cwtl
push
sub
ss
cmp
addr16
mov
movsb
ret
mov
rcll
das
lcall
adc
lock
ja
sahf
mov
iret
out
and
fcomip
and
pop
pop
or
inc
push
xchg
pop
mov
xchg
popa
fidivrl
and
cmpsl
or
adc
sbb
or
cmpsl
push
shlb
repnz
and
std
mov
push
pusha
pusha
mov
mov
pop
sbb
dec
std
add
xchg
sub
inc
push
inc
sbb
scas
mov
jl
enter
cwtl
mov
es
hlt
add
je
dec
add
xchg
push
hlt
test
and
mov
xchg
sahf
adc
dec
add
insb
sbb
int
aad
xchg
sbb
icebp
dec
sub
and
lea
sti
scas
pop
mov
dec
mov
shlb
insl
xor
adc
add
roll
cs
add
jnp
add
hlt
nop
lea
push
add
pop
ficoms
scas
mov
inc
lcall
add
or
push
ret
mov
ret
stos
rcrb
mov
ret
movsb
xchg
jecxz
rorl
jne
inc
fstps
and
sbb
lds
lret
clc
sbb
int3
cwtl
cld
cwtl
add
adc
jge
xorl
dec
fldt
fstp
int3
sub
push
mov
sub
pusha
fsub
ret
mov
adc
mov
xor
mov
and
xor
leave
dec
sbb
add
mov
jg
sahf
sarl
push
mov
cmp
inc
add
mov
add
aas
lahf
push
add
aam
call
fnstenv
loop,pn
idivb
mov
pusha
pop
pop
add
push
enter
add
pop
cwtl
loopne
roll
push
jmp
and
or
iret
inc
faddl
sarb
jno
add
pop
imul
xor
insb
and
add
movl
adc
jge
scas
in
repnz
ret
cld
mov
shr
mov
js
xchg
push
imul
dec
sahf
mov
lret
lret
add
or
pusha
jne
or
sub
sub
add
in
jb
pop
dec
sbb
mov
inc
mov
mov
and
dec
mov
inc
fmul
cwtl
sar
pop
arpl
sahf
xchg
jbe
inc
les
push
repnz
mov
fcmove
fmuls
xchg
xchg
call
outsb
push
popf
mov
ret
subb
adc
clc
xlat
push
lret
inc
cmpsb
add
push
push
pop
jmp
shufps
repz
sbb
daa
add
test
lret
das
cmp
rclb
and
les
punpcklbw
cmp
jns
popa
pop
and
test
lock
imul
aam
daa
add
icebp
dec
adc
add
fcoms
jmp
add
pop
enter
xabort
je
mov
sbb
mov
pushf
dec
add
pop
adc
inc
or
clc
inc
cmc
int3
inc
or
mov
dec
xchg
out
cld
bound
push
mov
ja
adc
lea
dec
adc
sahf
call
in
or
or
push
test
mov
and
sti
jmp
mov
add
arpl
mov
add
lahf
imul
pop
xlat
lret
cmp
jg
mulb
ljmp
sub
shlb
cld
mov
popf
or
hlt
cli
mov
cmp
clc
jecxz
mov
pmaddwd
fdiv
and
rorl
repnz
pop
loope
add
faddp
mov
sbb
hlt
subb
sub
dec
sbb
popf
out
rolb
js
sbb
fwait
popa
cwtl
dec
jo
add
int3
test
xchg
loop
mov
aam
mov
fdivl
pop
ds
push
cmpsb
mov
sbbb
dec
outsb
sbb
insl
jns
push
fcompl
xchg
cld
inc
sub
pusha
pop
arpl
rcrb
push
pop
xor
mov
cmp
mov
jae
cltd
pop
or
xlat
push
jl
aaa
mov
jnp
test
fwait
int
dec
inc
add
js
popf
mov
gs
packssdw
jmp
xchg
add
add
dec
sti
mov
cmp
pop
cmp
sbb
xchg
push
mov
sub
cmc
cmp
cmp
mov
stos
sub
dec
push
stc
add
sbb
pop
fidivs
jbe
rclb
cs
loop
xchg
testl
lret
mov
lahf
nop
and
bound
sub
xor
push
add
jo
and
mov
cli
mov
and
lods
inc
test
std
jp
jae
add
mov
inc
out
mov
add
in
mov
add
repnz
out
inc
clc
lods
push
out
daa
aaa
das
fadds
nop
xchg
loop
push
stos
cmp
inc
pop
mov
xor
pusha
into
hlt
add
fimuls
add
ret
mov
add
jb
stos
xchg
inc
rorb
mov
cmovo
hlt
loope
sbb
insb
jecxz
mov
or
and
insl
int
hlt
mov
mov
xor
or
mov
std
clc
and
data16
inc
in
add
push
repnz
shrb
fwait
push
cmp
jb
or
push
push
insb
fstpt
aas
add
lea
jmp
cmp
rolb
add
in
xchg
inc
pop
jo
add
and
imul
cli
cmp
xchg
mov
in
mov
inc
jbe
lret
lahf
enter
sub
cwtl
add
cltd
adc
jecxz
bound
and
shrl
lds
push
mov
or
data16
out
xor
pop
test
adc
add
jecxz
pop
out
mov
jp
inc
je
int
dec
jns
xor
out
dec
cmp
ror
sub
shl
fwait
pushf
data16
mov
add
sbb
add
mov
xchg
add
shll
add
fcmovne
and
ret
xchg
cmc
aaa
push
xorb
jl
sub
inc
js
adc
adc
mov
icebp
aas
cli
mov
add
pop
mov
add
lret
loopne
dec
ret
push
stc
push
clc
outsl
and
sti
int3
in
addr16
cwtl
dec
add
cli
xchg
nop
lret
add
or
mov
adc
pop
add
repnz
add
jmp
add
pop
sub
add
test
add
cmc
pop
sbb
inc
xor
cwtl
in
xchg
inc
sbb
mov
cld
adc
testb
adc
jl
leave
sub
faddl
sub
dec
jmp
adc
xor
loopne
int3
clc
cld
add
jmp
hlt
sbb
pop
dec
mov
sbb
sbb
pop
je
ss
pop
adc
addr16
mov
scas
aad
loopne
rcrl
subb
dec
mov
insb
jl
les
inc
xchg
popa
or
xchg
mov
adc
iret
add
popf
jno
xor
add
push
xor
push
mov
rorl
dec
sahf
movsl
clc
mov
push
sbb
add
into
rcll
hlt
xor
rolb
leave
clc
cltd
cs
sub
adc
jmp
inc
fidivrs
mov
gs
outsl
andl
cmpb
sub
jle
push
testl
xor
pcmpgtb
xchg
xlat
movsl
push
fiadds
in
sub
imul
dec
xchg
scas
add
xchg
loopne
pop
cmp
cwtl
add
sbb
loopne
push
pop
and
jae
cld
js
adc
inc
dec
xor
and
lods
cmpsl
push
cmp
mov
push
adc
add
enter
sti
stos
pop
sub
filds
out
push
or
into
mov
addb
jae
or
ret
pop
outsb
in
cmc
pop
jl
testl
sub
mov
jo
inc
and
pop
je
mov
cmc
pop
pop
jle
loopne
sub
push
xchg
in
fisttps
pop
enter
push
je
or
daa
cmc
add
call
std
lcall
les
pop
stos
rol
fwait
sbb
add
inc
sbb
pavgw
add
jl
jo
sbb
pop
pop
mov
bsr
jg
push
inc
in
sbb
dec
xchg
push
xchg
ret
fidivrs
xchg
je
fcoml
popa
mov
lahf
loopne
cmp
adc
pushf
les
iret
daa
pop
xlat
jno
cmpsb
test
inc
das
fsubrp
aaa
pop
add
sub
mov
loope
pop
xor
orb
jle
jmp
dec
fiaddl
mov
sbb
sbb
add
lock
loopne
bts
in
sahf
movsb
pop
sub
sti
in
push
mov
pop
add
fnsave
dec
jp
add
and
pop
pusha
jmp
subl
add
pop
dec
shlb
sub
jl
pusha
mov
repnz
adc
adc
add
dec
int3
jo
mov
pop
adc
xchg
ret
inc
xor
pop
sbbb
clc
jne
sarb
jle
shlb
orb
aad
aas
pop
dec
loope
add
out
mov
push
ja
dec
jnp
mov
mov
mov
sbbb
xor
sub
pop
sub
pop
pop
cmpsb
mov
fsubl
mov
add
pop
cwtl
xchg
xchg
inc
pop
xor
in
ror
leave
xor
dec
in
sbb
xor
mov
add
adc
fmulp
add
movsb
adc
clc
imul
cltd
mov
xlat
xor
jb
ja
xor
sbb
rol
sub
adc
mov
jae
and
dec
lods
push
in
xor
loopne
dec
push
push
add
dec
cltd
mov
jns
add
in
push
cmpb
sbbl
xchg
add
push
aad
gs
add
mov
or
pusha
fsubs
jns
fisubrs
inc
jge
mov
das
or
out
std
sub
adc
mov
mov
jae
xchg
mov
lahf
mov
mov
mull
sbb
repz
xor
pop
lret
sarb
sahf
add
imul
aam
cmpsl
fmuls
dec
xchg
add
add
xchg
mov
mov
xor
movsb
dec
or
cmc
add
hlt
idivb
ret
xchg
loopne
xchg
nop
in
add
mov
add
dec
nop
push
enter
xchg
fmuls
and
jns
and
adc
daa
lcall
loop
das
outsl
dec
mov
dec
sbb
fisubl
or
iret
push
stos
out
aas
paddq
or
add
jge
in
lds
iret
dec
cld
int
in
push
sbb
cmpsb
or
push
test
xchg
add
dec
mov
cli
enter
add
scas
nop
outsl
mov
jne
shlb
add
sbb
cld
adc
pop
or
out
std
shlb
mov
and
pop
jns
inc
xor
mov
sub
shll
in
scas
push
add
adc
clc
mov
repnz
adc
xor
mov
push
outsb
cmp
into
cli
add
std
adc
push
cmp
cmp
or
dec
xor
in
mov
dec
sub
idiv
mov
inc
jle
movsl
pop
jl
cld
push
shr
push
shll
icebp
movsl
mov
add
jns
xor
dec
xor
jnp
xchg
dec
mov
addr16
adc
sahf
mov
add
xchg
add
sbb
ficoms
add
rcrb
cli
add
jg
subl
pushf
push
sbbb
and
pop
dec
add
out
js
out
pop
sti
jmp
and
xor
ds
inc
lock
clc
mov
add
cld
jbe
out
jp
rorb
mov
movsb
pop
mov
fwait
je
add
sarl
int3
xlat
jge
xchg
mov
int3
in
or
loope
int
mulb
adc
and
nop
sub
push
mov
adc
pop
pop
mov
adc
push
add
mov
inc
sub
push
add
adc
movhps
push
clc
sub
xor
add
jbe
inc
test
sbb
fimuls
and
sub
sub
sub
clc
adc
enter
cmc
out
andb
std
mov
jo
pop
add
push
pop
sub
xchg
pop
push
and
pop
mov
mov
xchg
push
sub
or
push
cli
in
addb
xor
daa
leave
xchg
fsubl
dec
adc
xor
mov
adc
jns
inc
and
es
add
lock
test
or
ret
or
adcb
sbb
add
bound
mov
mov
psllq
xchg
cmpsb
add
lods
jne
cmc
sub
std
shr
out
xor
nop
xchg
push
cmp
add
aas
imul
sti
dec
dec
jmp
scas
repz
mov
out
mov
sahf
sbb
sbb
mov
dec
add
in
out
jg
add
enter
das
imul
lret
sbb
cli
pop
js
add
xor
fs
in
add
lock
add
mov
stos
add
sti
sbb
pop
dec
xchg
sar
fbstp
add
sub
andl
rolb
pushf
sbb
or
add
sbbl
lods
lea
add
or
ficoml
and
mov
sub
xlat
dec
mov
inc
push
jns
lock
sbb
movsl
movsb
enter
mov
addb
movsb
add
or
mov
icebp
dec
ljmp
add
movsl
mov
push
popa
fisubs
int3
insb
mov
or
add
add
ret
push
jmp
jp
mov
xchg
sbb
aaa
mov
push
movsb
mov
lret
cld
cwtl
mov
stos
cs
in
add
xchg
iret
out
push
fnstcw
and
mov
or
push
test
mov
dec
jp
adc
popf
xchg
add
push
sub
sbb
mov
lock
inc
push
or
sbb
mov
sub
add
cmp
jae
orb
fimuls
cmpsl
gs
popa
lods
sub
add
push
ret
cmp
loopne
test
mov
mov
sbb
push
add
sbb
pop
cld
clc
in
mov
icebp
mov
enter
xchg
mov
xchg
or
out
push
mov
stos
mov
or
mov
jae
push
enter
adcl
mov
mov
mov
aam
fiaddl
cmp
pop
roll
jo
negb
clc
add
ljmp
xchg
add
sti
mov
push
ljmp
cltd
push
frstor
dec
data16
insb
pop
mov
aam
add
scas
mov
xor
daa
pop
mov
xlat
daa
jae
add
pusha
gs
repz
adcb
add
cmp
andb
in
xchg
aad
dec
adc
pop
mov
xor
ror
push
dec
mov
cmp
xchg
daa
and
aam
aas
add
in
in
mov
call
cs
mov
sahf
dec
aaa
xchg
popa
cmpsb
mov
aam
dec
mull
add
or
call
jo
and
adc
lret
sbb
movsl
lds
push
sar
inc
cs
inc
mov
sbb
outsb
and
cmc
data16
adc
jbe
in
adc
jmp
cmpl
push
leave
add
imul
test
outsb
mov
add
dec
xchg
out
stos
dec
xor
add
ljmp
cld
pop
fdivrs
inc
jp
jae
outsl
add
pop
loope
cmpsl
jb
adc
mov
push
insl
jg
add
aas
mov
jbe
xor
xchg
add
lea
sti
xchg
add
or
adc
jle
dec
add
push
push
stos
add
lds
repnz
add
lock
aam
push
and
outsl
pop
add
mov
mov
imul
repnz
loope
adc
fstpl
out
test
mov
iret
xor
pusha
adc
mov
test
jecxz
push
add
xorb
add
mov
jne
hlt
das
mov
push
jg
add
in
pop
xchg
and
push
in
adc
insl
and
add
out
xchg
mov
add
adc
mov
mov
pop
push
icebp
dec
cltd
adc
mov
pop
cmpb
sti
pop
add
pop
sbb
push
mov
dec
les
and
rclb
jg
mov
xchg
sti
fwait
and
enter
dec
dec
jle
test
movsb
mov
mov
insl
stos
sub
jbe
fidivrs
sbb
xchg
sbb
sbb
push
add
out
in
dec
les
push
lds
leave
daa
xor
pop
iret
ljmp
add
in
pop
mov
dec
and
add
lods
or
mov
add
xchg
dec
inc
arpl
adc
push
and
dec
inc
nop
jl
xchg
push
push
movsl
fcoml
call
cmp
dec
ljmp
outsb
or
les
push
pusha
dec
mulb
or
cs
in
fsubs
push
push
or
sub
sbb
rolb
pop
imul
mov
xor
mov
cmp
sahf
enter
lods
push
mov
pop
stos
mov
into
aaa
mov
mov
fdivl
movsb
daa
in
out
add
out
sbb
push
insl
xchg
out
addl
dec
mov
fs
outsl
fwait
mov
dec
add
ja
testb
pusha
mov
jecxz
leave
nop
add
icebp
rolb
push
sahf
fiadds
andb
cwtl
sbb
mov
xor
iret
and
pusha
add
or
int3
filds
jl
into
rcr
mov
mov
adc
sbb
and
fdivl
adc
push
sti
cmp
and
hlt
icebp
or
push
and
add
add
in
pop
sbb
stos
jb
je
add
pop
scas
sbb
xchg
addr16
stos
adc
test
add
jnp
push
ret
inc
call
and
xor
lds
jle
add
pop
shlb
xor
shrl
mov
nop
stc
xor
das
mov
or
pcmpeqw
imull
pop
add
roll
iret
adc
push
sub
insb
popa
ljmp
pop
add
into
mov
adc
fstl
sub
push
xchg
push
sub
or
test
mov
lods
pusha
rcrb
sbb
scas
mov
in
aad
add
sub
add
or
jns
xchg
mov
in
stos
fiadds
or
fwait
xchg
das
sub
lea
ljmp
xorl
lea
std
loop
sbb
pop
and
pop
popa
push
mov
sbb
loopne
inc
inc
dec
add
hlt
les
mov
add
mov
add
jnp
ret
xchg
cmp
dec
and
xorl
addr16
adc
push
je
ljmp
cmp
and
jg
add
sar
xchg
mov
not
mov
icebp
xchg
add
and
insl
sub
gs
push
cmpsl
adc
mov
push
or
fildll
pop
sbb
ret
mov
pop
add
dec
iret
mov
adc
add
in
data16
mov
aaa
mov
add
or
xchg
stos
leave
push
out
add
adc
es
mov
inc
scas
lods
ret
cmp
bound
cli
push
sarb
add
shrb
cltd
add
les
adc
stos
add
mov
push
add
sbbb
add
jno
imul
inc
jb
add
cmp
bound
cmpsl
into
loopne
xchg
dec
add
insl
leave
mov
cmp
sbb
mov
fdivs
mov
adc
fbld
out
loopne
cld
mov
add
idivl
pusha
pushf
adc
jge
pop
imulb
inc
loop
jno
fiadds
push
cmp
pop
lcall
aad
cmp
mov
adc
add
je
int
pop
popl
pop
in
sbb
push
mov
stos
adc
jl
sarb
iret
add
lret
mov
dec
int
sub
divb
xor
sahf
add
xchg
and
xchg
xor
outsl
fs
insl
mov
add
stc
xchg
jmp
or
pop
scas
nop
cwtl
add
test
cli
add
sub
mov
inc
xchg
and
mov
div
inc
mov
pop
jmp
enter
call
mov
inc
push
int3
cmpsb
add
roll
ss
jne
jno
fwait
add
mov
mov
mov
sub
movsb
jno
adc
arpl
pop
sbb
inc
dec
xor
mov
fdivrs
test
popf
push
iret
lods
imul
and
push
mov
push
push
push
jg
push
js
inc
add
xlat
sbb
jno
add
adc
addb
push
add
pop
sub
inc
incl
cltd
cmp
mov
incl
xlat
add
pop
mov
push
dec
fadds
rclb
add
daa
dec
sti
ja
or
mov
rolb
and
test
fadds
cld
add
loop
sub
mov
mov
mov
out
test
cmp
in
add
sbb
or
les
push
lock
cmpsl
adc
or
call
pop
xchg
inc
xor
aaa
or
pop
inc
dec
in
add
out
add
shl
adc
aas
mov
add
xor
fistps
dec
xchg
add
fiadds
mov
dec
sub
sbb
stc
pushf
cmpb
outsl
inc
out
sbb
mov
test
mov
gs
sbb
shll
mov
sub
fcoml
cmc
sti
sub
mov
xchg
outsl
cmp
shrb
jns
shrb
lret
int3
add
test
int
sbb
ret
mov
je
pop
rol
xor
add
cld
gs
shl
adc
add
sub
xor
daa
loopne
jecxz
jae
add
and
sbb
jmp
in
xchg
mov
sub
out
movsb
pop
jecxz
pop
in
add
ja
cltd
xlat
cmp
sarl
push
dec
cmp
mov
clc
add
popf
sub
mov
stos
and
xor
nop
and
xchg
es
sbb
pop
pop
in
insb
fisttpl
add
mov
push
ret
popa
add
pop
fwait
mov
cld
icebp
push
fsts
subl
call
add
int3
out
ret
dec
xchg
xchg
add
gs
std
inc
filds
dec
adc
jecxz
xorb
or
xchg
clc
rcr
jo
pop
test
sub
xorb
mov
xchg
add
push
or
incl
js
xor
jbe
add
xor
push
xchg
cmp
dec
xchg
push
add
xchg
mov
mov
aam
dec
push
fistps
stos
or
mov
imul
add
in
mov
lret
nop
orb
mov
es
jg
loop
add
cs
xor
push
xchg
jg
iret
insb
arpl
push
mov
push
fs
jp
daa
xor
pop
dec
rolb
xchg
movsl
rcrb
add
sbb
add
adc
call
or
mov
add
cld
mov
pop
cmp
cmp
das
xor
jp
pop
mov
sub
mov
ss
xchg
leave
jge
lock
add
push
scas
lret
cmpsl
mov
mov
mov
sub
adc
xchg
sbb
rorb
lods
or
add
loope
push
lea
xchg
adc
fisttpll
and
add
mov
stos
push
xchg
mov
arpl
int3
rcrl
jmp
mov
or
mov
cmp
insl
add
fs
enter
pop
lock
out
adc
xchg
arpl
add
movsb
cs
add
push
in
ret
fdivrl
popa
add
pop
stos
add
cmp
mov
sub
in
cmp
clc
push
imul
fwait
out
add
sti
in
pop
frstor
fisubrl
jnp
testb
ror
pop
xor
mov
lahf
rol
ret
sbb
into
aaa
ficomps
inc
sbb
cwtl
push
cmpsb
enter
dec
ljmp
rclb
dec
incb
mov
inc
pop
cmp
pushf
add
pop
lcall
cmc
xchg
stc
inc
xor
dec
rcrl
ja
mov
pop
loopne
loope
mov
testl
mov
jo
pop
add
icebp
in
xchg
cwtl
test
ljmp
mov
adc
or
rolb
add
ds
popa
and
pop
mov
pop
mov
add
shll
push
mov
inc
pop
add
movsb
nop
add
shlb
push
push
aad
add
fs
pop
add
inc
call
xor
aad
faddp
mov
sbb
pop
add
xchg
pusha
pop
sub
lock
fcoms
stc
lret
and
mov
das
push
and
in
add
sahf
packuswb
enter
lcall
add
mov
xor
cmp
loope
cmp
clc
add
add
or
int
outsl
stc
outsb
out
lock
arpl
std
in
jp
pop
lods
stos
add
cli
cmp
add
out
pop
mov
push
and
dec
add
or
jle
add
subb
fstps
ret
arpl
cmp
dec
lods
jno
mov
add
out
or
add
pop
sti
incl
xchg
jo
pop
inc
adc
push
popa
fld
addl
dec
mov
call
test
insl
pop
and
insb
mov
xchg
add
shrb
push
xchg
xor
imul
push
sub
inc
add
mov
add
jg
mov
pusha
jne
or
in
leave
add
mov
pop
aam
pusha
pop
add
pop
add
adcb
fbld
cmp
pop
outsl
out
test
std
les
adc
sbb
mov
pop
add
int
xchg
mov
lahf
int3
movsb
xor
je
xchg
clc
mov
faddl
add
mov
sahf
mov
adc
add
xchg
mov
loope
and
sbb
ret
sarb
pusha
inc
movsl
cltd
fisubrl
filds
and
dec
jo
lea
add
or
jns
add
or
mov
popa
int3
enter
out
add
inc
xlat
ss
fidivs
push
add
lods
shlb
sub
sbb
and
dec
les
jbe
je
scas
sbb
mov
setl
test
addb
or
fcomi
push
mov
movsb
sti
testb
loop
or
dec
rorb
adc
add
insl
cmp
add
mov
jno
add
and
or
add
add
add
mov
ja
data16
cmp
xchg
shll
mov
in
or
mov
add
mov
sub
push
mov
loop
adc
inc
sub
outsl
pop
fadd
lea
mov
pusha
mov
and
aad
mov
xchg
andb
mov
or
and
shlb
outsl
sbb
movsb
jns
arpl
and
mov
push
jmp
cmpsb
aad
inc
in
jp
sbb
sub
inc
loop
fs
push
add
rol
jbe
adc
add
out
gs
add
bound
fdivl
jnp
xor
mov
insl
xchg
lds
add
push
stos
mov
mov
xchg
fnstcw
pop
mov
push
add
adc
popf
rcr
pop
jle
cld
imul
xchg
add
dec
clc
and
add
inc
xlat
add
add
add
aaa
pop
or
loope
add
sahf
cmp
mov
mov
addb
daa
ficomps
cmp
sbbb
rorl
aas
jno
pminsw
or
paddsb
sti
sub
xchg
stos
dec
mov
pop
in
fimull
ss
xchg
addr16
jae
hlt
mov
mov
xlat
rol
and
add
mov
loope
push
aaa
popf
add
push
out
sbb
int
fiadds
jecxz
add
push
sbb
cld
cmpsb
add
sub
daa
mov
dec
lcall
outsl
je
add
pop
adcl
xchg
mov
sbb
add
enter
add
add
nopl
stc
mov
xchg
cltd
push
sbb
jae
cld
xchg
out
pop
jo
and
sub
js
mov
mov
inc
and
and
mov
lgs
add
jecxz
sbb
inc
mov
xchg
push
hlt
xchg
push
in
add
std
mov
rolb
push
sbb
add
mov
xchg
push
dec
addr16
xsave
and
add
and
mov
sub
cmp
inc
into
aaa
add
ds
test
in
jl
pop
cmp
xchg
mov
pop
clc
mov
out
add
stos
push
mov
pop
mov
xor
xchg
xchg
aaa
push
popa
and
and
add
jle
push
int3
mov
add
dec
lods
ds
fsubrl
jo
lret
movsl
cmp
subl
cmp
mov
aas
sbb
std
pop
xor
gs
popa
incb
or
and
int3
jle
push
js
jmp
pop
mov
leave
mov
addb
sub
add
int3
lret
pop
test
iret
in
push
xchg
xor
pusha
lcall
jns
add
xchg
inc
cmp
rclb
loopne
jge
roll
sub
mov
repnz
cltd
xor
and
iret
mov
inc
sub
aam
call
scas
rorb
std
add
loope
mov
and
and
xchg
or
push
test
add
pop
bound
pop
and
pusha
imul
sub
inc
sarb
repnz
or
add
fidivrs
lock
ds
adc
push
scas
int
adc
pop
movsb
add
in
das
mov
bound
repz
add
sub
dec
std
call
cmpsl
mov
popf
ljmp
add
mov
mov
cs
xchg
lock
enter
rol
or
sub
loopne
jnp
cwtl
imul
sub
jle
call
mov
push
lret
cmp
inc
iret
mov
imul
sub
inc
or
dec
sub
sbb
and
mov
push
lahf
ja
sub
scas
insb
pusha
int3
inc
mov
stc
add
dec
in
pushf
nop
push
add
repz
jbe
or
add
mov
push
pop
testl
lods
xchg
xchg
add
pop
push
cwtl
add
popa
xor
push
dec
addb
xchg
not
popa
cmpl
out
lds
xchg
add
mov
jo
arpl
ljmp
push
repnz
push
add
aam
dec
mov
je
dec
aas
adc
or
sub
add
adc
scas
sbb
fs
jne
or
ljmp
xchg
adc
xor
push
bound
adc
jecxz
imul
jno
xor
xor
incl
ret
bound
call
xor
sbb
push
lret
xor
pusha
lock
mov
mov
cmp
xorl
mov
dec
xchg
sub
cmp
and
jae
scas
mov
sub
mov
fwait
push
sahf
bound
pushf
loopne
add
leave
and
out
dec
in
dec
jge
outsb
pusha
add
std
mov
xlat
add
in
fnstcw
cmpb
jmp
push
mov
dec
push
xchg
stc
sbb
push
subb
popf
cli
ss
sbb
pushf
add
lret
mov
pop
popa
test
sbb
inc
and
movsl
sbb
sub
pop
call
cmpsb
rclb
lock
push
push
add
loop
cmpsl
pusha
jns
cmp
dec
xchg
das
inc
and
sub
bound
mov
pop
sbb
jb
addl
cmpsb
xor
je
sbb
bound
scas
jmp
shlb
fs
movsb
jae
adc
aas
sbb
xchg
lds
or
and
pop
cmp
inc
outsl
jl
sbb
xchg
jnp
aas
dec
mov
pop
pop
mov
mov
add
cmp
mov
mov
pop
xor
cmpsl
jecxz
push
lahf
pop
mov
test
loop
cmp
lsl
addb
or
leave
and
sbb
loop
inc
dec
movsl
lock
sub
sbb
xlat
loope,pt
mov
jne
and
vpsrlw
add
mov
mov
sub
cli
in
arpl
mov
lods
aam
xlat
lock
jns
mov
mov
sub
push
push
pop
call
or
inc
mov
sub
int3
xor
xor
in
pop
ljmp
dec
data16
jle
push
mov
adc
pusha
push
dec
andl
popf
or
rcl
cmp
test
lds
inc
mov
sub
movsb
mov
and
loop
or
ss
rcrb
lret
jne
add
loop
mov
sbb
mov
testl
push
int
ficomps
insl
xor
rolb
adc
inc
stos
enter
fs
dec
int3
lods
mov
jo
xor
lods
push
adc
add
and
mov
push
cwtl
or
shlb
mov
or
bound
inc
lods
inc
shll
add
or
bound
xor
inc
dec
push
mov
loopne
cmp
rclb
mov
pop
cmp
xor
cwtl
push
mov
test
mov
loope
sub
mov
or
dec
test
cs
sbb
cmp
test
dec
jle
and
ret
jbe
test
lods
movsl
add
ficoml
jno
stos
xor
mov
and
mov
sbb
cmp
nop
cmp
out
mov
dec
inc
in
int
les
cmpsb
pop
pop
and
dec
sbbl
pop
inc
int3
mov
cmp
push
movsl
fldln2
popf
nop
jae
push
subb
test
adc
lods
add
adc
in
adc
cli
sbbb
in
add
pop
push
add
dec
cmp
mov
or
aas
or
call
loop
mov
sbb
mov
testb
dec
jecxz
movsb
cwtl
dec
or
sti
and
lds
das
orl
xchg
push
test
sahf
popf
mov
adc
fcmovb
cmp
cmp
out
push
adcb
sbb
lret
xchg
cmc
and
sub
xor
dec
add
mov
dec
add
lret
pusha
enter
add
shrb
clc
fwait
add
inc
shr
xor
sbb
imul
mov
adc
cmp
repz
mov
pop
cwtl
in
xchg
add
insb
bound
or
push
rcl
cmp
das
rorb
sub
cltd
lods
push
filds
mov
push
xchg
push
bound
into
add
sub
xorb
inc
and
hlt
aas
adc
mov
int3
mov
addb
aam
movb
sub
sub
cmc
dec
pop
add
out
jnp
call
popf
or
leave
mov
or
sub
and
lret
iret
mov
daa
xor
jns
pop
arpl
cs
cmp
cmp
fsubs
or
push
pop
les
in
adc
leave
test
inc
sbb
les
outsb
xor
xchg
pop
mov
xor
lock
mov
jge
xor
mov
pusha
and
in
cmp
and
or
aas
inc
lods
sub
adcb
push
push
mov
and
pop
lods
jno
pop
jns
mov
add
inc
shrb
scas
jp
fstl
jecxz
fwait
or
or
outsb
cmpb
pop
sub
add
pop
notl
dec
xchg
roll
mov
fdivl
int3
test
lods
filds
xchg
cmp
sbb
rorb
jae
addb
pop
sbbl
mov
dec
inc
mov
cwtl
pop
sub
add
jle
push
jl
or
jo
adc
push
inc
idiv
bound
add
and
add
mov
hlt
cmp
add
mov
mov
sub
cmp
aaa
adc
push
ret
icebp
sub
add
xchg
adc
outsl
adc
flds
push
jae
or
and
loopne
push
mov
or
push
je
dec
add
jle
dec
push
dec
popa
fs
and
ret
xor
adc
mov
add
pop
shlb
mov
in
pop
out
mov
xor
push
nop
sti
jno
lods
or
xorb
add
fst
fidivl
movsb
sub
mov
dec
std
xor
dec
mov
or
sub
call
je
xor
mov
pop
xchg
sbb
fdivs
pushf
pop
inc
roll
sub
lea
add
int
cltd
jecxz
and
fsubr
dec
shll
in
mov
xchg
or
std
cli
and
add
test
jno
and
add
xorl
mov
es
adc
sub
rcrb
and
int3
std
je
lods
jge
jl
gs
cs
mov
loop
xchg
in
cs
cli
inc
pop
mov
ds
xchg
leave
inc
in
pop
jo
adc
mov
inc
pop
push
dec
js
cmpsb
add
repz
cwtl
xchg
adc
call
jne
mulps
mov
sbb
dec
push
xchg
xor
mov
add
js
sbbl
mov
and
pop
and
adc
inc
pop
pop
jae
and
cltd
inc
adc
addb
push
movsl
pusha
pop
or
inc
cwtl
gs
lods
add
lahf
pop
das
mov
adc
sbb
shl
add
imulb
mov
roll
mov
sbbb
mov
xor
push
test
and
mov
lock
addb
rclb
inc
adc
push
add
rcl
add
dec
push
mov
xchg
xorl
add
dec
lock
mov
mov
add
cwtl
mov
pusha
fnsave
sub
or
pop
add
cld
pusha
lahf
xchg
int3
xchg
adc
add
xchg
xor
mov
rcrl
mov
stos
mov
mov
outsl
and
sub
fs
add
mov
push
cwtl
or
call
lcall
mov
cmpl
or
call
pushf
fidivs
or
adc
jo
xor
test
inc
adc
aam
into
jo
mov
test
pop
das
fcompl
jg
mulb
pop
push
sarb
cmp
fnstsw
stc
add
adc
test
mov
push
mov
xor
mov
in
cwtl
add
pop
push
pusha
jns
inc
movsb
aam
sub
orb
adc
lahf
ds
les
and
sarb
and
repnz
pop
scas
jo
add
sbb
mov
jb
or
xchg
cld
cwtl
cmp
mov
push
add
pop
push
dec
icebp
ret
xor
loop
cmp
sub
roll
loop
mov
inc
mov
pop
adc
loopne
mov
add
in
add
dec
cmp
add
sahf
insb
pop
inc
jns
dec
daa
out
jmp
cmp
xchg
mov
rcll
int3
loope
xor
mov
movsb
sub
mov
add
outsl
test
fisubrs
xchg
xchg
std
mov
add
les
insl
into
stos
pop
add
jnp
inc
xchg
es
mov
andb
inc
add
cmp
sbb
mov
andb
shlb
aas
insl
loope
loopne
add
push
xchg
xor
inc
mov
rclb
arpl
add
sub
mov
cmp
push
shrb
add
loopne
in
in
pop
ss
cld
je
adc
mov
add
mov
mov
popa
mov
mov
inc
fs
push
and
jo
cmp
rclb
and
sbb
jnp,pt
mov
sub
add
lahf
adc
push
inc
lret
mov
add
sub
jne
test
xchg
notb
jae
push
adc
fimull
dec
repnz
jne
daa
mov
jnp
add
mov
push
adc
cmp
sub
sbb
or
or
jmp
adc
clc
xor
movsl
add
sbb
test
mov
das
shlb
add
xchg
pop
outsl
fmuls
mov
test
xchg
xchg
or
ds
rcrl
xchg
mov
aam
sbb
iret
inc
mov
lock
jge
clc
add
fwait
xchg
cmpl
mov
inc
xor
cs
add
adc
enter
stos
inc
xchg
mov
insb
adc
clc
lds
push
aam
or
sbb
inc
or
aaa
xchg
add
popf
fxch
xchg
test
sub
enter
sub
sub
xchg
fldl
sub
pop
push
pop
daa
rorl
sbb
fdivs
insb
and
add
in
inc
rclb
shld
pop
inc
mov
adcl
push
inc
push
or
jae
add
cltd
and
adc
testb
stos
mov
mov
xchg
sub
cmp
sbb
mov
test
mov
mov
push
gs
xchg
stos
and
add
ljmp
push
cwtl
inc
push
inc
xchg
lock
aad
ss
data16
pop
add
xlat
jo
or
in
mov
pusha
dec
loopne
dec
pop
mov
jp
mov
add
add
cwtl
cld
xchg
push
pusha
mov
and
cmc
mov
push
inc
mov
push
call
xor
add
fdivrs
inc
sub
sahf
xor
call
inc
outsb
mov
add
jg
out
push
add
loope
mov
ret
adc
mov
push
aam
imul
dec
push
and
dec
cmp
pop
xlat
inc
fcompl
mov
test
cwtl
mov
sub
mov
inc
sub
mov
and
or
shrl
lock
les
imul
mov
sbb
inc
or
mov
push
mov
mov
add
sahf
dec
add
rolb
add
and
mov
add
xchg
movsl
dec
call
fadds
dec
movsb
inc
push
lret
mov
sub
add
mov
scas
lret
sbb
into
xor
xchg
bound
das
push
insb
sub
mov
sub
je
out
sbb
fistl
dec
xchg
and
mov
and
lea
add
xor
sbb
dec
push
sbb
jl
iret
call
imul
add
add
cmp
cmpl
pop
in
mov
daa
jg
add
mov
test
cmp
add
or
sbb
dec
idivl
sub
inc
push
mov
sti
mov
mov
mov
mov
dec
sub
mov
nop
movsb
aad
mov
adc
add
sbb
sti
add
xor
stos
add
and
mov
es
scas
add
cld
xor
loope
pop
aam
jns
rolb
lcall
or
mov
cmpsl
movsl
les
and
or
or
in
in
pusha
test
add
cmp
pop
inc
jbe
mov
cmp
mov
mov
insl
cwtl
push
and
mov
pop
lea
push
in
clc
pusha
movaps
rorb
mov
dec
push
xchg
test
shrl
or
xor
or
jb
ja
jg
add
add
mov
push
loopne
std
jl
in
or
add
rorb
mov
es
nop
and
rcr
ljmp
mov
fcoms
aam
jecxz
mov
leave
lods
push
lock
call
clc
jae
dec
das
push
and
add
pop
frstor
xor
pop
inc
adc
in
cmp
fsubrl
cmp
sbb
fisttps
sbb
xchg
xlat
push
sbb
add
pop
cmp
shrb
rorb
cmpsb
lock
pop
js
add
pop
pushf
js
arpl
sub
rolb
mov
imul
fcomps
movsb
adc
int3
add
leave
dec
dec
adc
subl
add
fstpl
lds
ds
add
pusha
mov
mov
mov
addr16
mov
jmp
jae
add
or
xor
aas
pop
lods
inc
cmp
or
inc
mov
cmp
fstps
add
mov
insl
les
inc
js
insb
jno
imull
arpl
sarb
inc
cmp
push
sub
mov
sub
pop
clc
and
jbe
mov
imul
xchg
add
and
mov
lock
and
or
push
mov
in
les
sub
hlt
sbb
add
lock
addl
inc
mov
popa
jo
pop
in
push
leave
mov
addb
add
cwtl
movsb
dec
mov
pusha
sarl
daa
cmp
xor
cmp
fadd
add
xchg
sahf
dec
mov
int3
fld
sbb
inc
mov
cmp
cltd
ja
sbb
daa
leave
cmp
and
pop
add
xchg
xchg
hlt
xchg
jp
mov
xor
mov
inc
test
pusha
dec
pop
loopne,pn
or
int3
mov
xchg
mov
sti
std
mov
stc
inc
pop
inc
xor
pop
sbb
fcmovnb
clc
mov
fnstenv
inc
add
lds
sub
in
add
je
fmuls
inc
add
add
cld
sbb
dec
or
or
push
call
add
mov
jae
test
jp
add
xchg
and
iret
inc
push
clc
lret
jmp
jmp
into
dec
out
lcall
shll
rcrb
push
add
les
xor
pop
lds
inc
mov
mov
lods
dec
pop
shrb
add
xor
and
imul
inc
add
xlat
addb
leave
adc
test
cmp
rolb
mov
rorb
cmpb
dec
pop
es
test
mov
fistpll
dec
mov
mov
sbb
enter
cli
andb
pop
mov
xorb
add
scas
push
add
dec
das
insb
pop
loop
fcoms
pusha
pop
lock
pop
pop
adc
sub
push
and
add
push
cld
in
pop
jle
flds
mov
stc
add
aas
xchg
in
orb
mov
mov
js
add
add
add
pusha
xor
inc
stos
xor
mov
sbbb
xchg
jno
aas
pop
add
pop
inc
pop
out
and
popf
xor
roll
aam
aam
jecxz
leave
mov
mov
shll
push
std
fcmove
pop
ss
cld
loopne
xor
add
add
cwtl
rcll
pushf
add
dec
loopne
dec
cmp
daa
and
xor
dec
adc
call
dec
xchg
fwait
enter
inc
jl
add
mov
cld
movsl
lret
mov
mov
jmp
lock
fiadds
sbb
movsl
ret
test
or
int3
xor
popa
sub
js
call
adc
add
adc
xor
in
add
rcr
pop
ret
cmp
rcl
sbb
stc
or
or
cmp
push
add
mov
movsl
add
cmp
inc
pop
inc
aaa
add
push
push
rcrb
jno
out
add
mov
xlat
ret
imul
and
add
les
icebp
fmull
rorb
jp
jecxz
adc
adc
pop
inc
mov
repnz
enter
fmuls
out
jne
add
decb
mov
pusha
add
dec
cwtl
sti
ds
inc
cltd
std
mov
les
test
loop
mov
xor
pop
in
ret
pop
outsb
mov
enter
add
and
sbb
pop
ljmp
cmpl
repz
out
aas
add
pop
loopne
mov
mov
nop
sar
mov
cmp
das
cmp
push
sbb
sbb
imul
jge
lret
pusha
scas
mov
push
fs
rclb
xor
pushf
shlb
test
add
dec
mov
rclb
sub
enter
jmp
ret
and
lock
add
mov
push
inc
sub
and
call
inc
fidivl
cmp
nop
roll
aam
xchg
push
mov
xchg
jae
sbb
shlb
mov
sahf
add
jecxz
sub
aad
pop
dec
pushf
push
mov
aam
sar
push
sbb
or
int3
pop
push
loopne
mov
pop
inc
into
push
enter
mov
lock
mov
xchg
sub
dec
push
movsl
je
loopne
test
orl
clc
in
sub
int3
mov
in
xor
clc
mov
pop
mov
xchg
mov
dec
mov
add
pop
pop
cmp
loopne
fsubl
jmp
fcompl
and
or
repnz
rcrb
pop
mov
inc
lods
cmp
jnp
push
daa
ds
icebp
imul
sub
in
pusha
pop
xlat
int3
add
out
bswap
mov
aam
add
les
push
rcl
add
mov
cmp
stos
clc
leave
cwtl
add
dec
andb
lret
pop
or
mov
or
in
std
rclb
add
sub
inc
or
xchg
imull
iret
rcr
addr16
jecxz
mov
aam
scas
xor
adc
inc
mov
mov
je
in
mov
loope
test
ja
pop
shl
bound
jecxz
les
call
add
pop
and
mov
jl
xchg
or
fcom
rclb
mov
add
in
add
loopne
xchg
shlb
xor
push
mov
add
fwait
and
es
add
adc
out
add
pushf
nop
inc
sbb
cwtl
and
enter
inc
add
jmp
jp
aam
add
xchg
adc
dec
fiadds
add
xor
jp
fiaddl
sbb
repnz
pop
cmp
cli
sub
xor
inc
out
add
dec
jg
inc
xchg
mov
jp
es
cmp
rclb
repnz
and
add
std
cli
rclb
add
jo
ds
sub
inc
xor
cmpsb
jnp
add
cli
mov
lods
add
xchg
dec
inc
xchg
xchg
sbb
int
inc
jnp
popa
add
push
adc
pushf
inc
mov
xor
and
push
add
call
je
outsl
pop
and
push
and
dec
sub
mov
mov
and
or
and
aas
xor
js
sub
imul
inc
or
sahf
sbb
xchg
jae
jbe
outsl
inc
mov
lock
and
fildll
fs
and
dec
inc
lret
dec
cmpsl
inc
add
lea
inc
dec
sarl
nop
imul
fcomip
xchg
or
adc
fs
and
test
mov
inc
outsl
leave
or
insl
rclb
or
pop
test
cmp
cwtl
mov
sbb
or
cmpb
loopne
cltd
jmp
iret
and
mov
jnp
popf
add
dec
sbb
roll
mov
call
ret
enter
es
add
xor
and
cmp
adc
and
filds
mov
shrb
xchg
and
push
sub
jo
dec
out
pushf
add
addr16
jmp
sbb
jns
inc
aad
xlat
add
loope
lahf
nop
negb
lret
and
xchg
inc
outsb
add
ja
mov
adc
push
jmp
xchg
lock
cmp
or
test
inc
loop
xchg
push
or
adc
push
add
in
cmpsb
push
orb
jno
lret
inc
add
pop
push
js
movb
sarb
inc
je
adc
inc
insb
push
pop
out
push
or
icebp
dec
mov
xchg
dec
cmp
add
clc
mov
sub
and
imul
push
lds
shlb
std
dec
mov
jl
lock
es
jecxz
xchg
mov
test
mov
jmp
and
inc
add
aas
or
and
daa
cmp
and
cmpsb
in
mov
adc
ds
push
mov
or
lret
inc
cwtl
adcb
sub
mov
in
pusha
xchg
push
out
call
movsl
lea
pop
shrb
jo
roll
inc
and
lock
or
mov
push
jae
int3
push
push
rorl
cmc
test
hlt
sti
bound
loopne
jg
add
ret
push
add
in
jae
aas
cld
and
stos
cltd
jg
repnz
and
xor
call
or
test
into
mov
clc
cld
dec
sbb
dec
or
jmp
dec
in
out
call
xchg
jecxz
and
cmovno
jb
call
push
addl
sbb
cmovb
mov
sahf
adcl
and
les
daa
xchg
cmp
jo
mov
lea
out
pop
xor
mov
push
mov
mov
out
lds
push
mov
add
movsl
rcll
sub
popf
push
enter
out
sahf
mov
cmp
push
out
and
icebp
xor
inc
cmp
push
mov
and
int3
arpl
mov
cmp
dec
lds
add
jno
cmp
add
ffree
jle
ret
dec
mov
in
aas
rcll
mov
popf
lds
gs
imul
lods
mov
sub
jno
add
lds
inc
call
and
xchg
jns
andl
push
rolb
xchg
leave
pop
clc
cmp
outsb
aas
into
pop
loopne
mov
fcompl
add
adcb
lods
add
sub
xor
cs
hlt
push
mov
add
fsub
xorb
jne
out
sub
cmp
pop
hlt
arpl
fs
je
cmp
xor
movsb
sub
lret
cwtl
enter
adc
xchg
cs
movsb
and
sahf
dec
jg
cmc
adc
push
call
dec
and
addr16
jbe
adc
test
pop
xchg
push
test
icebp
xorb
aas
add
loop
daa
movsb
and
jns
test
mov
xchg
mov
in
xchg
mov
test
and
jo
or
cld
cmp
xchg
add
pop
inc
stos
imul
ret
inc
shlb
push
in
push
inc
pop
xchg
push
cltd
cmp
mov
in
xchg
movsb
add
mov
popa
xor
mov
out
xchg
adcl
sti
test
dec
fs
xor
popf
lret
lret
fstpt
jl
test
insl
inc
fdivs
jmp
add
mov
rcr
call
inc
aam
push
in
cwtl
mov
into
test
shr
and
jns
outsl
rolb
pop
mov
xchg
push
cmp
popf
and
into
mov
fcmovnb
add
pop
pop
outsl
mov
and
add
and
sahf
add
sub
dec
mov
mov
enter
dec
cmp
xchg
push
inc
mov
jg
xor
mov
sub
shrb
sub
push
insb
test
mov
dec
std
shld
imul
push
jbe
fistpll
mov
sub
dec
mov
add
lods
aaa
xor
cmp
mov
sub
add
xchg
xor
or
imul
inc
mov
push
loope
adc
and
jo
pop
dec
call
xchg
jg
cmpsb
out
add
andb
test
fldenv
hlt
mov
mov
or
enter
cmpb
jo
call
dec
or
push
inc
add
imul
push
sbb
shlb
pop
and
test
ss
pop
pop
or
xor
sub
or
adc
push
mov
pop
cmp
pop
sbb
pop
jno
lods
cmpsb
idiv
mov
jl
push
xor
outsb
sbb
lds
cmp
adc
adc
es
cli
sub
sbb
jmp
pop
hlt
add
mov
push
call
or
orb
roll
add
inc
cli
aas
notl
push
imul
mov
cwtl
rolb
pop
xor
xor
cltd
and
fsts
push
stc
inc
cs
adc
pop
mov
lea
and
js
mov
mov
cs
add
lcall
call
or
sbb
and
sbb
out
dec
xor
mov
pop
push
jno,pn
cmp
add
mov
jecxz
jl
cmp
add
cmp
dec
sub
mov
in
leave
scas
cmp
xchg
push
add
push
cmp
pop
inc
cld
fcoml
xorb
leave
add
loope
ficoms
or
loopne
adc
add
jns
add
inc
ror
add
adc
add
les
inc
or
mov
jns
lret
subl
ds
add
jbe
lret
shrb
push
jl
pop
add
mov
sbb
pop
lret
add
sub
add
jmp
adc
mov
add
pop
pop
cmp
lret
mov
andl
cmc
dec
xchg
cmpsb
mov
adc
pusha
aad
push
push
addl
insb
std
xchg
sub
movsb
cltd
imul
add
xchg
cmpsb
sbb
add
outsb
stos
cwtl
call
or
adc
or
pop
or
or
aam
iret
sbb
cld
fimull
nop
cmp
add
push
dec
leave
add
cs
xchg
sarb
add
lods
outsl
add
cmp
add
push
in
call
test
cmp
mov
jbe
and
popa
scas
je
mov
imulb
jo
pop
pop
pop
adc
iret
add
aam
pusha
mov
sub
lret
data16
mov
iret
hlt
cmp
arpl
add
fs
mov
add
cltd
int3
or
jg
orb
add
stos
lret
movsb
lods
in
jle
jns
inc
xchg
rclb
fsubs
dec
jo
cmp
push
loop
xor
adc
pop
add
hlt
inc
mov
mov
mov
cmp
dec
movsl
dec
inc
and
fwait
push
insl
addr16
inc
add
and
cmp
sbb
daa
push
fisttpll
mov
sub
xor
jo
sub
std
add
dec
inc
loopne
jmp
jecxz
clc
pop
shlb
push
inc
sbb
sbb
das
mov
xchg
jo
add
sti
pop
cmpsl
add
fnstcw
sbb
cmpsb
add
push
sbb
jl
scas
xchg
test
add
jno
dec
setbe
inc
or
jo
add
pop
fimull
adc
rorb
mov
pop
icebp
xor
dec
vpshuflw
addr16
add
add
push
cmp
ja
or
pop
dec
inc
leave
add
cmp
popa
xchg
jmp
sub
in
ficompl
xor
jecxz
cmp
iret
adc
jp
arpl
mov
sub
stc
cmc
xchg
cmp
insl
sub
xchg
jmp
in
stos
mov
mov
dec
aam
imul
ret
add
pop
xchg
sub
insb
jae
jno
adc
clc
jnp
inc
mov
mov
std
mov
and
mov
cwtl
and
lcall
inc
lret
pop
hlt
xor
ljmp
jg
cmp
das
fstps
dec
xor
xchg
pop
sub
pop
lea
xlat
adc
mov
lret
or
add
jp
dec
add
loopne
stos
mov
clc
add
jl
mov
mov
add
dec
sti
cmp
ss
add
push
int3
lock
andb
jl
fadds
iret
fmuls
fs
pop
add
xor
jb
mov
cmp
push
movsl
mov
clc
orb
lsl
dec
jl
jbe
jnp
fdiv
bound
add
fwait
pop
lret
fldl
les
out
stos
adcl
iret
imul
dec
add
add
testb
mov
jl
and
mov
add
adc
sub
cli
pop
add
pop
pop
mov
push
add
fwait
mov
movl
cwtl
aad
test
test
popa
rclb
mov
repz
ret
xor
std
cmp
aaa
cmp
push
popf
into
roll
adc
fldt
push
push
ljmp
adc
jmp
add
cs
adc
push
dec
pop
pop
mov
xchg
xlat
dec
iret
xchg
mov
rclb
scas
cs
pusha
or
push
pop
or
cmpsb
pop
std
pop
aam
es
loopne
in
daa
fs
mov
jno
cmc
and
inc
and
inc
fildll
cmp
jo
nop
clc
or
loope
mov
rcll
sbb
imul
cmpl
xor
sbbb
sub
push
xor
mov
push
pushf
fiadds
addr16
mov
push
or
or
arpl
rolb
es
faddl
push
cmp
pop
subl
popf
or
dec
push
push
adc
in
add
ret
iret
xor
cmp
pop
sti
fld
rep
inc
add
addr16
xor
adcb
mov
xchg
pop
add
movsl
add
push
or
nop
dec
add
cld
sub
arpl
xor
mov
sub
and
add
xchg
pop
divb
popa
pop
jmp
xor
test
mov
add
xor
or
lret
ljmp
sti
outsl
mov
addr16
shr
add
sub
dec
out
add
arpl
and
ja
pop
int3
and
mov
mov
mov
sahf
repz
fstps
add
popf
addl
and
pusha
xor
add
dec
je
enter
popf
insl
add
and
ss
jge
insl
and
pop
insb
in
andps
arpl
pop
push
cmp
ret
mov
add
clc
inc
xchg
aad
xchg
inc
add
xor
loopne
nop
roll
adc
fcmovnb
popf
and
les
in
loopne
lret
cwtl
mov
loopne
fsubrl
push
sub
cld
aaa
lea
ret
sbb
hlt
cmc
inc
inc
mov
and
bound
pop
andb
jnp
push
mov
xchg
inc
arpl
add
mov
jg
and
sub
inc
and
add
bound
aaa
loop
call
add
aad
sbbl
add
movsl
bound
outsl
pop
sub
add
movsb
cmp
mov
mov
dec
cltd
icebp
pusha
cmp
pop
movsb
sub
xchg
nop
stos
jno
test
mov
stos
popa
roll
and
push
cmp
sti
cli
icebp
dec
pop
lret
add
adc
xor
shll
add
cwtl
cmc
rclb
jg
incb
test
pop
cltd
or
cmp
push
sub
dec
xor
and
in
add
adc
andb
sub
push
loop
add
xchg
stos
insb
add
int3
inc
int
adc
call
mov
cli
sbb
out
sub
mov
lods
and
add
mov
test
pop
imul
sahf
fnsave
xlat
push
push
push
mov
add
pop
test
test
add
leave
add
gs
or
pop
mov
aam
pop
push
mov
frstor
cli
dec
add
adc
lock
jecxz
add
mov
cli
or
add
lret
xor
shlb
and
pop
scas
sub
test
add
cmp
lcall
out
outsb
and
push
xlat
add
inc
adc
ja
lods
xchg
sbb
sub
out
pop
sub
push
pushf
mov
sahf
cld
mov
xor
jo
mov
jno
dec
lds
ret
dec
movsb
lock
add
fmulp
in
mov
mov
sbb
aaa
fs
andl
leave
xchg
add
inc
pop
outsl
dec
mov
daa
jmp
xchg
and
sbb
sub
fbstp
lds
jl
add
insb
enter
add
les
ret
jmp
jl
xchg
mov
add
test
dec
and
mov
mov
push
or
imul
push
push
mov
add
loope
cmp
stos
cmp
push
add
fstps
jbe
sub
les
sbb
ficompl
jno
or
mov
add
arpl
insl
push
iret
scas
pusha
aad
mov
dec
add
xchg
shll
add
std
cmp
roll
lds
arpl
dec
add
fmull
orl
push
mov
repnz
aam
repz
fwait
jmp
pushf
shll
scas
js
mov
xchg
ret
or
or
loopne
or
add
pop
repnz
lock
lcall
pop
inc
movsb
dec
in
test
or
mov
adc
mov
or
inc
mov
cs
push
test
push
test
or
or
test
cmpb
xor
and
add
sbb
cmp
add
jmp
sbb
lret
or
mov
in
lds
push
jno,pn
scas
cmp
xchg
push
add
testl
ss
cmpsb
in
stos
add
and
xchg
cmp
cmp
pusha
mov
and
js
add
xchg
inc
gs
jge
add
dec
cmp
add
jne
xlat
pop
iret
jge
add
enter
inc
mov
pop
ret
call
push
push
adc
or
pushf
mov
test
dec
jns
xor
mov
je
ret
add
xchg
xchg
add
popa
cli
loopne
push
addb
cmc
sub
loop
pusha
loope
add
mov
les
dec
mov
mov
rolb
push
clc
mov
or
mov
jecxz
frstor
add
out
fidivrs
adc
lcall
add
or
mov
inc
mov
xor
push
xchg
jecxz
add
lods
dec
mov
xchg
scas
nop
int3
mov
adc
inc
jo
pop
add
push
adc
mov
out
and
or
sysexit
push
jmp
popl
pop
xor
mulb
hlt
mov
aam
mov
cltd
add
and
rcrb
adc
sub
dec
sbb
mov
cli
xlat
ja
add
and
cmp
mov
test
dec
and
in
pop
cs
adcb
pop
pop
lock
add
shlb
shrl
hlt
sub
aaa
mov
or
scas
addb
add
test
fld
xor
popa
movsb
jecxz
pop
jg
add
lret
mov
lcall
aas
add
mov
or
jo
xchg
enter
sbb
fwait
adc
mov
movsb
push
into
outsb
fiadds
push
andl
out
and
in
iret
movsl
add
adc
xchg
lds
mov
js
push
pop
jge
repz
rcr
ljmp
pop
pusha
ficoms
das
aad
addb
rorl
mov
cld
rorb
sub
scas
xor
add
rorb
out
xchg
les
rolb
test
lret
aad
mov
xchg
pop
inc
stos
pop
pusha
xlat
xchg
je
add
xor
mov
lret
stc
sub
das
ljmp
sbb
add
ss
pop
push
add
ret
fidivl
lcall
sbbl
clc
lods
add
lods
dec
test
mov
pop
cld
sbb
popf
dec
mov
cli
sub
xor
and
add
sub
mov
cli
push
pushf
push
aaa
mov
push
or
cmp
add
lcall
dec
ret
xchg
xchg
rcrb
cltd
mov
cmpsb
push
aas
popa
xchg
inc
push
stc
dec
rcll
icebp
xor
add
xchg
insb
into
int
pop
inc
stc
push
fcmovnb
shll
jg
ja
fdivrl
pop
pop
cld
mov
in
cmp
mov
mov
and
cmp
out
pop
fimull
dec
stos
jg
into
lret
int3
in
les
push
aas
pop
sbb
pop
xlat
add
xor
add
cmc
xorl
inc
push
adc
repnz
movsb
orb
push
pusha
jno
and
ficomps
mov
and
stc
add
insb
hlt
push
ret
xchg
push
cwtl
lret
inc
pop
movsb
mov
sarb
add
push
ds
dec
int
add
pop
mov
sarb
outsb
lods
and
out
clc
jmp
shrl
into
shll
jle
inc
out
out
ret
pop
jb
mov
adc
pop
or
int3
ficoms
and
and
sbb
and
sarl
call
clc
adc
aam
shr
cmp
xor
jbe
sub
add
andb
sbb
arpl
lods
loopne
mov
negl
add
jl
out
movsl
xchg
pusha
scas
aam
shrb
cmpsl
pusha
add
push
add
imul
mov
lret
cmpsl
add
pop
push
cmp
inc
cmc
adc
adc
inc
and
mov
jmp
ds
push
add
sub
mov
leave
pop
push
add
mov
and
pop
sbb
xor
xor
xorb
cmpsb
add
fldenv
ja
shlb
pop
lret
stc
aad
subl
popa
sub
repnz
aaa
es
adc
add
push
rclb
jg
ja
add
or
inc
sub
push
pop
leave
test
and
pushf
in
in
jmp
paddusb
test
insb
cmp
jg
pop
mov
shr
imul
or
add
xorl
add
mov
js
loopne
fiadds
enter
pop
cmp
lret
and
shrb
add
jmp
mov
add
outsb
mov
shlb
dec
dec
sub
cmp
dec
addr16
cmp
xor
lea
loope
shll
loop
add
data16
push
pop
imul
push
mulb
sub
sbb
add
imul
pop
xchg
xchg
dec
push
mov
iret
inc
dec
push
mov
incb
outsb
les
loop
mov
stos
stc
pop
add
outsl
mov
rolb
add
test
notl
int
push
aam
add
mov
mov
daa
fcomps
das
sar
jns
divb
rep
push
pushf
into
xchg
es
lret
mov
les
fxsave
xchg
sbb
jp
negb
fs
js
sbb
jmp
jge
adc
mov
faddl
inc
call
jmp
aad
inc
mov
dec
mov
jmp
mov
imul
pop
arpl
add
js
xchg
dec
jns
sbb
push
in
add
inc
add
add
subl
add
xchg
je
and
in
dec
cld
mov
jnp
add
fstps
pop
filds
add
push
jb
jl
jb
inc
cmp
insb
add
aam
mov
int3
test
xchg
iret
xor
lret
xchg
lds
add
mov
xor
pop
call
filds
and
cmp
add
add
popf
out
mov
push
jb
aaa
call
js
xor
mov
outsl
jg
add
stos
sahf
loopne
cwtl
add
add
add
adc
jmp
and
aaa
pop
nop
in
push
add
dec
xchg
jmp
jl
sbbb
lods
and
insb
xchg
inc
xchg
repnz
fisttpl
dec
sar
js
jnp
adc
outsb
jno
dec
dec
jo
or
add
mov
pusha
adc
scas
sbb
ret
adc
add
pushf
xchg
sub
sbb
jle
cmpsb
fcoms
inc
xchg
mov
jge
push
add
add
jecxz
pop
int3
or
push
fiaddl
pop
add
or
cmp
jmp
std
imul
into
roll
mov
sbb
jno
fadds
cltd
add
jge
lods
push
adc
or
xor
fsubr
add
dec
in
sub
pop
or
push
pusha
xor
jo
add
addr16
ret
or
aaa
or
cmpsl
jno
into
adc
xchg
out
adc
xchg
std
cmc
shlb
sub
push
loope
cwtl
in
cmp
popf
mov
push
cltd
xchg
dec
mov
pusha
sbb
dec
loopne
sbb
cmpsb
cwtl
xchg
push
sbb
mov
pop
fistpl
lods
mov
movsl
dec
mov
pop
int3
popl
cmp
or
sub
cmc
cmp
mov
cwtl
jecxz
sarb
ljmp
jb
cltd
inc
pop
push
sub
mov
mov
add
mov
xchg
in
pop
mov
push
and
mov
xor
arpl
and
nop
cmp
sti
pop
popa
add
inc
pop
inc
jo
enter
push
jae
cmp
add
clc
push
adc
lret
add
lret
jo
cmp
pop
sbb
inc
xchg
popf
stos
sbb
mov
ds
jns
mov
add
jge
and
fld
cld
outsl
sub
jge
add
into
sbb
cmp
and
rolb
lea
idivb
cmc
adc
pop
jae
bound
cmp
mov
into
pusha
xor
sbb
ds
rolb
sbb
fs
xchg
adc
add
bound
sub
cmp
orb
in
pop
stos
jae
and
loopne
mov
add
stc
adc
jecxz
xor
cmpsl
ret
fs
lods
xchg
clc
xchg
mov
and
mov
imul
add
xchg
andl
jge
in
or
jae
stos
aas
or
dec
cmp
das
add
outsb
nop
cmp
clc
inc
test
addb
unpckhps
inc
mov
or
iret
scas
into
sub
xor
lds
cld
mov
addb
add
push
cld
add
mov
and
push
xchg
hlt
pop
lcall
imul
and
aad
jne
fistps
popf
js
ljmp
hlt
imul
call
mov
mov
push
cld
loopne
scas
adc
jbe
in
clc
jae
rcrb
dec
cmp
in
lods
sbb
xchg
mov
or
jle
jb
add
das
enter
ss
cmp
lock
adc
push
js
xchg
shl
mov
or
daa
push
lret
dec
or
adc
fiadds
xor
mov
arpl
ds
cltd
sbb
pop
push
in
sahf
gs
mov
sub
sbb
cmpsl
jl
inc
xlat
aam
cwtl
add
xor
ja
push
repnz
add
in
movsl
pop
cmpsl
call
add
and
mov
mov
cli
xor
fisubrs
pop
icebp
cmp
roll
xchg
mov
daa
and
or
jge
sbb
add
dec
repnz
sbb
and
repz
pop
adcl
cmp
mov
sub
pop
xchg
ljmp
and
xchg
jmp
loop
sbb
and
imul
add
cmp
push
or
leave
xchg
and
popa
ret
ror
xchg
cwtl
ficompl
lret
clc
jp
cmp
xchg
popa
das
lock
sub
inc
mov
inc
test
test
add
cmpb
xor
cmp
pop
mov
jno
hlt
mov
lcall
fcmovu
hlt
jp
out
add
outsl
add
sub
mov
adc
xchg
mov
mov
jg
mov
shrb
das
or
push
xchg
adc
or
nop
mov
jmp
loop
jp
aam
sahf
aaa
shlb
fwait
or
pop
jp
sbb
jno
dec
clc
push
jle
filds
inc
push
xchg
mov
cmpsl
test
js
jecxz
scas
ret
and
dec
mov
ljmp
add
xchg
dec
push
mov
xor
cwtl
pop
xlat
imul
pop
fwait
daa
leave
mov
nop
jnp
add
cmp
jno
inc
xchg
hlt
in
adc
xchg
insl
outsb
mov
fildl
mov
jno
loop
push
sahf
sub
lea
xor
or
inc
add
mov
mov
pop
inc
sbb
jb
shlb
fcoms
inc
mov
cmp
fwait
scas
push
push
jae
imul
add
jno
jns
mov
jle
sub
setno
cmpl
xor
lock
shlb
sbb
push
lods
test
dec
cld
add
sarb
xchg
cmp
dec
dec
test
dec
mov
dec
add
bound
pop
xchg
enter
test
xchg
xor
in
loop
adc
push
sbb
orl
xor
popa
les
jl
sti
push
movsl
call
sub
mov
dec
cmova
add
sbb
and
icebp
xchg
add
inc
push
jmp
adcl
mov
jns
int3
jno
xadd
cld
jae
flds
xor
in
popf
pushf
mov
jnp
fndisi(8087
jmp
rcrb
push
inc
inc
xchg
cld
push
lds
movsl
pop
sub
bndstx
lahf
jb
add
outsb
push
dec
sbb
loop
add
sahf
enter
inc
jmp
and
std
cmp
cld
lods
lahf
iret
add
fnstcw
jo
pusha
dec
out
inc
ret
loop
cmp
add
xchg
popf
push
pop
cmpb
sub
cmc
add
fwait
jbe
arpl
idivl
rclb
enter
xchg
dec
hlt
pop
xchg
fldl
loope
mov
fdiv
icebp
imul
jecxz
pushf
jp
sbbl
std
test
cmc
adc
imul
add
fsts
add
aam
or
adc
jge
addb
sub
sbb
mov
lcall
jae
inc
lock
push
push
imul
jne
mov
xchg
stos
jge
clc
call
js
dec
and
fnstsw
cmp
mov
mov
xchg
outsl
mov
loope
pop
push
mov
add
cmpsl
pop
dec
xchg
mov
and
pop
and
cwtl
dec
sbb
add
xchg
fucom
into
dec
push
aam
xchg
xor
sbb
xor
and
ja
hlt
xor
mov
leave
rorb
ds
mov
adcl
and
clc
xchg
jnp
add
fwait
push
xchg
pushf
sarl
xchg
adc
jnp
cmp
dec
or
cwtl
pop
mov
cmp
int
xor
in
mov
sub
xchg
enter
nop
scas
jne
add
aam
push
add
loopne
in
mov
and
add
repnz
push
andl
jg
or
and
sbb
mov
push
jne
or
xchg
hlt
add
and
test
pusha
push
push
xor
mov
sbb
sub
rcrb
add
mov
dec
adc
movl
jp
cmp
cli
add
scas
roll
pusha
clc
adc
iret
ss
sbb
into
mov
movsl
pop
add
loopne
outsl
cmp
jg
ss
cmovle
fisttpll
mov
add
and
in
pop
add
dec
dec
testb
add
sub
push
xchg
fadd
ds
sahf
and
imul
fidivrs
outsl
leave
sbb
mov
pushf
cld
dec
and
adc
jp
mov
xor
rolb
pop
popf
dec
fimull
aam
daa
add
push
insl
loope
test
xchg
leave
add
aaa
xchg
ss
jnp
inc
add
push
sbb
inc
fcoml
push
imul
stc
xor
or
jb
fs
pop
inc
cmp
or
add
lcall
cmp
inc
std
adc
loope
push
jl
add
push
jnp
std
dec
and
add
sub
cld
mov
cmp
movsl
test
add
je
negb
jae
adc
mov
jb
shlb
jmp
adc
sbbb
mov
call
push
shrb
xchg
jb
mov
mov
repnz
pop
pushf
je
int
cli
stos
lcall
push
add
xchg
sub
mov
push
dec
xor
mov
dec
aad
das
notl
pop
jp
pusha
xor
xor
jno
mov
lock
out
xchg
mov
inc
jns
sbb
cwtl
xchg
sti
push
and
dec
push
iret
xchg
lret
leave
or
push
inc
ljmp
int3
sar
mov
incl
or
or
ds
lret
fmuls
cld
scas
jo
add
fistl
aaa
out
js
and
pop
lock
add
popa
out
rcrb
shll
dec
add
sub
and
pop
movsb
or
xorb
data16
divl
push
mov
mov
jo
lock
jo
movsl
in
xchg
or
lret
jp
popa
and
test
and
aad
inc
stc
push
stos
andl
cmp
add
imul
xlat
inc
add
lods
sub
jmp
or
adc
popl
lcall
imul
jle
add
xor
mov
outsl
and
into
loopne
sub
add
jne
call
jp
mov
leave
nop
andb
mov
push
ss
jl
add
stc
ret
rolb
adc
cli
lods
sub
dec
mov
in
mov
pop
jmp
loopne
in
add
xchg
popa
jbe
sub
rolb
xor
push
mov
jp
iret
mov
arpl
sbbb
pavgb
ds
add
les
aam
std
xorb
fs
fisubs
pop
dec
mov
sbb
inc
in
dec
xor
xor
add
mov
hlt
xchg
popa
pusha
mov
out
sub
pushf
rolb
xchg
lahf
or
loopne
pop
ret
and
sbb
cmp
jb
xchg
addr16
mov
jl
dec
out
push
pop
cwtl
test
push
int3
rcr
pop
dec
enter
dec
or
inc
rolb
rorl
push
jg
sub
cmp
clc
pop
addb
int3
js
add
jne
cmp
jns
je
faddl
add
xor
jp
dec
add
mov
testb
dec
cmp
std
mov
jnp
xor
and
mov
pushf
mov
add
ficoms
cmpsb
adc
pusha
nop
mov
dec
push
cwtl
cmp
call
push
mov
add
or
push
mov
mov
cmp
mov
push
jno
hlt
scas
add
lcall
cmpsb
push
scas
lea
notl
jge
arpl
stc
xchg
sbb
jge
cmp
sahf
out
and
ret
cld
pop
fistpl
add
mov
out
data16
jno
scas
fisubrs
mov
idivl
jns
cld
popa
sub
test
pop
mov
pusha
dec
icebp
scas
jle
ds
daa
mov
clc
popf
push
xchg
mov
pushf
hlt
push
repnz
mov
dec
add
das
sub
xchg
mov
adc
dec
ss
adc
int3
pop
add
push
push
clc
xchg
cmp
push
into
int3
enter
ljmp
add
out
clc
loop
das
add
in
mov
xor
mov
or
xlat
mov
add
dec
subl
or
inc
in
loopnew
inc
mov
mov
or
stos
pop
or
dec
xor
cltd
adc
lret
in
in
add
pushf
out
nop
les
jg
adc
outsl
mov
xor
jb
pop
inc
verr
mov
mov
xor
outsl
pop
xor
jo
fwait
ljmp
sub
in
add
add
imul
ja
mov
sbbl
lcall
inc
sti
testl
jne
into
fildl
js
inc
add
imul
add
loopne
adc
jg
inc
cmpsl
pop
add
rclb
add
pushf
clc
outsl
ret
add
jle
sti
aas
int3
push
ljmp
mov
add
sbb
sbb
dec
or
sahf
push
sub
loopne
or
and
adc
xchg
out
in
pop
pop
dec
clc
call
cmp
call
sub
xchg
rcll
cli
sahf
mov
add
mov
fimull
mov
dec
add
pop
pop
movsb
inc
ret
xchg
mov
ficompl
sub
mov
inc
mov
inc
mov
lcall
xor
cmc
adc
mov
es
push
xchg
inc
data16
xchg
aad
insb
psubusb
es
adc
push
les
inc
pop
mov
insl
or
xchg
adc
dec
and
and
pop
fldcw
push
cld
rorb
adc
cmp
jo
inc
imul
pusha
sub
xchg
xlat
add
adc
xchg
jecxz
push
mov
loope
jb
add
cmpsl
test
aaa
pop
dec
fsubrl
sub
xor
aam
cmpsl
dec
push
insb
andb
nop
dec
es
adcb
mov
add
inc
idivl
mov
xor
add
mov
sahf
orl
cmp
gs
push
mov
sahf
stos
imul
add
dec
popa
sbb
adc
dec
andl
or
cmp
inc
repz
sub
add
adc
mull
mov
pop
push
lods
push
mov
add
mov
push
mov
jo
js
int
test
iret
mov
les
sub
push
dec
mov
adcb
mull
push
mov
test
adc
push
pop
mov
scas
orl
ds
lock
repnz
subps
cmp
push
loope
sbb
mov
arpl
xor
sbb
push
or
rolb
lock
push
pop
shrl
add
call
or
pop
test
sbb
sbb
insb
add
xor
jnp
mov
call
or
jl
add
scas
xchg
inc
movsb
jle
mov
sub
sbb
dec
mov
and
jno
rol
in
cmp
xor
add
test
lcall
mov
lods
jnp
pop
push
cld
mov
scas
dec
insb
imul
dec
dec
movsb
add
lods
jbe
push
negl
ret
mov
xor
add
out
push
xchg
jg
repnz
pop
testl
aad
movsb
xor
rclb
insb
ja
orb
sbb
cmp
hlt
sti
add
dec
sti
push
push
and
pop
mov
mov
dec
enter
inc
lcall
pop
ret
mov
xchg
test
mov
cli
pushf
add
xlat
mov
outsl
es
mov
test
push
inc
sbb
cld
repnz
fcoml
notb
mov
scas
jle
clc
and
scas
add
sub
ret
inc
add
pop
insl
jmp
mov
outsb
je
dec
lret
dec
int
call
xchg
add
cmp
pop
adc
inc
mov
imul
jecxz
addb
adc
pop
aad
add
xor
pushf
adc
or
jb
or
pop
xchg
lea
aad
or
test
ret
mov
pop
iret
imul
mov
push
shlb
adcb
pop
push
add
fwait
jl
popl
pop
adc
or
cwtl
pushf
outsb
adc
xor
adc
dec
mov
outsl
dec
cli
sub
aaa
cmp
into
jae
lret
lahf
adcl
push
orl
repnz
stos
test
test
jo
nop
les
add
inc
xor
movups
sub
lret
int
fistpll
shr
sti
ds
mov
mov
out
fsubl
movsl
push
and
out
mov
add
pop
in
adc
add
cmpsl
cmp
rclb
push
mov
iret
dec
pop
mov
mov
xor
pop
clc
or
addl
inc
cltd
sub
jae
fisubrs
dec
push
mov
cmp
das
adc
out
popa
lret
xor
inc
sub
test
add
cmpsb
jmp
add
inc
cmp
lock
test
fs
lea
out
mov
xchg
mov
rcr
sahf
cwtl
leave
sbb
xor
repz
add
push
fdivr
add
je
lods
test
push
aaa
aad
cwtl
add
ss
mov
sub
adc
addb
mov
sbb
push
push
inc
inc
daa
add
pusha
roll
movsb
dec
iret
lods
orl
or
mov
rolb
lods
xchg
or
push
movsb
test
inc
xchg
dec
test
push
lret
cwtl
fstpt
sbb
cmp
push
negl
int
outsl
das
loope
or
jnp
dec
mov
movsl
push
movb
ss
pop
lcall
and
xor
xor
sub
test
cmpsl
push
adc
cmp
int3
stos
iret
mov
inc
cmpsb
sahf
pushf
xchg
mov
cmp
jg
add
test
mov
enter
rclb
cmpsl
dec
lret
cwtl
mov
rcrb
xor
int3
sbb
dec
pmuludq
xchg
jge
and
call
mov
test
mov
ss
dec
pusha
addr16
lahf
gs
add
icebp
sub
cmp
cs
sti
faddl
or
aas
sbb
enter
iret
shrl
pop
inc
sub
and
lods
jo
aaa
inc
push
movsb
xor
push
fbld
dec
imul
pop
sub
stc
mov
push
mov
dec
mov
push
dec
lret
jo
jbe
push
stos
mov
ficomps
clc
xor
movl
stos
in
loopne
hlt
les
aam
mov
xor
inc
sbb
lock
insb
xor
movsl
cmp
pop
dec
sbb
shlb
push
push
add
loopne
outsl
add
cmp
jle
lcall
popa
mov
add
mov
add
push
push
add
and
fldenv
xor
lcall
pop
sub
sub
mov
add
sbbb
add
lcall
xor
pusha
add
lret
notb
mov
push
outsb
imul
rcrb
xor
add
cmp
andb
ljmp
lock
or
or
sahf
rclb
fnsave
mov
push
out
and
mov
pop
dec
sub
test
into
push
sub
and
push
repnz
push
mov
sub
test
push
sub
movsl
pusha
nop
sub
xchg
and
and
adcb
mov
mov
xor
bound
out
add
cmp
pop
nop
insl
es
pop
roll
imulb
loop
add
push
push
dec
data16
dec
popa
and
imul
std
push
mov
pop
sbb
inc
or
xlat
enter
and
cltd
inc
sub
imul
sub
pop
jmp
lock
sbb
sbb
dec
mov
call
xor
or
test
adc
sbb
mov
cmp
add
cmp
jg
sbb
pop
flds
pusha
enter
lods
xor
cltd
ud2
nop
mov
push
push
mov
jno
mov
sub
fisubrl
pop
xchg
inc
inc
rcll
neg
es
cmp
jle
add
push
xor
ss
insb
cmp
loopne
xchg
pop
push
popf
adc
add
ds
fwait
and
add
and
ja
je
daa
inc
subb
jb
push
lods
sub
enter
loop
fldenv
push
and
rcr
add
gs
push
int3
aas
pop
je
mov
add
mov
fcomi
sub
mulb
jns
nop
scas
lret
fsubrs
push
mov
jo
add
lret
in
add
push
cmc
ds
int3
jg
inc
movsb
or
lock
mov
xor
ja
xor
mov
ret
mov
push
in
push
push
into
icebp
sbb
push
shll
loop
adc
cmpl
imul
xor
xchg
adc
mov
nop
mov
adc
outsb
xchg
sbb
dec
stos
int3
push
lds
pusha
dec
shlb
xor
dec
pusha
mov
stos
daa
subl
xchg
inc
adc
sub
icebp
pop
je
shl
loope
mov
lcall
jle
lock
icebp
xchg
mov
into
shlb
xchg
adc
sahf
and
or
loope
movsl
sub
pop
fwait
cltd
rclb
pop
add
mov
push
pop
test
clc
mov
cmp
add
adc
xchg
nop
mov
cmpb
mov
inc
mov
out
loopne
adc
sbb
testl
bound
push
xor
sbb
popf
nop
cltd
mov
cmp
or
inc
add
inc
fs
cmp
fwait
mov
test
stc
mov
cmp
inc
push
dec
rorb
xor
jns
jnp
pop
adc
bound
mov
in
cld
push
cwtl
subb
xor
add
fiaddl
in
sahf
sbb
push
push
cwtl
add
add
mov
imulb
cmp
xor
inc
push
movsl
test
dec
add
add
insl
add
fcmovu
jns
add
fisttps
rolb
or
xchg
cmp
sbb
sub
lock
mov
dec
mov
mov
dec
repz
pop
inc
or
and
mov
mov
xorb
sbb
in
jl
adc
add
fdivl
sbb
cmp
pushf
cli
ds
sub
test
push
or
les
loope
ljmp
andb
aam
mov
rcll
mov
add
xorb
or
aam
dec
out
and
movsl
inc
or
cmp
jmp
stos
dec
subb
sub
adc
addb
bound
cmp
add
sarb
scas
and
ja
fcomps
outsb
pop
in
jns
sbb
add
mov
pop
and
xor
pop
notl
sub
xor
add
inc
lock
xor
movsb
push
jecxz
lods
pop
pop
out
add
xchg
mov
cld
add
add
pusha
add
int3
loop
stos
daa
jle
mov
nop
mov
mov
jp
notb
jbe
lea
xor
dec
push
stos
test
mov
sbb
xchg
movsb
xchg
and
sub
push
scas
ss
sub
adc
add
mov
jl
daa
rolb
push
mov
int
cmp
test
push
lock
or
mov
aaa
mov
les
rclb
cltd
jb
lods
cmpsb
push
js
push
adc
xchg
das
cwtl
pop
push
divb
push
adc
inc
js
clc
xchg
mov
addb
push
or
dec
sub
repz
popf
xchg
push
xchg
bound
add
ret
add
or
enter
shlb
add
je
das
clc
and
add
fs
lds
fisubs
jbe
xor
add
fs
outsl
sub
mov
cmp
pusha
pop
ljmp
pop
mov
stos
add
xor
call
xchg
and
mov
loop
rorl
adc
outsl
mov
jg
mov
and
pusha
andl
xlat
mov
loopne
scas
stos
or
mov
sbbb
dec
imul
hlt
or
pop
jg
dec
rcrb
dec
stc
imul
loope
sbb
call
or
xor
add
aaa
mov
add
loopne
pop
pop
pop
pop
cmp
or
add
cmp
push
cmp
cld
add
mov
push
adc
sbb
int3
stc
mov
push
shll
in
sub
lods
inc
push
stos
popf
popa
jp
sbb
sti
out
adc
or
test
push
jg
pop
mov
cs
xchg
jne
inc
aam
repnz
add
xlat
sti
push
xchg
pop
dec
xor
into
jns
test
jnp
lods
inc
push
mov
lcall
sub
sbb
or
or
xchg
push
adc
and
loopne
or
push
cltd
jle
js
mov
mov
in
gs
lret
out
add
ret
lock
pushf
mov
xchg
sbb
cwtl
stc
mov
pusha
add
sbb
xorb
iret
hlt
hlt
pop
sbb
fs
mov
adc
ja
ret
xchg
pop
js
incb
es
push
int3
flds
or
mov
sbb
and
mov
pop
insb
adc
adc
in
jp
xor
inc
sub
dec
out
rcrl
movsl
push
adc
jle
pop
inc
arpl
rcl
fwait
shll
imul
jl
addb
mov
imul
mov
testb
push
clc
fidivl
mov
jp
in
in
jnp
jb
mov
outsl
or
mov
fsts
ss
les
mov
push
sbb
jg
lods
or
bnd
sub
popa
ret
cmpsb
rorb
mov
mov
and
adc
enter
into
pop
add
xchg
adc
jo
mov
cmp
xor
in
icebp
inc
and
xor
add
push
shlb
xchg
test
add
out
sti
xor
clc
imul
jae
loopne
cmp
bound
xchg
mov
dec
sub
cld
cmp
and
not
pusha
mov
sarb
jl
dec
rcrb
sub
push
adc
les
ret
imulb
add
pushf
and
push
sahf
push
jp
dec
jo
ja
xchg
jnp
pop
in
lret
add
repz
mov
push
daa
mov
and
leave
sub
rcl
pop
inc
sbb
mov
mov
sbb
int
psrad
add
loopne
pop
ret
and
pusha
mov
add
popa
in
je
cmp
test
cmp
mov
xchg
xchg
inc
sbb
add
xor
push
add
inc
lods
xor
stos
xor
sub
and
imulb
ret
xchg
cmp
sub
and
loop
rcrb
push
pop
data16
outsl
test
cmp
or
fcmovbe
add
inc
out
adc
jnp
sbb
ror
adc
cvtpi2ps
in
fidivl
aam
xchg
pusha
mov
push
push
push
stos
pop
lock
push
adc
cmpsb
sub
not
add
sub
pop
lods
cmp
mov
mov
ja
insl
push
das
in
lds
pusha
inc
cwtl
or
mov
addr16
out
mov
cltd
enter
xchg
cli
push
stos
cmp
js
testl
cmpsl
dec
adc
pop
jmp
cli
out
add
and
add
pushf
pop
fbstp
xchg
pop
fdivrl
pop
xchg
popl
pushf
test
mov
push
jnp
pop
fisubrl
mov
cmp
idivl
dec
pop
addb
jbe
or
outsl
fldz
cmp
lret
xchg
sarl
testl
push
fdivs
fcoml
das
pop
dec
add
push
lods
dec
rorl
xlat
clc
addb
xchg
add
fcomps
push
movsb
mov
in
sub
add
mov
inc
pop
popa
mov
decb
adc
hlt
push
icebp
cmpsb
dec
or
push
and
jecxz
insl
xor
mov
jg
sub
adc
loopne
orl
daa
hlt
ret
sbb
add
mov
cmpsb
aas
outsl
add
or
lock
and
mov
mov
mov
inc
xchg
sbb
push
mov
mov
daa
outsb
pusha
dec
push
or
mov
shlb
dec
aad
mov
adc
lock
and
xchg
or
out
es
mov
js
xchg
je
fcompl
gs
jnp
mov
out
test
stos
bound
out
xchg
in
in
pusha
inc
cmp
push
xor
adc
icebp
lahf
cmp
cmp
xchg
xor
pop
adc
and
add
lea
subl
pop
pop
jmp
adc
jns
nop
xor
and
add
mov
nop
jp
fisttpll
pop
fs
jae
mov
inc
dec
cwtl
add
aas
clc
inc
xchg
mov
adc
inc
ret
xor
pop
adc
repnz
insl
adc
push
in
adc
imul
fs
and
out
enter
mov
les
pusha
gs
adc
jnp
jo
aas
add
push
clc
jb
pop
inc
inc
push
imul
shld
jl
into
jb
push
pusha
add
sti
sub
jmp
dec
adc
lods
pop
xor
sbb
clc
xchg
int
icebp
pushf
pop
mov
mov
and
and
adc
lahf
add
into
xor
in
pushf
pop
hlt
inc
sbbb
push
daa
xor
xchg
pusha
mov
and
jmp
ficompl
cmp
add
mov
cli
add
push
or
popa
hlt
dec
sub
jno
adc
dec
addl
arpl
jmp
mov
add
nop
repz
inc
push
inc
hlt
popa
mov
mov
sub
pop
dec
fistps
in
sahf
mov
adc
out
adc
fcoms
lock
cmp
out
add
ffreep
or
mov
fs
popf
loopne
int3
enter
add
adc
cli
in
cwtl
movsl
adc
test
incl
movsb
mov
mov
stos
and
outsl
cmp
add
xlat
pop
push
shlb
lea
adc
xor
loopw
add
and
mov
sbb
in
sbb
adc
push
dec
xchg
dec
hlt
push
mov
test
decb
cld
dec
orb
pop
dec
clc
imul
aam
add
outsb
dec
sbb
sbb
insl
imul
push
adc
sub
pop
dec
lcall
mov
les
lcall
ret
pop
cmpsl
jne
std
cld
mov
scas
stos
add
adc
push
inc
xor
xchg
ja
fistpl
lds
push
incl
adc
pop
sahf
movsb
mov
outsl
jl
push
out
roll
xlat
adc
lea
imul
push
aas
cmpsl
int
dec
mov
sarb
stos
xchg
test
adc
dec
xchg
mov
mov
jbe
sti
jg
icebp
push
push
subl
add
adc
sub
rcr
xorb
sub
or
sub
pop
cmc
test
adc
push
push
push
rcl
push
add
pop
mov
adcl
jg
inc
sub
popf
rorl
add
imul
jbe
xchg
sub
push
pushf
lock
mov
sub
mov
shll
add
sbb
inc
sub
push
cli
push
xchg
sub
rcl
add
jge
mov
adc
and
fcom
sub
scas
jns
push
in
add
pop
pop
and
jb,pn
xor
jp
outsl
xor
cmpsl
shlb
add
xchg
xor
je
mov
daa
adc
push
jle
mov
pop
add
movsb
stos
lret
add
rcll
daa
dec
stos
add
sbb
jl
xchg
in
xlat
push
cmp
sub
xchg
dec
push
ljmp
lods
or
shlb
scas
ljmp
cmpsl
mov
mov
arpl
fwait
mov
mov
hlt
cmpsl
stos
push
add
out
mov
inc
jae
es
decb
jle
les
push
jnp
and
ja
movsb
adc
sarb
mov
xchg
sbb
and
pop
imul
lret
mov
add
push
xchg
sbb
pop
jge
fs
sbb
xor
enter
lods
xor
adc
sbb
mov
push
cmp
sbb
loop
and
scas
adc
cmp
pcmpeqb
mov
andb
sub
movsb
sbb
pop
hlt
push
add
push
xchg
add
jne
sub
aas
mov
dec
mov
clc
out
sti
xor
orl
adc
sahf
jle
les
fsubl
push
jle
sub
push
movsb
popa
pop
cli
stos
push
cltd
or
jno
aam
add
cmpsb
jo
inc
mov
sbb
aaa
bound
mov
pop
inc
mov
mov
sbb
cld
pop
and
test
insl
jmp
inc
xchg
imul
jmp
orl
out
popa
subb
imul
pop
movsb
or
and
jmp
insl
push
adc
or
daa
imul
cmp
push
ljmp
outsl
add
sti
subb
xlat
jl
js
scas
or
mov
ds
adc
addb
jl
jo
pop
movsb
add
pushf
push
jnp
sbbb
and
add
jl
stc
pop
shrd
arpl
insb
loopne
shll
or
gs
or
je
push
sbb
inc
lods
add
aam
jb
scas
adc
mov
cvtdq2ps
push
loope
ret
xchg
andl
pop
add
hlt
adcb
or
sbb
adc
repnz
push
adcb
sysexit
std
ds
push
fsubs
and
push
ljmp
test
pop
push
or
push
subl
rcrb
jp
rclb
add
into
fstp
mov
adcl
jmp
mov
pop
xor
add
loop
into
fcoms
mov
sti
add
lock
cmp
add
push
jmp
out
fcomps
inc
adc
aam
fadd
push
ljmp
outsb
lods
ljmp
inc
int3
add
lock
and
iret
add
xchg
dec
pop
xor
pop
jo
adc
js
fistps
out
mov
sub
sbb
ret
fcom
call
mov
and
dec
lods
cwtl
mov
jle
pushf
roll
xorl
sbbl
push
out
mov
sahf
push
adc
or
imul
and
or
cltd
push
sub
and
sbb
sbb
mov
jb
inc
fwait
lods
jbe
xchg
and
add
adc
mov
adc
add
leave
mov
ret
inc
inc
scas
rcrl
xor
xor
enter
enter
add
xchg
and
push
or
add
mov
and
xchg
mov
or
adcb
or
lods
dec
pop
cmpsl
cwtl
hlt
shlb
repz
or
cmp
add
and
call
add
add
std
mov
add
imul
inc
loopne
addr16
flds
es
push
nop
imul
sbb
and
mov
push
push
inc
lods
push
jecxz
cld
adc
addb
adc
loopne
cmp
cmp
and
cld
cmp
and
testl
jno
add
pop
pop
and
add
adc
mov
add
and
das
lds
cmpsl
mov
mov
dec
mov
jo
mov
sub
nop
clc
scas
fidivl
or
xchg
rclb
shlb
add
movsb
and
pop
insl
adc
daa
sarl
adc
std
lods
loopne
je
xor
sarb
add
push
jge
clc
mov
test
pop
test
repnz
push
dec
nop
adc
and
mov
ljmp
jp
ljmp
and
lret
cltd
cmpsl
sub
push
and
mov
add
mov
xor
cmp
sub
in
adc
add
jle
jnp
mov
fists
nop
pusha
dec
mulb
pop
add
je
add
xacquire
add
lret
jg
sub
jl
adc
dec
mov
inc
int3
adc
incl
sub
out
cmp
mov
inc
xchg
inc
mov
add
daa
cmpsl
test
add
xor
cld
push
test
or
sbb
rorb
or
sti
mov
hlt
jecxz
mov
jo
std
adc
dec
mov
add
jbe
jg
xor
and
sub
cmp
push
lds
xlat
cld
fimuls
cmp
xor
or
pop
aam
xchg
subb
xor
ds
stos
mov
shrl
leave
push
andb
in
xor
pop
cmp
packsswb
xor
mov
inc
imul
cld
cmp
add
add
fistpl
mov
dec
pop
mov
cmc
outsb
and
mov
mov
lahf
mov
lods
or
clc
pusha
imul
shrb
sub
cmp
aad
and
js
movb
mov
test
pop
add
rolb
test
add
jbe
pop
not
or
adc
mov
push
or
orl
dec
sbb
pop
dec
push
shl
push
xchg
pop
pop
inc
xor
fadd
cmc
dec
test
adc
xchg
xchg
xchg
inc
xchg
add
jl
insl
pop
fwait
pop
mov
mov
nop
scas
cmpsb
mov
mov
aaa
std
aas
push
inc
jbe
dec
addl
sbb
ss
adc
or
rcrb
cmpsl
inc
jno
xor
mov
out
or
int
test
jo
incl
mov
jg
inc
inc
repnz
push
cld
cmpsl
loopne
xor
shll
cmpsb
scas
pop
sub
pop
and
add
lods
add
xor
cltd
ds
mov
push
std
insl
mov
loope
xlat
jae
or
adc
mov
push
loope
jo
insb
and
and
mov
mov
xchg
inc
inc
jb
dec
add
shlb
push
nop
rolb
bound
add
lods
jg
adc
lahf
jecxz
ret
scas
lods
imull
lret
mov
fs
or
add
int3
sub
add
shlb
addr16
push
mov
fildl
shlb
arpl
mov
jl
fdivrl
addb
jecxz
jns
outsb
js
sub
and
aaa
jbe
in
jle
rcll
pushf
in
arpl
xlat
dec
push
pop
sub
inc
mov
cmp
cltd
inc
cmp
fdivl
xor
jbe
icebp
dec
fucomp
add
sahf
shll
adc
jg
punpckhbw
mov
arpl
cmp
dec
pushf
push
mov
pop
sbb
sub
inc
mov
mull
or
ja
xlat
pushf
shrb
fldenv
add
add
rcll
and
jecxz
mull
pop
jle
sbbl
and
dec
inc
xor
int3
add
leave
lods
out
movsb
cmpsl
add
mov
add
pop
cld
lods
sarb
or
jo
ret
pop
jg
cmp
push
ret
mov
pop
inc
leave
pop
adc
add
out
push
loop
xlat
add
inc
mov
mov
sbb
dec
subb
ret
mov
push
jl
pop
int3
cmp
and
adc
pop
aam
lcall
cld
scas
fwait
and
les
inc
and
dec
mov
push
and
bound
lock
jmp
mov
je
ret
dec
lock
pop
movaps
flds
mov
add
insb
cmpsl
mov
enter
cwtl
enter
mov
nop
adc
lret
cmp
pop
add
int3
ss
andb
mov
xchg
pusha
inc
cmp
test
mov
movb
pop
cltd
mov
and
add
inc
jmp
mov
pop
lret
inc
ret
mov
imull
sub
sbb
cltd
sub
int
lret
push
push
mov
stos
mov
lock
pop
cmp
fdiv
test
pop
push
or
outsb
mov
mov
add
test
inc
loope
xor
into
in
cmp
jecxz
test
jns
add
loopne
hlt
ds
mov
push
or
cmp
sbb
and
xor
mov
pop
sub
adc
adc
cwtl
add
jb
add
fadds
sbb
xor
push
cmp
call
lret
jg
add
lds
cmp
and
xor
inc
lret
sbb
jl
add
mov
adc
add
subb
adc
adcl
push
shr
cmp
cmp
lods
or
mov
inc
pop
dec
int3
adc
stc
mov
mull
add
add
pop
fldcw
incl
cs
and
mov
mov
das
lds
fs
nop
in
popa
jns
xor
cmp
cltd
inc
les
jno
sahf
inc
mov
mov
add
shr
lock
mov
fistpl
mov
orb
pop
enter
adc
andb
or
daa
mov
adc
add
flds
or
bound
mov
pop
movsb
sbb
pop
sti
mov
sbb
in
dec
mov
imul
cmpsb
lret
shl
movsb
inc
mov
jge
push
adc
or
clc
adc
sbb
outsl
and
xchg
xor
or
addr16
mov
adcb
es
pop
bound
add
adc
push
mov
cmp
mov
sbb
call
sub
cwtl
cld
mov
sbb
push
adc
hlt
mov
sbb
sub
add
loopne
pop
lods
and
movsl
mov
movsb
xchg
or
cmp
sbb
imul
push
movsb
imul
inc
push
cmc
xchg
mov
adcb
sub
add
xchg
xor
sub
clc
xchg
mov
pushf
mov
lret
dec
inc
fwait
les
imul
cmp
inc
cs
xor
daa
imul
jecxz
mov
lds
or
sti
js
dec
ljmp
jmp
aaa
inc
cmp
ret
pushf
rcll
pop
mov
incl
inc
pop
mov
xchg
sub
adc
push
ja
push
sub
xchg
or
fiaddl
push
mov
add
mov
xchg
mov
pop
jae
sub
outsb
cmp
lock
inc
enter
add
lock
mov
pop
sbb
mov
es
fstps
add
sbb
jo
push
rclb
je
sub
sbb
or
les
push
xor
std
mov
pop
xor
add
mov
adc
adc
cmp
pop
outsl
loopne
loop
cmpb
cmpb
or
pop
je
jo
cmc
cmpsl
add
mov
movsl
mov
pushf
sub
out
sub
xor
orb
nop
fsubl
test
data16
inc
and
pop
mov
mov
cmp
dec
jne
shrb
aam
pop
lds
stos
test
push
ffree
je
clc
leave
add
sahf
push
shrl
scas
pop
fldenv
sbb
dec
pusha
or
push
sbb
pop
mov
mov
test
lea
sub
pusha
clc
popf
mov
cmpsl
jecxz
lds
movsb
enter
std
iret
bound
mov
xchg
test
mov
lret
in
popa
pop
adc
mov
add
and
sbb
dec
loopne
or
in
sbb
and
lcall
adc
cmp
iret
aam
or
jbe
jns
adc
or
fwait
int3
jg
cmc
mov
add
and
std
pop
cmp
pop
mov
mov
testb
jmp
jp
push
add
cmp
stos
xor
cmp
test
in
or
test
aam
cmp
adc
and
sbb
jbe
mov
cmpsl
xor
xchg
int
bndldx
push
jle
jo
outsb
or
test
data16
icebp
adc
imul
dec
movsl
cmp
add
das
je
mov
cmp
dec
sbb
sbb
mov
xchg
repnz
add
cmp
stc
mov
adc
cmpsb
xor
dec
imull
movsl
cld
add
in
insb
ljmp
add
nop
loopne
pop
add
mov
sbb
lods
xchg
les
and
ret
mov
inc
mov
int3
popf
aam
xchg
sbbb
jle
je
fs
cmp
sub
sbb
enter
shlb
in
cs
loop
mov
xchg
mov
popa
or
xchg
fsubs
rclb
dec
stos
add
cmpsl
mov
adc
add
pop
add
repnz
add
js
stos
add
rcrl
loope
add
lahf
inc
lret
cld
and
mov
cmp
aaa
sbb
les
xor
dec
lock
std
mov
mov
sbb
add
push
adc
mov
pop
sub
clc
enter
xor
sbb
dec
fstl
test
add
clc
and
sbb
fldcw
mov
incl
es
dec
add
pop
adc
add
add
pushf
xchg
dec
pop
mov
test
sbb
outsb
mov
mov
xor
gs
into
or
aad
hlt
lds
xor
sub
xor
mov
mov
mov
call
daa
sbb
sub
aaa
sub
dec
sbb
in
pop
and
and
push
in
faddl
add
add
pop
sbb
insb
inc
scas
arpl
mov
idivl
or
cwtl
adc
mov
ficompl
pop
sbb
inc
les
inc
cmp
add
cmp
loopne
xor
fwait
and
inc
jmp
jb
pop
cmp
pop
mov
xor
daa
adc
inc
pushf
je
hlt
add
inc
adc
mov
push
mov
cmp
xor
sbbb
pusha
data16
add
aaa
cmpsb
mov
sbb
cld
test
sub
ret
jbe
sbb
jne
lods
xchg
nop
in
je
pop
inc
lcall
loop
popf
inc
cltd
mov
jo
repnz
adc
sub
pop
cmp
ja
std
cli
sub
pop
in
inc
les
and
cwtl
push
and
lods
push
pop
inc
stos
add
xchg
mov
iret
sbb
cld
mov
leave
inc
inc
cmpsl
in
add
pushf
lds
mov
sub
dec
pop
inc
lods
pop
xor
daa
pop
pop
add
sbb
push
scas
insb
mov
pop
inc
imul
rcrl
out
daa
add
imul
xchg
test
add
adc
cmp
pop
inc
pop
mov
enter
push
in
jecxz
add
in
mov
and
and
inc
mov
dec
and
mov
shlb
mov
add
mov
sbb
dec
mov
shrb
rcll
push
and
mov
lods
cmc
jo
testl
inc
loopne
mov
daa
xchg
clc
inc
and
arpl
test
or
mov
mov
sbb
cld
shll
sbb
sub
and
test
movsb
movsb
push
pop
lods
clc
xchg
push
enter
lret
jp
push
rol
push
pushf
mov
ret
std
or
inc
inc
add
imul
paddusw
lds
pop
popf
test
enter
sub
in
jge
lods
mov
loopne
mov
dec
dec
xchg
sub
insl
adc
movsb
adc
in
mov
pop
xchg
jp
add
aam
in
and
imul
aaa
enter
lods
lock
pop
or
scas
iret
loopne
mov
in
cmp
fidivrs
outsl
mov
es
imul
sbb
int
mov
pop
popa
push
icebp
jecxz
fists
inc
xchg
jmp
xor
ljmp
mov
add
nop
cmp
or
pop
adc
fmull
add
adc
xchg
insb
arpl
aaa
xor
push
inc
in
movsl
and
jl
mov
in
sbb
sbb
test
scas
fidivl
pop
clc
call
xchg
dec
and
inc
sbb
cmp
pop
jmp
xor
add
mov
adc
sbb
js
mov
popf
push
in
push
add
adc
aam
mov
or
loop
sbb
jmp
lods
aas
ds
mov
cld
lcall
and
cltd
shlb
sbb
cmpsb
xchg
js
inc
jl
push
mov
mov
nop
lock
add
imul
sbb
mov
jge
mov
insb
mov
jbe
cmpsb
cltd
add
sbb
cwtl
fadds
pop
pop
mov
inc
adc
sbb
dec
mov
inc
add
mov
ja
pop
test
nop
cmc
add
xchg
and
ja
push
cltd
pop
lods
sub
js
push
add
add
add
mov
push
aam
jp
adc
leave
and
rorb
adc
call
arpl
adc
lds
jo
pusha
out
lcall
and
cmp
mov
dec
pusha
adc
cmp
scas
fiadds
pop
cmp
loope
fs
shlb
dec
xor
adcl
dec
push
or
pusha
mov
or
xor
sub
ljmp
mov
add
out
jo
rcll
mov
adc
add
cmp
lods
mov
addr16
nop
inc
test
es
pusha
mov
cmc
mov
xor
add
pop
sahf
mov
andb
leave
aaa
das
shll
flds
pop
mov
xor
repz
and
xchg
pusha
les
or
xchg
popa
pop
aaa
push
lret
sub
pop
xor
inc
repz
and
pop
stos
sub
mov
test
xor
xchg
mov
subl
sbb
adc
xor
mov
arpl
sbb
fisubrs
mov
fmuls
divps
out
add
mov
push
mov
stos
dec
nop
add
sbbl
dec
inc
and
pop
inc
cmp
mov
lahf
add
mov
movsb
xor
arpl
xchg
rcrb
xor
shlb
icebp
add
and
bound
pop
call
int3
add
jne
rorl
mov
mov
ljmp
cli
lods
or
lods
jle
ret
iret
xchg
andb
add
sub
add
mov
mov
lahf
add
leave
mov
fnstcw
push
pop
inc
xor
adc
sub
sbb
mov
roll
pop
push
mov
dec
mov
jp
cmp
add
or
sbb
and
pop
cmpsb
dec
xlat
sub
jmp
repz
adc
mov
or
pop
rclb
adc
mov
popa
in
nop
lds
faddl
inc
push
ret
xor
add
andb
xor
jo
and
shll
and
test
push
data16
add
ror
outsb
ljmp
mov
or
pop
push
push
jle
sbb
sub
pop
push
ljmp
dec
mov
sarb
adcl
movsl
cmp
out
add
mov
jecxz
cltd
xchg
add
mov
xor
sbb
popa
sub
inc
out
add
inc
arpl
adc
xchg
test
imul
adc
pusha
xor
mov
adc
adc
add
jb
jo
outsb
shlb
subb
imul
aam
adc
gs
add
loop
jbe
je
cwtl
faddl
adc
xor
adc
xchg
jae
out
in
dec
pop
test
add
fs
in
add
arpl
mov
push
pop
out
xchg
mov
adc
faddl
movsb
add
dec
fs
cwtl
test
push
es
cmp
mov
mov
mov
addl
add
mov
or
push
ds
dec
pop
shll
xor
in
bound
addr16
out
mov
aas
add
cwtl
xchg
ds
subb
xor
xor
mov
mov
ffreep
push
jae
enter
in
in
sub
add
lds
es
or
sahf
sub
pusha
or
xor
add
dec
xlat
push
ss
nop
dec
push
add
lcall
push
add
jb
add
test
adc
in
sub
and
dec
xor
fists
repz
shll
or
aas
xchg
imul
cmp
in
pop
xor
in
sbb
or
in
mov
add
test
pop
adc
int3
xor
cli
xchg
add
mov
cmpsb
into
hlt
xorb
imul
ds
xchg
inc
or
out
mov
rcrb
je
and
push
sub
mov
in
mov
xor
push
dec
push
lds
cmp
outsb
add
ljmp
dec
cmp
rcl
adc
les
into
fmuls
adc
in
sbbl
cwtl
je
mov
fcmovne
leave
loopne
pop
test
pop
fidivl
and
cmp
sbb
mov
sub
aam
into
sbb
fisubrl
out
inc
lods
pop
xchg
inc
loopne
das
sbb
cmpl
aas
jecxz
rol
or
and
xchg
in
sub
xchg
mov
rorb
xor
add
test
jno
mov
xchg
mov
inc
dec
push
popl
movsb
fwait
test
dec
xor
xchg
and
loop
sahf
push
xor
jmp
xchg
call
les
add
xchg
lock
cmp
mov
push
mov
movsl
ljmp
inc
nop
jae
add
xor
cmp
jnp
and
and
mov
xor
add
mov
mov
sub
sbb
dec
or
lahf
pop
sbb
sub
dec
mov
rol
js
jge
in
aas
sub
and
je
ret
jle
inc
loop
sbb
dec
fsubs
das
sub
mov
and
es
jl
xor
mov
dec
adcb
pop
adc
jecxz
subl
into
dec
movsl
mov
mov
pop
je
aam
or
shll
pushf
or
fsubrs
fsubs
ljmp
push
je
aad
mov
test
pop
outsl
pop
loope
daa
cmp
pusha
adc
call
ficomps
mov
adc
mov
add
faddp
inc
lret
push
int3
ret
cmpsb
and
mov
in
push
sub
jecxz
add
or
dec
mov
lds
pusha
pop
movsb
jns
adc
jp
loope
mov
cltd
nop
cmp
dec
lcall
sarb
icebp
jne
jo
adc
mov
adc
or
add
jo
pusha
inc
xlat
and
push
sbb
jno
xorb
jecxz
push
fwait
lods
in
dec
lds
loopne
pusha
gs
push
or
imull
in
xchg
repnz
pop
loopne
fimuls
lret
jg
bswap
xchg
xor
mov
push
lods
mov
jnp
xor
ret
sub
or
jp
cmp
and
das
sahf
adc
rcll
sbb
and
or
ljmp
lock
rol
sbb
jge
push
loope
jg
bound
push
sahf
and
or
test
add
xor
or
lcall
add
or
jns
push
pop
add
pop
inc
les
sub
ja
or
roll
mov
push
jne
hlt
les
inc
testl
or
or
pushf
pop
inc
ljmp
pop
sti
shlb
fcom
fstpl
pop
daa
jle
adc
xchg
sub
lcall
add
xor
xor
popf
pop
lcall
hlt
iret
mov
and
pushf
jo
ret
rclb
adc
push
jl
adcl
jb
int
pop
mov
push
mov
stos
lahf
adcb
ljmp
arpl
mov
fs
mov
mov
scas
adcl
shl
outsl
das
push
je
les
in
push
inc
test
add
sbb
sbb
xchg
xchg
inc
rcll
nop
cmpsl
add
daa
pusha
aaa
shlb
sbb
jno
inc
add
and
aaa
pusha
arpl
shll
dec
pop
sbb
movsl
je
out
push
add
jmp
jg
xor
pusha
sahf
dec
push
xchg
les
nop
pop
pop
popa
xlat
ljmp
or
sti
or
pop
shlb
or
adc
fs
inc
sbb
loopne
dec
ljmp
aam
jge
aaa
xor
cmp
add
rolb
mov
mov
enter
jmp
sub
lret
pusha
cmc
rcrb
push
jns
fucomip
gs
stc
repnz
jne
and
out
xchg
fs
fcoml
rorb
hlt
rorb
movsb
nop
dec
xchg
movsl
cs
in
cs
or
into
es
adc
loop
dec
ja
dec
subb
loope
fwait
and
cmp
popf
dec
adc
ret
loopne
out
test
adc
adc
xorb
cltd
pop
sub
add
mov
jae
jo
cmc
add
or
sub
iret
add
cmp
in
imul
roll
or
sbb
pop
lods
js
cmp
add
add
xchg
clc
adc
ret
test
add
arpl
out
es
mov
fisubl
jno
and
mov
xchg
pop
orb
cmp
adc
shll
pop
rcrb
jno
int3
nop
test
and
mov
jmp
jmp
stos
or
add
adc
cmp
push
pusha
lcall
push
fmull
mov
push
or
sbb
adc
out
inc
xor
ret
shlb
sub
xor
iret
aaa
cmp
dec
aam
nop
addr16
call
fisttpll
dec
cmpsb
pop
test
jns
add
ret
add
mov
and
lea
in
and
imul
xlat
xor
les
xchg
add
sub
lds
push
imul
sbbb
ja
out
xor
lock
les
xchg
mov
test
aad
jne
xor
mov
cmpsb
arpl
pusha
cmp
or
test
pusha
cmp
adc
ror
in
sbbl
push
out
cmovle
xor
sub
sbb
cmp
pushf
js
ds
out
add
inc
fadds
int3
mov
xchg
dec
sbb
xor
fildl
out
push
mov
nop
call
xchg
lcall
mov
nop
popf
inc
add
pop
test
icebp
ds
lods
int3
add
sbbl
pop
loopne
dec
into
inc
aaa
jbe
loope
scas
in
cmp
inc
mov
mov
icebp
addb
cmp
jecxz
orl
pusha
jle
add
cltd
andl
adc
ret
lock
jmp
dec
icebp
in
out
add
dec
fstpt
xchg
ljmp
mov
enter
add
ret
ret
jecxz
adc
dec
jbe
in
fmull
mov
sbb
fs
push
loop
sbb
adc
loope
out
cmpsl
test
js
adc
add
or
testl
sub
jb
cmp
mov
pop
or
das
xchg
rclb
add
rcrb
shrb
xor
or
push
pusha
inc
xor
mov
enter
loopne
or
adc
mov
cmp
adc
mov
mov
xor
pop
mov
fisubl
and
inc
in
adc
nop
mov
mov
aaa
pop
icebp
add
fldt
mov
mov
mov
mov
xorl
adc
cmpsb
loopne
fsubr
lret
loopne
add
jge
ljmp
mov
pop
pop
shrl
les
pop
sbb
daa
nop
enter
push
pop
clc
push
push
cmpsb
popl
das
add
pop
mov
push
jbe
pop
inc
sbb
rol
fisubrs
mov
or
adc
and
add
out
mov
sub
jo
insl
push
pusha
pushf
push
jmp
add
cmp
in
scas
stc
push
lods
jmp
fadds
push
add
jmp
adc
pop
call
call
aad
insl
das
mov
pop
sub
ret
xchg
pop
xor
out
fxch
out
push
and
mov
dec
pop
pop
mov
vpsubsb
mul
scas
mov
sbb
push
sub
bound
in
sbb
mov
xchg
inc
lret
loop
rcrb
aas
mov
pusha
jmp
clc
jae
enter
ret
popa
xchg
pop
aad
out
lcall
mov
mov
push
or
adc
test
xchg
js
filds
nop
adc
pminub
mov
and
imul
and
mov
xchg
ja
subb
jg
add
mov
pop
add
xchg
sub
imul
xchg
scas
pop
rcl
fsubrp
sub
cmp
jae
ret
je
sbb
into
jmp
div
cld
and
xchg
add
lods
imul
dec
scas
into
cs
das
sahf
sub
fnstenv
and
xor
popa
sbb
ret
inc
aad
add
or
mov
adc
dec
xor
adc
xlat
xor
add
insl
loop
add
xorb
fstp
jmp
repnz
add
shlb
adc
adc
pop
mov
jae
leave
arpl
inc
xchg
sub
adc
out
mov
mov
jmp
pop
or
or
daa
shl
ds
cvtpi2ps
pop
cli
clc
jl
test
lcall
add
test
gs
bound
lret
sti
rcl
add
pop
mov
push
cmp
sbb
mov
sti
xchg
or
xor
add
mov
sub
into
orl
hlt
test
sbb
dec
mov
int
mov
mov
mov
push
cmpl
mov
mov
dec
shlb
ds
jo
cmpsb
jae
loope
fsub
sub
test
adc
jg
jecxz
jg
pusha
arpl
pusha
mov
fcmovbe
cmpl
data16
pop
push
sarb
sbb
jne
mov
test
jne
add
push
sbbb
or
jp
or
scas
clc
nop
add
jge
add
cs
js
fistpl
xchg
mov
jg
jl
add
loop
pop
mov
loopne
pop
nop
stos
call
xor
or
out
add
stc
adc
std
xorb
jns
jae
add
xchg
pop
out
leave
and
insl
xor
adc
or
push
popf
fildl
xor
or
xor
test
add
and
orl
xlat
xchg
fstps
push
aas
sub
mov
jmp
imul
scas
jge
sbb
in
je
push
mov
xor
orb
and
lret
jge
adc
les
or
or
lea
pop
lock
jmp
fmull
cmc
add
shll
mov
das
loope
fisubs
and
xor
sbb
sbb
stos
fcmovne
rolb
lock
ret
insl
movsl
or
dec
and
in
or
adc
pop
push
sbbl
xor
or
jmp
ljmp
add
push
inc
mov
out
fs
cmp
shl
push
shll
and
xchg
cmp
in
adc
pop
iret
mov
jmp
push
sub
jnp
pop
xchg
xor
add
inc
and
adc
nop
dec
stos
les
add
sbb
ds
or
pusha
sbb
push
je
popf
pop
mov
jp
popa
dec
nop
rcr
addr16
aam
add
mov
call
adc
sub
out
sbbl
pmaxsw
imul
pop
add
hlt
cmp
xor
dec
or
pop
mov
loope
popf
mov
jne
lea
sub
cmp
xor
shll
push
add
or
add
pusha
lea
xchg
or
push
xchg
movsl
adc
pop
add
leave
dec
ja
lock
mov
xor
pop
push
sub
jne
sbb
scas
gs
negb
sahf
xlat
sub
js
xchg
xchg
and
push
sbb
cmpsl
mov
add
movsb
pop
int
incl
or
or
and
addb
sti
cltd
int
ljmp
xor
dec
push
push
adc
adc
mov
rclb
lret
sbb
jp
sub
rol
push
test
repz
or
data16
fimuls
rolb
clc
or
clc
jbe
cmpb
xchg
push
lahf
mov
sbb
add
cli
popf
mov
dec
lea
stos
ds
aaa
or
idivb
popf
insl
cmp
pop
adc
dec
mov
cld
stc
mov
sahf
pop
testb
sbb
jb
inc
cwtl
jbe
lds
sub
cmp
add
xor
fstpt
loop
je
sbb
cmc
adc
add
jns
rcll
sbb
fnstcw
jne
cmp
test
mov
xchg
mov
add
rcll
in
pop
popa
jo
xchg
pushf
faddl
pop
int
scas
mov
ljmp
in
or
lret
fs
in
cs
and
push
mov
sbb
js
int3
adc
sub
adc
xchg
push
js
dec
ret
in
and
repz
pop
mov
cwtl
orl
add
xchg
ss
inc
sbb
and
in
pop
xor
add
mov
outsb
call
bound
jae
int
mov
test
jnp
adcb
das
xchg
push
pop
pop
cs
pop
sub
mov
popa
xchg
push
xchg
ret
mov
adc
shrb
or
inc
loop
pop
sub
mov
int3
pop
jecxz
inc
rcr
popf
jne
cli
jae
pop
sbb
sbb
mov
fimull
aaa
pop
insb
mov
add
sbb
sub
arpl
dec
dec
dec
enter
adc
mov
out
fildl
xchg
fiaddl
xor
imul
xchg
dec
adc
sub
jl
subb
xor
inc
xchg
xorl
cmp
arpl
mov
xor
nop
fildll
addb
and
mov
mov
insl
dec
roll
addb
mov
gs
popa
pop
cs
imul
out
imul
pushf
xlat
xlat
jecxz
mov
add
pop
jl
pushf
jno
ror
lret
push
inc
adc
shll
adc
mov
jecxz
sti
xchg
pop
cs
pop
sub
adc
mov
and
nop
es
or
fcompl
stos
adc
shrl
ja
sbb
fisubs
jae
icebp
sub
pop
mov
fmull
xor
add
sbb
push
mov
add
mov
shl
mov
popf
pop
xor
sub
inc
jle
xor
mov
mov
fldt
movzwl
push
jne
adc
mov
cld
pop
push
movl
inc
mov
mov
out
pop
mov
clc
daa
cwtl
jge
add
push
add
rorl
or
mov
bound
in
adc
sub
inc
aaa
popf
scas
pusha
test
mov
cmp
mov
inc
or
cmpsb
cmp
jnp
xchg
je
push
xor
adc
adc
cmp
movsb
jno
or
adc
pop
sbb
adc
adc
xchg
repnz
dec
pop
dec
loopne
jno
mov
fwait
xchg
shll
cltd
pop
mov
mov
pop
iret
daa
jae
add
in
mov
cmp
clc
dec
mov
dec
jl
add
add
test
push
add
and
pop
adc
mov
cmpsb
sbb
add
ds
lods
andb
test
cld
jmp
mov
sbb
push
in
filds
xchg
mov
fidivrl
out
imul
leave
jns
mov
cmpb
cwtl
add
push
pop
sub
test
movsb
loopne
xchg
sahf
rolb
and
outsl
xor
adc
pop
aam
in
fs
bound
mov
sbbb
xchg
cmp
adc
test
add
jno
loope
add
and
dec
ret
in
jnp
clc
out
mov
bswap
jns
inc
sbb
dec
jne
cmp
push
push
mov
pushf
lods
in
mov
ljmp
decl
xor
xor
add
xor
and
sub
es
cmc
aaa
js
inc
imul
popa
ja
pop
ljmp
sbb
les
xor
xor
mov
add
jmp
arpl
dec
fmull
pop
in
fisubrl
cmp
cmpsb
or
sahf
shll
add
xor
push
sub
movsl
sar
or
enter
jb
sbb
add
and
xor
mov
adc
popf
jns
rclb
test
into
inc
stos
sbb
jmp
sbb
mov
pop
out
sub
mov
lods
nop
and
jg
xor
and
push
inc
fstpt
sub
addb
dec
inc
mov
popa
mov
jb
xor
inc
mov
push
dec
mov
cmp
push
aas
adc
xor
aas
and
adc
push
lock
andb
xchg
pop
addl
jns
adc
fsub
int3
dec
js
cwtl
sbb
sbb
pop
out
or
pop
hlt
xor
add
cli
add
add
orl
mov
pop
mov
add
push
imul
mov
add
push
dec
add
jl
cltd
inc
pop
jmp
mov
jle
pop
push
popa
shlb
xor
es
mov
daa
inc
jl
inc
ret
push
sub
mov
sbb
ss
mov
movl
sbb
mov
std
pop
dec
mov
cmpsl
sub
inc
pop
mov
mov
loopne
xor
faddl
and
inc
cmpsb
mov
pop
popa
popf
jmp
xor
inc
testb
icebp
fldenv
test
mov
jmp
add
fsubrs
dec
add
fdivrs
and
fs
stc
and
out
or
cltd
sbb
mov
add
or
xchg
pop
sbb
xor
jge
jmp
test
adc
sbb
jge
andl
push
jl
push
outsb
add
popa
ret
shl
push
jmp
jl
pop
inc
int
add
lods
movsb
sbb
rcrb
loopne
push
xor
cmc
sbb
in
fisttpll
sub
pop
lahf
sahf
filds
add
mov
mov
jmp
and
jl
cmp
pop
jl
mov
add
mov
dec
add
dec
lcall
mov
sbb
cli
mov
es
aas
ds
cmp
add
bound
jp
xchg
iret
mov
in
lret
xchg
mov
jle
subb
or
and
mov
lea
inc
and
cmp
add
pop
rdtsc
jle
inc
rcl
ja
mov
test
sub
push
inc
dec
data16
cmpsl
cmp
outsb
leave
insl
fcmovnb
sahf
push
ret
pop
and
je
adc
push
mov
fwait
cmp
inc
add
fs
fsubrs
and
rol
or
sbb
adc
popa
mov
adc
sbb
mov
add
jae
movsl
mov
cld
sti
ficoml
adc
push
add
pop
ljmp
ret
dec
xor
push
sbb
add
push
sub
or
push
push
mov
jno
pop
sbb
aad
fwait
test
mov
jnp
sbb
xor
pusha
push
pop
mov
push
sub
leave
ret
or
mov
mov
imul
outsb
mov
sbbl
push
sub
adc
jb
stos
aam
mov
andb
or
out
pop
or
and
xchg
add
loopne
popa
enter
mov
sarb
arpl
cmp
decl
push
pusha
push
pop
push
mov
and
cmp
xorb
movsb
pop
pop
jmp
mov
call
cmc
sbb
or
xchg
fistps
push
rolb
rcrl
mov
and
mulb
clc
inc
mov
add
dec
mov
cld
sarl
xor
cs
add
loopne
pop
and
add
and
or
push
lods
xor
xlat
cmp
pusha
adc
add
push
add
jns
hlt
cwtl
push
subb
xchg
sti
gs
fldt
push
push
pop
push
insl
push
rorb
xorl
sub
loop
xchg
sti
sahf
xor
jo
xor
dec
mov
adc
les
sub
mov
mov
hlt
add
sti
and
sbb
or
xchg
int
xchg
inc
or
divl
int3
or
cmpsl
jge
aad
xchg
ja
sbb
cmp
shlb
push
lods
add
push
fwait
insb
scas
adc
dec
cmc
mov
jbe
nop
mov
lret
mov
add
and
add
dec
dec
mov
into
cmp
adc
inc
adc
outsl
addb
push
cmpsb
mov
adc
jge
mov
rcll
add
add
cmp
aam
testb
mov
push
xchg
inc
popa
mov
jmp
inc
push
sbb
adc
and
iret
cmpsl
inc
dec
or
mov
xor
jo
cmovp
jns
mov
outsb
inc
inc
push
add
cmp
xchg
jl
inc
cmp
jg
sub
imul
faddl
dec
mov
int
dec
mov
inc
xor
jecxz
push
test
sbb
outsb
xchg
fucomi
pushf
subl
jmp
pop
cmp
mov
rcll
add
lret
sub
mov
insl
adc
and
adc
shlb
mov
mov
hlt
push
cli
and
or
adc
cli
imul
sbb
jo
jmp
int
or
dec
mov
das
mov
xchg
xorl
push
and
and
pop
ss
add
idiv
mov
push
inc
pop
push
mov
iret
xor
imul
fistps
pop
popa
adcb
ss
jmp
sub
mov
or
popa
push
mov
mov
out
loopne
mov
test
jns
movsl
mov
add
in
out
and
mov
add
adc
imul
cmp
xchg
cmp
adc
sub
add
and
inc
pushf
xchg
shrb
sahf
jb
scas
inc
mov
popf
pop
dec
ja
ds
addr16
dec
mov
xchg
sub
fists
dec
or
or
push
inc
fiaddl
push
jecxz
adc
add
loope
sbb
mov
add
cmp
orb
push
dec
jmp
rolb
pop
and
aas
cmp
fstpl
jp
pop
fists
mov
adc
jmp
sub
je
stos
add
and
mov
jae
jmp
imul
xchg
dec
pop
xchg
push
cld
cld
test
sub
fisubs
xlat
jmp
outsb
mov
ja
andb
and
dec
adc
inc
into
add
jg
hlt
pop
shll
mov
pop
xlat
outsl
mov
adc
and
push
mov
mov
jno
nop
les
out
inc
shlb
out
add
or
cmp
add
push
xchg
pop
stos
inc
jns
mov
inc
stc
test
add
mov
add
inc
pushf
loop
push
pop
xchg
push
add
xor
jbe
push
mov
mov
pop
sub
adc
add
push
jg
mov
cmc
add
pop
or
mov
push
repz
mov
mov
inc
and
sub
ret
pop
mov
xor
mov
call
sub
aaa
sub
add
jle
pop
jo
inc
mov
mov
orl
outsl
xor
xchg
add
sahf
test
cli
xchg
clc
inc
push
sar
sub
subb
pop
jl
mov
adcb
fwait
and
adc
add
inc
push
aaa
dec
cltd
lcall
call
inc
imul
xor
loopne
adc
mov
subl
lock
sbbl
cmp
dec
pusha
add
pushf
dec
jp
stc
adc
add
jge
adc
outsb
pushf
add
mov
popa
subl
xor
inc
insb
js
jno
jno
cmpsb
jl
ja
cmp
mov
adc
adc
or
xchg
pop
sub
pusha
xchg
popl
cmp
les
push
dec
fnclex
push
test
orb
mov
lea
mov
mov
mov
hlt
daa
push
lea
pop
adc
cmp
mov
xor
shr
or
sarl
jbe
scas
insb
xor
jle
mov
sub
cmp
fsubp
shlb
jne
and
xor
lds
jmp
sub
cmp
stos
sub
dec
mov
and
stc
and
dec
pusha
xor
add
adc
inc
and
pop
movsb
pusha
test
xchg
test
popa
scas
ret
fcoms
stc
pop
test
jne
and
ss
fldenv
in
sub
mov
lods
outsb
adc
push
push
add
xor
outsl
stos
xor
test
mov
lea
push
popa
mov
push
push
mov
iret
push
into
mov
cwtl
cmpsl
mov
enter
sbb
jle
xor
adc
jb
insb
fsubl
ret
fcmovu
adc
adcb
fdivrs
cli
or
scas
lock
and
push
rclb
into
pop
pop
xor
xchg
push
mov
push
xchg
out
inc
idivb
fwait
imul
stc
jle
jmp
xor
cmp
js
jmp
arpl
add
mov
inc
testb
out
or
nop
cmp
inc
jns
stos
push
mov
or
pop
inc
add
stos
push
pop
sub
or
mov
in
add
mov
mov
ss
adcb
lret
je
leave
test
stc
cwtl
dec
add
push
lods
sbb
pop
lret
orl
xchg
imul
cli
push
mov
mov
clc
pop
not
fmull
and
or
push
xchg
xor
mov
adc
sbb
xor
fstp
dec
mov
je
push
ja
add
sti
jle
pop
cmpb
or
mov
into
add
es
movaps
adc
mov
cs
pop
pop
bound
dec
cmp
pop
dec
jp
inc
and
sbb
push
call
lea
lds
ljmp
or
xchg
push
and
or
out
pop
es
daa
ret
mov
cmp
or
bound
roll
scas
dec
add
or
pop
sub
and
mov
rorl
push
mov
sub
test
repnz
call
pop
mov
nop
or
mulb
sub
in
sarb
es
mov
or
insb
aas
push
xlat
xchg
mov
or
cmc
sub
mov
xchg
xchg
adc
add
ficoml
lock
jle
repz
add
cld
push
pop
mov
mov
stos
or
aas
test
je
fsubrs
mov
popf
cmp
push
mov
pop
pop
repz
inc
xor
xor
and
adcl
add
hlt
add
mov
mov
ja
sbb
lahf
mov
or
int
adc
xorb
out
add
mov
mov
mov
add
imul
stos
in
das
dec
mov
pop
sub
push
in
sbb
dec
add
jl
pop
jne
loop
jmp
add
dec
lret
dec
mov
add
test
roll
aaa
lret
cmpsl
lcall
mov
inc
lock
cmp
cmpsl
andb
ret
flds
jp
push
mov
jno
pop
popa
mov
test
pop
dec
jo
in
or
dec
pop
outsb
mov
cmpsl
mov
test
mov
data16
or
mov
jmp
mov
hlt
dec
add
icebp
and
push
xor
rclb
nop
pushl
mov
scas
mov
iret
mov
enter
dec
xor
stos
dec
dec
sub
add
lret
add
push
mov
popa
adc
dec
xor
mov
pop
ret
popa
jmp
out
jp
clc
mov
insb
mov
xorl
fstps
stc
jbe
adc
cmpb
jbe
add
ret
test
mov
cmp
adc
xchg
mov
push
lea
xchg
test
lock
les
xor
inc
faddl
and
das
scas
mov
call
jge
add
add
sbb
pusha
jecxz
mov
xchg
cmp
pop
shlb
out
push
mov
inc
add
cmpsb
xorb
xor
inc
sub
inc
cld
mov
jne
ja
add
xor
mov
dec
jb
mov
adc
data16
and
addr16
add
xlat
mov
add
dec
add
mov
js
xchg
mov
arpl
fidivrs
adc
cmp
and
daa
sti
inc
pop
mov
gs
push
loope
xor
jge
mov
ljmp
test
mulb
pop
add
mov
sub
push
dec
nop
inc
or
jg
addr16
add
sahf
lods
xchg
nop
push
lret
outsb
add
rorl
nop
jno
lret
dec
ja
mov
pop
dec
dec
into
rcll
adc
or
nop
push
jno
add
jg
cld
pop
add
pushl
adc
int3
inc
or
pop
push
lea
stc
sub
pop
and
cwtl
or
fimuls
into
pop
cli
icebp
pusha
ja
sbbl
lock
test
les
inc
or
mov
or
iret
daa
pop
push
enter
mov
mov
pusha
aaa
js
inc
loopne
outsl
mov
add
xchg
test
in
adc
into
mov
shll
cmpb
loop
cs
sub
xchg
and
daa
mov
pop
imul
movsl
add
in
ds
cmp
icebp
push
ja
lea
icebp
inc
mov
addr16
cmpsb
clc
xor
inc
or
lret
rol
pop
pop
sub
push
sub
xor
repz
insl
cmp
mov
xor
add
push
cmp
mov
and
jnp
pop
sub
add
aas
sbb
dec
jp
adc
cmp
sbb
movsl
or
xorb
inc
add
push
outsl
add
int
adc
add
push
add
cmp
xor
or
test
add
add
push
loopne
fld
sbb
inc
add
push
add
dec
test
xor
jns
or
sbb
rclb
push
enter
adc
or
add
jo
xchg
lock
add
sbb
jl
jo
adc
or
dec
and
push
add
jbe
add
lcall
hlt
dec
push
adc
push
repnz
adc
lods
orb
pop
cwtl
pop
add
xor
jp
pusha
inc
inc
fcoml
push
lcall
cmp
adc
mov
push
dec
pop
call
sub
jge
sub
mov
inc
adc
mov
or
fnstenv
ds
outsb
add
inc
movsl
ja
push
testl
pop
ljmp
test
or
inc
outsl
add
inc
lods
shll
or
pop
pop
imul
add
sbb
lods
lret
and
inc
add
notl
pop
movsb
les
jle
mov
call
and
and
pop
and
sarl
inc
jno
shll
repnz
adc
mov
aam
mov
nop
and
jl
xor
sbb
shlb
xor
adc
push
and
inc
rorb
dec
loop
and
in
adc
lcall
cmp
je
sub
inc
lods
mov
shll
int3
js
inc
cwtl
cmp
xor
cmp
test
mov
fnstsw
dec
jl
xchg
cmp
outsl
les
pop
xor
and
movsl
jmp
lea
daa
sti
pop
xchg
push
das
cmp
pop
addb
dec
and
push
pusha
push
sarb
roll
cmp
cmp
mov
sbb
movsl
rolb
dec
add
push
lods
and
sub
lret
mov
dec
ljmp
mov
adc
les
dec
lds
sbb
jl
and
mov
repz
nop
enter
call
sbb
pop
subb
pop
loopne
dec
int3
add
and
hlt
add
imul
mov
mov
pushw
movsl
jecxz
int3
inc
push
add
add
pop
cmp
sub
adc
ds
imul
inc
fadds
and
xchg
rolb
inc
or
rcll
orb
addb
push
cmp
leave
pusha
arpl
mov
xor
xchg
sbb
add
push
movsb
cmp
xor
and
and
nop
outsb
sbb
cmp
pop
sbb
cmp
add
adc
lahf
add
mov
addr16
test
repnz
cmp
add
pusha
sub
outsb
inc
stos
xlat
orl
cmp
pop
mov
xchg
xchg
push
cltd
mov
dec
iret
sub
sbb
ljmp
adc
test
out
lahf
add
ret
cld
mov
lcall
or
ffree
stos
test
mov
jae
pop
pop
stc
pusha
inc
test
xor
stc
int
mov
mov
dec
inc
dec
push
mov
sbbl
mov
add
fsts
sbb
or
decl
and
jg
mov
push
test
movsl
pop
pop
sahf
cmp
test
inc
xchg
push
rorb
sub
cmp
push
and
and
vmread
out
jns
inc
flds
mov
pop
cli
adc
inc
mov
mov
mov
or
sar
cmp
adc
lcall
ret
xchg
or
push
dec
sbb
jbe
push
adc
push
xor
sarb
add
mov
ljmp
stos
les
xor
lret
add
inc
cwtl
roll
sahf
push
mov
jo
mov
or
and
or
shlb
sbb
jp
cmpsl
and
lret
dec
sub
sahf
and
or
test
xlat
adc
repnz
shlb
add
cmpl
dec
or
add
movl
lahf
add
sbb
scas
jge
repnz
test
adc
and
ss
adc
sti
cmp
xor
or
xor
lods
rol
shr
pop
sbb
cltd
pusha
bound
sti
sbb
std
fadd
mov
push
or
or
add
sub
adc
aaa
inc
stos
call
lods
cmp
and
add
sub
mov
and
pusha
addb
in
or
scas
add
scas
in
jmp
xchg
std
or
enter
and
das
or
push
lret
sti
call
repnz
inc
cs
mov
mov
repz
push
fmuls
bound
jge
repnz
aad
sahf
jecxz
outsl
xorb
pop
sbb
mov
xchg
imul
js
sub
sbb
add
pop
lods
stos
mov
push
clc
orb
xchg
je
lahf
or
or
adc
mov
nop
cmc
nop
cltd
add
mov
cwtl
or
and
sbb
in
fldenv
int3
repnz
xor
jo
roll
in
bound
rolb
icebp
and
add
outsl
test
add
clc
stos
cmp
jnp
ret
add
mov
jmp
dec
imul
sbb
ret
xor
cmpb
cltd
push
mov
and
add
mov
lods
test
lmsw
xor
call
add
mov
lods
cmpsb
sti
push
sbb
in
sub
dec
shll
jnp
cltd
or
xchg
cmp
clc
or
sbb
mov
pop
add
push
arpl
adc
mov
adc
out
sahf
mov
mov
cmp
enter
cld
lcall
mov
addb
sub
cmp
fmull
mov
add
popf
sahf
scas
xor
jo
push
addb
sbb
pop
es
adc
adc
xchg
inc
es
push
xlat
hlt
mov
sar
add
cmp
cs
push
mov
mov
leave
add
call
adc
add
lret
enter
and
add
lret
fisttpl
add
adc
popf
mov
xor
push
cmpsb
pop
and
movsl
mov
js
scas
mov
adc
inc
jbe
cwtl
cmp
jle
pop
cwtl
pop
or
cs
push
xor
faddl
inc
fadds
fwait
repz
add
sub
and
or
push
testb
std
movsb
inc
test
aaa
pusha
in
andl
repz
lret
data16
adc
push
push
xchg
cmp
cli
loope
int3
jb
dec
mov
inc
into
add
movsb
repz
cmp
push
mov
mov
sub
and
inc
clc
xchg
orl
and
clc
lock
inc
mov
in
sbb
pop
mov
xor
aam
movsb
jl
inc
repnz
mov
mov
jnp
push
hlt
xor
push
pop
dec
add
sbbb
pop
sub
mov
push
subb
adc
loopne
out
add
mov
jo
add
cmp
mov
popf
pop
pusha
and
ds
in
test
jmp
loopne
or
pop
pop
movsb
sub
jns,pn
add
xchg
add
push
popa
inc
loop
or
inc
add
and
aaa
rorb
xor
enter
pusha
or
idivb
cmp
sbb
std
loope
loope
sub
clc
iret
leave
pop
add
flds
add
push
dec
push
sbb
sub
mov
or
nop
push
or
sbb
adc
add
out
mov
mov
add
out
and
inc
pop
incb
je
adc
in
cltd
mov
xor
push
dec
adc
xor
xchg
sub
loopne
jb
push
mov
inc
sub
out
pop
inc
cwtl
pusha
xor
and
add
cmp
mov
push
in
popa
or
inc
adcb
and
pop
popf
out
dec
xchg
sub
daa
bound
hlt
pushf
add
mov
test
addb
hlt
mov
rclb
jmp
add
add
les
dec
pop
int3
rol
jle
cmc
xor
dec
cwtl
add
add
jl
push
xor
xchg
popf
daa
lock
add
push
dec
and
ss
jns
dec
sbb
addr16
cmp
fisttps
add
repz
xchg
cmp
or
pop
inc
roll
rol
ss
pop
daa
sbb
gs
mov
pop
or
insl
or
int3
inc
faddl
outsl
roll
aam
hlt
shrb
ljmp
adc
xchg
add
add
mov
sub
in
ret
inc
ss
jo
or
ja
mov
subb
push
in
je
xor
into
mov
dec
mov
push
and
rolb
push
inc
xor
movsb
jecxz
cmpsl
cmp
aam
lods
or
stos
mov
sbb
in
push
aam
dec
nop
cmp
loop
pusha
xchg
and
adc
mov
push
inc
push
cmp
iret
repz
orl
lock
cmpsl
mov
adc
daa
cmp
jno
jns
sbb
add
sub
and
test
add
adc
mov
mov
and
mov
lcall
inc
arpl
cwtl
sar
out
loopne
xchg
xorb
scas
xchg
jnp
pusha
xchg
in
mov
adc
dec
mov
jp
rcrb
andb
lock
inc
inc
add
xor
dec
clc
xchg
or
push
push
test
mov
fisubs
xchg
adc
mov
pop
add
loop
xor
sbbb
add
pop
pushl
jnp
enter
pop
sbb
mov
es
rorb
add
xchg
insl
or
dec
and
mov
jecxz
push
mov
and
jl
xor
sub
fldenv
pop
repnz
fiadds
cmp
ret
ja
daa
cmp
rclb
aad
mov
negb
adc
test
cmp
adcb
js
add
sbb
inc
sbb
push
push
lock
insl
pop
push
test
enter
fimull
xor
mov
mov
sub
testl
adc
adcb
aam
je
cmp
in
imul
pop
lds
xchg
add
je
scas
mov
inc
adc
lret
xchg
inc
aaa
mov
mov
es
and
aam
lods
mov
lock
mov
mov
push
mov
push
and
xlat
das
jl
dec
add
push
cmpsb
fucom
add
dec
movsb
test
add
ret
and
test
test
icebp
and
cltd
xchg
add
rclb
sbb
ret
ret
sbb
andb
cmp
inc
lods
lahf
and
push
or
clc
add
push
out
cmpsb
add
cwtl
mov
out
jne
adc
add
add
push
divb
xor
jp
pop
jns
sub
outsl
pop
push
jnp
sahf
imul
inc
lds
pusha
lea
adc
add
cltd
mov
sbb
add
mov
dec
xor
enter
call
sbb
push
push
mov
mov
mov
add
mov
gs
divl
add
fnsaves
out
xchg
jo
and
pushf
aam
test
xor
je
push
sub
xlat
mov
mov
sbb
jle
add
test
inc
int
lret
pusha
enter
and
mov
push
rorb
pushf
je
inc
dec
and
xchg
jg
inc
movsb
in
pusha
pop
or
pop
fwait
pop
mov
les
clc
pusha
fs
mov
fdivrs
lock
pushf
je
and
mov
cmp
add
popf
mov
or
enter
inc
pop
in
sbb
xor
cmc
add
and
dec
pusha
fnstenv
push
inc
adcb
adc
in
push
lret
xor
mov
xchg
jle
popf
add
imul
jle
pushf
or
mov
dec
push
xor
mov
test
sub
inc
insb
sbb
pop
je
mov
ljmp
stos
nop
hlt
mov
mov
pop
mov
add
aad
ja
mov
xchg
sbb
add
push
inc
lods
mov
jb
push
mov
out
mov
addl
test
jmp
push
cltd
lods
xor
outsb
pop
jae
pusha
sub
jnp
mov
jle
stc
stc
subl
stos
mov
add
jp
or
out
sub
insl
lock
jge
cwtl
fdivl
int3
pusha
cmp
sbb
stos
xchg
add
xchg
loopne
movsb
adc
dec
das
call
jbe
loopne
outsb
add
pop
jg
sarl
xor
popf
daa
int3
xchg
add
dec
pop
loope
inc
lock
push
xor
andb
mov
pop
mov
dec
insb
rorl
mov
icebp
mov
ja
add
or
shll
std
out
imulb
adc
xor
or
sub
mov
aad
cwtl
xchg
mov
add
int
cmp
cmpsb
cmp
push
int
xchg
mov
into
shl
push
in
adc
cmp
leave
jl
and
les
mov
add
adc
sti
shll
test
leave
pop
loopne,pt
cmp
jbe
lret
add
mov
les
jmp
add
cltd
cmp
iret
mov
andb
or
jecxz
sti
pop
jecxz
sbb
add
mov
daa
lcall
cmp
add
outsl
mov
scas
in
add
push
cld
push
lcall
daa
bound
inc
enter
mov
lret
add
push
ret
repnz
pop
mov
inc
ret
movsl
xchg
sbb
dec
jle
or
enter
outsb
lods
movsb
iret
mov
sub
jg
push
and
loopne
test
push
push
repz
and
test
push
mov
sti
cmp
mov
add
stc
popf
pop
and
add
aam
xchg
or
add
sub
or
fwait
push
inc
adc
sti
adc
sub
jno
sbb
or
test
inc
xor
rolb
call
xchg
pusha
rcrl
xchg
xchg
enter
inc
pop
das
dec
or
shll
mov
xchg
pop
xchg
or
inc
jb
repnz
xor
lods
and
icebp
mov
and
cmp
aam
outsl
ficompl
in
xor
dec
das
add
int
mov
inc
aaa
sub
xor
call
out
jle
rcrb
or
and
mov
repnz
insb
test
jne
pusha
call
inc
add
ds
je
cwtl
inc
push
mov
test
mov
cmp
add
or
jecxz
sub
test
test
rorb
loopne
mov
sbb
int
loope
mov
decb
push
pop
push
daa
adcb
pushf
mov
xchg
sbb
out
flds
inc
out
data16
dec
lcall
inc
mov
sub
mov
mov
repnz
inc
sub
xchg
nop
rol
jne
or
lock
mov
pop
sub
lods
test
mov
insb
add
das
arpl
push
mov
ljmp
or
inc
sti
add
cs
js
dec
shl
dec
lods
mov
hlt
add
fdivrl
mov
les
out
daa
aam
sub
push
xchg
adc
add
inc
xor
imul
roll
mov
pop
int3
push
sbb
add
daa
jmp
int
aam
inc
std
adc
daa
jo
and
push
push
in
cmp
or
xor
cmpsb
add
xchg
int3
inc
test
push
aaa
setbe
add
and
dec
sub
ss
add
nop
and
inc
loopne
aam
int3
dec
or
rcl
aas
bnd
add
leave
sub
and
es
xchg
cmp
sub
xchg
inc
cwtl
mov
cmpsb
push
stos
and
add
mov
mov
movsl
rorb
cmp
aam
or
or
in
mov
push
cmp
pusha
addb
jl
push
mov
daa
sbb
popa
movsl
jnp
cs
scas
dec
push
loope
cwtl
add
inc
push
jbe
xchg
and
cmp
andb
dec
add
pop
test
mov
jb
and
xor
push
clc
pop
pop
or
in
stos
flds
jmp
and
cmc
mov
xchg
dec
shl
jb
xor
sub
addl
push
shl
or
xchg
roll
dec
nop
push
lock
movlps
lock
push
and
lods
movb
sahf
mov
pop
in
cmp
lret
hlt
lods
or
sbb
add
sbb
push
sub
pop
lods
sbb
pop
mov
inc
or
add
mov
cmc
push
push
adc
and
pop
pop
or
xchg
mov
mov
sbb
inc
add
repz
sbb
loopne
xchg
sbb
inc
dec
sub
add
and
cmp
insb
pop
fsubs
call
push
in
cmpsb
mov
pop
sub
add
and
mov
adc
jno
mov
mov
lahf
popl
or
addb
shlb
call
fimuls
and
xchg
lods
je
inc
add
mov
andb
push
inc
mov
mov
xor
add
into
dec
lahf
adc
repnz
xor
dec
mov
mov
cwtl
dec
dec
or
inc
jae
adc
lock
add
mov
arpl
ds
fsubrs
outsb
add
mov
cli
push
mov
test
int
and
mov
and
adc
sub
mov
fwait
and
je
int3
mov
cmp
lret
aaa
mov
push
sbb
cmpsb
jmp
scas
push
mov
inc
test
cwtl
and
cmpsl
mov
sub
or
leave
jae,pt
dec
sbb
mov
cmp
add
test
sahf
scas
dec
sub
pop
adc
daa
xchg
mov
dec
adc
shl
inc
and
lcall
sub
mov
dec
or
rcrb
movsb
dec
jae
adc
jecxz
mov
xor
and
out
adc
jl
mov
pop
jge
pushf
nop
adc
es
pusha
es
cmp
inc
push
mov
jle
pop
pshufw
sahf
test
test
aad
rolb
notl
mov
push
test
iret
and
imul
scas
jge
xchg
sub
sahf
cs
mov
adc
push
icebp
popf
faddl
jge
rolb
mov
sub
jns
and
int
push
or
sbb
dec
movsb
shll
mov
or
add
in
in
push
mov
mov
addl
rolb
mov
jnp
add
arpl
adc
mov
add
pop
or
xor
or
pop
out
sbb
ret
add
enter
pop
js
es
lahf
cmp
mov
aaa
sub
cmpsl
outsb
dec
push
push
push
nop
xor
out
cmp
add
sub
mov
pop
inc
inc
add
bound
jg
sub
insb
mov
inc
mov
lock
jg
jns
xor
pushf
xchg
loopne
sti
out
loop
inc
mov
es
stos
jge
loopne
inc
call
cmp
aam
idivb
out
adc
mov
in
int
and
lret
or
ror
daa
adc
iret
andps
rclb
mov
xor
fdivrl
and
leave
mov
loopne
push
sub
jp
test
xlat
adc
add
stos
mov
and
dec
xor
cmpb
mov
jecxz
ss
ret
push
xchg
out
add
sahf
fcoml
push
xchg
add
lea
rorb
into
outsb
add
mov
pop
movsb
adc
hlt
adc
je
test
rorb
add
xor
lret
cmp
and
call
sub
inc
xor
jo
adc
mov
in
testl
rorb
rolb
mov
push
sbb
rorb
addb
jl
push
cmpsl
repnz
syscall
or
mov
lret
shlb
outsb
divl
fisttpll
sbbb
dec
mov
testb
dec
fsubs
adc
jp
dec
lods
lock
negb
mov
adc
inc
dec
cmp
cmpsb
adc
stc
rcrb
outsl
lcall
mov
jle
adc
or
or
mov
sti
fs
fldcw
cmpsb
test
dec
cmp
and
jo,pn
mov
dec
cwtl
jmp
add
cwtl
insb
adc
mov
add
jmp
je
sub
and
add
outsl
jge
pop
dec
add
inc
pop
add
mov
dec
dec
push
add
sbb
inc
enter
out
mov
sub
mov
pop
inc
sbb
orb
adc
mov
add
in
cmp
and
subb
into
xchg
jl
in
xlat
adc
sbb
jns
lds
imul
leave
out
addl
or
rcrl
fldenv
inc
xlat
pop
push
xchg
pop
loopne
add
cmp
fcoms
enter
fnsave
jg
into
movsl
mov
xchg
pop
mov
testb
push
shlb
jae
fidivrs
push
dec
mov
inc
add
xchg
xor
pop
mov
sub
scas
and
cmp
call
or
decl
mov
loopne
push
pop
mov
add
inc
daa
cmp
insb
adc
xor
mov
fsubrs
outsb
cmp
mov
insb
idivb
std
cld
inc
cmp
scas
add
mov
lods
in
mov
push
mov
and
mov
movsb
pop
fstl
mov
adc
adc
scas
push
jl
inc
iret
dec
movsb
push
push
movsl
and
mov
inc
orl
jnp
bound
push
xchg
xor
call
sbb
shlb
xchg
sub
add
into
pusha
fwait
or
inc
xchg
enter
ljmp
lods
add
popa
add
adc
dec
ret
and
negb
add
xchg
cmp
rcrb
sahf
adc
ja
rolb
popf
mov
add
and
stos
inc
and
outsl
lods
test
in
clc
adc
add
pop
shrl
daa
int3
js
sub
into
lock
inc
xor
mov
xchg
dec
xor
cmp
xorb
sbb
insb
test
ja
mov
inc
xor
call
testb
pop
push
notl
mov
aad
xchg
push
jno
scas
or
cmp
xor
mov
mov
daa
adcb
or
xchg
sbb
mov
xchg
sbb
mov
outsb
lods
rcrl
xor
add
es
pop
push
nop
pop
stos
dec
mov
mov
fmul
sub
shrb
mov
xor
sahf
sbb
inc
pop
addb
cmpsl
out
movsb
call
push
lret
or
shlb
xchg
outsl
mov
cmpsb
int
jns
mov
sti
add
lea
add
data16
dec
call
inc
xchg
or
push
add
cmp
sbb
pop
inc
sbb
add
mov
mov
je
fadds
mov
or
pop
mov
mov
pop
daa
push
add
repnz
xor
add
push
mov
rorb
mov
push
xchg
testb
ljmp
or
rol
lock
andb
sbbb
push
and
mov
sbb
mov
and
mov
dec
mov
xor
mov
or
add
ret
xor
in
shlb
xor
cmp
push
or
sbb
pop
sub
mov
dec
xchg
and
test
repz
add
stos
out
push
aam
push
int
pop
push
mov
call
imulb
mov
in
sbb
mov
test
mov
xchg
sbb
push
jnp
pop
add
repz
sub
mov
mov
push
mov
or
in
sub
mov
stc
movsl
cld
std
aas
push
int3
lret
add
scas
push
shr
test
xorl
fsts
inc
aam
xor
add
loopne
ret
stc
movsb
enter
xor
insl
ret
xlat
arpl
push
xchg
imul
in
jns
add
out
jl
cmp
add
xchg
pop
adc
add
in
mov
ja
test
dec
mov
mov
aam
js
sbb
fldt
adc
push
adc
xchg
xchg
mov
fistpl
mov
mov
inc
cmp
std
fsts
push
fwait
adc
jo
jp
adc
sub
fistl
xor
fcoms
sbb
mov
mov
not
xor
movsb
add
jmp
enter
pop
mov
inc
mov
jo
leave
adc
sbb
sbb
sub
in
pop
cwtl
ss
lret
leave
mov
mov
and
push
es
lret
rol
sbb
cmp
ficomps
mov
push
leave
pusha
cmc
call
lret
jo
add
pop
mov
pop
lcall
dec
mov
cmp
addl
xor
dec
mov
enter
add
das
sarl
cmp
adc
popa
add
cmp
cmp
inc
jb
add
ds
xchg
adc
dec
fisubrs
pop
or
mov
mov
push
dec
xchg
clc
call
dec
xor
sahf
push
ljmp
enter
cld
mov
cmp
scas
loop
adc
cmp
arpl
idivl
imul
mov
repnz
dec
outsl
cmp
sbb
int
fadd
jno
f2xm1
sbb
add
into
addr16
imul
mov
enter
pusha
popf
int
pusha
mov
in
in
pop
es
mov
inc
lret
push
jge
dec
jle
cmp
and
iret
mov
scas
dec
dec
imul
xchg
aam
lods
loopne
cwtl
cmp
cmp
inc
sbb
mov
lods
mov
xor
or
add
notl
icebp
faddl
clc
xor
add
int3
or
pop
clc
testl
lods
push
adc
lods
rclb
lret
mov
mov
sbb
mov
adc
repnz
in
cmp
filds
cmp
inc
xor
in
and
sbb
cmc
push
shlb
cmp
mov
es
loopne
shrb
popf
lcall
sarb
fwait
les
adc
out
cmp
cmp
jge
add
inc
ret
aas
jmp
daa
mov
mov
push
stos
dec
fdivrs
inc
xlat
inc
mov
es
adc
add
push
mov
rorb
and
les
nop
xchg
pushf
fadds
mov
jmp
decl
icebp
sub
cmp
enter
into
fcomps
hlt
jmp
push
repz
xor
aas
out
or
test
inc
xchg
add
mov
jg
cmp
insb
out
pop
mov
xchg
push
aam
repnz
pop
adc
adc
lahf
aaa
sub
bound
xor
push
inc
lock
cmp
sbb
or
adc
pusha
loop
xor
pop
push
je
cwtl
test
insl
cmp
mov
mov
into
cld
push
aas
sbb
test
stc
jp
mov
dec
mov
addr16
out
mov
mov
add
lret
in
lret
xor
sarl
sub
hlt
js
mov
mulb
out
and
pop
fs
adc
mov
cwtl
mov
insb
into
sub
in
ret
test
cmpsb
xchg
stos
aam
xchg
shll
aaa
cmpl
mov
or
xor
shll
cmpsl
push
push
jmp
cmpsb
cmc
fnstsw
adc
inc
ja
sub
mov
call
in
divl
sbb
shr
cmp
dec
loop
push
xchg
add
incb
fnstenv
mov
cwtl
fiaddl
jno
rclb
xchg
xchg
mov
mov
orb
sahf
push
and
in
push
jg
adc
mov
testb
arpl
ficoml
and
push
xchg
dec
xorb
ja
outsl
leave
add
xchg
or
pop
pop
dec
xorl
and
dec
stc
mov
ss
push
mov
pop
out
xor
push
repnz
lods
das
aam
or
pop
outsb
out
or
adc
loop
or
bound
inc
movsb
jbe
iret
add
jmp
adc
mov
add
inc
xor
add
xchg
pushf
mov
push
and
rcr
mov
andb
and
in
out
xchg
je
scas
js
jno
push
or
mov
fcompl
in
das
loop
sahf
std
add
xchg
clc
out
movsb
test
pop
add
inc
test
push
or
adc
aaa
jl
xchg
mov
jp
scas
add
sti
addr16
inc
mov
adc
dec
mov
push
add
push
rclb
cwtl
loop
sub
movsb
mov
xchg
xchg
hlt
xchg
lret
subb
mov
push
xchg
push
enter
xor
loope
pop
movsl
mov
pusha
push
loop
jmp
or
aad
fisubs
fstl
test
sarb
les
aam
dec
test
cli
sub
sub
push
mov
sbb
pop
jp
add
jmp
push
or
lock
adc
shlb
outsl
push
cs
add
jno
mov
mov
push
mov
or
push
add
icebp
or
mov
jle
xchg
daa
mov
add
clc
cmp
ret
aad
mov
test
addb
push
andb
fisubs
mov
jp
cli
mov
xchg
add
sbb
add
xlat
jecxz
and
rcrl
and
inc
xor
pop
or
fcmovu
rep
add
hlt
cld
lea
add
and
adc
push
push
mov
les
pushf
not
lahf
mov
xchg
in
inc
cmp
push
pop
mov
xor
in
roll
xorl
and
push
cmp
mov
add
faddl
lock
cmp
sub
ret
xor
orl
pop
jl
inc
sarl
pop
xchg
add
push
mov
aad
cmc
int
js
mov
adc
push
inc
fwait
mov
outsb
pushf
jl
add
in
lcall
pusha
sahf
pop
negl
pop
push
xor
mov
xor
add
pop
push
xchg
push
call
sub
or
adc
mov
loopne
jg
adc
xchg
outsb
sub
mov
aaa
andb
pusha
aam
mov
xchg
pop
and
inc
in
cmp
daa
pop
in
xchg
test
cmpb
pop
jbe
loop,pt
sarb
hlt
cmp
js
mov
stc
in
inc
cmovne
mov
xchg
ljmp
dec
insb
sbb
loop
mov
inc
test
sub
cmp
les
xor
mov
mov
fs
les
cld
mov
mov
out
out
gs
lcall
mov
mov
dec
addr16
xchg
bnd
jge
nop
movb
or
fcompl
mov
mov
adc
sbb
dec
je
dec
mov
mov
pop
add
dec
inc
out
adc
add
orb
cmp
mov
or
xchg
cs
iret
add
mov
les
xchg
add
cmp
add
mov
fnstcw
cmp
sti
pushf
movsl
int
jmp
rcrl
push
mov
jl
add
xchg
pop
and
add
pop
sub
cmpb
enter
repnz
xor
out
test
jo
xchg
sbb
pop
mov
pop
jno
mov
dec
outsl
xor
mov
jmp
scas
dec
mov
xlat
xor
push
mov
mov
and
add
pop
stos
in
pop
insl
fwait
and
mov
push
jl
ret
insb
lea
fistps
jo
dec
mov
and
cmpsb
jmp
sub
mov
inc
ja
sbb
cmp
or
in
test
sub
adcb
ja
loop
cmpsl
es
xchg
adc
movsl
enter
rorl
jb
add
mov
xor
dec
mov
dec
fxch
sbb
xchg
or
sub
and
and
stos
cmp
in
mov
push
jl
inc
add
insb
fstpl
daa
enter
jg
mov
test
pusha
push
push
dec
repz
das
fmuls
pusha
mov
cwtl
or
test
nop
je
mov
jecxz
mov
dec
push
lds
sub
int3
aaa
test
push
add
dec
fmuls
cmp
cmp
inc
xor
cmpsl
cltd
mov
std
andl
paddsb
xor
cwtl
inc
ds
mov
ss
mov
andl
subb
out
in
add
mov
push
in
aam
or
out
or
ret
mov
cmp
push
dec
sbb
add
imul
sbb
shll
aam
fs
cmp
rolb
mov
cmp
fnstcw
mov
imul
inc
mov
aam
shrl
daa
and
sahf
push
iret
add
push
sarb
inc
pop
aaa
xchg
mov
adc
sarb
imul
dec
mov
mov
push
pop
adc
mov
inc
dec
roll
and
jno
cmpsb
adc
mov
pop
std
rcrl
or
lods
pop
lret
push
mov
inc
sub
mov
addb
test
jne
scas
add
leave
out
sbb
mov
xor
test
cmp
cmp
int3
add
mov
push
fwait
xchg
and
test
mov
push
cmp
sbbb
pushf
lock
daa
jb
add
push
pop
adc
pop
fcmovnbe
mov
lock
jo
aad
jbe
test
xor
sbb
add
jno
and
inc
inc
or
shrb
adc
mov
insl
adc
xchg
mov
daa
push
add
lret
inc
pop
xchg
test
mov
inc
int3
scas
in
or
lock
dec
lea
mov
xor
lock
int3
xorb
adc
sub
mov
dec
stos
add
mov
pop
xchg
out
incb
or
push
cmp
add
hlt
aam
and
jnp
pop
dec
xchg
cmp
rcll
lds
xchg
push
cli
pusha
clc
push
addb
je
lcall
addb
push
adc
scas
repnz
jl
sbb
xchg
pop
push
inc
ret
jne
adc
sub
mov
rcr
xor
roll
mov
in
dec
add
repz
push
rorb
pop
dec
sbb
mov
mov
jb
xchg
enter
add
or
adc
enter
mov
or
call
in
pop
cmp
or
nop
sub
jbe
mov
inc
mov
push
fsubrs
orb
aaa
scas
pop
je
mov
dec
dec
mov
mov
xchg
add
aam
adc
testb
and
push
mov
mov
ja
lahf
push
add
fnstcw
in
xor
fdiv
pop
nop
dec
lods
dec
mov
lods
sbb
cmp
add
sub
outsl
xchg
movb
bound
popf
int
inc
or
lret
cmp
cmp
fsubr
dec
mov
lret
push
sub
dec
adc
push
pop
call
xchg
add
les
pop
lea
das
add
push
cmp
mov
mov
ret
mov
add
xchg
sub
test
adc
jmp
push
fimuls
mov
mov
ds
jg
loop
sbb
in
pop
sar
insb
cwtl
add
cmp
clc
xor
or
rclb
cs
fildl
loopne
in
or
stos
out
fsubrs
xorb
push
dec
add
pushf
dec
test
mov
and
nop
shll
and
repz
adc
xor
pop
mov
iret
je
popf
cmp
push
mov
add
mov
xlat
popf
cmp
push
test
inc
cmp
jg
sub
push
mov
mov
pop
hlt
xor
dec
imul
push
and
jb
jg
fsubrs
stc
push
push
mov
loop
cmpsl
addr16
xor
int
or
cmp
idiv
sbb
or
dec
mov
or
mov
jmp
push
or
push
cmpb
or
sarb
xor
ljmp
call
cmp
mov
dec
mov
in
adc
testl
loopne
pop
and
xor
push
push
aam
cmp
pop
cmpsl
in
neg
sbb
inc
xor
fwait
popf
or
call
cmp
aam
sarb
cmpb
cld
dec
incl
jo
jge
dec
mov
repz
mulb
add
movsl
hlt
inc
add
in
aam
mov
add
addb
dec
mov
dec
mov
mov
call
aaa
mov
sub
xchg
pop
icebp
rclb
fstl
or
cmpsb
call
cmp
jbe
adc
adc
aad
pusha
push
lock
lea
cmp
xor
jl
jl
je
lahf
mov
js
xor
dec
in
pusha
or
testb
ret
subb
cld
mov
mov
clc
and
dec
je
or
or
sub
addb
jmp
les
shrl
mov
mov
arpl
add
cmp
mov
jae
dec
popf
inc
jle
or
leave
or
rolb
mov
add
adc
mov
insb
lea
jl
lahf
scas
enter
fcoml
xchg
mov
ret
pop
mov
loope
pop
fnsave
test
mov
mov
andl
les
jg
pushf
jne
xor
cltd
cmp
and
adc
add
call
mov
push
test
adc
or
cmp
inc
mov
repnz
mov
cwtl
pusha
or
loop
and
jns
sbb
push
inc
sarl
shlb
add
hlt
jle
sbb
repz
lret
sahf
scas
ret
lds
in
dec
add
mov
sub
imul
push
xor
imul
mov
lcall
movsl
push
cwtl
sahf
mov
push
mov
test
cmp
push
and
jmp
lock
call
add
fcoms
dec
icebp
shlb
xchg
out
add
xor
hlt
jmp
pop
outsb
push
add
or
fists
sarl
jl
rcrb
add
sti
jmp
iret
popf
and
mov
cmpsb
in
add
jnp
pop
adc
xchg
fstl
lods
aad
sbb
add
adc
fcompl
inc
add
mov
or
shlb
mov
dec
and
ja
push
popa
or
lret
and
rcrb
mov
inc
pop
ret
es
sbb
pop
adc
mov
bound
cmp
add
pop
jo
sub
insb
aam
popa
mov
adc
sub
jae
pop
mov
movsl
in
mov
insb
repnz
xorb
inc
push
loop
lahf
int
shrb
xchg
enter
test
clc
pushf
xor
mov
xor
cwtl
add
loopne
repnz
and
fiaddl
addr16
shrl
jl
stc
leave
xorb
sbb
push
iret
sbb
and
daa
shrl
xor
cmpl
jl
push
mov
jmp
lock
ds
xor
push
dec
lds
mov
clc
ret
xlat
mov
ret
adc
sbb
cmpsl
add
testb
fadds
push
out
loopne
adc
repz
mov
mov
sbb
movsb
in
sub
rcrl
add
negl
test
cmp
xchg
or
add
pusha
xchg
push
test
shll
or
daa
sbb
shl
jo
ficoms
and
pop
and
dec
pop
js
push
jl
mov
cmp
push
call
ss
test
mov
push
in
movsb
inc
fnstsw
sbb
and
scas
jbe
add
cmpsb
lock
sub
jecxz
rcl
andl
cwtl
push
jl
clc
pusha
add
iret
dec
mov
pop
enter
push
outsb
loope
aam
es
fistps
cs
pop
sbbb
push
mov
xchg
xchg
adc
scas
js
adc
add
outsb
mov
std
in
inc
or
cli
xor
inc
mov
dec
push
out
xlat
xor
scas
addr16
jo
das
inc
xor
mov
cmp
sbb
xchg
push
adc
stos
cmp
insb
and
lret
sbb
clc
adc
js
in
push
mov
adc
mov
pop
add
xchg
mov
sub
jecxz
cmp
pop
jmp
push
mov
jo
inc
dec
xchg
jae
jo
jnp
int3
hlt
jge
outsl
cmp
das
cmp
nop
push
dec
or
in
jle
add
leave
sbb
adc
lcall
sarb
pop
mov
add
fstps
push
dec
pushf
inc
cmp
jae
sub
mov
in
pop
mov
xchg
cmpsl
pop
pusha
push
cmp
lock
and
jle
aam
sbb
mov
add
mov
in
repz
ret
add
xchg
sub
xchg
test
incb
xor
cmpsl
add
out
repnz
mov
in
popa
xchg
or
add
fs
adc
jo
pop
sbb
int3
sub
repz
push
insl
add
fs
push
nop
or
paddw
scas
gs
andb
out
and
mov
sub
cmp
dec
jecxz
add
sbb
xlat
lock
jo
in
add
xor
add
ret
pushf
push
ljmp
lods
rol
sbb
sti
add
jl
mov
mov
test
mov
fdivr
jo
aam
mov
ss
or
push
xchg
mov
sub
mov
and
dec
sbb
hlt
cmp
cmp
push
or
pop
pop
or
sub
jb
add
push
rep
dec
add
add
dec
lods
sub
xor
in
and
scas
cmp
xchg
inc
and
or
cmp
aam
xchg
and
xchg
or
cmpb
push
pop
or
pop
inc
xchg
js
addw
fistpl
test
mov
insb
loopne
and
sub
mov
aas
push
movsb
pop
jge
and
insb
or
aaa
mov
add
cmp
or
mov
sub
fcmovnbe
mov
nop
outsl
xor
mov
pusha
mov
or
xor
or
push
int
sub
add
dec
add
cmp
imul
mov
dec
imull
arpl
push
cmp
cmp
dec
add
cmpsl
adc
add
sbb
mov
cmp
mov
das
xor
dec
sbb
inc
cmp
add
pop
mov
mov
mov
mov
pop
and
add
nop
pushf
xchg
push
movsl
fldenv
clc
lods
mov
outsl
sbb
movsb
test
jbe
cwtl
push
cld
cs
daa
pushf
inc
mov
sub
int3
pop
and
push
cwtl
icebp
dec
sbb
cwtl
jne
sub
xorb
or
mov
pop
lcall
add
mov
fwait
mov
adc
sahf
sbb
push
cwtl
adcb
add
das
loopne
push
test
fists
mov
and
or
clc
scas
xchg
js
add
es
jp
rol
mov
fs
adc
ja
testb
add
out
inc
pusha
mov
insb
mov
and
clc
adc
pop
loopne
lret
shll
and
scas
hlt
inc
mull
sub
cmpsb
xchg
data16
daa
rolb
or
jo
xor
pop
dec
int
iret
gs
sub
xor
lcall
call
fnstenv
inc
adc
add
sub
aam
mov
loop
enter
push
mov
lock
pop
movsb
cwtl
lock
xlat
nop
sbb
into
int3
lahf
in
jo
shlb
cmp
push
inc
sbb
lds
push
fisubs
push
popf
and
pop
movb
roll
jge
jl
ljmp
outsb
lea
mov
xchg
and
sbb
add
inc
xchg
shrl
enter
inc
cs
mov
push
xor
jns
add
shlb
push
fsubl
pop
pop
leave
enter
add
adc
jns
es
nop
push
add
mov
sub
jno
adc
daa
cs
movsl
and
inc
lods
pop
mov
and
pop
push
sub
push
lret
int3
xchg
sbb
push
test
mov
push
or
pop
dec
pop
flds
scas
cmp
es
push
outsb
cwtl
add
fmuls
jbe
add
movsb
xor
inc
out
inc
mov
add
dec
adc
into
mov
je
adc
loope
sahf
push
jl
fiaddl
mov
out
push
leave
pop
pop
add
test
sub
hlt
enter
mov
mov
loop
popf
rcl
cmpsl
jp
inc
lret
mov
and
mov
push
popa
cld
in
cwtl
addb
jno
cmp
xchg
dec
jo
push
add
mov
loop
nop
pop
fwait
jl
stc
cmpb
nop
daa
es
inc
mov
icebp
xor
ja
mov
jae
test
addb
xor
out
cmp
test
mov
dec
scas
shrb
jo
cwtl
in
pusha
push
inc
adc
idivl
mov
push
inc
fimuls
add
fxam
push
call
ret
repz
cmp
cltd
xor
test
xor
cmp
sbb
push
pop
int3
test
test
dec
mov
mov
xor
add
std
sub
mov
mov
mov
mov
les
pusha
pop
lods
cmp
enter
sub
pusha
sarb
jl
fcompl
add
hlt
or
sub
mov
push
adc
test
je
popf
push
and
les
dec
push
shll
adc
push
add
add
push
sbb
mov
je
jne
mov
mov
ret
ds
out
stos
inc
lods
std
push
leave
fsubrl
mov
add
bound
add
push
mov
mov
dec
xor
or
or
cld
push
or
xchg
pop
inc
aam
sahf
nop
add
std
jae
mov
mov
dec
fsubrs
cmpsb
dec
ret
dec
sub
movsb
xchg
fs
in
sub
add
out
pop
and
ja
rorb
and
fsubr
faddl
outsl
mov
cmp
cs
mov
jns
push
pusha
orb
js
or
push
lcall
mov
ja
add
sub
enter
loope
aas
testl
add
into
or
or
imul
pushl
and
shr
mov
mov
test
test
fs
xor
push
popf
fisttps
lret
pop
leave
mov
sub
and
jbe
inc
movsb
mov
mov
fistl
std
psubusw
lret
jne
cmpsb
jl
cmp
subb
dec
mov
push
add
jg
mov
or
mov
cmpsb
cltd
jge
push
ret
and
and
mov
or
pop
xchg
hlt
pusha
adc
dec
mov
sbb
push
pushf
push
lock
adcb
lret
sbb
int3
adc
in
mov
push
lock
or
push
jo
adc
dec
shrl
xor
add
in
dec
xor
loope
dec
enter
inc
repnz
add
call
sbb
cmpsl
stc
dec
add
xchg
std
or
add
sbb
mov
xlat
jl
xchg
inc
loopne
or
xchg
fsubrs
add
jns
xor
idiv
rolb
jg
dec
ret
orb
test
cmp
inc
imul
dec
lcall
loope
in
gs
or
push
das
mov
sub
test
and
push
push
sbb
rcrb
out
and
je
out
push
add
dec
aad
ret
push
or
xor
lods
pushf
in
sti
mov
mov
push
loop
inc
push
xor
les
fsubr
adc
inc
dec
test
push
adc
cs
popf
xchg
bound
xchg
flds
push
das
aad
dec
js
mov
mov
dec
in
lcall
fistpl
mov
add
pop
or
scas
or
add
negb
insb
sub
push
lock
inc
add
mov
mov
add
popf
cmp
enter
or
mov
pop
loopne
xor
pushf
inc
enter
scas
aaa
mov
enter
das
div
loopne
pop
popa
add
push
push
shr
aad
mov
mov
mov
aaa
jmp
in
fistl
add
xor
movsl
jnp
push
icebp
jle
testl
add
push
and
call
dec
sbb
daa
out
inc
pushf
nop
js
out
loopne
push
push
dec
imul
js
sub
or
iret
jae
mov
xor
sbb
bound
sub
ja
fldenv
dec
and
rorb
sti
push
gs
adc
add
dec
inc
mov
aam
pop
aad
cmpsb
add
test
and
sbb
push
inc
mov
stos
test
xor
insl
or
cmp
insb
dec
xor
jecxz
add
mov
sub
sub
pop
in
mov
push
lea
mov
cmp
test
push
jl
pop
mov
out
add
xor
cwtl
cli
or
imul
sarl
jno
sub
addb
mov
cld
add
and
mov
add
loope
mov
jge
adc
fsts
movsb
add
lret
pop
frstor
jge
sbb
aas
push
mov
add
aam
lcall
mov
xor
enter
fs
add
dec
in
inc
shll
and
jno
push
add
out
inc
xlat
repz
xor
mov
movl
mov
rcr
dec
sbb
je
xor
or
push
pop
cmp
jae
add
je
imul
int3
arpl
mov
movl
push
inc
jnp
adc
adc
sti
mov
mov
lret
dec
iret
ret
scas
cmp
push
and
or
xchg
sbb
sbbb
mov
insb
mov
fs
inc
add
shrb
sub
js
mov
std
shlb
xor
xchg
jmp
add
inc
cmp
jmp
mov
mov
rorb
xchg
adc
jo
insb
sti
xor
sarb
add
sbb
je
add
movsl
push
in
addr16
clc
mov
scas
outsb
mov
pop
jge
xor
ffreep
adc
fimull
pop
sub
pushf
clc
adc
or
aad
xor
inc
ljmp
pop
fs
cmp
sbb
lret
aad
and
pop
mov
dec
repz
nop
test
cmp
xchg
sbb
rcrl
bound
inc
fisttps
fdivs
add
std
cmp
dec
testl
outsl
mov
xor
sub
and
xor
in
or
sbb
rol
popf
and
lret
popf
adc
and
inc
dec
jge
rolb
xchg
and
cmp
xor
jno
or
iret
xor
movsb
das
jecxz
loop
xor
pusha
inc
push
inc
jge
cmp
rorb
jg
lmsw
orl
mov
sub
clc
outsl
mov
dec
aam
dec
leave
shll
push
in
inc
clc
adc
add
mov
enter
sahf
test
jo
nop
rol
inc
jo
add
inc
movb
dec
sub
aam
adc
in
add
shrb
jns
mov
rcrl
sti
and
ret
xchg
jmp
mov
dec
fwait
xchg
add
mov
xchg
into
dec
or
push
lret
adc
nop
cmc
inc
incl
sbb
xchg
mov
clc
lret
mov
add
pushl
add
leave
push
mov
out
fiaddl
sbb
js
in
or
cmp
rcrl
in
mov
mov
ljmp
add
add
jg
out
sub
cli
lret
sbb
cmp
test
and
pop
cwtl
add
and
xchg
add
test
fs
xchg
cld
add
mov
jle
mov
pusha
cmp
sub
push
stc
movb
clc
pop
push
mov
add
fcoml
and
add
clc
cltd
ffreep
incl
lods
ljmp
cwtl
xchg
xchg
jns
inc
add
loopne
add
inc
sbb
fsub
sti
lahf
stos
cmp
pop
outsl
gs
pop
pop
out
push
cwtl
fdivr
out
mov
jb
push
add
xchg
mov
aad
orl
int
stc
stc
fcoml
mov
mov
cmpl
test
repnz
in
out
jb
add
or
cmp
test
push
rcl
das
negb
dec
fiaddl
add
push
push
xchg
mov
dec
cltd
mov
std
out
add
idivl
mov
mov
or
out
outsb
in
add
cmp
out
adc
add
sub
mov
xor
fisttps
loopne
fsubrs
add
outsl
fs
scas
jecxz
lock
aam
add
das
lcall
scas
icebp
sbb
sbb
neg
cmpsl
xlat
out
add
int
mov
inc
push
xchg
push
addl
mov
test
or
in
clc
adcb
and
add
inc
mov
push
call
call
add
cltd
mov
pop
or
mov
ds
das
test
cmpsl
cmp
ffreep
popa
mov
add
popf
inc
das
pop
adc
shl
lcall
push
in
shlb
outsl
jo
sbb
push
mov
mov
popf
rorl
or
sarl
jb
sub
pop
sub
add
or
jne
popf
xchg
push
aas
in
cmp
loopne
test
mov
and
add
mov
daa
loop
into
mov
scas
push
add
shlb
enter
adc
adcl
add
rcr
mov
cmc
ret
push
or
push
inc
lods
push
adcl
sub
test
mov
imul
inc
je
lea
adc
mov
sub
pcmpgtd
push
shlb
mov
mov
inc
fbstp
push
pushf
dec
xchg
add
stos
fwait
popf
leave
int3
mov
fildl
or
aas
cwtl
in
mov
jns
adc
ret
decl
cld
fwait
xor
enter
xor
pop
out
xchg
fbld
lock
nop
add
add
mov
cltd
fisttpl
push
je
or
nop
add
cli
add
mov
xor
clc
das
or
loopne
push
add
loop
or
or
xorb
pmullw
ja
rolb
add
sbb
push
inc
aaa
xchg
cmp
in
aas
or
mov
repz
lret
add
and
jns
add
int
addr16
cld
xchg
push
mov
and
add
cld
test
cwtl
and
xchg
inc
sub
nop
in
adc
data16
sbb
add
movsb
lret
add
fisubrl
insl
or
lret
push
ret
repnz
outsb
das
leave
and
add
lret
push
sub
push
clc
and
push
in
push
push
push
jp
inc
xchg
sub
je
xchg
adc
js
fdivrl
andb
cli
in
aaa
leave
mov
mov
mov
call
mov
sbb
or
aaa
cmp
and
shrl
jmp
xchg
outsb
rcrb
push
mov
fildl
lock
xchg
call
lods
cltd
cmp
jmp
or
cwtl
cmp
push
mov
pushf
and
sahf
and
xchg
cld
imulb
add
stc
arpl
imul
pop
and
xchg
sub
sbb
out
and
mov
add
adc
sarl
add
dec
cmp
clc
sbb
jp
cmp
lcall
inc
dec
xchg
mov
inc
xchg
imulb
mov
or
push
push
push
add
lock
outsb
imul
inc
mov
dec
ret
mov
push
enter
inc
pop
pusha
mov
in
mov
mov
sbb
dec
cmp
jmp
adc
and
inc
repnz
jne
jl
pop
out
lea
xor
rclb
add
mov
fsubrl
cmpsl
sbb
inc
cmp
cmp
scas
dec
icebp
fdivrp
or
and
xor
cmp
pop
popa
mov
cmp
sub
xor
lahf
cmc
fwait
mov
jo
add
rolb
sub
add
scas
push
dec
and
xor
fs
jne
and
xor
mov
imul
inc
and
xor
jnp
add
adc
mov
lods
xchg
cmp
cmp
adc
shlb
imul
imul
mov
mov
push
cli
add
cmc
adc
and
loope
adc
add
push
inc
push
mov
fwait
rolb
aaa
sub
mov
ja
jbe
incl
mov
xchg
ret
push
icebp
fidivrl
inc
fdivs
adcl
pop
pop
and
daa
jp
test
and
inc
leave
jae
cmp
mov
mov
nop
mov
pop
out
pop
cwtl
cmp
mov
pop
mov
cmpsb
filds
and
jg
xchg
cmc
add
mov
rcrb
xchg
repnz
cltd
push
lods
cmp
psllw
outsl
shll
pop
fs
and
xchg
loop
pusha
into
inc
std
das
rorb
inc
inc
movsl
add
clc
pushf
les
mov
push
adc
pop
jl
data16
clc
or
mov
add
push
lock
nop
mov
xor
sbb
scas
and
push
add
lahf
mov
cmp
or
mov
in
test
mov
xor
repz
movntps
mov
inc
add
jg
mov
or
mov
cmp
in
fmuls
in
enter
getsec
and
push
jbe
sbb
xchg
inc
and
and
and
movsb
in
cmp
sbb
mov
movb
ret
add
ret
add
inc
sub
or
xor
insb
inc
ds
and
pop
aas
int3
xor
add
pop
jge
orl
jmp
lock
int3
mov
or
jecxz
pshufw
jns
aaa
enter
jmp
aas
movl
pop
dec
inc
add
lret
fwait
pop
add
add
xchg
push
inc
or
mov
push
insb
in
sbb
cmpl
les
jmp
jns
xchg
mov
mov
sub
pop
add
or
in
fidivrs
rcrl
adc
pop
outsb
sbb
mov
andb
adc
add
ret
push
or
and
pop
mov
cmp
push
dec
notl
addb
add
sbb
ret
sub
mov
add
mov
fdivs
fwait
jg
es
in
xchg
leave
or
xchg
add
ds
js
mov
add
mov
leave
cli
lret
xor
testl
insl
add
push
into
cmpsb
pusha
mov
dec
add
inc
inc
mov
mov
push
call
in
add
mov
pop
xchg
add
cmc
mov
add
clc
and
xor
shlb
gs
dec
les
dec
xchg
subl
and
pop
lea
and
and
add
nop
insb
fisubrs
add
add
pop
inc
jnp
cvttps2pi
out
add
lcall
cmp
xchg
sub
lea
or
xorb
test
jnp
add
pop
adc
mov
xor
add
orb
push
jae
xor
bound
mov
inc
enter
add
roll
push
icebp
and
lock
ja
add
sub
add
and
loop
leave
sbb
test
xchg
in
xchg
mov
pop
in
sbb
movl
cs
enter
andl
push
fscale
push
push
xchg
or
shl
mov
cs
add
or
mov
nop
in
es
mov
add
cmp
ret
ss
jp
add
ret
add
push
ret
idivl
call
mov
inc
int
loopne
cwtl
cmp
pop
loope
movsl
xchg
in
mov
mov
frstor
je
nop
pop
add
cmp
lds
loopne
adc
cmp
ss
mov
sub
dec
cmp
fcmovu
mov
decb
mov
iret
jmp
es
popa
push
bound
stos
push
xor
push
arpl
xchg
mov
mov
jno
push
test
or
repz
mov
lahf
add
fcmovnb
xchg
mov
out
lock
push
movsbl
lods
lods
fldenv
dec
int
push
pop
rcrb
inc
pop
dec
pop
sbb
and
inc
sarl
repz
js
add
das
mov
cwtl
push
push
or
dec
inc
pusha
lcall
test
xchg
sbbl
xor
bound
sbb
and
xor
std
and
mov
mov
adc
pop
xchg
mov
mov
or
shll
add
stos
sbb
out
cld
sbb
fbld
cltd
in
pop
jg
and
shlb
add
testl
jle
stos
loop
test
dec
xor
mov
adc
mov
jmp
rcll
add
adc
aaa
dec
dec
inc
rcrb
sti
dec
add
lods
or
mov
add
ljmp
sub
rolb
mov
js
popf
jge
pop
push
dec
ss
cmp
add
pusha
inc
xchg
add
sub
loopne
jp
nop
mov
fwait
sbb
jb
imul
daa
sub
cli
sub
and
sbb
pop
fmuls
dec
dec
mov
adc
mov
mov
or
dec
cltd
arpl
insl
pop
xor
std
icebp
dec
xor
cmp
popf
daa
fld
push
push
pop
add
ljmp
mov
and
inc
sbb
cmp
push
or
add
sub
dec
push
std
adcb
sub
psubusb
stos
cli
iret
ret
push
push
mov
pop
add
push
push
xorl
pop
ret
pop
mov
jmp
xor
nop
push
nop
dec
xor
and
sub
in
cli
add
nop
dec
cmpsl
enter
sbb
inc
inc
mov
add
add
push
ds
outsl
xchg
lret
or
inc
in
ret
inc
inc
call
pop
dec
aad
mov
outsb
add
out
push
mov
dec
or
loope
jmp
movsb
add
call
xor
jo
cmpsb
jno
push
pop
dec
faddl
jmp
pusha
and
cmp
shlb
dec
xor
js
mov
inc
adc
clc
sbb
xchg
inc
incb
mov
jg
xchg
add
test
loop
ret
sub
cli
add
aad
push
jo
iret
loopne
mov
or
cmpsl
sbbb
pop
pop
pop
mov
xchg
fneni(8087
subb
cs
xchg
aaa
push
mov
loopne
sub
mov
incl
mov
sub
cmpsb
jb
cmp
subw
or
jb
and
add
add
add
sarl
or
cmp
stos
sub
or
push
push
add
jb
add
mov
sub
mov
outsb
aas
add
jns
test
xor
mov
sbb
decl
dec
mov
nop
add
adc
pushf
mov
push
pop
lea
mov
pop
insl
mov
mov
add
out
iret
imul
mov
fidivs
push
xchg
jne
mov
test
adc
ja
mov
stc
cmp
test
add
mov
mov
push
xchg
mov
add
adc
aam
xchg
pop
add
mov
push
sub
push
xlat
sbb
and
stos
mov
add
and
mov
icebp
or
jmp
sbb
mov
or
dec
and
add
jns
sub
fcomps
fldl
push
or
ljmp
lock
pop
xchg
dec
addb
add
fists
scas
xlat
aad
test
push
popf
mov
push
push
dec
xlat
push
dec
ret
dec
fldl
jmp
xchg
mov
or
popa
mov
pop
and
sub
xchg
pop
int3
movsl
jg
or
lea
inc
jne
and
in
imul
add
cmpsb
dec
xor
and
cli
sub
or
clc
aad
push
out
pop
cmp
xor
daa
pop
xor
add
mov
dec
fistl
adc
jl
repz
cld
jmp
sbb
cmp
enter
add
sub
mov
inc
jb
das
sub
xchg
out
sub
daa
fnstenv
nop
add
jnp
in
inc
repnz
sbbl
add
lcall
dec
cmp
jne
cmp
xlat
aad
pop
shl
add
shll
jp
sbb
roll
fistpll
insl
push
bnd
add
cwtl
jle
cltd
comiss
popf
add
push
adc
sbb
loop
inc
adc
sub
mov
pusha
aad
mov
dec
jmp
and
cmpsb
loopne
cmc
jle
push
push
dec
and
jp
sbb
xchg
rol
test
cmc
jbe
or
test
inc
mov
push
add
cld
push
loope
sahf
jle
cmp
movsl
push
adc
ljmp
mov
addl
or
inc
push
add
adc
call
add
jb
movsl
mov
fcos
inc
outsl
pop
xchg
jae
sbb
cmpsl
scas
and
adc
and
gs
and
pop
inc
adc
xchg
jo
outsl
adc
add
mov
pusha
sub
cld
mov
clc
sbb
jmp
repnz
js
cmpsb
adc
or
das
adc
fimuls
sbb
mov
xorb
add
and
xchg
pop
std
and
cmpsb
adc
mov
shrb
shrb
xchg
pop
mov
lcall
mov
pop
rolb
hlt
add
adc
sti
shlb
clc
clc
dec
insl
sub
xlat
mov
imul
mov
std
cmpl
lret
push
subb
adc
cmp
jbe
testb
in
rdpmc
mov
hlt
mov
sbb
add
or
dec
lds
in
cmp
in
cmpsb
jge
sbbl
testb
adc
sub
cmpl
jnp
jbe
lock
das
add
mov
mov
inc
xor
cmp
dec
push
and
icebp
mov
aas
xor
or
adc
stos
fwait
jmp
or
pop
loopne
or
popa
xor
add
push
movsl
push
xor
mov
clc
addl
or
jle
adc
add
jbe
mov
dec
fldcw
orl
roll
sbb
pop
jbe
repnz
dec
add
xor
iret
add
pop
xor
mov
cmp
test
sbb
inc
jno
sub
pop
push
or
and
in
dec
loopne
xlat
mov
and
test
adc
dec
lret
daa
add
jp
add
sub
lcall
mov
jne
add
pop
adc
test
nop
inc
mov
xchg
adc
hlt
stos
and
fdivrp
pop
push
imul
test
les
push
pop
dec
adc
mov
dec
imul
adc
xor
ja
in
addr16
jecxz
cs
add
pop
or
dec
sbb
scas
mov
imul
adc
pop
adc
scas
dec
pop
sbb
push
xor
dec
pop
adc
pop
dec
adc
outsl
sub
mov
out
add
je
xchg
testl
int3
pop
mov
pop
mov
xchg
inc
add
mov
push
push
cmp
ret
push
pop
daa
add
push
stc
in
or
push
mov
movsl
pop
sub
jge
sub
mov
and
scas
pop
and
inc
cmp
inc
aad
or
clc
mov
incl
pop
dec
cwtl
in
out
repnz
mov
sub
test
in
push
pop
fbld
inc
or
popf
cmp
shlb
sarl
mov
dec
or
adc
xor
cmp
cmp
mov
jo
adc
lahf
movsl
pop
iret
pop
adc
inc
mov
les
or
pop
test
push
and
push
fistps
cmpsl
pop
mov
andb
or
movsl
inc
and
dec
lea
andb
js
ja
pop
push
lahf
nop
add
sti
pop
scas
add
jmp
imulb
in
or
mov
adc
xchg
add
leave
push
pusha
push
cltd
daa
dec
jo
popf
ja
sub
mov
clc
push
in
xorb
fwait
adc
scas
mov
mov
outsb
jmp
push
js
xchg
lea
rclb
sbbb
bound
add
xlat
call
pop
test
sti
fidivs
and
mov
cmc
adc
xor
xor
ret
or
and
cmp
out
mov
mov
xor
push
inc
popa
add
call
test
pop
inc
mov
jmp
ja
andl
sub
shlb
sbb
pop
adc
inc
push
sbb
and
cmpsl
jbe
add
cmp
pop
xchg
dec
dec
std
stos
imul
hlt
cmp
and
or
call
int3
inc
testl
dec
pop
repz
test
sbb
pop
add
push
adc
sbb
fistpl
hlt
inc
dec
jg
add
lcall
lcall
and
or
xchg
fstps
or
mov
cmp
add
xorl
fstps
and
push
xchg
mov
js
push
movl
arpl
sahf
cs
adc
pusha
xchg
add
pusha
or
dec
push
scas
jnp
scas
imul
aad
iret
jnp
push
clc
nop
sub
inc
xchg
adc
sbb
or
imul
pop
call
or
jge
xlat
dec
xlat
in
mov
daa
cmp
push
jbe
add
xchg
in
in
mov
testl
mov
jne
dec
icebp
adc
test
addb
and
gs
push
fbstp
in
in
inc
icebp
xchg
dec
mov
xchg
sub
movsb
filds
sbb
ja
mov
sub
xchg
out
mov
xchg
mov
cmp
inc
les
subl
inc
pop
syscall
pop
xchg
xor
sbb
sbb
add
stos
scas
sub
jno
es
mov
and
fcomi
ret
jnp
rcrb
sub
stos
xor
mov
imul
push
loopne
outsb
pusha
pop
pop
mov
mov
sbb
mov
aam
xchg
test
mov
mov
jbe
and
mov
adc
mov
in
mov
lcall
scas
lcall
push
movsl
fiadds
sub
xchg
inc
dec
mov
popf
and
imul
test
sub
pop
mov
rorb
stos
xor
iret
iret
xchg
aas
sub
mov
sbb
std
xor
stc
stos
sub
lods
mov
adc
jae
sbb
inc
fsubr
mov
shr
mov
leave
sti
xchg
jl
test
xor
aad
sbb
adc
pop
sbb
or
fs
testl
dec
jns
or
sbb
pop
nop
aaa
pop
pop
adc
inc
in
repnz
cmp
push
sub
cwtl
pop
dec
or
ret
cmpsl
movsl
pop
xchg
add
ss
mov
adc
cmp
push
shrl
nopl
imul
fs
popf
pop
je
mov
adc
jmp
ss
add
and
rorb
pop
aad
out
loopne
call
incl
dec
add
jp
call
scas
and
les
mov
mov
int
loopne
pop
xchg
call
push
rorb
xchg
push
or
rorb
pusha
xchg
imul
popa
jbe
jmp
or
cmp
and
add
push
fisttpl
push
adc
or
lcall
adc
stos
sahf
test
push
movsl
mov
lods
xor
push
outsl
xchg
add
mov
enter
repz
push
fiaddl
addr16
stos
xor
movhps
xor
xor
fldl
add
sarb
xor
jg
sbb
cmp
jmp
push
jge
adc
push
stos
add
jl
fstpt
or
cs
pop
popf
hlt
inc
cmp
lock
ja
nop
push
xor
jl
insl
adc
insb
cmp
adc
mov
or
dec
clc
leave
js
test
out
mov
xchg
dec
fucomi
push
pop
pop
cmp
mov
fcomps
cltd
or
in
cltd
lods
jno
sahf
hlt
out
loop
cld
mov
mov
sbb
push
hlt
mov
fdivrs
sti
shlb
loope
aam
mov
pop
pop
cmp
jmp
icebp
sub
add
in
and
dec
cmp
mov
and
pop
dec
stc
int3
pop
mov
mov
cmp
push
stc
fdivrs
enter
add
inc
sub
add
in
sbb
cwtl
scas
inc
or
fstps
ds
xchg
push
mov
add
lock
pusha
stos
roll
cmp
adc
ds
mov
push
mov
ficomps
dec
adc
mov
cmp
pop
mov
push
in
add
das
xchg
loopne
aad
aas
mov
cli
mov
inc
imull
xor
test
nop
les
clc
sbb
lea
sbb
les
xchg
adcl
xlat
dec
cwtl
xor
inc
pop
cmp
add
or
out
lahf
mov
cmpsl
cmc
adc
xchg
jle
jle
cwtl
mov
int3
and
std
cwtl
mov
add
pop
jo
jp
popf
adcl
jle
or
gs
pop
ds
mov
mov
lods
lret
mov
pusha
sahf
movsb
dec
mov
xor
pop
add
ljmp
or
push
mov
inc
cwtl
and
aas
inc
push
pop
rol
cmpsl
mov
add
push
and
loopne
bound
cmp
cmpsb
sbb
clc
push
loop
xchg
xchg
push
dec
push
fwait
adc
xor
jo
fmull
in
outsb
push
test
fisubrl
out
mov
xchg
add
es
jmp
cmp
nop
adc
popf
adc
add
in
ljmp
mov
mov
mov
mov
mov
std
sbb
jmp
or
jecxz
sub
pushl
cli
leave
fdivrs
sub
jp
lods
jp
adc
mov
pop
and
add
pop
or
jecxz
push
jmp
pop
jecxz
sub
push
mov
or
xor
comiss
stos
mov
cmp
pop
sub
adcb
das
mov
sti
enter
cs
cmp
sbb
dec
loopne
push
add
lcall
dec
xor
sbb
and
sarb
cmpsl
test
lods
add
xchg
mov
sub
or
sub
sbb
jnp
jno
shrb
nop
mov
mov
push
movsl
pushf
lock
rorl
pusha
push
pop
pop
or
fadds
imulb
cmp
sbb
add
popl
movsb
stos
std
xchg
lret
xchg
repz
mov
mov
xchg
mov
and
test
or
nop
stos
and
in
mov
inc
add
in
sbb
and
push
icebp
mov
cmp
push
or
cmp
add
clc
sbb
xor
inc
mov
lock
and
popf
sbb
aaa
jg
addb
mov
and
or
sbb
stos
lahf
mov
movsl
add
push
in
pusha
dec
or
pushf
sub
pop
fstpl
push
adc
rcll
in
dec
mov
mov
arpl
das
mov
and
orb
je
icebp
dec
add
jmp
pop
aas
pop
push
leave
mov
dec
data16
movsl
add
hlt
and
ficoml
cmp
or
cmp
dec
xchg
xor
or
mov
sarl
stos
es
sbb
daa
sbb
inc
subl
out
jbe
into
fsubl
xchg
in
cltd
fnstenv
jnp
push
xchg
push
aas
dec
in
rol
insb
fdivl
popf
adc
cmp
push
pop
add
jnp
mov
add
mov
flds
inc
popa
pop
shll
inc
cs
mov
inc
out
xorb
popf
adc
movsl
daa
fbstp
cmp
xor
into
int
insb
lea
sub
jge
or
or
ret
mov
push
pusha
inc
or
and
repnz
mov
andb
cmpsl
xchg
aad
add
mov
push
inc
adc
xlat
or
mov
and
imul
mov
mov
daa
jmp
shll
popf
adc
inc
xchg
inc
imul
xchg
sbb
mov
mov
loope
push
fsts
mov
fs
mov
test
lcall
ror
mov
mov
movsl
adc
add
xor
sub
cmp
jge
pop
sbb
adc
push
lcall
out
mov
xor
add
cmp
icebp
jge
fldt
bound
add
mov
cld
enter
jns
movsl
dec
push
sarb
repnz
aas
xchg
xor
mov
je
imul
sbb
in
mov
add
nop
insb
dec
aam
stos
jge
sbb
pop
andb
shr
add
adcb
cmp
pushf
lret
lock
push
lret
sub
or
pop
nop
cmp
das
lea
cs
or
or
fldl
pop
testb
inc
jo
pop
pop
test
sub
inc
int
in
stc
daa
cmp
hlt
jns
stos
dec
js
push
dec
mov
adc
xchg
xchg
mov
mov
paddw
inc
lea
jge
mov
je
push
repnz
adc
sub
adc
xor
pop
sub
pop
mov
jmp
mov
dec
jo
mov
add
aad
mov
jbe
lock
xchg
xchg
jno
pop
ficoms
jmp
dec
or
sahf
shll
pop
or
mov
add
mov
sbb
popf
push
jbe
add
out
inc
mov
je
shll
add
xor
es
add
ja
dec
movsb
push
imul
pop
add
fisubs
repz
pop
push
rol
ficompl
bound
adc
jmp
imul
add
pop
adc
clc
xchg
jno
add
bound
add
leave
mov
addl
jle
lods
loop
popf
je
pusha
push
pop
popa
pop
mov
outsw
cltd
popa
pop
mov
mulb
stc
inc
adc
popl
cmp
push
push
mov
push
add
fs
sbb
repz
inc
insb
mov
xchg
negb
shll
test
or
imul
jl
hlt
bound
xchg
wbinvd
sarb
mov
and
nop
xchg
xor
clc
lret
fcomi
sarb
cmp
inc
lcall
std
add
lock
pop
add
xor
mov
nop
sub
cmpb
out
add
test
stos
mov
loope
mov
aas
add
add
cmc
xchg
jle
add
paddq
aad
cltd
lods
aaa
push
pop
aad
popa
es
and
mov
and
notl
jmp
adc
das
mov
adc
test
icebp
cmpsl
sbb
adc
push
sbb
xor
aad
inc
sbb
aaa
add
mov
xchg
insb
sub
out
mov
jno
sbb
or
ret
push
or
movsl
out
lea
aam
ljmp
sub
cmp
aam
jmp
test
ss
adc
and
jo
sub
mov
mov
or
mov
cmp
add
cs
mov
bound
lret
fcom
push
mov
xor
xorl
test
mov
or
jno
sti
jp
inc
in
loop
dec
adc
aad
stos
cmc
inc
push
pop
fcmovb
rcll
xor
mov
lock
fbstp
aaa
sbb
sub
adc
inc
dec
rcl
add
mov
jg
sbb
shll
sub
sub
mov
cltd
mov
lock
adc
fcoms
movsl
das
dec
or
mov
xchg
addb
pop
les
xchg
sub
sarl
mov
adcl
mov
mov
jo
popf
cld
test
rclb
cmc
data16
or
ret
pop
adc
xorb
and
jns
sbb
dec
insb
ret
aad
sub
lcall
cmpsl
test
xchg
xchg
jb
mov
sarl
mov
daa
or
out
or
mov
mov
pop
xor
cli
inc
data16
xchg
xchg
mov
iret
mov
add
adc
mov
jb
add
sub
jbe
mov
jno
adc
pop
cmpsb
mov
sbb
fwait
mov
les
clc
push
dec
sub
pop
xor
pop
or
hlt
loop,pt
add
outsl
insb
and
xor
fadd
ret
jle
jle
sbb
push
rolb
aas
sbb
adcb
mov
xchg
sahf
negl
fdivr
sub
loope
fiadds
mov
sub
sub
sbb
push
mov
jae
leave
repnz
test
sbb
lods
sbb
xchg
xor
cmpsb
std
add
dec
cmc
xchg
xor
and
lcall
in
out
mov
shl
pop
pop
mov
jnp
jno
jg
or
pop
mov
aaa
out
add
adc
push
shrb
mov
and
dec
cmpsb
shll
xor
jo
outsb
add
test
sub
or
or
add
imul
mov
dec
arpl
fistps
data16
js
xor
push
fwait
test
inc
sti
addb
adc
mov
mov
jl
adcb
ret
add
inc
ljmp
shll
mov
mov
rclb
aam
mov
lret
pop
pop
pop
cltd
sbbl
xor
lahf
fdivl
mov
add
add
jmp
int
hlt
cmp
ret
in
stc
ds
scas
mov
dec
stc
int
mov
xchg
cmp
imul
rcl
push
or
push
inc
push
sbb
icebp
and
mov
or
int
ret
jecxz
lcall
inc
adc
or
fsubl
push
pop
fbstp
shr
jnp
lock
enter
dec
mov
sbb
xor
stos
outsb
outsb
jbe
pop
xor
pop
mov
dec
mov
popa
dec
xchg
stos
sarb
outsl
pop
repz
adc
leave
clc
insl
sub
pop
pop
lret
inc
push
out
mov
adc
leave
stos
adc
sbb
sbb
or
xor
loop
pop
jge
add
xor
and
popf
hlt
sub
push
jno
pusha
stos
sbb
jae
mov
cmp
mov
cwtl
jno
mov
push
ds
sbb
insl
lods
add
into
jo
out
push
fcoml
push
add
cmpl
mov
lea
sbb
int3
mov
cwtl
mov
cmpsl
and
les
rep
inc
faddl
add
mov
pop
add
or
sbb
shl
and
clc
add
mov
add
jbe
mov
nop
sub
outsb
fcmovnu
subl
push
cltd
mov
lea
inc
mov
adc
mov
pusha
std
pop
pxor
fbstp
rclb
cmp
push
pop
test
int3
seta
mov
cmp
stos
filds
orb
sub
inc
or
scas
into
jmp
sub
daa
or
pusha
add
or
dec
jnp
push
daa
push
adc
test
inc
jle
add
adc
mov
push
jl
add
f2xm1
or
mov
test
mov
std
out
mov
cmp
mov
xchg
push
mov
pop
sbb
pop
test
cs
adc
add
xchg
test
cmpsb
out
cmp
adc
mov
add
jge
jmp
and
xchg
into
dec
mov
cmp
mov
js
xchg
fstl
or
xor
dec
lods
shrb
sub
xlat
adc
mov
sbb
or
inc
dec
fldt
sbb
pop
data16
lret
shl
pop
or
cmp
or
jne
pop
pop
mov
xchg
sbb
ffreep
or
lret
mov
xchg
cmp
jb
cld
daa
shll
and
adc
test
jnp
xchg
movsb
lahf
sti
cwtl
lock
jl
cld
and
mov
sub
popf
sbb
push
and
mov
xor
test
mov
jge
cmp
add
and
jle
or
xchg
mov
dec
fisubs
arpl
fcoml
nop
add
jmp
mov
je
imul
jo
push
jne
or
shll
xchg
mov
pop
pusha
jo
mov
sbb
subl
sbb
pusha
iret
mov
fcoml
cmp
in
and
push
xchg
cmp
cmp
cmpb
add
push
loopne
js
cmp
jns
loope
or
and
xor
hlt
jmp
std
dec
orb
fldl2t
jmp
loopne
roll
push
xchg
cmpsb
sub
cwtl
stos
xchg
xor
aad
pop
jecxz
pop
add
mov
push
daa
push
fsts
pop
pop
dec
rorb
pop
mov
adc
in
int
or
fisttpl
fisttpl
scas
sbb
pop
int3
cli
testb
enter
or
xchg
cmp
jge
jp
mov
inc
xchg
shl
mov
sub
push
xlat
sub
add
cmpsb
inc
mov
lock
xchg
add
push
sub
shr
xor
aaa
data16
inc
cwtl
test
jmp
lahf
mov
cmp
int3
and
shll
jmp
popf
jne
pop
or
mov
dec
cmp
xor
nop
lret
add
sbb
in
out
inc
nop
xlat
xchg
into
outsb
dec
cmpb
dec
adc
xchg
repz
sahf
jne
or
arpl
and
cs
or
push
add
mov
je
test
cmp
mov
pop
movsl
jnp,pn
jo
ds
movnti
inc
rol
and
adc
jecxz
sahf
insb
arpl
xchg
add
lahf
das
fstps
dec
xor
and
push
stc
adc
fisttpll
and
repnz
sub
pop
or
or
leave
xchg
insl
inc
mov
sub
lcall
sbb
jae
add
call
cmp
add
or
lods
push
add
jecxz
mov
sbb
add
enter
xchg
add
inc
pop
sbb
test
call
push
test
fwait
add
popf
out
jb
fcompl
popf
cmp
jns
cmp
cmpsb
ljmp
stos
dec
int3
mov
test
aaa
add
outsl
lea
sbb
inc
fldt
pop
add
lret
mov
ja
xchg
jle
jae
sbb
insb
add
add
dec
pop
inc
or
adc
fs
repz
sub
pop
push
or
sub
test
pop
lcall
sub
scas
jb
inc
lds
push
and
sarb
bound
and
cwtl
mov
ret
add
shl
pop
mov
rolb
repz
scas
outsl
push
pop
es
and
sti
pop
out
jbe
inc
outsb
popf
insb
push
mov
sub
xchg
int3
xor
rorl
dec
jp
movsl
das
jb
inc
test
popf
insl
add
xor
cmp
xchg
ljmp
ja
add
mov
mov
adc
xor
sbb
and
in
js
xor
mov
mov
add
xor
aaa
xor
in
xchg
shlb
jg
push
stos
sti
add
and
push
and
shrl
sub
bound
dec
sbb
mov
adc
or
sbb
imul
sub
xchg
push
inc
dec
cli
in
jg
dec
add
xor
repz
pop
pop
fs
or
sbbl
jmp
mov
sub
push
aaa
pop
xchg
inc
or
scas
sbb
xor
and
jnp
test
dec
fsub
dec
mov
ret
or
and
pushf
gs
xor
or
cld
faddl
add
jno
add
xchg
je
enter
pop
xchg
mov
sbb
insl
cld
jmp
and
jmp
mov
mov
push
add
lea
pop
cld
aas
outsb
sti
add
pop
ljmp
and
or
xchg
cmp
pop
sbb
add
push
jnp
add
push
xchg
xchg
ljmp
mov
loopne
or
or
xchg
loop
mov
or
mov
jp
jbe
jmp
in
sarl
into
sbb
lods
adc
loopne
adc
test
mov
setb
fsubs
sbb
iret
dec
pusha
jno
sbb
daa
mov
inc
notl
arpl
sbb
lea
xchg
or
sbb
dec
and
pop
loope
or
out
addb
je
push
in
lahf
sbb
and
imul
sbb
cmp
add
jno
or
mov
fdivl
popl
stos
sub
jno
mov
dec
mov
or
in
lock
mov
scas
hlt
or
xor
rcrb
and
test
add
jo
bswap
and
xorl
push
jle
in
mov
cwtl
mov
sub
push
movsl
out
inc
clc
cmp
mov
mov
sub
in
enter
scas
repnz
jne
mov
mov
push
xchg
fimuls
pop
mov
bound
sarl
cli
push
loopne
clc
pop
shrb
test
mov
pop
aam
out
jb
out
cmpsb
rolb
fmull
sub
push
shlb
jbe
aam
adc
in
add
ja
pop
xlat
sahf
subb
fwait
ret
cmp
inc
mov
loopne
in
add
fsubr
and
mov
jno
mov
shrl
stos
pop
cmp
inc
xchg
or
ffree
or
stos
out
daa
sub
rorl
shlb
test
cmp
mov
es
cmp
jno
inc
test
pop
mov
add
dec
mov
dec
xchg
mov
pop
mov
inc
cld
push
into
push
cmpl
xchg
mov
xchg
inc
mov
fists
jo
add
mov
fcoml
push
sub
sub
sub
dec
jp
or
add
sbb
or
push
hlt
lock
inc
add
xor
lea
adc
and
xchg
sub
sbb
jecxz
cltd
repz
and
mov
popa
mov
loopne
push
out
adc
xor
scas
fldl
ljmp
lods
mov
loop
push
je
incb
add
hlt
and
add
xor
jmp
xchg
xchg
xor
popf
lea
lcall
faddl
aam
push
lods
lret
xorl
jmp
pop
inc
fiadds
js
mov
jno
outsl
jmp
cs
imul
pop
lods
and
xchg
js
push
and
std
in
or
sbb
imul
xchg
add
dec
inc
sbb
lcall
int3
push
popf
cmp
mov
or
dec
inc
int3
sahf
pusha
mov
or
cmp
rcll
popa
dec
push
xchg
xor
mov
pop
add
pusha
xchg
bound
and
add
lods
push
adc
stos
xchg
adc
sub
or
and
push
push
push
aad
loopne
popa
push
pop
xchg
xchg
aaa
pop
add
sti
dec
pop
shr
sub
push
aad
mov
lea
sub
push
xchg
mov
cmp
inc
add
xrelease
sbb
fistl
ljmp
mov
call
pusha
fcoml
mov
inc
dec
or
push
mov
adc
xchg
stos
fwait
aas
sahf
test
out
test
sbb
dec
and
std
faddl
cmp
add
jp
aad
pusha
cmpl
or
lret
fsubl
mov
jge
cltd
fstps
and
loope
xor
in
iret
inc
aam
lock
daa
mov
orl
shll
bound
cmp
mov
jb
mov
in
out
xor
stc
stos
add
aas
xchg
jl
shll
jae
sub
lock
jp
stc
pop
sub
mov
popa
xor
pop
inc
push
js
jne
jnp
mov
test
add
insl
imul
sbb
push
xchg
mov
clc
dec
mov
into
adc
pop
repz
xchg
sub
xor
repz
fimull
inc
sub
pop
mov
mov
or
cmp
ret
ds
aad
mov
mov
dec
pusha
mov
dec
movb
xorb
loop
loopne
bound
jbe
sub
nop
dec
subb
shl
or
das
rcrb
xor
push
sbb
fmulp
test
add
in
cli
push
cmp
gs
test
popf
dec
and
leave
add
popf
mov
or
xchg
adc
mov
cli
mov
data16
mov
mov
pushl
push
jo
into
or
adc
pop
mov
jg
cmp
pop
push
daa
imul
dec
loope
cmp
add
xor
ds
jno
add
xor
push
pop
mov
orb
mov
inc
popf
sbb
popa
rcr
lret
mov
sub
and
cld
mov
clc
scas
arpl
popa
mov
test
pusha
sub
mov
xor
or
pusha
pop
push
xor
das
fs
inc
cwtl
cs
into
ds
add
pop
push
icebp
jp
pop
fwait
cwtl
or
push
lret
stc
in
push
sbb
stc
out
mov
mov
mov
testb
inc
or
mov
call
jge
inc
rclb
mov
mov
dec
cltd
or
jge
clc
gs
dec
mov
mov
xchg
mov
xor
xor
xor
lods
adc
negl
fcomps
fwait
sbb
pop
cmpsb
mov
sti
out
add
repnz
xlat
xchg
out
rcrl
mov
jmp
jno
or
cmpl
xchg
adc
add
mov
and
xlat
adc
mov
mov
xor
or
lods
mov
mov
or
push
inc
std
xor
mov
sub
dec
fwait
adc
mov
cli
xchg
push
or
mov
mov
jmp
xor
mov
mov
sbb
inc
push
out
pop
sti
lea
xchg
dec
xchg
xor
lods
sbbb
bound
jb
xor
imul
popa
add
jns
add
repz
push
das
jnp
push
mov
add
dec
cmp
mov
xchg
in
xor
add
data16
mov
test
add
mov
stc
mov
dec
fldt
mov
incl
fsubl
fmul
sbb
dec
xchg
jle
add
xchg
mov
cmp
mov
les
xchg
cltd
in
pmulhuw
mov
push
addb
add
or
dec
sbb
or
fwait
icebp
cmc
sbb
fcoml
or
stos
repz
pop
xchg
adc
fcmovbe
test
xor
pop
cwtl
jo
test
adc
ds
push
pusha
cmpsb
repz
dec
cli
jbe
dec
jns
jns
call
pop
popa
in
dec
dec
mov
rorb
sti
adc
sbb
xchg
push
xchg
nop
push
adc
mov
jb
pop
mov
daa
push
mov
mov
sbb
std
pop
pop
pop
inc
mov
dec
cwtl
cmp
pop
and
inc
das
xchg
test
paddd
mov
popa
cmpps
out
test
sti
push
xchg
xchg
loopne
xor
popf
subl
mov
in
sub
mov
mov
pop
pusha
xor
dec
outsb
stos
add
xchg
clc
test
lods
pop
xor
sbb
les
dec
jnp
lea
add
call
popf
icebp
dec
add
mov
filds
pop
mov
jge
aad
and
dec
or
add
xchg
xchg
cmp
inc
lock
cmp
xor
jnp
inc
jb
sub
popa
or
lret
mov
mov
xchg
jmp
xchg
adc
cmp
fsubs
and
add
nop
out
in
cli
or
inc
bswap
add
dec
or
adc
and
push
in
es
dec
pop
pusha
sub
das
and
xlat
or
and
mov
add
std
push
popa
mov
orl
jae
xchg
outsb
mov
pop
scas
xor
or
sub
test
pop
push
movsb
dec
or
inc
aam
inc
aas
xor
inc
push
mov
push
jmp
mov
cltd
or
sbb
out
cmp
add
in
pop
pop
imul
in
stos
xor
movsb
in
inc
arpl
and
add
pusha
shl
dec
add
js
aad
test
add
das
mov
inc
or
loope
sub
xlat
mov
pop
test
pop
popf
int
mov
lock
fimuls
ds
sub
and
int3
jecxz
cli
add
sbb
xchg
cmc
nop
xchg
sarb
cmp
cmp
add
out
sahf
sub
add
add
sub
cmp
and
mov
mov
fcoml
test
and
stos
jp
xor
or
jp
and
jg
imul
adc
push
push
cmp
fistpll
icebp
add
xlat
ss
rolb
scas
mov
push
sub
popf
xor
jae
mov
shll
push
decl
repnz
es
fbld
add
push
mov
out
xchg
add
adc
rorw
mov
pusha
lds
mov
shrl
mov
in
lock
jno
sbb
out
ja
pop
xor
pop
insl
shrb
push
insl
jb
fldl
push
push
xorl
daa
adc
aam
dec
xchg
loope
imul
insl
xor
inc
add
mov
pusha
dec
mov
pop
jns
aaa
aas
or
mov
pop
cs
xchg
cmp
in
stos
mov
xchg
ss
dec
int
adc
outsb
sbbb
sub
arpl
or
lea
jne
enter
mov
jns
dec
jp
xchg
aaa
jns
sbb
or
mov
cmp
add
fdivrl
jne
in
inc
add
mov
inc
sahf
xor
icebp
xlat
and
inc
xchg
and
sbb
jmp
pusha
add
adc
or
dec
mov
xor
lock
or
xor
movsb
add
fsubs
std
push
or
addr16
repz
xor
cmc
enter
cmpl
add
and
in
adc
rolb
insl
dec
sub
cmpsl
loope
popa
out
adc
popf
mov
xchg
sbb
pushf
mov
push
lahf
ja
xchg
xchg
or
mov
dec
in
out
das
or
pop
fldt
xchg
add
pop
lret
fwait
or
push
mov
or
test
add
int
jp
add
call
lods
call
in
dec
daa
or
insl
push
sbb
aam
or
dec
push
mov
cmc
cmp
xchg
add
insb
out
sub
fdivl
shll
and
lds
in
es
popf
out
std
leave
push
xchg
insl
sbb
cmpsb
in
xlat
in
dec
xor
imul
push
test
and
push
adc
repnz
sbb
push
and
inc
or
popf
pusha
lret
dec
fdivl
inc
mov
mov
xor
pop
and
dec
mov
addr16
orl
loopne
and
les
mov
xor
cmpsl
inc
enter
sbb
mov
filds
and
mov
adc
xorb
cli
mov
dec
popa
pop
pop
call
dec
sub
or
mov
inc
inc
cli
or
imul
adc
add
sbb
in
xchg
stos
jb
je
mov
mov
mov
fstpt
stos
cld
sub
lods
xchg
repz
loopne
into
imul
jmp
pusha
and
jno
add
fldlg2
adc
loopne
rcl
jno
push
mov
xlat
xchg
and
pushf
sub
stos
push
cld
fcomp
add
rolb
mov
shrl
push
adc
out
add
cmpsb
inc
nop
or
and
int
pop
lret
cmp
mov
jl
push
add
mov
inc
es
cmpsl
mov
push
jge
cmp
or
jle
push
dec
lods
jecxz
test
sub
cmp
mov
add
addb
pop
push
lcall
out
or
mov
mov
or
mov
sbb
orl
sub
push
jo
xchg
xchg
in
dec
inc
adc
add
loope
adc
aas
add
js
dec
mov
xchg
or
push
repnz
cs
shll
lea
adc
lods
add
pop
jnp
add
jg
int3
push
aaa
pop
nop
sub
popa
push
lds
stc
sbb
je
xor
pusha
repz
ds
xlat
pusha
add
dec
rorb
ds
mov
stos
popf
in
or
sbb
addl
push
sbb
mov
outsl
sbb
fldt
mov
shlb
sbb
out
xchg
shll
dec
adc
lcall
jecxz
push
mov
dec
cmp
lock
stos
or
cli
in
out
add
jmp
ret
mov
ja
xor
mov
mov
pop
clc
jmp
imulb
mov
enter
mov
dec
jae
xor
add
sub
or
push
stos
inc
sub
andb
adc
movsl
aam
pop
pop
pop
push
outsl
xchg
add
push
push
jnp
nop
mov
xchg
mov
ficomps
outsl
stos
xchg
lcall
aam
cmpsl
inc
xlat
mov
loopne
push
lock
and
cmp
mov
dec
or
pushf
push
jg
dec
mov
pop
adc
mov
inc
pop
movsl
icebp
pop
cmpsb
or
and
or
mov
cmpsl
hlt
rcrl
int3
out
sub
fstl
mov
pop
mov
sub
jge
add
call
or
mov
and
push
xchg
pop
pop
add
push
cmp
xchg
pop
test
mov
dec
leave
mov
ljmp
sub
add
leave
rol
and
mov
sti
xor
and
inc
add
cmp
add
or
filds
pusha
jle
pop
fwait
add
popa
mov
add
jo
es
pop
inc
lods
std
and
clc
jne
lea
add
jns
and
ds
in
ret
or
dec
mov
xchg
mov
repnz
aam
into
sbb
shll
mov
dec
movsb
hlt
orb
fildl
jno
in
fs
xor
lea
fldcw
push
pop
xchg
scas
outsl
mov
add
add
mov
fadds
stc
mov
push
sub
hlt
mov
shl
fdiv
jmp
rcr
ja
test
daa
push
in
xchg
sbb
adc
or
movsb
rcll
xchg
jnp
mov
and
inc
loop
js
cmpsb
mov
and
enter
mov
mov
shr
xor
add
jo
xor
out
adc
mov
hlt
add
push
fidivrs
cmp
je
xchg
pushf
jecxz
dec
and
inc
adc
cld
jns
addb
sti
das
repz
add
mov
mov
lret
or
sub
aaa
cmpsb
sbbb
sub
into
xchg
sti
push
rol
rcrl
faddl
push
repnz
push
lret
jo
insb
add
mov
lock
dec
or
push
test
daa
lods
sbb
cvtpi2ps
push
adcl
add
ds
in
enter
ret
sub
test
xor
mov
test
pop
bound
mov
push
fdivrl
push
sbb
fadds
mov
imul
ljmp
push
cmp
mov
call
mov
sub
test
sbb
mov
or
loope
stos
shlb
cltd
addr16
push
adc
mov
incl
push
add
inc
andb
and
mov
ljmp
jle
mov
jg
mov
mov
clc
or
loope
add
mov
shrb
mov
movb
adc
push
push
pop
sub
add
shll
aam
pop
and
outsl
cmpsb
out
int3
mov
xchg
mov
das
and
push
insb
or
mov
repz
and
add
xlat
sub
sbb
add
push
add
push
mov
fwait
pop
adcb
pusha
in
xor
xchg
loop
jns
pop
jl
outsl
dec
mov
popf
das
lea
faddl
sbb
cmp
ret
xchg
out
push
inc
fstl
xchg
mov
push
add
xchg
lock
push
push
or
cld
lock
inc
mov
add
in
jns
std
mov
daa
lahf
add
cli
cmpl
outsb
mov
sbb
jge
nop
and
xchg
xor
jge
push
aas
sub
stos
xor
fisttps
aad
or
sub
sbb
push
push
add
popa
xchg
in
mov
sbb
pop
jmp
xchg
insl
jmp
sti
mov
mull
rorl
sbb
pop
push
xchg
fsubrs
push
popf
lcall
popf
std
xor
and
sbb
add
aam
mov
mov
push
dec
mov
mov
js
jnp
shrb
cmp
or
popf
fsts
mov
outsb
add
jne
pop
movb
notb
push
xchg
mov
adc
xlat
mov
jns
icebp
sub
push
inc
rolb
mov
dec
lods
scas
loop
sub
clc
push
or
in
test
jp
daa
enter
fldcw
or
cmpsb
cmpsl
push
or
popf
pusha
outsl
movsl
stos
and
jle
push
jo
dec
cmp
stc
pop
mov
nop
push
jecxz
inc
addb
xor
jbe
sub
pop
jne
shlb
mov
out
pushf
lods
nop
mov
faddl
sub
divb
push
stc
xor
enter
shl
inc
add
pop
stc
in
popa
sub
ss
xor
fidivl
stc
xor
cmc
jno
adc
or
int
sarb
bndldx
stos
pusha
push
mov
pop
icebp
sbb
inc
or
sub
push
jno
mov
adcl
cltd
adc
out
xor
popf
mov
xor
mov
inc
sbb
sbb
daa
pop
inc
xor
sbbl
pusha
or
lret
add
hlt
fadds
push
dec
pop
jecxz
test
rcr
ja
jno
cmp
rcr
mov
fistpl
cli
xor
mov
add
mov
call
int
jno
in
std
adc
jae
xor
in
xor
sahf
inc
xchg
loope
mov
cmp
cmpsl
xor
mov
fidivrs
std
in
xor
int3
mov
inc
shl
mov
out
nop
imul
mov
scas
cwtl
je
dec
ja
mov
push
sub
testb
pop
add
lret
hlt
test
sub
pop
sbb
adc
pop
add
mov
sti
fstps
pop
jg
pop
jle
push
outsl
pop
or
rcrb
stc
aaa
adc
orb
mov
enter
imul
cld
in
enter
cmp
jnp
pop
leave
adcb
sbbl
test
adc
xor
xchg
pop
js
or
lcall
gs
push
imul
test
add
xchg
cmpsb
shl
pop
jg
cmp
movsb
jecxz
xor
jle
rorb
dec
fisttpll
mov
adc
out
gs
insb
xchg
repz
mov
movsl
clc
add
test
jecxz
adc
xchg
mov
outsl
and
or
jb
aas
scas
ss
scas
add
fdiv
and
push
test
and
pop
mov
bound
test
push
addr16
in
mov
push
sti
lret
lea
mov
adc
cmc
xor
ret
mov
clc
lds
push
xchg
mov
add
dec
mov
fisubl
or
inc
mov
xchg
inc
and
aad
sbb
dec
int3
add
add
jmp
pusha
mov
and
mov
fcoml
dec
rcrl
xor
lea
add
sbb
and
sbb
jp
dec
xor
mov
movsl
jae
inc
cmp
mov
das
pop
push
jne
fisubl
and
insl
or
repz
cmp
sti
in
push
mov
inc
adc
mov
adcb
dec
aas
insl
dec
testb
mov
dec
inc
loopne
mov
sarb
add
stc
jae
cmc
jg
or
and
push
mov
add
std
adc
dec
pop
xorb
lock
sbb
negb
popa
push
stc
push
int
loope
test
aas
out
or
push
xchg
sub
mov
decb
dec
jmp
std
push
aad
add
push
shrl
add
js
add
mov
je
push
mov
cmp
in
jmp
les
das
fldenv
and
inc
daa
push
jle
faddl
xchg
add
in
jge
xor
nop
loopne
stc
add
fwait
or
nop
sti
pop
jae
adc
jmp
lcall
cmc
mov
aam
adc
adc
fucomp
cmp
push
cwtl
add
mov
adcb
sub
adc
mov
pusha
aad
mov
lret
aam
dec
mov
clc
adc
and
mov
bound
xchg
in
shrb
dec
clc
xor
out
pop
pop
nop
outsb
pop
add
jmp
daa
lock
lods
add
stos
cld
ja
or
leave
dec
sbb
aaa
repnz
fldt
orb
in
sub
les
dec
adc
add
lcall
push
and
sub
out
cwtl
pop
jo
jo
adc
lds
loope
jno
jmp
pop
dec
mov
sti
addr16
jl
sub
add
jecxz
dec
add
mov
loop
notl
mov
inc
in
mov
dec
jns
cmp
das
inc
je
push
ja
cld
inc
add
mov
addb
lods
ja
test
or
mov
cmp
imul
pushf
xchg
cmp
cmc
adc
sbbb
jecxz
push
test
nop
outsb
push
jp
subb
jnp
shrb
enter
std
or
or
scas
outsb
insb
jo
add
mov
pop
xor
aad
ljmp
test
jne
addr16
loope
in
negl
mov
dec
bnd
add
fucom
js
or
adcl
dec
mov
pop
push
in
pop
add
mov
outsl
sbb
sub
lods
sbb
mov
clc
sbb
stc
je
leave
or
loopne
inc
and
popf
xor
outsb
and
xchg
sarb
pop
adc
loop
aam
ret
stos
lods
xlat
daa
test
shll
test
ljmp
aaa
dec
pop
mov
push
inc
addl
push
xor
mov
cmp
or
outsl
sub
and
and
pop
fcmovbe
insl
addr16
adc
pop
ds
push
popf
in
je
dec
inc
mov
loop
add
enter
and
add
sarl
mov
push
add
pop
or
cmp
jnp
jo
pop
add
jae
je
ret
dec
pop
xor
jno
mov
imul
testb
pop
pop
ror
dec
ficoms
add
jg
ds
data16
add
cmp
mov
sbb
jge
adc
push
call
jmp
pop
enter
add
sbb
sbb
push
cmp
jg
push
xor
pop
aam
hlt
jg
add
xor
xchg
out
push
inc
xacquire
dec
xchg
pop
cs
dec
lret
pushf
nop
jo
cmp
test
adc
popf
or
jbe
fs
ljmp
pop
lret
stc
nop
mov
mov
shll
xchg
add
jg
mov
jmp
paddusb
imul
jmp
testl
adcl
cmp
fcmovne
jb
rol
mov
es
out
jne
out
repz
sbb
push
pop
jle
adcl
outsb
outsl
xchg
rol
loopne
lock
fcoml
ja
pusha
out
sub
push
ficoml
push
imul
fildll
aam
jl
ljmp
sub
gs
xchg
dec
sarl
loopne
dec
inc
and
jmp
xchg
fisubrs
leave
loopne
test
addl
and
ljmp
cltd
add
mov
sti
outsl
cmp
push
cmp
cmp
adc
add
xor
push
lock
idivb
notb
mov
xor
add
or
das
int
fdivs
inc
daa
cmp
pusha
rol
sub
stos
lret
das
push
stos
fs
mov
popf
mov
and
jle
dec
pushf
add
add
inc
add
jl
out
cld
mov
repnz
mov
fmuls
adc
push
cltd
cmp
jae
les
sbb
mov
pop
push
or
loop
call
dec
push
sub
cmc
repz
mov
movsl
cmpsl
xor
loop
inc
data16
dec
aad
add
inc
jp
jne
ret
je
jne
push
out
xor
lods
sbb
pop
cmpsb
dec
pop
xchg
mov
xchg
add
pop
jmp
cmp
in
mov
test
sahf
xchg
repz
adc
imul
mov
jnp
mov
xchg
in
add
mov
or
cmp
fincstp
pushf
scas
dec
xor
add
mov
imul
lock
lods
popa
or
mov
push
daa
jmp
ret
mov
clc
mov
add
adc
mov
mov
nop
pop
mov
add
xchg
mov
scas
je
sbb
jno
pop
ds
push
push
shlb
mov
je
ja
in
mov
pop
mov
es
stc
cmp
xchg
orb
loop
out
xorb
call
mov
inc
dec
clc
adc
sub
mov
nop
or
and
add
pop
push
fwait
mov
js
je
mov
pop
lods
mov
adc
popf
sbb
sti
aaa
jo
mov
sbb
mov
daa
jl
xchg
sub
stos
xlat
dec
dec
xchg
sbb
fstpt
imul
push
push
pop
jmp
adc
add
push
lret
jge
es
call
adc
fst
subl
mov
sbb
mov
loopne
popa
in
flds
das
gs
adc
insl
mov
or
sbbb
inc
sbb
sbb
and
outsb
add
nop
jecxz
cmp
and
cmp
sbb
jle
sub
int3
test
xchg
mov
aas
jge
ljmp
adc
inc
lahf
ror
cld
sti
pop
add
pop
dec
and
fcmovne
mov
xchg
clc
mov
pushf
mov
mov
add
and
adc
mov
rcll
xor
inc
adc
adc
pcmpeqd
pop
mov
jo
pusha
scas
jp
pop
mov
inc
jmp
jg
jb
jnp
add
dec
scas
dec
stc
std
hlt
lods
sub
cmp
xchg
and
push
sbb
roll
gs
or
lods
cli
in
and
das
int
aas
bnd
dec
or
repnz
test
add
pusha
mov
je
arpl
inc
or
popa
ret
in
add
les
fs
adc
mov
mov
mov
inc
out
xchg
adc
mov
cmp
movsl
push
adc
or
js
jnp
mov
mov
push
test
dec
sub
out
push
adc
push
add
push
inc
jmp
nop
and
add
aam
xchg
ficomps
pop
inc
push
stc
sbb
cmpsb
shll
popf
xchg
lock
mov
pop
pushf
xchg
or
add
cmp
pop
mov
jmp
jne
inc
aaa
aas
iret
inc
movsl
movsl
jo
dec
das
out
ds
sbb
push
add
sbb
sub
ret
pop
xor
mov
push
fldenv
add
mov
iret
lds
out
mov
sub
sub
dec
push
cmp
add
cmp
adc
scas
loop
add
jno
aas
cwtl
push
shrb
adc
adc
mov
jg
data16
adc
ret
mov
jg
push
add
sbb
jns
mov
nop
scas
jecxz
mov
andb
adc
pop
aam
mov
das
rclb
mov
insb
xchg
add
pusha
aaa
out
xlat
out
add
xchg
out
sarb
jmp
out
xor
fnstcw
lea
adc
ja
inc
jbe
jmp
roll
out
rcrb
fsts
ficoms
scas
popa
jbe
inc
sbb
call
mov
fistpl
xchg
daa
and
mov
dec
mov
jo
push
stos
jns
into
lcall
int3
mov
jns
les
add
adc
add
out
enter
cmp
iret
jbe
push
sti
pop
jo
mov
jp
sbb
push
mov
cmpsl
xor
aaa
xchg
xlat
and
mov
jmp
cld
jg
fsubl
inc
aad
ret
hlt
je
inc
mov
jns
imul
lret
add
jnp
lea
inc
push
clc
jno
fisubl
fistl
iret
lea
push
dec
dec
ljmp
andb
sub
stos
push
mov
add
inc
fdivs
lock
mov
cltd
and
xchg
sub
and
mov
pop
mov
int3
add
mov
icebp
gs
jl
inc
push
pop
das
push
mov
or
rcrl
mov
xor
pop
arpl
lds
lahf
in
cmp
xlat
xchg
ljmp
in
adc
and
adc
add
out
jo
stc
sub
lea
push
xor
imul
dec
jns
aas
mov
fistps
popf
nop
jb
or
or
arpl
lock
rcrl
and
loopne
jnp
addb
leave
in
aad
data16
xchg
pop
lea
cmp
and
inc
das
or
sbb
and
insl
push
add
lret
imul
or
xor
stc
cmp
sbb
fldl2t
dec
adc
sbb
ret
out
sub
popf
jns
outsl
jge
mov
dec
ret
push
js
das
push
stc
jo
xorl
cwtl
dec
sbb
jecxz
push
sahf
fiadds
adc
sub
cs
cmc
inc
das
push
push
loopne
jecxz
mov
pop
mov
or
sub
outsb
movsl
inc
mov
add
dec
cli
les
fwait
sti
sarl
stc
cld
aas
out
loope
aam
movsl
mov
inc
mov
adc
popf
lods
das
faddp
pop
shrb
adc
and
je
xor
out
cmpsb
fnstsw
jg
cmpsb
add
jl
cmp
and
dec
mov
mov
ret
pop
mov
insb
cs
mov
xor
aas
leave
lret
repnz
add
xchg
or
or
movsb
xchg
je
dec
rorl
xor
push
dec
mov
mov
adc
shlb
addl
push
data16
add
and
icebp
fbld
xchg
out
cmp
repz
xchg
jne
or
push
and
and
out
jp
add
mov
mov
sub
pop
dec
and
fstps
and
pop
sbb
daa
mov
cmp
mov
mov
cmp
mov
xlat
sti
nop
jl
sub
push
jno
xchg
mov
test
es
mov
mov
repz
push
fsubrl
jle
in
push
add
mov
andb
test
aaa
sub
scas
xor
jge
adc
inc
fstpt
dec
push
call
outsb
dec
out
enter
pop
xchg
cwtl
sbb
xor
stos
push
mov
test
mov
dec
mov
sub
mov
insl
cmp
xchg
sbb
lods
mov
fwait
pop
add
jno
ja
fnstcw
adc
arpl
call
jno
aaa
je
sub
push
imul
incb
jge
xchg
adc
push
int3
add
sbb
ja
pop
insb
pop
subb
xchg
lcall
addl
inc
test
pop
pop
cmpps
fbstp
ljmp
loopne
sbb
stc
in
dec
pop
jnp
add
cmp
mov
jne
stos
jge
cmpsl
and
orl
push
add
push
inc
mov
pop
mov
sub
fiadds
add
mov
out
mov
sbbb
add
mov
mov
cwtl
fs
in
inc
sub
fcomps
sarl
insl
fsts
or
push
scas
loop
fisubs
sbbb
add
or
out
fcomi
mov
stos
popa
xchg
stos
outsb
setae
mov
mov
xchg
push
mov
dec
sbb
shrb
push
jnp
adc
es
dec
dec
xlat
mov
test
outsb
xchg
mov
push
add
daa
ljmp
or
popa
fld
or
mov
rclb
aaa
add
das
fidivrs
inc
xchg
repz
pushf
mov
cmp
les
mov
sbb
shll
jns
and
add
mov
inc
inc
add
movsl
ss
imul
mov
cs
or
pop
pop
mov
inc
mov
repz
adc
call
pop
mov
jp
filds
es
jg
xor
insb
cld
call
lret
mov
xor
shrb
mov
or
mov
xlat
lock
dec
push
mov
push
and
mov
mov
gs
fldt
push
pop
or
lcall
sti
fstpt
hlt
jle
or
push
jbe
insl
add
cmp
ds
ljmp
sbb
sahf
fildl
jo
mov
add
and
loopne
and
popa
sbb
add
outsl
addr16
push
inc
enter
subl
mov
cmc
jo
scas
fmuls
ret
or
mov
iret
jne
jmp
fadds
add
mov
leave
mov
pop
les
scas
loop
pop
push
push
gs
cmp
clc
es
fstl
dec
or
jbe
jmp
xor
sti
xor
mov
lret
adc
dec
inc
movsl
push
enter
hlt
add
in
adc
cwtl
jmp
lock
dec
cli
notl
fidivl
pop
pop
pop
add
je
fcoml
stos
add
add
cmp
or
fstp
and
iret
or
sub
cmpsl
mov
and
adc
idivb
mov
xor
mov
fnstenv
cmovs
add
incb
roll
adc
cwtl
out
dec
filds
jg
pop
lods
clc
mov
sub
pop
mov
jg
adc
scas
cmp
cmp
pop
add
ja,pt
popf
pop
lock
daa
xchg
push
dec
pusha
dec
pop
adc
popf
add
add
adc
test
out
jecxz
xor
nop
fiadds
testb
movswl
popf
iret
das
cmpsb
inc
mov
dec
out
jbe
or
cmp
xchg
fcomp
push
add
sbb
mov
ficoml
les
pushl
test
mov
inc
test
add
pop
mov
push
movsl
aam
dec
push
dec
or
mov
cmpsb
pusha
mov
sbb
pop
push
aas
stos
das
adc
rorb
fstl
sub
cmp
xor
mov
inc
lret
iret
das
out
jl
push
or
or
xlat
mov
xor
stc
jbe
add
xor
incb
lea
fisubrs
mull
pushf
dec
out
xchg
xchg
dec
lods
add
sub
push
cli
mov
sub
add
adc
mov
imul
les
lret
or
mov
enter
rolb
cmp
movsl
sub
shrb
jae
mov
lcall
mov
movnti
mov
stos
cmp
xchg
cmp
xorb
fcmove
popf
or
lea
mov
fidivrs
and
enter
pop
mov
mov
pop
xor
add
pop
mov
sbb
cwtl
stc
rcl
adc
mov
cmpsl
outsb
loopne
pop
mov
and
adc
movsl
bound
inc
out
and
fdivl
push
cwtl
jl
orl
popa
roll
xorb
add
popf
mov
nop
in
mov
mov
popa
lea
xor
xor
adc
jmp
pop
cmp
pop
pop
mov
jbe
jmp
xor
dec
xchg
out
mov
mov
roll
lahf
in
cmp
xchg
push
aam
cmovnp
in
fwait
shll
std
mov
leave
jns
adc
or
adc
add
cli
and
push
push
pusha
pop
or
add
cmpsb
and
mov
add
je
scas
add
or
or
sarl
repz
xlat
add
jmp
mov
stos
xchg
pop
fmull
pop
mov
adc
roll
stos
out
add
mov
popa
mov
mov
loopne
inc
adc
or
inc
jl
repnz
push
or
xchg
sub
xor
or
sbb
jge
pop
xchg
push
orb
je
imul
mov
xor
shl
mov
add
add
leave
repnz
divl
xchg
aad
nop
movb
push
sbb
cmp
int
push
jg
push
les
punpckhdq
out
loope
rcrl
pop
pop
and
xorl
or
mov
std
inc
dec
loop
or
js
mov
sbb
inc
sbb
mov
sub
popf
mov
pop
js
xchg
jns
or
fucomp
cmp
cmpsb
add
shlb
imul
adc
icebp
inc
popa
and
pusha
int
mov
lea
and
inc
cld
mov
inc
xchg
call
add
mov
adc
dec
jae
add
ret
cmp
add
rorl
roll
pop
push
mov
push
iret
mov
ja
je
adc
leave
imul
add
or
les
adc
les
insl
icebp
bound
imul
push
lret
shlb
rorl
jbe
sbbl
pop
and
sbb
or
push
mov
cmp
cmc
adc
mov
xchg
lea
imul
mov
test
sbb
call
movsb
add
mov
push
or
cltd
inc
push
mov
shrl
and
mov
and
xchg
xlat
adc
sarl
out
push
jmp
in
hlt
test
mov
mov
nop
movsl
shl
push
cmp
jne
dec
inc
sub
aad
das
jmp
pop
dec
jo
and
cwtl
xlat
mov
mov
in
fsub
xchg
jo
cmc
mov
pop
pop
adc
pop
imul
loopne
add
test
mov
xchg
xchg
add
push
jo
test
imul
int
and
clc
xchg
mov
mull
or
or
mov
sub
fs
lret
int3
pop
cmpsb
xor
pop
loop
mov
and
inc
or
sarb
ljmp
adc
in
sub
insb
xchg
jmp
stc
nop
cmp
or
ss
and
or
ljmp
in
sub
xchg
mov
dec
dec
push
fbld
xlat
pop
and
call
lods
inc
adc
adc
xchg
jbe
ljmp
xchg
mov
fwait
cwtl
nop
mov
mov
rol
lcall
lods
pop
hlt
push
loop
inc
fcompl
mov
pop
jmp
add
mov
or
add
adc
icebp
inc
icebp
stos
sub
mov
xchg
inc
or
mov
push
cmp
adc
popl
ds
lret
pop
mov
lods
mov
add
test
and
fsubrl
sub
popa
mov
pop
nop
mov
mov
stos
outsb
loope
push
movsl
add
pop
out
pop
add
sub
in
mov
or
das
orb
and
push
mov
xchg
mov
loop
jle
jmp
insl
out
mov
fwait
mov
add
pop
lock
adc
das
jne
add
push
and
push
xchg
push
dec
jg
push
pop
xlat
dec
test
sub
dec
mov
test
add
mov
and
sbb
sub
in
cmpsl
add
jbe
dec
mov
loopne
xchg
or
and
pop
add
add
subl
push
cwtl
or
lcall
lret
sbb
clc
incb
jo
movb
cld
mov
aaa
mov
fbstp
adc
pop
mov
daa
movsl
add
popa
scas
outsb
xor
rcrb
adc
pusha
sbb
fisttpll
lea
add
test
jecxz
dec
mov
cld
popf
loopne
sub
rorl
cs
clc
cmp
pop
das
sub
mov
popf
and
lds
stos
fisubs
iret
ljmp
pusha
fst
dec
xor
push
leave
fstpt
cmpsl
mov
add
dec
insb
repz
addr16
movsl
sub
clc
pop
jle
aam
lahf
dec
cltd
roll
stos
jp
mov
cmp
push
xchg
jmp
push
pusha
out
int
sub
xor
popa
outsl
xorl
faddl
sub
fnstsw
or
adc
mov
int
dec
adcb
xchg
inc
and
test
jmp
shrb
xor
lahf
add
jg
fisubrl
push
dec
add
mov
pop
pop
push
or
and
mov
xor
and
adcl
adc
enter
cld
dec
in
aad
jae
adc
adc
hlt
pop
movsl
pop
inc
mov
jg
movl
ficomps
rcrb
es
mov
mov
mov
fisubrs
ja
cwtl
rcll
pop
pop
jb
dec
stos
mov
std
jmp
rorl
add
xchg
sub
add
dec
aas
push
sub
add
mov
xchg
jmp
sbb
loopne
push
cmc
mov
pop
outsl
mov
mov
dec
movsb
add
rol
mov
sbb
shl
xor
stos
lock
and
xor
in
aas
stc
fbld
dec
fists
mov
mov
pop
pusha
push
cltd
xchg
cld
lods
xor
pop
leave
add
xchg
xor
pop
inc
and
shll
lock
movl
mov
int
sbb
pop
jbe
in
xchg
mov
das
sub
push
aaa
pmuludq
push
xor
lahf
mov
enter
cmp
ljmp
jns
imul
add
and
jnp
or
and
loope
or
fsubrl
dec
sbb
jp
add
fwait
jno
and
or
dec
mov
mov
jb
mov
mov
mov
cmpsb
cmc
sbb
push
cmp
ret
call
sbb
fdivrp
sbb
enter
mov
cmp
stc
das
add
popf
adc
mov
add
jno
or
mov
push
out
shll
pop
pop
nop
outsl
pop
add
in
mov
shlb
and
xor
cwtl
jmp
in
bound
add
nop
inc
push
xor
push
testb
dec
or
pop
add
xchg
or
add
lods
minps
jb
jnp
cmp
inc
jno
jl
dec
pop
pop
pop
and
xchg
push
rclb
shr
in
fs
inc
cmpsb
mov
mov
sbb
adc
add
mov
push
repz
add
xchg
sub
pop
stc
pusha
cmpsl
sbb
lret
pop
mov
jbe
test
orb
std
fs
and
mov
xchg
jle
lahf
das
jnp
pop
sbb
or
push
rorl
shrl
adc
jmp
and
aaa
push
movsl
ficomps
mov
cmp
xchg
outsb
inc
mov
push
mov
mov
xor
call
push
inc
test
adc
cltd
jo
adc
popa
adc
xor
pop
xchg
mov
adc
nop
das
gs
popf
shl
dec
cltd
inc
gs
std
pop
pushf
xor
add
mov
fldenv
push
into
xor
aad
and
pusha
jge
mov
xchg
mov
clc
cs
add
pop
jne
mov
push
cmc
mov
and
inc
and
push
shll
mov
jp
mov
mov
in
xchg
push
jl
mov
arpl
rclb
adc
inc
sub
xchg
cmp
xchg
pop
mov
xor
lahf
pop
mov
add
mov
push
mov
adc
inc
les
jmp
mov
mov
jmp
jl
xchg
jns
movsb
aas
and
and
adc
add
test
std
and
popa
jne
jo
jns
mov
divl
push
je
adc
sti
jnp
cmovp
mov
outsl
jae
std
add
push
jnp
push
dec
or
mov
call
mov
inc
adc
add
xchg
in
cs
aad
dec
into
les
dec
loopne
or
push
leave
jp
hlt
add
push
fs
push
or
stc
sbb
aam
inc
daa
add
sub
xor
adc
xchg
je
fnstenv
mov
or
aam
pop
dec
add
cmp
sub
sbb
bnd
push
je
imull
sbb
lahf
shll
mov
sti
in
mov
jne
sbb
out
jno
inc
lahf
test
sub
lock
jp
push
cmc
outsl
lea
ret
add
loope
fsts
add
pop
hlt
add
in
lret
sub
push
frstor
popf
add
adc
adc
push
flds
push
icebp
loop
sti
mov
in
das
push
addr16
fists
out
or
jae
sarb
push
rorb
xchg
int
outsl
lea
sub
and
push
push
pop
sub
sti
pop
pop
mov
movsl
je
imulb
das
adc
lods
sarl
push
sbb
add
jne
push
adc
aam
rcrb
push
pop
enter
adc
and
dec
mov
sbb
pushf
inc
cmp
loopne
and
fwait
divl
sbb
or
lods
int
or
or
leave
rclb
mov
ss
lahf
or
push
jno
test
and
push
pop
jo
mov
mov
inc
or
mov
inc
cmp
add
dec
scas
dec
jge
push
imul
mov
pusha
repnz
into
mov
and
xor
cmp
push
jno
dec
xlat
add
push
push
pop
test
idiv
loop
loope
mov
pop
insb
or
mov
mov
cmc
jmp
dec
aaa
mov
sbb
sbbb
jmp
das
cmovle
add
push
push
pop
dec
push
push
out
popf
sub
imul
inc
or
arpl
dec
and
mov
add
mov
shll
add
fwait
mov
or
push
and
lahf
bound
mov
nop
sub
pop
test
shll
cmpsb
repnz
in
add
push
es
nop
xchg
int3
out
dec
pop
mov
pop
rolb
sbb
dec
es
add
fcoml
mov
out
or
mov
pop
sub
inc
call
xlat
mulb
leave
sarb
lea
fcoml
xchg
cmp
cltd
cli
add
mov
test
cmp
repz
rclb
push
jmp
pop
mov
ja
mov
popf
mov
cli
xchg
push
push
inc
fidivrs
test
ja
pop
cmp
adc
test
mov
loope
stos
pop
xchg
stos
add
dec
cmp
jl
adc
jecxz
mov
pop
push
add
adc
jbe
add
fildl
cli
xlat
lret
dec
dec
mov
add
push
add
ja
int
add
or
je
dec
popf
fstl
lret
popa
mov
lea
push
adc
cltd
xor
das
sub
mov
add
cmc
xor
xor
imull
sub
out
sbb
push
sbb
push
nop
add
cli
jp
add
sbb
mov
mov
mov
mov
fs
cwtl
loopne
mov
xor
das
cld
out
sti
push
add
js
test
in
popa
daa
sub
add
fstps
mov
in
dec
push
push
dec
xchg
pop
sub
rcll
xchg
pop
or
sub
xchg
xor
mov
adc
pop
sub
das
out
adc
notl
add
sbb
shlb
movsb
jo
ret
jecxz
test
int3
mov
cli
adc
sahf
pop
jae
cmp
adc
push
js
orb
scas
xchg
pop
addr16
sar
add
xor
sbb
leave
xor
les
pop
sub
jg
push
mov
add
cmp
push
pop
lret
mov
lock
in
cs
fists
enter
push
outsb
daa
repz
ret
xor
add
lea
add
fistps
sub
movsb
mov
dec
push
cmp
sti
push
aad
adc
add
push
idivl
cmp
cwtl
fisubl
add
push
popa
xchg
add
cld
cmp
or
sub
fcoml
push
daa
xchg
mov
js
push
cld
fisubs
add
orb
ret
and
rorb
sbb
pop
out
mov
imull
rclw
jmp
pop
sbb
sbbb
je
test
mov
scas
jp
movsl
mov
xchg
loopne
sbb
shrl
dec
push
loope
sbb
lods
cmp
mov
jecxz
lcall
pushf
adc
sub
mov
sub
jae
rcl
cmp
cmp
cld
mov
les
lods
out
mov
std
and
xorb
test
mov
aaa
mov
pushf
icebp
nop
adc
mov
pop
adc
mov
dec
lret
fwait
pop
movsl
outsw
pop
xor
test
mov
or
pop
inc
jb
xchg
jecxz
xlat
fldt
pop
mov
add
mov
mov
sub
inc
aam
fldt
popa
add
pop
push
out
pop
pop
push
mov
jae
xchg
stos
jnp
mov
leave
daa
in
and
add
mov
sahf
xchg
cmpsb
mov
push
push
cld
pusha
pop
ljmp
decb
ds
lahf
aad
and
roll
inc
or
repnz
mov
mov
sub
test
adcb
pop
xchg
add
lahf
cmp
mov
in
mov
mov
dec
jne
add
mov
cmp
or
rcrb
ja
ss
repz
sub
jmp
push
mov
loopne
push
jns
pop
popa
mov
stos
and
sub
mov
push
xchg
jp
mov
add
sbb
inc
daa
mov
push
cmp
test
pop
in
cmp
imul
insl
xchg
rclb
sbb
ljmp
pop
loopne
mov
mov
les
call
cmpl
add
mov
mov
scas
inc
cwtl
fnclex
sub
dec
pusha
loopne
fwait
or
push
adc
imul
mov
in
das
mov
and
push
or
pop
sub
add
stc
mov
dec
fadds
xor
sub
cld
sub
inc
jmp
xchg
adc
outsb
dec
jne
call
loopne
cld
rcll
pushf
testl
in
xor
or
fs
inc
mov
das
jmp
popf
add
add
imul
ss
jne
mov
fsts
mov
sub
popa
ss
cld
lahf
mov
das
inc
and
sub
and
mov
pop
in
sarb
xchg
dec
mov
adc
scas
sub
mov
cmp
inc
sbb
call
inc
mov
das
adcl
repz
jge
xor
dec
adcb
xor
xor
fiaddl
mov
lods
sub
jb
pop
inc
leave
mov
in
or
nop
push
and
sbb
xchg
clc
pop
dec
jp
cld
mov
or
bound
cmp
jl
mov
sbb
pop
xor
cltd
enter
repz
outsl
mov
xor
jbe
repz
push
repnz
mov
faddl
jbe
movsb
mov
push
mov
mov
mov
adc
daa
sbb
pop
cmpsw
jge
cmc
add
or
push
and
outsl
icebp
and
outsb
xchg
and
ljmp
fisttpll
repnz
lahf
loop
and
jo
add
cmp
cmp
push
and
mov
xchg
pop
mov
call
std
mov
xor
popa
xchg
mov
add
add
fdivs
in
and
xchg
mov
shll
push
call
ljmp
mov
fs
add
push
sarb
dec
jb
ss
enter
mov
stos
sbb
push
outsb
xor
adc
mov
and
and
add
shrl
cmp
pop
add
xlat
cmp
pop
xchg
rcrl
andb
xchg
dec
adc
insl
push
dec
call
nop
out
loopne
pop
int
cltd
sti
and
ljmp
mov
jno
add
ret
gs
adc
shll
jp
fdivl
push
gs
xchg
or
movsl
andb
add
aaa
ja
and
mov
fstpt
je
in
jns
pop
jbe
js
pop
jb
push
cld
dec
and
call
repnz
dec
mov
pusha
push
push
xor
push
pop
addr16
pop
push
cli
lods
sbb
or
or
jle
das
outsl
call
push
je
and
sbb
mov
or
mov
add
arpl
js
dec
jmp
xor
je
push
push
or
add
pop
or
cmc
into
outsb
inc
std
cmp
and
add
pusha
cmpsb
add
lds
outsb
mov
in
or
adc
lahf
outsb
mov
andl
push
mov
std
faddl
push
xor
mov
add
cmpsl
fidivs
push
sub
cmp
mov
cmp
push
inc
jg
add
loope
out
mov
pop
jecxz
cwtl
shll
sub
popf
or
adc
pop
pop
cld
pop
adc
jo
in
dec
cwtl
cmpsl
add
js,pt
sbb
subl
fimuls
adc
push
lret
aaa
fwait
subb
push
call
mov
pop
push
add
push
lods
adcb
pop
dec
ficoms
addl
out
mov
popf
dec
leave
xchg
ds
imul
jp
or
mov
decb
lds
jns
dec
leave
add
cltd
hlt
add
add
or
in
jo
sahf
popf
leave
daa
push
test
sahf
repz
sahf
cld
stos
test
call
cli
fdivrl
leave
nop
fsubrl
scas
incl
xor
sbb
and
test
pop
xchg
lcall
xchg
mov
xchg
std
add
mov
jbe
subl
xchg
jae
jo
or
mov
adc
xor
pop
sbb
push
add
je
pop
cmc
mov
cmc
das
jne
mov
mov
dec
and
mov
dec
jp
and
lods
xor
add
xor
sbb
imul
jne
test
std
dec
or
pop
inc
aam
in
rolb
cmpsb
or
shll
movsb
add
rcr
jae
mov
pushf
add
arpl
jg
lods
sbb
out
pusha
push
popf
popa
sbb
xchg
add
loop
les
sbb
in
das
mov
fnstcw
mov
test
xchg
push
mov
xlat
sbbl
repnz
das
sbb
xorb
ja
xchg
jmp
dec
and
adc
repz
sub
addr16
adc
ljmp
or
in
lock
and
xor
mov
adc
cmp
push
adc
out
mov
sbb
cld
ds
xchg
sub
mov
popa
ljmp
push
repnz
loopne
xor
sbbl
xlat
pusha
clc
push
bound
inc
stos
add
pop
ftst
and
ds
iret
ljmpw
rcrl
or
xchg
leave
aad
xor
stos
pop
jnp
das
jl
and
loopne
int3
pop
cmp
jno
jne
xchg
adc
popa
push
repz
ret
and
and
inc
adcb
cmpsb
je
mov
sub
adc
lcall
mov
lea
inc
shll
cmp
mov
clc
dec
inc
bound
xor
jp
jo
sub
and
jle
xchg
fimuls
or
testb
mov
mov
add
out
push
mov
pop
loopne,pn
gs
add
dec
sub
adc
sub
fwait
mov
jmp
loop
sub
sub
jmp
inc
mov
pop
cmpsl
mov
xchg
add
xchg
cwtl
repnz
add
stos
hlt
push
cs
push
clc
jbe
mov
xchg
add
xorb
lods
or
cmp
sub
cmp
jl
mov
add
adc
xor
rcr
mov
nop
jno
fs
cmp
int3
or
and
add
int3
inc
xor
aaa
add
fs
add
cmp
jne
int3
rorb
cmp
fcmovne
adc
stos
rdpmc
or
jecxz
mov
sbb
xor
das
in
mov
pop
fisttpll
lock
or
outsb
leave
fiaddl
aaa
test
js
jo
adc
jge
outsb
sub
add
pop
into
or
pop
pusha
xor
inc
or
cmpsl
xor
fimull
daa
adc
add
cmp
adc
pop
add
loope
mov
lea
xor
ret
mov
sti
or
sbb
add
andb
jp
cmp
data16
or
and
aas
imul
shl
scas
lahf
xchg
out
pop
leave
popf
or
dec
imul
movsl
outsl
push
inc
rorl
pushf
lea
inc
imul
mov
xchg
pop
mov
fs
in
cltd
mov
xor
enter
mov
loopne
sub
sbb
sbb
add
push
inc
sti
add
das
int3
bound
and
aaa
jo
sti
aas
sub
inc
test
ret
ljmp
mov
add
in
pop
mov
das
xchg
cmp
fsub
add
or
dec
fwait
aas
mov
pop
xchg
scas
add
mov
and
scas
or
ja
cmpsl
insb
mov
repnz
pop
xor
pop
mov
or
pop
pusha
std
test
pushf
ss
sbb
sbb
pop
xor
push
les
cmp
or
pop
out
fdivrs
mov
adc
andb
loopne
in
je
add
daa
ljmp
pop
push
sub
cli
and
mov
movsl
das
pop
nop
mov
scas
mov
es
inc
daa
add
loope
pop
cmpsb
jne
subl
add
add
in
add
in
ljmp
add
pop
push
hlt
movsl
mov
and
add
jns
and
mov
fdivrl
imul
loope
stos
icebp
insb
inc
shr
jns
aas
xor
inc
and
ss
and
xor
mov
scas
jno
test
add
add
xlat
ds
out
cmpsl
adc
and
and
add
sbb
sub
add
repz
lock
aad
lock
add
lods
xchg
ja
stos
ljmp
lods
stos
and
mov
daa
sbb
pop
jmp
sub
xor
and
inc
add
mov
push
stc
xorb
jnp
xor
imul
and
dec
leave
xchg
push
inc
fisttpl
lock
jo
xchg
je
stos
cmp
sbb
add
adc
loope
notb
pusha
cld
push
fldcw
shl
xor
add
sbb
mov
pop
sub
or
and
test
call
imul
scas
xchg
loopne
jl
roll
out
push
test
mov
mov
add
test
loope
and
mov
test
loop
lcall
in
xchg
cmp
in
pushf
mov
decl
lods
mov
adc
jmp
adc
add
cmpsl
shrl
push
inc
xor
pop
mull
push
mov
add
adc
popa
add
jnp
test
or
add
push
idivl
mov
cmp
add
pop
in
pop
mov
out
mov
jle,pt
add
nop
hlt
gs
cmp
pop
sarl
out
mov
add
fnstsw
and
testl
movsb
aad
cwtl
add
xor
leave
cltd
enter
outsb
mov
adc
push
add
lahf
ret
sbb
push
push
dec
xor
out
stos
sbb
in
lock
push
ret
xchg
adc
xor
mov
lret
lea
add
sub
adc
jne
add
movsb
iret
mov
popf
inc
sub
jnp
stos
inc
add
loope
mov
aam
adc
scas
jle
cld
add
js
int3
cwtl
je
pop
sbb
lret
int
mov
add
cmp
and
and
sahf
leave
test
dec
into
mov
push
lret
cmp
mov
outsl
push
std
gs
js
arpl
pop
jl
and
call
stc
in
mov
cmpsl
add
mov
sub
lret
cwtl
sbb
insb
cltd
inc
ja
mov
push
cmp
pmaxsw
sbb
add
jbe
out
pop
cmp
adc
test
and
ss
mov
call
lret
dec
xchg
mov
mov
push
add
cltd
mov
fstps
inc
imul
pop
add
mov
sub
xor
lods
cmp
inc
sbb
out
lds
add
sub
hlt
and
adc
rcrb
mov
add
bound
aad
sahf
sbb
and
into
mov
test
inc
aaa
adcb
adc
push
or
lea
xchg
cmp
xor
pop
xor
mov
out
clc
sbb
adc
xor
je
add
adc
aas
jecxz
cmp
lds
shrl
inc
shll
shll
repz
jo
shl
daa
pusha
subb
pop
ljmp
dec
jmp
cmp
adc
push
and
inc
mov
add
addl
push
aam
jae
imul
xchg
mov
mov
stos
sahf
aas
add
pop
sub
adc
add
faddl
cltd
lea
dec
pop
xor
cmp
lds
xchg
movsb
cmpsb
xchg
add
cmp
add
mov
ds
rorb
add
xchg
inc
or
test
mov
add
cmp
adc
cltd
in
push
add
push
insb
sub
sbb
xorb
xchg
outsl
add
dec
mov
sub
cmc
add
add
test
inc
std
lods
fistps
xor
add
and
rorb
xchg
mov
inc
push
mov
addr16
cmp
jmp
mov
and
outsl
mov
inc
pusha
pusha
inc
lea
add
sarl
xchg
inc
mov
or
xchg
popf
ret
mov
push
dec
sti
test
scas
lahf
add
mov
jle
add
into
cmp
add
xor
push
scas
aad
leave
adc
mov
fnsave
xchg
pusha
imul
sbb
orb
jb
sub
movsb
lret
pop
int
data16
popa
into
jbe
fsubs
mov
or
mov
mov
loope
push
push
outsb
shlb
mov
jne
inc
add
jmp
das
sti
add
jae
stos
outsl
xchg
mov
dec
push
push
adc
and
movsl
in
add
push
jns
mov
mov
dec
adc
adc
mov
add
orb
adc
cmpsl
testb
test
lock
lods
inc
push
scas
pop
cmp
cwtl
clc
popf
xlat
or
jo
pop
movsl
or
and
jge
mov
push
jo
add
outsl
add
addb
inc
in
mov
xchg
dec
cli
shr
jne
data16
pop
add
jbe
sarl
cmp
and
cmp
xor
xchg
ja
mov
push
jg
push
inc
add
decb
cs
pusha
movsw
inc
cld
push
push
sbbb
fwait
push
mov
or
cmc
mov
nop
sbb
push
push
add
addr16
pop
iret
icebp
dec
or
mov
add
sarb
jbe
add
repnz
stos
stos
nop
add
mov
aaa
inc
dec
add
or
lock
or
push
imul
je
lea
push
js
hlt
dec
push
sar
fiadds
loopne
mov
jmp
pop
and
insl
add
cmp
fnstsw
data16
add
lret
add
or
or
adc
add
stos
add
mov
insl
cmp
das
sarb
add
test
orb
aad
cmp
clc
mov
popa
add
cld
and
leave
sbb
out
jne
fiadds
xchg
sbb
subl
leave
cli
dec
mov
add
test
or
cwtl
orl
add
pop
mov
mov
mov
insb
sbb
insl
add
cmp
js
stos
testl
inc
sahf
xor
or
ret
add
mov
cli
shrl
add
daa
nop
adc
mov
jge
push
add
pop
movl
icebp
mov
jae
leave
psrlw
aaa
jo
insl
pop
sti
mov
enter
inc
pop
rolb
add
repnz
xchg
and
fwait
sbb
jbe
out
out
das
push
cmp
cs
rcrl
add
addl
pop
mov
mov
clc
cwtl
add
cmp
mov
add
aas
mov
or
inc
mov
dec
ret
arpl
adc
and
rorb
fwait
add
mov
out
xor
inc
mov
add
cmp
add
pop
out
mov
mov
fldt
pop
leave
or
gs
xchg
pop
add
cli
pop
mov
addr16
inc
push
adc
xchg
jmp
pop
and
orl
mov
xor
jge
test
aas
ret
push
test
cmpsl
add
mov
push
dec
in
and
add
fisubrs
arpl
jl
jae
and
pop
add
pop
cmpsb
or
mov
arpl
ret
mov
sbb
fidivrl
mov
mov
sbb
pop
sbb
inc
mov
sbb
rcr
xchg
or
jp
dec
out
adc
pusha
mov
jmp
imul
test
stos
ret
fwait
inc
push
mov
add
fmuls
xchg
ret
jle
mov
push
add
adc
xor
shl
out
nop
push
inc
pop
scas
push
fdivrl
aad
jmp
arpl
loopne
mov
mov
inc
addl
aam
lds
sub
cli
repnz
stc
es
mov
sahf
insl
or
cld
les
or
mov
and
int3
clc
loope
inc
sbb
mov
addb
add
mov
cvttps2pi
inc
add
add
mov
add
sub
insb
xlat
loopne
mov
dec
mov
add
mov
jne
sub
add
std
xchg
add
pop
shlb
add
jbe
imul
call
inc
popa
or
cmp
in
push
cld
cmp
jo
mov
not
push
cmp
ficoms
icebp
fidivl
iret
pop
cmp
pop
jno
add
jo
cmpsb
ja
add
sahf
in
dec
and
inc
lock
divb
mov
icebp
adc
sub
movsb
out
je
add
cmpsb
jle
jge
incb
jne
ret
jae
sbb
shl
xchg
shll
mov
or
movsb
das
add
dec
jg
std
add
jnp
dec
add
js
mov
ja
add
sub
lret
mov
xor
add
adc
ss
pop
add
mov
xchg
add
and
mov
fcoms
fldl
lds
outsb
mov
in
call
jl
lods
or
dec
pop
pusha
clc
inc
sti
ds
add
mov
mov
inc
andb
jp,pn
push
sbb
insb
inc
rcl
ljmp
sub
out
jg
cld
ret
add
sbb
cmpsl
mov
and
std
jno
in
add
inc
ja
das
push
out
nop
dec
add
pop
pop
std
cmp
add
mov
test
pop
js
fistps
sahf
dec
call
or
out
push
mov
inc
add
dec
jg
sbb
stos
mov
add
sub
in
mov
add
and
popa
lret
lock
mov
xchg
and
inc
add
xlat
rorb
add
mov
clc
lcall
xlat
push
add
pop
add
out
and
adc
cmpsl
cmp
cmp
out
push
in
pop
aam
mov
leave
insb
push
sti
push
dec
pushf
mov
loope
push
and
ljmp
sub
push
inc
pop
add
rolb
out
shl
in
lea
nop
xlat
add
mov
shrb
test
js
hlt
jle
ret
sub
inc
add
cld
pop
movsl
data16
xchg
add
fldl
add
aas
mov
dec
push
add
fiaddl
movsl
xor
dec
jg
cltd
popa
jnp
adc
mov
adc
repz
aaa
push
icebp
mov
push
in
mov
add
dec
shlb
mov
fdivr
sbb
mov
inc
dec
test
insb
filds
dec
stc
cld
jle
add
add
arpl
int3
add
xchg
roll
xor
xchg
mov
dec
jo
scas
jmp
jne
jl
cmc
shrb
cmp
or
sbb
and
xor
outsl
mov
xor
xor
sub
jb
dec
repz
add
push
sbb
push
jo
cmc
adc
sarl
cmpsb
test
faddp
dec
movsl
pop
dec
mov
sbb
mov
add
dec
and
aas
nop
hlt
jno
pop
xor
sub
pop
sbb
adc
mov
fdivrl
sub
andb
mov
add
sbb
add
push
jmp
jg
test
add
out
call
or
pop
xchg
sub
rolb
add
inc
dec
stc
mov
ficoms
or
xor
jb
add
popaw
in
pop
xchg
jl
add
call
jno
add
mov
add
xchg
shl
nop
and
push
xchg
ret
mov
dec
inc
test
jnp
xchg
fdivrl
jmp
negl
xor
add
add
push
or
sbb
add
rorb
sbb
rolb
fwait
cwtl
xlat
adc
or
stc
mov
js
add
mov
inc
add
addl
mov
push
iret
and
cmp
outsb
pop
dec
enter
rclb
clc
or
movb
sahf
or
jge
mov
mov
sbb
add
or
imul
jns
daa
add
sub
fcompl
xor
mov
sbb
or
stos
cli
je
mov
loope
lds
cmp
adc
orb
add
insb
add
and
mov
mov
mov
add
push
aas
inc
sarb
xor
iret
mov
add
clc
fnsave
cmp
dec
add
icebp
repz
ret
inc
loop
sub
cwtl
test
popf
add
loopne
fwait
andb
sub
mov
lret
sti
bound
xchg
inc
mov
fidivrs
aad
adc
add
cltd
notb
aas
in
hlt
dec
mov
fucomi
icebp
bnd
push
push
xchg
movl
add
aam
adc
inc
mov
test
inc
xchg
popa
and
jge
pop
popl
add
mov
mov
dec
push
test
daa
sbb
dec
mov
add
dec
test
pop
ret
dec
add
shl
or
fldcw
mov
jb
test
mov
xchg
dec
inc
hlt
std
sub
push
out
repnz
mov
fsubrs
inc
mov
sub
push
lods
sbb
std
into
fs
adc
adc
nop
add
ret
push
sub
cmp
dec
mov
insl
sub
mov
sub
jns
add
pop
jbe
imul
dec
lods
fildl
dec
add
nop
rorb
add
cmp
jb
cs
adc
ds
push
cmp
lods
adc
fildl
aad
outsb
bound
dec
xor
add
xor
jne
test
xor
mov
fwait
and
lods
inc
xchg
sahf
add
push
std
fstl
mov
popa
pop
popf
mov
shlb
sub
rcr
add
enter
sbb
jnp
add
mov
inc
stos
out
in
and
add
mov
or
cmpsb
fld
dec
out
sarl
inc
adc
rclb
insl
addb
sub
test
add
std
out
cmc
mov
hlt
push
push
mov
jne
movsb
xchg
pop
int
push
pop
nop
push
fmul
repz
lea
and
int3
call
xchg
jmp
ret
inc
popl
push
mov
cmp
adc
fdivrs
jg
pop
jb
cld
add
xchg
loopne
inc
mov
sub
mov
out
inc
mul
pop
jns
jne
cltd
mov
data16
jp
filds
gs
in
mov
add
aam
out
jae
add
arpl
mov
xor
add
fdivrs
add
and
add
pusha
pop
call
imul
add
cmpsb
loopne
movsb
cmp
dec
add
add
movsb
int3
testb
xchg
mov
jl
out
and
xchg
dec
adc
add
cmc
inc
shr
clc
iret
scas
dec
sbb
ficoms
loopne
pop
in
mov
out
add
popf
pop
mov
xchg
pop
pop
clc
jg
outsb
or
out
loope
out
add
jmp
add
push
test
repnz
pop
add
pop
add
in
or
mov
rcrl
popl
mov
or
or
dec
add
adc
jbe
pop
enter
jae
pusha
jb
test
add
in
or
xor
add
or
or
adc
mov
pop
add
das
clc
mov
push
add
nop
mov
lea
add
xchg
das
cmp
or
inc
inc
dec
hlt
in
fdivr
shlb
and
xor
xchg
inc
pop
ds
add
jno
jns
add
out
adcb
repnz
inc
mov
sbb
xchg
sbb
mov
scas
sub
pop
xchg
ljmp
xchg
pcmpeqb
in
add
loop
xchg
lock
lods
add
jle
sub
enter
repnz
in
std
das
push
lret
add
aas
xor
imul
dec
add
push
pandn
cmp
orb
adc
mov
jl
push
mov
add
rolb
scas
jbe
push
pop
repz
stc
inc
test
lea
cmc
ds
bound
cmp
add
lea
pop
or
jmp
cltd
xor
adc
rol
cmp
cli
add
cmp
scas
popf
xchg
add
inc
cmpb
cmp
mov
inc
lcall
adc
pop
mov
pop
arpl
cmp
subb
popf
in
loope
in
jp
push
orb
cmpsb
pop
shlb
xorb
test
and
imul
lret
push
cmp
enter
sbb
call
lahf
xchg
mov
lods
hlt
daa
jns
in
push
lret
adc
sbb
jp
mov
cmp
scas
pop
pushf
inc
push
add
aad
subb
dec
push
sub
add
push
into
rolb
ja
cmpsb
mov
sub
jo
or
add
jp
cli
pop
mov
mov
add
jl
adc
sbb
pop
add
sti
mov
mov
push
adc
mov
hlt
inc
add
adc
push
faddl
rolb
push
cmp
rorb
jecxz
repz
xor
cltd
fcoml
mov
sbb
and
stos
add
pop
hlt
cs
add
and
ds
mov
add
add
adc
fwait
push
add
add
clc
loopne
xchg
jo
outsb
movaps
fsubr
push
int
sbb
jmp
sbb
mov
add
pop
cmp
jno
adc
push
into
xor
cmp
mov
sahf
xchg
add
xor
movsl
jnp
add
mov
add
pop
push
sub
mov
adc
lock
lods
adc
mov
cwtl
cltd
xor
cld
and
sahf
and
dec
jp
mov
add
insb
pop
push
sbb
rol
mov
sub
aas
adc
cwtl
sub
addr16
in
in
push
mov
sti
mov
push
push
add
cmp
std
inc
mov
xchg
es
fwait
xchg
cmp
pop
add
shlw
pusha
pop
fstpt
nop
fbstp
je
pop
testl
iret
jb
add
sbb
add
out
add
sub
clc
mov
fbstp
sbb
lods
nop
imulb
outsb
add
and
scas
mov
sub
pop
fnstenv
push
cmp
rcll
adc
shlb
push
movsb
add
add
sub
xchg
test
xchg
mov
in
lock
xor
sbb
adc
shrb
or
sub
sbb
or
mov
push
jge
repnz
sbb
addb
loop
lods
shr
sahf
out
or
subb
and
xchg
cmp
cltd
adc
inc
popa
lret
cmp
in
pop
fidivl
push
int3
add
es
adc
daa
pusha
push
aas
addb
or
or
add
adc
xchg
xchg
add
fistpl
fs
aaa
sbb
push
sarl
push
mov
add
add
add
jae
mov
jae
add
jmp
mov
mov
xor
dec
js
pop
mov
sbb
popw
hlt
or
mov
mov
add
ja
add
mov
leave
jnp
push
testb
mov
push
mov
cmp
enter
std
imul
mov
outsb
cmp
test
loopne
ffree
cmp
pop
sub
daa
out
fadds
push
subl
or
daa
out
or
leave
adc
fdivrl
add
xor
lods
lock
xor
in
push
andb
add
stos
jmp
std
pusha
mov
sub
cwtl
cmp
fistps
mul
mov
mov
xchg
leave
fisttps
add
add
dec
xchg
movsl
pusha
adc
aam
and
add
lahf
cmp
or
mov
add
rcrl
scas
add
mov
fsubrp
mov
and
sub
lods
sub
addl
pop
pop
mov
mov
jns
sbb
jp
sub
loopne
mov
inc
and
xor
scas
pusha
cld
xor
arpl
loop
dec
mov
inc
fnsave
sti
fcompl
mov
fldcw
pusha
andb
lcall
pusha
pop
inc
stos
sbb
cwtl
pop
rcrb
sbb
or
pusha
imul
xor
xchg
lea
add
sub
fstps
or
in
add
rorl
not
daa
pop
js
pop
add
inc
roll
repnz
fsubrs
adc
inc
jecxz
ret
cs
push
test
sbb
inc
sahf
shlb
dec
cmc
loope
pusha
popl
scas
neg
idivb
add
aam
ja
sbb
mov
mov
lds
push
pusha
fstpl
lods
sub
test
dec
and
add
sbb
pop
mov
subl
insl
cli
fsub
cmp
mov
add
ss
adc
mov
stos
popf
xor
xor
sub
subb
iret
test
push
mov
fists
jl
call
xor
adc
add
dec
jge
add
jl
rorl
add
adc
mov
fmull
nop
adc
test
aas
adc
add
lds
stc
movsl
or
jns
scas
jl
add
add
dec
adc
push
sti
and
int
xor
xchg
fcoml
mov
sbb
adc
mov
cmp
adc
das
test
sub
mov
outsb
flds
jno
push
in
or
mov
push
test
sub
or
xor
push
clc
or
test
cmp
pusha
sbb
add
adc
dec
sub
jp
pop
cmpl
push
clc
mov
push
andl
js
sbb
repz
aaa
mov
pop
add
cmpsl
inc
repnz
jnp
xor
jg
sbb
adc
rorb
jae
int
xor
cmp
xchg
adc
cmp
lods
sbb
pop
pop
mov
imul
inc
in
andl
lahf
push
dec
dec
xchg
xor
inc
xchg
add
adc
sarb
xor
adc
jge
popa
or
nop
push
pusha
jns
in
mov
dec
pop
mov
out
adc
cmp
mov
imul
add
adc
ja
jg
inc
in
lahf
add
mov
add
test
xchg
cmp
xor
mov
cwtl
jns
clc
rcl
psubsw
mov
out
sbb
push
add
mov
repnz
mov
xor
cwtl
data16
out
sbb
and
out
mov
lret
xor
shrb
jmp
and
jge
pop
add
xchg
sbb
push
xchg
adcb
or
push
test
sbb
int
inc
mov
lret
mov
inc
jb
xchg
pop
jge
cmp
adc
sub
fwait
bound
fsincos
xchg
femms
jmp
inc
shll
add
stos
daa
push
rcl
das
cwtl
or
adc
xorl
shlb
sub
inc
data16
fcomps
enter
push
jmp
dec
jno
cs
add
push
insb
sub
dec
and
dec
fbstp
mov
xor
cmc
add
rcrl
loop
and
dec
and
inc
sbb
dec
mov
ds
and
pop
shrb
out
or
xor
and
dec
push
xchg
push
add
fwait
xor
add
int3
out
dec
push
cs
inc
nop
stos
sbb
xor
jmp
testl
inc
call
loope
ja
push
and
push
sti
fld
xor
int3
loop
pop
stos
push
jmp
sbb
cmc
repz
shrl
inc
push
mov
push
push
dec
jg
push
pop
lcall
sbb
sbb
or
and
add
mov
cmpl
hlt
daa
les
sahf
sbbb
adc
in
cli
andl
cmp
outsl
cmpb
sub
loopne
in
pusha
aad
bound
aam
pop
je
mov
push
lods
bound
sub
jne
jae
sbb
add
mov
int
push
call
and
push
dec
jae
in
mov
arpl
mov
jns
add
loope
je
mov
test
dec
mov
jmp
into
dec
push
mov
xchg
or
push
pop
pop
and
push
add
repz
or
cmpsb
mov
cli
mov
je
adc
push
mov
push
shr
lds
sbb
cmpsb
int
dec
dec
adc
adc
repz
mov
loope
imull
add
ret
mov
fcoms
sub
popl
mov
cmp
adc
xchg
adc
dec
je
int3
or
and
add
xchg
xchg
sbb
inc
add
cltd
lea
gs
add
jo
and
cmp
outsb
clc
mov
jl
mov
rclb
sub
push
dec
mov
adc
enter
es
mov
xor
xchg
aam
cmp
pusha
and
dec
inc
pop
mov
xchg
add
fmuls
mov
test
push
jns
xor
add
push
push
jl
pop
popa
xlat
push
inc
dec
inc
fsub
and
xchg
leave
in
inc
sbbb
repz
sbb
or
aam
cmp
mov
sbb
adc
and
test
jo
sub
icebp
fstp
aad
add
movsb
cmpl
std
push
fwait
loop
mov
lret
cmp
hlt
mov
adc
movsb
adc
and
pushf
aas
push
cwtl
clc
jne
mov
ret
push
sub
mov
or
add
int
mov
mov
dec
jl
roll
adc
jmp
sbbl
stos
pop
adc
and
mov
jl
and
inc
pusha
push
xor
jnp
and
ud2
aaa
call
add
nop
faddl
add
or
xor
adc
add
call
std
adc
stos
jb
push
in
enter
add
shl
scas
fstpl
dec
or
adc
or
xchg
das
adc
into
sbb
sbb
push
or
and
or
and
add
adc
cs
pop
adc
add
sub
sbb
imul
repz
mov
mov
adc
loopne
and
mov
mov
dec
adc
push
adc
jge
adc
push
cmpsl
xor
push
push
pop
mov
sub
inc
xor
fstpl
cmpb
cmp
hlt
in
pusha
fildl
adc
pop
jl
dec
fstps
mov
jno
push
add
andps
fbld
in
pop
sbb
inc
adc
add
adc
xor
add
int
mov
in
add
xor
dec
iret
ds
add
adc
je
imulb
and
push
sub
sub
in
shlb
repnz
xchg
mov
mov
inc
scas
push
repz
pop
pop
sahf
mov
test
xor
mov
adcb
ret
mov
mov
loope
jnp
push
mov
cmp
lds
scas
sbbb
jmp
mov
jmp
sub
jnp
jns
add
leave
loope
sub
fnstcw
into
les
adc
test
sub
dec
mov
and
sbb
adc
add
pop
jl
cmc
into
stos
pop
and
push
cs
je
test
push
aas
push
adc
shl
xor
in
xor
mov
adc
xchg
mov
push
testb
push
bound
mov
in
jo
roll
enter
stos
or
lcall
mov
mov
cli
inc
mov
xchg
add
enter
adcb
jg
inc
xchg
adc
and
std
inc
mov
jl
dec
or
inc
test
dec
or
iret
mov
test
add
sti
mov
xchg
inc
dec
or
stos
and
mov
imul
cs
fildll
add
adc
mov
add
jb
andb
cltd
xchg
jl
sar
scas
push
aam
out
mov
and
popa
add
repnz
add
pop
add
xor
lock
int3
fadds
dec
rcll
shl
ret
add
push
scas
xor
or
pop
loope
aam
sarb
and
xlat
and
subb
test
push
pop
fnstenv
mov
cltd
nop
insb
stc
negb
loopne
fistpll
ds
cmp
add
pause
xchg
repnz
in
cmpsl
popf
xor
inc
mov
subl
and
fdivrl
call
jo
mov
xchg
outsb
add
dec
lret
add
xchg
add
jb
mov
push
add
adc
add
and
push
dec
jno
adc
cld
outsl
and
or
add
jg
push
pop
int3
icebp
adc
lods
decb
popa
ficomps
cs
add
dec
nop
sbb
leave
pop
add
push
push
fistps
pop
cmp
xor
sub
test
test
lcall
movb
or
push
addb
out
xchg
sub
call
adc
xchg
or
mov
add
dec
clc
xchg
sahf
and
cld
mov
sub
cmp
addb
outsb
add
testb
dec
or
jge
xchg
lret
xor
add
repz
cmp
mov
mov
popf
adc
sbb
and
cs
mov
call
cld
jg
mov
inc
add
sub
push
je
mov
test
dec
jge
sbb
push
mov
add
sub
pop
in
xchg
mov
add
lea
pop
mov
pop
fistl
addr16
clc
sub
xor
push
mov
or
push
and
nop
in
add
or
add
fisubl
add
and
adcl
jle
or
orl
out
add
mov
into
aad
jae
cwtl
adc
add
sub
push
dec
push
adc
jge
je
add
or
jne
adc
push
add
in
jmp
cmp
xor
sarb
pop
orb
xlat
cmc
cmp
add
cmp
fdiv
andb
pop
inc
mov
mov
int
or
orl
and
das
add
cli
rorb
xlat
lcall
fsubrl
flds
fcomp
mov
cmpsl
add
sbb
int3
dec
imul
dec
inc
popf
inc
daa
lahf
inc
popa
clc
mov
sahf
pop
cltd
mov
sbb
add
enter
add
xor
add
inc
in
jmp
mov
push
cld
out
pop
lods
add
fiadds
cmpsb
scas
and
xchg
pop
push
sbb
fcomps
gs
movsb
pop
add
imull
test
add
in
aaa
shrl
subb
out
jns
aas
outsb
push
lcall
jmp
cwtl
push
add
add
popa
fwait
lsl
add
sbb
add
dec
inc
mov
mov
inc
xor
cld
sub
aaa
insl
add
mov
out
nop
pop
add
mov
nop
enter
sbb
hlt
ljmp
add
mov
ret
adc
sbbl
andb
add
xchg
add
cmp
lret
add
cmc
lret
ret
lea
cmp
jp
rclb
hlt
test
dec
iret
jecxz
jb
push
adc
sbb
nop
push
add
push
gs
test
or
subl
test
cmpsb
fmull
add
xor
cwtl
mov
ss
add
test
cli
cmp
mov
stos
and
mov
in
pushf
add
push
dec
cmp
sbb
jp
push
cmpsl
xchg
aam
mov
je
test
ret
add
repz
dec
aad
pop
jb
sub
mov
cld
jmp
push
call
mov
xchg
sti
dec
sbb
inc
jg
xchg
xchg
inc
pop
out
lret
mov
mov
dec
jmp
lock
enter
sub
jge
add
and
sahf
xor
inc
pop
push
sub
add
add
push
sub
insl
in
xchg
or
sbb
add
scas
lret
add
xor
arpl
lds
mov
mov
push
movsl
add
rolb
and
xlat
faddl
fdivr
loop
fstp
mov
and
sub
das
mov
mov
cmc
adc
mov
and
adc
inc
faddl
push
repz
add
jae
cwtl
add
mov
inc
fadds
test
test
cs
bound
cmp
prefetcht1
mov
rorl
ds
inc
test
cmp
xchg
inc
rorb
rolb
repz
daa
in
sub
pop
or
enter
push
xor
xor
pusha
adc
mov
into
je
ror
icebp
or
enter
es
mov
jno
mov
sbb
shlb
outsb
or
clc
into
cmp
je
nop
add
stos
cmpsl
mov
fs
jno
cmp
jns
add
pop
push
jle
shlb
add
mov
and
cs
dec
dec
cmp
fisttps
push
push
sub
add
mov
or
pusha
movsl
pop
aas
push
mov
stc
add
jne
fcomps
into
jb
xor
push
lcall
inc
decb
pop
repz
orb
popf
jns
mov
mov
cli
mov
or
jnp
sbbl
adc
enter
sub
xchg
clc
add
push
leave
xor
mov
test
loopne
sbb
in
icebp
in
pop
fidivrl
shlb
insl
xchg
addb
mov
dec
movsb
dec
test
push
cmp
sbb
inc
les
lret
xor
add
test
std
add
jnp
pusha
mov
rolb
sahf
push
or
hlt
mov
daa
add
insb
cmc
test
add
cmp
js
mov
les
ljmp
into
mov
add
fstps
add
add
fs
in
cli
or
push
in
daa
add
jnp
adc
mov
out
add
aas
rorb
gs
or
or
inc
mov
or
or
cmp
lds
mov
sub
outsb
out
jp
sub
rorb
add
out
addr16
dec
sbb
mov
inc
ficomps
lds
rcl
jg
in
roll
inc
addb
lock
mov
add
cltd
mov
test
lcall
push
mov
sbb
dec
adc
shll
data16
in
sarb
out
push
add
push
dec
hlt
popf
lods
push
jge
pop
add
xor
dec
mov
cmp
jnp
loopne
push
push
mov
pop
std
mov
pop
pushl
add
fldl
inc
je
pop
cmp
pop
sar
xlat
push
add
pop
jnp
add
dec
cwtl
mov
xchg
mov
lret
mov
sbb
and
push
shrl
mov
jb
inc
repz
rclb
jae
pusha
rolb
add
xchg
add
pop
xchg
fiaddl
aas
add
shl
nop
cmp
mov
orl
add
xor
jae
mov
dec
add
cmp
icebp
xchg
mov
aaa
push
push
pop
add
or
lret
sbb
enter
sub
das
jmp
add
aam
jg
sti
cmpb
rorl
out
pop
add
pushf
push
fisttpll
repnz
dec
sub
mov
dec
cmp
sub
and
rclb
nop
jo
inc
adc
aas
lods
leave
or
push
pop
add
jmp
jl
loopne
js
dec
lds
sbb
repz
and
adc
add
jmp
add
test
movsl
repnz
add
rorb
lret
xlat
fistpl
cmp
movsl
jmp
mov
sub
in
pusha
add
stos
int
and
xchg
dec
add
clc
jmp
sub
add
pusha
xor
ret
bound
jo
sahf
inc
jae
xchg
fistps
arpl
push
dec
cmp
addr16
test
jecxz
cli
sub
dec
flds
xchg
in
jecxz
testb
jo
test
add
or
add
test
jle
loope
popa
add
sbb
adc
xor
push
add
xor
popf
xchg
add
sub
add
xchg
inc
nop
push
mov
pop
outsb
insb
pop
movsl
mov
push
mov
lahf
clc
pop
movsb
add
cli
xlat
inc
cmp
jle
add
and
inc
or
cld
sub
lods
pop
lock
cmp
pushf
rolb
mov
adc
inc
sar
sbbb
pop
call
xor
sbb
arpl
mov
sub
push
loop
movl
shll
les
add
push
fsts
enter
sbb
or
add
in
test
dec
stc
pop
and
xorb
sbb
test
jno
ds
jo
adc
pop
push
lods
push
pop
and
dec
fisubrl
sub
sub
je
lds
loop
xor
dec
add
mov
xchg
call
add
cltd
lcall
pusha
add
lea
xor
xchg
cwtl
inc
mov
roll
add
stc
push
xor
les
insb
add
je
fwait
sbb
inc
fdivp
in
mov
test
push
dec
fbstp
loop
or
add
ret
push
out
clc
xchg
sub
jmp
jb
add
cli
xor
pushf
mov
jb
sbb
cmp
add
and
add
inc
hlt
mov
mov
mov
out
mov
inc
in
dec
dec
add
aas
sbb
push
pop
xchg
mov
stos
pop
sbb
jbe
add
jne
test
inc
shl
push
js
jg
or
jp
sti
jno
mov
sub
inc
xor
mov
stc
and
add
test
xor
add
lahf
sbb
and
cltd
jno,pt
repnz
xor
lds
int
aad
mov
hlt
out
ror
or
aam
dec
lock
push
rol
push
xchg
sbbb
push
maxps
lret
jae
nop
js
cmp
and
inc
mov
and
mov
lahf
addb
push
cld
or
jle
jg
clc
imul
or
or
mov
push
out
stos
pusha
push
add
cmp
and
dec
subl
rolb
data16
jmp
and
sub
mov
push
xchg
dec
inc
imul
and
add
push
mov
jg
in
mov
outsb
dec
lock
arpl
adcl
mov
sar
mov
mov
dec
add
adc
in
xchg
sub
js
or
pop
sbb
iret
clc
add
mov
stos
add
lods
ret
add
js
or
add
dec
clc
mov
add
repnz
mov
adc
jo
xor
pop
test
shrb
add
push
das
shl
pop
cmp
imul
hlt
cli
xchg
and
inc
dec
add
dec
rcr
pop
shlb
add
dec
mov
jle
dec
lds
jo
cwtl
aaa
push
pusha
in
arpl
xor
mov
inc
ja
adc
sub
or
mov
in
cmp
hlt
adcl
mov
shlb
loopne
arpl
xchg
adc
jno
call
cmp
pop
push
sub
int3
je
dec
pop
add
cmp
add
mov
dec
mov
and
cmp
sub
adc
lds
mov
xchg
fdivrp
or
stos
dec
test
daa
xor
add
add
sahf
loopne
xchg
insb
cmp
or
in
dec
aas
insl
cld
add
repnz
add
add
aad
nop
add
mov
pop
je
scas
add
insb
jnp
jae
rolb
subl
mov
dec
popf
add
add
cmp
imull
andb
add
clc
add
add
ljmp
gs
arpl
jne
fiadds
jnp
notb
je
ds
dec
mov
popf
add
jp
add
add
mov
leave
pop
dec
add
negb
es
xorb
repnz
and
iret
sar
mov
adc
leave
add
test
andb
das
and
faddl
adc
mov
sbb
add
push
jae
pop
pop
aam
add
ffreep
mov
add
bnd
sbb
testb
or
mov
shlb
aaa
clc
cmpsb
ret
cmp
push
fmul
hlt
and
movb
push
xor
and
das
pop
insb
faddl
push
lea
lret
add
stc
dec
les
mov
push
lods
xchg
shll
mov
or
testl
sub
cmc
and
add
xchg
hlt
clc
add
jne
cld
xor
mov
sbb
call
dec
xor
and
repnz
fwait
subb
out
out
scas
std
add
testb
call
and
mov
add
les
pop
cmc
xorb
std
dec
jae
je
mov
push
aas
xchg
in
cs
mov
jp
cmp
in
add
pop
adc
xchg
mov
sub
clc
jno
adc
jle
test
and
aam
add
mov
add
sbb
adc
push
mov
lret
mov
stos
movsb
lock
movsl
add
insl
inc
xor
and
inc
jo
and
nop
test
aad
fdivr
sbb
jg
inc
push
cmp
rdpmc
es
popa
ss
addl
cwtl
cld
out
push
add
inc
dec
dec
movsl
fiaddl
and
in
dec
jo
adc
lods
out
add
int3
pop
sub
aam
pop
cwtl
or
sbbb
and
xchg
sbb
data16
pop
sbb
add
outsb
mov
incb
jmp
shl
xor
int3
mov
sbb
pusha
lods
adc
xor
loopne
icebp
add
sbbl
ret
mov
clc
xor
icebp
mov
cmpsl
adc
leave
loop
les
pop
xor
adc
cmp
adc
and
call
aad
mov
shlb
sub
in
add
cwtl
idiv
aaa
xchg
push
add
mov
xlat
test
add
iret
testb
xlat
jb
pop
xor
sub
imul
inc
lahf
add
xchg
subb
mov
filds
insb
pop
push
orb
movsb
add
in
pusha
fsubr
insb
nop
xor
jmp
movsb
jle
popa
hlt
pop
imulb
cwtl
sbb
ret
mov
adc
or
push
add
sbb
add
cmp
repz
cltd
lea
loop
add
sub
add
bnd
ss
pop
leave
inc
gs
jecxz
fdivp
test
cmp
dec
fldl
rcrl
cltd
outsb
mov
lret
add
dec
mov
cli
dec
add
fistpll
lahf
bound
aad
adc
cltd
cmpb
test
cli
mov
cs
adc
dec
mov
jl
shrb
push
adc
out
hlt
in
add
mov
sarb
jae
outsb
xchg
pop
mov
je
loopne
jge
or
pop
cli
adcb
xchg
fmulp
sbb
adc
push
shll
and
cmp
cld
and
call
mov
mov
lods
les
jns
add
movsb
movsl
jg
aad
mov
loop
adc
pusha
in
test
adc
adc
inc
push
and
jo
xor
aas
and
xchg
mov
mov
dec
shlb
dec
fsubs
es
mov
out
pop
je
add
lods
or
clc
cmp
push
jo
test
xor
js
or
add
push
call
sub
jo
add
jb
xchg
add
push
fidivrl
xor
pop
xchg
int3
aaa
mov
add
mov
lret
sub
cld
add
les
jle
add
stos
or
jo
lock
jmp
pop
nop
push
sub
dec
adc
fcmovb
dec
and
and
jmp
daa
fstpt
and
mov
cli
cs
or
fists
or
in
ret
in
scas
loop
bound
dec
sbbb
psllq
daa
mov
nop
jne
add
icebp
cs
movsb
outsb
push
int3
add
popa
fcomps
dec
jmp
enter
xor
inc
in
cmp
and
xorl
sti
xchg
pop
in
sbb
clc
xchg
adc
push
adc
xchg
inc
fcomp
add
into
xchg
pop
push
push
dec
mov
inc
cmp
stc
mov
or
ret
push
adc
aas
push
lret
jl
add
loopne
mov
mov
mov
inc
add
mov
add
push
dec
jp
add
pop
sub
pusha
adc
js
clc
cmp
add
push
hlt
push
xor
addr16
daa
divl
dec
stc
or
fistps
mov
out
aas
or
shll
movsb
cmp
cmp
insb
imul
jbe
or
lahf
dec
add
push
sub
test
pop
inc
pushf
lds
inc
sti
testb
cmp
enter
es
roll
push
ja
popa
add
xchg
dec
ljmp
call
inc
out
xor
negb
lods
into
enter
fistpl
adc
sbb
mov
add
and
cwtl
jg
movsb
test
sti
popa
jmp
xor
xchg
rorb
scas
dec
push
and
jecxz
add
lcall
pop
cmpsl
and
roll
pushf
mov
repnz
mov
mov
div
aas
add
mov
sbb
lock
lods
cmc
jmp
call
add
insl
dec
loopne
faddl
jle
and
insb
inc
outsb
pusha
add
cmp
sti
daa
jg
sbb
dec
inc
or
mov
add
mov
xchg
jp
adc
mov
add
sbb
sub
popa
les
adc
pushf
cmpsb
divb
repz
sbb
mov
sti
mov
es
mov
sub
int3
movsb
sub
push
lret
or
mov
add
test
jae
cltd
aam
adc
stos
mulb
stc
add
nop
clc
sbb
gs
out
sub
push
mov
shlb
fldl
sbb
add
arpl
jecxz
and
or
adc
icebp
insb
pop
addl
jnp
pop
lret
push
fistl
stc
ds
call
pop
and
add
xchg
ljmp
fwait
jmp
fidivrs
gs
scas
xchg
shl
dec
nop
and
jg
or
in
push
mov
pushf
addr16
scas
pushf
push
aas
imul
lahf
clc
add
push
add
add
xchg
xchg
or
xor
inc
dec
shrb
les
lss
or
xchg
and
jnp
scas
dec
and
push
iret
sbb
js
adc
dec
stos
add
jmp
inc
out
dec
out
and
fimull
repz
xor
addb
cmp
popa
add
stc
test
into
es
sbb
or
popf
push
mov
orb
mov
xor
mov
push
ss
add
xchg
add
xor
mov
jl
xchg
add
push
xchg
inc
ret
dec
sub
lods
loop
insl
cmp
pushl
inc
adc
xor
rolb
mov
mov
cmp
mov
add
inc
scas
add
andl
add
orl
sub
push
or
push
xor
loopne
rcll
movsl
fldcw
push
in
add
sbb
shll
cmp
sub
and
nop
loope
dec
cmp
js
jb
scas
inc
fs
and
cmp
pusha
std
xchg
sbb
incl
dec
mov
or
sub
scas
add
in
stos
mov
out
push
mov
mov
or
add
movl
rcl
jl
mov
in
jp
lahf
subl
dec
sbb
fisubrs
inc
or
test
imulb
subl
lock
insl
xchg
cld
mov
std
jno
stos
gs
ds
add
sbb
sub
lea
add
push
les
test
fwait
inc
mov
add
mov
push
sbb
imul
clc
jl
mov
push
jae
pop
mov
aaa
rorl
les
call
or
pusha
hlt
jl
les
pop
add
into
iret
and
data16
jmp
add
sti
add
xchg
dec
es
nop
or
sarl
add
adc
iret
push
repz
cli
adc
inc
push
test
cmpl
mov
add
add
es
cs
ret
jl
adc
add
and
cs
adc
add
data16
add
lock
test
push
out
jae
pusha
cmpsb
cwtl
nop
cmp
adcb
add
push
je
sub
js
lret
stos
fsubl
movl
inc
gs
mov
add
and
jno
jo
ljmp
inc
xchg
push
mov
and
arpl
push
sub
or
add
cmp
add
mov
dec
sbb
pusha
cli
subb
lock
popl
out
js
clc
pop
jno
out
add
mov
mov
cmpsl
cmc
mov
add
adc
cmp
addr16
rcr
mov
or
in
mov
cmp
add
dec
xchg
in
daa
push
ljmp
sar
or
and
mov
ret
mov
xchg
repz
popa
pusha
jb
aam
mov
jae
mov
add
test
outsb
add
push
cltd
ror
xchg
xor
shl
subl
mov
mulb
pop
fcomps
loopne
or
mov
add
lret
fprem1
dec
jo
add
jmp
xchg
ss
add
jnp,pn
and
je
nop
xor
inc
sub
inc
pop
loop
loopne
lahf
inc
out
xor
add
andl
pop
pop
cmp
pop
pusha
cmp
lcall
sti
lret
adc
in
mov
cmc
fwait
mov
jae
test
dec
inc
cmp
xchg
cmp
and
call
loopne
xchg
add
bound
pop
dec
push
xchg
sbb
inc
pop
mov
or
je,pt
jnp
cmp
sti
add
xchg
loop
das
inc
jno
add
jns
iret
add
jae
js
out
push
and
sbb
adc
pop
sarb
scas
mov
sti
jg
iret
lock
fdiv
cwtl
daa
cmp
mov
faddl
cmpb
sub
lods
push
mov
and
rolb
insb
jecxz
mov
jle
xor
sbbb
loopne
cmp
add
and
or
add
mov
mov
push
pop
add
in
test
xchg
and
jo
lahf
in
inc
fisttpll
mov
pop
in
mov
jmp
pop
ss
jb
sbb
sbb
lcall
in
inc
add
dec
fimull
frstor
push
add
mov
push
cmpsb
sbb
decb
test
mov
into
push
popa
dec
mov
into
sti
inc
xchg
dec
rcll
call
cwtl
and
daa
jge
pop
mov
inc
inc
xchg
dec
push
and
cwtl
sbb
in
xor
pop
inc
inc
add
mov
mov
aam
enter
jno
inc
stc
icebp
xchg
aaa
loopne
add
and
jmp
xchg
jo
outsl
and
jge
jnp
cmp
cmp
call
xor
add
scas
rcl
les
jnp
add
xlat
movsb
nop
add
mov
xor
insb
repnz
ds
fcomps
xlat
js
pop
add
pushf
add
add
push
out
mov
daa
es
sub
mov
addl
es
daa
push
add
addr16
shrb
inc
lods
aaa
or
jle
push
pushf
mov
in
call
add
jp
hlt
mov
popf
xchg
cld
adc
cmp
std
adc
jo
or
fidivrl
pop
adc
push
je
str
cld
rclb
out
inc
ret
xchg
lea
hlt
xor
add
mov
cmp
ficoms
pop
lret
adc
sub
test
inc
inc
lods
inc
fsubl
ds
inc
ljmp
xchg
fildl
cmp
ds
sbb
rorb
loope
pop
sbb
xchg
mov
push
imul
imul
jl
pusha
push
stc
cmp
cmp
out
les
loope
pop
scas
mov
adc
xor
push
lods
inc
add
add
clc
sbb
add
xor
dec
jo
sbb
mov
sub
ror
cmp
clc
lea
xor
push
inc
xor
sti
mov
add
pop
push
cmpl
xor
cmp
rclb
jl
jle
icebp
mov
xor
sbb
lea
sbbb
filds
adc
out
jns
cmp
add
mov
sub
xlat
inc
xchg
and
push
ficoml
xchg
popf
imul
add
movsl
cmp
mov
fwait
sbb
repz
mov
lock
push
cwtl
std
jo
sbb
test
and
or
mov
xchg
notl
mov
push
int3
in
cmpb
out
add
inc
lock
mov
cmpsb
mov
pop
ret
loopne
incb
push
mov
cmp
out
loope
sbb
inc
add
jp
push
cmc
add
xor
dec
mov
mov
cmpb
jb
push
xor
insb
lods
orl
xor
inc
scas
stc
dec
add
xor
add
add
repz
cmp
mov
xchg
data16
cmp
lldt
push
dec
adc
jmp
lahf
add
ror
shrl
xor
mov
inc
xor
cmp
aas
pop
mov
inc
push
add
push
fdivr
inc
cli
loopne
or
sub
outsb
xlat
and
in
sub
add
out
inc
movsl
mov
inc
testb
insb
gs
push
add
jmp
pop
and
inc
mov
pop
xchg
pop
sete
movsb
lret
xor
cmp
xchg
add
jns
adc
lds
pusha
aaa
mov
jbe
fdiv
push
sub
js
shrl
andb
mov
sub
dec
sbb
call
pop
inc
iret
jmp
pop
pop
loopne
out
sub
sub
jmp
in
lods
add
iret
std
mov
outsb
fcomps
inc
add
xchg
mov
dec
es
aas
add
mov
call
pop
xor
fwait
cmpsl
hlt
push
sbb
add
stc
repz
jbe
add
xchg
mov
and
push
fisttps
add
xor
add
mov
fwait
shll
das
xchg
aam
ds
cmp
cmpsb
sbb
sahf
addl
jp
push
insl
or
and
sbb
lods
lods
jns
sbb
jecxz
push
add
inc
cmp
mov
or
xorb
clc
push
push
mov
adc
add
ret
imul
in
sub
loopne
rcrb
in
adc
rcl
cmp
mov
sbb
inc
test
mov
add
test
addr16
fisubrl
pop
sub
dec
inc
pop
test
inc
add
pusha
fiaddl
rolb
lods
imul
sub
cmp
jae
nop
push
push
push
shlb
sahf
or
mov
mov
jecxz
mov
repnz
daa
add
and
and
push
add
xchg
inc
test
or
pop
sar
add
stos
cld
jg
rcr
dec
pop
add
dec
inc
cmp
addr16
inc
cmp
xchg
inc
dec
dec
faddl
in
sub
cmp
fs
cmpsl
add
mov
cmp
hlt
data16
pop
fwait
ror
and
imul
lahf
push
jmp
cs
addl
dec
fistps
push
sbb
adc
inc
inc
sub
add
pop
cmp
in
inc
ja
testb
int
push
mov
jno
les
aad
mov
ljmp
add
dec
xor
insl
pusha
mov
mov
sbbb
and
pop
loopne
fcompl
add
rcrb
or
mov
les
movsl
inc
loop
jecxz
mov
out
add
fistl
cs
dec
cmpsl
pop
cmp
lahf
out
rorl
mov
je
pushf
dec
or
mov
push
inc
mov
adc
inc
mov
loope
inc
mov
js
inc
cmp
movsb
fmull
sub
mov
stc
lret
sbbl
xor
push
jns
xchg
sbb
sub
dec
add
jmp
loopne
les
cmp
push
jno
popa
or
or
adc
xor
inc
leave
or
inc
sti
orl
jbe
not
sahf
pop
fsubl
sbb
mov
call
lock
cmp
out
cmpsl
sbb
call
rcll
fnstenv
inc
pop
and
jnp
ret
int
and
sbb
adcb
sahf
add
inc
dec
je
adc
jl
sarb
or
cmpsb
xor
xchg
in
cmp
pop
dec
mov
pusha
and
rcl
push
mov
orb
shll
popf
imul
lea
jae
jne
out
test
mov
inc
movsb
sahf
enter
cmp
xor
int3
fcmovu
lods
cmpsb
xchg
cmp
dec
mov
in
inc
add
or
std
adc
add
aas
xor
fdivrs
pop
ds
inc
jge
prefetch
or
fisubrs
inc
dec
push
sbb
insl
ret
jg
cmp
add
inc
fsubl
add
or
mov
push
shr
jo
add
xor
add
fcmovb
add
scas
push
aam
fists
shlb
dec
or
orl
cmp
jp
aas
mov
shrb
push
in
fldl
mov
add
xchg
aam
xchg
mov
and
ret
inc
cld
mov
or
aam
cmp
scas
in
sti
add
xchg
out
mov
dec
add
push
stos
jge
jne
rcrb
out
enter
xor
adc
xor
jecxz
cmp
insb
push
pusha
fcompl
inc
out
xor
inc
sub
lea
outsl
add
arpl
cvtps2pd
add
push
add
cs
push
jge
jl
lret
adc
push
repnz
shrb
mov
add
dec
push
rolb
inc
or
out
inc
icebp
stos
add
and
push
sbb
mov
sbb
call
push
push
inc
out
cmpsb
outsl
cmp
mov
mov
shrb
cmpb
pop
cmc
add
pop
push
mov
stc
push
shrd
pusha
cwtl
bound
push
mov
int3
cmp
jae
jl
shll
pop
arpl
movsl
nopl
jnp
pop
and
ss
jns
add
pop
push
add
push
int
icebp
mov
es
stos
outsb
add
cmp
mov
pop
push
push
adc
cs
cmp
sbb
mov
cmpsl
dec
loopne
or
pop
test
xchg
cltd
mov
adc
mov
adc
add
out
cmp
js
call
jmp
addl
insl
cmp
jp
cltd
loopne
icebp
ret
cld
out
add
in
push
jns
fmuls
icebp
je
mov
aad
jl
ja
es
xor
hlt
inc
pop
pop
add
cmpsb
mov
adc
and
imul
iret
arpl
pusha
lret
or
lret
addr16
stos
sbb
repnz
push
das
mov
int3
add
test
mov
sub
mov
xor
lods
dec
inc
pop
xor
inc
dec
sbb
mov
int
mov
push
roll
jmp
xchg
add
fcom
test
add
addb
rcl
adcb
fiaddl
cmp
mov
push
punpcklbw
jo
adc
icebp
add
add
dec
add
cwtl
and
aam
daa
shl
or
jl
stos
mov
add
dec
xchg
rcrb
mov
add
scas
arpl
or
enter
push
bound
ret
inc
shrb
dec
pusha
mov
adc
xchg
mov
lea
mov
adc
inc
lods
sbb
pop
push
repz
xlat
adc
fimull
pop
call
and
mov
jo
dec
add
add
jmp
addb
add
jb
in
lock
icebp
jl
pop
mov
xchg
inc
or
pop
jnp
adcb
sarl
add
popf
mov
in
push
jo
inc
add
mov
imul
lods
cmp
add
orl
adc
xor
mov
cwtl
add
and
into
decl
push
in
mov
js
or
or
cmpsb
inc
xchg
add
popa
rclb
pop
jmp
adc
fs
push
mov
int
add
fstcw
sub
pop
add
ds
movsb
xchg
cmp
xor
lds
adc
mov
add
js
pop
add
and
lods
aam
aaa
out
cld
test
enter
sbb
xchg
sub
mov
fistps
sti
repz
mov
mov
outsl
in
add
cmp
adc
movsb
test
xchg
dec
push
push
lock
xlat
and
pushf
add
cmp
outsb
add
lret
aaa
inc
sbb
jl
xor
add
sbb
loop
mov
movsl
jae
rclb
xlat
neg
shlb
push
popl
push
sub
jbe
mov
add
fmull
add
out
mov
dec
inc
sbb
test
mov
enter
pop
xchg
lret
pop
jne
clc
lahf
scas
enter
out
inc
add
xchg
or
js
mov
push
clc
push
xor
jb
xor
jo
jno
pop
out
test
add
inc
std
pop
sbb
mov
and
pop
xchg
pop
add
shrl
out
int
orb
out
pop
aas
jnp
xchg
shlb
popf
fistpll
mov
shlb
adc
subb
daa
xor
cmp
mov
repnz
jns
sarl
sub
lar
ljmp
sarl
dec
in
call
jecxz
flds
popa
ja
pushf
sbbb
sarb
xorb
ds
cwtl
enter
mov
jb
inc
je
test
mov
sbb
rcll
or
fiaddl
int
sub
lret
mov
or
in
mov
pop
push
loope
dec
nop
adc
in
dec
clc
xchg
cmp
imul
jnp
outsb
dec
add
int
add
mov
call
push
add
out
dec
inc
xchg
pop
push
xchg
push
xchg
adc
or
and
cmp
popf
xchg
add
lds
aas
pop
gs
int
xchg
mov
push
inc
mov
jo
xchg
inc
inc
repz
xchg
loopne
mov
add
lds
leave
ret
insb
cld
icebp
add
or
jbe
mov
add
jg
ds
push
int3
pushf
out
sahf
arpl
jge
ja
leave
hlt
mov
ffree
nop
sbb
add
orl
loopne
loop
orl
or
jbe
call
sbb
outsb
add
out
pcmpgtd
cltd
popa
setg
mov
cs
cwtl
insb
pop
lods
dec
dec
adc
inc
xchg
lods
movsl
inc
pop
mov
xor
jmp
pop
push
divl
clc
mov
pop
pop
nop
sub
mov
mov
add
lods
sbb
icebp
xchg
and
xor
cmp
add
sub
pushfw
pop
test
cmp
loopne
cmpsl
ficoms
cs
testb
mov
jns
in
test
dec
xchg
nop
jns
loope
add
jb
inc
inc
mov
or
sbb
clc
push
mov
es
xor
shlb
popa
push
scas
adc
or
nop
jo
jne
cmc
add
mov
add
out
pop
pushf
jae
add
cmp
ds
dec
outsb
or
xchg
rep
call
jb
test
cltd
sbb
stos
dec
bound
xor
mov
into
pop
mov
push
scas
fldcw
loop
add
repnz
lock
aam
mov
xchg
add
clc
mov
pop
insb
and
push
push
dec
in
je
jo
sub
sub
add
test
mov
adc
mov
pop
sahf
insb
lea
mov
inc
js
popl
rorb
aaa
pop
imul
sub
dec
fdivs
sbb
or
icebp
data16
dec
iret
and
mov
int3
mov
div
nop
xchg
or
js
mov
in
xchg
and
adcb
faddl
inc
loop
pop
sbb
das
mov
and
cmc
stc
adc
inc
mov
pop
xchg
sub
add
jo
dec
outsl
inc
aas
adc
jbe
cwtl
out
and
nop
dec
bound
pop
imul
lcall
push
push
and
push
adc
xchg
sbb
es
les
loope
mov
repz
add
xchg
aaa
dec
mov
cwtl
add
jo
adc
pop
out
incb
rol
xorb
mov
push
aaa
adc
popa
mov
out
rcrb
mov
inc
loopne
xchg
sub
enter
jg
out
aam
cli
pop
mov
xchg
inc
insl
lock
xchg
aaa
add
ss
lret
out
push
push
mov
add
push
sub
and
jle
fs
pop
dec
movsb
sbbb
cld
and
push
add
roll
sahf
lds
ja
add
and
add
cmp
adc
cmp
sbb
add
imul
loope
xchg
mov
add
mov
addl
call
movsl
xor
sti
pusha
rcrb
out
sahf
icebp
push
mov
and
pop
cmp
add
in
push
rclb
cld
scas
adc
sbb
mov
add
outsb
lock
add
pop
adc
hlt
xor
arpl
js
mov
repnz
jb
push
insb
mov
dec
ds
jne
and
cmpsb
scas
jae
mov
add
push
stc
mov
into
pushf
enter
sub
mov
inc
inc
in
cmpsl
jbe
mov
clc
sbb
jmp
xchg
add
dec
push
fstpt
cmc
push
add
mov
jbe
in
lret
xor
mov
fwait
gs
popf
cs
popa
mov
push
lock
leave
cwtl
sub
add
jns
bound
add
or
mov
notl
jp
stos
or
sub
data16
jo
and
jbe
sub
add
sbb
mov
mov
je
leave
xor
pushl
sbb
ret
dec
rcrl
push
or
dec
lcall
pusha
clc
mov
push
pop
jb
movsb
repz
push
mov
push
fstps
fisubs
inc
scas
jp
lret
add
xor
and
sbb
jecxz
or
mov
imul
xlat
pop
imul
jg
jne
or
sub
dec
mov
fistpll
mov
sbb
clc
rorb
cli
xor
and
sbbl
fucom
pop
inc
roll
mov
pop
fidivl
movsb
clc
add
xor
xor
clc
imul
sub
loop
add
sub
adc
jb
mov
and
add
lock
dec
mov
jmp
sbb
mov
jnp
mov
xchg
and
push
add
fldl
mov
sub
or
xchg
pop
les
les
xchg
pop
add
xor
push
arpl
loop
push
mov
shll
cmp
outsl
fsubl
xor
add
je
cmp
mov
sbb
pusha
mov
lahf
add
sub
hlt
jno
pop
fldl
mov
adc
xor
or
jbe
adc
xchg
cmc
outsb
pop
shll
lahf
dec
dec
hlt
aad
cmp
cld
add
das
add
scas
push
add
mov
adc
test
jp
cmpsb
sbb
xor
add
mov
xorb
mov
test
jns
mov
and
cmp
mov
jnp
add
adc
mov
decl
out
rclb
shlb
cs
nop
inc
andb
xchg
sbb
mov
test
add
pop
stos
hlt
add
xchg
or
and
adc
fiadds
pop
push
pop
push
jnp
jmp
cmp
adc
cmp
iret
adc
inc
pop
es
les
fsubs
add
cmp
xchg
add
aas
loop
push
mov
in
imul
add
cmp
arpl
rorb
test
add
jo
jae
push
add
cmp
movl
mov
and
add
sti
inc
mov
inc
jle
cli
mov
cmp
pop
mov
mov
or
mov
add
push
int3
mov
cwtl
lret
push
push
lods
mov
cwtl
dec
sbb
out
stos
adc
fadds
loop
in
cld
out
hlt
xor
sbb
cwtl
or
jp
jecxz
shl
cmp
jb
hlt
add
bound
sub
int
popa
loopne
push
sub
int3
xchg
faddl
inc
cld
adc
sbb
mov
and
loopne
repnz
rolb
subl
outsb
and
jnp
sbb
lret
inc
stos
hlt
push
xchg
add
and
xorb
outsb
sbb
in
js
dec
push
nop
add
mov
in
les
xor
mov
lock
pop
add
jmp
fwait
out
sbb
les
adc
lcall
pop
add
sub
icebp
adc
sarb
sub
mov
cmp
push
popf
rcl
xchg
and
cli
pop
dec
loopne
sarl
repz
jo
jmp
dec
in
dec
mov
and
or
push
cmp
add
enter
xchg
fsubs
cwtl
fistps
pushf
je
fsubrl
inc
in
fisubs
mov
jae
js
mov
test
dec
xchg
pop
out
test
fildll
pushf
repnz
dec
xlat
inc
sbb
sub
xchg
fmuls
mov
fs
cmp
test
orb
shlb
pop
arpl
add
pusha
outsb
xor
hlt
adc
addr16
push
adc
nop
sub
dec
imul
jl
add
rcrb
cwtl
pop
push
loopne
add
xor
mov
rorb
push
mov
xor
push
adc
ljmp
stos
je
mov
stc
sbb
call
aad
pushf
push
outsb
dec
jge
cmpsb
pop
pop
clc
pop
push
jbe
mov
dec
stos
push
enter
adcb
data16
add
adc
add
out
or
lahf
shlb
test
cwtl
mov
jle
cmp
rcrb
in
shl
lds
mov
sub
nop
stos
mov
xchg
fsubrs
sbbb
mov
cmp
pop
cli
cmp
pop
jmp
add
sbb
rorb
mov
mov
mov
es
push
mov
sbb
mov
pusha
rcrl
cmpsb
sbb
add
das
bound
cmp
pushf
xor
push
fucomip
pop
add
repnz
test
daa
and
inc
sbb
test
pusha
aas
outsl
mov
repz
add
adc
arpl
stos
pop
mov
nop
xchg
mov
lret
add
mov
xchg
sbb
mov
add
lcall
dec
subl
in
es
add
outsb
xchg
mov
lods
insl
jns
mov
mov
adc
loopne
lods
mov
andnps
out
jge
xor
mov
and
das
mov
clc
jno
call
add
cmc
push
xchg
sbb
mov
sub
scas
add
push
pop
daa
psrld
aas
scas
cld
adcb
inc
or
filds
stos
inc
leave
sub
mov
add
add
out
filds
inc
sbb
jae
add
jne
cmp
mov
pop
dec
pop
rcrb
out
add
inc
sub
fisttps
mov
cmp
add
lock
mov
int3
inc
cwtl
imul
add
sbb
jmp
gs
addr16
pop
push
loop
sbb
mov
or
das
add
sti
mov
shll
xorl
ret
inc
jbe
push
jge
dec
xchg
lcall
dec
jg,pn
jl
adc
pop
ds
dec
and
add
clc
jl
or
adc
push
pop
sahf
in
shlb
or
xor
adc
pushf
or
lahf
repz
add
or
push
data16
hlt
dec
xchg
push
pushf
push
mov
xchg
sarb
test
mov
sub
dec
mov
xor
movl
mov
cmp
sub
push
add
xchg
inc
or
mov
mov
outsb
pop
cli
fwait
lret
adc
or
jl
push
lock
or
jge
fwait
adc
sub
xor
sbb
dec
test
arpl
pop
pop
add
xchg
and
sub
loopne
loop
or
add
mov
sbb
add
addb
jno
adc
add
mov
jge
mov
aaa
movsb
mov
pop
jns
add
shll
pop
adc
cmp
push
mov
xchg
push
sub
in
mov
lods
push
mov
xchg
mov
lahf
repnz
enter
add
lea
int
cs
cmp
mov
loope
fdivl
adcb
cmp
and
mov
jg
out
sbb
sub
xorb
out
mov
push
mov
adcb
mov
loop
cmpsl
in
decl
add
push
aad
add
mov
lods
mov
or
jno
xchg
cwtl
clc
add
loope
pop
xor
push
xor
mov
pushf
sbb
or
mov
and
lret
sahf
add
ljmp
or
test
add
popa
jnp
pop
hlt
and
sub
xchg
add
cmp
inc
add
cmc
in
and
fwait
jp
dec
add
nop
and
cltd
inc
loope
cld
or
outsl
mov
jns
xchg
or
cmp
push
cmpsl
sub
push
pop
pop
mov
ljmp
cmp
icebp
sub
sub
stos
pop
outsb
clc
or
mov
push
mov
adc
push
mov
cmp
punpcklbw
and
clc
adc
daa
add
mov
pop
inc
adc
cmp
add
out
pop
dec
negb
add
out
add
dec
push
shlb
pop
xchg
lods
add
pushf
aad
scas
dec
les
mov
add
adc
lret
mov
stos
add
popf
aaa
pop
pushw
jmp
add
dec
or
pop
jecxz
fwait
rorb
div
pop
mov
add
mov
cmpsl
and
leave
mov
loop
pop
ja
jo
stos
mov
xchg
jmp
sub
jg
sub
inc
add
adc
xchg
mov
outsb
mov
int
cmp
push
repnz
mov
fisttps
insl
push
aad
xchg
push
dec
popf
inc
xorb
iret
pop
dec
dec
mov
mov
leave
test
add
add
out
pop
popf
add
cmp
add
btr
aaa
push
push
jmp
testl
ss
lock
inc
fucomi
aaa
pop
cmp
outsb
out
mov
std
mov
pop
cmpsb
mov
add
mov
rorb
mov
push
je
inc
or
pop
and
add
inc
add
cmp
xchg
xchg
sldt
cs
jae
cltd
add
popf
movsb
jge
or
shrl
and
mov
add
imul
xchg
pop
add
mov
cmpsb
lods
mov
push
xchg
test
cmp
push
push
aas
imul
cwtl
jno
or
ja
jno
add
outsb
dec
or
add
cmpsb
test
mov
jg
out
idivl
nop
lcall
sub
xchg
dec
sbbb
adc
dec
add
roll
fs
add
cmpsb
mov
jl
jns
add
sub
sbb
popf
add
pushf
push
inc
pop
mov
mov
cmp
ret
insb
out
ljmp
hlt
add
stos
inc
movsb
cmp
cs
sub
int3
fucomp
jg
xchg
inc
loop
add
push
arpl
fmull
adc
imul
clc
adc
arpl
sarb
icebp
pusha
popf
and
cs
pop
add
fxsave
nop
and
clc
add
pop
push
dec
add
pusha
les
push
jae
lret
ljmp
adc
testb
nop
jmp
cmp
cmpl
into
and
jne
xchg
jno
mov
jl
add
out
add
test
divl
sub
inc
fcoml
mov
filds
shrb
xlat
mov
or
and
mov
jmp
add
test
lods
pop
pop
outsb
jne
lret
jns
adcb
add
mov
loopne
pop
mov
lret
mov
add
out
cmp
push
push
arpl
jae
cmp
or
cli
cmp
sbb
add
jne
dec
jecxz
nop
pop
mov
xchg
pop
dec
mov
add
cli
xchg
lcall
add
and
cmp
xchg
movb
dec
mov
mov
mov
pusha
xchg
call
roll
xchg
sub
pop
cld
jmp
inc
push
jg
xchg
xchg
sbb
and
cmp
js
adc
pop
sub
jae
testl
xorb
fnstenv
jne
pop
imul
pusha
fadd
stos
add
inc
ror
cmp
mov
dec
adc
rorl
adc
add
movsl
stc
or
jecxz
scas
in
push
scas
sub
jmp
stc
jp
pusha
jne
jb
adc
addr16
fdivs
mov
scas
pop
stos
jno
mov
add
les
scas
mov
enter
scas
rorb
in
aas
in
sbb
jns
xor
sbb
add
fldt
add
mov
mov
jge
lods
lret
pop
mov
add
lret
lahf
or
xor
lcall
sbb
fistps
mov
sahf
jno
or
and
pop
jle
jb
push
xchg
es
dec
xchg
add
xchg
cli
stos
mov
or
xor
and
mov
jmp
inc
and
or
jns
push
add
mov
push
movsl
dec
loopne
add
fwait
jnp
test
leave
into
add
sbb
loop
jmp
test
sbb
add
dec
mov
ret
push
jne
in
enter
add
lods
jnp
add
add
push
mov
add
jl
xchg
sub
rcl
test
sahf
add
and
jl
fs
in
sbb
scas
int
and
sub
mov
xchg
imul
and
divb
sub
aam
xor
pop
push
push
xlat
rolb
popf
inc
inc
ja
cmp
add
mov
jne
xor
push
push
lret
pusha
push
out
movsl
sbb
pop
cmp
xor
push
sbb
test
shl
cmp
mov
cmp
add
aas
test
add
popa
jbe
je
add
lret
sub
adc
xchg
add
add
xchg
inc
or
repnz
sahf
bound
shlb
ds
fmull
pusha
stos
and
adc
or
cmpsl
insl
movsb
loop
mov
add
lods
std
xchg
in
push
out
inc
add
lods
sahf
sbb
mov
faddl
das
repz
lret
rcr
iret
popa
inc
pusha
inc
je
fnstsw
insb
dec
push
pusha
add
loope
pop
push
inc
lods
add
pop
arpl
jmp
aas
add
in
add
jno
or
adc
sbb
push
add
gs
lret
sbb
popa
mov
test
leave
xchg
jecxz
das
push
add
cmovne
add
mov
aaa
popa
cltd
lahf
sbb
loopne
xor
fnstcw
loop
xchg
or
or
push
xchg
int3
sbb
lcall
subl
sbb
xor
shll
les
hlt
and
test
subb
mov
adc
cld
jmp
add
and
inc
lcall
loopne
jbe
rcrl
or
cmp
repnz
adc
jb
test
push
adc
jns
push
inc
lock
cmpsl
adc
fildll
popf
dec
mov
wbinvd
push
mov
roll
inc
cwtl
sbb
rcrb
fisttpl
add
addl
lcall
or
test
mov
fwait
lock
push
jno
jp
add
jg
loopne
xchg
jecxz
in
aam
clc
dec
daa
cmpb
and
out
xor
lock
add
repnz
add
xor
ficoms
mov
jecxz
mov
lea
test
pop
testb
xor
shrl
sbbl
push
push
pop
mov
rcr
jno
push
dec
movzwl
iret
in
add
mov
jne
cmpsl
icebp
push
add
mov
jl
fdivs
arpl
push
test
arpl
loopne
jl
add
cmc
sub
aam
pop
inc
js
mov
cs
dec
add
inc
push
push
xchg
xchg
rolb
mov
xchg
jno
add
mov
jecxz
into
xor
jns
jl
push
adc
xchg
add
inc
or
xor
sub
mov
xor
adc
xchg
mov
mov
ret
mov
inc
out
push
aas
jae
push
sub
out
rcrl
push
xor
sbbl
test
sarb
pop
adc
add
in
dec
aas
mov
mov
addr16
sub
or
xchg
fidivrl
popa
test
nop
lahf
jns
pushf
sarl
inc
mov
push
rolb
xor
je
nop
dec
adc
lret
xor
iret
sub
cmp
lcall
add
lods
adc
adc
pushf
cmp
xlat
cmova
push
mov
pop
mov
jg
sbb
cmc
adc
cmp
mov
cli
jo
pop
push
adc
adc
add
push
xchg
scas
push
xchg
add
lcall
lahf
fidivrs
or
or
das
js
aas
inc
fimull
fistpl
ja
shrb
mov
inc
xor
sbb
loop
mov
sarb
out
lea
pop
roll
lcall
xor
call
sub
lcall
pop
adc
add
pop
sub
rorb
sbb
pusha
inc
fisubl
loop
and
pop
inc
mov
sahf
cmpsb
fwait
jne
add
aam
enter
cs
dec
mov
int
push
lcall
test
sbb
mov
stc
pop
add
xchg
push
lock
int3
mov
inc
dec
stos
pop
stc
lds
test
or
cmc
lahf
cmp
sbb
sti
jns
jecxz
cmpsl
bound
add
adc
lods
jg
xchg
jnp
pusha
popa
and
push
pop
in
add
das
sti
jg
pop
or
adc
xor
jno
lods
inc
cmpb
jp
add
icebp
pop
int
xchg
and
sbb
sbb
inc
sbbl
cmpsl
sub
loope,pt
xorb
mov
jl
mov
sbbb
lcall
subb
inc
mov
adcb
gs
sbb
xor
push
shlb
jno
cmp
es
pop
cmpsb
fsubp
mov
jg
mov
jle
in
clc
sbb
push
iret
or
push
cmc
jmp
push
test
filds
test
and
pop
je
add
inc
mov
dec
icebp
sbb
es
jmp
pop
ror
adc
testl
add
pop
adc
test
outsb
xchg
dec
add
push
ret
or
movsl
push
cmpsb
cmc
ds
rcl
adc
je
cmp
imul
xor
sbb
sbb
fsts
mov
mov
outsl
jmp
lahf
loope
popf
push
xchg
scas
clc
fnstenv
add
das
dec
icebp
xchg
mov
pop
sti
push
jmp
aad
sbb
jmp
fildll
inc
push
sbb
add
sbb
and
cs
lret
loopne
and
jmp
xchg
add
push
dec
xchg
sub
add
cmpsb
inc
scas
dec
push
scas
mov
fcompl
in
cmp
pop
in
cmpsb
mov
push
inc
pop
loopne
sarl
jo
lds
lret
bound
popa
shrl
or
add
xor
pop
inc
incl
out
aad
inc
add
and
inc
or
pop
mov
inc
mov
pop
xor
stos
lods
roll
push
dec
xchg
jno
lret
clc
pop
push
inc
add
rcrb
mov
lods
add
inc
and
pop
add
ds
cmpsb
and
push
mov
cli
and
fisttpll
add
jbe
rol
cmp
cmpsb
sbb
fs
or
pop
subl
and
rcll
push
cld
nop
fsubr
loopne
dec
cmpsb
cmp
pop
xchg
movsl
fmulp
add
sbb
push
add
add
cld
sbb
in
rol
xchg
into
and
add
shr
jbe
xchg
dec
movsl
iret
inc
lahf
and
loopne
xchg
movsb
cmpsb
mov
xor
bound
mov
fbstp
sbb
mov
loope
add
or
cmp
rolb
clc
js
dec
and
cmpsl
xchg
dec
inc
mov
sbb
adc
dec
jmp
add
pushf
adc
and
add
test
and
sahf
aas
lods
shll
mov
add
dec
test
addr16
and
mov
out
xchg
pop
sub
dec
mov
scas
mov
hlt
jge
add
es
neg
addl
adc
pop
push
mov
outsb
je
xor
adc
xor
in
adc
adcb
xor
mov
and
add
jno
and
jl
je
or
dec
adc
pop
and
mov
mov
roll
xchg
cld
mov
add
dec
mov
push
cmpsb
out
jnp
or
mov
cmpsb
add
push
inc
aam
dec
pop
ljmp
xlat
mulb
leave
adc
ret
fsubs
cmp
shlb
push
insb
jo
xchg
jmp
add
xor
xchg
fidivs
sbb
push
mov
sub
movsl
outsl
nop
repnz
add
daa
popa
push
mov
mov
add
jmp
mov
subb
repnz
sbb
jbe
popf
mov
add
stos
cmp
push
push
lahf
xchg
rorb
or
mov
cmpsl
push
add
loopne
pusha
ds
notl
adc
sub
add
pop
fucomip
jns
into
popa
sub
xchg
push
ret
cli
xlat
clc
and
or
jp
int
pop
pop
push
data16
sbb
mov
mov
icebp
add
adc
dec
inc
push
pusha
call
adc
mov
cmp
xchg
daa
adc
push
pop
addr16
mov
and
xor
rolb
pop
xchg
dec
negl
lcall
insl
xlat
inc
pop
xor
daa
pop
sti
inc
inc
jge
push
mov
ss
lea
inc
or
movl
sub
push
inc
stc
repz
and
jnp
in
in
mov
mov
add
cmp
xchg
xchg
aad
dec
repnz
push
sahf
in
fyl2x
inc
cmpb
fisubs
pop
mov
test
jecxz
cwtl
push
mov
xchg
inc
and
arpl
add
fadd
cmpsl
add
and
into
outsb
pop
shl
pop
call
jo
mov
cmpsl
mov
imul
xchg
and
xchg
ljmp
xchg
loop
push
ret
out
loope
mov
inc
fsubrl
fistl
les
sbb
or
icebp
jo
and
add
inc
in
flds
lods
cmpb
pushf
fisttpll
addb
les
rolb
cmp
add
add
inc
xor
inc
into
mov
das
repz
xchg
push
lods
cmpsl
adc
test
jecxz
roll
inc
pop
cmp
repnz
sub
adc
add
or
repnz
or
jns
add
inc
sub
call
popa
push
inc
rcrb
or
loope
fldl
pop
fwait
pop
shrb
addr16
adc
xlat
push
ja
sub
adc
sbbl
stos
mov
mov
add
movsl
xchg
shl
cld
jae
add
and
jge
and
std
cld
and
push
push
inc
insb
cmpsl
dec
sldt
lods
fnstenv
mov
sbb
inc
shll
nop
outsb
push
jge
inc
and
push
jne
push
shlb
add
pop
psrlw
shrb
xor
dec
punpcklwd
into
fwait
xchg
icebp
repnz
inc
or
and
insl
xor
cmp
sub
lods
cmp
pop
lret
mov
cmp
pusha
jl
pusha
imul
aam
mov
lret
or
daa
shrb
pushf
roll
pop
test
cltd
push
or
pop
mov
shlb
mov
mov
aaa
xchg
nop
je
push
mov
shlb
or
pusha
inc
jo
mov
cmpsl
jne
add
repz
aam
je
push
add
cmp
lods
lods
out
in
shl
xchg
push
test
add
mov
stc
ret
xchg
call
and
insb
andl
jbe
enter
jno
loop
push
push
test
mov
pop
leave
testb
jb
jns
cmp
pop
icebp
adc
nop
add
stos
test
cmpsl
and
pusha
outsb
frstor
sub
xchg
inc
or
enter
lahf
movsb
add
popa
hlt
or
movd
mov
pop
clc
xchg
pop
mov
icebp
popl
in
into
sbb
or
clc
dec
cmp
add
sub
sub
insl
add
cmc
sub
add
and
ds
or
ja
xor
ds
jne
hlt
jl
call
es
add
in
daa
mov
jmp
and
sub
bound
add
push
call
push
andb
aam
inc
add
xlat
std
out
dec
add
push
pusha
xchg
mov
add
mov
mov
arpl
loopne
pop
mov
push
push
and
push
rclb
adc
mov
fwait
xor
daa
or
inc
push
push
inc
in
sbb
xor
sub
xchg
js
les
pop
pop
loop
dec
inc
loopne
jge
xchg
aam
mov
movsl
jbe
sbbl
mov
jns
cwtl
adc
in
icebp
add
dec
mov
movsb
movb
ja
js
sub
sub
lahf
nop
add
aaa
mov
int3
mov
dec
in
test
sarl
and
cmc
xor
test
mov
ss
rclb
in
cld
iret
inc
arpl
insl
lea
scas
jmp
nop
and
inc
lret
jb
xor
pop
sub
sub
mov
lock
outsb
outsl
repnz
pop
outsl
push
out
dec
add
repz
in
sub
hlt
rorb
xchg
inc
sbb
xchg
xchg
add
loop
cmpsb
add
hlt
inc
rolb
daa
sub
add
cmc
stc
or
rorb
clc
arpl
xor
mov
rolb
fistpl
mov
enter
sbb
mov
in
and
cmp
sbb
fiaddl
push
push
cmp
dec
inc
in
cmp
rcll
add
leave
pop
in
iret
mov
jg,pn
sub
mov
xchg
pop
inc
jno
lcall
ret
push
xor
and
test
adc
sub
cmp
rolb
cltd
les
sbb
pop
dec
xor
xchg
jne
outsl
rcrl
stos
cmp
sub
popl
push
add
lahf
inc
test
aad
add
jns
das
filds
or
pop
sub
jbe
add
add
scas
add
rcll
mov
maskmovq
idivl
and
out
icebp
xchg
sti
mov
mov
aam
adc
adc
push
js
popf
xor
mov
xchg
in
push
mov
add
sub
roll
add
mov
adc
pop
add
ficompl
or
sti
jae
add
test
rorl
movsl
call
push
cltd
insb
sbbb
lret
push
pop
filds
inc
jns
lock
pop
es
cmp
dec
add
push
out
into
xchg
icebp
ds
movsl
test
mov
jmp
adc
icebp
pop
adc
jg
push
rclb
sbb
out
pusha
xlat
xchg
je
and
mov
xchg
pusha
cmp
mov
sub
daa
jae
call
mov
enter
cmp
xchg
or
sahf
push
adc
push
jbe
mov
sarl
add
lcall
xchg
ret
mov
lret
fsubs
sub
into
cltd
xchg
sbb
cmp
cmpsb
test
shrl
mov
add
cwtl
sub
sahf
or
mov
loope
pop
pop
stc
iret
notl
rcrl
fimuls
dec
pop
cwtl
rorl
push
pop
mov
dec
test
pop
lock
cltd
or
and
mov
jns
add
xchg
push
fbstp
loope
fcomps
xchg
popa
std
mov
leave
inc
push
add
sub
add
mov
sbb
jp
out
jns
cmp
sub
adc
add
xchg
xchg
in
jo
xchg
or
out
hlt
fdivrl
xor
ljmp
fs
adc
push
add
jno
add
pop
sbb
xor
int
or
adc
mov
pop
stos
add
rclb
push
notl
and
cld
jbe
ficomps
mov
pop
add
mov
rorb
aas
andl
xor
push
jae
xor
in
aam
aas
sti
int
mov
gs
add
lahf
sbb
add
add
xchg
fiaddl
js
inc
sub
sahf
jg
cmp
fs
je
mov
loopne
mov
adc
jle
test
cmp
dec
cmp
add
mov
fxtract
add
popf
imul
mov
add
and
push
sub
fdiv
cmp
mov
pop
orl
out
pop
add
cmpsl
out
movsl
mov
popa
or
and
inc
mov
in
mov
or
cmp
xor
sub
sbb
jl
sbb
pusha
cmpsl
add
push
mov
test
inc
pop
sbb
xor
popf
test
test
or
cmp
je
add
xchg
data16
loopne
or
xor
cmp
sub
cli
xor
add
stc
and
idiv
mov
mov
adc
stos
sbb
add
stos
push
xlat
filds
mov
repnz
mov
cmp
fwait
mov
gs
cmp
sbb
add
sub
sub
push
xor
dec
sti
shlb
stos
popl
sbb
test
nop
push
add
shl
jecxz
jae
pop
add
push
andl
adc
mov
ja
inc
nop
xor
cmpb
test
fwait
lea
add
mov
add
jnp
jo
mov
add
loopne
and
xor
sar
pop
inc
cmc
inc
jmp
jae
cmp
jle
xchg
cmp
negb
dec
xor
call
rclb
dec
inc
add
imul
pop
jle
cmp
add
cs
mov
xor
mov
jne
add
dec
and
bound
stos
push
adc
cld
fdivr
add
sahf
mov
xchg
add
fstl
cwtl
stos
pusha
outsl
imul
cmc
or
add
dec
jle
scas
in
add
in
insb
aaa
sub
xchg
out
sbb
repz
inc
ljmp
test
cmpsb
push
pusha
add
std
or
add
xchg
mov
movsl
shlb
pusha
loop
clc
xchg
pusha
push
push
ret
adc
push
push
inc
add
and
scas
push
jecxz
movsl
sarb
addr16
sbb
xchg
push
push
dec
cwtl
jmp
gs
or
cmpsb
loopne
pop
mov
sub
pop
rorl
movb
cld
add
fs
mov
add
insl
in
pop
push
cmp
cmpb
and
push
add
xor
mov
aad
jo
push
cmp
xchg
mov
stc
hlt
and
arpl
add
repnz
scas
in
inc
xchg
cs
add
or
mov
loopne
lock
mov
add
test
out
and
cmc
xchg
mov
ds
dec
lods
add
stos
addr16
das
adc
adc
xor
add
jno
icebp
push
enter
add
sub
fmull
sub
loope
lock
add
in
hlt
ss
pop
lcall
inc
add
test
jl
mov
adc
and
add
movsl
hlt
push
sbb
adc
adc
adc
pop
add
std
test
sbbb
lcall
xor
mov
pop
leave
add
add
lahf
fcoml
loopne
add
push
shll
and
pop
pop
xchg
xchg
sbb
xchg
aam
cmp
in
sbb
jbe
bound
test
xor
pop
and
outsb
sahf
or
mov
inc
cwtl
test
ljmp
adc
jge,pn
stos
cmp
sub
add
jle
mov
jno
popf
es
add
pushf
add
dec
movsl
and
cvttps2pi
dec
lock
inc
fwait
jle
inc
jp
pop
fnstsw
adc
or
or
call
xor
adc
shlb
add
jo
xlat
ja
mov
scas
pop
xor
adc
sub
jecxz
fldcw
add
into
stos
jbe
clc
jb
add
bnd
mov
cmp
push
add
lcall
jns
out
mov
add
das
pop
jnp
out
inc
call
dec
add
jbe
imul
sub
addr16
fcompl
push
mov
mov
mov
scas
cli
push
adc
add
cmp
sub
mov
loope
clc
jbe
jge
push
or
xor
inc
mov
imul
sbb
sub
shrb
add
out
repnz
or
add
testb
sub
push
add
mov
xor
adc
pop
popf
sub
cmp
add
xor
shll
hlt
add
jne
sub
and
int3
mov
and
loope
cmp
pusha
pop
mov
xor
cmp
cmp
add
sub
add
jae
mov
dec
xorb
adc
add
cmp
mov
lods
loope
fbld
pop
add
cmp
cmpsl
outsl
call
iret
mov
rcll
lods
add
dec
push
lcall
xchg
adc
in
out
loope
push
dec
rorb
in
sub
lock
or
sub
inc
fsubp
xor
add
cmp
push
xchg
add
pop
js
add
sahf
imul
flds
hlt
adc
test
mov
add
iret
dec
jmp
movsl
jge
sub
sarb
mov
loopne
inc
add
les
loop
orb
add
add
push
add
xlat
mov
clc
adc
and
xor
pop
or
dec
push
pop
shrb
xor
jl
in
inc
loopne
cmp
xor
cs
pop
leave
xor
loop
aaa
jbe
pusha
add
sti
xchg
push
lahf
pop
or
ds
add
dec
les
les
aas
js
subl
loopne
jns
pop
pushf
add
mov
in
repnz
shlb
xchg
data16
jno
mov
sub
mov
dec
push
ss
orb
nop
add
loop
cmp
lods
lock
add
inc
loope
jnp
add
xchg
xor
std
mov
call
add
dec
push
adc
inc
repz
jecxz
ret
mov
push
cmp
push
dec
dec
jmp
in
push
jp
clc
fdivr
jo
adc
jno
adc
push
test
pop
add
bound
roll
mov
out
jl
cmp
push
add
mov
add
std
stos
lds
gs
xor
les
cmp
pop
dec
movsb
enter
ret
adc
mov
cltd
roll
jmp
jns
jbe
pusha
cltd
mov
push
popa
sub
loopne
mov
xor
cld
mov
mov
lahf
xor
pusha
leave
test
jne
add
aas
mov
in
sbb
sbb
adc
mov
add
xor
adc
imull
mov
ljmp
adcw
mov
cwtl
push
jge
ljmp
lahf
push
rcrb
add
and
add
xor
add
xchg
aad
fildl
loop
dec
pop
add
push
or
mov
pop
in
xor
repz
das
push
jno
or
dec
pop
imul
loop
inc
adc
fmull
push
add
ret
shlb
pop
mov
or
xor
fxch
push
sbb
lods
shll
or
nop
cmp
cmp
pop
lea
into
setno
add
rorb
dec
mov
fists
aam
insl
sahf
pop
aaa
cs
cmc
fidivl
cmp
push
hlt
add
cmp
sbb
stos
add
and
out
lods
mov
cmp
and
mov
hlt
ljmp
cmp
add
arpl
mov
lcall
fisttpl
jmp
xor
push
movsb
push
and
jbe
xlat
xor
sbb
div
enter
xor
push
icebp
mov
cmp
int3
add
and
outsl
dec
cmp
nop
cmp
or
add
inc
adc
into
test
sbbl
sbb
pusha
cli
jbe
xorb
scas
or
sub
push
and
ss
mov
add
mov
inc
cmp
imul
dec
gs
and
out
mov
pop
in
sub
xlat
loop
adc
out
jo
dec
gs
jge
and
lahf
dec
sbb
inc
inc
pop
mov
add
push
sbb
rcll
lds
pop
data16
sbb
mov
push
jne
addb
cli
add
dec
ss
pop
or
add
xor
jbe
test
popf
adc
and
insl
lret
jae
movsb
pop
jle
mov
sub
jecxz
cmp
adc
add
and
cmp
test
cld
jp
rclb
dec
and
add
lret
xor
dec
xchg
popf
rolb
andl
add
add
icebp
rolb
add
popa
dec
movl
cmpsl
xchg
call
shr
sub
inc
mov
hlt
cmp
or
jo
push
mov
sbb
fistpll
xor
add
int
aad
into
add
leave
mov
stos
fsts
loope
or
repz
addr16
in
inc
xchg
mov
pusha
inc
stc
add
jbe
dec
push
test
fs
lods
insb
sarb
add
push
xlat
push
shlb
jmp
inc
xorl
add
jbe
xchg
add
cs
cmp
xchg
lea
or
mov
in
mov
pop
cmc
cmpsl
push
sbb
addb
es
or
dec
cmp
xchg
jp
jmp
js
adc
scas
stc
inc
out
aad
lods
out
push
or
cltd
add
pop
cmp
mov
dec
mov
test
jmp
sub
ljmp
into
imull
mov
in
xor
or
das
mov
push
fadds
dec
jno
xor
add
shll
add
sub
pusha
add
pop
lods
mov
dec
dec
pop
or
add
adc
aad
sbb
push
popa
xchg
add
add
xchg
pushf
punpckhbw
sub
mov
cmc
gs
jnp
fnstcw
lret
stos
loopne
and
or
xor
and
cmp
jp
ret
mov
fwait
and
and
push
and
adc
ds
lret
and
sub
adc
lcall
hlt
add
roll
scas
add
add
lret
lock
call
outsl
js
out
add
xor
pop
add
push
inc
lods
incl
add
cmp
pop
pop
inc
or
fildll
insb
or
sub
inc
mov
lds
mov
loop
arpl
mov
inc
jmp
pop
add
ret
mov
mov
mov
mov
inc
xor
xor
xor
ss
add
les
add
xchg
xor
xor
pop
cmp
adc
add
mov
xor
mov
jae
jno
fnstsw
ljmp
adc
add
sub
jo
adc
cmpsb
adc
sbb
in
push
mov
fistl
ja
jmp
add
mov
fs
add
or
out
ficomps
add
sti
and
push
mov
add
mov
lds
jne
xor
inc
cmpsl
in
shlb
lret
add
xchg
mov
mov
jmp
mov
jno
std
xchg
pop
dec
ds
dec
inc
arpl
add
mov
rorl
adc
das
sub
pop
xor
mov
add
setp
int3
mov
inc
add
bound
add
inc
jg
shlb
call
pop
js
fstpl
pop
pop
add
out
pop
cld
inc
mov
xor
sbb
inc
sbb
add
dec
lcall
imul
add
in
int3
add
push
das
test
shr
add
cmp
popl
sahf
dec
sbb
add
pop
add
mov
bound
push
xchg
add
adc
popa
cld
mov
sbb
ds
add
aad
add
mov
fcompl
popl
aaa
add
stos
add
add
gs
mov
rcr
aad
add
lcall
pusha
mov
add
pusha
sti
scas
pop
dec
test
cltd
push
das
jl
add
add
cwtl
in
imul
adc
xor
scas
jp
add
popa
or
and
push
dec
mov
push
xchg
aad
pusha
add
sbb
int
inc
popf
ret
sar
repnz
cwtl
sbb
cmp
add
sub
lods
xchg
ficoms
sub
add
xor
adc
imul
in
repz
mov
pop
fsub
mov
add
jge
int3
lahf
call
sub
sbb
repnz
xchg
loop
add
push
imul
mov
andl
adc
popf
mov
rolb
lret
add
mov
lret
jg
xchg
pop
sbb
add
mov
or
add
nop
sbb
xchg
adc
mov
sbbb
mov
pop
jo
mov
addl
stc
push
push
mov
xor
add
ret
fcoml
js
jbe
data16
push
xchg
or
loope
mov
sbb
iret
test
cld
and
dec
jge
add
scas
mov
mov
addr16
cmp
jmp
and
sub
mov
xor
push
dec
jb
icebp
xchg
or
sbb
mov
fldenv
out
pop
scas
inc
lahf
or
insb
pop
pop
out
sbb
sub
ret
pop
xor
daa
cmp
dec
addr16
jl
pop
test
iret
inc
adc
add
lods
mov
sub
add
bound
add
ds
cmp
ret
adc
test
jns
inc
pop
push
in
mov
mov
add
dec
mov
cwtl
addb
sarb
jle
ret
sub
add
sbb
ss
std
aas
inc
cmp
push
sbb
pop
push
jg
in
and
rcrb
pop
bound
incb
out
mov
pop
mov
into
inc
test
and
aad
fstpt
add
mov
add
jb
add
mov
leave
in
icebp
jge
add
fadd
pop
add
and
mov
int
mov
add
jle
sub
loope
push
jns
or
imul
xor
sub
sarl
fsts
add
push
pushf
jecxz
mov
inc
inc
add
xor
in
dec
pop
mov
out
repnz
cmp
jne
sub
stos
aad
mov
cmp
out
mov
pop
lret
repz
add
sub
arpl
in
inc
ret
fistl
scas
mov
pop
ficoml
dec
and
lret
cmp
push
push
cwtl
gs
dec
les
ja
rorl
repz
aam
mov
js
jnp
iret
addr16
adc
rolb
pop
popf
nop
pop
sub
lods
pop
jmp
cmp
push
and
daa
cmp
mov
add
jnp
cmpsb
stos
and
ss
and
pop
mov
mov
jb
jae
imul
add
inc
pop
repnz
sub
mov
sub
sub
test
xor
inc
inc
in
subb
dec
sti
add
pop
dec
fisttpll
jnp
movb
sbb
aaa
mov
jb
push
dec
aad
add
in
cmp
add
inc
lds
lock
es
popf
sub
and
jle,pt
movsb
fs
xchg
and
add
mov
test
addr16
mov
jo
pop
mov
lcall
dec
add
dec
sbb
mov
mov
jno,pn
loopne
push
inc
dec
sbb
add
push
sub
and
pop
scas
or
orl
dec
dec
add
cmp
add
lcall
mov
sbb
xchg
hlt
sahf
fdivl
cwtl
call
push
inc
stos
mov
ret
add
sbb
js
ss
lcall
fs
enter
push
sub
movsb
repnz
mov
add
fldl
cmpb
dec
bound
pop
in
loopne
jno
xor
stos
mov
adc
and
test
std
jbe
in
add
loop
loope
ficompl
cmp
or
mov
verr
mov
lea
cld
push
add
fiadds
data16
pop
add
aam
and
cmp
and
fmull
pop
insl
sbb
cmp
fimuls
test
mov
adc
mov
addb
add
push
in
scas
cld
loop
dec
test
add
movsb
fimuls
xchg
cmp
daa
pop
gs
inc
push
leave
pushf
pop
mov
add
pop
fdivrs
jge
call
pop
pop
cmp
movb
push
dec
xchg
fdivrs
roll
int
addr16
mov
mov
fstps
sub
repz
mov
repnz
lock
sub
xor
add
imul
mov
jecxz
mov
loop
add
adc
enter
pop
mov
enter
ljmp
and
xchg
out
jp
sbb
lods
movsl
mov
notb
mov
montmul
cmpsb
jmp
cmp
add
in
xchg
and
lahf
inc
add
iret
in
dec
dec
loope
fidivrs
outsb
push
dec
push
mov
rolb
loop
in
out
xchg
add
cmp
sti
stos
sahf
in
fwait
push
adc
call
sub
mov
mov
sbb
jo
add
jbe
jmp
mov
fadd
or
add
ljmp
adc
pop
mov
out
ja
mov
jae
inc
mov
xchg
xchg
push
fs
xor
add
jo
iret
push
sub
push
add
xor
mov
data16
pusha
lods
and
cmpsl
jno
setg
shrb
sub
out
dec
add
jne
loope
sbb
add
pop
cwtl
adc
ficoml
jnp
add
and
repz
nop
or
out
xchg
call
mov
pop
add
dec
shlb
mov
push
ds
add
movsl
inc
add
scas
mov
xor
xchg
ja
pop
jl
andb
adc
and
outsl
xor
into
xchg
jno
icebp
add
and
mov
pop
dec
jns
add
in
dec
add
cs
sub
dec
jae
or
add
rorl
xchg
fmuls
push
add
icebp
xor
sub
rep
xchg
nop
dec
adc
jo
test
cmc
aas
loop
hlt
xor
cmp
adc
sub
push
and
and
xor
jl
sub
jns
mov
movsl
orb
add
aam
sahf
and
pop
push
gs
arpl
and
or
sub
fs
adc
pop
mov
dec
cli
mov
add
xor
add
and
dec
ret
cltd
cli
push
popl
dec
xchg
fst
mov
popa
xchg
cmp
sub
rcrl
fildl
into
mov
fisttps
adc
and
repnz
sub
rorl
sbb
rclb
jb
add
hlt
insl
std
ret
fdivrl
cwtl
mov
cltd
pop
mov
mov
aad
ljmp
jp
inc
push
and
adc
mov
cmpsl
scas
add
lcall
je
jne
xorb
add
sub
dec
pop
jp
out
movsl
xor
jle
pop
dec
push
ljmp
test
and
sub
data16
lcall
lahf
mov
in
add
pop
shlb
inc
push
add
jp
mov
pop
adc
mov
dec
insl
add
dec
inc
xchg
add
int
pop
ljmp
icebp
add
and
lret
vmmcall
fstpl
idiv
add
out
loope
sub
movsb
cmpb
cltd
dec
add
xchg
xchg
add
enter
xorl
repnz
mov
std
movsb
ret
dec
jl
pop
cmp
jb
xchg
xchg
xor
pop
bound
rclb
cmp
sub
push
and
push
gs
aas
pop
loop
idivb
pusha
xchg
mov
xor
sbb
xor
pushf
inc
mov
aas
cmp
dec
add
fldl
dec
int
hlt
and
lock
lret
lds
add
xor
nop
or
cmpsb
adc
ss
xchg
jecxz
out
sbbb
loopne
sbb
xorb
jo
lret
stos
aas
loopne
dec
ja
pop
add
sbb
ficoml
jg
pop
int3
dec
dec
push
mov
shlb
ret
cmp
mov
pop
insl
adc
or
mov
push
stos
xchg
push
adc
dec
in
aaa
adc
call
int
aas
lcall
daa
in
jnp
filds
push
ret
sti
loope
sar
mov
scas
pop
insl
push
stc
hlt
inc
push
iret
dec
jg,pt
cmpb
sub
pusha
movsb
mov
pop
add
mov
out
lods
dec
sbb
jp
nop
flds
jns
xchg
inc
stos
mov
lcall
fistpl
ds
mov
push
shlb
or
sbb
fsub
ret
cmp
rdmsr
sub
jae,pt
mov
nop
push
add
cmp
addl
push
xchg
add
cmp
nop
or
ret
clc
cmp
mov
mov
push
xchg
sub
add
pop
mov
fisttpll
jbe
sbb
mov
filds
pop
pextrw
jg
or
lock
add
dec
ret
roll
add
push
mov
ficoms
add
or
add
orl
test
add
xchg
andb
insb
add
es
xor
xor
dec
xor
add
faddl
xor
dec
in
cmp
sbbb
add
dec
fdivs
mov
add
pop
inc
icebp
iret
out
pop
add
cmp
imul
cmp
mov
jbe
add
test
sbb
push
scas
mov
orl
pop
xchg
test
mov
push
pop
ds
jne
and
pop
xor
lahf
add
push
das
inc
add
rcrb
xor
sbb
pop
enter
inc
and
fidivrl
inc
add
mov
push
inc
pop
mov
sub
mov
fs
push
insb
jmp
lahf
mov
mov
sub
loop
push
add
lock
xchg
into
add
push
lods
push
fstps
adc
call
sub
add
pusha
ss
dec
inc
jge
loopne
je
daa
cmp
cmp
or
in
inc
pop
pushf
dec
or
push
outsl
cmpsb
cmpb
cmc
cmp
pop
popa
add
jnp,pn
add
out
rol
xor
mulb
add
loop
in
bnd
mov
not
test
pop
add
sbb
mov
ss
add
adc
mov
popf
add
sub
lods
loopne
and
add
pusha
rcr
dec
sbb
ror
loope
stos
cmp
or
pop
and
fsts
fidivrs
add
mov
dec
ror
in
mov
or
mov
outsl
xor
mov
push
cmpsl
sarl
add
mov
decl
add
stc
scas
xchg
andb
or
idivb
fsubrl
and
xchg
adc
sub
and
dec
xor
cmp
pop
in
jl
ficoms
cld
or
outsb
mov
sahf
cs
cmp
or
jns
sub
sti
adc
ja
rcr
cmp
and
nop
mov
mov
pop
lret
mov
mov
or
mov
mov
jae
cmp
xor
dec
in
and
add
cli
mov
mov
fwait
push
add
stc
stos
xchg
int3
pop
push
in
lea
pop
cmp
or
mov
mov
inc
cmp
inc
push
pop
xor
xor
and
add
sub
loop
mov
add
pop
mov
push
jae
xlat
inc
add
imul
add
mov
mov
sub
or
pop
fcompl
push
aaa
add
ds
decl
add
rol
and
sti
add
xchg
fwait
out
lock
mov
mov
cmc
movsb
push
mov
ja
mov
repz
pop
inc
add
add
jmp
insb
pop
ret
dec
les
divb
and
decb
mov
aam
inc
xor
jnp
clc
rcll
or
orb
sti
test
loopne
add
sbb
xlat
push
xchg
push
add
mov
rolb
or
mov
mov
dec
ljmp
rcll
cmp
add
mov
sub
cpuid
cs
cmp
inc
adcl
and
and
mov
paddq
cwtl
push
insb
lea
add
and
pop
into
push
inc
addb
xchg
jl
sub
repnz
inc
and
cs
or
adc
loopne
sbb
in
pop
mov
add
lock
sbb
xchg
jge
cmpsb
sbb
loop
dec
ja
mov
icebp
lock
add
adc
lret
es
add
movsb
push
pop
pop
xor
adc
dec
pop
fdivl
adc
out
xchg
shlb
adc
push
fnstcw
cmp
cmp
into
fs
jmp
inc
cld
pop
mov
in
add
aad
mov
xchg
incb
inc
sub
arpl
jg
cmpsb
dec
fldt
inc
adc
fistps
and
add
js
or
inc
fnstsw
stc
js
fimull
push
ja
sub
add
adc
add
jge
test
xor
or
dec
test
enter
fdivs
sbb
push
leave
adc
out
add
in
sti
cmp
ret
je
and
add
add
xchg
ljmp
inc
mov
movsl
cmp
mov
stos
pop
pop
data16
andb
arpl
add
mov
adc
or
mov
addr16
loopne
sbb
xor
sub
mov
and
mov
cltd
jns
cmc
cmp
int
mov
and
xchg
out
aaa
mov
push
dec
inc
xor
push
jmp
jp
add
jo
stc
push
insb
push
sarb
mov
pop
out
js
push
int
sub
inc
mov
add
in
push
aas
inc
add
xor
ljmp
jmp
mov
add
aaa
adc
xchg
cmp
mov
add
lret
or
loop
add
jg
lods
or
push
imul
nop
dec
jl
add
dec
repnz
xor
push
adc
mov
cmp
cmpb
test
xchg
int3
and
add
or
or
scas
mov
fidivrs
push
mov
mov
push
leave
lods
dec
jno
add
inc
add
mov
ficomps
push
push
jp
fistpll
adc
rcll
mov
scas
mov
in
idivb
jb
pop
lock
push
inc
fwait
shll
pop
adc
icebp
insb
outsl
jae
call
and
push
ss
movb
mov
or
add
push
jae
dec
mov
cs
jae
jge
repz
ret
jmp
sbb
dec
mov
in
and
add
xchg
jns
mov
out
fcoms
adc
mov
cmp
pop
or
insb
inc
lods
pusha
ljmp
push
mov
call
arpl
mov
cmp
fistps
add
dec
lods
sbb
cmpsl
add
xchg
fstps
mov
fs
cld
add
bound
out
and
dec
pushf
cwtl
add
out
dec
iret
and
es
add
mov
pop
nop
cltd
loopne
stc
movsl
aaa
add
inc
call
pop
cmp
pop
cmpb
mov
mov
aas
push
fldl
xchg
jae
inc
xchg
sahf
icebp
int3
sbb
sub
out
and
push
mov
inc
js
repnz
add
or
inc
add
rorl
add
sbb
sahf
pop
cwtl
je
sbb
adc
mov
cld
xchg
inc
pop
fs
mov
lahf
add
mov
cltd
mov
test
lods
addb
sbb
je
sbb
shlb
push
pop
lds
push
pop
pusha
dec
inc
leave
dec
sub
sbb
inc
in
flds
mov
mov
in
shrb
mov
inc
testl
sub
lods
loopne
roll
jp
cli
push
and
and
sbb
adc
push
filds
les
cs
nop
or
out
jne
lahf
adc
pop
push
test
mov
inc
or
xchg
push
mov
inc
sbb
je
add
lret
shrl
lds
sbb
int3
lods
adc
mov
mov
pop
lock
or
cld
into
loope
and
loop
test
push
sti
icebp
mov
push
xchg
cmp
fldenv
add
cmp
pushf
pop
add
sbb
jmp
and
add
pop
jnp
insl
cmp
add
dec
add
inc
test
enter
rolb
xor
inc
push
add
xchg
mov
cmp
jae
add
fcomp
sbb
test
push
xor
in
mov
mov
lods
sti
jl
mov
sbb
mov
sbb
and
loop
add
shl
or
jmp
out
xchg
add
dec
test
cwtl
mov
add
and
aas
or
ja
add
rcrl
push
addr16
cmp
or
rclb
mov
imul
adc
add
xchg
add
nop
inc
mov
sub
mov
add
push
inc
cmovge
sbb
inc
mov
mov
sahf
add
and
sub
mov
outsb
sub
xchg
pop
push
jp
add
mov
fwait
into
xchg
in
xor
loopne
js
jo
insl
cwtl
sarb
add
ljmp
adc
scas
shll
int3
rol
in
sbb
repz
add
add
inc
stos
xlat
mov
jg
pusha
add
out
adc
sbb
inc
add
out
add
xchg
xorl
pop
push
cmp
jne
dec
inc
rolb
cmp
xor
mov
repz
out
cwtl
clc
add
mov
jns
add
jns
stos
addb
inc
repz
imul
push
and
or
daa
mov
ss
adc
adc
jns
add
and
xor
dec
xchg
jg
xchg
outsb
loopne
add
sti
xlat
jno
mov
ret
jb
add
rcr
mov
jnp
xchg
sarb
subb
push
into
icebp
divl
fsubrs
add
mov
push
push
aad
jb
add
lret
cli
mov
add
aam
xchg
inc
sub
enter
out
std
rorb
pop
dec
daa
lret
jp
rorl
and
stos
jae
add
cwtl
sbb
rsqrtps
mov
lock
call
test
clc
pop
mov
jmp
loope
cmc
popl
lock
push
in
bound
add
addr16
and
arpl
jo
int3
je
sbb
or
cli
add
inc
inc
mov
in
mov
mov
and
repnz
inc
sbb
add
js
cmc
lea
add
daa
sub
cltd
push
mov
loop
xchg
xchg
pop
repz
push
or
out
lds
add
mov
les
inc
mov
pop
and
pop
cmp
xor
shrb
push
out
xchg
mov
jne
xlat
cmp
movsl
add
lret
inc
mov
cmpsl
adc
xor
loope
jmp
addb
imul
arpl
and
jb
repnz
fildl
pop
mov
adc
mov
addb
pop
cmp
dec
clc
inc
jb
mov
loopne
bound
std
aad
pop
sbb
into
test
aaa
stos
pop
sti
add
out
shlb
mov
sbb
add
mov
aam
add
fbstp
sbb
cmp
pop
mov
sub
add
dec
scas
jb
and
jl
mov
bound
call
cld
out
push
imul
xchg
loope
add
pop
and
popa
add
cmp
xor
int3
cmpsb
or
push
pop
testl
dec
and
mov
add
fldl
pop
fimull
lahf
xor
movsl
xor
hlt
jne
jge
cmpsb
mov
sbb
mov
mov
movb
aas
out
mov
or
pop
push
add
mov
std
jae
inc
lcall
sbb
dec
add
fdivrl
mov
dec
sub
push
sub
mov
in
cli
loopne,pn
call
cmp
push
cmpb
out
pop
loop
clc
dec
adc
and
dec
subb
pop
gs
mov
or
add
mov
or
les
push
or
adc
add
add
and
sub
pusha
jae
add
int3
xor
xchg
mov
ror
pop
in
lock
les
in
jle
mov
cmp
jo
bswap
inc
jmp
and
mov
cld
sbb
or
xorb
xor
outsl
or
push
cld
adc
cmp
aam
mov
int3
sub
lcall
or
imul
mov
xchg
ret
fs
int
sbb
add
mov
push
add
cwtl
adc
call
pop
or
sub
push
mov
adc
mov
mov
mov
inc
rorb
add
lcall
jmp
push
ret
shrl
andb
xor
pop
sub
add
push
mov
int3
js
add
test
jns
subl
pop
roll
sti
adc
popa
add
xor
mov
cmp
and
add
gs
mov
stos
jae
mov
int3
add
push
mov
icebp
add
jae
outsb
pop
shlb
les
or
fdiv
add
call
cs
jae
add
sbb
jns
pop
out
fdivs
dec
jbe
adc
or
pop
sbb
sub
addb
mov
imul
add
cld
xchg
pop
movsb
adc
push
in
mov
mov
outsl
pop
in
or
cmpsl
addr16
addl
jle
mov
stos
jno
add
iret
adc
inc
lcall
xorb
orl
gs
cli
inc
sub
pop
pop
pop
cltd
fmull
aas
push
fs
test
adc
out
add
gs
add
xor
pusha
xor
sub
in
xchg
jae
add
decl
std
add
rcrb
roll
les
and
dec
jno
xchg
loope
icebp
imul
inc
mov
add
in
sbb
cmpsl
gs
shll
pop
dec
in
xchg
xchg
mov
mov
loope
in
add
int3
out
inc
sub
add
jp
mov
loopne
or
popf
dec
jge
xor
aad
mov
notb
pop
clc
sbb
mov
hlt
sbb
mov
add
or
rclb
lea
shll
or
ret
mov
push
and
jp
ja
add
mov
pop
enter
pop
add
loopne
push
hlt
repnz
add
out
pop
lret
dec
cwtl
jp
add
ror
add
mov
mov
add
movsl
out
xchg
push
cs
outsl
mov
lds
in
sub
cmpsl
cmp
aaa
add
and
and
lret
or
shll
add
lods
scas
sub
shll
xchg
je
js
test
add
jae
adc
loopne
mov
pop
xacquire
add
add
mov
ds
mov
rcrb
inc
test
out
add
test
xor
pop
add
hlt
mov
mov
add
push
out
jp
mov
mov
jns
sub
pop
mov
cmp
lock
xchg
call
sub
out
lds
popf
sub
and
jne
mov
shlb
xchg
call
xchg
push
sbb
insb
push
sbb
pop
pusha
xor
addr16
xchg
in
mov
out
xor
imul
push
in
popf
sbb
sub
fdivs
sub
mov
mov
mov
and
mov
pop
xchg
pop
push
mov
bound
enter
stc
ds
adc
adc
outsb
shlb
sbb
pop
addl
inc
xlat
add
pop
jae
add
sbb
mov
pushf
cmp
out
lock
loopne
fs
or
mov
stos
cmp
ss
adc
jns
push
mov
jle
scas
pop
push
add
mov
add
fstpt
pop
add
repnz
add
mov
dec
mov
fcomi
or
lock
jp
in
stos
sbb
lds
xchg
fsub
jge
mov
push
xlat
fldl
xor
pushf
mov
push
cld
sahf
fcomi
lds
nop
orb
add
adc
movsb
stc
inc
mov
cmp
lahf
out
cmp
aam
or
cmp
xor
xor
icebp
add
lds
inc
inc
mov
xchg
int
and
xchg
mov
and
dec
test
movsl
das
xchg
add
mov
pop
xor
movsb
out
sti
fstl
fs
ficomps
out
or
pop
fldl
test
cli
xor
pop
aam
push
aas
push
addb
pop
lock
or
cmp
mov
fnstenv
add
jp
pop
push
mov
xorb
cmp
or
jae
test
and
xchg
or
test
cli
and
aam
lcall
adc
stos
add
xor
in
adc
rolb
rcll
fisttpl
and
dec
loope
mov
in
push
push
cwtl
cs
test
xor
adc
or
inc
xor
hlt
add
dec
add
fiaddl
leave
loope
add
loopne
xchg
cmp
cmpsb
movsl
and
lret
mov
orb
adc
xor
or
mov
in
push
fwait
add
dec
jo
add
or
jg
inc
sbb
rorb
mov
or
mov
pop
adcb
add
sbb
pop
xor
fnsave
push
add
scas
xchg
enter
cmp
cmp
enter
add
cmp
sbb
sub
mov
stc
fildl
scas
testl
ss
fcmovu
or
call
fsts
pop
add
push
cmc
inc
mov
enter
cmc
decb
and
jecxz
pop
add
inc
jbe
cmp
inc
or
js
jno
sbb
cli
ljmp
hlt
xor
dec
aad
add
push
frstor
dec
cmp
mov
or
inc
iret
scas
jge
shrb
add
outsb
stc
cmpsb
test
pop
pusha
cltd
sbb
add
jne
pop
mov
add
adc
jge
lea
cmp
add
dec
sbb
cmp
cmp
xchg
dec
icebp
and
scas
mov
xlat
jb
popa
cld
leave
fwait
aas
mov
add
jl
push
jmp
pop
cmp
cmp
popa
hlt
xchg
enter
aas
xchg
out
add
xor
cmp
sbb
mov
mov
inc
sysenter
shlb
pop
adc
sub
in
sbb
push
loope
mov
bound
shlb
add
fdivs
fmulp
iret
xchg
dec
pop
dec
adc
jp
push
out
jg
dec
jno
sbb
mov
adc
push
cwtl
jns
mov
cs
mov
xchg
xchg
mov
mov
jle
cmp
lret
jo
in
add
and
sbb
add
nop
sbb
mov
adc
loop
out
or
or
mov
gs
xchg
pusha
cmp
add
imul
inc
mov
and
xor
in
out
sub
out
mov
xor
out
fcompl
push
insl
mov
mov
add
mov
into
mov
cwtl
jae
sbb
jp
inc
dec
add
sahf
jo
pop
fs
add
cli
addr16
add
sbb
js
xchg
cmp
mov
mov
push
sub
loopne
int
mov
ficoml
xor
icebp
add
adc
cld
or
int3
negb
dec
das
push
in
in
js
in
pop
bound
inc
cltd
out
repnz
lret
loopne
push
fcompl
jp
lahf
pop
cli
pop
push
outsl
add
inc
sub
add
jmp
inc
xchg
js
movsb
add
in
dec
xchg
mov
roll
sar
pop
cmc
cld
leave
add
add
loopne
addb
jl
mov
jne
rorb
add
scas
or
add
fmuls
xlat
add
cs
mov
add
xor
push
push
popf
je
or
xchg
jmp
movsb
sub
orl
mov
add
into
hlt
sub
out
add
and
jp
nop
aad
out
cmpsl
sbb
add
add
in
sbb
fisubrs
add
leave
stc
sahf
jns
add
loope
cmp
test
dec
push
fcmovb
mov
gs
lock
and
and
add
jecxz
pop
add
push
cmp
jp
adc
lcall
add
lods
std
xchg
stos
subl
imul
and
jo
cmpsl
cmc
add
pop
out
sbb
lahf
hlt
into
int3
das
lock
add
enter
loope
xor
daa
stos
inc
xor
mov
jg
add
cmp
or
fwait
outsb
in
in
add
ja
in
jo
pop
dec
mov
lcall
in
movsb
insb
pop
sbb
jle
cmpsl
je
sar
iret
lods
lock
mov
aas
add
cmp
xchg
xor
sbb
adc
pushf
mov
and
imul
lods
cmp
add
add
pop
and
mov
jae
pop
and
mov
lahf
or
lock
jmp
arpl
jne
pop
inc
push
push
pop
inc
jo
push
repz
in
add
lea
test
jmp
testb
ljmp
add
add
jge
sbb
int3
jg
adc
in
cmpsl
cmpl
add
pop
test
dec
inc
or
cltd
sbb
mov
sub
cmp
mov
out
inc
or
shll
dec
loope
sub
sub
inc
lea
adc
rol
mov
xor
ljmp
mov
xor
jmp
lahf
add
js,pn
dec
imull
pop
lret
divb
test
adc
xchg
add
in
xchg
add
mov
in
inc
inc
add
jmp
aam
sbb
leave
ds
inc
jns
inc
fsub
cmp
les
mov
pop
xor
push
adc
mov
test
or
in
push
fadds
ret
push
rclb
inc
je
sahf
jb
add
inc
push
dec
andb
xlat
ja
adc
sub
fisubrl
setns
add
push
or
mov
dec
imul
shrl
sub
add
push
lds
adc
jb
adcb
cmp
insl
pop
add
roll
imul
add
not
sbb
push
iret
pop
xchg
cltd
test
add
fldl
add
shrl
les
add
push
jbe
adc
xchg
mov
jg
cmp
or
xchg
js
int3
add
shr
or
clc
mov
xchg
xchg
negl
mov
jg
add
dec
jle
pop
pushf
cmc
hlt
xor
test
shl
mov
xor
aas
aas
sahf
mov
fst
pop
xor
add
xor
imul
push
inc
pop
pop
shl
clc
rep
sub
xchg
sub
fistpl
loope
pop
aaa
add
mov
mov
inc
mov
icebp
pop
inc
stc
inc
mov
jmp
cmp
orb
movl
ss
mov
add
xchg
loop
outsl
cmpsb
mov
pop
jl
leave
out
lock
cld
pop
mov
add
cwtl
push
insb
add
sub
pop
push
test
jns
aam
dec
imul
xchg
jne
add
xchg
popf
xlat
pop
mov
dec
adc
sub
xchg
jae
adc
jp
or
adc
inc
clc
insb
jns
outsl
sbb
ds
pcmpgtd
sub
clc
dec
addb
cli
test
in
aaa
out
aam
loope
shl
adc
sub
imull
add
sub
movl
fs
outsb
mov
add
add
mov
xor
mov
pop
adc
add
out
rcr
dec
int3
jle
add
inc
add
inc
push
push
jbe
fidivrs
sbb
xchg
les
fwait
data16
loop
sbb
adc
cmp
xor
jb
ds
add
cmp
push
icebp
dec
jae
sahf
add
and
aaa
fwait
jecxz
add
outsb
pop
aad
icebp
imul
push
subb
mov
cmc
dec
mov
jl,pn
and
jecxz
xchg
or
lock
loope
loopne
rcrb
sahf
sbb
adc
add
pop
fidivl
hlt
add
aas
fs
data16
cld
add
jmp
stos
add
ja
mov
xchg
jg
add
jecxz
jnp
stc
mov
push
push
xchg
repz
mov
sahf
add
divb
in
jae
adc
push
add
outsl
add
out
xchg
add
pusha
and
out
mov
outsl
xchg
xchg
cmp
cmp
or
mov
pusha
dec
and
xchg
mov
mov
loopne
push
push
je
das
add
decb
xchg
adc
cmp
fidivs
popf
cli
jo
mov
sub
dec
or
sub
pop
mov
movsb
ja
add
outsb
addr16
push
xor
cs
xor
pop
std
xor
push
scas
add
or
lods
xchg
popa
repnz
lods
pusha
cs
test
inc
lea
pop
sub
pop
rsqrtps
jp
adc
cmpsl
xchg
jne
inc
adc
xchg
add
lret
fcmovu
mov
and
aad
sbb
in
stos
pop
shlb
clc
lods
dec
adc
es
add
test
jl
or
or
mov
idivb
sbb
in
icebp
and
xchg
js
jl
pushf
push
adc
rol
xchg
loopne
fildl
xor
fsubrp
insb
add
gs
leave
pop
aam
xlat
add
outsb
out
pop
add
pop
inc
pusha
mov
ds
mov
aam
fidivrs
dec
enter
imul
adc
or
cmp
pxor
inc
sub
hlt
cwtl
add
jl
rolb
jle
and
pop
cmp
add
aad
xchg
cli
mov
or
jmp
xchg
jo
add
jmp
inc
sub
incb
dec
and
jecxz
in
or
pusha
add
movsb
lret
jl
pop
add
add
sahf
arpl
fiadds
xchg
adc
mov
push
sub
divb
mov
add
in
dec
mov
ret
insl
aam
cmp
aaa
lods
add
rorl
ja
rclb
add
sti
push
jnp
rorl
add
rcrb
sbb
pop
inc
push
add
push
xchg
scas
pop
ss
sbb
repz
xor
mov
je
add
mov
js
lds
outsl
add
sti
mov
mov
iret
push
loopne
aam
pop
aaa
inc
xlat
cmp
popf
pop
mov
add
or
xchg
add
pusha
jns
lds
cmp
lods
mov
inc
fcoml
push
xlat
loope
push
add
out
ds
arpl
jg
dec
pop
mov
sti
add
add
fdivrs
add
fwait
mov
rcll
shl
out
and
add
lea
fadd
shrb
add
flds
mov
inc
cmp
cmp
push
xchg
push
clc
mov
in
xchg
add
fmuls
dec
sub
aad
xor
fcoml
lldt
mov
dec
js
std
jge
add
sahf
or
and
add
and
xor
mov
bound
add
inc
xchg
cmpsl
or
inc
inc
cmp
add
sub
add
dec
iret
cmp
cwtl
pop
jno
sbb
lret
pop
add
inc
fadd
adc
push
jb
push
add
sub
fucomi
shrb
jmp
hlt
add
jae
in
loope
hlt
add
mov
out
lods
pop
add
dec
pop
jle
pop
add
cmp
dec
mov
pop
nop
add
push
lcall
xor
pushf
movl
lock
sahf
loope
add
cmp
jle
rclb
punpcklbw
sbb
out
mov
cs
add
orl
ds
jns
and
mov
add
jne
in
xor
jg
add
pusha
dec
scas
inc
pop
leave
add
jp
addl
pop
mov
adcb
fstps
andb
subb
lock
loop
and
add
jno
in
outsb
xlat
xchg
cwtl
jns
repz
mov
scas
testl
push
mov
mov
dec
add
mov
cltd
lcall
push
and
cmp
xor
fldenv
sub
mov
mov
jge
push
pusha
xor
fnstsw
sub
add
jne
cs
inc
les
ds
sbb
shrb
ret
xor
xchg
out
cmp
xor
jmp
pop
fisubs
mov
jbe
in
lcall
loop
jmp
rolb
imul
and
clc
adc
jns
sbb
add
loopne
clc
jg
xor
sbbl
ret
lds
add
jno
cltd
arpl
or
mov
fidivl
xor
sti
and
push
pop
add
stos
orb
adc
popf
jecxz
adc
add
ret
add
test
or
lods
mov
mov
add
cmp
mov
sbb
and
mov
pop
rolw
js
xor
cli
jg
pop
add
jmp
rcl
adc
call
add
sbb
xchg
movsl
xchg
push
ljmp
cwtl
add
adc
repnz
js
inc
xlat
xor
or
add
adc
addb
pop
push
cwtl
int
sbb
adc
or
jne
xchg
shr
testl
ja
or
mov
cmp
push
add
xor
in
fisttps
das
add
ljmp
out
mov
clc
add
je
cmp
imul
cmp
lock
lahf
sub
sbb
add
inc
loopne
leave
mov
adc
test
sub
cmp
add
fwait
pusha
lea
pop
outsl
sti
in
rcl
aad
sbb
std
mov
jo
add
out
sub
xor
add
mov
and
adc
push
add
pusha
cmp
xchg
fst
incb
outsb
daa
xor
cmpsl
shrb
mov
in
or
insb
add
pushw
cwtl
mov
cwtl
cld
mov
mov
enter
insl
test
sbb
mov
faddl
lret
inc
cltd
outsl
inc
loope
imull
nop
add
mov
ret
lods
jge
mov
or
ja
add
xor
dec
sbb
fldt
add
add
sub
jl
or
adcb
in
add
sti
faddp
sub
outsl
or
or
sbb
insb
loope
shlb
add
mov
add
fs
sahf
adc
fsubs
mov
mov
push
imul
xchg
fs
push
outsb
fwait
scas
add
cmp
add
push
das
push
mov
pop
enter
repz
xor
add
jmp
idivl
lret
fidivs
mov
pop
stc
out
pop
dec
jecxz
out
pop
push
sub
mov
dec
orl
add
mov
scas
add
cs
xor
jno
or
mov
add
push
sbb
add
add
outsl
mov
nop
mov
adc
cmp
int3
add
jae
sub
loop,pn
mov
nop
leave
adc
add
and
cmp
fnstcw
fldl
inc
adc
add
push
mov
pop
fcoms
add
out
rep
xlat
out
xor
ja
fdiv
add
dec
pop
mov
xor
cmp
mov
sbb
sbb
cmp
lods
inc
pop
dec
and
lret
add
fdiv
loop
jns
sarb
movsb
jge
aad
or
test
add
std
flds
push
jns
add
push
add
adc
mov
sub
into
or
xor
in
ss
xor
jno
cld
js
movsb
add
cmp
outsl
aam
push
pop
xchg
add
cmp
mov
add
jl
sub
fsubl
xor
sti
inc
jge
lret
clc
movl
insb
xchg
lret
ret
and
inc
cmp
enter
into
out
add
sbb
les
imul
fs
pop
rcr
aas
js
and
ret
mov
sbb
xchg
xlat
pop
xorl
test
cmp
sbbb
or
mov
sbb
xor
daa
jecxz
pop
sub
push
add
jle
clc
xlat
lcall
mov
pop
add
popa
dec
add
dec
fninit
scas
aam
or
pop
stc
push
mov
pop
scas
dec
pop
xchg
add
mov
mov
js
hlt
inc
mov
sbb
lods
pop
lahf
dec
add
insb
xor
outsb
arpl
sub
add
add
add
popf
das
and
insl
data16
sbbl
loopne
iret
mov
cmp
sub
jo
hlt
add
and
aam
clc
test
leave
rcrl
or
loopne
jbe
jae
push
lret
cwtl
push
jge
cmp
jne
loopne
mov
ss
dec
push
add
adc
mov
in
push
mov
sub
mov
sub
test
xchg
push
inc
stc
dec
leave
sbb
ret
push
mov
roll
pop
add
or
jae
add
loope
sbb
orl
mov
add
not
test
cmp
fstpl
push
or
xor
jg
cmp
jp
insl
aam
fmull
icebp
daa
shlb
cmp
aaa
add
adc
imul
data16
and
dec
mov
add
jno
ds
sbb
add
mov
mov
mov
pushf
add
inc
fs
outsl
cs
ds
mov
test
pop
nop
pop
popf
out
add
push
inc
lds
rorl
ret
int3
inc
call
sub
dec
pop
push
shr
and
jb
add
sbb
jbe
out
xor
repnz
xchg
icebp
pusha
xor
pusha
imul
movsb
subl
cltd
push
add
popa
imul
aas
sub
mov
add
popf
enter
add
mov
test
loop
cmp
or
push
dec
js
in
testl
push
push
xchg
in
cmp
dec
rcrl
mov
pop
mov
cmpsb
rcll
push
inc
cmp
ds
das
push
pop
xor
jo
lods
mov
vmread
inc
stos
add
repnz
add
add
ret
mov
or
add
inc
sbb
outsb
popa
int3
xchg
push
or
inc
adc
push
inc
dec
mov
negl
int
push
mov
add
sub
mov
fldcw
test
xchg
cmp
push
xchg
add
push
jmp
lret
sbb
push
cwtl
push
inc
mov
loop
pop
stc
test
xor
add
inc
xor
nop
and
roll
jg
stc
xchg
mov
adc
jl
adc
mov
inc
dec
adc
lea
rclb
mov
cld
lret
sbb
sbb
cmp
cmp
call
jno
or
hlt
test
sti
add
mov
roll
xor
loope
out
push
cwtl
in
mov
ret
fcoms
add
dec
xor
xchg
xchg
addl
mov
movsb
scas
roll
xor
jecxz
xor
adc
js
pop
add
stc
xor
test
lods
add
scas
jl
outsl
jmp
and
jno
xchg
ret
inc
popf
jnp
sbb
mov
negl
andb
pop
outsl
jb
repnz
add
imul
pop
lods
jo,pt
scas
add
jmp
sub
jne
pop
aad
jp
jmp
orl
test
inc
fwait
or
adc
mov
push
adc
dec
ret
jmp
out
jge
add
pop
add
xorb
sti
insb
ret
add
es
adc
cld
mov
add
fisubrs
outsb
and
fadds
fimull
add
pop
mov
mov
adc
xor
out
lahf
mov
add
cmc
sbb
stos
jne
or
shlb
or
jmp
out
xor
cmp
push
push
push
call
cmc
lret
push
mov
adc
jb
cmp
hlt
lods
jg
add
das
jp
push
test
push
dec
xchg
adc
loopne
cmp
mov
mov
jg
push
sti
int3
push
inc
push
mov
xor
add
and
adc
xor
ret
pop
scas
add
mov
add
jle
add
push
or
xor
fmuls
adc
add
dec
xchg
sbb
jo
mov
sub
dec
fldl
inc
int
outsw
fiaddl
add
push
movsl
pop
mov
shl
adc
lea
adc
paddb
push
out
pop
imul
sar
and
add
cmpsl
lds
js
sub
jno
sub
stc
dec
xchg
in
hlt
add
push
xchg
or
add
vcvtps2pd
jge
push
adcb
add
mov
and
stc
stos
loop
ja
mov
in
add
xlat
scas
or
and
mov
pop
add
jge
and
mov
rcl
lds
es
inc
mov
inc
ret
mov
scas
xor
cmp
cmp
push
in
push
mov
shrb
lcall
jl
insb
outsl
xchg
sub
fadds
push
sbb
lock
testb
sbb
and
pusha
cwtl
stos
add
ret
push
cmpb
das
inc
aad
xor
add
or
adc
jns
cltd
inc
mov
sub
enter
and
lea
hlt
or
xchg
cmc
jmp
cld
add
fisubrl
insb
test
cmp
pop
call
les
jnp
cmpsb
add
shll
insb
xchg
pop
inc
add
ret
stos
sbbb
cs
push
dec
daa
ret
xor
cmp
add
pop
cwtl
clc
or
loopne
pusha
dec
cmpb
add
inc
inc
ss
lcall
add
adc
arpl
sbb
rolb
mov
test
push
hlt
clc
add
sbb
push
call
push
add
inc
sbb
data16
and
xor
sbb
xor
icebp
jmp
cli
cmp
pop
xor
enter
xor
mov
jnp
cmp
test
add
pop
mov
lds
mov
stos
cmpsb
addl
add
push
outsb
adc
sbb
imul
cmpsl
pop
js
xchg
add
mov
fstpt
mov
hlt
test
add
sbbl
cli
xchg
aad
les
push
inc
inc
or
jecxz
lahf
pushf
js
inc
or
cli
push
add
mov
aam
cmp
adc
repnz
jp
push
sub
jnp
cmp
sub
pop
push
adcb
shrb
subb
or
fcmovnbe
sub
mov
cli
jg
orb
sbb
and
mov
pop
sbb
add
loopne
bound
lock
movsb
sbb
and
dec
test
add
add
or
idivb
pop
lahf
sbb
add
mov
add
mov
sub
xchg
mov
loop
add
fwait
push
cmpsb
mov
jne
jp
add
inc
xchg
dec
loop
add
pusha
adc
addb
arpl
imul
pushl
add
movb
adc
push
and
mov
iret
sbb
repz
or
inc
jge
or
shlb
sbb
ret
sti
jmp
jecxz
sub
mov
fildll
add
bound
mov
fmull
sti
loop
enter
xchg
sbb
aad
leave
ret
pop
add
jae
incl
inc
lea
enter
add
lcall
insb
or
pop
mov
cmpsl
aad
stc
add
jo
mov
inc
jns
xchg
add
or
loop
sbb
test
cmp
add
dec
sarb
cmpsl
jnp
push
xor
and
mov
pop
std
out
sub
js
add
nopl
xor
adc
fwait
pop
push
pop
je
jb
sti
test
mov
mov
mov
sahf
cwtl
and
jl
mov
and
add
rorl
je
fstps
in
adc
cwtl
push
sbb
mov
xchg
jb
lea
mov
ret
mov
jp
add
cltd
fsubrs
add
sub
jae
or
test
push
fs
dec
lcall
dec
cmp
rorb
in
ret
aas
sarl
pop
fwait
mov
orl
mov
imul
inc
stos
nop
loope
mov
fistpll
in
in
add
pop
and
xchg
add
pop
pop
or
popa
call
xchg
sarb
push
loope
add
xchg
jnp
test
imul
add
testl
nop
enter
sub
xchg
roll
adc
fs
push
decl
js
shrb
push
out
mov
lods
add
add
leave
jge
adc
mov
jne
dec
js
or
jl
pop
or
les
inc
aad
das
push
mov
shll
in
mov
sub
roll
jo
mov
cwtl
stc
push
int
cmp
add
cmp
stc
sub
and
shl
mov
sub
jecxz
and
xchg
inc
add
push
jnp
shlb
add
mov
jmp
sub
cld
loope
cli
cwtl
or
push
in
pusha
jl
jne,pn
and
fmul
pop
mov
loopne
mov
lock
push
out
mov
scas
mov
loopne
movsb
inc
pushf
add
mov
pop
mov
ret
lret
dec
adc
add
cwtl
adc
pop
sub
add
pop
push
and
xchg
loope
xor
gs
cmpsl
call
popl
dec
or
aaa
aas
push
jno
sub
popa
push
arpl
sub
mov
jae
xchg
sub
stos
xor
lock
adc
push
inc
test
cmp
or
or
add
cld
sub
rol
add
dec
popf
ljmp
pop
dec
les
inc
js
xor
rolb
mulb
mov
cmc
lock
test
les
nop
addr16
or
jmp
imul
push
push
sub
sub
lock
jne
add
fisttpl
sahf
ljmp
inc
test
jo
inc
sbb
out
insl
add
rol
stc
fistl
fsts
inc
popf
dec
out
testb
das
jle
sbb
insl
jg
add
xchg
ja
jmp
hlt
dec
faddl
fnsave
enter
out
movd
xor
add
pushf
and
dec
insb
jl
mov
test
jmp
mov
push
inc
xchg
dec
add
push
add
jl
sbb
je
add
ds
mov
mov
pop
in
pop
push
add
mov
ret
in
xlat
imul
mov
scas
jnp
ja
sbb
push
jo
sbbb
push
data16
xor
mov
adc
mov
pop
mov
icebp
xlat
sub
aam
mov
jns
or
adc
pop
popf
sub
fwait
call
xchg
xchg
xor
add
lfs
push
adcb
mov
or
mov
mov
lock
daa
leave
cld
add
mov
or
push
cmp
sbb
xchg
pop
sbbb
xchg
xchg
shl
adc
mov
clc
stos
jnp
lds
jb
xor
push
cs
mov
repnz
add
fimull
hlt
ds
inc
add
in
push
dec
cmp
std
mov
mov
push
add
nop
inc
xor
add
mov
dec
cmpps
adc
pop
lods
xor
repnz
in
xor
mov
pop
pop
popa
fldz
cmp
roll
push
sbb
out
rcl
inc
or
insl
xlat
jmp
lcall
sub
or
mov
inc
push
sub
dec
push
lahf
ud0
sbb
shlb
jp
mov
mov
call
movsl
and
sbb
cmp
or
rcrb
lods
ja
test
orb
add
ret
movsb
sub
jecxz
adc
jp
insb
inc
mov
push
mov
lahf
sbb
or
test
jecxz
loope
js
or
dec
in
enter
lret
mov
add
fstpt
mov
pushf
push
mov
aas
jp
add
ds
mul
cld
mov
inc
push
jle
loopne
pop
xlat
add
add
scas
loopne
cli
add
int3
mov
xchg
sub
outsb
add
push
ja
lods
cltd
sub
rcl
int
popf
and
leave
pop
das
add
xchg
sub
fldl
adc
movaps
test
bound
clc
rolb
lods
add
fadds
mov
jnp
push
cmpl
lahf
mov
in
data16
mov
nop
add
mov
loope
add
jl
minps
stos
mov
or
les
mov
sbb
dec
cwtl
sub
rcrl
sub
push
xchg
adcb
xchg
xor
adc
loope
insl
dec
add
lock
sti
inc
push
or
inc
std
fnstcw
mov
inc
mov
insb
movb
mov
lea
sub
mov
mov
popf
mov
add
ss
add
mov
mov
loop
sbb
mov
testl
addb
outsl
push
cltd
inc
mov
ja
pop
or
rorb
int
psubusb
ss
add
sarb
or
mov
iret
jno
es
shll
lcall
std
rcrl
cmpsl
out
test
push
jmp
pop
shlb
add
shlb
add
jecxz
sbb
cmpb
mov
scas
sub
pop
js
cmpsb
clc
inc
add
and
movsb
mov
mov
cmp
fistpll
or
aad
shrb
and
into
or
pop
mov
push
lea
inc
adc
adc
ficoml
mov
and
dec
push
adc
and
ret
pop
sub
and
inc
jp
jg
mov
adc
out
outsb
jns
adc
lret
push
or
insl
xchg
add
mov
or
out
mov
mov
repz
fimull
push
push
mov
rcll
cmp
add
and
lahf
add
add
addl
push
pop
in
enter
clc
inc
xchg
xor
xor
mov
add
inc
scas
mov
adc
add
add
or
pop
add
cmpsl
test
roll
fstpt
std
adc
mov
mull
cmpb
fadds
loop
fs
les
pop
in
lods
mov
add
cmp
add
jnp
inc
shll
insb
pop
and
add
push
and
dec
adc
and
push
inc
stos
inc
ds
xchg
out
jnp
lret
loopne
stos
and
fcomi
pop
out
pop
jmp
subb
es
in
test
dec
fs
jb
sbb
adc
fcoml
adcb
lds
inc
or
push
add
int3
mov
clc
cld
aad
rclb
dec
xor
imul
add
jg
push
adc
clc
icebp
jo
xchg
psubd
sub
nop
loopne
adc
mov
mov
xchg
jo
mov
flds
lahf
out
cmp
push
addb
das
add
lds
push
add
imul
jge
or
pop
push
sub
cmp
lds
insb
pop
jns
sub
xor
fdivs
gs
add
enter
imul
subb
rcrl
xorb
jl
out
or
cmp
es
xchg
inc
jmp
sbb
add
cmp
add
xor
rorl
cmp
adc
add
mov
push
mov
add
pop
cwtl
orb
in
std
jns
push
push
jo
mov
mov
add
add
or
clc
arpl
and
cmp
insl
or
add
mov
push
iret
repz
mov
nop
cs
sbb
js
mov
and
inc
js
add
jg
out
add
push
enter
insl
add
dec
lcall
mov
mov
sbb
add
sahf
add
mov
jo
sub
test
jo
aaa
fistpll
add
testl
pusha
pop
mov
cmpb
test
inc
enter
add
leave
jne
mov
daa
popf
add
decb
mov
or
add
pushl
jns
and
dec
leave
sbb
inc
jbe
inc
xchg
in
xchg
bound
dec
push
and
not
lock
call
das
adc
lahf
je
lcall
pop
js
rorb
aaa
inc
mov
cwtl
sbb
andl
setns
imul
push
or
lret
pop
inc
mov
add
xchg
daa
leave
xchg
pop
rcll
fidivrs
mov
repnz
mov
push
in
out
shld
push
fsubl
test
add
push
push
orb
xor
pop
and
inc
sarb
jp
add
mov
insl
cmp
add
or
addl
es
xlat
and
sbb
std
shll
ja
fidivrl
adc
mov
mov
stc
sbb
in
pop
add
stos
inc
fisttpl
lcall
ljmp
lret
cmp
dec
lds
bound
les
push
push
jmp
shr
dec
cmp
mov
into
xchg
outsb
call
fdivr
add
mov
add
sub
add
inc
adc
pop
les
pop
and
push
add
shlb
pop
add
mov
ret
sarb
push
mov
sti
inc
sbb
add
xchg
cltd
jae
jns
int3
push
jmp
jo
repz
push
add
rol
mov
inc
add
imul
fiaddl
stos
repz
pop
xchg
arpl
sbb
cld
movl
sbb
test
inc
xchg
jnp
loopne
add
jbe
lods
push
fstl
dec
movsl
add
repz
or
out
jmp
ds
call
and
mov
cli
fiadds
add
addb
xor
sbbb
in
jge
push
stos
in
xchg
pop
mov
lahf
aaa
test
jl
idivb
add
leave
jle
repnz
and
push
dec
out
add
xchg
or
scas
jmp
fsubs
push
push
rclb
cmp
mov
aas
ja
push
leave
arpl
scas
mov
into
jne
fldcw
add
adc
in
sbb
inc
sbb
xchg
mov
or
lret
cmp
mov
iret
pop
cmp
shrb
or
add
or
loope
stos
aad
cmp
xor
jb
pop
add
push
test
lock
fst
lea
cmp
add
mov
add
test
filds
jle
sbb
inc
or
mov
scas
shll
out
push
mov
sub
sbb
loope
inc
push
bound
xlat
xchg
int
jo
add
push
insl
dec
and
adc
lcall
faddl
arpl
push
insb
hlt
cmc
jle
push
add
sbb
inc
fsts
je
add
fisttpll
mov
fwait
in
loop
fadds
push
in
rcrb
adc
mov
inc
ret
or
jmp
sti
add
lahf
loopne
cmc
push
and
addb
xchg
jns
add
stc
push
xchg
mov
pop
mov
add
rcrb
inc
add
cwtl
jnp
jb
inc
inc
stc
stos
inc
loopne
and
add
cmp
add
sti
mov
str
aas
cmc
stc
shrb
xchg
add
add
cmp
lds
test
fwait
cmp
jne
jg
xlat
fnstcw
xchg
xchg
xchg
adc
loopne
inc
in
jno
sbb
pushf
mov
lods
daa
hlt
add
stos
jo
add
cwtl
xchg
pop
push
mov
mov
inc
ret
pop
test
fs
add
add
xchg
lock
divl
mov
unpcklps
imul
jg
roll
addr16
mov
pop
rolb
xor
out
addl
out
push
sbb
jecxz
fidivl
repz
xchg
ljmp
imul
popa
xchg
pop
push
mov
inc
and
shll
mov
popa
jnp
xor
jp
adc
push
mov
hlt
int3
fs
add
push
outsb
addr16
pop
dec
push
xor
or
in
add
lret
add
or
sahf
mov
ds
xor
push
in
mov
fwait
cwtl
push
add
cmpsl
mov
add
add
inc
test
sbb
popf
sbb
outsl
sub
pop
jmp
test
mov
adc
add
add
cmpsb
inc
push
loop
lahf
dec
movsb
pop
jle
add
stc
or
mov
bound
cmpsb
jne
pop
jbe
xor
dec
jl
movsb
pop
add
aaa
add
popa
nop
add
incl
jne
cmc
and
pop
add
stc
test
lock
jb
mov
fdivs
gs
and
outsl
add
shl
imul
out
enter
lcall
pop
add
pushf
jle
lret
pop
mov
cmp
ret
xor
jo
add
sarl
push
and
js
dec
push
jns
mov
add
ret
in
add
ljmp
add
es
popa
aaa
cli
jno
push
ret
xchg
sbb
dec
mov
xor
inc
test
icebp
das
and
add
imul
add
lcall
push
inc
stos
and
pushf
pusha
add
mov
add
mov
inc
rolb
and
shl
adc
add
inc
mov
lods
cmp
subb
test
push
out
mov
push
lahf
add
add
aaa
fcoms
rcrl
sub
cmp
add
mov
ja
mov
scas
xlat
js
push
pop
xchg
and
add
and
fildl
test
sbb
popa
and
fildll
dec
jo
data16
loop
pop
imul
add
push
fcoml
cmc
push
mov
push
out
xor
lods
add
dec
je
or
cs
mov
sub
pop
lret
pop
xchg
xchg
shrb
inc
rcr
cmpb
push
and
test
sti
pop
cmp
stc
dec
add
xor
imul
test
jecxz
loope
clc
adc
popl
xor
mov
mov
and
mov
mov
movsb
in
add
rcl
push
adc
in
mov
loope
sub
add
xor
or
dec
movsb
lahf
add
bound
dec
or
loopne
fsubs
roll
test
pop
stos
aam
enter
loopne
nop
std
dec
fsubs
cmp
mov
jp
add
or
sahf
add
cmp
repz
fs
test
testb
jns
outsl
ret
mov
add
pop
aad
or
cmp
add
out
in
add
mov
ret
mov
push
js
faddl
fiaddl
mov
fdivl
push
lret
rcrb
xor
add
xchg
stos
orl
add
pop
adc
add
outsl
gs
lret
imul
cmp
or
fdivs
lret
add
pop
scas
xor
inc
add
arpl
cmp
addb
divb
and
xchg
hlt
cltd
lds
add
add
add
sahf
push
jl
jge
xor
inc
faddl
rol
clc
sub
jbe
add
arpl
ret
jle
add
aad
test
xor
dec
push
loopne
or
aam
hlt
sbb
add
cmp
fdivrl
sbb
insl
out
push
ret
add
sar
mov
dec
add
jo
and
jl
pop
cli
mov
add
je
aam
repz
addb
sbb
cwtl
lods
push
nop
sub
mov
or
lock
add
incb
imull
mov
adc
into
fdivr
sbb
add
inc
mov
repnz
popl
sbb
xchg
inc
jge
stc
adc
lock
add
add
adc
ja
pop
shll
and
push
mov
stos
sub
add
imul
pop
xchg
loopne
jno
in
add
or
aam
mov
lea
mov
add
push
cmpsb
insl
push
dec
aam
addb
rorb
in
pusha
pop
xor
lret
cmpsl
or
jg
dec
les
movsb
pop
or
lcall
mov
nop
gs
sbb
int
and
push
lret
sub
mov
add
cmp
push
sahf
fadd
jp
rcll
dec
repnz
inc
xor
xor
lahf
push
sub
fucomip
mov
popa
dec
xor
jno
add
iret
adc
xor
xchg
cmp
and
enter
das
sub
xchg
jno
daa
jnp
and
pop
pop
add
imul
shrb
xchg
xchg
and
jl
or
hlt
sbb
lcall
xor
push
lds
xchg
addb
fldenv
mov
xchg
add
cld
sub
sub
pop
loopne
push
inc
fucomip
pop
test
lret
push
rcrl
and
or
add
sar
mov
sbb
xchg
sbb
add
rclb
cld
jl
sbb
jp
sbb
inc
push
sbb
push
loopne
testl
fsubrl
hlt
mov
or
xchg
stos
lcall
mov
inc
cmp
xchg
call
sub
dec
push
xorb
psubw
into
and
jl
xchg
add
sti
push
xchg
xor
xor
pushf
pop
xchg
push
mov
inc
out
push
add
push
clc
xor
roll
es
jno,pt
test
rorb
pop
test
xchg
add
adc
push
mov
cld
sub
add
rcll
dec
ss
aas
pop
add
jmp
mov
lahf
add
jl
jp
add
je
inc
les
testb
mov
pop
inc
jae
jp
push
add
fisttpll
pushf
sbb
int3
cmpsl
inc
cmp
out
and
mov
test
xchg
into
pop
push
pop
out
aas
xlat
mulb
mov
jg
pop
das
or
xchg
pop
cmp
enter
add
push
cmp
ja
cmp
push
jo
or
in
gs
adc
cmp
paddsw
and
add
jb
sti
lods
insb
cmp
push
mov
add
push
pop
sub
push
dec
scas
jg
repnz
repz
add
xchg
mov
sqrtps
or
add
mov
xchg
push
mov
test
sub
loop
add
rolb
or
cmpsl
loopne
lahf
xor
sbb
add
mov
popf
arpl
loopne
stc
push
pop
cs
cmp
mov
add
sbb
daa
xor
nop
shrb
dec
add
fld
xor
in
loope
push
gs
sbb
sub
mov
dec
mov
inc
das
movsb
push
add
push
roll
pop
add
mov
pop
adc
lret
pusha
push
out
pop
roll
xchg
or
cld
stos
and
dec
add
addl
loope
jmp
add
outsb
sub
stos
add
pop
add
mov
add
call
sub
ret
sub
out
lret
dec
insl
pop
add
cwtl
test
add
movsl
outsb
testl
mov
jb
cmp
xchg
add
loopne
mov
imul
dec
and
das
add
pusha
or
ret
add
mov
xor
imul
push
add
xchg
xchg
je
add
hlt
leave
sbb
push
push
jns
add
dec
mov
cmp
lcall
dec
dec
adc
pop
add
jle
ficomps
inc
divb
sbbl
stc
test
dec
ljmp
lea
xchg
inc
call
mov
aaa
inc
leave
psrld
and
test
inc
add
mov
push
scas
loopne
xor
cmc
rcll
loopne
mov
xor
pop
aaa
stos
pushf
xchg
pop
cmp
xorb
popf
inc
popa
push
add
pop
scas
xor
lcall
in
xor
sub
add
clc
xchg
or
subl
clc
push
sbbb
stc
pusha
cmp
scas
inc
jo
lods
push
mov
mov
stos
add
out
addr16
es
inc
and
mov
rcrb
push
pop
jg
mov
es
ljmp
faddp
lret
test
mov
adc
data16
bound
cwtl
jg
mov
jle
repz
inc
add
rcrb
das
jge
xor
inc
jo
add
pop
push
mov
push
loope
mov
jge
in
fcmovne
js
pop
cmp
inc
stos
mov
jle
test
mov
sub
push
add
ret
in
xadd
enter
out
fiaddl
mov
or
and
aad
mulb
add
push
test
lret
mov
adc
and
stos
fwait
adc
test
out
add
mov
mov
push
inc
test
mov
shrb
push
leave
or
pop
cmp
add
shll
int3
or
sub
sbb
add
xor
sbb
inc
in
add
cmp
mov
cmp
mov
sub
xor
jne
mov
incl
mov
push
add
aas
ja
and
jmp
mov
sub
xchg
add
icebp
ficoms
add
add
ds
sbb
jne
ja
sbb
push
iret
test
mov
add
xchg
sub
ret
inc
add
mov
addr16
push
jecxz
cmp
filds
mov
adc
in
faddl
aas
and
push
cmp
adc
mov
mov
ljmp
daa
pop
dec
pop
mov
push
inc
shll
cs
sub
movsb
iret
pop
cmp
pusha
test
movb
pushf
cmc
add
push
faddl
dec
and
pop
add
add
imul
out
sbb
and
pushf
jle
or
subl
sbb
lret
sbb
jp
jp
xor
pop
ss
jb
pop
xchg
inc
roll
sti
lods
jmp
dec
cmpsl
add
lea
ret
ds
add
cmp
mov
fwait
pop
inc
and
mov
push
xor
out
sbb
add
dec
fadd
push
je
stos
cmp
and
sbb
push
jno
ljmp
adc
cli
add
repz
cmc
jge
fadds
sbb
ss
scas
imul
lock
add
movsb
adc
add
pop
cmovo
add
add
mov
xor
add
add
adc
adc
pop
mov
pop
fdivrl
dec
add
andl
fildl
clc
and
incb
bound
mov
scas
add
pop
arpl
pop
enter
nop
add
pop
inc
and
xchg
add
gs
fucomi
addr16
mov
ljmp
or
jnp
mov
mov
sub
dec
jecxz
xor
add
icebp
pop
addb
sbb
mov
add
rorb
pushf
xor
icebp
adc
lods
sarb
loope
scas
add
aam
mov
or
fmul
adc
push
sbb
shlb
jecxz
or
dec
sahf
nop
sarl
sbb
daa
inc
jp
jecxz
mov
xchg
jle
push
loope
cwtl
fnstenv
mov
pop
leave
ret
adc
dec
sbb
roll
enter
aas
add
outsl
lds
sub
add
in
mov
filds
cmc
jmp
push
mov
dec
cwtl
xchg
int3
outsl
mov
add
push
les
call
loope
and
add
dec
sbb
add
pop
js
add
dec
ret
ss
and
xchg
or
dec
push
pop
sbb
add
je
cmp
push
movsl
push
dec
xchg
sti
sub
add
in
cmpsl
add
mov
add
out
adc
iret
ret
cmp
lods
xor
in
lock
jb
flds
dec
cmp
push
jle
inc
orl
test
add
ret
add
stos
add
xor
andl
lret
repz
cmp
test
incb
js
mov
mov
or
add
bound
jmp
nop
inc
add
push
fyl2xp1
xor
jb
add
add
mov
mov
pop
push
loopne
add
cmpsl
pop
add
sahf
andl
and
inc
arpl
fiadds
int3
push
cmpsl
sub
aad
xchg
incb
mov
hlt
les
mov
pop
inc
mov
fsubs
arpl
push
hlt
ss
mov
lahf
pop
add
adc
mov
data16
add
add
jg
mov
pop
addb
mov
stos
hlt
aas
mov
aad
xchg
ss
add
sbb
jbe
pop
jle
lret
ds
aas
add
adc
sbb
negb
add
push
rcrl
lds
arpl
cs
outsl
and
int3
imul
test
pop
mov
mov
outsl
icebp
xchg
call
pop
lahf
dec
inc
xor
mov
in
and
xchg
insb
add
add
and
sub
jae
add
int
add
push
test
mov
pop
jp
sarb
sub
movsb
shrb
or
push
bound
pop
mov
cli
mov
in
push
lock
nop
mov
lods
test
fs
or
ret
out
int
aad
mov
shlb
movsl
test
les
mov
dec
sub
push
popf
pop
stos
add
mov
xorb
xchg
or
in
jb
push
mov
pusha
ss
xchg
xchg
jb
ja
add
and
mov
jo
test
jmp
bound
push
dec
insl
enter
pop
adc
add
mov
aas
outsl
cmp
jno
cmp
mov
adc
mov
cmp
orb
mov
push
push
jmp
shlb
ja
jnp
mov
out
es
cld
xchg
scas
push
xor
add
add
inc
mov
add
inc
dec
push
shl
test
sbb
call
push
fld
in
fwait
or
out
jne
jp
inc
pop
adc
cmp
mov
hlt
scas
push
sbb
cmp
jbe
das
in
add
inc
fs
push
sti
into
sub
add
daa
lds
mov
ljmp
lcall
icebp
sbb
aas
leave
add
xor
repz
jo
mov
sbb
loop
lea
fmul
xchg
push
int3
mov
lods
lahf
roll
shl
pop
jnp
test
cmc
push
push
xor
fistl
push
pop
sbbb
or
sarb
add
cwtl
outsl
add
mov
push
mov
fnsave
and
adc
repz
dec
mov
shl
andl
pop
das
scas
mov
add
inc
rolb
call
inc
ror
shrb
stos
pop
bound
lret
test
fcmovb
in
test
jp
lret
int
mov
cwtl
cmp
add
adc
pop
inc
aas
repnz
push
mov
jns
xor
add
adc
sbb
insb
lcall
imul
sahf
mov
fs
inc
mov
sub
div
pop
xor
in
cmp
and
dec
mov
cmp
sub
xlat
fnsave
adc
daa
dec
push
inc
add
test
scas
in
pop
dec
nop
imul
int3
or
sub
pop
jle
mov
mov
cmp
mov
push
repz
sbb
js
mov
mov
icebp
imul
adc
pop
or
push
and
fsubr
and
xlat
lret
fwait
mov
hlt
add
outsb
add
pop
rcll
into
or
cmpsl
fisttps
sbb
adc
jbe
sbb
or
aam
mov
pop
xor
dec
movd
or
xor
xor
adc
mov
xchg
rorl
cmp
pop
scas
or
jb
add
loope
mov
push
sub
or
sbb
adc
jg
les
js
shrb
ret
cmp
fsubl
jno
cmp
adc
ja
testb
add
jle
stos
or
addr16
lock
pusha
pop
cmp
insl
and
je
cmpsb
cmp
out
lea
jo
scas
loop
lods
sbb
aad
cmpsl
jae
insl
stc
jmp
push
daa
movsb
jo
dec
mov
addr16
xchg
jae
lcall
add
test
cltd
mov
fildll
and
dec
loopne
xor
push
adc
nop
add
mov
fnstcw
enter
lret
ret
pusha
cmc
cwtl
shll
add
cmp
xor
pop
push
ret
mov
xor
xchg
add
pop
orl
rcrl
mov
xor
pusha
xor
loopne
and
dec
bound
scas
into
add
repz
inc
jmp
xor
ja
idivl
pop
leave
inc
push
lret
jmp
lods
pop
lret
negb
loop
add
insl
xor
pop
xchg
in
je
add
and
adc
ret
and
add
sbb
mov
add
add
insl
push
jge
mov
popa
scas
cmp
je,pn
rorb
dec
mov
sbb
mov
scas
lods
orb
daa
push
std
call
clc
subl
cwtl
push
frstor
icebp
jmp
mov
add
popa
or
and
imul
mov
sub
mov
push
data16
lods
orb
mov
jp
scas
add
dec
bound
sbb
fdivp
cmpsb
ret
mov
pop
mov
and
sahf
cmp
cli
imulb
repz
xchg
xor
sbb
ret
nop
push
jmp
jl
pop
adc
jmp
gs
jnp
jp
add
mov
lret
pop
mov
mov
add
shl
pop
pop
push
std
dec
loope
lahf
loopne
sti
and
mov
dec
lods
ret
inc
ss
jecxz
les
adc
mov
hlt
clc
lods
mov
add
movsb
rorl
xor
pop
pushl
xor
in
inc
or
jbe
sti
mov
push
repz
andb
add
pop
xchg
and
stc
jg
add
add
movsb
or
bound
pop
pop
dec
xchg
jbe
rol
sti
adc
add
lods
out
add
sub
mov
adc
or
or
hlt
filds
add
mov
outsb
fwait
add
rorb
xor
cmp
syscall
pop
fadd
sub
inc
stos
add
or
fucomip
test
add
loopne
xor
inc
pop
inc
aas
imul
loop
repz
shll
mov
or
ds
mov
andl
mov
or
movsb
daa
leave
jbe
neg
sub
clc
jp
mov
dec
add
xchg
dec
xor
and
inc
jnp
rolb
jo
lcall
icebp
sbb
loope
sti
loop
sub
jl
inc
pop
cmpsb
xchg
push
rorb
popf
idiv
cltd
adc
in
aam
inc
pop
mov
jno
inc
jmp
push
cltd
add
mov
add
cmp
scas
out
and
rolb
insb
mov
push
xor
addr16
or
lods
add
adc
adc
add
faddl
xchg
in
ja
inc
sub
push
cs
aam
jne
add
xorl
dec
test
rorb
inc
mulb
aaa
add
push
arpl
push
iret
xlat
orb
jge
add
adc
add
stc
add
icebp
jbe
outsl
inc
sbbl
adc
loopne
inc
add
jmp
and
or
pop
repnz
fs
rol
call
lods
js
js
add
sarb
iret
add
inc
dec
mov
fadds
dec
mov
jmp
dec
and
xchg
rolb
cmp
add
and
add
mov
in
test
aas
mov
orb
add
fcmovnu
jnp
repz
mov
cmc
fsubl
sbb
add
dec
imulb
icebp
pusha
cmp
add
inc
bound
mov
sbb
shl
ja
ret
ret
in
and
sub
sti
enter
sbb
fs
insl
xor
dec
push
loopne
and
and
popa
into
cmpsl
movaps
push
shll
mov
add
adc
ljmp
movsl
sub
mov
movsb
les
mov
loope
add
repz
cmpsb
sub
inc
js
add
cmp
outsb
xchg
mov
aaa
scas
and
xchg
test
cmp
in
mov
iret
lock
push
ljmp
mov
cmp
rcl
ficoms
call
lock
push
rcrb
lods
je
pop
sbb
push
dec
cwtl
add
out
jo
xchg
js
cli
or
jnp
pop
ret
testb
add
test
pop
or
xlat
out
cmp
xor
lea
push
add
nop
mov
cmp
fsubs
ret
jge
or
arpl
movsb
inc
frstor
nop
jnp
repnz
and
add
mov
out
rolb
mov
adc
shlb
sub
aaa
and
adc
pop
adc
lea
push
dec
and
pushf
and
bound
aas
out
sbb
lods
jnp
xor
push
inc
std
cmpsb
sbbb
imul
xorb
and
mov
in
pop
fs
loope
and
fiaddl
sbb
aad
mov
xor
out
pop
stc
add
cmc
jg
fidivrl
and
xchg
add
cwtl
add
mov
shr
xchg
ljmp
mov
filds
sub
repz
pop
cs
sub
inc
mov
and
subb
xor
cmpsb
push
add
stos
xchg
or
es
inc
mov
mov
add
adc
or
dec
inc
add
add
sbb
in
jae
daa
push
pop
sbb
mov
pop
scas
mov
jmp
mov
scas
and
xor
push
jo
shlb
call
mov
lods
enter
push
push
daa
repz
add
mov
add
les
inc
and
mov
push
icebp
dec
jae
lret
sub
pop
in
push
xor
dec
stos
jns
bound
fistpll
sbb
fcomps
dec
pop
push
js
mov
scas
addr16
add
mov
clc
loopne
movsl
lods
jbe
fcmovb
cmpsl
jp
imul
imul
or
push
ljmp
adc
mov
xchg
and
rolb
movhps
add
inc
add
sub
push
mov
push
ret
jne
xchg
movsb
pop
sbb
jg
rorb
cmp
add
aad
aam
push
push
stos
xlat
push
in
add
or
daa
cmovl
stc
addb
cmp
std
stos
and
hlt
add
add
je
mov
add
js
add
test
xorb
add
lods
orl
mov
adc
lret
cmp
xlat
push
mov
stos
clc
cmp
add
lock
mov
mov
in
push
lock
cmc
mov
add
add
sahf
push
sub
mov
add
jle
mov
add
xor
add
mov
or
scas
add
hlt
mov
mov
cmp
sbb
pop
pop
stc
lods
mov
add
int
stos
mov
jg
pusha
cmpsb
sbb
add
add
jbe
mov
add
sub
jo
jle
push
sbb
add
pop
stos
sub
sarb
call
daa
or
add
push
pop
adc
jo
rolb
jg
pop
jae
nop
sarb
negb
add
fwait
test
or
xor
push
adc
popf
mov
int3
and
jb
and
cmp
add
xchg
cmp
or
loopne
andb
fsubr
mov
jmp
mov
mov
or
addl
pop
aad
sbb
ljmp
cld
adc
push
push
dec
jnp
pusha
clc
adc
push
sbb
mov
xor
fistps
aas
mov
sub
add
cmp
inc
add
mov
ljmp
pop
ret
aad
pushf
addr16
cli
adc
les
cltd
pop
add
add
add
mov
in
sbb
inc
mov
jle
dec
movsl
mov
jge
dec
mov
fmull
lock
fst
fistpl
or
add
mov
rclb
mov
cmp
push
fld
je
loope
push
add
pop
sub
rolb
mov
and
fstps
outsb
mov
pop
adc
sbb
cli
rcr
stc
add
dec
inc
push
movsl
inc
test
ljmp
ret
addb
sub
jae
pop
cmc
mov
and
arpl
mov
nop
mov
es
mov
les
push
or
stos
cmp
lret
out
cld
add
add
loopne
mov
cmp
cwtl
add
repz
aas
jmp
pop
pop
scas
fisubrs
lcall
pop
cmp
outsb
imul
hlt
mov
mov
add
push
mov
outsb
cmp
sbb
cmp
in
dec
scas
add
fs
pushf
mov
popa
sbb
and
jno
or
repz
mov
imul
mov
shl
add
adc
movsb
std
loop
pop
add
xchg
dec
push
test
daa
add
mov
movsb
cmp
add
dec
sar
mov
cmp
mov
fildll
adc
leave
inc
pusha
out
ljmp
imul
mov
imul
dec
sub
jl
into
roll
pop
stc
add
add
cmpsl
xchg
or
daa
push
xchg
ret
mov
add
mov
add
or
add
xlat
sbb
cmp
cs
gs
and
jb
sub
pusha
cmc
dec
push
add
add
shrl
popf
lock
cli
or
mov
in
in
popa
mov
in
mov
cmp
inc
int3
jne
jge
movsb
cmpl
xchg
add
andl
pop
je
push
push
inc
rolb
dec
xchg
in
je
sub
push
not
movsb
mov
pop
roll
adc
into
sbb
mov
jne
jae
filds
ret
jnp
and
push
lods
es
or
rolb
mov
or
add
mov
call
jp
pusha
xor
add
loopne
inc
js
lret
add
notb
sti
add
sub
mov
sub
movsb
nop
bound
push
pop
jge
es
cmp
aam
mov
mov
xor
cmpsl
pop
sbb
jnp
pop
rcr
and
call
jmp
movsl
jo
loopne
cmc
xchg
cmp
xchg
addr16
rorb
out
add
imul
loop
mov
or
dec
push
imul
add
mov
sbb
andl
xchg
mov
cmp
rol
nop
or
int
std
ja
stos
xor
add
in
inc
test
fwait
jle
outsl
cmp
mov
and
data16
jo
mov
pavgb
arpl
les
lcall
enter
sbb
sbb
aam
mov
jne
add
stos
and
push
test
add
bound
jecxz
mov
dec
call
xchg
mov
add
imulb
fbld
jge
xor
cwtl
inc
jmp
dec
add
bound
fimuls
sbb
js
daa
lcall
adcb
add
add
lar
mov
mov
and
dec
mov
fnstsw
outsl
aad
xor
mov
cmpsl
nop
push
gs
add
mov
aas
xor
sbb
lea
add
shll
lock
cmp
mov
fldcw
add
iret
or
add
repz
popa
lock
add
jge
insb
sbb
mov
push
xor
and
add
xorb
add
mov
pop
and
insl
outsl
mov
and
mov
pusha
lea
mov
cmp
add
cmp
dec
push
dec
add
mulb
push
fwait
add
inc
xchg
mov
mov
dec
stos
inc
dec
pushf
add
aas
sub
bound
rcrb
add
add
pusha
aam
push
pop
mov
aaa
nop
jo
mov
mov
iret
out
std
shlb
cltd
xlat
mov
inc
xorl
push
mov
push
mull
insb
in
inc
fdivl
es
lock
add
push
call
mov
dec
sub
add
xor
mov
ljmp
test
nop
loope
mov
orl
jb
adc
pop
rorl
dec
stos
mov
pop
add
mov
flds
jle
or
pushf
dec
add
arpl
lret
sbb
mov
push
cmp
push
ljmp
cmp
add
pop
add
add
jnp
int3
adc
add
cmp
jmp
and
lods
pop
xor
xor
cmpsb
in
lret
out
sbb
frstor
xlat
push
push
rolb
arpl
jl
jae
sub
pop
or
inc
push
lds
mov
mov
add
adc
enter
dec
shlb
cmpsl
push
add
lret
xchg
rcl
iret
add
push
fstl
ljmp
rclb
mov
pop
dec
push
mov
data16
xchg
push
cmp
cs
jmp
pusha
add
or
orb
or
or
inc
adc
inc
or
dec
or
lret
push
pusha
in
mov
lea
aas
sub
icebp
ret
cwtl
jne
movsl
lods
add
fs
mov
add
rclb
mov
sub
xor
or
lret
adc
add
imul
sbb
pandn
iret
imul
dec
sub
push
jns
es
in
and
dec
test
mov
stos
in
into
push
inc
call
mov
add
mov
add
enter
mov
testb
add
dec
aad
js
push
movb
leave
push
inc
enter
sub
mov
daa
sub
lock
inc
mov
jmp
in
add
jle
test
sahf
filds
fninit
mov
aas
int3
xor
add
arpl
or
push
add
sahf
ret
jbe
in
lds
popf
lret
xorl
in
ja
std
pop
popa
and
insb
ss
push
cmovg
jnp
in
shrb
xor
and
jge
sub
enter
pop
dec
dec
add
mov
out
mov
lods
enter
inc
add
xor
imul
je
mov
push
rcr
icebp
or
cmpsb
mov
test
jne
or
xchg
xchg
andb
xchg
push
or
std
popl
mov
ss
addl
lods
jp
cmp
xchg
add
push
je
jg
ss
add
sahf
inc
mov
std
push
cmc
pop
pop
pop
lods
popf
data16
cmp
loop
jb
pop
adc
ds
pushf
cld
in
int3
sbb
push
adc
bound
add
add
add
fistps
in
jecxz
add
xor
and
cmp
stos
jp
sub
cmp
dec
jg
mov
and
jno
pusha
xchg
les
inc
add
sub
sbb
mov
push
idivl
add
xchg
out
jae
shlb
adc
push
mov
lds
rol
js
call
or
add
pop
js
adc
ret
adc
adc
add
sub
sub
fimuls
add
add
push
adc
mov
dec
add
pop
out
add
call
mov
orl
jno
adc
adc
adc
mov
inc
and
scas
in
cmp
sti
add
lods
out
jecxz
in
add
fcoms
add
inc
sbb
inc
fwait
xlat
pop
jns
dec
add
push
jl
pushf
xchg
inc
add
test
mov
movsb
add
pop
shl
or
decl
jle
inc
cmpsb
inc
jmp
lcall
sbb
test
add
sti
imul
mov
mov
movb
das
sub
in
test
gs
loopne
std
lds
adc
adc
add
sar
add
in
adc
inc
and
pop
add
mov
push
cld
shlb
and
rorb
out
dec
xor
imulb
imul
add
out
cwtl
test
nop
adc
out
aad
lock
mov
sub
add
push
or
mov
jnp
and
mov
or
xchg
and
outsl
outsl
inc
sbb
push
jbe
mov
push
lret
or
sbb
cmp
add
and
jb
shll
rcrl
stc
sbb
call
fisubl
push
iret
out
mov
sub
cmp
xor
lret
add
movsl
add
cmp
and
or
sti
test
sub
jecxz
xor
aas
cld
xchg
jae
movsl
fists
fistpll
xchg
sub
dec
pusha
or
mov
pop
and
gs
or
shlb
inc
pop
cmp
jb
orb
push
pop
add
dec
pop
loop
cwtl
jbe
or
jne
cmp
fadds
xchg
sti
pop
shrb
repz
add
xchg
xchg
mov
adc
pop
mov
xchg
pop
cmpb
pusha
jae
mov
adc
sub
or
pusha
jns
call
repz
ret
pop
lock
std
add
mov
nop
fwait
jmp
incl
in
cmp
pop
and
mov
loop
and
pop
insl
or
jae
movsb
mov
shlb
xor
adc
inc
xor
jnp
and
js
cmpsb
or
ret
shrb
in
enter
add
out
enter
add
inc
inc
add
xor
nop
add
jne
cmp
xorb
aas
xchg
add
pop
scas
loope
mov
jnp
dec
jb
jno
mov
imul
out
adcb
testl
ret
fdivr
or
or
mov
sbb
dec
jecxz
sbb
jno
pop
sub
fwait
out
add
add
mov
aaa
add
xchg
add
insb
in
mov
loope
fstpt
or
idiv
mov
mov
adc
es
mov
cwtl
mov
sbbl
cmp
lea
push
insb
cli
lret
inc
and
fsubs
int
add
xchg
xchg
dec
xorb
les
loopne
mov
sub
rcll
xchg
bound
sbb
inc
mov
lock
ret
mov
in
iret
in
xchg
nop
jnp
jge
or
mov
add
insl
jp
pop
jno
ljmp
mov
pop
pop
and
and
fldl
movsl
loopne
adc
popa
dec
inc
add
imul
mov
dec
sub
repz
dec
add
push
addr16
or
cmpb
xchg
pop
scas
mov
cmpb
dec
cwtl
pop
pop
nop
lods
ds
sub
in
or
pop
jae
pop
imul
mov
push
cmp
stos
lds
push
sarb
inc
add
das
roll
sub
or
stc
scas
push
inc
fnstsw
add
xchg
cli
andb
add
lods
mov
mov
sbb
cmpsb
push
xchg
pop
add
fnstcw
fnstsw
subb
mov
mov
loopne
and
shl
add
mov
loop
add
movsb
push
in
clc
dec
scas
add
sti
lea
xchg
mov
call
fstpt
add
sbbl
add
jmp
add
ja
shlb
addl
jae
add
in
jne
cmp
repnz
call
loope
test
sub
xchg
out
test
add
rcrl
cmpsb
cmp
data16
jl
mov
xor
push
inc
xor
add
mov
adc
subl
aas
subb
xchg
lods
rolb
out
and
in
dec
add
faddl
test
scas
push
add
addr16
sub
push
das
add
mov
push
pusha
arpl
add
cmc
fsubrl
movsb
jae
or
sub
mov
lahf
add
pop
add
imul
mov
dec
and
add
add
imul
or
cwtl
push
pop
ljmp
xor
sbb
push
mov
add
and
xor
jbe
jl
mov
fwait
and
fcomps
cmc
push
sub
push
inc
loopne
popl
xchg
jmp
xchg
add
sbb
into
lock
ljmp
in
xor
cmp
cld
add
bndldx
cmp
or
inc
popf
dec
jmp
mov
sti
push
sub
xor
sbb
shll
xchg
xor
jge
lcall
rol
mov
add
lock
sbb
mov
frstor
movsb
sbb
out
mov
mov
imul
pop
dec
js
shr
jmp
add
leave
movsl
push
ret
pop
lahf
pop
push
push
push
or
sbb
sahf
notl
add
pop
xchg
mov
cmp
cmp
fwait
xorb
jno
jo
fmul
xchg
faddl
mov
nop
std
leave
or
xchg
pop
jge
das
add
adc
mov
add
fadds
lods
jae
addb
aaa
xor
mov
lea
scas
cld
pusha
cmp
cvtdq2ps
loopne
xchg
pop
pop
jmp
sub
inc
add
xchg
push
fcomps
enter
jmp
outsl
inc
subb
add
mov
lahf
inc
faddl
sub
or
add
call
jae
fcmovb
out
sub
aaa
xor
and
push
fistl
in
or
pop
jae
xorb
imul
sbb
or
jmp
pop
add
add
mov
in
inc
or
ror
push
icebp
data16
add
clc
mov
sbb
xor
and
pop
daa
cli
inc
fwait
imul
mov
sub
inc
fadds
stc
jbe
sbb
loopne
add
test
or
pusha
cld
and
mov
out
aaa
pop
xlat
mov
aam
pop
cld
add
repnz
cmp
incl
iret
xorl
xchg
scas
add
sbb
es
testl
jmp
sub
push
jg,pn
mov
xor
mov
pop
add
push
loop
add
test
jnp
jle
sub
mov
test
mov
int3
fisttps
inc
out
add
mov
dec
shll
push
mov
pop
dec
adc
sbb
loopne
add
loope
mulb
pop
aad
cmp
mov
in
les
adc
xchg
mov
push
sub
mov
push
out
imul
daa
push
adc
out
or
fcompl
sbb
add
pop
adc
push
scas
mov
add
sub
dec
xchg
jb
add
mov
add
push
push
inc
and
daa
xor
ljmp
and
xor
aad
xchg
sub
push
and
nop
mov
adc
int
aas
js
sbb
sbb
leave
clc
pop
adc
repnz
inc
and
push
repz
xchg
test
add
mov
test
shrb
pop
stos
clc
shlb
movsl
enter
or
mov
jb
and
mov
and
jnp
test
popl
enter
push
je
add
movsl
loope
mov
pop
dec
jae
inc
push
and
call
jb
sbb
bound
sbb
add
or
call
sub
aad
add
sbb
in
jle
pop
push
cmpl
xor
adc
imul
or
aam
nop
pushf
add
into
lahf
loope
stos
sub
add
les
xor
test
sarl
dec
lahf
das
add
popf
and
xor
or
daa
fsubl
mov
add
jo
and
inc
or
sub
sarl
sbb
push
cmp
orb
daa
vmovq
stos
sub
mov
loopne
xor
sar
add
add
ljmp
hlt
hlt
add
push
push
fimuls
xor
add
xor
add
ret
add
lret
dec
out
or
mov
orb
insb
add
mul
test
xchg
cwtl
inc
adc
adc
push
and
jecxz
stc
xorl
mov
inc
cs
fs
loopne
sbb
ss
movsl
add
rcr
adc
add
clc
mov
movsl
inc
fwait
pop
mov
mov
dec
movsb
out
pop
icebp
popf
les
shll
imul
test
add
push
loop
jb
ds
pusha
inc
pop
icebp
mov
mov
adc
imul
into
push
mov
and
and
in
outsl
add
sub
daa
mov
add
inc
push
ja
xchg
mov
adc
xchg
imul
mov
add
ja
fucomi
cs
sarb
add
icebp
iret
rcrb
cli
mov
jecxz
add
andl
jl
adc
inc
addr16
popf
xchg
push
pop
loopne
cmp
xchg
scas
fsubl
in
add
repz
cmp
dec
fdivs
sbb
repnz
pop
pushf
les
nop
sub
jmp
xor
dec
test
shll
mov
lcall
cmp
fildl
rolb
cwtl
out
add
div
loope
and
jbe
pusha
int3
xchg
pop
add
mov
xor
pop
push
cld
jle
add
out
shlb
call
adc
test
nop
add
push
cmpb
test
es
mov
shlb
add
push
test
ljmp
les
add
cmp
ret
xchg
push
ret
and
inc
out
add
iret
lcall
shlb
mov
test
andb
ja
xchg
mov
fadds
mov
das
adc
imul
clc
mov
cmpsl
outsb
insb
mov
push
push
xchg
pop
or
pusha
fistps
and
insl
inc
cmpsl
in
lods
add
movsb
lahf
mov
add
movsl
xor
call
sti
pop
pop
push
adc
adc
aad
cmpsb
xchg
add
push
sbb
inc
call
fbstp
dec
add
cs
mov
pop
mov
in
call
mov
add
loope
movsl
cmp
test
popf
xchg
add
xor
xchg
sbb
in
pop
xchg
cltd
inc
or
inc
cmp
adc
jmp
push
loop
enter
arpl
inc
cmp
xchg
xchg
in
jmp
das
cmc
cmp
ret
or
cs
testl
in
subl
or
pop
mov
jp
adc
incl
mov
mov
movsl
mov
testb
sbb
iret
enter
push
sbb
xchg
xchg
lret
leave
hlt
inc
test
cmp
idivb
lea
les
fwait
aam
inc
sbb
in
nop
add
insl
adc
out
pop
nop
add
add
roll
iret
dec
lds
inc
add
push
add
sbb
data16
sbb
or
imul
ss
pop
nop
push
or
or
mov
pop
lret
addr16
and
sar
xorb
jbe
add
xor
insb
fdivs
inc
sbb
std
cwtl
das
mov
test
pop
adc
in
add
shr
xor
sub
xchg
mov
fnstsw
mov
xor
lods
call
sub
fmulp
inc
cmp
mov
das
sbb
add
ja
nop
mov
pop
sti
jle
subb
add
lcall
test
hlt
push
add
aad
js
lea
and
loope
push
cmp
shrl
xchg
sbb
mov
loopne
pop
inc
mov
out
push
dec
aaa
xchg
int3
cmp
add
pop
or
add
cltd
cmp
mov
push
jne
outsl
inc
mov
test
inc
insl
mov
push
mov
jnp
pop
jmp
daa
inc
cmp
sbb
inc
test
lods
addr16
mov
adc
mov
xchg
fadd
or
pop
std
mov
mov
jge
cli
insl
inc
loopne
mov
push
shlb
add
mov
mov
or
daa
mov
mov
add
jecxz
xlat
int3
cld
test
push
in
insb
inc
stc
xor
es
aad
sub
push
shl
loope
push
mov
enter
add
pop
es
addr16
xor
sub
cmp
mov
rcrl
fwait
stc
enter
out
mov
pop
and
movsb
mov
sub
out
dec
mov
orl
and
add
jnp
andb
or
fcomi
sbb
int3
dec
cmp
add
lods
out
mov
cmpsl
lea
aam
movsl
or
sbb
fstps
lret
add
or
aas
daa
mov
xor
add
jmp
add
mov
ret
mov
xchg
and
stc
sahf
inc
add
clc
adc
cmpsb
add
push
xchg
jnp
incb
sub
scas
xor
xor
xchg
jne
lret
dec
add
insb
inc
push
add
dec
sarl
aas
bnd
cltd
mov
test
push
xorb
dec
ret
pop
sbb
aam
add
sbb
cmp
cli
add
xchg
hlt
inc
or
scas
dec
mov
mov
ret
mov
push
push
inc
add
arpl
lahf
push
cmp
push
subl
repz
add
pop
add
mov
and
incb
shrb
popa
inc
adc
dec
pop
cmc
push
addl
ljmp
push
dec
jmp
xrelease
adc
test
nop
pop
or
adc
rolb
jle
jbe
lods
cmpsb
scas
addr16
sbb
rolb
push
clc
xchg
or
scas
imul
add
cmc
outsb
out
xor
movsl
in
adc
pop
push
sbb
sub
sub
fdivl
mov
cwtl
inc
add
ja
fiadds
icebp
and
dec
std
decb
or
mov
or
pop
push
pop
push
stc
bswap
fimuls
mov
jns
das
sbb
shll
mov
mov
ret
lock
dec
and
jg
inc
stos
inc
std
inc
pushf
lret
bound
mov
xor
outsb
mov
ss
into
add
jmp
out
sbb
in
add
mov
ds
jecxz
mov
mov
and
mov
pusha
jle
jp
inc
inc
mov
nop
movsb
jb
sar
push
add
jo
sbb
mov
sbb
ss
and
es
aas
push
fisubl
daa
leave
pop
shll
fldl
aas
gs
push
fmul
pop
adc
nop
fsubrl
clc
jne
and
repnz
jbe
adc
data16
lret
and
insb
adc
pop
aas
lods
push
stos
xchg
add
pop
pop
hlt
jge
fnstsw
sub
jle
jne
xlat
clc
mov
mov
push
sbb
add
pop
add
cmp
loopne
dec
movsb
adcb
movb
jge
in
leave
pop
pop
imul
sbb
sbb
lcall
aam
je
scas
clc
and
rclb
add
sarl
int
cmpsb
gs
pop
inc
add
cli
xchg
loopne
or
loopne
int3
pop
dec
jmp
out
mov
rclb
stos
test
cltd
mov
iret
out
shrb
vdivpd
sub
out
in
aas
jbe
xor
int3
out
out
addr16
inc
cltd
stos
push
aam
sub
mov
jp
test
dec
xchg
push
inc
loop
out
filds
adc
ror
clc
lock
lar
xor
fcoms
js
add
cli
inc
add
int
jno
pop
push
loop
add
lods
jne
loopne
aam
iret
mov
aam
xchg
out
testb
inc
or
loopne
ljmp
in
inc
pop
adc
lock
pop
shlb
pop
add
mov
and
sub
out
je
rcl
int3
mov
xorl
mov
aam
lds
pushf
and
push
jae
clc
pop
repz
jb
sub
xor
sti
sbb
fs
mov
jns
dec
pop
scas
int
or
icebp
sbb
and
cmp
jns
sti
inc
sub
fwait
out
jl
test
call
sbb
xor
inc
xchg
or
call
fldcw
ljmp
vphaddubd
lock
add
adc
rorl
and
add
mov
mov
add
jecxz
imul
mov
fstl
or
pop
xor
and
repz
lods
push
lret
stc
mov
cmc
push
loop
out
fcomps
pop
or
xlat
lcall
pop
movsb
add
lods
dec
clc
mov
rolb
add
cmp
mov
and
add
push
mov
sub
and
add
fsub
lea
test
adc
lock
mov
int
shlb
je,pt
mov
mov
repnz
lret
push
pop
in
rolb
push
pop
mov
xor
repz
adc
cmp
dec
adc
mov
outsb
insl
out
loop
add
push
inc
xchg
cmpsl
incl
sbb
mov
out
fsubr
sbb
out
ret
cwtl
aam
add
outsl
lcall
add
ret
shlb
mov
rcll
hlt
mov
scas
rep
imul
mov
cmp
xchg
arpl
call
jge
xor
add
and
int
les
add
cs
dec
push
xor
push
xlat
add
andb
or
adc
cmp
pop
filds
decl
push
fisubrs
sahf
andb
sti
shr
fmull
add
mov
cmpsb
mov
out
lcall
add
xchg
mov
mov
dec
jne
or
outsl
fwait
mov
jg
cmpb
pop
dec
sahf
cmp
aam
inc
sbb
cmp
sbbl
adc
enter
imul
add
jb
lods
mov
cmp
fmuls
in
add
call
push
cs
into
add
mov
mov
xchg
roll
outsl
hlt
xor
cmp
jns
movb
stos
pusha
sbb
or
push
lret
mov
cmp
or
push
scas
imul
das
fstps
fs
dec
subl
add
out
outsb
add
sbb
aad
adc
lret
sub
pushf
bound
out
aam
aaa
popa
lods
add
inc
add
xchg
lcall
pushf
xchg
fwait
in
enter
mov
add
loopne
aam
xor
sbb
sbb
pop
sub
aad
mov
ds
and
fs
fs
test
pusha
rcrb
cmc
imul
sahf
pusha
fdiv
add
outsl
fdiv
lods
inc
cmp
gs
mov
mov
add
xchg
test
add
jmp
sub
dec
out
out
and
pop
add
orl
jp
or
aam
ret
adc
add
outsl
add
add
push
sub
fs
push
lea
or
jl
adc
xor
nop
inc
cmc
jo
jne
jmp
and
mov
mov
mov
xchg
nop
sbb
lods
pusha
mov
push
or
mov
ret
lock
xchg
ja
xor
outsb
xchg
fs
fstpl
dec
and
imul
pusha
xor
add
pop
pushf
sti
mov
xchg
dec
shll
popa
pushl
lcall
or
out
leave
pop
loopne
mov
mov
inc
mov
pop
cmp
ljmp
stc
pusha
add
rol
xchg
stos
add
roll
add
pop
mov
mov
xor
lret
or
sbb
daa
xorb
mov
xchg
lea
mov
aad
insb
push
dec
add
leave
inc
mov
jnp
jg
mov
movsb
xchg
loopne
jae
or
rorl
jo
push
rolb
jne
aaa
shlb
push
cmp
lcall
fmull
and
jmp
add
in
sahf
mov
out
xchg
inc
loopne
orl
leave
push
iret
data16
repz
sbb
insb
outsl
nop
dec
dec
jbe
sbb
fiaddl
jns
sbb
out
loope
sub
out
in
xor
out
mov
mov
ja
test
dec
or
mov
lock
push
in
jmp
add
shl
ficoms
cmp
das
mov
xor
and
jne
add
hlt
add
cmp
add
jp
in
sub
lcall
pusha
inc
jmp
jmp
mov
fldl
xchg
xchg
xor
andb
pop
xchg
add
push
xchg
adc
or
aad
in
dec
mov
hlt
adc
jle
adc
loopne
nop
hlt
cmp
mov
int
cmp
dec
and
roll
push
fisttps
adc
out
adcb
lret
aam
inc
js
je
in
push
jnp
add
subl
add
xor
inc
js
pushf
sbb
fcomps
xchg
aam
ret
add
mov
dec
and
jge
add
sbb
in
fists
adc
pop
and
movsl
jp
and
scas
push
push
and
mov
add
xchg
adc
add
flds
lods
jb
and
add
pop
pop
cmp
into
xor
mov
xor
inc
adc
aad
xor
jmp
enter
jl
mov
xchg
outsl
push
mov
loop
pusha
inc
mov
sti
cmpsl
mov
add
leave
lret
xchg
add
push
inc
stos
dec
sbb
loopne
pop
sar
add
into
jl
xor
idiv
add
or
aad
add
test
adc
cli
rcrl
jl
lea
ds
sbb
subb
imul
add
and
jnp
sub
cmp
dec
dec
push
add
ss
adc
jge
add
xchg
add
xchg
addb
and
pop
or
mov
xchg
xchg
dec
xor
jbe
fwait
jge
or
add
insl
sub
jno
add
test
adc
gs
ficoml
insb
inc
add
sahf
ret
repnz
jl
add
xchg
imul
lcall
nop
xchg
and
call
push
mov
clc
or
dec
les
sbb
faddl
xchg
in
push
sub
pop
mov
and
pop
mov
pop
add
add
dec
dec
lds
sbb
icebp
out
fstps
xor
popa
movsb
and
inc
or
or
imul
addr16
and
add
call
or
mov
cmp
loopne
pop
adc
jl
inc
add
mov
add
inc
out
pop
test
inc
aas
int
mov
loope
sbb
add
outsb
dec
add
jne
adc
mov
cmp
aaa
add
jnp
ljmpw
sbb
sahf
int
add
cmp
add
mov
fisttps
rclb
mov
xchg
xchg
outsl
inc
test
push
daa
in
fucomi
in
int3
or
lods
sbb
jmp
or
pop
add
push
push
dec
cmp
add
xchg
mov
push
jl
les
add
pusha
mov
stc
sub
cmp
es
add
int3
push
lahf
or
and
int3
xor
jo
add
jns
testb
out
add
enter
cli
pop
sub
and
sub
loopne
pop
adc
ds
mov
push
xchg
jp
in
xor
stos
imul
fwait
mov
dec
mov
or
adc
ljmp
inc
mov
mov
push
xor
insl
jp
and
jle
push
add
in
icebp
add
mov
clc
push
mov
cmp
add
and
xchg
movsl
xor
popa
insb
jne
pop
jecxz
or
pop
test
pushf
flds
jl
in
add
mov
push
xor
in
clc
mov
push
push
dec
xor
xchg
sbb
mulb
or
cmp
test
add
jp
in
bound
test
mov
sbb
mov
sbb
lock
imull
inc
popf
sbb
add
js
icebp
xchg
in
push
add
arpl
outsl
fwait
pop
mov
add
dec
ret
mov
xor
int
es
add
xchg
add
lcall
xchg
add
xor
mov
lahf
push
cmovle
cmpsb
mov
arpl
and
or
add
jno
arpl
repz
jb
mov
inc
add
mov
or
push
andb
cmc
stos
jns
pop
push
mov
and
add
repnz
je
je
mov
jp
and
adc
dec
cmp
cmpl
divb
cld
pusha
push
rcrb
add
cwtl
pop
xorb
pop
mov
mov
xchg
bsr
fwait
jbe
and
mov
pop
sbb
jns
icebp
inc
lret
fildl
out
push
jno
jmp
test
call
jl
pop
into
mov
jge
iret
or
pop
and
cmp
mov
inc
sub
stos
hlt
lahf
jns
add
ficompl
sbb
or
dec
bound
mov
add
movsb
inc
push
inc
bound
jmp
add
add
lods
pop
mov
pusha
inc
icebp
ret
and
jne
jmp
insb
test
xchg
and
xor
push
addr16
rdtsc
add
sbb
pop
aaa
jo
cmc
sbb
add
adc
lret
and
mov
int
dec
pop
xor
adc
test
hlt
stos
adc
dec
loopne
jbe
dec
or
mov
push
sub
pop
cwtl
sub
shlb
mov
clc
mov
popf
pop
fwait
add
sub
cmpsb
mov
sub
jae
cmp
xor
sbb
cmp
sub
fstpt
inc
adc
xchg
mov
xchg
pop
add
xorb
adc
cltd
pop
add
jo
and
hlt
loopne
inc
inc
loope
into
mov
mov
sti
mov
jbe
xor
stos
pop
test
jo
int
dec
push
cli
div
andb
add
jns
and
loopne
fildll
push
xchg
mov
dec
movsl
lods
lretw
movsb
push
popa
cmp
into
pushf
sbb
btr
ret
and
xchg
daa
bound
cmpsl
test
and
fildll
cmp
pop
jmp
pushf
adc
lods
sub
push
rolb
loop
aam
aad
add
mov
inc
sub
cwtl
lock
out
mov
cmp
add
mov
jnp
movsb
push
push
mov
add
andb
repnz
lods
xor
subb
push
sahf
lcall
ret
lock
xor
vpmullw
add
mov
dec
adcb
outsl
sub
add
jno
cli
movsl
add
mov
push
pusha
rcrb
mov
push
sub
pop
loopne
dec
dec
mov
add
mov
or
gs
decb
add
hlt
or
adcl
push
add
pop
into
loop
fists
jbe
push
cmpsb
pop
add
addl
dec
inc
cld
loopne
sbb
push
add
jle
repz
pop
fmull
add
insb
nop
fs
pop
jne
mov
jge
cmc
or
push
outsb
push
or
cs
mov
out
add
mov
sub
sgdtl
mul
pop
lret
xchg
xor
mov
stos
xchg
and
jns
stos
sbb
adc
add
lret
dec
push
ret
push
cmp
pop
add
movsb
add
pusha
cwtl
out
mov
fsubrs
jbe
hlt
daa
popa
movsb
pop
pop
jne
sbb
mov
mov
push
ljmp
sub
in
nop
push
sbb
sub
mov
sbb
mov
lds
push
xor
into
and
loop
leave
xor
or
jp
in
push
enter
add
enter
lock
mov
fisubrl
enter
push
pop
pushf
xchg
inc
dec
outsb
scas
add
add
push
stc
jmp
mov
loop
dec
cmp
pusha
lods
mov
sbb
and
or
nop
les
xor
inc
loope
inc
subb
or
in
pop
pop
or
jns
mov
out
jmp
xor
pop
adc
and
xchg
addr16
lods
sbb
xchg
cld
add
inc
imul
pop
xchg
cmpsb
lahf
or
mov
aas
mov
bound
ljmp
dec
leave
dec
in
and
cmp
xchg
add
xor
mov
adc
cmp
pushf
rcrl
mov
add
xchg
sub
pop
and
and
xchg
or
scas
outsb
test
ja
push
pop
add
push
enter
cltd
mov
xor
rorl
inc
adc
test
xchg
sbb
adc
sub
loopne
jb
adc
rcl
xor
jle
fsubl
add
mov
add
push
sbb
clc
add
push
stos
xor
add
fucomi
jp
inc
mov
mov
inc
loope
cmpb
xchg
add
cmc
add
add
rorl
cmp
lds
adc
daa
aad
insl
push
ss
add
orb
adc
sbb
clc
mov
mov
xlat
scas
imul
mov
icebp
adc
mov
add
shrl
ret
pusha
add
ficomps
add
aad
pop
add
shll
movsb
mov
xchg
lds
jp
or
and
ret
xlat
add
fdiv
daa
adc
add
add
ljmp
loop
cmc
comiss
pop
stc
xor
frstor
and
cltd
sarl
xchg
jb,pt
rcr
add
loop
les
test
ror
es
add
pop
sbb
mov
push
int3
push
sahf
lcall
imull
xor
add
mov
xor
and
call
out
inc
out
movsl
add
sub
mov
movsb
mov
pop
nop
mov
stos
cmc
inc
enter
and
sub
sbb
scas
pop
mov
dec
jo
sarb
add
inc
or
ljmp
add
rorb
xor
loop
xchg
add
js
sbb
gs
pop
mov
imul
lock
or
pop
adc
xchg
add
pop
inc
dec
push
js
jle,pn
sti
and
add
or
ljmp
mulps
adc
pusha
int
movsl
aas
or
ds
add
gs
mov
imulb
xchg
and
mov
je
add
outsl
cmc
stos
sbb
out
add
test
jmp
js
mov
or
insb
cmp
jl
and
xlat
mov
lods
add
shlb
in
test
cmp
mov
fs
je
inc
dec
dec
loop
push
add
jecxz
pop
idiv
sub
sbb
mov
add
add
inc
loopne
sbb
outsb
stc
inc
sbb
inc
aaa
repz
outsl
sbb
dec
ret
adc
orl
icebp
fadd
paddsb
add
jl
mov
mov
and
popa
lods
rorl
mov
loopne
mov
mull
jge
add
daa
fstps
fadds
sub
sbb
jmp
call
in
add
or
mov
dec
sti
mov
sbb
and
sbb
pop
pop
test
or
call
repz
sbb
add
int
out
mov
sarl
push
loop
leave
frndint
call
adc
cmovs
cwtl
lahf
arpl
add
addr16
flds
aam
xchg
lods
testb
and
push
std
rclb
xchg
fwait
popf
psrlw
lock
stos
mov
and
cs
les
jp
ljmp
push
bndldx
inc
sar
in
mov
jge
dec
inc
push
pop
add
pop
add
lret
cmp
mov
lcall
inc
test
aaa
and
cld
lea
call
xlat
sbb
cmp
pop
adcb
cli
scas
dec
popf
add
mov
xlat
adc
adc
fwait
jb
into
nop
add
pushf
xor
mov
sub
icebp
enter
xchg
mov
add
nop
xor
xchg
jno
dec
ret
inc
jb
pusha
inc
push
push
sti
xlat
cmpsl
popf
dec
mov
cmpb
sub
mov
sbb
sbb
push
jg
fsts
xchg
nop
add
and
pop
sub
cld
in
enter
jp
orb
pop
cmp
inc
adc
adc
rolb
lods
into
mov
cld
pushf
addb
icebp
mov
loopne
add
int
js
add
test
pusha
ror
jmp
and
sarl
pop
test
cmp
imul
outsb
cwtl
loope
cmp
js
inc
add
jae
pop
pushl
mov
rorb
jno
jnp
sub
add
stos
daa
and
mov
xchg
mov
mov
sahf
xchg
or
push
push
cmc
push
call
pusha
ret
stc
mov
in
sub
ja
mov
inc
jecxz
add
fs
xor
jbe
adc
xor
mov
cmp
add
xor
add
lock
or
testb
pop
push
cmp
inc
movsb
add
add
or
push
daa
add
mov
mov
cmp
hlt
xor
sbb
scas
call
lock
xor
pop
or
push
ljmp
sub
sub
cmp
movsb
adc
sbb
xchg
out
in
or
jnp
sub
or
sub
test
sahf
adc
mov
ss
enter
shrl
xchg
andb
fwait
push
jl
cmp
push
cmp
sti
int
jae
add
pop
xor
push
or
aad
mov
add
clc
jae
popa
mov
mov
add
mov
rclb
mov
or
mov
mov
cmp
and
xchg
in
cltd
add
call
adc
jg
nop
mov
add
scas
or
xor
in
fdivr
cmp
ljmp
pop
sub
lock
mov
mov
push
add
mov
inc
in
add
mov
mov
mov
xor
stc
enter
add
xchg
pop
test
ss
cmp
xor
xchg
xchg
rolb
jne
es
mov
sub
mov
mov
xor
aam
out
add
fcmovbe
cmc
jmp
add
insl
pop
into
jg
nop
cmp
and
mov
iret
lahf
mov
popl
dec
test
scas
jbe
pushf
push
mov
aad
jmp
xlat
fdiv
mov
dec
adc
push
testl
rcrb
inc
inc
out
add
xchg
cmpb
push
cmovle
scas
imul
dec
jb
mov
out
ja
cmpsl
cltd
jne
adc
xchg
jle
shlb
stos
add
je
xor
test
loope
xchg
add
out
in
or
lea
dec
rorb
sub
adc
add
lods
or
dec
aas
and
add
add
pusha
int
push
lds
jecxz
jg
xchg
sbb
enter
jp
jne
add
push
jns
and
bnd
and
loope
adc
sbb
mov
pop
adc
sti
push
inc
mov
cmp
adc
ja
scas
mov
pusha
dec
adc
dec
mov
or
pop
or
push
fdivrs
cmp
mov
jecxz
push
xor
cmp
adc
xor
jmp
jno
jo
pop
dec
fbstp
mov
mov
add
add
jnp
jp
out
outsb
int3
aad
cld
sarl
pushf
je
ljmp
movsb
imul
xchg
cmpsb
pop
jno
hlt
gs
pusha
aam
mul
jp
aas
setl
jbe
insb
jle
loope
pop
add
lods
jne
fidivrs
add
inc
mov
xchg
mov
stos
pop
enter
pop
sti
in
adc
std
adcl
movsb
mov
push
cmpsl
add
cmp
push
cmp
je
adc
fldl
jl
pop
inc
add
adc
and
mov
cmp
jmp
stc
mov
rorl
cmp
or
lea
rorb
pop
mov
pop
add
stos
mov
leave
cwtl
pop
jle
les
repz
nop
test
je
push
mov
fistpl
rcrb
nop
jmp
pusha
add
pmuludq
test
lods
add
aam
sub
sbb
mov
sbb
inc
mov
popa
imul
push
mov
aad
push
xorb
cmp
add
push
dec
push
stc
outsb
mov
pop
push
add
mov
js
push
es
dec
or
jg
rolb
insl
sbb
mov
sub
mov
inc
ljmp
mov
popf
lret
loope
shrl
aas
test
in
and
add
push
daa
and
test
mov
mov
ret
and
jg
test
add
jbe
or
aas
and
and
test
sarb
mov
push
insl
inc
xor
mov
xor
mov
add
cmp
xlat
pop
sahf
xor
adc
ljmp
lea
pop
dec
sbb
rcr
mov
jne
cmpsl
adc
push
jl
dec
jle
dec
roll
out
or
xorb
arpl
xchg
sbb
and
out
call
jg
jae
or
std
and
dec
sahf
aas
cmovge
or
mov
sbb
mov
jo
sub
adc
dec
add
jno
jp
or
add
xchg
push
cmc
mov
cld
inc
cmp
pusha
aad
sti
add
add
jae
add
andb
add
pop
dec
adcl
xchg
sbbb
inc
popf
sbbb
add
call
jl
add
rclb
cmpsb
inc
jae,pt
cmp
pop
call
int3
xor
jl
nop
aaa
xchg
inc
es
add
jge
xor
sub
inc
cmp
and
fcoml
sub
and
xor
push
dec
pop
test
and
xchg
dec
hlt
jmp
dec
cwtl
add
fstl
sahf
xchg
test
lret
in
push
push
in
das
cmpl
inc
or
sbb
sub
add
adc
xchg
shrl
jo
call
pop
movb
pop
jl
pop
push
enter
push
pop
nop
call
add
aam
xchg
sbb
cmp
mov
add
and
scas
dec
cmp
pop
fsubr
fstps
adc
fcmovne
js
dec
xor
mov
dec
jno
dec
pop
push
add
dec
gs
inc
ljmp
xchg
iret
insb
fcoml
dec
incl
adc
ljmp
rorl
jae
add
pop
jg
add
cmp
sbb
or
xchg
jbe
add
xchg
mov
movsl
rcr
xchg
fistpl
pusha
repnz
mov
cmpb
fdivs
or
dec
lahf
fisttpl
stos
sbb
in
repz
jae
adc
sub
pop
arpl
repnz
or
pop
clc
and
je
dec
inc
xchg
arpl
int
bound
mov
push
das
or
add
sti
and
arpl
add
in
mov
cmp
jecxz
cs
add
pop
jno
cmp
cmp
out
aas
cmp
adc
mov
or
and
sub
add
add
loop
adc
sbb
lock
jnp
ss
aam
and
hlt
mov
bound
cmp
mov
dec
popf
js
add
dec
adc
sbb
sbb
mov
nop
cmp
add
insb
sbbb
push
sbb
add
stos
sub
insl
adcb
call
dec
push
push
pushf
ret
shl
jno
test
xchg
xchg
pop
mov
xchg
cmp
mov
adc
fmull
fwait
dec
in
out
pop
push
mov
mov
stc
je
sbb
into
xchg
or
pushf
inc
in
shlb
add
pop
int
loopne
mov
shlb
aad
mov
add
arpl
dec
hlt
sub
push
enter
rcrb
lret
push
sbb
test
add
lahf
frstor
int
aad
push
dec
and
mov
sub
nop
and
xchg
imul
movsl
push
loop
shl
inc
inc
mov
lods
lcall
sbb
out
lods
or
sti
imul
js
insb
cmpsb
stc
sub
or
push
push
adc
clc
xchg
rclb
jl
stos
add
ret
pushf
push
sbb
sub
dec
xor
add
push
lods
jecxz
js
call
aaa
and
mov
inc
addb
adc
mov
stos
or
or
inc
cmp
xchg
pushf
add
test
mov
push
push
jecxz
pusha
add
cmpsb
and
mov
ds
jg
les
nop
add
fsubl
rcr
jns
add
mov
cmp
test
or
add
aaa
add
and
add
xor
cwtl
jo
loopne
push
mov
mov
fmull
add
or
movsl
or
cmpb
fbld
add
xor
dec
lea
loopne
pop
add
cmp
orl
call
or
dec
cmp
dec
adc
fs
add
fnstenv
lahf
loopne
pop
and
xlat
add
pop
sbb
cmpsb
sub
add
dec
mov
lods
cs
adc
sub
xchg
xor
fcom
jge
inc
adc
decl
mov
pop
lcall
stos
xchg
pop
dec
ret
pop
add
mov
push
sbb
mov
add
xchg
add
add
je
or
xor
dec
add
dec
iret
ds
add
jge
sahf
fdiv
leave
dec
call
jmp
repz
jae
daa
fildl
ljmp
dec
xlat
mov
imul
movsl
sbb
leave
and
lods
cmp
repz
int3
les
ja
pop
push
add
inc
and
scas
addl
push
movsb
mov
iret
push
repnz
xor
xchg
xor
mov
jp
dec
lea
ja
or
push
icebp
in
or
mov
sahf
push
and
push
in
jg
pop
xor
xor
mov
sub
shrl
lods
add
or
push
sbb
outsl
adc
mov
and
in
jle
lea
cmpb
dec
int
jecxz
inc
inc
pop
push
sub
aam
cld
add
rcll
pop
sahf
add
xchg
jge
shrb
jbe
add
cs
loop
add
mov
inc
add
jbe
xlat
cltd
lret
pop
loop
jg
xchg
in
add
mov
push
cmpl
dec
sbb
fs
cmp
popf
dec
add
and
stos
sbb
js
mov
shlb
pop
add
call
pushf
jb
js
adc
test
les
test
clc
je
add
fwait
pop
jae
push
xor
mov
mov
add
arpl
popf
inc
adc
or
mov
xchg
and
cmp
fisttpll
add
sti
scas
lods
add
imul
add
pusha
xor
push
aas
xchg
sub
loopne
fs
sbb
mov
fildl
dec
bound
pop
mov
xlat
pop
adc
ret
adc
mov
je
pop
xor
xor
repz
mov
pop
add
mov
in
add
push
ret
mov
mov
add
negb
xchg
decl
sub
dec
scas
cld
add
adc
mov
adc
xlat
jnp
in
shr
and
mov
or
loopne
cmp
push
adc
shl
or
mov
add
dec
cmp
add
mov
data16
mov
add
jle
adc
fdivs
rcll
sub
push
push
std
sub
sets
sub
add
jnp
cwtl
sub
cld
cmp
or
inc
mull
add
inc
jl
mov
mov
cld
in
or
outsb
add
sub
imul
loopne
sbb
hlt
add
mov
call
adc
adc
ss
test
sar
xor
data16
cmpsb
cmp
inc
test
mov
jg
pop
add
jecxz
mov
rorl
xor
add
je
inc
lock
cmp
in
and
mov
pop
incb
int3
push
insb
add
and
cltd
sbb
mov
int
retw
lock
mov
movsl
and
loope
fists
test
scas
pop
int
mov
xchg
or
pusha
and
fidivrs
inc
ds
in
cli
mov
adc
adc
sub
add
add
loopne
sub
pop
je
nop
into
in
test
popf
daa
lock
add
jecxz
out
lcall
pop
push
dec
cmp
add
icebp
outsl
sub
jno
je
loopne
or
mov
pop
or
fbld
loop
stos
sbb
mov
adc
iret
mov
test
sbb
inc
aaa
add
mov
mov
jns
jp
jg
push
inc
jne
subb
push
lea
add
xchg
mov
pushf
clc
std
shl
out
dec
add
lahf
lcall
sub
push
outsb
mov
outsl
sbb
sti
popa
daa
mov
push
adc
add
phaddw
dec
dec
shrb
rolb
rolb
out
lcall
mov
cld
mov
js
test
mov
inc
ret
add
push
sarl
and
int3
mov
jno
bound
add
cmp
or
rol
xchg
cmp
cmp
cmp
and
mov
push
add
fdivrs
lock
add
repz
push
inc
and
sub
cmp
filds
loop
jl
test
sub
add
daa
std
jg
ret
mov
ljmp
imul
add
lock
mov
push
fadds
aam
mov
push
pop
mov
sub
lret
int3
mov
sarb
aam
xchg
mov
loop
mov
dec
nop
inc
mov
mov
sbb
pop
popf
cmp
lock
push
outsl
add
mov
or
or
push
xlat
adcb
jecxz
int3
push
jl
mov
pop
lret
sub
mov
pop
lahf
in
shlb
je
rcll
cmp
jbe
dec
fs
stos
dec
or
sbb
dec
and
add
xor
and
and
pop
rolb
push
add
jg
pusha
inc
cmpsb
adc
adc
enter
dec
dec
gs
mov
add
cmpsb
addb
sbb
mov
mov
in
nop
and
sub
pop
fcomps
std
xchg
sub
ljmp
push
push
arpl
sub
jecxz
jb
add
movsl
cmp
sbb
pusha
jge
pop
push
test
rcrb
add
jo
dec
sbb
mov
cmc
xchg
rol
or
add
sub
shl
dec
push
or
scas
inc
jns
insb
and
pop
in
cmp
shll
dec
sarb
call
pop
lret
fadds
pop
adc
jo
outsl
xchg
loop
std
mov
cmp
int3
lock
push
add
and
pop
add
xor
stos
fdivrl
add
das
inc
hlt
mov
pop
int3
out
bound
mov
adcb
scas
negl
jge
scas
xchg
lcall
movsl
pop
sarl
xchg
add
push
jo
add
push
inc
xchg
add
cwtl
fistl
dec
bound
aam
add
add
add
push
jg
cld
inc
addb
mov
mov
in
rorl
aas
jne
fisttpl
roll
call
fadds
or
incl
inc
add
pop
jb
push
mov
aam
pop
je
subb
lds
test
and
cmp
in
adc
jl
pop
xchg
in
add
push
and
cltd
sarl
sub
xor
or
jle
in
repz
psubsw
cmpsb
add
xor
and
in
fucomi
je
xor
and
xor
pushf
out
lods
dec
jo,pn
loope
inc
or
mov
bound
dec
mov
mov
add
mov
push
cmpsb
add
outsb
or
nop
push
adc
fisttpl
push
cmpsl
mov
add
gs
jns
stc
cmpsb
jo
push
inc
xor
xorl
out
sbb
cmpsb
xor
mov
aaa
push
pop
cmp
sub
in
sub
fcmovne
adcb
adc
push
rcll
inc
pop
mov
mov
mov
andb
add
sbb
pop
add
mov
call
jmp
mov
xchg
test
cwtl
mov
pusha
popf
jne
inc
sbb
or
adc
clc
lods
adc
and
push
inc
xchg
pop
nop
and
mov
jnp
stc
dec
repz
idivb
inc
incl
icebp
lret
jbe
clc
add
xor
pop
xor
sub
jp
sbb
xor
movsl
adc
out
push
ror
addr16
sub
cmp
arpl
push
mov
mov
out
dec
test
inc
loopne
pop
cmpl
xchg
xor
rcrl
cmc
fistl
lret
call
mov
insb
add
inc
sahf
int
or
mov
scas
movsl
cmc
and
nop
push
sti
jecxz
xor
add
leave
cmp
mov
enter
rolb
cld
lock
sbb
or
into
jnp
inc
pop
xchg
hlt
adc
add
test
jp
xor
mov
jno
fisubrs
ds
es
mov
add
ss
test
add
adc
xchg
sub
loope
dec
cwtl
mov
jp
cli
xchg
adc
and
repnz
dec
pop
fucom
add
popf
enter
mov
xchg
out
rorb
clc
in
adc
adc
mov
mov
fwait
mov
cmp
and
rorb
xchg
add
jmp
pop
sbb
mov
jo
imul
mov
rcrl
xchg
aad
xlat
popa
jg
mov
push
or
lock
add
jae
arpl
call
pop
cs
aas
leave
lahf
hlt
adc
shrl
jo
cs
out
out
inc
loopne
jge
pop
push
ss
out
cmp
rcll
insl
lods
ret
and
dec
mov
shlb
outsb
sbb
lcall
fwait
out
and
loop
loopne
mov
fadds
stos
outsl
sbb
cmp
adc
jecxz
shlb
and
arpl
mov
scas
hlt
and
add
adc
inc
add
push
jns
pop
fsubrl
add
push
inc
mov
push
pop
clc
pushf
pop
int3
and
push
loope
ss
sub
pusha
rdmsr
fstps
in
sub
push
pop
mov
movsb
push
sbb
shll
fisttpll
stos
mov
and
mov
add
sbb
movsl
clc
and
mov
cmp
xchg
xor
cmp
jbe
add
js
cmpb
in
adc
repz
cwtl
ret
push
pop
jbe
sbb
inc
mov
sbb
cs
insl
adc
inc
loop
mov
add
jo
inc
hlt
iret
pop
test
mov
add
jne,pn
sbb
and
sbb
inc
add
mov
inc
lods
xchg
sub
rclb
xchg
adc
mov
outsb
add
xor
push
stos
in
add
xor
push
call
adc
pop
sub
insb
jb
xchg
out
fsubs
and
jle
mov
aad
mov
push
jo
or
add
push
adc
dec
in
mov
add
mov
jmp
call
pop
aad
or
push
pop
lock
ss
pop
loopne
pop
popa
dec
loopne
faddl
aam
jb
sbb
call
push
mov
add
lods
ficoml
add
in
jle
gs
mov
imul
mov
jb
aas
jnp
repnz
repz
leave
add
sahf
and
mov
sub
add
andb
cld
mov
push
hlt
mov
insl
popf
sub
loop
movsl
dec
sbb
js
xchg
pop
cmpsl
and
push
out
add
jo
cmpsb
add
out
insb
adc
add
dec
in
pop
xchg
insl
loopne
rsqrtps
pop
push
cltd
adc
sub
jle
dec
sbb
fsubs
xlat
pop
mov
mov
pop
icebp
xor
aas
adc
in
add
pusha
or
pusha
fwait
sub
fsubrl
jp
add
xchg
fs
add
sub
or
push
shlb
jge
ja
pusha
daa
rcll
add
pop
dec
stos
push
sub
je
jp
mov
aad
or
add
xor
pop
das
loop
popf
lret
adc
inc
ret
adc
mov
subb
sbb
add
movsl
push
and
aam
push
cwtl
in
outsl
cmp
mov
mov
sbb
xor
adc
push
cmp
mov
mov
add
sbb
jb
fs
daa
cmp
add
pop
push
rolb
push
aad
stos
and
mov
iret
sub
add
fnsave
rorb
stos
add
adc
outsb
cwtl
mov
std
pusha
hlt
mov
sbb
xchg
jle
icebp
hlt
mov
das
pop
ljmp
pop
loope
add
dec
adc
jle
stos
cwtl
add
sbb
call
movsb
fidivrs
sub
xchg
nop
sbb
push
outsb
sub
and
inc
jno
mov
xor
mov
mov
scas
sbb
loop
add
push
mov
or
loopne
xchg
sub
testb
inc
mov
xor
dec
add
and
outsl
xor
js
and
or
hlt
rorl
jmp
and
cmp
xor
jg
pop
inc
clc
ret
aas
add
mov
jle
gs
test
neg
or
xchg
add
push
inc
mov
add
xor
sub
sbb
mov
inc
stos
lcall
xchg
pop
ss
or
rolb
pusha
in
add
push
pop
gs
cli
or
mov
add
push
fisubs
push
ja
sbb
pusha
mov
popf
ljmp
pushf
sbbb
inc
dec
sbb
cmp
sub
add
test
pop
movsl
cmp
int
push
insl
ret
adc
test
jecxz
cmp
popf
or
rorb
jno
sahf
out
cmp
rorb
scas
dec
mov
out
pcmpgtb
add
cmpsb
insl
mov
rclb
call
adc
adc
ja
loopne
sub
push
cltd
add
mov
dec
js
cmp
in
mov
add
mov
jg
loopne
inc
movsb
xlat
lahf
out
add
push
icebp
mov
add
loope
mov
or
adc
loopne
push
inc
sbb
jmp
lods
jp
add
nop
pop
pop
jnp
dec
add
jecxz
movsl
mov
nop
adc
pop
add
clc
sbb
push
dec
pop
sahf
out
pop
enter
mov
mov
xchg
fadds
jae
out
pop
jmp
loopne
jb
add
inc
jmp
push
add
inc
and
popa
mov
movsl
add
adc
bound
es
xchg
shrl
push
in
add
repnz
pop
jp
rcl
addb
fwait
sub
add
sub
cltd
cmp
inc
jp
std
pop
and
stc
xor
in
adc
push
roll
and
and
add
sub
add
push
sbb
push
pop
dec
mov
out
jl
rolb
iret
add
out
ss
sbb
cwtl
popa
add
jnp
add
cmp
loop
push
pop
sbb
pop
pusha
mov
lcall
cmp
je
js
nop
pusha
add
mov
xor
mov
pop
mov
xchg
ja
lock
mov
sbb
sbb
mov
enter
xchg
into
xchg
and
cmp
jp
lcall
adc
inc
orb
lods
cmc
add
test
lods
jns
lock
orl
repnz
es
sarl
pop
sahf
loop
mov
sub
rcrb
jb
std
cmp
gs
mov
nop
sti
inc
cli
cld
adc
jo
add
jnp
sbb
add
stc
inc
pusha
xor
subl
add
cmp
pop
mov
jg
add
cmc
adc
imul
jno
jne
out
das
sar
andl
pop
scas
or
pop
mov
cmp
js
setge
xchg
sbb
add
dec
mov
xchg
imul
and
out
pcmpgtd
jle
or
push
iret
shll
mov
addb
push
ficomps
pushf
mov
mov
or
dec
ds
jp
adc
arpl
cmp
or
push
mov
in
add
out
adc
arpl
inc
jne
pop
add
add
jecxz
imul
inc
xor
rorl
push
and
adc
add
jmp
add
hlt
cld
loope
mov
dec
pushf
xor
pop
int
add
testl
lret
mov
lock
jle
push
add
adc
mov
add
pop
mov
jo
rcrl
leave
add
pop
loop
xor
aam
sbb
lock
mov
cmp
lret
sub
xchg
add
inc
pop
fists
testl
pop
inc
dec
sbb
dec
xchg
sbbb
inc
lock
inc
clc
pushl
movsb
add
jno
sarl
insl
cmp
pop
push
add
dec
xchg
clc
xchg
push
cmc
std
dec
aas
add
sbb
xorl
outsl
ja
iret
xchg
loopne
addr16
or
xor
pop
loopne
test
bound
lods
mov
or
inc
add
lret
inc
stos
push
xor
or
add
mov
ret
add
divb
les
rorl
std
ret
sub
push
addr16
inc
js
inc
les
scas
jb
sub
jmp
sbb
mov
mov
out
push
scas
inc
and
add
dec
and
jecxz
xor
sub
cmpsb
mov
cmp
movsl
loopne
scas
add
xchg
bound
add
inc
inc
ljmp
in
add
sub
lahf
sarl
js
add
lds
clc
out
sbb
push
inc
rcrb
mov
jnp
jo
ret
lret
adc
jno
insb
adc
ret
dec
lods
rolb
gs
imul
in
add
inc
subl
fistl
in
add
xor
inc
add
pusha
dec
add
cmp
leave
mov
in
pop
and
mov
or
push
lods
ljmp
out
mov
mov
cmp
adc
add
arpl
lret
sub
fwait
call
inc
push
push
xchg
adc
das
sbb
add
cld
loop
pop
sbb
dec
push
xor
push
mov
add
orb
add
mov
mov
lods
pop
push
mull
mov
add
adc
mov
and
add
sbb
out
pusha
push
xchg
add
mov
push
ja
add
ret
add
lea
adc
call
and
dec
in
dec
mov
sub
add
xchg
std
pop
jnp
jecxz
das
add
xchg
push
cmpl
mov
push
sahf
add
xchg
lcall
xchg
bound
into
xor
imul
add
and
or
inc
add
sbb
ljmp
sarl
add
sti
xchg
jp
cmp
add
or
shlb
call
rcll
add
popa
lods
pusha
add
jl
imul
jne
mov
xor
or
inc
mov
rolb
jle
add
jle
xchg
stos
mov
add
mov
cmc
mov
addr16
mov
sub
and
mov
cmp
mov
xor
lret
jnp
jecxz
adc
adc
dec
sbb
add
mov
stc
add
je
mov
sbb
mov
fsubs
int3
sbb
rcrb
add
sub
add
pop
adcb
or
add
lods
dec
sub
pusha
mov
mov
or
aam
push
subps
pop
add
fsubl
scas
out
and
adc
mov
in
push
push
mov
mov
pusha
adc
adc
rcrl
movsl
add
fs
mov
xor
mulb
inc
sbb
fisttpll
xchg
pop
push
aas
cmp
andb
xchg
add
lea
or
mov
ret
sub
cmp
mov
cmc
add
loopne
rol
nop
cmpsl
xorl
lods
xchg
mov
push
scas
movb
push
in
mov
lods
mov
mov
popa
push
mov
cmpsl
or
fwait
lea
adc
cmp
hlt
inc
ucomiss
pusha
push
rolb
and
notl
and
push
xor
cmp
fisubrs
daa
cmp
fldcw
and
mov
or
mov
test
mov
cs
pop
push
mov
ror
push
mov
sub
xor
pusha
movsb
mov
js
xor
lret
adc
sbb
add
cwtl
lds
sbb
aam
xor
sbb
pop
pop
fidivl
pop
adc
mov
push
pop
xor
rclb
test
jmp
mov
sub
mov
or
in
add
xor
mov
fwait
push
roll
sbb
stos
imul
jne
add
dec
mov
cmp
pop
cmpb
inc
mov
stos
orl
jg
push
ret
pop
cmp
pop
pushf
pop
pop
fidivl
cld
sub
mov
add
jno
or
push
pusha
pop
fidivs
out
xor
cmp
fucom
inc
loopne
sahf
pop
aas
addl
fisttps
mov
pop
repz
lods
dec
push
ror
popf
mov
enter
xchg
sub
adc
jle
add
mov
fsubs
mov
popa
dec
pusha
fwait
jecxz
ret
pop
and
or
mov
xchg
add
pop
test
adc
or
je
pop
dec
shrb
movsb
xor
jg
pop
mov
fiadds
ret
loop
or
push
xor
push
lea
add
xchg
xchg
mov
mov
sub
dec
imul
xor
and
mov
push
jb
jp
add
xchg
sti
subb
sbb
cmp
pop
arpl
add
mov
cmp
pop
rorb
cmpb
pop
pop
sahf
or
push
sarb
xchg
sbb
sbb
aas
add
dec
fcoms
mov
pop
ret
pop
lret
xorb
xor
dec
jne
pop
stos
xor
add
test
jbe
out
inc
xchg
push
lcall
js
sbb
outsl
sbb
movsl
enter
mov
lahf
ss
iret
cmpb
mov
jae
decb
xchg
dec
hlt
rorl
cltd
push
xchg
lahf
pop
inc
cmpsl
mov
sbb
push
in
push
inc
xorl
cltd
cld
adc
pusha
sub
jae
mov
popf
bound
push
jne
fadds
lahf
pop
and
daa
mov
scas
add
lahf
sbb
cmp
or
mov
popa
adc
out
add
lds
test
cmpl
cmc
lods
dec
fiaddl
shll
jecxz
adc
adc
pop
adc
adc
and
add
ret
jle
test
sbb
mov
push
rolb
add
bound
and
add
add
inc
mov
fcomps
xlat
lods
add
mov
negb
subl
push
mov
adc
mov
or
dec
jns
adc
or
ficomps
rclb
lds
add
mov
push
in
jbe
psubusb
cmp
add
jecxz
sub
add
dec
enter
insb
test
or
lods
cmp
andb
stos
subl
insl
cmc
cwtl
mov
iret
adc
cmpsl
dec
inc
lret
loopne
sbb
mov
inc
std
dec
add
cmp
xchg
inc
and
add
mul
lods
adc
add
sahf
ljmp
add
pop
adc
mov
cmpsl
add
xchg
jmp
cmp
xchg
mov
pop
adc
shlb
jmp
clc
das
pop
jp
or
inc
mov
movb
cltd
add
push
add
sbb
ss
mov
fwait
inc
cmp
mov
pop
pop
adc
pop
mov
addb
psraw
xor
dec
sbb
inc
sub
sub
orb
dec
mov
loopne
icebp
jno
pop
in
add
ljmp
add
xchg
adc
mov
jae
fimull
mov
cmp
xor
or
nopl
add
push
cli
xor
orb
outsb
in
pop
popf
popa
dec
nop
lock
aad
add
out
shr
add
push
mov
xlat
int
xor
mov
loopne
outsb
lods
adcb
repnz
pop
imul
adc
lods
clc
mov
lock
inc
mov
fdivrl
xchg
ret
rolb
cmp
imul
push
and
dec
xlat
sbb
arpl
xchg
pop
dec
push
mov
les
jno
cltd
sub
push
jbe
add
aad
hlt
pop
scas
cmc
out
jge
lock
adc
adc
into
dec
xor
inc
lcall
addb
imul
dec
fwait
push
pop
loopne,pn
into
adc
push
cmp
shlb
or
adc
fsubl
cmc
mulb
fists
lods
outsb
cli
jns
add
sub
movsb
lret
sub
enter
rolb
in
cs
cmpb
rcrb
xchg
sub
les
dec
cmp
fs
popf
hlt
or
push
push
cmpsl
cmpb
mov
push
pop
add
loope
and
mov
and
sbb
bnd
adc
addr16
mov
cmp
inc
add
inc
icebp
enter
sub
mov
jbe
fdivr
out
add
pop
or
flds
add
outsl
insl
add
xchg
loope
xor
add
shll
mov
or
sti
mov
push
cmp
add
sbb
xchg
ja
add
xor
arpl
adc
add
pop
imul
sub
xchg
adc
aad
movsb
add
enter
cmp
push
or
add
adc
add
mov
out
nop
clc
inc
sub
mov
sub
add
mov
adc
ss
ficoml
shrb
es
add
out
jecxz
ja
add
jle
fcomps
in
lock
jns
negb
cltd
adc
or
shrl
fldl
mov
int3
test
mov
rorb
sbb
popf
cmp
stc
dec
inc
pop
cmp
mov
je
cld
movsb
sbb
scas
nop
adc
adc
cli
das
aad
fs
add
out
repnz
jno
add
pop
ss
sub
xor
ljmp
mov
cmp
loop
sub
add
xor
scas
ss
arpl
mov
inc
in
in
vpshaq
add
insb
add
fstp
sbb
idivb
xor
rorb
add
fs
push
cld
arpl
inc
rorl
adc
movsb
mov
aas
rclb
add
cmp
imul
mov
xor
cmp
loopne
xor
pop
and
mov
sub
popf
xor
sub
add
push
test
sbb
lods
jge
mov
add
js
and
xchg
inc
fistpll
add
int
iret
in
add
xlat
push
popf
adc
rol
loopne
mov
xchg
aas
or
dec
fdivrl
lods
push
je
pusha
out
and
jne
pop
imul
adc
daa
pusha
add
mov
xchg
add
mov
mov
out
adc
add
push
adc
in
mov
sti
mov
mov
push
add
cmp
in
shrb
cld
xor
stos
mov
xchg
jl
dec
push
in
push
dec
mov
test
fisttps
mov
mov
mov
in
icebp
popa
add
dec
xor
call
ds
add
lock
add
pop
lahf
inc
sbb
repz
push
xchg
jge
fdivs
and
xchg
aam
les
jnp
push
js
mov
xchg
lcall
dec
or
out
inc
pusha
add
cmc
and
shr
xor
add
loop
fadds
cmp
lock
fsubrp
mov
push
pop
add
outsb
sbb
add
xorl
mov
add
adc
or
xchg
adc
mov
xchg
add
or
push
int3
xchg
nop
cmp
jl
mov
dec
cmp
fistpll
loopne
push
sbb
add
movsl
test
dec
out
sbb
adc
fdivrs
clc
cmpsb
add
movsl
mov
cmp
add
pop
rorb
inc
push
add
pop
aam
cltd
xlat
cmpsl
or
add
xchg
mov
je
sub
xchg
addb
dec
xchg
inc
jae
sbb
cmpb
lods
and
add
outsb
sbb
cmp
add
and
add
sbb
fdivl
fcompl
loopne
add
push
lods
fnsave
push
ret
fdivs
faddl
call
jae
push
mov
mov
mov
sub
and
in
pandn
negb
lods
inc
mov
sbbb
loope,pt
and
adc
in
jmp
jae
divl
push
push
pop
loopne
mov
cmp
imul
adc
punpcklbw
jo
adc
mov
les
add
push
xor
jge
add
sbb
aad
int3
lret
loope
nop
fcmovnb
sbb
mov
mov
stos
pop
jge
cwtl
inc
adc
sub
xlat
sbb
xor
push
mov
sbb
dec
xorps
testl
lcall
sbb
xor
jp
jne
or
jmp
stos
sub
push
scas
imul
adc
fs
iret
insl
dec
inc
lret
xchg
bound
int
add
mov
enter
dec
sub
in
sti
add
fs
cld
jbe
sbb
jns
cmp
sahf
adc
mov
in
add
scas
pusha
icebp
mov
orl
push
mov
imul
push
xor
fadd
cmp
rorb
sbb
pop
sbb
loope
aam
insl
mov
data16
or
ljmp
ret
mov
mov
sbb
cmp
adc
add
mov
pop
add
push
test
adc
push
add
call
stc
add
int
and
mov
xor
jb
shlb
xchg
loopne
subb
jno
aas
ss
mov
insb
gs
xor
call
adc
and
inc
add
cltd
lods
fildl
data16
pop
xlat
mov
mov
fsubl
ljmp
mov
das
add
ja
notl
and
sub
mov
adc
xchg
adc
sub
mov
xor
repnz
out
cmp
pop
jae
data16
ljmp
shr
add
fld
int3
in
or
add
push
push
clc
bound
sbb
fsubs
jmp
sbb
cmp
or
or
add
mov
dec
lret
into
adcb
movsb
pushf
je
adc
clc
xor
adcb
mov
add
out
mov
rcrb
movsb
daa
cmp
inc
mov
es
loope
cli
ret
fsubs
imul
pusha
fs
sbb
stos
inc
inc
add
add
adc
clc
ja
add
test
repz
test
add
cli
sub
sbb
add
mov
ret
mov
add
and
bound
pop
jae
fcomi
jbe
add
mov
and
and
add
mov
add
sub
sub
mov
xor
rcrl
push
jae
push
and
xchg
cs
cld
pusha
mov
mov
imulb
data16
jmp
cmp
out
pop
insl
push
inc
adc
test
inc
add
enter
in
faddl
xor
andl
shrb
mov
add
jns
xor
out
arpl
cs
movsbl
addb
and
test
inc
add
lahf
dec
xor
lcall
pusha
stc
add
lock
bound
xor
inc
fadd
fs
dec
orl
call
inc
xchg
pusha
in
xor
ja
and
add
es
scas
addr16
roll
movsb
xlat
xchg
popf
fiadds
mov
aam
push
mov
shlb
push
push
cmc
enter
sbb
adc
or
add
xor
mov
stos
ret
mov
shr
es
out
in
add
aaa
mov
sbb
scas
mov
xor
lods
jno
add
jae
loop
xchg
jbe
enter
ds
add
sbb
mov
in
inc
fsubp
je
cli
inc
push
mov
js
xor
add
cltd
inc
in
pop
cmpsb
mov
sub
jecxz
add
mov
dec
xchg
xchg
add
dec
pop
int3
lock
push
stos
lods
sub
jle
add
jae
mov
or
fs
sbb
repz
test
and
enter
enter
sbb
pusha
xor
mov
shlb
call
cmp
loop
push
test
xor
push
xchg
add
xchg
imul
add
ret
pusha
or
adc
adc
rorb
mov
addb
add
and
add
popa
lahf
pop
cmp
cmp
add
or
or
or
nop
in
add
daa
push
lea
dec
or
lcall
jle
sub
mov
jb
mov
insb
add
adc
dec
shll
add
or
sbb
inc
cs
je
sbb
add
sbb
sub
push
fiaddl
jae
dec
dec
and
dec
int3
out
and
mov
in
or
mov
xchg
jo
adc
inc
aam
aas
xchg
xor
push
call
and
clc
std
rorb
add
cmc
xchg
push
cmp
sbb
outsb
sbb
ss
dec
xor
add
add
lret
adc
cmp
or
pop
xor
mov
xchg
cmp
mov
jne
add
mov
js
add
iret
xor
in
inc
in
out
pop
aas
jno
sbbb
lahf
pop
add
jmp
pop
hlt
decb
jne
dec
pop
jns
add
inc
and
decl
push
in
mov
mov
andb
xchg
xor
xor
add
mov
add
in
cmp
ret
mov
mov
test
jne
or
sar
add
roll
mov
mov
cmp
pop
test
test
or
xchg
fiadds
popf
subb
sub
mov
mov
lcall
push
fisttpll
push
mov
jp
push
test
adc
xchg
fwait
aad
mov
stos
pushf
movd
pop
nop
scas
repnz
or
ret
sar
fsubs
int
mov
jo
mov
insb
sub
popf
testl
clc
jl
decb
adc
loop
lret
pusha
mov
testb
sbb
jmp
or
cli
add
jnp
vmread
aaa
cmp
adc
pop
xor
sbb
cltd
mov
xchg
add
or
sbb
pop
push
repnz
sub
imul
cmp
mov
orl
fists
pshufw
pop
sub
mov
jne
add
in
cli
push
add
fldenv
sti
xchg
aaa
stc
add
movsb
insl
or
add
jns
scas
adc
pusha
je
push
or
lea
push
add
cmc
cmp
jo
in
sub
push
push
and
rolb
jno
shl
lret
mov
add
ret
push
cli
add
mov
mov
jb
mov
pop
mov
gs
mov
cmc
int
mov
stos
outsb
iret
lahf
addr16
pop
pop
add
add
lock
xchg
xchg
subb
push
test
dec
jns
cmp
test
sub
pop
aaa
mov
xorb
and
mov
mov
or
add
popf
adc
jp
inc
test
mov
mov
dec
std
sub
lods
into
add
mov
addb
out
ss
addr16
add
pop
add
adc
call
add
sbb
jne
xorps
lahf
scas
adc
in
mov
sti
clc
iret
jbe
sbb
sbb
sub
fdivl
xor
or
mov
adc
push
pop
jp
shrl
cmc
cmp
add
or
xchg
pop
add
cwtl
in
add
int3
loopne
pop
xchg
pusha
cmc
data16
pushf
lds
xor
mov
fwait
jle
add
mov
add
inc
jl
pop
sbb
jbe
cmpsb
xor
lods
cmpb
scas
or
shrl
add
icebp
adc
popl
sub
sbb
cmp
mov
add
xchg
mov
dec
pop
adc
add
idivl
out
cwtl
pusha
popa
mov
aaa
imul
ss
test
mov
and
movsl
mov
mov
or
push
xor
out
lahf
fmuls
or
cld
hlt
daa
dec
add
test
sbbl
add
dec
xchg
rorb
sbb
sti
aaa
adc
lea
pop
das
xor
rolb
push
pop
jmp
xor
call
adc
sbb
jnp
in
mov
and
sbb
cli
imulb
push
fsubs
mov
jecxz
rcrl
inc
sbb
sbb
mov
and
pop
add
sub
pop
push
out
and
fstpl
mov
mov
insl
add
outsb
movsb
insb
pop
into
mov
add
test
sti
and
in
fcompl
arpl
push
lock
or
pop
arpl
imul
lret
pop
in
fimull
inc
sub
pop
add
mov
dec
push
inc
shrb
addr16
add
sub
loope
dec
inc
xor
movsb
xchg
test
insl
mov
pop
sub
push
jmp
xchg
aaa
cmpsl
addr16
sbb
jg
or
mov
xlat
shrb
pusha
adc
sahf
xor
or
mov
xchg
sub
sti
or
jne
mov
sahf
jge
pop
test
out
xchg
adc
add
lret
cmp
aas
mov
subb
or
add
daa
lcall
rorb
cmp
ja
sub
mov
mov
and
mov
rcrl
mov
add
test
cwtl
scas
rcr
popf
mov
push
rorb
aad
xchg
dec
or
imul
pop
cld
pop
add
loopne
add
xchg
les
push
push
cld
pop
lock
adc
lods
or
ja
add
movl
mulb
cmpsb
daa
cmp
jbe
pmaxsw
out
mov
jmp
cli
pop
pusha
clc
cmp
dec
mov
add
xchg
push
mov
xchg
mov
push
call
jg
outsb
fwait
cmp
lret
mov
mov
loopne
and
sbb
xor
sub
movb
inc
mov
mov
leave
xchg
out
sahf
clc
add
inc
mov
xor
cmp
cltd
fistpl
push
xchg
ja
pcmpgtb
adc
mov
and
pop
repnz
icebp
add
sub
mov
add
aad
xchg
xchg
addl
sub
sub
addr16
ror
push
jb
aaa
jl
and
test
add
sbb
lret
push
xchg
add
pop
pop
and
gs
adc
sbb
test
in
sbb
pop
and
xchg
fadd
mov
xor
fimuls
cmp
mov
mov
lods
rolb
add
or
mov
pop
sub
add
rorl
loop
pop
sarb
lret
jecxz
xor
filds
push
je
and
cmp
and
mov
ljmp
in
jmp
add
rorb
mov
clc
jae
decl
pop
jmp
sbb
adc
stc
pop
mov
inc
into
pop
mov
add
or
and
dec
enter
mov
iret
inc
icebp
xor
add
adc
xor
push
pusha
hlt
fwait
or
ret
loop
and
leave
xchg
add
test
popa
sti
fwait
pop
add
push
repnz
scas
sub
test
cmp
xchg
jmp
jl
add
popa
mov
pop
lcall
add
add
sub
add
add
dec
xchg
sbb
add
in
or
and
and
cwtl
outsl
add
xor
cmpsb
mov
addl
shlb
out
cs
lds
mov
lret
push
int3
cli
lret
addr16
pop
shl
shlb
jo
dec
clc
fldl
inc
ss
fistpl
adc
orb
out
adc
pop
adc
repz
mov
cmpsl
or
insb
loopne
cmp
dec
pop
addb
jmp
test
add
inc
add
pop
inc
inc
xchg
sbb
dec
aas
jno
outsb
add
pop
dec
ds
lds
cwtl
je
icebp
fmuls
add
fmuls
dec
std
jl
add
enter
clc
cmp
lock
addl
dec
mov
mov
mov
sahf
fnstsw
leave
or
push
xchg
or
add
inc
cmpsb
enter
push
out
test
xchg
cld
and
cmp
ja
add
sbb
push
inc
shlb
push
enter
dec
inc
aad
dec
mov
pusha
movsb
iret
into
and
jmp
stos
xor
cmp
call
pop
pusha
adc
adc
cmpl
add
dec
cmp
addr16
dec
add
mov
adc
jo
lcall
adc
add
popf
xchg
sbb
add
mov
dec
xchg
mov
icebp
add
addb
mov
cmp
inc
push
inc
setne
pop
and
insb
add
jns
mov
sbb
dec
xor
push
scas
clc
ss
sbb
negb
loope
xlat
dec
or
jmp
cmp
push
jbe
movzwl
repz
or
mov
loop
aad
add
shll
mov
add
cmp
xor
mov
pop
sub
pop
nop
sbb
in
inc
xor
mov
push
popf
inc
lcall
arpl
pop
mov
add
push
rcr
in
les
push
hlt
movsl
out
push
subl
pusha
fidivrs
daa
ja
jne
cmc
in
add
les
xchg
xchg
stos
jecxz
stos
or
insb
add
inc
imul
xchg
mov
xchg
sbb
in
test
add
xchg
dec
clc
jp
or
movsl
mov
inc
xorb
mov
jne
jl
xchg
sbb
mov
push
outsl
pop
xchg
in
mov
scas
jne
lods
je
mov
shrb
scas
aam
stos
adc
mov
xchg
test
sbb
inc
jnp
fisubl
cmpl
leave
inc
addr16
frstor
outsl
or
mov
loop
pop
test
inc
out
inc
and
adc
cmpb
and
and
fcoml
pop
cli
adc
icebp
adc
and
push
repz
sub
call
lcall
js
push
flds
fsubs
and
xchg
cli
add
lods
jbe
ja
or
iret
adc
lret
push
fs
sbb
sub
sti
loopne
pop
lock
inc
lods
jae
das
or
xchg
add
add
flds
test
iretw
push
sbb
adc
test
or
mov
push
sub
addr16
add
push
mov
rorl
gs
or
into
rcr
sub
or
mov
sub
mov
add
rolb
jne
mov
xchg
jge
test
orb
jecxz
loopne
mov
add
inc
hlt
and
xor
dec
or
or
cwtl
ffreep
adc
ljmp
mov
test
cmpsb
fwait
leave
movsb
icebp
sbb
jns
in
cmp
fsubp
add
mov
pop
jg
mov
std
xchg
daa
mov
lock
jg
add
dec
push
pop
jmp
xchg
xor
pop
mov
fmul
fnstenv
fwait
bswap
insl
add
and
push
dec
mov
push
cmp
add
rep
loopne
add
push
jnp
mov
mov
cmp
jle
or
into
sub
lret
cmp
ss
jo
or
inc
bnd
cmp
loope
popf
cmpsb
add
mov
xor
and
insl
xlat
or
or
jno
add
cmpsb
loopne
movl
clc
sub
lods
bound
scas
mov
pop
inc
xor
mov
jno
push
rorl
pop
lcall
add
xor
aas
and
push
lds
rcll
mov
aam
xchg
push
sahf
ja
test
add
clc
loopne
push
inc
popa
mov
xchg
add
mov
mov
add
aas
repnz
insl
or
cmp
add
mov
jne,pn
js
cmp
clc
lahf
adc
xchg
sti
sbb
add
pushf
mov
call
xchg
xor
sbb
cmp
add
ja
push
cmp
jne
jbe
icebp
jecxz
fistl
jb
add
inc
mov
jbe
jp
mov
sub
xor
scas
out
sbb
cmp
pop
imul
sub
xor
adc
lock
mov
dec
jmp
xor
sbb
cmp
in
scas
sti
outsb
or
xor
add
hlt
push
fstpt
jae
add
jno
cs
jg
aam
pushf
add
mov
int
add
add
add
mov
in
sub
mov
jae
xor
ret
mov
xorb
xor
roll
enter
mov
test
add
jbe
add
inc
xchg
sub
pop
popf
cld
jg
add
ljmp
pop
inc
insl
scas
and
stos
add
popa
dec
hlt
in
or
xor
cmc
or
xchg
push
jno
std
leave
popf
inc
mov
stc
xchg
or
push
cwtl
sub
jnp
mov
adc
push
and
xchg
nop
in
add
xchg
cmp
movsb
push
add
inc
pop
sbb
cmpsb
xchg
jecxz
push
dec
shlb
cmp
pop
pop
fists
xor
fiadds
mov
aas
out
inc
lret
outsb
xchg
add
sub
dec
vpaddq
add
xchg
aaa
fdivrs
popa
push
sub
or
jg
lret
rol
fwait
bound
jl
add
mov
addr16
aam
mov
add
stos
pusha
add
xchg
cmc
aad
dec
and
sahf
add
fisttpll
and
lds
push
fisubs
jnp
pop
mov
lock
mov
scas
pop
mov
jecxz
insl
cwtl
popf
out
push
add
stos
dec
mov
adc
jp
and
fwait
in
dec
add
or
filds
add
sbb
out
enter
xchg
mov
lds
adc
pushf
add
shl
xchg
add
jnp
fs
pcmpeqd
push
jb
outsb
mov
xchg
mov
mov
add
xor
cmp
lea
mov
jmp
jo
sub
stos
mov
xorb
cmp
cs
out
lock
test
mov
movb
xchg
dec
jne
xchg
test
jo
sub
sahf
rcrl
call
add
out
pop
adc
or
add
test
push
cmc
inc
and
add
pop
hlt
call
dec
jo
jecxz
push
adc
ds
cltd
sahf
arpl
push
shlb
lea
inc
mov
pop
xchg
aam
fdiv
cwtl
rolb
cmp
add
push
dec
mov
loop
sub
or
lock
mov
outsl
test
in
sub
fs
add
sub
add
roll
mov
stos
ret
dec
cmp
xor
movsl
and
insb
inc
call
add
mov
push
loopne
movsb
in
jge
scas
pop
push
xor
jp
test
xor
cmp
enter
xchg
dec
cmp
test
arpl
andb
xorb
clc
push
mov
mov
cmp
je
push
add
ja
sbb
mov
js
pop
sub
and
incb
fldenv
add
pop
fdivrs
pop
push
rclb
add
add
lock
add
dec
add
movsl
or
les
add
enter
fisttpll
mov
leave
shll
pop
lds
add
push
jns
mov
sbb
clc
insl
and
add
cli
pop
sahf
lods
gs
jbe
jae
dec
repnz
sub
out
fsubp
push
jle
scas
mov
push
sahf
loopne
mov
lret
addr16
cmpl
pop
pop
aas
dec
popa
add
adc
lcall
mov
stos
js
fmuls
dec
jne
or
lret
incl
adc
jg
fucompp
cmp
pop
int3
sbb
sarb
mov
insb
add
and
cmp
into
dec
add
enter
xchg
add
push
push
outsb
or
jp
add
ficomps
add
push
imul
mov
pop
sub
dec
or
aam
and
lea
shr
inc
aad
xor
sub
cmp
mov
push
xor
mov
movsb
mov
jmp
sub
cli
mov
xchg
sub
addb
xlat
jo
into
add
dec
addr16
in
and
in
push
add
lods
pop
popf
inc
hlt
shll
mov
test
aam
dec
test
push
mov
pop
sbbb
pop
addr16
push
movsb
adc
mull
lods
jae
in
xchg
pop
sbb
or
xchg
add
leave
push
cmp
imul
jle
mov
cmp
cmpb
stos
test
das
out
fistpll
pop
and
xorl
push
bound
pusha
loopne
das
cmp
and
xor
scas
xor
sbb
sarl
xor
and
lea
add
push
push
mov
cld
inc
and
dec
jge
sahf
rolb
enter
push
repz
mov
add
jo
sarl
add
pop
popf
cmp
cmc
pop
mov
xchg
add
jbe
mov
push
push
jo
sbb
adc
inc
cs
dec
out
pop
xchg
xor
add
mov
rolb
nop
aam
ljmp
sub
rolb
iret
cmpb
add
jno
sbb
in
jo
add
imul
cmc
sbb
jg
pop
sbb
cmp
les
xchg
fsubr
js
mov
mov
aam
fs
add
mov
shlb
or
mov
into
add
mov
aaa
call
addb
jb
mov
jbe
and
sti
inc
jbe
add
dec
pop
fbstp
mov
test
int3
jg
add
cmp
mov
add
imul
aad
out
jo
pavgb
popf
in
hlt
cmp
cmc
lea
push
fsubl
adc
inc
add
jns
mov
out
jg
cmc
stos
sbb
mov
mov
dec
mov
inc
inc
jp
repnz
mov
and
movsb
dec
ret
outsl
xchg
jp
in
cld
fcmovnb
inc
adc
jmp
nop
aaa
add
fwait
jbe
fstps
mov
xor
add
add
adc
leave
and
adc
subb
cmp
nop
add
mov
stos
or
dec
sub
add
jns
mov
stc
add
push
sbb
call
pop
mov
movb
sahf
into
shl
and
loopne
inc
add
in
shl
mov
add
mov
xor
push
sbb
add
and
fadds
pushl
shlb
pop
mov
stos
fmul
pop
xchg
cmp
cmpsl
add
lods
lcall
cmp
cld
jae
add
cmp
in
push
ja
push
mov
scas
mov
aam
mov
pop
test
sub
cmp
call
sub
outsl
push
dec
xor
jo
add
jl
aaa
inc
scas
loopne
mov
and
inc
add
test
and
cmp
cmp
or
push
push
inc
push
popa
movsb
scas
test
jno
jle
add
loopne
pop
cmp
sbb
cmc
jg
aad
cmp
cld
jle
aaa
shlb
ljmp
cmp
xchg
fadds
dec
out
das
pop
shl
imul
in
fmul
scas
ds
and
out
jb
adc
add
push
cmp
xchg
mov
sub
pop
xlat
inc
cmp
sbb
shlb
add
stc
lods
rclb
add
xor
repnz
insb
ljmp
add
aam
sub
lcall
data16
pop
cmpb
xor
popa
add
push
fldt
sbb
pushf
and
adc
or
add
xchg
loope
sbb
insl
jp
lret
ds
jns
test
fnstcw
push
js
lods
stos
and
add
xorl
add
dec
fsts
and
add
and
xor
int3
mov
inc
cli
pop
call
jg
lods
sub
cmp
add
xor
dec
testb
test
adc
sahf
movsb
cmp
mov
mov
xorl
push
filds
and
mov
movsb
ds
mov
pop
lods
mov
imul
add
jl
inc
test
ror
add
fwait
pop
std
popa
inc
sbbb
int
lea
push
cmpsb
orb
mov
stc
xchg
push
jne
nop
shll
inc
cmp
std
add
mov
cmp
testl
or
jbe
arpl
scas
fildl
shr
popf
xchg
int
cmp
push
xchg
test
or
hlt
lea
roll
addb
mov
loopne
add
stos
rcrb
inc
adc
add
or
aam
ret
jg
jne
je
jnp
xchg
push
divb
mov
adc
mov
mov
add
and
adc
xlat
pop
mov
imul
rorl
jne
movsb
imul
lods
add
je
daa
movb
mov
jb,pn
or
push
icebp
jb
cmp
clc
xchg
in
add
orb
nop
scas
lods
add
mov
push
add
das
or
push
push
lea
dec
sbb
push
movsb
pop
rolb
popl
mov
xchg
js
add
mov
sbb
pop
and
inc
out
add
in
dec
in
and
xchg
and
mov
cmp
stc
cmc
or
mov
iret
lcall
pop
adc
imul
add
clc
movsb
mov
rclb
arpl
jbe
in
pop
pushf
popa
sub
cmp
or
ret
iret
loopne
sahf
lods
add
sbb
push
ret
inc
push
mov
add
cmp
sarb
xchg
add
lcall
add
xorb
adc
add
js
xchg
lret
popf
fsubrp
or
shrl
inc
xor
orl
fldt
pop
les
dec
mov
sarb
pop
ffree
cmp
and
jle
loope
add
mov
ljmp
inc
add
imul
stc
loopne
add
adc
push
xorb
mov
mov
add
mov
push
jp
in
sbb
sbb
mov
mov
inc
dec
xchg
lods
push
jns
nop
or
outsl
sub
sbb
mov
fsubrs
and
jno
ret
add
jl
rolb
mov
push
out
inc
fsubr
pusha
leave
test
xor
jo
xor
adc
push
inc
pop
and
jbe
add
into
or
mov
sub
sub
cmp
xor
add
roll
popf
dec
pop
cmp
dec
cs
push
inc
mov
ret
sub
in
add
cli
psubsw
add
scas
dec
lds
loopne
add
aam
testb
out
inc
jecxz
ljmp
jb
fbstp
in
sub
push
addb
or
xchg
aaa
xor
sub
ss
add
lret
pushf
shlb
andl
adc
ret
push
pop
in
add
mov
add
sub
das
out
xor
dec
daa
xchg
pusha
sbb
adc
mov
dec
fdiv
adc
add
xor
sub
cmpsl
mov
ds
loopne
lret
add
out
inc
xchg
cwtl
dec
mov
out
cmpsb
mov
mov
xchg
lods
dec
xchg
or
xor
adc
jmp
shlb
add
shlb
xor
jo
out
xchg
icebp
or
push
cmc
cld
test
pop
adc
mov
cwtl
add
mov
mov
out
dec
sarb
push
push
pusha
icebp
sub
sbb
push
or
decl
int3
cmp
cmp
std
adc
stc
inc
insb
add
sbb
aaa
bnd
cwtl
je
add
test
xchg
xchg
cmp
out
push
pop
divl
repz
lods
add
rclb
mov
xchg
cmp
push
dec
add
mov
mov
mov
cmp
dec
push
or
out
cmpsl
aas
xchg
call
pop
inc
sahf
jno
mov
push
int3
out
xor
push
add
lret
loopne
mov
add
fsubrs
mov
adc
stc
and
fwait
sbb
mov
sbb
or
sbb
add
loop
pop
pop
sahf
movl
enter
xchg
xor
add
int3
pop
jbe
add
jbe
inc
inc
jo
out
and
pop
imul
aaa
or
and
dec
sub
add
popa
mov
rol
in
jb
add
sbb
repz
mov
sub
hlt
rcl
std
push
mov
mov
add
mov
out
stos
add
sbb
mov
add
pop
ljmp
imul
cwtl
add
mov
rcrl
bound
fists
push
out
int3
cmp
out
cld
mov
sub
int3
sub
add
movsb
fdivrl
imul
xchg
jae
lcall
insb
add
xorl
add
hlt
mov
arpl
sub
in
out
xchg
add
pop
cmp
pop
cmpsl
sahf
push
imul
mov
mov
pop
enter
add
cmpsb
mov
enter
add
mov
fistps
shr
and
push
movsl
jno
push
call
jbe
xchg
or
push
mov
mov
push
int3
sbb
scas
loopne
mov
or
mov
sub
cltd
mov
aad
adc
pop
arpl
push
sub
adc
jo
mov
outsl
jb
sbb
cmp
stc
ljmp
fbld
inc
push
push
cwtl
movsb
call
cmp
add
add
and
rcrl
add
pop
inc
ds
push
xchg
add
dec
xchg
xorb
cmp
pop
loope
add
adc
push
decl
push
sbb
jl
dec
lea
fiaddl
lods
inc
mov
dec
faddl
in
adc
xor
mov
imul
add
jmp
cltd
stos
xchg
je
jmp
scas
jns
enter
push
ja
imul
xor
sub
loopne
outsl
std
shlb
int
fistpl
call
dec
jmp
adc
push
pop
pop
arpl
int3
sbb
fisttpll
scas
fildl
adc
xor
es
rclb
inc
aas
add
mov
pusha
stc
test
pop
andb
cmp
and
pop
int3
mov
test
push
aad
and
rorb
mov
add
xor
sub
dec
xchg
and
xchg
jns
lcall
push
add
pusha
sub
test
sub
mov
jg
shlb
add
sub
push
add
inc
pop
mov
xchg
mov
adc
jns
mov
clc
xchg
fwait
mov
pop
imul
std
add
test
mov
hlt
out
pop
stos
fiadds
mov
adc
stos
cmpsl
add
inc
insl
fisubrs
xchg
scas
inc
fimuls
daa
aaa
add
cmpsb
data16
loopne
movsl
mov
cs
stos
push
add
pop
jb
jp
jnp
add
cwtl
icebp
xor
push
loopne
or
sbb
jl
xor
cmc
add
mov
add
inc
hlt
mov
pop
imul
mov
inc
ja
push
pop
mov
sub
call
out
int3
add
xchg
jae
add
fwait
in
add
add
out
sti
sahf
sbb
add
out
cmpsb
add
test
mov
adc
jg
xor
pop
addb
or
push
cmp
clc
aaa
inc
lea
mov
daa
ljmp
lods
pushl
icebp
adc
jl
maxps
or
mov
or
pop
mov
add
add
adc
dec
dec
loope
sub
xor
xor
sbb
mov
mov
and
xchg
xchg
xchg
movsl
jbe
sbb
in
adc
adc
dec
inc
add
imul
jne
and
ljmp
inc
rcrl
add
insl
loope
jbe
jle
incb
mov
add
xchg
scas
sbb
out
testl
xchg
jb
into
inc
shrl
sbb
or
cli
in
js
adc
cmp
arpl
push
cmpsb
stos
aaa
lods
cld
xor
xlat
pop
add
pop
add
mulb
sbb
jb
rolb
cmp
add
daa
in
jecxz
xor
test
push
inc
inc
std
push
add
pop
mov
pusha
adc
sub
shrb
jne
add
outsb
push
cmpb
sahf
testb
or
mov
adc
xchg
imul
add
rol
ja
mov
in
add
xchg
leave
sbb
or
test
test
and
movsl
test
inc
dec
inc
cmpsb
fcoml
cwtl
and
and
movsb
add
inc
pop
push
fadds
dec
roll
enter
add
out
hlt
xchg
sub
popa
outsb
adc
testl
shr
sbb
gs
dec
notb
mov
inc
push
pop
mov
jp
jge
add
into
pop
push
stos
shrb
mov
setno
adc
mov
or
out
lock
jne
dec
add
jp
xor
xor
add
or
xchg
pop
add
xchg
dec
and
insb
and
push
andb
in
adc
add
mov
add
sub
sbb
outsl
repz
mov
jnp
or
jge
andb
enter
adc
cmp
mov
mov
sbb
js
jle
insb
mov
jne
cmp
push
hlt
and
pusha
test
stos
arpl
aaa
jge
into
pop
or
pop
push
out
sbb
jns
xor
cltd
cs
inc
adc
jl
add
aad
sbb
scas
xchg
add
jo
jp
cmp
out
bound
data16
add
stc
dec
add
ret
jmp
roll
in
xorl
icebp
in
add
hlt
add
push
mov
add
mov
inc
lea
mov
and
pushf
mov
sbb
adc
cltd
in
dec
mov
cmpl
mov
mov
shrb
cmc
mov
add
sbb
jle
pop
inc
mov
and
inc
sbb
and
arpl
xchg
pop
xchg
dec
lret
test
imul
cmp
out
dec
inc
lock
add
mov
pushf
add
inc
push
push
xchg
jae
add
xchg
add
add
mov
add
lahf
or
push
sbb
mov
mov
cmp
push
add
pop
sti
adc
dec
pusha
aaa
sbb
mov
add
fneni(8087
loop
sti
inc
and
cmpsb
pusha
push
push
pop
inc
adc
dec
and
daa
stc
push
arpl
sub
sub
pop
sti
or
call
sub
push
jns
movq
mov
xchg
add
pop
scas
pop
sub
cmp
out
add
adc
cli
pop
ss
loope
add
aaa
sub
data16
xchg
inc
repz
mov
jle
add
pop
lret
mov
std
das
popa
addl
movaps
xchg
lock
imul
push
fdivr
insb
pop
cs
stc
or
xchg
stos
sti
imul
fadd
cmpsb
pusha
mov
cmp
fs
scas
pusha
incl
mov
sahf
mov
les
sub
jbe
fnstsw
add
dec
das
mov
add
out
into
add
enter
cmc
adc
dec
mov
fistpll
inc
push
scas
les
nop
roll
xchg
jge
mov
jp
jle
hlt
rcr
pop
mov
pop
pushf
and
testb
fcompl
lcall
sbb
outsb
gs
sbb
mov
and
fisttpl
cmp
outsb
aad
loope
xchg
push
add
aaa
out
sub
in
adc
sub
andl
cmp
or
mov
cltd
jae
push
test
clc
enter
push
cmpsl
add
fwait
out
pusha
ljmp
mov
cmp
mov
and
and
jae
mov
mov
push
aad
aas
iret
je
dec
push
int3
repz
xchg
sbb
pusha
out
push
mov
xchg
fsubs
push
add
int3
add
jmp
xor
xor
dec
xor
bnd
pushf
pop
or
add
mov
add
push
xchg
leave
call
pushf
xchg
fs
add
xlat
out
pop
adc
pop
imul
jo
sub
mov
andb
add
xorb
movsb
cmpsl
add
mov
cli
ja
inc
or
add
and
cld
xor
jmp
jno
sub
inc
add
pop
cmp
and
add
addl
mov
ret
pop
in
fsubr
jg
cwtl
insl
loop
and
rcrl
prefetcht2
mov
xor
stos
lret
xor
adc
cwtl
in
add
and
mov
pop
mov
xor
xchg
out
jne
sbb
jb
ds
mov
jle
sub
in
call
xchg
jp
and
daa
popa
ljmp
test
adc
loope
mov
push
add
js
in
sbbl
push
add
cmp
popf
insb
sbb
into
jmp
jp
jle
add
or
sarb
pop
pop
std
in
push
mov
add
lock
add
fmull
imul
add
shrl
jmp
sbbl
fcompl
or
pusha
in
add
adcb
cs
jg
clc
xlat
addr16
add
std
mov
fidivs
adc
inc
repz
add
cmpsb
pushf
or
call
xor
out
lods
rol
clc
test
call
in
jp
pushf
add
cwtl
setg
call
cmp
pop
mov
mov
mov
icebp
andb
adc
das
push
aaa
icebp
jae
dec
pop
cmp
lea
inc
ja
sub
insb
lock
add
mov
push
sahf
jbe
scas
inc
mov
sbb
inc
aam
cs
loope
sub
xor
ljmp
add
jo
dec
add
push
mov
sbb
aas
inc
rsm
add
push
test
pop
ror
dec
add
xchg
fsubrp
mov
aad
add
loop
add
int
add
inc
inc
adc
jp
add
inc
pop
fsubrs
add
jne
enter
aas
mov
jno
or
cmp
sub
xor
pop
add
nop
psubb
and
jle
data16
mov
lds
les
xchg
testl
addr16
popf
add
loopne
adc
jae
mov
iret
in
add
xor
into
add
pop
mov
aam
repz
push
aaa
fchs
rolb
popf
into
call
mov
mov
push
or
lcall
in
pusha
mov
add
cmp
and
test
gs
or
mov
cmc
arpl
cmpsl
hlt
stos
shlb
pop
add
cltd
jl
popl
shll
add
jp
xchg
cmp
mov
mov
fs
add
enter
test
out
sti
add
js
lods
add
insl
or
add
pusha
les
ror
mov
sub
lock
jnp
or
add
inc
dec
scas
mov
push
push
je
addr16
movsl
mov
fs
inc
inc
or
loopne
dec
into
cmp
cwtl
outsb
xchg
in
cmp
adc
loopne
dec
lock
adc
push
out
loop
sbb
add
pusha
or
inc
add
gs
data16
stos
add
dec
mov
repnz
push
jp
add
push
in
roll
test
mov
jge,pt
pop
xor
lds
addb
xchg
dec
xchg
mov
mov
in
adc
icebp
push
addb
add
lcall
xchg
in
pop
mov
or
pop
sbb
add
mov
xchg
fcoml
mov
xchg
dec
mov
into
lea
lahf
cmp
mull
pop
shrb
mov
or
add
mov
daa
add
idivl
inc
loopne
insl
add
insb
movsl
in
inc
xchg
out
adc
outsb
les
jecxz
aas
lock
dec
hlt
aaa
xor
in
cmp
add
sub
mov
or
push
and
inc
in
and
mov
cmp
and
jecxz
test
aas
roll
mov
jle
lock
add
sub
xor
sbb
sbb
insb
mov
dec
adc
cwtl
inc
imul
or
aaa
hlt
loop
sbb
pop
ret
dec
pop
add
inc
or
les
shlb
insl
xchg
cmp
mov
rorb
jns
add
into
repnz
notb
mov
hlt
add
sarb
dec
xchg
add
xor
fs
add
cmp
jno
out
cwtl
pop
cld
mov
in
ret
adc
cs
mov
sbb
xchg
arpl
and
xor
xor
pushf
jns
dec
cmp
dec
fldl
bound
push
jmp
lcall
push
cld
pop
add
test
sub
add
sbb
pop
out
bound
scas
mov
je
aaa
cmp
adc
lahf
int3
mov
bswap
cs
push
add
jae
lods
cmp
adcl
bnd
repz
fistl
mov
insb
incl
rolb
push
int3
pop
pop
push
add
push
aam
test
add
out
sbb
add
and
add
add
pusha
add
mov
and
pop
out
xor
pop
inc
jnp
inc
and
mov
pusha
cli
std
add
lods
push
xor
loopne
push
dec
jle
xchg
cmp
pop
dec
or
ficompl
add
ljmp
jmp
push
push
loopne
sub
clc
mov
aas
xchg
sarl
push
add
sub
stos
push
sbb
cmpsb
adc
mov
pop
sbb
push
jno
rorl
cmp
add
or
repnz
pop
add
insl
repz
jo
add
mov
xchg
dec
or
cmp
adc
jae
xor
push
adc
xor
xchg
add
and
int3
pop
stc
lods
lock
add
mov
dec
and
insl
pop
add
xchg
mov
int3
adc
movsb
xor
mov
inc
out
add
mov
sbb
sbb
stc
nop
sahf
xchg
or
add
pop
and
sbb
movsb
push
jecxz
enter
add
insl
and
add
mov
lcall
and
or
push
stc
push
test
mov
add
pop
bound
add
dec
scas
scas
mov
hlt
add
inc
fldcw
mov
jns
sub
cltd
jp
cmp
cmp
pushf
rcll
and
daa
add
andnps
pop
dec
add
lea
add
xor
insb
cmp
and
push
jo
sub
push
pushf
rorl
pop
sub
add
loop
jle
jmp
test
test
push
in
fstps
push
xor
fcoms
sbb
out
push
pop
mov
xor
sahf
insb
add
shlb
push
movsb
mov
shrb
mov
adc
cmc
pop
jb
divl
shll
jne
dec
dec
add
clc
push
inc
cmp
imull
pop
add
ljmp
sbb
mov
mov
jno
dec
aaa
inc
add
and
js
out
xchg
rorl
jno
xchg
mov
ljmp
pop
pop
cmp
rolb
xor
aaa
add
aas
xchg
mov
xchg
or
aad
add
jb
subl
or
xchg
pop
cmp
add
loopne
mov
mov
add
fucomp
push
insl
sub
pusha
insb
shlb
sarl
jbe
mov
cmp
cmc
add
sbb
repnz
out
sbb
add
iret
and
fisubrl
pandn
jb
scas
test
pop
add
ja
jbe
mov
cltd
pop
cmpsl
add
and
ret
pop
imul
lock
sub
daa
std
cmp
adc
rclb
jl
cmpsl
cmp
rolb
cmc
pop
sub
test
fisttpl
or
adc
sbb
xor
cltd
cli
dec
pusha
or
xchg
cmpsb
xor
fs
cmp
and
add
add
and
rol
dec
inc
pop
in
repnz
mov
mov
stos
pusha
faddp
add
sbb
mov
leave
addr16
mov
pop
lods
jg
enter
std
or
fbstp
cmp
pop
incb
dec
jbe
sbb
add
sbb
push
add
int3
and
mov
jbe
xchg
stc
dec
daa
sub
xor
and
imul
push
je
and
shrl
cmpsl
hlt
cmp
mov
jne
sub
rcrb
testb
mov
pusha
loope
outsb
add
jmp
out
xor
test
push
adc
or
add
movsl
lods
hlt
jg
enter
and
jl
mov
cmp
push
mov
shrb
xor
adc
hlt
dec
xor
movb
pop
lock
fimull
jmp
xchg
mov
jnp
add
in
jns
cmp
gs
cmpsb
cmp
nop
adc
pop
adc
add
xor
test
cmc
lea
lcall
loop
adc
mov
in
ja
outsb
xchg
cmp
js
insl
test
call
icebp
out
jo
sub
and
cmp
push
stc
jle
sub
cmp
pop
jne
mov
cmpsb
add
jge
les
or
sub
out
pop
clc
rol
lock
adc
push
js
add
int
sar
lods
xchg
jb
sub
dec
pop
add
cmp
inc
cli
adc
mov
add
movsb
nop
je
jg
add
aas
addl
and
repz
sbb
jno
xchg
icebp
push
rclb
cmp
sbb
inc
shlb
pop
ljmp
aam
jb
jl
adc
stos
inc
jo
dec
mov
add
int3
mov
push
and
and
and
xor
xchg
das
push
daa
dec
jp
pop
or
pop
adc
pop
add
arpl
xchg
mov
pop
push
lcall
mov
mov
shlb
push
and
jae
dec
pop
or
mov
push
jmp
shll
mov
add
cltd
stos
mov
dec
cwtl
mov
enter
imull
pop
dec
sbb
add
daa
mov
adc
pusha
add
cmp
cwtl
inc
mov
mov
das
insl
rolb
inc
pop
cmpsb
aad
push
inc
add
pop
mov
and
call
xor
mov
jg
loopne
jne
paddd
adc
sbb
lods
movsl
test
push
addr16
sahf
pop
xchg
cmp
mov
outsb
aad
jge
adc
mov
inc
add
nop
fwait
pop
lret
jno
adc
sub
dec
scas
faddl
or
inc
loop
jne
mov
cmpsl
dec
fcomp
pusha
scas
out
mov
add
mov
jno
add
dec
pop
adc
jp
sub
mov
add
mov
xchg
add
xchg
xor
addr16
mov
cmp
and
push
cmpsl
arpl
fadds
cmp
stc
and
fldcw
add
subb
mov
add
push
add
mov
hlt
add
push
sbb
mov
arpl
mov
stc
push
pop
jns
jnp
sbb
or
or
fsub
jg
and
add
ficomps
pop
mov
xlat
cmp
dec
xchg
add
jp
adc
dec
pushf
pop
and
add
push
fldl
pop
js
cli
mov
hlt
sub
cwtl
cs
or
rolb
or
jb
push
or
and
dec
xchg
call
add
incb
inc
add
fs
out
addr16
add
push
ror
push
push
cmpsl
mov
sbb
and
popa
das
push
pusha
cmp
cmpsl
rolb
add
das
mov
push
add
sete
out
cmc
loop
pop
aaa
inc
sbb
adc
mov
mov
push
sub
movsl
js
mov
stos
aas
dec
or
inc
loope
inc
aam
add
dec
mov
das
in
xor
rclb
adcb
shrb
pop
int3
pop
or
sbb
stos
xor
push
adc
cmp
ljmp
call
test
push
pop
arpl
mov
sti
mov
fsubrl
jecxz
scas
jg
inc
sbb
cmp
shlb
mov
mov
mov
adcb
bound
fldt
repz
pop
andl
enter
pop
rcl
sub
pop
std
xchg
sub
xor
pop
into
mov
in
add
or
push
lahf
pusha
punpckhbw
add
pop
cmp
lahf
pusha
cmpsb
dec
sti
push
jl
adc
pushf
add
std
push
stc
xor
jmp
mov
add
xor
cld
dec
test
sbb
jmp
pop
scas
mov
pop
aaa
pop
adc
cwtl
je
lock
push
add
pshufw
push
out
loopne
and
ljmp
ds
test
mov
test
jge
sar
jo
movsb
xlat
clc
or
pop
add
mulb
cmpsb
and
dec
stos
jno
hlt
loopne
push
push
pop
jb
pop
jle
push
xchg
pop
and
inc
cli
add
push
rolb
xchg
in
add
add
jb,pt
xlat
mov
stos
mov
add
add
add
add
js
into
data16
sbb
pop
adc
aam
sbb
mov
cld
stos
test
add
add
jecxz
xchg
mov
mov
das
cmpb
push
mov
loopne
imul
jecxz
mov
dec
jb
mov
cli
hlt
inc
push
cmp
test
ret
jns
add
aas
or
jbe
mov
dec
mov
out
add
xchg
fdiv
add
mov
loopne
int
jns
sbb
js
add
sti
add
orl
lods
lcall
aaa
pop
lret
ljmp
or
aas
pop
sbb
in
adc
lods
add
ljmp
inc
inc
jp
pop
mov
sbb
data16
pusha
pop
fadds
xorl
xchg
push
sbb
mov
dec
mul
mov
sbb
aam
mov
jle
add
dec
push
pop
lock
in
sub
nop
rclb
pop
pushf
clts
pop
lea
jge
mov
dec
add
dec
popa
fimuls
filds
xchg
sub
sbb
notb
rorb
popf
pop
ja
xor
enter
decb
cmp
popl
fcmovbe
fcmovne
repnz
pop
sbb
lods
mov
inc
mov
xor
xchg
mov
lahf
pop
and
sub
mov
das
out
icebp
data16
xchg
add
lahf
xchg
xor
add
inc
gs
push
mov
inc
jecxz
sub
movsb
jne
add
lock
imul
inc
ljmp
cmp
insl
out
xor
add
mov
mov
fiaddl
sub
orl
or
andl
sbb
adc
adc
cmp
pop
push
jmp
out
inc
sbb
and
push
das
sbb
out
pop
wbinvd
cmp
pop
pop
or
push
mov
pop
loopne
inc
sbb
arpl
sub
bound
or
inc
mov
cmp
push
or
mov
jmp
lcall
and
sbb
cmp
inc
addb
add
cltd
jl
pusha
aas
jo
orb
xchg
fcmovnb
mov
add
jnp
aas
add
fcmove
add
jg
lcall
xchg
sti
jb
dec
or
mov
ds
roll
orb
sbb
add
jecxz
dec
or
sub
lods
adc
and
ds
pop
in
call
ret
adc
enter
in
cmpsb
push
add
js
dec
pusha
repz
sub
cmp
test
add
mov
and
pop
fwait
rcr
bound
repz
out
loopne
adc
cltd
popa
mulb
popf
addr16
push
icebp
test
lds
fildl
imulb
movsb
or
les
jb
cmp
pop
ffree
push
sbb
popf
add
lahf
rorl
faddl
xor
jg
dec
sbb
fsts
cmpb
or
xchg
pop
pusha
adc
mov
xor
pop
mov
xchg
inc
in
jge
aaa
cmpsb
nop
sub
dec
aad
insl
mov
xchg
fsubs
and
fmul
dec
aad
adc
jle
scas
and
xor
rcll
orl
js
in
ljmp
inc
xchg
jno
mov
mov
push
shrb
add
push
out
add
jo
or
lock
add
insl
cltd
cmp
jae
and
inc
pop
cmpsl
popa
cmp
arpl
fcmovnb
add
in
mov
add
dec
call
gs
lock
lret
out
inc
dec
test
pop
inc
pop
mov
push
mov
pop
or
sbb
int3
jl
in
shll
les
mov
test
mov
enter
pop
xchg
sub
xlat
rol
outsl
pushf
rcrb
mov
out
add
dec
jmp
pop
lret
sub
jne
add
sub
ret
das
fsubl
insl
pushf
xor
stc
js
test
adc
sub
or
enter
test
lock
scas
jb
or
push
movb
je
jo
cmp
dec
and
mov
add
scas
or
inc
add
inc
push
fiaddl
mov
pop
test
pop
inc
dec
shlb
bound
dec
sbb
dec
je
mov
mov
les
in
sbbb
push
pop
xchg
sub
nop
imul
in
dec
sbb
mov
add
xorl
cmp
xlat
adc
in
pop
in
pop
inc
cs
mov
xchg
mov
fidivrl
sbbl
cs
arpl
mov
xor
cld
inc
loope
jbe
fxch
add
rcl
or
add
lahf
in
mov
filds
lret
test
or
ss
inc
loopne
mov
push
dec
push
add
fdivs
enter
iret
dec
daa
add
add
shlb
movsb
pop
mov
mov
sbb
or
and
popf
lahf
rolb
enter
lcall
int3
add
cmp
jae
xchg
and
fsubr
jb
mov
sahf
loopne
mov
mov
jns
add
ret
shll
popa
adc
inc
xor
fdivrl
dec
enter
pop
call
loopne
arpl
in
inc
js
divb
xchg
je
daa
add
fadd
pop
sbb
add
inc
or
mov
add
xchg
pushf
cltd
cmp
ss
mov
sub
dec
adc
sti
lcall
push
push
add
sub
aam
je
stos
and
mov
fldenv
fdiv
ljmp
adc
rorb
xor
inc
jecxz
bound
shlb
imul
icebp
je
add
imull
fwait
push
in
add
rorb
icebp
push
enter
or
sbb
mov
sub
pop
or
jne
xchg
fisttps
or
insl
or
stos
in
jge
movsb
in
adc
shlb
mov
scas
dec
rcrl
lods
or
movsl
mov
jbe
jb,pt
sub
in
sarb
lods
mov
add
dec
out
xchg
pop
and
cmp
orb
xor
add
popf
das
sub
clc
leave
add
repnz
jle
cld
and
arpl
push
nop
mov
sahf
or
movlps
push
mov
stos
add
js
add
divl
lock
jb
mov
sti
xchg
add
sub
addb
outsl
loopne
xchg
dec
loopne
movl
pop
sub
xlat
int
cmp
aas
xor
jae
in
pusha
pop
jge
and
mov
mov
rclb
lret
push
cltd
imul
add
into
loopne
sub
add
sub
int
jne
push
add
test
pop
cmp
mov
jbe
movl
lahf
test
push
repnz
add
repz
xchg
inc
pop
jp
pushf
js
mov
and
repnz
jnp
xor
dec
pop
aad
lahf
js
popa
xchg
xorl
fsts
dec
test
sbb
push
test
xor
add
or
mov
push
sub
clc
jne
add
push
stc
loope
xchg
cmp
inc
and
jo
add
rcrb
xchg
mov
push
in
lock
add
mov
and
test
in
dec
loop
insb
mov
cltd
sbb
test
arpl
int3
jmp
mov
sbb
mov
stc
out
adc
add
insl
xor
js
loopne
mov
cld
and
mov
imul
out
pop
hlt
inc
and
push
add
lods
pop
inc
loopne
enter
ret
out
mov
add
test
dec
push
xor
xor
pop
outsb
and
jo
lret
add
add
jg
fs
xlat
mov
jns
adc
or
and
pop
je
mov
addl
repz
mov
add
lods
aad
and
roll
scas
fwait
mov
pusha
stos
sbb
inc
sbb
sti
fnsave
pop
push
pop
add
sbb
aas
scas
mov
jns
sub
das
aam
mov
adc
icebp
add
or
inc
add
add
push
pop
push
jo
aad
or
pop
negl
or
cmp
mov
jl
cmp
sbb
cmp
andb
popa
ja
repz
xchg
pusha
jo
hlt
push
push
jnp
push
jl
test
cmp
mov
dec
xorb
dec
add
cmp
popa
icebp
inc
arpl
adc
cmp
aaa
xchg
adc
mov
jno
add
sub
clc
out
add
jno
cli
pop
cmc
call
mov
rcr
lahf
cmp
add
mov
adc
sub
lret
inc
mov
lret
cmpsl
loop
test
pop
imul
out
sarb
in
push
pop
push
push
jne
add
add
adc
mov
push
xchg
add
cld
mov
jmp
xchg
mov
nop
mov
in
jl
mov
mov
jp
pusha
lcall
pop
sub
mov
je
dec
enter
loop
rcl
adc
pop
xor
stos
iret
sub
add
xchg
jae
cmp
clc
xchg
mov
mov
inc
add
mov
jns
jno
nop
add
jge
mov
inc
mov
push
test
push
scas
inc
add
dec
mov
out
pop
adc
and
push
mov
jne
cmp
and
push
jnp
add
insl
sti
sub
cs
roll
inc
jnp
jge
arpl
push
mov
push
fcomp
scas
mov
nop
sbb
xor
sti
or
pushf
add
hlt
fcmove
inc
or
jb
movsb
inc
sarb
test
ss
adc
loope
add
sub
testb
jge
mov
lods
and
sbb
hlt
lret
add
in
repz
sti
pop
jmp
and
add
sahf
lods
sbb
add
shl
mov
mov
push
in
mov
push
xlat
mov
filds
into
lret
xor
mov
mov
cld
int
add
cmp
fdivrl
dec
xor
fisttpl
add
mov
aam
add
mov
inc
xor
femms
jmp
clc
or
push
mov
pop
cmp
xor
fnstcw
mov
stos
cwtl
cmp
add
andb
cmp
jg
jnp
add
das
push
or
mov
xor
xchg
pop
mov
add
loopne
movsl
cmc
mov
push
ret
sub
fdivrs
jo
push
sti
test
xor
fstpt
outsl
adc
int3
or
dec
in
pop
sub
out
add
push
jns
shrb
xchg
add
cmp
push
xchg
arpl
fisttps
ja
inc
adc
ret
lea
dec
xchg
aaa
mov
fistps
and
push
insb
push
add
inc
loopne
lret
pop
add
jmp
pushf
enter
mov
sti
loopne
inc
sbb
inc
add
cmc
mov
mov
std
addr16
dec
add
js
das
xchg
dec
scas
mov
adc
mov
int3
movsb
nop
and
movsb
add
call
add
daa
sub
lret
das
add
loopne
pushf
add
cmp
mov
dec
sbb
test
sbb
bound
es
lods
aaa
xchg
mov
xchg
outsb
xor
pop
add
pop
adcb
mov
adc
aad
repz
ljmp
mov
sbb
mov
rolb
jecxz
or
fisubs
pop
adc
shrl
ds
call
push
scas
call
loopne
add
xchg
xor
mov
sub
out
mov
xchg
es
xchg
shl
dec
outsb
add
lock
sbb
pop
mov
pop
pop
ret
push
pop
add
fisttpll
rcrl
test
and
dec
inc
or
and
mov
cmp
add
cmpsb
cmp
fdivr
add
jne
rol
add
icebp
mov
fcom
lods
andb
inc
jmp
roll
adc
mov
pop
sbb
and
cmpsl
loope
in
mov
jb
sub
mov
add
in
pop
or
mov
add
jae
lds
stos
cmp
add
rorb
rorl
xchg
mov
movsl
insl
in
adc
std
pushf
add
sahf
xchg
xchg
test
ret
inc
xchg
cmpsb
cmp
fistpl
sbb
lods
adc
arpl
mov
pusha
mov
fs
loopne
sub
xchg
jg
and
lahf
add
mov
in
xchg
cmp
jb
mov
movsb
aaa
add
xor
out
popa
push
outsb
pusha
mov
sub
xlat
insl
in
sbb
xchg
rolb
xchg
aas
xchg
or
lea
cltd
add
jae
sbb
and
adc
jp
jbe
or
push
orl
lahf
addl
out
scas
ss
mov
sub
aad
cmp
fwait
sbb
movb
jo
stc
sub
mov
bound
jge
push
cmp
sub
dec
mov
push
lea
loopne
pushf
push
or
sub
xlat
les
lock
pop
mov
inc
stos
mov
mov
inc
and
es
pusha
jmp
leave
push
lods
and
xchg
and
hlt
mov
jmp
sahf
icebp
add
std
outsb
fs
add
dec
jne
stos
adcb
push
mov
mov
pop
adc
scas
andb
lea
jg
xchg
cltd
add
cld
mov
bound
and
dec
ljmp
hlt
mov
or
cmp
xchg
xor
popf
cmp
jmp
sub
add
movsb
sarl
enter
push
sahf
ljmp
shl
into
add
sub
push
or
cmpsl
jo
lods
cmp
xchg
iret
loopne
push
xor
rolb
repz
mov
pop
jno
add
ja
sbb
xchg
fdivs
sub
jnp
add
iret
sarb
jle
add
popl
fildll
adc
add
and
mov
leave
int
inc
lods
or
add
jp
mov
addr16
fistl
add
fbstp
add
in
mov
fmulp
cmp
and
addr16
and
add
scas
push
pop
inc
and
add
sub
je
fisubs
xor
mov
cmp
pop
jg
pop
sub
xchg
xchg
add
imul
mov
mov
jge
jnp
jl
out
or
fnclex
scas
lock
pop
cltd
incw
cmp
cld
and
push
pop
add
add
mov
push
cmc
adc
loopne
orb
push
jo
std
mov
adc
dec
jns
inc
js
add
rcll
xchg
aam
adc
or
cmp
rcll
push
ss
mov
popa
mov
sti
enter
cs
push
xchg
push
roll
scas
mov
repz
ret
or
mov
cmpsb
mov
mov
nop
jp
mov
mov
sete
mov
jns
enter
lahf
mov
pop
dec
push
adc
mov
pusha
ss
add
pop
xchg
cld
xchg
pop
dec
add
stos
shlb
pusha
out
shlb
push
add
xor
mov
ret
mov
sub
pop
push
add
in
xchg
call
mov
inc
jecxz
test
clc
sub
cltd
cmp
rcr
add
and
xchg
cmp
mov
sbb
pushf
incl
std
dec
in
push
stos
cltd
lahf
or
mov
lds
add
mov
mov
stos
bndldx
sub
add
jbe
les
lods
mov
xchg
pop
jmp
ret
je
or
inc
fldcw
clc
add
into
add
lret
int
fistl
cmc
pop
and
add
mov
shll
or
mov
sahf
pop
adc
adc
mov
daa
add
xchg
mov
loopne
loopne
xor
ljmp
in
popf
icebp
xor
push
adc
add
lret
push
testl
or
or
jl
sbb
jb
jg
or
mov
add
mov
icebp
jp
sbb
cmp
xor
add
xchg
pop
jl,pt
das
and
jb
adc
jmp
lahf
ret
dec
dec
je
scas
dec
in
sbb
and
cwtl
out
test
mov
add
loopne
iret
jg
adc
mov
mov
add
sbb
testb
jmp
cwtl
mov
cmp
loop
rolb
jle
inc
or
add
cmc
sub
pop
or
shrb
xchg
fsubrs
pop
adc
loope
add
sub
shlb
add
add
adc
rcll
int
adc
hlt
cli
mov
push
jb
ljmp
pop
out
add
shll
mov
sub
xchg
cmpl
xchg
xor
mov
jae
xor
test
mov
add
leave
add
xchg
test
inc
xor
fnstsw
and
inc
pop
in
add
cmp
cmp
add
mov
sbb
pop
loopne
shl
add
and
jbe
dec
fsubs
rcrl
jmp
mov
hlt
add
fists
int3
fsub
push
cmp
in
arpl
fiadds
sub
cmp
inc
fwait
sub
mov
inc
sahf
sub
add
mov
scas
jg
verw
repz
pushf
loopne
xor
mov
dec
adc
xchg
add
cli
imul
push
push
sbb
jb
sub
jmp
stc
sbb
inc
sahf
jp
test
sub
std
testl
mov
mov
aam
shrb
mov
xor
jns
lea
mov
je
jl
dec
add
mov
xorb
inc
pop
push
mov
add
mov
mov
and
roll
mov
adc
add
fisubrs
nop
stos
repz
xchg
loop
xchg
ja
clc
or
mov
push
inc
add
mov
adc
adc
dec
sbb
imul
add
push
je
in
or
and
dec
in
outsb
shrb
leave
repz
mov
cmpb
hlt
add
adc
xor
outsb
test
cmp
and
imul
sahf
mov
push
pop
rorl
ficomps
fdivrl
int3
leave
icebp
das
subb
subl
mov
xchg
mov
mov
sti
loopne
test
xor
lret
add
rolb
lahf
adc
add
das
int3
insl
jp
addl
enter
and
imul
jns
and
sub
and
lahf
lea
sbb
dec
add
out
mov
cmc
inc
mov
push
push
push
cwtl
mov
pop
repz
and
dec
lock
add
out
push
jae
sahf
xor
add
adc
mov
pop
decl
add
ja
xchg
mov
pushf
stos
push
test
ljmp
divb
lret
lods
add
sub
shlb
fiadds
push
and
pop
rorl
lret
pushl
push
out
add
addr16
jp
cwtl
add
test
mov
imul
dec
mov
add
out
subl
or
inc
jae
inc
jecxz
fst
push
rcr
mov
add
pop
xchg
sti
add
repz
stos
lret
mov
pop
lahf
fildl
aaa
lock
stos
dec
mov
mov
mov
add
loopne
cmp
shr
add
jns
ss
adc
ja
jmp
add
in
andb
and
in
push
cmp
je
aaa
test
lret
andl
rcrl
push
stos
add
fwait
xor
add
clc
jno
adcl
aad
push
xor
lods
mov
lods
icebp
pop
and
shll
push
adc
out
push
movsb
cmp
into
icebp
int
outsb
dec
addr16
add
pop
mov
pop
pop
mov
add
dec
and
orb
cmp
adc
in
push
lret
cld
and
js
es
inc
inc
cwtl
fdiv
addb
and
jns
mov
pop
lods
add
das
mov
cmpsb
or
mov
xor
fisttps
xlat
hlt
adc
imul
or
int3
outsb
jo
add
xor
nop
js
in
inc
andb
roll
mov
loopne
mov
xchg
lret
out
jmp
ja
xchg
lea
mov
cmpsb
pop
or
add
mov
mov
inc
mov
testl
fildl
cwtl
ds
repz
pop
sbbb
cli
add
mov
in
xchg
cmp
mov
add
insl
test
idivl
or
add
fldl
mov
push
adc
rolb
xchg
test
popf
mov
bound
xchg
aaa
sbb
adc
unpckhps
mov
decb
fwait
sbb
sub
mov
insb
add
movl
push
fisttpl
mov
jg
jbe
pop
inc
fcoms
mov
icebp
sub
and
das
xchg
jg
jge
push
xor
sub
iret
lret
pop
into
fnstenv
shlb
std
lcall
inc
mov
pop
jbe
push
push
mov
and
nop
negb
add
mov
mov
enter
jbe
add
mulb
xor
push
cmp
xchg
cld
add
repz
sbb
lods
data16
xchg
pop
xor
mov
out
add
out
pop
pop
dec
fadds
lds
inc
and
popf
add
ljmp
loop
add
cmp
mov
fnstenv
fildll
sub
add
sbb
add
roll
cld
ja
test
lret
icebp
fimull
and
push
repnz
jnp
add
jae
or
call
jo
cltd
lcall
aad
rcrb
clc
cmpsl
mov
mov
or
out
push
mov
inc
mov
or
fisubs
idivb
inc
sbb
inc
jmp
add
sbb
sarb
pop
inc
dec
pop
cli
add
jbe
push
rclb
mov
mov
aad
sub
dec
push
or
je
sbb
push
add
daa
or
mov
adc
xchg
adc
into
aaa
jne
inc
fildll
add
add
mov
add
or
adc
adc
push
and
stos
add
cmp
rclb
add
inc
jp
repz
push
ds
push
or
out
inc
add
addr16
rorl
push
or
pusha
sub
xor
dec
xor
in
out
xchg
push
inc
pop
ret
add
sahf
or
inc
mov
adc
inc
xchg
aam
pusha
std
push
repz
cli
pop
sub
jg
scas
and
orb
mov
sub
jbe
or
pop
rclb
dec
add
arpl
loope
enter
xchg
int
rolb
pop
inc
sarl
dec
push
add
test
add
imul
pop
add
loopne
push
jbe
mov
pop
int
pop
add
nop
adc
aaa
mov
adc
mov
xchg
mov
push
mov
or
adc
mov
in
inc
sub
jge
cmpsb
out
pusha
cmp
adc
xor
add
cmpsb
fcomps
add
pop
adc
add
sub
inc
js
hlt
mov
shrb
xchg
icebp
leave
fstpl
dec
imul
mov
sub
jle
push
push
hlt
in
in
fldl
adc
dec
aaa
jb
jo
add
cmp
pop
push
sub
lret
inc
jno
adc
in
adc
cmpb
repnz
jne
out
nop
inc
fldlg2
cli
cmp
testb
and
and
cmp
mov
mov
ret
rorl
and
pop
cmp
adc
cmc
adc
xchg
outsb
jmp
lcall
sbb
icebp
insl
xchg
inc
std
andl
pop
add
stos
shll
mov
push
and
insb
lock
xchg
rcll
ds
add
pop
pop
aam
loope
sti
push
xchg
add
and
jo
or
iret
add
push
ljmp
mov
adc
fsubs
push
add
pop
cmp
jns
mov
addb
test
fiaddl
and
xor
dec
xchg
hlt
iret
movsb
jbe
adc
test
fnsave
add
fs
dec
mov
lret
mov
imul
dec
push
mov
aas
stos
jl
jge
rcll
rclb
insl
xchg
push
add
or
xchg
sahf
int3
jle
mov
pop
add
xor
adc
sbb
push
inc
dec
or
xlat
sbb
push
int3
repnz
pop
add
iret
movsl
or
insl
mov
test
xor
hlt
scas
mov
mov
push
mov
or
push
mov
sub
inc
sbb
loop
jmp
mov
add
sub
xchg
mov
add
xchg
mov
ds
mov
adc
dec
add
fildl
fwait
pushl
lock
add
outsl
xor
add
add
xorb
es
int3
subb
xor
test
pop
out
mov
inc
add
mov
xor
jle
or
dec
fisubl
sbbb
jmp
mov
test
sub
pop
aad
xor
add
aas
mov
add
out
mov
icebp
mov
lock
add
rclb
pop
fildl
out
lret
cmc
pop
adcb
cld
out
loop
adc
and
add
mov
or
lds
jnp
adcb
add
jns
cmp
gs
push
inc
mov
cmc
and
sbb
pop
mov
xchg
shlb
pop
cmp
add
jns
xlat
and
lock
aad
repnz
jmp
adcb
sbb
int3
sbb
add
dec
out
ljmp
into
sub
cmp
fmull
add
test
rclb
add
xchg
sub
icebp
je
lea
out
popf
sub
pop
call
aam
fsubr
sbb
jl
lcall
call
add
xorb
add
ss
adc
sbb
lods
add
cmp
fs
add
xlat
aad
push
ss
push
adc
rol
ds
inc
xchg
add
insb
hlt
mov
mull
test
mov
dec
inc
sbb
and
xorb
mov
addl
pop
lahf
popf
icebp
into
mov
pop
xchg
mov
popa
add
xorl
mov
arpl
repnz
fiadds
jb
sbb
dec
sub
adc
test
repz
loope
pop
xchg
mov
shlb
fnsave
stc
add
mov
push
jge
std
add
aad
jp
adc
hlt
sub
rorl
int
jne
xchg
add
push
icebp
push
in
lahf
add
shl
mov
xchg
in
mov
add
ss
lods
popa
jb
or
add
ljmp
push
xchg
add
dec
inc
test
sahf
call
test
lds
mov
jmp
ret
cwtl
rcr
add
out
add
shlb
jg
jl
in
jmp
aaa
orb
lods
ja
sub
in
cmp
inc
adc
add
jne
rolb
cmp
cli
fld
mov
mov
call
xor
jmp
ret
fcoml
fistl
xchg
add
shlb
loop,pn
push
roll
inc
and
or
and
cmp
adc
mov
jae
adc
pop
sbb
nop
sbb
out
rolb
aaa
sub
xchg
andb
clc
and
add
movsl
mov
pop
mov
push
nop
jle
adc
inc
cmp
pop
cli
mov
jecxz
sbb
jmp
aaa
mov
mov
mov
je
or
cmp
mov
lods
out
sub
or
ja
push
sbb
jne
mov
daa
mov
out
call
mov
add
in
enter
pop
mov
aaa
mov
mov
xchg
push
outsb
dec
test
add
and
pop
jae
mov
inc
leave
pop
pop
inc
cmp
loop
xor
movsl
stc
push
int3
pop
test
dec
mov
jb
mov
xlat
fcoms
int
mov
stos
push
cmp
xor
add
sti
call
sbb
jmp
outsb
lea
test
pop
add
arpl
daa
dec
hlt
pop
pop
or
imul
xchg
jle
cli
push
gs
jno
in
or
and
pop
pop
daa
loope
and
ljmp
add
inc
sbb
jge
pop
push
mov
sub
push
sbb
iret
mov
adc
adc
and
pop
push
cli
imul
jp
xlat
mov
sarb
je
nop
add
mov
sbb
adc
cmp
ljmp
mov
pop
sbb
pop
and
in
add
mov
pop
or
add
rorb
sbb
leave
sbbl
imul
out
andb
ret
jge
mov
adc
push
jb
rorb
add
popa
lea
js
insb
xchg
pushf
add
aaa
pop
cmc
mov
mov
aas
add
stos
cld
jnp
or
xchg
cltd
add
ss
and
loopne
add
or
fcoms
test
mov
mov
sub
in
add
ds
xchg
sarb
add
mov
loop
adc
inc
cmp
sbb
mov
outsl
pop
sub
dec
ss
jmp
and
fdivs
mov
sbb
inc
inc
mov
int
mov
out
loope
scas
and
mov
mov
in
sti
pop
push
or
xchg
mov
fidivrs
and
cmp
cmpsl
lock
movsb
lods
add
dec
push
add
add
jmp
subl
out
and
push
iret
daa
stos
add
mov
cmp
jne
add
fstps
xchg
mov
inc
or
add
xchg
rorb
stos
xchg
add
bound
or
dec
outsl
shlb
pusha
cltd
pusha
adc
add
add
and
xchg
sbb
inc
push
mov
jle
ds
fdivp
or
xor
fs
std
jge
pop
mov
mov
pop
fildl
lock
shrl
ja
es
jl
subb
shll
insl
nop
jge
xchg
cmpsl
gs
cmp
pop
or
adc
iret
inc
mov
mov
sti
push
cmpsl
cld
pop
jbe
fwait
outsl
add
cmp
jns
lret
clc
imul
mov
adc
jl
sub
fsts
add
jge
mov
pop
sub
ret
movsb
popl
shlb
lds
and
inc
mov
nop
or
add
or
in
out
mov
add
in
dec
in
les
das
add
cmovae
inc
shl
add
and
jo
mov
mov
jne
nop
sub
add
test
add
jg
lret
mov
adc
adc
and
add
xchg
add
xor
pop
add
out
push
push
jnp
add
jmp
push
testb
clc
jecxz
pusha
xchg
outsl
mov
and
pusha
mov
add
pop
ljmp
xor
adc
mov
xchg
stc
jmp
lahf
mov
add
clc
pop
fmul
pop
ljmp
mov
jge
imul
sbb
cmp
or
xor
outsl
xchg
push
in
jmp
roll
jnp
mov
nop
sub
ret
pop
add
inc
cs
pusha
data16
inc
stc
mov
aam
jg
push
push
add
cmp
popf
add
stc
scas
pop
jle
add
and
fnstsw
ja
add
and
mov
hlt
xor
sarb
inc
fcompl
jns
sbb
sbb
adcb
icebp
push
sub
add
dec
sub
or
and
mov
subl
pop
or
fcoms
mull
or
leave
xchg
xor
lea
and
je
outsb
jmp
and
outsl
aad
inc
adc
xlat
and
fcoms
fildl
inc
mov
rorb
cmp
jmp
and
ljmp
add
pop
fxch
or
sub
inc
dec
ja
out
pop
xor
add
fcoml
and
movl
sub
adc
outsb
rcrb
dec
and
jmp
sub
add
push
cmc
mov
jl
add
cmp
jne
or
or
cmp
aad
jmp
sbb
adcb
iret
fs
and
adc
jno
enter
sub
dec
cmp
xor
mov
and
ljmp
stc
repz
xchg
xchg
pop
inc
jmp
adc
cmp
dec
or
add
push
fists
inc
xor
push
dec
fdivp
std
push
rclb
xchg
hlt
dec
outsb
add
fidivl
add
movsb
cwtl
cmp
sub
cwtl
add
push
mov
push
insb
mov
lahf
sti
inc
adc
sub
arpl
andb
ds
add
pop
xchg
sub
clc
xor
sub
cli
movsb
out
and
adcb
add
add
and
dec
inc
fimuls
mov
pop
push
outsl
xor
ss
sub
dec
add
lds
add
jno
lcall
lret
andl
pop
jp
add
lods
gs
outsl
xor
push
add
stos
je
lds
cmovs
dec
sub
js
int3
lds
jge
outsl
jbe
lret
pusha
add
push
ljmp
inc
dec
jecxz
mov
add
pop
mov
lock
test
cmp
push
and
or
out
adc
mov
jle
and
addr16
xchg
pop
sbb
scas
test
add
and
sbb
shlb
ret
icebp
sbb
ret
mov
divl
mov
add
pop
sbb
fadds
cmp
int
push
out
fstps
insb
and
addb
in
popf
adc
rcll
push
fldt
add
or
dec
aaa
pop
and
hlt
and
add
xchg
ljmp
sbb
xor
add
into
int
jo
sub
add
mov
and
adc
and
add
test
pop
push
rclb
ds
jo
aam
loopne
xorl
pop
rolb
scas
push
dec
ret
mov
add
in
mov
movsb
pop
inc
lock
addb
arpl
dec
adc
adc
pop
adc
push
xchg
fists
jb
lcall
pushf
in
lahf
insl
mov
jns
add
add
ret
dec
imul
adc
xor
in
or
add
mov
bound
fsubrs
xlat
dec
add
dec
inc
mov
aad
sbb
add
loopne
fidivs
cltd
mov
popa
xor
sbb
fdivl
or
sub
mov
add
int
xchg
nop
xchg
add
add
int
fstpt
cmpb
cmp
adc
shll
add
insb
or
dec
add
mov
mov
in
es
xor
adc
mov
pop
jecxz
mov
in
stos
imul
add
push
std
test
add
pushf
incb
add
sbb
in
add
dec
les
nop
or
movhps
outsl
pop
and
incb
data16
cmp
aas
dec
shll
jmp
loop
sbb
ret
xchg
mov
jae
lahf
cmp
dec
and
and
jns
aam
cmpsb
aaa
jno
pop
arpl
mov
inc
jb
jle
cmp
add
push
test
mov
jmp
test
stos
inc
jns
dec
mov
test
cmp
sbbb
sbb
dec
inc
jo
cmp
shrl
mov
cltd
mov
cmp
out
in
sbb
adc
jne
fwait
add
outsb
sbbb
mov
lahf
inc
int
rorl
cmpsb
ja
xor
inc
adc
xor
jo
in
in
pop
sbb
mov
add
inc
inc
subb
pop
and
addb
dec
or
movsb
sub
mov
or
mov
cmp
add
mov
inc
inc
mov
lods
cmpb
lcall
adc
add
and
xor
mov
hlt
cmp
movsl
inc
insb
adc
jbe
icebp
mov
daa
mov
dec
inc
mov
popa
sahf
sub
rclb
and
test
out
xchg
inc
add
sbb
xchg
enter
out
xchg
mov
sub
and
cmp
lahf
add
mov
pusha
fcmovbe
stos
jle
add
mov
imul
mov
mov
dec
aas
test
stos
xchg
sub
mov
add
jns
mov
outsl
add
fdivl
jg
jbe
sti
xor
ja
jne
add
and
in
shll
jmp
add
mov
jecxz
xorb
mov
add
popa
incl
pop
fwait
call
ja
mov
xor
add
je
cmp
jno
and
add
mov
fcomp
pop
pop
add
addb
scas
out
add
adc
mov
fadds
xor
adc
jecxz
test
pop
push
lcall
sub
jae
aas
in
addb
std
inc
push
xor
sysret
mov
xor
or
adc
mov
mov
mov
sub
dec
mov
push
push
push
es
test
cmpsl
fimuls
adc
rorb
push
mov
sbb
mov
mov
dec
call
cmp
jge
int3
ds
mov
mov
push
int3
and
pop
and
filds
or
out
jp
sahf
xor
push
mov
loop
ss
mov
lahf
pushf
ror
inc
cmpsb
dec
sbb
pop
adcb
dec
jecxz
cmp
add
mov
pop
test
ret
ljmp
add
mov
notb
loope
and
add
movsb
pushf
jne
add
pop
loop
mov
adc
or
mov
cli
sub
add
fidivs
cmovo
mov
push
shrb
shlb
mov
fiaddl
push
cs
jge
icebp
clc
ja
stc
xchg
and
sbb
cld
add
pusha
lahf
cmp
pop
add
pop
cltd
loopne
jmp
pusha
divb
shl
popa
adc
xlat
cmp
push
xchg
lea
push
add
imul
add
pop
call
int
jle
inc
add
int3
leave
mov
flds
mov
cmp
add
jle
out
cld
push
dec
aad
sbb
mov
cmp
mov
add
lret
and
sbb
cs
lods
mov
icebp
inc
mov
inc
out
dec
jge
sbb
pusha
push
mov
inc
dec
mov
cmpsl
data16
add
lods
cmpsb
jmp
xchg
pop
sbb
inc
insl
js
push
filds
popf
push
add
lock
add
mov
and
xor
loope
cmp
dec
cmpsb
add
mov
add
push
mov
bswap
std
adc
sbb
sbb
aad
cmp
sub
scas
sub
mov
sub
addl
push
lock
mov
sub
mov
dec
push
sbb
xlat
adc
or
sbb
orb
jns
push
mov
xor
xor
or
test
push
nop
adc
jb
fstl
popa
mov
repz
insl
ret
inc
and
scas
test
pop
test
neg
imul
pop
mov
cmc
xlat
out
xor
or
loopne
add
cmpsl
test
rcrl
inc
pop
subl
pop
pop
xor
arpl
lret
add
mov
lods
add
les
scas
add
cmp
and
out
faddp
cld
mov
and
pop
add
lahf
lods
xchg
jge
dec
mov
in
adc
test
in
shll
mov
pop
cmp
jp
mov
mov
js
mov
pop
cli
lods
aaa
repnz
add
ror
adc
jecxz
and
rorb
out
jl
sarl
adc
cmp
pushf
mov
mov
add
adc
movsb
add
aam
dec
mov
subb
stos
add
and
gs
inc
clc
add
fildl
jb
lods
add
lret
test
add
mov
loopne
loop
scas
xchg
or
or
jp
jb
shrb
cmp
xor
jns
mov
push
or
add
mov
ds
push
arpl
jecxz
cmp
enter
or
shlb
aas
push
mov
cmp
push
mov
xchg
lea
add
cmpsb
hlt
and
sub
mov
je
add
fs
and
cmp
sbb
popa
jecxz
mov
out
add
in
pop
pop
setnp
cmp
faddp
xor
iret
mov
inc
jmp
and
mov
stos
repz
push
testl
jmp
jno
cs
add
jo
imul
mov
or
or
jp
adc
mov
lret
sub
mov
fstpl
cmpl
inc
mov
add
mov
mov
and
sti
add
jp
in
test
aad
lock
sbb
push
cwtl
test
xchg
aam
les
push
movsl
xorb
or
adc
out
cs
mov
jo
test
xchg
lahf
mov
push
insl
add
lret
jle
add
xchg
fisubs
js
add
clc
lret
add
mov
mov
aam
pushf
adc
push
mulb
stos
add
cmp
xchg
jnp
andl
push
jo
out
dec
add
xchg
jg
enter
add
scas
pop
out
xorl
dec
fsubr
or
roll
mov
cbtw
add
es
push
scas
clc
jae
or
cld
pop
subl
pop
add
out
add
bound
and
lcall
inc
jo
sub
incb
es
insl
popf
stc
xlat
jae
int
jno
ja
cmp
mulb
sbb
gs
popl
jmp
push
lods
mov
sbb
xchg
add
in
add
insl
or
mov
iret
mov
mov
dec
ror
jae
fisttpl
cmp
lds
mov
shrb
sub
pop
add
and
push
mov
sbb
xor
cld
xchg
shlb
pushf
mov
lock
pop
pop
test
scas
mov
fsub
add
ret
xor
mov
shll
pushf
lret
nop
int3
clc
cmp
sbb
mov
and
rcl
in
shl
or
add
dec
cmp
mov
add
dec
stos
add
mov
sbb
outsb
xchg
aam
sbb
xchg
es
mov
orb
popl
xchg
push
and
add
nop
sbb
gs
push
pop
cmp
pop
add
mov
cmpsb
mov
sub
sbb
add
loop
pop
mov
and
add
jne
hlt
rolb
inc
inc
psubsb
sbb
cwtl
loope
cmp
nop
insl
add
jecxz
aaa
xchg
leave
negl
cli
stos
add
cmp
push
cmc
aaa
shl
rclb
inc
int
sbb
add
or
repz
mov
stc
clc
das
sbb
inc
mov
stos
xor
pop
add
mov
adc
outsl
in
and
jbe
push
rolb
je
cmpsl
fucomp
jno
jne
hlt
mov
lahf
sub
jb
and
stos
arpl
mov
mov
fmuls
rcrb
xchg
leave
out
add
mov
cmp
addl
cs
and
pop
fs
mov
pop
or
je
sahf
xor
sbb
inc
push
cmp
bound
push
add
call
pop
sbb
cwtl
mov
and
ret
mov
pop
adc
rcl
jne
xor
int3
mov
repz
mov
jmp
push
icebp
rcl
out
movsb
push
adc
add
cmp
or
jns
add
adc
jno
cmp
sbb
test
adc
add
test
in
xlat
xor
ss
xchg
ror
add
hlt
aaa
daa
lock
test
je
xchg
push
and
ja,pn
scas
mov
add
cmpsl
sbb
add
xchg
sub
push
pop
xchg
jp
ret
pop
inc
xlat
pop
xchg
xchg
outsl
out
xor
pop
data16
pusha
inc
sbbb
adc
pop
jge
stc
hlt
add
mov
cmp
adc
bound
jmp
add
xchg
rol
sub
push
fcoml
pop
js
insb
aam
xchg
jno
adc
mov
pop
xor
mov
lret
add
mov
sub
push
pusha
dec
adc
add
sub
jmp
jo
mov
sub
incb
fbld
add
dec
inc
mov
scas
ret
push
jp
mov
out
pop
xor
add
movsb
shlb
sub
add
dec
mov
pop
scas
add
ret
daa
rorb
add
cli
xor
push
clc
add
mov
jb
mov
jp
mov
add
repz
mov
pop
aam
add
divb
cs
dec
add
imul
out
add
roll
ja
inc
inc
cs
jae
jo
icebp
adc
sbb
pop
mov
pop
divps
addr16
subb
pusha
pop
dec
push
into
mov
inc
nop
push
hlt
mov
dec
xchg
dec
iret
sar
rorl
inc
mov
sbb
inc
add
movsb
and
xchg
lds
cmp
sub
repnz
cs
dec
arpl
cmp
mov
mov
maskmovq
negl
xlat
lds
icebp
pop
mov
mov
fidivl
push
add
cmp
lcall
sbb
fwait
test
cwtl
inc
test
mov
xorb
repnz
sbb
add
xlat
andnps
movb
or
lods
loopne
push
and
jp
add
cld
inc
jbe
fstpl
loopne
push
add
xchg
xor
dec
ds
xor
pop
icebp
mov
or
inc
hlt
fcoms
cli
xchg
lock
adc
pop
and
xlat
inc
test
xchg
and
add
pusha
imul
nop
push
clc
ja
data16
out
mov
push
sub
xchg
xchg
js
add
jns
cmpsb
movsb
pop
pop
xlat
out
add
adc
and
adc
or
imul
mov
push
add
mov
cli
shll
add
jmp
in
incl
repnz
shlb
cltd
lahf
pop
ret
outsl
inc
cwtl
jmp
shr
and
stc
pop
sbb
out
or
rolb
mov
jmp
outsl
jge
add
out
stos
and
sub
cli
push
adc
filds
add
mov
cmp
pop
stc
ficoml
mov
sub
scas
imul
jg
jge,pt
call
sarl
sbb
leave
xor
dec
pop
xlat
ret
es
enter
test
pushf
movsl
add
into
sbb
dec
arpl
cmp
add
outsb
lds
ljmp
sub
popf
in
cmp
out
push
xchg
add
scas
arpl
mov
inc
add
pop
mov
and
mov
pop
aas
add
rorb
out
data16
sbbb
aas
pop
mov
push
pop
aam
add
or
mov
enter
fidivrs
add
inc
test
decb
xor
xchg
add
mov
xor
iret
in
pop
cmp
rol
xor
push
pop
stos
pop
push
mov
addb
cmpsb
loopne
add
pop
scas
popa
or
or
cmp
inc
iret
clc
mov
mov
pop
add
test
stc
dec
sub
add
imul
mov
add
or
loopne
xor
adc
loopne
lds
push
push
pusha
pop
movsl
arpl
imul
xchg
adc
mov
pop
push
imul
adc
add
mov
adc
lock
sub
mov
push
aas
add
movsb
mov
filds
data16
add
fcmovb
daa
imul
jns
add
lds
sar
stos
cmp
leave
mov
les
mov
mov
cmp
sub
inc
and
add
mov
pushf
inc
addb
mov
test
shrl
add
dec
arpl
push
mov
call
xor
ret
mov
adc
and
add
es
sub
add
lds
je
push
sbb
sarb
add
aad
popf
add
pop
xchg
jns
push
jge
push
fldl
jne
or
sbb
out
rorb
push
sub
out
filds
sbb
arpl
aas
orl
add
ljmp
test
les
mov
iret
pusha
movsb
ficoml
popf
dec
ds
std
mov
repz
push
and
test
mov
jecxz,pn
je
jl
testb
adc
jns
mov
push
out
jmp
cmp
push
cmp
outsb
insl
push
adc
pop
xor
pusha
lret
add
cmp
add
jge
sub
sub
out
add
sti
jmpw
and
cli
add
mov
je
cmp
loopne
or
push
sahf
mov
std
mov
sub
add
and
add
sbb
popf
pop
push
xchg
cmp
mov
or
xor
imul
jg
fsubs
adc
daa
shrb
xor
sub
sub
shr
lods
add
and
and
cmp
jae
loope
pop
mov
jle
daa
mov
add
mov
push
mull
push
aaa
and
sti
pop
push
push
repnz
add
add
jle
mov
loopne
arpl
xchg
out
pop
mov
out
test
mov
loopne
add
xchg
or
stos
sbbb
mov
sub
cli
popa
jle
dec
movsl
adc
mov
push
mov
xchg
rclb
sub
sbb
dec
dec
sbb
or
xor
jmp
imul
int
lods
pop
add
adc
sbb
dec
dec
les
std
sbb
icebp
add
repnz
mov
mov
add
mov
in
jle
dec
or
gs
aaa
add
inc
mov
std
pushf
jmp
jb
adc
adc
push
sub
mov
rcrb
je
or
add
inc
inc
adc
add
xchg
sub
xor
cmp
repz
je
in
add
sbb
clc
std
push
test
and
add
repnz
int3
mov
push
jne
add
push
loope
outsl
test
add
mov
inc
js
js
mov
jb
adc
decl
add
mov
cmpsb
data16
aaa
addb
inc
mov
sbbb
pop
mov
add
dec
push
add
jmp
xchg
xor
pop
sbb
ds
inc
add
jge
xor
add
xlat
scas
push
adc
mov
add
mov
in
sub
sbb
xchg
fisttpl
xchg
imul
rclb
aaa
add
sbb
cmp
cmpsb
mov
inc
jmp
add
mov
repz
push
dec
add
jl
dec
dec
add
pop
mov
jnp
ret
mov
call
aas
in
xchg
jmp
inc
sarb
stc
dec
add
out
outsb
mov
sarb
jecxz
bound
pop
addb
pop
xchg
aam
xchg
push
add
daa
xchg
dec
ret
add
mov
mov
jbe
push
jnp
sbb
lock
xchg
pop
mov
shlb
lods
sub
arpl
add
mov
std
inc
call
adc
pop
je
jp
sbb
add
jl
dec
mov
push
lret
loope
mov
add
pop
xchg
jae
or
sbb
sub
lods
add
faddl
lods
add
cmp
and
or
lock
inc
inc
add
imul
adcl
mov
cmpsl
fnsave
add
mov
loope
add
push
daa
popa
and
xchg
xchg
inc
or
mov
ss
sarl
and
sbb
repnz
hlt
int3
dec
and
cld
sbb
xor
mov
cmpb
ret
push
mov
add
mov
jmp
add
xor
add
in
sbb
push
gs
ret
push
dec
mov
mov
jno
test
int3
pop
lret
add
and
shlb
cmp
fsqrt
scas
lods
ret
add
mov
addb
xchg
rcrl
xor
cmp
popf
mov
mov
lret
pop
fcompl
push
add
jp
xlat
testb
stos
pop
or
push
shl
push
adc
ret
inc
adc
out
enter
mov
push
bound
push
add
mov
andl
adc
clc
subb
lock
cld
push
mov
lods
test
sub
notb
mov
rorb
pop
sbb
mov
adc
mov
iret
adc
add
addl
std
cli
sbb
push
dec
dec
adc
dec
adc
inc
push
push
insl
add
std
popa
sbb
inc
int
jae
add
sub
or
jno
xorb
add
pop
or
mov
and
dec
pusha
add
sti
pop
push
iret
mov
addl
idivl
cmp
add
lret
movsl
add
sub
js
clc
fwait
add
push
sub
test
icebp
in
jle
add
insb
shrb
loop
add
sar
repnz
add
testb
or
or
mov
jmp
sub
out
fwait
push
pushf
ret
enter
cmp
ja
xchg
push
dec
sbb
pandn
xchg
pop
pop
jo
loopne
jnp
xor
add
call
cs
add
xchg
test
push
pop
wbinvd
add
sub
cwtl
movsl
or
loopne
pop
sub
test
inc
stos
xchg
add
sbb
adc
jo
and
inc
cmp
stos
mov
out
add
adcl
loopne
rcrl
addr16
or
fucomp
mov
jl
sarb
add
mov
sbb
mov
add
inc
mov
mov
adcb
enter
hlt
mov
mov
jecxz
add
pop
icebp
rolb
mov
inc
leave
or
push
repnz
sub
fists
je
insb
add
inc
in
push
pop
pop
push
jl
cmp
pusha
and
adc
repnz
add
ss
jecxz
test
add
les
adcb
scas
sbbb
cmpsb
in
add
popa
insl
pop
cli
cmp
mov
and
mov
push
shlb
cmp
and
mov
or
push
imul
mov
add
jae
ds
add
pop
sahf
or
jb
push
stc
and
add
int
pushf
sbb
repnz
cmp
mov
sub
pop
jnp
and
mov
in
jnp
test
stc
inc
aam
lds
cmp
leave
enter
daa
or
aad
add
pop
sbb
mov
and
shrb
je
mov
pop
jle
sbb
ret
add
mov
push
mov
jecxz
nop
xor
dec
jb
pop
fcoml
adc
xor
ficompl
in
mov
add
std
and
js
and
mov
idivl
lods
lcall
or
jg
or
cmpb
push
pusha
aam
add
sbb
add
cmp
or
add
movsl
loope
push
ret
adc
fstps
cmp
mov
sub
add
je
pushf
cmp
iret
push
lds
fstpt
xor
jo,pt
mov
aaa
inc
out
inc
lock
add
pop
jle
cmpsb
xchg
push
push
and
sub
push
arpl
add
pop
cmp
mov
inc
or
and
cmpsl
add
enter
lods
or
in
int
add
mov
add
dec
mov
imul
fidivs
cmp
jo
pusha
andb
in
push
mov
aas
xchg
movb
sbb
stos
pop
mov
popa
adc
mov
mov
pushf
add
aam
repz
pop
sub
dec
js
mov
xor
mov
jp
sub
ljmp
cwtl
movsl
ss
mov
mov
jmp
push
dec
push
add
sarb
in
movsb
fdivs
or
jp
lods
sub
mov
dec
roll
xchg
push
cmc
out
inc
jbe
add
xchg
les
ja
push
add
in
clc
push
sbb
pushf
sub
fldcw
insl
cwtl
ltr
cmp
lods
jae
aas
xor
inc
popf
add
ds
and
andb
enter
lret
hlt
out
nop
inc
addl
and
xlat
lea
daa
push
add
or
or
xchg
mov
pusha
stc
andb
add
push
cmp
add
jg
dec
add
push
mov
cmp
push
jo
fiaddl
in
pop
xchg
or
mov
add
mov
bound
mov
mov
lods
dec
add
mov
xor
cmp
mov
dec
mov
add
test
shll
mov
lods
fadds
xchg
inc
jno
rcrl
fnsave
mov
add
dec
xchg
mov
jge
adcb
xchg
mov
inc
add
ja
push
pop
jp
ret
add
xor
out
bound
mov
test
enter
mov
mov
adc
jmp
and
and
mov
adcl
and
dec
and
ret
and
jne
hlt
adc
enter
push
clc
mov
repz
inc
js
inc
imul
adc
mov
and
sub
lcall
adc
xlat
add
add
and
stc
ret
stos
icebp
enter
jns
insl
jmp
out
xor
test
mov
sub
mov
add
mov
inc
mov
and
insb
mov
mov
mov
ror
call
das
jae
cmp
aas
pop
jbe
add
repnz
sbb
mov
add
int3
jmp
dec
inc
inc
sub
jge
lock
sbb
fmul
movl
out
gs
push
ds
arpl
xchg
iret
jge
dec
adcl
insl
inc
or
dec
add
and
push
dec
jb
pop
xchg
add
xchg
cmp
lods
add
icebp
dec
xor
stos
inc
adc
add
push
test
mov
pop
jno
out
sarb
pop
jmp
pop
add
cmp
scas
push
fimull
add
lcall
inc
jle
int
jns
or
clc
subb
xor
rclb
outsl
fistpl
repz
mov
add
mov
adc
lock
jne
xor
pop
cmc
sub
add
int
or
shl
cli
push
imul
jo
add
imul
inc
lods
leave
insl
xchg
xor
jp
subb
or
push
dec
sbb
xchg
mov
and
cs
rcl
pop
cmc
cmp
push
fdivs
adc
pop
stos
scas
mov
divb
sbb
mov
imul
pop
add
mov
ja
icebp
add
mov
loope
lret
aam
add
xchg
testl
out
rcrb
add
test
push
adc
gs
dec
mov
rolb
rorb
dec
jns
and
in
mov
call
cmp
sub
cmp
mov
loop
dec
add
dec
add
movsl
add
fwait
dec
push
add
aaa
mov
add
and
aam
ret
insb
mov
add
sbb
cld
mov
push
fimuls
test
clc
jmp
cmp
xor
pop
mov
mov
adc
in
jbe
add
lea
cld
and
xor
add
cmp
hlt
loope
or
adc
call
fsubrl
outsb
inc
sub
push
je
and
in
add
in
dec
xor
test
insb
js
push
call
insl
pop
add
ret
inc
nop
rcl
outsl
call
clc
add
mov
jbe
lahf
std
add
push
mov
push
in
les
dec
push
lahf
cmc
repnz
sub
imul
repz
imul
and
enter
mov
push
jge
in
ret
adc
add
cmc
dec
in
pop
mov
stc
add
psubd
xchg
in
jno
adc
ja
rorb
in
push
add
or
or
psubsw
and
cmp
inc
dec
sbb
add
jecxz
loop
insl
jnp
fs
shlb
lods
pop
cld
cwtl
movhlps
mov
and
les
mov
push
out
lldt
pop
out
js
test
aaa
out
adc
nop
mov
addr16
movl
sti
add
mov
or
aam
or
cmp
push
in
adc
inc
popf
sbb
mov
pusha
or
xchg
or
testb
cmp
add
das
mov
call
mov
popf
mov
add
cmp
addl
inc
inc
std
mov
daa
loopne
sub
add
pushf
cli
sbb
sti
sbb
or
ja
popf
jbe
iret
mov
imul
test
js
push
adc
pop
pushf
adc
cmc
pop
cli
sub
mov
push
out
push
imull
add
dec
lret
cmpb
dec
cltd
sub
clc
insl
add
mov
dec
inc
add
fdivs
add
pusha
stc
add
subl
cmp
jbe
pop
xchg
jp
repnz
enter
jg
push
dec
ffree
add
arpl
add
jge
fsubs
lret
dec
inc
add
sbb
mov
ror
scas
rclb
ja
add
pop
adc
rolb
jmp
cs
mov
mov
and
push
out
popl
fld
out
jnp
insb
lea
adc
xchg
out
fadd
subb
je
add
jecxz
xor
rcll
sti
dec
jnp
out
rolb
fmull
jne
ljmp
jmp
or
pop
ret
mov
int3
fwait
popf
add
dec
jge
mov
mov
scas
icebp
add
and
call
add
mov
xor
ja
sti
and
ret
out
clc
stos
xchg
dec
add
xchg
ss
mov
jno
or
inc
xchg
pop
test
sbb
jmp
subb
mov
cwtl
and
pusha
add
adc
insl
pop
cmp
jle
dec
test
sub
filds
mov
inc
lock
aam
or
cs
or
mov
in
add
cltd
sub
pop
push
or
mov
add
sbb
int
mov
pop
les
shlb
cld
jae
mov
popa
adc
jns
pop
or
rcll
adc
inc
and
popa
sub
sbb
mov
adc
pop
fsubrl
sub
xor
iret
loop
add
cltd
pop
lock
sbb
imull
cmp
inc
add
int3
mov
sub
std
push
shlb
push
add
sub
scas
add
leave
push
loop
mov
mov
mov
add
int
aam
jb
leave
add
fsubrs
es
out
cmp
shll
sbb
adc
and
hlt
lods
addl
add
inc
ds
gs
call
pusha
dec
or
sbb
aad
mov
add
ljmp
jle
xchg
pop
or
mov
stos
add
cmp
aam
arpl
les
ds
lret
orb
jge
aad
dec
push
push
sahf
je
cwtl
jle
mov
int
and
es
jl
test
andb
push
add
sub
jle
inc
cmpsl
pop
sarb
jo
inc
stos
inc
lds
sbb
mov
xor
add
jp
add
add
add
ret
sub
das
and
push
add
outsb
xlat
mov
push
shrb
add
sbb
insl
add
push
pop
mov
cld
sbb
and
sarb
add
adc
or
sahf
push
pushf
mov
mov
xor
sub
push
add
je
xchg
stc
mov
pop
pop
push
jo
orb
imul
fadds
mov
add
jnp
mov
add
jge
push
scas
xchg
jmp
mov
jo
or
cmp
pusha
shlb
jge
aas
sbb
test
fsubrp
les
in
imul
add
cmp
add
cmpsb
lods
push
sahf
lcall
add
outsb
inc
rorb
inc
inc
xor
cli
lret
enter
add
ret
rcrl
imul
add
push
and
inc
test
jo
jno
dec
outsb
sbb
js
and
clc
xchg
adc
add
ss
andb
push
xor
js
shl
mov
pop
aas
pop
sbb
dec
test
add
ja
sbb
in
movb
fsubrl
mov
add
subl
push
ja
cmpb
mov
nop
add
adc
cmp
mov
pop
push
aaa
loop
xlat
xchg
maxps
add
mov
fwait
bound
inc
cmc
daa
add
notb
cs
add
stc
or
xchg
pop
add
xor
test
fpatan
in
sub
mov
xchg
mov
test
push
dec
mov
adc
insl
fisubrl
shll
arpl
pop
test
add
sub
cmc
jl
fdivl
mov
and
dec
test
push
dec
scas
cmc
das
xorb
lret
add
sbb
mov
add
push
cmp
leave
loope
sub
adc
repnz
pushf
sub
test
jae
loopne
nop
push
leave
or
fadds
adc
add
add
data16
in
jno
and
add
inc
xchg
movsb
or
loope
loopne
mov
mov
ds
cmp
fisttpl
add
test
sub
mov
add
push
mov
push
call
jecxz
sbb
cld
mull
cmp
add
pop
mov
enter
add
push
enter
jg
and
mov
mov
fwait
pusha
sub
pop
and
into
mov
dec
pop
and
add
rorb
push
outsb
dec
xor
test
jno
cs
jne
add
xor
push
out
add
and
push
jmp
xchg
movsb
testl
imul
adc
pop
lahf
mov
ret
xor
out
add
fisttpll
jg
rcrl
mov
adc
incl
sub
inc
subl
dec
pop
lahf
rcll
call
lea
mov
lods
inc
adc
fnstsw
aaa
rcll
xor
add
xor
repnz
nop
jo
cmp
cld
filds
inc
cs
adc
popf
and
add
int
jl
inc
scas
subb
dec
aas
inc
mov
dec
or
loopne
mov
mov
lods
sysenter
xlat
xor
clc
add
mov
jl
out
ljmp
hlt
rcrl
jae
jbe
popf
xor
add
je
cs
jne
add
mov
push
pop
sub
xlat
mov
cmp
data16
jbe
and
xor
pop
jmp
loope
cwtl
imul
dec
in
movsl
cs
sti
test
ljmp
vdivps
mov
pop
lret
dec
or
clc
xchg
rcrb
cmp
test
daa
add
pop
pop
cmp
ficomps
sti
add
out
stc
adc
jo
and
les
add
ss
and
pop
add
int3
sbb
stc
dec
pop
and
fldl2t
push
jae
shrb
ja
add
cmp
lods
cmp
inc
fbstp
sub
fs
cmc
xor
adc
add
mov
lret
sbb
cld
xlat
hlt
adc
and
loop
leave
add
stos
mov
sub
pop
cli
stos
and
adc
push
and
and
out
hlt
js
add
insb
fs
nop
loopne
mov
add
cmpsl
leave
adc
or
gs
in
xchg
add
inc
jne
and
mov
cmp
add
pop
mov
cmc
add
sbb
adc
lods
jg
add
movsl
xchg
fisttps
sbb
dec
mov
pop
mov
sbb
cvtps2pd
mov
push
pop
xchg
fcom
fwait
add
pop
xchg
cmp
movsl
daa
dec
add
cld
std
fs
mov
cmp
flds
cli
cwtl
pop
push
lea
insb
loope
pop
int3
dec
cmp
dec
mov
sbb
add
and
fmull
lret
daa
sarl
xchg
pop
mov
xor
cmpsb
dec
fnstcw
cs
and
jo
mov
mov
sub
ja
pop
imul
sbbl
jo
or
inc
fstpt
dec
add
ds
jmp
sbbb
rcll
les
add
cltd
out
shr
arpl
pushf
int3
add
js
xchg
add
add
push
movsl
repz
test
lret
mov
cs
sbb
rcrb
rcl
filds
fimuls
ja
clc
cwtl
lds
sbb
push
dec
add
cld
mov
fidivs
add
push
sti
aam
xor
scas
pushf
imul
pop
cmp
xchg
mov
push
ss
inc
xchg
inc
add
add
test
lcall
mov
inc
cmp
and
pop
jo
or
pop
rclb
pushf
das
shrb
or
mov
dec
scas
js
aam
adc
add
or
shl
test
clc
les
cwtl
fsts
dec
mov
adc
adc
cld
lret
das
add
jae
enter
fiaddl
pop
push
imul
push
jmp
push
pusha
mov
add
mov
ret
les
std
mov
ret
add
cmpsb
in
lret
jnp
rolb
test
mov
std
orb
or
cld
cwtl
shl
add
mov
inc
jg
and
adc
test
outsl
or
aam
leave
cld
jge
adc
das
or
mov
sub
test
sbb
scas
xlat
int
mov
sti
sbb
out
pop
xchg
adc
mov
mull
pop
fildl
push
add
in
add
push
adc
and
shr
or
add
push
enter
push
adcl
dec
jno
leave
mov
add
or
mov
pusha
add
test
dec
inc
repnz
dec
lcall
scas
dec
std
push
cmpb
pop
nop
enter
sbbb
ljmp
xlat
rcrb
sub
out
stc
lea
test
xchg
pusha
movsl
fcomps
mov
push
add
push
jb
jo
cmc
jo
push
add
out
cmp
pop
add
mov
fsub
insl
jb
add
stos
inc
test
nop
mov
mov
mov
scas
add
push
fcoml
and
loopne
out
and
lock
cbtw
xor
sub
pop
aas
add
repz
int3
jle
mov
imul
push
sbb
jns
push
in
mov
test
pop
cltd
xor
push
sbb
movsb
fs
push
fwait
and
add
inc
dec
les
into
scas
pop
push
pop
stos
mov
lahf
frstor
sbb
add
cwtl
xchg
pop
cld
sub
rcll
dec
test
cltd
push
sahf
add
in
pop
js
out
mov
mov
push
cld
mov
xchg
adcl
mov
ss
pop
and
shl
cmp
sbb
cmp
xchg
add
mov
sbb
je
add
adc
nop
adc
add
sbb
sbb
inc
push
adc
mov
rolb
cmp
mov
add
scas
mov
inc
xchg
mov
push
arpl
js
loop
insl
test
icebp
add
adc
add
mov
sbb
push
dec
data16
insl
pop
popa
adc
subb
add
test
xor
add
sbbb
rorb
mov
iret
inc
pop
test
imul
xor
jge
fdivrs
add
ljmp
jecxz
minps
xor
and
dec
shlb
stos
sbb
or
adc
outsl
dec
lea
add
xor
cld
push
push
add
xchg
fstpl
hlt
pop
scas
and
popf
out
aam
icebp
push
sbb
enter
dec
rcl
sbb
add
test
mov
add
stc
jbe
push
pop
pop
add
aaa
adc
cwtl
adcb
xor
fwait
cld
sbb
cltd
add
movsl
out
mov
incb
int3
test
mov
cs
xchg
rolb
sti
lods
cmc
mov
orl
subl
pop
jge
cmp
cmp
inc
rorl
nop
loopne
enter
jo
hlt
into
lods
in
cmpl
lock
daa
mov
jns
lcall
cld
add
test
out
sub
mov
loopne
pop
add
js
sti
push
sahf
add
cmp
andb
xchg
add
scas
cmp
add
cmp
insl
dec
add
mov
ljmp
les
push
xchg
stc
jg
loopne
aam
xchg
inc
fsts
mov
movsl
mov
test
cli
jp
nop
dec
lods
in
add
lret
ret
mov
insl
xchg
inc
cmp
fldcw
adc
xor
mov
scas
add
ljmp
lods
push
andl
rolb
inc
cwtl
cmovo
add
add
shlb
add
xchg
shll
clc
or
jge
mov
sbb
add
xchg
dec
push
jecxz
popa
add
pop
fsubp
pop
pop
mov
lret
ffreep
lock
repnz
mov
add
fcomps
sbb
and
loop
add
loopne
dec
pop
ja
imul
icebp
test
fistpll
lock
jecxz
out
mov
xchg
pop
add
out
push
and
aas
dec
das
dec
test
add
sti
xlat
jecxz
add
mov
push
and
adc
lods
insb
sbb
hlt
es
inc
and
mov
fwait
mov
lret
sub
add
mov
mov
xlat
inc
xor
movsl
cld
aad
fwait
ret
cmc
clc
shll
sub
jp
pop
negb
sbb
cmpsb
loopne
mov
rorb
add
xlat
faddl
sahf
loope
push
xchg
mov
ret
lods
loopne
and
shll
pusha
outsl
add
jg
cs
pop
lds
shrb
jbe
push
jl
pop
sbb
int
add
adc
push
loopne
cmp
add
in
add
mov
lahf
jmp
inc
fs
rolb
or
mov
aam
cmc
add
int
shlb
pushf
std
cmp
sbb
add
dec
test
clc
paddq
push
push
je
cwtl
cmp
enter
push
inc
data16
jae
add
arpl
and
out
fsubl
xchg
fsubs
mov
mov
cmp
cmp
sbb
and
fidivrs
enter
push
insl
mov
add
adc
push
pusha
out
adc
dec
mov
add
pop
insb
mov
out
cmp
mov
xorl
add
add
xorl
in
add
pop
loop
mov
loopne
sbb
leave
mov
addr16
cmp
imul
xchg
pop
int3
mov
cmp
mov
push
in
mov
and
or
sbb
adc
xor
sbb
popa
loopne
add
cld
mov
xor
data16
mov
add
rcll
fisttpll
jmp
push
es
fbstp
sub
mov
add
dec
jp
test
clc
cmp
mov
jo
adc
mov
add
cmp
mov
inc
paddusb
mov
scas
or
xchg
bnd
sbb
rcrb
push
cmpsb
push
pop
add
arpl
aam
add
sti
xchg
push
push
sbb
int3
scas
sub
mov
inc
push
loop
call
cmp
inc
out
rclb
push
aaa
dec
push
std
stos
push
add
or
dec
cmpsb
push
decb
lods
in
les
out
cmp
mov
xchg
rcrl
ss
pop
shrl
sbb
movsl
sbb
iret
ja
push
adcl
add
jnp
inc
pushf
xchg
mov
add
dec
outsl
add
xor
pop
add
arpl
rolb
nop
xor
cli
jo
add
outsb
mov
lcall
jno
xchg
adc
add
push
jns
sub
or
and
cmpl
xor
add
into
dec
xor
pop
cmc
add
ss
cmpb
jne
add
push
lret
enter
mov
cmp
test
test
xor
aas
push
cs
sbb
cmp
ret
mov
and
add
mov
cltd
jbe
xor
test
push
sbb
loop
inc
fsubs
pop
fldl
add
stc
add
add
push
icebp
adc
test
sub
fcoml
movb
mov
cltd
sub
dec
sti
in
adc
add
gs
jnp
mov
add
add
inc
bound
rclb
ret
fcmovbe
cmpsl
adc
xor
cmp
push
cltd
push
inc
pop
js
adc
dec
jmp
subb
lret
mov
add
add
lock
imul
sub
add
xor
or
mov
jns
lock
sub
into
cmp
mov
addl
dec
xchg
stos
out
inc
push
jns
das
test
mov
loop
pop
cmpsl
mov
mov
sbb
insl
and
gs
push
cmpsl
test
jo
pslld
adc
mov
pop
fimull
add
rclb
sbb
jbe
das
xchg
and
jp
fs
jecxz
test
inc
push
or
xor
icebp
push
popa
jno
mov
xor
rcr
add
je
push
in
add
popf
mov
and
add
in
and
outsb
or
jmp
dec
push
fadds
pop
out
loopne
pop
add
sbb
push
call
mov
das
outsl
in
dec
push
sbb
and
mov
adc
cmpsl
sahf
xor
aad
mov
das
sti
rcrl
rcr
add
sub
int3
push
mov
mov
shrb
ret
aam
jo
add
jns
sub
mov
in
cmp
arpl
jne
sub
adc
mov
pop
inc
lahf
sub
stos
adc
sarb
clc
mov
lcall
cli
push
add
inc
cmp
in
ds
cltd
add
pop
xchg
add
pop
inc
call
popa
out
xor
add
or
and
dec
arpl
inc
and
xchg
add
add
iret
jge
push
push
lea
add
addr16
push
testl
hlt
fs
les
test
iret
jl
nop
cmp
int
jecxz
movsl
mov
inc
push
mov
lcall
xchg
add
jnp
mov
ljmp
sub
jl
adc
dec
movsl
mov
push
pop
mov
sbb
insl
pusha
sub
rolb
pop
aam
adc
inc
cmp
mov
sbb
lret
xchg
add
sub
shlb
xchg
out
cwtl
cmp
cmpsl
daa
adc
std
lahf
imul
fldt
imull
add
xchg
add
ja
stos
mov
pop
pop
jno
out
sub
add
cmp
mov
lods
fdivrs
test
test
pop
dec
cwtl
add
lods
add
and
loop
add
sbb
cmp
movsb
je
mov
cmp
pusha
lahf
adc
jo
add
dec
addr16
lods
add
xor
inc
ja
mov
fistps
or
es
clc
add
mov
insl
pusha
js
out
cmp
scas
add
lock
add
adc
dec
pop
or
int
or
push
dec
sbb
loopne
jmp
fsts
shlb
add
insw
cmp
xor
xchg
mov
mov
sbb
jns
add
into
jle
mov
dec
imul
in
shr
outsb
add
push
mov
scas
inc
cltd
out
sbb
inc
add
ljmp
mov
ja
dec
js
ds
jg
cmpsb
jbe
add
andl
and
insl
adc
es
popf
fs
sbb
jo
add
pop
sbbb
mov
pop
inc
test
arpl
jbe
add
orb
repnz
mov
sarb
imul
fstps
pop
psubw
loop
adc
mov
negl
sahf
lcall
and
gs
insl
jp
addl
mov
inc
int
out
mov
lods
lret
add
mov
pop
dec
fs
das
jbe
push
imul
cld
xchg
add
fs
push
and
xlat
pop
adc
ja
clc
or
add
imul
push
mov
fisubs
xor
cld
cmp
xchg
xchg
movsl
enter
add
adc
inc
add
inc
movsl
mov
and
shll
and
nop
add
mov
lea
incb
mov
aam
cmc
add
add
mov
dec
add
pop
js
sti
add
pop
jge
mov
fldcw
xchg
or
add
xor
jecxz
mov
sbb
into
add
add
pop
js
cmpsl
jns,pn
pop
iret
sbb
xor
nop
loopne
fmuls
xchg
ljmp
jle
call
mov
jmp
int3
fwait
cmp
aas
out
and
mov
nop
xchg
clc
xor
jle
pop
pop
push
call
pop
xor
rorb
sbb
nop
arpl
sarb
in
je
inc
sarb
sti
sub
cmp
xorl
sbb
hlt
dec
loop
add
js
lret
dec
mov
mov
bound
sbb
stos
adc
or
popf
leave
mov
fdivrs
ficoml
add
stc
mov
sub
outsb
or
adc
loopne
jno
mov
hlt
mov
sbb
sahf
jle
ss
mov
lock
mov
add
pop
mov
adc
cwtl
cmpb
sub
push
daa
rorb
sub
filds
mov
or
mov
push
rcll
sti
jae,pn
xor
mov
fisubrs
jns
lock
mov
or
mov
sbb
call
or
jp
clc
or
add
movsl
or
aam
stos
mov
shrb
mov
fsubr
fiaddl
cmp
dec
xlat
add
sbb
push
add
sub
jb
add
ss
add
sub
stos
or
pop
sub
int
jle
pop
mov
clc
in
push
inc
inc
leave
pop
shlb
add
test
ret
xchg
add
test
shrl
popf
mov
cmpsb
outsl
test
add
xlat
and
roll
jae
xor
sbb
enter
fdivrl
ds
and
inc
mov
repz
cld
cmp
sub
pop
inc
shrl
dec
aad
jne
sbb
rorl
icebp
xor
cmp
hlt
mov
push
pusha
sub
sub
add
aam
mov
outsb
es
cmpl
cmc
xchg
lgs
mov
pusha
adc
cmp
inc
jge,pn
push
add
hlt
mov
rorb
add
xor
mov
mov
cmp
fsubl
fwait
xchg
movsb
jp
add
mov
push
add
cmp
xchg
in
lock
push
xor
mov
fildl
or
adcb
xor
ds
jo
je
and
leave
add
adc
faddl
in
and
filds
mov
ret
int
test
cmp
sbb
out
pusha
js
and
andb
add
pop
ljmp
or
sbb
push
sub
sub
int
xchg
add
xlat
shlb
rorl
xor
filds
xchg
xlat
inc
test
in
and
mov
int3
loop
popa
fcmove
test
fwait
data16
fnsave
fs
cmp
inc
xlat
repz
pop
adcl
add
les
scas
adc
fildll
out
xchg
mov
hlt
stc
add
jmp
rolb
add
lret
fcmove
fildl
loop
sbb
jp
jb
add
into
idivb
sub
mov
xchg
and
mov
add
push
adc
sub
subl
subb
jbe
jg
add
jae
in
xor
inc
add
cmpsb
movsb
adc
mov
roll
mov
fildl
cmp
lret
addl
fsubrs
jne
cmc
pop
xor
rcrl
xchg
dec
inc
test
or
pop
icebp
in
pop
sbb
sub
sahf
xorb
jb
mov
jg
ja
jmp
rcrl
in
adc
sbb
idivb
push
add
cmp
adc
pusha
enter
xchg
or
sar
jo
movsb
pop
bound
cli
notb
aaa
add
insl
xor
or
xor
leave
push
test
cmp
adc
daa
dec
jbe
sbb
push
mov
std
mov
inc
lahf
mov
sub
mov
jbe
or
jecxz
mov
dec
sub
pop
movsb
or
add
rorl
pop
pusha
jmp
xchg
or
xor
add
jo
add
cs
sarb
sar
fstpl
add
or
shll
jecxz
movsb
pop
add
movq
mov
push
repnz
dec
lret
mov
adcb
mov
aaa
adc
dec
or
shlb
jbe
mov
and
sbb
and
loope
aaa
repnz
jnp
mov
popf
ret
shlb
stos
dec
fnsave
inc
cmp
add
mov
mov
jle
in
call
aad
add
and
adc
push
and
add
cmp
xchg
mov
std
rorl
dec
push
ljmp
les
shl
adc
out
push
mov
inc
xor
sbb
arpl
in
je
mov
stc
dec
add
mov
and
aam
add
cmp
sarl
add
enter
xor
or
sbb
sahf
aad
add
or
adc
inc
les
and
repnz
or
call
add
fistl
and
shll
fdivr
loopne
inc
jg
add
les
loopne
sbb
into
xorb
hlt
dec
add
cs
in
ror
inc
add
adc
jecxz
mov
jp
adcb
push
ja
mov
sub
andb
int
sub
push
stc
jno
fs
mov
mov
call
add
aam
test
aad
jle
add
test
mov
xchg
pop
mov
arpl
outsl
or
jbe
dec
inc
out
cmp
push
add
push
aaa
cwtl
add
jbe
mov
and
rolb
stos
fwait
leave
add
sub
add
test
clc
xchg
sub
test
ljmp
ss
fwait
dec
and
add
adc
je
mov
push
cwtl
incl
icebp
xchg
shll
sbb
pop
xchg
inc
insb
or
add
mov
je
pop
xchg
cltd
loope
push
mov
mov
xchg
mov
mov
bound
inc
ja
inc
hlt
cmp
or
jecxz
stos
add
add
xchg
jmp
aad
lds
das
shlb
lret
insb
ja
mov
jecxz
push
stc
push
push
cmpsl
repz
jmp
pop
in
enter
aaa
iret
aam
cltd
cmc
push
cld
orl
and
jmp
loopne
cmp
popa
add
fldenv
gs
xor
sbb
inc
fnstsw
mov
inc
icebp
or
sub
iret
add
ret
mov
dec
pop
adc
add
add
cwtl
sub
inc
movsb
push
rcr
add
push
test
cmp
mov
add
inc
mov
push
ljmp
or
pop
repz
dec
add
adc
or
inc
add
stc
push
subb
push
and
imul
xor
add
and
inc
mov
add
push
mov
xor
shll
xchg
icebp
mov
clc
daa
jne
jno
cmp
std
arpl
sbb
sbb
rcrb
add
xchg
ficoml
adc
add
lods
cmc
xlat
xor
rcll
imul
jle
jno
add
insl
push
pusha
pop
aaa
repz
fstpl
lret
mov
rclb
stos
add
push
add
mov
cli
out
dec
cltd
test
hlt
movsb
add
mov
lret
mov
outsb
imul
mov
int
jb
mov
cld
ficompl
xchg
imul
cmpsb
arpl
sti
adc
mov
sub
call
cmp
ror
jae
movsl
aad
mov
mov
xor
das
fcompl
dec
call
add
aaa
push
out
sbb
or
mov
fdivr
dec
aas
inc
les
add
xchg
sub
shrl
pop
scas
mov
jge
add
mov
sub
addl
jnp
enter
es
xchg
rorl
int
add
inc
das
adc
push
in
jp
ds
ret
lcall
jb
aam
movsl
xlat
ficoms
imul
cmp
mov
xchg
sbb
xchg
test
add
xchg
xchg
test
push
jecxz
lock
add
mov
add
fstps
add
ljmp
cmp
orb
insl
cmp
loopne
aad
hlt
out
add
and
in
fsts
add
or
sidtl
cmpsb
stc
inc
xor
xor
add
cmp
pusha
add
jo
add
mov
scas
xchg
mov
pop
adc
xchg
or
pop
ret
add
gs
in
add
outsl
loope
dec
xchg
pop
mov
aad
inc
push
test
add
add
popf
rorl
cmp
adc
pusha
or
divb
add
inc
xchg
lods
cmpxchg
pop
test
adc
inc
adc
mov
enter
aaa
pop
lods
sbb
adc
inc
loope
mov
cwtl
add
rcr
add
or
push
mov
shlb
lods
cwtl
push
adc
mov
inc
test
mov
andb
sti
mov
or
cmpsl
inc
push
adcb
lock
lahf
lcall
mov
mov
mov
aaa
dec
pop
shll
mov
bnd
add
dec
addr16
cmp
inc
nop
test
adc
cmp
mov
xlat
lcall
rorb
in
mov
mov
mov
add
pop
jl
data16
cmc
pop
and
add
std
jle
jae
xchg
pop
xor
jnp
push
jo
xchg
lcall
sbb
pop
mov
mov
jne
enter
add
mov
jl
addr16
out
loopne
imul
add
mov
nop
add
mov
jecxz
gs
mov
aaa
jae
sbb
push
test
loop
ficomps
adc
xor
add
dec
stos
lock
dec
add
mov
jecxz
add
mov
cmp
add
jmp
sbbb
pusha
add
rolb
clc
add
arpl
sti
pop
sar
outsb
hlt
mov
mov
imul
or
movsl
mov
fcomp
sti
hlt
mov
stos
dec
adc
pop
ret
xchg
out
adc
fisubrl
sbb
adc
jnp
add
xchg
push
xlat
or
mov
clc
adc
aaa
xor
mov
sbb
xor
fwait
lcall
and
push
es
loopne
push
stos
and
dec
sbb
insl
push
add
add
aad
mov
dec
sbb
pop
cwtl
push
and
adc
mov
pop
mov
mov
aam
sbb
push
or
repnz
in
inc
fidivrl
adc
jl
inc
sbb
lahf
aam
add
dec
jg
add
lret
adcb
lahf
ret
imul
out
movsl
add
pop
jnp
push
insl
xchg
rcrl
pop
addb
mov
sub
leave
pushf
loop
cmp
aas
addr16
scas
rcrb
lods
sub
je
add
or
jns
push
xor
push
out
sbb
mov
jo
add
push
dec
nop
pop
pop
ret
xchg
movsb
mov
sbb
stos
and
mov
hlt
loope
into
cmp
xor
stc
sub
dec
sar
mov
mov
adc
xchg
ds
hlt
sub
pop
xchg
inc
aaa
negb
mov
std
dec
push
add
and
sbb
push
int3
push
jl
call
inc
out
push
sbb
xor
movsl
xor
add
xchg
cmpps
cmp
pushf
inc
lret
add
xor
sub
pop
aaa
movsl
inc
and
mov
hlt
jge
dec
add
pop
dec
out
add
lds
icebp
and
pop
push
rcll
xor
cmc
mov
cld
dec
fs
mov
stos
fbstp
push
add
dec
enter
addr16
push
push
test
add
jecxz
enter
add
xchg
ja
xchg
fldt
sbb
add
mov
dec
mov
int
sbbb
mov
sbb
fisubrs
inc
xchg
mov
aas
ds
sti
pop
out
repz
cmpsl
paddsw
lcall
xchg
int
imul
lock
mov
loopne
xlat
xor
push
imul
ds
jo
loop
and
je
add
sub
inc
sbb
jae
dec
add
pop
aas
fdivrl
dec
jne
add
ja
jecxz
ret
add
sub
pop
stc
aaa
aas
addb
jl
add
xor
pop
insb
in
pop
add
inc
in
push
cmp
movsb
pop
leave
dec
mov
and
pushf
fs
into
add
cmc
filds
add
popa
aaa
xor
out
jo
loopne
add
fwait
add
add
sti
or
enter
mov
jbe
mov
lret
xchg
shrb
outsb
add
add
loopne
das
stos
add
out
add
sub
popf
arpl
dec
mov
lret
sbb
cwtl
pop
sahf
sbb
mov
in
pop
add
rcll
adc
add
std
loope
inc
cmp
dec
adc
jb
or
xlat
loop
idiv
add
repnz
cmp
lods
rolb
icebp
leave
add
push
cld
or
fwait
add
xchg
push
mov
icebp
movzbl
xor
pop
lods
sbb
lods
adc
jp
enter
ja
cmp
daa
jl
push
add
cmp
orl
or
decb
push
jle
mov
inc
fcomps
pop
notb
jo
fisubs
sti
add
adc
mov
mov
sarl
pop
fbstp
adc
adc
xor
rolb
mov
ja
push
subb
pusha
mov
and
adc
add
cltd
fstps
enter
push
jecxz
pushf
push
xor
mov
and
sub
lahf
and
inc
fistl
in
mov
pop
mov
xor
scas
lret
cmpb
mov
inc
xor
sbb
and
add
adc
push
add
mov
cmp
js
mov
fdivrp
mov
mov
add
add
adc
addl
pop
sbb
dec
jo
add
ss
ret
arpl
divl
hlt
sti
outsb
nop
dec
jns
sub
out
mov
mov
adc
in
jmp
shl
lock
push
pusha
movsl
std
cmpsl
add
das
mov
lods
add
lock
out
movsl
add
cmp
sub
mov
popa
push
mov
lahf
je
jge
out
pop
and
and
bound
enter
fisubrs
pop
test
out
jno
add
std
xorb
mov
xor
leave
mov
add
pop
shrb
xlat
add
imul
fnstenv
ret
insb
sbb
jnp
mov
adc
mov
add
scas
rcrl
add
and
xor
dec
cmpsl
imul
inc
aas
fwait
stos
xchg
mov
scas
lret
lods
dec
pushf
mov
movsl
jb
add
fisttpll
mov
pop
fs
adc
add
cld
aad
arpl
and
jae
pop
pop
loop
or
jecxz
psllq
adcb
mov
in
mov
fimuls
add
loopne
inc
pop
dec
popa
jnp
cwtl
jo
and
insb
add
jecxz
push
sub
pop
rorl
hlt
cmp
pop
outsb
add
pop
loopne
rcrb
and
or
add
cs
fldl
pop
sbb
mov
add
ret
mov
xlat
in
dec
add
clc
cli
arpl
pushf
or
out
adc
loopne
xor
add
mov
test
push
lea
aam
sub
xchg
mov
sbb
push
shrb
cld
mov
fcoml
je
jo
scas
jle
lret
andb
push
imul
aaa
jmp
push
mov
roll
or
adc
inc
out
sbb
mov
adc
mov
cmp
jb
cmc
add
ret
or
add
repz
cltd
fsub
es
test
pop
jns
jle
pop
repnz
addr16
add
fcoms
add
cmpsb
es
lcall
andb
idivb
out
cwtl
fsubl
setae
lret
adc
mov
jo
lock
lods
push
negl
or
xchg
xlat
call
fldt
or
mov
jle
addb
in
insl
add
xor
lea
add
mov
mov
movsb
mov
jns
loopne
xor
mov
inc
inc
and
rolb
mov
mov
push
nop
mov
add
dec
pop
imul
jns
sub
mov
sbb
or
test
and
imul
cmp
in
cmp
cmp
sub
aaa
filds
xchg
add
repnz
rolb
inc
pop
and
das
add
stos
leave
mov
test
mov
xchg
add
adc
and
inc
aas
jge
sbb
xchg
in
mov
add
dec
dec
mov
jl
add
cli
mov
inc
adc
popf
push
cmp
lcall
in
out
mov
out
mov
ret
lods
xchg
add
xor
sub
jge
add
lret
or
dec
dec
and
daa
mov
add
add
xchg
inc
enter
mov
push
iret
enter
add
adc
mov
ret
insl
add
clc
leave
int
inc
pop
out
cmp
sti
jno
mov
enter
fildl
mov
fsubs
test
jp
scas
cmp
addb
push
sahf
test
fimull
divb
mov
add
or
inc
inc
in
add
notl
mov
repz
add
jne
mov
adc
aas
pushf
add
xchg
or
or
xchg
das
jmp
jge
cld
loope
jle
flds
aam
sti
loop
add
jae
add
jg
fiadds
leave
push
into
movsb
pop
call
out
jecxz
in
xor
loope
mov
sub
and
adc
mov
nop
push
push
fcoms
add
and
rcrl
add
mov
test
dec
mov
cli
add
ja
in
add
adc
filds
negb
sbb
out
je
es
xchg
lea
add
int3
in
out
add
jp
xchg
mov
xchg
rol
lods
push
cmpsb
mov
add
add
sub
sbb
sub
orb
cs
sahf
jl
add
push
adc
pop
push
movsb
scas
pop
jnp
mov
int3
adc
or
add
movsl
jg
mov
push
pusha
pushf
add
and
lret
divb
pop
int3
lahf
fidivrs
add
stc
movb
fcmovnb
push
jl
mov
xchg
dec
jg
jb
pop
lea
pop
rolb
leave
stc
add
ret
pop
mov
sub
rolb
jnp
add
icebp
inc
dec
in
repnz
add
pop
test
lods
push
shrl
stos
jnp
add
enter
rcl
dec
xchg
sbb
andb
lret
xor
adc
pusha
and
data16
mov
fstpl
shl
inc
and
mov
incb
cld
add
pop
push
test
adc
jl
adc
rolb
add
adc
enter
mov
sarl
das
inc
sahf
or
push
movsb
mov
sbb
pusha
pop
and
sub
push
pop
and
add
stos
add
enter
adc
icebp
push
inc
or
bound
mov
data16
add
dec
mov
cmp
inc
mov
inc
jecxz
push
add
mov
loop
lahf
sub
mov
fiaddl
add
sub
cmpsl
push
sbbb
add
xchg
adc
xor
fbld
stos
mov
lcall
push
jmp
sub
pop
add
insl
ret
xchg
adc
dec
push
push
pusha
push
cmpsb
cmp
popf
cmp
xchg
in
mov
mov
add
push
inc
mov
in
daa
xchg
cmpl
mov
out
jle
push
nop
fcompl
inc
adc
xchg
mov
and
pushf
call
icebp
pop
dec
lock
add
fldl
fdiv
add
xor
ss
movsb
arpl
sbb
push
bound
lret
out
dec
add
xor
mov
cmp
and
inc
push
mov
imul
aas
sar
rorl
jg
pop
jmp
and
adc
mov
call
pop
mov
add
call
imul
cmp
and
sbb
dec
pop
mov
mov
inc
cmpsb
popa
repz
roll
adc
in
lret
xchg
dec
outsl
out
mov
aas
call
inc
js
cmp
pop
sbb
ja
or
dec
pop
push
roll
pop
in
imull
scas
cmp
addb
ja
mov
ud2
or
lock
jne
repz
mov
in
cmp
out
or
push
cmp
xchg
sbb
test
xchg
imul
cmp
inc
aas
or
dec
iret
add
decb
rorl
mov
add
sbb
call
dec
scas
sub
ja
cs
loop
inc
xor
aaa
cmp
sbb
movsl
ljmp
fidivrs
pop
sbb
add
jbe
popf
cmc
jecxz
and
out
push
add
lock
repz
push
rorl
add
out
rcrb
jle
mov
push
and
adc
mov
hlt
add
divb
in
or
pusha
popl
aaa
jmp
mov
inc
add
dec
int
add
ret
sbb
imul
add
mov
pop
minps
sub
fcoml
shrl
xchg
fmul
push
jne
pusha
fcoms
aas
fwait
cld
mov
ss
add
ljmp
inc
lds
shll
add
add
nop
add
push
or
imul
add
xchg
js
dec
fildll
xor
scas
add
jns
test
fimuls
andb
inc
push
iret
outsb
dec
and
fcomps
jnp
xchg
adc
mov
mov
outsb
mov
cmp
push
pusha
xor
lds
in
lret
dec
dec
and
shrb
fwait
xchg
push
add
mov
mov
dec
fld
cli
or
xor
lock
mull
push
adc
rcrl
bound
jne
out
adc
sub
addr16
in
test
sbb
inc
dec
rclb
mov
shrl
fdivrs
push
in
jnp
mov
faddl
push
mov
and
adc
repz
inc
mov
fnstenv
mov
add
arpl
outsb
cmp
pusha
pop
and
adc
pop
mov
adc
jmp
test
xchg
je
mov
add
dec
xor
or
stc
fistpl
in
loop
lcall
jno
fmull
push
pushf
mov
iret
pop
mov
add
mov
xlat
in
mov
popa
dec
call
lret
movsl
and
add
jge
adc
mov
and
dec
cmp
pop
into
mov
iret
add
loopne
mov
pop
addb
xchg
cmc
imul
add
cld
push
ja
test
pop
sub
out
cmp
xchg
pop
pop
test
xor
xor
jne
xchg
call
push
push
push
cs
or
sub
and
lahf
andl
sub
jecxz
or
test
in
pop
add
xchg
int
inc
mov
adc
sbb
add
pop
sbb
add
sub
js
and
mov
pop
jg
sbb
addr16
sahf
pop
fbstp
or
jbe
lock
ja
arpl
xchg
sbb
leave
and
xlat
nop
sbb
ret
adcl
dec
xchg
adc
clc
jle
loope
jo
and
pusha
addr16
push
inc
mov
inc
pop
xchg
xchg
call
pop
loopne
add
adc
mov
bound
push
sub
dec
jge
add
pop
cmp
cmp
in
or
out
dec
jns
add
rcrw
add
and
mov
xchg
rcl
cmp
ror
jge
add
call
push
add
mov
add
ljmp
enter
test
jo
cmp
or
aad
pop
imul
jne
cmp
popf
jmp
fidivrs
loopne
or
int3
inc
movsb
or
sti
xchg
inc
ret
inc
dec
repz
stc
lret
imul
pop
pop
and
sahf
add
scas
sbbb
mov
add
icebp
insb
lea
out
inc
sbb
pavgw
ja
shlb
push
test
ficoml
pop
adc
add
ds
into
sbb
sbb
push
mov
jo
ret
and
mov
add
pop
adcl
adc
mov
cmp
leave
sub
pushf
add
mov
add
lods
adc
pop
leave
inc
rcrb
divb
daa
int
cld
out
or
jno
std
mov
add
add
rcrl
outsb
hlt
mov
clc
movl
adc
cmpsb
or
pop
call
orl
popf
lods
sahf
popa
add
arpl
jno
jle
sbb
pavgb
popa
int3
jmp
or
inc
add
and
loopne
add
pop
cwtl
push
jno
and
subl
sbb
out
ljmp
fcmovu
inc
clc
lds
add
xchg
mov
repz
out
ret
inc
or
mov
fnstsw
adc
jb
fidivrl
aam
add
hlt
and
fcomp
mov
jnp
ss
add
jecxz
shll
outsl
hlt
add
dec
dec
enter
aaa
mov
scas
adcb
out
ja
sub
in
addl
arpl
sub
xchg
mov
jo
fldl
out
dec
insl
es
and
fnstcw
scas
jg
ret
xchg
xor
fwait
push
hlt
lret
sbb
add
fsts
add
pusha
lea
test
sbb
lods
popf
push
mov
loop
jmp
icebp
push
pusha
imul
or
pop
mov
icebp
iret
mov
add
stos
dec
out
aam
mov
add
mov
adc
and
add
dec
scas
mov
cmp
sub
add
push
mov
inc
lds
or
or
incb
xor
inc
cmp
repnz
sub
sarb
stos
pop
pop
sub
inc
pusha
mov
adc
loopne
xor
loop
adc
jbe
add
xor
mov
das
ds
cli
pusha
add
mov
mov
or
dec
fwait
push
cld
ljmp
out
inc
in
mov
pop
fidivs
test
je
cmp
adc
adc
aas
jne
inc
add
dec
aad
sub
mov
inc
add
js
xchg
xchg
sbb
push
into
je
notl
add
cmp
and
mov
push
adc
enter
jl
add
lret
mov
mov
jl
jo
or
in
pushf
jno
mov
jns
imul
in
mov
je
pop
sub
sub
shr
xchg
in
dec
dec
or
xchg
sub
lock
imull
das
cs
push
jl
cmp
fsubl
add
into
pop
xchg
fs
add
gs
mov
cmc
jecxz
push
call
lock
test
add
sbb
sbb
and
xchg
mov
dec
and
inc
cmc
jns
scas
add
jecxz
movb
inc
xchg
adc
icebp
lds
shlb
add
mov
imul
add
jo
or
add
fldl
aam
add
pusha
xchg
lds
add
jmp
mov
mov
shrb
in
cmp
and
and
aaa
jmp
pop
aad
pop
add
out
xor
call
fstpt
sub
loop
lods
and
push
je
add
mov
subb
rcrb
iret
aas
push
xchg
add
aas
fdivr
ret
stos
mov
leave
adc
ret
add
daa
enter
test
xchg
dec
outsb
push
jo
mov
shl
and
push
les
loopne
outsl
in
add
mov
push
xchg
jmp
orl
add
or
push
and
sbb
dec
das
out
xor
nop
adc
rolb
and
cmp
jo
cmp
sub
add
xchg
push
int3
add
aas
add
cmp
gs
movsb
shrl
sbb
out
add
aam
mov
add
sarl
adc
into
adc
mov
jnp
mov
pop
fdivs
sbb
mov
fistpll
add
std
inc
test
mov
jmp
add
popa
push
in
xchg
dec
jge
add
ss
fwait
mov
cmp
fs
filds
dec
or
je
aas
inc
scas
sbb
push
mov
ret
push
add
and
xlat
repnz
sub
cwtl
movsl
push
insl
mov
inc
idivl
ds
sub
mov
arpl
popl
xchg
jmp
in
add
test
sahf
mov
cmpsl
repnz
add
pop
arpl
out
ficoml
shlb
push
in
scas
mov
dec
dec
inc
movsl
add
fs
scas
out
fnsave
andb
xor
dec
fmul
mov
das
sbb
jo
add
andb
push
xchg
sub
cmc
add
add
or
sub
add
and
add
int
or
lods
fdivrs
or
sbbl
in
bound
jge
fs
add
cmpsb
fistps
enter
daa
sub
dec
cmp
push
mov
je
jecxz
or
xor
into
popf
inc
pop
lock
call
push
icebp
aam
jmp
dec
sub
pop
pop
popf
arpl
jle
sbb
inc
dec
sarb
ret
jo
jo
add
inc
jmp
push
call
sbb
stos
cmp
cli
xchg
outsl
dec
inc
mov
lcall
cmp
in
jns
les
stos
push
xor
addr16
sub
imul
sbb
jno
in
nop
xchg
jmp
xor
popa
pop
shl
scas
push
movsb
cmp
xor
mov
sbb
inc
add
push
outsl
xchg
mov
lahf
pop
stc
lods
aas
inc
enter
mov
leave
jbe
adc
dec
popa
mov
push
out
andl
loopne
pop
je
popa
push
mov
xor
insl
cmp
mov
xor
popf
sbb
sub
outsl
jg
xchg
mov
andb
sub
mov
lret
sahf
or
int
sahf
and
out
push
ficoms
push
push
dec
pop
xchg
lcall
in
call
outsb
xor
fs
jno
add
das
mov
xchg
pusha
add
add
dec
add
ja
xor
into
add
cmp
xchg
xchg
or
nop
popw
ret
cmpsl
test
insb
pop
jge
add
subb
add
inc
sahf
insb
add
lret
test
dec
jb
jp
sbb
mov
xor
xchg
inc
shr
mov
adc
sarl
push
test
lds
add
cmp
outsl
cmpsb
cwtl
pop
js
add
and
add
aas
dec
xor
add
sbb
repnz
movsl
jge
mov
jp
dec
shlb
orb
xchg
xor
pop
or
push
add
jb
add
mov
mov
sub
pop
xor
jo
pop
mov
pop
test
aas
or
das
ljmp
add
call
sbb
add
sbb
xchg
xor
add
mov
lea
and
add
push
jns
xchg
and
imul
inc
int3
fsts
pop
jno
fwait
xchg
mov
sbb
cltd
or
inc
testb
scas
push
je
and
add
in
sbb
cli
jns
ds
adcb
pusha
in
roll
int3
dec
sbb
add
mov
xor
or
fildl
cmp
add
add
fmul
sbb
lcall
sub
andb
sahf
fsubl
add
cmpb
int
test
or
add
outsl
sub
dec
fistpll
adc
push
xor
add
jne
repz
shlb
enter
add
dec
mov
push
pusha
negl
cli
mov
fidivs
lea
jp
add
cli
das
add
lahf
rcrb
sbbl
std
add
stos
jo
hlt
push
or
shr
add
jmp
push
mov
sbbl
add
mov
test
xlat
add
loop
repnz
push
pop
sbb
fstps
lods
sbb
add
jp
ss
jne
outsl
mov
mov
pop
aas
sti
or
pusha
pop
and
adc
popf
add
mov
mov
popa
sbb
mov
mov
push
mov
adc
xlat
imul
or
orl
add
mov
scas
add
push
int3
push
xorb
and
cmp
or
and
xorl
mov
pusha
and
adc
in
xchg
or
ds
addb
orl
lahf
inc
xor
daa
and
rorb
add
fcomp
adc
orb
sbb
push
mov
xchg
loop
in
sub
and
inc
call
test
sahf
stc
adc
inc
add
lret
ficompl
test
xchg
and
cli
add
lret
mov
mov
mov
xchg
push
nop
sbb
orb
into
pop
mov
cmc
xchg
pop
jp
in
add
test
add
jmp
rcpps
sbb
clc
lcall
in
mov
mov
test
or
sbb
test
in
xor
jae
adc
sub
pusha
lret
cmp
loope
jg
xor
outsl
pop
dec
fldcw
les
movsb
lret
inc
fwait
aad
rcll
mov
sub
and
fadds
in
mov
cld
cmp
movsb
cwtl
adc
cmp
lds
or
test
scas
and
add
test
stc
cmp
fldl
sub
rclb
movl
ljmp
jae
dec
test
in
in
into
shrb
jnp
add
lret
inc
cltd
movsl
mov
cmp
adcb
jns
lds
add
mov
fwait
imul
add
cmovp
mov
add
inc
repnz
lret
ud0
hlt
inc
mov
add
cmp
sbb
push
andb
in
loopne
inc
fbstp
sti
adc
inc
xorb
push
pushf
xor
call
mov
inc
loope
pop
push
pop
fsubl
test
push
mov
jl
fiaddl
cmp
add
sbb
adc
lods
mov
ljmp
sub
or
pusha
ja
push
add
cmp
aam
fmulp
push
and
cltd
pop
xlat
lock
add
adc
xchg
int3
xchg
out
mov
add
fiaddl
jg
fst
add
jo
pop
das
and
dec
add
aad
jnp,pn
hlt
pop
aam
dec
enter
addl
jecxz
dec
pop
mov
sub
sbb
fcmovu
jg
std
push
add
add
mov
jno
nop
or
iret
jg
xorps
sub
mov
add
in
rcll
sbb
jle
sarb
and
xor
insl
xchg
xor
cmpsb
push
pop
dec
add
jmp
icebp
clc
push
pusha
aas
loopne,pn
aad
out
xchg
xor
aam
enter
cmp
addr16
add
fdivl
xchg
add
orb
adc
cmp
popf
ja
add
cmp
add
sbb
jmp
add
inc
imul
iret
mov
pop
add
xor
add
loopne
cmp
pop
sti
nop
arpl
pusha
mov
xchg
aaa
in
and
cmc
sbb
sbb
inc
insb
mov
cmp
add
pop
out
add
mov
cmp
fadd
jns
cltd
sahf
je
in
or
pop
push
fmuls
std
xor
test
sub
ret
add
and
into
jle
push
mov
int
sub
jae
rcll
mov
imull
or
add
je
shlb
mov
cmp
pop
ds
add
outsb
rcrb
rcrb
mov
fsubr
mov
ja
sarl
mov
dec
mov
mov
sbbb
lock
mov
aad
push
cmp
add
push
add
mov
mov
rcrb
loopne
inc
push
ror
dec
push
out
stc
pop
lret
jecxz
inc
jae
sbb
pop
cld
add
push
sub
popa
out
data16
sahf
pop
xor
add
das
int
xor
push
jl
cli
sti
sub
in
arpl
sub
push
divb
jg
pop
add
lods
sarb
push
push
mov
dec
test
add
sar
in
mov
je
mov
fisttpll
pop
or
inc
aas
fucompp
movsb
xchg
add
in
push
xchg
aaa
dec
lds
int
add
xor
mov
adcl
cmc
add
sbbl
clc
lods
mov
pop
xchg
add
mov
cmp
fs
fsub
enter
push
add
sbbl
sti
inc
aam
and
hlt
add
jmp
insb
je
sbb
adc
sarl
fcoml
aas
push
mov
mov
int3
mov
js
sarb
repz
push
inc
iret
lcall
nop
push
ud1
cmp
gs
and
add
jno
pop
cmp
jns
nop
mov
cmpl
mov
xchg
inc
sub
and
sbb
xchg
fucomip
inc
clc
jecxz
push
sbb
sbb
rcll
movsb
cmpsl
loopne
icebp
in
add
scas
sub
pop
cltd
dec
inc
add
adc
jns
add
out
aaa
push
push
jecxz
inc
adc
pop
jae
jns
roll
fidivs
leave
add
nop
mov
sub
cwtl
add
add
lahf
xor
xor
nop
std
inc
mov
loope
mov
add
stos
xchg
sbb
cmpsb
xor
add
jecxz
mov
mov
sar
and
or
adc
in
add
hlt
fldl
pop
lds
or
push
push
sbb
out
das
scas
xor
xchg
xchg
xlat
pop
and
pop
dec
sarb
sahf
add
xchg
out
insl
mov
and
jae
pop
push
ja
in
shlb
imul
mov
cmpsl
or
and
add
lcall
cmp
jno
mov
movl
inc
out
mov
add
fwait
nop
arpl
aaa
sub
movl
jmp
xchg
loopne
xchg
adc
mov
mov
mov
hlt
xor
ret
add
push
gs
sti
lret
ret
movsb
jnp
popa
xchg
int
pop
add
js
add
repnz
pusha
jg
push
push
dec
push
inc
pop
cmp
aaa
sub
fildl
cli
sub
add
enter
daa
in
add
iret
cmp
add
shlb
dec
or
or
call
lret
jnp
sbb
rolb
and
jne
lea
push
mov
add
adc
mov
lea
aas
sub
hlt
adc
andl
pop
add
xchg
push
ja
push
mov
or
dec
sbb
adc
dec
inc
cwtl
add
inc
or
pop
addl
push
mov
add
jae
iret
push
xor
add
lock
sbb
insb
aas
pusha
call
push
mov
pop
xchg
adc
leave
dec
mov
sub
fdivl
dec
into
and
add
outsl
add
movsl
fdivrl
push
or
and
loopne
jno
cmc
xor
sti
aad
sub
js
aaa
or
add
ret
add
xor
jg
add
dec
mov
mov
jnp
pusha
push
jns
push
xchg
js
imul
xchg
jae
mov
xorl
and
ljmp
test
lahf
loop
mul
cmp
fcoms
movl
xor
sub
mov
mov
movl
test
mov
add
xor
ret
ja
add
js
inc
sbb
outsb
add
jne
cwtl
add
pusha
push
stos
xchg
push
mov
scas
push
pop
mov
repz
xor
and
addl
dec
pop
je
pop
add
sub
inc
ja
add
mov
dec
or
add
mov
es
test
call
sahf
pop
aas
sbb
inc
push
popa
add
sub
and
shlb
sbb
mov
pop
and
insb
add
mov
imul
dec
cmp
sahf
sti
add
fdivrs
sarb
xor
fsubr
add
nop
sub
push
pusha
loope
sbb
push
shl
lret
pusha
nop
sbb
inc
jp
sbb
sbb
pop
adc
sbb
call
leave
mov
inc
inc
mov
push
fdivs
add
ja
imul
and
lret
js
add
jb
mov
cmp
add
add
sbb
sub
jl
add
push
mov
jecxz
stos
insb
fstpt
or
push
pop
shlb
cwtl
jle
int
xor
cmpsb
pop
loopne
adc
and
rol
call
lods
scas
adc
invd
filds
cmp
test
dec
pop
sbb
cmpb
add
dec
mov
add
push
cwtl
push
lcall
repz
dec
call
adc
mov
into
adc
mulb
fs
clc
xor
mov
add
cmp
add
mov
jmp
cwtl
adc
scas
xlat
cmpsb
lcall
fisubrl
push
push
push
cmp
das
mov
dec
add
push
movsb
push
and
repnz
add
sbb
add
dec
push
jecxz
xchg
mov
add
mov
sbb
ret
add
and
xchg
pop
lods
pop
pusha
add
fs
lock
test
or
push
add
mov
adc
aad
inc
lock
push
lods
mov
push
out
pop
pop
int3
add
xchg
push
xor
dec
add
ja
push
ds
or
loop
inc
fsubrl
xlat
mov
xor
adc
sahf
or
mov
ss
ljmp
push
jg
stc
das
inc
cmpsb
daa
add
out
adc
add
jp
cwtl
add
fmulp
daa
mov
add
mov
dec
push
lret
leave
inc
push
add
mov
and
imul
xchg
pop
loope
add
scas
cmp
outsl
push
xchg
std
push
loop
and
push
stc
stos
jl
sbb
pop
std
xchg
dec
pop
cwtl
add
pop
mov
add
adc
inc
xchg
adcl
loope
xchg
fiadds
pop
jmp
pop
cltd
rorb
pop
inc
and
sub
xchg
ja
and
mov
mov
mov
mov
outsl
pushf
je
filds
int3
cmp
nop
or
insl
adc
and
push
mov
popf
add
fdivrl
pusha
mov
inc
inc
add
stc
push
repnz
xchg
dec
dec
loopne
std
push
jne
and
or
push
andl
test
les
sbb
jmp
mov
outsl
loop
loopne
pop
imul
and
cmp
rorb
imul
cld
sbb
leave
xchg
je
int3
cmp
in
xchg
sbb
push
aaa
cmc
jmp
ljmp
repz
fcoms
fcomip
das
std
sbb
loope
sbb
add
and
inc
push
jbe
imul
cmp
leave
scas
loope
dec
add
xchg
repz
ret
push
aaa
std
negb
nop
sbb
shrb
push
movsb
cltd
popa
add
mov
jmp
sub
insb
adc
dec
sbb
rclb
mov
repnz
add
dec
lahf
arpl
sahf
push
sub
aad
loopne
add
mov
imul
sbb
and
add
ror
mov
push
ljmp
dec
pop
cmpb
xor
repnz
repz
add
jl
dec
ret
xor
add
aaa
or
jge
adc
mov
pushf
add
pop
mov
dec
jp
dec
sub
mov
push
int3
fnstenv
pushf
ficompl
add
and
clc
sub
dec
pop
add
and
and
add
pop
in
repnz
loope
mov
jnp
sbb
repz
xchg
ds
mov
daa
in
test
push
adc
add
lods
repnz
dec
lock
push
sahf
sbb
popf
movl
jecxz
repnz
pop
addl
xlat
cltd
inc
pusha
jmp
ljmp
in
jecxz
fwait
orb
enter
push
gs
outsb
add
xchg
jmp
inc
push
addr16
lret
add
add
push
roll
pop
jmp
call
gs
mov
sub
add
loopne
jnp
add
mov
movsl
roll
cwtl
test
xchg
mov
sbbb
cmc
push
fucomip
mov
xor
divb
jne
iret
in
add
hlt
out
mov
xor
add
mov
xor
cli
adc
sbb
dec
mov
jbe
add
sbb
push
outsb
add
jmp
xchg
mov
add
jl
jo
js
aam
mov
in
insl
add
inc
bound
test
adc
aaa
cmp
push
stos
add
xor
addb
ds
cs
in
xor
sbb
mov
pop
or
cmp
in
push
in
mov
stos
das
jle
popf
cmp
mov
popa
sbb
mov
add
and
xchg
dec
lahf
nop
lods
pop
add
push
push
icebp
in
rolb
es
add
rol
mov
movsb
xchg
push
sub
faddl
add
dec
loope
or
fnstenv
add
pop
lret
addb
sbb
mov
inc
fcoms
cwtl
push
mov
leave
xor
add
add
add
insl
mov
pop
out
lods
cli
lds
fcomps
jge
shl
js
mov
div
mov
mov
int3
push
test
mov
cmpsb
inc
add
lret
in
mov
aam
add
gs
jle
pop
fiaddl
stos
mov
xchg
pop
out
add
inc
out
add
into
movsb
fistpll
or
push
fistpll
and
sahf
and
xor
test
xor
xor
lcall
and
xchg
add
pushf
lret
or
mov
rcrl
sbb
xchg
dec
aas
mov
rolb
sbb
xor
add
fcomps
or
enter
cmp
dec
cmp
aam
mov
dec
add
repz
ret
add
push
mov
aaa
mov
dec
lods
add
jle
aad
test
push
add
add
jno
fcompp
xchg
cmp
stos
cld
jns
jmp
lret
movsl
in
sub
loopne
jg
rclb
loope
add
push
mov
sqrtps
sub
jno
mov
xor
add
leave
lea
add
dec
mov
inc
mov
jno
pop
push
mov
ss
xchg
adc
add
test
push
add
pop
fs
fistl
into
xchg
aam
int
xchg
out
sbb
hlt
js
add
sbb
rclb
xchg
cs
jb
add
out
mov
imul
ds
dec
add
inc
mov
jae
fidivs
mov
jne
add
imul
or
into
sbb
rolb
bnd
push
pop
or
adc
xor
sbb
pop
mov
inc
and
xchg
or
sbb
cwtl
xchg
adc
add
jecxz
add
sbb
pop
or
aam
push
shl
add
dec
fcoml
push
insb
mov
and
push
popf
add
clc
jmp
movb
or
sbb
add
out
mov
jbe
leave
push
mov
xor
fwait
ret
sub
aad
fsubl
es
dec
stos
add
and
aad
jmp
dec
adc
loope
test
repnz
sbb
rorl
mov
rcll
push
jb
add
add
push
mov
clc
mov
incb
daa
out
loop
and
xlat
outsb
sbb
cmp
xchg
add
xchg
je
add
add
into
fists
jge
aad
test
add
jp
rcrl
add
ret
add
cs
hlt
xor
jno
mov
ljmp
lret
mov
pop
cld
orb
push
mul
add
jg
push
outsb
aas
push
mov
add
xor
add
in
pop
jo
pop
jns
mov
rolb
cs
mov
xlat
repz
mov
add
arpl
pop
pop
push
imul
hlt
mov
loopne
dec
out
inc
adc
mov
mov
push
jge
add
inc
enter
pushl
adc
add
sbb
iret
mov
push
add
std
pop
outsb
mov
rolb
mov
adc
mov
cli
push
sub
out
sbb
rclb
arpl
add
mov
je
loope
add
out
pop
mov
add
inc
mov
in
scas
add
loope
das
cmp
jns
add
xchg
pop
add
xchg
push
add
js
pop
jb
xchg
pusha
pusha
pop
gs
into
push
lods
jp
rcr
insl
sarl
pop
cmpl
scas
add
insb
bound
in
inc
test
jmp
jnp
xor
out
add
hlt
add
insl
inc
mov
out
add
dec
fbstp
fs
addr16
mov
loopne
out
fiadds
sub
lods
sub
add
aas
xchg
scas
ja
js
notb
lods
testl
in
nop
pusha
push
jl
adc
into
decl
ss
dec
and
sub
dec
cmp
cmpsb
pop
dec
mov
inc
mov
add
stos
inc
xchg
ret
frstor
inc
aam
js
add
dec
bound
out
scas
push
add
insl
inc
and
add
outsb
inc
pop
ret
clc
pop
call
mov
sub
es
dec
mov
je
push
cmp
mov
cmp
push
dec
dec
jle
adc
inc
mov
cmp
sbbb
lea
cmp
and
addl
rorb
jle
jl
add
pop
test
jl
sti
lret
es
sub
cmp
shrb
pop
add
xor
imul
in
fwait
cmpb
add
inc
jo
mov
sub
cmpsb
mov
das
int3
add
mov
xchg
add
mov
sbb
lds
inc
or
xlat
or
cwtl
pop
adc
push
xchg
sbb
mov
sbb
mov
add
aam
in
jo
adc
test
pop
sar
or
xor
add
pop
imul
push
aas
icebp
add
sbb
mov
orb
ljmp
inc
aaa
mov
add
mov
lds
movsl
inc
inc
cmp
jae
out
mov
int3
adc
cmpsl
cmp
popf
mov
push
inc
or
inc
sub
and
xor
in
add
leave
sbb
lea
mov
aaa
insl
cmp
rcrb
pop
add
rol
bound
xchg
inc
pop
js
add
lds
pop
hlt
xor
fisubl
fwait
pop
outsl
test
add
mov
pop
lds
arpl
jbe
lods
push
add
sbb
jecxz
pop
jno
enter
std
int
les
loopne
add
xor
add
xchg
cmpl
fsubrs
cmp
sub
xor
and
push
xchg
and
stos
fsubp
add
sub
pop
xor
sub
insb
mov
leave
adc
cmc
rcrb
jge
add
adc
ror
imull
fdivrl
cmp
push
cmp
in
imul
pushf
daa
inc
testb
aad
pop
jl
test
add
mov
dec
dec
loop
and
pop
xchg
cmp
mov
sub
es
add
hlt
sub
rcrb
push
aas
jmp
pop
imul
sarl
sub
mov
test
movb
cmp
test
sub
sbb
dec
add
push
mov
pop
dec
mov
add
mov
inc
jno
mov
add
sub
push
xchg
and
jnp
or
nop
in
push
adc
sub
cmp
rcrb
loope
xor
out
mov
aas
push
push
dec
cmc
cmp
push
jnp
lret
dec
add
adc
cld
add
test
sbb
add
sub
mov
add
cld
mov
mov
fldenv
sub
test
les
dec
rorb
mov
das
xchg
call
testb
xor
adc
icebp
jno
addr16
push
clc
dec
add
fsubs
in
pop
mov
sub
pop
pxor
scas
loopne
bound
cmp
xchg
sub
mov
xchg
pusha
push
mov
int
add
insb
sbbb
call
ret
add
xchg
xor
xchg
mov
orb
and
dec
cmpb
pop
jae
cmpsb
cmc
mov
addl
and
adc
pop
sbbl
and
jbe
sub
hlt
push
dec
xorb
xchg
xchg
jmp
mov
addl
sbb
imul
add
in
shll
outsl
or
jnp
out
adc
cmpb
faddp
cmp
test
push
cmp
inc
je
sub
jmp
add
sbb
xchg
pop
out
mov
enter
add
ja
je
outsl
and
call
aas
test
inc
inc
pop
jmp
test
dec
xchg
mov
push
mov
outsb
add
xor
inc
add
push
addr16
rol
xor
mov
fldl
pop
add
mov
add
ljmp
dec
test
sub
in
dec
add
mov
sti
cmp
adc
pop
cmpsl
xor
fs
sub
mov
push
or
nop
mov
outsb
jle
sbb
xor
fisttpll
stc
scas
out
add
mov
pop
mov
mov
ljmp
mov
cmp
imul
mov
cwtl
mov
or
outsl
mov
add
jnp
call
cmpl
lock
cmp
xchg
xor
cmp
sbb
cmp
pop
enter
add
fdiv
sub
ss
inc
lahf
push
xchg
movsb
pop
int3
mov
xchg
mov
test
pop
shlb
add
push
jae
mov
mov
cmp
hlt
xorb
jl
aad
inc
sub
lock
xchg
mov
das
rcrb
fbld
pusha
pop
mov
dec
sbb
mov
and
movsb
and
inc
add
cmp
xchg
iret
leave
pop
enter
test
test
jp
stos
dec
pop
sbb
pop
jo
dec
or
cmp
imul
add
std
pop
sbb
add
dec
orl
jnp
xor
sub
jae
add
push
lock
outsb
call
pop
mov
mov
fdivs
out
iret
and
push
push
test
test
mov
or
or
mov
std
sub
pop
mov
or
mov
push
adc
hlt
push
inc
jo
mov
pushf
ljmp
cmp
pop
sbbl
subb
mov
es
pop
fbld
stos
fs
or
inc
mov
xchg
js
mov
cli
mov
addl
lock
dec
add
mov
cld
loop
xchg
cmp
jno
rclb
out
cmpl
push
or
cwtl
sub
imul
ss
std
jmp
sub
movsl
int3
pop
inc
shll
add
cmpsb
lock
call
scas
fimuls
cmp
xchg
cmp
sbbb
add
fwait
ret
mov
pusha
iret
or
mov
xchg
push
jmp
lock
bound
mov
or
in
cmp
pusha
repnz
stc
inc
lds
inc
das
mov
pop
push
pushf
sub
cmp
aam
add
jb
ljmp
clc
cmp
lahf
sub
aas
sbb
or
cld
leave
jns
xchg
mov
push
aaa
lcall
dec
mov
pop
js
dec
lds
addps
mov
mov
mov
mov
mov
xor
test
insb
adc
js
daa
arpl
cmp
enter
mov
lcall
xchg
mov
jge
sarb
mov
mov
push
pop
shlb
or
fdivrs
inc
push
jmp
ret
xor
jnp
and
and
add
pushl
ret
adc
aam
lock
xor
dec
mov
rorb
mov
push
aaa
dec
jg
roll
push
daa
mov
loopne
cmp
das
std
orl
rol
data16
jmp
popl
mov
mov
cmp
push
sub
leave
in
jge
incb
lock
jp
std
push
stc
adc
jae
scas
jecxz
dec
mov
add
lds
add
xchg
mov
adc
push
mov
add
cmpl
and
sub
xor
mov
adc
test
jecxz
mov
dec
in
xchg
or
aam
enter
shlb
or
iret
push
mov
add
push
testb
push
mov
in
pop
add
push
ficoml
and
cmp
and
movsb
cmp
inc
data16
inc
inc
mov
in
or
js
push
dec
or
xchg
and
outsl
mov
dec
iret
rolb
push
aaa
jl
inc
test
inc
cmc
sbb
pushf
mov
add
cmp
insb
and
mov
nop
jbe
push
movsl
cmp
aad
add
xor
xchg
bound
sub
dec
add
mov
lcall
ret
sbb
aaa
push
call
rcll
les
sbb
pushf
stc
imul
in
shrb
insl
shrl
push
ljmp
mov
loopne
cmp
add
outsb
stos
add
loop
pop
push
loope
xchg
push
cli
jb
pusha
test
xchg
xchg
cmp
arpl
mov
outsl
jb
sbb
inc
loop
pop
jl
xor
cmpsb
cwtl
imul
jno
pop
push
repz
lods
les
or
cli
xor
mov
add
add
out
in
fidivrs
mov
mov
test
mov
mov
loop
mov
or
push
cmp
test
mov
in
or
jge
lret
mov
sub
adc
or
adc
pusha
mov
popa
push
xlat
sbb
add
repnz
inc
push
cmp
xchg
rolb
pop
mov
add
fwait
pop
dec
lods
in
mov
inc
out
pause
bound
dec
inc
std
pop
dec
enter
inc
pop
push
cmp
scas
push
add
sbb
nop
sbb
in
lods
inc
cwtl
jbe
add
clc
xor
aam
popf
pusha
imul
mov
xor
inc
insb
std
xor
pop
fisubrl
mov
movsb
test
out
sbb
mov
mov
ss
add
mov
fwait
xchg
ret
and
out
mov
push
rclb
dec
fimuls
in
fs
push
mov
add
sbb
stos
je
push
lods
std
jmp
jo
push
adc
or
and
push
fadds
inc
loopne
add
dec
mov
test
cmp
push
ljmp
in
xchg
lahf
push
cld
ds
pushf
add
cmp
out
lds
inc
adc
mov
cmp
add
jge
add
imul
or
outsl
add
ljmp
call
add
pop
push
push
js
pop
pop
scas
add
in
jle,pn
pop
inc
xor
lds
add
sbb
enter
xor
lahf
adc
and
jge
push
loop
add
cmp
test
int3
mov
pushf
xor
cltd
add
dec
mov
std
leave
aam
pop
cmpb
bound
flds
je
xchg
inc
cmc
in
dec
dec
sub
pop
shl
sbb
mov
and
notb
out
adc
mov
sbb
sub
xorl
jns
or
push
loopne
pusha
in
push
lret
adc
adc
jbe
pusha
ret
addb
mov
sbb
scas
adc
and
adc
dec
nop
push
insb
jmp
faddl
add
push
xor
popa
cmp
and
ret
cmp
rcll
jns
dec
sub
jmp
std
imul
adc
mov
or
jnp
rolb
push
mov
pop
das
add
aam
add
das
inc
add
pop
lret
jae
test
cmpsb
aaa
inc
xor
popa
lock
pop
jns
mov
xor
push
or
outsl
inc
mov
ret
sub
movb
mov
jecxz
dec
daa
sahf
xchg
sub
cwtl
test
xorb
mov
movsl
adc
push
pop
pcmpeqd
push
mov
push
dec
dec
mov
xor
roll
in
jno
addr16
in
and
insl
or
push
std
adc
mov
jge
out
sbb
jnp
mov
jno
sbb
nop
ret
inc
inc
loopne
rclb
jbe
andl
arpl
addr16
adc
adc
adc
mov
mov
add
aas
dec
cmp
add
ljmp
pop
jne
sbb
lds
lahf
and
mov
pop
jge
sub
mov
dec
jmp
pop
sub
cmpsb
pusha
jmp
mov
mov
pop
mul
pop
imul
xor
pop
cmpsb
push
dec
inc
sahf
or
add
mov
add
jae
shl
mov
aas
mov
xor
lahf
mov
push
and
adc
mov
xchg
cwtl
jno
push
outsb
adc
add
cmp
mov
jbe
xor
imul
mov
fsubl
insl
subb
mov
je
sub
or
xor
jecxz
jbe
add
outsl
mov
fstpt
mov
addr16
sub
mov
fidivl
jecxz
aad
pop
lahf
jmp
pop
cmp
sbb
mov
adc
dec
mov
add
int
sub
pop
cmp
pop
lds
xor
xchg
inc
jnp
and
adc
lods
aam
daa
dec
mov
lods
inc
call
cli
add
sbb
lahf
adc
push
gs
ds
cmp
jnp
sub
cli
and
xchg
sub
cld
add
push
daa
jmp
xor
ror
push
enter
or
sbb
mov
xor
nop
xchg
pavgb
cmp
aaa
push
subb
aas
sub
lock
inc
mov
mov
sbb
inc
mov
inc
fisubs
js
mov
jae
aad
clc
fisubrl
sub
jp
sbb
les
mov
fwait
jns
cwtl
aad
sub
xor
enter
sub
xchg
mov
jmp
mov
js
jns
sbb
and
push
inc
mov
cmpb
mov
mov
std
mov
adc
outsl
lods
popf
ja
push
or
pop
dec
xchg
enter
stc
jb
add
ds
mov
nop
insl
pusha
ret
mov
sbb
clc
les
cwtl
sbb
and
push
subl
adc
sub
push
lods
mov
inc
out
int3
imul
xchg
lods
xchg
adc
andb
xor
sub
adc
jno
mov
inc
iretw
or
lds
sbb
clc
xchg
movl
push
mov
loopne
jmp
call
adc
aas
add
je
mov
dec
inc
adc
mov
movsl
mov
xor
dec
cmp
js
test
pop
inc
orl
mov
mov
mov
cmp
rolb
dec
jl
mov
and
inc
adc
mov
sahf
sbb
aas
or
sub
and
dec
and
or
dec
mov
in
push
jns
popa
dec
mov
mov
imul
addr16
out
add
xor
das
movsb
mov
jecxz
pop
es
add
mov
fistl
add
stos
daa
dec
xor
sub
in
inc
cwtl
adc
adc
lock
fadds
fstpt
adc
pop
and
sub
pop
and
push
inc
cmc
jge
jno
aam
data16
ja
outsl
add
fstps
stc
push
stos
jo
in
mov
scas
cmp
xchg
lods
sub
cld
add
daa
or
xor
mov
mov
adc
nop
add
jns
pop
adc
scas
jnp
enter
push
inc
push
insb
and
cli
mov
cltd
icebp
sbb
jl
and
loope
test
inc
mov
ret
dec
add
jge
mov
dec
and
ja
sub
pop
xchg
rclb
dec
movsb
inc
jns
add
sbb
sbb
fidivrs
cmc
add
aad
mov
aas
test
mov
pushf
sbbb
jno
sub
inc
adc
lahf
fsub
push
adc
fs
cmp
sbb
inc
or
mov
es
cld
inc
inc
sbb
enter
aad
je
add
sub
jge,pt
rolb
sub
in
fcoml
aad
push
mov
push
in
sub
imul
xor
stos
or
mov
imul
adc
lret
rcrb
xchg
les
pop
xchg
dec
inc
adc
jns
pop
cmp
sar
inc
enter
sahf
in
bound
dec
shll
push
aas
xchg
mov
pushf
and
dec
mov
jmp
repz
add
fstpt
lds
mov
fsubl
mov
add
add
xchg
mov
sarl
xchg
push
lahf
jecxz
addr16
add
fistps
sub
cld
int
pop
jge
fwait
add
pop
dec
cltd
ret
or
mov
or
insb
and
sub
and
not
xchg
pop
sbb
ret
inc
ja
pop
iret
dec
pop
push
sbb
and
inc
jnp
repz
idivb
lock
ret
ret
pop
cwtl
adcb
mov
mov
cmpsb
xor
add
add
dec
mov
and
jg
loopne
subb
sarl
outsl
cwtl
popa
pop
fstl
cmp
jp
and
leave
add
lds
ljmp
rolb
cwtl
mov
cmp
jns
dec
daa
mov
xor
inc
inc
ret
into
mov
xchg
mov
sbb
shlb
sbb
sub
cwtl
add
loope
lcall
fldenv
rcrl
xchg
rorb
or
mov
mov
aad
mull
mov
mov
add
fiadds
xor
mov
lret
xchg
icebp
adc
add
pop
push
pop
fldenv
push
adc
mov
inc
shrb
int3
add
rcll
mov
dec
pop
test
adc
orl
inc
jp
popf
mov
adc
orl
fstpl
cs
mov
fs
mov
xor
ud2
xor
mov
movsb
adc
orb
or
fisubl
roll
mov
popa
or
xor
mov
mov
in
or
fs
inc
scas
fs
add
adc
insl
imul
lahf
and
xor
and
lods
call
sbb
shrl
test
gs
sbb
test
dec
mov
inc
mov
xor
lods
push
mov
cmp
lret
roll
in
subb
add
mov
cmpsl
xlat
scas
dec
xchg
adc
and
cli
or
or
and
add
push
pop
flds
je
or
cwtl
popf
movsl
inc
mov
jmp
pop
pop
add
xor
idiv
mov
aas
pusha
mov
out
movsl
insb
adc
sub
lods
push
pusha
add
mov
pop
lods
dec
cmp
movsl
decb
pop
clc
cmpl
push
sub
mov
out
dec
pop
inc
sub
mov
xchg
xor
rol
fistpll
mov
jns
pop
mov
xor
rclb
cwtl
jle
add
push
fsubrl
or
aam
mov
scas
pop
adc
inc
xor
aaa
adc
andb
sbb
sbb
mov
inc
pusha
test
jmp
lret
mov
outsb
pop
xchg
dec
push
nop
push
clc
add
aad
xor
fwait
in
mov
dec
adc
sbb
inc
dec
inc
jg
lock
fwait
add
sahf
dec
mov
cmp
int3
int3
xor
xor
dec
xor
pop
pop
dec
fidivrl
mov
mov
cmp
and
test
outsl
push
inc
in
push
mov
and
inc
mov
push
inc
adc
cmc
cwtl
nop
and
mov
js
es
aad
jmp
insl
add
outsb
cmpsb
inc
pop
pushf
mov
dec
inc
mov
aaa
adc
cmp
les
jae
sbb
lret
or
inc
pop
repz
cwtl
sub
loope
adc
repz
movsb
test
push
add
test
dec
cmp
push
mov
js
add
dec
jl
icebp
mov
rorl
dec
or
insl
xchg
aam
hlt
sbb
nop
mov
aaa
xchg
push
rolb
fisubl
imul
xchg
xchg
pop
push
in
out
or
and
mov
lods
inc
stc
mov
out
and
js
or
iret
sbb
push
dec
adc
sbb
test
mov
in
sub
addr16
pushf
and
test
scas
dec
data16
jge
fisubl
cli
stos
jno
dec
mov
popa
add
jae
movb
or
aam
or
xchg
bound
jnp
xchg
int3
loopne
xchg
add
scas
imul
xor
jns
push
jb
imul
push
xchg
sbb
pop
outsb
roll
jecxz
test
and
adc
test
mov
pop
lods
rcrb
sub
out
add
rcll
xchg
nop
mov
fcoms
nop
out
add
mov
push
jecxz
sahf
imul
js
mov
lods
or
or
mov
cmp
pop
and
mov
and
mov
leave
mov
outsb
mov
xor
mov
mov
sbb
xor
jecxz
add
and
popa
push
jg
pop
mov
loopne
xor
pop
or
pushf
and
cld
cmp
push
std
repnz
xor
dec
out
mov
nop
jnp
add
insb
cmp
jo
outsb
and
jne
mov
das
bound
rcll
xor
nop
fiaddl
das
push
cmc
or
nop
js
xchg
aaa
cs
fisttps
dec
push
add
dec
dec
jo
stc
outsb
cmp
inc
int3
jp
or
push
loop
movsl
jnp
xchg
dec
mov
leave
and
cltd
add
or
int3
loopne
cltd
lock
xchg
cmp
adc
icebp
xorb
pop
sbb
or
dec
rclb
ficoml
dec
add
adc
pop
jmp
and
je
pop
pop
rclb
cli
add
cli
outsb
lahf
jns
xchg
rorb
pop
test
and
sahf
and
insl
mov
pop
add
test
outsb
mov
int
lock
leave
sbb
test
fisttpll
dec
dec
sub
add
jmp
cltd
adc
add
push
inc
sarb
pop
add
push
sbbb
mov
and
add
lods
add
sub
lahf
add
mov
mov
inc
dec
loopne
cmovns
sub
jp
ret
stos
mov
add
jnp
push
nop
out
add
imul
mov
and
add
push
adc
inc
push
aaa
adc
nop
dec
inc
mov
adc
add
fwait
repz
mov
dec
out
cmpsb
in
add
test
int3
pop
int3
fcompl
jg
leave
popa
jp
test
cmp
mov
xor
sarb
adc
pop
scas
sbb
ja
inc
mov
sub
cmp
add
scas
fisttps
js
sub
mov
andb
test
or
sub
inc
cwtl
js
aaa
inc
rcrb
pop
popl
mov
jbe
fdivr
mov
cmp
repnz
mov
bound
xor
stos
mov
add
pop
sub
pop
add
pop
sahf
and
fs
pop
add
pusha
sbbb
int3
outsl
sub
and
jge
push
xcrypt-cbc
cmpsl
adc
xchg
imul
jo
adc
int
or
je
in
pop
imul
fbld
daa
fsub
pop
and
sub
in
pushf
sbb
cmpsl
pop
add
cmpsb
xchg
rcrl
lcall
mov
sbb
ds
dec
xchg
pusha
nop
inc
adc
pop
mov
cwtl
pop
jnp
mov
cmpsb
je
insb
sub
cwtl
add
out
push
adc
fimuls
cmp
sbbb
pusha
add
sahf
enter
rorb
mov
mov
sub
mov
jno
lods
data16
dec
addps
mov
push
jge
das
int3
sar
insl
mov
fs
dec
push
adc
test
inc
cli
fdiv
mov
les
and
inc
cwtl
push
add
cmp
mov
and
add
fdivrl
add
mov
xchg
add
adcl
cs
add
leave
setle
sbb
xchg
cmc
dec
jnp
cld
int3
sub
xchg
pop
jno
add
add
sub
in
ja
adc
fisubs
push
pop
and
and
mov
cwtl
pop
cld
inc
aas
xor
rclb
ret
mov
mov
inc
lods
inc
lds
inc
loopne
movsb
xor
pop
mov
rorl
cmp
mov
js
lods
add
push
sub
sarb
pop
add
imul
lea
ljmp
test
sbb
mov
cwtl
push
mov
xchg
jns
add
ret
pop
negb
arpl
stc
shlb
inc
cs
adc
push
lods
vmovhps
sbb
sbb
gs
and
add
mov
add
ret
ja
aas
push
pop
in
icebp
shr
sbb
adc
loope
cwtl
enter
push
bound
add
call
or
jl
inc
add
enter
pop
test
add
push
hlt
emms
add
cli
jnp
inc
imull
jge
fs
mov
mov
hlt
inc
pop
test
int3
or
ret
ljmp
and
and
out
add
push
in
push
mov
testb
sub
xchg
adc
bound
sbb
jecxz
cltd
add
cltd
pusha
add
ds
outsl
inc
jo
sub
lods
rol
adc
mov
inc
add
data16
mov
jns
mov
movb
icebp
outsb
call
shrb
jl
bound
pop
std
jns
out
cmpsl
in
fsubs
and
push
adc
sahf
and
loope
push
daa
sub
adc
jne
sbb
inc
scas
add
xchg
lock
dec
ds
xchg
xor
push
add
add
cmpsb
jo
negb
cld
call
xchg
mov
sub
pusha
mov
push
push
pop
daa
mov
adc
fisttps
jge
lock
je
push
jae
loopne
add
repnz
pop
and
fcomip
mov
cmp
cmc
insb
adc
mov
add
or
or
mov
js
call
in
jnp
xchg
fadd
add
pushf
add
xor
adc
repz
and
add
sbb
dec
pop
fldcw
cmpsb
pop
mov
xchg
clc
mov
mov
adc
and
fdivrs
adc
fadds
mov
repnz
xchg
xor
dec
sbb
sarl
movsb
or
clc
mov
dec
js
push
test
or
jl
jbe
add
imul
das
add
out
inc
jns
icebp
push
mov
xchg
inc
add
lret
shl
out
aaa
in
sub
inc
dec
aad
add
ljmp
movsb
loopne
or
mov
cmp
aad
mov
call
add
orl
loopne
cmp
or
xor
pusha
sub
popf
add
aad
lahf
adc
bnd
add
shrb
cmp
jno
or
cmp
mov
dec
add
test
int3
cli
adc
push
xchg
push
inc
add
push
mov
mov
rclb
xor
lds
cld
push
push
pop
nop
push
cs
xor
pop
inc
xchg
and
je
out
add
or
and
add
cmp
dec
dec
inc
shlb
rcll
mov
mov
adc
dec
enter
sahf
out
out
jge
bnd
lea
aas
arpl
cmp
mov
jno
jnp
dec
test
adc
mov
sqrtps
ds
add
add
cli
jmp
leave
sbb
push
xchg
jne
pop
js
mov
cltd
jl
incb
iret
mov
cmp
test
sbbl
and
inc
cmpb
cmc
mov
pop
les
mov
dec
fimull
add
jle
pop
cwtl
lock
enter
sub
adc
adc
mov
lahf
adc
ret
pop
pushf
mov
jo
xchg
js
insb
or
push
test
ja
mov
subb
arpl
jb
jno
push
ret
add
leave
ss
shrb
rcll
aas
mov
int
ret
mov
dec
loope
cwtl
andb
or
decl
jnp
mov
daa
mov
in
dec
mov
sahf
in
inc
pop
sbb
jmp
icebp
mov
pop
hlt
inc
repz
pop
out
add
std
cwtl
lahf
daa
cmp
jns
dec
loop
add
mov
movsb
shlb
xchg
aas
scas
std
jnp
pushf
lea
mov
dec
cltd
add
mov
cld
inc
mov
inc
lock
push
pop
or
push
mov
enter
mov
push
add
sbb
je
push
int3
cs
loopne
jno
fs
mov
add
leave
ljmp
add
ss
jnp
xor
fwait
movsl
add
scas
pop
xchg
lods
mov
cwtl
lcall
cmp
in
add
dec
out
clc
push
mov
pusha
nop
repnz
bound
orb
sbb
jne
add
xchg
sahf
jnp
dec
outsl
loopne
push
xchg
dec
sbb
mov
xchg
lods
enter
repz
add
dec
iret
or
push
mov
cmc
add
sub
add
ljmp
js
adc
push
icebp
je
push
fs
xor
xor
stos
inc
rorb
sar
mov
add
cmpsb
mov
cld
add
dec
jp
adc
hlt
lcall
ja
xchg
out
les
pop
push
lock
pop
out
shrl
dec
xchg
mov
mov
mov
jecxz
pop
fwait
in
and
dec
ja
mov
shl
sar
sbb
cltd
inc
push
lea
pop
mov
iret
mov
mul
sarl
lock
hlt
dec
lea
mov
out
jecxz
int3
and
lods
int3
sub
mov
jg
dec
inc
js
cmp
jl
add
jl
testb
dec
movsl
or
int
push
and
icebp
in
inc
mov
nop
adc
ret
scas
jmp
mov
or
mov
insb
lea
loope
cwtl
pop
ds
pop
cltd
mov
mov
adc
push
outsl
fmulp
bound
das
push
pop
addb
sahf
pop
enter
inc
mov
xor
pushf
test
mov
cwtl
dec
imul
or
mov
mov
and
mov
loopne
js
daa
lock
nop
mov
movsb
add
in
add
repnz
mov
push
sub
xor
cmp
pop
and
cmpsb
ret
fiaddl
stos
xchg
xlat
lea
mov
add
daa
xchg
mov
mov
fneni(8087
fdiv
cmp
data16
in
cmc
add
mov
mov
out
inc
mov
jge
push
outsl
xchg
sbb
pop
jb
jnp
mov
pop
psrlq
out
mov
enter
adc
dec
xorb
popa
jnp
enter
les
or
or
jmp
cli
aaa
mov
mov
test
clc
mov
test
call
pop
rolb
pop
shrb
mov
and
add
and
out
xor
and
xchg
inc
mov
mov
add
addr16
push
xchg
add
inc
daa
enter
jae
add
push
jge
loopne
push
mov
loopne
adc
popa
arpl
inc
jnp
insb
test
stc
inc
mov
push
adc
lcall
sbb
outsb
cld
pushf
fs
movsb
mov
add
std
add
call
add
mov
mov
lea
es
xor
test
adc
add
loope
cwtl
call
insl
add
adc
xchg
rcll
adc
or
loope
loopne
or
pop
mov
and
imul
pop
aas
pop
outsb
lock
sub
cltd
push
pusha
aam
inc
cmp
loop
scas
cmp
pop
test
ljmp
jl
outsb
push
xchg
lahf
xchg
mov
mov
clc
cmp
add
mov
ss
adc
push
lcall
in
stos
ja
push
xchg
add
jp
cs
fstpt
add
cld
xchg
inc
into
test
jmp
xchg
imul
out
ljmp
addl
and
shll
lea
xor
pop
xlat
pop
add
insl
int
inc
jecxz
btr
inc
leave
mov
jecxz
repz
bound
push
xchg
arpl
enter
xor
cmp
cmpl
xor
cmc
addb
int
lahf
push
jns
cwtl
adc
sbb
mov
lahf
icebp
add
gs
push
and
xchg
jecxz
or
out
add
aas
insl
iret
push
or
sbb
fildl
js
pop
xchg
xlat
into
les
mov
cmp
rcrl
mov
mov
ret
cld
add
out
fndisi(8087
pop
jecxz
mulb
and
adc
xchg
sub
in
int3
std
add
ret
xchg
sbb
mov
and
xchg
inc
jle
outsb
push
loope
sub
mov
pop
pushf
ss
inc
in
inc
sbb
out
enter
push
and
lock
cwtl
push
popa
mov
push
and
divl
aad
push
roll
push
and
xlat
sub
je
cmpsb
jl
sbb
dec
mov
mov
cwtl
sbb
arpl
rcll
adc
adc
mov
into
push
xor
add
shl
pusha
es
sub
dec
or
subb
jnp
mov
outsl
xlat
pop
jae
mov
push
inc
data16
cmp
xchg
ds
mov
pop
aam
rcrl
js
pop
xor
pusha
imul
mov
xchg
pushf
add
adc
popl
mov
pop
sbb
dec
insl
pusha
sub
add
dec
xlat
jecxz
sti
lods
pop
jnp
or
or
leave
sub
in
sbb
mov
xchg
adc
popa
in
cld
imul
and
imul
shl
mov
adc
xor
ficoms
rclb
or
or
push
mov
notl
popf
lcall
xor
push
leave
xor
add
int
fdivr
adc
outsb
mov
stos
xchg
rolb
jo
push
mov
shlb
cmp
jle
scas
cmp
sub
jne
sub
lahf
aam
fdivl
xor
xchg
sub
xor
push
adc
loopne
pop
test
inc
cli
xor
sub
cs
pop
mov
push
js
movsl
repnz
pushf
pusha
dec
mov
mov
add
xchg
sub
or
imul
into
pop
and
fiadds
jbe
inc
ds
xchg
stos
sub
das
xchg
and
pop
fidivrl
add
mov
mov
dec
xor
jbe
inc
lock
push
mov
add
call
leave
xorb
in
movb
dec
mov
imul
mov
jnp
insb
mov
pop
sub
fidivl
push
inc
jmp
xchg
add
jg
mov
cmpsl
mov
xor
jo
repz
outsl
jecxz
stc
pop
sub
inc
enter
inc
into
add
in
popa
jge
outsl
add
jl
das
test
js
xor
mov
fldl
daa
xor
cltd
pusha
lret
xchg
faddl
push
imul
shl
ljmp
xor
sbb
sbb
mov
xchg
cmp
xorb
loope
mov
adc
xor
loope
notb
mov
mov
xchg
add
outsl
pop
or
add
ficoml
daa
sbb
push
in
sbb
int3
pop
jae,pt
add
mulb
xchg
add
lods
xlat
mov
cmp
add
loope
popa
sti
aaa
add
sub
pop
push
mov
cmp
filds
pop
in
fisttpl
shlb
ds
fs
in
cmp
mov
cmpl
inc
icebp
arpl
outsl
lea
frstpm(287
lods
int3
xchg
inc
cmp
arpl
add
sub
jo
adc
cwtl
nop
fsubrl
ficomps
and
test
stos
add
push
leave
dec
jnp
jo
push
add
add
pop
in
lret
cmp
repnz
mov
xor
sahf
leave
xor
mov
sbb
inc
xchg
mov
nop
add
dec
sub
sbb
ljmp
xchg
mov
test
dec
add
in
in
push
pop
pop
fistpl
push
test
repz
and
scas
mov
fwait
hlt
mov
and
add
inc
jae
popa
fistpl
mov
cltd
cwtl
xchg
sub
je
lea
mov
lahf
xor
scas
mov
or
cltd
add
addr16
mov
add
dec
fadd
sbb
aaa
mov
fucomip
pop
ja
mov
add
in
pop
mov
mov
mov
fbstp
lock
pop
leave
jbe
inc
adc
push
xor
push
and
hlt
int3
mov
xlat
mov
add
mov
jbe
xchg
lahf
push
in
or
add
xchg
jnp
mov
addr16
lahf
add
in
dec
mov
xchg
mov
add
testb
outsl
push
iret
fcomi
add
cmp
orb
jg
add
das
fwait
out
clc
sbb
xor
adc
cltd
pop
and
inc
mov
mov
jl
pop
and
mov
movsl
lods
cmpl
pop
mov
mov
inc
jl
xor
fcmovbe
outsb
inc
dec
arpl
stos
lods
in
and
aaa
stc
xchg
dec
add
arpl
rcrl
daa
push
es
adcb
sub
sbb
or
mov
cwtl
sahf
movsl
xchg
push
cmpsb
addb
dec
jmp
sti
lcall
les
add
rolb
out
push
divb
lods
xchg
fcoms
cmp
lds
xor
and
mov
cld
addl
loope
fldt
sub
xor
add
push
push
testl
idivb
and
jo
sahf
dec
lret
add
sbb
xchg
dec
adc
cmp
xor
push
push
data16
or
rcrl
inc
mov
fisttpll
mov
mov
inc
or
lods
adc
xchg
lea
rcl
cmpsl
mov
fs
loope
repz
mov
imul
dec
sbb
subb
pop
mov
xchg
pop
roll
mov
cltd
out
xor
add
cld
xchg
stc
inc
nop
push
hlt
pushf
je
add
iret
dec
call
add
fcmovbe
add
out
xorl
jle
mov
lahf
add
and
cmp
mov
sahf
sub
mov
jno
rcll
pop
or
add
inc
es
cmp
fisubrl
ja
dec
in
adc
mov
pusha
sbb
mov
and
cmp
pop
aaa
or
je
mov
sub
js
cmpsb
je
cs
or
adc
loopne
mov
subb
add
adc
or
repz
push
shll
sbb
adc
int3
push
movsb
mov
cwtl
jmp
les
lods
add
mov
cmp
push
fcoms
pop
push
dec
rolb
out
dec
xor
mov
inc
pusha
das
add
popf
ja
xor
or
add
sub
je
scas
jno
jmp
js
xchg
sub
outsl
les
fisubrl
push
lahf
or
jnp
mov
push
fstpl
mov
lods
ret
cwtl
das
mov
cmp
das
cs
dec
test
inc
hlt
enter
mov
sbbl
push
add
xor
lods
push
test
xor
inc
fsubl
cmpb
xor
pop
daa
add
jns
stos
lock
jp
cmpsb
xchg
subl
mov
divb
add
push
xchg
xor
call
pop
sahf
inc
iret
outsl
mov
rcrb
test
jae
inc
mov
dec
add
je
adc
xor
mov
push
mov
pop
xchg
call
push
fists
jbe
cwtl
jmp
fildl
inc
nop
pop
lods
int
js
leave
push
add
cmp
orb
mov
add
addr16
loopne
xchg
push
hlt
dec
add
dec
mov
adc
add
pop
dec
int
repz
cs
sbb
pop
orl
mov
fwait
push
andl
out
test
nop
pop
adcl
and
dec
imul
jnp
cwtl
mov
lahf
adc
filds
xchg
stos
sbb
dec
and
push
scas
and
and
mov
mov
adc
jl
inc
push
push
cmp
enter
add
xor
pushf
inc
xor
inc
clc
hlt
and
xchg
jg
les
shl
rorb
mov
adc
add
lahf
xchg
xchg
mov
or
fcomps
cld
dec
xchg
xchg
push
je
les
in
int3
mov
jmp
movswl
push
pop
dec
mov
adc
and
pop
mov
xor
and
jmp
pop
or
mov
jg
mov
imul
mov
ret
sbb
leave
icebp
aad
call
mov
mov
mov
xchg
hlt
push
xchg
add
jb
add
les
lahf
data16
and
neg
pushf
inc
lea
in
dec
leave
add
aas
sbbl
push
repz
std
pushf
rclb
xor
or
popa
aam
add
aad
or
jl
mov
mov
in
addr16
and
inc
xchg
xchg
add
pusha
xor
inc
or
in
mov
add
pop
inc
lods
xchg
outsl
mov
dec
cmp
in
add
mov
es
xchg
ja
and
lock
rorl
push
out
sbb
lea
sbb
int3
mov
insb
les
cmp
movsb
popa
and
sbb
je
lock
cmp
mov
ret
adc
jne
inc
lahf
and
add
rol
test
dec
add
dec
repnz
ficoms
jp
mov
jnp
dec
jo
jo
cmp
out
in
pushf
loop
fwait
testb
fiadds
call
push
xor
xor
js
pop
dec
in
lahf
cmp
cmp
sbb
cltd
jo
mov
mov
jbe
sarb
xchg
add
adc
sbb
cs
push
add
inc
in
add
stc
and
rolb
add
shlb
fcmovbe
movsb
adc
adc
insb
sbb
call
sub
xchg
and
lock
jl
jnp
lods
repz
push
dec
test
push
and
add
negb
or
cmp
add
lock
mov
popf
and
test
jae
addb
ds
rcrb
mov
ljmp
mov
inc
ret
mov
mov
test
jle
pop
fsubl
pop
jmp
js
adc
notb
outsl
push
scas
mov
dec
add
cmp
adc
pop
pop
jg
clc
sbb
sbb
adc
xor
out
scas
add
adc
mov
loopne,pt
lock
out
dec
sbb
rcll
lahf
clc
cltd
pusha
push
outsl
and
dec
lcall
addr16
lock
push
mov
mov
push
add
mov
mov
push
inc
mov
add
incb
or
popl
add
dec
dec
add
clc
pop
int3
ja
fimull
shl
inc
mov
insl
adc
sub
addb
das
inc
popa
iret
jns
add
xor
out
andb
xchg
int3
and
add
fldl
push
add
cli
icebp
in
daa
in
inc
inc
xchg
add
and
fistps
es
and
xchg
test
movsb
aas
testl
adc
jnp
and
push
test
dec
stc
cmp
dec
xchg
gs
xor
cmp
pop
subl
pop
add
ret
insl
add
in
sahf
leave
pushf
jl
and
sarl
subl
sbb
dec
push
clc
push
jg
popf
jecxz
jb
or
mov
sbb
lahf
in
pop
ficomps
insb
js
xlat
mov
jnp
mov
jbe
pop
orb
add
hlt
je
pop
jge
xchg
and
pop
xor
in
cmp
sbb
cmp
cwtl
dec
xor
lock
and
std
loopne
jmp
je
rcrb
es
adc
xor
and
mov
mov
cmp
mov
inc
jp
lcall
adc
imul
cmp
pop
mov
roll
pop
call
imul
dec
adc
sub
pop
popf
inc
and
lret
repnz
dec
popa
add
jns
clc
push
mov
mov
in
xor
les
ljmp
adc
mov
xchg
adc
test
add
push
aas
or
xchg
add
out
pop
mov
xchg
cwtl
fmuls
add
outsl
xchg
xchg
sbb
sarb
add
sarl
dec
add
pop
aad
mov
andl
or
popa
sti
mov
adc
ds
push
loopne
sbb
inc
icebp
inc
test
inc
mov
mov
sub
cli
xor
jb
push
sbb
mov
add
jl
dec
adc
dec
pop
adc
xchg
lock
xor
mov
je
add
or
shl
js
out
test
xor
aad
add
mov
cmp
call
xorb
add
jns
pusha
inc
pop
jmp
mov
cltd
fistpll
ds
push
out
mov
test
dec
mov
xchg
stos
or
adc
add
push
add
jb
mov
mov
adc
and
insb
cld
dec
sbb
xchg
adc
cltd
add
add
mov
cwtl
xchg
cwtl
test
sub
mov
lods
xor
stc
push
or
sub
je
sbb
loop
pop
cld
mov
adc
sbb
lods
addl
pop
cmp
sbb
pop
xlat
push
lretw
pop
cwtl
inc
out
loop
js
add
pusha
fdivl
imul
adc
movsb
cld
pop
inc
pusha
ljmp
iret
dec
cld
dec
addl
arpl
mov
or
orb
rolb
mov
js
jbe
inc
sbbb
pop
das
lods
rcrl
cmp
cmp
cmp
pusha
jl
inc
add
push
pop
or
adc
mov
pop
xchg
test
bound
shrb
cmc
add
out
sub
nop
add
or
push
push
push
movsb
imul
add
add
mov
cmpsl
dec
mov
pop
loopne
into
mov
in
test
cltd
jns
and
out
or
pushf
pop
fsubrp
jmp
sub
add
orb
add
cli
div
dec
jns
xchg
jo
xlat
mov
cmp
nop
mov
mov
fiadds
cltd
mov
cmp
pop
cmp
and
hlt
shrb
fsts
in
inc
jb
adc
fstpt
fldcw
out
pop
push
dec
lcall
sbb
and
cmp
mov
jmp
add
mov
enter
add
nop
mov
and
add
mov
jp
pop
ja
cmp
jge
sahf
mov
or
rcrl
lret
lcall
cld
mov
in
in
mov
mov
jae
movsb
adc
mov
clc
pusha
fdivrl
loopne
add
push
pop
stc
or
sub
stos
les
nop
and
outsl
xchg
call
sahf
and
pop
jg
sub
mov
in
aad
cwtl
test
fmul
push
xchg
mov
sbb
in
mov
clc
mov
rcl
mov
push
xchg
inc
or
xor
stc
cmpsb
pop
jl
popf
adc
xor
addb
out
insl
stos
add
xor
cmp
pop
dec
mov
adc
sub
fwait
add
or
cmp
rol
jne
sbb
dec
mov
or
xchg
fsubrs
es
push
jno
mov
add
daa
sub
add
mov
lcall
add
icebp
mov
xor
lcall
mov
icebp
jno
add
in
sub
addr16
mov
mov
js
mov
loop
popa
cwtl
mov
push
les
ds
mov
and
mov
xchg
adc
jmp
mov
rolb
xor
xchg
ficompl
add
sub
push
dec
pushf
dec
aaa
jmp
push
adc
add
ljmp
cld
mov
or
data16
jno
roll
add
ljmp
cltd
addr16
add
int
pop
jno
pop
inc
pushf
mov
subb
mov
inc
aas
push
loopne
insb
dec
push
popf
push
cmp
imul
test
dec
mov
mov
testb
std
push
mov
inc
pop
add
adc
or
jns
adc
mov
testb
cli
add
js
add
mov
sub
das
cwtl
ds
aad
inc
scas
cmp
movsb
adc
dec
push
insb
and
add
scas
adc
mov
nop
sub
sub
xor
mov
mov
loope
dec
add
dec
popa
mov
test
pop
dec
push
lock
scas
in
repz
add
clc
mov
add
mov
test
sbbl
fcmovnu
sub
xchg
or
add
mov
dec
pop
mov
and
xor
jl
pop
mov
les
mov
push
dec
push
adc
add
inc
jno
imul
inc
mov
add
adc
outsb
int
cmp
iret
insl
lcall
add
sub
mov
lods
add
xlat
stc
enter
add
mov
repz
int3
pusha
dec
hlt
ds
xchg
popf
sub
rcrl
enter
repz
or
sbb
sbb
test
or
jmp
add
cwtl
jnp
leave
xchg
xchg
sub
mov
cmpsb
test
and
and
aaa
pop
aad
or
in
add
out
add
lods
shl
cli
xchg
dec
insb
cmp
test
lret
nop
rorb
cltd
adcb
jno
fadd
mov
pop
call
inc
fcmovb
add
xor
jp
adc
push
lea
push
call
fstpl
pop
cmp
inc
sahf
out
pusha
jecxz
popl
and
add
xor
inc
iret
mov
add
shrb
mov
loope
xchg
or
or
aad
enter
fs
enter
cmpb
rcr
push
mov
aad
add
inc
in
imul
dec
loopne
lods
mov
fdivl
xchg
ret
adc
incb
lods
pop
mov
mov
dec
jo
lds
repz
mov
jo
repnz
loop
sub
repz
sbbb
add
popa
notl
sub
mov
jg
fimuls
lret
ss
pop
scas
jno
xor
add
lods
icebp
hlt
or
jnp
mov
xor
lock
xor
js
faddl
addr16
lock
test
sarl
lds
mov
movsl
push
xchg
dec
mov
jle
aam
hlt
incb
xor
gs
cmp
es
dec
cmp
add
mov
iret
lcall
cmp
sti
add
mov
loopne
in
sub
cwtl
shlb
dec
ret
out
add
push
stos
mov
dec
loope
orb
jp
pop
int
push
test
or
xchg
push
push
out
movsl
inc
andl
push
int
mov
in
aas
and
les
sbb
mov
add
cmpsl
sbb
jne
fs
add
arpl
popf
jbe
sti
dec
mov
insl
ljmp
add
mov
mov
mov
popf
insl
pop
call
insb
inc
mov
jo
out
fildl
pop
daa
sub
add
sbb
mov
mov
adc
cmp
cwtl
leave
push
pop
inc
loopne
and
push
and
sbbb
add
sbb
cmp
mov
mov
adc
inc
icebp
nop
inc
sub
pop
clc
int3
add
dec
das
xchg
in
adc
add
sahf
and
adc
adc
sub
lcall
mov
jl
sahf
cmpb
dec
add
imul
xchg
lock
xchg
sbb
push
inc
enter
add
test
sbb
loopne
sub
mov
sub
push
lock
dec
fildl
outsl
cmpsl
ja
shll
mov
xchg
mov
cwtl
pop
in
cmp
mov
cmpsb
jle
jo
fcomi
ret
jl
mov
jb
mov
into
pop
fstpl
sub
cld
inc
daa
jmp
and
popf
sub
or
test
insb
or
xchg
cmp
shl
sbb
mov
and
or
js
pop
push
push
lods
push
sbb
mov
jbe
add
sbb
test
dec
cmp
pop
pop
aad
iret
xor
ror
mov
mov
into
std
mov
jnp
mov
jbe
or
mov
jle
add
dec
cmp
push
fmul
ljmp
sbb
mov
add
push
pop
xor
adc
lods
mov
movsb
sbb
rcrb
add
aam
jbe
scas
test
jno
push
push
cwtl
out
mov
mov
movsl
push
xchg
fs
add
out
sti
sbb
enter
xchg
shll
shll
cwtl
push
mov
pushf
dec
cmpsb
add
sub
enter
push
cmp
test
sbb
fiaddl
ret
jle
sbbb
ds
add
cld
daa
fidivl
call
mov
js
mov
pop
movsb
mov
or
dec
or
fs
movsl
fnsave
enter
dec
pusha
std
rol
xchg
and
jo
add
out
or
xor
add
jge
sahf
sarb
in
ss
dec
add
and
pop
and
cld
pop
cmp
add
call
pusha
lock
das
pop
xchg
push
loopne,pt
sbb
sbb
ljmp
ret
rolb
jge
mov
inc
outsb
pusha
xchg
add
ljmp
push
inc
inc
in
out
add
push
jb
add
testb
inc
fsincos
imul
sbb
xchg
cwtl
add
rcr
mov
jmp
sbb
popa
push
out
push
lea
add
inc
fbstp
cmp
leave
xor
decb
or
adc
in
xor
sub
lock
cld
hlt
add
pop
fidivl
cmp
mov
sbb
xchg
inc
push
xchg
push
adc
inc
in
add
inc
adc
pop
cmp
lock
xor
xor
cmp
xchg
movsl
add
lret
mov
pop
loopne
roll
es
das
mov
jns
xor
mov
adc
xchg
push
push
mov
pop
and
push
test
in
lea
aaa
les
outsl
xor
mov
mov
or
xor
adc
push
negb
ret
decl
sbb
out
mov
sarl
lret
loop
shrb
cltd
ret
int
subl
shrb
ds
push
adc
fldt
in
or
push
lcall
cld
add
push
xor
xchg
xchg
xor
out
add
cwtl
add
inc
adc
adc
dec
fucomi
mov
mov
push
mov
pop
push
add
lds
or
sbb
inc
jle
mov
pop
test
test
test
cmp
or
cwtl
std
cmp
and
xchg
cld
int3
sub
scas
cs
mov
dec
add
sbb
nop
push
aaa
lds
nop
stc
mov
jp
repz
aad
add
andl
je
int
addr16
dec
fcoml
add
xchg
push
fs
push
sahf
push
adc
sbb
and
pop
add
test
cld
push
sti
in
daa
iret
std
xchg
nop
outsl
loop
subb
out
xor
xchg
push
xchg
cmc
sbb
jns
push
xchg
jo
jb
mov
loope
sbb
call
mov
das
repnz
add
repz
jp
add
push
xchg
pushf
je
mov
jno
nop
ret
daa
sti
push
arpl
pop
and
sbb
lahf
les
adc
add
xchg
ja
sub
clc
push
rcrb
mov
xchg
mov
divb
adc
jmp
rcll
cwtl
and
mov
sbb
lods
sub
add
scas
lea
out
sbb
in
xchg
dec
sub
jno
idiv
aas
add
in
out
les
lret
jmp
stos
add
xor
cmp
lret
sub
outsl
xor
dec
xchg
jae
faddl
aad
and
out
cmp
or
inc
lds
insb
filds
sbb
movsl
lret
xchg
sub
inc
add
add
nop
je
mov
movsb
or
cld
andl
or
popf
mov
sbb
jp
outsl
shr
aas
jnp
add
and
mov
addb
inc
cwtl
add
vmulsd
outsl
jo
bound
sub
lcall
pop
push
aaa
iret
test
rcrl
jmp
mov
xor
inc
lock
nop
pusha
test
dec
add
sub
lea
pop
into
mov
add
adc
adc
lret
scas
jnp
add
fs
mov
and
jmp
xor
loop
sub
push
add
test
inc
sbb
jp
add
aam
pop
adc
or
pop
and
loop
jl
inc
jb
in
sub
out
pop
out
jg
sti
sub
sbb
mov
xchg
cwtl
jo
scas
shr
xor
jb
int
jle
push
sub
lcall
mov
add
cwtl
stos
aad
scas
push
cmp
sbbl
and
sar
adc
aad
lods
jno
mov
jae
lds
jl
data16
cs
add
aad
xchg
xchg
lods
stos
daa
mov
push
and
xor
cmp
push
data16
sti
add
or
stos
sub
inc
xor
and
adc
add
lahf
stos
dec
dec
adc
push
add
subl
lock
fnop
mov
je
divl
js
add
test
pop
sbb
dec
gs
mov
add
mov
loope
rcr
test
mov
xchg
int
inc
nop
test
pop
pusha
sub
xorb
mov
sti
mov
out
xchg
jae
rclb
repz
mov
add
rcl
jl
jge
sub
add
stos
rcll
mov
add
insb
pop
adc
dec
in
add
std
jge
and
fcomps
aad
aam
mov
xor
pop
test
cmp
stos
pusha
mov
add
adc
cmp
clc
and
cld
and
dec
sbb
add
jo
dec
cmpsb
je
jb
add
std
mov
enter
out
pop
add
jmp
mov
inc
pusha
mov
pop
xor
ja
les
loop
out
in
dec
arpl
sbb
in
fs
test
idiv
fildl
hlt
xchg
iret
mov
inc
cwtl
les
movsl
push
sahf
incl
test
sbb
pusha
aam
pop
imul
test
sbb
dec
mov
stos
jo
mov
sbb
push
andl
sarl
adc
sbb
popf
call
mov
mov
dec
movsb
add
xchg
push
adc
pop
push
ss
mov
inc
cmp
jle
adc
iret
or
cmp
mov
pop
mov
leave
add
sbb
push
xchg
into
push
outsb
jp
pop
leave
ret
nop
mov
fcomps
mov
xchg
jle
fisubs
or
test
inc
mov
mov
xor
add
cld
imul
rcll
in
xor
leave
push
movsl
cmp
sbb
jo
cmp
mov
add
out
add
lahf
mov
adc
test
adc
fistpl
pusha
add
neg
push
call
in
scas
xchg
test
add
jmp
xor
lock
movsb
lock
push
pop
subb
mov
enter
xor
call
add
add
add
xchg
movups
push
and
inc
push
inc
mov
int3
dec
lods
mov
mov
mov
fisubs
push
add
xchg
cld
add
pop
test
pusha
xor
or
push
dec
fiadds
dec
sbb
pop
add
out
mov
jge
push
jae
in
mov
xchg
pop
jb
sbb
clc
jae
pop
and
xor
into
subl
daa
push
push
dec
dec
jge
sub
clc
add
push
add
xor
call
std
and
and
sub
popa
or
xor
add
hlt
xor
fisubl
add
int
xchg
mov
repnz
in
icebp
jg
add
jmp
sbb
dec
test
sbb
or
and
mov
nop
sub
fwait
mov
fcompp
add
xlat
scas
push
repnz
lods
xor
ror
gs
add
dec
cmp
mov
cwtl
push
jae
push
mov
or
pop
loope
add
test
adc
sbb
and
xchg
mov
jle
lcall
lahf
cmp
jp
mov
xchg
test
in
outsl
cwtl
inc
jecxz
dec
pop
pop
xchg
add
push
add
cs
pop
add
ds
add
sbb
sbb
loopne
orl
jb
outsb
loope
test
push
push
fnstsw
jp
cmp
mov
test
inc
pop
lahf
sbb
mov
push
or
jae
and
stos
insb
add
dec
lods
cmc
rorl
push
adc
inc
add
mov
push
mov
leave
mov
dec
xchg
mov
cmp
in
fcmovne
xacquire
dec
jo
loopne
xchg
mov
and
xchg
xchg
add
aaa
andl
cvtpi2ps
adc
add
push
or
xchg
xchg
inc
outsb
subb
test
add
inc
sbb
mov
jbe
add
daa
bound
mov
xorb
inc
xor
sub
adcb
add
push
stos
popf
mov
pop
movsb
dec
add
cmp
lret
xchg
test
mov
test
rcrb
sahf
sbbb
ljmp
xchg
lahf
fucom
pusha
dec
mov
mov
jo
popf
add
es
xor
add
push
sub
jae
add
cmp
scas
je
and
cmp
cltd
ja
mov
das
ret
in
mov
xor
sbb
lahf
ss
inc
rolb
lods
sbb
or
inc
test
adc
negl
int3
inc
test
lods
sub
mov
xor
incb
adc
cmp
add
and
sbb
or
pop
sbb
hlt
outsl
pusha
xor
sub
or
sti
repnz
decl
add
xor
addb
leave
popf
xchg
jb
lea
lret
add
pop
insl
xor
test
add
jae
and
and
sbb
adc
add
mov
subl
and
arpl
loopne
int
aas
push
xor
js
xor
scas
mov
mov
push
ficompl
aaa
jle
mov
cli
test
cmc
lds
sub
mov
cmp
xchg
outsb
push
mov
or
lcall
cmp
cld
and
das
sbb
cmp
repnz
cmp
out
fwait
sbb
jmp
ja
sbb
push
hlt
lahf
rorb
add
fisubl
inc
push
fadds
mov
adc
adc
cld
shlb
int3
mov
xchg
out
adc
and
cmp
xor
jo
sahf
enter
add
popf
dec
lahf
xchg
dec
add
jne
cmp
es
xchg
push
loopne
test
nop
sub
push
push
fs
insb
ja
add
sbbl
stos
add
les
dec
and
mov
shl
push
in
popf
dec
movsl
inc
je
ss
sahf
call
push
add
aad
xchg
nop
cmp
enter
ljmp
dec
pop
pop
dec
cmpl
nop
inc
mov
adcb
insb
out
lock
mov
sbb
mov
pop
ret
push
push
inc
loop
mov
mov
mov
or
aam
xchg
adc
addps
inc
and
jae
add
xor
clc
test
lret
dec
shlb
xchg
lds
int
divb
add
addb
push
xor
fsubrs
add
imul
add
dec
xor
and
in
dec
iret
cmp
mov
fst
pop
out
xor
outsl
and
xchg
dec
and
rolb
xchg
fs
adc
or
dec
xchg
or
jmp
cmp
or
lret
mov
mov
lcall
add
mov
fadd
mov
dec
push
cld
shl
or
in
jno
add
imul
pushf
movsb
push
xchg
popl
add
mov
inc
cmc
scas
test
mov
push
mov
call
push
fxch
xor
ret
call
sub
jle
scas
enter
push
inc
mov
xchg
lcall
loop
xchg
repnz
fisubs
xchg
add
shl
adc
pusha
jmp
scas
sub
daa
es
test
add
sub
arpl
pop
push
push
xchg
aam
mov
les
js
mov
jo
cmp
pop
out
xchg
hlt
mov
dec
shrl
adc
out
ljmp
xor
scas
cmp
cwtl
fistpl
cmpsb
and
in
sbb
cmp
lods
movb
push
fidivl
rcr
arpl
pop
ja
add
pop
sbb
js
mov
in
inc
cld
aaa
mov
call
cmc
sub
add
js
mov
or
out
xchg
test
adc
hlt
sub
loopne
in
add
test
repnz
push
stos
mov
adc
adc
sti
mov
das
add
bound
push
sbb
sub
xor
xor
data16
push
and
mov
add
xchg
outsb
loopne
fildl
jns
iret
cli
add
aas
adcb
stos
push
leave
push
pusha
shlb
add
fldt
and
stc
adc
je
sub
adc
sbb
pop
mov
xchg
dec
pop
rolb
into
jp
mov
push
andb
dec
addr16
adc
xchg
in
jns
dec
mov
add
jle
lret
sub
add
mov
cmp
lea
add
aad
ret
sub
sbb
pop
sub
imul
push
push
xchg
or
std
or
add
xchg
jne
pop
pop
pop
push
add
pushf
mov
or
imul
or
dec
add
gs
mov
push
xlat
nop
sub
push
and
add
push
data16
xor
pop
mov
and
hlt
inc
add
mov
jo
lock
es
sbb
inc
adc
sbbl
lods
dec
mov
add
cli
aas
ja
push
sub
lcall
pop
add
out
sbb
out
add
shl
insb
cld
cmpb
test
lods
jmp
adc
das
xchg
push
jae
push
shlb
adc
clc
xchg
pop
jo
aaa
cmpsl
xchg
sarb
hlt
pushf
data16
xor
add
jle
add
sub
push
jl
sbb
imul
rcr
cmp
and
cmpl
mov
cmpb
dec
je
add
push
mov
mov
or
and
loopne
loopne
movb
lods
or
and
lods
lahf
pop
lea
push
mov
sti
pop
push
inc
add
stos
push
imul
mov
or
inc
imul
dec
sbb
mov
xor
xor
sub
adc
fmuls
dec
imul
push
subb
add
push
push
popw
or
jne
jno
lds
fadds
rorl
pop
add
mov
ror
sub
clc
test
sbb
xchg
vmread
sar
xchg
int
cld
xchg
aad
sub
in
mov
mov
and
pusha
sbb
out
sarl
lods
gs
jbe
mov
insb
repnz
sbb
add
in
mov
movsb
faddl
mov
cli
xchg
add
filds
enter
mov
flds
inc
cld
or
push
add
lcall
add
sub
loop
out
sbb
lret
pusha
inc
popa
mov
cmp
stos
xchg
adc
in
nop
lahf
nop
dec
or
jle
orb
cmpl
and
cltd
add
inc
push
nop
inc
sbb
add
and
cmp
es
push
stos
lahf
jg
mov
cmp
add
jns
aaa
xorb
popa
icebp
jmp
cmp
pop
adcl
jmp
loopne
add
stos
sarb
fs
add
dec
jns
dec
xchg
lds
test
testl
jl
cmpsl
iret
mov
cmp
jge
lds
jns
out
cmp
jmp
xor
xchg
out
add
aaa
int
bound
pusha
clts
cli
das
into
add
mov
push
add
add
fwait
in
dec
mov
js
insl
loope
cld
es
add
or
xor
mov
jecxz
repz
mov
jp
add
mov
movb
fdivs
ret
add
push
mov
repz
insl
mov
ds
clc
ja
sbb
sbbb
repnz
clc
stc
or
addl
insb
pusha
divl
mov
mov
aaa
lret
pop
js
enter
fdivs
add
lock
sbb
push
add
sbb
jge
push
data16
jl
cmp
lahf
cmpsb
jge
mull
sub
imul
test
lahf
inc
dec
add
adc
in
aas
add
cmp
loop
adc
cmpb
lcall
cld
rorl
pop
dec
rolb
pushf
std
xchg
sti
outsl
loope
je
clc
movsb
add
jbe
jl
fldcw
aad
add
and
xchg
shll
mov
leave
adc
add
dec
gs
movups
push
aad
inc
lock
pushf
pop
add
adc
repnz
ror
inc
xlat
adc
xor
adc
sahf
xchg
fsubs
inc
or
mov
or
inc
fbstp
mov
cmp
cmp
mov
push
push
add
lds
and
push
lret
add
loope
fadds
add
cs
xchg
adc
sbb
sbbl
mov
sbb
stc
pop
push
and
mov
inc
pop
shrl
add
pop
adc
cmp
test
std
add
fadds
cld
in
popa
push
stc
mov
push
push
pop
push
adc
xor
add
add
add
add
jecxz
hlt
out
or
xor
jo
stos
pop
adc
sbb
adcb
les
inc
hlt
adc
mov
lds
xor
addl
inc
clc
pushf
and
pusha
movsl
sbb
lds
jle
aad
adc
fadds
outsl
lock
adc
mov
and
arpl
push
ljmp
test
add
push
mov
adc
mov
call
mov
sbb
mov
roll
xlat
arpl
shrb
xorb
out
nop
clc
add
sbb
out
push
cmpsb
movsl
movb
test
sbb
out
icebp
movhps
cmp
add
push
mov
dec
int3
xchg
adc
add
or
jp
mov
adc
adc
cmp
daa
loopne
pop
les
xlat
insl
loop
shll
add
imul
and
sub
mov
lret
jo
scas
mov
shl
rcr
cmpps
inc
cmpsb
lods
push
xchg
das
mov
pop
fcomp
jns
add
scas
popa
lds
out
fnstsw
lahf
push
xchg
cmpb
sbb
dec
push
push
call
mov
xor
xchg
dec
and
cmp
sbb
xchg
push
dec
push
scas
and
pop
inc
mov
add
xchg
xor
ret
pop
mov
inc
sub
adc
add
es
cmp
ds
fsqrt
xchg
adc
outsb
adcl
sub
insb
adc
dec
faddl
dec
add
pop
inc
insb
add
cli
les
add
je
adc
popw
dec
xor
push
pusha
add
inc
mov
jg
roll
pop
xor
adc
mov
dec
mov
mov
adc
and
pop
adc
leave
jmp
iret
add
dec
pushl
cmp
cs
lods
dec
rclb
hlt
inc
add
cmpsb
pop
les
and
lods
or
lret
push
pop
loop
nop
xchg
add
sbb
jo
cwtl
js
xchg
pop
add
pop
movsl
or
push
sahf
ret
incl
xchg
lods
mov
enter
mov
mov
cmp
jmp
ret
add
sub
lahf
js
cmpsl
push
mov
lret
cltd
xlat
mov
movsl
out
adc
add
mov
imul
xor
inc
add
int3
jle
push
jge
icebp
mov
lea
cmp
addb
push
mov
or
out
xlat
jne
idivl
add
xor
add
outsl
cmp
cld
mov
jb
cmp
pop
aas
arpl
ljmp
cmp
stos
ds
pop
mov
dec
sbb
and
jl
in
test
out
inc
adc
or
sbb
ror
mov
cld
adc
xchg
push
push
mulb
popf
sbb
in
sub
pop
sti
push
lods
or
and
fadds
push
sub
in
shll
int
jns
mov
in
mov
cmp
lahf
push
addr16
add
dec
fisttpll
dec
inc
sarb
rolb
xchg
repz
ficomps
nop
add
adc
add
xchg
and
cmp
xlat
in
mov
inc
mov
mov
in
add
mov
cli
add
and
js
bswap
flds
lea
sub
mov
rolb
mov
add
dec
add
or
pop
add
jnp
add
test
or
add
jo
mov
addr16
xor
xor
inc
testl
mov
loope
es
mov
cmp
sub
pop
pop
cmp
shl
int
add
scas
dec
cmpsb
add
xchg
out
mov
fistps
clc
pop
ss
adc
add
aam
fadds
add
adc
jp
add
in
sub
push
mov
jbe
add
or
test
mov
sub
adc
loopne
data16
add
inc
sub
jb
add
pop
les
les
dec
arpl
add
xor
xor
fimuls
es
int3
mov
loopne
pop
cmp
insb
xorps
leave
cmpsb
andl
je
jo
pop
mov
and
sbb
mov
xor
cmp
add
sarb
or
movsl
mov
pop
cmp
xor
int
ret
sub
pushf
rolb
test
adc
movsb
or
cmpsl
dec
mov
aas
jmp
cmpb
lret
xchg
and
sbb
into
mov
add
mov
mov
add
rcr
in
add
arpl
in
xchg
cmpsl
lea
hlt
mov
jbe
lods
push
sbb
shll
cmp
sbb
pop
rolb
sahf
sub
add
cmp
jle
lahf
pop
jmp
sub
jnp
stos
mov
jne
cmp
je
cmp
sub
js
sbb
mov
call
pop
paddsw
add
rol
es
rorb
add
or
rorb
or
out
loopne
enter
add
or
mov
push
add
mov
sub
sti
loop
cmp
out
push
pusha
mov
or
push
pop
jns
sbb
mov
pop
sbb
jle
das
sub
bound
xchg
sub
adc
inc
icebp
push
mov
movsl
jmp
jne
mov
jo
scas
outsb
push
push
add
or
sti
add
in
jo
add
xlat
push
and
xchg
rcrb
add
cli
mov
mov
inc
fs
out
lcall
add
dec
jne
mov
pop
cmp
jecxz
pop
iret
out
sub
lock
jle
lahf
add
or
push
test
ja
mov
or
and
add
andb
sub
das
aas
jp
pop
ja
or
dec
jecxz
andb
mov
and
cmp
out
cs
ja
movsb
add
scas
mov
in
stos
leave
cwtl
fiaddl
loopne
clc
inc
pop
pop
xorb
mov
pop
adc
add
pop
sbb
fistps
adc
paddw
sti
out
subb
jo
or
rorb
and
sub
xor
out
cmp
add
dec
loop
inc
jnp
das
enter
sub
inc
test
or
mov
adc
jge
in
notl
mov
sbb
lock
addr16
es
les
aaa
dec
xor
or
add
inc
or
cmpsl
pusha
add
push
xchg
lock
sti
xchg
push
sbb
sub
add
cmp
add
mov
push
popl
test
ret
outsb
add
mov
add
lods
jno
push
nop
icebp
lret
loopne
sbb
jmp
imul
push
jnp
aas
sub
pop
mov
add
movsl
sbb
incl
jo
mov
fucomp
or
mov
add
lret
xchg
ficoms
addl
loope
insl
push
or
mov
pop
outsl
scas
xchg
mov
or
addr16
mov
pop
in
add
dec
mov
int3
fstp
add
jne
in
shlb
test
inc
arpl
pop
ret
stos
das
xchg
push
or
pop
mull
cmp
sbb
dec
mov
in
repz
add
shll
aaa
faddl
jmp
dec
xchg
loopne
add
jl
xchg
push
adc
adc
xchg
fs
push
dec
faddl
cmp
fwait
out
aam
push
or
sbb
xchg
xor
or
out
rcl
mov
leave
or
xchg
adc
faddl
imul
dec
add
jae
xor
gs
add
sarl
dec
lcall
pop
movl
mov
add
lcall
and
fdivl
pop
add
push
fcoms
cmc
add
inc
nop
scas
test
pop
xor
jne
sub
add
imul
pop
lret
loope
jns
nop
or
stos
cmpsb
add
inc
enter
add
in
push
jnp
add
cmp
jo
add
jbe
addb
fisubrs
repz
jp
add
in
adc
pop
shrb
adc
add
sub
pop
jbe
enter
mov
movsb
mov
add
dec
fs
mov
add
enterw
adc
mov
add
hlt
fwait
jne
loop
orb
xor
popa
lcall
mov
addr16
pop
mov
int
cld
jno
cmp
sub
pop
pop
add
movsb
hlt
pop
outsl
test
add
aas
imul
iret
jbe
outsl
adc
jns
mov
and
stos
jl
add
jl
mov
push
xor
or
nop
rclb
mov
rclb
cmp
sbb
repz
sbb
add
into
lea
mov
aad
or
movsl
push
inc
andb
call
inc
mov
pusha
clc
popa
mov
or
jnp
outsl
add
ljmp
shrb
fmull
scas
lea
out
loopne
jae
out
lock
mov
mov
push
pop
call
stc
add
add
sbb
outsl
cwtl
orb
cmp
and
add
mov
stos
inc
in
in
mov
add
in
sbb
cmp
mov
inc
jge
sub
jo
add
jne
push
or
dec
sti
cmp
or
dec
dec
adc
mov
xor
aad
push
xchg
movsb
decb
mov
inc
in
xchg
add
jno
mov
push
sbb
cmp
jo
gs
mov
adc
push
lahf
pusha
fnsave
jle
cltd
mov
or
inc
inc
add
je
sbb
es
fildl
mov
jp
and
pop
mov
mov
decl
and
gs
push
out
aaa
cmc
sti
add
nop
dec
adcl
in
add
push
std
add
out
mov
sbb
sbb
mov
lcall
add
dec
scas
fsubrp
clc
daa
flds
mov
subb
aam
cmpsb
push
jg
push
add
shl
mov
mov
addr16
cmp
jnp
movsl
lods
out
mov
add
push
pushf
rcrl
mov
shlb
dec
jg
add
add
int3
idivl
es
faddl
sub
add
cmp
shll
mov
aam
leave
add
imul
cltd
pop
je
pusha
lcall
and
jbe
add
inc
cmp
add
arpl
cs
push
inc
adc
inc
out
add
or
fwait
add
pop
adc
xchg
pop
lahf
fsubs
insl
sti
or
test
jne
cwtl
push
sbb
aam
add
jb
lods
test
or
pop
add
xacquire
and
mov
adc
pushf
or
movsb
add
mov
jnp
mov
add
xor
in
nop
add
xchg
popa
add
mov
or
cmpl
add
test
sub
lods
lcall
mov
push
cld
xor
mov
daa
add
xchg
adc
mov
addl
out
in
ret
outsl
pushf
add
push
xlat
or
add
inc
mov
pop
shl
jl
sbb
jb
subb
sbb
ds
adc
sub
or
xchg
pop
cli
add
incl
xor
jmp
push
add
jle
mov
mov
mov
scas
add
cmpsb
shl
mov
and
inc
sti
add
pop
sbb
test
add
xchg
sbb
xchg
mov
sub
jmp
push
add
sbb
push
xchg
add
fcomps
sub
fs
jg
das
addb
cmpsl
popf
xchg
jno
mov
add
rorb
les
scas
push
pop
adc
push
add
ret
movsl
and
jnp
lcall
cmp
aaa
arpl
mov
fwait
cli
jg
jb
cli
dec
jg
cmp
repnz
and
xchg
nop
test
js
or
xchg
sar
fsubr
jns
add
mov
jae,pn
cmc
or
pop
or
add
cmp
add
out
push
mov
jl
or
stos
mov
cli
fldt
xor
pop
ja
add
mov
imul
test
sbb
jle
jb
mov
mov
ja
test
pop
xchg
clc
int
add
mov
sub
mov
mov
fdivs
xchg
cltd
lods
push
pusha
sub
inc
es
mov
mov
clc
add
rorl
ja
xor
imul
add
and
dec
stos
sub
adc
jg
lds
push
popf
mov
sub
sti
enter
dec
xchg
pop
push
inc
jge
int
les
sub
cmp
xchg
movsl
or
xchg
stos
stc
dec
into
cmpsl
rcll
mov
mov
lret
lret
jno
mov
add
dec
xor
dec
cmp
int
add
and
xor
add
aaa
nop
add
popa
mov
ficomps
loop
inc
ficoml
add
ljmp
rclb
push
popf
sub
sbb
jnp
cwtl
int3
pop
mov
jnp
fsubl
ja
jb
ror
js
fwait
gs
dec
in
add
sar
repz
cwtl
adc
inc
scas
push
pop
leave
add
xchg
in
xchg
addb
dec
dec
cmp
es
int
fsub
adc
push
ret
push
les
cmp
add
std
adc
xchg
jge
add
stos
data16
int
mov
push
add
clc
adc
lret
add
mov
push
inc
scas
ss
pop
rcr
push
jge
mov
push
push
mov
jno
mov
push
pop
mov
sbb
ss
inc
mov
add
pop
push
sbb
add
inc
fldenv
js
iret
sbb
push
cmp
cmpb
mov
data16
jns
inc
nop
mov
xchg
add
in
adc
gs
add
add
pop
push
add
enter
lret
loopne
imul
jo
imul
test
in
pushf
and
or
ret
add
adc
nop
cmp
mov
repnz
and
mov
movsb
lods
pusha
push
or
add
imul
or
divps
call
mov
cmp
stc
jo
lock
inc
or
sub
push
clc
bswap
jmp
add
lret
xchg
inc
out
add
pop
je
cmp
test
sbb
call
mov
testb
cmpsb
sub
push
cld
loope
imul
cmp
fbstp
add
rol
xlat
push
insl
inc
sub
add
outsb
mov
cmp
jns
hlt
inc
in
leave
int3
and
enter
pop
inc
jo
ja
push
es
sub
or
xor
adc
dec
ret
or
fiaddl
fsubr
ja
xchg
repz
scas
push
add
js
inc
inc
and
mov
xor
add
pop
sahf
xor
cmp
sub
add
cmpsl
rol
outsb
inc
in
cmp
lret
mov
push
inc
and
and
addb
int
pop
pop
jecxz
rorb
add
loope
gs
or
xor
mov
cmp
subb
bound
cmp
loope
jo
mov
push
mov
cmp
addl
dec
mov
jno
outsl
cli
adc
mov
sbb
mov
daa
mov
pop
jge
shrl
adc
es
add
push
pushf
pop
mov
mov
jno
cmp
fisttpll
adc
lcall
jnp
aam
pop
loopne
das
lock
add
jae
dec
notb
into
add
cmp
aad
xchg
mov
rcrb
add
call
fistl
jns
mov
scas
sbb
xchg
jo
xchg
adc
push
xchg
loopne
fsub
out
add
xchg
mov
add
xor
pop
push
daa
xlat
test
rcl
jo
movl
pop
jbe
sbb
jg
lock
sbb
loopne
aad
inc
or
or
fs
lds
cwtl
in
add
notb
and
rolb
jmp
and
and
inc
ret
jbe
and
xor
rorl
jmp
mov
jp
cmp
cmp
test
sub
and
sub
push
ja
xchg
cmpb
jae
xchg
xlat
add
addr16
sbb
call
enter
sbb
mov
fdivs
in
or
repnz
ret
cld
add
or
xlat
shlb
add
xchg
push
jge
daa
movsl
cmp
arpl
pop
gs
cmp
pushf
pop
insb
xchg
pop
sub
out
add
mov
lret
leave
shlb
hlt
xor
jb
flds
loopne
not
jo
mov
fsub
or
push
fisubrl
jbe
xchg
aas
andb
lock
adc
lods
pop
js
movsb
inc
cld
jno
push
sbbb
mov
add
mov
xor
and
loopne
and
add
push
rolb
setge
sub
sbb
sbb
push
loope
xchg
add
sbb
fadds
jp
jne
mov
dec
mov
mov
add
pop
mov
int3
sbb
arpl
call
add
xchg
xorl
add
leave
popl
arpl
and
or
adc
mov
push
or
mov
jge
testl
xor
mov
andb
jmp
pop
dec
jno
call
shlb
cmovno
iret
fadds
or
std
das
in
lock
mov
sbb
mov
add
orl
hlt
mov
xor
out
cli
adc
xchg
fistps
icebp
push
mov
mov
cmp
idiv
push
mov
pushf
ja
add
test
cltd
ret
xor
fsubrl
ja
jl
loop
add
xchg
sbb
xchg
add
stos
std
in
lds
pop
andb
stc
mov
and
sub
ss
imul
dec
mov
jo
popf
cli
inc
divb
mov
cmc
sub
add
fiadds
add
loope
dec
dec
cmc
jg
add
inc
and
filds
fiadds
add
push
push
scas
dec
push
cmpsb
in
add
or
imul
subl
lcall
mov
jnp
xorl
mov
xchg
add
mov
mov
mov
add
mov
xor
leave
pop
add
fstpl
mov
in
pop
imull
dec
aas
pop
add
in
imul
add
adc
cs
ds
jp
cvttps2pi
add
out
cmp
add
pop
outsl
outsb
adc
lahf
xchg
xchg
dec
mov
add
orb
fiaddl
addr16
fadds
or
and
mov
mov
xor
jecxz
jl
mov
enter
test
pop
and
fildl
stos
xchg
or
and
fistps
test
mov
pop
push
test
push
scas
add
xor
das
mov
sbb
adc
or
in
and
outsl
or
loope
sbb
dec
pop
mov
jae
add
lahf
shl
jo
push
or
sub
jmp
mov
mov
xchg
iret
xchg
pop
bound
inc
pop
add
xchg
mov
jmp
pusha
mov
stos
out
adc
mov
in
xor
mov
lret
scas
and
or
sub
sub
sub
jb
pop
mov
out
and
call
lock
push
fnsave
and
pop
add
mov
mov
lock
add
fdivrl
add
push
inc
mov
mov
inc
les
mov
or
and
mov
test
mov
lahf
add
xchg
xlat
loopne
push
ds
rol
cmpb
sub
fidivl
sub
hlt
and
add
jmp
pop
les
add
in
negl
lods
mov
lock
or
sbb
clc
enter
imul
cmp
push
popa
lcall
push
pop
pop
mov
or
push
shlb
dec
pop
jne
add
jp
sbb
lret
cwtl
sbb
imul
clc
leave
dec
sahf
xor
mov
jns
add
sti
add
cmpsl
aam
je
lahf
add
xchg
xchg
pop
push
jp
repz
mov
sti
pop
add
jne
push
inc
movsb
dec
stos
sub
es
xchg
cld
test
add
jnp
and
dec
jmp
add
pop
xchg
mov
jno
jmp
aam
sbb
or
cwtl
cmp
outsb
cmp
add
jle
data16
mov
push
sub
aam
cmp
cmp
inc
das
sub
mov
xchg
data16
adc
fldenv
sbb
in
cmp
mov
mov
xchg
dec
lea
xor
push
stos
cmovs
or
mov
jp
stos
inc
add
mov
xchg
push
pop
cmp
in
jl
xor
or
call
imul
jns
sbb
add
mov
test
mov
jb
add
adc
pop
shlb
adc
in
xor
testl
mov
mov
test
loop
adc
cmp
mov
cmp
pushf
ret
pop
xchg
cmp
push
cmp
and
adcb
mov
mov
mov
add
iret
in
cmpsb
push
xor
add
push
test
loop
xchg
cmp
pusha
adc
xchg
sub
mov
jae
add
aam
add
fistps
push
mov
push
mov
rcrb
sub
pop
pop
loope
and
in
add
mov
addr16
or
test
xchg
out
mov
loop
inc
mov
add
or
imul
lock
insl
popf
clc
pusha
lahf
leave
push
ljmp
adc
pusha
push
adc
fmull
out
mov
add
xor
sbb
jmp
sub
adc
and
dec
or
dec
add
mov
popf
sbb
in
xchg
incl
cmp
xchg
icebp
sti
and
in
add
and
dec
dec
mov
add
sbb
push
add
push
xchg
mov
hlt
test
int3
ds
push
paddw
in
or
sbb
cld
or
sbb
jnp
insb
out
cmc
add
inc
inc
imul
add
mov
rorb
addb
popf
pop
fstps
inc
mov
aam
das
or
jmp
rol
inc
fs
int3
loope
add
out
test
mov
add
xlat
js
push
mov
cmp
push
idivl
add
das
aad
pop
pushf
dec
je
cli
or
add
fsubrl
sbb
mov
push
ljmp
and
pop
add
and
lods
jae
pusha
mov
addl
mov
mov
push
movb
rcrl
add
std
enter
jno
add
in
das
cwtd
or
add
ret
xchg
insb
mov
jecxz
cmp
bound
add
popf
leave
sub
iret
mov
mov
lcall
iret
js
rcrb
pop
xchg
sti
int3
mov
enter
sub
test
add
dec
mov
shll
push
fistl
outsl
sbb
and
dec
mov
and
cltd
mov
push
rorb
dec
xchg
js
and
loopne
lods
jo
add
mov
fcomi
fiaddl
in
dec
dec
pop
aad
push
jbe
callw
or
cmpsl
add
mov
int3
push
in
xchg
adc
inc
addb
cwtl
test
pop
flds
add
mov
aam
sub
int3
add
push
add
sahf
cwtl
sbb
cld
enter
loop
sarb
fstpt
pusha
mov
icebp
mov
scas
jmp
jne
into
add
or
mov
adc
out
andb
stos
mov
repnz
test
out
adc
andl
cmp
or
xchg
orl
ja
icebp
test
gs
insl
push
add
in
xchg
add
cwtl
roll
jae
xor
push
lea
fsubrl
mov
cmpsb
add
jp
cmp
sbb
cmp
add
cltd
pop
mov
add
nop
inc
adc
out
sti
int
sub
bound
cmpsb
and
pop
adc
jno
cmp
cli
add
lret
es
nop
sbb
xchg
stos
xchg
dec
xor
add
dec
repz
cmp
sub
or
fsubrs
jne
mov
add
push
add
and
mov
mov
arpl
rcll
sbbb
xchg
sub
mov
fadds
sbb
xor
cmp
dec
pop
or
test
insb
mov
sub
lock
add
decb
mov
mov
push
ljmp
mov
fdivrl
add
jnp
arpl
fadds
cwtl
stos
add
xor
xor
add
jns
cld
je
mov
ret
mov
ret
pop
inc
jle
lock
cld
pop
repnz
jnp
add
xchg
cmp
add
aaa
outsb
test
pop
add
or
cmp
sbbb
jge
adc
in
add
ljmp
add
pusha
stos
aam
inc
mov
cmp
or
add
addr16
call
dec
xor
mov
and
test
ss
or
in
lds
push
xor
add
cmp
add
mov
testb
add
cli
pxor
fsubrs
push
cmp
add
into
ljmp
aas
mov
outsl
insl
mov
lret
movsl
jle
mov
stos
lea
scas
fistl
pushf
pop
loop
fldl
movsb
flds
add
sbb
xor
push
add
popa
and
insl
pop
xor
ds
test
push
roll
in
or
cmpsb
arpl
add
sub
out
mull
inc
add
add
push
add
pop
mov
push
mov
inc
je
out
sub
mov
add
test
cmp
andb
cmpsl
sbb
or
cmpsb
jns,pt
xor
insl
outsl
pop
mov
in
aam
popf
mov
jns
cmovns
adc
push
orb
mov
xchg
mov
cld
push
out
xchg
test
loop
aaa
popa
xchg
add
add
push
sub
test
jge
popa
fs
pop
sub
push
add
mov
movsb
lock
pmaddwd
mov
xorl
or
sbb
outsl
push
jne
add
outsb
sbb
nop
jae
add
xchg
fdivs
pop
inc
lock
fs
mov
aas
inc
xchg
inc
cld
jle
mov
mov
jns
inc
inc
mov
stos
xchg
cmp
gs
test
jl
nop
imul
push
scas
sbb
add
inc
test
adc
add
aam
hlt
std
inc
mov
xchg
imulb
cmp
add
call
repnz
callw
test
pop
sbb
mov
or
inc
push
dec
xor
jne
mov
mov
jns
and
je
loopne
ljmp
cmp
std
les
sbb
out
cmp
and
subl
stos
add
adc
js
ret
mov
xchg
jae
dec
inc
jne
push
out
loop
call
outsb
add
mov
lea
sbb
xchg
cwtl
mov
pusha
jg
cmpsl
outsb
pusha
add
and
or
daa
inc
stc
add
popa
mov
adc
mov
arpl
pop
mov
xchg
fwait
data16
inc
fcmovnbe
dec
add
mov
leave
add
sbb
or
sbb
iret
pusha
rorb
jb
imul
add
inc
mov
outsl
popa
iret
cmp
push
repnz
add
pop
int3
ja
or
sub
stc
mov
xchg
shrb
fwait
stos
jl
mov
aaa
fldcw
mov
and
xor
std
sub
xor
mov
mov
pop
and
sbb
jo
aaa
jle
and
mov
xor
cmp
fisubrs
repz
ret
divb
mov
mov
jge
inc
sbb
movl
sti
mov
pop
cli
jns
pop
mov
mov
adcb
cmpl
stos
pop
mov
pop
mov
jge
cld
invlpg
push
mov
insb
lret
in
cltd
sbb
out
xor
test
xor
addb
cmpsl
gs
add
icebp
adc
cltd
mov
lret
fistps
test
ds
cmpl
cwtl
dec
aaa
sbb
mov
hlt
mov
pop
icebp
push
movsb
add
fs
inc
add
and
mov
lods
add
stos
push
sar
jmp
push
cwtl
xor
cmp
jns
add
jae
dec
pop
and
sub
ret
add
ret
fistpl
roll
dec
ss
xchg
push
fstpt
push
insb
and
cmp
mov
push
sbb
push
cmc
rcr
pop
pop
cmpsb
and
inc
subl
add
pop
xchg
sbb
leave
sbb
dec
inc
add
jae
pusha
and
loopne
adc
xchg
inc
add
shlb
pusha
cli
lds
xorb
repnz
and
dec
push
pusha
jle
imulb
pop
scas
aam
mov
sbb
push
into
pop
jb
sbb
dec
nop
sub
popa
test
add
jge
cmp
faddl
inc
repnz
mov
or
pop
sbb
add
push
addb
gs
dec
mov
dec
jo
or
or
push
ljmp
int
sub
xor
add
jge
insb
add
pop
inc
test
fwait
mov
sbb
shlb
adc
icebp
cmpb
push
xor
or
in
add
mov
jp
dec
jmp
and
clc
pop
xor
cmpsb
aaa
pushf
inc
addr16
loope
fsubl
leave
test
adc
add
inc
pop
dec
add
mov
cs
push
stos
inc
mov
xlat
sbb
xchg
sub
pop
dec
adc
mov
imul
xor
ja
add
mov
mov
shll
add
xchg
daa
sahf
jmp
xlat
push
stos
hlt
insl
xchg
das
xchg
and
int3
frstor
jo
ret
popa
sar
ja
push
pop
push
inc
nop
and
cli
xlat
pop
and
pop
cmp
data16
pop
jae
push
pop
rcrb
push
or
fldl
mov
xor
and
or
loopne
in
out
xchg
pushfw
aaa
add
dec
cmp
jp
sarl
nop
gs
push
xchg
add
jnp
nop
mov
cmp
push
cmp
mov
stos
or
sub
aaa
xor
shll
mov
sbb
es
sbb
push
cmp
dec
dec
rclb
lods
add
inc
into
sbb
adc
jno
and
pop
pop
add
mov
cmp
push
add
call
outsb
mov
test
push
add
pop
mov
outsb
pop
inc
push
adc
push
out
cld
sahf
pusha
inc
sarb
mov
dec
pop
push
mov
xchg
xchg
das
add
jecxz
xor
pop
out
addr16
popf
rolb
sar
jmp
push
add
or
in
lret
mov
push
std
or
addl
je
fldt
scas
push
push
addb
mov
ficoml
iret
sbb
jl
and
pop
testb
push
inc
sbb
push
mov
in
and
xchg
mov
adcb
pop
outsl
inc
xor
inc
repz
dec
sub
andl
xor
mov
mov
cmp
subl
jecxz
inc
jl
adc
and
push
pop
jnp
sbb
sub
ja
adc
inc
adc
xor
sub
jae
enter
call
fsubs
xchg
add
shll
jecxz
test
add
jns
cmp
inc
clc
add
add
sbb
add
dec
fs
push
gs
xor
testl
mov
inc
push
push
psrad
inc
xor
pop
int3
or
test
ja
add
jle
flds
jb
stos
push
dec
mov
inc
jne
push
rcll
dec
xor
in
xor
fldl
sub
add
xchg
or
pop
mov
or
insl
and
xchg
add
popf
cmc
dec
fdecstp
cmp
sbb
andb
lahf
add
repnz
cmp
or
insb
mov
pop
add
aas
fsubrs
hlt
add
or
xchg
sbb
mov
add
movsl
insb
inc
icebp
cs
into
in
push
inc
fnsave
mov
in
mov
mov
adcb
add
mov
xchg
adc
xchg
mov
movl
jbe
mov
cmp
adc
xchg
pop
jmp
add
mov
add
push
and
sti
xlat
pop
xchg
ljmp
out
dec
mov
fistpll
push
call
add
lea
lods
fiadds
repnz
test
js
mov
add
je
xlat
rcrl
add
inc
ret
pop
into
and
add
mov
push
rorb
jmp
add
std
push
mov
dec
add
dec
inc
sbb
add
sbb
addb
movsb
outsl
shl
mov
mov
add
adc
test
or
fdivs
call
aas
xchg
negb
inc
mov
in
pusha
ret
popf
add
sub
call
sub
lock
pop
lds
iret
lods
fimull
xor
inc
arpl
xchg
test
orb
imul
daa
add
mulb
sbb
xchg
pop
pmaxsw
lods
or
jnp
add
out
in
ret
mov
lds
loopne
scas
repz
cmp
dec
clc
push
inc
mov
dec
pop
outsl
cmp
mov
add
xchg
mov
lds
add
mov
xor
pop
mov
dec
pop
sub
daa
sbb
arpl
mov
test
test
jg
add
les
ljmp
mov
xchg
dec
inc
mov
dec
cs
push
add
xchg
lock
fwait
movsl
sbb
mov
nop
cltd
jmp
pop
jb
dec
inc
les
in
inc
inc
shlb
mov
mov
sahf
cmc
push
dec
jnp
cmp
fcompl
dec
repnz
jae
ja
mov
push
cmc
mov
lahf
cmp
outsl
repnz
xor
add
into
jno
fwait
dec
xor
orl
push
clc
int
push
add
out
mov
push
mov
add
stos
test
js
pop
loop
js
leave
add
cmp
or
loopne
repnz
inc
add
fwait
stc
and
xor
aaa
cmp
mov
loopne
insl
mov
popa
or
add
jmp
adc
cli
jmp
clc
in
movsb
jns
add
sub
lret
sub
mov
jno
or
add
inc
xchg
adc
add
pop
outsb
sub
cld
jmp
xor
out
add
mov
bound
and
sbb
int3
pop
into
mov
je
rcrb
pop
pusha
stos
jae
sub
fmull
leave
inc
jb
jo
cmc
mov
repz
add
iret
hlt
mov
add
jg
pop
jno
dec
push
dec
adc
lea
out
mov
or
and
jl
push
cmp
shlb
add
or
loop
sbb
inc
push
or
cmp
test
mov
in
fsubs
add
mov
lcall
jb
dec
adc
lods
cld
cwtl
test
clc
xor
push
mov
gs
add
aaa
mov
mov
clc
mov
add
stc
loop
adc
outsb
add
dec
cld
in
pop
or
adc
mov
adc
or
outsb
xchg
add
xor
aaa
add
loopne
ret
and
cmp
and
cs
add
push
push
mov
add
cli
push
ret
mov
push
in
or
pop
inc
push
add
repnz
lods
sbb
lcall
test
add
mov
clc
dec
or
sub
cmp
add
test
adc
sti
add
subb
and
mov
insb
jmp
add
fnstsw
xchg
and
rcrl
xor
add
ja
mov
mov
rolb
jmp
add
mov
roll
stos
xchg
cmpsl
push
add
repz
fmuls
add
lock
xchg
imul
jnp
fwait
add
sub
add
imul
mov
add
push
movsl
fcoms
andb
aas
idivl
jne
cmp
pop
pop
out
xor
mov
jmp
mov
inc
movsb
repnz
cmp
dec
xor
repz
fwait
insb
xor
mov
ja
jo
jp,pt
adc
sti
pusha
cmp
out
scas
pop
mov
and
pusha
sbbl
lcall
add
out
mov
lret
scas
sub
out
jl
lahf
xchg
mov
sbb
mov
push
cmp
imul
fdiv
loope
mov
fstpl
idivb
xor
push
inc
movl
jge
pop
les
fisubl
orb
scas
push
lea
mov
xor
lods
in
add
cs
fisubrl
cmp
test
push
push
pop
addr16
and
js
cmovs
out
addb
mov
fs
ret
add
mov
jno
nop
dec
add
fimull
and
and
add
push
lret
add
or
nop
push
add
add
lea
add
daa
xor
jb
int
es
ret
mov
inc
add
inc
test
xchg
pop
insl
sbb
rolb
lret
jo
add
pop
cmp
xchg
add
loopne
rcrl
jae
mov
pop
out
mov
inc
in
leave
enter
fmulp
add
jnp
addr16
mov
jp
adc
hlt
or
and
xchg
cmp
jp
rcl
fcoml
into
lods
mov
dec
mov
aam
xchg
xor
and
add
scas
add
push
add
imul
sahf
dec
je
push
rcr
and
andl
outsl
mov
fldt
stos
pop
je
mov
sbb
icebp
xor
add
or
lds
dec
and
sarl
icebp
xchg
adc
add
inc
test
cwtl
testb
add
mov
mov
add
lahf
movsl
pop
push
mov
ja
test
or
addb
pop
lods
xor
adc
mov
dec
mov
iret
rcll
pop
add
and
sbb
xor
mov
add
add
cmpl
jns
mov
push
pusha
sub
fidivrl
add
push
cmpsb
addr16
add
pop
nopl
lahf
push
push
out
inc
and
jg
cwtl
fiadds
movsl
sub
push
mov
ja
subb
cwtl
push
aas
pusha
jbe
dec
push
add
mov
jge
pushf
sarl
mov
add
decl
aad
sub
adc
repnz
xchg
add
or
cmp
orb
inc
sti
push
pop
lahf
add
adc
cmp
add
fs
xchg
xchg
cli
or
mov
add
cmc
es
in
pop
ds
fwait
pminub
sub
adc
add
roll
adc
xor
in
xchg
setl
xorl
add
xchg
xchg
or
sbb
add
pop
mov
stc
add
xor
xchg
jle
pop
jb
sbb
lock
add
and
out
in
ret
rcll
mull
dec
inc
sbb
inc
or
pop
push
pop
sbb
and
dec
xor
xor
rcll
pop
mov
push
ret
xchg
cmp
pop
popa
outsl
scas
sub
out
inc
test
pop
mov
add
mov
xor
imul
shrl
push
clc
in
punpckhwd
inc
loopne
sub
add
outsb
enter
dec
pop
jns
jb
dec
cwtl
imul
hlt
pop
stos
add
mov
mov
sbb
sldt
push
pop
out
das
mov
mov
sti
fsubl
add
xchg
mov
add
stos
mov
daa
fwait
dec
faddl
add
sub
sbb
js
xchg
add
test
add
outsb
dec
lods
in
leave
mov
xchg
mov
xor
add
add
int
pop
xor
inc
loop
lahf
add
cltd
insl
mov
test
out
xchg
insb
pop
ja
loopne
inc
repnz
clc
or
sub
loop
pop
cs
adc
popa
cmp
lahf
pushf
adc
cwtl
lock
mov
lea
pop
adc
add
dec
popa
jecxz
sbb
scas
outsb
stos
in
mov
xor
int
repnz
popf
sub
mov
or
mov
xor
lods
stos
in
add
fwait
push
mov
xor
imul
push
rolb
test
push
inc
jne
adc
add
paddsw
mov
cmp
add
adcl
movsb
add
sub
mov
push
jmp
adc
lret
pop
or
jmp
and
sub
add
fistps
inc
add
pop
ret
ret
xor
arpl
idivl
add
out
clc
mov
sbb
mov
fyl2x
jp
add
mov
leave
in
in
sahf
push
out
or
scas
fdivrl
dec
jae
mov
fs
aas
popf
adc
push
add
push
push
mov
clc
xor
or
or
loopne
add
jl
insl
adc
call
lcall
dec
jp
loopne
ja
dec
sarb
add
mov
mov
clc
aas
fwait
mov
flds
push
jmp
fwait
std
inc
test
es
jns
pusha
inc
mov
loop
dec
sub
or
cmp
test
pop
mov
adc
nop
jo
push
pop
arpl
shlb
popf
inc
je
inc
push
dec
roll
movsl
push
mov
push
inc
cmp
mov
add
sbbb
cli
es
xlat
scas
inc
add
fidivs
lods
mov
add
data16
cmp
sbbb
mov
icebp
aaa
add
fcompl
or
arpl
sarb
int3
test
aas
mov
lret
lods
pop
notb
sub
push
pusha
scas
movb
xor
cmp
cmc
enter
or
cmpsb
adc
sbb
fs
test
add
mov
add
push
out
int
add
mov
pop
push
les
add
jno
mov
mov
jg
inc
jb
loop
dec
les
pop
cmpsl
sub
sub
inc
push
mov
cmp
pop
mov
jno
lds
bnd
dec
add
add
outsb
dec
or
sub
cmpsl
mov
repz
ret
xchg
mov
mov
shl
cmp
add
shll
sbb
push
mov
insl
inc
pop
ss
add
sbb
shlb
pop
dec
dec
add
inc
jnp
xchg
clc
add
lods
orl
ljmp
or
pop
jae
add
xor
sub
and
mov
cmp
xor
mov
out
or
sahf
divl
pop
scas
add
dec
sbb
movsb
jbe
add
jle
inc
xchg
cmp
add
jb
jbe
cltd
in
dec
and
ds
mov
movsl
daa
lods
xchg
inc
lock
arpl
add
fimuls
mov
outsl
loop
idiv
pushf
adc
in
in
jge
push
lock
xor
xor
mov
xor
popf
pop
das
and
jo
pop
pop
add
mov
add
cld
imul
pop
sub
and
add
out
jmp
addb
fs
add
mov
in
xchg
movsb
clc
jge
cmp
inc
orb
mov
sub
push
push
adc
aaa
in
iret
lods
movsb
lods
add
out
loope
addb
sbb
clc
sub
pop
cmp
loopne
add
dec
xlat
pushf
add
and
push
lcall
std
jnp
add
mov
dec
add
or
sub
orl
sbb
fistl
inc
pop
sahf
lret
call
imull
sub
or
push
inc
mov
cli
xchg
addb
mov
ljmp
and
add
xchg
in
sbb
test
inc
jbe
mov
out
add
sbb
inc
lcall
inc
lods
dec
xor
roll
addb
jo
stos
mov
or
jmp
roll
mov
xor
nop
cmc
dec
call
out
cs
sbbb
ficomps
jl
rcr
push
inc
stc
jno
lahf
nop
sub
xor
daa
mov
rolb
andl
add
mov
xlat
add
mov
and
pop
push
iret
or
xor
jle
int
jns
add
mov
adc
inc
mov
movsb
addr16
dec
icebp
jb
orb
and
xchg
mov
movsb
cmp
shll
or
lret
pop
and
in
jg
and
flds
add
dec
pusha
jbe
push
push
in
popa
mov
jne
in
aaa
add
pop
fstpt
cmovns
sbb
and
push
insb
enter
into
std
sahf
and
mov
push
inc
cmp
out
jmp
sar
jns
cs
mov
lcall
cwtl
sbb
jno
mov
mov
je
das
stc
xchg
push
add
movsl
ljmp
call
push
mov
lds
add
jmp
or
dec
enter
rolb
mov
sbb
push
mov
fisttps
and
mov
leave
imul
jnp
push
pushf
fwait
xor
add
inc
ret
sub
orl
fstl
js
fadds
xchg
or
push
orl
add
add
inc
push
ret
xchg
jnp
repnz
dec
and
add
stos
sub
dec
xorl
add
adc
in
jg
aas
dec
and
cwtl
popa
sbbb
cli
fcmovb
dec
and
mov
sbb
add
std
jnp
add
sbb
mov
scas
add
enter
push
or
mov
sbb
fadds
cmpsb
xor
sbb
imul
fisttpll
inc
or
and
add
dec
sti
in
add
sbb
aas
xchg
add
pushl
add
ja
addr16
pushf
add
movsb
rcrl
fmull
push
adc
xadd
repz
test
cmp
cmp
pop
sbb
repnz
leave
mov
add
outsb
in
movsl
mov
add
loop
add
or
sbb
mov
cli
into
xor
inc
repnz
imul
les
sub
mov
cmp
fcom
add
jno
jg
pop
fdivrs
xor
and
jb
aas
mov
lock
cmpsb
cmp
out
add
xchg
mov
sbb
aas
dec
adc
out
cmp
push
mov
mov
ljmp
psraw
adc
fs
jmp
push
add
in
dec
jb
push
and
shlb
cmpsl
loopne
inc
mov
popa
leave
pop
mov
xchg
jno
mov
cmpb
fs
out
add
nop
xchg
fcmovnb
add
test
in
add
push
xor
addl
ficomps
dec
notl
shrb
push
push
loopne
xchg
pop
mov
add
nop
or
add
dec
pushf
dec
xchg
pop
cld
sub
add
in
imull
clc
cs
rcrl
out
push
mov
psubq
inc
insb
in
or
rorl
xor
ret
push
icebp
add
push
mov
adc
aas
orl
push
in
add
cmp
xchg
jae
shll
aaa
add
mov
push
push
mov
iret
cltd
inc
outsl
inc
sub
or
add
aad
pop
adc
repz
inc
mov
lods
add
fstps
mov
xor
addb
das
icebp
pop
adc
aas
sbb
xchg
fwait
into
bound
shrb
pop
std
cmp
dec
lods
add
adc
sub
in
adc
add
sbb
mov
add
cmp
pop
adc
je
outsb
add
arpl
negl
pop
aam
push
cmp
mov
in
std
bound
je
movb
adc
mov
sbbl
xor
in
add
aaa
push
addr16
dec
aad
mov
cmc
push
data16
pop
leave
pop
push
sub
andl
adc
jge
sub
mov
cmpsb
andb
xor
add
or
xchg
add
cmp
xlat
addb
popf
push
jb
adc
addr16
lock
aad
jg
cmp
add
test
test
data16
mulps
add
and
add
xchg
aaa
push
add
xchg
mov
jmp
xor
add
std
scas
ljmp
add
addr16
aad
out
movl
nop
ret
add
cmp
nop
add
push
adc
mov
shr
lahf
add
and
negb
add
cmpsb
insl
stos
int
add
scas
in
cs
jo
jb
mov
push
jae
sbb
jne
dec
imul
add
repnz
dec
int3
inc
push
or
call
shlb
adc
xor
sbb
sbb
sbb
hlt
push
sub
insb
hlt
add
stos
add
mov
cmp
jae
add
cwtl
and
or
nop
jb
jl
add
sub
push
or
call
icebp
sti
or
push
sahf
adc
pop
fs
pusha
xor
xor
addr16
push
push
enter
lret
mov
push
test
add
fbstp
shrb
adc
loope
sahf
sub
loop
push
adcb
cmp
ret
insb
dec
add
xor
or
mov
push
mov
sub
jno
sbb
cmpsl
ss
xor
xor
clc
popa
sub
add
loopne
je
cmp
add
inc
lods
ret
add
jmp
js
pusha
shl
dec
or
imul
orb
sbb
inc
cmp
aam
dec
dec
push
lret
or
popa
jno
add
jle
lock
add
jnp
mov
shr
mov
sbb
mov
add
lret
in
clc
aad
mov
out
pop
xlat
inc
sti
jnp
cld
movsl
addb
inc
lret
sbb
pop
or
int
add
jbe
lods
adc
pop
and
cmp
pushf
rol
das
sti
push
inc
mov
or
cmp
sbb
mov
ss
scas
dec
and
ficoms
inc
add
cli
scas
push
inc
ret
pop
call
dec
call
lods
push
or
test
dec
jno
adc
xchg
cmp
pushf
push
test
sahf
or
mov
or
test
sub
cmp
or
stos
mov
add
orb
ret
xchg
aaa
or
inc
xor
sbb
mov
popf
add
movsb
lahf
xchg
fimull
shlb
into
or
js
sbb
repz
mov
std
out
and
add
mov
xlat
add
mov
gs
mov
outsl
add
in
adc
aam
pop
pop
jb
pop
dec
cmpl
and
jb
xor
add
add
jne
push
jo
inc
mov
mov
xorb
mulb
lret
lea
mov
cwtl
jo
imul
insl
sldt
fiadds
xlat
sbb
dec
inc
je
js
jno
sbb
add
outsl
and
js
add
cwtl
jl
popf
xchg
cmp
lahf
jae
mov
mov
imul
xor
mov
test
fs
ret
andb
push
xor
inc
adc
sub
mov
dec
outsl
fmul
mov
add
or
mov
mov
xorb
lahf
sub
sub
add
mov
arpl
subb
mov
mov
test
cmp
add
or
xorl
cwtl
xor
pop
test
mov
out
shrl
jb
iret
rcll
jae
xchg
out
loopne
aas
lods
lock
rclb
clc
jno
jge
test
pop
sub
sbb
aas
inc
sar
push
add
sub
ja
jne
shlb
add
ss
inc
cmp
dec
mov
cmp
test
or
lea
or
add
cmp
or
push
test
loopne
je
adc
int3
push
pop
pop
mov
mov
mov
aaa
lods
sub
jmp
dec
outsb
sbb
pusha
call
divb
nop
cmp
add
or
xor
xchg
pop
lods
jno
mov
jns
push
sbb
push
hlt
push
adc
mov
sub
xor
pushf
pop
sub
mov
ds
sar
mov
repnz
loopne
jge
pop
loop
xor
cmp
int
cld
jo
add
xlat
xchg
sarb
daa
shl
xchg
fstpt
aas
inc
aam
mov
push
pusha
aam
xor
or
lcall
mov
sub
add
lods
jmp
in
mov
dec
pop
xorps
mov
loop
or
bound
xchg
imul
sub
cmp
xor
mov
test
push
sub
sarb
subb
roll
mov
lods
in
int3
pop
add
mov
test
mov
mov
push
ret
dec
and
add
inc
or
inc
add
div
dec
mov
push
mov
mov
imul
mov
mov
jo
sbb
mov
sbb
sub
dec
enter
pop
mov
jno
in
sub
repnz
xchg
js
rolb
xor
sbb
lods
push
mov
xor
add
sub
inc
leave
shrb
xchg
idivl
cli
mov
dec
rcll
cwtl
dec
ljmp
jmp
inc
loopne
aaa
addr16
ds
rolb
in
push
ret
push
imul
sub
xor
mov
or
mov
pop
lods
das
fwait
mov
leave
pop
and
inc
or
sbb
setno
fwait
inc
test
ret
or
fldcw
ficoml
push
inc
dec
fmuls
add
sbb
test
add
sahf
add
adc
mov
inc
lcall
push
daa
cmp
add
leave
and
sub
fmuls
add
das
cmp
mov
mov
es
inc
adc
xchg
or
fnstenv
push
out
divl
and
adc
add
popa
mov
inc
mov
pushf
adc
insb
clc
lds
xor
mov
ss
test
cmp
incb
mov
add
loopne
pop
mov
adc
sub
jnp
shlb
push
push
xacquire
sub
fcmovne
fcompl
lods
das
stos
add
xor
into
in
push
sti
push
mov
add
sbb
and
sbb
movsb
loopne
xor
pop
sbb
and
xor
js
loope
or
or
out
xchg
add
dec
adc
mov
mov
add
xchg
mov
imul
add
inc
cs
xor
shlb
add
push
adc
ret
add
hlt
movb
xlat
adcb
rolb
xchg
outsl
pop
insb
or
add
gs
pusha
add
mov
inc
jp
cmp
out
mov
add
movsb
push
and
push
push
adc
insl
xchg
jo
add
jg
std
jl
dec
add
pop
add
aad
adc
adc
jnp
xchg
js
or
mov
and
xchg
popf
jg
adc
mov
sbb
cmp
sti
pop
dec
and
cmp
adc
mov
loopne
xchg
or
mov
pop
faddl
push
pop
add
jle
leave
dec
hlt
movsb
xchg
jo
add
adc
fisubrs
mov
add
jne
das
or
pop
mov
inc
scas
rolb
pop
inc
add
or
pushl
add
aas
add
cmpb
in
imul
jae
or
lock
add
or
es
mov
or
btsl
addb
lret
shlb
xchg
mov
and
and
sub
subb
jo
push
push
xor
add
loope
lahf
mov
push
outsb
add
add
xor
dec
lcall
adc
sub
lret
cmp
and
ds
and
adc
or
mov
jg
into
adc
inc
add
ret
sbb
and
mov
outsl
out
mov
arpl
callw
pushf
sbb
cmp
iret
popa
inc
orl
dec
adc
imul
add
pop
cli
mov
test
mov
scas
inc
xchg
cmp
mov
testb
loope
iret
jge
mov
xor
or
ret
push
add
lea
add
pushf
xchg
jp
fdivr
mov
cmp
imul
hlt
add
mov
cmpsl
jle
pop
cld
hlt
out
mov
sub
lahf
pop
lea
adc
lock
pop
add
mov
je
jb
add
int
pop
and
push
mov
cmpb
sbb
in
adc
xchg
add
and
imul
sbb
popf
hlt
jnp
or
in
faddl
push
sbb
jecxz
add
push
imull
dec
cmpsl
insb
pop
stc
shrb
xor
sbb
shufps
sbb
add
cmp
cmp
sub
inc
rolb
cmp
jmp
imul
orb
movsb
lret
pop
add
adc
outsb
push
dec
inc
pop
sbb
ljmp
and
fcomps
cltd
test
sbb
mov
movsl
inc
jecxz
cmp
test
pop
dec
icebp
fisttps
clc
in
mov
push
cwtl
repz
pusha
add
mov
cltd
bound
shll
aas
inc
or
inc
cwtl
imul
cmpsb
loopne
in
sub
daa
in
xor
inc
aam
sar
xchg
sbb
cmp
stos
stos
mov
adc
dec
inc
push
or
mov
ds
nop
xchg
bound
pop
fwait
je
mov
lcall
xor
xor
je
jae
lods
add
inc
ret
sbb
cwtl
and
ja
negl
repnz
popa
clc
push
and
add
lock
xlat
add
fwait
add
aad
sbb
or
mov
fs
mov
add
mov
movsl
cmp
lock
or
int3
repz
outsl
pop
mov
iret
add
test
outsb
push
add
sbb
paddsb
push
add
cmp
aam
stos
pop
inc
add
push
clc
aad
add
add
fwait
or
sub
lds
sti
popa
mov
inc
add
xchg
inc
dec
push
push
xor
xchg
push
loope
xchg
orb
add
test
adc
mov
scas
inc
and
cmp
cmc
dec
cltd
adc
mov
aaa
sbb
xchg
xchg
mov
sbb
cmp
add
add
xchg
add
adc
mov
dec
xchg
mov
jo
pusha
and
dec
fadd
adc
out
outsb
shr
or
cmp
add
inc
popa
push
and
cmp
xor
inc
push
xchg
dec
mov
popa
xchg
pop
add
mov
repnz
adc
dec
inc
or
lret
cwtl
xchg
xor
xor
dec
popa
adc
loopne
cmpsl
add
mov
les
pop
mov
cli
xchg
xlat
dec
ljmp
and
addl
out
jecxz
in
shl
add
add
jg
jp
push
adc
inc
xor
jne
or
mov
push
aas
rcrl
or
push
add
test
add
dec
pushf
pop
xor
clc
movsl
clc
in
add
nop
add
mov
sbbb
cmpsl
lods
out
add
cmp
mov
adc
lea
es
out
pusha
loopne
cli
push
popa
cmp
addr16
aaa
or
xor
cmpl
test
clc
arpl
mov
rolb
inc
cmpsl
push
mov
and
lcall
daa
and
inc
add
fwait
and
push
cmp
jecxz
popa
add
jmp
dec
popf
lods
addr16
add
pop
repz
and
sub
pop
movsb
mov
inc
pushf
push
add
xor
mov
jecxz
xor
pop
jo
iret
aas
or
cltd
push
cmc
rclb
or
cwtl
cmp
add
mov
sub
mov
jle
sub
shrl
lret
and
imul
fucomip
add
test
push
add
pop
popfw
jge
cmp
movsl
mov
jle
daa
add
sub
repnz
cmp
mov
jbe
sub
cs
mov
in
push
sbb
ja
jae
add
xchg
add
cmc
xchg
adc
inc
stos
mov
jg
sub
add
insl
stc
das
rcll
or
pop
test
clc
cmp
add
push
mov
or
fistpl
dec
lahf
pusha
in
xchg
xor
ds
arpl
movaps
jne
adc
inc
add
sbb
mov
out
fildll
call
sub
loop
jo
mov
jmp
in
or
mov
pop
pop
dec
pop
dec
mov
lods
jmp
scas
js
and
add
andb
push
jmp
out
add
je
cmpsb
cwtl
fistps
dec
lea
and
mov
adc
mov
cltd
push
test
pop
jo
xor
addb
inc
add
adc
mov
jno
rclb
push
cld
jbe
cmp
xorb
xor
int3
dec
cwtl
sbb
jmp
mov
inc
test
and
repnz
add
xor
fs
inc
leave
inc
sub
mov
xchg
lea
jge
or
negb
mov
test
push
leave
shlb
outsb
in
dec
loopne
or
out
adc
arpl
sti
and
jge
add
jl
pop
cs
cmpsl
daa
add
enter
add
int
cld
pop
xchg
jns
js
add
push
call
push
and
scas
add
hlt
xor
andb
pusha
imul
aaa
adc
push
jnp
sub
inc
push
out
loop
add
in
pusha
sub
jnp
sbb
test
push
inc
into
adc
cmp
pop
xor
add
popf
pusha
cmp
add
aad
cmpsl
or
ljmp
adc
push
mov
pusha
pop
mov
pop
add
dec
out
add
aam
insl
rorl
add
adc
xor
sub
iret
mov
sarl
cmpsb
hlt
push
nop
loopne
add
ljmp
es
inc
sub
jmp
fiaddl
sub
fiaddl
mov
js
xchg
sub
jnp
lar
lahf
imul
cmp
or
and
ja
add
pop
cmp
jae
xchg
cli
imul
arpl
fdivr
inc
nop
mov
add
push
mov
outsb
cli
add
or
aas
cmc
xchg
nop
or
ror
adc
rorb
xchg
pop
inc
icebp
push
add
cltd
push
sbb
xor
inc
gs
inc
sarb
mov
daa
add
dec
in
std
ja
les
repz
jbe
js
leave
dec
insb
pop
xchg
add
or
lock
int3
je
jp
push
adc
lret
push
or
mov
mov
sbb
outsl
xor
inc
pusha
add
mov
push
add
sbb
pushf
stc
es
sbb
sub
fwait
pop
inc
movsb
insb
sub
mov
jge
add
int
xchg
dec
xchg
aad
fwait
add
and
sbb
cmp
lret
add
sub
enter
push
cmp
ret
aad
add
scas
ljmp
jge
sarb
inc
cmp
or
xchg
dec
stos
mov
pop
popf
push
mov
addr16
ljmp
jge
jo
out
cmp
add
lret
vmovapd
add
mov
mov
push
and
mov
xor
lods
xlat
adc
cmc
or
add
xchg
aaa
ret
insl
dec
add
sbb
out
leave
mov
add
insb
in
popl
push
and
cld
jo
push
or
xchg
insl
les
add
lods
lret
and
jns
mov
pop
outsl
push
inc
jae
out
fstl
xchg
mov
add
dec
mov
add
out
dec
ds
scas
add
in
push
iret
sbbl
push
add
outsl
out
pop
push
xchg
lods
scas
loopne
jne
mov
ffreep
divb
pop
add
jns
xchg
xchg
mov
inc
push
add
out
lea
je
mov
add
ret
dec
incb
fdivrl
ja
pop
mov
mov
mov
cmpsb
push
xchg
rorb
cmp
adc
xchg
push
adc
dec
jb
movsl
pop
add
lea
pop
dec
jne
aam
rolb
adc
sub
mov
mov
jp
adcl
cwtl
inc
push
add
push
std
xchg
sub
ret
xor
xchg
or
add
add
popa
call
jge
sbb
jl
into
mov
sub
xchg
push
aam
cmp
pop
inc
lea
mov
xlat
mov
add
pop
mov
je
lods
aam
es
cs
into
inc
add
fnsave
cmpsb
add
stc
xor
fs
mov
cmpsb
jo
fiadds
addr16
adc
mov
push
mov
push
ljmp
enter
add
sub
roll
xchg
cmpl
mov
mov
fsubr
pop
or
leave
mov
adcb
lahf
idivb
cmp
cmpsb
add
pop
mov
add
or
imul
cmc
xchg
orb
cmp
jo
mov
nop
push
mov
add
cmp
sahf
adc
mov
sbb
mov
inc
sar
add
sub
or
sub
icebp
xchg
add
mov
jp
add
mov
leave
hlt
inc
or
xchg
pop
add
dec
lahf
dec
fisttps
add
xor
sub
ljmp
add
loop
dec
or
inc
ja
push
inc
adc
add
xor
fwait
mov
add
add
and
pop
cs
inc
es
popf
add
push
jecxz
add
adc
stc
sbb
addr16
mov
ljmp
aaa
out
imul
sbb
fistps
mov
enter
jge
aam
cmp
mov
movsl
and
sbb
inc
clc
les
test
mov
popf
or
lahf
xchg
pop
rorb
clc
xchg
cmp
ja
inc
add
xchg
sub
out
pop
mov
popa
adc
add
mov
dec
push
or
adc
fwait
sbb
addb
das
sahf
inc
subl
faddl
loop
pop
xor
pop
stos
and
jbe
jbe
enter
mov
iret
or
add
cld
and
jp
dec
cmp
loopne
add
xchg
sbb
loop
fadds
push
dec
je
movl
hlt
repz
mov
shll
cwtl
in
and
push
insb
or
cmp
ds
or
sub
adc
fwait
jo
mov
sbb
dec
xacquire
cmp
inc
stos
push
lea
adc
pop
xor
push
add
stos
test
pop
sub
sub
arpl
clc
xor
hlt
jne
ret
out
mov
mov
mov
enter
jp
add
cli
sbb
cmp
mov
fdivp
ret
iret
dec
add
and
add
sbb
jno
je
pop
mov
mov
cmpb
jp
out
xchg
lea
add
int
xor
test
add
xor
cmp
es
and
sub
mov
fbld
jle
pop
add
mov
psubw
scas
cltd
sbb
insl
enter
adc
aam
mov
inc
xor
jno
sbb
lock
cmp
adc
js
stc
dec
lret
mov
enter
mov
lods
shll
cwtl
es
jne
andl
jns
and
popa
pop
sbb
mov
jecxz
std
or
add
inc
fnsave
jecxz
fwait
iret
movhps
addl
movsb
push
or
inc
push
out
loop
and
cmp
add
fisttps
scas
cmp
xor
js
scas
cmpsl
loop
jnp
lret
inc
insb
mov
lods
pop
sub
jmp
mov
cmp
xor
inc
and
inc
or
pop
stos
add
mov
jno
scas
cmp
sub
cmpsl
or
movl
xchg
adc
test
enter
pop
js
or
cmp
retw
jg
add
bound
outsb
add
test
or
in
orb
dec
and
add
dec
hlt
stos
add
add
bound
sbb
les
ret
leave
xor
repz
cmpsb
negb
add
jl
lock
hlt
sub
enter
add
std
jne
adc
rcrl
andb
adc
xor
out
add
xor
cmp
pop
and
mov
add
cmp
movsl
mov
lds
xchg
pop
push
aas
pushf
fstpl
test
and
ret
add
fbstp
sub
scas
pop
mov
or
jno
or
add
mov
repz
roll
xor
fldcw
mov
add
popa
fiaddl
add
idiv
pop
add
xchg
pop
iret
cmp
inc
sbb
push
fiaddl
xchg
cli
add
out
push
dec
or
add
sbb
inc
xchg
pop
aam
xlat
cmpsb
xor
sbb
ror
sbb
pushf
ljmp
add
dec
cmp
push
gs
mov
in
clc
sar
out
addb
push
popf
in
mov
nop
imul
call
adc
cmp
or
add
cwtl
mulb
add
ja
inc
add
mov
sub
fists
mov
in
mov
pop
add
sub
mov
adc
xchg
loopne
pop
or
imul
cld
test
xor
lea
lret
out
lds
cmp
dec
xor
add
rcll
arpl
mov
inc
loop
dec
mov
lock
sbb
push
loop
scas
lods
cwtl
addr16
xchg
add
outsl
roll
mov
lcall
pop
jae
add
push
mov
dec
inc
data16
xchg
arpl
xchg
mov
or
xchg
inc
mov
ret
add
loopne
outsb
add
cmp
shll
dec
add
std
lds
adcl
movsl
test
or
enter
iret
icebp
pushl
mov
cmp
cmpb
lods
dec
in
cmp
fiadds
push
mov
jnp
jmp
addr16
movsb
test
daa
aas
cmpsb
xchg
or
mov
cmc
loope
pop
push
dec
inc
fldl
ja
xchg
xor
add
xchg
sarb
std
xchg
add
adc
add
pop
mov
fs
xchg
sbb
cmp
repnz
fists
stos
mov
xor
sbb
dec
pop
cmp
ret
orb
int
add
and
stos
adc
or
push
cld
cltd
pop
pop
dec
mov
pusha
imul
mov
stc
ret
scas
xchg
dec
sub
arpl
lea
les
stos
pusha
fiaddl
pop
lea
jmp
test
sbb
mov
mov
push
and
aas
loope
add
adc
xor
push
pusha
mov
xor
and
cmp
jns
dec
stos
rclb
mov
or
in
into
roll
xor
cmc
test
jmp
lods
pusha
int3
pop
push
je
push
fsubl
cmp
mov
sub
mov
das
and
push
fmull
dec
add
popf
test
xor
rol
inc
jge
add
push
push
mov
xor
scas
mov
pusha
cmp
fsubr
leave
fstps
lods
pop
cmp
cmp
mov
std
mov
addl
add
push
divl
or
call
scas
je
mov
int
pop
add
sub
fcomps
add
mov
inc
popf
jb
call
lds
add
mov
add
add
ficoms
jecxz
fadds
stos
pop
test
add
fs
pop
popf
fiadds
clc
sbb
popa
add
mov
mov
mov
add
popa
stos
xor
xchg
add
adc
movsb
xor
cmp
mov
pop
fdiv
outsl
mov
add
fs
mov
jnp
add
xor
mov
pop
add
pusha
stc
lret
add
xor
rcll
push
add
jg
loop
imul
loopne
lcall
jle
inc
popf
add
sub
les
enter
mov
adc
and
add
lahf
outsb
and
jmp
faddl
mov
lahf
add
insl
outsl
mov
dec
add
push
mov
add
bswap
lcall
xor
ds
subb
call
cltd
sbb
outsb
popa
mov
pop
xchg
cmp
inc
add
mov
movsb
adc
sbb
cmp
add
push
popf
mov
imul
inc
cmp
cmpxchg
mov
stos
add
dec
in
push
sub
pop
jb
fucomi
jno
sbb
mov
add
push
jmp
add
mov
dec
add
iret
push
roll
inc
and
call
sbbb
sbb
or
jl
jge
xchg
mov
popa
jno
push
sbb
add
mov
or
cli
lea
and
jb
sub
add
jae
in
xlat
out
cmpb
int3
jl
add
lcall
in
mov
flds
dec
jmp
fisubl
std
pop
push
out
jno
mov
cwtl
orb
pop
dec
shll
add
inc
inc
rolb
jno
pop
fadds
or
aam
mov
fnstenv
add
fwait
imul
push
mov
inc
lock
les
mov
adc
jns
testb
addr16
out
pop
in
pop
dec
mov
scas
add
repz
sbb
add
xor
repnz
xor
lock
add
xchg
mov
cld
iret
jae
lods
dec
jle
pusha
cmp
shlb
inc
add
xchg
icebp
xor
push
into
jle
push
push
orps
cld
jg
xor
jnp
xor
mov
scas
inc
sub
pop
lods
daa
test
dec
jo
lahf
add
lret
das
jl
jns
mov
inc
add
in
int3
and
fbstp
cmp
jbe
add
inc
repnz
add
loope
xchg
add
and
rclb
add
out
int3
dec
or
aam
filds
pop
fcmove
cmp
cmpsb
stos
xor
cmp
mov
lods
dec
arpl
adc
dec
fiaddl
rcrb
sti
cmp
cmp
cli
push
pop
inc
mov
pop
mov
sbb
icebp
sub
mov
xchg
pop
mov
jl
pop
pop
test
dec
sti
adc
aam
jmp
ds
outsl
add
jl
jno
xor
add
mov
scas
xchg
or
in
sti
notb
jmp
pop
clc
cmp
ss
pop
cltd
test
stos
cli
push
push
sbb
shll
xor
add
mov
repz
sub
fwait
and
fisubrl
outsb
icebp
cwtl
push
cmp
mov
js
xchg
scas
outsb
in
mov
cmp
rclb
notl
and
and
sti
add
stos
cli
std
xor
pop
push
mov
mov
lahf
add
loope
jno
sarb
dec
adc
lret
cli
loopne
cmp
xor
mov
dec
jg
out
xor
adc
jge
pop
jns
fstps
jbe
push
xchg
sbb
dec
dec
clc
ss
sbb
inc
clc
pop
jns
bound
popf
xor
popa
lea
xchg
sub
data16
inc
imul
mul
lock
into
imul
cmp
sub
adc
ret
mov
imul
dec
movsb
call
add
xor
adc
movsb
lahf
add
ljmp
sub
push
pop
xchg
or
inc
push
mov
add
and
push
lahf
popa
or
andb
cmp
mov
or
dec
and
sbb
gs
jae
xor
imul
xchg
sbb
orb
xlat
xchg
mov
pop
mov
jge
lock
aas
psrad
outsb
es
cmp
pop
syscall
xor
popf
pusha
fsubrs
mov
es
stos
scas
sarb
cmc
cmp
mov
dec
adc
and
insl
or
and
xchg
lea
es
dec
push
sub
cmpb
shl
jmp
stos
add
jmp
xchg
inc
jo
icebp
movsl
pop
jo
add
push
xor
cld
fidivrl
or
adc
or
xchg
mov
repz
addl
sbb
dec
clc
orb
leave
xor
movlps
bound
pushf
fnstenv
adc
add
mov
testb
les
jns
dec
js
pop
jge
add
and
adc
xlat
sub
cmpb
js
add
mull
pop
jb
add
inc
repnz
or
icebp
jnp
xlat
add
cmc
int
outsl
mov
mov
sbb
mov
lods
jne
inc
mov
add
in
icebp
test
ja,pt
add
insl
mov
mov
pop
faddl
pushf
sahf
imul
outsb
inc
dec
ret
ja
enter
add
into
pop
sbb
and
inc
add
mov
ds
rorb
in
movl
add
stos
std
fsubrs
pop
adc
mov
cmpsl
shlb
add
push
cwtl
cltd
xchg
xor
mov
inc
cmp
lds
jg
stos
je
push
xor
or
aaa
rcrb
dec
add
imul
xchg
dec
or
out
push
or
addl
fistpll
fnstsw
add
dec
popf
ret
addl
into
jmp
cmpsb
sub
push
int3
dec
icebp
sub
mov
add
pop
cmp
xor
add
mov
repnz
jmp
repz
dec
lret
xor
sbb
cmp
dec
loopne
adc
roll
add
and
add
stos
jno
fucomip
add
push
inc
repnz
dec
xchg
mov
cmp
add
sbb
or
fcomps
les
mov
mov
mov
loopne
out
xlat
xor
mov
mov
pop
fwait
hlt
mov
adc
lds
stos
or
add
sbb
push
jbe
inc
xor
push
push
xor
jnp
dec
popa
sub
jp
fcoms
icebp
inc
pop
lret
or
and
repz
add
lods
iret
mov
xor
addb
filds
aad
mov
loop
rcrl
ljmp
scas
in
mov
jge
mov
jle
xor
mov
mov
add
sub
mov
loopne
and
iret
or
stos
adc
popf
add
jmp
jg,pt
sub
mov
movsl
je
and
add
mov
arpl
cmp
imul
aam
sarl
jae
sub
into
or
jge
cwtl
fiadds
hlt
in
subb
cmp
movsl
sbb
out
inc
add
xor
dec
jo
sbb
add
sub
loop
or
arpl
sbb
testl
in
roll
hlt
ret
data16
lret
push
les
popl
sbb
xchg
ret
ss
cmp
xor
sub
lds
xorb
leave
jmp
add
mov
lds
add
clc
lret
mov
cmp
push
adcb
jo
scas
jmp
push
sub
and
sbb
out
add
incb
lret
filds
or
add
add
inc
lods
dec
add
xor
add
in
out
pop
add
fdivs
lret
mov
mov
test
call
xchg
cli
mov
adcb
lds
add
addps
bnd
cmp
jecxz
popf
or
cmp
gs
es
popa
add
lahf
pop
and
inc
xchg
dec
add
stos
pop
int3
loope
pusha
and
ljmp
out
push
popl
mov
mov
sub
jns
rolb
shl
add
inc
push
scas
add
testl
cmp
sub
inc
cmpsb
clc
push
or
mov
leave
xlat
adc
pop
mov
jecxz
cltd
push
pop
or
sub
mov
rol
cs
jb
clc
adc
repz
jae
jmp
adc
inc
in
inc
loop
add
mov
xchg
add
cmc
mov
sub
jo
in
xor
jmp
jbe
pop
fisubs
test
fnstcw
daa
imul
pop
pop
and
or
cmp
ja
arpl
sbb
sbbl
xchg
inc
gs
cmp
pop
movsl
addr16
inc
daa
fdivs
pop
xchg
adc
mov
fildl
jecxz
cmp
jl
add
mov
push
cltd
incl
shll
sub
jns
out
cmpsl
jmp
jnp
add
adc
dec
shlb
repnz
shrl
xchg
pop
lock
pushf
add
push
fbstp
movsl
inc
sbb
outsl
into
lahf
ret
rcrb
sub
ffreep
aaa
insl
nop
popa
add
pop
stos
and
xorb
xor
add
out
sbb
dec
jnp
add
ficompl
lds
cmc
in
add
dec
pop
icebp
loopne
add
imul
arpl
sbb
cmp
out
pop
out
push
in
add
movsl
xor
dec
and
lods
pop
mov
adc
sbb
dec
mulb
test
ret
add
jne
mov
add
adc
mov
add
xchg
adc
je
xchg
mov
out
leave
push
sarl
cmp
test
cmc
inc
push
scas
sub
mov
mov
aas
pop
lock
jg
sti
add
ljmp
xor
rolb
js
pop
xchg
fisttpll
cmp
aaa
jg
add
fcomps
cmp
push
or
in
test
add
pop
add
adc
xchg
dec
gs
jg
pop
add
mov
dec
movsl
add
push
pusha
lock
mov
push
hlt
push
call
adc
aaa
xchg
outsl
popa
sti
cmp
repz
push
insl
add
adc
mov
sbb
cmp
into
cmpsl
shlb
lods
mov
jle
add
pop
push
loope
pop
lret
push
andl
stos
mov
mov
popa
inc
loope
jle
xchg
inc
pusha
outsl
mov
and
mov
shll
nop
test
xorb
add
and
sbb
ss
inc
sti
in
aam
xchg
decl
sbb
add
add
lods
inc
enter
xchg
into
push
cs
or
mov
jmp
lcall
fnstcw
push
leave
rorl
push
scas
stos
adcl
and
fldcw
add
lcall
inc
js
adc
jb
xor
push
in
pop
xlat
adc
lret
nop
xor
or
jne
xor
inc
jns
or
jmp
repz
add
jae
sbb
icebp
insb
xchg
add
and
push
es
or
add
push
js
int3
and
in
dec
int
ficoml
in
add
in
cmc
stos
push
fisubrs
inc
cltd
mov
add
loop
ja
xlat
pusha
shll
or
or
add
jae
add
or
enter
jp
add
mov
add
subl
jg
icebp
repnz
sub
in
dec
jl
sub
out
add
xor
jmp
daa
loope
cmp
mov
int
lods
out
cli
movsl
add
cmp
cli
xor
hlt
test
push
lds
xchg
jno
push
dec
imul
push
sbb
mov
add
and
sti
test
push
inc
movd
fistpll
je
int3
xchg
sbb
adc
add
xor
push
sarl
lds
or
push
add
mov
or
add
sub
add
inc
pop
adc
xchg
movsb
dec
and
pop
jmp
cs
mov
bound
neg
mov
int
jg
icebp
add
mov
xor
push
sbbb
mov
add
lret
add
jp
incl
cwtl
fs
add
mov
in
mov
clc
xchg
jb
add
jns
shrb
aam
int3
sub
fmuls
xchg
cmp
and
xor
in
push
ror
push
jno
ss
fisubs
fadds
add
in
popf
aas
aas
scas
dec
jae
sahf
and
pop
pop
test
add
or
out
lea
cmpsb
lods
loope
cs
mov
ja
flds
out
divb
gs
jns
add
mov
arpl
pusha
mov
pop
sub
mov
push
ja
push
lea
dec
mov
lahf
sub
add
dec
aad
jo
pop
mov
pop
pop
shll
loopne
inc
rcr
adc
movsb
add
and
push
add
notl
jae
fadds
push
leave
pop
addr16
stos
jo
mov
add
std
inc
scas
in
push
cmp
inc
andb
jge
movsl
stos
jae
repnz
fnsave
movsb
sbb
add
test
jg
cmp
mov
sbb
addb
inc
pop
inc
mov
fmulp
cmp
cs
iret
xor
mov
dec
lret
insb
cmp
int
pop
cmp
mov
ds
adc
iret
inc
add
mov
roll
xor
add
mov
je
xor
in
add
add
xchg
jo
aas
loope
add
push
addl
pop
sbb
or
add
cmp
push
and
add
sbb
cmp
clc
andb
cmp
sbb
adc
loopne
repz
data16
inc
add
xchg
sti
decb
dec
xchg
pop
pushf
dec
or
sub
mov
movsl
xor
jbe
add
pop
pop
jne
rcll
mov
imul
fsubrs
call
inc
xor
xor
rclb
pop
mov
adc
adc
pop
jno
or
add
push
jmp
lret
sub
in
fisubs
xchg
orl
sbb
lock
cltd
int
add
jb
movsb
mov
xor
psubsb
pop
add
mov
dec
adc
xor
inc
inc
sbb
jnp,pt
cmp
jmp
mov
mov
int
xlat
dec
jae
js
fwait
add
stos
movl
xchg
mov
pop
shll
jecxz
fnclex
enter
add
dec
ds
mov
jg
xor
out
idivb
in
test
xchg
and
loop
xor
sbb
jbe
xorb
jnp
add
popa
rolb
add
inc
insl
xor
daa
xchg
add
push
sub
dec
add
dec
mov
add
pop
cmpl
clc
or
popa
insl
ja
add
and
in
cld
pusha
cs
aas
pop
cmp
push
dec
movsl
cmpsl
insl
ds
add
fs
ja
add
xchg
adc
sub
out
add
sahf
xor
pushf
mov
add
and
popa
mov
addr16
pop
jl
stc
int3
push
ljmp
cltd
inc
leave
sub
idivl
push
cmc
loope
loopne
aam
cwtl
push
cld
pop
ljmp
fs
cltd
add
or
pushf
dec
xchg
add
push
cmpsl
adc
mov
push
loop
add
loopne
clc
mov
mov
xchg
inc
or
xchg
mov
jg
aam
rorl
lods
ret
pop
clc
addl
add
mov
mov
ja
shlb
fdivrl
arpl
add
fucomi
shlb
call
movsl
pushf
add
push
mov
jns
jne
jnp
nop
daa
add
cmp
cmc
add
jbe
xchg
ss
aas
js
lods
scas
add
icebp
xchg
movsl
mov
sbb
int3
dec
rolb
es
xchg
add
sub
pop
or
mov
mov
lcall
sarb
cmp
addl
imul
cwtl
addb
outsb
movsl
aas
xchg
push
stc
in
push
shl
in
or
add
sbb
ret
push
mov
in
in
cwtl
xor
and
pusha
sti
push
enter
popa
cmc
add
jecxz
dec
bound
out
mov
test
mov
or
adc
add
sbb
fidivs
push
shrb
orl
cmovge
or
mov
sbb
adc
and
inc
f2xm1
pop
mov
dec
xchg
push
stc
sti
clc
jg
pop
es
daa
shlb
dec
call
test
lds
sbb
push
js
clc
add
xorb
jns
clc
adc
repz
or
add
fidivl
pushl
pop
stos
inc
in
test
sarl
or
fidivs
add
or
jg
js
pop
cmp
add
add
or
mov
rcr
out
gs
inc
mov
add
or
mov
cmp
or
sbb
sub
les
xchg
dec
cwtl
fsts
pop
cmc
pop
mov
pop
mov
xchg
mov
sub
in
cmp
insb
mov
nop
and
xor
pop
or
lods
mov
add
out
xchg
int
pusha
inc
pusha
cmpl
cmc
iret
in
adc
sbb
add
fnstcw
movsl
jne
sub
cmp
or
out
xor
sub
jbe
or
xor
testb
cli
mov
add
pop
lcall
mov
push
sbb
sub
inc
inc
pop
je
imul
sub
cltd
cmp
sahf
mov
cwtl
add
sub
shr
mov
cmp
sbb
mov
loopne
sub
stos
mov
icebp
addr16
push
xor
es
jb
or
or
add
mov
push
jae
pop
push
inc
mov
in
mov
mov
ss
stos
pop
je
xchg
sbbb
lds
push
dec
push
adc
aam
xchg
test
test
adc
cmp
enter
lods
adc
inc
sbb
inc
jg
push
sub
rcr
cld
inc
add
pop
or
ds
enter
push
inc
nop
dec
dec
add
cmc
popf
jae
aaa
xchg
jg
rcll
sbb
mov
add
addb
add
push
and
jge
cmp
add
test
add
jns
movsl
add
ds
jb
cmpl
das
xor
addr16
and
lea
clc
loop
adc
xor
lret
inc
mov
jge
mov
push
add
sub
add
mov
repz
add
insb
aaa
sbb
add
aam
mov
mov
dec
pop
mov
xor
loopne
adc
xor
sti
adc
add
imul
das
dec
arpl
pop
ds
sub
mov
adc
incl
sbb
icebp
or
ds
loopne
add
pop
test
popa
or
add
sbb
lds
outsl
sub
in
push
xor
imul
or
adc
and
in
ret
pop
lods
gs
mov
jns
sahf
lds
adc
or
and
and
movsb
add
inc
inc
inc
cld
enter
xchg
mov
add
imul
sub
pop
stc
cmp
and
out
add
jae
or
movl
add
mov
mov
imul
ja
rolb
cs
sti
dec
xor
subb
mov
loope
xor
mov
outsb
mov
dec
daa
inc
mov
push
dec
data16
adc
aas
sub
mov
xor
cmp
loop
movsb
sbb
add
dec
bnd
inc
mov
mov
inc
pushf
add
adc
add
in
test
inc
push
call
cwtl
mov
and
push
xchg
add
pop
inc
lcall
lock
sub
and
lret
inc
add
jno
mov
add
popa
mov
push
inc
fsubs
pop
insb
arpl
inc
nop
xor
es
fistpl
rorb
insb
mov
inc
subl
push
sbb
cmpb
mov
xor
mov
add
addb
out
fdivrs
add
sub
pop
add
mov
cmpxchg
add
fwait
mov
and
cmp
jns
rcrl
add
cli
pop
mov
xor
pop
dec
loop
cltd
sub
rclb
mov
mov
or
mov
jns
cmp
movsl
xor
fbld
adc
push
loopne
sub
adc
arpl
nop
test
dec
push
or
int3
pusha
mov
nop
jo
cmp
outsl
aad
xchg
test
jl
clc
add
xchg
bnd
nop
add
jle
loopne
xor
add
xchg
add
inc
xor
mov
or
mov
int
cmpsb
iret
pusha
js
rcll
pop
fdivs
push
lea
adc
subb
push
xor
pop
push
out
mov
enter
mov
lds
or
jmp
jg
pusha
out
icebp
add
or
pop
mov
insl
aaa
cld
add
cmp
cmp
and
clc
mov
pop
testl
mov
mov
loopne
lahf
test
fsubrp
inc
std
stos
sub
mov
cltd
add
add
insb
lcall
or
shrb
sbb
in
add
inc
push
add
ret
dec
sub
add
sub
cmp
scas
cld
mov
aam
mov
test
and
arpl
mov
fwait
sub
roll
pop
lahf
rol
jo
sbb
xor
inc
jae
xchg
jo
lcall
mov
push
enter
ljmp
pushf
sbb
pop
sub
dec
les
add
add
out
into
call
jbe
xor
lods
ja
movsl
clc
lret
pop
ret
add
orl
sti
movb
daa
sbb
adc
sbb
xchg
cwtl
cmp
stos
clc
and
addl
ret
jl
test
movl
push
mov
add
push
or
sti
pop
rcrl
out
aam
sbb
insl
add
aas
xor
cwtl
popa
adc
add
out
jno
push
xor
inc
xor
and
sbb
mov
push
dec
adc
mov
iret
jo
movsb
rorb
push
icebp
add
mov
add
jmp
ror
test
cmp
adc
mov
or
mulb
cmpsb
and
add
jae
lods
add
lea
cmp
xor
test
add
negb
stos
pop
cwtl
cwtl
add
jns
xchg
lret
cwtl
repz
std
xchg
hlt
add
push
in
pop
lret
add
sarb
mov
data16
cmp
das
sbbb
sbb
rorl
xchg
inc
pusha
mov
cmp
rcrl
aaa
dec
daa
aad
shrb
dec
pop
add
add
cmp
jle
adc
mov
neg
and
in
xchg
push
and
add
dec
and
push
xor
incl
add
aam
orl
in
add
dec
aad
pop
add
mov
and
sbb
sbbl
std
in
outsl
add
int3
inc
sub
mov
insl
mov
clc
add
adc
add
mov
mov
mov
shl
add
or
and
cmp
adc
scas
add
sti
mov
call
cmc
mov
popa
pop
mov
add
push
or
movsl
add
pusha
faddl
add
add
ret
scas
fildl
std
sti
imull
cli
cld
xlat
add
xor
inc
mov
into
push
xchg
or
xor
lea
adc
push
mov
decl
add
sbb
das
jnp
pop
movsb
jae
add
pop
xchg
popa
and
cs
aam
pop
xor
sub
sbb
dec
mov
and
insl
inc
cmp
add
mov
xchg
cltd
cs
inc
pop
pop
testb
pop
inc
aas
sbb
cmp
cmp
insb
sub
add
and
jp
fimuls
cmp
cmp
repz
cld
push
mov
inc
sbb
lahf
sbb
scas
jecxz
or
push
cs
add
inc
mov
out
lods
repnz
pop
lret
dec
in
mov
clc
enter
out
xor
add
test
mov
jle
add
push
jae
sub
mov
xor
test
cpuid
jne
add
andl
loop
add
test
xor
test
or
sbb
adc
inc
add
in
push
pop
inc
or
loop
lock
add
lcall
sub
mov
insl
aas
adc
enter
out
xor
dec
add
clc
sbb
or
mov
in
cmc
nop
jmp
add
enter
into
pop
add
push
xchg
ficomps
xchg
mov
pushf
push
lret
popa
cmp
lea
stos
hlt
mov
clc
test
pop
aam
jo
add
js
add
mov
insb
rcrl
test
sbb
mov
or
scas
sub
clc
push
add
shrb
stos
jne
cltd
fmulp
jmp
hlt
push
cmp
pop
add
adc
movl
mov
inc
popa
stos
and
ret
icebp
popl
or
ljmp
mov
lret
fld
cmp
dec
stos
loop
xchg
pop
cmp
add
cmp
aas
fwait
test
jne
add
popw
fisubs
clc
cmpsl
je
xchg
add
lahf
add
xchg
xchg
lods
and
addr16
add
repz
les
scas
add
push
aam
jns
push
jl
stc
lock
cld
aas
and
adc
sub
add
xchg
adc
adcl
or
add
jnp
or
gs
push
sub
or
xor
jmp
and
cltd
cmpsb
jo
roll
push
or
mov
insb
mov
sub
and
push
add
pusha
cwtl
and
ljmp
stc
popa
ja
and
sbb
imul
push
xor
sub
jmp
push
hlt
mov
push
sub
cmpsb
xchg
mov
mov
sub
rolb
add
xchg
test
mov
cltd
or
and
in
inc
add
xor
outsl
inc
add
pop
insl
jnp
jbe
sbb
xchg
push
cmpsl
sbb
pop
lcall
mov
lock
aaa
pusha
andb
pop
mov
int
test
push
mov
xor
mov
fldenv
push
xor
fdivrl
je
add
ja
clc
stos
xor
jb
shl
mov
add
je
sar
mov
test
cmp
sahf
inc
in
lock
adcl
lods
push
dec
pusha
shl
push
in
xor
rorl
xor
or
jns
pop
push
inc
dec
lods
cmp
outsb
test
loopne
or
fiadds
out
adc
jb
addr16
xor
pop
lea
incl
test
jg
add
testb
add
mov
pop
imul
out
in
push
cld
jmp
jbe
pop
subb
aaa
in
fmull
add
or
into
fdivrl
sub
inc
push
in
push
dec
add
xor
leave
jbe
outsb
scas
push
test
loopne
mov
jo
je
mov
pop
add
sub
push
mov
add
sbb
hlt
cmpsl
insb
mov
test
inc
popf
jns
push
inc
rclb
add
or
pop
aam
pop
xor
cmpsb
icebp
fs
adc
ja
rorb
add
pop
push
sbbl
js
loop
xorl
jbe
test
arpl
sbb
pop
in
sbb
pop
push
ljmp
testb
sahf
or
cmp
add
jo
and
stc
pop
call
inc
nop
sbb
jae
jl
jg
add
mov
test
mov
nop
mov
push
lods
xor
je
imul
stos
les
mov
xchg
sahf
sub
and
test
out
pop
es
jo
add
sub
inc
jle
or
cmp
adc
xchg
sti
xchg
mov
daa
shll
adc
add
push
and
add
mov
pop
and
mov
add
sub
sub
repz
icebp
es
data16
out
push
and
stc
fidivs
movsb
std
ljmp
inc
mov
jo
addr16
mov
add
dec
xor
stos
or
mov
xchg
int3
dec
mov
std
sbb
mov
sahf
pop
movsb
cmpb
sbb
sbb
shrb
shlb
loopne
iret
xchg
mov
mov
mov
scas
add
jle
ds
lahf
and
dec
aas
in
xor
cwtl
and
test
pop
ret
jp
inc
aas
test
and
push
mov
cmp
inc
adc
mov
ror
add
jmp
rol
ja
call
cmp
push
or
bound
pushf
or
add
ret
ljmp
xchg
add
ret
push
imul
imul
mov
movsb
jbe
xchg
mov
and
sahf
sbb
sub
cld
pop
add
ret
loope
mull
sub
adc
jp
subl
add
leave
add
inc
hlt
fcomip
inc
jge
pop
fcomps
fs
paddsb
cli
and
push
push
mov
cs
cwtl
ljmp
pushf
test
loopne
aam
mov
test
jno
jl
rolb
inc
movsb
aam
add
mov
ret
scas
mov
and
mov
sub
and
add
mov
mov
ds
cld
add
icebp
add
aaa
jecxz
je
mov
not
adc
mov
add
xor
cmpsl
xchg
loope
push
pop
ret
movsl
out
xor
pop
icebp
inc
push
or
test
push
jmp
xrelease
jl
movsb
sbb
mov
lret
jo
add
add
jmp
cmp
or
jle
jge
cmp
imul
add
je
jl
or
test
hlt
xor
insl
push
sahf
add
rcrb
movsb
out
cwtl
cmp
imull
add
test
sbb
cwtl
loopne
outsb
xor
in
add
mov
ss
ret
add
movsb
or
sbb
test
adc
jnp
dec
repnz
ss
aas
inc
iret
addb
add
xchg
sub
cmp
inc
push
add
adc
or
arpl
pop
test
pushf
xchg
inc
pop
jp
add
sahf
cmp
pop
and
sub
add
xorl
add
xor
jmp
add
leave
mov
aad
pop
lea
test
das
stc
sub
aas
pusha
jge
es
inc
jne
push
pop
sbb
mov
add
lods
test
pop
test
inc
xor
inc
rcrl
mov
call
cmp
jb
cwtl
xchg
bound
call
xor
repnz
add
fidivs
mov
lea
pushf
dec
test
scas
add
dec
loop
or
sbb
add
adc
xchg
sarl
sbb
mov
add
fs
sar
fchs
add
inc
lds
adc
mov
mov
sbb
mov
bound
ror
jg
loopne
mov
pop
xchg
fsubrs
sub
addb
out
mov
mov
adc
shrb
jl
fmull
mov
inc
sbb
out
lock
nop
jge
pusha
cmpl
add
and
add
sub
jl
jp
cmp
sbb
aaa
add
mov
jo
out
add
rorb
and
jnp
push
inc
fisubs
sbb
cmp
nop
mov
sub
ljmp
cmp
filds
push
inc
jo
mov
loopne
les
outsl
mov
sbb
or
add
or
xchg
movsb
aaa
fwait
ljmp
dec
xchg
jecxz
sbb
xor
and
ljmp
addr16
jbe
fucomi
push
ds
lret
dec
cmp
adc
movsl
dec
shll
aam
fs
aam
out
sbb
jo
fistpl
test
flds
add
inc
xor
jo
or
lahf
add
shrb
adc
and
add
stos
cmp
xor
inc
mov
jl
loope
jmp
or
push
mov
add
shlb
repnz
mov
push
cmp
dec
fwait
je
stc
xchg
pop
adc
subb
setae
sbb
add
imul
add
add
mov
push
add
cmp
xchg
and
ficompl
test
add
imul
stos
aas
sarl
dec
inc
aad
stc
pop
and
add
outsl
lods
and
cmp
into
cmp
mov
sub
pop
mov
mov
jecxz
fbld
pop
add
pop
mov
jl
adc
xchg
inc
adc
imul
sbb
popa
mov
add
cmp
jo
call
add
xchg
add
fists
lahf
push
int3
sub
fmul
pop
clc
addb
lret
lret
ss
sahf
shlb
insl
mov
add
std
call
fidivs
push
repnz
add
mov
mov
sbb
mov
inc
or
xor
add
push
push
inc
cmp
and
loope
das
push
add
sub
push
or
mov
std
sbb
pop
cld
dec
lahf
or
sbb
cmp
jae
fxch
mov
std
cltd
cmp
pop
mov
add
mov
jp
add
xor
inc
sub
adc
add
test
jbe
add
repnz
inc
or
in
and
jo
add
fidivl
mov
add
jno
adc
lock
mov
sbb
fiadds
out
pop
or
rorl
pop
pop
iret
icebp
imul
jns
or
dec
add
push
xchg
and
or
repz
pop
jae
push
adc
sbb
out
pop
cltd
add
mov
sbb
xor
cmp
push
ss
jne
add
shrl
movsb
dec
inc
lods
adc
stos
xor
pop
movsl
lret
pop
mov
xor
inc
or
sbb
lret
add
mov
add
mov
testb
cmpsl
jp
push
jmp
loope
sarl
out
addb
pusha
repnz
add
mov
mov
xor
pop
push
call
ds
xchg
repnz
pop
or
add
push
cmp
adcb
inc
jbe
adc
cmp
push
enter
pop
pop
ss
stos
test
cli
ljmp
mov
in
test
add
int3
fs
pop
jo
inc
inc
loop
jb
test
out
clc
jl
fwait
dec
sbb
push
roll
mov
inc
and
movl
adc
sahf
out
jno
add
adc
data16
popa
add
jp
lock
out
add
adc
es
jmp
js
pop
cli
inc
add
or
cld
aad
add
jne
mov
orb
icebp
mov
cmpb
imul
cwtl
pop
add
mov
aam
orb
pusha
sub
mov
jg
int
in
xor
fwait
xlat
test
mov
loopne
add
dec
ljmp
int3
testb
jno
push
orl
pop
sar
flds
adc
xchg
jae
fsubrs
popf
jg
outsb
adc
pop
jno
and
addb
outsl
dec
stos
in
mov
repz
mov
jp
outsb
mov
out
ljmp
int
test
sbb
cmpsb
push
sub
insl
ret
add
iret
adc
cs
xor
dec
xor
je
test
mov
xor
in
aaa
jbe
mov
clc
and
sub
xchg
xchg
add
push
cmp
out
mov
pop
notl
aam
repz
xor
push
xor
dec
sbb
push
ljmp
mov
pop
stos
pop
aaa
and
mov
add
subb
mov
hlt
ja
mov
sbb
jne
push
pop
push
sbb
out
fstpl
push
lahf
and
pop
xchg
test
pop
add
fcoml
or
add
test
mov
inc
jmp
das
mov
dec
sbb
imul
fwait
add
jmp
cld
jmp
add
adc
bound
xchg
scas
lret
es
sbb
xchg
add
mov
les
sbb
mov
ret
test
std
insb
cs
popf
jmp
out
push
xchg
add
test
mov
mov
std
inc
push
add
call
lea
dec
call
loop
add
out
inc
cmp
roll
gs
pop
aam
xchg
flds
sub
in
inc
mov
out
push
ds
xchg
les
mov
pop
push
xor
adc
insl
test
fwait
sbb
bswap
mov
inc
xchg
pusha
jmp
jge
mov
sub
or
ds
add
stc
je
add
xchg
mov
fcoml
lods
mov
mov
pop
hlt
xchg
and
in
movsb
fisubrl
add
sub
mov
push
fs
add
aas
cmc
fildl
push
hlt
leave
add
add
stos
or
cmp
out
inc
mov
sbb
mov
bound
fs
add
xchg
sub
jg
sbb
add
xor
add
mov
pushf
notb
scas
or
add
mov
movsb
dec
jg
add
lret
mov
popa
jmp
cs
sahf
fidivrl
jns
or
add
gs
pop
push
add
lock
sbb
or
adc
test
into
add
cld
iret
mov
and
sub
repnz
add
in
push
push
add
call
xor
cmp
roll
mov
pop
iret
out
das
add
repz
push
and
or
js
mov
call
add
mov
dec
sbb
jg
inc
shlb
divl
pop
xor
ds
adcb
lods
cmp
add
mov
mov
push
fimull
pop
add
jno
lcall
pop
sar
push
add
jae
pop
add
add
fdivr
sub
js
add
or
ss
and
jl
and
shl
das
sbbb
repnz
sub
lcall
inc
loop
jge
push
inc
das
leave
andl
pop
xor
xchg
pop
daa
clc
sbb
ljmp
mov
mov
rcr
shr
add
hlt
fcmovnu
add
adc
xor
notb
add
push
push
dec
mov
sbb
ds
add
adc
fdivr
sbb
dec
lea
lods
mov
pushf
flds
adc
in
lock
or
dec
add
fsub
repz
add
inc
in
push
repnz
lock
add
bound
ret
jl
sbb
pop
or
std
inc
dec
lock
in
pop
push
rcr
mov
cmp
sub
aam
jb
mov
add
popa
add
cmp
xchg
sub
mov
push
pop
div
cwtl
or
pop
hlt
mov
jns
shrb
add
push
mov
push
mov
adc
xor
dec
jle
inc
pop
jmp
lcall
fucom
or
dec
repnz
jmp
shlb
xlat
jb
mov
xor
lret
into
sbb
out
or
repnz
add
and
jp
jl
andb
jmp
les
or
mov
flds
inc
sbb
dec
pshufw
push
xchg
dec
mov
mov
add
dec
test
rolb
inc
loop
pop
data16
lock
inc
push
rcrb
push
pop
push
ljmp
xor
adc
inc
mov
inc
cmpsb
insb
scas
add
push
stc
lcall
push
jb
mov
xor
pop
adc
dec
pushf
test
mov
push
subb
fdivrl
das
mov
movsb
inc
add
add
out
stos
jae
mov
add
pop
push
cld
scas
add
fistpl
bound
jg
scas
or
in
xchg
add
nop
jnp
add
aad
add
loopne
add
orb
pop
int
mov
add
popa
shlb
add
stc
mov
fsubs
int
lea
add
or
add
push
cwtl
dec
xchg
or
pop
incl
gs
mov
repnz
popf
leave
jo
jbe
xchg
xorl
in
rcrb
inc
pusha
into
lock
mov
sub
dec
and
add
jl
shlb
dec
les
add
and
mov
inc
pop
adcb
std
lods
cmp
mov
and
pop
dec
cwtl
xor
lods
lock
mov
jl
push
push
add
incb
dec
jmp
cmpsb
addl
test
adc
clc
pop
mov
push
sti
stc
add
push
repz
aas
jbe
lret
xchg
push
add
pop
lock
hlt
push
pusha
orl
mov
clc
cmp
push
mov
shrb
mov
mov
cli
sub
adc
add
xchg
fcomps
shll
popf
clc
pop
scas
add
jnp
jl
sub
sub
add
imul
lret
or
pop
or
pshufb
pop
fistps
jle
mov
mov
lock
lods
insb
call
xor
mov
and
add
mov
pop
cmp
pop
es
mov
sub
add
lret
cwtl
jg
sub
jp
movsl
and
repnz
dec
je
adc
and
or
mulb
push
sub
mov
and
jns
mov
adcb
daa
pop
enter
mov
aad
jns
mov
outsb
sub
or
add
sub
cmp
push
push
daa
mov
adc
rcrl
sbb
sub
popa
scas
gs
mov
jne
cmp
or
add
arpl
xchg
jb
add
punpcklwd
ss
add
mov
sbb
xchg
jb
add
cmp
test
mov
cli
lret
fwait
jns
pop
cli
pop
aas
dec
jno
pushl
into
add
mov
mov
out
jns
je
add
shr
test
es
pop
sahf
hlt
dec
xchg
add
shll
add
mov
push
out
mov
xchg
lret
sub
mov
or
or
addb
and
add
xchg
subl
pop
mov
outsl
lahf
movsb
testl
stc
or
leave
pop
xor
into
loopne
add
int
inc
movsl
jb
rolb
and
aad
aam
cmp
mov
mov
addl
fdivl
in
add
push
dec
pop
cmp
js
ret
int3
xor
push
ljmp
fdivs
outsb
pop
test
in
add
ds
insl
add
popf
push
nop
sub
xchg
jle
in
push
in
jl
loope
adc
add
loopne
subb
cmp
mov
insb
lret
dec
add
or
incl
clc
jb
dec
push
add
in
aas
push
mov
jnp
nop
hlt
pushl
pop
ss
add
dec
push
and
add
jg
adc
add
mov
push
imul
mov
clc
add
inc
dec
cmp
sbb
sahf
push
icebp
jb
dec
inc
bnd
pop
arpl
or
in
add
clc
add
out
ljmp
jne
mov
psubw
sub
sbb
jbe
loopne
or
roll
fnstsw
adc
lock
mov
mov
sbb
loopne
add
lahf
inc
loopne
pushf
add
lock
in
push
fs
xor
or
add
imul
jnp
mov
shlb
out
add
pop
cmp
pop
movsl
pop
or
cmp
icebp
sbb
jb
faddl
add
mov
or
push
outsl
clc
pop
add
xchg
inc
inc
mov
inc
fwait
add
loope
dec
add
in
jecxz
add
fisubrs
sbb
inc
add
jp
ds
mov
jne
testl
cmp
sti
clc
bound
xchg
sar
pop
outsb
sahf
sbb
movsb
xchg
pusha
loop
inc
cmc
pop
fidivl
or
mov
jle
clc
inc
pusha
inc
lods
test
pop
add
mov
push
cmp
add
mov
leave
mov
repz
andl
pop
cwtl
hlt
test
pop
jo
std
mov
xor
pushf
add
inc
push
pushf
psubw
inc
push
into
lret
jl
jo
sub
lret
mov
sbb
xor
cld
adc
push
dec
add
lods
testl
add
iret
sbb
movb
or
xchg
out
popa
sub
jp
cmp
adc
push
iret
pushf
push
xchg
jnp
les
out
adc
mov
add
mov
es
sbb
bswap
xchg
iret
xchg
sub
cmp
push
add
addb
pop
cmp
add
xor
data16
jb
fwait
andl
roll
lock
push
test
int
inc
jb
mov
fs
popf
mov
and
fsubp
xchg
stc
add
xchg
jle
add
shll
or
fmull
insb
jge
mov
leave
add
aas
test
add
mov
add
sbb
jecxz
leave
dec
rolb
popa
inc
xchg
insl
jnp
add
push
sti
add
pop
mov
add
add
add
ret
mov
xchg
movsl
push
sbb
or
pop
add
ret
popa
mov
sbb
es
jb
add
cmp
or
adc
pusha
mov
mov
cmp
push
add
sbbl
sarl
pop
mov
or
lods
inc
dec
cmp
push
call
dec
add
js
dec
fimuls
fs
cmp
dec
hlt
std
adc
pop
aaa
shrb
and
imul
cmp
jae
sahf
push
loopne
cs
pop
es
inc
add
jae
add
push
shlb
leave
add
cmpsb
mov
mov
add
std
incl
mov
and
mov
push
add
imul
sub
add
xor
dec
xchg
and
add
push
or
add
stos
jnp
cmpb
and
jno
cmp
cmp
inc
add
cmp
aam
add
in
sub
scas
scas
pusha
add
sbb
aas
add
orb
mov
pop
add
pop
addr16
aam
cli
pop
jecxz
test
push
xor
aaa
jge
push
mov
jmp
aas
rorl
sbb
sub
test
cmpsl
fistps
inc
aas
push
add
icebp
push
inc
add
pop
adc
sahf
mov
cmp
je
xor
mov
jp
pop
xchg
jecxz
sarb
sub
js
add
addr16
aaa
push
mov
mov
fisttpll
add
and
add
add
into
fldcw
addl
xchg
pop
jecxz
mov
dec
dec
je
mov
idivl
jno
sub
enter
jb
add
cmpsl
loope
insl
or
add
repnz
add
test
pop
int
mov
push
adc
sub
pop
pop
call
adc
add
test
out
cmp
mov
insb
jl
pop
loope
add
aaa
or
out
xchg
add
jne
xor
mov
and
add
inc
or
enter
adcb
andb
fwait
imul
or
dec
sarb
dec
mov
mov
pop
sub
mov
and
sub
cmp
rcrb
add
inc
mov
adc
cmp
jge
bound
xchg
repz
dec
push
add
test
pop
add
cmp
add
cmpb
imul
pop
adc
iret
out
jl
inc
jmp
and
mov
pop
ds
add
push
sbb
jecxz
jb
add
cmc
dec
ljmp
cmpsb
stc
shrb
rclb
jmp
sbb
orl
xor
int3
fdivs
sbb
add
dec
out
xorb
dec
add
in
fadds
out
pusha
push
mov
and
jge
test
int
mov
pop
adc
ss
popa
ret
xchg
add
jp
dec
push
les
ds
xchg
fdivrl
cld
push
scas
xchg
mov
packsswb
mov
xchg
and
pusha
fisttpll
loop
jl
push
sti
notb
add
xchg
or
pop
cmp
cs
popa
xor
sub
add
lods
lahf
lcall
jae
pop
inc
sub
cmp
in
inc
jg
jl
add
out
sahf
xor
jns
ljmp
and
add
and
add
sub
adc
or
hlt
mov
and
shlb
and
dec
xabort
add
jmp
ret
xchg
outsl
xor
daa
push
hlt
mov
testl
and
adc
lcall
mov
sbb
add
adc
push
lahf
sub
pusha
cmpsb
out
ss
hlt
mov
pop
cli
xchg
popl
adc
es
push
cli
test
outsl
xor
add
cwtl
xor
add
fmull
dec
cmpsb
outsb
in
fs
add
jp
fmulp
sbb
or
test
add
hlt
add
push
test
add
shrb
inc
hlt
pop
mov
rclb
lret
add
xchg
jmp
pop
es
mov
dec
add
mov
sbb
xlat
sub
out
add
sahf
fs
push
in
es
add
xor
call
add
mov
nop
cmp
add
sbb
adc
pop
sbb
roll
stc
and
sub
ds
add
hlt
and
add
enter
push
pusha
push
out
dec
add
lods
cmp
add
and
fdivrp
hlt
add
and
xor
add
dec
mov
push
stos
dec
rclb
cli
cmpb
aas
fcoms
lock
sbb
fisttps
fdivrl
mov
rol
push
popa
mov
jmp
jecxz
sti
pushf
popf
int
in
add
out
gs
dec
cmpsl
mov
sub
mov
ret
es
or
stos
add
sbb
xor
cmp
es
mov
ret
js
sub
cmc
jle
push
in
inc
add
in
cmp
cmp
cmp
stos
subl
pop
fsts
fiaddl
mov
std
daa
pop
icebp
jl
add
insl
jnp
dec
jp
jae
pop
into
adc
aaa
push
mov
sbb
inc
jl
add
and
in
add
jno
dec
ficompl
add
jle
pushf
sbb
mov
cmp
popf
imul
scas
inc
rorb
scas
mov
iret
add
sub
insl
jle
pop
mov
add
sbb
imul
pop
mov
lock
lcall
mov
repnz
adc
cld
sub
mov
daa
dec
xchg
out
fadds
cli
lock
push
mov
scas
fistps
pop
adc
cld
aas
pop
imul
push
mov
add
arpl
cld
add
mov
mov
pusha
and
dec
lret
xchg
icebp
xchg
adc
pop
aam
test
add
xchg
mov
mov
pusha
cmp
or
and
fcomps
add
xchg
add
add
fwait
shl
nop
xchg
add
mov
movsl
push
cltd
push
or
sbb
daa
loop
ret
jl
mov
push
sub
push
pop
or
mov
mov
mov
or
and
sbb
inc
add
stos
mov
cmp
cmp
fstps
call
jbe
mov
pop
dec
xchg
outsb
aam
xor
mov
fucomip
and
lea
add
and
push
xchg
fwait
pop
cltd
pusha
popf
pop
sub
in
cwtl
and
dec
xchg
stos
sub
aam
sbb
nop
loope
scas
adcb
jo
les
in
add
adc
roll
mov
add
loopne
movaps
add
push
or
fmull
inc
loope
ret
daa
adc
inc
loopne
sub
lret
xlat
enter
add
xchg
xor
xchg
xor
pusha
nop
sti
and
mov
movsb
imul
adc
mov
jecxz
dec
loopne
pop
out
cwtl
lahf
add
mov
mov
pushf
ds
call
add
xchg
repz
stos
push
test
scas
cmp
xchg
add
and
out
outsl
js
cmpw
dec
movsl
mov
push
sbb
movsb
push
add
into
add
nop
xor
aad
pop
sub
fcmovne
jg
lea
test
aam
mov
int
add
in
inc
or
mov
push
shrl
lods
add
adc
hlt
repnz
mov
out
jne
add
outsb
lock
ljmp
add
pop
sahf
icebp
adc
mov
mov
add
mov
movl
movsb
arpl
mov
fwait
mov
mov
jl
movsl
sti
test
add
in
loope
nop
push
clc
add
cltd
jle
mov
ljmp
fsubl
lds
push
mov
adc
ljmp
popf
jecxz
mov
add
das
xor
les
aad
es
mov
insl
add
add
sahf
sub
add
xlat
pushf
cs
movsl
or
add
cld
dec
cmpsl
pop
xchg
roll
mov
fsts
and
ljmp
push
sbb
sbb
aam
or
imul
xchg
sbb
lds
fistl
jns
cmp
add
int
popl
add
jno
in
xchg
pop
mov
inc
dec
or
out
clc
add
pop
insl
int3
rorl
test
lret
loope
dec
push
inc
orb
jns
xor
addb
insl
scas
in
adc
xchg
inc
jg
push
pop
arpl
es
jo
jg
lock
mov
cmp
dec
je
int
jp
jbe
in
add
pop
bound
cmc
and
imul
or
andb
addl
push
mulb
add
xor
aam
inc
roll
andl
movsb
xchg
jecxz
fcoms
xlat
or
lods
nop
jne
inc
xchg
jnp
arpl
cmpb
sarb
adc
dec
inc
mov
lods
cwtl
inc
or
negb
and
in
popa
pusha
into
cwtl
test
ds
add
aad
popf
inc
xchg
xchg
jg
xchg
loopne
call
push
bound
cmp
cwtl
sub
in
in
call
dec
xchg
xchg
sub
add
jmp
verr
pop
out
sbb
add
adc
xchg
mov
sbb
call
rcr
iret
sbb
in
lock
jmp
inc
jecxz
mov
xor
adc
arpl
sbb
dec
lcall
lods
es
mov
ret
inc
pop
icebp
in
adcb
out
lods
addb
aas
divl
add
mov
add
pushf
xor
mov
inc
stos
sbb
add
sub
fwait
movb
nop
cmp
or
push
add
sub
shlb
pop
inc
nop
fadds
adc
push
cmp
mov
add
clc
addb
push
lods
mov
les
inc
in
and
mov
dec
jo
inc
push
add
and
fisubrs
lods
add
mov
pop
add
leave
mov
sub
push
inc
inc
addr16
jge
xchg
hlt
cmpsl
push
add
jle
xchg
pop
add
mov
mov
mov
in
cltd
stos
fcomps
xchg
add
rolb
scas
add
pop
data16
add
lea
push
cmp
cmp
pop
sbb
push
fsubp
cli
rorl
add
xlat
int
push
pop
mov
shr
sbb
push
pop
nop
arpl
mov
mov
inc
out
nop
iret
sbb
add
adc
and
xor
adc
dec
fstpt
jae
cmp
mov
cmpsl
sarl
add
or
cmc
gs
cmpl
mov
xchg
or
add
out
mov
mov
movsb
jb,pn
add
int3
outsl
das
add
mov
add
mov
ds
pop
lods
jno
add
xchg
scas
fcoml
or
add
add
xor
inc
popf
inc
sub
jg
mov
movl
sub
iret
and
dec
pop
pop
dec
inc
in
adc
add
mov
add
add
push
rclb
dec
add
jle
in
inc
mov
push
out
push
out
enter
repz
lods
inc
pop
adc
add
stos
jl
add
add
mov
cmp
int
in
stc
xor
popf
out
xchg
sti
dec
push
and
mov
cmpb
pusha
pusha
mov
add
cmc
popf
xchg
mov
scas
add
out
cmpsl
push
cmpb
sub
lods
or
pop
lahf
add
mov
cmp
jae
mov
dec
ret
add
mov
adc
mov
mov
repnz
scas
js
ret
lds
inc
push
mov
in
mov
out
call
push
add
cli
cmp
cmp
outsl
mov
xor
insl
shlb
cli
jp
dec
mov
add
lcall
add
loopne
popa
mov
into
jg
sbb
add
or
add
pop
sub
jnp
pop
stc
add
adc
insb
mov
mov
mov
iret
add
popf
xchg
in
pop
jg
sbb
leave
in
divb
mov
hlt
popa
dec
arpl
aaa
add
push
into
cmp
pushl
clc
mov
jmp
add
dec
test
mov
aam
add
stos
inc
push
enter
cmp
mov
les
pushf
add
inc
mov
aaa
mov
lds
loopne
or
add
popf
icebp
mov
rclb
adc
xor
push
mov
clc
imul
or
ret
es
lea
mov
fcoml
inc
out
xchg
in
icebp
add
mov
inc
add
out
fs
aas
fsubr
fwait
push
mov
imul
insb
pop
xchg
in
add
add
in
fdivs
fildl
dec
call
mov
shl
push
xchg
mov
sub
aas
fstps
xchg
add
sahf
lods
lcall
adc
sub
or
xorb
cmp
adc
ss
loopne
fisttpl
test
rorb
jns
add
sbb
sub
add
lahf
sub
imul
add
inc
addr16
mov
cmpsl
cmp
aad
loopne
out
dec
adc
inc
sahf
in
xchg
test
insb
sbb
cmovbe
add
je
rorl
and
mov
adc
add
sub
push
data16
lret
adc
cmp
add
mov
cwtl
sbb
int
scas
push
mov
xor
mov
andl
pop
xchg
inc
add
mov
inc
test
dec
add
jb
fidivl
mov
inc
imull
add
add
pop
sbb
cs
lea
add
rol
inc
push
xor
or
mov
jp
mov
xchg
or
xor
xor
add
ja
or
es
pop
rolb
dec
fwait
pop
movl
add
popa
gs
test
inc
dec
xchg
cmpxchg
in
dec
fs
mov
dec
add
mov
loop
jle
pushf
fcmovb
addr16
cmp
aas
mov
xor
out
sti
sbb
xor
xchg
popa
ret
add
pop
push
popf
dec
jge
sub
or
sti
push
add
insl
xchg
mov
adc
ja
mov
insb
mov
stc
inc
clc
roll
mov
cmpb
mov
shlb
loopne
dec
rolb
push
mov
stc
repz
mov
dec
shrl
or
ret
inc
adc
jns
jbe
jge
xor
imull
jg
mov
add
jno
mov
scas
sub
jno
setp
add
fdivl
jo
add
mov
mov
ss
pop
sub
sub
cmp
add
add
sahf
shll
and
add
pop
test
or
fisttpll
push
cld
adc
add
mov
add
pop
jno
loope
shlb
cwtl
jbe
push
dec
jg
add
sahf
scas
je
mov
xchg
popf
inc
adc
mov
mov
inc
jbe
xchg
test
shll
je
out
xor
cwtl
inc
add
push
out
push
popf
in
ret
pop
jecxz
movl
aaa
push
pusha
fucom
mov
pop
add
jp
outsb
sbb
inc
jo
or
insb
mov
cmpsb
dec
sets
imulb
sahf
push
mov
add
jae
bound
ret
je
pusha
call
iret
jo
gs
jae
xchg
dec
add
in
push
test
dec
fwait
shlb
daa
outsb
mov
push
pop
pop
data16
mov
pop
pop
testb
pop
cmp
enter
repnz
inc
pop
movl
xchg
adc
andb
lea
mov
aaa
sar
add
add
movsl
sub
ds
je
enter
sub
sti
mov
jg
or
cmp
rol
fildl
mov
fiaddl
ljmp
add
fsubr
jg
enter
add
cmpsl
inc
jge
jne
enter
mov
inc
stos
mov
and
mov
insb
shlb
cli
sbbb
and
loope
add
leave
int3
sarb
test
es
divps
xchg
add
sub
xchg
andl
mov
add
jp
fbld
movsl
add
add
aaa
fs
fwait
mov
jb,pn
dec
add
fcomps
arpl
inc
in
sub
adc
mov
lods
jo
out
add
push
or
je
cmpsb
mov
and
je
pop
cmp
outsl
add
inc
or
call
mov
fidivrl
arpl
mov
das
cld
mov
pop
fadds
cmpb
and
xchg
add
es
jae
loopne
cmp
call
or
add
mov
out
dec
cmpsl
mov
les
orl
mov
in
clc
add
mov
lock
hlt
cmp
add
sarb
mov
pop
mov
pop
add
inc
insb
pushf
xor
xor
out
popf
add
ret
jno
fldenv
add
sbb
push
add
xchg
jl
lock
cwtl
push
dec
inc
nop
add
mov
sub
fstps
dec
orl
inc
pop
pushf
mov
add
lahf
out
jae
add
pop
jb
rorb
push
mov
mov
add
out
and
adc
xlat
mov
add
push
ret
add
cmp
clc
mov
jg
and
or
hlt
inc
or
call
add
arpl
cmp
mov
jle
into
pusha
insl
repz
or
mov
std
dec
stos
pop
xchg
inc
movnti
inc
mov
mov
mov
and
call
leave
pop
jl
xor
dec
xchg
addl
divl
arpl
xor
popa
movsb
loopne
and
add
pop
test
in
add
shr
mov
push
sbb
and
lea
jnp
push
test
xor
stc
into
sbb
ljmp
out
inc
shlb
push
fldlg2
sub
daa
mov
xor
rcrb
add
out
xchg
add
add
add
aad
icebp
ret
int
xchg
push
cmc
mov
xor
clc
inc
jg
in
add
fdivrs
gs
in
sub
movsb
add
add
icebp
or
jp
add
push
sbb
loopne
scas
or
inc
add
inc
dec
ret
cltd
aam
pop
pop
lcall
mov
movsl
add
lahf
dec
fsubrs
sar
addl
lret
out
jl
xchg
shll
xchg
pop
sbb
loop
add
push
popa
push
or
out
and
dec
add
adc
mov
ret
xor
mov
in
pop
stos
lock
mov
cltd
add
imul
clc
add
pop
mov
jae
call
rcl
add
jle
cmp
jno
test
test
xchg
mov
stc
add
mov
sub
jo
lock
cmp
pusha
xchg
fidivrl
push
xor
add
pop
arpl
in
and
test
sub
push
jo
lea
adc
add
insl
fisubrl
dec
inc
mov
pusha
xor
cmp
rcr
mov
mov
aaa
pop
or
cmp
pop
push
addl
cmp
xchg
add
fst
adc
in
sarb
pop
jbe
fadds
mov
nop
dec
sub
sub
jae
movsb
xor
sbb
mov
movl
mov
push
rorb
icebp
mov
mov
cmc
out
repnz
jno
mov
je
mov
add
xchg
push
outsb
add
and
jecxz
incl
push
cs
lods
aas
in
pop
out
add
mov
adc
mov
pop
or
sbb
in
dec
icebp
and
add
add
fdiv
pop
cmpl
jns
aas
jmp
jo
shlb
in
add
roll
fwait
cmc
xor
in
mov
add
jns
push
mov
mov
and
int
fadds
sub
mov
jge
add
fisubl
add
cmp
sti
std
nop
add
ds
stos
stos
shrb
sub
les
jns
adc
inc
mov
xor
popf
lock
xchg
jecxz
ljmp
pop
std
add
mov
inc
sbb
xchg
cs
mov
add
sub
idivl
mov
repnz
adc
bswap
jae
and
sti
popf
add
jo
rcr
push
and
js
add
and
test
test
sub
jecxz
add
xor
out
mov
pop
push
in
scas
adc
pop
repnz
pop
pushf
push
mov
jmp
hlt
fmull
inc
pop
loopne
sbb
push
aaa
das
push
ror
mov
mov
xchg
add
imul
add
nop
ja
add
jecxz
add
pusha
xchg
aad
mov
xor
cmp
loopne
cmc
gs
in
das
sahf
cmp
pop
movsl
jecxz
sub
add
das
std
mov
push
cmpsb
pop
add
add
lret
jge
pop
adc
pop
fwait
aas
push
sub
fmull
pop
out
pop
outsb
lods
add
add
daa
ret
sub
push
sbb
mov
jne
add
scas
test
out
add
test
adc
adc
icebp
movsb
in
out
ror
add
jge
lret
test
ficompl
std
sub
pushf
les
add
cmc
lahf
fdivs
adc
ja
add
jo
flds
add
nop
mov
add
stos
lahf
jbe
test
inc
out
lods
cwtl
test
mov
test
cmp
int3
add
idivb
je
add
out
dec
leave
dec
push
fcom
lods
add
aam
pusha
in
push
adc
sbb
add
lods
subb
pop
push
adc
pop
in
imul
popa
fiaddl
test
mov
mov
ret
mov
je
xchg
fidivl
mov
cwtl
call
mov
cmp
jno
mov
nop
dec
or
mov
ret
je
dec
adc
adc
inc
sub
or
and
inc
sbb
add
imul
insl
popa
add
rorb
mov
loopne
in
add
clc
jmp
rcrb
cmp
xor
pop
add
add
jae
mov
pop
scas
pop
add
lret
repz
ret
dec
flds
mov
mov
add
lods
fdivrs
fisubrs
enter
cmp
or
mov
scas
adc
mov
in
sub
int3
stos
cs
repnz
rcrl
push
addl
lock
out
lcall
mov
push
add
das
incb
pop
mov
addb
add
sarl
push
dec
pop
inc
add
fnstsw
rep
xor
push
out
punpcklbw
je
sbb
lock
cmp
add
fcompl
mov
xor
fistpll
sbb
imul
xchg
cld
lock
ja
loope
out
les
rcl
pop
fmuls
mov
aad
loop
xchg
ljmp
add
jg
jo
je
hlt
add
xchg
int
add
cmp
stos
xchg
in
aam
stos
add
in
xchg
negl
sub
popa
and
jmp
lds
mov
fildl
loope
sub
or
lret
fs
add
outsl
negb
add
pop
ljmp
call
sub
xchg
push
add
ret
shll
push
stos
aam
int
in
movsb
sub
mov
icebp
roll
mov
push
insl
sarb
cli
mov
fistpll
movsb
mov
cmp
sub
add
shlb
sub
imul
mov
jecxz
and
sahf
pop
add
mov
int3
bound
nop
cwtl
add
addr16
scas
call
movsb
inc
stc
nop
xor
jne
and
aaa
inc
lods
mov
jecxz
sub
fwait
data16
pop
aas
lods
xor
and
xor
stos
dec
sbb
mov
mov
cld
and
jmp
fsub
mov
int
cmpsb
inc
inc
dec
xchg
cmc
sbb
shr
pop
mov
pushf
xor
gs
mov
and
out
cltd
clc
inc
add
sbb
fnsave
fistpll
add
jo
ds
mov
stos
or
rol
cmp
cmc
add
inc
aad
jg
add
mov
jmp
roll
into
movsl
add
arpl
cmp
xchg
loopne
fnstcw
ds
pop
test
push
add
sub
rorb
dec
jg
add
lea
loopne
mov
push
test
mov
negl
xchg
lock
or
cmp
or
repnz
push
adc
mov
add
add
cmpl
add
add
jmp
add
pop
mov
mov
fistps
cmp
pop
leave
pop
pop
mov
adc
cmp
add
mov
push
pop
adc
sub
notb
xchg
sbb
add
fcoms
les
cmp
cmp
enter
mov
lods
pop
xchg
loopne
adc
add
lea
add
gs
xor
and
inc
jmp
cmp
push
cmp
loope
nop
add
lahf
sbb
fbld
adc
mov
clc
fcomp
inc
pop
add
pop
push
ja
add
dec
jne
daa
inc
xchg
hlt
xchg
andb
add
sub
and
test
pop
add
push
mov
add
mov
jns
add
jae
fldl
xor
pop
sti
sub
mov
add
stos
add
imul
pop
imul
mov
clc
pop
aas
or
leave
repz
mov
daa
xchg
push
sbb
cmp
enter
ret
push
sarb
dec
sbb
xchg
sbb
mov
add
jmp
xchg
push
add
xchg
mov
push
mov
adcl
jnp
add
inc
jle
add
pop
xchg
jp
add
mov
xchg
add
xchg
rolb
cmp
mov
insl
fwait
add
ljmp
push
cmp
xchg
pop
add
pop
cmp
aas
mov
jb
fimuls
cmp
mov
jbe
mov
outsb
mov
push
clc
push
lds
fldt
xchg
push
lret
test
push
addr16
mov
pop
out
orl
jp
std
loop
aas
xchg
push
mov
cmpsb
jmp
add
jg
in
call
lods
add
test
enter
adc
pop
or
jg
adc
cmp
mov
add
imul
add
xor
ret
sbb
aas
popa
mov
clc
stos
test
mov
add
add
jl
insl
popa
pop
jmp
add
xchg
adcl
push
add
and
inc
sbb
ljmp
mov
cs
add
dec
rolb
add
or
or
push
lahf
sbb
add
gs
popf
add
adc
lret
subb
pop
add
mov
add
dec
add
and
movlps
les
inc
add
pop
and
aas
pop
cmpsl
push
adc
jae
xchg
jmp
add
sti
jp
add
aaa
daa
mov
loop
cmp
push
jg
add
outsl
addr16
iret
jo
out
testb
xchg
jecxz
inc
pop
xor
in
inc
add
pushf
dec
mov
por
cld
mov
jae
cmpsb
pop
jle
mov
out
mov
fsubl
in
testb
fisubl
or
jae
ljmp
and
mov
out
adc
popa
ret
andl
icebp
xor
insb
cmp
and
loope
mov
inc
inc
filds
ja
cmpsl
sti
ljmp
add
into
xchg
in
cld
jns
add
shufps
mov
aam
add
pop
pop
les
hlt
add
or
jecxz
cli
add
shll
adc
ret
stos
dec
add
xor
mov
jnp
lock
add
daa
jns
je
dec
pop
pop
pop
insl
enter
xor
push
xchg
ret
mulb
clc
fdivr
add
pop
repz
cmp
cmp
push
incl
jne
out
pop
add
or
int
clc
dec
add
scas
ljmp
or
adc
pop
inc
adc
xor
and
pop
fisttps
das
jns
cmc
in
js
mul
stc
mov
sbb
cmp
dec
mov
add
push
jns
test
dec
es
sub
push
xchg
push
jo
ss
add
pusha
pop
mov
mov
mov
cmp
add
cmp
pop
inc
rol
xchg
scas
add
or
fwait
aas
jno
sub
xor
out
das
add
or
stos
pusha
nop
sub
xor
jb
add
sbb
dec
insb
xchg
add
mov
xor
pusha
or
faddl
in
pop
movsb
inc
inc
xchg
mov
ljmp
push
mov
popa
sahf
inc
cmp
mov
mov
sarb
data16
lcall
cmp
mov
cmp
adc
aas
mov
sub
cmp
imul
cmp
push
addl
in
mov
dec
mov
icebp
subb
mov
xchg
and
sbb
push
dec
cltd
mov
push
or
loope
roll
aam
sbb
xchg
xor
sbbl
lea
aad
or
std
dec
filds
int3
jbe
fwait
leave
fildl
inc
jnp
add
rcr
xchg
ffreep
mov
or
clc
insb
and
xor
add
pop
push
xorb
idivb
mov
xchg
in
ficomps
popl
lods
test
add
pop
mov
sahf
movsl
adc
inc
stc
mov
je
aas
cmp
cmpb
rorl
int
shlb
adc
push
add
mulb
jg
pop
dec
shll
dec
jns
jp
mov
ret
popa
fstpl
jnp
add
xchg
pusha
lds
aaa
jo
pop
clc
and
aad
jl
or
movsb
jp
movl
aas
sub
adc
xchg
jns
xchg
xchg
addl
sub
bnd
fildll
or
dec
jp
add
xchg
jae
in
xor
cmp
or
int
andb
test
add
or
jnp
dec
adc
add
js
ja
mov
iret
int
ret
lods
test
jns
cmp
add
pop
leave
js
icebp
pop
pop
aas
add
sbb
add
scas
mov
test
gs
pop
movsb
movl
pop
lods
or
add
test
sbb
xor
xchg
loop
mov
pusha
in
ds
or
mov
loope
adc
add
popa
add
cwtd
daa
xchg
xchg
sarb
out
sbb
add
rolb
enter
pop
dec
sbb
scas
orb
rorl
xchg
bnd
add
add
clc
mov
inc
push
inc
add
ret
outsb
call
fstl
ret
insb
ss
add
lret
scas
cmp
subl
mov
push
out
push
imul
xor
inc
add
mov
or
dec
xchg
push
mov
xchg
sub
jmp
pusha
imulb
movsl
adc
setae
jnp
dec
inc
or
lock
data16
sbb
cmp
addb
pop
scas
jae
testl
xchg
pusha
xchg
test
and
mov
fstl
js
inc
pop
push
lock
add
lret
loope
cmp
mov
sbb
pop
push
test
std
mov
jmp
dec
push
jle
les
mov
loop
mov
add
pop
push
jns
add
mov
scas
gs
pushf
or
push
out
inc
mov
mov
lcall
push
add
pop
icebp
dec
inc
or
cli
mov
in
loopne
faddl
adc
lret
add
rcrb
jae
mov
cmp
test
xchg
push
dec
lock
leave
adc
cli
jbe
or
push
fsubp
pop
inc
jns
adc
jmp
orl
and
cli
fistpl
shll
dec
out
pusha
mull
mov
daa
sub
cmp
inc
add
xor
dec
lea
push
sbb
pop
loopne
add
clc
addb
inc
xchg
enter
push
mov
rcrb
pop
push
adc
ljmp
xor
push
or
cltd
movsl
cmpsb
cmp
fptan
lock
sbb
ss
mov
xchg
add
rol
stc
add
call
pop
sub
pop
hlt
test
or
jns
inc
xchg
movsl
ret
enter
sub
nop
or
and
pop
xchg
movsb
mov
push
push
inc
adc
inc
ret
lea
sbb
adc
rolb
and
repz
sub
and
inc
cmpsl
cmp
inc
or
js
or
sub
and
inc
ret
pop
mov
ljmp
or
push
mov
stos
out
sbb
icebp
mov
notl
or
xor
jbe
mov
and
dec
inc
shlb
mov
int3
loopne
adc
or
adc
mov
adc
xchg
inc
nop
xor
jp
int3
adc
mov
inc
fmull
incw
orb
cltd
cli
and
xchg
xor
in
outsb
stc
cltd
adc
and
mov
inc
inc
not
sbb
fldt
into
stos
and
loopne
push
es
adc
inc
out
xchg
and
call
xor
pop
adc
and
subl
fistps
aaa
pop
sub
pop
mov
jmp
dec
mov
and
mov
aad
test
mov
loope
adc
push
adc
inc
xor
test
dec
cmp
dec
nop
and
mov
sbb
addr16
sub
xor
sbb
xor
out
daa
sub
aam
iret
outsb
xor
rcrl
adc
sub
cltd
adc
push
sbb
adc
xor
inc
stos
sub
mov
aad
dec
adc
outsl
add
js
sbb
lahf
and
cmpps
sub
and
mov
insb
addl
sbb
xchg
call
sub
dec
sub
mov
enter
in
xchg
cmp
xor
dec
sbb
sbb
lods
pop
test
xchg
and
adc
aas
andb
clc
adc
and
jbe
pushf
jae
rcr
xor
inc
jno
addr16
mov
sbb
loopne
loope
lock
push
je
subb
mov
adc
aam
or
adc
mov
xor
cmp
sub
hlt
jnp
lds
sub
sbb
and
xchg
mov
adc
clc
xchg
adc
hlt
call
je
dec
dec
pop
sar
push
inc
sbb
cmp
xchg
cmp
pop
je
ret
adc
cwtl
in
adc
push
test
test
xor
rorl
lret
jbe
icebp
repnz
rcll
or
leave
xor
xchg
push
les
adc
mov
pusha
mov
xchg
rolb
add
ret
cmp
or
pop
pop
lahf
adc
or
add
and
jge
or
jle
gs
test
int
push
adc
jmp
xlat
ret
cmp
mov
or
adc
flds
pop
sub
aad
and
int
add
pop
adc
and
mov
xor
lds
inc
add
inc
pop
test
push
cli
adc
in
inc
test
ds
out
test
pop
dec
push
orl
and
xchg
cs
movsl
adc
adc
leave
cli
sbb
xor
ds
inc
les
in
sbb
push
arpl
adc
test
loope
add
cmp
and
shl
sub
leave
inc
popa
cmp
adc
mov
loope
sub
dec
adc
jge,pt
inc
les
add
pop
dec
sub
mov
dec
pusha
xchg
and
mov
mov
jo
cmp
cmpb
and
or
sbb
xchg
orb
adc
cmc
xchg
pop
dec
and
pushf
cmp
in
stos
addl
add
pop
movsl
lock
push
sarl
sbb
das
jl
mov
xor
insb
jg
pop
ror
iret
or
add
leave
test
adc
loope
stos
test
leave
jl
js
arpl
fcomps
cmp
stos
adc
imul
push
adc
or
push
sub
inc
cmpsl
and
xor
mov
adc
das
ret
jp
sbb
and
leave
data16
mov
mov
inc
sub
adc
idivb
xor
jns
inc
gs
sbb
stc
jg
sub
jnp
movsb
jl
rol
fmuls
dec
orb
lds
dec
mov
clc
cwtl
push
inc
nop
or
pop
lds
sub
jl
pushf
push
push
les
lahf
inc
mov
xor
lods
test
in
clc
jg
shlb
push
xchg
in
loop
and
ss
xorb
fs
pop
in
test
dec
popa
mov
xchg
fsts
shrl
dec
jo
mov
and
loopne
cmp
nop
or
mov
test
mov
out
cmp
sub
cmp
cld
fstl
clc
sub
jnp
mov
mul
jge
push
rorb
or
enter
fwait
add
cmp
and
push
or
add
testl
or
and
mov
xor
or
ja
push
sbb
push
add
xchg
clc
ret
pop
mov
call
cs
or
push
sahf
mov
mov
sub
ficoml
push
push
aam
sti
fstl
out
cmp
jg
add
or
aas
add
pop
xchg
fcmovb
pop
pop
add
or
cltd
cmpsl
daa
xchg
pop
fstpl
jnp
pusha
mov
xchg
adc
js
rcr
mov
insb
add
outsl
jge
jb
add
adc
js
mov
sub
add
sub
add
add
enter
int
sbb
fisttps
mov
mov
pusha
sti
stos
jne
sbb
cmpsl
fsubrl
aad
test
cli
int3
clc
test
inc
jmp
xchg
mov
add
mov
in
lret
repz
push
sbb
mov
stc
fcmove
mov
mov
jmp
clc
pop
pop
inc
sub
jns
or
add
stos
sub
out
add
scas
in
push
test
rorb
stc
or
sub
adc
js
jecxz
ja
aad
testl
loop
mov
or
or
movb
stos
jp
addl
std
insb
ja
add
fnstcw
adc
into
rolb
es
push
push
fdivp
ljmp
roll
jle
add
and
cmp
add
cli
ja
insl
in
movq
add
adc
or
les
out
sub
mov
inc
inc
jne
add
cltd
push
ja
xlat
nop
add
add
cmp
jns
add
popa
jge
jecxz
ds
add
dec
icebp
insl
out
in
stc
add
push
fisubs
repnz
add
loopne
add
mov
cld
repz
pop
int3
lret
faddl
or
loopne
add
xor
dec
int3
les
jb
sub
test
scas
ficoml
hlt
dec
call
iret
mov
lret
pop
adc
movsb
lods
mov
test
js
inc
loopne
mov
movsl
imul
fldl
add
lods
pushf
dec
dec
xor
adc
stos
js
mov
outsb
jge
loopne
aad
dec
sbb
push
insb
adcl
add
test
aad
jmp
mov
cwtl
or
or
jae
add
cmp
insb
xor
cmp
push
flds
rol
out
and
lea
rcrb
pop
push
pop
add
and
mov
add
adc
pop
or
adc
push
out
sbb
std
out
xor
in
sbb
add
or
inc
adc
dec
push
pop
mov
xchg
add
shrb
mov
pushf
or
lods
sbb
add
jecxz
out
jne
add
cmpsb
xchg
es
adc
add
stos
pusha
dec
sub
mov
add
jnp
lods
add
lahf
mov
inc
pop
fldenv
inc
push
hlt
add
nop
add
sarb
inc
std
pop
faddl
ficoms
mov
aas
aad
add
xchg
mov
cmp
es
lock
sahf
aam
ret
dec
add
push
les
mov
add
jmp
mov
pop
xlat
je
dec
rclb
int
add
mov
data16
mov
push
nop
ret
lahf
mov
int
scas
cmpsb
movsl
add
in
mov
int3
add
std
sub
fwait
je
mov
jle
mov
les
lock
and
mov
sub
pop
sbb
xor
rclb
testl
and
int3
insl
push
push
test
sub
add
aam
xor
mov
pop
sti
dec
movsl
rclb
add
adc
psubsb
repnz
pusha
cmp
fstpl
cltd
mov
add
xor
add
lock
add
jns
add
in
add
outsl
adc
xorb
mov
mov
inc
and
pop
adc
sbb
push
xor
lret
or
sub
orb
idivb
mov
lods
sub
inc
add
pop
push
dec
pop
and
xor
sbb
stc
mov
rclb
mov
pop
pop
loope
or
movl
mov
leave
mov
into
fadds
xchg
pop
add
imul
lods
test
ljmp
loope
sbb
aas
lea
iret
jl
and
dec
push
pushf
sub
fstpl
jle
add
outsl
ds
insl
mov
std
xchg
add
inc
lock
outsb
addl
ja
jo
stos
add
sar
lds
insb
insl
cmp
sub
int
sbb
xchg
pop
mov
ret
inc
adc
loopne
dec
push
rolb
cs
je
jmp
sub
mov
push
aad
inc
int
add
xchg
daa
push
dec
pop
add
jae
clc
add
dec
add
pop
adc
or
popf
add
push
cltd
cwtl
int
push
loope
jno
sete
sub
ds
sbbb
add
mov
jge
dec
in
mov
inc
movsl
add
scas
xor
stos
clc
adc
jecxz
inc
ja
dec
mov
xor
jns
fsubl
ljmp
ja
repz
fadds
ds
loopne
enter
rorb
paddq
sbb
fbstp
in
pminub
or
sar
dec
filds
and
pusha
mov
mov
mov
int3
mov
inc
xchg
lret
fidivl
xor
pop
shll
or
js
fadd
divb
lock
pop
nop
pusha
in
gs
inc
jo
pop
add
scas
push
mov
and
ja
es
nop
add
mov
sbb
dec
shlb
clc
cmp
add
xchg
add
xor
cmpsl
adc
add
sbb
mov
push
lock
xchg
ret
rorl
pop
repnz
inc
xchg
jb
add
mov
add
sti
js
les
sahf
scas
sub
mov
bound
or
bnd
outsl
pop
jne,pt
add
rcll
cmp
add
add
leave
call
out
ficompl
inc
add
fldenv
cmc
add
imull
pop
and
cmp
insb
xorb
inc
add
rorl
and
add
mov
vmwrite
jmp
cld
and
sub
add
stos
mov
icebp
push
jmp
cmp
ficompl
aaa
sub
incb
mov
pushf
inc
add
rorb
inc
cmp
jo
push
xlat
and
push
dec
or
cmc
dec
stos
mov
scas
sti
cmp
add
inc
push
cs
or
and
aas
loopne
mov
dec
and
cmp
lcall
sub
jl
add
jge
nop
add
pop
push
sti
add
pop
and
mov
add
add
pop
test
jmp
or
stos
add
jl
hlt
and
call
outsb
out
jne
xchg
add
mov
enter
mov
mov
stos
popf
push
inc
movsl
scas
rcl
fcomps
add
xor
jge
in
sbb
xlat
add
loop
sub
je
rolb
xchg
sahf
adc
idivb
testl
mov
in
adc
imul
lea
jne
sub
cmpsl
inc
int3
and
add
add
cmp
adc
scas
jbe
stc
add
add
sti
stos
pop
add
lahf
dec
add
mov
popa
cmc
pop
mov
adc
mov
lret
dec
repz
adc
push
dec
cmp
inc
or
inc
mov
add
jl
adc
dec
nop
push
add
mov
xor
cs
cld
aaa
outsb
mov
xchg
jno
xchg
ja
push
sbb
add
andb
sub
les
iret
jns
add
adc
adc
mov
lods
sub
mov
mov
adc
les
in
leave
push
mov
add
popf
es
test
in
pop
dec
dec
mov
jecxz
push
dec
test
jne
or
loopne
pop
add
xor
add
cmpsl
push
sbb
les
js
add
js
call
fstl
jge
subb
mov
or
or
and
faddl
ret
icebp
add
mov
push
vshufps
xor
xor
mov
add
out
int3
mov
pop
add
add
xchg
sbb
xchg
inc
out
mov
xor
sbb
inc
or
call
add
sub
adcb
dec
add
adc
clc
mov
fnstenv
add
out
ljmp
add
sub
push
xor
nop
push
dec
adc
cmp
add
fucom
adc
dec
repnz
pop
sub
add
pop
nop
int3
lret
fs
gs
xchg
shll
popf
in
push
mov
mov
jg
cmp
push
ss
daa
popf
hlt
aas
jge
add
cmp
sub
pushf
fsubs
sub
mov
mov
out
or
lock
xchg
xchg
or
pop
adc
lea
insl
pop
xchg
sub
add
mov
andb
in
test
test
push
xchg
or
lock
sub
mov
cmp
dec
sahf
push
add
adc
int3
jb
add
jnp
ja
xor
icebp
jl,pn
outsb
xor
add
notb
pop
and
mov
mov
or
adc
int3
cltd
cmpsb
fildl
mov
addr16
add
loop
out
ret
pop
pop
pop
dec
push
add
out
not
cmpl
adc
add
mov
mov
outsl
andb
pop
add
pop
out
mov
xor
push
sbb
mov
pop
and
add
int3
mov
mulb
add
mov
inc
fdivp
sub
pop
shlb
mov
sti
popa
sbbb
and
inc
jmp
enter
mov
in
add
pop
divb
flds
imul
jno
arpl
js
popa
jne
sbb
les
jb
fisttps
aas
mov
call
arpl
jl
dec
cmpb
pushf
pop
loop
add
movsb
add
inc
xchg
dec
add
test
mov
arpl
add
cmpl
sbb
inc
cli
dec
ljmp
outsl
adc
push
out
test
jno
mov
aaa
cmp
mov
pusha
lea
inc
mov
adc
cmp
mov
ljmp
dec
loopne
andb
mov
or
aas
cmp
mov
jae
nop
mov
aam
imul
popa
add
push
rol
dec
cwtl
add
js
negb
stos
add
test
mov
and
dec
into
aam
popa
add
mov
std
sbb
out
add
shrb
push
cmp
outsb
cmp
add
mov
jge
pop
cli
xor
nop
movsb
dec
xlat
add
int3
sahf
mov
add
js
mov
pop
pusha
scas
jno
pop
jecxz
add
mov
inc
xor
cmpsb
shlb
sbb
cmp
stos
add
lahf
push
sbb
push
and
in
rclb
mov
add
xchg
cmova
adc
jle
andl
add
movsb
in
cltd
jo
adc
xchg
test
popa
add
mov
sub
lods
enter
xchg
add
shl
cmp
call
loopne
add
imulb
fwait
cs
mov
add
and
or
pop
mov
and
popa
test
loopne
jb
xchg
sub
arpl
pop
bound
xchg
dec
popf
lock
popw
cmp
push
fwait
push
dec
aad
sub
xchg
call
xchg
outsl
jmp
lock
das
cmp
out
add
dec
xorl
xor
push
xor
push
mov
cmp
es
lock
movd
xchg
sub
jle
addr16
test
loope
sbb
mov
or
lock
and
enter
add
sub
test
add
sahf
jno
popa
jmp
sbb
and
insb
or
ret
pop
out
xchg
pop
add
adc
popf
or
icebp
je
xor
inc
in
sub
jmp
enter
push
xchg
cmp
xchg
ret
sub
gs
adc
sub
cmpl
pushf
add
push
out
pop
shlb
or
out
jg
and
dec
and
jo
in
inc
mov
adc
and
test
sbb
pop
imul
ret
jo
add
add
les
sbb
mov
lods
push
mov
xor
popf
pusha
add
out
dec
adcl
fwait
ja
sbb
inc
mov
popa
and
outsl
or
mov
cmp
jo
clc
inc
jbe
pop
mov
jecxz
fidivs
gs
xor
shlb
addl
mov
push
push
or
xchg
sbb
sarl
mov
call
mov
pop
mov
mov
fs
sbb
add
mov
add
pop
pop
fstps
pop
xor
bound
push
mov
xchg
inc
jo
sub
lds
adc
in
add
adcb
sbb
addl
sbbl
cs
aas
xor
lds
mov
frstor
xchg
sbb
arpl
sub
mov
jecxz
dec
or
fs
inc
dec
mov
rorb
bound
mov
pusha
pushf
ror
inc
in
clc
lods
sarb
sub
push
cmp
sbb
dec
inc
sbb
mov
add
push
and
cmpsl
std
arpl
add
rcl
jge
add
add
jb
push
pop
xchg
mov
sbb
les
add
jecxz
dec
mov
jnp
mov
in
sbb
ret
aam
add
mov
adc
js
lds
stc
shlb
pop
pop
mov
cmp
push
inc
adc
mov
ljmp
mov
pop
and
loope
pusha
jmp
adc
xchg
mov
mov
add
js
push
addr16
lock
imul
sbb
add
lcall
adc
sbb
sbb
mov
fwait
out
pop
out
push
sbb
loope
testb
push
sub
mov
pop
pop
ret
es
sbb
out
pop
imul
out
mov
add
pop
loopne
lret
or
xor
testb
xchg
sti
xchg
sub
add
mov
dec
pop
addr16
inc
xor
xor
push
and
movsl
or
dec
sbb
push
adc
scas
and
or
inc
push
xor
stc
adc
push
cmp
sbb
dec
test
int3
xchg
int3
xor
xor
and
clc
and
int3
or
add
mov
adc
setno
add
xchg
pop
inc
jo
mov
jmp
and
nop
mov
dec
cmp
movsl
or
ds
dec
and
mov
or
loopne
out
cmp
inc
insl
orb
cmp
or
in
cmp
add
add
dec
mov
cmp
fcmovnbe
jno
pop
loopne
or
sbb
ret
lods
pop
sbb
mov
inc
jnp
jp
sbb
pop
rep
push
daa
inc
push
cmpsl
mov
test
sub
pop
xchg
rclb
push
pop
enter
lea
sti
fwait
mov
hlt
mov
imul
pop
and
pop
pusha
or
insl
add
stos
add
enter
sbb
pop
add
fdivs
call
stos
jne
sub
inc
stos
pushf
xor
xchg
cltd
ja
cwtl
add
mov
cs
cmp
jmp
push
imul
mov
push
sub
xor
pop
or
fwait
adc
enter
rolb
sti
cmp
fbld
dec
dec
mov
push
adc
out
or
and
mov
mov
cmp
fldenv
sbb
mov
popa
out
stc
mov
sbb
out
ret
addr16
and
xchg
test
roll
mov
pop
push
mov
cmp
cmpb
mov
lock
inc
xor
xchg
jl
lods
das
shl
inc
xchg
es
int3
xchg
call
mov
sbb
push
aad
mov
sub
and
adcl
or
imul
and
push
push
pop
nop
push
and
ficoms
outsl
push
inc
cmpb
test
cmpb
mov
mov
sub
push
xchg
inc
repnz
or
adc
push
mov
and
notb
pop
jecxz
aam
add
inc
pushf
mov
add
push
xchg
lds
out
and
push
sub
dec
pop
adc
push
cwtl
or
fwait
mov
pop
cmp
popf
add
adc
int3
dec
adc
jns
adc
add
loope
pop
lods
ret
xchg
push
and
cmp
testb
pop
leave
push
xchg
test
mov
or
adc
cs
adc
in
pop
inc
sub
and
dec
xor
int
pop
add
inc
or
xchg
add
xchg
add
hlt
push
int
mov
repz
addb
or
repz
sub
or
nop
dec
daa
clts
xor
subb
pop
add
mov
fisubl
aaa
add
and
cld
movb
xor
push
aas
cwtl
dec
scas
pusha
xchg
cwtl
jnp
ficomps
in
inc
xor
insb
xchg
das
enter
lea
out
jmp
xchg
scas
in
es
adc
xchg
or
je
scas
in
filds
push
add
xchg
cmp
hlt
lcall
cmc
test
icebp
movsb
push
cld
push
xor
mov
scas
int3
inc
imul
mov
cmpl
addr16
cs
or
adc
push
pop
inc
lods
fists
nop
addr16
call
sub
sbb
or
add
addr16
es
in
popf
push
nop
mov
imul
pop
add
cli
mov
mov
in
add
add
fdivs
add
in
loopne
and
dec
scas
and
in
dec
enter
mov
cmp
lahf
adc
push
fimull
add
adc
mov
fucomi
lret
push
xchg
push
dec
push
sbb
imul
mov
dec
cltd
stc
insb
pushf
dec
xor
inc
mov
dec
add
jae
fsubrs
les
sub
or
mov
add
mov
push
xor
push
pop
addb
stos
hlt
out
add
popa
mov
test
pop
lods
daa
add
clc
andl
cmp
in
das
mov
add
mov
and
xchg
jae
sbb
subl
cmp
adc
orl
lret
outsb
mov
adc
fnstsw
pusha
mov
pop
int3
cmpsb
add
push
repz
outsb
jnp
cmp
pop
aam
push
xchg
sub
add
in
mov
or
cmpsl
push
stos
xchg
or
out
dec
sub
adc
data16
sbb
ljmp
sub
mov
mov
int
sub
daa
pop
pop
dec
inc
and
iret
sub
mov
adc
lods
pop
pop
cmp
movlps
imul
push
mov
leave
pop
xchg
addb
std
scas
push
push
inc
mov
push
adc
pushf
push
scas
and
sbb
repz
cmpb
add
in
fdivl
pop
int3
in
outsl
cmp
cs
pop
adc
sbb
lcall
movsb
pop
and
sbb
xchg
repnz
scas
fwait
adc
test
or
mov
dec
adc
movsb
push
test
inc
test
jo
cmp
lcall
pop
test
hlt
lods
test
movb
mov
add
add
dec
dec
sub
testb
push
subb
xlat
xchg
add
or
aas
add
or
cwtl
cmp
pop
in
scas
pop
push
js
outsb
jmp
and
add
les
iret
aad
xchg
push
insb
repnz
and
jle
add
cmp
adc
xchg
push
lods
outsb
sub
mov
repnz
nop
rolb
and
inc
add
int
add
and
sbbb
jg
push
cmp
inc
add
sub
dec
jp
cmp
aad
mov
test
jl
add
hlt
jb
xchg
lock
jmp
lods
inc
add
rcl
or
sahf
push
rolb
mov
mov
add
sub
or
mov
test
dec
les
or
mov
js
mov
sub
aam
js
rol
out
jmp
or
daa
and
fstps
mov
mov
inc
sub
add
lret
mov
adc
mov
icebp
or
testb
xchg
shlb
mov
fldl
out
fldt
int
mov
in
xchg
dec
sbb
or
pusha
cmp
aam
hlt
add
and
push
jmp
fcmovbe
cmp
inc
jnp
lods
mov
add
mov
int3
movsb
rcll
cmpsb
es
dec
hlt
push
adc
add
decb
test
aam
outsb
in
ds
pxor
ss
adcb
sub
es
add
addl
cmp
cmp
dec
add
cwtl
movsb
push
xchg
jmp
rorb
cmp
shl
or
pop
add
mov
xchg
outsb
int3
push
cmp
mov
push
xchg
stos
xchg
in
mov
sub
daa
loopne
pop
mov
mov
daa
mov
stc
or
mov
push
lods
mov
add
xor
adc
loopne
or
cs
xchg
movsl
rclb
cmp
pusha
hlt
xchg
add
stos
jns
int
and
jp
loopne
add
xchg
jo
test
sub
dec
jns
xor
sbb
jp
ret
dec
sbb
aam
push
les
out
mov
rclb
loopne
cmp
push
push
mov
push
push
and
insb
add
adc
rol
fwait
movsb
adcl
mov
mov
or
pusha
int
mov
cmp
and
push
xlat
xchg
jecxz
pop
push
xor
add
les
adc
add
push
cmc
xor
pop
mov
pop
add
fs
cmp
pop
push
or
stc
dec
add
fstl
jge
push
ret
push
jmp
push
inc
out
mov
or
jbe
adc
sub
sub
pop
push
inc
sub
into
shrb
bnd
inc
dec
aaa
inc
fwait
inc
call
jae
jne
ljmp
cltd
jge
dec
daa
cmp
mov
sbb
pusha
xchg
jmp
dec
ret
xor
hlt
wbinvd
add
cmp
int3
push
aad
pusha
movsl
test
lock
push
adc
xor
pop
dec
inc
cwtl
mov
jo
pop
xchg
and
pop
mov
or
or
test
add
jl
xor
inc
pop
xchg
popa
fiadds
mov
mov
lock
mov
lea
das
scas
into
loopne
lds
push
inc
cmpsl
xor
in
cmp
jno
ljmp
mov
push
movsl
mov
cmp
pop
adc
js
mov
add
mov
sbb
out
sarb
jl
mov
mov
add
lret
xor
pop
xchg
out
mov
aas
xor
adc
and
adc
push
or
add
pop
inc
shlb
addr16
inc
add
cmp
push
hlt
sbb
mov
push
sub
sub
sbb
aas
jge
jl
add
and
add
cmpsl
add
or
addl
repz
or
xchg
and
popf
mov
sti
imul
pop
cmp
pop
mov
xchg
push
mov
mov
repnz
or
shlb
add
adc
adc
sub
jo
dec
sbb
or
in
cwtl
popf
push
sbbb
add
xchg
loopne
pushf
popa
adc
fs
scas
cmp
lea
cli
mov
pop
fdivs
push
xor
cmpsl
and
imul
push
jbe
xchg
jb
into
inc
add
jnp
pop
leave
std
mov
stos
hlt
pushf
mov
or
mov
int3
and
icebp
fstpl
les
dec
sub
dec
xchg
mov
add
cmp
aas
add
lret
jae
add
mov
shl
sbb
or
mov
fwait
cli
test
sbb
add
shr
mov
test
sbb
push
mov
sbb
push
les
inc
sahf
cltd
pusha
inc
les
adc
leave
stc
jl
scas
xchg
lret
xor
sbb
jmp
xchg
push
inc
or
test
cmpb
push
jecxz
mov
xchg
ljmp
incl
cmpsl
jmp
xchg
fs
jae
insb
sbb
xor
aas
test
dec
imul
or
inc
fists
add
ja
xchg
nop
jl
jle
repnz
mov
popl
pop
cltd
and
iret
mov
add
mov
mov
ja
les
addb
test
add
hlt
repz
or
in
jb
in
xchg
aad
and
sti
jae
testb
inc
lods
adc
or
out
mov
and
and
and
add
or
js
xchg
fs
xchg
cmp
add
xchg
in
xor
xchg
sti
sbb
fwait
enter
dec
pop
mov
roll
imul
cmp
push
test
sub
ret
and
jno
cmp
xchg
xor
push
lret
sbb
sbb
insl
in
add
or
inc
mov
sbb
add
cmpb
movq
call
loop
add
lods
das
jecxz
aad
cwtl
cmpsb
dec
xor
inc
imul
jecxz
mov
dec
inc
dec
lods
xor
mov
movsb
je
jo
push
jno
or
icebp
sbb
add
lods
jmp
add
and
inc
mov
cmp
inc
mov
insb
or
add
inc
add
movsl
xchg
push
aas
test
std
xchg
push
mov
cwtl
insb
imul
mov
lahf
mov
mov
add
push
pushf
xor
jb
fstp
inc
dec
push
push
clc
and
aad
or
movsb
cli
sbb
xor
mov
inc
add
inc
xor
dec
and
movl
pop
ret
inc
sbb
nop
ja
lcall
add
aaa
cmp
xchg
repz
inc
push
or
dec
add
fmuls
bnd
cmp
cmp
loopne
jmp
rol
add
gs
daa
pop
sub
rolb
es
std
push
aas
jmp
mov
add
fstps
in
sbb
roll
out
cltd
mov
sbb
jp
sbb
out
push
xlat
jecxz
leave
aas
push
push
movsl
mov
sub
leave
nop
jecxz
inc
pop
xlat
mov
orl
sahf
shll
mov
call
into
jne
fxam
fmuls
add
sub
adc
dec
lcall
jmp
xchg
fs
or
jp
and
push
incl
aam
adc
push
xlat
xchg
sub
inc
or
repz
xchg
lock
mov
push
shl
jle
mov
cmp
inc
rolb
xor
cmpsl
sub
arpl
sarb
mov
leave
or
ret
add
repz
in
shlb
lea
adc
mov
sbb
adc
jecxz
movsb
dec
and
movl
xor
lret
xchg
or
xchg
push
adc
shlb
sarl
push
or
cmp
xchg
push
xor
pop
xchg
adc
fwait
cmp
sbb
xchg
sub
test
pop
mov
xchg
mov
mov
inc
out
xor
stos
or
inc
sub
and
cmp
cli
or
enter
cmp
add
insl
jmp
mov
loopne
pop
push
movswl
add
mov
repz
mov
gs
cltd
jl
mov
dec
popf
stos
int3
pop
xchg
fsubrs
test
mov
test
cmpsb
or
mov
mov
loop
test
push
add
cmpsl
jae
mov
cmp
add
inc
push
jns
add
out
mov
add
shl
dec
aam
andb
cmp
fwait
sbb
ds
insl
stos
or
pop
mov
ljmp
aaa
rolb
xor
cmp
mov
xchg
sbb
sub
pop
xlat
cwtl
jo
inc
mov
add
xor
movsb
pushf
iret
enter
in
aas
sub
add
sti
mov
sub
leave
pop
pop
inc
and
dec
packsswb
loopne
inc
test
jo
sbb
adc
cmp
cwtl
or
bound
add
mov
out
lock
jnp
mov
xchg
push
ret
add
outsl
inc
out
xchg
mov
mov
loopne
or
mov
jno
imul
mov
jnp
push
xchg
xchg
xor
mov
inc
je
and
stos
rolb
xchg
pop
sbb
lcall
movb
test
in
cwtl
xor
sbb
and
insl
mov
add
mov
testl
out
push
jp
xchg
ss
inc
inc
xor
sub
pop
lret
mov
movsl
sub
add
shlb
outsl
add
jmp
cltd
nop
jg
add
push
in
mov
cmp
cs
shlb
mov
stos
inc
mov
cmp
call
repnz
dec
test
pop
fs
push
or
andl
inc
add
inc
adc
mov
icebp
lcall
std
nop
sbb
shrb
out
mov
mov
iret
cmp
push
data16
dec
mov
cmp
mov
adc
fs
pop
data16
pop
jno
dec
adc
cltd
enter
xor
add
add
dec
jno
scas
push
nop
jge
jb
in
and
xor
ljmp
pusha
or
cld
push
xor
jns
js
hlt
jno
pop
add
ss
aaa
pushfw
cmpb
dec
inc
clc
enter
add
mov
mov
ljmp
and
loopne
loop
and
pop
js
adc
xor
popf
pop
sbb
ljmp
js
jne
push
xor
cltd
bound
cmp
leave
inc
data16
inc
inc
bound
daa
pop
dec
in
fsubl
inc
pushf
cmp
fdivr
xchg
lcall
mov
mov
lock
cmpsl
out
dec
add
ret
je
cmp
mov
mov
outsb
rcrb
pushaw
inc
mov
sub
adc
jmp
nop
inc
xor
lret
std
cmpsl
aam
xchg
add
cmp
add
lea
sbb
int3
adc
clc
push
push
in
jecxz
testl
mov
cmp
add
out
lret
bound
movsb
push
mov
lods
inc
je
add
cli
outsl
xchg
aaa
xor
pop
inc
and
mov
testb
jbe
in
xor
xchg
mov
rorl
imull
outsb
mov
stc
sar
cmc
jno
mov
add
ds
arpl
loopne
stc
push
imul
xor
xchg
pop
stos
std
fldl
mov
stc
jne
add
sbb
cmp
and
add
cmp
add
sbbl
popf
and
rcl
dec
jl
sahf
imul
fistpl
hlt
pop
add
in
icebp
sbb
lea
pop
mov
add
add
aas
fwait
movsl
pop
out
ss
clc
stos
sahf
scas
pop
lahf
and
lods
sbb
fadd
addl
ja
mov
pop
in
ljmp
sub
leave
sti
xor
aam
js
out
enter
push
sbb
ds
mov
adc
add
and
and
add
mov
push
pop
mov
mov
iret
push
sbb
cmp
clc
stc
ja
mov
add
mov
pop
mov
hlt
jo
add
int
ffree
dec
int3
add
pop
clc
sbb
lahf
add
pop
or
cmp
or
push
icebp
stos
filds
inc
inc
dec
xor
pop
or
cmc
inc
cmp
addb
mov
aaa
add
adc
and
gs
mov
xchg
add
subb
xor
xchg
jp
mov
xor
jle
cltd
mov
sbb
out
test
add
outsl
xor
xchg
xor
push
sub
jmp
and
add
push
cmpsl
push
xchg
imul
loope
fsubr
mov
mov
or
or
nop
add
add
call
mov
add
addb
cltd
iret
andb
xchg
push
add
add
aas
das
cld
cmp
ret
add
adc
pop
popa
sub
cmpsb
jg
add
cmpl
push
adc
pop
add
and
or
test
pop
daa
aaa
xor
cmp
xor
call
xor
in
sarl
add
push
xor
repz
adc
cld
test
pusha
es
pushf
mov
sbbb
add
mov
jae
adc
push
test
pop
pop
jmp
inc
pop
cmpb
int
jb
add
mov
enter
js
es
xlat
push
cltd
int
mov
loope
in
aas
sbb
push
loopne
cmp
imul
xor
xor
mov
xchg
dec
mov
mov
icebp
jmp
push
add
add
xor
sub
sbb
pop
das
jg
lret
dec
loop
cltd
mov
fadds
jmp
data16
mov
xchg
in
popf
push
ret
and
aad
jmp
add
mov
adc
sub
je
cmc
jnp
add
int3
mov
and
les
xchg
fbld
shr
rolb
call
mov
push
cmpsb
out
add
int
les
cs
test
test
mul
pop
inc
add
cmp
xor
mov
std
call
jg
vmread
add
sti
adc
roll
cmp
in
sub
iret
ficompl
cmp
movsb
fsubrs
inc
or
imul
into
pusha
add
scas
add
loope
mov
iret
cmp
dec
mov
push
cltd
pop
pop
ljmp
cmpsb
and
xor
add
push
fdivl
ret
dec
sbb
mov
cli
add
or
jae
outsb
lret
in
das
push
or
and
les
cmp
xchg
dec
lock
and
xchg
inc
mov
or
and
cmp
loopne
and
push
popf
inc
xor
stos
mov
cld
pop
nop
mov
and
add
mov
paddsb
add
nop
aad
lea
jnp
push
jno
or
add
lcall
and
add
mov
pop
je
ja
int
push
add
mov
mov
test
sbb
mov
push
test
pop
mov
mov
add
push
imul
inc
jne
sub
dec
rorb
mulb
in
add
xor
fisubs
xlat
add
dec
sbb
add
fiaddl
mov
cmc
jae
sbb
mov
and
adc
ja
add
push
xor
cmp
int3
add
xorb
jecxz
adc
stos
sbb
add
and
xor
std
mov
dec
push
sub
popf
pusha
inc
cwtl
cs
insl
adc
out
cmp
jns
je
popa
sub
mov
mov
jno
inc
cli
lcall
mov
pop
inc
xlat
jbe
hlt
aad
shl
icebp
fbld
out
xchg
or
lret
push
nop
inc
daa
or
hlt
ss
cmc
jnp
aam
add
sarl
sahf
test
sub
pop
add
addr16
cs
mov
pop
jge
mov
stos
add
jo
ja
dec
pop
lret
mov
push
jge
cltd
flds
fisubs
ret
aam
xor
add
dec
xchg
mov
mov
push
sti
mov
xor
imul
pop
ja
inc
sbb
adc
adc
adc
js
cmc
and
outsl
jae
fnstsw
movsb
add
push
xchg
push
aas
ss
add
push
xchg
sarb
inc
loope
out
and
mov
je
sbb
les
push
mov
cmp
jp
push
js
leave
sbbb
jb
int
xchg
movsb
out
cmp
data16
or
into
mov
xchg
mov
push
dec
push
roll
pop
aam
cmpsl
sarl
ja
adc
cmp
add
mov
xchg
cmp
xor
lahf
add
xor
push
inc
pop
andb
adc
add
dec
mov
ljmp
mov
sbb
xchg
daa
fnsave
sub
sbb
mov
std
pop
xchg
push
lods
adc
pop
shlb
mov
imul
add
test
shrb
push
jg
insb
sub
dec
push
in
jl
pusha
xorb
add
add
add
jo
xor
fisttpl
add
inc
sub
add
cmp
jle
add
mov
or
xor
push
pop
inc
inc
insb
rcl
inc
jbe
cmpsb
stc
or
popf
ja
xor
push
dec
in
iret
add
mov
mov
push
popf
add
call
jle
mov
inc
xor
push
sti
or
sub
push
mov
push
fcomip
sbb
fiaddl
verr
sti
rcr
push
add
dec
je
sub
push
and
cmp
jo
ja
imul
add
push
pop
mov
cmp
insb
add
and
cld
dec
xor
mov
mov
or
push
es
out
lock
test
sub
das
int
cmpsb
push
mov
add
arpl
add
cmp
fs
sbb
fiadds
push
out
out
mov
rclb
xchg
leave
dec
inc
nop
les
sbb
push
xchg
cltd
sub
add
test
hlt
repnz
cmp
gs
add
aaa
loop
add
mov
lcall
sbb
mov
xchg
dec
call
insl
add
lret
xchg
jg
adc
mov
sbb
repz
inc
cmp
hlt
sahf
add
or
xor
mov
faddl
lea
mov
mov
push
inc
dec
sti
inc
jecxz
lods
out
add
inc
repnz
cwtl
mov
mov
imul
or
or
mov
orl
lahf
add
cmp
dec
fs
xorl
imul
sub
shlb
pop
mov
daa
or
and
sbb
mov
loope
xlat
add
cmp
roll
adc
add
pop
dec
and
add
ss
add
add
pop
hlt
sahf
jae
and
arpl
movsb
lock
jns
add
cmp
sarb
xor
add
push
outsl
into
in
stc
cli
fiadds
test
mov
subl
data16
sbb
add
pop
xchg
das
xchg
adc
dec
push
push
or
mov
js
cmp
add
mov
pop
mov
shlb
aas
ret
popf
out
add
pop
notl
ljmp
or
insl
add
add
hlt
dec
dec
jg
add
cmp
mov
or
mov
inc
fs
and
js
sbb
dec
scas
mov
mov
inc
in
and
aaa
insl
adc
cwtl
cmp
and
dec
add
cli
adc
push
add
loope
mov
out
sub
les
repnz
jae
in
push
in
sbb
cmp
scas
push
xor
aam
shl
lock
push
es
testb
sub
adcb
and
pop
dec
cmp
lds
add
cmp
outsb
add
mov
cmpsb
nop
add
push
insl
inc
adc
mov
add
cmp
ljmp
pop
add
shlb
in
cmpsl
add
pop
and
mov
ds
dec
clc
push
popa
add
push
adc
sub
add
jp
add
scas
lods
es
pop
add
pop
mov
add
cltd
xchg
lahf
add
loop
push
das
repnz
mov
mov
lret
inc
jnp
test
repz
sbb
rcrb
xchg
sub
fidivrs
pop
push
xor
cmp
jge
jle
lret
enter
pop
aaa
mov
ljmp
jns
adc
outsb
fwait
inc
inc
cmc
adc
pop
movl
out
add
pusha
or
sub
pop
push
add
mov
roll
shr
int3
ds
cmp
in
cmpsb
or
add
out
push
ljmp
sbb
dec
xor
out
inc
add
mov
stc
aaa
add
push
push
mov
add
inc
popa
cli
jecxz
mov
mov
jb
in
add
adc
jmp
mov
andb
and
xor
in
jns
inc
lea
mov
add
rol
inc
inc
adcb
int3
jmp
mov
sub
sbb
jl
add
inc
push
sbb
or
cmpb
push
add
lret
ds
fidivrs
fwait
xchg
sub
push
mov
xor
sbb
movsl
stos
pushl
inc
test
or
push
sbb
and
mull
dec
sbb
push
cmp
xchg
test
add
sub
cmp
loop
and
sbb
jle
cmp
cmp
xchg
icebp
mov
xchg
repz
fcoml
aas
dec
imull
add
cmpsb
xchg
add
mov
xor
jne
orb
int
adc
add
lret
fsubrs
dec
inc
call
test
push
cmpsl
add
cmp
test
stos
sub
push
mov
inc
pop
insb
fcomps
pop
add
add
lret
jne
jmp
out
xor
daa
add
shlb
into
sbb
jne
jno
add
pop
inc
cltd
xchg
add
aas
inc
sub
rolb
lds
test
cli
sub
cwtl
mov
pop
push
inc
cmp
cmp
dec
push
pop
add
mov
xchg
stc
adc
je
sbb
jbe
add
aas
push
dec
enter
cmp
adcb
mov
xchg
pop
sub
cmp
daa
xchg
loope
ds
xchg
cli
add
pop
das
cmp
lea
ljmp
stos
mov
popf
cli
add
movsl
push
inc
mov
scas
push
add
xchg
mull
cmp
pop
add
xor
repnz
div
add
dec
xor
loope
add
push
negl
cmpsb
insb
inc
setae
out
dec
add
into
xor
adc
int3
inc
add
filds
cmp
mov
std
mov
add
xchg
cmc
leave
fcmovnu
int3
push
adc
cld
pop
xor
es
imul
pop
loope
scas
pop
insl
jmp
or
add
jo
popf
inc
insb
addb
adc
popa
les
lea
sbb
mov
add
push
fdivs
bound
ret
mov
mov
add
fbld
cmp
sbb
stos
add
jg
gs
rcr
or
dec
add
jl
and
fucomp
lahf
addb
add
push
outsb
in
psubd
and
mov
add
pop
es
add
mov
bound
lods
xchg
jp
ret
dec
add
mov
dec
add
cld
mov
divl
shr
fwait
mov
jo
popf
add
dec
mov
call
rcrb
loop
movsl
inc
rclb
inc
lods
popl
pop
fcompl
xchg
mov
test
add
fwait
jbe
pop
mov
out
inc
bound
icebp
out
cwtl
and
sahf
aad
pop
add
jp
cwtl
dec
ja
sbb
push
mov
faddl
push
cli
out
and
mov
leave
hlt
xor
and
add
call
mov
adc
aad
cmpsb
push
cmp
push
jnp
jo
lcall
fs
mov
sbb
stos
add
or
imul
push
add
jg
mov
add
fcomp
cmp
pop
xor
ret
ret
int3
fadd
mov
pop
adc
ret
pusha
je
dec
dec
dec
push
add
lods
lcall
stos
test
nop
jp
pop
jg
sbb
push
repnz
sub
dec
jle
dec
test
je
xor
ret
push
inc
xor
add
inc
pushf
orb
pop
pop
aam
or
add
mov
add
fwait
adc
aaa
jno
mov
fsubr
sbb
mov
add
fs
inc
xchg
imul
sar
add
rorb
pop
stos
adc
add
les
or
mov
add
mov
add
xlat
adcl
pop
cmpsl
add
mov
add
fbld
dec
xor
add
pop
bound
cs
loopne
sub
push
or
dec
pop
add
lds
mov
mov
jecxz
jg
adc
add
xor
jb
les
jle
or
addr16
ja
rcrl
mov
xchg
add
mov
jp
cmc
fcoms
imul
iret
pop
adc
notl
push
sbb
pop
mov
jb
cmpsl
jg
nop
sbb
or
in
xchg
test
jno
inc
xchg
stc
aam
push
add
sbb
push
outsl
pop
popf
add
add
sar
jp
fs
mov
cltd
cs
lock
out
pop
or
mov
mov
test
adc
or
addr16
push
dec
das
sub
std
sbb
and
sbb
rcl
divb
add
sbb
jbe
hlt
rorb
sbb
test
add
roll
int
and
jmp
and
jmp
sbbb
pop
dec
out
inc
int3
int
ret
sub
fildl
and
loop
movsb
mov
or
cmp
movsb
mov
pop
dec
aam
outsb
sti
push
insb
add
inc
nop
shlb
adc
or
nop
enter
mov
lock
mov
push
cmp
xchg
sub
sbb
gs
pop
add
fbld
mov
cmpsl
push
rclb
iret
pop
dec
add
std
mov
add
add
lahf
adc
out
or
xchg
inc
gs
pop
dec
out
jno
rcr
sahf
cmpsl
shl
sub
pop
mov
pop
fwait
aam
enter
sbbl
and
cmpb
cld
jb
cmc
add
xchg
call
mov
xor
or
leave
push
inc
ret
test
and
xor
inc
int3
xor
add
pop
add
cmpsb
mov
out
popf
loopne
rolb
movsb
rcl
jl
clc
outsl
jne
stos
add
add
mov
test
add
inc
inc
cmc
jo
clc
push
int3
test
das
add
icebp
es
and
sub
aas
push
mov
inc
and
cmpsb
add
mov
mov
xor
movsb
arpl
add
mov
hlt
mull
xor
jle
cmp
add
das
shll
cwtl
and
jae
push
pop
pop
add
leave
sub
and
mov
cmpsl
sbb
adc
dec
lds
xchg
dec
sbb
mov
mov
lock
add
dec
or
xchg
jmp
sbb
negl
and
jg
movb
push
and
addr16
outsl
fcompl
push
clc
dec
xlat
cmpsb
mov
scas
mov
mov
xor
lahf
pop
push
or
addr16
or
daa
add
rorb
dec
std
out
int
jns
loopne
pop
les
and
cmp
shlb
sbb
mov
lods
aad
mov
cmpb
push
add
xor
popa
xchg
adc
ss
mov
push
or
jg
das
orb
lahf
mov
hlt
outsl
and
add
sub
fwait
push
fdivrs
cli
add
push
jne
roll
add
pop
mov
and
add
pop
jno
pop
mov
xor
int
int3
jne
add
jp
inc
push
push
xlat
clc
stc
nop
imul
ret
push
add
mov
lea
sbb
data16
mov
add
outsb
int3
arpl
push
jne
aaa
icebp
rorl
xchg
jae
cmp
xchg
add
cltd
mov
fdivs
add
dec
pop
sub
les
add
sbb
fadd
push
ljmp
inc
sbb
cmp
movsl
mov
pusha
jp
icebp
add
leave
outsl
pop
and
xor
fiaddl
mov
pop
insb
add
rol
imul
cs
lds
add
stos
sub
pop
shl
in
das
mov
sub
ret
pop
loopne
mov
sub
inc
cmp
loope
mov
and
mov
imul
into
dec
add
add
add
cmp
dec
add
loop
mov
jno
movsb
lock
jp
push
fcompl
xor
add
add
into
push
test
insl
lahf
cwtl
dec
lret
or
mov
imul
mov
addr16
mov
in
mov
mov
dec
mov
repnz
aam
dec
inc
shl
sti
loop,pn
jmp
ret
add
or
mov
loope
lods
lea
pop
shrb
xor
incb
leave
jns
or
inc
jp
cmp
adc
mov
adc
lods
mov
inc
sbb
or
mov
pop
std
shlb
add
push
xor
mov
cmp
mov
or
sub
pop
rcrb
movsl
in
and
out
int
lcall
jg
cmp
cmp
mov
out
jp
hlt
xchg
fldl
push
aam
mov
add
mov
xchg
jmp
adc
xchg
xor
fwait
dec
je
shlb
std
jns
fsubl
dec
sar
mov
dec
clc
add
xor
movsl
adc
add
pop
push
inc
test
push
xor
xchg
cwtl
sarl
out
insb
mov
hlt
mov
in
xorl
fldl
int3
int
lds
add
jl
add
insl
add
imul
loopne
loope
cmp
stc
cmp
out
fisubl
mov
pop
in
icebp
je
or
jmp
subb
out
and
rcrl
fadd
notl
mov
adc
rcr
xchg
jmp
adc
sbb
hlt
sub
mov
xor
add
add
pop
sub
enter
xchg
in
and
fs
add
test
pop
loop
xorl
and
xchg
imul
sbb
xchg
das
xor
jne
jecxz
pop
xor
pop
xor
out
sub
aad
pop
incb
pushf
std
hlt
fldl
enter
aad
cmp
dec
and
repnz
mov
out
add
sub
fadd
movsb
xor
add
into
test
push
in
imul
xchg
insl
xchg
cwtl
out
xor
mov
std
cmp
movsl
jno
cmp
add
adc
sbb
jp
adc
inc
push
mov
cltd
xchg
inc
or
jecxz
addr16
xor
aaa
add
jnp
rolb
arpl
sub
cmp
add
or
loopne
add
out
shl
add
inc
stc
push
jns
add
jo
inc
sub
mov
add
loop
rcrb
add
jmp
xchg
fisttps
aam
xchg
or
add
std
inc
push
les
imul
jg
decb
sbb
sbb
pop
cmp
dec
push
daa
lock
stc
push
icebp
cld
push
add
pop
mov
add
subb
xchg
inc
mov
add
add
mov
mov
test
mov
jl
mov
push
movsl
mov
test
pop
fcmovnu
ljmp
mov
mov
loope
adc
cmc
sbb
iret
xchg
mov
int3
mov
sub
enter
and
mov
je
mov
mov
adc
andl
xor
add
mov
cmp
js
add
push
ds
and
add
sbb
add
je
aam
pusha
cs
push
add
jecxz
jle
sahf
mov
out
cmp
subb
cmp
stos
fldenv
nop
movsl
xor
cwtl
pushf
pop
mov
fmuls
dec
push
add
ja
call
mov
cmp
mov
lahf
mov
jecxz
mov
test
and
mov
and
jae
mov
pop
popa
xor
adc
mov
arpl
shll
jle
inc
dec
push
ss
add
roll
mov
shrb
mov
lahf
lods
addr16
fistpl
mov
pandn
call
loope
add
cmp
jo
push
add
std
adc
xor
add
fisubrs
add
cli
ljmp
mov
sub
mov
hlt
in
add
test
jo
pop
sbb
mov
push
inc
add
push
arpl
dec
mov
fistpll
inc
aaa
add
rol
add
pop
add
sub
xlat
jp
pop
cmc
sbb
ficoms
or
add
sub
mov
fbld
insb
dec
sbb
pop
idivl
inc
xor
fldcw
or
lahf
lods
imul
pushf
or
mov
add
push
pop
jnp
pop
popa
ljmp
aaa
xor
push
ss
cmp
xor
add
cs
roll
outsl
inc
adc
out
nop
add
out
std
push
aas
mov
repnz
nop
repz
mov
dec
xor
outsb
add
add
inc
pop
mov
mov
mov
cmpsl
xchg
push
add
add
mov
test
lcall
mov
sbb
stos
push
sbb
data16
rolb
push
pop
pop
fldcw
push
jo
cltd
and
add
adc
add
dec
pop
aam
and
pop
mov
int3
push
pop
sbb
push
add
stos
test
addr16
cli
stc
mov
and
add
aam
in
cmp
stos
add
push
sub
lock
sub
clc
add
popa
addb
add
out
push
aam
sbb
sbb
push
jbe
add
xor
mov
insb
addr16
dec
add
push
frstor
lds
push
imul
ja
popf
add
mov
scas
add
jge
push
mov
outsb
lds
pop
cltd
mov
orb
add
faddl
cmp
je
jb
xor
sbb
std
enter
dec
shrb
addr16
push
and
imul
fcmovbe
dec
hlt
cmpsl
jnp
add
out
sub
mov
cmp
hlt
filds
and
mov
jae
mov
fdivrs
cmp
mov
sbbb
repnz
repz
inc
cmp
push
sub
inc
scas
inc
mov
loopne
add
or
sub
or
rclb
pop
negl
jo
and
leave
add
lods
pop
sbb
in
stos
shrb
int3
add
dec
data16
push
shll
cmp
mov
addl
repnz
dec
ret
out
add
fsubr
in
dec
push
in
mov
mov
stos
pop
mov
divb
pop
lret
sub
pop
cmp
popf
je
sub
mov
push
add
pusha
mov
dec
in
add
jle
mov
mov
repnz
add
in
ja
test
xchg
jns
mov
cltd
sbb
daa
mov
jecxz
cwtl
adc
rclb
sar
sete
pop
mov
ret
gs
js
rcrb
insl
pop
cltd
cwtl
add
je
fs
inc
and
add
jne
mov
inc
loope
test
push
das
call
fadds
in
push
popa
fs
movsb
jmp
mov
adc
cwtl
hlt
idivb
fmull
adc
pop
divl
add
mov
nop
push
add
sti
add
outsl
clc
cmp
add
neg
xchg
push
in
data16
mov
add
or
add
lahf
add
les
cltd
daa
cld
add
clc
inc
add
cwtl
ret
in
insl
test
or
leave
dec
int
icebp
mov
pop
fwait
in
nop
outsb
loopne
in
das
add
insb
mov
lds
xor
push
jbe
jno
jae
xor
sub
ds
data16
push
loop
push
popf
cltd
fisttpl
sbb
sub
pop
stos
out
sarb
mov
add
add
mov
int3
push
testb
or
fbld
mov
pusha
out
addl
pop
jmp
sti
sahf
push
aam
mov
shll
pop
mov
cmp
xorl
cmp
outsl
movb
inc
rcll
fwait
mov
aas
imulb
addr16
and
hlt
icebp
sarb
mov
fsubs
mov
js
cli
int3
cli
lods
out
add
push
push
mov
fldl
mov
or
rcrb
sahf
xchg
jmp
add
lods
xchg
adc
sbb
clc
xor
test
test
loop
push
mov
hlt
xchg
dec
out
call
adc
dec
inc
adcb
add
mov
xchg
lcall
mov
iret
add
clc
xor
fmulp
daa
les
jae
je
ja
sti
orl
pop
adc
or
scas
mul
add
xchg
popa
enter
cwtl
or
fadd
mov
sbb
jne
outsl
add
aas
jl
dec
mov
pusha
movsl
add
loopne
popf
add
inc
xchg
bound
nop
add
mov
mov
ret
jno
push
lea
ja
pushf
imul
and
in
mov
add
mov
outsb
iret
cmp
jb
test
push
fists
mov
xorl
cltd
sbb
dec
fstpt
bound
shrl
les
lods
int
inc
cmpb
popa
pop
add
mov
aaa
add
cmpsl
pop
cmp
mov
fstpt
dec
aam
add
lds
test
or
push
insl
or
mov
into
push
xor
pop
inc
sbb
aas
cmp
pop
jae
cld
call
sbb
nop
nop
add
lret
lea
or
add
ja
pop
in
xchg
pop
jbe
out
and
ljmp
add
aas
mov
flds
cwtl
loop
lcall
sub
lret
xchg
push
nop
push
js
stc
rolb
lods
in
xchg
sbb
add
in
hlt
add
xchg
ret
adc
stos
add
js
sub
incl
pushf
jns
clc
cmovno
into
pop
loopne
inc
lock
add
pop
pop
push
jle
add
xor
xorb
in
mov
ja
cmc
aaa
jl
and
mov
sbb
scas
xchg
cmp
dec
rcrb
test
add
push
push
pop
add
xor
enter
push
orl
inc
sbb
mov
rep
imul
push
leave
inc
add
add
and
mov
add
cmpsb
fs
mov
add
addl
cmp
pop
adc
or
es
fbstp
out
ljmp
mov
dec
call
int3
test
adcb
and
cmpsl
repnz
mov
loopne
cmp
sbbb
jb
pop
pop
jg
ret
mov
mov
aas
add
cwtl
nop
clc
xchg
negl
cmp
cld
add
sti
adc
dec
push
mov
or
jge
push
cmp
xchg
add
jg
xchg
mov
sbb
sbb
fistpl
xchg
in
aam
add
loop
punpckhbw
sti
pop
in
push
add
mov
lea
and
mov
mov
jnp
and
inc
xlat
xor
andb
dec
pop
or
shll
daa
loopne
adc
jbe
adc
aas
mov
jl
add
jmp
gs
imul
dec
movsl
idivl
push
fadds
nopl
push
jecxz
xchg
ja
add
xchg
add
inc
es
call
mov
xchg
mov
add
nop
imul
fsubrl
call
jo
adc
imul
mov
sbb
out
es
pop
or
jne
xor
enter
push
mov
fcompl
shlb
push
ret
and
or
fldcw
insb
mov
or
add
stos
fwait
pop
add
xchg
push
ss
cmp
push
ret
cmpsb
pop
setl
or
das
add
repnz
data16
add
outsb
aam
scas
into
in
in
add
push
inc
push
lods
jmp
jno
sub
mov
mov
movsb
or
dec
out
sbb
rclb
pop
push
loop
pop
stos
sub
fldcw
jo
push
xchg
or
dec
inc
andb
faddl
push
mov
dec
data16
mov
pop
je
int3
xor
test
repz
gs
bound
inc
dec
or
aad
mov
in
add
mov
iret
insb
aaa
fdivl
mov
cmp
std
fiadds
lock
out
lock
xor
and
xchg
add
adc
push
and
jns
add
lea
mov
sub
mov
test
add
mov
scas
add
rcr
jb
lea
sbb
mov
mov
lret
mov
mov
add
daa
mov
jmp
fcomp
xor
jne
xchg
insl
outsb
xor
mov
adc
sbb
fldl
aam
pop
es
lret
mov
lret
pop
test
loope
pop
xabort
add
xor
jae
add
mov
ja
or
rolb
add
mov
pop
std
pop
dec
lock
mov
xlat
add
inc
shrb
add
sbb
jp
mov
mov
add
std
nop
or
fadd
pcmpgtd
ret
insl
mov
adc
popf
imul
jecxz
cld
xor
add
inc
add
add
icebp
mov
cmp
cmp
mov
inc
and
hlt
test
and
movb
jl
add
outsl
xor
mov
and
lea
sub
push
les
leave
cmp
int
xchg
data16
mov
xchg
int3
js
xor
sub
or
fs
xor
add
ljmp
arpl
mov
cmp
in
clc
enter
daa
xchg
in
enter
add
cltd
lods
push
xchg
inc
mov
and
dec
mov
mov
and
ret
add
jl
aam
addr16
jmp
in
outsb
xor
fisubrs
or
enter
xor
push
add
shl
jbe
mov
xchg
aam
scas
jge
shrl
sub
inc
aad
xchg
mov
mov
stos
mov
dec
push
sub
and
insl
sub
mov
adc
or
andb
mulb
std
xorl
fidivrl
roll
dec
jecxz
or
sbb
xor
xor
dec
test
jecxz
andb
adc
add
xor
jp
inc
mov
fists
adc
cmpsb
cmp
or
sub
out
adc
rolb
and
out
add
push
sbb
xor
adc
xor
pusha
out
add
scas
cs
pop
pop
cld
jecxz
loopne
xor
add
sub
icebp
cmpsb
cmp
mov
inc
xchg
movsl
js
or
xchg
cmp
std
test
and
loopne
dec
rclb
outsb
mov
or
ret
add
add
jnp
das
jp
lock
jle
pop
adc
xchg
add
xchg
push
fcoml
sbb
push
or
pop
movsb
cwtl
lock
and
jle
adc
adc
sub
insb
mov
andb
jo
addr16
shll
ds
add
mov
sub
cmp
sbb
lcall
lock
scas
adc
outsb
jp
push
nop
mov
imul
stos
mov
pop
mov
mov
das
in
jns
rcrb
pop
imul
icebp
movsb
lods
dec
add
lock
sbb
dec
or
in
and
mov
jmp
hlt
test
nop
outsb
push
test
jno
and
dec
push
fists
mov
scas
lock
sbb
mov
sub
add
add
sbb
lods
mov
pusha
pusha
cli
xchg
jmp
stos
jo
adc
lret
jno
mov
or
das
dec
dec
fcomps
rol
sub
loopne
mov
dec
mov
scas
lock
popl
stos
pop
notb
outsl
mov
rsm
push
stos
nop
push
jl
cld
or
jbe
add
push
pop
test
sub
pop
or
inc
call
ret
pushf
subl
cmp
xor
mov
push
leave
xlat
call
shl
andb
and
insl
xlat
adc
xor
je
adc
or
pop
add
jp
pop
jo
push
inc
xor
push
inc
dec
add
movb
adc
cwtl
cmpl
dec
fs
repz
loopne
sub
test
add
dec
loopne
enter
push
add
sbb
add
repz
add
jg
adc
push
pop
ds
xchg
jmp
outsl
or
dec
ds
mov
dec
add
xor
dec
mov
or
xchg
xor
pusha
shll
and
call
push
repz
mov
loopne
bound
add
repnz
out
push
push
mov
and
orb
movzwl
pusha
loopne
mov
lds
outsl
inc
mov
xor
mov
and
adc
dec
add
jne
mov
jo
add
add
dec
add
int
rolb
or
pusha
fcomp
push
sub
or
add
dec
mov
adcl
push
sarb
pusha
or
push
xor
das
dec
mov
lock
pusha
rcll
inc
mov
sbb
push
call
mov
jmp
mov
or
jle
pop
inc
jo
push
out
push
adcb
mov
cld
and
or
mov
fdivrs
mov
or
ljmp
pop
xor
daa
mov
push
sti
pusha
shll
push
fnstcw
pusha
xor
xor
pop
stc
scas
adc
adc
popa
cli
bound
jo
outsl
xor
nop
mov
mov
fcoms
and
jl
xor
movsb
les
nop
push
lahf
and
cld
inc
xchg
mov
out
pusha
inc
push
sbb
xor
and
fcmovu
xor
scas
mov
adc
sbb
cld
in
shl
or
xchg
aad
pusha
mov
cmpsl
lods
dec
addb
xor
rorb
cmp
imul
popl
popa
out
and
adc
shr
sbb
xchg
scas
lock
jae
and
push
mov
rcrl
add
adc
jmp
jo
ds
ljmp
loope
mov
cmpsb
add
pop
out
js
sbb
cld
sbb
nop
lret
pusha
sbbl
push
push
sub
or
xor
xor
clc
mov
sub
inc
nop
hlt
mov
jns
out
rcll
in
cmp
cmp
jo
ds
xor
popa
sarb
sbb
loopne
xor
lock
bound
icebp
nop
mov
adc
out
xlat
and
addl
pusha
addl
xchg
rol
lock
dec
jbe
mov
cmp
sar
jle
mov
sarb
adc
mov
bound
addr16
push
or
lock
fcomi
sub
sbb
jl
inc
pushf
roll
in
mov
mov
adcb
scas
mov
cmp
pop
pop
popf
or
push
cmp
mov
pop
jecxz
add
add
or
pusha
pop
adc
sbb
dec
lods
add
xorb
jb
xor
div
ljmp
ss
dec
sbbl
xchg
stc
push
popl
jge
sub
pusha
mov
push
stc
pop
lods
aam
outsl
insb
pusha
es
cmp
pop
test
pusha
push
insb
fidivrl
punpcklbw
mov
adc
mov
adc
out
stos
xor
dec
popa
ss
pop
pusha
add
and
pop
mov
or
xor
push
mov
or
popa
icebp
inc
inc
push
adc
fs
xorb
sub
mov
pop
sbb
adc
test
sub
push
jmp
xchg
push
push
pusha
mov
lods
push
and
enter
mov
inc
pop
lods
inc
push
cmpb
and
in
and
and
cmp
jp
and
push
pop
pusha
rol
sbb
dec
lds
push
and
repnz
mov
push
or
addr16
inc
dec
push
nop
push
and
pusha
push
push
mov
or
adc
or
mov
and
or
pop
outsb
ja
push
or
xchg
sub
push
popl
xor
mov
jp
nop
rcr
popl
js
add
aam
ficoml
mov
xchg
fdivs
fistps
js
or
pop
test
xchg
or
jp
int3
je
mov
pop
pusha
add
mov
popa
addb
fstpt
add
and
push
xlat
jl
or
fnstcw
shl
loopne
jo
ja
and
rolb
jo
test
rcrb
mov
jo
jp
pop
jl
or
dec
mov
dec
and
adc
adc
test
ja
pop
pop
push
add
and
adc
les
mov
loopne
and
push
lods
ror
cmpsb
mov
pusha
test
or
lods
clc
pop
adc
cmp
push
pusha
mov
imul
cmp
and
stos
and
bswap
adc
inc
dec
inc
push
sar
in
adc
stos
dec
inc
pop
adcb
sahf
test
push
cmp
cli
jb
push
sti
rcr
sub
stc
jb
stos
rcr
mov
roll
push
lods
pusha
mov
aam
sub
push
mov
enter
pusha
loopne
xchg
stc
test
sbb
pusha
stos
std
sub
bound
or
sbb
insb
pusha
mov
mov
popa
xchg
test
ret
pop
in
sbb
push
popl
aam
rcrb
cmc
and
pop
frstor
in
icebp
pop
add
push
mov
and
adc
pop
mov
lds
out
xchg
mov
inc
pusha
fsubrs
xchg
inc
popl
and
jbe
pusha
mov
ret
xor
sub
xor
adc
sbb
mov
adc
test
sbb
fwait
popa
iret
fiadds
push
aad
rolb
dec
inc
mov
test
jb
popa
xchg
popf
popa
lock
or
jae
adc
mov
and
jae
cmovne
arpl
jo
fs
icebp
pop
xor
sub
adc
jne
in
jge
pop
adc
push
jae
sbb
pop
inc
adc
inc
sbb
cltd
stos
jb
addb
jae
push
shl
js
jo
push
test
add
outsl
jl
sbb
jno
cmpb
push
or
out
mov
clc
lret
cmp
repz
rorl
clc
sbb
pop
inc
mov
add
xor
popl
adc
and
into
icebp
mov
ds
sub
xchg
icebp
lock
ja
loopne
cmpsb
pusha
bound
push
add
data16
mov
imul
or
pop
push
push
jle
push
pop
shlb
loopne
jno
rolb
popl
adcb
ds
jb
orl
out
cmp
mov
test
inc
sbb
lea
jle
push
push
rcrb
pop
fs
inc
faddl
into
jl
jp
and
pop
jno
popl
adc
mov
lock
inc
or
pop
mov
rcrb
mov
sbb
sarb
rcll
sbb
or
push
popf
scas
fmuls
aaa
mov
push
int3
xor
inc
mov
mov
xor
push
ret
ja
inc
cmpsb
mov
pop
pop
adc
sub
lcall
cmp
pop
xor
xor
pop
add
jno
jp
push
sub
push
xchg
shll
inc
ret
popf
pop
push
dec
int3
lods
or
rcrb
fadds
dec
dec
inc
fdivrp
push
loop
daa
stc
inc
jbe
pusha
andl
add
mov
xlat
mov
fmuls
daa
and
fdivr
mov
mov
ja
jp
sbb
addb
mov
add
inc
test
mov
sbb
push
rolb
adc
sbb
cs
sbb
mov
sbb
dec
xchg
add
xor
xlat
popa
ja
pop
sbb
test
push
mov
adc
aaa
loope
pusha
andl
pop
loop
scas
inc
and
jp
imul
dec
pusha
cltd
push
jns
test
or
outsb
in
imul
inc
jl
ret
ret
push
dec
xor
cmp
dec
adcb
lret
adc
xorb
xchg
xchg
stc
sub
sub
pop
push
fcoms
add
mov
es
pop
cmp
pop
add
data16
out
add
inc
movb
rol
mov
sbb
aad
mov
adc
and
xchg
bound
popa
add
add
push
jb
and
loope
xchg
into
mov
pop
int
sarl
data16
xor
test
jns
inc
sbbl
fsts
xorb
sbb
and
ds
movb
xchg
and
pusha
add
xchg
jmp
enter
ds
in
movsb
and
loope
cmp
xlat
test
rcrl
inc
mov
adc
adc
push
and
mov
adcb
xorl
add
mov
mov
xchg
loope
cmp
shll
mov
add
or
add
pusha
xor
xchg
inc
test
sbb
popf
sub
lods
rclb
inc
insl
and
scas
test
pop
push
orl
add
ja
test
sarb
es
mov
negl
fistl
popl
fnstcw
lahf
imul
push
sbb
mov
mov
pop
add
xor
push
sub
or
dec
movsb
testb
sub
rcl
jg
add
into
dec
cld
inc
pop
push
addr16
roll
push
mov
xor
punpcklbw
pop
nop
insl
sbb
jo
sub
and
inc
jecxz
cli
test
call
pusha
ret
in
scas
xlat
fmuls
lahf
sar
jns
sub
je
sub
and
inc
sahf
pop
and
iret
rol
outsl
or
insb
pusha
loop
and
pop
xor
fidivl
out
xchg
aas
push
stc
pusha
rcr
lret
popa
fildll
fsubrs
clc
popl
lea
lahf
cmp
repz
mov
pop
push
push
pusha
sarl
jg
pusha
rorl
mov
add
adc
rcrb
inc
lea
inc
mov
cmp
paddd
aaa
loopne
in
bound
popl
sahf
adc
jnp,pt
and
loopne
push
rcrb
test
mov
ret
sahf
and
jl
pop
cltd
xchg
inc
cmp
mov
repz
scas
xchg
andb
or
jl
or
imul
xchg
inc
hlt
rol
xchg
push
test
aas
pop
pusha
add
pop
aas
sbb
dec
xchg
adc
adcl
icebp
mov
inc
sarb
std
mov
adcl
push
mov
sub
xor
pop
or
outsl
ret
cmp
jg
pusha
cmpl
es
mov
jb
and
loopne
fsts
inc
xchg
filds
rcrl
jns
adc
adc
add
push
ljmp
lods
adc
mov
aaa
pop
stos
mov
push
inc
shl
push
lret
lahf
xchg
mov
push
adc
lock
mov
fwait
and
jecxz
inc
shrb
xor
inc
cs
sbb
repnz
pusha
sbbl
int3
adc
mov
mov
fisubl
and
xor
insb
pusha
mov
loop
xchg
nop
adc
adc
lock
pop
pop
bound
aas
cmc
mov
outsb
push
mov
mov
push
dec
lret
cmp
insb
push
in
push
adc
lods
xor
mov
cwtl
sbb
dec
les
test
adc
dec
and
loopne
in
push
xor
xor
pop
inc
cmp
test
fucomip
xor
xchg
loope
pop
add
lcall
aaa
add
mov
or
aas
hlt
and
cmpsb
loopne
cs
inc
ja
jmp
add
and
push
out
xor
popa
sub
out
jno
inc
dec
stos
inc
push
rclb
jecxz
addl
inc
mov
inc
or
dec
sbb
xchg
rolb
and
test
dec
dec
inc
aam
jge
rolb
clc
mov
and
mov
sarl
xor
outsl
mov
lret
ret
int
jns
dec
add
into
ds
jg
les
or
jl
sbb
mov
scas
fadds
xchg
rcrb
add
add
ds
xor
jbe
mov
xor
adc
mov
testl
jne
mov
add
idivb
add
jmp
push
add
cli
jl
adc
lds
rorb
adc
filds
mov
and
push
loopne
push
xchg
jge
add
add
mov
test
jbe
add
add
scas
sar
sahf
add
mov
in
ror
jp
add
addr16
rorl
jg
push
rclb
inc
mov
inc
adc
shl
adc
push
and
sub
add
aam
jnp
es
cmp
mov
aas
mov
clc
test
xchg
in
inc
cmp
and
ja
mov
fxch
pop
cmp
loope
roll
std
aas
out
imul
ds
testl
mov
add
xor
out
cld
roll
fsubr
fbstp
jmp
shll
arpl
adc
test
pop
aas
or
add
ja
xor
xchg
cmp
fdivs
lods
negl
orl
jns
add
mov
ljmp
pop
pop
add
mov
jno
adc
pushf
pop
jae
cmp
sub
mov
dec
mov
inc
sub
loop
scas
jp
orl
adc
sub
adc
repnz
pop
clc
add
aad
push
loopne
fwait
pusha
push
mov
or
int
jns
add
ret
add
ret
mov
lock
loopne
add
mov
lods
jle
and
and
roll
test
xor
leave
in
into
sbb
xchg
jno,pt
cli
fiaddl
pop
mov
jmp
inc
fnstsw
aam
orb
sbb
mov
insb
mov
sub
lods
mov
cmp
or
cmpsl
push
cmp
dec
xchg
sbb
imul
rol
or
xor
bound
int
xchg
add
mov
sub
dec
scas
repnz
push
add
test
mov
and
in
movsb
rcr
and
push
mov
inc
test
cmp
rclb
cltd
pop
pop
lret
cmp
xchg
dec
or
add
mov
sub
xor
dec
adc
add
test
pop
add
test
int3
add
imul
mov
add
sahf
out
cmp
fiaddl
xor
hlt
ja
in
add
and
xchg
xor
cmp
jmp
lods
add
out
adc
cmpsl
ret
repz
adc
and
or
jns
push
mov
lcall
and
adc
push
aas
xchg
ss
or
lea
dec
out
gs
jl
sub
and
stc
movsl
push
inc
xchg
xchg
jmp
daa
cmpl
aaa
xor
test
pop
clc
inc
push
lea
xor
fsubr
mov
cmc
in
pusha
in
cmpb
xchg
inc
test
sbb
add
aas
pop
add
sarl
adc
repnz
iret
xchg
adc
xor
addb
mov
adcb
jo
call
add
ret
adc
sbb
aam
add
xchg
jmp
fadd
add
dec
scas
lods
in
adc
lahf
fnstsw
xchg
pop
xor
add
negb
dec
push
hlt
cmp
lret
inc
and
test
and
popf
add
mov
sub
ds
mov
js
test
push
mov
pop
mov
and
popl
mov
sub
daa
sbb
xchg
pop
jne
lret
pop
loopne
add
mov
sub
nop
jo
and
icebp
xor
ret
cmp
add
jg
jbe
mov
sbb
sbb
aad
neg
add
add
mov
xchg
pop
popa
add
push
adc
ss
mov
and
sub
jae
jg
add
or
mov
push
mov
add
inc
in
test
cmpsl
mov
ret
mov
xor
mov
lock
mov
fldl
lret
xlat
sbb
mov
aad
dec
push
flds
push
and
or
fimull
mov
les
cmp
pop
ds
mov
push
mov
sbb
outsb
xor
add
rcrb
jo
pop
aad
cmpsb
ficomps
scas
pusha
xchg
push
jne
add
icebp
daa
pop
les
add
loopne
inc
add
sub
push
dec
xor
adc
int3
pop
pop
inc
xor
sub
mov
cwtl
cmp
out
xchg
sub
lea
pop
dec
add
mov
nop
jge
les
add
stos
ficompl
es
mov
stos
std
call
adc
or
dec
inc
sub
cld
cmp
nop
out
cmp
mov
add
mov
add
sti
je
adc
jbe
sbb
dec
icebp
add
xor
xchg
add
jne
and
sub
cmp
add
and
add
les
add
mov
push
mov
mov
adc
popa
hlt
jbe
and
lret
loopne
xor
mov
enter
inc
push
iret
in
ud2
sarl
sbb
inc
add
jge
sbb
ljmp
mov
inc
mov
bnd
adc
pop
dec
dec
dec
xchg
aaa
fldl
fistl
pop
pop
dec
test
add
cltd
cli
mov
jle
add
pop
push
sbb
pop
fstpl
shrl
sbb
and
mov
mov
lds
inc
adc
jo
add
and
mov
shll
dec
push
cmc
mov
sbb
mov
loopne
in
xchg
mov
xor
fisttpll
and
mov
syscall
mov
push
mov
lds
mov
stos
ljmp
nop
push
into
add
inc
mov
mov
cmp
test
or
mov
out
jmp
add
movsb
movsl
jl
cmp
or
add
xchg
xchg
les
mov
scas
cmc
inc
mov
push
les
pop
adc
adcb
ja
mov
add
sbb
movsb
jns
gs
and
sub
push
aam
mov
pushf
test
popa
mov
enter
movsb
and
imul
sbb
mov
pop
dec
loop
mov
fsubs
push
add
jns
add
inc
nop
pop
test
or
dec
scas
ja
add
cmpsl
repnz
out
rclb
add
push
sbb
and
add
sbb
jge
pop
lea
push
sbb
test
add
pop
xchg
sbb
add
cmpsb
jbe
dec
lods
fiaddl
and
jb
imul
jl
add
inc
cs
add
and
jle
jbe
add
sti
jmp
jbe
addr16
fnsave
sub
hlt
add
push
mov
pop
insb
cmp
stos
or
add
dec
mov
add
xchg
ss
jl
shlb
mov
adc
adc
adc
ret
inc
add
leave
mov
jbe
jle
push
data16
stos
mov
sub
lds
repnz
dec
mulb
shlb
leave
sub
test
add
sarb
dec
int
add
sub
xor
add
dec
add
push
sahf
pop
push
add
pop
test
addb
add
jmp
test
add
leave
or
fucomip
ds
xlat
fsubrs
add
insb
and
add
dec
bsf
test
incb
jae
jbe
aas
insl
add
loop
jb
std
lods
add
mov
or
pusha
loopne
add
call
sub
pop
flds
sub
mov
arpl
incb
jnp
adc
repz
pusha
movsl
hlt
cmp
lea
test
add
inc
sub
inc
xor
cmp
add
mov
popf
add
xchg
sbb
and
push
jo
hlt
add
call
inc
and
pop
sbb
insb
lret
xor
pop
xchg
aas
add
sub
clc
cwtl
add
stos
or
aaa
mov
fadd
add
insl
sbb
cmp
push
fistpl
lea
std
in
out
pusha
cmp
adc
mov
add
mov
mov
lods
mov
enter
adc
jle
mov
rol
mov
fistps
sbb
add
stos
lar
dec
fs
dec
xor
dec
adc
or
xor
scas
lods
loop
cmp
mov
rolb
xchg
add
fmul
lea
mov
sbb
sub
xor
pop
sub
divl
sarl
push
nop
add
or
mov
call
mov
push
cmpsb
out
aas
icebp
fsubrs
outsl
cs
add
jp
mov
not
add
add
add
fmuls
dec
addr16
stos
in
sbbb
mov
push
adc
add
into
jecxz
add
mov
in
and
pushf
or
sbb
int3
pusha
xor
loop
or
outsb
add
pop
dec
push
push
andb
into
xchg
addr16
add
mov
pop
xchg
pop
add
out
jp
dec
mov
in
mov
cmp
in
test
icebp
jle
push
push
clc
ljmp
iret
imul
cmp
andb
test
daa
dec
bound
and
sbb
add
and
xor
add
mov
call
in
adc
mov
adc
jne
mov
xchg
jo
xchg
je
and
lods
aaa
jae
imul
test
aam
adc
mov
or
leave
mov
nop
add
push
adc
int3
fcmovnbe
das
add
scas
dec
cli
mov
sbb
cmp
aas
add
lahf
or
aad
arpl
add
out
mov
clc
xchg
call
mov
sbb
xor
mov
lret
insb
enter
mov
jne
push
add
imul
push
cmpsb
push
xchg
inc
mov
sbb
mov
xlat
sbb
lcall
adc
getsec
js
dec
addb
xchg
add
popf
ss
adc
or
jle
adc
dec
arpl
add
xlat
out
inc
add
xchg
roll
inc
or
filds
notb
jle
cmp
aam
add
popf
ja
push
mov
stos
add
mov
add
mov
ret
cmp
leave
mov
lock
add
pavgw
add
js
and
mov
pop
rcrb
jo
daa
jo
nop
and
stos
and
push
adc
and
jecxz
ljmp
jp
pop
push
mov
ret
mov
ds
popa
pop
aaa
and
mov
test
and
shrb
lcall
lahf
push
inc
cmp
leave
push
xchg
sub
cmpsb
shlb
ja
mov
sub
and
pop
xor
xor
add
cmp
cmp
xlat
add
inc
filds
xor
push
add
sub
add
pusha
push
addl
notb
add
cltd
iret
jl
sarb
mov
outsl
cmpsb
jmp
mov
xrstor
cs
rolb
aaa
addb
out
mov
test
insb
or
sti
add
arpl
add
pop
xchg
add
mov
mov
cmpsl
iret
ss
pop
push
cmpl
jmp
push
test
add
cmpsl
cmp
movsl
add
xor
arpl
mov
das
daa
and
repz
sub
lret
shll
mov
into
imul
shll
push
mov
add
shld
repz
or
rol
sub
or
mov
add
sbbl
dec
or
mov
mov
add
cmpsl
sbb
mov
mov
xor
sbb
scas
add
popa
and
mov
add
xchg
jl
cmp
js
add
mov
fucomp
dec
lahf
add
aam
mov
mov
sub
je
add
xlat
xor
dec
mov
xchg
xchg
outsb
movsb
ja
add
or
fidivrs
or
dec
decb
pop
stos
inc
aas
dec
fsts
add
rcr
scas
push
pop
mov
dec
sbbb
lcall
repz
cmp
add
add
out
mov
test
add
mov
xor
dec
rolb
stos
ss
in
addl
leave
sub
mov
push
xor
add
in
sub
sbb
adc
int3
and
cmp
subl
cld
ret
cli
xor
dec
push
mov
cmc
scas
fs
cmpb
lcall
xor
jg
in
and
mov
cmp
adcb
xchg
add
sbb
mov
movsb
lcall
adc
sub
clc
cmpsb
mov
cmp
gs
add
shrb
inc
cltd
lret
sbb
mov
div
xchg
sub
cmp
and
jne
jnp
hlt
sub
xor
push
loop
jns
mov
lods
sub
ficompl
push
enter
in
mov
pushf
mov
rol
or
aas
inc
push
pop
out
stos
div
aaa
in
or
add
movsl
fisubl
inc
push
out
je
andb
add
in
jecxz
xor
mov
mov
test
pop
cmpsb
xchg
xchg
es
push
pusha
add
pop
pushl
xchg
mov
in
int3
mov
in
jne
xchg
sti
call
jb
test
xor
das
mov
push
sub
imul
add
inc
or
mov
dec
jo
jg
push
fmuls
mov
arpl
cmp
incl
dec
mov
xchg
stos
push
loopne
sub
add
aam
mov
add
sbb
cmp
add
or
aam
popa
nop
cld
sub
or
orb
hlt
and
add
sbb
testl
mov
dec
adc
jge
scas
add
into
rcr
test
sub
sbb
lahf
test
cs
in
mov
data16
jmp
loopne
stos
lret
add
jecxz
xchg
xor
stos
jmp
pop
loopne
lea
cmp
jg
dec
andb
jne
arpl
data16
roll
cmpb
pop
pop
nop
test
loopne
mov
xchg
push
push
clc
add
es
bound
adc
out
mov
ljmp
pop
js
outsb
xor
xor
ret
in
pop
add
pop
aam
shlb
sub
push
or
xor
fwait
mov
adc
sbb
add
dec
fcomps
add
loopne
add
sbbl
cmp
int3
into
aaa
sbb
jl
out
mov
sahf
test
pop
rcrb
popf
shlb
ja
mov
add
xchg
sti
xchg
adc
out
add
das
ret
push
jb
or
xor
vpunpcklwd
cmp
iret
jmp
imul
insl
push
inc
cwtl
adc
jno
or
testl
aad
out
add
sahf
insl
pusha
xor
imul
jp
mov
add
xorb
imul
leave
mov
adc
lret
pop
test
jb
jno
add
mov
xor
mov
shll
adc
or
cmp
dec
iret
xchg
and
aam
jmp
cmpsb
mov
add
insl
add
push
rclb
in
sub
dec
dec
add
mov
xchg
aaa
bound
test
mov
lea
iret
cli
mul
add
mov
lahf
dec
lods
sahf
inc
inc
in
daa
xlat
insl
inc
xor
imul
add
sub
movsl
repz
jmp
addr16
or
in
or
add
shl
add
or
ja
pop
fwait
add
mov
cli
into
mov
adc
cmp
aaa
movl
js
dec
test
ret
mov
ja
cmp
add
js
or
push
pop
dec
aad
and
imull
dec
flds
repnz
sbb
sarb
inc
cld
pop
mov
rolb
xchg
pushl
xlat
push
lret
or
sbb
sarb
mov
fcoms
add
adc
lahf
cmp
or
scas
out
push
sbb
lock
and
btcl
add
or
test
push
push
not
int3
cmpl
movsl
mov
xor
pop
sbbb
aas
jno
addr16
xchg
or
and
sbbb
cmpsl
fwait
pop
lods
cmp
nop
add
and
jl
xor
jae
add
push
bnd
or
orb
pusha
ljmp
inc
lret
jle
push
in
loopne
hlt
leave
aad
add
adc
add
add
mov
popf
dec
pop
movsb
aas
add
pop
call
add
ficomps
inc
jg
add
push
pusha
dec
into
xlat
mov
mov
push
adc
sub
add
data16
jg
js
cmp
cwtl
pop
out
or
and
icebp
movsb
test
lock
lods
ficoms
syscall
cmpsb
add
dec
push
adc
bound
mov
push
jmp
cmpsb
push
push
fwait
arpl
fadd
aas
add
mov
call
scas
scas
jb
inc
add
add
popa
sbb
mov
mov
xchg
mov
aam
in
cltd
cmp
rol
dec
jg
ds
cld
jno
pop
aad
mov
mov
add
inc
ds
mov
inc
test
std
and
mov
aaa
cmp
and
inc
hlt
add
shll
and
add
xor
ja
cli
out
loopne
xchg
cmp
xor
outsl
push
in
cld
test
adc
imul
les
push
ljmp
call
add
mov
fbstp
fwait
jle
add
xchg
sub
pusha
and
loope
pop
dec
cmp
inc
sbb
daa
xor
mov
add
add
sar
sbb
cltd
movl
lret
add
sub
ss
stos
jns
imul
dec
mov
add
cmpsl
shll
mov
arpl
add
xchg
inc
push
xchg
xor
stos
lahf
add
enter
orl
jbe
fisubrs
dec
leave
mov
sub
add
jge
movsl
addl
mov
test
xchg
or
add
sbb
stos
out
ja
or
mov
adc
mov
leave
jnp
notb
aad
popf
pop
pop
fcomip
jo
insl
add
adc
push
pop
loop
pop
push
sub
in
xor
sub
pop
movsl
pop
mov
inc
push
bound
insb
dec
inc
lods
ja
enter
cmpsl
add
cld
nop
imul
dec
adc
jl
sub
inc
fsubl
pusha
fildll
or
adc
mov
iret
in
jl
dec
mov
mov
cmp
outsb
dec
push
fwait
jns
mov
aas
or
push
pop
and
aaa
insl
xchg
cltd
cmp
js
scas
jb
jae
fcmovnb
insb
add
pop
daa
xchg
fbld
add
mov
mov
cmp
loopne
mov
ret
add
inc
fimuls
fdivr
or
jb
adc
xor
add
dec
imul
test
pop
push
add
pop
sub
ds
mov
pop
cwtl
into
js
push
and
in
adc
clc
imul
push
mov
in
divl
ja
leave
rol
es
or
or
int
lcall
pushf
je
add
adc
enter
in
cwtl
sub
es
mov
test
nop
add
addr16
or
jne
in
sub
inc
sarl
es
imul
add
pop
mov
xchg
mov
cs
pop
dec
push
cwtl
add
push
loop
js
add
mov
dec
jb
add
inc
mov
push
add
add
movsl
inc
mov
adc
scas
mov
jg,pt
mov
mov
ja
xor
jno
loopne
add
ret
lcall
fdiv
scas
pusha
push
addr16
mov
das
lods
icebp
or
stc
mov
or
nop
pop
mov
inc
fs
dec
pop
jge
js
sarb
inc
and
xor
aas
bound
adc
mov
lock
dec
dec
add
hlt
pusha
add
sub
outsl
inc
sahf
fstpt
inc
dec
ret
mov
xor
mov
push
pop
iret
out
lahf
insl
ja
or
pop
pushf
push
sub
push
fimull
mov
add
insl
push
jecxz
cmpsb
jb
xchg
mov
dec
lock
loop
mov
jnp
add
jmp
push
push
negl
sbb
in
or
mov
add
sub
pop
sahf
inc
pop
pop
mov
loop
pushf
mov
sub
pop
bound
jb
loopne
fxch
popl
test
jle
aam
dec
out
fisttpl
roll
push
xchg
sub
les
ret
mov
cmp
repnz
ljmp
fstl
rolb
sbbb
xchg
pop
cmpsl
sub
fists
les
sbb
mov
push
mov
call
inc
int3
lret
push
les
xchg
add
sbb
sbb
addr16
jge
ljmp
ss
and
add
sbb
add
icebp
dec
sub
lahf
data16
jae
push
add
mov
add
jmp
test
stc
fwait
add
and
adc
or
stos
pop
and
sbb
add
lahf
popa
mov
rclb
xor
sbb
sub
arpl
mov
pop
lods
and
jae
or
enter
cmc
outsl
adc
scas
add
jnp
inc
jne
mov
sub
jg
xorb
insl
stos
aaa
dec
xor
enter
stc
test
mov
mov
sbb
add
mov
mov
es
pop
out
xor
push
add
dec
pusha
cli
add
xor
scas
lret
test
or
popf
add
mov
push
lods
add
orl
push
inc
ret
jg
fidivl
insb
js
cmc
aad
or
sub
js
add
or
stc
push
add
rclb
fs
push
jbe
cmp
add
or
cwtl
lret
shl
fsubs
shlb
test
pop
xor
add
into
shrb
ret
mov
sbb
xchg
ss
xchg
and
jle
add
xor
xchg
add
push
jae
add
add
push
flds
jmp
jmp
imul
clc
cmp
inc
mov
lahf
les
mov
or
push
int
add
hlt
int3
mov
add
sbb
xchg
lods
add
movsl
outsb
xchg
imul
jnp
add
cmc
xor
bound
test
jnp
std
push
dec
xor
inc
mov
shrb
jo
push
jecxz
adc
mov
add
mov
mov
stos
jbe
add
out
mov
int3
xchg
inc
dec
and
leave
iret
cli
pop
adc
inc
dec
add
ja
and
inc
sub
fldenv
xor
xchg
aad
movsl
cwtl
out
jns
inc
jno
pop
add
loop
hlt
xchg
dec
adcb
shlb
jle
add
push
push
jo
add
lds
repnz
lret
jns
out
add
sbb
ss
jg
mov
out
adc
frstor
sbb
scas
mov
dec
add
mov
sbb
jno
push
add
cmc
loopne
sub
jp
lock
rolb
jecxz
add
nop
in
push
jp
and
add
xor
pushf
and
add
jb
xor
call
cmpsb
clc
les
sbb
add
adc
add
jge
add
cwtl
jae
or
xor
or
xchg
mov
dec
adc
xor
and
je
out
sarb
dec
test
xchg
addr16
add
ja
push
xor
test
adc
add
mov
dec
inc
fsub
ljmp
add
pusha
add
add
mov
out
movsl
xchg
cmp
lret
adcb
push
add
mov
mov
in
inc
out
ds
cwtl
adc
add
jno
daa
imul
pop
add
adc
mov
push
icebp
cmpsl
orl
mov
mov
repnz
add
sub
outsb
or
xchg
sub
lods
jb
add
insb
inc
stos
outsl
cltd
je
pop
add
pop
pop
mov
mov
ljmp
push
mov
mov
push
mov
mov
cmp
adc
xor
mov
imul
mov
and
bound
mov
icebp
test
sti
out
push
out
and
cs
sub
js
cld
jp
pushf
lahf
orb
push
sbb
add
test
add
das
add
addb
clc
stc
testb
ret
leave
out
clc
repz
test
pop
shl
add
scas
lock
test
testb
pop
push
jo
push
outsb
arpl
jae
cmp
jle
inc
add
test
jecxz
fistpl
mov
mov
es
femms
dec
fcoml
fs
inc
out
cld
ret
fbstp
mov
and
cmp
cmp
cmp
cmp
loop
aad
fisttps
inc
jg
cli
or
pop
fcmove
jmp
add
mov
lock
add
sub
insl
inc
loopnew
add
dec
pushf
pop
push
outsb
or
push
pusha
push
jecxz
add
loopne
lock
add
cmpsl
jnp
inc
sub
jo
in
cli
scas
loopne
mov
repz
adc
hlt
jae
cmp
movsl
pop
cmpsb
push
mov
loopne
dec
cmp
inc
or
popa
pusha
xchg
mov
test
jmp
or
jp
cmp
aas
into
mov
arpl
sub
mov
es
pusha
je,pt
add
sbb
mov
add
cmp
insl
cltd
or
aas
xchg
push
ret
bound
jo
fdivr
call
pusha
shrl
mov
arpl
xchg
sbb
scas
add
loope
aas
shlb
cmp
pop
mov
xor
add
call
lret
aas
les
jecxz
ljmp
sbb
add
mov
je
fcompl
addr16
dec
lahf
sbb
push
sbb
mov
sub
or
push
adc
mov
push
leave
inc
fistps
and
xlat
test
pop
adcb
adc
js
mov
rcl
xchg
imul
sbb
push
movb
ss
jno
lahf
push
mov
xor
faddl
inc
shrl
nop
dec
inc
jnp
call
mov
jl
sub
add
iret
xchg
jl
imul
push
fcompl
sbb
fistpll
add
cmc
sub
adc
movsl
icebp
sarb
add
xor
rol
xchg
in
daa
frstor
lahf
mov
push
add
xchg
loopne
adc
add
rolb
or
add
in
fdivrl
loop
add
inc
mov
lods
sbb
subps
in
lahf
add
fwait
icebp
cmp
add
es
or
sbb
call
dec
aaa
push
out
or
add
adc
mov
jb
stc
subb
je
jnp
and
add
add
jg
add
in
lods
pop
enter
lcall
sbb
fs
xor
out
ret
cmp
dec
sti
jno
mov
nop
or
lock
or
icebp
add
jns
inc
cmp
hlt
andb
scas
cmp
aaa
sbb
call
cmpsl
lds
data16
imul
add
dec
mov
mov
lret
lock
mov
test
or
test
push
addr16
lock
fwait
jae
aad
cmpsb
add
dec
xor
push
adc
dec
inc
outsl
rcrl
cmpsb
es
imul
push
and
test
push
add
sbbb
add
inc
cltd
into
cli
push
loope
outsb
popa
stos
mov
sbb
dec
add
mov
dec
push
cs
inc
rol
adcl
loopne
sbb
add
cmp
lock
jl
daa
aad
hlt
or
pop
mov
adc
int3
pop
push
mov
scas
aaa
data16
int3
add
insl
mov
rclb
dec
xor
mov
rorl
sbb
and
add
loope
sub
cmpsb
in
leave
mov
sahf
mov
dec
xor
xchg
into
inc
andb
sub
sahf
sub
sub
sarb
inc
enter
jo
cld
addl
xchg
mov
add
xor
int
js
and
adcb
mov
pop
out
add
movsl
ds
dec
int3
push
add
cmp
add
cltd
fidivs
mov
jns
stos
xlat
add
aad
incb
push
mov
sub
pop
sub
jmp
cltd
les
std
shl
xchg
add
push
pop
and
add
out
cmpb
adc
mov
add
ja
into
clc
xchg
and
fcoms
nop
cmpsl
mov
adc
add
add
into
mov
icebp
adc
test
pop
add
pop
clc
jno
mov
mov
repnz
add
pop
cmp
mov
add
insb
repnz
pop
add
lds
dec
lock
add
add
cmp
cld
push
iret
push
and
add
test
adc
icebp
sub
popl
imul
xor
movsb
pusha
mov
out
mov
xor
xor
pop
in
push
push
iret
or
subb
int
ficomps
ljmp
pop
ss
aam
pop
push
loopne
xor
stos
add
xor
cltd
mov
in
enter
pop
or
add
and
and
mov
pop
add
in
pusha
sbb
inc
loope
sbb
addr16
lahf
mov
jo
pop
shrl
adcb
add
imul
xchg
fsubrl
add
push
loope
cmp
mov
js
aas
mov
or
cmp
inc
mov
call
fnstsw
pop
pop
add
jmp
lret
in
sub
add
shrl
push
loopne
and
enter
add
inc
mov
dec
sti
mov
adc
sbb
pushf
out
bnd
mov
subl
hlt
adc
push
daa
push
fucomi
sub
movsb
ja
pop
insb
mov
mov
ss
mov
ja
add
aam
sbb
sub
sbb
sbb
xor
mov
inc
fidivrs
orb
imul
mov
sbb
cmpl
test
jb
scas
add
push
call
mov
aas
scas
and
dec
mov
add
and
sbb
xor
lock
mov
shlb
add
sbb
repz
hlt
loopne
add
push
inc
pop
jne
loopne
cmp
mov
dec
rorl
sti
rorb
call
jnp
sub
ljmp
cwtl
pop
and
jo
inc
fstpt
add
gs
mov
adc
das
add
mov
out
lcall
push
mov
inc
insl
dec
add
dec
popf
out
subb
roll
pusha
lea
into
sahf
pop
inc
push
pop
mov
add
stc
addl
mov
add
pop
es
loope
cmp
xor
and
out
icebp
js
mov
sub
lea
inc
mov
xchg
lcall
call
cmpsl
or
xchg
cmovl
addr16
add
add
flds
or
jo
add
into
fsubr
add
xor
inc
cmp
pop
addl
pop
adc
push
push
je
gs
add
and
jp
fcmovnbe
add
dec
dec
push
dec
push
ja
add
imul
add
lds
dec
aad
add
adc
rolb
je
and
mov
notl
test
lcall
inc
add
sbbb
sub
fs
sbb
push
add
cmp
sarl
xor
mov
ret
mov
cmpsb
popa
fbld
fcomps
sbb
mov
int3
js
dec
xor
mov
cli
pusha
adc
adc
xlat
sar
add
pop
dec
and
adc
pop
xchg
add
stc
shl
pop
mov
jno
fcmovbe
cmp
add
add
sub
daa
xor
dec
jo
filds
mov
out
lcall
and
js
cmp
flds
push
xchg
aam
xor
imul
scas
jmp
stc
or
mov
pop
pusha
pop
sbb
pop
hlt
push
pop
cmp
inc
rol
push
es
orb
add
insl
and
add
mov
pop
cmpsl
mov
inc
enter
inc
cmpsb
mov
push
aaa
add
out
mov
fildl
cmp
loopne
cmpb
jle
inc
jb
and
pmaxub
int3
cli
pop
adc
sub
or
adcl
or
in
scas
add
repnz
sbb
iret
dec
stos
hlt
jge
or
lods
xor
cmp
iret
xchg
movsb
jg
jbe
or
cwtl
mov
add
add
enter
popf
mov
test
inc
or
mov
push
dec
mov
add
pop
nop
adc
add
lret
mov
dec
add
cmp
in
in
popa
rorl
lret
loopne
xchg
call
hlt
jnp
shlb
faddl
inc
add
out
push
cmpsb
cld
enter
pop
das
mov
sbb
pop
add
push
jmp
enter
repnz
add
out
movsb
and
sub
or
pop
cltd
jmp
xor
push
movsb
rol
fsubrl
icebp
mov
sub
iret
fildl
in
pusha
cwtl
or
xchg
push
pop
imulb
inc
jg
pop
ss
es
sub
mov
add
jae
fs
add
push
insb
add
cmp
mov
clc
pop
add
int3
cmp
fmuls
fldl
mov
in
jno
lcall
mov
inc
pop
adc
stos
push
push
xchg
int3
cmp
sub
nop
mov
add
and
data16
add
scas
aaa
cmpsl
out
mov
adc
or
sbb
add
push
pop
add
daa
repnz
imul
push
add
xor
scas
dec
cmp
add
mov
add
mov
mov
dec
in
movsl
ret
rcrb
and
add
mov
mov
sbb
aam
or
push
fcomp
push
or
xor
mov
lock
cld
mov
mov
je
fs
pop
push
dec
and
call
add
pop
rcl
cmp
jl
and
test
out
dec
cwtl
stos
jecxz
pop
outsl
scas
int
sbbb
jno
mov
pop
cmp
lock
outsl
add
fistpll
rorl
add
and
jae
nop
sbb
mov
fnstsw
xchg
rorl
sub
je
js
add
mov
lock
movl
out
inc
lods
ja
jg
xor
loope
mov
gs
loopne
imul
mov
xlat
addb
data16
add
int3
xor
outsl
add
sub
push
add
cld
adc
test
jbe
push
or
add
mov
inc
push
push
add
sbb
or
dec
xor
and
push
inc
cmp
push
dec
flds
movsb
adc
ljmp
sbb
push
cltd
ja
loopne
add
xor
mov
mov
add
fdivl
aas
xor
push
je
les
add
sbb
dec
shlb
pop
scas
sbb
mov
jg
lahf
push
daa
ret
push
jbe
push
dec
and
popf
pop
cld
add
mov
insl
or
mov
sbb
adc
ja
push
lock
dec
mov
add
popa
lods
sbb
in
pop
dec
add
jo,pn
je
jno
add
ss
addb
cmp
clc
dec
add
push
xchg
mov
cmp
shlb
mov
enter
or
or
shll
fmulp
or
or
add
iret
lds
cmpsl
xlat
add
sub
push
and
es
add
pop
loope
jo
aam
adc
negl
scas
in
adc
push
xchg
sbb
frstor
sbb
insl
nop
out
jmp
add
rcrl
lock
mov
loop
push
fiaddl
iret
movsb
push
xor
fisttps
add
jl
lcall
mov
and
leave
fsubr
xchg
push
pop
and
mov
test
fcompl
jg
push
inc
xchg
push
cli
mov
mov
add
daa
sbb
sub
add
cmpl
test
add
movsb
inc
jae
popa
insl
pop
sub
mov
std
add
out
push
icebp
pop
mov
jno
push
cld
add
loopne
or
scas
push
and
out
sub
jb
lods
mov
out
fcomps
jo
and
sbbb
xchg
sbb
addb
negl
js
mov
sub
push
cwtl
add
push
and
mov
add
adc
xorb
pusha
cmp
cltd
out
adc
push
xchg
cmp
dec
push
sbb
leave
add
xchg
add
add
and
add
mov
in
out
pop
jb
xor
pushf
cs
lock
pop
loop
add
dec
cmc
fistl
movsb
mov
add
pop
negb
sub
loop
inc
scas
call
or
stos
addr16
push
add
ja
outsb
mov
sub
lret
arpl
dec
or
push
mov
inc
pop
sbb
jge
ret
enter
shlb
fdiv
xor
stos
xchg
mov
mov
sub
xchg
inc
je
push
push
movsl
jne
xor
push
psubsb
dec
addb
cwtl
fistl
mov
aam
mov
cld
fwait
inc
mov
add
and
sub
rorl
shrl
pusha
insb
bound
nop
hlt
adc
stos
das
lods
mov
cmp
mov
loopne
push
test
js
gs
xchg
inc
shrb
inc
mov
leave
sub
cmp
mov
faddl
je
fs
push
adc
pop
lods
mov
insb
cmpsl
add
mov
mov
and
loopne
adc
cmp
call
popa
xchg
stos
inc
inc
push
inc
test
movsl
ret
sti
cmp
lods
and
jb
clc
call
ret
inc
test
adc
adc
stc
push
adc
gs
jnp
dec
pushf
stos
push
cmp
inc
dec
sarb
movsl
or
nop
adc
sub
incl
fstps
and
mov
in
lock
and
inc
push
pusha
sbb
mov
inc
cld
pop
rcrb
inc
mov
ljmp
inc
flds
adc
push
pop
call
mov
and
mov
cmp
mov
adc
add
leave
or
movsb
add
mov
bound
xchg
loopne
adc
add
fstps
hlt
jo
jge
sub
adc
jp
or
addl
dec
call
sbb
inc
frstor
push
out
add
ficomps
xchg
dec
mov
or
shr
and
add
test
aas
out
cmp
addb
add
mov
js
enter
xor
adc
adc
outsl
ret
and
add
inc
sar
cmp
call
lock
pop
cs
adc
cmpsl
dec
nop
arpl
or
mov
hlt
pop
xchg
jnp
mov
sub
fisttpll
pushf
inc
xchg
jno
add
jge
sbb
jne
add
or
cltd
xor
ja
add
imul
adc
sbb
add
ret
mov
andb
add
insl
jno
push
pop
xor
and
mov
dec
and
enter
xchg
add
mov
jbe
rolb
adc
lock
js
dec
or
insb
int
cmp
xchg
or
mov
mov
movsl
sub
sub
aad
adc
sub
mov
sub
je
or
andb
mov
inc
not
push
or
mov
jecxz
push
adc
stos
add
mov
adc
mov
stc
les
adc
dec
push
test
mov
adc
js
or
mov
rorl
push
or
cltd
pop
add
xor
cmp
outsl
xor
test
xor
pop
pop
leave
dec
cmpsl
push
cmp
or
stos
imul
jmp
and
push
mov
sub
lods
aam
pop
cmpsb
jo
mov
add
mov
mov
enter
nop
add
cmp
pop
movsb
ret
inc
cmpb
insb
add
aam
aam
and
cld
sub
fcoml
pusha
insl
mov
mov
or
scas
je
loopne
push
sub
add
movsl
sbb
add
mov
inc
mov
pop
les
cmp
inc
in
dec
enter
push
mov
mov
xchg
and
pop
addb
mov
xchg
add
xor
dec
iret
lcall
or
shrb
push
inc
repz
jmp
dec
lods
dec
pop
lea
inc
or
or
xor
arpl
mov
jnp
add
scas
mov
xor
loopne
subl
lock
add
insb
mov
test
loope
jo
pop
inc
out
mov
stos
add
bound
sub
mov
jmp
filds
in
dec
jns
outsl
mov
sub
jne
pop
jmp
mov
gs
mov
inc
ss
pinsrw
xchg
xor
xchg
movsl
pop
push
pusha
mov
aas
or
push
push
std
je
push
pop
sub
les
sbb
aam
jl
pop
xchg
fs
dec
dec
inc
inc
dec
pop
xor
jmp
inc
sub
xor
data16
jecxz
cwtl
mov
inc
clc
jle
movsb
test
aad
xlat
sbb
pop
cmovp
cwtl
adc
xchg
movsb
pop
and
addb
clc
and
cmpsb
and
fsubl
ljmp
enter
or
add
push
cltd
and
andl
add
jmp
sbbl
mov
nop
lods
dec
mov
mov
cld
lcall
jo
add
rorb
inc
out
ja
sub
mov
inc
hlt
das
jb
sub
xchg
cmp
loop
add
push
pop
in
pop
leave
cli
adc
imulb
icebp
dec
mov
hlt
negl
pop
pushf
or
mov
sbb
push
icebp
bound
sub
es
mov
adc
xchg
mov
movlps
jmp
xor
daa
and
insb
or
xchg
cmpsb
xor
inc
mov
cld
push
js
imul
hlt
adc
test
or
stc
mov
aam
sub
ret
ja
in
mov
pop
cwtl
pop
push
hlt
pop
movsl
add
cmpsl
std
mov
add
inc
in
loopne
out
jne
mov
xor
rorl
ljmp
ret
mov
sysret
lds
cmp
call
and
and
je
loop
pushf
mov
inc
and
mov
shlb
inc
pop
out
sub
enter
push
inc
addb
mov
in
aam
fs
icebp
mov
aad
iret
out
cmp
das
testb
cmp
mov
pusha
xchg
sbb
push
lahf
js
and
inc
cmp
movsl
cld
imul
push
or
aaa
fadds
in
sti
and
jg
inc
jbe
add
add
clc
add
nop
sub
fnstenv
push
fists
add
jne
sbb
inc
movsb
fisubrl
movsl
push
mov
stos
insb
and
cs
mov
mov
adc
dec
add
jg
or
shld
jo
adcb
shrl
or
xor
mov
mov
incl
rcll
nop
dec
cmp
mov
push
mov
add
add
adcl
cs
enter
push
xchg
clc
in
add
cmpsb
imul
xor
mov
xchg
aam
xchg
push
imul
mov
movsl
in
cmp
ja
rcrl
mov
sbb
insb
mov
mov
xchg
movsbl
imul
test
pop
inc
adc
dec
es
movsl
mov
test
and
test
sub
sub
mov
and
adc
aam
mov
adcb
pop
add
enter
pop
dec
les
xor
mov
iret
or
test
and
xor
add
daa
dec
and
and
lods
mov
outsl
aas
bound
xchg
arpl
adc
adc
push
jno
inc
nop
and
xchg
test
adc
sbb
rolb
out
push
clc
enter
sub
das
add
test
xor
imul
ror
or
adc
sub
and
jl
loopne
je
sub
shlb
sbb
ljmp
dec
sbb
jno
mov
xor
mov
jns
fcoms
cld
adc
add
mov
call
add
xchg
sarb
add
lret
mov
lock
xchg
nop
inc
xchg
ja
add
pop
sbb
mov
bound
loopne
int
pop
or
sar
mov
dec
call
ja
xchg
sbb
movsl
and
mov
adc
inc
scas
call
cwtl
mov
inc
popa
mov
in
cltd
inc
dec
loopne
and
cwtl
incl
push
xchg
xchg
mov
pop
lock
cmp
fdivl
add
jge
fiaddl
pushf
or
stos
add
mov
hlt
mov
mov
in
push
jl
sbb
adc
pop
and
fmull
push
rol
mov
fidivrs
adc
scas
add
dec
and
out
adcb
push
adc
pop
dec
insb
shrb
arpl
inc
mov
fnstsw
cld
into
test
orb
cmp
add
hlt
mov
addr16
aam
je
fcomps
les
sbbl
js
push
idivl
push
lahf
dec
sub
jnp
roll
xchg
cmpsl
jbe
loope
pop
or
and
mov
xorb
add
cmpsb
in
add
pop
mov
add
gs
jns
js
pop
and
and
jg
sarl
js
cmp
repz
aam
adc
mov
push
pop
sahf
je
popf
push
and
fwait
or
rcl
mul
adc
cmc
inc
fadd
aas
add
adc
sub
scas
add
fists
ljmp
inc
test
add
add
ret
in
mov
mov
jns
mov
sbb
pop
xchg
pop
pop
and
mov
aas
sub
test
lcall
movb
mov
mov
cmc
iret
pop
dec
call
in
adc
addb
add
lock
shrb
ljmp
xlat
adc
fwait
std
imul
sub
jg
adc
adcb
or
dec
jp
dec
nop
cmp
inc
test
fsubrs
dec
and
addb
add
icebp
sbb
stos
mov
mov
hlt
lahf
les
pop
loope,pn
shlb
push
mov
add
scas
pop
add
enter
lret
addr16
flds
hlt
pushf
xorb
adc
lods
mov
mov
arpl
cmp
das
add
push
lret
xor
mov
stos
pop
cwtl
mov
and
sub
add
mov
cmp
test
pusha
and
inc
add
add
add
mov
jmp
jno
insl
mov
lods
add
adc
cmpb
pop
hlt
and
mov
dec
cmpl
fwait
sub
push
sub
add
cmp
xchg
add
sti
decl
imul
sub
mov
add
ficomps
les
or
add
dec
mov
sbb
and
pushf
push
enter
add
and
jle
add
int
lock
sbb
lret
call
pop
cwtl
push
mov
and
fisttpll
ffreep
pinsrw
cmpsb
adcb
xor
pushf
imul
imul
adc
add
mov
in
pop
jbe
add
inc
loop
popa
lret
fwait
popf
adc
addr16
rolb
push
popa
sub
fnstsw
test
mov
add
fistpl
test
out
jl
xor
add
pop
mov
xor
loope
adc
into
dec
rol
mov
lock
pop
dec
scas
pop
pop
cmp
sbb
fnstsw
add
cmc
and
sbb
xor
test
stc
bound
add
call
out
adc
sbb
aas
ja
jno
dec
mov
fcmovb
std
or
push
add
lock
dec
shrb
adc
fidivrs
sbb
test
xchg
adc
shr
cwtl
dec
and
mov
sub
xchg
inc
dec
or
sbb
xor
push
popa
loopne
imul
mov
pop
fcompl
xchg
add
jae
jge
insb
insb
push
push
adc
hlt
adc
add
xchg
out
pop
cwtl
jecxz
sbb
xchg
xchg
add
mov
iret
xor
adc
pop
and
js
add
push
or
icebp
fcoms
sahf
sbb
add
pop
mov
rolb
cltd
addb
push
je
adc
jae
and
pushf
and
leave
push
stc
in
add
je
add
cmp
enter
mov
rorb
inc
add
ror
rolb
jecxz
loopne
inc
into
add
int
add
xor
xor
dec
xchg
add
mov
mov
dec
mov
cwtl
and
and
adc
hlt
in
stos
icebp
clc
dec
add
inc
sbb
and
xchg
dec
loope
stc
jnp
mov
rolb
lcall
xchg
add
push
push
sbb
push
add
stc
lret
adc
dec
xor
sbbb
jnp
xchg
add
push
push
cli
fbstp
fidivl
in
int3
inc
xchg
andb
adc
sub
push
push
mov
fs
pop
cld
nop
rclb
sbb
sbb
mov
adc
fwait
push
filds
ficomps
sti
shrl
push
mov
sub
mov
lret
sahf
push
sbb
mov
and
jge
and
and
lea
insl
int3
cwtl
rcrb
ss
xchg
and
int3
mov
out
pop
or
push
and
pop
test
repz
imul
test
sub
dec
pop
int3
xor
fiadds
nop
xor
or
test
xor
in
das
jge
add
inc
or
ja
inc
enter
mov
add
aas
andl
push
pop
ret
add
adc
pop
jge
dec
pop
hlt
and
sub
test
mov
sbb
pusha
xchg
popa
imul
imul
inc
and
pop
mov
cmp
xor
addr16
cmc
add
test
fdiv
por
dec
gs
xchg
je
pop
icebp
mov
inc
and
or
add
and
in
js
jg
sub
mov
sbb
cltd
and
push
cmp
jo
sar
adc
mov
add
mov
cmp
stos
imul
add
sub
jmp
xchg
jl
or
cltd
sbb
push
cmp
adc
dec
jnp
sahf
and
push
sub
jnp
cltd
add
movsb
ret
cld
dec
mov
sub
pop
and
movsb
or
pushf
arpl
call
push
mov
imul
xor
fdivs
pop
mov
mov
shll
dec
sub
subl
nop
and
insb
add
cmc
lds
push
js
mov
cmpsb
add
sub
addb
jb
ja
shll
scas
dec
push
cmpsl
pop
sbb
pop
jmp
shl
icebp
es
dec
in
shrl
and
addr16
mov
add
inc
sbb
subb
jns
rolb
and
sti
adc
lret
jle
and
or
add
lea
sbbb
fwait
mov
dec
cwtl
cmp
mov
js
and
add
and
push
pop
push
call
add
int3
sub
rolb
mov
movsl
icebp
mov
jl
xchg
pop
sbb
xor
xor
pop
aad
out
arpl
sbb
mov
pushf
and
inc
mov
in
ljmp
test
xor
adc
push
lret
adc
popa
pop
mov
mov
push
jne
cs
inc
lcall
pusha
pop
push
cmp
sbb
call
mov
mov
dec
xor
push
inc
inc
ja
test
sub
cmp
mull
cld
repnz
mov
fs
lods
inc
xor
popa
rclb
add
dec
inc
testl
inc
xchg
cmp
sbb
inc
nop
and
aam
jl
stos
les
and
fbld
dec
lock
sub
adc
out
add
sub
adc
hlt
cmp
pop
mov
inc
and
push
add
mov
xor
sbb
pop
scas
add
cmp
out
adc
xor
mov
lret
scas
lcall
xor
js
loopne
lods
loopne
sbb
dec
bts
sbb
pushf
jne
fsubs
hlt
add
mov
and
push
add
sub
jmp
sbb
jge
lock
mov
rolb
push
test
fs
dec
or
adc
ss
adc
pop
fdivr
mov
inc
add
fnstsw
fdivrl
xorb
jnp
push
xchg
ds
test
xchg
sub
add
add
jecxz
adc
leave
test
xor
dec
add
imul
add
jmp
push
sbb
inc
cld
xor
sti
jno
add
or
inc
cmpsb
popa
and
xor
sub
xchg
xchg
dec
pusha
sub
leave
es
xorl
jle
in
in
dec
and
pop
pushf
dec
in
push
arpl
adc
subb
jne
es
mov
add
mov
inc
adcb
dec
add
cli
add
push
jl
stos
rcr
pop
add
das
fsubrp
hlt
sbb
push
stc
pusha
jl
dec
dec
mov
test
push
add
lods
and
gs
add
xor
dec
out
fisubs
xor
dec
fisubl
insl
movsl
pop
push
pop
pop
fwait
push
loope
das
loopne
loop
andl
andl
adc
inc
cwtl
fxch
mov
xchg
in
sbb
cmp
aam
popl
dec
and
ljmp
adc
xchg
xchg
mov
add
and
mov
dec
cmp
jge
inc
clc
filds
out
aaa
js
pop
aad
mov
cmpxchg
add
inc
fs
jp
add
scas
stos
outsl
les
cli
test
fisubrl
je
or
sahf
xorb
rclb
xchg
mov
xchg
fisubs
add
or
add
cmp
lods
popa
ds
xchg
in
inc
mov
mov
cmp
popa
je
adc
addb
stos
add
add
hlt
xchg
xchg
sahf
mov
add
imul
and
arpl
pop
mov
vpaddd
push
mov
push
rol
adc
icebp
into
sbb
in
popl
jp
cwtl
sbb
movsb
add
outsb
test
in
les
pusha
inc
lret
cmpsb
push
iret
and
add
mov
ret
adc
leave
add
arpl
mov
xchg
cmp
mov
pop
fbstp
pushf
dec
add
icebp
out
xchg
clc
or
in
cld
mov
add
clc
adc
pop
or
movsl
pop
add
fwait
gs
cmp
mov
sub
or
test
cltd
movsl
cmp
or
add
adc
add
je
mov
dec
mov
jge
sbb
not
fdivl
sub
pushf
aad
sbb
xor
fadds
inc
pop
adcb
add
hlt
int
out
inc
adc
mov
adc
sbb
push
ljmp
sub
bsf
scas
fsubs
xchg
xor
adc
in
adc
cmpl
dec
test
aad
dec
xor
lds
ljmp
jb
insl
wrmsr
call
jo
pop
out
stos
adcb
push
movsb
cmp
sar
add
mov
xor
jbe
dec
les
sbb
mov
rolb
mov
sahf
adc
rolb
je
mov
jp
cld
mov
loopne
loope
inc
add
adc
out
and
loop
addr16
add
outsl
mov
dec
xchg
lret
push
pushf
cld
inc
xchg
mov
test
jne
add
in
in
js
fucomi
ficoms
xchg
push
dec
es
pusha
mov
mov
xor
sbb
xorb
int3
pop
nop
add
dec
fwait
jnp
sarb
mov
mov
push
lods
adc
pop
push
jmp
fst
out
mov
push
cwtl
arpl
add
cmp
sbb
ret
das
nop
mov
dec
add
push
or
cld
cmpsl
sbb
imul
inc
notb
xchg
push
add
fdivs
mov
repz
dec
pop
shrb
sbb
cwtl
test
add
jl
xchg
cmp
or
fs
mov
cmpb
dec
jo
sbb
mov
mov
or
js
pusha
dec
push
shll
sbb
cmp
mov
shlb
mov
mov
addr16
stos
je
aam
add
inc
das
arpl
popf
andb
ja
popa
xchg
pop
add
and
and
pushf
setne
inc
adc
or
adc
cmp
iret
sub
jbe
pop
addr16
add
popf
sbb
pop
loop
pusha
shlb
bound
scas
rclb
shrb
ldmxcsr
pushf
bound
fmul
xchg
xor
stos
inc
mov
mov
mov
and
push
mov
mov
lock
nop
loope
xchg
int3
or
movsl
jge
icebp
push
and
xor
adc
bnd
cmpsl
sub
nop
and
call
push
cmc
test
sub
mov
xchg
inc
or
pop
call
mov
jne
cli
mov
cmpsb
data16
imul
in
add
push
mov
sbb
pop
int
movsb
aas
ret
pop
test
push
imul
rcll
cs
fsts
lods
test
fdivrs
popa
inc
or
movsb
ja
push
lock
pop
and
fdivl
dec
pop
les
jl
mov
test
in
cmpsl
aam
pop
sub
clc
adc
push
loopne
jecxz
jae
add
pushf
loope
or
out
jmp
mov
es
pop
mov
mov
js
sub
xchg
cwtl
pop
sahf
and
sub
cmp
adc
add
jmp
enter
outsb
hlt
cmp
les
stc
xor
mov
clc
sub
xchg
lret
mov
or
call
es
mov
daa
les
test
into
cmp
movsl
sbb
jp
jge
mov
std
mov
push
sbb
add
cvttps2pi
mov
stc
stos
clc
pusha
dec
mov
insl
cwtl
inc
inc
fdivrs
cmp
daa
and
sbb
aam
push
xor
jp
add
push
fcmovu
fstps
jne
and
xorb
les
iret
push
pop
cltd
add
pop
cmpb
push
cwtl
dec
pop
mov
sub
mov
jle
xlat
ret
lahf
lds
push
pop
sub
cmp
mov
shrb
nop
pop
add
int3
cmp
vmread
arpl
filds
or
pop
jge
mov
leave
ds
xchg
push
repnz
add
fcmovnu
or
fdivl
lea
jmp
pop
jmp
stos
fildl
aaa
pop
sub
rolb
insb
jg
into
mov
fwait
jne
cmp
cmp
add
xor
and
loopne
cmpsb
or
in
ret
setbe
adc
lods
adc
pavgb
sub
mov
addr16
mov
sub
test
loop
test
push
jecxz
mov
les
and
jge
test
vaddsubps
nop
add
in
out
frstor
pusha
sbb
in
jp
insb
cmp
jl
mov
jbe
add
and
add
push
push
out
inc
add
or
cld
mov
push
lods
dec
and
mov
ret
inc
call
cld
data16
push
ja
pop
inc
inc
push
int
or
out
in
shll
int3
call
sahf
lock
ljmp
add
js
pusha
sbb
jp
fisttpll
adc
sub
in
movsb
push
addb
leave
test
and
dec
and
aaa
jle
jae
movsb
jno
and
out
pop
push
push
pusha
adc
fs
add
cmovg
lret
in
xor
mov
mov
imul
add
ds
push
and
insb
int
mov
add
xchg
aad
cwtl
and
arpl
das
and
rcrl
add
aam
mov
add
ss
xchg
and
jo
cli
pop
icebp
mov
jp
add
hlt
scas
push
add
ret
rorb
xchg
cltd
fadd
inc
aaa
int
xor
and
movsb
and
outsl
inc
and
adc
and
jge
pusha
adc
lret
xchg
inc
jne
sbb
std
add
xchg
mov
jmp
sbb
int3
adc
inc
les
xchg
ret
adc
mov
sbb
dec
cli
add
or
mov
add
cmp
adcb
xchg
aaa
enter
mov
cmp
dec
mov
aas
popf
and
and
xor
scas
mov
insb
int3
xorl
rolb
or
je
adc
fdivr
jno
add
mov
dec
sarb
les
add
dec
subl
and
aaa
jae
ljmp
add
xchg
orb
rorb
inc
mov
or
push
adc
add
imul
sub
sub
lahf
inc
scas
or
dec
out
add
jl
inc
adc
psubusb
call
or
loop
or
adc
or
pop
insl
dec
add
xor
push
lcall
pusha
adc
dec
inc
xor
sbb
or
push
cmp
add
gs
je
push
push
js
in
pop
lcall
out
sub
mov
pusha
insb
lds
add
adc
xor
orl
push
xor
vminps
fnstenv
in
inc
filds
dec
mov
pop
jns
xchg
into
jae
test
dec
addr16
pushf
pop
mov
sub
xchg
or
hlt
mov
fwait
add
push
out
inc
pop
sahf
test
loop
push
aas
cmpsl
push
loopne
bound
xchg
cs
adc
les
inc
pop
jp
mov
adc
lret
lret
repz
jno
lds
testb
es
addr16
inc
add
pop
xchg
add
rorl
movsb
bound
push
push
pop
jg
inc
xchg
jle
xor
insb
test
push
push
test
jmp
and
add
ret
pop
mov
add
inc
mov
pcmpgtw
sbb
lock
mov
xor
pop
enter
lds
adc
xchg
test
arpl
sbb
out
jge
cmp
jmp
add
pusha
add
pusha
mov
mov
icebp
cmpl
daa
mov
adc
add
out
mov
adc
daa
nop
sbb
lods
sbb
jns
mov
add
and
rclb
rorl
push
clc
add
inc
add
push
test
fdivrl
sub
pop
insl
and
sbb
and
and
xor
add
hlt
mov
add
clc
scas
push
sahf
stc
pushf
daa
sbb
add
cli
mov
dec
mov
cwtl
or
dec
imul
addl
push
mov
add
lret
push
add
jle
imulb
es
out
inc
inc
enter
jb
pop
imul
and
jae
aaa
pop
inc
inc
mov
adc
or
loope
aad
int3
imul
and
icebp
int3
pop
push
mov
leave
lcall
mov
cmp
outsl
stos
jns
push
das
push
sub
add
cmp
ljmp
pushf
addr16
and
scas
sahf
orb
lahf
jl
js
add
mov
aam
and
mov
jne
mov
jno
rclb
fcompl
ror
push
pop
add
sbb
adc
or
xor
inc
add
cltd
stos
push
fucom
inc
adc
pushf
cmp
inc
inc
in
lret
cmp
enter
adc
cmp
mov
mov
push
loope
insb
sub
lock
lds
sbb
push
jecxz
add
or
adc
add
fwait
cmpb
xor
cmp
xchg
push
adcb
cmc
out
jbe,pt
scas
inc
jge
lds
sarb
loop
lods
or
inc
arpl
sbbl
jne
mov
add
mov
cmp
lahf
mov
dec
add
and
leave
mov
int
nop
shlb
lret
add
jg
popa
ficomps
sti
xor
xchg
push
push
xchg
or
insb
sbb
pusha
sti
cmp
scas
andl
add
cmp
inc
push
push
push
and
cld
repz
fdivr
xchg
cli
jl
push
aad
jns
into
add
mov
pusha
and
push
mov
xchg
inc
test
jl
scas
hlt
or
rcrl
xchg
cmp
xorb
loop
push
adcb
ret
call
dec
pop
xor
xor
adc
add
sbb
cmp
stc
lods
add
mov
cmp
fwait
imul
dec
jmp
inc
mov
in
adc
outsb
sbb
hlt
popf
inc
loop
mov
dec
inc
inc
push
shlb
cmp
mov
mov
bound
inc
mov
jle
pop
adc
lcall
cmp
xchg
or
fdivp
jle
fs
pop
scas
xchg
inc
call
test
mov
pop
lods
lock
test
xor
and
aaa
sbb
jecxz
mov
add
and
repnz
add
push
and
mov
sub
std
loopne
xchg
mov
xchg
adc
cmp
push
xchg
popa
inc
mov
stos
mov
test
push
hlt
cwtl
dec
cmp
rol
dec
enter
sti
iret
add
loop
push
jge
add
call
es
imul
mov
add
call
and
sbb
jle
add
fs
cwtl
fisubrs
xchg
hlt
dec
popa
cltd
clc
push
jle
aam
sub
sbb
pop
cmp
jb
jns
mov
fidivs
pop
mov
and
leave
in
dec
outsb
cmp
cmp
fisubs
outsl
jge
sbb
xchg
dec
in
add
dec
subb
stos
shr
xchg
cmc
shr
xchg
push
out
and
pushf
in
nop
jp,pt
int
xchg
mov
add
push
rorl
pop
adc
in
add
mov
dec
xchg
mov
push
nop
adc
jne
popa
cwtl
sbb
cmovns
add
push
add
cmp
stc
pop
add
addr16
dec
ficompl
iret
cltd
stos
add
pop
sbb
js
add
loop
and
xchg
add
cmp
fldcw
add
je
jecxz
js
dec
jns
add
add
enter
fmuls
dec
or
push
cmpsl
cmp
icebp
cmp
dec
add
popa
push
pop
inc
ret
les
cmc
mov
aad
add
push
mov
and
je
mov
sub
and
and
js
or
xchg
inc
aaa
inc
mov
jo
mov
jmp
imul
push
dec
cmovnp
pop
stos
fidivl
add
in
int3
mov
ret
rolb
mov
cmpsl
or
sub
stos
outsl
mov
push
dec
pop
push
cmp
je
repz
pop
and
xor
inc
adc
shr
mov
add
out
push
pop
mov
pop
mov
adc
sbb
adc
or
pop
iret
fiadds
jns
test
aam
pop
lea
push
lcall
mov
inc
enter
pop
push
cli
jb
sub
cmp
or
xchg
sbbb
ja
and
stos
lcall
add
add
or
les
icebp
insb
cmp
dec
jo
xchg
dec
xchg
aam
add
jno
loope
popa
inc
and
repnz
adc
sbb
push
cmpsl
enter
mov
inc
dec
and
mov
mov
test
pop
sub
fsub
jge
iret
in
xlat
sub
notb
pusha
mov
call
rclb
rolb
sbb
jle
add
loop
sbb
lea
lahf
xchg
fs
mov
mov
or
insb
fnstenv
cmp
add
push
jae
push
mov
nop
cld
mov
inc
xor
dec
insb
mov
xchg
dec
push
add
jle
fs
lods
adc
add
mov
xor
inc
enter
mov
and
andl
cltd
cli
subb
loop
add
fadd
add
fidivrs
outsl
mov
push
scas
faddl
inc
mov
js
xor
mov
mov
xchg
cwtl
fidivrl
add
push
rcl
push
js
scas
pusha
es
fsubrs
mov
dec
addr16
sbb
mov
negl
add
inc
jmp
pop
out
sbb
cltd
jecxz
and
rorb
out
add
xchg
std
cmp
call
adc
sub
pop
test
xor
ljmp
hlt
sub
cmc
xor
jne
push
xchg
lcall
jo
std
das
loope
and
pop
push
mov
iret
xor
mov
sub
jbe
jae
add
xchg
subb
pusha
dec
dec
xchg
cmp
xor
fwait
sbb
pop
pop
jb
add
orl
loop
pop
xchg
jl
enter
or
scas
movb
scas
lret
pop
cmp
daa
push
sbb
mov
shlb
gs
add
push
adc
jae
or
fwait
xchg
jle
in
idivb
add
loop
pop
sbb
sbb
in
push
xor
out
mov
iret
cli
pop
mov
add
popf
daa
cmp
ds
ror
dec
lds
and
int3
fnstenv
cmp
arpl
pop
inc
lods
jns
pop
and
js
popf
and
add
rorb
fadds
addr16
pop
mov
add
push
lret
movsb
fwait
imul
je
in
or
push
sbb
cmp
int3
and
sbb
mov
popf
inc
dec
stos
and
xchg
add
mov
test
aaa
cmp
ljmp
pop
out
add
or
call
xchg
int3
cmp
andb
add
mov
leave
cmpsb
sub
and
inc
push
inc
nop
orl
orl
imul
add
int3
mov
imul
nop
shrb
mov
out
pushf
add
mov
outsl
add
ds
or
dec
addr16
je
stos
push
int3
push
cwtl
lods
addr16
lds
add
out
std
sbb
inc
and
add
shl
push
pop
and
jp
add
subb
movsb
cmp
mov
sti
inc
loope
adc
inc
out
and
add
adc
and
dec
cmp
rclb
add
xchg
cmp
add
rcr
cmp
or
jnp
push
push
and
and
scas
andb
add
xchg
ret
add
filds
hlt
loopne
pop
pop
nop
mov
add
mov
add
inc
insl
daa
add
mov
inc
dec
test
mov
int3
xor
out
movsb
pusha
jnp
in
push
sbb
sbb
test
loopne
xor
shrb
add
repnz
cld
sbb
add
adc
cmove
pop
push
clc
add
arpl
mov
mov
pop
pop
repz
or
sub
dec
sbb
aad
cmp
adc
mov
pop
scas
popf
mov
in
in
push
cmp
xor
imul
popf
fwait
gs
aam
add
xchg
sbb
int3
aas
movsb
fcoml
loop
pop
nop
fmuls
or
mov
dec
add
cmp
pop
add
adc
add
sbb
das
pop
sbb
adc
les
bnd
addr16
xor
loopne
cwtl
jmp
sub
or
xor
and
mov
mov
and
imul
xchg
stc
jle
jne
and
add
mov
test
dec
add
mov
mov
ljmp
xor
mov
movntq
inc
pop
inc
push
pop
out
icebp
add
ljmp
rorb
movsb
mov
jl
push
pop
mov
sub
pop
iret
xchg
push
pushf
xchg
movsl
inc
test
push
dec
xor
push
add
jp
js
test
adc
inc
orb
repz
dec
or
or
inc
nop
mov
in
dec
add
das
cli
shrb
insb
xchg
inc
in
adc
add
add
int3
stos
xchg
lret
sbb
push
das
nop
xchg
ret
es
add
or
add
inc
push
mov
xorb
or
aad
cmp
out
dec
adc
or
sub
faddl
xor
stos
pop
cmp
aaa
inc
hlt
pop
fcoml
int
pop
int3
adc
inc
in
lods
mov
fcomp
leave
or
pop
jo
dec
add
mov
ret
add
mov
jecxz
pop
insb
add
and
pop
in
or
jmp
adcl
leave
add
and
or
ds
mov
bound
lahf
cmp
cmp
testl
mov
sub
sti
dec
push
int
fwait
dec
inc
sbb
dec
push
data16
out
add
imul
jmp
pusha
scas
leave
out
push
repnz
mov
sub
mov
das
enter
mov
loopne
xor
cmp
and
sbb
lods
rorb
lcall
push
add
mov
or
dec
shrb
bound
shll
mov
jno
add
jl
adc
cmp
jnp
add
sahf
js
xor
xor
add
loopne
mov
les
jbe
dec
adc
sti
cmpsb
mov
sub
mov
add
and
mov
idivl
cmp
in
push
addl
inc
add
dec
inc
daa
sbb
and
nop
and
push
mov
pop
fs
lea
mov
add
and
test
fiaddl
cmp
pop
jle
mov
cwtl
roll
add
push
or
repnz
dec
bswap
test
bswap
nop
fidivl
fdiv
add
cmpsl
xor
mov
popa
sub
dec
cmp
dec
subb
sub
push
inc
inc
or
les
lret
cmovno
pop
add
insl
or
dec
out
cmp
out
int
leave
inc
mov
add
xchg
es
lods
rorb
sbb
adc
add
mov
cmp
mov
out
cs
or
xlat
cmp
add
movsb
jmp
ds
pop
ljmp
cmp
add
adc
int3
adcb
rolb
inc
jbe
sbb
and
or
mov
fidivrs
and
fcompl
inc
andl
or
int3
or
mov
fsubrs
je
sub
test
scas
add
sti
and
mov
lods
mov
shl
mov
popa
daa
dec
push
les
mov
cmpsl
add
cmp
inc
jge
xor
adc
daa
call
jns
add
movsl
mov
sbb
xchg
test
xchg
adc
jns
inc
movsb
pop
inc
and
lret
sub
cld
xchg
les
push
sbb
dec
ficoms
test
push
cmp
xchg
add
inc
out
cmp
rorl
pop
add
cmc
rol
add
fisubl
ljmp
dec
fs
cmp
xchg
xor
nop
or
add
dec
pusha
stc
xor
pop
fcomps
fwait
add
pop
pop
pop
sub
cmp
pop
into
stos
les
inc
mov
adc
add
dec
fbstp
jne
add
sub
sub
iret
mov
mov
jle
loopne
push
or
fldcw
cltd
cmpsl
or
test
pop
pop
pop
mov
pop
es
fs
xchg
and
push
adc
add
je
sti
fdivrl
add
pop
cmc
push
inc
stos
jne
aam
into
jbe
pop
jbe
mov
add
mov
sbb
mov
jo
std
pop
and
push
add
sbb
leave
add
pushf
out
sbb
mov
fs
mov
popa
and
arpl
sub
lods
xchg
jno
add
addr16
sbb
sbb
nop
popa
jmp
lock
ret
les
lahf
rcll
in
rcl
pop
bound
lea
inc
sahf
push
xor
add
cmp
pop
lcall
mov
inc
adc
push
mov
add
fldenv
add
adc
daa
cmp
hlt
push
lret
pop
pop
push
pop
sarb
data16
add
das
sbb
addb
jecxz
or
popf
mov
mov
cmp
scas
push
aas
jb
rcr
loope
out
xor
mov
fadds
outsb
or
adc
xorl
fstpt
adc
gs
add
testb
push
cwtl
dec
pop
push
insl
cmp
mov
jnp
pusha
test
dec
movsl
xchg
push
mov
cmp
add
test
mov
rclb
and
mov
jp
add
push
scas
orb
int3
add
add
mov
imul
mov
mov
sbb
and
adcb
in
pop
movsl
movsb
cmpsb
sub
bound
and
xchg
add
mov
sahf
dec
xchg
push
adc
into
gs
or
adcl
jno
and
xchg
sub
xchg
loopne
flds
dec
cmc
or
jmp
add
jp
sub
ljmp
jae
xor
icebp
mov
and
cmpsl
mov
enter
gs
int3
mov
test
fs
cmp
jl
inc
lcall
and
add
xchg
sbb
jae
and
loop
dec
stc
jg
xor
mov
jp
js
lds
add
js
icebp
ficoms
stos
adc
insl
je,pn
lcall
add
sbb
add
jne
mov
or
movsb
jno
sub
sbb
in
sbb
add
xchg
in
pushf
ret
je
dec
pop
lcall
das
sbb
data16
into
mov
loopne
adc
adc
popf
int
inc
pop
lods
div
fistpll
add
outsb
shrd
mov
jns
mov
addl
inc
jnp
mov
popa
push
pusha
int3
push
lcall
fidivs
dec
add
xchg
push
orl
shll
bound
je
xor
nop
movsb
and
int
mov
fmuls
inc
xchg
enter
cmc
imul
xchg
sbb
or
push
sbb
dec
sub
fistpl
sbb
add
inc
enter
out
add
scas
fldenv
bound
and
pop
icebp
roll
cld
mov
lds
xor
push
jmp
mov
addb
movsb
add
lcall
sbb
stc
loop
sub
cmp
enter
add
lock
sub
mov
mov
push
test
sbb
mov
mov
popf
mov
inc
lret
push
enter
mov
mov
push
test
and
add
pop
jne
stos
or
jo
cld
and
jl
addb
xor
mov
add
xchg
xor
inc
and
sub
push
fbstp
cmp
add
je
mov
cmp
xchg
add
sbb
add
stos
xchg
test
add
lahf
inc
pop
jne
add
sub
orb
pusha
inc
movsl
push
and
mov
inc
cltd
daa
mov
and
mov
adcb
jno
das
jg
push
pop
shll
add
jp
add
adc
push
lock
test
xchg
mov
or
shlb
test
mov
adc
out
jle
xchg
cmp
ss
sub
ja
pusha
push
test
call
inc
dec
es
aas
add
mov
fwait
sub
inc
push
pop
dec
mov
mov
into
xor
add
call
mov
add
movsb
cs
adc
repnz
loopne
mov
add
jmp
mov
add
xor
mov
sbb
cmp
inc
hlt
push
push
je
mov
pop
test
adc
inc
popa
push
pushf
loopne
test
add
out
add
mov
test
mov
test
adc
sub
mov
scas
cmpsb
adc
add
shrl
test
fdivrp
sahf
mov
aam
cwtl
add
sti
out
add
das
lcall
outsl
cwtl
stos
shrl
sub
xor
and
and
add
mov
inc
add
fistl
imul
add
inc
xchg
jmp
in
mov
outsl
xchg
and
movsl
dec
sub
ret
sub
andps
adc
and
mov
inc
in
or
sbb
movsb
mov
sbb
lahf
add
subl
orb
mov
xlat
leave
add
adc
enter
mov
sbb
call
mov
outsb
pushf
add
jnp
or
mov
sub
sbb
inc
xchg
mov
lea
push
popa
sub
mov
inc
xor
pop
and
mov
inc
jne
and
push
pop
psllq
enter
pop
and
pushaw
adc
mov
mov
mov
nop
pop
inc
pop
pusha
pop
popa
stos
adc
jbe
insb
cwtl
push
xor
nop
mov
imul
loopne
push
sbb
add
xchg
xorl
test
arpl
pop
movsl
xchg
jmp
fsubrs
pushf
fs
and
sbb
mov
mov
jb
add
xchg
fsubs
call
lods
xchg
pusha
inc
add
insl
add
pop
test
and
cmp
jge
add
add
outsb
dec
fwait
mov
push
inc
adc
mov
add
sub
xor
add
cmp
mov
pop
cmp
add
or
and
jmp
lock
sbb
sub
movsb
fs
jp
lds
ret
xchg
aas
xorb
in
test
pushf
add
lcall
jbe
pop
repnz
adc
stos
dec
xchg
int3
pop
in
aad
lds
addl
jp
mov
mov
mov
sbb
out
pop
xlat
push
add
out
add
inc
dec
insl
cmp
cmpsb
aad
call
cmp
adc
sbb
adc
cmp
sbb
inc
adc
inc
data16
insl
mov
shl
adc
rorl
test
roll
into
sub
dec
push
js
xchg
fsub
gs
sahf
cwtl
imulb
pop
cld
inc
jmp
xor
cs
mov
popa
pushf
pop
fmuls
lods
add
int3
test
test
loopne
subb
cmp
imull
pop
fildl
ds
pop
stc
clc
cmpb
dec
outsb
and
cmp
cli
aaa
sub
cmp
sbb
mov
mov
add
mov
test
ljmp
sub
test
push
jmp
push
cmovo
xor
icebp
in
sbb
mov
repnz
aas
pushf
std
xchg
je
jo
or
pop
pusha
mov
push
adc
imul
cmp
inc
add
loope
jo
mov
cs
mov
cmc
xchg
or
add
and
sub
push
movsl
out
mov
xchg
popf
and
lock
xor
or
cmp
dec
xorl
pop
jno
add
addr16
xchg
mov
and
outsb
mov
into
add
fbstp
sub
pop
stos
lock
sbb
inc
ds
mov
add
cli
xlat
sbb
mov
rolb
push
daa
mov
mov
push
ds
jns
inc
into
add
adc
sbb
mov
mov
cmp
jle
sub
fcompl
insl
cmp
cmp
add
sbb
test
xor
cmp
shlb
push
push
jecxz
frstor
and
mov
repz
push
shlb
push
lcall
and
pusha
jo
sbb
add
daa
jle
cltd
movsb
movsb
dec
cmpl
xchg
push
sub
pop
sub
add
xchg
push
shl
lret
dec
add
jno
sahf
push
xor
push
mov
shl
xchg
sbb
cmp
adc
dec
jl
pop
mov
or
popa
cmp
mov
dec
push
into
pop
and
jp
stc
push
lods
and
enter
fwait
test
mov
in
addb
push
jnp
fistl
sbb
es
push
clc
pusha
test
cld
andb
jnp
jle
jp
add
push
lods
lahf
xor
sbbb
sbb
enter
xchg
stos
push
xchg
loopne
xchg
mov
shll
add
pop
xchg
in
or
clc
mov
push
sbb
aam
cs
add
xchg
rcrb
inc
dec
and
mov
pop
cmp
add
mov
push
and
add
cmpl
rolb
movsb
popa
jmp
dec
inc
or
mov
hlt
fs
loopne
add
mov
adc
sub
in
nop
cltd
cli
and
pop
sub
je
dec
xor
adc
sub
lret
addb
pop
lods
mov
mov
push
in
cli
add
mov
add
dec
inc
pop
jns
jnp
add
mov
inc
je
and
nop
cwtl
add
mov
ljmp
add
mov
pushf
daa
sub
inc
mov
sti
movsl
cld
hlt
sub
pop
inc
inc
mov
popf
add
ficoml
insl
push
sub
xor
jne
jl
mov
and
and
push
add
or
mov
sub
add
clc
shr
stos
adc
arpl
fists
into
test
ret
outsb
cs
adc
subb
sarb
repz
jmp
push
loopne
push
and
cmp
clc
fistpll
push
inc
xchg
popa
rorb
add
stc
movsb
call
ljmp
stos
xor
cmc
add
out
rclb
jo
mov
cmp
pop
push
mov
adc
clc
and
mov
fcoms
xor
scas
mov
or
or
adc
inc
ljmp
sbb
sub
mov
push
in
pop
arpl
inc
or
clc
fiadds
sti
sub
adc
mov
stc
xchg
sbb
testl
and
pop
xor
bound
sbb
mov
ret
test
adc
test
mov
dec
jne
or
jns
xor
movsb
fadds
inc
push
lock
push
and
mov
inc
sub
repz
mov
jae
popf
xchg
fs
rclb
and
cltd
lock
lret
add
movsb
icebp
or
push
ret
sbb
xchg
insl
push
addr16
pushf
xchg
adc
pop
dec
test
add
push
push
fs
mov
arpl
or
adc
push
outsb
mov
add
add
mov
lret
mov
enter
xchg
bound
and
adc
adc
aas
jp
and
or
dec
in
add
adc
rclb
test
mov
jle
fisttpll
and
mov
dec
test
fstpt
repz
sub
mov
add
or
pusha
push
loopne
mov
pop
push
cmp
movsl
cs
inc
jg
jno
pop
sub
jnp
jo
mov
push
test
mov
mov
pop
rorb
test
adcb
clc
insb
add
data16
ds
pop
xchg
adc
xor
xor
pushf
and
adc
add
mov
push
mov
pop
jno
inc
mov
pop
in
cmpsl
adcb
adc
adc
in
push
mov
add
test
in
inc
mov
cmpsl
or
mov
jp
push
pushf
push
pop
cld
dec
sti
cmp
cmpsb
xor
add
das
push
scas
leave
fabs
xor
adc
cmp
add
jnp
out
and
addl
adc
mov
inc
test
and
aas
inc
and
add
mov
arpl
ret
sbb
or
test
dec
xor
lock
ljmp
mov
fnstsw
out
sbb
sbb
jae
add
fs
fdiv
dec
adc
clc
adc
push
adc
xor
mov
xchg
subb
fmuls
es
inc
inc
sbbb
add
pop
xchg
int3
dec
push
jnp
les
scas
and
rol
das
inc
sbb
negl
jge
mov
pop
jb
adc
mov
insl
andl
sbb
add
jae
fs
xchg
and
adc
add
mov
stc
adc
lock
test
loopne
sahf
mov
aam
pushf
adc
cwtl
dec
or
jae
inc
loopne
adc
lods
adc
aas
cmp
fnstenv
and
xchg
mov
daa
mov
add
sbb
sbb
add
jl
mov
jle
sbb
push
and
cmp
jl
mov
mov
mov
adc
jo
pop
inc
fsts
adc
popa
mov
leave
jo
nop
mov
add
xor
and
addl
mov
mov
fcmovu
mul
adc
pop
or
push
xchg
movsb
or
xor
mov
cmpb
add
int3
aam
xchg
arpl
ss
fnstcw
xchg
sbb
add
adc
sbb
mov
pop
mov
and
jne
inc
mov
pop
cmp
fildl
or
mov
xor
pop
add
cmp
mov
pop
add
sub
push
xchg
std
insb
add
cmp
or
fs
inc
push
mov
stos
outsb
jo
call
cmpsl
cmp
dec
push
cmp
xor
int3
mov
nop
sbb
xchg
add
scas
sub
jno
xchg
and
inc
xor
test
inc
sbb
ja
movsb
sbb
push
subb
jb
add
jnp
mov
mov
in
pop
or
pushf
cs
mov
out
shlb
jne
lods
mov
pop
lcall
imul
adc
shl
or
sub
mov
add
mov
pusha
in
lcall
sub
lea
add
bound
sub
test
xor
bound
and
or
andl
and
mov
cmp
daa
push
sub
or
test
cld
mov
popf
adc
shlb
test
jbe
scas
fwait
pusha
xor
add
mov
test
xor
sub
add
test
cmpsb
dec
nop
data16
inc
loopne
adc
es
rorb
inc
jge
sbb
js
cli
out
add
stos
xor
and
add
test
imul
add
iret
in
fdivr
fs
out
mov
shrb
push
icebp
push
xchg
inc
lret
push
adc
pop
dec
sub
cmc
inc
and
inc
mov
adc
popa
mov
js
in
dec
add
test
fwait
xor
inc
push
insb
in
inc
mov
jae
and
jne
fnstenv
cmp
add
and
icebp
jp
call
outsb
adc
add
das
inc
pushf
mov
push
mov
loopne
or
mov
in
rcr
sbb
jbe
mov
sbbb
fiadds
and
lods
lock
clc
jnp
or
aas
and
add
cmp
mulb
je
push
sahf
and
add
fs
les
sbb
pop
and
pop
jns
xchg
shrb
mov
dec
add
js
jb
push
cld
lods
pushf
add
movsl
shl
lds
shlb
jae
pop
dec
call
xchg
mov
arpl
push
inc
add
mov
mov
add
lret
cs
sti
lods
and
sub
add
pushf
mov
push
cmp
test
mov
out
cmc
sbb
mov
push
jns
and
inc
rcrl
pop
popa
fsubr
test
or
ja
lods
loope
in
rolb
jnp
stc
imul
jmp
mov
cmp
popa
fsubrl
and
fnstenv
mov
and
jle
sub
sub
lods
mov
stos
sub
add
pop
ror
push
lret
pop
and
shl
sub
adcb
mov
imul
pop
xchg
test
nop
test
sub
rcll
in
setg
mov
ljmp
push
add
add
sarb
xchg
push
xor
test
call
aam
lods
add
add
test
or
hlt
loope
rcrb
js
adc
test
or
add
pusha
push
rorl
sub
fld
cmpsb
push
mov
cltd
movsb
in
push
out
sub
mov
loope
js
popa
aas
fprem1
stc
fsubrl
stos
inc
cmpsl
fsubl
sahf
add
rorb
mov
rolb
push
push
into
xchg
or
and
xor
fisttps
stos
or
stc
add
add
mov
sub
mov
dec
dec
mov
orl
rorb
xchg
mov
mov
sub
push
icebp
popa
fimull
ja
add
dec
mov
and
je
enter
mov
ds
inc
loope
subb
sub
rcrl
add
test
mov
in
lahf
or
push
xchg
pop
sbb
add
push
outsb
dec
mov
dec
test
cltd
dec
xchg
cwtl
rolb
lods
lahf
mov
or
and
jbe
dec
push
pop
adc
sbb
inc
sbb
in
ret
jp
sub
inc
addb
add
mov
lock
xor
daa
mov
mov
mov
icebp
rcrl
and
sbb
lret
rolb
pop
pusha
scas
mov
imul
xor
ja
or
arpl
daa
inc
xchg
and
mov
add
cmpsb
adc
inc
mov
add
addl
pushf
mov
xorl
lock
sub
test
test
stc
ror
jnp
repnz
or
or
std
test
sub
call
push
xor
or
mov
dec
adc
mov
mov
fdivrl
push
in
xchg
lea
lret
pop
add
pop
repz
loopne
add
cmp
or
sbb
push
dec
xor
dec
sbb
rcrb
adc
dec
adc
je
scas
int
leave
inc
xchg
push
add
inc
test
test
mov
mov
jp
add
dec
push
push
adc
jnp
add
and
jnp
lret
cmpsb
xchg
adc
es
rorl
outsl
sbb
inc
nop
cwtl
xor
es
test
es
pusha
fs
ljmp
insl
add
cmpsl
mov
addb
cmp
fists
jns
rolb
add
movsb
sar
pop
mov
orb
add
addr16
pop
xchg
aam
mov
hlt
or
clc
xor
movsl
dec
inc
cld
sbb
sbb
cmp
andb
mov
xchg
scas
into
mov
push
pop
adc
sbb
cmp
loop
mov
xor
add
jg
adc
add
outsl
jmp
add
mov
imul
push
jge
add
mov
add
mov
push
fcomi
sbb
sub
xchg
mov
fcomps
ds
mov
sti
test
js
sub
test
loop
les
jo
jmp
mov
mov
je
nop
sbb
mov
testl
jmp
iret
mov
sub
popl
push
stos
xchg
xchg
divb
outsb
sub
mov
mov
xor
inc
push
fs
icebp
add
arpl
out
push
mov
rolb
in
sarl
dec
hlt
loope
add
sbb
mov
pop
adc
mov
jmp
jp
nop
adc
xor
testl
roll
std
mov
stos
mov
jg
sbbb
cmp
jl
shlb
or
add
lahf
jnp
jmp
pop
movsl
ret
mov
add
xor
mov
adc
sarb
sbb
lods
inc
cltd
rolb
pop
test
sbb
jns
push
add
lods
inc
xor
xor
pop
imul
outsb
push
movsb
add
scas
push
add
adc
lods
loop
test
movsb
popa
lock
int3
jmp
add
imul
mov
lahf
or
push
or
aad
shrl
rep
call
clc
sbb
mov
pop
stc
pop
mov
push
mov
jle
pop
xor
jbe
and
inc
xor
lock
imul
and
mov
add
or
andb
rorb
sbb
add
jp
int3
fidivs
mov
mov
lds
add
hlt
mov
clc
enter
lods
xor
and
jge
test
sub
mov
add
and
xlat
cmpb
and
sbb
rorb
mov
rcrb
cmc
jle
push
loope
movb
mov
scas
lret
xchg
or
sbb
incb
xchg
mov
test
loope
fsubrl
into
andl
pop
and
add
sbb
into
jmp
add
out
pop
inc
cmp
adc
int
and
mov
pop
mov
lds
lock
jle
xor
iret
add
enter
xor
adc
andb
inc
bound
and
ss
lods
push
xor
popa
add
pop
cmp
arpl
jb
rcr
movsl
cs
leave
cmp
jbe
clc
dec
sbb
dec
push
push
add
inc
scas
and
mov
inc
mov
xchg
clc
addb
sub
jnp
jge
fucom
inc
mov
shrl
ror
pop
add
mov
add
hlt
push
nop
inc
sub
xor
inc
sub
imul
mov
filds
add
dec
lods
adc
fsubp
pop
or
jp
pop
dec
cmp
sub
scas
add
lods
mov
arpl
xorb
add
jmp
mov
cld
incb
clc
jl
loop
mov
xor
mov
push
cmp
mov
mov
mov
jg
sub
inc
dec
jno
and
pushw
cs
cltd
push
adc
and
stos
sub
mov
sbbl
sbb
sbb
pop
std
scas
pop
add
rcll
pop
fdivrs
dec
mov
cmp
test
mov
xor
push
ret
stos
or
adc
adc
ret
pop
lret
xchg
not
mov
sbb
add
jno
add
push
xchg
adc
lds
cmp
stc
inc
push
cli
inc
mov
cmp
shrb
mov
mov
inc
adc
dec
dec
mov
call
ret
and
andl
movsl
add
jp
xor
les
add
adc
xor
xchg
dec
add
dec
ret
sbb
faddl
jne
push
stc
jmp
cmp
push
mov
xor
inc
int3
pop
mov
add
fisubs
and
or
or
incl
loop
xchg
imul
pop
in
xor
pop
cmpsl
lea
nop
pop
add
jns
test
adc
test
inc
inc
fwait
loopne
test
dec
pop
sbb
aaa
dec
loope
nop
mov
jmp
add
mov
add
lea
xorb
popa
fwait
ret
ss
dec
sbb
jge
jp
xlat
or
xor
loope
gs
ret
in
or
popa
pop
push
pop
mov
fwait
lods
dec
adc
add
repz
sarb
dec
push
sub
ljmp
push
or
push
mov
mov
pop
mov
pusha
pop
call
add
mov
mov
mov
ret
mov
sbb
add
jne
sahf
in
popl
setge
or
subl
arpl
mov
mov
test
pop
out
lret
fprem
or
push
inc
xor
or
das
outsb
xchg
mov
add
test
dec
jb
mov
mov
mov
add
nopl
imul
mov
push
sub
xor
lods
add
cltd
rcll
hlt
pop
add
cmp
add
push
add
jae
dec
mov
sub
pop
add
out
add
inc
rorl
cmp
sbb
imul
notb
or
dec
xor
add
mov
andb
push
das
clc
cmp
lahf
xchg
les
enter
cmp
aaa
xchg
add
inc
mov
enter
mov
push
mov
popa
enter
sti
cmp
jno
sbb
dec
loopne
xchg
add
lods
xlat
in
mov
add
jae
insl
xchg
nop
xchg
adc
gs
enter
inc
imul
test
inc
push
loop
adc
or
add
dec
mov
push
pop
popf
xor
add
or
lcall
push
xor
xchg
sub
sbb
icebp
nop
enter
and
sbb
test
jns
add
cmp
sub
fnstsw
popa
add
testb
in
ds
jns
xchg
test
or
sahf
or
jl
in
repnz
mov
jl
inc
mov
pop
push
fs
pushf
roll
push
mov
or
loope
mov
lcall
or
je
pop
adc
mov
dec
xorl
sub
icebp
aad
dec
les
mov
push
or
sub
sbb
cltd
loopne
enter
jo
pop
cmp
mov
cmc
rcrb
popa
jb
cmp
nop
push
dec
clc
cwtl
sub
xchg
out
inc
jbe
pop
add
mov
ja
jg
push
add
push
add
cmp
popa
xor
in
and
adc
and
cmpsb
lock
addb
mov
in
mov
sbb
stc
out
cmp
and
dec
add
pop
xchg
pop
adc
xchg
inc
jb
add
adc
or
jbe
and
cmp
jne
pop
je
dec
sahf
adc
mov
pop
out
dec
jl
loope
push
mov
orl
jns
or
cli
mov
movsl
mov
stc
inc
bound
les
or
jl
or
mov
cmp
push
sbb
mov
push
sub
in
idivl
test
dec
push
add
or
mov
mov
add
push
xchg
adc
ljmp
mov
push
sbb
mov
stc
sahf
je
mov
cmp
xchg
fmull
mov
add
enter
lods
sarb
add
or
push
clc
sbb
push
xchg
leave
or
xor
pusha
dec
js
mov
jo
test
add
cmp
adc
push
dec
jns
dec
in
cmp
cld
pop
mov
adc
adc
add
adc
add
xchg
push
and
lea
test
sub
sbb
adc
sbbl
int
ds
adc
xchg
jo
mov
add
xchg
push
mov
ret
jl
or
cltd
int3
subb
and
sub
adc
mov
inc
dec
mov
or
xor
sub
mov
jge
cmc
or
hlt
add
movsb
rclb
fidivrl
pop
inc
outsl
arpl
pop
push
dec
inc
push
push
sub
or
repnz
rcrb
mov
adc
addr16
nop
and
cmc
xor
and
lea
addb
loop
call
add
push
gs
rorb
hlt
dec
test
leave
xor
and
fmull
and
cmp
addb
in
mov
mov
ljmp
fs
mov
outsb
and
test
mov
in
adc
push
mov
cmpsb
dec
aam
sub
in
add
or
gs
or
ds
xor
dec
cld
loope
xor
pmaxub
test
test
push
scas
xchg
lcall
xor
jns
sub
insl
pop
rcll
scas
sbb
stos
pop
leave
lods
pop
xor
fidivl
xchg
adc
xor
dec
and
shrb
adc
adc
std
cmp
xchg
loope
xor
add
mov
loopne
fsts
cli
test
inc
call
arpl
out
cmp
enter
add
pushf
xchg
test
iret
mov
sbb
sbb
or
sub
push
pushf
hlt
and
mov
xor
and
inc
mov
add
out
inc
xor
sarl
popa
rclb
push
add
test
das
cmp
out
int3
mov
aam
jo
notl
xchg
out
inc
add
cs
ss
aas
cmpsl
pop
fwait
leave
mov
orb
jo
add
add
out
add
loopne
hlt
xor
add
dec
cltd
push
mov
push
inc
sbb
mov
cmp
mov
les
dec
pop
and
adc
popf
push
decl
hlt
xchg
test
fadds
jne
ret
es
cltd
sbb
ljmp
test
pushf
jns
or
ja
mov
cmp
and
sbb
push
stos
cwtl
fsubl
add
add
aam
jns
call
or
or
pop
cmp
mov
mov
xor
es
imul
and
or
cmc
add
push
int
and
mov
add
mov
in
imul
or
cltd
pop
sub
adc
es
push
clc
or
pop
mov
loop
insb
subb
or
add
popl
in
fisubl
test
lods
inc
mov
mov
jp
ret
in
sub
sbbb
std
lods
sbb
mov
xor
inc
cmp
fnstsw
je
fdivl
js
inc
pop
icebp
ret
xor
hlt
or
and
dec
xor
sbb
dec
aad
and
sbb
pop
sbb
movsl
mov
inc
xchg
or
fsub
test
xchg
xlat
hlt
or
inc
mov
or
add
add
icebp
leave
stos
adc
push
jno,pn
pop
cmp
in
add
ret
dec
mov
mov
jge
or
add
inc
or
xchg
or
or
jge
aam
mov
sahf
add
idivb
adc
daa
ret
cmc
xor
push
and
fwait
test
cli
jle
xchg
aam
icebp
inc
and
cli
cmc
jl
mov
movsl
dec
push
pop
and
add
sbbb
xchg
mov
xchg
add
test
cmp
outsb
sbb
ret
and
std
add
repnz
push
pop
mov
mov
and
popf
mov
shl
adc
std
sub
pop
or
les
dec
and
xor
lahf
in
add
scas
and
sub
fimull
jne
pop
int
out
and
mov
dec
mov
add
stos
stc
sbb
fwait
loopne
adc
dec
pop
fildl
mov
call
std
sbb
inc
dec
add
mov
dec
xorb
dec
clc
or
out
in
test
lcall
inc
pop
ja
xor
aas
inc
inc
cmp
repnz
std
xchg
insb
je
das
mov
add
xchg
inc
add
add
ror
arpl
sarb
xor
mov
out
stc
lods
std
fiaddl
jb
divl
or
cli
inc
aas
pop
fistps
mov
sahf
mov
pop
idivl
daa
ljmp
add
shlb
int3
mov
incb
inc
orb
popa
ret
aad
out
mov
test
sbb
and
jnp
mov
enter
add
sub
pop
out
mov
mov
jp
fs
inc
mov
pop
loope
mov
fdivrp
popa
add
fstpl
xlat
js
add
adc
mov
in
or
test
fwait
jno
fldl
add
add
dec
fdivrl
inc
xchg
pop
xorb
dec
roll
in
pusha
call
popf
sub
popa
int
ror
dec
xchg
or
cmp
add
cwtl
xchg
rorl
in
lahf
add
rcrb
add
dec
insb
cmp
adc
or
inc
sbb
in
popa
popf
loope
fwait
icebp
test
inc
cmp
les
into
xchg
mov
hlt
leave
or
pop
inc
int3
sub
sbb
ljmp
and
pop
pusha
xchg
repnz
sub
clc
push
dec
adc
or
arpl
mov
jmp
aam
dec
sti
push
loopne
popa
or
dec
ja
rolb
xchg
lea
add
out
push
add
dec
xor
pusha
add
xchg
push
dec
std
lock
dec
jne
sbb
imul
sahf
cltd
jmp
notl
adc
push
add
test
sbb
mov
push
clc
and
les
jbe
cmp
push
ja
adc
int3
push
add
xchg
fwait
pop
add
lcall
jo
adc
inc
push
cltd
add
ja
adc
xchg
cltd
mov
js
repnz
movsb
out
js
je
add
mov
add
sub
inc
jle
loop
inc
xor
stos
js
add
sub
add
mov
mov
in
aas
xor
push
adc
scas
icebp
cmp
leave
jecxz
nop
addr16
mov
add
loope
push
dec
jle
push
mov
add
cltd
or
cli
std
dec
add
xor
rolb
leave
inc
in
stos
pusha
nop
in
dec
lock
add
push
mov
or
fstpl
dec
push
xlat
inc
jnp
jns
sub
push
or
xchg
loop
add
les
js
sbb
mov
or
inc
mov
push
cmpsl
add
lea
clc
sbb
popf
int3
inc
insl
outsl
sub
add
test
dec
dec
inc
push
addr16
inc
jae
les
cmp
in
stos
sbb
cmp
adc
lahf
adc
mov
testl
dec
add
mov
pop
aad
pop
mov
xor
sub
lods
and
outsl
ss
push
pop
lock
ja
popf
incl
pop
adc
add
push
ss
pop
mov
inc
sbb
mov
xchg
cli
rcrl
movsb
test
add
in
jnp
and
push
jmp
insb
int3
lods
lret
pop
inc
rcll
mov
pop
andb
fstl
adc
push
adc
js
test
addb
inc
cli
repnz
push
adc
or
rcr
negb
bound
dec
jns
add
dec
int
lods
mov
aas
xchg
sarl
cmp
or
imul
add
add
sarb
sahf
mov
dec
nop
subb
jmp
repnz
xor
jo
inc
mov
nop
dec
imul
cld
frstor
imul
shr
bound
add
pop
xchg
subl
iret
jge
inc
jbe
repz
call
xchg
lahf
jne
stos
pop
add
scas
mov
add
adc
jl
add
push
ds
in
inc
out
bound
cmc
pusha
inc
dec
add
int
sub
negl
jae
add
mov
cmp
add
repz
cmp
call
subb
setl
mov
mov
call
cmp
aam
adc
jle
fwait
sub
sbbb
dec
and
mov
xchg
or
outsl
test
push
dec
pop
and
jne
hlt
xor
ljmp
fildll
push
pop
pushf
xor
mov
add
popa
loop
add
xchg
jmp
shrb
xchg
je
fdivs
data16
jl
adc
cmp
xor
sbb
push
inc
add
jnp
js
pop
mov
cltd
jle
dec
xor
xor
pusha
out
mov
add
loope
pop
add
and
push
out
pop
pop
inc
dec
push
add
in
outsl
scas
jo
ds
in
lds
cmc
cmpsl
loopne
or
cltd
jg
add
scas
enter
insb
test
and
sub
lea
cmp
rolb
and
or
push
int
mov
addr16
jecxz
cli
push
add
pop
mov
lock
lret
movsb
adc
jle
scas
movsb
in
mov
cmpsl
inc
add
das
mov
jb
movsl
add
nop
lock
push
out
mov
sbb
pop
mov
cwtl
add
lock
pop
repnz
lods
cs
adc
iret
shlb
adc
lock
mov
adc
mov
cmc
insl
out
add
jbe
or
dec
xchg
les
add
gs
mov
adc
cmp
adc
xor
dec
sarb
mov
push
lea
jge
add
xor
cmp
iret
push
jo
loopne
push
add
dec
lock
cltd
imul
jmp
xchg
mov
mov
enter
jg
sub
pop
dec
cmp
xchg
je
leave
movsb
push
pop
addb
insl
into
xor
leave
add
pop
mov
nop
or
mov
clc
pop
and
sub
sub
xchg
ret
lahf
movb
call
jg
int3
cmp
sub
mov
add
dec
jns
push
mov
out
insl
jne
inc
inc
dec
loop
mov
inc
xchg
mov
addl
inc
sub
mov
mov
stc
shlb
loop
enter
add
cli
jg
insl
pop
mov
and
sub
andl
push
sub
insl
pop
js
inc
sahf
jb
ret
and
pusha
aas
lds
gs
xchg
add
xorl
jno
cmp
call
and
pusha
int
in
cmp
jle
or
mov
dec
add
loope
push
cltd
inc
ffree
inc
push
jns
push
jle
pusha
inc
clc
movsl
or
andb
iret
ret
repnz
test
leave
inc
mov
or
cld
inc
xchg
nop
mov
sbb
call
pushf
inc
lahf
andb
mov
cwtl
cmpb
cli
fiadds
xchg
jo
add
lahf
popf
adc
add
pop
add
sarl
test
jae
pusha
jp
inc
or
add
xchg
and
clc
push
adc
pop
xor
mov
jge
dec
push
and
dec
jp
add
pop
push
jecxz
xchg
sbb
jecxz
loopne
mov
sbbl
into
fst
add
aaa
add
fdivs
movsl
xor
addb
pop
push
aad
call
stc
push
add
mov
int3
test
lahf
xchg
sbb
stc
sub
stos
test
sub
xorl
sti
add
dec
test
mov
int3
add
out
iret
xchg
sbb
xchg
nop
add
out
enter
mov
dec
jl
inc
push
add
js
mov
jecxz
mov
out
pop
mov
test
cmp
fwait
bound
imull
test
ja
add
js
and
icebp
popa
fdivl
jle
mov
sbbb
xchg
xlat
sbbb
push
push
mov
test
lock
xchg
bound
mov
xchg
push
ret
push
cltd
add
jnp
lcall
add
insl
add
xchg
or
or
sub
sub
loope
jg
fdivrs
xchg
into
pop
cli
rolb
loop
insl
add
int
data16
dec
or
pop
jecxz
rolb
sbbl
popa
rorl
add
mov
cmpsl
xor
sbb
lcall
test
aas
lods
pop
and
imul
aaa
lahf
inc
mov
js
xor
ljmp
out
in
xlat
adc
push
jl
test
inc
aas
ror
sbb
subl
jne
cmp
pusha
pusha
or
mov
cmpsb
mov
push
sub
inc
jmp
int3
mov
jbe
js
test
pop
push
xor
jmp
add
stc
cli
sbb
js
cmpsb
fs
dec
aad
out
and
icebp
daa
sti
cmc
jecxz
addr16
dec
icebp
add
jne
in
outsl
or
pop
dec
or
jno
in
dec
imul
cs
sbb
adc
cmp
popl
test
insb
inc
sbb
xchg
in
pop
push
js
adc
leave
mov
dec
int3
adc
add
repnz
adc
popa
pop
push
flds
push
cmc
and
dec
insb
dec
adc
nop
mov
add
mov
inc
mov
sbb
sbb
pop
push
dec
popf
and
or
push
and
jg
sar
jge
cmp
out
sub
inc
pop
sub
test
nop
or
cmp
xchg
hlt
rcrb
ret
jle
leave
insl
sub
nop
in
adc
add
sbb
push
jp
packuswb
in
rorb
cltd
xchg
add
cmc
popa
js
mov
push
adc
add
mov
jg
sub
pop
cwtl
pop
sbb
ret
outsl
jo
lock
int3
insb
fistps
pop
inc
mov
pusha
inc
adc
ds
inc
loopne
mov
mov
dec
aas
andl
clc
fiaddl
arpl
inc
or
push
or
jle
jne
inc
call
sbb
adc
dec
addr16
mov
add
push
bswap
test
jno
sub
out
stos
adc
add
ret
jo
std
inc
jns
dec
mov
lret
and
dec
add
push
jmp
jecxz
add
addb
stos
mov
dec
add
add
mulb
shrl
and
mov
xor
loopne
or
out
push
loopne
inc
sbb
ja
push
dec
lret
and
inc
cmp
repnz
insb
dec
and
push
daa
sbb
adc
lcall
inc
mov
iret
loopne
dec
jno
shrb
add
jge
shl
jns
adc
or
xor
sub
jno
add
rolb
ljmp
dec
lret
mov
imul
rcll
pop
jle
adc
jp
xor
mov
xchg
cli
cwtl
sbb
pusha
hlt
iret
cmp
dec
test
imul
push
out
inc
lcall
rcrb
push
and
sbb
aad
pop
push
pop
cwtl
insb
sub
cmpb
xchg
int3
aad
das
sub
mov
mov
sbb
popa
ret
inc
fdivs
sub
ret
imul
cli
mov
add
lahf
arpl
add
mov
in
inc
ja
and
orl
xchg
test
xchg
push
lods
xor
fldl
inc
xor
xor
mov
into
sahf
sbb
orb
aaa
sub
dec
add
inc
out
andb
xor
hlt
push
add
std
mov
add
js
outsl
insb
pop
arpl
sub
jae
fwait
dec
pushf
fcomps
ljmp
pop
push
in
add
leave
add
or
pop
loopne
add
add
xchg
andb
popa
jns
cmp
iret
popa
inc
sbb
add
adc
mov
test
aam
xchg
pop
lods
pusha
lock
pusha
leave
sbb
mov
clc
rolb
mov
js
addr16
jmp
decb
push
push
scas
xchg
jg
cwtl
outsl
sub
add
mov
sbb
scas
jle
xchg
addr16
mov
test
push
les
add
outsl
jl
push
into
or
pop
aaa
jg
inc
add
sub
cmp
mov
shlb
add
cmpsl
add
xor
pop
inc
add
js
inc
inc
dec
clc
add
repz
test
rol
or
add
pop
or
and
scas
daa
add
sbb
lock
mov
push
popf
ljmp
clc
jg
aam
jne
jle
nop
outsb
inc
pop
or
mov
and
xor
cmpsl
inc
mov
repnz
xlat
inc
loopne
les
dec
test
jl
mov
pop
mov
dec
clc
cmc
cmp
sbb
or
jnp
pusha
pushf
pop
sub
hlt
add
mov
rolb
test
sarb
cmp
mov
add
ficomps
xor
ja
pusha
jg
call
inc
bound
mov
in
and
adc
test
sub
push
push
push
icebp
iret
cwtl
mov
add
sbb
push
sbb
lods
aaa
pusha
jl
pop
add
mov
jl
pop
add
js
dec
and
repnz
imul
push
jl
push
sbbl
sahf
push
add
das
and
shl
add
fnstsw
shrl
cmp
fwait
scas
fnstsw
pusha
sub
sbb
mov
and
sub
and
rcrl
mov
adc
in
mov
bound
cltd
add
mov
pop
pushf
and
mov
inc
test
xchg
jecxz
aam
lods
mov
push
cmp
mov
in
jg
insb
rcrb
add
call
jp
lock
inc
jecxz
add
ljmp
movups
dec
dec
shl
inc
pop
jo
fiadds
sbb
out
sti
sbb
fs
orb
daa
adc
sbb
clc
sub
jns
arpl
cmp
dec
push
mov
imul
jbe
arpl
xor
mov
movsb
fcoms
popl
iret
push
xchg
cwtl
add
sbb
sub
pop
jl
notb
mov
andl
test
dec
daa
les
mov
mov
xorb
push
mov
dec
adc
ds
jno
mov
sti
pop
add
loop
add
clc
push
add
cmpsl
mov
add
xchg
jae
dec
out
or
and
add
or
xor
xor
pop
and
nop
add
out
inc
movsl
or
dec
add
jle
ss
and
and
mov
mov
adc
and
xor
inc
mov
xchg
gs
les
pop
testb
cli
push
add
mov
mov
ret
adc
rol
call
lods
out
add
imul
popf
sbb
mov
dec
or
ja
pop
cltd
inc
mov
pop
add
out
xchg
scas
mov
call
sbb
or
jo
int3
and
fiadds
fldt
lcall
xor
inc
repnz
xchg
jg
ret
fs
sub
xchg
scas
add
pop
adc
nop
loope
mov
enter
jecxz
pushf
xchg
cmp
cli
sub
fisubs
fadds
aas
stc
in
adc
sub
movsl
test
lea
in
lret
sbb
pop
lock
pop
pop
pop
or
add
repz
lds
sub
movsb
sbb
push
inc
je
add
test
js
mov
dec
roll
cmp
mov
or
je
add
xor
aas
push
shlb
icebp
push
std
sbb
imul
lock
dec
jecxz
and
mov
sti
enter
adc
sub
stos
cmp
test
push
mov
lret
xchg
push
repz
in
sti
sbb
enter
mov
mov
jge
nop
out
and
rolb
insl
sbb
mov
enter
adc
mov
mov
cltd
xchg
cmp
test
ret
push
sbb
adc
add
inc
ret
push
pusha
add
sbb
pop
add
jg
test
out
ss
xlat
dec
dec
sub
mov
inc
add
sahf
push
inc
or
cmpb
repz
dec
jle
add
xchg
sub
sub
xlat
jns
add
in
add
lock
inc
out
sub
xorl
pop
jae
mov
xor
fisttpl
mov
movsl
clc
mov
mov
cmpl
mov
xor
pop
push
xor
xchg
jo
sbb
cmp
pop
push
inc
inc
addr16
jbe
push
mov
ss
jg
insb
pop
xor
cmp
mov
ljmp
addr16
pop
jns
lods
fs
enter
shl
fidivrl
out
sub
push
mov
push
add
test
arpl
ja
imul
movsb
inc
js
rclb
les
mov
bound
mov
pop
mov
push
sti
or
mov
pop
into
es
movsb
pop
out
pushf
jns
fcoml
xor
js
add
popa
adc
into
lret
cmp
push
add
shr
pop
es
or
sbb
pop
ds
out
pop
out
xchg
in
push
arpl
and
or
sarb
fs
clc
inc
xor
mov
cmp
hlt
push
rolb
out
ja
orl
dec
adc
sbb
cmp
and
inc
lcall
and
or
and
mov
cwtl
add
cli
push
mov
add
add
push
call
nop
rorb
xor
push
loop
jge
mov
scas
push
mov
movsb
enter
dec
outsb
insb
inc
adc
cld
add
sbb
mov
xchg
add
push
loop
sub
mov
and
setnp
sbbl
xchg
nop
sbb
bound
leave
lods
xchg
mov
mov
lret
mov
imul
push
mov
addb
cmp
popa
sbb
aam
call
test
sbb
mov
sbb
xchg
subb
cmp
call
addb
cmp
iret
cld
je
icebp
jge
push
pushf
sbb
mov
int3
xchg
lret
inc
icebp
mov
aad
cmp
mov
cmp
bound
adc
sbb
jmp
or
insb
inc
xor
add
jnp
dec
mov
shlb
xor
pop
inc
mov
dec
and
add
repnz
je
cmp
repnz
mov
and
aam
xchg
adc
repnz
sub
or
jecxz
ljmp
mov
or
test
inc
jle
add
jae
cltd
inc
mov
pop
or
loope
sub
pop
je
cltd
inc
sbb
pop
add
mov
int
loopne
std
das
daa
dec
or
mov
pusha
test
bound
loope
jo
inc
adc
mov
pop
lock
pusha
in
pop
stos
push
les
mov
popf
inc
add
ds
jle
mov
jnp
pop
add
sub
cmp
xchg
or
lret
loop
rcrl
out
ljmp
push
ret
loopne
xchg
xor
jnp
jae
cmp
repz
ja
sbb
fsts
pushf
xor
xor
xchg
pop
mov
inc
and
dec
movsl
add
or
add
nop
dec
filds
push
inc
sbb
adc
adc
rol
rol
xlat
rcll
pop
pushf
jp
inc
arpl
and
inc
pusha
mov
insl
pop
inc
es
sub
inc
add
mov
jmp
pop
lcall
mov
adc
inc
enter
mov
hlt
xchg
add
add
adc
popf
jg
add
fisttpl
loopne
cli
pop
adc
sbb
les
cmp
xor
outsl
ret
sbb
les
pop
adc
adc
std
loopne
adc
pop
inc
in
outsb
das
sub
out
xchg
in
mov
arpl
cwtl
mov
nop
adc
cmp
mov
mov
jmp
mov
jb
mov
jb
and
cmp
xchg
mov
loope
insb
sbb
iret
xchg
push
mov
jne
in
rorl
cmpsl
mov
sub
out
jnp
xlat
call
inc
dec
in
daa
inc
loopne
xor
and
test
jge
jp
sbb
pop
das
and
test
adc
pop
xchg
push
xor
nop
out
loopne
add
dec
mov
xor
push
add
and
je
aas
mov
inc
loope
les
test
leave
outsb
xchg
push
add
into
jecxz
mov
push
or
cmpsl
mov
inc
or
sbb
sub
scas
int3
lock
lds
push
mov
pusha
nop
xor
sub
mov
mov
les
inc
jnp
outsl
inc
or
cmpb
sahf
mov
sub
pop
adc
pop
mov
cltd
pusha
sahf
xlat
pop
push
add
push
mov
pop
leave
rcl
mov
nop
mov
es
enter
xchg
outsb
add
mov
js
andb
daa
dec
add
in
xor
xor
and
add
cs
les
cld
stos
add
sub
jle
loop
nop
add
mov
ret
pop
rolb
cs
adc
adc
shlb
fcmovu
adc
nop
cmp
pop
stos
and
mov
imul
xor
and
sub
mov
pop
xor
fdiv
in
lret
cmp
sahf
mov
add
sub
mov
or
das
push
push
jp
nop
pusha
mov
and
xor
cmp
call
and
pusha
fcmovnb
mov
mov
dec
movaps
jg
das
cmp
out
push
out
jmp
xchg
or
pop
inc
push
push
push
pop
fists
nop
in
push
mov
std
sub
lcall
out
add
in
js
push
add
int
ss
sbb
cmp
or
lahf
sbb
popa
xor
insl
ficoms
aad
cwtl
inc
add
gs
roll
dec
sub
cmp
sub
cmp
movsb
push
mov
fiadds
add
and
dec
out
and
jns
mov
or
sbb
add
ja
rolb
and
test
lock
hlt
pop
or
mov
enter
jne
loopne
jmp
dec
add
nop
das
push
pop
insl
shlb
xor
test
jb
hlt
push
mov
leave
repnz
push
push
pop
cld
jecxz
and
insl
pop
add
jae
rolb
addr16
cmp
adc
push
mov
fimull
add
pop
adc
loop
add
adcl
rcrb
add
mov
inc
lock
ds
nop
aam
cmc
add
pop
js
or
mov
or
lret
dec
add
mov
ficoml
add
enter
shrb
int
add
cmpb
jne
cld
roll
pop
std
lock
dec
add
enter
es
adc
and
pushf
dec
inc
hlt
shl
mov
sbb
and
pop
out
xchg
push
ret
nop
in
cltd
sbb
and
sub
enter
add
inc
sbb
lahf
xchg
cmc
rorl
pushf
add
pop
add
xor
adc
adc
sahf
fs
or
icebp
movsl
inc
mov
pop
or
scas
pop
leave
xor
adc
push
loopne
push
shrl
jmp
adc
mov
and
adc
out
add
pop
xchg
xchg
pop
mov
lock
cs
sub
push
sbb
mov
js
sub
mov
fsts
jp
scas
jl
jmp
xor
mov
inc
or
leave
iret
adc
xor
cmp
add
pushf
cld
adc
dec
fisttpll
imul
into
bound
je
mov
js
add
xchg
mov
and
enter
and
fwait
xchg
xor
aaa
add
and
into
and
xchg
cltd
test
adc
mov
daa
and
int
xchg
cltd
mov
pop
icebp
enter
filds
or
lret
inc
pop
add
inc
push
mov
inc
mov
mov
xchg
sub
loopne
mov
cmc
subl
cmp
aad
ja
enter
add
movsl
nop
lock
add
lahf
mov
add
popa
mov
push
rcll
test
loopne
les
pop
sbb
adc
mov
xchg
loopne
js
ja
or
loop
lock
nop
test
cld
push
jecxz
push
shlb
nop
vpshufhw
pop
sub
push
sbb
adc
int3
sbb
jo
pop
and
adc
test
inc
stos
or
push
jbe
mov
orb
rolb
add
mov
mov
inc
fs
sbb
mov
inc
imul
xchg
outsl
stos
inc
negb
arpl
add
scas
dec
xor
mov
pop
fsts
and
mov
js
lods
jp
cmp
push
push
add
cmpsl
push
stos
inc
or
loopne
pushf
jae
adc
adc
mov
dec
adc
pop
sub
push
mov
fiadds
mov
add
inc
jg
and
insb
fld
mov
inc
pop
jp
loope
mov
add
pusha
aas
lcall
fidivs
movzbl
pop
or
push
cmc
sbb
push
inc
or
mov
mov
add
or
js
adc
sbbl
sub
mov
sbb
addr16
push
leave
mov
mov
and
lret
mov
fdivl
xchg
jae
js
or
adc
ret
pop
or
bound
mov
test
fistl
ret
push
and
arpl
xchg
jle
adc
and
sub
add
cmpsl
mov
cltd
mov
sub
lret
mov
ja
and
in
in
mov
js
cltd
sbb
mov
jne,pt
subb
pusha
add
icebp
pop
sar
pop
pop
xor
xor
enter
cwtl
cmp
adc
xchg
xchg
cwtl
inc
mov
dec
enter
add
cmp
jl
divb
cmp
add
nop
push
iret
sbbl
mov
arpl
add
enter
fld1
adc
jo
les
bound
fiaddl
jg
mov
dec
add
mov
out
push
xchg
sbb
addr16
outsl
inc
repnz
xor
xchg
fs
xor
jno
xor
js
gs
adc
inc
dec
fdivl
push
addr16
sbb
lock
xor
adc
cwtl
mov
jp
or
adc
xchg
sbb
cld
shlb
ds
movsb
arpl
test
ror
pop
sbb
popf
imul
aam
call
addb
je
int
cltd
arpl
xchg
out
enter
and
sub
sbb
lds
es
inc
sbb
ret
adc
mov
cmpsl
xchg
mov
cwtl
cmp
add
push
jne
jae
lret
aam
sub
fchs
pop
sbb
adc
pop
das
mov
jno
jo
repnz
push
cs
pushf
jl
mov
inc
cmpsb
je
dec
mov
nop
xor
aad
cmp
std
push
add
loop
pop
or
jno
test
sbb
enter
pop
movq
jo
or
push
aaa
xchg
add
je
adc
inc
out
test
push
repnz
fs
jp
add
dec
and
roll
jbe
pusha
imul
shrl
and
in
call
lock
xchg
sbb
xchg
cmpsl
pop
lock
jp
push
xchg
adc
or
adc
sub
negl
pop
add
jg
xor
xchg
pop
sub
sbb
jo
push
test
daa
xchg
cmp
or
popa
movaps
mov
andb
nop
int
mov
xor
int3
test
adc
add
adc
test
jns
jbe,pn
mov
add
add
adc
mov
sub
cld
call
call
outsb
adc
push
and
pusha
lahf
adc
icebp
test
movb
mov
daa
jae
jb
jnp
mov
lock
enter
js
add
pop
sarb
rcrb
mov
and
dec
mov
insb
add
lahf
cwtl
pop
divb
mov
xchg
jp
js
cli
dec
push
dec
inc
or
sub
adc
jnp
fsubs
sbb
fcmovbe
xor
and
adc
jns
inc
mov
and
sbb
adc
xorl
repnz
push
mov
jno
pop
dec
cmc
lods
loopne
sub
sub
test
xchg
mov
add
dec
add
push
jmp
cmp
add
mov
sar
repnz
adc
pushf
inc
fldcw
aam
lods
insl
mov
enter
test
lds
or
pop
cmpb
jnp
xchg
stos
dec
ret
mov
xchg
ret
lock
ja
pop
sub
and
rclb
pop
stos
mov
jns
call
pop
pop
nop
cld
mov
add
sub
mov
into
loop
inc
xchg
cltd
cmp
push
rcrb
mov
lock
sbb
loopne
mov
andl
jmp
push
sbb
or
mov
movsb
lock
inc
pop
push
cmp
hlt
jl
push
sub
push
xor
pmaxsw
mov
inc
imul
sbb
pop
inc
or
lods
fwait
jp
aam
stos
cmp
add
or
sub
sbb
or
add
jmp
je
add
in
pop
jecxz
pop
loope
sbb
mov
test
aam
add
sbb
pop
dec
mov
nop
adc
nop
adc
pop
lea
cmp
andl
sbb
add
adc
mov
add
mov
andb
mov
clc
jno
pusha
mov
into
cwtl
pop
adc
or
call
hlt
ljmp
mov
inc
or
and
and
jo
rol
dec
push
and
inc
or
dec
or
add
test
out
lret
push
inc
jmp
data16
leave
mov
lods
add
mov
loopne
pop
add
xorl
or
aam
es
xor
add
test
sbb
add
jecxz
add
jne
pop
add
shrb
pop
js
adcb
xor
sbb
jnp
call
xchg
mov
clc
push
sbb
inc
cwtl
add
cwtl
xchg
jne
fildl
mov
and
jae
add
movsb
adc
adc
in
sbb
sbb
or
mov
shlb
in
out
mov
xchg
insl
add
cmpsb
mov
fldl
mov
imul
outsl
in
std
sti
pop
mov
or
push
add
rolb
adc
cwtl
loopne
repnz
mov
pop
mov
popa
hlt
xor
mov
add
jp
js
xchg
jae
cmpl
outsb
adc
cwtl
sub
xor
andb
sub
add
gs
and
lcall
lret
sahf
lea
test
shrl
xor
movl
jg
add
lods
rolb
add
mov
add
stc
jl
ret
sub
lock
adc
filds
cmovbe
pop
outsb
loopne
add
rolb
enter
sahf
aam
inc
xchg
enter
sbb
mov
push
dec
ss
fxch
add
push
js
add
cmp
or
and
lds
sbbb
cli
or
ret
sub
inc
sub
aad
stos
pop
and
pop
cwtl
aas
xchg
jbe
sar
or
lcall
aas
ffreep
dec
sti
sarb
mov
sbb
subl
test
sahf
mov
sbb
and
sub
outsb
sub
in
mov
ss
xchg
clc
mov
xor
test
and
pusha
cmpsl
or
repz
call
jo
xor
inc
add
push
fsubl
ljmp
adc
adc
call
mov
fdivrl
dec
test
int3
push
rcrl
adcb
mov
add
dec
rolb
pop
or
loopne
js
test
mov
xchg
dec
pop
dec
pusha
in
dec
insl
scas
add
dec
and
ret
cmpsb
add
rorb
outsb
adcb
pslld
repz
sub
adc
inc
jp
mov
push
test
cmp
adc
or
xor
dec
addl
cmp
loope
les
pop
inc
icebp
mov
fists
lahf
mov
sbbb
int3
cmpsl
push
jge
and
iret
xor
sub
rorl
clc
add
ds
scas
rol
popf
adc
and
test
inc
add
stc
pop
aaa
mov
std
pop
add
mov
push
adc
loop
imul
mov
sub
je
inc
ja
sbb
xchg
add
fcoms
add
ja
jge
repz
push
mov
pop
cmp
push
test
pop
pop
push
xchg
sarb
dec
inc
int3
push
gs
enter
rorb
test
sub
xchg
and
add
mov
ret
adc
int3
adc
clc
inc
jnp
xchg
and
pop
ljmp
cmp
adcb
mov
testl
mov
pop
lods
cmp
pop
and
jnp
mov
insl
insb
adc
aam
mov
and
xor
into
jle
fwait
outsl
pop
call
sti
jns
push
mov
mov
aas
mov
and
test
fcmovnb
pop
jbe
aas
mov
and
inc
xorb
push
add
cmc
pop
xchg
gs
add
cld
push
inc
cmpsl
xor
xchg
into
adc
nop
push
mov
inc
fistl
cmc
test
xchg
xchg
sbb
nop
sub
loopne
repnz
sbb
sbb
sub
pop
test
mov
push
push
clc
add
out
or
sbb
push
sarb
xchg
sub
mov
add
dec
pop
fstpl
test
dec
xor
sahf
jg
insb
pop
dec
or
push
fsts
out
adc
dec
bnd
loopne
ret
stos
inc
mov
mov
cld
jl
xchg
cltd
jae
or
jns
pop
pop
and
cld
pop
push
arpl
imul
sub
xchg
mov
inc
jmp
and
xchg
test
cmpsl
popa
into
or
or
pusha
scas
data16
adc
test
xchg
adc
pop
or
icebp
lock
add
mov
xchg
jg
add
adc
xor
stos
ja
jmp
repz
sbb
xor
shrb
addr16
fildl
pop
fcompl
and
outsl
push
dec
mov
add
es
inc
fcomps
pop
jo
scas
addb
xchg
or
xchg
adc
mov
cld
cmp
sbb
rorl
jae
dec
loop
add
lds
pop
pop
and
inc
into
dec
adc
repnz
fwait
sbb
xchg
adc
out
jno
fsubl
mov
pusha
flds
add
jmp
mov
pop
lahf
push
add
test
incl
push
adc
lock
add
adc
nop
outsl
or
lods
das
adc
add
lods
cmp
xchg
jne
add
xor
sti
xor
stc
scas
repnz
and
mov
sub
mov
decl
shlb
sarl
adc
popf
or
jb
xorb
and
xchg
test
outsb
js
add
push
mov
mov
jle
dec
mov
into
and
xchg
sub
inc
addr16
ja
mov
push
inc
adc
xchg
add
add
aad
aas
lcall
pop
xor
mov
nop
mov
push
sub
rcrb
idivb
jmp
pop
fst
or
jne
add
xchg
hlt
enter
pushf
push
add
add
mov
sbb
xchg
out
adc
dec
mov
add
sbb
mov
dec
jl
pop
ret
inc
dec
mov
fucom
push
sbb
nop
xchg
or
push
pop
or
clc
push
fsubl
mov
xchg
and
rcrb
sub
pop
inc
jmp
mov
ret
mov
stos
flds
inc
xor
roll
sub
cmc
add
cmpsl
cwtl
shlb
cs
outsl
hlt
or
enter
jle
pusha
sub
into
adc
jecxz
fsubl
mov
fwait
inc
jo
insb
popa
or
pop
inc
mov
add
cwtl
iret
popa
test
sarb
push
jo
sub
subb
mov
dec
out
test
mov
adc
loop
rolb
xor
cmp
inc
mov
pusha
pop
in
xlat
lahf
add
sbb
pop
or
dec
sub
or
mov
cmp
out
aam
pushaw
mov
enter
inc
repz
psubsb
adc
lahf
lret
lods
and
pop
jge
shll
xchg
cmc
std
cwtl
jo
dec
mov
loop
and
push
pop
pop
dec
add
dec
enter
call
ret
fucomi
add
scas
xor
push
cld
js
add
out
pop
jge
sbb
pop
adc
or
arpl
clc
hlt
or
xor
pop
xor
inc
sub
inc
dec
inc
inc
xchg
mov
les
xchg
add
push
test
popa
xor
shll
xor
call
adc
into
pop
pop
and
sub
add
shr
subb
mov
sbb
pop
add
int
das
shlb
mov
xor
in
xor
scas
ljmp
add
lret
pop
imul
call
ficompl
hlt
adc
sti
mov
add
jp
out
mov
mov
imul
mov
scas
push
push
mov
and
add
or
ljmp
rcrb
leave
pop
int
daa
push
add
mov
pop
push
cmp
and
enter
jecxz
pop
ss
cmpsb
xchg
push
push
orb
add
lret
movsl
mov
stos
pop
fs
sub
adcb
cs
test
push
std
mov
pop
shlb
insl
inc
loopne
mov
orb
in
cwtl
daa
mov
sub
rorl
add
pop
or
xorl
les
out
test
add
into
push
sbb
jns
jl
icebp
adc
rdmsr
adc
xchg
ja
std
xor
mov
jg
inc
mov
sub
loopne
js
push
pop
mov
xchg
xor
sub
testb
sub
and
mov
insb
mov
subl
les
frstor
adc
popf
je
pop
mov
push
jge,pt
adc
mov
stc
pushf
iret
push
shll
push
cmc
jns
sbb
loopne
sub
add
xlat
adcl
nop
mov
sbbb
push
or
xchg
pushf
daa
rolb
add
test
xchg
cwtl
sahf
jp
sbb
sub
xchg
and
xor
std
sbb
add
dec
and
orl
push
les
push
shlb
xor
add
sbb
pop
and
test
add
push
mov
jmp
nop
add
xlat
mov
fidivl
mov
movlps
xchg
test
and
lahf
jne
adc
xor
addl
icebp
sbb
push
push
push
jle
xor
mov
push
clc
mov
xchg
orl
mov
fdivrp
pop
mov
popa
adc
or
mov
dec
test
popa
jae
pop
mov
inc
add
loopne
or
mov
out
fstpl
imul
pop
or
inc
cmp
sbb
into
jb
add
adc
xor
test
call
mov
xor
fcomps
sarl
adc
mov
xchg
push
repnz
cmc
loop
lds
add
popa
call
iret
sti
sbb
add
add
js
sarb
add
mov
mov
mov
xor
pop
insl
jmp
jecxz
and
enter
or
leave
xchg
or
pusha
or
adc
loopne
shll
cmpsl
adc
add
jno
fmul
or
add
add
mov
push
inc
inc
sbb
jae
dec
or
pop
jnp
pop
mov
inc
dec
jp
mov
fbstp
or
arpl
popa
mov
add
push
add
dec
mov
pop
jmp
sub
xorb
pop
pop
jge
pop
ret
inc
in
mov
inc
outsb
sarb
call
lea
sbb
fcomi
lods
pop
sarl
add
aaa
gs
cwtl
fdiv
cmp
scas
cld
rcl
sub
mov
push
adc
pop
fisttps
and
test
jo
insb
or
and
inc
in
add
fnstsw
leave
mov
add
orl
add
inc
push
and
jnp
pop
bound
jg
add
std
mov
and
push
jp
add
stos
pop
ds
sbb
es
lcall
insl
lret
test
sub
and
add
jmp
dec
incb
dec
cli
stc
mov
sbb
add
mov
xchg
andl
xchg
xchg
xchg
add
in
pushf
push
sbb
and
or
mov
fadd
mov
add
add
xor
adc
sbb
mov
xchg
mov
xor
jnp
inc
and
mov
ds
or
frstor
pusha
leave
ret
mov
outsl
mov
in
add
add
into
popf
and
das
xor
popf
clc
mov
add
pop
into
mov
pusha
addl
mov
xchg
sub
inc
sub
pop
xchg
or
rclb
add
fnstsw
sub
jmp
shrb
inc
add
rclb
add
jle
mov
cmp
or
xor
je
pusha
loop
repnz
imul
inc
addb
xchg
les
repz
pop
shlb
sub
push
dec
data16
push
mov
orl
or
jo
pop
sub
cmp
add
stos
data16
loopne
adc
add
fiadds
or
das
xor
cwtl
outsl
jl
js
xchg
loopne
ljmpw
into
imul
jb
pusha
mov
fdivs
or
cs
pop
and
lods
leave
into
adc
mov
iret
add
dec
pop
mov
sbb
orb
jb,pn
ds
inc
mov
push
fidivl
ljmp
mov
cmpsb
lret
lahf
in
add
dec
cmp
ret
inc
or
int3
or
push
adc
stc
cmp
and
popa
inc
xor
push
imul
and
add
pop
lock
fwait
aas
push
or
and
out
mov
xor
pusha
in
add
pop
clc
pushf
add
bound
push
fcmovu
add
lods
add
dec
add
sbb
cs
xor
call
or
cltd
cmpxchg
stos
push
add
jo
adc
outsb
push
mov
jne
or
test
xchg
jb
or
fiadds
inc
int3
push
sbb
cmp
aas
test
inc
icebp
jbe
sti
stos
add
pusha
movsb
xor
sub
push
roll
clc
or
call
test
adc
adc
push
add
bound
sbb
call
pushf
enter
pop
pusha
inc
pop
adc
jns
or
rolb
jge
push
shll
xor
push
and
into
add
aad
addr16
mov
std
outsb
les
jae
repnz
adc
add
fwait
add
push
pusha
mov
lret
xor
inc
cmc
lock
mov
cwtl
add
xchg
js
ret
nop
rolb
movsb
pop
stc
push
inc
pop
add
xor
data16
xchg
add
jecxz
ficoml
push
push
and
mov
push
push
sub
cmp
adc
or
imul
enter
pop
sbb
sbb
std
dec
ret
xchg
jbe
cmp
sub
add
push
loopne
xchg
daa
lock
add
das
loope
add
cs
sub
mov
jmp
or
adc
into
sbb
fstps
add
mov
push
js
and
arpl
adc
cli
outsl
pusha
ret
add
mov
cmp
inc
repz
loopne
adc
push
xchg
push
ds
mov
pop
sti
adc
jns
cs
push
dec
mov
inc
mov
or
jg
gs
inc
in
push
mov
pop
mov
add
gs
or
stc
pop
popf
jge
in
and
mov
fmulp
mov
adc
lret
inc
dec
mov
pop
popa
or
ret
movsb
lahf
out
pop
shrb
sbb
repnz
inc
test
add
mov
mov
into
stc
jg
icebp
mov
xchg
lds
jecxz
sbb
pop
gs
rclb
data16
xor
jecxz
xor
mov
add
or
mov
leave
lret
movsb
push
and
inc
test
sbb
fistpl
push
outsl
aad
loope
sub
shlb
leave
mov
cmpsb
and
push
fstpl
cmp
adcb
add
aas
or
adc
inc
mov
sbb
hlt
inc
and
add
and
sub
enter
outsl
sbb
add
adc
movsl
mov
into
jnp
pop
pop
add
jmp
mov
int3
jg
xchg
cmp
adc
lods
add
inc
inc
loop
add
and
outsb
dec
xor
addr16
inc
mov
add
push
or
cmp
sbb
outsl
sarb
inc
sub
inc
jp
or
js
insb
or
mov
cmp
sbb
into
int
add
imul
pop
push
daa
ds
xchg
cmp
adc
pop
gs
pop
aaa
ljmp
sahf
mov
iret
mov
adc
add
in
pop
jb
inc
fs
add
dec
push
add
mov
and
inc
imul
add
shrl
inc
jbe
stos
add
dec
lea
int3
xchg
jle
rolb
js
dec
mov
das
in
or
add
jmp
in
sahf
ja
add
or
testb
xchg
std
aaa
xchg
pushf
jns
into
push
clc
jbe
sub
test
mov
add
jae
lret
xchg
add
stos
out
inc
in
push
loope
shlb
out
sbb
and
aam
mov
and
cmp
and
adc
add
push
sti
dec
push
pop
nop
pushf
ljmp
sub
notb
add
loope
nop
mov
pop
add
addb
dec
rcrl
pop
inc
sbb
mov
mov
push
add
ret
movsl
or
scas
nop
xchg
add
dec
xor
mov
mov
add
cli
es
nop
push
lahf
stos
add
add
jnp
xchg
mov
mov
flds
mov
js
ret
jmp
movsl
fisttps
ljmp
sub
popf
add
out
push
fisubs
add
push
cmpl
inc
add
rcrl
and
movsl
enter
addl
inc
out
add
cmp
add
les
add
stc
das
cmp
insb
scas
push
xchg
sysret
mov
andb
mov
lahf
sbb
cmc
fidivl
sbbb
call
divb
scas
das
push
pusha
jl
add
movsl
pop
pop
inc
rorb
cmp
add
orb
push
imul
inc
movlps
ret
mov
pop
push
bound
rorb
xor
popa
shlb
lock
out
roll
lret
xchg
stos
sbb
mov
xor
ret
adc
fisttpl
and
iret
js
cmp
pop
xchg
repz
add
pop
add
fwait
add
mov
push
cwtl
mov
lea
sub
add
adc
addb
leave
pop
or
jp
cmpsb
nop
xor
sbb
je
stos
sbb
mov
dec
movsl
xchg
push
lahf
nop
push
or
sbb
mov
fistpl
sbb
xchg
test
loop
pushf
cwtl
mov
shl
or
push
mov
nop
add
mov
adcb
cmp
into
imul
loopne
popa
add
fistpl
int
ja
xchg
pop
or
lret
cmp
std
add
mov
sbb
sbb
add
mov
fistl
sub
cwtl
ret
addr16
add
xchg
dec
insl
sub
and
mov
sbb
cld
sbb
sbb
fldl2e
rcrb
mov
add
in
jge
loope
jae
shll
cmp
sbb
js
or
adc
and
push
xor
rclb
or
stc
mov
loope
add
movsb
andl
adc
test
pop
xchg
pusha
mov
dec
lds
int
sbb
add
test
pop
arpl
es
popf
insl
or
fnstcw
loop
xchg
lret
add
leave
repz
push
add
xor
or
mov
sarl
pop
lahf
push
repz
or
and
and
pop
movsl
fmuls
in
jl
loopne
xor
adc
out
add
adc
daa
push
in
add
pop
stos
addl
lea
or
popf
ljmp
mov
mov
frstor
xchg
js
jbe
add
jle
loope
add
lret
mov
sub
rcrl
ss
add
mov
lock
adc
out
faddl
pop
repz
push
jmp
sahf
cltd
int3
mov
jg
add
hlt
mov
ret
and
fcoms
mov
and
fnstenv
aas
pushw
or
mov
push
pop
sbb
sub
fwait
push
pusha
jne
xchg
dec
pusha
loopne
or
aam
push
roll
stos
ret
lret
adcb
sub
and
xlat
mov
mov
addb
fadd
and
mov
leave
cmc
jnp
rcrl
adc
xor
addb
sub
in
sbb
xor
es
or
dec
and
mov
mov
add
shlb
test
jno
orb
cld
roll
add
dec
aas
lea
cmpb
add
adc
aaa
jge
sub
in
loop
gs
xchg
dec
into
nop
sbb
test
or
lods
jo
mov
or
popf
xlat
inc
inc
lods
imul
ljmp
out
jl
jmp
add
pop
popa
gs
or
jle
shll
add
adc
aad
mov
test
pop
mov
sbb
pop
ja
fdivl
shrb
daa
sub
imul
leave
jo
sub
xchg
push
add
cltd
xor
add
cmp
icebp
nop
pop
jne
sub
pop
or
mov
inc
add
mov
adc
jp
jne
ret
data16
add
std
lods
or
xor
movb
jbe
jne
add
loope
adc
cld
dec
or
popa
ljmp
fisubrs
push
and
cmp
mov
lahf
inc
lods
btr
xor
iret
aas
dec
sub
cltd
js
inc
mov
andl
rorb
test
inc
filds
adc
adc
cltd
cmp
iret
loop
adc
or
into
mov
int
xor
push
sti
es
subb
sbb
add
bound
xchg
lds
cltd
pop
imulb
xchg
or
ja
test
add
or
mov
mul
pushf
fsubl
outsl
cmp
jo
bound
clc
or
stos
mov
dec
mov
mov
cs
mov
inc
lods
shlb
xor
out
add
jno
hlt
add
stos
es
adc
ja
or
dec
dec
jge
add
fimull
lock
cmp
xor
add
push
adc
sub
mov
sbb
clc
sbb
mov
es
outsl
push
enter
jb
jno
add
mov
push
outsl
push
and
rolb
test
mov
inc
js
sti
jo
shlb
sub
arpl
imul
sahf
js
add
xchg
divb
adc
cmp
repz
cmc
push
cmp
addb
test
push
inc
imul
xchg
add
push
and
add
scas
je
add
xor
ret
and
lds
rcll
add
scas
popf
xchg
inc
mov
pop
std
jae
push
filds
movsb
cmp
and
mov
sar
cmpb
cmp
outsb
or
aas
loope
mov
mov
arpl
add
xchg
or
cli
les
pop
and
stos
scas
addl
or
add
and
and
add
jl
pop
enter
je
adc
xlat
sbb
inc
call
adc
push
neg
arpl
add
sub
mov
mov
jne
stos
clc
push
push
aas
in
adc
int3
inc
movsb
add
mull
loopne
in
icebp
add
outsb
xchg
imul
and
loopne
inc
jle
jnp
nop
add
or
xchg
cmp
test
add
mov
icebp
scas
pusha
push
test
pop
jmp
push
stos
mov
cmp
loopne
adc
lret
dec
cld
lods
add
std
iret
sub
add
push
mov
insl
stc
add
xchg
insb
add
daa
add
cmp
ja
adc
test
pop
fbstp
mov
sahf
dec
hlt
pop
jle
cmp
iret
movsb
mov
mov
cmpb
pop
push
add
imul
add
fbstp
and
xor
fnsave
adc
cwtl
loopne
dec
fdivs
shrl
inc
add
dec
pop
mov
das
push
jns
push
add
xchg
push
fcoms
push
push
fisttps
xchg
int3
loop
cmp
adc
add
jns
add
stc
sbb
add
mov
mov
ret
xor
inc
pop
arpl
sub
mov
out
adc
pop
jp
hlt
sub
insb
dec
lret
enter
sbb
rolb
divb
xchg
add
adc
sub
iret
fdivrs
add
pop
sarb
cld
orb
sarl
out
add
lods
scas
xor
and
pop
jp
mov
stc
inc
lods
bound
xor
xor
inc
ret
cmp
jmp
sub
push
inc
push
mov
fs
add
ds
push
incb
int
mov
call
cmp
ja
pop
or
pop
xlat
mov
ljmp
or
push
dec
xchg
outsl
js
ss
mov
add
push
mov
inc
sbb
add
movsl
sbb
xchg
es
mov
shrd
mov
dec
add
scas
mov
push
subb
dec
lods
daa
xchg
cmc
add
inc
in
loopne
pusha
mov
cmp
jg
repz
hlt
mov
lcall
add
push
inc
data16
leave
mov
das
xchg
imul
in
fdivrp
popf
dec
enter
xlat
xchg
cmp
lock
or
mov
xchg
or
enter
out
add
jg
inc
scas
into
in
std
arpl
inc
data16
fistpl
test
adc
clc
rclb
push
inc
mov
rolb
in
or
adc
imul
mov
lods
jo
repz
cmpl
out
pop
mov
stos
xor
cwtl
push
pop
insl
add
sbb
mov
cmp
js
mov
pushf
daa
xchg
outsb
sbbb
mov
push
push
ret
add
negb
xor
sarl
fdivs
test
cmp
aam
testb
popf
or
xchg
xor
adc
xlat
pusha
xorb
push
jle
pop
jmp
repnz
je
inc
loopne
inc
jge
mov
sbb
push
les
add
mov
mov
mov
pusha
jg
and
mov
inc
sub
push
xor
int3
test
lods
xor
inc
loop
inc
jae
ds
and
scas
mov
and
or
orb
mov
add
nopl
cmp
push
push
mov
inc
mov
and
xchg
sbb
add
in
into
addr16
cli
dec
pop
jle
xchg
mov
rorb
add
fcomip
mov
pop
lahf
and
divl
sbb
insb
cli
mov
add
jns
bound
imul
jecxz
pop
flds
daa
push
out
stos
or
add
dec
fwait
cmp
pushw
mov
ret
rorb
scas
iret
insb
jmp
push
dec
dec
lds
out
add
movsb
fldt
cmp
add
push
and
in
add
les
mov
pusha
pop
rorb
test
mov
jecxz
pop
sub
ss
outsl
adcl
dec
push
dec
addb
dec
mov
xor
push
or
pop
les
add
aaa
add
push
fs
repnz
xchg
mov
xchg
push
lret
movsl
xor
xlat
in
mov
daa
jl
sub
mov
xchg
outsl
es
int3
sbb
addr16
xchg
test
mov
arpl
mov
add
lods
sbb
add
adc
dec
cmp
jp
pop
add
mov
pop
jge
stos
ror
add
or
mov
aad
rcrl
push
iret
mov
jmp
push
nop
hlt
es
lea
outsl
fldlg2
inc
mov
out
lods
push
repz
enter
pop
mov
decb
mov
int
pop
add
mov
push
jge
push
add
inc
inc
push
mov
movb
aam
lock
mov
or
into
mov
cmp
add
cltd
cld
test
xchg
mov
stos
xchg
mov
xchg
mov
or
and
shr
mov
add
add
push
cmpb
mov
aaa
push
popa
pop
or
fiaddl
stos
fsubr
test
int
sbb
pop
pop
sub
add
testb
addl
call
sub
add
out
fdivr
dec
popf
push
mov
adc
or
enter
enter
mov
jp
xor
pop
push
pop
icebp
jle
and
jb
sub
jge
ds
sti
ss
outsl
fwait
xchg
add
mov
mov
xchg
call
call
imul
jno
sahf
stos
xchg
clc
jnp
jmp
imul
cmp
jo
xchg
fadds
sub
lock
enter
inc
add
arpl
push
leave
and
add
lcall
or
pusha
arpl
xchg
loopne
js
add
add
jp
mov
testb
lods
bound
push
push
add
out
cmp
test
fadds
push
stc
push
fcmovnb
cld
add
cld
jle
add
pop
and
fwait
adc
and
xorl
pop
inc
add
push
shlb
jns
into
sahf
mov
lea
das
mov
pop
hlt
std
sub
loopne
jne
je
push
movb
sbbb
push
insl
xor
add
sub
push
push
cld
mov
adc
sub
cmpl
xchg
xor
jl
fdivp
or
pop
imul
add
arpl
cs
xchg
es
and
gs
add
push
ja
insb
jl
or
cmpxchg
sub
divb
add
xchg
push
repz
mov
xor
add
sub
cmp
push
add
mov
bound
pop
movsl
mov
mov
pop
loope
ret
add
and
daa
add
out
out
mov
popf
add
lcall
dec
ljmp
add
sub
inc
push
roll
fisttps
jecxz
push
aam
in
movd
add
and
sub
jne
add
fsubs
add
setnp
lods
add
rol
cmpsb
add
fwait
dec
add
ss
pop
dec
cmp
test
push
inc
push
js
addb
or
inc
movsl
mov
mov
or
aam
loope
or
sub
mov
cmp
aas
push
push
dec
jle
xchg
subl
orb
jmp
and
mov
insl
add
dec
mov
adc
add
and
popa
or
out
mov
lods
aas
add
verw
or
dec
in
test
imul
xor
filds
mov
mov
push
ja,pt
push
pop
std
mov
mov
pushf
jno
repz
mov
hlt
xor
or
test
xchg
xor
pop
xor
test
ror
in
loop
mov
clc
mov
outsb
rolb
adc
jo
pop
pop
fiadds
sbb
outsl
add
lods
adc
sbb
outsl
out
das
xchg
xchg
cmp
scas
jne
orl
add
add
bswap
jge
push
lret
mov
adc
sbb
and
mov
pop
gs
popa
mov
mov
ja
dec
ficomps
or
push
mov
fxam
xlat
hlt
sub
pop
jg
mov
mov
outsb
inc
mov
push
mov
lcall
or
movsb
push
lcall
dec
cmp
xchg
cwtl
out
aam
pop
xor
or
add
xorl
ficoms
hlt
sahf
sub
cmpb
js
add
inc
rclb
jl
mov
sub
dec
fnstenv
mov
inc
adc
insl
pop
movsb
adc
pop
test
sbbb
mov
test
fdivs
push
les
loope
lea
sbb
repnz
cmp
filds
movsl
cmpsb
pop
mov
mov
push
push
mov
add
push
stc
xor
add
cltd
aas
add
mov
sub
add
rcll
mov
mov
cmp
testb
push
imul
push
outsl
inc
push
test
add
ficomps
pop
lock
mov
imul
insl
push
sbbb
inc
inc
add
push
or
add
sub
xchg
mov
pop
jg
sbb
pop
ret
jle
loopne
adc
pop
push
call
mov
lret
or
dec
jbe
inc
lea
pusha
mov
push
loop
pop
or
add
cld
test
add
xchg
cmp
shll
or
scas
ret
dec
adc
jge
inc
sbb
jmp
jnp
pop
add
shrl
adc
jp
clc
lret
mov
lcall
lock
add
das
pop
mov
fcoml
push
push
scas
shr
cmc
xor
insb
adcb
lods
mov
dec
and
repnz
mov
imul
pop
bound
mov
and
scas
daa
in
nop
xor
jae
dec
push
sub
xor
out
dec
push
or
nop
sub
fucompp
dec
push
inc
mov
adc
aas
mov
or
mov
outsl
fwait
xchg
jbe
pop
out
dec
data16
daa
add
lret
add
aad
inc
in
sahf
add
adc
dec
lea
popa
movsb
es
fstps
cld
add
xchg
jge
fdiv
mov
into
ret
ret
push
lret
mov
dec
add
or
rcrb
jb
sbb
je
add
shll
cmp
sbb
add
hlt
add
cmp
out
mov
loop
in
xchg
and
fistpl
jle
mov
mov
push
add
ret
out
add
or
insb
out
cmp
clc
add
add
aad
in
test
mov
addr16
pop
adc
or
in
sahf
add
lahf
mov
test
popf
dec
push
push
pop
mov
pop
add
xor
pop
inc
and
add
out
dec
scas
sub
repz
int3
les
stc
ss
movsl
xor
ds
addb
pop
or
loopne
das
data16
add
cmp
mov
int
jno
push
dec
xchg
cmp
push
or
inc
push
clc
shr
xchg
add
or
fisubl
xor
sbb
dec
cli
lret
sahf
or
mov
jg
add
cmpb
or
in
imul
repz
dec
and
xor
add
xor
ja
andb
stc
add
nop
ljmp
pop
mov
mov
mov
fcoml
sub
add
mov
cmp
cmp
mov
adc
test
pop
pop
adc
outsl
adc
jbe
out
inc
icebp
ja
xor
in
lock
push
mov
mov
add
cmp
xor
adc
add
adc
jp
roll
loopne
sub
in
repz
popa
frstor
aam
adc
mov
lret
jb
repz
or
stos
or
cld
daa
in
adc
push
clc
int
add
jecxz
loopne
jmp
add
push
xchg
addr16
inc
add
add
data16
xchg
out
enter
add
mov
add
xlat
aad
or
or
shl
shrl
push
orl
jle
popf
and
dec
aaa
xchg
inc
sub
pop
mov
sbb
ss
daa
lods
add
out
dec
icebp
aam
sub
notb
les
mov
cmp
jle
mov
xor
lds
popa
icebp
js
push
ss
insb
push
xor
dec
mov
add
add
addl
add
repnz
lahf
test
add
inc
stc
mov
sbb
aam
pusha
jl
mov
or
dec
rolb
mov
mov
cli
insl
xor
cmp
add
repz
rcrl
aad
push
pusha
sub
add
bound
ljmp
xor
stc
aad
mov
add
fnstcw
add
nop
push
push
inc
add
jns
pop
test
loopne
push
test
xor
inc
int3
sbb
jnp
pop
add
adc
int
inc
sub
xchg
addr16
cs
add
mov
dec
dec
add
andl
pop
idivl
fmul
xchg
loopne
outsl
xchg
mov
loope
xchg
pusha
inc
cwtl
sbb
lea
ds
shlb
lods
cli
roll
push
xor
jle
je
or
inc
lock
fs
in
add
pop
mov
cld
pusha
fwait
add
jno
dec
cmpsb
add
adc
adc
mov
add
inc
cmpl
fdivrp
push
cmp
repz
add
mov
mov
mov
lods
sbb
cmpsb
pop
dec
add
push
rolb
cs
adc
sbb
icebp
mov
add
incl
jg
pop
add
sti
lock
pop
cmp
cmp
sbb
add
lcall
ds
pop
ret
cs
sub
loope
pusha
xor
mov
or
in
xchg
hlt
into
pop
inc
shlb
jmp
scas
fisubrs
imul
sahf
nop
mov
aas
xchg
js
add
test
add
xor
cmp
and
mov
cmpl
add
cld
xor
add
mov
in
shrl
gs
adc
pop
loopne
add
push
vmovdqu
clc
cmp
rcll
sbb
add
pusha
mov
or
push
enter
addb
xchg
mov
add
mov
mov
or
push
cltd
add
int3
mov
jne
add
lret
jo
mov
pushf
mov
lock
idivl
gs
add
jg
mov
pop
fidivs
andb
cmp
cld
adc
sub
mov
sbb
aam
add
bound
outsb
daa
push
addb
pop
push
sub
add
clc
es
jno
outsl
jge
aam
mov
xor
push
ret
jge
mov
int3
in
jb
add
bound
mov
imul
movsl
and
or
clts
test
fdivs
dec
inc
stc
pop
insb
filds
jl
push
xor
es
aam
sub
xorb
jecxz
add
ljmp
sbb
dec
push
inc
mov
popf
add
and
stc
inc
mov
pop
jl
adc
pop
mov
xor
xchg
or
sbb
add
pusha
push
repz
lret
loope
dec
daa
adc
cmpsb
dec
mov
and
in
jo
pop
lahf
mov
dec
out
xchg
ret
ficomps
mov
loope
add
or
xbegin
fcmovbe
out
pusha
inc
and
xchg
add
push
pop
mov
arpl
mov
in
enter
mov
std
inc
add
sbb
mov
dec
add
jnp
in
or
loop
clc
js
sub
xorb
mov
add
xchg
or
aas
ret
cmp
inc
stos
add
repz
dec
call
jno
inc
in
outsb
jne
imulb
add
push
std
adcl
push
dec
pop
cli
ret
mov
sbb
mov
ss
dec
add
stos
and
sbb
jnp
les
pop
sub
add
pop
int3
cld
sarl
cmp
adc
jbe
xor
add
iret
cmc
bound
push
jae
leave
pop
mov
mov
xchg
inc
mov
lock
sub
das
xchg
addl
aad
sbb
cld
add
pop
repz
ss
dec
dec
das
or
inc
mov
loopne
lcall
dec
scas
inc
add
stos
loopne
add
mov
or
mov
add
inc
push
ljmp
fdivs
xorb
and
push
sbb
or
adc
cmp
add
push
xchg
jge
dec
xor
fdivrl
mov
orb
std
jmp
and
sti
jle
add
stos
pop
xor
popa
nop
xor
and
cmp
push
lea
and
dec
xor
or
jbe
add
lds
sub
out
and
mov
inc
jge
and
add
add
or
ljmp
in
dec
lea
js
cmp
ss
cltd
pop
add
imul
xor
movhps
pushf
mov
cli
or
cmp
add
and
roll
jle
or
dec
popl
jne
test
add
aad
add
fisubs
imul
test
pop
out
js
or
arpl
push
adc
add
sub
mov
add
test
mov
int
lods
jl
adc
jo
pop
jb
add
sbb
and
cld
cmp
mov
and
lahf
ret
push
imul
inc
in
loope
adc
shll
or
insb
loope
ss
add
mov
int
lret
pop
leave
bnd
cmpb
filds
outsl
sti
cmp
loopne
addr16
adc
push
jge
jle
add
loope
push
sbb
rclb
lcall
lds
jl
pop
ss
adc
cwtl
pop
add
lcall
pop
lret
lret
cmp
add
add
int
das
inc
icebp
repnz
adc
je
leave
fs
cmp
add
jmp
ds
dec
or
inc
lret
leave
je
mov
adc
fidivrl
dec
jg
lock
push
outsl
aaa
lcall
lret
mov
push
mov
in
aad
add
arpl
inc
add
fcoml
mov
enter
scas
jle,pt
pushf
notl
mov
and
push
add
loop
imul
or
lock
add
mov
dec
lret
daa
lea
rolb
and
loop
orb
inc
cld
std
add
cli
scas
das
icebp
incb
cwtl
push
add
arpl
sbb
mov
xchg
ljmp
pop
jnp
ss
test
inc
mov
mov
je
jge
add
vmread
insb
xor
mov
add
movsl
pop
fsubp
rcrb
add
xchg
mov
jbe
mov
cmpsl
mov
mov
cmp
aad
sbb
xor
fists
les
cwtl
lret
enter
add
xor
add
lahf
ss
jnp
dec
adc
add
add
jg
sbb
je
or
push
sbb
inc
cld
es
pop
cmc
add
xor
dec
adc
rolb
mov
out
xor
add
ljmp
cmp
inc
pop
addr16
setnp
inc
lods
mov
call
xchg
jp
icebp
inc
shrb
cli
ficoms
ret
pusha
pop
jne,pt
pop
in
fistl
outsl
cmc
adc
add
jle
jmp
pop
jecxz
dec
imul
int3
sbb
xchg
sub
sbb
cmp
orl
mov
shr
in
inc
xchg
in
pusha
dec
in
add
jno
fwait
outsb
cmpsl
test
add
pop
pop
jecxz
adc
xor
xchg
pop
cwtl
in
sbb
sbb
dec
loop
shlb
addr16
lahf
add
jecxz
fldcw
imul
ljmp
jno
fimuls
hlt
sbb
jbe
adc
xchg
pop
xlat
pusha
xor
in
adc
dec
jbe
mov
into
arpl
push
fdivs
negb
gs
emms
call
jmp
imul
push
pop
inc
ljmp
lods
je
sub
inc
stc
push
inc
jb
add
dec
cmp
out
and
mov
stc
and
inc
pop
daa
aam
inc
loopne
push
iret
aaa
incb
mov
incb
sbb
cmpsl
xor
pop
jbe
lahf
mov
ja
and
testl
push
mov
mov
add
cmp
push
pop
add
xchg
inc
jp
scas
add
xlat
scas
lret
inc
and
mov
rcrl
jbe
inc
test
xchg
inc
bound
repnz
sbb
das
cwtl
cmp
and
mov
shlb
xchg
sub
dec
popa
out
movsb
nop
xchg
pop
cmc
push
and
ret
ss
clc
dec
add
jge
addl
lock
inc
add
mov
rorb
xchg
sub
xor
stos
jecxz
adc
xchg
add
inc
mov
rcl
jmp
les
adc
in
jl
insb
xorl
jle
out
and
shlb
pusha
mov
ss
pusha
cli
pop
pop
pop
insl
pop
mov
loope
push
mov
jno
jge
out
add
je
ret
push
sahf
test
shrb
repz
add
hlt
add
dec
rol
add
call
lcall
int
inc
lret
sbb
or
add
and
xchg
lods
unpcklps
sbb
and
movl
xchg
movsl
lahf
repnz
inc
or
add
sub
fwait
xchg
add
and
hlt
int3
mov
dec
jmp
or
jne,pn
movsl
or
bound
fwait
pop
adc
xchg
imul
lods
les
test
pop
xchg
ret
push
sbb
add
arpl
xchg
mov
movsl
xchg
in
roll
fsubr
jnp
test
adc
jecxz
insb
push
pop
popf
aam
mov
cmp
rolb
int3
movsl
imul
xchg
int
pop
pop
add
adc
adc
clc
sbb
or
pop
or
mov
es
add
fcomps
jp
popa
mov
in
mov
or
inc
rclb
mov
mulb
fucomip
rolb
or
mov
je
add
push
cmp
je
add
xchg
sub
xor
sbb
dec
cmp
push
mov
add
sbb
pop
push
ljmp
add
mov
push
adc
outsl
shlb
out
inc
xchg
xchg
xor
jl
cmp
mov
or
push
add
jae
add
fisubs
sbb
xor
pop
add
pop
mov
add
scas
dec
daa
add
gs
jb
lret
mov
leave
pop
in
add
incb
add
fnstenv
arpl
xor
mov
inc
fisttpll
add
sub
and
in
int
jecxz
inc
clc
les
scas
mov
jne
add
sbb
add
or
jg
mov
cmp
pop
and
jp
pop
add
mov
popa
repnz
add
fwait
call
add
js
mov
int
fimuls
dec
xchg
pop
sbb
adc
and
mov
loop
lock
mov
mov
imul
xor
pop
mov
pop
gs
inc
fsts
cwtl
mov
xchg
ret
cli
inc
and
lods
test
dec
inc
mov
add
leave
mov
movsl
xchg
inc
cltd
testl
xchg
push
xor
or
fptan
xchg
add
mov
lret
and
sbbl
pusha
xor
shlb
pop
test
lods
mov
adc
xor
lsl
out
or
subb
add
lock
cmp
inc
addb
repz
mov
fisubrs
xor
aad
and
add
dec
rcr
cmp
sbb
loope
int
int3
lcall
xor
in
mov
jp
je
push
cld
cmp
loopne
dec
sbb
cs
inc
repz
add
fstp
pop
pusha
xor
and
and
in
aaa
loope
in
pop
dec
negl
jns
or
push
into
mov
movsb
mov
push
add
or
sarb
std
loopne
enter
fidivrs
imul
inc
in
dec
jb
shl
jle
popa
std
add
pop
xchg
fs
or
hlt
add
adc
lret
add
loope
mov
inc
subb
pusha
dec
jp
pop
out
clc
add
xor
lret
jnp
mov
add
adc
clts
xor
roll
xchg
xchg
mov
sub
hlt
enter
mov
mov
fdivs
and
xor
jg
cwtl
aam
and
push
xor
mov
pop
jae
in
sbb
jno
inc
xchg
dec
jmp
out
adc
inc
in
stc
sub
aaa
add
sub
mov
je
fildl
aam
out
add
loopne
jne
fidivl
out
punpckhdq
dec
inc
jns
lock
adc
push
push
and
sub
imul
cmp
lods
dec
adc
loopne
stos
or
or
scas
jp
cmp
cmp
or
dec
nop
or
sbb
add
jp
jge
xor
add
sti
sub
ret
cld
and
jb
pop
popa
test
jns
or
jecxz
mov
adc
and
dec
add
inc
ja
add
push
cmp
aam
push
mov
add
jg
mov
lcall
repnz
jb
mov
add
dec
cmp
inc
cmpsb
ret
mov
ljmp
sbb
scas
add
cmp
leave
or
mov
pop
insl
fs
pop
cmp
pop
inc
test
lds
add
addr16
sub
add
repnz
cwtl
add
fisubs
add
jnp
dec
jbe
add
testb
shlb
ja
add
jnp
popa
lret
in
xchg
inc
mov
pop
and
ret
pop
pop
inc
movsl
push
add
inc
testl
mov
xchg
xor
inc
sub
jae
outsb
lret
out
cmp
iret
lcall
test
and
xor
les
lahf
imul
je
cmp
pop
idivl
pop
imul
jg
aas
bound
pop
fistps
outsb
add
inc
mov
in
xor
xchg
mov
pop
je
aaa
inc
je
pushf
pop
sbb
mov
rcrl
lcall
push
mov
popf
loope
leave
addr16
and
lock
fildl
pop
sbb
lcall
mov
dec
sub
pusha
je
and
add
inc
xlat
mov
jo
pop
ror
call
ja
lock
mov
inc
inc
or
add
mov
addr16
xchg
pop
inc
and
add
or
dec
pop
sbb
or
inc
sarb
xchg
add
roll
orl
loop
ret
pop
cmp
mov
and
pusha
add
jno
movsb
mov
pop
pushf
add
les
sbb
hlt
xor
loope
mov
add
pop
rclb
adc
loopne
inc
cmp
mov
shlb
shlb
cmp
pop
sbb
add
lldt
pop
mov
mov
shlb
cmp
dec
mov
add
test
in
and
in
xchg
test
leave
aaa
add
cld
and
adc
repnz
add
sbb
gs
sbb
mov
cmp
lret
adc
xor
add
cmpsb
dec
cmp
cmp
mov
fdecstp
es
sub
mov
xor
js
fwait
ret
dec
test
test
cmp
outsl
push
scas
rorb
daa
out
mov
es
lds
call
add
push
jmp
lds
repnz
cwtl
inc
mov
xlat
cmp
ret
mov
das
sub
dec
inc
call
mov
int
movsl
pop
and
popa
dec
adc
pusha
adc
push
lahf
sbb
insb
test
add
pop
sub
jb
testb
cmpsb
outsl
bound
add
jl
mov
xchg
test
jg
add
pop
adc
loope
shrb
push
jge
sti
add
jl
push
das
mov
pusha
pop
sub
orl
sbb
jge
fwait
add
inc
cmpsl
rorl
addr16
outsb
les
mov
sbb
cmp
add
add
js
sbb
shrb
mov
mov
cmp
xor
and
call
ffreep
outsb
sbb
pop
pop
mov
mov
add
cmc
std
scas
movsb
pop
nop
iret
sub
ds
dec
int
stc
dec
add
cli
adc
xor
enter
lret
adc
cmp
jns
add
icebp
push
adc
xchg
add
inc
orb
add
daa
xor
inc
sbb
cld
cmp
and
scas
pop
cs
mov
add
imul
pop
fucom
ljmp
push
in
inc
sub
bound
rorb
add
idivl
test
jne
cwtl
and
test
add
ret
lret
pop
add
fdivs
xor
addb
xchg
daa
jecxz
fldcw
cmpsb
movsb
push
movsl
pop
pop
sub
push
mov
popa
jp
mov
cmp
scas
sbb
aad
push
std
add
push
dec
jo
inc
cli
rorl
lea
pop
cmpsb
fildl
or
nop
out
mov
mov
dec
in
add
sti
adc
imul
loop
outsb
push
sub
fs
and
xor
dec
mov
dec
js
add
sahf
adc
push
imul
mov
icebp
es
add
xchg
xor
jnp
stos
cmp
add
xor
out
pop
push
testl
sbb
and
add
add
xor
scas
xchg
mov
pop
cmp
mov
loopne
int
mov
sub
pop
mov
xor
inc
or
popf
aas
sub
lea
jp
xchg
hlt
xchg
push
adc
mov
add
out
push
or
clc
pop
sub
scas
pop
pop
fdivl
push
xor
fists
add
inc
fcomps
jl
or
inc
hlt
cmpl
dec
test
lock
cli
aam
bound
push
inc
pushf
mov
add
pop
mov
xchg
mov
sti
add
neg
out
push
add
int3
sub
mov
fsubl
add
mov
mov
es
out
pop
sub
add
xor
inc
lcall
icebp
add
sti
dec
inc
out
aas
filds
inc
mov
js
add
imul
je
push
sub
cmp
add
mull
into
mov
push
ja
add
enter
test
cs
incb
loopne
lahf
sar
mov
push
daa
sbb
sub
xchg
mov
stos
mov
mov
dec
mov
les
movb
cmp
push
stc
and
je
popl
mov
inc
lret
push
sbbb
out
sub
add
cmpsl
inc
negb
add
lahf
sbb
lcall
add
ds
mov
in
mov
stc
mov
xor
lods
js
add
mov
nop
add
mov
loope
aaa
and
pop
clc
sbb
jb
inc
rclb
sub
in
or
cld
test
dec
gs
jns
adc
bound
popf
sub
adc
inc
sbb
hlt
mov
sbb
and
add
xchg
jne
ret
push
sub
add
jge
fsubrs
fistpl
pusha
stos
add
jmp
inc
xchg
inc
add
sbb
in
repz
repnz
or
mov
xor
inc
xchg
and
cli
or
addr16
fsubp
jp
sub
andl
out
sbb
pop
inc
shrb
addb
sub
dec
sub
mov
add
lock
mov
mov
cs
in
and
add
mov
add
inc
nop
pop
adc
pop
daa
rcrb
dec
mov
pop
popa
mov
add
hlt
cmp
add
sbb
sub
repz
and
sbb
add
mov
mov
add
aaa
add
imul
fadds
xchg
sbb
jmp
std
pop
cltd
lahf
test
call
rorb
mov
int3
add
out
or
inc
imul
pusha
outsb
push
add
sub
dec
in
int
inc
mov
cli
sub
cmp
jno
adc
cmp
lsl
adc
add
mov
das
pop
subl
sbb
xchg
sbb
or
hlt
sbb
jg
and
xor
cmpsb
jo
add
xor
adcb
dec
data16
fbstp
sub
cld
push
push
add
and
subb
jne
mov
rcll
add
sub
mov
dec
lea
sub
xchg
into
add
lock
das
pop
loopne
mov
sbb
lcall
add
cmp
mov
mov
ret
push
or
repz
jo
divl
add
test
mov
inc
inc
add
repnz
sar
add
shlb
and
cmp
jno
xor
add
outsl
cmc
pusha
mov
jl
cmpsl
mov
adcb
daa
mov
idivb
sub
pop
rcrb
push
inc
call
jl
fdiv
into
lahf
add
or
push
and
out
xchg
xor
inc
cltd
xchg
xor
pop
lock
or
in
inc
and
jbe
hlt
nop
pop
add
inc
mov
xchg
sub
imul
test
add
fdivs
mov
push
fs
mov
jb
movb
inc
xor
imul
popf
clc
mov
addb
pusha
mov
add
outsl
push
or
add
mov
loope
xor
stc
sub
add
data16
push
cwtl
stos
sbb
pusha
lods
jmp
bound
imul
subl
in
data16
jecxz
pop
jo
add
cmp
call
je
cwtl
in
mov
iret
sub
sbb
push
aaa
int3
mov
add
jnp
test
add
ret
lods
into
out
xchg
lock
pop
sub
lock
sarb
add
lcall
pusha
int
in
rolb
mov
mov
push
cmp
clc
inc
add
jae
pop
mov
fiaddl
in
mov
nop
jno
mov
add
pop
and
lea
cld
pop
lahf
es
inc
scas
in
push
jbe
add
les
repz
mov
adc
and
xor
lods
push
dec
xchg
or
jmp
inc
insb
xor
outsl
add
or
xorb
xchg
xor
cld
cmp
es
mov
mov
lock
pusha
aaa
cmp
and
sbb
inc
sahf
in
rolb
add
xchg
add
push
mov
inc
daa
outsb
add
xchg
mov
cmpsb
add
int
jae
jbe
push
ret
in
mov
das
adc
cwtl
sbb
scas
add
mov
and
push
mov
sub
loop
sub
jg
add
fstpl
scas
jl
push
sub
xor
sbb
fdivrl
icebp
inc
pop
std
cmc
inc
aad
push
pop
add
jle
loop
arpl
repnz
mov
add
sahf
pop
push
in
aaa
or
jno
xchg
ror
cmp
clc
cmpl
jmp
add
cld
xchg
push
and
sub
insb
xchg
mov
sub
ds
into
pop
jns
jle
jae
pusha
add
addb
or
mov
aas
loope
es
push
loopne
test
or
daa
add
cs
gs
pop
clc
add
mov
lods
int3
mov
add
mov
js
sahf
pusha
mov
stc
daa
xor
or
mov
js
add
mov
call
mov
pop
or
pop
test
inc
dec
add
std
pop
sti
mov
sti
add
in
push
sub
in
ficompl
push
shrb
xor
mov
inc
mov
push
out
lret
cmp
adc
cmc
das
dec
ret
icebp
fimull
fistpl
jo
insb
sbb
iret
jle
cmp
add
mov
add
cs
xor
bnd
add
cmp
mov
clc
jae
cld
add
out
dec
out
jo
fldt
xchg
or
mov
sahf
and
xchg
addr16
in
popa
dec
mov
or
wbinvd
cmpsb
sub
rol
jp
add
es
xchg
cmpsb
mov
xor
xor
into
mov
icebp
testb
pop
xchg
pop
insb
imul
daa
adcl
int
mov
loop
sbb
xor
leave
inc
lret
push
sub
add
cmp
or
ja
mov
mov
inc
mov
add
xchg
pop
and
pusha
sar
pop
aas
adc
out
dec
add
fwait
sub
test
shlb
inc
dec
enter
add
loope
decl
xor
jns
pop
gs
add
adc
push
xchg
loopne
lar
lds
inc
shl
push
int3
dec
test
push
daa
fdivrl
movsb
or
enter
sahf
sub
outsl
xor
popa
or
add
inc
rcl
mov
cmpb
xor
cmp
sbb
xchg
or
xchg
aaa
push
popa
sbbl
cltd
repnz
shl
out
sbb
sub
add
shlb
repnz
hlt
sti
adc
adc
fbstp
cld
push
lds
sarl
add
dec
aad
enter
cwtl
lock
fs
pop
add
xlat
lret
cmp
adc
data16
sbbl
xor
add
cmp
sbb
xor
ss
shl
call
push
sbb
sahf
jp
xor
push
xchg
mov
xchg
push
cmp
ja
test
int
or
xchg
add
into
inc
dec
nop
jo
sbb
out
adc
inc
rsm
xor
js
add
imul
inc
cmp
ds
je
mov
lahf
inc
mov
pop
jp
and
mov
iret
ss
xor
add
popa
stos
aas
xor
xchg
mov
add
in
cld
push
fdivrl
sub
sub
add
mov
mov
adc
push
push
rolb
shrb
bound
insl
sub
xchg
gs
stos
cmpsl
cld
stos
nop
push
add
mov
jae
adc
pop
jnp
dec
cmpsb
outsb
aad
add
pop
inc
push
sub
int3
add
pop
xorl
add
add
popa
js
dec
paddq
mov
cwtl
inc
xlat
testl
imul
xor
loopne
jnp
gs
sahf
rolb
or
mov
addb
add
or
in
and
imul
roll
mov
inc
jle
cmp
in
popf
outsb
pusha
rolb
pop
adc
test
push
dec
shll
js
mov
clc
and
sbb
xchg
xchg
imul
mov
cmp
add
cs
push
rcll
dec
add
push
add
cld
adc
xor
pop
add
rcrl
jb
or
mov
std
test
add
rolb
add
imul
repz
mov
dec
add
pop
jl
in
pusha
ja
sbb
mov
pop
pop
iret
or
mov
mov
inc
rorb
repz
ljmp
repnz
hlt
xor
dec
pop
sbb
aas
sarl
mov
ret
cs
out
cmp
pop
test
js
and
xlat
addb
insb
mov
inc
pop
dec
sbb
fwait
mov
add
fsubr
sbb
jge
add
lds
fs
or
add
fidivl
lret
out
into
adc
stc
mov
sub
subb
sbb
mov
push
add
pop
gs
add
and
js
add
push
rclb
fs
xor
enter
sbb
pop
sub
orb
mov
mov
cltd
outsb
add
out
out
repnz
adc
hlt
adc
mov
pop
mov
arpl
mov
inc
rolb
jo
lds
call
cmpsb
push
lock
insl
arpl
dec
pop
test
pop
ret
add
sub
sub
repnz
xchg
fsubr
jg
push
insb
pop
ljmp
cmpsb
rorb
test
sub
pusha
js,pn
scas
test
int3
add
mov
fildl
in
add
movsl
jo
jle
fincstp
push
je
jno
dec
add
mov
in
add
pop
lods
push
inc
cmp
cmp
lret
std
stc
mov
pusha
push
sub
jge
enter
outsb
in
cmp
ljmp
and
out
aaa
cmpsb
iret
sbb
loopne
add
jge
cmp
jl
pusha
sub
pop
movsl
sti
into
stos
sahf
cs
or
sub
mov
cmpl
jo
fsubrs
sbb
out
in
or
and
mov
jno
lret
cmp
cld
mov
cmc
call
push
stos
pop
sbb
push
call
out
push
push
xchg
sub
pusha
and
xorb
decb
add
cmp
add
insb
pop
or
mov
or
shlb
and
add
shl
inc
xchg
mov
mov
les
cli
fwait
add
loope
sti
add
cmp
inc
inc
icebp
xor
add
decl
add
or
pop
call
inc
cmp
cli
jp
mov
jne
icebp
sbb
sub
jbe
lods
and
lock
jo
mov
ret
mov
xor
add
mov
repz
ret
mov
inc
or
dec
fistpll
roll
mov
mov
xchg
sbb
pop
add
mov
add
xchg
push
in
inc
dec
call
mov
dec
xlat
cmp
inc
xchg
add
mov
mov
std
hlt
cmp
push
je
add
mov
loop
lods
add
pcmpeqd
push
sahf
or
pop
bound
dec
cltd
loopne
cmp
fildl
test
shlb
mov
mov
pop
pop
dec
cmp
cld
test
mov
jl
pop
mov
insb
pavgb
jb
movsl
in
stos
ret
or
push
or
adc
cmp
dec
and
fldt
mov
add
push
sub
inc
in
lods
sbb
out
cmp
dec
test
fsubs
add
test
and
stos
insb
cmp
popf
mov
sbb
add
mov
sbb
xchg
bound
cmp
adc
push
push
pop
testl
leave
lcall
jb
add
jno
fidivs
or
cmp
inc
clc
dec
cli
pusha
add
lea
add
mov
pusha
add
mov
clc
pavgb
and
test
daa
or
add
jl
cmp
jp
sbb
in
cmp
push
cmp
int
arpl
fcomps
adcb
js
nop
inc
adc
lock
lds
nop
je
sbb
sbb
or
sbb
cmp
lret
adc
add
sub
loope
adcb
cltd
stc
push
dec
mov
jmp
mov
xchg
mov
mov
call
push
mov
mov
xor
dec
into
or
nop
add
loopne
lahf
cli
fildl
imul
in
ljmp
adc
inc
mov
sub
sub
in
lock
ljmp
lret
and
ficomps
mov
xor
push
aas
push
add
out
sbbb
pcmpeqb
ja
and
inc
pop
add
sbb
sbb
inc
cmp
lahf
aas
push
movsb
ret
sbb
push
lods
jge
idiv
xchg
cmp
mov
fiadds
jmp
adc
pop
mov
add
inc
aam
jmp
pop
xor
push
sarb
dec
int3
push
rorl
add
cld
ja
add
mov
sbb
in
push
add
shrb
add
scas
jecxz
or
cmp
pop
or
mov
aam
dec
idivl
mov
cmp
sbb
cmp
cmp
dec
cmp
rsm
and
stc
cmpb
xlat
and
dec
pop
outsb
and
enter
inc
and
lret
into
out
sbb
xchg
addl
adc
or
and
dec
inc
mov
std
inc
xchg
pop
sub
outsb
mov
add
adc
jo
and
pop
testl
cwtl
and
ret
es
add
add
int3
add
nop
xor
loope
por
mov
sbb
push
pop
or
int3
add
jg
cmp
sub
outsl
icebp
ja
jbe
sbb
adc
mov
pop
and
aad
call
cmp
xor
addr16
mov
cld
les
dec
repz
pusha
xchg
push
data16
lret
and
stos
loop
lcall
test
pop
pop
mov
test
std
and
add
xor
push
jbe
add
or
sarb
dec
or
cmc
repnz
add
mov
dec
push
sub
add
in
pop
mov
sbb
cmp
iret
lods
sub
fistpll
dec
add
cmpl
mov
ret
cmpsb
push
in
add
inc
mov
hlt
cmp
sub
mov
ret
jno
jg
sub
mov
outsl
fsubrl
add
pop
cld
sub
popa
inc
mov
cmc
adc
cmp
loope
mov
int3
mov
pop
push
lds
cli
and
arpl
jg
sahf
xchg
mulb
xor
out
fsubl
or
xchg
add
adc
mov
and
xchg
cli
add
xor
or
cmc
inc
push
adcb
movsb
shlb
aaa
cld
orb
sub
jmp
adc
mov
call
sub
pop
pushf
lcall
mov
cmp
add
movsl
mov
jb
add
test
xchg
int
dec
loop
iret
or
fcompl
jnp
add
lret
jmp
lahf
mov
and
pushf
andb
ret
sbb
aas
cmp
push
in
jl
push
pop
shll
cmp
inc
pop
andb
push
pop
scas
pop
push
add
icebp
push
add
xor
test
adc
adc
adc
insb
in
mov
pusha
fstpl
inc
loopne
or
loop
push
add
mov
imul
int3
xchg
dec
sbb
shll
and
dec
push
cmp
orb
mov
mov
add
push
xchg
incl
lods
aas
fs
xor
adc
mov
push
add
and
ret
sbb
daa
testl
xchg
stos
xor
jge
pop
shr
inc
push
push
lea
xchg
sbbb
clc
jae
push
add
mov
add
ss
sbb
pop
mov
and
dec
rolb
cwtl
inc
or
fs
cld
push
sub
jecxz
repz
cmp
mov
add
fnstsw
xchg
imul
pop
mov
dec
roll
sub
int3
and
and
inc
test
popf
pop
pop
jb
orl
jae
add
pop
sbb
mov
fdivrl
dec
lfs
call
clc
xchg
add
cmp
jo
testl
lds
leave
aaa
enter
mov
adc
data16
iret
fdivrs
mov
mov
mov
add
xlat
jle
xor
iret
outsl
cwtl
hlt
cmp
shlb
add
mov
ds
add
lret
cwtl
cmpsl
and
or
xor
out
mov
pop
mov
jp
add
or
dec
mov
xchg
cmp
add
mov
push
or
pop
add
push
cmp
aam
cmp
out
andb
add
lods
xor
in
insl
jnp
add
cmp
jg
cmp
jecxz
cmpsb
cltd
call
imul
sub
jp
hlt
add
xchg
pusha
loope
outsb
or
mov
pusha
dec
dec
sbb
lret
mov
out
push
cmp
inc
and
mov
jb
add
sbb
push
adc
pop
ljmp
cmpsb
pop
loopne
sub
cmp
mov
add
jp
cli
sahf
sti
aas
push
add
stos
sub
aad
pop
push
mov
and
jecxz
rol
jo
cli
movb
and
add
dec
push
nop
cmp
cmpb
mov
and
mov
fistl
adcb
call
mov
add
sub
lcall
xchg
and
push
shll
add
jle
xchg
add
push
cmpsl
pusha
cmp
js
in
mov
insb
jp
int3
inc
fwait
add
adc
loop
mov
daa
icebp
adc
movsl
orb
cmpl
add
add
fsub
mov
lock
sub
jnp
xor
mov
xor
push
repnz
xor
lods
push
addl
fcmovnb
jne
xor
mov
cmp
rcl
mov
nop
inc
enter
mov
mov
call
jns
into
push
movl
in
jl
pop
add
jge
xchg
out
adc
ljmp
xchg
fs
mov
stos
mov
push
inc
pusha
jo
mov
add
inc
mov
or
mov
push
add
clc
push
imul
leave
int3
push
xchg
iret
outsb
jp
add
or
incb
out
dec
int
jge
mov
xchg
addb
and
mov
call
cmp
inc
test
add
mov
mov
fucom
cltd
mov
lock
std
add
mov
pop
mov
or
inc
rcl
push
jg
push
sbb
mov
xchg
test
fiadds
insb
add
in
pop
xlat
loope
mov
jecxz
fs
jmp
movsb
pusha
pop
or
jo
add
in
jno
add
xor
sbb
repnz
add
jmp
cmp
daa
dec
aam
sbb
js
xchg
add
mov
cltd
rol
adc
lods
xchg
sarb
cmp
cmp
stos
clc
mov
dec
fnsave
jo
add
imul
add
xor
mov
into
jb
add
sbb
rorb
enter
cmp
jp
push
mov
nop
insb
add
cmp
add
lds
movl
repnz
lahf
call
mov
and
cmp
add
sub
icebp
lcall
lret
inc
in
and
add
mov
ret
je
xchg
push
push
cmp
mov
add
xchg
repz
jno
add
mov
add
pushf
xorb
mov
mov
adcb
jae
dec
xorl
xor
in
movsl
or
ss
dec
out
push
jp
add
pop
cmp
push
push
loopne
pop
push
pushf
xor
adc
ret
fdivr
inc
fildl
out
jne
loop
fdivrs
sbb
insb
mov
shll
hlt
mov
push
jl
or
repnz
popl
enter
mov
sarb
xor
xchg
enter
pop
test
in
loope
and
lods
push
fisubl
push
stos
fstpl
ljmp
cld
mov
aad
mov
cmc
mov
add
mov
imul
push
pop
sbb
leave
mov
imul
cmp
mov
lret
aaa
loopne
outsb
stos
arpl
sbb
sub
jo
testl
sbb
push
push
testb
clc
imul
hlt
js
sub
dec
mov
mov
push
cwtl
jae
cmpb
dec
add
xlat
lock
sbb
dec
in
lea
lock
stos
inc
add
push
fisttps
ja
push
pushf
inc
repnz
unpckhps
sbb
jno
add
push
into
dec
xlat
dec
sti
das
add
pop
hlt
dec
sbb
ret
cmp
xor
add
jnp
cmp
fs
add
mov
xor
scas
clc
test
xor
jle
notb
mov
cmp
popl
push
out
std
gs
pop
out
in
add
call
xchg
sub
xchg
daa
push
add
or
or
inc
lahf
daa
sahf
add
and
mov
hlt
in
cmp
addb
mov
sbb
push
or
and
popa
add
fnstsw
mov
pop
out
xchg
rcrb
and
dec
mov
sbb
je
dec
or
mov
push
mov
sub
in
lea
sbb
lret
jno
cmc
into
and
mov
adc
mov
adc
aam
or
inc
pop
lea
sar
in
dec
cmp
mov
add
rcrb
fs
loope
rcrb
test
jl
lret
enter
jns
adc
fcomps
es
in
add
aaa
or
leave
mov
mov
cmp
pop
adc
jne
cld
push
popa
jmp
out
mov
or
xor
xor
sbb
add
shll
movsl
imul
or
or
data16
imul
aas
shl
inc
aam
fistps
es
leave
and
add
stos
outsb
dec
add
xor
int3
mov
fdivrs
lahf
mov
adc
sbbb
stos
inc
rorb
stos
cmp
and
fwait
xor
lock
arpl
and
push
out
inc
faddl
inc
lret
jmp
jno
jo
xor
inc
repnz
lcall
dec
xor
ret
sub
stos
mov
dec
push
sbb
ja
roll
mov
mov
xor
leave
xchg
shll
ss
int3
addr16
rclb
or
cmc
add
stos
xlat
add
xchg
hlt
mov
xor
lret
aaa
xchg
loopne
ljmp
popf
inc
and
out
mov
add
inc
xchg
cmpsl
add
and
cmp
adc
ljmp
sahf
rol
scas
xor
mov
sbb
ret
mov
lahf
jo
mov
inc
out
insb
add
addr16
add
sahf
cmp
ds
or
mov
scas
std
add
cmp
xor
and
pusha
cmc
dec
push
mov
cltd
add
sti
adc
and
imul
xchg
cmpsl
add
hlt
mov
and
mov
dec
cmp
and
sbb
cltd
pusha
mov
push
cld
add
pop
xchg
add
sbb
and
bound
scas
aas
dec
and
ss
sbbb
rcrb
fs
dec
fisttps
lds
dec
xchg
dec
icebp
scas
in
je
and
outsl
sbb
mov
adc
bnd
add
ret
xchg
cmp
scas
adc
add
mov
add
push
bound
sbb
into
js
push
loopne
xchg
push
and
add
ss
sbb
and
pop
inc
test
xor
push
jmp
or
repnz
adcb
fisubs
xchg
adc
lock
call
stos
imul
int
aam
cld
clc
arpl
xchg
lret
pusha
sti
cmpsl
flds
and
add
bound
jae
in
nop
mov
inc
adc
mov
push
sbb
add
sub
pop
xor
cmp
push
dec
mov
dec
sysret
mov
push
repnz
cmpl
enter
jp
stos
pop
dec
cmp
add
or
jmp
arpl
orb
mov
or
push
arpl
cld
adc
adc
xchg
xor
xor
test
mov
sbb
test
cmp
add
shlb
sbb
xchg
pusha
cs
jno
xor
sbbb
shll
psllq
cwtl
and
hlt
ja
add
ljmp
push
add
sbb
mov
add
leave
hlt
fdiv
rorl
adc
jecxz
filds
cmc
lret
pusha
mov
pop
add
and
je
pop
in
xchg
cld
lahf
dec
nop
cwtl
xor
add
adc
jbe
xor
lds
lahf
xchg
outsb
xor
fdivr
scas
add
or
pop
loopne
lods
sbb
push
xor
inc
or
add
cmp
xchg
cmp
add
adc
add
cmp
and
adc
pusha
xorb
xor
mov
adc
ds
out
sahf
mov
inc
les
xchg
add
pop
loop
nop
push
ret
test
jne
add
cmpsb
ret
mov
roll
pop
push
imul
stc
push
jle
pop
jbe
ljmp
leave
cmpsl
add
jbe
ljmp
jae
call
sub
mov
cmc
sbb
or
shlb
aas
and
lret
cwtl
xchg
add
and
sub
je
pop
clc
decb
mov
dec
int
cmp
push
add
ret
jno
loopne
dec
outsl
xor
adcb
lret
inc
in
mov
nop
pop
frstor
es
add
add
cmc
push
adc
sub
sbb
dec
mov
add
rcl
les
sbb
mov
inc
xchg
int3
shlb
sub
xchg
lea
push
dec
add
mov
movsl
pop
push
rolb
or
sbb
push
imul
movsb
jo,pt
jo
jp
fiadds
pop
ffreep
push
shrb
mov
sbbb
cs
testb
std
sbb
mov
loopne
cltd
popl
clc
in
jno
inc
sbb
xchg
call
icebp
and
repz
or
mov
imul
out
dec
lock
int3
in
nop
sbb
sbb
xchg
cmp
jnp
in
pusha
sbb
and
push
mov
xchg
cltd
or
sti
scas
test
sbb
testl
arpl
sbb
add
add
inc
mov
out
cmp
rorb
add
xchg
call
iret
mov
in
xchg
hlt
adc
cmp
add
test
sbb
mov
add
inc
sbbb
mov
cli
int
add
and
movsb
cmp
or
nop
iret
add
pop
orl
adc
add
or
into
pop
xchg
ror
cmc
cmp
mov
sub
adc
or
sub
rcr
push
adc
lods
pop
xchg
cwtl
push
lcall
jno
jecxz
ljmp
add
cmp
daa
or
in
das
jecxz
push
xchg
mov
add
mov
or
add
inc
imulb
push
add
enter
cli
stos
add
push
mov
stos
adcb
xchg
and
add
cmp
add
jmp
mov
rdpmc
clc
add
test
xchg
aam
sub
xchg
adc
inc
mov
outsb
mov
pushf
mov
adc
test
xchg
add
into
inc
sub
imul
push
popf
mov
fwait
mov
fnstenv
and
fadds
je
mov
adc
test
sti
loopne
dec
or
dec
fcomi
gs
pop
add
popf
mov
sub
cmpsl
repnz
mov
addr16
ss
les
cli
rolb
and
sahf
xchg
gs
ret
cmpsl
stos
mov
inc
stos
in
jne
loop
add
jl
das
idivb
and
scas
adc
mov
add
adc
pop
or
fs
test
sbb
jle
popf
add
inc
or
pusha
mov
out
je
outsb
adc
nop
and
loopne
or
rol
dec
xor
add
sbb
scas
aas
pusha
add
push
jo
or
cwtl
clc
add
push
mov
cwtl
in
and
fstps
add
ja
in
loopne
adc
mov
xor
adc
push
add
sub
sti
pop
addr16
pushf
or
mov
sub
or
scas
dec
pop
add
movsl
dec
shlb
push
mov
cmp
or
cwtl
add
jle
inc
movsb
pusha
add
or
inc
sbbb
je
into
inc
insl
mov
pusha
mov
ss
ljmp
in
out
jl
cmp
in
add
adc
adc
aas
lods
cmc
test
pushf
push
popf
cwtl
bnd
mov
or
test
inc
push
mov
xchg
jl
nop
xorb
jns
or
outsl
cld
add
test
ss
mov
in
ds
push
dec
fists
cwtl
js
ljmp
dec
and
ret
adc
mov
mov
cmp
and
or
cmp
mov
js
xchg
mov
in
sbb
inc
or
add
stc
or
int
add
push
add
push
mov
add
adc
in
mov
dec
pop
pusha
icebp
add
loop
mov
stos
cmc
sub
xchg
or
negb
test
xchg
lcall
gs
mov
dec
in
add
arpl
push
xacquire
and
fcompl
mov
scas
clc
mov
pop
xchg
outsl
add
scas
scas
lcall
stos
into
add
pop
cmc
shll
call
in
in
mov
jl
fwait
stc
dec
xorl
loop
clc
inc
add
or
loope
sub
divb
xchg
lods
add
scas
jae
nop
rolb
bound
cs
pop
fldcw
sub
add
pop
out
dec
aaa
lea
loope
add
fldl
and
xor
sub
enter
mov
cmp
sbb
ret
sub
push
inc
fnstcw
mov
add
sbb
push
lcall
stc
sbb
mov
sbb
pop
sub
push
push
xlat
sti
negb
add
push
and
cli
push
add
mov
loopne
push
mov
xchg
push
pop
and
add
or
adcb
add
and
or
frstor
inc
bound
lcall
dec
add
push
ret
fwait
and
rorb
jge
jno
add
push
lcall
imul
aas
add
insl
xchg
push
add
add
adcl
add
cmp
jns
lea
dec
testl
ljmp
sahf
lock
stc
xchg
imul
jge
add
or
sarb
sti
outsl
add
ja
test
jmp
mov
cmpsb
add
es
jne
and
xchg
push
add
mov
add
test
divb
add
out
xchg
jns
xor
ret
or
add
mov
add
and
out
in
sarb
repz
cmp
int3
xchg
hlt
push
add
adc
adc
jbe
mov
adc
mov
add
sub
pop
orl
or
add
mov
out
inc
add
mov
mov
or
inc
stos
adc
gs
add
xchg
movsb
addr16
mov
pop
cltd
xor
ljmp
arpl
add
mov
adc
adc
push
mov
and
insl
cld
shlb
fcom
jbe
mov
cmpsb
and
cltd
fadd
push
xchg
sbb
mov
sbb
pop
test
call
or
lods
popf
mov
aas
jge
xor
cmp
outsl
inc
clc
mov
and
adc
mov
push
fcoms
cmpl
pop
xor
push
jl
add
lcall
testb
dec
push
mov
repnz
je
fiadds
les
repz
jb
xchg
cmp
loope
jb
test
fisttps
fadds
or
test
push
lret
add
rcrb
andl
adc
sbb
jb
jle
ds
fadds
inc
pop
fucom
aas
push
pushf
add
test
xorb
dec
push
loop
std
xorb
jg
push
add
cmp
js
cmp
inc
add
push
fwait
addr16
outsb
xchg
sbb
stos
dec
xchg
mov
shr
pop
xchg
or
lods
mov
mov
push
ds
cmc
cmp
xchg
sub
dec
add
sub
fs
push
js
and
inc
out
hlt
fwait
push
push
enter
out
sub
fistl
clc
cmc
push
pop
out
or
adc
or
movsb
cwtl
pop
mov
mov
loopne
cli
mov
mov
or
or
rol
test
cs
dec
dec
aam
mov
out
pop
scas
jge
pop
dec
sbb
jp
iret
mov
add
or
sbb
sbb
inc
xor
lahf
pusha
nop
loope
pop
jnp
cmp
add
movsb
xchg
mov
int3
push
add
mov
xorl
ljmp
roll
and
sbb
xor
xchg
out
pushf
movsb
and
clc
shrb
xor
stos
xor
pusha
jb
mov
mov
imul
push
xor
jno
popa
arpl
push
dec
les
add
gs
xlat
mov
insb
movsl
ret
mov
pop
pop
outsb
add
push
je
add
test
mov
pop
div
repnz
add
rolb
add
aad
mov
cmc
sub
mov
imul
add
cmp
mov
enter
dec
dec
mov
daa
addr16
xchg
sbbb
xchg
add
mov
call
inc
sbb
sbb
add
pop
lret
lock
pop
add
aam
jg
movsl
das
and
jbe
rcr
in
dec
clc
cmc
inc
add
push
arpl
mov
inc
adc
adc
sarb
sbb
lcall
or
xchg
inc
hlt
ja
mov
add
and
xchg
adc
xchg
inc
push
das
nop
fs
lcall
and
pop
cmp
imul
pop
lea
lret
shll
repz
add
xor
sbb
lret
sub
cwtl
insl
add
xchg
fstpt
add
inc
incb
inc
arpl
mov
call
insb
and
fwait
jb
add
cmp
pushl
aas
andb
cmovg
in
in
pop
add
mov
lahf
or
ljmp
cld
iret
xchg
mov
jge
push
xchg
adc
add
mulb
inc
push
inc
dec
into
sar
fildl
inc
mov
pop
sti
mov
cmpps
shlb
sub
inc
xchg
sub
xor
add
xchg
out
in
cmp
les
fmul
int
sub
jbe
inc
jb
sbb
xchg
insl
push
ja
inc
mov
add
sub
pushf
cs
rcr
inc
out
mov
and
dec
in
mov
mov
jp
lock
dec
jle
add
fs
jns
inc
push
flds
in
les
xabort
xchg
push
mov
loopne
sbb
adc
push
jae
add
and
sbb
sbb
incb
add
sub
aam
or
dec
call
dec
in
xchg
xor
add
add
lea
push
mov
push
outsb
push
icebp
inc
ljmp
pushf
movsl
xor
add
cmpsb
sbb
inc
and
sub
adc
cwtl
sub
inc
inc
mov
pop
add
inc
sbb
inc
or
xchg
fildll
aad
add
push
imul
stos
pop
sbb
ljmp
push
inc
stc
lods
shlb
imul
add
dec
arpl
fdivrs
add
movsl
lret
sti
pushf
pop
dec
add
pusha
fmuls
icebp
adc
push
xor
push
lcall
mulb
sahf
clc
jns
es
mov
xchg
data16
push
stos
insb
ja
add
or
adc
sub
fcmovb
cmp
mov
mov
mov
cmp
loope
dec
ficompl
test
mov
lahf
jmp
loope
lds
mov
push
and
test
bound
cmp
xchg
add
test
xor
jle
pop
loope
and
std
subb
dec
outsb
sbb
add
mov
mov
mov
jle
jne
cmc
xor
daa
push
sub
add
leave
test
cmpb
sbb
or
cmp
scas
add
xchg
jne
aam
clc
jl
mov
add
stos
mov
out
loopne
cmp
push
xorb
imul
adc
jl
push
cmp
sbb
test
push
lods
jo
push
add
add
loope
pop
in
pop
pop
shl
aas
push
dec
mov
pop
jmp
adc
negl
lods
mov
or
mov
test
adc
push
sarl
fwait
sbb
push
loope
aas
ja
add
imul
int
shrb
sbb
insb
daa
arpl
subl
test
add
cli
adc
xchg
inc
cmp
lock
sbb
out
or
outsl
dec
ret
pusha
and
sub
sbb
call
fildl
dec
xchg
in
mov
pop
hlt
add
cmp
xor
in
adc
aas
mov
roll
or
mov
xor
add
mov
xor
and
add
cmp
dec
dec
fsub
clc
xor
xor
mov
push
call
add
daa
cmpsl
mov
lock
add
fistpll
or
push
add
pushf
xchg
stos
mov
and
dec
add
stc
mov
or
clc
enter
out
add
cmp
outsb
test
add
and
mov
push
scas
sbbl
data16
push
add
cmp
repnz
add
ljmp
cli
xchg
mov
ret
mov
mov
xchg
push
pop
pop
cmc
jno
xor
cld
mov
add
adc
pop
add
pop
fucomip
lds
add
hlt
sbb
xor
sub
cmp
mov
fwait
mov
add
xor
test
sub
or
mov
repz
xchg
inc
rcll
icebp
mov
push
adc
pop
pop
or
test
mov
and
imul
lods
add
cwtl
xchg
clc
fisttpl
aad
cmp
popl
mov
pushf
inc
jbe
rolb
imulb
push
adc
jle
out
or
je
add
dec
imul
mov
sub
adc
add
xor
pop
cmp
jno
mov
mov
fiadds
jnp
jns
mov
push
or
ljmp
pop
aaa
dec
stc
out
daa
cltd
dec
ja
lods
and
pop
test
xor
dec
fwait
sbb
fdivrs
int3
jg
dec
sub
push
and
xchg
and
inc
xlat
mov
movl
mov
adc
mov
nop
mov
add
or
daa
mov
in
xor
push
mov
lret
bound
sub
or
add
sub
orb
xor
lds
rclb
test
mov
movsl
push
adc
and
xchg
js
negb
cmp
xchg
out
adcb
out
sbb
mov
pop
add
es
movl
outsl
inc
subl
daa
loop
repnz
fisubrs
dec
scas
xchg
cmp
popf
rorb
cli
fldenv
sbbb
call
mov
xchg
add
cwtl
mov
int3
loopne
add
push
loopne
add
xor
out
testb
cmp
rorb
xchg
or
inc
daa
pop
mov
push
inc
or
add
sub
jle
test
or
mov
dec
ret
fcoms
rolb
popa
outsb
push
add
sbb
out
add
inc
sti
xor
ja
mov
mov
enter
add
mov
xchg
or
cmpsl
cld
mov
add
push
in
add
or
int
add
add
cmp
das
inc
mov
cmp
mov
xchg
ja
pop
scas
and
mov
repz
add
jne
sub
aam
add
pslld
mov
add
cmpsl
adc
jbe
es
add
or
adc
xchg
add
aam
cmp
lods
xchg
mov
das
dec
loopne
popl
xor
adc
jb
hlt
scas
push
jne
inc
daa
dec
or
and
cmp
mov
or
or
or
or
lahf
in
jl
add
pop
add
mulb
xor
mov
mov
mov
dec
xchg
loop
stos
jno
inc
out
sub
jecxz
dec
xchg
enter
cmp
xchg
fcmove
inc
movsl
sarb
pop
mov
lahf
mov
out
popa
adc
push
xchg
into
sbb
sbb
push
add
in
sbb
add
xchg
push
push
push
je
pop
fwait
test
cmpsb
push
pop
push
xchg
adc
adc
add
loopne
pop
lret
arpl
add
gs
inc
pop
sbb
add
jp
add
mov
xchg
fsubrl
popf
add
loope
cwtl
fwait
add
dec
inc
xchg
cmp
or
cmpsb
cmpb
sbb
adc
mov
lods
or
insl
push
ret
xor
mov
call
add
dec
rclb
or
cmp
push
xor
sbb
add
push
lahf
loop
ret
mov
test
aad
mov
test
cltd
insl
push
pusha
fidivl
add
js
cmp
dec
ljmp
cmp
and
les
pop
out
xchg
cmpsb
dec
push
arpl
popa
fdivrl
push
mov
inc
popf
aaa
sub
dec
add
dec
rcl
mov
out
push
jbe
leave
ret
insb
push
inc
sub
in
roll
test
data16
xorl
repnz
push
and
add
fisubl
sbb
nop
into
mov
add
sti
movsl
add
ljmp
fidivrs
sbb
push
pop
sbb
or
gs
inc
pop
push
loope
or
cmpb
icebp
ss
xchg
inc
frstor
loopne
stos
clc
add
pop
xor
xchg
xlat
cmp
jns
leave
pop
rol
mov
dec
out
add
add
incb
mov
add
rol
dec
mov
popf
add
xchg
mov
jae
add
loopne
mull
aad
in
addr16
loopne
jecxz
pop
fcoms
mov
push
sbb
aam
adc
cmp
mov
enter
lahf
into
ds
lock
aaa
sbb
filds
outsb
xchg
pop
aam
add
fs
mov
jge
inc
je
dec
sbb
movsl
push
push
std
repnz
push
test
push
fisubrs
inc
mov
add
outsl
inc
and
test
shlb
xchg
adc
aad
insb
jbe
stc
mov
add
push
mov
loope
movsl
dec
add
mov
rol
add
loope
outsb
dec
add
push
loop
fwait
shlb
push
int
push
je
stos
cmpsb
lds
aas
icebp
sar
sti
cmp
adc
imul
add
pop
or
stos
xor
addb
icebp
test
push
shlb
js
orb
mov
push
add
test
jl
dec
mov
nop
inc
add
repz
fcomps
xor
and
mov
add
daa
add
push
gs
or
pop
loopne
call
aaa
repz
movsb
flds
inc
addb
imul
leave
push
cmp
mov
mov
dec
jne
add
pop
movsb
ljmp
xchg
mov
add
and
pop
mov
push
icebp
call
pusha
pop
shr
mov
cmp
fisttpl
add
xlat
xor
and
jle
cmc
mov
loop
xchg
in
lock
es
jb
adc
js
inc
cwtl
push
adc
pop
scas
je
jae
clc
add
imul
ret
inc
dec
add
cmp
es
adc
mov
std
push
outsb
test
push
fcoml
pop
pop
mov
lret
stos
mov
inc
aam
sbb
rorl
push
adc
imul
mov
cmp
shll
gs
das
or
mov
jo
add
xor
pop
jg
push
scas
pop
inc
pop
mov
mov
iret
stos
stos
or
test
and
aad
sub
jnp
mov
pusha
lea
std
addl
int3
aaa
adc
sbb
dec
inc
out
ret
adc
pop
movsl
jae
popa
add
inc
enter
add
adc
repz
fs
mov
repnz
jb
cmp
aas
add
and
and
add
std
mov
add
loop
test
fdivr
out
or
cmp
aaa
jle
ss
add
mov
outsb
add
fstps
mov
pop
mov
pop
sbb
dec
rolb
jb
sbb
pop
adc
nop
imul
orb
push
and
lea
fs
adc
inc
jmp
std
nop
dec
pop
cmp
add
fs
fwait
inc
fiadds
loop
movsb
or
and
mov
mov
add
cs
call
movsl
jmp
mov
push
cmp
pusha
lret
cmpsb
rcrl
push
xchg
cmp
in
jge
movsl
pop
or
jbe
mov
add
aaa
add
add
rclb
scas
das
lods
mov
xchg
sti
rcr
add
and
ja
iret
bound
fsts
push
lahf
push
or
test
int
jle
sarb
test
or
hlt
push
pop
lea
add
cs
movsb
sbb
call
cmp
aas
pop
add
jp
add
addb
addb
ljmp
xchg
add
repnz
je
pop
ljmp
dec
cs
insl
popf
pop
test
addl
roll
fdivr
add
xlat
sbb
pop
push
js
aad
sbb
psllq
and
test
cmp
jnp
inc
scas
push
iret
mov
sbb
sahf
or
pop
mov
sub
jle
into
adc
mov
mov
mov
testl
mov
push
pusha
xor
push
inc
mov
fimull
dec
jl
dec
rclb
mov
add
adc
mov
adc
pop
xor
cmpsl
ds
mov
dec
jb
add
roll
ficomps
stc
mov
nop
mov
orb
push
jge
mov
shll
nop
mov
leave
mov
pop
in
add
mov
int
or
movsl
arpl
inc
negl
sbb
pusha
xchg
and
mov
ja
add
in
outsl
jno
fstl
xchg
sub
or
out
test
mov
lods
mov
cmp
sbbb
push
xor
xor
lcall
test
dec
int
sub
mov
sbb
in
test
fcmovbe
fldcw
cmp
stc
add
popa
shll
clc
aaa
call
icebp
adc
mov
or
and
arpl
mov
fsub
loopne
push
pusha
imul
lret
xor
push
loop
add
test
adc
or
int3
add
lret
pop
lock
std
imul
adc
pop
pop
inc
mov
adc
rolb
push
jbe
out
mov
cmpsb
cli
ds
mov
mov
mov
and
jns
ss
lods
add
aad
add
js
bound
outsb
push
mov
dec
loopne
orl
inc
xchg
push
testb
push
loopne
add
push
push
sti
int3
lret
pushf
mov
mov
js
push
pop
mov
inc
mov
adcb
lahf
add
mov
or
repnz
ss
adc
test
ret
inc
xchg
pop
fsts
inc
add
popf
and
cmp
adc
shrb
dec
hlt
pop
int
xchg
pusha
xchg
inc
mulb
pop
add
stos
xchg
leave
add
and
push
in
jp
xor
rcrl
lret
fiaddl
or
mov
loopne
fdivrl
outsb
out
aam
pop
add
icebp
adc
shrl
fstpl
lock
push
cmp
ja
pop
out
add
addb
aas
dec
daa
add
sti
add
inc
jl
js
inc
sbb
add
or
mov
pop
add
jne
xchg
adc
mov
or
in
mov
stos
pop
lods
add
enter
sub
cmp
jg
add
pushl
pop
outsl
add
outsb
not
inc
cmp
xor
mov
in
addb
or
rorl
lret
fs
sbb
out
repnz
sbb
imul
jecxz
rorl
add
pop
sub
scas
mov
and
jle
loopne
jns
movb
adc
sbb
jmp
and
mov
int3
lods
fs
ret
arpl
adc
repz
cmp
orb
faddl
inc
les
adc
mov
roll
mov
add
fwait
aaa
insl
nopl
cli
jmp
inc
xorb
xor
out
and
sarb
test
cmp
or
fmull
pop
inc
imul
pop
call
ljmp
shlb
addr16
fsubs
js
pop
daa
mov
xchg
std
repnz
add
aam
and
jmp
inc
scas
int3
push
lea
xlat
push
jne
repnz
or
test
sbb
imul
sub
jae
add
dec
add
mov
out
adc
pusha
cmp
add
mov
pusha
fadds
sub
fmuls
add
mov
les
pushf
mov
mov
sub
mov
inc
loope,pt
fadds
push
nop
adc
test
jno
push
inc
cmp
mov
es
pop
lock
ret
cmp
adc
mov
sbbb
mov
dec
stos
addr16
test
or
mov
lods
add
dec
cmpsb
fnsave
inc
pusha
add
xchg
add
sub
cld
and
xlat
in
dec
jg
add
outsl
mov
andb
adc
lcall
add
pop
pop
out
pop
cmp
int3
shl
dec
cwtl
pop
cmp
push
test
add
bound
add
mov
lret
popl
js
push
cltd
out
pusha
push
ret
call
in
xchg
add
fwait
pop
call
shrl
jno,pt
xor
sbbl
mov
sbb
inc
add
cltd
jns
xchg
aad
cli
add
mov
pop
add
notb
mov
cmpsl
subb
scas
push
repz
roll
add
dec
add
cltd
outsb
rorb
loop
add
or
fcmovnu
xor
lods
inc
add
xor
int
xchg
jecxz
mov
test
mov
and
shlb
mov
clc
outsl
add
dec
aam
inc
or
into
rolb
rcr
insb
sub
inc
sbb
stos
movhps
mov
ret
insb
into
mov
addr16
pusha
xor
add
ja
push
and
mov
incl
xor
jns
fdecstp
add
popl
aaa
popf
cmpsb
das
out
mov
mov
cmp
push
dec
jnp
loopne
push
add
push
add
je
xor
and
add
nop
xchg
push
cltd
ja,pt
leave
or
sbb
add
mov
nop
mov
sbb
cltd
das
popf
sub
notb
sahf
data16
mov
and
add
cmp
adc
pop
icebp
cli
adc
aam
adcl
sub
adc
jg
orb
add
int3
pop
and
cwtl
cmp
shrl
stc
add
out
in
lcall
push
sarb
jbe
aam
pop
stos
or
les
and
gs
add
xchg
mov
push
iret
loop
inc
and
popf
jmp
pop
mov
adc
mov
cmp
sbb
es
fidivrl
xchg
cmp
xor
add
xor
jge
in
cmp
and
dec
xor
ret
mov
ljmp
pop
testl
shlb
mov
mov
test
xchg
sbb
xchg
mov
mov
into
test
in
es
sahf
xor
or
and
dec
sbb
cmp
clc
inc
adc
add
cmp
mov
rcrb
popa
or
pop
add
inc
xchg
sbb
pop
jecxz
mov
jne
mov
mov
add
push
data16
dec
jmp
push
jns
cwtl
sbb
ds
adc
add
aad
loopne
sub
call
mov
test
fsubl
mov
adc
pop
mov
sbb
push
clc
or
cmc
sahf
pushf
ret
cltd
mov
or
cld
xchg
pushf
add
mov
sbbl
insl
or
lods
sub
add
jnp
mov
sbb
ja
push
pop
sub
repnz
push
dec
jg
arpl
and
pop
fdiv
add
sbb
cmp
push
push
xchg
notb
xchg
or
xor
cmp
add
push
loop
inc
mov
xchg
nop
add
push
aam
add
cmpl
xchg
add
or
out
sti
jno
cmpsb
in
pop
cmp
insb
addl
add
sub
dec
pop
sub
jnp
fwait
and
cmpsb
sbb
sub
push
or
nop
sbb
xorb
push
mov
cmp
pmaddubsw
jmp
sahf
cmp
sub
jnp
popf
add
ds
add
ja
mulb
mov
add
jae
jg
sahf
mov
and
sbbb
aad
shr
rorb
les
add
mov
dec
xchg
pushf
push
push
and
mov
add
loop
or
or
add
scas
mov
mov
out
cvttps2pi
rolb
lock
xor
lods
fdivrl
aas
sbb
push
mov
mov
cmp
add
xor
mov
faddl
sbb
cmpsb
rclb
xchg
lahf
push
push
mov
movsb
les
push
sub
test
jle
xor
dec
andb
jecxz
out
push
add
clc
int
pop
add
xchg
pop
sub
inc
inc
sub
test
add
stos
mov
pop
inc
inc
and
sub
fs
dec
rol
or
xor
addl
pop
addr16
add
dec
add
mov
shl
dec
push
xchg
jae
add
mov
and
cmpsl
and
jge
xor
adc
inc
jb
rclb
lcall
inc
mov
clc
lret
adc
ljmp
and
add
shr
cmp
pushf
push
enter
sub
out
and
push
daa
xchg
pop
loope
cmpsb
push
cwtl
add
push
xchg
mov
cltd
or
and
sbb
xchg
push
and
add
fistps
sbb
enter
cld
movsb
not
ja
add
sbb
xchg
addl
test
divb
shll
add
adc
mov
pusha
dec
add
adc
xchg
lcall
insb
je
or
clc
dec
icebp
xor
out
js
nop
xchg
clc
add
mov
pop
shll
out
in
cmc
mov
inc
jns
dec
popa
mov
jno
adc
jo
sbb
dec
fidivl
js
and
insb
stos
int3
test
jl
enter
stc
pusha
rclb
jno
cld
adc
add
push
sbb
sub
and
inc
jno
and
lods
adc
cs
stc
mov
pusha
inc
cltd
sbb
push
inc
sub
pop
ljmp
mov
push
cmp
rclb
dec
mov
cmp
das
repnz
jo
sahf
xchg
inc
faddl
test
push
movsl
and
lahf
inc
cmp
rolb
sbb
pop
sbb
jmp
imul
jo
mov
daa
add
rcr
lods
decl
leave
push
ja
adc
dec
lods
inc
adc
sarl
in
xrelease
mov
in
rclb
jge
add
jle
andb
or
cmpl
nop
dec
pop
cs
add
and
jmp
pop
call
sub
and
mov
cmp
xor
das
in
test
add
out
ss
and
js
push
adc
and
or
lret
dec
and
dec
mov
cmpsb
movb
mov
cmp
xchg
ret
inc
inc
or
stos
xchg
mov
mov
cmp
les
addr16
cmp
add
jecxz
xor
sub
or
icebp
add
xchg
mov
and
pop
dec
xor
push
fidivrs
add
addr16
push
mov
xchg
sub
add
nop
and
jg
mov
sbb
fmuls
add
or
push
hlt
pop
bound
add
orb
inc
adc
mov
xchg
loope
or
movsl
cli
inc
js
add
dec
sub
xor
adc
add
pop
in
dec
add
xor
ja
nopl
mov
rol
cld
fcomp
clc
dec
or
sarb
mov
add
adc
pop
sub
imul
cmp
hlt
stos
push
xchg
xor
mov
sbb
inc
jno
add
xchg
sbb
mov
push
mov
in
xchg
mov
push
pusha
mov
stc
add
cs
add
cmp
add
ds
pusha
dec
repnz
in
std
jae
or
push
push
cmp
dec
pushl
add
fistpll
xchg
lods
cmpsb
dec
add
ljmp
outsb
addb
jg
add
inc
jl
es
inc
cmp
fidivs
repz
out
xorl
insb
les
rolb
iret
cmpsl
aas
cltd
nop
mov
add
push
popf
stc
push
idivl
pop
jb
push
add
incb
dec
and
pop
dec
test
xchg
fsin
fiadds
enter
fnsave
sub
add
je
xchg
mov
sub
pop
out
fnsave
nop
pop
es
in
popa
loope
inc
cld
int3
cmp
decb
fidivrl
xor
popa
add
rcll
pop
add
cmp
lods
dec
jp
push
xor
roll
add
pop
jbe
outsb
stc
and
and
bound
rcrb
add
sti
jne
aas
push
jl
sub
test
insl
dec
inc
dec
push
jecxz
addr16
jmp
clc
mov
mov
rclb
movsb
add
jb
sbb
scas
hlt
xor
aam
pusha
fistl
dec
sahf
adc
jns
pop
aam
xor
insb
ljmp
fildll
imul
jge
jae
sub
xor
add
add
and
inc
test
sbb
dec
stc
adc
adc
or
stos
dec
movsb
adc
sbb
daa
sub
inc
add
stc
mov
fsubl
push
sbb
mov
rolb
add
data16
pop
xor
cmpsb
jle
cmp
mov
test
scas
daa
call
iret
dec
hlt
sarb
arpl
minps
sub
mov
jno
out
out
in
push
andl
push
mov
out
iret
shlb
insl
and
test
inc
nop
sub
pop
shrb
inc
les
xor
add
add
inc
leave
mov
or
lret
imul
add
and
add
inc
cltd
xlat
lea
mov
dec
sub
push
hlt
mov
xchg
fiadds
pop
and
sbb
inc
lret
push
xor
sbb
popa
or
or
jb
mov
jo
shl
jecxz
push
and
cmpsb
nop
mov
and
pusha
add
mov
daa
scas
adc
jge
mov
insl
ds
mov
fs
rol
int3
icebp
andb
sar
lods
xchg
aam
sbb
lods
jno
rcrb
cmp
or
iret
jge
push
cs
in
jecxz
stos
lods
in
fldt
clc
push
setge
pop
ss
mov
in
jecxz
cwtl
inc
pop
call
cmp
push
mov
xor
movsb
enter
lcall
das
ja
add
pop
aaa
cmpsb
sub
shlb
imul
jp
test
enter
rcr
mov
adc
rorb
ret
out
jp
imul
push
push
fimull
mov
or
es
lds
mov
orl
sub
mov
nop
aam
out
push
cs
jnp
out
into
mov
cmp
and
xlat
cltd
xor
pop
loop
add
adc
fimull
dec
fadd
into
mov
jl
add
fistps
sbb
cs
mov
push
into
cmp
push
ja
movsl
cwtl
or
call
and
add
outsl
cwtl
pop
jecxz
sti
and
ret
pushf
subb
orl
dec
mov
pop
add
rcll
sahf
mov
je
loopne
packsswb
cli
ja
fidivl
fisubrs
cmp
pop
or
push
mov
push
jbe
cmp
jge
xor
pusha
xchg
or
sbb
sub
ljmp
pusha
pop
or
sahf
or
mov
cmp
aaa
add
jns
pop
sub
sub
push
mov
shrb
sub
dec
or
inc
or
inc
js
add
ficoml
in
xor
xor
bound
lods
fbld
or
addl
daa
cmp
pop
xchg
push
pop
mov
movsl
ret
pop
jge
sbb
popf
in
pop
adc
fsubrl
sbb
sti
or
and
xchg
xchg
mov
shlb
cltd
fdivrl
add
push
outsl
mull
add
cmp
push
sbb
clc
mov
push
imul
rclb
mov
sarl
out
lods
test
xor
push
mov
pop
test
daa
adc
test
lcall
xchg
shll
fistps
push
enter
pop
or
loope
pop
or
outsl
lds
adcl
std
jo
push
sar
xchg
mov
lods
rorb
mov
out
cmp
sbb
out
or
pop
cwtl
mov
add
stos
adc
sub
ljmp
notl
scas
int
iret
pop
sbb
sbb
or
sbb
stos
lret
cli
and
and
cmp
daa
push
fwait
movsl
sub
pusha
das
imul
out
dec
int
inc
inc
bound
popa
pop
jo
ret
pavgb
aad
nop
jmp
mov
rolb
jne
push
push
mov
dec
cltd
pusha
add
fidivrs
sbb
pop
sub
int
rolb
scas
sub
or
movsl
pop
dec
sarb
sarb
imul
pusha
test
repnz
xor
mov
out
inc
pop
nop
jb
sti
cltd
jl
add
daa
les
pushf
ds
add
or
test
movsb
push
mov
shrb
add
cmp
cmpsl
adc
push
rcr
adc
inc
popa
and
pop
pusha
add
pop
and
and
scas
cmp
mov
arpl
cltd
cmp
push
or
movsl
jp
sbb
xlat
fcmovnu
inc
sub
test
les
jmp
gs
push
pusha
divb
iret
pop
add
icebp
lock
mov
add
mov
push
push
mov
subl
gs
sub
dec
into
adc
inc
push
insl
or
push
es
andb
nop
int3
inc
test
sub
in
mov
xchg
shr
shrb
push
xor
sbb
sub
push
add
or
or
push
mov
icebp
push
sarb
xchg
and
add
sahf
cmp
add
push
mov
in
add
shlb
mov
cwtl
and
clc
cmp
jp
mov
and
into
pusha
js
scas
pop
inc
jp
enter
lcall
inc
cmp
add
and
shlb
jb
xchg
fs
sti
cmp
or
notl
adc
dec
pop
sbb
fidivl
out
loope
inc
sti
daa
mov
sbb
jns
lock
ja
xchg
inc
or
mov
adc
jbe
jmp
data16
add
add
mov
add
arpl
cmp
idiv
push
jle
mov
jl
add
loopne
mov
cmc
inc
bound
mov
lods
jg
jl
out
sbb
pusha
and
push
nop
push
test
cltd
fmuls
push
or
shrl
daa
adc
dec
fidivrl
add
adc
sbb
fs
lods
cltd
cmp
jl
outsl
push
fidivl
or
or
sbb
add
in
addl
mov
sub
loope
adc
leave
les
in
inc
pop
aaa
mov
push
and
cmp
insl
rorb
mov
adc
pop
adc
push
add
jbe
add
stos
mov
xchg
movsl
dec
in
add
sti
and
lahf
mov
pop
and
add
orb
jp
xor
push
jbe
push
cld
cmp
outsl
add
daa
nop
in
or
fdivrs
sbb
stc
and
inc
mov
les
notb
shlb
es
clc
aad
popl
jns
inc
popf
incb
sub
outsl
push
jne
add
inc
push
or
pop
cltd
push
inc
orl
xchg
ds
mov
xor
test
nop
popl
pusha
sub
pop
jl
jmp
xchg
sarb
adc
xor
scas
mov
jo
ret
add
das
xchg
dec
sbbb
jmp
and
daa
cmp
insb
xor
cmpsl
in
dec
cmp
add
stc
ss
leave
add
pop
test
sbb
add
push
push
in
sbb
jmp
nop
test
in
add
mov
rolb
dec
mov
mov
repnz
xchg
movsb
rorl
das
sub
add
mov
aad
and
dec
or
cmp
insb
fstl
add
lret
cmp
add
sarl
leave
mov
cmp
xchg
push
jecxz
add
insl
cmp
push
clc
adcb
mov
test
pop
cmc
dec
and
ss
scas
call
add
jo
xchg
js
xchg
sarb
subb
mov
add
lock
sbb
pop
add
rclb
mov
and
data16
into
pusha
in
or
pop
test
test
cs
faddl
cmp
movlps
cmpsb
je
orb
jo
sub
mov
cmp
or
cmp
add
xor
xchg
in
hlt
gs
cmpsl
idivb
mov
add
std
xchg
add
daa
mov
pop
cltd
add
sbb
jae
add
cltd
stos
add
or
sbb
pop
es
aas
mov
add
sub
mov
in
or
inc
rolb
add
into
push
jno
push
and
icebp
push
movsl
lods
or
ficoml
adc
andl
xchg
push
addl
push
in
push
adc
inc
bound
xchg
inc
clc
cwtl
enter
xchg
rorb
xor
jb
les
call
push
lods
and
sub
lcall
fsub
sbb
or
mov
aam
dec
ds
fadds
and
jle
dec
push
mov
in
dec
clc
add
leave
imul
das
jne
inc
add
lds
ljmp
pop
ret
sub
inc
jns
lret
push
or
shll
mov
sub
xor
mov
repnz
imul
icebp
dec
ja
mov
mov
mov
into
cwtl
cmp
mov
fmuls
insb
js
rorb
dec
mov
jb
sub
in
icebp
jbe
fsts
psrlw
rol
push
add
xchg
xchg
insl
daa
jno
mov
add
dec
inc
pop
cltd
hlt
sub
add
mov
dec
jno
sub
daa
cltd
dec
nop
lods
mov
or
divl
sbbb
dec
xchg
sbb
dec
cli
shl
add
str
mov
inc
and
cmc
push
add
mov
fisttpll
pop
or
fadd
inc
xor
js
sbb
push
jecxz
and
orb
push
into
incb
cmp
xchg
push
mov
sub
mov
dec
add
push
sub
add
mov
mov
loope
xchg
pop
adc
cmpsl
cmp
sub
subb
jne
add
sub
add
xchg
ljmp
pusha
dec
add
inc
arpl
lahf
pop
aam
shrb
jns
test
pop
mov
data16
mov
lock
xor
movl
pushl
push
add
shl
fwait
xchg
push
mov
add
movsb
mov
insb
add
negl
add
push
insl
push
mov
and
jo
adc
dec
sbb
inc
sub
fstps
mov
sti
call
add
cmp
pop
inc
mov
jae
movsb
xchg
add
hlt
lods
roll
pop
jle
insl
ss
mov
push
es
fwait
mov
pop
xor
inc
add
mov
jae
inc
xchg
add
nop
lahf
jp
or
sahf
fs
int3
xchg
rcll
and
fcomp
add
lret
hlt
xchg
mov
fwait
add
xchg
push
pop
stc
sarb
das
in
jge
mov
movsb
fcomps
gs
mov
and
nop
xor
vphaddbd
add
xchg
icebp
arpl
xchg
movsl
xor
adc
adcl
cmp
les
jbe
or
data16
add
sub
add
rolb
ror
xchg
xlat
push
enter
pop
inc
rcll
out
or
lock
bound
pop
outsb
sbb
dec
mov
push
mov
add
add
add
and
mov
icebp
in
pop
xchg
xchg
cmp
mov
lret
and
cmp
or
jg
fiaddl
daa
fmull
stos
lock
clc
pusha
shll
lret
adc
lea
mov
mov
pop
testl
cltd
add
bound
call
and
push
rorl
lods
inc
sahf
xor
aas
inc
xchg
add
and
test
add
dec
aad
into
sti
xor
fistl
sub
mov
mov
fildll
xchg
popf
or
adc
add
jge
xor
stc
add
pop
insl
push
cli
and
mov
jp
xor
test
fsub
popa
mov
hlt
mov
adcb
jne,pt
cmp
jo
mov
or
add
aaa
ja
cmp
hlt
loop
add
arpl
cmpsb
mov
in
rcrb
cmc
int
sub
cmpsb
inc
sarb
daa
add
scas
leave
clc
loopne
ja
jmp
ret
push
pop
mov
push
sahf
sub
add
sub
add
fwait
sbb
adc
pop
repnz
jnp
movb
cmpsb
lahf
fs
ror
add
scas
sbb
pushf
and
pop
mov
sub
inc
insb
adc
sbb
dec
stc
inc
or
aad
iret
sti
andb
call
add
movl
push
or
in
xrelease
nop
pop
cld
stos
add
mov
movsb
into
jb
rolb
repz
xor
push
shr
jge
or
cmp
jge
xchg
mov
scas
xchg
mov
jo
jo
movsl
mov
sbb
and
rorb
add
jmp
mov
fsubl
push
adc
add
and
mov
popa
pop
add
arpl
cmp
sub
push
jle
and
std
or
fmull
adc
cmc
push
pop
mov
stos
int
add
jae
mov
dec
jb
add
les
jl
add
jns
and
loopne
in
add
aaa
cmpsl
rclb
adc
sbb
ret
dec
add
fs
dec
push
fsts
lods
insb
imul
add
or
movl
adc
pop
pop
les
cli
inc
add
fnsave
mov
pop
sub
js
inc
arpl
mov
sub
jne
adcb
xchg
stc
jbe
add
in
and
movb
cmp
lea
add
stos
popa
inc
add
es
xchg
dec
pusha
jge
adc
add
pop
ret
roll
mov
push
xchg
xor
add
sub
stc
mov
push
call
adc
getsec
repnz
mov
movsw
add
mov
gs
pop
adc
fiadds
repnz
and
add
adc
xchg
sbb
enter
jmp
add
into
in
pop
and
xor
adc
cli
addr16
add
stc
xor
add
lea
dec
xlat
roll
scas
cmp
inc
mov
imul
sbb
pop
push
push
xchg
cmp
ja
andl
out
add
cld
pushl
jbe
roll
xor
mov
es
subb
sub
inc
or
sahf
fidivs
nop
icebp
roll
fstpt
push
lret
jb
add
insl
cmp
push
add
inc
fmull
add
ds
mov
clc
dec
mov
and
bound
mov
push
jae
xchg
pop
xchg
scas
pusha
decb
pop
inc
mov
xchg
mov
xor
and
repnz
in
dec
cmc
add
movsl
add
ss
fidivs
inc
inc
lret
add
or
add
int3
add
xor
not
mov
pop
inc
repz
dec
sub
out
lock
push
or
pop
add
mov
aam
sbb
sub
add
jns
push
add
std
clc
arpl
sbb
push
and
jge
mov
xchg
xchg
xor
or
call
shlb
add
das
ret
int3
sub
adc
jmp
sub
inc
dec
invlpg
sub
push
mov
data16
pusha
mov
lahf
mov
sbb
fdiv
push
subb
and
add
lret
pop
cmp
lahf
test
inc
lock
inc
hlt
mov
push
imul
add
inc
xadd
cmp
roll
sub
and
mul
out
sub
push
in
xor
dec
in
push
mov
in
or
adc
movsb
inc
add
imul
shll
lea
push
jae
and
fwait
mov
inc
pop
push
mov
inc
je
xor
insb
add
arpl
out
pop
and
das
cld
add
pusha
and
dec
add
or
nop
adc
daa
add
cmp
pusha
add
xacquire
push
or
lea
faddl
adc
dec
mov
add
cmp
xor
push
call
mov
xchg
mov
in
filds
lods
mov
and
js
decb
movsb
mov
inc
lock
xchg
xchg
and
mov
pop
insl
enter
push
loope
js
scas
xor
mov
rcr
add
inc
push
bound
add
sbb
aam
outsb
xor
js
pop
xor
mov
sbb
in
add
jns
add
or
js
pop
mov
test
popl
aad
sbb
jb
fs
div
fidivrl
stc
inc
dec
add
mov
cmp
add
dec
add
lea
mov
test
xchg
vcvtpd2udq
out
ljmp
add
sarb
sbb
mov
rcrl
push
mov
mov
es
clc
sbb
xlat
pop
andl
xchg
cld
subl
sub
fiaddl
and
cmp
je
orl
cmc
ret
loopne
jmp
mov
mov
je
dec
pop
xchg
sub
dec
add
arpl
and
ret
sub
imul
inc
shl
xchg
xchg
add
popa
rol
dec
mov
rorb
cmp
inc
adc
je
add
out
sub
add
movsb
add
jle
adc
dec
int3
dec
add
insl
enter
int
ret
mov
add
adc
pop
icebp
pop
test
loop
push
add
ja
xchg
xor
mov
pop
add
and
adc
sub
and
adcb
fadds
je
gs
nop
jns
ss
push
lock
sbb
adc
sub
mov
xchg
dec
adc
pop
push
and
or
push
jp
add
stc
mov
and
sti
inc
rcll
sahf
inc
mov
int
cwtl
xchg
lea
scas
add
inc
mov
les
add
shll
or
jns
pusha
push
add
push
cvtps2pi
in
mov
xor
insb
mov
adc
add
push
shrb
add
cs
push
outsl
cmp
add
mov
aas
push
xchg
add
incl
xchg
ret
and
movsb
insb
adc
jp
leave
mov
mov
int
sbb
or
jo
stc
cmp
popa
jp
cmpsb
dec
adc
cs
jge
clc
sbbb
ja
jnp
mov
sarb
subb
pop
call
sub
out
call
daa
or
add
push
pop
push
rol
mov
add
mov
dec
ss
in
cmp
cmp
add
sahf
mov
add
xchg
test
add
xor
movsb
stos
andnps
jp
sarb
push
jp
add
cmp
fisttps
sbb
pushf
mov
fcmovbe
lock
repnz
adc
ss
out
cmp
mov
add
int3
push
fnstenv
inc
push
gs
rcrl
xor
test
xor
pushf
push
insl
fnstcw
adc
lock
lcall
add
data16
pop
mulb
fs
incb
push
mov
arpl
lods
adc
sub
enter
pop
ss
sub
mov
jmp
insl
or
sub
or
mov
xor
enter
jl
xchg
popa
cltd
or
inc
add
arpl
in
or
repz
cmp
fdivl
cs
fiadds
push
icebp
test
mov
add
and
loop
lcall
lea
fwait
mov
sbb
in
sbb
mov
jnp
cld
xchg
or
lods
or
lea
xchg
xlat
imul
adcb
sub
xor
push
orb
imul
fst
pop
add
add
add
mov
jno
pop
in
push
or
push
jbe
adc
sarb
clc
mov
mov
add
or
add
mov
inc
lock
cld
or
in
stos
stos
jb
mov
add
pop
xchg
inc
mov
lods
jmp
add
mov
int3
arpl
dec
into
hlt
jo
lods
shl
or
pop
fldcw
in
push
mov
call
jl
cmp
dec
sub
iret
int3
popa
fimuls
in
inc
sbb
cmp
je
or
dec
jnp
add
jo
repnz
fstpt
hlt
cwtl
jl
adc
inc
stos
rep
test
sti
rolb
idiv
insl
add
jmp
adc
mov
inc
aam
addb
adc
in
or
dec
xchg
fstpt
sbb
mov
lods
lcall
dec
adc
add
mov
xchg
add
cmp
and
xor
add
xor
movsb
ret
push
xlat
pusha
adcl
sub
aas
push
fsubs
xchg
aam
pusha
add
or
or
adcb
sbb
inc
out
jl
add
mov
in
mov
pusha
in
out
mov
test
sub
push
or
push
daa
push
loopne
int3
dec
daa
ret
xor
jl
xor
xorl
adc
test
rorl
add
push
jo
mov
mov
add
xor
scas
data16
cltd
and
add
xor
call
pop
shrl
inc
cs
dec
add
in
ss
test
cwtl
xor
push
jo
sub
mov
add
push
sub
xor
inc
ret
ficoms
or
adc
les
pop
xor
dec
add
clc
dec
loope
lock
add
dec
stos
outsb
xchg
inc
jp
dec
mov
gs
incl
popa
lret
shrl
test
in
pusha
js
push
dec
inc
outsb
nop
lock
pop
add
xor
add
xchg
inc
add
push
clc
jo
pop
test
mov
int3
ja
push
pop
add
fsubrl
pop
add
dec
shlb
pop
jge
lds
jno
dec
jno
or
push
aam
add
loop
mov
xor
dec
lahf
ljmp
jl,pt
sbb
les
in
test
nop
in
mov
pop
fdivl
push
incl
stos
or
in
test
xorb
cltd
fucomip
setnp
ja
add
add
pusha
lret
sub
push
cmp
stos
xchg
add
adc
icebp
mov
lahf
sbb
mov
idivl
add
adcb
pop
incb
mov
std
jo
add
and
and
insl
adc
push
jmp
pop
cmpl
movb
mov
cmp
add
cmpsl
push
outsl
mov
popa
lahf
cltd
mov
xchg
adc
aaa
add
mov
lods
cmc
xor
add
fs
xor
and
and
add
pop
and
add
cwtl
adc
in
imul
xor
jae
mov
sbb
xor
mov
rclb
lcall
mov
pop
scas
sub
fsts
add
fdiv
cs
repnz
pop
mov
sub
int
inc
repnz
jbe
add
cld
in
push
mov
inc
rolb
fnsave
pop
sbb
mov
fs
ljmp
mov
push
pop
adc
mov
xchg
dec
leave
mov
lock
pushf
sbb
mov
aam
ss
mov
enter
xor
sub
add
xchg
cld
incb
adc
add
jne
imul
dec
pop
mov
sbb
fxch
dec
push
lods
jge
mov
jle
sbb
dec
imul
cmp
xor
imul
add
test
fimuls
inc
jo
jnp
push
add
mov
loop
in
mov
lea
cmp
add
cmp
jae
and
aas
pushf
mov
je
pop
jecxz
push
dec
add
in
popl
pop
cmp
push
mov
and
jp
mov
pop
mov
and
add
daa
loopne
and
or
rcrl
push
dec
xchg
xchg
add
jnp
xchg
int
mov
out
jle
xor
push
inc
mov
maxss
insb
xor
insb
cltd
xchg
cmp
std
mov
jo
out
fcoms
jo
sub
ficoms
mov
inc
cmp
and
test
outsl
sub
mov
and
mov
xchg
fbstp
mov
in
add
push
push
mov
fucomi
inc
push
lods
pop
fsubrl
add
dec
lcall
inc
mov
rorb
cmp
push
pop
addl
aas
add
dec
cmpb
out
pop
mov
bound
cltd
xchg
pop
sbbb
adc
mov
xor
jl
sbb
orl
adc
loope
push
negw
cmp
sarb
ja
dec
test
add
push
add
out
vmread
add
int3
jmp
xor
insb
cmp
shrl
fsubrl
sahf
cmp
sub
add
inc
sti
sub
xor
or
adc
fsubrl
mov
fcomps
jb
insb
xchg
enter
add
leave
xor
add
loop
jo
aad
icebp
sub
add
sbb
ret
lret
cwtl
dec
es
les
cmp
add
mov
pmaddwd
int
pop
add
loopne
jp
add
scas
shr
pop
push
and
gs
or
in
add
es
push
xchg
cli
subb
xlat
dec
iret
jb
mov
xchg
stc
or
add
or
imul
insb
jns
mov
out
mov
jge
add
mov
push
inc
jae
ljmp
dec
dec
push
xor
into
cs
cmp
add
imul
mov
add
movb
pop
pop
jmp
insl
add
add
sbb
call
cmp
mull
dec
add
and
in
loopne
stc
imul
in
pusha
test
mov
dec
mov
or
repz
jmp
andl
rcl
dec
mov
test
or
jb
pop
sub
inc
dec
test
pop
pop
in
nop
xor
push
add
in
hlt
int
pop
scas
xchg
mov
pop
repz
filds
push
and
adc
pusha
ja
sahf
pusha
mov
push
jmp
xchg
lea
dec
mov
xor
xchg
sub
in
or
ficomps
sbb
out
jp
pop
in
jle
insl
jmp
sub
xor
mov
lock
mov
call
pop
sbb
add
cmp
cld
cld
sub
faddl
test
aam
in
pop
add
xlat
in
cli
scas
add
cwtl
mov
add
hlt
jb
icebp
andl
push
andb
sub
pop
sbb
into
and
outsb
testb
cmp
call
test
mov
jne
sbb
fisttpll
or
mov
and
mov
insl
mov
xchg
out
jno
lret
mov
outsb
clc
aas
inc
add
jne
or
rcll
dec
add
add
pop
popf
aad
sub
xor
mov
jne
popf
popw
mov
fcompl
push
int3
into
and
jb
add
push
iret
xchg
xchg
rolb
pop
add
lahf
mov
push
test
lock
les
ss
fnstcw
outsb
mov
add
pop
and
cmp
and
dec
sbb
cmp
pop
xorb
lock
jg
lret
pop
imull
push
adc
add
xor
push
pop
sbb
add
je
fiadds
mov
inc
xchg
std
mov
push
mov
add
mov
pusha
push
dec
jg
or
cmp
dec
pop
je
cs
xor
inc
xchg
mov
adc
and
or
cmp
icebp
add
dec
mov
popa
adc
inc
daa
adc
icebp
int
cld
add
jmp
in
pushf
adc
mov
xchg
call
adc
ss
adc
sbbb
dec
push
push
sub
xor
add
movsb
test
push
add
mov
inc
xchg
add
xor
dec
in
lret
sub
mov
rcrl
add
inc
and
iret
push
push
insl
ss
mov
arpl
pop
push
mov
divb
sti
lcall
daa
test
xor
xchg
push
outsb
or
adc
fisttpl
inc
fs
add
jg
testl
test
xchg
sar
adc
cmp
ja
idivb
popa
call
subb
mov
enter
fbld
inc
or
pop
icebp
ds
add
mov
mov
mov
add
mov
lahf
jge
arpl
mov
lea
insl
lds
dec
les
jns
mov
push
sar
aad
insb
xchg
cmp
sub
in
xor
dec
add
sbb
loop
fidivs
and
push
movsb
sarb
cmpsb
xor
imul
inc
push
add
int3
pop
cwtl
js
xchg
fdivs
mov
and
sbb
xchg
cld
testb
inc
add
mov
and
orb
add
lock
idivb
push
aas
mov
in
adc
adc
loop
add
push
sti
push
sbb
xchg
movsb
popa
pusha
fsubl
sub
push
mov
mov
leave
jp
mov
sub
cmp
loopne
and
xchg
mov
push
aaa
xor
outsl
repnz
jmp
pop
add
stc
xor
or
add
pop
lret
in
or
cltd
sub
xchg
mov
add
loope
shr
nop
das
int3
aam
cltd
outsl
push
sbb
adc
jle
cmp
sbb
mov
lret
jo
xchg
nop
mov
aas
les
add
jge
sbb
stc
loope
negb
test
nop
rolb
sbb
test
adc
sub
adc
sbb
js
jbe
icebp
lock
mov
jmp
xlat
enter
inc
dec
jae
sbb
fwait
movsl
jno
add
sbb
dec
lock
cmp
xor
insb
and
adc
aam
jnp
in
inc
test
mov
mov
xor
shlb
repz
rcrl
loopne
scas
and
push
push
add
fstpl
popa
rcrb
ss
push
pop
sbb
sbb
mov
shrl
and
test
stos
sub
jmp
xchg
cld
add
les
repz
pop
or
push
or
add
push
in
mov
imul
enter
jge
scas
aad
xor
mov
out
push
dec
ds
add
jb
mov
cmp
push
adc
add
cmp
add
orb
and
add
cmpsl
mov
stos
call
mov
xor
add
and
xchg
xor
inc
xchg
dec
mov
or
xor
jb
inc
add
dec
dec
push
mov
mov
cmp
dec
sbb
mov
sti
movsb
loop
push
dec
fadds
loopne
aaa
cmpsb
divb
and
add
inc
pushf
stos
aad
lock
mov
xlat
inc
add
inc
adc
jg
add
adc
adc
xlat
xchg
out
xor
mov
add
fidivrs
in
sbb
out
cld
mov
pop
cmp
lret
call
or
xchg
xor
jns
adc
cmc
call
test
pop
and
pushf
jge
push
add
push
mov
xor
mov
roll
add
and
out
add
dec
ja
stc
inc
mov
movsl
addl
test
adc
scas
dec
loope
push
arpl
idivb
imul
nop
pop
sub
add
pusha
mov
add
push
xchg
add
pextrw
mov
mov
jg
pop
and
add
sarb
add
out
sar
add
in
loopne
push
popl
or
cmp
adc
mov
mov
sub
imul
sbb
adc
mov
daa
or
jp
add
repnz
sbb
cwtl
cld
popa
mov
mov
jecxz
lcall
jbe
imul
repz
add
xchg
jns
add
add
push
adc
add
in
incl
dec
sub
push
aad
dec
push
enter
cmpb
out
mov
add
mov
stos
add
fistps
sub
jecxz
mov
or
and
pop
loop
sub
jns
pop
fbld
cwtl
hlt
mov
jbe
dec
and
xor
inc
xchg
cmp
add
mov
push
fsts
ja
mov
or
xchg
ljmp
fsubs
paddq
fdivrl
into
int3
clc
and
dec
add
inc
push
jl
js
mov
push
addl
icebp
sbb
enter
xchg
mov
push
add
jo
xchg
es
jne
adc
add
outsl
repz
xor
adc
mov
xor
jmp
notb
shl
and
pop
pop
js
xor
ss
movb
inc
inc
insb
mov
mov
or
jge
lret
add
sti
add
lock
or
fnsave
adc
cmp
and
or
inc
mov
ja
fldl
pop
xor
lods
mov
or
test
data16
dec
mov
sbb
add
ljmp
dec
std
and
xor
and
mov
scas
mov
add
jmp
rorl
lahf
sbb
cwtl
outsl
int
in
daa
sbb
cmp
fisttpl
xlat
repnz
bound
xor
call
notl
or
fcomip
mov
dec
add
mov
enter
cmp
lcall
inc
and
sbbb
inc
lock
pusha
ds
mov
xor
sbb
shl
adc
cmpsb
fs
push
les
in
push
aam
dec
xchg
loop
push
push
dec
sbb
cmp
shr
add
push
mov
sbbb
push
icebp
movsb
sub
inc
adc
and
mov
fcoms
fisttps
test
xor
sub
std
call
cld
inc
fistps
iret
adc
add
dec
xor
push
imul
imul
inc
add
mov
aaa
dec
mov
add
stos
xchg
fidivs
and
or
aas
fstps
xor
int
pop
xor
nop
or
or
rcrl
sub
sub
cmp
stos
xor
adc
jns
add
int3
mov
add
popf
pop
and
pop
or
add
pushf
sahf
in
mov
fs
mov
sub
cld
scas
jbe
or
inc
mov
inc
es
pop
aam
xor
cmpsb
test
nop
mov
cmp
jecxz
push
cmp
inc
xchg
mov
push
add
int
add
imul
imul
mov
es
pop
xor
push
lock
pop
addl
loop
jl
dec
mov
call
mov
mov
mov
fnstcw
in
add
mov
je
roll
inc
fstps
and
icebp
push
hlt
shlb
mov
jl
add
pop
push
xlat
dec
inc
int3
pop
pcmpeqd
adc
push
inc
pop
and
mov
mov
or
rcll
addr16
popa
jecxz
mov
sbb
mov
and
rcll
in
mov
xchg
sub
je
push
mov
outsb
and
ret
sbb
cwtl
pushf
and
fisttps
add
push
mov
sub
mov
push
cltd
out
repz
pusha
mov
or
dec
test
movsb
cli
cmp
inc
ds
mov
xchg
sbb
push
pop
add
push
push
out
dec
mov
cs
out
in
roll
int
imul
dec
je
dec
sbb
pop
xchg
inc
pop
neg
adc
shlb
xor
add
mov
or
ds
xor
pop
pop
push
xor
insl
or
cld
push
sub
jmp
mov
pextrw
gs
pop
insb
xchg
js
add
pushf
adc
enter
add
push
mov
leave
loop
xor
pop
and
arpl
icebp
orb
push
lods
cmp
adc
es
sbb
pop
or
mov
loopne
mov
imul
pop
ret
sub
cwtl
jne
fwait
add
mov
push
arpl
andl
imul
pop
je
mov
push
jp
sahf
sub
jns
add
sbb
js
inc
aam
imul
ret
test
call
push
mov
adc
lahf
push
cld
pushf
call
and
addr16
scas
xor
xchg
add
int
lret
push
mov
xchg
popf
fwait
adc
and
sbb
out
jnp
inc
mov
jp
pop
repz
sbb
sub
pop
lret
ret
push
inc
leave
inc
or
outsl
mov
rcl
jecxz
adcb
std
sbb
jbe
add
push
cmp
jno
fisubl
jl
ret
add
mov
sub
mov
jecxz
pop
jbe
xchg
sbb
jle
cmp
and
aam
mov
stc
or
std
roll
mov
push
aaa
out
and
add
add
mov
data16
rolb
call
addb
dec
in
dec
test
jecxz
addr16
imul
jnp
cmpb
pop
adc
dec
ja
adc
mov
daa
add
push
jg
xor
push
push
jns
jle
add
orb
jp
adc
pop
and
les
mov
mov
test
pop
fisttpll
inc
sub
add
scas
inc
dec
cmp
inc
push
sbb
aad
sahf
cmpsb
jno
pop
sub
repz
scas
xchg
mov
sbb
push
pop
pop
cmpsb
add
outsl
inc
lea
call
roll
pop
lret
or
adc
das
ja
lahf
imul
xchg
mov
inc
js
mov
jmp
andb
rolb
xchg
test
adc
mov
pop
pop
popa
fstpl
rorl
lret
and
push
popf
adc
jne
in
xor
cmp
pop
add
scas
fldl
daa
leave
test
mov
dec
pop
lret
pop
cmpsl
jns
subb
pop
clc
stc
mov
inc
pop
sub
pusha
stc
sbb
xchg
mov
loopne
push
or
lret
push
or
sbb
xchg
pop
cltd
sub
cmpsb
xor
addr16
inc
add
sbb
and
jb
les
add
pop
mov
scas
nop
shrb
addr16
cmp
push
stc
mov
cli
cmp
movsb
and
adc
pop
add
cmp
enter
pushf
imul
test
add
dec
dec
pop
add
popa
icebp
in
aam
dec
mov
sub
or
add
fistl
pop
dec
es
dec
xchg
addb
add
dec
push
dec
mov
lret
addb
out
je
pop
outsb
xchg
add
fsubp
or
aas
mov
in
pop
pusha
fiaddl
sbb
inc
push
add
sahf
jnp
fildl
xchg
jo
add
outsb
mov
mov
pop
mov
push
xor
mov
jge
jl
sub
inc
loopne
xchg
in
inc
sub
lahf
nop
or
outsl
mov
sahf
and
cmp
fbstp
xor
movb
aas
mov
cwtl
add
subl
mov
dec
in
subb
pop
outsl
sub
lret
lret
je
dec
dec
enter
push
out
add
mov
push
aas
push
mov
dec
cmp
pop
add
movsb
incl
mov
arpl
xchg
or
out
adc
stos
or
push
jo
add
std
xor
sub
mov
mov
or
adc
add
pushl
shll
or
push
mov
sbb
stos
add
repz
push
imul
mov
push
enter
rorb
and
or
repz
adcb
pop
add
aaa
test
xor
popa
fs
les
outsb
jecxz
loope
int
mov
outsl
dec
sbb
pop
imul
fiaddl
dec
lret
in
and
add
push
ja
jg
mov
add
nop
xor
pop
js
xchg
xchg
js
into
es
std
or
lret
sub
add
mov
popa
adc
mov
jmp
test
das
mov
les
sbb
sub
mov
mov
xchg
cmp
jo
push
gs
add
pop
test
adc
or
fcomps
add
jg
inc
cmp
loop
data16
aam
cmp
orb
shlb
loope
ret
xorl
lods
mov
mov
xlat
adc
sub
call
clc
jbe
es
xor
add
lods
xchg
cmp
add
push
fwait
pop
fcomi
xor
fmuls
sub
ljmp
shlb
cmc
or
dec
mov
fsubl
or
cmp
push
shld
mov
test
mov
movsb
enter
je
xor
mov
test
dec
leave
push
xchg
add
mov
mov
pusha
mov
inc
insl
test
push
jle
push
mov
jg
cmpsb
das
jo
sub
pop
xor
pop
xchg
adcb
push
dec
ror
jae
add
mov
fiaddl
aas
mov
lret
out
jmp
add
test
pusha
xchg
dec
xlat
ljmp
into
andb
push
adc
push
xchg
add
sub
gs
pop
repnz
inc
mov
fidivs
add
pop
push
pusha
sbb
push
fadds
jle
comiss
stos
sub
push
dec
sbb
leave
loopne
jecxz
mov
push
pop
xchg
dec
jp
pop
xlat
jbe
and
mov
stos
mov
pusha
dec
aam
enter
add
enter
and
add
push
cmp
test
stc
pushf
push
inc
mov
add
sbb
pop
outsl
dec
popa
clc
xor
in
divb
loop
loopne
fmuls
mov
insl
push
int3
add
mov
sub
and
ret
cwtl
jne
xor
daa
js
or
insl
lret
ds
fisttps
test
pushf
mov
add
es
jno
mov
pop
mov
lahf
sbb
cmpb
sbb
insl
push
neg
and
cmp
pop
jne
pop
jbe
pop
clc
std
or
test
outsb
adc
jecxz
push
or
pop
fs
mov
sbb
ss
aam
mov
and
xor
lret
sub
jmp
das
hlt
insb
addb
rorl
xor
sbb
scas
fstpt
mov
repz
add
mov
addb
insb
jl
in
add
pop
aaa
and
inc
add
hlt
out
rcrl
mov
and
mov
sub
or
and
imul
enter
push
inc
addb
repnz
out
or
jl
stos
adcl
aas
push
dec
subb
es
das
int3
add
add
add
push
dec
add
dec
