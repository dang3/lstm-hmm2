jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
add
mov
push
call
testb
je
movzwl
mov
add
pop
ret
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
add
mov
cmpl
jne
push
push
call
mov
cmpl
jne
xor
mov
jmp
mov
mov
mov
mov
mov
xor
mov
add
mov
lea
mov
mov
mov
mov
mov
mov
inc
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
add
pop
ret
mov
mov
ret
mov
push
push
add
mov
mov
call
mov
cmpl
jne
xor
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
pop
ret
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
mov
push
push
push
push
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
cmp
jne
mov
call
mov
mov
mov
mov
mov
add
jmp
add
cmp
jne
mov
call
mov
mov
add
mov
mov
cmp
jne
mov
mov
call
test
jne
xor
mov
pop
pop
pop
pop
pop
pop
ret
lea
push
push
push
push
add
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
add
mov
add
cmp
jb
cmp
jne
mov
mov
add
mov
mov
sub
mov
cmpl
jne
mov
call
jmp
mov
mov
add
mov
add
cmp
jne
mov
mov
sub
jmp
mov
add
mov
mov
mov
mov
add
sub
mov
sub
mov
mov
lea
mov
call
test
jne
xor
jmp
mov
jmp
mov
mov
mov
mov
cmp
jne
xor
add
pop
pop
pop
pop
ret
nop
push
push
push
mov
mov
cmp
jge
mov
jmp
add
and
mov
push
push
push
push
call
mov
mov
test
je
mov
mov
call
test
jne
push
push
mov
push
call
xor
mov
pop
pop
pop
ret
nop
push
push
push
push
mov
mov
mov
movl
push
push
push
push
call
mov
mov
test
jne
add
and
mov
push
push
push
push
call
mov
cmpl
je
mov
mov
call
test
jne
push
push
mov
push
call
xor
mov
pop
pop
pop
pop
ret
nop
push
push
push
push
add
mov
mov
movl
xor
mov
mov
add
mov
mov
mov
jmp
mov
mov
mov
mov
mov
cmp
jb
mov
mov
add
cmp
ja
cmp
jae
mov
mov
mov
mov
add
cmp
jbe
mov
push
push
mov
mov
push
call
test
jne
movl
mov
call
mov
mov
mov
cmp
jne
xor
mov
cmpl
je
mov
mov
mov
sub
mov
add
pop
pop
pop
pop
ret
mov
push
push
push
push
add
mov
mov
lea
lea
lea
mov
mov
and
mov
add
add
and
mov
mov
mov
mov
sub
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
mov
mov
cmp
jae
mov
mov
mov
cmp
jbe
mov
mov
mov
cmp
jae
push
push
mov
sub
push
mov
push
call
test
jne
xor
mov
jmp
mov
mov
mov
mov
cmp
jne
add
pop
pop
pop
pop
ret
nop
push
push
push
push
add
mov
lea
lea
lea
mov
mov
add
and
mov
add
and
mov
mov
mov
mov
sub
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
mov
mov
cmp
jae
mov
mov
mov
cmp
jbe
mov
mov
mov
cmp
jae
push
mov
sub
push
mov
push
call
test
jne
movl
mov
mov
mov
mov
cmp
jne
add
pop
pop
pop
pop
ret
mov
push
push
push
push
add
mov
mov
mov
mov
add
and
mov
mov
jmp
mov
cmp
jg
mov
mov
mov
mov
call
cmpl
je
mov
mov
add
mov
mov
sub
mov
cmpl
jne
mov
call
jmp
mov
mov
mov
cmp
jne
mov
mov
call
cmpl
je
lea
mov
mov
call
cmpl
jne
lea
mov
mov
call
xor
mov
add
pop
pop
pop
pop
ret
mov
push
push
push
push
add
mov
mov
mov
lea
mov
add
and
mov
mov
jmp
mov
mov
mov
cmp
je
mov
cmp
jne
mov
cmp
jne
mov
cmp
jle
mov
mov
sub
mov
mov
mov
add
lea
call
cmpl
je
lea
lea
mov
call
cmpl
jne
lea
mov
mov
call
mov
xor
mov
jmp
lea
mov
mov
call
cmpl
je
lea
lea
mov
call
cmpl
jne
lea
mov
mov
call
mov
xor
mov
jmp
mov
mov
cmp
jne
mov
cmp
jg
mov
mov
mov
call
mov
cmpl
je
mov
mov
mov
add
mov
mov
mov
sub
mov
cmpl
jne
mov
call
jmp
mov
xor
mov
add
pop
pop
pop
pop
ret
nop
push
add
mov
lea
and
mov
add
and
mov
mov
cmp
jbe
mov
mov
sub
mov
call
lea
mov
mov
call
mov
test
je
lea
mov
mov
call
mov
mov
mov
mov
cmpl
je
lea
mov
call
jmp
xor
mov
add
pop
ret
mov
push
mov
push
xor
push
push
pushl
mov
push
call
cmpb
je
push
call
mov
call
mov
call
mov
call
push
push
call
mov
cmpl
je
mov
mov
xor
mov
inc
cmp
jne
movl
mov
mov
mov
mov
mov
mov
mov
mov
movb
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
pop
ret
nop
push
mov
add
cmpb
je
xor
push
push
pushl
mov
cmpb
je
push
call
movb
mov
push
call
xor
mov
mov
mov
jmp
push
push
mov
mov
push
call
mov
mov
mov
mov
cmp
jne
mov
call
mov
call
mov
call
mov
mov
cmpl
je
mov
mov
mov
mov
push
call
mov
mov
cmpl
jne
xor
pop
pop
pop
mov
push
cmpb
je
push
call
push
call
ret
jmp
jmp
pop
pop
pop
ret
nop
push
add
cmp
jne
mov
mov
mov
mov
mov
cmp
jg
cmp
jne
test
jns
add
sar
mov
xor
mov
jmp
test
jns
add
sar
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
ret
lea
push
push
mov
mov
mov
jmp
mov
mov
cmp
jb
mov
add
cmp
jb
mov
mov
mov
mov
cmp
jne
movl
xor
mov
mov
pop
pop
ret
mov
push
push
mov
sub
lea
mov
cmp
jl
mov
movl
mov
call
pop
pop
ret
cmp
jl
mov
or
mov
mov
mov
pop
pop
ret
incl
mov
sub
mov
and
sub
add
call
ret
mov
cmp
jl
or
mov
add
call
ret
cmp
jl
mov
or
mov
add
andl
ret
push
push
push
mov
sub
mov
mov
and
cmp
je
movl
mov
and
sub
mov
xor
test
je
movl
testb
je
mov
sub
mov
sub
mov
mov
cmp
je
movl
mov
call
add
mov
pop
pop
pop
ret
push
push
push
mov
xor
mov
test
je
and
add
add
mov
test
jne
mov
mov
call
mov
mov
add
add
andl
mov
pop
pop
pop
ret
lea
push
push
push
push
add
mov
mov
xor
mov
call
mov
cmpl
je
mov
mov
mov
mov
add
mov
lea
sub
cmp
jg
mov
sub
mov
sub
cmp
jge
mov
mov
sub
add
mov
mov
call
jmp
mov
mov
sub
lea
call
mov
test
je
mov
sub
mov
call
mov
mov
mov
add
mov
add
cmp
jbe
lea
sub
call
mov
mov
call
mov
mov
add
pop
pop
pop
pop
ret
push
push
add
mov
mov
mov
mov
mov
mov
add
sub
mov
cmp
jg
mov
test
jns
add
sar
mov
mov
mov
cmpl
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
jl
mov
mov
call
test
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
pop
pop
ret
nop
cmpl
jle
cmpl
jge
movl
jmp
mov
or
mov
mov
mov
add
call
xor
mov
xor
mov
ret
mov
push
push
push
add
mov
lea
movsl
movsl
mov
call
lea
mov
mov
call
mov
test
jne
xor
jmp
mov
cmp
jae
call
sub
add
mov
add
mov
add
cmp
jae
call
add
mov
add
cmp
jne
sub
mov
call
subl
mov
mov
mov
mov
mov
add
pop
pop
pop
ret
lea
push
add
mov
mov
lea
call
cmpl
je
mov
call
test
jne
xor
jmp
mov
pop
pop
pop
ret
nop
push
push
add
mov
mov
mov
lea
mov
call
cmpl
je
mov
call
test
jne
xor
jmp
mov
pop
pop
pop
pop
ret
lea
push
mov
xor
mov
test
jns
add
sar
cmp
jg
mov
mov
mov
cmpl
jne
inc
cmp
jne
mov
pop
ret
lea
push
push
push
push
add
mov
lea
mov
mov
mov
mov
mov
cmp
jle
mov
mov
mov
mov
cmp
jle
mov
mov
mov
mov
mov
mov
cmp
jg
mov
mov
mov
cmp
je
mov
mov
jmp
cmp
jg
mov
call
mov
cmpl
jne
mov
call
test
jne
xor
mov
jmp
cmp
jg
sub
cmpl
jge
add
xor
mov
mov
mov
add
mov
or
mov
mov
mov
add
mov
incl
sub
add
jmp
mov
call
mov
mov
mov
sub
cmp
jl
mov
add
xchg
call
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
add
mov
mov
andl
mov
mov
mov
or
mov
mov
mov
add
mov
incl
sub
add
mov
add
pop
pop
pop
pop
ret
push
mov
add
push
mov
cmpb
jne
call
test
je
cmp
jle
xor
mov
jmp
xor
push
push
pushl
mov
cmpb
je
push
call
add
and
cmp
jge
mov
cmp
jg
mov
test
jns
add
sar
mov
mov
mov
cmpl
je
mov
add
mov
mov
andl
mov
mov
mov
mov
cmp
jne
mov
xor
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
mov
mov
add
mov
incl
sub
add
call
jmp
cmp
jg
sub
cmpl
jge
add
xor
mov
mov
mov
add
mov
or
mov
mov
mov
add
mov
incl
sub
add
call
jmp
mov
call
mov
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
mov
pop
ret
nop
push
mov
add
push
mov
xor
mov
cmpb
jne
call
test
jne
movl
movl
jmp
xor
push
push
pushl
mov
cmpb
je
push
call
mov
mov
sub
mov
mov
mov
test
jne
movl
jmp
decl
mov
and
sub
sub
test
je
mov
sub
mov
cmp
jl
test
je
movl
jmp
mov
sub
mov
mov
cmp
je
movl
jmp
add
mov
mov
mov
call
and
mov
add
mov
mov
cmp
jne
sub
add
cmpl
jle
call
xor
mov
call
jmp
mov
mov
test
je
and
cmp
jge
movl
jmp
mov
orl
jmp
mov
mov
mov
cmpl
je
mov
cmpl
je
mov
cmpl
jge
movl
jmp
mov
mov
add
mov
call
mov
mov
call
mov
mov
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
mov
pop
ret
mov
push
push
push
push
add
mov
add
and
cmp
jge
mov
sub
mov
mov
mov
and
mov
add
mov
cmp
jne
mov
jmp
cmp
jle
mov
sub
mov
cmp
jne
sub
add
cmpl
jge
add
sub
mov
jmp
mov
mov
testb
jne
mov
mov
mov
add
mov
call
cmp
jl
mov
add
mov
or
mov
mov
mov
add
call
jmp
mov
jmp
mov
sub
mov
cmp
jne
cmp
jg
sub
add
cmpl
jge
mov
add
add
xor
mov
mov
sub
add
mov
mov
and
or
mov
mov
mov
jmp
call
mov
add
mov
mov
testb
jne
mov
mov
mov
mov
cmp
jle
add
mov
sub
jmp
mov
call
sub
cmp
jl
mov
add
mov
call
jmp
add
mov
add
mov
mov
andl
jmp
mov
mov
test
je
and
add
mov
mov
mov
call
test
je
mov
add
mov
jmp
xor
jmp
mov
sub
add
mov
mov
and
or
mov
mov
mov
add
pop
pop
pop
pop
ret
nop
push
mov
add
push
push
mov
mov
cmpb
jne
call
test
jne
xor
mov
jmp
xor
push
push
pushl
mov
cmpb
je
push
call
mov
mov
call
test
je
mov
jmp
mov
call
mov
mov
sub
mov
and
sub
cmp
jge
mov
cmpl
je
mov
mov
xchg
call
mov
call
mov
mov
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
pop
pop
pop
pop
ret
lea
push
push
mov
test
jle
mov
call
mov
cmpl
jne
mov
call
jmp
xor
mov
mov
pop
pop
ret
lea
push
test
je
call
mov
test
je
mov
call
jmp
xor
mov
pop
ret
mov
test
je
test
je
push
mov
call
pop
or
je
mov
ret
mov
jmp
mov
mov
call
or
jne
ret
mov
jmp
test
je
push
mov
call
pop
or
je
mov
ret
lea
mov
call
ret
push
push
mov
mov
and
cmpl
je
mov
mov
call
test
jne
call
mov
jmp
cmp
ja
xor
mov
mov
xor
mov
mov
call
pop
pop
ret
mov
and
mov
jmp
ret
push
mov
call
mov
pop
ret
push
push
mov
mov
mov
cmp
ja
je
sar
js
rep
mov
and
rep
pop
pop
ret
lea
lea
sar
js
std
rep
mov
and
add
add
rep
cld
pop
pop
ret
sub
fistpll
fwait
pop
pop
ret
mov
push
push
mov
xor
mov
cmp
jb
cmp
ja
and
cmp
jne
mov
call
mov
test
jne
mov
call
mov
test
je
mov
call
jmp
cmp
je
mov
call
mov
pop
pop
ret
mov
push
push
push
mov
push
test
je
xor
xor
mov
mov
inc
cmp
je
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
inc
cmp
je
cmp
je
test
je
jmp
test
je
sub
cmp
ja
cmp
ja
lea
add
add
mov
inc
test
jne
dec
je
test
jge
jmp
inc
jmp
neg
jle
js
pop
sub
jmp
inc
mov
inc
jmp
mov
mov
inc
test
je
cmp
jb
sub
sub
cmp
jbe
sub
cmp
ja
add
cmp
ja
shl
add
mov
inc
test
jne
dec
jne
neg
pop
xor
mov
pop
pop
pop
ret
lea
jmp
mov
push
xor
push
call
cmp
jne
push
call
and
cmp
je
cmp
jne
mov
mov
pop
ret
nop
push
mov
add
movzwl
mov
lea
push
push
push
push
push
call
test
jne
xor
push
push
pushl
mov
movl
lea
push
lea
push
push
push
push
mov
push
call
xor
pop
pop
pop
mov
push
mov
push
call
ret
jmp
jmp
mov
and
mov
and
or
mov
mov
pop
ret
add
inc
push
push
inc
push
inc
pop
inc
outsl
jb
popa
outsb
fs
inc
gs
jo
imul
push
dec
popa
jae
push
popa
insb
jne
add
add
fninit
fldcw
ret
mov
test
je
mov
mov
call
ret
cmpb
jbe
push
push
push
push
call
ret
nop
cmpb
je
push
push
push
push
push
push
push
call
add
pop
ret
lea
push
push
push
push
call
add
pop
ret
lea
cmpb
jbe
push
push
jmp
ret
lea
test
je
mov
cmpb
je
cmpb
jne
movsbl
inc
inc
jmp
add
add
ret
mov
cmpb
jbe
push
push
push
call
push
push
push
push
push
call
pop
pop
pop
pop
ret
nop
cmpb
jbe
push
push
push
push
push
call
pop
ret
push
push
cmpb
jbe
push
push
push
push
call
pop
pop
ret
mov
mov
testl
jne
cmpl
mov
mov
je
cld
call
mov
test
je
call
test
je
mov
mov
cmpl
je
call
cmpb
jbe
cmpb
ja
lea
push
push
call
cmp
pop
je
mov
mov
mov
jmp
mov
mov
mov
cmpb
jbe
cmpb
ja
push
lea
push
push
push
call
cmp
pop
pop
pop
je
orl
push
xor
push
push
push
mov
push
push
push
push
mov
push
push
push
push
call
mov
call
pushl
mov
mov
mov
movl
add
call
jmp
jmp
call
mov
mov
mov
mov
jmp
mov
ret
mov
mov
mov
testl
je
mov
movl
push
push
push
push
mov
add
call
call
pop
pop
pop
pop
mov
ret
mov
mov
movl
call
mov
mov
mov
mov
andl
cmpl
je
mov
call
call
xor
add
mov
pop
mov
mov
pop
pop
pop
pop
mov
ret
lea
call
mov
mov
mov
mov
call
pop
mov
xor
pop
mov
pop
pop
call
jmp
ret
xor
mov
mov
add
mov
call
ret
ret
mov
push
mov
mov
mov
cmp
jg
je
cmp
jg
je
sub
je
sub
je
dec
je
jmp
add
sub
jb
je
jmp
cmp
jg
je
sub
je
dec
je
dec
je
jmp
sub
je
sub
je
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
and
mov
call
pop
ret
mov
testl
jne
cmpb
ja
lea
push
call
cmp
je
mov
cld
call
mov
push
push
push
push
call
mov
cmpl
mov
mov
je
mov
test
je
mov
call
test
je
mov
call
mov
test
je
call
mov
mov
mov
mov
jmp
xor
ret
lea
xor
lea
mov
mov
mov
movl
mov
mov
ret
lea
xor
mov
test
je
mov
cmp
jne
mov
mov
ret
mov
cmp
je
cmp
jne
mov
mov
ret
push
mov
add
push
push
push
mov
mov
test
je
mov
mov
mov
xor
push
push
pushl
mov
test
jle
dec
mov
mov
mov
mov
cmpl
je
call
test
jg
xor
pop
pop
pop
mov
jmp
jmp
call
call
call
pop
pop
pop
pop
pop
pop
ret
push
mov
add
push
push
push
mov
mov
test
je
mov
xor
mov
mov
xor
push
push
pushl
mov
cmp
jle
mov
mov
mov
inc
mov
cmpl
je
call
cmp
jg
xor
pop
pop
pop
mov
jmp
jmp
call
call
call
pop
pop
pop
pop
pop
pop
ret
movl
movl
mov
xor
mov
mov
mov
mov
call
movb
call
ret
push
push
push
mov
mov
mov
mov
mov
cltd
idiv
add
xor
mov
mov
mov
mov
cltd
idiv
mov
dec
test
jne
mov
mov
mov
and
mov
xor
mov
mov
shr
dec
test
jne
pop
pop
pop
ret
mov
xor
xchg
neg
sbb
inc
mov
mov
mov
pushl
pushl
mov
mov
rep
pop
pop
leave
ret
ret
mov
push
cmpb
je
cmpw
jne
cmpl
jbe
mov
call
push
lea
push
push
push
push
call
push
call
push
lea
push
push
push
push
call
push
call
pop
ret
cmpb
jne
push
push
push
push
call
pop
ret
add
incl
add
add
push
push
push
push
mov
mov
cmpb
jne
cmpl
je
mov
mov
xor
mov
call
cmpl
jne
cmpl
je
call
call
xor
mov
cmpb
jne
cmpl
jne
xor
mov
call
cmpb
jbe
cmpl
je
mov
test
je
mov
call
mov
mov
cmp
je
test
je
push
call
call
cmpb
jne
call
cmpb
je
call
cmpl
jne
cmpl
je
call
mov
push
call
mov
mov
mov
mov
rep
jmp
pop
pop
pop
pop
pop
ret
mov
call
ret
nop
popl
jmp
ret
mov
test
je
movl
mov
dec
jl
lock
jne
push
lea
call
pop
ret
nop
push
push
mov
mov
mov
test
je
movl
mov
dec
jl
lock
jne
lea
call
add
dec
jne
pop
pop
ret
nop
test
je
mov
inc
jg
push
push
mov
call
mov
pop
push
mov
call
pop
pop
jmp
lock
xchg
test
je
mov
dec
jl
lock
jne
lea
call
ret
nop
test
je
mov
inc
jle
lock
xchg
test
je
mov
dec
jl
lock
jne
lea
call
ret
lea
test
jle
push
add
and
push
call
pop
movw
add
pop
mov
movl
ret
xor
ret
nop
push
push
push
mov
mov
mov
mov
call
mov
mov
test
je
mov
mov
call
mov
call
mov
pop
pop
pop
ret
mov
push
mov
push
push
mov
push
push
push
mov
push
call
pop
ret
nop
push
mov
mov
call
pop
ret
nop
xor
test
je
push
cmp
je
cmp
je
cmp
je
cmp
je
add
jmp
inc
inc
inc
mov
pop
sub
jmp
ret
lea
xor
mov
inc
jmp
ret
nop
push
push
push
mov
xor
repnz
jne
not
pop
add
pop
pop
jmp
ret
test
je
mov
ret
test
je
mov
test
je
push
push
push
mov
mov
mov
mov
add
cmp
je
call
mov
mov
mov
add
call
pop
pop
pop
ret
call
mov
mov
jmp
ret
test
je
test
je
cmp
je
cmp
je
push
push
call
pop
pop
jmp
push
push
push
mov
mov
push
mov
add
call
mov
mov
mov
mov
call
mov
mov
mov
add
call
pop
mov
test
je
decl
call
pop
pop
pop
ret
mov
jmp
mov
jmp
ret
push
push
push
push
push
mov
xor
mov
test
je
cmp
jne
mov
mov
dec
jmp
xor
mov
test
je
add
cmp
jne
xor
dec
jne
test
je
mov
mov
mov
call
mov
pushl
add
dec
jmp
call
push
mov
mov
mov
test
je
mov
add
call
dec
jne
pop
pop
test
jne
test
je
decl
call
pop
pop
pop
pop
pop
lea
jmp
ret
mov
push
push
push
mov
mov
cmp
je
test
je
test
je
mov
mov
sub
ja
add
push
shr
je
mov
mov
cmp
jne
dec
je
mov
mov
cmp
jne
add
add
dec
jne
jmp
add
add
pop
and
je
mov
mov
cmp
jne
dec
je
cmp
jne
dec
je
and
and
cmp
jne
add
jmp
mov
sub
jmp
mov
sub
jmp
pop
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
pop
pop
pop
ret
mov
test
je
mov
inc
jle
lock
ret
nop
test
je
ret
add
ret
mov
test
je
mov
dec
je
push
mov
mov
call
mov
mov
mov
push
mov
call
pop
mov
dec
jl
lock
jne
lea
call
mov
pop
mov
ret
lea
jmp
ret
mov
jmp
ret
mov
push
test
je
mov
test
je
dec
jl
cmp
jge
sub
test
jl
cmp
jg
add
mov
call
jmp
xor
jmp
mov
jmp
mov
call
pop
ret
ret
push
push
push
mov
mov
mov
call
mov
test
je
mov
dec
jl
cmp
jge
test
jle
sub
cmp
jle
mov
sub
add
lea
call
mov
mov
mov
sub
call
pop
pop
pop
ret
test
je
test
je
push
push
push
mov
mov
mov
push
mov
dec
js
mov
inc
sub
jle
repnz
jne
mov
push
push
mov
repz
pop
pop
je
mov
jmp
pop
xor
jmp
xor
ret
pop
mov
sub
pop
pop
pop
ret
lea
push
push
push
mov
mov
xor
test
jle
mov
test
je
cmpl
jne
sub
add
push
mov
call
pop
add
mov
mov
movb
jmp
mov
call
mov
mov
test
je
mov
mov
cmp
jl
mov
call
mov
call
mov
pop
pop
pop
ret
mov
mov
jmp
ret
test
je
push
push
call
test
je
ret
lea
xchg
test
je
push
call
ret
lea
mov
test
je
movl
push
push
call
pop
ret
lea
test
je
mov
shr
je
push
push
push
call
test
je
ret
push
push
push
push
add
push
add
mov
mov
mov
test
jg
mov
call
jmp
lea
cmp
jge
push
lea
mov
mov
call
mov
test
jle
lea
mov
mov
call
jmp
mov
mov
mov
call
push
mov
mov
mov
call
mov
test
jge
xor
mov
mov
call
add
pop
pop
pop
pop
ret
mov
test
je
push
push
push
call
test
je
pop
pushl
mov
call
ret
nop
push
push
push
mov
xor
repnz
jne
not
pop
add
pop
pop
jmp
ret
xor
test
je
mov
jmp
ret
nop
test
je
ret
nop
add
mov
ret
mov
test
je
mov
shr
ret
mov
push
push
push
mov
mov
xor
mov
test
jle
mov
call
mov
mov
call
test
jle
cmp
jge
mov
mov
add
mov
mov
call
mov
mov
call
pop
pop
pop
ret
nop
mov
jmp
ret
push
mov
add
push
push
push
mov
mov
mov
cmpl
je
xor
push
push
pushl
mov
mov
mov
call
xor
pop
pop
pop
mov
jmp
jmp
call
mov
mov
mov
cmpl
jne
pop
pop
pop
pop
pop
pop
ret
mov
mov
mov
mov
ret
mov
push
mov
add
mov
xor
push
push
pushl
mov
mov
mov
call
xor
pop
pop
pop
mov
push
mov
cmp
jne
mov
mov
mov
jmp
mov
mov
cmpl
je
mov
mov
cmp
jne
mov
mov
mov
mov
jmp
mov
mov
mov
cmpl
jne
ret
jmp
jmp
pop
pop
pop
ret
push
mov
add
push
xor
mov
xor
push
push
pushl
mov
push
lea
push
push
push
call
lea
lea
mov
call
mov
lea
call
mov
cmpl
je
xor
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
mov
pop
ret
push
mov
xor
push
push
pushl
mov
incl
jne
mov
call
mov
call
mov
call
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
nop
subl
jae
movb
movl
movl
movb
movl
call
test
je
call
call
movw
movw
movw
call
mov
call
mov
call
and
cmp
je
call
and
cmp
jbe
movl
jmp
call
call
mov
jmp
call
call
mov
call
mov
ret
nop
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
push
mov
push
push
call
mov
mov
pop
pop
ret
lea
mov
ret
mov
push
push
call
mov
test
je
cmpl
jne
mov
call
mov
call
mov
cmpl
jne
mov
call
jmp
mov
push
mov
push
call
pop
pop
ret
mov
mov
mov
test
jne
mov
mov
ret
call
mov
push
call
test
je
ret
mov
ret
push
call
test
je
ret
mov
call
ret
nop
push
mov
xor
mov
push
call
mov
mov
mov
xor
mov
xor
mov
call
mov
mov
call
pop
ret
lea
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
xchg
call
ret
nop
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
push
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
rep
xor
mov
mov
push
call
mov
cmpl
jge
incl
mov
mov
cmp
jne
cmpl
jne
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
jmp
pop
pop
pop
pop
pop
ret
mov
ret
lea
push
push
push
push
add
mov
mov
mov
xor
mov
push
call
add
mov
movw
mov
mov
call
mov
push
push
movzwl
push
push
push
call
mov
lea
push
movzwl
push
mov
push
mov
push
push
call
mov
mov
mov
mov
mov
mov
push
push
push
call
add
push
push
push
call
mov
lea
push
push
call
add
push
push
mov
push
push
call
mov
mov
push
push
push
push
push
call
mov
lea
push
push
push
mov
push
push
call
push
push
mov
mov
mov
sub
push
push
push
call
mov
lea
push
sub
push
push
mov
push
push
call
lea
push
push
mov
push
mov
push
push
push
push
call
test
jbe
mov
mov
add
pop
pop
pop
pop
ret
nop
push
mov
add
push
xor
mov
mov
mov
mov
xor
push
push
pushl
mov
push
lea
push
push
call
push
push
push
call
mov
lea
mov
call
mov
lea
call
mov
call
push
lea
lea
mov
call
mov
call
mov
mov
pop
call
xor
pop
pop
pop
mov
push
lea
call
lea
call
lea
call
ret
jmp
jmp
pop
mov
pop
ret
lea
push
mov
add
push
push
xor
mov
mov
mov
mov
call
xor
push
push
pushl
mov
mov
call
pushl
push
push
lea
mov
call
push
push
push
push
push
push
mov
call
mov
push
call
lea
push
push
push
call
mov
lea
mov
call
push
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
mov
pop
ret
incl
add
add
add
incl
push
add
add
add
push
mov
mov
jmp
test
jne
xor
mov
jmp
incl
mov
mov
cmp
jne
mov
pop
ret
nop
xor
ret
nop
push
push
push
push
mov
mov
mov
call
mov
mov
call
mov
test
jle
mov
test
je
mov
mov
call
test
je
mov
mov
call
cmp
jne
dec
dec
test
jg
mov
pop
pop
pop
pop
ret
nop
push
mov
push
push
push
mov
mov
mov
call
xor
push
push
pushl
mov
mov
mov
call
mov
push
lea
mov
mov
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
pop
pop
ret
add
incl
add
add
add
in
add
push
xor
mov
mov
mov
mov
mov
mov
mov
call
mov
call
xor
push
push
pushl
mov
push
lea
push
push
call
mov
mov
call
jne
movb
lea
mov
call
mov
lea
call
mov
mov
call
cmpl
je
lea
mov
call
jmp
lea
lea
mov
call
jmp
movb
lea
lea
mov
call
mov
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
lea
mov
call
ret
jmp
jmp
pop
mov
pop
ret
add
incl
add
add
add
add
in
add
push
push
push
xor
mov
mov
mov
mov
mov
call
mov
call
xor
push
push
pushl
mov
xor
mov
mov
call
push
call
mov
mov
add
add
mov
add
mov
mov
mov
dec
test
jb
inc
mov
xor
mov
mov
add
mov
shl
add
mov
add
mov
mov
call
mov
lea
call
mov
push
lea
mov
call
mov
pop
call
test
jne
mov
mov
add
mov
add
add
movzwl
mov
mov
mov
shl
mov
mov
add
xor
push
push
mov
cltd
add
adc
add
mov
add
mov
mov
jmp
inc
decl
jne
xor
pop
pop
pop
mov
push
lea
mov
call
lea
mov
call
ret
jmp
jmp
mov
pop
pop
pop
mov
pop
ret
mov
push
mov
push
push
push
mov
mov
call
xor
push
push
pushl
mov
xor
mov
mov
call
push
call
test
je
mov
dec
jne
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
pop
pop
pop
ret
mov
push
mov
push
push
mov
mov
call
xor
push
push
pushl
mov
xor
mov
call
push
call
cmp
je
test
je
mov
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
pop
pop
ret
lea
push
mov
xor
push
push
push
push
push
xor
push
push
pushl
mov
xor
mov
call
test
je
lea
mov
mov
call
mov
call
mov
lea
call
mov
call
test
jne
lea
mov
mov
call
mov
call
mov
lea
call
mov
call
test
jne
mov
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
pop
mov
pop
ret
nop
push
mov
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sidtl
nop
nop
mov
pop
pop
pop
ret
lea
push
xor
push
push
push
push
push
push
push
call
cmp
je
push
call
mov
mov
pop
ret
mov
call
neg
sbb
ret
nop
push
xor
push
push
push
push
call
test
je
or
mov
pop
ret
nop
xor
ret
nop
push
mov
push
push
mov
mov
call
xor
push
push
pushl
mov
xor
mov
call
test
je
mov
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
pop
pop
ret
lea
push
mov
push
push
mov
mov
call
xor
push
push
pushl
mov
mov
call
push
call
test
jne
cmp
jne
xor
jmp
mov
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
pop
pop
ret
nop
push
push
push
push
push
mov
mov
mov
push
push
mov
push
call
mov
test
je
push
mov
push
call
mov
push
mov
push
call
mov
push
call
mov
cmpl
je
push
call
jmp
inc
cmp
jne
mov
pop
pop
pop
pop
pop
ret
lea
push
mov
add
push
xor
mov
xor
push
push
pushl
mov
push
call
push
call
mov
push
call
mov
push
call
mov
lea
mov
call
lea
call
mov
mov
call
mov
call
mov
mov
push
call
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
mov
pop
ret
push
mov
add
push
push
mov
mov
mov
call
xor
push
push
pushl
mov
push
call
mov
call
mov
add
inc
push
push
call
mov
mov
call
mov
mov
mov
call
push
push
call
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
pop
pop
pop
pop
ret
push
push
push
mov
mov
or
je
mov
or
je
mov
mov
cmp
jbe
mov
cmp
repz
je
mov
cmp
jb
cmp
ja
sub
mov
cmp
jb
cmp
ja
sub
cmp
je
movzbl
movzbl
sub
pop
pop
pop
ret
nop
push
mov
add
push
push
push
xor
mov
mov
mov
mov
mov
mov
mov
call
mov
call
xor
push
push
pushl
mov
xor
lea
call
mov
call
test
jle
mov
mov
mov
movzbl
cltd
idiv
xor
inc
decl
jne
cmp
jle
sar
jns
adc
mov
fildl
call
mov
cmp
jg
mov
call
test
jle
mov
mov
mov
call
push
mov
pop
mov
cltd
idiv
mov
incl
mov
call
xor
mov
mov
movzbl
mov
cltd
idiv
mov
incl
mov
cltd
idivl
mov
xor
mov
mov
mov
and
jns
dec
or
inc
xor
mov
mov
movzbl
add
shr
xor
xor
mov
mov
and
jns
dec
or
inc
test
jne
lea
mov
call
mov
lea
call
jmp
lea
xor
mov
push
mov
pop
sub
call
mov
lea
call
inc
decl
jne
mov
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
lea
call
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
mov
push
mov
add
push
push
mov
mov
mov
call
xor
push
push
pushl
mov
mov
call
mov
push
lea
push
mov
call
push
call
mov
lea
mov
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
mov
pop
ret
mov
test
je
sub
mov
ret
mov
push
mov
add
push
push
push
mov
mov
call
xor
push
push
pushl
mov
mov
call
mov
lea
call
mov
mov
mov
mov
call
mov
cmpl
jbe
mov
jmp
mov
lea
push
sub
push
lea
call
add
push
mov
mov
push
mov
call
push
push
call
mov
mov
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
pop
pop
pop
pop
ret
nop
push
mov
xor
push
push
pushl
mov
incl
jne
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
subl
ret
add
mov
ret
lea
push
push
mov
mov
call
ret
push
movzwl
add
mov
mov
pop
ret
mov
push
mov
mov
mov
pop
ret
shr
mov
ret
nop
mov
sub
mov
ret
mov
push
mov
add
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
mov
nop
push
nop
mov
nop
nop
nop
mov
nop
nop
mov
nop
mov
nop
nop
inc
nop
nop
nop
nop
nop
dec
nop
jne
nop
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
pop
ret
nop
mov
call
mov
mov
mov
call
ret
mov
call
mov
mov
mov
call
ret
push
mov
add
push
push
push
mov
mov
mov
mov
call
mov
call
xor
push
push
pushl
mov
mov
mov
call
jne
mov
mov
call
mov
lea
call
call
call
movl
movw
push
push
push
push
push
push
push
push
mov
call
push
mov
call
push
mov
mov
call
cmp
sbb
inc
mov
mov
test
je
nop
nop
nop
nop
nop
nop
nop
nop
movb
xor
push
push
pushl
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
movl
lea
push
mov
push
mov
mov
call
test
je
lea
push
push
lea
push
mov
add
push
mov
push
mov
mov
call
test
je
mov
mov
call
test
jl
cmpl
je
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
add
mov
push
push
mov
mov
push
mov
call
push
mov
push
mov
mov
call
mov
cmpl
je
lea
push
mov
mov
push
mov
push
mov
push
mov
push
mov
mov
call
test
je
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
add
call
mov
mov
movzwl
dec
test
jb
inc
xor
lea
push
lea
mov
mov
push
mov
mov
add
push
mov
mov
add
push
mov
push
mov
mov
call
test
je
lea
push
mov
mov
call
push
mov
mov
push
mov
mov
add
push
mov
push
mov
mov
call
inc
dec
jne
lea
push
push
lea
push
mov
add
push
mov
push
mov
mov
call
test
je
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
call
mov
lea
push
mov
push
mov
mov
call
cmp
sbb
inc
mov
xor
pop
pop
pop
mov
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpb
je
mov
push
mov
mov
call
jmp
push
mov
push
mov
mov
call
ret
jmp
jmp
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
pop
pop
pop
mov
pop
ret
add
add
incl
add
add
add
add
in
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
xor
push
push
pushl
mov
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
or
add
rclb
add
cmp
inc
add
cmp
add
inc
add
cmp
inc
add
add
inc
add
inc
add
add
push
inc
add
add
add
mov
mov
push
push
dec
jne
push
push
push
mov
call
mov
mov
mov
xor
push
push
pushl
mov
nop
nop
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
call
cmp
je
call
cmp
je
lea
mov
mov
call
mov
mov
call
lea
mov
mov
call
mov
mov
call
lea
mov
mov
call
mov
mov
call
lea
mov
mov
call
mov
mov
call
lea
mov
mov
call
mov
mov
call
lea
mov
mov
call
mov
mov
mov
call
mov
mov
lea
mov
mov
call
mov
call
mov
lea
call
mov
mov
call
mov
mov
lea
mov
mov
call
mov
call
mov
lea
call
mov
mov
call
mov
mov
lea
mov
mov
call
mov
call
mov
lea
call
mov
mov
call
mov
mov
lea
mov
mov
call
mov
call
mov
lea
call
mov
mov
call
mov
mov
lea
mov
mov
call
mov
call
mov
lea
call
mov
mov
call
mov
mov
lea
mov
mov
call
mov
call
mov
lea
call
mov
mov
call
mov
mov
lea
mov
mov
call
mov
call
mov
lea
call
mov
mov
call
mov
mov
lea
mov
mov
call
mov
call
mov
lea
call
mov
mov
call
mov
mov
lea
mov
mov
call
mov
call
mov
lea
call
mov
mov
call
mov
mov
lea
mov
mov
call
mov
call
mov
lea
call
mov
mov
call
mov
mov
lea
mov
mov
call
mov
call
mov
lea
call
mov
mov
call
mov
mov
lea
mov
mov
call
mov
call
mov
lea
call
mov
mov
call
mov
mov
lea
mov
mov
call
mov
call
mov
lea
call
mov
mov
call
mov
mov
lea
mov
mov
call
mov
call
mov
lea
call
mov
mov
call
mov
mov
lea
mov
mov
call
mov
call
mov
lea
call
mov
mov
call
mov
mov
lea
mov
mov
call
mov
call
mov
lea
call
mov
mov
call
mov
mov
lea
mov
mov
call
mov
call
mov
lea
call
mov
mov
call
mov
mov
lea
mov
mov
call
mov
call
mov
lea
call
mov
mov
call
mov
mov
lea
mov
mov
call
mov
call
mov
lea
call
mov
mov
call
mov
mov
lea
mov
mov
call
mov
call
mov
lea
call
mov
mov
call
mov
mov
lea
mov
mov
call
mov
call
mov
lea
call
mov
mov
call
mov
mov
lea
mov
mov
call
mov
call
mov
lea
call
mov
mov
call
mov
mov
lea
mov
mov
call
mov
call
mov
lea
call
mov
mov
call
mov
mov
lea
mov
mov
call
mov
mov
mov
call
mov
mov
lea
mov
mov
call
mov
mov
mov
call
mov
mov
lea
mov
mov
call
mov
mov
mov
call
mov
mov
lea
mov
mov
call
mov
mov
mov
call
mov
mov
lea
mov
mov
call
mov
mov
mov
call
mov
mov
lea
mov
mov
call
mov
mov
mov
call
mov
mov
lea
mov
mov
call
mov
mov
mov
call
mov
mov
lea
mov
mov
call
mov
mov
mov
call
mov
mov
lea
mov
mov
call
mov
mov
mov
call
mov
mov
lea
mov
mov
call
mov
call
mov
lea
call
mov
mov
call
mov
mov
lea
mov
mov
call
mov
call
mov
lea
call
mov
mov
call
mov
mov
lea
mov
mov
call
mov
call
mov
lea
call
mov
mov
call
mov
mov
lea
mov
mov
call
mov
call
mov
lea
call
mov
mov
call
mov
mov
lea
mov
mov
call
mov
call
mov
lea
call
mov
mov
call
mov
mov
lea
mov
mov
call
mov
call
mov
lea
call
mov
mov
call
mov
mov
lea
mov
mov
call
mov
call
mov
lea
call
mov
mov
call
mov
mov
lea
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
call
mov
mov
call
call
test
jne
xor
mov
call
call
mov
lea
call
mov
mov
call
jne
push
push
push
mov
mov
call
mov
call
mov
mov
call
mov
mov
mov
mov
call
cmpb
je
push
mov
call
push
push
mov
mov
call
test
jne
push
push
push
mov
mov
call
test
jne
call
test
jne
cmpb
je
lea
mov
mov
call
mov
mov
call
je
lea
mov
mov
call
mov
mov
call
je
mov
call
test
jne
mov
call
test
jne
mov
call
test
jne
mov
call
test
jne
mov
call
test
jne
cmpb
je
call
cmp
je
call
cmp
je
cmpb
je
call
test
jne
call
test
jne
mov
call
test
jne
mov
call
call
test
jne
mov
call
call
test
jne
mov
call
call
test
jne
mov
call
call
test
jne
cmpb
cmpb
je
cmpb
je
cmpb
je
mov
push
lea
push
lea
push
push
mov
mov
call
cmpb
je
pushl
pushl
lea
lea
call
pushl
pushl
lea
mov
call
mov
call
test
je
movb
cmpb
jne
mov
push
lea
push
lea
push
push
mov
mov
call
push
push
push
push
push
push
pushl
pushl
lea
lea
call
pushl
pushl
lea
mov
call
mov
call
push
mov
mov
call
lea
mov
call
mov
mov
call
mov
lea
call
mov
lea
call
mov
lea
call
mov
lea
call
mov
lea
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
mov
xor
mov
mov
call
xor
mov
mov
lea
call
lea
lea
mov
call
lea
mov
call
mov
call
mov
mov
call
mov
cmpl
je
mov
mov
call
mov
call
push
mov
call
mov
mov
pop
call
lea
mov
mov
call
mov
mov
call
jne
push
mov
mov
call
mov
dec
xor
mov
call
mov
call
push
mov
call
pop
sub
cmp
jle
mov
mov
call
mov
mov
mov
call
pushl
pushl
pushl
pushl
lea
mov
call
mov
call
test
je
movb
cmpb
jne
push
push
push
push
push
push
pushl
pushl
pushl
pushl
lea
mov
call
mov
call
push
mov
mov
call
mov
lea
call
push
mov
mov
call
mov
dec
xor
mov
call
mov
call
push
mov
call
pop
sub
cmp
jle
mov
mov
call
mov
mov
mov
call
lea
mov
mov
call
mov
mov
call
jne
lea
mov
mov
call
mov
mov
call
jne
mov
mov
call
jmp
lea
mov
mov
call
mov
mov
call
jne
lea
mov
call
mov
mov
call
jmp
lea
mov
mov
call
mov
mov
call
jne
lea
mov
call
mov
push
mov
call
mov
lea
call
mov
mov
pop
call
jmp
lea
mov
mov
call
mov
mov
call
jne
lea
mov
call
mov
mov
call
jmp
mov
mov
call
push
mov
mov
call
mov
dec
xor
mov
call
mov
call
push
mov
call
pop
sub
cmp
jle
mov
mov
call
mov
mov
mov
call
pushl
pushl
pushl
mov
mov
call
mov
cmpb
jne
movl
jmp
mov
cmpb
jne
movl
jmp
mov
cmpb
jne
movl
jmp
movl
lea
mov
mov
call
mov
mov
call
jne
lea
lea
mov
call
mov
lea
mov
call
mov
mov
call
lea
mov
mov
call
mov
mov
call
jne
mov
push
lea
push
call
mov
mov
call
mov
call
mov
mov
call
call
mov
mov
call
push
mov
call
mov
pop
call
push
mov
push
push
push
push
push
mov
call
push
mov
mov
call
mov
push
push
mov
push
mov
push
mov
push
mov
mov
call
mov
push
mov
mov
call
lea
mov
mov
call
mov
mov
call
jne
xor
push
push
pushl
mov
mov
mov
call
jne
push
push
push
mov
call
push
mov
call
push
push
mov
mov
call
jmp
push
push
mov
call
push
mov
call
push
mov
call
push
push
mov
mov
call
xor
pop
pop
pop
mov
jmp
jmp
call
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lea
mov
mov
call
mov
mov
call
jne
lea
lea
mov
call
mov
lea
mov
call
mov
mov
call
lea
mov
mov
call
mov
mov
call
jne
mov
push
lea
push
call
mov
mov
call
mov
call
call
mov
mov
call
push
mov
call
mov
pop
call
lea
mov
mov
call
mov
mov
call
jne
lea
mov
mov
call
mov
lea
mov
call
mov
mov
mov
call
mov
mov
mov
cmpb
je
mov
mov
call
inc
incl
cmp
jne
xor
pop
pop
pop
mov
push
lea
mov
call
lea
mov
call
ret
jmp
jmp
pop
pop
pop
call
add
add
ljmp
add
add
xor
ss
cmp
xor
xor
xor
xor
cmp
xor
aaa
xor
cmp
xor
aaa
xor
xor
xor
xor
xor
add
ljmp
add
add
xor
aaa
xor
aaa
xor
xor
xor
xor
xor
xor
xor
cmp
cmp
xor
xor
xor
xor
xor
xor
xor
add
ljmp
add
add
xor
aaa
xor
xor
xor
xor
xor
cmp
cmp
ss
xor
cmp
cmp
cmp
xor
xor
xor
xor
add
ljmp
add
add
xor
xor
aaa
cmp
xor
xor
xor
xor
xor
cmp
xor
xor
cmp
cmp
xor
xor
xor
add
ljmp
add
add
xor
xor
xor
xor
xor
xor
xor
cmp
aaa
xor
xor
xor
cmp
xor
xor
xor
xor
xor
xor
xor
add
ljmp
add
add
xor
cmp
xor
xor
xor
xor
xor
xor
cmp
xor
xor
aaa
ss
xor
xor
xor
xor
add
ljmp
add
add
xor
cmp
xor
xor
xor
xor
cmp
cmp
cmp
cmp
aaa
cmp
cmp
xor
xor
xor
xor
xor
add
ljmp
add
add
xor
aaa
cmp
xor
xor
xor
xor
cmp
xor
xor
xor
cmp
xor
xor
xor
xor
xor
xor
xor
add
ljmp
add
add
xor
xor
cmp
xor
xor
xor
xor
xor
cmp
xor
xor
cmp
ss
xor
xor
xor
xor
xor
add
ljmp
add
add
xor
xor
xor
xor
xor
xor
xor
xor
aaa
xor
xor
xor
xor
xor
xor
xor
add
ljmp
add
add
xor
aaa
aaa
cmp
cmp
aaa
xor
xor
xor
xor
cmp
aaa
xor
xor
cmp
xor
cmp
cmp
xor
xor
xor
xor
xor
add
ljmp
add
add
xor
xor
cmp
aaa
cmp
xor
xor
xor
xor
cmp
cmp
aaa
cmp
xor
cmp
xor
aaa
xor
xor
xor
xor
xor
xor
xor
add
ljmp
add
add
xor
aaa
xor
cmp
xor
xor
xor
xor
xor
cmp
xor
xor
xor
xor
xor
xor
xor
xor
add
ljmp
add
add
xor
xor
xor
xor
xor
cmp
xor
xor
xor
aaa
xor
aaa
cmp
cmp
xor
xor
xor
xor
add
ljmp
add
add
xor
cmp
cmp
xor
xor
xor
xor
xor
cmp
xor
xor
xor
xor
cmp
xor
xor
xor
xor
xor
xor
xor
add
ljmp
add
add
xor
xor
xor
xor
xor
xor
xor
cmp
cmp
xor
cmp
cmp
cmp
ss
xor
xor
xor
xor
xor
add
ljmp
add
add
xor
xor
aaa
xor
xor
xor
xor
cmp
aaa
xor
xor
aaa
xor
cmp
xor
xor
xor
xor
add
ljmp
add
add
xor
xor
xor
xor
xor
xor
xor
cmp
xor
xor
aaa
cmp
cmp
cmp
cmp
xor
xor
xor
xor
add
ljmp
add
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
xor
xor
cmp
xor
xor
xor
xor
xor
add
ljmp
add
add
xor
xor
aaa
cmp
xor
xor
xor
xor
xor
cmp
cmp
ss
cmp
xor
cmp
xor
xor
xor
xor
xor
add
decl
add
add
imul
add
decl
add
add
outsb
outsl
jo
ja
add
add
decl
add
add
jo
push
add
add
decl
add
add
popa
imul
add
add
decl
add
add
imul
imul
decl
add
add
insb
gs
bound
add
add
decl
add
add
ja
je
jae
add
add
adc
add
jae
outsl
add
add
imul
add
add
adc
add
jae
popa
add
add
add
popa
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
outsl
add
add
imul
adc
add
bound
add
add
add
add
add
add
add
add
imul
add
jbe
outsl
add
add
add
decl
add
add
jbe
push
outsl
add
add
decl
add
mov
pop
clc
add
push
stos
push
add
add
decl
add
add
push
scas
pop
lods
add
add
decl
add
test
pop
clc
add
push
stos
push
add
add
decl
add
add
add
push
lods
pop
add
decl
add
add
add
push
movsl
pop
test
call
add
xchg
dec
fwait
pop
mov
pop
mov
dec
test
mov
add
add
decl
push
mov
pop
mov
mov
add
decl
add
test
push
sahf
push
mov
pop
add
add
decl
add
test
pop
sahf
push
mov
pop
add
add
decl
add
mov
push
sahf
push
mov
pop
add
add
decl
add
add
push
cltd
push
mov
mov
mov
decl
add
add
pop
cmpsb
push
lods
push
mov
pop
test
call
add
add
pop
scas
jns
dec
mov
dec
stos
imul
call
add
add
inc
mov
push
mov
inc
mov
add
decl
add
add
pop
test
add
decl
add
add
push
cmpsl
jo
pop
scas
pop
test
add
call
add
add
push
cmpsl
push
scas
inc
mov
add
add
call
add
add
pusha
mov
inc
adcl
add
call
add
add
inc
movsb
pop
lods
dec
mov
pop
mov
call
add
add
inc
scas
pop
lods
jnp
pop
mov
add
add
call
add
add
inc
scas
pop
lods
jnp
pop
mov
add
add
decl
add
add
push
fwait
inc
scas
push
movsl
dec
mov
add
decl
add
lcall
pop
mov
cmpsl
pop
add
add
call
add
add
stos
dec
lods
push
mov
add
decl
add
add
push
lea
push
test
decl
add
add
jbe
pop
movsb
add
add
decl
add
add
js
pop
movsl
pop
mov
decl
add
add
inc
movsb
push
movsb
inc
mov
call
add
add
push
mov
pop
test
imul
decl
push
stos
pop
mov
inc
mov
addb
add
decl
add
add
push
movsl
jnp
dec
test
call
add
add
push
movsb
push
mov
jb
dec
mov
call
add
add
pop
mov
push
mov
dec
add
add
decl
dec
stos
pop
pop
mov
dec
movsl
add
add
decl
add
add
jae
pop
mov
scas
pop
mov
add
call
add
add
pop
mov
push
mov
dec
add
add
decl
add
add
push
scas
jb
dec
test
decl
add
add
dec
scas
push
mov
movsl
pop
lods
pop
test
decl
add
add
lea
push
test
call
add
add
inc
lods
pop
lods
dec
sahf
inc
test
add
add
decl
add
pop
mov
jbe
inc
test
add
call
add
add
push
mov
pop
test
scas
imul
call
add
add
inc
pop
stos
dec
test
inc
mov
call
add
add
push
cltd
pop
movsl
push
mov
dec
mov
call
add
add
push
mov
pop
test
scas
jg
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
inc
lods
add
incl
add
add
inc
mov
decl
add
add
pop
clc
add
add
add
incl
add
pushf
pop
mov
add
decl
add
add
pop
cltd
pop
scas
inc
add
incl
add
add
incl
add
out
mov
add
add
incl
add
xchg
pop
add
add
incl
add
add
incl
add
add
call
jno
jae
jno
insb
lcall
bound
add
call
jno
jae
jno
insb
lcall
fs
insb
pushf
addr16
add
add
call
jno
jae
jno
insb
lcall
jg
jnp
addr16
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
incl
push
mov
add
decl
add
fwait
push
scas
inc
test
push
mov
add
add
ljmp
add
add
pop
lods
dec
test
pop
scas
dec
xchg
push
cmpsl
pop
movsb
dec
xchg
lods
inc
stos
jle
js
addr16
dec
mov
popa
add
decl
add
add
mov
add
decl
add
add
xorb
add
decl
add
add
mov
add
add
decl
add
add
mov
add
decl
add
add
mov
pop
lea
add
decl
add
pop
mov
add
add
call
add
add
arpl
inc
mov
dec
add
decl
add
add
push
test
movsl
pop
test
decl
push
mov
push
lods
push
movsl
push
lods
add
add
decl
add
add
pop
lods
push
movsl
pop
test
decl
add
add
pop
cmpsl
push
movsl
pop
test
decl
add
add
push
cmpsl
dec
mov
mov
call
add
add
push
mov
push
mov
pop
add
decl
add
add
dec
in
mov
decl
add
add
inc
mov
add
add
call
add
add
pushf
imul
sbb
jbe
add
add
add
add
add
add
xor
add
mov
add
add
add
orb
add
addb
addb
add
xor
add
push
add
xorb
add
js
add
add
add
add
add
push
adc
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
rolb
add
add
call
add
add
add
add
add
add
add
add
add
fadds
add
or
add
inc
jae
add
add
add
add
add
add
add
add
add
add
dec
mov
add
pop
add
in
add
add
add
add
add
lret
xorb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
jl
add
push
add
add
add
add
add
add
add
sbbb
add
add
add
mov
add
shlb
add
add
inc
add
add
push
add
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
add
xor
cmp
xor
sub
add
and
add
inc
add
add
add
add
add
add
mov
add
mov
add
mov
mov
ret
add
add
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
xchg
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
mov
mov
ja
ja
ja
ja
ja
ja
ja
xchg
inc
inc
inc
inc
inc
inc
inc
add
add
addb
inc
inc
inc
inc
inc
jo
pop
jo
xchg
inc
inc
inc
inc
inc
inc
inc
jo
pop
jo
xchg
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
addb
ja
ja
ja
ja
ja
mov
mov
mov
add
incl
add
add
ljmp
add
add
add
add
add
add
add
add
mov
add
mov
add
mov
mov
rolb
addb
add
add
add
incl
incl
add
incl
incl
incl
add
incl
mov
mov
incl
incl
incl
incl
incl
incl
incl
mov
inc
inc
lock
inc
addb
ja
mov
mov
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
in
mov
ss
sub
ret
cmp
xchg
shll
fsubr
xor
lds
idivb
add
xor
loope
jg
lds
int
xchg
out
rclb
test
jp
ss
or
sbb
cmp
sub
and
pushf
or
aaa
nop
es
icebp
pop
fs
jno
pop
cmp
add
int3
loopne
lcall
inc
data16
xchg
adc
adc
xchg
jp
sbb
jge
das
mov
cmp
add
bound
mov
push
lds
xchg
push
rorb
vmovaps
sub
sbb
mov
jne
jae
dec
push
xor
into
cmpsb
fbstp
loop
jne
push
inc
sub
mov
jg
lret
add
jg
inc
jmp
pop
cmp
mov
dec
adc
ret
cld
and
jo
pop
and
imul
push
imul
ss
mov
push
mov
cli
dec
insl
cmp
push
mov
ret
popa
rolb
ret
cmp
mov
and
inc
pop
add
arpl
push
test
inc
mov
repnz
and
out
inc
push
xor
add
loopne
outsl
xor
xlat
mov
sbb
sub
sti
cwtl
sbb
repz
bound
andb
addr16
push
push
int3
call
adc
push
ljmp
imul
inc
outsl
inc
adc
and
xchg
aaa
daa
xchg
and
cmp
lea
push
fildl
adc
es
test
call
xabort
pushf
iret
pop
test
test
and
shr
in
dec
cmp
call
rclb
ret
fldenv
cld
lret
push
cs
lea
jb
pop
xchg
xchg
mov
out
in
push
jo
xchg
push
mov
shrl
adc
out
sub
lcall
pop
push
roll
push
imull
sahf
js
xchg
pop
bound
fisubrl
pop
movsb
push
push
lret
add
jmp
stos
lods
mov
jno
lret
or
test
stc
jnp
stc
add
pushf
arpl
pop
sbbl
pminub
or
cmc
repz
dec
pop
cmp
mov
in
inc
jecxz
inc
insl
in
sbb
jae
loopne
imul
sbb
or
psubusw
pop
shl
fbstp
out
push
adc
insb
test
fstps
test
jae
aad
add
loopne
jecxz
rcr
mov
xor
pushf
mov
mov
mov
ret
pop
insl
sub
das
add
into
imul
push
xchg
test
enter
stc
mov
add
mov
adc
scas
push
mov
mov
andl
dec
xor
mov
and
push
notl
fists
fs
mov
jns
xchg
pop
roll
inc
notl
dec
popl
and
dec
daa
mov
add
push
lea
push
mov
aas
xor
mov
ljmp
pop
andb
xor
out
mov
xchg
cs
push
sbb
ret
xchg
dec
mov
xchg
jp
inc
les
inc
jl
and
mov
mov
lea
mov
add
jbe
lcall
dec
movsb
testb
push
push
pushf
push
mov
jbe
push
idiv
bound
inc
sbb
jb
rorb
cmp
fmul
aaa
xor
pop
pop
popf
cmpsl
inc
in
jle
push
inc
cmp
aas
or
dec
xor
rcll
lock
outsl
test
stos
fstl
push
xlat
push
xchg
xor
dec
je
and
mov
dec
js
notl
scas
mov
or
push
fwait
dec
fwait
enter
lds
sti
fsubr
bound
shll
shlb
jns
imulb
in
push
xchg
pop
rol
pop
repnz
jae
jmp
out
adc
sti
test
sub
stos
shlb
int
sbb
pop
adc
sub
xor
and
jecxz
sbb
xor
repnz
lret
jmp
int3
and
add
fxch
call
outsb
icebp
inc
pop
cmpsb
int3
cmp
mov
stc
jge
lret
or
jns
inc
mov
and
sahf
sbb
xchg
outsl
sbb
xlat
mov
ret
inc
push
leave
dec
push
pop
jg
call
orl
adc
out
fisubl
stc
les
aam
xor
les
shll
push
add
pop
lods
les
mov
pop
lods
xchg
xchg
out
pop
les
mov
pop
shl
enter
fstpt
out
jg
fcompl
sbb
sub
lods
xchg
and
xchg
jb
mov
mov
lret
out
fs
outsb
clc
lahf
push
xchg
aam
sub
jmp
call
mov
push
mov
sub
shl
inc
lea
je
sbb
sub
cmp
shll
stos
inc
std
clc
mov
xchg
int
or
aaa
push
pop
mov
sbb
daa
in
test
daa
sub
out
rclb
jecxz
cmp
and
inc
mov
scas
lock
cltd
pop
mov
xchg
xchg
out
dec
xchg
sub
ljmp
jge
les
mov
int3
xchg
stos
pop
out
push
jmp
sub
jns
push
inc
jg
in
mov
std
in
divb
push
xor
out
mov
outsb
mov
fisubrl
xchg
lret
test
in
fs
adc
inc
mov
inc
dec
dec
push
and
lds
hlt
mov
mov
into
jp
mov
cltd
mov
movsl
jbe
rcrb
push
lcall
call
push
lret
cmp
fdivp
loop
fdiv
adc
test
pop
push
int
dec
ret
mov
xor
push
cmp
ret
stos
add
and
popf
or
mov
hlt
cmp
shrl
adc
adc
or
int
push
jg
inc
aaa
cmpsl
sbb
loop
rolb
mov
and
cmp
xchg
cmp
mov
mov
sub
cmc
rcll
fisttpll
ljmp
xor
cmp
movsb
jg
or
stc
xor
mov
inc
sahf
jne
add
cs
jg
out
test
aam
xorl
out
leave
stc
data16
addl
cmp
ret
mov
subl
out
pusha
adc
insb
pushf
lea
in
fildl
bound
stc
or
scas
test
fwait
mov
imul
push
repnz
test
rorl
cmpsb
and
xchg
adc
stos
jns
or
icebp
push
sbb
mov
dec
mov
out
in
adc
and
inc
and
aad
sbb
add
mov
scas
xor
mov
aad
pop
mov
jno
inc
jl
cmp
jns
aas
jle
jp
push
sub
popa
mov
inc
dec
pushf
push
clc
xchg
pop
dec
ds
jno
or
and
lock
jo
gs
in
and
fstpt
movb
mov
js
shll
loope
fsubr
dec
sub
pop
xchg
adc
and
pop
push
dec
push
adc
mov
push
xor
mov
xlat
rorl
xorl
or
mov
and
jae
jle
scas
or
fmul
clc
or
orb
mov
je
out
fs
push
or
daa
mov
ss
movsb
push
pushf
sahf
mov
hlt
div
imul
dec
xchg
dec
outsb
lea
jmp
outsb
inc
pop
popf
or
lods
dec
xchg
jo
pop
inc
insl
nop
mov
mov
push
add
test
outsl
mov
pop
mov
sbb
sbb
inc
cmp
xchg
xchg
pop
push
xor
pusha
xor
add
negb
jecxz
push
lcall
jb
sub
mov
adc
mov
xchg
add
and
sub
mov
adc
jle
fidivrs
xchg
insb
mov
jb
lret
cmp
xchg
xor
xchg
cmp
mov
push
pop
scas
fldcw
jns
add
test
adc
and
cmp
sarb
inc
pop
fsubp
cmpsb
and
sarb
push
imul
in
push
imul
clc
in
add
icebp
pop
xor
adcb
in
xchg
arpl
xchg
rol
cli
xchg
imul
jae
arpl
aas
test
jbe
aad
movsl
pop
lods
imul
fnstenv
decl
mov
icebp
sbb
into
stc
jo
xlat
popa
push
lahf
pusha
orb
mov
mov
lods
rcrl
stc
pop
rcrb
adc
ja
iret
cs
jecxz
pop
lods
jno
fdivs
iret
xor
cmp
aas
sarb
adc
movsb
addr16
xchg
loope
sub
xchg
ljmp
push
sub
adc
adcb
test
int
pop
jae
shll
scas
cmc
push
dec
jle,pt
jp
mov
test
into
jle
add
push
push
push
sti
mov
pop
adc
cmc
pushf
dec
mov
xor
push
push
or
je
mov
inc
or
dec
cmp
push
out
pop
insl
lret
insl
shr
sahf
or
js
imul
dec
sub
test
push
jle
mov
pop
mov
test
insb
mov
mov
add
jbe
data16
repnz
xorb
xchg
dec
out
fisubl
sbb
or
and
lds
stos
mov
sub
or
out
into
dec
xor
pop
cmpsb
mov
mov
mov
pusha
stos
in
mov
fwait
sbb
xlat
dec
cltd
sbb
push
jge
cli
cmp
ret
stos
fwait
cmp
adc
sti
adc
dec
stc
mov
inc
cmp
std
mov
scas
jno
fmull
out
rolb
repz
dec
sarl
push
repnz
fwait
xor
ss
aad
ss
xchg
leave
inc
rcll
adc
pop
jnp
shlb
add
addr16
sub
stos
sub
xchg
add
mov
es
mov
cmp
jecxz
mov
pop
and
cltd
adc
push
dec
xor
mov
sub
push
in
jno
out
rcrl
sarb
lret
adc
shlb
add
sub
adcb
ret
cmpl
dec
inc
and
std
jge
popf
or
fstpl
popf
cltd
or
fldl
jle
cmp
loope
dec
sub
nop
pcmpgtw
mov
nop
cmpsl
sub
enter
jge
repnz
scas
loope
ret
nop
xchg
das
insb
inc
insb
xor
pusha
rolb
pusha
fsub
or
sub
mov
cmpsl
fwait
mov
and
ja
cmpsb
xchg
es
aad
out
push
push
cs
add
das
push
or
popf
xor
add
xor
clc
test
frstor
loope
ret
xor
adc
pop
sub
fmull
and
pop
shll
add
xor
stos
sbb
dec
lds
clc
fstpl
lea
mov
stc
into
movsl
aad
inc
and
in
loop
sub
push
xor
lahf
cmc
mov
jle
adcl
dec
repz
push
push
std
movsb
xlat
mov
xor
xor
dec
or
xorb
scas
adc
hlt
scas
cmp
jae
out
mov
inc
jl
enter
mov
dec
mov
or
jae
test
test
xchg
ljmp
push
imul
sbb
push
mov
stc
cmp
insl
inc
les
jmp
push
icebp
stos
push
push
ret
test
das
aam
lock
sbb
jp
dec
les
aad
lock
push
xor
stc
and
cltd
popa
lcall
js
jno
mov
jbe
sarb
ss
in
int
pop
ror
and
cwtl
and
push
xchg
stos
aas
int3
adc
push
repz
fdivr
jge
into
mov
mov
mov
popf
insl
mov
sub
into
pushf
loop
js
push
push
jae
jl
loope
js
push
movsl
and
fmul
dec
das
decl
daa
mov
and
js
jo
sub
popf
xchg
sub
lock
hlt
push
jge
mov
inc
mov
ret
xchg
jl
jl
dec
xchg
insb
jb
cmpsb
pushf
xchg
aad
cmpsl
inc
stos
fadds
out
and
dec
daa
mov
incl
sub
sbb
ss
inc
sub
das
addl
insb
stc
mov
mov
lods
and
fcoms
stos
rcrb
lock
imul
ficoml
dec
stc
test
cs
jns
mov
push
into
bound
insb
nop
jno
dec
stos
les
les
mov
out
inc
clc
rcrl
out
xchg
or
xchg
mov
fmull
les
clc
pmaxub
jns
lret
push
sbb
inc
cmp
sahf
bound
out
imul
in
lret
inc
and
lods
and
cli
in
push
jecxz
pop
mov
in
mov
int3
pusha
cmpsl
js
in
or
je
addr16
mov
das
xor
call
ret
mov
push
bound
jbe
mov
mov
jns
out
insl
addb
or
sbb
sbb
cmp
xor
test
xchg
inc
dec
std
mov
ljmp
cmp
add
add
or
out
mov
pop
mov
inc
in
adcl
and
mov
mov
nop
pop
mov
imul
add
push
fdivr
movsl
pop
mov
daa
and
hlt
xor
fcoml
repz
into
xchg
xor
xor
xor
shlb
testl
addr16
pop
or
sarl
sahf
sbb
int
dec
nop
cli
call
push
cmpsl
push
sub
mov
jo
inc
cli
sti
rolb
cs
arpl
scas
sbb
lock
js
jle
addr16
bound
sahf
pop
xor
in
imul
xor
cli
imul
mov
insl
jge
fistl
insb
nop
rorb
cld
js
les
incl
lods
sub
sub
jo
sti
add
cmpsb
xorb
movsb
dec
sub
aas
js
hlt
out
jno
sarl
add
mov
insl
push
jmp
bnd
mov
cmp
inc
cmp
sub
call
lds
daa
mov
mov
lret
pop
mov
int3
test
sub
mov
in
pshufw
jecxz
cmp
adc
or
lret
mov
add
xchg
lahf
imul
push
cmpsl
lods
xorl
sti
inc
nop
push
jl
jae
sbb
add
pushf
gs
xchg
sub
scas
pop
jecxz
aam
divb
jo
jnp
jb
cmpsl
imul
cld
xchg
jne
shlb
add
clc
imul
mov
push
pusha
xor
add
shll
cli
pushf
pusha
andb
push
and
in
mov
jge
movq
call
add
push
adc
xor
lock
inc
stc
leave
daa
testl
test
hlt
gs
push
shrb
stos
inc
xchg
out
sbb
std
push
inc
scas
jge
out
clc
scas
jge
jmp
or
sub
lea
push
idiv
out
jle
add
jae
mov
rorl
jb
andb
jno
pop
mov
fs
out
push
pop
scas
add
mov
and
jnp
inc
addl
sbb
xchg
es
mov
cmpsb
popf
lock
shrl
xchg
inc
mov
sub
inc
sbb
sbb
lahf
pop
das
jnp
push
rorb
std
ret
cli
testl
xlat
bound
inc
stos
mov
mov
aaa
mov
jno
sub
fldenv
pop
jno
leave
xchg
je
fisubrs
jmp
adc
test
popa
jbe
or
ret
mov
cmp
adc
pop
repz
out
push
ss
mov
mov
jle
push
int
sti
subl
mov
add
leave
push
jae
pop
mov
shrl
jle
jmp
push
test
add
jge
orb
shrl
pusha
ror
jb
call
cmp
sub
xlat
ret
xor
test
jge
mov
adc
pop
pop
ss
jae
not
dec
jbe
pop
mov
inc
mov
stos
cmc
out
adc
test
xchg
mov
loopne
pop
lret
xchg
jne
jl
loop
scas
mov
out
pop
fistps
and
repz
mov
ljmp
lock
rclb
add
scas
sub
movups
pop
sbbl
cmp
xchg
cmp
pop
sub
push
xchg
inc
scas
scas
jmp
push
cs
js
cmp
nop
faddl
pop
arpl
xchg
dec
shr
fwait
mov
push
jne
lea
or
mov
adc
and
jmp
sub
inc
fiaddl
mov
aam
jecxz
jno
jecxz
outsl
dec
mov
lods
push
aas
push
pop
xchg
push
cmp
outsb
rol
xor
and
pop
popa
pushf
adc
inc
adc
stc
setns
mov
inc
repz
into
dec
scas
pop
and
cmpsb
inc
mov
shrl
or
push
sti
ret
cli
jecxz
cld
lcall
jg
je
jno
mov
stos
or
icebp
test
cmp
je
xor
call
sbb
jg
add
dec
aam
mov
inc
mov
jg
loope
dec
sub
cltd
mulb
xor
fs
inc
mov
cmp
cmp
movsb
fildl
sti
lcall
cmc
add
dec
sub
sub
and
inc
sarl
mov
jne
dec
mov
rorb
lea
jbe
xchg
iret
mov
dec
cmc
mov
xchg
push
ret
movsb
movsl
sub
dec
pop
std
subl
sahf
sub
les
loopne
pop
or
pop
push
push
lock
sti
pop
mov
lcall
cmp
jo
rcl
fcmovnu
aas
and
push
pop
add
mov
jae
jmp
mov
add
js
sahf
jns
or
in
cs
ds
daa
or
xchg
add
insb
movsb
lret
cli
mov
pop
mov
or
mov
std
js
add
cmp
pop
sahf
cmc
cli
sahf
sub
inc
mov
add
xchg
mov
stc
pop
in
mov
int3
or
mov
dec
adc
xor
lods
push
outsb
loop
lahf
outsl
inc
and
or
dec
adc
add
inc
lods
jns
jnp
outsb
mov
jnp
cli
js
adc
sahf
mov
ja
mov
push
inc
dec
mov
aad
xor
outsl
divl
insb
xchg
dec
mov
jns
in
movsw
adc
xchg
push
int
std
shl
mov
jmp
pop
xchg
sub
cltd
and
pop
xchg
mov
lods
sti
xchg
lret
dec
mov
xor
push
repz
in
ret
xlat
sbb
cs
xchg
inc
mov
mov
sti
ret
jns
jns
push
sarb
and
pop
xchg
add
push
mov
jp
int3
push
jp
jo
add
or
fdivrs
in
clc
sbb
hlt
sub
mov
inc
add
es
pop
pop
fs
pop
cltd
out
and
hlt
and
push
test
jecxz
push
dec
sarl
je
pop
out
addl
xchg
xchg
repnz
xor
mov
and
sub
orl
cld
xchg
push
push
lea
push
inc
mov
cld
push
daa
shrl
lret
and
lock
pop
or
rcll
sub
xlat
or
or
loopne
xchg
outsb
mov
shr
iret
pusha
add
daa
jno
adc
and
scas
shll
mov
push
mov
loope
cwtl
jbe
xlat
shr
push
add
push
ja
jg
mov
js
add
pop
cmc
outsl
enter
loope
in
lret
jbe
paddusw
sahf
js
push
or
rorl
lahf
pop
xchg
mov
sub
mov
icebp
int3
lods
mov
and
insb
cwtl
dec
mov
or
adc
inc
mov
lods
sahf
mov
jno
dec
adc
sbb
and
addl
jmp
push
fldcw
roll
sub
enter
sub
sti
cmp
xchg
fistps
icebp
xchg
dec
stos
pushf
mov
insb
sub
xchg
jp
movsl
movsl
les
pop
nop
push
sbb
pop
jle
push
out
or
clc
and
nop
jno
mov
ljmp
adcl
mov
in
fidivl
loopne
ror
test
ds
sbb
jo
dec
imul
jno
adc
fstl
shlb
js
mov
add
add
hlt
and
and
inc
adc
add
lea
pop
xor
xchg
cmpl
or
mov
inc
cltd
push
idiv
jmp
cmpsb
ja
jnp
and
xchg
inc
pop
push
mov
fs
test
rorb
call
sarb
daa
xlat
mov
push
dec
push
xchg
fildl
inc
push
mov
jl
push
xchg
sbb
inc
xchg
jns
insl
mov
sub
dec
sbb
add
jl
mov
shlb
pop
test
adcb
push
int
scas
lea
mov
dec
sub
ret
push
jg
dec
mov
mov
jmp
mov
sar
push
adc
xchg
xlat
in
push
scas
bound
add
dec
leave
push
jge
pop
fnstenv
dec
loop
jnp
cmp
adc
enter
sbb
insb
mov
arpl
sub
jbe
fsubrs
iret
in
push
xchg
decb
insb
icebp
adc
jmp
sti
movsl
pusha
push
fucom
push
fidivrl
lcall
mov
xchg
add
or
push
in
loope
jns
popa
sub
sbb
adc
adc
fsubs
sbb
xor
mov
mov
jno
sbb
testl
iret
xor
aaa
dec
jmp
ret
inc
out
je
jg
mov
or
fbld
stos
xor
cmc
roll
sahf
clc
adc
jnp
jne
test
sbb
orl
es
xor
or
add
xor
push
ss
sbb
push
mov
ret
aam
jne
pop
popa
popf
inc
push
pop
pop
imul
out
pop
js
and
fcoms
adc
aaa
and
sbb
out
or
rorl
push
pop
fcomp
adc
lcall
pop
mov
cs
scas
ja
imul
aaa
inc
jmp
cld
test
ljmp
ret
hlt
int3
cwtl
popa
fs
cmp
fldl
mov
fimuls
lock
pop
repz
and
xchg
test
cmp
push
sub
pop
pop
and
lds
cld
mov
out
pop
cld
je
inc
fiaddl
dec
cld
pop
push
lods
js
lcall
icebp
or
out
pop
xchg
inc
negb
jbe
das
out
xchg
dec
aas
out
sub
roll
mov
fs
cli
adc
ds
aam
adc
cltd
and
adc
mov
stos
test
sub
je
movb
pop
xchg
push
and
adc
add
cmp
xchg
test
test
adc
xlat
test
jns
test
test
cmovs
mov
or
incb
aad
dec
lret
imul
sub
roll
imul
repz
jnp
mov
xchg
sub
clc
std
out
icebp
inc
jb
cmp
cmpsb
or
push
mov
adc
in
inc
movsl
jb
out
mov
jp
push
loop
pop
cmc
add
xor
add
rorb
das
cli
sbb
xchg
cwtl
rcll
jp
sub
dec
mov
push
sarl
fndisi(8087
pop
out
pop
xchg
decb
ret
and
scas
pop
inc
mov
aam
mov
ret
xchg
bound
add
pushf
movsl
or
xor
adc
movups
xor
xchg
enter
test
pop
leave
dec
mov
test
fstpt
mov
fistl
xchg
fmulp
fsubl
mov
addb
push
ret
jmp
sub
hlt
sub
or
movsl
push
in
sbb
sub
add
rclb
add
imull
fbstp
mov
sbb
sbb
out
lds
xchg
pop
mov
xchg
jo
push
push
dec
orb
inc
test
movsb
outsl
sbb
and
xor
pop
lds
cwtl
push
and
xchg
or
mov
inc
out
cmp
push
push
mov
shll
fwait
add
sub
bound
imul
mov
push
mov
loopne
cmpsl
adc
in
inc
lods
mov
icebp
int
addr16
sti
rcrb
dec
loopne
inc
or
call
push
pop
push
inc
mov
xor
mov
pop
ret
jo
mov
push
ss
push
or
inc
es
sbb
jmp
jmp
loopne
in
imul
and
inc
xor
fidivrs
inc
test
fmull
xor
xchg
jg
pop
xchg
xchg
arpl
sub
adc
mov
lock
loopne
jle
xchg
jge
add
adc
inc
clc
add
mov
inc
popf
add
push
or
jg
inc
jecxz
repnz
mov
jo
gs
sbb
rclb
or
sub
out
mov
test
mov
mov
jmp
pusha
jo
insb
push
cmp
faddl
adc
mov
xchg
mov
gs
mov
mov
push
fs
pop
sbb
jge
xchg
cltd
out
mov
lds
add
mov
movsb
jne
fimuls
icebp
incb
bound
and
cmp
movsl
cltd
je
cmp
push
push
inc
mov
lods
xor
mov
repz
mov
pop
stos
imul
shlb
cmp
sub
addl
mov
inc
pushf
jge
mov
cmp
loopne
daa
mov
add
test
sbb
dec
mov
adc
cmp
enter
rorl
or
jle
popf
aam
ss
dec
pop
mov
add
das
jb
lret
incb
push
int3
push
imul
out
xchg
inc
fadd
insb
or
dec
cmc
cs
addr16
or
xchg
stos
adc
dec
test
mov
out
push
inc
jp
dec
push
cmpsb
add
push
ficompl
jecxz
sub
xor
stos
insl
cwtl
hlt
xor
scas
push
outsl
sbb
pop
sti
scas
pop
push
mov
rolb
mov
inc
cmpb
movsb
ja
lcall
jo
mov
les
scas
dec
mov
cmp
stos
pop
sub
call
adc
xor
mull
pop
fstps
hlt
pop
cmp
stos
psubusw
dec
jo
inc
pop
xor
push
scas
jp
fmull
jg
psubw
dec
outsl
hlt
sub
shrl
enter
aaa
sub
sub
dec
sbb
sbb
inc
cld
mov
xchg
je
cmp
arpl
cmp
add
cmc
or
out
mov
test
dec
xorb
push
lahf
jg
call
jns
aam
inc
push
jle
enter
pop
mov
insl
jne
inc
cmp
xchg
popa
inc
mov
rcrl
add
sahf
jno
aam
and
sbb
adc
loopne
add
aaa
pop
popa
and
or
iret
xor
cmp
lds
ja
dec
insb
sub
xchg
rcll
mov
dec
mov
adc
push
out
inc
dec
imul
out
adc
fwait
push
mov
mov
lea
jle
sub
je
aad
jcxz
repz
cmp
ds
xorb
cmp
scas
imul
mov
leave
outsb
ja
iret
sbb
jg
xchg
mov
xchg
test
les
and
call
out
in
xchg
push
or
cmp
or
lock
sbb
xchg
adc
dec
sbb
add
add
dec
dec
push
stc
test
pop
mov
insb
push
das
fistl
movl
jbe
shrb
push
js
add
sbb
nop
push
loope
jp
movsl
mov
test
mov
lret
ss
sbb
push
pop
inc
addr16
pop
mov
outsb
insb
mov
mov
push
andl
sbb
jp
sub
mov
lock
cmp
mov
mov
dec
std
xor
jmp
fs
xor
pop
mov
enter
jmp
sub
lds
add
dec
push
inc
sub
xchg
notl
push
cld
add
sbb
loope
je
jge
push
in
add
nop
pop
clc
rolb
jmp
jnp
outsl
jne
jbe
fstpt
ret
mov
int
loop
pop
addr16
or
push
repz
call
mov
add
psrad
xchg
pop
mov
lds
push
xchg
js
and
addl
mov
std
sub
into
pop
mov
enter
xchg
inc
add
xchg
pop
mov
int3
or
movsl
dec
or
incl
gs
or
fsubrl
xor
enter
pop
aaa
lcall
test
sub
in
push
js
sbb
fwait
xchg
inc
in
out
add
stos
pop
sub
push
fdivr
lret
jle
lret
cs
mov
cmp
xchg
mov
fucomi
cmp
add
push
cmp
xor
inc
add
lahf
mov
fwait
scas
mov
sub
mov
shr
fisttps
sub
cmp
xchg
mov
jne
outsb
out
sbb
popf
daa
add
add
aaa
adcb
bound
cmp
arpl
movsb
loope
mov
mov
pushf
xor
xchg
mov
in
test
test
mov
js
push
cmpl
orl
sarl
sub
sbb
aam
andb
popa
test
iret
lret
mov
dec
inc
mov
repz
adc
sub
outsl
mov
cmp
fdivs
shlb
dec
ds
clc
jmp
pusha
cmp
jecxz
subl
cmpsl
jle
fcomps
pop
int
ret
jns
jae
adc
sub
out
fcompl
push
bnd
lret
test
clc
push
xchg
scas
mov
mov
add
mov
adc
mov
out
push
std
push
push
mov
movsl
jo
lret
pop
jg
outsl
arpl
jg
adc
jl
je
lds
sahf
sbb
pop
jnp
loope
cmp
dec
mov
imulb
sbb
jle
jecxz
cmp
decb
and
pop
dec
repz
ret
xor
or
push
xchg
jle
ret
adc
dec
mov
xchg
js
inc
nop
rolb
xchg
mov
orb
ja
idivl
repz
or
adc
sub
xchg
pop
es
mov
insl
fimuls
fcmovnbe
into
stc
ljmp
jp
xchg
sbb
pop
and
cmp
jl
pusha
lods
ljmp
or
mov
jae
adcb
push
push
dec
xchg
scas
sbbb
sub
push
push
mov
into
pop
jno
mov
aad
pop
mov
notb
push
mov
mov
imul
cmc
mov
bound
mov
test
in
ret
and
aam
inc
rorl
add
cs
popf
and
das
movb
aas
stc
enter
fadds
repnz
inc
call
fisubl
test
inc
mov
sbb
jne
fisttpl
xchg
push
pop
cmp
add
adc
orps
outsb
and
das
lds
push
test
insb
lea
xchg
push
jns
daa
cmp
push
xchg
jno
hlt
sti
outsb
adc
pop
mov
pop
push
sub
imul
jmp
mov
subl
popa
clc
inc
mov
mov
push
jle
pop
xchg
stos
fimuls
push
mov
xchg
jge
rcrl
arpl
nop
mov
cmc
pop
xor
aad
cld
iret
and
cmp
inc
mov
stc
jmp
lcall
and
mov
mov
add
jmp
int3
ja
push
repz
push
ret
sub
push
paddusb
dec
stos
inc
jb
mov
sahf
push
mov
jae
in
pop
dec
pop
adc
ljmp
cwtl
pop
clc
add
xor
xchg
cmp
xor
mov
loopne
mov
jne
outsl
fsubp
ja
jg
stos
adcb
add
xlat
and
cli
xor
push
test
fwait
and
divb
mov
ja
pop
mov
jl
inc
pop
and
testb
std
or
push
test
inc
shr
out
divl
push
sti
cli
dec
fidivs
dec
mov
movsl
std
xchg
sub
push
jle
pop
imul
cmc
arpl
popa
pop
into
bt
mov
push
inc
ret
popf
stos
add
push
out
xlat
dec
shlb
push
or
jae
cmc
leave
add
sub
sub
mov
and
push
jmp
push
or
jl
jle
push
in
add
adc
hlt
jbe
adc
sbb
add
dec
inc
add
mov
loope
add
cltd
lahf
jo
dec
shll
stc
ds
popf
pop
inc
call
pop
or
and
xchg
dec
jbe
sbb
and
mov
cs
and
mov
pusha
pop
mov
or
push
hlt
mov
xchg
mov
enter
jae
scas
mov
bnd
xchg
std
sub
lock
out
push
xchg
jg
mov
cltd
dec
lret
ret
adc
pop
scas
ja
adc
push
xchg
mov
dec
mov
adcb
cmp
xchg
int
jl
mov
inc
cs
rcrb
std
int
enter
rcll
jo
insb
add
fistpll
jp
aad
ljmp
rep
fdivrl
stc
sub
xchg
jo
jecxz
dec
mov
fsubl
xor
mov
or
jp
test
xchg
test
inc
int3
loope
lahf
sti
insl
jle
scas
xor
dec
pop
push
mov
and
in
faddl
sbbb
int3
xchg
and
popa
sahf
test
rcll
add
and
pop
mov
adc
cmp
pushf
sub
xchg
jo
mov
xor
subl
hlt
jmp
jne
insb
repnz
sbb
xor
cmp
xchg
sub
test
test
xorb
sub
rolb
sbb
jge
add
test
and
xor
popf
jnp
pop
enter
mov
stc
add
cld
pop
lret
mov
push
xor
inc
test
daa
mov
pop
aam
clc
push
mov
std
inc
push
lds
dec
lock
pop
addr16
cmp
cli
add
add
sub
add
sbb
xor
jo
mov
mov
lret
adc
inc
fmull
push
add
add
xchg
jp
fsubrs
xor
ds
iret
jb
xor
popf
cld
jmp
cld
push
ret
jle
into
mov
jl
leave
lcall
sbb
cmpsl
jg
lea
ljmp
int
movb
xor
jle
fs
push
sbb
xor
insl
xor
mov
cmp
enter
sbb
rorb
jle
lahf
add
loope
pop
scas
jmp
jp
inc
popa
lret
cmp
test
dec
stos
jge
testl
jne
out
test
lret
fmul
dec
fildl
in
push
mov
add
test
adc
mov
mov
lds
pop
scas
movsb
pop
int
and
das
inc
stc
js
adc
das
bound
negb
xorb
aas
sbb
out
test
test
mov
add
push
push
jmp
inc
adc
add
xchg
mov
js
lock
jns
in
sarl
dec
fidivrl
out
inc
xchg
push
jmp
loopne
lods
test
rclb
jl
mov
adc
mov
dec
mov
push
nop
push
hlt
mov
es
cs
mov
js
push
and
rcll
out
xchg
shrl
push
jl
jge
xchg
and
mov
jb
mov
xlat
aam
sbb
or
arpl
mov
mov
out
pop
outsb
sbb
dec
test
aam
js
out
mov
pop
or
sbb
jbe
mov
aas
push
push
cli
mov
jnp
xchg
ret
sbb
mov
movsb
xchg
nop
xchg
dec
cli
repnz
push
fnsave
add
adc
arpl
push
and
inc
cmc
loopne
mov
cmpl
and
mov
dec
lods
loopne
xchg
pop
pop
test
repz
jns
mov
push
movsb
cmp
add
rcrl
mov
inc
loop
leave
and
cmp
nop
clc
in
js
shll
subb
mov
add
pop
or
mov
dec
imul
ja
jnp
xchg
jo
dec
inc
dec
lret
sbb
mov
add
mov
sarl
cmp
add
pop
fwait
mov
push
cmp
divb
cs
cmp
lea
pop
int3
jb
dec
sub
dec
sahf
ljmp
and
jmp
pop
lret
aaa
push
aas
test
daa
in
xor
int3
jmp
repnz
nop
and
movb
mov
add
shll
or
sahf
leave
jnp
mov
mov
out
outsb
mov
inc
or
pop
xchg
jg
outsl
mov
dec
mov
dec
or
in
mov
out
mov
xor
push
scas
divl
pop
roll
rorb
repnz
dec
xchg
and
inc
adc
fimull
out
fwait
cmc
or
mov
sbbb
xor
shll
mov
xchg
lret
jbe
addr16
xchg
jmp
lahf
pop
add
add
sub
enter
or
lret
jle
fwait
or
inc
out
std
xor
test
xor
jnp
sbb
jge
or
adc
subb
push
mov
enter
sub
daa
mov
jnp
nop
cwtl
sbbb
repnz
clc
call
leave
loope
mov
lcall
lret
jecxz
dec
sbb
sub
mov
rcrl
mov
sahf
out
add
or
jo
push
scas
mov
int
repnz
icebp
ds
pop
inc
pop
pusha
cmc
faddl
loope
sahf
imul
xor
cmp
dec
lcall
out
cltd
dec
mov
xorb
dec
mov
jae
pop
nop
mov
test
jae
inc
jae
or
pop
ja
out
and
mov
mov
cltd
jmp
cli
push
inc
xchg
adc
push
sub
adc
xor
in
lods
xchg
push
sarl
psubsb
loopne
jmp
cs
xor
mov
sbb
fdivr
aam
dec
mov
pop
mov
push
lret
insb
lahf
addr16
xor
sarl
sub
xor
inc
cld
inc
pop
cmc
out
out
pop
es
jge
lock
add
sub
fcmovnbe
or
into
jbe
fnstcw
push
xchg
lea
imul
inc
test
xlat
jecxz
movsb
push
mov
sub
jle
sub
jns
fcoml
add
cmp
addr16
test
mov
and
dec
cwtl
push
stc
or
fs
xor
xchg
jl
jo
inc
out
es
inc
mov
int
mov
pop
mov
mov
jp
rol
jo
add
push
mov
dec
and
push
xorl
jb
xor
inc
xchg
inc
ljmp
sub
ss
mov
inc
push
movsb
sbb
add
sbb
add
sub
or
dec
outsl
lock
inc
mov
pop
mov
sub
and
mov
push
popf
mov
mov
pushl
dec
cmpsl
push
leave
xor
jne
mov
les
hlt
int3
add
scas
insl
imul
decb
push
add
lds
ljmp
push
pop
mov
mov
sahf
mov
pop
pushf
jo
pop
mov
add
jae
mov
lods
dec
lret
add
pop
mov
dec
jge
push
aaa
int3
das
lea
and
push
lahf
fisubrs
jo
lret
jl
and
mov
mov
orb
xchg
insl
push
dec
mov
pop
mov
add
js
clc
jbe
dec
push
mov
ja
push
pushf
xchg
gs
orl
lds
xchg
add
aaa
push
je
mov
into
xor
lea
cmp
inc
aas
mov
xorl
xor
rcll
lods
push
mov
int3
lret
sbb
aas
inc
loop
jp
maskmovq
imull
fwait
jp
push
out
and
mov
or
fidivrl
flds
sbb
fisttpll
fnsave
das
sbb
lock
sbb
add
mov
push
hlt
or
jl
out
jmp
imul
stos
dec
mov
mov
cs
mov
aad
into
xchg
es
inc
and
out
or
and
mov
pop
loope
sarb
arpl
stos
and
repnz
cmp
rorl
and
scas
pop
dec
mov
stos
sti
pop
imul
mov
jb
stos
popa
ljmp
cmp
xchg
js
mov
xor
fnsave
clc
cmc
or
roll
add
mov
loop
pop
sbb
xchg
dec
mov
dec
mov
fs
int3
loopne
in
ror
or
sarl
dec
sbb
movsl
shr
pop
repz
popf
pop
and
mulb
ds
das
mov
add
fisubs
frstor
or
orb
mov
les
fisubl
nop
std
xor
mov
lea
inc
aas
stos
and
lahf
push
inc
dec
inc
orl
int
lret
out
cltd
mov
jmp
bound
mov
jle
out
mov
or
daa
in
fstpt
inc
xchg
push
mov
scas
dec
idiv
mov
cmpsl
pop
cld
sti
mov
jl
cmp
dec
mov
push
mov
sbb
sbb
arpl
jecxz
add
pop
call
loope
cld
sbb
push
xor
cmpb
repz
and
test
add
les
ljmp
cmp
mov
inc
test
sti
or
mov
mov
jl
pop
jecxz
jo
pop
xor
adc
leave
xor
cmp
xchg
or
pop
dec
push
cltd
mov
mov
ja
shrb
js
push
cltd
imul
add
movsb
mov
inc
repz
fstp
arpl
mov
mov
sbb
xor
and
sub
push
in
lret
push
into
sbb
xor
movsb
or
xor
dec
cli
fs
sbb
les
loopne
cltd
es
sahf
daa
pop
jno
stc
pop
ds
arpl
push
mov
gs
fnstsw
cld
scas
xchg
xchg
inc
xor
or
cld
rcr
adc
and
mov
subb
mov
pusha
fidivrs
mov
cmc
sub
pop
outsl
dec
or
lock
bound
sbb
mov
rcl
or
or
sub
sub
sbb
sub
mov
cmp
les
cs
mov
decl
fwait
mov
lds
call
aas
dec
addr16
xchg
jb
fisttps
orl
outsl
xchg
inc
scas
push
push
mov
orb
cmp
cmp
icebp
add
mov
lods
out
imul
pop
outsl
movsl
fwait
add
shlb
inc
addl
repz
dec
mov
mov
popf
mov
jmp
cmc
mov
imul
je
cwtl
rclb
dec
xorl
rorl
sbb
and
adc
mov
inc
mov
mov
lcall
arpl
outsb
dec
jnp
mov
ds
call
mov
xorb
push
mov
xchg
push
fcoml
jmp
in
std
cli
out
pop
mov
mov
mov
mov
lahf
mov
fs
cmpsl
jno
imul
inc
mov
cmc
xor
pop
into
movsl
mov
or
adcl
cmp
es
ds
add
ret
dec
pop
scas
mov
ljmp
xchg
sub
fnstcw
loop
jnp
sub
mov
lea
sub
xor
out
fimull
jnp
insl
inc
subl
out
or
add
jne
popl
dec
add
stc
pushf
push
xor
adc
mov
mov
negb
mov
imul
xchg
push
int
into
cltd
dec
xchg
jmp
mov
xchg
jne
js
lods
jle
mov
inc
jp
in
movsl
jge
ljmp
aam
mov
fabs
push
add
sbb
cli
and
fnstsw
roll
repz
jb
inc
adc
test
fistpll
cs
data16
and
out
ljmp
shl
sbb
daa
fimull
je
and
pop
push
jae
fwait
mov
xor
cmp
and
mov
clc
push
outsb
lcall
sub
into
decb
jmp
jno
imul
lds
cmp
int
loopne
cmp
mov
inc
scas
scas
push
insb
push
inc
dec
adc
fs
mov
shlb
xor
pushf
stc
lds
sbb
cmp
je
shll
jge
ss
fadds
inc
nop
xchg
std
sub
mov
xchg
pop
mov
fwait
xchg
fisubrl
xlat
inc
xchg
jns
mov
cli
lea
mov
or
loop
daa
lret
ljmp
aaa
jne
jle
sub
sub
nop
mov
push
lock
sahf
jb
pusha
test
ljmp
cmp
mov
sub
dec
add
pop
clc
add
clc
mov
adc
jmp
enter
add
imul
insl
icebp
or
test
mov
fcoml
sbb
aaa
test
stc
addr16
sub
pop
lret
sbb
lea
fbstp
cmpsl
jns
repnz
pop
cmc
fldenv
cmp
test
ret
gs
lds
mov
flds
sbb
add
ficoms
xabort
dec
jno
mov
sbb
jp
fadds
or
cmp
por
stc
mov
xchg
jg
sbb
shrb
xchg
push
xchg
jle
xchg
imul
mov
dec
adc
clc
add
jne
pop
rcr
into
sbb
jecxz
sti
xchg
inc
or
mov
xchg
cmp
pop
repnz
mov
aaa
jmp
mov
rcr
pop
clc
or
dec
test
mov
sarb
jo
pop
lret
or
cmp
xor
jnp
jge
dec
and
sahf
or
inc
cld
adc
inc
cmpsl
xor
mov
lock
cmp
mov
bound
arpl
dec
xchg
mov
inc
shlb
repnz
mov
or
das
pop
pop
dec
push
popf
cmp
adc
push
repz
jle
jmp
mov
jmp
movsl
aaa
test
push
test
xchg
jg
dec
mov
sarl
pop
add
lret
xor
nop
ja
test
shlb
cmpb
movhps
imul
mov
mov
mov
mov
jle
insl
or
jmp
in
and
sub
das
lret
adc
or
or
movsb
bswap
and
pop
andl
in
das
stos
sbb
jge
rorl
sahf
add
bound
pop
int3
and
sbb
xor
popf
sub
xor
or
clc
dec
mov
fucomp
add
jg
xchg
cmp
push
and
sbb
dec
fnstenv
cmp
sti
insl
cwtl
test
cwtl
jne
fwait
dec
cmpsl
push
mov
mov
jo
bnd
pop
test
mov
mov
hlt
cmp
push
and
pushf
jp
add
cmp
pop
push
and
cmp
insb
push
popf
and
in
aas
filds
push
push
xchg
mov
pop
mov
int3
pop
inc
pop
pushf
inc
mov
mov
jae
mov
and
sarl
bound
cmp
xchg
jl
mov
pop
pushf
dec
jb
pop
jae
fs
mov
cmp
data16
bound
adc
and
loop
adc
repz
xchg
lock
mov
inc
cs
nop
jge
outsb
and
nop
pop
dec
mov
or
aas
subl
imul
nop
outsl
cli
sub
inc
stc
cmp
cmp
or
xor
pop
and
shrl
pmaddwd
or
jg,pt
pop
jle
push
xchg
cmp
xchg
pop
movsl
cmpsb
add
incl
xchg
cld
aad
icebp
inc
mov
mov
test
testb
sahf
push
or
ljmp
repz
jo
repz
scas
jns
pop
fiadds
mov
imul
cli
mov
stos
repz
mov
decb
mov
xor
cmp
mov
imul
imul
push
jmp
lock
push
jmp
add
clc
cmp
cld
add
cmc
pop
or
pop
outsb
fstl
jmp
subb
aaa
mov
add
push
repnz
push
or
jo
xchg
push
fbstp
inc
ret
xor
repnz
push
pop
mov
sbb
hlt
push
in
and
in
mov
inc
or
rorl
mov
adc
jp
dec
pop
dec
mov
xchg
cltd
scas
popf
pop
mov
roll
push
dec
mov
shll
xchg
std
mov
or
push
sub
jno
nop
aad
loope
fdivp
add
xor
mov
divb
mov
mov
cmpsl
mov
xchg
idivb
test
mov
push
ret
mov
jns
jg
aaa
xchg
sti
mov
dec
fldl
cmp
sub
cmpb
jmp
sbb
jns
push
call
arpl
in
and
sub
fidivs
das
int
rclb
inc
lods
pop
fnstcw
test
std
js
ss
daa
ljmp
inc
push
mov
repnz
dec
lods
lret
pop
hlt
xor
test
aam
jecxz
lret
pusha
cli
push
xor
push
fnstenv
cs
adc
and
sahf
dec
notl
int
or
xor
xor
int3
sub
sti
sbb
add
loopne
mov
mov
push
loop
inc
lods
inc
xor
push
inc
mov
addr16
push
xor
divb
enter
sbb
out
rclb
dec
mov
shrl
cli
mov
or
mov
hlt
dec
subl
dec
movsl
sub
jne
pop
dec
movsb
jno
mov
adc
jg
ficoms
int
aam
into
xchg
je
mov
dec
jmp
push
xlat
and
xor
cmc
xor
xchg
arpl
adc
pop
outsl
repnz
adc
xor
push
loope
jnp
jmp
mov
inc
jmp
push
cld
xchg
out
cmp
mov
sub
mov
dec
fwait
je
out
add
or
int
je
dec
stos
lret
push
lock
leave
outsb
out
and
mov
xor
rorb
add
into
cmp
jecxz
xor
stc
and
fistpl
pop
lcall
testb
enter
dec
mov
dec
sahf
data16
stc
adc
lea
xchg
jno
test
dec
stc
dec
mov
pusha
push
mov
push
xchg
pop
sub
dec
lahf
enter
push
hlt
sub
adc
int3
test
jae
shr
sub
mov
movl
jnp
sub
jno
sub
aam
mov
mov
mov
push
mov
inc
mov
fwait
insl
mov
lret
dec
das
add
roll
sarb
ss
into
or
xor
xchg
jl
mov
lods
push
ljmp
jno
mov
js
mov
ds
push
pushf
mov
clc
xchg
sub
lret
xor
jne
rolb
push
mov
test
push
mov
cmp
jns
sbbl
iret
and
idivl
fst
pop
enter
lcall
fs
xor
aas
mov
sbb
mov
popf
subl
pop
mov
sub
mov
fs
repnz
loop
mov
and
js
inc
test
negb
inc
lea
mov
pusha
mov
mov
stos
sbb
and
mov
jecxz
roll
test
mov
test
jb
fdiv
pop
mov
test
sbb
push
jecxz
and
and
rolb
sub
xor
sub
int3
test
ds
dec
test
sbb
jbe
movsl
outsl
scas
pushf
jo
xchg
jp
rcll
pushf
xor
adc
clc
fldl
mov
xor
and
pop
mov
aaa
out
js
xor
fidivrs
or
jo
jge
icebp
pop
push
lock
pop
in
test
mov
enter
xchg
cmp
jno
inc
xchg
dec
add
mov
pop
cmpsb
decb
lock
mov
adc
rol
dec
xchg
cmp
sbb
dec
dec
cli
pusha
push
incl
rolb
mov
dec
lock
dec
movsl
arpl
leave
mov
ret
nop
popa
inc
mov
in
jb
mov
jmp
lods
mov
hlt
lret
rorb
ret
rcrb
fsub
and
jge
dec
int3
sub
rcrb
mov
pusha
push
mov
loope
lods
ja
lock
loop
scas
mov
mov
or
cmp
xchg
cmp
xor
rcrl
push
sub
incb
repz
in
mov
hlt
mov
lahf
sub
adc
iret
or
repnz
jmp
mov
fbld
test
mov
movsb
mov
pusha
mov
int3
mov
pop
dec
cmpl
scas
cmp
sbb
scas
xchg
ljmp
lds
gs
lods
adc
or
in
femms
and
sub
jmp
inc
stos
insb
push
ds
mov
inc
mov
call
mov
in
xchg
push
push
jns
xchg
mov
xchg
lds
mov
dec
xchg
cld
cs
mov
iret
repz
aam
xchg
dec
pop
loop
into
xor
sub
fldenv
subb
cs
lods
jne
movsb
sub
push
xchg
test
out
mov
sub
lcall
bound
mov
xchg
mov
cs
outsb
test
cmp
add
and
xor
leave
ror
cli
and
push
icebp
shrb
dec
addr16
push
test
or
das
test
sbb
sti
cmp
pop
scas
push
scas
fwait
dec
mov
cmp
and
mov
fsubrl
punpckhdq
cmp
out
jle
pop
push
cmp
xor
xlat
outsl
mov
dec
out
repz
arpl
sbb
push
xchg
bound
bound
inc
jp
ds
idivl
aas
std
rolb
xchg
daa
and
mov
aad
outsl
xchg
or
lods
xor
clc
and
mov
mov
or
cmp
push
fsqrt
cmp
xor
mov
lock
mov
pop
aaa
xor
mov
fstpl
xchg
imul
idivl
xchg
inc
xor
insb
repnz
ret
push
lock
jbe
add
sbb
fmuls
and
push
dec
lods
jg
xor
xchg
fwait
xchg
lret
sbb
inc
sub
pusha
fdivrl
and
enter
fsubr
or
pop
xorb
cmp
js
add
sbb
inc
jg
adc
aaa
lahf
daa
cld
sub
lahf
inc
in
daa
cwtl
inc
lret
or
test
jo
inc
lea
xlat
jns
push
inc
mov
loop
mov
cmc
inc
jae
jbe
xchg
dec
cltd
lahf
dec
stos
sbb
mov
jg
or
mov
mov
das
push
mov
xchg
push
in
push
xor
aad
fldl
decl
xor
arpl
dec
mov
dec
adc
xor
push
lea
sbb
rorb
cmpsl
dec
icebp
or
daa
aam
mov
pmaxsw
pop
negb
add
aas
orb
push
hlt
xor
and
add
loope
cmpsb
loop
cli
push
dec
pop
pop
int
or
adc
cmp
jmp
loop
pandn
sbb
repnz
iret
sbb
cltd
push
jbe
inc
jp
movsb
movsb
mov
imul
bound
inc
mov
sub
mov
sub
adc
mov
aaa
aam
cli
popf
cmpsl
aas
mov
dec
test
push
adc
jb
decl
lock
imul
mov
test
mov
jno
cmp
mov
xchg
outsl
or
mov
sub
int3
mov
ret
or
pop
fidivs
in
xorb
or
loope
icebp
jl
xchg
out
lret
jge
xlat
push
and
mov
pop
idivb
lret
mov
je
ja
out
cld
ficompl
xor
xchg
out
sub
pop
clc
jmp
push
incl
fwait
jecxz
xor
cltd
paddusw
daa
repnz
fisttpl
hlt
jo
int3
sub
lret
inc
mov
movsl
jb
enterw
mov
pop
xor
inc
pushf
imul
jmp
push
outsb
outsb
jg
lret
sub
pop
xchg
mov
pop
icebp
pop
or
das
fstpl
popf
xchg
jmp
shrl
cmp
add
orb
imul
mov
aaa
cmovge
pop
jl
test
repz
mov
push
iret
cmpsl
ja
mov
out
mov
push
rorl
sub
xchg
push
mov
into
test
pop
testl
cmpsl
js
dec
add
inc
mov
and
ja
inc
pop
daa
iret
mov
inc
sub
ret
cmpl
add
and
je
aaa
lds
ljmp
iret
inc
setl
int
or
sub
dec
stos
scas
out
or
add
cmp
xchg
lds
repz
sahf
fs
sbb
mov
sarl
repnz
mov
mov
leave
or
pop
dec
mov
inc
mov
shlb
lds
je
adc
add
mov
dec
mov
push
dec
jmp
mov
mov
outsl
nop
cmp
ret
popa
mov
mov
in
dec
push
insl
fwait
pop
cmpsl
xor
add
js
mov
cmpsl
mov
xchg
cmpsl
adc
jmp
ret
les
dec
cld
sub
stc
adc
pushf
jp
sub
outsl
negl
outsb
mov
push
popa
call
lahf
insb
mov
add
pop
mov
cmp
pop
add
ret
xor
outsb
aam
in
xor
pop
fpatan
mov
mov
shlb
callw
aas
std
ss
sbb
mov
fwait
and
fnsave
jbe
cs
in
pop
int3
ds
xor
dec
repnz
cmc
xchg
and
dec
lahf
mov
sarl
dec
insl
ds
mov
int3
pop
call
dec
mov
add
jecxz
push
jp
orb
cmp
lds
in
jnp
stos
clc
sbb
sbb
sti
xor
mov
adc
icebp
mov
shrl
mov
mov
sub
aas
jmp
nop
push
and
mov
out
jge
xchg
movnti
jmp
xor
push
xchg
dec
out
int3
sbb
mov
xor
loop
mov
inc
cltd
out
aas
or
sbb
bound
idiv
mov
fldl
sti
arpl
into
xor
xorl
movsl
and
sbb
sbb
mov
repz
daa
rcrl
jle
ret
and
xlat
movsb
js
inc
pop
loope
mov
add
and
cli
sbb
pop
jo
dec
inc
test
pop
sbb
sub
dec
fsts
mov
cmp
add
or
sub
dec
inc
jge
xchg
add
pop
pop
lods
icebp
cmp
sbb
jp
popa
daa
pop
mov
xor
shrb
pusha
cmpl
dec
sti
adc
sahf
add
lahf
push
jle
inc
mov
push
paddb
pop
mov
push
mov
int3
aad
jae
lcall
xor
sbb
xchg
insb
xor
cmc
daa
and
or
in
lock
loope
pop
divl
inc
fisttps
mov
popl
ja
dec
imul
xchg
out
stos
adc
sub
jmp
notb
xor
lret
loope
loop
sarb
idiv
daa
jecxz
aas
adcl
scas
enter
jns
or
pop
and
and
sub
mov
mov
cmp
dec
mov
push
xorb
fs
jo
mov
push
cwtl
jae
jne
jae
popf
xor
or
loop
mov
aam
lock
movsl
mov
test
outsb
notb
pop
mov
aam
lcall
fistpll
jae
dec
mov
fcoml
data16
mov
insl
aad
mov
and
inc
stos
jge
les
pop
sbb
mov
xchg
adc
leave
imul
add
into
inc
jo
fdivrp
mov
movsl
rcl
jmp
es
das
xor
mov
jbe
fs
aam
push
xchg
adc
jecxz
xchg
and
scas
xchg
shll
scas
pop
movb
add
inc
sub
sub
test
push
sbb
and
xchg
mov
sbb
or
xor
mov
xchg
xor
add
pop
shlb
pushf
mov
xlat
mov
xchg
add
jbe
repnz
icebp
or
inc
sbb
es
mov
lods
cmp
fiaddl
addb
push
sbb
mov
pop
hlt
in
xorl
test
mov
mov
daa
adc
arpl
sub
into
jnp
repnz
mov
jno
lods
aaa
pop
int3
xor
lahf
sub
inc
mov
xchg
jge
inc
cmp
into
rorl
cwtl
aad
in
mov
mov
lcall
clc
jb
mov
xchg
inc
add
enter
dec
cli
loop
stos
in
lods
roll
xchg
les
jg
lret
xchg
orl
mov
roll
in
pop
shlb
mov
xor
jb
in
lret
sbb
rcl
xchg
push
xchg
ljmp
and
mov
sbb
pop
mov
xchg
mov
mov
js
jl
movsw
xor
imul
or
sbb
xchg
int3
xchg
pop
scas
mov
pop
jnp
mov
ljmp
and
mov
bound
das
call
clc
cmpl
inc
movsl
inc
lcall
test
jg
test
dec
dec
xor
rcrb
jns
clc
cmpsl
cmp
fsubrl
into
ss
sbb
lcall
insb
mov
jb
mov
test
in
loopne
sbb
jns
mov
sbb
aaa
adc
xor
xchg
fiaddl
aas
push
or
js
into
subl
push
cli
or
jge
notl
mov
pop
or
in
jecxz
in
clc
xchg
sbb
leave
sbb
icebp
sub
iret
stos
std
pop
scas
jp
lock
dec
scas
fistps
cmp
in
push
jle
sbb
rclb
jnp
subl
push
or
fisttpll
dec
jno
cwtl
pop
push
add
jmp
jg
xchg
lds
jns
leave
je
outsl
jg
int3
daa
jnp
pop
jbe
int
mov
mov
aas
hlt
push
nop
mov
fistps
sbb
cmp
and
les
dec
fdivr
addl
into
inc
pusha
adc
nop
popa
scas
mov
ror
xchg
dec
mov
dec
lods
call
jl
adc
stos
in
push
cmpsl
adc
outsb
scas
pop
sub
lahf
hlt
out
push
add
stos
adc
push
adc
xorl
xor
fidivrs
xlat
lcall
xchg
iret
ja
adc
mov
lods
sahf
iret
rcrb
push
mov
or
mov
push
pop
lret
dec
mov
mov
cmpsl
mov
aam
jae
push
mov
pushf
mov
faddl
mov
andl
lods
lock
jp
scas
mov
fnstcw
and
std
rorl
in
push
and
test
ljmp
nop
jge
ljmp
jb
inc
jmp
rcrl
mov
mov
shl
test
insl
jbe
sub
fmul
mov
mov
sub
rsm
fisttps
cltd
jecxz
sbb
and
inc
dec
aad
push
xchg
and
shlb
pop
test
data16
rorb
leave
jmp
adcl
mov
cmpsl
add
mov
lret
test
lcall
ret
cmp
and
and
add
ds
repz
mov
outsb
xchg
fiaddl
je
test
push
inc
cmc
js
add
cmp
or
pop
imul
repnz
inc
mov
in
mov
inc
fistpl
inc
insb
pop
imul
stos
fs
xor
clc
or
or
repz
fdivl
lods
pop
xchg
jae
dec
nop
xor
adc
es
mov
xor
movsb
push
push
dec
mov
dec
push
mov
les
sti
or
sub
cmpsl
pop
push
sahf
pop
mov
jge
mov
mov
jbe
and
jb
xor
int
xlat
je
je
and
pop
fistps
mov
int3
or
sbb
xchg
sub
ficomps
cmp
cmpb
icebp
push
mov
insb
fyl2xp1
push
stc
xor
push
jb
cwtl
aad
adc
insb
mov
add
jo
xchg
in
sbb
add
pop
insl
cmpsb
sbb
cmp
add
sbbb
cmc
add
iret
pop
fnsave
pop
mov
xchg
add
sti
ljmp
sub
into
aad
mov
mov
pop
stc
push
cmc
aas
push
test
out
and
rcll
test
or
adc
lock
lea
or
mov
pop
adc
xchg
mov
stc
scas
mov
shll
dec
icebp
xor
test
shl
dec
add
stos
inc
lods
mov
xorb
push
mov
dec
mov
pavgb
lods
pop
dec
shr
sbb
xchg
in
mov
jp
inc
mov
add
xchg
dec
mov
pop
outsl
mov
repz
dec
test
mov
and
fcmovnb
adc
pop
xchg
loop,pn
xor
testb
daa
or
adc
jne
rolb
adc
or
icebp
cmp
fcomip
fstpt
and
inc
hlt
adc
cltd
scas
fisttpl
sub
push
xor
lcall
fs
sahf
inc
cmpl
jb
adc
pop
sub
cmpb
mov
ret
adc
xor
mov
push
scas
ret
mov
mov
mov
cmpsb
jmp
mov
lods
xor
jecxz
jge
cmpsb
mov
mov
je
or
sbb
pshuflw
stos
movaps
dec
cmp
mov
fsub
rclb
xlat
mov
cld
out
aad
ja
sbb
test
push
jmp
rorl
stc
mov
xor
test
cmp
mov
daa
data16
mov
hlt
push
ret
xchg
enter
dec
stos
int3
mov
push
cmp
sbb
pop
or
mov
or
push
mov
hlt
pusha
loope
jecxz
pop
push
sarb
xor
xchg
cmp
mov
fs
inc
push
pop
out
cmp
push
imull
lods
and
les
test
ret
repz
std
cmp
jae
outsl
sbb
jmp
jp
fbld
sub
test
lea
pop
mov
fcomps
sub
mov
ja
mov
adc
xor
mov
imul
mov
ret
jge
mov
test
pushl
mov
lods
stc
aas
or
mov
rol
mov
lahf
jbe
inc
xorl
in
add
cmpsb
and
xor
and
mov
fimull
lahf
adc
adcb
popa
add
or
inc
jmp
dec
mov
mov
divb
mov
add
aam
jnp
sub
pop
insl
mov
dec
mov
imul
in
push
inc
cld
push
inc
push
or
fwait
sbb
push
lret
enter
sub
add
inc
loop
push
js
mov
in
out
test
mov
cmpl
push
lods
xchg
addb
sbb
inc
stc
fldt
aam
inc
and
js
mov
dec
push
gs
cli
popf
mov
rorb
rcrb
pop
lcall
ja
imul
in
pop
or
or
bnd
inc
mov
jo
shrb
and
fistpll
sti
mov
shl
push
daa
add
int
das
pop
or
std
jg
loopne,pt
int
or
push
and
js
xchg
add
daa
jg
push
mov
int3
negl
pop
dec
shrb
pop
xor
xor
push
pop
pop
pop
aaa
mov
mov
push
hlt
out
and
mov
adc
sbb
adc
xchg
mov
lock
loope
fdivrs
aas
sarb
iret
popa
imul
out
dec
mov
cmp
xchg
pop
test
dec
ss
xor
hlt
push
mov
sbb
xchg
add
mov
push
mov
mov
aam
jae
sbb
cmp
dec
fists
icebp
push
or
scas
mov
dec
pop
in
jl
jle
inc
add
pop
lahf
leave
jne
adc
mov
jp
insl
arpl
insb
test
xchg
icebp
push
rorl
sub
fbstp
and
pop
ljmp
cwtl
cwtl
adc
pusha
cli
dec
xor
sbb
shll
dec
dec
jb
add
fwait
sbb
fstps
inc
shll
ja
movsl
loop
inc
icebp
cmp
inc
gs
inc
and
cmpsb
aas
in
sbb
pop
std
inc
xchg
push
inc
movzbl
fs
mov
xchg
pop
ret
shll
insb
test
jp
inc
dec
jnp
xor
sti
mov
ds
imul
ljmp
outsb
ss
mov
arpl
mov
popf
cmp
inc
fwait
and
pop
or
sub
leave
mov
pop
lcall
push
lods
aas
pop
cmp
or
jo
insb
cmc
mov
jae
mov
shr
adc
aaa
dec
into
xchg
adc
dec
out
aas
int3
ss
mov
into
addr16
scas
inc
jp
inc
stos
test
in
mov
xchg
mov
scas
pop
xchg
cmp
jns
test
clc
push
jns
cmpsl
adc
outsl
int3
movsb
dec
hlt
imul
cmc
cmp
add
insb
into
xor
sub
ret
xor
mov
pop
mov
insb
adc
les
mov
jle
mov
popa
push
inc
out
mov
dec
dec
adc
addr16
pop
bnd
add
or
test
add
pop
push
pop
cmp
push
lock
mov
adc
inc
pop
mov
imul
je
dec
pop
daa
cmpb
fstps
lahf
cwtl
addl
sbb
lods
cmpb
jnp
je
popf
aaa
dec
dec
testl
jp
aaa
or
out
lds
sbb
and
fidivl
in
out
sub
sub
fcompl
or
or
push
lcall
cmpsl
insb
mov
add
pop
sbb
push
mov
test
jo
mov
cmp
into
mov
aam
in
add
dec
sbb
cmp
notb
jle
mov
stos
inc
adc
lea
lret
sub
sbb
repnz
jmp
mov
add
dec
jbe
inc
pop
enter
fwait
scas
andb
addr16
std
bound
dec
mov
cmp
lock
mov
aas
sbb
cmpsb
mov
pushf
movsl
aam
in
jle
jo
ror
popf
dec
not
xchg
push
icebp
jae
mov
test
jo
scas
sbb
ds
clc
and
out
xchg
mov
movsl
inc
aas
test
sahf
arpl
xchg
or
jmp
test
or
pop
test
loope
add
leave
in
icebp
in
or
enter
ss
adc
add
xor
xor
aas
adc
es
enter
mov
lret
xlat
lcall
push
push
mov
adc
in
std
dec
icebp
sub
stos
aaa
movsl
sub
pop
das
stos
push
lcall
add
pop
sub
in
adc
fs
cmc
or
adc
xchg
rorb
mov
pop
sbb
test
fisubrs
ss
ja
xchg
cmpl
mov
cmp
outsl
imul
sbb
lret
loop
mov
add
loop
mov
cs
cld
imul
scas
jle
dec
mov
or
pop
cwtl
pop
xorl
push
lahf
les
fldt
mov
inc
fwait
imul
sub
call
add
sbb
imul
jg
jl
add
fsubr
and
not
push
aas
sub
cmp
sbb
stos
js
mov
movsb
inc
in
std
jo
shrb
cmp
imul
in
or
mov
fldcw
cmp
add
push
or
push
rcrb
enter
mov
lret
cli
ficomps
cmc
sysenter
sahf
loopne
enter
sbb
lahf
arpl
mov
test
xchg
sub
push
sub
mov
out
push
movsb
push
xlat
push
rep
stos
push
jbe
repnz
sti
xor
and
and
lea
pop
shlb
push
repnz
push
arpl
test
repnz
pop
inc
push
push
stos
pop
pop
movsl
jl
negl
scas
movsb
jl
and
cmpb
jo
mov
mov
aas
roll
mov
rorb
dec
sti
push
fildl
adc
sbb
sub
and
or
xor
jge
lea
hlt
xchg
int
mov
jle
xor
or
pminub
mov
stos
mov
and
in
xor
stos
popf
mov
movsl
outsl
cwtl
stc
aas
aas
adc
bound
and
cmp
xor
lds
and
fdiv
add
xlat
or
push
dec
js
dec
lea
xchg
lcall
mov
cmp
lods
jg
inc
fiaddl
or
into
push
jle
and
adc
xchg
mov
xor
or
xchg
stos
ja
push
dec
scas
sub
push
mov
aam
imul
mov
lretw
jne
lea
js
mov
test
pop
lods
mov
mov
mov
mov
and
sbb
test
and
lret
push
or
insb
pushf
mov
sub
sbb
loope
inc
mov
or
xor
cmp
aas
sub
subb
stos
lds
pusha
mov
cmp
bound
xchg
sub
ljmp
ss
daa
push
ljmp
fldl
imul
ds
neg
xor
push
xchg
je
insl
cld
add
insb
sbb
mov
add
mov
dec
sbb
shl
stos
sub
push
push
xchg
adc
cmp
jnp
mov
les
out
mov
hlt
xor
push
ret
movsb
pop
mov
mov
xchg
ja
or
divb
sbbb
int3
aaa
shlb
subb
pop
nop
xchg
push
xorl
mov
lods
outsb
call
jae
pusha
aas
int3
xor
out
pop
mov
sbb
and
int
adc
sub
cmp
xchg
les
jbe
inc
mov
rclb
popa
xchg
pop
addb
mov
adc
mov
popa
adcb
andl
sbb
dec
jb
rorb
fwait
xadd
test
repnz
and
fcom
jno
pop
cmpsl
jb
repnz
xlat
and
mov
popa
ja
dec
and
jno
or
xchg
inc
cwtl
dec
bound
xchg
fwait
inc
loope
push
xchg
fs
test
sahf
and
sahf
inc
jecxz
sti
pusha
push
inc
inc
shl
xchg
and
fstpt
jmp
dec
sbb
push
sbb
or
jmp
push
mov
mov
xorl
in
pop
jmp
insl
std
xor
mov
jnp
dec
es
pop
dec
mov
ficomps
in
sbb
aas
push
inc
cmp
in
inc
sub
mov
or
in
clc
or
push
cli
and
adc
push
mov
mov
hlt
outsl
cmpsl
push
mov
sub
sub
sub
adc
or
loopne
into
in
inc
jecxz
cli
cmp
cmpsb
push
sbb
and
das
cs
xchg
dec
mov
cmpsl
stc
cmp
notb
into
mov
cmc
or
sbb
stos
jle
stos
dec
mov
sahf
pusha
mov
outsl
mov
dec
repz
inc
scas
dec
mov
or
shll
sub
cmp
push
mov
or
xor
insb
jmp
xchg
mov
pop
sbb
mov
jae
sub
dec
iret
add
inc
mov
pop
jo
je
imul
subl
inc
lods
push
pop
fistpll
es
inc
adc
push
mov
movsl
adc
int3
add
push
popf
pusha
sbb
cmp
add
xor
test
adc
loope
in
xchg
jae
adc
pop
mov
lds
mov
and
mov
sahf
dec
rclb
mov
imul
add
ja
scas
push
sbb
adc
add
pop
mov
or
stc
pmovmskb
jecxz,pt
aam
aaa
jbe
jnp
dec
cltd
cmc
or
rclb
mov
lret
sahf
mov
fisubs
jo
dec
push
scas
jp
jnp
xchg
push
jle
jp
call
repz
sahf
inc
xor
adc
test
test
adc
aas
aam
fidivl
int3
je
adcb
test
cmc
and
leave
mov
negl
fstpt
int
dec
repz
and
shrb
les
xor
push
popa
push
mov
leave
scas
js
add
cld
or
in
sbb
mov
lock
int3
jg
jnp
notrack
enter
cmp
lahf
xchg
pop
lds
cmp
jne
cli
mov
mov
mov
fists
int
pop
arpl
mov
bound
in
enter
ljmp
cmp
pop
cld
sbb
cmp
add
test
cmpsl
cmp
into
and
pop
or
xor
add
and
cmpb
inc
mov
jo
cli
sbb
pop
rorl
sub
lds
dec
sbb
xsha1
cmpsb
dec
dec
adc
sub
pop
cmpsl
push
lds
jecxz
jo
repz
push
fisttpl
ret
in
jle
fists
mov
adc
mov
fstps
jo
pop
inc
dec
inc
rcrl
and
cmp
pusha
mov
loope
pushf
dec
outsl
lock
xor
add
mov
add
test
sarb
int
and
insb
mov
cmp
push
rcr
pop
stos
jne
outsl
mov
dec
cltd
in
subl
pop
mov
jns
pop
jbe
sub
dec
jb
jle
pop
jb
add
ljmp
mov
shll
fcmovnbe
repz
je
int
inc
mov
sub
lret
mov
stc
push
and
cmpsl
faddl
popa
leave
sub
std
cld
insl
jne
cli
aas
dec
jmp
pop
enter
jge
repnz
pmaddwd
dec
addr16
mov
xchg
lds
cli
sbbl
dec
mov
pop
int3
xchg
lret
cld
ss
and
inc
sbb
dec
fisttps
mov
pusha
stos
mov
jmp
mov
clc
xor
xchg
mov
enter
pop
mov
cmp
in
or
or
pop
jecxz
or
leave
xorl
ss
daa
add
sbb
ja
mov
push
jno
int
in
pop
pop
pop
int
int
and
repz
je
mov
jecxz
popa
add
push
hlt
or
ret
add
jnp
stc
lea
mov
ds
cmp
mov
shrl
ds
rolb
sti
int
ja
fstpt
adc
iret
int
cli
cmp
pop
or
cmp
adc
or
jmp
dec
add
add
xlat
or
xor
jb
dec
push
jnp
outsl
out
add
outsl
jne
pop
mov
push
leave
mov
xchg
sarb
outsl
in
fimull
shr
movsl
int3
cmpsb
sub
es
inc
mov
lret
cmp
pop
adc
das
test
jb
jmp
les
adc
sbb
mov
test
xor
cmpsb
out
mov
daa
xchg
fsub
add
iret
inc
cmp
loope
in
dec
xchg
inc
or
and
sub
pusha
orl
jl
mov
test
push
mov
and
xor
inc
or
pushaw
pop
out
mov
or
das
mov
fadds
je
cli
cmpsl
out
data16
or
test
das
jl
rolb
out
fistps
inc
fprem
mov
sub
add
lret
dec
aas
clc
pop
int
cmp
insb
ljmp
push
xchg
test
jo
cmpsl
inc
out
xchg
nop
incl
pop
xchg
cmp
add
mov
inc
adc
mov
adc
sahf
in
aad
jmp
and
insb
sub
ss
add
or
lods
cmp
mov
in
adc
mov
jge
ficoms
push
je
push
add
xchg
hlt
xchg
xor
aam
jns
push
mov
lret
test
and
gs
ficompl
scas
shll
xchg
cld
scas
sub
pop
cli
xchg
sbb
push
or
or
mov
sbb
dec
jmp
mov
les
ljmp
jns
lret
jnp
or
push
dec
mov
cmp
hlt
pop
gs
mov
add
sbb
push
jbe
std
inc
add
pextrw
mov
pop
push
popa
and
pop
fs
lcall
push
cmp
adc
lods
mov
leave
ret
mov
mov
mov
dec
stos
xchg
ja
mov
pop
scas
adcl
jno
mov
mov
mov
cmp
jge
icebp
vcvtpd2dq
dec
sbb
orb
sar
jg
push
and
shlb
rorb
or
sub
push
adc
test
mov
adc
add
fadd
in
aaa
jle
icebp
mov
cli
not
out
pop
fsts
clc
xchg
ficoml
adc
pushfw
fbld
adc
popf
loopne
cmp
movsb
pop
cmpsl
mov
xor
insl
bnd
out
sar
pop
push
nop
das
inc
pcmpgtw
or
fcoms
sti
mov
adc
add
or
testl
lret
or
sahf
or
into
sub
jo
push
mov
repz
mov
and
data16
subb
sub
xor
mov
aas
push
push
mov
mov
int
lcall
push
jl
out
aaa
repnz
and
mov
jo
movsb
icebp
lret
xchg
dec
popf
ja
adc
inc
sahf
popa
mov
mov
fcmovbe
ljmp
movsl
and
adc
jbe
adc
push
cmp
jo
sarb
into
adc
rol
or
aas
pop
ja
movntps
or
call
cmp
addl
sub
shrl
daa
mov
scas
cmp
mov
fcoml
xorl
xor
xor
xchg
push
inc
jne
sarl
filds
mov
pop
mov
repz
dec
jl
or
iret
ss
movsb
imull
xor
es
aas
xchg
test
dec
shll
xor
pop
jmp
jg
mov
dec
lds
xchg
into
mov
cmpsl
imul
push
adc
jp
pop
and
ljmp
mov
sub
imul
pop
jle
adc
push
ds
lcall
into
inc
sub
out
iret
mov
out
das
ds
test
push
cmp
jle
ds
es
sbb
ret
daa
xchg
xchg
repnz
fwait
or
cwtl
and
jae
sbb
push
cmc
lret
xchg
out
imul
mov
inc
xor
lahf
loope
or
ds
jnp
bswap
pop
mov
je
das
xchg
ret
cli
jle
ljmp
mov
lock
dec
xchg
fiadds
cmpsl
in
or
stc
adc
sub
pop
pop
testl
pop
clc
cmp
aaa
cwtl
mov
mov
add
ds
jg
enter
sbb
aaa
mov
mov
and
xorb
mov
pop
lea
sbb
push
rorl
cwtl
inc
mov
mov
aas
dec
je
test
jmp
rorl
mov
sti
mov
xchg
xor
add
hlt
ja
dec
rcl
cmpsl
xor
in
add
push
xchg
xchg
mov
cmp
in
or
inc
cld
jg
sub
ja
cli
les
ret
lea
and
or
cmpsl
dec
mov
cmp
mov
test
insb
fwait
in
mov
lds
data16
in
sub
lds
testb
mov
leave
add
lea
xchg
sti
in
dec
jns
mov
ud1
jb
xor
ss
in
mov
jnp
sub
xchg
pop
inc
sbb
cmpsb
sub
jbe
sub
scas
mov
std
pop
xchg
mov
add
mov
xlat
fs
adc
xor
mov
pushf
mov
cli
cmp
insl
jg
jnp
jae
and
js
pop
inc
xchg
xchg
test
adc
inc
ja
insl
ds
adc
mov
subb
mov
push
jbe
inc
les
into
test
xor
cltd
fmul
sub
loop
jge
push
das
das
jg
mov
dec
sbbl
aam
pop
adc
repnz
add
dec
mov
cmc
mov
add
mull
xor
push
xchg
and
push
lcall
clc
cmc
roll
push
into
imul
and
dec
mov
sub
int3
push
cmpb
sub
dec
fs
inc
addr16
and
xchg
rcll
lahf
dec
cmp
xchg
sbb
sub
push
andl
sub
in
xor
stos
lods
sbb
mov
mov
xor
jmp
pusha
xchg
pop
pop
test
sub
lods
orb
inc
push
imul
je
orl
xchg
add
test
cmp
push
test
icebp
push
dec
or
jbe
mov
dec
dec
fwait
lea
add
js
sub
mov
xchg
jne
sub
fmull
cltd
xchg
inc
mov
sub
mov
ja
lea
sbb
add
bound
aad
jne
int
out
outsb
pop
dec
pusha
gs
push
fnstsw
cmp
sahf
shl
jne
inc
out
jb
lret
inc
imull
jg
clc
xor
push
mov
xor
jae,pn
xchg
sbb
mov
push
popa
testl
out
movb
push
adc
xchg
gs
push
inc
cmp
inc
jae,pt
lock
std
mov
fcomps
sti
xchg
adc
stc
cmp
repz
inc
mov
jnp
cmp
dec
mov
mov
dec
cld
jo
fbstp
sti
int3
sub
imul
fisttpll
fs
fcmovb
data16
cmp
mov
inc
sbb
ret
xor
pop
xchg
iret
iret
movb
enter
inc
cmp
and
outsb
sbb
mov
outsl
cmp
dec
mov
aaa
sub
jne
clc
push
out
decb
fistpll
stos
shrb
sar
or
xchg
div
inc
mov
fdivrs
int3
cwtl
outsb
mov
pop
ss
mov
aam
xor
mov
out
out
out
aad
fwait
push
int
add
outsl
loopne
xor
les
arpl
jae
push
jp
lods
mov
popf
cmp
mov
fisttpll
xchg
jae
pop
jp
push
movsb
pop
xchg
sahf
dec
dec
mov
mov
movsl
push
subl
lahf
jbe
jg
and
dec
jne
dec
xlat
fnstsw
mov
add
push
dec
cmpsl
jae
cld
xor
sti
push
ljmp
sub
lret
lret
sub
push
cmpsb
jb
jmp
add
adc
mov
imul
mov
sub
fisubrs
lret
dec
loopne
adc
out
lds
and
xor
fildl
cld
in
in
icebp
sbb
sbb
fdivl
shrl
jmp
ja
jg
push
sbb
dec
mov
fistpll
xchg
imul
pop
push
ret
shrb
cwtl
cmp
das
addr16
inc
insb
mov
sub
stc
or
jmp
lret
add
int
repnz
ja
data16
push
lea
outsl
stos
loope
fwait
ja
in
xor
push
inc
out
adc
sbb
inc
mov
lea
daa
sub
add
in
shlb
jg
mov
and
cmpsb
jnp
mov
test
lds
lcall
sub
cmp
dec
push
mov
add
jne
and
in
adc
das
inc
test
out
jmp
fbstp
push
lds
jo
imul
jne
or
ds
sbb
test
iret
add
xor
test
mov
pop
or
or
and
pop
test
xor
xor
cmpsb
push
push
movsb
gs
repz
sar
push
cltd
data16
dec
daa
mov
mov
bound
in
repnz
testb
jg
dec
jmp
jl
sbb
inc
sub
dec
mov
test
mov
mov
jno
pop
loop
data16
push
and
and
sti
adc
cli
subb
je
outsl
lea
xchg
jo
in
adc
jno
mov
addr16
outsl
scas
cs
mov
in
jo
pop
add
cmc
xor
stos
dec
pop
call
lock
faddl
fbld
loop
mov
lret
in
push
dec
movsb
mov
inc
orl
sbbb
cld
rorl
inc
addr16
cld
aaa
xchg
mov
cmp
lods
and
and
cmp
cmp
push
int
jmp
ret
mov
sbb
or
sti
or
adcb
xor
add
xchg
clc
push
testb
jmp
jo
jbe
xchg
aas
nop
dec
sbbl
andl
and
pop
in
fwait
push
mov
movsl
push
int
sti
inc
fidivl
mov
cmp
jae
shll
pop
stos
cmp
xor
push
mov
inc
bound
push
arpl
pop
lods
push
push
xchg
push
mov
cmp
pop
mov
jb
cmpsl
jae
into
and
jmp
sahf
mov
fcoml
addr16
data16
jp
cmp
xor
adc
or
cwtl
dec
mov
mov
mov
stos
dec
pop
mov
pop
jmp
cmp
or
ret
aaa
mov
mov
cmc
in
das
cmc
mov
iret
xor
mov
rcr
jnp
add
or
je
ja
pusha
scas
std
sub
imulb
insb
jp
dec
jo
arpl
push
inc
adc
fwait
jg
rorb
jl
cwtl
mov
push
sahf
fs
cwtd
lret
fiaddl
mov
dec
push
out
daa
push
mov
push
cmpsb
push
icebp
and
sub
ja
inc
adc
data16
test
stc
icebp
pop
mov
xor
pop
mov
push
mov
xchg
scas
pop
mov
push
jp
stos
push
pop
mov
and
daa
iret
push
inc
out
pop
or
cmp
nop
jl
fnstenv
repz
jecxz
iret
and
mull
out
adc
psubq
sub
jg
and
pxor
push
cmpsl
inc
sbb
ljmp
lods
negb
mov
dec
adc
ds
jg
add
and
pop
jecxz
aaa
and
call
mov
mov
mov
or
lock
mov
sti
pop
or
shr
xchg
jns
mov
addr16
rorb
stc
jno
cmp
xor
dec
mov
pop
lret
repnz
mov
ret
mov
stos
std
and
and
jae
pop
scas
je
adc
ret
and
mov
mov
ficoms
dec
mov
jns
dec
scas
push
mov
jne
mov
aam
inc
xchg
mov
cmp
xor
pushf
daa
idiv
cmpsb
subl
cmp
xor
xlat
sub
enter
push
mov
mov
cmp
sbb
fistpl
pop
dec
or
in
pop
mov
icebp
pop
mov
and
test
je
lcall
dec
push
lret
inc
mov
adc
mov
pop
xchg
xor
jo
fstpl
ficoml
sti
daa
inc
pusha
dec
inc
mov
push
notb
mov
stos
outsb
popa
mov
xchg
js
out
divl
mov
inc
push
loopne
xlat
inc
mov
cwtl
adc
sbb
mov
mov
ja
jle
sbb
inc
aas
mov
jns
add
mov
lods
dec
mov
aaa
mov
jp
mov
mov
sbb
push
loopne
stos
dec
repnz
stos
push
dec
movsl
sbb
cwtl
popa
dec
or
and
jge
ds
cmp
mov
cwtl
sub
xor
fstps
int
das
loope
pushf
rclb
add
sub
sub
loope
mov
inc
iret
push
pop
mov
dec
add
sbb
in
mov
cmp
mov
inc
scas
mov
mov
sbb
movsb
xchg
push
mov
inc
testl
and
push
mov
mov
lret
xchg
in
dec
test
test
in
or
cmp
mov
cmp
pushf
fiaddl
dec
dec
scas
jae
or
mov
dec
movsl
inc
xchg
xchg
subb
fistpl
out
jp
subl
test
add
xchg
inc
std
es
dec
xor
sub
lea
call
test
pop
clc
pop
scas
inc
mov
mov
mov
adc
mov
inc
mov
dec
mov
push
pusha
push
subb
popa
cmp
adc
cld
cmp
loop
in
sub
sub
xchg
dec
lock
xlat
loopne
lret
cmp
mov
rcrl
fistps
mov
arpl
dec
cltd
xor
aaa
mov
es
cwtl
push
xchg
insl
jecxz
loope
outsl
scas
ss
or
sbb
sub
js
mov
int
stos
fadd
push
mov
pop
loopne
int
lret
sbb
pop
loop
adc
fsubrl
or
aaa
pop
ret
faddl
icebp
out
data16
cmp
lret
scas
jns
test
push
sub
cld
andb
jge
popf
inc
mov
sub
sarl
dec
xor
call
push
mov
repz
mov
cmpb
mov
or
add
jge
xor
mov
sub
addr16
pop
cmp
dec
mov
sahf
cmc
adc
cmp
xchg
andb
or
cmp
leave
out
xor
cmp
lret
mov
pop
or
mov
aaa
adc
xchg
push
je
push
daa
and
or
ret
sbb
sub
dec
xor
push
sub
mov
in
xlat
roll
mov
inc
and
or
jno
dec
addb
subl
mov
cmp
or
test
mov
xchg
test
or
and
subl
cltd
imul
cmp
fs
sarb
cmp
cmpsb
pop
push
fisubrl
data16
cmpsl
pop
insb
js
ja
clc
add
cmpsl
into
mov
lock
cmpsb
xchg
xchg
flds
xchg
loopne
jnp
dec
adc
ret
iret
mov
cmp
or
jno
sbb
inc
mov
mov
into
xchg
nop
inc
xchg
clc
sbb
add
inc
or
xor
in
mov
mov
sbb
mov
add
or
enter
adc
fyl2xp1
faddl
xchg
jns
pop
mov
out
out
mov
dec
pop
sahf
jnp
pop
xchg
inc
mov
pop
in
sbb
in
xchg
mov
dec
inc
das
test
jl
push
mov
rolb
mov
and
dec
or
xchg
inc
mov
push
mov
dec
add
mov
nop
pop
pop
jge
or
cmc
or
enter
out
pop
jg
cmc
sub
xchg
bound
test
mov
xor
or
hlt
mov
xor
mov
adc
cmp
dec
and
jnp
pop
adc
das
pop
stos
jle
xchg
nop
in
scas
cmp
push
push
cmp
data16
xor
nop
daa
mov
pop
cmpsb
cmp
xor
addr16
pop
sub
or
cmpsl
and
sub
nop
jnp
pop
call
fcoml
faddl
xor
je
mov
cmp
inc
not
clc
inc
lods
push
pop
lret
int
sub
stos
pop
rclb
jmp
repnz
add
test
fcmovbe
xchg
stos
add
push
or
loope
in
imul
repz
es
push
enter
mov
andb
mov
mov
mov
pushf
adc
mov
lock
mov
xor
inc
push
lcall
pusha
out
mov
hlt
ja
inc
jb
dec
imul
ss
or
sub
leave
mov
lret
mov
mov
insl
mov
pop
fnstsw
sbb
js
mov
mov
pushf
repz
iret
mov
icebp
stos
dec
lock
dec
mov
add
push
lahf
int3
je
outsl
xchg
pop
add
lret
and
push
arpl
inc
sti
xor
xadd
icebp
cmp
adc
xor
sbb
mov
or
dec
push
inc
into
pop
pop
daa
mov
jge
or
inc
mov
aad
dec
adc
shl
movaps
test
shl
sbb
adc
fs
or
push
adc
jp
xor
sbb
in
popa
push
dec
stos
loop
stos
jmp
and
mov
mov
sbb
push
dec
mov
mov
jb
jmp
and
sbb
test
nop
and
push
lods
sub
ret
nop
cmpsl
stos
aad
ret
pandn
addr16
movsb
bound
push
jne
xchg
cmp
test
mov
mov
xchg
mov
daa
cmp
xor
insb
repz
scas
jne
mov
push
jno
adc
cmp
xchg
and
andb
ret
adc
testb
rcrl
in
idivl
jno
es
mov
mov
sbb
or
shl
orl
je
or
and
cmc
pushf
pop
es
cltd
idiv
mov
nop
cmc
mov
outsl
pop
add
fimuls
in
pop
loop
mov
sti
or
gs
jp
adc
cmp
in
fadds
inc
mov
jno
cltd
repnz
push
cmc
test
add
jb
mov
inc
push
pushf
xor
hlt
insl
pop
lds
lahf
imul
stos
gs
pop
jge
push
fnstenv
sbb
and
add
fcomps
in
aad
cwtl
jb
push
push
mov
dec
sahf
addr16
aam
pushf
push
cwtl
push
or
nop
push
stos
pop
mov
ret
popf
mov
fisubs
call
dec
lea
int3
pop
outsb
mov
out
loopne
imul
lret
cmpsl
push
lret
xlat
das
cmp
or
inc
sti
and
repz
push
sbb
js
push
shrl
mov
mov
jb
xchg
pop
mov
dec
aad
test
add
xchg
cld
ds
daa
dec
lret
jle
dec
jmp
out
outsb
fisttpll
je
loopne
fnstsw
jo
sub
mov
cmp
hlt
lret
out
nop
jns
push
add
sub
cmp
xchg
pushf
push
mov
adc
call
sbb
dec
hlt
push
pop
pop
sarb
out
sbb
out
insl
js
shll
data16
cmp
insb
mov
or
xchg
mov
dec
je
arpl
jne
lods
mov
xor
out
addr16
xor
aas
mov
pop
sub
sub
lock
push
cmc
test
or
or
enter
jl
aad
cmp
int
aas
adc
outsb
ja
in
add
cmp
inc
mov
test
cmp
adc
push
xchg
stc
testl
and
dec
mov
dec
loopne
mov
sbb
ss
ret
push
sub
xor
lea
sbb
cli
or
shrl
int3
repz
or
into
push
int
ret
das
rorl
add
cmp
or
xchg
lods
push
fadds
loop
xor
or
sbb
or
inc
test
lret
sub
ror
add
insl
mov
fsts
adcl
pop
mov
fidivl
pop
int
mov
add
xor
push
xorb
xor
jno
sarb
movsb
dec
bswap
scas
mov
out
enter
jge
adc
mov
jg
mov
xlat
and
inc
in
int3
sub
add
cmp
add
pop
push
jo
shll
clc
push
hlt
sub
adc
ficompl
ficoml
subl
xchg
jg
je
push
lock
insl
cmc
or
enter
lds
notl
and
add
mov
fstpt
notl
rcrl
add
mov
add
cmp
cwtl
mov
sbb
add
subl
pushf
in
pop
aad
pop
pushf
popf
dec
lcall
push
mov
jp
out
ret
inc
cwtl
pop
sahf
push
lods
mov
loope
inc
pop
sahf
jo
or
ljmp
cmp
les
out
push
nop
js
test
inc
sbb
iret
push
cli
sub
jne
mov
test
mov
mov
mov
inc
hlt
adc
jbe
fwait
adc
pop
cwtl
mov
add
fimull
daa
push
rcll
mov
inc
and
loope
in
adc
hlt
jle
mov
scas
data16
sti
into
and
dec
mov
xchg
pop
test
out
lods
insb
testb
inc
xchg
push
jecxz
into
sub
mov
aaa
cmp
push
das
lods
ss
jge
sbb
inc
aad
xchg
clc
test
mov
sub
decb
call
mov
mov
mov
shll
fimuls
hlt
xor
lcall
sub
mov
mov
inc
mov
dec
mov
out
mov
pop
mov
lods
add
or
cmp
jecxz
and
jecxz
adc
cld
jno
je
outsb
or
dec
movsb
push
scas
push
xor
mov
xchg
stos
aaa
movsl
xchg
pop
scas
insb
jns
push
les
flds
test
mov
xor
pop
cmpsl
mov
movsl
in
int
incl
mov
shr
dec
into
in
cmp
jg
pop
popf
test
jno
inc
mov
sub
cs
mov
sbb
imul
sub
inc
ljmp
addr16
lods
dec
dec
out
repnz
ficoms
cmpsl
movsl
inc
int
lock
jmp
push
lock
cmp
sarl
testb
cmp
imul
dec
fs
fwait
xor
pusha
mov
pop
cmpsb
lcall
mov
pop
lods
inc
sbb
leave
daa
mov
orl
sub
push
jmp
sbb
aas
dec
dec
test
call
mov
js
sbb
daa
int3
jb
test
call
nop
stos
rcrb
rcll
pop
mov
test
inc
dec
outsb
add
cmp
xor
pop
mov
daa
mov
out
into
sbb
mov
cli
cmc
xchg
xchg
cs
ljmp
dec
sub
xor
cmp
or
xchg
dec
mov
pusha
shlb
push
scas
jg
adc
imul
push
sbb
cmp
mov
push
xor
and
cwtl
or
xchg
dec
cmp
or
jo
pop
lock
push
enter
shll
enter
sub
push
daa
lret
pop
test
cld
and
mov
mov
and
add
inc
in
psrad
push
sbbb
lock
testl
mov
mov
js
das
enter
faddl
out
inc
andb
or
xchg
sub
sbb
test
cwtl
mov
or
sbb
lahf
push
fdivrs
pop
xchg
inc
mov
xchg
inc
mov
cmpl
loope,pt
stos
jge
push
cmc
cmp
mov
pushf
xchg
pop
mov
pop
ror
aam
out
jbe
andb
fwait
sbb
add
out
xlat
inc
mov
dec
int3
out
or
sarb
bound
sbb
ds
and
inc
xchg
and
movsl
nop
inc
dec
pop
mov
dec
lahf
addr16
clc
adc
es
lcall
or
popa
push
xchg
es
sbb
addr16
add
cmp
sbb
repz
or
or
and
add
lods
jno
xor
mov
popa
add
inc
xor
out
cmc
and
adc
scas
rolb
lds
pop
push
mov
xorb
inc
imul
outsl
lea
call
out
or
je
test
pop
mov
mov
rorl
lea
andl
cmp
data16
mov
mov
adc
cmpsb
test
mov
dec
imul
mov
test
jno
enter
xor
outsb
sbb
icebp
pop
sti
repz
sbb
cmp
pop
xlat
sub
outsl
mov
mov
mov
nop
into
push
testl
shll
ljmp
adc
das
daa
jae
sub
sbb
icebp
jbe
jmp
cli
xor
aad
xor
and
stc
add
and
and
lcall
sbb
out
push
mov
sub
scas
fidivrl
or
or
mov
inc
dec
repz
dec
fwait
or
jge
pusha
movsb
imul
sbb
cmc
pop
bound
out
adc
push
ja
jmp
xchg
sarl
fldcw
mov
push
mov
stos
push
lahf
xorl
std
scas
pop
orb
iret
sbb
inc
jno
mov
xor
add
adc
jne
jnp
and
or
rcr
jo
cmp
je
mov
push
mov
adc
in
add
pop
mov
mov
pop
lods
pop
xorb
arpl
xor
sub
out
mov
add
sub
cld
addr16
roll
repz
scas
mov
mov
xor
aad
mov
inc
xchg
shr
cmp
sub
or
dec
or
mov
aaa
xchg
jp
fstpl
xchg
jae
dec
js
subb
repnz
hlt
enter
subb
xor
or
inc
xorl
add
jb
sahf
pop
ret
dec
mov
mov
and
ds
fisttps
push
jo
pop
ja
push
clc
mov
enter
rorb
dec
mov
adc
mov
pop
ljmp
cmc
push
pop
sub
leave
jns
or
xor
out
clc
je
cwtl
je
loop
xchg
xchg
dec
addr16
xchg
test
mov
ja
jnp
lret
into
ss
bound
sbbb
leave
das
cmc
xor
and
lock
repz
inc
mov
cs
icebp
ljmp
adc
iret
sarl
lret
xor
or
aaa
in
enter
addr16
fwait
push
scas
sub
stos
mov
outsb
les
xor
pop
leave
sub
push
aas
mov
fdiv
add
mov
les
push
xorb
add
call
push
cmc
push
pop
les
or
mov
bound
movsb
pop
movsb
sahf
dec
mov
jno
dec
test
jmp
dec
cli
int3
push
test
subps
push
xchg
mov
sub
mov
mov
insl
shrl
andb
and
loop
mov
xlat
loop
xor
adc
dec
pop
xchg
js
push
ret
insb
dec
sub
mov
adc
and
xor
inc
sbb
sbb
dec
leave
es
out
cs
cmp
andl
jae
jno
insl
dec
cmp
xor
orb
push
lods
add
mov
insb
push
xchg
xor
sub
cmovp
inc
xchg
dec
je
mov
jecxz
pushl
es
rclb
clc
fwait
mov
cmp
or
add
add
xchg
fdivr
scas
call
jle
imul
or
or
test
es
aaa
es
mov
mov
int3
js
lea
mov
ror
or
sub
addl
mov
xlat
dec
add
jecxz
adc
mov
and
and
pop
xlat
pop
mov
dec
push
sbb
in
repnz
lahf
sbb
dec
bound
and
lods
mov
jle
push
sahf
jmp
rorl
movsl
add
cmp
fnstcw
int3
dec
stos
mov
jp
repz
inc
sub
iret
ret
loopne
inc
mov
insl
jae
repnz
cs
insb
push
jp
or
dec
jns
cwtl
mov
scas
or
movsl
and
arpl
es
shrb
jge
lods
mov
pusha
xchg
sarb
xor
cmp
mov
or
aam
ret
call
mov
js
rolb
mov
lret
and
imul
pop
push
jg
mov
push
ror
mov
ret
mov
push
sbb
mov
imul
sub
das
aas
mov
push
out
push
sbb
push
push
sahf
adc
add
dec
out
sbb
repnz
and
ret
and
jg
testl
js
cs
pop
fstpt
dec
mov
jne
mov
lds
push
pop
xchg
stos
shlb
push
and
movsl
jle
outsb
or
movsl
lcall
adcb
subb
popa
orl
sbb
insl
pop
lret
xor
shrb
xor
mov
sub
test
adc
xor
ljmp
or
mov
jp
xor
adc
xchg
mov
jns
mov
fisttpl
lret
ror
mov
mov
out
mov
xor
stc
adc
xor
pusha
fstps
push
push
divb
add
test
gs
mov
imulb
mov
xor
mov
mov
dec
or
sahf
mov
aam
cmp
dec
test
inc
daa
inc
idivb
lret
adc
jae
jl
outsb
testb
jmp
fisubl
cmp
mov
gs
sub
andl
push
mov
push
xchg
outsl
push
adcl
bnd
andl
insl
add
cmp
es
xchg
sbb
and
dec
push
jp
inc
jbe
pushf
cmpb
jmp
pushf
add
jns
and
cmp
sbb
or
mov
mov
push
push
lcall
in
or
out
push
rorb
repz
sub
or
outsl
inc
stc
lds
clc
repz
jno
loopne
daa
or
push
sub
push
lret
push
je
and
push
popf
jl
sub
stos
push
push
aaa
sub
push
insl
dec
mov
mov
xchg
inc
loop
test
mov
mov
cmc
mov
jge
adc
inc
or
cmp
inc
hlt
insl
icebp
push
cmp
xor
or
xlat
and
mov
in
loop
push
xor
pop
test
movsl
push
and
movsb
add
int
mov
les
sti
xor
ss
fsubr
cs
mov
or
pop
xor
adc
inc
insb
roll
int3
mov
int3
sbb
std
push
add
loopne
xorl
pop
sub
pop
inc
sbb
add
outsb
pop
xor
inc
adc
mov
popa
xchg
and
mov
nop
inc
fdivp
dec
ret
sub
sub
cltd
daa
push
scas
testb
mov
push
pop
adc
scas
dec
mov
mov
lods
jle
jge
or
and
mov
mov
rcll
adc
fwait
pop
mov
in
sub
dec
lods
push
pop
pusha
leave
fucomip
jge
lret
fsubrl
in
cmpsb
stc
orl
out
inc
and
orl
repnz
scas
xchg
iret
cmp
xchg
jo
imul
lods
pop
ret
jge
mov
cmp
bound
movsl
gs
and
push
push
xor
stos
xor
mov
aas
lea
mov
mov
cmp
xor
dec
push
push
ds
out
and
inc
ds
add
push
sarb
leave
cltd
push
and
insb
cwtl
pop
mov
push
outsl
xor
sub
popa
mov
mov
or
pop
jp
sub
mov
mov
scas
aaa
sbb
mov
int3
and
mov
mov
fcmovnbe
lds
repnz
mov
adc
fstps
and
adc
rorl
add
int
repz
int3
mov
pushf
cltd
and
mov
dec
vmovhps
loope
sbb
fdecstp
inc
push
test
push
mov
xor
mov
lds
sbb
mov
test
fiaddl
xor
in
fadds
jo
dec
mov
xor
ror
pop
icebp
mov
outsb
ret
out
cmp
dec
or
sub
xor
outsl
into
jb
movsb
dec
mov
cli
testl
insb
icebp
sub
jecxz
and
mov
loope
pop
test
xchg
stc
lds
and
ja
lods
pop
mov
pop
jmp
mov
xor
cmp
scas
out
sub
mov
mov
push
jg
into
cmp
adc
ljmp
sarb
ret
repz
add
mov
xor
ret
inc
dec
xor
mov
ret
pusha
fdivrp
adc
mov
xchg
insl
jg
ffree
or
push
lcall
sahf
mov
xchg
push
lods
loope
dec
cmp
mov
cmc
call
lock
shl
mov
sarl
mov
out
cli
inc
sub
inc
imul
inc
pop
push
dec
dec
outsl
dec
jle
outsl
int
mov
pop
iret
push
or
sub
inc
stc
ror
push
jae
xor
imul
daa
adc
mov
rclb
jle
ds
dec
fisubs
jp
fs
push
loopne
mov
sbb
push
cwtl
jg
mov
or
and
lods
sub
es
jb
ret
xchg
lds
hlt
xor
push
int3
cmp
cmpb
mov
lret
popa
fwait
mov
cmpsl
push
inc
push
dec
popf
dec
mov
add
cwtl
jg
sti
dec
test
dec
xchg
ret
outsb
adc
repnz
stc
adc
push
pop
gs
xchg
cmp
dec
dec
dec
mov
push
cmp
or
movsl
jge
jle
cmpsb
mulb
ja
fisttps
or
sub
add
and
shll
fbstp
into
cmpsb
sub
jne
dec
hlt
test
inc
test
xchg
jnp,pn
push
lret
lcall
lcall
aaa
and
cmp
imul
fdiv
xor
xor
ret
lods
mov
mov
imul
push
loope
mov
out
arpl
daa
inc
pop
mov
add
insl
addr16
mov
jle
xchg
jo
sbb
scas
or
ror
sub
add
je
iret
std
mov
lock
fsts
test
xor
or
sti
icebp
or
sbb
mov
add
jecxz
dec
aaa
add
idiv
stos
cmp
adc
sbbb
std
add
cmp
imul
mov
adc
out
decl
inc
mov
aam
or
movsl
pop
mov
cwtl
jp
dec
lahf
jge
jbe
push
inc
out
adc
xor
xchg
add
adcb
sbb
push
scas
arpl
ror
inc
push
inc
lahf
gs
sbb
inc
inc
arpl
cs
rclb
add
arpl
adc
and
pop
popa
add
mov
lret
adc
adc
xlat
js
push
andb
shlb
and
pop
inc
push
daa
loop
repnz
rcrl
out
std
paddusb
fidivrl
shrb
cmp
out
add
loopne
jecxz
clc
orb
xor
int
push
sbb
push
xor
pop
sti
arpl
adc
fbstp
fldt
push
pop
packssdw
mov
lods
xchg
adcb
adc
cmp
leave
dec
movb
les
pop
lds
jo
inc
cmc
daa
or
cmp
rorb
iret
sbb
daa
cmp
enter
jb
push
jno
cli
cmpsl
dec
test
gs
jo
inc
loope
pop
mov
pop
mov
nop
cmpsl
dec
push
push
xchg
push
pop
orps
and
int
adc
mov
and
aas
adc
adc
movsl
dec
out
push
sub
pusha
out
xor
adc
ljmp
mov
lcall
cmp
cmp
int3
pop
mov
inc
enter
mov
test
mov
jns
jno
out
and
xchg
shr
popf
cwtl
dec
cmpsl
stos
add
push
les
or
adc
les
out
mov
fsubl
inc
sahf
insl
mov
dec
scas
jb
add
xchg
push
lahf
cli
test
in
xchg
cmp
aaa
mov
or
and
cmp
or
pop
mov
out
dec
pop
movsl
jns
xlat
pop
mov
jg
sbb
sbb
lcall
mov
or
adc
scas
jo
orl
movhps
pop
sti
xchg
dec
mov
dec
mov
sub
test
lcall
sbb
iret
in
sbb
hlt
in
int3
aas
jmp
rcl
mov
dec
pushf
insb
jo
dec
pushl
leave
sub
inc
jge
xor
or
sbb
sbb
xlat
adc
cmp
sbb
adc
or
and
jg
sbb
and
roll
adc
out
fldenv
movsl
add
add
sbb
ret
ret
aaa
sahf
jp
int
js
xchg
inc
stos
pop
sub
xchg
jno
jecxz
lret
fwait
mov
inc
movsl
adc
loope
inc
aad
movsl
test
add
ret
add
mov
or
rcrl
jecxz
stos
je
xor
xchg
pop
lea
rorb
inc
int
jne
or
cmp
mov
mov
sub
mov
xchg
xchg
dec
popf
adc
adc
hlt
mov
or
dec
int
push
into
mov
add
mov
sbb
mov
pop
subb
iret
aaa
fimull
cmp
lahf
in
sbb
add
adc
mov
test
add
push
mov
inc
mov
arpl
xor
mov
sub
or
xlat
imul
cmp
pop
stc
fildll
icebp
ja
pop
fnstcw
fnsave
mov
adc
jne
jge
add
jle
in
adc
lahf
inc
and
cmpsl
push
sar
adc
cld
test
xchg
pop
add
mov
aam
sti
mov
cs
test
adc
cmc
adc
push
pop
fidivl
cltd
pop
fsub
testb
ret
pop
pop
rcrl
stos
and
push
cld
imul
popa
cmp
adc
lods
dec
out
repnz
in
xchg
sbb
pop
lea
in
popf
das
jbe
or
mov
sbb
rcll
xlat
lock
bound
adc
cs
xlat
divb
pusha
jae
clc
jmp
add
pop
stc
jb
jae
dec
ret
dec
repz
cmp
lods
add
das
negl
pop
int3
pushf
xor
arpl
gs
sbb
xor
push
or
jmp
mov
or
pushf
js
jp
pop
test
loop
mov
mov
shll
pop
outsl
pusha
fcompl
pop
push
add
xorl
push
inc
lret
mov
loop
and
shrl
lock
or
add
repz
pop
pop
and
inc
gs
add
lcall
sub
add
repnz
push
mov
jg
xor
out
inc
mov
iret
popl
mov
stc
mov
dec
test
fadds
pop
pop
mov
clc
add
int
insl
mov
test
cmp
push
in
lds
insb
mov
pop
cmc
jmp
pop
xchg
push
mov
rolb
xor
mov
jb
push
push
decl
mov
loope
sub
std
aas
repz
sub
xor
jge
shll
sar
fnstcw
jmp
mov
xorl
mov
fildl
aas
mov
cltd
jnp
mov
leave
jp
add
sub
loope
rorl
sbb
mov
cmpsb
xor
cltd
jb
andb
mov
fisttps
inc
cmc
fs
ud1
fcompl
and
insl
popa
jnp
push
int
mov
mov
dec
sub
out
sub
or
dec
add
clc
pop
xchg
mov
test
insb
mov
push
rcrb
mov
xor
je
xor
push
mov
jg
push
sti
enter
in
int3
sahf
sbb
dec
mov
int3
test
fwait
out
or
lcall
mov
sub
add
xor
or
incb
adc
mov
xor
and
xor
mov
dec
xor
pop
add
mov
cld
dec
push
jns
call
push
imul
jno
cmp
aad
testb
mov
or
aaa
ja
add
mov
lcall
inc
add
nop
mov
inc
mov
xor
inc
repz
xchg
das
sub
arpl
xor
or
divl
inc
cmp
pop
pop
inc
mov
mov
insl
mov
fnstenv
loop
lock
test
fstl
push
pop
int3
sarb
ret
lret
mov
xor
fsubr
push
inc
jbe
pop
adc
xorl
pop
inc
push
push
ds
aad
push
dec
xlat
in
adc
inc
jecxz
pop
push
sub
pop
push
or
mov
pop
iret
arpl
pop
cs
push
cltd
outsl
push
shlb
cmp
cmpsb
mov
leave
or
gs
push
cld
rclb
dec
outsl
mov
popa
jae
sti
and
xlat
es
mov
add
mov
push
dec
jb
mov
mov
xchg
dec
and
mov
stc
adc
lret
push
mov
xor
jecxz
xchg
stc
push
xor
adcb
cmp
in
and
adc
mov
loopne
cmpsl
add
aaa
mov
mov
cwtl
push
mov
sbb
fmuls
jo
ss
cmp
popf
mov
mov
stc
xchg
repnz
sti
xor
outsb
xor
or
jb
fisttpll
or
mov
xor
inc
cmp
adc
jbe
ret
imul
or
xor
incb
jns
add
faddl
sbb
cwtl
pop
dec
pop
xchg
loop
ja
mov
sbb
jno
data16
jecxz
aaa
test
adc
in
jg
pop
mov
rcrl
aaa
add
sbb
lock
mov
clc
xor
push
xchg
and
mov
testl
test
sub
and
lea
or
je
gs
pop
mov
adc
stc
lcall
jae
iret
push
jmp
test
mov
pop
mov
lock
es
sub
cltd
frstor
roll
jne
les
testl
aad
repz
mov
xchg
mov
push
mov
iret
inc
mov
pop
xlat
jl
push
xchg
test
add
outsb
push
mov
xor
jmp
aad
mov
leave
clc
scas
adc
jp
cs
add
jmp
repnz
sub
add
testl
daa
imul
into
xorl
dec
sbb
jo
jo
cmp
popa
hlt
into
je
lret
mov
cwtl
xchg
sub
xor
lret
stos
jae
adc
xor
nop
loope
shll
xor
cmpsb
cmpl
out
repnz
test
ret
scas
cmp
push
dec
icebp
insb
adc
pushf
add
mov
andb
or
xor
in
adcb
adc
fisubl
movl
outsl
xchg
jo
shll
mov
and
mov
cmp
outsb
push
jb
int
sub
cmp
clc
imul
jg
lcall
div
aad
lods
or
dec
scas
push
jge
mov
xor
mov
and
xor
gs
cmp
in
adc
lds
shl
mov
ds
xchg
pop
inc
or
dec
sbb
ds
loop
iret
jecxz
loop
addr16
add
mov
faddl
lods
push
mov
mov
outsl
outsb
xchg
or
loop
jge
cmp
add
push
xchg
scas
adc
cltd
ret
xor
dec
mov
ret
stos
jb
add
cmp
mov
pushf
ljmp
repz
jne
mov
fldcw
data16
mov
push
add
xchg
lods
xchg
inc
mov
jle
mov
int
pop
xchg
add
xor
inc
jl
movsb
jae
add
addr16
out
aad
mov
xlat
and
out
inc
cltd
bound
jl
jl
or
idivl
sbbl
or
mov
setg
bound
shrl
mov
or
xchg
test
xchg
mov
roll
repnz
cmc
push
test
fcoml
mov
in
rclb
mov
xchg
cmp
and
mov
push
jns
jns
out
jp
mov
push
js
das
fmull
and
xor
sub
or
sub
fistpll
lahf
add
test
mov
into
cmp
dec
pop
cmp
out
jo
shr
ds
test
dec
xchg
je
mov
cmpb
adc
les
lea
jne
inc
jb
inc
cmpsl
scas
mov
aas
ss
cmp
xchg
xchg
or
mov
shlb
sbbb
fldt
test
adcb
ss
push
xchg
push
cmpsl
mov
aas
es
mov
fdivl
pop
mov
mov
mov
sti
addb
imul
in
jle
popa
jmp
jno
call
test
inc
sub
sbb
jno
and
push
cmp
adc
test
and
xor
mov
jo
dec
test
test
sbb
jg
lds
cwtl
pop
xor
sahf
int
sti
jecxz
jge
ret
mov
pop
mov
mov
sbb
mov
cli
lods
cli
jae
lods
inc
fs
sub
dec
and
jl
int
push
into
adc
fadd
lret
mov
xchg
xchg
pop
test
mov
lock
daa
mov
fldl
xor
mov
imul
test
hlt
pop
push
fsubs
repz
mov
jp
repnz
push
scas
jbe
and
xorb
adc
dec
in
dec
push
test
daa
imul
push
pop
xchg
aam
arpl
jl
xchg
mov
es
cmpsb
jb
jg
sub
sbb
or
xchg
cmpb
dec
call
sbb
cmp
and
adc
icebp
divb
and
pusha
mov
popa
cltd
push
mov
push
inc
es
mov
inc
in
inc
ret
or
pop
push
test
sub
mov
in
add
ja
cmpsb
inc
pop
icebp
jns
out
xor
iret
sub
insl
cli
sbb
mov
xchg
out
jns
or
xor
mov
cli
js
jge
loope
push
dec
add
sbb
cmpl
pop
push
call
dec
mov
pop
stos
mov
pop
add
or
push
pop
bound
push
dec
jp
sahf
xchg
and
adc
cmpl
cwtl
jo
mov
imul
pop
xchg
leave
enter
fcmovnbe
adc
fisttps
clc
ficomps
leave
scas
inc
aam
lcallw
mov
subb
popf
leave
push
adc
push
mov
mov
push
divb
xchg
and
fldl
pop
aam
in
movups
push
rorl
push
faddl
call
jge
inc
int3
inc
mov
jl
mov
daa
pop
xchg
inc
adc
jg
lods
or
xchg
inc
shlb
add
sbb
roll
jne
cli
sub
insl
pop
ds
ja
lret
add
mov
in
outsl
add
mov
dec
imul
popf
jno
inc
jnp
shlb
inc
pop
jge
xchg
push
add
das
mov
ss
mov
add
data16
and
mov
mov
testl
fisttps
std
or
xchg
sbb
lods
lea
test
jle
pop
lods
dec
add
fwait
push
mov
xchg
daa
jne
roll
dec
aam
xchg
jb
xchg
or
xor
test
in
pushf
push
mov
push
fwait
and
int3
xchg
mov
sub
pop
repz
xor
mov
loope
dec
mov
inc
stos
xor
mov
push
mov
pop
cli
or
sarb
jmp
loopne
sub
pusha
dec
negb
sbb
mov
cli
fisttpl
lds
loope
cli
dec
lods
movsb
sub
gs
jle
pushf
mov
adc
mov
sti
out
mov
fstpt
icebp
pushf
mov
fsubl
push
jg
xchg
mov
stos
inc
jle
mov
mov
repnz
mov
jmp
aad
inc
cmp
out
sti
out
call
xor
popa
cmp
aas
fiadds
je
lcall
movsb
dec
mov
loope
add
outsb
nop
mov
sub
xchg
outsb
js
cld
cmpsl
pop
fldpi
cmp
add
repnz
mov
mov
shll
paddq
xor
pop
daa
xlat
or
jecxz
push
out
adc
cmp
push
pop
imul
mov
rcll
fs
dec
mov
cmp
sahf
lret
inc
std
add
fsubrs
jecxz
jbe
inc
cmpsl
cmp
pusha
pushl
lds
pop
out
test
push
into
dec
js
sbb
aad
adc
loopne
jno
xor
push
aaa
fisttpl
jne
push
cmp
xchg
sub
ret
xor
int3
lcall
mov
shrl
addl
xchg
mov
xchg
mov
in
dec
cld
scas
dec
shl
push
fucomip
pop
mov
mov
ljmp
ss
jo
or
jl
pop
loopne
test
out
cmp
sbb
add
mov
mov
fisubrl
sub
adc
leave
loope
push
stc
sbb
mov
mulb
and
test
cmpsl
popa
add
dec
vphaddubq
into
add
jle
movsl
lods
sti
push
dec
lock
mov
in
cmp
cmp
jl
inc
iret
or
mov
jnp
jae
ds
add
adc
inc
push
adc
add
roll
js
mov
add
sub
pop
int
jmp
cmp
adc
pop
rclb
mov
and
mov
inc
orb
shrl
scas
mov
stos
push
scas
cmpsb
outsl
fildll
jno
xchg
mov
cld
mov
roll
pop
dec
xchg
inc
xchg
stc
das
cmpsb
out
mov
xor
cmp
dec
mov
push
cwtl
test
gs
sahf
jno
enter
mov
enter
jb
iret
arpl
adc
sbb
and
xchg
sub
inc
mov
test
pop
xlat
pop
lea
mov
jnp
sub
shlb
xchg
ja
adc
or
or
shll
das
je
dec
mov
jnp
out
sbb
lahf
in
insb
adc
mov
dec
fwait
dec
sarl
sahf
enter
dec
iret
cs
push
jp
mov
int
loope
ljmp
loope
lods
jge
cmp
mov
aad
loopne
sub
jbe
leave
xorl
and
push
scas
lcall
jbe
xlat
or
enter
lods
ja
cmp
shlb
dec
xchg
test
add
adc
iret
inc
jns
push
sbb
jno
testb
cmc
sbbl
daa
push
fcmovb
jb
lea
movsl
inc
inc
jl
in
inc
xchg
sbb
lahf
dec
das
rcrl
mov
shlb
int
jae
sbb
xor
shlb
jp
dec
or
fldl
in
xchg
xchg
shrl
cmp
cmp
adc
push
clc
xchg
cmp
dec
cmp
push
jb
fsubp
movsb
xor
cmpsb
loopne
leave
addb
xor
mov
insl
leave
lcall
pop
ja
dec
stc
and
int
clc
adc
cmp
mov
or
sti
add
or
in
cwtl
dec
mov
pop
int
cld
mov
jbe,pt
mov
lods
sub
push
jne
shrb
mov
mov
or
push
xchg
sub
mov
mov
xchg
push
ja
sub
xchg
or
cmp
sub
cmp
ja
call
dec
xchg
pusha
pusha
sahf
outsl
pop
add
and
xor
adc
shlb
outsl
inc
rol
jns
in
cmp
push
insb
xchg
jg
pop
pop
es
add
stos
test
sbb
push
repz
icebp
or
dec
mov
fsts
dec
je
loop
pop
jle
iret
adc
iret
push
popf
test
pop
dec
pop
or
dec
insb
add
fstpt
add
ja
sbb
lcall
pop
clc
or
cli
jb
inc
icebp
inc
add
cltd
mov
sub
lock
aam
jg
aaa
push
fdiv
mov
dec
aam
xchg
pop
push
pop
lahf
inc
dec
or
cli
mov
pusha
out
fcoml
dec
mov
inc
xchg
mov
pop
mov
fs
sub
xor
mov
sub
push
nop
lahf
inc
mov
and
cwtl
fstl
orb
inc
jne
inc
mov
frstor
dec
cld
jns
sub
cmpsl
xchg
xlat
and
pop
mov
xor
nop
mov
pop
mov
xor
or
mov
xorb
jmp
and
sbb
sbb
adc
inc
add
or
out
dec
push
cltd
test
test
in
inc
cmp
mov
je
in
shlb
dec
lods
movsl
es
imul
test
ds
sbb
sub
inc
dec
pop
mov
jno
inc
shlb
add
mov
clc
shl
or
hlt
cmpsl
in
cld
pop
lret
daa
rolb
hlt
push
xor
stc
mov
push
js
mov
jbe
cmp
and
int
pop
mov
and
movsb
outsl
das
lret
or
inc
xchg
in
call
mov
popa
data16
orl
mov
xchg
enter
xor
call
mov
pop
js
flds
out
dec
mov
jmp
adc
sub
ret
test
mov
shlb
sarl
paddw
mov
cmpsb
push
aaa
mov
movsl
push
scas
dec
xchg
jb
dec
sahf
inc
repnz
xlat
test
in
push
out
pop
xchg
xchg
push
cld
and
dec
lods
xor
cmpsb
add
in
mov
bswap
jg
sbb
lds
jl
push
test
push
push
loope
pop
in
fmulp
lods
js
push
int
or
out
mov
ret
leave
lahf
scas
fstpt
lds
xchg
cmp
push
insb
inc
into
xor
lds
mov
cmpsb
cmp
push
ljmp
bnd
jo
js
cwtl
addr16
pop
fwait
jb
pop
testb
mov
jl
xchg
or
xchg
scas
cwtl
imul
dec
enter
addr16
mov
mov
add
test
jne
enter
dec
mov
and
scas
pop
cmpsl
or
divl
bound
out
lcall
mov
pushf
loop
rcll
aam
hlt
add
pop
jae
aaa
out
add
fnstsw
push
mov
pop
push
js
enter
mov
adc
mov
in
ljmp
pushw
cli
rcrb
std
pop
addr16
push
cmp
test
test
aam
clc
popf
sarb
xchg
and
sbb
xor
xchg
sarb
xor
pop
in
stos
sub
xchg
ljmp
mov
loop
pop
cmp
pop
mov
mov
jp
pushl
imul
mov
xchg
outsl
mov
gs
dec
in
cli
cmpsb
push
std
cli
dec
cli
xor
lods
mov
pop
or
xor
xchg
popa
popf
add
scas
idivl
fcompl
mov
mov
xchg
inc
jbe
xlat
in
xlat
in
jecxz
xor
mov
dec
mov
scas
fildl
ljmp
iret
adc
sub
jmp
daa
enter
or
cmp
mov
adc
dec
cmp
mov
or
je
push
lahf
sahf
jb
xchg
insl
into
mov
xchg
rcrl
adc
jo
mov
jns
cmp
mov
mov
fisubl
and
repnz
add
frstor
cmp
sub
jne
in
fs
lcall
repz
xchg
jle
lea
push
bound
push
mov
dec
xchg
push
mov
loope
fidivl
js
push
gs
push
sarb
or
loope
std
or
out
xor
sub
clc
lret
inc
shl
fisttps
lds
mov
add
mov
mov
imul
xchg
xor
xchg
ret
pop
push
inc
or
scas
lock
repz
fistpl
cmp
or
aam
sub
sub
sub
loop
iret
add
fmul
xor
enter
data16
add
rcrl
mov
cltd
fdecstp
push
subb
imul
gs
jge
clc
es
inc
push
test
jecxz
cmpsl
and
inc
xchg
jge
dec
scas
pop
lcall
or
mov
sbb
pushf
xchg
cltd
in
cmp
mov
ret
cmpsl
dec
mov
jmp
call
shll
xchg
lahf
inc
hlt
das
test
cmp
loope
arpl
inc
cmc
loop
popf
testb
push
addr16
mov
xor
xchg
movsl
jle
adc
rolb
jl
cmp
and
repnz
stos
pop
mov
loopne,pn
or
ja
aas
jg
sar
adc
ss
lods
imul
add
popa
out
icebp
jp
repz
enter
pop
inc
sbb
push
es
pop
mov
lds
repnz
out
jecxz
fcomi
sbb
enter
in
nop
mov
xor
add
sub
cmpsb
xchg
cmp
popf
push
mov
mov
mov
scas
jae
dec
stos
pop
dec
jnp
cmp
nop
xchg
mov
dec
pop
push
inc
push
add
adc
or
lret
dec
sub
leave
inc
and
dec
addr16
bound
push
insb
add
push
test
psrlq
jl
shr
mov
adc
mov
aas
ret
mov
xlat
mov
adc
out
dec
mov
cmp
pusha
sub
sahf
vaddpd
pop
outsb
cli
jecxz
mov
mov
cld
aas
jmp
or
cmp
mov
out
repnz
jp
xor
push
push
into
les
dec
test
sub
push
call
daa
sahf
nop
add
das
lret
or
incb
jno
into
fiaddl
iret
js
adc
scas
inc
mov
cld
call
ds
fwait
add
xchg
inc
fdivs
pop
pop
jne
ret
lods
xchg
aas
sub
leave
or
mov
fwait
dec
test
inc
lret
std
xor
sbb
int
lock
xor
push
ss
xor
repnz
adc
int
test
or
push
scas
push
jo
or
rcll
in
dec
mov
sbbl
outsl
or
xchg
gs
fisubrs
pop
dec
push
test
xchg
sbb
and
xchg
orb
pop
dec
into
xchg
sti
sbbb
stc
and
add
dec
stos
repnz
adc
or
push
mov
pushf
orb
dec
imul
int
xor
call
leave
dec
movsb
pusha
sahf
adc
pop
xchg
push
add
inc
mov
outsl
xchg
cmp
sbb
data16
adc
add
aaa
les
xlat
or
xor
out
xchg
add
fmul
mov
cmpb
cmp
sbb
pop
push
jle
adc
push
outsb
jne
sbb
jl
ljmp
sbb
sahf
pop
scas
inc
push
dec
repz
addr16
pop
dec
arpl
cmc
sbb
bound
xlat
jge
jle
jecxz
sbb
jno
adc
cmp
sub
lods
xchg
notl
mov
nop
je
jno
add
push
test
insl
mov
hlt
js
aas
addl
cli
and
fsubrs
out
orl
dec
aam
mov
push
mov
dec
test
and
dec
adc
pop
mov
enter
cwtl
xchg
ret
lods
sbb
movsl
jns
rcrl
into
rorl
sub
mov
mov
push
sahf
jno
leave
push
mov
testl
roll
mov
add
mov
pop
fidivl
mov
xchg
pop
dec
mov
xchg
mov
push
bound
mov
sbb
push
mov
xor
mov
adc
push
clc
push
push
paddb
fimuls
jo
xchg
rclb
hlt
aas
push
dec
pop
inc
add
rolb
jmp
push
popf
push
mov
insb
fs
dec
es
inc
mov
cmp
pop
arpl
jbe
or
push
cltd
jp
add
daa
add
ret
mov
pop
mov
adc
das
cmpsb
das
iret
in
out
fildll
lds
sbb
mov
sbb
scas
leave
jg
mov
inc
addr16
xor
leave
fsubs
xor
cltd
jg
xor
xchg
push
xor
insl
stc
lret
pop
xchg
out
in
fsubr
jb
into
mov
stos
pop
adc
mov
fs
leave
addr16
sub
sbbb
and
or
add
push
xor
imul
test
push
inc
mov
jae
jnp
dec
push
test
push
cmp
out
popw
add
cwtl
leave
insb
pop
dec
imulb
daa
push
push
mov
jb
dec
or
fs
or
sub
xorl
add
mov
cmp
adc
pop
or
addr16
sub
xchg
mov
mov
dec
mov
pop
cmp
repz
adc
push
loop
mov
out
int
scas
or
leave
cmc
cmpsl
pushf
shlb
cmc
mov
gs
add
sti
outsb
mov
imul
or
or
cmp
loop
xor
mov
jbe
popa
cmp
ds
repnz
movsl
jg
pop
addb
ljmp
or
and
loope
sti
add
dec
sub
addr16
xorl
fiadds
cs
xor
int3
mov
ret
pop
xchg
out
xor
sbb
or
bound
sub
out
add
sbb
std
gs
push
xor
cmp
stc
add
mov
sbb
cmp
ret
fisubrs
test
icebp
pop
jp
mov
js
sbb
cmp
lea
fxch
mov
pop
or
aad
mov
stc
into
dec
or
addr16
int
stos
xor
div
in
sub
or
rdmsr
in
jne
popa
dec
dec
or
xchg
mov
mov
or
xchg
xor
icebp
dec
and
or
ret
icebp
faddl
or
hlt
fmuls
cli
xchg
repz
aas
sub
fmul
out
xor
push
sbb
inc
sbb
adc
outsb
out
xchg
les
repnz
aam
fldt
add
xchg
mov
pop
xor
lcall
mov
shll
xchg
dec
lcall
inc
sub
fidivl
sbb
out
pop
jle
push
jns
mov
pop
pop
loopne
or
hlt
pop
enter
add
sub
sub
stos
int
je
or
in
cmp
xor
ja
aas
movsb
push
push
push
cmp
ret
cmpsb
mov
int
xchg
imul
add
xchg
andl
jl
js
cmpsb
xor
lods
dec
pop
dec
dec
xor
out
cmpsb
cltd
sbb
pop
rclb
loopne
out
gs
mov
dec
test
pop
jae
push
mov
out
mov
dec
lcall
jge
leave
jno
daa
and
cmp
ljmp
jno
mov
mov
out
repz
push
add
mull
xor
mov
imul
insl
repz
jecxz
mov
mov
add
es
out
mov
ja
fistpll
jle
insb
xor
mov
or
fisubs
insb
ds
sub
inc
lcall
adc
cld
test
push
jno
or
aam
xchg
mov
sbb
sub
sub
push
inc
adc
std
mov
neg
cwtl
pusha
push
xchg
jae
sub
outsb
clc
xchg
dec
mov
or
jle
pop
and
dec
outsb
subl
cltd
ret
add
sub
loopne
fiaddl
mov
arpl
push
pop
lods
imul
pop
scas
ret
jle
lock
out
shl
cmp
pop
mov
jno
mov
mov
popf
push
aam
hlt
pop
je
and
lock
inc
pop
mov
aam
stc
icebp
out
xchg
dec
iret
arpl
pop
fwait
push
mov
sbb
outsl
add
scas
push
cltd
cmp
enter
mov
inc
mov
lods
adc
pop
jge
sub
ret
inc
jns
mov
jne
sarb
jge
pop
mov
and
cmp
push
andb
lcall
xchg
dec
mov
iret
xchg
mov
pushf
push
or
dec
rorb
dec
xchg
jb
add
inc
fists
imul
mov
sbb
dec
mov
jo
sub
pop
dec
mov
dec
or
and
inc
push
xchg
jle
jmp
lods
out
or
push
or
in
lret
inc
mov
add
ret
mov
test
fldt
xchg
cmc
rcrl
insb
cmp
nop
push
fisttpll
stc
adc
in
sub
je
pop
cmc
cmp
inc
cmp
pop
imul
or
das
fcomps
cmpsb
add
push
jbe
imul
mov
inc
ds
fwait
inc
fsts
js
incl
mov
and
mov
icebp
mov
test
scas
add
mov
jmp
fwait
xor
lret
lcall
hlt
add
das
pop
xchg
push
sbbb
pop
pop
cmpsb
push
loope
or
jns
div
pop
dec
jge
jne
popf
sub
mov
movsl
jae
sbb
xchg
pop
sbb
sub
subb
fnstcw
inc
je
dec
sahf
mov
into
pop
sbb
mov
dec
xchg
cmc
pop
add
addr16
xor
shrl
pop
mov
push
pop
lahf
sar
and
fdivrp
out
pop
lea
push
mov
mov
sbb
sbb
cmp
or
dec
mov
into
sbb
push
cltd
xchg
inc
out
cmp
arpl
out
push
test
xchg
outsl
push
xor
inc
outsb
fwait
jb
pop
xor
mov
outsb
xor
sbb
adc
fs
pop
aas
or
out
ret
adcb
lret
call
cmpl
das
sub
inc
xchg
jle
and
lods
pusha
stc
sbb
pop
mov
and
mov
add
imul
movsb
dec
repz
or
std
aam
mov
or
adc
hlt
cmp
or
movsl
mov
xorl
mov
in
int3
shl
repnz
xor
push
jge
dec
loope
xchg
nop
jns
cwtl
inc
in
or
hlt
sub
faddp
push
or
and
shrb
rcr
int
ficoms
fwait
andb
adc
es
rolb
insb
mov
cmp
sub
mov
xor
lock
dec
jl
int3
test
jle
outsb
adc
mov
lcall
mull
cli
lock
testl
xchg
es
or
outsl
push
lock
jg
and
xadd
inc
dec
fbld
jl
adc
dec
ret
xor
ret
stos
adc
cmp
push
pop
loop
shrb
dec
jns
andb
add
testb
lcall
pop
imul
cmp
dec
jb
jne
push
nop
lahf
iret
lea
add
aas
enter
pop
push
cmp
lods
jne
in
push
in
js
push
movsl
cltd
sbb
mov
insb
mov
arpl
and
fcmovne
add
fwait
sbb
push
pushf
mov
icebp
or
mov
inc
mov
cs
testb
pop
adc
in
pop
cmpsl
pop
mov
or
subb
sbb
cmp
mov
pop
mov
mov
and
sub
ret
mov
sbb
jns
ret
mov
sbb
xor
aaa
mov
push
fildl
jmp
cmp
rep
les
dec
mov
popl
rcrl
pusha
enter
mull
bound
mov
jb
jg
ds
loop
sti
push
lret
xchg
dec
mov
push
bnd
jb
testl
push
add
cmp
jne
mov
scas
sti
push
das
mov
nop
jae
or
pop
jg
sub
jle
or
mov
and
mov
sbb
in
push
push
mov
imul
sub
inc
xor
cltd
repnz
cld
and
ss
inc
mov
and
imul
dec
int
in
repz
and
aaa
jns
mov
scas
mov
mov
add
das
fimull
xor
sub
pop
mov
add
pop
push
add
lds
movsb
ljmp
icebp
jb
fldl
loopne
xchg
xor
add
push
cmp
push
imul
movsl
pop
jb
fdivs
mov
jnp
out
mov
push
sti
pop
movl
push
mull
xchg
mov
cmc
xchg
push
mov
dec
js
push
pop
mov
cld
cmp
enter
cwtl
mov
pop
hlt
hlt
adc
icebp
pop
dec
or
or
cmpsl
lock
cmp
jb
jl
xor
jnp
cmp
test
nop
mull
mov
push
aas
sbb
insb
hlt
es
cmpl
cld
in
sarb
pop
sub
lcall
cltd
stc
dec
lret
mov
ret
inc
cmp
ret
subb
sbb
fwait
xor
inc
cmpb
inc
cmpsl
dec
std
sub
and
cmpsl
and
lods
jle
or
add
cmpsb
push
or
mov
add
outsb
mov
pushl
fsubrs
adc
sbb
cld
cs
out
push
xor
jnp,pn
loop
add
cli
dec
mov
notb
and
or
sbb
inc
mov
or
sbb
iret
imul
insl
dec
mov
jl
pop
sbb
mov
mov
dec
movsl
dec
mov
repnz
cmpsb
arpl
pop
pushf
cli
adc
js
dec
movb
out
mov
add
sbb
mov
int3
cmp
mov
or
mov
ss
jnp
pop
cs
popf
loopne
shlb
fwait
mov
test
insb
add
cmpsl
fisubrs
push
dec
std
cmc
fisubrl
in
rolb
das
aad
or
dec
lock
icebp
pop
lock
inc
mov
xchg
adc
mov
mov
adc
pop
cwtl
push
sub
out
mov
shrb
ret
push
scas
idivl
les
pop
aaa
fstpl
lock
sbb
adc
xchg
ds
enter
fildll
mov
idivb
pusha
and
ficomps
adc
push
mov
cmp
movsl
pop
mov
imul
rolb
insl
movsl
out
jb
pop
dec
xchg
cmpsb
adc
cmc
pusha
icebp
jge
jmp
mov
je
cmc
cmp
add
or
in
stos
leave
push
ds
lret
mov
mov
ret
hlt
loope
fstps
andb
push
cmp
xor
es
and
jg
sub
mov
pop
mov
addb
ja
in
sub
or
outsb
out
mov
jg
push
iret
cmp
pop
mov
fisttps
jno
inc
push
iret
out
lods
mov
daa
xchg
dec
lods
mov
mov
cmc
jecxz
adc
lret
out
mov
or
sbb
jmp
jns
rorb
cli
mov
push
subl
cmp
lods
xchg
aam
push
ja
movb
loope
sbb
fs
xlat
jle
add
iret
insb
popf
pop
loopne
mov
iret
repnz
jnp
xlat
push
mov
inc
mov
imul
lcall
pop
inc
js
dec
lret
pop
cmpsb
dec
inc
sbb
adc
aad
sbb
cmpsb
clc
jno
and
and
bound
mov
add
rcr
mov
pop
dec
cmpsb
pop
negl
or
lock
pop
jno
arpl
mov
xor
rorb
push
icebp
adc
sti
xor
pop
imul
subl
dec
int3
jno
add
dec
jne
fs
sbb
mov
xchg
repz
call
scas
mov
fwait
hlt
inc
mov
jg
inc
add
xor
mov
sbb
orl
pop
push
sbb
lret
repnz
inc
mov
push
in
rclb
insb
xor
cmp
fs
ds
leave
paddq
ljmp
subl
rcll
sahf
rcrl
jmp
mov
mov
add
mov
orb
push
hlt
and
cltd
in
shrb
sub
pop
push
out
cmp
pop
test
imul
or
mov
call
dec
js
mov
ds
push
popa
lret
outsl
xor
push
std
mov
mov
pop
lahf
fdivr
push
sub
and
xlat
test
or
or
sub
shlb
xor
push
iret
leave
jmp
or
imul
ja
mov
xor
adc
dec
decb
icebp
cmp
scas
pop
adc
fldenv
ja
daa
cmc
cld
dec
dec
add
aas
clc
adc
lds
push
shlb
jg
adc
mov
mov
mov
dec
out
inc
lds
decl
ljmp
mov
pop
test
shr
jno
dec
lods
pop
xchg
inc
mov
pop
pushf
es
pusha
xchg
inc
hlt
sbb
pop
mov
js
in
mov
fwait
jne
dec
out
rcrb
outsb
cmc
sbb
inc
xchg
inc
push
repz
imul
mov
dec
lods
popa
mov
inc
fwait
cwtl
push
imul
flds
aaa
push
inc
and
cltd
xor
lock
mov
mov
imul
adc
mov
lret
ret
rclb
sbb
push
adc
pop
lock
cmp
push
insl
insb
pusha
jno
imul
in
xor
stos
xor
sbb
jge
pop
mov
or
sbb
adc
dec
lahf
loop
adc
les
in
add
xchg
outsl
mov
pop
in
inc
sti
sub
lds
cmp
ja
mov
sbb
pop
inc
xlat
sbb
sahf
dec
mov
or
cmpsb
inc
xchg
push
adc
xor
mov
jnp
jb
or
sbb
movsb
cmp
popa
push
sarb
mov
mov
fcmove
mov
repnz
push
xchg
shrb
mov
das
xor
lcall
insl
xchg
pop
cwtl
jae
xchg
popa
mov
imul
je
jecxz
add
push
jno
imul
ficompl
mov
ja
repz
xor
adc
jecxz
and
icebp
data16
xchg
push
movsb
push
pop
mov
mov
dec
mov
cmp
pop
enter
push
lods
cwtl
push
out
xchg
push
sar
add
and
dec
inc
inc
sbb
aas
inc
test
push
loop
jns
jo
dec
cmc
xor
cmpsl
sub
clc
push
test
repnz
rcrb
xchg
pushl
ret
or
or
imul
fwait
ret
mov
loopne
in
add
aas
repnz
or
dec
repz
stc
and
sub
outsb
adc
sbb
jecxz
pop
add
cmp
dec
gs
loopne
sahf
daa
out
es
or
sub
ror
mov
lea
rcl
repz
xchg
sub
adc
inc
nop
add
into
cli
popa
push
or
xor
push
sti
inc
out
lret
cmp
xchg
push
xor
cmp
cmpsb
rorl
iret
mov
ret
into
mov
or
cli
mov
lods
movsb
icebp
xchg
jp
pusha
clc
mov
mov
ja
je
dec
xorb
mov
fwait
push
mov
fnstcw
cmp
push
mov
and
imul
add
add
mov
jp
inc
mov
test
jno
mov
imul
pushf
add
sbb
iret
mov
cwtl
jp
pop
push
scas
jns
mov
mov
pop
imul
dec
insl
cmp
mul
fwait
loope
mov
addr16
sbb
cmpsb
enter
out
rorl
imul
and
mov
sub
lea
or
addb
jb
pop
or
arpl
ret
lock
adc
lods
pop
xchg
ja
push
stos
inc
fmul
and
gs
jnp
add
int3
xlat
adc
ud0
jecxz
mov
cmp
sub
repz
cmc
call
lods
subb
xchg
pushf
pop
xchg
sbb
lcall
cmp
mov
mov
jl
jne
xchg
lea
out
xchg
pop
aaa
lds
push
mov
mov
mov
push
jmp
xchg
jmp
and
scas
pop
outsb
fiaddl
sub
jge
mov
fsubrp
out
xlat
sti
notl
mov
or
mov
testb
repnz
xchg
pushl
pop
push
xchg
or
lret
jne
cltd
jno
ds
pop
jl
sbb
sub
cli
icebp
adc
std
imul
pop
push
cmp
ret
rcr
mov
lea
imul
xor
inc
je
sbb
arpl
iret
adc
sti
sbb
adc
xchg
mov
jg
out
dec
jo
loop
dec
icebp
or
enter
mov
mov
jns
xchg
jo
pop
mov
je
in
mov
aaa
rcr
push
lret
orb
gs
js
aas
mov
jo
into
dec
imul
js
movsb
sahf
cmpsb
ss
sbb
lret
or
xchg
push
and
into
cmc
cmp
sbb
push
jb
lea
inc
inc
mov
pop
sub
push
mov
in
jnp
or
push
adc
fsubrl
jnp
lret
jl
pop
mov
test
cmpsb
push
pop
add
mov
dec
nop
fs
xchg
int
jp
scas
or
pop
cs
sbb
ljmp
jne
adc
int
stos
cmc
add
leave
cli
mov
cmc
dec
mov
ss
je
outsl
cmp
sti
loopne
push
mov
clc
cmp
sbb
insl
jle
mov
xor
xchg
or
cmp
ds
aas
jae
movsl
movsl
int
repnz
mov
jp
pop
int
aad
or
push
inc
out
adc
mov
clc
popa
sub
push
cmp
and
mov
mov
fisubrl
outsl
data16
xchg
cli
cmp
in
movsl
xchg
xchg
xor
cmp
clc
mov
jno
jae
andb
stos
pushf
lock
lock
jae
inc
ja
inc
xor
or
jg
arpl
dec
dec
mov
js
aaa
test
scas
push
pushfw
popa
xor
push
ss
addl
xchg
jp
push
cmp
add
imul
cs
inc
loop
inc
mov
push
lahf
das
add
cmp
icebp
adc
xchg
cmp
mov
mov
ret
xlat
and
inc
jmp
push
lock
xchg
addr16
cmpsb
out
mov
mov
clc
fisubrl
ss
xchg
cmpsl
shrl
ret
jmp
mov
inc
push
sub
pop
mov
push
cmpsl
mov
pop
out
mov
and
add
inc
jmp
mov
cmp
in
lods
divl
xor
xor
xor
inc
mov
jge
fidivs
sbb
daa
xchg
and
inc
add
or
jp
lahf
mov
mov
dec
and
test
ss
ja
leave
mov
or
int3
in
xor
ret
cmp
popa
int
xlat
pusha
ror
std
ret
mov
cli
push
push
test
cltd
lea
popf
lret
jecxz
in
mov
rorl
xor
test
ja
inc
fsubrp
dec
enter
dec
sti
test
push
mov
enter
mov
jbe
push
xor
dec
xor
mov
loop
adc
dec
sahf
in
bound
imul
xchg
out
cmp
outsl
jae
sbb
jo
xchg
rolb
leave
icebp
lods
lcall
xor
pop
out
dec
pop
adc
jno
push
sub
lock
data16
sbb
jnp
mov
test
sub
inc
leave
pusha
cmpsl
jp
ljmp
lret
dec
jnp
mov
mov
sub
xor
jp
aad
jge
mov
xor
jno
lock
inc
je
add
xor
push
mov
and
jns
sub
dec
pop
or
and
inc
inc
sub
or
adc
rep
lods
dec
dec
push
lods
xor
in
mov
push
rcl
sub
andb
dec
push
das
pushf
push
mov
mov
cmc
and
mov
testl
arpl
xchg
ja
jmp
aas
add
sbb
notl
shrl
xor
jge
dec
stos
mov
leave
lds
cmp
scas
lret
jnp
xchg
add
lret
mov
jp
fstpt
pop
pop
fsubl
jle
adc
negl
jp
mov
sbb
bound
lcall
ds
cld
sahf
xchg
and
loop
add
cli
jns
in
mov
dec
xlat
mov
xchg
insb
mov
mov
cli
adc
and
jmp
enter
push
jns
push
or
js
faddp
mov
cmc
dec
xor
das
outsb
in
xchg
ret
cltd
cmp
lods
jge
xor
out
adc
shll
add
fldcw
mov
arpl
arpl
fbld
dec
into
xlat
lods
mov
movsl
in
inc
mov
pop
pop
lcall
xchg
mov
mov
test
inc
pop
mov
or
dec
enter
or
cmp
push
loop
cmpsl
inc
lcall
xor
out
xor
mov
mov
testl
cmp
push
inc
xor
and
shlb
scas
jmp
and
aaa
sub
fldl
xchg
pop
mov
sbb
dec
adcb
xchg
repz
outsb
mov
and
xchg
push
cmpl
lods
dec
cmpsl
pop
les
in
jp
mov
xchg
inc
js
inc
mov
outsl
pushf
cmp
sbb
int
xchg
pop
mov
cmp
movsl
jns
lahf
std
cmp
pop
imulb
clc
inc
scas
inc
orb
and
fisttpll
jnp
cmp
cmpsb
pop
js
data16
push
popf
imul
cld
imulb
mov
into
dec
xor
cli
dec
push
mov
fisubrs
sub
push
je
cmp
add
sub
jg
pop
stos
mov
and
mov
inc
add
push
out
int3
sbbb
clc
sbb
or
and
mov
cmc
push
pop
addl
cli
ljmp
pop
lock
mov
fiadds
andb
inc
mov
mov
imul
outsb
sbbb
pop
jp
imul
ja
and
mov
pop
test
mov
push
cltd
adc
xor
pushl
push
hlt
adc
stos
out
sbbl
arpl
inc
sti
add
andl
fldcw
push
popf
mov
mov
into
or
daa
imul
dec
xchg
lahf
dec
mov
add
mov
jle
aam
dec
adc
jp
sub
sub
scas
mov
sub
out
inc
xlat
push
jecxz
inc
cwtl
cmp
ficoms
inc
add
xchg
mov
in
enter
xchg
or
aam
push
inc
push
scas
popf
push
bound
arpl
mov
nop
cmpl
add
pop
inc
jmp
cmp
ljmp
insl
cmpl
imul
into
xchg
sub
nop
jmp
xchg
push
notl
int3
jae
or
sub
adc
xor
or
xchg
dec
mov
popa
inc
into
mov
sub
mov
or
ret
jg
pop
mov
xor
cld
add
jnp
lahf
inc
and
jl
jl
insl
adc
cmp
rcll
fldl
cltd
arpl
cltd
daa
lds
stos
repnz
jns
xchg
dec
shlb
push
ret
jns
xchg
out
cmp
pop
and
add
int
fnstsw
scas
cltd
inc
pop
es
lahf
xor
in
stos
or
cmp
call
xchg
and
iret
and
movsb
stos
push
mov
mov
pop
jmp
sbb
repz
into
xchg
addr16
bound
mov
jb
les
repz
add
xchg
aas
push
sahf
repz
das
fsts
sub
mov
inc
call
outsl
mov
mov
int3
mov
or
cmp
pop
call
aam
push
push
inc
incb
testl
loope
add
mov
aam
les
xchg
ret
imul
xor
scas
idivb
xor
in
rclb
call
jmp
popa
in
pop
jbe
pushl
dec
add
movsb
and
jmp
sti
jmp
push
stos
dec
lahf
dec
int3
add
sti
mov
jle
push
or
js
pop
daa
xchg
cs
test
xorl
push
cmp
or
in
mov
mov
sbb
xor
std
mov
jbe
mov
push
sbb
movb
test
les
shll
dec
mov
or
mov
mov
adc
cmp
les
scas
and
inc
inc
cmpsb
dec
aaa
or
shlb
out
bound
std
push
or
std
xor
jns
dec
or
popl
adcl
sub
xor
mov
sub
sbb
push
jno
sbb
out
and
mov
jno
lret
lds
mov
repz
xor
gs
adc
sub
mov
xchg
test
ret
inc
movb
dec
or
jp
lods
jmp
mov
scas
test
and
mov
jne
scas
icebp
pop
pop
mov
dec
or
pushf
push
xchg
bound
addr16
inc
popa
jmp
mov
fldcw
jecxz
cmp
pop
xlat
sub
adc
cs
jo
adc
jb
jno
insb
xor
das
jl
outsb
dec
mov
mov
and
call
xor
pop
negb
jmp
jno
bound
push
mov
pop
mov
mov
jle
sbb
pop
stos
xlat
inc
lcall
inc
call
outsl
mov
jle
jl
or
xchg
pop
push
fcoms
fsubl
out
aad
icebp
mov
in
xor
icebp
cs
mov
mov
cmp
push
mov
mov
add
sbb
stos
sti
add
dec
pop
loope
mov
sbb
filds
popl
and
pop
adc
xor
cmp
loop
jns
lahf
jno
cmp
push
movsl
fiaddl
outsl
inc
sub
or
orb
outsl
lea
rol
xchg
dec
cmp
or
xchg
mov
xor
xor
sub
and
add
inc
mov
and
mov
ljmp
push
aam
arpl
inc
cs
rcll
call
in
nopl
push
test
les
repz
adc
mov
adc
pop
int
or
cmpsl
dec
lods
push
fld
ss
clc
and
in
pop
repz
or
and
fildll
test
outsb
or
in
cld
bswap
aad
cmp
rorl
push
xchg
movsl
push
les
inc
xchg
pusha
adc
std
cltd
pushl
clc
inc
mov
loopne
add
dec
stc
dec
sub
daa
lea
in
adc
push
addb
insl
das
mov
cmp
jecxz
aas
mov
inc
adc
push
adc
mov
int
jmp
pop
movsb
divb
sub
or
outsl
nop
or
int
dec
dec
lods
xlat
mov
or
fistpll
pop
aam
imul
cltd
mov
dec
sub
pop
les
push
scas
jne
out
jae
lods
insb
stos
and
in
cwtl
jle
or
fiadds
arpl
ret
or
push
push
iret
dec
mov
xor
lds
mov
ljmp
cmpsb
pop
jg
ss
lds
stc
or
ss
add
cmp
lahf
and
push
stos
lea
ds
std
dec
push
mov
cmp
pop
fdivl
mov
rcll
pop
dec
es
lret
mov
jp
jl
aaa
push
ret
lock
or
adc
repnz
pop
addr16
inc
jbe
pop
xorb
ss
icebp
jecxz
pop
ss
lahf
xor
test
test
and
sbb
or
cmp
inc
fisubrl
push
ja
jecxz
mov
mov
mov
cmpsl
mov
sub
mov
iret
mov
xor
loop
rcl
and
jg
or
test
sarb
jge
mov
test
ficomps
jbe
adc
sarl
jnp
xchg
js
scas
cmp
pop
ja
mov
das
inc
les
mov
insb
mov
rorl
lea
add
out
dec
pop
repz
inc
cmp
andl
xor
int
and
add
sbb
ret
outsb
inc
pcmpgtb
and
mov
int3
mov
inc
push
pop
sarl
out
xchg
lret
lock
out
xchg
fdivrp
mov
jmp
xchg
sti
push
push
push
pop
fldt
inc
lcall
pop
xchg
xchg
lret
addr16
inc
mov
fistps
mov
mov
push
mov
sbb
dec
inc
xlat
cmp
ud0
pop
dec
aaa
out
cmp
inc
mov
jb
mov
mov
push
sbb
or
subl
jae
sub
test
xor
cld
sub
fldl
mov
push
inc
sti
enter
fistl
ja
ret
lock
leave
jmp
popa
lahf
add
enter
and
mov
xlat
imul
pusha
mov
add
sbb
cmp
jle
aad
ss
gs
push
repnz
arpl
xchg
push
lret
and
pushf
pop
enter
aas
test
dec
add
and
out
in
sbb
fnstcw
lods
mov
je
aam
int3
sub
stos
lods
outsl
sbb
movsb
adc
xor
and
cwtl
jle
mov
add
sti
sarl
cmp
jp
repnz
scas
xor
arpl
adc
and
xchg
call
xchg
stc
xchg
mov
sbb
in
adc
dec
jecxz
add
fsubs
aad
mov
or
pop
lods
pop
enter
inc
xchg
mov
ja
inc
fwait
decl
ljmp
xor
in
shrb
into
mov
ret
shlb
jns
adc
xor
cwtl
addr16
iret
loopne
mov
sub
repnz
outsl
push
shll
lret
mov
ss
scas
mov
sahf
or
push
fisubrs
aam
cli
into
mov
int3
cmovns
pop
insb
test
dec
sbb
es
jmp
inc
and
adc
push
testl
ss
pop
push
mov
js
mov
add
in
lea
mov
push
repz
mov
ret
or
icebp
adc
add
cmp
xchg
inc
mov
jno
lret
lar
es
mov
and
out
andnps
jl
loop
jno
or
cld
sub
mov
lods
bound
inc
mov
mov
insb
mov
and
add
scas
dec
fidivrs
es
xchg
sub
int3
arpl
je
lret
jb
or
sub
xor
or
push
into
inc
dec
xchg
jnp
pop
push
lret
pop
dec
mov
or
mov
idivl
roll
dec
xchg
sub
jmp
mov
lahf
js
and
or
sti
in
inc
inc
stos
adc
ret
insl
shlb
out
jo
adc
fsubrs
push
sub
out
mov
xor
fnstsw
aad
aas
das
dec
xchg
testb
lea
mov
aam
insb
or
push
dec
paddusb
aas
lds
pop
je
sbb
lret
cmp
xchg
pop
fistl
scas
push
mov
jno
cmp
sbb
jecxz
mov
jmp
mov
and
mov
sbb
mov
xchg
inc
and
jae
adc
int3
inc
xchg
xor
subb
and
dec
lret
and
mov
add
or
sbb
push
mov
outsb
lea
lds
push
and
je
push
sbb
add
icebp
push
xchg
daa
pop
int
jno
sbb
xor
or
shrl
push
aam
dec
lods
movsb
shll
fcompl
into
xchg
jnp
mov
jmp
mov
dec
test
orl
movsl
jo
and
jbe
jle
rorb
pop
aaa
pop
mov
mov
out
enter
bts
sbb
jno
jb
shrl
jecxz
aaa
sahf
stos
in
xorb
mov
sbb
scas
pop
ret
add
ja
leave
rorb
std
dec
xchg
int
nop
push
outsl
lahf
and
xor
pop
jmp
jns
mov
sbb
jmp
cwtl
mov
rolb
fcomps
pop
mov
jns
mov
fbstp
rcrl
aas
jmp
stc
pop
sub
mov
jne
push
add
fucomi
xor
mov
sbb
mov
ljmp
scas
jb
js,pn
or
mov
cmp
xchg
aad
jp
fs
out
shl
out
sbb
jo
pop
xchg
and
cmp
push
divl
jmp
mov
pop
sbbb
int3
xchg
test
xchg
js
fwait
jle
pop
xor
cmp
adc
pop
int
add
cmp
testb
xchg
dec
scas
xchg
inc
xor
aad
call
mov
cld
je
ds
fisttpll
hlt
push
jl
fnsave
in
add
es
punpckhwd
dec
cli
dec
dec
sbb
mov
shll
xchg
push
mov
pop
cs
rorl
xchg
dec
fcmovbe
push
push
mov
ljmp
orl
xor
pop
pop
sub
inc
shll
lret
xor
js
mov
mov
out
xor
push
ret
call
daa
sbb
fcomps
fisubl
push
cld
jne
cmp
clc
fisttpl
rcll
aas
fimuls
mov
mov
mov
inc
pushf
mov
pop
test
and
adc
cmp
aam
cs
or
fidivl
mov
shlb
dec
mov
push
dec
and
loopne
lea
xchg
ror
mov
cmp
lds
sbb
jno
aam
setbe
push
jmp
scas
pop
fisttpl
decb
and
mov
jb
cmp
cld
lcall
es
xchg
lahf
lods
pop
ficompl
ds
movsb
fs
mov
in
add
sub
pop
xchg
xor
jp
clc
repz
dec
mov
int3
divl
jae
mov
cli
outsb
mov
out
cmp
rorb
sub
dec
cmp
xchg
dec
scas
fs
xor
ljmp
xor
mov
ret
dec
out
test
xchg
cmp
sahf
jae
into
pop
xor
fisubrl
leave
cmp
mov
cmp
test
xchg
cmp
dec
pop
jmp
sbb
lret
push
jnp
push
stc
repnz
int
jno
jp
in
xchg
ret
push
stos
pop
push
push
adc
inc
cmp
aad
in
mov
adc
inc
shl
and
xor
inc
int3
pop
scas
pop
jle
xchg
dec
int
adcl
xor
inc
xchg
sbb
cmp
rolb
and
das
inc
pusha
mov
push
stos
inc
push
imul
xchg
jnp
dec
sti
cmp
xchg
fldz
ds
mov
nop
loop
inc
lea
out
sbb
cmpsl
out
imul
clc
cld
in
cld
hlt
cld
jmp
popf
sub
aas
or
test
mov
loopne
mov
push
xchg
ljmp
jo
out
sbb
or
cld
cmp
mov
mov
aad
imul
repz
mov
push
into
movb
inc
cmp
call
adc
xor
mov
jne
lds
pop
mov
mov
add
jo
in
out
cwtl
cmp
adc
mov
data16
jbe
scas
inc
pop
in
das
aam
adc
sub
or
xchg
dec
test
lcall
mov
lret
dec
lods
into
jmp
cmpl
imul
lcall
mov
push
xchg
popa
xchg
jl
cmp
push
mov
loop
adc
push
jecxz
cs
daa
int
sbb
xchg
jnp
andl
int
dec
dec
inc
mov
sub
insb
xchg
lcall
push
mov
jg
mov
in
insb
mov
add
ficomps
mov
xor
and
out
mov
xchg
mov
xor
xor
sti
mov
mov
test
fcompl
in
and
ss
repnz
cmp
inc
mov
xor
mov
aas
cmp
adc
aas
jmp
pop
jle
xchg
das
adc
les
incb
lds
nop
sbb
pop
cmp
pop
in
and
adc
xchg
dec
inc
mov
ficoms
pop
mov
jo
data16
or
add
stos
insb
mov
jnp
pop
nop
arpl
mov
pusha
stos
scas
xor
adc
xor
cmpsb
xchg
orb
pop
ljmp
pop
push
cmp
and
lods
pushf
addb
loope
xlat
mov
xor
clc
fcompl
dec
sub
inc
andb
mov
adc
jnp
push
fst
clc
lods
test
xor
adc
hlt
sub
dec
cltd
xor
psubd
mov
es
add
adc
sub
loop
sub
mov
xor
setno
mov
pop
jecxz
cltd
cmc
out
jp
add
adc
imul
jge
adc
xor
pop
int
pop
jge
js
aad
xor
outsb
out
fmull
lds
adc
pop
mov
cmp
sbb
sahf
cmp
jnp
adc
stos
pop
dec
pop
xchg
pop
fwait
sbb
inc
xchg
jno
les
lods
mov
xchg
imul
mov
test
push
icebp
into
cmp
pop
sub
xor
add
and
nop
push
les
adc
inc
dec
xchg
jae
ret
add
ret
call
outsb
inc
pop
inc
notl
jecxz
int3
add
xor
addb
inc
lds
popf
or
popa
div
jno
xchg
cmc
or
imul
imul
imul
jecxz
into
clc
sbb
aas
and
test
sub
pop
mov
ds
adc
ret
pop
aad
push
lahf
lea
cld
add
mov
mov
fwait
mov
sbb
xchg
ret
rcrb
jle
mov
xchg
mov
lret
mov
insb
mov
js
jo
jne
out
fldl
repnz
cmp
and
mov
xchg
mov
pop
inc
insl
mov
stos
inc
mov
int3
or
fldt
test
mov
push
mov
lcall
jb
inc
in
dec
lahf
pop
dec
adc
ss
or
lret
dec
or
sub
add
adc
push
sub
sbb
cwtl
mov
sbb
out
xor
iret
sub
aas
add
mov
cmc
mov
movsb
mov
cli
or
cmovl
decb
pushf
push
mov
and
lahf
sub
push
shrb
iret
jo
out
gs
les
sub
push
testl
and
xlat
lahf
jbe
insl
adc
jecxz
in
mulb
ret
mov
aaa
in
sbb
lods
cmpl
mov
imul
jno
outsb
push
flds
mov
fldl
movl
or
lds
pop
test
sub
mov
call
pop
test
xchg
push
flds
pop
mov
cmp
scas
stos
cltd
popf
pop
scas
cmp
push
xor
fwait
cmpsl
ficoms
rcrl
add
rol
sbb
cmp
adc
lret
sbb
adc
or
sbb
cmp
jb
xadd
sti
sti
fwait
pop
cmpsl
jae
mov
cmpsb
in
jnp
sub
and
sub
dec
mov
les
sbb
pop
pop
mov
inc
shrb
les
mov
mov
or
cmp
push
fisubs
jmp
xor
sarb
sbb
dec
lods
cld
dec
test
or
cmp
mov
lahf
jecxz
sbb
and
mov
mov
addl
or
xchg
pop
xchg
inc
mov
push
aas
fcoms
loope
int3
lret
jno
inc
and
inc
mov
pop
mov
xchg
sbb
subb
pusha
arpl
outsl
in
test
stos
rolb
mov
inc
aam
repnz
pusha
xor
sbb
sub
aaa
in
in
or
in
or
sarb
lcall
in
sub
mov
xchg
sti
or
inc
fadd
push
out
lret
in
out
adc
xor
sub
push
jns
mov
fs
lahf
cmc
out
cltd
sbb
mov
rorl
idivl
mov
push
stos
add
sbb
jl
sub
and
setl
push
sub
imul
out
arpl
shlb
adc
rcrb
adc
sahf
jae
cmpsb
inc
xchg
xor
gs
add
sub
pusha
clc
loop
xchg
cmc
cs
call
xor
popf
imul
and
pmaxsw
test
cmp
test
movsb
jne
push
fs
pop
in
xor
push
stos
push
and
decl
ret
jns
clc
ret
push
fsubs
mov
push
test
push
sahf
cmp
pop
enter
fldl
into
add
jmp
cmp
sub
es
mov
inc
push
fsubrs
cmpsb
scas
pusha
cmp
adc
bound
xor
aas
lea
dec
sub
imul
fstl
cmp
inc
mov
dec
lea
add
fisubl
xchg
lock
les
adc
arpl
add
sbb
xlat
mov
jmp
hlt
cmp
dec
sti
mov
fstps
push
das
jg
roll
rcrl
fcoms
jmp
mov
nop
pop
cmpb
and
lret
gs
mov
cltd
add
aas
lds
popf
mov
jp
jns
mov
inc
movsl
into
stos
dec
cmc
jmp
outsb
or
mov
pop
xchg
repz
shrl
inc
lock
ret
jl
std
dec
mov
scas
pop
lcall
inc
xchg
push
dec
pop
js
xchg
sahf
dec
xchg
pop
mov
and
jb
mov
and
call
bound
cmc
cmp
fimuls
aam
cmp
xor
shll
into
rorl
lds
cmp
cli
xchg
xor
pop
xchg
fsubp
and
mov
jae
mov
push
push
mov
mov
sbb
rolb
adc
fcoms
test
adc
cmp
int3
adc
xor
add
mov
fistpl
push
divb
mov
sarb
lock
cltd
add
mov
insl
inc
call
bound
push
stos
push
mov
ret
sbb
mov
jge
pop
stos
push
into
adc
rorl
inc
lock
out
jnp
jb
mov
popa
adcb
pop
add
pop
xorb
add
fistps
dec
push
stos
dec
enter
paddusb
jb
insb
andl
sub
mov
imul
jge
mov
dec
mov
jno
xchg
insb
mov
sub
icebp
and
test
and
in
clc
dec
xor
push
pop
popf
jge
push
daa
mov
push
cmpsl
sbb
lods
inc
xchg
jle
push
test
imul
pop
or
or
xlat
inc
cmp
and
popf
push
sbb
add
jle
aad
mov
ds
nop
cmp
cmp
shr
xor
hlt
cld
sub
ficoml
inc
sbb
and
dec
xorb
jae
cli
sbb
flds
into
pop
pusha
movsb
pop
jno
pop
gs
push
pushf
ja
shr
popf
jbe
test
mov
lcall
pop
clc
jb
lret
sub
and
lret
jg
inc
xchg
pop
mov
inc
popa
addb
cwtl
inc
mov
hlt
mov
push
xchg
aaa
mov
lea
inc
repnz
fnstcw
ss
push
jmp
add
aaa
cli
sub
cmp
mov
subb
stos
xor
xchg
mov
pop
cltd
pop
outsb
ss
test
sub
lret
cmp
add
ret
fdivl
sub
pop
icebp
cmp
sbbl
mov
in
dec
out
aam
jo
and
adc
mov
lock
js
ret
out
xlat
xchg
jae
dec
movsb
mov
mov
fimull
dec
lcall
cmp
mov
mov
jne
icebp
mov
pop
movsb
fwait
push
xchg
daa
or
mov
call
sti
insb
in
and
subb
fbld
push
dec
xor
fildll
inc
inc
pushf
outsb
cmp
dec
pop
sbb
jo
push
mov
testb
xor
jo
inc
mov
outsb
mov
dec
xchg
dec
mov
jno
jb
inc
xlat
enter
xchg
jo
fisttpll
mov
clc
jne
xor
stos
test
test
inc
iret
aas
cmp
sub
fimull
add
sub
lret
sahf
mov
pop
xor
daa
cmp
jne
mul
mov
adc
out
ds
cmpsb
and
mov
negl
push
mov
mov
or
sbb
in
les
frstor
les
ljmp
aas
andb
sub
test
loopne
aas
out
push
enter
insl
popf
outsl
dec
int
dec
cltd
mov
movsl
popa
cmpl
cmpb
jecxz
xlat
xorl
dec
std
aam
sarl
and
dec
add
fcmovnu
dec
mov
loop
mov
jns
pop
nop
data16
rol
cwtl
pop
xchg
dec
ja
xchg
jae
mov
cmp
mov
les
jmp
xchg
imul
push
sbb
xor
sbb
leave
cmovb
and
dec
pop
pop
call
aaa
pop
pushf
jo
out
mov
push
shlb
or
leave
loop
cmpsb
sbb
ds
stos
push
xor
cs
cwtl
sbb
jne
xor
addr16
cmp
xor
outsb
mov
lea
aam
stc
inc
out
popf
xor
sbb
cs
adc
call
inc
xchg
insl
mov
push
lock
inc
sahf
mov
lret
daa
int3
scas
outsl
test
push
fcoml
jmp
dec
xchg
subl
outsb
inc
popl
inc
dec
daa
add
ds
push
pop
mov
shlb
aam
test
in
pop
jp
sub
fisttpll
sbbb
loope
add
inc
or
data16
or
pop
imul
loope
cs
insb
xchg
faddl
mov
inc
xor
mov
jp
stc
or
or
das
xchg
hlt
rcrb
imul
sub
ja
cld
lret
rep
mov
fcompl
aam
mov
shl
stos
fadd
sbb
inc
lods
addr16
insb
das
int3
xor
inc
loop
jmp
push
loope
cmp
xchg
mov
lret
add
cmpsl
inc
ret
xor
and
mov
loopne
add
andb
sbb
notl
jmp
shrl
push
lods
mov
xchg
sub
inc
repz
lods
arpl
enter
dec
xchg
popa
dec
push
mov
lods
jp
dec
fisubrs
rcll
jge
jae
push
xchg
int3
or
stos
repnz
mov
sbb
test
cmc
gs
test
test
pop
negl
sti
fsubs
lods
bound
pop
movsl
arpl
jnp
mov
popf
scas
imul
mov
hlt
rcrb
test
cltd
out
sub
push
push
ljmp
gs
inc
lds
or
xor
leave
sub
or
lock
stos
nop
fsts
xor
push
lcall
or
outsl
nop
sub
mov
or
sub
shll
ljmp
or
xor
sub
xchg
das
daa
gs
push
xchg
jno
lock
jmp
addr16
lea
pop
icebp
inc
jne
rcr
mov
ret
push
dec
mov
js
pop
jle
cmpw
lea
cld
or
pop
loop
sub
push
cmpb
push
push
mov
dec
mov
out
cmpsb
dec
lahf
pusha
lea
mov
inc
jae
hlt
pusha
mov
mov
mov
das
inc
pushf
insb
movsl
mov
mov
push
pop
mov
jns
addr16
or
xor
stos
addr16
gs
xchg
xchg
push
out
dec
inc
lahf
xor
dec
js
cmpsl
jg
insl
aas
shr
aaa
mov
xor
shl
mov
mov
fldl
dec
push
icebp
adc
outsb
add
pop
mov
inc
inc
pop
sbb
xlat
xchg
sub
mov
pop
stc
push
pop
mov
shll
dec
or
ret
xor
enter
das
mov
push
sub
test
stc
mov
push
ja
les
cmp
les
sub
pop
mov
mov
adc
loopne
fimull
jle
pop
mov
mov
pushf
lods
test
mov
mov
mov
push
sub
fistl
or
loopne
xchg
mov
cmp
in
mov
lea
mov
fnsave
xor
xor
inc
scas
jb
sbb
mov
out
in
sub
dec
mov
int3
popa
sub
in
addr16
mov
xchg
dec
mov
aaa
sub
testb
dec
pop
mov
push
sub
rorb
emms
xor
cmp
mov
test
aam
outsl
mov
out
adc
fistpl
movl
insl
nop
mov
sbb
dec
pop
leave
or
push
mov
jno
jmp
or
cmp
ja
add
add
jo
ds
push
test
in
adc
stos
jl
inc
push
pop
xchg
or
jns
popa
pop
out
filds
popa
hlt
add
push
mov
cmc
fs
stc
xor
les
fistpl
adc
fiaddl
fs
pusha
inc
xchg
int3
mov
gs
pop
bound
testb
iret
daa
inc
test
in
add
je
dec
pop
ret
in
xor
sbb
fwait
addr16
sbb
jbe
push
mov
mov
add
jmp
ds
sti
pop
rcll
cmp
fwait
jo
add
jbe
inc
push
sub
out
jle
fildll
mov
arpl
or
push
add
and
call
shrl
pop
nop
inc
stos
sub
sbb
outsb
lahf
or
xor
mov
sub
xor
sarb
out
or
lret
push
ret
mov
lods
andb
push
loop
fs
iret
dec
mov
lea
dec
mov
imul
mov
or
mov
xchg
imul
mov
jmp
daa
je
fsubrl
subl
loopne
mov
and
leave
jae
lahf
pop
addr16
pop
cmpsl
out
push
mov
mov
xor
aam
sete
lock
jne
ret
pop
lret
add
fildll
aam
pop
int
cmp
or
inc
pop
loop
sbb
xor
sub
xor
mov
cli
repz
jo
dec
add
je
xor
or
cs
push
mov
aad
pushf
popa
mov
repnz
stc
filds
in
std
push
std
adc
ds
add
inc
out
sub
adc
mov
sbb
gs
lds
sbb
fdivrl
and
inc
adc
xor
into
or
jo
adc
mov
mov
adc
and
jecxz
in
lret
mov
jp
mov
push
sbb
push
xlat
mov
testb
imul
loop
inc
add
mov
daa
test
dec
push
into
popa
or
mov
push
fwait
push
cwtl
jne
and
adc
sarb
test
cmp
sbb
mov
dec
mov
adc
cs
outsl
pop
leave
sbb
inc
out
icebp
fistpll
in
adc
das
and
mov
xor
decl
sub
ret
dec
mov
jge
inc
sti
mov
cmp
aam
testl
fwait
or
xor
outsb
mov
sub
mov
sub
ret
push
fstpt
push
push
mov
dec
xchg
sbb
adc
out
loopne
into
sub
lcall
mov
popa
jl
pop
push
xchg
sarb
mov
pop
cmpsl
arpl
mov
mov
mov
xchg
mov
push
jae
sub
incb
fdivl
mov
xor
ret
cmp
stos
lods
jmp
sbb
jnp
dec
cli
ss
in
jge
add
in
fdivl
jns
stos
inc
mov
push
dec
push
xchg
or
arpl
fnsave
into
icebp
jb
mov
cli
jp
sub
aas
aaa
mov
mov
jmp
das
and
mov
mov
mov
dec
mov
les
dec
es
cmpsl
jb
push
js
rol
scas
xlat
add
je
mov
sub
rorb
test
sarb
mov
sbb
inc
inc
xor
xor
cmp
les
fmuls
or
std
repnz
out
xchg
int3
sbb
jl
mov
jne
sub
pop
mov
xchg
lret
bound
test
xchg
cmp
inc
push
mov
mov
inc
insb
pop
or
add
rcll
das
jns
adc
call
lahf
pop
inc
mov
dec
ret
out
cwtl
popa
and
dec
jmp
adc
pop
and
sbb
dec
inc
int
add
pop
xor
call
jb
xchg
fildl
and
xchg
movsl
jle
sub
push
loopne
mov
jp
ss
jge
jecxz
inc
ds
fsub
or
int3
inc
lcall
xor
test
ljmp
popl
cmp
xchg
inc
sti
out
repz
adc
push
adc
cmpsl
mov
xchg
adc
cmp
andb
mov
dec
shlb
les
dec
rclb
sbbl
add
mov
xor
mov
xor
sub
inc
push
cmp
popf
pushf
push
ja
loop
test
je
xchg
orb
test
push
pop
loope
jo
test
cmc
and
ss
pushl
xor
dec
pop
mov
xchg
andb
insb
es
mov
pop
test
aas
mov
mov
outsb
push
cli
sbb
ljmp
ja
inc
adc
fisttps
out
scas
inc
pop
je
or
jbe
push
or
fsqrt
sub
repz
into
test
or
fcmovu
jno
jns
imul
sub
lret
aas
sbb
cmp
mov
shlb
mov
push
outsb
rcrl
xor
jge
in
add
insb
adc
jae
cld
ljmp
jmp
adc
sub
jbe
mov
nop
add
loopne
and
ja
cmp
jae
xchg
jbe
pop
cmp
xlat
jmp
push
popa
jns
mov
jne
imul
jp
cmp
pop
jmp
mov
jl
repnz
mov
xlat
sti
xchg
adc
pop
test
sbbb
adc
push
in
pop
sbb
shlb
lods
add
pop
inc
cld
out
mov
sahf
xlat
outsl
or
add
sub
mov
inc
push
add
or
cld
ja
iret
add
stos
sarl
not
jae
push
push
add
lds
repz
sub
add
into
lahf
jg
iret
or
cmpsl
mov
rclb
pop
nop
sahf
ret
add
pop
add
mov
cs
add
jno
imul
out
cli
cltd
sarb
xchg
dec
jecxz
cmp
add
nop
dec
mov
xchg
add
add
ds
iret
xchg
add
mov
jb
movsl
test
dec
push
xor
negb
jmp
test
jmp
xchg
faddl
and
dec
aam
lock
std
int
cmp
adc
aad
outsb
and
mov
add
sahf
dec
mov
cli
push
in
movsb
push
mov
jb
fstpl
cli
xchg
push
nop
fidivrs
iret
jno
push
mov
xor
adcl
cmp
in
cmpsb
repz
lret
vpackuswb
sti
inc
or
inc
test
or
push
movsb
out
add
popa
push
fwait
push
je
lahf
push
xor
jl
xchg
xchg
out
arpl
adc
insl
mov
popf
pop
fildl
in
cmpsl
and
push
xchg
xchg
pop
scas
fisttpll
mov
sbb
outsb
out
push
shrb
cmp
popf
adc
jno
sub
test
iret
mov
pop
arpl
and
int
xchg
and
les
arpl
jmp
jns
push
pop
pop
xchg
mov
adcl
jns
nop
dec
aam
mov
cmpsl
sub
push
lock
xor
das
out
testb
or
xchg
dec
add
movsb
aam
xchg
or
imul
pop
inc
mov
shrb
mov
lods
sbb
add
sarb
sbb
jns
sarb
js
push
test
or
xchg
sub
pop
or
imul
xchg
mov
imul
push
pop
cmp
mov
mov
dec
std
xor
lret
add
sub
call
push
add
pop
lret
cmp
dec
nop
rcll
lock
mov
outsl
pop
cmc
loope
and
cmpsb
ja
sbb
pop
insl
aad
addb
jns
mov
jne
or
jns
push
andb
fldt
or
add
aas
push
jge
mov
sarl
lcall
sti
test
imul
jge
hlt
cwtl
xchg
mov
filds
lcall
out
pop
xchg
pop
adc
imul
sub
mov
stc
sahf
push
clc
inc
mov
into
xchg
in
add
cmp
adc
add
jo
xchg
movsl
outsl
adc
push
cmp
sbb
ss
fimuls
loope
scas
lret
bound
lock
sbb
sti
rol
in
mov
inc
mov
xchg
sub
cmp
or
out
lea
ror
xor
dec
rclb
mov
pop
inc
mov
stc
mov
mov
or
jne
fimuls
stc
paddusw
repnz
xor
mov
les
pop
arpl
xchg
lea
data16
pushf
push
mov
repnz
mov
cmpsb
loop
movsl
jl
push
cmc
das
popf
push
mov
jbe
cli
xor
cmp
sti
jns
pop
sysexit
cmp
mov
fs
xchg
mov
mov
repz
pop
aaa
iret
lds
repnz
xor
popl
mov
repz
popa
push
in
ljmp
lea
cmp
imul
hlt
cmp
sbb
lock
js
xor
sti
fcomps
or
adc
popf
addl
push
ficoml
push
xor
pop
les
pop
fcmove
fisubrl
jmp
sti
push
int3
sbb
test
and
int3
adc
sbb
lcall
out
adcb
xorb
bound
xchg
push
dec
test
mov
push
jbe
inc
mov
push
cmpl
add
adc
or
push
cmpsl
push
icebp
lret
sub
rorl
jge
xor
fs
add
js
dec
mov
push
popf
fs
mov
cmp
inc
sti
mov
and
jmp
or
and
out
inc
adc
out
inc
cmp
sbb
cmp
mov
lret
shll
or
icebp
fisubs
ret
pop
call
inc
outsl
movb
xor
andl
ja
icebp
aas
inc
jmp
inc
ljmp
or
cmp
mov
call
es
add
sbb
stos
or
mov
and
add
ja
iret
sti
stos
jle
icebp
xchg
mov
sub
pop
movsb
arpl
subb
jge
sahf
inc
arpl
jnp
shlb
stc
xchg
mov
push
jo
cmpsb
inc
sbb
sbb
pop
mov
pop
cmp
stc
aas
mov
pop
add
sub
cmpsb
outsl
stc
sbbw
add
aaa
inc
addr16
add
sarl
mov
bound
lcall
fstpt
nop
and
dec
cmp
inc
pop
or
loope
roll
mov
lret
jns
adc
enter
xor
push
inc
jecxz
fimull
jecxz
ret
inc
mov
cmp
test
jae
pop
fisttpl
pop
add
sbb
sub
sti
or
sbb
sbb
aas
call
xlat
xchg
xchg
mov
hlt
cmp
adc
aad
clc
adc
inc
hlt
adc
push
adc
decb
ljmp
loope
lahf
sub
sbb
and
adc
aas
dec
lods
pop
stos
jo
lods
pop
jge
shlb
mov
xchg
popa
mov
ret
int3
lcall
jns
inc
xacquire
jbe
xchg
outsb
sahf
mov
sti
lcall
leave
mov
sahf
and
cltd
insb
nop
push
js
cmpsl
mov
stos
call
cmpsb
cwtl
es
xchg
pushf
pop
lods
mov
ljmp
and
dec
mov
rcll
leave
es
add
cs
sub
add
or
cmp
and
xor
adc
push
outsl
xchg
popa
adc
cld
add
xrelease
outsb
or
or
out
test
cmp
sbb
push
add
xchg
and
fmull
stc
add
daa
negl
pop
stos
xor
and
cmpsb
xor
push
xchg
jb
cmpsl
in
jb
jns
es
mov
pusha
adcl
lods
test
orl
fdivrs
and
pop
and
mov
sub
gs
inc
daa
jp
xor
or
imul
sbb
mov
call
pushf
jecxz
ffreep
lods
mov
loop
push
outsb
lea
jge
jp
mov
icebp
pop
jle
out
dec
dec
pusha
ret
adc
out
not
pop
xor
fwait
and
cmp
ror
dec
and
mov
lret
sbb
jmp
adc
insl
lds
fnstenv
xchg
mov
insl
mov
aas
ret
sbb
daa
in
xor
xchg
imul
adc
cmp
aaa
sub
cmp
test
xchg
sub
push
adc
scas
cmpb
scas
dec
sahf
inc
and
and
push
int
pop
or
dec
xor
jl
dec
xchg
in
sbb
imul
jne
pop
inc
lea
das
cmp
push
je
or
push
out
adc
es
sub
inc
test
loop
enter
dec
mov
jmp
bound
cs
sbb
xchg
mov
pop
sarb
mov
mov
pop
pop
add
fldt
cmp
cmpsl
aaa
push
inc
add
mov
cmpsl
xor
fdivrs
pop
xor
or
in
or
rcl
shll
outsb
in
dec
loop
or
idivl
test
push
mov
xchg
insb
jp
pop
pusha
mov
xorl
je
push
les
imul
fnstcw
testl
jbe
mov
mov
inc
outsb
mov
xor
xor
adc
push
pop
aam
cmpsb
mov
inc
arpl
lret
jge
or
cmp
repz
scas
lock
cmp
roll
fsub
orb
jns
mov
sub
jmp
in
aaa
add
add
lds
push
fucomp
pop
lret
rcrb
cld
xchg
add
and
sub
cltd
inc
nop
int3
cmpsl
iret
mov
sub
add
lods
rorb
int
mov
sub
dec
fildll
xchg
sub
pop
pop
mov
inc
xchg
and
push
repz
and
clc
push
out
mov
movsb
mov
int
test
scas
imul
jbe
xchg
fs
aam
adc
sbb
inc
ret
push
mov
shll
push
inc
inc
push
test
xchg
movsb
mov
push
mov
imul
pop
pop
scas
push
add
ss
dec
repz
fistps
aad
rorl
enter
leave
mov
mov
ds
cmp
cld
push
fisttpll
add
pusha
cmp
fbld
in
inc
mov
inc
lock
pop
ret
shlb
xchg
int
ret
into
adc
push
mov
jmp
adc
aad
jo
mov
out
and
xchg
cmp
cmc
xchg
pop
imul
in
loope
testl
dec
add
jns
mov
xor
int
scas
push
stos
orl
sbb
ja
adc
or
sub
mov
mov
mov
subl
pop
scas
mov
cwtl
xchg
pusha
mov
test
mov
popf
inc
addr16
scas
jne
mov
mov
mov
xchg
mov
sub
or
pop
imul
inc
xor
add
pop
add
dec
mov
stc
stc
repz
dec
xor
pop
jecxz
mov
fnstsw
xchg
js
push
sahf
mov
xchg
jo
jns
mov
mov
lock
jge
add
or
mov
cmp
xchg
push
mov
stc
push
rcr
xchg
xor
aas
int3
leave
repnz
xor
push
in
push
jecxz
xchg
js
mov
fs
lock
call
jg
push
jg
idivb
push
jge
clc
leave
into
jl
ja
cs
inc
inc
xor
or
fcmovne
imul
mov
mov
xchg
push
aaa
mov
clc
test
test
mov
cmp
jge
mov
das
pushf
rorl
addl
dec
clc
jns
out
lods
daa
popf
mov
lcall
lret
aad
std
adc
sub
loop
xlat
jg
or
incl
pop
not
repz
mov
jbe
sbb
inc
fists
nop
pop
mov
les
loope
popf
push
fcompl
or
loop
call
std
das
jmp
arpl
push
mov
loop
cld
mov
shrl
nop
push
es
addr16
jno
xor
cs
sub
and
test
cwtl
jbe
jae
repz
fistpl
xchg
dec
lods
ja
in
cmc
fstpl
lahf
dec
jg
les
cmp
jmp
xchg
adc
sub
repz
into
push
sarb
jl
cmp
iret
cmpsb
pop
mov
mov
cmpsl
xchg
sub
gs
sbb
cmpsl
inc
jbe
mov
aas
lods
sbb
sti
les
clc
dec
sti
cltd
daa
cmc
cmc
loope,pt
mov
insl
inc
shll
push
adc
in
pop
or
sbb
in
lcall
adc
or
ljmp
mov
sub
mulb
fists
cmpsb
mov
add
enter
popa
mov
mov
and
fisttps
sbb
fstps
aam
dec
cmpsb
add
das
xor
xor
scas
jp
cmp
xchg
sub
mov
mov
sarl
not
sbb
jnp
xchg
nop
addb
ret
aaa
fldcw
inc
adc
mov
loope
idivb
mov
loopne
cmpsb
push
lods
xchg
dec
or
or
adc
sahf
aas
jnp
xorb
bound
mov
mov
hlt
popa
pop
sub
dec
test
jns
cmp
push
pushf
push
xchg
aas
cmp
add
fildl
lds
cmpsb
jb
sub
sub
hlt
pushl
inc
sbb
test
repz
push
out
add
cld
psrlq
shll
flds
fstpl
cs
cmp
in
popa
sbbb
icebp
shlb
mov
scas
xchg
push
push
cmp
sahf
gs
pop
inc
adc
int
sbb
dec
mov
sub
je
mov
into
shlb
call
notb
cmp
jmp
add
shrl
adc
jno
xchg
dec
pushf
cmp
mov
nop
mov
lahf
jbe
xor
mov
daa
pop
sets
push
dec
lods
jl
xchg
inc
movsb
push
es
dec
push
mov
xor
lret
sahf
or
dec
lahf
mov
ja
cmpsb
inc
mov
aam
cmc
fmulp
outsl
dec
xor
sbb
cmp
cmp
aas
add
in
imulb
inc
jecxz
mov
fucomp
add
jne
pushf
mov
idiv
add
fcoml
repnz
stos
mov
sbb
inc
decl
push
cld
adc
jbe
testl
icebp
push
aaa
or
addr16
lea
aaa
xchg
sub
push
int3
cmc
cli
xor
mov
adc
lods
hlt
in
outsb
enter
xor
loopne
mov
dec
outsb
push
mov
jle
inc
push
pop
mov
bound
cmp
mov
divl
rcr
pop
loop
cmpb
mov
in
sub
fs
pop
clc
call
and
sub
and
testl
mov
imul
in
push
lcall
adc
xlat
cmp
sub
into
sbb
lea
pop
jae
lret
inc
mov
bound
mov
lock
adc
ss
imul
sbb
sub
aaa
ret
std
sbb
dec
mov
aaa
jne
lcall
imul
test
fsubs
or
stos
add
in
sub
jecxz
ss
adc
or
xor
sub
push
fnstenv
lahf
sub
jg
pop
inc
dec
jle
and
xchg
int
pop
cmpsb
sbb
lcall
popa
inc
stc
pop
addl
scas
push
fs
flds
lea
pop
fisubrs
loope
dec
mov
clc
push
mov
test
repz
dec
adc
xchg
fs
daa
in
pop
pushf
gs
scas
jno
outsl
jne
psubsb
ds
icebp
push
xchg
pushf
xchg
jnp
xchg
push
fistpll
aam
scas
jge
ret
rcrl
xchg
cmpsb
mov
repz
addb
dec
add
aas
inc
lret
sub
add
fiadds
pushf
fs
pop
xor
add
adc
fwait
fwait
pop
adc
jnp
cmpsl
test
and
cmp
sbb
rcrl
int3
push
dec
es
xlat
test
sbb
xchg
push
loopne
sahf
cmp
icebp
mov
sbb
sub
or
sbb
arpl
insl
je
fs
pop
mov
negb
stc
sub
add
mov
cltd
push
rolb
jle
nop
jnp
dec
mov
mov
cltd
pushf
imul
loope
xchg
or
sub
cld
sbb
inc
jo
movsl
fcmovu
es
cmp
pop
add
aad
mov
push
cmc
in
pop
xchg
push
repz
mov
dec
repnz
xchg
push
pushf
lahf
imul
mov
jmp
call
mov
loope
sbb
xchg
scas
jo
or
fisttpl
fnstsw
and
cmp
cmp
stc
inc
in
movsl
cmpsb
outsb
sbb
mov
push
pop
sub
orb
pop
adc
push
mov
sti
int
dec
repnz
cmp
outsl
mov
jmp
sti
sbb
pop
sar
ror
or
inc
psubq
pop
mov
in
or
test
jle
jnp
pop
test
xchg
xchg
dec
stos
stos
nop
movsb
inc
mov
xchg
popf
sbb
jle
dec
dec
mov
daa
clc
pop
dec
in
push
mov
imul
cmp
lds
push
js
inc
add
imulb
and
jno
sbb
mov
pop
inc
fidivrs
or
cmpsb
push
pop
add
and
inc
adcl
inc
mov
add
adc
out
popa
adc
stc
cmc
insl
decl
adc
mov
jg
inc
mov
mov
inc
add
stos
xor
das
cltd
and
ljmp
andl
or
ljmp
leave
scas
xchg
xlat
push
adc
scas
add
jne
pushf
icebp
adc
cs
mov
repnz
insb
lret
xor
bound
dec
stos
xchg
cwtl
inc
sub
cli
sub
push
push
pop
mov
and
add
push
xchg
xchg
sahf
orl
leave
movsb
push
jp
sub
testb
adc
nop
pop
add
adc
cmp
ret
mov
sbb
xor
sbb
movsl
clc
push
cmc
arpl
ret
mov
fisubrl
mov
fisubrl
pushf
sub
imul
les
dec
xor
call
mov
out
inc
xor
inc
push
pushf
inc
stos
sbb
leave
inc
andb
push
fwait
jns
arpl
pop
sbbl
mov
pop
jl
or
fimuls
jle
push
pop
dec
push
daa
jns
leave
out
cmp
inc
clc
mov
popa
lcall
mov
push
ret
xchg
push
cmp
xchg
dec
push
mov
outsl
or
aad
cwtl
ret
iret
jnp
xor
jae
sub
or
push
into
in
movsl
dec
dec
cltd
mov
xchg
and
cmp
mov
out
mov
out
cmp
or
push
andb
jb
ljmp
push
sub
shlb
pop
fidivl
fstl
mov
pop
rcll
iret
mov
fstps
pop
adc
jmp
mov
ljmp
rorb
into
outsb
shll
push
loope
mov
std
lea
rcll
inc
pop
cmp
mov
ds
jbe
inc
dec
cltd
loop
push
cmpsl
xor
jl
je
cmp
mov
cwtl
jle
shl
inc
in
jae
or
inc
imul
jmp
add
xchg
or
sti
ljmp
cmp
xchg
sbb
notb
jmp
jg
inc
fsts
shufps
xor
mov
in
mov
mov
bound
push
shlb
sbb
imulb
cld
jge
movsl
nop
jl
ds
popa
or
push
mov
or
outsb
and
mov
inc
sbb
mov
mov
fwait
mov
hlt
cli
push
cmp
rorl
dec
pushf
pusha
or
adc
and
mov
leave
xor
cmpl
cmp
cmp
dec
repz
jmp
sub
fs
inc
mov
loop
pop
sub
cmp
jo
addr16
gs
fstpl
hlt
repz
sbb
sub
dec
xchg
push
sbb
test
movsl
pop
push
out
mov
dec
xchg
mov
xchg
imul
fistl
movsb
or
mov
pushf
in
inc
inc
push
fstps
cmp
cmpsb
in
xor
test
push
addr16
and
jmp
sbb
insl
outsb
and
mov
shll
cli
ja
repnz
push
mov
pop
xchg
adc
imul
test
cs
inc
mov
inc
repnz
std
pop
sub
dec
jno
jmp
lock
adcl
leave
pop
icebp
in
out
jmp
jmp
mov
xchg
xchg
push
adc
call
outsb
in
lret
or
dec
sub
mov
cmp
out
aas
inc
xor
mov
xchg
pop
data16
ljmp
or
test
imul
push
xchg
dec
dec
js
adc
dec
sub
in
mov
scas
and
mov
out
mov
push
insb
xchg
int3
inc
or
xor
pop
aas
sbb
sarl
or
sbbw
aas
rcrl
mov
sbb
inc
add
ds
ret
aam
rolb
xor
fwait
and
mov
jle
push
fwait
imul
scas
stos
xor
mull
mov
and
xor
inc
scas
stc
lret
dec
and
mov
jno
das
xor
mov
fdivrs
jge
in
dec
mov
cltd
and
sbb
or
sbb
sbb
fisttpll
cli
xor
stc
or
jne
dec
inc
xchg
mov
lcall
cs
cli
xchg
lcall
sbb
aas
mov
in
imul
push
or
hlt
popa
aas
push
mov
xor
es
nop
mov
cld
push
push
jl
stos
aas
jae
inc
mov
jl
insl
mov
fsubrl
mov
lea
test
arpl
out
push
sbb
enter
mov
sarb
sbb
fisubrl
aam
cld
shr
jo
push
in
mov
lock
xchg
shll
aad
adc
bound
sub
adc
mov
sub
repz
pop
stos
inc
rclb
iret
adc
icebp
fwait
mov
movsl
mov
insl
stos
inc
aam
ja
cmp
adc
adc
xor
adc
mov
add
fisubl
inc
sbb
cli
inc
add
in
jmp
int
and
std
jb
mov
ss
pop
lret
sahf
pop
push
aad
mov
ret
jmp
ds
lock
popf
mov
sub
outsb
out
dec
aas
ds
push
xor
insb
push
sbb
cli
not
adc
clc
inc
aas
popf
inc
hlt
mov
inc
sbb
mov
xchg
movb
negb
outsl
in
mov
mov
cld
or
dec
jecxz
xchg
ret
cs
cmc
add
in
cs
aaa
insb
int3
flds
mov
jecxz
mov
dec
or
outsb
js
or
fisubl
push
and
and
sub
fisttpll
cld
push
inc
repnz
cmp
cmc
ja
push
lea
lahf
lods
add
push
mov
lock
mov
pop
mov
fwait
cltd
cmp
push
cmp
mov
cli
jo
fdivl
add
lea
pop
inc
mov
out
xor
mov
jb
xor
incl
mov
and
cli
sbb
aam
orb
push
and
std
xchg
ja
cltd
mov
and
adc
or
movsl
dec
fldt
inc
add
sub
shrl
bound
out
dec
lahf
repnz
pop
outsl
push
pmullw
jns
add
shrb
jecxz
jnp
cli
add
mov
jno
jle,pn
jmp
pop
or
lret
add
cmp
adc
push
loop
dec
ljmp
fdivs
stc
push
aad
pop
pop
dec
lods
xchg
cld
rol
jb
shrb
jb
outsl
lret
aaa
popf
push
out
fmulp
cwtl
inc
mov
sub
pop
pop
push
pusha
ljmp
mov
in
mov
mov
icebp
lods
outsb
in
xchg
lret
das
fcmove
mov
inc
mov
sub
and
std
int3
sbb
out
rcrb
and
in
pop
out
pop
add
iret
insl
or
push
fisubs
inc
jne
jp
mov
out
lock
push
mov
dec
sti
lret
xor
in
mov
arpl
je
push
mov
inc
das
or
jmp
pop
dec
je
mov
addr16
sub
rcr
add
fs
ret
ret
push
or
inc
jg
filds
sub
rorb
cmp
icebp
or
push
fisttps
add
sub
mov
mov
adc
push
jle
dec
popa
sbb
scas
into
xchg
or
inc
aad
pop
pop
test
pop
cs
pop
or
pop
cmpsb
xor
add
inc
add
sahf
xchg
hlt
inc
pop
push
pop
lea
das
sub
xchg
sbb
adc
push
dec
fwait
sub
mov
repz
int3
inc
inc
add
jns
sbb
jmp
aam
or
jecxz
pushl
out
mov
pushf
stc
mov
add
enter
push
mov
pop
push
and
push
ret
out
cmpsl
dec
in
jge
stos
jnp
ficomps
jae
push
or
mov
scas
push
mov
aam
jbe
nop
xchg
orb
sti
out
data16
or
stc
loop
sahf
cmp
cltd
loop
sub
jnp
add
je
xor
xchg
and
test
and
pcmpeqb
xchg
mov
sbb
rcr
fmuls
xchg
imul
test
push
pop
mov
jo
pop
insl
jg
js
pop
nop
sub
sbb
insl
mov
call
mov
mov
dec
dec
push
decb
dec
in
insl
pop
push
lcall
inc
outsb
inc
mov
addr16
add
jecxz
adc
dec
cmc
cmpsb
sbb
inc
repnz
andl
aam
or
cli
mov
ret
ret
test
xor
xchg
mov
mov
dec
mov
lds
mov
jo
xchg
push
lock
cmp
mov
cs
ds
push
cmpsl
mov
push
inc
out
jecxz
andb
push
mov
loop
fidivrl
mov
xor
push
aad
test
push
cs
sub
out
push
pop
and
rcrl
into
cmp
pop
je
sbbb
cmp
out
mov
xchg
into
push
mov
jne
jae
imul
add
dec
dec
loopne
jnp
mov
adc
lahf
mov
aas
ljmp
pop
pop
sbb
int
xchg
shlb
sub
negb
adc
jl
fidivl
call
sub
sbb
jmp
jb
cmpsb
scas
mov
setae
int
cmp
stos
sti
aad
mov
inc
inc
cs
rorl
jmp
mov
test
xor
pusha
and
clc
imull
and
imul
pop
or
xor
repz
or
test
roll
loope
call
jno
xorl
mov
shrl
lea
sub
movsl
dec
mov
push
push
mov
iret
stos
mov
inc
add
inc
sbb
xor
jne
lret
mov
jne
lfs
int3
lods
mov
xchg
inc
icebp
pop
inc
ds
inc
pop
sub
fnstsw
push
pushf
movsl
or
stos
xchg
out
mov
push
push
or
and
test
dec
push
mov
pop
sub
cmpb
xchg
inc
jne
mov
loop
out
xor
or
clc
sar
sti
js
lds
lds
aam
xchg
lds
mov
sbb
rcr
push
or
in
inc
xchg
mov
dec
xchg
and
xor
jecxz
xchg
mov
inc
dec
mov
sub
pop
jnp
in
dec
xchg
push
imul
stc
add
das
scas
push
pop
clc
pop
in
jp
dec
or
inc
icebp
or
xor
cmp
and
sbb
xor
jo
dec
mov
pop
mov
dec
mov
mov
cltd
outsl
cmp
fistpll
pop
push
mov
shrb
add
pop
sub
lahf
mov
mov
jns
aas
pop
inc
int
inc
cwtl
outsl
addb
and
and
sti
adc
ret
mov
add
jg
fmuls
mov
popf
xabort
sub
shll
add
out
or
dec
fidivrs
cwtl
ficompl
js
test
pop
push
add
inc
and
add
pop
dec
shll
aas
mov
mov
cmc
push
movsb
popa
xchg
pop
mov
xchg
xchg
pop
mov
clc
jg
mov
pop
lods
jns
gs
jbe
iret
pushf
xchg
lahf
mov
pop
sub
pop
out
xlat
cld
lcall
mov
idivl
mov
push
hlt
incl
iret
mov
aas
xor
sub
sbb
adc
dec
jp
jns
insl
rcll
push
cwtl
repnz
mov
cmp
int3
ds
or
cmp
push
iret
add
jbe
and
jb
into
sbb
lock
rcrl
lahf
adc
and
push
jns
add
dec
movsb
fdivs
cmp
negb
xor
clc
sbb
xchg
daa
adc
insb
cmp
mov
inc
inc
mov
inc
ret
inc
loopne
ret
push
das
sub
xlat
pusha
push
pusha
pushf
mov
and
hlt
in
dec
mov
sub
pop
enter
mov
icebp
jmp
loop
and
les
mov
cld
loop
push
cmp
xchg
adc
xchg
push
rol
popl
dec
dec
fimull
pmaxsw
cmp
sub
jge
lods
sbb
xor
mov
shll
jne
inc
les
in
mov
jb
mov
test
shr
scas
and
ja
xchg
loop
pop
out
pop
mov
inc
jmp
enter
xchg
sbb
shlb
and
add
and
test
dec
daa
mov
sbb
pop
xchg
adc
jns
xchg
lds
shrl
scas
sbb
sti
aas
stos
xchg
xchg
loopne
and
xor
into
insb
add
push
mov
andb
jmp
cltd
pusha
or
int
inc
xchg
jne
xchg
jae
jo
jmp
scas
movsb
leave
rcll
test
ja
mov
rol
mov
mov
loopne
popf
sbb
out
mov
sub
mov
clc
and
cmp
adc
or
cmc
shll
fdivr
movsl
jo
mov
push
jns
stc
movsb
test
hlt
inc
ja
out
mov
jnp
mov
popa
push
in
inc
sub
stos
push
xorb
mov
icebp
clc
jae
js
add
push
lds
loop
pop
lods
sbb
pusha
stos
add
adcl
and
inc
jecxz
pop
or
jbe
pop
loope
jecxz
lcall
arpl
xchg
faddl
inc
pop
cld
or
mov
jae
mov
dec
mov
adc
aas
ljmp
sti
in
and
xor
les
lcall
stc
xchg
sbb
js
in
in
ljmp
daa
push
sub
roll
ljmp
and
pushf
xor
cld
xchg
aad
mov
or
xor
xor
pop
lret
test
sbb
cmc
enter
jmp
shll
lahf
lods
nop
adc
imul
sub
push
mov
mov
cmp
jp
out
adcb
stos
xchg
jbe
jno
bound
pop
ja
fdivrs
ret
mov
popa
loope
xlat
lods
and
push
mov
hlt
sarl
scas
mov
sbb
aas
xlat
daa
xor
subl
mov
in
or
es
imul
aas
cmc
add
subl
mov
inc
xor
repz
out
or
mov
stos
cwtl
sbb
pop
test
aam
push
loop
arpl
mov
mov
pop
push
lea
jle
stc
cli
push
cmp
test
mov
ret
jmp
cwtl
inc
hlt
and
call
inc
xlat
pop
pop
cmp
lea
push
pop
in
cmpsb
adc
xor
sbb
dec
mov
fcomi
pop
rcrl
mov
cmp
sti
dec
mov
sahf
ret
mov
js
cmp
js
loope
push
lahf
andl
shr
push
insl
fucomi
in
cmp
xchg
push
imul
popa
adc
out
fiaddl
lahf
cmp
mov
pop
jns
aad
clc
xchg
jl
or
xchg
add
fcompl
cmp
arpl
mov
aad
jo
lahf
test
out
inc
hlt
and
add
or
sub
fmull
dec
dec
mov
jge
aaa
dec
repz
in
rcll
popa
lock
jo,pn
push
mov
test
insl
sub
mov
cwtl
shll
imul
insb
inc
cvtps2pi
jp
js
adcl
ljmp
and
mov
fisubrs
and
pop
mov
mov
ja
push
pop
insl
out
push
stos
adc
mov
dec
fsubrp
jecxz
jle
pushf
push
mov
adc
inc
std
push
xor
inc
fdivl
cmp
je
mov
pushf
lods
jecxz,pn
and
sbb
clc
call
pushf
lods
cs
int3
mov
push
ret
push
in
cltd
pop
pop
es
shrb
push
pop
dec
in
mov
outsb
jo
push
sub
test
pop
mov
adc
call
rcl
test
pop
jg
leave
mov
data16
out
aad
aaa
dec
fs
sbb
loope
jecxz
lret
xor
outsb
mov
jo
subb
adc
jnp
cltd
mov
pop
test
popf
popa
mov
test
aaa
in
loop
ds
fiaddl
mov
or
sub
rcr
jle
adc
arpl
cmp
sub
data16
cmp
arpl
dec
xchg
dec
jno
incb
sbb
jne
pop
pop
sbbb
rcll
jg
decl
or
xchg
mov
popa
lock
out
lret
inc
mov
outsl
xchg
lret
neg
sbb
js
sbb
lret
repz
fildl
sub
cmpsb
xchg
jns
lret
in
add
or
and
dec
adc
push
clc
sub
push
adc
xchg
inc
insl
and
adc
cltd
push
fwait
mov
mov
jno
rcrl
add
mov
pop
cwtl
aas
pop
xlat
outsl
mov
jne
push
xchg
scas
out
negl
pop
xchg
xchg
sub
je
nop
mov
inc
in
fwait
std
hlt
cli
inc
inc
adc
sbb
push
scas
orb
imul
jge
pop
xlat
push
and
into
insl
out
not
into
and
pop
lods
or
icebp
add
sub
push
push
mov
mov
fwait
mov
rcr
out
xchg
cwtl
and
add
adc
cmp
and
jo
lea
fnsave
les
push
outsb
mov
popa
imul
adc
cmp
insl
aaa
push
mov
insb
xchg
leave
pop
and
mov
out
or
nop
lcall
cmp
fs
lret
sbb
fisubrl
pusha
testb
popa
int
ds
lods
sbb
ret
div
mov
popf
lods
inc
dec
sbbb
mov
xchg
inc
mov
jmp
leave
orl
mov
outsb
mov
xlat
mov
cs
dec
sbb
jns
xchg
adc
jae
aaa
jb
push
call
outsb
sahf
sbb
push
push
jecxz
xor
push
mov
pop
into
jae
aas
cltd
pop
jmp
scas
jae
mov
xchg
pop
xor
rolb
movsb
push
sti
mov
push
loopne
sti
add
fldl
js
pop
in
add
push
bound
fisubrl
sbb
jmp
mov
xor
sub
or
jne
mov
pop
fst
dec
and
pusha
and
cmp
stos
cmp
loope
mov
add
and
xor
add
sbb
jmp
mov
mov
or
jecxz,pt
cmp
cmpsl
push
clc
fstps
sar
loopne
leave
dec
xchg
inc
xchg
pop
test
lds
lds
push
jo
lret
cmp
xchg
jmp
dec
cltd
jle
cmp
mov
outsl
test
in
dec
adc
xor
shlb
sbb
xlat
movl
lock
xor
adc
roll
push
adc
mov
mov
not
inc
ret
bound
add
repz
notl
mov
call
mov
je
inc
mov
push
stos
cld
sub
adc
xorl
xchg
sahf
adc
pop
pusha
pop
ds
sti
dec
sbb
inc
jg
fcompl
loope
out
mov
adc
xor
cmp
xchg
fimull
lcall
xor
jmp
and
and
movsb
outsb
inc
test
jp
lret
mov
stc
mov
mov
mov
aas
inc
adc
jmp
scas
mov
icebp
fcoml
lds
cmpsl
jg
dec
movsl
clc
call
popf
xchg
scas
xchg
sbb
pop
fldl
daa
push
lret
aas
cmpsb
aam
cmp
add
mov
lcall
lret
mov
pop
shlb
and
insb
xchg
iret
mov
rcrb
mov
cmpsl
mov
enter
movsb
adcl
push
push
jl
push
pop
pushf
mov
sahf
mov
xchg
jl
jno
adc
cmc
jl
bswap
addr16
adc
aad
inc
ret
add
fbld
lea
stos
inc
and
lahf
sbb
mov
lcall
ja
insb
dec
in
and
lods
stos
in
jo
and
stos
insl
pop
and
or
bound
rol
jae
vandpd
in
ret
outsl
mov
jmp
jae
adc
push
pop
jbe
movsl
fsts
jnp
dec
pop
jmp
sbb
fsts
movsl
mov
lcall
icebp
and
dec
inc
jns
movsb
sub
or
fs
pop
mov
fnstsw
cmc
pushf
rcrb
and
out
ss
mov
je,pn
aam
add
loop
mov
jp
inc
cmp
je
jno
cwtl
sbb
leave
rorl
arpl
dec
sub
mov
je
ffree
stos
fs
and
les
es
in
or
rolb
in
mov
pop
fcompl
fisttpl
aad
dec
or
ficompl
inc
test
push
lret
rcr
lcall
je
shll
push
jae
pop
ret
pop
mov
pop
jmp
push
popf
jg
inc
jecxz
xchg
mov
adc
jno
jo
inc
test
ss
jg
inc
or
and
into
xlat
pop
jbe
in
lock
jae
xor
push
stc
repz
sub
jns
or
loopne
add
add
repnz
pusha
xchg
pop
rdpmc
cld
shlb
xor
stc
lods
test
cmp
cli
addr16
pop
push
ja
jmp
in
popf
push
insb
jno
push
xchg
int3
movb
sarl
push
mov
lds
stc
lock
mov
inc
xchg
mov
cmp
mov
in
popf
inc
xor
jge
and
jmp
xlat
shlb
rclb
js
mov
push
jge
xchg
data16
in
inc
je
lcall
inc
pop
loope
rclb
sub
bound
xchg
int
shl
cmpsl
lock
addr16
or
mov
jg
imul
and
stos
dec
push
xor
nop
push
mov
scas
loope
insb
movsb
add
xor
sarl
inc
dec
stc
fcmovnu
xchg
sub
dec
push
jo
scas
repnz
addb
inc
pop
es
mov
xchg
cmp
leave
add
add
adc
cmc
ss
mov
xchg
stc
int
adc
das
xchg
scas
mov
aaa
dec
jae
js
pop
fwait
aad
inc
jo
sahf
xor
outsl
push
loop
setle
aad
or
cmpb
fistpll
rclb
pop
jns
push
xchg
mov
sbb
or
ds
movb
dec
pop
jp
je
lods
cs
sub
and
adc
nop
inc
mov
cmp
test
xchg
outsl
xchg
xchg
pop
xchg
add
push
inc
cmp
stos
mov
jge
mov
jmp
xchg
push
mov
inc
fisubrs
clc
filds
dec
push
sub
jl
pop
lods
jbe
add
dec
test
scas
push
fsubrs
xor
lret
ljmp
inc
add
test
adc
call
and
fbstp
push
or
dec
call
ljmp
aad
fnsave
xchg
mov
lods
inc
pop
sbb
add
outsb
sbb
mov
jl
mov
fwait
jl
stos
jg
xchg
into
sti
mov
jl
sub
mov
lods
inc
mov
push
mov
mov
pop
lahf
in
inc
and
inc
push
stos
mov
mov
ss
xchg
icebp
aad
cmp
cld
xchg
test
pop
cmpsl
sbb
push
xchg
sahf
fnstsw
loopne
addb
je
popf
pop
add
outsl
call
leave
xchg
repnz
and
fbld
movsb
pop
fisubrs
xor
add
lock
xchg
testl
adc
xchg
ja
dec
mov
pop
lret
mov
mov
jg
shlb
xchg
dec
das
mov
test
out
test
sub
ja
in
addr16
sub
mov
fs
add
xor
and
aaa
icebp
repnz
push
bound
adc
or
adc
call
popa
jp
mov
rorb
mov
int
xchg
bnd
dec
jg
je
cmp
push
mov
xor
sbb
adc
push
adc
mov
test
mov
clc
add
into
fisubs
into
ljmp
ds
adcb
mov
jnp
paddq
out
call
jmp
fadd
clc
test
adc
jecxz
cs
jge
mov
bound
sbb
inc
pop
cmc
mov
mov
mov
jmp
cmpsl
mov
imul
mov
gs
cld
xchg
shr
dec
js
sub
sub
or
lcall
cs
cmc
adc
sbb
add
lret
lret
cmpsb
call
sub
sub
hlt
push
mov
cmp
cmpsl
cmp
and
sub
sub
cmp
cltd
inc
cs
cltd
sbb
mov
or
inc
jae
fldcw
lcall
out
pop
nop
ficoml
movsl
cmc
or
dec
shll
mov
movsl
ret
dec
sbb
aam
cli
and
cmp
mov
jmp
aaa
cld
int
inc
cli
dec
int
dec
cs
mov
mov
adc
leave
adc
pop
push
and
fldl
jns
mov
sbb
fsubrl
sbb
stos
push
lea
fwait
pop
mov
jo
pop
cmp
repz
inc
loopne
push
jne
inc
lods
and
add
or
mov
xchg
out
or
into
lea
insl
call
scas
and
push
movsl
int
lock
insl
push
jne
and
push
or
cmp
ja
mov
mov
mov
dec
fnstcw
cmpsl
cwtl
mov
movsl
cmp
pusha
xlat
ljmp
xor
xchg
push
cld
arpl
lea
test
int3
pushf
dec
mov
test
arpl
scas
xor
sahf
dec
mov
imul
loopne
jl
mov
in
add
aaa
cmpb
iret
sub
or
call
scas
mov
daa
insl
inc
ret
adc
fdiv
inc
pop
mov
pushf
xor
push
jnp
inc
mov
xor
jbe
dec
mov
xchg
and
ljmpw
ss
jmp
xchg
fnsetpm(287
adc
xchg
clc
or
bound
mov
es
xchg
add
add
mov
out
rorb
sub
shl
mov
es
xor
xlat
hlt
mov
rcrb
sbb
cltd
rorb
push
push
mov
cmp
xchg
and
test
and
cmpsl
xchg
cmp
xor
or
dec
lret
cmp
sbb
jg
shlb
push
mov
dec
xchg
cmp
jae
in
icebp
stc
test
in
pop
fsubp
sbb
sub
or
div
or
mov
repz
iret
sbb
cmp
lods
loope
in
jle
xchg
xchg
imul
mov
dec
mov
jno
mov
sub
dec
and
pop
and
mov
mov
jecxz
gs
fdivs
xor
mov
cmp
mov
cltd
or
mov
aad
add
scas
xchg
cmp
sbb
out
pop
lock
mov
sbb
lret
sbb
sub
mov
aaa
in
xchg
in
in
sti
decl
jecxz
inc
pop
push
aaa
mov
in
add
mov
rcrl
je
xchg
aaa
pop
inc
dec
xchg
dec
imul
fidivs
out
rcll
cs
test
int
jg
cmp
clc
push
shrb
out
lds
in
dec
mov
mov
cltd
jmp
into
lcall
cmp
adc
jmp
insl
into
mov
sub
outsl
adc
clc
add
enter
inc
push
mov
rorl
and
pushf
call
mov
into
cld
lcall
movsl
xor
sub
push
das
leave
pop
call
enter
push
jo
mov
stos
mov
insb
lcall
sti
xchg
cli
jmp
push
out
scas
data16
mov
insb
fadds
dec
mov
into
out
and
cwtl
pushf
lds
out
setno
outsl
gs
iret
shrb
pop
inc
push
jb
pop
push
inc
testb
fistps
int3
and
pusha
jp
xchg
bound
mov
mov
lcall
stos
dec
pop
dec
sbb
fs
int
push
rcll
cwtl
icebp
addr16
xor
cmp
cltd
mov
iret
sub
hlt
gs
push
in
nop
add
mov
repnz
xchg
jns
xor
or
mov
imul
lock
mov
cmp
mov
dec
jno
dec
xchg
js
dec
repz
stc
pushf
xchg
push
mov
addr16
insb
sbb
mov
mov
ljmp
test
fists
sbb
pop
addr16
mov
inc
push
mov
pop
das
push
pop
sbb
xchg
sti
lock
sbb
repnz
and
sahf
repz
mov
add
les
mov
and
cmc
sub
dec
scas
sbb
or
andl
data16
jge
pop
inc
fistl
lcall
imull
mov
push
daa
ror
ja
push
incb
adc
jnp
xor
cmp
xor
shll
hlt
fldcw
xor
add
gs
cmp
orb
lcall
lock
inc
sti
fisttpll
repnz
or
adc
dec
loop
mov
mov
popf
mov
addl
in
loopne
cmpsb
fsubr
loop
push
mov
in
mov
sub
rcl
sbb
add
xchg
mov
test
or
aaa
xchg
jp
sahf
push
push
cmp
mov
imul
mov
ss
mov
in
and
xchg
mov
andb
orl
mov
es
arpl
cli
fldt
loopne
xchg
scas
mov
mov
xor
mov
inc
or
les
sbb
push
neg
iret
adc
sub
mov
mov
lods
sub
xor
fs
jle
test
repz
xchg
sti
mov
test
test
movsb
cld
sti
ljmp
and
pushf
inc
jl
add
mov
sub
xlat
add
push
mov
push
fdiv
mov
sbb
cmp
mov
add
mov
shll
mov
jl
cmpsl
mov
pop
mov
lcall
add
xlat
in
je
arpl
insl
fmull
divl
mov
in
pop
jmp
pop
sbb
adc
insb
testb
ljmp
out
pop
call
xorb
cld
add
inc
lret
jbe
std
pushf
push
orb
lret
lahf
mov
out
nop
mov
push
push
shlb
mov
cmp
sub
inc
subb
dec
dec
sbb
addl
pop
in
js
sbb
imul
cmp
mov
in
test
mov
pop
das
push
push
xrelease
mov
sbb
out
leave
mov
mov
in
mov
push
and
icebp
mov
cmp
lret
mov
mov
xor
das
lcall
push
stc
sub
xor
ret
aas
into
imul
rcr
inc
xchg
ds
push
js
jb
fwait
or
jle
mov
add
in
stos
fistpll
mov
fwait
test
add
es
cld
fcmovnb
loope
aad
cmp
inc
xor
sbb
xlat
jecxz
lea
cmp
lret
stc
jmp
lret
ss
lods
xchg
pop
xor
sub
in
and
dec
push
push
addb
inc
ljmp
cmp
mov
stos
inc
incl
inc
push
cmp
jl
mov
lea
add
mov
push
mov
inc
imul
stc
mov
arpl
faddl
into
and
dec
lret
popf
mov
mov
pop
test
mov
dec
cmpsl
mov
adc
sub
mov
sub
mov
lods
sti
mov
scas
shlb
inc
pop
imul
ds
mov
inc
xchg
cmpsb
mov
add
lret
mov
out
sub
or
mov
and
hlt
xchg
sub
arpl
mov
xchg
xor
mov
add
jb
mov
lret
cmp
fidivrl
shlb
fdivl
and
cmp
push
add
fidivl
cmpsl
loope
mov
xchg
pop
stos
nop
lret
mov
and
movsb
or
xchg
mov
cwtl
cmpsl
jb
dec
and
bound
cmp
outsb
xchg
adc
fdivrs
push
and
or
rorb
jns
jl
clc
sub
addr16
outsl
add
and
std
mov
push
inc
ss
push
xor
repnz
stos
mov
mov
adc
inc
das
out
adc
fyl2xp1
addb
lcall
or
sbb
lock
mov
add
testl
fs
mov
flds
arpl
lea
dec
lods
sbb
pop
test
mov
push
lock
lea
shlb
mov
xor
cmc
out
or
daa
mov
loop
les
aam
lock
into
es
lea
clc
ja,pn
rolb
ss
loope
lods
and
mov
cmpl
or
pushl
xchg
out
arpl
xor
movb
sub
outsl
jb
xor
lds
and
and
mov
outsb
adc
adc
bound
lods
bound
xor
cmp
cmpsl
shlb
mov
cld
rclb
addr16
xchg
pusha
and
push
adc
xchg
insl
inc
fiadds
add
pop
out
xor
xchg
mov
icebp
jb
jne
mov
pop
jl
jl
pop
test
lahf
jb
xlat
je
inc
mov
sub
popa
inc
loop
xchg
lock
sub
mov
in
fdiv
cltd
push
jg
aas
xor
pop
add
jmp
xor
inc
or
aam
add
fs
loope
flds
pop
insb
jl
test
orb
mov
add
bnd
imul
ja
popa
xchg
lods
test
fdiv
or
adc
push
push
and
and
push
adc
push
cmpb
test
pusha
outsb
aas
lea
out
fwait
jmp
sbb
push
lds
dec
cld
pusha
loopne
mov
lods
adc
outsl
sub
out
aad
mov
sarl
or
dec
int3
jbe
inc
sub
cmp
call
push
lret
aaa
incb
daa
sti
arpl
imul
mov
inc
pop
in
cmp
fsubrs
das
lods
pop
idivb
sub
and
mov
subl
insl
push
sbb
out
adc
pop
outsb
and
test
xchg
mov
add
or
fdivl
cmpsb
dec
scas
dec
adc
leave
sbb
push
sub
inc
sbb
xchg
sub
out
and
inc
loopne
es
mov
stos
fwait
rorb
and
mov
fiadds
cmp
les
insl
push
mov
mov
outsl
orb
sbb
addr16
inc
xchg
out
cmp
jns
push
mov
fld
inc
or
cli
sbb
cltd
cmp
adc
outsl
adc
repz
pop
push
adc
xchg
loopne
imul
dec
xchg
sti
adc
xchg
lcall
divb
inc
fsubl
fimuls
out
js
ja
rcrl
push
xlat
repz
mov
mov
sub
nop
or
nop
mov
inc
pop
xchg
sti
add
cmpsl
push
sbb
inc
filds
push
repnz
stc
pop
sarb
xchg
mov
scas
xchg
inc
aaa
mov
mov
loop
inc
mov
pmaddwd
test
out
and
mov
pop
idivb
jb
ficoml
mov
loope
fwait
xchg
stos
jecxz
jmp
push
cwtl
movsl
pop
xorl
int
sbb
test
rcll
inc
mov
popa
test
sbb
rcrb
add
icebp
ficoms
scas
scas
popa
jle
cmp
mov
mov
mov
in
icebp
ja
lcall
xlat
test
cmp
xor
lods
xor
pop
jmp
dec
neg
mov
test
aam
sbb
lods
xor
inc
lods
je
xor
fistpl
push
outsl
fadd
pop
jbe
push
dec
mov
jle
add
rclb
pop
mov
repz
inc
lea
push
in
xor
insb
pop
xchg
lods
add
sub
push
xchg
jle
hlt
sbb
xor
imul
dec
fisttps
lret
es
sub
mov
or
inc
bnd
mov
mov
pop
fcompl
rorl
test
dec
cmp
roll
adc
arpl
push
xchg
out
mov
xchg
add
clc
pop
sub
movl
dec
lea
std
fnstenv
jp
imul
jl
and
push
lods
jnp
lds
iret
insl
inc
inc
out
mov
js
mov
dec
and
lret
jne
mov
outsl
xchg
mov
xor
mov
gs
data16
les
stc
push
dec
stos
sbb
adc
out
pop
mov
push
and
jns
push
outsl
scas
shrl
or
mov
adc
int
inc
int
fsubrs
jecxz,pn
fisttps
rclb
xor
cmp
cmp
mov
inc
dec
mov
or
mov
jmp
inc
test
add
test
data16
in
inc
push
das
call
scas
out
addb
cmp
loop
inc
idivb
dec
mov
inc
jne
mov
cmp
mov
xchg
aas
pop
lock
outsl
dec
popa
add
ss
in
loope
push
jle
mov
push
pop
sarl
cmp
jg
pop
addr16
mov
stos
sbb
scas
rcrb
les
pop
shrb
inc
sub
jp
jno
jns
push
std
add
mov
and
sarl
jno
adc
call
cwtl
inc
roll
or
dec
adc
ret
repz
imull
fldl
mov
lods
push
add
enter
inc
fs
cmp
cwtl
enter
insb
add
add
adc
lret
push
ss
or
dec
mov
les
xor
inc
mov
cmp
adc
mov
dec
hlt
push
std
loope
push
out
outsb
sub
inc
aaa
lds
pop
inc
arpl
cmp
pusha
ret
mov
enter
addb
movb
cmp
sbb
lret
lret
or
test
dec
das
test
cld
xchg
jbe
in
push
scas
je
push
pusha
sbb
and
test
cmc
clc
test
or
sbb
sub
lds
outsb
or
cltd
pop
or
jecxz
add
adc
fs
shll
or
push
daa
call
pop
dec
push
ret
xorl
pop
mov
aaa
insb
scas
in
movsb
out
xor
sahf
mov
jge
dec
fldt
add
push
xor
lods
jmp
mov
out
and
movl
xchg
out
in
inc
mov
add
jg
cltd
sbb
push
imul
in
mov
xor
inc
inc
pop
sub
cld
sti
and
inc
outsl
fisttps
xlat
insl
gs
sbbl
pop
jmp
push
push
ljmp
movsb
rcrb
cmc
lods
add
pusha
nop
lret
imulb
dec
mov
imul
jno
mov
mov
add
inc
xorl
fistps
or
sub
mov
xor
pop
add
std
mov
aas
xor
jecxz
mov
ljmp
xor
mov
push
cmpsl
aam
push
sahf
add
ss
inc
sbb
fldl
test
adc
repnz
ss
push
mov
mov
inc
arpl
dec
fnsave
ret
dec
mov
into
jge
push
pop
xor
jp
data16
add
jae
sbb
push
fisttpl
pusha
mov
bnd
jae
add
aas
fadds
xor
push
cmc
ficoml
push
test
int
pop
inc
mov
stos
mov
and
clc
addr16
mov
mov
lcall
push
fstl
jg
je
jp
mov
fdivr
int3
pop
and
andl
lods
pop
sbb
xchg
out
subl
js
adcb
cmpsl
push
or
jg
out
or
adc
stc
adc
pop
inc
loop
hlt
test
jns
xchg
test
rorb
js
mov
adc
and
fiaddl
in
inc
inc
and
jmp
sbb
push
pop
sub
filds
mov
push
pop
fmull
xchg
icebp
mov
rorl
mov
pop
das
add
clc
loop
inc
inc
mov
pop
in
out
inc
and
pop
push
fistpl
insb
ds
insl
dec
cli
ret
arpl
nop
repz
aas
sahf
xor
sbb
dec
dec
pop
push
or
sub
je
lret
fdivs
lea
hlt
xorl
fcompl
or
add
pop
std
mov
iret
test
cmp
mov
mov
xchg
mov
nop
pop
fwait
or
jne
ljmp
xchg
insb
das
and
sbb
mov
sbb
aas
lods
push
xchg
inc
inc
aaa
in
push
jnp
lock
insl
and
mov
push
jge
outsl
fdiv
lcall
sub
sub
xchg
mov
movsl
jnp
pop
cmpsl
call
shlb
inc
dec
mov
rol
inc
sbb
add
or
mov
lea
cmp
lea
jnp
das
adc
push
mov
in
hlt
xchg
push
pop
sbb
in
cs
mov
or
pop
push
lret
or
in
sbb
aaa
movb
in
adc
scas
mov
and
cmpb
lods
or
test
mov
inc
movsb
ja
call
mov
lret
mov
sbb
jbe
push
movsb
push
mov
rclb
hlt
insl
mov
sub
inc
pop
xchg
gs
aaa
xchg
movsl
orl
int
pushf
and
inc
sbb
fnstcw
std
hlt
leave
sub
adc
mov
dec
icebp
lret
sub
fs
xor
pop
jmp
mov
pop
out
push
push
mov
dec
popa
mov
jge
pop
sbb
flds
cmp
xchg
cli
insb
test
cmpsb
fdivs
gs
xor
inc
xchg
cmpsl
jl
or
dec
leave
dec
jle
push
jle
push
xlat
adc
repnz
shlb
aaa
sub
or
test
xchg
sbb
and
pop
sbb
cmp
rclb
dec
cltd
pop
js
sub
mov
ja
and
scas
xor
inc
out
mov
sbb
cltd
ja
outsb
add
cmp
or
jle
imul
mov
adc
jg
pop
jp
inc
jp
repnz
xchg
adc
lret
jecxz
mov
imul
daa
xor
movsl
je
or
and
adc
mov
pusha
mov
aaa
ja
mov
mov
sbb
sahf
int3
jp
mov
test
cs
pop
lret
in
ss
mul
jne
adc
dec
cli
mov
test
jge
dec
adc
and
movsb
xor
fisttpl
fwait
sahf
jecxz
movsl
ds
stos
sub
outsb
inc
add
and
push
add
adc
add
jo
cmpsb
movsl
lock
jmp
cmc
aam
or
pop
mov
mull
xor
ret
mov
stos
cmp
sub
push
mov
xor
jb
push
mov
lods
arpl
pop
loop
xchg
xchg
mov
popa
xchg
es
ljmp
ss
or
test
in
cmpl
jnp
add
xor
mov
sti
jge
ja
add
out
aam
xchg
mov
fadd
xchg
xor
mov
cmp
and
mov
pop
mov
pushf
je
out
aad
adc
mov
mov
popa
test
inc
subb
pop
popa
cmp
cmpsb
or
cmc
ja
add
sub
lret
cmp
leave
lcall
es
xchg
lret
stos
pop
xor
or
push
cltd
jecxz
pushf
loope
or
frstor
add
ljmp
mov
test
mov
fistpl
push
cli
out
pop
dec
pop
xchg
mov
daa
lock
dec
adc
ficoml
or
mov
scas
lock
pop
sahf
into
inc
dec
test
jl
sub
mov
jmp
hlt
sub
loope
sub
sbb
sub
loope
pop
add
cmp
lock
jecxz
shl
jbe
xchg
hlt
push
clc
lock
push
loop
ret
test
mov
or
pop
lock
out
dec
rcrb
test
dec
xor
mov
cmpsl
mov
xchg
cmp
inc
lret
pop
int3
pushfw
sti
ret
out
jns
mov
dec
jge
xchg
mov
cmp
mov
sbb
mov
enter
sti
lods
test
das
jg
xor
xlat
shll
loopne
inc
out
std
out
xchg
dec
sti
or
or
outsl
out
and
jmp
in
imul
or
push
inc
js
out
xchg
bound
sub
dec
ja
mov
dec
jns
icebp
jecxz
pusha
jecxz
jb
data16
push
orb
sbb
add
out
scas
ja
ss
push
imul
cmpsb
aam
outsb
add
data16
add
iret
icebp
or
sbb
lods
or
std
mov
mov
stc
cmc
adc
lds
loopne
xchg
add
inc
fldcw
jecxz
test
imul
js
ret
xor
sahf
sti
push
push
lret
mov
mov
adc
mov
jg
adc
iret
cmp
pop
dec
pusha
flds
push
mov
paddsb
jno
rcrb
sbb
into
jle
push
repnz
mov
frstor
int
loope
outsl
daa
or
sub
push
fbstp
in
dec
shr
aad
inc
aas
sub
call
adc
lods
cmp
mov
add
mov
adc
cltd
cwtl
pop
cmp
mov
bound
mov
xacquire
push
or
pop
mov
push
outsl
lods
xchg
adc
loope
mov
pop
in
mov
sbb
in
pop
lock
push
outsb
out
xchg
ds
ss
push
fiaddl
icebp
lods
test
cli
lds
mov
xchg
jp
es
adc
pop
cmp
pop
lock
fnstenv
rol
jmp
cld
push
sub
push
mov
sti
cmc
push
push
cmp
jns
fisttpl
outsl
jbe
arpl
xchg
pop
xor
les
inc
cmpsl
xchg
push
jb
add
fs
shr
xchg
imul
gs
mov
mov
repnz
loope
lret
les
add
outsb
push
add
xchg
fldl
adc
add
rolb
rcr
out
mov
adc
mov
push
mov
dec
cli
shll
push
insl
js
push
jmp
cs
xor
inc
xchg
cmp
inc
movsb
in
add
xchg
std
bound
jp
mov
sarl
xchg
aaa
fistl
hlt
pop
adc
mov
jne
dec
add
int3
sbb
sbb
inc
scas
fwait
or
lahf
mov
ret
pop
insl
shll
mov
mov
xor
lret
ret
and
into
cmp
fwait
dec
clc
je
xorb
mov
fnstcw
pop
call
xchg
lock
cli
pushf
pop
dec
repz
jecxz
imul
mov
lret
stos
je
fldt
add
and
adc
mov
popa
in
jmp
cmp
jne
hlt
sub
stos
and
psrlw
lea
add
inc
xchg
adc
stos
std
test
ficoms
lea
dec
jmp
lods
int3
pop
or
push
je
and
jae
xchg
add
mov
ja
push
testb
in
js
jmp
jne
pop
jo
mov
outsb
push
xchg
mov
and
inc
imul
std
xorl
lds
cmp
jg
push
mov
pop
in
push
mov
pop
sub
cwtl
jl
push
mov
xchg
imul
sahf
ja
pop
shrl
dec
aas
push
push
inc
dec
inc
data16
ficoml
inc
int3
push
adcb
mov
cltd
add
jge
je
mov
mov
cwtl
outsl
test
aaa
mov
xor
pushf
in
pop
repz
cmp
repz
pop
ja
sbb
push
test
shl
test
dec
icebp
cmp
and
add
ds
int3
xlat
aam
push
cwtl
adc
adc
js
push
push
xchg
mov
inc
jbe
rcl
ja
push
repnz
addr16
movsb
out
popf
jns
in
enter
dec
dec
xchg
mov
pop
adc
gs
xchg
subl
jno
gs
push
ds
aad
or
cmp
inc
out
insl
sub
in
aam
scas
xchg
mov
notb
lcall
pop
scas
mov
in
and
jmp
jp
inc
movsb
fwait
aad
adc
notb
jecxz
lret
lock
and
inc
sub
test
in
dec
cltd
push
fwait
or
shl
mov
std
jg
test
jae
inc
pop
mov
aam
cwtl
fimull
sti
dec
imul
push
mov
int3
dec
stc
insb
xlat
sbb
fs
fmuls
xorl
push
out
ds
push
pop
mov
mov
roll
cs
sub
mov
inc
mov
mov
es
shrl
fptan
mov
jne
lret
test
jmp
out
push
cmp
jge
insl
movsb
xchg
ret
or
popa
addr16
addr16
pop
mov
sbb
scas
mov
pop
cmpsl
dec
inc
imul
adc
sub
clc
pop
pop
push
adc
or
addr16
adc
rcll
jge
pop
push
or
sarl
adc
int
scas
cld
bound
adc
inc
rcr
push
mov
pop
out
sub
movsb
sub
xchg
test
jb
lret
dec
jne
testl
xchg
pop
xlat
pop
sub
xor
outsl
mov
cwtl
and
ss
push
inc
loop
jmp
js
jo
pusha
adc
push
adc
test
lret
xchg
push
dec
jns
ret
fidivl
sbb
fsubrp
or
fidivl
fdivp
mov
pushf
call
jo
sub
call
call
adc
mov
shl
pop
xor
rcrb
loope
inc
xchg
adc
lret
inc
mov
mov
push
mov
lahf
loopne
mov
int
out
add
out
xchg
pop
mov
jne
mov
xor
mov
jns
pusha
sbb
lcall
mov
inc
ss
insl
add
into
add
and
adc
call
fwait
repnz
mov
push
adc
sub
ds
and
sbb
jl
jbe
ss
shlb
mov
adc
mov
stc
jge
cli
push
mov
mov
lea
fs
jno
inc
fisubrs
test
lods
push
mov
jp
notl
std
lds
es
cld
out
insb
push
or
stc
jp
shrb
pushf
iret
lods
mov
xor
das
cmp
hlt
bound
or
repnz
mov
jne
inc
inc
addr16
negl
inc
ret
fs
mov
mov
sbb
addr16
insl
jo
outsb
mov
outsl
jecxz
jge
arpl
mov
dec
in
inc
dec
call
push
stc
mov
stos
adc
jnp
sbb
pusha
in
shrb
daa
cmpsb
and
sbb
mov
or
push
ret
push
lret
sub
cmp
push
aas
ret
push
mov
push
orb
repnz
mov
add
cmc
mov
ljmp
or
or
pop
add
testl
sbb
js
out
dec
shll
ss
and
cmp
mov
enter
add
hlt
int
ss
mov
or
in
or
push
cmp
xor
test
xchg
push
mov
sbb
ljmp
outsl
nop
popf
mov
dec
cld
fldcw
insb
add
repz
scas
push
cmp
mov
imul
pushf
mov
xchg
sub
add
stos
fdivrl
add
and
clc
outsl
cmp
int
mov
aad
cltd
inc
sub
in
adc
cmp
dec
jecxz
adc
adc
cmp
cmc
popa
in
movsl
inc
xor
cmp
mov
fbstp
xchg
add
stos
lock
cmpl
ss
sahf
int
lcall
test
cmp
mov
or
inc
out
sub
sarl
pusha
je
sbb
cmc
lods
jle
aad
pop
mov
mov
add
adc
pop
clc
lods
push
insl
fstp
scas
adc
xor
and
or
sub
mov
jb
push
xor
rcll
add
lret
sub
mov
xchg
fs
ljmp
add
sub
mov
mov
call
jo
mov
scas
mov
push
add
add
push
cmp
test
in
nop
lret
rcrb
inc
int
arpl
and
mov
out
mov
dec
leave
cmp
add
mov
das
out
rcr
mov
sub
scas
frstor
iret
daa
adc
mov
mov
push
into
pop
ret
cmp
or
mov
insb
aaa
lds
cmp
fldt
movsb
jmp
test
pop
mov
je
clc
dec
sarl
jnp
rclb
or
push
ljmp
dec
sub
xchg
xor
pusha
push
xor
pop
mull
sarb
mov
out
xor
sti
push
mov
cmp
push
add
fucomp
imul
fdiv
stos
repnz
mov
pop
adc
pop
adc
xlat
rorl
imul
mov
fdivl
shrb
dec
push
pusha
test
mov
sahf
lds
sub
movsl
mov
sbb
daa
fdivrl
sbb
insl
or
adc
fistps
sarw
out
push
int3
adc
or
add
ds
cmp
sbb
daa
ret
out
cmp
ljmp
push
fadds
nop
pop
dec
dec
mov
inc
xchg
scas
fsubrl
pop
std
jle
inc
stos
insb
cmpsb
sub
cmpsb
sbb
mov
mov
aaa
mov
cmp
mov
mov
push
sarl
std
sahf
xor
push
push
arpl
pusha
aas
aad
imulb
jg
call
stc
ret
mov
stos
lds
mov
shll
adc
fsubr
fidivrs
frstor
inc
int
mov
sbb
mov
sbb
int
aad
mov
pop
popf
fisubs
mov
dec
push
mov
jnp
sahf
testl
repnz
cld
bound
pop
or
mov
jg
adc
mov
inc
push
pop
adc
push
pop
fdiv
aad
mov
and
ret
out
jl
bound
pop
push
inc
jne
or
stos
xor
jae
lcall
xlat
mov
mov
stos
mov
xchg
lret
add
xor
mov
xchg
fnsave
and
push
jecxz
je
lods
jbe
ds
xchg
jmp
jge
sub
and
xlat
int
std
push
aas
stos
sbb
xchg
add
and
mov
jle
fbld
mov
cmp
push
mov
nop
int3
cs
jne
push
lds
xchg
imul
ss
mov
rcl
push
popa
adc
cmp
xchg
mov
inc
pop
mov
push
pushf
js
nop
fwait
sub
movl
cmp
enter
xchg
adc
sub
leave
scas
adc
lret
sub
in
cmp
or
mov
popa
lcall
sar
mov
je
lods
bound
lret
xor
mov
jb
sub
mov
mov
and
jl
jbe
lcall
test
jg
or
addr16
pop
sahf
insl
icebp
nop
test
rcrb
sbb
addr16
out
clc
or
dec
mov
js
add
hlt
xchg
hlt
les
push
repz
mov
and
sbb
cmpsb
daa
aaa
rcr
or
cmpsb
shrb
fiadds
movsl
jp
pop
scas
cwtl
rolb
imul
push
mov
lcall
mov
sbb
imul
test
loop
pop
add
fs
lods
shlb
sub
sub
fistps
out
sub
loopne
stos
popf
adc
xchg
outsb
lock
adc
cmp
dec
xor
or
out
pop
sub
stos
cltd
ljmp
mov
sub
cmpsl
pop
clc
mov
xor
imull
int3
mov
in
iret
mov
cmp
hlt
testl
shl
xchg
inc
sbb
lahf
jo
adc
aam
loope
jns
call
adc
and
std
lahf
or
dec
aaa
icebp
test
add
and
sub
dec
or
pop
inc
loop
es
lods
lahf
xchg
or
cld
mov
jmp
imul
sbb
ror
testl
xchg
sub
jne
and
pop
mov
cmp
cmp
ret
mov
pop
cmpl
xchg
dec
ret
divl
sbb
sahf
fisubrs
xchg
sbb
or
hlt
mov
dec
cmp
test
leave
out
fdivs
push
mov
lret
mov
frstor
sar
insb
xchg
sub
pop
rolb
mov
ds
int3
jnp
insl
in
js
icebp
cmp
sbb
dec
inc
dec
pop
ss
xchg
ljmp
insl
lods
and
cmpb
or
int3
and
sbb
adc
jns
adc
cltd
enter
lea
jge
pop
ret
dec
ret
mov
imul
cmp
out
xor
nop
push
inc
lea
repnz
in
fmul
insl
mov
jae
push
sbb
add
push
ss
pcmpeqd
lahf
sbb
pusha
xor
lock
fcmovb
pop
cmpsl
sti
sbb
int
mov
cmp
hlt
mov
sub
mov
cltd
fsubrs
jl
pop
fmull
repz
outsb
sarl
push
and
push
arpl
add
cmp
imul
dec
loop
aad
icebp
sub
repnz
dec
add
lret
add
mov
and
cli
xchg
push
lret
push
bound
jg
call
xor
inc
scas
mov
std
jo
push
xchg
dec
pop
insb
gs
sti
xchg
pop
sbb
movsb
cmc
outsl
jmp
pushf
xchg
and
or
das
sub
jmp
ret
add
mov
and
stc
pop
andb
aam
mov
popf
inc
push
imul
add
push
jecxz
push
mov
iret
sub
aam
sbb
mov
and
mov
bound
fldt
sahf
push
pop
pushf
out
popa
ss
popa
pop
das
add
loope
inc
sarb
ds
mov
xlat
xorb
mov
and
jle
es
lods
xor
enter
out
mov
test
rorl
int3
push
in
scas
inc
jo
rclb
cld
mov
and
inc
adcb
mov
pop
lea
xchg
xchg
lahf
sbb
jp
xchg
stos
lds
iret
mov
jbe
sbb
sbb
push
loop
or
xor
adc
stos
aas
hlt
iret
mov
inc
es
xor
jmp
inc
cs
mov
orl
push
xchg
mov
and
inc
in
xchg
ds
mov
lds
mov
sbb
xchg
in
test
in
arpl
lahf
mov
subl
mov
inc
fmulp
test
inc
adc
pop
outsl
inc
xor
xor
add
aam
xor
in
and
or
xchg
out
repz
adc
and
sbb
orb
mov
shll
repz
les
cmp
out
inc
lea
push
sub
and
pop
aas
sarl
fsubp
cmp
adc
sbb
cmp
adc
cmp
jbe
sub
xchg
leave
push
pop
adc
shll
fcmovb
jmp
push
shrl
pop
sub
shlb
jbe
in
out
les
lea
sub
fldl
sbb
fstpl
mov
nop
and
aas
inc
idiv
mov
mov
xor
lods
out
sub
incl
decl
dec
xchg
cmp
cmc
mov
xor
sub
int
and
lret
add
cmpsl
jle
arpl
adc
jecxz
lahf
add
mov
in
out
ss
test
insl
shlb
fistl
dec
adc
testl
xchg
xchg
out
jne
pop
test
inc
cwtl
push
pop
inc
cli
mov
dec
dec
lock
inc
test
jp
test
push
xchg
push
push
inc
xchg
mov
sbbb
imul
dec
xor
sub
or
cli
mov
pop
jnp
hlt
jbe
cmp
or
inc
int
sub
inc
loope
fists
loope
loope
aas
jne
ss
or
sub
sub
cltd
fdivr
dec
mov
mov
pop
xchg
cmc
xor
or
add
mov
sahf
or
mov
jmp
mov
cld
mov
sbb
cmc
sbb
or
sbb
stc
inc
push
js
xchg
subb
sbb
push
mov
sbb
aad
sub
fwait
push
data16
add
xlat
cmpsl
mov
sub
outsb
roll
jno
or
mov
mov
popf
dec
test
icebp
push
jb
dec
gs
mov
mov
pop
and
or
dec
push
dec
xchg
push
push
inc
xor
xchg
lock
les
xchg
sbb
cs
sahf
jmp
and
and
jge
cld
mov
inc
sub
cmp
cmpl
decl
or
hlt
add
lret
test
scas
mov
pop
fwait
sbb
xlat
xchg
xchg
sbb
pop
int3
or
mov
jg
inc
sub
popf
fists
pop
push
mov
push
dec
aaa
jg
sub
inc
jp
fcoms
add
stos
out
or
frstor
imul
mov
dec
inc
push
into
rorb
xor
test
mov
add
sbb
sti
in
dec
je
ror
xor
rcll
mov
pop
cwtl
jle
fs
inc
pop
push
incl
pop
cld
je
add
fcomps
jae
mov
fs
jecxz,pt
and
adc
out
pop
xor
mov
std
mov
ret
repnz
ret
lret
mov
mov
or
mov
push
pop
sub
cmpsl
sub
inc
lret
pop
fwait
cs
or
jbe
je
xchg
cld
push
jne
test
push
repnz
xor
call
mov
je
or
inc
push
pop
repz
adc
int3
mov
fwait
add
aas
pusha
adc
pop
lock
jge
and
xchg
mov
test
shll
mov
clc
scas
test
hlt
jne
xchg
or
call
cli
movsb
aad
cmp
jecxz
out
mov
outsl
dec
les
dec
cwtl
sub
mov
sub
xchg
leave
jns
jle
pop
ljmp
out
ret
scas
add
mov
addb
lods
pop
lret
xor
push
shll
aam
mov
inc
aaa
xor
imul
test
mov
aad
push
xor
ss
loop
incb
movsb
cld
mov
mov
add
adc
or
shr
std
ds
push
cmc
lods
pop
pop
inc
jnp
mov
xor
jo
and
cmp
push
out
sbb
mov
ja
loope
jns
mov
pop
cmp
cs
cli
fs
je
pop
pushf
clc
imul
cmp
inc
faddl
mov
or
mov
pop
jmp
in
xlat
repnz
and
inc
xor
add
mov
add
push
test
aam
dec
sub
je
int
in
mov
lret
pushf
jo
int3
mov
xchg
cmp
or
xchg
sbb
lcall
fs
mov
jl
in
or
jle
sbb
fnstcw
out
dec
sub
adcb
and
cmp
and
mov
scas
xchg
out
push
cmpsb
iret
pusha
outsb
fimuls
pop
add
es
xorl
mov
int3
je
shlb
lds
stos
adc
dec
lods
xchg
fdiv
jge
inc
bound
dec
adc
cmp
or
mov
jb
cltd
push
jl
inc
cmc
fs
add
jb
in
outsl
pop
lds
jo
inc
aaa
jp
xor
lcall
fsubl
cmp
pop
or
cld
adc
cli
fcoms
fs
sub
xchg
and
sbb
ljmp
cmc
add
jo
sub
pop
mov
cwtl
loope
xchg
gs
mov
mov
pop
cltd
jnp
cmp
je
dec
stos
pop
xchg
imul
pop
ss
sahf
test
rorl
jmp
icebp
lret
ror
add
test
or
sbb
movsb
iret
xor
xchg
cmp
outsb
cmpsl
sbb
fldlg2
int3
and
sub
xlat
stc
loopne
lock
sahf
push
pop
jns
push
mov
mov
dec
mov
xor
pop
in
mov
rcrb
mov
bnd
mov
inc
test
or
xchg
data16
or
jmp
mov
jmp
lret
jmp
sbb
or
loope
shrb
aam
repz
lea
shrl
pop
sub
or
xor
lea
femms
xchg
aam
cmpsl
lret
fwait
mov
insb
out
in
sarl
leave
je
cmp
sbb
mov
jge
push
mov
pop
pushf
add
xlat
inc
sahf
or
jecxz
nop
insl
loopne
shrb
jbe
or
sbb
push
lcall
add
cltd
sbb
dec
mov
fiaddl
scas
dec
loopne
mov
shll
cmp
shlb
fistps
pop
mov
and
adc
add
and
in
imul
filds
das
stc
sub
jae
sbb
mov
mov
inc
int3
or
push
xchg
or
sbb
cmp
adc
imul
sbbl
insl
loop
fildl
mov
cmpsb
pop
mov
mov
adc
push
xchg
and
aam
popf
sbb
dec
mov
jno
inc
test
leave
ja
imul
adc
pop
leave
dec
dec
push
test
std
adc
mov
push
mov
jno
fs
cmc
inc
testl
int
out
sub
mov
subb
push
mov
call
inc
xchg
test
push
clc
test
jb
outsl
mov
pop
subl
mov
ja
dec
xlat
sub
jle
push
or
inc
movsl
insb
cwtl
daa
fs
lea
negl
sbb
inc
in
sub
push
mov
into
pop
rcrl
sub
sbb
and
test
clc
gs
in
rcrl
adc
sbb
inc
ljmp
sub
dec
lahf
outsb
mov
xor
sub
cmp
mov
scas
popa
pushf
dec
nop
jp
xor
cmp
dec
cmpsl
jns
pop
xchg
mov
movsl
mov
inc
lods
add
pop
cmpsl
pop
push
dec
push
gs
fnstcw
lahf
inc
cmpsb
into
adc
lods
insl
and
sti
aam
call
cmp
int
std
lea
ss
or
dec
xchg
xor
jo
jns
dec
call
push
mov
nop
mov
aam
dec
mov
arpl
lret
cli
shl
push
mov
and
xor
jg
inc
mov
mov
push
mov
pop
sbb
pop
movsb
jp
popa
loop
fwait
pop
mov
cltd
jmp
dec
je
ss
stos
xchg
clc
pop
add
sbb
pop
dec
cmp
negl
cmp
sbb
iret
cmp
adc
push
mov
jp
push
mov
jp
mov
fnsave
popf
aaa
mov
add
test
mov
cltd
xchg
inc
mov
jp
dec
mov
das
out
cld
fcoms
dec
xchg
into
jle
jle
sarb
add
push
or
or
hlt
les
sub
push
inc
fs
shlb
and
sbb
dec
lds
or
stc
add
js
add
mov
roll
mov
mov
ss
jmp
mov
sti
cmc
sbb
inc
fisttpl
pop
movl
add
mov
popa
insb
pop
mov
pop
mov
lret
rcl
lret
es
cmpsb
arpl
dec
lods
jae
fadd
sub
pop
fimull
sbb
xor
paddusw
stos
jp
pop
loopne
xchg
cltd
push
pop
arpl
js
enterw
call
jnp
mov
jb
scas
mov
loop
fsubl
xchg
cvtps2pd
xchg
cltd
adc
mov
test
pop
push
mov
dec
in
fnstcw
xchg
mov
stos
lods
dec
lods
jns
jns
pop
test
and
cs
cmp
sbb
enter
data16
and
push
shrl
in
hlt
stc
inc
rclb
jmp
pop
mov
addr16
inc
mov
mov
adcl
icebp
rolb
cmpsl
xor
repnz
adc
rcll
jp
cmp
push
in
aas
inc
inc
movsb
outsb
lahf
jg
pop
addb
lahf
je
dec
movsl
jo
dec
mov
push
mov
bound
gs
adcl
mov
jnp
pusha
mov
xchg
dec
mov
and
add
sub
paddd
fnstenv
repnz
jns
sub
push
xchg
inc
movsb
dec
xchg
jl
push
mov
pop
mov
bound
cmp
ja
insl
fsts
mov
addl
mov
sbb
or
es
das
out
lds
fidivs
add
push
jecxz
mov
push
mov
test
jne
inc
loope
lods
pop
mov
inc
xchg
je
mov
pop
leave
or
sbb
fcmovbe
adc
add
and
add
cmp
mov
cli
xor
xor
sub
adc
aaa
repnz
les
lret
aaa
fstl
repnz
and
adc
and
ss
ret
push
mov
xchg
jle
lods
pop
enter
lcall
orw
dec
mov
nop
jg
jle
pop
xchg
push
sahf
jg
inc
xchg
jns
inc
mov
ret
xchg
mov
dec
nop
rclb
push
inc
and
adc
ss
das
leave
pushf
push
mov
xchg
xchg
nop
insl
mov
push
stos
pop
mov
fiadds
pop
stos
pop
or
inc
popf
inc
mov
out
mov
xchg
jge
pop
xchg
roll
loopne
int
loop
ret
xor
or
push
xor
adc
lcall
mov
dec
jle
dec
stos
fs
pop
scas
mov
push
mov
inc
push
je
dec
mov
jno
scas
shll
clc
add
sub
push
repnz
xor
fdivp
and
add
movl
push
mov
cmp
pusha
fdivrl
ftst
cli
rcr
clc
ljmp
adc
nop
push
dec
dec
aas
push
pop
inc
cwtl
mov
mov
mov
lea
xor
jno
pop
push
push
outsl
push
push
lea
lods
mov
adc
xor
xor
pop
inc
cmp
push
mov
cltd
jb
stos
int3
or
cli
stos
jbe
sbb
outsl
decb
das
lcall
andb
jp
mov
inc
std
jb
or
arpl
mov
mov
sub
por
in
cmp
ss
cld
rcll
mov
insb
repnz
andl
jge
and
imul
push
std
jle
fs
push
je
add
fwait
test
imul
jge
cmp
or
pusha
mov
lock
and
jno
cmp
mov
adc
pop
out
xor
out
mov
sbb
xchg
nop
ja
fiadds
js
push
out
insl
punpckhdq
jno
inc
test
test
ljmp
rcrb
call
js
push
scas
fs
pop
push
js
popa
mov
pusha
in
lret
and
sbb
sub
mov
mov
sarb
out
sarb
gs
aaa
leave
bts
adc
xlat
sub
or
fcompl
addr16
in
pushf
push
stos
shrb
push
sahf
inc
scas
lods
sbb
jmp
xchg
mov
sti
mov
pop
sar
mov
mov
pop
xchg
in
pop
cmp
movsl
mov
ret
dec
sarl
sbb
fsubr
sahf
hlt
call
add
inc
sbb
push
or
hlt
push
loopne
in
shr
cld
and
cmp
ret
in
jne
outsb
jb
stc
ja
scas
mov
imul
push
pop
fucomi
cmpsl
lahf
shl
mov
mov
in
sti
pop
adc
mov
sub
sti
and
mov
pop
and
nop
push
push
push
or
cli
mov
cmp
jnp
icebp
fimuls
insb
call
sarb
int
and
in
or
mov
xor
push
aad
cld
or
and
rclb
adc
rcr
cmp
inc
pop
gs
popf
stos
inc
inc
imul
in
repz
mov
and
fisttpll
inc
mov
adc
dec
add
mov
inc
ss
lret
jns
sub
in
pusha
leave
xlat
sahf
adc
mov
xchg
xor
ret
sub
clc
notl
xchg
jle
or
or
imul
pop
stos
aas
xchg
dec
mov
bound
sbb
or
imul
sbb
jbe
pop
lds
popf
sub
add
cmp
ficomps
xchg
or
sub
jae
cmp
aas
xchg
adc
and
sbb
sub
insl
sbb
add
push
mov
dec
mov
call
or
testl
mov
jl
jl
push
movsb
adc
imul
ret
jb
jp
test
or
leave
jne
pop
inc
xchg
mov
je
sbb
sub
pop
ljmp
push
fbstp
sbb
aad
add
push
cmc
ja
jle
or
jno
push
mov
cltd
pop
lods
pop
lahf
and
xchg
jp
pop
add
dec
adc
nop
dec
sti
daa
adc
lock
cmp
adc
sbb
mov
in
cs
xor
addr16
outsb
loope
ljmp
int3
pop
std
sub
in
jmp
gs
pop
mov
imul
cli
dec
mov
mov
cmp
add
call
mov
hlt
mov
adcb
xor
loop
dec
mov
jle
push
add
sub
cmp
imul
mov
lods
inc
mov
inc
adc
sub
bound
sub
psraw
mov
gs
outsl
decl
mov
adc
adc
mov
ss
out
test
movsb
cmp
inc
ret
adc
mov
xlat
jl
insl
in
test
in
icebp
ja
push
cmpsl
mov
push
lret
sub
cmp
sbb
xor
add
xor
lret
xor
xchg
imul
rolb
cmp
sub
sub
add
mov
bound
sbb
ds
xchg
pop
int
jne
rclb
and
lahf
and
cmp
outsl
out
pop
out
das
jecxz
in
xchg
adc
inc
in
cmpl
xchg
daa
das
add
ret
stc
mov
dec
jmp
fsubrl
mov
or
ds
inc
int3
or
and
or
addb
push
mov
fwait
dec
jns
adcb
ja
test
ret
imul
mov
mov
divl
adc
cmpsb
stos
jecxz
cwtl
test
add
add
push
popf
xchg
scas
add
scas
dec
pop
inc
push
jne
jl
outsl
cwtl
data16
dec
shll
faddl
hlt
and
inc
movsl
gs
xlat
push
in
aad
push
out
jmp
cmc
aaa
shrb
repnz
adc
aas
leave
or
sub
aad
xlat
xor
xor
add
mov
stos
mov
lods
bound
shll
cltd
push
xchg
daa
xchg
push
int
cmpsl
push
mov
test
in
rorb
mov
leave
inc
mov
ja
pop
js
int
pushf
dec
stc
imul
xor
popa
mov
push
jecxz
add
int
mov
ja
sub
dec
in
pop
aaa
cmp
sbb
pop
les
inc
int
popf
add
scas
aaa
in
mov
adc
xchg
jle
and
dec
hlt
dec
xchg
and
cld
into
jp
roll
jne
adc
dec
fsubrl
jns
pop
sub
xor
xor
pop
mov
lods
mov
lcall
ret
jge
pop
jne
insl
dec
inc
arpl
lahf
pop
pushf
outsb
xchg
push
mov
dec
out
jg
fildll
add
push
dec
lea
call
cmp
ds
aaa
xor
enter
jecxz
mov
sbbl
xor
lds
mov
or
test
fwait
jo
push
xchg
cmpsb
dec
rcll
pop
daa
test
push
dec
sti
enter
mov
test
xlat
add
jg
fmull
fistpl
sbb
out
mov
cmp
clc
lahf
test
dec
mov
scas
mov
pop
adc
mov
add
xchg
push
pop
dec
clc
ret
lcall
push
lret
cmp
or
fsubr
enter
les
icebp
insb
sbb
pop
adc
push
xchg
cmpsb
push
lcall
inc
mov
pushf
pop
mov
dec
cltd
dec
lods
jbe
dec
mov
mov
pop
test
push
lcall
fists
out
out
lcall
pop
mov
cwtl
jno
outsl
lahf
inc
xchg
cmp
scas
ds
inc
mov
push
gs
fs
bound
insl
cltd
inc
jbe
shll
cmc
adc
daa
rcrl
out
mov
insl
xchg
pop
mov
cltd
dec
test
arpl
or
xor
pop
rorl
gs
in
ficomps
xor
adc
add
into
xor
loope
or
cld
pop
shll
out
aad
jne
pop
mov
loop
pusha
mov
sarb
inc
shlb
shl
push
faddl
notb
std
and
jecxz
scas
mov
andb
adc
or
or
adc
call
je
xchg
ja
ret
out
push
jle
out
aad
sub
clc
push
lahf
cmpsb
ss
dec
or
push
lds
mov
mov
jecxz
sub
stos
cltd
mov
popf
insl
dec
add
push
bound
lret
fnstsw
mov
sub
test
cmpsl
mov
in
idiv
call
or
mov
jecxz
mov
cli
jae
out
or
or
pop
outsl
sub
xor
movsl
sti
std
cmpsb
jbe
xchg
inc
mov
mov
je
adc
fistpl
adc
sub
jns
icebp
insl
xor
rorb
lods
push
push
jnp
mov
mov
push
push
sarb
or
loopne
lcall
pop
ret
adc
fildl
mov
pop
xchg
jo
cld
iret
adc
and
push
cmc
insb
sahf
and
dec
fmuls
cmp
mov
test
imul
xchg
lea
sarb
fwait
dec
cmc
dec
ret
inc
cli
insl
jo
out
pop
std
cwtl
enter
cmpsl
out
in
in
stc
sbb
mov
ss
add
or
mov
packssdw
test
and
imul
xor
daa
int3
inc
jle
lahf
mov
mov
or
insb
shll
push
jge
jl
or
jle
aas
mov
negl
sbb
mov
mov
add
imul
lret
push
bound
in
testl
lret
inc
cmp
push
jmp
paddd
dec
cwtl
imul
jae
outsb
sahf
cli
mov
and
into
or
inc
xchg
jle
mov
dec
cltd
insl
insb
inc
call
popa
mov
cli
lea
jns
mov
movsl
push
pop
mov
bound
jle
dec
sahf
inc
xchg
xchg
push
mov
enter
sbb
mov
dec
les
fidivrs
rcrb
repz
divb
ljmp
ret
add
fiadds
mov
movsl
jle
arpl
mov
xor
mov
dec
mov
adc
aas
and
icebp
fsubl
mov
fidivs
leave
jne
cmp
ljmp
adc
std
xchg
pop
loopne
not
stc
adc
cmp
inc
cmp
add
enter
mov
dec
addl
jle
mov
mov
xchg
rcrl
fistpl
cmp
push
or
lea
mov
sub
sbb
push
cli
inc
mov
movsl
incl
dec
mov
dec
adc
jl
leave
mov
push
mov
pop
xchg
xchg
sahf
pop
lods
push
cltd
adc
ljmp
test
inc
lods
push
push
sbbl
dec
mov
jmp
mov
and
mov
push
cmp
fcmovne
loopne
ljmp
aad
out
fucomp
sar
es
push
into
pop
mov
ss
cs
sbb
out
in
in
nop
lods
scas
pop
jae
cmc
push
jmp
in
lahf
addr16
mov
or
dec
ss
ret
adc
and
push
cld
add
push
in
rolb
hlt
add
adc
bndstx
les
sub
xor
adcb
inc
push
jle
stc
aas
inc
push
jb
pop
lahf
pusha
stos
mov
inc
xchg
movsb
scas
stos
jo
pop
xchg
inc
insb
pushf
inc
mov
ficomps
cld
cmp
push
and
dec
loop
leave
and
dec
pop
mov
rclb
les
push
rcrl
lea
push
xchg
pop
js
jbe
in
push
jmp
xchg
push
cmp
std
dec
inc
pop
sbb
mov
mov
das
sbb
push
inc
leave
adc
sbb
hlt
imul
mul
ret
sub
adc
repnz
jp
push
lcall
inc
out
lret
and
fimuls
pmullw
into
std
stos
scas
pusha
lret
push
push
xorl
gs
insb
test
dec
scas
jbe
dec
xchg
dec
sahf
insb
xchg
push
test
fs
jle
insl
int3
push
stos
dec
cmpsl
dec
pushf
push
xchg
pop
lods
je
popa
add
sub
dec
mov
sti
outsl
push
unpcklps
and
jl
inc
pop
cltd
pusha
lods
or
inc
cmpsl
imul
xor
inc
mov
sub
dec
enter
cltd
xchg
sbbb
xchg
inc
pushf
ja
jl
inc
inc
imul
xchg
cltd
mov
mov
jns
pop
pop
fs
jbe
cltd
imul
pushw
loopne
into
out
lds
mov
loopne
and
sub
leave
and
in
popf
rcrb
rorb
and
ss
in
shrl
hlt
sub
out
lock
dec
xchg
sbb
movsl
data16
hlt
adc
sbb
push
fsubs
lock
fists
aam
orb
mov
xor
js
js
push
lcall
add
ss
fbld
mull
cmp
or
ja
ja
mov
pop
out
mov
ja,pt
mov
inc
jo
mov
leave
popa
arpl
stos
push
movsl
int
repnz
xchg
dec
repz
mov
adc
fsubs
leave
cli
pop
xor
cmpsb
xchg
shlb
mov
inc
insb
pop
mov
out
aaa
inc
nop
mov
cmpsl
push
push
ss
addr16
xchg
xchg
imul
pop
xchg
cmpsl
inc
andb
mov
adc
xchg
inc
mov
pusha
and
adc
xchg
pop
loopne
insl
ljmp
fdivs
lret
pop
aad
lcall
movb
aas
repnz
aam
out
and
adc
xor
or
xor
enter
rclb
cmp
sbb
out
sub
pop
mov
adc
aaa
or
stos
add
or
adc
dec
cmc
insb
std
aaa
mov
add
sbb
and
jns
rcr
adc
rorb
mov
pushf
mov
sti
push
arpl
dec
std
inc
mov
dec
cs
lods
push
stos
dec
lahf
imul
jne
movsl
mov
inc
inc
les
mov
push
hlt
mov
pop
lahf
pusha
sbb
mov
dec
pop
fs
rolb
fnstcw
jl
roll
ja
in
inc
dec
dec
xchg
jp
dec
loop
gs
jmp
ret
push
pop
or
adc
in
push
fisubl
or
loope
das
jbe
int
fsts
xor
notl
and
aam
jmp
and
mov
mov
ljmp
inc
mov
cs
jmp
lock
sbb
aaa
pop
pop
jbe
mov
xchg
xor
scas
push
les
jmp
jno
adc
mov
lods
adc
jge
arpl
cwtl
xchg
std
xor
scas
add
pop
sub
gs
sets
enter
hlt
xor
inc
or
fiaddl
jbe
inc
sub
cmc
mov
into
xchg
inc
push
xchg
and
or
xchg
mov
inc
inc
xchg
xchg
scas
inc
cmp
imul
inc
stos
jl
mov
push
sbbb
push
inc
orb
cmpsb
xchg
insl
jne
addr16
pop
lcall
sbb
cs
or
test
sbb
out
movups
adc
push
fistpl
loop
les
sbb
add
test
mov
mov
test
ret
outsl
popf
imul
call
insb
sarl
pop
mov
jle
adc
and
std
push
cmpb
cmp
or
sub
fdivp
pop
testl
in
daa
mov
push
shll
in
pop
and
pop
test
cmp
mov
dec
mov
icebp
mov
dec
mov
jp
pop
nop
lea
push
lock
add
clc
or
add
sub
adc
popa
int3
rcrb
in
dec
insb
jl
les
sahf
scas
out
dec
inc
cmp
push
and
mov
negb
inc
cmp
and
dec
mov
adc
ds
xchg
lret
in
gs
out
and
push
mov
femms
push
pop
fwait
bound
shlb
add
sub
mov
cld
pop
stos
mov
add
stos
cmpsb
int3
ret
pop
xchg
adc
push
cmpsb
xlat
out
scas
mov
std
mov
aas
or
dec
sbb
xor
es
mov
mov
sub
dec
sub
sti
add
test
or
arpl
pop
cmp
adc
in
jecxz
or
mov
sbb
xchg
les
shlb
push
add
pop
xor
test
int3
inc
jns
fs
pop
jl
popa
xchg
inc
in
ds
pop
fsubs
insl
jns
mov
add
adc
shrl
test
es
int
scas
mov
push
mov
cwtl
dec
mov
mov
jno
fdivl
insb
cmpsb
xor
jnp
mov
cmp
xchg
mov
sbb
push
in
xchg
or
dec
fisubrl
in
xor
pusha
iret
daa
fsubrl
pop
xchg
fwait
adc
dec
test
popf
inc
insb
sarb
cltd
push
mov
jp
rclb
mov
lods
ret
dec
mov
cmp
loopne
ss
das
aad
test
sarb
ss
rolb
add
aas
std
rcll
stc
sbb
adc
adc
sbb
adc
sub
cmp
ret
pop
mov
fisubs
dec
out
lods
pop
mov
pop
mov
cli
inc
aad
mov
and
aaa
lds
daa
jecxz,pt
hlt
and
sbb
dec
ret
xor
sub
fadds
es
out
shrl
adc
sub
mov
inc
mov
je
andl
je
dec
mov
nop
xorb
lods
inc
mov
inc
lods
arpl
inc
xchg
cs
fwait
mov
test
lea
loop
mov
pop
rcrb
and
das
divb
movb
jne
push
out
jl
mov
mov
inc
mov
dec
pop
xchg
sahf
cmpsl
mov
pop
push
jnp
scas
mov
jns
mov
in
cmp
sbb
adc
sbb
add
loop
add
cmp
xor
sbb
and
mov
and
mov
jl
sub
jo
adc
fstpt
les
ss
and
sbb
and
push
fisttpll
test
lods
dec
aam
sarl
xlat
xchg
and
cmp
pop
repz
and
adc
sub
dec
loopne
in
imul
cmp
push
std
xor
and
sbb
fs
arpl
jle
push
mov
je
pop
mov
rolb
inc
xchg
pusha
movsl
insl
pop
bound
imul
adcb
mov
movsb
inc
test
mov
outsl
mov
pop
shll
sbb
sub
or
push
aad
aam
lds
ficoml
dec
fwait
inc
ret
jno
inc
mov
push
inc
xchg
push
pop
mov
testl
inc
lods
inc
mov
xor
mov
pop
frstor
jecxz
inc
repz
ret
shl
push
cli
fsubs
ret
adc
int3
cld
push
vpsubsw
stc
cmp
adc
and
sbb
out
or
sbb
sub
pop
stc
adc
cmp
push
lahf
dec
mov
pop
xchg
jns
inc
out
js
pop
mov
or
cmp
cmp
pop
ret
das
clc
xlat
adc
cmp
jb
repz
push
in
xor
aam
fimull
jecxz
fsubrs
in
rcr
sub
rcrl
pop
pop
mov
xorl
push
addr16
jns
pop
xchg
dec
in
popf
inc
xchg
inc
shrl
push
mov
push
cltd
pop
mov
pop
dec
mov
inc
out
mov
ljmp
or
or
and
sbb
cmp
push
test
inc
lcall
popa
stos
outsl
pop
nop
pop
xchg
arpl
inc
mov
mov
jns
lods
inc
jbe
movsl
inc
mov
shl
or
shr
shlb
and
push
cmp
fidivrl
rorl
sub
push
int3
cmp
sbb
fcomps
in
sub
push
stc
cmp
arpl
sub
fsubrs
divl
mov
sbb
je
inc
shll
dec
int3
pop
mov
std
daa
out
out
cmp
and
add
xor
test
jae
or
js
popa
mov
lcall
ja
or
es
sbb
mov
addr16
je
push
cmpsl
push
js
pop
xchg
jns
xor
mov
inc
loop
mov
pop
pop
dec
jmp
sti
sub
sub
push
std
xor
adc
adc
movsl
aas
fimuls
aas
pop
ljmp
or
and
sub
enter
fbld
in
fisubrl
into
adc
and
aaa
jmp
addr16
imul
cmp
cmp
xor
and
sbb
xor
idivb
roll
inc
sbb
add
adc
fstpt
stc
in
ficomps
push
ljmp
push
dec
imul
jo
pop
xchg
arpl
push
mov
push
sbbb
xchg
add
adc
je
sbb
cmp
lds
add
dec
sahf
gs
pop
mov
mov
or
addl
mov
sahf
pusha
mov
inc
jbe
lahf
dec
push
imul
adc
adc
cmp
lds
aad
loop
xlat
cmp
out
add
and
sub
push
and
sarl
add
adc
pop
mov
icebp
inc
leave
sbb
xor
lea
add
mov
push
test
shll
loop
std
sub
push
in
lea
in
daa
shll
adc
imul
out
addr16
xchg
notb
in
iret
in
ss
inc
arpl
push
push
xorl
jns
add
cwtl
bound
push
xchg
ja
bound
jg
adc
push
mov
test
push
mov
lahf
fs
leave
dec
lds
inc
xchg
pop
aam
shrb
outsl
mov
jge
popa
scas
push
subl
popf
push
fwait
fs
mov
push
popl
je
inc
stos
adc
xchg
mov
sti
and
add
sub
call
adc
loop
push
int3
cmp
in
ds
push
shrl
sub
sbb
xor
xor
shll
stos
add
cs
sbb
or
pop
repz
jo
sbb
inc
sahf
cmp
push
lret
add
xor
call
sub
and
pop
out
xor
push
fildll
fisubrl
ficomps
in
sub
sbb
add
push
sar
ficompl
out
sub
adc
jbe
xchg
xorb
xchg
js
inc
cltd
jle
inc
mov
jnp
push
xchg
andl
lcall
sbb
addr16
scas
inc
push
lcall
jp
sub
mov
cld
sbb
jge
jns
inc
loope
sahf
pop
jmp
bound
loopne
xchg
push
insb
imul
cmp
mov
push
mov
movsl
mov
push
imul
adc
adc
out
loopne
hlt
repnz
cld
sbb
cmp
daa
in
pop
testl
stos
sub
pop
mov
lret
jb
sbb
jo
adc
pop
call
cli
sub
adc
adc
adc
push
in
out
sbb
xor
cmp
mov
pop
or
xor
repnz
pop
and
daa
or
xor
cs
adc
sti
jmp
push
bound
pop
ljmp
mov
gs
test
bound
jne
inc
xchg
popa
cmpsb
dec
mov
jae
pop
lret
pusha
mov
test
testl
out
out
lods
insb
sahf
dec
mov
xchg
imul
pop
fldenv
pop
push
inc
xchg
jg
push
pushf
dec
fwait
mov
xorb
mov
sub
rcl
add
ret
adc
add
adc
and
enter
repz
fsubrl
into
cs
int3
lcall
movsl
xor
out
into
or
sbb
sbb
sbb
mov
xorl
adc
xchg
adc
sbb
pop
jecxz
test
in
push
fdivs
xlat
cmp
imul
rcll
sub
sbb
and
sub
cmp
cmp
and
sbb
cmp
ret
xchg
nop
jnp
imul
pop
cmpsl
stos
xchg
jbe
push
xchg
lea
sti
cmpb
outsl
dec
pop
test
outsl
mov
xchg
inc
cmpsb
pop
lea
jge
push
sbb
jbe
or
add
xchg
pop
mov
xor
out
pop
movsb
dec
lahf
sbb
je
popa
test
popa
mov
dec
xchg
pop
cmpb
stos
jp
jl
mov
call
aas
or
sar
ret
fldenv
push
hlt
sub
aas
out
and
aaa
sub
cmp
or
pop
iret
cs
jp
pop
mov
pop
call
add
ljmp
sub
inc
enter
loopne
fisubrs
sbb
in
fstps
loope
jmp
insl
add
icebp
enter
out
into
add
ss
sbb
outsb
in
enter
loop
xchg
test
push
mov
dec
xchg
addr16
pop
test
lods
push
stos
inc
insb
jae
push
mov
imul
scas
mov
clc
jge
push
lock
cs
xchg
pop
test
fs
mov
cmp
setae
inc
mov
xchg
mov
pop
xchg
outsb
xchg
cmpsl
stos
sbb
popa
cmpsb
add
mov
push
ja
out
out
cwtl
imul
repz
jmp
hlt
lds
call
test
jmp
clc
cmp
adc
rol
adc
es
in
aad
add
cld
fs
and
roll
sbb
mov
sbb
adc
jmp
fdivs
adc
pop
out
or
jmp
or
jo
push
jmp
into
adc
ljmp
into
add
loopne
pop
loopne
xchg
inc
mov
imul
cmpsl
mov
mov
subl
andb
adcb
jle
push
lcall
pop
xchg
test
aam
pushf
pop
leave
cmp
jo
inc
test
mov
insb
test
lahf
pop
mov
xchg
insl
mov
addr16
dec
jecxz
cltd
arpl
mov
pop
lds
addb
sahf
arpl
aas
mov
loopne
leave
ljmp
icebp
inc
adc
sbb
adc
xor
sbb
rol
add
leave
shl
sub
sub
push
add
loope
xlat
xor
shr
mov
movsl
and
inc
icebp
pop
ret
dec
in
les
mov
push
in
lret
sbb
ud1
cmp
push
ljmp
inc
jmp
adc
inc
fmuls
mov
sbb
arpl
scas
mov
xchg
outsl
mov
js
push
inc
push
xchg
jae
jbe
push
test
lods
dec
mov
imul
mov
dec
mov
mov
inc
mov
jae
ds
pop
mov
push
mov
gs
bound
pop
mov
jg
lret
ret
cmp
mov
jecxz
leave
dec
in
fsubs
mov
jge
sbb
add
sub
iret
xor
testb
xor
je
add
ds
push
loop
enter
addb
sub
adc
xor
je
pusha
shlb
stc
adc
xor
pop
test
push
mov
jmp
sbb
repnz
cwtl
pmaddwd
iret
dec
push
int3
cmp
add
loopne
loopne
cli
inc
fidivl
shrl
xor
and
es
cmp
das
fstps
mov
inc
pop
push
xchg
xorl
lcall
mov
cmpsl
push
mov
inc
xor
inc
mov
lods
pop
fs
popa
scas
jo
or
or
jns
push
in
dec
cltd
outsb
cmpsl
imul
xchg
dec
cltd
push
nop
push
jg
mov
imul
mov
dec
xchg
imul
movsl
push
dec
xchg
insl
popf
pusha
imul
in
fidivrs
dec
add
sub
and
sub
push
stc
cmp
int
cli
or
frstor
cs
ret
fdivp
sub
repnz
ljmp
push
loope
aas
fmuls
lds
rorb
sub
push
mov
negb
ret
sub
adc
call
and
sbb
add
mov
clc
jmp
xor
fsub
hlt
jo
jmp
cs
xchg
pop
inc
mov
inc
push
lea
andb
lea
cltd
pop
xchg
int
popa
test
mov
xchg
jbe
dec
lds
push
gs
cmpsb
xchg
xchg
and
out
mov
nop
dec
jge
dec
lea
adc
dec
lahf
jle
js
pop
mov
jbe
pop
popf
pop
decb
imul
jno
pushf
xchg
test
leave
dec
cli
add
fisubs
sti
pop
ds
ljmp
sub
add
xor
std
cmp
enter
movsl
sub
and
jl
and
cli
push
lds
in
sub
jne
add
dec
out
jno
or
xor
push
fwait
cmp
jbe
push
enter
rcll
cmpsl
cs
les
in
sarb
daa
jmp
hlt
sub
setno
add
mov
sbb
fbld
fsubrp
fsub
rcrl
push
jb,pn
imull
lods
sahf
mov
push
test
dec
xchg
push
push
movsl
jge
pop
push
pop
lcall
jg
jg
dec
mov
gs
lods
jle
lods
inc
out
test
xchg
push
movsl
sub
inc
out
and
sbb
pop
xchg
and
jl
push
scas
or
popa
test
push
cltd
pop
test
imul
push
xchg
imul
jl
insl
push
xchg
jns
js
push
xorb
sbb
pop
rcr
stc
jmp
push
aaa
loop
jecxz
hlt
pop
icebp
or
xor
fcom
ja
out
sub
add
repz
mov
repnz
loop
lds
inc
cmpsb
xor
adc
das
fmull
xchg
insl
mov
repnz
rorl
cmp
das
sti
aas
mov
icebp
xor
or
cld
sbb
xor
pop
in
ljmp
sbb
and
adc
cmc
add
add
xor
roll
sti
push
push
inc
cmp
add
mov
push
loop
mov
jl
cmpsb
xchg
outsl
xchg
inc
mov
or
movsb
jno
imull
dec
mov
cmp
pusha
fcomps
jns
pop
mov
out
mov
imulb
and
lahf
jae
jl
inc
xchg
jnp
dec
cmpsb
inc
movsb
insl
mov
pushf
push
jbe
xchg
outsl
xchg
jl
xchg
imul
pop
push
sbb
roll
xor
and
repz
sub
pop
cmp
std
push
push
hlt
scas
mov
out
aad
fdivl
in
or
or
xor
sarb
and
add
adc
pop
lods
insb
nop
aas
mov
adcb
xchg
sbb
inc
fwait
push
mov
xchg
sbb
dec
int3
sub
add
mov
shrb
adc
and
jnp
das
out
les
rorl
aam
or
pop
ret
aas
or
and
outsl
adcl
lcall
jo
mov
push
into
add
jle
addr16
outsb
inc
std
jp
xchg
push
and
outsb
lret
xor
int
outsb
popl
pop
popf
dec
and
xchg
in
cld
das
pushf
adc
push
mov
mov
into
xor
or
fldcw
pop
xchg
mov
inc
scas
push
mov
xchg
arpl
mov
jo
popf
repz
lea
inc
lods
dec
jle
popf
dec
xchg
jnp
push
jmp
and
enter
loope
adc
sub
or
add
jmp
xorl
adc
iret
adc
push
cmp
push
push
shlb
roll
cmp
lea
xchg
cwtl
push
dec
nop
dec
jno
mov
shlb
mov
pop
xchg
js
jno
pop
mov
outsl
xorl
sbb
fs
sbb
and
push
mov
out
inc
cltd
inc
mov
add
ss
cmp
test
lahf
xor
adcl
stc
pop
lret
sub
jl
inc
pop
lahf
in
sub
orb
mov
int
cmp
cmp
push
fisubl
cli
adc
inc
adc
and
pop
lret
adc
mov
or
and
test
shrl
pop
sub
sub
push
mov
in
jno
not
xchg
jo
popa
push
push
loop
sbb
rolb
sti
das
loope
idiv
xor
cli
insl
loop
add
in
test
hlt
pop
test
add
leave
push
mov
mov
je
push
ret
pop
xchg
push
cmp
xor
mov
add
add
add
add
and
jl
and
add
add
add
inc
add
add
xor
add
dec
add
add
add
add
add
add
add
add
jl
add
add
add
add
add
add
xor
add
add
jb
imul
popa
jl
add
add
imul
js
xor
xor
add
add
add
add
es
aaa
mov
pop
fwait
cmp
add
add
or
add
add
imul
add
dec
push
outsb
imul
outsb
outsl
ja
add
push
jns
je
insl
add
adcl
je
adc
jns
gs
add
aaa
add
mov
add
add
add
add
and
add
add
call
add
adc
add
add
sub
add
xor
add
cmp
mov
lea
mov
mov
mov
test
sub
mov
nop
xor
jmp
lea
je
dec
inc
cld
sub
push
dec
inc
lea
xchg
xchg
shl
jmp
push
lea
not
call
push
xchg
jmp
cld
cmp
call
pusha
xor
cltd
cltd
add
sbb
xchg
or
lea
sub
adc
lea
and
mov
mov
test
mov
xchg
not
xchg
jmp
inc
ret
mov
xor
nop
mov
add
not
xor
not
cmp
lea
nop
add
mov
jmp
dec
inc
push
cpuid
and
and
shr
jmp
ret
add
jmp
or
sub
call
dec
inc
dec
inc
fwait
cld
lea
push
jmp
not
not
clc
nop
push
cld
push
not
not
push
push
jmp
xchg
mov
fwait
mov
xor
mov
not
mov
mov
nop
test
mov
add
ret
adc
add
sbb
sub
cmc
jmp
and
sub
push
mov
xchg
call
mov
jmp
mov
pop
push
mov
not
lea
pop
jmp
xor
mov
or
push
call
dec
stc
add
inc
call
not
cld
mov
lea
test
jmp
inc
mov
sahf
not
not
dec
inc
inc
dec
cld
imul
xchg
xchg
nop
fwait
lea
mov
not
not
nop
xchg
nop
cld
cld
cld
dec
jne
jmp
cld
sub
inc
mov
xchg
xchg
not
not
pop
not
.byte
